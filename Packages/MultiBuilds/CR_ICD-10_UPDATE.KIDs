KIDS Distribution saved on Jun 24, 2014@09:58:22
Clinical Reminders ICD-10 Update
**KIDS**:CLINICAL REMINDERS ICD-10 UPDATE 1.0^DG*5.3*862^GMPL*2.0*44^PXRM*2.0*26^

**INSTALL NAME**
CLINICAL REMINDERS ICD-10 UPDATE 1.0
"BLD",8574,0)
CLINICAL REMINDERS ICD-10 UPDATE 1.0^^1^3140624^y
"BLD",8574,6.3)
81
"BLD",8574,10,0)
^9.63^3^3
"BLD",8574,10,1,0)
DG*5.3*862^1
"BLD",8574,10,2,0)
GMPL*2.0*44^1
"BLD",8574,10,3,0)
PXRM*2.0*26^1
"BLD",8574,10,"B","DG*5.3*862",1)

"BLD",8574,10,"B","GMPL*2.0*44",2)

"BLD",8574,10,"B","PXRM*2.0*26",3)

"BLD",8574,"KRN",0)
^9.67PA^779.2^20
"BLD",8574,"KRN",.4,0)
.4
"BLD",8574,"KRN",.401,0)
.401
"BLD",8574,"KRN",.402,0)
.402
"BLD",8574,"KRN",.403,0)
.403
"BLD",8574,"KRN",.5,0)
.5
"BLD",8574,"KRN",.84,0)
.84
"BLD",8574,"KRN",3.6,0)
3.6
"BLD",8574,"KRN",3.8,0)
3.8
"BLD",8574,"KRN",9.2,0)
9.2
"BLD",8574,"KRN",9.8,0)
9.8
"BLD",8574,"KRN",19,0)
19
"BLD",8574,"KRN",19.1,0)
19.1
"BLD",8574,"KRN",101,0)
101
"BLD",8574,"KRN",409.61,0)
409.61
"BLD",8574,"KRN",771,0)
771
"BLD",8574,"KRN",779.2,0)
779.2
"BLD",8574,"KRN",870,0)
870
"BLD",8574,"KRN",8989.51,0)
8989.51
"BLD",8574,"KRN",8989.52,0)
8989.52
"BLD",8574,"KRN",8994,0)
8994
"BLD",8574,"KRN","B",.4,.4)

"BLD",8574,"KRN","B",.401,.401)

"BLD",8574,"KRN","B",.402,.402)

"BLD",8574,"KRN","B",.403,.403)

"BLD",8574,"KRN","B",.5,.5)

"BLD",8574,"KRN","B",.84,.84)

"BLD",8574,"KRN","B",3.6,3.6)

"BLD",8574,"KRN","B",3.8,3.8)

"BLD",8574,"KRN","B",9.2,9.2)

"BLD",8574,"KRN","B",9.8,9.8)

"BLD",8574,"KRN","B",19,19)

"BLD",8574,"KRN","B",19.1,19.1)

"BLD",8574,"KRN","B",101,101)

"BLD",8574,"KRN","B",409.61,409.61)

"BLD",8574,"KRN","B",771,771)

"BLD",8574,"KRN","B",779.2,779.2)

"BLD",8574,"KRN","B",870,870)

"BLD",8574,"KRN","B",8989.51,8989.51)

"BLD",8574,"KRN","B",8989.52,8989.52)

"BLD",8574,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
DG*5.3*862
"BLD",8562,0)
DG*5.3*862^REGISTRATION^0^3140624^y
"BLD",8562,1,0)
^^3^3^3121016^^^
"BLD",8562,1,1,0)
This build makes the ICD-10 changes to PTF for the Clinical Reminders
"BLD",8562,1,2,0)
Index.
"BLD",8562,1,3,0)

"BLD",8562,6)
17^
"BLD",8562,6.3)
138
"BLD",8562,"ABPKG")
n
"BLD",8562,"INI")

"BLD",8562,"INID")
^^
"BLD",8562,"INIT")
POST^DG53862I
"BLD",8562,"KRN",0)
^9.67PA^779.2^20
"BLD",8562,"KRN",.4,0)
.4
"BLD",8562,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",8562,"KRN",.401,0)
.401
"BLD",8562,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",8562,"KRN",.402,0)
.402
"BLD",8562,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",8562,"KRN",.403,0)
.403
"BLD",8562,"KRN",.403,"NM",0)
^9.68A^^
"BLD",8562,"KRN",.5,0)
.5
"BLD",8562,"KRN",.84,0)
.84
"BLD",8562,"KRN",3.6,0)
3.6
"BLD",8562,"KRN",3.8,0)
3.8
"BLD",8562,"KRN",9.2,0)
9.2
"BLD",8562,"KRN",9.8,0)
9.8
"BLD",8562,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8562,"KRN",9.8,"NM",1,0)
DGPTDDCR^^0^B88922399
"BLD",8562,"KRN",9.8,"NM",2,0)
DG53862I^^0^B108880036
"BLD",8562,"KRN",9.8,"NM","B","DG53862I",2)

"BLD",8562,"KRN",9.8,"NM","B","DGPTDDCR",1)

"BLD",8562,"KRN",19,0)
19
"BLD",8562,"KRN",19,"NM",0)
^9.68A^^
"BLD",8562,"KRN",19.1,0)
19.1
"BLD",8562,"KRN",101,0)
101
"BLD",8562,"KRN",409.61,0)
409.61
"BLD",8562,"KRN",771,0)
771
"BLD",8562,"KRN",779.2,0)
779.2
"BLD",8562,"KRN",870,0)
870
"BLD",8562,"KRN",8989.51,0)
8989.51
"BLD",8562,"KRN",8989.52,0)
8989.52
"BLD",8562,"KRN",8994,0)
8994
"BLD",8562,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",8562,"KRN","B",.4,.4)

"BLD",8562,"KRN","B",.401,.401)

"BLD",8562,"KRN","B",.402,.402)

"BLD",8562,"KRN","B",.403,.403)

"BLD",8562,"KRN","B",.5,.5)

"BLD",8562,"KRN","B",.84,.84)

"BLD",8562,"KRN","B",3.6,3.6)

"BLD",8562,"KRN","B",3.8,3.8)

"BLD",8562,"KRN","B",9.2,9.2)

"BLD",8562,"KRN","B",9.8,9.8)

"BLD",8562,"KRN","B",19,19)

"BLD",8562,"KRN","B",19.1,19.1)

"BLD",8562,"KRN","B",101,101)

"BLD",8562,"KRN","B",409.61,409.61)

"BLD",8562,"KRN","B",771,771)

"BLD",8562,"KRN","B",779.2,779.2)

"BLD",8562,"KRN","B",870,870)

"BLD",8562,"KRN","B",8989.51,8989.51)

"BLD",8562,"KRN","B",8989.52,8989.52)

"BLD",8562,"KRN","B",8994,8994)

"BLD",8562,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8562,"QUES",0)
^9.62^^
"BLD",8562,"REQB",0)
^9.611^2^2
"BLD",8562,"REQB",1,0)
LEX*2.0*80^2
"BLD",8562,"REQB",2,0)
DG*5.3*478^2
"BLD",8562,"REQB","B","DG*5.3*478",2)

"BLD",8562,"REQB","B","LEX*2.0*80",1)

"INIT")
POST^DG53862I
"MBREQ")
1
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
862^3140624
"PKG",114,22,1,"PAH",1,1,0)
^^3^3^3140624
"PKG",114,22,1,"PAH",1,1,1,0)
This build makes the ICD-10 changes to PTF for the Clinical Reminders
"PKG",114,22,1,"PAH",1,1,2,0)
Index.
"PKG",114,22,1,"PAH",1,1,3,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53862I")
0^2^B108880036
"RTN","DG53862I",1,0)
DG53862I ; SLC/PKR - Update cross-references for Clinical Reminders Index. ;04/18/2014
"RTN","DG53862I",2,0)
 ;;5.3;Registration;**862**;Aug 13, 1993;Build 138
"RTN","DG53862I",3,0)
 ;
"RTN","DG53862I",4,0)
 Q
"RTN","DG53862I",5,0)
 ;===========================================
"RTN","DG53862I",6,0)
AWRITE(REF) ;Write all the descendants of the array.
"RTN","DG53862I",7,0)
 N DONE,IND,LEN,LN,PROOT,ROOT,START,TEMP,TEXT
"RTN","DG53862I",8,0)
 I REF="" Q
"RTN","DG53862I",9,0)
 S LN=0
"RTN","DG53862I",10,0)
 S PROOT=$P(REF,")",1)
"RTN","DG53862I",11,0)
 ;Build the root so we can tell when we are done.
"RTN","DG53862I",12,0)
 S TEMP=$NA(@REF)
"RTN","DG53862I",13,0)
 S ROOT=$P(TEMP,")",1)
"RTN","DG53862I",14,0)
 S REF=$Q(@REF)
"RTN","DG53862I",15,0)
 I REF'[ROOT Q
"RTN","DG53862I",16,0)
 S DONE=0
"RTN","DG53862I",17,0)
 F  Q:(REF="")!(DONE)  D
"RTN","DG53862I",18,0)
 . S START=$F(REF,ROOT)
"RTN","DG53862I",19,0)
 . S LEN=$L(REF)
"RTN","DG53862I",20,0)
 . S IND=$E(REF,START,LEN)
"RTN","DG53862I",21,0)
 . S LN=LN+1,TEXT(LN)=PROOT_IND_"="_@REF
"RTN","DG53862I",22,0)
 . S REF=$Q(@REF)
"RTN","DG53862I",23,0)
 . I REF'[ROOT S DONE=1
"RTN","DG53862I",24,0)
 D MES^XPDUTL(.TEXT)
"RTN","DG53862I",25,0)
 Q
"RTN","DG53862I",26,0)
 ;
"RTN","DG53862I",27,0)
 ;===========================================
"RTN","DG53862I",28,0)
CPTFXR ;Create all the cross-references.
"RTN","DG53862I",29,0)
 D BMES^XPDUTL("Creating Clinical Reminders Index cross-references.")
"RTN","DG53862I",30,0)
 D CPTFDXR
"RTN","DG53862I",31,0)
 D CPTFPXR
"RTN","DG53862I",32,0)
 Q
"RTN","DG53862I",33,0)
 ;
"RTN","DG53862I",34,0)
 ;===========================================
"RTN","DG53862I",35,0)
CPTFDXR ;Update cross-references for PTF ICD diagnosis data.
"RTN","DG53862I",36,0)
 ;Fields: 45,79; 45,80; 45,79.16 45,79.17; 45,79.18;
"RTN","DG53862I",37,0)
 ;45,79.19; 45,79.201; 45,79.21; 45,79.22; 45,79.22; 45.79.23;
"RTN","DG53862I",38,0)
 ;45,79.24; 45,79.241; 45,79.242; 45,79.243; 45,79.244
"RTN","DG53862I",39,0)
 ;By name these nodes are: DXLS, PRINCIPAL DIAGNOSIS, SECONDARY
"RTN","DG53862I",40,0)
 ;DIAGNOSIS 1, through SECONDARY DIAGNOSIS 12.
"RTN","DG53862I",41,0)
 N FIELD,IND,MSG,NAME,NODE,ONAME,RESULT,XREF
"RTN","DG53862I",42,0)
 D BMES^XPDUTL("Creating PTF ICD diagnosis cross-references.")
"RTN","DG53862I",43,0)
 ;Set the XREF nodes that are the same for all cross-references.
"RTN","DG53862I",44,0)
 S XREF("FILE")=45
"RTN","DG53862I",45,0)
 S XREF("ROOT FILE")=45
"RTN","DG53862I",46,0)
 S XREF("TYPE")="MU"
"RTN","DG53862I",47,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for ICD diagnosis code lookup."
"RTN","DG53862I",48,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","DG53862I",49,0)
 S XREF("DESCR",2)="all patients with a particular ICD diagnosis code and one for finding all"
"RTN","DG53862I",50,0)
 S XREF("DESCR",3)="the ICD diagnosis codes a patient has."
"RTN","DG53862I",51,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders Index global as:"
"RTN","DG53862I",52,0)
 S XREF("DESCR",5)=" ^PXRMINDX(45,CODESYS,""INP"",CODE,NAME,DFN,DATE,DAS) and"
"RTN","DG53862I",53,0)
 S XREF("DESCR",6)=" ^PXRMINDX(45,CODESYS,""PNI"",DFN,NAME,CODE,DATE,DAS)"
"RTN","DG53862I",54,0)
 S XREF("DESCR",7)="respectively."
"RTN","DG53862I",55,0)
 S XREF("DESCR",8)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","DG53862I",56,0)
 S XREF("DESCR",9)="DATE is the discharge date. If it does not"
"RTN","DG53862I",57,0)
 S XREF("DESCR",10)="exist then the admission date is used."
"RTN","DG53862I",58,0)
 S XREF("EXECUTION")="R"
"RTN","DG53862I",59,0)
 S XREF("ACTIVITY")="IR"
"RTN","DG53862I",60,0)
 S XREF("VAL",1)=.01
"RTN","DG53862I",61,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53862I",62,0)
 S XREF("VAL",2)=2
"RTN","DG53862I",63,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53862I",64,0)
 S XREF("VAL",3)=11
"RTN","DG53862I",65,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","DG53862I",66,0)
 S XREF("VAL",5)=70
"RTN","DG53862I",67,0)
 ;
"RTN","DG53862I",68,0)
 ;These XREF nodes change for each cross-reference.
"RTN","DG53862I",69,0)
 S XREF("DESCR",11)="NAME is the name of the field where the code is stored. An example is DXLS."
"RTN","DG53862I",70,0)
 S XREF("DESCR",12)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53862I",71,0)
 S XREF("DESCR",13)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",72,0)
 S XREF("NAME")="ACRDDXLS"
"RTN","DG53862I",73,0)
 S XREF("VAL",4)=79
"RTN","DG53862I",74,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53862I",75,0)
 S XREF("SET")="D SPTFDD^DGPTDDCR(.X,.DA,""DXLS"")"
"RTN","DG53862I",76,0)
 S XREF("KILL")="D KPTFDD^DGPTDDCR(.X,.DA,""DXLS"")"
"RTN","DG53862I",77,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",78,0)
 D DELIXN^DDMOD(45,"ACR9DXLS","","MSG")
"RTN","DG53862I",79,0)
 D DELIXN^DDMOD(45,XREF("NAME"),"","MSG")
"RTN","DG53862I",80,0)
 K MSG
"RTN","DG53862I",81,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","DG53862I",82,0)
 I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",83,0)
 ;
"RTN","DG53862I",84,0)
 S XREF("DESCR",11)="NAME is the name of the field where the code is stored. An example is PDX."
"RTN","DG53862I",85,0)
 S XREF("DESCR",12)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53862I",86,0)
 S XREF("DESCR",13)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",87,0)
 S XREF("NAME")="ACRDPDX"
"RTN","DG53862I",88,0)
 S XREF("VAL",4)=80
"RTN","DG53862I",89,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53862I",90,0)
 S XREF("SET")="D SPTFDD^DGPTDDCR(.X,.DA,""PDX"")"
"RTN","DG53862I",91,0)
 S XREF("KILL")="D KPTFDD^DGPTDDCR(.X,.DA,""PDX"")"
"RTN","DG53862I",92,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",93,0)
 D DELIXN^DDMOD(45,"ACR9PDX","","MSG")
"RTN","DG53862I",94,0)
 D DELIXN^DDMOD(45,XREF("NAME"),"","MSG")
"RTN","DG53862I",95,0)
 K MSG
"RTN","DG53862I",96,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","DG53862I",97,0)
 I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",98,0)
 ;
"RTN","DG53862I",99,0)
 S IND=0
"RTN","DG53862I",100,0)
 F FIELD=79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24,79.241,79.242,79.243,79.244 D
"RTN","DG53862I",101,0)
 . S IND=IND+1
"RTN","DG53862I",102,0)
 . S XREF("DESCR",11)="NAME is the name of the field where the code is stored. An example is D SD"_IND_", where D SD signifies it is a discharge secondary diagnosis."
"RTN","DG53862I",103,0)
 . S XREF("DESCR",12)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53862I",104,0)
 . S XREF("DESCR",13)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",105,0)
 . S NAME="SD"_IND
"RTN","DG53862I",106,0)
 . S NODE="D "_NAME
"RTN","DG53862I",107,0)
 . S ONAME="ACR9D"_NAME
"RTN","DG53862I",108,0)
 . S XREF("NAME")="ACRD"_NAME
"RTN","DG53862I",109,0)
 . S XREF("VAL",4)=FIELD
"RTN","DG53862I",110,0)
 . S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53862I",111,0)
 . S XREF("SET")="D SPTFDD^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53862I",112,0)
 . S XREF("KILL")="D KPTFDD^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53862I",113,0)
 .;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",114,0)
 . D DELIXN^DDMOD(45,ONAME,"","","MSG")
"RTN","DG53862I",115,0)
 . D DELIXN^DDMOD(45,XREF("NAME"),"","","MSG")
"RTN","DG53862I",116,0)
 . K MSG
"RTN","DG53862I",117,0)
 . D CREIXN^DDMOD(.XREF,"W",.RESULT,"","MSG")
"RTN","DG53862I",118,0)
 . I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",119,0)
 ;
"RTN","DG53862I",120,0)
 ;Add the movement nodes.
"RTN","DG53862I",121,0)
 K XREF("VAL")
"RTN","DG53862I",122,0)
 S XREF("ROOT FILE")=45.02
"RTN","DG53862I",123,0)
 S XREF("VAL",1)=10
"RTN","DG53862I",124,0)
 S XREF("DESCR",7)="respectively."
"RTN","DG53862I",125,0)
 S XREF("DESCR",8)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","DG53862I",126,0)
 S XREF("DESCR",9)="DATE is the movement date."
"RTN","DG53862I",127,0)
 S XREF("DESCR",11)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53862I",128,0)
 S XREF("DESCR",12)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",129,0)
 K XREF("DESCR",13)
"RTN","DG53862I",130,0)
 S IND=0
"RTN","DG53862I",131,0)
 F FIELD=5,6,7,8,9,11,12,13,14,15 D
"RTN","DG53862I",132,0)
 . S IND=IND+1
"RTN","DG53862I",133,0)
 . S XREF("DESCR",10)="NAME is the name of the field where the code is stored. An example is M ICD"_IND_", where M signifies it is a movement diagnosis."
"RTN","DG53862I",134,0)
 . S NAME="ICD"_IND
"RTN","DG53862I",135,0)
 . S NODE="M "_NAME
"RTN","DG53862I",136,0)
 . S ONAME="ACR9M"_NAME
"RTN","DG53862I",137,0)
 . S XREF("NAME")="ACRDM"_IND
"RTN","DG53862I",138,0)
 . S XREF("VAL",2)=FIELD
"RTN","DG53862I",139,0)
 . S XREF("VAL",2,"SUBSCRIPT")=1
"RTN","DG53862I",140,0)
 . S XREF("SET")="D SPTFMD^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53862I",141,0)
 . S XREF("KILL")="D KPTFMD^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53862I",142,0)
 .;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",143,0)
 . D DELIXN^DDMOD(45,ONAME,"","","MSG")
"RTN","DG53862I",144,0)
 . D DELIXN^DDMOD(45,XREF("NAME"),"","","MSG")
"RTN","DG53862I",145,0)
 . K MSG
"RTN","DG53862I",146,0)
 . D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","DG53862I",147,0)
 . I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",148,0)
 Q
"RTN","DG53862I",149,0)
 ;
"RTN","DG53862I",150,0)
 ;===========================================
"RTN","DG53862I",151,0)
CPTFPXR ;Update cross-references for PTF ICD procedure data.
"RTN","DG53862I",152,0)
 ;For node 401 surgery node:
"RTN","DG53862I",153,0)
 ;Fields: 45.01,8; 45.01,9; 45.01,10; 45.01,11; 45.01,12
"RTN","DG53862I",154,0)
 ;For node 601, procedure node:
"RTN","DG53862I",155,0)
 ;Fields: 45.05,4; 45.05,5; 45.05,6; 45.05,7; 45.05,8
"RTN","DG53862I",156,0)
 N IND,MSG,NAME,NODE,ONAME,NODENUM,RESULT,XREF
"RTN","DG53862I",157,0)
 D BMES^XPDUTL("Creating PTF ICD procedure cross-references.")
"RTN","DG53862I",158,0)
 ;Set the XREF nodes that are the same for all cross-references.
"RTN","DG53862I",159,0)
 S XREF("FILE")=45
"RTN","DG53862I",160,0)
 S XREF("TYPE")="MU"
"RTN","DG53862I",161,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for ICD procedure code lookup."
"RTN","DG53862I",162,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","DG53862I",163,0)
 S XREF("DESCR",2)="all patients with a particular ICD procedure code and one for finding all"
"RTN","DG53862I",164,0)
 S XREF("DESCR",3)="the ICD procedure codes a patient has."
"RTN","DG53862I",165,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders Index global as:"
"RTN","DG53862I",166,0)
 S XREF("DESCR",5)=" ^PXRMINDX(45,CODESYS,""INP"",CODE,NODE,DFN,DATE,DAS) and"
"RTN","DG53862I",167,0)
 S XREF("DESCR",6)=" ^PXRMINDX(45,CODESYS,""PNI"",DFN,NODE,CODE,DATE,DAS)"
"RTN","DG53862I",168,0)
 S XREF("DESCR",7)="respectively."
"RTN","DG53862I",169,0)
 S XREF("DESCR",8)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","DG53862I",170,0)
 S XREF("DESCR",9)="DATE is the surgery/procedure date."
"RTN","DG53862I",171,0)
 S XREF("USE")="ACTION"
"RTN","DG53862I",172,0)
 S XREF("EXECUTION")="R"
"RTN","DG53862I",173,0)
 S XREF("ACTIVITY")="IR"
"RTN","DG53862I",174,0)
 ;
"RTN","DG53862I",175,0)
 ;These XREF nodes change for each cross-reference.
"RTN","DG53862I",176,0)
 S XREF("ROOT FILE")=45.01
"RTN","DG53862I",177,0)
 S XREF("VAL",1)=.01
"RTN","DG53862I",178,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53862I",179,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53862I",180,0)
 S IND=0,NODE="S"
"RTN","DG53862I",181,0)
 S XREF("DESCR",10)="NODE is S (for surgery) followed by operation code number. For example,"
"RTN","DG53862I",182,0)
 S XREF("DESCR",12)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",183,0)
 F NODENUM=8,9,10,11,12 D
"RTN","DG53862I",184,0)
 . S IND=IND+1
"RTN","DG53862I",185,0)
 . S XREF("DESCR",11)=NODE_IND_" means it was found on the S node and it was Operation Code "_IND_"."
"RTN","DG53862I",186,0)
 . S ONAME="ACR0S"_IND
"RTN","DG53862I",187,0)
 . S XREF("NAME")="ACRPS"_IND
"RTN","DG53862I",188,0)
 . S XREF("VAL",2)=NODENUM
"RTN","DG53862I",189,0)
 . S XREF("SET")="D SPTFP^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53862I",190,0)
 . S XREF("KILL")="D KPTFP^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53862I",191,0)
 .;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",192,0)
 . D DELIXN^DDMOD(45,ONAME,"","","MSG")
"RTN","DG53862I",193,0)
 . D DELIXN^DDMOD(45,XREF("NAME"),"","","MSG")
"RTN","DG53862I",194,0)
 . K MSG
"RTN","DG53862I",195,0)
 . D CREIXN^DDMOD(.XREF,"W",.RESULT,"","MSG")
"RTN","DG53862I",196,0)
 . I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",197,0)
 ;
"RTN","DG53862I",198,0)
 S XREF("ROOT FILE")=45.05
"RTN","DG53862I",199,0)
 S XREF("VAL",1)=.01
"RTN","DG53862I",200,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53862I",201,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53862I",202,0)
 S IND=0,NODE="P"
"RTN","DG53862I",203,0)
 S XREF("DESCR",10)="NODE is P (for procedure) followed by procedure code number. For example,"
"RTN","DG53862I",204,0)
 S XREF("DESCR",12)="For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53862I",205,0)
 F NODENUM=4,5,6,7,8 D
"RTN","DG53862I",206,0)
 . S IND=IND+1
"RTN","DG53862I",207,0)
 . S XREF("DESCR",11)=NODE_IND_" means it was found on the P node and it was Procedure Code "_IND_"."
"RTN","DG53862I",208,0)
 . S ONAME="ACR0P"_IND
"RTN","DG53862I",209,0)
 . S XREF("NAME")="ACRPP"_IND
"RTN","DG53862I",210,0)
 . S XREF("VAL",2)=NODENUM
"RTN","DG53862I",211,0)
 . S XREF("SET")="D SPTFP^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53862I",212,0)
 . S XREF("KILL")="D KPTFP^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53862I",213,0)
 .;Remove any existing cross-references before creating the new one.
"RTN","DG53862I",214,0)
 . D DELIXN^DDMOD(45,ONAME,"","","MSG")
"RTN","DG53862I",215,0)
 . D DELIXN^DDMOD(45,XREF("NAME"),"","","MSG")
"RTN","DG53862I",216,0)
 . K MSG
"RTN","DG53862I",217,0)
 . D CREIXN^DDMOD(.XREF,"W",.RESULT,"","MSG")
"RTN","DG53862I",218,0)
 . I RESULT="" D DCERRMSG^DG53862I(.MSG,.XREF)
"RTN","DG53862I",219,0)
 Q
"RTN","DG53862I",220,0)
 ;
"RTN","DG53862I",221,0)
 ;===========================================
"RTN","DG53862I",222,0)
DCERRMSG(MSG,XREF) ;Display cross-reference creation errors.
"RTN","DG53862I",223,0)
 D BMES^XPDUTL("A cross-reference could not be created. The error message is:")
"RTN","DG53862I",224,0)
 D AWRITE^DG53862I("MSG")
"RTN","DG53862I",225,0)
 D BMES^XPDUTL("Cross-reference information:")
"RTN","DG53862I",226,0)
 D AWRITE^DG53862I("XREF")
"RTN","DG53862I",227,0)
 Q
"RTN","DG53862I",228,0)
 ;
"RTN","DG53862I",229,0)
 ;===========================================
"RTN","DG53862I",230,0)
POST ;Post-init
"RTN","DG53862I",231,0)
 ;Update the cross-references.
"RTN","DG53862I",232,0)
 D CPTFXR^DG53862I
"RTN","DG53862I",233,0)
 ;Rebuild the Index in the new format.
"RTN","DG53862I",234,0)
 D REINDEX^DG53862I
"RTN","DG53862I",235,0)
 Q
"RTN","DG53862I",236,0)
 ;
"RTN","DG53862I",237,0)
 ;===========================================
"RTN","DG53862I",238,0)
REINDEX ;Rebuild the PTF portion of the Clinical Reminders Index.
"RTN","DG53862I",239,0)
 N TEXT,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","DG53862I",240,0)
 ;If the Index has already been restructured don't do it again.
"RTN","DG53862I",241,0)
 I $D(^PXRMINDX(45,"ICD")),$D(^PXRMINDX(45,"DATE BUILT")) D
"RTN","DG53862I",242,0)
 . S TEXT(1)="The PTF Index has already been rebuilt, skipping another rebuild."
"RTN","DG53862I",243,0)
 I $D(^PXRMINDX(45,"ICD")),'$D(^PXRMINDX(45,"DATE BUILT")) D
"RTN","DG53862I",244,0)
 . S TEXT(1)="The PTF Index has been partially rebuilt; not starting another rebuild in case a rebuild is in progress."
"RTN","DG53862I",245,0)
 . S TEXT(2)="Please make sure the Index is completely rebuilt."
"RTN","DG53862I",246,0)
 I $D(TEXT(1)) D BMES^XPDUTL(.TEXT) Q
"RTN","DG53862I",247,0)
 S ZTRTN="INDEX^DGPTDDCR"
"RTN","DG53862I",248,0)
 S ZTDESC="PTF Clinical Reminders Index rebuild"
"RTN","DG53862I",249,0)
 S ZTDTH=$H
"RTN","DG53862I",250,0)
 S ZTIO=""
"RTN","DG53862I",251,0)
 D ^%ZTLOAD
"RTN","DG53862I",252,0)
 S TEXT(1)="PTF Clinical Reminders Index rebuild queued."
"RTN","DG53862I",253,0)
 S TEXT(2)="The task number is "_ZTSK_"."
"RTN","DG53862I",254,0)
 D MES^XPDUTL(.TEXT)
"RTN","DG53862I",255,0)
 Q
"RTN","DG53862I",256,0)
 ;
"RTN","DGPTDDCR")
0^1^B88922399
"RTN","DGPTDDCR",1,0)
DGPTDDCR ;SLC/PKR - Routines for setting and killing Clinical Reminders Index. ;06/19/2014
"RTN","DGPTDDCR",2,0)
 ;;5.3;Registration;**478,862**;Aug 13, 1993;Build 138
"RTN","DGPTDDCR",3,0)
 ;=============================================
"RTN","DGPTDDCR",4,0)
 ;The structure of the Index is:
"RTN","DGPTDDCR",5,0)
 ; ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE/TIME,DAS)
"RTN","DGPTDDCR",6,0)
 ; ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE/TIME,DAS)
"RTN","DGPTDDCR",7,0)
 ;where code is the actual code and not a pointer.
"RTN","DGPTDDCR",8,0)
 ;
"RTN","DGPTDDCR",9,0)
 ;DBIA #4114 covers setting and killing of ^PXRMINDX(45).
"RTN","DGPTDDCR",10,0)
 ;DBIA #5747 covers references to ^ICDEX entry points.
"RTN","DGPTDDCR",11,0)
 ;
"RTN","DGPTDDCR",12,0)
 ;=============================================
"RTN","DGPTDDCR",13,0)
INDEX ;Build all the indexes for PTF.
"RTN","DGPTDDCR",14,0)
 N ADMDT,CC,CODE,CODEP,CODESYS,D1,DA,DAS,DATE,DFN,END,ENTRIES,ETEXT
"RTN","DGPTDDCR",15,0)
 N GLOBAL,IND,JND,KND,NERROR,NODE,START
"RTN","DGPTDDCR",16,0)
 N TEMP0,TEMP70,TEMP71,TEMPP,TEMPS,TENP,TEXT,TOTAL
"RTN","DGPTDDCR",17,0)
 ;DBIA #4114
"RTN","DGPTDDCR",18,0)
 ;Don't leave any old stuff around.
"RTN","DGPTDDCR",19,0)
 K ^PXRMINDX(45)
"RTN","DGPTDDCR",20,0)
 S GLOBAL=$$GET1^DID(45,"","","GLOBAL NAME")
"RTN","DGPTDDCR",21,0)
 S ENTRIES=$P(^DGPT(0),U,4)
"RTN","DGPTDDCR",22,0)
 S TENP=ENTRIES/10
"RTN","DGPTDDCR",23,0)
 S TENP=+$P(TENP,".",1)
"RTN","DGPTDDCR",24,0)
 I TENP<1 S TENP=1
"RTN","DGPTDDCR",25,0)
 D BMES^XPDUTL("Building indexes for DGPT")
"RTN","DGPTDDCR",26,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","DGPTDDCR",27,0)
 D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",28,0)
 S START=$H
"RTN","DGPTDDCR",29,0)
 ;Initialize the ICD coding system variable.
"RTN","DGPTDDCR",30,0)
 S CODESYS=""
"RTN","DGPTDDCR",31,0)
 ;DBIA #5679
"RTN","DGPTDDCR",32,0)
 F  S CODESYS=$$NXSAB^LEXU(CODESYS,0) Q:CODESYS=""  I $P($$CSYS^LEXU(CODESYS),U,4)["ICD" S CC(CODESYS)=0
"RTN","DGPTDDCR",33,0)
 S (DA,IND,NERROR)=0
"RTN","DGPTDDCR",34,0)
 F  S DA=+$O(^DGPT(DA)) Q:DA=0  D
"RTN","DGPTDDCR",35,0)
 .;Make sure the 0 node is defined.
"RTN","DGPTDDCR",36,0)
 . I '$D(^DGPT(DA,0)) D  Q
"RTN","DGPTDDCR",37,0)
 .. S ETEXT="IEN "_DA_" is missing the 0 node."
"RTN","DGPTDDCR",38,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",39,0)
 .;Save the admission date.
"RTN","DGPTDDCR",40,0)
 . S ADMDT=$P(^DGPT(DA,0),U,2)
"RTN","DGPTDDCR",41,0)
 . I ADMDT="" D  Q
"RTN","DGPTDDCR",42,0)
 .. S ETEXT="IEN "_DA_" is missing the Admission Date which is a required field."
"RTN","DGPTDDCR",43,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",44,0)
 . S IND=IND+1
"RTN","DGPTDDCR",45,0)
 . I IND#TENP=0 D
"RTN","DGPTDDCR",46,0)
 .. S TEXT="Processing entry "_IND
"RTN","DGPTDDCR",47,0)
 .. D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",48,0)
 . I IND#10000=0 W "."
"RTN","DGPTDDCR",49,0)
 . S TEMP0=$G(^DGPT(DA,0))
"RTN","DGPTDDCR",50,0)
 .;Census records are not indexed.
"RTN","DGPTDDCR",51,0)
 . I $P(TEMP0,U,11)=2 Q
"RTN","DGPTDDCR",52,0)
 . S DFN=$P(TEMP0,U,1)
"RTN","DGPTDDCR",53,0)
 . I DFN="" D  Q
"RTN","DGPTDDCR",54,0)
 .. S ETEXT=DA_" no patient"
"RTN","DGPTDDCR",55,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",56,0)
 .;Check the surgery node.
"RTN","DGPTDDCR",57,0)
 . S D1=0
"RTN","DGPTDDCR",58,0)
 . F  S D1=+$O(^DGPT(DA,"S",D1)) Q:D1=0  D
"RTN","DGPTDDCR",59,0)
 .. S TEMPS=$G(^DGPT(DA,"S",D1,0))
"RTN","DGPTDDCR",60,0)
 .. S DATE=$P(TEMPS,U,1)
"RTN","DGPTDDCR",61,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",62,0)
 ... S ETEXT=DA_" S node missing date"
"RTN","DGPTDDCR",63,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",64,0)
 .. S DAS=DA_";S;"_D1_";0"
"RTN","DGPTDDCR",65,0)
 .. S KND=0
"RTN","DGPTDDCR",66,0)
 .. F JND=8,9,10,11,12 D
"RTN","DGPTDDCR",67,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",68,0)
 ... S NODE="S"_KND
"RTN","DGPTDDCR",69,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",70,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",71,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",72,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",73,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",74,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",75,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",76,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",77,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",78,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",79,0)
 .;
"RTN","DGPTDDCR",80,0)
 .;Check the procedure node.
"RTN","DGPTDDCR",81,0)
 . S D1=0
"RTN","DGPTDDCR",82,0)
 . F  S D1=+$O(^DGPT(DA,"P",D1)) Q:D1=0  D
"RTN","DGPTDDCR",83,0)
 .. S TEMPP=$G(^DGPT(DA,"P",D1,0))
"RTN","DGPTDDCR",84,0)
 .. S DATE=$P(TEMPP,U,1)
"RTN","DGPTDDCR",85,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",86,0)
 ... S ETEXT=DA_" P node missing date"
"RTN","DGPTDDCR",87,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",88,0)
 .. S DAS=DA_";P;"_D1_";0"
"RTN","DGPTDDCR",89,0)
 .. S KND=0
"RTN","DGPTDDCR",90,0)
 .. F JND=5,6,7,8,9 D
"RTN","DGPTDDCR",91,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",92,0)
 ... S NODE="P"_KND
"RTN","DGPTDDCR",93,0)
 ... S CODEP=$P(TEMPP,U,JND)
"RTN","DGPTDDCR",94,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",95,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,CODEP)),U,3)
"RTN","DGPTDDCR",96,0)
 ... S CODE=$$CODEC^ICDEX(80.1,CODEP)
"RTN","DGPTDDCR",97,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",98,0)
 .... S ETEXT=DAS_" has the invalid code "_CODE
"RTN","DGPTDDCR",99,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",100,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",101,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",102,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",103,0)
 .;
"RTN","DGPTDDCR",104,0)
 .;Discharge ICD codes
"RTN","DGPTDDCR",105,0)
 . I $D(^DGPT(DA,70)) D
"RTN","DGPTDDCR",106,0)
 .. S TEMP70=$G(^DGPT(DA,70))
"RTN","DGPTDDCR",107,0)
 .. S TEMP71=$G(^DGPT(DA,71))
"RTN","DGPTDDCR",108,0)
 .. S DATE=$P(TEMP70,U,1)
"RTN","DGPTDDCR",109,0)
 .. I DATE="" S DATE=$P(TEMP0,U,2)
"RTN","DGPTDDCR",110,0)
 .. S DAS=DA_";70"
"RTN","DGPTDDCR",111,0)
 .. S CODEP=$P(TEMP70,U,10)
"RTN","DGPTDDCR",112,0)
 .. I CODEP'="" D
"RTN","DGPTDDCR",113,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",114,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",115,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",116,0)
 .... S ETEXT=DAS_" DXLS has the invalid code "_CODE
"RTN","DGPTDDCR",117,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",118,0)
 ... E  D
"RTN","DGPTDDCR",119,0)
 .... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",120,0)
 .... S ^PXRMINDX(45,CODESYS,"INP",CODE,"DXLS",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",121,0)
 .... S ^PXRMINDX(45,CODESYS,"PNI",DFN,"DXLS",CODE,DATE,DAS)=""
"RTN","DGPTDDCR",122,0)
 ..;
"RTN","DGPTDDCR",123,0)
 .. S CODEP=$P(TEMP70,U,11)
"RTN","DGPTDDCR",124,0)
 .. I CODEP'="" D
"RTN","DGPTDDCR",125,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",126,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",127,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",128,0)
 .... S ETEXT=DAS_" PDX has the invalid code "_CODE
"RTN","DGPTDDCR",129,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",130,0)
 ... E  D
"RTN","DGPTDDCR",131,0)
 .... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",132,0)
 .... S ^PXRMINDX(45,CODESYS,"INP",CODE,"PDX",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",133,0)
 .... S ^PXRMINDX(45,CODESYS,"PNI",DFN,"PDX",CODE,DATE,DAS)=""
"RTN","DGPTDDCR",134,0)
 ..;
"RTN","DGPTDDCR",135,0)
 ..;70 node secondary diagnosis
"RTN","DGPTDDCR",136,0)
 .. S KND=0
"RTN","DGPTDDCR",137,0)
 .. F JND=16,17,18,19,20,21,22,23,24 D
"RTN","DGPTDDCR",138,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",139,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",140,0)
 ... S CODEP=$P(TEMP70,U,JND)
"RTN","DGPTDDCR",141,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",142,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",143,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",144,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",145,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",146,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",147,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",148,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",149,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",150,0)
 ..;
"RTN","DGPTDDCR",151,0)
 ..;71 node secondary diagnosis
"RTN","DGPTDDCR",152,0)
 .. S KND=9
"RTN","DGPTDDCR",153,0)
 .. F JND=1,2,3,4 D
"RTN","DGPTDDCR",154,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",155,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",156,0)
 ... S CODEP=$P(TEMP71,U,JND)
"RTN","DGPTDDCR",157,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",158,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",159,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",160,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",161,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",162,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",163,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",164,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",165,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",166,0)
 ..;
"RTN","DGPTDDCR",167,0)
 .;Movement diagnosis codes
"RTN","DGPTDDCR",168,0)
 . I '$D(^DGPT(DA,"M")) Q
"RTN","DGPTDDCR",169,0)
 . S D1=0
"RTN","DGPTDDCR",170,0)
 . F  S D1=$O(^DGPT(DA,"M",D1)) Q:+D1=0  D
"RTN","DGPTDDCR",171,0)
 .. S TEMPS=$G(^DGPT(DA,"M",D1,0))
"RTN","DGPTDDCR",172,0)
 .. S DAS=DA_";M;"_D1
"RTN","DGPTDDCR",173,0)
 .. S DATE=$P(TEMPS,U,10)
"RTN","DGPTDDCR",174,0)
 ..;If the movement date is missing use the admission date.
"RTN","DGPTDDCR",175,0)
 .. I DATE="" S DATE=ADMDT
"RTN","DGPTDDCR",176,0)
 .. S KND=0
"RTN","DGPTDDCR",177,0)
 .. F JND=5,6,7,8,9,11,12,13,14,15 D
"RTN","DGPTDDCR",178,0)
 ... S CODEP=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",179,0)
 ... I CODEP="" Q
"RTN","DGPTDDCR",180,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",181,0)
 ... S NODE="M ICD"_KND
"RTN","DGPTDDCR",182,0)
 ... S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","DGPTDDCR",183,0)
 ... S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","DGPTDDCR",184,0)
 ... I +CODE=-1 D  Q
"RTN","DGPTDDCR",185,0)
 .... S ETEXT=DAS_" node has the invalid code "_CODE
"RTN","DGPTDDCR",186,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",187,0)
 ... S CC(CODESYS)=CC(CODESYS)+1
"RTN","DGPTDDCR",188,0)
 ... S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",189,0)
 ... S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",190,0)
 .;
"RTN","DGPTDDCR",191,0)
 S END=$H
"RTN","DGPTDDCR",192,0)
 S CODESYS="",TOTAL=0
"RTN","DGPTDDCR",193,0)
 F  S CODESYS=$O(CC(CODESYS)) Q:CODESYS=""  D
"RTN","DGPTDDCR",194,0)
 . S TOTAL=TOTAL+CC(CODESYS)
"RTN","DGPTDDCR",195,0)
 . S TEXT=CC(CODESYS)_" PTF "_CODESYS_" results indexed."
"RTN","DGPTDDCR",196,0)
 . D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",197,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","DGPTDDCR",198,0)
 ;If there were errors send a message.
"RTN","DGPTDDCR",199,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","DGPTDDCR",200,0)
 ;Send a MailMan message with the results.
"RTN","DGPTDDCR",201,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,TOTAL,NERROR)
"RTN","DGPTDDCR",202,0)
 S ^PXRMINDX(45,"GLOBAL NAME")=GLOBAL
"RTN","DGPTDDCR",203,0)
 S ^PXRMINDX(45,"BUILT BY")=DUZ
"RTN","DGPTDDCR",204,0)
 S ^PXRMINDX(45,"DATE BUILT")=$$NOW^XLFDT
"RTN","DGPTDDCR",205,0)
 Q
"RTN","DGPTDDCR",206,0)
 ;
"RTN","DGPTDDCR",207,0)
 ;=============================================
"RTN","DGPTDDCR",208,0)
KPTFDD(X,DA,NODE) ;Delete index for PTF discharge ICD diagnosis data.
"RTN","DGPTDDCR",209,0)
 ;X(1)=DFN, X(2)=ADMISSION DATE, X(3)=TYPE OF RECORD,
"RTN","DGPTDDCR",210,0)
 ;X(4)=ICD DIAGNOSIS, X(5)=DISCHARGE DATE
"RTN","DGPTDDCR",211,0)
 N CODE,CODESYS,DAS,DATE
"RTN","DGPTDDCR",212,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",213,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",214,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",215,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",216,0)
 S DAS=DA_";70"
"RTN","DGPTDDCR",217,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(4))),U,3)
"RTN","DGPTDDCR",218,0)
 S CODE=$$CODEC^ICDEX(80,X(4))
"RTN","DGPTDDCR",219,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,X(1),DATE,DAS)
"RTN","DGPTDDCR",220,0)
 K ^PXRMINDX(45,CODESYS,"PNI",X(1),NODE,CODE,DATE,DAS)
"RTN","DGPTDDCR",221,0)
 Q
"RTN","DGPTDDCR",222,0)
 ;
"RTN","DGPTDDCR",223,0)
 ;=============================================
"RTN","DGPTDDCR",224,0)
KPTFMD(X,DA,NODE) ;Delete index for PTF movement ICD diagnosis data.
"RTN","DGPTDDCR",225,0)
 ;X(1)=MOVEMENT DATE, X(2)=ICD DIAGNOSIS
"RTN","DGPTDDCR",226,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",227,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",228,0)
 N ADMDT,CODE,CODESYS,DAS,DFN,MDATE,TEMP
"RTN","DGPTDDCR",229,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",230,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",231,0)
 S ADMDT=$P(TEMP,U,2)
"RTN","DGPTDDCR",232,0)
 ;If the Movement Date is null use the Admission Date.
"RTN","DGPTDDCR",233,0)
 S MDATE=$S(X(1)="":ADMDT,1:X(1))
"RTN","DGPTDDCR",234,0)
 S DAS=DA(1)_";M;"_DA
"RTN","DGPTDDCR",235,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(2))),U,3)
"RTN","DGPTDDCR",236,0)
 S CODE=$$CODEC^ICDEX(80,X(2))
"RTN","DGPTDDCR",237,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,MDATE,DAS)
"RTN","DGPTDDCR",238,0)
 K ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,MDATE,DAS)
"RTN","DGPTDDCR",239,0)
 Q
"RTN","DGPTDDCR",240,0)
 ;
"RTN","DGPTDDCR",241,0)
 ;=============================================
"RTN","DGPTDDCR",242,0)
KPTFP(X,DA,NODE,NUM) ;Delete index entry for PTF ICD procedure data.
"RTN","DGPTDDCR",243,0)
 ;For node 401 surgery node:
"RTN","DGPTDDCR",244,0)
 ;X(1)=SURGERY/PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",245,0)
 ;For node 601, procedure node:
"RTN","DGPTDDCR",246,0)
 ;X(1)=PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",247,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",248,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",249,0)
 N DAS,DFN,NNAME,CSI
"RTN","DGPTDDCR",250,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",251,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",252,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";0"
"RTN","DGPTDDCR",253,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,X(2))),U,3)
"RTN","DGPTDDCR",254,0)
 S CODE=$$CODEC^ICDEX(80.1,X(2))
"RTN","DGPTDDCR",255,0)
 K ^PXRMINDX(45,CODESYS,"INP",CODE,NNAME,DFN,X(1),DAS)
"RTN","DGPTDDCR",256,0)
 K ^PXRMINDX(45,CODESYS,"PNI",DFN,NNAME,CODE,X(1),DAS)
"RTN","DGPTDDCR",257,0)
 Q
"RTN","DGPTDDCR",258,0)
 ;
"RTN","DGPTDDCR",259,0)
 ;=============================================
"RTN","DGPTDDCR",260,0)
SPTFDD(X,DA,NODE) ;Set index for PTF discharge ICD diagnoses.
"RTN","DGPTDDCR",261,0)
 ;X(1)=DFN, X(2)=ADMISSION DATE, X(3)=TYPE OF RECORD,
"RTN","DGPTDDCR",262,0)
 ;X(4)=ICD DIAGNOSIS, X(5)=DISCHARGE DATE
"RTN","DGPTDDCR",263,0)
 ;ICD9 from nodes: 45,79; 45,80; 45,79.16 45,79.17; 45,79.18;
"RTN","DGPTDDCR",264,0)
 ;45,79.19; 45,79.20; 45,79.21; 45,79.22; 45,79.22; 45.79.23;
"RTN","DGPTDDCR",265,0)
 ;45.79.24.
"RTN","DGPTDDCR",266,0)
 ;By name these nodes are: DXLS, PRINCIPAL DIAGNOSIS, SECONDARY
"RTN","DGPTDDCR",267,0)
 ;DIAGNOSIS 1 through SECONDARY DIAGNOSIS 13.
"RTN","DGPTDDCR",268,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",269,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",270,0)
 N CODE,CODESYS,DAS,DATE
"RTN","DGPTDDCR",271,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",272,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",273,0)
 S DAS=DA_";70"
"RTN","DGPTDDCR",274,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(4))),U,3)
"RTN","DGPTDDCR",275,0)
 S CODE=$$CODEC^ICDEX(80,X(4))
"RTN","DGPTDDCR",276,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,X(1),DATE,DAS)=""
"RTN","DGPTDDCR",277,0)
 S ^PXRMINDX(45,CODESYS,"PNI",X(1),NODE,CODE,DATE,DAS)=""
"RTN","DGPTDDCR",278,0)
 Q
"RTN","DGPTDDCR",279,0)
 ;
"RTN","DGPTDDCR",280,0)
 ;=============================================
"RTN","DGPTDDCR",281,0)
SPTFMD(X,DA,NODE) ;Set index for PTF movement ICD9 data.
"RTN","DGPTDDCR",282,0)
 ;X(1)=MOVEMENT DATE, X(2)=ICD DIAGNOSIS
"RTN","DGPTDDCR",283,0)
 ;ICD diagnosis from nodes: 45.02,5 45.02,6, 45.02,7 45.02,8 45.02,9
"RTN","DGPTDDCR",284,0)
 ;45.02,11 45.02,12 45.02,13 45.02,14 45.02,15
"RTN","DGPTDDCR",285,0)
 ;By name these nodes are: ICD 1, through ICD 10.
"RTN","DGPTDDCR",286,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",287,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",288,0)
 N ADMDT,CODE,CODESYS,DAS,DFN,MDATE,TEMP
"RTN","DGPTDDCR",289,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",290,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",291,0)
 S ADMDT=$P(TEMP,U,2)
"RTN","DGPTDDCR",292,0)
 ;If the Movement Date is null use the Admission Date.
"RTN","DGPTDDCR",293,0)
 S MDATE=$S(X(1)="":ADMDT,1:X(1))
"RTN","DGPTDDCR",294,0)
 S DAS=DA(1)_";M;"_DA
"RTN","DGPTDDCR",295,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(2))),U,3)
"RTN","DGPTDDCR",296,0)
 S CODE=$$CODEC^ICDEX(80,X(2))
"RTN","DGPTDDCR",297,0)
 S ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,MDATE,DAS)=""
"RTN","DGPTDDCR",298,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,MDATE,DAS)=""
"RTN","DGPTDDCR",299,0)
 Q
"RTN","DGPTDDCR",300,0)
 ;
"RTN","DGPTDDCR",301,0)
 ;=============================================
"RTN","DGPTDDCR",302,0)
SPTFP(X,DA,NODE,NUM) ;Set index for PTF ICD procedures.
"RTN","DGPTDDCR",303,0)
 ;For node 401 surgery node:
"RTN","DGPTDDCR",304,0)
 ;X(1)=SURGERY/PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",305,0)
 ;Procedure nodes: 45.01,8; 45.01,9; 45.01,10; 45.01,11; 45.01,12
"RTN","DGPTDDCR",306,0)
 ;For node 601, procedure node:
"RTN","DGPTDDCR",307,0)
 ;X(1)=PROCEDURE DATE, X(2)=ICD procedure
"RTN","DGPTDDCR",308,0)
 ;Procedure nodes: 45.05,4; 45.05,5; 45.05,6; 45.05,7; 45.05,8
"RTN","DGPTDDCR",309,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",310,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",311,0)
 N CODE,CODESYS,DAS,DFN,NNAME
"RTN","DGPTDDCR",312,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",313,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",314,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";0"
"RTN","DGPTDDCR",315,0)
 S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80.1,X(2))),U,3)
"RTN","DGPTDDCR",316,0)
 S CODE=$$CODEC^ICDEX(80.1,X(2))
"RTN","DGPTDDCR",317,0)
 S ^PXRMINDX(45,CODESYS,"INP",CODE,NNAME,DFN,X(1),DAS)=""
"RTN","DGPTDDCR",318,0)
 S ^PXRMINDX(45,CODESYS,"PNI",DFN,NNAME,CODE,X(1),DAS)=""
"RTN","DGPTDDCR",319,0)
 Q
"RTN","DGPTDDCR",320,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
GMPL*2.0*44
"BLD",8572,0)
GMPL*2.0*44^PROBLEM LIST^0^3140624^y
"BLD",8572,1,0)
^^3^3^3121022^^
"BLD",8572,1,1,0)
This build makes the ICD-10 changes to Problem List for the Clinical
"BLD",8572,1,2,0)
Reminders Index.
"BLD",8572,1,3,0)

"BLD",8572,4,0)
^9.64PA^^
"BLD",8572,6.3)
92
"BLD",8572,"INIT")
POST^GMPLP44I
"BLD",8572,"KRN",0)
^9.67PA^779.2^20
"BLD",8572,"KRN",.4,0)
.4
"BLD",8572,"KRN",.401,0)
.401
"BLD",8572,"KRN",.402,0)
.402
"BLD",8572,"KRN",.403,0)
.403
"BLD",8572,"KRN",.5,0)
.5
"BLD",8572,"KRN",.84,0)
.84
"BLD",8572,"KRN",3.6,0)
3.6
"BLD",8572,"KRN",3.8,0)
3.8
"BLD",8572,"KRN",9.2,0)
9.2
"BLD",8572,"KRN",9.8,0)
9.8
"BLD",8572,"KRN",9.8,"NM",0)
^9.68A^5^2
"BLD",8572,"KRN",9.8,"NM",4,0)
GMPLPXRM^^0^B41114026
"BLD",8572,"KRN",9.8,"NM",5,0)
GMPLP44I^^0^B86662145
"BLD",8572,"KRN",9.8,"NM","B","GMPLP44I",5)

"BLD",8572,"KRN",9.8,"NM","B","GMPLPXRM",4)

"BLD",8572,"KRN",19,0)
19
"BLD",8572,"KRN",19.1,0)
19.1
"BLD",8572,"KRN",101,0)
101
"BLD",8572,"KRN",409.61,0)
409.61
"BLD",8572,"KRN",771,0)
771
"BLD",8572,"KRN",779.2,0)
779.2
"BLD",8572,"KRN",870,0)
870
"BLD",8572,"KRN",8989.51,0)
8989.51
"BLD",8572,"KRN",8989.52,0)
8989.52
"BLD",8572,"KRN",8994,0)
8994
"BLD",8572,"KRN","B",.4,.4)

"BLD",8572,"KRN","B",.401,.401)

"BLD",8572,"KRN","B",.402,.402)

"BLD",8572,"KRN","B",.403,.403)

"BLD",8572,"KRN","B",.5,.5)

"BLD",8572,"KRN","B",.84,.84)

"BLD",8572,"KRN","B",3.6,3.6)

"BLD",8572,"KRN","B",3.8,3.8)

"BLD",8572,"KRN","B",9.2,9.2)

"BLD",8572,"KRN","B",9.8,9.8)

"BLD",8572,"KRN","B",19,19)

"BLD",8572,"KRN","B",19.1,19.1)

"BLD",8572,"KRN","B",101,101)

"BLD",8572,"KRN","B",409.61,409.61)

"BLD",8572,"KRN","B",771,771)

"BLD",8572,"KRN","B",779.2,779.2)

"BLD",8572,"KRN","B",870,870)

"BLD",8572,"KRN","B",8989.51,8989.51)

"BLD",8572,"KRN","B",8989.52,8989.52)

"BLD",8572,"KRN","B",8994,8994)

"BLD",8572,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8572,"QUES",0)
^9.62^^
"BLD",8572,"REQB",0)
^9.611^2^2
"BLD",8572,"REQB",1,0)
GMPL*2.0*43^2
"BLD",8572,"REQB",2,0)
LEX*2.0*80^2
"BLD",8572,"REQB","B","GMPL*2.0*43",1)

"BLD",8572,"REQB","B","LEX*2.0*80",2)

"INIT")
POST^GMPLP44I
"MBREQ")
1
"PKG",402,-1)
1^1
"PKG",402,0)
PROBLEM LIST^GMPL^Automated Patient Problem List
"PKG",402,20,0)
^9.402P^^
"PKG",402,22,0)
^9.49I^1^1
"PKG",402,22,1,0)
2.0^2940825^2941216
"PKG",402,22,1,"PAH",1,0)
44^3140624
"PKG",402,22,1,"PAH",1,1,0)
^^3^3^3140624
"PKG",402,22,1,"PAH",1,1,1,0)
This build makes the ICD-10 changes to Problem List for the Clinical
"PKG",402,22,1,"PAH",1,1,2,0)
Reminders Index.
"PKG",402,22,1,"PAH",1,1,3,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMPLP44I")
0^5^B86662145
"RTN","GMPLP44I",1,0)
GMPLP44I ; SLC/PKR - Update cross-references for Clinical Reminders Index. ;04/18/2014
"RTN","GMPLP44I",2,0)
 ;;2.0;Problem List;**44**;Aug 25, 1994;Build 92
"RTN","GMPLP44I",3,0)
 ;
"RTN","GMPLP44I",4,0)
 Q
"RTN","GMPLP44I",5,0)
 ;===========================================
"RTN","GMPLP44I",6,0)
AWRITE(REF) ;Write all the descendants of the array.
"RTN","GMPLP44I",7,0)
 N DONE,IND,LEN,LN,PROOT,ROOT,START,TEMP,TEXT
"RTN","GMPLP44I",8,0)
 I REF="" Q
"RTN","GMPLP44I",9,0)
 S LN=0
"RTN","GMPLP44I",10,0)
 S PROOT=$P(REF,")",1)
"RTN","GMPLP44I",11,0)
 ;Build the root so we can tell when we are done.
"RTN","GMPLP44I",12,0)
 S TEMP=$NA(@REF)
"RTN","GMPLP44I",13,0)
 S ROOT=$P(TEMP,")",1)
"RTN","GMPLP44I",14,0)
 S REF=$Q(@REF)
"RTN","GMPLP44I",15,0)
 I REF'[ROOT Q
"RTN","GMPLP44I",16,0)
 S DONE=0
"RTN","GMPLP44I",17,0)
 F  Q:(REF="")!(DONE)  D
"RTN","GMPLP44I",18,0)
 . S START=$F(REF,ROOT)
"RTN","GMPLP44I",19,0)
 . S LEN=$L(REF)
"RTN","GMPLP44I",20,0)
 . S IND=$E(REF,START,LEN)
"RTN","GMPLP44I",21,0)
 . S LN=LN+1,TEXT(LN)=PROOT_IND_"="_@REF
"RTN","GMPLP44I",22,0)
 . S REF=$Q(@REF)
"RTN","GMPLP44I",23,0)
 . I REF'[ROOT S DONE=1
"RTN","GMPLP44I",24,0)
 D MES^XPDUTL(.TEXT)
"RTN","GMPLP44I",25,0)
 Q
"RTN","GMPLP44I",26,0)
 ;
"RTN","GMPLP44I",27,0)
 ;===========================================
"RTN","GMPLP44I",28,0)
CACR01 ;Update the cross-reference for the .01 field.
"RTN","GMPLP44I",29,0)
 N MSG,NAME,RESULT,XREF
"RTN","GMPLP44I",30,0)
 D BMES^XPDUTL("Creating Problem List .01 diagnosis cross-reference.")
"RTN","GMPLP44I",31,0)
 S XREF("FILE")=9000011
"RTN","GMPLP44I",32,0)
 S XREF("ROOT FILE")=9000011
"RTN","GMPLP44I",33,0)
 S XREF("TYPE")="MU"
"RTN","GMPLP44I",34,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for ICD diagnosis code lookup."
"RTN","GMPLP44I",35,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMPLP44I",36,0)
 S XREF("DESCR",2)="all patients with a particular ICD diagnosis code and one for"
"RTN","GMPLP44I",37,0)
 S XREF("DESCR",3)="finding all the ICD diagnosis codes a patient has. The indexes are"
"RTN","GMPLP44I",38,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders Index global as:"
"RTN","GMPLP44I",39,0)
 S XREF("DESCR",5)=" ^PXRMINDX(9000011,CODESYS,""ISPP"",CODE,STATUS,PRIORITY,DFN,DLM,DAS)"
"RTN","GMPLP44I",40,0)
 S XREF("DESCR",6)=" ^PXRMINDX(9000011,CODESYS,""PSPI"",DFN,STATUS,PRIORITY,CODE,DLM,DAS)"
"RTN","GMPLP44I",41,0)
 S XREF("DESCR",7)="respectively."
"RTN","GMPLP44I",42,0)
 S XREF("DESCR",8)=" "
"RTN","GMPLP44I",43,0)
 S XREF("DESCR",9)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","GMPLP44I",44,0)
 S XREF("DESCR",10)="STATUS can be ""A"" for active or ""I"" for inactive. PRIORITY"
"RTN","GMPLP44I",45,0)
 S XREF("DESCR",11)="can be ""A"" for acute or ""C"" for chronic. If PRIORITY is"
"RTN","GMPLP44I",46,0)
 S XREF("DESCR",12)="missing, then a ""U"" will be stored in the Index. For"
"RTN","GMPLP44I",47,0)
 S XREF("DESCR",13)="Problems whose PRIORITY is ""C"", Clinical Reminders uses"
"RTN","GMPLP44I",48,0)
 S XREF("DESCR",14)="today's date for the date of the Problem. In all other"
"RTN","GMPLP44I",49,0)
 S XREF("DESCR",15)="cases, Clinical Reminders uses DLM, where DLM is the Date"
"RTN","GMPLP44I",50,0)
 S XREF("DESCR",16)="Last Modified. When Problems are ""removed"", then CONDITION"
"RTN","GMPLP44I",51,0)
 S XREF("DESCR",17)="is set to ""H"" for hidden. Hidden Problems are not indexed."
"RTN","GMPLP44I",52,0)
 S XREF("DESCR",18)="For complete details, see the Clinical Reminders Index"
"RTN","GMPLP44I",53,0)
 S XREF("DESCR",19)="Technical Guide/Programmer's Manual."
"RTN","GMPLP44I",54,0)
 ;
"RTN","GMPLP44I",55,0)
 S XREF("EXECUTION")="R"
"RTN","GMPLP44I",56,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMPLP44I",57,0)
 S XREF("VAL",1)=.01
"RTN","GMPLP44I",58,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMPLP44I",59,0)
 S XREF("VAL",2)=.02
"RTN","GMPLP44I",60,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMPLP44I",61,0)
 S XREF("VAL",3)=.03
"RTN","GMPLP44I",62,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","GMPLP44I",63,0)
 S XREF("VAL",4)=.12
"RTN","GMPLP44I",64,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","GMPLP44I",65,0)
 S XREF("VAL",5)=1.14
"RTN","GMPLP44I",66,0)
 S XREF("VAL",6)=1.02
"RTN","GMPLP44I",67,0)
 S XREF("VAL",7)=80202
"RTN","GMPLP44I",68,0)
 ;
"RTN","GMPLP44I",69,0)
 S XREF("NAME")="ACR01"
"RTN","GMPLP44I",70,0)
 S XREF("SET")="D SPROB01^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",71,0)
 S XREF("KILL")="D KPROB01^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",72,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","GMPLP44I",73,0)
 D DELIXN^DDMOD(9000011,"ACR","","MSG")
"RTN","GMPLP44I",74,0)
 D DELIXN^DDMOD(9000011,"ACR01","","MSG")
"RTN","GMPLP44I",75,0)
 K MSG
"RTN","GMPLP44I",76,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","GMPLP44I",77,0)
 I RESULT="" D DCERRMSG^GMPLP44I(.MSG,.XREF)
"RTN","GMPLP44I",78,0)
 Q
"RTN","GMPLP44I",79,0)
 ;
"RTN","GMPLP44I",80,0)
 ;===========================================
"RTN","GMPLP44I",81,0)
CACRMT ;Create the cross-reference for Mapping Targets multiple.
"RTN","GMPLP44I",82,0)
 ;Make sure the field exists.
"RTN","GMPLP44I",83,0)
 I $$GET1^DID(9000011,80300,"","GLOBAL SUBSCRIPT LOCATION")="" Q
"RTN","GMPLP44I",84,0)
 N MSG,NAME,RESULT,XREF
"RTN","GMPLP44I",85,0)
 D BMES^XPDUTL("Creating Problem List Mapping Targets cross-reference.")
"RTN","GMPLP44I",86,0)
 S XREF("FILE")=9000011
"RTN","GMPLP44I",87,0)
 S XREF("ROOT FILE")=9000011.803
"RTN","GMPLP44I",88,0)
 S XREF("TYPE")="MU"
"RTN","GMPLP44I",89,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for Mapping Targets code lookup."
"RTN","GMPLP44I",90,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMPLP44I",91,0)
 S XREF("DESCR",2)="all patients with a particular Mapping Target code and one for"
"RTN","GMPLP44I",92,0)
 S XREF("DESCR",3)="finding all the Mapping Target codes a patient has. The indexes are"
"RTN","GMPLP44I",93,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders Index global as:"
"RTN","GMPLP44I",94,0)
 S XREF("DESCR",5)=" ^PXRMINDX(9000011,CODESYS,""ISPP"",CODE,STATUS,PRIORITY,DFN,DLM,DAS)"
"RTN","GMPLP44I",95,0)
 S XREF("DESCR",6)=" ^PXRMINDX(9000011,CODESYS,""PSPI"",DFN,STATUS,PRIORITY,CODE,DLM,DAS)"
"RTN","GMPLP44I",96,0)
 S XREF("DESCR",7)="respectively."
"RTN","GMPLP44I",97,0)
 S XREF("DESCR",8)=" "
"RTN","GMPLP44I",98,0)
 S XREF("DESCR",9)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","GMPLP44I",99,0)
 S XREF("DESCR",10)="STATUS can be ""A"" for active or ""I"" for inactive. PRIORITY"
"RTN","GMPLP44I",100,0)
 S XREF("DESCR",11)="can be ""A"" for acute or ""C"" for chronic. If PRIORITY is"
"RTN","GMPLP44I",101,0)
 S XREF("DESCR",12)="missing, then a ""U"" will be stored in the Index. For"
"RTN","GMPLP44I",102,0)
 S XREF("DESCR",13)="Problems whose PRIORITY is ""C"", Clinical Reminders uses"
"RTN","GMPLP44I",103,0)
 S XREF("DESCR",14)="today's date for the date of the Problem. In all other"
"RTN","GMPLP44I",104,0)
 S XREF("DESCR",15)="cases, Clinical Reminders uses DLM, where DLM is the Date"
"RTN","GMPLP44I",105,0)
 S XREF("DESCR",16)="Last Modified. When Problems are ""removed"", then CONDITION"
"RTN","GMPLP44I",106,0)
 S XREF("DESCR",17)="is set to ""H"" for hidden. Hidden Problems are not indexed."
"RTN","GMPLP44I",107,0)
 S XREF("DESCR",18)="For complete details, see the Clinical Reminders Index"
"RTN","GMPLP44I",108,0)
 S XREF("DESCR",19)="Technical Guide/Programmer's Manual."
"RTN","GMPLP44I",109,0)
 ;
"RTN","GMPLP44I",110,0)
 S XREF("EXECUTION")="R"
"RTN","GMPLP44I",111,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMPLP44I",112,0)
 S XREF("VAL",1)=.01
"RTN","GMPLP44I",113,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMPLP44I",114,0)
 S XREF("VAL",2)=.02
"RTN","GMPLP44I",115,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMPLP44I",116,0)
 ;
"RTN","GMPLP44I",117,0)
 S XREF("NAME")="ACRMT"
"RTN","GMPLP44I",118,0)
 S XREF("SET")="D SPROBMT^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",119,0)
 S XREF("KILL")="D KPROBMT^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",120,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","GMPLP44I",121,0)
 D DELIXN^DDMOD(9000011,"ACRMT","","MSG")
"RTN","GMPLP44I",122,0)
 K MSG
"RTN","GMPLP44I",123,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","GMPLP44I",124,0)
 I RESULT="" D DCERRMSG^GMPLP44I(.MSG,.XREF)
"RTN","GMPLP44I",125,0)
 Q
"RTN","GMPLP44I",126,0)
 ;
"RTN","GMPLP44I",127,0)
 ;===========================================
"RTN","GMPLP44I",128,0)
CACRSCT ;Create the cross-reference for the SNOMED CT CONCEPT CODE.
"RTN","GMPLP44I",129,0)
 ;Make sure the field exists.
"RTN","GMPLP44I",130,0)
 I $$GET1^DID(9000011,80001,"","GLOBAL SUBSCRIPT LOCATION")="" Q
"RTN","GMPLP44I",131,0)
 N MSG,NAME,RESULT,XREF
"RTN","GMPLP44I",132,0)
 D BMES^XPDUTL("Creating Problem List SNOMED CT cross-reference.")
"RTN","GMPLP44I",133,0)
 S XREF("FILE")=9000011
"RTN","GMPLP44I",134,0)
 S XREF("ROOT FILE")=9000011
"RTN","GMPLP44I",135,0)
 S XREF("TYPE")="MU"
"RTN","GMPLP44I",136,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for SNOMED CT concept code lookup."
"RTN","GMPLP44I",137,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMPLP44I",138,0)
 S XREF("DESCR",2)="all patients with a particular SNOMED CT code and one for"
"RTN","GMPLP44I",139,0)
 S XREF("DESCR",3)="finding all the SNOMED CT codes a patient has. The indexes are"
"RTN","GMPLP44I",140,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders Index global as:"
"RTN","GMPLP44I",141,0)
 S XREF("DESCR",5)=" ^PXRMINDX(9000011,CODESYS,""ISPP"",CODE,STATUS,PRIORITY,DFN,DLM,DAS)"
"RTN","GMPLP44I",142,0)
 S XREF("DESCR",6)=" ^PXRMINDX(9000011,CODESYS,""PSPI"",DFN,STATUS,PRIORITY,CODE,DLM,DAS)"
"RTN","GMPLP44I",143,0)
 S XREF("DESCR",7)="respectively."
"RTN","GMPLP44I",144,0)
 S XREF("DESCR",8)=" "
"RTN","GMPLP44I",145,0)
 S XREF("DESCR",9)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","GMPLP44I",146,0)
 S XREF("DESCR",10)="STATUS can be ""A"" for active or ""I"" for inactive. PRIORITY"
"RTN","GMPLP44I",147,0)
 S XREF("DESCR",11)="can be ""A"" for acute or ""C"" for chronic. If PRIORITY is"
"RTN","GMPLP44I",148,0)
 S XREF("DESCR",12)="missing, then a ""U"" will be stored in the Index. For"
"RTN","GMPLP44I",149,0)
 S XREF("DESCR",13)="Problems whose PRIORITY is ""C"", Clinical Reminders uses"
"RTN","GMPLP44I",150,0)
 S XREF("DESCR",14)="today's date for the date of the Problem. In all other"
"RTN","GMPLP44I",151,0)
 S XREF("DESCR",15)="cases, Clinical Reminders uses DLM, where DLM is the Date"
"RTN","GMPLP44I",152,0)
 S XREF("DESCR",16)="Last Modified. When Problems are ""removed"", then CONDITION"
"RTN","GMPLP44I",153,0)
 S XREF("DESCR",17)="is set to ""H"" for hidden. Hidden Problems are not indexed."
"RTN","GMPLP44I",154,0)
 S XREF("DESCR",18)="For complete details, see the Clinical Reminders Index"
"RTN","GMPLP44I",155,0)
 S XREF("DESCR",19)="Technical Guide/Programmer's Manual."
"RTN","GMPLP44I",156,0)
 ;
"RTN","GMPLP44I",157,0)
 S XREF("EXECUTION")="R"
"RTN","GMPLP44I",158,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMPLP44I",159,0)
 S XREF("VAL",1)=80001
"RTN","GMPLP44I",160,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMPLP44I",161,0)
 S XREF("VAL",2)=.02
"RTN","GMPLP44I",162,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMPLP44I",163,0)
 S XREF("VAL",3)=.03
"RTN","GMPLP44I",164,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","GMPLP44I",165,0)
 S XREF("VAL",4)=.12
"RTN","GMPLP44I",166,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","GMPLP44I",167,0)
 S XREF("VAL",5)=1.14
"RTN","GMPLP44I",168,0)
 S XREF("VAL",6)=1.02
"RTN","GMPLP44I",169,0)
 ;
"RTN","GMPLP44I",170,0)
 S XREF("NAME")="ACRSCT"
"RTN","GMPLP44I",171,0)
 S XREF("SET")="D SPROBSCT^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",172,0)
 S XREF("KILL")="D KPROBSCT^GMPLPXRM(.X,.DA)"
"RTN","GMPLP44I",173,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","GMPLP44I",174,0)
 D DELIXN^DDMOD(9000011,"ACRSCT","","MSG")
"RTN","GMPLP44I",175,0)
 K MSG
"RTN","GMPLP44I",176,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","GMPLP44I",177,0)
 I RESULT="" D DCERRMSG^GMPLP44I(.MSG,.XREF)
"RTN","GMPLP44I",178,0)
 Q
"RTN","GMPLP44I",179,0)
 ;
"RTN","GMPLP44I",180,0)
 ;===========================================
"RTN","GMPLP44I",181,0)
CPROBXR ;Create all the cross-references.
"RTN","GMPLP44I",182,0)
 D BMES^XPDUTL("Creating Clinical Reminders Index cross-references.")
"RTN","GMPLP44I",183,0)
 D CACR01^GMPLP44I
"RTN","GMPLP44I",184,0)
 D CACRSCT^GMPLP44I
"RTN","GMPLP44I",185,0)
 D CACRMT^GMPLP44I
"RTN","GMPLP44I",186,0)
 Q
"RTN","GMPLP44I",187,0)
 ;
"RTN","GMPLP44I",188,0)
 ;===========================================
"RTN","GMPLP44I",189,0)
DCERRMSG(MSG,XREF) ;Display cross-reference creation errors.
"RTN","GMPLP44I",190,0)
 D BMES^XPDUTL("A cross-reference could not be created. The error message is:")
"RTN","GMPLP44I",191,0)
 D AWRITE^DG53862I("MSG")
"RTN","GMPLP44I",192,0)
 D BMES^XPDUTL("Cross-reference information:")
"RTN","GMPLP44I",193,0)
 D AWRITE^DG53862I("XREF")
"RTN","GMPLP44I",194,0)
 Q
"RTN","GMPLP44I",195,0)
 ;
"RTN","GMPLP44I",196,0)
 ;===========================================
"RTN","GMPLP44I",197,0)
POST ;Post-init
"RTN","GMPLP44I",198,0)
 ;Update the cross-references.
"RTN","GMPLP44I",199,0)
 D CPROBXR^GMPLP44I
"RTN","GMPLP44I",200,0)
 ;Rebuild the Index in the new format.
"RTN","GMPLP44I",201,0)
 D REINDEX^GMPLP44I
"RTN","GMPLP44I",202,0)
 Q
"RTN","GMPLP44I",203,0)
 ;
"RTN","GMPLP44I",204,0)
 ;===========================================
"RTN","GMPLP44I",205,0)
REINDEX ;Rebuild the Problem List portion of the Clinical Reminders Index in
"RTN","GMPLP44I",206,0)
 ;the new structure.
"RTN","GMPLP44I",207,0)
 N TEXT,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","GMPLP44I",208,0)
 ;If the Index has already been restructured don't do it again.
"RTN","GMPLP44I",209,0)
 I $D(^PXRMINDX(9000011,"ICD")),$D(^PXRMINDX(9000011,"DATE BUILT")) D
"RTN","GMPLP44I",210,0)
 . S TEXT(1)="The Problem List Index has already been rebuilt, skipping another rebuild."
"RTN","GMPLP44I",211,0)
 I $D(^PXRMINDX(9000011,"ICD")),'$D(^PXRMINDX(9000011,"DATE BUILT")) D
"RTN","GMPLP44I",212,0)
 . S TEXT(1)="The Problem List Index has been partially rebuilt; not starting another rebuild in case a rebuild is in progress."
"RTN","GMPLP44I",213,0)
 . S TEXT(2)="Please make sure the Index is completely rebuilt."
"RTN","GMPLP44I",214,0)
 I $D(TEXT(1)) D BMES^XPDUTL(.TEXT) Q
"RTN","GMPLP44I",215,0)
 S ZTRTN="INDEX^GMPLPXRM"
"RTN","GMPLP44I",216,0)
 S ZTDESC="Problem List Clinical Reminders Index rebuild"
"RTN","GMPLP44I",217,0)
 S ZTDTH=$H
"RTN","GMPLP44I",218,0)
 S ZTIO=""
"RTN","GMPLP44I",219,0)
 D ^%ZTLOAD
"RTN","GMPLP44I",220,0)
 S TEXT(1)="Problem List Clinical Reminders Index rebuild queued."
"RTN","GMPLP44I",221,0)
 S TEXT(2)="The task number is "_ZTSK_"."
"RTN","GMPLP44I",222,0)
 D MES^XPDUTL(.TEXT)
"RTN","GMPLP44I",223,0)
 Q
"RTN","GMPLP44I",224,0)
 ;
"RTN","GMPLPXRM")
0^4^B41114026
"RTN","GMPLPXRM",1,0)
GMPLPXRM ; SLC/PKR - Build Clinical Reminder Index for AUPNPROB. ;05/08/2014
"RTN","GMPLPXRM",2,0)
 ;;2.0;Problem List;**27,43,44**;Aug 25, 1994;Build 92
"RTN","GMPLPXRM",3,0)
 ;DBIA #4113 supports PXRMSXRM entry points.
"RTN","GMPLPXRM",4,0)
 ;DBIA #4114 supports setting and killing ^PXRMINDX(9000011)
"RTN","GMPLPXRM",5,0)
 ;DBIA #5747 covers references to ^ICDEX entry point.
"RTN","GMPLPXRM",6,0)
 ;===================================
"RTN","GMPLPXRM",7,0)
INDEX ;Build the indexes for PROBLEM LIST.
"RTN","GMPLPXRM",8,0)
 N CODE,CODEP,CODESYS,COND,DAS,DAS803,DFN,DIFF,DLM,DONE
"RTN","GMPLPXRM",9,0)
 N END,ENTRIES,ETEXT,GLOBAL,IND,JND,NE,NERROR,PRIO,PROB
"RTN","GMPLPXRM",10,0)
 N START,STATUS,TEMP,TENP,TEXT
"RTN","GMPLPXRM",11,0)
 ;Don't leave any old stuff around.
"RTN","GMPLPXRM",12,0)
 K ^PXRMINDX(9000011)
"RTN","GMPLPXRM",13,0)
 S GLOBAL=$$GET1^DID(9000011,"","","GLOBAL NAME")
"RTN","GMPLPXRM",14,0)
 S ENTRIES=$P(^AUPNPROB(0),U,4)
"RTN","GMPLPXRM",15,0)
 S TENP=ENTRIES/10
"RTN","GMPLPXRM",16,0)
 S TENP=+$P(TENP,".",1)
"RTN","GMPLPXRM",17,0)
 I TENP<1 S TENP=1
"RTN","GMPLPXRM",18,0)
 D BMES^XPDUTL("Building indexes PROBLEM LIST")
"RTN","GMPLPXRM",19,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","GMPLPXRM",20,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",21,0)
 S START=$H
"RTN","GMPLPXRM",22,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","GMPLPXRM",23,0)
 F  S DAS=$O(^AUPNPROB(DAS)) Q:DONE  D
"RTN","GMPLPXRM",24,0)
 . N GMPDT,GMPCSYS
"RTN","GMPLPXRM",25,0)
 . I +DAS=0 S DONE=1 Q
"RTN","GMPLPXRM",26,0)
 . I +DAS'=DAS D  Q
"RTN","GMPLPXRM",27,0)
 .. S DONE=1
"RTN","GMPLPXRM",28,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","GMPLPXRM",29,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",30,0)
 . S IND=IND+1
"RTN","GMPLPXRM",31,0)
 . I IND#TENP=0 D
"RTN","GMPLPXRM",32,0)
 .. S TEXT="Processing entry "_IND
"RTN","GMPLPXRM",33,0)
 .. D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",34,0)
 . I IND#10000=0 W "."
"RTN","GMPLPXRM",35,0)
 . S TEMP=$G(^AUPNPROB(DAS,1))
"RTN","GMPLPXRM",36,0)
 . S COND=$P(TEMP,U,2)
"RTN","GMPLPXRM",37,0)
 .;Don't index Hidden problems.
"RTN","GMPLPXRM",38,0)
 . I COND="H" Q
"RTN","GMPLPXRM",39,0)
 . S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",40,0)
 .;If there is no priority set it to "U" for undefined.
"RTN","GMPLPXRM",41,0)
 . I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",42,0)
 . S TEMP=^AUPNPROB(DAS,0)
"RTN","GMPLPXRM",43,0)
 . S CODEP=$P(TEMP,U,1)
"RTN","GMPLPXRM",44,0)
 . I CODEP="" D  Q
"RTN","GMPLPXRM",45,0)
 .. S ETEXT=DAS_" missing problem"
"RTN","GMPLPXRM",46,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",47,0)
 . S DFN=$P(TEMP,U,2)
"RTN","GMPLPXRM",48,0)
 . I DFN="" D  Q
"RTN","GMPLPXRM",49,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","GMPLPXRM",50,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",51,0)
 . S DLM=$P(TEMP,U,3)
"RTN","GMPLPXRM",52,0)
 . I DLM="" D  Q
"RTN","GMPLPXRM",53,0)
 .. S ETEXT=DAS_" missing date last modified"
"RTN","GMPLPXRM",54,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",55,0)
 . S STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",56,0)
 . I STATUS="" D  Q
"RTN","GMPLPXRM",57,0)
 .. S ETEXT=DAS_" missing status"
"RTN","GMPLPXRM",58,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","GMPLPXRM",59,0)
 . S CODESYS=$P($G(^AUPNPROB(DAS,802)),U,2)
"RTN","GMPLPXRM",60,0)
 . I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","GMPLPXRM",61,0)
 . S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","GMPLPXRM",62,0)
 . I +CODE=-1 D  Q
"RTN","GMPLPXRM",63,0)
 .. S ETEXT=DAS_" has the invalid code "_CODE
"RTN","GMPLPXRM",64,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",65,0)
 . S NE=NE+1
"RTN","GMPLPXRM",66,0)
 . S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",67,0)
 . S ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS)=""
"RTN","GMPLPXRM",68,0)
 .;Check for a SNOMED CT code.
"RTN","GMPLPXRM",69,0)
 . S CODE=$P($G(^AUPNPROB(DAS,800)),U,1)
"RTN","GMPLPXRM",70,0)
 . I CODE="" Q
"RTN","GMPLPXRM",71,0)
 . S ^PXRMINDX(9000011,"SCT","ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",72,0)
 . S ^PXRMINDX(9000011,"SCT","PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS)=""
"RTN","GMPLPXRM",73,0)
 .;Check for entries in the Mapping Targets multiple.
"RTN","GMPLPXRM",74,0)
 . S JND=0
"RTN","GMPLPXRM",75,0)
 . F  S JND=+$O(^AUPNPROB(DAS,803,JND)) Q:JND=0  D
"RTN","GMPLPXRM",76,0)
 .. S TEMP=^AUPNPROB(DAS,803,JND,0)
"RTN","GMPLPXRM",77,0)
 .. S CODE=$P(TEMP,U,1)
"RTN","GMPLPXRM",78,0)
 .. S CODESYS=$P(TEMP,U,2)
"RTN","GMPLPXRM",79,0)
 .. S DAS803=DAS_";803;"_JND
"RTN","GMPLPXRM",80,0)
 .. S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS803)=""
"RTN","GMPLPXRM",81,0)
 .. S ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS803)=""
"RTN","GMPLPXRM",82,0)
 S END=$H
"RTN","GMPLPXRM",83,0)
 S TEXT=NE_" PROBLEM LIST results indexed."
"RTN","GMPLPXRM",84,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",85,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","GMPLPXRM",86,0)
 ;If there were errors send a message.
"RTN","GMPLPXRM",87,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","GMPLPXRM",88,0)
 ;Send a MailMan message with the results.
"RTN","GMPLPXRM",89,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","GMPLPXRM",90,0)
 S ^PXRMINDX(9000011,"GLOBAL NAME")=GLOBAL
"RTN","GMPLPXRM",91,0)
 S ^PXRMINDX(9000011,"BUILT BY")=DUZ
"RTN","GMPLPXRM",92,0)
 S ^PXRMINDX(9000011,"DATE BUILT")=$$NOW^XLFDT
"RTN","GMPLPXRM",93,0)
 Q
"RTN","GMPLPXRM",94,0)
 ;
"RTN","GMPLPXRM",95,0)
 ;===================================
"RTN","GMPLPXRM",96,0)
KPROB01(X,DA) ;Delete Index entry for Problem List .01.
"RTN","GMPLPXRM",97,0)
 ;X(1)=DIAGNOSIS, X(2)=DFN, X(3)=DATE LAST MODIFIED, X(4)=STATUS
"RTN","GMPLPXRM",98,0)
 ;X(5)=PRIORITY, X(6)=CONDITION, X(7)=CODING SYSTEM
"RTN","GMPLPXRM",99,0)
 N CODE,CODESYS,PRIO
"RTN","GMPLPXRM",100,0)
 S CODE=$$CODEC^ICDEX(80,X(1))
"RTN","GMPLPXRM",101,0)
 I +CODE=-1 Q
"RTN","GMPLPXRM",102,0)
 S CODESYS=$G(X(7))
"RTN","GMPLPXRM",103,0)
 I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3)
"RTN","GMPLPXRM",104,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",105,0)
 K ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(4),PRIO,X(2),X(3),DA)
"RTN","GMPLPXRM",106,0)
 K ^PXRMINDX(9000011,CODESYS,"PSPI",X(2),X(4),PRIO,CODE,X(3),DA)
"RTN","GMPLPXRM",107,0)
 Q
"RTN","GMPLPXRM",108,0)
 ;
"RTN","GMPLPXRM",109,0)
 ;===================================
"RTN","GMPLPXRM",110,0)
KPROBMT(X,DA) ;Kill Index entry for Problem List Mapping Targets.
"RTN","GMPLPXRM",111,0)
 ;X(1)=CODE, X(2)=CODING SYSTEM
"RTN","GMPLPXRM",112,0)
 N DAS,DFN,DLM,PRIO,STATUS,TEMP
"RTN","GMPLPXRM",113,0)
 I X(2)="" Q
"RTN","GMPLPXRM",114,0)
 S TEMP=^AUPNPROB(DA(1),1)
"RTN","GMPLPXRM",115,0)
 S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",116,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",117,0)
 S TEMP=^AUPNPROB(DA(1),0)
"RTN","GMPLPXRM",118,0)
 S DFN=$P(TEMP,U,2),DLM=$P(TEMP,U,3),STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",119,0)
 S DAS=DA(1)_";"_803_";"_DA
"RTN","GMPLPXRM",120,0)
 K ^PXRMINDX(9000011,X(2),"ISPP",X(1),STATUS,PRIO,DFN,DLM,DAS)
"RTN","GMPLPXRM",121,0)
 K ^PXRMINDX(9000011,X(2),"PSPI",DFN,STATUS,PRIO,X(1),DLM,DAS)
"RTN","GMPLPXRM",122,0)
 Q
"RTN","GMPLPXRM",123,0)
 ;
"RTN","GMPLPXRM",124,0)
 ;===================================
"RTN","GMPLPXRM",125,0)
KPROBSCT(X,DA) ;Delete Index entry for Problem List SNOMED CT.
"RTN","GMPLPXRM",126,0)
 ;X(1)=SNOMED CT CONCEPT CODE, X(2)=DFN, X(3)=DATE LAST MODIFIED,
"RTN","GMPLPXRM",127,0)
 ;X(4)=STATUS, X(5)=PRIORITY, X(6)=CONDITION
"RTN","GMPLPXRM",128,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",129,0)
 K ^PXRMINDX(9000011,"SCT","ISPP",X(1),X(4),PRIO,X(2),X(3),DA)
"RTN","GMPLPXRM",130,0)
 K ^PXRMINDX(9000011,"SCT","PSPI",X(2),X(4),PRIO,X(1),X(3),DA)
"RTN","GMPLPXRM",131,0)
 Q
"RTN","GMPLPXRM",132,0)
 ;
"RTN","GMPLPXRM",133,0)
 ;===================================
"RTN","GMPLPXRM",134,0)
PROBDATA(DAS,DATA) ;Return data for a Problem List entry.
"RTN","GMPLPXRM",135,0)
 ;DBIA #5881
"RTN","GMPLPXRM",136,0)
 N EM,IEN,IND,TEMP
"RTN","GMPLPXRM",137,0)
 S IEN=$P(DAS,";",1)
"RTN","GMPLPXRM",138,0)
 S TEMP=^AUPNPROB(IEN,0)
"RTN","GMPLPXRM",139,0)
 S DATA("ICD DIAGNOSIS")=$P(TEMP,U,1)
"RTN","GMPLPXRM",140,0)
 S DATA("DATE LAST MODIFIED")=$P(TEMP,U,3)
"RTN","GMPLPXRM",141,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,5)
"RTN","GMPLPXRM",142,0)
 S DATA("DATE ENTERED")=$P(TEMP,U,8)
"RTN","GMPLPXRM",143,0)
 S DATA("STATUS")=$P(TEMP,U,12)
"RTN","GMPLPXRM",144,0)
 S DATA("DATE OF ONSET")=$P(TEMP,U,13)
"RTN","GMPLPXRM",145,0)
 S TEMP=^AUPNPROB(IEN,1)
"RTN","GMPLPXRM",146,0)
 S DATA("PROBLEM")=$P(TEMP,U,1)
"RTN","GMPLPXRM",147,0)
 S DATA("PROBLEM CONDITION")=$P(TEMP,U,2)
"RTN","GMPLPXRM",148,0)
 S DATA("RECORDING PROVIDER")=$P(TEMP,U,4)
"RTN","GMPLPXRM",149,0)
 S DATA("RESPONSIBLE PROVIDER")=$P(TEMP,U,5)
"RTN","GMPLPXRM",150,0)
 S DATA("DATE RESOLVED")=$P(TEMP,U,7)
"RTN","GMPLPXRM",151,0)
 S DATA("CLINIC")=$P(TEMP,U,8)
"RTN","GMPLPXRM",152,0)
 S DATA("PRIORITY")=$P(TEMP,U,14)
"RTN","GMPLPXRM",153,0)
 S DATA("DATE OF INTEREST")=$P($G(^AUPNPROB(IEN,802)),U,1)
"RTN","GMPLPXRM",154,0)
 I DAS'[";803;" Q
"RTN","GMPLPXRM",155,0)
 S IND=$P(DAS,";",3)
"RTN","GMPLPXRM",156,0)
 S TEMP=^AUPNPROB(IEN,803,IND,0)
"RTN","GMPLPXRM",157,0)
 S DATA("MT CODE")=$P(TEMP,U,1)
"RTN","GMPLPXRM",158,0)
 S DATA("MT CODING SYSTEM")=$P(TEMP,U,2)
"RTN","GMPLPXRM",159,0)
 S DATA("MT CODE DATE")=$P(TEMP,U,3)
"RTN","GMPLPXRM",160,0)
 Q
"RTN","GMPLPXRM",161,0)
 ;
"RTN","GMPLPXRM",162,0)
 ;===================================
"RTN","GMPLPXRM",163,0)
SPROB01(X,DA) ;Set Index entry for Problem List .01.
"RTN","GMPLPXRM",164,0)
 ;X(1)=DIAGNOSIS, X(2)=DFN, X(3)=DATE LAST MODIFIED, X(4)=STATUS
"RTN","GMPLPXRM",165,0)
 ;X(5)=PRIORITY, X(6)=CONDITION, X(7)=CODING SYSTEM
"RTN","GMPLPXRM",166,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",167,0)
 I X(6)="H" Q
"RTN","GMPLPXRM",168,0)
 N CODE,CODESYS,PRIO
"RTN","GMPLPXRM",169,0)
 S CODE=$$CODEC^ICDEX(80,X(1))
"RTN","GMPLPXRM",170,0)
 I +CODE=-1 Q
"RTN","GMPLPXRM",171,0)
 S CODESYS=$G(X(7))
"RTN","GMPLPXRM",172,0)
 I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3)
"RTN","GMPLPXRM",173,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",174,0)
 S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(4),PRIO,X(2),X(3),DA)=""
"RTN","GMPLPXRM",175,0)
 S ^PXRMINDX(9000011,CODESYS,"PSPI",X(2),X(4),PRIO,CODE,X(3),DA)=""
"RTN","GMPLPXRM",176,0)
 Q
"RTN","GMPLPXRM",177,0)
 ;
"RTN","GMPLPXRM",178,0)
 ;===================================
"RTN","GMPLPXRM",179,0)
SPROBMT(X,DA) ;Set Index entry for Problem List Mapping Targets.
"RTN","GMPLPXRM",180,0)
 ;X(1)=CODE, X(2)=CODING SYSTEM
"RTN","GMPLPXRM",181,0)
 N DAS,DFN,DLM,PRIO,STATUS,TEMP
"RTN","GMPLPXRM",182,0)
 S TEMP=^AUPNPROB(DA(1),1)
"RTN","GMPLPXRM",183,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",184,0)
 I $P(TEMP,U,2)="H" Q
"RTN","GMPLPXRM",185,0)
 S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",186,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",187,0)
 S TEMP=^AUPNPROB(DA(1),0)
"RTN","GMPLPXRM",188,0)
 S DFN=$P(TEMP,U,2),DLM=$P(TEMP,U,3),STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",189,0)
 S DAS=DA(1)_";"_803_";"_DA
"RTN","GMPLPXRM",190,0)
 S ^PXRMINDX(9000011,X(2),"ISPP",X(1),STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",191,0)
 S ^PXRMINDX(9000011,X(2),"PSPI",DFN,STATUS,PRIO,X(1),DLM,DAS)=""
"RTN","GMPLPXRM",192,0)
 Q
"RTN","GMPLPXRM",193,0)
 ;
"RTN","GMPLPXRM",194,0)
 ;===================================
"RTN","GMPLPXRM",195,0)
SPROBSCT(X,DA) ;Set Index entry for Problem List SNOMED CT.
"RTN","GMPLPXRM",196,0)
 ;X(1)=SNOMED CT CONCEPT CODE, X(2)=DFN, X(3)=DATE LAST MODIFIED,
"RTN","GMPLPXRM",197,0)
 ;X(4)=STATUS, X(5)=PRIORITY, X(6)=CONDITION
"RTN","GMPLPXRM",198,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",199,0)
 I X(6)="H" Q
"RTN","GMPLPXRM",200,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",201,0)
 S ^PXRMINDX(9000011,"SCT","ISPP",X(1),X(4),PRIO,X(2),X(3),DA)=""
"RTN","GMPLPXRM",202,0)
 S ^PXRMINDX(9000011,"SCT","PSPI",X(2),X(4),PRIO,X(1),X(3),DA)=""
"RTN","GMPLPXRM",203,0)
 Q
"RTN","GMPLPXRM",204,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
PXRM*2.0*26
"BLD",8327,0)
PXRM*2.0*26^CLINICAL REMINDERS^0^3140624^y
"BLD",8327,1,0)
^^2^2^3130212^^^^
"BLD",8327,1,1,0)
Clinical Reminders ICD-10 changes.
"BLD",8327,1,2,0)

"BLD",8327,4,0)
^9.64PA^811.8^6
"BLD",8327,4,801.41,0)
801.41
"BLD",8327,4,801.41,222)
y^n^f^^^^n
"BLD",8327,4,801.45,0)
801.45
"BLD",8327,4,801.45,222)
n^n^f^^n^^y^o^n
"BLD",8327,4,801.45,224)
I Y=20
"BLD",8327,4,802.4,0)
802.4
"BLD",8327,4,802.4,222)
n^y^f^^n^^y^o^n
"BLD",8327,4,802.4,224)
I +Y>0
"BLD",8327,4,811.2,0)
811.2
"BLD",8327,4,811.2,222)
y^y^f^^^^n
"BLD",8327,4,811.4,0)
811.4
"BLD",8327,4,811.4,222)
n^y^f^^n^^y^o^n
"BLD",8327,4,811.4,224)
I $$CFINC^PXRMP26I(Y)
"BLD",8327,4,811.8,0)
811.8
"BLD",8327,4,811.8,222)
n^n^f^^n^^y^o^n
"BLD",8327,4,811.8,224)
I $$EXFINC^PXRMEXSI(Y,"EXARRAY","PXRMP26E")
"BLD",8327,4,"B",801.41,801.41)

"BLD",8327,4,"B",801.45,801.45)

"BLD",8327,4,"B",802.4,802.4)

"BLD",8327,4,"B",811.2,811.2)

"BLD",8327,4,"B",811.4,811.4)

"BLD",8327,4,"B",811.8,811.8)

"BLD",8327,6.3)
404
"BLD",8327,"ABPKG")
n
"BLD",8327,"INI")
PRE^PXRMP26I
"BLD",8327,"INIT")
POST^PXRMP26I
"BLD",8327,"KRN",0)
^9.67PA^779.2^20
"BLD",8327,"KRN",.4,0)
.4
"BLD",8327,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",8327,"KRN",.4,"NM",1,0)
PXRM COMPUTED FINDING INQUIRY    FILE #811.4^811.4^0
"BLD",8327,"KRN",.4,"NM","B","PXRM COMPUTED FINDING INQUIRY    FILE #811.4",1)

"BLD",8327,"KRN",.401,0)
.401
"BLD",8327,"KRN",.402,0)
.402
"BLD",8327,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",8327,"KRN",.402,"NM",1,0)
PXRM EDIT ELEMENT    FILE #801.41^801.41^0
"BLD",8327,"KRN",.402,"NM",2,0)
PXRM EDIT GROUP    FILE #801.41^801.41^0
"BLD",8327,"KRN",.402,"NM",3,0)
PXRM EDIT NATIONAL DIALOG    FILE #801.41^801.41^0
"BLD",8327,"KRN",.402,"NM","B","PXRM EDIT ELEMENT    FILE #801.41",1)

"BLD",8327,"KRN",.402,"NM","B","PXRM EDIT GROUP    FILE #801.41",2)

"BLD",8327,"KRN",.402,"NM","B","PXRM EDIT NATIONAL DIALOG    FILE #801.41",3)

"BLD",8327,"KRN",.403,0)
.403
"BLD",8327,"KRN",.403,"NM",0)
^9.68A^3^3
"BLD",8327,"KRN",.403,"NM",1,0)
PXRM TAXONOMY EDIT    FILE #811.2^811.2^0
"BLD",8327,"KRN",.403,"NM",2,0)
PXRM TAXONOMY CHANGE LOG    FILE #811.2^811.2^0
"BLD",8327,"KRN",.403,"NM",3,0)
PXRM DIALOG TAXONOMY EDIT    FILE #811.2^811.2^0
"BLD",8327,"KRN",.403,"NM","B","PXRM DIALOG TAXONOMY EDIT    FILE #811.2",3)

"BLD",8327,"KRN",.403,"NM","B","PXRM TAXONOMY CHANGE LOG    FILE #811.2",2)

"BLD",8327,"KRN",.403,"NM","B","PXRM TAXONOMY EDIT    FILE #811.2",1)

"BLD",8327,"KRN",.5,0)
.5
"BLD",8327,"KRN",.84,0)
.84
"BLD",8327,"KRN",3.6,0)
3.6
"BLD",8327,"KRN",3.8,0)
3.8
"BLD",8327,"KRN",9.2,0)
9.2
"BLD",8327,"KRN",9.8,0)
9.8
"BLD",8327,"KRN",9.8,"NM",0)
^9.68A^130^119
"BLD",8327,"KRN",9.8,"NM",1,0)
PXRMLEXL^^0^B240921269
"BLD",8327,"KRN",9.8,"NM",2,0)
PXRMTXSM^^0^B41443129
"BLD",8327,"KRN",9.8,"NM",3,0)
PXRMTAXD^^0^B68009180
"BLD",8327,"KRN",9.8,"NM",4,0)
PXRMPDS^^0^B38727338
"BLD",8327,"KRN",9.8,"NM",5,0)
PXRMCPLS^^0^B12687369
"BLD",8327,"KRN",9.8,"NM",6,0)
PXRMTXCR^^0^B74745189
"BLD",8327,"KRN",9.8,"NM",7,0)
PXRMTXIN^^0^B68427938
"BLD",8327,"KRN",9.8,"NM",8,0)
PXRMSINQ^^0^B22958302
"BLD",8327,"KRN",9.8,"NM",10,0)
PXRMDLL^^0^B137187250
"BLD",8327,"KRN",9.8,"NM",11,0)
PXRMDLLA^^0^B84693327
"BLD",8327,"KRN",9.8,"NM",12,0)
PXRMDLLB^^0^B33584430
"BLD",8327,"KRN",9.8,"NM",13,0)
PXRMDLG6^^0^B20894000
"BLD",8327,"KRN",9.8,"NM",14,0)
PXRMDEDI^^0^B25523952
"BLD",8327,"KRN",9.8,"NM",15,0)
PXRMDLG1^^0^B7385364
"BLD",8327,"KRN",9.8,"NM",16,0)
PXRMDLG4^^0^B91752060
"BLD",8327,"KRN",9.8,"NM",17,0)
PXRMTAXL^^0^B59845028
"BLD",8327,"KRN",9.8,"NM",18,0)
PXRMLDR^^0^B15240412
"BLD",8327,"KRN",9.8,"NM",19,0)
PXRMTAX^^0^B60136875
"BLD",8327,"KRN",9.8,"NM",20,0)
PXRMDGPT^^0^B33156979
"BLD",8327,"KRN",9.8,"NM",21,0)
PXRMVCPT^^0^B51805382
"BLD",8327,"KRN",9.8,"NM",22,0)
PXRMVPOV^^0^B51874901
"BLD",8327,"KRN",9.8,"NM",23,0)
PXRMPROB^^0^B47060633
"BLD",8327,"KRN",9.8,"NM",25,0)
PXRMRCPT^^0^B24259553
"BLD",8327,"KRN",9.8,"NM",26,0)
PXRMTXIM^^0^B193866629
"BLD",8327,"KRN",9.8,"NM",27,0)
PXRMINTR^^0^B45347072
"BLD",8327,"KRN",9.8,"NM",28,0)
PXRMCSPE^^0^B1560002
"BLD",8327,"KRN",9.8,"NM",29,0)
PXRMCSTX^^0^B2261498
"BLD",8327,"KRN",9.8,"NM",30,0)
PXRMUIDR^^0^B9563816
"BLD",8327,"KRN",9.8,"NM",34,0)
PXRMDTAX^^0^B200174205
"BLD",8327,"KRN",9.8,"NM",37,0)
PXRMGEN^^0^B4344668
"BLD",8327,"KRN",9.8,"NM",38,0)
PXRMSEL^^0^B75136649
"BLD",8327,"KRN",9.8,"NM",39,0)
PXRMTDLG^^0^B19639441
"BLD",8327,"KRN",9.8,"NM",40,0)
PXRMP26D^^0^B226626413
"BLD",8327,"KRN",9.8,"NM",41,0)
PXRMINDC^^0^B76451646
"BLD",8327,"KRN",9.8,"NM",42,0)
PXRMINDD^^0^B76803119
"BLD",8327,"KRN",9.8,"NM",43,0)
PXRMEXIC^^0^B84313734
"BLD",8327,"KRN",9.8,"NM",44,0)
PXRMEXPS^^0^B188507722
"BLD",8327,"KRN",9.8,"NM",45,0)
PXRMDLRP^^0^B96040502
"BLD",8327,"KRN",9.8,"NM",46,0)
PXRMEXCS^^0^B15773333
"BLD",8327,"KRN",9.8,"NM",50,0)
PXRMEXFI^^0^B55982418
"BLD",8327,"KRN",9.8,"NM",51,0)
PXRMCDEF^^0^B2371303
"BLD",8327,"KRN",9.8,"NM",52,0)
PXRMSCR^^0^B126404
"BLD",8327,"KRN",9.8,"NM",53,0)
PXRMSTA1^^0^B67419179
"BLD",8327,"KRN",9.8,"NM",54,0)
PXRMSTA2^^0^B22367612
"BLD",8327,"KRN",9.8,"NM",55,0)
PXRMEXIU^^0^B68841657
"BLD",8327,"KRN",9.8,"NM",56,0)
PXRMICHK^^0^B191422911
"BLD",8327,"KRN",9.8,"NM",57,0)
PXRMINDL^^0^B24651910
"BLD",8327,"KRN",9.8,"NM",58,0)
PXRMINDX^^0^B36378752
"BLD",8327,"KRN",9.8,"NM",59,0)
PXRMEXHF^^0^B49479695
"BLD",8327,"KRN",9.8,"NM",60,0)
PXRMEXMM^^0^B32677866
"BLD",8327,"KRN",9.8,"NM",61,0)
PXRMEXLM^^0^B52621060
"BLD",8327,"KRN",9.8,"NM",62,0)
PXRMEXLR^^0^B9879769
"BLD",8327,"KRN",9.8,"NM",63,0)
PXRMEXU1^^0^B36996811
"BLD",8327,"KRN",9.8,"NM",64,0)
PXRMLIST^^0^B9607187
"BLD",8327,"KRN",9.8,"NM",65,0)
PXRM^^0^B54398070
"BLD",8327,"KRN",9.8,"NM",66,0)
PXRMOUTU^^0^B17168118
"BLD",8327,"KRN",9.8,"NM",67,0)
PXRMETXR^^0^B76497570
"BLD",8327,"KRN",9.8,"NM",68,0)
PXRMXEVL^^0^B1989772
"BLD",8327,"KRN",9.8,"NM",69,0)
PXRMXSE1^^0^B30616308
"BLD",8327,"KRN",9.8,"NM",70,0)
PXRMBXTL^^0^B28912703
"BLD",8327,"KRN",9.8,"NM",71,0)
PXRMCOPY^^0^B21259633
"BLD",8327,"KRN",9.8,"NM",72,0)
PXRMDEDT^^0^B86565471
"BLD",8327,"KRN",9.8,"NM",73,0)
PXRMEFED^^0^B10725830
"BLD",8327,"KRN",9.8,"NM",74,0)
PXRMEGED^^0^B10459294
"BLD",8327,"KRN",9.8,"NM",75,0)
PXRMEPED^^0^B10154511
"BLD",8327,"KRN",9.8,"NM",76,0)
PXRMETX^^0^B62476117
"BLD",8327,"KRN",9.8,"NM",77,0)
PXRMEXID^^0^B66152122
"BLD",8327,"KRN",9.8,"NM",78,0)
PXRMGEDT^^0^B45920622
"BLD",8327,"KRN",9.8,"NM",79,0)
PXRMLPOE^^0^B15191347
"BLD",8327,"KRN",9.8,"NM",80,0)
PXRMPARS^^0^B3546283
"BLD",8327,"KRN",9.8,"NM",81,0)
PXRMRUL1^^0^B49947013
"BLD",8327,"KRN",9.8,"NM",82,0)
PXRMXT^^0^B32837496
"BLD",8327,"KRN",9.8,"NM",83,0)
PXRMXTA^^0^B53931120
"BLD",8327,"KRN",9.8,"NM",84,0)
PXRMXTB^^0^B7902302
"BLD",8327,"KRN",9.8,"NM",85,0)
PXRMOUTC^^0^B38949930
"BLD",8327,"KRN",9.8,"NM",86,0)
PXRMREDT^^0^B70699612
"BLD",8327,"KRN",9.8,"NM",87,0)
PXRMUTIL^^0^B128848927
"BLD",8327,"KRN",9.8,"NM",88,0)
PXRMCF^^0^B63448106
"BLD",8327,"KRN",9.8,"NM",89,0)
PXRMREDF^^0^B84708461
"BLD",8327,"KRN",9.8,"NM",90,0)
PXRMFFH^^0^B11369552
"BLD",8327,"KRN",9.8,"NM",91,0)
PXRMTXCS^^0^B3010053
"BLD",8327,"KRN",9.8,"NM",92,0)
PXRMFRPT^^0^B184393482
"BLD",8327,"KRN",9.8,"NM",93,0)
PXRMEXIH^^0^B48820476
"BLD",8327,"KRN",9.8,"NM",94,0)
PXRMDEV^^0^B78755601
"BLD",8327,"KRN",9.8,"NM",95,0)
PXRMTXCE^^0^B21765274
"BLD",8327,"KRN",9.8,"NM",96,0)
PXRMP26X^^0^B39898924
"BLD",8327,"KRN",9.8,"NM",97,0)
PXRMP26E^^0^B1814747
"BLD",8327,"KRN",9.8,"NM",98,0)
PXRMEXU0^^0^B23209797
"BLD",8327,"KRN",9.8,"NM",99,0)
PXRMDUTL^^0^B11502615
"BLD",8327,"KRN",9.8,"NM",100,0)
PXRMEXU4^^0^B182800125
"BLD",8327,"KRN",9.8,"NM",101,0)
PXRMFF^^0^B72420410
"BLD",8327,"KRN",9.8,"NM",102,0)
PXRMEXPD^^0^B200143562
"BLD",8327,"KRN",9.8,"NM",103,0)
PXRMEXLB^^0^B63445674
"BLD",8327,"KRN",9.8,"NM",104,0)
PXRMTIU^^0^B7669051
"BLD",8327,"KRN",9.8,"NM",105,0)
PXRMSTS^^0^B178092687
"BLD",8327,"KRN",9.8,"NM",106,0)
PXRMENOD^^0^B24879383
"BLD",8327,"KRN",9.8,"NM",107,0)
PXRMLEX^^0^B35438125
"BLD",8327,"KRN",9.8,"NM",108,0)
PXRMTXDL^^0^B1299916
"BLD",8327,"KRN",9.8,"NM",109,0)
PXRMART^^0^B5789982
"BLD",8327,"KRN",9.8,"NM",110,0)
PXRMEXLC^^0^B13059952
"BLD",8327,"KRN",9.8,"NM",111,0)
PXRMEXU2^^0^B74659923
"BLD",8327,"KRN",9.8,"NM",112,0)
PXRMDATE^^0^B70140007
"BLD",8327,"KRN",9.8,"NM",113,0)
PXRMRDI^^0^B37867827
"BLD",8327,"KRN",9.8,"NM",114,0)
PXRMLOG^^0^B65785719
"BLD",8327,"KRN",9.8,"NM",115,0)
PXRMMSER^^0^B106758017
"BLD",8327,"KRN",9.8,"NM",116,0)
PXRMEXWB^^0^B1609378
"BLD",8327,"KRN",9.8,"NM",117,0)
PXRMEXMH^^0^B10764722
"BLD",8327,"KRN",9.8,"NM",118,0)
PXRMFFDB^^0^B67684724
"BLD",8327,"KRN",9.8,"NM",119,0)
PXRMSTAC^^0^B10577788
"BLD",8327,"KRN",9.8,"NM",120,0)
PXRMTERM^^0^B55315672
"BLD",8327,"KRN",9.8,"NM",121,0)
PXRMORCH^^0^B34974913
"BLD",8327,"KRN",9.8,"NM",123,0)
PXRMSXRM^^0^B51532846
"BLD",8327,"KRN",9.8,"NM",124,0)
PXRMETH^^0^B101071654
"BLD",8327,"KRN",9.8,"NM",125,0)
PXRMLCR^^0^B39948429
"BLD",8327,"KRN",9.8,"NM",126,0)
PXRMDIEV^^0^B68563179
"BLD",8327,"KRN",9.8,"NM",127,0)
PXRMTXIH^^0^B25527600
"BLD",8327,"KRN",9.8,"NM",128,0)
PXRMTXIC^^0^B8164040
"BLD",8327,"KRN",9.8,"NM",129,0)
PXRMPTTX^^0^B39642269
"BLD",8327,"KRN",9.8,"NM",130,0)
PXRMTMED^^0^B13031751
"BLD",8327,"KRN",9.8,"NM","B","PXRM",65)

"BLD",8327,"KRN",9.8,"NM","B","PXRMART",109)

"BLD",8327,"KRN",9.8,"NM","B","PXRMBXTL",70)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCDEF",51)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCF",88)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCOPY",71)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCPLS",5)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCSPE",28)

"BLD",8327,"KRN",9.8,"NM","B","PXRMCSTX",29)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDATE",112)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDEDI",14)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDEDT",72)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDEV",94)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDGPT",20)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDIEV",126)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLG1",15)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLG4",16)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLG6",13)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLL",10)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLLA",11)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLLB",12)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDLRP",45)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDTAX",34)

"BLD",8327,"KRN",9.8,"NM","B","PXRMDUTL",99)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEFED",73)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEGED",74)

"BLD",8327,"KRN",9.8,"NM","B","PXRMENOD",106)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEPED",75)

"BLD",8327,"KRN",9.8,"NM","B","PXRMETH",124)

"BLD",8327,"KRN",9.8,"NM","B","PXRMETX",76)

"BLD",8327,"KRN",9.8,"NM","B","PXRMETXR",67)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXCS",46)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXFI",50)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXHF",59)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXIC",43)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXID",77)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXIH",93)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXIU",55)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXLB",103)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXLC",110)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXLM",61)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXLR",62)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXMH",117)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXMM",60)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXPD",102)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXPS",44)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXU0",98)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXU1",63)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXU2",111)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXU4",100)

"BLD",8327,"KRN",9.8,"NM","B","PXRMEXWB",116)

"BLD",8327,"KRN",9.8,"NM","B","PXRMFF",101)

"BLD",8327,"KRN",9.8,"NM","B","PXRMFFDB",118)

"BLD",8327,"KRN",9.8,"NM","B","PXRMFFH",90)

"BLD",8327,"KRN",9.8,"NM","B","PXRMFRPT",92)

"BLD",8327,"KRN",9.8,"NM","B","PXRMGEDT",78)

"BLD",8327,"KRN",9.8,"NM","B","PXRMGEN",37)

"BLD",8327,"KRN",9.8,"NM","B","PXRMICHK",56)

"BLD",8327,"KRN",9.8,"NM","B","PXRMINDC",41)

"BLD",8327,"KRN",9.8,"NM","B","PXRMINDD",42)

"BLD",8327,"KRN",9.8,"NM","B","PXRMINDL",57)

"BLD",8327,"KRN",9.8,"NM","B","PXRMINDX",58)

"BLD",8327,"KRN",9.8,"NM","B","PXRMINTR",27)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLCR",125)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLDR",18)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLEX",107)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLEXL",1)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLIST",64)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLOG",114)

"BLD",8327,"KRN",9.8,"NM","B","PXRMLPOE",79)

"BLD",8327,"KRN",9.8,"NM","B","PXRMMSER",115)

"BLD",8327,"KRN",9.8,"NM","B","PXRMORCH",121)

"BLD",8327,"KRN",9.8,"NM","B","PXRMOUTC",85)

"BLD",8327,"KRN",9.8,"NM","B","PXRMOUTU",66)

"BLD",8327,"KRN",9.8,"NM","B","PXRMP26D",40)

"BLD",8327,"KRN",9.8,"NM","B","PXRMP26E",97)

"BLD",8327,"KRN",9.8,"NM","B","PXRMP26X",96)

"BLD",8327,"KRN",9.8,"NM","B","PXRMPARS",80)

"BLD",8327,"KRN",9.8,"NM","B","PXRMPDS",4)

"BLD",8327,"KRN",9.8,"NM","B","PXRMPROB",23)

"BLD",8327,"KRN",9.8,"NM","B","PXRMPTTX",129)

"BLD",8327,"KRN",9.8,"NM","B","PXRMRCPT",25)

"BLD",8327,"KRN",9.8,"NM","B","PXRMRDI",113)

"BLD",8327,"KRN",9.8,"NM","B","PXRMREDF",89)

"BLD",8327,"KRN",9.8,"NM","B","PXRMREDT",86)

"BLD",8327,"KRN",9.8,"NM","B","PXRMRUL1",81)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSCR",52)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSEL",38)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSINQ",8)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSTA1",53)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSTA2",54)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSTAC",119)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSTS",105)

"BLD",8327,"KRN",9.8,"NM","B","PXRMSXRM",123)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTAX",19)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTAXD",3)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTAXL",17)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTDLG",39)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTERM",120)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTIU",104)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTMED",130)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXCE",95)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXCR",6)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXCS",91)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXDL",108)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXIC",128)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXIH",127)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXIM",26)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXIN",7)

"BLD",8327,"KRN",9.8,"NM","B","PXRMTXSM",2)

"BLD",8327,"KRN",9.8,"NM","B","PXRMUIDR",30)

"BLD",8327,"KRN",9.8,"NM","B","PXRMUTIL",87)

"BLD",8327,"KRN",9.8,"NM","B","PXRMVCPT",21)

"BLD",8327,"KRN",9.8,"NM","B","PXRMVPOV",22)

"BLD",8327,"KRN",9.8,"NM","B","PXRMXEVL",68)

"BLD",8327,"KRN",9.8,"NM","B","PXRMXSE1",69)

"BLD",8327,"KRN",9.8,"NM","B","PXRMXT",82)

"BLD",8327,"KRN",9.8,"NM","B","PXRMXTA",83)

"BLD",8327,"KRN",9.8,"NM","B","PXRMXTB",84)

"BLD",8327,"KRN",19,0)
19
"BLD",8327,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8327,"KRN",19,"NM",1,0)
PXRM TAXONOMY MANAGEMENT^^0
"BLD",8327,"KRN",19,"NM",2,0)
PXRM TAXONOMY DIALOG^^1^
"BLD",8327,"KRN",19,"NM",3,0)
PXRM DISABLE/ENABLE EVALUATION^^0
"BLD",8327,"KRN",19,"NM",4,0)
PXRM TAX SELECTED CODES REPAIR^^0
"BLD",8327,"KRN",19,"NM","B","PXRM DISABLE/ENABLE EVALUATION",3)

"BLD",8327,"KRN",19,"NM","B","PXRM TAX SELECTED CODES REPAIR",4)

"BLD",8327,"KRN",19,"NM","B","PXRM TAXONOMY DIALOG",2)

"BLD",8327,"KRN",19,"NM","B","PXRM TAXONOMY MANAGEMENT",1)

"BLD",8327,"KRN",19.1,0)
19.1
"BLD",8327,"KRN",101,0)
101
"BLD",8327,"KRN",101,"NM",0)
^9.68A^35^35
"BLD",8327,"KRN",101,"NM",1,0)
PXRM LEXICON ADD^^0
"BLD",8327,"KRN",101,"NM",2,0)
PXRM LEXICON MENU^^0
"BLD",8327,"KRN",101,"NM",3,0)
PXRM LEXICON REMOVE FROM TAXONOMY^^0
"BLD",8327,"KRN",101,"NM",4,0)
PXRM LEXICON REMOVE FROM DIALOG^^0
"BLD",8327,"KRN",101,"NM",5,0)
PXRM LEXICON SELECT ENTRY^^0
"BLD",8327,"KRN",101,"NM",6,0)
PXRM LEXICON USE IN DIALOG^^0
"BLD",8327,"KRN",101,"NM",7,0)
PXRM TAXONOMY ADD^^0
"BLD",8327,"KRN",101,"NM",8,0)
PXRM TAXONOMY CODE SEARCH^^0
"BLD",8327,"KRN",101,"NM",9,0)
PXRM TAXONOMY COPY^^0
"BLD",8327,"KRN",101,"NM",10,0)
PXRM TAXONOMY EDIT^^0
"BLD",8327,"KRN",101,"NM",11,0)
PXRM TAXONOMY CHANGE LOG^^0
"BLD",8327,"KRN",101,"NM",12,0)
PXRM TAXONOMY INQUIRE^^0
"BLD",8327,"KRN",101,"NM",13,0)
PXRM TAXONOMY MENU^^0
"BLD",8327,"KRN",101,"NM",14,0)
PXRM TAXONOMY SELECT ENTRY^^0
"BLD",8327,"KRN",101,"NM",15,0)
PXRM LEXICON SAVE^^0
"BLD",8327,"KRN",101,"NM",16,0)
PXRM TAXONOMY IMPORT^^0
"BLD",8327,"KRN",101,"NM",17,0)
PXRM TAXONOMY UID REPORT^^0
"BLD",8327,"KRN",101,"NM",18,0)
PXRM TAXONOMY CHOOSE ENTRIES^^0
"BLD",8327,"KRN",101,"NM",19,0)
PXRM TAXONOMY CHOOSE ENTRY^^0
"BLD",8327,"KRN",101,"NM",20,0)
PXRM TAXONOMY CHOOSE REMOVE^^0
"BLD",8327,"KRN",101,"NM",21,0)
PXRM TAXONOMY CHOOSE SELECT^^0
"BLD",8327,"KRN",101,"NM",22,0)
PXRM TAXONOMY OLD INQUIRE^^0
"BLD",8327,"KRN",101,"NM",23,0)
VALM QUIT^^4^
"BLD",8327,"KRN",101,"NM",24,0)
PXRM DIALOG TAXONOMY EDIT^^0^
"BLD",8327,"KRN",101,"NM",25,0)
PXRM DIALOG SELECTION MENU (DLGE)^^0
"BLD",8327,"KRN",101,"NM",26,0)
PXRM SELECTION ADD^^0
"BLD",8327,"KRN",101,"NM",27,0)
PXRM DIALOG COPY COMPONENT^^0
"BLD",8327,"KRN",101,"NM",28,0)
PXRM SELECTION VIEW (CV)^^0
"BLD",8327,"KRN",101,"NM",29,0)
PXRM SELECTION PRINT ALL^^0
"BLD",8327,"KRN",101,"NM",30,0)
PXRM SELECTION EXIT^^0
"BLD",8327,"KRN",101,"NM",31,0)
PXRM DIALOG EDIT INQUIRY^^0
"BLD",8327,"KRN",101,"NM",32,0)
PXRM LEXICON EXIT^^0
"BLD",8327,"KRN",101,"NM",33,0)
PXRM LEXICON VIEW^^0
"BLD",8327,"KRN",101,"NM",34,0)
PXRM EXCH LOAD WEB HF^^0
"BLD",8327,"KRN",101,"NM",35,0)
PXRM EXCH MENU^^3
"BLD",8327,"KRN",101,"NM","B","PXRM DIALOG COPY COMPONENT",27)

"BLD",8327,"KRN",101,"NM","B","PXRM DIALOG EDIT INQUIRY",31)

"BLD",8327,"KRN",101,"NM","B","PXRM DIALOG SELECTION MENU (DLGE)",25)

"BLD",8327,"KRN",101,"NM","B","PXRM DIALOG TAXONOMY EDIT",24)

"BLD",8327,"KRN",101,"NM","B","PXRM EXCH LOAD WEB HF",34)

"BLD",8327,"KRN",101,"NM","B","PXRM EXCH MENU",35)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON ADD",1)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON EXIT",32)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON MENU",2)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON REMOVE FROM DIALOG",4)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON REMOVE FROM TAXONOMY",3)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON SAVE",15)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON SELECT ENTRY",5)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON USE IN DIALOG",6)

"BLD",8327,"KRN",101,"NM","B","PXRM LEXICON VIEW",33)

"BLD",8327,"KRN",101,"NM","B","PXRM SELECTION ADD",26)

"BLD",8327,"KRN",101,"NM","B","PXRM SELECTION EXIT",30)

"BLD",8327,"KRN",101,"NM","B","PXRM SELECTION PRINT ALL",29)

"BLD",8327,"KRN",101,"NM","B","PXRM SELECTION VIEW (CV)",28)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY ADD",7)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CHANGE LOG",11)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CHOOSE ENTRIES",18)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CHOOSE ENTRY",19)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CHOOSE REMOVE",20)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CHOOSE SELECT",21)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY CODE SEARCH",8)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY COPY",9)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY EDIT",10)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY IMPORT",16)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY INQUIRE",12)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY MENU",13)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY OLD INQUIRE",22)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY SELECT ENTRY",14)

"BLD",8327,"KRN",101,"NM","B","PXRM TAXONOMY UID REPORT",17)

"BLD",8327,"KRN",101,"NM","B","VALM QUIT",23)

"BLD",8327,"KRN",409.61,0)
409.61
"BLD",8327,"KRN",409.61,"NM",0)
^9.68A^4^4
"BLD",8327,"KRN",409.61,"NM",1,0)
PXRM TAXONOMY MANAGEMENT^^0
"BLD",8327,"KRN",409.61,"NM",2,0)
PXRM LEXICON SELECT^^0
"BLD",8327,"KRN",409.61,"NM",3,0)
PXRM TAXONOMY CHOOSE ENTRIES^^0
"BLD",8327,"KRN",409.61,"NM",4,0)
PXRM SELECTION^^0
"BLD",8327,"KRN",409.61,"NM","B","PXRM LEXICON SELECT",2)

"BLD",8327,"KRN",409.61,"NM","B","PXRM SELECTION",4)

"BLD",8327,"KRN",409.61,"NM","B","PXRM TAXONOMY CHOOSE ENTRIES",3)

"BLD",8327,"KRN",409.61,"NM","B","PXRM TAXONOMY MANAGEMENT",1)

"BLD",8327,"KRN",771,0)
771
"BLD",8327,"KRN",779.2,0)
779.2
"BLD",8327,"KRN",870,0)
870
"BLD",8327,"KRN",8989.51,0)
8989.51
"BLD",8327,"KRN",8989.52,0)
8989.52
"BLD",8327,"KRN",8994,0)
8994
"BLD",8327,"KRN","B",.4,.4)

"BLD",8327,"KRN","B",.401,.401)

"BLD",8327,"KRN","B",.402,.402)

"BLD",8327,"KRN","B",.403,.403)

"BLD",8327,"KRN","B",.5,.5)

"BLD",8327,"KRN","B",.84,.84)

"BLD",8327,"KRN","B",3.6,3.6)

"BLD",8327,"KRN","B",3.8,3.8)

"BLD",8327,"KRN","B",9.2,9.2)

"BLD",8327,"KRN","B",9.8,9.8)

"BLD",8327,"KRN","B",19,19)

"BLD",8327,"KRN","B",19.1,19.1)

"BLD",8327,"KRN","B",101,101)

"BLD",8327,"KRN","B",409.61,409.61)

"BLD",8327,"KRN","B",771,771)

"BLD",8327,"KRN","B",779.2,779.2)

"BLD",8327,"KRN","B",870,870)

"BLD",8327,"KRN","B",8989.51,8989.51)

"BLD",8327,"KRN","B",8989.52,8989.52)

"BLD",8327,"KRN","B",8994,8994)

"BLD",8327,"PRET")

"BLD",8327,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8327,"QUES",0)
^9.62^^
"BLD",8327,"REQB",0)
^9.611^4^4
"BLD",8327,"REQB",1,0)
LEX*2.0*80^2
"BLD",8327,"REQB",2,0)
DG*5.3*862^2
"BLD",8327,"REQB",3,0)
GMPL*2.0*44^2
"BLD",8327,"REQB",4,0)
PXRM*2.0*24^2
"BLD",8327,"REQB","B","DG*5.3*862",2)

"BLD",8327,"REQB","B","GMPL*2.0*44",3)

"BLD",8327,"REQB","B","LEX*2.0*80",1)

"BLD",8327,"REQB","B","PXRM*2.0*24",4)

"DATA",801.45,20,0)
SNOMED
"DATA",801.45,20,1,0)
^801.451P^2^2
"DATA",801.45,20,1,1,0)
1
"DATA",801.45,20,1,1,3)
Select codes to add to Problem List.
"DATA",801.45,20,1,1,5,0)
^801.4515P^1^1
"DATA",801.45,20,1,1,5,1,0)
1766^^^
"DATA",801.45,20,1,2,0)
2^
"DATA",802.4,1,0)
MRD^MRD^PXRMFF0^Most Recent Date
"DATA",802.4,1,1,0)
^802.41^9^9^3130212^^^^
"DATA",802.4,1,1,1,0)
MRD is the Most Recent Date function. Given a list of findings, this
"DATA",802.4,1,1,2,0)
function returns the most recent finding date. An example of a
"DATA",802.4,1,1,3,0)
function finding using MRD is:
"DATA",802.4,1,1,4,0)

"DATA",802.4,1,1,5,0)
MRD(1,3)>MRD(2,4)
"DATA",802.4,1,1,6,0)

"DATA",802.4,1,1,7,0)
This function finding would be true if the most recent date of findings
"DATA",802.4,1,1,8,0)
1 and 3 is greater than the most recent date of findings 2 and 4.
"DATA",802.4,1,1,9,0)

"DATA",802.4,1,2)
1.N0.(1","1.N)
"DATA",802.4,1,100)
N
"DATA",802.4,2,0)
COUNT^COUNT^PXRMFF0^Count
"DATA",802.4,2,1,0)
^802.41^10^10^3130212^^^^
"DATA",802.4,2,1,1,0)
The COUNT function works in conjunction with the Occurrence Count
"DATA",802.4,2,1,2,0)
parameter. For example, if Occurrence Count is set to 5 for finding
"DATA",802.4,2,1,3,0)
number 2, and 3 of the 5 occurrences are true, then COUNT(2) will
"DATA",802.4,2,1,4,0)
return a value of 3. An example of a function finding using COUNT
"DATA",802.4,2,1,5,0)
is:
"DATA",802.4,2,1,6,0)

"DATA",802.4,2,1,7,0)
 COUNT(2)>2
"DATA",802.4,2,1,8,0)

"DATA",802.4,2,1,9,0)
This would be true if finding 2 has 3 or more true occurrences.
"DATA",802.4,2,1,10,0)

"DATA",802.4,2,2)
1.N
"DATA",802.4,2,100)
N
"DATA",802.4,3,0)
MAX_DATE^MAXDATE^PXRMFF0^Maximum Date
"DATA",802.4,3,1,0)
^802.41^10^10^3130212^^^^
"DATA",802.4,3,1,1,0)
Given a list of findings, this function returns the maximum finding
"DATA",802.4,3,1,2,0)
date, which will be the most recent date. Note: MAX_DATE and MRD are
"DATA",802.4,3,1,3,0)
equivalent functions. An example of a function finding using
"DATA",802.4,3,1,4,0)
MAX_DATE is:
"DATA",802.4,3,1,5,0)

"DATA",802.4,3,1,6,0)
MAX_DATE(1,3)>MAX_DATE(2,4)
"DATA",802.4,3,1,7,0)

"DATA",802.4,3,1,8,0)
This would be true if the maximum date of findings 1 and 3 is greater
"DATA",802.4,3,1,9,0)
than the maximum date of findings 2 and 4.
"DATA",802.4,3,1,10,0)

"DATA",802.4,3,2)
1.N0.(1","1.N)
"DATA",802.4,3,100)
N
"DATA",802.4,4,0)
MIN_DATE^MINDATE^PXRMFF0^Minimum Date
"DATA",802.4,4,1,0)
^802.41^9^9^3130212^^^^
"DATA",802.4,4,1,1,0)
Given a list of findings, this function returns the minimum finding
"DATA",802.4,4,1,2,0)
date. This will be the oldest date. An example of a function finding
"DATA",802.4,4,1,3,0)
using the minimum date is:
"DATA",802.4,4,1,4,0)

"DATA",802.4,4,1,5,0)
MIN_DATE(1,3)>MIN_DATE(2,4)
"DATA",802.4,4,1,6,0)

"DATA",802.4,4,1,7,0)
This will be true if the minimum date of findings 1 and 3 is greater
"DATA",802.4,4,1,8,0)
than the minimum date of findings 2 and 4.
"DATA",802.4,4,1,9,0)

"DATA",802.4,4,2)
1.N0.(1","1.N)
"DATA",802.4,4,100)
N
"DATA",802.4,5,0)
FI^FI^PXRMFF0^FI
"DATA",802.4,5,1,0)
^802.41^7^7^3130212^^^^
"DATA",802.4,5,1,1,0)
This function returns the true or false value of a finding. It
"DATA",802.4,5,1,2,0)
provides a way to combine a logical string of regular findings into
"DATA",802.4,5,1,3,0)
a single function finding. This function only takes a single finding
"DATA",802.4,5,1,4,0)
number in its argument list. Example:
"DATA",802.4,5,1,5,0)

"DATA",802.4,5,1,6,0)
  FI(1)&FI(2)&(FI(3)!FI(4))
"DATA",802.4,5,1,7,0)

"DATA",802.4,5,2)
1.N
"DATA",802.4,5,100)
N
"DATA",802.4,6,0)
DUR^DUR^PXRMFF0^Dur
"DATA",802.4,6,1,0)
^802.41^9^9^3060223^^^
"DATA",802.4,6,1,1,0)
The duration function works on a single finding and its action depends
"DATA",802.4,6,1,2,0)
on the type of finding. For findings with a start and stop date, the
"DATA",802.4,6,1,3,0)
function returns the number of days between the start and stop dates.
"DATA",802.4,6,1,4,0)
For findings that have a single date, duration works in conjunction with
"DATA",802.4,6,1,5,0)
Occurrence Count and returns the number of days between the first
"DATA",802.4,6,1,6,0)
occurrence and the last occurrence.
"DATA",802.4,6,1,7,0)

"DATA",802.4,6,1,8,0)
Example: DUR(2)>120 would be true if the duration of finding 2 is
"DATA",802.4,6,1,9,0)
greater than 120 days.
"DATA",802.4,6,2)
1.N
"DATA",802.4,6,100)
N
"DATA",802.4,7,0)
DIFF_DATE^DIFFDATE^PXRMFF0^Date Difference
"DATA",802.4,7,1,0)
^802.41^17^17^3130212^^^^
"DATA",802.4,7,1,1,0)
This function returns the difference in days between the date of the
"DATA",802.4,7,1,2,0)
first finding in the list and the date of the second finding. The
"DATA",802.4,7,1,3,0)
default is to return the absolute value, but if the optional third
"DATA",802.4,7,1,4,0)
parameter of "N" is present, then the actual value is returned. If
"DATA",802.4,7,1,5,0)
you use the actual value, be aware that if the second date is more
"DATA",802.4,7,1,6,0)
recent than the first, the result will be negative.
"DATA",802.4,7,1,7,0)

"DATA",802.4,7,1,8,0)
Some examples:
"DATA",802.4,7,1,9,0)

"DATA",802.4,7,1,10,0)
DIFF_DATE(1,8)>5
"DATA",802.4,7,1,11,0)
This will be true if the dates of finding 1 and finding 8 are more
"DATA",802.4,7,1,12,0)
than 5 days apart.
"DATA",802.4,7,1,13,0)

"DATA",802.4,7,1,14,0)
DIFF_DATE(1,8,"N")<-6
"DATA",802.4,7,1,15,0)
This will be true if the dates of finding 1 and finding 8 are more
"DATA",802.4,7,1,16,0)
than 6 days apart and the date of finding 8 is after finding 1.
"DATA",802.4,7,1,17,0)

"DATA",802.4,7,3)
1.N~1.N~.1(1""""1"N"1"""")
"DATA",802.4,7,100)
N
"DATA",802.4,8,0)
VALUE^VALUE^PXRMFF0^Value
"DATA",802.4,8,1,0)
^802.41^11^11^3130212^^^^
"DATA",802.4,8,1,1,0)
The VALUE function returns any of the CSUB values for a finding.
"DATA",802.4,8,1,2,0)
The argument list is the finding number, the occurrence, and the
"DATA",802.4,8,1,3,0)
CSUB subscript of interest. For example, if finding number 4 was
"DATA",802.4,8,1,4,0)
for a lab test and you wanted to check to see if occurrence 1 was less
"DATA",802.4,8,1,5,0)
than occurrence 2, the function finding would be:
"DATA",802.4,8,1,6,0)
 
"DATA",802.4,8,1,7,0)
VALUE(4,1,"VALUE")<VALUE(4,2,"VALUE")
"DATA",802.4,8,1,8,0)
 
"DATA",802.4,8,1,9,0)
Note: Occurrence Count for the finding must be equal to or greater
"DATA",802.4,8,1,10,0)
than the occurrence(s) you want to use.
"DATA",802.4,8,1,11,0)

"DATA",802.4,8,3)
1.N~1.N~1""""1.AP1""""
"DATA",802.4,8,100)
N
"DATA",802.4,9,0)
NUMERIC^NUMERIC^PXRMFF0^Numeric
"DATA",802.4,9,1,0)
^802.41^12^12^3130212^^^^
"DATA",802.4,9,1,1,0)
The NUMERIC function returns the first numeric portion of any of the
"DATA",802.4,9,1,2,0)
CSUB values for a finding. For example, if the Comment field of a
"DATA",802.4,9,1,3,0)
health factor contains a numerical value, this function can be used
"DATA",802.4,9,1,4,0)
to test it. If you want to check to see if the first numeric portion in
"DATA",802.4,9,1,5,0)
the Comment field of finding 1 occurrence 1 is greater than 2, then
"DATA",802.4,9,1,6,0)
the function finding would be:
"DATA",802.4,9,1,7,0)

"DATA",802.4,9,1,8,0)
NUMERIC(1,1,"COMMENTS")>2
"DATA",802.4,9,1,9,0)

"DATA",802.4,9,1,10,0)
Note: Occurrence Count for the finding must be equal to or greater
"DATA",802.4,9,1,11,0)
than the occurrence(s) you want to use.  
"DATA",802.4,9,1,12,0)

"DATA",802.4,9,3)
1.N~1.N~1""""1.AP1""""
"DATA",802.4,9,100)
N
"DATA",802.4,10,0)
MAX_VALUE^MAXVALUE^PXRMFF0^Maximum Value
"DATA",802.4,10,1,0)
^802.41^14^14^3130212^^^^
"DATA",802.4,10,1,1,0)
This function will return the maximum value from a list of finding
"DATA",802.4,10,1,2,0)
CSUBs. Note that the selected CSUBs must be numeric: any that are not
"DATA",802.4,10,1,3,0)
numeric will be treated as having a value of 0.
"DATA",802.4,10,1,4,0)

"DATA",802.4,10,1,5,0)
To find the maximum for all occurrences, as specified by the
"DATA",802.4,10,1,6,0)
Occurrence Count, of a CSUB of a single finding, the format is:
"DATA",802.4,10,1,7,0)
 MAX_VALUE(N,"CSUB") where N is the finding number.
"DATA",802.4,10,1,8,0)

"DATA",802.4,10,1,9,0)
To find the maximum value for all occurrences, as specified by the
"DATA",802.4,10,1,10,0)
Occurrence Counts, across multiple findings, the format is:
"DATA",802.4,10,1,11,0)
 MAX_VALUE(I,"CSUBI",J,"CSUBJ",K,"CUSBK",...) where I, J, and K are
"DATA",802.4,10,1,12,0)
finding numbers and "CSUBI", "CSUBJ", and "CSUBK" are the CSUBs of
"DATA",802.4,10,1,13,0)
interest for those findings.
"DATA",802.4,10,1,14,0)

"DATA",802.4,10,2)
1.N1","1""""1.AP1""""0.(1","1.N1","1""""1.AP1"""")
"DATA",802.4,10,100)
N
"DATA",802.4,11,0)
MIN_VALUE^MINVALUE^PXRMFF0^Minimum Value
"DATA",802.4,11,1,1,0)
This function finding will return the minimum value from a list of
"DATA",802.4,11,1,2,0)
finding CSUBs. Note the selected CSUBs must be numeric, any that are
"DATA",802.4,11,1,3,0)
not numeric will be treated as having a value of 0.
"DATA",802.4,11,1,4,0)
  
"DATA",802.4,11,1,5,0)
To find the minimum for all occurrences, as specified by the
"DATA",802.4,11,1,6,0)
Occurrence Count, of a CSUB of a single finding the format is:
"DATA",802.4,11,1,7,0)
  MIN_VALUE(N,"CSUB") where N is the finding number.  
"DATA",802.4,11,1,8,0)
  
"DATA",802.4,11,1,9,0)
To find the minimum value for all occurrences, as specified by the
"DATA",802.4,11,1,10,0)
Occurrence Count, across multiple findings the format is: 
"DATA",802.4,11,1,11,0)
  MIN_VALUE(I,"CSUBI",J,"CSUBJ",K,"CUSBK",...) where I, J, and K are
"DATA",802.4,11,1,12,0)
finding  numbers and "CSUBI", "CSUBJ", and "CSUBK" are the CSUBs of
"DATA",802.4,11,1,13,0)
interest for those findings.
"DATA",802.4,11,1,14,0)

"DATA",802.4,11,1,15,0)

"DATA",802.4,11,2)
1.N1","1""""1.AP1""""0.(1","1.N1","1""""1.AP1"""")
"DATA",802.4,11,100)
N
"DATA",802.4,12,0)
DTIME_DIFF^DTIMDIFF^PXRMFF0^Generalized Date Difference
"DATA",802.4,12,1,0)
^802.41^28^28^3130212^^^^
"DATA",802.4,12,1,1,0)
This is a generalized function for returning the difference between
"DATA",802.4,12,1,2,0)
two dates. The arguments to the function are:
"DATA",802.4,12,1,3,0)

"DATA",802.4,12,1,4,0)
 DTIME_DIFF(F1,O1,C1,F2,O2,C2,"U","A")
"DATA",802.4,12,1,5,0)

"DATA",802.4,12,1,6,0)
where F is the finding number, O is the occurrence, and C is the CSUB.
"DATA",802.4,12,1,7,0)
U specifies the units in which to return the difference. The possible
"DATA",802.4,12,1,8,0)
values for the units are "S" (seconds), "M" (minutes), "H" (hours),
"DATA",802.4,12,1,9,0)
and "D" (days).
"DATA",802.4,12,1,10,0)

"DATA",802.4,12,1,11,0)
Note that if the second date is after the first date, the difference
"DATA",802.4,12,1,12,0)
will be negative. If the optional last argument of "A" is present, then the
"DATA",802.4,12,1,13,0)
absolute value of the difference will be returned.
"DATA",802.4,12,1,14,0)
  
"DATA",802.4,12,1,15,0)
 Some examples: 
"DATA",802.4,12,1,16,0)
  
"DATA",802.4,12,1,17,0)
 DTIME_DIFF(1,2,"DATE",8,3,"ADMISSION DATE/TIME","H","A")<24
"DATA",802.4,12,1,18,0)

"DATA",802.4,12,1,19,0)
This will be true if the date specified by finding 1 occurrence 2,
"DATA",802.4,12,1,20,0)
CSUB "DATE", and the date specified by finding 8 occurrence 3 CSUB
"DATA",802.4,12,1,21,0)
"ADMISSION DATE/TIME" are less than 24 hours apart.
"DATA",802.4,12,1,22,0)
  
"DATA",802.4,12,1,23,0)
 DTIME_DIFF(1,1,"STOP DATE",8,2,"DATE","D")<-6
"DATA",802.4,12,1,24,0)

"DATA",802.4,12,1,25,0)
This will be true if the date specified by finding 8 occurrence 2
"DATA",802.4,12,1,26,0)
CSUB "DATE" is more than 6 days after the date specified by finding
"DATA",802.4,12,1,27,0)
1 occurrence 1, CSUB "STOP DATE".
"DATA",802.4,12,1,28,0)

"DATA",802.4,12,3)
1.N~1.N~1.AP~1.N~1.N~1.AP~1""""1(1"S",1"M",1"H",1"D")1""""~0.1(1""""1"A"1"""")
"DATA",802.4,12,100)
N
"DATA",811.4,22,0)
VA-PROGRESS NOTE^PXRMTIU^NOTE^VA-Progress Note^M^1
"DATA",811.4,22,1,0)
^811.41^107^107^3130607^^^^
"DATA",811.4,22,1,1,0)
This computed finding will return multiple instances of a progress
"DATA",811.4,22,1,2,0)
note based on the exact title of the TIU DOCUMENT DEFINTION or the
"DATA",811.4,22,1,3,0)
internal entry number (IEN) of the TIU DOCUMENT DEFINTION. If the
"DATA",811.4,22,1,4,0)
IEN is used, it should be preceded by the "`" character. The note
"DATA",811.4,22,1,5,0)
title or IEN is specified in the COMPUTED FINDING PARAMETER field.
"DATA",811.4,22,1,6,0)
If you want to search for notes with a certain status, then append
"DATA",811.4,22,1,7,0)
"^status" to the title. Status can be any of the following:
"DATA",811.4,22,1,8,0)

"DATA",811.4,22,1,9,0)
  1 = UNDICTATED
"DATA",811.4,22,1,10,0)
  2 = UNTRANSCRIBED
"DATA",811.4,22,1,11,0)
  3 = UNRELEASED
"DATA",811.4,22,1,12,0)
  4 = UNVERIFIED
"DATA",811.4,22,1,13,0)
  5 = UNSIGNED
"DATA",811.4,22,1,14,0)
  6 = UNCOSIGNED
"DATA",811.4,22,1,15,0)
  7 = COMPLETED
"DATA",811.4,22,1,16,0)
  8 = AMENDED
"DATA",811.4,22,1,17,0)
  9 = PURGED
"DATA",811.4,22,1,18,0)
 10 = TEST
"DATA",811.4,22,1,19,0)
 11 = ACTIVE
"DATA",811.4,22,1,20,0)
 13 = INACTIVE
"DATA",811.4,22,1,21,0)
 14 = DELETED
"DATA",811.4,22,1,22,0)
 15 = RETRACTED
"DATA",811.4,22,1,23,0)

"DATA",811.4,22,1,24,0)
If status is not specified, then the default is to search for notes with
"DATA",811.4,22,1,25,0)
a status of COMPLETED.
"DATA",811.4,22,1,26,0)

"DATA",811.4,22,1,27,0)
For example, if the COMPUTED FINDING PARAMETER field contains:
"DATA",811.4,22,1,28,0)
 ADMITTING HISTORY & PHYSICAL^5
"DATA",811.4,22,1,29,0)

"DATA",811.4,22,1,30,0)
the search would be for notes with the exact title of "ADMITTING
"DATA",811.4,22,1,31,0)
HISTORY & PHYSICAL" and a status of "UNSIGNED."
"DATA",811.4,22,1,32,0)

"DATA",811.4,22,1,33,0)
If the IEN were used then the COMPUTED FINDING PARAMETER filed would
"DATA",811.4,22,1,34,0)
be:
"DATA",811.4,22,1,35,0)
 `1091^5
"DATA",811.4,22,1,36,0)

"DATA",811.4,22,1,37,0)
Note: The specified TIU DOCUMENT DEFINITION must have a TYPE of
"DATA",811.4,22,1,38,0)
"DOC"; if it does not, the computed finding will always be false.
"DATA",811.4,22,1,39,0)

"DATA",811.4,22,1,40,0)
The values returned by this computed finding that can be used in the
"DATA",811.4,22,1,41,0)
Condition are V=note title, V("TITLE")=note title and
"DATA",811.4,22,1,42,0)
V("AUTH")=author of note.
"DATA",811.4,22,1,43,0)

"DATA",811.4,22,1,44,0)
Additional data for use in the Condition can be obtained by
"DATA",811.4,22,1,45,0)
appending "^1" after the status; for example:
"DATA",811.4,22,1,46,0)
 ADMITTING HISTORY & PHYSICAL^5^1
"DATA",811.4,22,1,47,0)
 ADMITTING HISTORY & PHYSICAL^^1
"DATA",811.4,22,1,48,0)

"DATA",811.4,22,1,49,0)
(In the second example, since the status is blank, it would default to
"DATA",811.4,22,1,50,0)
notes with a status of COMPLETED.)
"DATA",811.4,22,1,51,0)

"DATA",811.4,22,1,52,0)
The additional data is:
"DATA",811.4,22,1,53,0)

"DATA",811.4,22,1,54,0)
V("DISPLAY NAME")=Display name of TIU title.
"DATA",811.4,22,1,55,0)

"DATA",811.4,22,1,56,0)
V("EPISODE BEGIN DATE/TIME")=String_":"_EPISODE BEGIN DATE/TIME
"DATA",811.4,22,1,57,0)
where String is "Adm" for ward locations and "Visit" for all other
"DATA",811.4,22,1,58,0)
location types. Date/time is in MM/DD/YY format.
"DATA",811.4,22,1,59,0)

"DATA",811.4,22,1,60,0)
V("EPISODE END DATE/TIME")=String_" "_EPISODE END DATE/TIME where
"DATA",811.4,22,1,61,0)
string is null if no date/time or "Dis: " if date/time exists.
"DATA",811.4,22,1,62,0)
Date/time is in MM/DD/YY format
"DATA",811.4,22,1,63,0)

"DATA",811.4,22,1,64,0)
V("EXPECTED COSIGNER")=EXPECTED COSIGNER that is identified on a note. 
"DATA",811.4,22,1,65,0)
If this is used as a CONDITION, and the STATUS of the note is
"DATA",811.4,22,1,66,0)
UNCOSIGNED, you must have the STATUS of 'UNCOSIGNED' appended to the
"DATA",811.4,22,1,67,0)
NOTE TITLE or the IEN of the NOTE TITLE in the COMPUTED FINDING
"DATA",811.4,22,1,68,0)
PARAMETER field. If the note is already 'COSIGNED', then you can use the
"DATA",811.4,22,1,69,0)
default status of COMPLETED to check if the CONDITION is TRUE. If you
"DATA",811.4,22,1,70,0)
are trying to find a particular COSIGNER for a COMPLETED or UNCOSIGNED
"DATA",811.4,22,1,71,0)
note, you will have to have two instances of the finding with one of
"DATA",811.4,22,1,72,0)
them having the STATUS of UNCOSIGNED appended in the COMPUTED FINDING
"DATA",811.4,22,1,73,0)
PARAMETER field and the other having no STATUS in the COMPUTED FINDING
"DATA",811.4,22,1,74,0)
PARAMETER field.  An "OR" logic operator would be used to join these two
"DATA",811.4,22,1,75,0)
findings.
"DATA",811.4,22,1,76,0)

"DATA",811.4,22,1,77,0)
V("EXPECTED SIGNER")=EXPECTED SIGNER that is identified on a note. If
"DATA",811.4,22,1,78,0)
this is used as a CONDITION, and the STATUS of the note is UNSIGNED, you
"DATA",811.4,22,1,79,0)
must have the STATUS of 'UNSIGNED' appended to the NOTE TITLE or the IEN
"DATA",811.4,22,1,80,0)
of the NOTE TITLE in the COMPUTED FINDING PARAMETER field. If the note
"DATA",811.4,22,1,81,0)
is already 'SIGNED' then you can use the default status of COMPLETED to
"DATA",811.4,22,1,82,0)
check if the CONDITION is TRUE. If you are trying to find a particular
"DATA",811.4,22,1,83,0)
SIGNER for a COMPLETED or UNSIGNED note, you will have to have two
"DATA",811.4,22,1,84,0)
instances of the finding with one of them having the STATUS of UNSIGNED
"DATA",811.4,22,1,85,0)
appended in the COMPUTED FINDING PARAMETER field and the other having no
"DATA",811.4,22,1,86,0)
STATUS in the COMPUTED FINDING PARAMETER field. An "OR" logic operator
"DATA",811.4,22,1,87,0)
would be used to join these two findings.
"DATA",811.4,22,1,88,0)

"DATA",811.4,22,1,89,0)
V("HOSPITAL LOCATION")=External format of HOSPITAL LOCATION from TIU
"DATA",811.4,22,1,90,0)
DOCUMENT file
"DATA",811.4,22,1,91,0)

"DATA",811.4,22,1,92,0)
V("NUMBER OF IMAGES")=Number of images associated with TIU DOCUMENT
"DATA",811.4,22,1,93,0)
entry
"DATA",811.4,22,1,94,0)

"DATA",811.4,22,1,95,0)
V("REQUESTING PACKAGE")=REQUESTING PACKAGE REFERENCE field from TIU
"DATA",811.4,22,1,96,0)
DOCUMENT file (internal format)
"DATA",811.4,22,1,97,0)

"DATA",811.4,22,1,98,0)
V("SUBJECT")=SUBJECT (OPTIONAL description) field from TIU DOCUMENT
"DATA",811.4,22,1,99,0)
file (note that characters are limited to ensure returned string is
"DATA",811.4,22,1,100,0)
not longer than 255 characters).
"DATA",811.4,22,1,101,0)

"DATA",811.4,22,1,102,0)

"DATA",811.4,22,1,103,0)

"DATA",811.4,22,1,104,0)

"DATA",811.4,22,1,105,0)

"DATA",811.4,22,1,106,0)

"DATA",811.4,22,1,107,0)

"DATA",811.4,22,100)
N
"DATA",811.4,33,0)
VA-ALLERGY^PXRMART^ARTCL^VA-Allergy^M^1
"DATA",811.4,33,1,0)
^811.41^17^17^3130801^^
"DATA",811.4,33,1,1,0)
Identifies any allergies that contain either the ingredient or drug
"DATA",811.4,33,1,2,0)
class that you specify via the Computed Finding Parameter. Ingredients
"DATA",811.4,33,1,3,0)
will be prefixed with IN: while DR: is used for drug classes. You may
"DATA",811.4,33,1,4,0)
also use the * as a wildcard on the end of your selection. For example,
"DATA",811.4,33,1,5,0)
to search for the ingredient aspirin you would enter IN:ASPIRIN. For
"DATA",811.4,33,1,6,0)
drug class MS101 you would enter DR:MS101. For all ingredients
"DATA",811.4,33,1,7,0)
beginning with "ampi" you would type IN:AMPI*. For all MS1 related
"DATA",811.4,33,1,8,0)
drug classes you'd enter DR:MS1*.
"DATA",811.4,33,1,9,0)

"DATA",811.4,33,1,10,0)
Note: This computed finding does not support date reversal.
"DATA",811.4,33,1,11,0)

"DATA",811.4,33,1,12,0)
The CSUBs are:
"DATA",811.4,33,1,13,0)
 ALLERGY TYPE
"DATA",811.4,33,1,14,0)
 MECHANISM
"DATA",811.4,33,1,15,0)
 OBSERVED/HISTORICAL
"DATA",811.4,33,1,16,0)
 REACTANT
"DATA",811.4,33,1,17,0)

"DATA",811.4,33,100)
N
"DATA",811.4,33,110,0)
^811.42D^2^2
"DATA",811.4,33,110,1,0)
3100106.114818^10000000180
"DATA",811.4,33,110,1,1,0)
^^1^1^3100106
"DATA",811.4,33,110,1,1,1,0)
Exchange Install
"DATA",811.4,33,110,2,0)
3100202.09031^1342
"DATA",811.4,33,110,2,1,0)
^^1^1^3100202
"DATA",811.4,33,110,2,1,1,0)
Exchange Install
"DATA",811.4,35,0)
VA-REMINDER DEFINITION^PXRMCDEF^RDEF^VA-Reminder Definition^S^1
"DATA",811.4,35,1,0)
^811.41^47^47^3051128^^^^
"DATA",811.4,35,1,1,0)
This computed finding will evaluate the reminder definition that is 
"DATA",811.4,35,1,2,0)
specified by name in the COMPUTED FINDING PARAMETER field. The name
"DATA",811.4,35,1,3,0)
that is used is the NAME field (.01) of the reminder definition, not
"DATA",811.4,35,1,4,0)
the PRINT NAME, additionally the definition must be active. The
"DATA",811.4,35,1,5,0)
computed finding will be false if the reminder evaluation status is
"DATA",811.4,35,1,6,0)
CNBD or ERROR, in all other cases it will be true.
"DATA",811.4,35,1,7,0)

"DATA",811.4,35,1,8,0)
The default date of the finding is the evaluation date; this can be
"DATA",811.4,35,1,9,0)
overridden by appending "^DATE=DUE DATE" or "^DATE=LAST DONE" to the
"DATA",811.4,35,1,10,0)
reminder name. If a last done date cannot be determined then the date
"DATA",811.4,35,1,11,0)
of the finding will be the evaluation date.
"DATA",811.4,35,1,12,0)
 
"DATA",811.4,35,1,13,0)
Examples:
"DATA",811.4,35,1,14,0)
  VA-IHD LIPID PROFILE
"DATA",811.4,35,1,15,0)
  VA-IHD LIPID PROFILE^DATE=LAST DONE
"DATA",811.4,35,1,16,0)
  VA-IHD LIPID PROFILE^DATE=DUE DATE
"DATA",811.4,35,1,17,0)
 
"DATA",811.4,35,1,18,0)
The VALUE array, which can be used in a Condition, will contain the
"DATA",811.4,35,1,19,0)
evaluation status, due date, and last done date. The date values
"DATA",811.4,35,1,20,0)
are in VA FileMan format. The variable V is the reminder evaluation
"DATA",811.4,35,1,21,0)
status. Possible values for the reminder evaluation status are:
"DATA",811.4,35,1,22,0)
 DONE
"DATA",811.4,35,1,23,0)
 DUE NOW
"DATA",811.4,35,1,24,0)
 DUE SOON
"DATA",811.4,35,1,25,0)
 RESOLVED
"DATA",811.4,35,1,26,0)
 NEVER
"DATA",811.4,35,1,27,0)
 N/A
"DATA",811.4,35,1,28,0)
 
"DATA",811.4,35,1,29,0)
Example of the Value array:
"DATA",811.4,35,1,30,0)
  VALUE("STATUS")="DUE NOW" 
"DATA",811.4,35,1,31,0)
  VALUE("DUEDATE")=3051010.1220 
"DATA",811.4,35,1,32,0)
  VALUE("LASTDONE")=3051010.1220 
"DATA",811.4,35,1,33,0)
 
"DATA",811.4,35,1,34,0)
Condition examples:
"DATA",811.4,35,1,35,0)
  I V="DUE NOW" 
"DATA",811.4,35,1,36,0)
  I V("STATUS")="DUE NOW" 
"DATA",811.4,35,1,37,0)
  I V("DUEDATE")>3051010.1220 
"DATA",811.4,35,1,38,0)
  I V("LASTDONE")=3051010.1220 
"DATA",811.4,35,1,39,0)
  
"DATA",811.4,35,1,40,0)
***WARNING*** This computed finding can be used to evaluate a reminder 
"DATA",811.4,35,1,41,0)
inside of a reminder evaluation - do not have this computed finding 
"DATA",811.4,35,1,42,0)
evaluate the same reminder as the one being evaluated.  
"DATA",811.4,35,1,43,0)

"DATA",811.4,35,1,44,0)

"DATA",811.4,35,1,45,0)

"DATA",811.4,35,1,46,0)

"DATA",811.4,35,1,47,0)

"DATA",811.4,35,100)
N
"DATA",811.4,69,0)
VA-FILEMAN DATE^PXRMDATE^FMDATE^VA-FileMan Date^S^1
"DATA",811.4,69,1,0)
^811.41^23^23^3130130^^^^
"DATA",811.4,69,1,1,0)
The purpose of this computed finding is to allow the creation of a
"DATA",811.4,69,1,2,0)
finding that has a specific date to be used for comparison purposes
"DATA",811.4,69,1,3,0)
in a function finding date function.
"DATA",811.4,69,1,4,0)

"DATA",811.4,69,1,5,0)
This computed finding takes any acceptable FileMan date, via the
"DATA",811.4,69,1,6,0)
COMPUTED FINDING PARAMETER, and sets the date of the finding and its
"DATA",811.4,69,1,7,0)
value to that date.
"DATA",811.4,69,1,8,0)

"DATA",811.4,69,1,9,0)
See the FileMan Getting Started Manual to learn about acceptable
"DATA",811.4,69,1,10,0)
FileMan date/time formats and abbreviations. Additionally, you may
"DATA",811.4,69,1,11,0)
use the abbreviations T-NY or NOW-NY, where N is an integer and Y
"DATA",811.4,69,1,12,0)
stands for years.
"DATA",811.4,69,1,13,0)

"DATA",811.4,69,1,14,0)
For example, setting the COMPUTED FINDING PARAMETER to T-3M would
"DATA",811.4,69,1,15,0)
give the finding a date and value of the evaluation date minus three
"DATA",811.4,69,1,16,0)
months.
"DATA",811.4,69,1,17,0)

"DATA",811.4,69,1,18,0)
Note that in addition to FileMan dates the global reminder dates
"DATA",811.4,69,1,19,0)
PXRMDOB (date of birth), PXRMDOD (date of death), and PXRMLAD (last
"DATA",811.4,69,1,20,0)
admission date) may also be used. In the case where one of these is
"DATA",811.4,69,1,21,0)
used and it does not exist, for example no last admission, then the
"DATA",811.4,69,1,22,0)
computed finding will be false.
"DATA",811.4,69,1,23,0)

"DATA",811.4,69,100)
N
"DATA",811.8,229,0)
PXRM PATCH 26 DIALOG UPDATES^PULEO,ANTHONY at CAMP MASTER^3130917.191842
"DATA",811.8,229,100,0)
^811.801^1370^1370
"DATA",811.8,229,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,229,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,229,100,3,0)
<PACKAGE_VERSION>2.0P28</PACKAGE_VERSION>
"DATA",811.8,229,100,4,0)
<INDEX_AT>1157</INDEX_AT>
"DATA",811.8,229,100,5,0)
<SOURCE>
"DATA",811.8,229,100,6,0)
<NAME>PXRM PATCH 26 DIALOG UPDATES</NAME>
"DATA",811.8,229,100,7,0)
<USER>PULEO,ANTHONY</USER>
"DATA",811.8,229,100,8,0)
<SITE>CAMP MASTER</SITE>
"DATA",811.8,229,100,9,0)
<DATE_PACKED>09/17/2013@19:18:42</DATE_PACKED>
"DATA",811.8,229,100,10,0)
</SOURCE>
"DATA",811.8,229,100,11,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,229,100,12,0)
The following Clinical Reminder items were selected for packing:
"DATA",811.8,229,100,13,0)
REMINDER DIALOG
"DATA",811.8,229,100,14,0)
  VA-WH PAP SMEAR OBTAINED
"DATA",811.8,229,100,15,0)
  VA-GP AAA PRIOR DIAGNOSIS
"DATA",811.8,229,100,16,0)
  VA-IM FLU H1N1 DONE (1 DOSE)
"DATA",811.8,229,100,17,0)
  VA-IM FLU H1N1 OUTSIDE (1 DOSE)
"DATA",811.8,229,100,18,0)
  VA-IM FLU HIGH DOSE DONE
"DATA",811.8,229,100,19,0)
  VA-IM FLU HIGH DOSE OUTSIDE
"DATA",811.8,229,100,20,0)
]]></DESCRIPTION>
"DATA",811.8,229,100,21,0)
<KEYWORDS>
"DATA",811.8,229,100,22,0)
</KEYWORDS>
"DATA",811.8,229,100,23,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,24,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,229,100,25,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,229,100,26,0)
<POINT_01>VA-RIGHT/LEFT</POINT_01>
"DATA",811.8,229,100,27,0)
<INTERNAL_ENTRY_NUMBER>7441</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,28,0)
<CHECKSUM>3963952569</CHECKSUM>
"DATA",811.8,229,100,29,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,30,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,31,0)
<![CDATA[
"DATA",811.8,229,100,32,0)
8927.1;+7441,;.01~VA-RIGHT/LEFT
"DATA",811.8,229,100,33,0)
8927.1;+7441,;.02~Button
"DATA",811.8,229,100,34,0)
8927.1;+7441,;.03~NO
"DATA",811.8,229,100,35,0)
8927.1;+7441,;.04~0
"DATA",811.8,229,100,36,0)
8927.1;+7441,;.07~0
"DATA",811.8,229,100,37,0)
8927.1;+7441,;.08~NO
"DATA",811.8,229,100,38,0)
8927.1;+7441,;.09~NO
"DATA",811.8,229,100,39,0)
8927.1;+7441,;.1~0
"DATA",811.8,229,100,40,0)
8927.1;+7441,;.11~0
"DATA",811.8,229,100,41,0)
8927.1;+7441,;.12~0
"DATA",811.8,229,100,42,0)
8927.1;+7441,;.13~0
"DATA",811.8,229,100,43,0)
8927.1;+7441,;.14~0
"DATA",811.8,229,100,44,0)
8927.1;+7441,;.15~0
"DATA",811.8,229,100,45,0)
8927.1;+7441,;10~WP-start~2
"DATA",811.8,229,100,46,0)
Right
"DATA",811.8,229,100,47,0)
Left
"DATA",811.8,229,100,48,0)
]]>
"DATA",811.8,229,100,49,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,50,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,51,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,52,0)
<FILE_NAME>IMMUNIZATION</FILE_NAME>
"DATA",811.8,229,100,53,0)
<FILE_NUMBER>9999999.14</FILE_NUMBER>
"DATA",811.8,229,100,54,0)
<POINT_01>INFLUENZA, HIGH DOSE SEASONAL, PRESERV-FREE</POINT_01>
"DATA",811.8,229,100,55,0)
<INTERNAL_ENTRY_NUMBER>612013</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,56,0)
<CHECKSUM>227286113</CHECKSUM>
"DATA",811.8,229,100,57,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,58,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,59,0)
<![CDATA[
"DATA",811.8,229,100,60,0)
9999999.14;+612013,;.01~INFLUENZA, HIGH DOSE SEASONAL, PRESERV-FREE
"DATA",811.8,229,100,61,0)
9999999.14;+612013,;.02~FLU,HI DOS
"DATA",811.8,229,100,62,0)
9999999.14;+612013,;.07~INACTIVE
"DATA",811.8,229,100,63,0)
9999999.14;+612013,;8801~FLU
"DATA",811.8,229,100,64,0)
]]>
"DATA",811.8,229,100,65,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,66,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,67,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,68,0)
<FILE_NAME>IMMUNIZATION</FILE_NAME>
"DATA",811.8,229,100,69,0)
<FILE_NUMBER>9999999.14</FILE_NUMBER>
"DATA",811.8,229,100,70,0)
<POINT_01>INFLUENZA-H1N1-09, NOVEL (PANDEMIC)</POINT_01>
"DATA",811.8,229,100,71,0)
<INTERNAL_ENTRY_NUMBER>612005</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,72,0)
<CHECKSUM>1893897444</CHECKSUM>
"DATA",811.8,229,100,73,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,74,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,75,0)
<![CDATA[
"DATA",811.8,229,100,76,0)
9999999.14;+612005,;.01~INFLUENZA-H1N1-09, NOVEL (PANDEMIC)
"DATA",811.8,229,100,77,0)
9999999.14;+612005,;.02~FLU H1N1
"DATA",811.8,229,100,78,0)
9999999.14;+612005,;.05~2
"DATA",811.8,229,100,79,0)
]]>
"DATA",811.8,229,100,80,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,81,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,82,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,83,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,229,100,84,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,229,100,85,0)
<POINT_01>AAA SCREENING AND F/U</POINT_01>
"DATA",811.8,229,100,86,0)
<INTERNAL_ENTRY_NUMBER>613090</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,87,0)
<CHECKSUM>1710960667</CHECKSUM>
"DATA",811.8,229,100,88,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,89,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,90,0)
<![CDATA[
"DATA",811.8,229,100,91,0)
9999999.64;+613090,;.01~AAA SCREENING AND F/U
"DATA",811.8,229,100,92,0)
9999999.64;+613090,;.1~CATEGORY
"DATA",811.8,229,100,93,0)
]]>
"DATA",811.8,229,100,94,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,95,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,96,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,97,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,229,100,98,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,229,100,99,0)
<POINT_01>ABD AORTIC ANEURYSM &gt;5.4 CM</POINT_01>
"DATA",811.8,229,100,100,0)
<INTERNAL_ENTRY_NUMBER>613091</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,101,0)
<CHECKSUM>3728251035</CHECKSUM>
"DATA",811.8,229,100,102,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,103,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,104,0)
<![CDATA[
"DATA",811.8,229,100,105,0)
9999999.64;+613091,;.01~ABD AORTIC ANEURYSM >5.4 CM
"DATA",811.8,229,100,106,0)
9999999.64;+613091,;.03~AAA SCREENING AND F/U
"DATA",811.8,229,100,107,0)
9999999.64;+613091,;.08~YES
"DATA",811.8,229,100,108,0)
9999999.64;+613091,;.1~FACTOR
"DATA",811.8,229,100,109,0)
]]>
"DATA",811.8,229,100,110,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,111,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,112,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,113,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,229,100,114,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,229,100,115,0)
<POINT_01>ABD AORTIC ANEURYSM 4.0-5.4 CM</POINT_01>
"DATA",811.8,229,100,116,0)
<INTERNAL_ENTRY_NUMBER>613092</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,117,0)
<CHECKSUM>2187421538</CHECKSUM>
"DATA",811.8,229,100,118,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,119,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,120,0)
<![CDATA[
"DATA",811.8,229,100,121,0)
9999999.64;+613092,;.01~ABD AORTIC ANEURYSM 4.0-5.4 CM
"DATA",811.8,229,100,122,0)
9999999.64;+613092,;.03~AAA SCREENING AND F/U
"DATA",811.8,229,100,123,0)
9999999.64;+613092,;.08~YES
"DATA",811.8,229,100,124,0)
9999999.64;+613092,;.1~FACTOR
"DATA",811.8,229,100,125,0)
]]>
"DATA",811.8,229,100,126,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,127,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,128,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,129,0)
<FILE_NAME>HEALTH FACTORS</FILE_NAME>
"DATA",811.8,229,100,130,0)
<FILE_NUMBER>9999999.64</FILE_NUMBER>
"DATA",811.8,229,100,131,0)
<POINT_01>ABD AORTIC ANEURYSM 3.0-3.9 CM</POINT_01>
"DATA",811.8,229,100,132,0)
<INTERNAL_ENTRY_NUMBER>613093</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,133,0)
<CHECKSUM>2236617058</CHECKSUM>
"DATA",811.8,229,100,134,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,135,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,136,0)
<![CDATA[
"DATA",811.8,229,100,137,0)
9999999.64;+613093,;.01~ABD AORTIC ANEURYSM 3.0-3.9 CM
"DATA",811.8,229,100,138,0)
9999999.64;+613093,;.03~AAA SCREENING AND F/U
"DATA",811.8,229,100,139,0)
9999999.64;+613093,;.08~YES
"DATA",811.8,229,100,140,0)
9999999.64;+613093,;.1~FACTOR
"DATA",811.8,229,100,141,0)
]]>
"DATA",811.8,229,100,142,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,143,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,144,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,145,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,229,100,146,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,229,100,147,0)
<POINT_01>Office of Public Health and Environmental Hazards</POINT_01>
"DATA",811.8,229,100,148,0)
<INTERNAL_ENTRY_NUMBER>20</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,149,0)
<CHECKSUM>3347540361</CHECKSUM>
"DATA",811.8,229,100,150,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,151,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,152,0)
<![CDATA[
"DATA",811.8,229,100,153,0)
811.6;+20,;.01~Office of Public Health and Environmental Hazards
"DATA",811.8,229,100,154,0)
811.6;+20,;100~NATIONAL
"DATA",811.8,229,100,155,0)
811.63;+21,+20,;.01~09/17/2013@19:18:51
"DATA",811.8,229,100,156,0)
811.63;+21,+20,;2~WP-start~1
"DATA",811.8,229,100,157,0)
Exchange Stub
"DATA",811.8,229,100,158,0)
]]>
"DATA",811.8,229,100,159,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,160,0)
<IEN_ROOT>
"DATA",811.8,229,100,161,0)
<![CDATA[
"DATA",811.8,229,100,162,0)
21^1
"DATA",811.8,229,100,163,0)
]]>
"DATA",811.8,229,100,164,0)
</IEN_ROOT>
"DATA",811.8,229,100,165,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,166,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,167,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,229,100,168,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,229,100,169,0)
<POINT_01>VA National Center for Health Promotion and Disease Prevention (NCP)</POINT_01>
"DATA",811.8,229,100,170,0)
<INTERNAL_ENTRY_NUMBER>8</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,171,0)
<CHECKSUM>1689859022</CHECKSUM>
"DATA",811.8,229,100,172,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,173,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,174,0)
<![CDATA[
"DATA",811.8,229,100,175,0)
811.6;+8,;.01~VA National Center for Health Promotion and Disease Prevention (NCP)
"DATA",811.8,229,100,176,0)
811.6;+8,;100~NATIONAL
"DATA",811.8,229,100,177,0)
811.63;+9,+8,;.01~09/17/2013@19:18:51
"DATA",811.8,229,100,178,0)
811.63;+9,+8,;2~WP-start~1
"DATA",811.8,229,100,179,0)
Exchange Stub
"DATA",811.8,229,100,180,0)
]]>
"DATA",811.8,229,100,181,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,182,0)
<IEN_ROOT>
"DATA",811.8,229,100,183,0)
<![CDATA[
"DATA",811.8,229,100,184,0)
9^1
"DATA",811.8,229,100,185,0)
]]>
"DATA",811.8,229,100,186,0)
</IEN_ROOT>
"DATA",811.8,229,100,187,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,188,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,189,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,229,100,190,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,229,100,191,0)
<POINT_01>Office of Patient Care Services</POINT_01>
"DATA",811.8,229,100,192,0)
<INTERNAL_ENTRY_NUMBER>21</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,193,0)
<CHECKSUM>3041448431</CHECKSUM>
"DATA",811.8,229,100,194,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,195,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,196,0)
<![CDATA[
"DATA",811.8,229,100,197,0)
811.6;+21,;.01~Office of Patient Care Services
"DATA",811.8,229,100,198,0)
811.6;+21,;100~NATIONAL
"DATA",811.8,229,100,199,0)
811.63;+22,+21,;.01~09/17/2013@19:18:51
"DATA",811.8,229,100,200,0)
811.63;+22,+21,;2~WP-start~1
"DATA",811.8,229,100,201,0)
Exchange Stub
"DATA",811.8,229,100,202,0)
]]>
"DATA",811.8,229,100,203,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,204,0)
<IEN_ROOT>
"DATA",811.8,229,100,205,0)
<![CDATA[
"DATA",811.8,229,100,206,0)
22^1
"DATA",811.8,229,100,207,0)
]]>
"DATA",811.8,229,100,208,0)
</IEN_ROOT>
"DATA",811.8,229,100,209,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,210,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,211,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,229,100,212,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,229,100,213,0)
<POINT_01>Women Veterans Health Program</POINT_01>
"DATA",811.8,229,100,214,0)
<INTERNAL_ENTRY_NUMBER>12</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,215,0)
<CHECKSUM>956830554</CHECKSUM>
"DATA",811.8,229,100,216,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,217,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,218,0)
<![CDATA[
"DATA",811.8,229,100,219,0)
811.6;+12,;.01~Women Veterans Health Program
"DATA",811.8,229,100,220,0)
811.6;+12,;100~NATIONAL
"DATA",811.8,229,100,221,0)
811.61;+13,+12,;.01~Women Veterans Health Program
"DATA",811.8,229,100,222,0)
811.61;+13,+12,;1~WP-start~1
"DATA",811.8,229,100,223,0)
(202) 273-8577
"DATA",811.8,229,100,224,0)
811.63;+14,+12,;.01~09/17/2013@19:18:51
"DATA",811.8,229,100,225,0)
811.63;+14,+12,;2~WP-start~1
"DATA",811.8,229,100,226,0)
Exchange Stub
"DATA",811.8,229,100,227,0)
]]>
"DATA",811.8,229,100,228,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,229,0)
<IEN_ROOT>
"DATA",811.8,229,100,230,0)
<![CDATA[
"DATA",811.8,229,100,231,0)
13^1
"DATA",811.8,229,100,232,0)
14^1
"DATA",811.8,229,100,233,0)
]]>
"DATA",811.8,229,100,234,0)
</IEN_ROOT>
"DATA",811.8,229,100,235,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,236,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,237,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,229,100,238,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,229,100,239,0)
<POINT_01>VA-IM FLU HIGH DOSE</POINT_01>
"DATA",811.8,229,100,240,0)
<INTERNAL_ENTRY_NUMBER>243</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,241,0)
<CHECKSUM>2409301495</CHECKSUM>
"DATA",811.8,229,100,242,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,243,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,244,0)
<![CDATA[
"DATA",811.8,229,100,245,0)
811.2;+243,;.01~VA-IM FLU HIGH DOSE
"DATA",811.8,229,100,246,0)
811.2;+243,;2~WP-start~2
"DATA",811.8,229,100,247,0)
This taxonomy replaced the single code in the dialog for patch
"DATA",811.8,229,100,248,0)
PXRM*2.0*26.
"DATA",811.8,229,100,249,0)
811.2;+243,;100~NATIONAL
"DATA",811.8,229,100,250,0)
811.21;+244,+243,;.01~09/17/2013@19:18:51
"DATA",811.8,229,100,251,0)
811.21;+244,+243,;2~WP-start~1
"DATA",811.8,229,100,252,0)
Exchange Stub
"DATA",811.8,229,100,253,0)
811.23;+245,+243,;.01~Influenza Virus Vaccine, Split Virus, Preservative Free, Enhanced Immunogenicity via Increased Antigen Content, for Intramuscular use
"DATA",811.8,229,100,254,0)
811.231;+246,+245,+243,;.01~CPT
"DATA",811.8,229,100,255,0)
811.231;+246,+245,+243,;1~1
"DATA",811.8,229,100,256,0)
811.2312;+247,+246,+245,+243,;.01~90662
"DATA",811.8,229,100,257,0)
811.2312;+247,+246,+245,+243,;1~YES
"DATA",811.8,229,100,258,0)
811.24;+248,+243,;.01~90662
"DATA",811.8,229,100,259,0)
811.24;+248,+243,;1~CPT
"DATA",811.8,229,100,260,0)
]]>
"DATA",811.8,229,100,261,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,262,0)
<IEN_ROOT>
"DATA",811.8,229,100,263,0)
<![CDATA[
"DATA",811.8,229,100,264,0)
244^1
"DATA",811.8,229,100,265,0)
245^1
"DATA",811.8,229,100,266,0)
246^1
"DATA",811.8,229,100,267,0)
247^1
"DATA",811.8,229,100,268,0)
248^1
"DATA",811.8,229,100,269,0)
]]>
"DATA",811.8,229,100,270,0)
</IEN_ROOT>
"DATA",811.8,229,100,271,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,272,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,273,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,229,100,274,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,229,100,275,0)
<POINT_01>VA-IM FLU H1N1 (1 DOSE)</POINT_01>
"DATA",811.8,229,100,276,0)
<INTERNAL_ENTRY_NUMBER>227</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,277,0)
<CHECKSUM>3950816428</CHECKSUM>
"DATA",811.8,229,100,278,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,279,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,280,0)
<![CDATA[
"DATA",811.8,229,100,281,0)
811.2;+227,;.01~VA-IM FLU H1N1 (1 DOSE)
"DATA",811.8,229,100,282,0)
811.2;+227,;2~WP-start~2
"DATA",811.8,229,100,283,0)
This taxonomy replaced the single code in the dialog for patch 
"DATA",811.8,229,100,284,0)
PXRM*2.0*26.
"DATA",811.8,229,100,285,0)
811.2;+227,;100~NATIONAL
"DATA",811.8,229,100,286,0)
811.21;+228,+227,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,287,0)
811.21;+228,+227,;2~WP-start~1
"DATA",811.8,229,100,288,0)
Exchange Stub
"DATA",811.8,229,100,289,0)
811.23;+229,+227,;.01~Influenza Virus Vaccine, Pandemic Formulation, H1N1
"DATA",811.8,229,100,290,0)
811.231;+230,+229,+227,;.01~CPT
"DATA",811.8,229,100,291,0)
811.231;+230,+229,+227,;1~1
"DATA",811.8,229,100,292,0)
811.2312;+231,+230,+229,+227,;.01~90663
"DATA",811.8,229,100,293,0)
811.2312;+231,+230,+229,+227,;1~YES
"DATA",811.8,229,100,294,0)
811.24;+232,+227,;.01~90663
"DATA",811.8,229,100,295,0)
811.24;+232,+227,;1~CPT
"DATA",811.8,229,100,296,0)
]]>
"DATA",811.8,229,100,297,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,298,0)
<IEN_ROOT>
"DATA",811.8,229,100,299,0)
<![CDATA[
"DATA",811.8,229,100,300,0)
228^1
"DATA",811.8,229,100,301,0)
229^1
"DATA",811.8,229,100,302,0)
230^1
"DATA",811.8,229,100,303,0)
231^1
"DATA",811.8,229,100,304,0)
232^1
"DATA",811.8,229,100,305,0)
]]>
"DATA",811.8,229,100,306,0)
</IEN_ROOT>
"DATA",811.8,229,100,307,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,308,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,309,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,229,100,310,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,229,100,311,0)
<POINT_01>VA-ABD AORTIC ANEURYSM</POINT_01>
"DATA",811.8,229,100,312,0)
<INTERNAL_ENTRY_NUMBER>215</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,313,0)
<CHECKSUM>1482717772</CHECKSUM>
"DATA",811.8,229,100,314,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,315,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,316,0)
<![CDATA[
"DATA",811.8,229,100,317,0)
811.2;+215,;.01~VA-ABD AORTIC ANEURYSM
"DATA",811.8,229,100,318,0)
811.2;+215,;.02~ICD codes and CPT codes indicating AAA
"DATA",811.8,229,100,319,0)
811.2;+215,;2~WP-start~1
"DATA",811.8,229,100,320,0)
ICD codes and CPT codes indicating AAA
"DATA",811.8,229,100,321,0)
811.2;+215,;100~NATIONAL
"DATA",811.8,229,100,322,0)
811.2;+215,;101~Office of Patient Care Services
"DATA",811.8,229,100,323,0)
811.21;+216,+215,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,324,0)
811.21;+216,+215,;2~WP-start~1
"DATA",811.8,229,100,325,0)
Exchange Stub
"DATA",811.8,229,100,326,0)
811.23;+222,+215,;.01~441.3
"DATA",811.8,229,100,327,0)
811.23;+223,+215,;.01~Copy from CPT range 34800 to 34805
"DATA",811.8,229,100,328,0)
811.23;+224,+215,;.01~Copy from CPT range 34825 to 34832
"DATA",811.8,229,100,329,0)
811.23;+225,+215,;.01~Copy from CPT range 35081 to 35103
"DATA",811.8,229,100,330,0)
811.23;+226,+215,;.01~Copy from CPT range 75952 to 75953
"DATA",811.8,229,100,331,0)
811.23;+227,+215,;.01~Copy from ICD range 441.3 to 441.4
"DATA",811.8,229,100,332,0)
811.23;+228,+215,;.01~Abdominal  aortic aneurysm
"DATA",811.8,229,100,333,0)
811.231;+229,+222,+215,;.01~ICD
"DATA",811.8,229,100,334,0)
811.231;+229,+222,+215,;1~1
"DATA",811.8,229,100,335,0)
811.231;+229,+222,+215,;3~0
"DATA",811.8,229,100,336,0)
811.231;+230,+223,+215,;.01~CPT
"DATA",811.8,229,100,337,0)
811.231;+230,+223,+215,;1~5
"DATA",811.8,229,100,338,0)
811.231;+230,+223,+215,;3~0
"DATA",811.8,229,100,339,0)
811.231;+231,+224,+215,;.01~CPT
"DATA",811.8,229,100,340,0)
811.231;+231,+224,+215,;1~5
"DATA",811.8,229,100,341,0)
811.231;+231,+224,+215,;3~0
"DATA",811.8,229,100,342,0)
811.231;+232,+225,+215,;.01~CPT
"DATA",811.8,229,100,343,0)
811.231;+232,+225,+215,;1~6
"DATA",811.8,229,100,344,0)
811.231;+232,+225,+215,;3~0
"DATA",811.8,229,100,345,0)
811.231;+233,+226,+215,;.01~CPT
"DATA",811.8,229,100,346,0)
811.231;+233,+226,+215,;1~2
"DATA",811.8,229,100,347,0)
811.231;+233,+226,+215,;3~0
"DATA",811.8,229,100,348,0)
811.231;+234,+227,+215,;.01~ICD
"DATA",811.8,229,100,349,0)
811.231;+234,+227,+215,;1~2
"DATA",811.8,229,100,350,0)
811.231;+234,+227,+215,;3~0
"DATA",811.8,229,100,351,0)
811.231;+235,+228,+215,;.01~10D
"DATA",811.8,229,100,352,0)
811.231;+235,+228,+215,;1~2
"DATA",811.8,229,100,353,0)
811.231;+235,+228,+215,;3~1
"DATA",811.8,229,100,354,0)
811.231;+236,+228,+215,;.01~ICD
"DATA",811.8,229,100,355,0)
811.231;+236,+228,+215,;1~1
"DATA",811.8,229,100,356,0)
811.231;+236,+228,+215,;3~1
"DATA",811.8,229,100,357,0)
811.2312;+237,+229,+222,+215,;.01~441.3
"DATA",811.8,229,100,358,0)
811.2312;+237,+229,+222,+215,;1~NO
"DATA",811.8,229,100,359,0)
811.2312;+238,+230,+223,+215,;.01~34800
"DATA",811.8,229,100,360,0)
811.2312;+238,+230,+223,+215,;1~NO
"DATA",811.8,229,100,361,0)
811.2312;+239,+231,+224,+215,;.01~34825
"DATA",811.8,229,100,362,0)
811.2312;+239,+231,+224,+215,;1~NO
"DATA",811.8,229,100,363,0)
811.2312;+240,+232,+225,+215,;.01~35081
"DATA",811.8,229,100,364,0)
811.2312;+240,+232,+225,+215,;1~NO
"DATA",811.8,229,100,365,0)
811.2312;+241,+233,+226,+215,;.01~75952
"DATA",811.8,229,100,366,0)
811.2312;+241,+233,+226,+215,;1~NO
"DATA",811.8,229,100,367,0)
811.2312;+242,+234,+227,+215,;.01~441.3
"DATA",811.8,229,100,368,0)
811.2312;+242,+234,+227,+215,;1~NO
"DATA",811.8,229,100,369,0)
811.2312;+243,+235,+228,+215,;.01~I71.3
"DATA",811.8,229,100,370,0)
811.2312;+243,+235,+228,+215,;1~NO
"DATA",811.8,229,100,371,0)
811.2312;+244,+236,+228,+215,;.01~441.4
"DATA",811.8,229,100,372,0)
811.2312;+244,+236,+228,+215,;1~YES
"DATA",811.8,229,100,373,0)
811.2312;+245,+230,+223,+215,;.01~34802
"DATA",811.8,229,100,374,0)
811.2312;+245,+230,+223,+215,;1~NO
"DATA",811.8,229,100,375,0)
811.2312;+246,+231,+224,+215,;.01~34826
"DATA",811.8,229,100,376,0)
811.2312;+246,+231,+224,+215,;1~NO
"DATA",811.8,229,100,377,0)
811.2312;+247,+232,+225,+215,;.01~35082
"DATA",811.8,229,100,378,0)
811.2312;+247,+232,+225,+215,;1~NO
"DATA",811.8,229,100,379,0)
811.2312;+248,+233,+226,+215,;.01~75953
"DATA",811.8,229,100,380,0)
811.2312;+248,+233,+226,+215,;1~NO
"DATA",811.8,229,100,381,0)
811.2312;+249,+234,+227,+215,;.01~441.4
"DATA",811.8,229,100,382,0)
811.2312;+249,+234,+227,+215,;1~NO
"DATA",811.8,229,100,383,0)
811.2312;+250,+235,+228,+215,;.01~I71.4
"DATA",811.8,229,100,384,0)
811.2312;+250,+235,+228,+215,;1~YES
"DATA",811.8,229,100,385,0)
811.2312;+251,+230,+223,+215,;.01~34803
"DATA",811.8,229,100,386,0)
811.2312;+251,+230,+223,+215,;1~NO
"DATA",811.8,229,100,387,0)
811.2312;+252,+231,+224,+215,;.01~34830
"DATA",811.8,229,100,388,0)
811.2312;+252,+231,+224,+215,;1~NO
"DATA",811.8,229,100,389,0)
811.2312;+253,+232,+225,+215,;.01~35091
"DATA",811.8,229,100,390,0)
811.2312;+253,+232,+225,+215,;1~NO
"DATA",811.8,229,100,391,0)
811.2312;+254,+230,+223,+215,;.01~34804
"DATA",811.8,229,100,392,0)
811.2312;+254,+230,+223,+215,;1~NO
"DATA",811.8,229,100,393,0)
811.2312;+255,+231,+224,+215,;.01~34831
"DATA",811.8,229,100,394,0)
811.2312;+255,+231,+224,+215,;1~NO
"DATA",811.8,229,100,395,0)
811.2312;+256,+232,+225,+215,;.01~35092
"DATA",811.8,229,100,396,0)
811.2312;+256,+232,+225,+215,;1~NO
"DATA",811.8,229,100,397,0)
811.2312;+257,+230,+223,+215,;.01~34805
"DATA",811.8,229,100,398,0)
811.2312;+257,+230,+223,+215,;1~NO
"DATA",811.8,229,100,399,0)
811.2312;+258,+231,+224,+215,;.01~34832
"DATA",811.8,229,100,400,0)
811.2312;+258,+231,+224,+215,;1~NO
"DATA",811.8,229,100,401,0)
811.2312;+259,+232,+225,+215,;.01~35102
"DATA",811.8,229,100,402,0)
811.2312;+259,+232,+225,+215,;1~NO
"DATA",811.8,229,100,403,0)
811.2312;+260,+232,+225,+215,;.01~35103
"DATA",811.8,229,100,404,0)
811.2312;+260,+232,+225,+215,;1~NO
"DATA",811.8,229,100,405,0)
811.24;+261,+215,;.01~I71.4
"DATA",811.8,229,100,406,0)
811.24;+261,+215,;1~10D
"DATA",811.8,229,100,407,0)
811.24;+262,+215,;.01~441.4
"DATA",811.8,229,100,408,0)
811.24;+262,+215,;1~ICD
"DATA",811.8,229,100,409,0)
]]>
"DATA",811.8,229,100,410,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,411,0)
<IEN_ROOT>
"DATA",811.8,229,100,412,0)
<![CDATA[
"DATA",811.8,229,100,413,0)
216^1
"DATA",811.8,229,100,414,0)
217^1
"DATA",811.8,229,100,415,0)
218^1
"DATA",811.8,229,100,416,0)
219^2
"DATA",811.8,229,100,417,0)
220^3
"DATA",811.8,229,100,418,0)
221^4
"DATA",811.8,229,100,419,0)
222^11
"DATA",811.8,229,100,420,0)
223^12
"DATA",811.8,229,100,421,0)
224^13
"DATA",811.8,229,100,422,0)
225^14
"DATA",811.8,229,100,423,0)
226^15
"DATA",811.8,229,100,424,0)
227^16
"DATA",811.8,229,100,425,0)
228^6
"DATA",811.8,229,100,426,0)
229^1
"DATA",811.8,229,100,427,0)
230^1
"DATA",811.8,229,100,428,0)
231^1
"DATA",811.8,229,100,429,0)
232^1
"DATA",811.8,229,100,430,0)
233^1
"DATA",811.8,229,100,431,0)
234^1
"DATA",811.8,229,100,432,0)
235^1
"DATA",811.8,229,100,433,0)
236^2
"DATA",811.8,229,100,434,0)
237^1
"DATA",811.8,229,100,435,0)
238^1
"DATA",811.8,229,100,436,0)
239^1
"DATA",811.8,229,100,437,0)
240^1
"DATA",811.8,229,100,438,0)
241^1
"DATA",811.8,229,100,439,0)
242^1
"DATA",811.8,229,100,440,0)
243^1
"DATA",811.8,229,100,441,0)
244^1
"DATA",811.8,229,100,442,0)
245^2
"DATA",811.8,229,100,443,0)
246^2
"DATA",811.8,229,100,444,0)
247^2
"DATA",811.8,229,100,445,0)
248^2
"DATA",811.8,229,100,446,0)
249^2
"DATA",811.8,229,100,447,0)
250^2
"DATA",811.8,229,100,448,0)
251^3
"DATA",811.8,229,100,449,0)
252^3
"DATA",811.8,229,100,450,0)
253^3
"DATA",811.8,229,100,451,0)
254^4
"DATA",811.8,229,100,452,0)
255^4
"DATA",811.8,229,100,453,0)
256^4
"DATA",811.8,229,100,454,0)
257^5
"DATA",811.8,229,100,455,0)
258^5
"DATA",811.8,229,100,456,0)
259^5
"DATA",811.8,229,100,457,0)
260^6
"DATA",811.8,229,100,458,0)
261^1
"DATA",811.8,229,100,459,0)
262^2
"DATA",811.8,229,100,460,0)
]]>
"DATA",811.8,229,100,461,0)
</IEN_ROOT>
"DATA",811.8,229,100,462,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,463,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,464,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,229,100,465,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,229,100,466,0)
<POINT_01>VA-WH PAP SMEAR OBTAINED</POINT_01>
"DATA",811.8,229,100,467,0)
<INTERNAL_ENTRY_NUMBER>48</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,468,0)
<CHECKSUM>3003229566</CHECKSUM>
"DATA",811.8,229,100,469,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,470,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,471,0)
<![CDATA[
"DATA",811.8,229,100,472,0)
811.2;+48,;.01~VA-WH PAP SMEAR OBTAINED
"DATA",811.8,229,100,473,0)
811.2;+48,;.02~Obtain PAP smear codes
"DATA",811.8,229,100,474,0)
811.2;+48,;2~WP-start~1
"DATA",811.8,229,100,475,0)
Obtain PAP smear codes
"DATA",811.8,229,100,476,0)
811.2;+48,;100~NATIONAL
"DATA",811.8,229,100,477,0)
811.2;+48,;101~Women Veterans Health Program
"DATA",811.8,229,100,478,0)
811.21;+49,+48,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,479,0)
811.21;+49,+48,;2~WP-start~1
"DATA",811.8,229,100,480,0)
Exchange Stub
"DATA",811.8,229,100,481,0)
811.23;+54,+48,;.01~Copy from CPT range P3000 to P3001
"DATA",811.8,229,100,482,0)
811.23;+55,+48,;.01~Copy from CPT range Q0060 to Q0061
"DATA",811.8,229,100,483,0)
811.23;+56,+48,;.01~Copy from CPT range Q0091 to Q0091
"DATA",811.8,229,100,484,0)
811.23;+57,+48,;.01~Copy from ICD range V76.2 to V76.2
"DATA",811.8,229,100,485,0)
811.23;+58,+48,;.01~Z01.42
"DATA",811.8,229,100,486,0)
811.231;+59,+54,+48,;.01~CPC
"DATA",811.8,229,100,487,0)
811.231;+59,+54,+48,;1~2
"DATA",811.8,229,100,488,0)
811.231;+59,+54,+48,;3~0
"DATA",811.8,229,100,489,0)
811.231;+60,+55,+48,;.01~CPC
"DATA",811.8,229,100,490,0)
811.231;+60,+55,+48,;1~2
"DATA",811.8,229,100,491,0)
811.231;+60,+55,+48,;3~0
"DATA",811.8,229,100,492,0)
811.231;+61,+56,+48,;.01~CPC
"DATA",811.8,229,100,493,0)
811.231;+61,+56,+48,;1~1
"DATA",811.8,229,100,494,0)
811.231;+61,+56,+48,;3~1
"DATA",811.8,229,100,495,0)
811.231;+62,+57,+48,;.01~ICD
"DATA",811.8,229,100,496,0)
811.231;+62,+57,+48,;1~1
"DATA",811.8,229,100,497,0)
811.231;+62,+57,+48,;3~0
"DATA",811.8,229,100,498,0)
811.231;+63,+58,+48,;.01~10D
"DATA",811.8,229,100,499,0)
811.231;+63,+58,+48,;1~1
"DATA",811.8,229,100,500,0)
811.231;+63,+58,+48,;3~1
"DATA",811.8,229,100,501,0)
811.2312;+71,+59,+54,+48,;.01~P3000
"DATA",811.8,229,100,502,0)
811.2312;+71,+59,+54,+48,;1~NO
"DATA",811.8,229,100,503,0)
811.2312;+72,+60,+55,+48,;.01~Q0060
"DATA",811.8,229,100,504,0)
811.2312;+72,+60,+55,+48,;1~NO
"DATA",811.8,229,100,505,0)
811.2312;+73,+61,+56,+48,;.01~Q0091
"DATA",811.8,229,100,506,0)
811.2312;+73,+61,+56,+48,;1~YES
"DATA",811.8,229,100,507,0)
811.2312;+74,+62,+57,+48,;.01~V76.2
"DATA",811.8,229,100,508,0)
811.2312;+74,+62,+57,+48,;1~NO
"DATA",811.8,229,100,509,0)
811.2312;+75,+63,+58,+48,;.01~Z01.42
"DATA",811.8,229,100,510,0)
811.2312;+75,+63,+58,+48,;1~YES
"DATA",811.8,229,100,511,0)
811.2312;+76,+59,+54,+48,;.01~P3001
"DATA",811.8,229,100,512,0)
811.2312;+76,+59,+54,+48,;1~NO
"DATA",811.8,229,100,513,0)
811.2312;+77,+60,+55,+48,;.01~Q0061
"DATA",811.8,229,100,514,0)
811.2312;+77,+60,+55,+48,;1~NO
"DATA",811.8,229,100,515,0)
811.24;+78,+48,;.01~Q0091
"DATA",811.8,229,100,516,0)
811.24;+78,+48,;1~CPC
"DATA",811.8,229,100,517,0)
811.24;+79,+48,;.01~Z01.42
"DATA",811.8,229,100,518,0)
811.24;+79,+48,;1~10D
"DATA",811.8,229,100,519,0)
]]>
"DATA",811.8,229,100,520,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,521,0)
<IEN_ROOT>
"DATA",811.8,229,100,522,0)
<![CDATA[
"DATA",811.8,229,100,523,0)
49^1
"DATA",811.8,229,100,524,0)
50^1
"DATA",811.8,229,100,525,0)
51^1
"DATA",811.8,229,100,526,0)
52^2
"DATA",811.8,229,100,527,0)
53^3
"DATA",811.8,229,100,528,0)
54^1
"DATA",811.8,229,100,529,0)
55^2
"DATA",811.8,229,100,530,0)
56^3
"DATA",811.8,229,100,531,0)
57^4
"DATA",811.8,229,100,532,0)
58^5
"DATA",811.8,229,100,533,0)
59^1
"DATA",811.8,229,100,534,0)
60^1
"DATA",811.8,229,100,535,0)
61^1
"DATA",811.8,229,100,536,0)
62^1
"DATA",811.8,229,100,537,0)
63^1
"DATA",811.8,229,100,538,0)
64^1
"DATA",811.8,229,100,539,0)
65^1
"DATA",811.8,229,100,540,0)
66^2
"DATA",811.8,229,100,541,0)
67^3
"DATA",811.8,229,100,542,0)
68^4
"DATA",811.8,229,100,543,0)
69^5
"DATA",811.8,229,100,544,0)
70^6
"DATA",811.8,229,100,545,0)
71^1
"DATA",811.8,229,100,546,0)
72^1
"DATA",811.8,229,100,547,0)
73^1
"DATA",811.8,229,100,548,0)
74^1
"DATA",811.8,229,100,549,0)
75^1
"DATA",811.8,229,100,550,0)
76^2
"DATA",811.8,229,100,551,0)
77^2
"DATA",811.8,229,100,552,0)
78^1
"DATA",811.8,229,100,553,0)
79^2
"DATA",811.8,229,100,554,0)
]]>
"DATA",811.8,229,100,555,0)
</IEN_ROOT>
"DATA",811.8,229,100,556,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,557,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,558,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,559,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,560,0)
<POINT_01>PXRM OUTSIDE LOCATION</POINT_01>
"DATA",811.8,229,100,561,0)
<INTERNAL_ENTRY_NUMBER>41</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,562,0)
<CHECKSUM>3464040608</CHECKSUM>
"DATA",811.8,229,100,563,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,564,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,565,0)
<![CDATA[
"DATA",811.8,229,100,566,0)
801.41;+41,;.01~PXRM OUTSIDE LOCATION
"DATA",811.8,229,100,567,0)
801.41;+41,;4~prompt
"DATA",811.8,229,100,568,0)
801.41;+41,;24~Location:
"DATA",811.8,229,100,569,0)
801.41;+41,;46~VST_LOC
"DATA",811.8,229,100,570,0)
801.41;+41,;100~NATIONAL
"DATA",811.8,229,100,571,0)
801.44;+42,+41,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,572,0)
801.44;+42,+41,;2~WP-start~1
"DATA",811.8,229,100,573,0)
Exchange Stub
"DATA",811.8,229,100,574,0)
]]>
"DATA",811.8,229,100,575,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,576,0)
<IEN_ROOT>
"DATA",811.8,229,100,577,0)
<![CDATA[
"DATA",811.8,229,100,578,0)
42^1
"DATA",811.8,229,100,579,0)
]]>
"DATA",811.8,229,100,580,0)
</IEN_ROOT>
"DATA",811.8,229,100,581,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,582,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,583,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,584,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,585,0)
<POINT_01>PXRM VISIT DATE</POINT_01>
"DATA",811.8,229,100,586,0)
<INTERNAL_ENTRY_NUMBER>40</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,587,0)
<CHECKSUM>4262247822</CHECKSUM>
"DATA",811.8,229,100,588,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,589,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,590,0)
<![CDATA[
"DATA",811.8,229,100,591,0)
801.41;+40,;.01~PXRM VISIT DATE
"DATA",811.8,229,100,592,0)
801.41;+40,;4~prompt
"DATA",811.8,229,100,593,0)
801.41;+40,;24~Date:
"DATA",811.8,229,100,594,0)
801.41;+40,;46~VST_DATE
"DATA",811.8,229,100,595,0)
801.41;+40,;100~NATIONAL
"DATA",811.8,229,100,596,0)
801.44;+41,+40,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,597,0)
801.44;+41,+40,;2~WP-start~1
"DATA",811.8,229,100,598,0)
Exchange Stub
"DATA",811.8,229,100,599,0)
]]>
"DATA",811.8,229,100,600,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,601,0)
<IEN_ROOT>
"DATA",811.8,229,100,602,0)
<![CDATA[
"DATA",811.8,229,100,603,0)
41^1
"DATA",811.8,229,100,604,0)
]]>
"DATA",811.8,229,100,605,0)
</IEN_ROOT>
"DATA",811.8,229,100,606,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,607,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,608,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,609,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,610,0)
<POINT_01>VA-IM FLU HIGH DOSE OUTSIDE</POINT_01>
"DATA",811.8,229,100,611,0)
<INTERNAL_ENTRY_NUMBER>6642</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,612,0)
<CHECKSUM>568205714</CHECKSUM>
"DATA",811.8,229,100,613,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,614,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,615,0)
<![CDATA[
"DATA",811.8,229,100,616,0)
801.41;+6642,;.01~VA-IM FLU HIGH DOSE OUTSIDE
"DATA",811.8,229,100,617,0)
801.41;+6642,;4~dialog element
"DATA",811.8,229,100,618,0)
801.41;+6642,;13~DONE ELSEWHERE (HISTORICAL)
"DATA",811.8,229,100,619,0)
801.41;+6642,;15~IM.INFLUENZA, HIGH DOSE SEASONAL, PRESERV-FREE
"DATA",811.8,229,100,620,0)
801.41;+6642,;25~WP-start~1
"DATA",811.8,229,100,621,0)
Outside or Prior Influenza High Dose Immunization (Seasonal vaccine)
"DATA",811.8,229,100,622,0)
801.41;+6642,;35~WP-start~1
"DATA",811.8,229,100,623,0)
The patient received the high dose influenza immunization previously.
"DATA",811.8,229,100,624,0)
801.41;+6642,;100~NATIONAL
"DATA",811.8,229,100,625,0)
801.41;+6642,;101~Office of Public Health and Environmental Hazards
"DATA",811.8,229,100,626,0)
801.41;+6642,;123~NO PICK LIST
"DATA",811.8,229,100,627,0)
801.4118;+6643,+6642,;.01~TX.VA-IM FLU HIGH DOSE
"DATA",811.8,229,100,628,0)
801.412;+6644,+6642,;.01~5
"DATA",811.8,229,100,629,0)
801.412;+6644,+6642,;2~PXRM VISIT DATE
"DATA",811.8,229,100,630,0)
801.412;+6644,+6642,;9~YES
"DATA",811.8,229,100,631,0)
801.412;+6645,+6642,;.01~10
"DATA",811.8,229,100,632,0)
801.412;+6645,+6642,;2~PXRM OUTSIDE LOCATION
"DATA",811.8,229,100,633,0)
801.44;+6646,+6642,;.01~09/17/2013@19:18:52
"DATA",811.8,229,100,634,0)
801.44;+6646,+6642,;2~WP-start~1
"DATA",811.8,229,100,635,0)
Exchange Stub
"DATA",811.8,229,100,636,0)
]]>
"DATA",811.8,229,100,637,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,638,0)
<IEN_ROOT>
"DATA",811.8,229,100,639,0)
<![CDATA[
"DATA",811.8,229,100,640,0)
6643^1
"DATA",811.8,229,100,641,0)
6644^1
"DATA",811.8,229,100,642,0)
6645^2
"DATA",811.8,229,100,643,0)
6646^1
"DATA",811.8,229,100,644,0)
]]>
"DATA",811.8,229,100,645,0)
</IEN_ROOT>
"DATA",811.8,229,100,646,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,647,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,648,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,649,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,650,0)
<POINT_01>INFLUENZA HIGH DOSE MANUFACTURERS</POINT_01>
"DATA",811.8,229,100,651,0)
<INTERNAL_ENTRY_NUMBER>6641</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,652,0)
<CHECKSUM>4004105961</CHECKSUM>
"DATA",811.8,229,100,653,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,654,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,655,0)
<![CDATA[
"DATA",811.8,229,100,656,0)
801.41;+6641,;.01~INFLUENZA HIGH DOSE MANUFACTURERS
"DATA",811.8,229,100,657,0)
801.41;+6641,;4~prompt
"DATA",811.8,229,100,658,0)
801.41;+6641,;21~Sanofi Pasteur
"DATA",811.8,229,100,659,0)
801.41;+6641,;24~Manufacturer: 
"DATA",811.8,229,100,660,0)
801.41;+6641,;46~COM
"DATA",811.8,229,100,661,0)
801.41;+6641,;100~LOCAL
"DATA",811.8,229,100,662,0)
801.44;+6642,+6641,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,663,0)
801.44;+6642,+6641,;2~WP-start~1
"DATA",811.8,229,100,664,0)
Exchange Stub
"DATA",811.8,229,100,665,0)
]]>
"DATA",811.8,229,100,666,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,667,0)
<IEN_ROOT>
"DATA",811.8,229,100,668,0)
<![CDATA[
"DATA",811.8,229,100,669,0)
6642^1
"DATA",811.8,229,100,670,0)
]]>
"DATA",811.8,229,100,671,0)
</IEN_ROOT>
"DATA",811.8,229,100,672,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,673,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,674,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,675,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,676,0)
<POINT_01>VA-IM FLU HIGH DOSE DONE</POINT_01>
"DATA",811.8,229,100,677,0)
<INTERNAL_ENTRY_NUMBER>6638</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,678,0)
<CHECKSUM>149022764</CHECKSUM>
"DATA",811.8,229,100,679,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,680,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,681,0)
<![CDATA[
"DATA",811.8,229,100,682,0)
801.41;+6638,;.01~VA-IM FLU HIGH DOSE DONE
"DATA",811.8,229,100,683,0)
801.41;+6638,;4~dialog element
"DATA",811.8,229,100,684,0)
801.41;+6638,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,685,0)
801.41;+6638,;15~IM.INFLUENZA, HIGH DOSE SEASONAL, PRESERV-FREE
"DATA",811.8,229,100,686,0)
801.41;+6638,;25~WP-start~2
"DATA",811.8,229,100,687,0)
The patient received influenza high dose immunization 0.5 ml IM today 
"DATA",811.8,229,100,688,0)
   in the {FLD:VA-RIGHT/LEFT} Deltoid.
"DATA",811.8,229,100,689,0)
801.41;+6638,;100~NATIONAL
"DATA",811.8,229,100,690,0)
801.41;+6638,;101~Office of Public Health and Environmental Hazards
"DATA",811.8,229,100,691,0)
801.41;+6638,;123~NO PICK LIST
"DATA",811.8,229,100,692,0)
801.4118;+6639,+6638,;.01~TX.VA-IM FLU HIGH DOSE
"DATA",811.8,229,100,693,0)
801.412;+6640,+6638,;.01~2
"DATA",811.8,229,100,694,0)
801.412;+6640,+6638,;2~INFLUENZA HIGH DOSE MANUFACTURERS
"DATA",811.8,229,100,695,0)
801.412;+6640,+6638,;9~YES
"DATA",811.8,229,100,696,0)
801.44;+6641,+6638,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,697,0)
801.44;+6641,+6638,;2~WP-start~1
"DATA",811.8,229,100,698,0)
Exchange Stub
"DATA",811.8,229,100,699,0)
]]>
"DATA",811.8,229,100,700,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,701,0)
<IEN_ROOT>
"DATA",811.8,229,100,702,0)
<![CDATA[
"DATA",811.8,229,100,703,0)
6639^1
"DATA",811.8,229,100,704,0)
6640^2
"DATA",811.8,229,100,705,0)
6641^1
"DATA",811.8,229,100,706,0)
]]>
"DATA",811.8,229,100,707,0)
</IEN_ROOT>
"DATA",811.8,229,100,708,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,709,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,710,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,711,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,712,0)
<POINT_01>VA-IM FLU H1N1 OUTSIDE (1 DOSE)</POINT_01>
"DATA",811.8,229,100,713,0)
<INTERNAL_ENTRY_NUMBER>4804</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,714,0)
<CHECKSUM>3718552017</CHECKSUM>
"DATA",811.8,229,100,715,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,716,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,717,0)
<![CDATA[
"DATA",811.8,229,100,718,0)
801.41;+4804,;.01~VA-IM FLU H1N1 OUTSIDE (1 DOSE)
"DATA",811.8,229,100,719,0)
801.41;+4804,;4~dialog element
"DATA",811.8,229,100,720,0)
801.41;+4804,;13~DONE ELSEWHERE (HISTORICAL)
"DATA",811.8,229,100,721,0)
801.41;+4804,;15~IM.INFLUENZA-H1N1-09, NOVEL (PANDEMIC)
"DATA",811.8,229,100,722,0)
801.41;+4804,;25~WP-start~1
"DATA",811.8,229,100,723,0)
Outside or Prior Influenza H1N1 Immunization (Pandemic strain)
"DATA",811.8,229,100,724,0)
801.41;+4804,;35~WP-start~2
"DATA",811.8,229,100,725,0)
The patient received the immunization for Influenza H1N1 pandemic 
"DATA",811.8,229,100,726,0)
strain previously.
"DATA",811.8,229,100,727,0)
801.41;+4804,;100~NATIONAL
"DATA",811.8,229,100,728,0)
801.41;+4804,;101~VA National Center for Health Promotion and Disease Prevention (NCP)
"DATA",811.8,229,100,729,0)
801.41;+4804,;123~NO PICK LIST
"DATA",811.8,229,100,730,0)
801.4118;+4805,+4804,;.01~TX.VA-IM FLU H1N1 (1 DOSE)
"DATA",811.8,229,100,731,0)
801.412;+4806,+4804,;.01~5
"DATA",811.8,229,100,732,0)
801.412;+4806,+4804,;2~PXRM VISIT DATE
"DATA",811.8,229,100,733,0)
801.412;+4806,+4804,;9~YES
"DATA",811.8,229,100,734,0)
801.412;+4807,+4804,;.01~10
"DATA",811.8,229,100,735,0)
801.412;+4807,+4804,;2~PXRM OUTSIDE LOCATION
"DATA",811.8,229,100,736,0)
801.44;+4808,+4804,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,737,0)
801.44;+4808,+4804,;2~WP-start~1
"DATA",811.8,229,100,738,0)
Exchange Stub
"DATA",811.8,229,100,739,0)
]]>
"DATA",811.8,229,100,740,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,741,0)
<IEN_ROOT>
"DATA",811.8,229,100,742,0)
<![CDATA[
"DATA",811.8,229,100,743,0)
4805^1
"DATA",811.8,229,100,744,0)
4806^1
"DATA",811.8,229,100,745,0)
4807^2
"DATA",811.8,229,100,746,0)
4808^1
"DATA",811.8,229,100,747,0)
]]>
"DATA",811.8,229,100,748,0)
</IEN_ROOT>
"DATA",811.8,229,100,749,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,750,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,751,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,752,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,753,0)
<POINT_01>INFLUENZA H1N1 MANUFACTURERS</POINT_01>
"DATA",811.8,229,100,754,0)
<INTERNAL_ENTRY_NUMBER>4791</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,755,0)
<CHECKSUM>2235897050</CHECKSUM>
"DATA",811.8,229,100,756,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,757,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,758,0)
<![CDATA[
"DATA",811.8,229,100,759,0)
801.41;+4791,;.01~INFLUENZA H1N1 MANUFACTURERS
"DATA",811.8,229,100,760,0)
801.41;+4791,;4~prompt
"DATA",811.8,229,100,761,0)
801.41;+4791,;24~Manufacturer/Lot #/Exp Date:
"DATA",811.8,229,100,762,0)
801.41;+4791,;46~COM
"DATA",811.8,229,100,763,0)
801.41;+4791,;100~LOCAL
"DATA",811.8,229,100,764,0)
801.4145;+4792,+4791,;.01~12
"DATA",811.8,229,100,765,0)
801.4145;+4792,+4791,;2~Novartis;#102143P1;4/30/10
"DATA",811.8,229,100,766,0)
801.4145;+4793,+4791,;.01~6
"DATA",811.8,229,100,767,0)
801.4145;+4793,+4791,;2~Novartis;#1013274P;Mar 2010
"DATA",811.8,229,100,768,0)
801.4145;+4794,+4791,;.01~26
"DATA",811.8,229,100,769,0)
801.4145;+4794,+4791,;2~Sanofi Pasteur;UP067AA;5/17/11
"DATA",811.8,229,100,770,0)
801.4145;+4795,+4791,;.01~24
"DATA",811.8,229,100,771,0)
801.4145;+4795,+4791,;2~Sanofi Pasteur;UP052AA;5/5/11
"DATA",811.8,229,100,772,0)
801.4145;+4796,+4791,;.01~8
"DATA",811.8,229,100,773,0)
801.4145;+4796,+4791,;2~Novartis;#1013302P;4/20/10
"DATA",811.8,229,100,774,0)
801.4145;+4797,+4791,;.01~19
"DATA",811.8,229,100,775,0)
801.4145;+4797,+4791,;2~Sanofi Pasteur;UP032AA;4/24/11
"DATA",811.8,229,100,776,0)
801.4145;+4798,+4791,;.01~23
"DATA",811.8,229,100,777,0)
801.4145;+4798,+4791,;2~Sanofi Pasteur;UP043AA;4/29/11
"DATA",811.8,229,100,778,0)
801.4145;+4799,+4791,;.01~27
"DATA",811.8,229,100,779,0)
801.4145;+4799,+4791,;2~Sanofi Pasteur;UP069AA;5/18/11
"DATA",811.8,229,100,780,0)
801.4145;+4800,+4791,;.01~30
"DATA",811.8,229,100,781,0)
801.4145;+4800,+4791,;2~Sanofi Pasteur;UP070AA;5/19/11
"DATA",811.8,229,100,782,0)
801.4145;+4801,+4791,;.01~35
"DATA",811.8,229,100,783,0)
801.4145;+4801,+4791,;2~Sanofi Pasteur;UP106AA;6/8/11
"DATA",811.8,229,100,784,0)
801.4145;+4802,+4791,;.01~7
"DATA",811.8,229,100,785,0)
801.4145;+4802,+4791,;2~Novartis;#1013291P;Apr 2010
"DATA",811.8,229,100,786,0)
801.4145;+4803,+4791,;.01~13
"DATA",811.8,229,100,787,0)
801.4145;+4803,+4791,;2~Novartis;#105053P1;5/31/10
"DATA",811.8,229,100,788,0)
801.4145;+4804,+4791,;.01~5
"DATA",811.8,229,100,789,0)
801.4145;+4804,+4791,;2~Novartis;#10127605;Feb 2010
"DATA",811.8,229,100,790,0)
801.4145;+4805,+4791,;.01~10
"DATA",811.8,229,100,791,0)
801.4145;+4805,+4791,;2~Novartis;#102044P1;3/31/10
"DATA",811.8,229,100,792,0)
801.4145;+4806,+4791,;.01~11
"DATA",811.8,229,100,793,0)
801.4145;+4806,+4791,;2~Novartis;#102134P1;3/31/10
"DATA",811.8,229,100,794,0)
801.44;+4807,+4791,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,795,0)
801.44;+4807,+4791,;2~WP-start~1
"DATA",811.8,229,100,796,0)
Exchange Stub
"DATA",811.8,229,100,797,0)
]]>
"DATA",811.8,229,100,798,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,799,0)
<IEN_ROOT>
"DATA",811.8,229,100,800,0)
<![CDATA[
"DATA",811.8,229,100,801,0)
4792^10
"DATA",811.8,229,100,802,0)
4793^12
"DATA",811.8,229,100,803,0)
4794^13
"DATA",811.8,229,100,804,0)
4795^14
"DATA",811.8,229,100,805,0)
4796^15
"DATA",811.8,229,100,806,0)
4797^16
"DATA",811.8,229,100,807,0)
4798^17
"DATA",811.8,229,100,808,0)
4799^18
"DATA",811.8,229,100,809,0)
4800^20
"DATA",811.8,229,100,810,0)
4801^22
"DATA",811.8,229,100,811,0)
4802^24
"DATA",811.8,229,100,812,0)
4803^25
"DATA",811.8,229,100,813,0)
4804^6
"DATA",811.8,229,100,814,0)
4805^7
"DATA",811.8,229,100,815,0)
4806^9
"DATA",811.8,229,100,816,0)
4807^1
"DATA",811.8,229,100,817,0)
]]>
"DATA",811.8,229,100,818,0)
</IEN_ROOT>
"DATA",811.8,229,100,819,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,820,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,821,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,822,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,823,0)
<POINT_01>VA-IM FLU H1N1 DONE (1 DOSE)</POINT_01>
"DATA",811.8,229,100,824,0)
<INTERNAL_ENTRY_NUMBER>4803</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,825,0)
<CHECKSUM>3870459522</CHECKSUM>
"DATA",811.8,229,100,826,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,827,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,828,0)
<![CDATA[
"DATA",811.8,229,100,829,0)
801.41;+4803,;.01~VA-IM FLU H1N1 DONE (1 DOSE)
"DATA",811.8,229,100,830,0)
801.41;+4803,;4~dialog element
"DATA",811.8,229,100,831,0)
801.41;+4803,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,832,0)
801.41;+4803,;15~IM.INFLUENZA-H1N1-09, NOVEL (PANDEMIC)
"DATA",811.8,229,100,833,0)
801.41;+4803,;25~WP-start~2
"DATA",811.8,229,100,834,0)
The patient received influenza H1N1 immunization 0.5ml IM today 
"DATA",811.8,229,100,835,0)
   in the {FLD:VA-RIGHT/LEFT} Deltoid.
"DATA",811.8,229,100,836,0)
801.41;+4803,;100~NATIONAL
"DATA",811.8,229,100,837,0)
801.41;+4803,;101~VA National Center for Health Promotion and Disease Prevention (NCP)
"DATA",811.8,229,100,838,0)
801.41;+4803,;123~NO PICK LIST
"DATA",811.8,229,100,839,0)
801.4118;+4804,+4803,;.01~TX.VA-IM FLU H1N1 (1 DOSE)
"DATA",811.8,229,100,840,0)
801.412;+4805,+4803,;.01~2
"DATA",811.8,229,100,841,0)
801.412;+4805,+4803,;2~INFLUENZA H1N1 MANUFACTURERS
"DATA",811.8,229,100,842,0)
801.412;+4805,+4803,;9~YES
"DATA",811.8,229,100,843,0)
801.44;+4806,+4803,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,844,0)
801.44;+4806,+4803,;2~WP-start~1
"DATA",811.8,229,100,845,0)
Exchange Stub
"DATA",811.8,229,100,846,0)
]]>
"DATA",811.8,229,100,847,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,848,0)
<IEN_ROOT>
"DATA",811.8,229,100,849,0)
<![CDATA[
"DATA",811.8,229,100,850,0)
4804^1
"DATA",811.8,229,100,851,0)
4805^2
"DATA",811.8,229,100,852,0)
4806^1
"DATA",811.8,229,100,853,0)
]]>
"DATA",811.8,229,100,854,0)
</IEN_ROOT>
"DATA",811.8,229,100,855,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,856,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,857,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,858,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,859,0)
<POINT_01>PXRM FV ADD TO PROBLEM LIST</POINT_01>
"DATA",811.8,229,100,860,0)
<INTERNAL_ENTRY_NUMBER>4557</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,861,0)
<CHECKSUM>4035054187</CHECKSUM>
"DATA",811.8,229,100,862,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,863,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,864,0)
<![CDATA[
"DATA",811.8,229,100,865,0)
801.41;+4557,;.01~PXRM FV ADD TO PROBLEM LIST
"DATA",811.8,229,100,866,0)
801.41;+4557,;4~forced value
"DATA",811.8,229,100,867,0)
801.41;+4557,;14~POV
"DATA",811.8,229,100,868,0)
801.41;+4557,;22~1
"DATA",811.8,229,100,869,0)
801.41;+4557,;23~YES
"DATA",811.8,229,100,870,0)
801.41;+4557,;24~Add to Problem List
"DATA",811.8,229,100,871,0)
801.41;+4557,;46~POV_ADD
"DATA",811.8,229,100,872,0)
801.41;+4557,;100~NATIONAL
"DATA",811.8,229,100,873,0)
801.44;+4558,+4557,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,874,0)
801.44;+4558,+4557,;2~WP-start~1
"DATA",811.8,229,100,875,0)
Exchange Stub
"DATA",811.8,229,100,876,0)
]]>
"DATA",811.8,229,100,877,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,878,0)
<IEN_ROOT>
"DATA",811.8,229,100,879,0)
<![CDATA[
"DATA",811.8,229,100,880,0)
4558^1
"DATA",811.8,229,100,881,0)
]]>
"DATA",811.8,229,100,882,0)
</IEN_ROOT>
"DATA",811.8,229,100,883,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,884,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,885,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,886,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,887,0)
<POINT_01>VA-TEXT AAA &gt;5.4</POINT_01>
"DATA",811.8,229,100,888,0)
<INTERNAL_ENTRY_NUMBER>4541</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,889,0)
<CHECKSUM>3926218099</CHECKSUM>
"DATA",811.8,229,100,890,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,891,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,892,0)
<![CDATA[
"DATA",811.8,229,100,893,0)
801.41;+4541,;.01~VA-TEXT AAA >5.4
"DATA",811.8,229,100,894,0)
801.41;+4541,;4~dialog element
"DATA",811.8,229,100,895,0)
801.41;+4541,;23~YES
"DATA",811.8,229,100,896,0)
801.41;+4541,;25~WP-start~2
"DATA",811.8,229,100,897,0)
Patients with aortic aneurysms of >5.4 cm need to be considered for 
"DATA",811.8,229,100,898,0)
referral for surgical intervention.
"DATA",811.8,229,100,899,0)
801.41;+4541,;51~SUPPRESS
"DATA",811.8,229,100,900,0)
801.41;+4541,;100~NATIONAL
"DATA",811.8,229,100,901,0)
801.41;+4541,;101~Office of Patient Care Services
"DATA",811.8,229,100,902,0)
801.44;+4542,+4541,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,903,0)
801.44;+4542,+4541,;2~WP-start~1
"DATA",811.8,229,100,904,0)
Exchange Stub
"DATA",811.8,229,100,905,0)
]]>
"DATA",811.8,229,100,906,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,907,0)
<IEN_ROOT>
"DATA",811.8,229,100,908,0)
<![CDATA[
"DATA",811.8,229,100,909,0)
4542^1
"DATA",811.8,229,100,910,0)
]]>
"DATA",811.8,229,100,911,0)
</IEN_ROOT>
"DATA",811.8,229,100,912,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,913,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,914,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,915,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,916,0)
<POINT_01>VA-OUTSIDE/PRIOR AAA &gt;5.4</POINT_01>
"DATA",811.8,229,100,917,0)
<INTERNAL_ENTRY_NUMBER>4542</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,918,0)
<CHECKSUM>2978612838</CHECKSUM>
"DATA",811.8,229,100,919,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,920,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,921,0)
<![CDATA[
"DATA",811.8,229,100,922,0)
801.41;+4542,;.01~VA-OUTSIDE/PRIOR AAA >5.4
"DATA",811.8,229,100,923,0)
801.41;+4542,;4~dialog group
"DATA",811.8,229,100,924,0)
801.41;+4542,;7~2
"DATA",811.8,229,100,925,0)
801.41;+4542,;8~NO
"DATA",811.8,229,100,926,0)
801.41;+4542,;9~NO SELECTION REQUIRED
"DATA",811.8,229,100,927,0)
801.41;+4542,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,928,0)
801.41;+4542,;15~HF.ABD AORTIC ANEURYSM >5.4 CM
"DATA",811.8,229,100,929,0)
801.41;+4542,;25~WP-start~1
"DATA",811.8,229,100,930,0)
Abdominal aortic aneurysm present - >5.4 cm.
"DATA",811.8,229,100,931,0)
801.41;+4542,;50~HIDE
"DATA",811.8,229,100,932,0)
801.41;+4542,;100~NATIONAL
"DATA",811.8,229,100,933,0)
801.41;+4542,;101~Office of Patient Care Services
"DATA",811.8,229,100,934,0)
801.412;+4543,+4542,;.01~25
"DATA",811.8,229,100,935,0)
801.412;+4543,+4542,;2~VA-TEXT AAA >5.4
"DATA",811.8,229,100,936,0)
801.44;+4544,+4542,;.01~09/17/2013@19:18:53
"DATA",811.8,229,100,937,0)
801.44;+4544,+4542,;2~WP-start~1
"DATA",811.8,229,100,938,0)
Exchange Stub
"DATA",811.8,229,100,939,0)
]]>
"DATA",811.8,229,100,940,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,941,0)
<IEN_ROOT>
"DATA",811.8,229,100,942,0)
<![CDATA[
"DATA",811.8,229,100,943,0)
4543^3
"DATA",811.8,229,100,944,0)
4544^1
"DATA",811.8,229,100,945,0)
]]>
"DATA",811.8,229,100,946,0)
</IEN_ROOT>
"DATA",811.8,229,100,947,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,948,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,949,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,950,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,951,0)
<POINT_01>VA-TEXT AAA 4.0-5.4</POINT_01>
"DATA",811.8,229,100,952,0)
<INTERNAL_ENTRY_NUMBER>4543</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,953,0)
<CHECKSUM>3264253164</CHECKSUM>
"DATA",811.8,229,100,954,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,955,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,956,0)
<![CDATA[
"DATA",811.8,229,100,957,0)
801.41;+4543,;.01~VA-TEXT AAA 4.0-5.4
"DATA",811.8,229,100,958,0)
801.41;+4543,;4~dialog element
"DATA",811.8,229,100,959,0)
801.41;+4543,;23~YES
"DATA",811.8,229,100,960,0)
801.41;+4543,;25~WP-start~2
"DATA",811.8,229,100,961,0)
Patients with aneurysms of 4.0 to 5.4 cm need to be followed every 6 
"DATA",811.8,229,100,962,0)
months with repeat studies to monitor for growth of the aneurysm.
"DATA",811.8,229,100,963,0)
801.41;+4543,;51~SUPPRESS
"DATA",811.8,229,100,964,0)
801.41;+4543,;100~NATIONAL
"DATA",811.8,229,100,965,0)
801.41;+4543,;101~Office of Patient Care Services
"DATA",811.8,229,100,966,0)
801.44;+4544,+4543,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,967,0)
801.44;+4544,+4543,;2~WP-start~1
"DATA",811.8,229,100,968,0)
Exchange Stub
"DATA",811.8,229,100,969,0)
]]>
"DATA",811.8,229,100,970,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,971,0)
<IEN_ROOT>
"DATA",811.8,229,100,972,0)
<![CDATA[
"DATA",811.8,229,100,973,0)
4544^1
"DATA",811.8,229,100,974,0)
]]>
"DATA",811.8,229,100,975,0)
</IEN_ROOT>
"DATA",811.8,229,100,976,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,977,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,978,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,979,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,980,0)
<POINT_01>VA-OUTSIDE/PRIOR AAA 4.0-5.4</POINT_01>
"DATA",811.8,229,100,981,0)
<INTERNAL_ENTRY_NUMBER>4544</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,982,0)
<CHECKSUM>1165558095</CHECKSUM>
"DATA",811.8,229,100,983,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,984,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,985,0)
<![CDATA[
"DATA",811.8,229,100,986,0)
801.41;+4544,;.01~VA-OUTSIDE/PRIOR AAA 4.0-5.4
"DATA",811.8,229,100,987,0)
801.41;+4544,;4~dialog group
"DATA",811.8,229,100,988,0)
801.41;+4544,;7~2
"DATA",811.8,229,100,989,0)
801.41;+4544,;8~NO
"DATA",811.8,229,100,990,0)
801.41;+4544,;9~NO SELECTION REQUIRED
"DATA",811.8,229,100,991,0)
801.41;+4544,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,992,0)
801.41;+4544,;15~HF.ABD AORTIC ANEURYSM 4.0-5.4 CM
"DATA",811.8,229,100,993,0)
801.41;+4544,;25~WP-start~1
"DATA",811.8,229,100,994,0)
Abdominal aortic aneurysm present - 4.0-5.4 cm.
"DATA",811.8,229,100,995,0)
801.41;+4544,;50~HIDE
"DATA",811.8,229,100,996,0)
801.41;+4544,;100~NATIONAL
"DATA",811.8,229,100,997,0)
801.41;+4544,;101~Office of Patient Care Services
"DATA",811.8,229,100,998,0)
801.412;+4545,+4544,;.01~25
"DATA",811.8,229,100,999,0)
801.412;+4545,+4544,;2~VA-TEXT AAA 4.0-5.4
"DATA",811.8,229,100,1000,0)
801.44;+4546,+4544,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,1001,0)
801.44;+4546,+4544,;2~WP-start~1
"DATA",811.8,229,100,1002,0)
Exchange Stub
"DATA",811.8,229,100,1003,0)
]]>
"DATA",811.8,229,100,1004,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,1005,0)
<IEN_ROOT>
"DATA",811.8,229,100,1006,0)
<![CDATA[
"DATA",811.8,229,100,1007,0)
4545^3
"DATA",811.8,229,100,1008,0)
4546^1
"DATA",811.8,229,100,1009,0)
]]>
"DATA",811.8,229,100,1010,0)
</IEN_ROOT>
"DATA",811.8,229,100,1011,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,1012,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,1013,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,1014,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,1015,0)
<POINT_01>VA-TEXT AAA 3.0-3.9</POINT_01>
"DATA",811.8,229,100,1016,0)
<INTERNAL_ENTRY_NUMBER>4545</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,1017,0)
<CHECKSUM>448554629</CHECKSUM>
"DATA",811.8,229,100,1018,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,1019,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,1020,0)
<![CDATA[
"DATA",811.8,229,100,1021,0)
801.41;+4545,;.01~VA-TEXT AAA 3.0-3.9
"DATA",811.8,229,100,1022,0)
801.41;+4545,;4~dialog element
"DATA",811.8,229,100,1023,0)
801.41;+4545,;23~YES
"DATA",811.8,229,100,1024,0)
801.41;+4545,;25~WP-start~2
"DATA",811.8,229,100,1025,0)
Patients with aortic aneurysms of 3.0 to 3.9 cm need to be followed every 
"DATA",811.8,229,100,1026,0)
2-3 years.
"DATA",811.8,229,100,1027,0)
801.41;+4545,;51~SUPPRESS
"DATA",811.8,229,100,1028,0)
801.41;+4545,;100~NATIONAL
"DATA",811.8,229,100,1029,0)
801.41;+4545,;101~Office of Patient Care Services
"DATA",811.8,229,100,1030,0)
801.44;+4546,+4545,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,1031,0)
801.44;+4546,+4545,;2~WP-start~1
"DATA",811.8,229,100,1032,0)
Exchange Stub
"DATA",811.8,229,100,1033,0)
]]>
"DATA",811.8,229,100,1034,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,1035,0)
<IEN_ROOT>
"DATA",811.8,229,100,1036,0)
<![CDATA[
"DATA",811.8,229,100,1037,0)
4546^1
"DATA",811.8,229,100,1038,0)
]]>
"DATA",811.8,229,100,1039,0)
</IEN_ROOT>
"DATA",811.8,229,100,1040,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,1041,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,1042,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,1043,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,1044,0)
<POINT_01>VA-OUTSIDE/PRIOR AAA 3.0-3.9</POINT_01>
"DATA",811.8,229,100,1045,0)
<INTERNAL_ENTRY_NUMBER>4546</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,1046,0)
<CHECKSUM>483342045</CHECKSUM>
"DATA",811.8,229,100,1047,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,229,100,1048,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,1049,0)
<![CDATA[
"DATA",811.8,229,100,1050,0)
801.41;+4546,;.01~VA-OUTSIDE/PRIOR AAA 3.0-3.9
"DATA",811.8,229,100,1051,0)
801.41;+4546,;4~dialog group
"DATA",811.8,229,100,1052,0)
801.41;+4546,;7~2
"DATA",811.8,229,100,1053,0)
801.41;+4546,;8~NO
"DATA",811.8,229,100,1054,0)
801.41;+4546,;9~NO SELECTION REQUIRED
"DATA",811.8,229,100,1055,0)
801.41;+4546,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,1056,0)
801.41;+4546,;15~HF.ABD AORTIC ANEURYSM 3.0-3.9 CM
"DATA",811.8,229,100,1057,0)
801.41;+4546,;25~WP-start~1
"DATA",811.8,229,100,1058,0)
Abdominal aortic aneurysm present -  3.0-3.9 cm.
"DATA",811.8,229,100,1059,0)
801.41;+4546,;50~HIDE
"DATA",811.8,229,100,1060,0)
801.41;+4546,;100~NATIONAL
"DATA",811.8,229,100,1061,0)
801.41;+4546,;101~Office of Patient Care Services
"DATA",811.8,229,100,1062,0)
801.412;+4547,+4546,;.01~25
"DATA",811.8,229,100,1063,0)
801.412;+4547,+4546,;2~VA-TEXT AAA 3.0-3.9
"DATA",811.8,229,100,1064,0)
801.44;+4548,+4546,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,1065,0)
801.44;+4548,+4546,;2~WP-start~1
"DATA",811.8,229,100,1066,0)
Exchange Stub
"DATA",811.8,229,100,1067,0)
]]>
"DATA",811.8,229,100,1068,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,1069,0)
<IEN_ROOT>
"DATA",811.8,229,100,1070,0)
<![CDATA[
"DATA",811.8,229,100,1071,0)
4547^3
"DATA",811.8,229,100,1072,0)
4548^1
"DATA",811.8,229,100,1073,0)
]]>
"DATA",811.8,229,100,1074,0)
</IEN_ROOT>
"DATA",811.8,229,100,1075,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,1076,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,1077,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,1078,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,1079,0)
<POINT_01>VA-GP AAA PRIOR DIAGNOSIS</POINT_01>
"DATA",811.8,229,100,1080,0)
<INTERNAL_ENTRY_NUMBER>4751</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,1081,0)
<CHECKSUM>4245765736</CHECKSUM>
"DATA",811.8,229,100,1082,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,1083,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,1084,0)
<![CDATA[
"DATA",811.8,229,100,1085,0)
801.41;+4751,;.01~VA-GP AAA PRIOR DIAGNOSIS
"DATA",811.8,229,100,1086,0)
801.41;+4751,;4~dialog group
"DATA",811.8,229,100,1087,0)
801.41;+4751,;5~choose one if known
"DATA",811.8,229,100,1088,0)
801.41;+4751,;6~YES
"DATA",811.8,229,100,1089,0)
801.41;+4751,;7~3
"DATA",811.8,229,100,1090,0)
801.41;+4751,;8~YES
"DATA",811.8,229,100,1091,0)
801.41;+4751,;9~NONE OR ONE SELECTION
"DATA",811.8,229,100,1092,0)
801.41;+4751,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,1093,0)
801.41;+4751,;15~TX.VA-ABD AORTIC ANEURYSM
"DATA",811.8,229,100,1094,0)
801.41;+4751,;25~WP-start~1
"DATA",811.8,229,100,1095,0)
Known Abdominal Aortic Aneurysm
"DATA",811.8,229,100,1096,0)
801.41;+4751,;35~WP-start~1
"DATA",811.8,229,100,1097,0)
The patient is known to have an abdominal aortic aneurysm.
"DATA",811.8,229,100,1098,0)
801.41;+4751,;50~HIDE
"DATA",811.8,229,100,1099,0)
801.41;+4751,;52~INDENT
"DATA",811.8,229,100,1100,0)
801.41;+4751,;100~NATIONAL
"DATA",811.8,229,100,1101,0)
801.41;+4751,;101~VA National Center for Health Promotion and Disease Prevention (NCP)
"DATA",811.8,229,100,1102,0)
801.41;+4751,;123~NO PICK LIST
"DATA",811.8,229,100,1103,0)
801.412;+4752,+4751,;.01~30
"DATA",811.8,229,100,1104,0)
801.412;+4752,+4751,;2~VA-OUTSIDE/PRIOR AAA 3.0-3.9
"DATA",811.8,229,100,1105,0)
801.412;+4753,+4751,;.01~40
"DATA",811.8,229,100,1106,0)
801.412;+4753,+4751,;2~VA-OUTSIDE/PRIOR AAA 4.0-5.4
"DATA",811.8,229,100,1107,0)
801.412;+4754,+4751,;.01~50
"DATA",811.8,229,100,1108,0)
801.412;+4754,+4751,;2~VA-OUTSIDE/PRIOR AAA >5.4
"DATA",811.8,229,100,1109,0)
801.412;+4755,+4751,;.01~10
"DATA",811.8,229,100,1110,0)
801.412;+4755,+4751,;2~PXRM FV ADD TO PROBLEM LIST
"DATA",811.8,229,100,1111,0)
801.44;+4756,+4751,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,1112,0)
801.44;+4756,+4751,;2~WP-start~1
"DATA",811.8,229,100,1113,0)
Exchange Stub
"DATA",811.8,229,100,1114,0)
]]>
"DATA",811.8,229,100,1115,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,1116,0)
<IEN_ROOT>
"DATA",811.8,229,100,1117,0)
<![CDATA[
"DATA",811.8,229,100,1118,0)
4752^4
"DATA",811.8,229,100,1119,0)
4753^5
"DATA",811.8,229,100,1120,0)
4754^6
"DATA",811.8,229,100,1121,0)
4755^7
"DATA",811.8,229,100,1122,0)
4756^1
"DATA",811.8,229,100,1123,0)
]]>
"DATA",811.8,229,100,1124,0)
</IEN_ROOT>
"DATA",811.8,229,100,1125,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,1126,0)
<FILEMAN_FILE>
"DATA",811.8,229,100,1127,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,229,100,1128,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,229,100,1129,0)
<POINT_01>VA-WH PAP SMEAR OBTAINED</POINT_01>
"DATA",811.8,229,100,1130,0)
<INTERNAL_ENTRY_NUMBER>384</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,229,100,1131,0)
<CHECKSUM>1869433303</CHECKSUM>
"DATA",811.8,229,100,1132,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,229,100,1133,0)
<FILEMAN_FDA>
"DATA",811.8,229,100,1134,0)
<![CDATA[
"DATA",811.8,229,100,1135,0)
801.41;+384,;.01~VA-WH PAP SMEAR OBTAINED
"DATA",811.8,229,100,1136,0)
801.41;+384,;4~dialog element
"DATA",811.8,229,100,1137,0)
801.41;+384,;13~DONE AT ENCOUNTER
"DATA",811.8,229,100,1138,0)
801.41;+384,;15~TX.VA-WH PAP SMEAR OBTAINED
"DATA",811.8,229,100,1139,0)
801.41;+384,;25~WP-start~1
"DATA",811.8,229,100,1140,0)
PAP smear was obtained at this encounter
"DATA",811.8,229,100,1141,0)
801.41;+384,;35~WP-start~1
"DATA",811.8,229,100,1142,0)
A PAP smear was obtained at this encounter.
"DATA",811.8,229,100,1143,0)
801.41;+384,;100~NATIONAL
"DATA",811.8,229,100,1144,0)
801.41;+384,;101~Women Veterans Health Program
"DATA",811.8,229,100,1145,0)
801.41;+384,;123~NO PICK LIST
"DATA",811.8,229,100,1146,0)
801.44;+385,+384,;.01~09/17/2013@19:18:54
"DATA",811.8,229,100,1147,0)
801.44;+385,+384,;2~WP-start~1
"DATA",811.8,229,100,1148,0)
Exchange Stub
"DATA",811.8,229,100,1149,0)
]]>
"DATA",811.8,229,100,1150,0)
</FILEMAN_FDA>
"DATA",811.8,229,100,1151,0)
<IEN_ROOT>
"DATA",811.8,229,100,1152,0)
<![CDATA[
"DATA",811.8,229,100,1153,0)
385^1
"DATA",811.8,229,100,1154,0)
]]>
"DATA",811.8,229,100,1155,0)
</IEN_ROOT>
"DATA",811.8,229,100,1156,0)
</FILEMAN_FILE>
"DATA",811.8,229,100,1157,0)
<INDEX>
"DATA",811.8,229,100,1158,0)
<NUMBER_OF_COMPONENTS>32</NUMBER_OF_COMPONENTS>
"DATA",811.8,229,100,1159,0)
<COMPONENT>
"DATA",811.8,229,100,1160,0)
<FDA_END>47</FDA_END>
"DATA",811.8,229,100,1161,0)
<FDA_START>32</FDA_START>
"DATA",811.8,229,100,1162,0)
<FILE_START>23</FILE_START>
"DATA",811.8,229,100,1163,0)
</COMPONENT>
"DATA",811.8,229,100,1164,0)
<COMPONENT>
"DATA",811.8,229,100,1165,0)
<FDA_END>63</FDA_END>
"DATA",811.8,229,100,1166,0)
<FDA_START>60</FDA_START>
"DATA",811.8,229,100,1167,0)
<FILE_START>51</FILE_START>
"DATA",811.8,229,100,1168,0)
</COMPONENT>
"DATA",811.8,229,100,1169,0)
<COMPONENT>
"DATA",811.8,229,100,1170,0)
<FDA_END>78</FDA_END>
"DATA",811.8,229,100,1171,0)
<FDA_START>76</FDA_START>
"DATA",811.8,229,100,1172,0)
<FILE_START>67</FILE_START>
"DATA",811.8,229,100,1173,0)
</COMPONENT>
"DATA",811.8,229,100,1174,0)
<COMPONENT>
"DATA",811.8,229,100,1175,0)
<FDA_END>92</FDA_END>
"DATA",811.8,229,100,1176,0)
<FDA_START>91</FDA_START>
"DATA",811.8,229,100,1177,0)
<FILE_START>82</FILE_START>
"DATA",811.8,229,100,1178,0)
</COMPONENT>
"DATA",811.8,229,100,1179,0)
<COMPONENT>
"DATA",811.8,229,100,1180,0)
<FDA_END>108</FDA_END>
"DATA",811.8,229,100,1181,0)
<FDA_START>105</FDA_START>
"DATA",811.8,229,100,1182,0)
<FILE_START>96</FILE_START>
"DATA",811.8,229,100,1183,0)
</COMPONENT>
"DATA",811.8,229,100,1184,0)
<COMPONENT>
"DATA",811.8,229,100,1185,0)
<FDA_END>124</FDA_END>
"DATA",811.8,229,100,1186,0)
<FDA_START>121</FDA_START>
"DATA",811.8,229,100,1187,0)
<FILE_START>112</FILE_START>
"DATA",811.8,229,100,1188,0)
</COMPONENT>
"DATA",811.8,229,100,1189,0)
<COMPONENT>
"DATA",811.8,229,100,1190,0)
<FDA_END>140</FDA_END>
"DATA",811.8,229,100,1191,0)
<FDA_START>137</FDA_START>
"DATA",811.8,229,100,1192,0)
<FILE_START>128</FILE_START>
"DATA",811.8,229,100,1193,0)
</COMPONENT>
"DATA",811.8,229,100,1194,0)
<COMPONENT>
"DATA",811.8,229,100,1195,0)
<FDA_END>157</FDA_END>
"DATA",811.8,229,100,1196,0)
<FDA_START>153</FDA_START>
"DATA",811.8,229,100,1197,0)
<FILE_START>144</FILE_START>
"DATA",811.8,229,100,1198,0)
<IEN_ROOT_END>162</IEN_ROOT_END>
"DATA",811.8,229,100,1199,0)
<IEN_ROOT_START>162</IEN_ROOT_START>
"DATA",811.8,229,100,1200,0)
</COMPONENT>
"DATA",811.8,229,100,1201,0)
<COMPONENT>
"DATA",811.8,229,100,1202,0)
<FDA_END>179</FDA_END>
"DATA",811.8,229,100,1203,0)
<FDA_START>175</FDA_START>
"DATA",811.8,229,100,1204,0)
<FILE_START>166</FILE_START>
"DATA",811.8,229,100,1205,0)
<IEN_ROOT_END>184</IEN_ROOT_END>
"DATA",811.8,229,100,1206,0)
<IEN_ROOT_START>184</IEN_ROOT_START>
"DATA",811.8,229,100,1207,0)
</COMPONENT>
"DATA",811.8,229,100,1208,0)
<COMPONENT>
"DATA",811.8,229,100,1209,0)
<FDA_END>201</FDA_END>
"DATA",811.8,229,100,1210,0)
<FDA_START>197</FDA_START>
"DATA",811.8,229,100,1211,0)
<FILE_START>188</FILE_START>
"DATA",811.8,229,100,1212,0)
<IEN_ROOT_END>206</IEN_ROOT_END>
"DATA",811.8,229,100,1213,0)
<IEN_ROOT_START>206</IEN_ROOT_START>
"DATA",811.8,229,100,1214,0)
</COMPONENT>
"DATA",811.8,229,100,1215,0)
<COMPONENT>
"DATA",811.8,229,100,1216,0)
<FDA_END>226</FDA_END>
"DATA",811.8,229,100,1217,0)
<FDA_START>219</FDA_START>
"DATA",811.8,229,100,1218,0)
<FILE_START>210</FILE_START>
"DATA",811.8,229,100,1219,0)
<IEN_ROOT_END>232</IEN_ROOT_END>
"DATA",811.8,229,100,1220,0)
<IEN_ROOT_START>231</IEN_ROOT_START>
"DATA",811.8,229,100,1221,0)
</COMPONENT>
"DATA",811.8,229,100,1222,0)
<COMPONENT>
"DATA",811.8,229,100,1223,0)
<FDA_END>259</FDA_END>
"DATA",811.8,229,100,1224,0)
<FDA_START>245</FDA_START>
"DATA",811.8,229,100,1225,0)
<FILE_START>236</FILE_START>
"DATA",811.8,229,100,1226,0)
<IEN_ROOT_END>268</IEN_ROOT_END>
"DATA",811.8,229,100,1227,0)
<IEN_ROOT_START>264</IEN_ROOT_START>
"DATA",811.8,229,100,1228,0)
</COMPONENT>
"DATA",811.8,229,100,1229,0)
<COMPONENT>
"DATA",811.8,229,100,1230,0)
<FDA_END>295</FDA_END>
"DATA",811.8,229,100,1231,0)
<FDA_START>281</FDA_START>
"DATA",811.8,229,100,1232,0)
<FILE_START>272</FILE_START>
"DATA",811.8,229,100,1233,0)
<IEN_ROOT_END>304</IEN_ROOT_END>
"DATA",811.8,229,100,1234,0)
<IEN_ROOT_START>300</IEN_ROOT_START>
"DATA",811.8,229,100,1235,0)
</COMPONENT>
"DATA",811.8,229,100,1236,0)
<COMPONENT>
"DATA",811.8,229,100,1237,0)
<FDA_END>408</FDA_END>
"DATA",811.8,229,100,1238,0)
<FDA_START>317</FDA_START>
"DATA",811.8,229,100,1239,0)
<FILE_START>308</FILE_START>
"DATA",811.8,229,100,1240,0)
<IEN_ROOT_END>459</IEN_ROOT_END>
"DATA",811.8,229,100,1241,0)
<IEN_ROOT_START>413</IEN_ROOT_START>
"DATA",811.8,229,100,1242,0)
</COMPONENT>
"DATA",811.8,229,100,1243,0)
<COMPONENT>
"DATA",811.8,229,100,1244,0)
<FDA_END>518</FDA_END>
"DATA",811.8,229,100,1245,0)
<FDA_START>472</FDA_START>
"DATA",811.8,229,100,1246,0)
<FILE_START>463</FILE_START>
"DATA",811.8,229,100,1247,0)
<IEN_ROOT_END>553</IEN_ROOT_END>
"DATA",811.8,229,100,1248,0)
<IEN_ROOT_START>523</IEN_ROOT_START>
"DATA",811.8,229,100,1249,0)
</COMPONENT>
"DATA",811.8,229,100,1250,0)
<COMPONENT>
"DATA",811.8,229,100,1251,0)
<FDA_END>573</FDA_END>
"DATA",811.8,229,100,1252,0)
<FDA_START>566</FDA_START>
"DATA",811.8,229,100,1253,0)
<FILE_START>557</FILE_START>
"DATA",811.8,229,100,1254,0)
<IEN_ROOT_END>578</IEN_ROOT_END>
"DATA",811.8,229,100,1255,0)
<IEN_ROOT_START>578</IEN_ROOT_START>
"DATA",811.8,229,100,1256,0)
</COMPONENT>
"DATA",811.8,229,100,1257,0)
<COMPONENT>
"DATA",811.8,229,100,1258,0)
<FDA_END>598</FDA_END>
"DATA",811.8,229,100,1259,0)
<FDA_START>591</FDA_START>
"DATA",811.8,229,100,1260,0)
<FILE_START>582</FILE_START>
"DATA",811.8,229,100,1261,0)
<IEN_ROOT_END>603</IEN_ROOT_END>
"DATA",811.8,229,100,1262,0)
<IEN_ROOT_START>603</IEN_ROOT_START>
"DATA",811.8,229,100,1263,0)
</COMPONENT>
"DATA",811.8,229,100,1264,0)
<COMPONENT>
"DATA",811.8,229,100,1265,0)
<FDA_END>635</FDA_END>
"DATA",811.8,229,100,1266,0)
<FDA_START>616</FDA_START>
"DATA",811.8,229,100,1267,0)
<FILE_START>607</FILE_START>
"DATA",811.8,229,100,1268,0)
<IEN_ROOT_END>643</IEN_ROOT_END>
"DATA",811.8,229,100,1269,0)
<IEN_ROOT_START>640</IEN_ROOT_START>
"DATA",811.8,229,100,1270,0)
</COMPONENT>
"DATA",811.8,229,100,1271,0)
<COMPONENT>
"DATA",811.8,229,100,1272,0)
<FDA_END>664</FDA_END>
"DATA",811.8,229,100,1273,0)
<FDA_START>656</FDA_START>
"DATA",811.8,229,100,1274,0)
<FILE_START>647</FILE_START>
"DATA",811.8,229,100,1275,0)
<IEN_ROOT_END>669</IEN_ROOT_END>
"DATA",811.8,229,100,1276,0)
<IEN_ROOT_START>669</IEN_ROOT_START>
"DATA",811.8,229,100,1277,0)
</COMPONENT>
"DATA",811.8,229,100,1278,0)
<COMPONENT>
"DATA",811.8,229,100,1279,0)
<FDA_END>698</FDA_END>
"DATA",811.8,229,100,1280,0)
<FDA_START>682</FDA_START>
"DATA",811.8,229,100,1281,0)
<FILE_START>673</FILE_START>
"DATA",811.8,229,100,1282,0)
<IEN_ROOT_END>705</IEN_ROOT_END>
"DATA",811.8,229,100,1283,0)
<IEN_ROOT_START>703</IEN_ROOT_START>
"DATA",811.8,229,100,1284,0)
</COMPONENT>
"DATA",811.8,229,100,1285,0)
<COMPONENT>
"DATA",811.8,229,100,1286,0)
<FDA_END>738</FDA_END>
"DATA",811.8,229,100,1287,0)
<FDA_START>718</FDA_START>
"DATA",811.8,229,100,1288,0)
<FILE_START>709</FILE_START>
"DATA",811.8,229,100,1289,0)
<IEN_ROOT_END>746</IEN_ROOT_END>
"DATA",811.8,229,100,1290,0)
<IEN_ROOT_START>743</IEN_ROOT_START>
"DATA",811.8,229,100,1291,0)
</COMPONENT>
"DATA",811.8,229,100,1292,0)
<COMPONENT>
"DATA",811.8,229,100,1293,0)
<FDA_END>796</FDA_END>
"DATA",811.8,229,100,1294,0)
<FDA_START>759</FDA_START>
"DATA",811.8,229,100,1295,0)
<FILE_START>750</FILE_START>
"DATA",811.8,229,100,1296,0)
<IEN_ROOT_END>816</IEN_ROOT_END>
"DATA",811.8,229,100,1297,0)
<IEN_ROOT_START>801</IEN_ROOT_START>
"DATA",811.8,229,100,1298,0)
</COMPONENT>
"DATA",811.8,229,100,1299,0)
<COMPONENT>
"DATA",811.8,229,100,1300,0)
<FDA_END>845</FDA_END>
"DATA",811.8,229,100,1301,0)
<FDA_START>829</FDA_START>
"DATA",811.8,229,100,1302,0)
<FILE_START>820</FILE_START>
"DATA",811.8,229,100,1303,0)
<IEN_ROOT_END>852</IEN_ROOT_END>
"DATA",811.8,229,100,1304,0)
<IEN_ROOT_START>850</IEN_ROOT_START>
"DATA",811.8,229,100,1305,0)
</COMPONENT>
"DATA",811.8,229,100,1306,0)
<COMPONENT>
"DATA",811.8,229,100,1307,0)
<FDA_END>875</FDA_END>
"DATA",811.8,229,100,1308,0)
<FDA_START>865</FDA_START>
"DATA",811.8,229,100,1309,0)
<FILE_START>856</FILE_START>
"DATA",811.8,229,100,1310,0)
<IEN_ROOT_END>880</IEN_ROOT_END>
"DATA",811.8,229,100,1311,0)
<IEN_ROOT_START>880</IEN_ROOT_START>
"DATA",811.8,229,100,1312,0)
</COMPONENT>
"DATA",811.8,229,100,1313,0)
<COMPONENT>
"DATA",811.8,229,100,1314,0)
<FDA_END>904</FDA_END>
"DATA",811.8,229,100,1315,0)
<FDA_START>893</FDA_START>
"DATA",811.8,229,100,1316,0)
<FILE_START>884</FILE_START>
"DATA",811.8,229,100,1317,0)
<IEN_ROOT_END>909</IEN_ROOT_END>
"DATA",811.8,229,100,1318,0)
<IEN_ROOT_START>909</IEN_ROOT_START>
"DATA",811.8,229,100,1319,0)
</COMPONENT>
"DATA",811.8,229,100,1320,0)
<COMPONENT>
"DATA",811.8,229,100,1321,0)
<FDA_END>938</FDA_END>
"DATA",811.8,229,100,1322,0)
<FDA_START>922</FDA_START>
"DATA",811.8,229,100,1323,0)
<FILE_START>913</FILE_START>
"DATA",811.8,229,100,1324,0)
<IEN_ROOT_END>944</IEN_ROOT_END>
"DATA",811.8,229,100,1325,0)
<IEN_ROOT_START>943</IEN_ROOT_START>
"DATA",811.8,229,100,1326,0)
</COMPONENT>
"DATA",811.8,229,100,1327,0)
<COMPONENT>
"DATA",811.8,229,100,1328,0)
<FDA_END>968</FDA_END>
"DATA",811.8,229,100,1329,0)
<FDA_START>957</FDA_START>
"DATA",811.8,229,100,1330,0)
<FILE_START>948</FILE_START>
"DATA",811.8,229,100,1331,0)
<IEN_ROOT_END>973</IEN_ROOT_END>
"DATA",811.8,229,100,1332,0)
<IEN_ROOT_START>973</IEN_ROOT_START>
"DATA",811.8,229,100,1333,0)
</COMPONENT>
"DATA",811.8,229,100,1334,0)
<COMPONENT>
"DATA",811.8,229,100,1335,0)
<FDA_END>1002</FDA_END>
"DATA",811.8,229,100,1336,0)
<FDA_START>986</FDA_START>
"DATA",811.8,229,100,1337,0)
<FILE_START>977</FILE_START>
"DATA",811.8,229,100,1338,0)
<IEN_ROOT_END>1008</IEN_ROOT_END>
"DATA",811.8,229,100,1339,0)
<IEN_ROOT_START>1007</IEN_ROOT_START>
"DATA",811.8,229,100,1340,0)
</COMPONENT>
"DATA",811.8,229,100,1341,0)
<COMPONENT>
"DATA",811.8,229,100,1342,0)
<FDA_END>1032</FDA_END>
"DATA",811.8,229,100,1343,0)
<FDA_START>1021</FDA_START>
"DATA",811.8,229,100,1344,0)
<FILE_START>1012</FILE_START>
"DATA",811.8,229,100,1345,0)
<IEN_ROOT_END>1037</IEN_ROOT_END>
"DATA",811.8,229,100,1346,0)
<IEN_ROOT_START>1037</IEN_ROOT_START>
"DATA",811.8,229,100,1347,0)
</COMPONENT>
"DATA",811.8,229,100,1348,0)
<COMPONENT>
"DATA",811.8,229,100,1349,0)
<FDA_END>1066</FDA_END>
"DATA",811.8,229,100,1350,0)
<FDA_START>1050</FDA_START>
"DATA",811.8,229,100,1351,0)
<FILE_START>1041</FILE_START>
"DATA",811.8,229,100,1352,0)
<IEN_ROOT_END>1072</IEN_ROOT_END>
"DATA",811.8,229,100,1353,0)
<IEN_ROOT_START>1071</IEN_ROOT_START>
"DATA",811.8,229,100,1354,0)
</COMPONENT>
"DATA",811.8,229,100,1355,0)
<COMPONENT>
"DATA",811.8,229,100,1356,0)
<FDA_END>1113</FDA_END>
"DATA",811.8,229,100,1357,0)
<FDA_START>1085</FDA_START>
"DATA",811.8,229,100,1358,0)
<FILE_START>1076</FILE_START>
"DATA",811.8,229,100,1359,0)
<IEN_ROOT_END>1122</IEN_ROOT_END>
"DATA",811.8,229,100,1360,0)
<IEN_ROOT_START>1118</IEN_ROOT_START>
"DATA",811.8,229,100,1361,0)
</COMPONENT>
"DATA",811.8,229,100,1362,0)
<COMPONENT>
"DATA",811.8,229,100,1363,0)
<FDA_END>1148</FDA_END>
"DATA",811.8,229,100,1364,0)
<FDA_START>1135</FDA_START>
"DATA",811.8,229,100,1365,0)
<FILE_START>1126</FILE_START>
"DATA",811.8,229,100,1366,0)
<IEN_ROOT_END>1153</IEN_ROOT_END>
"DATA",811.8,229,100,1367,0)
<IEN_ROOT_START>1153</IEN_ROOT_START>
"DATA",811.8,229,100,1368,0)
</COMPONENT>
"DATA",811.8,229,100,1369,0)
</INDEX>
"DATA",811.8,229,100,1370,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,229,110,0)
^811.804^17^17
"DATA",811.8,229,110,1,0)
Source:      PULEO,ANTHONY at CAMP MASTER
"DATA",811.8,229,110,2,0)
Date Packed: 09/17/2013@19:18:42
"DATA",811.8,229,110,3,0)
Package Version: 2.0P28
"DATA",811.8,229,110,4,0)

"DATA",811.8,229,110,5,0)
Description:
"DATA",811.8,229,110,6,0)
The following Clinical Reminder items were selected for packing:
"DATA",811.8,229,110,7,0)
REMINDER DIALOG
"DATA",811.8,229,110,8,0)
  VA-WH PAP SMEAR OBTAINED
"DATA",811.8,229,110,9,0)
  VA-GP AAA PRIOR DIAGNOSIS
"DATA",811.8,229,110,10,0)
  VA-IM FLU H1N1 DONE (1 DOSE)
"DATA",811.8,229,110,11,0)
  VA-IM FLU H1N1 OUTSIDE (1 DOSE)
"DATA",811.8,229,110,12,0)
  VA-IM FLU HIGH DOSE DONE
"DATA",811.8,229,110,13,0)
  VA-IM FLU HIGH DOSE OUTSIDE
"DATA",811.8,229,110,14,0)

"DATA",811.8,229,110,15,0)
Keywords:
"DATA",811.8,229,110,16,0)

"DATA",811.8,229,110,17,0)
Components:
"DATA",811.8,229,119)
6
"DATA",811.8,229,120,0)
^811.802A^32^32
"DATA",811.8,229,120,1,0)
TIU TEMPLATE FIELD^8927.1^1
"DATA",811.8,229,120,1,1,0)
^811.8021A^1^1
"DATA",811.8,229,120,1,1,1,0)
VA-RIGHT/LEFT^32^47^^^1^0
"DATA",811.8,229,120,2,0)
IMMUNIZATION^9999999.14^2
"DATA",811.8,229,120,2,1,0)
^811.8021A^2^2
"DATA",811.8,229,120,2,1,1,0)
INFLUENZA, HIGH DOSE SEASONAL, PRESERV-FREE^60^63^^^1^0
"DATA",811.8,229,120,2,1,2,0)
INFLUENZA-H1N1-09, NOVEL (PANDEMIC)^76^78^^^1^0
"DATA",811.8,229,120,3,0)
HEALTH FACTORS^9999999.64^4
"DATA",811.8,229,120,3,1,0)
^811.8021A^4^4
"DATA",811.8,229,120,3,1,1,0)
AAA SCREENING AND F/U^91^92^^^1^0
"DATA",811.8,229,120,3,1,2,0)
ABD AORTIC ANEURYSM >5.4 CM^105^108^^^1^0
"DATA",811.8,229,120,3,1,3,0)
ABD AORTIC ANEURYSM 4.0-5.4 CM^121^124^^^1^0
"DATA",811.8,229,120,3,1,4,0)
ABD AORTIC ANEURYSM 3.0-3.9 CM^137^140^^^1^0
"DATA",811.8,229,120,4,0)
REMINDER SPONSOR^811.6^4
"DATA",811.8,229,120,4,1,0)
^811.8021A^4^4
"DATA",811.8,229,120,4,1,1,0)
Office of Public Health and Environmental Hazards^153^157^162^162^1^0
"DATA",811.8,229,120,4,1,2,0)
VA National Center for Health Promotion and Disease Prevention (NCP)^175^179^184^184^1^0
"DATA",811.8,229,120,4,1,3,0)
Office of Patient Care Services^197^201^206^206^1^0
"DATA",811.8,229,120,4,1,4,0)
Women Veterans Health Program^219^226^231^232^1^0
"DATA",811.8,229,120,5,0)
REMINDER TAXONOMY^811.2^4
"DATA",811.8,229,120,5,1,0)
^811.8021A^4^4
"DATA",811.8,229,120,5,1,1,0)
VA-IM FLU HIGH DOSE^245^259^264^268^1^0
"DATA",811.8,229,120,5,1,2,0)
VA-IM FLU H1N1 (1 DOSE)^281^295^300^304^1^0
"DATA",811.8,229,120,5,1,3,0)
VA-ABD AORTIC ANEURYSM^317^408^413^459^1^0
"DATA",811.8,229,120,5,1,4,0)
VA-WH PAP SMEAR OBTAINED^472^518^523^553^1^0
"DATA",811.8,229,120,6,0)
REMINDER DIALOG^801.41^17
"DATA",811.8,229,120,6,1,0)
^811.8021A^17^17
"DATA",811.8,229,120,6,1,1,0)
PXRM OUTSIDE LOCATION^566^573^578^578^1^0
"DATA",811.8,229,120,6,1,2,0)
PXRM VISIT DATE^591^598^603^603^1^0
"DATA",811.8,229,120,6,1,3,0)
VA-IM FLU HIGH DOSE OUTSIDE^616^635^640^643^1^1
"DATA",811.8,229,120,6,1,4,0)
INFLUENZA HIGH DOSE MANUFACTURERS^656^664^669^669^1^0
"DATA",811.8,229,120,6,1,5,0)
VA-IM FLU HIGH DOSE DONE^682^698^703^705^1^1
"DATA",811.8,229,120,6,1,6,0)
VA-IM FLU H1N1 OUTSIDE (1 DOSE)^718^738^743^746^1^1
"DATA",811.8,229,120,6,1,7,0)
INFLUENZA H1N1 MANUFACTURERS^759^796^801^816^1^0
"DATA",811.8,229,120,6,1,8,0)
VA-IM FLU H1N1 DONE (1 DOSE)^829^845^850^852^1^1
"DATA",811.8,229,120,6,1,9,0)
PXRM FV ADD TO PROBLEM LIST^865^875^880^880^1^0
"DATA",811.8,229,120,6,1,10,0)
VA-TEXT AAA >5.4^893^904^909^909^1^0
"DATA",811.8,229,120,6,1,11,0)
VA-OUTSIDE/PRIOR AAA >5.4^922^938^943^944^1^0
"DATA",811.8,229,120,6,1,12,0)
VA-TEXT AAA 4.0-5.4^957^968^973^973^1^0
"DATA",811.8,229,120,6,1,13,0)
VA-OUTSIDE/PRIOR AAA 4.0-5.4^986^1002^1007^1008^1^0
"DATA",811.8,229,120,6,1,14,0)
VA-TEXT AAA 3.0-3.9^1021^1032^1037^1037^1^0
"DATA",811.8,229,120,6,1,15,0)
VA-OUTSIDE/PRIOR AAA 3.0-3.9^1050^1066^1071^1072^1^0
"DATA",811.8,229,120,6,1,16,0)
VA-GP AAA PRIOR DIAGNOSIS^1085^1113^1118^1122^1^1
"DATA",811.8,229,120,6,1,17,0)
VA-WH PAP SMEAR OBTAINED^1135^1148^1153^1153^1^1
"DATA",811.8,246,0)
PXRM PATCH 26 PALLIATIVE CARE UPDATE^PULEO,ANTHONY at CAMP MASTER^3140417.170545
"DATA",811.8,246,100,0)
^811.801^2023^2023
"DATA",811.8,246,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,246,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,246,100,3,0)
<PACKAGE_VERSION>2.0P31</PACKAGE_VERSION>
"DATA",811.8,246,100,4,0)
<INDEX_AT>1875</INDEX_AT>
"DATA",811.8,246,100,5,0)
<SOURCE>
"DATA",811.8,246,100,6,0)
<NAME>PXRM PATCH 26 PALLIATIVE CARE UPDATE</NAME>
"DATA",811.8,246,100,7,0)
<USER>PULEO,ANTHONY</USER>
"DATA",811.8,246,100,8,0)
<SITE>CAMP MASTER</SITE>
"DATA",811.8,246,100,9,0)
<DATE_PACKED>04/17/2014@17:05:45</DATE_PACKED>
"DATA",811.8,246,100,10,0)
</SOURCE>
"DATA",811.8,246,100,11,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,246,100,12,0)
]]></DESCRIPTION>
"DATA",811.8,246,100,13,0)
<KEYWORDS>
"DATA",811.8,246,100,14,0)
</KEYWORDS>
"DATA",811.8,246,100,15,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,16,0)
<FILE_NAME>TIU TEMPLATE FIELD</FILE_NAME>
"DATA",811.8,246,100,17,0)
<FILE_NUMBER>8927.1</FILE_NUMBER>
"DATA",811.8,246,100,18,0)
<POINT_01>VA*PALLI BLANK SPACE1</POINT_01>
"DATA",811.8,246,100,19,0)
<INTERNAL_ENTRY_NUMBER>592</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,20,0)
<CHECKSUM>3320534839</CHECKSUM>
"DATA",811.8,246,100,21,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,22,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,23,0)
<![CDATA[
"DATA",811.8,246,100,24,0)
8927.1;+592,;.01~VA*PALLI BLANK SPACE1
"DATA",811.8,246,100,25,0)
8927.1;+592,;.02~Text
"DATA",811.8,246,100,26,0)
8927.1;+592,;.03~NO
"DATA",811.8,246,100,27,0)
8927.1;+592,;.04~0
"DATA",811.8,246,100,28,0)
8927.1;+592,;.07~0
"DATA",811.8,246,100,29,0)
8927.1;+592,;.08~NO
"DATA",811.8,246,100,30,0)
8927.1;+592,;.09~NO
"DATA",811.8,246,100,31,0)
8927.1;+592,;.1~0
"DATA",811.8,246,100,32,0)
8927.1;+592,;.11~0
"DATA",811.8,246,100,33,0)
8927.1;+592,;.12~0
"DATA",811.8,246,100,34,0)
8927.1;+592,;.13~0
"DATA",811.8,246,100,35,0)
8927.1;+592,;.14~0
"DATA",811.8,246,100,36,0)
8927.1;+592,;.15~0
"DATA",811.8,246,100,37,0)
8927.1;+592,;2~WP-start~1
"DATA",811.8,246,100,38,0)
2/27/12 CFA
"DATA",811.8,246,100,39,0)
8927.1;+592,;10~WP-start~1
"DATA",811.8,246,100,40,0)
                                                                                                                                  
"DATA",811.8,246,100,41,0)
]]>
"DATA",811.8,246,100,42,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,43,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,44,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,45,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,46,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,47,0)
<POINT_01>VA-PALLI CONS INFECTIOUS COND</POINT_01>
"DATA",811.8,246,100,48,0)
<INTERNAL_ENTRY_NUMBER>131</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,49,0)
<CHECKSUM>3375828029</CHECKSUM>
"DATA",811.8,246,100,50,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,51,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,52,0)
<![CDATA[
"DATA",811.8,246,100,53,0)
811.2;+131,;.01~VA-PALLI CONS INFECTIOUS COND
"DATA",811.8,246,100,54,0)
811.2;+131,;.02~Infectious Conditions and SIRS
"DATA",811.8,246,100,55,0)
811.2;+131,;.03~Inf Cond & Syst Inflamm Resp Synd (SIRS) [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,56,0)
811.2;+131,;100~NATIONAL
"DATA",811.8,246,100,57,0)
811.2;+131,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,58,0)
811.2;+131,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,59,0)
811.21;+132,+131,;.01~04/17/2014@17:05:54
"DATA",811.8,246,100,60,0)
811.21;+132,+131,;2~WP-start~1
"DATA",811.8,246,100,61,0)
Exchange Stub
"DATA",811.8,246,100,62,0)
811.23;+133,+131,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,63,0)
811.231;+134,+133,+131,;.01~ICD
"DATA",811.8,246,100,64,0)
811.231;+134,+133,+131,;1~18
"DATA",811.8,246,100,65,0)
811.231;+134,+133,+131,;3~18
"DATA",811.8,246,100,66,0)
811.2312;+153,+134,+133,+131,;.01~136.9
"DATA",811.8,246,100,67,0)
811.2312;+153,+134,+133,+131,;1~YES
"DATA",811.8,246,100,68,0)
811.2312;+154,+134,+133,+131,;.01~042.
"DATA",811.8,246,100,69,0)
811.2312;+154,+134,+133,+131,;1~YES
"DATA",811.8,246,100,70,0)
811.2312;+155,+134,+133,+131,;.01~420.90
"DATA",811.8,246,100,71,0)
811.2312;+155,+134,+133,+131,;1~YES
"DATA",811.8,246,100,72,0)
811.2312;+156,+134,+133,+131,;.01~422.90
"DATA",811.8,246,100,73,0)
811.2312;+156,+134,+133,+131,;1~YES
"DATA",811.8,246,100,74,0)
811.2312;+157,+134,+133,+131,;.01~480.0
"DATA",811.8,246,100,75,0)
811.2312;+157,+134,+133,+131,;1~YES
"DATA",811.8,246,100,76,0)
811.2312;+158,+134,+133,+131,;.01~481.
"DATA",811.8,246,100,77,0)
811.2312;+158,+134,+133,+131,;1~YES
"DATA",811.8,246,100,78,0)
811.2312;+159,+134,+133,+131,;.01~486.
"DATA",811.8,246,100,79,0)
811.2312;+159,+134,+133,+131,;1~YES
"DATA",811.8,246,100,80,0)
811.2312;+160,+134,+133,+131,;.01~574.70
"DATA",811.8,246,100,81,0)
811.2312;+160,+134,+133,+131,;1~YES
"DATA",811.8,246,100,82,0)
811.2312;+161,+134,+133,+131,;.01~730.20
"DATA",811.8,246,100,83,0)
811.2312;+161,+134,+133,+131,;1~YES
"DATA",811.8,246,100,84,0)
811.2312;+162,+134,+133,+131,;.01~995.90
"DATA",811.8,246,100,85,0)
811.2312;+162,+134,+133,+131,;1~YES
"DATA",811.8,246,100,86,0)
811.2312;+163,+134,+133,+131,;.01~323.9
"DATA",811.8,246,100,87,0)
811.2312;+163,+134,+133,+131,;1~YES
"DATA",811.8,246,100,88,0)
811.2312;+164,+134,+133,+131,;.01~421.9
"DATA",811.8,246,100,89,0)
811.2312;+164,+134,+133,+131,;1~YES
"DATA",811.8,246,100,90,0)
811.2312;+165,+134,+133,+131,;.01~540.9
"DATA",811.8,246,100,91,0)
811.2312;+165,+134,+133,+131,;1~YES
"DATA",811.8,246,100,92,0)
811.2312;+166,+134,+133,+131,;.01~571.5
"DATA",811.8,246,100,93,0)
811.2312;+166,+134,+133,+131,;1~YES
"DATA",811.8,246,100,94,0)
811.2312;+167,+134,+133,+131,;.01~576.1
"DATA",811.8,246,100,95,0)
811.2312;+167,+134,+133,+131,;1~YES
"DATA",811.8,246,100,96,0)
811.2312;+168,+134,+133,+131,;.01~682.9
"DATA",811.8,246,100,97,0)
811.2312;+168,+134,+133,+131,;1~YES
"DATA",811.8,246,100,98,0)
811.2312;+169,+134,+133,+131,;.01~728.86
"DATA",811.8,246,100,99,0)
811.2312;+169,+134,+133,+131,;1~YES
"DATA",811.8,246,100,100,0)
811.2312;+170,+134,+133,+131,;.01~038.9
"DATA",811.8,246,100,101,0)
811.2312;+170,+134,+133,+131,;1~YES
"DATA",811.8,246,100,102,0)
811.24;+171,+131,;.01~136.9
"DATA",811.8,246,100,103,0)
811.24;+171,+131,;1~ICD
"DATA",811.8,246,100,104,0)
811.24;+172,+131,;.01~042.
"DATA",811.8,246,100,105,0)
811.24;+172,+131,;1~ICD
"DATA",811.8,246,100,106,0)
811.24;+173,+131,;.01~420.90
"DATA",811.8,246,100,107,0)
811.24;+173,+131,;1~ICD
"DATA",811.8,246,100,108,0)
811.24;+174,+131,;.01~422.90
"DATA",811.8,246,100,109,0)
811.24;+174,+131,;1~ICD
"DATA",811.8,246,100,110,0)
811.24;+175,+131,;.01~480.0
"DATA",811.8,246,100,111,0)
811.24;+175,+131,;1~ICD
"DATA",811.8,246,100,112,0)
811.24;+176,+131,;.01~481.
"DATA",811.8,246,100,113,0)
811.24;+176,+131,;1~ICD
"DATA",811.8,246,100,114,0)
811.24;+177,+131,;.01~486.
"DATA",811.8,246,100,115,0)
811.24;+177,+131,;1~ICD
"DATA",811.8,246,100,116,0)
811.24;+178,+131,;.01~574.70
"DATA",811.8,246,100,117,0)
811.24;+178,+131,;1~ICD
"DATA",811.8,246,100,118,0)
811.24;+179,+131,;.01~730.20
"DATA",811.8,246,100,119,0)
811.24;+179,+131,;1~ICD
"DATA",811.8,246,100,120,0)
811.24;+180,+131,;.01~995.90
"DATA",811.8,246,100,121,0)
811.24;+180,+131,;1~ICD
"DATA",811.8,246,100,122,0)
811.24;+181,+131,;.01~323.9
"DATA",811.8,246,100,123,0)
811.24;+181,+131,;1~ICD
"DATA",811.8,246,100,124,0)
811.24;+182,+131,;.01~421.9
"DATA",811.8,246,100,125,0)
811.24;+182,+131,;1~ICD
"DATA",811.8,246,100,126,0)
811.24;+183,+131,;.01~540.9
"DATA",811.8,246,100,127,0)
811.24;+183,+131,;1~ICD
"DATA",811.8,246,100,128,0)
811.24;+184,+131,;.01~571.5
"DATA",811.8,246,100,129,0)
811.24;+184,+131,;1~ICD
"DATA",811.8,246,100,130,0)
811.24;+185,+131,;.01~576.1
"DATA",811.8,246,100,131,0)
811.24;+185,+131,;1~ICD
"DATA",811.8,246,100,132,0)
811.24;+186,+131,;.01~682.9
"DATA",811.8,246,100,133,0)
811.24;+186,+131,;1~ICD
"DATA",811.8,246,100,134,0)
811.24;+187,+131,;.01~728.86
"DATA",811.8,246,100,135,0)
811.24;+187,+131,;1~ICD
"DATA",811.8,246,100,136,0)
811.24;+188,+131,;.01~038.9
"DATA",811.8,246,100,137,0)
811.24;+188,+131,;1~ICD
"DATA",811.8,246,100,138,0)
]]>
"DATA",811.8,246,100,139,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,140,0)
<IEN_ROOT>
"DATA",811.8,246,100,141,0)
<![CDATA[
"DATA",811.8,246,100,142,0)
132^1
"DATA",811.8,246,100,143,0)
133^1
"DATA",811.8,246,100,144,0)
134^1
"DATA",811.8,246,100,145,0)
135^1
"DATA",811.8,246,100,146,0)
136^10
"DATA",811.8,246,100,147,0)
137^11
"DATA",811.8,246,100,148,0)
138^12
"DATA",811.8,246,100,149,0)
139^13
"DATA",811.8,246,100,150,0)
140^14
"DATA",811.8,246,100,151,0)
141^15
"DATA",811.8,246,100,152,0)
142^16
"DATA",811.8,246,100,153,0)
143^17
"DATA",811.8,246,100,154,0)
144^18
"DATA",811.8,246,100,155,0)
145^2
"DATA",811.8,246,100,156,0)
146^3
"DATA",811.8,246,100,157,0)
147^4
"DATA",811.8,246,100,158,0)
148^5
"DATA",811.8,246,100,159,0)
149^6
"DATA",811.8,246,100,160,0)
150^7
"DATA",811.8,246,100,161,0)
151^8
"DATA",811.8,246,100,162,0)
152^9
"DATA",811.8,246,100,163,0)
153^1
"DATA",811.8,246,100,164,0)
154^10
"DATA",811.8,246,100,165,0)
155^11
"DATA",811.8,246,100,166,0)
156^12
"DATA",811.8,246,100,167,0)
157^13
"DATA",811.8,246,100,168,0)
158^14
"DATA",811.8,246,100,169,0)
159^15
"DATA",811.8,246,100,170,0)
160^16
"DATA",811.8,246,100,171,0)
161^17
"DATA",811.8,246,100,172,0)
162^18
"DATA",811.8,246,100,173,0)
163^2
"DATA",811.8,246,100,174,0)
164^3
"DATA",811.8,246,100,175,0)
165^4
"DATA",811.8,246,100,176,0)
166^5
"DATA",811.8,246,100,177,0)
167^6
"DATA",811.8,246,100,178,0)
168^7
"DATA",811.8,246,100,179,0)
169^8
"DATA",811.8,246,100,180,0)
170^9
"DATA",811.8,246,100,181,0)
171^1
"DATA",811.8,246,100,182,0)
172^10
"DATA",811.8,246,100,183,0)
173^11
"DATA",811.8,246,100,184,0)
174^12
"DATA",811.8,246,100,185,0)
175^13
"DATA",811.8,246,100,186,0)
176^14
"DATA",811.8,246,100,187,0)
177^15
"DATA",811.8,246,100,188,0)
178^16
"DATA",811.8,246,100,189,0)
179^17
"DATA",811.8,246,100,190,0)
180^18
"DATA",811.8,246,100,191,0)
181^2
"DATA",811.8,246,100,192,0)
182^3
"DATA",811.8,246,100,193,0)
183^4
"DATA",811.8,246,100,194,0)
184^5
"DATA",811.8,246,100,195,0)
185^6
"DATA",811.8,246,100,196,0)
186^7
"DATA",811.8,246,100,197,0)
187^8
"DATA",811.8,246,100,198,0)
188^9
"DATA",811.8,246,100,199,0)
]]>
"DATA",811.8,246,100,200,0)
</IEN_ROOT>
"DATA",811.8,246,100,201,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,202,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,203,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,204,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,205,0)
<POINT_01>VA-PALLI CONS RHEUM/VASC/THROMB</POINT_01>
"DATA",811.8,246,100,206,0)
<INTERNAL_ENTRY_NUMBER>152</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,207,0)
<CHECKSUM>707006249</CHECKSUM>
"DATA",811.8,246,100,208,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,209,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,210,0)
<![CDATA[
"DATA",811.8,246,100,211,0)
811.2;+152,;.01~VA-PALLI CONS RHEUM/VASC/THROMB
"DATA",811.8,246,100,212,0)
811.2;+152,;.02~Rheumatologic, Vasculitic, and Thromboembolic Conditions
"DATA",811.8,246,100,213,0)
811.2;+152,;.03~Rheumatologic,Vasculitic,& Thromboembolic Conditions [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,214,0)
811.2;+152,;100~NATIONAL
"DATA",811.8,246,100,215,0)
811.2;+152,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,216,0)
811.2;+152,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,217,0)
811.21;+153,+152,;.01~04/17/2014@17:05:54
"DATA",811.8,246,100,218,0)
811.21;+153,+152,;2~WP-start~1
"DATA",811.8,246,100,219,0)
Exchange Stub
"DATA",811.8,246,100,220,0)
811.23;+154,+152,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,221,0)
811.231;+155,+154,+152,;.01~ICD
"DATA",811.8,246,100,222,0)
811.231;+155,+154,+152,;1~21
"DATA",811.8,246,100,223,0)
811.231;+155,+154,+152,;3~21
"DATA",811.8,246,100,224,0)
811.2312;+177,+155,+154,+152,;.01~441.9
"DATA",811.8,246,100,225,0)
811.2312;+177,+155,+154,+152,;1~YES
"DATA",811.8,246,100,226,0)
811.2312;+178,+155,+154,+152,;.01~446.7
"DATA",811.8,246,100,227,0)
811.2312;+178,+155,+154,+152,;1~YES
"DATA",811.8,246,100,228,0)
811.2312;+179,+155,+154,+152,;.01~453.9
"DATA",811.8,246,100,229,0)
811.2312;+179,+155,+154,+152,;1~YES
"DATA",811.8,246,100,230,0)
811.2312;+180,+155,+154,+152,;.01~710.1
"DATA",811.8,246,100,231,0)
811.2312;+180,+155,+154,+152,;1~YES
"DATA",811.8,246,100,232,0)
811.2312;+181,+155,+154,+152,;.01~710.3
"DATA",811.8,246,100,233,0)
811.2312;+181,+155,+154,+152,;1~YES
"DATA",811.8,246,100,234,0)
811.2312;+182,+155,+154,+152,;.01~710.4
"DATA",811.8,246,100,235,0)
811.2312;+182,+155,+154,+152,;1~YES
"DATA",811.8,246,100,236,0)
811.2312;+183,+155,+154,+152,;.01~710.9
"DATA",811.8,246,100,237,0)
811.2312;+183,+155,+154,+152,;1~YES
"DATA",811.8,246,100,238,0)
811.2312;+184,+155,+154,+152,;.01~714.2
"DATA",811.8,246,100,239,0)
811.2312;+184,+155,+154,+152,;1~YES
"DATA",811.8,246,100,240,0)
811.2312;+185,+155,+154,+152,;.01~135.
"DATA",811.8,246,100,241,0)
811.2312;+185,+155,+154,+152,;1~YES
"DATA",811.8,246,100,242,0)
811.2312;+186,+155,+154,+152,;.01~446.0
"DATA",811.8,246,100,243,0)
811.2312;+186,+155,+154,+152,;1~YES
"DATA",811.8,246,100,244,0)
811.2312;+187,+155,+154,+152,;.01~446.20
"DATA",811.8,246,100,245,0)
811.2312;+187,+155,+154,+152,;1~YES
"DATA",811.8,246,100,246,0)
811.2312;+188,+155,+154,+152,;.01~442.9
"DATA",811.8,246,100,247,0)
811.2312;+188,+155,+154,+152,;1~YES
"DATA",811.8,246,100,248,0)
811.2312;+189,+155,+154,+152,;.01~452.
"DATA",811.8,246,100,249,0)
811.2312;+189,+155,+154,+152,;1~YES
"DATA",811.8,246,100,250,0)
811.2312;+190,+155,+154,+152,;.01~710.0
"DATA",811.8,246,100,251,0)
811.2312;+190,+155,+154,+152,;1~YES
"DATA",811.8,246,100,252,0)
811.2312;+191,+155,+154,+152,;.01~443.9
"DATA",811.8,246,100,253,0)
811.2312;+191,+155,+154,+152,;1~YES
"DATA",811.8,246,100,254,0)
811.2312;+192,+155,+154,+152,;.01~444.9
"DATA",811.8,246,100,255,0)
811.2312;+192,+155,+154,+152,;1~YES
"DATA",811.8,246,100,256,0)
811.2312;+193,+155,+154,+152,;.01~446.1
"DATA",811.8,246,100,257,0)
811.2312;+193,+155,+154,+152,;1~YES
"DATA",811.8,246,100,258,0)
811.2312;+194,+155,+154,+152,;.01~446.3
"DATA",811.8,246,100,259,0)
811.2312;+194,+155,+154,+152,;1~YES
"DATA",811.8,246,100,260,0)
811.2312;+195,+155,+154,+152,;.01~446.4
"DATA",811.8,246,100,261,0)
811.2312;+195,+155,+154,+152,;1~YES
"DATA",811.8,246,100,262,0)
811.2312;+196,+155,+154,+152,;.01~446.5
"DATA",811.8,246,100,263,0)
811.2312;+196,+155,+154,+152,;1~YES
"DATA",811.8,246,100,264,0)
811.2312;+197,+155,+154,+152,;.01~446.6
"DATA",811.8,246,100,265,0)
811.2312;+197,+155,+154,+152,;1~YES
"DATA",811.8,246,100,266,0)
811.24;+198,+152,;.01~441.9
"DATA",811.8,246,100,267,0)
811.24;+198,+152,;1~ICD
"DATA",811.8,246,100,268,0)
811.24;+199,+152,;.01~446.7
"DATA",811.8,246,100,269,0)
811.24;+199,+152,;1~ICD
"DATA",811.8,246,100,270,0)
811.24;+200,+152,;.01~453.9
"DATA",811.8,246,100,271,0)
811.24;+200,+152,;1~ICD
"DATA",811.8,246,100,272,0)
811.24;+201,+152,;.01~710.1
"DATA",811.8,246,100,273,0)
811.24;+201,+152,;1~ICD
"DATA",811.8,246,100,274,0)
811.24;+202,+152,;.01~710.3
"DATA",811.8,246,100,275,0)
811.24;+202,+152,;1~ICD
"DATA",811.8,246,100,276,0)
811.24;+203,+152,;.01~710.4
"DATA",811.8,246,100,277,0)
811.24;+203,+152,;1~ICD
"DATA",811.8,246,100,278,0)
811.24;+204,+152,;.01~710.9
"DATA",811.8,246,100,279,0)
811.24;+204,+152,;1~ICD
"DATA",811.8,246,100,280,0)
811.24;+205,+152,;.01~714.2
"DATA",811.8,246,100,281,0)
811.24;+205,+152,;1~ICD
"DATA",811.8,246,100,282,0)
811.24;+206,+152,;.01~135.
"DATA",811.8,246,100,283,0)
811.24;+206,+152,;1~ICD
"DATA",811.8,246,100,284,0)
811.24;+207,+152,;.01~446.0
"DATA",811.8,246,100,285,0)
811.24;+207,+152,;1~ICD
"DATA",811.8,246,100,286,0)
811.24;+208,+152,;.01~446.20
"DATA",811.8,246,100,287,0)
811.24;+208,+152,;1~ICD
"DATA",811.8,246,100,288,0)
811.24;+209,+152,;.01~442.9
"DATA",811.8,246,100,289,0)
811.24;+209,+152,;1~ICD
"DATA",811.8,246,100,290,0)
811.24;+210,+152,;.01~452.
"DATA",811.8,246,100,291,0)
811.24;+210,+152,;1~ICD
"DATA",811.8,246,100,292,0)
811.24;+211,+152,;.01~710.0
"DATA",811.8,246,100,293,0)
811.24;+211,+152,;1~ICD
"DATA",811.8,246,100,294,0)
811.24;+212,+152,;.01~443.9
"DATA",811.8,246,100,295,0)
811.24;+212,+152,;1~ICD
"DATA",811.8,246,100,296,0)
811.24;+213,+152,;.01~444.9
"DATA",811.8,246,100,297,0)
811.24;+213,+152,;1~ICD
"DATA",811.8,246,100,298,0)
811.24;+214,+152,;.01~446.1
"DATA",811.8,246,100,299,0)
811.24;+214,+152,;1~ICD
"DATA",811.8,246,100,300,0)
811.24;+215,+152,;.01~446.3
"DATA",811.8,246,100,301,0)
811.24;+215,+152,;1~ICD
"DATA",811.8,246,100,302,0)
811.24;+216,+152,;.01~446.4
"DATA",811.8,246,100,303,0)
811.24;+216,+152,;1~ICD
"DATA",811.8,246,100,304,0)
811.24;+217,+152,;.01~446.5
"DATA",811.8,246,100,305,0)
811.24;+217,+152,;1~ICD
"DATA",811.8,246,100,306,0)
811.24;+218,+152,;.01~446.6
"DATA",811.8,246,100,307,0)
811.24;+218,+152,;1~ICD
"DATA",811.8,246,100,308,0)
]]>
"DATA",811.8,246,100,309,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,310,0)
<IEN_ROOT>
"DATA",811.8,246,100,311,0)
<![CDATA[
"DATA",811.8,246,100,312,0)
153^1
"DATA",811.8,246,100,313,0)
154^1
"DATA",811.8,246,100,314,0)
155^1
"DATA",811.8,246,100,315,0)
156^1
"DATA",811.8,246,100,316,0)
157^10
"DATA",811.8,246,100,317,0)
158^11
"DATA",811.8,246,100,318,0)
159^12
"DATA",811.8,246,100,319,0)
160^13
"DATA",811.8,246,100,320,0)
161^14
"DATA",811.8,246,100,321,0)
162^15
"DATA",811.8,246,100,322,0)
163^16
"DATA",811.8,246,100,323,0)
164^17
"DATA",811.8,246,100,324,0)
165^18
"DATA",811.8,246,100,325,0)
166^19
"DATA",811.8,246,100,326,0)
167^2
"DATA",811.8,246,100,327,0)
168^20
"DATA",811.8,246,100,328,0)
169^21
"DATA",811.8,246,100,329,0)
170^3
"DATA",811.8,246,100,330,0)
171^4
"DATA",811.8,246,100,331,0)
172^5
"DATA",811.8,246,100,332,0)
173^6
"DATA",811.8,246,100,333,0)
174^7
"DATA",811.8,246,100,334,0)
175^8
"DATA",811.8,246,100,335,0)
176^9
"DATA",811.8,246,100,336,0)
177^1
"DATA",811.8,246,100,337,0)
178^10
"DATA",811.8,246,100,338,0)
179^11
"DATA",811.8,246,100,339,0)
180^12
"DATA",811.8,246,100,340,0)
181^13
"DATA",811.8,246,100,341,0)
182^14
"DATA",811.8,246,100,342,0)
183^15
"DATA",811.8,246,100,343,0)
184^16
"DATA",811.8,246,100,344,0)
185^17
"DATA",811.8,246,100,345,0)
186^18
"DATA",811.8,246,100,346,0)
187^19
"DATA",811.8,246,100,347,0)
188^2
"DATA",811.8,246,100,348,0)
189^20
"DATA",811.8,246,100,349,0)
190^21
"DATA",811.8,246,100,350,0)
191^3
"DATA",811.8,246,100,351,0)
192^4
"DATA",811.8,246,100,352,0)
193^5
"DATA",811.8,246,100,353,0)
194^6
"DATA",811.8,246,100,354,0)
195^7
"DATA",811.8,246,100,355,0)
196^8
"DATA",811.8,246,100,356,0)
197^9
"DATA",811.8,246,100,357,0)
198^1
"DATA",811.8,246,100,358,0)
199^10
"DATA",811.8,246,100,359,0)
200^11
"DATA",811.8,246,100,360,0)
201^12
"DATA",811.8,246,100,361,0)
202^13
"DATA",811.8,246,100,362,0)
203^14
"DATA",811.8,246,100,363,0)
204^15
"DATA",811.8,246,100,364,0)
205^16
"DATA",811.8,246,100,365,0)
206^17
"DATA",811.8,246,100,366,0)
207^18
"DATA",811.8,246,100,367,0)
208^19
"DATA",811.8,246,100,368,0)
209^2
"DATA",811.8,246,100,369,0)
210^20
"DATA",811.8,246,100,370,0)
211^21
"DATA",811.8,246,100,371,0)
212^3
"DATA",811.8,246,100,372,0)
213^4
"DATA",811.8,246,100,373,0)
214^5
"DATA",811.8,246,100,374,0)
215^6
"DATA",811.8,246,100,375,0)
216^7
"DATA",811.8,246,100,376,0)
217^8
"DATA",811.8,246,100,377,0)
218^9
"DATA",811.8,246,100,378,0)
]]>
"DATA",811.8,246,100,379,0)
</IEN_ROOT>
"DATA",811.8,246,100,380,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,381,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,382,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,383,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,384,0)
<POINT_01>VA-PALLI CONS DERM CONDITION DX</POINT_01>
"DATA",811.8,246,100,385,0)
<INTERNAL_ENTRY_NUMBER>267</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,386,0)
<CHECKSUM>1677174354</CHECKSUM>
"DATA",811.8,246,100,387,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,388,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,389,0)
<![CDATA[
"DATA",811.8,246,100,390,0)
811.2;+267,;.01~VA-PALLI CONS DERM CONDITION DX
"DATA",811.8,246,100,391,0)
811.2;+267,;.02~Dermatologic Conditions
"DATA",811.8,246,100,392,0)
811.2;+267,;.03~Dermatologic Conditions [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,393,0)
811.2;+267,;100~NATIONAL
"DATA",811.8,246,100,394,0)
811.2;+267,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,395,0)
811.2;+267,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,396,0)
811.21;+268,+267,;.01~04/17/2014@17:05:55
"DATA",811.8,246,100,397,0)
811.21;+268,+267,;2~WP-start~1
"DATA",811.8,246,100,398,0)
Exchange Stub
"DATA",811.8,246,100,399,0)
811.23;+269,+267,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,400,0)
811.231;+270,+269,+267,;.01~ICD
"DATA",811.8,246,100,401,0)
811.231;+270,+269,+267,;1~7
"DATA",811.8,246,100,402,0)
811.231;+270,+269,+267,;3~7
"DATA",811.8,246,100,403,0)
811.2312;+278,+270,+269,+267,;.01~694.9
"DATA",811.8,246,100,404,0)
811.2312;+278,+270,+269,+267,;1~YES
"DATA",811.8,246,100,405,0)
811.2312;+279,+270,+269,+267,;.01~695.13
"DATA",811.8,246,100,406,0)
811.2312;+279,+270,+269,+267,;1~YES
"DATA",811.8,246,100,407,0)
811.2312;+280,+270,+269,+267,;.01~695.15
"DATA",811.8,246,100,408,0)
811.2312;+280,+270,+269,+267,;1~YES
"DATA",811.8,246,100,409,0)
811.2312;+281,+270,+269,+267,;.01~695.81
"DATA",811.8,246,100,410,0)
811.2312;+281,+270,+269,+267,;1~YES
"DATA",811.8,246,100,411,0)
811.2312;+282,+270,+269,+267,;.01~695.9
"DATA",811.8,246,100,412,0)
811.2312;+282,+270,+269,+267,;1~YES
"DATA",811.8,246,100,413,0)
811.2312;+283,+270,+269,+267,;.01~696.1
"DATA",811.8,246,100,414,0)
811.2312;+283,+270,+269,+267,;1~YES
"DATA",811.8,246,100,415,0)
811.2312;+284,+270,+269,+267,;.01~695.10
"DATA",811.8,246,100,416,0)
811.2312;+284,+270,+269,+267,;1~YES
"DATA",811.8,246,100,417,0)
811.24;+285,+267,;.01~694.9
"DATA",811.8,246,100,418,0)
811.24;+285,+267,;1~ICD
"DATA",811.8,246,100,419,0)
811.24;+286,+267,;.01~695.13
"DATA",811.8,246,100,420,0)
811.24;+286,+267,;1~ICD
"DATA",811.8,246,100,421,0)
811.24;+287,+267,;.01~695.15
"DATA",811.8,246,100,422,0)
811.24;+287,+267,;1~ICD
"DATA",811.8,246,100,423,0)
811.24;+288,+267,;.01~695.81
"DATA",811.8,246,100,424,0)
811.24;+288,+267,;1~ICD
"DATA",811.8,246,100,425,0)
811.24;+289,+267,;.01~695.9
"DATA",811.8,246,100,426,0)
811.24;+289,+267,;1~ICD
"DATA",811.8,246,100,427,0)
811.24;+290,+267,;.01~696.1
"DATA",811.8,246,100,428,0)
811.24;+290,+267,;1~ICD
"DATA",811.8,246,100,429,0)
811.24;+291,+267,;.01~695.10
"DATA",811.8,246,100,430,0)
811.24;+291,+267,;1~ICD
"DATA",811.8,246,100,431,0)
]]>
"DATA",811.8,246,100,432,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,433,0)
<IEN_ROOT>
"DATA",811.8,246,100,434,0)
<![CDATA[
"DATA",811.8,246,100,435,0)
268^1
"DATA",811.8,246,100,436,0)
269^1
"DATA",811.8,246,100,437,0)
270^1
"DATA",811.8,246,100,438,0)
271^1
"DATA",811.8,246,100,439,0)
272^2
"DATA",811.8,246,100,440,0)
273^3
"DATA",811.8,246,100,441,0)
274^4
"DATA",811.8,246,100,442,0)
275^5
"DATA",811.8,246,100,443,0)
276^6
"DATA",811.8,246,100,444,0)
277^7
"DATA",811.8,246,100,445,0)
278^1
"DATA",811.8,246,100,446,0)
279^2
"DATA",811.8,246,100,447,0)
280^3
"DATA",811.8,246,100,448,0)
281^4
"DATA",811.8,246,100,449,0)
282^5
"DATA",811.8,246,100,450,0)
283^6
"DATA",811.8,246,100,451,0)
284^7
"DATA",811.8,246,100,452,0)
285^1
"DATA",811.8,246,100,453,0)
286^2
"DATA",811.8,246,100,454,0)
287^3
"DATA",811.8,246,100,455,0)
288^4
"DATA",811.8,246,100,456,0)
289^5
"DATA",811.8,246,100,457,0)
290^6
"DATA",811.8,246,100,458,0)
291^7
"DATA",811.8,246,100,459,0)
]]>
"DATA",811.8,246,100,460,0)
</IEN_ROOT>
"DATA",811.8,246,100,461,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,462,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,463,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,464,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,465,0)
<POINT_01>VA-PALLI CONS RENAL OTHER THAN CA</POINT_01>
"DATA",811.8,246,100,466,0)
<INTERNAL_ENTRY_NUMBER>268</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,467,0)
<CHECKSUM>4214840699</CHECKSUM>
"DATA",811.8,246,100,468,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,469,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,470,0)
<![CDATA[
"DATA",811.8,246,100,471,0)
811.2;+268,;.01~VA-PALLI CONS RENAL OTHER THAN CA
"DATA",811.8,246,100,472,0)
811.2;+268,;.02~Renal Conditions Other than Cancer
"DATA",811.8,246,100,473,0)
811.2;+268,;.03~Renal Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,474,0)
811.2;+268,;100~NATIONAL
"DATA",811.8,246,100,475,0)
811.2;+268,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,476,0)
811.2;+268,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,477,0)
811.21;+269,+268,;.01~04/17/2014@17:05:55
"DATA",811.8,246,100,478,0)
811.21;+269,+268,;2~WP-start~1
"DATA",811.8,246,100,479,0)
Exchange Stub
"DATA",811.8,246,100,480,0)
811.23;+270,+268,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,481,0)
811.231;+271,+270,+268,;.01~ICD
"DATA",811.8,246,100,482,0)
811.231;+271,+270,+268,;1~5
"DATA",811.8,246,100,483,0)
811.231;+271,+270,+268,;3~5
"DATA",811.8,246,100,484,0)
811.2312;+277,+271,+270,+268,;.01~580.9
"DATA",811.8,246,100,485,0)
811.2312;+277,+271,+270,+268,;1~YES
"DATA",811.8,246,100,486,0)
811.2312;+278,+271,+270,+268,;.01~582.9
"DATA",811.8,246,100,487,0)
811.2312;+278,+271,+270,+268,;1~YES
"DATA",811.8,246,100,488,0)
811.2312;+279,+271,+270,+268,;.01~584.9
"DATA",811.8,246,100,489,0)
811.2312;+279,+271,+270,+268,;1~YES
"DATA",811.8,246,100,490,0)
811.2312;+280,+271,+270,+268,;.01~585.9
"DATA",811.8,246,100,491,0)
811.2312;+280,+271,+270,+268,;1~YES
"DATA",811.8,246,100,492,0)
811.2312;+281,+271,+270,+268,;.01~586.
"DATA",811.8,246,100,493,0)
811.2312;+281,+271,+270,+268,;1~YES
"DATA",811.8,246,100,494,0)
811.24;+282,+268,;.01~580.9
"DATA",811.8,246,100,495,0)
811.24;+282,+268,;1~ICD
"DATA",811.8,246,100,496,0)
811.24;+283,+268,;.01~582.9
"DATA",811.8,246,100,497,0)
811.24;+283,+268,;1~ICD
"DATA",811.8,246,100,498,0)
811.24;+284,+268,;.01~584.9
"DATA",811.8,246,100,499,0)
811.24;+284,+268,;1~ICD
"DATA",811.8,246,100,500,0)
811.24;+285,+268,;.01~585.9
"DATA",811.8,246,100,501,0)
811.24;+285,+268,;1~ICD
"DATA",811.8,246,100,502,0)
811.24;+286,+268,;.01~586.
"DATA",811.8,246,100,503,0)
811.24;+286,+268,;1~ICD
"DATA",811.8,246,100,504,0)
]]>
"DATA",811.8,246,100,505,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,506,0)
<IEN_ROOT>
"DATA",811.8,246,100,507,0)
<![CDATA[
"DATA",811.8,246,100,508,0)
269^1
"DATA",811.8,246,100,509,0)
270^1
"DATA",811.8,246,100,510,0)
271^1
"DATA",811.8,246,100,511,0)
272^1
"DATA",811.8,246,100,512,0)
273^2
"DATA",811.8,246,100,513,0)
274^3
"DATA",811.8,246,100,514,0)
275^4
"DATA",811.8,246,100,515,0)
276^5
"DATA",811.8,246,100,516,0)
277^1
"DATA",811.8,246,100,517,0)
278^2
"DATA",811.8,246,100,518,0)
279^3
"DATA",811.8,246,100,519,0)
280^4
"DATA",811.8,246,100,520,0)
281^5
"DATA",811.8,246,100,521,0)
282^1
"DATA",811.8,246,100,522,0)
283^2
"DATA",811.8,246,100,523,0)
284^3
"DATA",811.8,246,100,524,0)
285^4
"DATA",811.8,246,100,525,0)
286^5
"DATA",811.8,246,100,526,0)
]]>
"DATA",811.8,246,100,527,0)
</IEN_ROOT>
"DATA",811.8,246,100,528,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,529,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,530,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,531,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,532,0)
<POINT_01>VA-PALLI CONS GI OTHER THAN CA</POINT_01>
"DATA",811.8,246,100,533,0)
<INTERNAL_ENTRY_NUMBER>269</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,534,0)
<CHECKSUM>403120677</CHECKSUM>
"DATA",811.8,246,100,535,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,536,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,537,0)
<![CDATA[
"DATA",811.8,246,100,538,0)
811.2;+269,;.01~VA-PALLI CONS GI OTHER THAN CA
"DATA",811.8,246,100,539,0)
811.2;+269,;.02~Gastrointestinal Conditions Other than Cancer
"DATA",811.8,246,100,540,0)
811.2;+269,;.03~Gastrointestinal Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,541,0)
811.2;+269,;100~NATIONAL
"DATA",811.8,246,100,542,0)
811.2;+269,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,543,0)
811.2;+269,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,544,0)
811.21;+270,+269,;.01~04/17/2014@17:05:55
"DATA",811.8,246,100,545,0)
811.21;+270,+269,;2~WP-start~1
"DATA",811.8,246,100,546,0)
Exchange Stub
"DATA",811.8,246,100,547,0)
811.23;+271,+269,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,548,0)
811.231;+272,+271,+269,;.01~ICD
"DATA",811.8,246,100,549,0)
811.231;+272,+271,+269,;1~21
"DATA",811.8,246,100,550,0)
811.231;+272,+271,+269,;3~21
"DATA",811.8,246,100,551,0)
811.2312;+294,+272,+271,+269,;.01~540.9
"DATA",811.8,246,100,552,0)
811.2312;+294,+272,+271,+269,;1~YES
"DATA",811.8,246,100,553,0)
811.2312;+295,+272,+271,+269,;.01~571.5
"DATA",811.8,246,100,554,0)
811.2312;+295,+272,+271,+269,;1~YES
"DATA",811.8,246,100,555,0)
811.2312;+296,+272,+271,+269,;.01~571.6
"DATA",811.8,246,100,556,0)
811.2312;+296,+272,+271,+269,;1~YES
"DATA",811.8,246,100,557,0)
811.2312;+297,+272,+271,+269,;.01~572.2
"DATA",811.8,246,100,558,0)
811.2312;+297,+272,+271,+269,;1~YES
"DATA",811.8,246,100,559,0)
811.2312;+298,+272,+271,+269,;.01~572.4
"DATA",811.8,246,100,560,0)
811.2312;+298,+272,+271,+269,;1~YES
"DATA",811.8,246,100,561,0)
811.2312;+299,+272,+271,+269,;.01~573.4
"DATA",811.8,246,100,562,0)
811.2312;+299,+272,+271,+269,;1~YES
"DATA",811.8,246,100,563,0)
811.2312;+300,+272,+271,+269,;.01~573.9
"DATA",811.8,246,100,564,0)
811.2312;+300,+272,+271,+269,;1~YES
"DATA",811.8,246,100,565,0)
811.2312;+301,+272,+271,+269,;.01~576.1
"DATA",811.8,246,100,566,0)
811.2312;+301,+272,+271,+269,;1~YES
"DATA",811.8,246,100,567,0)
811.2312;+302,+272,+271,+269,;.01~578.9
"DATA",811.8,246,100,568,0)
811.2312;+302,+272,+271,+269,;1~YES
"DATA",811.8,246,100,569,0)
811.2312;+303,+272,+271,+269,;.01~452.
"DATA",811.8,246,100,570,0)
811.2312;+303,+272,+271,+269,;1~YES
"DATA",811.8,246,100,571,0)
811.2312;+304,+272,+271,+269,;.01~570.
"DATA",811.8,246,100,572,0)
811.2312;+304,+272,+271,+269,;1~YES
"DATA",811.8,246,100,573,0)
811.2312;+305,+272,+271,+269,;.01~555.9
"DATA",811.8,246,100,574,0)
811.2312;+305,+272,+271,+269,;1~YES
"DATA",811.8,246,100,575,0)
811.2312;+306,+272,+271,+269,;.01~574.70
"DATA",811.8,246,100,576,0)
811.2312;+306,+272,+271,+269,;1~YES
"DATA",811.8,246,100,577,0)
811.2312;+307,+272,+271,+269,;.01~577.0
"DATA",811.8,246,100,578,0)
811.2312;+307,+272,+271,+269,;1~YES
"DATA",811.8,246,100,579,0)
811.2312;+308,+272,+271,+269,;.01~556.9
"DATA",811.8,246,100,580,0)
811.2312;+308,+272,+271,+269,;1~YES
"DATA",811.8,246,100,581,0)
811.2312;+309,+272,+271,+269,;.01~557.9
"DATA",811.8,246,100,582,0)
811.2312;+309,+272,+271,+269,;1~YES
"DATA",811.8,246,100,583,0)
811.2312;+310,+272,+271,+269,;.01~560.9
"DATA",811.8,246,100,584,0)
811.2312;+310,+272,+271,+269,;1~YES
"DATA",811.8,246,100,585,0)
811.2312;+311,+272,+271,+269,;.01~567.9
"DATA",811.8,246,100,586,0)
811.2312;+311,+272,+271,+269,;1~YES
"DATA",811.8,246,100,587,0)
811.2312;+312,+272,+271,+269,;.01~569.9
"DATA",811.8,246,100,588,0)
811.2312;+312,+272,+271,+269,;1~YES
"DATA",811.8,246,100,589,0)
811.2312;+313,+272,+271,+269,;.01~571.1
"DATA",811.8,246,100,590,0)
811.2312;+313,+272,+271,+269,;1~YES
"DATA",811.8,246,100,591,0)
811.2312;+314,+272,+271,+269,;.01~571.2
"DATA",811.8,246,100,592,0)
811.2312;+314,+272,+271,+269,;1~YES
"DATA",811.8,246,100,593,0)
811.24;+315,+269,;.01~540.9
"DATA",811.8,246,100,594,0)
811.24;+315,+269,;1~ICD
"DATA",811.8,246,100,595,0)
811.24;+316,+269,;.01~571.5
"DATA",811.8,246,100,596,0)
811.24;+316,+269,;1~ICD
"DATA",811.8,246,100,597,0)
811.24;+317,+269,;.01~571.6
"DATA",811.8,246,100,598,0)
811.24;+317,+269,;1~ICD
"DATA",811.8,246,100,599,0)
811.24;+318,+269,;.01~572.2
"DATA",811.8,246,100,600,0)
811.24;+318,+269,;1~ICD
"DATA",811.8,246,100,601,0)
811.24;+319,+269,;.01~572.4
"DATA",811.8,246,100,602,0)
811.24;+319,+269,;1~ICD
"DATA",811.8,246,100,603,0)
811.24;+320,+269,;.01~573.4
"DATA",811.8,246,100,604,0)
811.24;+320,+269,;1~ICD
"DATA",811.8,246,100,605,0)
811.24;+321,+269,;.01~573.9
"DATA",811.8,246,100,606,0)
811.24;+321,+269,;1~ICD
"DATA",811.8,246,100,607,0)
811.24;+322,+269,;.01~576.1
"DATA",811.8,246,100,608,0)
811.24;+322,+269,;1~ICD
"DATA",811.8,246,100,609,0)
811.24;+323,+269,;.01~578.9
"DATA",811.8,246,100,610,0)
811.24;+323,+269,;1~ICD
"DATA",811.8,246,100,611,0)
811.24;+324,+269,;.01~452.
"DATA",811.8,246,100,612,0)
811.24;+324,+269,;1~ICD
"DATA",811.8,246,100,613,0)
811.24;+325,+269,;.01~570.
"DATA",811.8,246,100,614,0)
811.24;+325,+269,;1~ICD
"DATA",811.8,246,100,615,0)
811.24;+326,+269,;.01~555.9
"DATA",811.8,246,100,616,0)
811.24;+326,+269,;1~ICD
"DATA",811.8,246,100,617,0)
811.24;+327,+269,;.01~574.70
"DATA",811.8,246,100,618,0)
811.24;+327,+269,;1~ICD
"DATA",811.8,246,100,619,0)
811.24;+328,+269,;.01~577.0
"DATA",811.8,246,100,620,0)
811.24;+328,+269,;1~ICD
"DATA",811.8,246,100,621,0)
811.24;+329,+269,;.01~556.9
"DATA",811.8,246,100,622,0)
811.24;+329,+269,;1~ICD
"DATA",811.8,246,100,623,0)
811.24;+330,+269,;.01~557.9
"DATA",811.8,246,100,624,0)
811.24;+330,+269,;1~ICD
"DATA",811.8,246,100,625,0)
811.24;+331,+269,;.01~560.9
"DATA",811.8,246,100,626,0)
811.24;+331,+269,;1~ICD
"DATA",811.8,246,100,627,0)
811.24;+332,+269,;.01~567.9
"DATA",811.8,246,100,628,0)
811.24;+332,+269,;1~ICD
"DATA",811.8,246,100,629,0)
811.24;+333,+269,;.01~569.9
"DATA",811.8,246,100,630,0)
811.24;+333,+269,;1~ICD
"DATA",811.8,246,100,631,0)
811.24;+334,+269,;.01~571.1
"DATA",811.8,246,100,632,0)
811.24;+334,+269,;1~ICD
"DATA",811.8,246,100,633,0)
811.24;+335,+269,;.01~571.2
"DATA",811.8,246,100,634,0)
811.24;+335,+269,;1~ICD
"DATA",811.8,246,100,635,0)
]]>
"DATA",811.8,246,100,636,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,637,0)
<IEN_ROOT>
"DATA",811.8,246,100,638,0)
<![CDATA[
"DATA",811.8,246,100,639,0)
270^1
"DATA",811.8,246,100,640,0)
271^1
"DATA",811.8,246,100,641,0)
272^1
"DATA",811.8,246,100,642,0)
273^1
"DATA",811.8,246,100,643,0)
274^10
"DATA",811.8,246,100,644,0)
275^11
"DATA",811.8,246,100,645,0)
276^12
"DATA",811.8,246,100,646,0)
277^13
"DATA",811.8,246,100,647,0)
278^14
"DATA",811.8,246,100,648,0)
279^15
"DATA",811.8,246,100,649,0)
280^16
"DATA",811.8,246,100,650,0)
281^17
"DATA",811.8,246,100,651,0)
282^18
"DATA",811.8,246,100,652,0)
283^19
"DATA",811.8,246,100,653,0)
284^2
"DATA",811.8,246,100,654,0)
285^20
"DATA",811.8,246,100,655,0)
286^21
"DATA",811.8,246,100,656,0)
287^3
"DATA",811.8,246,100,657,0)
288^4
"DATA",811.8,246,100,658,0)
289^5
"DATA",811.8,246,100,659,0)
290^6
"DATA",811.8,246,100,660,0)
291^7
"DATA",811.8,246,100,661,0)
292^8
"DATA",811.8,246,100,662,0)
293^9
"DATA",811.8,246,100,663,0)
294^1
"DATA",811.8,246,100,664,0)
295^10
"DATA",811.8,246,100,665,0)
296^11
"DATA",811.8,246,100,666,0)
297^12
"DATA",811.8,246,100,667,0)
298^13
"DATA",811.8,246,100,668,0)
299^14
"DATA",811.8,246,100,669,0)
300^15
"DATA",811.8,246,100,670,0)
301^16
"DATA",811.8,246,100,671,0)
302^17
"DATA",811.8,246,100,672,0)
303^18
"DATA",811.8,246,100,673,0)
304^19
"DATA",811.8,246,100,674,0)
305^2
"DATA",811.8,246,100,675,0)
306^20
"DATA",811.8,246,100,676,0)
307^21
"DATA",811.8,246,100,677,0)
308^3
"DATA",811.8,246,100,678,0)
309^4
"DATA",811.8,246,100,679,0)
310^5
"DATA",811.8,246,100,680,0)
311^6
"DATA",811.8,246,100,681,0)
312^7
"DATA",811.8,246,100,682,0)
313^8
"DATA",811.8,246,100,683,0)
314^9
"DATA",811.8,246,100,684,0)
315^1
"DATA",811.8,246,100,685,0)
316^10
"DATA",811.8,246,100,686,0)
317^11
"DATA",811.8,246,100,687,0)
318^12
"DATA",811.8,246,100,688,0)
319^13
"DATA",811.8,246,100,689,0)
320^14
"DATA",811.8,246,100,690,0)
321^15
"DATA",811.8,246,100,691,0)
322^16
"DATA",811.8,246,100,692,0)
323^17
"DATA",811.8,246,100,693,0)
324^18
"DATA",811.8,246,100,694,0)
325^19
"DATA",811.8,246,100,695,0)
326^2
"DATA",811.8,246,100,696,0)
327^20
"DATA",811.8,246,100,697,0)
328^21
"DATA",811.8,246,100,698,0)
329^3
"DATA",811.8,246,100,699,0)
330^4
"DATA",811.8,246,100,700,0)
331^5
"DATA",811.8,246,100,701,0)
332^6
"DATA",811.8,246,100,702,0)
333^7
"DATA",811.8,246,100,703,0)
334^8
"DATA",811.8,246,100,704,0)
335^9
"DATA",811.8,246,100,705,0)
]]>
"DATA",811.8,246,100,706,0)
</IEN_ROOT>
"DATA",811.8,246,100,707,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,708,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,709,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,710,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,711,0)
<POINT_01>VA-PALLI CONS CARDIO COND OTHER THAN CA</POINT_01>
"DATA",811.8,246,100,712,0)
<INTERNAL_ENTRY_NUMBER>270</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,713,0)
<CHECKSUM>1180513730</CHECKSUM>
"DATA",811.8,246,100,714,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,715,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,716,0)
<![CDATA[
"DATA",811.8,246,100,717,0)
811.2;+270,;.01~VA-PALLI CONS CARDIO COND OTHER THAN CA
"DATA",811.8,246,100,718,0)
811.2;+270,;.02~Cardiopulmonary Conditions Other than Cancer
"DATA",811.8,246,100,719,0)
811.2;+270,;.03~Cardiopulmonary Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,720,0)
811.2;+270,;100~NATIONAL
"DATA",811.8,246,100,721,0)
811.2;+270,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,722,0)
811.2;+270,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,723,0)
811.21;+271,+270,;.01~04/17/2014@17:05:56
"DATA",811.8,246,100,724,0)
811.21;+271,+270,;2~WP-start~1
"DATA",811.8,246,100,725,0)
Exchange Stub
"DATA",811.8,246,100,726,0)
811.23;+272,+270,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,727,0)
811.231;+273,+272,+270,;.01~ICD
"DATA",811.8,246,100,728,0)
811.231;+273,+272,+270,;1~22
"DATA",811.8,246,100,729,0)
811.231;+273,+272,+270,;3~22
"DATA",811.8,246,100,730,0)
811.2312;+296,+273,+272,+270,;.01~415.19
"DATA",811.8,246,100,731,0)
811.2312;+296,+273,+272,+270,;1~YES
"DATA",811.8,246,100,732,0)
811.2312;+297,+273,+272,+270,;.01~416.0
"DATA",811.8,246,100,733,0)
811.2312;+297,+273,+272,+270,;1~YES
"DATA",811.8,246,100,734,0)
811.2312;+298,+273,+272,+270,;.01~420.90
"DATA",811.8,246,100,735,0)
811.2312;+298,+273,+272,+270,;1~YES
"DATA",811.8,246,100,736,0)
811.2312;+299,+273,+272,+270,;.01~422.90
"DATA",811.8,246,100,737,0)
811.2312;+299,+273,+272,+270,;1~YES
"DATA",811.8,246,100,738,0)
811.2312;+300,+273,+272,+270,;.01~480.0
"DATA",811.8,246,100,739,0)
811.2312;+300,+273,+272,+270,;1~YES
"DATA",811.8,246,100,740,0)
811.2312;+301,+273,+272,+270,;.01~481.
"DATA",811.8,246,100,741,0)
811.2312;+301,+273,+272,+270,;1~YES
"DATA",811.8,246,100,742,0)
811.2312;+302,+273,+272,+270,;.01~486.
"DATA",811.8,246,100,743,0)
811.2312;+302,+273,+272,+270,;1~YES
"DATA",811.8,246,100,744,0)
811.2312;+303,+273,+272,+270,;.01~493.90
"DATA",811.8,246,100,745,0)
811.2312;+303,+273,+272,+270,;1~YES
"DATA",811.8,246,100,746,0)
811.2312;+304,+273,+272,+270,;.01~500.
"DATA",811.8,246,100,747,0)
811.2312;+304,+273,+272,+270,;1~YES
"DATA",811.8,246,100,748,0)
811.2312;+305,+273,+272,+270,;.01~501.
"DATA",811.8,246,100,749,0)
811.2312;+305,+273,+272,+270,;1~YES
"DATA",811.8,246,100,750,0)
811.2312;+306,+273,+272,+270,;.01~502.
"DATA",811.8,246,100,751,0)
811.2312;+306,+273,+272,+270,;1~YES
"DATA",811.8,246,100,752,0)
811.2312;+307,+273,+272,+270,;.01~421.9
"DATA",811.8,246,100,753,0)
811.2312;+307,+273,+272,+270,;1~YES
"DATA",811.8,246,100,754,0)
811.2312;+308,+273,+272,+270,;.01~505.
"DATA",811.8,246,100,755,0)
811.2312;+308,+273,+272,+270,;1~YES
"DATA",811.8,246,100,756,0)
811.2312;+309,+273,+272,+270,;.01~507.0
"DATA",811.8,246,100,757,0)
811.2312;+309,+273,+272,+270,;1~YES
"DATA",811.8,246,100,758,0)
811.2312;+310,+273,+272,+270,;.01~515.
"DATA",811.8,246,100,759,0)
811.2312;+310,+273,+272,+270,;1~YES
"DATA",811.8,246,100,760,0)
811.2312;+311,+273,+272,+270,;.01~425.9
"DATA",811.8,246,100,761,0)
811.2312;+311,+273,+272,+270,;1~YES
"DATA",811.8,246,100,762,0)
811.2312;+312,+273,+272,+270,;.01~428.9
"DATA",811.8,246,100,763,0)
811.2312;+312,+273,+272,+270,;1~YES
"DATA",811.8,246,100,764,0)
811.2312;+313,+273,+272,+270,;.01~491.9
"DATA",811.8,246,100,765,0)
811.2312;+313,+273,+272,+270,;1~YES
"DATA",811.8,246,100,766,0)
811.2312;+314,+273,+272,+270,;.01~492.8
"DATA",811.8,246,100,767,0)
811.2312;+314,+273,+272,+270,;1~YES
"DATA",811.8,246,100,768,0)
811.2312;+315,+273,+272,+270,;.01~506.9
"DATA",811.8,246,100,769,0)
811.2312;+315,+273,+272,+270,;1~YES
"DATA",811.8,246,100,770,0)
811.2312;+316,+273,+272,+270,;.01~519.9
"DATA",811.8,246,100,771,0)
811.2312;+316,+273,+272,+270,;1~YES
"DATA",811.8,246,100,772,0)
811.2312;+317,+273,+272,+270,;.01~410.90
"DATA",811.8,246,100,773,0)
811.2312;+317,+273,+272,+270,;1~YES
"DATA",811.8,246,100,774,0)
811.24;+318,+270,;.01~415.19
"DATA",811.8,246,100,775,0)
811.24;+318,+270,;1~ICD
"DATA",811.8,246,100,776,0)
811.24;+319,+270,;.01~416.0
"DATA",811.8,246,100,777,0)
811.24;+319,+270,;1~ICD
"DATA",811.8,246,100,778,0)
811.24;+320,+270,;.01~420.90
"DATA",811.8,246,100,779,0)
811.24;+320,+270,;1~ICD
"DATA",811.8,246,100,780,0)
811.24;+321,+270,;.01~422.90
"DATA",811.8,246,100,781,0)
811.24;+321,+270,;1~ICD
"DATA",811.8,246,100,782,0)
811.24;+322,+270,;.01~480.0
"DATA",811.8,246,100,783,0)
811.24;+322,+270,;1~ICD
"DATA",811.8,246,100,784,0)
811.24;+323,+270,;.01~481.
"DATA",811.8,246,100,785,0)
811.24;+323,+270,;1~ICD
"DATA",811.8,246,100,786,0)
811.24;+324,+270,;.01~486.
"DATA",811.8,246,100,787,0)
811.24;+324,+270,;1~ICD
"DATA",811.8,246,100,788,0)
811.24;+325,+270,;.01~493.90
"DATA",811.8,246,100,789,0)
811.24;+325,+270,;1~ICD
"DATA",811.8,246,100,790,0)
811.24;+326,+270,;.01~500.
"DATA",811.8,246,100,791,0)
811.24;+326,+270,;1~ICD
"DATA",811.8,246,100,792,0)
811.24;+327,+270,;.01~501.
"DATA",811.8,246,100,793,0)
811.24;+327,+270,;1~ICD
"DATA",811.8,246,100,794,0)
811.24;+328,+270,;.01~502.
"DATA",811.8,246,100,795,0)
811.24;+328,+270,;1~ICD
"DATA",811.8,246,100,796,0)
811.24;+329,+270,;.01~421.9
"DATA",811.8,246,100,797,0)
811.24;+329,+270,;1~ICD
"DATA",811.8,246,100,798,0)
811.24;+330,+270,;.01~505.
"DATA",811.8,246,100,799,0)
811.24;+330,+270,;1~ICD
"DATA",811.8,246,100,800,0)
811.24;+331,+270,;.01~507.0
"DATA",811.8,246,100,801,0)
811.24;+331,+270,;1~ICD
"DATA",811.8,246,100,802,0)
811.24;+332,+270,;.01~515.
"DATA",811.8,246,100,803,0)
811.24;+332,+270,;1~ICD
"DATA",811.8,246,100,804,0)
811.24;+333,+270,;.01~425.9
"DATA",811.8,246,100,805,0)
811.24;+333,+270,;1~ICD
"DATA",811.8,246,100,806,0)
811.24;+334,+270,;.01~428.9
"DATA",811.8,246,100,807,0)
811.24;+334,+270,;1~ICD
"DATA",811.8,246,100,808,0)
811.24;+335,+270,;.01~491.9
"DATA",811.8,246,100,809,0)
811.24;+335,+270,;1~ICD
"DATA",811.8,246,100,810,0)
811.24;+336,+270,;.01~492.8
"DATA",811.8,246,100,811,0)
811.24;+336,+270,;1~ICD
"DATA",811.8,246,100,812,0)
811.24;+337,+270,;.01~506.9
"DATA",811.8,246,100,813,0)
811.24;+337,+270,;1~ICD
"DATA",811.8,246,100,814,0)
811.24;+338,+270,;.01~519.9
"DATA",811.8,246,100,815,0)
811.24;+338,+270,;1~ICD
"DATA",811.8,246,100,816,0)
811.24;+339,+270,;.01~410.90
"DATA",811.8,246,100,817,0)
811.24;+339,+270,;1~ICD
"DATA",811.8,246,100,818,0)
]]>
"DATA",811.8,246,100,819,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,820,0)
<IEN_ROOT>
"DATA",811.8,246,100,821,0)
<![CDATA[
"DATA",811.8,246,100,822,0)
271^1
"DATA",811.8,246,100,823,0)
272^1
"DATA",811.8,246,100,824,0)
273^1
"DATA",811.8,246,100,825,0)
274^1
"DATA",811.8,246,100,826,0)
275^10
"DATA",811.8,246,100,827,0)
276^11
"DATA",811.8,246,100,828,0)
277^12
"DATA",811.8,246,100,829,0)
278^13
"DATA",811.8,246,100,830,0)
279^14
"DATA",811.8,246,100,831,0)
280^15
"DATA",811.8,246,100,832,0)
281^16
"DATA",811.8,246,100,833,0)
282^17
"DATA",811.8,246,100,834,0)
283^18
"DATA",811.8,246,100,835,0)
284^19
"DATA",811.8,246,100,836,0)
285^2
"DATA",811.8,246,100,837,0)
286^20
"DATA",811.8,246,100,838,0)
287^21
"DATA",811.8,246,100,839,0)
288^22
"DATA",811.8,246,100,840,0)
289^3
"DATA",811.8,246,100,841,0)
290^4
"DATA",811.8,246,100,842,0)
291^5
"DATA",811.8,246,100,843,0)
292^6
"DATA",811.8,246,100,844,0)
293^7
"DATA",811.8,246,100,845,0)
294^8
"DATA",811.8,246,100,846,0)
295^9
"DATA",811.8,246,100,847,0)
296^1
"DATA",811.8,246,100,848,0)
297^10
"DATA",811.8,246,100,849,0)
298^11
"DATA",811.8,246,100,850,0)
299^12
"DATA",811.8,246,100,851,0)
300^13
"DATA",811.8,246,100,852,0)
301^14
"DATA",811.8,246,100,853,0)
302^15
"DATA",811.8,246,100,854,0)
303^16
"DATA",811.8,246,100,855,0)
304^17
"DATA",811.8,246,100,856,0)
305^18
"DATA",811.8,246,100,857,0)
306^19
"DATA",811.8,246,100,858,0)
307^2
"DATA",811.8,246,100,859,0)
308^20
"DATA",811.8,246,100,860,0)
309^21
"DATA",811.8,246,100,861,0)
310^22
"DATA",811.8,246,100,862,0)
311^3
"DATA",811.8,246,100,863,0)
312^4
"DATA",811.8,246,100,864,0)
313^5
"DATA",811.8,246,100,865,0)
314^6
"DATA",811.8,246,100,866,0)
315^7
"DATA",811.8,246,100,867,0)
316^8
"DATA",811.8,246,100,868,0)
317^9
"DATA",811.8,246,100,869,0)
318^1
"DATA",811.8,246,100,870,0)
319^10
"DATA",811.8,246,100,871,0)
320^11
"DATA",811.8,246,100,872,0)
321^12
"DATA",811.8,246,100,873,0)
322^13
"DATA",811.8,246,100,874,0)
323^14
"DATA",811.8,246,100,875,0)
324^15
"DATA",811.8,246,100,876,0)
325^16
"DATA",811.8,246,100,877,0)
326^17
"DATA",811.8,246,100,878,0)
327^18
"DATA",811.8,246,100,879,0)
328^19
"DATA",811.8,246,100,880,0)
329^2
"DATA",811.8,246,100,881,0)
330^20
"DATA",811.8,246,100,882,0)
331^21
"DATA",811.8,246,100,883,0)
332^22
"DATA",811.8,246,100,884,0)
333^3
"DATA",811.8,246,100,885,0)
334^4
"DATA",811.8,246,100,886,0)
335^5
"DATA",811.8,246,100,887,0)
336^6
"DATA",811.8,246,100,888,0)
337^7
"DATA",811.8,246,100,889,0)
338^8
"DATA",811.8,246,100,890,0)
339^9
"DATA",811.8,246,100,891,0)
]]>
"DATA",811.8,246,100,892,0)
</IEN_ROOT>
"DATA",811.8,246,100,893,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,894,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,895,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,896,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,897,0)
<POINT_01>VA-PALLI CONS CNS COND OTHER THAN CA</POINT_01>
"DATA",811.8,246,100,898,0)
<INTERNAL_ENTRY_NUMBER>271</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,899,0)
<CHECKSUM>3330454011</CHECKSUM>
"DATA",811.8,246,100,900,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,901,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,902,0)
<![CDATA[
"DATA",811.8,246,100,903,0)
811.2;+271,;.01~VA-PALLI CONS CNS COND OTHER THAN CA
"DATA",811.8,246,100,904,0)
811.2;+271,;.02~CNS Conditions Other Than Cancer
"DATA",811.8,246,100,905,0)
811.2;+271,;.03~CNS Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,906,0)
811.2;+271,;100~NATIONAL
"DATA",811.8,246,100,907,0)
811.2;+271,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,908,0)
811.2;+271,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,909,0)
811.21;+272,+271,;.01~04/17/2014@17:05:56
"DATA",811.8,246,100,910,0)
811.21;+272,+271,;2~WP-start~1
"DATA",811.8,246,100,911,0)
Exchange Stub
"DATA",811.8,246,100,912,0)
811.23;+273,+271,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,913,0)
811.231;+274,+273,+271,;.01~ICD
"DATA",811.8,246,100,914,0)
811.231;+274,+273,+271,;1~17
"DATA",811.8,246,100,915,0)
811.231;+274,+273,+271,;3~17
"DATA",811.8,246,100,916,0)
811.2312;+292,+274,+273,+271,;.01~291.1
"DATA",811.8,246,100,917,0)
811.2312;+292,+274,+273,+271,;1~YES
"DATA",811.8,246,100,918,0)
811.2312;+293,+274,+273,+271,;.01~290.0
"DATA",811.8,246,100,919,0)
811.2312;+293,+274,+273,+271,;1~YES
"DATA",811.8,246,100,920,0)
811.2312;+294,+274,+273,+271,;.01~290.40
"DATA",811.8,246,100,921,0)
811.2312;+294,+274,+273,+271,;1~YES
"DATA",811.8,246,100,922,0)
811.2312;+295,+274,+273,+271,;.01~331.0
"DATA",811.8,246,100,923,0)
811.2312;+295,+274,+273,+271,;1~YES
"DATA",811.8,246,100,924,0)
811.2312;+296,+274,+273,+271,;.01~340.
"DATA",811.8,246,100,925,0)
811.2312;+296,+274,+273,+271,;1~YES
"DATA",811.8,246,100,926,0)
811.2312;+297,+274,+273,+271,;.01~345.90
"DATA",811.8,246,100,927,0)
811.2312;+297,+274,+273,+271,;1~YES
"DATA",811.8,246,100,928,0)
811.2312;+298,+274,+273,+271,;.01~430.
"DATA",811.8,246,100,929,0)
811.2312;+298,+274,+273,+271,;1~YES
"DATA",811.8,246,100,930,0)
811.2312;+299,+274,+273,+271,;.01~431.
"DATA",811.8,246,100,931,0)
811.2312;+299,+274,+273,+271,;1~YES
"DATA",811.8,246,100,932,0)
811.2312;+300,+274,+273,+271,;.01~434.90
"DATA",811.8,246,100,933,0)
811.2312;+300,+274,+273,+271,;1~YES
"DATA",811.8,246,100,934,0)
811.2312;+301,+274,+273,+271,;.01~292.82
"DATA",811.8,246,100,935,0)
811.2312;+301,+274,+273,+271,;1~YES
"DATA",811.8,246,100,936,0)
811.2312;+302,+274,+273,+271,;.01~323.9
"DATA",811.8,246,100,937,0)
811.2312;+302,+274,+273,+271,;1~YES
"DATA",811.8,246,100,938,0)
811.2312;+303,+274,+273,+271,;.01~341.9
"DATA",811.8,246,100,939,0)
811.2312;+303,+274,+273,+271,;1~YES
"DATA",811.8,246,100,940,0)
811.2312;+304,+274,+273,+271,;.01~348.1
"DATA",811.8,246,100,941,0)
811.2312;+304,+274,+273,+271,;1~YES
"DATA",811.8,246,100,942,0)
811.2312;+305,+274,+273,+271,;.01~348.4
"DATA",811.8,246,100,943,0)
811.2312;+305,+274,+273,+271,;1~YES
"DATA",811.8,246,100,944,0)
811.2312;+306,+274,+273,+271,;.01~348.5
"DATA",811.8,246,100,945,0)
811.2312;+306,+274,+273,+271,;1~YES
"DATA",811.8,246,100,946,0)
811.2312;+307,+274,+273,+271,;.01~349.9
"DATA",811.8,246,100,947,0)
811.2312;+307,+274,+273,+271,;1~YES
"DATA",811.8,246,100,948,0)
811.2312;+308,+274,+273,+271,;.01~445.89
"DATA",811.8,246,100,949,0)
811.2312;+308,+274,+273,+271,;1~YES
"DATA",811.8,246,100,950,0)
811.24;+309,+271,;.01~291.1
"DATA",811.8,246,100,951,0)
811.24;+309,+271,;1~ICD
"DATA",811.8,246,100,952,0)
811.24;+310,+271,;.01~290.0
"DATA",811.8,246,100,953,0)
811.24;+310,+271,;1~ICD
"DATA",811.8,246,100,954,0)
811.24;+311,+271,;.01~290.40
"DATA",811.8,246,100,955,0)
811.24;+311,+271,;1~ICD
"DATA",811.8,246,100,956,0)
811.24;+312,+271,;.01~331.0
"DATA",811.8,246,100,957,0)
811.24;+312,+271,;1~ICD
"DATA",811.8,246,100,958,0)
811.24;+313,+271,;.01~340.
"DATA",811.8,246,100,959,0)
811.24;+313,+271,;1~ICD
"DATA",811.8,246,100,960,0)
811.24;+314,+271,;.01~345.90
"DATA",811.8,246,100,961,0)
811.24;+314,+271,;1~ICD
"DATA",811.8,246,100,962,0)
811.24;+315,+271,;.01~430.
"DATA",811.8,246,100,963,0)
811.24;+315,+271,;1~ICD
"DATA",811.8,246,100,964,0)
811.24;+316,+271,;.01~431.
"DATA",811.8,246,100,965,0)
811.24;+316,+271,;1~ICD
"DATA",811.8,246,100,966,0)
811.24;+317,+271,;.01~434.90
"DATA",811.8,246,100,967,0)
811.24;+317,+271,;1~ICD
"DATA",811.8,246,100,968,0)
811.24;+318,+271,;.01~292.82
"DATA",811.8,246,100,969,0)
811.24;+318,+271,;1~ICD
"DATA",811.8,246,100,970,0)
811.24;+319,+271,;.01~323.9
"DATA",811.8,246,100,971,0)
811.24;+319,+271,;1~ICD
"DATA",811.8,246,100,972,0)
811.24;+320,+271,;.01~341.9
"DATA",811.8,246,100,973,0)
811.24;+320,+271,;1~ICD
"DATA",811.8,246,100,974,0)
811.24;+321,+271,;.01~348.1
"DATA",811.8,246,100,975,0)
811.24;+321,+271,;1~ICD
"DATA",811.8,246,100,976,0)
811.24;+322,+271,;.01~348.4
"DATA",811.8,246,100,977,0)
811.24;+322,+271,;1~ICD
"DATA",811.8,246,100,978,0)
811.24;+323,+271,;.01~348.5
"DATA",811.8,246,100,979,0)
811.24;+323,+271,;1~ICD
"DATA",811.8,246,100,980,0)
811.24;+324,+271,;.01~349.9
"DATA",811.8,246,100,981,0)
811.24;+324,+271,;1~ICD
"DATA",811.8,246,100,982,0)
811.24;+325,+271,;.01~445.89
"DATA",811.8,246,100,983,0)
811.24;+325,+271,;1~ICD
"DATA",811.8,246,100,984,0)
]]>
"DATA",811.8,246,100,985,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,986,0)
<IEN_ROOT>
"DATA",811.8,246,100,987,0)
<![CDATA[
"DATA",811.8,246,100,988,0)
272^1
"DATA",811.8,246,100,989,0)
273^1
"DATA",811.8,246,100,990,0)
274^1
"DATA",811.8,246,100,991,0)
275^1
"DATA",811.8,246,100,992,0)
276^10
"DATA",811.8,246,100,993,0)
277^11
"DATA",811.8,246,100,994,0)
278^12
"DATA",811.8,246,100,995,0)
279^13
"DATA",811.8,246,100,996,0)
280^14
"DATA",811.8,246,100,997,0)
281^15
"DATA",811.8,246,100,998,0)
282^16
"DATA",811.8,246,100,999,0)
283^17
"DATA",811.8,246,100,1000,0)
284^2
"DATA",811.8,246,100,1001,0)
285^3
"DATA",811.8,246,100,1002,0)
286^4
"DATA",811.8,246,100,1003,0)
287^5
"DATA",811.8,246,100,1004,0)
288^6
"DATA",811.8,246,100,1005,0)
289^7
"DATA",811.8,246,100,1006,0)
290^8
"DATA",811.8,246,100,1007,0)
291^9
"DATA",811.8,246,100,1008,0)
292^1
"DATA",811.8,246,100,1009,0)
293^10
"DATA",811.8,246,100,1010,0)
294^11
"DATA",811.8,246,100,1011,0)
295^12
"DATA",811.8,246,100,1012,0)
296^13
"DATA",811.8,246,100,1013,0)
297^14
"DATA",811.8,246,100,1014,0)
298^15
"DATA",811.8,246,100,1015,0)
299^16
"DATA",811.8,246,100,1016,0)
300^17
"DATA",811.8,246,100,1017,0)
301^2
"DATA",811.8,246,100,1018,0)
302^3
"DATA",811.8,246,100,1019,0)
303^4
"DATA",811.8,246,100,1020,0)
304^5
"DATA",811.8,246,100,1021,0)
305^6
"DATA",811.8,246,100,1022,0)
306^7
"DATA",811.8,246,100,1023,0)
307^8
"DATA",811.8,246,100,1024,0)
308^9
"DATA",811.8,246,100,1025,0)
309^1
"DATA",811.8,246,100,1026,0)
310^10
"DATA",811.8,246,100,1027,0)
311^11
"DATA",811.8,246,100,1028,0)
312^12
"DATA",811.8,246,100,1029,0)
313^13
"DATA",811.8,246,100,1030,0)
314^14
"DATA",811.8,246,100,1031,0)
315^15
"DATA",811.8,246,100,1032,0)
316^16
"DATA",811.8,246,100,1033,0)
317^17
"DATA",811.8,246,100,1034,0)
318^2
"DATA",811.8,246,100,1035,0)
319^3
"DATA",811.8,246,100,1036,0)
320^4
"DATA",811.8,246,100,1037,0)
321^5
"DATA",811.8,246,100,1038,0)
322^6
"DATA",811.8,246,100,1039,0)
323^7
"DATA",811.8,246,100,1040,0)
324^8
"DATA",811.8,246,100,1041,0)
325^9
"DATA",811.8,246,100,1042,0)
]]>
"DATA",811.8,246,100,1043,0)
</IEN_ROOT>
"DATA",811.8,246,100,1044,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1045,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1046,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,246,100,1047,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,246,100,1048,0)
<POINT_01>VA-PALLI CONS CANCER/HEMA COND</POINT_01>
"DATA",811.8,246,100,1049,0)
<INTERNAL_ENTRY_NUMBER>272</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1050,0)
<CHECKSUM>2328054525</CHECKSUM>
"DATA",811.8,246,100,1051,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1052,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1053,0)
<![CDATA[
"DATA",811.8,246,100,1054,0)
811.2;+272,;.01~VA-PALLI CONS CANCER/HEMA COND
"DATA",811.8,246,100,1055,0)
811.2;+272,;.02~Cancer and Hematologic Conditions
"DATA",811.8,246,100,1056,0)
811.2;+272,;.03~Cancer & Hematologic Conditions [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1057,0)
811.2;+272,;100~NATIONAL
"DATA",811.8,246,100,1058,0)
811.2;+272,;3107~Select one diagnosis; then check primary diagnosis box. [WORKLOAD MODULE]
"DATA",811.8,246,100,1059,0)
811.2;+272,;3108~<- DO NOT use this checkbox
"DATA",811.8,246,100,1060,0)
811.21;+273,+272,;.01~04/17/2014@17:05:57
"DATA",811.8,246,100,1061,0)
811.21;+273,+272,;2~WP-start~1
"DATA",811.8,246,100,1062,0)
Exchange Stub
"DATA",811.8,246,100,1063,0)
811.23;+274,+272,;.01~Copy from selectable diagnosis
"DATA",811.8,246,100,1064,0)
811.231;+275,+274,+272,;.01~ICD
"DATA",811.8,246,100,1065,0)
811.231;+275,+274,+272,;1~51
"DATA",811.8,246,100,1066,0)
811.231;+275,+274,+272,;3~51
"DATA",811.8,246,100,1067,0)
811.2312;+328,+275,+274,+272,;.01~140.9
"DATA",811.8,246,100,1068,0)
811.2312;+328,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1069,0)
811.2312;+329,+275,+274,+272,;.01~156.9
"DATA",811.8,246,100,1070,0)
811.2312;+329,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1071,0)
811.2312;+330,+275,+274,+272,;.01~157.9
"DATA",811.8,246,100,1072,0)
811.2312;+330,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1073,0)
811.2312;+331,+275,+274,+272,;.01~160.9
"DATA",811.8,246,100,1074,0)
811.2312;+331,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1075,0)
811.2312;+332,+275,+274,+272,;.01~161.9
"DATA",811.8,246,100,1076,0)
811.2312;+332,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1077,0)
811.2312;+333,+275,+274,+272,;.01~162.9
"DATA",811.8,246,100,1078,0)
811.2312;+333,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1079,0)
811.2312;+334,+275,+274,+272,;.01~163.9
"DATA",811.8,246,100,1080,0)
811.2312;+334,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1081,0)
811.2312;+335,+275,+274,+272,;.01~164.9
"DATA",811.8,246,100,1082,0)
811.2312;+335,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1083,0)
811.2312;+336,+275,+274,+272,;.01~170.9
"DATA",811.8,246,100,1084,0)
811.2312;+336,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1085,0)
811.2312;+337,+275,+274,+272,;.01~171.9
"DATA",811.8,246,100,1086,0)
811.2312;+337,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1087,0)
811.2312;+338,+275,+274,+272,;.01~172.9
"DATA",811.8,246,100,1088,0)
811.2312;+338,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1089,0)
811.2312;+339,+275,+274,+272,;.01~141.9
"DATA",811.8,246,100,1090,0)
811.2312;+339,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1091,0)
811.2312;+340,+275,+274,+272,;.01~173.9
"DATA",811.8,246,100,1092,0)
811.2312;+340,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1093,0)
811.2312;+341,+275,+274,+272,;.01~175.9
"DATA",811.8,246,100,1094,0)
811.2312;+341,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1095,0)
811.2312;+342,+275,+274,+272,;.01~176.9
"DATA",811.8,246,100,1096,0)
811.2312;+342,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1097,0)
811.2312;+343,+275,+274,+272,;.01~186.9
"DATA",811.8,246,100,1098,0)
811.2312;+343,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1099,0)
811.2312;+344,+275,+274,+272,;.01~187.9
"DATA",811.8,246,100,1100,0)
811.2312;+344,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1101,0)
811.2312;+345,+275,+274,+272,;.01~188.9
"DATA",811.8,246,100,1102,0)
811.2312;+345,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1103,0)
811.2312;+346,+275,+274,+272,;.01~189.9
"DATA",811.8,246,100,1104,0)
811.2312;+346,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1105,0)
811.2312;+347,+275,+274,+272,;.01~191.9
"DATA",811.8,246,100,1106,0)
811.2312;+347,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1107,0)
811.2312;+348,+275,+274,+272,;.01~238.75
"DATA",811.8,246,100,1108,0)
811.2312;+348,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1109,0)
811.2312;+349,+275,+274,+272,;.01~239.9
"DATA",811.8,246,100,1110,0)
811.2312;+349,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1111,0)
811.2312;+350,+275,+274,+272,;.01~142.9
"DATA",811.8,246,100,1112,0)
811.2312;+350,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1113,0)
811.2312;+351,+275,+274,+272,;.01~284.9
"DATA",811.8,246,100,1114,0)
811.2312;+351,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1115,0)
811.2312;+352,+275,+274,+272,;.01~286.9
"DATA",811.8,246,100,1116,0)
811.2312;+352,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1117,0)
811.2312;+353,+275,+274,+272,;.01~287.9
"DATA",811.8,246,100,1118,0)
811.2312;+353,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1119,0)
811.2312;+354,+275,+274,+272,;.01~155.0
"DATA",811.8,246,100,1120,0)
811.2312;+354,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1121,0)
811.2312;+355,+275,+274,+272,;.01~185.
"DATA",811.8,246,100,1122,0)
811.2312;+355,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1123,0)
811.2312;+356,+275,+274,+272,;.01~193.
"DATA",811.8,246,100,1124,0)
811.2312;+356,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1125,0)
811.2312;+357,+275,+274,+272,;.01~199.0
"DATA",811.8,246,100,1126,0)
811.2312;+357,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1127,0)
811.2312;+358,+275,+274,+272,;.01~200.10
"DATA",811.8,246,100,1128,0)
811.2312;+358,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1129,0)
811.2312;+359,+275,+274,+272,;.01~200.20
"DATA",811.8,246,100,1130,0)
811.2312;+359,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1131,0)
811.2312;+360,+275,+274,+272,;.01~200.30
"DATA",811.8,246,100,1132,0)
811.2312;+360,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1133,0)
811.2312;+361,+275,+274,+272,;.01~149.9
"DATA",811.8,246,100,1134,0)
811.2312;+361,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1135,0)
811.2312;+362,+275,+274,+272,;.01~200.40
"DATA",811.8,246,100,1136,0)
811.2312;+362,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1137,0)
811.2312;+363,+275,+274,+272,;.01~200.50
"DATA",811.8,246,100,1138,0)
811.2312;+363,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1139,0)
811.2312;+364,+275,+274,+272,;.01~200.60
"DATA",811.8,246,100,1140,0)
811.2312;+364,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1141,0)
811.2312;+365,+275,+274,+272,;.01~200.70
"DATA",811.8,246,100,1142,0)
811.2312;+365,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1143,0)
811.2312;+366,+275,+274,+272,;.01~201.90
"DATA",811.8,246,100,1144,0)
811.2312;+366,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1145,0)
811.2312;+367,+275,+274,+272,;.01~202.90
"DATA",811.8,246,100,1146,0)
811.2312;+367,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1147,0)
811.2312;+368,+275,+274,+272,;.01~203.00
"DATA",811.8,246,100,1148,0)
811.2312;+368,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1149,0)
811.2312;+369,+275,+274,+272,;.01~208.90
"DATA",811.8,246,100,1150,0)
811.2312;+369,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1151,0)
811.2312;+370,+275,+274,+272,;.01~209.00
"DATA",811.8,246,100,1152,0)
811.2312;+370,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1153,0)
811.2312;+371,+275,+274,+272,;.01~209.10
"DATA",811.8,246,100,1154,0)
811.2312;+371,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1155,0)
811.2312;+372,+275,+274,+272,;.01~150.9
"DATA",811.8,246,100,1156,0)
811.2312;+372,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1157,0)
811.2312;+373,+275,+274,+272,;.01~209.20
"DATA",811.8,246,100,1158,0)
811.2312;+373,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1159,0)
811.2312;+374,+275,+274,+272,;.01~459.0
"DATA",811.8,246,100,1160,0)
811.2312;+374,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1161,0)
811.2312;+375,+275,+274,+272,;.01~151.9
"DATA",811.8,246,100,1162,0)
811.2312;+375,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1163,0)
811.2312;+376,+275,+274,+272,;.01~152.9
"DATA",811.8,246,100,1164,0)
811.2312;+376,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1165,0)
811.2312;+377,+275,+274,+272,;.01~153.9
"DATA",811.8,246,100,1166,0)
811.2312;+377,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1167,0)
811.2312;+378,+275,+274,+272,;.01~154.3
"DATA",811.8,246,100,1168,0)
811.2312;+378,+275,+274,+272,;1~YES
"DATA",811.8,246,100,1169,0)
811.24;+379,+272,;.01~140.9
"DATA",811.8,246,100,1170,0)
811.24;+379,+272,;1~ICD
"DATA",811.8,246,100,1171,0)
811.24;+380,+272,;.01~156.9
"DATA",811.8,246,100,1172,0)
811.24;+380,+272,;1~ICD
"DATA",811.8,246,100,1173,0)
811.24;+381,+272,;.01~157.9
"DATA",811.8,246,100,1174,0)
811.24;+381,+272,;1~ICD
"DATA",811.8,246,100,1175,0)
811.24;+382,+272,;.01~160.9
"DATA",811.8,246,100,1176,0)
811.24;+382,+272,;1~ICD
"DATA",811.8,246,100,1177,0)
811.24;+383,+272,;.01~161.9
"DATA",811.8,246,100,1178,0)
811.24;+383,+272,;1~ICD
"DATA",811.8,246,100,1179,0)
811.24;+384,+272,;.01~162.9
"DATA",811.8,246,100,1180,0)
811.24;+384,+272,;1~ICD
"DATA",811.8,246,100,1181,0)
811.24;+385,+272,;.01~163.9
"DATA",811.8,246,100,1182,0)
811.24;+385,+272,;1~ICD
"DATA",811.8,246,100,1183,0)
811.24;+386,+272,;.01~164.9
"DATA",811.8,246,100,1184,0)
811.24;+386,+272,;1~ICD
"DATA",811.8,246,100,1185,0)
811.24;+387,+272,;.01~170.9
"DATA",811.8,246,100,1186,0)
811.24;+387,+272,;1~ICD
"DATA",811.8,246,100,1187,0)
811.24;+388,+272,;.01~171.9
"DATA",811.8,246,100,1188,0)
811.24;+388,+272,;1~ICD
"DATA",811.8,246,100,1189,0)
811.24;+389,+272,;.01~172.9
"DATA",811.8,246,100,1190,0)
811.24;+389,+272,;1~ICD
"DATA",811.8,246,100,1191,0)
811.24;+390,+272,;.01~141.9
"DATA",811.8,246,100,1192,0)
811.24;+390,+272,;1~ICD
"DATA",811.8,246,100,1193,0)
811.24;+391,+272,;.01~173.9
"DATA",811.8,246,100,1194,0)
811.24;+391,+272,;1~ICD
"DATA",811.8,246,100,1195,0)
811.24;+392,+272,;.01~175.9
"DATA",811.8,246,100,1196,0)
811.24;+392,+272,;1~ICD
"DATA",811.8,246,100,1197,0)
811.24;+393,+272,;.01~176.9
"DATA",811.8,246,100,1198,0)
811.24;+393,+272,;1~ICD
"DATA",811.8,246,100,1199,0)
811.24;+394,+272,;.01~186.9
"DATA",811.8,246,100,1200,0)
811.24;+394,+272,;1~ICD
"DATA",811.8,246,100,1201,0)
811.24;+395,+272,;.01~187.9
"DATA",811.8,246,100,1202,0)
811.24;+395,+272,;1~ICD
"DATA",811.8,246,100,1203,0)
811.24;+396,+272,;.01~188.9
"DATA",811.8,246,100,1204,0)
811.24;+396,+272,;1~ICD
"DATA",811.8,246,100,1205,0)
811.24;+397,+272,;.01~189.9
"DATA",811.8,246,100,1206,0)
811.24;+397,+272,;1~ICD
"DATA",811.8,246,100,1207,0)
811.24;+398,+272,;.01~191.9
"DATA",811.8,246,100,1208,0)
811.24;+398,+272,;1~ICD
"DATA",811.8,246,100,1209,0)
811.24;+399,+272,;.01~238.75
"DATA",811.8,246,100,1210,0)
811.24;+399,+272,;1~ICD
"DATA",811.8,246,100,1211,0)
811.24;+400,+272,;.01~239.9
"DATA",811.8,246,100,1212,0)
811.24;+400,+272,;1~ICD
"DATA",811.8,246,100,1213,0)
811.24;+401,+272,;.01~142.9
"DATA",811.8,246,100,1214,0)
811.24;+401,+272,;1~ICD
"DATA",811.8,246,100,1215,0)
811.24;+402,+272,;.01~284.9
"DATA",811.8,246,100,1216,0)
811.24;+402,+272,;1~ICD
"DATA",811.8,246,100,1217,0)
811.24;+403,+272,;.01~286.9
"DATA",811.8,246,100,1218,0)
811.24;+403,+272,;1~ICD
"DATA",811.8,246,100,1219,0)
811.24;+404,+272,;.01~287.9
"DATA",811.8,246,100,1220,0)
811.24;+404,+272,;1~ICD
"DATA",811.8,246,100,1221,0)
811.24;+405,+272,;.01~155.0
"DATA",811.8,246,100,1222,0)
811.24;+405,+272,;1~ICD
"DATA",811.8,246,100,1223,0)
811.24;+406,+272,;.01~185.
"DATA",811.8,246,100,1224,0)
811.24;+406,+272,;1~ICD
"DATA",811.8,246,100,1225,0)
811.24;+407,+272,;.01~193.
"DATA",811.8,246,100,1226,0)
811.24;+407,+272,;1~ICD
"DATA",811.8,246,100,1227,0)
811.24;+408,+272,;.01~199.0
"DATA",811.8,246,100,1228,0)
811.24;+408,+272,;1~ICD
"DATA",811.8,246,100,1229,0)
811.24;+409,+272,;.01~200.10
"DATA",811.8,246,100,1230,0)
811.24;+409,+272,;1~ICD
"DATA",811.8,246,100,1231,0)
811.24;+410,+272,;.01~200.20
"DATA",811.8,246,100,1232,0)
811.24;+410,+272,;1~ICD
"DATA",811.8,246,100,1233,0)
811.24;+411,+272,;.01~200.30
"DATA",811.8,246,100,1234,0)
811.24;+411,+272,;1~ICD
"DATA",811.8,246,100,1235,0)
811.24;+412,+272,;.01~149.9
"DATA",811.8,246,100,1236,0)
811.24;+412,+272,;1~ICD
"DATA",811.8,246,100,1237,0)
811.24;+413,+272,;.01~200.40
"DATA",811.8,246,100,1238,0)
811.24;+413,+272,;1~ICD
"DATA",811.8,246,100,1239,0)
811.24;+414,+272,;.01~200.50
"DATA",811.8,246,100,1240,0)
811.24;+414,+272,;1~ICD
"DATA",811.8,246,100,1241,0)
811.24;+415,+272,;.01~200.60
"DATA",811.8,246,100,1242,0)
811.24;+415,+272,;1~ICD
"DATA",811.8,246,100,1243,0)
811.24;+416,+272,;.01~200.70
"DATA",811.8,246,100,1244,0)
811.24;+416,+272,;1~ICD
"DATA",811.8,246,100,1245,0)
811.24;+417,+272,;.01~201.90
"DATA",811.8,246,100,1246,0)
811.24;+417,+272,;1~ICD
"DATA",811.8,246,100,1247,0)
811.24;+418,+272,;.01~202.90
"DATA",811.8,246,100,1248,0)
811.24;+418,+272,;1~ICD
"DATA",811.8,246,100,1249,0)
811.24;+419,+272,;.01~203.00
"DATA",811.8,246,100,1250,0)
811.24;+419,+272,;1~ICD
"DATA",811.8,246,100,1251,0)
811.24;+420,+272,;.01~208.90
"DATA",811.8,246,100,1252,0)
811.24;+420,+272,;1~ICD
"DATA",811.8,246,100,1253,0)
811.24;+421,+272,;.01~209.00
"DATA",811.8,246,100,1254,0)
811.24;+421,+272,;1~ICD
"DATA",811.8,246,100,1255,0)
811.24;+422,+272,;.01~209.10
"DATA",811.8,246,100,1256,0)
811.24;+422,+272,;1~ICD
"DATA",811.8,246,100,1257,0)
811.24;+423,+272,;.01~150.9
"DATA",811.8,246,100,1258,0)
811.24;+423,+272,;1~ICD
"DATA",811.8,246,100,1259,0)
811.24;+424,+272,;.01~209.20
"DATA",811.8,246,100,1260,0)
811.24;+424,+272,;1~ICD
"DATA",811.8,246,100,1261,0)
811.24;+425,+272,;.01~459.0
"DATA",811.8,246,100,1262,0)
811.24;+425,+272,;1~ICD
"DATA",811.8,246,100,1263,0)
811.24;+426,+272,;.01~151.9
"DATA",811.8,246,100,1264,0)
811.24;+426,+272,;1~ICD
"DATA",811.8,246,100,1265,0)
811.24;+427,+272,;.01~152.9
"DATA",811.8,246,100,1266,0)
811.24;+427,+272,;1~ICD
"DATA",811.8,246,100,1267,0)
811.24;+428,+272,;.01~153.9
"DATA",811.8,246,100,1268,0)
811.24;+428,+272,;1~ICD
"DATA",811.8,246,100,1269,0)
811.24;+429,+272,;.01~154.3
"DATA",811.8,246,100,1270,0)
811.24;+429,+272,;1~ICD
"DATA",811.8,246,100,1271,0)
]]>
"DATA",811.8,246,100,1272,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1273,0)
<IEN_ROOT>
"DATA",811.8,246,100,1274,0)
<![CDATA[
"DATA",811.8,246,100,1275,0)
273^1
"DATA",811.8,246,100,1276,0)
274^1
"DATA",811.8,246,100,1277,0)
275^1
"DATA",811.8,246,100,1278,0)
276^1
"DATA",811.8,246,100,1279,0)
277^10
"DATA",811.8,246,100,1280,0)
278^11
"DATA",811.8,246,100,1281,0)
279^12
"DATA",811.8,246,100,1282,0)
280^13
"DATA",811.8,246,100,1283,0)
281^14
"DATA",811.8,246,100,1284,0)
282^15
"DATA",811.8,246,100,1285,0)
283^16
"DATA",811.8,246,100,1286,0)
284^2
"DATA",811.8,246,100,1287,0)
285^20
"DATA",811.8,246,100,1288,0)
286^21
"DATA",811.8,246,100,1289,0)
287^22
"DATA",811.8,246,100,1290,0)
288^23
"DATA",811.8,246,100,1291,0)
289^24
"DATA",811.8,246,100,1292,0)
290^25
"DATA",811.8,246,100,1293,0)
291^26
"DATA",811.8,246,100,1294,0)
292^27
"DATA",811.8,246,100,1295,0)
293^28
"DATA",811.8,246,100,1296,0)
294^29
"DATA",811.8,246,100,1297,0)
295^3
"DATA",811.8,246,100,1298,0)
296^30
"DATA",811.8,246,100,1299,0)
297^31
"DATA",811.8,246,100,1300,0)
298^32
"DATA",811.8,246,100,1301,0)
299^33
"DATA",811.8,246,100,1302,0)
300^34
"DATA",811.8,246,100,1303,0)
301^35
"DATA",811.8,246,100,1304,0)
302^36
"DATA",811.8,246,100,1305,0)
303^37
"DATA",811.8,246,100,1306,0)
304^38
"DATA",811.8,246,100,1307,0)
305^39
"DATA",811.8,246,100,1308,0)
306^4
"DATA",811.8,246,100,1309,0)
307^40
"DATA",811.8,246,100,1310,0)
308^41
"DATA",811.8,246,100,1311,0)
309^42
"DATA",811.8,246,100,1312,0)
310^43
"DATA",811.8,246,100,1313,0)
311^44
"DATA",811.8,246,100,1314,0)
312^45
"DATA",811.8,246,100,1315,0)
313^46
"DATA",811.8,246,100,1316,0)
314^47
"DATA",811.8,246,100,1317,0)
315^48
"DATA",811.8,246,100,1318,0)
316^49
"DATA",811.8,246,100,1319,0)
317^5
"DATA",811.8,246,100,1320,0)
318^50
"DATA",811.8,246,100,1321,0)
319^51
"DATA",811.8,246,100,1322,0)
320^52
"DATA",811.8,246,100,1323,0)
321^53
"DATA",811.8,246,100,1324,0)
322^54
"DATA",811.8,246,100,1325,0)
323^55
"DATA",811.8,246,100,1326,0)
324^6
"DATA",811.8,246,100,1327,0)
325^7
"DATA",811.8,246,100,1328,0)
326^8
"DATA",811.8,246,100,1329,0)
327^9
"DATA",811.8,246,100,1330,0)
328^1
"DATA",811.8,246,100,1331,0)
329^10
"DATA",811.8,246,100,1332,0)
330^11
"DATA",811.8,246,100,1333,0)
331^12
"DATA",811.8,246,100,1334,0)
332^13
"DATA",811.8,246,100,1335,0)
333^14
"DATA",811.8,246,100,1336,0)
334^15
"DATA",811.8,246,100,1337,0)
335^16
"DATA",811.8,246,100,1338,0)
336^17
"DATA",811.8,246,100,1339,0)
337^18
"DATA",811.8,246,100,1340,0)
338^19
"DATA",811.8,246,100,1341,0)
339^2
"DATA",811.8,246,100,1342,0)
340^20
"DATA",811.8,246,100,1343,0)
341^21
"DATA",811.8,246,100,1344,0)
342^22
"DATA",811.8,246,100,1345,0)
343^23
"DATA",811.8,246,100,1346,0)
344^24
"DATA",811.8,246,100,1347,0)
345^25
"DATA",811.8,246,100,1348,0)
346^26
"DATA",811.8,246,100,1349,0)
347^27
"DATA",811.8,246,100,1350,0)
348^28
"DATA",811.8,246,100,1351,0)
349^29
"DATA",811.8,246,100,1352,0)
350^3
"DATA",811.8,246,100,1353,0)
351^30
"DATA",811.8,246,100,1354,0)
352^31
"DATA",811.8,246,100,1355,0)
353^32
"DATA",811.8,246,100,1356,0)
354^33
"DATA",811.8,246,100,1357,0)
355^34
"DATA",811.8,246,100,1358,0)
356^35
"DATA",811.8,246,100,1359,0)
357^36
"DATA",811.8,246,100,1360,0)
358^37
"DATA",811.8,246,100,1361,0)
359^38
"DATA",811.8,246,100,1362,0)
360^39
"DATA",811.8,246,100,1363,0)
361^4
"DATA",811.8,246,100,1364,0)
362^40
"DATA",811.8,246,100,1365,0)
363^41
"DATA",811.8,246,100,1366,0)
364^42
"DATA",811.8,246,100,1367,0)
365^43
"DATA",811.8,246,100,1368,0)
366^44
"DATA",811.8,246,100,1369,0)
367^45
"DATA",811.8,246,100,1370,0)
368^46
"DATA",811.8,246,100,1371,0)
369^47
"DATA",811.8,246,100,1372,0)
370^48
"DATA",811.8,246,100,1373,0)
371^49
"DATA",811.8,246,100,1374,0)
372^5
"DATA",811.8,246,100,1375,0)
373^50
"DATA",811.8,246,100,1376,0)
374^51
"DATA",811.8,246,100,1377,0)
375^6
"DATA",811.8,246,100,1378,0)
376^7
"DATA",811.8,246,100,1379,0)
377^8
"DATA",811.8,246,100,1380,0)
378^9
"DATA",811.8,246,100,1381,0)
379^1
"DATA",811.8,246,100,1382,0)
380^10
"DATA",811.8,246,100,1383,0)
381^11
"DATA",811.8,246,100,1384,0)
382^12
"DATA",811.8,246,100,1385,0)
383^13
"DATA",811.8,246,100,1386,0)
384^14
"DATA",811.8,246,100,1387,0)
385^15
"DATA",811.8,246,100,1388,0)
386^16
"DATA",811.8,246,100,1389,0)
387^17
"DATA",811.8,246,100,1390,0)
388^18
"DATA",811.8,246,100,1391,0)
389^19
"DATA",811.8,246,100,1392,0)
390^2
"DATA",811.8,246,100,1393,0)
391^20
"DATA",811.8,246,100,1394,0)
392^21
"DATA",811.8,246,100,1395,0)
393^22
"DATA",811.8,246,100,1396,0)
394^23
"DATA",811.8,246,100,1397,0)
395^24
"DATA",811.8,246,100,1398,0)
396^25
"DATA",811.8,246,100,1399,0)
397^26
"DATA",811.8,246,100,1400,0)
398^27
"DATA",811.8,246,100,1401,0)
399^28
"DATA",811.8,246,100,1402,0)
400^29
"DATA",811.8,246,100,1403,0)
401^3
"DATA",811.8,246,100,1404,0)
402^30
"DATA",811.8,246,100,1405,0)
403^31
"DATA",811.8,246,100,1406,0)
404^32
"DATA",811.8,246,100,1407,0)
405^33
"DATA",811.8,246,100,1408,0)
406^34
"DATA",811.8,246,100,1409,0)
407^35
"DATA",811.8,246,100,1410,0)
408^36
"DATA",811.8,246,100,1411,0)
409^37
"DATA",811.8,246,100,1412,0)
410^38
"DATA",811.8,246,100,1413,0)
411^39
"DATA",811.8,246,100,1414,0)
412^4
"DATA",811.8,246,100,1415,0)
413^40
"DATA",811.8,246,100,1416,0)
414^41
"DATA",811.8,246,100,1417,0)
415^42
"DATA",811.8,246,100,1418,0)
416^43
"DATA",811.8,246,100,1419,0)
417^44
"DATA",811.8,246,100,1420,0)
418^45
"DATA",811.8,246,100,1421,0)
419^46
"DATA",811.8,246,100,1422,0)
420^47
"DATA",811.8,246,100,1423,0)
421^48
"DATA",811.8,246,100,1424,0)
422^49
"DATA",811.8,246,100,1425,0)
423^5
"DATA",811.8,246,100,1426,0)
424^50
"DATA",811.8,246,100,1427,0)
425^51
"DATA",811.8,246,100,1428,0)
426^6
"DATA",811.8,246,100,1429,0)
427^7
"DATA",811.8,246,100,1430,0)
428^8
"DATA",811.8,246,100,1431,0)
429^9
"DATA",811.8,246,100,1432,0)
]]>
"DATA",811.8,246,100,1433,0)
</IEN_ROOT>
"DATA",811.8,246,100,1434,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1435,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1436,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1437,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1438,0)
<POINT_01>VA-PALLI CONS BLANK SPACE INC IN NOTE (E)</POINT_01>
"DATA",811.8,246,100,1439,0)
<INTERNAL_ENTRY_NUMBER>3435</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1440,0)
<CHECKSUM>2871317390</CHECKSUM>
"DATA",811.8,246,100,1441,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1442,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1443,0)
<![CDATA[
"DATA",811.8,246,100,1444,0)
801.41;+3435,;.01~VA-PALLI CONS BLANK SPACE INC IN NOTE (E)
"DATA",811.8,246,100,1445,0)
801.41;+3435,;4~dialog element
"DATA",811.8,246,100,1446,0)
801.41;+3435,;23~NO
"DATA",811.8,246,100,1447,0)
801.41;+3435,;25~WP-start~1
"DATA",811.8,246,100,1448,0)
{FLD:VA*PALLI BLANK SPACE1}
"DATA",811.8,246,100,1449,0)
801.41;+3435,;51~SUPPRESS
"DATA",811.8,246,100,1450,0)
801.41;+3435,;100~NATIONAL
"DATA",811.8,246,100,1451,0)
801.44;+3436,+3435,;.01~04/17/2014@17:05:57
"DATA",811.8,246,100,1452,0)
801.44;+3436,+3435,;2~WP-start~1
"DATA",811.8,246,100,1453,0)
Exchange Stub
"DATA",811.8,246,100,1454,0)
]]>
"DATA",811.8,246,100,1455,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1456,0)
<IEN_ROOT>
"DATA",811.8,246,100,1457,0)
<![CDATA[
"DATA",811.8,246,100,1458,0)
3436^1
"DATA",811.8,246,100,1459,0)
]]>
"DATA",811.8,246,100,1460,0)
</IEN_ROOT>
"DATA",811.8,246,100,1461,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1462,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1463,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1464,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1465,0)
<POINT_01>PXRM ADD TO PROBLEM LIST</POINT_01>
"DATA",811.8,246,100,1466,0)
<INTERNAL_ENTRY_NUMBER>89</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1467,0)
<CHECKSUM>2348131077</CHECKSUM>
"DATA",811.8,246,100,1468,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1469,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1470,0)
<![CDATA[
"DATA",811.8,246,100,1471,0)
801.41;+89,;.01~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1472,0)
801.41;+89,;4~prompt
"DATA",811.8,246,100,1473,0)
801.41;+89,;14~POV
"DATA",811.8,246,100,1474,0)
801.41;+89,;23~YES
"DATA",811.8,246,100,1475,0)
801.41;+89,;24~Add to Problem List
"DATA",811.8,246,100,1476,0)
801.41;+89,;46~POV_ADD
"DATA",811.8,246,100,1477,0)
801.41;+89,;100~NATIONAL
"DATA",811.8,246,100,1478,0)
801.44;+90,+89,;.01~04/17/2014@17:05:57
"DATA",811.8,246,100,1479,0)
801.44;+90,+89,;2~WP-start~1
"DATA",811.8,246,100,1480,0)
Exchange Stub
"DATA",811.8,246,100,1481,0)
]]>
"DATA",811.8,246,100,1482,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1483,0)
<IEN_ROOT>
"DATA",811.8,246,100,1484,0)
<![CDATA[
"DATA",811.8,246,100,1485,0)
90^1
"DATA",811.8,246,100,1486,0)
]]>
"DATA",811.8,246,100,1487,0)
</IEN_ROOT>
"DATA",811.8,246,100,1488,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1489,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1490,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1491,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1492,0)
<POINT_01>PXRM PRIMARY DIAGNOSIS</POINT_01>
"DATA",811.8,246,100,1493,0)
<INTERNAL_ENTRY_NUMBER>62</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1494,0)
<CHECKSUM>3770470849</CHECKSUM>
"DATA",811.8,246,100,1495,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1496,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1497,0)
<![CDATA[
"DATA",811.8,246,100,1498,0)
801.41;+62,;.01~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1499,0)
801.41;+62,;4~prompt
"DATA",811.8,246,100,1500,0)
801.41;+62,;14~POV
"DATA",811.8,246,100,1501,0)
801.41;+62,;24~Primary Diagnosis
"DATA",811.8,246,100,1502,0)
801.41;+62,;46~POV_PRIM
"DATA",811.8,246,100,1503,0)
801.41;+62,;100~NATIONAL
"DATA",811.8,246,100,1504,0)
801.44;+63,+62,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1505,0)
801.44;+63,+62,;2~WP-start~1
"DATA",811.8,246,100,1506,0)
Exchange Stub
"DATA",811.8,246,100,1507,0)
]]>
"DATA",811.8,246,100,1508,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1509,0)
<IEN_ROOT>
"DATA",811.8,246,100,1510,0)
<![CDATA[
"DATA",811.8,246,100,1511,0)
63^1
"DATA",811.8,246,100,1512,0)
]]>
"DATA",811.8,246,100,1513,0)
</IEN_ROOT>
"DATA",811.8,246,100,1514,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1515,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1516,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1517,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1518,0)
<POINT_01>VA-PALLI CONS INFECTIOUS COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1519,0)
<INTERNAL_ENTRY_NUMBER>3784</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1520,0)
<CHECKSUM>2971307069</CHECKSUM>
"DATA",811.8,246,100,1521,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1522,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1523,0)
<![CDATA[
"DATA",811.8,246,100,1524,0)
801.41;+3784,;.01~VA-PALLI CONS INFECTIOUS COND TAX (E)
"DATA",811.8,246,100,1525,0)
801.41;+3784,;4~dialog element
"DATA",811.8,246,100,1526,0)
801.41;+3784,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1527,0)
801.41;+3784,;15~TX.VA-PALLI CONS INFECTIOUS COND
"DATA",811.8,246,100,1528,0)
801.41;+3784,;23~YES
"DATA",811.8,246,100,1529,0)
801.41;+3784,;25~WP-start~1
"DATA",811.8,246,100,1530,0)
Inf Cond & Syst Inflamm Resp Synd (SIRS) [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1531,0)
801.41;+3784,;100~NATIONAL
"DATA",811.8,246,100,1532,0)
801.41;+3784,;123~ALL
"DATA",811.8,246,100,1533,0)
801.412;+3785,+3784,;.01~2
"DATA",811.8,246,100,1534,0)
801.412;+3785,+3784,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1535,0)
801.412;+3785,+3784,;8~YES
"DATA",811.8,246,100,1536,0)
801.412;+3786,+3784,;.01~3
"DATA",811.8,246,100,1537,0)
801.412;+3786,+3784,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1538,0)
801.412;+3786,+3784,;8~YES
"DATA",811.8,246,100,1539,0)
801.44;+3787,+3784,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1540,0)
801.44;+3787,+3784,;2~WP-start~1
"DATA",811.8,246,100,1541,0)
Exchange Stub
"DATA",811.8,246,100,1542,0)
]]>
"DATA",811.8,246,100,1543,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1544,0)
<IEN_ROOT>
"DATA",811.8,246,100,1545,0)
<![CDATA[
"DATA",811.8,246,100,1546,0)
3785^2
"DATA",811.8,246,100,1547,0)
3786^3
"DATA",811.8,246,100,1548,0)
3787^1
"DATA",811.8,246,100,1549,0)
]]>
"DATA",811.8,246,100,1550,0)
</IEN_ROOT>
"DATA",811.8,246,100,1551,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1552,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1553,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1554,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1555,0)
<POINT_01>VA-PALLI CONS RHEUM/VAS/THROM COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1556,0)
<INTERNAL_ENTRY_NUMBER>3783</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1557,0)
<CHECKSUM>99640960</CHECKSUM>
"DATA",811.8,246,100,1558,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1559,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1560,0)
<![CDATA[
"DATA",811.8,246,100,1561,0)
801.41;+3783,;.01~VA-PALLI CONS RHEUM/VAS/THROM COND TAX (E)
"DATA",811.8,246,100,1562,0)
801.41;+3783,;4~dialog element
"DATA",811.8,246,100,1563,0)
801.41;+3783,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1564,0)
801.41;+3783,;15~TX.VA-PALLI CONS RHEUM/VASC/THROMB
"DATA",811.8,246,100,1565,0)
801.41;+3783,;23~YES
"DATA",811.8,246,100,1566,0)
801.41;+3783,;25~WP-start~2
"DATA",811.8,246,100,1567,0)
Rheumatologic, Vasculitic, & Thromboembolic Conditions [WORKLOAD CAPTURE 
"DATA",811.8,246,100,1568,0)
MODULE]
"DATA",811.8,246,100,1569,0)
801.41;+3783,;100~NATIONAL
"DATA",811.8,246,100,1570,0)
801.41;+3783,;123~ALL
"DATA",811.8,246,100,1571,0)
801.412;+3784,+3783,;.01~2
"DATA",811.8,246,100,1572,0)
801.412;+3784,+3783,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1573,0)
801.412;+3784,+3783,;8~YES
"DATA",811.8,246,100,1574,0)
801.412;+3785,+3783,;.01~3
"DATA",811.8,246,100,1575,0)
801.412;+3785,+3783,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1576,0)
801.412;+3785,+3783,;8~YES
"DATA",811.8,246,100,1577,0)
801.44;+3786,+3783,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1578,0)
801.44;+3786,+3783,;2~WP-start~1
"DATA",811.8,246,100,1579,0)
Exchange Stub
"DATA",811.8,246,100,1580,0)
]]>
"DATA",811.8,246,100,1581,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1582,0)
<IEN_ROOT>
"DATA",811.8,246,100,1583,0)
<![CDATA[
"DATA",811.8,246,100,1584,0)
3784^2
"DATA",811.8,246,100,1585,0)
3785^3
"DATA",811.8,246,100,1586,0)
3786^1
"DATA",811.8,246,100,1587,0)
]]>
"DATA",811.8,246,100,1588,0)
</IEN_ROOT>
"DATA",811.8,246,100,1589,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1590,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1591,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1592,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1593,0)
<POINT_01>VA-PALLI CONS DERMATOLOGIC TAX DX (E)</POINT_01>
"DATA",811.8,246,100,1594,0)
<INTERNAL_ENTRY_NUMBER>3782</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1595,0)
<CHECKSUM>1918849546</CHECKSUM>
"DATA",811.8,246,100,1596,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1597,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1598,0)
<![CDATA[
"DATA",811.8,246,100,1599,0)
801.41;+3782,;.01~VA-PALLI CONS DERMATOLOGIC TAX DX (E)
"DATA",811.8,246,100,1600,0)
801.41;+3782,;4~dialog element
"DATA",811.8,246,100,1601,0)
801.41;+3782,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1602,0)
801.41;+3782,;15~TX.VA-PALLI CONS DERM CONDITION DX
"DATA",811.8,246,100,1603,0)
801.41;+3782,;23~YES
"DATA",811.8,246,100,1604,0)
801.41;+3782,;25~WP-start~1
"DATA",811.8,246,100,1605,0)
Dermatologic Conditions [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1606,0)
801.41;+3782,;100~NATIONAL
"DATA",811.8,246,100,1607,0)
801.41;+3782,;123~ALL
"DATA",811.8,246,100,1608,0)
801.412;+3783,+3782,;.01~2
"DATA",811.8,246,100,1609,0)
801.412;+3783,+3782,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1610,0)
801.412;+3783,+3782,;8~YES
"DATA",811.8,246,100,1611,0)
801.412;+3784,+3782,;.01~3
"DATA",811.8,246,100,1612,0)
801.412;+3784,+3782,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1613,0)
801.412;+3784,+3782,;8~YES
"DATA",811.8,246,100,1614,0)
801.44;+3785,+3782,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1615,0)
801.44;+3785,+3782,;2~WP-start~1
"DATA",811.8,246,100,1616,0)
Exchange Stub
"DATA",811.8,246,100,1617,0)
]]>
"DATA",811.8,246,100,1618,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1619,0)
<IEN_ROOT>
"DATA",811.8,246,100,1620,0)
<![CDATA[
"DATA",811.8,246,100,1621,0)
3783^2
"DATA",811.8,246,100,1622,0)
3784^3
"DATA",811.8,246,100,1623,0)
3785^1
"DATA",811.8,246,100,1624,0)
]]>
"DATA",811.8,246,100,1625,0)
</IEN_ROOT>
"DATA",811.8,246,100,1626,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1627,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1628,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1629,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1630,0)
<POINT_01>VA-PALLI CONS RENAL COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1631,0)
<INTERNAL_ENTRY_NUMBER>3781</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1632,0)
<CHECKSUM>706526160</CHECKSUM>
"DATA",811.8,246,100,1633,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1634,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1635,0)
<![CDATA[
"DATA",811.8,246,100,1636,0)
801.41;+3781,;.01~VA-PALLI CONS RENAL COND TAX (E)
"DATA",811.8,246,100,1637,0)
801.41;+3781,;4~dialog element
"DATA",811.8,246,100,1638,0)
801.41;+3781,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1639,0)
801.41;+3781,;15~TX.VA-PALLI CONS RENAL OTHER THAN CA
"DATA",811.8,246,100,1640,0)
801.41;+3781,;23~YES
"DATA",811.8,246,100,1641,0)
801.41;+3781,;25~WP-start~1
"DATA",811.8,246,100,1642,0)
Renal Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1643,0)
801.41;+3781,;100~NATIONAL
"DATA",811.8,246,100,1644,0)
801.41;+3781,;123~ALL
"DATA",811.8,246,100,1645,0)
801.412;+3782,+3781,;.01~2
"DATA",811.8,246,100,1646,0)
801.412;+3782,+3781,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1647,0)
801.412;+3782,+3781,;8~YES
"DATA",811.8,246,100,1648,0)
801.412;+3783,+3781,;.01~3
"DATA",811.8,246,100,1649,0)
801.412;+3783,+3781,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1650,0)
801.412;+3783,+3781,;8~YES
"DATA",811.8,246,100,1651,0)
801.44;+3784,+3781,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1652,0)
801.44;+3784,+3781,;2~WP-start~1
"DATA",811.8,246,100,1653,0)
Exchange Stub
"DATA",811.8,246,100,1654,0)
]]>
"DATA",811.8,246,100,1655,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1656,0)
<IEN_ROOT>
"DATA",811.8,246,100,1657,0)
<![CDATA[
"DATA",811.8,246,100,1658,0)
3782^2
"DATA",811.8,246,100,1659,0)
3783^3
"DATA",811.8,246,100,1660,0)
3784^1
"DATA",811.8,246,100,1661,0)
]]>
"DATA",811.8,246,100,1662,0)
</IEN_ROOT>
"DATA",811.8,246,100,1663,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1664,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1665,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1666,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1667,0)
<POINT_01>VA-PALLI CONS GI COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1668,0)
<INTERNAL_ENTRY_NUMBER>3780</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1669,0)
<CHECKSUM>2807221012</CHECKSUM>
"DATA",811.8,246,100,1670,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1671,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1672,0)
<![CDATA[
"DATA",811.8,246,100,1673,0)
801.41;+3780,;.01~VA-PALLI CONS GI COND TAX (E)
"DATA",811.8,246,100,1674,0)
801.41;+3780,;4~dialog element
"DATA",811.8,246,100,1675,0)
801.41;+3780,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1676,0)
801.41;+3780,;15~TX.VA-PALLI CONS GI OTHER THAN CA
"DATA",811.8,246,100,1677,0)
801.41;+3780,;23~YES
"DATA",811.8,246,100,1678,0)
801.41;+3780,;25~WP-start~1
"DATA",811.8,246,100,1679,0)
Gastrointestinal Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1680,0)
801.41;+3780,;100~NATIONAL
"DATA",811.8,246,100,1681,0)
801.41;+3780,;123~ALL
"DATA",811.8,246,100,1682,0)
801.412;+3781,+3780,;.01~2
"DATA",811.8,246,100,1683,0)
801.412;+3781,+3780,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1684,0)
801.412;+3781,+3780,;8~YES
"DATA",811.8,246,100,1685,0)
801.412;+3782,+3780,;.01~3
"DATA",811.8,246,100,1686,0)
801.412;+3782,+3780,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1687,0)
801.412;+3782,+3780,;8~YES
"DATA",811.8,246,100,1688,0)
801.44;+3783,+3780,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1689,0)
801.44;+3783,+3780,;2~WP-start~1
"DATA",811.8,246,100,1690,0)
Exchange Stub
"DATA",811.8,246,100,1691,0)
]]>
"DATA",811.8,246,100,1692,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1693,0)
<IEN_ROOT>
"DATA",811.8,246,100,1694,0)
<![CDATA[
"DATA",811.8,246,100,1695,0)
3781^2
"DATA",811.8,246,100,1696,0)
3782^3
"DATA",811.8,246,100,1697,0)
3783^1
"DATA",811.8,246,100,1698,0)
]]>
"DATA",811.8,246,100,1699,0)
</IEN_ROOT>
"DATA",811.8,246,100,1700,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1701,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1702,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1703,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1704,0)
<POINT_01>VA-PALLI CONS CARDIO COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1705,0)
<INTERNAL_ENTRY_NUMBER>3779</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1706,0)
<CHECKSUM>2430307338</CHECKSUM>
"DATA",811.8,246,100,1707,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1708,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1709,0)
<![CDATA[
"DATA",811.8,246,100,1710,0)
801.41;+3779,;.01~VA-PALLI CONS CARDIO COND TAX (E)
"DATA",811.8,246,100,1711,0)
801.41;+3779,;4~dialog element
"DATA",811.8,246,100,1712,0)
801.41;+3779,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1713,0)
801.41;+3779,;15~TX.VA-PALLI CONS CARDIO COND OTHER THAN CA
"DATA",811.8,246,100,1714,0)
801.41;+3779,;23~YES
"DATA",811.8,246,100,1715,0)
801.41;+3779,;25~WP-start~1
"DATA",811.8,246,100,1716,0)
Cardiopulmonary Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1717,0)
801.41;+3779,;100~NATIONAL
"DATA",811.8,246,100,1718,0)
801.41;+3779,;123~ALL
"DATA",811.8,246,100,1719,0)
801.412;+3780,+3779,;.01~2
"DATA",811.8,246,100,1720,0)
801.412;+3780,+3779,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1721,0)
801.412;+3780,+3779,;8~YES
"DATA",811.8,246,100,1722,0)
801.412;+3781,+3779,;.01~3
"DATA",811.8,246,100,1723,0)
801.412;+3781,+3779,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1724,0)
801.412;+3781,+3779,;8~YES
"DATA",811.8,246,100,1725,0)
801.44;+3782,+3779,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1726,0)
801.44;+3782,+3779,;2~WP-start~1
"DATA",811.8,246,100,1727,0)
Exchange Stub
"DATA",811.8,246,100,1728,0)
]]>
"DATA",811.8,246,100,1729,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1730,0)
<IEN_ROOT>
"DATA",811.8,246,100,1731,0)
<![CDATA[
"DATA",811.8,246,100,1732,0)
3780^2
"DATA",811.8,246,100,1733,0)
3781^3
"DATA",811.8,246,100,1734,0)
3782^1
"DATA",811.8,246,100,1735,0)
]]>
"DATA",811.8,246,100,1736,0)
</IEN_ROOT>
"DATA",811.8,246,100,1737,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1738,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1739,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1740,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1741,0)
<POINT_01>VA-PALLI CONS CNS COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1742,0)
<INTERNAL_ENTRY_NUMBER>3778</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1743,0)
<CHECKSUM>2681294627</CHECKSUM>
"DATA",811.8,246,100,1744,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1745,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1746,0)
<![CDATA[
"DATA",811.8,246,100,1747,0)
801.41;+3778,;.01~VA-PALLI CONS CNS COND TAX (E)
"DATA",811.8,246,100,1748,0)
801.41;+3778,;4~dialog element
"DATA",811.8,246,100,1749,0)
801.41;+3778,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1750,0)
801.41;+3778,;15~TX.VA-PALLI CONS CNS COND OTHER THAN CA
"DATA",811.8,246,100,1751,0)
801.41;+3778,;23~YES
"DATA",811.8,246,100,1752,0)
801.41;+3778,;25~WP-start~1
"DATA",811.8,246,100,1753,0)
CNS Conditions Other than Cancer [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1754,0)
801.41;+3778,;100~NATIONAL
"DATA",811.8,246,100,1755,0)
801.41;+3778,;123~ALL
"DATA",811.8,246,100,1756,0)
801.412;+3779,+3778,;.01~2
"DATA",811.8,246,100,1757,0)
801.412;+3779,+3778,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1758,0)
801.412;+3779,+3778,;8~YES
"DATA",811.8,246,100,1759,0)
801.412;+3780,+3778,;.01~3
"DATA",811.8,246,100,1760,0)
801.412;+3780,+3778,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1761,0)
801.412;+3780,+3778,;8~YES
"DATA",811.8,246,100,1762,0)
801.44;+3781,+3778,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1763,0)
801.44;+3781,+3778,;2~WP-start~1
"DATA",811.8,246,100,1764,0)
Exchange Stub
"DATA",811.8,246,100,1765,0)
]]>
"DATA",811.8,246,100,1766,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1767,0)
<IEN_ROOT>
"DATA",811.8,246,100,1768,0)
<![CDATA[
"DATA",811.8,246,100,1769,0)
3779^2
"DATA",811.8,246,100,1770,0)
3780^3
"DATA",811.8,246,100,1771,0)
3781^1
"DATA",811.8,246,100,1772,0)
]]>
"DATA",811.8,246,100,1773,0)
</IEN_ROOT>
"DATA",811.8,246,100,1774,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1775,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1776,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1777,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1778,0)
<POINT_01>VA-PALLI CONS CANCER/HEMA COND TAX (E)</POINT_01>
"DATA",811.8,246,100,1779,0)
<INTERNAL_ENTRY_NUMBER>3777</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1780,0)
<CHECKSUM>3337291570</CHECKSUM>
"DATA",811.8,246,100,1781,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,246,100,1782,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1783,0)
<![CDATA[
"DATA",811.8,246,100,1784,0)
801.41;+3777,;.01~VA-PALLI CONS CANCER/HEMA COND TAX (E)
"DATA",811.8,246,100,1785,0)
801.41;+3777,;4~dialog element
"DATA",811.8,246,100,1786,0)
801.41;+3777,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1787,0)
801.41;+3777,;15~TX.VA-PALLI CONS CANCER/HEMA COND
"DATA",811.8,246,100,1788,0)
801.41;+3777,;23~YES
"DATA",811.8,246,100,1789,0)
801.41;+3777,;25~WP-start~1
"DATA",811.8,246,100,1790,0)
Cancer & Hematologic Conditions [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1791,0)
801.41;+3777,;100~NATIONAL
"DATA",811.8,246,100,1792,0)
801.41;+3777,;123~ALL
"DATA",811.8,246,100,1793,0)
801.412;+3778,+3777,;.01~2
"DATA",811.8,246,100,1794,0)
801.412;+3778,+3777,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,246,100,1795,0)
801.412;+3778,+3777,;8~YES
"DATA",811.8,246,100,1796,0)
801.412;+3779,+3777,;.01~3
"DATA",811.8,246,100,1797,0)
801.412;+3779,+3777,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,246,100,1798,0)
801.412;+3779,+3777,;8~YES
"DATA",811.8,246,100,1799,0)
801.44;+3780,+3777,;.01~04/17/2014@17:05:58
"DATA",811.8,246,100,1800,0)
801.44;+3780,+3777,;2~WP-start~1
"DATA",811.8,246,100,1801,0)
Exchange Stub
"DATA",811.8,246,100,1802,0)
]]>
"DATA",811.8,246,100,1803,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1804,0)
<IEN_ROOT>
"DATA",811.8,246,100,1805,0)
<![CDATA[
"DATA",811.8,246,100,1806,0)
3778^2
"DATA",811.8,246,100,1807,0)
3779^3
"DATA",811.8,246,100,1808,0)
3780^1
"DATA",811.8,246,100,1809,0)
]]>
"DATA",811.8,246,100,1810,0)
</IEN_ROOT>
"DATA",811.8,246,100,1811,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1812,0)
<FILEMAN_FILE>
"DATA",811.8,246,100,1813,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,246,100,1814,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,246,100,1815,0)
<POINT_01>VA-PALLI CONS ENCOUNTER INTRO GP</POINT_01>
"DATA",811.8,246,100,1816,0)
<INTERNAL_ENTRY_NUMBER>3486</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,246,100,1817,0)
<CHECKSUM>1688772548</CHECKSUM>
"DATA",811.8,246,100,1818,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,246,100,1819,0)
<FILEMAN_FDA>
"DATA",811.8,246,100,1820,0)
<![CDATA[
"DATA",811.8,246,100,1821,0)
801.41;+3486,;.01~VA-PALLI CONS ENCOUNTER INTRO GP
"DATA",811.8,246,100,1822,0)
801.41;+3486,;4~dialog group
"DATA",811.8,246,100,1823,0)
801.41;+3486,;7~2
"DATA",811.8,246,100,1824,0)
801.41;+3486,;9~ONE SELECTION ONLY
"DATA",811.8,246,100,1825,0)
801.41;+3486,;13~DONE AT ENCOUNTER
"DATA",811.8,246,100,1826,0)
801.41;+3486,;23~YES
"DATA",811.8,246,100,1827,0)
801.41;+3486,;25~WP-start~6
"DATA",811.8,246,100,1828,0)
For inpatient and outpatient hospice and palliative care consults, this 
"DATA",811.8,246,100,1829,0)
section will populate the encounter form. If the appropriate ICD-9 code 
"DATA",811.8,246,100,1830,0)
is not listed below, enter the diagnosis on the encounter form after you 
"DATA",811.8,246,100,1831,0)
complete the note.
"DATA",811.8,246,100,1832,0)
\\
"DATA",811.8,246,100,1833,0)
\\Primary Palliative Consult Diagnosis    [WORKLOAD CAPTURE MODULE]
"DATA",811.8,246,100,1834,0)
801.41;+3486,;50~SHOW
"DATA",811.8,246,100,1835,0)
801.41;+3486,;51~SUPPRESS
"DATA",811.8,246,100,1836,0)
801.41;+3486,;100~NATIONAL
"DATA",811.8,246,100,1837,0)
801.412;+3487,+3486,;.01~5
"DATA",811.8,246,100,1838,0)
801.412;+3487,+3486,;2~VA-PALLI CONS CANCER/HEMA COND TAX (E)
"DATA",811.8,246,100,1839,0)
801.412;+3488,+3486,;.01~50
"DATA",811.8,246,100,1840,0)
801.412;+3488,+3486,;2~VA-PALLI CONS BLANK SPACE INC IN NOTE (E)
"DATA",811.8,246,100,1841,0)
801.412;+3489,+3486,;.01~10
"DATA",811.8,246,100,1842,0)
801.412;+3489,+3486,;2~VA-PALLI CONS CNS COND TAX (E)
"DATA",811.8,246,100,1843,0)
801.412;+3490,+3486,;.01~15
"DATA",811.8,246,100,1844,0)
801.412;+3490,+3486,;2~VA-PALLI CONS CARDIO COND TAX (E)
"DATA",811.8,246,100,1845,0)
801.412;+3491,+3486,;.01~20
"DATA",811.8,246,100,1846,0)
801.412;+3491,+3486,;2~VA-PALLI CONS GI COND TAX (E)
"DATA",811.8,246,100,1847,0)
801.412;+3492,+3486,;.01~25
"DATA",811.8,246,100,1848,0)
801.412;+3492,+3486,;2~VA-PALLI CONS RENAL COND TAX (E)
"DATA",811.8,246,100,1849,0)
801.412;+3493,+3486,;.01~30
"DATA",811.8,246,100,1850,0)
801.412;+3493,+3486,;2~VA-PALLI CONS DERMATOLOGIC TAX DX (E)
"DATA",811.8,246,100,1851,0)
801.412;+3494,+3486,;.01~35
"DATA",811.8,246,100,1852,0)
801.412;+3494,+3486,;2~VA-PALLI CONS RHEUM/VAS/THROM COND TAX (E)
"DATA",811.8,246,100,1853,0)
801.412;+3495,+3486,;.01~45
"DATA",811.8,246,100,1854,0)
801.412;+3495,+3486,;2~VA-PALLI CONS INFECTIOUS COND TAX (E)
"DATA",811.8,246,100,1855,0)
801.44;+3496,+3486,;.01~04/17/2014@17:05:59
"DATA",811.8,246,100,1856,0)
801.44;+3496,+3486,;2~WP-start~1
"DATA",811.8,246,100,1857,0)
Exchange Stub
"DATA",811.8,246,100,1858,0)
]]>
"DATA",811.8,246,100,1859,0)
</FILEMAN_FDA>
"DATA",811.8,246,100,1860,0)
<IEN_ROOT>
"DATA",811.8,246,100,1861,0)
<![CDATA[
"DATA",811.8,246,100,1862,0)
3487^1
"DATA",811.8,246,100,1863,0)
3488^10
"DATA",811.8,246,100,1864,0)
3489^2
"DATA",811.8,246,100,1865,0)
3490^3
"DATA",811.8,246,100,1866,0)
3491^4
"DATA",811.8,246,100,1867,0)
3492^5
"DATA",811.8,246,100,1868,0)
3493^6
"DATA",811.8,246,100,1869,0)
3494^7
"DATA",811.8,246,100,1870,0)
3495^9
"DATA",811.8,246,100,1871,0)
3496^1
"DATA",811.8,246,100,1872,0)
]]>
"DATA",811.8,246,100,1873,0)
</IEN_ROOT>
"DATA",811.8,246,100,1874,0)
</FILEMAN_FILE>
"DATA",811.8,246,100,1875,0)
<INDEX>
"DATA",811.8,246,100,1876,0)
<NUMBER_OF_COMPONENTS>21</NUMBER_OF_COMPONENTS>
"DATA",811.8,246,100,1877,0)
<COMPONENT>
"DATA",811.8,246,100,1878,0)
<FDA_END>40</FDA_END>
"DATA",811.8,246,100,1879,0)
<FDA_START>24</FDA_START>
"DATA",811.8,246,100,1880,0)
<FILE_START>15</FILE_START>
"DATA",811.8,246,100,1881,0)
</COMPONENT>
"DATA",811.8,246,100,1882,0)
<COMPONENT>
"DATA",811.8,246,100,1883,0)
<FDA_END>137</FDA_END>
"DATA",811.8,246,100,1884,0)
<FDA_START>53</FDA_START>
"DATA",811.8,246,100,1885,0)
<FILE_START>44</FILE_START>
"DATA",811.8,246,100,1886,0)
<IEN_ROOT_END>198</IEN_ROOT_END>
"DATA",811.8,246,100,1887,0)
<IEN_ROOT_START>142</IEN_ROOT_START>
"DATA",811.8,246,100,1888,0)
</COMPONENT>
"DATA",811.8,246,100,1889,0)
<COMPONENT>
"DATA",811.8,246,100,1890,0)
<FDA_END>307</FDA_END>
"DATA",811.8,246,100,1891,0)
<FDA_START>211</FDA_START>
"DATA",811.8,246,100,1892,0)
<FILE_START>202</FILE_START>
"DATA",811.8,246,100,1893,0)
<IEN_ROOT_END>377</IEN_ROOT_END>
"DATA",811.8,246,100,1894,0)
<IEN_ROOT_START>312</IEN_ROOT_START>
"DATA",811.8,246,100,1895,0)
</COMPONENT>
"DATA",811.8,246,100,1896,0)
<COMPONENT>
"DATA",811.8,246,100,1897,0)
<FDA_END>430</FDA_END>
"DATA",811.8,246,100,1898,0)
<FDA_START>390</FDA_START>
"DATA",811.8,246,100,1899,0)
<FILE_START>381</FILE_START>
"DATA",811.8,246,100,1900,0)
<IEN_ROOT_END>458</IEN_ROOT_END>
"DATA",811.8,246,100,1901,0)
<IEN_ROOT_START>435</IEN_ROOT_START>
"DATA",811.8,246,100,1902,0)
</COMPONENT>
"DATA",811.8,246,100,1903,0)
<COMPONENT>
"DATA",811.8,246,100,1904,0)
<FDA_END>503</FDA_END>
"DATA",811.8,246,100,1905,0)
<FDA_START>471</FDA_START>
"DATA",811.8,246,100,1906,0)
<FILE_START>462</FILE_START>
"DATA",811.8,246,100,1907,0)
<IEN_ROOT_END>525</IEN_ROOT_END>
"DATA",811.8,246,100,1908,0)
<IEN_ROOT_START>508</IEN_ROOT_START>
"DATA",811.8,246,100,1909,0)
</COMPONENT>
"DATA",811.8,246,100,1910,0)
<COMPONENT>
"DATA",811.8,246,100,1911,0)
<FDA_END>634</FDA_END>
"DATA",811.8,246,100,1912,0)
<FDA_START>538</FDA_START>
"DATA",811.8,246,100,1913,0)
<FILE_START>529</FILE_START>
"DATA",811.8,246,100,1914,0)
<IEN_ROOT_END>704</IEN_ROOT_END>
"DATA",811.8,246,100,1915,0)
<IEN_ROOT_START>639</IEN_ROOT_START>
"DATA",811.8,246,100,1916,0)
</COMPONENT>
"DATA",811.8,246,100,1917,0)
<COMPONENT>
"DATA",811.8,246,100,1918,0)
<FDA_END>817</FDA_END>
"DATA",811.8,246,100,1919,0)
<FDA_START>717</FDA_START>
"DATA",811.8,246,100,1920,0)
<FILE_START>708</FILE_START>
"DATA",811.8,246,100,1921,0)
<IEN_ROOT_END>890</IEN_ROOT_END>
"DATA",811.8,246,100,1922,0)
<IEN_ROOT_START>822</IEN_ROOT_START>
"DATA",811.8,246,100,1923,0)
</COMPONENT>
"DATA",811.8,246,100,1924,0)
<COMPONENT>
"DATA",811.8,246,100,1925,0)
<FDA_END>983</FDA_END>
"DATA",811.8,246,100,1926,0)
<FDA_START>903</FDA_START>
"DATA",811.8,246,100,1927,0)
<FILE_START>894</FILE_START>
"DATA",811.8,246,100,1928,0)
<IEN_ROOT_END>1041</IEN_ROOT_END>
"DATA",811.8,246,100,1929,0)
<IEN_ROOT_START>988</IEN_ROOT_START>
"DATA",811.8,246,100,1930,0)
</COMPONENT>
"DATA",811.8,246,100,1931,0)
<COMPONENT>
"DATA",811.8,246,100,1932,0)
<FDA_END>1270</FDA_END>
"DATA",811.8,246,100,1933,0)
<FDA_START>1054</FDA_START>
"DATA",811.8,246,100,1934,0)
<FILE_START>1045</FILE_START>
"DATA",811.8,246,100,1935,0)
<IEN_ROOT_END>1431</IEN_ROOT_END>
"DATA",811.8,246,100,1936,0)
<IEN_ROOT_START>1275</IEN_ROOT_START>
"DATA",811.8,246,100,1937,0)
</COMPONENT>
"DATA",811.8,246,100,1938,0)
<COMPONENT>
"DATA",811.8,246,100,1939,0)
<FDA_END>1453</FDA_END>
"DATA",811.8,246,100,1940,0)
<FDA_START>1444</FDA_START>
"DATA",811.8,246,100,1941,0)
<FILE_START>1435</FILE_START>
"DATA",811.8,246,100,1942,0)
<IEN_ROOT_END>1458</IEN_ROOT_END>
"DATA",811.8,246,100,1943,0)
<IEN_ROOT_START>1458</IEN_ROOT_START>
"DATA",811.8,246,100,1944,0)
</COMPONENT>
"DATA",811.8,246,100,1945,0)
<COMPONENT>
"DATA",811.8,246,100,1946,0)
<FDA_END>1480</FDA_END>
"DATA",811.8,246,100,1947,0)
<FDA_START>1471</FDA_START>
"DATA",811.8,246,100,1948,0)
<FILE_START>1462</FILE_START>
"DATA",811.8,246,100,1949,0)
<IEN_ROOT_END>1485</IEN_ROOT_END>
"DATA",811.8,246,100,1950,0)
<IEN_ROOT_START>1485</IEN_ROOT_START>
"DATA",811.8,246,100,1951,0)
</COMPONENT>
"DATA",811.8,246,100,1952,0)
<COMPONENT>
"DATA",811.8,246,100,1953,0)
<FDA_END>1506</FDA_END>
"DATA",811.8,246,100,1954,0)
<FDA_START>1498</FDA_START>
"DATA",811.8,246,100,1955,0)
<FILE_START>1489</FILE_START>
"DATA",811.8,246,100,1956,0)
<IEN_ROOT_END>1511</IEN_ROOT_END>
"DATA",811.8,246,100,1957,0)
<IEN_ROOT_START>1511</IEN_ROOT_START>
"DATA",811.8,246,100,1958,0)
</COMPONENT>
"DATA",811.8,246,100,1959,0)
<COMPONENT>
"DATA",811.8,246,100,1960,0)
<FDA_END>1541</FDA_END>
"DATA",811.8,246,100,1961,0)
<FDA_START>1524</FDA_START>
"DATA",811.8,246,100,1962,0)
<FILE_START>1515</FILE_START>
"DATA",811.8,246,100,1963,0)
<IEN_ROOT_END>1548</IEN_ROOT_END>
"DATA",811.8,246,100,1964,0)
<IEN_ROOT_START>1546</IEN_ROOT_START>
"DATA",811.8,246,100,1965,0)
</COMPONENT>
"DATA",811.8,246,100,1966,0)
<COMPONENT>
"DATA",811.8,246,100,1967,0)
<FDA_END>1579</FDA_END>
"DATA",811.8,246,100,1968,0)
<FDA_START>1561</FDA_START>
"DATA",811.8,246,100,1969,0)
<FILE_START>1552</FILE_START>
"DATA",811.8,246,100,1970,0)
<IEN_ROOT_END>1586</IEN_ROOT_END>
"DATA",811.8,246,100,1971,0)
<IEN_ROOT_START>1584</IEN_ROOT_START>
"DATA",811.8,246,100,1972,0)
</COMPONENT>
"DATA",811.8,246,100,1973,0)
<COMPONENT>
"DATA",811.8,246,100,1974,0)
<FDA_END>1616</FDA_END>
"DATA",811.8,246,100,1975,0)
<FDA_START>1599</FDA_START>
"DATA",811.8,246,100,1976,0)
<FILE_START>1590</FILE_START>
"DATA",811.8,246,100,1977,0)
<IEN_ROOT_END>1623</IEN_ROOT_END>
"DATA",811.8,246,100,1978,0)
<IEN_ROOT_START>1621</IEN_ROOT_START>
"DATA",811.8,246,100,1979,0)
</COMPONENT>
"DATA",811.8,246,100,1980,0)
<COMPONENT>
"DATA",811.8,246,100,1981,0)
<FDA_END>1653</FDA_END>
"DATA",811.8,246,100,1982,0)
<FDA_START>1636</FDA_START>
"DATA",811.8,246,100,1983,0)
<FILE_START>1627</FILE_START>
"DATA",811.8,246,100,1984,0)
<IEN_ROOT_END>1660</IEN_ROOT_END>
"DATA",811.8,246,100,1985,0)
<IEN_ROOT_START>1658</IEN_ROOT_START>
"DATA",811.8,246,100,1986,0)
</COMPONENT>
"DATA",811.8,246,100,1987,0)
<COMPONENT>
"DATA",811.8,246,100,1988,0)
<FDA_END>1690</FDA_END>
"DATA",811.8,246,100,1989,0)
<FDA_START>1673</FDA_START>
"DATA",811.8,246,100,1990,0)
<FILE_START>1664</FILE_START>
"DATA",811.8,246,100,1991,0)
<IEN_ROOT_END>1697</IEN_ROOT_END>
"DATA",811.8,246,100,1992,0)
<IEN_ROOT_START>1695</IEN_ROOT_START>
"DATA",811.8,246,100,1993,0)
</COMPONENT>
"DATA",811.8,246,100,1994,0)
<COMPONENT>
"DATA",811.8,246,100,1995,0)
<FDA_END>1727</FDA_END>
"DATA",811.8,246,100,1996,0)
<FDA_START>1710</FDA_START>
"DATA",811.8,246,100,1997,0)
<FILE_START>1701</FILE_START>
"DATA",811.8,246,100,1998,0)
<IEN_ROOT_END>1734</IEN_ROOT_END>
"DATA",811.8,246,100,1999,0)
<IEN_ROOT_START>1732</IEN_ROOT_START>
"DATA",811.8,246,100,2000,0)
</COMPONENT>
"DATA",811.8,246,100,2001,0)
<COMPONENT>
"DATA",811.8,246,100,2002,0)
<FDA_END>1764</FDA_END>
"DATA",811.8,246,100,2003,0)
<FDA_START>1747</FDA_START>
"DATA",811.8,246,100,2004,0)
<FILE_START>1738</FILE_START>
"DATA",811.8,246,100,2005,0)
<IEN_ROOT_END>1771</IEN_ROOT_END>
"DATA",811.8,246,100,2006,0)
<IEN_ROOT_START>1769</IEN_ROOT_START>
"DATA",811.8,246,100,2007,0)
</COMPONENT>
"DATA",811.8,246,100,2008,0)
<COMPONENT>
"DATA",811.8,246,100,2009,0)
<FDA_END>1801</FDA_END>
"DATA",811.8,246,100,2010,0)
<FDA_START>1784</FDA_START>
"DATA",811.8,246,100,2011,0)
<FILE_START>1775</FILE_START>
"DATA",811.8,246,100,2012,0)
<IEN_ROOT_END>1808</IEN_ROOT_END>
"DATA",811.8,246,100,2013,0)
<IEN_ROOT_START>1806</IEN_ROOT_START>
"DATA",811.8,246,100,2014,0)
</COMPONENT>
"DATA",811.8,246,100,2015,0)
<COMPONENT>
"DATA",811.8,246,100,2016,0)
<FDA_END>1857</FDA_END>
"DATA",811.8,246,100,2017,0)
<FDA_START>1821</FDA_START>
"DATA",811.8,246,100,2018,0)
<FILE_START>1812</FILE_START>
"DATA",811.8,246,100,2019,0)
<IEN_ROOT_END>1871</IEN_ROOT_END>
"DATA",811.8,246,100,2020,0)
<IEN_ROOT_START>1862</IEN_ROOT_START>
"DATA",811.8,246,100,2021,0)
</COMPONENT>
"DATA",811.8,246,100,2022,0)
</INDEX>
"DATA",811.8,246,100,2023,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,246,110,0)
^811.804^9^9
"DATA",811.8,246,110,1,0)
Source:      PULEO,ANTHONY at CAMP MASTER
"DATA",811.8,246,110,2,0)
Date Packed: 04/17/2014@17:05:45
"DATA",811.8,246,110,3,0)
Package Version: 2.0P31
"DATA",811.8,246,110,4,0)

"DATA",811.8,246,110,5,0)
Description:
"DATA",811.8,246,110,6,0)

"DATA",811.8,246,110,7,0)
Keywords:
"DATA",811.8,246,110,8,0)

"DATA",811.8,246,110,9,0)
Components:
"DATA",811.8,246,119)
3
"DATA",811.8,246,120,0)
^811.802A^21^21
"DATA",811.8,246,120,1,0)
TIU TEMPLATE FIELD^8927.1^1
"DATA",811.8,246,120,1,1,0)
^811.8021A^1^1
"DATA",811.8,246,120,1,1,1,0)
VA*PALLI BLANK SPACE1^24^40^^^1^0
"DATA",811.8,246,120,2,0)
REMINDER TAXONOMY^811.2^8
"DATA",811.8,246,120,2,1,0)
^811.8021A^8^8
"DATA",811.8,246,120,2,1,1,0)
VA-PALLI CONS INFECTIOUS COND^53^137^142^198^1^0
"DATA",811.8,246,120,2,1,2,0)
VA-PALLI CONS RHEUM/VASC/THROMB^211^307^312^377^1^0
"DATA",811.8,246,120,2,1,3,0)
VA-PALLI CONS DERM CONDITION DX^390^430^435^458^1^0
"DATA",811.8,246,120,2,1,4,0)
VA-PALLI CONS RENAL OTHER THAN CA^471^503^508^525^1^0
"DATA",811.8,246,120,2,1,5,0)
VA-PALLI CONS GI OTHER THAN CA^538^634^639^704^1^0
"DATA",811.8,246,120,2,1,6,0)
VA-PALLI CONS CARDIO COND OTHER THAN CA^717^817^822^890^1^0
"DATA",811.8,246,120,2,1,7,0)
VA-PALLI CONS CNS COND OTHER THAN CA^903^983^988^1041^1^0
"DATA",811.8,246,120,2,1,8,0)
VA-PALLI CONS CANCER/HEMA COND^1054^1270^1275^1431^1^0
"DATA",811.8,246,120,3,0)
REMINDER DIALOG^801.41^12
"DATA",811.8,246,120,3,1,0)
^811.8021A^12^12
"DATA",811.8,246,120,3,1,1,0)
VA-PALLI CONS BLANK SPACE INC IN NOTE (E)^1444^1453^1458^1458^1^0
"DATA",811.8,246,120,3,1,2,0)
PXRM ADD TO PROBLEM LIST^1471^1480^1485^1485^1^0
"DATA",811.8,246,120,3,1,3,0)
PXRM PRIMARY DIAGNOSIS^1498^1506^1511^1511^1^0
"DATA",811.8,246,120,3,1,4,0)
VA-PALLI CONS INFECTIOUS COND TAX (E)^1524^1541^1546^1548^1^0
"DATA",811.8,246,120,3,1,5,0)
VA-PALLI CONS RHEUM/VAS/THROM COND TAX (E)^1561^1579^1584^1586^1^0
"DATA",811.8,246,120,3,1,6,0)
VA-PALLI CONS DERMATOLOGIC TAX DX (E)^1599^1616^1621^1623^1^0
"DATA",811.8,246,120,3,1,7,0)
VA-PALLI CONS RENAL COND TAX (E)^1636^1653^1658^1660^1^0
"DATA",811.8,246,120,3,1,8,0)
VA-PALLI CONS GI COND TAX (E)^1673^1690^1695^1697^1^0
"DATA",811.8,246,120,3,1,9,0)
VA-PALLI CONS CARDIO COND TAX (E)^1710^1727^1732^1734^1^0
"DATA",811.8,246,120,3,1,10,0)
VA-PALLI CONS CNS COND TAX (E)^1747^1764^1769^1771^1^0
"DATA",811.8,246,120,3,1,11,0)
VA-PALLI CONS CANCER/HEMA COND TAX (E)^1784^1801^1806^1808^1^0
"DATA",811.8,246,120,3,1,12,0)
VA-PALLI CONS ENCOUNTER INTRO GP^1821^1857^1862^1871^1^1
"DATA",811.8,249,0)
PXRM PATCH 26 ECOE UPDATE^PULEO,ANTHONY at CAMP MASTER^3140417.170632
"DATA",811.8,249,100,0)
^811.801^790^790
"DATA",811.8,249,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,249,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,249,100,3,0)
<PACKAGE_VERSION>2.0P31</PACKAGE_VERSION>
"DATA",811.8,249,100,4,0)
<INDEX_AT>731</INDEX_AT>
"DATA",811.8,249,100,5,0)
<SOURCE>
"DATA",811.8,249,100,6,0)
<NAME>PXRM PATCH 26 ECOE UPDATE</NAME>
"DATA",811.8,249,100,7,0)
<USER>PULEO,ANTHONY</USER>
"DATA",811.8,249,100,8,0)
<SITE>CAMP MASTER</SITE>
"DATA",811.8,249,100,9,0)
<DATE_PACKED>04/17/2014@17:06:32</DATE_PACKED>
"DATA",811.8,249,100,10,0)
</SOURCE>
"DATA",811.8,249,100,11,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,249,100,12,0)
]]></DESCRIPTION>
"DATA",811.8,249,100,13,0)
<KEYWORDS>
"DATA",811.8,249,100,14,0)
</KEYWORDS>
"DATA",811.8,249,100,15,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,16,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,249,100,17,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,249,100,18,0)
<POINT_01>VA-ECOE DIAGNOSIS CODES</POINT_01>
"DATA",811.8,249,100,19,0)
<INTERNAL_ENTRY_NUMBER>133</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,20,0)
<CHECKSUM>244257670</CHECKSUM>
"DATA",811.8,249,100,21,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,22,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,23,0)
<![CDATA[
"DATA",811.8,249,100,24,0)
811.2;+133,;.01~VA-ECOE DIAGNOSIS CODES
"DATA",811.8,249,100,25,0)
811.2;+133,;.03~Diagnosis:
"DATA",811.8,249,100,26,0)
811.2;+133,;100~NATIONAL
"DATA",811.8,249,100,27,0)
811.2;+133,;3106~INDIVIDUAL DIALOG FOR EACH DIAGNOSIS CODE
"DATA",811.8,249,100,28,0)
811.2;+133,;3107~Current Visit Diagnosis:
"DATA",811.8,249,100,29,0)
811.2;+133,;3108~Historical Diagnosis:
"DATA",811.8,249,100,30,0)
811.21;+134,+133,;.01~04/17/2014@17:06:40
"DATA",811.8,249,100,31,0)
811.21;+134,+133,;2~WP-start~1
"DATA",811.8,249,100,32,0)
Exchange Stub
"DATA",811.8,249,100,33,0)
811.23;+164,+133,;.01~Copy from ICD range 291.81 to 291.81
"DATA",811.8,249,100,34,0)
811.23;+165,+133,;.01~Copy from ICD range 345.80 to 345.81
"DATA",811.8,249,100,35,0)
811.23;+166,+133,;.01~Copy from ICD range 345.90 to 345.91
"DATA",811.8,249,100,36,0)
811.23;+167,+133,;.01~Copy from ICD range 346.0 to 346.0
"DATA",811.8,249,100,37,0)
811.23;+168,+133,;.01~Copy from ICD range 346.2 to 346.2
"DATA",811.8,249,100,38,0)
811.23;+169,+133,;.01~Copy from ICD range 346.8 to 346.8
"DATA",811.8,249,100,39,0)
811.23;+170,+133,;.01~Copy from ICD range 649.41 to 649.41
"DATA",811.8,249,100,40,0)
811.23;+171,+133,;.01~Copy from ICD range 649.42 to 649.44
"DATA",811.8,249,100,41,0)
811.23;+172,+133,;.01~Copy from ICD range 780.01 to 780.03
"DATA",811.8,249,100,42,0)
811.23;+173,+133,;.01~Copy from ICD range 780.02 to 780.02
"DATA",811.8,249,100,43,0)
811.23;+174,+133,;.01~Copy from ICD range 780.09 to 780.09
"DATA",811.8,249,100,44,0)
811.23;+175,+133,;.01~Copy from ICD range 345.00 to 345.01
"DATA",811.8,249,100,45,0)
811.23;+176,+133,;.01~Copy from ICD range 780.2 to 780.2
"DATA",811.8,249,100,46,0)
811.23;+177,+133,;.01~Copy from ICD range 780.3 to 780.3
"DATA",811.8,249,100,47,0)
811.23;+178,+133,;.01~Copy from ICD range 780.31 to 780.31
"DATA",811.8,249,100,48,0)
811.23;+179,+133,;.01~Copy from ICD range 780.39 to 780.39
"DATA",811.8,249,100,49,0)
811.23;+180,+133,;.01~Copy from ICD range 780.4 to 780.4
"DATA",811.8,249,100,50,0)
811.23;+181,+133,;.01~Copy from ICD range 780.50 to 780.50
"DATA",811.8,249,100,51,0)
811.23;+182,+133,;.01~Copy from ICD range 781.0 to 781.0
"DATA",811.8,249,100,52,0)
811.23;+183,+133,;.01~Copy from ICD range 782.0 to 782.0
"DATA",811.8,249,100,53,0)
811.23;+184,+133,;.01~Copy from ICD range 784.0 to 784.0
"DATA",811.8,249,100,54,0)
811.23;+185,+133,;.01~Copy from ICD range 907.0 to 907.0
"DATA",811.8,249,100,55,0)
811.23;+186,+133,;.01~Copy from ICD range 345.10 to 345.10
"DATA",811.8,249,100,56,0)
811.23;+187,+133,;.01~Copy from ICD range 345.11 to 345.11
"DATA",811.8,249,100,57,0)
811.23;+188,+133,;.01~Copy from ICD range 345.2 to 345.9
"DATA",811.8,249,100,58,0)
811.23;+189,+133,;.01~Copy from ICD range 345.40 to 345.41
"DATA",811.8,249,100,59,0)
811.23;+190,+133,;.01~Copy from ICD range 345.50 to 345.51
"DATA",811.8,249,100,60,0)
811.23;+191,+133,;.01~Copy from ICD range 345.7 to 345.7
"DATA",811.8,249,100,61,0)
811.23;+192,+133,;.01~Copy from ICD range 345.71 to 345.71
"DATA",811.8,249,100,62,0)
811.231;+193,+164,+133,;.01~ICD
"DATA",811.8,249,100,63,0)
811.231;+193,+164,+133,;1~1
"DATA",811.8,249,100,64,0)
811.231;+193,+164,+133,;3~1
"DATA",811.8,249,100,65,0)
811.231;+194,+165,+133,;.01~ICD
"DATA",811.8,249,100,66,0)
811.231;+194,+165,+133,;1~2
"DATA",811.8,249,100,67,0)
811.231;+194,+165,+133,;3~2
"DATA",811.8,249,100,68,0)
811.231;+195,+166,+133,;.01~ICD
"DATA",811.8,249,100,69,0)
811.231;+195,+166,+133,;1~2
"DATA",811.8,249,100,70,0)
811.231;+195,+166,+133,;3~2
"DATA",811.8,249,100,71,0)
811.231;+196,+167,+133,;.01~ICD
"DATA",811.8,249,100,72,0)
811.231;+196,+167,+133,;1~1
"DATA",811.8,249,100,73,0)
811.231;+196,+167,+133,;3~1
"DATA",811.8,249,100,74,0)
811.231;+197,+168,+133,;.01~ICD
"DATA",811.8,249,100,75,0)
811.231;+197,+168,+133,;1~1
"DATA",811.8,249,100,76,0)
811.231;+197,+168,+133,;3~1
"DATA",811.8,249,100,77,0)
811.231;+198,+169,+133,;.01~ICD
"DATA",811.8,249,100,78,0)
811.231;+198,+169,+133,;1~1
"DATA",811.8,249,100,79,0)
811.231;+198,+169,+133,;3~1
"DATA",811.8,249,100,80,0)
811.231;+199,+170,+133,;.01~ICD
"DATA",811.8,249,100,81,0)
811.231;+199,+170,+133,;1~1
"DATA",811.8,249,100,82,0)
811.231;+199,+170,+133,;3~0
"DATA",811.8,249,100,83,0)
811.231;+200,+171,+133,;.01~ICD
"DATA",811.8,249,100,84,0)
811.231;+200,+171,+133,;1~3
"DATA",811.8,249,100,85,0)
811.231;+200,+171,+133,;3~3
"DATA",811.8,249,100,86,0)
811.231;+201,+172,+133,;.01~ICD
"DATA",811.8,249,100,87,0)
811.231;+201,+172,+133,;1~3
"DATA",811.8,249,100,88,0)
811.231;+201,+172,+133,;3~0
"DATA",811.8,249,100,89,0)
811.231;+202,+173,+133,;.01~ICD
"DATA",811.8,249,100,90,0)
811.231;+202,+173,+133,;1~1
"DATA",811.8,249,100,91,0)
811.231;+202,+173,+133,;3~0
"DATA",811.8,249,100,92,0)
811.231;+203,+174,+133,;.01~ICD
"DATA",811.8,249,100,93,0)
811.231;+203,+174,+133,;1~1
"DATA",811.8,249,100,94,0)
811.231;+203,+174,+133,;3~1
"DATA",811.8,249,100,95,0)
811.231;+204,+175,+133,;.01~ICD
"DATA",811.8,249,100,96,0)
811.231;+204,+175,+133,;1~2
"DATA",811.8,249,100,97,0)
811.231;+204,+175,+133,;3~2
"DATA",811.8,249,100,98,0)
811.231;+205,+176,+133,;.01~ICD
"DATA",811.8,249,100,99,0)
811.231;+205,+176,+133,;1~1
"DATA",811.8,249,100,100,0)
811.231;+205,+176,+133,;3~0
"DATA",811.8,249,100,101,0)
811.231;+206,+177,+133,;.01~ICD
"DATA",811.8,249,100,102,0)
811.231;+206,+177,+133,;1~1
"DATA",811.8,249,100,103,0)
811.231;+206,+177,+133,;3~0
"DATA",811.8,249,100,104,0)
811.231;+207,+178,+133,;.01~ICD
"DATA",811.8,249,100,105,0)
811.231;+207,+178,+133,;1~1
"DATA",811.8,249,100,106,0)
811.231;+207,+178,+133,;3~1
"DATA",811.8,249,100,107,0)
811.231;+208,+179,+133,;.01~ICD
"DATA",811.8,249,100,108,0)
811.231;+208,+179,+133,;1~1
"DATA",811.8,249,100,109,0)
811.231;+208,+179,+133,;3~1
"DATA",811.8,249,100,110,0)
811.231;+209,+180,+133,;.01~ICD
"DATA",811.8,249,100,111,0)
811.231;+209,+180,+133,;1~1
"DATA",811.8,249,100,112,0)
811.231;+209,+180,+133,;3~0
"DATA",811.8,249,100,113,0)
811.231;+210,+181,+133,;.01~ICD
"DATA",811.8,249,100,114,0)
811.231;+210,+181,+133,;1~1
"DATA",811.8,249,100,115,0)
811.231;+210,+181,+133,;3~0
"DATA",811.8,249,100,116,0)
811.231;+211,+182,+133,;.01~ICD
"DATA",811.8,249,100,117,0)
811.231;+211,+182,+133,;1~1
"DATA",811.8,249,100,118,0)
811.231;+211,+182,+133,;3~1
"DATA",811.8,249,100,119,0)
811.231;+212,+183,+133,;.01~ICD
"DATA",811.8,249,100,120,0)
811.231;+212,+183,+133,;1~1
"DATA",811.8,249,100,121,0)
811.231;+212,+183,+133,;3~1
"DATA",811.8,249,100,122,0)
811.231;+213,+184,+133,;.01~ICD
"DATA",811.8,249,100,123,0)
811.231;+213,+184,+133,;1~1
"DATA",811.8,249,100,124,0)
811.231;+213,+184,+133,;3~1
"DATA",811.8,249,100,125,0)
811.231;+214,+185,+133,;.01~ICD
"DATA",811.8,249,100,126,0)
811.231;+214,+185,+133,;1~1
"DATA",811.8,249,100,127,0)
811.231;+214,+185,+133,;3~1
"DATA",811.8,249,100,128,0)
811.231;+215,+186,+133,;.01~ICD
"DATA",811.8,249,100,129,0)
811.231;+215,+186,+133,;1~1
"DATA",811.8,249,100,130,0)
811.231;+215,+186,+133,;3~1
"DATA",811.8,249,100,131,0)
811.231;+216,+187,+133,;.01~ICD
"DATA",811.8,249,100,132,0)
811.231;+216,+187,+133,;1~1
"DATA",811.8,249,100,133,0)
811.231;+216,+187,+133,;3~1
"DATA",811.8,249,100,134,0)
811.231;+217,+188,+133,;.01~ICD
"DATA",811.8,249,100,135,0)
811.231;+217,+188,+133,;1~18
"DATA",811.8,249,100,136,0)
811.231;+217,+188,+133,;3~18
"DATA",811.8,249,100,137,0)
811.231;+218,+189,+133,;.01~ICD
"DATA",811.8,249,100,138,0)
811.231;+218,+189,+133,;1~2
"DATA",811.8,249,100,139,0)
811.231;+218,+189,+133,;3~2
"DATA",811.8,249,100,140,0)
811.231;+219,+190,+133,;.01~ICD
"DATA",811.8,249,100,141,0)
811.231;+219,+190,+133,;1~2
"DATA",811.8,249,100,142,0)
811.231;+219,+190,+133,;3~2
"DATA",811.8,249,100,143,0)
811.231;+220,+191,+133,;.01~ICD
"DATA",811.8,249,100,144,0)
811.231;+220,+191,+133,;1~1
"DATA",811.8,249,100,145,0)
811.231;+220,+191,+133,;3~1
"DATA",811.8,249,100,146,0)
811.231;+221,+192,+133,;.01~ICD
"DATA",811.8,249,100,147,0)
811.231;+221,+192,+133,;1~1
"DATA",811.8,249,100,148,0)
811.231;+221,+192,+133,;3~1
"DATA",811.8,249,100,149,0)
811.2312;+260,+193,+164,+133,;.01~291.81
"DATA",811.8,249,100,150,0)
811.2312;+260,+193,+164,+133,;1~YES
"DATA",811.8,249,100,151,0)
811.2312;+261,+194,+165,+133,;.01~345.81
"DATA",811.8,249,100,152,0)
811.2312;+261,+194,+165,+133,;1~YES
"DATA",811.8,249,100,153,0)
811.2312;+262,+195,+166,+133,;.01~345.91
"DATA",811.8,249,100,154,0)
811.2312;+262,+195,+166,+133,;1~YES
"DATA",811.8,249,100,155,0)
811.2312;+263,+196,+167,+133,;.01~346.0
"DATA",811.8,249,100,156,0)
811.2312;+263,+196,+167,+133,;1~YES
"DATA",811.8,249,100,157,0)
811.2312;+264,+197,+168,+133,;.01~346.2
"DATA",811.8,249,100,158,0)
811.2312;+264,+197,+168,+133,;1~YES
"DATA",811.8,249,100,159,0)
811.2312;+265,+198,+169,+133,;.01~346.8
"DATA",811.8,249,100,160,0)
811.2312;+265,+198,+169,+133,;1~YES
"DATA",811.8,249,100,161,0)
811.2312;+266,+199,+170,+133,;.01~649.41
"DATA",811.8,249,100,162,0)
811.2312;+266,+199,+170,+133,;1~NO
"DATA",811.8,249,100,163,0)
811.2312;+267,+200,+171,+133,;.01~649.42
"DATA",811.8,249,100,164,0)
811.2312;+267,+200,+171,+133,;1~YES
"DATA",811.8,249,100,165,0)
811.2312;+268,+201,+172,+133,;.01~780.01
"DATA",811.8,249,100,166,0)
811.2312;+268,+201,+172,+133,;1~NO
"DATA",811.8,249,100,167,0)
811.2312;+269,+202,+173,+133,;.01~780.02
"DATA",811.8,249,100,168,0)
811.2312;+269,+202,+173,+133,;1~NO
"DATA",811.8,249,100,169,0)
811.2312;+270,+203,+174,+133,;.01~780.09
"DATA",811.8,249,100,170,0)
811.2312;+270,+203,+174,+133,;1~YES
"DATA",811.8,249,100,171,0)
811.2312;+271,+204,+175,+133,;.01~345.01
"DATA",811.8,249,100,172,0)
811.2312;+271,+204,+175,+133,;1~YES
"DATA",811.8,249,100,173,0)
811.2312;+272,+205,+176,+133,;.01~780.2
"DATA",811.8,249,100,174,0)
811.2312;+272,+205,+176,+133,;1~NO
"DATA",811.8,249,100,175,0)
811.2312;+273,+206,+177,+133,;.01~780.3
"DATA",811.8,249,100,176,0)
811.2312;+273,+206,+177,+133,;1~NO
"DATA",811.8,249,100,177,0)
811.2312;+274,+207,+178,+133,;.01~780.31
"DATA",811.8,249,100,178,0)
811.2312;+274,+207,+178,+133,;1~YES
"DATA",811.8,249,100,179,0)
811.2312;+275,+208,+179,+133,;.01~780.39
"DATA",811.8,249,100,180,0)
811.2312;+275,+208,+179,+133,;1~YES
"DATA",811.8,249,100,181,0)
811.2312;+276,+209,+180,+133,;.01~780.4
"DATA",811.8,249,100,182,0)
811.2312;+276,+209,+180,+133,;1~NO
"DATA",811.8,249,100,183,0)
811.2312;+277,+210,+181,+133,;.01~780.50
"DATA",811.8,249,100,184,0)
811.2312;+277,+210,+181,+133,;1~NO
"DATA",811.8,249,100,185,0)
811.2312;+278,+211,+182,+133,;.01~781.0
"DATA",811.8,249,100,186,0)
811.2312;+278,+211,+182,+133,;1~YES
"DATA",811.8,249,100,187,0)
811.2312;+279,+212,+183,+133,;.01~782.0
"DATA",811.8,249,100,188,0)
811.2312;+279,+212,+183,+133,;1~YES
"DATA",811.8,249,100,189,0)
811.2312;+280,+213,+184,+133,;.01~784.0
"DATA",811.8,249,100,190,0)
811.2312;+280,+213,+184,+133,;1~YES
"DATA",811.8,249,100,191,0)
811.2312;+281,+214,+185,+133,;.01~907.0
"DATA",811.8,249,100,192,0)
811.2312;+281,+214,+185,+133,;1~YES
"DATA",811.8,249,100,193,0)
811.2312;+282,+215,+186,+133,;.01~345.10
"DATA",811.8,249,100,194,0)
811.2312;+282,+215,+186,+133,;1~YES
"DATA",811.8,249,100,195,0)
811.2312;+283,+216,+187,+133,;.01~345.11
"DATA",811.8,249,100,196,0)
811.2312;+283,+216,+187,+133,;1~YES
"DATA",811.8,249,100,197,0)
811.2312;+284,+217,+188,+133,;.01~345.2
"DATA",811.8,249,100,198,0)
811.2312;+284,+217,+188,+133,;1~YES
"DATA",811.8,249,100,199,0)
811.2312;+285,+218,+189,+133,;.01~345.41
"DATA",811.8,249,100,200,0)
811.2312;+285,+218,+189,+133,;1~YES
"DATA",811.8,249,100,201,0)
811.2312;+286,+219,+190,+133,;.01~345.51
"DATA",811.8,249,100,202,0)
811.2312;+286,+219,+190,+133,;1~YES
"DATA",811.8,249,100,203,0)
811.2312;+287,+220,+191,+133,;.01~345.7
"DATA",811.8,249,100,204,0)
811.2312;+287,+220,+191,+133,;1~YES
"DATA",811.8,249,100,205,0)
811.2312;+288,+221,+192,+133,;.01~345.71
"DATA",811.8,249,100,206,0)
811.2312;+288,+221,+192,+133,;1~YES
"DATA",811.8,249,100,207,0)
811.2312;+289,+217,+188,+133,;.01~345.71
"DATA",811.8,249,100,208,0)
811.2312;+289,+217,+188,+133,;1~YES
"DATA",811.8,249,100,209,0)
811.2312;+290,+217,+188,+133,;.01~345.8
"DATA",811.8,249,100,210,0)
811.2312;+290,+217,+188,+133,;1~YES
"DATA",811.8,249,100,211,0)
811.2312;+291,+217,+188,+133,;.01~345.81
"DATA",811.8,249,100,212,0)
811.2312;+291,+217,+188,+133,;1~YES
"DATA",811.8,249,100,213,0)
811.2312;+292,+217,+188,+133,;.01~345.9
"DATA",811.8,249,100,214,0)
811.2312;+292,+217,+188,+133,;1~YES
"DATA",811.8,249,100,215,0)
811.2312;+293,+217,+188,+133,;.01~345.40
"DATA",811.8,249,100,216,0)
811.2312;+293,+217,+188,+133,;1~YES
"DATA",811.8,249,100,217,0)
811.2312;+294,+217,+188,+133,;.01~345.50
"DATA",811.8,249,100,218,0)
811.2312;+294,+217,+188,+133,;1~YES
"DATA",811.8,249,100,219,0)
811.2312;+295,+217,+188,+133,;.01~345.60
"DATA",811.8,249,100,220,0)
811.2312;+295,+217,+188,+133,;1~YES
"DATA",811.8,249,100,221,0)
811.2312;+296,+217,+188,+133,;.01~345.70
"DATA",811.8,249,100,222,0)
811.2312;+296,+217,+188,+133,;1~YES
"DATA",811.8,249,100,223,0)
811.2312;+297,+217,+188,+133,;.01~345.80
"DATA",811.8,249,100,224,0)
811.2312;+297,+217,+188,+133,;1~YES
"DATA",811.8,249,100,225,0)
811.2312;+298,+194,+165,+133,;.01~345.80
"DATA",811.8,249,100,226,0)
811.2312;+298,+194,+165,+133,;1~YES
"DATA",811.8,249,100,227,0)
811.2312;+299,+195,+166,+133,;.01~345.90
"DATA",811.8,249,100,228,0)
811.2312;+299,+195,+166,+133,;1~YES
"DATA",811.8,249,100,229,0)
811.2312;+300,+200,+171,+133,;.01~649.43
"DATA",811.8,249,100,230,0)
811.2312;+300,+200,+171,+133,;1~YES
"DATA",811.8,249,100,231,0)
811.2312;+301,+201,+172,+133,;.01~780.02
"DATA",811.8,249,100,232,0)
811.2312;+301,+201,+172,+133,;1~NO
"DATA",811.8,249,100,233,0)
811.2312;+302,+204,+175,+133,;.01~345.00
"DATA",811.8,249,100,234,0)
811.2312;+302,+204,+175,+133,;1~YES
"DATA",811.8,249,100,235,0)
811.2312;+303,+217,+188,+133,;.01~345.3
"DATA",811.8,249,100,236,0)
811.2312;+303,+217,+188,+133,;1~YES
"DATA",811.8,249,100,237,0)
811.2312;+304,+218,+189,+133,;.01~345.40
"DATA",811.8,249,100,238,0)
811.2312;+304,+218,+189,+133,;1~YES
"DATA",811.8,249,100,239,0)
811.2312;+305,+219,+190,+133,;.01~345.50
"DATA",811.8,249,100,240,0)
811.2312;+305,+219,+190,+133,;1~YES
"DATA",811.8,249,100,241,0)
811.2312;+306,+200,+171,+133,;.01~649.44
"DATA",811.8,249,100,242,0)
811.2312;+306,+200,+171,+133,;1~YES
"DATA",811.8,249,100,243,0)
811.2312;+307,+201,+172,+133,;.01~780.03
"DATA",811.8,249,100,244,0)
811.2312;+307,+201,+172,+133,;1~NO
"DATA",811.8,249,100,245,0)
811.2312;+308,+217,+188,+133,;.01~345.4
"DATA",811.8,249,100,246,0)
811.2312;+308,+217,+188,+133,;1~YES
"DATA",811.8,249,100,247,0)
811.2312;+309,+217,+188,+133,;.01~345.41
"DATA",811.8,249,100,248,0)
811.2312;+309,+217,+188,+133,;1~YES
"DATA",811.8,249,100,249,0)
811.2312;+310,+217,+188,+133,;.01~345.5
"DATA",811.8,249,100,250,0)
811.2312;+310,+217,+188,+133,;1~YES
"DATA",811.8,249,100,251,0)
811.2312;+311,+217,+188,+133,;.01~345.51
"DATA",811.8,249,100,252,0)
811.2312;+311,+217,+188,+133,;1~YES
"DATA",811.8,249,100,253,0)
811.2312;+312,+217,+188,+133,;.01~345.6
"DATA",811.8,249,100,254,0)
811.2312;+312,+217,+188,+133,;1~YES
"DATA",811.8,249,100,255,0)
811.2312;+313,+217,+188,+133,;.01~345.61
"DATA",811.8,249,100,256,0)
811.2312;+313,+217,+188,+133,;1~YES
"DATA",811.8,249,100,257,0)
811.2312;+314,+217,+188,+133,;.01~345.7
"DATA",811.8,249,100,258,0)
811.2312;+314,+217,+188,+133,;1~YES
"DATA",811.8,249,100,259,0)
811.24;+315,+133,;.01~345.00
"DATA",811.8,249,100,260,0)
811.24;+315,+133,;1~ICD
"DATA",811.8,249,100,261,0)
811.24;+316,+133,;.01~345.9
"DATA",811.8,249,100,262,0)
811.24;+316,+133,;1~ICD
"DATA",811.8,249,100,263,0)
811.24;+317,+133,;.01~345.40
"DATA",811.8,249,100,264,0)
811.24;+317,+133,;1~ICD
"DATA",811.8,249,100,265,0)
811.24;+318,+133,;.01~345.50
"DATA",811.8,249,100,266,0)
811.24;+318,+133,;1~ICD
"DATA",811.8,249,100,267,0)
811.24;+319,+133,;.01~345.60
"DATA",811.8,249,100,268,0)
811.24;+319,+133,;1~ICD
"DATA",811.8,249,100,269,0)
811.24;+320,+133,;.01~345.70
"DATA",811.8,249,100,270,0)
811.24;+320,+133,;1~ICD
"DATA",811.8,249,100,271,0)
811.24;+321,+133,;.01~345.80
"DATA",811.8,249,100,272,0)
811.24;+321,+133,;1~ICD
"DATA",811.8,249,100,273,0)
811.24;+322,+133,;.01~345.2
"DATA",811.8,249,100,274,0)
811.24;+322,+133,;1~ICD
"DATA",811.8,249,100,275,0)
811.24;+323,+133,;.01~345.3
"DATA",811.8,249,100,276,0)
811.24;+323,+133,;1~ICD
"DATA",811.8,249,100,277,0)
811.24;+324,+133,;.01~345.4
"DATA",811.8,249,100,278,0)
811.24;+324,+133,;1~ICD
"DATA",811.8,249,100,279,0)
811.24;+325,+133,;.01~345.90
"DATA",811.8,249,100,280,0)
811.24;+325,+133,;1~ICD
"DATA",811.8,249,100,281,0)
811.24;+326,+133,;.01~345.5
"DATA",811.8,249,100,282,0)
811.24;+326,+133,;1~ICD
"DATA",811.8,249,100,283,0)
811.24;+327,+133,;.01~649.43
"DATA",811.8,249,100,284,0)
811.24;+327,+133,;1~ICD
"DATA",811.8,249,100,285,0)
811.24;+328,+133,;.01~649.44
"DATA",811.8,249,100,286,0)
811.24;+328,+133,;1~ICD
"DATA",811.8,249,100,287,0)
811.24;+329,+133,;.01~345.51
"DATA",811.8,249,100,288,0)
811.24;+329,+133,;1~ICD
"DATA",811.8,249,100,289,0)
811.24;+330,+133,;.01~345.6
"DATA",811.8,249,100,290,0)
811.24;+330,+133,;1~ICD
"DATA",811.8,249,100,291,0)
811.24;+331,+133,;.01~345.61
"DATA",811.8,249,100,292,0)
811.24;+331,+133,;1~ICD
"DATA",811.8,249,100,293,0)
811.24;+332,+133,;.01~345.7
"DATA",811.8,249,100,294,0)
811.24;+332,+133,;1~ICD
"DATA",811.8,249,100,295,0)
811.24;+333,+133,;.01~345.71
"DATA",811.8,249,100,296,0)
811.24;+333,+133,;1~ICD
"DATA",811.8,249,100,297,0)
811.24;+334,+133,;.01~345.8
"DATA",811.8,249,100,298,0)
811.24;+334,+133,;1~ICD
"DATA",811.8,249,100,299,0)
811.24;+335,+133,;.01~345.81
"DATA",811.8,249,100,300,0)
811.24;+335,+133,;1~ICD
"DATA",811.8,249,100,301,0)
]]>
"DATA",811.8,249,100,302,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,303,0)
<IEN_ROOT>
"DATA",811.8,249,100,304,0)
<![CDATA[
"DATA",811.8,249,100,305,0)
134^1
"DATA",811.8,249,100,306,0)
135^1
"DATA",811.8,249,100,307,0)
136^10
"DATA",811.8,249,100,308,0)
137^11
"DATA",811.8,249,100,309,0)
138^12
"DATA",811.8,249,100,310,0)
139^13
"DATA",811.8,249,100,311,0)
140^14
"DATA",811.8,249,100,312,0)
141^15
"DATA",811.8,249,100,313,0)
142^16
"DATA",811.8,249,100,314,0)
143^17
"DATA",811.8,249,100,315,0)
144^18
"DATA",811.8,249,100,316,0)
145^19
"DATA",811.8,249,100,317,0)
146^2
"DATA",811.8,249,100,318,0)
147^20
"DATA",811.8,249,100,319,0)
148^21
"DATA",811.8,249,100,320,0)
149^22
"DATA",811.8,249,100,321,0)
150^23
"DATA",811.8,249,100,322,0)
151^24
"DATA",811.8,249,100,323,0)
152^25
"DATA",811.8,249,100,324,0)
153^26
"DATA",811.8,249,100,325,0)
154^27
"DATA",811.8,249,100,326,0)
155^28
"DATA",811.8,249,100,327,0)
156^29
"DATA",811.8,249,100,328,0)
157^3
"DATA",811.8,249,100,329,0)
158^30
"DATA",811.8,249,100,330,0)
159^4
"DATA",811.8,249,100,331,0)
160^5
"DATA",811.8,249,100,332,0)
161^7
"DATA",811.8,249,100,333,0)
162^8
"DATA",811.8,249,100,334,0)
163^9
"DATA",811.8,249,100,335,0)
164^1
"DATA",811.8,249,100,336,0)
165^10
"DATA",811.8,249,100,337,0)
166^11
"DATA",811.8,249,100,338,0)
167^12
"DATA",811.8,249,100,339,0)
168^13
"DATA",811.8,249,100,340,0)
169^14
"DATA",811.8,249,100,341,0)
170^15
"DATA",811.8,249,100,342,0)
171^16
"DATA",811.8,249,100,343,0)
172^17
"DATA",811.8,249,100,344,0)
173^18
"DATA",811.8,249,100,345,0)
174^19
"DATA",811.8,249,100,346,0)
175^2
"DATA",811.8,249,100,347,0)
176^20
"DATA",811.8,249,100,348,0)
177^21
"DATA",811.8,249,100,349,0)
178^22
"DATA",811.8,249,100,350,0)
179^23
"DATA",811.8,249,100,351,0)
180^24
"DATA",811.8,249,100,352,0)
181^25
"DATA",811.8,249,100,353,0)
182^26
"DATA",811.8,249,100,354,0)
183^27
"DATA",811.8,249,100,355,0)
184^28
"DATA",811.8,249,100,356,0)
185^29
"DATA",811.8,249,100,357,0)
186^3
"DATA",811.8,249,100,358,0)
187^4
"DATA",811.8,249,100,359,0)
188^5
"DATA",811.8,249,100,360,0)
189^6
"DATA",811.8,249,100,361,0)
190^7
"DATA",811.8,249,100,362,0)
191^8
"DATA",811.8,249,100,363,0)
192^9
"DATA",811.8,249,100,364,0)
193^1
"DATA",811.8,249,100,365,0)
194^1
"DATA",811.8,249,100,366,0)
195^1
"DATA",811.8,249,100,367,0)
196^1
"DATA",811.8,249,100,368,0)
197^1
"DATA",811.8,249,100,369,0)
198^1
"DATA",811.8,249,100,370,0)
199^1
"DATA",811.8,249,100,371,0)
200^1
"DATA",811.8,249,100,372,0)
201^1
"DATA",811.8,249,100,373,0)
202^1
"DATA",811.8,249,100,374,0)
203^1
"DATA",811.8,249,100,375,0)
204^1
"DATA",811.8,249,100,376,0)
205^1
"DATA",811.8,249,100,377,0)
206^1
"DATA",811.8,249,100,378,0)
207^1
"DATA",811.8,249,100,379,0)
208^1
"DATA",811.8,249,100,380,0)
209^1
"DATA",811.8,249,100,381,0)
210^1
"DATA",811.8,249,100,382,0)
211^1
"DATA",811.8,249,100,383,0)
212^1
"DATA",811.8,249,100,384,0)
213^1
"DATA",811.8,249,100,385,0)
214^1
"DATA",811.8,249,100,386,0)
215^1
"DATA",811.8,249,100,387,0)
216^1
"DATA",811.8,249,100,388,0)
217^1
"DATA",811.8,249,100,389,0)
218^1
"DATA",811.8,249,100,390,0)
219^1
"DATA",811.8,249,100,391,0)
220^1
"DATA",811.8,249,100,392,0)
221^1
"DATA",811.8,249,100,393,0)
222^1
"DATA",811.8,249,100,394,0)
223^10
"DATA",811.8,249,100,395,0)
224^11
"DATA",811.8,249,100,396,0)
225^12
"DATA",811.8,249,100,397,0)
226^13
"DATA",811.8,249,100,398,0)
227^14
"DATA",811.8,249,100,399,0)
228^15
"DATA",811.8,249,100,400,0)
229^16
"DATA",811.8,249,100,401,0)
230^17
"DATA",811.8,249,100,402,0)
231^18
"DATA",811.8,249,100,403,0)
232^19
"DATA",811.8,249,100,404,0)
233^2
"DATA",811.8,249,100,405,0)
234^20
"DATA",811.8,249,100,406,0)
235^21
"DATA",811.8,249,100,407,0)
236^22
"DATA",811.8,249,100,408,0)
237^23
"DATA",811.8,249,100,409,0)
238^24
"DATA",811.8,249,100,410,0)
239^25
"DATA",811.8,249,100,411,0)
240^26
"DATA",811.8,249,100,412,0)
241^27
"DATA",811.8,249,100,413,0)
242^28
"DATA",811.8,249,100,414,0)
243^29
"DATA",811.8,249,100,415,0)
244^3
"DATA",811.8,249,100,416,0)
245^30
"DATA",811.8,249,100,417,0)
246^31
"DATA",811.8,249,100,418,0)
247^32
"DATA",811.8,249,100,419,0)
248^33
"DATA",811.8,249,100,420,0)
249^34
"DATA",811.8,249,100,421,0)
250^35
"DATA",811.8,249,100,422,0)
251^36
"DATA",811.8,249,100,423,0)
252^37
"DATA",811.8,249,100,424,0)
253^38
"DATA",811.8,249,100,425,0)
254^4
"DATA",811.8,249,100,426,0)
255^5
"DATA",811.8,249,100,427,0)
256^6
"DATA",811.8,249,100,428,0)
257^7
"DATA",811.8,249,100,429,0)
258^8
"DATA",811.8,249,100,430,0)
259^9
"DATA",811.8,249,100,431,0)
260^1
"DATA",811.8,249,100,432,0)
261^1
"DATA",811.8,249,100,433,0)
262^1
"DATA",811.8,249,100,434,0)
263^1
"DATA",811.8,249,100,435,0)
264^1
"DATA",811.8,249,100,436,0)
265^1
"DATA",811.8,249,100,437,0)
266^1
"DATA",811.8,249,100,438,0)
267^1
"DATA",811.8,249,100,439,0)
268^1
"DATA",811.8,249,100,440,0)
269^1
"DATA",811.8,249,100,441,0)
270^1
"DATA",811.8,249,100,442,0)
271^1
"DATA",811.8,249,100,443,0)
272^1
"DATA",811.8,249,100,444,0)
273^1
"DATA",811.8,249,100,445,0)
274^1
"DATA",811.8,249,100,446,0)
275^1
"DATA",811.8,249,100,447,0)
276^1
"DATA",811.8,249,100,448,0)
277^1
"DATA",811.8,249,100,449,0)
278^1
"DATA",811.8,249,100,450,0)
279^1
"DATA",811.8,249,100,451,0)
280^1
"DATA",811.8,249,100,452,0)
281^1
"DATA",811.8,249,100,453,0)
282^1
"DATA",811.8,249,100,454,0)
283^1
"DATA",811.8,249,100,455,0)
284^1
"DATA",811.8,249,100,456,0)
285^1
"DATA",811.8,249,100,457,0)
286^1
"DATA",811.8,249,100,458,0)
287^1
"DATA",811.8,249,100,459,0)
288^1
"DATA",811.8,249,100,460,0)
289^10
"DATA",811.8,249,100,461,0)
290^11
"DATA",811.8,249,100,462,0)
291^12
"DATA",811.8,249,100,463,0)
292^13
"DATA",811.8,249,100,464,0)
293^14
"DATA",811.8,249,100,465,0)
294^15
"DATA",811.8,249,100,466,0)
295^16
"DATA",811.8,249,100,467,0)
296^17
"DATA",811.8,249,100,468,0)
297^18
"DATA",811.8,249,100,469,0)
298^2
"DATA",811.8,249,100,470,0)
299^2
"DATA",811.8,249,100,471,0)
300^2
"DATA",811.8,249,100,472,0)
301^2
"DATA",811.8,249,100,473,0)
302^2
"DATA",811.8,249,100,474,0)
303^2
"DATA",811.8,249,100,475,0)
304^2
"DATA",811.8,249,100,476,0)
305^2
"DATA",811.8,249,100,477,0)
306^3
"DATA",811.8,249,100,478,0)
307^3
"DATA",811.8,249,100,479,0)
308^3
"DATA",811.8,249,100,480,0)
309^4
"DATA",811.8,249,100,481,0)
310^5
"DATA",811.8,249,100,482,0)
311^6
"DATA",811.8,249,100,483,0)
312^7
"DATA",811.8,249,100,484,0)
313^8
"DATA",811.8,249,100,485,0)
314^9
"DATA",811.8,249,100,486,0)
315^1
"DATA",811.8,249,100,487,0)
316^10
"DATA",811.8,249,100,488,0)
317^11
"DATA",811.8,249,100,489,0)
318^12
"DATA",811.8,249,100,490,0)
319^13
"DATA",811.8,249,100,491,0)
320^14
"DATA",811.8,249,100,492,0)
321^15
"DATA",811.8,249,100,493,0)
322^16
"DATA",811.8,249,100,494,0)
323^17
"DATA",811.8,249,100,495,0)
324^18
"DATA",811.8,249,100,496,0)
325^19
"DATA",811.8,249,100,497,0)
326^2
"DATA",811.8,249,100,498,0)
327^20
"DATA",811.8,249,100,499,0)
328^21
"DATA",811.8,249,100,500,0)
329^3
"DATA",811.8,249,100,501,0)
330^4
"DATA",811.8,249,100,502,0)
331^5
"DATA",811.8,249,100,503,0)
332^6
"DATA",811.8,249,100,504,0)
333^7
"DATA",811.8,249,100,505,0)
334^8
"DATA",811.8,249,100,506,0)
335^9
"DATA",811.8,249,100,507,0)
]]>
"DATA",811.8,249,100,508,0)
</IEN_ROOT>
"DATA",811.8,249,100,509,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,510,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,511,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,512,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,513,0)
<POINT_01>PXRM ADD TO PROBLEM LIST</POINT_01>
"DATA",811.8,249,100,514,0)
<INTERNAL_ENTRY_NUMBER>89</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,515,0)
<CHECKSUM>2348131077</CHECKSUM>
"DATA",811.8,249,100,516,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,517,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,518,0)
<![CDATA[
"DATA",811.8,249,100,519,0)
801.41;+89,;.01~PXRM ADD TO PROBLEM LIST
"DATA",811.8,249,100,520,0)
801.41;+89,;4~prompt
"DATA",811.8,249,100,521,0)
801.41;+89,;14~POV
"DATA",811.8,249,100,522,0)
801.41;+89,;23~YES
"DATA",811.8,249,100,523,0)
801.41;+89,;24~Add to Problem List
"DATA",811.8,249,100,524,0)
801.41;+89,;46~POV_ADD
"DATA",811.8,249,100,525,0)
801.41;+89,;100~NATIONAL
"DATA",811.8,249,100,526,0)
801.44;+90,+89,;.01~04/17/2014@17:06:41
"DATA",811.8,249,100,527,0)
801.44;+90,+89,;2~WP-start~1
"DATA",811.8,249,100,528,0)
Exchange Stub
"DATA",811.8,249,100,529,0)
]]>
"DATA",811.8,249,100,530,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,531,0)
<IEN_ROOT>
"DATA",811.8,249,100,532,0)
<![CDATA[
"DATA",811.8,249,100,533,0)
90^1
"DATA",811.8,249,100,534,0)
]]>
"DATA",811.8,249,100,535,0)
</IEN_ROOT>
"DATA",811.8,249,100,536,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,537,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,538,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,539,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,540,0)
<POINT_01>PXRM PRIMARY DIAGNOSIS</POINT_01>
"DATA",811.8,249,100,541,0)
<INTERNAL_ENTRY_NUMBER>62</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,542,0)
<CHECKSUM>3770470849</CHECKSUM>
"DATA",811.8,249,100,543,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,544,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,545,0)
<![CDATA[
"DATA",811.8,249,100,546,0)
801.41;+62,;.01~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,249,100,547,0)
801.41;+62,;4~prompt
"DATA",811.8,249,100,548,0)
801.41;+62,;14~POV
"DATA",811.8,249,100,549,0)
801.41;+62,;24~Primary Diagnosis
"DATA",811.8,249,100,550,0)
801.41;+62,;46~POV_PRIM
"DATA",811.8,249,100,551,0)
801.41;+62,;100~NATIONAL
"DATA",811.8,249,100,552,0)
801.44;+63,+62,;.01~04/17/2014@17:06:41
"DATA",811.8,249,100,553,0)
801.44;+63,+62,;2~WP-start~1
"DATA",811.8,249,100,554,0)
Exchange Stub
"DATA",811.8,249,100,555,0)
]]>
"DATA",811.8,249,100,556,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,557,0)
<IEN_ROOT>
"DATA",811.8,249,100,558,0)
<![CDATA[
"DATA",811.8,249,100,559,0)
63^1
"DATA",811.8,249,100,560,0)
]]>
"DATA",811.8,249,100,561,0)
</IEN_ROOT>
"DATA",811.8,249,100,562,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,563,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,564,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,565,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,566,0)
<POINT_01>PXRM COMMENT</POINT_01>
"DATA",811.8,249,100,567,0)
<INTERNAL_ENTRY_NUMBER>1</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,568,0)
<CHECKSUM>3865933290</CHECKSUM>
"DATA",811.8,249,100,569,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,570,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,571,0)
<![CDATA[
"DATA",811.8,249,100,572,0)
801.41;+1,;.01~PXRM COMMENT
"DATA",811.8,249,100,573,0)
801.41;+1,;4~prompt
"DATA",811.8,249,100,574,0)
801.41;+1,;24~Comment:
"DATA",811.8,249,100,575,0)
801.41;+1,;46~COM
"DATA",811.8,249,100,576,0)
801.41;+1,;100~NATIONAL
"DATA",811.8,249,100,577,0)
801.44;+2,+1,;.01~04/17/2014@17:06:42
"DATA",811.8,249,100,578,0)
801.44;+2,+1,;2~WP-start~1
"DATA",811.8,249,100,579,0)
Exchange Stub
"DATA",811.8,249,100,580,0)
]]>
"DATA",811.8,249,100,581,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,582,0)
<IEN_ROOT>
"DATA",811.8,249,100,583,0)
<![CDATA[
"DATA",811.8,249,100,584,0)
2^1
"DATA",811.8,249,100,585,0)
]]>
"DATA",811.8,249,100,586,0)
</IEN_ROOT>
"DATA",811.8,249,100,587,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,588,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,589,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,590,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,591,0)
<POINT_01>VA-ECOE DX LIST (CURRENT)</POINT_01>
"DATA",811.8,249,100,592,0)
<INTERNAL_ENTRY_NUMBER>3787</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,593,0)
<CHECKSUM>1718252378</CHECKSUM>
"DATA",811.8,249,100,594,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,595,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,596,0)
<![CDATA[
"DATA",811.8,249,100,597,0)
801.41;+3787,;.01~VA-ECOE DX LIST (CURRENT)
"DATA",811.8,249,100,598,0)
801.41;+3787,;4~dialog element
"DATA",811.8,249,100,599,0)
801.41;+3787,;13~DONE AT ENCOUNTER
"DATA",811.8,249,100,600,0)
801.41;+3787,;15~TX.VA-ECOE DIAGNOSIS CODES
"DATA",811.8,249,100,601,0)
801.41;+3787,;23~YES
"DATA",811.8,249,100,602,0)
801.41;+3787,;25~WP-start~1
"DATA",811.8,249,100,603,0)
Current Diagnosis:
"DATA",811.8,249,100,604,0)
801.41;+3787,;100~NATIONAL
"DATA",811.8,249,100,605,0)
801.41;+3787,;123~ALL
"DATA",811.8,249,100,606,0)
801.41;+3787,;141~Diagnosis recorded at encounter.
"DATA",811.8,249,100,607,0)
801.412;+3788,+3787,;.01~1
"DATA",811.8,249,100,608,0)
801.412;+3788,+3787,;2~PXRM COMMENT
"DATA",811.8,249,100,609,0)
801.412;+3789,+3787,;.01~2
"DATA",811.8,249,100,610,0)
801.412;+3789,+3787,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,249,100,611,0)
801.412;+3790,+3787,;.01~3
"DATA",811.8,249,100,612,0)
801.412;+3790,+3787,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,249,100,613,0)
801.44;+3791,+3787,;.01~04/17/2014@17:06:42
"DATA",811.8,249,100,614,0)
801.44;+3791,+3787,;2~WP-start~1
"DATA",811.8,249,100,615,0)
Exchange Stub
"DATA",811.8,249,100,616,0)
]]>
"DATA",811.8,249,100,617,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,618,0)
<IEN_ROOT>
"DATA",811.8,249,100,619,0)
<![CDATA[
"DATA",811.8,249,100,620,0)
3788^1
"DATA",811.8,249,100,621,0)
3789^2
"DATA",811.8,249,100,622,0)
3790^3
"DATA",811.8,249,100,623,0)
3791^1
"DATA",811.8,249,100,624,0)
]]>
"DATA",811.8,249,100,625,0)
</IEN_ROOT>
"DATA",811.8,249,100,626,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,627,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,628,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,629,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,630,0)
<POINT_01>PXRM VISIT DATE</POINT_01>
"DATA",811.8,249,100,631,0)
<INTERNAL_ENTRY_NUMBER>40</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,632,0)
<CHECKSUM>4262247822</CHECKSUM>
"DATA",811.8,249,100,633,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,634,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,635,0)
<![CDATA[
"DATA",811.8,249,100,636,0)
801.41;+40,;.01~PXRM VISIT DATE
"DATA",811.8,249,100,637,0)
801.41;+40,;4~prompt
"DATA",811.8,249,100,638,0)
801.41;+40,;24~Date:
"DATA",811.8,249,100,639,0)
801.41;+40,;46~VST_DATE
"DATA",811.8,249,100,640,0)
801.41;+40,;100~NATIONAL
"DATA",811.8,249,100,641,0)
801.44;+41,+40,;.01~04/17/2014@17:06:42
"DATA",811.8,249,100,642,0)
801.44;+41,+40,;2~WP-start~1
"DATA",811.8,249,100,643,0)
Exchange Stub
"DATA",811.8,249,100,644,0)
]]>
"DATA",811.8,249,100,645,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,646,0)
<IEN_ROOT>
"DATA",811.8,249,100,647,0)
<![CDATA[
"DATA",811.8,249,100,648,0)
41^1
"DATA",811.8,249,100,649,0)
]]>
"DATA",811.8,249,100,650,0)
</IEN_ROOT>
"DATA",811.8,249,100,651,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,652,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,653,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,654,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,655,0)
<POINT_01>VA-ECOE DX LIST (HISTORICAL)</POINT_01>
"DATA",811.8,249,100,656,0)
<INTERNAL_ENTRY_NUMBER>3785</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,657,0)
<CHECKSUM>124420619</CHECKSUM>
"DATA",811.8,249,100,658,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,249,100,659,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,660,0)
<![CDATA[
"DATA",811.8,249,100,661,0)
801.41;+3785,;.01~VA-ECOE DX LIST (HISTORICAL)
"DATA",811.8,249,100,662,0)
801.41;+3785,;4~dialog element
"DATA",811.8,249,100,663,0)
801.41;+3785,;13~DONE ELSEWHERE (HISTORICAL)
"DATA",811.8,249,100,664,0)
801.41;+3785,;15~TX.VA-ECOE DIAGNOSIS CODES
"DATA",811.8,249,100,665,0)
801.41;+3785,;23~YES
"DATA",811.8,249,100,666,0)
801.41;+3785,;25~WP-start~1
"DATA",811.8,249,100,667,0)
Historical Diagnosis:
"DATA",811.8,249,100,668,0)
801.41;+3785,;100~NATIONAL
"DATA",811.8,249,100,669,0)
801.41;+3785,;123~ALL
"DATA",811.8,249,100,670,0)
801.41;+3785,;141~Diagnosis recorded at encounter.
"DATA",811.8,249,100,671,0)
801.412;+3786,+3785,;.01~1
"DATA",811.8,249,100,672,0)
801.412;+3786,+3785,;2~PXRM VISIT DATE
"DATA",811.8,249,100,673,0)
801.412;+3786,+3785,;9~YES
"DATA",811.8,249,100,674,0)
801.412;+3787,+3785,;.01~2
"DATA",811.8,249,100,675,0)
801.412;+3787,+3785,;2~PXRM COMMENT
"DATA",811.8,249,100,676,0)
801.412;+3788,+3785,;.01~3
"DATA",811.8,249,100,677,0)
801.412;+3788,+3785,;2~PXRM PRIMARY DIAGNOSIS
"DATA",811.8,249,100,678,0)
801.412;+3789,+3785,;.01~4
"DATA",811.8,249,100,679,0)
801.412;+3789,+3785,;2~PXRM ADD TO PROBLEM LIST
"DATA",811.8,249,100,680,0)
801.44;+3790,+3785,;.01~04/17/2014@17:06:42
"DATA",811.8,249,100,681,0)
801.44;+3790,+3785,;2~WP-start~1
"DATA",811.8,249,100,682,0)
Exchange Stub
"DATA",811.8,249,100,683,0)
]]>
"DATA",811.8,249,100,684,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,685,0)
<IEN_ROOT>
"DATA",811.8,249,100,686,0)
<![CDATA[
"DATA",811.8,249,100,687,0)
3786^1
"DATA",811.8,249,100,688,0)
3787^2
"DATA",811.8,249,100,689,0)
3788^3
"DATA",811.8,249,100,690,0)
3789^4
"DATA",811.8,249,100,691,0)
3790^1
"DATA",811.8,249,100,692,0)
]]>
"DATA",811.8,249,100,693,0)
</IEN_ROOT>
"DATA",811.8,249,100,694,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,695,0)
<FILEMAN_FILE>
"DATA",811.8,249,100,696,0)
<FILE_NAME>REMINDER DIALOG</FILE_NAME>
"DATA",811.8,249,100,697,0)
<FILE_NUMBER>801.41</FILE_NUMBER>
"DATA",811.8,249,100,698,0)
<POINT_01>VA-ECOE DX GROUP</POINT_01>
"DATA",811.8,249,100,699,0)
<INTERNAL_ENTRY_NUMBER>3786</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,249,100,700,0)
<CHECKSUM>218625992</CHECKSUM>
"DATA",811.8,249,100,701,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,249,100,702,0)
<FILEMAN_FDA>
"DATA",811.8,249,100,703,0)
<![CDATA[
"DATA",811.8,249,100,704,0)
801.41;+3786,;.01~VA-ECOE DX GROUP
"DATA",811.8,249,100,705,0)
801.41;+3786,;4~dialog group
"DATA",811.8,249,100,706,0)
801.41;+3786,;7~4
"DATA",811.8,249,100,707,0)
801.41;+3786,;9~NO SELECTION REQUIRED
"DATA",811.8,249,100,708,0)
801.41;+3786,;23~YES
"DATA",811.8,249,100,709,0)
801.41;+3786,;25~WP-start~1
"DATA",811.8,249,100,710,0)
Diagnosis:
"DATA",811.8,249,100,711,0)
801.41;+3786,;50~HIDE
"DATA",811.8,249,100,712,0)
801.41;+3786,;100~NATIONAL
"DATA",811.8,249,100,713,0)
801.412;+3787,+3786,;.01~5
"DATA",811.8,249,100,714,0)
801.412;+3787,+3786,;2~VA-ECOE DX LIST (HISTORICAL)
"DATA",811.8,249,100,715,0)
801.412;+3787,+3786,;8~YES
"DATA",811.8,249,100,716,0)
801.412;+3788,+3786,;.01~1
"DATA",811.8,249,100,717,0)
801.412;+3788,+3786,;2~VA-ECOE DX LIST (CURRENT)
"DATA",811.8,249,100,718,0)
801.44;+3789,+3786,;.01~04/17/2014@17:06:42
"DATA",811.8,249,100,719,0)
801.44;+3789,+3786,;2~WP-start~1
"DATA",811.8,249,100,720,0)
Exchange Stub
"DATA",811.8,249,100,721,0)
]]>
"DATA",811.8,249,100,722,0)
</FILEMAN_FDA>
"DATA",811.8,249,100,723,0)
<IEN_ROOT>
"DATA",811.8,249,100,724,0)
<![CDATA[
"DATA",811.8,249,100,725,0)
3787^2
"DATA",811.8,249,100,726,0)
3788^3
"DATA",811.8,249,100,727,0)
3789^1
"DATA",811.8,249,100,728,0)
]]>
"DATA",811.8,249,100,729,0)
</IEN_ROOT>
"DATA",811.8,249,100,730,0)
</FILEMAN_FILE>
"DATA",811.8,249,100,731,0)
<INDEX>
"DATA",811.8,249,100,732,0)
<NUMBER_OF_COMPONENTS>8</NUMBER_OF_COMPONENTS>
"DATA",811.8,249,100,733,0)
<COMPONENT>
"DATA",811.8,249,100,734,0)
<FDA_END>300</FDA_END>
"DATA",811.8,249,100,735,0)
<FDA_START>24</FDA_START>
"DATA",811.8,249,100,736,0)
<FILE_START>15</FILE_START>
"DATA",811.8,249,100,737,0)
<IEN_ROOT_END>506</IEN_ROOT_END>
"DATA",811.8,249,100,738,0)
<IEN_ROOT_START>305</IEN_ROOT_START>
"DATA",811.8,249,100,739,0)
</COMPONENT>
"DATA",811.8,249,100,740,0)
<COMPONENT>
"DATA",811.8,249,100,741,0)
<FDA_END>528</FDA_END>
"DATA",811.8,249,100,742,0)
<FDA_START>519</FDA_START>
"DATA",811.8,249,100,743,0)
<FILE_START>510</FILE_START>
"DATA",811.8,249,100,744,0)
<IEN_ROOT_END>533</IEN_ROOT_END>
"DATA",811.8,249,100,745,0)
<IEN_ROOT_START>533</IEN_ROOT_START>
"DATA",811.8,249,100,746,0)
</COMPONENT>
"DATA",811.8,249,100,747,0)
<COMPONENT>
"DATA",811.8,249,100,748,0)
<FDA_END>554</FDA_END>
"DATA",811.8,249,100,749,0)
<FDA_START>546</FDA_START>
"DATA",811.8,249,100,750,0)
<FILE_START>537</FILE_START>
"DATA",811.8,249,100,751,0)
<IEN_ROOT_END>559</IEN_ROOT_END>
"DATA",811.8,249,100,752,0)
<IEN_ROOT_START>559</IEN_ROOT_START>
"DATA",811.8,249,100,753,0)
</COMPONENT>
"DATA",811.8,249,100,754,0)
<COMPONENT>
"DATA",811.8,249,100,755,0)
<FDA_END>579</FDA_END>
"DATA",811.8,249,100,756,0)
<FDA_START>572</FDA_START>
"DATA",811.8,249,100,757,0)
<FILE_START>563</FILE_START>
"DATA",811.8,249,100,758,0)
<IEN_ROOT_END>584</IEN_ROOT_END>
"DATA",811.8,249,100,759,0)
<IEN_ROOT_START>584</IEN_ROOT_START>
"DATA",811.8,249,100,760,0)
</COMPONENT>
"DATA",811.8,249,100,761,0)
<COMPONENT>
"DATA",811.8,249,100,762,0)
<FDA_END>615</FDA_END>
"DATA",811.8,249,100,763,0)
<FDA_START>597</FDA_START>
"DATA",811.8,249,100,764,0)
<FILE_START>588</FILE_START>
"DATA",811.8,249,100,765,0)
<IEN_ROOT_END>623</IEN_ROOT_END>
"DATA",811.8,249,100,766,0)
<IEN_ROOT_START>620</IEN_ROOT_START>
"DATA",811.8,249,100,767,0)
</COMPONENT>
"DATA",811.8,249,100,768,0)
<COMPONENT>
"DATA",811.8,249,100,769,0)
<FDA_END>643</FDA_END>
"DATA",811.8,249,100,770,0)
<FDA_START>636</FDA_START>
"DATA",811.8,249,100,771,0)
<FILE_START>627</FILE_START>
"DATA",811.8,249,100,772,0)
<IEN_ROOT_END>648</IEN_ROOT_END>
"DATA",811.8,249,100,773,0)
<IEN_ROOT_START>648</IEN_ROOT_START>
"DATA",811.8,249,100,774,0)
</COMPONENT>
"DATA",811.8,249,100,775,0)
<COMPONENT>
"DATA",811.8,249,100,776,0)
<FDA_END>682</FDA_END>
"DATA",811.8,249,100,777,0)
<FDA_START>661</FDA_START>
"DATA",811.8,249,100,778,0)
<FILE_START>652</FILE_START>
"DATA",811.8,249,100,779,0)
<IEN_ROOT_END>691</IEN_ROOT_END>
"DATA",811.8,249,100,780,0)
<IEN_ROOT_START>687</IEN_ROOT_START>
"DATA",811.8,249,100,781,0)
</COMPONENT>
"DATA",811.8,249,100,782,0)
<COMPONENT>
"DATA",811.8,249,100,783,0)
<FDA_END>720</FDA_END>
"DATA",811.8,249,100,784,0)
<FDA_START>704</FDA_START>
"DATA",811.8,249,100,785,0)
<FILE_START>695</FILE_START>
"DATA",811.8,249,100,786,0)
<IEN_ROOT_END>727</IEN_ROOT_END>
"DATA",811.8,249,100,787,0)
<IEN_ROOT_START>725</IEN_ROOT_START>
"DATA",811.8,249,100,788,0)
</COMPONENT>
"DATA",811.8,249,100,789,0)
</INDEX>
"DATA",811.8,249,100,790,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,249,110,0)
^811.804^9^9
"DATA",811.8,249,110,1,0)
Source:      PULEO,ANTHONY at CAMP MASTER
"DATA",811.8,249,110,2,0)
Date Packed: 04/17/2014@17:06:32
"DATA",811.8,249,110,3,0)
Package Version: 2.0P31
"DATA",811.8,249,110,4,0)

"DATA",811.8,249,110,5,0)
Description:
"DATA",811.8,249,110,6,0)

"DATA",811.8,249,110,7,0)
Keywords:
"DATA",811.8,249,110,8,0)

"DATA",811.8,249,110,9,0)
Components:
"DATA",811.8,249,119)
2
"DATA",811.8,249,120,0)
^811.802A^8^8
"DATA",811.8,249,120,1,0)
REMINDER TAXONOMY^811.2^1
"DATA",811.8,249,120,1,1,0)
^811.8021A^1^1
"DATA",811.8,249,120,1,1,1,0)
VA-ECOE DIAGNOSIS CODES^24^300^305^506^1^0
"DATA",811.8,249,120,2,0)
REMINDER DIALOG^801.41^7
"DATA",811.8,249,120,2,1,0)
^811.8021A^7^7
"DATA",811.8,249,120,2,1,1,0)
PXRM ADD TO PROBLEM LIST^519^528^533^533^1^0
"DATA",811.8,249,120,2,1,2,0)
PXRM PRIMARY DIAGNOSIS^546^554^559^559^1^0
"DATA",811.8,249,120,2,1,3,0)
PXRM COMMENT^572^579^584^584^1^0
"DATA",811.8,249,120,2,1,4,0)
VA-ECOE DX LIST (CURRENT)^597^615^620^623^1^0
"DATA",811.8,249,120,2,1,5,0)
PXRM VISIT DATE^636^643^648^648^1^0
"DATA",811.8,249,120,2,1,6,0)
VA-ECOE DX LIST (HISTORICAL)^661^682^687^691^1^0
"DATA",811.8,249,120,2,1,7,0)
VA-ECOE DX GROUP^704^720^725^727^1^1
"DATA",811.8,263,0)
PXRM*2*26 NATIONAL TAXONOMIES^REDINGTON,PATRICK at SALT LAKE CITY^3140624.095115
"DATA",811.8,263,100,1,0)
<?xml version="1.0" standalone="yes"?>
"DATA",811.8,263,100,2,0)
<REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,263,100,3,0)
<PACKAGE_VERSION>2.0P26</PACKAGE_VERSION>
"DATA",811.8,263,100,4,0)
<INDEX_AT>421</INDEX_AT>
"DATA",811.8,263,100,5,0)
<SOURCE>
"DATA",811.8,263,100,6,0)
<NAME>PXRM*2*26 NATIONAL TAXONOMIES</NAME>
"DATA",811.8,263,100,7,0)
<USER>REDINGTON,PATRICK</USER>
"DATA",811.8,263,100,8,0)
<SITE>SALT LAKE CITY</SITE>
"DATA",811.8,263,100,9,0)
<DATE_PACKED>06/24/2014@09:51:15</DATE_PACKED>
"DATA",811.8,263,100,10,0)
</SOURCE>
"DATA",811.8,263,100,11,0)
<DESCRIPTION><![CDATA[
"DATA",811.8,263,100,12,0)
The following Clinical Reminder items were selected for packing:
"DATA",811.8,263,100,13,0)
REMINDER TAXONOMY
"DATA",811.8,263,100,14,0)
  VA-BREAST TUMOR
"DATA",811.8,263,100,15,0)
  VA-ISCHEMIC HEART 412 DISEASE
"DATA",811.8,263,100,16,0)
  VA-WH PAP SMEAR SCREEN CODES
"DATA",811.8,263,100,17,0)
]]></DESCRIPTION>
"DATA",811.8,263,100,18,0)
<KEYWORDS>
"DATA",811.8,263,100,19,0)
</KEYWORDS>
"DATA",811.8,263,100,20,0)
<FILEMAN_FILE>
"DATA",811.8,263,100,21,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,263,100,22,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,263,100,23,0)
<POINT_01>Women Veterans Health Program</POINT_01>
"DATA",811.8,263,100,24,0)
<INTERNAL_ENTRY_NUMBER>12</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,263,100,25,0)
<CHECKSUM>956830554</CHECKSUM>
"DATA",811.8,263,100,26,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,263,100,27,0)
<FILEMAN_FDA>
"DATA",811.8,263,100,28,0)
<![CDATA[
"DATA",811.8,263,100,29,0)
811.6;+12,;.01~Women Veterans Health Program
"DATA",811.8,263,100,30,0)
811.6;+12,;100~NATIONAL
"DATA",811.8,263,100,31,0)
811.61;+13,+12,;.01~Women Veterans Health Program
"DATA",811.8,263,100,32,0)
811.61;+13,+12,;1~WP-start~1
"DATA",811.8,263,100,33,0)
(202) 273-8577
"DATA",811.8,263,100,34,0)
811.63;+14,+12,;.01~06/24/2014@09:51:23
"DATA",811.8,263,100,35,0)
811.63;+14,+12,;2~WP-start~1
"DATA",811.8,263,100,36,0)
Exchange Stub
"DATA",811.8,263,100,37,0)
]]>
"DATA",811.8,263,100,38,0)
</FILEMAN_FDA>
"DATA",811.8,263,100,39,0)
<IEN_ROOT>
"DATA",811.8,263,100,40,0)
<![CDATA[
"DATA",811.8,263,100,41,0)
13^1
"DATA",811.8,263,100,42,0)
14^1
"DATA",811.8,263,100,43,0)
]]>
"DATA",811.8,263,100,44,0)
</IEN_ROOT>
"DATA",811.8,263,100,45,0)
</FILEMAN_FILE>
"DATA",811.8,263,100,46,0)
<FILEMAN_FILE>
"DATA",811.8,263,100,47,0)
<FILE_NAME>REMINDER SPONSOR</FILE_NAME>
"DATA",811.8,263,100,48,0)
<FILE_NUMBER>811.6</FILE_NUMBER>
"DATA",811.8,263,100,49,0)
<POINT_01>Office of Quality &amp; Performance</POINT_01>
"DATA",811.8,263,100,50,0)
<INTERNAL_ENTRY_NUMBER>15</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,263,100,51,0)
<CHECKSUM>1008763345</CHECKSUM>
"DATA",811.8,263,100,52,0)
<SELECTED>NO</SELECTED>
"DATA",811.8,263,100,53,0)
<FILEMAN_FDA>
"DATA",811.8,263,100,54,0)
<![CDATA[
"DATA",811.8,263,100,55,0)
811.6;+15,;.01~Office of Quality & Performance
"DATA",811.8,263,100,56,0)
811.6;+15,;100~NATIONAL
"DATA",811.8,263,100,57,0)
811.63;+16,+15,;.01~06/24/2014@09:51:23
"DATA",811.8,263,100,58,0)
811.63;+16,+15,;2~WP-start~1
"DATA",811.8,263,100,59,0)
Exchange Stub
"DATA",811.8,263,100,60,0)
]]>
"DATA",811.8,263,100,61,0)
</FILEMAN_FDA>
"DATA",811.8,263,100,62,0)
<IEN_ROOT>
"DATA",811.8,263,100,63,0)
<![CDATA[
"DATA",811.8,263,100,64,0)
16^1
"DATA",811.8,263,100,65,0)
]]>
"DATA",811.8,263,100,66,0)
</IEN_ROOT>
"DATA",811.8,263,100,67,0)
</FILEMAN_FILE>
"DATA",811.8,263,100,68,0)
<FILEMAN_FILE>
"DATA",811.8,263,100,69,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,263,100,70,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,263,100,71,0)
<POINT_01>VA-WH PAP SMEAR SCREEN CODES</POINT_01>
"DATA",811.8,263,100,72,0)
<INTERNAL_ENTRY_NUMBER>59</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,263,100,73,0)
<CHECKSUM>3499041146</CHECKSUM>
"DATA",811.8,263,100,74,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,263,100,75,0)
<FILEMAN_FDA>
"DATA",811.8,263,100,76,0)
<![CDATA[
"DATA",811.8,263,100,77,0)
811.2;+59,;.01~VA-WH PAP SMEAR SCREEN CODES
"DATA",811.8,263,100,78,0)
811.2;+59,;.02~PAP Smear screen codes w/o obtained codes
"DATA",811.8,263,100,79,0)
811.2;+59,;.03~Pt reported normal Pap smear done within past year
"DATA",811.8,263,100,80,0)
811.2;+59,;2~WP-start~1
"DATA",811.8,263,100,81,0)
PAP Smear screen codes w/o obtained codes
"DATA",811.8,263,100,82,0)
811.2;+59,;100~NATIONAL
"DATA",811.8,263,100,83,0)
811.2;+59,;101~Women Veterans Health Program
"DATA",811.8,263,100,84,0)
811.21;+60,+59,;.01~06/24/2014@09:51:23
"DATA",811.8,263,100,85,0)
811.21;+60,+59,;2~WP-start~1
"DATA",811.8,263,100,86,0)
Exchange Stub
"DATA",811.8,263,100,87,0)
811.23;+69,+59,;.01~Copy from CPT range 88142 to 88150
"DATA",811.8,263,100,88,0)
811.23;+70,+59,;.01~Copy from CPT range 88150 to 88150
"DATA",811.8,263,100,89,0)
811.23;+71,+59,;.01~Copy from CPT range 88152 to 88155
"DATA",811.8,263,100,90,0)
811.23;+72,+59,;.01~Copy from CPT range 88164 to 88167
"DATA",811.8,263,100,91,0)
811.23;+73,+59,;.01~Copy from CPT range 88174 to 88175
"DATA",811.8,263,100,92,0)
811.23;+74,+59,;.01~Copy from CPT range P3000 to P3001
"DATA",811.8,263,100,93,0)
811.23;+75,+59,;.01~Copy from ICD range V76.2 to V76.2
"DATA",811.8,263,100,94,0)
811.23;+76,+59,;.01~Copy from ICP range 91.46 to 91.46
"DATA",811.8,263,100,95,0)
811.231;+77,+69,+59,;.01~CPT
"DATA",811.8,263,100,96,0)
811.231;+77,+69,+59,;1~7
"DATA",811.8,263,100,97,0)
811.231;+77,+69,+59,;3~1
"DATA",811.8,263,100,98,0)
811.231;+78,+70,+59,;.01~CPT
"DATA",811.8,263,100,99,0)
811.231;+78,+70,+59,;1~1
"DATA",811.8,263,100,100,0)
811.231;+78,+70,+59,;3~1
"DATA",811.8,263,100,101,0)
811.231;+79,+71,+59,;.01~CPT
"DATA",811.8,263,100,102,0)
811.231;+79,+71,+59,;1~4
"DATA",811.8,263,100,103,0)
811.231;+79,+71,+59,;3~0
"DATA",811.8,263,100,104,0)
811.231;+80,+72,+59,;.01~CPT
"DATA",811.8,263,100,105,0)
811.231;+80,+72,+59,;1~4
"DATA",811.8,263,100,106,0)
811.231;+80,+72,+59,;3~0
"DATA",811.8,263,100,107,0)
811.231;+81,+73,+59,;.01~CPT
"DATA",811.8,263,100,108,0)
811.231;+81,+73,+59,;1~2
"DATA",811.8,263,100,109,0)
811.231;+81,+73,+59,;3~0
"DATA",811.8,263,100,110,0)
811.231;+82,+74,+59,;.01~CPC
"DATA",811.8,263,100,111,0)
811.231;+82,+74,+59,;1~2
"DATA",811.8,263,100,112,0)
811.231;+82,+74,+59,;3~2
"DATA",811.8,263,100,113,0)
811.231;+83,+75,+59,;.01~ICD
"DATA",811.8,263,100,114,0)
811.231;+83,+75,+59,;1~1
"DATA",811.8,263,100,115,0)
811.231;+83,+75,+59,;3~1
"DATA",811.8,263,100,116,0)
811.231;+84,+76,+59,;.01~ICP
"DATA",811.8,263,100,117,0)
811.231;+84,+76,+59,;1~1
"DATA",811.8,263,100,118,0)
811.231;+84,+76,+59,;3~0
"DATA",811.8,263,100,119,0)
811.2312;+100,+80,+72,+59,;.01~88166
"DATA",811.8,263,100,120,0)
811.2312;+100,+80,+72,+59,;1~NO
"DATA",811.8,263,100,121,0)
811.2312;+101,+77,+69,+59,;.01~88145
"DATA",811.8,263,100,122,0)
811.2312;+101,+77,+69,+59,;1~NO
"DATA",811.8,263,100,123,0)
811.2312;+102,+79,+71,+59,;.01~88155
"DATA",811.8,263,100,124,0)
811.2312;+102,+79,+71,+59,;1~NO
"DATA",811.8,263,100,125,0)
811.2312;+103,+80,+72,+59,;.01~88167
"DATA",811.8,263,100,126,0)
811.2312;+103,+80,+72,+59,;1~NO
"DATA",811.8,263,100,127,0)
811.2312;+104,+77,+69,+59,;.01~88147
"DATA",811.8,263,100,128,0)
811.2312;+104,+77,+69,+59,;1~NO
"DATA",811.8,263,100,129,0)
811.2312;+105,+77,+69,+59,;.01~88148
"DATA",811.8,263,100,130,0)
811.2312;+105,+77,+69,+59,;1~NO
"DATA",811.8,263,100,131,0)
811.2312;+106,+77,+69,+59,;.01~88150
"DATA",811.8,263,100,132,0)
811.2312;+106,+77,+69,+59,;1~YES
"DATA",811.8,263,100,133,0)
811.2312;+85,+77,+69,+59,;.01~88142
"DATA",811.8,263,100,134,0)
811.2312;+85,+77,+69,+59,;1~NO
"DATA",811.8,263,100,135,0)
811.2312;+86,+78,+70,+59,;.01~88150
"DATA",811.8,263,100,136,0)
811.2312;+86,+78,+70,+59,;1~YES
"DATA",811.8,263,100,137,0)
811.2312;+87,+79,+71,+59,;.01~88152
"DATA",811.8,263,100,138,0)
811.2312;+87,+79,+71,+59,;1~NO
"DATA",811.8,263,100,139,0)
811.2312;+88,+80,+72,+59,;.01~88164
"DATA",811.8,263,100,140,0)
811.2312;+88,+80,+72,+59,;1~NO
"DATA",811.8,263,100,141,0)
811.2312;+89,+81,+73,+59,;.01~88174
"DATA",811.8,263,100,142,0)
811.2312;+89,+81,+73,+59,;1~NO
"DATA",811.8,263,100,143,0)
811.2312;+90,+82,+74,+59,;.01~P3000
"DATA",811.8,263,100,144,0)
811.2312;+90,+82,+74,+59,;1~YES
"DATA",811.8,263,100,145,0)
811.2312;+91,+83,+75,+59,;.01~V76.2
"DATA",811.8,263,100,146,0)
811.2312;+91,+83,+75,+59,;1~YES
"DATA",811.8,263,100,147,0)
811.2312;+92,+84,+76,+59,;.01~91.46
"DATA",811.8,263,100,148,0)
811.2312;+92,+84,+76,+59,;1~NO
"DATA",811.8,263,100,149,0)
811.2312;+93,+77,+69,+59,;.01~88143
"DATA",811.8,263,100,150,0)
811.2312;+93,+77,+69,+59,;1~NO
"DATA",811.8,263,100,151,0)
811.2312;+94,+79,+71,+59,;.01~88153
"DATA",811.8,263,100,152,0)
811.2312;+94,+79,+71,+59,;1~NO
"DATA",811.8,263,100,153,0)
811.2312;+95,+80,+72,+59,;.01~88165
"DATA",811.8,263,100,154,0)
811.2312;+95,+80,+72,+59,;1~NO
"DATA",811.8,263,100,155,0)
811.2312;+96,+81,+73,+59,;.01~88175
"DATA",811.8,263,100,156,0)
811.2312;+96,+81,+73,+59,;1~NO
"DATA",811.8,263,100,157,0)
811.2312;+97,+82,+74,+59,;.01~P3001
"DATA",811.8,263,100,158,0)
811.2312;+97,+82,+74,+59,;1~YES
"DATA",811.8,263,100,159,0)
811.2312;+98,+77,+69,+59,;.01~88144
"DATA",811.8,263,100,160,0)
811.2312;+98,+77,+69,+59,;1~NO
"DATA",811.8,263,100,161,0)
811.2312;+99,+79,+71,+59,;.01~88154
"DATA",811.8,263,100,162,0)
811.2312;+99,+79,+71,+59,;1~NO
"DATA",811.8,263,100,163,0)
811.24;+107,+59,;.01~P3001
"DATA",811.8,263,100,164,0)
811.24;+107,+59,;1~CPC
"DATA",811.8,263,100,165,0)
811.24;+108,+59,;.01~88150
"DATA",811.8,263,100,166,0)
811.24;+108,+59,;1~CPT
"DATA",811.8,263,100,167,0)
811.24;+109,+59,;.01~P3000
"DATA",811.8,263,100,168,0)
811.24;+109,+59,;1~CPC
"DATA",811.8,263,100,169,0)
811.24;+110,+59,;.01~V76.2
"DATA",811.8,263,100,170,0)
811.24;+110,+59,;1~ICD
"DATA",811.8,263,100,171,0)
]]>
"DATA",811.8,263,100,172,0)
</FILEMAN_FDA>
"DATA",811.8,263,100,173,0)
<IEN_ROOT>
"DATA",811.8,263,100,174,0)
<![CDATA[
"DATA",811.8,263,100,175,0)
60^1
"DATA",811.8,263,100,176,0)
61^1
"DATA",811.8,263,100,177,0)
62^1
"DATA",811.8,263,100,178,0)
63^10
"DATA",811.8,263,100,179,0)
64^5
"DATA",811.8,263,100,180,0)
65^6
"DATA",811.8,263,100,181,0)
66^7
"DATA",811.8,263,100,182,0)
67^8
"DATA",811.8,263,100,183,0)
68^9
"DATA",811.8,263,100,184,0)
69^1
"DATA",811.8,263,100,185,0)
70^2
"DATA",811.8,263,100,186,0)
71^3
"DATA",811.8,263,100,187,0)
72^4
"DATA",811.8,263,100,188,0)
73^5
"DATA",811.8,263,100,189,0)
74^6
"DATA",811.8,263,100,190,0)
75^7
"DATA",811.8,263,100,191,0)
76^8
"DATA",811.8,263,100,192,0)
77^1
"DATA",811.8,263,100,193,0)
78^1
"DATA",811.8,263,100,194,0)
79^1
"DATA",811.8,263,100,195,0)
80^1
"DATA",811.8,263,100,196,0)
81^1
"DATA",811.8,263,100,197,0)
82^1
"DATA",811.8,263,100,198,0)
83^1
"DATA",811.8,263,100,199,0)
84^1
"DATA",811.8,263,100,200,0)
85^1
"DATA",811.8,263,100,201,0)
86^1
"DATA",811.8,263,100,202,0)
87^1
"DATA",811.8,263,100,203,0)
88^1
"DATA",811.8,263,100,204,0)
89^1
"DATA",811.8,263,100,205,0)
90^1
"DATA",811.8,263,100,206,0)
91^1
"DATA",811.8,263,100,207,0)
92^1
"DATA",811.8,263,100,208,0)
93^2
"DATA",811.8,263,100,209,0)
94^2
"DATA",811.8,263,100,210,0)
95^2
"DATA",811.8,263,100,211,0)
96^2
"DATA",811.8,263,100,212,0)
97^2
"DATA",811.8,263,100,213,0)
98^3
"DATA",811.8,263,100,214,0)
99^3
"DATA",811.8,263,100,215,0)
100^3
"DATA",811.8,263,100,216,0)
101^4
"DATA",811.8,263,100,217,0)
102^4
"DATA",811.8,263,100,218,0)
103^4
"DATA",811.8,263,100,219,0)
104^5
"DATA",811.8,263,100,220,0)
105^6
"DATA",811.8,263,100,221,0)
106^7
"DATA",811.8,263,100,222,0)
107^1
"DATA",811.8,263,100,223,0)
108^2
"DATA",811.8,263,100,224,0)
109^3
"DATA",811.8,263,100,225,0)
110^4
"DATA",811.8,263,100,226,0)
]]>
"DATA",811.8,263,100,227,0)
</IEN_ROOT>
"DATA",811.8,263,100,228,0)
</FILEMAN_FILE>
"DATA",811.8,263,100,229,0)
<FILEMAN_FILE>
"DATA",811.8,263,100,230,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,263,100,231,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,263,100,232,0)
<POINT_01>VA-ISCHEMIC HEART 412 DISEASE</POINT_01>
"DATA",811.8,263,100,233,0)
<INTERNAL_ENTRY_NUMBER>44</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,263,100,234,0)
<CHECKSUM>3944632742</CHECKSUM>
"DATA",811.8,263,100,235,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,263,100,236,0)
<FILEMAN_FDA>
"DATA",811.8,263,100,237,0)
<![CDATA[
"DATA",811.8,263,100,238,0)
811.2;+44,;.01~VA-ISCHEMIC HEART 412 DISEASE
"DATA",811.8,263,100,239,0)
811.2;+44,;.02~Ischemic Heart 412 Disease Diagnoses
"DATA",811.8,263,100,240,0)
811.2;+44,;.03~Select Ischemic Heart Disease Diagnoses
"DATA",811.8,263,100,241,0)
811.2;+44,;2~WP-start~1
"DATA",811.8,263,100,242,0)
Ischemic Heart 412 Disease Diagnoses
"DATA",811.8,263,100,243,0)
811.2;+44,;4~INDXLS,EN,PL
"DATA",811.8,263,100,244,0)
811.2;+44,;100~NATIONAL
"DATA",811.8,263,100,245,0)
811.2;+44,;101~Office of Quality & Performance
"DATA",811.8,263,100,246,0)
811.21;+45,+44,;.01~06/24/2014@09:51:24
"DATA",811.8,263,100,247,0)
811.21;+45,+44,;2~WP-start~1
"DATA",811.8,263,100,248,0)
Exchange Stub
"DATA",811.8,263,100,249,0)
811.23;+47,+44,;.01~Copy from ICD range 412. to 412.
"DATA",811.8,263,100,250,0)
811.231;+48,+47,+44,;.01~ICD
"DATA",811.8,263,100,251,0)
811.231;+48,+47,+44,;1~1
"DATA",811.8,263,100,252,0)
811.231;+48,+47,+44,;3~1
"DATA",811.8,263,100,253,0)
811.2312;+49,+48,+47,+44,;.01~412.
"DATA",811.8,263,100,254,0)
811.2312;+49,+48,+47,+44,;1~YES
"DATA",811.8,263,100,255,0)
811.24;+50,+44,;.01~412.
"DATA",811.8,263,100,256,0)
811.24;+50,+44,;1~ICD
"DATA",811.8,263,100,257,0)
]]>
"DATA",811.8,263,100,258,0)
</FILEMAN_FDA>
"DATA",811.8,263,100,259,0)
<IEN_ROOT>
"DATA",811.8,263,100,260,0)
<![CDATA[
"DATA",811.8,263,100,261,0)
45^1
"DATA",811.8,263,100,262,0)
46^3
"DATA",811.8,263,100,263,0)
47^1
"DATA",811.8,263,100,264,0)
48^1
"DATA",811.8,263,100,265,0)
49^1
"DATA",811.8,263,100,266,0)
50^45
"DATA",811.8,263,100,267,0)
]]>
"DATA",811.8,263,100,268,0)
</IEN_ROOT>
"DATA",811.8,263,100,269,0)
</FILEMAN_FILE>
"DATA",811.8,263,100,270,0)
<FILEMAN_FILE>
"DATA",811.8,263,100,271,0)
<FILE_NAME>REMINDER TAXONOMY</FILE_NAME>
"DATA",811.8,263,100,272,0)
<FILE_NUMBER>811.2</FILE_NUMBER>
"DATA",811.8,263,100,273,0)
<POINT_01>VA-BREAST TUMOR</POINT_01>
"DATA",811.8,263,100,274,0)
<INTERNAL_ENTRY_NUMBER>18</INTERNAL_ENTRY_NUMBER>
"DATA",811.8,263,100,275,0)
<CHECKSUM>554529102</CHECKSUM>
"DATA",811.8,263,100,276,0)
<SELECTED>YES</SELECTED>
"DATA",811.8,263,100,277,0)
<FILEMAN_FDA>
"DATA",811.8,263,100,278,0)
<![CDATA[
"DATA",811.8,263,100,279,0)
811.2;+18,;.01~VA-BREAST TUMOR
"DATA",811.8,263,100,280,0)
811.2;+18,;.02~Breast tumor, mass, infection, pain
"DATA",811.8,263,100,281,0)
811.2;+18,;2~WP-start~1
"DATA",811.8,263,100,282,0)
Breast tumor, mass, infection, pain
"DATA",811.8,263,100,283,0)
811.2;+18,;100~NATIONAL
"DATA",811.8,263,100,284,0)
811.21;+19,+18,;.01~06/24/2014@09:51:24
"DATA",811.8,263,100,285,0)
811.21;+19,+18,;2~WP-start~1
"DATA",811.8,263,100,286,0)
Exchange Stub
"DATA",811.8,263,100,287,0)
811.23;+26,+18,;.01~Copy from ICD range 174.0 to 174.9
"DATA",811.8,263,100,288,0)
811.23;+27,+18,;.01~Copy from ICD range 198.81 to 198.81
"DATA",811.8,263,100,289,0)
811.23;+28,+18,;.01~Copy from ICD range 233.0 to 233.0
"DATA",811.8,263,100,290,0)
811.23;+29,+18,;.01~Copy from ICD range 238.3 to 238.3
"DATA",811.8,263,100,291,0)
811.23;+30,+18,;.01~Copy from ICD range 239.3 to 239.3
"DATA",811.8,263,100,292,0)
811.23;+31,+18,;.01~Copy from ICD range V10.3 to V10.3
"DATA",811.8,263,100,293,0)
811.231;+32,+26,+18,;.01~ICD
"DATA",811.8,263,100,294,0)
811.231;+32,+26,+18,;1~9
"DATA",811.8,263,100,295,0)
811.231;+32,+26,+18,;3~9
"DATA",811.8,263,100,296,0)
811.231;+33,+27,+18,;.01~ICD
"DATA",811.8,263,100,297,0)
811.231;+33,+27,+18,;1~1
"DATA",811.8,263,100,298,0)
811.231;+33,+27,+18,;3~1
"DATA",811.8,263,100,299,0)
811.231;+34,+28,+18,;.01~ICD
"DATA",811.8,263,100,300,0)
811.231;+34,+28,+18,;1~1
"DATA",811.8,263,100,301,0)
811.231;+34,+28,+18,;3~1
"DATA",811.8,263,100,302,0)
811.231;+35,+29,+18,;.01~ICD
"DATA",811.8,263,100,303,0)
811.231;+35,+29,+18,;1~1
"DATA",811.8,263,100,304,0)
811.231;+35,+29,+18,;3~1
"DATA",811.8,263,100,305,0)
811.231;+36,+30,+18,;.01~ICD
"DATA",811.8,263,100,306,0)
811.231;+36,+30,+18,;1~1
"DATA",811.8,263,100,307,0)
811.231;+36,+30,+18,;3~1
"DATA",811.8,263,100,308,0)
811.231;+37,+31,+18,;.01~ICD
"DATA",811.8,263,100,309,0)
811.231;+37,+31,+18,;1~1
"DATA",811.8,263,100,310,0)
811.231;+37,+31,+18,;3~1
"DATA",811.8,263,100,311,0)
811.2312;+38,+32,+26,+18,;.01~174.1
"DATA",811.8,263,100,312,0)
811.2312;+38,+32,+26,+18,;1~YES
"DATA",811.8,263,100,313,0)
811.2312;+39,+33,+27,+18,;.01~198.81
"DATA",811.8,263,100,314,0)
811.2312;+39,+33,+27,+18,;1~YES
"DATA",811.8,263,100,315,0)
811.2312;+40,+34,+28,+18,;.01~233.0
"DATA",811.8,263,100,316,0)
811.2312;+40,+34,+28,+18,;1~YES
"DATA",811.8,263,100,317,0)
811.2312;+41,+35,+29,+18,;.01~238.3
"DATA",811.8,263,100,318,0)
811.2312;+41,+35,+29,+18,;1~YES
"DATA",811.8,263,100,319,0)
811.2312;+42,+36,+30,+18,;.01~239.3
"DATA",811.8,263,100,320,0)
811.2312;+42,+36,+30,+18,;1~YES
"DATA",811.8,263,100,321,0)
811.2312;+43,+37,+31,+18,;.01~V10.3
"DATA",811.8,263,100,322,0)
811.2312;+43,+37,+31,+18,;1~YES
"DATA",811.8,263,100,323,0)
811.2312;+44,+32,+26,+18,;.01~174.2
"DATA",811.8,263,100,324,0)
811.2312;+44,+32,+26,+18,;1~YES
"DATA",811.8,263,100,325,0)
811.2312;+45,+32,+26,+18,;.01~174.3
"DATA",811.8,263,100,326,0)
811.2312;+45,+32,+26,+18,;1~YES
"DATA",811.8,263,100,327,0)
811.2312;+46,+32,+26,+18,;.01~174.4
"DATA",811.8,263,100,328,0)
811.2312;+46,+32,+26,+18,;1~YES
"DATA",811.8,263,100,329,0)
811.2312;+47,+32,+26,+18,;.01~174.5
"DATA",811.8,263,100,330,0)
811.2312;+47,+32,+26,+18,;1~YES
"DATA",811.8,263,100,331,0)
811.2312;+48,+32,+26,+18,;.01~174.6
"DATA",811.8,263,100,332,0)
811.2312;+48,+32,+26,+18,;1~YES
"DATA",811.8,263,100,333,0)
811.2312;+49,+32,+26,+18,;.01~174.8
"DATA",811.8,263,100,334,0)
811.2312;+49,+32,+26,+18,;1~YES
"DATA",811.8,263,100,335,0)
811.2312;+50,+32,+26,+18,;.01~174.9
"DATA",811.8,263,100,336,0)
811.2312;+50,+32,+26,+18,;1~YES
"DATA",811.8,263,100,337,0)
811.2312;+51,+32,+26,+18,;.01~174.0
"DATA",811.8,263,100,338,0)
811.2312;+51,+32,+26,+18,;1~YES
"DATA",811.8,263,100,339,0)
811.24;+52,+18,;.01~174.0
"DATA",811.8,263,100,340,0)
811.24;+52,+18,;1~ICD
"DATA",811.8,263,100,341,0)
811.24;+53,+18,;.01~174.1
"DATA",811.8,263,100,342,0)
811.24;+53,+18,;1~ICD
"DATA",811.8,263,100,343,0)
811.24;+54,+18,;.01~174.9
"DATA",811.8,263,100,344,0)
811.24;+54,+18,;1~ICD
"DATA",811.8,263,100,345,0)
811.24;+55,+18,;.01~174.2
"DATA",811.8,263,100,346,0)
811.24;+55,+18,;1~ICD
"DATA",811.8,263,100,347,0)
811.24;+56,+18,;.01~198.81
"DATA",811.8,263,100,348,0)
811.24;+56,+18,;1~ICD
"DATA",811.8,263,100,349,0)
811.24;+57,+18,;.01~233.0
"DATA",811.8,263,100,350,0)
811.24;+57,+18,;1~ICD
"DATA",811.8,263,100,351,0)
811.24;+58,+18,;.01~238.3
"DATA",811.8,263,100,352,0)
811.24;+58,+18,;1~ICD
"DATA",811.8,263,100,353,0)
811.24;+59,+18,;.01~239.3
"DATA",811.8,263,100,354,0)
811.24;+59,+18,;1~ICD
"DATA",811.8,263,100,355,0)
811.24;+60,+18,;.01~V10.3
"DATA",811.8,263,100,356,0)
811.24;+60,+18,;1~ICD
"DATA",811.8,263,100,357,0)
811.24;+61,+18,;.01~174.3
"DATA",811.8,263,100,358,0)
811.24;+61,+18,;1~ICD
"DATA",811.8,263,100,359,0)
811.24;+62,+18,;.01~174.4
"DATA",811.8,263,100,360,0)
811.24;+62,+18,;1~ICD
"DATA",811.8,263,100,361,0)
811.24;+63,+18,;.01~174.5
"DATA",811.8,263,100,362,0)
811.24;+63,+18,;1~ICD
"DATA",811.8,263,100,363,0)
811.24;+64,+18,;.01~174.6
"DATA",811.8,263,100,364,0)
811.24;+64,+18,;1~ICD
"DATA",811.8,263,100,365,0)
811.24;+65,+18,;.01~174.8
"DATA",811.8,263,100,366,0)
811.24;+65,+18,;1~ICD
"DATA",811.8,263,100,367,0)
]]>
"DATA",811.8,263,100,368,0)
</FILEMAN_FDA>
"DATA",811.8,263,100,369,0)
<IEN_ROOT>
"DATA",811.8,263,100,370,0)
<![CDATA[
"DATA",811.8,263,100,371,0)
19^1
"DATA",811.8,263,100,372,0)
20^1
"DATA",811.8,263,100,373,0)
21^2
"DATA",811.8,263,100,374,0)
22^3
"DATA",811.8,263,100,375,0)
23^4
"DATA",811.8,263,100,376,0)
24^5
"DATA",811.8,263,100,377,0)
25^6
"DATA",811.8,263,100,378,0)
26^1
"DATA",811.8,263,100,379,0)
27^2
"DATA",811.8,263,100,380,0)
28^3
"DATA",811.8,263,100,381,0)
29^4
"DATA",811.8,263,100,382,0)
30^5
"DATA",811.8,263,100,383,0)
31^6
"DATA",811.8,263,100,384,0)
32^1
"DATA",811.8,263,100,385,0)
33^1
"DATA",811.8,263,100,386,0)
34^1
"DATA",811.8,263,100,387,0)
35^1
"DATA",811.8,263,100,388,0)
36^1
"DATA",811.8,263,100,389,0)
37^1
"DATA",811.8,263,100,390,0)
38^1
"DATA",811.8,263,100,391,0)
39^1
"DATA",811.8,263,100,392,0)
40^1
"DATA",811.8,263,100,393,0)
41^1
"DATA",811.8,263,100,394,0)
42^1
"DATA",811.8,263,100,395,0)
43^1
"DATA",811.8,263,100,396,0)
44^2
"DATA",811.8,263,100,397,0)
45^3
"DATA",811.8,263,100,398,0)
46^4
"DATA",811.8,263,100,399,0)
47^5
"DATA",811.8,263,100,400,0)
48^6
"DATA",811.8,263,100,401,0)
49^7
"DATA",811.8,263,100,402,0)
50^8
"DATA",811.8,263,100,403,0)
51^9
"DATA",811.8,263,100,404,0)
52^1
"DATA",811.8,263,100,405,0)
53^2
"DATA",811.8,263,100,406,0)
54^29
"DATA",811.8,263,100,407,0)
55^3
"DATA",811.8,263,100,408,0)
56^30
"DATA",811.8,263,100,409,0)
57^31
"DATA",811.8,263,100,410,0)
58^32
"DATA",811.8,263,100,411,0)
59^33
"DATA",811.8,263,100,412,0)
60^34
"DATA",811.8,263,100,413,0)
61^4
"DATA",811.8,263,100,414,0)
62^5
"DATA",811.8,263,100,415,0)
63^6
"DATA",811.8,263,100,416,0)
64^7
"DATA",811.8,263,100,417,0)
65^8
"DATA",811.8,263,100,418,0)
]]>
"DATA",811.8,263,100,419,0)
</IEN_ROOT>
"DATA",811.8,263,100,420,0)
</FILEMAN_FILE>
"DATA",811.8,263,100,421,0)
<INDEX>
"DATA",811.8,263,100,422,0)
<NUMBER_OF_COMPONENTS>5</NUMBER_OF_COMPONENTS>
"DATA",811.8,263,100,423,0)
<COMPONENT>
"DATA",811.8,263,100,424,0)
<FDA_END>36</FDA_END>
"DATA",811.8,263,100,425,0)
<FDA_START>29</FDA_START>
"DATA",811.8,263,100,426,0)
<FILE_START>20</FILE_START>
"DATA",811.8,263,100,427,0)
<IEN_ROOT_END>42</IEN_ROOT_END>
"DATA",811.8,263,100,428,0)
<IEN_ROOT_START>41</IEN_ROOT_START>
"DATA",811.8,263,100,429,0)
</COMPONENT>
"DATA",811.8,263,100,430,0)
<COMPONENT>
"DATA",811.8,263,100,431,0)
<FDA_END>59</FDA_END>
"DATA",811.8,263,100,432,0)
<FDA_START>55</FDA_START>
"DATA",811.8,263,100,433,0)
<FILE_START>46</FILE_START>
"DATA",811.8,263,100,434,0)
<IEN_ROOT_END>64</IEN_ROOT_END>
"DATA",811.8,263,100,435,0)
<IEN_ROOT_START>64</IEN_ROOT_START>
"DATA",811.8,263,100,436,0)
</COMPONENT>
"DATA",811.8,263,100,437,0)
<COMPONENT>
"DATA",811.8,263,100,438,0)
<FDA_END>170</FDA_END>
"DATA",811.8,263,100,439,0)
<FDA_START>77</FDA_START>
"DATA",811.8,263,100,440,0)
<FILE_START>68</FILE_START>
"DATA",811.8,263,100,441,0)
<IEN_ROOT_END>225</IEN_ROOT_END>
"DATA",811.8,263,100,442,0)
<IEN_ROOT_START>175</IEN_ROOT_START>
"DATA",811.8,263,100,443,0)
</COMPONENT>
"DATA",811.8,263,100,444,0)
<COMPONENT>
"DATA",811.8,263,100,445,0)
<FDA_END>256</FDA_END>
"DATA",811.8,263,100,446,0)
<FDA_START>238</FDA_START>
"DATA",811.8,263,100,447,0)
<FILE_START>229</FILE_START>
"DATA",811.8,263,100,448,0)
<IEN_ROOT_END>266</IEN_ROOT_END>
"DATA",811.8,263,100,449,0)
<IEN_ROOT_START>261</IEN_ROOT_START>
"DATA",811.8,263,100,450,0)
</COMPONENT>
"DATA",811.8,263,100,451,0)
<COMPONENT>
"DATA",811.8,263,100,452,0)
<FDA_END>366</FDA_END>
"DATA",811.8,263,100,453,0)
<FDA_START>279</FDA_START>
"DATA",811.8,263,100,454,0)
<FILE_START>270</FILE_START>
"DATA",811.8,263,100,455,0)
<IEN_ROOT_END>417</IEN_ROOT_END>
"DATA",811.8,263,100,456,0)
<IEN_ROOT_START>371</IEN_ROOT_START>
"DATA",811.8,263,100,457,0)
</COMPONENT>
"DATA",811.8,263,100,458,0)
</INDEX>
"DATA",811.8,263,100,459,0)
</REMINDER_EXCHANGE_FILE_ENTRY>
"DATA",811.8,263,110,0)
^811.804^14^14
"DATA",811.8,263,110,1,0)
Source:      REDINGTON,PATRICK at SALT LAKE CITY
"DATA",811.8,263,110,2,0)
Date Packed: 06/24/2014@09:51:15
"DATA",811.8,263,110,3,0)
Package Version: 2.0P26
"DATA",811.8,263,110,4,0)

"DATA",811.8,263,110,5,0)
Description:
"DATA",811.8,263,110,6,0)
The following Clinical Reminder items were selected for packing:
"DATA",811.8,263,110,7,0)
REMINDER TAXONOMY
"DATA",811.8,263,110,8,0)
  VA-BREAST TUMOR
"DATA",811.8,263,110,9,0)
  VA-ISCHEMIC HEART 412 DISEASE
"DATA",811.8,263,110,10,0)
  VA-WH PAP SMEAR SCREEN CODES
"DATA",811.8,263,110,11,0)

"DATA",811.8,263,110,12,0)
Keywords:
"DATA",811.8,263,110,13,0)

"DATA",811.8,263,110,14,0)
Components:
"FIA",801.41)
REMINDER DIALOG
"FIA",801.41,0)
^PXRMD(801.41,
"FIA",801.41,0,0)
801.41IO
"FIA",801.41,0,1)
y^n^f^^^^n
"FIA",801.41,0,10)

"FIA",801.41,0,11)

"FIA",801.41,0,"RLRO")

"FIA",801.41,0,"VR")
2.0^PXRM
"FIA",801.41,801.41)
0
"FIA",801.41,801.41121)
0
"FIA",801.41,801.4118)
0
"FIA",801.41,801.412)
0
"FIA",801.41,801.4125)
0
"FIA",801.41,801.4135)
0
"FIA",801.41,801.4145)
0
"FIA",801.41,801.44)
0
"FIA",801.41,801.442)
0
"FIA",801.45)
REMINDER FINDING TYPE PARAMETER
"FIA",801.45,0)
^PXRMD(801.45,
"FIA",801.45,0,0)
801.45IO
"FIA",801.45,0,1)
n^n^f^^n^^y^o^n
"FIA",801.45,0,10)

"FIA",801.45,0,11)
I Y=20
"FIA",801.45,0,"RLRO")

"FIA",801.45,0,"VR")
2.0^PXRM
"FIA",801.45,801.45)
0
"FIA",801.45,801.451)
0
"FIA",801.45,801.4515)
0
"FIA",802.4)
REMINDER FUNCTION FINDING FUNCTIONS
"FIA",802.4,0)
^PXRMD(802.4,
"FIA",802.4,0,0)
802.4O
"FIA",802.4,0,1)
n^y^f^^n^^y^o^n
"FIA",802.4,0,10)

"FIA",802.4,0,11)
I +Y>0
"FIA",802.4,0,"RLRO")

"FIA",802.4,0,"VR")
2.0^PXRM
"FIA",802.4,802.4)
0
"FIA",802.4,802.41)
0
"FIA",802.4,802.42)
0
"FIA",802.4,802.422)
0
"FIA",811.2)
REMINDER TAXONOMY
"FIA",811.2,0)
^PXD(811.2,
"FIA",811.2,0,0)
811.2IOs
"FIA",811.2,0,1)
y^y^f^^^^n
"FIA",811.2,0,10)

"FIA",811.2,0,11)

"FIA",811.2,0,"RLRO")

"FIA",811.2,0,"VR")
2.0^PXRM
"FIA",811.2,811.2)
0
"FIA",811.2,811.21)
0
"FIA",811.2,811.212)
0
"FIA",811.2,811.22)
0
"FIA",811.2,811.22102)
0
"FIA",811.2,811.22103)
0
"FIA",811.2,811.22104)
0
"FIA",811.2,811.23)
0
"FIA",811.2,811.231)
0
"FIA",811.2,811.23102)
0
"FIA",811.2,811.23104)
0
"FIA",811.2,811.2312)
0
"FIA",811.2,811.24)
0
"FIA",811.4)
REMINDER COMPUTED FINDINGS
"FIA",811.4,0)
^PXRMD(811.4,
"FIA",811.4,0,0)
811.4OI
"FIA",811.4,0,1)
n^y^f^^n^^y^o^n
"FIA",811.4,0,10)

"FIA",811.4,0,11)
I $$CFINC^PXRMP26I(Y)
"FIA",811.4,0,"RLRO")

"FIA",811.4,0,"VR")
2.0^PXRM
"FIA",811.4,811.4)
0
"FIA",811.4,811.41)
0
"FIA",811.4,811.42)
0
"FIA",811.4,811.422)
0
"FIA",811.8)
REMINDER EXCHANGE
"FIA",811.8,0)
^PXD(811.8,
"FIA",811.8,0,0)
811.8s
"FIA",811.8,0,1)
n^n^f^^n^^y^o^n
"FIA",811.8,0,10)

"FIA",811.8,0,11)
I $$EXFINC^PXRMEXSI(Y,"EXARRAY","PXRMP26E")
"FIA",811.8,0,"RLRO")

"FIA",811.8,0,"VR")
2.0^PXRM
"FIA",811.8,811.8)
0
"FIA",811.8,811.801)
0
"FIA",811.8,811.802)
0
"FIA",811.8,811.8021)
0
"FIA",811.8,811.803)
0
"FIA",811.8,811.8031)
0
"FIA",811.8,811.80315)
0
"FIA",811.8,811.804)
0
"INI")
PRE^PXRMP26I
"INIT")
POST^PXRMP26I
"IX",801.41,801.41,"AE",0)
801.41^AE^This xref checks to see if the disable value can be deleted^MU^^F^^I^801.41^^^^^A
"IX",801.41,801.41,"AE",.1,0)
^^5^5^3090518^^^^
"IX",801.41,801.41,"AE",.1,1,0)
This cross-reference checks to see if the disable value can be deleted
"IX",801.41,801.41,"AE",.1,2,0)
from the DISABLE field. Note: deleting the value, i.e., making the field
"IX",801.41,801.41,"AE",.1,3,0)
NULL, activates the dialog element. A dialog element can be active only if
"IX",801.41,801.41,"AE",.1,4,0)
its findings, orderable items, or additional findings are active. 
"IX",801.41,801.41,"AE",.1,5,0)

"IX",801.41,801.41,"AE",1)
Q
"IX",801.41,801.41,"AE",1.4)

"IX",801.41,801.41,"AE",2)
S $P(^PXRMD(801.41,DA,0),U,3)=X1(2)
"IX",801.41,801.41,"AE",2.4)
S X=$S($$DISCKINP^PXRMDLG6(DA,.X2,.X1)=0:1,1:0)
"IX",801.41,801.41,"AE",11.1,0)
^.114IA^2^2
"IX",801.41,801.41,"AE",11.1,1,0)
1^F^801.41^.01^^1^F
"IX",801.41,801.41,"AE",11.1,2,0)
2^F^801.41^3^^2^F
"IX",801.41,801.41,"ATS",0)
801.41^ATS^This xref is used to delete corresponding fields when the value is changed^MU^^F^IR^I^801.41^^^^^A
"IX",801.41,801.41,"ATS",1)
Q
"IX",801.41,801.41,"ATS",2)
D DELLOG^PXRMDTAX(.DA,123,X1,X2)
"IX",801.41,801.41,"ATS",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"ATS",11.1,1,0)
1^F^801.41^123^^^F
"IX",801.41,801.41,"ATS",11.1,1,3)

"IX",801.41,801.41,"B",0)
801.41^B^B Cross-reference^R^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"B",.1,0)
^^1^1^3001103^^
"IX",801.41,801.41,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross reference.
"IX",801.41,801.41,"B",1)
S ^PXRMD(801.41,"B",$E(X,1,64),DA)=""
"IX",801.41,801.41,"B",2)
K ^PXRMD(801.41,"B",$E(X,1,64),DA)
"IX",801.41,801.41,"B",2.5)
K ^PXRMD(801.41,"B")
"IX",801.41,801.41,"B",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"B",11.1,1,0)
1^F^801.41^.01^64^1^F
"IX",801.41,801.41,"R",0)
801.41^R^This will be used for identifying replacement elements/groups^MU^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"R",1)
S ^PXRMD(801.41,"R",X,DA)=""
"IX",801.41,801.41,"R",2)
K ^PXRMD(801.41,"R",X,DA)
"IX",801.41,801.41,"R",2.5)
K ^PXRMD(801.41,"R")
"IX",801.41,801.41,"R",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"R",11.1,1,0)
1^F^801.41^118^^1^F
"IX",801.41,801.41,"RG",0)
801.41^RG^Whole-file regular 'RG' index^R^^F^IR^W^801.41121^^^^^LS
"IX",801.41,801.41,"RG",.1,0)
^^7^7^3091201
"IX",801.41,801.41,"RG",.1,1,0)
This RG cross-reference is created when a result group is assigned 
"IX",801.41,801.41,"RG",.1,2,0)
to a parent element. It is killed when a result group is deleted 
"IX",801.41,801.41,"RG",.1,3,0)
from a parent element. This cross-reference is used to determine 
"IX",801.41,801.41,"RG",.1,4,0)
if a result group is used by a parent element for reporting 
"IX",801.41,801.41,"RG",.1,5,0)
purposes. If a result group is included in this cross-reference then 
"IX",801.41,801.41,"RG",.1,6,0)
it is assigned to a parent element and accordingly the result group 
"IX",801.41,801.41,"RG",.1,7,0)
cannot be deleted.
"IX",801.41,801.41,"RG",1)
S ^PXRMD(801.41,"RG",X,DA(1),DA)=""
"IX",801.41,801.41,"RG",2)
K ^PXRMD(801.41,"RG",X,DA(1),DA)
"IX",801.41,801.41,"RG",2.5)
K ^PXRMD(801.41,"RG")
"IX",801.41,801.41,"RG",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"RG",11.1,1,0)
1^F^801.41121^.01^^1^F
"IX",802.4,802.4,"B",0)
802.4^B^This is a new-style B cross-reference^R^^F^IR^I^802.4^^^^^LS
"IX",802.4,802.4,"B",1)
S ^PXRMD(802.4,"B",$E(X,1,30),DA)=""
"IX",802.4,802.4,"B",2)
K ^PXRMD(802.4,"B",$E(X,1,30),DA)
"IX",802.4,802.4,"B",2.5)
K ^PXRMD(802.4,"B")
"IX",802.4,802.4,"B",11.1,0)
^.114IA^1^1
"IX",802.4,802.4,"B",11.1,1,0)
1^F^802.4^.01^30^1^F
"IX",811.2,811.2,"APDS",0)
811.2^APDS^Build the list of patient data source (PDS) nodes.^MU^^F^IR^I^811.2^^^^^A
"IX",811.2,811.2,"APDS",1)
D SPDS^PXRMPDS(DA,X2)
"IX",811.2,811.2,"APDS",1.4)

"IX",811.2,811.2,"APDS",2)
D SPDS^PXRMPDS(DA,X2)
"IX",811.2,811.2,"APDS",2.4)

"IX",811.2,811.2,"APDS",11.1,0)
^.114IA^1^1
"IX",811.2,811.2,"APDS",11.1,1,0)
1^F^811.2^4^^^F
"IX",811.2,811.2,"B",0)
811.2^B^New style B cross-reference^R^^F^IR^I^811.2^^^^^LS
"IX",811.2,811.2,"B",1)
S ^PXD(811.2,"B",$E(X,1,64),DA)=""
"IX",811.2,811.2,"B",2)
K ^PXD(811.2,"B",$E(X,1,64),DA)
"IX",811.2,811.2,"B",2.5)
K ^PXD(811.2,"B")
"IX",811.2,811.2,"B",11.1,0)
^.114IA^1^1
"IX",811.2,811.2,"B",11.1,1,0)
1^F^811.2^.01^64^1^F
"IX",811.2,811.22102,"AD",0)
811.22102^AD^Whenever ICD9 entries are edited, rebuild expanded taxonomy^MU^^R^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AD",1)
D TAXEDIT^PXRMTAXD(DA(1),"")
"IX",811.2,811.22102,"AD",2)
D TAXEDIT^PXRMTAXD(DA(1),DA)
"IX",811.2,811.22102,"AD",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22102,"AD",2.5)
D TAXKILL^PXRMTAXD(DA(1))
"IX",811.2,811.22102,"AD",11.1,0)
^.114IA^2^2
"IX",811.2,811.22102,"AD",11.1,1,0)
1^F^811.22102^.01^^^F
"IX",811.2,811.22102,"AD",11.1,2,0)
2^F^811.22102^1^^^F
"IX",811.2,811.22102,"AICD9N",0)
811.22102^AICD9N^Populate the ICD9 ADJACENT HIGHER CODE field^MU^^F^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AICD9N",1)
S $P(^PXD(811.2,DA(1),80,DA,0),U,4)=$$NEXT^ICDAPIU(X)
"IX",811.2,811.22102,"AICD9N",2)
S $P(^PXD(811.2,DA(1),80,DA,0),U,4)=""
"IX",811.2,811.22102,"AICD9N",11.1,0)
^.114IA^1^1
"IX",811.2,811.22102,"AICD9N",11.1,1,0)
1^F^811.22102^1^^1^F
"IX",811.2,811.22102,"AICD9P",0)
811.22102^AICD9P^Populate the ICD9 ADJACENT LOWER CODE FIELD^MU^^F^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AICD9P",1)
S $P(^PXD(811.2,DA(1),80,DA,0),U,3)=$$PREV^ICDAPIU(X)
"IX",811.2,811.22102,"AICD9P",2)
S $P(^PXD(811.2,DA(1),80,DA,0),U,3)=""
"IX",811.2,811.22102,"AICD9P",11.1,0)
^.114IA^1^1
"IX",811.2,811.22102,"AICD9P",11.1,1,0)
1^F^811.22102^.01^^1^F
"IX",811.2,811.22103,"AC",0)
811.22103^AC^Whenever ICD0 entries are changed, rebuild the expanded taxonomy^MU^^R^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AC",1)
D TAXEDIT^PXRMTAXD(DA(1),"")
"IX",811.2,811.22103,"AC",2)
D TAXEDIT^PXRMTAXD(DA(1),DA)
"IX",811.2,811.22103,"AC",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22103,"AC",2.5)
D TAXKILL^PXRMTAXD(DA(1))
"IX",811.2,811.22103,"AC",11.1,0)
^.114IA^2^2
"IX",811.2,811.22103,"AC",11.1,1,0)
1^F^811.22103^.01^^^F
"IX",811.2,811.22103,"AC",11.1,2,0)
2^F^811.22103^1^^^F
"IX",811.2,811.22103,"AICD0N",0)
811.22103^AICD0N^Populate the ICD0 ADJACENT HIGHER CODE field^MU^^F^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AICD0N",1)
S $P(^PXD(811.2,DA(1),80.1,DA,0),U,4)=$$NEXT^ICDAPIU(X)
"IX",811.2,811.22103,"AICD0N",2)
S $P(^PXD(811.2,DA(1),80.1,DA,0),U,4)=""
"IX",811.2,811.22103,"AICD0N",11.1,0)
^.114IA^1^1
"IX",811.2,811.22103,"AICD0N",11.1,1,0)
1^F^811.22103^1^^1^F
"IX",811.2,811.22103,"AICD0P",0)
811.22103^AICD0P^Populate the ICD0 ADJACENT LOWER CODE field^MU^^F^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AICD0P",1)
S $P(^PXD(811.2,DA(1),80.1,DA,0),U,3)=$$PREV^ICDAPIU(X)
"IX",811.2,811.22103,"AICD0P",2)
S $P(^PXD(811.2,DA(1),80.1,DA,0),U,3)=""
"IX",811.2,811.22103,"AICD0P",11.1,0)
^.114IA^1^1
"IX",811.2,811.22103,"AICD0P",11.1,1,0)
1^F^811.22103^.01^^1^F
"IX",811.2,811.22104,"ACPTN",0)
811.22104^ACPTN^Populate the CPT ADJACENT HIGHER CODE field^MU^^F^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"ACPTN",1)
S $P(^PXD(811.2,DA(1),81,DA,0),U,4)=$$NEXT^ICPTAPIU(X)
"IX",811.2,811.22104,"ACPTN",2)
S $P(^PXD(811.2,DA(1),81,DA,0),U,4)=""
"IX",811.2,811.22104,"ACPTN",11.1,0)
^.114IA^1^1
"IX",811.2,811.22104,"ACPTN",11.1,1,0)
1^F^811.22104^1^^1^F
"IX",811.2,811.22104,"ACPTP",0)
811.22104^ACPTP^Populate the CPT ADJACENT LOWER CODE field^MU^^F^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"ACPTP",1)
S $P(^PXD(811.2,DA(1),81,DA,0),U,3)=$$PREV^ICPTAPIU(X)
"IX",811.2,811.22104,"ACPTP",2)
S $P(^PXD(811.2,DA(1),81,DA,0),U,3)=""
"IX",811.2,811.22104,"ACPTP",11.1,0)
^.114IA^1^1
"IX",811.2,811.22104,"ACPTP",11.1,1,0)
1^F^811.22104^.01^^1^F
"IX",811.2,811.22104,"AE",0)
811.22104^AE^Whenever CPT entries are changed, rebuild the expanded taxonomy^MU^^R^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"AE",1)
D TAXEDIT^PXRMTAXD(DA(1),"")
"IX",811.2,811.22104,"AE",2)
D TAXEDIT^PXRMTAXD(DA(1),DA)
"IX",811.2,811.22104,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22104,"AE",2.5)
D TAXKILL^PXRMTAXD(DA(1))
"IX",811.2,811.22104,"AE",11.1,0)
^.114IA^2^2
"IX",811.2,811.22104,"AE",11.1,1,0)
1^F^811.22104^.01^^^F
"IX",811.2,811.22104,"AE",11.1,2,0)
2^F^811.22104^1^^^F
"IX",811.2,811.23,"AE",0)
811.23^AE^Coding system and code index.^MU^^F^IR^W^811.2312^^^^^A
"IX",811.2,811.23,"AE",.1,0)
^^9^9^3121029^^^^
"IX",811.2,811.23,"AE",.1,1,0)
This index is used for taxonomy evaluation. It has the form:
"IX",811.2,811.23,"AE",.1,2,0)
^PXD(811.2,IEN,20,"AE",CODING SYSTEM,CODE)=code or code pointer
"IX",811.2,811.23,"AE",.1,3,0)
where coding system is one of the standard three-character
"IX",811.2,811.23,"AE",.1,4,0)
abbreviations as defined in the Coding Systems file, #757.03. Code
"IX",811.2,811.23,"AE",.1,5,0)
pointer is used for the coding systems CPT, ICD, and ICP, so it is
"IX",811.2,811.23,"AE",.1,6,0)
compatible with the previously stored values in the Clinical
"IX",811.2,811.23,"AE",.1,7,0)
Reminders Index. Code is used for all other coding systems.
"IX",811.2,811.23,"AE",.1,8,0)

"IX",811.2,811.23,"AE",.1,9,0)

"IX",811.2,811.23,"AE",1)
D SENODE^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"AE",2)
D KENODE^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"AE",2.5)
K ^PXD(811.2,DA(3),20,"AE")
"IX",811.2,811.23,"AE",11.1,0)
^.114IA^1^1
"IX",811.2,811.23,"AE",11.1,1,0)
1^F^811.2312^.01^^^F
"IX",811.2,811.23,"ATC",0)
811.23^ATC^Term/Code and coding system index.^MU^^F^IR^W^811.231^^^^^A
"IX",811.2,811.23,"ATC",.1,0)
^^4^4^3121026^^
"IX",811.2,811.23,"ATC",.1,1,0)
This index is used to facilitate display and editing of codes in a
"IX",811.2,811.23,"ATC",.1,2,0)
taxonomy.
"IX",811.2,811.23,"ATC",.1,3,0)

"IX",811.2,811.23,"ATC",.1,4,0)

"IX",811.2,811.23,"ATC",1)
D STC^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"ATC",2)
D KTC^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"ATC",2.5)
K ^PXD(811.2,DA(2),20,"ATC")
"IX",811.2,811.23,"ATC",11.1,0)
^.114IA^1^1
"IX",811.2,811.23,"ATC",11.1,1,0)
1^F^811.231^.01^^1^F
"IX",811.2,811.23,"ATCC",0)
811.23^ATCC^Term/code, coding system, and code index^MU^^R^IR^W^811.2312^^^^^A
"IX",811.2,811.23,"ATCC",.1,0)
^^3^3^3120914^
"IX",811.2,811.23,"ATCC",.1,1,0)
This index is used to facilitate display and editing of codes in a
"IX",811.2,811.23,"ATCC",.1,2,0)
taxonomy.
"IX",811.2,811.23,"ATCC",.1,3,0)

"IX",811.2,811.23,"ATCC",1)
D STCC^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"ATCC",2)
D KTCC^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"ATCC",2.5)
K ^PXD(811.2,DA(3),20,"ATCC")
"IX",811.2,811.23,"ATCC",11.1,0)
^.114IA^2^2
"IX",811.2,811.23,"ATCC",11.1,1,0)
1^F^811.2312^.01^^^F
"IX",811.2,811.23,"ATCC",11.1,2,0)
2^F^811.2312^1^^^F
"IX",811.2,811.23,"AUID",0)
811.23^AUID^Use in Dialog index.^MU^^R^IR^W^811.2312^^^^^A
"IX",811.2,811.23,"AUID",.1,0)
^^8^8^3121029^^^
"IX",811.2,811.23,"AUID",.1,1,0)
This index is used for reminder dialog processing. It has the form:
"IX",811.2,811.23,"AUID",.1,2,0)
^PXD(811.2,IEN,20,"AUID",CODING SYSTEM,CODE,ACTIVATION
"IX",811.2,811.23,"AUID",.1,3,0)
DATE,INACTIVATION DATE)=CODE POINTER^SHORT DESCRIPTION
"IX",811.2,811.23,"AUID",.1,4,0)
where coding system is one of the standard three-character
"IX",811.2,811.23,"AUID",.1,5,0)
abbreviations as defined in the Coding Systems file, #757.03. If
"IX",811.2,811.23,"AUID",.1,6,0)
there is no Inactivation Date, then "DT" is used instead.
"IX",811.2,811.23,"AUID",.1,7,0)

"IX",811.2,811.23,"AUID",.1,8,0)

"IX",811.2,811.23,"AUID",1)
D SUID^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"AUID",2)
D KUID^PXRMTAXD(.DA,.X)
"IX",811.2,811.23,"AUID",2.5)

"IX",811.2,811.23,"AUID",11.1,0)
^.114IA^2^2
"IX",811.2,811.23,"AUID",11.1,1,0)
1^F^811.2312^.01^^1^F
"IX",811.2,811.23,"AUID",11.1,2,0)
2^F^811.2312^1^^2^F
"IX",811.2,811.23,"B",0)
811.23^B^"B" index for TERM/CODE^R^^F^IR^I^811.23^^^^^LS
"IX",811.2,811.23,"B",1)
S ^PXD(811.2,DA(1),20,"B",$E(X,1,240),DA)=""
"IX",811.2,811.23,"B",2)
K ^PXD(811.2,DA(1),20,"B",$E(X,1,240),DA)
"IX",811.2,811.23,"B",2.5)
K ^PXD(811.2,DA(1),20,"B")
"IX",811.2,811.23,"B",11.1,0)
^.114IA^1^1
"IX",811.2,811.23,"B",11.1,1,0)
1^F^811.23^.01^240^1^F
"IX",811.2,811.24,"AUIDC",0)
811.24^AUIDC^Synchronize the USE IN DIALOGS CODES multiple with the SELECTED CODES multiple.^MU^^R^IR^I^811.24^^^^^A
"IX",811.2,811.24,"AUIDC",.1,0)
^^7^7^3131101^^
"IX",811.2,811.24,"AUIDC",.1,1,0)
This cross-reference is used to automatically synchronize the USE IN
"IX",811.2,811.24,"AUIDC",.1,2,0)
DIALOG CODES multiple with the SELECTED CODES multiple. If a code is
"IX",811.2,811.24,"AUIDC",.1,3,0)
added to the USE IN DIALOG CODES multiple and it already exists in the
"IX",811.2,811.24,"AUIDC",.1,4,0)
SELECTED CODES multiple the code is marked as Use In Dialog. If it does
"IX",811.2,811.24,"AUIDC",.1,5,0)
not already exist, a new entry is created in the SELECTED CODES multiple
"IX",811.2,811.24,"AUIDC",.1,6,0)
where the TERM/CODE field is set to the code.
"IX",811.2,811.24,"AUIDC",.1,7,0)

"IX",811.2,811.24,"AUIDC",1)
D SUIDC^PXRMTAXD(.DA,.X)
"IX",811.2,811.24,"AUIDC",2)
D KUIDC^PXRMTAXD(.DA,.X)
"IX",811.2,811.24,"AUIDC",11.1,0)
^.114IA^2^2
"IX",811.2,811.24,"AUIDC",11.1,1,0)
1^F^811.24^.01^^1^F
"IX",811.2,811.24,"AUIDC",11.1,2,0)
2^F^811.24^1^^2^F
"IX",811.4,811.4,"B",0)
811.4^B^New style B cross-reference^R^^F^IR^I^811.4^^^^^LS
"IX",811.4,811.4,"B",1)
S ^PXRMD(811.4,"B",$E(X,1,64),DA)=""
"IX",811.4,811.4,"B",2)
K ^PXRMD(811.4,"B",$E(X,1,64),DA)
"IX",811.4,811.4,"B",2.5)
K ^PXRMD(811.4,"B")
"IX",811.4,811.4,"B",11.1,0)
^.114IA^1^1
"IX",811.4,811.4,"B",11.1,1,0)
1^F^811.4^.01^64^1^F
"IX",811.8,811.8,"B",0)
811.8^B^Uniqueness Index for Key 'A' of File #811.8^R^^R^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"B",1)
S ^PXD(811.8,"B",X(1),X(2),DA)=""
"IX",811.8,811.8,"B",2)
K ^PXD(811.8,"B",X(1),X(2),DA)
"IX",811.8,811.8,"B",2.5)
K ^PXD(811.8,"B")
"IX",811.8,811.8,"B",11.1,0)
^.114IA^2^2
"IX",811.8,811.8,"B",11.1,1,0)
1^F^811.8^.01^^1
"IX",811.8,811.8,"B",11.1,2,0)
2^F^811.8^.03^^2
"IX",811.8,811.8,"D",0)
811.8^D^Cross-reference on date and time^R^^F^IR^I^811.8^^^^^LS
"IX",811.8,811.8,"D",1)
S ^PXD(811.8,"D",X,DA)=""
"IX",811.8,811.8,"D",2)
K ^PXD(811.8,"D",X,DA)
"IX",811.8,811.8,"D",2.5)
K ^PXD(811.8,"D")
"IX",811.8,811.8,"D",11.1,0)
^.114IA^1^1
"IX",811.8,811.8,"D",11.1,1,0)
1^F^811.8^.03^^1^F
"IX",811.8,811.8,"D",11.1,1,3)

"IX",811.8,811.803,"B",0)
811.803^B^New style B cross-reference^R^^F^IR^I^811.803^^^^^LS
"IX",811.8,811.803,"B",1)
S ^PXD(811.8,DA(1),130,"B",X,DA)=""
"IX",811.8,811.803,"B",2)
K ^PXD(811.8,DA(1),130,"B",X,DA)
"IX",811.8,811.803,"B",2.5)
K ^PXD(811.8,DA(1),130,"B")
"IX",811.8,811.803,"B",11.1,0)
^.114IA^1^1
"IX",811.8,811.803,"B",11.1,1,0)
1^F^811.803^.01^^1^F
"KEY",801.41,801.41,"B",0)
801.41^B^P^1036
"KEY",801.41,801.41,"B",2,0)
^.312IA^1^1
"KEY",801.41,801.41,"B",2,1,0)
.01^801.41^1
"KEY",802.4,802.4,"A",0)
802.4^A^P^1039
"KEY",802.4,802.4,"A",2,0)
^.312IA^1^1
"KEY",802.4,802.4,"A",2,1,0)
.01^802.4^1
"KEY",811.2,811.2,"A",0)
811.2^A^P^1048
"KEY",811.2,811.2,"A",2,0)
^.312IA^1^1
"KEY",811.2,811.2,"A",2,1,0)
.01^811.2^1
"KEY",811.2,811.23,"A",0)
811.23^A^P^1097
"KEY",811.2,811.23,"A",2,0)
^.312IA^1^1
"KEY",811.2,811.23,"A",2,1,0)
.01^811.23^1
"KEY",811.4,811.4,"A",0)
811.4^A^P^1040
"KEY",811.4,811.4,"A",2,0)
^.312IA^1^1
"KEY",811.4,811.4,"A",2,1,0)
.01^811.4^1
"KEY",811.8,811.8,"A",0)
811.8^A^P^832
"KEY",811.8,811.8,"A",2,0)
^.312IA^2^2
"KEY",811.8,811.8,"A",2,1,0)
.01^811.8^1
"KEY",811.8,811.8,"A",2,2,0)
.03^811.8^2
"KEYPTR",801.41,801.41,"B")
801.41^B
"KEYPTR",802.4,802.4,"A")
802.4^B
"KEYPTR",811.2,811.2,"A")
811.2^B
"KEYPTR",811.2,811.23,"A")
811.23^B
"KEYPTR",811.4,811.4,"A")
811.4^B
"KEYPTR",811.8,811.8,"A")
811.8^B
"KRN",.4,2564,-1)
0^1
"KRN",.4,2564,0)
PXRM COMPUTED FINDING INQUIRY^3130208.1346^@^811.4^^@^3130208
"KRN",.4,2564,"F",1)
.01;C1;X~"No.";C66~0;C70;X;L11~"--------------------------------------------------------------------------------";C1~"Print Name:";C1;S1~.04;C25;X~
"KRN",.4,2564,"F",2)
"Type:";C1;S1~5;C25;X~"Class:";C1;S1~100;C25;X~"Sponsor:";C1;S1~101;C25;X~"Review Date:";C1;S1~102;C25;X~"Description:";C1;S1~1,.01;C3;X;S1~
"KRN",.4,2564,"F",3)
"Edit History:";C1;S1~110,"Edit Date:";C5;S1~110,.01;C16;X~110,"Edit By:";C41~110,1;C50;X~110,"Edit Comments:";C5~110,2,.01~"Entry Point:";C1;S1~
"KRN",.4,2564,"F",4)
.03;C14~"Routine:";C25;X~.02;C37~
"KRN",.4,2564,"H")
REMINDER COMPUTED FINDINGS LIST
"KRN",.402,2055,-1)
0^1
"KRN",.402,2055,0)
PXRM EDIT ELEMENT^3130703.1136^@^801.41^^@^3140623
"KRN",.402,2055,"DIAB",2,1,801.412,0)
ITEM;"ADDITIONAL PROMPT/FORCED VALUE"
"KRN",.402,2055,"DIAB",11,0,801.41,1)
PROMPT CAPTION;"VITALS PROMPT CAPTION"
"KRN",.402,2055,"DR",1,801.41)
N FIND,TAXDEF,TAXVAL,TAXSEL,PXRMNSCR;S PXRMNSCR=1;.01;3;100;101;102;13;17;S X=$$INPUT^PXRMDLFI(DA);I X=U S Y="@32";S FIND=X;S:X'["YTT(601.71" Y=25 S:X["GMRD(120.51" Y=24 S:X["PXD(811.2" Y="@50";D RESCHK^PXRMDLG5(DA);
"KRN",.402,2055,"DR",1,801.41,1)
I $G(RGKILL) K RGKILL,Y;@20;121;54;113;S Y=25;@50;S TAXSEL=$$TAXDIAL^PXRMDTAX(DA,FIND);S:TAXSEL[U Y="@55";S Y="@55";24VITALS PROMPT CAPTION~;@55;25;35;D PIPECHK^PXRMDLG6(DA);23;51;10;@28;D OTERM^PXRMDLG5(.DA);116;
"KRN",.402,2055,"DR",1,801.41,2)
S X=$$NTERM^PXRMDLG5(.DA,$G(OTERM),X);S Y=$S(X=0:"@30",X=1:"@29",X=2:"@31");@29;117;S X=$$TERMS^PXRMDLG5(.DA,X);S:+X=0 Y="@28" S:+X=2 Y="@32";118;S Y="@32";@30;117////@;118////@;S Y="@29";@31;117////@;118////@;@32;
"KRN",.402,2055,"DR",2,801.41121)
.01;
"KRN",.402,2055,"DR",2,801.412)
.01;2ADDITIONAL PROMPT/FORCED VALUE~;6;7;8;9;
"KRN",.402,2057,-1)
0^2
"KRN",.402,2057,0)
PXRM EDIT GROUP^3130305.1441^@^801.41^^@^3140617
"KRN",.402,2057,"DIAB",2,1,801.412,0)
ITEM;"DIALOG ELEMENT"
"KRN",.402,2057,"DIAB",3,0,801.41,1)
CAPTION;"GROUP CAPTION"
"KRN",.402,2057,"DIAB",4,0,801.41,1)
BOX;"PUT A BOX AROUND THE GROUP"
"KRN",.402,2057,"DIAB",5,0,801.41,1)
SHARE COMMON PROMPTS;"SHARE COMMON PROMPTS"
"KRN",.402,2057,"DIAB",6,0,801.41,1)
GROUP ENTRY;"MULTIPLE SELECTION"
"KRN",.402,2057,"DIAB",8,0,801.41,1)
DIALOG/PROGRESS NOTE TEXT;"GROUP HEADER DIALOG TEXT"
"KRN",.402,2057,"DIAB",9,0,801.41,1)
ALTERNATE PROGRESS NOTE TEXT;"GROUP HEADER ALTERNATE P/N TEXT"
"KRN",.402,2057,"DIAB",14,0,801.41,0)
PROMPT CAPTION;"VITALS PROMPT CAPTION"
"KRN",.402,2057,"DR",1,801.41)
N TAXSEL,PXRMNSCR;S PXRMNSCR=1;.01;3;100;101;102;13;17;S X=$$INPUT^PXRMDLFI(DA);I X=U S Y="@32";S FIND=X;S:X'["GMRD(120.51" Y=5 S:X["PXD(811.2" Y="@50";24VITALS PROMPT CAPTION~;S Y=5;@50;S TAXSEL=$$TAXDIAL^PXRMDTAX(DA,FIND);
"KRN",.402,2057,"DR",1,801.41,1)
S:TAXSEL=0 Y="@55";@55;5GROUP CAPTION~;6PUT A BOX AROUND THE GROUP~;8SHARE COMMON PROMPTS~;9MULTIPLE SELECTION~;50;25GROUP HEADER DIALOG TEXT~;35GROUP HEADER ALTERNATE P/N TEXT~;D PIPECHK^PXRMDLG6(DA);23;51;7;52;10;@28;
"KRN",.402,2057,"DR",1,801.41,2)
D OTERM^PXRMDLG5(.DA);116;S X=$$NTERM^PXRMDLG5(.DA,$G(OTERM),X);S Y=$S(X=0:"@30",X=1:"@29",X=2:"@31");@29;117;S X=$$TERMS^PXRMDLG5(.DA,X);S:+X=0 Y="@28" S:+X=2 Y="@32";118;S Y="@32";@30;117////@;118////@;S Y="@29";@31;117////@;
"KRN",.402,2057,"DR",1,801.41,3)
118////@;@32;
"KRN",.402,2057,"DR",2,801.412)
.01;2DIALOG ELEMENT~;8;
"KRN",.402,2140,-1)
0^3
"KRN",.402,2140,0)
PXRM EDIT NATIONAL DIALOG^3130305.1441^@^801.41^^@^3140623
"KRN",.402,2140,"DIAB",1,1,801.4118,0)
ALL
"KRN",.402,2140,"DR",1,801.41)
N PXRMNSCR;S PXRMNSCR=1;15;18;
"KRN",.402,2140,"DR",2,801.4118)
.01
"KRN",.403,123,-1)
0^1
"KRN",.403,123,0)
PXRM TAXONOMY EDIT^@^@^^3120228.1134^^^811.2^0^0^1
"KRN",.403,123,12)
D POSTACT^PXRMTXSM(D0)
"KRN",.403,123,14)
D POSTSAVE^PXRMTXSM(D0)
"KRN",.403,123,40,0)
^.4031I^3^3
"KRN",.403,123,40,1,0)
1^^1,1
"KRN",.403,123,40,1,1)
Page 1
"KRN",.403,123,40,1,40,0)
^.4032IP^465^2
"KRN",.403,123,40,1,40,462,0)
PXRM TAXONOMY MAIN BLOCK^1^1,1^e
"KRN",.403,123,40,1,40,465,0)
PXRM TAXONOMY LEXICON^2^7,1^e
"KRN",.403,123,40,1,40,465,2)
5^^n
"KRN",.403,123,40,2,0)
2^^1,1^^^1^15,75
"KRN",.403,123,40,2,1)
Page 2
"KRN",.403,123,40,2,40,0)
^.4032IP^463^1
"KRN",.403,123,40,2,40,463,0)
PXRM LEX SELECT^1^2,2^e
"KRN",.403,123,40,2,40,463,2)
5
"KRN",.403,123,40,3,0)
20^^1,1^^^1^15,75
"KRN",.403,123,40,3,1)
Page 20
"KRN",.403,123,40,3,40,0)
^.4032IP^464^1
"KRN",.403,123,40,3,40,464,0)
PXRM TAXONOMY CODE LIST^1^1,2^e
"KRN",.403,133,-1)
0^2
"KRN",.403,133,0)
PXRM TAXONOMY CHANGE LOG^@^@^^3121005.1318^^^811.2^0^0^1
"KRN",.403,133,40,0)
^.4031I^1^1
"KRN",.403,133,40,1,0)
1^^1,1
"KRN",.403,133,40,1,1)
Page 1
"KRN",.403,133,40,1,40,0)
^.4032IP^490^1
"KRN",.403,133,40,1,40,490,0)
PXRM TAXONOMY CHANGE LOG^1^1,1^e
"KRN",.403,135,-1)
0^3
"KRN",.403,135,0)
PXRM DIALOG TAXONOMY EDIT^@^@^^3130711.1045^^^811.2^0^0^1
"KRN",.403,135,14)

"KRN",.403,135,40,0)
^.4031I^1^1
"KRN",.403,135,40,1,0)
1^^1,1
"KRN",.403,135,40,1,1)
Page 1
"KRN",.403,135,40,1,40,0)
^.4032IP^496^2
"KRN",.403,135,40,1,40,495,0)
PXRM DIALOG TAXONOMY MAIN^1^1,1^e
"KRN",.403,135,40,1,40,496,0)
PXRM DIALOG TAXONOMY CODES^2^8,1^e
"KRN",.403,135,40,1,40,496,2)
5^^n^^^
"KRN",.404,462,0)
PXRM TAXONOMY MAIN BLOCK^811.2
"KRN",.404,462,40,0)
^.4044I^13^11
"KRN",.404,462,40,1,0)
1^NAME^3
"KRN",.404,462,40,1,1)
.01
"KRN",.404,462,40,1,2)
1,7^64^1,1
"KRN",.404,462,40,4,0)
7^Term/Code^1^^
"KRN",.404,462,40,4,2)
^^7,2
"KRN",.404,462,40,5,0)
8^Selected Codes (CSYS:QTY[:NUID])^1
"KRN",.404,462,40,5,2)
^^7,49
"KRN",.404,462,40,6,0)
2^!M^3^^DESCRIPTION
"KRN",.404,462,40,6,.1)
S Y=$$WPECAP^PXRMSMAN(811.2,DA,"DESCRIPTION",63)
"KRN",.404,462,40,6,1)
2
"KRN",.404,462,40,6,2)
2,13^1^2,1^1
"KRN",.404,462,40,6,11)
D HLP^DDSUTL("Press Enter to edit the Description.")
"KRN",.404,462,40,7,0)
3^PATIENT DATA SOURCE^3
"KRN",.404,462,40,7,1)
4
"KRN",.404,462,40,7,2)
3,22^40^3,1
"KRN",.404,462,40,8,0)
4^USE INACTIVE PROBLEMS^3
"KRN",.404,462,40,8,1)
10
"KRN",.404,462,40,8,2)
4,24^3^4,1
"KRN",.404,462,40,8,11)
D FSOC^PXRMSMAN(811.2,10)
"KRN",.404,462,40,9,0)
6^INACTIVE FLAG^3
"KRN",.404,462,40,9,1)
1.6
"KRN",.404,462,40,9,2)
5,16^8^5,1
"KRN",.404,462,40,9,11)
D FSOC^PXRMSMAN(811.2,1.6)
"KRN",.404,462,40,10,0)
9^CLASS^3
"KRN",.404,462,40,10,1)
100
"KRN",.404,462,40,10,2)
14,8^8^14,1
"KRN",.404,462,40,10,3)
L
"KRN",.404,462,40,10,11)
D FSOC^PXRMSMAN(811.2,100)
"KRN",.404,462,40,11,0)
10^SPONSOR^3
"KRN",.404,462,40,11,1)
101
"KRN",.404,462,40,11,2)
15,10^70^15,1
"KRN",.404,462,40,11,14)
D VSPON^PXRMSMAN(811.2,.DA,X,.DDSERROR)
"KRN",.404,462,40,12,0)
11^REVIEW DATE^3
"KRN",.404,462,40,12,1)
102
"KRN",.404,462,40,12,2)
16,14^11^16,1
"KRN",.404,462,40,13,0)
5^PRIORITY LIST^3
"KRN",.404,462,40,13,1)
15
"KRN",.404,462,40,13,2)
4,44^3^4,29
"KRN",.404,463,0)
PXRM LEX SELECT^811.2
"KRN",.404,464,0)
PXRM TAXONOMY CODE LIST^811.232
"KRN",.404,464,40,0)
^.4044I^8^8
"KRN",.404,464,40,1,0)
2^ICD-10-CM diagnosis code search^2^^10D
"KRN",.404,464,40,1,.1)

"KRN",.404,464,40,1,2)
3,35^1^3,2
"KRN",.404,464,40,1,4)
^^^2
"KRN",.404,464,40,1,10)
D LEXSRCH^PXRMTXSM(.DA,"10D")
"KRN",.404,464,40,1,11)
D HLP^DDSUTL("Press Enter to search for ICD-10-CM diagnosis codes.")
"KRN",.404,464,40,1,12)
D PUT^DDSVALF("10D","","","")
"KRN",.404,464,40,1,20)
F
"KRN",.404,464,40,2,0)
1^!M^1
"KRN",.404,464,40,2,.1)
S Y=$$EXETCCAP^PXRMTXSM(.DA)
"KRN",.404,464,40,2,2)
^^1,1
"KRN",.404,464,40,3,0)
3^ICD-9-CM diagnosis code search^2^^ICD
"KRN",.404,464,40,3,.1)

"KRN",.404,464,40,3,2)
4,35^1^4,3
"KRN",.404,464,40,3,4)
^^^2
"KRN",.404,464,40,3,10)
D LEXSRCH^PXRMTXSM(.DA,"ICD")
"KRN",.404,464,40,3,11)
D HLP^DDSUTL("Press Enter to search for ICD-9-CM diagnosis codes.")
"KRN",.404,464,40,3,12)
D PUT^DDSVALF("ICD","","","")
"KRN",.404,464,40,3,20)
F
"KRN",.404,464,40,4,0)
4^SNOMED CT code search^2^^SCT
"KRN",.404,464,40,4,2)
6,25^1^6,2
"KRN",.404,464,40,4,4)
^^^2
"KRN",.404,464,40,4,10)
D LEXSRCH^PXRMTXSM(.DA,"SCT")
"KRN",.404,464,40,4,11)
D HLP^DDSUTL("Press Enter to search for SNOMED CT codes.")
"KRN",.404,464,40,4,12)
D PUT^DDSVALF("SCT","","","")
"KRN",.404,464,40,4,20)
F
"KRN",.404,464,40,5,0)
5^ICD-10 procedure code search^2^^10P
"KRN",.404,464,40,5,.1)

"KRN",.404,464,40,5,2)
8,32^1^8,2
"KRN",.404,464,40,5,4)
^^^2
"KRN",.404,464,40,5,10)
D LEXSRCH^PXRMTXSM(.DA,"10P")
"KRN",.404,464,40,5,11)
D HLP^DDSUTL("Press Enter to search for ICD-10 procedure codes.")
"KRN",.404,464,40,5,12)
D PUT^DDSVALF("10P","","","")
"KRN",.404,464,40,5,20)
F
"KRN",.404,464,40,6,0)
6^ICD-9 procedure code search^2^^ICP
"KRN",.404,464,40,6,.1)

"KRN",.404,464,40,6,2)
9,32^1^9,3
"KRN",.404,464,40,6,4)
^^^2
"KRN",.404,464,40,6,10)
D LEXSRCH^PXRMTXSM(.DA,"ICP")
"KRN",.404,464,40,6,11)
D HLP^DDSUTL("Press Enter to search for ICD-9 procedure codes.")
"KRN",.404,464,40,6,12)
D PUT^DDSVALF("ICP","","","")
"KRN",.404,464,40,6,20)
F
"KRN",.404,464,40,7,0)
7^CPT-4 code search^2^^CPT
"KRN",.404,464,40,7,2)
10,27^1^10,8
"KRN",.404,464,40,7,4)
^^^2
"KRN",.404,464,40,7,10)
D LEXSRCH^PXRMTXSM(.DA,"CPT")
"KRN",.404,464,40,7,11)
D HLP^DDSUTL("Press Enter to search for CPT-4 codes.")
"KRN",.404,464,40,7,12)
D PUT^DDSVALF("CPT","","","")
"KRN",.404,464,40,7,20)
F
"KRN",.404,464,40,8,0)
8^HCPCS code search^2^^CPC
"KRN",.404,464,40,8,2)
11,27^1^11,8
"KRN",.404,464,40,8,10)
D LEXSRCH^PXRMTXSM(.DA,"CPC")
"KRN",.404,464,40,8,11)
D HLP^DDSUTL("Press Enter to search for HCPCS codes.")
"KRN",.404,464,40,8,12)
D PUT^DDSVALF("CPC","","","")
"KRN",.404,464,40,8,20)
F
"KRN",.404,465,0)
PXRM TAXONOMY LEXICON^811.23
"KRN",.404,465,40,0)
^.4044I^3^2
"KRN",.404,465,40,2,0)
1^^3^^LEXICON TERM/CODE
"KRN",.404,465,40,2,1)
.01
"KRN",.404,465,40,2,2)
2,2^45
"KRN",.404,465,40,2,10)
S DDSSTACK="20"
"KRN",.404,465,40,2,13)
D LTCPAOC^PXRMTXSM(.DA)
"KRN",.404,465,40,3,0)
2^!M^1^^NUMCODES
"KRN",.404,465,40,3,.1)
S Y=$$NUMCODES^PXRMTXSM(.DA)
"KRN",.404,465,40,3,2)
^^2,49
"KRN",.404,490,0)
PXRM TAXONOMY CHANGE LOG^811.21
"KRN",.404,490,40,0)
^.4044I^3^3
"KRN",.404,490,40,1,0)
1^Change Log^1
"KRN",.404,490,40,1,2)
^^1,32
"KRN",.404,490,40,2,0)
2^!M^1
"KRN",.404,490,40,2,.1)
S Y="Edit by: "_$$GET^DDSVAL(811.21,.DA,1,,"E")_" on "_$$FMTE^XLFDT($$GET^DDSVAL(811.21,.DA,.01,,"I"),"5Z")
"KRN",.404,490,40,2,2)
^^3,1
"KRN",.404,490,40,3,0)
3^^3
"KRN",.404,490,40,3,1)
2
"KRN",.404,490,40,3,2)
5,1^1
"KRN",.404,490,40,3,11)
D HLP^DDSUTL("Press Enter to add a description of the changes made.")
"KRN",.404,495,0)
PXRM DIALOG TAXONOMY MAIN^811.2
"KRN",.404,495,40,0)
^.4044I^11^11
"KRN",.404,495,40,1,0)
1^NAME^3
"KRN",.404,495,40,1,1)
.01
"KRN",.404,495,40,1,2)
1,7^64^1,1
"KRN",.404,495,40,2,0)
2^!M^3^^DESCRIPTION
"KRN",.404,495,40,2,.1)
S Y=$$WPECAP^PXRMSMAN(811.2,DA,"DESCRIPTION",63)
"KRN",.404,495,40,2,1)
2
"KRN",.404,495,40,2,2)
2,14^1^2,1^1
"KRN",.404,495,40,2,11)
D HLP^DDSUTL("Press Enter to edit the Description")
"KRN",.404,495,40,3,0)
3^PATIENT DATA SOURCE^3
"KRN",.404,495,40,3,1)
4
"KRN",.404,495,40,3,2)
3,22^40^3,1
"KRN",.404,495,40,4,0)
4^USE INACTIVE PROBLEMS^3
"KRN",.404,495,40,4,1)
10
"KRN",.404,495,40,4,2)
4,24^3^4,1
"KRN",.404,495,40,4,11)
D FSOC^PXRMSMAN(811.2,10)
"KRN",.404,495,40,5,0)
5^PRIORITY LIST^3
"KRN",.404,495,40,5,1)
15
"KRN",.404,495,40,5,2)
4,44^3^4,29
"KRN",.404,495,40,6,0)
6^INACTIVE FLAG^3
"KRN",.404,495,40,6,1)
1.6
"KRN",.404,495,40,6,2)
5,16^8^5,1
"KRN",.404,495,40,6,11)
D FSOC^PXRMSMAN(811.2,1.6)
"KRN",.404,495,40,7,0)
7^Codes Marked as Use in Dialog^1
"KRN",.404,495,40,7,2)
^^7,2
"KRN",.404,495,40,8,0)
8^Coding System^1
"KRN",.404,495,40,8,2)
^^7,44
"KRN",.404,495,40,9,0)
9^CLASS^3
"KRN",.404,495,40,9,1)
100
"KRN",.404,495,40,9,2)
15,8^8^15,1
"KRN",.404,495,40,9,3)
L
"KRN",.404,495,40,9,11)
D FSOC^PXRMSMAN(811.2,100)
"KRN",.404,495,40,10,0)
10^SPONSOR^3
"KRN",.404,495,40,10,1)
101
"KRN",.404,495,40,10,2)
16,10^70^16,1
"KRN",.404,495,40,10,14)
D VSPON^PXRMSMAN(811.2,.DA,X,.DDSERROR)
"KRN",.404,495,40,11,0)
11^REVIEW DATE^3
"KRN",.404,495,40,11,1)
102
"KRN",.404,495,40,11,2)
17,14^11^17,1
"KRN",.404,496,0)
PXRM DIALOG TAXONOMY CODES^811.24
"KRN",.404,496,12)

"KRN",.404,496,40,0)
^.4044I^2^2
"KRN",.404,496,40,1,0)
1^^3
"KRN",.404,496,40,1,1)
.01
"KRN",.404,496,40,1,2)
1,2^40
"KRN",.404,496,40,1,13)
D CODEPOST^PXRMTXDL
"KRN",.404,496,40,2,0)
2^^3
"KRN",.404,496,40,2,1)
1
"KRN",.404,496,40,2,2)
1,45^11
"KRN",.404,496,40,2,4)
^^^1
"KRN",19,14140,-1)
0^1
"KRN",19,14140,0)
PXRM TAXONOMY MANAGEMENT^Reminder Taxonomy Management^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,14140,25)
START^PXRMTAXL
"KRN",19,14140,"U")
REMINDER TAXONOMY MANAGEMENT
"KRN",19,14302,-1)
0^3
"KRN",19,14302,0)
PXRM DISABLE/ENABLE EVALUATION^Disable/enable reminder evaluation^^R^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,14302,1,0)
^^3^3^3140410^
"KRN",19,14302,1,1,0)
This option is used to disable/enable reminder evaluation. Its
"KRN",19,14302,1,2,0)
distribution should be very limited. It requires the PXRM MANAGER key.
"KRN",19,14302,1,3,0)

"KRN",19,14302,20)
D MGRO^PXRMDIEV
"KRN",19,14302,99)
63287,37013
"KRN",19,14302,"U")
DISABLE/ENABLE REMINDER EVALUA
"KRN",19,14303,-1)
0^4
"KRN",19,14303,0)
PXRM TAX SELECTED CODES REPAIR^Taxonomy Selected Codes Repair^^R^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,14303,1,0)
^^4^4^3140422^
"KRN",19,14303,1,1,0)
This option searches all taxonomies to find those where the Selected Codes
"KRN",19,14303,1,2,0)
Multiple has been corrupted by an overwrite. It will then repair the Selected
"KRN",19,14303,1,3,0)
Codes Multiple.
"KRN",19,14303,1,4,0)

"KRN",19,14303,20)
D CHECKALL^PXRMTXIC
"KRN",19,14303,99)
63299,40705
"KRN",19,14303,"U")
TAXONOMY SELECTED CODES REPAIR
"KRN",19,14307,-1)
1^2
"KRN",19,14307,0)
PXRM TAXONOMY DIALOG
"KRN",101,1811,-1)
4^23
"KRN",101,1811,0)
VALM QUIT
"KRN",101,4141,-1)
3^35
"KRN",101,4141,0)
PXRM EXCH MENU^PXRM EXCH MENU^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,4141,1,0)
^^1^1^3010504^
"KRN",101,4141,1,1,0)
This is the main menu for the Clinical Reminder Exchange Utility.
"KRN",101,4141,4)
40
"KRN",101,4141,10,0)
^101.01PA^11^11
"KRN",101,4141,10,9,0)
6000^LWH^90^
"KRN",101,4141,10,9,"^")
PXRM EXCH LOAD WEB HF
"KRN",101,4141,15)
D PEXIT^PXRMEXLM
"KRN",101,4141,20)

"KRN",101,4141,26)
D SHOW^VALM
"KRN",101,4141,28)
Select Action:
"KRN",101,4141,99)
63176,31222
"KRN",101,4318,-1)
0^29
"KRN",101,4318,0)
PXRM SELECTION PRINT ALL^List/Print All^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4318,2,0)
^101.02A^3^1
"KRN",101,4318,2,3,0)
PT
"KRN",101,4318,2,"B","PT",3)

"KRN",101,4318,4)
25
"KRN",101,4318,15)

"KRN",101,4318,20)
D LIST^PXRMSEL
"KRN",101,4318,99)
59968,39670
"KRN",101,4320,-1)
0^30
"KRN",101,4320,0)
PXRM SELECTION EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4320,2,0)
^101.02A^2^2
"KRN",101,4320,2,1,0)
Q
"KRN",101,4320,2,2,0)
QU
"KRN",101,4320,2,"B","Q",1)

"KRN",101,4320,2,"B","QU",2)

"KRN",101,4320,4)
25
"KRN",101,4320,15)
D EXIT^PXRMSEL
"KRN",101,4320,99)
59968,39670
"KRN",101,4324,-1)
0^26
"KRN",101,4324,0)
PXRM SELECTION ADD^Add^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4324,2,0)
^101.02A^2^2
"KRN",101,4324,2,1,0)
A
"KRN",101,4324,2,2,0)
AD
"KRN",101,4324,2,"B","A",1)

"KRN",101,4324,2,"B","AD",2)

"KRN",101,4324,15)
S VALMBG=1
"KRN",101,4324,20)
D ADD^PXRMSEL
"KRN",101,4324,99)
59968,39670
"KRN",101,4325,-1)
0^27
"KRN",101,4325,0)
PXRM DIALOG COPY COMPONENT^Copy Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4325,15)
S VALMBG=1,VALMBCK="R"
"KRN",101,4325,20)
D COPY^PXRMSEL
"KRN",101,4325,99)
59968,39670
"KRN",101,4327,-1)
0^25
"KRN",101,4327,0)
PXRM DIALOG SELECTION MENU (DLGE)^Dialog Selection Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,4327,1,0)
^101.06^1^1^3130711^^^^
"KRN",101,4327,1,1,0)
Special menu protocol for list PXRM SELECTION. Only used for dialog edit.
"KRN",101,4327,4)
25
"KRN",101,4327,10,0)
^101.01PA^7^7
"KRN",101,4327,10,1,0)
4324^AD^5^
"KRN",101,4327,10,1,"^")
PXRM SELECTION ADD
"KRN",101,4327,10,2,0)
4325^CO^10^
"KRN",101,4327,10,2,"^")
PXRM DIALOG COPY COMPONENT
"KRN",101,4327,10,3,0)
4328^CV^15^
"KRN",101,4327,10,3,"^")
PXRM SELECTION VIEW (CV)
"KRN",101,4327,10,4,0)
4318^PT^20^
"KRN",101,4327,10,4,"^")
PXRM SELECTION PRINT ALL
"KRN",101,4327,10,5,0)
4320^QU^35^
"KRN",101,4327,10,5,"^")
PXRM SELECTION EXIT
"KRN",101,4327,10,6,0)
4329^INQ^25^
"KRN",101,4327,10,6,"^")
PXRM DIALOG EDIT INQUIRY
"KRN",101,4327,10,7,0)
5971^TE^30^
"KRN",101,4327,10,7,"^")
PXRM DIALOG TAXONOMY EDIT
"KRN",101,4327,15)
D PEXIT^PXRMGEN
"KRN",101,4327,26)
D SHOW^VALM
"KRN",101,4327,99)
63014,34452
"KRN",101,4328,-1)
0^28
"KRN",101,4328,0)
PXRM SELECTION VIEW (CV)^Change View^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4328,1,0)
^^1^1^2991222^^^
"KRN",101,4328,1,1,0)
Used in dialog edit only.
"KRN",101,4328,2,0)
^101.02A^^0
"KRN",101,4328,15)
S VALMBG=1
"KRN",101,4328,20)
D CHNG^PXRMSEL
"KRN",101,4328,99)
59968,39670
"KRN",101,4329,-1)
0^31
"KRN",101,4329,0)
PXRM DIALOG EDIT INQUIRY^Inquiry/Print^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,4329,2,0)
^101.02A^3^3
"KRN",101,4329,2,1,0)
I
"KRN",101,4329,2,2,0)
IN
"KRN",101,4329,2,3,0)
INQ
"KRN",101,4329,2,"B","I",1)

"KRN",101,4329,2,"B","IN",2)

"KRN",101,4329,2,"B","INQ",3)

"KRN",101,4329,15)
S VALMBCK="R"
"KRN",101,4329,20)
D INQ1^PXRMDLST
"KRN",101,4329,99)
59968,39670
"KRN",101,5900,-1)
0^7
"KRN",101,5900,0)
PXRM TAXONOMY ADD^Add^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5900,20)
D ADD^PXRMTAXL
"KRN",101,5900,99)
62781,31013
"KRN",101,5901,-1)
0^10
"KRN",101,5901,0)
PXRM TAXONOMY EDIT^Edit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5901,15)

"KRN",101,5901,20)
D EDITS^PXRMTAXL
"KRN",101,5901,99)
62781,31013
"KRN",101,5902,-1)
0^13
"KRN",101,5902,0)
PXRM TAXONOMY MENU^PXRM TAXONOMY MENU^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5902,1,0)
^101.06^3^3^3130314^^^^
"KRN",101,5902,1,1,0)
This is the menu for the Taxonomy List Manager display.
"KRN",101,5902,1,2,0)

"KRN",101,5902,1,3,0)

"KRN",101,5902,4)
40
"KRN",101,5902,10,0)
^101.01PA^9^9
"KRN",101,5902,10,1,0)
5900^ADD^10^
"KRN",101,5902,10,1,"^")
PXRM TAXONOMY ADD
"KRN",101,5902,10,2,0)
5901^EDIT^20^
"KRN",101,5902,10,2,"^")
PXRM TAXONOMY EDIT
"KRN",101,5902,10,3,0)
5927^COPY^30^
"KRN",101,5902,10,3,"^")
PXRM TAXONOMY COPY
"KRN",101,5902,10,4,0)
5926^INQ^40^
"KRN",101,5902,10,4,"^")
PXRM TAXONOMY INQUIRE
"KRN",101,5902,10,5,0)
5928^CL^50^
"KRN",101,5902,10,5,"^")
PXRM TAXONOMY CHANGE LOG
"KRN",101,5902,10,6,0)
5929^CS^60^
"KRN",101,5902,10,6,"^")
PXRM TAXONOMY CODE SEARCH
"KRN",101,5902,10,7,0)
5938^IMP^70^
"KRN",101,5902,10,7,"^")
PXRM TAXONOMY IMPORT
"KRN",101,5902,10,8,0)
5939^UIDR^80^
"KRN",101,5902,10,8,"^")
PXRM TAXONOMY UID REPORT
"KRN",101,5902,10,9,0)
5957^OINQ^100^
"KRN",101,5902,10,9,"^")
PXRM TAXONOMY OLD INQUIRE
"KRN",101,5902,15)
D PEXIT^PXRMTAXL
"KRN",101,5902,20)

"KRN",101,5902,26)
D SHOW^VALM
"KRN",101,5902,99)
62909,34243
"KRN",101,5906,-1)
0^2
"KRN",101,5906,0)
PXRM LEXICON MENU^PXRM LEXICON MENU^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5906,4)
40
"KRN",101,5906,10,0)
^101.01PA^6^6
"KRN",101,5906,10,1,0)
5920^ADD^10^
"KRN",101,5906,10,1,"^")
PXRM LEXICON ADD
"KRN",101,5906,10,2,0)
5921^RFT^20^
"KRN",101,5906,10,2,"^")
PXRM LEXICON REMOVE FROM TAXONOMY
"KRN",101,5906,10,3,0)
5922^RFD^30^
"KRN",101,5906,10,3,"^")
PXRM LEXICON REMOVE FROM DIALOG
"KRN",101,5906,10,4,0)
5923^UID^40^
"KRN",101,5906,10,4,"^")
PXRM LEXICON USE IN DIALOG
"KRN",101,5906,10,5,0)
5924^SAVE^50^
"KRN",101,5906,10,5,"^")
PXRM LEXICON SAVE
"KRN",101,5906,10,6,0)
5998^EXIT^60^
"KRN",101,5906,10,6,"^")
PXRM LEXICON EXIT
"KRN",101,5906,15)
D PEXIT^PXRMLEXL
"KRN",101,5906,20)

"KRN",101,5906,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),U,1),24)) ^(24)
"KRN",101,5906,26)
D SHOW^VALM
"KRN",101,5906,99)
63342,53845
"KRN",101,5920,-1)
0^1
"KRN",101,5920,0)
PXRM LEXICON ADD^Add to taxonomy^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5920,20)
D INCL^PXRMLEXL
"KRN",101,5920,99)
62781,31013
"KRN",101,5921,-1)
0^3
"KRN",101,5921,0)
PXRM LEXICON REMOVE FROM TAXONOMY^Remove from taxonomy^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5921,20)
D RFTL^PXRMLEXL
"KRN",101,5921,21,0)
^101.021A
"KRN",101,5921,99)
62781,31013
"KRN",101,5922,-1)
0^4
"KRN",101,5922,0)
PXRM LEXICON REMOVE FROM DIALOG^Remove from dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5922,20)
D RFDL^PXRMLEXL
"KRN",101,5922,24)
I $$UIDOK^PXRMLEXL
"KRN",101,5922,99)
62781,31013
"KRN",101,5923,-1)
0^6
"KRN",101,5923,0)
PXRM LEXICON USE IN DIALOG^Use in dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5923,20)
D UIDL^PXRMLEXL
"KRN",101,5923,24)
I $$UIDOK^PXRMLEXL
"KRN",101,5923,99)
62781,31013
"KRN",101,5924,-1)
0^15
"KRN",101,5924,0)
PXRM LEXICON SAVE^Save^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5924,20)
D SAVE^PXRMLEXL
"KRN",101,5924,99)
62781,31013
"KRN",101,5925,-1)
0^5
"KRN",101,5925,0)
PXRM LEXICON SELECT ENTRY^Select an entry^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5925,20)
D XSEL^PXRMLEXL
"KRN",101,5925,99)
62781,31013
"KRN",101,5926,-1)
0^12
"KRN",101,5926,0)
PXRM TAXONOMY INQUIRE^Inquire^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5926,20)
D INQS^PXRMTAXL
"KRN",101,5926,99)
62781,31013
"KRN",101,5927,-1)
0^9
"KRN",101,5927,0)
PXRM TAXONOMY COPY^Copy^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5927,20)
D COPYS^PXRMTAXL
"KRN",101,5927,99)
62781,31013
"KRN",101,5928,-1)
0^11
"KRN",101,5928,0)
PXRM TAXONOMY CHANGE LOG^Change Log^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5928,20)
D CLOGS^PXRMTAXL
"KRN",101,5928,99)
62895,32157
"KRN",101,5929,-1)
0^8
"KRN",101,5929,0)
PXRM TAXONOMY CODE SEARCH^Code Search^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5929,20)
D CODESRCH^PXRMTAXL
"KRN",101,5929,99)
62781,31013
"KRN",101,5930,-1)
0^14
"KRN",101,5930,0)
PXRM TAXONOMY SELECT ENTRY^Select an entry^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5930,20)
D XSEL^PXRMTAXL
"KRN",101,5930,99)
62781,31013
"KRN",101,5938,-1)
0^16
"KRN",101,5938,0)
PXRM TAXONOMY IMPORT^Import^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5938,20)
D IMPS^PXRMTAXL
"KRN",101,5938,99)
62781,31013
"KRN",101,5939,-1)
0^17
"KRN",101,5939,0)
PXRM TAXONOMY UID REPORT^UID report^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5939,20)
D REPD^PXRMUIDR
"KRN",101,5939,99)
62781,31013
"KRN",101,5953,-1)
0^18
"KRN",101,5953,0)
PXRM TAXONOMY CHOOSE ENTRIES^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5953,1,0)
^101.06^2^2^3130318^^^^
"KRN",101,5953,1,1,0)
This is the menu for taxonomy choosing.
"KRN",101,5953,1,2,0)

"KRN",101,5953,10,0)
^101.01PA^4^4
"KRN",101,5953,10,1,0)
5955^SEL^10^
"KRN",101,5953,10,1,"^")
PXRM TAXONOMY CHOOSE SELECT
"KRN",101,5953,10,2,0)
5956^REM^20^
"KRN",101,5953,10,2,"^")
PXRM TAXONOMY CHOOSE REMOVE
"KRN",101,5953,10,3,0)
5926^INQ^30^
"KRN",101,5953,10,3,"^")
PXRM TAXONOMY INQUIRE
"KRN",101,5953,10,4,0)
1811^DONE^40^
"KRN",101,5953,10,4,"^")
VALM QUIT
"KRN",101,5953,15)
D PEXIT^PXRMTXCE
"KRN",101,5953,26)
D SHOW^VALM
"KRN",101,5953,99)
62899,51490
"KRN",101,5954,-1)
0^19
"KRN",101,5954,0)
PXRM TAXONOMY CHOOSE ENTRY^Choose a taxonomy^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5954,20)
D XSEL^PXRMTXCE
"KRN",101,5954,99)
62899,42552
"KRN",101,5955,-1)
0^21
"KRN",101,5955,0)
PXRM TAXONOMY CHOOSE SELECT^Select an entry^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5955,20)
D SELTAX^PXRMTXCE
"KRN",101,5955,99)
62899,43195
"KRN",101,5956,-1)
0^20
"KRN",101,5956,0)
PXRM TAXONOMY CHOOSE REMOVE^Remove an entry^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5956,10,0)
^101.01PA^2^2
"KRN",101,5956,10,1,0)
5926^INQ^30^
"KRN",101,5956,10,1,"^")
PXRM TAXONOMY INQUIRE
"KRN",101,5956,10,2,0)
1811^DONE^40^
"KRN",101,5956,10,2,"^")
VALM QUIT
"KRN",101,5956,20)
D REMTAX^PXRMTXCE
"KRN",101,5956,99)
62899,51311
"KRN",101,5957,-1)
0^22
"KRN",101,5957,0)
PXRM TAXONOMY OLD INQUIRE^Old Inquire^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5957,20)
D OLDINQS^PXRMTAXL
"KRN",101,5957,99)
62909,33980
"KRN",101,5971,-1)
0^24
"KRN",101,5971,0)
PXRM DIALOG TAXONOMY EDIT^Dialog Taxonomy Edit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5971,20)
D SELECT^PXRMTXDL
"KRN",101,5971,99)
63014,33698
"KRN",101,5998,-1)
0^32
"KRN",101,5998,0)
PXRM LEXICON EXIT^Exit with save^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5998,20)
D EXITS^PXRMLEXL
"KRN",101,5998,99)
63113,39213
"KRN",101,5999,-1)
0^33
"KRN",101,5999,0)
PXRM LEXICON VIEW^Change view^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5999,20)
D VIEW^PXRMLEXL
"KRN",101,5999,99)
63116,34670
"KRN",101,6000,-1)
0^34
"KRN",101,6000,0)
PXRM EXCH LOAD WEB HF^Load Web Host File^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,6000,20)
D LDWEB^PXRMEXLM
"KRN",101,6000,99)
63176,30831
"KRN",409.61,515,-1)
0^4
"KRN",409.61,515,0)
PXRM SELECTION^1^^120^5^18^0^1^^PXRM SELECTION MENU^Selection List^1^^1
"KRN",409.61,515,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,515,"ARRAY")
 ^TMP("PXRMSEL",$J)
"KRN",409.61,515,"COL",0)
^409.621^3^3
"KRN",409.61,515,"COL",1,0)
HEADER1^1^5
"KRN",409.61,515,"COL",2,0)
HEADER2^7^65
"KRN",409.61,515,"COL",3,0)
HEADER3^72^40
"KRN",409.61,515,"COL","B","HEADER1",1)

"KRN",409.61,515,"COL","B","HEADER2",2)

"KRN",409.61,515,"COL","B","HEADER3",3)

"KRN",409.61,515,"FNL")
D EXIT^PXRMSEL
"KRN",409.61,515,"HDR")
D HDR^PXRMSEL
"KRN",409.61,515,"HLP")
D HELP^PXRMSEL
"KRN",409.61,515,"INIT")
D INIT^PXRMSEL
"KRN",409.61,787,-1)
0^1
"KRN",409.61,787,0)
PXRM TAXONOMY MANAGEMENT^1^^80^5^14^1^1^Taxonomy Management^PXRM TAXONOMY MENU^Taxonomy Management^1^^1
"KRN",409.61,787,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,787,"ARRAY")
 ^TMP("PXRMTAXL",$J)
"KRN",409.61,787,"COL",0)
^409.621^3^3
"KRN",409.61,787,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,787,"COL",2,0)
TAXONOMY^6^30^Taxonomy
"KRN",409.61,787,"COL",3,0)
DESCRIPTION^38^40^Description
"KRN",409.61,787,"COL","B","DESCRIPTION",3)

"KRN",409.61,787,"COL","B","NUMBER",1)

"KRN",409.61,787,"COL","B","TAXONOMY",2)

"KRN",409.61,787,"FNL")
D EXIT^PXRMTAXL
"KRN",409.61,787,"HDR")
D HDR^PXRMTAXL
"KRN",409.61,787,"HLP")
D HELP^PXRMTAXL
"KRN",409.61,787,"INIT")
D ENTRY^PXRMTAXL
"KRN",409.61,788,-1)
0^2
"KRN",409.61,788,0)
PXRM LEXICON SELECT^1^^80^5^14^1^1^Lexicon Selection^PXRM LEXICON MENU^Lexicon Selection^1^^1
"KRN",409.61,788,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,788,"ARRAY")
 ^TMP("PXRMLEXL",$J)
"KRN",409.61,788,"COL",0)
^409.621^5^5
"KRN",409.61,788,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,788,"COL",2,0)
CODE^6^9^Code
"KRN",409.61,788,"COL",3,0)
ACTIVE^16^10^Active
"KRN",409.61,788,"COL",4,0)
INACTIVE^27^10^Inactive
"KRN",409.61,788,"COL",5,0)
DESCRIPTION^37^43^Description
"KRN",409.61,788,"COL","B","ACTIVE",3)

"KRN",409.61,788,"COL","B","CODE",2)

"KRN",409.61,788,"COL","B","DESCRIPTION",5)

"KRN",409.61,788,"COL","B","INACTIVE",4)

"KRN",409.61,788,"COL","B","NUMBER",1)

"KRN",409.61,788,"FNL")
D EXIT^PXRMLEXL
"KRN",409.61,788,"HDR")
D HDR^PXRMLEXL
"KRN",409.61,788,"HLP")
D HELP^PXRMLEXL
"KRN",409.61,788,"INIT")
D ENTRY^PXRMLEXL
"KRN",409.61,795,-1)
0^3
"KRN",409.61,795,0)
PXRM TAXONOMY CHOOSE ENTRIES^1^^80^5^14^1^1^Taxonomy Choose Entries^PXRM TAXONOMY CHOOSE ENTRIES^Taxonomy Choose Entries^1^^1
"KRN",409.61,795,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,795,"ARRAY")
 ^TMP("PXRMTAXCE",$J)
"KRN",409.61,795,"COL",0)
^409.621^3^3
"KRN",409.61,795,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,795,"COL",2,0)
TAXONOMY^6^30^Taxonomy
"KRN",409.61,795,"COL",3,0)
DESCRIPTIO^38^40^Description
"KRN",409.61,795,"COL","B","DESCRIPTIO",3)

"KRN",409.61,795,"COL","B","NUMBER",1)

"KRN",409.61,795,"COL","B","TAXONOMY",2)

"KRN",409.61,795,"FNL")
D EXIT^PXRMTXCE
"KRN",409.61,795,"HDR")
D HDR^PXRMTXCE
"KRN",409.61,795,"HLP")
D HELP^PXRMTXCE
"KRN",409.61,795,"INIT")
D ENTRY^PXRMTXCE
"MBREQ")
1
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",534,-1)
1^1
"PKG",534,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3000301
"PKG",534,20,0)
^9.402P^^
"PKG",534,22,0)
^9.49I^1^1
"PKG",534,22,1,0)
2.0^3050204^3050309^10000000020
"PKG",534,22,1,"PAH",1,0)
26^3140624^53
"PKG",534,22,1,"PAH",1,1,0)
^^2^2^3140624
"PKG",534,22,1,"PAH",1,1,1,0)
Clinical Reminders ICD-10 changes.
"PKG",534,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
120
"RTN","PXRM")
0^65^B54398070
"RTN","PXRM",1,0)
PXRM ;SLC/PKR - Clinical Reminders entry points. ;04/14/2014
"RTN","PXRM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,11,12,16,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRM",3,0)
 ;Entry points in this routine are listed in DBIA #2182.
"RTN","PXRM",4,0)
 ;==========================================================
"RTN","PXRM",5,0)
MAIN(DFN,PXRMITEM,OUTTYPE,DISC) ;Main driver for clinical reminders.
"RTN","PXRM",6,0)
 ;INPUT  DFN - Pointer to Patient File (#2)
"RTN","PXRM",7,0)
 ;       PXRMITEM - IEN of reminder to evaluate.
"RTN","PXRM",8,0)
 ;       OUTTYPE - Flag to indicate type of output information.
"RTN","PXRM",9,0)
 ;         0 - Reminders DUE NOW only (CLINICAL REMINDERS DUE
"RTN","PXRM",10,0)
 ;             HS component)
"RTN","PXRM",11,0)
 ;         1 - All Reminders with Next and Last Information
"RTN","PXRM",12,0)
 ;             (CLINICAL REMINDERS SUMMARY HS component)
"RTN","PXRM",13,0)
 ;         5 - Health Maintenance (CLINICAL REMINDERS MAINTENANCE
"RTN","PXRM",14,0)
 ;              HS component)
"RTN","PXRM",15,0)
 ;        10 - MyHealtheVet summary
"RTN","PXRM",16,0)
 ;        11 - MyHealtheVet detailed
"RTN","PXRM",17,0)
 ;        12 - MyHealtheVet combined
"RTN","PXRM",18,0)
 ;        55 - Order check
"RTN","PXRM",19,0)
 ;        DISC - (optional) if this is true then the disclaimer will
"RTN","PXRM",20,0)
 ;             be loaded in ^TMP("PXRM",$J,"DISC").
"RTN","PXRM",21,0)
 ;
"RTN","PXRM",22,0)
 ;OUTPUT  ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=
"RTN","PXRM",23,0)
 ;              STATUS_U_DUE DATE_U_LAST DONE
"RTN","PXRM",24,0)
 ;        where PXRMRNAM is the PRINT NAME or if it is undefined then
"RTN","PXRM",25,0)
 ;        it is the NAME (.01).
"RTN","PXRM",26,0)
 ;        For the Clinical Maintenance component, OUTTYPE=5, there is 
"RTN","PXRM",27,0)
 ;        subsequent output of the form
"RTN","PXRM",28,0)
 ;        ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",N)=TEXT
"RTN","PXRM",29,0)
 ;        where N is a number and TEXT is a text string.
"RTN","PXRM",30,0)
 ;
"RTN","PXRM",31,0)
 ;        If DISC is true then the disclaimer will be loaded into
"RTN","PXRM",32,0)
 ;        ^TMP("PXRM",$J,"DISC"). The calling application should
"RTN","PXRM",33,0)
 ;        delete this when it is done.
"RTN","PXRM",34,0)
 ;
"RTN","PXRM",35,0)
 ;        The calling application can display the contents of these
"RTN","PXRM",36,0)
 ;        two ^TMP arrays as it chooses. The caller should also make
"RTN","PXRM",37,0)
 ;        sure the ^TMP globals are killed before it exits.
"RTN","PXRM",38,0)
 ;
"RTN","PXRM",39,0)
 N DEFARR,EVALDT,FIEVAL,PXRMDEFS
"RTN","PXRM",40,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",41,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",42,0)
 ;
"RTN","PXRM",43,0)
 I $G(NODISC)="" S NODISC=1
"RTN","PXRM",44,0)
 I $D(GMFLAG) S NODISC=0
"RTN","PXRM",45,0)
 S EVALDT=$$NOW^XLFDT
"RTN","PXRM",46,0)
 D EVAL(DFN,.DEFARR,OUTTYPE,NODISC,.FIEVAL,EVALDT)
"RTN","PXRM",47,0)
 Q
"RTN","PXRM",48,0)
 ;
"RTN","PXRM",49,0)
 ;==========================================================
"RTN","PXRM",50,0)
MAINDF(DFN,PXRMITEM,OUTTYPE,EVALDT) ;Alternate entry point that allows
"RTN","PXRM",51,0)
 ;evaluation date/time as input parameter and saves FIEVAL in
"RTN","PXRM",52,0)
 ;^TMP("PXRHM,$J,PXRMITEM,"FIEVAL").
"RTN","PXRM",53,0)
 N DEFARR,FIEVAL,PXRMDEFS
"RTN","PXRM",54,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",55,0)
 D EVAL(DFN,.DEFARR,OUTTYPE,0,.FIEVAL,EVALDT)
"RTN","PXRM",56,0)
 M ^TMP("PXRHM",$J,PXRMITEM,"FIEVAL")=FIEVAL
"RTN","PXRM",57,0)
 Q
"RTN","PXRM",58,0)
 ;
"RTN","PXRM",59,0)
 ;==========================================================
"RTN","PXRM",60,0)
DISABLE(PXRMITEM,RNAME) ;
"RTN","PXRM",61,0)
 N MNAME,NTXT,RDATA,REASON
"RTN","PXRM",62,0)
 S ^TMP("PXRHM",$J,PXRMITEM,RNAME)="CNBD^DISABLED^DISABLED"
"RTN","PXRM",63,0)
 S ^TMP("PXRHM",$J,PXRMITEM,RNAME,"TXT",1)="Reminder evaluation is temporarily disabled."
"RTN","PXRM",64,0)
 S NTXT=1
"RTN","PXRM",65,0)
 S REASON=0
"RTN","PXRM",66,0)
 F  S REASON=$O(^XTMP("PXRM_DISEV",REASON)) Q:REASON=""  D
"RTN","PXRM",67,0)
 . I $D(^XTMP("PXRM_DISEV",REASON))=1 D  Q
"RTN","PXRM",68,0)
 .. S NTXT=NTXT+1
"RTN","PXRM",69,0)
 .. S ^TMP("PXRHM",$J,PXRMITEM,RNAME,"TXT",NTXT)="Reason: "_REASON_"."
"RTN","PXRM",70,0)
 . S RDATA=""
"RTN","PXRM",71,0)
 . F  S RDATA=$O(^XTMP("PXRM_DISEV",REASON,RDATA)) Q:RDATA=""  D
"RTN","PXRM",72,0)
 .. S NTXT=NTXT+1
"RTN","PXRM",73,0)
 .. I REASON["index" D
"RTN","PXRM",74,0)
 ... S TEXT="Reason: "_REASON_" of file #"_RDATA
"RTN","PXRM",75,0)
 ...;Check if the index has been rebuilt.
"RTN","PXRM",76,0)
 ... D INDXCHK^PXRMDIEV(REASON,RDATA)
"RTN","PXRM",77,0)
 .. I REASON["manager" D
"RTN","PXRM",78,0)
 ... S MNAME=$P(^VA(200,RDATA,0),U,1)
"RTN","PXRM",79,0)
 ... S TEXT="Reason: "_REASON_" - "_MNAME
"RTN","PXRM",80,0)
 .. S ^TMP("PXRHM",$J,PXRMITEM,RNAME,"TXT",NTXT)=TEXT_"."
"RTN","PXRM",81,0)
 Q
"RTN","PXRM",82,0)
 ;
"RTN","PXRM",83,0)
 ;==========================================================
"RTN","PXRM",84,0)
EVAL(DFN,DEFARR,OUTTYPE,NODISC,FIEVAL,DATE) ;Reminder evaluation entry
"RTN","PXRM",85,0)
 ;point. This entry point uses the local array DEFARR for the reminder
"RTN","PXRM",86,0)
 ;definition and returns the Finding Evaluation Array, FIEVAL.
"RTN","PXRM",87,0)
 ;PXRM namespaced variables are the reminder evaluation "global"
"RTN","PXRM",88,0)
 ;variables. If date is specified then the reminder will be evaluated
"RTN","PXRM",89,0)
 ;as if the current date is DATE.
"RTN","PXRM",90,0)
 N PXRMAGE,PXRMDATE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMPDEM,PXRMPID
"RTN","PXRM",91,0)
 N PXRMITEM,PXRMRM,PXRMRNAM,PXRMSEX,PXRMXTLK
"RTN","PXRM",92,0)
 ;Make sure the reminder exists.
"RTN","PXRM",93,0)
 I $D(DEFARR("DNE")) D NODEF^PXRMERRH(DEFARR("IEN")) Q
"RTN","PXRM",94,0)
 ;PXRMRM is the right margin for output.
"RTN","PXRM",95,0)
 S PXRMRM=80
"RTN","PXRM",96,0)
 S PXRMDATE=+$G(DATE)
"RTN","PXRM",97,0)
 S PXRMITEM=DEFARR("IEN")
"RTN","PXRM",98,0)
 S PXRMPID="PXRM"_PXRMITEM_$H
"RTN","PXRM",99,0)
 N D00,RNAME,PID
"RTN","PXRM",100,0)
 S D00=DEFARR(0)
"RTN","PXRM",101,0)
 S PXRMRNAM=$P(D00,U,3)
"RTN","PXRM",102,0)
 ;If the print name is null use the .01.
"RTN","PXRM",103,0)
 I PXRMRNAM="" S PXRMRNAM=$P(D00,U,1)
"RTN","PXRM",104,0)
 ;
"RTN","PXRM",105,0)
 I $D(^XTMP("PXRM_DISEV",0)) D DISABLE(PXRMITEM,PXRMRNAM) G EXIT
"RTN","PXRM",106,0)
 ;
"RTN","PXRM",107,0)
 ;Set the error handler to the PXRMERRH routine. Use the new style of
"RTN","PXRM",108,0)
 ;error trapping.
"RTN","PXRM",109,0)
 N $ES,$ET
"RTN","PXRM",110,0)
 S $ET="D ERRHDLR^PXRMERRH"
"RTN","PXRM",111,0)
 ;
"RTN","PXRM",112,0)
 ;Initialize the ^TMP arrays.
"RTN","PXRM",113,0)
 K ^TMP("PXRHM",$J,PXRMITEM),^TMP(PXRMPID,$J,PXRMITEM)
"RTN","PXRM",114,0)
 ;
"RTN","PXRM",115,0)
 N DUE,DUEDATE,FREQ,IND,PCLOGIC,RESDATE,RESLOGIC
"RTN","PXRM",116,0)
 ;Make sure the reminder is active.
"RTN","PXRM",117,0)
 I $P(D00,U,6) D  G OUTPUT
"RTN","PXRM",118,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")="The reminder "_PXRMRNAM_" was inactivated "_$$FMTE^XLFDT($P(D00,U,7),"5Z")
"RTN","PXRM",119,0)
 . S PXRMPDEM("DFN")=DFN,PCLOGIC=0,RESLOGIC="",DUE="",DUEDATE=0
"RTN","PXRM",120,0)
 . S RESDATE="",FREQ="0Y"
"RTN","PXRM",121,0)
 ;
"RTN","PXRM",122,0)
 ;Make sure the "E" node exists
"RTN","PXRM",123,0)
 I $D(DEFARR(20))&'$D(DEFARR("E")) D  G EXIT
"RTN","PXRM",124,0)
 . W !,"Reminder definition is corrupted, ENODE is missing cannot continue!"
"RTN","PXRM",125,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"_U_"E NODE MISSING"
"RTN","PXRM",126,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO ENODE")=""
"RTN","PXRM",127,0)
 ;
"RTN","PXRM",128,0)
 ;Set the definition stack.
"RTN","PXRM",129,0)
 S RNAME=$P(D00,U,1)
"RTN","PXRM",130,0)
 S LAST=+$O(PXRMDEFS(""),-1)
"RTN","PXRM",131,0)
 F IND=1:1:LAST D
"RTN","PXRM",132,0)
 . I $P(PXRMDEFS(IND),U,1)=RNAME D
"RTN","PXRM",133,0)
 .. S PID=$P(PXRMDEFS(IND),U,2)
"RTN","PXRM",134,0)
 .. S ^TMP(PID,$J,PXRMITEM,"FERROR","RECURSION")=RNAME
"RTN","PXRM",135,0)
 S LAST=LAST+1,PXRMDEFS(LAST)=RNAME_U_PXRMPID
"RTN","PXRM",136,0)
 I $D(PID),$D(^TMP(PID,$J,PXRMITEM,"FERROR","RECURSION")) G EXIT
"RTN","PXRM",137,0)
 ;
"RTN","PXRM",138,0)
 ;Establish the main findings evaluation variables.
"RTN","PXRM",139,0)
 S (DUE,DUEDATE,FREQ,RESDATE)=0
"RTN","PXRM",140,0)
 S (PCLOGIC,RESLOGIC)=""
"RTN","PXRM",141,0)
 ;
"RTN","PXRM",142,0)
 ;Establish the patient demographic information.
"RTN","PXRM",143,0)
 N TODAY
"RTN","PXRM",144,0)
 S TODAY=$G(DATE,DT)
"RTN","PXRM",145,0)
 D DEM^PXRMPINF(DFN,TODAY,.PXRMPDEM)
"RTN","PXRM",146,0)
 I PXRMPDEM("PATIENT")="" D  G EXIT
"RTN","PXRM",147,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO PAT")="DFN "_DFN_" IS NOT A VALID PATIENT"
"RTN","PXRM",148,0)
 . S PCLOGIC=0
"RTN","PXRM",149,0)
 ;
"RTN","PXRM",150,0)
 ;Load the local demographic variables for use in condition.
"RTN","PXRM",151,0)
 S PXRMAGE=PXRMPDEM("AGE"),PXRMDOB=PXRMPDEM("DOB"),PXRMDOD=PXRMPDEM("DOD")
"RTN","PXRM",152,0)
 S PXRMLAD=PXRMPDEM("LAD"),PXRMSEX=PXRMPDEM("SEX")
"RTN","PXRM",153,0)
 ;
"RTN","PXRM",154,0)
 ;Check for a date of death.
"RTN","PXRM",155,0)
 I PXRMPDEM("DOD")'="" D
"RTN","PXRM",156,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","DEAD")=""
"RTN","PXRM",157,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"DEAD")="Patient is deceased."
"RTN","PXRM",158,0)
 ;
"RTN","PXRM",159,0)
 ;If the component is CR and the patient is deceased we are done.
"RTN","PXRM",160,0)
 I OUTTYPE=0,PXRMPDEM("DOD")'="",'$G(PXRMIDOD) G OUTPUT
"RTN","PXRM",161,0)
 ;
"RTN","PXRM",162,0)
 ;Check for a sex specific reminder.
"RTN","PXRM",163,0)
 N SEXOK
"RTN","PXRM",164,0)
 S SEXOK=$$SEX^PXRMLOG(.DEFARR,PXRMPDEM("SEX"))
"RTN","PXRM",165,0)
 S FIEVAL("SEX")=SEXOK
"RTN","PXRM",166,0)
 ;If the patient is the wrong sex then don't do anything else.
"RTN","PXRM",167,0)
 I 'SEXOK D  G OUTPUT
"RTN","PXRM",168,0)
 . S PCLOGIC=0
"RTN","PXRM",169,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRM",170,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRM",171,0)
 ;
"RTN","PXRM",172,0)
 ;Evaluate the findings.
"RTN","PXRM",173,0)
 S PXRMXTLK=""
"RTN","PXRM",174,0)
 D EVAL^PXRMEVFI(DFN,.DEFARR,.FIEVAL)
"RTN","PXRM",175,0)
 I +PXRMXTLK>0 D  G OUTPUT
"RTN","PXRM",176,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY","NO LOCK")="NO LOCK for ien "_+PXRMXTLK
"RTN","PXRM",177,0)
 . S PCLOGIC=0
"RTN","PXRM",178,0)
 ;
"RTN","PXRM",179,0)
 ;Check for missing index.
"RTN","PXRM",180,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"WARNING","MISSING INDEX")) D  G OUTPUT
"RTN","PXRM",181,0)
 . S (DUE,DUEDATE)="CNBD",PCLOGIC=1
"RTN","PXRM",182,0)
 ;
"RTN","PXRM",183,0)
 ;Evaluate the Patient Cohort Logic.
"RTN","PXRM",184,0)
 D EVALPCL^PXRMLOG(.DEFARR,.PXRMPDEM,.FREQ,.PCLOGIC,.FIEVAL)
"RTN","PXRM",185,0)
 ;
"RTN","PXRM",186,0)
 ;Evaluate the resolution logic and get the last resolution date.
"RTN","PXRM",187,0)
 D EVALRESL^PXRMLOG(.DEFARR,.RESDATE,.RESLOGIC,.FIEVAL)
"RTN","PXRM",188,0)
 ;
"RTN","PXRM",189,0)
 ;If the reminder is applicable calculate the due date.
"RTN","PXRM",190,0)
 I PCLOGIC D DUE^PXRMDATE(.DEFARR,RESDATE,FREQ,.DUE,.DUEDATE,.FIEVAL)
"RTN","PXRM",191,0)
 ;
"RTN","PXRM",192,0)
OUTPUT ;Prepare the final output.
"RTN","PXRM",193,0)
 D OUTPUT^PXRMOUTD(OUTTYPE,.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRM",194,0)
 ;
"RTN","PXRM",195,0)
EXIT ;Kill the working arrays unless this was a test run.
"RTN","PXRM",196,0)
 K ^TMP($J,"SVC",DFN)
"RTN","PXRM",197,0)
 I $G(PXRMDEBG) D
"RTN","PXRM",198,0)
 . S PXRMID=PXRMPID
"RTN","PXRM",199,0)
 . S FIEVAL("PATIENT AGE")=$G(PXRMPDEM("AGE"))
"RTN","PXRM",200,0)
 . S FIEVAL("DFN")=DFN
"RTN","PXRM",201,0)
 . S FIEVAL("EVAL DATE/TIME")=$$NOW^PXRMDATE
"RTN","PXRM",202,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"REMINDER NAME")=$G(PXRMRNAM)
"RTN","PXRM",203,0)
 E  K ^TMP(PXRMPID,$J)
"RTN","PXRM",204,0)
 ;
"RTN","PXRM",205,0)
 ;I DISC is true load the disclaimer.
"RTN","PXRM",206,0)
 I $G(DISC) D LOAD^PXRMDISC
"RTN","PXRM",207,0)
 Q
"RTN","PXRM",208,0)
 ;
"RTN","PXRM",209,0)
 ;==========================================================
"RTN","PXRM",210,0)
FIDATA(DFN,PXRMITEM,FINDINGS) ;Return the finding evaluation array to the
"RTN","PXRM",211,0)
 ;caller in the array FINDINGS. The caller should use the form
"RTN","PXRM",212,0)
 ;D FIDATA^PXRM(DFN,PXRMITEM,.FINDINGS)
"RTN","PXRM",213,0)
 ;The elements of the FINDINGS array will correspond to the
"RTN","PXRM",214,0)
 ;findings in the reminder definition. For finding N FINDINGS(N)
"RTN","PXRM",215,0)
 ;will be 0 if the finding is false and 1 if it is true. For
"RTN","PXRM",216,0)
 ;true findings there will be additional elements. The exact set
"RTN","PXRM",217,0)
 ;of additional elements will depend of the type of finding.
"RTN","PXRM",218,0)
 ;Some typical examples are:
"RTN","PXRM",219,0)
 ;FINDINGS(N)=1
"RTN","PXRM",220,0)
 ;FINDINGS(N,"DATE")=FileMan date
"RTN","PXRM",221,0)
 ;FINDINGS(N,"FINDING")=variable pointer to the finding
"RTN","PXRM",222,0)
 ;FINDINGS(N,"FILE NUMBER")=file number of data source
"RTN","PXRM",223,0)
 ;FINDINGS(N,"VALUE")=value of the finding, for example the
"RTN","PXRM",224,0)
 ;                    value of a lab test
"RTN","PXRM",225,0)
 ;
"RTN","PXRM",226,0)
 N DEFARR,FI,FIEVAL
"RTN","PXRM",227,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",228,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",229,0)
 D EVAL(DFN,.DEFARR,0,1,.FIEVAL)
"RTN","PXRM",230,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRM",231,0)
 ;Load the FINDINGS array.
"RTN","PXRM",232,0)
 S FI=0
"RTN","PXRM",233,0)
 F  S FI=+$O(FIEVAL(FI)) Q:FI=0  D
"RTN","PXRM",234,0)
 . S FINDINGS(FI)=FIEVAL(FI)
"RTN","PXRM",235,0)
 . I 'FIEVAL(FI) Q
"RTN","PXRM",236,0)
 . S FINDINGS(FI,"DATE")=FIEVAL(FI,"DATE")
"RTN","PXRM",237,0)
 . I FIEVAL(FI,"FINDING")["PSDRUG" S FINDINGS(FI,"DRUG")=1
"RTN","PXRM",238,0)
 . S FINDINGS(FI,"FILE NUMBER")=FIEVAL(FI,"FILE NUMBER")
"RTN","PXRM",239,0)
 . S FINDINGS(FI,"FINDING")=FIEVAL(FI,"FINDING")
"RTN","PXRM",240,0)
 . I $D(FIEVAL(FI,"TERM")) S FINDINGS(FI,"TERM")=FIEVAL(FI,"TERM")
"RTN","PXRM",241,0)
 . I $D(FIEVAL(FI,"VALUE")) S (FINDINGS(FI,"RESULT"),FINDINGS(FI,"VALUE"))=FIEVAL(FI,"VALUE")
"RTN","PXRM",242,0)
 . I $D(FIEVAL(FI,"VISIT")) S FINDINGS(FI,"VIEN")=FIEVAL(FI,"VISIT")
"RTN","PXRM",243,0)
 Q
"RTN","PXRM",244,0)
 ;
"RTN","PXRM",245,0)
 ;==========================================================
"RTN","PXRM",246,0)
INACTIVE(PXRMITEM) ;Return the INACTIVE FLAG, which has a value of 1
"RTN","PXRM",247,0)
 ;if the reminder is inactive.
"RTN","PXRM",248,0)
 I '$D(^PXD(811.9,PXRMITEM)) Q 1
"RTN","PXRM",249,0)
 Q $P(^PXD(811.9,PXRMITEM,0),U,6)
"RTN","PXRM",250,0)
 ;
"RTN","PXRMART")
0^109^B5789982
"RTN","PXRMART",1,0)
PXRMART ;SLC/DAN - ART computed finding ;08/01/2013
"RTN","PXRMART",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMART",3,0)
 ;Refererences to ^GMR(120.8 covered by DBIA #905.
"RTN","PXRMART",4,0)
ARTCL(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;
"RTN","PXRMART",5,0)
 S TEST=$$UP^XLFSTR(TEST)
"RTN","PXRMART",6,0)
 S NFOUND=0
"RTN","PXRMART",7,0)
 Q:TEST=""!(NGET=0)!("^IN:^DR:^"'[("^"_$E(TEST,1,3)_"^"))
"RTN","PXRMART",8,0)
 N WILD,ITEM,SUB,ING,INGT,TERM
"RTN","PXRMART",9,0)
 S WILD=$S(TEST["*":1,1:0),SUB=$S($E(TEST,1,2)="IN":"API",1:"APC")
"RTN","PXRMART",10,0)
 S TEST=$P(TEST,":",2)
"RTN","PXRMART",11,0)
 I 'WILD S ITEM=$S(SUB="API":+$O(^PS(50.416,"B",TEST,0)),1:TEST) Q:ITEM=0  D GETINFO Q
"RTN","PXRMART",12,0)
 S ITEM=$E(TEST,1,$L($P(TEST,"*")))
"RTN","PXRMART",13,0)
 I SUB="APC" F  S ITEM=$O(^GMR(120.8,SUB,DFN,ITEM)) Q:ITEM=""!(ITEM'[($E(TEST,1,$L($P(TEST,"*")))))!(NFOUND=NGET)  D GETINFO
"RTN","PXRMART",14,0)
 I SUB="API" S TERM=ITEM,ING=0 F  S ING=$O(^GMR(120.8,SUB,DFN,ING)) Q:'+ING  S INGT=$P(^PS(50.416,ING,0),U) I $E(INGT,1,$L(TERM))=TERM S ITEM=ING D GETINFO
"RTN","PXRMART",15,0)
 Q
"RTN","PXRMART",16,0)
 ;
"RTN","PXRMART",17,0)
GETINFO ;
"RTN","PXRMART",18,0)
 N EDATE,IEN,GMRA0,GMRDATA
"RTN","PXRMART",19,0)
 S IEN="" F  S IEN=$O(^GMR(120.8,SUB,DFN,ITEM,IEN),-1) Q:'+IEN!(NFOUND=NGET)  D
"RTN","PXRMART",20,0)
 .S GMRAR0=^GMR(120.8,IEN,0)
"RTN","PXRMART",21,0)
 .S EDATE=$P(GMRAR0,U,4)
"RTN","PXRMART",22,0)
 .Q:EDATE<BDT!(EDATE>EDT)
"RTN","PXRMART",23,0)
 .S NFOUND=NFOUND+1,TEST(NFOUND)=1,DATE(NFOUND)=EDATE
"RTN","PXRMART",24,0)
 .S DATA(NFOUND,"REACTANT")=$P(GMRAR0,U,2)
"RTN","PXRMART",25,0)
 .S DATA(NFOUND,"OBSERVED/HISTORICAL")=$$EXTERNAL^DILFD(120.8,6,"",$P(GMRAR0,U,6))
"RTN","PXRMART",26,0)
 .S DATA(NFOUND,"MECHANISM")=$$EXTERNAL^DILFD(120.8,17,"",$P(GMRAR0,U,14))
"RTN","PXRMART",27,0)
 .S DATA(NFOUND,"ALLERGY TYPE")=$P(GMRAR0,U,20)
"RTN","PXRMART",28,0)
 .S TEXT(NFOUND)="Documented reaction "_$S(SUB="API":"that includes the ingredient ",1:"to an agent in class ")_$S(SUB="APC":ITEM,1:$P(^PS(50.416,ITEM,0),U))_", reactant was: "_DATA(NFOUND,"REACTANT")_"."
"RTN","PXRMART",29,0)
 Q
"RTN","PXRMBXTL")
0^70^B28912703
"RTN","PXRMBXTL",1,0)
PXRMBXTL ; SLC/PKR - Build expanded taxonomies. ;03/26/2013
"RTN","PXRMBXTL",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMBXTL",3,0)
 ;
"RTN","PXRMBXTL",4,0)
 ;====================================================
"RTN","PXRMBXTL",5,0)
CHECK(TAXIEN,KI) ;Check for expanded taxonomy, build it if it does not
"RTN","PXRMBXTL",6,0)
 ;exist.
"RTN","PXRMBXTL",7,0)
 N TEMP
"RTN","PXRMBXTL",8,0)
 S TEMP=$G(^PXD(811.3,TAXIEN,0))
"RTN","PXRMBXTL",9,0)
 I TEMP="" D EXPAND(TAXIEN,KI)
"RTN","PXRMBXTL",10,0)
 Q
"RTN","PXRMBXTL",11,0)
 ;
"RTN","PXRMBXTL",12,0)
 ;====================================================
"RTN","PXRMBXTL",13,0)
DELEXTL(TAXIEN) ;Delete an expanded taxonomy.
"RTN","PXRMBXTL",14,0)
 I '$$LOCKXTL(TAXIEN) Q
"RTN","PXRMBXTL",15,0)
 N DA,DIK
"RTN","PXRMBXTL",16,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMBXTL",17,0)
 S DA=TAXIEN
"RTN","PXRMBXTL",18,0)
 D ^DIK
"RTN","PXRMBXTL",19,0)
 D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",20,0)
 Q
"RTN","PXRMBXTL",21,0)
 ;
"RTN","PXRMBXTL",22,0)
 ;====================================================
"RTN","PXRMBXTL",23,0)
EXPALLO ;Rebuild all taxonomy expansions, used by option
"RTN","PXRMBXTL",24,0)
 I '$D(^XUSEC("PXRM MANAGER",DUZ)) D  Q
"RTN","PXRMBXTL",25,0)
 . W !,"You must hold the PXRM MANAGER key to use this option."
"RTN","PXRMBXTL",26,0)
 D EXPALL^PXRMBXTL
"RTN","PXRMBXTL",27,0)
 Q
"RTN","PXRMBXTL",28,0)
 ;
"RTN","PXRMBXTL",29,0)
 ;====================================================
"RTN","PXRMBXTL",30,0)
EXPALL ;Rebuild all taxonomy expansions.
"RTN","PXRMBXTL",31,0)
 N IEN,NAME
"RTN","PXRMBXTL",32,0)
 D BMES^XPDUTL("Rebuilding all taxonomy expansions.")
"RTN","PXRMBXTL",33,0)
 S IEN=0
"RTN","PXRMBXTL",34,0)
 F  S IEN=+$O(^PXD(811.2,IEN)) Q:IEN=0  D
"RTN","PXRMBXTL",35,0)
 . S NAME=$P(^PXD(811.2,IEN,0),U,1)
"RTN","PXRMBXTL",36,0)
 . D MES^XPDUTL("Expanding "_NAME_"  (IEN="_IEN_")")
"RTN","PXRMBXTL",37,0)
 . D DELEXTL^PXRMBXTL(IEN)
"RTN","PXRMBXTL",38,0)
 . D EXPAND^PXRMBXTL(IEN,"")
"RTN","PXRMBXTL",39,0)
 D BMES^XPDUTL("Done rebuilding taxonomy expansions.")
"RTN","PXRMBXTL",40,0)
 Q
"RTN","PXRMBXTL",41,0)
 ;
"RTN","PXRMBXTL",42,0)
 ;====================================================
"RTN","PXRMBXTL",43,0)
EXPAND(TAXIEN,KI) ;Build an expanded taxonomy. If KI is defined then
"RTN","PXRMBXTL",44,0)
 ;entry KI is being deleted so skip it. KI is checked because this
"RTN","PXRMBXTL",45,0)
 ;can be called by cross-references in 811.2.
"RTN","PXRMBXTL",46,0)
 I '$$LOCKXTL(TAXIEN) Q
"RTN","PXRMBXTL",47,0)
 N CPTDATE,DATEBLT,HIGH,ICD0DATE,ICD9DATE,IND,LOW
"RTN","PXRMBXTL",48,0)
 N NICD0,NICD9,NICPT,NRCPT,TEMP,X,X1,X2
"RTN","PXRMBXTL",49,0)
 K ^PXD(811.3,TAXIEN)
"RTN","PXRMBXTL",50,0)
 S DATEBLT=$$NOW^XLFDT
"RTN","PXRMBXTL",51,0)
 S $P(^PXD(811.3,TAXIEN,0),U,1)=TAXIEN
"RTN","PXRMBXTL",52,0)
 S $P(^PXD(811.3,TAXIEN,0),U,2)=DATEBLT
"RTN","PXRMBXTL",53,0)
 ;
"RTN","PXRMBXTL",54,0)
 S (IND,NICD0)=0
"RTN","PXRMBXTL",55,0)
 F  S IND=+$O(^PXD(811.2,TAXIEN,80.1,IND)) Q:IND=0  D
"RTN","PXRMBXTL",56,0)
 . I KI=IND Q
"RTN","PXRMBXTL",57,0)
 . S TEMP=^PXD(811.2,TAXIEN,80.1,IND,0)
"RTN","PXRMBXTL",58,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",59,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",60,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",61,0)
 . D ICD0(TAXIEN,LOW,HIGH,.NICD0)
"RTN","PXRMBXTL",62,0)
 S ICD0DATE=$$GET1^DID(80.1,"","","PACKAGE REVISION DATA")
"RTN","PXRMBXTL",63,0)
 S ICD0DATE=$P(ICD0DATE,U,2)
"RTN","PXRMBXTL",64,0)
 S $P(^PXD(811.3,TAXIEN,0),U,3,4)=NICD0_U_ICD0DATE
"RTN","PXRMBXTL",65,0)
 ;
"RTN","PXRMBXTL",66,0)
 S (IND,NICD9)=0
"RTN","PXRMBXTL",67,0)
 F  S IND=+$O(^PXD(811.2,TAXIEN,80,IND)) Q:IND=0  D
"RTN","PXRMBXTL",68,0)
 . I KI=IND Q
"RTN","PXRMBXTL",69,0)
 . S TEMP=^PXD(811.2,TAXIEN,80,IND,0)
"RTN","PXRMBXTL",70,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",71,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",72,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",73,0)
 . D ICD9(TAXIEN,LOW,HIGH,.NICD9)
"RTN","PXRMBXTL",74,0)
 S ICD9DATE=$$GET1^DID(80,"","","PACKAGE REVISION DATA")
"RTN","PXRMBXTL",75,0)
 S ICD9DATE=$P(ICD9DATE,U,2)
"RTN","PXRMBXTL",76,0)
 S $P(^PXD(811.3,TAXIEN,0),U,5,6)=NICD9_U_ICD9DATE
"RTN","PXRMBXTL",77,0)
 ;
"RTN","PXRMBXTL",78,0)
 S (IND,NICPT,NRCPT)=0
"RTN","PXRMBXTL",79,0)
 F  S IND=+$O(^PXD(811.2,TAXIEN,81,IND)) Q:IND=0  D
"RTN","PXRMBXTL",80,0)
 . I KI=IND Q
"RTN","PXRMBXTL",81,0)
 . S TEMP=^PXD(811.2,TAXIEN,81,IND,0)
"RTN","PXRMBXTL",82,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",83,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",84,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",85,0)
 . D ICPT(TAXIEN,LOW,HIGH,.NICPT,.NRCPT)
"RTN","PXRMBXTL",86,0)
 S CPTDATE=$$GET1^DID(81,"","","PACKAGE REVISION DATA")
"RTN","PXRMBXTL",87,0)
 S CPTDATE=$P(CPTDATE,U,2)
"RTN","PXRMBXTL",88,0)
 S $P(^PXD(811.3,TAXIEN,0),U,7,9)=NICPT_U_CPTDATE_U_NRCPT
"RTN","PXRMBXTL",89,0)
 ;
"RTN","PXRMBXTL",90,0)
 ;Create the patient data source.
"RTN","PXRMBXTL",91,0)
 ;S (X1,X2)="TAX"
"RTN","PXRMBXTL",92,0)
 ;S X=$P(^PXD(811.2,TAXIEN,0),U,4)
"RTN","PXRMBXTL",93,0)
 ;D KPDS^PXRMPDS(X,X1,X2,TAXIEN)
"RTN","PXRMBXTL",94,0)
 ;D SPDS^PXRMPDS(X,X1,X2,TAXIEN)
"RTN","PXRMBXTL",95,0)
 ;
"RTN","PXRMBXTL",96,0)
 D SZN
"RTN","PXRMBXTL",97,0)
 D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",98,0)
 Q
"RTN","PXRMBXTL",99,0)
 ;
"RTN","PXRMBXTL",100,0)
 ;====================================================
"RTN","PXRMBXTL",101,0)
ICD0(TAXIEN,LOW,HIGH,NICD0) ;Build the list of internal entries for ICD0
"RTN","PXRMBXTL",102,0)
 ;(File 80.1). Use of ICDAPIU: DBIA #3991
"RTN","PXRMBXTL",103,0)
 N CODE,IEN,TEMP
"RTN","PXRMBXTL",104,0)
 S CODE=LOW
"RTN","PXRMBXTL",105,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMBXTL",106,0)
 . S TEMP=$$STATCHK^ICDAPIU(CODE,"")
"RTN","PXRMBXTL",107,0)
 . S IEN=$P(TEMP,U,2)
"RTN","PXRMBXTL",108,0)
 . I IEN'=-1,'$D(^PXD(811.3,TAXIEN,80.1,"ICD0P",IEN)) D
"RTN","PXRMBXTL",109,0)
 .. S NICD0=NICD0+1
"RTN","PXRMBXTL",110,0)
 .. S ^PXD(811.3,TAXIEN,80.1,NICD0,0)=IEN
"RTN","PXRMBXTL",111,0)
 .. S ^PXD(811.3,TAXIEN,80.1,"ICD0P",IEN,NICD0,0)=""
"RTN","PXRMBXTL",112,0)
 . S CODE=$$NEXT^ICDAPIU(CODE)
"RTN","PXRMBXTL",113,0)
 Q
"RTN","PXRMBXTL",114,0)
 ;
"RTN","PXRMBXTL",115,0)
 ;====================================================
"RTN","PXRMBXTL",116,0)
ICD9(TAXIEN,LOW,HIGH,NICD9) ;Build the list of internal entries for ICD9
"RTN","PXRMBXTL",117,0)
 ;(File 80). Use of ICDAPIU: DBIA #3991
"RTN","PXRMBXTL",118,0)
 N CODE,IEN,TEMP
"RTN","PXRMBXTL",119,0)
 S CODE=LOW
"RTN","PXRMBXTL",120,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMBXTL",121,0)
 . S TEMP=$$STATCHK^ICDAPIU(CODE,"")
"RTN","PXRMBXTL",122,0)
 . S IEN=$P(TEMP,U,2)
"RTN","PXRMBXTL",123,0)
 . I IEN'=-1,'$D(^PXD(811.3,TAXIEN,80,"ICD9P",IEN)) D
"RTN","PXRMBXTL",124,0)
 .. S NICD9=NICD9+1
"RTN","PXRMBXTL",125,0)
 .. S ^PXD(811.3,TAXIEN,80,NICD9,0)=IEN
"RTN","PXRMBXTL",126,0)
 .. S ^PXD(811.3,TAXIEN,80,"ICD9P",IEN,NICD9,0)=""
"RTN","PXRMBXTL",127,0)
 . S CODE=$$NEXT^ICDAPIU(CODE)
"RTN","PXRMBXTL",128,0)
 Q
"RTN","PXRMBXTL",129,0)
 ;
"RTN","PXRMBXTL",130,0)
 ;====================================================
"RTN","PXRMBXTL",131,0)
ICPT(TAXIEN,LOW,HIGH,NICPT,NRCPT) ;Build the list of internal entries
"RTN","PXRMBXTL",132,0)
 ;for ICPT (File 81). Use of ICDAPIU: DBIA #3991
"RTN","PXRMBXTL",133,0)
 N CODE,IEN,RADIEN,TEMP
"RTN","PXRMBXTL",134,0)
 S CODE=LOW
"RTN","PXRMBXTL",135,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMBXTL",136,0)
 . S TEMP=$$STATCHK^ICPTAPIU(CODE,"")
"RTN","PXRMBXTL",137,0)
 . S IEN=$P(TEMP,U,2)
"RTN","PXRMBXTL",138,0)
 . I IEN'=-1,'$D(^PXD(811.3,TAXIEN,81,"ICPTP",IEN)) D
"RTN","PXRMBXTL",139,0)
 .. S NICPT=NICPT+1
"RTN","PXRMBXTL",140,0)
 .. S ^PXD(811.3,TAXIEN,81,NICPT,0)=IEN
"RTN","PXRMBXTL",141,0)
 .. S ^PXD(811.3,TAXIEN,81,"ICPTP",IEN,NICPT,0)=""
"RTN","PXRMBXTL",142,0)
 ..;Determine if this is a radiology procedure.
"RTN","PXRMBXTL",143,0)
 ..;DBIA #586.
"RTN","PXRMBXTL",144,0)
 .. S RADIEN=""
"RTN","PXRMBXTL",145,0)
 .. F  S RADIEN=+$O(^RAMIS(71,"D",IEN,RADIEN)) Q:RADIEN=0  D
"RTN","PXRMBXTL",146,0)
 ... S NRCPT=NRCPT+1
"RTN","PXRMBXTL",147,0)
 ... S ^PXD(811.3,TAXIEN,71,NRCPT,0)=IEN_U_RADIEN
"RTN","PXRMBXTL",148,0)
 ... S ^PXD(811.3,TAXIEN,71,"RCPTP",RADIEN,NRCPT,0)=IEN
"RTN","PXRMBXTL",149,0)
 . S CODE=$$NEXT^ICPTAPIU(CODE)
"RTN","PXRMBXTL",150,0)
 Q
"RTN","PXRMBXTL",151,0)
 ;
"RTN","PXRMBXTL",152,0)
 ;====================================================
"RTN","PXRMBXTL",153,0)
LOCKXTL(TAXIEN) ;Lock the expanded taxonomy entry. This may be called during
"RTN","PXRMBXTL",154,0)
 ;reminder evalution in which case PXRMXTLK will be defined or during
"RTN","PXRMBXTL",155,0)
 ;a taxonomy edit in which case PXRMXTLK will be undefined.
"RTN","PXRMBXTL",156,0)
 N IND,LC,LOCK
"RTN","PXRMBXTL",157,0)
 I $D(PXRMXTLK) S LC=3
"RTN","PXRMBXTL",158,0)
 E  S LC=2
"RTN","PXRMBXTL",159,0)
 S LOCK=0
"RTN","PXRMBXTL",160,0)
 F IND=1:1:LC Q:LOCK  D
"RTN","PXRMBXTL",161,0)
 . L +^PXD(811.3,TAXIEN):DILOCKTM
"RTN","PXRMBXTL",162,0)
 . S LOCK=$T
"RTN","PXRMBXTL",163,0)
 ;If we can't a get a lock take appropriate action.
"RTN","PXRMBXTL",164,0)
 I 'LOCK D
"RTN","PXRMBXTL",165,0)
 . I $D(PXRMXTLK) S PXRMXTLK=TAXIEN
"RTN","PXRMBXTL",166,0)
 . E  D
"RTN","PXRMBXTL",167,0)
 .. N TEXT
"RTN","PXRMBXTL",168,0)
 .. S TEXT="Could not get lock for expanded taxonomy "_TAXIEN_", try again later."
"RTN","PXRMBXTL",169,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMBXTL",170,0)
 Q LOCK
"RTN","PXRMBXTL",171,0)
 ;
"RTN","PXRMBXTL",172,0)
 ;====================================================
"RTN","PXRMBXTL",173,0)
SELEXP ;Entry point for the option selected taxonomy expansion.
"RTN","PXRMBXTL",174,0)
 N TAXIEN
"RTN","PXRMBXTL",175,0)
 S TAXIEN=+$$SELECT^PXRMINQ("^PXD(811.2,","Select a taxonomy to expand: ")
"RTN","PXRMBXTL",176,0)
 I TAXIEN=-1 Q
"RTN","PXRMBXTL",177,0)
 D EXPAND(TAXIEN,"")
"RTN","PXRMBXTL",178,0)
 Q
"RTN","PXRMBXTL",179,0)
 ;
"RTN","PXRMBXTL",180,0)
 ;====================================================
"RTN","PXRMBXTL",181,0)
SZN ;Set 0 node.
"RTN","PXRMBXTL",182,0)
 N IEN,TOTAL
"RTN","PXRMBXTL",183,0)
 S (IEN,TOTAL)=0
"RTN","PXRMBXTL",184,0)
 F  S IEN=+$O(^PXD(811.3,IEN)) Q:IEN=0  S TOTAL=TOTAL+1
"RTN","PXRMBXTL",185,0)
 ;Third piece is last number entered, fourth piece is the number
"RTN","PXRMBXTL",186,0)
 ;of entries.
"RTN","PXRMBXTL",187,0)
 S $P(^PXD(811.3,0),U,3,4)="1^"_TOTAL
"RTN","PXRMBXTL",188,0)
 Q
"RTN","PXRMBXTL",189,0)
 ;
"RTN","PXRMBXTL",190,0)
 ;====================================================
"RTN","PXRMBXTL",191,0)
ULOCKXTL(TAXIEN) ;Unlock the expanded taxonomy.
"RTN","PXRMBXTL",192,0)
 L -^PXD(811.3,TAXIEN)
"RTN","PXRMBXTL",193,0)
 Q
"RTN","PXRMBXTL",194,0)
 ;
"RTN","PXRMCDEF")
0^51^B2371303
"RTN","PXRMCDEF",1,0)
PXRMCDEF ;SLC/AGP - Computed findings for Reminder Definition. ;01/25/2013
"RTN","PXRMCDEF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMCDEF",3,0)
 ;
"RTN","PXRMCDEF",4,0)
 ;======================================================
"RTN","PXRMCDEF",5,0)
RDEF(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for returing a Reminder
"RTN","PXRMCDEF",6,0)
 ;definition evaluation status
"RTN","PXRMCDEF",7,0)
 I TEST="" S TEST=0 Q
"RTN","PXRMCDEF",8,0)
 ;New PXRMFFSS and PXRMTDEB so that reminder test function finding
"RTN","PXRMCDEF",9,0)
 ;and term output is not corrupted.
"RTN","PXRMCDEF",10,0)
 N DEFARR,FIEVAL,NAME,PNAME,RIEN,TEMP,PARAM,PXRMFFSS,PXRMTDEB
"RTN","PXRMCDEF",11,0)
 S NAME=$P(TEST,U)
"RTN","PXRMCDEF",12,0)
 S PARAM=$P(TEST,U,2),PARAM=$P($G(PARAM),"=",2),TEST=0,DATE=$$NOW^PXRMDATE
"RTN","PXRMCDEF",13,0)
 S RIEN=$O(^PXD(811.9,"B",NAME,"")) Q:RIEN'>0
"RTN","PXRMCDEF",14,0)
 I +$P(^PXD(811.9,RIEN,0),U,6)=1 Q
"RTN","PXRMCDEF",15,0)
 K ^TMP("PXRHM",$J,RIEN)
"RTN","PXRMCDEF",16,0)
 S PNAME=$S($P($G(^PXD(811.9,RIEN,0)),U,3)'="":$P(^PXD(811.9,RIEN,0),U,3),1:NAME)
"RTN","PXRMCDEF",17,0)
 ;Load the definition into DEFARR.
"RTN","PXRMCDEF",18,0)
 D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMCDEF",19,0)
 D EVAL^PXRM(DFN,.DEFARR,1,0,.FIEVAL,DATE)
"RTN","PXRMCDEF",20,0)
 S TEMP=$G(^TMP("PXRHM",$J,RIEN,PNAME))
"RTN","PXRMCDEF",21,0)
 K ^TMP("PXRHM",$J,RIEN)
"RTN","PXRMCDEF",22,0)
 S TEST=$S(TEMP="":0,TEMP["ERROR":0,TEMP["CNBD":0,1:1)
"RTN","PXRMCDEF",23,0)
 Q:'TEST
"RTN","PXRMCDEF",24,0)
 S TEXT="Reminder: "_NAME
"RTN","PXRMCDEF",25,0)
 S VALUE=$P(TEMP,U)
"RTN","PXRMCDEF",26,0)
 S VALUE("STATUS")=VALUE
"RTN","PXRMCDEF",27,0)
 S VALUE("DUEDATE")=$P(TEMP,U,2)
"RTN","PXRMCDEF",28,0)
 S VALUE("LASTDONE")=$P(TEMP,U,3)
"RTN","PXRMCDEF",29,0)
 Q:PARAM=""
"RTN","PXRMCDEF",30,0)
 I PARAM="DUE DATE",+VALUE("DUEDATE")>0 S DATE=VALUE("DUEDATE")
"RTN","PXRMCDEF",31,0)
 I PARAM="LAST DONE",+VALUE("LASTDONE")>0 S DATE=VALUE("LASTDONE")
"RTN","PXRMCDEF",32,0)
 Q
"RTN","PXRMCDEF",33,0)
 ;
"RTN","PXRMCF")
0^88^B63448106
"RTN","PXRMCF",1,0)
PXRMCF ;SLC/PKR - Handle computed findings. ;02/07/2014
"RTN","PXRMCF",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMCF",3,0)
 ;
"RTN","PXRMCF",4,0)
 ;=======================================================
"RTN","PXRMCF",5,0)
HELP(IEN) ;Display help for a computed finding.
"RTN","PXRMCF",6,0)
 N ANS,IND,N,OUTPUT,TEMP,TEXT
"RTN","PXRMCF",7,0)
 S TEMP=^PXRMD(811.4,IEN,0)
"RTN","PXRMCF",8,0)
 S TEXT="Display help for CF."_$P(TEMP,U,1)
"RTN","PXRMCF",9,0)
 S ANS=$$ASKYN^PXRMEUT("N",TEXT)
"RTN","PXRMCF",10,0)
 I ANS=0 Q
"RTN","PXRMCF",11,0)
 S TITLE="Computed Finding Description"
"RTN","PXRMCF",12,0)
 S OUTPUT(1)="Computed finding: "_$P(TEMP,U,1)
"RTN","PXRMCF",13,0)
 S OUTPUT(2)="Type: "_$$EXTERNAL^DILFD(811.4,5,"",$P(TEMP,U,5),"")
"RTN","PXRMCF",14,0)
 S OUTPUT(3)="Class: "_$$EXTERNAL^DILFD(811.4,100,"",$P(^PXRMD(811.4,IEN,100),U,1),"")
"RTN","PXRMCF",15,0)
 S OUTPUT(4)=""
"RTN","PXRMCF",16,0)
 S IND=0,NL=4
"RTN","PXRMCF",17,0)
 F  S IND=+$O(^PXRMD(811.4,IEN,1,IND)) Q:IND=0  D
"RTN","PXRMCF",18,0)
 . S NL=NL+1,OUTPUT(NL)=^PXRMD(811.4,IEN,1,IND,0)
"RTN","PXRMCF",19,0)
 I NL=4 S OUTPUT(4)="There is no description for this computed finding."
"RTN","PXRMCF",20,0)
 D BROWSE^DDBR("OUTPUT","NR","Computed Finding Help")
"RTN","PXRMCF",21,0)
 Q
"RTN","PXRMCF",22,0)
 ;
"RTN","PXRMCF",23,0)
 ;=======================================================
"RTN","PXRMCF",24,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate computed findings.
"RTN","PXRMCF",25,0)
 N FIEVT,FILENUM,FINDING,FINDPA,ITEM
"RTN","PXRMCF",26,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMCF",27,0)
 S ITEM=""
"RTN","PXRMCF",28,0)
 F  S ITEM=$O(DEFARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMCF",29,0)
 . S FINDING=""
"RTN","PXRMCF",30,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,ITEM,FINDING)) Q:+FINDING=0  D
"RTN","PXRMCF",31,0)
 .. K FINDPA
"RTN","PXRMCF",32,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMCF",33,0)
 .. K FIEVT
"RTN","PXRMCF",34,0)
 .. D FIEVAL(FILENUM,DFN,ITEM,.FINDPA,.FIEVT)
"RTN","PXRMCF",35,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMCF",36,0)
 .. S FIEVAL(FINDING,"FINDING")=$P(FINDPA(0),U,1)
"RTN","PXRMCF",37,0)
 Q
"RTN","PXRMCF",38,0)
 ;
"RTN","PXRMCF",39,0)
 ;=======================================================
"RTN","PXRMCF",40,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Patient list evaluator.
"RTN","PXRMCF",41,0)
 ;Return the list in ^TMP($J,PLIST)
"RTN","PXRMCF",42,0)
 N ITEM,FILENUM,PFINDPA
"RTN","PXRMCF",43,0)
 N TEMP,TFINDING,TFINDPA
"RTN","PXRMCF",44,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMCF",45,0)
 S ITEM=""
"RTN","PXRMCF",46,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMCF",47,0)
 . S TFINDING=""
"RTN","PXRMCF",48,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMCF",49,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMCF",50,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMCF",51,0)
 ..;Set the finding parameters.
"RTN","PXRMCF",52,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMCF",53,0)
 .. D GPLIST(FILENUM,ITEM,.PFINDPA,PLIST)
"RTN","PXRMCF",54,0)
 Q
"RTN","PXRMCF",55,0)
 ;
"RTN","PXRMCF",56,0)
 ;=======================================================
"RTN","PXRMCF",57,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;General term
"RTN","PXRMCF",58,0)
 ;evaluator.
"RTN","PXRMCF",59,0)
 N FIEVT,FILENUM,ITEM,PFINDPA
"RTN","PXRMCF",60,0)
 N TEMP,TFINDING,TFINDPA
"RTN","PXRMCF",61,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMCF",62,0)
 S ITEM=""
"RTN","PXRMCF",63,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:+ITEM=0  D
"RTN","PXRMCF",64,0)
 . S TFINDING=""
"RTN","PXRMCF",65,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMCF",66,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMCF",67,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMCF",68,0)
 ..;Set the finding parameters.
"RTN","PXRMCF",69,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMCF",70,0)
 .. D FIEVAL(FILENUM,DFN,ITEM,.PFINDPA,.FIEVT)
"RTN","PXRMCF",71,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMCF",72,0)
 .. S TFIEVAL(TFINDING,"FINDING")=$P(TFINDPA(0),U,1)
"RTN","PXRMCF",73,0)
 Q
"RTN","PXRMCF",74,0)
 ;
"RTN","PXRMCF",75,0)
 ;=======================================================
"RTN","PXRMCF",76,0)
FIEVAL(FILENUM,DFN,ITEM,PFINDPA,FIEVAL) ;
"RTN","PXRMCF",77,0)
 ;Evaluate regular patient findings.
"RTN","PXRMCF",78,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATA,DATE,EDT,FLIST,ICOND,IND
"RTN","PXRMCF",79,0)
 N NFOUND,NGET,NOCC,NP,PDATA,ROUTINE
"RTN","PXRMCF",80,0)
 N SAVE,SDIR,STATUSA,TEMP,TEST,TEXT,TYPE,UCIFS,VALUE,VSLIST
"RTN","PXRMCF",81,0)
 ;Set the finding search parameters.
"RTN","PXRMCF",82,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMCF",83,0)
 I $G(PXRMDEBG) S FIEVAL("BDTE")=BDT,FIEVAL("EDTE")=EDT
"RTN","PXRMCF",84,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMCF",85,0)
 S TEST=PFINDPA(15)
"RTN","PXRMCF",86,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMCF",87,0)
 S NGET=$S(UCIFS:50,$D(STATUSA):50,1:NOCC)
"RTN","PXRMCF",88,0)
 ;Make sure NGET has the same sign as NOCC.
"RTN","PXRMCF",89,0)
 I NGET'=NOCC S NGET=NGET*($$ABS^XLFMTH(NOCC)/NOCC)
"RTN","PXRMCF",90,0)
 S TEMP=^PXRMD(811.4,ITEM,0)
"RTN","PXRMCF",91,0)
 S TYPE=$P(TEMP,U,5)
"RTN","PXRMCF",92,0)
 I TYPE="" S TYPE="S"
"RTN","PXRMCF",93,0)
 I TYPE="S" D
"RTN","PXRMCF",94,0)
 . S ROUTINE=$P(TEMP,U,3)_"^"_$P(TEMP,U,2)_"(DFN,.TEST,.DATE,.VALUE,.TEXT)"
"RTN","PXRMCF",95,0)
 . D @ROUTINE
"RTN","PXRMCF",96,0)
 .;Make sure that the date is in range.
"RTN","PXRMCF",97,0)
 . I TEST,DATE'<BDT,DATE'>EDT S NFOUND=1
"RTN","PXRMCF",98,0)
 . E  S NFOUND=0
"RTN","PXRMCF",99,0)
 . I NFOUND D
"RTN","PXRMCF",100,0)
 .. S TEST(1)=TEST,DATE(1)=DATE,TEXT(1)=$G(TEXT)
"RTN","PXRMCF",101,0)
 .. S DATA(1,"VALUE")=$G(VALUE)
"RTN","PXRMCF",102,0)
 .. I $D(VALUE)=11 S IND="" F  S IND=$O(VALUE(IND)) Q:IND=""  S DATA(1,IND)=VALUE(IND)
"RTN","PXRMCF",103,0)
 I TYPE="M" D
"RTN","PXRMCF",104,0)
 . S ROUTINE=$P(TEMP,U,3)_"^"_$P(TEMP,U,2)_"(DFN,NGET,BDT,EDT,.NFOUND,.TEST,.DATE,.DATA,.TEXT)"
"RTN","PXRMCF",105,0)
 . D @ROUTINE
"RTN","PXRMCF",106,0)
 I TYPE'="S",TYPE'="M" D
"RTN","PXRMCF",107,0)
 . S NFOUND=0
"RTN","PXRMCF",108,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","COMPUTED FINDING","WRONG TYPE")=TYPE_" IS NOT SUITABLE FOR REMINDER EVALUATION"
"RTN","PXRMCF",109,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMCF",110,0)
 S NP=0
"RTN","PXRMCF",111,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMCF",112,0)
 . S DATA(IND,"DATE")=DATE(IND)
"RTN","PXRMCF",113,0)
 . I TEST(IND),COND'="" D
"RTN","PXRMCF",114,0)
 .. K PDATA M PDATA=DATA(IND)
"RTN","PXRMCF",115,0)
 .. S CONVAL=$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.PDATA)
"RTN","PXRMCF",116,0)
 . E  S CONVAL=TEST(IND)
"RTN","PXRMCF",117,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMCF",118,0)
 . I SAVE D
"RTN","PXRMCF",119,0)
 .. S NP=NP+1
"RTN","PXRMCF",120,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMCF",121,0)
 .. I COND'="" S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMCF",122,0)
 .. S FIEVAL(NP,"DATE")=DATE(IND)
"RTN","PXRMCF",123,0)
 .. M FIEVAL(NP,"TEXT")=TEXT(IND)
"RTN","PXRMCF",124,0)
 .. M FIEVAL(NP)=DATA(IND)
"RTN","PXRMCF",125,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=DATA(IND)
"RTN","PXRMCF",126,0)
 ;
"RTN","PXRMCF",127,0)
 ;Save the finding result.
"RTN","PXRMCF",128,0)
 D SFRES^PXRMUTIL(SDIR,NP,.FIEVAL)
"RTN","PXRMCF",129,0)
 S FIEVAL("FILE NUMBER")=FILENUM
"RTN","PXRMCF",130,0)
 Q
"RTN","PXRMCF",131,0)
 ;
"RTN","PXRMCF",132,0)
 ;=======================================================
"RTN","PXRMCF",133,0)
GPLIST(FILENUM,CFIEN,PFINDPA,PLIST) ;Add to the patient list
"RTN","PXRMCF",134,0)
 ;for a regular file.
"RTN","PXRMCF",135,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,DATA,DFN,FLIST
"RTN","PXRMCF",136,0)
 N ICOND,IND,IPLIST
"RTN","PXRMCF",137,0)
 N NOCC,NOCCABS,NFOUND,NGET,NP,PARAM,ROUTINE
"RTN","PXRMCF",138,0)
 N SAVE,STATUSA,TEMP,TEXT,TGLIST,TPLIST,TYPE
"RTN","PXRMCF",139,0)
 N UCIFS,VALUE,VSLIST
"RTN","PXRMCF",140,0)
 S TEMP=^PXRMD(811.4,CFIEN,0)
"RTN","PXRMCF",141,0)
 S TYPE=$P(TEMP,U,5)
"RTN","PXRMCF",142,0)
 I TYPE'="L" Q
"RTN","PXRMCF",143,0)
 S TGLIST="GPLIST_PXRMCF"
"RTN","PXRMCF",144,0)
 S PARAM=PFINDPA(15)
"RTN","PXRMCF",145,0)
 ;Set the finding search parameters.
"RTN","PXRMCF",146,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMCF",147,0)
 S NOCCABS=$$ABS^XLFMTH(NOCC)
"RTN","PXRMCF",148,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMCF",149,0)
 S NGET=$S(UCIFS:50,$D(STATUSA):50,1:NOCCABS)
"RTN","PXRMCF",150,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMCF",151,0)
 S ROUTINE=$P(TEMP,U,3)_"^"_$P(TEMP,U,2)_"(NGET,BDT,EDT,TGLIST,PARAM)"
"RTN","PXRMCF",152,0)
 D @ROUTINE
"RTN","PXRMCF",153,0)
 ;Routine should return:
"RTN","PXRMCF",154,0)
 ;^TMP($J,TGLIST,DFN,N)=DAS_U_DATE_U_FILENUM_U_ITEM_U_VALUE
"RTN","PXRMCF",155,0)
 ;Data values for condition are returned in
"RTN","PXRMCF",156,0)
 ;^TMP($J,TGLIST,DFN,N,SUB)=DATA(SUB)
"RTN","PXRMCF",157,0)
 S DFN=""
"RTN","PXRMCF",158,0)
 F  S DFN=$O(^TMP($J,TGLIST,DFN)) Q:DFN=""  D
"RTN","PXRMCF",159,0)
 . K TPLIST
"RTN","PXRMCF",160,0)
 . M TPLIST=^TMP($J,TGLIST,DFN)
"RTN","PXRMCF",161,0)
 . S (IND,NFOUND)=0
"RTN","PXRMCF",162,0)
 . K IPLIST
"RTN","PXRMCF",163,0)
 . F  S IND=$O(TPLIST(IND)) Q:(IND="")!(NFOUND=NOCCABS)  D
"RTN","PXRMCF",164,0)
 .. S TEMP=TPLIST(IND)
"RTN","PXRMCF",165,0)
 .. K DATA M DATA=TPLIST(IND)
"RTN","PXRMCF",166,0)
 .. S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.DATA),1:1)
"RTN","PXRMCF",167,0)
 .. S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMCF",168,0)
 .. I SAVE D
"RTN","PXRMCF",169,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMCF",170,0)
 ... S IPLIST(CONVAL,DFN,CFIEN,NFOUND,FILENUM)=TEMP
"RTN","PXRMCF",171,0)
 . M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMCF",172,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMCF",173,0)
 Q
"RTN","PXRMCF",174,0)
 ;
"RTN","PXRMCF",175,0)
 ;=======================================================
"RTN","PXRMCF",176,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMCF",177,0)
 N DATA,DATE,FIEN,IND,JND,KND,NAME,NOUT,PNAME,TEMP,TEXTOUT,VALUE
"RTN","PXRMCF",178,0)
 S FIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMCF",179,0)
 S TEMP=^PXRMD(811.4,FIEN,0)
"RTN","PXRMCF",180,0)
 S PNAME=$P(TEMP,U,4)
"RTN","PXRMCF",181,0)
 I PNAME="" S PNAME=$P(TEMP,U,1)
"RTN","PXRMCF",182,0)
 S NAME="Computed Finding: "_PNAME_" = "
"RTN","PXRMCF",183,0)
 S IND=0
"RTN","PXRMCF",184,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMCF",185,0)
 . S VALUE=$G(IFIEVAL(IND,"VALUE"))
"RTN","PXRMCF",186,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMCF",187,0)
 . S TEMP=NAME_VALUE_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMCF",188,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMCF",189,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMCF",190,0)
 .;If there is additional text output each line separately.
"RTN","PXRMCF",191,0)
 . S KND=""
"RTN","PXRMCF",192,0)
 . F  S KND=$O(IFIEVAL(IND,"TEXT",KND)) Q:KND=""  D
"RTN","PXRMCF",193,0)
 .. D FORMATS^PXRMTEXT(INDENT+4,PXRMRM,IFIEVAL(IND,"TEXT",KND),.NOUT,.TEXTOUT)
"RTN","PXRMCF",194,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMCF",195,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMCF",196,0)
 Q
"RTN","PXRMCF",197,0)
 ;
"RTN","PXRMCF",198,0)
 ;=======================================================
"RTN","PXRMCF",199,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMCF",200,0)
 ;maintenance output.
"RTN","PXRMCF",201,0)
 N DATA,DATE,FIEN,IND,JND,KND,NOUT,PNAME,TEMP,TEXTOUT,VALUE
"RTN","PXRMCF",202,0)
 S FIEN=$P(IFIEVAL("FINDING"),";",1)
"RTN","PXRMCF",203,0)
 S TEMP=^PXRMD(811.4,FIEN,0)
"RTN","PXRMCF",204,0)
 S PNAME=$P(TEMP,U,4)
"RTN","PXRMCF",205,0)
 I PNAME="" S PNAME=$P(TEMP,U,1)
"RTN","PXRMCF",206,0)
 S NLINES=NLINES+1
"RTN","PXRMCF",207,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Computed Finding: "_PNAME
"RTN","PXRMCF",208,0)
 S IND=0
"RTN","PXRMCF",209,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMCF",210,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMCF",211,0)
 . S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMCF",212,0)
 . S VALUE=$G(IFIEVAL(IND,"VALUE"))
"RTN","PXRMCF",213,0)
 . I VALUE'="" S TEMP=TEMP_" value - "_VALUE
"RTN","PXRMCF",214,0)
 .;If there is text append it.
"RTN","PXRMCF",215,0)
 . I $G(IFIEVAL(IND,"TEXT"))'="" S TEMP=TEMP_"; "_IFIEVAL(IND,"TEXT")
"RTN","PXRMCF",216,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMCF",217,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMCF",218,0)
 .;If there is additional text output each line separately.
"RTN","PXRMCF",219,0)
 . S KND=""
"RTN","PXRMCF",220,0)
 . F  S KND=$O(IFIEVAL(IND,"TEXT",KND)) Q:KND=""  D
"RTN","PXRMCF",221,0)
 .. D FORMATS^PXRMTEXT(INDENT+4,PXRMRM,IFIEVAL(IND,"TEXT",KND),.NOUT,.TEXTOUT)
"RTN","PXRMCF",222,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMCF",223,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMCF",224,0)
 Q
"RTN","PXRMCF",225,0)
 ;
"RTN","PXRMCOPY")
0^71^B21259633
"RTN","PXRMCOPY",1,0)
PXRMCOPY ; SLC/PKR,PJH - Copy various reminder files. ;01/28/2013
"RTN","PXRMCOPY",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMCOPY",3,0)
 ;
"RTN","PXRMCOPY",4,0)
 ;=====================================================
"RTN","PXRMCOPY",5,0)
COPY(PROMPT,ROOT,WHAT) ;Copy an entry of ROOT into a new entry.
"RTN","PXRMCOPY",6,0)
 N DIROUT,DTOUT,DUOUT
"RTN","PXRMCOPY",7,0)
 F  D GETORGR Q:$D(DIROUT)  Q:$D(DTOUT)
"RTN","PXRMCOPY",8,0)
 Q
"RTN","PXRMCOPY",9,0)
 ;
"RTN","PXRMCOPY",10,0)
 ;=====================================================
"RTN","PXRMCOPY",11,0)
GETORGR ;Look-up logic to get and copy source entry to destination.
"RTN","PXRMCOPY",12,0)
 N DA,DIE,DIC,DIK,DIR,DIRUT,FDA,FIELDLEN,FILE
"RTN","PXRMCOPY",13,0)
 N IENN,IENO,IENS,MSG,NAME,ORGNAME,X,Y
"RTN","PXRMCOPY",14,0)
 S DIC=ROOT,DIC(0)="AEMQ",DIC("A")=PROMPT
"RTN","PXRMCOPY",15,0)
 W !
"RTN","PXRMCOPY",16,0)
 D ^DIC
"RTN","PXRMCOPY",17,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMCOPY",18,0)
 S IENO=$P(Y,U,1)
"RTN","PXRMCOPY",19,0)
 I IENO=-1 S DIROUT="" Q
"RTN","PXRMCOPY",20,0)
 ;
"RTN","PXRMCOPY",21,0)
 ;Set the starting place for additions.
"RTN","PXRMCOPY",22,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMCOPY",23,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMCOPY",24,0)
 D MERGE(IENN,IENO,ROOT)
"RTN","PXRMCOPY",25,0)
 ;
"RTN","PXRMCOPY",26,0)
 ;Get the new name.
"RTN","PXRMCOPY",27,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1)
"RTN","PXRMCOPY",28,0)
 S FILE=$$FNFR^PXRMUTIL(ROOT)
"RTN","PXRMCOPY",29,0)
 S FIELDLEN=$$GET1^DID(FILE,.01,"","FIELD LENGTH")
"RTN","PXRMCOPY",30,0)
 S DIR(0)="F"_U_"3:"_FIELDLEN_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMCOPY",31,0)
 S DIR("A")="PLEASE ENTER A UNIQUE NAME"
"RTN","PXRMCOPY",32,0)
GETNAM D ^DIR
"RTN","PXRMCOPY",33,0)
 I $D(DIRUT) D DELETE(ROOT,IENN) Q
"RTN","PXRMCOPY",34,0)
 S NAME=Y
"RTN","PXRMCOPY",35,0)
 ;
"RTN","PXRMCOPY",36,0)
 ;Make sure the new name is valid.
"RTN","PXRMCOPY",37,0)
 I '$$VNAME^PXRMINTR(NAME) G GETNAM
"RTN","PXRMCOPY",38,0)
 ;
"RTN","PXRMCOPY",39,0)
 ;Change to the new name.
"RTN","PXRMCOPY",40,0)
 S IENS=IENN_","
"RTN","PXRMCOPY",41,0)
 S FDA(FILE,IENS,.01)=NAME
"RTN","PXRMCOPY",42,0)
 K MSG
"RTN","PXRMCOPY",43,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMCOPY",44,0)
 ;Check to make sure the name was not a duplicate.
"RTN","PXRMCOPY",45,0)
 I $G(MSG("DIERR",1))=740 D  G GETNAM
"RTN","PXRMCOPY",46,0)
 . W !,NAME," is not a unique name!"
"RTN","PXRMCOPY",47,0)
 ;Change the class to local and delete the sponsor.
"RTN","PXRMCOPY",48,0)
 D SCAS(FILE,IENN,"L","")
"RTN","PXRMCOPY",49,0)
 ;Initialize the edit history.
"RTN","PXRMCOPY",50,0)
 D INIEH(FILE,ROOT,IENN,IENO)
"RTN","PXRMCOPY",51,0)
 ;
"RTN","PXRMCOPY",52,0)
 ;Reindex the cross-references.
"RTN","PXRMCOPY",53,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMCOPY",54,0)
 D IX^DIK
"RTN","PXRMCOPY",55,0)
 W !
"RTN","PXRMCOPY",56,0)
 ;
"RTN","PXRMCOPY",57,0)
 ;Tell the user what has happened and allow for editing of the new item.
"RTN","PXRMCOPY",58,0)
 S DIR(0)="Y"
"RTN","PXRMCOPY",59,0)
 S DIR("A")="Do you want to edit it now"
"RTN","PXRMCOPY",60,0)
 S DIR("A",1)="The original "_WHAT_" "_ORGNAME_" has been copied into "_NAME_"."
"RTN","PXRMCOPY",61,0)
 D ^DIR Q:$D(DIRUT)
"RTN","PXRMCOPY",62,0)
 I Y D EDIT^PXRMEDIT(ROOT,IENN)
"RTN","PXRMCOPY",63,0)
 Q
"RTN","PXRMCOPY",64,0)
 ;
"RTN","PXRMCOPY",65,0)
 ;=====================================================
"RTN","PXRMCOPY",66,0)
COPYLL ;Copy a location list.
"RTN","PXRMCOPY",67,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",68,0)
 S WHAT="location list"
"RTN","PXRMCOPY",69,0)
 S ROOT="^PXRMD(810.9,"
"RTN","PXRMCOPY",70,0)
 S PROMPT="Select the reminder location list to copy: "
"RTN","PXRMCOPY",71,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",72,0)
 Q
"RTN","PXRMCOPY",73,0)
 ;
"RTN","PXRMCOPY",74,0)
 ;=====================================================
"RTN","PXRMCOPY",75,0)
COPYREM ;Copy a reminder definition.
"RTN","PXRMCOPY",76,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",77,0)
 S WHAT="reminder"
"RTN","PXRMCOPY",78,0)
 S ROOT="^PXD(811.9,"
"RTN","PXRMCOPY",79,0)
 S PROMPT="Select the reminder definition to copy: "
"RTN","PXRMCOPY",80,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",81,0)
 Q
"RTN","PXRMCOPY",82,0)
 ;
"RTN","PXRMCOPY",83,0)
 ;=====================================================
"RTN","PXRMCOPY",84,0)
COPYTAX ;Copy a taxonomy.
"RTN","PXRMCOPY",85,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",86,0)
 S WHAT="taxonomy"
"RTN","PXRMCOPY",87,0)
 S ROOT="^PXD(811.2,"
"RTN","PXRMCOPY",88,0)
 S PROMPT="Select the reminder taxonomy to copy: "
"RTN","PXRMCOPY",89,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",90,0)
 Q
"RTN","PXRMCOPY",91,0)
 ;
"RTN","PXRMCOPY",92,0)
 ;=====================================================
"RTN","PXRMCOPY",93,0)
COPYTERM ;Copy a reminder term.
"RTN","PXRMCOPY",94,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",95,0)
 S WHAT="reminder term"
"RTN","PXRMCOPY",96,0)
 S ROOT="^PXRMD(811.5,"
"RTN","PXRMCOPY",97,0)
 S PROMPT="Select the reminder term to copy: "
"RTN","PXRMCOPY",98,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",99,0)
 Q
"RTN","PXRMCOPY",100,0)
 ;
"RTN","PXRMCOPY",101,0)
 ;=====================================================
"RTN","PXRMCOPY",102,0)
DELETE(DIK,DA) ;Delete the entry just added. 
"RTN","PXRMCOPY",103,0)
 D ^DIK
"RTN","PXRMCOPY",104,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMCOPY",105,0)
 Q
"RTN","PXRMCOPY",106,0)
 ;
"RTN","PXRMCOPY",107,0)
 ;=====================================================
"RTN","PXRMCOPY",108,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMCOPY",109,0)
 ;after a call to SETSTART.
"RTN","PXRMCOPY",110,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMCOPY",111,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMCOPY",112,0)
 S OIEN=+$P(@ENTRY,U,3)
"RTN","PXRMCOPY",113,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMCOPY",114,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMCOPY",115,0)
 Q OIEN+1
"RTN","PXRMCOPY",116,0)
 ;
"RTN","PXRMCOPY",117,0)
 ;=====================================================
"RTN","PXRMCOPY",118,0)
INIEH(FILENUM,ROOT,IENN,IENO) ;Initialize the edit history after a copy.
"RTN","PXRMCOPY",119,0)
 ;First delete any existing history entries.
"RTN","PXRMCOPY",120,0)
 N ENTRY,IND,IENS,FDA,FDAIEN,MSG,SFN,TARGET,WP
"RTN","PXRMCOPY",121,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMCOPY",122,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMCOPY",123,0)
 I SFN=0 Q
"RTN","PXRMCOPY",124,0)
 S ENTRY=ROOT_IENN_",110)"
"RTN","PXRMCOPY",125,0)
 S IND=0
"RTN","PXRMCOPY",126,0)
 F  S IND=$O(@ENTRY@(IND)) Q:+IND=0  D
"RTN","PXRMCOPY",127,0)
 . S IENS=IND_","_IENN_","
"RTN","PXRMCOPY",128,0)
 . S FDA(SFN,IENS,.01)="@"
"RTN","PXRMCOPY",129,0)
 I $D(FDA(SFN)) D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCOPY",130,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",131,0)
 ;Establish an initial entry in the edit history.
"RTN","PXRMCOPY",132,0)
 K FDA,MSG
"RTN","PXRMCOPY",133,0)
 S IENS="+1,"_IENN_","
"RTN","PXRMCOPY",134,0)
 S FDAIEN(IENN)=IENN
"RTN","PXRMCOPY",135,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMCOPY",136,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMCOPY",137,0)
 S FDA(SFN,IENS,2)="WP(1,1)"
"RTN","PXRMCOPY",138,0)
 S WP(1,1,1)="Copied from "_$$GET1^DIQ(FILENUM,IENO,.01)
"RTN","PXRMCOPY",139,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMCOPY",140,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",141,0)
 Q
"RTN","PXRMCOPY",142,0)
 ;
"RTN","PXRMCOPY",143,0)
 ;=====================================================
"RTN","PXRMCOPY",144,0)
MERGE(IENN,IENO,ROOT) ;Use MERGE to copy ROOT(IENO into ROOT(IENN.
"RTN","PXRMCOPY",145,0)
 N DEST,SOURCE
"RTN","PXRMCOPY",146,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMCOPY",147,0)
 ;Lock the file before merging.
"RTN","PXRMCOPY",148,0)
 L +@DEST:DILOCKTM
"RTN","PXRMCOPY",149,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMCOPY",150,0)
 M @DEST=@SOURCE
"RTN","PXRMCOPY",151,0)
 ;Unlock the file
"RTN","PXRMCOPY",152,0)
 L -@DEST
"RTN","PXRMCOPY",153,0)
 Q
"RTN","PXRMCOPY",154,0)
 ;
"RTN","PXRMCOPY",155,0)
 ;=====================================================
"RTN","PXRMCOPY",156,0)
SCAS(FILENUM,IEN,CLASS,SPONSOR) ;Set the class field to CLASS and the sponsor
"RTN","PXRMCOPY",157,0)
 ;field to SPONSOR.
"RTN","PXRMCOPY",158,0)
 N IENS,FDA,MSG
"RTN","PXRMCOPY",159,0)
 S IENS=IEN_","
"RTN","PXRMCOPY",160,0)
 S FDA(FILENUM,IENS,100)=CLASS
"RTN","PXRMCOPY",161,0)
 S FDA(FILENUM,IENS,101)=SPONSOR
"RTN","PXRMCOPY",162,0)
 D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCOPY",163,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCOPY",164,0)
 Q
"RTN","PXRMCOPY",165,0)
 ;
"RTN","PXRMCOPY",166,0)
 ;=====================================================
"RTN","PXRMCOPY",167,0)
SETSTART(ROOT) ;Set the starting value to add new entries. Start
"RTN","PXRMCOPY",168,0)
 ;at the begining so empty spaces are filled in.
"RTN","PXRMCOPY",169,0)
 N CUR,ENTRY
"RTN","PXRMCOPY",170,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMCOPY",171,0)
 S $P(@ENTRY,U,3)=1
"RTN","PXRMCOPY",172,0)
 Q
"RTN","PXRMCOPY",173,0)
 ;
"RTN","PXRMCPLS")
0^5^B12687369
"RTN","PXRMCPLS",1,0)
PXRMCPLS ;SLC/PKR - Copy various reminder files. ;09/25/2013
"RTN","PXRMCPLS",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMCPLS",3,0)
 ;New version of PXRMCOPY for List Manager ScreenMan
"RTN","PXRMCPLS",4,0)
 ;applications. This can eventually replace PXRMCOPY.
"RTN","PXRMCPLS",5,0)
 ;================================
"RTN","PXRMCPLS",6,0)
COPY(FILENUM,IEN) ;Copy an entry of ROOT into a new entry.
"RTN","PXRMCPLS",7,0)
 N DA,DIK,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FDA,FIELDLEN,FILENAME
"RTN","PXRMCPLS",8,0)
 N IENN,IENS,MSG,NAME,ORIGNAME,ROOT,X,Y
"RTN","PXRMCPLS",9,0)
 S ROOT=$$ROOT^DILFD(FILENUM)
"RTN","PXRMCPLS",10,0)
 S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMCPLS",11,0)
 S FILENAME=$$LOW^XLFSTR(FILENAME)
"RTN","PXRMCPLS",12,0)
 S ORIGNAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMCPLS",13,0)
 ;Get the new name.
"RTN","PXRMCPLS",14,0)
 S FIELDLEN=$$GET1^DID(FILENUM,.01,"","FIELD LENGTH")
"RTN","PXRMCPLS",15,0)
 S DIR(0)="F"_U_"3:"_FIELDLEN_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMCPLS",16,0)
 S DIR("A")="Enter a Unique Name"
"RTN","PXRMCPLS",17,0)
GETNAM D ^DIR
"RTN","PXRMCPLS",18,0)
 I $D(DIRUT) Q
"RTN","PXRMCPLS",19,0)
 S NAME=Y
"RTN","PXRMCPLS",20,0)
 ;
"RTN","PXRMCPLS",21,0)
 ;Make sure the new name is valid and unique.
"RTN","PXRMCPLS",22,0)
 I '$$VNAME^PXRMINTR(NAME) G GETNAM
"RTN","PXRMCPLS",23,0)
 I $$EXISTS^PXRMEXIU(FILENUM,NAME) D  G GETNAM
"RTN","PXRMCPLS",24,0)
 . W !,"There is already an entry with that name!"
"RTN","PXRMCPLS",25,0)
 ;
"RTN","PXRMCPLS",26,0)
 ;Set the starting place for additions and do the merge.
"RTN","PXRMCPLS",27,0)
 D SETSTART^PXRMCOPY(ROOT)
"RTN","PXRMCPLS",28,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMCPLS",29,0)
 D MERGE(IENN,IEN,ROOT)
"RTN","PXRMCPLS",30,0)
 ;
"RTN","PXRMCPLS",31,0)
 ;Change to the new name.
"RTN","PXRMCPLS",32,0)
 S IENS=IENN_","
"RTN","PXRMCPLS",33,0)
 S FDA(FILENUM,IENS,.01)=NAME
"RTN","PXRMCPLS",34,0)
 K MSG
"RTN","PXRMCPLS",35,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMCPLS",36,0)
 ;Check to make sure the name was not a duplicate.
"RTN","PXRMCPLS",37,0)
 I $G(MSG("DIERR",1))=740 D  G GETNAM
"RTN","PXRMCPLS",38,0)
 . W !,NAME," is not a unique name!"
"RTN","PXRMCPLS",39,0)
 ;Change the class to local and delete the sponsor.
"RTN","PXRMCPLS",40,0)
 D SCAS(FILENUM,IENN,"L","")
"RTN","PXRMCPLS",41,0)
 ;Initialize the change log.
"RTN","PXRMCPLS",42,0)
 D INIEH(FILENUM,ROOT,IENN,IEN)
"RTN","PXRMCPLS",43,0)
 ;
"RTN","PXRMCPLS",44,0)
 ;Reindex the cross-references.
"RTN","PXRMCPLS",45,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMCPLS",46,0)
 D IX^DIK
"RTN","PXRMCPLS",47,0)
 ;
"RTN","PXRMCPLS",48,0)
 ;Tell the user what has happened and allow for editing of the new item.
"RTN","PXRMCPLS",49,0)
 W !
"RTN","PXRMCPLS",50,0)
 S DIR(0)="Y"
"RTN","PXRMCPLS",51,0)
 S DIR("A")="Do you want to edit it now"
"RTN","PXRMCPLS",52,0)
 S DIR("A",1)="The original "_FILENAME_" "_ORIGNAME_" has been copied into "_NAME_"."
"RTN","PXRMCPLS",53,0)
 D ^DIR Q:$D(DIRUT)
"RTN","PXRMCPLS",54,0)
 I Y D EDIT(FILENUM,IENN)
"RTN","PXRMCPLS",55,0)
 Q
"RTN","PXRMCPLS",56,0)
 ;
"RTN","PXRMCPLS",57,0)
 ;================================
"RTN","PXRMCPLS",58,0)
EDIT(FILENUM,IEN) ;Call the appropriate editor.
"RTN","PXRMCPLS",59,0)
 ;The initial version only includes taxonomies.
"RTN","PXRMCPLS",60,0)
 I FILENUM=811.2 D SMANEDIT^PXRMTXSM(IEN,0,"PXRM TAXONOMY EDIT")
"RTN","PXRMCPLS",61,0)
 Q
"RTN","PXRMCPLS",62,0)
 ;
"RTN","PXRMCPLS",63,0)
 ;================================
"RTN","PXRMCPLS",64,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMCPLS",65,0)
 ;after a call to SETSTART.
"RTN","PXRMCPLS",66,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMCPLS",67,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMCPLS",68,0)
 S OIEN=+$P(@ENTRY,U,3)
"RTN","PXRMCPLS",69,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMCPLS",70,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMCPLS",71,0)
 Q OIEN+1
"RTN","PXRMCPLS",72,0)
 ;
"RTN","PXRMCPLS",73,0)
 ;================================
"RTN","PXRMCPLS",74,0)
INIEH(FILENUM,ROOT,IENN,IEN) ;Initialize the change log after a copy.
"RTN","PXRMCPLS",75,0)
 ;First delete any existing history entries.
"RTN","PXRMCPLS",76,0)
 N ENTRY,IND,IENS,FDA,FDAIEN,MSG,SFN,TARGET,WP
"RTN","PXRMCPLS",77,0)
 D FIELD^DID(FILENUM,"CHANGE LOG","","SPECIFIER","TARGET")
"RTN","PXRMCPLS",78,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMCPLS",79,0)
 I SFN=0 Q
"RTN","PXRMCPLS",80,0)
 S ENTRY=ROOT_IENN_",110)"
"RTN","PXRMCPLS",81,0)
 S IND=0
"RTN","PXRMCPLS",82,0)
 F  S IND=$O(@ENTRY@(IND)) Q:+IND=0  D
"RTN","PXRMCPLS",83,0)
 . S IENS=IND_","_IENN_","
"RTN","PXRMCPLS",84,0)
 . S FDA(SFN,IENS,.01)="@"
"RTN","PXRMCPLS",85,0)
 I $D(FDA(SFN)) D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCPLS",86,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCPLS",87,0)
 ;Establish an initial entry in the change log.
"RTN","PXRMCPLS",88,0)
 K FDA,MSG
"RTN","PXRMCPLS",89,0)
 S IENS="+1,"_IENN_","
"RTN","PXRMCPLS",90,0)
 S FDAIEN(IENN)=IENN
"RTN","PXRMCPLS",91,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMCPLS",92,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMCPLS",93,0)
 S FDA(SFN,IENS,2)="WP(1,1)"
"RTN","PXRMCPLS",94,0)
 S WP(1,1,1)="Copied from "_$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMCPLS",95,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMCPLS",96,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCPLS",97,0)
 Q
"RTN","PXRMCPLS",98,0)
 ;
"RTN","PXRMCPLS",99,0)
 ;================================
"RTN","PXRMCPLS",100,0)
MERGE(IENN,IEN,ROOT) ;Use MERGE to copy ROOT(IEN into ROOT(IENN.
"RTN","PXRMCPLS",101,0)
 N DEST,SOURCE
"RTN","PXRMCPLS",102,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMCPLS",103,0)
 ;Lock the file before merging.
"RTN","PXRMCPLS",104,0)
 L +@DEST:DILOCKTM
"RTN","PXRMCPLS",105,0)
 S SOURCE=ROOT_IEN_")"
"RTN","PXRMCPLS",106,0)
 M @DEST=@SOURCE
"RTN","PXRMCPLS",107,0)
 ;Unlock the file
"RTN","PXRMCPLS",108,0)
 L -@DEST
"RTN","PXRMCPLS",109,0)
 Q
"RTN","PXRMCPLS",110,0)
 ;
"RTN","PXRMCPLS",111,0)
 ;================================
"RTN","PXRMCPLS",112,0)
SCAS(FILENUM,IEN,CLASS,SPONSOR) ;Set the class field to CLASS and the sponsor
"RTN","PXRMCPLS",113,0)
 ;field to SPONSOR.
"RTN","PXRMCPLS",114,0)
 N IENS,FDA,MSG
"RTN","PXRMCPLS",115,0)
 S IENS=IEN_","
"RTN","PXRMCPLS",116,0)
 S FDA(FILENUM,IENS,100)=CLASS
"RTN","PXRMCPLS",117,0)
 S FDA(FILENUM,IENS,101)=SPONSOR
"RTN","PXRMCPLS",118,0)
 D FILE^DIE("K","FDA","MSG")
"RTN","PXRMCPLS",119,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMCPLS",120,0)
 Q
"RTN","PXRMCPLS",121,0)
 ;
"RTN","PXRMCPLS",122,0)
 ;================================
"RTN","PXRMCPLS",123,0)
SETSTART(ROOT) ;Set the starting value to add new entries. Start
"RTN","PXRMCPLS",124,0)
 ;at the begining so empty spaces are filled in.
"RTN","PXRMCPLS",125,0)
 N CUR,ENTRY
"RTN","PXRMCPLS",126,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMCPLS",127,0)
 S $P(@ENTRY,U,3)=1
"RTN","PXRMCPLS",128,0)
 Q
"RTN","PXRMCPLS",129,0)
 ;
"RTN","PXRMCSPE")
0^28^B1560002
"RTN","PXRMCSPE",1,0)
PXRMCSPE ; SLC/PKR - Entry points for CSV protocol event point. ;07/27/2012
"RTN","PXRMCSPE",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMCSPE",3,0)
 ;
"RTN","PXRMCSPE",4,0)
 Q
"RTN","PXRMCSPE",5,0)
 ;==================================================
"RTN","PXRMCSPE",6,0)
CPTPE ;CPT code set update
"RTN","PXRMCSPE",7,0)
 S ZTDESC="Clinical Reminders CPT code set update"
"RTN","PXRMCSPE",8,0)
 S ZTDTH=$H
"RTN","PXRMCSPE",9,0)
 S ZTIO=""
"RTN","PXRMCSPE",10,0)
 S ZTRTN="CPT^PXRMCSPE"
"RTN","PXRMCSPE",11,0)
 D ^%ZTLOAD
"RTN","PXRMCSPE",12,0)
 D BMES^XPDUTL("Clinical Reminder CPT Code Update - Task Number "_ZTSK_" queued.")
"RTN","PXRMCSPE",13,0)
 Q
"RTN","PXRMCSPE",14,0)
 ;
"RTN","PXRMCSPE",15,0)
 ;==================================================
"RTN","PXRMCSPE",16,0)
CPT ;Do the CPT update.
"RTN","PXRMCSPE",17,0)
 D CSU^PXRMCSTX("CPT")
"RTN","PXRMCSPE",18,0)
 S ZTREQ="@"
"RTN","PXRMCSPE",19,0)
 Q
"RTN","PXRMCSPE",20,0)
 ;
"RTN","PXRMCSPE",21,0)
 ;==================================================
"RTN","PXRMCSPE",22,0)
ICDPE ;ICD code set update.
"RTN","PXRMCSPE",23,0)
 S ZTDESC="Clinical Reminders ICD code set update"
"RTN","PXRMCSPE",24,0)
 S ZTDTH=$H
"RTN","PXRMCSPE",25,0)
 S ZTIO=""
"RTN","PXRMCSPE",26,0)
 S ZTRTN="ICD^PXRMCSPE"
"RTN","PXRMCSPE",27,0)
 D ^%ZTLOAD
"RTN","PXRMCSPE",28,0)
 D BMES^XPDUTL("Clinical Reminder ICD Code Update - Task Number "_ZTSK_" queued.")
"RTN","PXRMCSPE",29,0)
 Q
"RTN","PXRMCSPE",30,0)
 ;
"RTN","PXRMCSPE",31,0)
 ;==================================================
"RTN","PXRMCSPE",32,0)
ICD ;Do the ICD update.
"RTN","PXRMCSPE",33,0)
 D CSU^PXRMCSTX("ICD")
"RTN","PXRMCSPE",34,0)
 S ZTREQ="@"
"RTN","PXRMCSPE",35,0)
 Q
"RTN","PXRMCSPE",36,0)
 ;
"RTN","PXRMCSTX")
0^29^B2261498
"RTN","PXRMCSTX",1,0)
PXRMCSTX ;SLC/PKR - Routines for taxonomy code set update. ;07/29/2010
"RTN","PXRMCSTX",2,0)
 ;;2.0;CLINICAL REMINDERS;**9,12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMCSTX",3,0)
 ;
"RTN","PXRMCSTX",4,0)
 ;=====================================================
"RTN","PXRMCSTX",5,0)
CSU(TYPE) ;Entry point for code set update.
"RTN","PXRMCSTX",6,0)
 I TYPE'="CPT",TYPE'="ICD" Q
"RTN","PXRMCSTX",7,0)
 N IND,NL,NLINES,OUTPUT,PTYPE,XMSUB
"RTN","PXRMCSTX",8,0)
 S PTYPE=$S(TYPE="CPT":"a CPT",TYPE="ICD":"an ICD")
"RTN","PXRMCSTX",9,0)
 S ^TMP("PXRMXMZ",$J,1,0)="There was "_PTYPE_" code set update on "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")_"."
"RTN","PXRMCSTX",10,0)
 S ^TMP("PXRMXMZ",$J,2,0)=" "
"RTN","PXRMCSTX",11,0)
 S NL=2
"RTN","PXRMCSTX",12,0)
 D REPTEXT^PXRMUIDR(.NLINES,.OUTPUT)
"RTN","PXRMCSTX",13,0)
 F IND=1:1:NLINES S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=OUTPUT(IND)
"RTN","PXRMCSTX",14,0)
 I NLINES>3 D
"RTN","PXRMCSTX",15,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMCSTX",16,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Please review the affected taxonomies and take appropriate action."
"RTN","PXRMCSTX",17,0)
 S XMSUB="Clinical Reminder taxonomy updates, "_TYPE_" global was updated."
"RTN","PXRMCSTX",18,0)
 N TO
"RTN","PXRMCSTX",19,0)
 S TO(DUZ)=""
"RTN","PXRMCSTX",20,0)
 D SEND^PXRMMSG("PXRMXMZ",XMSUB,.TO,DUZ)
"RTN","PXRMCSTX",21,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMCSTX",22,0)
 Q
"RTN","PXRMCSTX",23,0)
 ;
"RTN","PXRMDATE")
0^112^B70140007
"RTN","PXRMDATE",1,0)
PXRMDATE ;SLC/PKR - Clinical Reminders date utilities. ;10/23/2013
"RTN","PXRMDATE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMDATE",3,0)
 ;
"RTN","PXRMDATE",4,0)
 ;==================================================
"RTN","PXRMDATE",5,0)
CEFD(FDA) ;Called by the Exchange Utility only if the input packed
"RTN","PXRMDATE",6,0)
 ;reminder was packed under v1.5.  Move Effective Date to Beginning Date.
"RTN","PXRMDATE",7,0)
 N IND
"RTN","PXRMDATE",8,0)
 S IND=""
"RTN","PXRMDATE",9,0)
 F  S IND=$O(FDA(811.902,IND)) Q:IND=""  D
"RTN","PXRMDATE",10,0)
 . I '$D(FDA(811.902,IND,12)) Q
"RTN","PXRMDATE",11,0)
 .;If the EFFECTIVE PERIOD exists don't do anything.
"RTN","PXRMDATE",12,0)
 . I $D(FDA(811.902,IND,9)) Q
"RTN","PXRMDATE",13,0)
 . S FDA(811.902,IND,9)=FDA(811.902,IND,12)
"RTN","PXRMDATE",14,0)
 . K FDA(811.902,IND,12)
"RTN","PXRMDATE",15,0)
 Q
"RTN","PXRMDATE",16,0)
 ;
"RTN","PXRMDATE",17,0)
 ;==================================================
"RTN","PXRMDATE",18,0)
COMPARE(X) ;Compare beginning and ending dates, give a warning if
"RTN","PXRMDATE",19,0)
 ;Ending Date comes before Beginning Date. Called by ADATE xref in
"RTN","PXRMDATE",20,0)
 ;definitions and terms.
"RTN","PXRMDATE",21,0)
 ;Do not execute as part of exchange.
"RTN","PXRMDATE",22,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMDATE",23,0)
 N BDT,EDT,TEXT
"RTN","PXRMDATE",24,0)
 ;Dates that are only defined during evaluation, i.e., FIEVAL(2,"DATE")
"RTN","PXRMDATE",25,0)
 ;cannot be checked here.
"RTN","PXRMDATE",26,0)
 S BDT=$S(X(1)'="":$$CTFMD^PXRMDATE(X(1)),1:0)
"RTN","PXRMDATE",27,0)
 I BDT=-1 Q
"RTN","PXRMDATE",28,0)
 S EDT=X(2)
"RTN","PXRMDATE",29,0)
 I EDT="" S EDT="T"
"RTN","PXRMDATE",30,0)
 S EDT=$$CTFMD^PXRMDATE(EDT)
"RTN","PXRMDATE",31,0)
 I EDT=-1 Q
"RTN","PXRMDATE",32,0)
 ;If EDT does not contain a time set it to the end of the day.
"RTN","PXRMDATE",33,0)
 I EDT'["." S EDT=EDT_".235959"
"RTN","PXRMDATE",34,0)
 I EDT<BDT D
"RTN","PXRMDATE",35,0)
 . S BDT=$S(X(1)'="":X(1),1:"")
"RTN","PXRMDATE",36,0)
 . S EDT=$S(X(2)'="":X(2),1:"T@2400")
"RTN","PXRMDATE",37,0)
 . S TEXT="Warning the ending date ("_EDT_") is before the beginning date ("_BDT_")"
"RTN","PXRMDATE",38,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMDATE",39,0)
 Q
"RTN","PXRMDATE",40,0)
 ;
"RTN","PXRMDATE",41,0)
 ;==================================================
"RTN","PXRMDATE",42,0)
COTN(EFP) ;Convert an Effective Period to the new date/time format.
"RTN","PXRMDATE",43,0)
 ;Possible effective periods are ND, NM, or NY where N is an integer.
"RTN","PXRMDATE",44,0)
 S EFP=$$UP^XLFSTR(EFP)
"RTN","PXRMDATE",45,0)
 I (EFP?1N.N1"D")!(EFP?1N.N1"M")!(EFP?1N.N1"Y") D
"RTN","PXRMDATE",46,0)
 . S NUM=+EFP
"RTN","PXRMDATE",47,0)
 . S EFP=$S(NUM=0:"T",1:"T-"_EFP)
"RTN","PXRMDATE",48,0)
 Q EFP
"RTN","PXRMDATE",49,0)
 ;
"RTN","PXRMDATE",50,0)
 ;==================================================
"RTN","PXRMDATE",51,0)
CTD(MULT,NUM) ;Convert months or years to days.
"RTN","PXRMDATE",52,0)
 N DAYS,INTDAYS,FRAC
"RTN","PXRMDATE",53,0)
 S DAYS=MULT*NUM
"RTN","PXRMDATE",54,0)
 ;Round the number of days.
"RTN","PXRMDATE",55,0)
 S INTDAYS=+$P(DAYS,".",1)
"RTN","PXRMDATE",56,0)
 S FRAC=DAYS-INTDAYS
"RTN","PXRMDATE",57,0)
 S DAYS=$S(FRAC<0.5:INTDAYS,1:INTDAYS+1)
"RTN","PXRMDATE",58,0)
 Q DAYS
"RTN","PXRMDATE",59,0)
 ;
"RTN","PXRMDATE",60,0)
 ;==================================================
"RTN","PXRMDATE",61,0)
CTFMD(DATE) ;Convert DATE which may be in any of the FileMan acceptable
"RTN","PXRMDATE",62,0)
 ;forms with additional CR extensions to an internal FileMan date.
"RTN","PXRMDATE",63,0)
 N FMDATE,OFFSET,OP,SYM,SYMV,TDATE,TIME
"RTN","PXRMDATE",64,0)
 ;Already in internal FileMan date format?
"RTN","PXRMDATE",65,0)
 I DATE?7N Q DATE
"RTN","PXRMDATE",66,0)
 I DATE?7N1"."1.6N Q DATE
"RTN","PXRMDATE",67,0)
 S TDATE=$TR(DATE," ",""),TDATE=$$UP^XLFSTR(TDATE)
"RTN","PXRMDATE",68,0)
 ;Check for T or TODAY with a time.
"RTN","PXRMDATE",69,0)
 I $E(TDATE,1)="T" S TIME=$P(TDATE,"@",2),TDATE=$P(TDATE,"@",1)
"RTN","PXRMDATE",70,0)
 ;Check for dates in the form SYMBOL+IU,or SYMBOL-IU, where I is
"RTN","PXRMDATE",71,0)
 ;an integer and U is a unit.
"RTN","PXRMDATE",72,0)
 S OP=$S(TDATE["+":"+",TDATE["-":"-",1:"")
"RTN","PXRMDATE",73,0)
 S SYM=$S(OP'="":$P(TDATE,OP,1),1:TDATE)
"RTN","PXRMDATE",74,0)
 S OFFSET=$S(OP'="":$P(TDATE,OP,2),1:"")
"RTN","PXRMDATE",75,0)
 ;If the symbolic part is not on the list of valid symbols try FileMan.
"RTN","PXRMDATE",76,0)
 I '$$VSYM(SYM) D DT^DILF("ST",DATE,.FMDATE) Q FMDATE
"RTN","PXRMDATE",77,0)
 ;Check for a valid offset.
"RTN","PXRMDATE",78,0)
 I OFFSET'="",'$$VOFFSET(OFFSET) Q -1
"RTN","PXRMDATE",79,0)
 I ((SYM="T")!(SYM="TODAY")),(OFFSET["H") D  Q -1
"RTN","PXRMDATE",80,0)
 . I $G(PXRMINTR)=1 D EN^DDIOL("Cannot use "_SYM_" with "_OFFSET)
"RTN","PXRMDATE",81,0)
 ;If this is being called by the input transform VDT^PXRMINTR we
"RTN","PXRMDATE",82,0)
 ;are done.
"RTN","PXRMDATE",83,0)
 I $G(PXRMINTR)=1 Q 1
"RTN","PXRMDATE",84,0)
 ;If the symbol is not one of the standard FM symbols then it is
"RTN","PXRMDATE",85,0)
 ;one of the Clinical Reminder symbols.
"RTN","PXRMDATE",86,0)
 S SYMV=$S(SYM="T":$$TODAY,SYM="TODAY":$$TODAY,SYM="N":$$NOW,SYM="NOW":$$NOW,SYM="NOON":$$NOON,SYM="MID":$$MID,1:+$G(@SYM))
"RTN","PXRMDATE",87,0)
 I $G(TIME)'="" D
"RTN","PXRMDATE",88,0)
 . S SYMV=SYMV_"@"_TIME
"RTN","PXRMDATE",89,0)
 . D DT^DILF("ST",SYMV,.FMDATE)
"RTN","PXRMDATE",90,0)
 . S SYMV=FMDATE
"RTN","PXRMDATE",91,0)
 ;If the symbol does not equate to an internal FM date return -1
"RTN","PXRMDATE",92,0)
 I '(SYMV?7N0.1"."0.6N) Q -1
"RTN","PXRMDATE",93,0)
 Q $$NEWDATE(SYMV,OP,OFFSET)
"RTN","PXRMDATE",94,0)
 ;
"RTN","PXRMDATE",95,0)
 ;=================================================
"RTN","PXRMDATE",96,0)
DCHECK(DATE) ;Trap for special characters before calling CTFMD^PXRMDATE.
"RTN","PXRMDATE",97,0)
 ;Used in DIR("PRE") for date inputs.
"RTN","PXRMDATE",98,0)
 I $D(DTOUT) Q DATE
"RTN","PXRMDATE",99,0)
 I DATE="" Q DATE
"RTN","PXRMDATE",100,0)
 I DATE["^" Q DATE
"RTN","PXRMDATE",101,0)
 I DATE["?" Q DATE
"RTN","PXRMDATE",102,0)
 Q $$CTFMD^PXRMDATE(DATE)
"RTN","PXRMDATE",103,0)
 ;
"RTN","PXRMDATE",104,0)
 ;==================================================
"RTN","PXRMDATE",105,0)
DDATE(DATE) ;Check for an historical (event) date, format as appropriate,
"RTN","PXRMDATE",106,0)
 ;withou time.
"RTN","PXRMDATE",107,0)
 I DATE=0 Q "00/00/0000"
"RTN","PXRMDATE",108,0)
 Q $$FMTE^XLFDT(DATE,"5DZ")
"RTN","PXRMDATE",109,0)
 ;
"RTN","PXRMDATE",110,0)
 ;==================================================
"RTN","PXRMDATE",111,0)
DUE(DEFARR,RESDATE,FREQ,DUE,DUEDATE,FIEVAL) ;Compute the due date.
"RTN","PXRMDATE",112,0)
 ;This is the date of the resolution finding + the reminder frequency.
"RTN","PXRMDATE",113,0)
 ;Subtract the due in advance time to see if the reminder should be
"RTN","PXRMDATE",114,0)
 ;marked as due soon.
"RTN","PXRMDATE",115,0)
 ;
"RTN","PXRMDATE",116,0)
 N DATE,DIAT,DIATOK,LDATE,PXRMITEM,TDDUE,TODAY
"RTN","PXRMDATE",117,0)
 S PXRMITEM=DEFARR("IEN")
"RTN","PXRMDATE",118,0)
 ;If the final frequency is 0Y then the reminder is not due.
"RTN","PXRMDATE",119,0)
 I FREQ="0Y" S DUE=0,DUEDATE="" Q
"RTN","PXRMDATE",120,0)
 ;
"RTN","PXRMDATE",121,0)
 S DUEDATE=""
"RTN","PXRMDATE",122,0)
 ;Check for custom date due.
"RTN","PXRMDATE",123,0)
 I DEFARR(45)'="" S DUEDATE=$$CDUEDATE^PXRMCDUE(.DEFARR,.FIEVAL)
"RTN","PXRMDATE",124,0)
 I DUEDATE'="",DUEDATE'=-1 G SETDUE
"RTN","PXRMDATE",125,0)
 ;
"RTN","PXRMDATE",126,0)
 ;If there is no resolution logic then frequency is not required.
"RTN","PXRMDATE",127,0)
 I (FREQ="")!(FREQ=-1)&(DEFARR(35)'="") D  Q
"RTN","PXRMDATE",128,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFREQ")="No reminder frequency - cannot compute due date!"
"RTN","PXRMDATE",129,0)
 . S (DUE,DUEDATE)="CNBD"
"RTN","PXRMDATE",130,0)
 ;
"RTN","PXRMDATE",131,0)
 S LDATE=$S(RESDATE["X":0,1:+RESDATE)
"RTN","PXRMDATE",132,0)
 I LDATE=0 S (DUE,DUEDATE)="DUE NOW" Q
"RTN","PXRMDATE",133,0)
 S DATE=$$FULLDATE(LDATE),DUEDATE=$$NEWDATE(DATE,"+",FREQ)
"RTN","PXRMDATE",134,0)
 ;
"RTN","PXRMDATE",135,0)
SETDUE ;If the due date is less than or equal to today's date the
"RTN","PXRMDATE",136,0)
 ;reminder is due.
"RTN","PXRMDATE",137,0)
 S TODAY=$$TODAY^PXRMDATE
"RTN","PXRMDATE",138,0)
 I +DUEDATE'>TODAY S DUE="DUE NOW"  Q
"RTN","PXRMDATE",139,0)
 ;
"RTN","PXRMDATE",140,0)
 S DIAT=$P(DEFARR(0),U,4)
"RTN","PXRMDATE",141,0)
 I DIAT="" D
"RTN","PXRMDATE",142,0)
 . S DIATOK=0
"RTN","PXRMDATE",143,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","DIAT")="Warning no do in advance time"
"RTN","PXRMDATE",144,0)
 E  S DIATOK=1
"RTN","PXRMDATE",145,0)
 ;
"RTN","PXRMDATE",146,0)
 S TDDUE=$S(DIATOK=1:$$NEWDATE(DUEDATE,"-",DIAT),1:DUEDATE)
"RTN","PXRMDATE",147,0)
 S DUE=$S(TDDUE'>TODAY:"DUE SOON",1:"RESOLVED")
"RTN","PXRMDATE",148,0)
 Q
"RTN","PXRMDATE",149,0)
 ;
"RTN","PXRMDATE",150,0)
 ;==================================================
"RTN","PXRMDATE",151,0)
DURATION(START,STOP) ;Return the number days between the Start Date and
"RTN","PXRMDATE",152,0)
 ;Stop Date.
"RTN","PXRMDATE",153,0)
 I +START=0 Q 0
"RTN","PXRMDATE",154,0)
 N PXRMNOW
"RTN","PXRMDATE",155,0)
 S PXRMNOW=$$NOW^PXRMDATE
"RTN","PXRMDATE",156,0)
 I START>PXRMNOW Q 0
"RTN","PXRMDATE",157,0)
 I (STOP="")!(STOP>PXRMNOW) S STOP=PXRMNOW
"RTN","PXRMDATE",158,0)
 Q $$FMDIFF^XLFDT(STOP,START)
"RTN","PXRMDATE",159,0)
 ;
"RTN","PXRMDATE",160,0)
 ;==================================================
"RTN","PXRMDATE",161,0)
EDATE(DATE) ;Check for an historical (event) date, format as appropriate,
"RTN","PXRMDATE",162,0)
 ;include time.
"RTN","PXRMDATE",163,0)
 I DATE=0 Q "00/00/0000"
"RTN","PXRMDATE",164,0)
 I DATE=-1 Q "None"
"RTN","PXRMDATE",165,0)
 Q $$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMDATE",166,0)
 ;
"RTN","PXRMDATE",167,0)
 ;==================================================
"RTN","PXRMDATE",168,0)
FMDATE(DFN,TEST,DATE,VALUE,TEXT) ;FileMan date computed finding.
"RTN","PXRMDATE",169,0)
 I TEST="" S TEST=0 Q
"RTN","PXRMDATE",170,0)
 S (DATE,VALUE)=$$CTFMD^PXRMDATE(TEST)
"RTN","PXRMDATE",171,0)
 S TEST=1
"RTN","PXRMDATE",172,0)
 Q
"RTN","PXRMDATE",173,0)
 ;
"RTN","PXRMDATE",174,0)
 ;==================================================
"RTN","PXRMDATE",175,0)
FULLDATE(DATE) ;See if DATE is a full date, i.e., it has a month and
"RTN","PXRMDATE",176,0)
 ;a day along with a year. If the month is missing assume Jan. If the
"RTN","PXRMDATE",177,0)
 ;day is missing assume the first. Issue a warning so the user knows
"RTN","PXRMDATE",178,0)
 ;what happened. DATE should be in Fileman format.
"RTN","PXRMDATE",179,0)
 N DAY,MISSING,MONTH,TDATE,YEAR
"RTN","PXRMDATE",180,0)
 S TDATE=DATE
"RTN","PXRMDATE",181,0)
 S MISSING=0
"RTN","PXRMDATE",182,0)
 S DAY=$E(DATE,6,7)
"RTN","PXRMDATE",183,0)
 S MONTH=$E(DATE,4,5)
"RTN","PXRMDATE",184,0)
 S YEAR=$E(DATE,1,3)
"RTN","PXRMDATE",185,0)
 I +DAY=0 D
"RTN","PXRMDATE",186,0)
 . S DAY=1
"RTN","PXRMDATE",187,0)
 . S MISSING=1
"RTN","PXRMDATE",188,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NO DAY")="Encounter date missing the day, using the first for the date due calculation."
"RTN","PXRMDATE",189,0)
 I +MONTH=0 D
"RTN","PXRMDATE",190,0)
 . S MONTH=1
"RTN","PXRMDATE",191,0)
 . S MISSING=1
"RTN","PXRMDATE",192,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NO MONTH")="Encounter date missing the month, using January for the date due calculation."
"RTN","PXRMDATE",193,0)
 I MISSING D
"RTN","PXRMDATE",194,0)
 . S TDATE=(YEAR*1E4)+(MONTH*1E2)+DAY
"RTN","PXRMDATE",195,0)
 . I DATE["E" S TDATE=TDATE_"E"
"RTN","PXRMDATE",196,0)
 Q TDATE
"RTN","PXRMDATE",197,0)
 ;
"RTN","PXRMDATE",198,0)
 ;==================================================
"RTN","PXRMDATE",199,0)
FRQINDAY(FREQ) ;Given a frequency in the form ND, NM, or NY where N is a
"RTN","PXRMDATE",200,0)
 ;number and D stands for days, M for months, and Y for years return
"RTN","PXRMDATE",201,0)
 ;the value in days. Used for ranking only.
"RTN","PXRMDATE",202,0)
 I FREQ="" Q 0
"RTN","PXRMDATE",203,0)
 N LEN,NUM,UNIT
"RTN","PXRMDATE",204,0)
 S NUM=+FREQ
"RTN","PXRMDATE",205,0)
 S LEN=$L(FREQ)
"RTN","PXRMDATE",206,0)
 S UNIT=$E(FREQ,LEN)
"RTN","PXRMDATE",207,0)
 ;30.42 is average number of days in a month, 365.24 is average number
"RTN","PXRMDATE",208,0)
 ;of days in a year. Unknown unit return 0.
"RTN","PXRMDATE",209,0)
 S NUM=$S(UNIT="D":NUM,UNIT="M":$$CTD(30.42,NUM),UNIT="Y":$$CTD(365.24,NUM),1:0)
"RTN","PXRMDATE",210,0)
 Q NUM
"RTN","PXRMDATE",211,0)
 ;
"RTN","PXRMDATE",212,0)
 ;==================================================
"RTN","PXRMDATE",213,0)
ISLEAP(YEAR) ;Given a 3 digit FileMan year return 1 if it is a leap year,
"RTN","PXRMDATE",214,0)
 ;0 otherwise.
"RTN","PXRMDATE",215,0)
 S YEAR=YEAR+1700
"RTN","PXRMDATE",216,0)
 Q (YEAR#4=0)&'(YEAR#100=0)!(YEAR#400=0)
"RTN","PXRMDATE",217,0)
 ;
"RTN","PXRMDATE",218,0)
 ;==================================================
"RTN","PXRMDATE",219,0)
MCALC(FMDATE,OP,NUM) ;Add or subtract NUM months to FMDATE.
"RTN","PXRMDATE",220,0)
 N DAY,DIM,MONTH,TIME,YEAR
"RTN","PXRMDATE",221,0)
 S YEAR=$E(FMDATE,1,3),MONTH=$E(FMDATE,4,5),DAY=$E(FMDATE,6,7)
"RTN","PXRMDATE",222,0)
 S TIME=$P(FMDATE,".",2)
"RTN","PXRMDATE",223,0)
 I TIME'="" S TIME="."_TIME
"RTN","PXRMDATE",224,0)
 I OP="+" F  Q:'NUM  S NUM=NUM-1,MONTH=MONTH+1 I MONTH=13 S YEAR=YEAR+1,MONTH=1
"RTN","PXRMDATE",225,0)
 I OP="-" F  Q:'NUM  S NUM=NUM-1,MONTH=MONTH-1 I MONTH=0 S YEAR=YEAR-1,MONTH=12
"RTN","PXRMDATE",226,0)
 S DIM="31^"_($$ISLEAP(YEAR)+28)_"^31^30^31^30^31^31^30^31^30^31"
"RTN","PXRMDATE",227,0)
 I DAY>$P(DIM,"^",MONTH) S DAY=$P(DIM,"^",MONTH)
"RTN","PXRMDATE",228,0)
 Q YEAR_"00"+MONTH_"00"+DAY_TIME
"RTN","PXRMDATE",229,0)
 ;
"RTN","PXRMDATE",230,0)
 ;==================================================
"RTN","PXRMDATE",231,0)
MID() ;If the reminder global PXRMDATE is defined return midnight on that day,
"RTN","PXRMDATE",232,0)
 ;otherwise return the current date at midnight.
"RTN","PXRMDATE",233,0)
 Q $S(+$G(PXRMDATE)>0:$E(PXRMDATE,1,7),1:$$DT^XLFDT)_".24"
"RTN","PXRMDATE",234,0)
 ;
"RTN","PXRMDATE",235,0)
 ;==================================================
"RTN","PXRMDATE",236,0)
NEWDATE(FMDATE,OP,OFFSET) ;Given an internal FileMan date, an operator of 
"RTN","PXRMDATE",237,0)
 ;that is + or - ,and an offset of the form I, ID, IW, IM, IY 
"RTN","PXRMDATE",238,0)
 ;where I is a positive integer and H is hours, D is days, W is weeks,
"RTN","PXRMDATE",239,0)
 ;M is months, and Y is years calculate and return the new FM date.
"RTN","PXRMDATE",240,0)
 N DAYS,HOURS,NUM,UNIT
"RTN","PXRMDATE",241,0)
 I FMDATE=0 Q 0
"RTN","PXRMDATE",242,0)
 S NUM=+OFFSET
"RTN","PXRMDATE",243,0)
 I NUM<0 Q -1
"RTN","PXRMDATE",244,0)
 S UNIT=$E(OFFSET,$L(NUM)+1)
"RTN","PXRMDATE",245,0)
 I UNIT="" S UNIT="D"
"RTN","PXRMDATE",246,0)
 I UNIT="H" S HOURS=OP_NUM Q $$FMADD^XLFDT(FMDATE,0,HOURS,0,0)
"RTN","PXRMDATE",247,0)
 I UNIT="D" S DAYS=OP_NUM Q $$FMADD^XLFDT(FMDATE,DAYS,0,0,0)
"RTN","PXRMDATE",248,0)
 I UNIT="W" S DAYS=OP_(NUM*7) Q $$FMADD^XLFDT(FMDATE,DAYS,0,0,0)
"RTN","PXRMDATE",249,0)
 I UNIT="M" Q $$MCALC(FMDATE,OP,NUM)
"RTN","PXRMDATE",250,0)
 I UNIT="Y" Q $$YCALC(FMDATE,OP,NUM)
"RTN","PXRMDATE",251,0)
 Q -1
"RTN","PXRMDATE",252,0)
 ;
"RTN","PXRMDATE",253,0)
 ;==================================================
"RTN","PXRMDATE",254,0)
NOON() ;If the reminder global PXRMDATE is defined return noon on that day,
"RTN","PXRMDATE",255,0)
 ;otherwise return the current date at noon.
"RTN","PXRMDATE",256,0)
 Q $S(+$G(PXRMDATE)>0:$E(PXRMDATE,1,7),1:$$DT^XLFDT)_".12"
"RTN","PXRMDATE",257,0)
 ;
"RTN","PXRMDATE",258,0)
 ;==================================================
"RTN","PXRMDATE",259,0)
NOW() ;If the reminder global PXRMDATE is defined return it, otherwise
"RTN","PXRMDATE",260,0)
 ;return the current date and time.
"RTN","PXRMDATE",261,0)
 I +$G(PXRMDATE)=0 Q $$NOW^XLFDT
"RTN","PXRMDATE",262,0)
 N NOW,TIME
"RTN","PXRMDATE",263,0)
 S TIME=$P(PXRMDATE,".",2)
"RTN","PXRMDATE",264,0)
 I TIME="" S TIME=$P($$NOW^XLFDT,".",2),NOW=PXRMDATE_"."_TIME
"RTN","PXRMDATE",265,0)
 E  S NOW=PXRMDATE
"RTN","PXRMDATE",266,0)
 Q NOW
"RTN","PXRMDATE",267,0)
 ;
"RTN","PXRMDATE",268,0)
 ;==================================================
"RTN","PXRMDATE",269,0)
TODAY() ;If the reminder global PXRMDATE is defined return it, otherwise
"RTN","PXRMDATE",270,0)
 ;return the current date.
"RTN","PXRMDATE",271,0)
 Q $S(+$G(PXRMDATE)>0:$P(PXRMDATE,".",1),1:$$DT^XLFDT)
"RTN","PXRMDATE",272,0)
 ;
"RTN","PXRMDATE",273,0)
 ;==================================================
"RTN","PXRMDATE",274,0)
VDATE(VIEN) ;Given a visit ien return the visit date.
"RTN","PXRMDATE",275,0)
 N DATE
"RTN","PXRMDATE",276,0)
 S DATE=$S(+VIEN>0:$P($G(^AUPNVSIT(VIEN,0)),U,1),1:0)
"RTN","PXRMDATE",277,0)
 I $L(DATE)=0 S DATE=0
"RTN","PXRMDATE",278,0)
 ;Check for historical encounter.
"RTN","PXRMDATE",279,0)
 I $$ISHIST^PXRMVSIT(VIEN) S DATE=DATE_"E"
"RTN","PXRMDATE",280,0)
 Q DATE
"RTN","PXRMDATE",281,0)
 ;
"RTN","PXRMDATE",282,0)
 ;==================================================
"RTN","PXRMDATE",283,0)
VOFFSET(OFFSET) ;Make sure the offset part of a date is valid. It has to
"RTN","PXRMDATE",284,0)
 ;have the form I or IU where I is an integer and U is one of the
"RTN","PXRMDATE",285,0)
 ;following units: H, D, W, M, Y.
"RTN","PXRMDATE",286,0)
 I OFFSET?1.N0.1"H"0.1"D"0.1"W"0.1"M"0.1"Y" Q 1
"RTN","PXRMDATE",287,0)
 Q 0
"RTN","PXRMDATE",288,0)
 ;
"RTN","PXRMDATE",289,0)
 ;==================================================
"RTN","PXRMDATE",290,0)
VSYM(SYM) ;Make sure the symbolic part of a date is valid.
"RTN","PXRMDATE",291,0)
 ;Already in FileMan internal form.
"RTN","PXRMDATE",292,0)
 I SYM?7N Q 1
"RTN","PXRMDATE",293,0)
 I SYM?7N1"."1.6N Q 1
"RTN","PXRMDATE",294,0)
 ;Check for FileMan symbols.
"RTN","PXRMDATE",295,0)
 I (SYM="T")!(SYM="TODAY") Q 1
"RTN","PXRMDATE",296,0)
 I (SYM="N")!(SYM="NOW") Q 1
"RTN","PXRMDATE",297,0)
 I (SYM="NOON") Q 1
"RTN","PXRMDATE",298,0)
 I (SYM="MID") Q 1
"RTN","PXRMDATE",299,0)
 ;Check for Clinical Reminder symbols.
"RTN","PXRMDATE",300,0)
 I SYM="PXRMLAD" Q 1
"RTN","PXRMDATE",301,0)
 I SYM="PXRMDOB" Q 1
"RTN","PXRMDATE",302,0)
 I SYM="PXRMDOD" Q 1
"RTN","PXRMDATE",303,0)
 I SYM?1"FIEVAL("1.N1","0.1(1.N1",")1"""DATE"")" Q 1
"RTN","PXRMDATE",304,0)
 Q 0
"RTN","PXRMDATE",305,0)
 ;
"RTN","PXRMDATE",306,0)
 ;==================================================
"RTN","PXRMDATE",307,0)
YCALC(FMDATE,OP,NUM) ;Add or subtract NUM years to FMDATE.
"RTN","PXRMDATE",308,0)
 N DAY,MONTH,TIME,YEAR
"RTN","PXRMDATE",309,0)
 S YEAR=$E(FMDATE,1,3),MONTH=$E(FMDATE,4,5),DAY=$E(FMDATE,6,7)
"RTN","PXRMDATE",310,0)
 S TIME=$P(FMDATE,".",2)
"RTN","PXRMDATE",311,0)
 I TIME'="" S TIME="."_TIME
"RTN","PXRMDATE",312,0)
 I OP="+" F  Q:'NUM  S NUM=NUM-1,YEAR=YEAR+1
"RTN","PXRMDATE",313,0)
 I OP="-" F  Q:'NUM  S NUM=NUM-1,YEAR=YEAR-1
"RTN","PXRMDATE",314,0)
 ;Handle leap year.
"RTN","PXRMDATE",315,0)
 I MONTH="02",DAY>27,'$$ISLEAP(YEAR) S DAY=28
"RTN","PXRMDATE",316,0)
 Q YEAR_"00"+MONTH_"00"+DAY_TIME
"RTN","PXRMDATE",317,0)
 ;
"RTN","PXRMDEDI")
0^14^B25523952
"RTN","PXRMDEDI",1,0)
PXRMDEDI ; SLC/PJH - Edit PXRM reminder dialog. ;04/02/2013
"RTN","PXRMDEDI",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMDEDI",3,0)
 ;
"RTN","PXRMDEDI",4,0)
 ;Used by protocol PXRM DIALOG SELECTION ITEM
"RTN","PXRMDEDI",5,0)
 ;
"RTN","PXRMDEDI",6,0)
ASK(PIEN,SEQ) ;Ask if OK to delete
"RTN","PXRMDEDI",7,0)
 N DDATA,DIR,DTYP,NAME,TYP,X,Y
"RTN","PXRMDEDI",8,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDI",9,0)
 S DDATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDEDI",10,0)
 S NAME=$P(DDATA,U),TYP=$P(DDATA,U,4)
"RTN","PXRMDEDI",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDEDI",12,0)
 S DIR("A")="Delete sequence "_SEQ_" from "
"RTN","PXRMDEDI",13,0)
 I TYP="G" S DIR("A")=DIR("A")_"group "_NAME_": "
"RTN","PXRMDEDI",14,0)
 E  S DIR("A")=DIR("A")_"reminder dialog "_NAME_": "
"RTN","PXRMDEDI",15,0)
 S DIR("B")="N"
"RTN","PXRMDEDI",16,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDEDI",17,0)
 S DIR("??")=U_"D XHLP^PXRMDLG(1)"
"RTN","PXRMDEDI",18,0)
 D ^DIR K DIR
"RTN","PXRMDEDI",19,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDI",20,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDI",21,0)
 I $E(Y(0))="N" S DUOUT=1
"RTN","PXRMDEDI",22,0)
 S VALMBCK="R"
"RTN","PXRMDEDI",23,0)
 Q
"RTN","PXRMDEDI",24,0)
 ;
"RTN","PXRMDEDI",25,0)
DEL(SEQ,PXRMDIEN) ;Delete individual element from dialog or group
"RTN","PXRMDEDI",26,0)
 N DA,DIK
"RTN","PXRMDEDI",27,0)
 S DIEN=0
"RTN","PXRMDEDI",28,0)
 F  S DIEN=$O(^PXRMD(801.41,PXRMDIEN,10,DIEN)) Q:'DIEN  D
"RTN","PXRMDEDI",29,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,10,DIEN,0)),U)=SEQ D
"RTN","PXRMDEDI",30,0)
 ..S DA(1)=PXRMDIEN,DA=DIEN W !,"DA: "_DA Q:'DA
"RTN","PXRMDEDI",31,0)
 ..S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDI",32,0)
 ..D ^DIK
"RTN","PXRMDEDI",33,0)
 S VALMBG=1
"RTN","PXRMDEDI",34,0)
 Q
"RTN","PXRMDEDI",35,0)
 ;
"RTN","PXRMDEDI",36,0)
IND(DIEN,SEL) ;Edit individual element
"RTN","PXRMDEDI",37,0)
 W IORESET
"RTN","PXRMDEDI",38,0)
 N DIC,DIDEL,DR,DTOUT,DTYP,DUOUT,DINUSE,HED,LFIND,LOCK,NATIONAL,OIEN,PLOCK,Y
"RTN","PXRMDEDI",39,0)
 ;
"RTN","PXRMDEDI",40,0)
 S OIEN=0
"RTN","PXRMDEDI",41,0)
 ;Check for Uneditable flag
"RTN","PXRMDEDI",42,0)
 S LOCK=$P($G(^PXRMD(801.41,DIEN,100)),U,4)
"RTN","PXRMDEDI",43,0)
 S LFIND=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMDEDI",44,0)
 I LOCK=1,$G(LFIND)'="",$G(LFIND)'["ORD",'$G(PXRMINST) D  Q
"RTN","PXRMDEDI",45,0)
 .W !,"This item can not be edited" H 2
"RTN","PXRMDEDI",46,0)
 ;
"RTN","PXRMDEDI",47,0)
 S NATIONAL=0
"RTN","PXRMDEDI",48,0)
 ;Limited edit of National dialogs
"RTN","PXRMDEDI",49,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" D
"RTN","PXRMDEDI",50,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDI",51,0)
 .S NATIONAL=1
"RTN","PXRMDEDI",52,0)
 .S PLOCK=$P($G(^PXRMD(801.41,PXRMDIEN,100)),U,4)
"RTN","PXRMDEDI",53,0)
 ;
"RTN","PXRMDEDI",54,0)
 N ANS,DATA,PIEN,SEQ
"RTN","PXRMDEDI",55,0)
 ;Get group or reminder dialog ien for this component
"RTN","PXRMDEDI",56,0)
 S DATA=$G(^TMP("PXRMDLG4",$J,"IEN",SEL))
"RTN","PXRMDEDI",57,0)
 S PIEN=$P(DATA,U),SEQ=$P(DATA,U,2)
"RTN","PXRMDEDI",58,0)
 ;National dialogs can only be edited
"RTN","PXRMDEDI",59,0)
 I NATIONAL S ANS="E"
"RTN","PXRMDEDI",60,0)
 ;In Group edit the group can only be edited
"RTN","PXRMDEDI",61,0)
 I DIEN=PXRMDIEN S ANS="E"
"RTN","PXRMDEDI",62,0)
 ;Ask what to do with local dialogs
"RTN","PXRMDEDI",63,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDI",64,0)
 I (('NATIONAL)&(DIEN'=PXRMDIEN))!((NATIONAL)&($G(PLOCK)=1)&(DIEN'=PXRMDIEN)&($G(LOCK)'=1)) D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDEDI",65,0)
 .D PROMPT(.ANS,DIEN) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDI",66,0)
 .;Display usage
"RTN","PXRMDEDI",67,0)
 .I "DC"[ANS D
"RTN","PXRMDEDI",68,0)
 ..W !,"Dialog Name: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDI",69,0)
 .; Verify delete
"RTN","PXRMDEDI",70,0)
 .I ANS="D" D ASK(PIEN,SEQ)
"RTN","PXRMDEDI",71,0)
 ;Ask what to do with National Dialogs that have a lock on them
"RTN","PXRMDEDI",72,0)
 ;I NATIONAL,DIEN'=PXRMDIEN,$P($G(^PXRMD(801.41,DIEN,100)),U,4)=1 D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDEDI",73,0)
 I NATIONAL,DIEN'=PXRMDIEN,LOCK=1,DTYP="G" D  Q
"RTN","PXRMDEDI",74,0)
 .W !,"Cannot modify lock group from a higher level view. Please modify"
"RTN","PXRMDEDI",75,0)
 .W !,"this group from the group editor screen." H 2
"RTN","PXRMDEDI",76,0)
 ;
"RTN","PXRMDEDI",77,0)
 ;Delete line
"RTN","PXRMDEDI",78,0)
 I ANS="D" D DEL(SEQ,PIEN) Q
"RTN","PXRMDEDI",79,0)
 ;Copy and Replace option
"RTN","PXRMDEDI",80,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDI",81,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDI",82,0)
 N FIND
"RTN","PXRMDEDI",83,0)
 I ANS="R" S OIEN=DIEN,(IEN,DIEN)=$P($G(^PXRMD(801.41,DIEN,49)),U,3)
"RTN","PXRMDEDI",84,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDI",85,0)
 ;Option to change an element to a group
"RTN","PXRMDEDI",86,0)
 I DTYP="E",'NATIONAL D NTYP^PXRMDEDT(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDI",87,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDI",88,0)
 .I $P($G(^PXRMD(801.41,DIEN,"TAX")),U)="A" D
"RTN","PXRMDEDI",89,0)
 ..N FDA,MSG
"RTN","PXRMDEDI",90,0)
 ..S FDA(801.41,DIEN_",",.01)=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDI",91,0)
 ..S FDA(801.41,DIEN_",",123)="N"
"RTN","PXRMDEDI",92,0)
 ..D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMDEDI",93,0)
 ..I '$D(MSG) W !,"Taxonomy selection set to 'No Pick List'. Review group structure before using in CPRS." Q
"RTN","PXRMDEDI",94,0)
 ..I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMDEDI",95,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDI",96,0)
 ;Edit Element
"RTN","PXRMDEDI",97,0)
 D EDIT^PXRMDEDT(DTYP,DIEN,OIEN)
"RTN","PXRMDEDI",98,0)
 Q
"RTN","PXRMDEDI",99,0)
 ;
"RTN","PXRMDEDI",100,0)
PROMPT(ANS,DIEN) ;Select Dialog Element Action
"RTN","PXRMDEDI",101,0)
 N NAME,X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDI",102,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDI",103,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDI",104,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDI",105,0)
 I $P($G(^PXRMD(801.41,DIEN,49)),U,3)>0 D
"RTN","PXRMDEDI",106,0)
 .S NAME=$P($G(^PXRMD(801.41,$P($G(^PXRMD(801.41,DIEN,49)),U,3),0)),U)
"RTN","PXRMDEDI",107,0)
 .S DIR(0)=DIR(0)_"R:Edit Replacement Element/Group "_NAME_";"
"RTN","PXRMDEDI",108,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDI",109,0)
 S DIR("B")="E"
"RTN","PXRMDEDI",110,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDI",111,0)
 S DIR("??")=U_"D HELP^PXRMDEDI(1)"
"RTN","PXRMDEDI",112,0)
 D ^DIR K DIR
"RTN","PXRMDEDI",113,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDI",114,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDI",115,0)
 S ANS=Y
"RTN","PXRMDEDI",116,0)
 Q
"RTN","PXRMDEDI",117,0)
 ;
"RTN","PXRMDEDI",118,0)
HELP(CALL) ;General help text routine
"RTN","PXRMDEDI",119,0)
 N HTEXT
"RTN","PXRMDEDI",120,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDI",121,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDI",122,0)
 ;
"RTN","PXRMDEDI",123,0)
 I CALL=1 D
"RTN","PXRMDEDI",124,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDI",125,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDI",126,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDI",127,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDI",128,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDI",129,0)
 S IC=""
"RTN","PXRMDEDI",130,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDI",131,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDI",132,0)
 . D ^DIWP
"RTN","PXRMDEDI",133,0)
 W !
"RTN","PXRMDEDI",134,0)
 S IC=0
"RTN","PXRMDEDI",135,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDI",136,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDI",137,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDI",138,0)
 W !
"RTN","PXRMDEDI",139,0)
 Q
"RTN","PXRMDEDT")
0^72^B86565471
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;01/28/2013
"RTN","PXRMDEDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,16,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA,0)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",37,0)
 ;-----------------------------------
"RTN","PXRMDEDT",38,0)
EDIT(TYP,DA,OIEN) ;
"RTN","PXRMDEDT",39,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",40,0)
 W IORESET
"RTN","PXRMDEDT",41,0)
 N CS1,CS2,D1,DIC,DIDEL,DIE,DIK,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",42,0)
 ;Save checksum
"RTN","PXRMDEDT",43,0)
 S VALMBCK=""
"RTN","PXRMDEDT",44,0)
 S CS1=$$FILE^PXRMEXCS(801.41,DA)
"RTN","PXRMDEDT",45,0)
 ;
"RTN","PXRMDEDT",46,0)
 ;Check dialog type
"RTN","PXRMDEDT",47,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",48,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",49,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",50,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",51,0)
 ;Dialog Element
"RTN","PXRMDEDT",52,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",53,0)
 ;Additional Prompt
"RTN","PXRMDEDT",54,0)
 ;I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",55,0)
 ;Forced Value
"RTN","PXRMDEDT",56,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",57,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",58,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]" ;S VALMBCK="R"
"RTN","PXRMDEDT",59,0)
 ;Result Group
"RTN","PXRMDEDT",60,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",61,0)
 ;Result Element
"RTN","PXRMDEDT",62,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",63,0)
 ;Allows limited edit of national dialogs
"RTN","PXRMDEDT",64,0)
 I $P($G(^PXRMD(801.41,DA,100)),U)="N" D
"RTN","PXRMDEDT",65,0)
 .I TYP="T",+$P($G(^PXMRD(801.41,DA,100)),U,4)=0 Q
"RTN","PXRMDEDT",66,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDT",67,0)
 .S DR="[PXRM EDIT NATIONAL DIALOG]",DINUSE=1
"RTN","PXRMDEDT",68,0)
 ;
"RTN","PXRMDEDT",69,0)
 I "GEPFS"[TYP D
"RTN","PXRMDEDT",70,0)
 .I '$D(^PXRMD(801.41,"AD",DA)),'$D(^PXRMD(801.41,"R",DA)),'$D(^PXRMD(801.41,"RG",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",71,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",72,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",73,0)
 ..N SUB
"RTN","PXRMDEDT",74,0)
 ..S SUB=0
"RTN","PXRMDEDT",75,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",DA,SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",76,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",77,0)
 I DINUSE D
"RTN","PXRMDEDT",78,0)
 .W !,"Current dialog "_$S(TYP="S":"result group",1:"element/group")_" name: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",79,0)
 .I TYP="S" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN,"RG") Q
"RTN","PXRMDEDT",80,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMDEDT",81,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,"","AD")
"RTN","PXRMDEDT",82,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",83,0)
 ..W !,"Used as a Replacement Element/Group for: " D USE^PXRMDLST(DA,10,"","R")
"RTN","PXRMDEDT",84,0)
 .I PXRMGTYP'="DLGE" D
"RTN","PXRMDEDT",85,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN,"AD")
"RTN","PXRMDEDT",86,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",87,0)
 ..W !,"Used as a Replacement Element/Group for: " D USE^PXRMDLST(DA,10,PXRMDIEN,"R")
"RTN","PXRMDEDT",88,0)
 ;
"RTN","PXRMDEDT",89,0)
 ;Save list of components
"RTN","PXRMDEDT",90,0)
 N COMP D COMP^PXRMDEDX(DA,.COMP)
"RTN","PXRMDEDT",91,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",92,0)
 I TYP'="P" D ^DIE D UNLOCK(ODA) I $G(DA)="",$G(OIEN)>0 D
"RTN","PXRMDEDT",93,0)
 .S DA=OIEN,DR="118////@" D ^DIE K DA
"RTN","PXRMDEDT",94,0)
 I TYP="P" D PROMPT(DA) D UNLOCK(ODA)
"RTN","PXRMDEDT",95,0)
 ;I '$D(DUOUT)&($G(D1)'="") D  Q
"RTN","PXRMDEDT",96,0)
 I $G(D1)'="" D
"RTN","PXRMDEDT",97,0)
 . I $P($G(^PXRMD(801.41,DA,10,D1,0)),U,2)="" D  Q
"RTN","PXRMDEDT",98,0)
 . . S DA(1)=DA,DA=D1 Q:'DA
"RTN","PXRMDEDT",99,0)
 . . S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",100,0)
 . . D ^DIK
"RTN","PXRMDEDT",101,0)
 . . ;S VALMBG=1
"RTN","PXRMDEDT",102,0)
 I $D(DUOUT) S VALMBG=1 Q
"RTN","PXRMDEDT",103,0)
 I '$D(DA) D  Q
"RTN","PXRMDEDT",104,0)
 .;Clear any pointers from #811.9
"RTN","PXRMDEDT",105,0)
 .I $D(PXRMDIEN) D PURGE(PXRMDIEN)
"RTN","PXRMDEDT",106,0)
 .;Option to delete components
"RTN","PXRMDEDT",107,0)
 .I $D(COMP) D DELETE^PXRMDEDX(.COMP)
"RTN","PXRMDEDT",108,0)
 .S VALMBCK="R"
"RTN","PXRMDEDT",109,0)
 ;
"RTN","PXRMDEDT",110,0)
 ;Update edit history
"RTN","PXRMDEDT",111,0)
 I (TYP'="R") D
"RTN","PXRMDEDT",112,0)
 .S CS2=$$FILE^PXRMEXCS(801.41,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMDEDT",113,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",114,0)
 .D SEHIST^PXRMUTIL(801.41,DIC,DA)
"RTN","PXRMDEDT",115,0)
 ;
"RTN","PXRMDEDT",116,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",117,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",118,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",119,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",120,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",121,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",122,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",123,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",124,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",125,0)
 .S VALMHDR(1)=PXRMHD
"RTN","PXRMDEDT",126,0)
 Q
"RTN","PXRMDEDT",127,0)
 ;
"RTN","PXRMDEDT",128,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",129,0)
 ;-------------------------
"RTN","PXRMDEDT",130,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",131,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",132,0)
 ;
"RTN","PXRMDEDT",133,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",134,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",135,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",136,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",137,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",138,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",139,0)
 S DIC("S")="I ""EGPF""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMDEDT",140,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",141,0)
 W !
"RTN","PXRMDEDT",142,0)
 D ^DIC
"RTN","PXRMDEDT",143,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",144,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",145,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",146,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",147,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",148,0)
 ;Group points to itself
"RTN","PXRMDEDT",149,0)
 I 'DNEW,$$VGROUP(DA,PXRMDIEN) Q
"RTN","PXRMDEDT",150,0)
 ;Add to dialog
"RTN","PXRMDEDT",151,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",152,0)
 ;Determine dialog type
"RTN","PXRMDEDT",153,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",154,0)
 ;
"RTN","PXRMDEDT",155,0)
 ;Edit Dialog
"RTN","PXRMDEDT",156,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",157,0)
 Q
"RTN","PXRMDEDT",158,0)
 ;
"RTN","PXRMDEDT",159,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",160,0)
 ;--------------------------------
"RTN","PXRMDEDT",161,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",162,0)
 N ERRMSG,FDAIEN,FDA,IENS
"RTN","PXRMDEDT",163,0)
 S IENS="+2,"_PXRMDIEN_","
"RTN","PXRMDEDT",164,0)
 S FDA(801.412,IENS,.01)=SEL
"RTN","PXRMDEDT",165,0)
 S FDA(801.412,IENS,2)=NSUB
"RTN","PXRMDEDT",166,0)
 D UPDATE^DIE("","FDA","FDAIEN","ERRMSG")
"RTN","PXRMDEDT",167,0)
 I $D(MSG) D AWRITE^PXRMUTIL("ERRMSG")
"RTN","PXRMDEDT",168,0)
 Q
"RTN","PXRMDEDT",169,0)
 ;
"RTN","PXRMDEDT",170,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",171,0)
 ;--------------------------
"RTN","PXRMDEDT",172,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",173,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",174,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",175,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",176,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",177,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",178,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",179,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",180,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",181,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",182,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",183,0)
 S TYP=Y
"RTN","PXRMDEDT",184,0)
 Q
"RTN","PXRMDEDT",185,0)
 ;
"RTN","PXRMDEDT",186,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",187,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",188,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",189,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",190,0)
 N RIEN
"RTN","PXRMDEDT",191,0)
 S RIEN=0
"RTN","PXRMDEDT",192,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",193,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",194,0)
 ;
"RTN","PXRMDEDT",195,0)
 Q
"RTN","PXRMDEDT",196,0)
 ;
"RTN","PXRMDEDT",197,0)
VGROUP(DA,IEN) ;Check dialog index to see if group will point to itself 
"RTN","PXRMDEDT",198,0)
 N FOUND
"RTN","PXRMDEDT",199,0)
 S FOUND=0
"RTN","PXRMDEDT",200,0)
 ;
"RTN","PXRMDEDT",201,0)
 ;Only do check if dialog is a group
"RTN","PXRMDEDT",202,0)
 I $P($G(^PXRMD(801.41,DA,0)),U,4)'="G" Q FOUND
"RTN","PXRMDEDT",203,0)
 ;
"RTN","PXRMDEDT",204,0)
 ;Group cannot be added to itself
"RTN","PXRMDEDT",205,0)
 I DA=IEN D  Q FOUND
"RTN","PXRMDEDT",206,0)
 .S FOUND=1
"RTN","PXRMDEDT",207,0)
 .W !,"A group cannot be added to itself" H 2
"RTN","PXRMDEDT",208,0)
 ;
"RTN","PXRMDEDT",209,0)
 ;IEN is the dialog group being added to 
"RTN","PXRMDEDT",210,0)
 D VGROUP1(DA,IEN)
"RTN","PXRMDEDT",211,0)
 Q FOUND
"RTN","PXRMDEDT",212,0)
 ;
"RTN","PXRMDEDT",213,0)
VGROUP1(DA,DIEN) ;Examine all parent dialogs
"RTN","PXRMDEDT",214,0)
 ;
"RTN","PXRMDEDT",215,0)
 ;End search if already found
"RTN","PXRMDEDT",216,0)
 Q:FOUND
"RTN","PXRMDEDT",217,0)
 ;
"RTN","PXRMDEDT",218,0)
 ;Check if dialog being added is a parent at this level
"RTN","PXRMDEDT",219,0)
 I $D(^PXRMD(801.41,"AD",DIEN,DA)) D  Q
"RTN","PXRMDEDT",220,0)
 .S FOUND=1
"RTN","PXRMDEDT",221,0)
 .W !,"A group cannot be added as it's own descendant" H 2
"RTN","PXRMDEDT",222,0)
 ;
"RTN","PXRMDEDT",223,0)
 ;If not look at other parents
"RTN","PXRMDEDT",224,0)
 N SUB
"RTN","PXRMDEDT",225,0)
 S SUB=0
"RTN","PXRMDEDT",226,0)
 F  S SUB=$O(^PXRMD(801.41,"AD",DIEN,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDEDT",227,0)
 .;Ignore reminder dialogs
"RTN","PXRMDEDT",228,0)
 .I $P($G(^PXRMD(801.41,SUB,0)),U,4)'="G" Q
"RTN","PXRMDEDT",229,0)
 .;Repeat check on other parents
"RTN","PXRMDEDT",230,0)
 .D VGROUP1(DA,SUB)
"RTN","PXRMDEDT",231,0)
 Q
"RTN","PXRMDEDT",232,0)
 ;
"RTN","PXRMDEDT",233,0)
HELP(CALL) ;General help text routine
"RTN","PXRMDEDT",234,0)
 N HTEXT
"RTN","PXRMDEDT",235,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",236,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",237,0)
 ;
"RTN","PXRMDEDT",238,0)
 I CALL=1 D
"RTN","PXRMDEDT",239,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",240,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",241,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",242,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",243,0)
 I CALL=2 D
"RTN","PXRMDEDT",244,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",245,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",246,0)
 I CALL=3 D
"RTN","PXRMDEDT",247,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",248,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",249,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",250,0)
 I CALL=4 D
"RTN","PXRMDEDT",251,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",252,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",253,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",254,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",255,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",256,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",257,0)
 S IC=""
"RTN","PXRMDEDT",258,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",259,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",260,0)
 . D ^DIWP
"RTN","PXRMDEDT",261,0)
 W !
"RTN","PXRMDEDT",262,0)
 S IC=0
"RTN","PXRMDEDT",263,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",264,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",265,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",266,0)
 W !
"RTN","PXRMDEDT",267,0)
 Q
"RTN","PXRMDEDT",268,0)
 ;
"RTN","PXRMDEDT",269,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",270,0)
 N OK
"RTN","PXRMDEDT",271,0)
 S OK=1
"RTN","PXRMDEDT",272,0)
 I '$$VEDIT^PXRMUTIL("^PXRMD(801.41,",DA) D
"RTN","PXRMDEDT",273,0)
 .N DTYP
"RTN","PXRMDEDT",274,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",275,0)
 .;Allow limit edit of Result Elements that are not lock
"RTN","PXRMDEDT",276,0)
 .I DTYP="T",+$P($G(^PXRMD(801.41,DA,100)),U,4)=0 Q
"RTN","PXRMDEDT",277,0)
 .;Allow edit of findings but not component multiple on groups 
"RTN","PXRMDEDT",278,0)
 .I DTYP="G",$G(PXRMDIEN),DA'=PXRMDIEN Q
"RTN","PXRMDEDT",279,0)
 .I DTYP="G",$G(PXRMGTYP)="DLGE" Q
"RTN","PXRMDEDT",280,0)
 .;Allow edit of element findings
"RTN","PXRMDEDT",281,0)
 .I DTYP="E" Q
"RTN","PXRMDEDT",282,0)
 .S OK=0
"RTN","PXRMDEDT",283,0)
 .W !!,?5,"VA- and national class reminder dialogs may not be edited" H 2
"RTN","PXRMDEDT",284,0)
 I 'OK Q 0
"RTN","PXRMDEDT",285,0)
 ;
"RTN","PXRMDEDT",286,0)
 L +^PXRMD(801.41,DA):DILOCKTM I  Q 1
"RTN","PXRMDEDT",287,0)
 E  W !!,?5,"Another user is editing this entry, try later." H 2 Q 0
"RTN","PXRMDEDT",288,0)
 ;
"RTN","PXRMDEDT",289,0)
PROMPT(IEN) ;
"RTN","PXRMDEDT",290,0)
 N DIE,DR
"RTN","PXRMDEDT",291,0)
 S DIE="^PXRMD(801.41,",DA=IEN
"RTN","PXRMDEDT",292,0)
 S DR=".01;3;100;101;102;24;23;21"
"RTN","PXRMDEDT",293,0)
 S IEN=$G(^PXRMD(801.41,IEN,46)) I $G(IEN)="" G EX
"RTN","PXRMDEDT",294,0)
 I $P($G(^PXRMD(801.42,IEN,0)),U)="COM" S DR=DR_";45"
"RTN","PXRMDEDT",295,0)
EX ;
"RTN","PXRMDEDT",296,0)
 D ^DIE
"RTN","PXRMDEDT",297,0)
 Q
"RTN","PXRMDEDT",298,0)
 ;
"RTN","PXRMDEDT",299,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",300,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",301,0)
 Q
"RTN","PXRMDEV")
0^94^B78755601
"RTN","PXRMDEV",1,0)
PXRMDEV ;SLC/PKR - This is a driver for testing Clinical Reminders. ;03/12/2013
"RTN","PXRMDEV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,11,16,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMDEV",3,0)
 ;
"RTN","PXRMDEV",4,0)
 ;==================================================
"RTN","PXRMDEV",5,0)
CMOUT(PXRHM,NL,OUTPUT) ;Do formatted Clinical Maintenance output.
"RTN","PXRMDEV",6,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME,STATUS,STATCOL
"RTN","PXRMDEV",7,0)
 N TEMP,TEXT,TYPE
"RTN","PXRMDEV",8,0)
 S TEXT=$S(PXRHM=0:"Due Now ",PXRHM=1:"Summary ",PXRHM=5:"Maintenance ",PXRHM=55:"Order Check ",1:"")
"RTN","PXRMDEV",9,0)
 S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",10,0)
 S NL=NL+1,OUTPUT(NL)=TEXT_"Output:"
"RTN","PXRMDEV",11,0)
 S RIEN=$O(^TMP("PXRHM",$J,""))
"RTN","PXRMDEV",12,0)
 S RNAME=$O(^TMP("PXRHM",$J,RIEN,""))
"RTN","PXRMDEV",13,0)
 S TEMP=$G(^TMP("PXRHM",$J,RIEN,RNAME))
"RTN","PXRMDEV",14,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",15,0)
 S DUE=$$DDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",16,0)
 S LAST=$$DDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",17,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",18,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",19,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",20,0)
 S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",21,0)
 S TEXT=$$REPEAT^XLFSTR(" ",36)_"--STATUS-- --DUE DATE--  --LAST DONE--"
"RTN","PXRMDEV",22,0)
 S NL=NL+1,OUTPUT(NL)=TEXT
"RTN","PXRMDEV",23,0)
 S TEXT=RNAME_$$REPEAT^XLFSTR(" ",(STATCOL-$L(RNAME)))_STATUS
"RTN","PXRMDEV",24,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(DUECOL-$L(TEXT)))_DUE
"RTN","PXRMDEV",25,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(LASTCOL-$L(TEXT)))_LAST
"RTN","PXRMDEV",26,0)
 S NL=NL+1,OUTPUT(NL)=TEXT
"RTN","PXRMDEV",27,0)
 S LNUM=0
"RTN","PXRMDEV",28,0)
 F  S LNUM=$O(^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",29,0)
 . S NL=NL+1,OUTPUT(NL)=^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)
"RTN","PXRMDEV",30,0)
 Q
"RTN","PXRMDEV",31,0)
 ;
"RTN","PXRMDEV",32,0)
 ;==================================================
"RTN","PXRMDEV",33,0)
DEB ;Prompt for patient and reminder by name input component.
"RTN","PXRMDEV",34,0)
 N DATE,DFN,DIC,DIR,DIROUT,DTOUT,DUOUT,HASFF,HASTERM,IND
"RTN","PXRMDEV",35,0)
 N PXRHM,PXRMFFSS,PXRMITEM,PXRMTDEB,X,Y
"RTN","PXRMDEV",36,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",37,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",38,0)
GPAT1 D ^DIC
"RTN","PXRMDEV",39,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",40,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",41,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",42,0)
 I DFN=-1 G GPAT1
"RTN","PXRMDEV",43,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",44,0)
GREM1 D ^DIC
"RTN","PXRMDEV",45,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",46,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",47,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",48,0)
 I PXRMITEM=-1 G GREM1
"RTN","PXRMDEV",49,0)
 S DIR(0)="LA"_U_"0"
"RTN","PXRMDEV",50,0)
 S DIR("A")="Enter component number 0, 1, 5, 12, 55: "
"RTN","PXRMDEV",51,0)
 D ^DIR
"RTN","PXRMDEV",52,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",53,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",54,0)
 I X="" S X=5
"RTN","PXRMDEV",55,0)
 S PXRHM=X
"RTN","PXRMDEV",56,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",57,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",58,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",59,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",60,0)
 W !
"RTN","PXRMDEV",61,0)
 D ^DIR K DIR
"RTN","PXRMDEV",62,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",63,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",64,0)
 S DATE=Y
"RTN","PXRMDEV",65,0)
 S (HASFF,HASTERM,PXRMFFSS,PXRMTDEB)=0
"RTN","PXRMDEV",66,0)
 I $D(^PXD(811.9,PXRMITEM,25,"B")) S HASFF=1
"RTN","PXRMDEV",67,0)
 I HASFF S PXRMFFSS=$$ASKYN^PXRMEUT("N","Display step-by-step function finding evaluation","","")
"RTN","PXRMDEV",68,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S HASTERM=1
"RTN","PXRMDEV",69,0)
 I 'HASTERM D
"RTN","PXRMDEV",70,0)
 . S IND=0
"RTN","PXRMDEV",71,0)
 . F  S IND=+$O(^PXD(811.9,PXRMITEM,20,"EDEP",IND)) Q:IND=0  D
"RTN","PXRMDEV",72,0)
 .. I $D(^PXD(811.9,PXRMITEM,20,"EDEP",IND,"PXRMD(811.5,")) S HASTERM=1
"RTN","PXRMDEV",73,0)
 I HASTERM S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",74,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",75,0)
 Q
"RTN","PXRMDEV",76,0)
 ;
"RTN","PXRMDEV",77,0)
 ;==================================================
"RTN","PXRMDEV",78,0)
DEV ;Prompt for patient and reminder by name and evaluation date.
"RTN","PXRMDEV",79,0)
 N DATE,DFN,DIC,DIROUT,DIRUT,DTOUT,DUOUT,HASFF,HASTERM,IND
"RTN","PXRMDEV",80,0)
 N PXRHM,PXRMFFSS,PXRMITEM,PXRMTDEB,REF,X,Y
"RTN","PXRMDEV",81,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",82,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",83,0)
GPAT2 D ^DIC
"RTN","PXRMDEV",84,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",85,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",86,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",87,0)
 I DFN=-1 G GPAT2
"RTN","PXRMDEV",88,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",89,0)
GREM2 D ^DIC
"RTN","PXRMDEV",90,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",91,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",92,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",93,0)
 I PXRMITEM=-1 G GREM2
"RTN","PXRMDEV",94,0)
 S PXRHM=5
"RTN","PXRMDEV",95,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",96,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",97,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",98,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",99,0)
 W !
"RTN","PXRMDEV",100,0)
 D ^DIR K DIR
"RTN","PXRMDEV",101,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",102,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",103,0)
 S DATE=Y
"RTN","PXRMDEV",104,0)
 S (HASFF,HASTERM,PXRMFFSS,PXRMTDEB)=0
"RTN","PXRMDEV",105,0)
 I $D(^PXD(811.9,PXRMITEM,25,"B")) S HASFF=1
"RTN","PXRMDEV",106,0)
 I HASFF S PXRMFFSS=$$ASKYN^PXRMEUT("N","Display step-by-step function finding evaluation","","")
"RTN","PXRMDEV",107,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S HASTERM=1
"RTN","PXRMDEV",108,0)
 I 'HASTERM D
"RTN","PXRMDEV",109,0)
 . S IND=0
"RTN","PXRMDEV",110,0)
 . F  S IND=+$O(^PXD(811.9,PXRMITEM,20,"EDEP",IND)) Q:IND=0  D
"RTN","PXRMDEV",111,0)
 .. I $D(^PXD(811.9,PXRMITEM,20,"EDEP",IND,"PXRMD(811.5,")) S HASTERM=1
"RTN","PXRMDEV",112,0)
 I HASTERM S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",113,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",114,0)
 Q
"RTN","PXRMDEV",115,0)
 ;
"RTN","PXRMDEV",116,0)
 ;==================================================
"RTN","PXRMDEV",117,0)
DOREM(DFN,PXRMITEM,PXRHM,DATE) ;Do the reminder
"RTN","PXRMDEV",118,0)
 N BOP,DEFARR,FIEVAL,FINDING,IND,JND,NL,NOUT,OUTPUT,PNAME
"RTN","PXRMDEV",119,0)
 N PXRMDEBG,PXRMDEFS,PXRMID
"RTN","PXRMDEV",120,0)
 N REF,TEXTOUT,TFIEVAL,TTEXT,X
"RTN","PXRMDEV",121,0)
 ;This is a debugging run so set PXRMDEBG.
"RTN","PXRMDEV",122,0)
 S NL=0,PXRMDEBG=1
"RTN","PXRMDEV",123,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRMDEV",124,0)
 I +$G(DATE)=0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL)
"RTN","PXRMDEV",125,0)
 I +$G(DATE)>0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL,DATE)
"RTN","PXRMDEV",126,0)
 ;
"RTN","PXRMDEV",127,0)
 I $D(^TMP(PXRMID,$J,"FFDEB")) M FIEVAL=^TMP(PXRMID,$J,"FFDEB") K ^TMP(PXRMID,$J,"FFDEB")
"RTN","PXRMDEV",128,0)
 ;
"RTN","PXRMDEV",129,0)
 S TTEXT=^PXD(811.9,PXRMITEM,0)
"RTN","PXRMDEV",130,0)
 S PNAME=$P(TTEXT,U,2)
"RTN","PXRMDEV",131,0)
 I PNAME="" S PNAME=$P(TTEXT,U,1)
"RTN","PXRMDEV",132,0)
 S NL=NL+1,OUTPUT(NL)="Reminder: "_PNAME
"RTN","PXRMDEV",133,0)
 S NL=NL+1,OUTPUT(NL)="Patient: "_$$GET1^DIQ(2,DFN,.01)
"RTN","PXRMDEV",134,0)
 S NL=NL+1,OUTPUT(NL)=" "
"RTN","PXRMDEV",135,0)
 S NL=NL+1,OUTPUT(NL)="The elements of the FIEVAL array are:"
"RTN","PXRMDEV",136,0)
 S REF="FIEVAL"
"RTN","PXRMDEV",137,0)
 D ACOPY^PXRMUTIL(REF,"TTEXT()")
"RTN","PXRMDEV",138,0)
 S IND=0
"RTN","PXRMDEV",139,0)
 F  S IND=$O(TTEXT(IND)) Q:IND=""  D
"RTN","PXRMDEV",140,0)
 . I $L(TTEXT(IND))<79 S NL=NL+1,OUTPUT(NL)=TTEXT(IND) Q
"RTN","PXRMDEV",141,0)
 . D FORMATS^PXRMTEXT(1,79,TTEXT(IND),.NOUT,.TEXTOUT)
"RTN","PXRMDEV",142,0)
 . F JND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(JND)
"RTN","PXRMDEV",143,0)
 ;
"RTN","PXRMDEV",144,0)
 I $G(PXRMFFSS) D
"RTN","PXRMDEV",145,0)
 . N FFN,STEP
"RTN","PXRMDEV",146,0)
 . S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",147,0)
 . S NL=NL+1,OUTPUT(NL)="Step-by-step function finding evaluation:"
"RTN","PXRMDEV",148,0)
 . S FFN=""
"RTN","PXRMDEV",149,0)
 . F  S FFN=$O(^TMP("PXRMFFSS",$J,FFN)) Q:FFN=""  D
"RTN","PXRMDEV",150,0)
 .. S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",151,0)
 .. S NL=NL+1,OUTPUT(NL)=" Function finding "_FFN_"="_FIEVAL(FFN)
"RTN","PXRMDEV",152,0)
 .. D FORMATS^PXRMTEXT(1,79,$P(FIEVAL(FFN,"DETAIL"),U,2),.NOUT,.TEXTOUT)
"RTN","PXRMDEV",153,0)
 .. F JND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(JND)
"RTN","PXRMDEV",154,0)
 .. S NL=NL+1,OUTPUT(NL)=" = "_^TMP("PXRMFFSS",$J,FFN,0)
"RTN","PXRMDEV",155,0)
 .. S NL=NL+1,OUTPUT(NL)="Step  Result"
"RTN","PXRMDEV",156,0)
 .. S STEP=0
"RTN","PXRMDEV",157,0)
 .. F  S STEP=$O(^TMP("PXRMFFSS",$J,FFN,STEP)) Q:STEP=""  D
"RTN","PXRMDEV",158,0)
 ... S NL=NL+1,OUTPUT(NL)=$$RJ^XLFSTR(STEP_".",4," ")_"  "_^TMP("PXRMFFSS",$J,FFN,STEP)
"RTN","PXRMDEV",159,0)
 . K ^TMP("PXRMFFSS",$J)
"RTN","PXRMDEV",160,0)
 I $G(PXRMTDEB) D
"RTN","PXRMDEV",161,0)
 . S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",162,0)
 . S NL=NL+1,OUTPUT(NL)="Term findings:"
"RTN","PXRMDEV",163,0)
 . S REF="TFIEVAL"
"RTN","PXRMDEV",164,0)
 . S FINDING=0
"RTN","PXRMDEV",165,0)
 . F  S FINDING=$O(^TMP("PXRMTDEB",$J,FINDING)) Q:FINDING=""  D
"RTN","PXRMDEV",166,0)
 .. K TFIEVAL M TFIEVAL(FINDING)=^TMP("PXRMTDEB",$J,FINDING)
"RTN","PXRMDEV",167,0)
 .. S NL=NL+1,OUTPUT(NL)="Finding "_FINDING_":"
"RTN","PXRMDEV",168,0)
 .. K TTEXT
"RTN","PXRMDEV",169,0)
 .. D ACOPY^PXRMUTIL(REF,"TTEXT()")
"RTN","PXRMDEV",170,0)
 .. S IND=0
"RTN","PXRMDEV",171,0)
 .. F  S IND=$O(TTEXT(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=TTEXT(IND)
"RTN","PXRMDEV",172,0)
 . K ^TMP("PXRMTDEB",$J)
"RTN","PXRMDEV",173,0)
 ;
"RTN","PXRMDEV",174,0)
 I $D(^TMP(PXRMID,$J)) D
"RTN","PXRMDEV",175,0)
 . S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",176,0)
 . S NL=NL+1,OUTPUT(NL)="The elements of the ^TMP(PXRMID,$J) array are:"
"RTN","PXRMDEV",177,0)
 . S REF="^TMP(PXRMID,$J)"
"RTN","PXRMDEV",178,0)
 . K TTEXT
"RTN","PXRMDEV",179,0)
 . D ACOPY^PXRMUTIL(REF,"TTEXT()")
"RTN","PXRMDEV",180,0)
 . S IND=0
"RTN","PXRMDEV",181,0)
 . F  S IND=$O(TTEXT(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=TTEXT(IND)
"RTN","PXRMDEV",182,0)
 . K ^TMP(PXRMID,$J)
"RTN","PXRMDEV",183,0)
 ;
"RTN","PXRMDEV",184,0)
 I $D(^TMP("PXRHM",$J)) D
"RTN","PXRMDEV",185,0)
 . S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",186,0)
 . S NL=NL+1,OUTPUT(NL)="The elements of the ^TMP(""PXRHM"",$J) array are:"
"RTN","PXRMDEV",187,0)
 . S REF="^TMP(""PXRHM"",$J)"
"RTN","PXRMDEV",188,0)
 . K TTEXT
"RTN","PXRMDEV",189,0)
 . D ACOPY^PXRMUTIL(REF,"TTEXT()")
"RTN","PXRMDEV",190,0)
 . S IND=0
"RTN","PXRMDEV",191,0)
 . F  S IND=$O(TTEXT(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=TTEXT(IND)
"RTN","PXRMDEV",192,0)
 ;
"RTN","PXRMDEV",193,0)
 I $D(^TMP("PXRHM",$J)) D CMOUT(PXRHM,.NL,.OUTPUT)
"RTN","PXRMDEV",194,0)
 I $D(^TMP("PXRMMHVC",$J)) D MHVOUT(PXRHM,.NL,.OUTPUT)
"RTN","PXRMDEV",195,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J),^TMP("PXRMMHVC",$J)
"RTN","PXRMDEV",196,0)
 S BOP=$$BORP^PXRMUTIL("P")
"RTN","PXRMDEV",197,0)
 I BOP="B" D
"RTN","PXRMDEV",198,0)
 . S X="IORESET"
"RTN","PXRMDEV",199,0)
 . D ENDR^%ZISS
"RTN","PXRMDEV",200,0)
 . D BROWSE^DDBR("OUTPUT","NR","Reminder Test")
"RTN","PXRMDEV",201,0)
 . W IORESET
"RTN","PXRMDEV",202,0)
 . D KILL^%ZISS
"RTN","PXRMDEV",203,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMDEV",204,0)
 Q
"RTN","PXRMDEV",205,0)
 ;
"RTN","PXRMDEV",206,0)
 ;==================================================
"RTN","PXRMDEV",207,0)
MHVOUT(PXRHM,NL,OUTPUT) ;Do formatted MHV combined output.
"RTN","PXRMDEV",208,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME
"RTN","PXRMDEV",209,0)
 N STATUS,STATCOL,TEMP,TEXT,TYPE
"RTN","PXRMDEV",210,0)
 S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",211,0)
 S NL=NL+1,OUTPUT(NL)="MHV Summary and Detailed Output:"
"RTN","PXRMDEV",212,0)
 S RIEN=$O(^TMP("PXRMMHVC",$J,""))
"RTN","PXRMDEV",213,0)
 S TEMP=^TMP("PXRMMHVC",$J,RIEN,"STATUS")
"RTN","PXRMDEV",214,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",215,0)
 S DUE=$$DDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",216,0)
 S LAST=$$DDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",217,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",218,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",219,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",220,0)
 S RNAME=$P(^PXD(811.9,RIEN,0),U,3)
"RTN","PXRMDEV",221,0)
 I RNAME="" S RNAME=$P(^PXD(811.9,RIEN,0),U,1)
"RTN","PXRMDEV",222,0)
 S TEXT=$$REPEAT^XLFSTR(" ",36)_"--STATUS-- --DUE DATE--  --LAST DONE--"
"RTN","PXRMDEV",223,0)
 S NL=NL+1,OUTPUT(NL)=TEXT
"RTN","PXRMDEV",224,0)
 S TEXT=RNAME_$$REPEAT^XLFSTR(" ",(STATCOL-$L(RNAME)))_STATUS
"RTN","PXRMDEV",225,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(DUECOL-$L(TEXT)))_DUE
"RTN","PXRMDEV",226,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(LASTCOL-$L(TEXT)))_LAST
"RTN","PXRMDEV",227,0)
 S NL=NL+1,OUTPUT(NL)=TEXT
"RTN","PXRMDEV",228,0)
 I '$D(^TMP("PXRMMHVC",$J)) Q
"RTN","PXRMDEV",229,0)
 I (PXRHM=11)!(PXRHM=12) D
"RTN","PXRMDEV",230,0)
 .; W !!,"---------- Detailed Output ----------"
"RTN","PXRMDEV",231,0)
 . S NL=NL+1,OUTPUT(NL)="---------- Detailed Output ----------"
"RTN","PXRMDEV",232,0)
 . S LNUM=0
"RTN","PXRMDEV",233,0)
 . F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",234,0)
 .. S NL=NL+1,OUTPUT(NL)=^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)
"RTN","PXRMDEV",235,0)
 I (PXRHM=10)!(PXRHM=12) D
"RTN","PXRMDEV",236,0)
 . S NL=NL+1,OUTPUT(NL)="",NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMDEV",237,0)
 . S NL=NL+1,OUTPUT(NL)="---------- Summary Output ----------"
"RTN","PXRMDEV",238,0)
 . S LNUM=0
"RTN","PXRMDEV",239,0)
 . F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",240,0)
 .. S NL=NL+1,OUTPUT(NL)=^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)
"RTN","PXRMDEV",241,0)
 Q
"RTN","PXRMDEV",242,0)
 ;
"RTN","PXRMDGPT")
0^20^B33156979
"RTN","PXRMDGPT",1,0)
PXRMDGPT ; SLC/PKR - Code to handle DGPT (Patient Treatment File) data. ;10/11/2012
"RTN","PXRMDGPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMDGPT",3,0)
 ;
"RTN","PXRMDGPT",4,0)
 ;============================================
"RTN","PXRMDGPT",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,FLIST) ;Find data for a patient.
"RTN","PXRMDGPT",6,0)
 N CODE,CODESYS,DA,DAS,DATE,DNODE,DS,EDTT,IND
"RTN","PXRMDGPT",7,0)
 N NFOUND,NODE,NODEAT,NNODES,TDATE,TIND,TLIST
"RTN","PXRMDGPT",8,0)
 S NNODES=TAXARR("APDS",45,"NNODES")
"RTN","PXRMDGPT",9,0)
 I NNODES=0 Q
"RTN","PXRMDGPT",10,0)
 I $G(^PXRMINDX(45,"DATE BUILT"))="" D  Q
"RTN","PXRMDGPT",11,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),45)
"RTN","PXRMDGPT",12,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMDGPT",13,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMDGPT",14,0)
 S CODESYS="",NFOUND=0
"RTN","PXRMDGPT",15,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMDGPT",16,0)
 . I '$D(^PXRMINDX(45,CODESYS,"PNI",DFN)) Q
"RTN","PXRMDGPT",17,0)
 . F IND=1:1:NNODES D
"RTN","PXRMDGPT",18,0)
 .. S NODE=TAXARR("APDS",45,IND)
"RTN","PXRMDGPT",19,0)
 .. I '$D(^PXRMINDX(45,CODESYS,"PNI",DFN,NODE)) Q
"RTN","PXRMDGPT",20,0)
 .. S CODE=""
"RTN","PXRMDGPT",21,0)
 .. F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D 
"RTN","PXRMDGPT",22,0)
 ... I '$D(^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE)) Q
"RTN","PXRMDGPT",23,0)
 ... S DATE=DS
"RTN","PXRMDGPT",24,0)
 ... F  S DATE=+$O(^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMDGPT",25,0)
 .... S DAS=""
"RTN","PXRMDGPT",26,0)
 .... F  S DAS=$O(^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMDGPT",27,0)
 ..... S NFOUND=NFOUND+1
"RTN","PXRMDGPT",28,0)
 ..... S TLIST(DATE,NFOUND)=DAS_U_DATE_U_CODESYS_U_CODE_U_NODE
"RTN","PXRMDGPT",29,0)
 ..... I NFOUND>NGET D
"RTN","PXRMDGPT",30,0)
 ...... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMDGPT",31,0)
 ...... K TLIST(TDATE,TIND)
"RTN","PXRMDGPT",32,0)
 ;
"RTN","PXRMDGPT",33,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMDGPT",34,0)
 S NFOUND=0
"RTN","PXRMDGPT",35,0)
 S DATE=""
"RTN","PXRMDGPT",36,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMDGPT",37,0)
 . S IND=0
"RTN","PXRMDGPT",38,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMDGPT",39,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMDGPT",40,0)
 .. S FLIST(DATE,NFOUND,45)=TLIST(DATE,IND)
"RTN","PXRMDGPT",41,0)
 Q
"RTN","PXRMDGPT",42,0)
 ;
"RTN","PXRMDGPT",43,0)
 ;============================================
"RTN","PXRMDGPT",44,0)
GETDATA(DAS,FIEVT) ;Return data for a specificed PTF entry.
"RTN","PXRMDGPT",45,0)
 ;DBIA #4457
"RTN","PXRMDGPT",46,0)
 D PTF^DGPTPXRM(DAS,.FIEVT)
"RTN","PXRMDGPT",47,0)
 Q
"RTN","PXRMDGPT",48,0)
 ;
"RTN","PXRMDGPT",49,0)
 ;============================================
"RTN","PXRMDGPT",50,0)
GPLIST(TAXARR,NOCC,BDT,EDT,PLIST) ;Get data for a patient.
"RTN","PXRMDGPT",51,0)
 N CODE,CODESYS,DA,DA1,DAS,DATE,DFN,DNODE,DS
"RTN","PXRMDGPT",52,0)
 N NFOUND,NODE,NNODES,TEMP,TLIST
"RTN","PXRMDGPT",53,0)
 I $G(^PXRMINDX(45,"DATE BUILT"))="" D  Q
"RTN","PXRMDGPT",54,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),45)
"RTN","PXRMDGPT",55,0)
 S TLIST="GPLIST_PXRMDGPT"
"RTN","PXRMDGPT",56,0)
 K ^TMP($J,TLIST)
"RTN","PXRMDGPT",57,0)
 S NNODES=TAXARR("APDS",45,"NNODES")
"RTN","PXRMDGPT",58,0)
 I NNODES=0 Q
"RTN","PXRMDGPT",59,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMDGPT",60,0)
 S CODESYS=""
"RTN","PXRMDGPT",61,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMDGPT",62,0)
 . I '$D(^PXRMINDX(45,CODESYS,"INP")) Q
"RTN","PXRMDGPT",63,0)
 . S CODE=""
"RTN","PXRMDGPT",64,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMDGPT",65,0)
 .. I '$D(^PXRMINDX(45,CODESYS,"INP",CODE)) Q
"RTN","PXRMDGPT",66,0)
 .. F IND=1:1:NNODES D
"RTN","PXRMDGPT",67,0)
 ... S NODE=TAXARR("APDS",45,IND)
"RTN","PXRMDGPT",68,0)
 ... I '$D(^PXRMINDX(45,CODESYS,"INP",CODE,NODE)) Q
"RTN","PXRMDGPT",69,0)
 ... S DFN=0
"RTN","PXRMDGPT",70,0)
 ... F  S DFN=$O(^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMDGPT",71,0)
 .... S DATE=DS
"RTN","PXRMDGPT",72,0)
 .... F  S DATE=+$O(^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMDGPT",73,0)
 ..... S DAS=$O(^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,""))
"RTN","PXRMDGPT",74,0)
 ..... S ^TMP($J,TLIST,DFN,DATE,DAS)=CODE_U_CODESYS_U_NODE
"RTN","PXRMDGPT",75,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMDGPT",76,0)
 S DFN=0
"RTN","PXRMDGPT",77,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMDGPT",78,0)
 . S NFOUND=0
"RTN","PXRMDGPT",79,0)
 . S DATE=""
"RTN","PXRMDGPT",80,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMDGPT",81,0)
 .. S DAS=""
"RTN","PXRMDGPT",82,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMDGPT",83,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMDGPT",84,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMDGPT",85,0)
 ... S ^TMP($J,PLIST,1,DFN,DATE,45)=DAS_U_DATE_U_TEMP
"RTN","PXRMDGPT",86,0)
 K ^TMP($J,TLIST)
"RTN","PXRMDGPT",87,0)
 Q
"RTN","PXRMDGPT",88,0)
 ;
"RTN","PXRMDGPT",89,0)
 ;============================================
"RTN","PXRMDGPT",90,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMDGPT",91,0)
 N CDATA,CODE,CODESYS,CODESYSA,CODESYSL,CODESYSN,DATE,IND,JND,NAME,NOUT
"RTN","PXRMDGPT",92,0)
 N RESULT,TEMP,TEXTIN,TEXTOUT
"RTN","PXRMDGPT",93,0)
 ;Since the results may contain both diagnosis and procedures group
"RTN","PXRMDGPT",94,0)
 ;them for display.
"RTN","PXRMDGPT",95,0)
 S IND=0
"RTN","PXRMDGPT",96,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  S CODESYSL(IFIEVAL(IND,"CODESYS"),IND)=""
"RTN","PXRMDGPT",97,0)
 S CODESYS=""
"RTN","PXRMDGPT",98,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXRMDGPT",99,0)
 .;DBIA #5679
"RTN","PXRMDGPT",100,0)
 . S TEMP=$$CSYS^LEXU(CODESYS)
"RTN","PXRMDGPT",101,0)
 . S CODESYSA=$P(TEMP,U,4)
"RTN","PXRMDGPT",102,0)
 . S CODESYSN=$$UP^XLFSTR($P(TEMP,U,5))
"RTN","PXRMDGPT",103,0)
 . S TEMP=$S(CODESYSN["PROCEDURE":"Procedure",CODESYSN["DIAGNOSIS":"Diagnosis",1:"Unknown")
"RTN","PXRMDGPT",104,0)
 . S NAME="Hospitalization "_TEMP
"RTN","PXRMDGPT",105,0)
 . S IND=""
"RTN","PXRMDGPT",106,0)
 . F  S IND=$O(CODESYSL(CODESYS,IND)) Q:IND=""  D
"RTN","PXRMDGPT",107,0)
 .. S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMDGPT",108,0)
 .. S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",109,0)
 .. K CDATA
"RTN","PXRMDGPT",110,0)
 .. ;DBIA #5679
"RTN","PXRMDGPT",111,0)
 .. S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DATE,.CDATA)
"RTN","PXRMDGPT",112,0)
 .. S TEXTIN(1)=NAME
"RTN","PXRMDGPT",113,0)
 .. S TEXTIN(2)=$P(CDATA("LEX",1),U,2)
"RTN","PXRMDGPT",114,0)
 .. S TEXTIN(3)=" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMDGPT",115,0)
 .. D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,3,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",116,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",117,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",118,0)
 Q
"RTN","PXRMDGPT",119,0)
 ;
"RTN","PXRMDGPT",120,0)
 ;============================================
"RTN","PXRMDGPT",121,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMDGPT",122,0)
 ;maintenance output.
"RTN","PXRMDGPT",123,0)
 N CDATA,CODE,CODESYS,CODESYSA,CODESYSL,CODESYSN,DATE,IND
"RTN","PXRMDGPT",124,0)
 N JND,NODE,NOUT,RESULT,TEMP,TEXTIN,TEXTOUT
"RTN","PXRMDGPT",125,0)
 ;Since the results may contain both diagnosis and procedures group
"RTN","PXRMDGPT",126,0)
 ;them for display.
"RTN","PXRMDGPT",127,0)
 S IND=0
"RTN","PXRMDGPT",128,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  S CODESYSL(IFIEVAL(IND,"CODESYS"),IND)=""
"RTN","PXRMDGPT",129,0)
 S CODESYS=""
"RTN","PXRMDGPT",130,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXRMDGPT",131,0)
 .;DBIA #5679
"RTN","PXRMDGPT",132,0)
 . S TEMP=$$CSYS^LEXU(CODESYS)
"RTN","PXRMDGPT",133,0)
 . S CODESYSA=$P(TEMP,U,4)
"RTN","PXRMDGPT",134,0)
 . S CODESYSN=$$UP^XLFSTR($P(TEMP,U,5))
"RTN","PXRMDGPT",135,0)
 . S TEMP=$S(CODESYSN["PROCEDURE":"Procedure",CODESYSN["DIAGNOSIS":"Diagnosis",1:"Unknown")
"RTN","PXRMDGPT",136,0)
 . S NLINES=NLINES+1
"RTN","PXRMDGPT",137,0)
 . S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Hospitalization "_TEMP
"RTN","PXRMDGPT",138,0)
 . S IND=""
"RTN","PXRMDGPT",139,0)
 . F  S IND=$O(CODESYSL(CODESYS,IND)) Q:IND=""  D
"RTN","PXRMDGPT",140,0)
 .. S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMDGPT",141,0)
 .. S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMDGPT",142,0)
 .. S NODE=IFIEVAL(IND,"NODE")
"RTN","PXRMDGPT",143,0)
 .. K CDATA
"RTN","PXRMDGPT",144,0)
 .. ;DBIA #5679
"RTN","PXRMDGPT",145,0)
 .. S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DATE,.CDATA)
"RTN","PXRMDGPT",146,0)
 .. S TEXTIN(1)=$$EDATE^PXRMDATE(DATE)_" "_CODE_" ("_CODESYSA_")"
"RTN","PXRMDGPT",147,0)
 .. S TEXTIN(2)=$P(CDATA("LEX",1),U,2)_";"
"RTN","PXRMDGPT",148,0)
 .. S TEXTIN(3)="data node: "_NODE
"RTN","PXRMDGPT",149,0)
 .. I $G(IFIEVAL(IND,"FEE BASIS")) S TEXTIN(3)=TEXTIN(3)_"; (Fee)"
"RTN","PXRMDGPT",150,0)
 .. D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,3,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMDGPT",151,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMDGPT",152,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMDGPT",153,0)
 Q
"RTN","PXRMDGPT",154,0)
 ;
"RTN","PXRMDIEV")
0^126^B68563179
"RTN","PXRMDIEV",1,0)
PXRMDIEV ;SLC/PKR - Routines for disabling/enabling evaluation. ;06/04/2014
"RTN","PXRMDIEV",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMDIEV",3,0)
 ;
"RTN","PXRMDIEV",4,0)
 ;=================================
"RTN","PXRMDIEV",5,0)
BUILDD(BUILD) ;Disable for a build installation.
"RTN","PXRMDIEV",6,0)
 N REASON
"RTN","PXRMDIEV",7,0)
 S REASON="install of "_BUILD_" build"
"RTN","PXRMDIEV",8,0)
 D BMES^XPDUTL("Disabling reminder evaluation.")
"RTN","PXRMDIEV",9,0)
 D SDISXTMP(REASON)
"RTN","PXRMDIEV",10,0)
 Q
"RTN","PXRMDIEV",11,0)
 ;
"RTN","PXRMDIEV",12,0)
 ;=================================
"RTN","PXRMDIEV",13,0)
BUILDE(BUILD) ;Enable after a build installation is complete.
"RTN","PXRMDIEV",14,0)
 N REASON
"RTN","PXRMDIEV",15,0)
 S REASON="install of "_BUILD_" build"
"RTN","PXRMDIEV",16,0)
 D BMES^XPDUTL("Enabling reminder evaluation.")
"RTN","PXRMDIEV",17,0)
 D KDISXTMP(REASON)
"RTN","PXRMDIEV",18,0)
 Q
"RTN","PXRMDIEV",19,0)
 ;
"RTN","PXRMDIEV",20,0)
 ;=================================
"RTN","PXRMDIEV",21,0)
DMSG ;Send a message that reminder evaluation has been disabled.
"RTN","PXRMDIEV",22,0)
 N DTIME,NL,RDATA,REASON,TO
"RTN","PXRMDIEV",23,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDIEV",24,0)
 S NL=0
"RTN","PXRMDIEV",25,0)
 S DTIME=$$FMTE^XLFDT($P(^XTMP("PXRM_DISEV",0),U,2))
"RTN","PXRMDIEV",26,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Reminder evaluation was disabled on "_DTIME_"."
"RTN","PXRMDIEV",27,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Because of this, the following TaskMan jobs can produce erroneous results."
"RTN","PXRMDIEV",28,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Pending jobs should not be allowed to start until evaluation is enabled."
"RTN","PXRMDIEV",29,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="The results of running jobs should be discarded and if possible, running jobs"
"RTN","PXRMDIEV",30,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="should be stopped."
"RTN","PXRMDIEV",31,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMDIEV",32,0)
 ;
"RTN","PXRMDIEV",33,0)
 S REASON=0
"RTN","PXRMDIEV",34,0)
 F  S REASON=$O(^XTMP("PXRM_DISEV",REASON)) Q:REASON=""  D
"RTN","PXRMDIEV",35,0)
 . I $D(^XTMP("PXRM_DISEV",REASON))=1 D  Q
"RTN","PXRMDIEV",36,0)
 .. S TEXT="Reason: "_REASON_"."
"RTN","PXRMDIEV",37,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMDIEV",38,0)
 . S RDATA=""
"RTN","PXRMDIEV",39,0)
 . F  S RDATA=$O(^XTMP("PXRM_DISEV",REASON,RDATA)) Q:RDATA=""  D
"RTN","PXRMDIEV",40,0)
 .. I REASON["index" S TEXT="Reason: "_REASON_" for file #"_RDATA_"."
"RTN","PXRMDIEV",41,0)
 .. I REASON["manager" D
"RTN","PXRMDIEV",42,0)
 ... S USER=$P(^VA(200,RDATA,0),U,1)
"RTN","PXRMDIEV",43,0)
 ... S TEXT="Reason: "_REASON_" - "_USER_"."
"RTN","PXRMDIEV",44,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMDIEV",45,0)
 ;
"RTN","PXRMDIEV",46,0)
 D TSKJOBS(.NL)
"RTN","PXRMDIEV",47,0)
 D TOLIST(.TO)
"RTN","PXRMDIEV",48,0)
 D SEND^PXRMMSG("PXRMXMZ","REMINDER EVALUATION DISABLED",.TO,.5)
"RTN","PXRMDIEV",49,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDIEV",50,0)
 Q
"RTN","PXRMDIEV",51,0)
 ;
"RTN","PXRMDIEV",52,0)
 ;=================================
"RTN","PXRMDIEV",53,0)
EMSG(DTIME) ;Send a message that reminder evaluation has been enabled.
"RTN","PXRMDIEV",54,0)
 N ETIME,NL,TO
"RTN","PXRMDIEV",55,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDIEV",56,0)
 S NL=0
"RTN","PXRMDIEV",57,0)
 S DTIME=$$FMTE^XLFDT(DTIME)
"RTN","PXRMDIEV",58,0)
 S ETIME=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","PXRMDIEV",59,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Reminder evaluation was enabled on "_ETIME_"."
"RTN","PXRMDIEV",60,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="It was disabled on "_DTIME_"."
"RTN","PXRMDIEV",61,0)
 D TOLIST(.TO)
"RTN","PXRMDIEV",62,0)
 D SEND^PXRMMSG("PXRMXMZ","REMINDER EVALUATION ENABLED",.TO,.5)
"RTN","PXRMDIEV",63,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDIEV",64,0)
 Q
"RTN","PXRMDIEV",65,0)
 ;
"RTN","PXRMDIEV",66,0)
 ;=================================
"RTN","PXRMDIEV",67,0)
INDEXD(INDEX) ;Disable for index rebuilding.
"RTN","PXRMDIEV",68,0)
 N REASON,TASKNUM
"RTN","PXRMDIEV",69,0)
 S REASON="index rebuild"
"RTN","PXRMDIEV",70,0)
 D SDISXTMP(REASON,INDEX)
"RTN","PXRMDIEV",71,0)
 ;Start a TaskMan job to periodically check for completion of the
"RTN","PXRMDIEV",72,0)
 ;rebuilding.
"RTN","PXRMDIEV",73,0)
 S TASKNUM=$$TINDXCHK(REASON,INDEX)
"RTN","PXRMDIEV",74,0)
 I TASKNUM'="" D
"RTN","PXRMDIEV",75,0)
 . W !,"Started job ",TASKNUM," to check for completion of the rebuilding"
"RTN","PXRMDIEV",76,0)
 . W !,"of the index for file # ",INDEX,"."
"RTN","PXRMDIEV",77,0)
 Q
"RTN","PXRMDIEV",78,0)
 ;
"RTN","PXRMDIEV",79,0)
 ;=================================
"RTN","PXRMDIEV",80,0)
INDXCHK(REASON,INDEX) ;If reminder evaluation is disabled for index
"RTN","PXRMDIEV",81,0)
 ;rebuilding check to see if the index has been rebuilt.
"RTN","PXRMDIEV",82,0)
 I $D(^PXRMINDX(INDEX,"DATE BUILT")) D KDISXTMP(REASON,INDEX)
"RTN","PXRMDIEV",83,0)
 Q
"RTN","PXRMDIEV",84,0)
 ;
"RTN","PXRMDIEV",85,0)
 ;=================================
"RTN","PXRMDIEV",86,0)
KDISXTMP(REASON,RDATA) ;Kill ^XTMP nodes for disabling evaluation.
"RTN","PXRMDIEV",87,0)
 I $G(RDATA)'="" K ^XTMP("PXRM_DISEV",REASON,RDATA)
"RTN","PXRMDIEV",88,0)
 E  K ^XTMP("PXRM_DISEV",REASON)
"RTN","PXRMDIEV",89,0)
 I $O(^XTMP("PXRM_DISEV",0))="" D
"RTN","PXRMDIEV",90,0)
 . N DTIME
"RTN","PXRMDIEV",91,0)
 . S DTIME=$P(^XTMP("PXRM_DISEV",0),U,2)
"RTN","PXRMDIEV",92,0)
 . K ^XTMP("PXRM_DISEV")
"RTN","PXRMDIEV",93,0)
 .;Enable PXRM options and protocols.
"RTN","PXRMDIEV",94,0)
 . D OPTIONS("")
"RTN","PXRMDIEV",95,0)
 . D PROTCOLS("")
"RTN","PXRMDIEV",96,0)
 .;Send a message that evaluation has been enabled.
"RTN","PXRMDIEV",97,0)
 . D EMSG(DTIME)
"RTN","PXRMDIEV",98,0)
 Q
"RTN","PXRMDIEV",99,0)
 ;
"RTN","PXRMDIEV",100,0)
 ;=================================
"RTN","PXRMDIEV",101,0)
MGRD ;Code for disabling evaluation by the reminder manager.
"RTN","PXRMDIEV",102,0)
 N ANS,REASON
"RTN","PXRMDIEV",103,0)
 W !,"Disabling reminder evaluation will stop all evaluation, dialogs,"
"RTN","PXRMDIEV",104,0)
 W !,"reminder order checks, and anything using reminder evaluation!"
"RTN","PXRMDIEV",105,0)
 W !,"Are you sure you want to proceed?"
"RTN","PXRMDIEV",106,0)
 S ANS=$$ASKYN^PXRMEUT("N","Disable reminder evaluation")
"RTN","PXRMDIEV",107,0)
 I 'ANS Q
"RTN","PXRMDIEV",108,0)
 S REASON="by reminder manager"
"RTN","PXRMDIEV",109,0)
 D SDISXTMP(REASON,DUZ)
"RTN","PXRMDIEV",110,0)
 Q
"RTN","PXRMDIEV",111,0)
 ;
"RTN","PXRMDIEV",112,0)
 ;=================================
"RTN","PXRMDIEV",113,0)
MGRE ;Code for enabling evaluation by the reminder manager.
"RTN","PXRMDIEV",114,0)
 N ANS,DTIME,RDATA,REASON,TEXT
"RTN","PXRMDIEV",115,0)
 W !,"Reminder evaluation is currently disabled for the following reason(s):"
"RTN","PXRMDIEV",116,0)
 S REASON=0
"RTN","PXRMDIEV",117,0)
 F  S REASON=$O(^XTMP("PXRM_DISEV",REASON)) Q:REASON=""  D
"RTN","PXRMDIEV",118,0)
 . I $D(^XTMP("PXRM_DISEV",REASON))=1 D  Q
"RTN","PXRMDIEV",119,0)
 .. S TEXT="Reason: "_REASON_"."
"RTN","PXRMDIEV",120,0)
 .. W !,TEXT
"RTN","PXRMDIEV",121,0)
 . S RDATA=""
"RTN","PXRMDIEV",122,0)
 . F  S RDATA=$O(^XTMP("PXRM_DISEV",REASON,RDATA)) Q:RDATA=""  D
"RTN","PXRMDIEV",123,0)
 .. I REASON["index" S TEXT="Reason: "_REASON_" of file #"_RDATA_"."
"RTN","PXRMDIEV",124,0)
 .. I REASON["manager" D
"RTN","PXRMDIEV",125,0)
 ... S MNAME=$P(^VA(200,RDATA,0),U,1)
"RTN","PXRMDIEV",126,0)
 ... S TEXT="Reason: "_REASON_" - "_MNAME_"."
"RTN","PXRMDIEV",127,0)
 .. W !,TEXT
"RTN","PXRMDIEV",128,0)
 S ANS=$$ASKYN^PXRMEUT("N","Enable reminder evaluation")
"RTN","PXRMDIEV",129,0)
 I 'ANS Q
"RTN","PXRMDIEV",130,0)
 S DTIME=$P(^XTMP("PXRM_DISEV",0),U,2)
"RTN","PXRMDIEV",131,0)
 D EMSG(DTIME)
"RTN","PXRMDIEV",132,0)
 K ^XTMP("PXRM_DISEV")
"RTN","PXRMDIEV",133,0)
 D OPTIONS("")
"RTN","PXRMDIEV",134,0)
 D PROTCOLS("")
"RTN","PXRMDIEV",135,0)
 Q
"RTN","PXRMDIEV",136,0)
 ;
"RTN","PXRMDIEV",137,0)
 ;=================================
"RTN","PXRMDIEV",138,0)
MGRO ;Called by the option PXRM DISABLE/ENABLE EVALUATION.
"RTN","PXRMDIEV",139,0)
 I '$D(^XUSEC("PXRM MANAGER",DUZ)) D  Q
"RTN","PXRMDIEV",140,0)
 . W !,"You must have the reminder managers key to use this option."
"RTN","PXRMDIEV",141,0)
 I $D(^XTMP("PXRM_DISEV",0)) D MGRE Q
"RTN","PXRMDIEV",142,0)
 D MGRD
"RTN","PXRMDIEV",143,0)
 Q
"RTN","PXRMDIEV",144,0)
 ;
"RTN","PXRMDIEV",145,0)
 ;=================================
"RTN","PXRMDIEV",146,0)
OPTIONS(TEXT) ;Disable/enable critical PXRM options.
"RTN","PXRMDIEV",147,0)
 ;;PXRM DEF INTEGRITY CHECK ALL
"RTN","PXRMDIEV",148,0)
 ;;PXRM DEF INTEGRITY CHECK ONE
"RTN","PXRMDIEV",149,0)
 ;;PXRM ORDER CHECK TESTER
"RTN","PXRMDIEV",150,0)
 ;;PXRM REMINDERS DUE
"RTN","PXRMDIEV",151,0)
 ;;PXRM REMINDERS DUE (USER)
"RTN","PXRMDIEV",152,0)
 ;;END
"RTN","PXRMDIEV",153,0)
 N IND,DONE,OPTION
"RTN","PXRMDIEV",154,0)
 S DONE=0
"RTN","PXRMDIEV",155,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMDIEV",156,0)
 . S OPTION=$P($T(OPTIONS+IND),";",3,99)
"RTN","PXRMDIEV",157,0)
 . I OPTION="END" S DONE=1 Q
"RTN","PXRMDIEV",158,0)
 . D OUT^XPDMENU(OPTION,TEXT)
"RTN","PXRMDIEV",159,0)
 Q
"RTN","PXRMDIEV",160,0)
 ;
"RTN","PXRMDIEV",161,0)
 ;=================================
"RTN","PXRMDIEV",162,0)
PINDXCHK ;If reminder evaluation is disabled for index
"RTN","PXRMDIEV",163,0)
 ;rebuilding periodically check to see if the index has been rebuilt.
"RTN","PXRMDIEV",164,0)
 ;This is run as a TaskMan job INDEX and REASON are passed through
"RTN","PXRMDIEV",165,0)
 ;ZTSAVE.
"RTN","PXRMDIEV",166,0)
 N DONE
"RTN","PXRMDIEV",167,0)
 S ZTREQ="@"
"RTN","PXRMDIEV",168,0)
 S DONE=0
"RTN","PXRMDIEV",169,0)
 F  Q:DONE  D
"RTN","PXRMDIEV",170,0)
 . I $D(^PXRMINDX(INDEX,"DATE BUILT")) D
"RTN","PXRMDIEV",171,0)
 .. S DONE=1
"RTN","PXRMDIEV",172,0)
 .. I $D(^XTMP("PXRM_DISEV",REASON)) D KDISXTMP^PXRMDIEV(REASON,INDEX)
"RTN","PXRMDIEV",173,0)
 . I 'DONE H 60
"RTN","PXRMDIEV",174,0)
 Q
"RTN","PXRMDIEV",175,0)
 ;
"RTN","PXRMDIEV",176,0)
 ;=================================
"RTN","PXRMDIEV",177,0)
PROTCOLS(TEXT) ;Disable/enable critical PXRM protocols.
"RTN","PXRMDIEV",178,0)
 ;;PXRM PATIENT LIST CREATE
"RTN","PXRMDIEV",179,0)
 ;;PXRM EXTRACT MANUAL TRANSMISSION
"RTN","PXRMDIEV",180,0)
 ;;END
"RTN","PXRMDIEV",181,0)
 N IND,DONE,PROTOCOL
"RTN","PXRMDIEV",182,0)
 S DONE=0
"RTN","PXRMDIEV",183,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMDIEV",184,0)
 . S PROTOCOL=$P($T(PROTCOLS+IND),";",3,99)
"RTN","PXRMDIEV",185,0)
 . I PROTOCOL="END" S DONE=1 Q
"RTN","PXRMDIEV",186,0)
 . D OUT^XPDPROT(PROTOCOL,TEXT)
"RTN","PXRMDIEV",187,0)
 Q
"RTN","PXRMDIEV",188,0)
 ;
"RTN","PXRMDIEV",189,0)
 ;=================================
"RTN","PXRMDIEV",190,0)
SDISXTMP(REASON,RDATA) ;Set ^XTMP nodes for disabling evaluation.
"RTN","PXRMDIEV",191,0)
 N CDATE,PUDATE
"RTN","PXRMDIEV",192,0)
 I '$D(^XTMP("PXRM_DISEV",0)) D
"RTN","PXRMDIEV",193,0)
 . S CDATE=$$NOW^XLFDT
"RTN","PXRMDIEV",194,0)
 . S PUDATE=$$FMADD^XLFDT(CDATE,0,12,0,0)
"RTN","PXRMDIEV",195,0)
 . S ^XTMP("PXRM_DISEV",0)=PUDATE_U_CDATE_U_"Temporarily disable reminder evaluation"
"RTN","PXRMDIEV",196,0)
 I $G(RDATA)="" S ^XTMP("PXRM_DISEV",REASON)=""
"RTN","PXRMDIEV",197,0)
 E  S ^XTMP("PXRM_DISEV",REASON,RDATA)=""
"RTN","PXRMDIEV",198,0)
 ;Disable some PXRM options and protocols.
"RTN","PXRMDIEV",199,0)
 D OPTIONS(REASON)
"RTN","PXRMDIEV",200,0)
 D PROTCOLS(REASON)
"RTN","PXRMDIEV",201,0)
 ;Send a message that evaluation is disabled.
"RTN","PXRMDIEV",202,0)
 D DMSG
"RTN","PXRMDIEV",203,0)
 Q
"RTN","PXRMDIEV",204,0)
 ;
"RTN","PXRMDIEV",205,0)
 ;=================================
"RTN","PXRMDIEV",206,0)
TINDXCHK(REASON,INDEX) ;If reminder evaluation is disabled for index
"RTN","PXRMDIEV",207,0)
 ;rebuilding start a TaskMan job to periodically check to see
"RTN","PXRMDIEV",208,0)
 ;if the index has been rebuilt.
"RTN","PXRMDIEV",209,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMDIEV",210,0)
 S ZTSAVE("INDEX")=""
"RTN","PXRMDIEV",211,0)
 S ZTSAVE("RDATA")=""
"RTN","PXRMDIEV",212,0)
 S ZTSAVE("REASON")=""
"RTN","PXRMDIEV",213,0)
 S ZTRTN="PINDXCHK^PXRMDIEV"
"RTN","PXRMDIEV",214,0)
 S ZTDESC="Clinical Reminders Index building check, file #"_INDEX
"RTN","PXRMDIEV",215,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","PXRMDIEV",216,0)
 S ZTIO=""
"RTN","PXRMDIEV",217,0)
 D ^%ZTLOAD
"RTN","PXRMDIEV",218,0)
 Q ZTSK
"RTN","PXRMDIEV",219,0)
 ;
"RTN","PXRMDIEV",220,0)
 ;=================================
"RTN","PXRMDIEV",221,0)
TOLIST(TO) ;Return the list of who to send the message to.
"RTN","PXRMDIEV",222,0)
 N MGIEN,MGROUP
"RTN","PXRMDIEV",223,0)
 S TO(DUZ)=""
"RTN","PXRMDIEV",224,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMDIEV",225,0)
 I MGIEN'="" D
"RTN","PXRMDIEV",226,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMDIEV",227,0)
 . S TO(MGROUP)=""
"RTN","PXRMDIEV",228,0)
 Q
"RTN","PXRMDIEV",229,0)
 ;
"RTN","PXRMDIEV",230,0)
 ;=================================
"RTN","PXRMDIEV",231,0)
TSKJOBS(NL) ;Search for TaskMan jobs that may be affected by disabled reminder
"RTN","PXRMDIEV",232,0)
 ;evaluation. For any that are found add information to the MailMan
"RTN","PXRMDIEV",233,0)
 ;message.
"RTN","PXRMDIEV",234,0)
 N TDESC
"RTN","PXRMDIEV",235,0)
 S TDESC="Reminder Due Report"
"RTN","PXRMDIEV",236,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMDIEV",237,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Reminders Due Report Jobs"
"RTN","PXRMDIEV",238,0)
 D TSKLIST(TDESC,.NL)
"RTN","PXRMDIEV",239,0)
 ;
"RTN","PXRMDIEV",240,0)
 S TDESC="Build Reminder Patient List"
"RTN","PXRMDIEV",241,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMDIEV",242,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Reminder Patient List Jobs"
"RTN","PXRMDIEV",243,0)
 D TSKLIST(TDESC,.NL)
"RTN","PXRMDIEV",244,0)
 ;
"RTN","PXRMDIEV",245,0)
 S TDESC="Run Reminder Extract"
"RTN","PXRMDIEV",246,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMDIEV",247,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Reminder Extract Jobs"
"RTN","PXRMDIEV",248,0)
 D TSKLIST(TDESC,.NL)
"RTN","PXRMDIEV",249,0)
 Q
"RTN","PXRMDIEV",250,0)
 ;
"RTN","PXRMDIEV",251,0)
 ;=================================
"RTN","PXRMDIEV",252,0)
TSKLIST(TDESC,NL) ;Search for tasks with the description TDESC. For any
"RTN","PXRMDIEV",253,0)
 ;that are found add their information to the message text.
"RTN","PXRMDIEV",254,0)
 N DTIME,STATUS,TIME,TLIST,TASKNUM,USER,ZTSK
"RTN","PXRMDIEV",255,0)
 D DESC^%ZTLOAD(TDESC,"TLIST")
"RTN","PXRMDIEV",256,0)
 S TASKNUM=""
"RTN","PXRMDIEV",257,0)
 F  S TASKNUM=$O(TLIST(TASKNUM)) Q:TASKNUM=""  D
"RTN","PXRMDIEV",258,0)
 . K ZTSK
"RTN","PXRMDIEV",259,0)
 . S ZTSK=TASKNUM
"RTN","PXRMDIEV",260,0)
 . D STAT^%ZTLOAD
"RTN","PXRMDIEV",261,0)
 . I ZTSK(0)=0 Q
"RTN","PXRMDIEV",262,0)
 .;Only tasks that are pending or running.
"RTN","PXRMDIEV",263,0)
 . I ZTSK(2)'["Active" Q
"RTN","PXRMDIEV",264,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMDIEV",265,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Task number - "_TASKNUM
"RTN","PXRMDIEV",266,0)
 . S STATUS=ZTSK(2)
"RTN","PXRMDIEV",267,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Status - "_STATUS
"RTN","PXRMDIEV",268,0)
 . D ISQED^%ZTLOAD
"RTN","PXRMDIEV",269,0)
 . I $D(ZTSK("D")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Time - "_$$HTE^XLFDT(ZTSK("D"))
"RTN","PXRMDIEV",270,0)
 . I $D(ZTSK("DUZ")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="User - "_$P(^VA(200,ZTSK("DUZ"),0),U,1)
"RTN","PXRMDIEV",271,0)
 Q
"RTN","PXRMDIEV",272,0)
 ;
"RTN","PXRMDLG1")
0^15^B7385364
"RTN","PXRMDLG1",1,0)
PXRMDLG1 ; SLC/PJH - Reminder Dialog Edit/Inquiry (overflow) ;08/20/2012
"RTN","PXRMDLG1",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLG1",3,0)
 ;
"RTN","PXRMDLG1",4,0)
 ;Either dialog text or P/N text
"RTN","PXRMDLG1",5,0)
 ;------------------------------
"RTN","PXRMDLG1",6,0)
TSUB(IEN,VIEW) ;
"RTN","PXRMDLG1",7,0)
 ;Dialog View uses Dialog text
"RTN","PXRMDLG1",8,0)
 I VIEW=1 Q 25
"RTN","PXRMDLG1",9,0)
 I VIEW=2,$D(^PXRMD(801.41,IEN,25)) Q 25
"RTN","PXRMDLG1",10,0)
 ;P/N View uses P/N TEXT if defined
"RTN","PXRMDLG1",11,0)
 I $D(^PXRMD(801.41,IEN,35)) Q 35
"RTN","PXRMDLG1",12,0)
 ;Otherwise Dialog Text
"RTN","PXRMDLG1",13,0)
 Q 25
"RTN","PXRMDLG1",14,0)
 ;
"RTN","PXRMDLG1",15,0)
 ;additional prompts in the dialog file
"RTN","PXRMDLG1",16,0)
 ;-------------------------------------
"RTN","PXRMDLG1",17,0)
PROMPT(IEN,TAB,TEXT,DGRP) ;
"RTN","PXRMDLG1",18,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG1",19,0)
 S SEQ=0
"RTN","PXRMDLG1",20,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",21,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG1",22,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB 
"RTN","PXRMDLG1",23,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG1",24,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG1",25,0)
 .I VIEW,('DGRP),(DTYP'="P") Q
"RTN","PXRMDLG1",26,0)
 .I ('VIEW),('DGRP),("FP"'[DTYP) Q
"RTN","PXRMDLG1",27,0)
 .S:VIEW DDIS=""
"RTN","PXRMDLG1",28,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",29,0)
 .I DGRP D
"RTN","PXRMDLG1",30,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",31,0)
 ..S DNAME=DGSEQ_$J("",3-$L(DGSEQ))_DNAME
"RTN","PXRMDLG1",32,0)
 .I TAB=0,DTYP="P" D
"RTN","PXRMDLG1",33,0)
 ..;Override prompt caption
"RTN","PXRMDLG1",34,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG1",35,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",36,0)
 ..S DNAME=$J("",3)_DTITLE
"RTN","PXRMDLG1",37,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",38,0)
 .S DNAME=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",39,0)
 .;S:DDIS]"" DNAME=DNAME_$J("",72-$L(DNAME))_DDIS
"RTN","PXRMDLG1",40,0)
 .S:+DDIS>0 DNAME=DNAME_$J("",72-$L(DNAME))_" (Disabled)"
"RTN","PXRMDLG1",41,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",42,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DNAME
"RTN","PXRMDLG1",43,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",44,0)
 Q
"RTN","PXRMDLG1",45,0)
 ;
"RTN","PXRMDLG1",46,0)
FIND(FIEN,SEQ,DIEN,NLINE,NODE) ;
"RTN","PXRMDLG1",47,0)
 N FNUM,TIEN,HIST,SUB,CODE,CODES,CODESYS,BDATE,EDATE,DATE,DESC,DTEXT
"RTN","PXRMDLG1",48,0)
 S HIST=0
"RTN","PXRMDLG1",49,0)
 S TIEN=$P(FIEN,";")
"RTN","PXRMDLG1",50,0)
 D BLDCODE^PXRMDTAX("ALL",.CODESYS)
"RTN","PXRMDLG1",51,0)
 D CODES^PXRMDLLB(TIEN,.CODESYS,.CODES)
"RTN","PXRMDLG1",52,0)
 S TEXT=$J("",15)_"Selectable codes:",TAB=18
"RTN","PXRMDLG1",53,0)
 S STR=$$LJ^XLFSTR($G(TEXT),60)
"RTN","PXRMDLG1",54,0)
 S STR=STR_"Activation Periods"
"RTN","PXRMDLG1",55,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG1",56,0)
 S ^TMP(NODE,$J,NLINE,0)=STR
"RTN","PXRMDLG1",57,0)
 S BDATE=""
"RTN","PXRMDLG1",58,0)
 F  S BDATE=$O(CODES(BDATE)) Q:BDATE=""  D
"RTN","PXRMDLG1",59,0)
 .I $G(BDATE)=0 Q
"RTN","PXRMDLG1",60,0)
 .S EDATE=$P(CODES(BDATE),U),DESC=$P(CODES(BDATE),U,2)
"RTN","PXRMDLG1",61,0)
 .S BDATE=$$FMTE^XLFDT(BDATE)
"RTN","PXRMDLG1",62,0)
 .I $G(EDATE)'="" S EDATE=$$FMTE^XLFDT(EDATE)
"RTN","PXRMDLG1",63,0)
 .S DATE=BDATE I $G(EDATE)'="" S DATE=DATE_"-"_EDATE
"RTN","PXRMDLG1",64,0)
 .S STR=$$LJ^XLFSTR($G(CODE),8)
"RTN","PXRMDLG1",65,0)
 .S STR=STR_$$LJ^XLFSTR(DESC,31)
"RTN","PXRMDLG1",66,0)
 .S DTEXT=STR_DATE
"RTN","PXRMDLG1",67,0)
 .S NLINE=NLINE+1
"RTN","PXRMDLG1",68,0)
 .S ^TMP(NODE,$J,NLINE,0)=$J("",15)_DTEXT
"RTN","PXRMDLG1",69,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG1",70,0)
 S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDLG1",71,0)
 Q
"RTN","PXRMDLG1",72,0)
 ;
"RTN","PXRMDLG4")
0^16^B91752060
"RTN","PXRMDLG4",1,0)
PXRMDLG4 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;08/20/2012
"RTN","PXRMDLG4",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,16,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLG4",3,0)
 ;
"RTN","PXRMDLG4",4,0)
WP(SUB,SUB1,WIDTH,SEQ,VALMCNT) ;Format WP text
"RTN","PXRMDLG4",5,0)
 N DIWF,DIWL,DIWR,IC,TEXT,X,TXTCNT,DTXT,CNT,SUB2
"RTN","PXRMDLG4",6,0)
 S (CNT,SUB2,TXTCNT)=0
"RTN","PXRMDLG4",7,0)
 F  S SUB2=$O(^PXRMD(801.41,SUB,SUB1,SUB2)) Q:'SUB2  D
"RTN","PXRMDLG4",8,0)
 .S TXTCNT=TXTCNT+1,DTXT(TXTCNT)=$G(^PXRMD(801.41,SUB,SUB1,SUB2,0))
"RTN","PXRMDLG4",9,0)
 .S DTXT(TXTCNT)=$$STRREP^PXRMUTIL($G(DTXT(TXTCNT)),"<br>","\\")
"RTN","PXRMDLG4",10,0)
 I TXTCNT>0 D
"RTN","PXRMDLG4",11,0)
 .N OUTPUT,NLINES
"RTN","PXRMDLG4",12,0)
 .S NLINES=0 D FORMAT^PXRMTEXT(1,WIDTH,TXTCNT,.DTXT,.NLINES,.OUTPUT)
"RTN","PXRMDLG4",13,0)
 .I NLINES>0 K DTXT M DTXT=OUTPUT
"RTN","PXRMDLG4",14,0)
 S CNT=0
"RTN","PXRMDLG4",15,0)
 F  S CNT=$O(DTXT(CNT)) Q:CNT=""  D
"RTN","PXRMDLG4",16,0)
 .S TEXT=$G(DTXT(CNT)),VALMCNT=VALMCNT+1
"RTN","PXRMDLG4",17,0)
 .S ^TMP(NODE,$J,VALMCNT,0)=SEQ_TEXT,SEQ=$J("",$L(SEQ))
"RTN","PXRMDLG4",18,0)
 Q
"RTN","PXRMDLG4",19,0)
 ;
"RTN","PXRMDLG4",20,0)
ADD ;PXRM DIALOG ADD ELEMENT validation
"RTN","PXRMDLG4",21,0)
 N ANS,DTOUT,DUOUT,LIT,LOCK,Y,PIEN,ERR,IEN,NATIONAL,SEQ
"RTN","PXRMDLG4",22,0)
 W IORESET
"RTN","PXRMDLG4",23,0)
 S VALMBCK="R",NATIONAL=0
"RTN","PXRMDLG4",24,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" S NATIONAL=1
"RTN","PXRMDLG4",25,0)
 S LOCK=$P($G(^PXRMD(801.41,PXRMDIEN,100)),U,4)
"RTN","PXRMDLG4",26,0)
 I NATIONAL,'($G(PXRMINST)=1)&(DUZ(0)="@"),$G(LOCK)'=1 D  Q
"RTN","PXRMDLG4",27,0)
 .W !,"Elements may not be added to national reminder dialogs" H 2
"RTN","PXRMDLG4",28,0)
 ;
"RTN","PXRMDLG4",29,0)
 F  D SEQ(.SEQ,.PIEN) Q:$D(DUOUT)!$D(DTOUT)  Q:SEQ
"RTN","PXRMDLG4",30,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDLG4",31,0)
 ;
"RTN","PXRMDLG4",32,0)
 ;Check if sequence number is OK
"RTN","PXRMDLG4",33,0)
 I $G(PIEN)="" Q
"RTN","PXRMDLG4",34,0)
 S ANS="N" D ASK^PXRMDLG5(.ANS,PIEN) Q:$D(DUOUT)!$D(DTOUT)!($G(ANS)="N")
"RTN","PXRMDLG4",35,0)
 ;
"RTN","PXRMDLG4",36,0)
 ;Select a dialog element to add to parent dialog (PIEN)
"RTN","PXRMDLG4",37,0)
 ;PIEN may be dialog or a group within the dialog
"RTN","PXRMDLG4",38,0)
 D ESEL^PXRMDEDT(PIEN,SEQ)
"RTN","PXRMDLG4",39,0)
 ;Rebuild workfile
"RTN","PXRMDLG4",40,0)
 D BUILD^PXRMDLG(PXRMMODE)
"RTN","PXRMDLG4",41,0)
 Q
"RTN","PXRMDLG4",42,0)
 ;
"RTN","PXRMDLG4",43,0)
FADD(DIEN,FTAB,VIEW,NLINE) ;Additional Findings
"RTN","PXRMDLG4",44,0)
 N FIND,FSUB,FTYP,FNAME,FNUM
"RTN","PXRMDLG4",45,0)
 S FSUB=0
"RTN","PXRMDLG4",46,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMDLG4",47,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U) Q:FIND=""
"RTN","PXRMDLG4",48,0)
 .S FNAME="" D FDESC(FIND) Q:FNAME=""
"RTN","PXRMDLG4",49,0)
 .;
"RTN","PXRMDLG4",50,0)
 .;Save additional finding name
"RTN","PXRMDLG4",51,0)
 .S FOUND=1 D FSAVE(2,FNAME,FTYP,FTAB,FIND)
"RTN","PXRMDLG4",52,0)
 .I VIEW=2,FIND["PXD(811.2," D TAXDISP^PXRMDTAX(FIND,"",DIEN,.NLINE,NODE,1,0)
"RTN","PXRMDLG4",53,0)
 Q
"RTN","PXRMDLG4",54,0)
 ;
"RTN","PXRMDLG4",55,0)
DETAIL(DIEN,LEV,VIEW,NODE) ;;Build listman global for all components
"RTN","PXRMDLG4",56,0)
 N DDATA,DDLG,DEND,DCIEN,DNAM,DSEQ,DSTRT,IND,JND,DSUB
"RTN","PXRMDLG4",57,0)
 S DSEQ=0
"RTN","PXRMDLG4",58,0)
 ;
"RTN","PXRMDLG4",59,0)
 ;Get each sequence number
"RTN","PXRMDLG4",60,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLG4",61,0)
 .;Determine subscript
"RTN","PXRMDLG4",62,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLG4",63,0)
 .;Get ien of prompt/component
"RTN","PXRMDLG4",64,0)
 .S DCIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'DCIEN
"RTN","PXRMDLG4",65,0)
 .I "PF"[$P($G(^PXRMD(801.41,DCIEN,0)),U,4) D  Q
"RTN","PXRMDLG4",66,0)
 ..S ^TMP("PXRMDLG4",$J,"IEN",NSEL)=DIEN_U_DSEQ
"RTN","PXRMDLG4",67,0)
 ..S ^TMP("PXRMDLG4",$J,"SEQ",LEV_DSEQ)=DCIEN
"RTN","PXRMDLG4",68,0)
 .;Save line in workfile
"RTN","PXRMDLG4",69,0)
 .D DLINE(DCIEN,LEV,DSEQ,NODE)
"RTN","PXRMDLG4",70,0)
 .;Build pointers back to parent
"RTN","PXRMDLG4",71,0)
 .I VIEW'=4 D
"RTN","PXRMDLG4",72,0)
 ..S ^TMP("PXRMDLG4",$J,"IEN",NSEL)=DIEN_U_DSEQ
"RTN","PXRMDLG4",73,0)
 ..S ^TMP("PXRMDLG4",$J,"SEQ",LEV_DSEQ)=DCIEN
"RTN","PXRMDLG4",74,0)
 .;Process any sub-components
"RTN","PXRMDLG4",75,0)
 .I VIEW<5 D DETAIL(DCIEN,LEV_DSEQ_".",VIEW,NODE)
"RTN","PXRMDLG4",76,0)
 Q
"RTN","PXRMDLG4",77,0)
 ;
"RTN","PXRMDLG4",78,0)
DLINE(DIEN,LEV,DSEQ,NODE) ;Save individual component details
"RTN","PXRMDLG4",79,0)
 N CNT,DBOX,DCAP,DDIS,DMULT,DSUPP,DSHOW,DTYP,DTXT
"RTN","PXRMDLG4",80,0)
 N IC,RESNM,RESULT,RIEN,RNAME,RCNT
"RTN","PXRMDLG4",81,0)
 ;Dialog name
"RTN","PXRMDLG4",82,0)
 S DDATA=$G(^PXRMD(801.41,DIEN,0)),DNAM=$P(DDATA,U) Q:DNAM=""
"RTN","PXRMDLG4",83,0)
 ;Check if standard PXRM prompt
"RTN","PXRMDLG4",84,0)
 I $$PXRM^PXRMEXID(DNAM) Q
"RTN","PXRMDLG4",85,0)
 ;Dialog Type and Disabled
"RTN","PXRMDLG4",86,0)
 S DDIS=$P(DDATA,U,3),DTYP=$P(DDATA,U,4)
"RTN","PXRMDLG4",87,0)
 S DTYP=$S(DTYP="G":"Group",1:"Element"),DNAM=DTYP_": "_DNAM
"RTN","PXRMDLG4",88,0)
 I VIEW=5 S DNAM=DNAM
"RTN","PXRMDLG4",89,0)
 ;Resolution type and name
"RTN","PXRMDLG4",90,0)
 S RNAME="",RIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,3)
"RTN","PXRMDLG4",91,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U)
"RTN","PXRMDLG4",92,0)
 ;
"RTN","PXRMDLG4",93,0)
 ;Group fields
"RTN","PXRMDLG4",94,0)
 I DTYP="Group" D
"RTN","PXRMDLG4",95,0)
 .S DGRP=1,DTXT=$P(DDATA,U,5),DCAP=" [group caption]"
"RTN","PXRMDLG4",96,0)
 .I DTXT="" S DCAP=""
"RTN","PXRMDLG4",97,0)
 .I DTXT]"" S DCAP=DTXT_" "_DCAP
"RTN","PXRMDLG4",98,0)
 .S DBOX=$S($P(DDATA,U,6)="Y":"BOX",1:"NO BOX")
"RTN","PXRMDLG4",99,0)
 .S DSUPP=$S($P(DDATA,U,11):"SUPPRESS",1:"NO SUPPRESS")
"RTN","PXRMDLG4",100,0)
 .S DSHOW=$S($P(DDATA,U,10):"HIDE",1:"SHOW")
"RTN","PXRMDLG4",101,0)
 .S DMULT=$P(DDATA,U,9)
"RTN","PXRMDLG4",102,0)
 .S DMULT=$S(DMULT=1:"ONE ONLY",DMULT=2:"ONE OR MORE",DMULT=3:"NONE OR ONE",DMULT=4:"ALL REQUIRED",1:"NO SELECTION")
"RTN","PXRMDLG4",103,0)
 ;
"RTN","PXRMDLG4",104,0)
 N DPTX,DTXT,EXIST,ITEM,TEMP,SEP,SEQ,TAB,ALTLEN
"RTN","PXRMDLG4",105,0)
 S NSEL=NSEL+1,NLINE=NLINE+1,ITEM=NSEL,SEP=$E(LEV,$L(LEV)),SEQ=LEV_DSEQ
"RTN","PXRMDLG4",106,0)
 ;Suppress Item numbers for INQ options
"RTN","PXRMDLG4",107,0)
 I VIEW=4 S ITEM=""
"RTN","PXRMDLG4",108,0)
 ;Otherwise display Item, Sequence and Dialog Name
"RTN","PXRMDLG4",109,0)
 S TEMP=$J(ITEM,4)_$J("",3)_SEQ,TAB=$L(TEMP)+2
"RTN","PXRMDLG4",110,0)
 S CNT=0 F IC=1:1 Q:'$P(SEQ,".",IC)  S:$P(SEQ,".",IC)<10 CNT=CNT+1
"RTN","PXRMDLG4",111,0)
 S TAB=TAB+CNT
"RTN","PXRMDLG4",112,0)
 ;
"RTN","PXRMDLG4",113,0)
 S ALTLEN=$L(TEMP)
"RTN","PXRMDLG4",114,0)
 ;Display dialog name
"RTN","PXRMDLG4",115,0)
 S TEMP=TEMP_$J("",2+CNT)_DNAM
"RTN","PXRMDLG4",116,0)
 ;Add disabled if present
"RTN","PXRMDLG4",117,0)
 I +DDIS>0 S TEMP=TEMP_" (Disabled)"
"RTN","PXRMDLG4",118,0)
 ;
"RTN","PXRMDLG4",119,0)
 S ^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",120,0)
 ;check for alternate dialog element/group
"RTN","PXRMDLG4",121,0)
 I VIEW<2!(VIEW>4) D
"RTN","PXRMDLG4",122,0)
 .I $D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",123,0)
 ;
"RTN","PXRMDLG4",124,0)
 ;Dialog Text or P/N Text
"RTN","PXRMDLG4",125,0)
 I (VIEW=2)!(VIEW=3)!(VIEW=4) D
"RTN","PXRMDLG4",126,0)
 .N DGBEG,DGSUB,TSUB
"RTN","PXRMDLG4",127,0)
 .S DGSUB=0,TSUB=$$TSUB^PXRMDLG1(DIEN,VIEW)
"RTN","PXRMDLG4",128,0)
 .I VIEW=4 S DGBEG=$J("",TAB)_"Text: "
"RTN","PXRMDLG4",129,0)
 .I VIEW'=4 S DGBEG=$J("",5+$L(SEQ)+CNT+$L(DTYP))_"Text: "
"RTN","PXRMDLG4",130,0)
 .D WP(DIEN,TSUB,65,.DGBEG,.NLINE)
"RTN","PXRMDLG4",131,0)
 .I DTYP="Group" D
"RTN","PXRMDLG4",132,0)
 ..S TEMP=DGBEG_"["_DBOX_", "_DSUPP_", "_DSHOW_", "_DMULT_"]"
"RTN","PXRMDLG4",133,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",134,0)
 ;
"RTN","PXRMDLG4",135,0)
 ;Set up selection index
"RTN","PXRMDLG4",136,0)
 S ^TMP(NODE,$J,"IDX",NSEL,DIEN)=""
"RTN","PXRMDLG4",137,0)
 ;Insert finding items
"RTN","PXRMDLG4",138,0)
 I (VIEW=1)!(VIEW=4),("Element;Group"[DTYP) D
"RTN","PXRMDLG4",139,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTYP,TEMP
"RTN","PXRMDLG4",140,0)
 .;Findings
"RTN","PXRMDLG4",141,0)
 .S FNAME="",FOUND=0
"RTN","PXRMDLG4",142,0)
 .D FDESC($P($G(^PXRMD(801.41,DIEN,1)),U,5))
"RTN","PXRMDLG4",143,0)
 .I FNAME'="" S FOUND=1 D FSAVE(1,FNAME,FTYP,TAB)
"RTN","PXRMDLG4",144,0)
 .;Resolution
"RTN","PXRMDLG4",145,0)
 .I RNAME]"" D
"RTN","PXRMDLG4",146,0)
 ..S TEMP=$J("",TAB)_"Resolution: "_RNAME
"RTN","PXRMDLG4",147,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",148,0)
 .;Result Group
"RTN","PXRMDLG4",149,0)
 .I VIEW=4 D
"RTN","PXRMDLG4",150,0)
 ..S RCNT=0 F  S RCNT=$O(^PXRMD(801.41,DIEN,51,RCNT)) Q:RCNT'>0  D
"RTN","PXRMDLG4",151,0)
 ...S RESULT=$P($G(^PXRMD(801.41,DIEN,51,RCNT,0)),U)
"RTN","PXRMDLG4",152,0)
 ...S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U) Q:RESNM=""
"RTN","PXRMDLG4",153,0)
 ...S TEMP=$J("",TAB)_"Result Group: "_RESNM
"RTN","PXRMDLG4",154,0)
 ...S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",155,0)
 .;Additional findings
"RTN","PXRMDLG4",156,0)
 .D FADD(DIEN,TAB,VIEW,.NLINE)
"RTN","PXRMDLG4",157,0)
 ;Get additional prompts
"RTN","PXRMDLG4",158,0)
 I VIEW=2 D
"RTN","PXRMDLG4",159,0)
 .S FIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMDLG4",160,0)
 .I $G(FIEN)["PXD(811.2," D TAXDISP^PXRMDTAX(FIEN,DSEQ,DIEN,.NLINE,NODE,0,0)
"RTN","PXRMDLG4",161,0)
 .D FADD(DIEN,TAB,VIEW,.NLINE)
"RTN","PXRMDLG4",162,0)
 I VIEW,VIEW<5,"Element;Group"[DTYP D PROMPT(DIEN,TAB,"Prompts: ",VIEW)
"RTN","PXRMDLG4",163,0)
 ;
"RTN","PXRMDLG4",164,0)
 I VIEW=4,$D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",165,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG4",166,0)
 S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDLG4",167,0)
 Q
"RTN","PXRMDLG4",168,0)
 ;
"RTN","PXRMDLG4",169,0)
FDESC(FIEN) ;Finding description
"RTN","PXRMDLG4",170,0)
 N FGLOB,FITEM,FNUM
"RTN","PXRMDLG4",171,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG4",172,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG4",173,0)
 S FNUM=" ["_FITEM_"]"
"RTN","PXRMDLG4",174,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG4",175,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",176,0)
 .S FNAME=$P($G(@FGLOB),U,3)_FNUM
"RTN","PXRMDLG4",177,0)
 I FGLOB["WV" D  Q
"RTN","PXRMDLG4",178,0)
 .S FTYP="WH NOTIFICATION PURPOSE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",179,0)
 .S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",180,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG4",181,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",182,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",183,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG4",184,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",185,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",186,0)
 ;Short name for finding type
"RTN","PXRMDLG4",187,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG4",188,0)
 ;Long name
"RTN","PXRMDLG4",189,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG4",190,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",191,0)
 S FNAME=$P($G(@FGLOB),U,1)_FNUM
"RTN","PXRMDLG4",192,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",193,0)
 I FNAME="" S FNAME=FITEM
"RTN","PXRMDLG4",194,0)
 Q
"RTN","PXRMDLG4",195,0)
 ;
"RTN","PXRMDLG4",196,0)
FSAVE(DSUB,FNAME,FTYP,FTAB,FIEN) ;Save finding details
"RTN","PXRMDLG4",197,0)
 N IND,FMTSTR,NL,OUTPUT,TEMP,TEXT
"RTN","PXRMDLG4",198,0)
 I DSUB>1 D
"RTN","PXRMDLG4",199,0)
 . S FMTSTR=FTAB_"R^13L1^"_(65-FTAB)_"L"
"RTN","PXRMDLG4",200,0)
 . S TEXT=U_"Add. Finding:"
"RTN","PXRMDLG4",201,0)
 I DSUB=1 D
"RTN","PXRMDLG4",202,0)
 . S FMTSTR=FTAB_"R^8L1^"_(70-FTAB)_"L"
"RTN","PXRMDLG4",203,0)
 . S TEXT=U_"Finding:"
"RTN","PXRMDLG4",204,0)
 S TEXT=TEXT_U_FNAME_" ("_FTYP_")"
"RTN","PXRMDLG4",205,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXRMDLG4",206,0)
 F IND=1:1:NL D
"RTN","PXRMDLG4",207,0)
 . S NLINE=NLINE+1
"RTN","PXRMDLG4",208,0)
 . S ^TMP(NODE,$J,NLINE,0)=OUTPUT(IND)
"RTN","PXRMDLG4",209,0)
 Q
"RTN","PXRMDLG4",210,0)
 ;
"RTN","PXRMDLG4",211,0)
PROMPT(IEN,TAB,TEXT,VIEW) ;additional prompts in the dialog file
"RTN","PXRMDLG4",212,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG4",213,0)
 S SEQ=0
"RTN","PXRMDLG4",214,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG4",215,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG4",216,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB 
"RTN","PXRMDLG4",217,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG4",218,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG4",219,0)
 .I "PF"'[DTYP Q
"RTN","PXRMDLG4",220,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG4",221,0)
 .I DTYP="P",(VIEW=2)!(VIEW=3) D
"RTN","PXRMDLG4",222,0)
 ..;Override prompt caption
"RTN","PXRMDLG4",223,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG4",224,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG4",225,0)
 ..S DNAME=DTITLE
"RTN","PXRMDLG4",226,0)
 .S DNAME=$J("",TAB)_TEXT_DNAME
"RTN","PXRMDLG4",227,0)
 .S:+DDIS>0 DNAME=DNAME_" (Disabled)"
"RTN","PXRMDLG4",228,0)
 .S NLINE=NLINE+1
"RTN","PXRMDLG4",229,0)
 .S ^TMP(NODE,$J,NLINE,0)=DNAME
"RTN","PXRMDLG4",230,0)
 .S TEXT=$J("",$L(TEXT))
"RTN","PXRMDLG4",231,0)
 Q
"RTN","PXRMDLG4",232,0)
 ;
"RTN","PXRMDLG4",233,0)
SEQ(SEQ,PIEN) ;Select sequence number to add
"RTN","PXRMDLG4",234,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLG4",235,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLG4",236,0)
 S SEQ=0
"RTN","PXRMDLG4",237,0)
 S DIR(0)="FA0;1;30"
"RTN","PXRMDLG4",238,0)
 S DIR("A")="Enter a new SEQUENCE NUMBER: "
"RTN","PXRMDLG4",239,0)
 S DIR("?")="Enter new sequence number. For detailed help type ??"
"RTN","PXRMDLG4",240,0)
 S DIR("??")=U_"D HELP^PXRMDLG4(1)"
"RTN","PXRMDLG4",241,0)
 D ^DIR K DIR
"RTN","PXRMDLG4",242,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG4",243,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG4",244,0)
 ;
"RTN","PXRMDLG4",245,0)
 ;Check that sequence number is new 
"RTN","PXRMDLG4",246,0)
 I $D(^TMP("PXRMDLG4",$J,"SEQ",X)) D  Q
"RTN","PXRMDLG4",247,0)
 .W !,"Sequence number "_X_" already in use."
"RTN","PXRMDLG4",248,0)
 ;
"RTN","PXRMDLG4",249,0)
 ;Check that the parent is a group or reminder dialog
"RTN","PXRMDLG4",250,0)
 I X["." D  Q:X=""
"RTN","PXRMDLG4",251,0)
 .N CLASS,SUB
"RTN","PXRMDLG4",252,0)
 .;Sequence number of parent
"RTN","PXRMDLG4",253,0)
 .S SUB=$P(X,".",1,$L(X,".")-1)
"RTN","PXRMDLG4",254,0)
 .I $G(SUB)=""!($G(SUB)=0) W !,"Invalid sequence number. A sequence number cannot be less then 1" H 2 Q
"RTN","PXRMDLG4",255,0)
 .;Get IEN of parent dialog or group
"RTN","PXRMDLG4",256,0)
 .S PIEN=$G(^TMP("PXRMDLG4",$J,"SEQ",SUB))
"RTN","PXRMDLG4",257,0)
 .;Validate sequence number
"RTN","PXRMDLG4",258,0)
 .I 'PIEN W !,"Sequence number is not part of an existing group." S X="" Q
"RTN","PXRMDLG4",259,0)
 .;Validate that the parent is a group or reminder dialog
"RTN","PXRMDLG4",260,0)
 .I "RG"'[$P($G(^PXRMD(801.41,PIEN,0)),U,4) D  S X="" Q
"RTN","PXRMDLG4",261,0)
 ..W !,"New sequences can only be added to groups or reminder dialogs"
"RTN","PXRMDLG4",262,0)
 .;Disallow adding elements to national dialogs or groups
"RTN","PXRMDLG4",263,0)
 .I $P($G(^PXMRD(801.41,PIEN,100)),U)="N" D  Q:X=""
"RTN","PXRMDLG4",264,0)
 ..Q:(DUZ(0)="@")&($G(PXRMINST)=1)
"RTN","PXRMDLG4",265,0)
 ..W !,"Elements cannot be added to a national group" S X=""
"RTN","PXRMDLG4",266,0)
 ;
"RTN","PXRMDLG4",267,0)
 ;If adding to top level parent ien is reminder dialog
"RTN","PXRMDLG4",268,0)
 I X?.N S PIEN=PXRMDIEN
"RTN","PXRMDLG4",269,0)
 ;
"RTN","PXRMDLG4",270,0)
 S SEQ=$P(X,".",$L(X,"."))
"RTN","PXRMDLG4",271,0)
 Q
"RTN","PXRMDLG4",272,0)
 ;
"RTN","PXRMDLG4",273,0)
 ;
"RTN","PXRMDLG4",274,0)
HELP(CALL) ;General help text routine.
"RTN","PXRMDLG4",275,0)
 N HTEXT
"RTN","PXRMDLG4",276,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLG4",277,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLG4",278,0)
 ;
"RTN","PXRMDLG4",279,0)
 I CALL=1 D
"RTN","PXRMDLG4",280,0)
 .S HTEXT(1)="Sequence numbers can be added at any level. Specify the full"
"RTN","PXRMDLG4",281,0)
 .S HTEXT(2)="number for the level required (e.g. 15.10.20)."
"RTN","PXRMDLG4",282,0)
 ;
"RTN","PXRMDLG4",283,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMDLG4",284,0)
 Q
"RTN","PXRMDLG4",285,0)
 ;
"RTN","PXRMDLG6")
0^13^B20894000
"RTN","PXRMDLG6",1,0)
PXRMDLG6 ; SLC/AGP - Reminder Dialog Edit/Inquiry ;07/24/2013
"RTN","PXRMDLG6",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLG6",3,0)
 ;
"RTN","PXRMDLG6",4,0)
ISACTDLG(DIEN) ;
"RTN","PXRMDLG6",5,0)
 ;this returns a 1 if the dialog can be used in a TIU Template
"RTN","PXRMDLG6",6,0)
 N NODE
"RTN","PXRMDLG6",7,0)
 S NODE=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLG6",8,0)
 I $P(NODE,U,4)'="R" Q 0
"RTN","PXRMDLG6",9,0)
 I +$P(NODE,U,3)>0 Q 0
"RTN","PXRMDLG6",10,0)
 Q 1
"RTN","PXRMDLG6",11,0)
 ;
"RTN","PXRMDLG6",12,0)
DISCKINP(DIEN,X,ORG) ;
"RTN","PXRMDLG6",13,0)
 ;sub script 1 = name field
"RTN","PXRMDLG6",14,0)
 ;sub script 2 = disable field
"RTN","PXRMDLG6",15,0)
 ;
"RTN","PXRMDLG6",16,0)
 I X(1)="" Q 1
"RTN","PXRMDLG6",17,0)
 I $G(PXRMINST)=1 Q 1
"RTN","PXRMDLG6",18,0)
 I X(2)=1!(X(2)=2) Q 1
"RTN","PXRMDLG6",19,0)
 ;
"RTN","PXRMDLG6",20,0)
 N CANACT,CNT,CNT1,MSG,NAME,RESULT,TEXT,TYPE,STDFILES
"RTN","PXRMDLG6",21,0)
 D DIALDSAR^PXRMFRPT(.STDFILES) I '$D(STDFILES) Q 1
"RTN","PXRMDLG6",22,0)
 S TYPE=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLG6",23,0)
 I "RFPT"[TYPE Q 1
"RTN","PXRMDLG6",24,0)
 S TYPE=$S(TYPE="E":"Element",TYPE="G":"Group",TYPE="S":"Result Group")
"RTN","PXRMDLG6",25,0)
 S RESULT=$$DISABCHK(DIEN,.STDFILES,.MSG)
"RTN","PXRMDLG6",26,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLG6",27,0)
 S CNT1=1
"RTN","PXRMDLG6",28,0)
 I RESULT=0 D 
"RTN","PXRMDLG6",29,0)
 .S TEXT(CNT1)="Disabled value cannot be changed."
"RTN","PXRMDLG6",30,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,3)=ORG(2)
"RTN","PXRMDLG6",31,0)
 I $D(MSG)>0 D
"RTN","PXRMDLG6",32,0)
 .S CNT=0 F  S CNT=$O(MSG(CNT)) Q:CNT'>0  S CNT1=CNT1+1,TEXT(CNT1)=MSG(CNT)
"RTN","PXRMDLG6",33,0)
 .D EN^DDIOL(.TEXT)
"RTN","PXRMDLG6",34,0)
 Q RESULT
"RTN","PXRMDLG6",35,0)
 ;
"RTN","PXRMDLG6",36,0)
DISABCHK(DIEN,STDFILES,MSG) ;
"RTN","PXRMDLG6",37,0)
 ;
"RTN","PXRMDLG6",38,0)
 N CNT,FILE,FILESTAT,FIND,NODE,IEN,RESULT,STATUS,VPTR
"RTN","PXRMDLG6",39,0)
 S RESULT=1,CNT=0
"RTN","PXRMDLG6",40,0)
 S NODE=$G(^PXRMD(801.41,DIEN,1))
"RTN","PXRMDLG6",41,0)
 ;;Check for MH Test only in Result Groups
"RTN","PXRMDLG6",42,0)
 I $D(STDFILES("^YTT(601.71,"))>0 D
"RTN","PXRMDLG6",43,0)
 .S FILESTAT=$P(STDFILES("YTT(601.71,"),U,2)
"RTN","PXRMDLG6",44,0)
 .S IEN=$P($G(^PXRMD(801.41,DIEN,50)),U)
"RTN","PXRMDLG6",45,0)
 .S STATUS=$$ENSTAT(STDFILES("^YTT(601.71,"),IEN)
"RTN","PXRMDLG6",46,0)
 .I STATUS=0 D DSMSG(.MSG,.CNT,"MH Test",IEN,"^YTT(601.71)") I FILESTAT=6 S RESULT=0
"RTN","PXRMDLG6",47,0)
 ;
"RTN","PXRMDLG6",48,0)
 ;Check for Orderable Items
"RTN","PXRMDLG6",49,0)
 I $D(STDFILES("^ORD(101.43,"))>0 D
"RTN","PXRMDLG6",50,0)
 .S FILESTAT=$P(STDFILES("^ORD(101.43,"),U,2)
"RTN","PXRMDLG6",51,0)
 .S IEN=$P(NODE,U,7)
"RTN","PXRMDLG6",52,0)
 .S STATUS=$$ENSTAT(STDFILES("^ORD(101.43,"),IEN)
"RTN","PXRMDLG6",53,0)
 .I STATUS=0 D DSMSG(.MSG,.CNT,"Orderable Item",IEN,"^ORD(101.43)") I FILESTAT=6 S RESULT=0
"RTN","PXRMDLG6",54,0)
 ;
"RTN","PXRMDLG6",55,0)
 ;Check for Finding Items
"RTN","PXRMDLG6",56,0)
 S FIND=$P(NODE,U,5)
"RTN","PXRMDLG6",57,0)
 S IEN=$P(FIND,";"),FILE=$P(FIND,";",2)
"RTN","PXRMDLG6",58,0)
 I $D(STDFILES(U_FILE))>0 D
"RTN","PXRMDLG6",59,0)
 .S FILESTAT=$P(STDFILES(U_FILE),U,2)
"RTN","PXRMDLG6",60,0)
 .S STATUS=$$ENSTAT(STDFILES(U_FILE),IEN)
"RTN","PXRMDLG6",61,0)
 .I STATUS=0 D DSMSG(.MSG,.CNT,"Finding Item",IEN,$$SETGBL^PXRMDLG5(FILE)) I FILESTAT=6 S RESULT=0
"RTN","PXRMDLG6",62,0)
 ;
"RTN","PXRMDLG6",63,0)
 ;Check for additional finding items
"RTN","PXRMDLG6",64,0)
 S FIND=0 F  S FIND=$O(^PXRMD(801.41,DIEN,3,"B",FIND)) Q:FIND=""  D
"RTN","PXRMDLG6",65,0)
 .S IEN=$P(FIND,";"),FILE=$P(FIND,";",2)
"RTN","PXRMDLG6",66,0)
 .I $D(STDFILES(U_FILE))>0 D
"RTN","PXRMDLG6",67,0)
 ..S FILESTAT=$P(STDFILES(U_FILE),U,2)
"RTN","PXRMDLG6",68,0)
 ..S STATUS=$$ENSTAT(STDFILES(U_FILE),IEN)
"RTN","PXRMDLG6",69,0)
 ..I STATUS=0 D DSMSG(.MSG,.CNT,"Additional Finding Item",IEN,$$SETGBL^PXRMDLG5(FILE)) I FILESTAT=6 S RESULT=0
"RTN","PXRMDLG6",70,0)
 Q RESULT
"RTN","PXRMDLG6",71,0)
 ;
"RTN","PXRMDLG6",72,0)
DSMSG(MSG,CNT,FIELD,IEN,GBL) ;
"RTN","PXRMDLG6",73,0)
 N ENTRY
"RTN","PXRMDLG6",74,0)
 S CNT=CNT+1
"RTN","PXRMDLG6",75,0)
 S ENTRY=$P($G(@GBL@(IEN,0)),U)
"RTN","PXRMDLG6",76,0)
 S MSG(CNT)="   "_FIELD_" entry "_ENTRY_" is inactive."
"RTN","PXRMDLG6",77,0)
 Q
"RTN","PXRMDLG6",78,0)
 ;
"RTN","PXRMDLG6",79,0)
ENSTAT(FILENUM,IEN) ;
"RTN","PXRMDLG6",80,0)
 ;Return values 0 if finding is inactive, return 1 if finding is active
"RTN","PXRMDLG6",81,0)
 N FIENS,STATUS
"RTN","PXRMDLG6",82,0)
 S FIENS=IEN_","
"RTN","PXRMDLG6",83,0)
 ;DBIA #4631
"RTN","PXRMDLG6",84,0)
 S STATUS=$P($$GETSTAT^XTID(FILENUM,.01,FIENS),U,1)
"RTN","PXRMDLG6",85,0)
 Q STATUS
"RTN","PXRMDLG6",86,0)
 ;
"RTN","PXRMDLG6",87,0)
FILESCR(IEN,FILENUM,DA) ;
"RTN","PXRMDLG6",88,0)
 N DTYPE,LOCK,RESULT,STATUS
"RTN","PXRMDLG6",89,0)
 I $G(PXRMINST)=1 Q 1
"RTN","PXRMDLG6",90,0)
 S RESULT=1
"RTN","PXRMDLG6",91,0)
 ;I FILENUM=811.2,$G(DA)>0,$P($G(^PXRMD(801.41,DA,0)),U,4)="G" W !,"Cannot add a taxonomy as finding item to a group." Q 0
"RTN","PXRMDLG6",92,0)
 ;DBIA #4640
"RTN","PXRMDLG6",93,0)
 S STATUS=+$$GETSTAT^HDISVF01(FILENUM)
"RTN","PXRMDLG6",94,0)
 S LOCK=$S(STATUS=6:1,STATUS=7:1,1:0)
"RTN","PXRMDLG6",95,0)
 I LOCK=1 S RESULT=$P($$GETSTAT^XTID(FILENUM,.01,IEN_","),U,1)
"RTN","PXRMDLG6",96,0)
 I +RESULT=0 Q +RESULT
"RTN","PXRMDLG6",97,0)
 I FILENUM=9999999.64,$P($G(^AUTTHF(IEN,0)),U,10)="C" S RESULT=0
"RTN","PXRMDLG6",98,0)
 I FILENUM=601.71,$$MH^PXRMDLG5(IEN)=0 S RESULT=0
"RTN","PXRMDLG6",99,0)
 ;if a taxonomy does not have codes marked for use in a dialog then do
"RTN","PXRMDLG6",100,0)
 ;not allow a selection
"RTN","PXRMDLG6",101,0)
 I FILENUM=811.2 D
"RTN","PXRMDLG6",102,0)
 .I '$D(^PXD(811.2,IEN,20,"AUID")) S RESULT=-1
"RTN","PXRMDLG6",103,0)
 .I $P($G(^PXD(811.2,IEN,0)),U,6)=1 S RESULT=0
"RTN","PXRMDLG6",104,0)
 Q +RESULT
"RTN","PXRMDLG6",105,0)
 ;
"RTN","PXRMDLG6",106,0)
OKTODEL(DIEN) ;
"RTN","PXRMDLG6",107,0)
 ;this checks to see if an entry is okay to delete. the entry
"RTN","PXRMDLG6",108,0)
 ;cannot be used anywhere else.
"RTN","PXRMDLG6",109,0)
 ;"AD" for component multiple
"RTN","PXRMDLG6",110,0)
 ;"R" for replacement element/groups
"RTN","PXRMDLG6",111,0)
 ;"RG" for result groups
"RTN","PXRMDLG6",112,0)
 ;
"RTN","PXRMDLG6",113,0)
 I $G(PXRMEXCH)=1 Q 1
"RTN","PXRMDLG6",114,0)
 I $D(^PXRMD(801.41,"AD",DIEN)) Q 0
"RTN","PXRMDLG6",115,0)
 I $D(^PXRMD(801.41,"R",DIEN)) Q 0
"RTN","PXRMDLG6",116,0)
 I $D(^PXRMD(801.41,"RG",DIEN)) Q 0
"RTN","PXRMDLG6",117,0)
 Q 1
"RTN","PXRMDLG6",118,0)
 ;
"RTN","PXRMDLG6",119,0)
PIPECHK(DIEN) ;
"RTN","PXRMDLG6",120,0)
 N AMOUNT,CNT,FLDNAM,NODE,NUM,TYPE
"RTN","PXRMDLG6",121,0)
 S TYPE=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDLG6",122,0)
 F NODE=25,35 D
"RTN","PXRMDLG6",123,0)
 .S CNT=0,NUM=0
"RTN","PXRMDLG6",124,0)
 .F  S NUM=$O(^PXRMD(801.41,DIEN,NODE,NUM)) Q:NUM'>0  D
"RTN","PXRMDLG6",125,0)
 ..S AMOUNT=$L(^PXRMD(801.41,DIEN,NODE,NUM,0),"|") I AMOUNT=1 Q
"RTN","PXRMDLG6",126,0)
 ..S CNT=CNT+(AMOUNT-1)
"RTN","PXRMDLG6",127,0)
 ..I CNT=0 Q
"RTN","PXRMDLG6",128,0)
 ..I CNT#2=0 Q
"RTN","PXRMDLG6",129,0)
 ..I TYPE="E" S FLDNAM=$S(NODE=25:"Dialog/Progress Note  Text",1:"Alternate Progress Note Text")
"RTN","PXRMDLG6",130,0)
 ..I TYPE="G" S FLDNAM=$S(NODE=25:"Group Header Dialog Text",1:"Group Header Alternate Progress Note Text")
"RTN","PXRMDLG6",131,0)
 ..D TIUOBJW^PXRMFNFT(FLDNAM,CNT)
"RTN","PXRMDLG6",132,0)
 Q
"RTN","PXRMDLG6",133,0)
 ;
"RTN","PXRMDLL")
0^10^B137187250
"RTN","PXRMDLL",1,0)
PXRMDLL ;SLC/PJH - REMINDER DIALOG LOADER ;05/12/2014
"RTN","PXRMDLL",2,0)
 ;;2.0;CLINICAL REMINDERS;**10,6,12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLL",3,0)
 ;
"RTN","PXRMDLL",4,0)
OK(DIEN) ;Check if mental health test is for GUI
"RTN","PXRMDLL",5,0)
 I 'DIEN Q 0
"RTN","PXRMDLL",6,0)
 Q $$MH^PXRMDLG5(DIEN)
"RTN","PXRMDLL",7,0)
 ;
"RTN","PXRMDLL",8,0)
TXT ;Format text
"RTN","PXRMDLL",9,0)
 N NULL
"RTN","PXRMDLL",10,0)
 S TEXT=DTXT(SUB),NULL=0
"RTN","PXRMDLL",11,0)
 I ($E(TEXT)=" ")!(TEXT="") S NULL=1
"RTN","PXRMDLL",12,0)
 I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLL",13,0)
 S TEXT=$$STRREP^PXRMUTIL(TEXT,"\\","<br>")
"RTN","PXRMDLL",14,0)
 S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLL",15,0)
 Q
"RTN","PXRMDLL",16,0)
 ;
"RTN","PXRMDLL",17,0)
EXP(TIEN,DITEM,DSUB,DEXC,DMHEX,DRESL,DTXT) ;Expand taxonomy codes
"RTN","PXRMDLL",18,0)
 N ACNT,AHIS,ATYP,ARRAY,BOTH,CODES,CNT,DDIS,DHIST,DPCE,DSUPP,DTAX,SUB,TAXTEXT,TEXT,TSEL
"RTN","PXRMDLL",19,0)
 S TSEL=$P($G(^PXRMD(801.41,DITEM,"TAX")),U)
"RTN","PXRMDLL",20,0)
 S DSUPP=$P($G(^PXRMD(801.41,DITEM,0)),U,11)
"RTN","PXRMDLL",21,0)
 S DDIS=$S(DSUPP=1:"D",1:"S")
"RTN","PXRMDLL",22,0)
 ;
"RTN","PXRMDLL",23,0)
 S TEXT=""
"RTN","PXRMDLL",24,0)
 ;Get taxonomy file details
"RTN","PXRMDLL",25,0)
 I TSEL'="N" S BOTH=$$TAX(TIEN,DITEM,TEXT,.ARRAY)
"RTN","PXRMDLL",26,0)
 I TSEL'="N",'$D(ARRAY) Q
"RTN","PXRMDLL",27,0)
 S DHIS=$$AHIS(DITEM)
"RTN","PXRMDLL",28,0)
 ;
"RTN","PXRMDLL",29,0)
 ;Build dialog from the returned array
"RTN","PXRMDLL",30,0)
 ;
"RTN","PXRMDLL",31,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",32,0)
 ;this is new for Taxonomy selection types of N
"RTN","PXRMDLL",33,0)
 I TSEL="N" D  Q
"RTN","PXRMDLL",34,0)
 .N LAST,TEXT
"RTN","PXRMDLL",35,0)
 .S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",36,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",37,0)
 ..D TXT
"RTN","PXRMDLL",38,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",39,0)
 ;Main Taxonomy prompt
"RTN","PXRMDLL",40,0)
 ;Default group indents and selection entry
"RTN","PXRMDLL",41,0)
 S TAXTEXT=ARRAY
"RTN","PXRMDLL",42,0)
 ;S ORY(OCNT)=1_U_DITEM_U_DSUB_U_"S"_U_DEXC
"RTN","PXRMDLL",43,0)
 S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC
"RTN","PXRMDLL",44,0)
 S $P(ORY(OCNT),U,16)=2,$P(ORY(OCNT),U,18)=$S(BOTH=1:2,1:0),$P(ORY(OCNT),U,8)=DHIS
"RTN","PXRMDLL",45,0)
 N LAST,TEXT
"RTN","PXRMDLL",46,0)
 S TEXT=""
"RTN","PXRMDLL",47,0)
 S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",48,0)
 .D TXT
"RTN","PXRMDLL",49,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",50,0)
 .S ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",51,0)
 ;
"RTN","PXRMDLL",52,0)
 ;Taxonomy CPT/POV resolution prompts
"RTN","PXRMDLL",53,0)
 S ACNT=""
"RTN","PXRMDLL",54,0)
 F  S ACNT=$O(ARRAY(ACNT)) Q:ACNT=""  D
"RTN","PXRMDLL",55,0)
 .;Prompt text
"RTN","PXRMDLL",56,0)
 .S TAXTEXT=$P(ARRAY(ACNT),U),DPCE=$P(ARRAY(ACNT),U,4)
"RTN","PXRMDLL",57,0)
 .;Historical/Current flag
"RTN","PXRMDLL",58,0)
 .S AHIS=0 I $P(ARRAY(ACNT),U,3)=2 S AHIS=1
"RTN","PXRMDLL",59,0)
 .;CPT/POV
"RTN","PXRMDLL",60,0)
 .S ATYP="POV" I $P(ARRAY(ACNT),U,2)=81 S ATYP="CPT"
"RTN","PXRMDLL",61,0)
 .;Initial display
"RTN","PXRMDLL",62,0)
 .S DHIDE=0,DCHECK=0,DDIS=0
"RTN","PXRMDLL",63,0)
 .;Construct ien for this level
"RTN","PXRMDLL",64,0)
 .S DTAX=DSUB_"."_ACNT
"RTN","PXRMDLL",65,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",66,0)
 .I BOTH=0 Q
"RTN","PXRMDLL",67,0)
 .S DEXC=1
"RTN","PXRMDLL",68,0)
 .S ORY(OCNT)=1_U_DITEM_U_DTAX_U_"T"_U_DEXC_U_U_ATYP_U_AHIS
"RTN","PXRMDLL",69,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",70,0)
 .S ORY(OCNT)=2_U_DITEM_U_DTAX_U_TAXTEXT
"RTN","PXRMDLL",71,0)
 Q
"RTN","PXRMDLL",72,0)
 ;
"RTN","PXRMDLL",73,0)
GROUP(DIEN,DSUB) ;Dialog group
"RTN","PXRMDLL",74,0)
 N DATA,DBOX,DCAP,DCHK,DENTRY,DEXC,DCCNT,DGIEN,DGRP,DGSEQ,DGSUB,DHIDE,DIND
"RTN","PXRMDLL",75,0)
 N DINDPN,DMHEX,DRESL,DSHARE,SUB,DCOUNT
"RTN","PXRMDLL",76,0)
 ;Group caption text
"RTN","PXRMDLL",77,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLL",78,0)
 S DCAP=$P(DATA,U,5),DBOX=$P(DATA,U,6),DIND=$P(DATA,U,7)
"RTN","PXRMDLL",79,0)
 S DSHARE=$P(DATA,U,8),DENTRY=$P(DATA,U,9),DHIDE=$P(DATA,U,10)
"RTN","PXRMDLL",80,0)
 S DINDPN=$P(DATA,U,12) S:DINDPN="" DINDPN=0
"RTN","PXRMDLL",81,0)
 S DBOX=$S(DBOX="Y":1,1:"")
"RTN","PXRMDLL",82,0)
 ;group header is display only if SUPPRESS CHECKBOX
"RTN","PXRMDLL",83,0)
 S DCHK="S" I ('DHIDE)&(DSUPP) S DCHK="D",DHIDE=0
"RTN","PXRMDLL",84,0)
 ;Default group setting to hide
"RTN","PXRMDLL",85,0)
 I DHIDE="" S DHIDE=1
"RTN","PXRMDLL",86,0)
 ;
"RTN","PXRMDLL",87,0)
 S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",88,0)
 ;
"RTN","PXRMDLL",89,0)
 S OCNT=OCNT+1,ORY(OCNT)=1_U_DIEN_U_DSUB_U_DCHK_U_DEXC
"RTN","PXRMDLL",90,0)
 S $P(ORY(OCNT),U,8)=$$AHIS(DIEN)
"RTN","PXRMDLL",91,0)
 S $P(ORY(OCNT),U,15)=DHIDE,$P(ORY(OCNT),U,16)=DIND
"RTN","PXRMDLL",92,0)
 S $P(ORY(OCNT),U,17)=DSHARE,$P(ORY(OCNT),U,18)=DENTRY
"RTN","PXRMDLL",93,0)
 S $P(ORY(OCNT),U,19)=DBOX,$P(ORY(OCNT),U,20)=DCAP
"RTN","PXRMDLL",94,0)
 S $P(ORY(OCNT),U,21)=DINDPN
"RTN","PXRMDLL",95,0)
 ;Create type 2 records if if here is additional group text
"RTN","PXRMDLL",96,0)
 N LAST,TEXT
"RTN","PXRMDLL",97,0)
 S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",98,0)
 .D TXT
"RTN","PXRMDLL",99,0)
 .S OCNT=OCNT+1,ORY(OCNT)=2_U_DIEN_U_DSUB_U_TEXT
"RTN","PXRMDLL",100,0)
 ;Get dialog group sub-elements
"RTN","PXRMDLL",101,0)
 N DGCNT,DTYP,DSUPP,DDIS,IDENT S DGSEQ=0,DGCNT=0
"RTN","PXRMDLL",102,0)
 F  S DGSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ)) Q:'DGSEQ  D
"RTN","PXRMDLL",103,0)
 .S DGSUB=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ,"")) Q:'DGSUB
"RTN","PXRMDLL",104,0)
 .S DGCNT=DGCNT+1
"RTN","PXRMDLL",105,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DGSUB,0))
"RTN","PXRMDLL",106,0)
 .S DGIEN=$P(DATA,U,2) Q:'DGIEN
"RTN","PXRMDLL",107,0)
 .;Check if element is disabled/invalid
"RTN","PXRMDLL",108,0)
 .I $$ISDISAB(DGIEN)=1 Q
"RTN","PXRMDLL",109,0)
 .;Branching logic call to determine if element should be suppress,
"RTN","PXRMDLL",110,0)
 .;replace or left as is
"RTN","PXRMDLL",111,0)
 .N TERMNODE,TERMSTAT
"RTN","PXRMDLL",112,0)
 .S TERMNODE=$G(^PXRMD(801.41,DGIEN,49))
"RTN","PXRMDLL",113,0)
 .I $G(TERMNODE)'="" D  Q:TERMSTAT=0
"RTN","PXRMDLL",114,0)
 ..S TERMSTAT=1
"RTN","PXRMDLL",115,0)
 ..D REPLACE^PXRMDLLB(DFN,TERMNODE,.DGIEN,.DATA,.TERMSTAT)
"RTN","PXRMDLL",116,0)
 .;Exclude from P/N
"RTN","PXRMDLL",117,0)
 .S DEXC=$P(DATA,U,8)
"RTN","PXRMDLL",118,0)
 .I $P($G(^PXRMD(801.41,DGIEN,0)),U,16)'["WHR" D
"RTN","PXRMDLL",119,0)
 ..K DTXT S SUB=0 F  S SUB=$O(^PXRMD(801.41,DGIEN,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",120,0)
 ...S DTXT(SUB)=$G(^PXRMD(801.41,DGIEN,25,SUB,0))
"RTN","PXRMDLL",121,0)
 .S DATA=$G(^PXRMD(801.41,DGIEN,0))
"RTN","PXRMDLL",122,0)
 .;If the actual element is exclude from P/N override
"RTN","PXRMDLL",123,0)
 .I $P($G(^PXRMD(801.41,DGIEN,2)),U,3) S DEXC=1
"RTN","PXRMDLL",124,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11) Q:"EG"'[DTYP
"RTN","PXRMDLL",125,0)
 .S DMHEX=$P(DATA,U,14)
"RTN","PXRMDLL",126,0)
 .S DRESL=$$RESGROUP^PXRMDLLB(DGIEN)
"RTN","PXRMDLL",127,0)
 .;S DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",128,0)
 .S DRES=$P($G(^PXRMD(801.41,DGIEN,1)),U,3)
"RTN","PXRMDLL",129,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",130,0)
 .S DHIS=$$AHIS(DGIEN)
"RTN","PXRMDLL",131,0)
 .S DFIND=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLL",132,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",133,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",134,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",135,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",136,0)
 .S DGRP=DSUB_"."_DGSUB
"RTN","PXRMDLL",137,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",138,0)
 .I DPCE="T",DTYP'="G" D EXP(DFIEN,DGIEN,DGRP,DEXC,DMHEX,DRESL,.DTXT) Q
"RTN","PXRMDLL",139,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",140,0)
 .I DPCE="VIT" S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLL",141,0)
 .;Embedded Dialog Group
"RTN","PXRMDLL",142,0)
 .I DTYP="G" D GROUP(DGIEN,DGRP) Q
"RTN","PXRMDLL",143,0)
 .S DDIS="S" I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",144,0)
 .S DGRP=DSUB_"."_DGSUB,OCNT=OCNT+1
"RTN","PXRMDLL",145,0)
 .S ORY(OCNT)=1_U_DGIEN_U_DGRP_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL_U_$G(DCOUNT)
"RTN","PXRMDLL",146,0)
 .;
"RTN","PXRMDLL",147,0)
 .N LAST,TEXT
"RTN","PXRMDLL",148,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",149,0)
 ..D TXT
"RTN","PXRMDLL",150,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DGIEN_U_DGRP_U_TEXT
"RTN","PXRMDLL",151,0)
 Q
"RTN","PXRMDLL",152,0)
 ;
"RTN","PXRMDLL",153,0)
ISDISAB(PXRMIEN) ;
"RTN","PXRMDLL",154,0)
 N CNT,PXRMDATA,ERRORTXT,HEADER,MSG,MSGCNT,RESULT,STDFILES,TYPE,ZTSAVE
"RTN","PXRMDLL",155,0)
 S PXRMDATA=$G(^PXRMD(801.41,PXRMIEN,0))
"RTN","PXRMDLL",156,0)
 I +$P(PXRMDATA,U,3)=0 Q 0
"RTN","PXRMDLL",157,0)
 I +$P(PXRMDATA,U,3)=2 Q 1
"RTN","PXRMDLL",158,0)
 S HEADER="Disabled Dialog Item is being used in CPRS."
"RTN","PXRMDLL",159,0)
 S TYPE=$P(PXRMDATA,U,4)
"RTN","PXRMDLL",160,0)
 S CNT=1
"RTN","PXRMDLL",161,0)
 S TYPE=$S(TYPE="E":"Element",TYPE="G":"Group",TYPE="R":"Result Group",1:"Item")
"RTN","PXRMDLL",162,0)
 S ERRORTXT(CNT,0)="Reminder Dialog "_TYPE_" "_$P(PXRMDATA,U)_" is inactive."
"RTN","PXRMDLL",163,0)
 D DIALDSAR^PXRMFRPT(.STDFILES) I '$D(STDFILES) G ISDISABX
"RTN","PXRMDLL",164,0)
 S RESULT=$$DISABCHK^PXRMDLG6(PXRMIEN,.STDFILES,.MSG)
"RTN","PXRMDLL",165,0)
 I '$D(MSG) G ISDISABX
"RTN","PXRMDLL",166,0)
 S CNT=CNT+1,ERRORTXT(CNT,0)="",CNT=CNT+1
"RTN","PXRMDLL",167,0)
 S MSGCNT=0
"RTN","PXRMDLL",168,0)
 F  S MSGCNT=$O(MSG(MSGCNT)) Q:MSGCNT'>0  D
"RTN","PXRMDLL",169,0)
 .S CNT=CNT+1
"RTN","PXRMDLL",170,0)
 .S ERRORTXT(CNT,0)="    "_$G(MSG(MSGCNT))
"RTN","PXRMDLL",171,0)
 ;
"RTN","PXRMDLL",172,0)
ISDISABX ;
"RTN","PXRMDLL",173,0)
 S ZTSAVE("HEADER")=""
"RTN","PXRMDLL",174,0)
 S ZTSAVE("ERRORTXT(")=""
"RTN","PXRMDLL",175,0)
 D ERROR("Reminder Dialog disable check",.ZTSAVE)
"RTN","PXRMDLL",176,0)
 Q 1
"RTN","PXRMDLL",177,0)
 ;
"RTN","PXRMDLL",178,0)
ERROR(DESC,ZTSAVE) ;
"RTN","PXRMDLL",179,0)
 N ZTDESC,ZTDTH,ZTRTN,ZTIO
"RTN","PXRMDLL",180,0)
 S ZTDESC=DESC
"RTN","PXRMDLL",181,0)
 S ZTRTN="ERRORQ^PXRMDLL"
"RTN","PXRMDLL",182,0)
 S ZTIO=""
"RTN","PXRMDLL",183,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","PXRMDLL",184,0)
 D ^%ZTLOAD
"RTN","PXRMDLL",185,0)
 Q
"RTN","PXRMDLL",186,0)
ERRORQ ;
"RTN","PXRMDLL",187,0)
 M ^TMP("PXRMXMZ",$J)=ERRORTXT
"RTN","PXRMDLL",188,0)
 D SEND^PXRMMSG("PXRMXMZ",HEADER,"",DUZ)
"RTN","PXRMDLL",189,0)
 Q
"RTN","PXRMDLL",190,0)
 ;
"RTN","PXRMDLL",191,0)
LOAD(DIEN,DFN) ;Load dialog questions into array
"RTN","PXRMDLL",192,0)
 N DARRAY,DATA,DITEM,DFIND,DFIEN,DFTYP,DPCE,DRES,DSEQ,DSUB,DTXT,DTYP,OCNT
"RTN","PXRMDLL",193,0)
 N DDIS,DEXC,DHIDE,DCHECK,DDIS,DHIS,DMHEX,DRESL,DSUPP,SUB,IDENT,TXTCNT,REINDX
"RTN","PXRMDLL",194,0)
 ;Check Status of dialog
"RTN","PXRMDLL",195,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA=""
"RTN","PXRMDLL",196,0)
 ;If disabled ignore
"RTN","PXRMDLL",197,0)
 I $$ISDISAB(DIEN)=1 Q
"RTN","PXRMDLL",198,0)
 ;Ignore if not a reminder dialog
"RTN","PXRMDLL",199,0)
 I $P(DATA,U,4)'="R" Q
"RTN","PXRMDLL",200,0)
 ;check for disable evaluation disable if it contains branching logic
"RTN","PXRMDLL",201,0)
 S REINDX=0
"RTN","PXRMDLL",202,0)
 I $D(^XTMP("PXRM_DISEV",0)) D
"RTN","PXRMDLL",203,0)
 .S ORY(1)=1_U_U_"1"_U_"D"_U_"1"_U_U_U_"0"_U_U
"RTN","PXRMDLL",204,0)
 .S ORY(2)=2_U_U_"1"_U_"Dialog is disable for reminder re-indexing"
"RTN","PXRMDLL",205,0)
 .S REINDX=1
"RTN","PXRMDLL",206,0)
 I REINDX=1 Q
"RTN","PXRMDLL",207,0)
 ;List of PCE codes
"RTN","PXRMDLL",208,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLL",209,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLL",210,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLL",211,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLL",212,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLL",213,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLL",214,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLL",215,0)
 S DARRAY("YTT(601.71,")="MH"
"RTN","PXRMDLL",216,0)
 ;AGP TODO before release ICD9 and CPT can be deleted
"RTN","PXRMDLL",217,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLL",218,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLL",219,0)
 S DARRAY("PXD(811.2,")="T"
"RTN","PXRMDLL",220,0)
 S DARRAY("WV(790.1,")="WHR"
"RTN","PXRMDLL",221,0)
 ;
"RTN","PXRMDLL",222,0)
 ;Get elements for the dialog
"RTN","PXRMDLL",223,0)
 S DSEQ=0,OCNT=0
"RTN","PXRMDLL",224,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLL",225,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLL",226,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DSUB,0))
"RTN","PXRMDLL",227,0)
 .S DITEM=$P(DATA,U,2) Q:DITEM=""
"RTN","PXRMDLL",228,0)
 .;Ignore disabled elements
"RTN","PXRMDLL",229,0)
 .S DATA=$G(^PXRMD(801.41,DITEM,0)) Q:DATA=""  Q:$$ISDISAB(DITEM)=1
"RTN","PXRMDLL",230,0)
 .;Branching logic call to determine if element should be suppress,
"RTN","PXRMDLL",231,0)
 .;replace or left as is
"RTN","PXRMDLL",232,0)
 .S TERMNODE=$G(^PXRMD(801.41,DITEM,49))
"RTN","PXRMDLL",233,0)
 .N TERMSTAT
"RTN","PXRMDLL",234,0)
 .I $G(TERMNODE)'="" D  Q:TERMSTAT=0
"RTN","PXRMDLL",235,0)
 ..S TERMSTAT=1
"RTN","PXRMDLL",236,0)
 ..D REPLACE^PXRMDLLB(DFN,TERMNODE,.DITEM,.DATA,.TERMSTAT)
"RTN","PXRMDLL",237,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11)
"RTN","PXRMDLL",238,0)
 .S DMHEX=$P(DATA,U,14)
"RTN","PXRMDLL",239,0)
 .S DRESL=$$RESGROUP^PXRMDLLB(DITEM)
"RTN","PXRMDLL",240,0)
 .;S DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",241,0)
 .K DTXT S SUB=0
"RTN","PXRMDLL",242,0)
 .F  S SUB=$O(^PXRMD(801.41,DITEM,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",243,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DITEM,25,SUB,0))
"RTN","PXRMDLL",244,0)
 .S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",245,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLL",246,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",247,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",248,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",249,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",250,0)
 .;Exclude from PN
"RTN","PXRMDLL",251,0)
 .S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLL",252,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",253,0)
 .S DHIS=$$AHIS(DITEM)
"RTN","PXRMDLL",254,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",255,0)
 .I DPCE="T",DTYP'="G" D EXP(DFIEN,DITEM,DSUB,DEXC,DMHEX,DRESL,.DTXT) Q
"RTN","PXRMDLL",256,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",257,0)
 .I DPCE="VIT" S DFIEN=$P($G(^GMRD(120.51,DFIEN,0)),U,7)
"RTN","PXRMDLL",258,0)
 .;Dialog Group
"RTN","PXRMDLL",259,0)
 .I DTYP="G" D GROUP(DITEM,DSUB) Q
"RTN","PXRMDLL",260,0)
 .;Dialog type/text and resolution 
"RTN","PXRMDLL",261,0)
 .S OCNT=OCNT+1,DDIS="S"
"RTN","PXRMDLL",262,0)
 .I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",263,0)
 .S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",264,0)
 .N LAST,TEXT
"RTN","PXRMDLL",265,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",266,0)
 ..D TXT
"RTN","PXRMDLL",267,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",268,0)
 Q
"RTN","PXRMDLL",269,0)
 ;
"RTN","PXRMDLL",270,0)
TAX(TXIEN,DITEM,TEXT,ARRAY) ;Return list of resolutions/codes for taxonomy
"RTN","PXRMDLL",271,0)
 N CNT,DXNODE,DTXT,FAIL,HISTIEN,NODE,NUM,PRNODE,RESULT,RESVALUE,TNAME,TSEL,TYPE
"RTN","PXRMDLL",272,0)
 N TDTXT,TDHTXT,TPTXT,TPHTXT
"RTN","PXRMDLL",273,0)
 ;
"RTN","PXRMDLL",274,0)
 ;Get taxonomy name
"RTN","PXRMDLL",275,0)
 S RESULT=0
"RTN","PXRMDLL",276,0)
 S TNAME=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",277,0)
 I $P($G(^PXD(811.2,TXIEN,0)),U,6)=1 D TAXERROR(DITEM,TXIEN) Q RESULT
"RTN","PXRMDLL",278,0)
 ;
"RTN","PXRMDLL",279,0)
 S TDX=$$TOK^PXRMDTAX(TXIEN,"POV")
"RTN","PXRMDLL",280,0)
 S TPR=$$TOK^PXRMDTAX(TXIEN,"CPT")
"RTN","PXRMDLL",281,0)
 S NODE=$G(^PXRMD(801.41,DITEM,"TAX"))
"RTN","PXRMDLL",282,0)
 S TSEL=$P(NODE,U)
"RTN","PXRMDLL",283,0)
 D TAXERROR(DITEM,TXIEN)
"RTN","PXRMDLL",284,0)
 ;
"RTN","PXRMDLL",285,0)
 S DTXT=""
"RTN","PXRMDLL",286,0)
 ;Taxonomy dialog text
"RTN","PXRMDLL",287,0)
 I DTXT="" S DTXT=$P(NODE,U,4)
"RTN","PXRMDLL",288,0)
 ;default to taxonomy description if null
"RTN","PXRMDLL",289,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,2)
"RTN","PXRMDLL",290,0)
 ;default to taxonomy name if null
"RTN","PXRMDLL",291,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",292,0)
 ;
"RTN","PXRMDLL",293,0)
 S CNT=0,ARRAY=DTXT
"RTN","PXRMDLL",294,0)
 ;
"RTN","PXRMDLL",295,0)
 ;make sure dialog is set to display diagnoses/procedure selection list
"RTN","PXRMDLL",296,0)
 I TDX S TDX=$S("AD"[TSEL:1,1:0)
"RTN","PXRMDLL",297,0)
 I TPR S TPR=$S("AP"[TSEL:1,1:0)
"RTN","PXRMDLL",298,0)
 I TDX,TPR S RESULT=1
"RTN","PXRMDLL",299,0)
 S HISTIEN=$O(^PXRMD(801.9,"B","DONE ELSEWHERE (HISTORICAL)",""))
"RTN","PXRMDLL",300,0)
 S RESVALUE=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",301,0)
 S TCUR=$S(RESVALUE'=HISTIEN:1,1:0)
"RTN","PXRMDLL",302,0)
 ;Diagnoses
"RTN","PXRMDLL",303,0)
 I TDX D
"RTN","PXRMDLL",304,0)
 .S TDTXT=$P($G(^PXRMD(801.41,DITEM,"POV")),U) S:TDTXT="" TDTXT=TNAME_$S(TCUR=1:"",1:" (HISTORICAL)")
"RTN","PXRMDLL",305,0)
 .S CNT=CNT+1,ARRAY(CNT)=TDTXT_U_80_U_$S(TCUR=1:1,1:2)_U_"POV"
"RTN","PXRMDLL",306,0)
 ;Procedures
"RTN","PXRMDLL",307,0)
 I TPR D
"RTN","PXRMDLL",308,0)
 .S TPTXT=$P($G(^PXRMD(801.41,DITEM,"CPT")),U) S:TPTXT="" TPTXT=TNAME_$S(TCUR=1:"",1:" (HISTORICAL)")
"RTN","PXRMDLL",309,0)
 .S CNT=CNT+1,ARRAY(CNT)=TPTXT_U_81_U_$S(TCUR=1:1,1:2)_U_"CPT"
"RTN","PXRMDLL",310,0)
 ;
"RTN","PXRMDLL",311,0)
 Q RESULT
"RTN","PXRMDLL",312,0)
 ;
"RTN","PXRMDLL",313,0)
TAXERROR(DIEN,TIEN) ;
"RTN","PXRMDLL",314,0)
 N CNT,DNAME,ERRORTXT,FAIL,HEADER,LINE,NIN,NOUT,OUTPUT,TEMP,TNAME
"RTN","PXRMDLL",315,0)
 S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U) Q:DNAME=""
"RTN","PXRMDLL",316,0)
 S TNAME=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLL",317,0)
 S HEADER="Problem with dialog in CPRS"
"RTN","PXRMDLL",318,0)
 S FAIL=$$CHECKER^PXRMDTAX(DIEN,TIEN,15,.OUTPUT) I FAIL="" Q
"RTN","PXRMDLL",319,0)
 S NIN=$O(OUTPUT(""),-1)
"RTN","PXRMDLL",320,0)
 D FORMAT^PXRMTEXT(1,75,NIN,.OUTPUT,.NOUT,.TEMP)
"RTN","PXRMDLL",321,0)
 S CNT=0 F LINE=1:1:NOUT S CNT=CNT+1,ERRORTXT(CNT,0)=TEMP(LINE)
"RTN","PXRMDLL",322,0)
 ;S CNT=1 S ERRORTXT(CNT,0)="Dialog "_DNAME_" and taxonomy "_TNAME_" structures do not match."
"RTN","PXRMDLL",323,0)
 S CNT=CNT+1,ERRORTXT(CNT,0)="Please review and correct either the taxonomy or the dialog."
"RTN","PXRMDLL",324,0)
 S ZTSAVE("HEADER")="",ZTSAVE("ERRORTXT(")=""
"RTN","PXRMDLL",325,0)
 D ERROR("Reminder Dialog/Taxonomy Loader check",.ZTSAVE)
"RTN","PXRMDLL",326,0)
 Q
"RTN","PXRMDLL",327,0)
 ;
"RTN","PXRMDLL",328,0)
AHIS(DITEM) ;
"RTN","PXRMDLL",329,0)
 N RSIEN,RSNAM
"RTN","PXRMDLL",330,0)
 S RSIEN=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",331,0)
 I RSIEN="" Q 0
"RTN","PXRMDLL",332,0)
 S RSNAM=$P($G(^PXRMD(801.9,RSIEN,0)),U)
"RTN","PXRMDLL",333,0)
 I RSNAM["DONE ELSEWHERE" Q 1
"RTN","PXRMDLL",334,0)
 N GUI,PIEN,PFOUND
"RTN","PXRMDLL",335,0)
 S PIEN=0,PFOUND=0
"RTN","PXRMDLL",336,0)
 F  S PIEN=$O(^PXRMD(801.41,DITEM,10,"D",PIEN)) Q:'PIEN  D  Q:PFOUND
"RTN","PXRMDLL",337,0)
 .;Ignore elements and groups
"RTN","PXRMDLL",338,0)
 .I "EG"[$P($G(^PXRMD(801.41,PIEN,0)),U,4) Q
"RTN","PXRMDLL",339,0)
 .;GUI Process
"RTN","PXRMDLL",340,0)
 .S GUI=$P($G(^PXRMD(801.41,PIEN,46)),U) Q:'GUI
"RTN","PXRMDLL",341,0)
 .;Check if this is PXRM VISIT DATE (or a copy of it)
"RTN","PXRMDLL",342,0)
 .I $P($G(^PXRMD(801.42,GUI,0)),U)="VST_DATE" S PFOUND=1
"RTN","PXRMDLL",343,0)
 Q PFOUND
"RTN","PXRMDLLA")
0^11^B84693327
"RTN","PXRMDLLA",1,0)
PXRMDLLA ;SLC/PJH - REMINDER DIALOG LOADER ;08/01/2013
"RTN","PXRMDLLA",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLLA",3,0)
 ;
"RTN","PXRMDLLA",4,0)
FREC(DFIEN,DFTYP) ;Build type 3 record
"RTN","PXRMDLLA",5,0)
 N CSARRAY,CSCNT
"RTN","PXRMDLLA",6,0)
 ;Dialog type/text and resolution  
"RTN","PXRMDLLA",7,0)
 S DNAM=$$NAME(DFIEN,DFTYP)
"RTN","PXRMDLLA",8,0)
 ;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLLA",9,0)
 S DCOD=""
"RTN","PXRMDLLA",10,0)
 I DPCE="VIT" D
"RTN","PXRMDLLA",11,0)
 .S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLLA",12,0)
 .;Vitals Caption
"RTN","PXRMDLLA",13,0)
 .S DVIT=$P($G(^PXRMD(801.41,DITEM,2)),U,4)
"RTN","PXRMDLLA",14,0)
 I DFTYP]"" D
"RTN","PXRMDLLA",15,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",16,0)
 .S ORY(OCNT)=3_U_DITEM_U_U_DPCE_U_DEXC_U_DFIEN_U_$G(DCOD)_U_DNAM_U_U_DVIT
"RTN","PXRMDLLA",17,0)
 .;Get order type for orderable items
"RTN","PXRMDLLA",18,0)
 .;DBIA #3110
"RTN","PXRMDLLA",19,0)
 .S:DPCE="Q" $P(ORY(OCNT),U,11)=$P($G(^ORD(101.41,DFIEN,0)),U,4)
"RTN","PXRMDLLA",20,0)
 .;If mental health check if a GAF score and if MH test is required
"RTN","PXRMDLLA",21,0)
 .I DPCE="MH",DFIEN D
"RTN","PXRMDLLA",22,0)
 ..;DBIA #5044
"RTN","PXRMDLLA",23,0)
 ..I $P($G(^YTT(601.71,DFIEN,0)),U)="GAF" S $P(ORY(OCNT),U,12)=1
"RTN","PXRMDLLA",24,0)
 ..;Check to see if the MH test is required
"RTN","PXRMDLLA",25,0)
 ..S $P(ORY(OCNT),U,13)=+$P($G(^PXRMD(801.41,DITEM,0)),U,18)
"RTN","PXRMDLLA",26,0)
 ..I $P(ORY(OCNT),U,13)=2,$$PATCH^XPDUTL("OR*3.0*243")=0 S $P(ORY(OCNT),U,13)=1
"RTN","PXRMDLLA",27,0)
 Q
"RTN","PXRMDLLA",28,0)
 ;
"RTN","PXRMDLLA",29,0)
GUI(IEN) ;Work out prompt type for PCE
"RTN","PXRMDLLA",30,0)
 Q:IEN="" ""
"RTN","PXRMDLLA",31,0)
 N SUB S SUB=$P($G(^PXRMD(801.41,IEN,46)),U)
"RTN","PXRMDLLA",32,0)
 Q:'SUB ""
"RTN","PXRMDLLA",33,0)
 Q $P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDLLA",34,0)
 ;
"RTN","PXRMDLLA",35,0)
LOAD(DITEM,DCUR,DTTYP) ;Load dialog questions into array
"RTN","PXRMDLLA",36,0)
 N DARRAY,DCOD,DEXC,DFIND,DFIEN,DFTYP,DNAM,DPCE,DRES,DSEQ,DSUB,DTYP,OCNT
"RTN","PXRMDLLA",37,0)
 N DVIT,NODE,CNT,IDENT,TAXBUILT,TAXNODE,TDX,TPR,TSEL
"RTN","PXRMDLLA",38,0)
 I +$G(DITEM)'>0 Q
"RTN","PXRMDLLA",39,0)
 ;DBIA #3110    OR(101.41
"RTN","PXRMDLLA",40,0)
 ;
"RTN","PXRMDLLA",41,0)
 ;Build list of PCE codes
"RTN","PXRMDLLA",42,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLLA",43,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLLA",44,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLLA",45,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLLA",46,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLLA",47,0)
 ;
"RTN","PXRMDLLA",48,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLLA",49,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLLA",50,0)
 S DARRAY("YTT(601.71,")="MH"
"RTN","PXRMDLLA",51,0)
 ;
"RTN","PXRMDLLA",52,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLLA",53,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLLA",54,0)
 S DARRAY("WV(790.404,")="WH"
"RTN","PXRMDLLA",55,0)
 S DARRAY("WV(790.1,")="WHR"
"RTN","PXRMDLLA",56,0)
 ;
"RTN","PXRMDLLA",57,0)
 S DARRAY("PXD(811.2,")="T"
"RTN","PXRMDLLA",58,0)
 ;
"RTN","PXRMDLLA",59,0)
 ;Get the dialog element
"RTN","PXRMDLLA",60,0)
 S OCNT=0
"RTN","PXRMDLLA",61,0)
 N TERMNODE,TERMSTAT,TERMOUT
"RTN","PXRMDLLA",62,0)
 S DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4)
"RTN","PXRMDLLA",63,0)
 ;Finding detail
"RTN","PXRMDLLA",64,0)
 S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLLA",65,0)
 S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLLA",66,0)
 ;check for WH finding
"RTN","PXRMDLLA",67,0)
 I $P($G(^PXRMD(801.41,DITEM,0)),U,16)["WHR" S DFIND=$G(WHFIND)
"RTN","PXRMDLLA",68,0)
 ;
"RTN","PXRMDLLA",69,0)
 S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLLA",70,0)
 S DPCE="",DVIT="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",71,0)
 ;Exclude from P/N
"RTN","PXRMDLLA",72,0)
 S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLLA",73,0)
 ;
"RTN","PXRMDLLA",74,0)
 ;Non taxonomy codes (3 - finding record)
"RTN","PXRMDLLA",75,0)
 I DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",76,0)
 ;
"RTN","PXRMDLLA",77,0)
 ;Taxonomy codes need expanding (3 - finding record)
"RTN","PXRMDLLA",78,0)
 I DPCE="T" D
"RTN","PXRMDLLA",79,0)
 .S TAXBUILT=0
"RTN","PXRMDLLA",80,0)
 .I $G(DTTYP)="" D
"RTN","PXRMDLLA",81,0)
 ..S TAXNODE=$G(^PXRMD(801.41,DITEM,"TAX"))
"RTN","PXRMDLLA",82,0)
 ..S TSEL=$P(TAXNODE,U) I TSEL="N" Q
"RTN","PXRMDLLA",83,0)
 ..S TDX=$$TOK^PXRMDTAX(DFIEN,"POV")
"RTN","PXRMDLLA",84,0)
 ..S TPR=$$TOK^PXRMDTAX(DFIEN,"CPT")
"RTN","PXRMDLLA",85,0)
 ..I TSEL="D" S DTTYP="POV",TAXBUILT=1 Q
"RTN","PXRMDLLA",86,0)
 ..I TSEL="P" S DTTYP="CPT",TAXBUILT=1 Q
"RTN","PXRMDLLA",87,0)
 ..I TDX,TPR Q
"RTN","PXRMDLLA",88,0)
 ..I TDX S DTTYP="POV",TAXBUILT=1 Q
"RTN","PXRMDLLA",89,0)
 ..I TPR S DTTYP="CPT",TAXBUILT=1
"RTN","PXRMDLLA",90,0)
 .I $G(DTTYP)'="" D EXP^PXRMDLLB(DITEM,DFIEN,DCUR,DTTYP,5) I TAXBUILT=0 Q
"RTN","PXRMDLLA",91,0)
 .D EXPTAX^PXRMDLLB(DITEM,DFIEN,DCUR)
"RTN","PXRMDLLA",92,0)
 ;
"RTN","PXRMDLLA",93,0)
 ;Prompt details (4 - prompt records)
"RTN","PXRMDLLA",94,0)
 N ARRAY,DTITLE,DREQ,DSEQ,DSSEQ,DSUB,DTYP
"RTN","PXRMDLLA",95,0)
 ;If not a taxonomy get prompts from dialog file
"RTN","PXRMDLLA",96,0)
 I DPCE'="T" D PROTH(DITEM,"","")
"RTN","PXRMDLLA",97,0)
 ;Check for MST findings
"RTN","PXRMDLLA",98,0)
 I (DPCE'="T"),(DFTYP]"") D MST^PXRMDLLB(DFTYP,DFIEN)
"RTN","PXRMDLLA",99,0)
 ;If taxonomy use finding parameters (CPT/POV)
"RTN","PXRMDLLA",100,0)
 I DPCE="T" D
"RTN","PXRMDLLA",101,0)
 .I $G(DTTYP)="",$G(^PXRMD(801.41,DITEM,"TAX"))'="N" Q
"RTN","PXRMDLLA",102,0)
 .;
"RTN","PXRMDLLA",103,0)
 .I $D(^PXRMD(801.41,DITEM,10,"B"))>0 D  Q
"RTN","PXRMDLLA",104,0)
 ..I $G(DTTYP)'="",$G(DCUR)'="" D PROTH(DITEM,DTTYP,DCUR) Q
"RTN","PXRMDLLA",105,0)
 ..D PROTH(DITEM,"","")
"RTN","PXRMDLLA",106,0)
 ;Return array of type 4 records
"RTN","PXRMDLLA",107,0)
 S DSEQ=""
"RTN","PXRMDLLA",108,0)
 F  S DSEQ=$O(ARRAY(DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",109,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",110,0)
 .S ORY(OCNT)=4_U_DITEM_U_DSEQ_U_ARRAY(DSEQ)
"RTN","PXRMDLLA",111,0)
 .S DSSEQ=""
"RTN","PXRMDLLA",112,0)
 .F  S DSSEQ=$O(ARRAY(DSEQ,DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",113,0)
 ..S OCNT=OCNT+1
"RTN","PXRMDLLA",114,0)
 ..S ORY(OCNT)=4_U_DITEM_U_DSEQ_"."_DSSEQ_U_ARRAY(DSEQ,DSSEQ)
"RTN","PXRMDLLA",115,0)
 ;
"RTN","PXRMDLLA",116,0)
 ;Get progress note text if defined
"RTN","PXRMDLLA",117,0)
 ;I DPCE'="T" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",118,0)
 ;Build Alternate progress note text for taxonomies with more then one pick list.
"RTN","PXRMDLLA",119,0)
 I DTTYP="" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",120,0)
 ;Build Alternate progress note text for taxonomies with one pick list.
"RTN","PXRMDLLA",121,0)
 I DPCE="T",DTTYP'="" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",122,0)
 ;Additional findings
"RTN","PXRMDLLA",123,0)
 N FASUB
"RTN","PXRMDLLA",124,0)
 S FASUB=0
"RTN","PXRMDLLA",125,0)
 F  S FASUB=$O(^PXRMD(801.41,DITEM,3,FASUB)) Q:'FASUB  D
"RTN","PXRMDLLA",126,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,3,FASUB,0)),U)
"RTN","PXRMDLLA",127,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2) Q:DFTYP=""  Q:DFIEN=""
"RTN","PXRMDLLA",128,0)
 .S DVIT="",DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",129,0)
 .I DPCE'="",DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",130,0)
 .I DPCE'="",DPCE="T" D
"RTN","PXRMDLLA",131,0)
 ..D EXP^PXRMDLLB(DITEM,DFIEN,DCUR,"CPT",3)
"RTN","PXRMDLLA",132,0)
 ..D EXP^PXRMDLLB(DITEM,DFIEN,DCUR,"POV",3)
"RTN","PXRMDLLA",133,0)
 ;D EXPTAX^PXRMDLLB(DITEM,DFIEN,DCUR)
"RTN","PXRMDLLA",134,0)
 Q
"RTN","PXRMDLLA",135,0)
 ;
"RTN","PXRMDLLA",136,0)
 ;
"RTN","PXRMDLLA",137,0)
 ;Returns item name
"RTN","PXRMDLLA",138,0)
NAME(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",139,0)
 Q:DFTYP="" ""
"RTN","PXRMDLLA",140,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",141,0)
 N NAME,FGLOB,POSN
"RTN","PXRMDLLA",142,0)
 ;DBIA #4108
"RTN","PXRMDLLA",143,0)
 I DFTYP="WV(790.404," S NAME=$P($G(^WV(790.404,DFIEN,0)),U) Q:NAME]"" NAME
"RTN","PXRMDLLA",144,0)
 I DFTYP="WV(790.1," S NAME=$G(WHNAME) K WHNAME Q:NAME]"" NAME
"RTN","PXRMDLLA",145,0)
 S POSN=2
"RTN","PXRMDLLA",146,0)
 S:DFTYP["AUTT" POSN=1 S:DFTYP["AUTTEDT" POSN=4 S:DFTYP["ICD" POSN=3
"RTN","PXRMDLLA",147,0)
 S FGLOB=U_DFTYP_DFIEN_",0)",NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDLLA",148,0)
 I (POSN>1),NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDLLA",149,0)
 I NAME="" S NAME=DFIEN
"RTN","PXRMDLLA",150,0)
 Q NAME
"RTN","PXRMDLLA",151,0)
 ;
"RTN","PXRMDLLA",152,0)
PROTH(IEN,DTTYP,DCUR) ; Additional prompts defined in 801.41
"RTN","PXRMDLLA",153,0)
 N DDATA,DDEF,DIEN,DEXC,DGUI,DNAME,DOVR,DREQ,DSEQ,DSNL,DSUB,DFTEXT
"RTN","PXRMDLLA",154,0)
 N DTXT,DTYP,NODE,PRINT,TAX
"RTN","PXRMDLLA",155,0)
 S DSEQ=0
"RTN","PXRMDLLA",156,0)
 F  S DSEQ=$O(^PXRMD(801.41,IEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",157,0)
 .;Get prompts in sequence
"RTN","PXRMDLLA",158,0)
 .S DSUB=$O(^PXRMD(801.41,IEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",159,0)
 .S NODE=$G(^PXRMD(801.41,IEN,10,DSUB,0))
"RTN","PXRMDLLA",160,0)
 .;Prompt ien
"RTN","PXRMDLLA",161,0)
 .S DIEN=$P($G(^PXRMD(801.41,IEN,10,DSUB,0)),U,2) Q:'DIEN
"RTN","PXRMDLLA",162,0)
 .;Ignore disabled components, and those that are not prompts
"RTN","PXRMDLLA",163,0)
 .I $$ISDISAB^PXRMDLL(DIEN)=1 Q
"RTN","PXRMDLLA",164,0)
 .Q:"PF"'[$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",165,0)
 .;check to make sure prompt is apporiate for the taxonomy encounter type
"RTN","PXRMDLLA",166,0)
 .I $G(DTTYP)'="",$G(DCUR)'="",$$TAXPRMPT(DIEN,DTTYP,DCUR)=0 Q
"RTN","PXRMDLLA",167,0)
 .;Set defaults to null
"RTN","PXRMDLLA",168,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",169,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",170,0)
 .S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U),DGUI=$$GUI(DIEN)
"RTN","PXRMDLLA",171,0)
 .I $G(DGUI)="WH_NOT_PURP" D
"RTN","PXRMDLLA",172,0)
 ..S PRINT=$$GET^XPAR($G(DUZ)_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM WH PRINT NOW",1,"I")
"RTN","PXRMDLLA",173,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",174,0)
 .S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",175,0)
 .I "PF"[DTYP D
"RTN","PXRMDLLA",176,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",177,0)
 ..S DDATA=$G(^PXRMD(801.41,DIEN,2)),DTXT=$P(DDATA,U,4)
"RTN","PXRMDLLA",178,0)
 ..;Default value or forced value
"RTN","PXRMDLLA",179,0)
 ..S:DTYP="P" DDEF=$P(DDATA,U) S:DTYP="F" DDEF=$P(DDATA,U,2)
"RTN","PXRMDLLA",180,0)
 ..;Override caption/start new line/exclude PN from dialog file
"RTN","PXRMDLLA",181,0)
 ..S DDATA=$G(^PXRMD(801.41,IEN,10,DSUB,0)),DREQ=$P(DDATA,U,9)
"RTN","PXRMDLLA",182,0)
 ..S DOVR=$P(DDATA,U,6),DSNL=$P(DDATA,U,7),DEXC=$P(DDATA,U,8)
"RTN","PXRMDLLA",183,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",184,0)
 ..;Convert date to fileman format
"RTN","PXRMDLLA",185,0)
 ..I DGUI="VST_DATE",DDEF["T" S DDEF=$$DT^XLFDT()
"RTN","PXRMDLLA",186,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ_U_$G(DFTEXT)_U_$G(PRINT)
"RTN","PXRMDLLA",187,0)
 .;the following section add a comment prompt to the WH review of result
"RTN","PXRMDLLA",188,0)
 .;section of the reminder dialog
"RTN","PXRMDLLA",189,0)
 .I DGUI="WH_PAP_RESULT",DFTYP="WV(790.1,",DTYP="P" D
"RTN","PXRMDLLA",190,0)
 ..N WHCNT,WHFLAG,WHNUM,WHLOOP
"RTN","PXRMDLLA",191,0)
 ..S WHNUM=DSEQ+1,WHLOOP=0
"RTN","PXRMDLLA",192,0)
 ..F WHLOOP=0 D
"RTN","PXRMDLLA",193,0)
 ...S (WHCNT,WHFLAG)=0
"RTN","PXRMDLLA",194,0)
 ...F  S WHCNT=$O(^PXRMD(801.41,IEN,10,"B",WHCNT)) Q:'WHCNT!(WHFLAG=1)  D
"RTN","PXRMDLLA",195,0)
 ....I WHCNT=WHNUM S WHFLAG=1,WHNUM=WHNUM+1
"RTN","PXRMDLLA",196,0)
 ...I WHFLAG=0 S WHLOOP=1
"RTN","PXRMDLLA",197,0)
 ..S ARRAY(WHNUM)="COM"_U_U_U_"P"_U_"Comment:"_U_U_U
"RTN","PXRMDLLA",198,0)
 .;Additional checkboxes
"RTN","PXRMDLLA",199,0)
 .I DGUI="COM",DIEN>1 D
"RTN","PXRMDLLA",200,0)
 ..N DSSEQ,DSUB,DTEXT
"RTN","PXRMDLLA",201,0)
 ..S DSSEQ=0
"RTN","PXRMDLLA",202,0)
 ..F  S DSSEQ=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ)) Q:'DSSEQ  D
"RTN","PXRMDLLA",203,0)
 ...S DSUB=$O(^PXRMD(801.41,DIEN,45,"B",DSSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",204,0)
 ...S DTEXT=$P($G(^PXRMD(801.41,DIEN,45,DSUB,0)),U,2) Q:DTEXT=""
"RTN","PXRMDLLA",205,0)
 ...S ARRAY(DSEQ,DSSEQ)=U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLA",206,0)
 Q
"RTN","PXRMDLLA",207,0)
 ;
"RTN","PXRMDLLA",208,0)
PRTAX(FNODE,RSUB) ;Get all additional fields for this resolution type
"RTN","PXRMDLLA",209,0)
 N ACNT,ASUB
"RTN","PXRMDLLA",210,0)
 N DDATA,DDEF,DEXC,DGUI,DNAME,DREQ,DSEQ,DSUB,DTYP,PRINT
"RTN","PXRMDLLA",211,0)
 S ASUB=0,DSEQ=0
"RTN","PXRMDLLA",212,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLLA",213,0)
 .S DDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DDATA=""
"RTN","PXRMDLLA",214,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",215,0)
 .I $P(DDATA,U,3)=1 Q
"RTN","PXRMDLLA",216,0)
 .S DSUB=$P(DDATA,U) Q:DDATA=""
"RTN","PXRMDLLA",217,0)
 .S DSEQ=DSEQ+1
"RTN","PXRMDLLA",218,0)
 .;Set defaults to null
"RTN","PXRMDLLA",219,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",220,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",221,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U),DGUI=$$GUI(DSUB)
"RTN","PXRMDLLA",222,0)
 .I $G(DGUI)="WH_NOT_PURP" D
"RTN","PXRMDLLA",223,0)
 ..S PRINT=$$GET^XPAR($G(DUZ)_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM WH PRINT NOW",1,"I")
"RTN","PXRMDLLA",224,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",225,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLLA",226,0)
 .I DTYP="P" D
"RTN","PXRMDLLA",227,0)
 ..S DREQ=$P(DDATA,U,2),DTXT=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLLA",228,0)
 ..;Override caption/start new line/exclude from PN from finding type 
"RTN","PXRMDLLA",229,0)
 ..S DOVR=$P(DDATA,U,5),DSNL=$P(DDATA,U,6),DEXC=$P(DDATA,U,7)
"RTN","PXRMDLLA",230,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",231,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",232,0)
 ..S DDATA=$G(^PXRMD(801.41,DSUB,2))
"RTN","PXRMDLLA",233,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ_U_U_$G(PRINT)
"RTN","PXRMDLLA",234,0)
 Q
"RTN","PXRMDLLA",235,0)
 ;
"RTN","PXRMDLLA",236,0)
PTXT(ITEM) ;Get progress note (WP) text for type 6 records
"RTN","PXRMDLLA",237,0)
 N ARRAY,LAST,NULL,SUB,TEXT,TXTCNT
"RTN","PXRMDLLA",238,0)
 S SUB=0
"RTN","PXRMDLLA",239,0)
 F  S SUB=$O(^PXRMD(801.41,ITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",240,0)
 .S ARRAY(SUB)=$G(^PXRMD(801.41,ITEM,35,SUB,0))
"RTN","PXRMDLLA",241,0)
 S SUB=0,LAST=0 F  S SUB=$O(ARRAY(SUB)) Q:'SUB  D
"RTN","PXRMDLLA",242,0)
 .S TEXT=$G(ARRAY(SUB))
"RTN","PXRMDLLA",243,0)
 .S NULL=0 I (TEXT="")!($E(TEXT)=" ") S NULL=1
"RTN","PXRMDLLA",244,0)
 .I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLLA",245,0)
 .S TEXT=$$STRREP^PXRMUTIL(TEXT,"\\","<br>")
"RTN","PXRMDLLA",246,0)
 .S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLLA",247,0)
 .S OCNT=OCNT+1,ORY(OCNT)=6_U_ITEM_U_U_TEXT
"RTN","PXRMDLLA",248,0)
 Q
"RTN","PXRMDLLA",249,0)
 ;
"RTN","PXRMDLLA",250,0)
 ;function to determine if the prompt is valid for the taxonomy encounter type.
"RTN","PXRMDLLA",251,0)
TAXPRMPT(DIEN,DTTYP,DCUR) ;
"RTN","PXRMDLLA",252,0)
 N FIND,IEN
"RTN","PXRMDLLA",253,0)
 S IEN=$P($G(^PXRMD(801.41,DIEN,1)),U,4) I +IEN=0 Q 1
"RTN","PXRMDLLA",254,0)
 S FIND=$P($G(^PXRMD(801.45,IEN,0)),U) I FIND="" Q 1
"RTN","PXRMDLLA",255,0)
 I FIND=DTTYP Q 1
"RTN","PXRMDLLA",256,0)
 Q 0
"RTN","PXRMDLLA",257,0)
 ;
"RTN","PXRMDLLB")
0^12^B33584430
"RTN","PXRMDLLB",1,0)
PXRMDLLB ;SLC/PJH - REMINDER DIALOG LOADER ;01/02/2014
"RTN","PXRMDLLB",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,16,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLLB",3,0)
 ;
"RTN","PXRMDLLB",4,0)
 ;
"RTN","PXRMDLLB",5,0)
CODES(TXIEN,CODESYS,ARRAY) ;
"RTN","PXRMDLLB",6,0)
 N CNT,CODE,DATES,END,IEN,NODE,START,TEXT,TYPE
"RTN","PXRMDLLB",7,0)
 S CNT=0
"RTN","PXRMDLLB",8,0)
 S TYPE="" F  S TYPE=$O(CODESYS(TYPE)) Q:TYPE=""  D
"RTN","PXRMDLLB",9,0)
 .S CODE="" F  S CODE=$O(^PXD(811.2,TXIEN,20,"AUID",TYPE,CODE)) Q:CODE=""  D
"RTN","PXRMDLLB",10,0)
 ..S START="" F  S START=$O(^PXD(811.2,TXIEN,20,"AUID",TYPE,CODE,START)) Q:START=""  D
"RTN","PXRMDLLB",11,0)
 ...S END=""  F  S END=$O(^PXD(811.2,TXIEN,20,"AUID",TYPE,CODE,START,END)) Q:END=""  D
"RTN","PXRMDLLB",12,0)
 ....S NODE=$G(^PXD(811.2,TXIEN,20,"AUID",TYPE,CODE,START,END)) I NODE="" Q
"RTN","PXRMDLLB",13,0)
 ....S IEN=$P(NODE,U),TEXT=$P(NODE,U,2)
"RTN","PXRMDLLB",14,0)
 ....S DATES=START_":"_$S(END>0:END,1:"")
"RTN","PXRMDLLB",15,0)
 ....S CNT=CNT+1,ARRAY(CNT)=IEN_U_$G(CODE)_":"_$G(DATES)_U_$G(TEXT)
"RTN","PXRMDLLB",16,0)
 Q
"RTN","PXRMDLLB",17,0)
 ;
"RTN","PXRMDLLB",18,0)
EXPTAX(DITEM,TIEN,DCUR) ;
"RTN","PXRMDLLB",19,0)
 ;this function handles taxonomy that are set to not display.
"RTN","PXRMDLLB",20,0)
 N CAT,DTTYP,FIND,FILE,NODE,TSEL
"RTN","PXRMDLLB",21,0)
 S NODE=$G(^PXRMD(801.41,DITEM,"TAX"))
"RTN","PXRMDLLB",22,0)
 S TSEL=$P(NODE,U)
"RTN","PXRMDLLB",23,0)
 I "ND"[TSEL D EXP(DITEM,TIEN,DCUR,"CPT",3)
"RTN","PXRMDLLB",24,0)
 I "NP"[TSEL D EXP(DITEM,TIEN,DCUR,"POV",3)
"RTN","PXRMDLLB",25,0)
 Q
"RTN","PXRMDLLB",26,0)
 ;
"RTN","PXRMDLLB",27,0)
 ;
"RTN","PXRMDLLB",28,0)
EXP(DITEM,TIEN,DCUR,DTTYP,TYPE) ;Expand taxonomy codes
"RTN","PXRMDLLB",29,0)
 N CAT,CODES,CODETYPE,CNT,ENC,FILE,LIT
"RTN","PXRMDLLB",30,0)
 I DTTYP="" Q
"RTN","PXRMDLLB",31,0)
 ;S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLB",32,0)
 S LIT="Selectable "_$S(DTTYP="POV":"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLB",33,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLB",34,0)
 ;
"RTN","PXRMDLLB",35,0)
 D BLDCODE^PXRMDTAX(DTTYP,.CODETYPE)
"RTN","PXRMDLLB",36,0)
 ;I FILE=80 S CODETYPE("ICD")="",CODETYPE("10D")=""
"RTN","PXRMDLLB",37,0)
 ;I FILE=81 S CODETYPE("CPT")=""
"RTN","PXRMDLLB",38,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLB",39,0)
 I TYPE=5 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_1_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLB",40,0)
 ;Get selectable codes
"RTN","PXRMDLLB",41,0)
 D CODES(TIEN,.CODETYPE,.CODES)
"RTN","PXRMDLLB",42,0)
 S CNT=0
"RTN","PXRMDLLB",43,0)
 ;Save selectable codes as type 5 or 3 records
"RTN","PXRMDLLB",44,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLB",45,0)
 .S OCNT=OCNT+1,ORY(OCNT)=TYPE_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLB",46,0)
 Q
"RTN","PXRMDLLB",47,0)
 ;
"RTN","PXRMDLLB",48,0)
 ;Pass MST code as a forced value
"RTN","PXRMDLLB",49,0)
MST(DFTYP,DFIEN) ;
"RTN","PXRMDLLB",50,0)
 ;Validate finding ien
"RTN","PXRMDLLB",51,0)
 Q:DFIEN=""
"RTN","PXRMDLLB",52,0)
 ;For each MST term check if finding is mapped
"RTN","PXRMDLLB",53,0)
 N FOUND,TCOND,TIEN,TNAM,TSUB
"RTN","PXRMDLLB",54,0)
 S FOUND=0
"RTN","PXRMDLLB",55,0)
 F TNAM="POSITIVE","NEGATIVE","DECLINES" D  Q:FOUND
"RTN","PXRMDLLB",56,0)
 .;Get term IEN
"RTN","PXRMDLLB",57,0)
 .S TIEN=$O(^PXRMD(811.5,"B","MST "_TNAM_" REPORT","")) Q:'TIEN
"RTN","PXRMDLLB",58,0)
 .;Check if finding is mapped to term
"RTN","PXRMDLLB",59,0)
 .Q:'$D(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN))
"RTN","PXRMDLLB",60,0)
 .;If exam and term condition logic is null ignore
"RTN","PXRMDLLB",61,0)
 .I DFTYP="AUTTEXAM(" D  Q:TCOND=""
"RTN","PXRMDLLB",62,0)
 ..S TCOND="",TSUB=$O(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN,"")) Q:'TSUB
"RTN","PXRMDLLB",63,0)
 ..S TCOND=$P($G(^PXRMD(811.5,TIEN,20,TSUB,3)),U)
"RTN","PXRMDLLB",64,0)
 .;If it is then create additional prompt for MST
"RTN","PXRMDLLB",65,0)
 .N DSEQ,DEXC,DDEF,DGUI,DTYP,DTEXT,DSNL,DREQ
"RTN","PXRMDLLB",66,0)
 .;Add to end of array
"RTN","PXRMDLLB",67,0)
 .S DSEQ=$O(ARRAY(""),-1)+1
"RTN","PXRMDLLB",68,0)
 .;Null fields
"RTN","PXRMDLLB",69,0)
 .S DDEF="",DEXC="",DTEXT="",DSNL="",DREQ=""
"RTN","PXRMDLLB",70,0)
 .;MST status (exept for exams)
"RTN","PXRMDLLB",71,0)
 .I DFTYP'="AUTTEXAM(" S DDEF=$$STCODE^PXRMMST("MST "_TNAM_" REPORT")
"RTN","PXRMDLLB",72,0)
 .;GUI process and forced value
"RTN","PXRMDLLB",73,0)
 .S DGUI="MST",DTYP="F"
"RTN","PXRMDLLB",74,0)
 .;Save in array
"RTN","PXRMDLLB",75,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLB",76,0)
 .;Quit after the first term is found
"RTN","PXRMDLLB",77,0)
 .S FOUND=1
"RTN","PXRMDLLB",78,0)
 Q
"RTN","PXRMDLLB",79,0)
 ;
"RTN","PXRMDLLB",80,0)
REPLACE(DFN,TERMNODE,DITEM,DATA,TERMSTAT) ;
"RTN","PXRMDLLB",81,0)
 ;this section is use to compare the term evalution result against
"RTN","PXRMDLLB",82,0)
 ;the value store in the Reminder Term Status field.
"RTN","PXRMDLLB",83,0)
 ;If the value match and the replacement item is active then the orginal
"RTN","PXRMDLLB",84,0)
 ;item will be replace with the new item.
"RTN","PXRMDLLB",85,0)
 N TERMOUT
"RTN","PXRMDLLB",86,0)
 S TERMSTAT=1 I +$P(TERMNODE,U),$P($G(TERMNODE),U,2)'="" D  Q:+TERMSTAT=0
"RTN","PXRMDLLB",87,0)
 .N DITEMO
"RTN","PXRMDLLB",88,0)
 .S TERMOUT=$$TERM($P(TERMNODE,U),DFN,$G(DITEM),"D")
"RTN","PXRMDLLB",89,0)
 .I TERMOUT'=$P(TERMNODE,U,2) Q
"RTN","PXRMDLLB",90,0)
 .I +$P(TERMNODE,U,3)'>0 S TERMSTAT=0 Q
"RTN","PXRMDLLB",91,0)
 .S DITEMO=DITEM,DITEM=$P(TERMNODE,U,3),DATA=$G(^PXRMD(801.41,DITEM,0))
"RTN","PXRMDLLB",92,0)
 .I $G(DATA)=""!($$ISDISAB^PXRMDLL(DITEM)=1) S DITEM=$O(^PXRMD(801.41,"B","VA-DISABLE BRANCHING LOGIC REPLACEMENT ELEMENT","")) Q
"RTN","PXRMDLLB",93,0)
 Q
"RTN","PXRMDLLB",94,0)
 ;
"RTN","PXRMDLLB",95,0)
RESGROUP(DIEN) ;
"RTN","PXRMDLLB",96,0)
 N CNT,RESULT,TEMP
"RTN","PXRMDLLB",97,0)
 S RESULT=""
"RTN","PXRMDLLB",98,0)
 I $$PATCH^XPDUTL("OR*3.0*243")=0 D  Q RESULT
"RTN","PXRMDLLB",99,0)
 .S RESULT=$P($G(^PXRMD(801.41,DIEN,51,1,0)),U) I RESULT="" Q
"RTN","PXRMDLLB",100,0)
 .I $$ISDISAB^PXRMDLL(RESULT)=1 S RESULT="" Q
"RTN","PXRMDLLB",101,0)
 S CNT=0 F  S CNT=$O(^PXRMD(801.41,DIEN,51,CNT)) Q:CNT'>0  D
"RTN","PXRMDLLB",102,0)
 .S TEMP=$P($G(^PXRMD(801.41,DIEN,51,CNT,0)),U) I TEMP="" Q
"RTN","PXRMDLLB",103,0)
 .I $$ISDISAB^PXRMDLL(TEMP)=1 S TEMP="" Q
"RTN","PXRMDLLB",104,0)
 .S RESULT=$S(RESULT="":TEMP,1:RESULT_"~"_TEMP)
"RTN","PXRMDLLB",105,0)
 Q RESULT
"RTN","PXRMDLLB",106,0)
 ;
"RTN","PXRMDLLB",107,0)
TERM(TERMIEN,DFN,IEN,TYPE) ;
"RTN","PXRMDLLB",108,0)
 ;this section is use to for the term evaluation
"RTN","PXRMDLLB",109,0)
 N ARRAY,CNT,NODE,RESULT,STR,TERMARR
"RTN","PXRMDLLB",110,0)
 N DATEORDR,ESUB,FINDPA,FIEVAL,TFIEVAL,NOCC,BDT,EDT,SDIR,SUB,WVIEN
"RTN","PXRMDLLB",111,0)
 S (TERMARR,TFIEVAL,DATEORDR,FIEVAL)=""
"RTN","PXRMDLLB",112,0)
 ;build term array
"RTN","PXRMDLLB",113,0)
 D TERM^PXRMLDR(TERMIEN,.TERMARR)
"RTN","PXRMDLLB",114,0)
 ;term evaulation
"RTN","PXRMDLLB",115,0)
 D IEVALTER^PXRMTERM(DFN,.TERMARR,.TERMARR,1,.FIEVAL)
"RTN","PXRMDLLB",116,0)
 S RESULT=$G(FIEVAL(1))
"RTN","PXRMDLLB",117,0)
 I TYPE="O" Q +RESULT
"RTN","PXRMDLLB",118,0)
 ;if the item is one of the WH review reminders build finding item and
"RTN","PXRMDLLB",119,0)
 ;text from the  the WVALERTS API in PXRMCWH
"RTN","PXRMDLLB",120,0)
 I RESULT=1,$P($G(^PXRMD(801.41,IEN,0)),U,16)["WHR" D
"RTN","PXRMDLLB",121,0)
 .N IDENT,DATE
"RTN","PXRMDLLB",122,0)
 .S IDENT=$P($G(^PXRMD(801.41,IEN,0)),U,16)
"RTN","PXRMDLLB",123,0)
 .I $G(FIEVAL(1,"LINK"))=1,$G(FIEVAL(1,"STATUS"))="OPEN",$G(FIEVAL(1,"VALUE"))="Pending" D
"RTN","PXRMDLLB",124,0)
 ..S WVIEN=$G(FIEVAL(1,"WVIEN"))
"RTN","PXRMDLLB",125,0)
 ..;DBIA #4102
"RTN","PXRMDLLB",126,0)
 ..D RESULTS^WVALERTS(.ARRAY,WVIEN) D
"RTN","PXRMDLLB",127,0)
 ...K WHFIND,WHNAME
"RTN","PXRMDLLB",128,0)
 ...S NODE=$G(ARRAY(0)) I +$P(NODE,U)'>0 Q
"RTN","PXRMDLLB",129,0)
 ...S WHFIND=WVIEN_";WV(790.1,",WHNAME=$P($G(NODE),U,3)
"RTN","PXRMDLLB",130,0)
 ...S (ESUB,SUB)=0 F  S SUB=$O(DTXT(SUB)) Q:SUB'>0  S ESUB=SUB
"RTN","PXRMDLLB",131,0)
 ...S ESUB=ESUB+1
"RTN","PXRMDLLB",132,0)
 ...I IDENT="WHRP" D
"RTN","PXRMDLLB",133,0)
 ....N MOD
"RTN","PXRMDLLB",134,0)
 ....S DATE=""
"RTN","PXRMDLLB",135,0)
 ....S DTXT(ESUB)=$P($G(NODE),U,3),ESUB=ESUB+1
"RTN","PXRMDLLB",136,0)
 ....S DATE=$P($G(NODE),U,4),STR=$$RJ^XLFSTR("Collected: ",20)
"RTN","PXRMDLLB",137,0)
 ....S STR=STR_$P($G(NODE),U,8)
"RTN","PXRMDLLB",138,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",139,0)
 ....S STR=$$RJ^XLFSTR("Lab Accession #: ",20),STR=STR_$P($G(NODE),U,9)
"RTN","PXRMDLLB",140,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",141,0)
 ....S STR=$$RJ^XLFSTR("Specimen: ",20),STR=STR_$P($G(NODE),U,10)
"RTN","PXRMDLLB",142,0)
 ....S DTXT(ESUB)=STR
"RTN","PXRMDLLB",143,0)
 ...I IDENT="WHRM" D
"RTN","PXRMDLLB",144,0)
 ....S STR=$$RJ^XLFSTR("Procedure: ",20),STR=STR_$P($G(NODE),U,5)
"RTN","PXRMDLLB",145,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",146,0)
 ....S STR=$$RJ^XLFSTR("Primary Diagnosis: ",20),STR=STR_$P($G(NODE),U,6)
"RTN","PXRMDLLB",147,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",148,0)
 ....S STR=$$RJ^XLFSTR("Modifiers: ",20),MOD=$P($G(NODE),U,7)
"RTN","PXRMDLLB",149,0)
 ....I $G(MOD)="" S STR=STR_"<none>"
"RTN","PXRMDLLB",150,0)
 ....E  S STR=STR_$P($G(MOD),"~",1)
"RTN","PXRMDLLB",151,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",152,0)
 ....I $P($G(MOD),"~",2)'="" S DTXT(ESUB)=$$LJ^XLFSTR($P(MOD,"~",2),23)
"RTN","PXRMDLLB",153,0)
 Q +RESULT
"RTN","PXRMDLLB",154,0)
 ;
"RTN","PXRMDLRP")
0^45^B96040502
"RTN","PXRMDLRP",1,0)
PXRMDLRP ;SLC/AGP - Dialog reporting routine ;04/02/2012
"RTN","PXRMDLRP",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMDLRP",3,0)
 Q
"RTN","PXRMDLRP",4,0)
 ;
"RTN","PXRMDLRP",5,0)
ALL ;
"RTN","PXRMDLRP",6,0)
 N CNT,FAIL,IEN,MESS
"RTN","PXRMDLRP",7,0)
 S IEN=0 F  S IEN=$O(^PXRMD(801.41,"TYPE","R",IEN)) Q:IEN'>0  D
"RTN","PXRMDLRP",8,0)
 .I +$P($G(^PXRMD(801.41,IEN,0)),U,3)>0 Q
"RTN","PXRMDLRP",9,0)
 .K MESS
"RTN","PXRMDLRP",10,0)
 .S FAIL=$$RETARR(IEN,.MESS)
"RTN","PXRMDLRP",11,0)
 .I $D(MESS) D
"RTN","PXRMDLRP",12,0)
 ..W !
"RTN","PXRMDLRP",13,0)
 ..S CNT=0 F  S CNT=$O(MESS(CNT)) Q:CNT'>0  D
"RTN","PXRMDLRP",14,0)
 ...W !,MESS(CNT)
"RTN","PXRMDLRP",15,0)
 W !!,"**DONE**"
"RTN","PXRMDLRP",16,0)
 Q
"RTN","PXRMDLRP",17,0)
 ;
"RTN","PXRMDLRP",18,0)
BUILDMSG(TEXTIN,CNT,MESS,NIN) ;
"RTN","PXRMDLRP",19,0)
 N LINE,NOUT,TEXTOUT
"RTN","PXRMDLRP",20,0)
 D FORMAT^PXRMTEXT(1,75,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMDLRP",21,0)
 S CNT=CNT+1,MESS(CNT)=""
"RTN","PXRMDLRP",22,0)
 F LINE=1:1:NOUT D
"RTN","PXRMDLRP",23,0)
 .S CNT=CNT+1,MESS(CNT)=TEXTOUT(LINE)
"RTN","PXRMDLRP",24,0)
 Q
"RTN","PXRMDLRP",25,0)
 ;
"RTN","PXRMDLRP",26,0)
DITEMAR(DIEN,ARRAY,ERRCNT,ERRMSG,FAIL) ;
"RTN","PXRMDLRP",27,0)
 ;DIEN is the IEN of the dialog top level
"RTN","PXRMDLRP",28,0)
 ;Array contains the dialog elements and groups within the dialog.
"RTN","PXRMDLRP",29,0)
 N CNT,IEN,NAME,REPIEN,RSCNT,RSIEN,TEXT,TYPE
"RTN","PXRMDLRP",30,0)
 S CNT=0 F  S CNT=$O(^PXRMD(801.41,DIEN,10,CNT)) Q:CNT'>0  D
"RTN","PXRMDLRP",31,0)
 .S IEN=$P($G(^PXRMD(801.41,DIEN,10,CNT,0)),U,2) I IEN'>0 D  Q
"RTN","PXRMDLRP",32,0)
 ..S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLRP",33,0)
 ..S TYPE=$$EXTERNAL^DILFD(801.41,4,"",$P($G(^PXRMD(801.41,DIEN,0)),U,4))
"RTN","PXRMDLRP",34,0)
 ..S TEXT(1)="The "_TYPE_" "_NAME_" contains an incomplete sequence"
"RTN","PXRMDLRP",35,0)
 ..D BUILDMSG(.TEXT,.ERRCNT,.ERRMSG,1)
"RTN","PXRMDLRP",36,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",37,0)
 .;
"RTN","PXRMDLRP",38,0)
 .S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMDLRP",39,0)
 .; Disregard Prompts and Forced Values
"RTN","PXRMDLRP",40,0)
 .I TYPE="P"!(TYPE="F")!(TYPE="") Q
"RTN","PXRMDLRP",41,0)
 .;Check Replacement Items first
"RTN","PXRMDLRP",42,0)
 .S REPIEN=$P($G(^PXRMD(801.41,IEN,49)),U,3)
"RTN","PXRMDLRP",43,0)
 .I REPIEN>0 D DITEMAR(REPIEN,.ARRAY,.ERRCNT,.ERRMSG,.FAIL)
"RTN","PXRMDLRP",44,0)
 .;Check for Result Groups second
"RTN","PXRMDLRP",45,0)
 .I $D(^PXRMD(801.41,IEN,51))>0 D
"RTN","PXRMDLRP",46,0)
 ..S RSCNT=0
"RTN","PXRMDLRP",47,0)
 ..F  S RSCNT=$O(^PXRMD(801.41,IEN,51,RSCNT)) Q:RSCNT'>0  D
"RTN","PXRMDLRP",48,0)
 ...S RSIEN=$G(^PXRMD(801.41,IEN,51,RSCNT,0)) Q:RSIEN'>0
"RTN","PXRMDLRP",49,0)
 ...D DITEMAR(RSIEN,.ARRAY,.ERRCNT,.ERRMSG,.FAIL)
"RTN","PXRMDLRP",50,0)
 .;do subitem third
"RTN","PXRMDLRP",51,0)
 .D DITEMAR(IEN,.ARRAY,.ERRCNT,.ERRMSG,.FAIL) ;
"RTN","PXRMDLRP",52,0)
 .I '$D(ARRAY(IEN)) S ARRAY(IEN)=""
"RTN","PXRMDLRP",53,0)
 I '$D(ARRAY(DIEN)) S ARRAY(DIEN)=""
"RTN","PXRMDLRP",54,0)
 Q
"RTN","PXRMDLRP",55,0)
 ;
"RTN","PXRMDLRP",56,0)
EN(DIEN,NAME,CNT,MESS,FAIL) ;
"RTN","PXRMDLRP",57,0)
 ; entry point that loops through the dialog array and calls each
"RTN","PXRMDLRP",58,0)
 ;validation line tag
"RTN","PXRMDLRP",59,0)
 ;
"RTN","PXRMDLRP",60,0)
 N DLGARR,DNAME,EXT,IEN,TYPE,UP
"RTN","PXRMDLRP",61,0)
 D DITEMAR(DIEN,.DLGARR,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",62,0)
 S IEN="" F  S IEN=$O(DLGARR(IEN)) Q:IEN'>0  D
"RTN","PXRMDLRP",63,0)
 .S DNAME=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMDLRP",64,0)
 .S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMDLRP",65,0)
 .S EXT=$$EXTERNAL^DILFD(801.41,4,"",TYPE)
"RTN","PXRMDLRP",66,0)
 .;validate dialog item exist on the system
"RTN","PXRMDLRP",67,0)
 . D VALIDITM(IEN,DNAME,EXT,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",68,0)
 .;validate findings data exist on the system
"RTN","PXRMDLRP",69,0)
 . D VALIDFND(IEN,DNAME,EXT,TYPE,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",70,0)
 .;validate TIU Objects and Template Fields found in word processing
"RTN","PXRMDLRP",71,0)
 .;fields exist on the system
"RTN","PXRMDLRP",72,0)
 . D VALIDTXT(IEN,DNAME,EXT,TYPE,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",73,0)
 Q
"RTN","PXRMDLRP",74,0)
 ;
"RTN","PXRMDLRP",75,0)
ODDPIPES(DIEN,NAME,EXT,TYPE,CNT,MESS,FAIL) ;
"RTN","PXRMDLRP",76,0)
 ;this line tag returns true/false and it builds an error message
"RTN","PXRMDLRP",77,0)
 ;if the dialog text/alter PN text contains an odd number of pipes
"RTN","PXRMDLRP",78,0)
 ;
"RTN","PXRMDLRP",79,0)
 N AMOUNT,FLDNAM,NODE,NUM,PIPECNT,RESULT,TEXT
"RTN","PXRMDLRP",80,0)
 S RESULT=0
"RTN","PXRMDLRP",81,0)
 F NODE=25,35 D
"RTN","PXRMDLRP",82,0)
 .K TEXT
"RTN","PXRMDLRP",83,0)
 .S PIPECNT=0,NUM=0
"RTN","PXRMDLRP",84,0)
 .F  S NUM=$O(^PXRMD(801.41,DIEN,NODE,NUM)) Q:NUM'>0  D
"RTN","PXRMDLRP",85,0)
 ..S AMOUNT=$L(^PXRMD(801.41,DIEN,NODE,NUM,0),"|") I AMOUNT=1 Q
"RTN","PXRMDLRP",86,0)
 ..S PIPECNT=PIPECNT+(AMOUNT-1)
"RTN","PXRMDLRP",87,0)
 .I PIPECNT=0 Q
"RTN","PXRMDLRP",88,0)
 .I PIPECNT#2=0 Q
"RTN","PXRMDLRP",89,0)
 .S RESULT=1
"RTN","PXRMDLRP",90,0)
 .S FLDNAM=$S(NODE=25:"Dialog/Progress Note Text",1:"Alternate Progress Note Text")
"RTN","PXRMDLRP",91,0)
 .S TEXT(1)="The "_EXT_" "_DNAME_" contains an odd number of pipes (|) in the "_FLDNAM_" field. TIU Objects cannot be evaluated."
"RTN","PXRMDLRP",92,0)
 .D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",93,0)
 .S FAIL="F"
"RTN","PXRMDLRP",94,0)
 Q RESULT
"RTN","PXRMDLRP",95,0)
 ;
"RTN","PXRMDLRP",96,0)
RETARR(DIEN,MESS) ;
"RTN","PXRMDLRP",97,0)
 ;This entry point is used by reminder exchange this returns an array
"RTN","PXRMDLRP",98,0)
 ;for use in selecting a reminder dialog
"RTN","PXRMDLRP",99,0)
 N CNT,FAIL,NAME,TYPE
"RTN","PXRMDLRP",100,0)
 S CNT=0,FAIL=0
"RTN","PXRMDLRP",101,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLRP",102,0)
 D EN(DIEN,NAME,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",103,0)
 I '$D(MESS) Q FAIL
"RTN","PXRMDLRP",104,0)
 S MESS(1)=NAME_" contains the following errors."
"RTN","PXRMDLRP",105,0)
 Q FAIL
"RTN","PXRMDLRP",106,0)
 ;
"RTN","PXRMDLRP",107,0)
SCREEN(DIEN) ;
"RTN","PXRMDLRP",108,0)
 N NODE
"RTN","PXRMDLRP",109,0)
 S NODE=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLRP",110,0)
 I $P(NODE,U,4)="P" Q 0
"RTN","PXRMDLRP",111,0)
 I $P(NODE,U,4)="F" Q 0
"RTN","PXRMDLRP",112,0)
 Q 1
"RTN","PXRMDLRP",113,0)
 ;
"RTN","PXRMDLRP",114,0)
SELECT ;
"RTN","PXRMDLRP",115,0)
 ;this entry point is used from the option on the reminder dialog menu
"RTN","PXRMDLRP",116,0)
 N DIC,Y
"RTN","PXRMDLRP",117,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDLRP",118,0)
 S DIC(0)="AEMQ"
"RTN","PXRMDLRP",119,0)
 S DIC("A")="Select Dialog Definition: "
"RTN","PXRMDLRP",120,0)
 S DIC("S")="I $$SCREEN^PXRMDLRP(Y)=1"
"RTN","PXRMDLRP",121,0)
 ;Current dialog type only
"RTN","PXRMDLRP",122,0)
 D ^DIC
"RTN","PXRMDLRP",123,0)
 I Y>0 D WRITE(+Y)
"RTN","PXRMDLRP",124,0)
 Q
"RTN","PXRMDLRP",125,0)
 ;
"RTN","PXRMDLRP",126,0)
VALIDFND(IEN,DNAME,EXT,TYPE,CNT,MESS,FAIL) ;
"RTN","PXRMDLRP",127,0)
 N FIND,NIN,NODE,MHTEST,OUTPUT,TEXT
"RTN","PXRMDLRP",128,0)
 ;S DNAME=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMDLRP",129,0)
 ;
"RTN","PXRMDLRP",130,0)
 ;disregard Reminder Dialogs and Result Elements
"RTN","PXRMDLRP",131,0)
 I TYPE="R"!(TYPE="T") Q
"RTN","PXRMDLRP",132,0)
 ;
"RTN","PXRMDLRP",133,0)
 ;Result Groups only need to be check for MH Data
"RTN","PXRMDLRP",134,0)
 I TYPE="S" D  Q
"RTN","PXRMDLRP",135,0)
 .S NODE=$G(^PXRMD(801.41,IEN,50))
"RTN","PXRMDLRP",136,0)
 .I +$P(NODE,U)'>0 D
"RTN","PXRMDLRP",137,0)
 ..S TEXT(1)="The result group "_DNAME_" does not contain a valid MH Test."
"RTN","PXRMDLRP",138,0)
 ..D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",139,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",140,0)
 .I +$P(NODE,U,2)'>0 D
"RTN","PXRMDLRP",141,0)
 ..S TEXT(1)="The result group "_DNAME_" does not contain a valid MH Scale."
"RTN","PXRMDLRP",142,0)
 ..D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",143,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",144,0)
 .I +$P(NODE,U)>0,$$VALIDENT($P(NODE,U)_";YTT(601.71,")=0 D
"RTN","PXRMDLRP",145,0)
 ..S TEXT(1)="The result group "_DNAME_" does not contain a valid MH Test."
"RTN","PXRMDLRP",146,0)
 ..D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",147,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",148,0)
 ;
"RTN","PXRMDLRP",149,0)
 S NODE=$G(^PXRMD(801.41,IEN,1))
"RTN","PXRMDLRP",150,0)
 ;check Orderable items
"RTN","PXRMDLRP",151,0)
 I +$P(NODE,U,7)>0,$$VALIDENT(+$P(NODE,U,7)_";ORD(101.43,")=0 D
"RTN","PXRMDLRP",152,0)
 .S TEXT(1)="The "_EXT_" "_DNAME_" contains a pointer to an Orderable Item that does not exist on the system."
"RTN","PXRMDLRP",153,0)
 .D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",154,0)
 .S FAIL="F"
"RTN","PXRMDLRP",155,0)
 ;
"RTN","PXRMDLRP",156,0)
 ;check finding item
"RTN","PXRMDLRP",157,0)
 I $P(NODE,U,5)'="" D
"RTN","PXRMDLRP",158,0)
 .S FIND=$P(NODE,U,5)
"RTN","PXRMDLRP",159,0)
 .I $$VALIDENT(FIND)=0 D  Q
"RTN","PXRMDLRP",160,0)
 ..S TEXT(1)="The "_EXT_" "_DNAME_" contains an a pointer to the finding item that does not exist on the system."
"RTN","PXRMDLRP",161,0)
 ..D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",162,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",163,0)
 .I FIND[811.2 S FAIL=$$CHECKER^PXRMDTAX(IEN,+FIND,"F",.OUTPUT) I $D(OUTPUT) S NIN=$O(OUTPUT(""),-1) D BUILDMSG(.OUTPUT,.CNT,.MESS,NIN)
"RTN","PXRMDLRP",164,0)
 ;
"RTN","PXRMDLRP",165,0)
 ;check additional findings
"RTN","PXRMDLRP",166,0)
 S FIND=0 F  S FIND=$O(^PXRMD(801.41,IEN,3,"B",FIND)) Q:FIND=""  D
"RTN","PXRMDLRP",167,0)
 .I $$VALIDENT(FIND)=0 D  Q
"RTN","PXRMDLRP",168,0)
 ..S TEXT(1)="The "_EXT_" "_DNAME_" contains a pointer to an additional finding item that does not exist on the system."
"RTN","PXRMDLRP",169,0)
 ..D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",170,0)
 ..S FAIL="F"
"RTN","PXRMDLRP",171,0)
 .I FIND[811.2 S FAIL=$$CHECKER^PXRMDTAX(IEN,+FIND,"A",.OUTPUT) I $D(OUTPUT) S NIN=$O(OUTPUT(""),-1) D BUILDMSG(.OUTPUT,.CNT,.MESS,NIN)
"RTN","PXRMDLRP",172,0)
 Q
"RTN","PXRMDLRP",173,0)
 ;
"RTN","PXRMDLRP",174,0)
VALIDENT(FIND) ;
"RTN","PXRMDLRP",175,0)
 N FILENUM,IEN
"RTN","PXRMDLRP",176,0)
 S FILENUM=$$FNFR^PXRMUTIL(U_$P(FIND,";",2))
"RTN","PXRMDLRP",177,0)
 Q $$FIND1^DIC(FILENUM,"","QU","`"_$P(FIND,";"))
"RTN","PXRMDLRP",178,0)
 ;
"RTN","PXRMDLRP",179,0)
VALIDITM(IEN,NAME,EXT,CNT,MESS,FAIL) ;
"RTN","PXRMDLRP",180,0)
 N TEXT
"RTN","PXRMDLRP",181,0)
 I '$D(^PXRMD(801.41,IEN)) D  Q
"RTN","PXRMDLRP",182,0)
 .S TEXT(1)=NAME_" contains a pointer to an invalid dialog item."
"RTN","PXRMDLRP",183,0)
 .D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",184,0)
 .S FAIL="F"
"RTN","PXRMDLRP",185,0)
 I +$P(^PXRMD(801.41,IEN,0),U,3)>0 D
"RTN","PXRMDLRP",186,0)
 .S TEXT(1)="The "_EXT_" "_NAME_" is disabled."
"RTN","PXRMDLRP",187,0)
 .D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",188,0)
 .I $G(FAIL)'="F" S FAIL="W"
"RTN","PXRMDLRP",189,0)
 Q
"RTN","PXRMDLRP",190,0)
 ;
"RTN","PXRMDLRP",191,0)
VALIDNAM(DIEN,DNAME,FIELD,EXT,TYPE,CNT,MESS,OLIST,TLIST,RETFAIL) ;
"RTN","PXRMDLRP",192,0)
 N ARRAY,FAIL,FLDNAM,NAME,TCNT,TEXT
"RTN","PXRMDLRP",193,0)
 ;determine field object/tiu template is in
"RTN","PXRMDLRP",194,0)
 S FLDNAM=$S(FIELD=25:"Dialog Text",1:"Alternate Progress Note Text")
"RTN","PXRMDLRP",195,0)
 S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLRP",196,0)
 ;
"RTN","PXRMDLRP",197,0)
 I $D(OLIST)>0 D
"RTN","PXRMDLRP",198,0)
 .S TCNT=0 F  S TCNT=$O(OLIST(TCNT)) Q:TCNT'>0  D
"RTN","PXRMDLRP",199,0)
 ..S NAME=OLIST(TCNT)
"RTN","PXRMDLRP",200,0)
 ..;do not check result element objects called SCORE
"RTN","PXRMDLRP",201,0)
 ..I TYPE="T",NAME="SCORE" Q
"RTN","PXRMDLRP",202,0)
 ..;dbia 5447
"RTN","PXRMDLRP",203,0)
 ..S FAIL=$$OBJSTAT^TIUCHECK(NAME)
"RTN","PXRMDLRP",204,0)
 ..I FAIL=-1 D  Q
"RTN","PXRMDLRP",205,0)
 ...S TEXT(1)="The "_EXT_" "_DNAME_" contains a reference to a TIU Object "_NAME_" in the "_FLDNAM_" field. This TIU Object does not exist on the system."
"RTN","PXRMDLRP",206,0)
 ...D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",207,0)
 ...S RETFAIL="F"
"RTN","PXRMDLRP",208,0)
 ..I FAIL=0 D  Q
"RTN","PXRMDLRP",209,0)
 ...S TEXT(1)="The "_EXT_" "_DNAME_" contains a reference to a TIU Object "_NAME_" in the "_FLDNAM_" field. This TIU Object is inactive."
"RTN","PXRMDLRP",210,0)
 ...D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",211,0)
 ...I $G(RETFAIL)'="F" S RETFAIL="W"
"RTN","PXRMDLRP",212,0)
 ;
"RTN","PXRMDLRP",213,0)
 I $D(TLIST)>0 D
"RTN","PXRMDLRP",214,0)
 .S TCNT=0 F  S TCNT=$O(TLIST(TCNT)) Q:TCNT'>0  D
"RTN","PXRMDLRP",215,0)
 ..S NAME=TLIST(TCNT)
"RTN","PXRMDLRP",216,0)
 ..;dbia 5447
"RTN","PXRMDLRP",217,0)
 ..S FAIL=$$TEMPSTAT^TIUCHECK(NAME)
"RTN","PXRMDLRP",218,0)
 ..I FAIL=-1 D  Q
"RTN","PXRMDLRP",219,0)
 ...S TEXT(1)="The "_EXT_" "_DNAME_" contains a reference to a TIU Template field "_NAME_" in the "_FLDNAM_" field. This TIU Template field does not exist on the system."
"RTN","PXRMDLRP",220,0)
 ...D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",221,0)
 ...S RETFAIL="F"
"RTN","PXRMDLRP",222,0)
 ..I FAIL=0 D  Q
"RTN","PXRMDLRP",223,0)
 ...S TEXT(1)="The "_EXT_" "_DNAME_" contains a reference to a TIU Template field "_NAME_" in the "_FLDNAM_" field. This TIU Template field is inactive."
"RTN","PXRMDLRP",224,0)
 ...D BUILDMSG(.TEXT,.CNT,.MESS,1)
"RTN","PXRMDLRP",225,0)
 ...I $G(RETFAIL)'="F" S RETFAIL="W"
"RTN","PXRMDLRP",226,0)
 Q
"RTN","PXRMDLRP",227,0)
 ;
"RTN","PXRMDLRP",228,0)
 ;
"RTN","PXRMDLRP",229,0)
VALIDTXT(DIEN,NAME,EXT,TYPE,CNT,MESS,FAIL) ;
"RTN","PXRMDLRP",230,0)
 N OBJLIST,TEXT,TLIST
"RTN","PXRMDLRP",231,0)
 I $$ODDPIPES(IEN,NAME,EXT,TYPE,.CNT,.MESS,.FAIL)=1 Q
"RTN","PXRMDLRP",232,0)
 ;check dialog/progress note text
"RTN","PXRMDLRP",233,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,25,.OBJLIST,.TLIST)
"RTN","PXRMDLRP",234,0)
 I $D(OBJLIST)>0!($D(TLIST)>0) D VALIDNAM(IEN,NAME,25,EXT,TYPE,.CNT,.MESS,.OBJLIST,.TLIST,.FAIL)
"RTN","PXRMDLRP",235,0)
 K OBJLIST,TLIST
"RTN","PXRMDLRP",236,0)
 ;Check alternate progress note text
"RTN","PXRMDLRP",237,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,35,.OBJLIST,.TLIST)
"RTN","PXRMDLRP",238,0)
 I $D(OBJLIST)>0!($D(TLIST)>0) D VALIDNAM(IEN,NAME,35,EXT,TYPE,.CNT,.MESS,.OBJLIST,.TLIST,.FAIL)
"RTN","PXRMDLRP",239,0)
 Q
"RTN","PXRMDLRP",240,0)
 ;
"RTN","PXRMDLRP",241,0)
TIUSRCH(DIEN) ;
"RTN","PXRMDLRP",242,0)
 N CNT,DLGARR,DNAME,EXT,FAIL,IEN,MESS,NAME,OCNT,OBJLIST,OLIST,TLIST,TYPE
"RTN","PXRMDLRP",243,0)
 S CNT=0,OCNT=0
"RTN","PXRMDLRP",244,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLRP",245,0)
 D DITEMAR(DIEN,.DLGARR,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",246,0)
 S IEN="" F  S IEN=$O(DLGARR(IEN)) Q:IEN'>0  D
"RTN","PXRMDLRP",247,0)
 .S DNAME=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMDLRP",248,0)
 .S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMDLRP",249,0)
 .S EXT=$$EXTERNAL^DILFD(801.41,4,"",TYPE)
"RTN","PXRMDLRP",250,0)
 .I $$ODDPIPES(IEN,NAME,EXT,TYPE,.CNT,.MESS,.FAIL)=1 Q
"RTN","PXRMDLRP",251,0)
 .;check dialog/progress note text
"RTN","PXRMDLRP",252,0)
 .D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,25,.OBJLIST,.TLIST)
"RTN","PXRMDLRP",253,0)
 .I $D(OBJLIST)>0 D
"RTN","PXRMDLRP",254,0)
 ..D VALIDNAM(IEN,NAME,25,EXT,TYPE,.CNT,.MESS,.OBJLIST,.TLIST,.FAIL)
"RTN","PXRMDLRP",255,0)
 Q
"RTN","PXRMDLRP",256,0)
 ;
"RTN","PXRMDLRP",257,0)
WRITE(DIEN) ;
"RTN","PXRMDLRP",258,0)
 N CNT,FAIL,MESS,NAME
"RTN","PXRMDLRP",259,0)
 S CNT=0
"RTN","PXRMDLRP",260,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLRP",261,0)
 D EN(DIEN,NAME,.CNT,.MESS,.FAIL)
"RTN","PXRMDLRP",262,0)
 I '$D(MESS) W !,"NO ERRORS FOUND" H 1 Q
"RTN","PXRMDLRP",263,0)
 W !,NAME_" contains the following errors."
"RTN","PXRMDLRP",264,0)
 S CNT=0 F  S CNT=$O(MESS(CNT)) Q:CNT'>0  D
"RTN","PXRMDLRP",265,0)
 .W !,MESS(CNT)
"RTN","PXRMDLRP",266,0)
 H 1
"RTN","PXRMDLRP",267,0)
 Q
"RTN","PXRMDLRP",268,0)
 ;
"RTN","PXRMDTAX")
0^34^B200174205
"RTN","PXRMDTAX",1,0)
PXRMDTAX ; SLC/AGP - Reminder Dialog Taxonomy Field editor/List Manager ;03/14/2014
"RTN","PXRMDTAX",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMDTAX",3,0)
 ;
"RTN","PXRMDTAX",4,0)
 ;ADDTAXF1(FIELD,CODE,ARRAY) ;
"RTN","PXRMDTAX",5,0)
ADDTAXF1(CODE,ARRAY) ;
"RTN","PXRMDTAX",6,0)
 N CURVALUE,PROMPT,RESULT,SARRAY,TEMP,TYPE,X,Y
"RTN","PXRMDTAX",7,0)
 S CURVALUE=$$GETTEXT^PXRMDTAX(.ARRAY,CODE)
"RTN","PXRMDTAX",8,0)
 ;I CURVALUE="" S CURVALUE="Selectable "_$S(FIELD=2:"current ",FIELD=3:"historical ",1:"")_$S($E(TEMP)="d":TEMP_"es",1:TEMP_"s")_" codes"
"RTN","PXRMDTAX",9,0)
 Q CURVALUE
"RTN","PXRMDTAX",10,0)
 ;
"RTN","PXRMDTAX",11,0)
 ;central location for building array of codes when determine what codes go with an
"RTN","PXRMDTAX",12,0)
 ;encounter type
"RTN","PXRMDTAX",13,0)
BLDCODE(TYPE,CODESYS) ;
"RTN","PXRMDTAX",14,0)
 I TYPE="ALL" S (CODESYS("ICD"),CODESYS("10D"),CODESYS("CPT"),CODESYS("CPC"))="" Q
"RTN","PXRMDTAX",15,0)
 I TYPE="POV" S (CODESYS("ICD"),CODESYS("10D"))="" Q
"RTN","PXRMDTAX",16,0)
 I TYPE="CPT" S (CODESYS("CPT"),CODESYS("CPC"))="" Q
"RTN","PXRMDTAX",17,0)
 Q
"RTN","PXRMDTAX",18,0)
 ;
"RTN","PXRMDTAX",19,0)
 ;build FDA array for Taxonomy Fields multiple
"RTN","PXRMDTAX",20,0)
BLDFDA(CODE,IEN,FDA,DEFAULT) ;
"RTN","PXRMDTAX",21,0)
 N DA,ENCTYPE,FIELD,IENS,NODEIEN,RESULT,TEMP,VALUE,X
"RTN","PXRMDTAX",22,0)
 S X=$S(CODE="POV":141,1:142)
"RTN","PXRMDTAX",23,0)
 S VALUE=$$TAXDIR(X,CODE,IEN,.DEFAULT) I VALUE[U Q VALUE
"RTN","PXRMDTAX",24,0)
 S FDA(801.41,IEN_",",X)=VALUE
"RTN","PXRMDTAX",25,0)
 Q VALUE
"RTN","PXRMDTAX",26,0)
 ;
"RTN","PXRMDTAX",27,0)
CHECKER(DIEN,TIEN,FIELD,OUTPUT) ;
"RTN","PXRMDTAX",28,0)
 N CNT,FAIL,NAME,NODE,RESULT,TAXSEL,TDX,TDXNODE,TNAME,TPR,TPRNODE,TYPE
"RTN","PXRMDTAX",29,0)
 S FAIL=""
"RTN","PXRMDTAX",30,0)
 S NODE=$G(^PXRMD(801.41,DIEN,0)),NAME=$P(NODE,U),TYPE=$S($P(NODE,U,4)="G":"Group",1:"Element")
"RTN","PXRMDTAX",31,0)
 S TNAME=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDTAX",32,0)
 I $P($G(^PXD(811.2,TIEN,0)),U,6)=1 S OUTPUT(1)="Dialog "_TYPE_" "_NAME_" contains an inactive taxonomy "_TNAME_".",FAIL="W" Q FAIL
"RTN","PXRMDTAX",33,0)
 I '$D(^PXD(811.2,TIEN,20,"AUID")) S OUTPUT(1)="Dialog "_TYPE_" "_NAME_" contains a taxonomy "_TNAME_" that does not have codes marked to be used in a dialog.",FAIL=$S(FIELD="F":"F",1:"W") I FIELD'="" Q FAIL
"RTN","PXRMDTAX",34,0)
 ;
"RTN","PXRMDTAX",35,0)
 S TAXSEL=$P($G(^PXRMD(801.41,DIEN,"TAX")),U)
"RTN","PXRMDTAX",36,0)
 S TDX=$$TOK(TIEN,"POV"),TPR=$$TOK(TIEN,"CPT")
"RTN","PXRMDTAX",37,0)
 ;I TYPE="Group",TDX,TPR,TAXSEL'["N" S OUTPUT(1)="Dialog "_TYPE_" "_NAME_" cannot have a taxonomy selection field value other than 'No Pick List'.",FAIL="F" Q FAIL
"RTN","PXRMDTAX",38,0)
 ;.I TAXSEL'["N" S OUTPUT(1)="Dialog "_TYPE_" "_NAME_" cannot have a taxonomy selection field value other than 'No Pick List'.",FAIL="F"
"RTN","PXRMDTAX",39,0)
 I TAXSEL="N" Q FAIL
"RTN","PXRMDTAX",40,0)
 S TDXNODE=$S($P($G(^PXRMD(801.41,DIEN,"POV")),U)'="":1,1:0),TPRNODE=$S($P($G(^PXRMD(801.41,DIEN,"CPT")),U)'="":1,1:0)
"RTN","PXRMDTAX",41,0)
 S CNT=0
"RTN","PXRMDTAX",42,0)
 I TAXSEL="A",TDX,TPR D  Q FAIL
"RTN","PXRMDTAX",43,0)
 .S RESULT=$$CHCKCOMP(TDXNODE,TDX,"POV",NAME) I RESULT'="" S FAIL="W",CNT=CNT+1,OUTPUT(CNT)=RESULT
"RTN","PXRMDTAX",44,0)
 .S RESULT=$$CHCKCOMP(TPRNODE,TPR,"CPT",NAME) I RESULT'="" S FAIL="W",CNT=CNT+1,OUTPUT(CNT)=RESULT
"RTN","PXRMDTAX",45,0)
 I TAXSEL="D" S RESULT=$$CHCKCOMP(TDXNODE,TDX,"POV",NAME) I RESULT'="" S FAIL="W",CNT=CNT+1,OUTPUT(CNT)=RESULT
"RTN","PXRMDTAX",46,0)
 I TAXSEL="P" S RESULT=$$CHCKCOMP(TPRNODE,TPR,"CPT",NAME) I RESULT'="" S FAIL="W",CNT=CNT+1,OUTPUT(CNT)=RESULT
"RTN","PXRMDTAX",47,0)
 I $$HASACT(TIEN)=0 S FAIL="W",CNT=CNT+1,OUTPUT(CNT)="Taxonomy "_TNAME_" does not contain active codes for "_$$FMTE^XLFDT(DT)
"RTN","PXRMDTAX",48,0)
 Q FAIL
"RTN","PXRMDTAX",49,0)
 ;
"RTN","PXRMDTAX",50,0)
CHCKCOMP(DNODE,TNODE,TYPE,NAME) ;
"RTN","PXRMDTAX",51,0)
 N NODE S NODE=$S(TYPE="POV":"diagnosis",1:"procedure")
"RTN","PXRMDTAX",52,0)
 I DNODE=1,TNODE=0 Q "Dialog element "_NAME_" "_NODE_" Header Text is defined, but the taxonomy does not have "_NODE_" codes marked to be used in a dialog."
"RTN","PXRMDTAX",53,0)
 I DNODE=0,TNODE=1 Q "Dialog element "_NAME_" "_NODE_" Header Text is not defined, but the taxonomy does have "_NODE_" codes marked to be used in a dialog."
"RTN","PXRMDTAX",54,0)
 Q ""
"RTN","PXRMDTAX",55,0)
 ;
"RTN","PXRMDTAX",56,0)
 ;write out code display used by List Manager
"RTN","PXRMDTAX",57,0)
CODES(TIEN,CODES,NLINE,HIST,ISMAIL) ;
"RTN","PXRMDTAX",58,0)
 N BDATE,CODE,DATE,DATES,DESC,DTEXT,EDATE,NLINES,STR,SUB
"RTN","PXRMDTAX",59,0)
 N TAB,TEXT,TEXTIN,TEXTOUT,X
"RTN","PXRMDTAX",60,0)
 ;
"RTN","PXRMDTAX",61,0)
 S SUB=""
"RTN","PXRMDTAX",62,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMDTAX",63,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMDTAX",64,0)
 .S BDATE=$$FMTE^XLFDT($P($G(CODE),":",2))
"RTN","PXRMDTAX",65,0)
 .S EDATE=$S($P($G(CODE),":",3)'="":$$FMTE^XLFDT($P($G(CODE),":",3)),1:"")
"RTN","PXRMDTAX",66,0)
 .S DATE=BDATE_"-"_EDATE
"RTN","PXRMDTAX",67,0)
 .S STR=$$LJ^XLFSTR($P($G(CODE),":"),8)
"RTN","PXRMDTAX",68,0)
 .S STR=STR_DESC
"RTN","PXRMDTAX",69,0)
 .S TEXTIN(1)=STR
"RTN","PXRMDTAX",70,0)
 .D FORMAT^PXRMTEXT(1,$S(ISMAIL:35,1:44),1,.TEXTIN,.NLINES,.TEXTOUT)
"RTN","PXRMDTAX",71,0)
 .F X=1:1:NLINES D
"RTN","PXRMDTAX",72,0)
 ..S DTEXT=$S(X=1:$$LJ^XLFSTR(TEXTOUT(X),$S(ISMAIL=1:38,1:45))_DATE,1:TEXTOUT(X))
"RTN","PXRMDTAX",73,0)
 ..S NLINE=NLINE+1
"RTN","PXRMDTAX",74,0)
 ..S ^TMP(NODE,$J,NLINE,0)=$J("",15)_DTEXT
"RTN","PXRMDTAX",75,0)
 Q
"RTN","PXRMDTAX",76,0)
 ;
"RTN","PXRMDTAX",77,0)
 ;general field delete sub-routine
"RTN","PXRMDTAX",78,0)
DELFIELD(IENS,SUB,FIELD) ;Delete a field.
"RTN","PXRMDTAX",79,0)
 N FDA,MSG
"RTN","PXRMDTAX",80,0)
 S FDA(SUB,IENS,FIELD)="@"
"RTN","PXRMDTAX",81,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMDTAX",82,0)
 I $D(MSG) W !,"Error in delete",! D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMDTAX",83,0)
 Q
"RTN","PXRMDTAX",84,0)
 ;
"RTN","PXRMDTAX",85,0)
 ;Cross-reference delete when deleting Taxonomy fields in a dialog
"RTN","PXRMDTAX",86,0)
DELLOG(DA,FIELD,OLD,NEW) ;
"RTN","PXRMDTAX",87,0)
 I OLD="" Q
"RTN","PXRMDTAX",88,0)
 N IENS,POVIEN,PROCIEN
"RTN","PXRMDTAX",89,0)
 I FIELD=123 D  Q
"RTN","PXRMDTAX",90,0)
 .I NEW=""!(NEW="N") D  Q
"RTN","PXRMDTAX",91,0)
 ..S IENS=DA_"," D DELFIELD(IENS,801.41,141)
"RTN","PXRMDTAX",92,0)
 ..S IENS=DA_"," D DELFIELD(IENS,801.41,142)
"RTN","PXRMDTAX",93,0)
 .I NEW="D" S IENS=DA_"," D DELFIELD(IENS,801.41,142) Q
"RTN","PXRMDTAX",94,0)
 .I NEW="P" S IENS=DA_"," D DELFIELD(IENS,801.41,141)
"RTN","PXRMDTAX",95,0)
 Q
"RTN","PXRMDTAX",96,0)
 ;
"RTN","PXRMDTAX",97,0)
GETSTAT(TYPE) ;
"RTN","PXRMDTAX",98,0)
 N HIST,RESULT,STATUS
"RTN","PXRMDTAX",99,0)
 S RESULT=0
"RTN","PXRMDTAX",100,0)
 S IEN=$O(^PXRMD(801.45,"B",TYPE,"")) I IEN'>0 Q RESULT
"RTN","PXRMDTAX",101,0)
 I '$D(^PXRMD(801.45,IEN,1,"B",2)) S RESULT=1 Q RESULT
"RTN","PXRMDTAX",102,0)
 S HIST=$O(^PXRMD(801.45,IEN,1,"B",2,"")) I HIST'>0 S RESULT=1 Q RESULT
"RTN","PXRMDTAX",103,0)
 I $P($G(^PXRMD(801.45,IEN,1,HIST,0)),U,2)=1 S RESULT=1 Q RESULT
"RTN","PXRMDTAX",104,0)
 S RESULT=2
"RTN","PXRMDTAX",105,0)
 S STATUS=0 F  S STATUS=$O(^PXRMD(801.45,IEN,1,"B",STATUS)) Q:STATUS'>0!(RESULT<2)  I STATUS'=2 S RESULT=0
"RTN","PXRMDTAX",106,0)
 Q RESULT
"RTN","PXRMDTAX",107,0)
 ;
"RTN","PXRMDTAX",108,0)
 ;this returns the default values from file 801.45 for POV or Procedure
"RTN","PXRMDTAX",109,0)
 ;codes.
"RTN","PXRMDTAX",110,0)
 ;DEFAULT(TYPE,pointer to file 801.9)=default
"RTN","PXRMDTAX",111,0)
 ;DEFAULT(TYPE,pointer to file 801.9,ADDFIND,n)=additional finding node
"RTN","PXRMDTAX",112,0)
GETTAXDF(DEFAULT,TYPE,ISHIST) ;
"RTN","PXRMDTAX",113,0)
 N CNT,IEN,FIND,STATUS
"RTN","PXRMDTAX",114,0)
 S IEN=$O(^PXRMD(801.45,"B",TYPE,"")) I IEN'>0 Q
"RTN","PXRMDTAX",115,0)
 ;get resolution status
"RTN","PXRMDTAX",116,0)
 S CNT=0 F  S CNT=$O(^PXRMD(801.45,IEN,1,CNT)) Q:CNT'>0  D
"RTN","PXRMDTAX",117,0)
 .S STATUS=$P($G(^PXRMD(801.45,IEN,1,CNT,0)),U)
"RTN","PXRMDTAX",118,0)
 .I ISHIST=1,STATUS'=2 Q
"RTN","PXRMDTAX",119,0)
 .I ISHIST=0,STATUS=2 Q
"RTN","PXRMDTAX",120,0)
 .;get prefix and suffix text
"RTN","PXRMDTAX",121,0)
 .S DEFAULT(TYPE,"PREFIX")=$G(^PXRMD(801.45,IEN,1,CNT,3))
"RTN","PXRMDTAX",122,0)
 .S DEFAULT(TYPE,"SUFFIX")=$G(^PXRMD(801.45,IEN,1,CNT,4))
"RTN","PXRMDTAX",123,0)
 .;get additional findings
"RTN","PXRMDTAX",124,0)
 .S FIND=0 F  S FIND=$O(^PXRMD(801.45,IEN,1,CNT,5,FIND)) Q:FIND'>0  D
"RTN","PXRMDTAX",125,0)
 ..S DEFAULT(TYPE,"ADDFIND",FIND)=$G(^PXRMD(801.45,IEN,1,CNT,5,FIND,0))
"RTN","PXRMDTAX",126,0)
 Q
"RTN","PXRMDTAX",127,0)
 ;
"RTN","PXRMDTAX",128,0)
 ;Returns the default taxonomy checkbox header for the Encounter Type
"RTN","PXRMDTAX",129,0)
GETTEXT(VALUES,TYPE) ;
"RTN","PXRMDTAX",130,0)
 ;GETTEXT(VALUES,TYPE,CURR) ;
"RTN","PXRMDTAX",131,0)
 N ENCTYPE,IEN,TEXT
"RTN","PXRMDTAX",132,0)
 S TEXT=""
"RTN","PXRMDTAX",133,0)
 S TEXT=$G(VALUES(TYPE,"PREFIX"))_$G(VALUES(TYPE,"SUFFIX"))
"RTN","PXRMDTAX",134,0)
 Q TEXT
"RTN","PXRMDTAX",135,0)
 ;
"RTN","PXRMDTAX",136,0)
HASACT(TIEN) ;
"RTN","PXRMDTAX",137,0)
 N SYS,CODE,SDATE,EDATE,START,TODAY,FOUND,END
"RTN","PXRMDTAX",138,0)
 S TODAY=DT+1,FOUND=0
"RTN","PXRMDTAX",139,0)
 S SYS="" F  S SYS=$O(^PXD(811.2,TIEN,20,"AUID",SYS)) Q:SYS=""!(FOUND=1)  D
"RTN","PXRMDTAX",140,0)
 .S CODE="" F  S CODE=$O(^PXD(811.2,TIEN,20,"AUID",SYS,CODE)) Q:CODE=""!(FOUND=1)  D
"RTN","PXRMDTAX",141,0)
 ..S SDATE=""
"RTN","PXRMDTAX",142,0)
 ..F  S SDATE=$O(^PXD(811.2,TIEN,20,"AUID",SYS,CODE,SDATE)) Q:SDATE=""!(FOUND=1)  D
"RTN","PXRMDTAX",143,0)
 ...S START=SDATE-1,EDATE=""
"RTN","PXRMDTAX",144,0)
 ...F  S EDATE=$O(^PXD(811.2,TIEN,20,"AUID",SYS,CODE,SDATE,EDATE)) Q:EDATE=""!(FOUND=1)  D
"RTN","PXRMDTAX",145,0)
 ....S END=$S(EDATE="DT":DT+1,1:EDATE+1) I DT>START,DT<END S FOUND=1 Q
"RTN","PXRMDTAX",146,0)
 Q FOUND
"RTN","PXRMDTAX",147,0)
 ;
"RTN","PXRMDTAX",148,0)
PRINT(TEXTIN,NIN) ;
"RTN","PXRMDTAX",149,0)
 N LINE,NOUT,TEXTOUT
"RTN","PXRMDTAX",150,0)
 D FORMAT^PXRMTEXT(1,75,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMDTAX",151,0)
 D MES^XPDUTL(.TEXTOUT)
"RTN","PXRMDTAX",152,0)
 Q
"RTN","PXRMDTAX",153,0)
 ;
"RTN","PXRMDTAX",154,0)
 ;Builds a list of prompts associated with the taxonomy finding types
"RTN","PXRMDTAX",155,0)
 ;Prompts the user to add the prompts to the dialog editor. Does not prompt if prompts
"RTN","PXRMDTAX",156,0)
 ;are already defined to the element.
"RTN","PXRMDTAX",157,0)
PROMPTS(DA,SEL,DEFAULT,FDA,IENCNT) ;
"RTN","PXRMDTAX",158,0)
 N CNT,CODE,DIR,DNUM,ENC,EXTVAL,FIELD,IEN,IENS,NAME,NODE,NUM,PROMPT,PROMPTS,START,VALUE,X,Y
"RTN","PXRMDTAX",159,0)
 I $D(^PXRMD(801.41,DA,10)) Q 0
"RTN","PXRMDTAX",160,0)
 S CODE="" F  S CODE=$O(DEFAULT(CODE)) Q:CODE=""  D
"RTN","PXRMDTAX",161,0)
 .I SEL="P",CODE="POV" Q
"RTN","PXRMDTAX",162,0)
 .I SEL="D",CODE="CPT" Q
"RTN","PXRMDTAX",163,0)
 .S CNT=0 F  S CNT=$O(DEFAULT(CODE,"ADDFIND",CNT)) Q:CNT'>0  D
"RTN","PXRMDTAX",164,0)
 ..S NODE=DEFAULT(CODE,"ADDFIND",CNT)
"RTN","PXRMDTAX",165,0)
 ..S IEN=$P(NODE,U)
"RTN","PXRMDTAX",166,0)
 ..I $D(^PXRMD(801.41,DA,10,"D",IEN))>0 Q
"RTN","PXRMDTAX",167,0)
 ..I $D(PROMPTS(IEN))>0 I $L(PROMPTS(IEN),U)<$L(NODE,U) S PROMPTS(IEN)=NODE
"RTN","PXRMDTAX",168,0)
 ..S PROMPTS(IEN)=NODE
"RTN","PXRMDTAX",169,0)
 ;
"RTN","PXRMDTAX",170,0)
 I '$D(PROMPTS) Q 0
"RTN","PXRMDTAX",171,0)
 S START=+$O(^PXRMD(801.41,DA,10,""),-1)
"RTN","PXRMDTAX",172,0)
 S DNUM=0
"RTN","PXRMDTAX",173,0)
 W !,"Default prompts for the taxonomy:"
"RTN","PXRMDTAX",174,0)
 S IEN=0,CNT=0 F  S IEN=$O(PROMPTS(IEN)) Q:IEN'>0  D
"RTN","PXRMDTAX",175,0)
 .S CNT=CNT+1,START=START+1,DNUM=DNUM+1
"RTN","PXRMDTAX",176,0)
 .S IENCNT=IENCNT+1,IENS="+"_IENCNT_","_DA_","
"RTN","PXRMDTAX",177,0)
 .S NAME=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMDTAX",178,0)
 .S NODE=PROMPTS(IEN),CNT=$L(NODE,U)
"RTN","PXRMDTAX",179,0)
 .I $P(NODE,U,3)>0 Q
"RTN","PXRMDTAX",180,0)
 .S FDA(801.412,IENS,.01)=START
"RTN","PXRMDTAX",181,0)
 .S FDA(801.412,IENS,2)=IEN
"RTN","PXRMDTAX",182,0)
 .W !,"Prompt: "_NAME
"RTN","PXRMDTAX",183,0)
 .I CNT=1 Q
"RTN","PXRMDTAX",184,0)
 .F NUM=2:1:CNT D
"RTN","PXRMDTAX",185,0)
 ..I NUM=3 Q
"RTN","PXRMDTAX",186,0)
 ..I NUM=4 Q
"RTN","PXRMDTAX",187,0)
 ..S VALUE=$P(NODE,U,NUM) I $G(VALUE)="" Q
"RTN","PXRMDTAX",188,0)
 ..S FIELD=$S(NUM=2:9,NUM=4:.01,NUM=5:6,NUM=6:7,NUM=7:8,1:"") I $G(FIELD)="" Q
"RTN","PXRMDTAX",189,0)
 ..S FDA(801.412,IENS,FIELD)=VALUE
"RTN","PXRMDTAX",190,0)
 ..S PROMPT=$S(FIELD=.01:"Sequence",FIELD=6:"Override Prompt Caption",FIELD=7:"Start New Line",FIELD=8:"Exclude From PN Text",FIELD=9:"Required")
"RTN","PXRMDTAX",191,0)
 ..I $G(PROMPT)="" Q
"RTN","PXRMDTAX",192,0)
 ..I FIELD=6 S EXTVAL=VALUE
"RTN","PXRMDTAX",193,0)
 ..I FIELD>6 S EXTVAL=$S(VALUE=1:"Yes",1:"No")
"RTN","PXRMDTAX",194,0)
 ..W !,"   "_PROMPT_": "_EXTVAL
"RTN","PXRMDTAX",195,0)
 ;
"RTN","PXRMDTAX",196,0)
 I CNT=0 W !,"None" Q 0
"RTN","PXRMDTAX",197,0)
 S DIR(0)="S^Y:Yes;N:No"
"RTN","PXRMDTAX",198,0)
 S DIR("A")="Add Prompts to the dialog"
"RTN","PXRMDTAX",199,0)
 S DIR("B")="Yes"
"RTN","PXRMDTAX",200,0)
 D ^DIR
"RTN","PXRMDTAX",201,0)
 I Y[U K FDA(801.412) Q 0
"RTN","PXRMDTAX",202,0)
 I Y="N" K FDA(801.412)
"RTN","PXRMDTAX",203,0)
 Q 1
"RTN","PXRMDTAX",204,0)
 ;
"RTN","PXRMDTAX",205,0)
 ;Prompts the user for values for the fields in the Taxonomy Fields multiple.
"RTN","PXRMDTAX",206,0)
 ;Builds default values from existing values or from file 801.45
"RTN","PXRMDTAX",207,0)
TAXDIR(FIELD,CODE,DA,ARRAY) ;
"RTN","PXRMDTAX",208,0)
 N DIR,CURVALUE,PROMPT,RESULT,SARRAY,TEMP,TYPE,X,Y
"RTN","PXRMDTAX",209,0)
 S CURVALUE=""
"RTN","PXRMDTAX",210,0)
 S DIR("A")=$S(CODE="POV":"Diagnosis Header",1:"Procedure Header")
"RTN","PXRMDTAX",211,0)
 S DIR(0)="F^1:80"
"RTN","PXRMDTAX",212,0)
 S TEMP=$S(CODE="POV":"diagnosis",1:"Procedure")
"RTN","PXRMDTAX",213,0)
 I +DA>0 S CURVALUE=$$GET1^DIQ(801.41,DA_",",FIELD)
"RTN","PXRMDTAX",214,0)
 I CURVALUE="" D
"RTN","PXRMDTAX",215,0)
 .S CURVALUE=$$GETTEXT(.ARRAY,CODE)
"RTN","PXRMDTAX",216,0)
 .I CURVALUE="" S CURVALUE="Selectable "_$S($E(TEMP)="d":TEMP_"es",1:TEMP_"s")_" codes"
"RTN","PXRMDTAX",217,0)
 S DIR("B")=CURVALUE
"RTN","PXRMDTAX",218,0)
 D ^DIR
"RTN","PXRMDTAX",219,0)
 Q Y
"RTN","PXRMDTAX",220,0)
 ;
"RTN","PXRMDTAX",221,0)
 ;main taxonomy fields editor entry point. Returns ^ or ^^ or 1 is fields are answer.
"RTN","PXRMDTAX",222,0)
TAXDIAL(IEN,FIND) ;
"RTN","PXRMDTAX",223,0)
  ;Protect FileMan variables
"RTN","PXRMDTAX",224,0)
 N D,D0,DA,DC,DDES,DE,DG,DH,DI,DIC,DIDEL,DIE,DIEDA,DIEL,DIEN,DIR,DIETMP
"RTN","PXRMDTAX",225,0)
 N DIEXREF,DIFLD,DIEIENS,DINUSE,DIP,DISYS,DK,DL,DM,DP,DQ,DR,DU
"RTN","PXRMDTAX",226,0)
 ;
"RTN","PXRMDTAX",227,0)
 N DEF,DEFAULT,DXTYPE,FDA,FDAIEN,HTEXT,IENCNT,IENS,ISHIST,MSG,NODEIEN,NAME,NONE,PRTYPE,RESULT,STR,TAXIEN,TAXSEL,TDX,TPR,VALUE,X,Y
"RTN","PXRMDTAX",228,0)
 ;
"RTN","PXRMDTAX",229,0)
ENTAXDL ;
"RTN","PXRMDTAX",230,0)
 ;
"RTN","PXRMDTAX",231,0)
 S RESULT=1
"RTN","PXRMDTAX",232,0)
 I FIND'["PXD(811.2" Q 0
"RTN","PXRMDTAX",233,0)
 S DA=IEN,TAXIEN=+FIND I TAXIEN'>0 Q 0
"RTN","PXRMDTAX",234,0)
 S ISHIST=$S($P($G(^PXRMD(801.41,IEN,1)),U,3)=2:1,1:0)
"RTN","PXRMDTAX",235,0)
 S TDX=$$TOK(TAXIEN,"POV")
"RTN","PXRMDTAX",236,0)
 S TPR=$$TOK(TAXIEN,"CPT")
"RTN","PXRMDTAX",237,0)
 S DEF=$P($G(^PXRMD(801.41,DA,"TAX")),U)
"RTN","PXRMDTAX",238,0)
 S DIR(0)="S^A:All;N:No Pick List" D HELP(.HTEXT,"")
"RTN","PXRMDTAX",239,0)
 I TDX=1,TPR=1 S DIR(0)="S^A:All;D:ICD Diagnoses Only;P:CPT Procedures Only;N:No Pick List" D HELP(.HTEXT,"PD")
"RTN","PXRMDTAX",240,0)
 I $P($G(^PXRMD(801.41,IEN,0)),U,4)="G" D
"RTN","PXRMDTAX",241,0)
 .I $G(DEF)="" S DEF="N"
"RTN","PXRMDTAX",242,0)
 .I TDX=1,TPR=1 S DIR(0)="S^D:ICD Diagnoses Only;P:CPT Procedures Only;N:No Pick List" D HELP(.HTEXT,"GPD") Q
"RTN","PXRMDTAX",243,0)
 .I TPR=1 S DIR(0)="S^P:CPT Procedures Only;N:No Pick List" D HELP(.HTEXT,"GP") Q
"RTN","PXRMDTAX",244,0)
 .S DIR(0)="S^D:ICD Diagnoses Only;N:No Pick List" D HELP(.HTEXT,"GD")
"RTN","PXRMDTAX",245,0)
 I DIR(0)'[DEF S DEF=""
"RTN","PXRMDTAX",246,0)
 S DIR("A")="Taxonomy Pick List"
"RTN","PXRMDTAX",247,0)
 S DIR("B")=$S(DEF]"":DEF,1:"A")
"RTN","PXRMDTAX",248,0)
 S DIR("?")="Select the pick list display value or '^' to quit. Enter ?? for detail help."
"RTN","PXRMDTAX",249,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMDTAX",250,0)
 D ^DIR
"RTN","PXRMDTAX",251,0)
 I Y[U Q Y
"RTN","PXRMDTAX",252,0)
 S VALUE=Y
"RTN","PXRMDTAX",253,0)
 S FDA(801.41,DA_",",123)=VALUE
"RTN","PXRMDTAX",254,0)
 I VALUE="N" G TAXUPD
"RTN","PXRMDTAX",255,0)
 I TDX=1 D GETTAXDF(.DEFAULT,"POV",ISHIST)
"RTN","PXRMDTAX",256,0)
 I TPR=1 D GETTAXDF(.DEFAULT,"CPT",ISHIST)
"RTN","PXRMDTAX",257,0)
 S IENCNT=0
"RTN","PXRMDTAX",258,0)
 I TDX=1,TPR=1,VALUE="A" D  G TAXDIALX:RESULT="^^" G ENTAXDL:RESULT=U
"RTN","PXRMDTAX",259,0)
 .S RESULT=$$BLDFDA("POV",IEN,.FDA,.DEFAULT) I RESULT[U Q
"RTN","PXRMDTAX",260,0)
 .S RESULT=$$BLDFDA("CPT",IEN,.FDA,.DEFAULT)
"RTN","PXRMDTAX",261,0)
 ;I TPR=1,VALUE="A" S RESULT=$$BLDFDA("CPT",IEN,.FDA,.DEFAULT) G TAXDIALX:RESULT="^^" G ENTAXDL:RESULT=U
"RTN","PXRMDTAX",262,0)
 ;
"RTN","PXRMDTAX",263,0)
 S RESULT=$$PROMPTS(IEN,VALUE,.DEFAULT,.FDA,.IENCNT) I RESULT[U G TAXDIALX:RESULT="^^" G ENTAXDL:RESULT=U
"RTN","PXRMDTAX",264,0)
 K MSG
"RTN","PXRMDTAX",265,0)
TAXUPD ;
"RTN","PXRMDTAX",266,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMDTAX",267,0)
 I $D(MSG) W !,"Error in update",! D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMDTAX",268,0)
 ;
"RTN","PXRMDTAX",269,0)
TAXDIALX ; 
"RTN","PXRMDTAX",270,0)
 Q RESULT
"RTN","PXRMDTAX",271,0)
 ;
"RTN","PXRMDTAX",272,0)
 ;This routine is used to display Taxonomy codes in the List Manager view for Dialog Text.
"RTN","PXRMDTAX",273,0)
 ;TODO should we display any codes in Dialog Text view for Additional Findings or Taxonomy Pick List of N, D, P?
"RTN","PXRMDTAX",274,0)
TAXDISP(FIEN,SEQ,DIEN,NLINE,NODE,ADDFIND,ISMAIL) ;
"RTN","PXRMDTAX",275,0)
 N ARRAY,CNT,CODESYS,FILE,HIST,TIEN,TSEQ
"RTN","PXRMDTAX",276,0)
 N CNT,DTXT,FNODE,RSUB,TDX,TNAME,TPAR,TPR,TYP
"RTN","PXRMDTAX",277,0)
 N TCUR,TDTXT,TDHTXT,THIS,TPTXT,TPHTXT
"RTN","PXRMDTAX",278,0)
 S TIEN=$P(FIEN,";") Q:TIEN=""
"RTN","PXRMDTAX",279,0)
 S HIST=0,FILE=""
"RTN","PXRMDTAX",280,0)
 ;Get associated codes
"RTN","PXRMDTAX",281,0)
 ;
"RTN","PXRMDTAX",282,0)
 ;Get taxonomy name
"RTN","PXRMDTAX",283,0)
 S TNAME=$P($G(^PXD(811.2,TIEN,0)),U,1)
"RTN","PXRMDTAX",284,0)
 ;
"RTN","PXRMDTAX",285,0)
 ;Check what type of taxonomy codes exist
"RTN","PXRMDTAX",286,0)
 S TDX=$$TOK(TIEN,"POV")
"RTN","PXRMDTAX",287,0)
 S TPR=$$TOK(TIEN,"CPT")
"RTN","PXRMDTAX",288,0)
 ;
"RTN","PXRMDTAX",289,0)
 S TAXSEL=$P($G(^PXRMD(801.41,DIEN,"TAX")),U)
"RTN","PXRMDTAX",290,0)
 I ADDFIND=1 S TAXSEL="N"
"RTN","PXRMDTAX",291,0)
 ;
"RTN","PXRMDTAX",292,0)
 I TDX D
"RTN","PXRMDTAX",293,0)
 .D BLDCODE("POV",.CODESYS)
"RTN","PXRMDTAX",294,0)
 .D CODES^PXRMDLLB(TIEN,.CODESYS,.CODES)
"RTN","PXRMDTAX",295,0)
 .I '$D(CODES) Q
"RTN","PXRMDTAX",296,0)
 .S TEXT=$J("",15)_$S(TAXSEL="N":"Diagnoses Codes:",TAXSEL="P":"Procedures Codes:",1:"Selectable Diagnoses Codes:"),TAB=18
"RTN","PXRMDTAX",297,0)
 .S STR=$$LJ^XLFSTR($G(TEXT),$S(ISMAIL=1:51,1:60))
"RTN","PXRMDTAX",298,0)
 .S STR=STR_"Activation Periods"
"RTN","PXRMDTAX",299,0)
 .S NLINE=NLINE+1
"RTN","PXRMDTAX",300,0)
 .S ^TMP(NODE,$J,NLINE,0)=STR
"RTN","PXRMDTAX",301,0)
 .D CODES(TIEN,.CODES,.NLINE,HIST,ISMAIL)
"RTN","PXRMDTAX",302,0)
 .S NLINE=NLINE+1
"RTN","PXRMDTAX",303,0)
 .S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDTAX",304,0)
 ;
"RTN","PXRMDTAX",305,0)
 I TPR D
"RTN","PXRMDTAX",306,0)
 .K CODESYS,CODES
"RTN","PXRMDTAX",307,0)
 .D BLDCODE("CPT",.CODESYS)
"RTN","PXRMDTAX",308,0)
 .D CODES^PXRMDLLB(TIEN,.CODESYS,.CODES)
"RTN","PXRMDTAX",309,0)
 .I '$D(CODES) Q
"RTN","PXRMDTAX",310,0)
 .S TEXT=$J("",15)_$S(TAXSEL="N":"Procedures Codes:",TAXSEL="D":"Procedures Codes:",1:"Selectable Procedures codes:"),TAB=18
"RTN","PXRMDTAX",311,0)
 .S STR=$$LJ^XLFSTR($G(TEXT),$S(ISMAIL=1:51,1:60))
"RTN","PXRMDTAX",312,0)
 .S STR=STR_"Activation Periods"
"RTN","PXRMDTAX",313,0)
 .S NLINE=NLINE+1
"RTN","PXRMDTAX",314,0)
 .S ^TMP(NODE,$J,NLINE,0)=STR
"RTN","PXRMDTAX",315,0)
 .D CODES(TIEN,.CODES,.NLINE,HIST,ISMAIL)
"RTN","PXRMDTAX",316,0)
 .S NLINE=NLINE+1
"RTN","PXRMDTAX",317,0)
 .S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDTAX",318,0)
 Q
"RTN","PXRMDTAX",319,0)
 ;
"RTN","PXRMDTAX",320,0)
TAXEDITC(TIEN,TEXT) ;
"RTN","PXRMDTAX",321,0)
 N DARRAY,DIEN,HEADER,NAME,OCNT,OUTPUT,RARRAY,RESULT,TDX,TPR,TAXNODE
"RTN","PXRMDTAX",322,0)
 N TAXSEL
"RTN","PXRMDTAX",323,0)
 D FINDDIAL^PXRMFRPT(.DARRAY,"PXD(811.2,",TIEN)
"RTN","PXRMDTAX",324,0)
 S TEXT(1)="Taxonomy and/or the following dialog(s) have problems."
"RTN","PXRMDTAX",325,0)
 S TEXT(2)="Correct either the taxonomy or the following dialog(s):"
"RTN","PXRMDTAX",326,0)
 S CNT=2
"RTN","PXRMDTAX",327,0)
 I '$D(DARRAY) G TXEDITCX
"RTN","PXRMDTAX",328,0)
 I '$D(^PXD(811.2,TIEN,20,"AUID")) S TEXT(1)="Taxonomy does not contain codes marked to be used in a dialog. It is assigned to the following dialog(s)." D  Q
"RTN","PXRMDTAX",329,0)
 .S CNT=1,NAME="" F  S NAME=$O(DARRAY(NAME)) Q:NAME=""  S CNT=CNT+1,TEXT(CNT)="   "_NAME
"RTN","PXRMDTAX",330,0)
 S TDX=$$TOK(TIEN,"POV"),TPR=$$TOK(TIEN,"CPT")
"RTN","PXRMDTAX",331,0)
 S NAME="" F  S NAME=$O(DARRAY(NAME)) Q:NAME=""  D
"RTN","PXRMDTAX",332,0)
 .S IEN=DARRAY(NAME) S RESULT=$$CHECKER(IEN,TIEN,"",.OUTPUT) I RESULT="" Q
"RTN","PXRMDTAX",333,0)
 .S TEXT(2)="See below for descriptions of the problem(s):"
"RTN","PXRMDTAX",334,0)
 .N LINE,NIN,NOUT,TEMP
"RTN","PXRMDTAX",335,0)
 .S NIN=$O(OUTPUT(""),-1)
"RTN","PXRMDTAX",336,0)
 .D FORMAT^PXRMTEXT(1,75,NIN,.OUTPUT,.NOUT,.TEMP)
"RTN","PXRMDTAX",337,0)
 .F LINE=1:1:NOUT S CNT=CNT+1,TEXT(CNT)=TEMP(LINE)
"RTN","PXRMDTAX",338,0)
TXEDITCX ;
"RTN","PXRMDTAX",339,0)
 I CNT=2 K TEXT
"RTN","PXRMDTAX",340,0)
 K ^TMP($J,"DLG FIND")
"RTN","PXRMDTAX",341,0)
 Q
"RTN","PXRMDTAX",342,0)
 ;
"RTN","PXRMDTAX",343,0)
 ;change to use AUID cross-referenc instead of the selectable node, central location for checking what codes to use
"RTN","PXRMDTAX",344,0)
 ;in a dialog for encounter type.
"RTN","PXRMDTAX",345,0)
TOK(TIEN,TYPE) ;Check if selectable codes exist
"RTN","PXRMDTAX",346,0)
 I TYPE="POV" I $D(^PXD(811.2,TIEN,20,"AUID","ICD"))>0!($D(^PXD(811.2,TIEN,20,"AUID","10D"))>0) Q 1
"RTN","PXRMDTAX",347,0)
 I TYPE="CPT" I $D(^PXD(811.2,TIEN,20,"AUID","CPT"))>0!($D(^PXD(811.2,TIEN,20,"AUID","CPC"))>0) Q 1
"RTN","PXRMDTAX",348,0)
 Q 0
"RTN","PXRMDTAX",349,0)
 ;
"RTN","PXRMDTAX",350,0)
HELP(HTEXT,TYPE) ;
"RTN","PXRMDTAX",351,0)
 N CNT S CNT=1
"RTN","PXRMDTAX",352,0)
 S HTEXT(CNT)="Set the taxonomy pick list display for the codes marked to be used in a dialog."
"RTN","PXRMDTAX",353,0)
 I TYPE'["G" S CNT=CNT+1,HTEXT(CNT)="\\\\   A: To display a pick list for all codes "
"RTN","PXRMDTAX",354,0)
 I TYPE["G" D  Q
"RTN","PXRMDTAX",355,0)
 .I "PD" D  Q
"RTN","PXRMDTAX",356,0)
 ..S CNT=CNT+1,HTEXT(CNT)="\\\\   D: To display a pick list for the diagnosis codes."
"RTN","PXRMDTAX",357,0)
 ..S CNT=CNT+1,HTEXT(CNT)="\\\\      The procedure codes will automatically be filed to the encounter."
"RTN","PXRMDTAX",358,0)
 ..S CNT=CNT+1,HTEXT(CNT)="\\\\   P: To display a pick list for the procedure codes."
"RTN","PXRMDTAX",359,0)
 ..S CNT=CNT+1,HTEXT(CNT)="\\\\      The diagnosis codes will automatically be filed to the encounter."
"RTN","PXRMDTAX",360,0)
 ..S CNT=CNT+1,HTEXT(CNT)="\\\\   N: To not display a pick list all codes will automatically be filed to the encounter."
"RTN","PXRMDTAX",361,0)
 I TYPE["D" D
"RTN","PXRMDTAX",362,0)
 .S CNT=CNT+1,HTEXT(CNT)="\\\\   D: To display a pick list for the diagnosis codes."
"RTN","PXRMDTAX",363,0)
 .S CNT=CNT+1,HTEXT(CNT)="\\\\      The procedure codes will automatically be filed to the encounter."
"RTN","PXRMDTAX",364,0)
 I TYPE["P" D
"RTN","PXRMDTAX",365,0)
 .S CNT=CNT+1,HTEXT(CNT)="\\\\   P: To display a pick list for the procedure codes."
"RTN","PXRMDTAX",366,0)
 .S CNT=CNT+1,HTEXT(CNT)="\\\\      The diagnosis codes will  automatically be filed to the encounter."
"RTN","PXRMDTAX",367,0)
 S CNT=CNT+1,HTEXT(CNT)="\\\\   N: To not display a pick list, all codes will automatically be filed "
"RTN","PXRMDTAX",368,0)
 S CNT=CNT+1,HTEXT(CNT)="\\\\      to the encounter."
"RTN","PXRMDTAX",369,0)
 Q
"RTN","PXRMDTAX",370,0)
 ;
"RTN","PXRMDUTL")
0^99^B11502615
"RTN","PXRMDUTL",1,0)
PXRMDUTL ; SLC/AGP - DIALOG UTILITIES. ;04/10/2013
"RTN","PXRMDUTL",2,0)
 ;;2.0;CLINICAL REMINDERS;**24,26**;Feb 04, 2005;Build 404
"RTN","PXRMDUTL",3,0)
 Q
"RTN","PXRMDUTL",4,0)
 ;
"RTN","PXRMDUTL",5,0)
 ;==========================================
"RTN","PXRMDUTL",6,0)
ALLOWDEL(IEN) ; check to see if the item can be deleted
"RTN","PXRMDUTL",7,0)
 N CLASS,TYPE
"RTN","PXRMDUTL",8,0)
 S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMDUTL",9,0)
 S CLASS=$P($G(^PXRMD(801.41,IEN,100)),U)
"RTN","PXRMDUTL",10,0)
 I (CLASS="N")&((TYPE="P")!(TYPE="F")) Q 0
"RTN","PXRMDUTL",11,0)
 Q 1
"RTN","PXRMDUTL",12,0)
 ;
"RTN","PXRMDUTL",13,0)
DELD(DIEN) ; delete the dialog item
"RTN","PXRMDUTL",14,0)
 N ARRAY,CNT,DARRAY,DA,DIK,PXRMINST
"RTN","PXRMDUTL",15,0)
 S CNT=0
"RTN","PXRMDUTL",16,0)
 D DITEMAR(DIEN,.ARRAY,.DARRAY,.CNT)
"RTN","PXRMDUTL",17,0)
 S PXRMINST=1
"RTN","PXRMDUTL",18,0)
 S DIK="^PXRMD(801.41,"
"RTN","PXRMDUTL",19,0)
 S CNT="" F  S CNT=$O(ARRAY(CNT),-1) Q:CNT=""  D
"RTN","PXRMDUTL",20,0)
 .S DA=$O(ARRAY(CNT,"")) Q:DA'>0
"RTN","PXRMDUTL",21,0)
 .I $$ALLOWDEL(DA)=0 Q
"RTN","PXRMDUTL",22,0)
 .D ^DIK
"RTN","PXRMDUTL",23,0)
 Q
"RTN","PXRMDUTL",24,0)
 ;
"RTN","PXRMDUTL",25,0)
 ; builds an array of items beneath the dialog item, lowest item first.
"RTN","PXRMDUTL",26,0)
DITEMAR(DIEN,ARRAY,DARRAY,DCNT) ;
"RTN","PXRMDUTL",27,0)
 ;  DIEN is the IEN of the dialog top level
"RTN","PXRMDUTL",28,0)
 ;  Array contains the dialog elements and groups within the dialog.
"RTN","PXRMDUTL",29,0)
 N CNT,IEN,REPIEN,TYPE
"RTN","PXRMDUTL",30,0)
 S CNT=0 F  S CNT=$O(^PXRMD(801.41,DIEN,10,CNT)) Q:CNT'>0  D
"RTN","PXRMDUTL",31,0)
 .S IEN=$P($G(^PXRMD(801.41,DIEN,10,CNT,0)),U,2) Q:IEN'>0
"RTN","PXRMDUTL",32,0)
 .S REPIEN=$P($G(^PXRMD(801.41,IEN,49)),U,3)
"RTN","PXRMDUTL",33,0)
 .I REPIEN>0 D DITEMAR(REPIEN,.ARRAY,.DARRAY,.DCNT)
"RTN","PXRMDUTL",34,0)
 .S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMDUTL",35,0)
 .I TYPE="G"!(TYPE="E") D DITEMAR(IEN,.ARRAY,.DARRAY,.DCNT)
"RTN","PXRMDUTL",36,0)
 .I '$D(DARRAY(IEN)) S DARRAY(IEN)="",DCNT=DCNT+1,ARRAY(DCNT,IEN)=""
"RTN","PXRMDUTL",37,0)
 I '$D(DARRAY(DIEN)) S DARRAY(DIEN)="",DCNT=DCNT+1,ARRAY(DCNT,DIEN)=""
"RTN","PXRMDUTL",38,0)
 Q
"RTN","PXRMDUTL",39,0)
 ;
"RTN","PXRMDUTL",40,0)
DMAKENAT(DA) ; sets the class field and renamed to the correct national format
"RTN","PXRMDUTL",41,0)
 N CLASS,DIE,DR,IEN,NAME,NEWNAME,PREFIX,TYPE
"RTN","PXRMDUTL",42,0)
 S NAME=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDUTL",43,0)
 I $E(NAME,1,3)="VA-"!($E(NAME,1,4)="PXRM") Q
"RTN","PXRMDUTL",44,0)
 S CLASS="N"
"RTN","PXRMDUTL",45,0)
 S DIE="^PXRMXD(801.41,"
"RTN","PXRMDUTL",46,0)
 S DR="100////^S X=CLASS"
"RTN","PXRMDUTL",47,0)
 D ^DIE
"RTN","PXRMDUTL",48,0)
 S TYPE=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDUTL",49,0)
 S PREFIX=$S(TYPE="R":"VA-",TYPE="G":"VA-",TYPE="E":"VA-",1:"PXRM ")
"RTN","PXRMDUTL",50,0)
 S NEWNAME=PREFIX_NAME
"RTN","PXRMDUTL",51,0)
 D RENAME^PXRMUTIL(801.41,NAME,NEWNAME)
"RTN","PXRMDUTL",52,0)
 Q
"RTN","PXRMDUTL",53,0)
 ;
"RTN","PXRMDUTL",54,0)
 ;=============================================================
"RTN","PXRMDUTL",55,0)
 ; Build an array of findings for dialog types
"RTN","PXRMDUTL",56,0)
 ; Input a string of characters for the dialog type field.
"RTN","PXRMDUTL",57,0)
 ;    example "EGS" = search element, groups, result groups
"RTN","PXRMDUTL",58,0)
 ; Output an array by finding types, Finding IEN, Dialog IEN, "F" or "A"
"RTN","PXRMDUTL",59,0)
 ;    example OUT("AUTTHF(",608,631,"F")=""
"RTN","PXRMDUTL",60,0)
FARRAY(OUTPUT,TYPES) ;
"RTN","PXRMDUTL",61,0)
 N AFIEN,AFIND,DIEN,FIND,NODE,OI,TYPE,X
"RTN","PXRMDUTL",62,0)
 F X=1:1:$L(TYPES)  S TYPE=$E(TYPES,X) D 
"RTN","PXRMDUTL",63,0)
 .S DIEN=""
"RTN","PXRMDUTL",64,0)
 .F  S DIEN=$O(^PXRMD(801.41,"TYPE",TYPE,DIEN)) Q:DIEN'>0  D
"RTN","PXRMDUTL",65,0)
 ..I TYPE="S" D  Q
"RTN","PXRMDUTL",66,0)
 ...S FIND=$P($G(^PXRMD(801.41,DIEN,50)),U)
"RTN","PXRMDUTL",67,0)
 ...I FIND'="" D SETGBL(.OUTPUT,DIEN,FIND_";YTT(601.71,","RG",0)
"RTN","PXRMDUTL",68,0)
 ..S NODE=$G(^PXRMD(801.41,DIEN,1))
"RTN","PXRMDUTL",69,0)
 ..S FIND=$P(NODE,U,5),OI=$P(NODE,U,7)
"RTN","PXRMDUTL",70,0)
 ..I FIND'="" D SETGBL(.OUTPUT,DIEN,FIND,"F",0)
"RTN","PXRMDUTL",71,0)
 ..I OI'="" D SETGBL(.OUTPUT,DIEN,OI_";ORD(101.43,","O",0)
"RTN","PXRMDUTL",72,0)
 ..S AFIND=""
"RTN","PXRMDUTL",73,0)
 ..F  S AFIND=$O(^PXRMD(801.41,DIEN,3,"B",AFIND)) Q:AFIND=""  D
"RTN","PXRMDUTL",74,0)
 ...S AFIEN=$O(^PXRMD(801.41,DIEN,3,"B",AFIND,""))
"RTN","PXRMDUTL",75,0)
 ...D SETGBL(.OUTPUT,DIEN,AFIND,"A",AFIEN)
"RTN","PXRMDUTL",76,0)
 Q
"RTN","PXRMDUTL",77,0)
 ;
"RTN","PXRMDUTL",78,0)
RTAXNAME(NAME) ;
"RTN","PXRMDUTL",79,0)
 I '$D(^PXD(811.2,"B",NAME)) Q NAME
"RTN","PXRMDUTL",80,0)
 N CNT,FOUND,RESULT,TEMP
"RTN","PXRMDUTL",81,0)
 S TEMP=NAME,CNT=0
"RTN","PXRMDUTL",82,0)
 I $L(NAME)>64 S TEMP=$E(NAME,1,60)
"RTN","PXRMDUTL",83,0)
 S TEMP=TEMP_"*"
"RTN","PXRMDUTL",84,0)
 I '$D(^PXD(811.2,"B",TEMP)) Q TEMP
"RTN","PXRMDUTL",85,0)
 S FOUND=0
"RTN","PXRMDUTL",86,0)
 F  D  Q:FOUND=1
"RTN","PXRMDUTL",87,0)
 .S CNT=CNT+1
"RTN","PXRMDUTL",88,0)
 .I '$D(^PXD(811.2,"B",TEMP_CNT)) S RESULT=TEMP_CNT,FOUND=1
"RTN","PXRMDUTL",89,0)
 Q RESULT
"RTN","PXRMDUTL",90,0)
 ;
"RTN","PXRMDUTL",91,0)
SETGBL(ARRAY,DIEN,VARP,LOC,IEN) ;
"RTN","PXRMDUTL",92,0)
 N FIEN,GBL
"RTN","PXRMDUTL",93,0)
 S GBL=$P(VARP,";",2),FIEN=$P(VARP,";")
"RTN","PXRMDUTL",94,0)
 I LOC="A" S ARRAY(GBL,FIEN,DIEN,LOC,IEN)="" Q
"RTN","PXRMDUTL",95,0)
 S ARRAY(GBL,FIEN,DIEN,LOC)=""
"RTN","PXRMDUTL",96,0)
 Q
"RTN","PXRMDUTL",97,0)
 ;
"RTN","PXRMDUTL",98,0)
NATCONV(DIEN) ; entry point to convert a local dialog to a national dialog
"RTN","PXRMDUTL",99,0)
 N ARRAY,IEN
"RTN","PXRMDUTL",100,0)
 D DITEMAR(DIEN,.ARRAY)
"RTN","PXRMDUTL",101,0)
 S IEN=0 F  S IEN=$O(ARRAY(IEN)) Q:IEN'>0  D
"RTN","PXRMDUTL",102,0)
 .D DMAKENAT(IEN)
"RTN","PXRMDUTL",103,0)
 D DMAKENAT(DIEN)
"RTN","PXRMDUTL",104,0)
 Q
"RTN","PXRMDUTL",105,0)
 ;
"RTN","PXRMEFED")
0^73^B10725830
"RTN","PXRMEFED",1,0)
PXRMEFED ; SLC/PJH - Extract Counting Editor ;01/28/2013
"RTN","PXRMEFED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMEFED",3,0)
 ;
"RTN","PXRMEFED",4,0)
 ;Main entry point for PXRM COUNTING RULE EDIT/DISPLAY
"RTN","PXRMEFED",5,0)
START(IEN) ;
"RTN","PXRMEFED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEFED",7,0)
 S X="IORESET"
"RTN","PXRMEFED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEFED",9,0)
 S VALMCNT=0
"RTN","PXRMEFED",10,0)
 D EN^VALM("PXRM EXTRACT COUNT RULE EDIT")
"RTN","PXRMEFED",11,0)
 Q
"RTN","PXRMEFED",12,0)
 ;
"RTN","PXRMEFED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEFED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEFED",15,0)
 S FLDS="[PXRM EXTRACT COUNTING]"
"RTN","PXRMEFED",16,0)
 S GBL="^TMP(""PXRMEFED"",$J)"
"RTN","PXRMEFED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEFED",18,0)
 S PXRMROOT="^PXRM(810.7,"
"RTN","PXRMEFED",19,0)
 K ^TMP("PXRMEFED",$J)
"RTN","PXRMEFED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEFED",21,0)
 S VALMCNT=$O(^TMP("PXRMEFED",$J,""),-1)
"RTN","PXRMEFED",22,0)
 Q
"RTN","PXRMEFED",23,0)
 ;
"RTN","PXRMEFED",24,0)
ENTRY ;Entry code
"RTN","PXRMEFED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",26,0)
 Q
"RTN","PXRMEFED",27,0)
 ;
"RTN","PXRMEFED",28,0)
EXIT ;Exit code
"RTN","PXRMEFED",29,0)
 K ^TMP("PXRMEFED",$J)
"RTN","PXRMEFED",30,0)
 K ^TMP("PXRMEFEDH",$J)
"RTN","PXRMEFED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEFED",32,0)
 D FULL^VALM1
"RTN","PXRMEFED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEFED",34,0)
 Q
"RTN","PXRMEFED",35,0)
 ;
"RTN","PXRMEFED",36,0)
HDR ; Header code
"RTN","PXRMEFED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEFED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFED",39,0)
 Q
"RTN","PXRMEFED",40,0)
 ;
"RTN","PXRMEFED",41,0)
HLP ;Help code
"RTN","PXRMEFED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEFED",43,0)
 S SUB="PXRMEFEDH"
"RTN","PXRMEFED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEFED",45,0)
 Q
"RTN","PXRMEFED",46,0)
 ;
"RTN","PXRMEFED",47,0)
INIT ;Init
"RTN","PXRMEFED",48,0)
 S VALMCNT=0
"RTN","PXRMEFED",49,0)
 Q
"RTN","PXRMEFED",50,0)
 ;
"RTN","PXRMEFED",51,0)
PEXIT ;Protocol exit code
"RTN","PXRMEFED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEFED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEFED",54,0)
 Q
"RTN","PXRMEFED",55,0)
 ;
"RTN","PXRMEFED",56,0)
ADD ;Add Rule
"RTN","PXRMEFED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEFED",58,0)
 S HED="ADD EXTRACT COUNTING RULE",DONE=0
"RTN","PXRMEFED",59,0)
 W IORESET,!
"RTN","PXRMEFED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEFED",61,0)
 .S DIC="^PXRM(810.7,"
"RTN","PXRMEFED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEFED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEFED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.7
"RTN","PXRMEFED",65,0)
 .S DIC("A")="Select EXTRACT COUNTING RULE to add: "
"RTN","PXRMEFED",66,0)
 .D ^DIC
"RTN","PXRMEFED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEFED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEFED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEFED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract counting rule already exists" Q
"RTN","PXRMEFED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEFED",72,0)
 .;Edit Extract Counting Rule
"RTN","PXRMEFED",73,0)
 .D EDIT(DA)
"RTN","PXRMEFED",74,0)
 .S:$D(DA) DONE=1
"RTN","PXRMEFED",75,0)
 Q
"RTN","PXRMEFED",76,0)
 ;
"RTN","PXRMEFED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEFED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.7,",DA) D  Q
"RTN","PXRMEFED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEFED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEFED",81,0)
 ;
"RTN","PXRMEFED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEFED",83,0)
 W IORESET
"RTN","PXRMEFED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEFED",85,0)
 ;Save checksum
"RTN","PXRMEFED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.7,DA)
"RTN","PXRMEFED",87,0)
 ;
"RTN","PXRMEFED",88,0)
 S DIE="^PXRM(810.7,",DIDEL=810.7,ODA=DA,DR="[PXRM EXTRACT COUNTING]"
"RTN","PXRMEFED",89,0)
 ;
"RTN","PXRMEFED",90,0)
 ;Edit extract counting rule then unlock
"RTN","PXRMEFED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEFED",92,0)
 ;Deleted ???
"RTN","PXRMEFED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEFED",94,0)
 ;
"RTN","PXRMEFED",95,0)
 ;Update edit history
"RTN","PXRMEFED",96,0)
 D
"RTN","PXRMEFED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.7,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEFED",98,0)
 .D SEHIST^PXRMUTIL(810.7,DIC,DA)
"RTN","PXRMEFED",99,0)
 ;
"RTN","PXRMEFED",100,0)
 S VALMBCK="R"
"RTN","PXRMEFED",101,0)
 Q
"RTN","PXRMEFED",102,0)
 ;
"RTN","PXRMEFED",103,0)
EFEDIT ;Edit Rule
"RTN","PXRMEFED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEFED",105,0)
 ;
"RTN","PXRMEFED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEFED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",108,0)
 Q
"RTN","PXRMEFED",109,0)
 ;
"RTN","PXRMEFED",110,0)
EFGRP ;Counting Groups
"RTN","PXRMEFED",111,0)
 D START^PXRMEGM(IEN)
"RTN","PXRMEFED",112,0)
 ;
"RTN","PXRMEFED",113,0)
 ;Rebiuld Workfile
"RTN","PXRMEFED",114,0)
 D BLDLIST(IEN)
"RTN","PXRMEFED",115,0)
 ;
"RTN","PXRMEFED",116,0)
 S VALMBCK="R"
"RTN","PXRMEFED",117,0)
 Q
"RTN","PXRMEFED",118,0)
 ;
"RTN","PXRMEFED",119,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEFED",120,0)
 L +^PXRM(810.7,DA):DILOCKTM I  Q 1
"RTN","PXRMEFED",121,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEFED",122,0)
 ;
"RTN","PXRMEFED",123,0)
SCREEN ;validate rule type
"RTN","PXRMEFED",124,0)
 Q
"RTN","PXRMEFED",125,0)
 ;
"RTN","PXRMEFED",126,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEFED",127,0)
 L -^PXRM(810.7,DA)
"RTN","PXRMEFED",128,0)
 Q
"RTN","PXRMEGED")
0^74^B10459294
"RTN","PXRMEGED",1,0)
PXRMEGED ; SLC/PJH - Extract Counting Group Editor ;01/28/2013
"RTN","PXRMEGED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMEGED",3,0)
 ;
"RTN","PXRMEGED",4,0)
 ;Main entry point for PXRM EXTRACT COUNTING GRP EDIT
"RTN","PXRMEGED",5,0)
START(IEN) ;
"RTN","PXRMEGED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEGED",7,0)
 S X="IORESET"
"RTN","PXRMEGED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEGED",9,0)
 S VALMCNT=0
"RTN","PXRMEGED",10,0)
 D EN^VALM("PXRM EXTRACT COUNTING GRP EDIT")
"RTN","PXRMEGED",11,0)
 Q
"RTN","PXRMEGED",12,0)
 ;
"RTN","PXRMEGED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEGED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEGED",15,0)
 S FLDS="[PXRM EXTRACT COUNTING GROUP]"
"RTN","PXRMEGED",16,0)
 S GBL="^TMP(""PXRMEGED"",$J)"
"RTN","PXRMEGED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEGED",18,0)
 S PXRMROOT="^PXRM(810.8,"
"RTN","PXRMEGED",19,0)
 K ^TMP("PXRMEGED",$J)
"RTN","PXRMEGED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEGED",21,0)
 S VALMCNT=$O(^TMP("PXRMEGED",$J,""),-1)
"RTN","PXRMEGED",22,0)
 Q
"RTN","PXRMEGED",23,0)
 ;
"RTN","PXRMEGED",24,0)
ENTRY ;Entry code
"RTN","PXRMEGED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEGED",26,0)
 Q
"RTN","PXRMEGED",27,0)
 ;
"RTN","PXRMEGED",28,0)
EXIT ;Exit code
"RTN","PXRMEGED",29,0)
 K ^TMP("PXRMEGED",$J)
"RTN","PXRMEGED",30,0)
 K ^TMP("PXRMEGEDH",$J)
"RTN","PXRMEGED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEGED",32,0)
 D FULL^VALM1
"RTN","PXRMEGED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEGED",34,0)
 Q
"RTN","PXRMEGED",35,0)
 ;
"RTN","PXRMEGED",36,0)
HDR ; Header code
"RTN","PXRMEGED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEGED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEGED",39,0)
 Q
"RTN","PXRMEGED",40,0)
 ;
"RTN","PXRMEGED",41,0)
HLP ;Help code
"RTN","PXRMEGED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEGED",43,0)
 S SUB="PXRMEGEDH"
"RTN","PXRMEGED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEGED",45,0)
 Q
"RTN","PXRMEGED",46,0)
 ;
"RTN","PXRMEGED",47,0)
INIT ;Init
"RTN","PXRMEGED",48,0)
 S VALMCNT=0
"RTN","PXRMEGED",49,0)
 Q
"RTN","PXRMEGED",50,0)
 ;
"RTN","PXRMEGED",51,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEGED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEGED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEGED",54,0)
 Q
"RTN","PXRMEGED",55,0)
 ;
"RTN","PXRMEGED",56,0)
ADD ;Add Rule
"RTN","PXRMEGED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEGED",58,0)
 S HED="ADD EXTRACT COUNTING GROUP",DONE=0
"RTN","PXRMEGED",59,0)
 W IORESET,!
"RTN","PXRMEGED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEGED",61,0)
 .S DIC="^PXRM(810.8,"
"RTN","PXRMEGED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEGED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEGED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.8
"RTN","PXRMEGED",65,0)
 .S DIC("A")="Select EXTRACT COUNTING GROUP to add: "
"RTN","PXRMEGED",66,0)
 .D ^DIC
"RTN","PXRMEGED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEGED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEGED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEGED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract counting group name already exists" Q
"RTN","PXRMEGED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEGED",72,0)
 .;Edit Extract Counting Group
"RTN","PXRMEGED",73,0)
 .D EDIT(DA)
"RTN","PXRMEGED",74,0)
 .S:$D(DA) DONE=1,GROUP(DA)=""
"RTN","PXRMEGED",75,0)
 Q
"RTN","PXRMEGED",76,0)
 ;
"RTN","PXRMEGED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEGED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.8,",DA) D  Q
"RTN","PXRMEGED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEGED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEGED",81,0)
 ;
"RTN","PXRMEGED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEGED",83,0)
 W IORESET
"RTN","PXRMEGED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEGED",85,0)
 ;Save checksum
"RTN","PXRMEGED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.8,DA)
"RTN","PXRMEGED",87,0)
 ;
"RTN","PXRMEGED",88,0)
 S DIE="^PXRM(810.8,",DIDEL=810.8,ODA=DA,DR="[PXRM EXTRACT COUNTING GROUP]"
"RTN","PXRMEGED",89,0)
 ;
"RTN","PXRMEGED",90,0)
 ;Edit extract counting group then unlock
"RTN","PXRMEGED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEGED",92,0)
 ;Deleted ???
"RTN","PXRMEGED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEGED",94,0)
 ;
"RTN","PXRMEGED",95,0)
 ;Update edit history
"RTN","PXRMEGED",96,0)
 D
"RTN","PXRMEGED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.8,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEGED",98,0)
 .D SEHIST^PXRMUTIL(810.8,DIC,DA)
"RTN","PXRMEGED",99,0)
 ;
"RTN","PXRMEGED",100,0)
 S VALMBCK="R"
"RTN","PXRMEGED",101,0)
 Q
"RTN","PXRMEGED",102,0)
 ;
"RTN","PXRMEGED",103,0)
EGEDIT ;Edit Rule
"RTN","PXRMEGED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEGED",105,0)
 ;
"RTN","PXRMEGED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEGED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEGED",108,0)
 Q
"RTN","PXRMEGED",109,0)
 ;
"RTN","PXRMEGED",110,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEGED",111,0)
 L +^PXRM(810.7,DA):DILOCKTM I  Q 1
"RTN","PXRMEGED",112,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEGED",113,0)
 ;
"RTN","PXRMEGED",114,0)
SCREEN ;validate rule type
"RTN","PXRMEGED",115,0)
 Q
"RTN","PXRMEGED",116,0)
 ;
"RTN","PXRMEGED",117,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEGED",118,0)
 L -^PXRM(810.7,DA)
"RTN","PXRMEGED",119,0)
 Q
"RTN","PXRMENOD")
0^106^B24879383
"RTN","PXRMENOD",1,0)
PXRMENOD ;SLC/PKR - Clinical Reminders "E" node routines. ;06/26/2013
"RTN","PXRMENOD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMENOD",3,0)
 ;
"RTN","PXRMENOD",4,0)
 ;========================================================
"RTN","PXRMENOD",5,0)
DEPLIST(IEN,DEP) ;Build the evaluation dependency list.
"RTN","PXRMENOD",6,0)
 N BDT,EDT,FI1,FI2,TEMP
"RTN","PXRMENOD",7,0)
 S FI1=0
"RTN","PXRMENOD",8,0)
 F  S FI1=+$O(^PXD(811.9,IEN,20,FI1)) Q:FI1=0  D
"RTN","PXRMENOD",9,0)
 . S TEMP=^PXD(811.9,IEN,20,FI1,0)
"RTN","PXRMENOD",10,0)
 . S BDT=$P(TEMP,U,8)
"RTN","PXRMENOD",11,0)
 . S EDT=$P(TEMP,U,11)
"RTN","PXRMENOD",12,0)
 . S DEP(FI1)=""
"RTN","PXRMENOD",13,0)
 . I BDT["FIEVAL" S FI2=$E(BDT,8,$F(BDT,",")-2),DEP(FI1,FI2)="BDT"
"RTN","PXRMENOD",14,0)
 . I EDT["FIEVAL" S FI2=$E(EDT,8,$F(EDT,",")-2),DEP(FI1,FI2)="EDT"
"RTN","PXRMENOD",15,0)
 Q
"RTN","PXRMENOD",16,0)
 ;
"RTN","PXRMENOD",17,0)
 ;========================================================
"RTN","PXRMENOD",18,0)
EVORDER(IEN,DEP,EORDER,NODEP,ERROR) ;Determine the evaluation order for findings
"RTN","PXRMENOD",19,0)
 ;that depend of the date of other findings. The structure of EORDER
"RTN","PXRMENOD",20,0)
 ;is EORDER(N)=finding number, where N is the evaluation order.
"RTN","PXRMENOD",21,0)
 N CLIST,DONE,IND,JND,KND,ONLIST,NUM,TEXT
"RTN","PXRMENOD",22,0)
 S IND="",ERROR=0
"RTN","PXRMENOD",23,0)
 F  S IND=$O(DEP(IND)) Q:IND=""  D
"RTN","PXRMENOD",24,0)
 .;If finding IND has no dependencies, i.e., $D=1 quit. If there are
"RTN","PXRMENOD",25,0)
 .;dependencies $D=10.
"RTN","PXRMENOD",26,0)
 . I $D(DEP(IND))=1 Q
"RTN","PXRMENOD",27,0)
 . S JND=IND-1
"RTN","PXRMENOD",28,0)
 . F  S JND=$O(DEP(IND,JND)) Q:JND=""  D
"RTN","PXRMENOD",29,0)
 ..;Make sure dependent finding exists.
"RTN","PXRMENOD",30,0)
 .. I '$D(^PXD(811.9,IEN,20,JND,0)) D
"RTN","PXRMENOD",31,0)
 ... K TEXT
"RTN","PXRMENOD",32,0)
 ... S TEXT(1)="Error: date of finding "_IND_" depends of date of finding "_JND_" and finding "_JND_" does"
"RTN","PXRMENOD",33,0)
 ... S TEXT(2)="       not exist."
"RTN","PXRMENOD",34,0)
 ... D EN^DDIOL(.TEXT)
"RTN","PXRMENOD",35,0)
 ... S ERROR=1
"RTN","PXRMENOD",36,0)
 ..;Check for reflective dependencies.
"RTN","PXRMENOD",37,0)
 .. I $D(DEP(JND,IND)) D
"RTN","PXRMENOD",38,0)
 ... K TEXT
"RTN","PXRMENOD",39,0)
 ... S TEXT(1)="Error: date of finding "_IND_" depends of date of finding "_JND_" and"
"RTN","PXRMENOD",40,0)
 ... S TEXT(2)="       date of finding "_JND_" depends on date of finding "_IND
"RTN","PXRMENOD",41,0)
 ... D EN^DDIOL(.TEXT)
"RTN","PXRMENOD",42,0)
 ... S ERROR=1
"RTN","PXRMENOD",43,0)
 I ERROR Q
"RTN","PXRMENOD",44,0)
 ;No errors found, build evaluation order lists.
"RTN","PXRMENOD",45,0)
 ;First check for findings with no dependencies.
"RTN","PXRMENOD",46,0)
 S IND=""
"RTN","PXRMENOD",47,0)
 F  S IND=$O(DEP(IND)) Q:IND=""  I $D(DEP(IND))=1 S NODEP(IND)=""
"RTN","PXRMENOD",48,0)
 ;Build the dependency list.
"RTN","PXRMENOD",49,0)
 S IND="",NUM=0
"RTN","PXRMENOD",50,0)
 F  S IND=$O(DEP(IND)) Q:IND=""  D
"RTN","PXRMENOD",51,0)
 . I $D(NODEP(IND)) Q
"RTN","PXRMENOD",52,0)
 . S JND=""
"RTN","PXRMENOD",53,0)
 . F  S JND=$O(DEP(IND,JND)) Q:JND=""  D
"RTN","PXRMENOD",54,0)
 .. I $D(NODEP(JND)) Q
"RTN","PXRMENOD",55,0)
 .. S KND="",ONLIST=0
"RTN","PXRMENOD",56,0)
 .. F  S KND=$O(EORDER(KND)) Q:KND=""  I EORDER(KND)=JND S ONLIST=1
"RTN","PXRMENOD",57,0)
 .. I 'ONLIST S NUM=NUM+1,EORDER(NUM)=JND
"RTN","PXRMENOD",58,0)
 . S KND="",ONLIST=0
"RTN","PXRMENOD",59,0)
 . F  S KND=$O(EORDER(KND)) Q:KND=""  I EORDER(KND)=IND S ONLIST=1
"RTN","PXRMENOD",60,0)
 . I 'ONLIST S NUM=NUM+1,EORDER(NUM)=IND
"RTN","PXRMENOD",61,0)
 I '$D(EORDER) Q
"RTN","PXRMENOD",62,0)
 ;Check for circular dependencies.
"RTN","PXRMENOD",63,0)
 S DONE=0
"RTN","PXRMENOD",64,0)
 S IND=EORDER(1),CLIST(IND)=""
"RTN","PXRMENOD",65,0)
 F  Q:DONE  D
"RTN","PXRMENOD",66,0)
 . S JND=$O(DEP(IND,""))
"RTN","PXRMENOD",67,0)
 . I JND="" S DONE=1 Q
"RTN","PXRMENOD",68,0)
 . I $D(CLIST(JND)) S (DONE,ERROR)=1 Q
"RTN","PXRMENOD",69,0)
 . S CLIST(JND)=""
"RTN","PXRMENOD",70,0)
 . S IND=JND
"RTN","PXRMENOD",71,0)
 I ERROR D
"RTN","PXRMENOD",72,0)
 . S TEXT="Error: found circular redundancy."
"RTN","PXRMENOD",73,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMENOD",74,0)
 . S IND=""
"RTN","PXRMENOD",75,0)
 . F  S IND=$O(CLIST(IND)) Q:IND=""  D
"RTN","PXRMENOD",76,0)
 .. S JND=$O(DEP(IND,""))
"RTN","PXRMENOD",77,0)
 .. S TEXT=" Finding "_IND_" depends on finding "_JND
"RTN","PXRMENOD",78,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMENOD",79,0)
 Q
"RTN","PXRMENOD",80,0)
 ;
"RTN","PXRMENOD",81,0)
 ;========================================================
"RTN","PXRMENOD",82,0)
KENODE(X,DA) ;Kill the "E" node in the finding multiple for terms.
"RTN","PXRMENOD",83,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",84,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",85,0)
 N DAS,GLOBAL,IEN
"RTN","PXRMENOD",86,0)
 S IEN=$P(X,";",1)
"RTN","PXRMENOD",87,0)
 S GLOBAL=$P(X,";",2)
"RTN","PXRMENOD",88,0)
 I GLOBAL="LAB(60," S IEN=$$LABDAS(IEN)
"RTN","PXRMENOD",89,0)
 S DAS=IEN
"RTN","PXRMENOD",90,0)
 I DAS="" Q
"RTN","PXRMENOD",91,0)
 K ^PXRMD(811.5,DA(1),20,"E",GLOBAL,DAS,DA)
"RTN","PXRMENOD",92,0)
 Q
"RTN","PXRMENOD",93,0)
 ;
"RTN","PXRMENOD",94,0)
 ;========================================================
"RTN","PXRMENOD",95,0)
KENODES(XX,DA) ;Kill the "E" and "EDEP" nodes in the finding multiple for
"RTN","PXRMENOD",96,0)
 ;definitions
"RTN","PXRMENOD",97,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",98,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",99,0)
 N DAS,GLOBAL,IEN,IND
"RTN","PXRMENOD",100,0)
 S IEN=$P(XX,";",1)
"RTN","PXRMENOD",101,0)
 S GLOBAL=$P(XX,";",2)
"RTN","PXRMENOD",102,0)
 I GLOBAL="LAB(60," S IEN=$$LABDAS(IEN)
"RTN","PXRMENOD",103,0)
 S DAS=IEN
"RTN","PXRMENOD",104,0)
 I DAS="" Q
"RTN","PXRMENOD",105,0)
 K ^PXD(811.9,DA(1),20,"E",GLOBAL,DAS,DA)
"RTN","PXRMENOD",106,0)
 S IND=0
"RTN","PXRMENOD",107,0)
 F  S IND=$O(^PXD(811.9,DA(1),20,"EDEP",IND)) Q:IND=""  D
"RTN","PXRMENOD",108,0)
 . I '$D(^PXD(811.9,DA(1),20,"EDEP",IND,GLOBAL)) Q
"RTN","PXRMENOD",109,0)
 . K ^PXD(811.9,DA(1),20,"EDEP",IND,GLOBAL,DAS,DA)
"RTN","PXRMENOD",110,0)
 Q
"RTN","PXRMENOD",111,0)
 ;
"RTN","PXRMENOD",112,0)
 ;========================================================
"RTN","PXRMENOD",113,0)
LABDAS(IEN) ;Determine the DAS for lab findings.
"RTN","PXRMENOD",114,0)
 N SUB
"RTN","PXRMENOD",115,0)
 ;DBIA #91-A
"RTN","PXRMENOD",116,0)
 S SUB=$P(^LAB(60,IEN,0),U,4)
"RTN","PXRMENOD",117,0)
 I SUB="CH" Q IEN
"RTN","PXRMENOD",118,0)
 I (SUB="BB")!(SUB="WK") Q ""
"RTN","PXRMENOD",119,0)
 I SUB="MI" Q "M;T;"_IEN
"RTN","PXRMENOD",120,0)
 ;All other SUB values: AU, CY, EM, SP
"RTN","PXRMENOD",121,0)
 Q "A;T;"_IEN
"RTN","PXRMENOD",122,0)
 ;
"RTN","PXRMENOD",123,0)
 ;========================================================
"RTN","PXRMENOD",124,0)
SENODE(X,DA) ;Set the "E" node in the finding multiple for terms.
"RTN","PXRMENOD",125,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",126,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",127,0)
 N DAS,GLOBAL,IEN
"RTN","PXRMENOD",128,0)
 S IEN=$P(X,";",1)
"RTN","PXRMENOD",129,0)
 S GLOBAL=$P(X,";",2)
"RTN","PXRMENOD",130,0)
 I GLOBAL="LAB(60," S IEN=$$LABDAS(IEN)
"RTN","PXRMENOD",131,0)
 S DAS=IEN
"RTN","PXRMENOD",132,0)
 I DAS="" Q
"RTN","PXRMENOD",133,0)
 S ^PXRMD(811.5,DA(1),20,"E",GLOBAL,DAS,DA)=""
"RTN","PXRMENOD",134,0)
 Q
"RTN","PXRMENOD",135,0)
 ;
"RTN","PXRMENOD",136,0)
 ;========================================================
"RTN","PXRMENOD",137,0)
SENODES(X,DA) ;Set the "E" and "EDEP" node in the finding multiple for
"RTN","PXRMENOD",138,0)
 ;definitions. X(1)=.01, X(2)=BEGINNING DATE/TIME, X(3)=ENDING DATE/TIME
"RTN","PXRMENOD",139,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMENOD",140,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMENOD",141,0)
 N DAS,DEP,EORDER,ERROR,FBDT,FEDT,FI,GLOBAL,IEN,IND,JND,NODEP,PT01
"RTN","PXRMENOD",142,0)
 ;Build dependency list.
"RTN","PXRMENOD",143,0)
 D DEPLIST(DA(1),.DEP)
"RTN","PXRMENOD",144,0)
 D EVORDER(DA(1),.DEP,.EORDER,.NODEP,.ERROR)
"RTN","PXRMENOD",145,0)
 ;If EVORDER returns an error quit.
"RTN","PXRMENOD",146,0)
 I ERROR Q
"RTN","PXRMENOD",147,0)
 K ^PXD(811.9,DA(1),20,"E"),^PXD(811.9,DA(1),20,"EDEP")
"RTN","PXRMENOD",148,0)
 ;Build the "E" index.
"RTN","PXRMENOD",149,0)
 S IND=""
"RTN","PXRMENOD",150,0)
 F  S IND=$O(NODEP(IND)) Q:IND=""  D
"RTN","PXRMENOD",151,0)
 . S PT01=$P(^PXD(811.9,DA(1),20,IND,0),U,1)
"RTN","PXRMENOD",152,0)
 . S IEN=$P(PT01,";",1)
"RTN","PXRMENOD",153,0)
 . S GLOBAL=$P(PT01,";",2)
"RTN","PXRMENOD",154,0)
 . I GLOBAL="LAB(60," S IEN=$$LABDAS(IEN)
"RTN","PXRMENOD",155,0)
 . S DAS=IEN
"RTN","PXRMENOD",156,0)
 . I DAS="" Q
"RTN","PXRMENOD",157,0)
 . S ^PXD(811.9,DA(1),20,"E",GLOBAL,DAS,IND)=""
"RTN","PXRMENOD",158,0)
 ;Build the "EDEP" index.
"RTN","PXRMENOD",159,0)
 S IND=0
"RTN","PXRMENOD",160,0)
 F  S IND=$O(EORDER(IND)) Q:IND=""  D
"RTN","PXRMENOD",161,0)
 . S FI=EORDER(IND)
"RTN","PXRMENOD",162,0)
 . S JND=0,(FBDT,FEDT)=""
"RTN","PXRMENOD",163,0)
 . F  S JND=$O(DEP(FI,JND)) Q:JND=""  D
"RTN","PXRMENOD",164,0)
 .. I DEP(FI,JND)="BDT" S FBDT=JND
"RTN","PXRMENOD",165,0)
 .. I DEP(FI,JND)="EDT" S FEDT=JND
"RTN","PXRMENOD",166,0)
 . S PT01=$P(^PXD(811.9,DA(1),20,FI,0),U,1)
"RTN","PXRMENOD",167,0)
 . S IEN=$P(PT01,";",1)
"RTN","PXRMENOD",168,0)
 . S GLOBAL=$P(PT01,";",2)
"RTN","PXRMENOD",169,0)
 . I GLOBAL="LAB(60," S IEN=$$LABDAS(IEN)
"RTN","PXRMENOD",170,0)
 . S DAS=IEN
"RTN","PXRMENOD",171,0)
 . I DAS="" Q
"RTN","PXRMENOD",172,0)
 . S ^PXD(811.9,DA(1),20,"EDEP",IND,GLOBAL,DAS,FI)=FBDT_U_FEDT
"RTN","PXRMENOD",173,0)
 Q
"RTN","PXRMENOD",174,0)
 ;
"RTN","PXRMEPED")
0^75^B10154511
"RTN","PXRMEPED",1,0)
PXRMEPED ; SLC/PJH - Extract Definition Editor ;01/28/2013
"RTN","PXRMEPED",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMEPED",3,0)
 ;
"RTN","PXRMEPED",4,0)
 ;Main entry point for PXRM EXTRACT DEFINITION EDIT/DISPLAY
"RTN","PXRMEPED",5,0)
START(IEN) ;
"RTN","PXRMEPED",6,0)
 N PXRMDONE,VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEPED",7,0)
 S X="IORESET"
"RTN","PXRMEPED",8,0)
 D ENDR^%ZISS
"RTN","PXRMEPED",9,0)
 S VALMCNT=0
"RTN","PXRMEPED",10,0)
 D EN^VALM("PXRM EXTRACT DEFINITION EDIT")
"RTN","PXRMEPED",11,0)
 Q
"RTN","PXRMEPED",12,0)
 ;
"RTN","PXRMEPED",13,0)
BLDLIST(IEN) ;Build workfile
"RTN","PXRMEPED",14,0)
 N FLDS,GBL,PXRMROOT
"RTN","PXRMEPED",15,0)
 S FLDS="[PXRM EXTRACT DEFINITION]"
"RTN","PXRMEPED",16,0)
 S GBL="^TMP(""PXRMEPED"",$J)"
"RTN","PXRMEPED",17,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEPED",18,0)
 S PXRMROOT="^PXRM(810.2,"
"RTN","PXRMEPED",19,0)
 K ^TMP("PXRMLRED",$J)
"RTN","PXRMEPED",20,0)
 D DIP^PXRMUTIL(GBL,IEN,PXRMROOT,FLDS)
"RTN","PXRMEPED",21,0)
 S VALMCNT=$O(^TMP("PXRMEPED",$J,""),-1)
"RTN","PXRMEPED",22,0)
 Q
"RTN","PXRMEPED",23,0)
 ;
"RTN","PXRMEPED",24,0)
ENTRY ;Entry code
"RTN","PXRMEPED",25,0)
 D BLDLIST(IEN)
"RTN","PXRMEPED",26,0)
 Q
"RTN","PXRMEPED",27,0)
 ;
"RTN","PXRMEPED",28,0)
EXIT ;Exit code
"RTN","PXRMEPED",29,0)
 K ^TMP("PXRMEPED",$J)
"RTN","PXRMEPED",30,0)
 K ^TMP("PXRMEPEDH",$J)
"RTN","PXRMEPED",31,0)
 D CLEAN^VALM10
"RTN","PXRMEPED",32,0)
 D FULL^VALM1
"RTN","PXRMEPED",33,0)
 S VALMBCK="Q"
"RTN","PXRMEPED",34,0)
 Q
"RTN","PXRMEPED",35,0)
 ;
"RTN","PXRMEPED",36,0)
HDR ; Header code
"RTN","PXRMEPED",37,0)
 S VALMHDR(1)=""
"RTN","PXRMEPED",38,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPED",39,0)
 Q
"RTN","PXRMEPED",40,0)
 ;
"RTN","PXRMEPED",41,0)
HLP ;Help code
"RTN","PXRMEPED",42,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMEPED",43,0)
 S SUB="PXRMEPEDH"
"RTN","PXRMEPED",44,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMEPED",45,0)
 Q
"RTN","PXRMEPED",46,0)
 ;
"RTN","PXRMEPED",47,0)
INIT ;Init
"RTN","PXRMEPED",48,0)
 S VALMCNT=0
"RTN","PXRMEPED",49,0)
 Q
"RTN","PXRMEPED",50,0)
 ;
"RTN","PXRMEPED",51,0)
PEXIT ;Protocol exit code
"RTN","PXRMEPED",52,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEPED",53,0)
 ;Reset after page up/down etc
"RTN","PXRMEPED",54,0)
 Q
"RTN","PXRMEPED",55,0)
 ;
"RTN","PXRMEPED",56,0)
ADD ;Add Rule
"RTN","PXRMEPED",57,0)
 N DA,DIC,DONE,DTOUT,DUOUT,DLAYGO,HED,Y
"RTN","PXRMEPED",58,0)
 S HED="ADD EXTRACT DEFINITION",DONE=0
"RTN","PXRMEPED",59,0)
 W IORESET,!
"RTN","PXRMEPED",60,0)
 F  D  Q:$D(DTOUT)  Q:DONE
"RTN","PXRMEPED",61,0)
 .S DIC="^PXRM(810.2,"
"RTN","PXRMEPED",62,0)
 .;Set the starting place for additions.
"RTN","PXRMEPED",63,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMEPED",64,0)
 .S DIC(0)="AELMQ",DLAYGO=810.2
"RTN","PXRMEPED",65,0)
 .S DIC("A")="Select EXTRACT DEFINITION to add: "
"RTN","PXRMEPED",66,0)
 .D ^DIC
"RTN","PXRMEPED",67,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMEPED",68,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMEPED",69,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMEPED",70,0)
 .I $P(Y,U,3)'=1 W !,"This extract definition name already exists" Q
"RTN","PXRMEPED",71,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMEPED",72,0)
 .;Edit Extract Definition
"RTN","PXRMEPED",73,0)
 .D EDIT(DA)
"RTN","PXRMEPED",74,0)
 .S:$D(DA) DONE=1
"RTN","PXRMEPED",75,0)
 Q
"RTN","PXRMEPED",76,0)
 ;
"RTN","PXRMEPED",77,0)
EDIT(DA) ;Edit Rule
"RTN","PXRMEPED",78,0)
 I '$$VEDIT^PXRMUTIL("^PXRM(810.2,",DA) D  Q
"RTN","PXRMEPED",79,0)
 .W !!,?5,"VA- and national class rules may not be edited" H 2
"RTN","PXRMEPED",80,0)
 .S VALMBCK="R"
"RTN","PXRMEPED",81,0)
 ;
"RTN","PXRMEPED",82,0)
 Q:'$$LOCK(DA)
"RTN","PXRMEPED",83,0)
 W IORESET
"RTN","PXRMEPED",84,0)
 N CS1,CS2,DIC,DIDEL,DIE,DR,DTOUT,DUOUT,ODA,Y
"RTN","PXRMEPED",85,0)
 ;Save checksum
"RTN","PXRMEPED",86,0)
 S CS1=$$FILE^PXRMEXCS(810.2,DA)
"RTN","PXRMEPED",87,0)
 ;
"RTN","PXRMEPED",88,0)
 S DIE="^PXRM(810.2,",DIDEL=810.2,ODA=DA,DR="[PXRM EXTRACT DEFINITION]"
"RTN","PXRMEPED",89,0)
 ;
"RTN","PXRMEPED",90,0)
 ;Edit extract definition then unlock
"RTN","PXRMEPED",91,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMEPED",92,0)
 ;Deleted ???
"RTN","PXRMEPED",93,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMEPED",94,0)
 ;
"RTN","PXRMEPED",95,0)
 ;Update edit history
"RTN","PXRMEPED",96,0)
 D
"RTN","PXRMEPED",97,0)
 .S CS2=$$FILE^PXRMEXCS(810.2,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMEPED",98,0)
 .D SEHIST^PXRMUTIL(810.2,DIC,DA)
"RTN","PXRMEPED",99,0)
 ;
"RTN","PXRMEPED",100,0)
 S VALMBCK="R"
"RTN","PXRMEPED",101,0)
 Q
"RTN","PXRMEPED",102,0)
 ;
"RTN","PXRMEPED",103,0)
EPEDIT ;Edit Rule
"RTN","PXRMEPED",104,0)
 D EDIT(IEN) Q:VALMBCK="Q"
"RTN","PXRMEPED",105,0)
 ;
"RTN","PXRMEPED",106,0)
 ;Rebuild Workfile
"RTN","PXRMEPED",107,0)
 D BLDLIST(IEN)
"RTN","PXRMEPED",108,0)
 Q
"RTN","PXRMEPED",109,0)
 ;
"RTN","PXRMEPED",110,0)
LOCK(DA) ;Lock the record
"RTN","PXRMEPED",111,0)
 L +^PXRM(810.2,DA):DILOCKTM I  Q 1
"RTN","PXRMEPED",112,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMEPED",113,0)
 ;
"RTN","PXRMEPED",114,0)
SCREEN ;validate rule type
"RTN","PXRMEPED",115,0)
 Q
"RTN","PXRMEPED",116,0)
 ;
"RTN","PXRMEPED",117,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMEPED",118,0)
 L -^PXRM(810.2,DA)
"RTN","PXRMEPED",119,0)
 Q
"RTN","PXRMETH")
0^124^B101071654
"RTN","PXRMETH",1,0)
PXRMETH ; SLC/PJH - Reminder Extract History ;04/15/2014
"RTN","PXRMETH",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMETH",3,0)
 ;
"RTN","PXRMETH",4,0)
 ;Main entry point for PXRM EXTRACT HISTORY
"RTN","PXRMETH",5,0)
START(EDIEN) ;
"RTN","PXRMETH",6,0)
 ;EDIEN is the extract definition IEN.
"RTN","PXRMETH",7,0)
 N VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMETH",8,0)
 ;Details of last run
"RTN","PXRMETH",9,0)
 N DATA,NPERIOD,NSDATE,NTAS,PXRMVIEW
"RTN","PXRMETH",10,0)
 S DATA=$G(^PXRM(810.2,EDIEN,0))
"RTN","PXRMETH",11,0)
 S NPERIOD=$P(DATA,U,6),NSDATE=$P(DATA,U,7)
"RTN","PXRMETH",12,0)
 ;Default view is in date created order
"RTN","PXRMETH",13,0)
 S PXRMVIEW="D"
"RTN","PXRMETH",14,0)
 S X="IORESET"
"RTN","PXRMETH",15,0)
 D ENDR^%ZISS
"RTN","PXRMETH",16,0)
 S VALMCNT=0
"RTN","PXRMETH",17,0)
 D EN^VALM("PXRM EXTRACT HISTORY")
"RTN","PXRMETH",18,0)
 Q
"RTN","PXRMETH",19,0)
 ;
"RTN","PXRMETH",20,0)
DELETE ;Delete an extract, called by protocol PXRM EXTRACT SUMMARY DELETE.
"RTN","PXRMETH",21,0)
 N CLASS,IEN,IENLIST,IND
"RTN","PXRMETH",22,0)
 S IENLIST=$$LMSEL
"RTN","PXRMETH",23,0)
 F IND=1:1:$L(IENLIST,U) D
"RTN","PXRMETH",24,0)
 .S IEN=$P(IENLIST,U,IND)
"RTN","PXRMETH",25,0)
 .D DELETE^PXRMETXU(IEN)
"RTN","PXRMETH",26,0)
 ;Rebuild workfile
"RTN","PXRMETH",27,0)
 D BLDLIST^PXRMETH1(EDIEN)
"RTN","PXRMETH",28,0)
 ;Refresh
"RTN","PXRMETH",29,0)
 S VALMBCK="R"
"RTN","PXRMETH",30,0)
 Q
"RTN","PXRMETH",31,0)
 ;
"RTN","PXRMETH",32,0)
ENTRY ;Entry code
"RTN","PXRMETH",33,0)
 D BLDLIST^PXRMETH1(EDIEN),XQORM
"RTN","PXRMETH",34,0)
 Q
"RTN","PXRMETH",35,0)
 ;
"RTN","PXRMETH",36,0)
EXIT ;Exit code
"RTN","PXRMETH",37,0)
 K ^TMP("PXRMETH",$J)
"RTN","PXRMETH",38,0)
 K ^TMP("PXRMETHH",$J)
"RTN","PXRMETH",39,0)
 D CLEAN^VALM10
"RTN","PXRMETH",40,0)
 D FULL^VALM1
"RTN","PXRMETH",41,0)
 S VALMBCK="Q"
"RTN","PXRMETH",42,0)
 Q
"RTN","PXRMETH",43,0)
 ;
"RTN","PXRMETH",44,0)
EXTRACT(EDIEN) ;Run Extract/Transmission
"RTN","PXRMETH",45,0)
 ;Reset screen mode
"RTN","PXRMETH",46,0)
 W IORESET
"RTN","PXRMETH",47,0)
 ;Refresh on exit
"RTN","PXRMETH",48,0)
 S VALMBCK="R"
"RTN","PXRMETH",49,0)
 ;
"RTN","PXRMETH",50,0)
 ;Check is evaluation is disabled.
"RTN","PXRMETH",51,0)
 I $D(^XTMP("PXRM_DISEV",0)) D  Q
"RTN","PXRMETH",52,0)
 . W !,"Reminder evaluation is disabled, cannot start an Extract."
"RTN","PXRMETH",53,0)
 . H 2
"RTN","PXRMETH",54,0)
 ;
"RTN","PXRMETH",55,0)
 ;Get details from parameter file
"RTN","PXRMETH",56,0)
 N ANS,DATA,DUOUT,DTOUT,EDATE,EXSUMPUG,FREQ,MODE
"RTN","PXRMETH",57,0)
 N NAME,NAT,NEXT,PLISTPUG,RTN,REPL,STATUS,SNEXT,TEXT,XMIT
"RTN","PXRMETH",58,0)
 S DATA=$G(^PXRM(810.2,EDIEN,0))
"RTN","PXRMETH",59,0)
 S NAT=$P($G(^PXRM(810.2,EDIEN,100)),U)
"RTN","PXRMETH",60,0)
 ;Determine Extract Name and Frequency
"RTN","PXRMETH",61,0)
 S NAME=$P(DATA,U),FREQ=$P(DATA,U,3),NEXT=$P(DATA,U,6),RTN="PXRMETX"
"RTN","PXRMETH",62,0)
 ;Save next scheduled extract
"RTN","PXRMETH",63,0)
 S SNEXT=NEXT
"RTN","PXRMETH",64,0)
 ;Select extract period
"RTN","PXRMETH",65,0)
EXSEL D SELECT(FREQ,.NEXT) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",66,0)
 ;Warn if period is still open
"RTN","PXRMETH",67,0)
 D WARN(NEXT,.STATUS)
"RTN","PXRMETH",68,0)
 ;Option to continue
"RTN","PXRMETH",69,0)
 S TEXT="Are you sure you want to run a "_NAME_" extract for "_$TR(NEXT,"/"," ")
"RTN","PXRMETH",70,0)
SURE ;
"RTN","PXRMETH",71,0)
 S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,1) Q:$D(DUOUT)!$D(DTOUT)  Q:'ANS
"RTN","PXRMETH",72,0)
 ;Purge options
"RTN","PXRMETH",73,0)
PLIST ;
"RTN","PXRMETH",74,0)
 S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5)
"RTN","PXRMETH",75,0)
 G:$D(DUOUT) SURE Q:$D(DTOUT)
"RTN","PXRMETH",76,0)
 S EXSUMPUG="N" D ASK^PXRMXD(.EXSUMPUG,"Purge Extract Summary after 5 years?: ",5)
"RTN","PXRMETH",77,0)
 G:$D(DUOUT) PLIST Q:$D(DTOUT)
"RTN","PXRMETH",78,0)
 ;Option to transmit
"RTN","PXRMETH",79,0)
 S TEXT="Transmit extract results to AAC"
"RTN","PXRMETH",80,0)
 I NAT="N" S XMIT=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",81,0)
 E  S XMIT=0
"RTN","PXRMETH",82,0)
 ;Option to replace scheduled run
"RTN","PXRMETH",83,0)
 S REPL=0
"RTN","PXRMETH",84,0)
 I XMIT,SNEXT=NEXT,STATUS="COMPLETE" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",85,0)
 .S TEXT="Does this extract replace the scheduled extract"
"RTN","PXRMETH",86,0)
 .S REPL=$$ASKYN^PXRMEUT("N",TEXT,RTN,4) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",87,0)
 ;
"RTN","PXRMETH",88,0)
 ;Note that the manual extract does not update 810.2
"RTN","PXRMETH",89,0)
 ;exept if the selected period is the same as the scheduled
"RTN","PXRMETH",90,0)
 ;period AND this period is complete
"RTN","PXRMETH",91,0)
 ;
"RTN","PXRMETH",92,0)
 ;Default is to extract and transmit and not update 810.2
"RTN","PXRMETH",93,0)
 S MODE=2 I 'XMIT S MODE=3
"RTN","PXRMETH",94,0)
 ;Update 810.2 if this extract is for current completed period
"RTN","PXRMETH",95,0)
 I REPL S MODE=0 I 'XMIT S MODE=1
"RTN","PXRMETH",96,0)
 ;
"RTN","PXRMETH",97,0)
 ;Extract/transmission run
"RTN","PXRMETH",98,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMETH",99,0)
 S ZTDESC="Run Reminder Extract"
"RTN","PXRMETH",100,0)
 S ZTRTN="RUN^PXRMETX(EDIEN,NEXT,MODE,EXSUMPUG)"
"RTN","PXRMETH",101,0)
 S ZTSAVE("EDIEN")=""
"RTN","PXRMETH",102,0)
 S ZTSAVE("MODE")=""
"RTN","PXRMETH",103,0)
 S ZTSAVE("NEXT")=""
"RTN","PXRMETH",104,0)
 S ZTSAVE("PLISTPUG")=""
"RTN","PXRMETH",105,0)
 S ZTSAVE("EXSUMPUG")=""
"RTN","PXRMETH",106,0)
 S ZTIO=""
"RTN","PXRMETH",107,0)
 ;
"RTN","PXRMETH",108,0)
 ;Select and verify start date/time for task
"RTN","PXRMETH",109,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMETH",110,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMETH",111,0)
 W !,"Queue a "_ZTDESC_" for "_NEXT
"RTN","PXRMETH",112,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMETH",113,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMETH",114,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMETH",115,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMETH",116,0)
 D ^DIR
"RTN","PXRMETH",117,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMETH",118,0)
 S SDTIME=Y
"RTN","PXRMETH",119,0)
 ;
"RTN","PXRMETH",120,0)
 ;Put the task into the queue.
"RTN","PXRMETH",121,0)
 S ZTDTH=SDTIME
"RTN","PXRMETH",122,0)
 D ^%ZTLOAD
"RTN","PXRMETH",123,0)
 W !,"Task number ",ZTSK," queued." H 2
"RTN","PXRMETH",124,0)
 S VALMBCK="Q"
"RTN","PXRMETH",125,0)
 Q
"RTN","PXRMETH",126,0)
 ;
"RTN","PXRMETH",127,0)
HDR ; Header code
"RTN","PXRMETH",128,0)
 N VIEW
"RTN","PXRMETH",129,0)
 S VIEW=$S(PXRMVIEW="D":"Creation Date Order",1:"Extract Period Order")
"RTN","PXRMETH",130,0)
 S VALMHDR(2)="          Extract Name: "_$P($G(^PXRM(810.2,EDIEN,0)),U)
"RTN","PXRMETH",131,0)
 S VALMHDR(3)="   Next Extract Period: "_NPERIOD
"RTN","PXRMETH",132,0)
 S VALMHDR(4)="      Scheduled to Run: "_$$FMTE^XLFDT(NSDATE,"5Z")
"RTN","PXRMETH",133,0)
 S VALMHDR(4)=$$LJ^XLFSTR(VALMHDR(4),45)_"    View: "_VIEW
"RTN","PXRMETH",134,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETH",135,0)
 Q
"RTN","PXRMETH",136,0)
 ;
"RTN","PXRMETH",137,0)
HLP ;Help code
"RTN","PXRMETH",138,0)
 N ORU,ORUPRMT,SUB,XQORM
"RTN","PXRMETH",139,0)
 S SUB="PXRMETHH"
"RTN","PXRMETH",140,0)
 D EN^VALM("PXRM EXTRACT HELP")
"RTN","PXRMETH",141,0)
 Q
"RTN","PXRMETH",142,0)
 ;
"RTN","PXRMETH",143,0)
INIT ;Init
"RTN","PXRMETH",144,0)
 S VALMCNT=0
"RTN","PXRMETH",145,0)
 Q
"RTN","PXRMETH",146,0)
 ;
"RTN","PXRMETH",147,0)
LMSEL() ;Return selection list
"RTN","PXRMETH",148,0)
 N IENLIST,IND,VALMY,XIEN
"RTN","PXRMETH",149,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMETH",150,0)
 ;If there is no list quit.
"RTN","PXRMETH",151,0)
 I '$D(VALMY) Q ""
"RTN","PXRMETH",152,0)
 S PXRMDONE=0,IENLIST=""
"RTN","PXRMETH",153,0)
 S IND=""
"RTN","PXRMETH",154,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D
"RTN","PXRMETH",155,0)
 .;Get the ien.
"RTN","PXRMETH",156,0)
 .S XIEN=^TMP("PXRMETH",$J,"SEL",IND)
"RTN","PXRMETH",157,0)
 .S IENLIST=$S(IENLIST'="":IENLIST_U_XIEN,1:XIEN)
"RTN","PXRMETH",158,0)
 Q IENLIST
"RTN","PXRMETH",159,0)
 ;
"RTN","PXRMETH",160,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMETH",161,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMETH",162,0)
 D XQORM
"RTN","PXRMETH",163,0)
 Q
"RTN","PXRMETH",164,0)
 ;
"RTN","PXRMETH",165,0)
SELECT(FREQ,SEL) ;Select extract period
"RTN","PXRMETH",166,0)
 N BDATE,EDATE,DA,DIE,DIK,DIR,DR,FDATE,VALID,X
"RTN","PXRMETH",167,0)
 ;Get the new name.
"RTN","PXRMETH",168,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:SEL]""
"RTN","PXRMETH",169,0)
 .S DIR("A")="Select EXTRACT PERIOD "
"RTN","PXRMETH",170,0)
 .I FREQ="M" D
"RTN","PXRMETH",171,0)
 ..S DIR("A")=DIR("A")_"(Mnn/yyyy)"
"RTN","PXRMETH",172,0)
 ..S DIR(0)="F"_U_"7:8"_U_"K:'$$VALID^PXRMETH(FREQ,X) X"
"RTN","PXRMETH",173,0)
 .I FREQ="Q" D
"RTN","PXRMETH",174,0)
 ..S DIR("A")=DIR("A")_"(Qnn/yyyy)"
"RTN","PXRMETH",175,0)
 ..S DIR(0)="F"_U_"7:7"_U_"K:'$$VALID^PXRMETH(FREQ,X) X"
"RTN","PXRMETH",176,0)
 .I FREQ="Y" D
"RTN","PXRMETH",177,0)
 ..S DIR("A")=DIR("A")_"(yyyy)"
"RTN","PXRMETH",178,0)
 ..S DIR(0)="N"_U_"2000:2050"_U_"K:(X'?4N) X"
"RTN","PXRMETH",179,0)
 .;Default is next period
"RTN","PXRMETH",180,0)
 .S DIR("B")=NEXT
"RTN","PXRMETH",181,0)
 .W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMETH",182,0)
 .;Calculate beginning and end dates for period
"RTN","PXRMETH",183,0)
 .S Y=$$UP^XLFSTR(Y) D CALC^PXRMEUT(Y,.BDATE,.EDATE)
"RTN","PXRMETH",184,0)
 .;Abort if period has not started
"RTN","PXRMETH",185,0)
 .I $$FMDIFF^XLFDT(BDATE,$$NOW^XLFDT)>0 D   Q
"RTN","PXRMETH",186,0)
 ..S FDATE=$$FMTE^XLFDT(BDATE,5)
"RTN","PXRMETH",187,0)
 ..W !,"ERROR -This period does not start until "_FDATE,*7
"RTN","PXRMETH",188,0)
 .S SEL=Y
"RTN","PXRMETH",189,0)
 Q
"RTN","PXRMETH",190,0)
 ;
"RTN","PXRMETH",191,0)
TLIST ;Extract summary display
"RTN","PXRMETH",192,0)
 N IEN,IENLIST,IND
"RTN","PXRMETH",193,0)
 S IENLIST=$$LMSEL
"RTN","PXRMETH",194,0)
 F IND=1:1:$L(IENLIST,U) D
"RTN","PXRMETH",195,0)
 .S IEN=$P(IENLIST,U,IND)
"RTN","PXRMETH",196,0)
 .D START^PXRMETT(IEN)
"RTN","PXRMETH",197,0)
 .S VALMBCK="R"
"RTN","PXRMETH",198,0)
 S VALMBCK="R"
"RTN","PXRMETH",199,0)
 Q
"RTN","PXRMETH",200,0)
 ;
"RTN","PXRMETH",201,0)
TRANS ;Run Transmission
"RTN","PXRMETH",202,0)
 N IEN,IENLIST,IND
"RTN","PXRMETH",203,0)
 S IENLIST=$$LMSEL
"RTN","PXRMETH",204,0)
 F IND=1:1:$L(IENLIST,U) D
"RTN","PXRMETH",205,0)
 .S IEN=$P(IENLIST,U,IND)
"RTN","PXRMETH",206,0)
 .I $P($G(^PXRMXT(810.3,IEN,100)),U)'="N" D  Q
"RTN","PXRMETH",207,0)
 ..W !,"Local extracts cannot be transmitted to AAC." H 2
"RTN","PXRMETH",208,0)
 .;Transmit extract summary
"RTN","PXRMETH",209,0)
 .N ANS,DUOUT,DTOUT,RTN,TEXT
"RTN","PXRMETH",210,0)
 .S TEXT="Transmit this extract to AAC",ANS="",RTN="PXRMETH"
"RTN","PXRMETH",211,0)
 .S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",212,0)
 .I ANS D TRANS^PXRMETX(IEN)
"RTN","PXRMETH",213,0)
 ;
"RTN","PXRMETH",214,0)
 ;Rebuild workfile
"RTN","PXRMETH",215,0)
 D BLDLIST^PXRMETH1(EDIEN)
"RTN","PXRMETH",216,0)
 ;Refresh
"RTN","PXRMETH",217,0)
 S VALMBCK="R"
"RTN","PXRMETH",218,0)
 Q
"RTN","PXRMETH",219,0)
 ;
"RTN","PXRMETH",220,0)
TRHIST ;Transmission History
"RTN","PXRMETH",221,0)
 N IEN,IENLIST,IND
"RTN","PXRMETH",222,0)
 S IENLIST=$$LMSEL
"RTN","PXRMETH",223,0)
 F IND=1:1:$L(IENLIST,U) D
"RTN","PXRMETH",224,0)
 .S IEN=$P(IENLIST,U,IND)
"RTN","PXRMETH",225,0)
 .D START^PXRMETHL(IEN)
"RTN","PXRMETH",226,0)
 S VALMBCK="R"
"RTN","PXRMETH",227,0)
 Q
"RTN","PXRMETH",228,0)
 ;
"RTN","PXRMETH",229,0)
VALID(FREQ,INP) ;Validate Period input
"RTN","PXRMETH",230,0)
 W !
"RTN","PXRMETH",231,0)
 N PERIOD,YEAR
"RTN","PXRMETH",232,0)
 ;Convert to upper case
"RTN","PXRMETH",233,0)
 S INP=$$UP^XLFSTR(INP)
"RTN","PXRMETH",234,0)
 ;General format
"RTN","PXRMETH",235,0)
 I $E(INP)'=FREQ D EN^DDIOL("Format should be "_FREQ_"nn/yyyy") Q 0
"RTN","PXRMETH",236,0)
 S PERIOD=$P(INP,"/"),YEAR=$P(INP,"/",2)
"RTN","PXRMETH",237,0)
 S PERIOD=$P(PERIOD,FREQ,2)
"RTN","PXRMETH",238,0)
 ;All runs
"RTN","PXRMETH",239,0)
 I (YEAR<2000)!(YEAR>2050) D EN^DDIOL("Year should be in range 2000-2050") Q 0
"RTN","PXRMETH",240,0)
 ;Quarterly run
"RTN","PXRMETH",241,0)
 I FREQ="Q",(PERIOD>4)!(PERIOD<1) D EN^DDIOL("Quarter should be in range 1-4") Q 0
"RTN","PXRMETH",242,0)
 ;Monthly run
"RTN","PXRMETH",243,0)
 I FREQ="M",(PERIOD>12)!(PERIOD<1) D EN^DDIOL("Month should be in range 1-12") Q 0
"RTN","PXRMETH",244,0)
 ;Otherwise
"RTN","PXRMETH",245,0)
 Q 1
"RTN","PXRMETH",246,0)
 ;
"RTN","PXRMETH",247,0)
VIEW ;Select view
"RTN","PXRMETH",248,0)
 W IORESET
"RTN","PXRMETH",249,0)
 S VALMBCK="R"
"RTN","PXRMETH",250,0)
 N X,Y,CODE,DIR
"RTN","PXRMETH",251,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMETH",252,0)
 S DIR(0)="S"_U_"D:Sort by Creation Date;"
"RTN","PXRMETH",253,0)
 S DIR(0)=DIR(0)_"P:Sort by Extract Period;"
"RTN","PXRMETH",254,0)
 S DIR("A")="TYPE OF VIEW"
"RTN","PXRMETH",255,0)
 S DIR("B")=$S(PXRMVIEW="P":"D",1:"P")
"RTN","PXRMETH",256,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMETH",257,0)
 ;BOOKMARK - HELP NEEDS MOVING
"RTN","PXRMETH",258,0)
 S DIR("??")=U_"D HELP^PXRMSEL2(3)"
"RTN","PXRMETH",259,0)
 D ^DIR K DIR
"RTN","PXRMETH",260,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMETH",261,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMETH",262,0)
 ;Change display type
"RTN","PXRMETH",263,0)
 S PXRMVIEW=Y
"RTN","PXRMETH",264,0)
 ;
"RTN","PXRMETH",265,0)
 ;Rebuild Workfile
"RTN","PXRMETH",266,0)
 D BLDLIST^PXRMETH1(EDIEN),HDR
"RTN","PXRMETH",267,0)
 Q
"RTN","PXRMETH",268,0)
 ;
"RTN","PXRMETH",269,0)
WARN(NEXT,STATUS) ;Warn if period is not completed
"RTN","PXRMETH",270,0)
 N BDATE,EDATE,FDATE
"RTN","PXRMETH",271,0)
 ;Calculate beginning and end dates for period
"RTN","PXRMETH",272,0)
 D CALC^PXRMEUT(NEXT,.BDATE,.EDATE)
"RTN","PXRMETH",273,0)
 ;No warning if period end date is a prior date
"RTN","PXRMETH",274,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,EDATE)>0 S STATUS="COMPLETE" Q
"RTN","PXRMETH",275,0)
 ;Else Format date
"RTN","PXRMETH",276,0)
 S FDATE=$$FMTE^XLFDT(EDATE,5),STATUS="INCOMPLETE"
"RTN","PXRMETH",277,0)
 ;And Warn that period end date is a future date
"RTN","PXRMETH",278,0)
 W !!,"WARNING -This period is not complete until "_FDATE
"RTN","PXRMETH",279,0)
 Q
"RTN","PXRMETH",280,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXTRACT HISTORY SELECT ENTRY",0))_U_"1:"_VALMCNT
"RTN","PXRMETH",281,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMETH",282,0)
 Q
"RTN","PXRMETH",283,0)
 ;
"RTN","PXRMETH",284,0)
XSEL ;PXRM EXTRACT HISTORY SELECT ENTRY validation
"RTN","PXRMETH",285,0)
 N SEL,PXRMSIEN
"RTN","PXRMETH",286,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMETH",287,0)
 ;Remove trailing ,
"RTN","PXRMETH",288,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMETH",289,0)
 ;Invalid selection
"RTN","PXRMETH",290,0)
 I SEL["," D  Q
"RTN","PXRMETH",291,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMETH",292,0)
 .S VALMBCK="R"
"RTN","PXRMETH",293,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMETH",294,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMETH",295,0)
 .S VALMBCK="R"
"RTN","PXRMETH",296,0)
 ;
"RTN","PXRMETH",297,0)
 ;Get the list ien.
"RTN","PXRMETH",298,0)
 S PXRMSIEN=^TMP("PXRMETH",$J,"SEL",SEL)
"RTN","PXRMETH",299,0)
 ;
"RTN","PXRMETH",300,0)
 ;Full screen mode
"RTN","PXRMETH",301,0)
 D FULL^VALM1
"RTN","PXRMETH",302,0)
 ;
"RTN","PXRMETH",303,0)
 ;Options
"RTN","PXRMETH",304,0)
 N X,Y,DIR,OPTION K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMETH",305,0)
 S DIR(0)="SBM"_U_"DE:Delete Extract;"
"RTN","PXRMETH",306,0)
 S DIR(0)=DIR(0)_"ES:Extract Summary;"
"RTN","PXRMETH",307,0)
 S DIR(0)=DIR(0)_"MT:Manual Transmission;"
"RTN","PXRMETH",308,0)
 S DIR(0)=DIR(0)_"TH:Transmission History;"
"RTN","PXRMETH",309,0)
 S DIR("A")="Select Action"
"RTN","PXRMETH",310,0)
 S DIR("B")="ES"
"RTN","PXRMETH",311,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMETH",312,0)
 S DIR("??")=U_"D HELP^PXRMETH1(1)"
"RTN","PXRMETH",313,0)
 D ^DIR K DIR
"RTN","PXRMETH",314,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMETH",315,0)
 I $D(DTOUT)!($D(DUOUT)) S VALMBCK="R" Q
"RTN","PXRMETH",316,0)
 S OPTION=Y
"RTN","PXRMETH",317,0)
 ;
"RTN","PXRMETH",318,0)
 ;Delete an extract
"RTN","PXRMETH",319,0)
 I OPTION="DE" D
"RTN","PXRMETH",320,0)
 .D DELETE^PXRMETXU(PXRMSIEN)
"RTN","PXRMETH",321,0)
 .;Rebuild workfile
"RTN","PXRMETH",322,0)
 .D BLDLIST^PXRMETH1(PXRMSIEN)
"RTN","PXRMETH",323,0)
 .;Refresh
"RTN","PXRMETH",324,0)
 .S VALMBCK="R"
"RTN","PXRMETH",325,0)
 ;
"RTN","PXRMETH",326,0)
 ;Display Extract Summary
"RTN","PXRMETH",327,0)
 I OPTION="ES" D START^PXRMETT(PXRMSIEN)
"RTN","PXRMETH",328,0)
 ;
"RTN","PXRMETH",329,0)
 ;Transmission option
"RTN","PXRMETH",330,0)
 I OPTION="MT" D
"RTN","PXRMETH",331,0)
 .N ANS,DUOUT,DTOUT,RTN,TEXT
"RTN","PXRMETH",332,0)
 .I $P($G(^PXRMXT(810.3,PXRMSIEN,100)),U)'="N" D  Q
"RTN","PXRMETH",333,0)
 ..W !,"Local extracts cannot be transmitted to AAC" H 2 Q
"RTN","PXRMETH",334,0)
 .S TEXT="Transmit this extract to AAC",ANS="",RTN="PXRMETH"
"RTN","PXRMETH",335,0)
 .S ANS=$$ASKYN^PXRMEUT("N",TEXT,RTN,3) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMETH",336,0)
 .I ANS D TRANS^PXRMETX(PXRMSIEN)
"RTN","PXRMETH",337,0)
 ;
"RTN","PXRMETH",338,0)
 ;Transmission History
"RTN","PXRMETH",339,0)
 I OPTION="TH" D START^PXRMETHL(PXRMSIEN)
"RTN","PXRMETH",340,0)
 ;
"RTN","PXRMETH",341,0)
 S VALMBCK="R"
"RTN","PXRMETH",342,0)
 Q
"RTN","PXRMETH",343,0)
 ;
"RTN","PXRMETX")
0^76^B62476117
"RTN","PXRMETX",1,0)
PXRMETX ; SLC/PJH - Run Extract for QUERI ;01/28/2013
"RTN","PXRMETX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMETX",3,0)
 ;
"RTN","PXRMETX",4,0)
AUTO(ID,PURGE) ;Called from option scheduling (#19.2)
"RTN","PXRMETX",5,0)
 N IEN,LIST,LUVALUE,MODE,NEXT
"RTN","PXRMETX",6,0)
 S LUVALUE(1)=ID
"RTN","PXRMETX",7,0)
 D FIND^DIC(810.2,"","","U",.LUVALUE,"","","","","LIST")
"RTN","PXRMETX",8,0)
 ;Get ien of extract parameter
"RTN","PXRMETX",9,0)
 S IEN=$P(LIST("DILIST",2,1),U,1) Q:'IEN
"RTN","PXRMETX",10,0)
 ;Get next extract period
"RTN","PXRMETX",11,0)
 S NEXT=$P($G(^PXRM(810.2,IEN,0)),U,6) Q:NEXT=""
"RTN","PXRMETX",12,0)
 ;Node is Extract and Transmit
"RTN","PXRMETX",13,0)
 S MODE=$S($P($G(^PXRM(810.2,IEN,100)),U)="N":0,1:1)
"RTN","PXRMETX",14,0)
 ;Run extract
"RTN","PXRMETX",15,0)
 D RUN^PXRMETX(IEN,NEXT,MODE,PURGE)
"RTN","PXRMETX",16,0)
 ;Purge Extract Summary
"RTN","PXRMETX",17,0)
 D PRGES^PXRMETXU
"RTN","PXRMETX",18,0)
 ;Purge Patient Lists
"RTN","PXRMETX",19,0)
 D PRGPL^PXRMETXU
"RTN","PXRMETX",20,0)
 Q
"RTN","PXRMETX",21,0)
 ;
"RTN","PXRMETX",22,0)
GETNAME(NAME,CLASS) ;Get the extract name.
"RTN","PXRMETX",23,0)
 I '$D(^PXRMXT(810.3,"B",NAME)) Q NAME
"RTN","PXRMETX",24,0)
 N CNT,NEW
"RTN","PXRMETX",25,0)
 S (CNT,NEW)=0
"RTN","PXRMETX",26,0)
 ;If name exists concatenate count
"RTN","PXRMETX",27,0)
 F  D  Q:NEW
"RTN","PXRMETX",28,0)
 .I '$D(^PXRMXT(810.3,"B",NAME)) S NEW=1 Q
"RTN","PXRMETX",29,0)
 .S CNT=CNT+1,NAME=$P(NAME,"/")_"/"_$$RJ^XLFSTR(CNT,2,0)
"RTN","PXRMETX",30,0)
 Q NAME
"RTN","PXRMETX",31,0)
 ;
"RTN","PXRMETX",32,0)
IHD ;Monthly IHD Extract, called from option PXRM EXTRACT VA-IHD QUERI.
"RTN","PXRMETX",33,0)
 D AUTO("VA-IHD QUERI","Y")
"RTN","PXRMETX",34,0)
 Q
"RTN","PXRMETX",35,0)
 ;
"RTN","PXRMETX",36,0)
MAIL(NAME,NEXT,MODE) ;Completion mail message
"RTN","PXRMETX",37,0)
 N FREQ,TEXT
"RTN","PXRMETX",38,0)
 S FREQ="year"
"RTN","PXRMETX",39,0)
 I $E(NEXT)="M" S FREQ="month"
"RTN","PXRMETX",40,0)
 I $E(NEXT)="Q" S FREQ="quarter"
"RTN","PXRMETX",41,0)
 ;
"RTN","PXRMETX",42,0)
 I MODE=0 S TEXT="Extract and Transmission"
"RTN","PXRMETX",43,0)
 I MODE=1 S TEXT="Extract (No Transmission)"
"RTN","PXRMETX",44,0)
 I MODE=2 S TEXT="Manual Extract and Transmission"
"RTN","PXRMETX",45,0)
 I MODE=3 S TEXT="Manual Extract (No Transmission)"
"RTN","PXRMETX",46,0)
 ;
"RTN","PXRMETX",47,0)
 S TEXT=NAME_" "_TEXT_" completed for "_FREQ_" "_NEXT
"RTN","PXRMETX",48,0)
 D MES^PXRMEUT(TEXT)
"RTN","PXRMETX",49,0)
 Q
"RTN","PXRMETX",50,0)
 ;
"RTN","PXRMETX",51,0)
MH ;Monthly MH Extract, called from option PXRM EXTRACT VA-MH QUERI.
"RTN","PXRMETX",52,0)
 D AUTO("VA-MH QUERI","Y")
"RTN","PXRMETX",53,0)
 Q
"RTN","PXRMETX",54,0)
 ;
"RTN","PXRMETX",55,0)
RUN(IEN,NEXT,MODE,PURGE) ;Process extract parameter
"RTN","PXRMETX",56,0)
 ; IEN is ien of Extract Parameter
"RTN","PXRMETX",57,0)
 ; NEXT is period to extract
"RTN","PXRMETX",58,0)
 ; MODE = 0 is extract and transmission
"RTN","PXRMETX",59,0)
 ; MODE = 1 is extract only
"RTN","PXRMETX",60,0)
 ; MODE = 2 is manual extract and transmission (doesn't update 810.2)
"RTN","PXRMETX",61,0)
 ; MODE = 3 is manual extract only (doesn't update 810.2)
"RTN","PXRMETX",62,0)
 ;
"RTN","PXRMETX",63,0)
 N CLASS,FDA,FDAIEN,MSG
"RTN","PXRMETX",64,0)
 N PXRMIDOD,PXRMLIST,PXRMNODE,PXRMRULE,PXRMSTRT,PXRMXIEN,PATCREAT,XNAME
"RTN","PXRMETX",65,0)
 N ITER
"RTN","PXRMETX",66,0)
 ;Initialise
"RTN","PXRMETX",67,0)
 K ^TMP("PXRMETX",$J),^TMP("PXRMETX1",$J)
"RTN","PXRMETX",68,0)
 ;Workfile node for ^TMP
"RTN","PXRMETX",69,0)
 S PXRMNODE="PXRMRULE"
"RTN","PXRMETX",70,0)
 ;Get details from parameter file
"RTN","PXRMETX",71,0)
 N DATA,INDP,INTP,LIST,NAME,PARTYPE,PERIOD,SNAME,TEXT,YEAR
"RTN","PXRMETX",72,0)
 ;Get class from extract parameter
"RTN","PXRMETX",73,0)
 S CLASS=$P($G(^PXRM(810.2,IEN,100)),U)
"RTN","PXRMETX",74,0)
 ;Otherwise default to local
"RTN","PXRMETX",75,0)
 I $G(CLASS)="" S CLASS="L"
"RTN","PXRMETX",76,0)
 ;
"RTN","PXRMETX",77,0)
 S DATA=$G(^PXRM(810.2,IEN,0))
"RTN","PXRMETX",78,0)
 ;Determine Extract Name and period
"RTN","PXRMETX",79,0)
 S NAME=$P(DATA,U),PARTYPE=$P(DATA,U,2)
"RTN","PXRMETX",80,0)
 S YEAR=$P(NEXT,"/",2),PERIOD=$P(NEXT,"/")
"RTN","PXRMETX",81,0)
 ;Calculate report period start and end dates
"RTN","PXRMETX",82,0)
 D CALC^PXRMEUT(NEXT,.PXRMSTRT,.PXRMSTOP)
"RTN","PXRMETX",83,0)
 ;Determine output name for patient list and extract summary
"RTN","PXRMETX",84,0)
 S XNAME=NAME_" "_YEAR_" "_PERIOD
"RTN","PXRMETX",85,0)
 S NAME=$$GETNAME(XNAME)
"RTN","PXRMETX",86,0)
 S ITER=$P(NAME,"/",2)
"RTN","PXRMETX",87,0)
 ;Process (single) Denominator rule into patient list
"RTN","PXRMETX",88,0)
 N SEQ,SUB
"RTN","PXRMETX",89,0)
 S SEQ=""
"RTN","PXRMETX",90,0)
 F  S SEQ=$O(^PXRM(810.2,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMETX",91,0)
 .S SUB=$O(^PXRM(810.2,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMETX",92,0)
 .S DATA=$G(^PXRM(810.2,IEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETX",93,0)
 .S PXRMRULE=$P(DATA,U,2) Q:'PXRMRULE
"RTN","PXRMETX",94,0)
 .S LIST=$P(DATA,U,3) Q:LIST=""
"RTN","PXRMETX",95,0)
 .I LIST["yyyy" S LIST=$P(LIST,"yyyy")_YEAR_$P(LIST,"yyyy",2)
"RTN","PXRMETX",96,0)
 .I LIST["nn" S LIST=$P(LIST,"nn")_$E(PERIOD,2,10)_$P(LIST,"nn",2)
"RTN","PXRMETX",97,0)
 .S INDP=+$P(DATA,U,4)
"RTN","PXRMETX",98,0)
 .S INTP=+$P(DATA,U,5)
"RTN","PXRMETX",99,0)
 .;Create new patient list
"RTN","PXRMETX",100,0)
 .I ITER'="" S LIST=LIST_"/"_ITER
"RTN","PXRMETX",101,0)
 .S PATCREAT="Y",PXRMLIST=$$CRLST^PXRMRUL1(LIST,CLASS) Q:'PXRMLIST
"RTN","PXRMETX",102,0)
 .;
"RTN","PXRMETX",103,0)
 .D START^PXRMRULE(PXRMRULE,PXRMLIST,PXRMNODE,PXRMSTRT,PXRMSTOP,IEN,YEAR,PERIOD,INDP,INTP,ITER)
"RTN","PXRMETX",104,0)
 .;Clear ^TMP lists created for rule
"RTN","PXRMETX",105,0)
 .D CLEAR^PXRMRULE(PXRMRULE,PXRMNODE)
"RTN","PXRMETX",106,0)
 .;Process reminders and finding rules
"RTN","PXRMETX",107,0)
 .;If include deceased patients is true then set the flag so reminders
"RTN","PXRMETX",108,0)
 .;will be evaluated for deceased patients.
"RTN","PXRMETX",109,0)
 .S PXRMIDOD=$S(INDP:1,1:0)
"RTN","PXRMETX",110,0)
 .D REM^PXRMETXR(SUB,PXRMLIST,PXRMSTRT,PXRMSTOP,PARTYPE)
"RTN","PXRMETX",111,0)
 ;
"RTN","PXRMETX",112,0)
 ;Get the name
"RTN","PXRMETX",113,0)
 ;S NAME=$$GETNAME(XNAME)
"RTN","PXRMETX",114,0)
 ;Create extract summary entry
"RTN","PXRMETX",115,0)
 S FDA(810.3,"+1,",.01)=NAME
"RTN","PXRMETX",116,0)
 S FDA(810.3,"+1,",.02)=PXRMSTRT
"RTN","PXRMETX",117,0)
 S FDA(810.3,"+1,",.03)=PXRMSTOP
"RTN","PXRMETX",118,0)
 S FDA(810.3,"+1,",.06)=$$NOW^XLFDT
"RTN","PXRMETX",119,0)
 S FDA(810.3,"+1,",1)=IEN
"RTN","PXRMETX",120,0)
 S FDA(810.3,"+1,",2)=PARTYPE
"RTN","PXRMETX",121,0)
 S FDA(810.3,"+1,",3)=$E(PERIOD,2,99)
"RTN","PXRMETX",122,0)
 S FDA(810.3,"+1,",4)=YEAR
"RTN","PXRMETX",123,0)
 S FDA(810.3,"+1,",5)=$S(MODE<2:"A",1:"M")
"RTN","PXRMETX",124,0)
 S FDA(810.3,"+1,",7)=$E(PERIOD)
"RTN","PXRMETX",125,0)
 I PURGE="Y" S FDA(810.3,"+1,",50)=1
"RTN","PXRMETX",126,0)
 S FDA(810.3,"+1,",100)=CLASS
"RTN","PXRMETX",127,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMETX",128,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG") G EXIT
"RTN","PXRMETX",129,0)
 ;
"RTN","PXRMETX",130,0)
 ;Update extract summary from ^TMP
"RTN","PXRMETX",131,0)
 D UPDEX(FDAIEN(1))
"RTN","PXRMETX",132,0)
 ;
"RTN","PXRMETX",133,0)
 ;Transmit results
"RTN","PXRMETX",134,0)
 I (MODE=0)!(MODE=2) D TRANS(FDAIEN(1))
"RTN","PXRMETX",135,0)
 ;
"RTN","PXRMETX",136,0)
 ;Update extract parameters
"RTN","PXRMETX",137,0)
 I MODE<2 D UPDPAR
"RTN","PXRMETX",138,0)
 ;
"RTN","PXRMETX",139,0)
 ;Mail message that extract completed
"RTN","PXRMETX",140,0)
 D MAIL(NAME,NEXT,MODE)
"RTN","PXRMETX",141,0)
 ;
"RTN","PXRMETX",142,0)
EXIT ;Clear workfile
"RTN","PXRMETX",143,0)
 K ^TMP("PXRMETX",$J),^TMP("PXRMETX1",$J)
"RTN","PXRMETX",144,0)
 Q
"RTN","PXRMETX",145,0)
 ;
"RTN","PXRMETX",146,0)
TRANS(PXRMXIEN) ;Transmit HL7 messages
"RTN","PXRMETX",147,0)
 N HL7ID,NAME,NEXT
"RTN","PXRMETX",148,0)
 S HL7ID=""
"RTN","PXRMETX",149,0)
 D HL7^PXRM7API(PXRMXIEN,1,.HL7ID)
"RTN","PXRMETX",150,0)
 H 2
"RTN","PXRMETX",151,0)
 ;Lock extract summary
"RTN","PXRMETX",152,0)
 D LOCK(PXRMXIEN) Q:$D(DUOUT)
"RTN","PXRMETX",153,0)
 ;Update run information
"RTN","PXRMETX",154,0)
 S NAME=$P($G(^PXRMXT(810.3,PXRMXIEN,0)),U)
"RTN","PXRMETX",155,0)
 S NEXT=$P($G(^PXRMXT(810.3,PXRMXIEN,4)),U,3)
"RTN","PXRMETX",156,0)
 S FDA(810.3,"?1,",.01)=NAME
"RTN","PXRMETX",157,0)
 S FDA(810.36,"?+2,?1,",.01)=HL7ID
"RTN","PXRMETX",158,0)
 S FDA(810.36,"?+2,?1,",.02)=$$NOW^XLFDT
"RTN","PXRMETX",159,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMETX",160,0)
 ;Unlock extract summary
"RTN","PXRMETX",161,0)
 D UNLOCK(PXRMXIEN)
"RTN","PXRMETX",162,0)
 Q
"RTN","PXRMETX",163,0)
 ;
"RTN","PXRMETX",164,0)
UPDEX(IEN) ;Update extract summary
"RTN","PXRMETX",165,0)
 N DUOUT
"RTN","PXRMETX",166,0)
 ;Lock extract summary
"RTN","PXRMETX",167,0)
 D LOCK(IEN) Q:$D(DUOUT)
"RTN","PXRMETX",168,0)
 ;
"RTN","PXRMETX",169,0)
 ;Update totals section
"RTN","PXRMETX",170,0)
 N APPL,CNT,DFN,DUE,DATA,ETYP,EVAL
"RTN","PXRMETX",171,0)
 N FAPPL,FCNT,FDATA,FDUE,FEVAL,FGNAM,FGSTA,FIND,FNAPPL,FNDUE,FSEQ
"RTN","PXRMETX",172,0)
 N GDATA,GSEQ,INST,NAPPL,NDUE,PCNT,PXRMLIST,RCNT,RIEN,RSEQ,SEQ,TEMP
"RTN","PXRMETX",173,0)
 S SEQ="",CNT=1,RSEQ=0
"RTN","PXRMETX",174,0)
 F  S SEQ=$O(^TMP("PXRMETX",$J,SEQ)) Q:SEQ=""  D
"RTN","PXRMETX",175,0)
 .S INST=0
"RTN","PXRMETX",176,0)
 .F  S INST=$O(^TMP("PXRMETX",$J,SEQ,INST)) Q:'INST  D
"RTN","PXRMETX",177,0)
 ..S RCNT=""
"RTN","PXRMETX",178,0)
 ..F  S RCNT=$O(^TMP("PXRMETX",$J,SEQ,INST,RCNT)) Q:RCNT=""  D
"RTN","PXRMETX",179,0)
 ...S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT)) Q:'DATA
"RTN","PXRMETX",180,0)
 ...S RIEN=$P(DATA,U,1),EVAL=$P(DATA,U,2),APPL=$P(DATA,U,3)
"RTN","PXRMETX",181,0)
 ...S NAPPL=$P(DATA,U,4),DUE=$P(DATA,U,5),NDUE=$P(DATA,U,6)
"RTN","PXRMETX",182,0)
 ...S PXRMLIST=$P(DATA,U,7)
"RTN","PXRMETX",183,0)
 ...S CNT=CNT+1,RSEQ=RSEQ+1
"RTN","PXRMETX",184,0)
 ...S TEMP=$$RJ^XLFSTR(RSEQ,3,0)_U_RIEN_U_INST_U_PXRMLIST_U_EVAL_U_APPL_U_NAPPL_U_DUE_U_NDUE
"RTN","PXRMETX",185,0)
 ...S ^PXRMXT(810.3,IEN,3,RSEQ,0)=TEMP
"RTN","PXRMETX",186,0)
 ...S ^PXRMXT(810.3,IEN,3,"B",$P(TEMP,U,1),RSEQ)=""
"RTN","PXRMETX",187,0)
 ...;For each count type
"RTN","PXRMETX",188,0)
 ...S GSEQ="",FCNT=0
"RTN","PXRMETX",189,0)
 ...F  S GSEQ=$O(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETX",190,0)
 ....S GDATA=$G(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ))
"RTN","PXRMETX",191,0)
 ....S FGNAM=$P(GDATA,U),ETYP=$P(GDATA,U,2),FGSTA=$P(GDATA,U,3)
"RTN","PXRMETX",192,0)
 ....;For each term
"RTN","PXRMETX",193,0)
 ....S FSEQ=0
"RTN","PXRMETX",194,0)
 ....F  S FSEQ=$O(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETX",195,0)
 .....;Get the term ien
"RTN","PXRMETX",196,0)
 .....S FIND=$P($G(^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)),U),FCNT=FCNT+1
"RTN","PXRMETX",197,0)
 .....;Update finding totals
"RTN","PXRMETX",198,0)
 .....S FDATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ))
"RTN","PXRMETX",199,0)
 .....S FEVAL=$P(FDATA,U,2),FAPPL=$P(FDATA,U,3),FNAPPL=$P(FDATA,U,4)
"RTN","PXRMETX",200,0)
 .....S FDUE=$P(FDATA,U,5),FNDUE=$P(FDATA,U,6)
"RTN","PXRMETX",201,0)
 .....S TEMP=FSEQ_U_$P(FIND,";")_U_ETYP_U_FEVAL_U_FAPPL_U_FNAPPL_U_FDUE_U_FNDUE_U_FGNAM_U_FGSTA
"RTN","PXRMETX",202,0)
 .....S ^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,0)=TEMP
"RTN","PXRMETX",203,0)
 .....;
"RTN","PXRMETX",204,0)
 .....;AGP REMOVE UNTIL A DECISION CAN BE MADE
"RTN","PXRMETX",205,0)
 .....;S DFN=0,PCNT=0
"RTN","PXRMETX",206,0)
 .....;F  S DFN=$O(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ,DFN)) Q:DFN'>0  D
"RTN","PXRMETX",207,0)
 .....;.S PCNT=PCNT+1,^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,1,PCNT,0)=DFN
"RTN","PXRMETX",208,0)
 .....;I PCNT>0 S ^PXRMXT(810.3,IEN,3,RSEQ,1,FCNT,1,0)="^810.3316PA"_U_PCNT_U_PCNT
"RTN","PXRMETX",209,0)
 ....I FCNT>0 S ^PXRMXT(810.3,IEN,3,RSEQ,1,0)="^810.331I"_U_FCNT_U_FCNT
"RTN","PXRMETX",210,0)
 .I RSEQ>0 S ^PXRMXT(810.3,IEN,3,0)="^810.33I"_U_RSEQ_U_RSEQ
"RTN","PXRMETX",211,0)
 ;Unlock extract summary
"RTN","PXRMETX",212,0)
 D UNLOCK(IEN)
"RTN","PXRMETX",213,0)
 Q
"RTN","PXRMETX",214,0)
 ;
"RTN","PXRMETX",215,0)
 ;File locking
"RTN","PXRMETX",216,0)
LOCK(PXRMXIEN) L +^PXRMXT(810.3,PXRMXIEN):DILOCKTM
"RTN","PXRMETX",217,0)
 I '$T W !!?5,"Another user is using this extract summary" S DUOUT=1
"RTN","PXRMETX",218,0)
 Q
"RTN","PXRMETX",219,0)
 ;
"RTN","PXRMETX",220,0)
UNLOCK(PXRMXIEN) L -^PXRMXT(810.3,PXRMXIEN) Q
"RTN","PXRMETX",221,0)
 ;
"RTN","PXRMETX",222,0)
UPDPAR ;Update parameters when run complete
"RTN","PXRMETX",223,0)
 N DATA,LAST,NEXT,PERIOD,TYPE,YEAR
"RTN","PXRMETX",224,0)
 S DATA=$G(^PXRM(810.2,IEN,0)),NEXT=$P(DATA,U,6),TYPE=$P(DATA,U,3)
"RTN","PXRMETX",225,0)
 ;Last run updated
"RTN","PXRMETX",226,0)
 S LAST=NEXT
"RTN","PXRMETX",227,0)
 ;Calculate next run
"RTN","PXRMETX",228,0)
 I TYPE="Y" S NEXT=NEXT+1
"RTN","PXRMETX",229,0)
 I "QM"[TYPE D
"RTN","PXRMETX",230,0)
 .N NUM
"RTN","PXRMETX",231,0)
 .S PERIOD=$P(NEXT,"/",1),YEAR=$P(NEXT,"/",2)
"RTN","PXRMETX",232,0)
 .S NUM=$P(PERIOD,TYPE,2)+1
"RTN","PXRMETX",233,0)
 .I TYPE="Q",NUM>4 S NUM=1,YEAR=YEAR+1
"RTN","PXRMETX",234,0)
 .I TYPE="M",NUM>12 S NUM=1,YEAR=YEAR+1
"RTN","PXRMETX",235,0)
 .S NEXT=TYPE_NUM_"/"_YEAR
"RTN","PXRMETX",236,0)
 ;Update last and next run fields
"RTN","PXRMETX",237,0)
 S $P(^PXRM(810.2,IEN,0),U,4,6)=LAST_U_$$NOW^XLFDT_U_NEXT
"RTN","PXRMETX",238,0)
 Q
"RTN","PXRMETX",239,0)
 ;
"RTN","PXRMETXR")
0^67^B76497570
"RTN","PXRMETXR",1,0)
PXRMETXR ; SLC/PJH,PKR - Reminder section of extract ;01/16/2014
"RTN","PXRMETXR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMETXR",3,0)
 ; 
"RTN","PXRMETXR",4,0)
 ; Called from PXRMETX
"RTN","PXRMETXR",5,0)
 ;
"RTN","PXRMETXR",6,0)
DATE ;Check if finding is most recent in evaluation group
"RTN","PXRMETXR",7,0)
 N FDATE,GDATE
"RTN","PXRMETXR",8,0)
 ;Determine finding date and existing group date
"RTN","PXRMETXR",9,0)
 S FDATE=$G(FIEV(FNUM,"DATE")),GDATE=$G(GROUP(GSEQ,"DATE")) Q:FDATE=""
"RTN","PXRMETXR",10,0)
 ;Ignore findings outside to the extract period
"RTN","PXRMETXR",11,0)
 ;I $$FMDIFF^XLFDT(PXRMSTRT,FDATE,2)>0 Q
"RTN","PXRMETXR",12,0)
 ;If this is first or only entry in group then save finding date
"RTN","PXRMETXR",13,0)
 I 'GDATE S GROUP(GSEQ,"DATE")=FDATE,GROUP(GSEQ)=FSEQ Q
"RTN","PXRMETXR",14,0)
 ;Save finding if most recent date for the group
"RTN","PXRMETXR",15,0)
 I $$FMDIFF^XLFDT(FDATE,GDATE,2)>0 S GROUP(GSEQ,"DATE")=FDATE,GROUP(GSEQ)=FSEQ Q
"RTN","PXRMETXR",16,0)
 Q
"RTN","PXRMETXR",17,0)
 ;
"RTN","PXRMETXR",18,0)
FIND(SEQ,RCNT,PXRMSTRT,PXRMSTOP) ;Process findings for reminder
"RTN","PXRMETXR",19,0)
 ;Default is extract no findings
"RTN","PXRMETXR",20,0)
 N DATA,FCNT,FIEN,FIND,FNUM,FSEQ,GDATA,GROUP,GSEQ,GTYP
"RTN","PXRMETXR",21,0)
 S FNUM=0,FCNT=0
"RTN","PXRMETXR",22,0)
 F  S FNUM=$O(FIEV(FNUM)) Q:'FNUM  D
"RTN","PXRMETXR",23,0)
 .;Ignore if not found for patient
"RTN","PXRMETXR",24,0)
 .I +FIEV(FNUM)=0 Q
"RTN","PXRMETXR",25,0)
 .;Only terms are counted
"RTN","PXRMETXR",26,0)
 .S FIND=$G(FIEV(FNUM,"TERM IEN")) Q:FIND=""
"RTN","PXRMETXR",27,0)
 .;Check if in list to be accumulated
"RTN","PXRMETXR",28,0)
 .I '$D(REM(RCNT,FIND)) Q
"RTN","PXRMETXR",29,0)
 .;Find groups to which finding belongs
"RTN","PXRMETXR",30,0)
 .S GSEQ=""
"RTN","PXRMETXR",31,0)
 .F  S GSEQ=$O(REM(RCNT,FIND,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",32,0)
 ..;Determine Evaluation type
"RTN","PXRMETXR",33,0)
 ..S GTYP=REM(RCNT,FIND,GSEQ)
"RTN","PXRMETXR",34,0)
 ..;Ignore utilization groups
"RTN","PXRMETXR",35,0)
 ..I GTYP="UR" Q
"RTN","PXRMETXR",36,0)
 ..;Sequence determines where the finding will be stored
"RTN","PXRMETXR",37,0)
 ..S FSEQ=""
"RTN","PXRMETXR",38,0)
 ..F  S FSEQ=$O(REM(RCNT,FIND,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",39,0)
 ...;Evaluation Group logic to save latest entry only
"RTN","PXRMETXR",40,0)
 ...I GTYP="MRFP" D DATE Q
"RTN","PXRMETXR",41,0)
 ...;Save finding totals
"RTN","PXRMETXR",42,0)
 ...D UPD(1)
"RTN","PXRMETXR",43,0)
 ;
"RTN","PXRMETXR",44,0)
 ;Check for group totals
"RTN","PXRMETXR",45,0)
 S GSEQ=""
"RTN","PXRMETXR",46,0)
 F  S GSEQ=$O(GROUP(GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",47,0)
 .S GDATA=$G(GROUP(GSEQ)) Q:GDATA=""
"RTN","PXRMETXR",48,0)
 .;Update if found
"RTN","PXRMETXR",49,0)
 .S FSEQ=$P(GDATA,U) D UPD(1)
"RTN","PXRMETXR",50,0)
 ;
"RTN","PXRMETXR",51,0)
 ;Utilization counts are done separately
"RTN","PXRMETXR",52,0)
 N CNT,FDATA,FIND,FINDPA,FTIEN,GTYP,TERMARR,TFIEVAL
"RTN","PXRMETXR",53,0)
 ;modify start date to include incomplete dates
"RTN","PXRMETXR",54,0)
 I $E(PXRMSTRT,6,7)="01" S PXRMSTRT=$E(PXRMSTRT,1,5)_"00"
"RTN","PXRMETXR",55,0)
 ;Include incomplete dates in January
"RTN","PXRMETXR",56,0)
 I $E(PXRMSTRT,4,5)="01" S PXRMSTRT=$E(PXRMSTRT,1,3)_"0000"
"RTN","PXRMETXR",57,0)
 ;Set start and stop dates for term
"RTN","PXRMETXR",58,0)
 ;S $P(FINDPA(0),U,8)=PXRMSTRT,$P(FINDPA(0),U,11)=PXRMSTOP
"RTN","PXRMETXR",59,0)
 S $P(FINDPA(0),U,11)=PXRMSTOP
"RTN","PXRMETXR",60,0)
 ;Count all entries
"RTN","PXRMETXR",61,0)
 S $P(FINDPA(0),U,14)="*"
"RTN","PXRMETXR",62,0)
 ;
"RTN","PXRMETXR",63,0)
 S FTIEN="",GTYP="UR"
"RTN","PXRMETXR",64,0)
 F  S FTIEN=$O(FUTIL(RCNT,FTIEN)) Q:FTIEN=""  D
"RTN","PXRMETXR",65,0)
 .S GSEQ=""
"RTN","PXRMETXR",66,0)
 .F  S GSEQ=$O(FUTIL(RCNT,FTIEN,GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",67,0)
 ..S FSEQ=""
"RTN","PXRMETXR",68,0)
 ..F  S FSEQ=$O(FUTIL(RCNT,FTIEN,GSEQ,FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",69,0)
 ...;Recover list of term findings
"RTN","PXRMETXR",70,0)
 ...K TERMARR M TERMARR=FUTIL(RCNT,FTIEN,GSEQ,FSEQ)
"RTN","PXRMETXR",71,0)
 ...;Process term 
"RTN","PXRMETXR",72,0)
 ...K TFIEVAL D EVALTERM^PXRMTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMETXR",73,0)
 ...D URCNT(PXRMSTRT,PXRMSTOP,.TFIEVAL)
"RTN","PXRMETXR",74,0)
 ;Determine count from PLIST then add to ETX
"RTN","PXRMETXR",75,0)
 ;S CNT=+$O(PLIST(1,999999),-1) Q:'CNT
"RTN","PXRMETXR",76,0)
 ;D UPD(CNT)
"RTN","PXRMETXR",77,0)
 Q
"RTN","PXRMETXR",78,0)
 ;
"RTN","PXRMETXR",79,0)
FRULE(FRIEN,RCNT,SEQ,REM,FUTIL) ;Build array of findings in the finding rule
"RTN","PXRMETXR",80,0)
 N DATA,FIND,FSEQ,GIEN,GNAM,GSEQ,GTYP,GSTA,SUB,TLIST
"RTN","PXRMETXR",81,0)
 S GSEQ=0
"RTN","PXRMETXR",82,0)
 F  S GSEQ=$O(^PXRM(810.7,FRIEN,10,"B",GSEQ)) Q:GSEQ=""  D
"RTN","PXRMETXR",83,0)
 .S SUB=$O(^PXRM(810.7,FRIEN,10,"B",GSEQ,"")) Q:'SUB
"RTN","PXRMETXR",84,0)
 .S DATA=$G(^PXRM(810.7,FRIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETXR",85,0)
 .;Get the finding group ien and reminder status
"RTN","PXRMETXR",86,0)
 .S GIEN=$P(DATA,U,2),GSTA=$P(DATA,U,3) Q:'GIEN
"RTN","PXRMETXR",87,0)
 .;If no status then report finding totals for all patients 
"RTN","PXRMETXR",88,0)
 .I GSTA="" S GSTA="T"
"RTN","PXRMETXR",89,0)
 .;Get finding group info
"RTN","PXRMETXR",90,0)
 .S DATA=$G(^PXRM(810.8,GIEN,0)) Q:DATA=""
"RTN","PXRMETXR",91,0)
 .;Get group name and count type
"RTN","PXRMETXR",92,0)
 .S GTYP=$P(DATA,U,3),GNAM=$P(DATA,U) Q:GTYP=""
"RTN","PXRMETXR",93,0)
 .;Save group in workfile
"RTN","PXRMETXR",94,0)
 .S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ)=GNAM_U_GTYP_U_GSTA
"RTN","PXRMETXR",95,0)
 .;Get all findings in group
"RTN","PXRMETXR",96,0)
 .S FSEQ=0
"RTN","PXRMETXR",97,0)
 .F  S FSEQ=$O(^PXRM(810.8,GIEN,10,"B",FSEQ)) Q:FSEQ=""  D
"RTN","PXRMETXR",98,0)
 ..S SUB=$O(^PXRM(810.8,GIEN,10,"B",FSEQ,"")) Q:'SUB
"RTN","PXRMETXR",99,0)
 ..S DATA=$G(^PXRM(810.8,GIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMETXR",100,0)
 ..;Get the finding ien and exclusion status
"RTN","PXRMETXR",101,0)
 ..S FIND=$P(DATA,U,2) Q:'FIND
"RTN","PXRMETXR",102,0)
 ..;Initialize count for finding
"RTN","PXRMETXR",103,0)
 ..S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)=FIND
"RTN","PXRMETXR",104,0)
 ..;Reminder evaluation counts work from REM
"RTN","PXRMETXR",105,0)
 ..I GTYP'="UR" D  Q
"RTN","PXRMETXR",106,0)
 ...S REM(RCNT,FIND,GSEQ,FSEQ)=""
"RTN","PXRMETXR",107,0)
 ...S REM(RCNT,FIND,GSEQ)=GTYP
"RTN","PXRMETXR",108,0)
 ..;Utilization counts work from FUTIL
"RTN","PXRMETXR",109,0)
 ..D TERM^PXRMLDR(FIND,.TLIST)
"RTN","PXRMETXR",110,0)
 ..;Save TLIST
"RTN","PXRMETXR",111,0)
 ..M FUTIL(RCNT,FIND,GSEQ,FSEQ)=TLIST
"RTN","PXRMETXR",112,0)
 Q
"RTN","PXRMETXR",113,0)
 ;
"RTN","PXRMETXR",114,0)
REM(SUB,PXRMLIST,PXRMSTRT,PXRMSTOP,PARTYPE) ;Run reminders against patient
"RTN","PXRMETXR",115,0)
 ;lists.
"RTN","PXRMETXR",116,0)
 N APPL,DATA,DEFARR,DEFSITE,DFN,DUE,FIEV,FRIEN,FUTIL,IND,INST
"RTN","PXRMETXR",117,0)
 N PXRMDATE,PXRMDEFS,RCNT,REM,REMSEQ,RIEN,RNAM,STATUS,SUB1,TODAY
"RTN","PXRMETXR",118,0)
 N END,START
"RTN","PXRMETXR",119,0)
 ;S START=$H
"RTN","PXRMETXR",120,0)
 S TODAY=$$DT^XLFDT
"RTN","PXRMETXR",121,0)
 ;Evaluation date is period end except if the period is incomplete
"RTN","PXRMETXR",122,0)
 S PXRMDATE=$S($$FMDIFF^XLFDT(PXRMSTOP,TODAY,2)>0:TODAY,1:PXRMSTOP)
"RTN","PXRMETXR",123,0)
 ;Scan reminders for this parameter set
"RTN","PXRMETXR",124,0)
 S (RCNT,SUB1)=0
"RTN","PXRMETXR",125,0)
 S REMSEQ=""
"RTN","PXRMETXR",126,0)
 F  S REMSEQ=$O(^PXRM(810.2,IEN,10,SUB,10,"B",REMSEQ)) Q:REMSEQ=""  D
"RTN","PXRMETXR",127,0)
 .F  S SUB1=$O(^PXRM(810.2,IEN,10,SUB,10,"B",REMSEQ,SUB1)) Q:'SUB1  D
"RTN","PXRMETXR",128,0)
 ..S DATA=$G(^PXRM(810.2,IEN,10,SUB,10,SUB1,0)) Q:DATA=""
"RTN","PXRMETXR",129,0)
 ..;Reminder ien
"RTN","PXRMETXR",130,0)
 ..S RIEN=$P(DATA,U,2) Q:'RIEN
"RTN","PXRMETXR",131,0)
 ..;Evaluation date is period end except if the period is incomplete.
"RTN","PXRMETXR",132,0)
 ..S PXRMDATE=$S($$FMDIFF^XLFDT(PXRMSTOP,TODAY,2)>0:TODAY,1:PXRMSTOP)
"RTN","PXRMETXR",133,0)
 ..;Finding Rule
"RTN","PXRMETXR",134,0)
 ..S FRIEN=$P(DATA,U,3)
"RTN","PXRMETXR",135,0)
 ..;Reminder print name
"RTN","PXRMETXR",136,0)
 ..S RNAM=$P($G(^PXD(811.9,RIEN,0)),U,3)
"RTN","PXRMETXR",137,0)
 ..I RNAM="" S RNAM=$P(^PXD(811.9,RIEN,0),U,1)
"RTN","PXRMETXR",138,0)
 ..;Save details to REM array
"RTN","PXRMETXR",139,0)
 ..S RCNT=RCNT+1,REM(RCNT)=RIEN_U_RNAM_U_FRIEN
"RTN","PXRMETXR",140,0)
 ..;Build list of terms from extract finding rule #810.7
"RTN","PXRMETXR",141,0)
 ..I FRIEN D FRULE(FRIEN,RCNT,SEQ,.REM,.FUTIL) Q
"RTN","PXRMETXR",142,0)
 ..;If no extract finding rule defined collect all findings in reminder
"RTN","PXRMETXR",143,0)
 ..I 'FRIEN D REMF(RIEN,RCNT,SEQ,.REM)
"RTN","PXRMETXR",144,0)
 ;
"RTN","PXRMETXR",145,0)
 ;Process patient list
"RTN","PXRMETXR",146,0)
 S IND=0,DEFSITE=+$P($$SITE^VASITE,U,3)
"RTN","PXRMETXR",147,0)
 F  S IND=$O(^PXRMXP(810.5,PXRMLIST,30,IND)) Q:'IND  D
"RTN","PXRMETXR",148,0)
 .S DFN=$P($G(^PXRMXP(810.5,PXRMLIST,30,IND,0)),U) Q:'DFN
"RTN","PXRMETXR",149,0)
 .S INST=$P($G(^PXRMXP(810.5,PXRMLIST,30,IND,0)),U,2)
"RTN","PXRMETXR",150,0)
 .I INST="" S INST=DEFSITE
"RTN","PXRMETXR",151,0)
 .S RCNT=0
"RTN","PXRMETXR",152,0)
 .F  S RCNT=$O(REM(RCNT)) Q:'RCNT  D
"RTN","PXRMETXR",153,0)
 ..S RIEN=$P(REM(RCNT),U),RNAM=$P(REM(RCNT),U,2),FRIEN=$P(REM(RCNT),U,3)
"RTN","PXRMETXR",154,0)
 ..;Clear evaluation arrays.
"RTN","PXRMETXR",155,0)
 ..K ^TMP("PXRHM",$J),^TMP("PXRMID",$J),FIEV
"RTN","PXRMETXR",156,0)
 ..;Evaluate reminders and store results
"RTN","PXRMETXR",157,0)
 ..K PXRMDEFS
"RTN","PXRMETXR",158,0)
 ..D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMETXR",159,0)
 ..D EVAL^PXRM(DFN,.DEFARR,1,1,.FIEV,PXRMDATE)
"RTN","PXRMETXR",160,0)
 ..;Determine update from reminder status
"RTN","PXRMETXR",161,0)
 ..S STATUS=$P($G(^TMP("PXRHM",$J,RIEN,RNAM)),U) I STATUS="" Q
"RTN","PXRMETXR",162,0)
 ..;Ignore not applicables
"RTN","PXRMETXR",163,0)
 ..S APPL=$S(STATUS["DUE":1,STATUS="RESOLVED":1,STATUS="DONE":1,1:0)
"RTN","PXRMETXR",164,0)
 ..;Check if due
"RTN","PXRMETXR",165,0)
 ..S DUE=$S(STATUS="DUE NOW":1,1:0)
"RTN","PXRMETXR",166,0)
 ..;Compliance totals
"RTN","PXRMETXR",167,0)
 ..S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT))
"RTN","PXRMETXR",168,0)
 ..;Reminder ien
"RTN","PXRMETXR",169,0)
 ..I $P(DATA,U)="" S $P(DATA,U)=RIEN
"RTN","PXRMETXR",170,0)
 ..;Evaluated total
"RTN","PXRMETXR",171,0)
 ..S $P(DATA,U,2)=$P(DATA,U,2)+1
"RTN","PXRMETXR",172,0)
 ..;Applicable total
"RTN","PXRMETXR",173,0)
 ..S $P(DATA,U,3)=$P(DATA,U,3)+APPL
"RTN","PXRMETXR",174,0)
 ..;Not applicable total
"RTN","PXRMETXR",175,0)
 ..I 'APPL,'DUE S $P(DATA,U,4)=$P(DATA,U,4)+1
"RTN","PXRMETXR",176,0)
 ..;Due total
"RTN","PXRMETXR",177,0)
 ..S $P(DATA,U,5)=$P(DATA,U,5)+DUE
"RTN","PXRMETXR",178,0)
 ..;Not due count
"RTN","PXRMETXR",179,0)
 ..I APPL,'DUE S $P(DATA,U,6)=$P(DATA,U,6)+1
"RTN","PXRMETXR",180,0)
 ..;Add patient list
"RTN","PXRMETXR",181,0)
 ..I $P(DATA,U,7)="" S $P(DATA,U,7)=PXRMLIST
"RTN","PXRMETXR",182,0)
 ..;Update workfile
"RTN","PXRMETXR",183,0)
 ..S ^TMP("PXRMETX",$J,SEQ,INST,RCNT)=DATA
"RTN","PXRMETXR",184,0)
 ..;Save finding totals
"RTN","PXRMETXR",185,0)
 ..I PARTYPE="CF" D FIND(SEQ,RCNT,PXRMSTRT,PXRMSTOP)
"RTN","PXRMETXR",186,0)
 ;Clear evaluation fields
"RTN","PXRMETXR",187,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMID",$J)
"RTN","PXRMETXR",188,0)
 ;S END=$H
"RTN","PXRMETXR",189,0)
 ;W !,"REMINDER EVALUATION TIME"
"RTN","PXRMETXR",190,0)
 ;D DETIME^PXRMXSEL(START,END)
"RTN","PXRMETXR",191,0)
 Q
"RTN","PXRMETXR",192,0)
 ;
"RTN","PXRMETXR",193,0)
REMF(RIEN,RCNT,SEQ,REM) ;Build array of all findings in the reminder
"RTN","PXRMETXR",194,0)
 N GNAM,GSEQ,FIND,FSEQ,GTYP,SUB
"RTN","PXRMETXR",195,0)
 S GNAM="Finding totals",GSEQ="001",FSEQ=0,GTYP="MRF"
"RTN","PXRMETXR",196,0)
 ;Save group name
"RTN","PXRMETXR",197,0)
 S ^TMP("PXRMETX",$J,SEQ,RCNT,GSEQ)=GNAM_U_GTYP
"RTN","PXRMETXR",198,0)
 ;Select all findings in the reminder
"RTN","PXRMETXR",199,0)
 S SUB=0
"RTN","PXRMETXR",200,0)
 F  S SUB=$O(^PXD(811.9,RIEN,20,SUB)) Q:'SUB  D
"RTN","PXRMETXR",201,0)
 .;Ignore if finding is not a term
"RTN","PXRMETXR",202,0)
 .S FIND=$P($G(^PXD(811.9,RIEN,20,SUB,0)),U) Q:FIND'["PXRMD(811.5"
"RTN","PXRMETXR",203,0)
 .;Convert to term ien
"RTN","PXRMETXR",204,0)
 .S FIND=$P(FIND,";")
"RTN","PXRMETXR",205,0)
 .;Build sequence number
"RTN","PXRMETXR",206,0)
 .S FSEQ=FSEQ+1,FSEQ=$$RJ^XLFSTR(FSEQ,3,0)
"RTN","PXRMETXR",207,0)
 .;Evaluation counts
"RTN","PXRMETXR",208,0)
 .S REM(RCNT,FIND,GSEQ,FSEQ)=""
"RTN","PXRMETXR",209,0)
 .S REM(RCNT,FIND,GSEQ)=GTYP
"RTN","PXRMETXR",210,0)
 .;Update Workfile
"RTN","PXRMETXR",211,0)
 .S ^TMP("PXRMETX1",$J,SEQ,RCNT,GSEQ,FSEQ)=FIND
"RTN","PXRMETXR",212,0)
 Q
"RTN","PXRMETXR",213,0)
 ;
"RTN","PXRMETXR",214,0)
URCNT(PXRMSTRT,PXRMSTOP,TFIEVAL) ;
"RTN","PXRMETXR",215,0)
 ;Handle counting all valid occurrences for the finding items.
"RTN","PXRMETXR",216,0)
 ;Includes historical entries that were entered within the reporting
"RTN","PXRMETXR",217,0)
 ;period, cut the encounter date if it is outside the reporting period.
"RTN","PXRMETXR",218,0)
 N CNT,DATEENT,FDATE,FILE,FNUM,FOCCNUM,HIST,NODE,SCAT,VIEN
"RTN","PXRMETXR",219,0)
 S CNT=0,FNUM=0
"RTN","PXRMETXR",220,0)
 F  S FNUM=$O(TFIEVAL(FNUM)) Q:FNUM'>0  D
"RTN","PXRMETXR",221,0)
 .S FILE=$G(TFIEVAL(FNUM,"FILE NUMBER"))
"RTN","PXRMETXR",222,0)
 .S HIST=$S(FILE=9000010.18:1,FILE=9000010.13:1,FILE=9000010.23:1,FILE=9000010.16:1,FILE=9000010.07:1,FILE=9000010.12:1,FILE=9000010.15:1,1:0)
"RTN","PXRMETXR",223,0)
 .S FOCCNUM=0 F  S FOCCNUM=$O(TFIEVAL(FNUM,FOCCNUM)) Q:FOCCNUM'>0  D
"RTN","PXRMETXR",224,0)
 ..S FDATE=$P(TFIEVAL(FNUM,FOCCNUM,"DATE"),".") Q:FDATE'>0
"RTN","PXRMETXR",225,0)
 ..I HIST=0,FDATE=PXRMSTRT!(FDATE>PXRMSTRT) S CNT=CNT+1
"RTN","PXRMETXR",226,0)
 ..I HIST=1 D
"RTN","PXRMETXR",227,0)
 ...S VIEN=TFIEVAL(FNUM,FOCCNUM,"VISIT") Q:VIEN'>0
"RTN","PXRMETXR",228,0)
 ...S NODE=$G(^AUPNVSIT(VIEN,0))
"RTN","PXRMETXR",229,0)
 ...S SCAT=$P(NODE,U,7),DATEENT=$P($P(NODE,U,2),".")
"RTN","PXRMETXR",230,0)
 ...I FDATE=PXRMSTRT!(FDATE>PXRMSTRT),SCAT'="E" S CNT=CNT+1 Q
"RTN","PXRMETXR",231,0)
 ...I SCAT="E",(DATEENT=PXRMSTRT!(DATEENT>PXRMSTRT))&(DATEENT=PXRMSTOP!(DATEENT<PXRMSTOP)) S CNT=CNT+1
"RTN","PXRMETXR",232,0)
 D UPD(CNT)
"RTN","PXRMETXR",233,0)
 Q
"RTN","PXRMETXR",234,0)
 ;
"RTN","PXRMETXR",235,0)
UPD(CNT) ;Update totals
"RTN","PXRMETXR",236,0)
 S DATA=$G(^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ))
"RTN","PXRMETXR",237,0)
 ;Total count
"RTN","PXRMETXR",238,0)
 S $P(DATA,U,2)=$P(DATA,U,2)+CNT
"RTN","PXRMETXR",239,0)
 ;Applicable count
"RTN","PXRMETXR",240,0)
 S $P(DATA,U,3)=$P(DATA,U,3)+(APPL*CNT)
"RTN","PXRMETXR",241,0)
 ;Not applicable count
"RTN","PXRMETXR",242,0)
 I 'APPL,'DUE S $P(DATA,U,4)=$P(DATA,U,4)+CNT
"RTN","PXRMETXR",243,0)
 ;Due count
"RTN","PXRMETXR",244,0)
 S $P(DATA,U,5)=$P(DATA,U,5)+(DUE*CNT)
"RTN","PXRMETXR",245,0)
 ;Not due count
"RTN","PXRMETXR",246,0)
 I APPL,'DUE S $P(DATA,U,6)=$P(DATA,U,6)+CNT
"RTN","PXRMETXR",247,0)
 ;Update current count
"RTN","PXRMETXR",248,0)
 S ^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ)=DATA
"RTN","PXRMETXR",249,0)
 ;AGP REMOVE UNTIL A DECISION CAN BE MADE
"RTN","PXRMETXR",250,0)
 ;I CNT=1,APPL=1 S ^TMP("PXRMETX",$J,SEQ,INST,RCNT,GSEQ,FSEQ,DFN)=DFN
"RTN","PXRMETXR",251,0)
 Q
"RTN","PXRMETXR",252,0)
 ;
"RTN","PXRMEXCS")
0^46^B15773333
"RTN","PXRMEXCS",1,0)
PXRMEXCS ; SLC/PKR - Routines to compute checksums. ;10/24/2012
"RTN","PXRMEXCS",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXCS",3,0)
 ;====================================================
"RTN","PXRMEXCS",4,0)
CHECKSUM(ATTR,START,END) ;Get the the checksum for a packed reminder
"RTN","PXRMEXCS",5,0)
 ;component and load it into the attribute array.
"RTN","PXRMEXCS",6,0)
 N CS,LINE
"RTN","PXRMEXCS",7,0)
 ;If checksum is in packed component return it otherwise calculate it.
"RTN","PXRMEXCS",8,0)
 I ATTR("FILE NUMBER")=0 D
"RTN","PXRMEXCS",9,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,START-3,0)
"RTN","PXRMEXCS",10,0)
 . S CS=$$GETTAGV^PXRMEXU3(LINE,"<CHECKSUM>")
"RTN","PXRMEXCS",11,0)
 . I CS="" S CS=$$PRTNCS(PXRMRIEN,START,END)
"RTN","PXRMEXCS",12,0)
 I ATTR("FILE NUMBER")>0 D
"RTN","PXRMEXCS",13,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,START-2,0)
"RTN","PXRMEXCS",14,0)
 . S CS=$$GETTAGV^PXRMEXU3(LINE,"<CHECKSUM>")
"RTN","PXRMEXCS",15,0)
 . I CS="" S CS=$$PFDACS(PXRMRIEN,START,END)
"RTN","PXRMEXCS",16,0)
 S ATTR("CHECKSUM")=CS
"RTN","PXRMEXCS",17,0)
 Q
"RTN","PXRMEXCS",18,0)
 ;
"RTN","PXRMEXCS",19,0)
 ;====================================================
"RTN","PXRMEXCS",20,0)
DIQOUTCS(DIQOUT) ;Return checksum for a processed DIQOUT array.
"RTN","PXRMEXCS",21,0)
 N CS,DATA,FIELD,FNUM,IENS,IND,SFN,STRING,TARGET,TEXT,WP
"RTN","PXRMEXCS",22,0)
 S FNUM=$O(DIQOUT(""))
"RTN","PXRMEXCS",23,0)
 D FIELD^DID(FNUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXCS",24,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXCS",25,0)
 S (CS,FNUM)=0
"RTN","PXRMEXCS",26,0)
 F  S FNUM=$O(DIQOUT(FNUM)) Q:FNUM=""  D
"RTN","PXRMEXCS",27,0)
 . I FNUM=SFN Q
"RTN","PXRMEXCS",28,0)
 . S IENS=""
"RTN","PXRMEXCS",29,0)
 . F  S IENS=$O(DIQOUT(FNUM,IENS)) Q:IENS=""  D
"RTN","PXRMEXCS",30,0)
 .. S FIELD=0
"RTN","PXRMEXCS",31,0)
 .. F  S FIELD=$O(DIQOUT(FNUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXCS",32,0)
 ... S DATA=DIQOUT(FNUM,IENS,FIELD)
"RTN","PXRMEXCS",33,0)
 ... S TEXT=FNUM_$L(IENS,",")_FIELD_DATA
"RTN","PXRMEXCS",34,0)
 ... S CS=$$CRC32^XLFCRC(TEXT,CS)
"RTN","PXRMEXCS",35,0)
 ... I DATA["WP-start" F IND=1:1:$P(DATA,"~",2) D
"RTN","PXRMEXCS",36,0)
 .... S TEXT=DIQOUT(FNUM,IENS,FIELD,IND)
"RTN","PXRMEXCS",37,0)
 .... S CS=$$CRC32^XLFCRC(TEXT,CS)
"RTN","PXRMEXCS",38,0)
 Q CS
"RTN","PXRMEXCS",39,0)
 ;
"RTN","PXRMEXCS",40,0)
 ;====================================================
"RTN","PXRMEXCS",41,0)
FILE(FILENUM,IEN) ;Return checksum for entry IEN in file FILENUM.
"RTN","PXRMEXCS",42,0)
 ;Make sure the entry exists.
"RTN","PXRMEXCS",43,0)
 I +$$FIND1^DIC(FILENUM,,"AU","`"_IEN)=0 Q 0
"RTN","PXRMEXCS",44,0)
 N CS,DIQOUT,IENROOT,MSG
"RTN","PXRMEXCS",45,0)
 D GETS^DIQ(FILENUM,IEN,"**","N","DIQOUT","MSG")
"RTN","PXRMEXCS",46,0)
 D CLDIQOUT^PXRMEXPD(FILENUM,IEN,"**",.IENROOT,.DIQOUT)
"RTN","PXRMEXCS",47,0)
 S CS=$$DIQOUTCS(.DIQOUT)
"RTN","PXRMEXCS",48,0)
 Q CS
"RTN","PXRMEXCS",49,0)
 ;
"RTN","PXRMEXCS",50,0)
 ;====================================================
"RTN","PXRMEXCS",51,0)
HFCS(PATH,FILENAME) ;Return checksum for host file.
"RTN","PXRMEXCS",52,0)
 N CS,GBL,GBLZISH,SUCCESS
"RTN","PXRMEXCS",53,0)
 K ^TMP($J,"PXRMHFCS")
"RTN","PXRMEXCS",54,0)
 S GBL="^TMP($J,""PXRMHFCS"")"
"RTN","PXRMEXCS",55,0)
 S GBLZISH="^TMP($J,""PXRMHFCS"",1)"
"RTN","PXRMEXCS",56,0)
 S GBLZISH=$NA(@GBLZISH)
"RTN","PXRMEXCS",57,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBLZISH,3)
"RTN","PXRMEXCS",58,0)
 S CS=$S(SUCCESS:$$HFCSGBL(GBL),1:-1)
"RTN","PXRMEXCS",59,0)
 K ^TMP($J,"PXRMHFCS")
"RTN","PXRMEXCS",60,0)
 Q CS
"RTN","PXRMEXCS",61,0)
 ;
"RTN","PXRMEXCS",62,0)
 ;====================================================
"RTN","PXRMEXCS",63,0)
HFCSGBL(GBL) ;Return checksum for host file loaded into global GBL.
"RTN","PXRMEXCS",64,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",65,0)
 S (CS,IND)=0
"RTN","PXRMEXCS",66,0)
 F  S IND=$O(@GBL@(IND)) Q:+IND=0  S LINE=@GBL@(IND),CS=$$CRC32^XLFCRC(LINE,CS)
"RTN","PXRMEXCS",67,0)
 Q CS
"RTN","PXRMEXCS",68,0)
 ;
"RTN","PXRMEXCS",69,0)
 ;====================================================
"RTN","PXRMEXCS",70,0)
MMCS(XMZ) ;Return checksum for MailMan message ien XMZ.
"RTN","PXRMEXCS",71,0)
 N CS,IND,LINE,NLINES
"RTN","PXRMEXCS",72,0)
 S NLINES=+$P($G(^XMB(3.9,XMZ,2,0)),U,3)
"RTN","PXRMEXCS",73,0)
 S CS=0
"RTN","PXRMEXCS",74,0)
 F IND=1:1:NLINES S LINE=$G(^XMB(3.9,XMZ,2,IND,0)),CS=$$CRC32^XLFCRC(LINE,CS)
"RTN","PXRMEXCS",75,0)
 Q CS
"RTN","PXRMEXCS",76,0)
 ;
"RTN","PXRMEXCS",77,0)
 ;====================================================
"RTN","PXRMEXCS",78,0)
PFDACS(IEN,FDASTART,FDAEND) ;Return checksum for FDA array of packed
"RTN","PXRMEXCS",79,0)
 ;reminder component.
"RTN","PXRMEXCS",80,0)
 N CS,DATA,IENS,IND,JND,FIELD,FNUM,SFN,TARGET,TEMP,TEXT
"RTN","PXRMEXCS",81,0)
 S TEMP=^PXD(811.8,IEN,100,FDASTART,0)
"RTN","PXRMEXCS",82,0)
 S FNUM=$P(TEMP,";",1)
"RTN","PXRMEXCS",83,0)
 D FIELD^DID(FNUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXCS",84,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXCS",85,0)
 S CS=0
"RTN","PXRMEXCS",86,0)
 F IND=FDASTART:1:FDAEND D
"RTN","PXRMEXCS",87,0)
 . S TEMP=^PXD(811.8,IEN,100,IND,0)
"RTN","PXRMEXCS",88,0)
 . S DATA=$P(TEMP,"~",2,99)
"RTN","PXRMEXCS",89,0)
 . S TEMP=$P(TEMP,"~",1)
"RTN","PXRMEXCS",90,0)
 . S FNUM=$P(TEMP,";",1)
"RTN","PXRMEXCS",91,0)
 . I FNUM=SFN Q
"RTN","PXRMEXCS",92,0)
 . I FNUM="Exchange Stub" Q
"RTN","PXRMEXCS",93,0)
 . S IENS=$P(TEMP,";",2)
"RTN","PXRMEXCS",94,0)
 . S FIELD=$P(TEMP,";",3)
"RTN","PXRMEXCS",95,0)
 . S TEXT=FNUM_$L(IENS,",")_FIELD_DATA
"RTN","PXRMEXCS",96,0)
 . S CS=$$CRC32^XLFCRC(TEXT,CS)
"RTN","PXRMEXCS",97,0)
 . I DATA["WP-start" F JND=1:1:$P(DATA,"~",2) D
"RTN","PXRMEXCS",98,0)
 .. S IND=IND+1
"RTN","PXRMEXCS",99,0)
 .. S TEXT=^PXD(811.8,IEN,100,IND,0)
"RTN","PXRMEXCS",100,0)
 .. S CS=$$CRC32^XLFCRC(TEXT,CS)
"RTN","PXRMEXCS",101,0)
 Q CS
"RTN","PXRMEXCS",102,0)
 ;
"RTN","PXRMEXCS",103,0)
 ;====================================================
"RTN","PXRMEXCS",104,0)
ROUTINE(RA) ;Return checksum for a routine loaded in array RA. RA has the
"RTN","PXRMEXCS",105,0)
 ;form created by ^%ZOSF("LOAD") i.e, RA(1,0) ... RA(N,0).
"RTN","PXRMEXCS",106,0)
 N CS,IND,TEXT
"RTN","PXRMEXCS",107,0)
 S (CS,IND)=0
"RTN","PXRMEXCS",108,0)
 ;Get rid of the build number on the second line.
"RTN","PXRMEXCS",109,0)
 S RA(2,0)=$P(RA(2,0),";",1,6)
"RTN","PXRMEXCS",110,0)
 F  S IND=$O(RA(IND)) Q:+IND=0  D
"RTN","PXRMEXCS",111,0)
 . S TEXT=RA(IND,0)
"RTN","PXRMEXCS",112,0)
 . S CS=$$CRC32^XLFCRC(RA(IND,0),CS)
"RTN","PXRMEXCS",113,0)
 Q CS
"RTN","PXRMEXCS",114,0)
 ;
"RTN","PXRMEXCS",115,0)
 ;====================================================
"RTN","PXRMEXCS",116,0)
RTNCS(ROUTINE) ;Return checksum for a routine ROUTINE.
"RTN","PXRMEXCS",117,0)
 N CS,DIF,RA,X,XCNP
"RTN","PXRMEXCS",118,0)
 S XCNP=0
"RTN","PXRMEXCS",119,0)
 S DIF="RA("
"RTN","PXRMEXCS",120,0)
 S X=ROUTINE
"RTN","PXRMEXCS",121,0)
 ;Make sure the routine exists.
"RTN","PXRMEXCS",122,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXCS",123,0)
 I $T D
"RTN","PXRMEXCS",124,0)
 . X ^%ZOSF("LOAD")
"RTN","PXRMEXCS",125,0)
 . S CS=$$ROUTINE(.RA)
"RTN","PXRMEXCS",126,0)
 E  S CS=-1
"RTN","PXRMEXCS",127,0)
 Q CS
"RTN","PXRMEXCS",128,0)
 ;
"RTN","PXRMEXCS",129,0)
 ;====================================================
"RTN","PXRMEXCS",130,0)
PRTNCS(IEN,START,END) ;Return checksum for a packed routine.
"RTN","PXRMEXCS",131,0)
 N CS,IND,SL,TEXT
"RTN","PXRMEXCS",132,0)
 S CS=0,SL=START+1
"RTN","PXRMEXCS",133,0)
 F IND=START:1:END D
"RTN","PXRMEXCS",134,0)
 . S TEXT=^PXD(811.8,IEN,100,IND,0)
"RTN","PXRMEXCS",135,0)
 . ;Get rid of the build number on the second line.
"RTN","PXRMEXCS",136,0)
 . I IND=SL S TEXT=$P(TEXT,";",1,6)
"RTN","PXRMEXCS",137,0)
 . S CS=$$CRC32^XLFCRC(TEXT,CS)
"RTN","PXRMEXCS",138,0)
 Q CS
"RTN","PXRMEXCS",139,0)
 ;
"RTN","PXRMEXFI")
0^50^B55982418
"RTN","PXRMEXFI",1,0)
PXRMEXFI ;SLC/PKR/PJH - Exchange utilities for file entries. ;08/02/2013
"RTN","PXRMEXFI",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXFI",3,0)
 ;==============================================
"RTN","PXRMEXFI",4,0)
DELALL(FILENUM,NAME) ;Delete all file entries named NAME.
"RTN","PXRMEXFI",5,0)
 N IEN,IND,LIST,MSG
"RTN","PXRMEXFI",6,0)
 D FIND^DIC(FILENUM,"","@","KU",NAME,"*","","","","LIST","MSG")
"RTN","PXRMEXFI",7,0)
 I $P(LIST("DILIST",0),U,1)=0 Q
"RTN","PXRMEXFI",8,0)
 S IND=0
"RTN","PXRMEXFI",9,0)
 F  S IND=$O(LIST("DILIST",2,IND)) Q:IND=""  D
"RTN","PXRMEXFI",10,0)
 . S IEN=LIST("DILIST",2,IND)
"RTN","PXRMEXFI",11,0)
 . D DELETE(FILENUM,IEN)
"RTN","PXRMEXFI",12,0)
 Q
"RTN","PXRMEXFI",13,0)
 ;
"RTN","PXRMEXFI",14,0)
 ;==============================================
"RTN","PXRMEXFI",15,0)
DELETE(FILENUM,DA) ;Delete a file entry.
"RTN","PXRMEXFI",16,0)
 N DIK
"RTN","PXRMEXFI",17,0)
 S DIK=$$ROOT^DILFD(FILENUM)
"RTN","PXRMEXFI",18,0)
 D ^DIK
"RTN","PXRMEXFI",19,0)
 Q
"RTN","PXRMEXFI",20,0)
 ;
"RTN","PXRMEXFI",21,0)
 ;==============================================
"RTN","PXRMEXFI",22,0)
FEIMSG(SAME,ATTR) ;Output the general file exists install message.
"RTN","PXRMEXFI",23,0)
 N IND,NOUT,TEXT,TEXTO
"RTN","PXRMEXFI",24,0)
 S TEXT(1)=ATTR("FILE NAME")_" entry named "_ATTR("NAME")_" already exists"
"RTN","PXRMEXFI",25,0)
 I SAME D
"RTN","PXRMEXFI",26,0)
 . S TEXT(2)="and the packed component is identical, skipping."
"RTN","PXRMEXFI",27,0)
 . S TEXT(3)=" "
"RTN","PXRMEXFI",28,0)
 . D FORMAT^PXRMTEXT(1,70,3,.TEXT,.NOUT,.TEXTO)
"RTN","PXRMEXFI",29,0)
 . F IND=1:1:NOUT W !,TEXTO(IND)
"RTN","PXRMEXFI",30,0)
 . H 1
"RTN","PXRMEXFI",31,0)
 I 'SAME D
"RTN","PXRMEXFI",32,0)
 . S TEXT(2)="but the packed component is different, what do you want to do?"
"RTN","PXRMEXFI",33,0)
 . D FORMAT^PXRMTEXT(1,70,2,.TEXT,.NOUT,.TEXTO)
"RTN","PXRMEXFI",34,0)
 . F IND=1:1:NOUT W !,TEXTO(IND)
"RTN","PXRMEXFI",35,0)
 Q
"RTN","PXRMEXFI",36,0)
 ;
"RTN","PXRMEXFI",37,0)
 ;==============================================
"RTN","PXRMEXFI",38,0)
FOKTT(FILENUM) ;Check if it is ok to transport items from this file.
"RTN","PXRMEXFI",39,0)
 ;
"RTN","PXRMEXFI",40,0)
 I $G(PXRMIGDS) Q 1
"RTN","PXRMEXFI",41,0)
 ;If a file has been standardized do not transport it.
"RTN","PXRMEXFI",42,0)
 ;DBIA #4640
"RTN","PXRMEXFI",43,0)
 I $P($$GETSTAT^HDISVF01(FILENUM),U,1)>0 Q 0
"RTN","PXRMEXFI",44,0)
 ;
"RTN","PXRMEXFI",45,0)
 ;Drugs not allowed.
"RTN","PXRMEXFI",46,0)
 I FILENUM=50 Q 0
"RTN","PXRMEXFI",47,0)
 ;
"RTN","PXRMEXFI",48,0)
 ;VA Generic not allowed.
"RTN","PXRMEXFI",49,0)
 I FILENUM=50.6 Q 0
"RTN","PXRMEXFI",50,0)
 ;
"RTN","PXRMEXFI",51,0)
 ;VA Drug Class not allowed.
"RTN","PXRMEXFI",52,0)
 I FILENUM=50.605 Q 0
"RTN","PXRMEXFI",53,0)
 ;
"RTN","PXRMEXFI",54,0)
 ;Lab tests not allowed.
"RTN","PXRMEXFI",55,0)
 I FILENUM=60 Q 0
"RTN","PXRMEXFI",56,0)
 ;
"RTN","PXRMEXFI",57,0)
 ;Radiology procedures not allowed.
"RTN","PXRMEXFI",58,0)
 I FILENUM=71 Q 0
"RTN","PXRMEXFI",59,0)
 ;
"RTN","PXRMEXFI",60,0)
 ;ICD9 (used in Dialogs) not allowed.
"RTN","PXRMEXFI",61,0)
 I FILENUM=80 Q 0
"RTN","PXRMEXFI",62,0)
 ;
"RTN","PXRMEXFI",63,0)
 ;ICD0 not allowed.
"RTN","PXRMEXFI",64,0)
 I FILENUM=80.1 Q 0
"RTN","PXRMEXFI",65,0)
 ;
"RTN","PXRMEXFI",66,0)
 ;CPT (used in Dialogs) not allowed.
"RTN","PXRMEXFI",67,0)
 I FILENUM=81 Q 0
"RTN","PXRMEXFI",68,0)
 ;
"RTN","PXRMEXFI",69,0)
 ;Order Dialogs not allowed.
"RTN","PXRMEXFI",70,0)
 I FILENUM=101.41 Q 0
"RTN","PXRMEXFI",71,0)
 ;
"RTN","PXRMEXFI",72,0)
 ;Orderable Items not allowed.
"RTN","PXRMEXFI",73,0)
 I FILENUM=101.43 Q 0
"RTN","PXRMEXFI",74,0)
 ;
"RTN","PXRMEXFI",75,0)
 ;GMRV VITAL TYPE not allowed.
"RTN","PXRMEXFI",76,0)
 I FILENUM=120.51 Q 0
"RTN","PXRMEXFI",77,0)
 ;
"RTN","PXRMEXFI",78,0)
 ;Health Summary Type allowed in certain cases.
"RTN","PXRMEXFI",79,0)
 I FILENUM=142 Q 1
"RTN","PXRMEXFI",80,0)
 ;
"RTN","PXRMEXFI",81,0)
 ;Health Summary Components allowed in certain cases.
"RTN","PXRMEXFI",82,0)
 I FILENUM=142.1 Q 1
"RTN","PXRMEXFI",83,0)
 ;
"RTN","PXRMEXFI",84,0)
 ;Health Summary Object allowed in certain cases.
"RTN","PXRMEXFI",85,0)
 I FILENUM=142.5 Q 1
"RTN","PXRMEXFI",86,0)
 ;
"RTN","PXRMEXFI",87,0)
 ;Mental Health Instruments not allowed.
"RTN","PXRMEXFI",88,0)
 I FILENUM=601 Q 0
"RTN","PXRMEXFI",89,0)
 I FILENUM=601.71 Q 0
"RTN","PXRMEXFI",90,0)
 ;
"RTN","PXRMEXFI",91,0)
 ;WV Notification Purpose not allowed.
"RTN","PXRMEXFI",92,0)
 I FILENUM=790.404 Q 0
"RTN","PXRMEXFI",93,0)
 ;
"RTN","PXRMEXFI",94,0)
 ;TIU Document Definition allowed in certain cases.
"RTN","PXRMEXFI",95,0)
 I FILENUM=8925.1 Q 1
"RTN","PXRMEXFI",96,0)
 ;
"RTN","PXRMEXFI",97,0)
 ;If control gets to here then it is an allowed file type.
"RTN","PXRMEXFI",98,0)
 Q 1
"RTN","PXRMEXFI",99,0)
 ;
"RTN","PXRMEXFI",100,0)
 ;==============================================
"RTN","PXRMEXFI",101,0)
GETFACT(PT01,ATTR,NEWPT01,NAMECHG,IEN) ;Get the action for a file.
"RTN","PXRMEXFI",102,0)
 N ACTION,CHOICES,CSUM,DIR,FILENUM,MSG,RESULT
"RTN","PXRMEXFI",103,0)
 N SAME,X,Y
"RTN","PXRMEXFI",104,0)
 ;See if this entry is already defined.
"RTN","PXRMEXFI",105,0)
CHK ;
"RTN","PXRMEXFI",106,0)
 S NEWPT01=""
"RTN","PXRMEXFI",107,0)
 S FILENUM=ATTR("FILE NUMBER")
"RTN","PXRMEXFI",108,0)
 I IEN="" S IEN=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXFI",109,0)
 I IEN D
"RTN","PXRMEXFI",110,0)
 .;If the entry already exists compare the existing entry checksum
"RTN","PXRMEXFI",111,0)
 .;with the packed entry checksum.
"RTN","PXRMEXFI",112,0)
 . S CSUM=$$FILE^PXRMEXCS(ATTR("FILE NUMBER"),IEN)
"RTN","PXRMEXFI",113,0)
 . S SAME=$S(ATTR("CHECKSUM")=CSUM:1,1:0)
"RTN","PXRMEXFI",114,0)
 . D FEIMSG(SAME,.ATTR)
"RTN","PXRMEXFI",115,0)
 . I SAME S ACTION="S"
"RTN","PXRMEXFI",116,0)
 . I 'SAME D
"RTN","PXRMEXFI",117,0)
 .. S CHOICES=$S(FILENUM=801.41:"CMOUQS",FILENUM=811.5:"CMOUQS",1:"COUQS")
"RTN","PXRMEXFI",118,0)
 .. S DIR("B")="O"
"RTN","PXRMEXFI",119,0)
 .. S ACTION=$$GETACT^PXRMEXIU(CHOICES,.DIR)
"RTN","PXRMEXFI",120,0)
 E  D
"RTN","PXRMEXFI",121,0)
 . W !!,ATTR("FILE NAME")," entry ",PT01," is NEW,"
"RTN","PXRMEXFI",122,0)
 . W !,"what do you want to do?"
"RTN","PXRMEXFI",123,0)
 . S CHOICES="CIQS"
"RTN","PXRMEXFI",124,0)
 . S DIR("B")="I"
"RTN","PXRMEXFI",125,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES,.DIR)
"RTN","PXRMEXFI",126,0)
 ;
"RTN","PXRMEXFI",127,0)
 I ACTION="Q" Q ACTION
"RTN","PXRMEXFI",128,0)
 I ACTION="C" D
"RTN","PXRMEXFI",129,0)
 . S NEWPT01=$$GETUNAME^PXRMEXIU(.ATTR)
"RTN","PXRMEXFI",130,0)
 .;Make sure the NEW .01 passes any input transforms.
"RTN","PXRMEXFI",131,0)
 . I NEWPT01="" S ACTION="S"
"RTN","PXRMEXFI",132,0)
 . E  D CHK^DIE(ATTR("FILE NUMBER"),.01,"",NEWPT01,.RESULT,"MSG")
"RTN","PXRMEXFI",133,0)
 I $G(RESULT)="^" D  G CHK
"RTN","PXRMEXFI",134,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXFI",135,0)
 . K RESULT
"RTN","PXRMEXFI",136,0)
 ;
"RTN","PXRMEXFI",137,0)
 I ACTION="O" D
"RTN","PXRMEXFI",138,0)
 .;If the action is overwrite double check that is what the user
"RTN","PXRMEXFI",139,0)
 .;really wants to do.
"RTN","PXRMEXFI",140,0)
 . N DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXFI",141,0)
 . K DIR
"RTN","PXRMEXFI",142,0)
 . S DIR(0)="Y"_U_"A"
"RTN","PXRMEXFI",143,0)
 . S DIR("A")="Are you sure you want to overwrite"
"RTN","PXRMEXFI",144,0)
 . S DIR("B")="N"
"RTN","PXRMEXFI",145,0)
 . D ^DIR
"RTN","PXRMEXFI",146,0)
 . I $D(DIROUT)!$D(DIRUT) S Y=0
"RTN","PXRMEXFI",147,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=0
"RTN","PXRMEXFI",148,0)
 . S ACTION=$S(Y:"O",1:"S")
"RTN","PXRMEXFI",149,0)
 ;
"RTN","PXRMEXFI",150,0)
 I ACTION="P" D
"RTN","PXRMEXFI",151,0)
 . N DIC,Y
"RTN","PXRMEXFI",152,0)
 . S DIC=ATTR("FILE NUMBER")
"RTN","PXRMEXFI",153,0)
 . S DIC(0)="AEMQ"
"RTN","PXRMEXFI",154,0)
 . D ^DIC
"RTN","PXRMEXFI",155,0)
 . I Y=-1 S ACTION="S"
"RTN","PXRMEXFI",156,0)
 . E  S NEWPT01=$P(Y,U,2)
"RTN","PXRMEXFI",157,0)
 ;
"RTN","PXRMEXFI",158,0)
 I NEWPT01'="" S NAMECHG(ATTR("FILE NUMBER"),PT01)=NEWPT01
"RTN","PXRMEXFI",159,0)
 Q ACTION
"RTN","PXRMEXFI",160,0)
 ;
"RTN","PXRMEXFI",161,0)
 ;==============================================
"RTN","PXRMEXFI",162,0)
IOKTI(IEN,FILENUM,ITEMINFO) ;Check if it is ok to install this item.
"RTN","PXRMEXFI",163,0)
 ;To be installable, items from 801.41 need to be marked as selectable.
"RTN","PXRMEXFI",164,0)
 I FILENUM=801.41 Q $P(ITEMINFO,U,7)
"RTN","PXRMEXFI",165,0)
 ;Do not allow national routines.
"RTN","PXRMEXFI",166,0)
 I (FILENUM=0),'$D(PXRMINCF),$E($P(ITEMINFO,U,1),1,4)="PXRM" Q 0
"RTN","PXRMEXFI",167,0)
 N FDASTART,FDAEND
"RTN","PXRMEXFI",168,0)
 S FDASTART=$P(ITEMINFO,U,2)
"RTN","PXRMEXFI",169,0)
 S FDAEND=$P(ITEMINFO,U,3)
"RTN","PXRMEXFI",170,0)
 ;If FDSTART=FDAEND then only the .01 was packed so it may not
"RTN","PXRMEXFI",171,0)
 ;be installable.
"RTN","PXRMEXFI",172,0)
 I FDASTART=FDAEND Q $$IOKTP(FILENUM)
"RTN","PXRMEXFI",173,0)
 ;Check computed findings, national ones cannot be installed.
"RTN","PXRMEXFI",174,0)
 I (FILENUM=811.4),'$D(PXRMINCF) Q $$CFOKTI^PXRMEXU0(IEN,FDASTART,FDAEND)
"RTN","PXRMEXFI",175,0)
 Q 1
"RTN","PXRMEXFI",176,0)
 ;
"RTN","PXRMEXFI",177,0)
 ;==============================================
"RTN","PXRMEXFI",178,0)
IOKTP(FILENUM,IEN) ;Check if it is ok to pack this item.
"RTN","PXRMEXFI",179,0)
 ;If the entire file is not transportable we are done
"RTN","PXRMEXFI",180,0)
 I '$$FOKTT(FILENUM) Q 0
"RTN","PXRMEXFI",181,0)
 N OK
"RTN","PXRMEXFI",182,0)
 S OK=1
"RTN","PXRMEXFI",183,0)
 ;Check files where only specific entries can be packed.
"RTN","PXRMEXFI",184,0)
 ;
"RTN","PXRMEXFI",185,0)
 ;Health Summary Object not allowed if the type is not allowed
"RTN","PXRMEXFI",186,0)
 I FILENUM=142.5 D  Q OK
"RTN","PXRMEXFI",187,0)
 . I '$D(IEN)!($G(IEN)="") S OK=0 Q
"RTN","PXRMEXFI",188,0)
 . N HSTIEN
"RTN","PXRMEXFI",189,0)
 . S HSTIEN=$P($G(^GMT(142.5,IEN,0)),U,3) I HSTIEN'>0 S OK=0 Q
"RTN","PXRMEXFI",190,0)
 . S OK=$$IOKTP(142,HSTIEN)
"RTN","PXRMEXFI",191,0)
 .;DBIA #5445
"RTN","PXRMEXFI",192,0)
 . I OK=0 D EN^GMTSDESC(IEN,142.5,"HS OBJECT")
"RTN","PXRMEXFI",193,0)
 ;
"RTN","PXRMEXFI",194,0)
 ;Health Summary Type not allowed if it contains local components
"RTN","PXRMEXFI",195,0)
 ;or PROGRESS NOTE SELECTED component
"RTN","PXRMEXFI",196,0)
 I FILENUM=142 D  Q OK
"RTN","PXRMEXFI",197,0)
 . I +$G(IEN)=0 S OK=0 Q
"RTN","PXRMEXFI",198,0)
 . N IND,PGSIEN
"RTN","PXRMEXFI",199,0)
 . S PGSIEN=$O(^GMT(142.1,"B","PROGRESS NOTES SELECTED",""))
"RTN","PXRMEXFI",200,0)
 . S IND=0,OK=1
"RTN","PXRMEXFI",201,0)
 . ;Scan HS Type for components, do not pack if it contains local
"RTN","PXRMEXFI",202,0)
 . ;components or selected Progress Note Component.
"RTN","PXRMEXFI",203,0)
 . F  S IND=$O(^GMT(142,IEN,1,IND)) Q:('OK)!(IND="")  D
"RTN","PXRMEXFI",204,0)
 .. I $P($G(^GMT(142,IEN,1,IND,0)),U,2)>99999 S OK=0 Q
"RTN","PXRMEXFI",205,0)
 .. I $P($G(^GMT(142,IEN,1,IND,0)),U,2)=PGSIEN S OK=0 Q
"RTN","PXRMEXFI",206,0)
 .;DBIA #5445
"RTN","PXRMEXFI",207,0)
 . I OK=0 D EN^GMTSDESC(IEN,142,"HS TYPE")
"RTN","PXRMEXFI",208,0)
 ;
"RTN","PXRMEXFI",209,0)
 ;Health Summary Components not allowed. National components do not
"RTN","PXRMEXFI",210,0)
 ;need to be packed, they already exist.
"RTN","PXRMEXFI",211,0)
 I FILENUM=142.1 D  Q OK
"RTN","PXRMEXFI",212,0)
 .;Only use to pack new national components being released
"RTN","PXRMEXFI",213,0)
 .;with the patch.
"RTN","PXRMEXFI",214,0)
 . I '$G(PXRMIHSC) S OK=0
"RTN","PXRMEXFI",215,0)
 .;DBIA #5445
"RTN","PXRMEXFI",216,0)
 .;Create description of local HS Components
"RTN","PXRMEXFI",217,0)
 . I +$G(IEN)>99999 D EN^GMTSDESC(IEN,142.1,"HS COMP")
"RTN","PXRMEXFI",218,0)
 ;
"RTN","PXRMEXFI",219,0)
 ;TIU Document Definition, allowed only if it is a health summary object.
"RTN","PXRMEXFI",220,0)
 I FILENUM=8925.1 D  Q OK
"RTN","PXRMEXFI",221,0)
 . N ARY,HSOIEN
"RTN","PXRMEXFI",222,0)
 . I '$D(IEN)!($G(IEN)="") S OK=0 Q
"RTN","PXRMEXFI",223,0)
 .;DBIA #5447
"RTN","PXRMEXFI",224,0)
 . D OBJBYIEN^TIUCHECK(.ARY,IEN)
"RTN","PXRMEXFI",225,0)
 . ;
"RTN","PXRMEXFI",226,0)
 . ;If not TIU object and INST is set, assume this is called from a
"RTN","PXRMEXFI",227,0)
 . ;national patch installing TIU Title and Document Class.
"RTN","PXRMEXFI",228,0)
 . I ARY(IEN,.04)'="O",PXRMINST=1 S OK=1 Q
"RTN","PXRMEXFI",229,0)
 . ;
"RTN","PXRMEXFI",230,0)
 . ;Only allow TIU/HS Object to be installed.
"RTN","PXRMEXFI",231,0)
 . I $G(ARY(IEN,9))'["S X=$$TIU^GMTSOBJ(" S OK=0 Q
"RTN","PXRMEXFI",232,0)
 . S HSOIEN=+$P(ARY(IEN,9),",",2)
"RTN","PXRMEXFI",233,0)
 . I HSOIEN'>0 S OK=0 Q
"RTN","PXRMEXFI",234,0)
 . S OK=$$IOKTP(142.5,HSOIEN)
"RTN","PXRMEXFI",235,0)
 . I OK=0 D TIU^PXRMEXU5(IEN,.ARY,"TIU OBJECT")
"RTN","PXRMEXFI",236,0)
 ;
"RTN","PXRMEXFI",237,0)
 Q OK
"RTN","PXRMEXFI",238,0)
 ;
"RTN","PXRMEXFI",239,0)
 ;==============================================
"RTN","PXRMEXFI",240,0)
NTHLOC(IEN,SUB) ;Save information about non-transportable hospital locations.
"RTN","PXRMEXFI",241,0)
 N HLOC,IND,NL
"RTN","PXRMEXFI",242,0)
 S NL=1,^TMP($J,SUB,IEN,NL)="Location List: "_$P(^PXRMD(810.9,IEN,0),U,1)
"RTN","PXRMEXFI",243,0)
 S IND=0
"RTN","PXRMEXFI",244,0)
 F  S IND=+$O(^PXRMD(810.9,IEN,44,IND)) Q:IND=0  D
"RTN","PXRMEXFI",245,0)
 . S NL=NL+1
"RTN","PXRMEXFI",246,0)
 .;DBIA #10040
"RTN","PXRMEXFI",247,0)
 . S HLOC=^PXRMD(810.9,IEN,44,IND,0),HLOC=$P(^SC(HLOC,0),U,1)
"RTN","PXRMEXFI",248,0)
 . S ^TMP($J,SUB,IEN,NL)="  "_HLOC
"RTN","PXRMEXFI",249,0)
 Q
"RTN","PXRMEXFI",250,0)
 ;
"RTN","PXRMEXFI",251,0)
 ;==============================================
"RTN","PXRMEXFI",252,0)
SETATTR(ATTR,FILE,PT01) ;Set the file attributes for the file FILE.
"RTN","PXRMEXFI",253,0)
 N MSG
"RTN","PXRMEXFI",254,0)
 S ATTR("FILE NUMBER")=FILE
"RTN","PXRMEXFI",255,0)
 S ATTR("FILE NAME")=$$GET1^DID(FILE,"","","NAME","","MSG")
"RTN","PXRMEXFI",256,0)
 ;This call gets the field length.
"RTN","PXRMEXFI",257,0)
 D FIELD^DID(FILE,.01,"","FIELD LENGTH","ATTR","MSG")
"RTN","PXRMEXFI",258,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXFI",259,0)
 S (ATTR("NAME"),ATTR("PT01"))=PT01
"RTN","PXRMEXFI",260,0)
 Q
"RTN","PXRMEXFI",261,0)
 ;
"RTN","PXRMEXHF")
0^59^B49479695
"RTN","PXRMEXHF",1,0)
PXRMEXHF ;SLC/PKR - Routines to select and deal with host files. ;09/27/2013
"RTN","PXRMEXHF",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXHF",3,0)
 ;============================================
"RTN","PXRMEXHF",4,0)
CHF(SUCCESS,LIST,PATH,FILE) ;Put the repository entries in LIST into the
"RTN","PXRMEXHF",5,0)
 ;host file specified by PATH and FILE.
"RTN","PXRMEXHF",6,0)
 N IND,GBL,LEN,LNUM,RIEN
"RTN","PXRMEXHF",7,0)
 S SUCCESS=1
"RTN","PXRMEXHF",8,0)
 S LNUM=$P(LIST,",",1)
"RTN","PXRMEXHF",9,0)
 I LNUM="" Q
"RTN","PXRMEXHF",10,0)
 S RIEN=$$RIEN^PXRMEXU1(LNUM)
"RTN","PXRMEXHF",11,0)
 S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",12,0)
 ;Save the first entry.
"RTN","PXRMEXHF",13,0)
 S SUCCESS(LNUM)=$$GTF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",14,0)
 I SUCCESS(LNUM)=0 Q
"RTN","PXRMEXHF",15,0)
 S LEN=$L(LIST,",")-1
"RTN","PXRMEXHF",16,0)
 I LEN=1 Q
"RTN","PXRMEXHF",17,0)
 ;Append any remaining entries.
"RTN","PXRMEXHF",18,0)
 F IND=2:1:LEN D
"RTN","PXRMEXHF",19,0)
 . S LNUM=$P(LIST,",",IND)
"RTN","PXRMEXHF",20,0)
 . S RIEN=$$RIEN^PXRMEXU1(LNUM)
"RTN","PXRMEXHF",21,0)
 . S GBL="^PXD(811.8,"_RIEN_",100,1,0)"
"RTN","PXRMEXHF",22,0)
 . S SUCCESS(LNUM)=$$GATF^%ZISH(GBL,4,PATH,FILE)
"RTN","PXRMEXHF",23,0)
 Q
"RTN","PXRMEXHF",24,0)
 ;
"RTN","PXRMEXHF",25,0)
 ;============================================
"RTN","PXRMEXHF",26,0)
GETEHF(EXT,DPATH) ;Get an existing host file.
"RTN","PXRMEXHF",27,0)
 ;Build a list of all .EXT files in the current directory.
"RTN","PXRMEXHF",28,0)
 N DEXT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILESPEC,FILELIST,PATH,X,Y
"RTN","PXRMEXHF",29,0)
 I EXT="" D
"RTN","PXRMEXHF",30,0)
 . S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",31,0)
 . S DIR("A")="Enter a file extension: "
"RTN","PXRMEXHF",32,0)
 . S DIR("?")="A file specification has the format name.extension."
"RTN","PXRMEXHF",33,0)
 . D ^DIR
"RTN","PXRMEXHF",34,0)
 . S EXT=Y
"RTN","PXRMEXHF",35,0)
 I $D(DIRUT) Q ""
"RTN","PXRMEXHF",36,0)
 S DEXT="*."_EXT
"RTN","PXRMEXHF",37,0)
 S FILESPEC(DEXT)=""
"RTN","PXRMEXHF",38,0)
 S PATH=$S($G(DPATH)'="":DPATH,1:$$PWD^%ZISH)
"RTN","PXRMEXHF",39,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",40,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",41,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",42,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",43,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension."
"RTN","PXRMEXHF",44,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",45,0)
 I $G(EXT)'="" S DIR("?",4)="The default extension is "_EXT_"."
"RTN","PXRMEXHF",46,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",47,0)
 D ^DIR
"RTN","PXRMEXHF",48,0)
 I $D(DIRUT) Q ""
"RTN","PXRMEXHF",49,0)
 S PATH=Y
"RTN","PXRMEXHF",50,0)
 S Y=$$LIST^%ZISH(PATH,"FILESPEC","FILELIST")
"RTN","PXRMEXHF",51,0)
 I Y D
"RTN","PXRMEXHF",52,0)
 . W !,"The following "_EXT_" files were found in ",PATH
"RTN","PXRMEXHF",53,0)
 . S FILE=""
"RTN","PXRMEXHF",54,0)
 . F  S FILE=$O(FILELIST(FILE)) Q:FILE=""  W !,?2,FILE
"RTN","PXRMEXHF",55,0)
 E  W !,"No "_EXT_" files were found in path ",PATH
"RTN","PXRMEXHF",56,0)
 ;
"RTN","PXRMEXHF",57,0)
 K DIR,X,Y
"RTN","PXRMEXHF",58,0)
 S DIR(0)="FAOU"_U_"1:32"
"RTN","PXRMEXHF",59,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",60,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is "_EXT
"RTN","PXRMEXHF",61,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",62,0)
 S DIR("?")="  "_PATH_"FILE."_EXT
"RTN","PXRMEXHF",63,0)
 D ^DIR
"RTN","PXRMEXHF",64,0)
 I $D(DIRUT) Q ""
"RTN","PXRMEXHF",65,0)
 S FILE=Y
"RTN","PXRMEXHF",66,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",67,0)
 I FILE'["." S FILE=FILE_"."_EXT
"RTN","PXRMEXHF",68,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",69,0)
 ;
"RTN","PXRMEXHF",70,0)
 ;============================================
"RTN","PXRMEXHF",71,0)
GETHFN(EXT) ;Get the name of a host file to store repository entries in.
"RTN","PXRMEXHF",72,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILE,HFNAME,PATH,X,Y
"RTN","PXRMEXHF",73,0)
GETHF ;As a default set the path to the current directory.
"RTN","PXRMEXHF",74,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",75,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",76,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",77,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",78,0)
 S DIR("?",1)="A host file is a file on your host system."
"RTN","PXRMEXHF",79,0)
 S DIR("?",2)="A complete host file consists of a path, file name, and extension."
"RTN","PXRMEXHF",80,0)
 S DIR("?",3)="A path consists of a device and directory name."
"RTN","PXRMEXHF",81,0)
 I $G(EXT)'="" S DIR("?",4)="The default extension is "_EXT_"."
"RTN","PXRMEXHF",82,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",83,0)
 D ^DIR
"RTN","PXRMEXHF",84,0)
 I $D(DIRUT) Q 0
"RTN","PXRMEXHF",85,0)
 S PATH=Y
"RTN","PXRMEXHF",86,0)
 K DIR,X,Y
"RTN","PXRMEXHF",87,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",88,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",89,0)
 I $G(EXT)'="" D
"RTN","PXRMEXHF",90,0)
 . S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is "_EXT
"RTN","PXRMEXHF",91,0)
 . S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",92,0)
 . S DIR("?")="  "_PATH_"FILE."_EXT
"RTN","PXRMEXHF",93,0)
 E  D
"RTN","PXRMEXHF",94,0)
 . S DIR("?",1)="A file name has the format NAME.EXTENSION"
"RTN","PXRMEXHF",95,0)
 . S DIR("?")="There is no default extension so you must input the complete file name."
"RTN","PXRMEXHF",96,0)
 D ^DIR
"RTN","PXRMEXHF",97,0)
 I $D(DIRUT) Q 0
"RTN","PXRMEXHF",98,0)
 S FILE=Y
"RTN","PXRMEXHF",99,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",100,0)
 I FILE'["." S FILE=FILE_"."_EXT
"RTN","PXRMEXHF",101,0)
 I $P(FILE,".",2)="" W !,"The file name must include an extension." G GETHF
"RTN","PXRMEXHF",102,0)
 S HFNAME=PATH_FILE
"RTN","PXRMEXHF",103,0)
 S DIR(0)="YAO"
"RTN","PXRMEXHF",104,0)
 S DIR("A")="Host file is "_HFNAME_" is this correct?: "
"RTN","PXRMEXHF",105,0)
 S DIR("B")="Y"
"RTN","PXRMEXHF",106,0)
 K X,Y
"RTN","PXRMEXHF",107,0)
 D ^DIR
"RTN","PXRMEXHF",108,0)
 I $D(DIRUT) Q 0
"RTN","PXRMEXHF",109,0)
 I 'Y G GETHF
"RTN","PXRMEXHF",110,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",111,0)
 ;
"RTN","PXRMEXHF",112,0)
 ;============================================
"RTN","PXRMEXHF",113,0)
LHF(SUCCESS,PATH,FILE) ;Load a host file containing exchange entries into
"RTN","PXRMEXHF",114,0)
 ;the Exchange file.
"RTN","PXRMEXHF",115,0)
 N GBL
"RTN","PXRMEXHF",116,0)
 K ^TMP($J,"EXHF")
"RTN","PXRMEXHF",117,0)
 S GBL="^TMP($J,""EXHF"",1,1)"
"RTN","PXRMEXHF",118,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEXHF",119,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILE,GBL,3)
"RTN","PXRMEXHF",120,0)
 I 'SUCCESS Q
"RTN","PXRMEXHF",121,0)
 ;Make sure it has the correct format.
"RTN","PXRMEXHF",122,0)
 I (^TMP($J,"EXHF",1,1)'["xml")!(^TMP($J,"EXHF",2,1)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",123,0)
 . W !,"This host file does not have the correct format!"
"RTN","PXRMEXHF",124,0)
 . H 2
"RTN","PXRMEXHF",125,0)
 . S SUCCESS=0
"RTN","PXRMEXHF",126,0)
 . K ^TMP($J,"EXHF")
"RTN","PXRMEXHF",127,0)
 W !,"Loading host file ",PATH,FILE
"RTN","PXRMEXHF",128,0)
 D LTMP(.SUCCESS,"EXHF")
"RTN","PXRMEXHF",129,0)
 Q
"RTN","PXRMEXHF",130,0)
 ;
"RTN","PXRMEXHF",131,0)
 ;============================================
"RTN","PXRMEXHF",132,0)
LTMP(SUCCESS,NODE) ;Load the contents of ^TMP($J,NODE) into the Exchange
"RTN","PXRMEXHF",133,0)
 ;file. The format is ^TMP($J,NODE,NUM,1)=data
"RTN","PXRMEXHF",134,0)
 N CURRL,CSUM,DATEP,DONE,EXTYPE,FDA,IENROOT,IND,LINE
"RTN","PXRMEXHF",135,0)
 N MSG,NENTRY,NLINES,RETMP,RNAME,SITE,SOURCE,SSOURCE,US,USER,VRSN
"RTN","PXRMEXHF",136,0)
 S RETMP="^TMP($J,""EXLHF"")"
"RTN","PXRMEXHF",137,0)
 S (CURRL,DONE,NENTRY,NLINES,SSOURCE)=0
"RTN","PXRMEXHF",138,0)
 F  Q:DONE  D
"RTN","PXRMEXHF",139,0)
 . S CURRL=CURRL+1
"RTN","PXRMEXHF",140,0)
 . I '$D(^TMP($J,NODE,CURRL,1)) S DONE=1 Q
"RTN","PXRMEXHF",141,0)
 . S LINE=^TMP($J,NODE,CURRL,1)
"RTN","PXRMEXHF",142,0)
 . S NLINES=NLINES+1
"RTN","PXRMEXHF",143,0)
 . S ^TMP($J,"EXLHF",NLINES,0)=LINE
"RTN","PXRMEXHF",144,0)
 . I LINE["<PACKAGE_VERSION>" S VRSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXHF",145,0)
 . I LINE["<EXCHANGE_TYPE>" S EXTYPE=$$GETTAGV^PXRMEXU3(LINE,"<EXCHANGE_TYPE>",1)
"RTN","PXRMEXHF",146,0)
 . I LINE="<SOURCE>" S SSOURCE=1
"RTN","PXRMEXHF",147,0)
 . I SSOURCE D
"RTN","PXRMEXHF",148,0)
 .. I LINE["<NAME>" S RNAME=$$GETTAGV^PXRMEXU3(LINE,"<NAME>",1)
"RTN","PXRMEXHF",149,0)
 .. I LINE["<USER>" S USER=$$GETTAGV^PXRMEXU3(LINE,"<USER>",1)
"RTN","PXRMEXHF",150,0)
 .. I LINE["<SITE>" S SITE=$$GETTAGV^PXRMEXU3(LINE,"<SITE>",1)
"RTN","PXRMEXHF",151,0)
 .. I LINE["<DATE_PACKED>" S DATEP=$$GETTAGV^PXRMEXU3(LINE,"<DATE_PACKED>")
"RTN","PXRMEXHF",152,0)
 . I LINE="</SOURCE>" D
"RTN","PXRMEXHF",153,0)
 .. S SSOURCE=0
"RTN","PXRMEXHF",154,0)
 .. S SOURCE=USER_" at "_SITE
"RTN","PXRMEXHF",155,0)
 .;See if the entry is loaded into the temporary storage.
"RTN","PXRMEXHF",156,0)
 . I LINE="</REMINDER_EXCHANGE_FILE_ENTRY>" D
"RTN","PXRMEXHF",157,0)
 .. S NLINES=0
"RTN","PXRMEXHF",158,0)
 .. S NENTRY=NENTRY+1
"RTN","PXRMEXHF",159,0)
 ..;Make sure it has the correct format.
"RTN","PXRMEXHF",160,0)
 .. I (^TMP($J,"EXLHF",1,0)'["xml")!(^TMP($J,"EXLHF",2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXHF",161,0)
 ... W !,"There is a problem reading this .prd file, try a new copy of it."
"RTN","PXRMEXHF",162,0)
 ... S SUCCESS=0
"RTN","PXRMEXHF",163,0)
 ... H 2
"RTN","PXRMEXHF",164,0)
 ..;Make sure this entry does not already exist.
"RTN","PXRMEXHF",165,0)
 .. I $$REXISTS^PXRMEXIU(RNAME,DATEP) D
"RTN","PXRMEXHF",166,0)
 ... W !,RNAME," with a date packed of ",DATEP
"RTN","PXRMEXHF",167,0)
 ... W !,"is already in the Exchange File."
"RTN","PXRMEXHF",168,0)
 ... S SUCCESS(NENTRY)=0
"RTN","PXRMEXHF",169,0)
 ... H 2
"RTN","PXRMEXHF",170,0)
 .. E  D
"RTN","PXRMEXHF",171,0)
 ... K FDA,IENROOT
"RTN","PXRMEXHF",172,0)
 ... S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXHF",173,0)
 ... S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXHF",174,0)
 ... S FDA(811.8,"+1,",.03)=DATEP
"RTN","PXRMEXHF",175,0)
 ... D UPDATE^PXRMEXPU(.US,.FDA,.IENROOT)
"RTN","PXRMEXHF",176,0)
 ... S SUCCESS(NENTRY)=US
"RTN","PXRMEXHF",177,0)
 ...;Create the description and save the data.
"RTN","PXRMEXHF",178,0)
 ... N DESCT,DESL,KEYWORDT
"RTN","PXRMEXHF",179,0)
 ... D DESC^PXRMEXU3(RETMP,.DESCT)
"RTN","PXRMEXHF",180,0)
 ... D KEYWORD^PXRMEXU3(RETMP,.KEYWORDT)
"RTN","PXRMEXHF",181,0)
 ... S DESL("RNAME")=RNAME,DESL("SOURCE")=SOURCE,DESL("DATEP")=DATEP
"RTN","PXRMEXHF",182,0)
 ... S DESL("VRSN")=VRSN
"RTN","PXRMEXHF",183,0)
 ... D DESC^PXRMEXU1(IENROOT(1),.DESL,"DESCT","KEYWORDT")
"RTN","PXRMEXHF",184,0)
 ... M ^PXD(811.8,IENROOT(1),100)=^TMP($J,"EXLHF")
"RTN","PXRMEXHF",185,0)
 .. K ^TMP($J,"EXLHF")
"RTN","PXRMEXHF",186,0)
 ;
"RTN","PXRMEXHF",187,0)
 ;Check the success of the entry installs.
"RTN","PXRMEXHF",188,0)
 S SUCCESS=1
"RTN","PXRMEXHF",189,0)
 S IND=""
"RTN","PXRMEXHF",190,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXHF",191,0)
 . I 'SUCCESS(IND) S SUCCESS=0 Q
"RTN","PXRMEXHF",192,0)
 K ^TMP($J,NODE),^TMP($J,"EXLHF")
"RTN","PXRMEXHF",193,0)
 Q
"RTN","PXRMEXHF",194,0)
 ;
"RTN","PXRMEXIC")
0^43^B84313734
"RTN","PXRMEXIC",1,0)
PXRMEXIC ;SLC/PKR/PJH - Routines to install repository entry components. ;08/05/2013
"RTN","PXRMEXIC",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,17,16,18,22,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXIC",3,0)
 ;=================================================
"RTN","PXRMEXIC",4,0)
FILE(PXRMRIEN,SITEIEN,IND120,JND120,ACTION,ATTR,NAMECHG) ;Read and process a
"RTN","PXRMEXIC",5,0)
 ;file entry in repository entry PXRMRIEN. IND120 and JND120 are the
"RTN","PXRMEXIC",6,0)
 ;indexes for the component list. ACTION is one of the possible actions.
"RTN","PXRMEXIC",7,0)
 I ACTION="S" Q
"RTN","PXRMEXIC",8,0)
 N DATA,DUZ0S,EDULIST,FDA,FDAEND,FDASTART,FIELD,FILENUM
"RTN","PXRMEXIC",9,0)
 N IEN,IENS,IENREND,IENROOT,IENRSTR,IENUSED,IND,INDICES
"RTN","PXRMEXIC",10,0)
 N LINE,MSG,NAME,NEW01,PXNAT,PXRMEDOK,PXRMEXCH
"RTN","PXRMEXIC",11,0)
 N SRCIEN,START,TEMP,TEXT,TFDA,TIENROOT,TIUFPRIV,TNAME,TOPFNUM,VERSN,XUMF
"RTN","PXRMEXIC",12,0)
 N WPLCNT,WPTMP
"RTN","PXRMEXIC",13,0)
 ;I $G(PXRMIGDS) S DUZ0S=DUZ(0),DUZ(0)="^",XUMF=1
"RTN","PXRMEXIC",14,0)
 ;Set PXRMEDOK so files pointing to sponsors can be installed.
"RTN","PXRMEXIC",15,0)
 ;Set PXRMEXCH so national entries can be installed and prevent
"RTN","PXRMEXIC",16,0)
 ;execution of the input transform for custom logic fields.
"RTN","PXRMEXIC",17,0)
 ;Set PXNAT to allow installation of national (those starting with VA-)
"RTN","PXRMEXIC",18,0)
 ;PCE items.
"RTN","PXRMEXIC",19,0)
 S (PXNAT,PXRMEDOK,PXRMEXCH)=1
"RTN","PXRMEXIC",20,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXIC",21,0)
 S FDASTART=+$P(TEMP,U,2)
"RTN","PXRMEXIC",22,0)
 S FDAEND=+$P(TEMP,U,3)
"RTN","PXRMEXIC",23,0)
 S IENRSTR=+$P(TEMP,U,4)
"RTN","PXRMEXIC",24,0)
 S IENREND=+$P(TEMP,U,5)
"RTN","PXRMEXIC",25,0)
 F IND=FDASTART:1:FDAEND D
"RTN","PXRMEXIC",26,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",27,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIC",28,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIC",29,0)
 . S FILENUM=$P(INDICES,";",1)
"RTN","PXRMEXIC",30,0)
 . S IENS=$P(INDICES,";",2)
"RTN","PXRMEXIC",31,0)
 . I IND=FDASTART S SRCIEN=+IENS
"RTN","PXRMEXIC",32,0)
 . S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXIC",33,0)
 . I LINE["WP-start" D
"RTN","PXRMEXIC",34,0)
 .. S DATA="WPTMP("_IND_","_+FIELD_")"
"RTN","PXRMEXIC",35,0)
 .. S WPLCNT=$P(LINE,"~",3)
"RTN","PXRMEXIC",36,0)
 .. D WORDPROC(PXRMRIEN,.WPTMP,IND,+FIELD,.IND,WPLCNT)
"RTN","PXRMEXIC",37,0)
 . I (IND=FDASTART)&((FIELD=.01)!(FIELD=.001)) D
"RTN","PXRMEXIC",38,0)
 ..;Save the top level file number.
"RTN","PXRMEXIC",39,0)
 .. S TOPFNUM=FILENUM
"RTN","PXRMEXIC",40,0)
 ..;If the action is copy put it in the first open spot. PCE files go
"RTN","PXRMEXIC",41,0)
 ..;in the site number space.
"RTN","PXRMEXIC",42,0)
 .. I ACTION="C" D
"RTN","PXRMEXIC",43,0)
 ... S START=$S($$ISPCEFIL^PXRMEXU0(TOPFNUM):$P($$SITE^VASITE,U,3)_"000",1:0)
"RTN","PXRMEXIC",44,0)
 ... S IENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(TOPFNUM,START)
"RTN","PXRMEXIC",45,0)
 ..;
"RTN","PXRMEXIC",46,0)
 ..;If the entry does not exist and the action is not copy set the
"RTN","PXRMEXIC",47,0)
 ..;action to install.
"RTN","PXRMEXIC",48,0)
 .. I SITEIEN=0 S ACTION="I"
"RTN","PXRMEXIC",49,0)
 ..;
"RTN","PXRMEXIC",50,0)
 ..;If the action is install try to install at the source ien. If
"RTN","PXRMEXIC",51,0)
 ..;an entry already exists at the source ien put it in the first
"RTN","PXRMEXIC",52,0)
 ..;open spot. For PCE entries install at source ien unless they
"RTN","PXRMEXIC",53,0)
 ..;are national.
"RTN","PXRMEXIC",54,0)
 .. I ACTION="I" D
"RTN","PXRMEXIC",55,0)
 ... S IENUSED=+$$FIND1^DIC(FILENUM,"","QU","`"_SRCIEN)
"RTN","PXRMEXIC",56,0)
 ... S IENROOT(SRCIEN)=$S(IENUSED=0:SRCIEN,1:$$LOIEN^PXRMEXU5(FILENUM))
"RTN","PXRMEXIC",57,0)
 ... I $$ISPCEFIL^PXRMEXU0(TOPFNUM) D
"RTN","PXRMEXIC",58,0)
 .... I IENUSED=0 S IENROOT(SRCIEN)=SRCIEN
"RTN","PXRMEXIC",59,0)
 .... I IENUSED>0 D
"RTN","PXRMEXIC",60,0)
 ..... S START=$S(IENUSED>100000:$E(IENUSED,1,3)_"000",1:0)
"RTN","PXRMEXIC",61,0)
 ..... S IENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(TOPFNUM,START)
"RTN","PXRMEXIC",62,0)
 .... I $G(PXRMMNAT) S IENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(TOPFNUM)
"RTN","PXRMEXIC",63,0)
 ..;
"RTN","PXRMEXIC",64,0)
 ..;If the action is merge, overwrite,or update install at the site's
"RTN","PXRMEXIC",65,0)
 ..;ien.
"RTN","PXRMEXIC",66,0)
 .. I (ACTION="M")!(ACTION="O")!(ACTION="U") S IENROOT(SRCIEN)=SITEIEN
"RTN","PXRMEXIC",67,0)
 .;
"RTN","PXRMEXIC",68,0)
 .;This line is use to convert pre-patch 12 disable text to the new
"RTN","PXRMEXIC",69,0)
 .;value of 1 for disable
"RTN","PXRMEXIC",70,0)
 . I FILENUM=801.41,FIELD=3,DATA'="",$L(DATA)>2 D
"RTN","PXRMEXIC",71,0)
 ..I DATA="DISABLE AND DO NOT SEND MESSAGE" Q
"RTN","PXRMEXIC",72,0)
 ..S DATA="DISABLE AND SEND MESSAGE"
"RTN","PXRMEXIC",73,0)
 .;
"RTN","PXRMEXIC",74,0)
 . S FDA(FILENUM,IENS,FIELD)=DATA
"RTN","PXRMEXIC",75,0)
 ;
"RTN","PXRMEXIC",76,0)
 ;Initialize the edit history.
"RTN","PXRMEXIC",77,0)
 D INIEH(TOPFNUM,IENS,.FDA,.WPTMP)
"RTN","PXRMEXIC",78,0)
 ;Build the IENROOT
"RTN","PXRMEXIC",79,0)
 F IND=IENRSTR:1:IENREND D
"RTN","PXRMEXIC",80,0)
 . I IND=0 Q
"RTN","PXRMEXIC",81,0)
 . S TEMP=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",82,0)
 . S IENROOT($P(TEMP,U,1))=$P(TEMP,U,2)
"RTN","PXRMEXIC",83,0)
 ;Check for name changes, i.e., the copy action.
"RTN","PXRMEXIC",84,0)
 D NAMECHG(.FDA,.NAMECHG,TOPFNUM)
"RTN","PXRMEXIC",85,0)
 ;
"RTN","PXRMEXIC",86,0)
 ;Special handling for file 142.
"RTN","PXRMEXIC",87,0)
 I TOPFNUM=142 D  Q:'$D(FDA)
"RTN","PXRMEXIC",88,0)
 . D SFMVPI^PXRMEXIU(.FDA,.NAMECHG,142.14)
"RTN","PXRMEXIC",89,0)
 ;
"RTN","PXRMEXIC",90,0)
 ;Special handling for file 801
"RTN","PXRMEXIC",91,0)
 I TOPFNUM=801 D  Q:PXRMDONE
"RTN","PXRMEXIC",92,0)
 . D SFMVPI^PXRMEXIU(.FDA,.NAMECHG,801.015)
"RTN","PXRMEXIC",93,0)
 . D ROC^PXRMEXU5(.FDA)
"RTN","PXRMEXIC",94,0)
 ;
"RTN","PXRMEXIC",95,0)
 ;Special handling for file 801.1
"RTN","PXRMEXIC",96,0)
 I TOPFNUM=801.1 D  Q:PXRMDONE
"RTN","PXRMEXIC",97,0)
 . D ROCR^PXRMEXU5(.FDA)
"RTN","PXRMEXIC",98,0)
 ;
"RTN","PXRMEXIC",99,0)
 ;Special handling for file 801.41
"RTN","PXRMEXIC",100,0)
 I TOPFNUM=801.41 D  Q:PXRMDONE
"RTN","PXRMEXIC",101,0)
 . I ACTION="M" D MOU^PXRMEXU5(801.41,SITEIEN,"18*",.FDA,.IENROOT,ACTION,.WPTMP)
"RTN","PXRMEXIC",102,0)
 . D DLG^PXRMEXU4(.FDA,.NAMECHG)
"RTN","PXRMEXIC",103,0)
 ;
"RTN","PXRMEXIC",104,0)
 ;Special handling for file 810.9
"RTN","PXRMEXIC",105,0)
 I TOPFNUM=810.9 D LOC^PXRMEXU0(.FDA)
"RTN","PXRMEXIC",106,0)
 ;
"RTN","PXRMEXIC",107,0)
 ;Special handling for file 811.2
"RTN","PXRMEXIC",108,0)
 I TOPFNUM=811.2 D TAX^PXRMEXU0(.FDA,"CFR")
"RTN","PXRMEXIC",109,0)
 ;
"RTN","PXRMEXIC",110,0)
 ;If the file number is 811.4 the user must have programmer
"RTN","PXRMEXIC",111,0)
 ;access to install it.
"RTN","PXRMEXIC",112,0)
 I (TOPFNUM=811.4)&(DUZ(0)'="@") D  Q
"RTN","PXRMEXIC",113,0)
 . W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXIC",114,0)
 ;
"RTN","PXRMEXIC",115,0)
 ;Special handling for file 811.5.
"RTN","PXRMEXIC",116,0)
 I TOPFNUM=811.5 D  Q:'$D(FDA)
"RTN","PXRMEXIC",117,0)
 .;If the site has any findings already mapped merge them in.
"RTN","PXRMEXIC",118,0)
 . I (ACTION="M")!(ACTION="U") D MOU^PXRMEXU5(811.5,SITEIEN,"20*",.FDA,.IENROOT,ACTION,.WPTMP)
"RTN","PXRMEXIC",119,0)
 . D SFMVPI^PXRMEXIU(.FDA,.NAMECHG,811.52)
"RTN","PXRMEXIC",120,0)
 ;
"RTN","PXRMEXIC",121,0)
 ;Special handling for file 811.9.
"RTN","PXRMEXIC",122,0)
 I TOPFNUM=811.9 D
"RTN","PXRMEXIC",123,0)
 .;Don't execute the input transform for custom logic fields.
"RTN","PXRMEXIC",124,0)
 . S PXRMEXCH=1
"RTN","PXRMEXIC",125,0)
 . D DEF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",126,0)
 ;
"RTN","PXRMEXIC",127,0)
 ;Special handling for file 9999999.09, EDUCATION TOPICS.
"RTN","PXRMEXIC",128,0)
 I TOPFNUM=9999999.09 D
"RTN","PXRMEXIC",129,0)
 . S IENS=$O(FDA(TOPFNUM,""))
"RTN","PXRMEXIC",130,0)
 . S EDULIST(FDA(TOPFNUM,IENS,.01))=""
"RTN","PXRMEXIC",131,0)
 ;
"RTN","PXRMEXIC",132,0)
 ;Special handling for file 8925.1
"RTN","PXRMEXIC",133,0)
 I TOPFNUM=8925.1 D
"RTN","PXRMEXIC",134,0)
 . S TIUFPRIV=1
"RTN","PXRMEXIC",135,0)
 . D TIUOBJ^PXRMEXIU(.FDA)
"RTN","PXRMEXIC",136,0)
 ;
"RTN","PXRMEXIC",137,0)
 ;Special handling for file 9999999.64.
"RTN","PXRMEXIC",138,0)
 I TOPFNUM=9999999.64 D
"RTN","PXRMEXIC",139,0)
 . D HF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",140,0)
 ;
"RTN","PXRMEXIC",141,0)
 ;If FDA is not defined at this point the user has opted to abort
"RTN","PXRMEXIC",142,0)
 ;the install.
"RTN","PXRMEXIC",143,0)
 I '$D(FDA) Q
"RTN","PXRMEXIC",144,0)
 ;
"RTN","PXRMEXIC",145,0)
 ;If the action is merge, overwrite, or update do a test install
"RTN","PXRMEXIC",146,0)
 ;before deleting the original entry.
"RTN","PXRMEXIC",147,0)
 I (ACTION="M")!(ACTION="O")!(ACTION="U") D
"RTN","PXRMEXIC",148,0)
 .;Make the .01 unique for the test install.
"RTN","PXRMEXIC",149,0)
 . S IENS=$O(FDA(TOPFNUM,""))
"RTN","PXRMEXIC",150,0)
 .;Get the length of the .01 field
"RTN","PXRMEXIC",151,0)
 . D FIELD^DID(TOPFNUM,.01,"","FIELD LENGTH","ATTR")
"RTN","PXRMEXIC",152,0)
 . S TNAME="tmp"_$E(FDA(TOPFNUM,IENS,.01),1,ATTR("FIELD LENGTH")-3)
"RTN","PXRMEXIC",153,0)
 .;Make sure the test entry does not already exist.
"RTN","PXRMEXIC",154,0)
 . D DELALL^PXRMEXFI(TOPFNUM,TNAME)
"RTN","PXRMEXIC",155,0)
 . M TFDA=FDA
"RTN","PXRMEXIC",156,0)
 . S TFDA(TOPFNUM,IENS,.01)=TNAME
"RTN","PXRMEXIC",157,0)
 . K TIENROOT M TIENROOT=IENROOT
"RTN","PXRMEXIC",158,0)
 . S TIENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(TOPFNUM)
"RTN","PXRMEXIC",159,0)
 . D UPDATE^DIE("E","TFDA","TIENROOT","MSG")
"RTN","PXRMEXIC",160,0)
 . I $D(MSG) D  Q
"RTN","PXRMEXIC",161,0)
 .. S TEXT(1)=ATTR("FILE NAME")_" entry "_$G(ATTR("PT01"))_" did not get installed!"
"RTN","PXRMEXIC",162,0)
 .. S TEXT(2)="Examine the following error message for the reason."
"RTN","PXRMEXIC",163,0)
 .. S TEXT(3)=""
"RTN","PXRMEXIC",164,0)
 .. S TEXT(4)="The test update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",165,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIC",166,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",167,0)
 .. H 2
"RTN","PXRMEXIC",168,0)
 .;Delete the test entry.
"RTN","PXRMEXIC",169,0)
 . D DELALL^PXRMEXFI(TOPFNUM,TNAME)
"RTN","PXRMEXIC",170,0)
 .;If the original update worked put the entry at its original ien.
"RTN","PXRMEXIC",171,0)
 .;Delete the existing entry.
"RTN","PXRMEXIC",172,0)
 . D DELETE^PXRMEXFI(TOPFNUM,SITEIEN)
"RTN","PXRMEXIC",173,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSG")
"RTN","PXRMEXIC",174,0)
 I $D(MSG) D
"RTN","PXRMEXIC",175,0)
 . S TEXT(1)=ATTR("FILE NAME")_" entry "_$G(ATTR("PT01"))_" did not get installed!"
"RTN","PXRMEXIC",176,0)
 . S TEXT(2)="Examine the following error message for the reason."
"RTN","PXRMEXIC",177,0)
 . S TEXT(3)=""
"RTN","PXRMEXIC",178,0)
 . S TEXT(4)="The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",179,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIC",180,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",181,0)
 . W !
"RTN","PXRMEXIC",182,0)
 . H 2
"RTN","PXRMEXIC",183,0)
 ;
"RTN","PXRMEXIC",184,0)
 I TOPFNUM=811.2 D
"RTN","PXRMEXIC",185,0)
 .;Finish conversion from pointer based structure to Lexicon based.
"RTN","PXRMEXIC",186,0)
 . N IEN,PDS
"RTN","PXRMEXIC",187,0)
 . S IEN=+$O(^PXD(811.2,"B",ATTR("NAME"),""))
"RTN","PXRMEXIC",188,0)
 . I IEN=0 Q
"RTN","PXRMEXIC",189,0)
 . D EXCH^PXRMTXCR(IEN,"CFR")
"RTN","PXRMEXIC",190,0)
 . S PDS=$P(^PXD(811.2,IEN,0),U,4)
"RTN","PXRMEXIC",191,0)
 . I PDS="" D SPDS^PXRMPDS(IEN,PDS)
"RTN","PXRMEXIC",192,0)
 . D TAX30^PXRMEXU0(IEN)
"RTN","PXRMEXIC",193,0)
 ;
"RTN","PXRMEXIC",194,0)
 S VERSN=$$GETTAGV^PXRMEXU3(^PXD(811.8,PXRMRIEN,100,3,0),"<PACKAGE_VERSION>")
"RTN","PXRMEXIC",195,0)
 I TOPFNUM=811.9,VERSN=1.5 D
"RTN","PXRMEXIC",196,0)
 . N IEN,PXRMEXCH,X
"RTN","PXRMEXIC",197,0)
 . S IEN=+$O(^PXD(811.9,"B",ATTR("PT01"),""))
"RTN","PXRMEXIC",198,0)
 . I IEN=0 Q
"RTN","PXRMEXIC",199,0)
 .;For reminder definitions build the found/not found text counts.
"RTN","PXRMEXIC",200,0)
 . D SFNFTC^PXRMEXU0(IEN)
"RTN","PXRMEXIC",201,0)
 .;Build the internal logic and finding strings.
"RTN","PXRMEXIC",202,0)
 . S X=$G(^PXD(811.9,IEN,30))
"RTN","PXRMEXIC",203,0)
 . I X'="" D CPPCLS^PXRMLOGX(IEN,X)
"RTN","PXRMEXIC",204,0)
 . S X=$G(^PXD(811.9,IEN,34))
"RTN","PXRMEXIC",205,0)
 . I X'="" D CPRESLS^PXRMLOGX(IEN,X)
"RTN","PXRMEXIC",206,0)
 . D BLDALL^PXRMLOGX(IEN,"","")
"RTN","PXRMEXIC",207,0)
 ;If there are national education topics rename them so they start
"RTN","PXRMEXIC",208,0)
 ;with VA-
"RTN","PXRMEXIC",209,0)
 I $D(EDULIST),$G(PXRMMNAT) D
"RTN","PXRMEXIC",210,0)
 .;Get the length of the .01 field
"RTN","PXRMEXIC",211,0)
 . D FIELD^DID(TOPFNUM,.01,"","FIELD LENGTH","ATTR")
"RTN","PXRMEXIC",212,0)
 . S NAME=""
"RTN","PXRMEXIC",213,0)
 . F  S NAME=$O(EDULIST(NAME)) Q:NAME=""  D
"RTN","PXRMEXIC",214,0)
 .. I $E(NAME,1,3)="VA-" Q
"RTN","PXRMEXIC",215,0)
 .. S TNAME="VA-"_$E(ATTR("FIELD LENGTH")-3)
"RTN","PXRMEXIC",216,0)
 .. D RENAME^PXRMUTIL(TOPFNUM,NAME,TNAME)
"RTN","PXRMEXIC",217,0)
 ;I $G(PXRMIGDS) S DUZ(0)=DUZ0S
"RTN","PXRMEXIC",218,0)
 Q
"RTN","PXRMEXIC",219,0)
 ;
"RTN","PXRMEXIC",220,0)
 ;=================================================
"RTN","PXRMEXIC",221,0)
INIEH(FILENUM,IENS,FDA,WPTMP) ;If the file is a clinical reminder file and
"RTN","PXRMEXIC",222,0)
 ;it has an edit history initialize the history.
"RTN","PXRMEXIC",223,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",224,0)
 N IENS,SFN,TARGET,WP
"RTN","PXRMEXIC",225,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXIC",226,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXIC",227,0)
 I SFN=0 Q
"RTN","PXRMEXIC",228,0)
 S IENS=$O(FDA(SFN,""))
"RTN","PXRMEXIC",229,0)
 I IENS="" Q
"RTN","PXRMEXIC",230,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXIC",231,0)
 S FDA(SFN,IENS,1)="`"_DUZ
"RTN","PXRMEXIC",232,0)
 ;The word-processing field is set when the packing is done.
"RTN","PXRMEXIC",233,0)
 S WP=FDA(SFN,IENS,2)
"RTN","PXRMEXIC",234,0)
 K @WP
"RTN","PXRMEXIC",235,0)
 S @WP@(1)="Exchange Install"
"RTN","PXRMEXIC",236,0)
 Q
"RTN","PXRMEXIC",237,0)
 ;
"RTN","PXRMEXIC",238,0)
 ;=================================================
"RTN","PXRMEXIC",239,0)
NAMECHG(FDA,NAMECHG,FILENUM) ;If this component has been copied to a new
"RTN","PXRMEXIC",240,0)
 ;name make the change.
"RTN","PXRMEXIC",241,0)
 N CLASS,IENS,PT01
"RTN","PXRMEXIC",242,0)
 S IENS=$O(FDA(FILENUM,""))
"RTN","PXRMEXIC",243,0)
 S PT01=FDA(FILENUM,IENS,.01)
"RTN","PXRMEXIC",244,0)
 I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIC",245,0)
 . S FDA(FILENUM,IENS,.01)=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIC",246,0)
 . I (FILENUM<801.41)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",247,0)
 .;Once a component has been copied CLASS can no longer be national.
"RTN","PXRMEXIC",248,0)
 . S CLASS=$G(FDA(FILENUM,IENS,100))
"RTN","PXRMEXIC",249,0)
 . I CLASS["N" S FDA(FILENUM,IENS,100)="LOCAL"
"RTN","PXRMEXIC",250,0)
 .;The Sponsor is also removed.
"RTN","PXRMEXIC",251,0)
 . K FDA(FILENUM,IENS,101)
"RTN","PXRMEXIC",252,0)
 Q
"RTN","PXRMEXIC",253,0)
 ;
"RTN","PXRMEXIC",254,0)
 ;=================================================
"RTN","PXRMEXIC",255,0)
RTNLD(PXRMRIEN,START,END,ATTR,RTN) ;Load a routine from the repository into
"RTN","PXRMEXIC",256,0)
 ;the array RTN.
"RTN","PXRMEXIC",257,0)
 N IND,LINE,LN,ROUTINE
"RTN","PXRMEXIC",258,0)
 S LINE=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXIC",259,0)
 S ROUTINE=$P(LINE,";",1)
"RTN","PXRMEXIC",260,0)
 S ROUTINE=$TR(ROUTINE," ","")
"RTN","PXRMEXIC",261,0)
 S ATTR("FILE NUMBER")=0
"RTN","PXRMEXIC",262,0)
 S ATTR("NAME")=$P(LINE,";",1)
"RTN","PXRMEXIC",263,0)
 S ATTR("NAME")=$TR(ATTR("NAME")," ","")
"RTN","PXRMEXIC",264,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXIC",265,0)
 S ATTR("FIELD LENGTH")=8
"RTN","PXRMEXIC",266,0)
 S LN=0
"RTN","PXRMEXIC",267,0)
 F IND=START:1:END D
"RTN","PXRMEXIC",268,0)
 . S LN=LN+1
"RTN","PXRMEXIC",269,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",270,0)
 . S RTN(LN,0)=LINE
"RTN","PXRMEXIC",271,0)
 Q
"RTN","PXRMEXIC",272,0)
 ;
"RTN","PXRMEXIC",273,0)
 ;=================================================
"RTN","PXRMEXIC",274,0)
RTNSAVE(RTN,NAME) ;Save the routine loaded in RTN to the name
"RTN","PXRMEXIC",275,0)
 ;found in NAMECHG.
"RTN","PXRMEXIC",276,0)
 N DIE,XCN
"RTN","PXRMEXIC",277,0)
 ;%ZOSF("SAVE") requires a global.
"RTN","PXRMEXIC",278,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",279,0)
 S DIE="^TMP($J,""PXRMRTN"","
"RTN","PXRMEXIC",280,0)
 M ^TMP($J,"PXRMRTN")=RTN
"RTN","PXRMEXIC",281,0)
 S XCN=0
"RTN","PXRMEXIC",282,0)
 S X=NAME
"RTN","PXRMEXIC",283,0)
 X ^%ZOSF("SAVE")
"RTN","PXRMEXIC",284,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",285,0)
 Q
"RTN","PXRMEXIC",286,0)
 ;
"RTN","PXRMEXIC",287,0)
 ;=================================================
"RTN","PXRMEXIC",288,0)
WORDPROC(PXRMRIEN,WPTMP,I1,I2,IND,WPLCNT) ;Load WPTMP with the word
"RTN","PXRMEXIC",289,0)
 ;processing field.
"RTN","PXRMEXIC",290,0)
 N I3
"RTN","PXRMEXIC",291,0)
 F I3=1:1:WPLCNT D
"RTN","PXRMEXIC",292,0)
 . S IND=IND+1
"RTN","PXRMEXIC",293,0)
 . S WPTMP(I1,I2,I3)=$G(^PXD(811.8,PXRMRIEN,100,IND,0))
"RTN","PXRMEXIC",294,0)
 Q
"RTN","PXRMEXIC",295,0)
 ;
"RTN","PXRMEXID")
0^77^B66152122
"RTN","PXRMEXID",1,0)
PXRMEXID ;SLC/PJH - Reminder Dialog Exchange Install Routine. ;01/28/2013
"RTN","PXRMEXID",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXID",3,0)
 ;
"RTN","PXRMEXID",4,0)
 ;==================================================
"RTN","PXRMEXID",5,0)
 ;Install all dialog components in an exchange file entry
"RTN","PXRMEXID",6,0)
 ;------------------------------------------------
"RTN","PXRMEXID",7,0)
INSALL N ALL,DIROUT,DIRUT,DTOUT,DUOUT,IND,PXRMDONE
"RTN","PXRMEXID",8,0)
 ;
"RTN","PXRMEXID",9,0)
 ;Set the install date and time.
"RTN","PXRMEXID",10,0)
 S IND="",PXRMDONE=0
"RTN","PXRMEXID",11,0)
 ;
"RTN","PXRMEXID",12,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",13,0)
 D FULL^VALM1
"RTN","PXRMEXID",14,0)
 ;
"RTN","PXRMEXID",15,0)
 ;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",16,0)
 N DNAME
"RTN","PXRMEXID",17,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAME"))
"RTN","PXRMEXID",18,0)
 D EXIST^PXRMEXIX(.ALL,DNAME,"reminder dialog","")
"RTN","PXRMEXID",19,0)
 I ALL=0 D DISP^PXRMEXLD(PXRMMODE) Q
"RTN","PXRMEXID",20,0)
 ;
"RTN","PXRMEXID",21,0)
 ;Lock the entire file
"RTN","PXRMEXID",22,0)
 Q:'$$LOCK
"RTN","PXRMEXID",23,0)
 F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:(IND="")!(PXRMDONE)  D
"RTN","PXRMEXID",24,0)
 .D INSCOM(DNAME,IND,1)
"RTN","PXRMEXID",25,0)
 ;
"RTN","PXRMEXID",26,0)
 ;Clear lock
"RTN","PXRMEXID",27,0)
 D UNLOCK
"RTN","PXRMEXID",28,0)
 ;
"RTN","PXRMEXID",29,0)
 ;Rebuild display workfile
"RTN","PXRMEXID",30,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",31,0)
 ;
"RTN","PXRMEXID",32,0)
 K PXRMNMCH
"RTN","PXRMEXID",33,0)
 Q
"RTN","PXRMEXID",34,0)
 ;
"RTN","PXRMEXID",35,0)
 ;Build list of descendents names
"RTN","PXRMEXID",36,0)
 ;-------------------------------
"RTN","PXRMEXID",37,0)
INSBLD(DIALNAM,NAME,INAME) ;
"RTN","PXRMEXID",38,0)
 N DNAME,IDATA,ISEQ
"RTN","PXRMEXID",39,0)
 S ISEQ=0
"RTN","PXRMEXID",40,0)
 F  S ISEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:'ISEQ  D
"RTN","PXRMEXID",41,0)
 .S IDATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,ISEQ)) Q:IDATA=""
"RTN","PXRMEXID",42,0)
 .S DNAME=$P(IDATA,U) Q:DNAME=""
"RTN","PXRMEXID",43,0)
 .;
"RTN","PXRMEXID",44,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DREPL"))>0 D
"RTN","PXRMEXID",45,0)
 ..S REPL=$$CHKREPL^PXRMEXDB(DIALNAM,NAME) I REPL>0 D INSREPL(DIALNAM,NAME,REPL,.INAME)
"RTN","PXRMEXID",46,0)
 .S INAME(DNAME)=""
"RTN","PXRMEXID",47,0)
 .;Check for descendants
"RTN","PXRMEXID",48,0)
 .I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) D INSBLD(DIALNAM,DNAME,.INAME)
"RTN","PXRMEXID",49,0)
 Q
"RTN","PXRMEXID",50,0)
 ;
"RTN","PXRMEXID",51,0)
 ;Build list of replacement names
"RTN","PXRMEXID",52,0)
 ;-------------------------------
"RTN","PXRMEXID",53,0)
INSREPL(DIALNAME,NAME,REPL,INAME) ;
"RTN","PXRMEXID",54,0)
 N DNAME,IDATA,ISEQ
"RTN","PXRMEXID",55,0)
 S ISEQ=0
"RTN","PXRMEXID",56,0)
 S IDATA=$G(^TMP("PXRMEXTMP",$J,"DREPL",DIALNAM,REPL,NAME)) Q:IDATA=""
"RTN","PXRMEXID",57,0)
 S DNAME=$P(IDATA,U) Q:DNAME=""  S INAME(DNAME)=""
"RTN","PXRMEXID",58,0)
 ;Check for descendants
"RTN","PXRMEXID",59,0)
 I $D(^TMP("PXRMEXTMP",$J,"DMAP",DNAME)) D INSBLD(DIALNAM,DNAME,.INAME)
"RTN","PXRMEXID",60,0)
 Q
"RTN","PXRMEXID",61,0)
 ;
"RTN","PXRMEXID",62,0)
 ;Install component IND
"RTN","PXRMEXID",63,0)
 ;---------------------
"RTN","PXRMEXID",64,0)
INSCOM(DIALNAM,IND,SILENT) ;
"RTN","PXRMEXID",65,0)
 N ACTION,ATTR,CSUM,DTYP,EXIEN,END,EXISTS,FILENUM,IND120,JND120
"RTN","PXRMEXID",66,0)
 N NEWPT01,PT01,START,REPL,SAME,TEMP
"RTN","PXRMEXID",67,0)
 S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),FILENUM=$P(TEMP,U,1)
"RTN","PXRMEXID",68,0)
 S START=$P(TEMP,U,2),END=$P(TEMP,U,3) Q:START=""
"RTN","PXRMEXID",69,0)
 S IND120=$P(TEMP,U,4) Q:'IND120
"RTN","PXRMEXID",70,0)
 S JND120=$P(TEMP,U,5) Q:'JND120
"RTN","PXRMEXID",71,0)
 S EXISTS=$P(TEMP,U,6)
"RTN","PXRMEXID",72,0)
 S TEMP=^PXD(811.8,PXRMRIEN,100,START,0),PT01=$P(TEMP,"~",2) Q:PT01=""
"RTN","PXRMEXID",73,0)
 S DTYP=$G(^TMP("PXRMEXTMP",$J,"DTYP",PT01))
"RTN","PXRMEXID",74,0)
 I DTYP="dialog" S DTYP="reminder dialog"
"RTN","PXRMEXID",75,0)
 ;
"RTN","PXRMEXID",76,0)
 ;Go to full screen mode.
"RTN","PXRMEXID",77,0)
 D FULL^VALM1
"RTN","PXRMEXID",78,0)
 ;
"RTN","PXRMEXID",79,0)
 ;Check for descendents
"RTN","PXRMEXID",80,0)
 S REPL=$$CHKREPL^PXRMEXDB(DIALNAM,PT01)
"RTN","PXRMEXID",81,0)
 I 'SILENT&($$INSDSC(PT01)!(REPL>0)) D  Q:PXRMDONE
"RTN","PXRMEXID",82,0)
 .N ANS,INDS,TEXT
"RTN","PXRMEXID",83,0)
 .S TEXT(1)=PT01_" ("_DTYP_") contains sub-components."
"RTN","PXRMEXID",84,0)
 .S TEXT="Install all sub-components with the "_DTYP_": "
"RTN","PXRMEXID",85,0)
 .;Give option to install all descendents
"RTN","PXRMEXID",86,0)
 .D ASK^PXRMEXIX(.ANS,.TEXT,1) Q:PXRMDONE
"RTN","PXRMEXID",87,0)
 .I $G(ANS)="N" S PXRMDONE=1 Q
"RTN","PXRMEXID",88,0)
 .I $G(ANS)="Y" D
"RTN","PXRMEXID",89,0)
 ..S INDS=IND
"RTN","PXRMEXID",90,0)
 ..N IDATA,INAME,IND
"RTN","PXRMEXID",91,0)
 ..I REPL>0 D INSREPL(DIALNAM,PT01,REPL,.INAME)
"RTN","PXRMEXID",92,0)
 ..;Build list of decendents to install
"RTN","PXRMEXID",93,0)
 ..D INSBLD(DIALNAM,PT01,.INAME)
"RTN","PXRMEXID",94,0)
 ..;Check if all or none exists - option to install all unchanged
"RTN","PXRMEXID",95,0)
 ..D EXIST^PXRMEXIX(.ALL,PT01,DTYP,.INAME) Q:PXRMDONE
"RTN","PXRMEXID",96,0)
 ..;Start at the end of the list
"RTN","PXRMEXID",97,0)
 ..S IND=""
"RTN","PXRMEXID",98,0)
 ..F  S IND=$O(^TMP("PXRMEXLD",$J,"SEL",IND),-1) Q:PXRMDONE!(IND=INDS)  D
"RTN","PXRMEXID",99,0)
 ...N PT01,START,TEMP
"RTN","PXRMEXID",100,0)
 ...S TEMP=^TMP("PXRMEXLD",$J,"SEL",IND),START=$P(TEMP,U,2) Q:START=""
"RTN","PXRMEXID",101,0)
 ...S PT01=$P(^PXD(811.8,PXRMRIEN,100,START,0),"~",2) Q:PT01=""
"RTN","PXRMEXID",102,0)
 ...;Ignore namechanges
"RTN","PXRMEXID",103,0)
 ...I $D(PXRMNMCH(801.41,PT01)) Q
"RTN","PXRMEXID",104,0)
 ...;Only install descendents
"RTN","PXRMEXID",105,0)
 ...I $D(INAME(PT01)) D INSCOM(DIALNAM,IND,1)
"RTN","PXRMEXID",106,0)
 ;
"RTN","PXRMEXID",107,0)
SETENTRY ;
"RTN","PXRMEXID",108,0)
 D SETATTR^PXRMEXFI(.ATTR,FILENUM,PT01)
"RTN","PXRMEXID",109,0)
 S ACTION=""
"RTN","PXRMEXID",110,0)
 ;Double check that it hasn't been installed
"RTN","PXRMEXID",111,0)
 S EXIEN=$$EXISTS^PXRMEXIU(801.41,PT01)
"RTN","PXRMEXID",112,0)
 I EXIEN,'EXISTS S EXISTS=1
"RTN","PXRMEXID",113,0)
 I EXISTS D
"RTN","PXRMEXID",114,0)
 . D CHECKSUM^PXRMEXCS(.ATTR,START,END)
"RTN","PXRMEXID",115,0)
 . S CSUM=$$FILE^PXRMEXCS(ATTR("FILE NUMBER"),EXIEN)
"RTN","PXRMEXID",116,0)
 . S SAME=$S(ATTR("CHECKSUM")=CSUM:1,1:0)
"RTN","PXRMEXID",117,0)
 . I SAME D FEIMSG^PXRMEXFI(SAME,.ATTR) S ACTION="S",(PXRMNMCH,NEWPT01)=""
"RTN","PXRMEXID",118,0)
 I ACTION="" D
"RTN","PXRMEXID",119,0)
 .;If all components installed the default is 'Install or Overwrite'
"RTN","PXRMEXID",120,0)
 . S:ALL ACTION=$S(EXISTS:"O",1:"I"),(PXRMNMCH,NEWPT01)=""
"RTN","PXRMEXID",121,0)
 . S:'ALL ACTION=$$GETFACT^PXRMEXFI(PT01,.ATTR,.NEWPT01,.PXRMNMCH,EXIEN)
"RTN","PXRMEXID",122,0)
 ;Save what was done for the installation summary.
"RTN","PXRMEXID",123,0)
 S ^TMP("PXRMEXIAD",$J,IND,ATTR("FILE NAME"),ATTR("PT01"),ACTION)=NEWPT01
"RTN","PXRMEXID",124,0)
 ;Clear heading
"RTN","PXRMEXID",125,0)
 S VALMHDR(2)=""
"RTN","PXRMEXID",126,0)
 ;If the ACTION is Quit then quit the entire install.
"RTN","PXRMEXID",127,0)
 I ACTION="Q" S PXRMDONE=1 S VALMHDR(2)="Install not completed" Q
"RTN","PXRMEXID",128,0)
 ;If the ACTION is Skip then skip this component.
"RTN","PXRMEXID",129,0)
 I ACTION="S" S VALMBCK="R" Q
"RTN","PXRMEXID",130,0)
 ;If the ACTION is Replace then skip this component.
"RTN","PXRMEXID",131,0)
 I ACTION="P" S VALMBCK="R",VALMHDR(2)=PT01_" replaced with "_NEWPT01 Q
"RTN","PXRMEXID",132,0)
 ;Install this component.
"RTN","PXRMEXID",133,0)
 D FILE^PXRMEXIC(PXRMRIEN,EXIEN,IND120,JND120,ACTION,.ATTR,.PXRMNMCH)
"RTN","PXRMEXID",134,0)
 S VALMBCK="R"
"RTN","PXRMEXID",135,0)
 I PXRMDONE S VALMHDR(2)="Install aborted" Q
"RTN","PXRMEXID",136,0)
 I NEWPT01="" S VALMHDR(2)=PT01_" ("_DTYP_") installed from exchange file."
"RTN","PXRMEXID",137,0)
 I NEWPT01'="" S VALMHDR(2)=PT01_" installed as "_NEWPT01_"."
"RTN","PXRMEXID",138,0)
 ;If reminder dialog - disable and give option to link
"RTN","PXRMEXID",139,0)
 I DTYP="reminder dialog" D
"RTN","PXRMEXID",140,0)
 .N DNAME
"RTN","PXRMEXID",141,0)
 .S DNAME=PT01
"RTN","PXRMEXID",142,0)
 .I NEWPT01'="" S DNAME=NEWPT01
"RTN","PXRMEXID",143,0)
 .D INSLNK(DNAME)
"RTN","PXRMEXID",144,0)
 Q
"RTN","PXRMEXID",145,0)
 ;
"RTN","PXRMEXID",146,0)
 ;Check for descendents (either elements or prompts)
"RTN","PXRMEXID",147,0)
 ;--------------------------------------------------
"RTN","PXRMEXID",148,0)
INSDSC(NAME) ;
"RTN","PXRMEXID",149,0)
 N DATA,DFOUND,SUB
"RTN","PXRMEXID",150,0)
 S DFOUND=0,SUB=0
"RTN","PXRMEXID",151,0)
 F  S SUB=$O(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:'SUB  D  Q:DFOUND
"RTN","PXRMEXID",152,0)
 .S DATA=$G(^TMP("PXRMEXTMP",$J,"DMAP",NAME,SUB)) Q:DATA=""
"RTN","PXRMEXID",153,0)
 .S DFOUND=1
"RTN","PXRMEXID",154,0)
 Q DFOUND
"RTN","PXRMEXID",155,0)
 ;
"RTN","PXRMEXID",156,0)
INSREPL1(NAME) ;
"RTN","PXRMEXID",157,0)
 N DATA,DFOUND,SUB
"RTN","PXRMEXID",158,0)
 S DFOUND=0,SUB=0
"RTN","PXRMEXID",159,0)
 F  S SUB=$O(^TMP("PXRMEXTMP",$J,"DREPL",NAME,SUB)) Q:'SUB  D  Q:DFOUND
"RTN","PXRMEXID",160,0)
 .S DATA=$G(^TMP("PXRMEXTMP",$J,"DREPL",NAME,SUB)) Q:DATA=""
"RTN","PXRMEXID",161,0)
 .S DFOUND=1
"RTN","PXRMEXID",162,0)
 Q DFOUND
"RTN","PXRMEXID",163,0)
 ;Option to link dialog to a reminder
"RTN","PXRMEXID",164,0)
 ;-----------------------------------
"RTN","PXRMEXID",165,0)
INSLNK(DNAME) ;
"RTN","PXRMEXID",166,0)
 N DIEN,DISABLE,DSRC,RNAME
"RTN","PXRMEXID",167,0)
 N DA,DIE,DR
"RTN","PXRMEXID",168,0)
 ;Disable
"RTN","PXRMEXID",169,0)
 S DIEN=$O(^PXRMD(801.41,"B",DNAME,"")) Q:'DIEN
"RTN","PXRMEXID",170,0)
 ;Set dialog as disabled
"RTN","PXRMEXID",171,0)
 S DISABLE=1
"RTN","PXRMEXID",172,0)
 ;Except for National dialogs
"RTN","PXRMEXID",173,0)
 I $P(^PXRMD(801.41,DIEN,100),U)="N" S DISABLE=0
"RTN","PXRMEXID",174,0)
 ;
"RTN","PXRMEXID",175,0)
 S DR="3///^S X=DISABLE",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",176,0)
 D ^DIE
"RTN","PXRMEXID",177,0)
 ;
"RTN","PXRMEXID",178,0)
 ;Quit if already linked
"RTN","PXRMEXID",179,0)
 I $D(^PXD(811.9,"AG",DIEN)) Q
"RTN","PXRMEXID",180,0)
 ;
"RTN","PXRMEXID",181,0)
 S RNAME=$O(^TMP("PXRMEXDL",$J,DNAME,""))
"RTN","PXRMEXID",182,0)
 ;
"RTN","PXRMEXID",183,0)
 ;Otherwise use original reminder name as default
"RTN","PXRMEXID",184,0)
 I RNAME="" D
"RTN","PXRMEXID",185,0)
 .N DATA,FOUND,RIEN,SUB
"RTN","PXRMEXID",186,0)
 .;Rebuild ^TMP("PXRMEXLC",$J
"RTN","PXRMEXID",187,0)
 .D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXID",188,0)
 .;
"RTN","PXRMEXID",189,0)
 .S SUB="",FOUND=0
"RTN","PXRMEXID",190,0)
 .F  S SUB=$O(^TMP("PXRMEXLC",$J,"SEL",SUB),-1) Q:'SUB  Q:FOUND  D
"RTN","PXRMEXID",191,0)
 ..S DATA=$G(^TMP("PXRMEXLC",$J,"SEL",SUB)) Q:$P(DATA,U)'=811.9
"RTN","PXRMEXID",192,0)
 ;
"RTN","PXRMEXID",193,0)
 I RNAME="" Q
"RTN","PXRMEXID",194,0)
TAG W !!,"Reminder Dialog "_DNAME_" is not linked to a reminder.",!
"RTN","PXRMEXID",195,0)
 ;Select reminder to link
"RTN","PXRMEXID",196,0)
 S IEN=$$SELECT^PXRMINQ("^PXD(811.9,","Select Reminder to Link: ",RNAME)
"RTN","PXRMEXID",197,0)
 ;Update reminder link in #811.9
"RTN","PXRMEXID",198,0)
 I $P(IEN,U)'=-1 D
"RTN","PXRMEXID",199,0)
 .N DA,DIE,DIK,DR
"RTN","PXRMEXID",200,0)
 .;Set reminder to dialog pointer
"RTN","PXRMEXID",201,0)
 .S DR="51///^S X=DNAME",DIE="^PXD(811.9,",DA=$P(IEN,U)
"RTN","PXRMEXID",202,0)
 .D ^DIE
"RTN","PXRMEXID",203,0)
 .;If source reminder is null replace with linked reminder
"RTN","PXRMEXID",204,0)
 .S DSRC=$P($G(^PXRMD(801.41,DIEN,0)),U,2) Q:DSRC
"RTN","PXRMEXID",205,0)
 .S DSRC=$P(IEN,U)
"RTN","PXRMEXID",206,0)
 .S DR="2///^S X=DSRC",DIE="^PXRMD(801.41,",DA=$P(DIEN,U)
"RTN","PXRMEXID",207,0)
 .D ^DIE
"RTN","PXRMEXID",208,0)
 Q
"RTN","PXRMEXID",209,0)
 ;
"RTN","PXRMEXID",210,0)
 ;Install Selected Components
"RTN","PXRMEXID",211,0)
 ;---------------------------
"RTN","PXRMEXID",212,0)
INSSEL N ALL,IND,PXRMDONE,VALMY
"RTN","PXRMEXID",213,0)
 N DIROUT,DIRUT,DNAME,DTOUT,DUOUT
"RTN","PXRMEXID",214,0)
 N VALMBG,VALMLST
"RTN","PXRMEXID",215,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXLD",$J,"IDX",""),-1)
"RTN","PXRMEXID",216,0)
 ;Get the list to install.
"RTN","PXRMEXID",217,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXID",218,0)
 ;
"RTN","PXRMEXID",219,0)
 ;Set the install date and time.
"RTN","PXRMEXID",220,0)
 S ALL="",PXRMDONE=0
"RTN","PXRMEXID",221,0)
 ;
"RTN","PXRMEXID",222,0)
 ;Lock the entire file
"RTN","PXRMEXID",223,0)
 Q:'$$LOCK
"RTN","PXRMEXID",224,0)
 ;
"RTN","PXRMEXID",225,0)
 S DNAME=$G(^TMP("PXRMEXTMP",$J,"PXRMDNAME"))
"RTN","PXRMEXID",226,0)
 S IND=0
"RTN","PXRMEXID",227,0)
 F  S IND=$O(VALMY(IND)) Q:(+IND=0)!(PXRMDONE)  D INSCOM(DNAME,IND,0)
"RTN","PXRMEXID",228,0)
 ;
"RTN","PXRMEXID",229,0)
 ;Clear locks
"RTN","PXRMEXID",230,0)
 D UNLOCK
"RTN","PXRMEXID",231,0)
 ;
"RTN","PXRMEXID",232,0)
 ;Rebuild workfile
"RTN","PXRMEXID",233,0)
 D DISP^PXRMEXLD(PXRMMODE)
"RTN","PXRMEXID",234,0)
 Q
"RTN","PXRMEXID",235,0)
 ;
"RTN","PXRMEXID",236,0)
 ;Install the exchange entry PXRMRIEN
"RTN","PXRMEXID",237,0)
 ;-----------------------------------
"RTN","PXRMEXID",238,0)
INSTALL N CLOK,IEN,IND,VALMY
"RTN","PXRMEXID",239,0)
 ;Make sure the component list exists for this entry. PXRMRIEN is
"RTN","PXRMEXID",240,0)
 ;set in INSTALL^PXRMEXLR.
"RTN","PXRMEXID",241,0)
 S CLOK=1
"RTN","PXRMEXID",242,0)
 I '$D(^PXD(811.8,PXRMRIEN,120)) D CLIST^PXRMEXCO(PXRMRIEN,.CLOK)
"RTN","PXRMEXID",243,0)
 I 'CLOK Q
"RTN","PXRMEXID",244,0)
 D CDISP^PXRMEXLC(PXRMRIEN)
"RTN","PXRMEXID",245,0)
 S VALMBCK="R",VALMCNT=$O(^TMP("PXRMEXLD",$J,"IDX"),-1)
"RTN","PXRMEXID",246,0)
 Q
"RTN","PXRMEXID",247,0)
 ;
"RTN","PXRMEXID",248,0)
PXRM(NAME) ;Validate prompts
"RTN","PXRMEXID",249,0)
 ;Ignore non-PXRM
"RTN","PXRMEXID",250,0)
 I $E(NAME,1,4)'="PXRM" Q 0
"RTN","PXRMEXID",251,0)
 N DIEN,RESULT
"RTN","PXRMEXID",252,0)
 I $G(PXRMINST)=1 D  Q RESULT
"RTN","PXRMEXID",253,0)
 .S RESULT=0
"RTN","PXRMEXID",254,0)
 .S DIEN=$O(^PXRMD(801.41,"B",NAME,"")) I 'DIEN Q
"RTN","PXRMEXID",255,0)
 .I $P($G(^PXRMD(801.41,DIEN,100)),U)'="N" Q
"RTN","PXRMEXID",256,0)
 .I ($P($G(^PXRMD(801.41,DIEN,0)),U,4)="P")!($P($G(^PXRMD(801.41,DIEN,0)),U,4)="F") S RESULT=1
"RTN","PXRMEXID",257,0)
 ;
"RTN","PXRMEXID",258,0)
 ;Check if this is a national code
"RTN","PXRMEXID",259,0)
 S DIEN=$O(^PXRMD(801.41,"B",NAME,""))
"RTN","PXRMEXID",260,0)
 ;If not found abort
"RTN","PXRMEXID",261,0)
 I 'DIEN Q 0
"RTN","PXRMEXID",262,0)
 ;if result group/element quit
"RTN","PXRMEXID",263,0)
 I $P($G(^PXRMD(801.41,DIEN,0)),U,4)="S"!($P($G(^PXRMD(801.41,DIEN,0)),U,4)="T") Q 0
"RTN","PXRMEXID",264,0)
 ;Check class
"RTN","PXRMEXID",265,0)
 I $P($G(^PXRMD(801.41,DIEN,100)),U)="N" Q 1
"RTN","PXRMEXID",266,0)
 ;Otherwise local
"RTN","PXRMEXID",267,0)
 Q 0
"RTN","PXRMEXID",268,0)
 ;
"RTN","PXRMEXID",269,0)
 ;Lock the dialog file
"RTN","PXRMEXID",270,0)
LOCK() ;
"RTN","PXRMEXID",271,0)
 L +^PXRMD(801.41):DILOCKTM I  Q 1
"RTN","PXRMEXID",272,0)
 E  W !,"Another user is editing this file, try later" H 2
"RTN","PXRMEXID",273,0)
 Q 0
"RTN","PXRMEXID",274,0)
 ;
"RTN","PXRMEXID",275,0)
 ;Clear lock
"RTN","PXRMEXID",276,0)
UNLOCK L -^PXRMD(801.41)
"RTN","PXRMEXID",277,0)
 Q
"RTN","PXRMEXIH")
0^93^B48820476
"RTN","PXRMEXIH",1,0)
PXRMEXIH ; SLC/PKR - Routines for installation history. ;01/25/2013
"RTN","PXRMEXIH",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXIH",3,0)
 ;======================================================
"RTN","PXRMEXIH",4,0)
BLDLIST ;Build a list of install histories in ^TMP("PXRMEXIH",$J).
"RTN","PXRMEXIH",5,0)
 N DATE,FMTSTR,IHIEN,IND,INDONE,JND,NAME,NL,NLINE,NSEL,OUTPUT
"RTN","PXRMEXIH",6,0)
 N SOURCE,TDATE,TEMP,TEXT,TYPE
"RTN","PXRMEXIH",7,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXIH",8,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"LLL")
"RTN","PXRMEXIH",9,0)
 S (NLINE,NSEL,VALMCNT)=0
"RTN","PXRMEXIH",10,0)
 S INDONE=+$P($G(^PXD(811.8,PXRMRIEN,130,0)),U,4)
"RTN","PXRMEXIH",11,0)
 S TEMP=^PXD(811.8,PXRMRIEN,0)
"RTN","PXRMEXIH",12,0)
 S NAME=" "_$P(TEMP,U,1)
"RTN","PXRMEXIH",13,0)
 S SOURCE=$P(TEMP,U,2)
"RTN","PXRMEXIH",14,0)
 S DATE=$P(TEMP,U,3)
"RTN","PXRMEXIH",15,0)
 D FMT(NAME,SOURCE,DATE,FMTSTR,.NL,.OUTPUT)
"RTN","PXRMEXIH",16,0)
 F JND=1:1:NL S NLINE=NLINE+1,^TMP("PXRMEXIH",$J,NLINE,0)=OUTPUT(JND)
"RTN","PXRMEXIH",17,0)
 S FMTSTR="4R1^20L2^15L2^35L"
"RTN","PXRMEXIH",18,0)
 S TEXT=" ^Installation Date^Type^Installed By"
"RTN","PXRMEXIH",19,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT,"  ",.NL,.OUTPUT)
"RTN","PXRMEXIH",20,0)
 F JND=1:1:NL S NLINE=NLINE+1,^TMP("PXRMEXIH",$J,NLINE,0)=OUTPUT(JND)
"RTN","PXRMEXIH",21,0)
 S TEXT=" ^-------------------^----^------------"
"RTN","PXRMEXIH",22,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT,"  ",.NL,.OUTPUT)
"RTN","PXRMEXIH",23,0)
 F JND=1:1:NL S NLINE=NLINE+1,^TMP("PXRMEXIH",$J,NLINE,0)=OUTPUT(JND)
"RTN","PXRMEXIH",24,0)
 I 'INDONE D  Q
"RTN","PXRMEXIH",25,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXIH",26,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)="      none"
"RTN","PXRMEXIH",27,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXIH",28,0)
 . S ^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXIH",29,0)
 . S VALMCNT=1
"RTN","PXRMEXIH",30,0)
 ;Build the "dummy" lines so EN^VALM2 will work.
"RTN","PXRMEXIH",31,0)
 F IND=1:1:NLINE S ^TMP("PXRMEXIH",$J,"IDX",IND,1)=""
"RTN","PXRMEXIH",32,0)
 S DATE=""
"RTN","PXRMEXIH",33,0)
 F  S DATE=$O(^PXD(811.8,PXRMRIEN,130,"B",DATE)) Q:DATE=""  D
"RTN","PXRMEXIH",34,0)
 . S NSEL=NSEL+1
"RTN","PXRMEXIH",35,0)
 . S IHIEN=$O(^PXD(811.8,PXRMRIEN,130,"B",DATE,""))
"RTN","PXRMEXIH",36,0)
 . S TEMP=^PXD(811.8,PXRMRIEN,130,IHIEN,0)
"RTN","PXRMEXIH",37,0)
 . S TDATE=$$FMTE^XLFDT($P(TEMP,U,1),"5Z")
"RTN","PXRMEXIH",38,0)
 . S SOURCE=$P(TEMP,U,2)
"RTN","PXRMEXIH",39,0)
 . S TYPE=$P(TEMP,U,3)
"RTN","PXRMEXIH",40,0)
 . S TEXT=NSEL_U_TDATE_U_TYPE_U_SOURCE
"RTN","PXRMEXIH",41,0)
 . D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXRMEXIH",42,0)
 . F JND=1:1:NL D
"RTN","PXRMEXIH",43,0)
 .. S NLINE=NLINE+1,^TMP("PXRMEXIH",$J,NLINE,0)=OUTPUT(JND)
"RTN","PXRMEXIH",44,0)
 .. S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXIH",45,0)
 .. S ^TMP("PXRMEXIH",$J,"SEL",NSEL)=PXRMRIEN_U_IHIEN
"RTN","PXRMEXIH",46,0)
 S NLINE=NLINE+1,^TMP("PXRMEXIH",$J,NLINE,0)=" "
"RTN","PXRMEXIH",47,0)
 S VALMCNT=NLINE
"RTN","PXRMEXIH",48,0)
 S ^TMP("PXRMEXIH",$J,"VALMCNT")=NLINE
"RTN","PXRMEXIH",49,0)
 S ^TMP("PXRMEXIH",$J,"IDX",NLINE,NSEL)=""
"RTN","PXRMEXIH",50,0)
 Q
"RTN","PXRMEXIH",51,0)
 ;
"RTN","PXRMEXIH",52,0)
 ;======================================================
"RTN","PXRMEXIH",53,0)
DELETE(LIST) ;Delete the install histories on the list.
"RTN","PXRMEXIH",54,0)
 N IHIEN,IND,RIEN,TEMP
"RTN","PXRMEXIH",55,0)
 S IND=""
"RTN","PXRMEXIH",56,0)
 F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMEXIH",57,0)
 . S TEMP=^TMP("PXRMEXIH",$J,"SEL",IND)
"RTN","PXRMEXIH",58,0)
 . S RIEN=$P(TEMP,U,1)
"RTN","PXRMEXIH",59,0)
 . S IHIEN=$P(TEMP,U,2)
"RTN","PXRMEXIH",60,0)
 . D DELHIST^PXRMEXU1(RIEN,IHIEN)
"RTN","PXRMEXIH",61,0)
 ;Rebuild the history list display.
"RTN","PXRMEXIH",62,0)
 D BLDLIST
"RTN","PXRMEXIH",63,0)
 S VALMBCK="R"
"RTN","PXRMEXIH",64,0)
 Q
"RTN","PXRMEXIH",65,0)
 ; 
"RTN","PXRMEXIH",66,0)
 ;======================================================
"RTN","PXRMEXIH",67,0)
DELHIST ;Get a list of repository installation entries and delete them.
"RTN","PXRMEXIH",68,0)
 ;Save the original list, it contains the selected repository entries.
"RTN","PXRMEXIH",69,0)
 N VALMBG,VALMLST,VALMY
"RTN","PXRMEXIH",70,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXIH",$J,"IDX",""),-1)
"RTN","PXRMEXIH",71,0)
 ;Get the list to delete.
"RTN","PXRMEXIH",72,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXIH",73,0)
 ;If there is no list quit.
"RTN","PXRMEXIH",74,0)
 I '$D(VALMY) Q
"RTN","PXRMEXIH",75,0)
 D DELETE(.VALMY)
"RTN","PXRMEXIH",76,0)
 Q
"RTN","PXRMEXIH",77,0)
 ;
"RTN","PXRMEXIH",78,0)
 ;======================================================
"RTN","PXRMEXIH",79,0)
DETAILS ;Output the details of an installation.
"RTN","PXRMEXIH",80,0)
 N VALMBG,VALMCNT,VALMLST,VALMY
"RTN","PXRMEXIH",81,0)
 S VALMBG=1,VALMLST=+$O(^TMP("PXRMEXIH",$J,"IDX",""),-1)
"RTN","PXRMEXIH",82,0)
 S VALMCNT=+$G(^TMP("PXRMEXIH",$J,"VALMCNT"))
"RTN","PXRMEXIH",83,0)
 ;Get the list to display.
"RTN","PXRMEXIH",84,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXIH",85,0)
 ;If there is no list quit.
"RTN","PXRMEXIH",86,0)
 I '$D(VALMY) Q
"RTN","PXRMEXIH",87,0)
 D DDISP(.VALMY)
"RTN","PXRMEXIH",88,0)
 Q
"RTN","PXRMEXIH",89,0)
 ;
"RTN","PXRMEXIH",90,0)
 ;==================================================
"RTN","PXRMEXIH",91,0)
DDISP(ARRAY) ;Display details list
"RTN","PXRMEXIH",92,0)
 N ACTION,CAPTION,CMPNT,DI,DP,ENTRY,FMTSTR,IHIEN,IND,JND,KND
"RTN","PXRMEXIH",93,0)
 N NL,NLINE,OUTPUT,RIEN,TEMP,TEXT,VALMCNT,VALMHDR
"RTN","PXRMEXIH",94,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXIH",95,0)
 ;If there are no items then quit.
"RTN","PXRMEXIH",96,0)
 I '$D(ARRAY) Q
"RTN","PXRMEXIH",97,0)
 S FMTSTR="4R1^34L2^6C2^34L"
"RTN","PXRMEXIH",98,0)
 S VALMCNT=0
"RTN","PXRMEXIH",99,0)
 S TEMP=^PXD(811.8,PXRMRIEN,0)
"RTN","PXRMEXIH",100,0)
 S ENTRY=$E($P(TEMP,U,1),1,38)
"RTN","PXRMEXIH",101,0)
 S DP=$$FMTE^XLFDT($P(TEMP,U,3),"5Z")
"RTN","PXRMEXIH",102,0)
 ;CAPTION is used in ENTRY action of LM template
"RTN","PXRMEXIH",103,0)
 S CAPTION="Entry: "_ENTRY_"  Date Packed: "_DP
"RTN","PXRMEXIH",104,0)
 S (IND,NLINE)=0
"RTN","PXRMEXIH",105,0)
 F  S IND=$O(ARRAY(IND)) Q:IND=""  D
"RTN","PXRMEXIH",106,0)
 . S TEMP=^TMP("PXRMEXIH",$J,"SEL",IND)
"RTN","PXRMEXIH",107,0)
 . S RIEN=$P(TEMP,U,1)
"RTN","PXRMEXIH",108,0)
 . S IHIEN=$P(TEMP,U,2)
"RTN","PXRMEXIH",109,0)
 . S DI=$$FMTE^XLFDT(^PXD(811.8,RIEN,130,IHIEN,0),"5Z")
"RTN","PXRMEXIH",110,0)
 . I NLINE>1 D
"RTN","PXRMEXIH",111,0)
 .. S NLINE=NLINE+1
"RTN","PXRMEXIH",112,0)
 .. S ^TMP("PXRMEXID",$J,NLINE,0)="------------------------------------------------------------------------------"
"RTN","PXRMEXIH",113,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXIH",114,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)="Installation date: "_DI
"RTN","PXRMEXIH",115,0)
 .;Write the header line here.
"RTN","PXRMEXIH",116,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXIH",117,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)="     Component                          Action  New Name"
"RTN","PXRMEXIH",118,0)
 . S CMPNT=""
"RTN","PXRMEXIH",119,0)
 . S JND=0
"RTN","PXRMEXIH",120,0)
 . F  S JND=+$O(^PXD(811.8,RIEN,130,IHIEN,1,JND)) Q:JND=0  D
"RTN","PXRMEXIH",121,0)
 .. S TEMP=^PXD(811.8,RIEN,130,IHIEN,1,JND,0)
"RTN","PXRMEXIH",122,0)
 .. I $P(TEMP,U,2)'=CMPNT D
"RTN","PXRMEXIH",123,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXIH",124,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=" "
"RTN","PXRMEXIH",125,0)
 ... S CMPNT=$P(TEMP,U,2)
"RTN","PXRMEXIH",126,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXIH",127,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=CMPNT
"RTN","PXRMEXIH",128,0)
 ..;The first piece is the component number in the packed reminder.
"RTN","PXRMEXIH",129,0)
 .. S TEXT=$P(TEMP,U,1)_U_$P(TEMP,U,3,5)
"RTN","PXRMEXIH",130,0)
 .. D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXRMEXIH",131,0)
 .. F KND=1:1:NL S NLINE=NLINE+1,^TMP("PXRMEXID",$J,NLINE,0)=OUTPUT(KND)
"RTN","PXRMEXIH",132,0)
 ..;If there are Additional Details add them to the display.
"RTN","PXRMEXIH",133,0)
 .. S KND=0
"RTN","PXRMEXIH",134,0)
 .. F  S KND=$O(^PXD(811.8,RIEN,130,IHIEN,1,JND,1,KND)) Q:KND=""  D
"RTN","PXRMEXIH",135,0)
 ... S NLINE=NLINE+1
"RTN","PXRMEXIH",136,0)
 ... S ^TMP("PXRMEXID",$J,NLINE,0)=^PXD(811.8,RIEN,130,IHIEN,1,JND,1,KND,0)
"RTN","PXRMEXIH",137,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXIH",138,0)
 . S ^TMP("PXRMEXID",$J,NLINE,0)=" "
"RTN","PXRMEXIH",139,0)
 S VALMHDR(1)=^PXD(811.8,RIEN,0)_"  "_^TMP("PXRMEXID",$J,1,0)
"RTN","PXRMEXIH",140,0)
 S VALMCNT=NLINE
"RTN","PXRMEXIH",141,0)
 D EN^VALM("PXRM EX INSTALLATION DETAIL")
"RTN","PXRMEXIH",142,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXIH",143,0)
 Q
"RTN","PXRMEXIH",144,0)
 ;
"RTN","PXRMEXIH",145,0)
 ;======================================================
"RTN","PXRMEXIH",146,0)
ENTRY ;List Manager ENTRY entry point.
"RTN","PXRMEXIH",147,0)
 D BLDLIST,XQORM
"RTN","PXRMEXIH",148,0)
 Q
"RTN","PXRMEXIH",149,0)
 ;
"RTN","PXRMEXIH",150,0)
 ;======================================================
"RTN","PXRMEXIH",151,0)
EXIT ;List Manager EXIT entry point.
"RTN","PXRMEXIH",152,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXIH",153,0)
 Q
"RTN","PXRMEXIH",154,0)
 ;
"RTN","PXRMEXIH",155,0)
 ;======================================================
"RTN","PXRMEXIH",156,0)
FMT(ENTRY,SOURCE,DATE,FMTSTR,NL,OUTPUT) ;
"RTN","PXRMEXIH",157,0)
 N TEMP
"RTN","PXRMEXIH",158,0)
 S TEMP=NAME_U_SOURCE
"RTN","PXRMEXIH",159,0)
 S DATE=$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMEXIH",160,0)
 S TEMP=TEMP_U_DATE
"RTN","PXRMEXIH",161,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXRMEXIH",162,0)
 Q
"RTN","PXRMEXIH",163,0)
 ;
"RTN","PXRMEXIH",164,0)
 ;======================================================
"RTN","PXRMEXIH",165,0)
HDR ;List Manager HEADER entry point.
"RTN","PXRMEXIH",166,0)
 S VALMHDR(1)="Exchange File Entry History."
"RTN","PXRMEXIH",167,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXIH",168,0)
 Q
"RTN","PXRMEXIH",169,0)
 ;
"RTN","PXRMEXIH",170,0)
 ;======================================================
"RTN","PXRMEXIH",171,0)
HELP ;Help code
"RTN","PXRMEXIH",172,0)
 W !,"Select DH to delete install histories."
"RTN","PXRMEXIH",173,0)
 W !,"Select ID to see the details of an install."
"RTN","PXRMEXIH",174,0)
 D PAUSE^VALM1
"RTN","PXRMEXIH",175,0)
 Q
"RTN","PXRMEXIH",176,0)
 ;
"RTN","PXRMEXIH",177,0)
 ;======================================================
"RTN","PXRMEXIH",178,0)
IHIST ;Get a list of repository entries and show their installation history.
"RTN","PXRMEXIH",179,0)
 N PXRMRIEN,VALMCNT,VALMY
"RTN","PXRMEXIH",180,0)
 D EN^VALM2(XQORNOD(0))
"RTN","PXRMEXIH",181,0)
 ;If there is no list quit.
"RTN","PXRMEXIH",182,0)
 I '$D(VALMY) Q
"RTN","PXRMEXIH",183,0)
 S IND=""
"RTN","PXRMEXIH",184,0)
 F  S IND=$O(VALMY(IND)) Q:IND=""  D
"RTN","PXRMEXIH",185,0)
 . S PXRMRIEN=^TMP("PXRMEXLR",$J,"SEL",IND)
"RTN","PXRMEXIH",186,0)
 . D EN^VALM("PXRM EX INSTALLATION HISTORY")
"RTN","PXRMEXIH",187,0)
 S VALMBCK="R"
"RTN","PXRMEXIH",188,0)
 Q
"RTN","PXRMEXIH",189,0)
 ;
"RTN","PXRMEXIH",190,0)
 ;=====================================================
"RTN","PXRMEXIH",191,0)
PEXIT ;PXRM EXCH SELECT HISTORY protocol exit code
"RTN","PXRMEXIH",192,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXIH",193,0)
 ;Reset after page up/down etc
"RTN","PXRMEXIH",194,0)
 D XQORM
"RTN","PXRMEXIH",195,0)
 Q
"RTN","PXRMEXIH",196,0)
 ;
"RTN","PXRMEXIH",197,0)
 ;======================================================
"RTN","PXRMEXIH",198,0)
START ;Main entry point for installation history. The Exchange File IEN is
"RTN","PXRMEXIH",199,0)
 ;PXRMRIEN.
"RTN","PXRMEXIH",200,0)
 N VALMBCK,VALMCNT,VALMSG,X,XMZ,XQORM,XQORNOD
"RTN","PXRMEXIH",201,0)
 S X="IORESET"
"RTN","PXRMEXIH",202,0)
 D ENDR^%ZISS
"RTN","PXRMEXIH",203,0)
 S VALMCNT=0
"RTN","PXRMEXIH",204,0)
 D EN^VALM("PXRM EX INSTALLATION HISTORY")
"RTN","PXRMEXIH",205,0)
 Q
"RTN","PXRMEXIH",206,0)
 ;
"RTN","PXRMEXIH",207,0)
 ;======================================================
"RTN","PXRMEXIH",208,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT HISTORY",0))_U_"1:"_VALMCNT
"RTN","PXRMEXIH",209,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXIH",210,0)
 Q
"RTN","PXRMEXIH",211,0)
 ;
"RTN","PXRMEXIH",212,0)
 ;======================================================
"RTN","PXRMEXIH",213,0)
XSEL ;PXRM EXCH SELECT HISTORY validation
"RTN","PXRMEXIH",214,0)
 N ARRAY,CNT,SEL,SELECT
"RTN","PXRMEXIH",215,0)
 S SELECT=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXIH",216,0)
 I '$$VALID^PXRMEXLD(SELECT) S VALMBCK="R" Q
"RTN","PXRMEXIH",217,0)
 ;Build array of selected items
"RTN","PXRMEXIH",218,0)
 F CNT=1:1 S SEL=$P(SELECT,",",CNT) Q:'SEL  S ARRAY(SEL)=""
"RTN","PXRMEXIH",219,0)
 ;
"RTN","PXRMEXIH",220,0)
 D FULL^VALM1
"RTN","PXRMEXIH",221,0)
 ;
"RTN","PXRMEXIH",222,0)
 ;Option to display installation details or delete install history.
"RTN","PXRMEXIH",223,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXRMEXIH",224,0)
 S DIR(0)="SBM"_U_"DH:Delete Install History;"
"RTN","PXRMEXIH",225,0)
 S DIR(0)=DIR(0)_"ID:Installation Details;"
"RTN","PXRMEXIH",226,0)
 S DIR("A")="Select Action: "
"RTN","PXRMEXIH",227,0)
 S DIR("B")="ID"
"RTN","PXRMEXIH",228,0)
 S DIR("?")="Select from the codes displayed."
"RTN","PXRMEXIH",229,0)
 D ^DIR
"RTN","PXRMEXIH",230,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXRMEXIH",231,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXRMEXIH",232,0)
 S OPTION=Y
"RTN","PXRMEXIH",233,0)
 ;
"RTN","PXRMEXIH",234,0)
 ;Display installation details.
"RTN","PXRMEXIH",235,0)
 I OPTION="ID" D DDISP(.ARRAY)
"RTN","PXRMEXIH",236,0)
 ;
"RTN","PXRMEXIH",237,0)
 ;Delete installation history.
"RTN","PXRMEXIH",238,0)
 I OPTION="DH" D DELETE(.ARRAY)
"RTN","PXRMEXIH",239,0)
 S VALMBCK="R"
"RTN","PXRMEXIH",240,0)
 Q
"RTN","PXRMEXIH",241,0)
 ;
"RTN","PXRMEXIU")
0^55^B68841657
"RTN","PXRMEXIU",1,0)
PXRMEXIU ;SLC/PKR/PJH - Utilities for installing repository entries. ;01/18/2013
"RTN","PXRMEXIU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXIU",3,0)
 ;===============================================
"RTN","PXRMEXIU",4,0)
DEF(FDA,NAMECHG) ;Check the reminder definition to make sure the related
"RTN","PXRMEXIU",5,0)
 ;reminder exists and all the findings exist.
"RTN","PXRMEXIU",6,0)
 N ABBR,ALIST,IEN,IENS,FILENUM,FINDING,LRD,OFINDING,PT01
"RTN","PXRMEXIU",7,0)
 N RRG,SPONSOR,TEXT,VERSN
"RTN","PXRMEXIU",8,0)
 S IENS=$O(FDA(811.9,""))
"RTN","PXRMEXIU",9,0)
 ;Related reminder guideline field 1.4.
"RTN","PXRMEXIU",10,0)
 I $D(FDA(811.9,IENS,1.4)) D
"RTN","PXRMEXIU",11,0)
 . S RRG=FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",12,0)
 . S IEN=$$EXISTS^PXRMEXIU(811.9,RRG)
"RTN","PXRMEXIU",13,0)
 . I IEN=0 D
"RTN","PXRMEXIU",14,0)
 ..;Get replacement.
"RTN","PXRMEXIU",15,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",16,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",17,0)
 .. S TEXT(2)="The Related Reminder Guideline does not exist on your system!"
"RTN","PXRMEXIU",18,0)
 .. S TEXT(3)="It is "_RRG_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",19,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",20,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",21,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",22,0)
 .. S DIC=811.9,DIC(0)="AEMQ"
"RTN","PXRMEXIU",23,0)
 .. D ^DIC
"RTN","PXRMEXIU",24,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",25,0)
 .. I Y=-1 K FDA(811.9,IENS,1.4)
"RTN","PXRMEXIU",26,0)
 .. E  S FDA(811.9,IENS,1.4)=$P(Y,U,2)
"RTN","PXRMEXIU",27,0)
 ;
"RTN","PXRMEXIU",28,0)
 ;Sponsor field 101.
"RTN","PXRMEXIU",29,0)
 I $D(FDA(811.9,IENS,101)) D
"RTN","PXRMEXIU",30,0)
 . S SPONSOR=FDA(811.9,IENS,101)
"RTN","PXRMEXIU",31,0)
 . S IEN=$$FIND1^DIC(811.6,"","U",SPONSOR)
"RTN","PXRMEXIU",32,0)
 . I IEN=0 D
"RTN","PXRMEXIU",33,0)
 ..;Get replacement.
"RTN","PXRMEXIU",34,0)
 .. N DIC,X,Y
"RTN","PXRMEXIU",35,0)
 .. S TEXT(1)=" "
"RTN","PXRMEXIU",36,0)
 .. S TEXT(2)="The Sponsor does not exist on your system!"
"RTN","PXRMEXIU",37,0)
 .. S TEXT(3)="It is "_SPONSOR_" input a replacement or ^ to leave it empty."
"RTN","PXRMEXIU",38,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",39,0)
 ..;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",40,0)
 .. I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",41,0)
 .. S DIC=811.6,DIC(0)="AEMQ"
"RTN","PXRMEXIU",42,0)
 .. D ^DIC
"RTN","PXRMEXIU",43,0)
 .. I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",44,0)
 .. I Y=-1 K FDA(811.9,IENS,101)
"RTN","PXRMEXIU",45,0)
 .. E  S FDA(811.9,IENS,101)=$P(Y,U,2)
"RTN","PXRMEXIU",46,0)
 ;
"RTN","PXRMEXIU",47,0)
 ;Linked reminder dialog field 51.
"RTN","PXRMEXIU",48,0)
 S LRD=$G(FDA(811.9,IENS,51))
"RTN","PXRMEXIU",49,0)
 S IEN=$S(LRD="":0,1:+$O(^PXRMD(801.41,"B",LRD,"")))
"RTN","PXRMEXIU",50,0)
 I IEN=0 K FDA(811.9,IENS,51)
"RTN","PXRMEXIU",51,0)
 ;
"RTN","PXRMEXIU",52,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",53,0)
 D SFMVPI(.FDA,.NAMECHG,811.902)
"RTN","PXRMEXIU",54,0)
 S VERSN=$$GETTAGV^PXRMEXU3(^PXD(811.8,PXRMRIEN,100,3,0),"<PACKAGE_VERSION>")
"RTN","PXRMEXIU",55,0)
 I VERSN=1.5 D CEFD^PXRMDATE(.FDA)
"RTN","PXRMEXIU",56,0)
 Q
"RTN","PXRMEXIU",57,0)
 ;
"RTN","PXRMEXIU",58,0)
 ;===============================================
"RTN","PXRMEXIU",59,0)
EXISTS(FILENUM,NAME,FLAG) ;Check for existence of an entry with the
"RTN","PXRMEXIU",60,0)
 ;same name. Return 0 for null name. If FLAG="W" then if necessary
"RTN","PXRMEXIU",61,0)
 ;display the warning message.
"RTN","PXRMEXIU",62,0)
 I NAME="" Q 0
"RTN","PXRMEXIU",63,0)
 ;Return the ien if it does, 0 otherwise.
"RTN","PXRMEXIU",64,0)
 N IEN
"RTN","PXRMEXIU",65,0)
 I FILENUM=0 S IEN=$$EXISTS^PXRMEXCF(NAME) Q
"RTN","PXRMEXIU",66,0)
 N FLAGS,RESULT
"RTN","PXRMEXIU",67,0)
 S RESULT=NAME
"RTN","PXRMEXIU",68,0)
 ;Special lookup for files 80 and 80.1, they do not have a standard "B"
"RTN","PXRMEXIU",69,0)
 ;cross-reference.
"RTN","PXRMEXIU",70,0)
 I (FILENUM=80)!(FILENUM=80.1) D
"RTN","PXRMEXIU",71,0)
 .;Name may or may not have the necessary space appended, make sure
"RTN","PXRMEXIU",72,0)
 .;it does.
"RTN","PXRMEXIU",73,0)
 . S RESULT=$S($E(NAME,$L(NAME))'=" ":NAME_" ",1:NAME)
"RTN","PXRMEXIU",74,0)
 . S FLAGS="MX"
"RTN","PXRMEXIU",75,0)
 E  S FLAGS="BXU"
"RTN","PXRMEXIU",76,0)
 ;File 8927.1 only allows upper case .01s.
"RTN","PXRMEXIU",77,0)
 I FILENUM=8927.1 S RESULT=$$UP^XLFSTR(NAME)
"RTN","PXRMEXIU",78,0)
 S IEN=$$FIND1^DIC(FILENUM,"",FLAGS,RESULT)
"RTN","PXRMEXIU",79,0)
 I +IEN>0 Q IEN
"RTN","PXRMEXIU",80,0)
 ;If IEN is null then there was an error try FIND^DIC.
"RTN","PXRMEXIU",81,0)
 N IND,FILENAME,LIST,MLIST,MSG,NFOUND,NMATCH,TEXT
"RTN","PXRMEXIU",82,0)
 D FIND^DIC(FILENUM,"","",FLAGS,NAME,"","","","","LIST","MSG")
"RTN","PXRMEXIU",83,0)
 S NFOUND=+$P(LIST("DILIST",0),U,1)
"RTN","PXRMEXIU",84,0)
 I NFOUND=0 Q 0
"RTN","PXRMEXIU",85,0)
 I NFOUND=1 Q LIST("DILIST",2,1)
"RTN","PXRMEXIU",86,0)
 ;Multiple entries with the same name found, search for a match with
"RTN","PXRMEXIU",87,0)
 ;the .01.
"RTN","PXRMEXIU",88,0)
 S NMATCH=0
"RTN","PXRMEXIU",89,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXIU",90,0)
 . I LIST("DILIST",1,IND)=NAME S NMATCH=NMATCH+1,MLIST(NMATCH)=IND
"RTN","PXRMEXIU",91,0)
 I NMATCH=1 Q LIST("DILIST",2,MLIST(1))
"RTN","PXRMEXIU",92,0)
 I NMATCH=0 Q 0
"RTN","PXRMEXIU",93,0)
 ;If FLAG="W" display the warning message, return the first entry on 
"RTN","PXRMEXIU",94,0)
 ;the list and quit.
"RTN","PXRMEXIU",95,0)
 I (NMATCH>1),$G(FLAG)="W" D  Q LIST("DILIST",2,1)
"RTN","PXRMEXIU",96,0)
 . S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXIU",97,0)
 . S TEXT(1)="Warning there are "_NMATCH_" "_FILENAME_" entries with the name "_NAME_"!"
"RTN","PXRMEXIU",98,0)
 . S TEXT(2)="If this is used as a finding, and it is not resolved by FileMan during"
"RTN","PXRMEXIU",99,0)
 . S TEXT(3)="installation, any component using this finding will not install."
"RTN","PXRMEXIU",100,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMEXIU",101,0)
 . H 3
"RTN","PXRMEXIU",102,0)
 ;If FLAG is not "W" prompt the user for the replacement.
"RTN","PXRMEXIU",103,0)
 I NMATCH>1 S IEN=$$GETIEN^PXRMEXU0(NMATCH,.LIST)
"RTN","PXRMEXIU",104,0)
 Q IEN
"RTN","PXRMEXIU",105,0)
 ;
"RTN","PXRMEXIU",106,0)
 ;===============================================
"RTN","PXRMEXIU",107,0)
GETACT(CHOICES,DIR) ;Get the action
"RTN","PXRMEXIU",108,0)
 ;If CHOICES is empty the only action is skip.
"RTN","PXRMEXIU",109,0)
 I CHOICES="" Q "S"
"RTN","PXRMEXIU",110,0)
 N DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMEXIU",111,0)
 S DIR(0)="S"_U
"RTN","PXRMEXIU",112,0)
 I CHOICES["C" S DIR(0)=DIR(0)_"C:Create a new entry by copying to a new name"
"RTN","PXRMEXIU",113,0)
 I CHOICES["D" S DIR(0)=DIR(0)_";D:Delete"
"RTN","PXRMEXIU",114,0)
 I CHOICES["I" S DIR(0)=DIR(0)_";I:Install"
"RTN","PXRMEXIU",115,0)
 I CHOICES["M" S DIR(0)=DIR(0)_";M:Merge findings"
"RTN","PXRMEXIU",116,0)
 I CHOICES["O" S DIR(0)=DIR(0)_";O:Overwrite the current entry"
"RTN","PXRMEXIU",117,0)
 I CHOICES["P" S DIR(0)=DIR(0)_";P:Replace with an existing entry"
"RTN","PXRMEXIU",118,0)
 I CHOICES["U" S DIR(0)=DIR(0)_";U:Update"
"RTN","PXRMEXIU",119,0)
 I CHOICES["Q" S DIR(0)=DIR(0)_";Q:Quit the install"
"RTN","PXRMEXIU",120,0)
 I CHOICES["R" S DIR(0)=DIR(0)_";R:Restart"
"RTN","PXRMEXIU",121,0)
 I CHOICES["S" S DIR(0)=DIR(0)_";S:Skip, do not install this entry"
"RTN","PXRMEXIU",122,0)
 ;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",123,0)
 I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",124,0)
 D ^DIR
"RTN","PXRMEXIU",125,0)
 I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",126,0)
 I $D(DIROUT)!$D(DIRUT) S Y="S"
"RTN","PXRMEXIU",127,0)
 I $D(DTOUT)!($D(DUOUT)) S Y="S"
"RTN","PXRMEXIU",128,0)
 Q Y
"RTN","PXRMEXIU",129,0)
 ;
"RTN","PXRMEXIU",130,0)
 ;===============================================
"RTN","PXRMEXIU",131,0)
GETNAME(MIN,MAX) ;Get a name to use.
"RTN","PXRMEXIU",132,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMEXIU",133,0)
 S DIR(0)="FAOU"_U_MIN_":"_MAX
"RTN","PXRMEXIU",134,0)
 S DIR("A")="Input the new name: "
"RTN","PXRMEXIU",135,0)
 D ^DIR
"RTN","PXRMEXIU",136,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMEXIU",137,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMEXIU",138,0)
 Q Y
"RTN","PXRMEXIU",139,0)
 ;
"RTN","PXRMEXIU",140,0)
 ;===============================================
"RTN","PXRMEXIU",141,0)
GETUNAME(ATTR) ;Get a unique name to use, ATTR holds the attributes.
"RTN","PXRMEXIU",142,0)
 N IEN,NEWPT01,TEXT
"RTN","PXRMEXIU",143,0)
GNEW S NEWPT01=$$GETNAME(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXIU",144,0)
 S IEN=+$$EXISTS(ATTR("FILE NUMBER"),NEWPT01)
"RTN","PXRMEXIU",145,0)
 I IEN>0 D  G GNEW
"RTN","PXRMEXIU",146,0)
 . S TEXT(1)=ATTR("FILE NAME")_" entry "_NEWPT01_" already exists."
"RTN","PXRMEXIU",147,0)
 . S TEXT(2)="Input a different name or type <ENTER> to quit."
"RTN","PXRMEXIU",148,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMEXIU",149,0)
 E  S ATTR("NAME")=NEWPT01
"RTN","PXRMEXIU",150,0)
 Q NEWPT01
"RTN","PXRMEXIU",151,0)
 ;
"RTN","PXRMEXIU",152,0)
 ;===============================================
"RTN","PXRMEXIU",153,0)
HF(FDA,NAMECHG) ;Check the health factor to make sure a category does not
"RTN","PXRMEXIU",154,0)
 ;have a category.
"RTN","PXRMEXIU",155,0)
 N IENS
"RTN","PXRMEXIU",156,0)
 S IENS=$O(FDA(9999999.64,""))
"RTN","PXRMEXIU",157,0)
 I IENS="" Q
"RTN","PXRMEXIU",158,0)
 I FDA(9999999.64,IENS,.1)="CATEGORY" K FDA(9999999.64,IENS,.03)
"RTN","PXRMEXIU",159,0)
 Q
"RTN","PXRMEXIU",160,0)
 ;
"RTN","PXRMEXIU",161,0)
 ;===============================================
"RTN","PXRMEXIU",162,0)
REXISTS(NAME,DATEP) ;See if this Exchange File entry already exists.
"RTN","PXRMEXIU",163,0)
 N IEN,LUVALUE
"RTN","PXRMEXIU",164,0)
 S LUVALUE(1)=NAME
"RTN","PXRMEXIU",165,0)
 S LUVALUE(2)=DATEP
"RTN","PXRMEXIU",166,0)
 S IEN=+$$FIND1^DIC(811.8,"","KU",.LUVALUE)
"RTN","PXRMEXIU",167,0)
 Q IEN
"RTN","PXRMEXIU",168,0)
 ;
"RTN","PXRMEXIU",169,0)
 ;===============================================
"RTN","PXRMEXIU",170,0)
SFMVPI(FDA,NAMECHG,SFN) ;Search a variable pointer list for items that do not
"RTN","PXRMEXIU",171,0)
 ;exist and prompt the user for a replacement. Works for definitions,
"RTN","PXRMEXIU",172,0)
 ;terms, and health summary types.
"RTN","PXRMEXIU",173,0)
 N ABBR,ACTION,ALIST,DIR,IEN,IENS,FILENUM,FINDING,HSUB,OFINDING,PT01,TYPE
"RTN","PXRMEXIU",174,0)
 ;Search the finding multiple for replacements and missing findings.
"RTN","PXRMEXIU",175,0)
 S HSUB=$S(SFN=142.14:"HSTI",SFN=811.52:"TRMF",1:"DEFF")
"RTN","PXRMEXIU",176,0)
 S TYPE=$S(SFN=142.14:"Selection item",1:"Finding")
"RTN","PXRMEXIU",177,0)
 D BLDALIST^PXRMVPTR(SFN,.01,.ALIST)
"RTN","PXRMEXIU",178,0)
 S (ACTION,IENS)=""
"RTN","PXRMEXIU",179,0)
 F  S IENS=$O(FDA(SFN,IENS)) Q:(IENS="")!(ACTION="Q")  D
"RTN","PXRMEXIU",180,0)
 . S (FINDING,OFINDING)=FDA(SFN,IENS,.01)
"RTN","PXRMEXIU",181,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXIU",182,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXIU",183,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",184,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIU",185,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIU",186,0)
 .. S FDA(SFN,IENS,.01)=FINDING
"RTN","PXRMEXIU",187,0)
 . S IEN=+$$VFIND1(FINDING,.ALIST)
"RTN","PXRMEXIU",188,0)
 . I IEN>0 S FDA(SFN,IENS,.01)=ABBR_".`"_IEN
"RTN","PXRMEXIU",189,0)
 . I IEN=0 D
"RTN","PXRMEXIU",190,0)
 ..;Get replacement
"RTN","PXRMEXIU",191,0)
 .. N DIC,DUOUT,ROOT,TEXT,X,Y,YY
"RTN","PXRMEXIU",192,0)
 .. S TEXT(1)=TYPE_" "_FINDING_" does not exist, what do you want to do?"
"RTN","PXRMEXIU",193,0)
 .. D BMES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",194,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR)
"RTN","PXRMEXIU",195,0)
 .. I ACTION="Q" K FDA Q
"RTN","PXRMEXIU",196,0)
 .. I ACTION="D" K FDA(SFN,IENS) Q 
"RTN","PXRMEXIU",197,0)
 .. S DIC=FILENUM
"RTN","PXRMEXIU",198,0)
 .. S ROOT=$P($$ROOT^DILFD(FILENUM),U,2)
"RTN","PXRMEXIU",199,0)
 .. S DIC("S")="S YY=Y_"";""_ROOT I $$VFINDING^PXRMINTR(YY)"
"RTN","PXRMEXIU",200,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXIU",201,0)
 .. S Y=-1
"RTN","PXRMEXIU",202,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXIU",203,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXIU",204,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXIU",205,0)
 ... D ^DIC
"RTN","PXRMEXIU",206,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXIU",207,0)
 ... I $D(DUOUT) D
"RTN","PXRMEXIU",208,0)
 .... S Y=""
"RTN","PXRMEXIU",209,0)
 .... K FDA
"RTN","PXRMEXIU",210,0)
 .. I Y="" K FDA(SFN,IENS)
"RTN","PXRMEXIU",211,0)
 .. E  D
"RTN","PXRMEXIU",212,0)
 ... S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXIU",213,0)
 ... S FDA(SFN,IENS,.01)=FINDING
"RTN","PXRMEXIU",214,0)
 .;Save the finding information for the history.
"RTN","PXRMEXIU",215,0)
 . S ^TMP("PXRMEXIA",$J,HSUB,$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXIU",216,0)
 Q
"RTN","PXRMEXIU",217,0)
 ;
"RTN","PXRMEXIU",218,0)
 ;===============================================
"RTN","PXRMEXIU",219,0)
TIUOBJ(FDA) ;Resolve the name of the health summary object.
"RTN","PXRMEXIU",220,0)
 N END,HSOBJIEN,IENS,START,TEMP
"RTN","PXRMEXIU",221,0)
 S IENS=$O(FDA(8925.1,""))
"RTN","PXRMEXIU",222,0)
 S TEMP=$G(FDA(8925.1,IENS,9))
"RTN","PXRMEXIU",223,0)
 I TEMP'["TIU^GMTSOBJ" Q
"RTN","PXRMEXIU",224,0)
 S START=$F(TEMP,"DFN,")
"RTN","PXRMEXIU",225,0)
 S END=$L(TEMP)-1
"RTN","PXRMEXIU",226,0)
 S TEMP=$E(TEMP,START,END)
"RTN","PXRMEXIU",227,0)
 S HSOBJIEN=$O(^GMT(142.5,"B",TEMP,""))
"RTN","PXRMEXIU",228,0)
 I HSOBJIEN="" D  Q
"RTN","PXRMEXIU",229,0)
 . N TEXT
"RTN","PXRMEXIU",230,0)
 . S TEXT(1)="Health Summary Object "_TEMP_" does not exist."
"RTN","PXRMEXIU",231,0)
 . S TEXT(2)="It must be installed before this TIU Health Summary Object can be installed."
"RTN","PXRMEXIU",232,0)
 . S TEXT(3)="Please go back and install it, making sure the corresponding Health Summary"
"RTN","PXRMEXIU",233,0)
 . S TEXT(4)="Type has been installed first."
"RTN","PXRMEXIU",234,0)
 . S TEXT(5)=" "
"RTN","PXRMEXIU",235,0)
 . I '$D(XPDNM) D EN^DDIOL(.TEXT)
"RTN","PXRMEXIU",236,0)
 . I $D(XPDNM) D BMES^XPDUTL(.TEXT)
"RTN","PXRMEXIU",237,0)
 S FDA(8925.1,IENS,9)="S X=$$TIU^GMTSOBJ(DFN,"_HSOBJIEN_")"
"RTN","PXRMEXIU",238,0)
 S FDA(8925.1,IENS,99)=$H
"RTN","PXRMEXIU",239,0)
 Q
"RTN","PXRMEXIU",240,0)
 ;
"RTN","PXRMEXIU",241,0)
 ;===============================================
"RTN","PXRMEXIU",242,0)
VDLGFIND(ABBR,IEN,ALIST) ;Determine if the finding item associated with a
"RTN","PXRMEXIU",243,0)
 ;reminder dialog is active. Returns a 1 if it is active otherwise
"RTN","PXRMEXIU",244,0)
 ;returns a 0.
"RTN","PXRMEXIU",245,0)
 N FILENUM
"RTN","PXRMEXIU",246,0)
 S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",247,0)
 Q $$FILESCR^PXRMDLG6(IEN,FILENUM)
"RTN","PXRMEXIU",248,0)
 ;
"RTN","PXRMEXIU",249,0)
 ;===============================================
"RTN","PXRMEXIU",250,0)
VFIND1(VPTR,ALIST) ;Given a variable pointer of the form ABBR.NAME
"RTN","PXRMEXIU",251,0)
 ;and ALIST which contains the link between abbreviations and files
"RTN","PXRMEXIU",252,0)
 ;return the IEN if it exists and 0 if no match if found.
"RTN","PXRMEXIU",253,0)
 N ABBR,IEN,FILENUM,PT01,RESULT
"RTN","PXRMEXIU",254,0)
 S IEN=0
"RTN","PXRMEXIU",255,0)
 S ABBR=$P(VPTR,".",1)
"RTN","PXRMEXIU",256,0)
 S PT01=$P(VPTR,".",2,99)
"RTN","PXRMEXIU",257,0)
 S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXIU",258,0)
 S IEN=$$EXISTS(FILENUM,PT01)
"RTN","PXRMEXIU",259,0)
 Q IEN
"RTN","PXRMEXIU",260,0)
 ;
"RTN","PXRMEXLB")
0^103^B63445674
"RTN","PXRMEXLB",1,0)
PXRMEXLB ;SLC/PJH - Reminder Dialog Exchange. ;06/27/2013
"RTN","PXRMEXLB",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXLB",3,0)
 ;
"RTN","PXRMEXLB",4,0)
 ;=====================================================================
"RTN","PXRMEXLB",5,0)
 ;Build the DLOC array.
"RTN","PXRMEXLB",6,0)
BDLOC(IEN,IND120) ;
"RTN","PXRMEXLB",7,0)
 N DDATA,DNAME,JND
"RTN","PXRMEXLB",8,0)
 S JND=0
"RTN","PXRMEXLB",9,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND120,1,JND)) Q:JND=""  D
"RTN","PXRMEXLB",10,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND120,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",11,0)
 .S DNAME=$P(DDATA,U,1)
"RTN","PXRMEXLB",12,0)
 .;Save start and end in 100 node and 120 node IND and JND.
"RTN","PXRMEXLB",13,0)
 .S ^TMP("PXRMEXTMP",$J,"DLOC",DNAME)=$P(DDATA,U,2,3)_U_IND120_U_JND
"RTN","PXRMEXLB",14,0)
 Q
"RTN","PXRMEXLB",15,0)
 ;
"RTN","PXRMEXLB",16,0)
 ;Build list of dialog components
"RTN","PXRMEXLB",17,0)
 ;-------------------------------
"RTN","PXRMEXLB",18,0)
DBUILD(IEN,IND120,JND120) ;
"RTN","PXRMEXLB",19,0)
 N CNT,DARRAY,DATA,DDATA,DDLG,DEND,DIALNAM,DLOC,DMAP,DNAME,DNODE,DSEQ
"RTN","PXRMEXLB",20,0)
 N DSTRT,DSUB,FDATA,FILE,FILENAM,FILENUM,FNAME,IND,INDICES,JND,LINE
"RTN","PXRMEXLB",21,0)
 N REPARR,REPCNT,RESGRP,TEMPRESL,VERSN
"RTN","PXRMEXLB",22,0)
 K ^TMP("PXRMEXTMP",$J,"DMAP")
"RTN","PXRMEXLB",23,0)
 S LINE=^PXD(811.8,IEN,100,3,0)
"RTN","PXRMEXLB",24,0)
 S VERSN=$$GETTAGV^PXRMEXU3(LINE,"<PACKAGE_VERSION>")
"RTN","PXRMEXLB",25,0)
 S DDATA=$G(^PXD(811.8,IEN,120,IND120,1,JND120,0)) Q:DDATA=""
"RTN","PXRMEXLB",26,0)
 S ^TMP("PXRMEXTMP",$J,"PXRMDNAME")=$P(DDATA,U,1)
"RTN","PXRMEXLB",27,0)
 S DIALNAM=$P(DDATA,U,1)
"RTN","PXRMEXLB",28,0)
 S DSUB=$P(DDATA,U,2)+2
"RTN","PXRMEXLB",29,0)
 I $P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3)["100~NATIONAL" S ^TMP("PXRMEXTMP",$J,"PXRMDNAT")=""
"RTN","PXRMEXLB",30,0)
 I '$D(^TMP("PXRMEXTMP",$J,"DLOC")) D BDLOC(IEN,IND120)
"RTN","PXRMEXLB",31,0)
 S (JND,REPCNT)=0
"RTN","PXRMEXLB",32,0)
 ;Scan the dialog components in 120 and save the name and type.
"RTN","PXRMEXLB",33,0)
 F  S JND=$O(^PXD(811.8,IEN,120,IND120,1,JND)) Q:JND'>0!(JND>JND120)  D
"RTN","PXRMEXLB",34,0)
 .S DDATA=$G(^PXD(811.8,IEN,120,IND120,1,JND,0)) Q:DDATA=""
"RTN","PXRMEXLB",35,0)
 .S (DDLG,DNAME)=$P(DDATA,U,1)
"RTN","PXRMEXLB",36,0)
 .S DSTRT=$P(DDATA,U,2),DEND=$P(DDATA,U,3),DSUB=DSTRT+2
"RTN","PXRMEXLB",37,0)
 .;Extract dialog type and text and findings from exchange file
"RTN","PXRMEXLB",38,0)
 .D DPARSE(IND120,JND,DNAME,DSTRT,DEND,.RESGRP,.TEMPRSEL)
"RTN","PXRMEXLB",39,0)
 .;Scan dialog components in 120 and save dialog links
"RTN","PXRMEXLB",40,0)
 .F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:DSUB>DEND  D
"RTN","PXRMEXLB",41,0)
 ..S LINE=$G(^PXD(811.8,IEN,100,DSUB,0))
"RTN","PXRMEXLB",42,0)
 .. S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXLB",43,0)
 .. S DATA=$P(LINE,"~",2)
"RTN","PXRMEXLB",44,0)
 .. S FILE=$P(INDICES,";",1)
"RTN","PXRMEXLB",45,0)
 .. S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXLB",46,0)
 .. I (FILE'=801.412)&(FILE'=801.41121)&(FIELD'=118) Q
"RTN","PXRMEXLB",47,0)
 ..;Handle dialogs with replacement dialogs
"RTN","PXRMEXLB",48,0)
 ..I FIELD=118 D
"RTN","PXRMEXLB",49,0)
 ...S DNAME=DATA Q:DNAME=""
"RTN","PXRMEXLB",50,0)
 ...S DLOC=^TMP("PXRMEXTMP",$J,"DLOC",DNAME)
"RTN","PXRMEXLB",51,0)
 ...S REPCNT=REPCNT+1 D
"RTN","PXRMEXLB",52,0)
 ....I +$P(VERSN,"P",2)>11 S ^TMP("PXRMEXTMP",$J,"DREPL",DIALNAM,REPCNT,DDLG)=DNAME_U_DLOC
"RTN","PXRMEXLB",53,0)
 ....I +$P(VERSN,"P",2)<12 S REPARR(REPCNT,DDLG)=DNAME_U_DLOC
"RTN","PXRMEXLB",54,0)
 ..I FIELD'=.01 Q
"RTN","PXRMEXLB",55,0)
 ..S DSEQ=DATA Q:DSEQ=""
"RTN","PXRMEXLB",56,0)
 ..I FILE="801.41121" D  Q
"RTN","PXRMEXLB",57,0)
 ...S DNAME=DATA Q:DNAME=""
"RTN","PXRMEXLB",58,0)
 ...;Quit if DLOC for the item is not defined. This should fix a problem
"RTN","PXRMEXLB",59,0)
 ...;pre-patch 12 entries not containing national prompts.
"RTN","PXRMEXLB",60,0)
 ...I +$P(VERSN,"P",2)<12,'$D(^TMP("PXRMEXTMP",$J,"DLOC",DNAME)) Q
"RTN","PXRMEXLB",61,0)
 ...S DLOC=^TMP("PXRMEXTMP",$J,"DLOC",DNAME)
"RTN","PXRMEXLB",62,0)
 ...S CNT=0
"RTN","PXRMEXLB",63,0)
 ...I $D(^TMP("PXRMEXTMP",$J,"DMAP",DDLG))>0 S CNT=$O(^TMP("PXRMEXTMP",$J,"DMAP",DDLG,""),-1)
"RTN","PXRMEXLB",64,0)
 ...S ^TMP("PXRMEXTMP",$J,"DMAP",DDLG,CNT+1)=DNAME
"RTN","PXRMEXLB",65,0)
 ..S LINE=$G(^PXD(811.8,IEN,100,DSUB+1,0))
"RTN","PXRMEXLB",66,0)
 ..I ($P(LINE,";")'="801.412") Q
"RTN","PXRMEXLB",67,0)
 .. S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXLB",68,0)
 .. I $P(INDICES,";",3)'=2 Q
"RTN","PXRMEXLB",69,0)
 .. S DATA=$P(LINE,"~",2)
"RTN","PXRMEXLB",70,0)
 .. S DNAME=DATA Q:DNAME=""
"RTN","PXRMEXLB",71,0)
 ..;Quit if DLOC for the item is not defined. This should fix a problem
"RTN","PXRMEXLB",72,0)
 ..;pre-patch 12 entries not containing national prompts.
"RTN","PXRMEXLB",73,0)
 ..I +$P(VERSN,"P",2)<12,'$D(^TMP("PXRMEXTMP",$J,"DLOC",DNAME)) Q
"RTN","PXRMEXLB",74,0)
 ..S DLOC=^TMP("PXRMEXTMP",$J,"DLOC",DNAME)
"RTN","PXRMEXLB",75,0)
 ..S ^TMP("PXRMEXTMP",$J,"DMAP",DDLG,DSEQ)=DNAME
"RTN","PXRMEXLB",76,0)
 ;
"RTN","PXRMEXLB",77,0)
 I $D(REPARR)>0 D
"RTN","PXRMEXLB",78,0)
 .N CNT,DLG,REPCNT
"RTN","PXRMEXLB",79,0)
 .S CNT="",REPCNT=0
"RTN","PXRMEXLB",80,0)
 .F  S CNT=$O(REPARR(CNT)) Q:CNT=""  D
"RTN","PXRMEXLB",81,0)
 ..S REPCNT=REPCNT+1,DLG=$O(REPARR(CNT,""))
"RTN","PXRMEXLB",82,0)
 ..S ^TMP("PXRMEXTMP",$J,"DREPL",DIALNAM,REPCNT,DLG)=REPARR(CNT,DLG)
"RTN","PXRMEXLB",83,0)
 ;
"RTN","PXRMEXLB",84,0)
 ;Build index of dialog findings by name
"RTN","PXRMEXLB",85,0)
 S IND=0
"RTN","PXRMEXLB",86,0)
 F  S IND=$O(^PXD(811.8,IEN,120,IND)) Q:'IND  D
"RTN","PXRMEXLB",87,0)
 .S FDATA=$G(^PXD(811.8,IEN,120,IND,0)) Q:FDATA=""
"RTN","PXRMEXLB",88,0)
 .S FILENAM=$P(FDATA,U),FILENUM=$P(FDATA,U,2) Q:FILENAM=""  Q:'FILENUM
"RTN","PXRMEXLB",89,0)
 .;Ignore reminder dialogs
"RTN","PXRMEXLB",90,0)
 .I FILENAM="REMINDER DIALOG" Q
"RTN","PXRMEXLB",91,0)
 .;Ignore reminder terms
"RTN","PXRMEXLB",92,0)
 .I FILENAM="REMINDER TERM" Q
"RTN","PXRMEXLB",93,0)
 .;Strip off trailing S in finding file name
"RTN","PXRMEXLB",94,0)
 .I $E(FILENAM,$L(FILENAM))="S" S $E(FILENAM,$L(FILENAM))=""
"RTN","PXRMEXLB",95,0)
 .S JND=0
"RTN","PXRMEXLB",96,0)
 .F  S JND=$O(^PXD(811.8,IEN,120,IND,1,JND)) Q:'JND  D
"RTN","PXRMEXLB",97,0)
 ..S FNAME=$P($G(^PXD(811.8,IEN,120,IND,1,JND,0)),U) Q:FNAME=""
"RTN","PXRMEXLB",98,0)
 ..;Save entry
"RTN","PXRMEXLB",99,0)
 ..S ^TMP("PXRMEXFND",$J,FNAME)=FILENUM_U_FILENAM_U_IND
"RTN","PXRMEXLB",100,0)
 I $D(TEMPRESL)>0 D
"RTN","PXRMEXLB",101,0)
 .S DDLG="" F  S DDLG=$O(TEMPRESL(DDLG)) Q:DDLG=""  D
"RTN","PXRMEXLB",102,0)
 ..S DSEQ=$O(^TMP("PXRMEXTMP",$J,"DMAP",DDLG,""),-1)
"RTN","PXRMEXLB",103,0)
 ..S ^TMP("PXRMEXTMP",$J,"DMAP",DDLG,DSEQ+1)=TEMPRESL(DDLG)_U_RESGRP(TEMPRESL(DDLG))
"RTN","PXRMEXLB",104,0)
 Q
"RTN","PXRMEXLB",105,0)
 ;
"RTN","PXRMEXLB",106,0)
 ;---------------------------------------
"RTN","PXRMEXLB",107,0)
 ;Scan exchange file to get dialog fields
"RTN","PXRMEXLB",108,0)
 ;---------------------------------------
"RTN","PXRMEXLB",109,0)
DPARSE(IND120,JND120,DNAME,DSTRT,DEND,RESGRP,TEMPRESL) ;
"RTN","PXRMEXLB",110,0)
 N DARRAY,DCNT,DDATA,DFIND,DFIAD,DFNAM,DFNUM,DFQUIT,DLCT,DLINES
"RTN","PXRMEXLB",111,0)
 N DSTRING,DSUB,DTEXT,DTXT,DTYP,RESNAME
"RTN","PXRMEXLB",112,0)
 ;
"RTN","PXRMEXLB",113,0)
 ;Find where all the field numbers are kept
"RTN","PXRMEXLB",114,0)
 S DSUB=DSTRT-1,DSTRING=";.01;4;5;15;24;25;55;"
"RTN","PXRMEXLB",115,0)
 F  S DSUB=$O(^PXD(811.8,IEN,100,DSUB)) Q:'DSUB  D  Q:DSUB>DEND
"RTN","PXRMEXLB",116,0)
 .S DDATA=$G(^PXD(811.8,IEN,100,DSUB,0)) Q:DDATA=""
"RTN","PXRMEXLB",117,0)
 .I $P(DDATA,";")'=801.41 Q
"RTN","PXRMEXLB",118,0)
 .S DFNUM=$P(DDATA,";",3),DFNUM=$P(DFNUM,"~") Q:DFNUM=""
"RTN","PXRMEXLB",119,0)
 .I DSTRING[(";"_DFNUM_";") S DARRAY(DFNUM)=DSUB
"RTN","PXRMEXLB",120,0)
 .I $P(DDATA,";")="801.41121" S DARRAY(55)=DSUB
"RTN","PXRMEXLB",121,0)
 ;
"RTN","PXRMEXLB",122,0)
 ;Determine dialog component type
"RTN","PXRMEXLB",123,0)
 S DSUB=DARRAY(4) Q:'DSUB
"RTN","PXRMEXLB",124,0)
 S DTYP=$P($G(^PXD(811.8,IEN,100,DSUB,0)),"~",2)
"RTN","PXRMEXLB",125,0)
 I DTYP'["result" S:DTYP[" " DTYP=$P(DTYP," ",2) S:DTYP="value" DTYP="forced"
"RTN","PXRMEXLB",126,0)
 ;
"RTN","PXRMEXLB",127,0)
 ;Initialise text and finding fields
"RTN","PXRMEXLB",128,0)
 S DTXT="*NONE*",DFIND=""
"RTN","PXRMEXLB",129,0)
 ;Get text appropriate for the type of component
"RTN","PXRMEXLB",130,0)
 I ((DTYP="element")!(DTYP="group"))&(DTYP'["result") D
"RTN","PXRMEXLB",131,0)
 .;Search for WP text
"RTN","PXRMEXLB",132,0)
 .S DSUB=$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",133,0)
 ..S DTEXT=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DTEXT=""
"RTN","PXRMEXLB",134,0)
 ..;Get the line count
"RTN","PXRMEXLB",135,0)
 ..S DLINES=$P(DTEXT,"~",3),DCNT=0
"RTN","PXRMEXLB",136,0)
 ..;Get the wp text lines
"RTN","PXRMEXLB",137,0)
 ..F DLCT=DSUB+1:1:DSUB+DLINES D
"RTN","PXRMEXLB",138,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",139,0)
 ...S DCNT=DCNT+1,DTXT(DCNT)=DTEXT
"RTN","PXRMEXLB",140,0)
 ...;Check for embedded TIU templates
"RTN","PXRMEXLB",141,0)
 ...D DTIU(DNAME,DTEXT)
"RTN","PXRMEXLB",142,0)
 ..;Reformat text to 50 characters
"RTN","PXRMEXLB",143,0)
 ..D DWP(1,50,DCNT,.DTXT)
"RTN","PXRMEXLB",144,0)
 ..;Search for Result Group/Element
"RTN","PXRMEXLB",145,0)
 ..S DSUB=$G(DARRAY(55)) I DSUB>0 D
"RTN","PXRMEXLB",146,0)
 ...S RESNAME=$P($P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3),"~",2)
"RTN","PXRMEXLB",147,0)
 ...S TEMPRESL(DNAME)=RESNAME
"RTN","PXRMEXLB",148,0)
 .;Search for finding item
"RTN","PXRMEXLB",149,0)
 .S DSUB=$G(DARRAY(15)) D:DSUB
"RTN","PXRMEXLB",150,0)
 ..S DFIND=$P($G(^PXD(811.8,IEN,100,DSUB,0)),";",3) Q:DFIND=""
"RTN","PXRMEXLB",151,0)
 ..;Finding name
"RTN","PXRMEXLB",152,0)
 ..S DFIND=$P(DFIND,"~",2) Q:DFIND=""
"RTN","PXRMEXLB",153,0)
 ..I $P(DFIND,".")="ICD9" S DFIND=$P(DFIND," ")
"RTN","PXRMEXLB",154,0)
 .;
"RTN","PXRMEXLB",155,0)
 .;Search for additional finding - start after WP text
"RTN","PXRMEXLB",156,0)
 .S DSUB=+$G(DARRAY(25)) D:DSUB
"RTN","PXRMEXLB",157,0)
 ..S DCNT=0,DFQUIT=0
"RTN","PXRMEXLB",158,0)
 ..F DLCT=DSUB+1+DLINES:1 D  Q:DFQUIT  Q:DLCT>DEND
"RTN","PXRMEXLB",159,0)
 ...S DTEXT=$G(^PXD(811.8,IEN,100,DLCT,0))
"RTN","PXRMEXLB",160,0)
 ...;Ignore line if this is not an additional finding
"RTN","PXRMEXLB",161,0)
 ...I $P(DTEXT,";")'=801.4118 S:$P(DTEXT,";")>801.4118 DFQUIT=1 Q
"RTN","PXRMEXLB",162,0)
 ...S DFNAM=$P(DTEXT,"~",2) Q:DFNAM=""
"RTN","PXRMEXLB",163,0)
 ...I $P(DFNAM,".")="ICD9" S DFNAM=$P(DFNAM," ")
"RTN","PXRMEXLB",164,0)
 ...S DCNT=DCNT+1,DFIAD(DCNT)=DFNAM
"RTN","PXRMEXLB",165,0)
 ;
"RTN","PXRMEXLB",166,0)
 I DTYP["result" D
"RTN","PXRMEXLB",167,0)
 .S DSUB=$G(DARRAY(.01)) Q:'DSUB
"RTN","PXRMEXLB",168,0)
 .S DDATA=^PXD(811.8,IEN,100,DSUB,0) Q:DDATA=""
"RTN","PXRMEXLB",169,0)
 .S DTXT=$P(DDATA,"~",2)
"RTN","PXRMEXLB",170,0)
 .S RESGRP(DNAME)=DSTRT_U_DEND_U_IND120_U_JND120
"RTN","PXRMEXLB",171,0)
 ;
"RTN","PXRMEXLB",172,0)
 I DTYP="prompt" D
"RTN","PXRMEXLB",173,0)
 .;search for prompt caption
"RTN","PXRMEXLB",174,0)
 .S DSUB=$G(DARRAY(24)) Q:'DSUB
"RTN","PXRMEXLB",175,0)
 .S DDATA=^PXD(811.8,IEN,100,DSUB,0) Q:DDATA=""
"RTN","PXRMEXLB",176,0)
 .S DTXT="Prompt caption: "_$P(DDATA,"~",2)
"RTN","PXRMEXLB",177,0)
 ;
"RTN","PXRMEXLB",178,0)
 I DTYP="group" D
"RTN","PXRMEXLB",179,0)
 .;search for group caption
"RTN","PXRMEXLB",180,0)
 .S DSUB=$G(DARRAY(5)) Q:'DSUB
"RTN","PXRMEXLB",181,0)
 .S DDATA=^PXD(811.8,IEN,100,DSUB,0) Q:DDATA=""
"RTN","PXRMEXLB",182,0)
 .S DTXT="Group caption: "_$P(DDATA,"~",2)
"RTN","PXRMEXLB",183,0)
 ;
"RTN","PXRMEXLB",184,0)
 ;Save dialog type
"RTN","PXRMEXLB",185,0)
 I DTYP["result" S DTYP=$$STRREP^PXRMUTIL(DTYP,"result ","rs.")
"RTN","PXRMEXLB",186,0)
 S ^TMP("PXRMEXTMP",$J,"DTYP",DNAME)=DTYP
"RTN","PXRMEXLB",187,0)
 ;Save dialog component text (first line only)
"RTN","PXRMEXLB",188,0)
 I ($G(DTXT)'=""),(DTXT'=DNAME) S ^TMP("PXRMEXTMP",$J,"DTXT",DNAME)=DTXT
"RTN","PXRMEXLB",189,0)
 ;
"RTN","PXRMEXLB",190,0)
 ;Save main finding
"RTN","PXRMEXLB",191,0)
 I DFIND]"" S ^TMP("PXRMEXTMP",$J,"DFND",DNAME,1)=$P(DFIND,".",2,99)
"RTN","PXRMEXLB",192,0)
 ;Save additional findings
"RTN","PXRMEXLB",193,0)
 S DSUB=0
"RTN","PXRMEXLB",194,0)
 F   S DSUB=$O(DFIAD(DSUB)) Q:'DSUB  S ^TMP("PXRMEXTMP",$J,"DFND",DNAME,DSUB+1)=$P(DFIAD(DSUB),".",2,99)
"RTN","PXRMEXLB",195,0)
 ;
"RTN","PXRMEXLB",196,0)
 ;Save additional WP text lines
"RTN","PXRMEXLB",197,0)
 S DSUB=0
"RTN","PXRMEXLB",198,0)
 F   S DSUB=$O(DTXT(DSUB)) Q:'DSUB  S ^TMP("PXRMEXTMP",$J,"DTXT",DNAME,DSUB)=DTXT(DSUB)
"RTN","PXRMEXLB",199,0)
 Q
"RTN","PXRMEXLB",200,0)
 ;
"RTN","PXRMEXLB",201,0)
 ;Extract any TIU templates
"RTN","PXRMEXLB",202,0)
 ;-------------------------
"RTN","PXRMEXLB",203,0)
DTIU(DNAME,TEXT) ;
"RTN","PXRMEXLB",204,0)
 N IC,TCNT,TLIST,TNAM
"RTN","PXRMEXLB",205,0)
 ;Templates are in format {FLD:fldname}
"RTN","PXRMEXLB",206,0)
 S TCNT=0 D TIUXTR^PXRMEXU1("{FLD:","}",TEXT,.TLIST,.TCNT) Q:'TCNT
"RTN","PXRMEXLB",207,0)
 ;
"RTN","PXRMEXLB",208,0)
 F IC=1:1:TCNT D
"RTN","PXRMEXLB",209,0)
 .S TNAM=$G(TLIST(TCNT)) Q:TNAM=""
"RTN","PXRMEXLB",210,0)
 .S ^TMP("PXRMEXTMP",$J,"DTIU",DNAME,TNAM)=""
"RTN","PXRMEXLB",211,0)
 Q
"RTN","PXRMEXLB",212,0)
 ;
"RTN","PXRMEXLB",213,0)
 ;Process WP fields
"RTN","PXRMEXLB",214,0)
 ;-----------------
"RTN","PXRMEXLB",215,0)
DWP(LM,RM,NIN,TEXT) ;
"RTN","PXRMEXLB",216,0)
 N NOUT,TEXTOUT
"RTN","PXRMEXLB",217,0)
 D FORMAT^PXRMTEXT(LM,RM,NIN,.TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMEXLB",218,0)
 K TEXT
"RTN","PXRMEXLB",219,0)
 M TEXT=TEXTOUT
"RTN","PXRMEXLB",220,0)
 Q
"RTN","PXRMEXLB",221,0)
 ;
"RTN","PXRMEXLB",222,0)
 ;-----------------
"RTN","PXRMEXLB",223,0)
FINDSTRT(IEN,IND120,END) ;
"RTN","PXRMEXLB",224,0)
 I END=1 Q 0
"RTN","PXRMEXLB",225,0)
 N START,TEMP,ISSEL
"RTN","PXRMEXLB",226,0)
 S START=0,TEMP=0
"RTN","PXRMEXLB",227,0)
 F  S END=$O(^PXD(811.8,IEN,120,IND120,END),-1) Q:END'>0!(START>0)  D
"RTN","PXRMEXLB",228,0)
 .S ISSEL=$P(^PXD(811.8,IEN,120,IND120,END,0),U,7)
"RTN","PXRMEXLB",229,0)
 .I ISSEL=0 S TEMP=END Q
"RTN","PXRMEXLB",230,0)
 .S START=TEMP
"RTN","PXRMEXLB",231,0)
 Q START
"RTN","PXRMEXLB",232,0)
 ;
"RTN","PXRMEXLC")
0^110^B13059952
"RTN","PXRMEXLC",1,0)
PXRMEXLC ; SLC/PKR/PJH - Routines to display repository entry components. ;08/01/2013
"RTN","PXRMEXLC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXLC",3,0)
 ;======================================================
"RTN","PXRMEXLC",4,0)
BLDLIST(FORCE) ;Build a list of all repository entries.
"RTN","PXRMEXLC",5,0)
 ;If FORCE is true then force rebuilding of the list.
"RTN","PXRMEXLC",6,0)
 I FORCE K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLC",7,0)
 I $D(^TMP("PXRMEXLR",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLC",8,0)
 E  D
"RTN","PXRMEXLC",9,0)
 . D REXL^PXRMLIST("PXRMEXLR")
"RTN","PXRMEXLC",10,0)
 . S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLC",11,0)
 Q
"RTN","PXRMEXLC",12,0)
 ;
"RTN","PXRMEXLC",13,0)
 ;======================================================
"RTN","PXRMEXLC",14,0)
CDISP(IEN) ;Format component list for display.
"RTN","PXRMEXLC",15,0)
 N CAT,CLOK,CMPNT,END,EXISTS,FILENUM,FMTSTR,FOKTT,IOKTI,IND,INDEX
"RTN","PXRMEXLC",16,0)
 N JND,JNDS,KND,MSG,NCMPNT,NDLINE,NITEMS,NLINE,NSEL,PT01
"RTN","PXRMEXLC",17,0)
 N START,TEMP,TEMP0,TYPE
"RTN","PXRMEXLC",18,0)
 K ^TMP("PXRMEXLC",$J),^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLC",19,0)
 S CLOK=1
"RTN","PXRMEXLC",20,0)
 I ('$D(^PXD(811.8,IEN,119)))!('$D(^PXD(811.8,IEN,120))) D CLIST^PXRMEXCO(IEN,.CLOK)
"RTN","PXRMEXLC",21,0)
 I 'CLOK Q
"RTN","PXRMEXLC",22,0)
 ;If this is being called by the Silent Installer VALMDDF will not
"RTN","PXRMEXLC",23,0)
 ;exist.
"RTN","PXRMEXLC",24,0)
 S FMTSTR=$S('$D(VALMDDF):"4R2^50L4^8C5^6C",1:$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLCC"))
"RTN","PXRMEXLC",25,0)
 S (NDLINE,NLINE,NSEL)=0
"RTN","PXRMEXLC",26,0)
 ;Load the description.
"RTN","PXRMEXLC",27,0)
 F IND=1:1:$P(^PXD(811.8,IEN,110,0),U,4) D
"RTN","PXRMEXLC",28,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",29,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=^PXD(811.8,IEN,110,IND,0)
"RTN","PXRMEXLC",30,0)
 S NLINE=NLINE+1
"RTN","PXRMEXLC",31,0)
 S ^TMP("PXRMEXLC",$J,NLINE,0)=" "
"RTN","PXRMEXLC",32,0)
 S NCMPNT=^PXD(811.8,IEN,119)
"RTN","PXRMEXLC",33,0)
 ;Load the text for display.
"RTN","PXRMEXLC",34,0)
 ;Build and load the item selection list for display.
"RTN","PXRMEXLC",35,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXLC",36,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",37,0)
 . S TEMP=^PXD(811.8,IEN,120,IND,0)
"RTN","PXRMEXLC",38,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=$P(TEMP,U,1)
"RTN","PXRMEXLC",39,0)
 . S FILENUM=$P(TEMP,U,2)
"RTN","PXRMEXLC",40,0)
 . S NITEMS=$P(TEMP,U,3)
"RTN","PXRMEXLC",41,0)
 .;See if items in this file are ok to transport.
"RTN","PXRMEXLC",42,0)
 . S FOKTT=$$FOKTT^PXRMEXFI(FILENUM)
"RTN","PXRMEXLC",43,0)
 . F JND=1:1:NITEMS D
"RTN","PXRMEXLC",44,0)
 .. S TEMP=^PXD(811.8,IEN,120,IND,1,JND,0)
"RTN","PXRMEXLC",45,0)
 ..;If items from this file can be installed make sure the individual
"RTN","PXRMEXLC",46,0)
 ..;item is installable.
"RTN","PXRMEXLC",47,0)
 .. S IOKTI=$S('FOKTT:0,1:$$IOKTI^PXRMEXFI(IEN,FILENUM,TEMP))
"RTN","PXRMEXLC",48,0)
 .. S PT01=$P(TEMP,U,1)
"RTN","PXRMEXLC",49,0)
 .. S EXISTS=$S(FILENUM=0:$$EXISTS^PXRMEXCF(PT01),1:$$EXISTS^PXRMEXIU(FILENUM,PT01,"W"))
"RTN","PXRMEXLC",50,0)
 ..;If this is a health factor see if it is a category.
"RTN","PXRMEXLC",51,0)
 .. S CAT=""
"RTN","PXRMEXLC",52,0)
 .. I (FILENUM=9999999.64) D
"RTN","PXRMEXLC",53,0)
 ... S TYPE=""
"RTN","PXRMEXLC",54,0)
 ... S START=$P(TEMP,U,2)
"RTN","PXRMEXLC",55,0)
 ... S END=$P(TEMP,U,3)
"RTN","PXRMEXLC",56,0)
 ... F KND=START:1:END D
"RTN","PXRMEXLC",57,0)
 .... S TEMP0=$P(^PXD(811.8,IEN,100,KND,0),";",3)
"RTN","PXRMEXLC",58,0)
 .... I $P(TEMP0,"~",1)=.1 S TYPE=$P(TEMP0,"~",2)
"RTN","PXRMEXLC",59,0)
 ... I TYPE="CATEGORY" S CAT="X"
"RTN","PXRMEXLC",60,0)
 ..;If entries in this file are ok to install add them to the
"RTN","PXRMEXLC",61,0)
 ..;selectable list. For dialog items only display those that are
"RTN","PXRMEXLC",62,0)
 ..;selectable.
"RTN","PXRMEXLC",63,0)
 .. I FILENUM=801.41,'IOKTI Q
"RTN","PXRMEXLC",64,0)
 .. I IOKTI D
"RTN","PXRMEXLC",65,0)
 ... S NSEL=NSEL+1,INDEX=NSEL
"RTN","PXRMEXLC",66,0)
 ... S ^TMP("PXRMEXLC",$J,"SEL",NSEL)=FILENUM_U_IND_U_JND_U_EXISTS
"RTN","PXRMEXLC",67,0)
 ... S ^TMP("PXRMEXLC",$J,"IDX",NSEL,NSEL)=""
"RTN","PXRMEXLC",68,0)
 .. E  S INDEX=""
"RTN","PXRMEXLC",69,0)
 .. D FMTDATA(FMTSTR,INDEX,PT01,CAT,EXISTS,.NLINE)
"RTN","PXRMEXLC",70,0)
 . S NLINE=NLINE+1
"RTN","PXRMEXLC",71,0)
 . S ^TMP("PXRMEXLC",$J,NLINE,0)=""
"RTN","PXRMEXLC",72,0)
 Q
"RTN","PXRMEXLC",73,0)
 ;
"RTN","PXRMEXLC",74,0)
 ;======================================================
"RTN","PXRMEXLC",75,0)
FMTDATA(FMTSTR,NSEL,PT01,CAT,EXISTS,NLINE) ;Format items for display.
"RTN","PXRMEXLC",76,0)
 N IND,NL,NSTI,OUTPUT,TEMP
"RTN","PXRMEXLC",77,0)
 S TEMP=NSEL_U_PT01_U_CAT_U_$S(EXISTS:"X",1:"")
"RTN","PXRMEXLC",78,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXRMEXLC",79,0)
 F IND=1:1:NL S NLINE=NLINE+1,^TMP("PXRMEXLC",$J,NLINE,0)=OUTPUT(IND)
"RTN","PXRMEXLC",80,0)
 Q
"RTN","PXRMEXLC",81,0)
 ;
"RTN","PXRMEXLC",82,0)
 ;======================================================
"RTN","PXRMEXLC",83,0)
INSCHR(NUM,CHR) ;Return a string of NUM characters (CHR).
"RTN","PXRMEXLC",84,0)
 N IND,TEMP
"RTN","PXRMEXLC",85,0)
 S TEMP=""
"RTN","PXRMEXLC",86,0)
 I NUM<1 Q TEMP
"RTN","PXRMEXLC",87,0)
 F IND=1:1:NUM S TEMP=TEMP_CHR
"RTN","PXRMEXLC",88,0)
 Q TEMP
"RTN","PXRMEXLC",89,0)
 ;
"RTN","PXRMEXLC",90,0)
 ;======================================================
"RTN","PXRMEXLC",91,0)
ORDER(STRING,ORDER) ;Rebuild string in ascending or descending order.
"RTN","PXRMEXLC",92,0)
 N ARRAY,ITEM,CNT
"RTN","PXRMEXLC",93,0)
 F CNT=1:1 S ITEM=$P(STRING,",",CNT) Q:'ITEM  S ARRAY(ITEM)=""
"RTN","PXRMEXLC",94,0)
 K STRING
"RTN","PXRMEXLC",95,0)
 F CNT=1:1 S ITEM=$O(ARRAY(ITEM),ORDER) Q:'ITEM  S $P(STRING,",",CNT)=ITEM
"RTN","PXRMEXLC",96,0)
 Q
"RTN","PXRMEXLC",97,0)
 ;
"RTN","PXRMEXLM")
0^61^B52621060
"RTN","PXRMEXLM",1,0)
PXRMEXLM ;SLC/PKR/PJH - Clinical Reminder Exchange List Manager routines. ;12/20/2013
"RTN","PXRMEXLM",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,17,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXLM",3,0)
 ;
"RTN","PXRMEXLM",4,0)
 ;=====================================================
"RTN","PXRMEXLM",5,0)
CRE ;Create a packed reminder and store it in the repository.
"RTN","PXRMEXLM",6,0)
 D FULL^VALM1
"RTN","PXRMEXLM",7,0)
 D CRE^PXRMEXPD
"RTN","PXRMEXLM",8,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",9,0)
 Q
"RTN","PXRMEXLM",10,0)
 ;
"RTN","PXRMEXLM",11,0)
 ;=====================================================
"RTN","PXRMEXLM",12,0)
DEFINQ ;Reminder definition inquiry.
"RTN","PXRMEXLM",13,0)
 N GBL,IEN,PXRMROOT,VALMCNT
"RTN","PXRMEXLM",14,0)
 S GBL="^TMP(""PXRMRINQ"",$J)"
"RTN","PXRMEXLM",15,0)
 S GBL=$NA(@GBL)
"RTN","PXRMEXLM",16,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMEXLM",17,0)
 S IEN=$$SELECT^PXRMINQ(PXRMROOT,"Select Reminder Definition: ","")
"RTN","PXRMEXLM",18,0)
 S IEN=$P(IEN,U,1)
"RTN","PXRMEXLM",19,0)
 I IEN=-1 S VALMBCK="R" Q
"RTN","PXRMEXLM",20,0)
 K ^TMP("PXRMRINQ",$J)
"RTN","PXRMEXLM",21,0)
 D REMVAR^PXRMINQ(GBL,IEN)
"RTN","PXRMEXLM",22,0)
 S VALMCNT=$O(^TMP("PXRMRINQ",$J,""),-1)
"RTN","PXRMEXLM",23,0)
 D EN^VALM("PXRM EX DEFINITION INQUIRY")
"RTN","PXRMEXLM",24,0)
 K ^TMP("PXRMRINQ",$J)
"RTN","PXRMEXLM",25,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",26,0)
 Q
"RTN","PXRMEXLM",27,0)
 ;
"RTN","PXRMEXLM",28,0)
 ;=====================================================
"RTN","PXRMEXLM",29,0)
ENTRY ;Entry code
"RTN","PXRMEXLM",30,0)
 D INITMPG^PXRMEXLM
"RTN","PXRMEXLM",31,0)
 D BLDLIST^PXRMEXLC(0)
"RTN","PXRMEXLM",32,0)
 D XQORM
"RTN","PXRMEXLM",33,0)
 Q
"RTN","PXRMEXLM",34,0)
 ;
"RTN","PXRMEXLM",35,0)
 ;=====================================================
"RTN","PXRMEXLM",36,0)
EXIT ;Exit code
"RTN","PXRMEXLM",37,0)
 D INITMPG^PXRMEXLM
"RTN","PXRMEXLM",38,0)
 D CLEAN^VALM10
"RTN","PXRMEXLM",39,0)
 D FULL^VALM1
"RTN","PXRMEXLM",40,0)
 S VALMBCK="Q"
"RTN","PXRMEXLM",41,0)
 K PXRMIGDS,PXRMINST
"RTN","PXRMEXLM",42,0)
 Q
"RTN","PXRMEXLM",43,0)
 ;
"RTN","PXRMEXLM",44,0)
 ;=====================================================
"RTN","PXRMEXLM",45,0)
HDR ; Header code
"RTN","PXRMEXLM",46,0)
 S VALMHDR(1)="Exchange File Entries."
"RTN","PXRMEXLM",47,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLM",48,0)
 Q
"RTN","PXRMEXLM",49,0)
 ;
"RTN","PXRMEXLM",50,0)
 ;=====================================================
"RTN","PXRMEXLM",51,0)
HELP ;Help code
"RTN","PXRMEXLM",52,0)
 ;The following variables have to be newed so that when we return
"RTN","PXRMEXLM",53,0)
 ;from the help display they will be defined.
"RTN","PXRMEXLM",54,0)
 N ORU,ORUPRMT,XQORM
"RTN","PXRMEXLM",55,0)
 D EN^VALM("PXRM EX MAIN HELP")
"RTN","PXRMEXLM",56,0)
 Q
"RTN","PXRMEXLM",57,0)
 ;
"RTN","PXRMEXLM",58,0)
 ;=====================================================
"RTN","PXRMEXLM",59,0)
INIT ;Init
"RTN","PXRMEXLM",60,0)
 S VALMCNT=0
"RTN","PXRMEXLM",61,0)
 Q
"RTN","PXRMEXLM",62,0)
 ;
"RTN","PXRMEXLM",63,0)
 ;=====================================================
"RTN","PXRMEXLM",64,0)
INITMPG ;Initialized all the ^TMP globals.
"RTN","PXRMEXLM",65,0)
 K ^TMP("PXRMEXDH",$J)
"RTN","PXRMEXLM",66,0)
 K ^TMP("PXRMEXDGH",$J)
"RTN","PXRMEXLM",67,0)
 K ^TMP("PXRMEXDL",$J)
"RTN","PXRMEXLM",68,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXLM",69,0)
 K ^TMP("PXRMEXFND",$J)
"RTN","PXRMEXLM",70,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXLM",71,0)
 K ^TMP("PXRMEXIAD",$J)
"RTN","PXRMEXLM",72,0)
 K ^TMP("PXRMEXID",$J)
"RTN","PXRMEXLM",73,0)
 K ^TMP("PXRMEXIH",$J)
"RTN","PXRMEXLM",74,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLM",75,0)
 K ^TMP("PXRMEXLD",$J)
"RTN","PXRMEXLM",76,0)
 K ^TMP("PXRMEXLHF",$J)
"RTN","PXRMEXLM",77,0)
 K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXLM",78,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLM",79,0)
 K ^TMP("PXRMEXMH",$J)
"RTN","PXRMEXLM",80,0)
 K ^TMP("PXRMEXMM",$J)
"RTN","PXRMEXLM",81,0)
 K ^TMP("PXRMEXRI",$J)
"RTN","PXRMEXLM",82,0)
 K ^TMP("PXRMEXTMP",$J)
"RTN","PXRMEXLM",83,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXLM",84,0)
 K ^TMP($J,"HS TYPE")
"RTN","PXRMEXLM",85,0)
 K ^TMP($J,"HS OBJECT")
"RTN","PXRMEXLM",86,0)
 K ^TMP($J,"TIU OBJECT")
"RTN","PXRMEXLM",87,0)
 K ^TMP($J,"ORDER DIALOG")
"RTN","PXRMEXLM",88,0)
 Q
"RTN","PXRMEXLM",89,0)
 ;
"RTN","PXRMEXLM",90,0)
 ;=====================================================
"RTN","PXRMEXLM",91,0)
LDHF ;Load a host file into the repository.
"RTN","PXRMEXLM",92,0)
 N IND,FILE,PATH,RBL,SUCCESS,TEMP
"RTN","PXRMEXLM",93,0)
 ;Select the host file to load.
"RTN","PXRMEXLM",94,0)
 D CLEAR^VALM1
"RTN","PXRMEXLM",95,0)
 S TEMP=$$GETEHF^PXRMEXHF("PRD")
"RTN","PXRMEXLM",96,0)
 I TEMP="" S VALMBCK="R" Q
"RTN","PXRMEXLM",97,0)
 S PATH=$P(TEMP,U,1)
"RTN","PXRMEXLM",98,0)
 S FILE=$P(TEMP,U,2)
"RTN","PXRMEXLM",99,0)
 D LHF^PXRMEXHF(.SUCCESS,PATH,FILE)
"RTN","PXRMEXLM",100,0)
 S RBL=SUCCESS
"RTN","PXRMEXLM",101,0)
 I SUCCESS D
"RTN","PXRMEXLM",102,0)
 . S VALMHDR(1)="Host file "_PATH_FILE_" successfully loaded."
"RTN","PXRMEXLM",103,0)
 E  D
"RTN","PXRMEXLM",104,0)
 . S VALMHDR(1)="There were problems loading host file "_PATH_FILE_"."
"RTN","PXRMEXLM",105,0)
 . S TEMP=""
"RTN","PXRMEXLM",106,0)
 . S IND=""
"RTN","PXRMEXLM",107,0)
 . F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLM",108,0)
 .. I SUCCESS(IND) S RBL=1 Q
"RTN","PXRMEXLM",109,0)
 .. I +$O(SUCCESS(IND))=0 S TEMP=TEMP_IND
"RTN","PXRMEXLM",110,0)
 .. E  S TEMP=TEMP_IND_", "
"RTN","PXRMEXLM",111,0)
 . S VALMHDR(2)="Entries with problems were "_TEMP_"."
"RTN","PXRMEXLM",112,0)
 ;Rebuild the list for display.
"RTN","PXRMEXLM",113,0)
 D BLDLIST^PXRMEXLC(RBL)
"RTN","PXRMEXLM",114,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",115,0)
 Q
"RTN","PXRMEXLM",116,0)
 ;
"RTN","PXRMEXLM",117,0)
 ;=====================================================
"RTN","PXRMEXLM",118,0)
LDMM ;Load a MailMan message into the repository.
"RTN","PXRMEXLM",119,0)
 N IND,RBL,TEMP,XMZ
"RTN","PXRMEXLM",120,0)
 ;Select the MailMan message to load.
"RTN","PXRMEXLM",121,0)
 D CLEAR^VALM1
"RTN","PXRMEXLM",122,0)
 S XMZ=$$GETMESSN^PXRMEXMM
"RTN","PXRMEXLM",123,0)
 I XMZ=-1 W !,"No packed reminder definitions selected/found!" H 2
"RTN","PXRMEXLM",124,0)
 I +XMZ'>0 S VALMBCK="R" Q
"RTN","PXRMEXLM",125,0)
 D LMM^PXRMEXMM(.SUCCESS,XMZ)
"RTN","PXRMEXLM",126,0)
 S RBL=SUCCESS
"RTN","PXRMEXLM",127,0)
 I SUCCESS D
"RTN","PXRMEXLM",128,0)
 . S VALMHDR(1)="MailMan message "_XMZ_" successfully loaded."
"RTN","PXRMEXLM",129,0)
 .;Rebuild the list for display.
"RTN","PXRMEXLM",130,0)
 . D BLDLIST^PXRMEXLC(1)
"RTN","PXRMEXLM",131,0)
 E  D
"RTN","PXRMEXLM",132,0)
 . S VALMHDR(1)="There were problems loading MailMan message "_XMZ_"."
"RTN","PXRMEXLM",133,0)
 . S TEMP=""
"RTN","PXRMEXLM",134,0)
 . S IND=""
"RTN","PXRMEXLM",135,0)
 . F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLM",136,0)
 .. I SUCCESS(IND) S RBL=1 Q
"RTN","PXRMEXLM",137,0)
 .. I +$O(SUCCESS(IND))=0 S TEMP=TEMP_IND
"RTN","PXRMEXLM",138,0)
 .. E  S TEMP=TEMP_IND_", "
"RTN","PXRMEXLM",139,0)
 . S VALMHDR(2)="Entries with problems were "_TEMP_"."
"RTN","PXRMEXLM",140,0)
 ;Rebuild the list for display.
"RTN","PXRMEXLM",141,0)
 D BLDLIST^PXRMEXLC(RBL)
"RTN","PXRMEXLM",142,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",143,0)
 Q
"RTN","PXRMEXLM",144,0)
 ;
"RTN","PXRMEXLM",145,0)
 ;=====================================================
"RTN","PXRMEXLM",146,0)
LDWEB ;Load a host file from a web site into the repository.
"RTN","PXRMEXLM",147,0)
 N SUCCESS,TEMP,URL
"RTN","PXRMEXLM",148,0)
 S SUCCESS=$$LWEB^PXRMEXWB(.URL)
"RTN","PXRMEXLM",149,0)
 I SUCCESS D
"RTN","PXRMEXLM",150,0)
 . S VALMHDR(1)=URL_" successfully loaded."
"RTN","PXRMEXLM",151,0)
 E  D
"RTN","PXRMEXLM",152,0)
 . S VALMHDR(1)="There were problems loading "_URL
"RTN","PXRMEXLM",153,0)
 . I URL="" S VALMHDR(1)="No URL specified."
"RTN","PXRMEXLM",154,0)
 ;Rebuild the list for display.
"RTN","PXRMEXLM",155,0)
 D BLDLIST^PXRMEXLC(SUCCESS)
"RTN","PXRMEXLM",156,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",157,0)
 Q
"RTN","PXRMEXLM",158,0)
 ;
"RTN","PXRMEXLM",159,0)
 ;=====================================================
"RTN","PXRMEXLM",160,0)
LRDEF ;List the name and print name of all reminder definitions.
"RTN","PXRMEXLM",161,0)
 N VALMCNT
"RTN","PXRMEXLM",162,0)
 I $D(^TMP("PXRMEXLD",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLD",$J,"VALMCNT")
"RTN","PXRMEXLM",163,0)
 E  D
"RTN","PXRMEXLM",164,0)
 . N ARO,DEFLIST
"RTN","PXRMEXLM",165,0)
 . S ARO=$$QUERYAO^PXRMLIST
"RTN","PXRMEXLM",166,0)
 . S ^TMP("PXRMEXLD",$J,"ARO")=ARO
"RTN","PXRMEXLM",167,0)
 . D RDEF^PXRMLIST(.DEFLIST,ARO)
"RTN","PXRMEXLM",168,0)
 . M ^TMP("PXRMEXLD",$J)=DEFLIST
"RTN","PXRMEXLM",169,0)
 . S VALMCNT=DEFLIST("VALMCNT")
"RTN","PXRMEXLM",170,0)
 I '$G(^TMP("PXRMEXLD",$J,"ARO")) D CHGCAP^VALM("INACTIVE","Inactive")
"RTN","PXRMEXLM",171,0)
 D EN^VALM("PXRM EX REMINDER LIST")
"RTN","PXRMEXLM",172,0)
 Q
"RTN","PXRMEXLM",173,0)
 ;
"RTN","PXRMEXLM",174,0)
 ;=====================================================
"RTN","PXRMEXLM",175,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEXLM",176,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLM",177,0)
 ;Reset after page up/down etc
"RTN","PXRMEXLM",178,0)
 D XQORM
"RTN","PXRMEXLM",179,0)
 Q
"RTN","PXRMEXLM",180,0)
 ;
"RTN","PXRMEXLM",181,0)
 ;=====================================================
"RTN","PXRMEXLM",182,0)
START ;Main entry point for PXRM EXCHANGE
"RTN","PXRMEXLM",183,0)
 N PXRMDONE,PXRMNMCH
"RTN","PXRMEXLM",184,0)
 ;PXRMDONE is set to true if the user enters an action of Quit.
"RTN","PXRMEXLM",185,0)
 S PXRMDONE=0
"RTN","PXRMEXLM",186,0)
 ;PXRMNMCH is used to store name change information. If a finding
"RTN","PXRMEXLM",187,0)
 ;is copied to a new name or is replaced by another finding the
"RTN","PXRMEXLM",188,0)
 ;information is stored here. It is used when installing definitions
"RTN","PXRMEXLM",189,0)
 ;or dialogs so they use the new or replaced finding.
"RTN","PXRMEXLM",190,0)
 N VALMBCK,VALMSG,X,XMZ
"RTN","PXRMEXLM",191,0)
 S X="IORESET"
"RTN","PXRMEXLM",192,0)
 D ENDR^%ZISS
"RTN","PXRMEXLM",193,0)
 D EN^VALM("PXRM EX REMINDER EXCHANGE")
"RTN","PXRMEXLM",194,0)
 W IORESET
"RTN","PXRMEXLM",195,0)
 D KILL^%ZISS
"RTN","PXRMEXLM",196,0)
 Q
"RTN","PXRMEXLM",197,0)
 ;
"RTN","PXRMEXLM",198,0)
 ;=====================================================
"RTN","PXRMEXLM",199,0)
XQORM ;Set the range for selection.
"RTN","PXRMEXLM",200,0)
 N NEXCHE
"RTN","PXRMEXLM",201,0)
 S NEXCHE=^TMP("PXRMEXLR",$J,"NEXCHE")
"RTN","PXRMEXLM",202,0)
 S XQORM("#")=$O(^ORD(101,"B","PXRM EXCH SELECT ENTRY",0))_U_"1:"_NEXCHE
"RTN","PXRMEXLM",203,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMEXLM",204,0)
 Q
"RTN","PXRMEXLM",205,0)
 ;
"RTN","PXRMEXLM",206,0)
 ;=====================================================
"RTN","PXRMEXLM",207,0)
XSEL ;PXRM EXCH SELECT COMPONENT validation
"RTN","PXRMEXLM",208,0)
 N SEL,PXRMRIEN
"RTN","PXRMEXLM",209,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMEXLM",210,0)
 ;Remove trailing ,
"RTN","PXRMEXLM",211,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMEXLM",212,0)
 ;Invalid selection
"RTN","PXRMEXLM",213,0)
 I SEL["," D  Q
"RTN","PXRMEXLM",214,0)
 .W $C(7),!,"Only one item number allowed." H 2
"RTN","PXRMEXLM",215,0)
 .S VALMBCK="R"
"RTN","PXRMEXLM",216,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMEXLM",217,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMEXLM",218,0)
 .S VALMBCK="R"
"RTN","PXRMEXLM",219,0)
 ;
"RTN","PXRMEXLM",220,0)
 ;Get the repository ien.
"RTN","PXRMEXLM",221,0)
 S PXRMRIEN=^TMP("PXRMEXLR",$J,"SEL",SEL)
"RTN","PXRMEXLM",222,0)
 ;
"RTN","PXRMEXLM",223,0)
 ;Full screen mode
"RTN","PXRMEXLM",224,0)
 D FULL^VALM1
"RTN","PXRMEXLM",225,0)
 ;
"RTN","PXRMEXLM",226,0)
 ;Option to Install, Delete or Install History
"RTN","PXRMEXLM",227,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXRMEXLM",228,0)
 S DIR(0)="SBM"_U_"IFE:Install Exchange File Entry;"
"RTN","PXRMEXLM",229,0)
 S DIR(0)=DIR(0)_"DFE:Delete Exchange File Entry;"
"RTN","PXRMEXLM",230,0)
 S DIR(0)=DIR(0)_"IH:Installation History;"
"RTN","PXRMEXLM",231,0)
 S DIR("A")="Select Action: "
"RTN","PXRMEXLM",232,0)
 S DIR("B")="IFE"
"RTN","PXRMEXLM",233,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMEXLM",234,0)
 S DIR("??")=U_"D HLP^PXRMEXIX(3)"
"RTN","PXRMEXLM",235,0)
 D ^DIR
"RTN","PXRMEXLM",236,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXRMEXLM",237,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXRMEXLM",238,0)
 S OPTION=Y
"RTN","PXRMEXLM",239,0)
 ;
"RTN","PXRMEXLM",240,0)
 ;Install
"RTN","PXRMEXLM",241,0)
 I OPTION="IFE" D
"RTN","PXRMEXLM",242,0)
 .D EN^VALM("PXRM EX LIST COMPONENTS")
"RTN","PXRMEXLM",243,0)
 .K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLM",244,0)
 ;
"RTN","PXRMEXLM",245,0)
 I OPTION="DFE" D
"RTN","PXRMEXLM",246,0)
 .N COUNT,DELLIST,IEN,IND,RELIST,VALMY
"RTN","PXRMEXLM",247,0)
 .S DELLIST(PXRMRIEN)=""
"RTN","PXRMEXLM",248,0)
 .D DELETE^PXRMEXU1(.DELLIST)
"RTN","PXRMEXLM",249,0)
 .;Rebuild the list for List Manager to display.
"RTN","PXRMEXLM",250,0)
 .K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLM",251,0)
 .D REXL^PXRMLIST("PXRMEXLR")
"RTN","PXRMEXLM",252,0)
 .S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMEXLM",253,0)
 .S VALMHDR(1)="Deleted 1 exchange file entry",VALMHDR(2)=" ",VALMBCK="R"
"RTN","PXRMEXLM",254,0)
 ;
"RTN","PXRMEXLM",255,0)
 I OPTION="IH" D START^PXRMEXIH
"RTN","PXRMEXLM",256,0)
 ;
"RTN","PXRMEXLM",257,0)
 S VALMBCK="R"
"RTN","PXRMEXLM",258,0)
 Q
"RTN","PXRMEXLM",259,0)
 ;
"RTN","PXRMEXLR")
0^62^B9879769
"RTN","PXRMEXLR",1,0)
PXRMEXLR ; SLC/PKR/PJH - List Manager routines for Exchange file actions. ;01/24/2013
"RTN","PXRMEXLR",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,17,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXLR",3,0)
 ;==================================================
"RTN","PXRMEXLR",4,0)
CHF ;Create a host file containing repository entries.
"RTN","PXRMEXLR",5,0)
 N IND,FILE,LIST,LENH2,NL,PATH,SUCCESS,TEMP
"RTN","PXRMEXLR",6,0)
 ;Get the list to store.
"RTN","PXRMEXLR",7,0)
 S LIST=$$GETLIST()
"RTN","PXRMEXLR",8,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",9,0)
 I LIST="^" S VALMBCK="R" Q
"RTN","PXRMEXLR",10,0)
 ;Get the host file to use.
"RTN","PXRMEXLR",11,0)
 D CLEAR^VALM1
"RTN","PXRMEXLR",12,0)
 S TEMP=$$GETHFN^PXRMEXHF("PRD")
"RTN","PXRMEXLR",13,0)
 I TEMP=0 S VALMBCK="R" Q
"RTN","PXRMEXLR",14,0)
 S PATH=$P(TEMP,U,1)
"RTN","PXRMEXLR",15,0)
 S FILE=$P(TEMP,U,2)
"RTN","PXRMEXLR",16,0)
 D CHF^PXRMEXHF(.SUCCESS,LIST,PATH,FILE)
"RTN","PXRMEXLR",17,0)
 S VALMHDR(1)="Successfully stored entries:"
"RTN","PXRMEXLR",18,0)
 S VALMHDR(2)="Failed to store entries:"
"RTN","PXRMEXLR",19,0)
 S LENH2=$L(VALMHDR(2))
"RTN","PXRMEXLR",20,0)
 S IND="",NL=0
"RTN","PXRMEXLR",21,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXLR",22,0)
 . S NL=NL+1
"RTN","PXRMEXLR",23,0)
 . S TEMP=$S(NL=1:" ",1:", ")
"RTN","PXRMEXLR",24,0)
 . I SUCCESS(IND) S VALMHDR(1)=VALMHDR(1)_TEMP_IND
"RTN","PXRMEXLR",25,0)
 . E  S VALMHDR(2)=VALMHDR(2)_TEMP_IND
"RTN","PXRMEXLR",26,0)
 I $L(VALMHDR(2))=LENH2 K VALMHDR(2)
"RTN","PXRMEXLR",27,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",28,0)
 Q
"RTN","PXRMEXLR",29,0)
 ;
"RTN","PXRMEXLR",30,0)
 ;==================================================
"RTN","PXRMEXLR",31,0)
CMM ;Create a MailMan message containing packed reminders.
"RTN","PXRMEXLR",32,0)
 N LEN,LIST,SUCCESS,TEMP
"RTN","PXRMEXLR",33,0)
 ;Get the list to store.
"RTN","PXRMEXLR",34,0)
 S LIST=$$GETLIST()
"RTN","PXRMEXLR",35,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",36,0)
 I LIST="^" S VALMBCK="R" Q
"RTN","PXRMEXLR",37,0)
 ;Get a new message number to store the entries in.
"RTN","PXRMEXLR",38,0)
 D CMM^PXRMEXMM(.SUCCESS,LIST)
"RTN","PXRMEXLR",39,0)
 S LEN=$L(LIST)
"RTN","PXRMEXLR",40,0)
 S TEMP=$E(LIST,1,(LEN-1))
"RTN","PXRMEXLR",41,0)
 I $D(SUCCESS("XMZ")) S VALMHDR(1)="Successfully stored entries "_TEMP_" in message "_SUCCESS("XMZ")_"."
"RTN","PXRMEXLR",42,0)
 E  S VALMHDR(1)="Failed to store entries"_TEMP
"RTN","PXRMEXLR",43,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",44,0)
 Q
"RTN","PXRMEXLR",45,0)
 ;
"RTN","PXRMEXLR",46,0)
 ;==================================================
"RTN","PXRMEXLR",47,0)
DELETE ;Get a list of repository entries and delete them.
"RTN","PXRMEXLR",48,0)
 N IND,LIST,NUM
"RTN","PXRMEXLR",49,0)
 ;Get the list to delete.
"RTN","PXRMEXLR",50,0)
 S LIST=$$GETLIST()
"RTN","PXRMEXLR",51,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",52,0)
 I LIST="^" S VALMBCK="R" Q
"RTN","PXRMEXLR",53,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMEXLR",54,0)
 D DELETE^PXRMEXU1(LIST)
"RTN","PXRMEXLR",55,0)
 ;Rebuild the list for List Manager to display.
"RTN","PXRMEXLR",56,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLR",57,0)
 D REXL^PXRMLIST("PXRMEXLR")
"RTN","PXRMEXLR",58,0)
 ;
"RTN","PXRMEXLR",59,0)
 S VALMHDR(1)="Deleted "_NUM_" Exchange File"
"RTN","PXRMEXLR",60,0)
 I NUM>1 S VALMHDR(1)=VALMHDR(1)_" entries."
"RTN","PXRMEXLR",61,0)
 I NUM=1 S VALMHDR(1)=VALMHDR(1)_" entry."
"RTN","PXRMEXLR",62,0)
 S VALMHDR(2)=" "
"RTN","PXRMEXLR",63,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",64,0)
 Q
"RTN","PXRMEXLR",65,0)
 ;
"RTN","PXRMEXLR",66,0)
 ;==================================================
"RTN","PXRMEXLR",67,0)
EXIT ; Exit code
"RTN","PXRMEXLR",68,0)
 D CLEAN^VALM10
"RTN","PXRMEXLR",69,0)
 D FULL^VALM1
"RTN","PXRMEXLR",70,0)
 S VALMBCK="R"
"RTN","PXRMEXLR",71,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXLR",72,0)
 Q
"RTN","PXRMEXLR",73,0)
 ;
"RTN","PXRMEXLR",74,0)
 ;==================================================
"RTN","PXRMEXLR",75,0)
GETLIST() ;Get a list of entries.
"RTN","PXRMEXLR",76,0)
 N DIR,NEXCHE,X,Y
"RTN","PXRMEXLR",77,0)
 S NEXCHE=+$G(^TMP("PXRMEXLR",$J,"NEXCHE"))
"RTN","PXRMEXLR",78,0)
 I NEXCHE=0 Q 0
"RTN","PXRMEXLR",79,0)
 S DIR(0)="L^1:NEXCHE"
"RTN","PXRMEXLR",80,0)
 S DIR(0)="L^1:"_NEXCHE
"RTN","PXRMEXLR",81,0)
 D ^DIR
"RTN","PXRMEXLR",82,0)
 Q Y
"RTN","PXRMEXLR",83,0)
 ;
"RTN","PXRMEXLR",84,0)
 ;==================================================
"RTN","PXRMEXLR",85,0)
INSTALL ;Get a list of repository entries and install them.
"RTN","PXRMEXLR",86,0)
 N IND,LIST,LNUM,PXRMRIEN
"RTN","PXRMEXLR",87,0)
 ;Get the list to install.
"RTN","PXRMEXLR",88,0)
 S LIST=$$GETLIST()
"RTN","PXRMEXLR",89,0)
 ;If there is no list quit.
"RTN","PXRMEXLR",90,0)
 I LIST="^" S VALMBCK="R" Q
"RTN","PXRMEXLR",91,0)
 ;PXRMDONE is newed in PXRMEXLM
"RTN","PXRMEXLR",92,0)
 S PXRMDONE=0
"RTN","PXRMEXLR",93,0)
 F IND=1:1:$L(LIST,",")-1 Q:PXRMDONE  D
"RTN","PXRMEXLR",94,0)
 . S LNUM=$P(LIST,",",IND)
"RTN","PXRMEXLR",95,0)
 .;Get the repository ien.
"RTN","PXRMEXLR",96,0)
 . S PXRMRIEN=$$RIEN^PXRMEXU1(LNUM)
"RTN","PXRMEXLR",97,0)
 .;The list template calls INSTALL^PXRMEXLI
"RTN","PXRMEXLR",98,0)
 . D EN^VALM("PXRM EX LIST COMPONENTS")
"RTN","PXRMEXLR",99,0)
 . K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXLR",100,0)
 Q
"RTN","PXRMEXLR",101,0)
 ;
"RTN","PXRMEXLR",102,0)
 ;==================================================
"RTN","PXRMEXLR",103,0)
HDR ; Header code
"RTN","PXRMEXLR",104,0)
 S VALMHDR(1)=""
"RTN","PXRMEXLR",105,0)
 D CHGCAP^VALM("RNAME","Reminder Name")
"RTN","PXRMEXLR",106,0)
 D CHGCAP^VALM("PNAME","Date Loaded")
"RTN","PXRMEXLR",107,0)
 Q
"RTN","PXRMEXLR",108,0)
 ;
"RTN","PXRMEXLR",109,0)
 ;==================================================
"RTN","PXRMEXLR",110,0)
HELP ; Help code
"RTN","PXRMEXLR",111,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMEXLR",112,0)
 Q
"RTN","PXRMEXLR",113,0)
 ;
"RTN","PXRMEXLR",114,0)
 ;==================================================
"RTN","PXRMEXLR",115,0)
PEXIT ;PXRM EXCH INSTALLATION MENU protocol exit code
"RTN","PXRMEXLR",116,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEXLR",117,0)
 Q
"RTN","PXRMEXLR",118,0)
 ;
"RTN","PXRMEXMH")
0^117^B10764722
"RTN","PXRMEXMH",1,0)
PXRMEXMH ; SLC/PKR - Clinical Reminder Exchange main help. ;12/20/2013
"RTN","PXRMEXMH",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMEXMH",3,0)
 ;======================================================================
"RTN","PXRMEXMH",4,0)
LOAD ;If necessary load the help text into the ^TMP array.
"RTN","PXRMEXMH",5,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMEXMH",6,0)
 I $D(^TMP("PXRMEXMH",$J,"VALMCNT")) D  Q
"RTN","PXRMEXMH",7,0)
 . S VALMCNT=^TMP("PXRMEXMH",$J,"VALMCNT")
"RTN","PXRMEXMH",8,0)
 ;
"RTN","PXRMEXMH",9,0)
 N DONE,IND,TEXT
"RTN","PXRMEXMH",10,0)
 S DONE=0
"RTN","PXRMEXMH",11,0)
 S VALMCNT=0
"RTN","PXRMEXMH",12,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMEXMH",13,0)
 . S TEXT=$P($T(TEXT+IND),";",3)
"RTN","PXRMEXMH",14,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMEXMH",15,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXMH",16,0)
 . S ^TMP("PXRMEXMH",$J,VALMCNT,0)=TEXT
"RTN","PXRMEXMH",17,0)
 S ^TMP("PXRMEXMH",$J,"VALMCNT")=VALMCNT
"RTN","PXRMEXMH",18,0)
 Q
"RTN","PXRMEXMH",19,0)
 ;
"RTN","PXRMEXMH",20,0)
 ;======================================================================
"RTN","PXRMEXMH",21,0)
TEXT ;Help text
"RTN","PXRMEXMH",22,0)
 ;;The following actions are available:
"RTN","PXRMEXMH",23,0)
 ;;
"RTN","PXRMEXMH",24,0)
 ;;CFE Create Exchange File Entry
"RTN","PXRMEXMH",25,0)
 ;;    Create an entry in the Exchange File; this is also called
"RTN","PXRMEXMH",26,0)
 ;;    a packed reminder definition. When you select this action
"RTN","PXRMEXMH",27,0)
 ;;    you will be prompted for a reminder definition. All the
"RTN","PXRMEXMH",28,0)
 ;;    components used in the definition will be "packed" up and
"RTN","PXRMEXMH",29,0)
 ;;    included in the packed definition.
"RTN","PXRMEXMH",30,0)
 ;;
"RTN","PXRMEXMH",31,0)
 ;;CHF Create Host File
"RTN","PXRMEXMH",32,0)
 ;;    Create a host file containing selected entries from the
"RTN","PXRMEXMH",33,0)
 ;;    Exchange File.
"RTN","PXRMEXMH",34,0)
 ;;
"RTN","PXRMEXMH",35,0)
 ;;CMM Create MailMan Message
"RTN","PXRMEXMH",36,0)
 ;;    Create a MailMan message containing selected entries from
"RTN","PXRMEXMH",37,0)
 ;;    the Exchange File.
"RTN","PXRMEXMH",38,0)
 ;;
"RTN","PXRMEXMH",39,0)
 ;;DFE Delete Exchange File Entry
"RTN","PXRMEXMH",40,0)
 ;;    Delete selected entries from the Exchange File.
"RTN","PXRMEXMH",41,0)
 ;;
"RTN","PXRMEXMH",42,0)
 ;;IFE Install Exchange File Entry
"RTN","PXRMEXMH",43,0)
 ;;    Install selected Exchange File entries. Once an entry has
"RTN","PXRMEXMH",44,0)
 ;;    been selected you will have the option of installing all
"RTN","PXRMEXMH",45,0)
 ;;    the components in the packed reminder or selected
"RTN","PXRMEXMH",46,0)
 ;;    components.
"RTN","PXRMEXMH",47,0)
 ;;
"RTN","PXRMEXMH",48,0)
 ;;IH  Installation History
"RTN","PXRMEXMH",49,0)
 ;;    Show the installation history of selected Exchange File
"RTN","PXRMEXMH",50,0)
 ;;    entries.
"RTN","PXRMEXMH",51,0)
 ;;
"RTN","PXRMEXMH",52,0)
 ;;LHF Load Host File
"RTN","PXRMEXMH",53,0)
 ;;    Load a host file containing packed reminder definitions
"RTN","PXRMEXMH",54,0)
 ;;    into the Exchange File.
"RTN","PXRMEXMH",55,0)
 ;;
"RTN","PXRMEXMH",56,0)
 ;;LMM Load MailMan Message
"RTN","PXRMEXMH",57,0)
 ;;    Load a MailMan message containing packed reminders
"RTN","PXRMEXMH",58,0)
 ;;    into the Exchange File.
"RTN","PXRMEXMH",59,0)
 ;;
"RTN","PXRMEXMH",60,0)
 ;;LWH Load Web Host File
"RTN","PXRMEXMH",61,0)
 ;;    Load a host file containing packed reminder definitions
"RTN","PXRMEXMH",62,0)
 ;;    from a web site into the Exchange File.
"RTN","PXRMEXMH",63,0)
 ;;
"RTN","PXRMEXMH",64,0)
 ;;LR  List Reminder Definitions
"RTN","PXRMEXMH",65,0)
 ;;    Display a list of all the reminders that are defined in the
"RTN","PXRMEXMH",66,0)
 ;;    current UCI.
"RTN","PXRMEXMH",67,0)
 ;;
"RTN","PXRMEXMH",68,0)
 ;;RI  Reminder Definition Inquiry
"RTN","PXRMEXMH",69,0)
 ;;    Display the reminder definition for the selected reminder.
"RTN","PXRMEXMH",70,0)
 ;;
"RTN","PXRMEXMH",71,0)
 ;;QU  Quit
"RTN","PXRMEXMH",72,0)
 ;;
"RTN","PXRMEXMH",73,0)
 ;;**End Text**
"RTN","PXRMEXMH",74,0)
 Q
"RTN","PXRMEXMH",75,0)
 ;
"RTN","PXRMEXMM")
0^60^B32677866
"RTN","PXRMEXMM",1,0)
PXRMEXMM ; SLC/PKR - Routines to select and deal with MailMan messages ;01/22/2013
"RTN","PXRMEXMM",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXMM",3,0)
 ;=============================================================
"RTN","PXRMEXMM",4,0)
CMM(SUCCESS,LIST) ;Create a MailMan message containing the repository
"RTN","PXRMEXMM",5,0)
 ;entries in LIST.
"RTN","PXRMEXMM",6,0)
 ;Get a new MailMan message number.
"RTN","PXRMEXMM",7,0)
 N IC,IND,LC,LEN,LNUM,RIEN,TEMP,TLC,XMSUB
"RTN","PXRMEXMM",8,0)
 S TEMP=$$GETSUB
"RTN","PXRMEXMM",9,0)
 I (TEMP["^")!(TEMP="") Q
"RTN","PXRMEXMM",10,0)
 S XMSUB="CREX: "_TEMP
"RTN","PXRMEXMM",11,0)
 S TEMP=$$SUBCHK^XMGAPI0(XMSUB,0)
"RTN","PXRMEXMM",12,0)
 I $P(TEMP,U,1)'="" S XMSUB=$E(XMSUB,1,65)
"RTN","PXRMEXMM",13,0)
RETRY ;
"RTN","PXRMEXMM",14,0)
 D XMZ^XMA2
"RTN","PXRMEXMM",15,0)
 I XMZ<1 G RETRY
"RTN","PXRMEXMM",16,0)
 S SUCCESS("XMZ")=XMZ
"RTN","PXRMEXMM",17,0)
 S SUCCESS("SUB")=XMSUB
"RTN","PXRMEXMM",18,0)
 ;
"RTN","PXRMEXMM",19,0)
 S (IC,TLC)=0
"RTN","PXRMEXMM",20,0)
 S LEN=$L(LIST,",")-1
"RTN","PXRMEXMM",21,0)
 F IND=1:1:LEN D
"RTN","PXRMEXMM",22,0)
 . S LNUM=$P(LIST,",",IND)
"RTN","PXRMEXMM",23,0)
 . S RIEN=$$RIEN^PXRMEXU1(LNUM)
"RTN","PXRMEXMM",24,0)
 . S LC=$O(^PXD(811.8,RIEN,100,""),-1)
"RTN","PXRMEXMM",25,0)
 . S TLC=TLC+LC
"RTN","PXRMEXMM",26,0)
 . F IND=1:1:LC D
"RTN","PXRMEXMM",27,0)
 .. S IC=IC+1
"RTN","PXRMEXMM",28,0)
 .. S ^XMB(3.9,XMZ,2,IC,0)=^PXD(811.8,RIEN,100,IND,0)
"RTN","PXRMEXMM",29,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_TLC_"^"_TLC_"^"_DT
"RTN","PXRMEXMM",30,0)
 ;
"RTN","PXRMEXMM",31,0)
 ;Make the message information only.
"RTN","PXRMEXMM",32,0)
 S $P(^XMB(3.9,XMZ,0),U,12)="Y"
"RTN","PXRMEXMM",33,0)
 ;
"RTN","PXRMEXMM",34,0)
 ;Get a list of who to send it to and send it.
"RTN","PXRMEXMM",35,0)
 D ENT2^XMD
"RTN","PXRMEXMM",36,0)
 Q
"RTN","PXRMEXMM",37,0)
 ;
"RTN","PXRMEXMM",38,0)
 ;=============================================================
"RTN","PXRMEXMM",39,0)
GETMESSN() ;Get the message number.
"RTN","PXRMEXMM",40,0)
 N BSKT,DIC,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,ZN
"RTN","PXRMEXMM",41,0)
 S DIC("A")="Select a MailMan message: "
"RTN","PXRMEXMM",42,0)
 S DIC=3.9
"RTN","PXRMEXMM",43,0)
 S DIC(0)="EQV"
"RTN","PXRMEXMM",44,0)
 ;Look for messages that start with "C" for either CREX or Copy of.
"RTN","PXRMEXMM",45,0)
 S X="CREX:"
"RTN","PXRMEXMM",46,0)
 ;DBIA #2736 for XMXUTIL2
"RTN","PXRMEXMM",47,0)
 S DIC("S")="S BSKT=$$BSKT^XMXUTIL2(DUZ,+Y) I BSKT>0,BSKT'=.5"
"RTN","PXRMEXMM",48,0)
 S DIC("W")="S ZN=$$ZNODE^XMXUTIL2(+Y) W !,""         "",$$FROM^XMXUTIL2(ZN),"" "",$$DATE^XMXUTIL2(ZN),!"
"RTN","PXRMEXMM",49,0)
 W !
"RTN","PXRMEXMM",50,0)
 D ^DIC K DIC
"RTN","PXRMEXMM",51,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMEXMM",52,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMEXMM",53,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMEXMM",54,0)
 I +Y'=-1 Q $P(Y,U,1)
"RTN","PXRMEXMM",55,0)
 ;
"RTN","PXRMEXMM",56,0)
 S DIC("A")="Select a MailMan message: "
"RTN","PXRMEXMM",57,0)
 S DIC=3.9
"RTN","PXRMEXMM",58,0)
 S DIC(0)="EQV"
"RTN","PXRMEXMM",59,0)
 S X="Copy of: CREX:"
"RTN","PXRMEXMM",60,0)
 ;DBIA #2736 for XMXUTIL2
"RTN","PXRMEXMM",61,0)
 S DIC("S")="S BSKT=$$BSKT^XMXUTIL2(DUZ,+Y) I BSKT>0,BSKT'=.5"
"RTN","PXRMEXMM",62,0)
 S DIC("W")="S ZN=$$ZNODE^XMXUTIL2(+Y) W !,""         "",$$FROM^XMXUTIL2(ZN),"" "",$$DATE^XMXUTIL2(ZN),!"
"RTN","PXRMEXMM",63,0)
 W !
"RTN","PXRMEXMM",64,0)
 D ^DIC K DIC
"RTN","PXRMEXMM",65,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMEXMM",66,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMEXMM",67,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMEXMM",68,0)
 Q $P(Y,U,1)
"RTN","PXRMEXMM",69,0)
 ;
"RTN","PXRMEXMM",70,0)
 ;=============================================================
"RTN","PXRMEXMM",71,0)
GETSUB() ;Prompt the user for a subject.
"RTN","PXRMEXMM",72,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMEXMM",73,0)
 S DIR(0)="FAU"_U_"1:59"
"RTN","PXRMEXMM",74,0)
 S DIR("A")="Enter a subject: "
"RTN","PXRMEXMM",75,0)
 D ^DIR
"RTN","PXRMEXMM",76,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMEXMM",77,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMEXMM",78,0)
 Q Y
"RTN","PXRMEXMM",79,0)
 ;
"RTN","PXRMEXMM",80,0)
 ;=============================================================
"RTN","PXRMEXMM",81,0)
LMM(SUCCESS,XMZ) ;Load repository entries from a MailMan message.
"RTN","PXRMEXMM",82,0)
 N CSUM,DATEP,EXTYPE,FDA,FDAIEN,IENROOT,IND,LINE,MSG,NENTRY,NLINES,RETMP
"RTN","PXRMEXMM",83,0)
 N RNAME,SITE,SOURCE,SSOURCE,TEMP,US,USER,VRSN,XMER,XMPOS,XMRG,XMVAR
"RTN","PXRMEXMM",84,0)
 ;Get the message information
"RTN","PXRMEXMM",85,0)
 ;DBIA #1144
"RTN","PXRMEXMM",86,0)
 S TEMP=$$HDR^XMGAPI2(XMZ,.XMVAR,0)
"RTN","PXRMEXMM",87,0)
 I TEMP'=0 D  Q
"RTN","PXRMEXMM",88,0)
 . W !,"This MailMan message has a corrupted header."
"RTN","PXRMEXMM",89,0)
 . S SUCCESS=0
"RTN","PXRMEXMM",90,0)
 . H 2
"RTN","PXRMEXMM",91,0)
 ;Load the message
"RTN","PXRMEXMM",92,0)
 W !,"Loading MailMan message number ",XMZ
"RTN","PXRMEXMM",93,0)
 K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",94,0)
 S RETMP="^TMP(""PXRMEXLMM"",$J)"
"RTN","PXRMEXMM",95,0)
 S (NENTRY,NLINES,SSOURCE)=0
"RTN","PXRMEXMM",96,0)
 S XMPOS=$$STARTPOS(XMZ)
"RTN","PXRMEXMM",97,0)
 F  D REC^XMS3 Q:+$G(XMER)=-1  D
"RTN","PXRMEXMM",98,0)
 . S NLINES=NLINES+1
"RTN","PXRMEXMM",99,0)
 . S ^TMP("PXRMEXLMM",$J,NLINES,0)=XMRG
"RTN","PXRMEXMM",100,0)
 . I XMRG["<PACKAGE_VERSION>" S VRSN=$$GETTAGV^PXRMEXU3(XMRG,"<PACKAGE_VERSION>")
"RTN","PXRMEXMM",101,0)
 . I XMRG["<EXCHANGE_TYPE>" S EXTYPE=$$GETTAGV^PXRMEXU3(XMRG,"<EXCHANGE_TYPE>",1)
"RTN","PXRMEXMM",102,0)
 . I XMRG="<SOURCE>" S SSOURCE=1
"RTN","PXRMEXMM",103,0)
 . I SSOURCE D
"RTN","PXRMEXMM",104,0)
 .. I XMRG["<NAME>" S RNAME=$$GETTAGV^PXRMEXU3(XMRG,"<NAME>",1)
"RTN","PXRMEXMM",105,0)
 .. I XMRG["<USER>" S USER=$$GETTAGV^PXRMEXU3(XMRG,"<USER>",1)
"RTN","PXRMEXMM",106,0)
 .. I XMRG["<SITE>" S SITE=$$GETTAGV^PXRMEXU3(XMRG,"<SITE>",1)
"RTN","PXRMEXMM",107,0)
 .. I XMRG["<DATE_PACKED>" S DATEP=$$GETTAGV^PXRMEXU3(XMRG,"<DATE_PACKED>")
"RTN","PXRMEXMM",108,0)
 . I XMRG="</SOURCE>" D
"RTN","PXRMEXMM",109,0)
 .. S SSOURCE=0
"RTN","PXRMEXMM",110,0)
 .. S SOURCE=USER_" at "_SITE
"RTN","PXRMEXMM",111,0)
 .;See if the entry is loaded into the temporary storage.
"RTN","PXRMEXMM",112,0)
 . I XMRG="</REMINDER_EXCHANGE_FILE_ENTRY>" D
"RTN","PXRMEXMM",113,0)
 .. S NLINES=0
"RTN","PXRMEXMM",114,0)
 .. S NENTRY=NENTRY+1
"RTN","PXRMEXMM",115,0)
 ..;Make sure it has the correct format.
"RTN","PXRMEXMM",116,0)
 .. I (^TMP("PXRMEXLMM",$J,1,0)'["xml")!(^TMP("PXRMEXLMM",$J,2,0)'="<REMINDER_EXCHANGE_FILE_ENTRY>") D  Q
"RTN","PXRMEXMM",117,0)
 ... W !,"There is a problem reading this MailMan message for entry ",NENTRY,", try it again."
"RTN","PXRMEXMM",118,0)
 ... W !,"If it fails twice it is not in the proper reminder exchange format."
"RTN","PXRMEXMM",119,0)
 ... S SUCCESS=0
"RTN","PXRMEXMM",120,0)
 ... H 2
"RTN","PXRMEXMM",121,0)
 ... S XMER=-1
"RTN","PXRMEXMM",122,0)
 ..;Make sure this entry does not already exist.
"RTN","PXRMEXMM",123,0)
 .. I $$REXISTS^PXRMEXIU(RNAME,DATEP) D
"RTN","PXRMEXMM",124,0)
 ... W !,RNAME," with a date packed of ",DATEP
"RTN","PXRMEXMM",125,0)
 ... W !,"is already in the Exchange File, it will not be added again."
"RTN","PXRMEXMM",126,0)
 ... S SUCCESS(NENTRY)=0
"RTN","PXRMEXMM",127,0)
 ... H 2
"RTN","PXRMEXMM",128,0)
 .. E  D
"RTN","PXRMEXMM",129,0)
 ... K FDA,IENROOT
"RTN","PXRMEXMM",130,0)
 ... S FDA(811.8,"+1,",.01)=RNAME
"RTN","PXRMEXMM",131,0)
 ... S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXMM",132,0)
 ... S FDA(811.8,"+1,",.03)=DATEP
"RTN","PXRMEXMM",133,0)
 ... D UPDATE^PXRMEXPU(.US,.FDA,.IENROOT)
"RTN","PXRMEXMM",134,0)
 ... S SUCCESS(NENTRY)=US
"RTN","PXRMEXMM",135,0)
 ...;Create the description and save the data.
"RTN","PXRMEXMM",136,0)
 ... N DESL,DESCT,KEYWORDT
"RTN","PXRMEXMM",137,0)
 ... D DESC^PXRMEXU3(RETMP,.DESCT)
"RTN","PXRMEXMM",138,0)
 ... D KEYWORD^PXRMEXU3(RETMP,.KEYWORDT)
"RTN","PXRMEXMM",139,0)
 ... S DESL("RNAME")=RNAME,DESL("SOURCE")=SOURCE,DESL("DATEP")=DATEP
"RTN","PXRMEXMM",140,0)
 ... S DESL("VRSN")=VRSN
"RTN","PXRMEXMM",141,0)
 ... D DESC^PXRMEXU1(IENROOT(1),.DESL,"DESCT","KEYWORDT")
"RTN","PXRMEXMM",142,0)
 ... M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",143,0)
 ... W !,"Added Exchange entry ",RNAME H 2
"RTN","PXRMEXMM",144,0)
 .. K ^TMP("PXRMEXLMM",$J)
"RTN","PXRMEXMM",145,0)
 ;Check the success of the entry installs.
"RTN","PXRMEXMM",146,0)
 S SUCCESS=1
"RTN","PXRMEXMM",147,0)
 S IND=""
"RTN","PXRMEXMM",148,0)
 F  S IND=$O(SUCCESS(IND)) Q:+IND=0  D
"RTN","PXRMEXMM",149,0)
 . I 'SUCCESS(IND) S SUCCESS=0 Q
"RTN","PXRMEXMM",150,0)
 Q
"RTN","PXRMEXMM",151,0)
 ;
"RTN","PXRMEXMM",152,0)
 ;=============================================================
"RTN","PXRMEXMM",153,0)
STARTPOS(XMZ) ;Find the starting position by looking for the xml header.
"RTN","PXRMEXMM",154,0)
 ;This will skip over extra header information created by things like
"RTN","PXRMEXMM",155,0)
 ;copying or using p-message.
"RTN","PXRMEXMM",156,0)
 N XMPOS,XMER,XMRG
"RTN","PXRMEXMM",157,0)
 S XMPOS=.99
"RTN","PXRMEXMM",158,0)
 F  D REC^XMS3 Q:(XMRG="<?xml version=""1.0"" standalone=""yes""?>")!(+$G(XMER)=-1)
"RTN","PXRMEXMM",159,0)
 S XMPOS=$S($G(XMER)=-1:-1,1:XMPOS-1)
"RTN","PXRMEXMM",160,0)
 Q XMPOS
"RTN","PXRMEXMM",161,0)
 ;
"RTN","PXRMEXPD")
0^102^B200143562
"RTN","PXRMEXPD",1,0)
PXRMEXPD ;SLC/PKR - General packing driver. ;08/02/2013
"RTN","PXRMEXPD",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,16,18,22,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXPD",3,0)
 ;==========================
"RTN","PXRMEXPD",4,0)
BLDDESC(USELLIST,TMPIND) ;If multiple entries have been selected
"RTN","PXRMEXPD",5,0)
 ;then initialize the description with the selected list.
"RTN","PXRMEXPD",6,0)
 N IEN,NL,NOUT,TEXT,TEXTOUT
"RTN","PXRMEXPD",7,0)
 S TEXT(1)="The following Clinical Reminder items were selected for packing:\\"
"RTN","PXRMEXPD",8,0)
 S FILENUM=0,NL=1
"RTN","PXRMEXPD",9,0)
 F  S FILENUM=$O(USELLIST(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPD",10,0)
 . I NL>1 S NL=NL+1,TEXT(NL)="\\"
"RTN","PXRMEXPD",11,0)
 . S NL=NL+1,TEXT(NL)=$$GET1^DID(FILENUM,"","","NAME")_"\\"
"RTN","PXRMEXPD",12,0)
 . S IEN=0
"RTN","PXRMEXPD",13,0)
 . F  S IEN=+$O(USELLIST(FILENUM,"IEN",IEN)) Q:IEN=0  D
"RTN","PXRMEXPD",14,0)
 .. S NL=NL+1,TEXT(NL)="  "_$$GET1^DIQ(FILENUM,IEN,".01")_"\\"
"RTN","PXRMEXPD",15,0)
 D FORMAT^PXRMTEXT(1,70,NL,.TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMEXPD",16,0)
 K ^TMP(TMPIND,$J,"DESC")
"RTN","PXRMEXPD",17,0)
 F IND=1:1:NOUT  S ^TMP(TMPIND,$J,"DESC",1,IND,0)=TEXTOUT(IND)
"RTN","PXRMEXPD",18,0)
 Q
"RTN","PXRMEXPD",19,0)
 ;
"RTN","PXRMEXPD",20,0)
 ;==========================
"RTN","PXRMEXPD",21,0)
BLDTEXT(TMPIND) ;Combine the source information and the user's input into the
"RTN","PXRMEXPD",22,0)
 ;"TEXT" array.
"RTN","PXRMEXPD",23,0)
 N IC,IND
"RTN","PXRMEXPD",24,0)
 S (IC,IND)=0
"RTN","PXRMEXPD",25,0)
 F  S IC=$O(^TMP(TMPIND,$J,"SRC",IC)) Q:+IC=0  D
"RTN","PXRMEXPD",26,0)
 . S IND=IND+1
"RTN","PXRMEXPD",27,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"SRC",IC)
"RTN","PXRMEXPD",28,0)
 ;
"RTN","PXRMEXPD",29,0)
 S IC=0
"RTN","PXRMEXPD",30,0)
 F  S IC=$O(^TMP(TMPIND,$J,"TXT",1,IC)) Q:+IC=0  D
"RTN","PXRMEXPD",31,0)
 . S IND=IND+1
"RTN","PXRMEXPD",32,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"TXT",1,IC,0)
"RTN","PXRMEXPD",33,0)
 Q
"RTN","PXRMEXPD",34,0)
 ;
"RTN","PXRMEXPD",35,0)
 ;==========================
"RTN","PXRMEXPD",36,0)
CLDIQOUT(FILENUM,IEN,FIELD,IENROOT,DIQOUT) ;Clean-up the DIQOUT returned by
"RTN","PXRMEXPD",37,0)
 ;the GETS^DIQ call.
"RTN","PXRMEXPD",38,0)
 N NOSTUB
"RTN","PXRMEXPD",39,0)
 S NOSTUB=0
"RTN","PXRMEXPD",40,0)
 I (FILENUM=811.4),($P(^PXRMD(811.4,IEN,100),U,1)="N") S NOSTUB=1
"RTN","PXRMEXPD",41,0)
 ;Remove edit history from all reminder files.
"RTN","PXRMEXPD",42,0)
 D RMEH^PXRMEXPU(FILENUM,.DIQOUT,NOSTUB)
"RTN","PXRMEXPD",43,0)
 ;Convert the iens to the FDA adding form.
"RTN","PXRMEXPD",44,0)
 D CONTOFDA^PXRMEXPU(.DIQOUT,.IENROOT)
"RTN","PXRMEXPD",45,0)
 ;Remove hospital locations from location lists
"RTN","PXRMEXPD",46,0)
 I FILENUM=810.9 K DIQOUT(810.944)
"RTN","PXRMEXPD",47,0)
 ;Don't transport the obsolete taxonomy fields.
"RTN","PXRMEXPD",48,0)
 I FILENUM=811.2 K DIQOUT(811.22102),DIQOUT(811.22103),DIQOUT(811.22104),DIQOUT(811.23102),DIQOUT(811.23104)
"RTN","PXRMEXPD",49,0)
 ;TIU conversion for TIU/HS objects
"RTN","PXRMEXPD",50,0)
 I FILENUM=8925.1,FIELD="**" D TIUCONV(FILENUM,IEN,.DIQOUT)
"RTN","PXRMEXPD",51,0)
 Q
"RTN","PXRMEXPD",52,0)
 ;
"RTN","PXRMEXPD",53,0)
 ;==========================
"RTN","PXRMEXPD",54,0)
CMPLIST(CMPLIST,SELLIST,FILELST,ERROR) ;Process the selected list and build a
"RTN","PXRMEXPD",55,0)
 ;complete list of components to be packed.
"RTN","PXRMEXPD",56,0)
 N CIEN,IND,JND,FNUM,LRD,NUM,PACKLIST,ROUTINE
"RTN","PXRMEXPD",57,0)
 S ERROR=0
"RTN","PXRMEXPD",58,0)
 F IND=1:1:FILELST(0) D
"RTN","PXRMEXPD",59,0)
 . S FNUM=$P(FILELST(IND),U,1)
"RTN","PXRMEXPD",60,0)
 . I '$D(SELLIST(FNUM)) Q
"RTN","PXRMEXPD",61,0)
 . S ROUTINE=$$GETSRTN^PXRMEXPS(FNUM)_"(FNUM,CIEN,.PACKLIST)"
"RTN","PXRMEXPD",62,0)
 . S NUM=0
"RTN","PXRMEXPD",63,0)
 . F  S NUM=+$O(SELLIST(FNUM,NUM)) Q:NUM=0   S CIEN=SELLIST(FNUM,NUM) D @ROUTINE
"RTN","PXRMEXPD",64,0)
 ;PACKLIST is built by following all pointers. Reversing the order
"RTN","PXRMEXPD",65,0)
 ;for the Exchange install should allow resolution of pointers.
"RTN","PXRMEXPD",66,0)
 S FNUM=""
"RTN","PXRMEXPD",67,0)
 F  S FNUM=$O(PACKLIST(FNUM)) Q:FNUM=""  D
"RTN","PXRMEXPD",68,0)
 . I $D(PACKLIST(FNUM,"ERROR")) D
"RTN","PXRMEXPD",69,0)
 .. S IND=0,ERROR=ERROR+1
"RTN","PXRMEXPD",70,0)
 .. I ERROR=1 W !
"RTN","PXRMEXPD",71,0)
 .. F  S IND=+$O(PACKLIST(FNUM,"ERROR",IND)) Q:IND=0  W !,PACKLIST(FNUM,"ERROR",IND)," IEN=",IND
"RTN","PXRMEXPD",72,0)
 . S IND="IEN",JND=0
"RTN","PXRMEXPD",73,0)
 . F  S IND=+$O(PACKLIST(FNUM,IND),-1) Q:IND=0  S JND=JND+1,CMPLIST(FNUM,JND)=PACKLIST(FNUM,IND)
"RTN","PXRMEXPD",74,0)
 ;If any definitions have a linked dialog add the linked dialog to the
"RTN","PXRMEXPD",75,0)
 ;selection list so it can be marked as selected.
"RTN","PXRMEXPD",76,0)
 I '$D(CMPLIST(811.9)) Q
"RTN","PXRMEXPD",77,0)
 S NUM=$O(SELLIST(801.41,"IEN"),-1)
"RTN","PXRMEXPD",78,0)
 S IND=0
"RTN","PXRMEXPD",79,0)
 F  S IND=$O(CMPLIST(811.9,IND)) Q:IND=""  D
"RTN","PXRMEXPD",80,0)
 . S LRD=$G(^PXD(811.9,CMPLIST(811.9,IND),51))
"RTN","PXRMEXPD",81,0)
 . I LRD'="" S NUM=NUM+1,SELLIST(801.41,NUM)=LRD,SELLIST(801.41,"IEN",LRD)=NUM
"RTN","PXRMEXPD",82,0)
 I ERROR D
"RTN","PXRMEXPD",83,0)
 . W !,"Cannot create the packed file due to the above error(s)."
"RTN","PXRMEXPD",84,0)
 . H 2
"RTN","PXRMEXPD",85,0)
 Q
"RTN","PXRMEXPD",86,0)
 ;
"RTN","PXRMEXPD",87,0)
 ;==========================
"RTN","PXRMEXPD",88,0)
CRE ;Pack a reminder component and store it in the repository.
"RTN","PXRMEXPD",89,0)
 N CMPLIST,CNT,DIEN,DERRFND,DERRMSG,EFNAME,ERROR,FAIL,FAILTYPE,FILELST
"RTN","PXRMEXPD",90,0)
 N OUTPUT,POA,RANK,SERROR,SELLIST,SUCCESS,TMPIND,USELLIST
"RTN","PXRMEXPD",91,0)
 S TMPIND="PXRMEXPR"
"RTN","PXRMEXPD",92,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",93,0)
 S FILELST(1)=811.4_U_$$GET1^DID(811.4,"","","NAME")
"RTN","PXRMEXPD",94,0)
 S FILELST(2)=810.8_U_$$GET1^DID(810.8,"","","NAME")
"RTN","PXRMEXPD",95,0)
 S FILELST(3)=811.9_U_$$GET1^DID(811.9,"","","NAME")
"RTN","PXRMEXPD",96,0)
 S FILELST(4)=801.41_U_$$GET1^DID(801.41,"","","NAME")
"RTN","PXRMEXPD",97,0)
 S FILELST(5)=810.7_U_$$GET1^DID(810.7,"","","NAME")
"RTN","PXRMEXPD",98,0)
 S FILELST(6)=810.2_U_$$GET1^DID(810.2,"","","NAME")
"RTN","PXRMEXPD",99,0)
 S FILELST(7)=810.4_U_$$GET1^DID(810.4,"","","NAME")
"RTN","PXRMEXPD",100,0)
 S FILELST(8)=810.9_U_$$GET1^DID(810.9,"","","NAME")
"RTN","PXRMEXPD",101,0)
 S FILELST(9)=811.6_U_$$GET1^DID(811.6,"","","NAME")
"RTN","PXRMEXPD",102,0)
 S FILELST(10)=811.2_U_$$GET1^DID(811.2,"","","NAME")
"RTN","PXRMEXPD",103,0)
 S FILELST(11)=811.5_U_$$GET1^DID(811.5,"","","NAME")
"RTN","PXRMEXPD",104,0)
 S FILELST(12)=801_U_$$GET1^DID(801,"","","NAME")
"RTN","PXRMEXPD",105,0)
 S FILELST(13)=801.1_U_$$GET1^DID(801.1,"","","NAME")
"RTN","PXRMEXPD",106,0)
 S FILELST(0)=13
"RTN","PXRMEXPD",107,0)
 D PACKORD(.RANK)
"RTN","PXRMEXPD",108,0)
 ;
"RTN","PXRMEXPD",109,0)
 ;Get the list to pack.
"RTN","PXRMEXPD",110,0)
 D FSEL(.SELLIST,.FILELST)
"RTN","PXRMEXPD",111,0)
 ;
"RTN","PXRMEXPD",112,0)
 K VALMHDR
"RTN","PXRMEXPD",113,0)
 I '$D(SELLIST) S VALMHDR(1)="No reminder items were selected!"  Q
"RTN","PXRMEXPD",114,0)
 ;Save the user's selections.
"RTN","PXRMEXPD",115,0)
 M USELLIST=SELLIST
"RTN","PXRMEXPD",116,0)
 ;Process the selected list to build a complete list of components
"RTN","PXRMEXPD",117,0)
 ;to be packed.
"RTN","PXRMEXPD",118,0)
 D CMPLIST(.CMPLIST,.SELLIST,.FILELST,.ERROR)
"RTN","PXRMEXPD",119,0)
 I ERROR K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",120,0)
 ;
"RTN","PXRMEXPD",121,0)
 ;Check reminder dialogs for errors
"RTN","PXRMEXPD",122,0)
 N FAILTYPE
"RTN","PXRMEXPD",123,0)
 S FAIL=0
"RTN","PXRMEXPD",124,0)
 I $D(SELLIST(801.41)) D  I FAIL="F" K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",125,0)
 .W !,"Checking reminder dialog(s) for errors."
"RTN","PXRMEXPD",126,0)
 . S DIEN=0
"RTN","PXRMEXPD",127,0)
 .;Check individual reminder dialogs 
"RTN","PXRMEXPD",128,0)
 . F  S DIEN=$O(SELLIST(801.41,"IEN",DIEN)) Q:DIEN'>0  D
"RTN","PXRMEXPD",129,0)
 .. I FAIL=0 W "."
"RTN","PXRMEXPD",130,0)
 .. S FAILTYPE=$$RETARR^PXRMDLRP(DIEN,.OUTPUT) Q:'$D(OUTPUT)
"RTN","PXRMEXPD",131,0)
 .. I FAILTYPE="F" S FAIL="F"
"RTN","PXRMEXPD",132,0)
 .. I FAILTYPE="W",FAIL=0 S FAIL="W"
"RTN","PXRMEXPD",133,0)
 .. W !!,$S(FAILTYPE="W":"**WARNING**",1:"**FATAL ERROR**")
"RTN","PXRMEXPD",134,0)
 .. S CNT=0 F  S CNT=$O(OUTPUT(CNT)) Q:CNT'>0  W !,OUTPUT(CNT)
"RTN","PXRMEXPD",135,0)
 .. K OUTPUT
"RTN","PXRMEXPD",136,0)
 .;
"RTN","PXRMEXPD",137,0)
 . I FAIL="W" H 2
"RTN","PXRMEXPD",138,0)
 . I FAIL=0 W !,"No problems found." H 1 Q
"RTN","PXRMEXPD",139,0)
 . I FAIL="F" W !!,"Cannot create the packed file. Please correct the above fatal error(s)." H 2
"RTN","PXRMEXPD",140,0)
 ;
"RTN","PXRMEXPD",141,0)
 ;Create the header information.
"RTN","PXRMEXPD",142,0)
 D HEADER(TMPIND,.USELLIST,.SELLIST,.RANK,.EFNAME)
"RTN","PXRMEXPD",143,0)
 I EFNAME=-1 Q
"RTN","PXRMEXPD",144,0)
 ;
"RTN","PXRMEXPD",145,0)
 ;Order the component list.
"RTN","PXRMEXPD",146,0)
 D ORDER(.CMPLIST,.RANK,.POA)
"RTN","PXRMEXPD",147,0)
 ;Pack the list
"RTN","PXRMEXPD",148,0)
 D PACK(.CMPLIST,.POA,TMPIND,.SELLIST,.SERROR)
"RTN","PXRMEXPD",149,0)
 I SERROR K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",150,0)
 ;Add information to the description about quick orders, TIU health 
"RTN","PXRMEXPD",151,0)
 ;summary objects, and health summaries that are included but are
"RTN","PXRMEXPD",152,0)
 ;not exchangeable.
"RTN","PXRMEXPD",153,0)
 D NEXINFO(TMPIND)
"RTN","PXRMEXPD",154,0)
 D STOREPR^PXRMEXU2(.SUCCESS,EFNAME,TMPIND,.SELLIST)
"RTN","PXRMEXPD",155,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",156,0)
 I SUCCESS D
"RTN","PXRMEXPD",157,0)
 . S VALMHDR(1)=EFNAME_" was saved in the Exchange File."
"RTN","PXRMEXPD",158,0)
 . D BLDLIST^PXRMEXLC(1)
"RTN","PXRMEXPD",159,0)
 E  D
"RTN","PXRMEXPD",160,0)
 . S VALMHDR(1)="Creation of Exchange File entry "_EFNAME
"RTN","PXRMEXPD",161,0)
 . S VALMHDR(2)="failed; it was not saved!"
"RTN","PXRMEXPD",162,0)
 Q
"RTN","PXRMEXPD",163,0)
 ;
"RTN","PXRMEXPD",164,0)
 ;==========================
"RTN","PXRMEXPD",165,0)
FSEL(LIST,FILELST) ;Select file list.
"RTN","PXRMEXPD",166,0)
 N ALIST,DIR,DIROUT,DIRUT,DONE,DTOUT,DUOUT,IND,X,Y
"RTN","PXRMEXPD",167,0)
 F IND=1:1:FILELST(0) S ALIST(IND)=$$RJ^XLFSTR(IND,4," ")_" "_$P(FILELST(IND),U,2)
"RTN","PXRMEXPD",168,0)
 M DIR("A")=ALIST
"RTN","PXRMEXPD",169,0)
 S DIR("A")="Select a file"
"RTN","PXRMEXPD",170,0)
 S DIR(0)="NO^1:"_FILELST(0)
"RTN","PXRMEXPD",171,0)
 S DONE=0
"RTN","PXRMEXPD",172,0)
 F  Q:DONE  D
"RTN","PXRMEXPD",173,0)
 . W !!,"Select from the following reminder files:"
"RTN","PXRMEXPD",174,0)
 . D ^DIR
"RTN","PXRMEXPD",175,0)
 . I (Y="")!(Y["^") S DONE=1 Q
"RTN","PXRMEXPD",176,0)
 . I $D(DIROUT)!$D(DIRUT) S DONE=1 Q
"RTN","PXRMEXPD",177,0)
 . I $D(DUOUT)!$D(DTOUT) S DONE=1 Q
"RTN","PXRMEXPD",178,0)
 . D IENSEL(.LIST,Y,.FILELST)
"RTN","PXRMEXPD",179,0)
 Q
"RTN","PXRMEXPD",180,0)
 ;
"RTN","PXRMEXPD",181,0)
 ;==========================
"RTN","PXRMEXPD",182,0)
IENSEL(LIST,ID,FILELST) ;Select entries from the selected file.
"RTN","PXRMEXPD",183,0)
 N DIC,DIR,DIROUT,DIRUT,DONE,DTOUT,DUOUT,FILENUM,NUMF,X,Y
"RTN","PXRMEXPD",184,0)
 S (DIC,FILENUM)=$P(FILELST(ID),U,1)
"RTN","PXRMEXPD",185,0)
 S NUMF=+$O(LIST(FILENUM,""),-1)
"RTN","PXRMEXPD",186,0)
 S DIC(0)="QEA"
"RTN","PXRMEXPD",187,0)
 S DONE=0
"RTN","PXRMEXPD",188,0)
 F  Q:DONE  D
"RTN","PXRMEXPD",189,0)
 . D ^DIC
"RTN","PXRMEXPD",190,0)
 . I Y=-1 S DONE=1 Q
"RTN","PXRMEXPD",191,0)
 . I $D(DIROUT)!$D(DIRUT) S DONE=1 Q
"RTN","PXRMEXPD",192,0)
 . I $D(DUOUT)!$D(DTOUT) S DONE=1 Q
"RTN","PXRMEXPD",193,0)
 . S NUMF=NUMF+1
"RTN","PXRMEXPD",194,0)
 . S LIST(FILENUM,NUMF)=+Y
"RTN","PXRMEXPD",195,0)
 . S LIST(FILENUM,"IEN",+Y)=NUMF
"RTN","PXRMEXPD",196,0)
 . W !,"Enter another one or just press enter to go back to file selection."
"RTN","PXRMEXPD",197,0)
 Q
"RTN","PXRMEXPD",198,0)
 ;
"RTN","PXRMEXPD",199,0)
 ;==========================
"RTN","PXRMEXPD",200,0)
GETTEXT(FILENUM,IEN,TMPIND,INDEX) ;Let the user input some text.
"RTN","PXRMEXPD",201,0)
 N DIC,DWLW,DWPK,FIELDNUM,TYPE
"RTN","PXRMEXPD",202,0)
 ;If this is the description text, (signfied by FILENUM>0) load the
"RTN","PXRMEXPD",203,0)
 ;description or short description as the default.
"RTN","PXRMEXPD",204,0)
 I FILENUM>0 D
"RTN","PXRMEXPD",205,0)
 . S FIELDNUM=$$FLDNUM^DILFD(FILENUM,"DESCRIPTION"),TYPE="WP"
"RTN","PXRMEXPD",206,0)
 . I FIELDNUM=0 S FIELDNUM=$$FLDNUM^DILFD(FILENUM,"SHORT DESCRIPTION"),TYPE="SD"
"RTN","PXRMEXPD",207,0)
 E  S FIELDNUM=0
"RTN","PXRMEXPD",208,0)
 I FIELDNUM>0 D
"RTN","PXRMEXPD",209,0)
 . N MSG,WP,X
"RTN","PXRMEXPD",210,0)
 . I TYPE="WP" D
"RTN","PXRMEXPD",211,0)
 .. S X=$$GET1^DIQ(FILENUM,IEN,FIELDNUM,"Z","WP","MSG")
"RTN","PXRMEXPD",212,0)
 .. M ^TMP(TMPIND,$J,INDEX,1)=WP
"RTN","PXRMEXPD",213,0)
 . I TYPE="SD" D
"RTN","PXRMEXPD",214,0)
 .. S X=$$GET1^DIQ(FILENUM,IEN,FIELDNUM,"","","MSG")
"RTN","PXRMEXPD",215,0)
 .. S ^TMP(TMPIND,$J,INDEX,1,1,0)=X
"RTN","PXRMEXPD",216,0)
 S DIC="^TMP(TMPIND,$J,"""_INDEX_""",1,"
"RTN","PXRMEXPD",217,0)
 S DWLW=72,DWPK=1
"RTN","PXRMEXPD",218,0)
 D EN^DIWE
"RTN","PXRMEXPD",219,0)
 Q
"RTN","PXRMEXPD",220,0)
 ;
"RTN","PXRMEXPD",221,0)
 ;==========================
"RTN","PXRMEXPD",222,0)
GDIQF(FILENUM,FILENAME,IEN,IND,TMPIND,SELLIST,SERROR) ;Save file entries into
"RTN","PXRMEXPD",223,0)
 ;^TMP(TMPIND,$J).
"RTN","PXRMEXPD",224,0)
 N CSUM,DIQOUT,IENROOT,FIELD,MSG,NUM
"RTN","PXRMEXPD",225,0)
 K DIQOUT,IENROOT
"RTN","PXRMEXPD",226,0)
 ;If the file entry is ok to install then get the entire entry,
"RTN","PXRMEXPD",227,0)
 ;otherwise just get the .01.
"RTN","PXRMEXPD",228,0)
 S FIELD=$S($$IOKTP^PXRMEXFI(FILENUM,IEN):"**",1:.01)
"RTN","PXRMEXPD",229,0)
 ;
"RTN","PXRMEXPD",230,0)
 ;Items from file 142, 142.5, and 8925.1 need to be added to the
"RTN","PXRMEXPD",231,0)
 ;SELLIST array if $$IOKTP returns "**". These items are IEN specific
"RTN","PXRMEXPD",232,0)
 ;and the check needs to be done at time of packing this is why they
"RTN","PXRMEXPD",233,0)
 ;are added to SELLIST.
"RTN","PXRMEXPD",234,0)
 I ((FILENUM=142)!(FILENUM=142.5)!(FILENUM=8925.1))&(FIELD="**") D
"RTN","PXRMEXPD",235,0)
 .S NUM=$O(SELLIST(FILENUM,"IEN",""),-1)
"RTN","PXRMEXPD",236,0)
 .S NUM=NUM+1,SELLIST(FILENUM,"IEN",IEN)=NUM,SELLIST(FILENUM,NUM)=IEN
"RTN","PXRMEXPD",237,0)
 ;
"RTN","PXRMEXPD",238,0)
 D GETS^DIQ(FILENUM,IEN,FIELD,"N","DIQOUT","MSG")
"RTN","PXRMEXPD",239,0)
 I $D(MSG) D  Q
"RTN","PXRMEXPD",240,0)
 . S SERROR=1
"RTN","PXRMEXPD",241,0)
 . N ETEXT
"RTN","PXRMEXPD",242,0)
 . S ETEXT="GETS^DIQ failed for "_FILENAME_", ien="_IEN_";"
"RTN","PXRMEXPD",243,0)
 . W !,ETEXT
"RTN","PXRMEXPD",244,0)
 . W !,"it returned the following error:"
"RTN","PXRMEXPD",245,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPD",246,0)
 . H 2
"RTN","PXRMEXPD",247,0)
 . K MSG
"RTN","PXRMEXPD",248,0)
 D CLDIQOUT(FILENUM,IEN,FIELD,.IENROOT,.DIQOUT)
"RTN","PXRMEXPD",249,0)
 S ^TMP("PXRMEXCS",$J,IND,FILENAME)=$$DIQOUTCS^PXRMEXCS(.DIQOUT)
"RTN","PXRMEXPD",250,0)
 ;Load the converted DIQOUT into TMP.
"RTN","PXRMEXPD",251,0)
 M ^TMP(TMPIND,$J,IND,FILENAME)=DIQOUT
"RTN","PXRMEXPD",252,0)
 M ^TMP(TMPIND,$J,IND,FILENAME_"_IENROOT")=IENROOT
"RTN","PXRMEXPD",253,0)
 Q
"RTN","PXRMEXPD",254,0)
 ;
"RTN","PXRMEXPD",255,0)
 ;==========================
"RTN","PXRMEXPD",256,0)
GRTN(ROUTINE,TMPIND,SERROR) ;Save routines into ^TMP(TMPIND,$J).
"RTN","PXRMEXPD",257,0)
 N DIF,IEN,IND,RA,TEMP,X,XCNP
"RTN","PXRMEXPD",258,0)
 S X=ROUTINE
"RTN","PXRMEXPD",259,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXPD",260,0)
 I $T D
"RTN","PXRMEXPD",261,0)
 . K RA
"RTN","PXRMEXPD",262,0)
 . S DIF="RA("
"RTN","PXRMEXPD",263,0)
 . S XCNP=0
"RTN","PXRMEXPD",264,0)
 . X ^%ZOSF("LOAD")
"RTN","PXRMEXPD",265,0)
 . S ^TMP("PXRMEXCS",$J,"ROUTINE",X)=$$ROUTINE^PXRMEXCS(.RA)
"RTN","PXRMEXPD",266,0)
 . M ^TMP(TMPIND,$J,"ROUTINE",X)=RA
"RTN","PXRMEXPD",267,0)
 E  D
"RTN","PXRMEXPD",268,0)
 . S SERROR=1
"RTN","PXRMEXPD",269,0)
 . W !,"Warning could not find routine ",X
"RTN","PXRMEXPD",270,0)
 . H 2
"RTN","PXRMEXPD",271,0)
 Q
"RTN","PXRMEXPD",272,0)
 ;
"RTN","PXRMEXPD",273,0)
 ;==========================
"RTN","PXRMEXPD",274,0)
HEADER(TMPIND,USELLIST,SELLIST,RANK,EFNAME) ;Create the Exchange file header
"RTN","PXRMEXPD",275,0)
 ;information.
"RTN","PXRMEXPD",276,0)
 N DIR,EXTYPE,IEN,IND,FILENAME,FILENUM,NFNUM,NIEN,PNAME,Y
"RTN","PXRMEXPD",277,0)
 S (FILENAME,FILENUM,IEN,NIEN)="",NFNUM=0
"RTN","PXRMEXPD",278,0)
 F  S FILENUM=$O(USELLIST(FILENUM)) Q:FILENUM=""  S NFNUM=NFNUM+1
"RTN","PXRMEXPD",279,0)
 I NFNUM=1 D
"RTN","PXRMEXPD",280,0)
 . S FILENUM=$O(USELLIST(""))
"RTN","PXRMEXPD",281,0)
 . S IND="",NIEN=0
"RTN","PXRMEXPD",282,0)
 . F  S IND=$O(USELLIST(FILENUM,IND)) Q:IND="IEN"  S NIEN=NIEN+1
"RTN","PXRMEXPD",283,0)
 . I NIEN=1 D
"RTN","PXRMEXPD",284,0)
 .. S IND=$O(USELLIST(FILENUM,""))
"RTN","PXRMEXPD",285,0)
 .. S IEN=USELLIST(FILENUM,IND)
"RTN","PXRMEXPD",286,0)
 .. S NAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMEXPD",287,0)
 .. S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXPD",288,0)
 ..;If only one item was selected make it the default.
"RTN","PXRMEXPD",289,0)
 .. S DIR("B")=NAME
"RTN","PXRMEXPD",290,0)
 ;Get the Exchange file entry name.
"RTN","PXRMEXPD",291,0)
 S DIR(0)="FAU^3:64"
"RTN","PXRMEXPD",292,0)
 S DIR("A")="Enter the Exchange File entry name: "
"RTN","PXRMEXPD",293,0)
 D ^DIR
"RTN","PXRMEXPD",294,0)
 I (Y="")!($D(DTOUT))!($D(DUOUT)) S EFNAME=-1 Q
"RTN","PXRMEXPD",295,0)
 S EFNAME=Y
"RTN","PXRMEXPD",296,0)
 K DIR
"RTN","PXRMEXPD",297,0)
 ;Save the source information.
"RTN","PXRMEXPD",298,0)
 D PUTSRC(FILENAME,EFNAME,TMPIND)
"RTN","PXRMEXPD",299,0)
 S PNAME=$S(NIEN=1:FILENAME,1:"Exchange File entry")
"RTN","PXRMEXPD",300,0)
 ;If multiple items were selected for packing initialize the
"RTN","PXRMEXPD",301,0)
 ;description with the selection list.
"RTN","PXRMEXPD",302,0)
 I (NFNUM>1)!(NIEN>1) D BLDDESC(.USELLIST,TMPIND)
"RTN","PXRMEXPD",303,0)
 ;If a single item was selected the description will be initialized
"RTN","PXRMEXPD",304,0)
 ;with the selected item's description. In either case the user can
"RTN","PXRMEXPD",305,0)
 ;input additional description text.
"RTN","PXRMEXPD",306,0)
 W !,"Enter a description of the ",PNAME," you are packing." H 2
"RTN","PXRMEXPD",307,0)
 D GETTEXT(FILENUM,IEN,TMPIND,"DESC")
"RTN","PXRMEXPD",308,0)
 ;
"RTN","PXRMEXPD",309,0)
 ;Have the user input keywords for indexing the entry.
"RTN","PXRMEXPD",310,0)
 W !,"Enter keywords or phrases to help index the entry you are packing."
"RTN","PXRMEXPD",311,0)
 W !,"Separate the keywords or phrases on each line with commas." H 2
"RTN","PXRMEXPD",312,0)
 D GETTEXT(0,0,TMPIND,"KEYWORD")
"RTN","PXRMEXPD",313,0)
 ;
"RTN","PXRMEXPD",314,0)
 ;Combine the source and input text into the "TEXT" array.
"RTN","PXRMEXPD",315,0)
 D BLDTEXT(TMPIND)
"RTN","PXRMEXPD",316,0)
 Q
"RTN","PXRMEXPD",317,0)
 ;
"RTN","PXRMEXPD",318,0)
 ;==========================
"RTN","PXRMEXPD",319,0)
NEXINFO(TMPIND) ;Add information to the description about quick orders,
"RTN","PXRMEXPD",320,0)
 ;TIU health summary objects, and health summaries that are included
"RTN","PXRMEXPD",321,0)
 ;but are not exchangeable.
"RTN","PXRMEXPD",322,0)
 N NL,NLS
"RTN","PXRMEXPD",323,0)
 S (NL,NLS)=$P($G(^TMP(TMPIND,$J,"DESC",1,0)),U,4)
"RTN","PXRMEXPD",324,0)
 I $D(^TMP($J,"ORDER DIALOG")) D
"RTN","PXRMEXPD",325,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",326,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable order dialog(s):"
"RTN","PXRMEXPD",327,0)
 . D NEXINFOA(TMPIND,"ORDER DIALOG",.NL)
"RTN","PXRMEXPD",328,0)
 I $D(^TMP($J,"TIU OBJECT")) D
"RTN","PXRMEXPD",329,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",330,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable TIU object(s):"
"RTN","PXRMEXPD",331,0)
 . D NEXINFOA(TMPIND,"TIU OBJECT",.NL)
"RTN","PXRMEXPD",332,0)
 I $D(^TMP($J,"HS OBJECT")) D
"RTN","PXRMEXPD",333,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",334,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary object(s):"
"RTN","PXRMEXPD",335,0)
 . D NEXINFOA(TMPIND,"HS OBJECT",.NL)
"RTN","PXRMEXPD",336,0)
 I $D(^TMP($J,"HS TYPE")) D
"RTN","PXRMEXPD",337,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",338,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary type(s):"
"RTN","PXRMEXPD",339,0)
 . D NEXINFOA(TMPIND,"HS TYPE",.NL)
"RTN","PXRMEXPD",340,0)
 I $D(^TMP($J,"HS COMP")) D
"RTN","PXRMEXPD",341,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",342,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary component(s):"
"RTN","PXRMEXPD",343,0)
 . D NEXINFOA(TMPIND,"HS COMP",.NL)
"RTN","PXRMEXPD",344,0)
 I $D(^TMP($J,"LOCATION LIST")) D
"RTN","PXRMEXPD",345,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",346,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable location list hospital locations:"
"RTN","PXRMEXPD",347,0)
 . D NEXINFOA(TMPIND,"LOCATION LIST",.NL)
"RTN","PXRMEXPD",348,0)
 I NL>NLS S $P(^TMP(TMPIND,$J,"DESC",1,0),U,3,4)=NL_U_NL
"RTN","PXRMEXPD",349,0)
 Q
"RTN","PXRMEXPD",350,0)
 ;
"RTN","PXRMEXPD",351,0)
 ;==========================
"RTN","PXRMEXPD",352,0)
NEXINFOA(TMPIND,SUB,NL) ;
"RTN","PXRMEXPD",353,0)
 N IEN,LNUM
"RTN","PXRMEXPD",354,0)
 I SUB'["ORDER" S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=$$REPEAT^XLFSTR("-",79)
"RTN","PXRMEXPD",355,0)
 S IEN=0
"RTN","PXRMEXPD",356,0)
 F  S IEN=$O(^TMP($J,SUB,IEN)) Q:IEN'>0  D
"RTN","PXRMEXPD",357,0)
 .S LNUM=0
"RTN","PXRMEXPD",358,0)
 .F  S LNUM=$O(^TMP($J,SUB,IEN,LNUM)) Q:LNUM=""  D
"RTN","PXRMEXPD",359,0)
 ..S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=^TMP($J,SUB,IEN,LNUM)
"RTN","PXRMEXPD",360,0)
 I SUB'["ORDER" S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=$$REPEAT^XLFSTR("-",79)
"RTN","PXRMEXPD",361,0)
 K ^TMP($J,SUB)
"RTN","PXRMEXPD",362,0)
 Q
"RTN","PXRMEXPD",363,0)
 ;
"RTN","PXRMEXPD",364,0)
 ;==========================
"RTN","PXRMEXPD",365,0)
ORDER(CMPLIST,RANK,POA) ;Order the component list so pointers can be resolved.
"RTN","PXRMEXPD",366,0)
 N FILENUM,ORDER,PORDER
"RTN","PXRMEXPD",367,0)
 S FILENUM="",ORDER=0
"RTN","PXRMEXPD",368,0)
 F  S FILENUM=$O(CMPLIST(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPD",369,0)
 . S PORDER=$G(RANK("FN",FILENUM))
"RTN","PXRMEXPD",370,0)
 . I PORDER="" S ORDER=ORDER+1,PORDER=ORDER
"RTN","PXRMEXPD",371,0)
 . S POA(PORDER)=FILENUM
"RTN","PXRMEXPD",372,0)
 Q
"RTN","PXRMEXPD",373,0)
 ;
"RTN","PXRMEXPD",374,0)
 ;==========================
"RTN","PXRMEXPD",375,0)
PACK(CMPLIST,POA,TMPIND,SELLIST,SERROR) ;Create the packed entry, store it in
"RTN","PXRMEXPD",376,0)
 ;^TMP(TMPIND,$J). TMPIND should be namespaced and set by the caller.
"RTN","PXRMEXPD",377,0)
 N IEN,IND,JND,KND,FILENAME,FILENUM,ROUTINE
"RTN","PXRMEXPD",378,0)
 W !,"Packing components ..."
"RTN","PXRMEXPD",379,0)
 S (KND,SERROR)=0
"RTN","PXRMEXPD",380,0)
 S IND=""
"RTN","PXRMEXPD",381,0)
 F  S IND=$O(POA(IND)) Q:IND=""  D
"RTN","PXRMEXPD",382,0)
 . S FILENUM=POA(IND)
"RTN","PXRMEXPD",383,0)
 . S FILENAME=$S(FILENUM=0:"ROUTINE",1:$$GET1^DID(FILENUM,"","","NAME"))
"RTN","PXRMEXPD",384,0)
 . S JND=""
"RTN","PXRMEXPD",385,0)
 . F  S JND=$O(CMPLIST(FILENUM,JND)) Q:JND=""  D
"RTN","PXRMEXPD",386,0)
 .. S IEN=CMPLIST(FILENUM,JND)
"RTN","PXRMEXPD",387,0)
 .. I FILENUM=0 W !,"Adding routine ",IEN
"RTN","PXRMEXPD",388,0)
 .. E  W !,"Adding ",FILENAME," ",$$GET1^DIQ(FILENUM,IEN,.01),", IEN=",IEN
"RTN","PXRMEXPD",389,0)
 .. I FILENUM=0 D GRTN(IEN,TMPIND,.SERROR)
"RTN","PXRMEXPD",390,0)
 .. I FILENUM>0 S KND=KND+1 D GDIQF(FILENUM,FILENAME,IEN,KND,TMPIND,.SELLIST,.SERROR)
"RTN","PXRMEXPD",391,0)
 ;
"RTN","PXRMEXPD",392,0)
 S ^TMP(TMPIND,$J,"NUMF")=KND
"RTN","PXRMEXPD",393,0)
 W !,"Packing is complete."
"RTN","PXRMEXPD",394,0)
 ;If there were any errors saving the data kill the ^TMP array.
"RTN","PXRMEXPD",395,0)
 I SERROR K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",396,0)
 Q
"RTN","PXRMEXPD",397,0)
 ;
"RTN","PXRMEXPD",398,0)
 ;==========================
"RTN","PXRMEXPD",399,0)
PACKORD(RANK) ;
"RTN","PXRMEXPD",400,0)
 S RANK("FN",801.41)=7000,RANK(7000)=801.41
"RTN","PXRMEXPD",401,0)
 S RANK("FN",810.2)=11000,RANK(11000)=810.2
"RTN","PXRMEXPD",402,0)
 S RANK("FN",810.4)=8000,RANK(8000)=810.4
"RTN","PXRMEXPD",403,0)
 S RANK("FN",810.7)=10000,RANK(10000)=810.7
"RTN","PXRMEXPD",404,0)
 S RANK("FN",810.8)=9000,RANK(9000)=810.8
"RTN","PXRMEXPD",405,0)
 S RANK("FN",810.9)=4000,RANK(4000)=810.9
"RTN","PXRMEXPD",406,0)
 S RANK("FN",811.2)=3000,RANK(3000)=811.2
"RTN","PXRMEXPD",407,0)
 S RANK("FN",811.4)=2000,RANK(2000)=811.4
"RTN","PXRMEXPD",408,0)
 S RANK("FN",811.5)=5000,RANK(5000)=811.5
"RTN","PXRMEXPD",409,0)
 S RANK("FN",811.6)=1000,RANK(1000)=811.6
"RTN","PXRMEXPD",410,0)
 S RANK("FN",811.9)=6000,RANK(6000)=811.9
"RTN","PXRMEXPD",411,0)
 S RANK("FN",142.1)=100000,RANK(100000)=142.1
"RTN","PXRMEXPD",412,0)
 S RANK("FN",142)=100100,RANK(100100)=142
"RTN","PXRMEXPD",413,0)
 S RANK("FN",142.5)=100200,RANK(100200)=142.5
"RTN","PXRMEXPD",414,0)
 S RANK("FN",8925.1)=100300,RANK(100300)=8925.1
"RTN","PXRMEXPD",415,0)
 S RANK("FN",801)=100500,RANK(100500)=801
"RTN","PXRMEXPD",416,0)
 S RANK("FN",801.1)=100400,RANK(100400)=801.1
"RTN","PXRMEXPD",417,0)
 Q
"RTN","PXRMEXPD",418,0)
 ;
"RTN","PXRMEXPD",419,0)
 ;==========================
"RTN","PXRMEXPD",420,0)
PUTSRC(FILENAME,NAME,TMPIND) ;Save the source information.
"RTN","PXRMEXPD",421,0)
 N LOC
"RTN","PXRMEXPD",422,0)
 S LOC=$$SITE^VASITE
"RTN","PXRMEXPD",423,0)
 I FILENAME'="" S ^TMP(TMPIND,$J,"SRC","FILENAME")=FILENAME
"RTN","PXRMEXPD",424,0)
 S ^TMP(TMPIND,$J,"SRC","NAME")=NAME
"RTN","PXRMEXPD",425,0)
 S ^TMP(TMPIND,$J,"SRC","USER")=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXPD",426,0)
 S ^TMP(TMPIND,$J,"SRC","SITE")=$P(LOC,U,2)
"RTN","PXRMEXPD",427,0)
 S ^TMP(TMPIND,$J,"SRC","DATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPD",428,0)
 Q
"RTN","PXRMEXPD",429,0)
 ;
"RTN","PXRMEXPD",430,0)
 ;==========================
"RTN","PXRMEXPD",431,0)
TIUCONV(FILENUM,IEN,ARRAY) ;Convert health summary object to external.
"RTN","PXRMEXPD",432,0)
 N HSO,IENS,NAME
"RTN","PXRMEXPD",433,0)
 S IENS="+"_IEN_","
"RTN","PXRMEXPD",434,0)
 ;Allows non-objects to be packed up
"RTN","PXRMEXPD",435,0)
 I ARRAY(FILENUM,IENS,.04)'="OBJECT" Q
"RTN","PXRMEXPD",436,0)
 ;
"RTN","PXRMEXPD",437,0)
 I $G(ARRAY(FILENUM,IENS,9))'["$$TIU^GMTSOBJ" D  Q
"RTN","PXRMEXPD",438,0)
 . S ARRAY(FILENUM,IENS,9)="NOT A HS OBJECT"
"RTN","PXRMEXPD",439,0)
 S HSO=$P(ARRAY(FILENUM,IENS,9),",",2)
"RTN","PXRMEXPD",440,0)
 S HSO=$P(HSO,")")
"RTN","PXRMEXPD",441,0)
 ;Handle corrupted health summary object names.
"RTN","PXRMEXPD",442,0)
 I +HSO>0 S NAME=$P($G(^GMT(142.5,HSO,0)),U,1)
"RTN","PXRMEXPD",443,0)
 E  S NAME="MISSING"
"RTN","PXRMEXPD",444,0)
 S ARRAY(FILENUM,IENS,9)="S X=$$TIU^GMTSOBJ(DFN,"_NAME_")"
"RTN","PXRMEXPD",445,0)
 S ARRAY(FILENUM,IENS,99)=""
"RTN","PXRMEXPD",446,0)
 Q
"RTN","PXRMEXPD",447,0)
 ;
"RTN","PXRMEXPS")
0^44^B188507722
"RTN","PXRMEXPS",1,0)
PXRMEXPS ; SLC/PKR - Packing save routines. ;10/24/2012
"RTN","PXRMEXPS",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,16,18,22,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXPS",3,0)
 ;==========================================
"RTN","PXRMEXPS",4,0)
ADD(FILENUM,IEN,PACKLIST,NF) ;
"RTN","PXRMEXPS",5,0)
 S NF=+$O(PACKLIST(FILENUM,"IEN"),-1)+1
"RTN","PXRMEXPS",6,0)
 S PACKLIST(FILENUM,NF)=IEN
"RTN","PXRMEXPS",7,0)
 S PACKLIST(FILENUM,"IEN",IEN)=NF
"RTN","PXRMEXPS",8,0)
 Q
"RTN","PXRMEXPS",9,0)
 ;
"RTN","PXRMEXPS",10,0)
 ;==========================================
"RTN","PXRMEXPS",11,0)
CHKCF(ROOT,TOPIEN,GBL,PACKLIST) ;
"RTN","PXRMEXPS",12,0)
 N IEN,NAME,NUM,PARM,RIEN,ROUTINE
"RTN","PXRMEXPS",13,0)
 S IEN=""
"RTN","PXRMEXPS",14,0)
 F  S IEN=$O(@ROOT@(TOPIEN,20,"E",GBL,IEN)) Q:IEN=""  D
"RTN","PXRMEXPS",15,0)
 . I $P($G(^PXRMD(811.4,IEN,0)),U,1)'="VA-REMINDER DEFINITION" Q
"RTN","PXRMEXPS",16,0)
 . S NUM=$O(@ROOT@(TOPIEN,20,"E",GBL,IEN,"")) Q:NUM'>0
"RTN","PXRMEXPS",17,0)
 . S PARM=$P($G(@ROOT@(TOPIEN,20,NUM,15)),U,1)
"RTN","PXRMEXPS",18,0)
 . S NAME=$P(PARM,U,1)
"RTN","PXRMEXPS",19,0)
 . S RIEN=$O(^PXD(811.9,"B",NAME,"")) Q:RIEN'>0
"RTN","PXRMEXPS",20,0)
 . S ROUTINE=$$GETSRTN(811.9)_"(811.9,RIEN,.PACKLIST)"
"RTN","PXRMEXPS",21,0)
 . D @ROUTINE
"RTN","PXRMEXPS",22,0)
 Q
"RTN","PXRMEXPS",23,0)
 ;
"RTN","PXRMEXPS",24,0)
 ;==========================================
"RTN","PXRMEXPS",25,0)
EXISTS(FILENUM,IEN,PACKLIST) ;If the entry already exists remove it
"RTN","PXRMEXPS",26,0)
 ;and keep only the higher entry.
"RTN","PXRMEXPS",27,0)
 I '$D(PACKLIST(FILENUM,"IEN",IEN)) Q
"RTN","PXRMEXPS",28,0)
 N NUM
"RTN","PXRMEXPS",29,0)
 S NUM=PACKLIST(FILENUM,"IEN",IEN)
"RTN","PXRMEXPS",30,0)
 K PACKLIST(FILENUM,NUM)
"RTN","PXRMEXPS",31,0)
 Q
"RTN","PXRMEXPS",32,0)
 ;
"RTN","PXRMEXPS",33,0)
 ;==========================================
"RTN","PXRMEXPS",34,0)
GEDSUB(EDUIEN,NSUB,LIST) ;Build the recursive list of education topic
"RTN","PXRMEXPS",35,0)
 ;subtopics.
"RTN","PXRMEXPS",36,0)
 ;DBIA #3085
"RTN","PXRMEXPS",37,0)
 N IND,SUBIEN
"RTN","PXRMEXPS",38,0)
 S IND=0
"RTN","PXRMEXPS",39,0)
 F  S IND=+$O(^AUTTEDT(EDUIEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",40,0)
 . S NSUB=NSUB+1
"RTN","PXRMEXPS",41,0)
 . S SUBIEN=$P(^AUTTEDT(EDUIEN,10,IND,0),U,1)
"RTN","PXRMEXPS",42,0)
 . S LIST(NSUB)=SUBIEN
"RTN","PXRMEXPS",43,0)
 . D GEDSUB(SUBIEN,.NSUB,.LIST)
"RTN","PXRMEXPS",44,0)
 Q
"RTN","PXRMEXPS",45,0)
 ;
"RTN","PXRMEXPS",46,0)
 ;==========================================
"RTN","PXRMEXPS",47,0)
GETFNUM(GBL) ;Return the file number for a global.
"RTN","PXRMEXPS",48,0)
 S GBL="^"_GBL_"0)"
"RTN","PXRMEXPS",49,0)
 Q +$P(@GBL,U,2)
"RTN","PXRMEXPS",50,0)
 ;
"RTN","PXRMEXPS",51,0)
 ;==========================================
"RTN","PXRMEXPS",52,0)
GETSRTN(FILENUM) ;Return the save routine according to the file number.
"RTN","PXRMEXPS",53,0)
 I FILENUM=50 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",54,0)
 I FILENUM=50.6 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",55,0)
 I FILENUM=50.605 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",56,0)
 I FILENUM=60 Q "SLT^PXRMEXPS"
"RTN","PXRMEXPS",57,0)
 I FILENUM=71 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",58,0)
 I FILENUM=80 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",59,0)
 I FILENUM=80.1 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",60,0)
 I FILENUM=81 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",61,0)
 I FILENUM=101.41 Q "SODIALOG^PXRMEXPS"
"RTN","PXRMEXPS",62,0)
 I FILENUM=101.43 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",63,0)
 I FILENUM=120.51 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",64,0)
 I FILENUM=142 Q "SHST^PXRMEXPS"
"RTN","PXRMEXPS",65,0)
 I FILENUM=142.1 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",66,0)
 I FILENUM=142.5 Q "SHSO^PXRMEXPS"
"RTN","PXRMEXPS",67,0)
 I FILENUM=601.71 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",68,0)
 I FILENUM=790.404 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",69,0)
 I FILENUM=801 Q "SROC^PXRMEXPS"
"RTN","PXRMEXPS",70,0)
 I FILENUM=801.1 Q "SRULE^PXRMEXPS"
"RTN","PXRMEXPS",71,0)
 I FILENUM=801.41 Q "SDIALOG^PXRMEXPS"
"RTN","PXRMEXPS",72,0)
 I FILENUM=810.2 Q "SEDEF^PXRMEXPS"
"RTN","PXRMEXPS",73,0)
 I FILENUM=810.4 Q "SLR^PXRMEXPS"
"RTN","PXRMEXPS",74,0)
 I FILENUM=810.7 Q "SRECR^PXRMEXPS"
"RTN","PXRMEXPS",75,0)
 I FILENUM=810.8 Q "SRCG^PXRMEXPS"
"RTN","PXRMEXPS",76,0)
 I FILENUM=810.9 Q "SLL^PXRMEXPS"
"RTN","PXRMEXPS",77,0)
 I FILENUM=811.2 Q "SGENR^PXRMEXPS"
"RTN","PXRMEXPS",78,0)
 I FILENUM=811.4 Q "SCF^PXRMEXPS"
"RTN","PXRMEXPS",79,0)
 I FILENUM=811.5 Q "SRT^PXRMEXPS"
"RTN","PXRMEXPS",80,0)
 I FILENUM=811.6 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",81,0)
 I FILENUM=811.9 Q "SDEF^PXRMEXPS"
"RTN","PXRMEXPS",82,0)
 I FILENUM=8925.1 Q "STIUOBJ^PXRMEXPS"
"RTN","PXRMEXPS",83,0)
 I FILENUM=8927.1 Q "STIUTEMP^PXRMEXPS"
"RTN","PXRMEXPS",84,0)
 I FILENUM=9999999.09 Q "SED^PXRMEXPS"
"RTN","PXRMEXPS",85,0)
 I FILENUM=9999999.14 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",86,0)
 I FILENUM=9999999.15 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",87,0)
 I FILENUM=9999999.28 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",88,0)
 I FILENUM=9999999.64 Q "SHF^PXRMEXPS"
"RTN","PXRMEXPS",89,0)
 Q "NORTN^PXRMEXPS"
"RTN","PXRMEXPS",90,0)
 ;
"RTN","PXRMEXPS",91,0)
 ;==========================================
"RTN","PXRMEXPS",92,0)
NORTN(FILENUM,IEN,PACKLIST) ;Don't have a routine for this file number.
"RTN","PXRMEXPS",93,0)
 S NF=+$O(PACKLIST(FILENUM,"IEN"),-1)+1
"RTN","PXRMEXPS",94,0)
 S PACKLIST(FILENUM,NF)=IEN
"RTN","PXRMEXPS",95,0)
 S PACKLIST(FILENUM,"IEN",IEN)=NF
"RTN","PXRMEXPS",96,0)
 S PACKLIST(FILENUM,"ERROR",IEN)="No packing routine for file number "_FILENUM_"."
"RTN","PXRMEXPS",97,0)
 Q
"RTN","PXRMEXPS",98,0)
 ;
"RTN","PXRMEXPS",99,0)
 ;==========================================
"RTN","PXRMEXPS",100,0)
NOSAVE(FILENUM,IEN,PACKLIST) ;Don't do anything for this file number.
"RTN","PXRMEXPS",101,0)
 Q
"RTN","PXRMEXPS",102,0)
 ;
"RTN","PXRMEXPS",103,0)
 ;==========================================
"RTN","PXRMEXPS",104,0)
SCF(FILENUM,IEN,PACKLIST) ;Reminder computed findings.
"RTN","PXRMEXPS",105,0)
 N CFRTN
"RTN","PXRMEXPS",106,0)
 ;Add the computed finding file entry.
"RTN","PXRMEXPS",107,0)
 D SGENR(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",108,0)
 S CFRTN=$P(^PXRMD(811.4,IEN,0),U,2)
"RTN","PXRMEXPS",109,0)
 ;Add the routine; mark routines with file number 0.
"RTN","PXRMEXPS",110,0)
 D SGEN(0,CFRTN,.PACKLIST)
"RTN","PXRMEXPS",111,0)
 Q
"RTN","PXRMEXPS",112,0)
 ;
"RTN","PXRMEXPS",113,0)
 ;==========================================
"RTN","PXRMEXPS",114,0)
SDEF(FILENUM,RIEN,PACKLIST) ;Reminder definitions.
"RTN","PXRMEXPS",115,0)
 N DIALOG,ENODE,EO,FINDING,FINUM,FNUM,GBL,IEN,NF,ROUTINE,SPON
"RTN","PXRMEXPS",116,0)
 D SGENR(FILENUM,RIEN,.PACKLIST)
"RTN","PXRMEXPS",117,0)
 ;Process the finding multiple.
"RTN","PXRMEXPS",118,0)
 S FINUM=0
"RTN","PXRMEXPS",119,0)
 F  S FINUM=+$O(^PXD(811.9,RIEN,20,FINUM)) Q:FINUM=0  D
"RTN","PXRMEXPS",120,0)
 . S FINDING=$P(^PXD(811.9,RIEN,20,FINUM,0),U,1)
"RTN","PXRMEXPS",121,0)
 . S IEN=$P(FINDING,";",1)
"RTN","PXRMEXPS",122,0)
 . S GBL=$P(FINDING,";",2)
"RTN","PXRMEXPS",123,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",124,0)
 . I FNUM=811.4 D CHKCF("^PXD(811.9)",RIEN,GBL,.PACKLIST)
"RTN","PXRMEXPS",125,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",126,0)
 . D @ROUTINE
"RTN","PXRMEXPS",127,0)
 ;Dialog
"RTN","PXRMEXPS",128,0)
 S DIALOG=+$G(^PXD(811.9,RIEN,51))
"RTN","PXRMEXPS",129,0)
 I DIALOG>0,'$D(PACKLIST(801.41,"IEN",DIALOG)) D SDIALOG(801.41,DIALOG,.PACKLIST)
"RTN","PXRMEXPS",130,0)
 Q
"RTN","PXRMEXPS",131,0)
 ;
"RTN","PXRMEXPS",132,0)
 ;==========================================
"RTN","PXRMEXPS",133,0)
SDIALOG(FILENUM,DIEN,PACKLIST) ;Reminder dialogs.
"RTN","PXRMEXPS",134,0)
 I DIEN'>0 Q
"RTN","PXRMEXPS",135,0)
 N IEN,IND,FI,FNUM,GBL,MHT,OI,OLIST,REG,ROUTINE,TEMP,TERM,TLIST
"RTN","PXRMEXPS",136,0)
 D SGENR(FILENUM,DIEN,.PACKLIST)
"RTN","PXRMEXPS",137,0)
 ;Check for a finding item.
"RTN","PXRMEXPS",138,0)
 S TEMP=$G(^PXRMD(801.41,DIEN,1))
"RTN","PXRMEXPS",139,0)
 S FI=$P(TEMP,U,5)
"RTN","PXRMEXPS",140,0)
 I FI'="" D
"RTN","PXRMEXPS",141,0)
 . S IEN=$P(FI,";",1)
"RTN","PXRMEXPS",142,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMEXPS",143,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",144,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",145,0)
 . D @ROUTINE
"RTN","PXRMEXPS",146,0)
 ;Check for an orderable item.
"RTN","PXRMEXPS",147,0)
 S OI=$P(TEMP,U,7)
"RTN","PXRMEXPS",148,0)
 I OI'="" D
"RTN","PXRMEXPS",149,0)
 . S ROUTINE=$$GETSRTN(101.43)_"(101.43,OI,.PACKLIST)"
"RTN","PXRMEXPS",150,0)
 . D @ROUTINE
"RTN","PXRMEXPS",151,0)
 ;Check for additional findings.
"RTN","PXRMEXPS",152,0)
 S IND=0
"RTN","PXRMEXPS",153,0)
 F  S IND=+$O(^PXRMD(801.41,DIEN,3,IND)) Q:IND=0  D
"RTN","PXRMEXPS",154,0)
 . S FI=$P(^PXRMD(801.41,DIEN,3,IND,0),U,1)
"RTN","PXRMEXPS",155,0)
 . S IEN=$P(FI,";",1)
"RTN","PXRMEXPS",156,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMEXPS",157,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",158,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",159,0)
 . D @ROUTINE
"RTN","PXRMEXPS",160,0)
 ;Check word processing fields for TIU Object and Template Fields
"RTN","PXRMEXPS",161,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,25,.OLIST,.TLIST)
"RTN","PXRMEXPS",162,0)
 I $D(OLIST)>0 D
"RTN","PXRMEXPS",163,0)
 . S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",164,0)
 . D @ROUTINE K OLIST
"RTN","PXRMEXPS",165,0)
 I $D(TLIST)>0 D
"RTN","PXRMEXPS",166,0)
 . S ROUTINE=$$GETSRTN(8927.1)_"(8927.1,.TLIST,.PACKLIST)"
"RTN","PXRMEXPS",167,0)
 . D @ROUTINE K TLIST
"RTN","PXRMEXPS",168,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,35,.OLIST,.TLIST)
"RTN","PXRMEXPS",169,0)
 I $D(OLIST)>0 D
"RTN","PXRMEXPS",170,0)
 . S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",171,0)
 . D @ROUTINE K OLIST
"RTN","PXRMEXPS",172,0)
 I $D(TLIST)>0 D
"RTN","PXRMEXPS",173,0)
 . S ROUTINE=$$GETSRTN(8927.1)_"(8927.1,.TLIST,.PACKLIST)"
"RTN","PXRMEXPS",174,0)
 . D @ROUTINE K TLIST
"RTN","PXRMEXPS",175,0)
 ;Check the components multiple for elements.
"RTN","PXRMEXPS",176,0)
 I $D(^PXRMD(801.41,DIEN,10)) D
"RTN","PXRMEXPS",177,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,IEN,.PACKLIST)"
"RTN","PXRMEXPS",178,0)
 . S IND=0
"RTN","PXRMEXPS",179,0)
 . F  S IND=+$O(^PXRMD(801.41,DIEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",180,0)
 .. S IEN=$P(^PXRMD(801.41,DIEN,10,IND,0),U,2)
"RTN","PXRMEXPS",181,0)
 .. D @ROUTINE
"RTN","PXRMEXPS",182,0)
 ;Check for a term and a replacement element/group.
"RTN","PXRMEXPS",183,0)
 S TEMP=$G(^PXRMD(801.41,DIEN,49))
"RTN","PXRMEXPS",184,0)
 S TERM=$P(TEMP,U,1)
"RTN","PXRMEXPS",185,0)
 I TERM'="" D
"RTN","PXRMEXPS",186,0)
 . S ROUTINE=$$GETSRTN(811.5)_"(811.5,TERM,.PACKLIST)"
"RTN","PXRMEXPS",187,0)
 . D @ROUTINE
"RTN","PXRMEXPS",188,0)
 S REG=$P(TEMP,U,3)
"RTN","PXRMEXPS",189,0)
 I REG'="" D
"RTN","PXRMEXPS",190,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,REG,.PACKLIST)"
"RTN","PXRMEXPS",191,0)
 . D @ROUTINE
"RTN","PXRMEXPS",192,0)
 ;Check for a mental health test.
"RTN","PXRMEXPS",193,0)
 S MHT=$P($G(^PXRMD(801.41,DIEN,50)),U,1)
"RTN","PXRMEXPS",194,0)
 I MHT'="" D
"RTN","PXRMEXPS",195,0)
 . S ROUTINE=$$GETSRTN(601.71)_"(601.71,MHT,.PACKLIST)"
"RTN","PXRMEXPS",196,0)
 . D @ROUTINE
"RTN","PXRMEXPS",197,0)
 ;Check for result groups.
"RTN","PXRMEXPS",198,0)
 I $D(^PXRMD(801.41,DIEN,51)) D
"RTN","PXRMEXPS",199,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,IEN,.PACKLIST)"
"RTN","PXRMEXPS",200,0)
 . S IND=0
"RTN","PXRMEXPS",201,0)
 . F  S IND=+$O(^PXRMD(801.41,DIEN,51,IND)) Q:IND=0  D
"RTN","PXRMEXPS",202,0)
 .. S IEN=$P(^PXRMD(801.41,DIEN,51,IND,0),U,1)
"RTN","PXRMEXPS",203,0)
 .. D @ROUTINE
"RTN","PXRMEXPS",204,0)
 Q
"RTN","PXRMEXPS",205,0)
 ;
"RTN","PXRMEXPS",206,0)
 ;==========================================
"RTN","PXRMEXPS",207,0)
SED(FILENUM,IEN,PACKLIST) ;Education topics.
"RTN","PXRMEXPS",208,0)
 N IND,NF,NSUB,SUBLIST
"RTN","PXRMEXPS",209,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",210,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",211,0)
 S NSUB=0
"RTN","PXRMEXPS",212,0)
 ;Get all the subtopics.
"RTN","PXRMEXPS",213,0)
 D GEDSUB(IEN,.NSUB,.SUBLIST)
"RTN","PXRMEXPS",214,0)
 F IND=1:1:NSUB D
"RTN","PXRMEXPS",215,0)
 . D EXISTS(FILENUM,SUBLIST(IND),.PACKLIST)
"RTN","PXRMEXPS",216,0)
 . S NF=NF+1
"RTN","PXRMEXPS",217,0)
 . S PACKLIST(FILENUM,NF)=SUBLIST(IND)
"RTN","PXRMEXPS",218,0)
 . S PACKLIST(FILENUM,"IEN",SUBLIST(IND))=NF
"RTN","PXRMEXPS",219,0)
 Q
"RTN","PXRMEXPS",220,0)
 ;
"RTN","PXRMEXPS",221,0)
 ;==========================================
"RTN","PXRMEXPS",222,0)
SEDEF(FILENUM,IEN,PACKLIST) ;Reminder extract definitions.
"RTN","PXRMEXPS",223,0)
 N CR,CRRTN,IND,JND,LRRTN,LRS,RDEF,RDEFRTN,TEMP
"RTN","PXRMEXPS",224,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",225,0)
 ;Initialize the save routines.
"RTN","PXRMEXPS",226,0)
 S LRRTN=$$GETSRTN(810.4)_"(810.4,LRS,.PACKLIST)"
"RTN","PXRMEXPS",227,0)
 S CRRTN=$$GETSRTN(810.7)_"(810.7,CR,.PACKLIST)"
"RTN","PXRMEXPS",228,0)
 S RDEFRTN=$$GETSRTN(811.9)_"(811.9,RDEF,.PACKLIST)"
"RTN","PXRMEXPS",229,0)
 ;Go through the extract sequence.
"RTN","PXRMEXPS",230,0)
 S IND=0
"RTN","PXRMEXPS",231,0)
 F  S IND=+$O(^PXRM(810.2,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",232,0)
 . S LRS=$P(^PXRM(810.2,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",233,0)
 . D @LRRTN
"RTN","PXRMEXPS",234,0)
 .;Go through the reminders and counting rules.
"RTN","PXRMEXPS",235,0)
 . S JND=0
"RTN","PXRMEXPS",236,0)
 . F  S JND=+$O(^PXRM(810.2,IEN,10,IND,10,JND)) Q:JND=0  D
"RTN","PXRMEXPS",237,0)
 .. S TEMP=^PXRM(810.2,IEN,10,IND,10,JND,0)
"RTN","PXRMEXPS",238,0)
 .. S RDEF=$P(TEMP,U,2)
"RTN","PXRMEXPS",239,0)
 .. I RDEF'="" D @RDEFRTN
"RTN","PXRMEXPS",240,0)
 .. S CR=$P(TEMP,U,3)
"RTN","PXRMEXPS",241,0)
 .. I CR'="" D @CRRTN
"RTN","PXRMEXPS",242,0)
 Q
"RTN","PXRMEXPS",243,0)
 ;
"RTN","PXRMEXPS",244,0)
 ;==========================================
"RTN","PXRMEXPS",245,0)
SGEN(FILENUM,IEN,PACKLIST) ;General save routine, used for everything that
"RTN","PXRMEXPS",246,0)
 ;does not require special handling.
"RTN","PXRMEXPS",247,0)
 N NF
"RTN","PXRMEXPS",248,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",249,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",250,0)
 Q
"RTN","PXRMEXPS",251,0)
 ;
"RTN","PXRMEXPS",252,0)
 ;==========================================
"RTN","PXRMEXPS",253,0)
SGENR(FILENUM,IEN,PACKLIST) ;General reminder global save routine, used for
"RTN","PXRMEXPS",254,0)
 ;reminder globals that do not require special handling.
"RTN","PXRMEXPS",255,0)
 N SPON
"RTN","PXRMEXPS",256,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",257,0)
 S SPON=+$$GET1^DIQ(FILENUM,IEN,101,"I")
"RTN","PXRMEXPS",258,0)
 I SPON>0 D SGEN(811.6,SPON,.PACKLIST)
"RTN","PXRMEXPS",259,0)
 Q
"RTN","PXRMEXPS",260,0)
 ;
"RTN","PXRMEXPS",261,0)
 ;==========================================
"RTN","PXRMEXPS",262,0)
SHF(FILENUM,IEN,PACKLIST) ;Health factors.
"RTN","PXRMEXPS",263,0)
 N CAT,HF,NF
"RTN","PXRMEXPS",264,0)
 ;All health factor references covered by DBIA #3083.
"RTN","PXRMEXPS",265,0)
 ;If the health factor is a category then it has to be coming from
"RTN","PXRMEXPS",266,0)
 ;a health summary so include all the health factors in the category.
"RTN","PXRMEXPS",267,0)
 I $P(^AUTTHF(IEN,0),U,10)="C" D
"RTN","PXRMEXPS",268,0)
 . S CAT=1,HF=0
"RTN","PXRMEXPS",269,0)
 . F  S HF=$O(^AUTTHF("AC",IEN,HF)) Q:HF'>0  D
"RTN","PXRMEXPS",270,0)
 .. D EXISTS(FILENUM,HF,.PACKLIST)
"RTN","PXRMEXPS",271,0)
 .. D ADD(FILENUM,HF,.PACKLIST,.NF)
"RTN","PXRMEXPS",272,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",273,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",274,0)
 I $G(CAT) Q
"RTN","PXRMEXPS",275,0)
 ;For a regular health factor make sure the category is on the list.
"RTN","PXRMEXPS",276,0)
 S CAT=$P(^AUTTHF(IEN,0),U,3)
"RTN","PXRMEXPS",277,0)
 D EXISTS(FILENUM,CAT,.PACKLIST)
"RTN","PXRMEXPS",278,0)
 S NF=NF+1
"RTN","PXRMEXPS",279,0)
 S PACKLIST(FILENUM,NF)=CAT
"RTN","PXRMEXPS",280,0)
 S PACKLIST(FILENUM,"IEN",CAT)=NF
"RTN","PXRMEXPS",281,0)
 Q
"RTN","PXRMEXPS",282,0)
 ;
"RTN","PXRMEXPS",283,0)
 ;==========================================
"RTN","PXRMEXPS",284,0)
SHSO(FILENUM,IEN,PACKLIST) ;Health summary object.
"RTN","PXRMEXPS",285,0)
 N HST
"RTN","PXRMEXPS",286,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",287,0)
 S HST=$P($G(^GMT(142.5,IEN,0)),U,3)
"RTN","PXRMEXPS",288,0)
 S ROUTINE=$$GETSRTN(142)_"(142,HST,.PACKLIST)"
"RTN","PXRMEXPS",289,0)
 D @ROUTINE
"RTN","PXRMEXPS",290,0)
 Q
"RTN","PXRMEXPS",291,0)
 ;
"RTN","PXRMEXPS",292,0)
 ;==========================================
"RTN","PXRMEXPS",293,0)
SHST(FILENUM,IEN,PACKLIST) ;Health Summary Type
"RTN","PXRMEXPS",294,0)
 N CNT,FNUM,GBL,HSC,ITEM,NODE,ROUTINE,SEL
"RTN","PXRMEXPS",295,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",296,0)
 S CNT=0 F  S CNT=$O(^GMT(142,IEN,1,CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",297,0)
 .S HSC=$P($G(^GMT(142,IEN,1,CNT,0)),U,2)
"RTN","PXRMEXPS",298,0)
 .S ROUTINE=$$GETSRTN(142.1)_"(142.1,HSC,.PACKLIST)"
"RTN","PXRMEXPS",299,0)
 .D @ROUTINE
"RTN","PXRMEXPS",300,0)
 .;Loop through selection item, variable pointer
"RTN","PXRMEXPS",301,0)
 .S SEL=0 F  S SEL=$O(^GMT(142,IEN,1,CNT,1,SEL)) Q:SEL'>0  D
"RTN","PXRMEXPS",302,0)
 ..S NODE=$P($G(^GMT(142,IEN,1,CNT,1,SEL,0)),U)
"RTN","PXRMEXPS",303,0)
 ..I NODE'="" D
"RTN","PXRMEXPS",304,0)
 ...S ITEM=$P(NODE,";",1)
"RTN","PXRMEXPS",305,0)
 ...S GBL=$P(NODE,";",2)
"RTN","PXRMEXPS",306,0)
 ...S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",307,0)
 ...S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,ITEM,.PACKLIST)"
"RTN","PXRMEXPS",308,0)
 ...I ROUTINE="NOROUTINE" Q
"RTN","PXRMEXPS",309,0)
 ...D @ROUTINE
"RTN","PXRMEXPS",310,0)
 Q
"RTN","PXRMEXPS",311,0)
 ;
"RTN","PXRMEXPS",312,0)
 ;==========================================
"RTN","PXRMEXPS",313,0)
SLL(FILENUM,IEN,PACKLIST) ;Reminder location lists.
"RTN","PXRMEXPS",314,0)
 N CSTEXL,IND,ROUTINE
"RTN","PXRMEXPS",315,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",316,0)
 ;If CREDIT STOPS TO EXCLUDE (LIST) has been used put it on the packing
"RTN","PXRMEXPS",317,0)
 ;list.
"RTN","PXRMEXPS",318,0)
 S IND=0
"RTN","PXRMEXPS",319,0)
 F  S IND=+$O(^PXRMD(810.9,IEN,40.7,IND)) Q:IND=0  D
"RTN","PXRMEXPS",320,0)
 . S CSTEXL=$G(^PXRMD(810.9,IEN,40.7,IND,2))
"RTN","PXRMEXPS",321,0)
 . I CSTEXL="" Q
"RTN","PXRMEXPS",322,0)
 . S ROUTINE=$$GETSRTN(810.9)_"(810.9,CSTEXL,.PACKLIST)"
"RTN","PXRMEXPS",323,0)
 . D @ROUTINE
"RTN","PXRMEXPS",324,0)
 ;Save information about hospital locations which are non-transportable.
"RTN","PXRMEXPS",325,0)
 I $D(^PXRMD(810.9,IEN,44))>1 D NTHLOC^PXRMEXFI(IEN,"LOCATION LIST")
"RTN","PXRMEXPS",326,0)
 Q
"RTN","PXRMEXPS",327,0)
 ;
"RTN","PXRMEXPS",328,0)
 ;==========================================
"RTN","PXRMEXPS",329,0)
SLR(FILENUM,IEN,PACKLIST) ;Reminder list rules.
"RTN","PXRMEXPS",330,0)
 N IND,LR,RDEF,RTERM,ROUTINE,TEMP
"RTN","PXRMEXPS",331,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",332,0)
 S TEMP=^PXRM(810.4,IEN,0)
"RTN","PXRMEXPS",333,0)
 S RTERM=$P(TEMP,U,7)
"RTN","PXRMEXPS",334,0)
 I RTERM'="" D
"RTN","PXRMEXPS",335,0)
 . S ROUTINE=$$GETSRTN(811.5)_"(811.5,RTERM,.PACKLIST)"
"RTN","PXRMEXPS",336,0)
 . D @ROUTINE
"RTN","PXRMEXPS",337,0)
 S RDEF=$P(TEMP,U,10)
"RTN","PXRMEXPS",338,0)
 I RDEF'="" D
"RTN","PXRMEXPS",339,0)
 . S ROUTINE=$$GETSRTN(811.9)_"(811.9,RDEF,.PACKLIST)"
"RTN","PXRMEXPS",340,0)
 . D @ROUTINE
"RTN","PXRMEXPS",341,0)
 ;If there is a sequence save the list rules.
"RTN","PXRMEXPS",342,0)
 I '$D(^PXRM(810.4,IEN,30)) Q
"RTN","PXRMEXPS",343,0)
 S ROUTINE=$$GETSRTN(810.4)_"(810.4,LR,.PACKLIST)"
"RTN","PXRMEXPS",344,0)
 S IND=0
"RTN","PXRMEXPS",345,0)
 F  S IND=+$O(^PXRM(810.4,IEN,30,IND)) Q:IND=0  D
"RTN","PXRMEXPS",346,0)
 . S LR=$P(^PXRM(810.4,IEN,30,IND,0),U,2)
"RTN","PXRMEXPS",347,0)
 . D @ROUTINE
"RTN","PXRMEXPS",348,0)
 Q
"RTN","PXRMEXPS",349,0)
 ;
"RTN","PXRMEXPS",350,0)
 ;==========================================
"RTN","PXRMEXPS",351,0)
SLT(FILENUM,IEN,PACKLIST) ;Lab tests
"RTN","PXRMEXPS",352,0)
 I +IEN'=IEN S IEN=$P(IEN,";",3)
"RTN","PXRMEXPS",353,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",354,0)
 Q
"RTN","PXRMEXPS",355,0)
 ;
"RTN","PXRMEXPS",356,0)
 ;==========================================
"RTN","PXRMEXPS",357,0)
SODIALOG(FILENUM,IEN,PACKLIST) ;Order dialogs.
"RTN","PXRMEXPS",358,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",359,0)
 ;DBIA 5446
"RTN","PXRMEXPS",360,0)
 D EN^ORORDDSC(IEN,"ORDER DIALOG")
"RTN","PXRMEXPS",361,0)
 Q
"RTN","PXRMEXPS",362,0)
 ;
"RTN","PXRMEXPS",363,0)
 ;==========================================
"RTN","PXRMEXPS",364,0)
SRCG(FILENUM,IEN,PACKLIST) ;Reminder counting groups.
"RTN","PXRMEXPS",365,0)
 N IND,ROUTINE,TIEN
"RTN","PXRMEXPS",366,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",367,0)
 ;Put terms on the pack list.
"RTN","PXRMEXPS",368,0)
 S ROUTINE=$$GETSRTN(811.5)_"(811.5,TIEN,.PACKLIST)"
"RTN","PXRMEXPS",369,0)
 S IND=0
"RTN","PXRMEXPS",370,0)
 F  S IND=+$O(^PXRM(810.8,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",371,0)
 . S TIEN=$P(^PXRM(810.8,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",372,0)
 . D @ROUTINE
"RTN","PXRMEXPS",373,0)
 Q
"RTN","PXRMEXPS",374,0)
 ;
"RTN","PXRMEXPS",375,0)
 ;==========================================
"RTN","PXRMEXPS",376,0)
SRECR(FILENUM,IEN,PACKLIST) ;Reminder extract counting rule.
"RTN","PXRMEXPS",377,0)
 N CGIEN,IND,ROUTINE,TIEN
"RTN","PXRMEXPS",378,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",379,0)
 ;Put counting groups on the pack list.
"RTN","PXRMEXPS",380,0)
 S ROUTINE=$$GETSRTN(810.8)_"(810.8,CGIEN,.PACKLIST)"
"RTN","PXRMEXPS",381,0)
 S IND=0
"RTN","PXRMEXPS",382,0)
 F  S IND=+$O(^PXRM(810.7,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",383,0)
 . S CGIEN=$P(^PXRM(810.7,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",384,0)
 . D @ROUTINE
"RTN","PXRMEXPS",385,0)
 Q
"RTN","PXRMEXPS",386,0)
 ;
"RTN","PXRMEXPS",387,0)
 ;==========================================
"RTN","PXRMEXPS",388,0)
SRT(FILENUM,TIEN,PACKLIST) ;Reminder terms.
"RTN","PXRMEXPS",389,0)
 N FNUM,GBL,IEN,NF,ROUTINE,SPON
"RTN","PXRMEXPS",390,0)
 N ITEM,NUM,RIEN
"RTN","PXRMEXPS",391,0)
 D EXISTS(FILENUM,TIEN,.PACKLIST)
"RTN","PXRMEXPS",392,0)
 D ADD(FILENUM,TIEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",393,0)
 ;Process the finding multiple.
"RTN","PXRMEXPS",394,0)
 S GBL=""
"RTN","PXRMEXPS",395,0)
 F  S GBL=$O(^PXRMD(811.5,TIEN,20,"E",GBL)) Q:GBL=""  D
"RTN","PXRMEXPS",396,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",397,0)
 . I FNUM=811.4 D CHKCF("^PXRMD(811.5)",TIEN,GBL,.PACKLIST)
"RTN","PXRMEXPS",398,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",399,0)
 . S IEN=""
"RTN","PXRMEXPS",400,0)
 . F  S IEN=$O(^PXRMD(811.5,TIEN,20,"E",GBL,IEN)) Q:IEN=""  D @ROUTINE
"RTN","PXRMEXPS",401,0)
 ;Sponsor
"RTN","PXRMEXPS",402,0)
 S SPON=+$P(^PXRMD(811.5,TIEN,100),U,2)
"RTN","PXRMEXPS",403,0)
 I SPON>0 D SGEN(811.6,SPON,.PACKLIST)
"RTN","PXRMEXPS",404,0)
 Q
"RTN","PXRMEXPS",405,0)
 ;
"RTN","PXRMEXPS",406,0)
 ;==========================================
"RTN","PXRMEXPS",407,0)
SROC(FILENUM,ROCIEN,PACKLIST) ;Reminder Order Checks.
"RTN","PXRMEXPS",408,0)
 ;packed order check structure up
"RTN","PXRMEXPS",409,0)
 D SGENR(FILENUM,ROCIEN,.PACKLIST)
"RTN","PXRMEXPS",410,0)
 N GBL,SUB,DRCL,FNUM,OI,OLIST,PHAR,RIEN,ROUTINE,TIEN,TLIST,WPNODE
"RTN","PXRMEXPS",411,0)
 ;Process the pharmacy multiple.
"RTN","PXRMEXPS",412,0)
 S PHAR=""
"RTN","PXRMEXPS",413,0)
 F  S PHAR=$O(^PXD(801,ROCIEN,1.5,"B",PHAR)) Q:PHAR=""  D
"RTN","PXRMEXPS",414,0)
 . S IEN=$P(PHAR,";"),GBL=$P(PHAR,";",2)
"RTN","PXRMEXPS",415,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",416,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",417,0)
 . D @ROUTINE
"RTN","PXRMEXPS",418,0)
 ;packed list of Orderable Item
"RTN","PXRMEXPS",419,0)
 I $D(^PXD(801,ROCIEN,2)) D
"RTN","PXRMEXPS",420,0)
 .S SUB=0 F  S SUB=$O(^PXD(801,ROCIEN,2,SUB)) Q:SUB'>0  D
"RTN","PXRMEXPS",421,0)
 ..S OI=$P($G(^PXD(801,ROCIEN,2,SUB,0)),U) Q:OI'>0
"RTN","PXRMEXPS",422,0)
 ..S ROUTINE=$$GETSRTN(101.43)_"(101.43,OI,.PACKLIST)"
"RTN","PXRMEXPS",423,0)
 ..D @ROUTINE
"RTN","PXRMEXPS",424,0)
 ;loop through rules and packed definitions or terms
"RTN","PXRMEXPS",425,0)
 S SUB=0 F  S SUB=$O(^PXD(801,ROCIEN,3,SUB)) Q:SUB'>0  D
"RTN","PXRMEXPS",426,0)
 .S RIEN=$P($G(^PXD(801,ROCIEN,3,SUB,0)),U) Q:RIEN'>0
"RTN","PXRMEXPS",427,0)
 .S ROUTINE=$$GETSRTN(801.1)_"(801.1,RIEN,.PACKLIST)"
"RTN","PXRMEXPS",428,0)
 .D @ROUTINE
"RTN","PXRMEXPS",429,0)
 Q
"RTN","PXRMEXPS",430,0)
 ;
"RTN","PXRMEXPS",431,0)
 ;==========================================
"RTN","PXRMEXPS",432,0)
SRULE(FILENUM,RULEIEN,PACKLIST) ;Reminder Order Check Rules.
"RTN","PXRMEXPS",433,0)
 ;packed order check structure up
"RTN","PXRMEXPS",434,0)
 D SGENR(FILENUM,RULEIEN,.PACKLIST)
"RTN","PXRMEXPS",435,0)
 N OLIST,RIEN,ROUTINE,TIEN,TLIST
"RTN","PXRMEXPS",436,0)
 I $D(^PXD(801.1,RULEIEN,3,4))>0 D
"RTN","PXRMEXPS",437,0)
 .;search for TIU Objects
"RTN","PXRMEXPS",438,0)
 .D TIUSRCH^PXRMEXU1("^PXD(801.1,",RULEIEN,",4",.OLIST,.TLIST)
"RTN","PXRMEXPS",439,0)
 .I $D(OLIST)>0 D
"RTN","PXRMEXPS",440,0)
 ..S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",441,0)
 ..D @ROUTINE K OLIST
"RTN","PXRMEXPS",442,0)
 .K TLIST
"RTN","PXRMEXPS",443,0)
 .;packed term up only
"RTN","PXRMEXPS",444,0)
 S TIEN=$P($G(^PXD(801.1,RULEIEN,2)),U) I TIEN>0 D  Q
"RTN","PXRMEXPS",445,0)
 .S ROUTINE=$$GETSRTN(811.5)_"(811.5,TIEN,.PACKLIST)"
"RTN","PXRMEXPS",446,0)
 .D @ROUTINE
"RTN","PXRMEXPS",447,0)
 ;packed definition up if defined
"RTN","PXRMEXPS",448,0)
 S RIEN=$P($G(^PXD(801.1,RULEIEN,3)),U) I RIEN>0 D
"RTN","PXRMEXPS",449,0)
 .S ROUTINE=$$GETSRTN(811.9)_"(811.9,RIEN,.PACKLIST)"
"RTN","PXRMEXPS",450,0)
 .D @ROUTINE
"RTN","PXRMEXPS",451,0)
 Q
"RTN","PXRMEXPS",452,0)
 ;
"RTN","PXRMEXPS",453,0)
 ;==========================================
"RTN","PXRMEXPS",454,0)
STIUOBJ(FILENUM,OLIST,PACKLIST) ;
"RTN","PXRMEXPS",455,0)
 N ARY,CNT,HSO,IEN,NAME,ROUTINE,TEMP
"RTN","PXRMEXPS",456,0)
 S CNT=0 F  S CNT=$O(OLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",457,0)
 . S NAME=OLIST(CNT)
"RTN","PXRMEXPS",458,0)
 . ;DBIA 5447
"RTN","PXRMEXPS",459,0)
 . S IEN=$$OBJBYNAM^TIUCHECK(.ARY,NAME) I IEN=-1 Q
"RTN","PXRMEXPS",460,0)
 .;Do not ship non TIU/HS Objects
"RTN","PXRMEXPS",461,0)
 . I $G(ARY(IEN,9))'["S X=$$TIU^GMTSOBJ(" D  Q
"RTN","PXRMEXPS",462,0)
 .. D TIU^PXRMEXU5(IEN,.ARY,"TIU OBJECT")
"RTN","PXRMEXPS",463,0)
 .. D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",464,0)
 . D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",465,0)
 . S TEMP=$P($G(ARY(IEN,9)),",",2)
"RTN","PXRMEXPS",466,0)
 . S HSO=$P(TEMP,")")
"RTN","PXRMEXPS",467,0)
 . S ROUTINE=$$GETSRTN(142.5)_"(142.5,.HSO,.PACKLIST)"
"RTN","PXRMEXPS",468,0)
 . D @ROUTINE
"RTN","PXRMEXPS",469,0)
 Q
"RTN","PXRMEXPS",470,0)
 ;
"RTN","PXRMEXPS",471,0)
 ;==========================================
"RTN","PXRMEXPS",472,0)
STIUTEMP(FILENUM,TLIST,PACKLIST) ;
"RTN","PXRMEXPS",473,0)
 N CNT,IEN,NAME
"RTN","PXRMEXPS",474,0)
 S CNT=0 F  S CNT=$O(TLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",475,0)
 .S NAME=TLIST(CNT)
"RTN","PXRMEXPS",476,0)
 .S IEN=$O(^TIU(8927.1,"B",NAME,"")) Q:IEN'>0
"RTN","PXRMEXPS",477,0)
 .D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",478,0)
 Q
"RTN","PXRMEXPS",479,0)
 ;
"RTN","PXRMEXU0")
0^98^B23209797
"RTN","PXRMEXU0",1,0)
PXRMEXU0 ;SLC/PKR - Reminder exchange general utilities, #0. ;08/05/2013
"RTN","PXRMEXU0",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXU0",3,0)
 ;====================================
"RTN","PXRMEXU0",4,0)
CFOKTI(IEN,START,STOP) ;Check a computed finding to see if it can be
"RTN","PXRMEXU0",5,0)
 ;installed. Called from IOKTI^PXRMEXFI.
"RTN","PXRMEXU0",6,0)
 N INDICES,LN,OK,TEMP
"RTN","PXRMEXU0",7,0)
 S OK=1
"RTN","PXRMEXU0",8,0)
 F LN=STOP:-1:START D
"RTN","PXRMEXU0",9,0)
 . S TEMP=^PXD(811.8,IEN,100,LN,0)
"RTN","PXRMEXU0",10,0)
 . S INDICES=$P(TEMP,"~",1)
"RTN","PXRMEXU0",11,0)
 . I $P(INDICES,";",1)'=811.4 Q
"RTN","PXRMEXU0",12,0)
 .;Check for the Class field, if the value is NATIONAL then set OK=0.
"RTN","PXRMEXU0",13,0)
 . I ($P(INDICES,";",3)=100) S LN=START,OK=$S($P(TEMP,"~",2)="NATIONAL":0,1:1)
"RTN","PXRMEXU0",14,0)
 Q OK
"RTN","PXRMEXU0",15,0)
 ;
"RTN","PXRMEXU0",16,0)
 ;====================================
"RTN","PXRMEXU0",17,0)
LOC(FDA) ;Process the FDA for location lists.
"RTN","PXRMEXU0",18,0)
 ;Direct reads of ^DIC(40.7) covered by DBIA #537.
"RTN","PXRMEXU0",19,0)
 N AMIS,IEN,IENS,SFN,STOP,TEMP,TEXT
"RTN","PXRMEXU0",20,0)
 ;Stop Codes may not have a unique name, use the AMIS Reporting Stop
"RTN","PXRMEXU0",21,0)
 ;code to determine which one to use.
"RTN","PXRMEXU0",22,0)
 F SFN=810.9001,810.90011 D
"RTN","PXRMEXU0",23,0)
 . S IENS=""
"RTN","PXRMEXU0",24,0)
 . F  S IENS=$O(FDA(SFN,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",25,0)
 .. S STOP=FDA(SFN,IENS,.01)
"RTN","PXRMEXU0",26,0)
 .. S AMIS=FDA(SFN,IENS,.02)
"RTN","PXRMEXU0",27,0)
 .. S IEN=$O(^DIC(40.7,"C",AMIS,""))
"RTN","PXRMEXU0",28,0)
 .. S TEMP=$P(^DIC(40.7,IEN,0),U,1)
"RTN","PXRMEXU0",29,0)
 .. I TEMP'=STOP D  Q
"RTN","PXRMEXU0",30,0)
 ... S TEXT(1)="Name associated with AMIS stop code does not match the one in the"
"RTN","PXRMEXU0",31,0)
 ... S TEXT(2)="packed reminder:"
"RTN","PXRMEXU0",32,0)
 ... S TEXT(3)=" AMIS="_AMIS
"RTN","PXRMEXU0",33,0)
 ... S TEXT(4)=" Site Name="_TEMP
"RTN","PXRMEXU0",34,0)
 ... S TEXT(5)=" Name in packed reminder="_STOP
"RTN","PXRMEXU0",35,0)
 ... D EN^DDIOL(.TEXT)
"RTN","PXRMEXU0",36,0)
 .. S FDA(SFN,IENS,.01)="`"_IEN
"RTN","PXRMEXU0",37,0)
 Q
"RTN","PXRMEXU0",38,0)
 ;
"RTN","PXRMEXU0",39,0)
 ;====================================
"RTN","PXRMEXU0",40,0)
GETIEN(NFOUND,LIST) ;FIND^DIC has found multiple entries with the same name.
"RTN","PXRMEXU0",41,0)
 ;NFOUND is the number found, LIST is the array returned by FIND^DIC.
"RTN","PXRMEXU0",42,0)
 ;Ask the user which one they want to use.
"RTN","PXRMEXU0",43,0)
 N DIR,FN,IND,NC,X,Y
"RTN","PXRMEXU0",44,0)
 S DIR(0)="S^"
"RTN","PXRMEXU0",45,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXU0",46,0)
 . S DIR(0)=DIR(0)_IND_":"_LIST("DILIST",2,IND)_";"
"RTN","PXRMEXU0",47,0)
 S DIR("L",1)="Select one of the following to use:"
"RTN","PXRMEXU0",48,0)
 S NC=1
"RTN","PXRMEXU0",49,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXU0",50,0)
 . S NC=NC+1
"RTN","PXRMEXU0",51,0)
 . S DIR("L",NC)=IND_"- "_LIST("DILIST",1,IND)_" IEN="_LIST("DILIST",2,IND)
"RTN","PXRMEXU0",52,0)
 . S FN=$O(LIST("DILIST","ID",IND,""))
"RTN","PXRMEXU0",53,0)
 . I FN="" Q
"RTN","PXRMEXU0",54,0)
 . S NC=NC+1
"RTN","PXRMEXU0",55,0)
 . S DIR("L",NC)="    "_LIST("DILIST","ID",IND,FN)
"RTN","PXRMEXU0",56,0)
 . F  S FN=$O(LIST("DILIST","ID",IND,FN)) Q:FN=""  D
"RTN","PXRMEXU0",57,0)
 .. I $L(LIST("DILIST","ID",IND,FN))=0 Q
"RTN","PXRMEXU0",58,0)
 .. S NC=NC+1
"RTN","PXRMEXU0",59,0)
 .. S DIR("L",NC)="    "_LIST("DILIST","ID",IND,FN)
"RTN","PXRMEXU0",60,0)
 ;Truncate DIR("L") as required.
"RTN","PXRMEXU0",61,0)
 S DIR("L")=DIR("L",NC) K DIR("L",NC)
"RTN","PXRMEXU0",62,0)
 D ^DIR
"RTN","PXRMEXU0",63,0)
 I Y="^" D
"RTN","PXRMEXU0",64,0)
 . N TEXT
"RTN","PXRMEXU0",65,0)
 . S TEXT(1)="Entering ""^"" tells Reminder Exchange the entry does not exist. You will be"
"RTN","PXRMEXU0",66,0)
 . S TEXT(2)="ask for a replacement."
"RTN","PXRMEXU0",67,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMEXU0",68,0)
 Q $S($D(Y(0)):Y(0),1:0)
"RTN","PXRMEXU0",69,0)
 ;
"RTN","PXRMEXU0",70,0)
 ;====================================
"RTN","PXRMEXU0",71,0)
ISPCEFIL(FILENUM) ;Return true if FILENUM is a PCE file.
"RTN","PXRMEXU0",72,0)
 I FILENUM=9999999.09 Q 1 ;EDUCATION TOPICS
"RTN","PXRMEXU0",73,0)
 I FILENUM=9999999.15 Q 1 ;EXAM
"RTN","PXRMEXU0",74,0)
 I FILENUM=9999999.64 Q 1 ;HEALTH FACTORS
"RTN","PXRMEXU0",75,0)
 I FILENUM=9999999.14 Q 1 ;IMMUNIZATION
"RTN","PXRMEXU0",76,0)
 I FILENUM=9999999.28 Q 1 ;SKIN TEST
"RTN","PXRMEXU0",77,0)
 I FILENUM=9999999.17 Q 1 ;TREATMENT
"RTN","PXRMEXU0",78,0)
 Q 0
"RTN","PXRMEXU0",79,0)
 ;
"RTN","PXRMEXU0",80,0)
 ;====================================
"RTN","PXRMEXU0",81,0)
SFNFTC(IEN) ;Set the found/not found text line counts in the reminder
"RTN","PXRMEXU0",82,0)
 ;definition.
"RTN","PXRMEXU0",83,0)
 D SNMLA^PXRMFNFT(IEN)
"RTN","PXRMEXU0",84,0)
 D SNMLF^PXRMFNFT(IEN,20)
"RTN","PXRMEXU0",85,0)
 D SNMLF^PXRMFNFT(IEN,25)
"RTN","PXRMEXU0",86,0)
 D SNMLL^PXRMFNFT(IEN)
"RTN","PXRMEXU0",87,0)
 Q
"RTN","PXRMEXU0",88,0)
 ;
"RTN","PXRMEXU0",89,0)
 ;====================================
"RTN","PXRMEXU0",90,0)
TAX(FDA,NODE) ;Process the FDA for taxonomies. This is for the conversion from
"RTN","PXRMEXU0",91,0)
 ;the pointer based structure to Lexicon based structure.
"RTN","PXRMEXU0",92,0)
 N CODE,CODEIEN,HIGH,IENS,LOW
"RTN","PXRMEXU0",93,0)
 K ^TMP($J,NODE)
"RTN","PXRMEXU0",94,0)
 ;ICD codes.
"RTN","PXRMEXU0",95,0)
 S IENS=""
"RTN","PXRMEXU0",96,0)
 F  S IENS=$O(FDA(811.22102,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",97,0)
 . S LOW=FDA(811.22102,IENS,.01)
"RTN","PXRMEXU0",98,0)
 . S HIGH=$G(FDA(811.22102,IENS,1))
"RTN","PXRMEXU0",99,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMEXU0",100,0)
 . S ^TMP($J,NODE,"ICD",LOW,HIGH)=""
"RTN","PXRMEXU0",101,0)
 ;
"RTN","PXRMEXU0",102,0)
 ;ICP codes.
"RTN","PXRMEXU0",103,0)
 S IENS=""
"RTN","PXRMEXU0",104,0)
 F  S IENS=$O(FDA(811.22103,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",105,0)
 . S LOW=FDA(811.22103,IENS,.01)
"RTN","PXRMEXU0",106,0)
 . S HIGH=$G(FDA(811.22103,IENS,1))
"RTN","PXRMEXU0",107,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMEXU0",108,0)
 . S ^TMP($J,NODE,"ICP",LOW,HIGH)=""
"RTN","PXRMEXU0",109,0)
 ;
"RTN","PXRMEXU0",110,0)
 ;CPT codes.
"RTN","PXRMEXU0",111,0)
 S IENS=""
"RTN","PXRMEXU0",112,0)
 F  S IENS=$O(FDA(811.22104,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",113,0)
 . S LOW=FDA(811.22104,IENS,.01)
"RTN","PXRMEXU0",114,0)
 . S HIGH=$G(FDA(811.22104,IENS,1))
"RTN","PXRMEXU0",115,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMEXU0",116,0)
 . S ^TMP($J,NODE,"CPT",LOW,HIGH)=""
"RTN","PXRMEXU0",117,0)
 ;
"RTN","PXRMEXU0",118,0)
 ;Selectable ICD codes.
"RTN","PXRMEXU0",119,0)
 S IENS=""
"RTN","PXRMEXU0",120,0)
 F  S IENS=$O(FDA(811.23102,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",121,0)
 . S CODE=FDA(811.23102,IENS,.01)
"RTN","PXRMEXU0",122,0)
 . S CODE=$TR(CODE," ","")
"RTN","PXRMEXU0",123,0)
 . S ^TMP($J,NODE,"SDX",CODE)=""
"RTN","PXRMEXU0",124,0)
 . S CODEIEN=+$$EXISTS^PXRMEXIU(80,CODE,"BX")
"RTN","PXRMEXU0",125,0)
 . I CODEIEN>0 S FDA(811.23102,IENS,.01)="`"_CODEIEN
"RTN","PXRMEXU0",126,0)
 ;
"RTN","PXRMEXU0",127,0)
 ;Selectable CPT codes.
"RTN","PXRMEXU0",128,0)
 S IENS=""
"RTN","PXRMEXU0",129,0)
 F  S IENS=$O(FDA(811.23104,IENS)) Q:IENS=""  D
"RTN","PXRMEXU0",130,0)
 . S CODE=FDA(811.23104,IENS,.01)
"RTN","PXRMEXU0",131,0)
 . S CODE=$TR(CODE," ","")
"RTN","PXRMEXU0",132,0)
 . S FDA(811.23104,IENS,.01)=CODE
"RTN","PXRMEXU0",133,0)
 . S ^TMP($J,NODE,"SPR",CODE)=""
"RTN","PXRMEXU0",134,0)
 ;
"RTN","PXRMEXU0",135,0)
 ;If these fields no longer exist in the DD remove them from the FDA.
"RTN","PXRMEXU0",136,0)
 ;ICD9 range of codes.
"RTN","PXRMEXU0",137,0)
 S LABEL=$$GET1^DIQ(811.2,2103,"","LABEL")
"RTN","PXRMEXU0",138,0)
 I LABEL="" K ^FDA(811.22102)
"RTN","PXRMEXU0",139,0)
 ;
"RTN","PXRMEXU0",140,0)
 ;ICD0 range of codes.
"RTN","PXRMEXU0",141,0)
 S LABEL=$$GET1^DID(811.2,2103,"","LABEL")
"RTN","PXRMEXU0",142,0)
 I LABEL="" K ^FDA(811.22103)
"RTN","PXRMEXU0",143,0)
 ;
"RTN","PXRMEXU0",144,0)
 ;CPT range of codes.
"RTN","PXRMEXU0",145,0)
 S LABEL=$$GET1^DID(811.2,2104,"","LABEL")
"RTN","PXRMEXU0",146,0)
 I LABEL="" K ^FDA(811.22104)
"RTN","PXRMEXU0",147,0)
 ;
"RTN","PXRMEXU0",148,0)
 ;Selectable diagnosis.
"RTN","PXRMEXU0",149,0)
 S LABEL=$$GET1^DID(811.2,3102,"","LABEL")
"RTN","PXRMEXU0",150,0)
 I LABEL="" K ^FDA(811.23102)
"RTN","PXRMEXU0",151,0)
 ;
"RTN","PXRMEXU0",152,0)
 ;Selectable procedure.
"RTN","PXRMEXU0",153,0)
 S LABEL=$$GET1^DID(811.2,3104,"","LABEL")
"RTN","PXRMEXU0",154,0)
 I LABEL="" K ^FDA(811.23104)
"RTN","PXRMEXU0",155,0)
 Q
"RTN","PXRMEXU0",156,0)
 ;
"RTN","PXRMEXU0",157,0)
 ;====================================
"RTN","PXRMEXU0",158,0)
TAX30(IEN) ;Make sure the Use in Dialog Codes multiple is built during
"RTN","PXRMEXU0",159,0)
 ;a Reminder Exchange Install.
"RTN","PXRMEXU0",160,0)
 I $D(^PXD(811.2,IEN,30)) Q
"RTN","PXRMEXU0",161,0)
 I '$D(^PXD(811.2,IEN,20,"AUID")) Q
"RTN","PXRMEXU0",162,0)
 N CODE,CODESYS
"RTN","PXRMEXU0",163,0)
 S CODESYS=""
"RTN","PXRMEXU0",164,0)
 F  S CODESYS=$O(^PXD(811.2,IEN,20,"AUID",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMEXU0",165,0)
 . S CODE=""
"RTN","PXRMEXU0",166,0)
 . F  S CODE=$O(^PXD(811.2,IEN,20,"AUID",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMEXU0",167,0)
 .. D SAVEUIDC^PXRMTAXD(IEN,CODESYS,CODE)
"RTN","PXRMEXU0",168,0)
 Q
"RTN","PXRMEXU0",169,0)
 ;
"RTN","PXRMEXU1")
0^63^B36996811
"RTN","PXRMEXU1",1,0)
PXRMEXU1 ; SLC/PKR/PJH - Reminder exchange repository utilities, #1.;01/22/2013
"RTN","PXRMEXU1",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,16,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXU1",3,0)
 ;=====================================================
"RTN","PXRMEXU1",4,0)
DELETE(LIST) ;Delete the repository entries in LIST.
"RTN","PXRMEXU1",5,0)
 N DA,DIK,IND,LNUM
"RTN","PXRMEXU1",6,0)
 S DIK="^PXD(811.8,"
"RTN","PXRMEXU1",7,0)
 F IND=1:1:$L(LIST,",")-1 D
"RTN","PXRMEXU1",8,0)
 . S LNUM=$P(LIST,",",IND)
"RTN","PXRMEXU1",9,0)
 . S DA=$$RIEN^PXRMEXU1(LNUM)
"RTN","PXRMEXU1",10,0)
 . D ^DIK
"RTN","PXRMEXU1",11,0)
 Q
"RTN","PXRMEXU1",12,0)
 ;
"RTN","PXRMEXU1",13,0)
 ;=====================================================
"RTN","PXRMEXU1",14,0)
DELHIST(RIEN,IHIEN) ;Delete install history IHIEN in repository entry RIEN.
"RTN","PXRMEXU1",15,0)
 N DA,DIK
"RTN","PXRMEXU1",16,0)
 S DA=IHIEN,DA(1)=RIEN
"RTN","PXRMEXU1",17,0)
 S DIK="^PXD(811.8,"_DA(1)_",130,"
"RTN","PXRMEXU1",18,0)
 D ^DIK
"RTN","PXRMEXU1",19,0)
 Q
"RTN","PXRMEXU1",20,0)
 ;
"RTN","PXRMEXU1",21,0)
 ;=====================================================
"RTN","PXRMEXU1",22,0)
DESC(RIEN,DESL,DESC,KEYWORD) ;Build the description.
"RTN","PXRMEXU1",23,0)
 N JND,LC,NKEYWL
"RTN","PXRMEXU1",24,0)
 S LC=1,^PXD(811.8,RIEN,110,LC,0)="Source:      "_DESL("SOURCE")
"RTN","PXRMEXU1",25,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Date Packed: "_DESL("DATEP")
"RTN","PXRMEXU1",26,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Package Version: "_DESL("VRSN")
"RTN","PXRMEXU1",27,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",28,0)
 ;Add the user's description.
"RTN","PXRMEXU1",29,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Description:"
"RTN","PXRMEXU1",30,0)
 F JND=1:1:+$P($G(@DESC@(1,0)),U,4) D
"RTN","PXRMEXU1",31,0)
 . S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=@DESC@(1,JND,0)
"RTN","PXRMEXU1",32,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",33,0)
 ;Add the keywords.
"RTN","PXRMEXU1",34,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Keywords:"
"RTN","PXRMEXU1",35,0)
 S NKEYWL=+$P($G(@KEYWORD@(1,0)),U,4)
"RTN","PXRMEXU1",36,0)
 F JND=1:1:NKEYWL D
"RTN","PXRMEXU1",37,0)
 . S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=@KEYWORD@(1,JND,0)
"RTN","PXRMEXU1",38,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",39,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Components:"
"RTN","PXRMEXU1",40,0)
 S ^PXD(811.8,RIEN,110,0)=U_811.804_U_LC_U_LC
"RTN","PXRMEXU1",41,0)
 Q
"RTN","PXRMEXU1",42,0)
 ;
"RTN","PXRMEXU1",43,0)
 ;=====================================================
"RTN","PXRMEXU1",44,0)
RIEN(LNUM) ;Given the list number return the repository ien.
"RTN","PXRMEXU1",45,0)
 N RIEN
"RTN","PXRMEXU1",46,0)
 S RIEN=$G(^TMP("PXRMEXLR",$J,"SEL",LNUM))
"RTN","PXRMEXU1",47,0)
 Q RIEN
"RTN","PXRMEXU1",48,0)
 ;
"RTN","PXRMEXU1",49,0)
 ;=====================================================
"RTN","PXRMEXU1",50,0)
SAVHIST ;Save the installation history in the repository.
"RTN","PXRMEXU1",51,0)
 N ACTION,DATE,CMPNT,FTYPE,IND,INDEX,ITEM,JND,KND,NEWNAME
"RTN","PXRMEXU1",52,0)
 N SUB,TEMP,TOTAL,TYPE,USER
"RTN","PXRMEXU1",53,0)
 ;Find the first open spot in the Installation History node.
"RTN","PXRMEXU1",54,0)
 S (IND,JND)=0
"RTN","PXRMEXU1",55,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,130,IND)) S JND=JND+1 Q:(IND=0)!(IND>JND)
"RTN","PXRMEXU1",56,0)
 S IND=JND
"RTN","PXRMEXU1",57,0)
 S JND=0
"RTN","PXRMEXU1",58,0)
 F SUB="PXRMEXIA","PXRMEXIAD" D
"RTN","PXRMEXU1",59,0)
 . S INDEX=0
"RTN","PXRMEXU1",60,0)
 . F  S INDEX=$O(^TMP(SUB,$J,INDEX)) Q:+INDEX=0  D
"RTN","PXRMEXU1",61,0)
 .. S JND=JND+1
"RTN","PXRMEXU1",62,0)
 .. S CMPNT=$O(^TMP(SUB,$J,INDEX,""))
"RTN","PXRMEXU1",63,0)
 .. S ITEM=$O(^TMP(SUB,$J,INDEX,CMPNT,""))
"RTN","PXRMEXU1",64,0)
 .. S ACTION=$O(^TMP(SUB,$J,INDEX,CMPNT,ITEM,""))
"RTN","PXRMEXU1",65,0)
 .. S NEWNAME=$G(^TMP(SUB,$J,INDEX,CMPNT,ITEM,ACTION))
"RTN","PXRMEXU1",66,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,0)=INDEX_U_CMPNT_U_ITEM_U_ACTION_U_NEWNAME
"RTN","PXRMEXU1",67,0)
 ..;Set the 0 node.
"RTN","PXRMEXU1",68,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,0)=U_"811.8031A"_U_JND_U_JND
"RTN","PXRMEXU1",69,0)
 ..;Check for finding item changes and save them.
"RTN","PXRMEXU1",70,0)
 .. S FTYPE=""
"RTN","PXRMEXU1",71,0)
 .. I CMPNT["DEFINITION" S FTYPE="DEFF"
"RTN","PXRMEXU1",72,0)
 .. I CMPNT["DIALOG" S FTYPE="DIAF"
"RTN","PXRMEXU1",73,0)
 .. I CMPNT["TERM" S FTYPE="TRMF"
"RTN","PXRMEXU1",74,0)
 .. I (FTYPE'=""),($D(^TMP(SUB,$J,FTYPE))) D
"RTN","PXRMEXU1",75,0)
 ... N FI,FINDING,OFINDING
"RTN","PXRMEXU1",76,0)
 ... S KND=2
"RTN","PXRMEXU1",77,0)
 ... S FI=""
"RTN","PXRMEXU1",78,0)
 ... F  S FI=$O(^TMP(SUB,$J,FTYPE,FI)) Q:FI=""  D
"RTN","PXRMEXU1",79,0)
 .... S OFINDING=$O(^TMP(SUB,$J,FTYPE,FI,""))
"RTN","PXRMEXU1",80,0)
 .... S FINDING=^TMP(SUB,$J,FTYPE,FI,OFINDING)
"RTN","PXRMEXU1",81,0)
 .... I OFINDING=FINDING Q
"RTN","PXRMEXU1",82,0)
 .... S KND=KND+1
"RTN","PXRMEXU1",83,0)
 .... S TEMP=$E(OFINDING,1,33)
"RTN","PXRMEXU1",84,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_FINDING
"RTN","PXRMEXU1",85,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",86,0)
 ... I KND>2 D
"RTN","PXRMEXU1",87,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   Finding Changes"
"RTN","PXRMEXU1",88,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",89,0)
 ..;
"RTN","PXRMEXU1",90,0)
 ..;Check for TIU template replacements and save them.
"RTN","PXRMEXU1",91,0)
 .. I CMPNT["DIALOG" S FTYPE="DIATIU"
"RTN","PXRMEXU1",92,0)
 .. E  S FTYPE=""
"RTN","PXRMEXU1",93,0)
 .. I (FTYPE'=""),($D(^TMP(SUB,$J,FTYPE))) D
"RTN","PXRMEXU1",94,0)
 ... N OTIUT,TIUT,TYPE
"RTN","PXRMEXU1",95,0)
 ... S TYPE=""
"RTN","PXRMEXU1",96,0)
 ... S KND=2
"RTN","PXRMEXU1",97,0)
 ... F  S TYPE=$O(^TMP(SUB,$J,FTYPE,TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",98,0)
 .... S OTIUT=""
"RTN","PXRMEXU1",99,0)
 .... F  S OTIUT=$O(^TMP(SUB,$J,FTYPE,TYPE,OTIUT)) Q:OTIUT=""  D
"RTN","PXRMEXU1",100,0)
 ..... S TIUT=$G(^TMP(SUB,$J,FTYPE,TYPE,OTIUT))
"RTN","PXRMEXU1",101,0)
 ..... I OTIUT=TIUT Q
"RTN","PXRMEXU1",102,0)
 ..... I '$D(^TMP(SUB,$J,FTYPE,TYPE,OTIUT,ITEM)) Q
"RTN","PXRMEXU1",103,0)
 ..... S KND=KND+1
"RTN","PXRMEXU1",104,0)
 ..... S TEMP=$E(OTIUT,1,33)
"RTN","PXRMEXU1",105,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_TIUT
"RTN","PXRMEXU1",106,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",107,0)
 .... I KND>2 D
"RTN","PXRMEXU1",108,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   "_TYPE
"RTN","PXRMEXU1",109,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",110,0)
 ;If JND is still 0 then there was nothing to save.
"RTN","PXRMEXU1",111,0)
 I JND>0 D
"RTN","PXRMEXU1",112,0)
 .;Save the header information.
"RTN","PXRMEXU1",113,0)
 . S DATE=$$NOW^XLFDT
"RTN","PXRMEXU1",114,0)
 . S TYPE=$G(^TMP("PXRMEXIA",$J,"TYPE"))
"RTN","PXRMEXU1",115,0)
 . I TYPE="" S TYPE="INTERACTIVE"
"RTN","PXRMEXU1",116,0)
 . S USER=$$GET1^DIQ(200,DUZ,.01,"")
"RTN","PXRMEXU1",117,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,0)=DATE_U_USER_U_TYPE
"RTN","PXRMEXU1",118,0)
 . S ^PXD(811.8,PXRMRIEN,130,"B",DATE,IND)=""
"RTN","PXRMEXU1",119,0)
 .;Set the 0 node.
"RTN","PXRMEXU1",120,0)
 . S (KND,TOTAL)=0
"RTN","PXRMEXU1",121,0)
 . F  S KND=+$O(^PXD(811.8,PXRMRIEN,130,KND)) Q:KND=0  S TOTAL=TOTAL+1
"RTN","PXRMEXU1",122,0)
 . S ^PXD(811.8,PXRMRIEN,130,0)=U_"811.803DA"_U_IND_U_TOTAL
"RTN","PXRMEXU1",123,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXU1",124,0)
 K ^TMP("PXRMEXIAD",$J)
"RTN","PXRMEXU1",125,0)
 Q
"RTN","PXRMEXU1",126,0)
 ;
"RTN","PXRMEXU1",127,0)
 ;=====================================================
"RTN","PXRMEXU1",128,0)
 ;Extract TIU Objects/Templates from any WP text
"RTN","PXRMEXU1",129,0)
TIUSRCH(GLOB,IEN,NODE,OLIST,TLIST) ;
"RTN","PXRMEXU1",130,0)
 N OCNT,SUB,TCNT,TEXT
"RTN","PXRMEXU1",131,0)
 ;Add to existing arrays
"RTN","PXRMEXU1",132,0)
 S OCNT=+$O(OLIST(""),-1),TCNT=+$O(TLIST(""),-1),SUB=0
"RTN","PXRMEXU1",133,0)
 ;Scan WP fields
"RTN","PXRMEXU1",134,0)
 F  S SUB=$O(@(GLOB_IEN_","_NODE_","_SUB_")")) Q:'SUB  D
"RTN","PXRMEXU1",135,0)
 .;Get individual line
"RTN","PXRMEXU1",136,0)
 .S TEXT=$G(@(GLOB_IEN_","_NODE_","_SUB_",0)")) Q:TEXT=""
"RTN","PXRMEXU1",137,0)
 .;Most text lines will have no TIU link so ignore them
"RTN","PXRMEXU1",138,0)
 .I (TEXT'["|")&(TEXT'["{FLD:") Q
"RTN","PXRMEXU1",139,0)
 .;Templates are in format {FLD:fldname} (only applies to dialogs)
"RTN","PXRMEXU1",140,0)
 .I GLOB[801.41 D TIUXTR("{FLD:","}",TEXT,.TLIST,.TCNT)
"RTN","PXRMEXU1",141,0)
 .;Objects are in format |Objectname|
"RTN","PXRMEXU1",142,0)
 .D TIUXTR("|","|",TEXT,.OLIST,.OCNT)
"RTN","PXRMEXU1",143,0)
 Q
"RTN","PXRMEXU1",144,0)
 ;
"RTN","PXRMEXU1",145,0)
TIUXTR(SRCH,SRCH1,TEXT,OUTPUT,CNT) ;
"RTN","PXRMEXU1",146,0)
 N EXIST,IC,TXT,ONAME
"RTN","PXRMEXU1",147,0)
 S TXT=TEXT
"RTN","PXRMEXU1",148,0)
 F  D  Q:TXT'[SRCH
"RTN","PXRMEXU1",149,0)
 .S TXT=$E(TXT,$F(TXT,SRCH),$L(TXT)) Q:TXT'[SRCH1
"RTN","PXRMEXU1",150,0)
 .S ONAME=$P(TXT,SRCH1) Q:ONAME=""
"RTN","PXRMEXU1",151,0)
 .;
"RTN","PXRMEXU1",152,0)
 .;remove the valid item from the text string. This prevent problems
"RTN","PXRMEXU1",153,0)
 .;with multiple objects on one line.
"RTN","PXRMEXU1",154,0)
 .;
"RTN","PXRMEXU1",155,0)
 .S TXT=$P(TXT,ONAME_SRCH1,2)
"RTN","PXRMEXU1",156,0)
 .;Check if already selected
"RTN","PXRMEXU1",157,0)
 .S EXIST=0,IC=0
"RTN","PXRMEXU1",158,0)
 .F  S IC=$O(OUTPUT(IC)) Q:'IC  Q:EXIST  D
"RTN","PXRMEXU1",159,0)
 ..I $G(OUTPUT(IC))=ONAME S EXIST=1
"RTN","PXRMEXU1",160,0)
 .;Save array of object/template names
"RTN","PXRMEXU1",161,0)
 .I 'EXIST S CNT=CNT+1,OUTPUT(CNT)=ONAME
"RTN","PXRMEXU1",162,0)
 Q
"RTN","PXRMEXU1",163,0)
 ;
"RTN","PXRMEXU2")
0^111^B74659923
"RTN","PXRMEXU2",1,0)
PXRMEXU2 ; SLC/PKR/PJH - Reminder exchange repository utilities, #2.;08/28/2013
"RTN","PXRMEXU2",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXU2",3,0)
 ;=====================================================
"RTN","PXRMEXU2",4,0)
FDA(IND,LC,TMPIND,FILENAME) ;Build the XML FDA output.
"RTN","PXRMEXU2",5,0)
 N FIELD,FILENUM,INDEX,INDEX0,JND,SIENS,WPC
"RTN","PXRMEXU2",6,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<FILEMAN_FDA>"
"RTN","PXRMEXU2",7,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",8,0)
 ;Get the file number.
"RTN","PXRMEXU2",9,0)
 S FILENUM=""
"RTN","PXRMEXU2",10,0)
 F  S FILENUM=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU2",11,0)
 .;Get the source ien string.
"RTN","PXRMEXU2",12,0)
 . S SIENS=""
"RTN","PXRMEXU2",13,0)
 . F  S SIENS=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS)) Q:SIENS=""  D
"RTN","PXRMEXU2",14,0)
 .. S INDEX0=FILENUM_";"_SIENS
"RTN","PXRMEXU2",15,0)
 ..;Get the field number and store the data.
"RTN","PXRMEXU2",16,0)
 .. S FIELD=""
"RTN","PXRMEXU2",17,0)
 .. F  S FIELD=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXU2",18,0)
 ... S INDEX=INDEX0_";"_FIELD
"RTN","PXRMEXU2",19,0)
 ...;If there is another index past the field then this is a
"RTN","PXRMEXU2",20,0)
 ...;word-processing field.
"RTN","PXRMEXU2",21,0)
 ... I $D(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD))=11 D
"RTN","PXRMEXU2",22,0)
 .... S WPC=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD,""),-1)
"RTN","PXRMEXU2",23,0)
 .... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=INDEX_"~WP-start~"_WPC
"RTN","PXRMEXU2",24,0)
 .... F JND=1:1:WPC D
"RTN","PXRMEXU2",25,0)
 ..... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD,JND)
"RTN","PXRMEXU2",26,0)
 ... E  S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=INDEX_"~"_^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,FIELD)
"RTN","PXRMEXU2",27,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",28,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</FILEMAN_FDA>"
"RTN","PXRMEXU2",29,0)
 Q
"RTN","PXRMEXU2",30,0)
 ;
"RTN","PXRMEXU2",31,0)
 ;=====================================================
"RTN","PXRMEXU2",32,0)
IENROOT(IND,LC,TMPIND,FILENAME) ;Build the XML IEN_ROOT output.
"RTN","PXRMEXU2",33,0)
 N INDEX,VALUE
"RTN","PXRMEXU2",34,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<IEN_ROOT>"
"RTN","PXRMEXU2",35,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",36,0)
 S INDEX=0
"RTN","PXRMEXU2",37,0)
 F  S INDEX=$O(^TMP(TMPIND,$J,IND,FILENAME,INDEX)) Q:INDEX=""  D
"RTN","PXRMEXU2",38,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=INDEX_U_^TMP(TMPIND,$J,IND,FILENAME,INDEX)
"RTN","PXRMEXU2",39,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",40,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</IEN_ROOT>"
"RTN","PXRMEXU2",41,0)
 Q
"RTN","PXRMEXU2",42,0)
 ;
"RTN","PXRMEXU2",43,0)
 ;=====================================================
"RTN","PXRMEXU2",44,0)
MLWARN(FILENAME,PT01,IEN,LINE,MAXLEN) ;Issue a warning if the length of the
"RTN","PXRMEXU2",45,0)
 ;line exceeds the maximum allowed value.
"RTN","PXRMEXU2",46,0)
 N DATA,INDICES,FIELD,LEN,TEXT
"RTN","PXRMEXU2",47,0)
 S LEN=$L(LINE)
"RTN","PXRMEXU2",48,0)
 S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXU2",49,0)
 S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXU2",50,0)
 S DATA=$P(LINE,"~",2)
"RTN","PXRMEXU2",51,0)
 S TEXT(1)="Warning the following line exceeds the VistA maximum allowed length of "_MAXLEN_"."
"RTN","PXRMEXU2",52,0)
 S TEXT(2)="Therefore this Exchange entry will not transport correctly."
"RTN","PXRMEXU2",53,0)
 S TEXT(3)="Line: "_LINE
"RTN","PXRMEXU2",54,0)
 S TEXT(4)="Its length is: "_LEN
"RTN","PXRMEXU2",55,0)
 S TEXT(5)="Component: "_FILENAME
"RTN","PXRMEXU2",56,0)
 S TEXT(6)="Name: "_PT01
"RTN","PXRMEXU2",57,0)
 S TEXT(7)="IEN: "_IEN
"RTN","PXRMEXU2",58,0)
 S TEXT(8)="Field number: "_FIELD
"RTN","PXRMEXU2",59,0)
 S TEXT(9)="Value: "_DATA
"RTN","PXRMEXU2",60,0)
 S TEXT(10)=""
"RTN","PXRMEXU2",61,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMEXU2",62,0)
 H 2
"RTN","PXRMEXU2",63,0)
 Q
"RTN","PXRMEXU2",64,0)
 ;
"RTN","PXRMEXU2",65,0)
 ;=====================================================
"RTN","PXRMEXU2",66,0)
STOREPR(SUCCESS,EFNAME,TMPIND,SELLIST) ;^TMP(TMPIND,$J contains data to be
"RTN","PXRMEXU2",67,0)
 ;stored in the repository. Routines will be found in
"RTN","PXRMEXU2",68,0)
 ;^TMP(TMPIND,$J,"ROUTINE",ROUTINE NAME,n) where n is the line number.
"RTN","PXRMEXU2",69,0)
 ;File entries will be found in ^TMP(TMPIND,$J,N,FILENAME,indexes).
"RTN","PXRMEXU2",70,0)
 ;This is output from the GETS^DIQ call. There are NUMF file entries.
"RTN","PXRMEXU2",71,0)
 ;Format and store it as XML in the repository.
"RTN","PXRMEXU2",72,0)
 N DATE,DTEST,FDA,FILENAME,FILENUM,IEN
"RTN","PXRMEXU2",73,0)
 N IENROOT,IND,JND,LC,LINE,NCMPNT,NEWFILE,NUMF,PT01,RNAME
"RTN","PXRMEXU2",74,0)
 N SIENS,SOURCE,TEMP,VERSN
"RTN","PXRMEXU2",75,0)
 ;If anything went wrong in the packing process then ^TMP(TMPIND,$J
"RTN","PXRMEXU2",76,0)
 ;will not exist.
"RTN","PXRMEXU2",77,0)
 I '$D(^TMP(TMPIND,$J)) S SUCCESS=0 Q
"RTN","PXRMEXU2",78,0)
 ;
"RTN","PXRMEXU2",79,0)
 K ^TMP($J,"CIND")
"RTN","PXRMEXU2",80,0)
 K ^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",81,0)
 S ^TMP("PXRMEXRS",$J,1,0)="<?xml version=""1.0"" standalone=""yes""?>"
"RTN","PXRMEXU2",82,0)
 S ^TMP("PXRMEXRS",$J,2,0)="<REMINDER_EXCHANGE_FILE_ENTRY>"
"RTN","PXRMEXU2",83,0)
 S VERSN=$P(^PXRM(800,1,"VERSION"),U,1)
"RTN","PXRMEXU2",84,0)
 S ^TMP("PXRMEXRS",$J,3,0)="<PACKAGE_VERSION>"_VERSN_"</PACKAGE_VERSION>"
"RTN","PXRMEXU2",85,0)
 ;The pointer to the index will be on line 4 so leave room.
"RTN","PXRMEXU2",86,0)
 S LC=4
"RTN","PXRMEXU2",87,0)
 ;Save the source information.
"RTN","PXRMEXU2",88,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<SOURCE>"
"RTN","PXRMEXU2",89,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<NAME>"_$$TOXML^PXRMEXU3(^TMP(TMPIND,$J,"SRC","NAME"))_"</NAME>"
"RTN","PXRMEXU2",90,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<USER>"_$$TOXML^PXRMEXU3(^TMP(TMPIND,$J,"SRC","USER"))_"</USER>"
"RTN","PXRMEXU2",91,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<SITE>"_$$TOXML^PXRMEXU3(^TMP(TMPIND,$J,"SRC","SITE"))_"</SITE>"
"RTN","PXRMEXU2",92,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<DATE_PACKED>"_^TMP(TMPIND,$J,"SRC","DATE")_"</DATE_PACKED>"
"RTN","PXRMEXU2",93,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</SOURCE>"
"RTN","PXRMEXU2",94,0)
 ;
"RTN","PXRMEXU2",95,0)
 ;Save the description.
"RTN","PXRMEXU2",96,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<DESCRIPTION><![CDATA["
"RTN","PXRMEXU2",97,0)
 S IND=0
"RTN","PXRMEXU2",98,0)
 F  S IND=$O(^TMP(TMPIND,$J,"DESC",1,IND)) Q:+IND=0  D
"RTN","PXRMEXU2",99,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,"DESC",1,IND,0)
"RTN","PXRMEXU2",100,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="]]></DESCRIPTION>"
"RTN","PXRMEXU2",101,0)
 ;
"RTN","PXRMEXU2",102,0)
 ;Save the keywords or phrases.
"RTN","PXRMEXU2",103,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<KEYWORDS>"
"RTN","PXRMEXU2",104,0)
 S IND=0
"RTN","PXRMEXU2",105,0)
 F  S IND=$O(^TMP(TMPIND,$J,"KEYWORD",1,IND)) Q:+IND=0  D
"RTN","PXRMEXU2",106,0)
 . S TEMP=^TMP(TMPIND,$J,"KEYWORD",1,IND,0)
"RTN","PXRMEXU2",107,0)
 . I TEMP["," D
"RTN","PXRMEXU2",108,0)
 .. F JND=1:1:$L(TEMP,",") D
"RTN","PXRMEXU2",109,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<KEYWORD>"_$$TOXML^PXRMEXU3($P(TEMP,",",JND))_"</KEYWORD>"
"RTN","PXRMEXU2",110,0)
 . E  S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<KEYWORD>"_$$TOXML^PXRMEXU3(TEMP)_"</KEYWORD>"
"RTN","PXRMEXU2",111,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</KEYWORDS>"
"RTN","PXRMEXU2",112,0)
 ;
"RTN","PXRMEXU2",113,0)
 S NCMPNT=0
"RTN","PXRMEXU2",114,0)
 ;Do routines first.
"RTN","PXRMEXU2",115,0)
 S RNAME=""
"RTN","PXRMEXU2",116,0)
 F  S RNAME=$O(^TMP(TMPIND,$J,"ROUTINE",RNAME)) Q:RNAME=""  D
"RTN","PXRMEXU2",117,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<M_ROUTINE>"
"RTN","PXRMEXU2",118,0)
 . S NCMPNT=NCMPNT+1
"RTN","PXRMEXU2",119,0)
 . S ^TMP($J,"CIND",NCMPNT,"M_ROUTINE_START")=LC
"RTN","PXRMEXU2",120,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<ROUTINE_NAME>"_RNAME_"</ROUTINE_NAME>"
"RTN","PXRMEXU2",121,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<CHECKSUM>"_^TMP("PXRMEXCS",$J,"ROUTINE",RNAME)_"</CHECKSUM>"
"RTN","PXRMEXU2",122,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<CODE>"
"RTN","PXRMEXU2",123,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<![CDATA["
"RTN","PXRMEXU2",124,0)
 . S ^TMP($J,"CIND",NCMPNT,"ROUTINE_CODE_START")=LC+1
"RTN","PXRMEXU2",125,0)
 . S LINE=0
"RTN","PXRMEXU2",126,0)
 . F  S LINE=$O(^TMP(TMPIND,$J,"ROUTINE",RNAME,LINE)) Q:LINE=""  D
"RTN","PXRMEXU2",127,0)
 .. S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)=^TMP(TMPIND,$J,"ROUTINE",RNAME,LINE,0)
"RTN","PXRMEXU2",128,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="]]>"
"RTN","PXRMEXU2",129,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</CODE>"
"RTN","PXRMEXU2",130,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</M_ROUTINE>"
"RTN","PXRMEXU2",131,0)
 . S ^TMP($J,"CIND",NCMPNT,"ROUTINE_CODE_END")=LC-3
"RTN","PXRMEXU2",132,0)
 ;
"RTN","PXRMEXU2",133,0)
 ;Do file entries. For word processing fields the first line is
"RTN","PXRMEXU2",134,0)
 ;file number;source ien string;field~WP-start~line count
"RTN","PXRMEXU2",135,0)
 ;The next line count lines are the WP data.
"RTN","PXRMEXU2",136,0)
 S NUMF=+$G(^TMP(TMPIND,$J,"NUMF"))
"RTN","PXRMEXU2",137,0)
 S FILENAME=""
"RTN","PXRMEXU2",138,0)
 F IND=1:1:NUMF D
"RTN","PXRMEXU2",139,0)
 . F  S FILENAME=$O(^TMP(TMPIND,$J,IND,FILENAME)) Q:FILENAME=""  D
"RTN","PXRMEXU2",140,0)
 .. I FILENAME["IENROOT" S NEWFILE=0,IENROOT=1
"RTN","PXRMEXU2",141,0)
 .. E  S NEWFILE=1,IENROOT=0
"RTN","PXRMEXU2",142,0)
 .. I NEWFILE D
"RTN","PXRMEXU2",143,0)
 ... S FILENUM=$O(^TMP(TMPIND,$J,IND,FILENAME,""))
"RTN","PXRMEXU2",144,0)
 ... S SIENS=$O(^TMP(TMPIND,$J,IND,FILENAME,FILENUM,""))
"RTN","PXRMEXU2",145,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<FILEMAN_FILE>"
"RTN","PXRMEXU2",146,0)
 ... S NCMPNT=NCMPNT+1
"RTN","PXRMEXU2",147,0)
 ... S ^TMP($J,"CIND",NCMPNT,"FILE_START")=LC
"RTN","PXRMEXU2",148,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<FILE_NAME>"_$$TOXML^PXRMEXU3(FILENAME)_"</FILE_NAME>"
"RTN","PXRMEXU2",149,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<FILE_NUMBER>"_FILENUM_"</FILE_NUMBER>"
"RTN","PXRMEXU2",150,0)
 ... S LC=LC+1,PT01=^TMP(TMPIND,$J,IND,FILENAME,FILENUM,SIENS,.01)
"RTN","PXRMEXU2",151,0)
 ... S ^TMP("PXRMEXRS",$J,LC,0)="<POINT_01>"_$$TOXML^PXRMEXU3(PT01)_"</POINT_01>"
"RTN","PXRMEXU2",152,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<INTERNAL_ENTRY_NUMBER>"_+SIENS_"</INTERNAL_ENTRY_NUMBER>"
"RTN","PXRMEXU2",153,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<CHECKSUM>"_^TMP("PXRMEXCS",$J,IND,FILENAME)_"</CHECKSUM>"
"RTN","PXRMEXU2",154,0)
 ... S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<SELECTED>"_$S($D(SELLIST(FILENUM,"IEN",+SIENS)):"YES",1:"NO")_"</SELECTED>"
"RTN","PXRMEXU2",155,0)
 ... S ^TMP($J,"CIND",NCMPNT,"FDA_START")=LC+3
"RTN","PXRMEXU2",156,0)
 ... D FDA(IND,.LC,TMPIND,FILENAME)
"RTN","PXRMEXU2",157,0)
 ... S ^TMP($J,"CIND",NCMPNT,"FDA_END")=LC-2
"RTN","PXRMEXU2",158,0)
 ..;The ien root information always comes after the FDA.
"RTN","PXRMEXU2",159,0)
 .. I IENROOT D
"RTN","PXRMEXU2",160,0)
 ... S ^TMP($J,"CIND",NCMPNT,"IEN_ROOT_START")=LC+3
"RTN","PXRMEXU2",161,0)
 ... D IENROOT(IND,.LC,TMPIND,FILENAME)
"RTN","PXRMEXU2",162,0)
 ... S ^TMP($J,"CIND",NCMPNT,"IEN_ROOT_END")=LC-2
"RTN","PXRMEXU2",163,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</FILEMAN_FILE>"
"RTN","PXRMEXU2",164,0)
 ;Save the index.
"RTN","PXRMEXU2",165,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,4,0)="<INDEX_AT>"_LC_"</INDEX_AT>"
"RTN","PXRMEXU2",166,0)
 S ^TMP("PXRMEXRS",$J,LC,0)="<INDEX>"
"RTN","PXRMEXU2",167,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<NUMBER_OF_COMPONENTS>"_NCMPNT_"</NUMBER_OF_COMPONENTS>"
"RTN","PXRMEXU2",168,0)
 F IND=1:1:NCMPNT D
"RTN","PXRMEXU2",169,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<COMPONENT>"
"RTN","PXRMEXU2",170,0)
 . S JND=""
"RTN","PXRMEXU2",171,0)
 . F  S JND=$O(^TMP($J,"CIND",IND,JND)) Q:JND=""  D
"RTN","PXRMEXU2",172,0)
 .. S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="<"_JND_">"_^TMP($J,"CIND",IND,JND)_"</"_JND_">"
"RTN","PXRMEXU2",173,0)
 . S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</COMPONENT>"
"RTN","PXRMEXU2",174,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</INDEX>"
"RTN","PXRMEXU2",175,0)
 S LC=LC+1,^TMP("PXRMEXRS",$J,LC,0)="</REMINDER_EXCHANGE_FILE_ENTRY>"
"RTN","PXRMEXU2",176,0)
 ;Establish the entry in the repository.
"RTN","PXRMEXU2",177,0)
 S SOURCE=^TMP(TMPIND,$J,"SRC","USER")_" at "_^TMP(TMPIND,$J,"SRC","SITE")
"RTN","PXRMEXU2",178,0)
 S DATE=^TMP(TMPIND,$J,"SRC","DATE")
"RTN","PXRMEXU2",179,0)
 S FDA(811.8,"+1,",.01)=EFNAME
"RTN","PXRMEXU2",180,0)
 S FDA(811.8,"+1,",.02)=SOURCE
"RTN","PXRMEXU2",181,0)
 S FDA(811.8,"+1,",.03)=DATE
"RTN","PXRMEXU2",182,0)
 D UPDATE^PXRMEXPU(.SUCCESS,.FDA,.IENROOT)
"RTN","PXRMEXU2",183,0)
 I SUCCESS D
"RTN","PXRMEXU2",184,0)
 . M ^PXD(811.8,IENROOT(1),100)=^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",185,0)
 .;Set the 0 node.
"RTN","PXRMEXU2",186,0)
 . S ^PXD(811.8,IENROOT(1),100,0)=U_811.801_U_LC_U_LC
"RTN","PXRMEXU2",187,0)
 .;Create the description for this repository entry.
"RTN","PXRMEXU2",188,0)
 . N DESC,DESL,KEYWORD
"RTN","PXRMEXU2",189,0)
 . S DESL("SOURCE")=^TMP(TMPIND,$J,"SRC","USER")_" at "_^TMP(TMPIND,$J,"SRC","SITE")
"RTN","PXRMEXU2",190,0)
 . S DESL("DATEP")=^TMP(TMPIND,$J,"SRC","DATE")
"RTN","PXRMEXU2",191,0)
 . S DESL("VRSN")=VERSN
"RTN","PXRMEXU2",192,0)
 . S DESC="^TMP(TMPIND,$J,""DESC"")"
"RTN","PXRMEXU2",193,0)
 . S KEYWORD="^TMP(TMPIND,$J,""KEYWORD"")"
"RTN","PXRMEXU2",194,0)
 . D DESC^PXRMEXU1(IENROOT(1),.DESL,$NA(@DESC),$NA(@KEYWORD))
"RTN","PXRMEXU2",195,0)
 . F IND=1:1:LC D
"RTN","PXRMEXU2",196,0)
 .. S LINE=^TMP("PXRMEXRS",$J,IND,0)
"RTN","PXRMEXU2",197,0)
 .. I LINE["<FILE_NAME>" S FILENAME=$$GETTAGV^PXRMEXU3(LINE,"<FILE_NAME>",1)
"RTN","PXRMEXU2",198,0)
 .. I LINE["<POINT_01>" S PT01=$$GETTAGV^PXRMEXU3(LINE,"<POINT_01>",1)
"RTN","PXRMEXU2",199,0)
 .. I LINE["<INTERNAL_ENTRY_NUMBER>" S IEN=$$GETTAGV^PXRMEXU3(LINE,"<INTERNAL_ENTRY_NUMBER>",1)
"RTN","PXRMEXU2",200,0)
 ..;Use 245 to be conservative.
"RTN","PXRMEXU2",201,0)
 .. I $L(LINE)<246 Q
"RTN","PXRMEXU2",202,0)
 .. D MLWARN(FILENAME,PT01,IEN,LINE,245)
"RTN","PXRMEXU2",203,0)
 K ^TMP($J,"CIND"),^TMP("PXRMEXRS",$J)
"RTN","PXRMEXU2",204,0)
 K ^TMP(TMPIND,$J),^TMP("PXRMEXCS",$J)
"RTN","PXRMEXU2",205,0)
 Q
"RTN","PXRMEXU2",206,0)
 ;
"RTN","PXRMEXU2",207,0)
 ;=====================================================
"RTN","PXRMEXU2",208,0)
XMLOUT(IEN) ;Write out the XML content of repository entry ien.
"RTN","PXRMEXU2",209,0)
 N LC,NLINES
"RTN","PXRMEXU2",210,0)
 S NLINES=$O(^PXD(811.8,IEN,100,""),-1)
"RTN","PXRMEXU2",211,0)
 F LC=1:1:NLINES W !,^PXD(811.8,IEN,100,LC,0)
"RTN","PXRMEXU2",212,0)
 Q
"RTN","PXRMEXU2",213,0)
 ;
"RTN","PXRMEXU4")
0^100^B182800125
"RTN","PXRMEXU4",1,0)
PXRMEXU4 ;SLC/PJH,PKR - Reminder Exchange #4, dialog changes. ;05/07/2014
"RTN","PXRMEXU4",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,22,26**;Feb 04, 2005;Build 404
"RTN","PXRMEXU4",3,0)
 ;===============================================
"RTN","PXRMEXU4",4,0)
DLG(FDA,NAMECHG) ;Check the dialog for renamed entries, called by
"RTN","PXRMEXU4",5,0)
 ;silent installer. KIDSDONE is newed in INSDLG^PXRMEXSI.
"RTN","PXRMEXU4",6,0)
 N ABBR,ACTION,ALIST,DNAM,IEN,IENS,ISACT,FILENUM,FINDING,NEWNAM,OFINDING
"RTN","PXRMEXU4",7,0)
 N ORITEM,OORITEM,PT01,RESULT,RRG,SRC,TEMP,TEXT,WP
"RTN","PXRMEXU4",8,0)
 S IENS=$O(FDA(801.41,""))
"RTN","PXRMEXU4",9,0)
 ;Definition .01
"RTN","PXRMEXU4",10,0)
 S (PT01,DNAM)=FDA(801.41,IENS,.01)
"RTN","PXRMEXU4",11,0)
 I $D(NAMECHG(801.41,PT01)) D
"RTN","PXRMEXU4",12,0)
 .S (FDA(801.41,IENS,.01),DNAM)=NAMECHG(801.41,PT01)
"RTN","PXRMEXU4",13,0)
 ;
"RTN","PXRMEXU4",14,0)
 ;Build list of finding types
"RTN","PXRMEXU4",15,0)
 D BLDALIST^PXRMVPTR(801.4118,.01,.ALIST)
"RTN","PXRMEXU4",16,0)
 ;Plus field 15 files
"RTN","PXRMEXU4",17,0)
 S ALIST("MH")=601.71,ALIST("TX")=811.2
"RTN","PXRMEXU4",18,0)
 S ALIST("WH")=790.404
"RTN","PXRMEXU4",19,0)
 ;Plus field 17 file
"RTN","PXRMEXU4",20,0)
 S ALIST("OI")=101.43
"RTN","PXRMEXU4",21,0)
 ;
"RTN","PXRMEXU4",22,0)
 ;Process SOURCE REMINDER
"RTN","PXRMEXU4",23,0)
 S SRC=$G(FDA(801.41,IENS,2))
"RTN","PXRMEXU4",24,0)
 I SRC]"" D
"RTN","PXRMEXU4",25,0)
 .S IEN=$$EXISTS^PXRMEXIU(811.9,SRC)
"RTN","PXRMEXU4",26,0)
 .I IEN=0 K FDA(801.41,IENS,2)
"RTN","PXRMEXU4",27,0)
 ;
"RTN","PXRMEXU4",28,0)
 ;Clear RESULT if not defined
"RTN","PXRMEXU4",29,0)
 S RESULT=$G(FDA(801.41,IENS,55))
"RTN","PXRMEXU4",30,0)
 I RESULT]"" D
"RTN","PXRMEXU4",31,0)
 .S IEN=$$EXISTS^PXRMEXIU(801.41,RESULT)
"RTN","PXRMEXU4",32,0)
 .I IEN=0 K FDA(801.41,IENS,55)
"RTN","PXRMEXU4",33,0)
 ;
"RTN","PXRMEXU4",34,0)
 ;Process ORDERABLE ITEM
"RTN","PXRMEXU4",35,0)
 S (ORITEM,OORITEM)=$G(FDA(801.41,IENS,17)),ACTION=""
"RTN","PXRMEXU4",36,0)
 I ORITEM'="" D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",37,0)
 .S TEXT=""
"RTN","PXRMEXU4",38,0)
 .S PT01=ORITEM
"RTN","PXRMEXU4",39,0)
 .S ABBR="OI",FILENUM=$P(ALIST(ABBR),U)
"RTN","PXRMEXU4",40,0)
 .I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",41,0)
 ..S ORITEM=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",42,0)
 ..S FDA(801.41,IENS,17)=ORITEM
"RTN","PXRMEXU4",43,0)
 .S IEN=+$$VFIND1^PXRMEXIU(ABBR_"."_ORITEM,.ALIST)
"RTN","PXRMEXU4",44,0)
 .I IEN>0,$$VDLGFIND^PXRMEXIU(ABBR,ORITEM,.ALIST)=0 D
"RTN","PXRMEXU4",45,0)
 ..S IEN=0
"RTN","PXRMEXU4",46,0)
 ..S TEXT="ORDERABLE ITEM  entry "_ORITEM_" is inactive."
"RTN","PXRMEXU4",47,0)
 .I IEN>0 S FDA(801.41,IENS,17)="`"_IEN
"RTN","PXRMEXU4",48,0)
 .I IEN=0 D
"RTN","PXRMEXU4",49,0)
 ..;Get replacement
"RTN","PXRMEXU4",50,0)
 ..I TEXT="" S TEXT="ORDERABLE ITEM  entry "_ORITEM_" does not exist."
"RTN","PXRMEXU4",51,0)
 ..N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",52,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU4",53,0)
 ..S MSG(2)=TEXT
"RTN","PXRMEXU4",54,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",55,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR) I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",56,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU4",57,0)
 ..I ACTION="D" K FDA(801.41,IENS,17) Q
"RTN","PXRMEXU4",58,0)
 ..S DIC=FILENUM
"RTN","PXRMEXU4",59,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",60,0)
 ..S DIC("S")="I $$FILESCR^PXRMDLG6(Y,FILENUM)=1"
"RTN","PXRMEXU4",61,0)
 ..S Y=-1
"RTN","PXRMEXU4",62,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU4",63,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",64,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",65,0)
 ...D ^DIC
"RTN","PXRMEXU4",66,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",67,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",68,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",69,0)
 ...I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",70,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",71,0)
 ..S ORITEM=$P(Y,U,2)
"RTN","PXRMEXU4",72,0)
 ..S FDA(801.41,IENS,17)=ORITEM
"RTN","PXRMEXU4",73,0)
 .;Save the finding information for the history.
"RTN","PXRMEXU4",74,0)
 .I ORITEM'=OORITEM D
"RTN","PXRMEXU4",75,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),ABBR_"."_OORITEM)=ABBR_"."_ORITEM
"RTN","PXRMEXU4",76,0)
 ;
"RTN","PXRMEXU4",77,0)
 ;check for pre-packed patch 26 codes and taxonomy.
"RTN","PXRMEXU4",78,0)
 D TAXCONV(.FDA,IENS)
"RTN","PXRMEXU4",79,0)
 ;Process FINDING ITEM
"RTN","PXRMEXU4",80,0)
 ;S TAXCONVD=0
"RTN","PXRMEXU4",81,0)
 S (FINDING,OFINDING)=$G(FDA(801.41,IENS,15)),ACTION=""
"RTN","PXRMEXU4",82,0)
 I FINDING'="" D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",83,0)
 .S TEXT=""
"RTN","PXRMEXU4",84,0)
 .S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",85,0)
 .S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",86,0)
 .S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",87,0)
 .I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",88,0)
 ..S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",89,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",90,0)
 .S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",91,0)
 .I IEN>0 S TEMP=$$VDLGFIND^PXRMEXIU(ABBR,IEN,.ALIST) I TEMP<1 D
"RTN","PXRMEXU4",92,0)
 ..S IEN=0
"RTN","PXRMEXU4",93,0)
 ..S TEXT="FINDING  entry "_FINDING_" "_$S(TEMP=0:"is inactive.",1:" does not have codes marked to be used in a dialog.")
"RTN","PXRMEXU4",94,0)
 .I IEN>0 S FDA(801.41,IENS,15)=ABBR_".`"_IEN
"RTN","PXRMEXU4",95,0)
 .I IEN=0 D
"RTN","PXRMEXU4",96,0)
 ..I TEXT="" S TEXT="FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",97,0)
 ..;Get replacement
"RTN","PXRMEXU4",98,0)
 ..N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",99,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU4",100,0)
 ..S MSG(2)=TEXT
"RTN","PXRMEXU4",101,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",102,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR) I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",103,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU4",104,0)
 ..I ACTION="D" K FDA(801.41,IENS,15) Q
"RTN","PXRMEXU4",105,0)
 ..S DIC=FILENUM
"RTN","PXRMEXU4",106,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",107,0)
 ..S DIC("S")="I $$FILESCR^PXRMDLG6(Y,FILENUM)=1"
"RTN","PXRMEXU4",108,0)
 ..S Y=-1
"RTN","PXRMEXU4",109,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU4",110,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",111,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",112,0)
 ...D ^DIC
"RTN","PXRMEXU4",113,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",114,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",115,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",116,0)
 ...I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",117,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",118,0)
 ..S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",119,0)
 ..S FDA(801.41,IENS,15)=FINDING
"RTN","PXRMEXU4",120,0)
 .;Save the finding information for the history.
"RTN","PXRMEXU4",121,0)
 .I FINDING'=OFINDING D
"RTN","PXRMEXU4",122,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",123,0)
 .;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",124,0)
 .;I $P(FINDING,".")="ICD9" S FDA(801.41,IENS,15)="ICD9."_$$ICD9(FINDING)
"RTN","PXRMEXU4",125,0)
 ;
"RTN","PXRMEXU4",126,0)
 ;Look for replacements of TIU templates.
"RTN","PXRMEXU4",127,0)
 I $D(NAMECHG(8927.1)) D
"RTN","PXRMEXU4",128,0)
 .S WP=$G(FDA(801.41,IENS,25))
"RTN","PXRMEXU4",129,0)
 .I WP'="" D TIURPL("{FLD:",WP,.NAMECHG,8927.1)
"RTN","PXRMEXU4",130,0)
 .S WP=$G(FDA(801.41,IENS,35))
"RTN","PXRMEXU4",131,0)
 ;
"RTN","PXRMEXU4",132,0)
 ;Process ADDITIONAL FINDINGS
"RTN","PXRMEXU4",133,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",134,0)
 F  S IENS=$O(FDA(801.4118,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",135,0)
 . S TEXT=""
"RTN","PXRMEXU4",136,0)
 . S (FINDING,OFINDING)=FDA(801.4118,IENS,.01)
"RTN","PXRMEXU4",137,0)
 . S ABBR=$P(FINDING,".",1)
"RTN","PXRMEXU4",138,0)
 . S PT01=$P(FINDING,".",2)
"RTN","PXRMEXU4",139,0)
 . S FILENUM=$P(ALIST(ABBR),U,1)
"RTN","PXRMEXU4",140,0)
 . I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXU4",141,0)
 .. S FINDING=ABBR_"."_NAMECHG(FILENUM,PT01)
"RTN","PXRMEXU4",142,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",143,0)
 . S IEN=+$$VFIND1^PXRMEXIU(FINDING,.ALIST)
"RTN","PXRMEXU4",144,0)
 .I IEN>0 S TEMP=$$VDLGFIND^PXRMEXIU(ABBR,IEN,.ALIST) I TEMP<1 D
"RTN","PXRMEXU4",145,0)
 ..S IEN=0
"RTN","PXRMEXU4",146,0)
 ..S TEXT="ADDITIONAL FINDING  entry "_FINDING_" "_$S(TEMP=0:"is inactive.",1:" does not have codes marked to be used in a dialog.")
"RTN","PXRMEXU4",147,0)
 .I IEN>0 S FDA(801.4118,IENS,.01)=ABBR_".`"_IEN
"RTN","PXRMEXU4",148,0)
 . I IEN=0 D  Q:ACTION="Q"
"RTN","PXRMEXU4",149,0)
 ..;Get replacement
"RTN","PXRMEXU4",150,0)
 .. I TEXT="" S TEXT="ADDITIONAL FINDING entry "_FINDING_" does not exist."
"RTN","PXRMEXU4",151,0)
 .. N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",152,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",153,0)
 .. S MSG(2)=TEXT
"RTN","PXRMEXU4",154,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",155,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR)
"RTN","PXRMEXU4",156,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",157,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",158,0)
 .. I ACTION="D" K FDA(801.4118,IENS) Q
"RTN","PXRMEXU4",159,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",160,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",161,0)
 .. S DIC("S")="I $$FILESCR^PXRMDLG6(Y,FILENUM)=1"
"RTN","PXRMEXU4",162,0)
 .. S Y=-1
"RTN","PXRMEXU4",163,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",164,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",165,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",166,0)
 ... D ^DIC
"RTN","PXRMEXU4",167,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",168,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",169,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",170,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",171,0)
 .. S FINDING=ABBR_"."_$P(Y,U,2)
"RTN","PXRMEXU4",172,0)
 .. S FDA(801.4118,IENS,.01)=FINDING
"RTN","PXRMEXU4",173,0)
 . ;Save the finding information for the history.
"RTN","PXRMEXU4",174,0)
 . I FINDING'=OFINDING D
"RTN","PXRMEXU4",175,0)
 .. S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),OFINDING)=FINDING
"RTN","PXRMEXU4",176,0)
 . ;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",177,0)
 . ;I $P(FINDING,".")="ICD9" S FDA(801.4118,IENS,.01)="ICD9."_$$ICD9(FINDING)
"RTN","PXRMEXU4",178,0)
 ;
"RTN","PXRMEXU4",179,0)
 I ACTION="Q" S PXRMDONE=1 Q
"RTN","PXRMEXU4",180,0)
 ;Process DIALOG COMPONENT
"RTN","PXRMEXU4",181,0)
 S IENS="",ACTION=""
"RTN","PXRMEXU4",182,0)
 F  S IENS=$O(FDA(801.412,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",183,0)
 . S PT01=$G(FDA(801.412,IENS,2)) Q:PT01=""
"RTN","PXRMEXU4",184,0)
 . S FILENUM=801.41,NEWNAM=$G(NAMECHG(FILENUM,PT01))
"RTN","PXRMEXU4",185,0)
 .I NEWNAM'="" D
"RTN","PXRMEXU4",186,0)
 .. S FDA(801.412,IENS,2)=NEWNAM,PT01=NEWNAM
"RTN","PXRMEXU4",187,0)
 .S IEN=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXU4",188,0)
 .I IEN=0 D
"RTN","PXRMEXU4",189,0)
 ..;Get replacement
"RTN","PXRMEXU4",190,0)
 .. N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",191,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",192,0)
 .. S MSG(2)="COMPONENT DIALOG entry "_PT01_" does not exist."
"RTN","PXRMEXU4",193,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",194,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR)
"RTN","PXRMEXU4",195,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",196,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",197,0)
 .. I ACTION="D" K FDA(801.412,IENS) Q
"RTN","PXRMEXU4",198,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",199,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",200,0)
 .. S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMEXU4",201,0)
 .. S Y=-1
"RTN","PXRMEXU4",202,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",203,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",204,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",205,0)
 ... D ^DIC
"RTN","PXRMEXU4",206,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",207,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",208,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",209,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",210,0)
 .. I Y'="" S FDA(801.412,IENS,2)=$P(Y,U,2)
"RTN","PXRMEXU4",211,0)
 ;Process Result Groups
"RTN","PXRMEXU4",212,0)
 F  S IENS=$O(FDA(801.41121,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1 Q
"RTN","PXRMEXU4",213,0)
 . S PT01=$G(FDA(801.41121,IENS,.01)) Q:PT01=""
"RTN","PXRMEXU4",214,0)
 . S FILENUM=801.41,NEWNAM=$G(NAMECHG(FILENUM,PT01))
"RTN","PXRMEXU4",215,0)
 .I NEWNAM'="" D
"RTN","PXRMEXU4",216,0)
 .. S FDA(801.41121,IENS,2)=NEWNAM,PT01=NEWNAM
"RTN","PXRMEXU4",217,0)
 .S IEN=$$EXISTS^PXRMEXIU(FILENUM,PT01)
"RTN","PXRMEXU4",218,0)
 .I IEN=0 D
"RTN","PXRMEXU4",219,0)
 ..;Get replacement
"RTN","PXRMEXU4",220,0)
 .. N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU4",221,0)
 .. S MSG(1)=" "
"RTN","PXRMEXU4",222,0)
 .. S MSG(2)="RESULT GROUP entry "_PT01_" does not exist."
"RTN","PXRMEXU4",223,0)
 .. D MES^XPDUTL(.MSG)
"RTN","PXRMEXU4",224,0)
 .. S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR)
"RTN","PXRMEXU4",225,0)
 .. I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU4",226,0)
 .. I ACTION="Q" Q
"RTN","PXRMEXU4",227,0)
 .. I ACTION="D" K FDA(801.41121,IENS) Q
"RTN","PXRMEXU4",228,0)
 .. S DIC=FILENUM
"RTN","PXRMEXU4",229,0)
 .. S DIC(0)="AEMNQ"
"RTN","PXRMEXU4",230,0)
 .. S DIC("S")="I ""S""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMEXU4",231,0)
 .. S Y=-1
"RTN","PXRMEXU4",232,0)
 .. F  Q:+Y'=-1  D
"RTN","PXRMEXU4",233,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU4",234,0)
 ... I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU4",235,0)
 ... D ^DIC
"RTN","PXRMEXU4",236,0)
 ... I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU4",237,0)
 ... I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU4",238,0)
 ... I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU4",239,0)
 .. I Y="" S ACTION="Q" Q
"RTN","PXRMEXU4",240,0)
 .. I Y'="" S FDA(801.41121,IENS,.01)=$P(Y,U,2)
"RTN","PXRMEXU4",241,0)
 Q
"RTN","PXRMEXU4",242,0)
 ;
"RTN","PXRMEXU4",243,0)
 ;===============================================
"RTN","PXRMEXU4",244,0)
 ;Convert ICD9 codes to `ien format
"RTN","PXRMEXU4",245,0)
ICD9(CODE) ;
"RTN","PXRMEXU4",246,0)
 N IEN
"RTN","PXRMEXU4",247,0)
 S IEN=$$FIND1^DIC(80,"","AMX",$P(CODE,".",2,99))
"RTN","PXRMEXU4",248,0)
 I 'IEN Q ""
"RTN","PXRMEXU4",249,0)
 Q IEN
"RTN","PXRMEXU4",250,0)
 ;
"RTN","PXRMEXU4",251,0)
SETWARN(TEXT) ;
"RTN","PXRMEXU4",252,0)
 S TEXT(1)="PREVIOUSLY THE DIALOG WAS SET TO BOTH CURRENT AND HISTORICAL ENCOUNTERS."
"RTN","PXRMEXU4",253,0)
 S TEXT(2)="DIALOG IS NOW SET TO CURRENT ENCOUNTER ONLY."
"RTN","PXRMEXU4",254,0)
 S TEXT(3)="REVIEW THE DIALOG BEFORE USING IN CPRS."
"RTN","PXRMEXU4",255,0)
 Q
"RTN","PXRMEXU4",256,0)
 ;
"RTN","PXRMEXU4",257,0)
TAXARRAY(FINDING,CNT,ARRAY) ;
"RTN","PXRMEXU4",258,0)
 ; add to code list to create a new taxonomy
"RTN","PXRMEXU4",259,0)
 N CODE,CODESYS,IEN
"RTN","PXRMEXU4",260,0)
 S CODESYS=$P(FINDING,"."),CODE=$P(FINDING,".",2,99)
"RTN","PXRMEXU4",261,0)
 I $P(CODESYS,".")'["ICD9",$P(CODESYS,".")'["CPT" Q
"RTN","PXRMEXU4",262,0)
 S CODESYSN=$S(CODESYS[9:"ICD",1:"CPT")
"RTN","PXRMEXU4",263,0)
 S IEN=$$EXISTS^PXRMEXIU($S(CODESYSN="ICD":80,1:81),CODE)
"RTN","PXRMEXU4",264,0)
 S CNT=CNT+1,ARRAY("CODE",CODESYSN,IEN)="I"_U_1
"RTN","PXRMEXU4",265,0)
 Q
"RTN","PXRMEXU4",266,0)
 ;
"RTN","PXRMEXU4",267,0)
TAXCONV(FDA,IENS) ;
"RTN","PXRMEXU4",268,0)
 ; FINDING ITEM FDA(801.41,IENS,15)
"RTN","PXRMEXU4",269,0)
 ; ADDITIONAL FINDINGS FDA(801.4118,IENS)
"RTN","PXRMEXU4",270,0)
 N ADDIENS,ARRAY,CNT,ERROR,FINDING,FINDS,ISFNDFLD,LAST,NAME,OCNT,TAX,TAXNAME,TEMP,TFINDS
"RTN","PXRMEXU4",271,0)
 S ISFNDFLD=0,CNT=0
"RTN","PXRMEXU4",272,0)
 ;if finding is taxonomy add the correct fields to the element
"RTN","PXRMEXU4",273,0)
 S FINDING=$G(FDA(801.41,IENS,15))
"RTN","PXRMEXU4",274,0)
 I $P(FINDING,".")="TX" D TAXCONV1(.FDA,IENS,FINDING) Q
"RTN","PXRMEXU4",275,0)
 ;
"RTN","PXRMEXU4",276,0)
 I FINDING'="" D
"RTN","PXRMEXU4",277,0)
 .D TAXARRAY(FINDING,.CNT,.ARRAY)
"RTN","PXRMEXU4",278,0)
 .;if array defined then finding has a code kill the node off.
"RTN","PXRMEXU4",279,0)
 .I $D(ARRAY) S ISFNDFLD=1 K FDA(801.41,IENS,15)
"RTN","PXRMEXU4",280,0)
 ;loop through additional findings
"RTN","PXRMEXU4",281,0)
 S FINDS="" F  S FINDS=$O(FDA(801.4118,FINDS)) Q:FINDS=""  D
"RTN","PXRMEXU4",282,0)
 . S FINDING=FDA(801.4118,FINDS,.01)
"RTN","PXRMEXU4",283,0)
 . S OCNT=CNT D TAXARRAY(FINDING,.CNT,.ARRAY) I CNT>OCNT S TFINDS(FINDS)=""
"RTN","PXRMEXU4",284,0)
 ;kill off additional findings that are codes
"RTN","PXRMEXU4",285,0)
 S ADDIENS=""
"RTN","PXRMEXU4",286,0)
 S FINDS="" F  S FINDS=$O(TFINDS(FINDS)) Q:FINDS=""  D
"RTN","PXRMEXU4",287,0)
 .K FDA(801.4118,FINDS)
"RTN","PXRMEXU4",288,0)
 .I ADDIENS="" S ADDIENS=FINDS
"RTN","PXRMEXU4",289,0)
 I '$D(ARRAY) Q
"RTN","PXRMEXU4",290,0)
 ;build values to crate a new taxonomy
"RTN","PXRMEXU4",291,0)
 S NAME=$G(FDA(801.41,IENS,.01))
"RTN","PXRMEXU4",292,0)
 S TEMP=$$RTAXNAME^PXRMDUTL(NAME)
"RTN","PXRMEXU4",293,0)
 S ARRAY("NAME")=TEMP
"RTN","PXRMEXU4",294,0)
 S ARRAY("COUNT")=CNT
"RTN","PXRMEXU4",295,0)
 S ARRAY("CLASS")=$G(FDA(801.41,IENS,100))
"RTN","PXRMEXU4",296,0)
 S ARRAY("SOURCE")="Exchange installed of dialog "_NAME
"RTN","PXRMEXU4",297,0)
 ;create new taxonomy API
"RTN","PXRMEXU4",298,0)
 S TAX=$$CRETAX^PXRMTXIM("E",.ARRAY,.ERROR)
"RTN","PXRMEXU4",299,0)
 I $D(ERROR) D  Q
"RTN","PXRMEXU4",300,0)
 .I $G(TAX)=0 D BMES^XPDUTL("ERROR: Taxonomy could not be created for dialog "_NAME_".") H 1 Q
"RTN","PXRMEXU4",301,0)
 .D BMES^XPDUTL("ERROR: failed to add all the codes to the Taxonomy "_TEMP_". The codes that could not be added are:")
"RTN","PXRMEXU4",302,0)
 .D BMES^XPDUTL(.ERROR)
"RTN","PXRMEXU4",303,0)
 .H 1
"RTN","PXRMEXU4",304,0)
 S TAXNAME=$P($G(^PXD(811.2,TAX,0)),U)
"RTN","PXRMEXU4",305,0)
 D BMES^XPDUTL("Taxonomy "_TAXNAME_" created") H 1
"RTN","PXRMEXU4",306,0)
 I ISFNDFLD=1 D  Q
"RTN","PXRMEXU4",307,0)
 .S FDA(801.41,IENS,15)="TX.`"_TAX
"RTN","PXRMEXU4",308,0)
 .S FDA(801.41,IENS,123)="NO PICK LIST"
"RTN","PXRMEXU4",309,0)
 S FINDS=$O(FDA(801.4118,""),-1)
"RTN","PXRMEXU4",310,0)
 S LAST=$O(FDA(801.44,""),-1) I LAST="" Q
"RTN","PXRMEXU4",311,0)
 S TEMP=$P($P(LAST,"+",2),",")+1,TEMP="+"_TEMP
"RTN","PXRMEXU4",312,0)
 S FDA(801.4118,ADDIENS,.01)="TX.`"_TAX
"RTN","PXRMEXU4",313,0)
 Q
"RTN","PXRMEXU4",314,0)
 ;
"RTN","PXRMEXU4",315,0)
TAXCONV1(FDA,IENS,FINDING) ;
"RTN","PXRMEXU4",316,0)
 N CNT,CPTSTATUS,DEFAULT,ENC,ENCTYPE,IEN,NODECNT,PROMPTS,POVSTATUS,START,TAX,TEXT,TAXIEN,TDX,TPR,TYPE,VALUE,X
"RTN","PXRMEXU4",317,0)
 ;if taxonomy fields defined then quit
"RTN","PXRMEXU4",318,0)
 I ($G(FDA(801.41,IENS,123))'="") Q
"RTN","PXRMEXU4",319,0)
 ;if group set to not display a pick list.
"RTN","PXRMEXU4",320,0)
 I FDA(801.41,IENS,4)["group" S FDA(801.41,IENS,123)="N" Q
"RTN","PXRMEXU4",321,0)
 S TAX=$P(FINDING,".",2)
"RTN","PXRMEXU4",322,0)
 S FDA(801.41,IENS,123)="ALL"
"RTN","PXRMEXU4",323,0)
 ;
"RTN","PXRMEXU4",324,0)
 S TAXIEN=$O(^PXD(811.2,"B",TAX,"")) I TAXIEN'>0 Q
"RTN","PXRMEXU4",325,0)
 ;determine Taxonomy Type
"RTN","PXRMEXU4",326,0)
 S TDX=$$TOK^PXRMDTAX(TAXIEN,"POV")
"RTN","PXRMEXU4",327,0)
 S TPR=$$TOK^PXRMDTAX(TAXIEN,"CPT")
"RTN","PXRMEXU4",328,0)
 D SETWARN(.TEXT)
"RTN","PXRMEXU4",329,0)
 ;build default array for taxonomy
"RTN","PXRMEXU4",330,0)
 S CPTSTATUS=$$GETSTAT^PXRMDTAX("CPT"),POVSTATUS=$$GETSTAT^PXRMDTAX("POV")
"RTN","PXRMEXU4",331,0)
 I TDX=1 D GETTAXDF^PXRMDTAX(.DEFAULT,"POV",$S(POVSTATUS=2:1,1:0))
"RTN","PXRMEXU4",332,0)
 I TPR=1 D GETTAXDF^PXRMDTAX(.DEFAULT,"CPT",$S(CPTSTATUS=2:1,1:0))
"RTN","PXRMEXU4",333,0)
 I TDX,TPR D
"RTN","PXRMEXU4",334,0)
 .I CPTSTATUS=POVSTATUS,POVSTATUS=2 S FDA(801.41,IENS,13)="2" Q
"RTN","PXRMEXU4",335,0)
 .S FDA(801.41,IENS,13)="@"
"RTN","PXRMEXU4",336,0)
 .I CPTSTATUS=0!(POVSTATUS=0) D BMES^XPDUTL(.TEXT)
"RTN","PXRMEXU4",337,0)
 I TDX,TPR=0 D
"RTN","PXRMEXU4",338,0)
 .I POVSTATUS=2 S FDA(801.41,IENS,13)="2" Q
"RTN","PXRMEXU4",339,0)
 .S FDA(801.41,IENS,13)="@" I POVSTATUS=0 D BMES^XPDUTL(.TEXT)
"RTN","PXRMEXU4",340,0)
 I TDX=0,TPR=1 D
"RTN","PXRMEXU4",341,0)
 .I CPTSTATUS=2 S FDA(801.41,IENS,13)="2" Q
"RTN","PXRMEXU4",342,0)
 .S FDA(801.41,IENS,13)="@" I CPTSTATUS=0 D BMES^XPDUTL(.TEXT)
"RTN","PXRMEXU4",343,0)
 S NODECNT=$O(FDA(801.44,""),-1) I NODECNT="" Q
"RTN","PXRMEXU4",344,0)
 ;
"RTN","PXRMEXU4",345,0)
 ;build encounter tax field
"RTN","PXRMEXU4",346,0)
 F TYPE="POV","CPT" D
"RTN","PXRMEXU4",347,0)
 .I TYPE="POV",TDX=0 Q
"RTN","PXRMEXU4",348,0)
 .I TYPE="CPT",TPR=0 Q
"RTN","PXRMEXU4",349,0)
 .I TYPE="POV" S X=141
"RTN","PXRMEXU4",350,0)
 .I TYPE="CPT" S X=142
"RTN","PXRMEXU4",351,0)
 .S VALUE=$$ADDTAXF1^PXRMDTAX(TYPE,.DEFAULT)
"RTN","PXRMEXU4",352,0)
 .S FDA(801.41,IENS,X)=VALUE
"RTN","PXRMEXU4",353,0)
 .;
"RTN","PXRMEXU4",354,0)
 .;build prompt array from default list
"RTN","PXRMEXU4",355,0)
 .S TYPE="" F  S TYPE=$O(DEFAULT(TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU4",356,0)
 ..;I TPR=0,CODE="CPT" Q
"RTN","PXRMEXU4",357,0)
 ..;I TDX=0,CODE="POV" Q
"RTN","PXRMEXU4",358,0)
 ..S CNT=0 F  S CNT=$O(DEFAULT(TYPE,"ADDFIND",CNT)) Q:CNT'>0  D
"RTN","PXRMEXU4",359,0)
 ...S NODE=DEFAULT(TYPE,"ADDFIND",CNT),IEN=$P(NODE,U)
"RTN","PXRMEXU4",360,0)
 ...I $D(PROMPTS(IEN))>0 I $L(PROMPTS(IEN),U)<$L(NODE,U) S PROMPTS(IEN)=NODE
"RTN","PXRMEXU4",361,0)
 ...S PROMPTS(IEN)=NODE
"RTN","PXRMEXU4",362,0)
 ;
"RTN","PXRMEXU4",363,0)
 I $G(FDA(801.41,IENS,122))="YES" K FDA(801.41,IENS,122) Q
"RTN","PXRMEXU4",364,0)
 I $D(FDA(801.412)) Q
"RTN","PXRMEXU4",365,0)
 ;
"RTN","PXRMEXU4",366,0)
 ;add prompts to the dialog element.
"RTN","PXRMEXU4",367,0)
 S START=0,IEN=0,CNT=0,DNUM=0
"RTN","PXRMEXU4",368,0)
 S IEN=0,CNT=0 F  S IEN=$O(PROMPTS(IEN)) Q:IEN'>0  D
"RTN","PXRMEXU4",369,0)
 .S START=START+1,DNUM=DNUM+1
"RTN","PXRMEXU4",370,0)
 .S NAME=$P($G(^PXRMD(801.41,IEN,0)),U)
"RTN","PXRMEXU4",371,0)
 .S NODE=PROMPTS(IEN),CNT=$L(NODE,U)
"RTN","PXRMEXU4",372,0)
 .I $P(NODE,U,3)>0 Q
"RTN","PXRMEXU4",373,0)
 .S NODECNT=NODECNT+1
"RTN","PXRMEXU4",374,0)
 .S FDA(801.412,"+"_NODECNT_","_IENS,.01)=START
"RTN","PXRMEXU4",375,0)
 .S FDA(801.412,"+"_NODECNT_","_IENS,2)="`"_IEN
"RTN","PXRMEXU4",376,0)
 .I CNT=1 Q
"RTN","PXRMEXU4",377,0)
 .F NUM=2:1:CNT D
"RTN","PXRMEXU4",378,0)
 ..S VALUE=$P(NODE,U,NUM) I $G(VALUE)="" Q
"RTN","PXRMEXU4",379,0)
 ..S FIELD=$S(NUM=2:9,NUM=4:.01,NUM=5:6,NUM=6:7,NUM=7:8,1:"") I $G(FIELD)="" Q
"RTN","PXRMEXU4",380,0)
 ..I FIELD>6 S VALUE=$S(VALUE=1:"YES",1:"NO")
"RTN","PXRMEXU4",381,0)
 ..S FDA(801.412,"+"_NODECNT_","_IENS,FIELD)=VALUE
"RTN","PXRMEXU4",382,0)
 Q
"RTN","PXRMEXU4",383,0)
 ;
"RTN","PXRMEXU4",384,0)
 ;===============================================
"RTN","PXRMEXU4",385,0)
TIURPL(SRCH,WP,NAMEGHC,FILENUM) ;Replace TIU templates whose names have
"RTN","PXRMEXU4",386,0)
 ;changed.
"RTN","PXRMEXU4",387,0)
 N IND,RS,TEXT,TS,TYPE
"RTN","PXRMEXU4",388,0)
 I FILENUM=8927.1 S TYPE="TIU TEMPLATE"
"RTN","PXRMEXU4",389,0)
 E  S TYPE="TIU OBJECT"
"RTN","PXRMEXU4",390,0)
 S IND=1
"RTN","PXRMEXU4",391,0)
 F  S TEXT=$G(@WP@(IND)) Q:TEXT=""  D
"RTN","PXRMEXU4",392,0)
 .I TEXT[SRCH D
"RTN","PXRMEXU4",393,0)
 ..S TS=""
"RTN","PXRMEXU4",394,0)
 ..F  S TS=$O(NAMECHG(FILENUM,TS)) Q:TS=""  D
"RTN","PXRMEXU4",395,0)
 ...S RS=NAMECHG(FILENUM,TS) Q:TEXT'[TS
"RTN","PXRMEXU4",396,0)
 ...S @WP@(IND)=$$STRREP^PXRMUTIL(TEXT,TS,RS)
"RTN","PXRMEXU4",397,0)
 ...;Save the replacement information for the history.
"RTN","PXRMEXU4",398,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS)=RS
"RTN","PXRMEXU4",399,0)
 ...S ^TMP("PXRMEXIA",$J,"DIATIU",TYPE,TS,DNAM)=""
"RTN","PXRMEXU4",400,0)
 .S IND=IND+1
"RTN","PXRMEXU4",401,0)
 Q
"RTN","PXRMEXU4",402,0)
 ;
"RTN","PXRMEXWB")
0^116^B1609378
"RTN","PXRMEXWB",1,0)
PXRMEXWB ;SLC/PKR - Reminder Exchange Web routines. ;12/20/2013
"RTN","PXRMEXWB",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMEXWB",3,0)
 ;==========================================
"RTN","PXRMEXWB",4,0)
LWEB(URL) ;Load a prd file from a web site into ^TMP, then into the
"RTN","PXRMEXWB",5,0)
 ;Exchange file.
"RTN","PXRMEXWB",6,0)
 N DIR,HDR,NODE,RESULT,TEXT,X,Y
"RTN","PXRMEXWB",7,0)
 S DIR(0)="F^10:245"
"RTN","PXRMEXWB",8,0)
 S DIR("A")="Input the url for the .prd file"
"RTN","PXRMEXWB",9,0)
 D ^DIR
"RTN","PXRMEXWB",10,0)
 S URL=Y
"RTN","PXRMEXWB",11,0)
 I (Y="")!(Y="^") S URL="" Q 0
"RTN","PXRMEXWB",12,0)
 S Y=$$LOW^XLFSTR(Y)
"RTN","PXRMEXWB",13,0)
 I $E(Y,1,5)="https" D  Q 0
"RTN","PXRMEXWB",14,0)
 . D EN^DDIOL("The https protocol is not supported.")
"RTN","PXRMEXWB",15,0)
 . H 2
"RTN","PXRMEXWB",16,0)
 ;Load the file contents into ^TMP.
"RTN","PXRMEXWB",17,0)
 S NODE="EXHF"
"RTN","PXRMEXWB",18,0)
 K ^TMP($J,NODE),^TMP($J,"WEBPRD")
"RTN","PXRMEXWB",19,0)
 ;DBIA #5553
"RTN","PXRMEXWB",20,0)
 S RESULT=$$GETURL^XTHC10(URL,10,"^TMP($J,""WEBPRD"")",.HDR)
"RTN","PXRMEXWB",21,0)
 I $P(RESULT,U,1)'=200 D  Q 0
"RTN","PXRMEXWB",22,0)
 . S TEXT="Could not load the .prd file: "
"RTN","PXRMEXWB",23,0)
 . S TEXT=TEXT_"Error "_$P(RESULT,U,1)_" "_$P(RESULT,U,2)
"RTN","PXRMEXWB",24,0)
 . D EN^DDIOL(.TEXT) H 2
"RTN","PXRMEXWB",25,0)
 . K ^TMP($J,"WEBPRD")
"RTN","PXRMEXWB",26,0)
 D RBLCKWEB^PXRMTXIM("WEBPRD",NODE)
"RTN","PXRMEXWB",27,0)
 K ^TMP($J,"WEBPRD")
"RTN","PXRMEXWB",28,0)
 ;Load the ^TMP into the Exchange file.
"RTN","PXRMEXWB",29,0)
 D LTMP^PXRMEXHF(.RESULT,NODE)
"RTN","PXRMEXWB",30,0)
 K ^TMP($J,NODE)
"RTN","PXRMEXWB",31,0)
 Q RESULT
"RTN","PXRMEXWB",32,0)
 ;
"RTN","PXRMFF")
0^101^B72420410
"RTN","PXRMFF",1,0)
PXRMFF ;SLC/PKR - Clinical Reminders function finding evaluation. ;03/12/2013
"RTN","PXRMFF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,11,18,22,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMFF",3,0)
 ;===========================================
"RTN","PXRMFF",4,0)
EVAL(DFN,DEFARR,FIEVAL) ;Evaluate function findings.
"RTN","PXRMFF",5,0)
 N ARGLIST,FFIND,FFN,FN,FUN,FUNIND,FUNN,FVALUE,JND
"RTN","PXRMFF",6,0)
 N LOGIC,LOGVAL,NL,ROUTINE,TEMP
"RTN","PXRMFF",7,0)
 I '$D(DEFARR(25)) Q
"RTN","PXRMFF",8,0)
 S FFN="FF"
"RTN","PXRMFF",9,0)
 F  S FFN=$O(DEFARR(25,FFN)) Q:FFN'["FF"  D
"RTN","PXRMFF",10,0)
 . K FN
"RTN","PXRMFF",11,0)
 . S FUNIND=0
"RTN","PXRMFF",12,0)
 . F  S FUNIND=+$O(DEFARR(25,FFN,5,FUNIND)) Q:FUNIND=0  D
"RTN","PXRMFF",13,0)
 .. S FUNN=$P(DEFARR(25,FFN,5,FUNIND,0),U,1)
"RTN","PXRMFF",14,0)
 .. S FUN=$P(DEFARR(25,FFN,5,FUNIND,0),U,2)
"RTN","PXRMFF",15,0)
 .. S TEMP=^PXRMD(802.4,FUN,0)
"RTN","PXRMFF",16,0)
 .. S ROUTINE=$P(TEMP,U,2,3)_"(.ARGLIST,.FIEVAL,.FVALUE)"
"RTN","PXRMFF",17,0)
 .. K ARGLIST
"RTN","PXRMFF",18,0)
 .. S (JND,NL)=0
"RTN","PXRMFF",19,0)
 .. F  S JND=+$O(DEFARR(25,FFN,5,FUNIND,20,JND)) Q:JND=0  D
"RTN","PXRMFF",20,0)
 ... S NL=NL+1
"RTN","PXRMFF",21,0)
 ... S ARGLIST(NL)=DEFARR(25,FFN,5,FUNIND,20,JND,0)
"RTN","PXRMFF",22,0)
 .. S ARGLIST(0)=NL
"RTN","PXRMFF",23,0)
 .. D @ROUTINE
"RTN","PXRMFF",24,0)
 .. S FN(FUNIND)=FVALUE
"RTN","PXRMFF",25,0)
 . S LOGIC=$G(DEFARR(25,FFN,10))
"RTN","PXRMFF",26,0)
 . S LOGIC=$S(LOGIC'="":LOGIC,1:0)
"RTN","PXRMFF",27,0)
 . S LOGVAL=$$EVALLOG(LOGIC,.FN)
"RTN","PXRMFF",28,0)
 . S FIEVAL(FFN)=LOGVAL
"RTN","PXRMFF",29,0)
 . S FIEVAL(FFN,"NUMBER")=$P(FFN,"FF",2)
"RTN","PXRMFF",30,0)
 . S FIEVAL(FFN,"FINDING")=$G(FUN)_";PXRMD(802.4,"
"RTN","PXRMFF",31,0)
 . I $G(PXRMDEBG) D
"RTN","PXRMFF",32,0)
 .. S ^TMP(PXRMPID,$J,"FFDEB",FFN,"DETAIL")=FIEVAL(FFN)_U_DEFARR(25,FFN,3)_U_$$NLOGIC(LOGIC,.FN)
"RTN","PXRMFF",33,0)
 .. I $G(PXRMFFSS) D SBSDISP(LOGIC,FFN,.FN)
"RTN","PXRMFF",34,0)
 Q
"RTN","PXRMFF",35,0)
 ;
"RTN","PXRMFF",36,0)
 ;===========================================
"RTN","PXRMFF",37,0)
EVALLOG(LOGIC,FN) ;Evaluate the logic string.
"RTN","PXRMFF",38,0)
 N DIVBY0,DIVOP,IND,NLOGIC,NODIV,NULL,NUMSTACK,OP1,OP2,OPER,OPERS
"RTN","PXRMFF",39,0)
 N PFSTACK,RES,TEMP,UNARY
"RTN","PXRMFF",40,0)
 I LOGIC="" Q 0
"RTN","PXRMFF",41,0)
 S NULL="" ;REMOVE THIS WHEN DONE FIXING.
"RTN","PXRMFF",42,0)
 S NODIV=$S(LOGIC["/":0,LOGIC["\":0,LOGIC["#":0,1:1)
"RTN","PXRMFF",43,0)
 I NODIV Q @LOGIC
"RTN","PXRMFF",44,0)
 S NULL=""
"RTN","PXRMFF",45,0)
 S DIVBY0=0,DIVOP="/\#"
"RTN","PXRMFF",46,0)
 S OPERS=$$GETOPERS^PXRMFFDB
"RTN","PXRMFF",47,0)
 S NLOGIC=$$NLOGIC(LOGIC,.FN)
"RTN","PXRMFF",48,0)
 D POSTFIX^PXRMSTAC(NLOGIC,OPERS,.PFSTACK)
"RTN","PXRMFF",49,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMFF",50,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFF",51,0)
 .;Check for a unary operator.
"RTN","PXRMFF",52,0)
 . S UNARY=$S(TEMP="+U":1,TEMP="-U":1,TEMP="'U":1,1:0)
"RTN","PXRMFF",53,0)
 . S OPER=$S(UNARY:$E(TEMP,1),1:TEMP)
"RTN","PXRMFF",54,0)
 . I OPERS'[OPER D PUSH^PXRMSTAC(.NUMSTACK,TEMP) Q
"RTN","PXRMFF",55,0)
 .;If control gets to here we have an operator.
"RTN","PXRMFF",56,0)
 . S OP2=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",57,0)
 . S OP2=$$STRCLEAN(OP2)
"RTN","PXRMFF",58,0)
 . I UNARY S TEMP="S RES="_OPER_"OP2"
"RTN","PXRMFF",59,0)
 . I 'UNARY D
"RTN","PXRMFF",60,0)
 .. S OP1=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",61,0)
 .. S OP1=$$STRCLEAN(OP1)
"RTN","PXRMFF",62,0)
 ..;Flag division by 0 with ~
"RTN","PXRMFF",63,0)
 .. I DIVOP[OPER,+OP2=0 S DIVBY0=1,TEMP="S RES=""~"""
"RTN","PXRMFF",64,0)
 .. E  S TEMP="S RES=OP1"_OPER_"OP2"
"RTN","PXRMFF",65,0)
 .;Do the math and put the result on the stack. The result of division
"RTN","PXRMFF",66,0)
 .;by 0 with any operator is 0.
"RTN","PXRMFF",67,0)
 . I ($G(OP1)="~")!(OP2="~") S RES=0
"RTN","PXRMFF",68,0)
 . E  X TEMP
"RTN","PXRMFF",69,0)
 . D PUSH^PXRMSTAC(.NUMSTACK,RES)
"RTN","PXRMFF",70,0)
 S RES=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",71,0)
 I PFSTACK(0)=1 D
"RTN","PXRMFF",72,0)
 . I @NLOGIC S RES=1
"RTN","PXRMFF",73,0)
 . E  S RES=0
"RTN","PXRMFF",74,0)
 Q RES
"RTN","PXRMFF",75,0)
 ;
"RTN","PXRMFF",76,0)
 ;===========================================
"RTN","PXRMFF",77,0)
EVALPL(DEFARR,FFIND,PLIST) ;Build a list of patients based on a function
"RTN","PXRMFF",78,0)
 ;finding.
"RTN","PXRMFF",79,0)
 N ARGL,ARGLIST,AT,COUNT,DAS,DATE,DFN
"RTN","PXRMFF",80,0)
 N FI,FIEVAL,FIEVT,FILIST,FILENUM,FINDPA,FN
"RTN","PXRMFF",81,0)
 N FUN,FUNCTION,FUNNM,FUNN,FUNNUM,FVALUE
"RTN","PXRMFF",82,0)
 N IND,ITEM,JND,LOGIC,LNAME,NARG,NFI,NFUN
"RTN","PXRMFF",83,0)
 N ROUTINE,TEMP,TERMARR,UNIQFIL
"RTN","PXRMFF",84,0)
 S LOGIC=DEFARR(25,FFIND,10)
"RTN","PXRMFF",85,0)
 I LOGIC="" Q
"RTN","PXRMFF",86,0)
 ;Build the list of functions and findings used by the function finding.
"RTN","PXRMFF",87,0)
 S (FUNNUM,NFUN)=0
"RTN","PXRMFF",88,0)
 F  S FUNNUM=+$O(DEFARR(25,FFIND,5,FUNNUM)) Q:FUNNUM=0  D
"RTN","PXRMFF",89,0)
 . S NFUN=NFUN+1
"RTN","PXRMFF",90,0)
 . S FUNN=$P(DEFARR(25,FFIND,5,FUNNUM,0),U,1)
"RTN","PXRMFF",91,0)
 . S FUN=$P(DEFARR(25,FFIND,5,FUNNUM,0),U,2)
"RTN","PXRMFF",92,0)
 . S TEMP=^PXRMD(802.4,FUN,0)
"RTN","PXRMFF",93,0)
 . S FUN=$P(TEMP,U,1)
"RTN","PXRMFF",94,0)
 . S FUNCTION(NFUN)=$TR(FUN,"_","")
"RTN","PXRMFF",95,0)
 . S ROUTINE(NFUN)=$P(TEMP,U,2,3)_"(.ARGL,.FIEVAL,.FVALUE)"
"RTN","PXRMFF",96,0)
 . S (FI,NARG,NFI)=0
"RTN","PXRMFF",97,0)
 . F  S FI=+$O(DEFARR(25,FFIND,5,FUNNUM,20,FI)) Q:FI=0  D
"RTN","PXRMFF",98,0)
 .. S NARG=NARG+1,ARGLIST(NFUN,NARG)=DEFARR(25,FFIND,5,FUNNUM,20,FI,0)
"RTN","PXRMFF",99,0)
 .. S AT=$$ARGTYPE^PXRMFFAT(FUNCTION(NFUN),FI)
"RTN","PXRMFF",100,0)
 .. I AT="F" S NFI=NFI+1,FILIST(NFUN,NFI)=ARGLIST(NFUN,NARG)
"RTN","PXRMFF",101,0)
 . S ARGLIST(NFUN,0)=NARG
"RTN","PXRMFF",102,0)
 . S FILIST(NFUN,0)=NFI
"RTN","PXRMFF",103,0)
 ;A finding may be used in more than one function in the function
"RTN","PXRMFF",104,0)
 ;finding so build a list of the unique findings.
"RTN","PXRMFF",105,0)
 F IND=1:1:NFUN D
"RTN","PXRMFF",106,0)
 . F JND=1:1:FILIST(IND,0) D
"RTN","PXRMFF",107,0)
 .. S TEMP=$P(DEFARR(20,FILIST(IND,JND),0),U,1)
"RTN","PXRMFF",108,0)
 .. S ITEM=$P(TEMP,";",1)
"RTN","PXRMFF",109,0)
 .. S FILENUM=$$GETFNUM^PXRMDATA($P(TEMP,";",2))
"RTN","PXRMFF",110,0)
 .. S UNIQFIL(FILIST(IND,JND))=""
"RTN","PXRMFF",111,0)
 K ^TMP($J,"PXRMFFDFN")
"RTN","PXRMFF",112,0)
 S IND=0
"RTN","PXRMFF",113,0)
 F  S IND=$O(UNIQFIL(IND)) Q:IND=""  D
"RTN","PXRMFF",114,0)
 . S FINDPA(0)=DEFARR(20,IND,0)
"RTN","PXRMFF",115,0)
 . S FINDPA(3)=DEFARR(20,IND,3)
"RTN","PXRMFF",116,0)
 . S FINDPA(10)=DEFARR(20,IND,10)
"RTN","PXRMFF",117,0)
 . S FINDPA(11)=DEFARR(20,IND,11)
"RTN","PXRMFF",118,0)
 . D GENTERM^PXRMPLST(FINDPA(0),IND,.TERMARR)
"RTN","PXRMFF",119,0)
 . S LNAME(IND)="PXRMFF"_IND
"RTN","PXRMFF",120,0)
 . K ^TMP($J,LNAME(IND))
"RTN","PXRMFF",121,0)
 . D EVALPL^PXRMTERL(.FINDPA,.TERMARR,LNAME(IND))
"RTN","PXRMFF",122,0)
 .;Get rid of the false part of the list.
"RTN","PXRMFF",123,0)
 . K ^TMP($J,LNAME(IND),0)
"RTN","PXRMFF",124,0)
 .;Build a complete list of patients.
"RTN","PXRMFF",125,0)
 . S DFN=0
"RTN","PXRMFF",126,0)
 . F  S DFN=$O(^TMP($J,LNAME(IND),1,DFN)) Q:DFN=""  S ^TMP($J,"PXRMFFDFN",DFN)=""
"RTN","PXRMFF",127,0)
 ;Evaluate the function finding for each patient. If the function
"RTN","PXRMFF",128,0)
 ;finding is true then add the patient to PLIST.
"RTN","PXRMFF",129,0)
 S DFN=0
"RTN","PXRMFF",130,0)
 F  S DFN=$O(^TMP($J,"PXRMFFDFN",DFN)) Q:DFN=""  D
"RTN","PXRMFF",131,0)
 . K FIEVAL
"RTN","PXRMFF",132,0)
 . S IND=""
"RTN","PXRMFF",133,0)
 . F  S IND=$O(UNIQFIL(IND)) Q:IND=""  D
"RTN","PXRMFF",134,0)
 .. S FIEVAL(IND)=0
"RTN","PXRMFF",135,0)
 .. S ITEM=""
"RTN","PXRMFF",136,0)
 .. F  S ITEM=$O(^TMP($J,LNAME(IND),1,DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMFF",137,0)
 ... S COUNT=0
"RTN","PXRMFF",138,0)
 ... F  S COUNT=$O(^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT)) Q:COUNT=""  D
"RTN","PXRMFF",139,0)
 .... S FILENUM=$O(^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT,""))
"RTN","PXRMFF",140,0)
 .... S TEMP=^TMP($J,LNAME(IND),1,DFN,ITEM,COUNT,FILENUM)
"RTN","PXRMFF",141,0)
 .... S DAS=$P(TEMP,U,1)
"RTN","PXRMFF",142,0)
 .... S DATE=$P(TEMP,U,2)
"RTN","PXRMFF",143,0)
 .... K FIEVT
"RTN","PXRMFF",144,0)
 .... D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVT)
"RTN","PXRMFF",145,0)
 .... M FIEVAL(IND,COUNT)=FIEVT
"RTN","PXRMFF",146,0)
 .... S FIEVAL(IND,COUNT,"DATE")=DATE,FIEVAL(IND,COUNT)=1
"RTN","PXRMFF",147,0)
 .;Save the top level results for each finding.
"RTN","PXRMFF",148,0)
 . S IND=0
"RTN","PXRMFF",149,0)
 . F  S IND=$O(FIEVAL(IND)) Q:IND=""  D
"RTN","PXRMFF",150,0)
 .. K FIEVT M FIEVT=FIEVAL(IND)
"RTN","PXRMFF",151,0)
 .. S NFI=+$O(FIEVT(""),-1)
"RTN","PXRMFF",152,0)
 .. D SFRES^PXRMUTIL(-1,NFI,.FIEVT)
"RTN","PXRMFF",153,0)
 .. K FIEVAL(IND) M FIEVAL(IND)=FIEVT
"RTN","PXRMFF",154,0)
 .;Evaluate the function finding for this patient.
"RTN","PXRMFF",155,0)
 . K FN
"RTN","PXRMFF",156,0)
 . F IND=1:1:NFUN D
"RTN","PXRMFF",157,0)
 .. K ARGL M ARGL=ARGLIST(IND)
"RTN","PXRMFF",158,0)
 .. D @ROUTINE(IND)
"RTN","PXRMFF",159,0)
 .. S FN(IND)=FVALUE
"RTN","PXRMFF",160,0)
 . I @LOGIC S ^TMP($J,PLIST,1,DFN,1,FFIND)=""
"RTN","PXRMFF",161,0)
 ;Clean up.
"RTN","PXRMFF",162,0)
 K ^TMP($J,"PXRMFFDFN")
"RTN","PXRMFF",163,0)
 S IND=""
"RTN","PXRMFF",164,0)
 F  S IND=$O(UNIQFIL(IND)) Q:IND=""  K ^TMP($J,LNAME(IND))
"RTN","PXRMFF",165,0)
 Q
"RTN","PXRMFF",166,0)
 ;
"RTN","PXRMFF",167,0)
 ;===========================================
"RTN","PXRMFF",168,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMFF",169,0)
 ;None currently defined.
"RTN","PXRMFF",170,0)
 Q
"RTN","PXRMFF",171,0)
 ;
"RTN","PXRMFF",172,0)
 ;===========================================
"RTN","PXRMFF",173,0)
NLOGIC(LOGIC,FN) ;Replace the symbols in the logic string with their values.
"RTN","PXRMFF",174,0)
 N IND,NLOGIC,TEMP
"RTN","PXRMFF",175,0)
 I LOGIC="" Q 0
"RTN","PXRMFF",176,0)
 S NLOGIC=LOGIC
"RTN","PXRMFF",177,0)
 I NLOGIC["$P" S NLOGIC=$$PRP(NLOGIC)
"RTN","PXRMFF",178,0)
 I $D(PXRMAGE) S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"PXRMAGE",PXRMAGE)
"RTN","PXRMFF",179,0)
 I $D(PXRMDOB) S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"PXRMDOB",PXRMDOB)
"RTN","PXRMFF",180,0)
 I $D(PXRMDOD) S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"PXRMDOD",PXRMDOD)
"RTN","PXRMFF",181,0)
 I $D(PXRMLAD) S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"PXRMLAD",PXRMLAD)
"RTN","PXRMFF",182,0)
 I $D(PXRMSEX) S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"PXRMSEX",""""_PXRMSEX_"""")
"RTN","PXRMFF",183,0)
 S IND=""
"RTN","PXRMFF",184,0)
 F  S IND=$O(FN(IND)) Q:IND=""  D
"RTN","PXRMFF",185,0)
 . S TEMP=$S(FN(IND)="":"NULL",1:FN(IND))
"RTN","PXRMFF",186,0)
 . S NLOGIC=$$STRREP^PXRMUTIL(NLOGIC,"FN("_IND_")",TEMP)
"RTN","PXRMFF",187,0)
 Q NLOGIC
"RTN","PXRMFF",188,0)
 ;
"RTN","PXRMFF",189,0)
 ;===========================================
"RTN","PXRMFF",190,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMFF",191,0)
 ;maintenance output. None currently defined.
"RTN","PXRMFF",192,0)
 Q
"RTN","PXRMFF",193,0)
 ;
"RTN","PXRMFF",194,0)
 ;===========================================
"RTN","PXRMFF",195,0)
PRP(LOGIC) ;Process $P in logic.
"RTN","PXRMFF",196,0)
 N IND,PFSTACK,RES,T1,TEMP
"RTN","PXRMFF",197,0)
 D POSTFIX^PXRMSTAC(LOGIC,"",.PFSTACK)
"RTN","PXRMFF",198,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMFF",199,0)
 . I PFSTACK(IND)'="$P" Q
"RTN","PXRMFF",200,0)
 . S IND=IND+1,T1=PFSTACK(IND)
"RTN","PXRMFF",201,0)
 . I T1="FN" S IND=IND+1,T1=T1_"("_PFSTACK(IND)_")",IND=IND+1,T1=T1_PFSTACK(IND)
"RTN","PXRMFF",202,0)
 . S TEMP="$P("_T1_")"
"RTN","PXRMFF",203,0)
 . S T1="S RES="_TEMP
"RTN","PXRMFF",204,0)
 . X T1
"RTN","PXRMFF",205,0)
 . I RES="" S RES="NULL"
"RTN","PXRMFF",206,0)
 . S LOGIC=$$STRREP^PXRMUTIL(LOGIC,TEMP,RES)
"RTN","PXRMFF",207,0)
 Q LOGIC
"RTN","PXRMFF",208,0)
 ;
"RTN","PXRMFF",209,0)
 ;===========================================
"RTN","PXRMFF",210,0)
SBSDISP(LOGIC,FFN,FN) ;Create a step-by-step display of the function finding
"RTN","PXRMFF",211,0)
 ;evaluation for reminder test.
"RTN","PXRMFF",212,0)
 N DIVOP,IND,NLOGIC,NUMSTACK,OP1,OP2,OPER,OPERS,PFSTACK
"RTN","PXRMFF",213,0)
 N RES,TEMP,TEXT,UNARY
"RTN","PXRMFF",214,0)
 N NSTEPS,REPL
"RTN","PXRMFF",215,0)
 I LOGIC="" Q 0
"RTN","PXRMFF",216,0)
 S NSTEPS=0
"RTN","PXRMFF",217,0)
 S DIVOP="/\#"
"RTN","PXRMFF",218,0)
 S OPERS=$$GETOPERS^PXRMFFDB
"RTN","PXRMFF",219,0)
 S NLOGIC=$$NLOGIC(LOGIC,.FN)
"RTN","PXRMFF",220,0)
 K ^TMP("PXRMFFSS",$J,FFN)
"RTN","PXRMFF",221,0)
 S ^TMP("PXRMFFSS",$J,FFN,0)=NLOGIC
"RTN","PXRMFF",222,0)
 D POSTFIX^PXRMSTAC(NLOGIC,OPERS,.PFSTACK)
"RTN","PXRMFF",223,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMFF",224,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFF",225,0)
 .;Check for a unary operator.
"RTN","PXRMFF",226,0)
 . S UNARY=$S(TEMP="+U":1,TEMP="-U":1,TEMP="'U":1,1:0)
"RTN","PXRMFF",227,0)
 . S OPER=$S(UNARY:$E(TEMP,1),1:TEMP)
"RTN","PXRMFF",228,0)
 . I OPERS'[OPER D PUSH^PXRMSTAC(.NUMSTACK,TEMP) Q
"RTN","PXRMFF",229,0)
 .;If control gets to here we have an operator.
"RTN","PXRMFF",230,0)
 . S OP2=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",231,0)
 . S OP2=$$STRCLEAN(OP2)
"RTN","PXRMFF",232,0)
 . I UNARY S TEMP="S RES="_OPER_"OP2",TEXT=OPER_OP2
"RTN","PXRMFF",233,0)
 . I 'UNARY D
"RTN","PXRMFF",234,0)
 .. S OP1=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",235,0)
 .. S OP1=$$STRCLEAN(OP1)
"RTN","PXRMFF",236,0)
 ..;Flag division by 0 with ~
"RTN","PXRMFF",237,0)
 .. I DIVOP[OPER,+OP2=0 S TEMP="S RES=""~""",TEXT="0/0"
"RTN","PXRMFF",238,0)
 .. E  S TEMP="S RES=OP1"_OPER_"OP2",TEXT=OP1_OPER_OP2
"RTN","PXRMFF",239,0)
 .;Do the math and put the result on the stack. The result of division
"RTN","PXRMFF",240,0)
 .;by 0 with any operator is 0.
"RTN","PXRMFF",241,0)
 . I ($G(OP1)="~")!(OP2="~") S RES=0
"RTN","PXRMFF",242,0)
 . E  X TEMP
"RTN","PXRMFF",243,0)
 . S NSTEPS=NSTEPS+1
"RTN","PXRMFF",244,0)
 . S ^TMP("PXRMFFSS",$J,FFN,NSTEPS)=TEXT_"="_RES
"RTN","PXRMFF",245,0)
 . D PUSH^PXRMSTAC(.NUMSTACK,RES)
"RTN","PXRMFF",246,0)
 S RES=$$POP^PXRMSTAC(.NUMSTACK)
"RTN","PXRMFF",247,0)
 I PFSTACK(0)=1 D
"RTN","PXRMFF",248,0)
 . S RES=$S(NLOGIC:1,1:0)
"RTN","PXRMFF",249,0)
 . S ^TMP("PXRMFFSS",$J,FFN,1)=PFSTACK(1)_"="_RES
"RTN","PXRMFF",250,0)
 Q
"RTN","PXRMFF",251,0)
 ;
"RTN","PXRMFF",252,0)
 ;===========================================
"RTN","PXRMFF",253,0)
STRCLEAN(STRING) ;Remove extra quotes from strings.
"RTN","PXRMFF",254,0)
 I +STRING=STRING Q STRING
"RTN","PXRMFF",255,0)
 N LEN,QUOTE
"RTN","PXRMFF",256,0)
 S QUOTE=$C(34)
"RTN","PXRMFF",257,0)
 S LEN=$L(STRING)
"RTN","PXRMFF",258,0)
 I ($E(STRING,1)=QUOTE),($E(STRING,LEN)=QUOTE) Q $E(STRING,2,LEN-1)
"RTN","PXRMFF",259,0)
 Q STRING
"RTN","PXRMFF",260,0)
 ;
"RTN","PXRMFFDB")
0^118^B67684724
"RTN","PXRMFFDB",1,0)
PXRMFFDB ;SLC/PKR - Function finding data structure builder. ;12/24/2013
"RTN","PXRMFFDB",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMFFDB",3,0)
 ;
"RTN","PXRMFFDB",4,0)
 ;===========================================
"RTN","PXRMFFDB",5,0)
BASE2(NUM) ;Convert a base 10 integer to base 2.
"RTN","PXRMFFDB",6,0)
 N BD,BIN
"RTN","PXRMFFDB",7,0)
 S BIN=""
"RTN","PXRMFFDB",8,0)
 F  Q:NUM=0  D
"RTN","PXRMFFDB",9,0)
 . S BD=$S((NUM\2)=(NUM/2):0,1:1)
"RTN","PXRMFFDB",10,0)
 . S BIN=BD_BIN,NUM=NUM\2
"RTN","PXRMFFDB",11,0)
 Q BIN
"RTN","PXRMFFDB",12,0)
 ;
"RTN","PXRMFFDB",13,0)
 ;===========================================
"RTN","PXRMFFDB",14,0)
CRESLOG(NUM,FLIST,RESLOG) ;Check the resolution logic to see if
"RTN","PXRMFFDB",15,0)
 ;it can be made true solely by function findings. If that is the case
"RTN","PXRMFFDB",16,0)
 ;warn the user. Called by BLDRESLS^PXRMLOGX
"RTN","PXRMFFDB",17,0)
 N AGEFI,BP,FI,FF,FFL,IND,JND,KND,LE,LEN,LND,NFF,NTC,SEXFI,TEMP,VALUE
"RTN","PXRMFFDB",18,0)
 S (AGEFI,SEXFI)=0
"RTN","PXRMFFDB",19,0)
 S NFF=0
"RTN","PXRMFFDB",20,0)
 F IND=1:1:NUM D
"RTN","PXRMFFDB",21,0)
 . S JND=$P(FLIST,";",IND)
"RTN","PXRMFFDB",22,0)
 . I +JND=JND S FI(JND)=0 Q
"RTN","PXRMFFDB",23,0)
 . I JND["FF" S NFF=NFF+1,FF=$P(JND,"FF",2),FFL(NFF)=FF
"RTN","PXRMFFDB",24,0)
 I NFF=0 Q
"RTN","PXRMFFDB",25,0)
 ;Generate and test all combinations of true and false FFs.
"RTN","PXRMFFDB",26,0)
 S VALUE=0
"RTN","PXRMFFDB",27,0)
 S NTC=$$PWR^XLFMTH(2,NFF)-1
"RTN","PXRMFFDB",28,0)
 F IND=1:1:NTC Q:VALUE  D
"RTN","PXRMFFDB",29,0)
 . S BIN=$$BASE2(IND)
"RTN","PXRMFFDB",30,0)
 . S LEN=$L(BIN)
"RTN","PXRMFFDB",31,0)
 . S LE=NFF-LEN
"RTN","PXRMFFDB",32,0)
 .;Fill in the values for the implied preceding 0s.
"RTN","PXRMFFDB",33,0)
 . F JND=1:1:LE S KND=FFL(JND),FF(KND)=0
"RTN","PXRMFFDB",34,0)
 . S LND=0
"RTN","PXRMFFDB",35,0)
 . F JND=LE+1:1:NFF D
"RTN","PXRMFFDB",36,0)
 .. S KND=FFL(JND),LND=LND+1
"RTN","PXRMFFDB",37,0)
 .. S FF(KND)=$E(BIN,LND)
"RTN","PXRMFFDB",38,0)
 . I @RESLOG
"RTN","PXRMFFDB",39,0)
 . S VALUE=$T
"RTN","PXRMFFDB",40,0)
 I VALUE D
"RTN","PXRMFFDB",41,0)
 . N RESLSTR
"RTN","PXRMFFDB",42,0)
 . S RESLSTR=RESLOG
"RTN","PXRMFFDB",43,0)
 . F IND=1:1:NUM D
"RTN","PXRMFFDB",44,0)
 .. S JND=$P(FLIST,";",IND)
"RTN","PXRMFFDB",45,0)
 .. S TEMP=$S(JND["FF":"FF("_$P(JND,"FF",2)_")",1:"FI("_JND_")")
"RTN","PXRMFFDB",46,0)
 .. S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,@TEMP)
"RTN","PXRMFFDB",47,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,"AGE",AGEFI)
"RTN","PXRMFFDB",48,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,"SEX",SEXFI)
"RTN","PXRMFFDB",49,0)
 . W !!,"Warning - your resolution logic can be satisfied by function findings only."
"RTN","PXRMFFDB",50,0)
 . W !,"If this happens it will not be possible to calculate a resolution date and"
"RTN","PXRMFFDB",51,0)
 . W !,"the reminder will not be resolved. Here is a case where the logic evaluates"
"RTN","PXRMFFDB",52,0)
 . W !,"to true:"
"RTN","PXRMFFDB",53,0)
 . W !,RESLSTR
"RTN","PXRMFFDB",54,0)
 . W !,RESLOG
"RTN","PXRMFFDB",55,0)
 . W !
"RTN","PXRMFFDB",56,0)
 Q
"RTN","PXRMFFDB",57,0)
 ;
"RTN","PXRMFFDB",58,0)
 ;===========================================
"RTN","PXRMFFDB",59,0)
FFBUILD(X,DA) ;Given a function finding logical string build the data
"RTN","PXRMFFDB",60,0)
 ;structure. This is called by a new-style cross-reference after
"RTN","PXRMFFDB",61,0)
 ;the function string has passed the input transform so we don't need
"RTN","PXRMFFDB",62,0)
 ;to validate the elements.
"RTN","PXRMFFDB",63,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",64,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMFFDB",65,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",66,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMFFDB",67,0)
 N FDA,FUNNUM,FUNP,IENB,IENS,IND,JND,L2,L3,LEN,LIST,LOGIC,OPERS,MSG
"RTN","PXRMFFDB",68,0)
 N PFSTACK,REPL,RS,TEMP,TS
"RTN","PXRMFFDB",69,0)
 S IENB=DA_","_DA(1)_","
"RTN","PXRMFFDB",70,0)
 S OPERS=$$GETOPERS
"RTN","PXRMFFDB",71,0)
 D POSTFIX^PXRMSTAC(X,OPERS,.PFSTACK)
"RTN","PXRMFFDB",72,0)
 S (FUNNUM,L2)=0
"RTN","PXRMFFDB",73,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMFFDB",74,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFFDB",75,0)
 . I $D(^PXRMD(802.4,"B",TEMP)) D
"RTN","PXRMFFDB",76,0)
 .. S FUNP=$O(^PXRMD(802.4,"B",TEMP,""))
"RTN","PXRMFFDB",77,0)
 .. S FUNNUM=FUNNUM+1,L2=L2+1
"RTN","PXRMFFDB",78,0)
 .. S IENS="+"_L2_","_IENB
"RTN","PXRMFFDB",79,0)
 .. S FDA(811.9255,IENS,.01)=FUNNUM
"RTN","PXRMFFDB",80,0)
 .. S FDA(811.9255,IENS,.02)=FUNP
"RTN","PXRMFFDB",81,0)
 .. S IND=IND+1
"RTN","PXRMFFDB",82,0)
 .. S LIST=$TR(PFSTACK(IND),"~"," ")
"RTN","PXRMFFDB",83,0)
 .. S REPL(FUNNUM)=TEMP_"("_LIST_")"_U_"FN("_FUNNUM_")"
"RTN","PXRMFFDB",84,0)
 .. S L3=L2
"RTN","PXRMFFDB",85,0)
 .. S LEN=$L(LIST,",")
"RTN","PXRMFFDB",86,0)
 .. F JND=1:1:LEN D
"RTN","PXRMFFDB",87,0)
 ... S L3=L3+1
"RTN","PXRMFFDB",88,0)
 ... S IENS="+"_L3_",+"_L2_","_IENB
"RTN","PXRMFFDB",89,0)
 ... S TS=$P(LIST,",",JND)
"RTN","PXRMFFDB",90,0)
 ... S TS=$TR(TS,"""","")
"RTN","PXRMFFDB",91,0)
 ... S FDA(811.9256,IENS,.01)=TS
"RTN","PXRMFFDB",92,0)
 .. S L2=L3
"RTN","PXRMFFDB",93,0)
 ;Build the logic string
"RTN","PXRMFFDB",94,0)
 S LOGIC=X
"RTN","PXRMFFDB",95,0)
 F IND=1:1:FUNNUM D
"RTN","PXRMFFDB",96,0)
 . S TS=$P(REPL(IND),U,1)
"RTN","PXRMFFDB",97,0)
 . S RS=$P(REPL(IND),U,2)
"RTN","PXRMFFDB",98,0)
 . S LOGIC=$$STRREP^PXRMUTIL(LOGIC,TS,RS)
"RTN","PXRMFFDB",99,0)
 S FDA(811.925,IENB,10)=LOGIC
"RTN","PXRMFFDB",100,0)
 D UPDATE^DIE("","FDA","IENB","MSG")
"RTN","PXRMFFDB",101,0)
 I $D(MSG) D
"RTN","PXRMFFDB",102,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMFFDB",103,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMFFDB",104,0)
 Q
"RTN","PXRMFFDB",105,0)
 ;
"RTN","PXRMFFDB",106,0)
 ;===========================================
"RTN","PXRMFFDB",107,0)
FFKILL(X,DA) ;This is the kill logic for the function string.
"RTN","PXRMFFDB",108,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",109,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMFFDB",110,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",111,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMFFDB",112,0)
 K ^PXD(811.9,DA(1),25,DA,5),^PXD(811.9,DA(1),25,DA,10)
"RTN","PXRMFFDB",113,0)
 Q
"RTN","PXRMFFDB",114,0)
 ;
"RTN","PXRMFFDB",115,0)
 ;===========================================
"RTN","PXRMFFDB",116,0)
GETOPERS() ;Return the list of operators that can be used in a function string.
"RTN","PXRMFFDB",117,0)
 Q "!&-+*/\#<>=']['='<'>'[']"
"RTN","PXRMFFDB",118,0)
 ;
"RTN","PXRMFFDB",119,0)
 ;===========================================
"RTN","PXRMFFDB",120,0)
ISGRV(VAR) ;VAR can be a global reminder variable by itself or used in a
"RTN","PXRMFFDB",121,0)
 ;$P.
"RTN","PXRMFFDB",122,0)
 N DELIM,EXPR,FROM,TO,VALID
"RTN","PXRMFFDB",123,0)
 S EXPR=$P(VAR,",",1)
"RTN","PXRMFFDB",124,0)
 S VALID=$S(EXPR="PXRMAGE":1,EXPR="PXRMDOB":1,EXPR="PXRMLAD":1,EXPR="PXRMSEX":1,1:0)
"RTN","PXRMFFDB",125,0)
 I 'VALID Q 0
"RTN","PXRMFFDB",126,0)
 S DELIM=$P(VAR,",",2)
"RTN","PXRMFFDB",127,0)
 S VALID=$S(DELIM="":1,1:$$ISSTR(DELIM))
"RTN","PXRMFFDB",128,0)
 I 'VALID Q 0
"RTN","PXRMFFDB",129,0)
 S FROM=$P(VAR,",",3)
"RTN","PXRMFFDB",130,0)
 S VALID=$S(FROM="":1,FROM=+FROM:1,1:0)
"RTN","PXRMFFDB",131,0)
 I 'VALID Q 0
"RTN","PXRMFFDB",132,0)
 S TO=$P(VAR,",",4)
"RTN","PXRMFFDB",133,0)
 S VALID=$S(TO="":1,TO=+TO:1,1:0)
"RTN","PXRMFFDB",134,0)
 Q VALID
"RTN","PXRMFFDB",135,0)
 ;
"RTN","PXRMFFDB",136,0)
 ;===========================================
"RTN","PXRMFFDB",137,0)
ISSTR(STRING) ;Return true if STRING really is a string and it is not
"RTN","PXRMFFDB",138,0)
 ;executable MUMPS code.
"RTN","PXRMFFDB",139,0)
 N VALID,X
"RTN","PXRMFFDB",140,0)
 S VALID=0
"RTN","PXRMFFDB",141,0)
 ;First and last character is a quote and there are an even number of
"RTN","PXRMFFDB",142,0)
 ;quotes in the string.
"RTN","PXRMFFDB",143,0)
 I ($E(STRING,1)=""""),($E(STRING,$L(STRING))=""""),($L(STRING,"""")#2=1) S VALID=1
"RTN","PXRMFFDB",144,0)
 ;Check for ,DELIMITER,FROM,TO associated with $P.
"RTN","PXRMFFDB",145,0)
 I 'VALID D
"RTN","PXRMFFDB",146,0)
 . I STRING?1","1""""1.E1""""0.1(1","1.N)0.1(1","1.N) S VALID=1
"RTN","PXRMFFDB",147,0)
 . I STRING?1",U"0.1(1","1.N)0.1(1","1.N) S VALID=1
"RTN","PXRMFFDB",148,0)
 I 'VALID Q VALID
"RTN","PXRMFFDB",149,0)
 S X=STRING
"RTN","PXRMFFDB",150,0)
 D ^DIM
"RTN","PXRMFFDB",151,0)
 S VALID=$S($D(X)=0:1,1:0)
"RTN","PXRMFFDB",152,0)
 Q VALID
"RTN","PXRMFFDB",153,0)
 ;
"RTN","PXRMFFDB",154,0)
 ;===========================================
"RTN","PXRMFFDB",155,0)
VFFORM(FUN,ARGLIST,FSTRING) ;Make sure the function is followed by an argument
"RTN","PXRMFFDB",156,0)
 ;list i.e., FUN(...).
"RTN","PXRMFFDB",157,0)
 N TSTRING,VALID
"RTN","PXRMFFDB",158,0)
 S TSTRING=FUN_"("_ARGLIST_")"
"RTN","PXRMFFDB",159,0)
 S VALID=$S(FSTRING[TSTRING:1,1:0)
"RTN","PXRMFFDB",160,0)
 I 'VALID D
"RTN","PXRMFFDB",161,0)
 . N TEXT
"RTN","PXRMFFDB",162,0)
 . S TEXT="Function "_FUN_" must be followed by an argument list!"
"RTN","PXRMFFDB",163,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMFFDB",164,0)
 Q VALID
"RTN","PXRMFFDB",165,0)
 ;
"RTN","PXRMFFDB",166,0)
 ;===========================================
"RTN","PXRMFFDB",167,0)
VFINDING(X,DAI) ;Make sure a finding number is a valid member of the
"RTN","PXRMFFDB",168,0)
 ;definition finding multiple. Input transform for function
"RTN","PXRMFFDB",169,0)
 ;finding finding number.
"RTN","PXRMFFDB",170,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",171,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMFFDB",172,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",173,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMFFDB",174,0)
 I '$D(DAI) Q 1
"RTN","PXRMFFDB",175,0)
 ;If X is not numeric it is not a finding number.
"RTN","PXRMFFDB",176,0)
 I +X'=X Q 0
"RTN","PXRMFFDB",177,0)
 I $D(^PXD(811.9,DAI,20,X,0)) Q 1
"RTN","PXRMFFDB",178,0)
 E  D  Q 0
"RTN","PXRMFFDB",179,0)
 . N TEXT
"RTN","PXRMFFDB",180,0)
 . S TEXT="Finding number "_X_" does not exist!"
"RTN","PXRMFFDB",181,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",182,0)
 ;
"RTN","PXRMFFDB",183,0)
 ;===========================================
"RTN","PXRMFFDB",184,0)
VFSTRING(FFSTRING,DA) ;Make sure a function finding string is valid.
"RTN","PXRMFFDB",185,0)
 ;The elements can be functions, operators, and numbers.
"RTN","PXRMFFDB",186,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMFFDB",187,0)
 ;I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMFFDB",188,0)
 ;Do not execute as part of exchange.
"RTN","PXRMFFDB",189,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMFFDB",190,0)
 I '$D(DA) Q 1
"RTN","PXRMFFDB",191,0)
 N DAI,DATE,FUNIEN,IND,LIST,MFUN,OPERS,PFSTACK,TEMP,TEXT,VALID
"RTN","PXRMFFDB",192,0)
 S DAI=DA(1)
"RTN","PXRMFFDB",193,0)
 S OPERS=$$GETOPERS
"RTN","PXRMFFDB",194,0)
 ;Define the allowed M functions.
"RTN","PXRMFFDB",195,0)
 S MFUN("$P")=""
"RTN","PXRMFFDB",196,0)
 D POSTFIX^PXRMSTAC(FFSTRING,OPERS,.PFSTACK)
"RTN","PXRMFFDB",197,0)
 S VALID=1
"RTN","PXRMFFDB",198,0)
 F IND=1:1:PFSTACK(0) Q:'VALID  D
"RTN","PXRMFFDB",199,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMFFDB",200,0)
 . I $D(^PXRMD(802.4,"B",TEMP)) D  Q
"RTN","PXRMFFDB",201,0)
 .. S FUNIEN=$O(^PXRMD(802.4,"B",TEMP,""))
"RTN","PXRMFFDB",202,0)
 .. S IND=IND+1
"RTN","PXRMFFDB",203,0)
 .. S LIST=$G(PFSTACK(IND))
"RTN","PXRMFFDB",204,0)
 .. S VALID=$$VFFORM(TEMP,LIST,X)
"RTN","PXRMFFDB",205,0)
 .. I 'VALID Q
"RTN","PXRMFFDB",206,0)
 .. I $G(^PXRMD(802.4,FUNIEN,2))'="" S VALID=$$VALISTS(LIST,DAI,TEMP,FUNIEN)
"RTN","PXRMFFDB",207,0)
 .. I $G(^PXRMD(802.4,FUNIEN,3))'="" S VALID=$$VALISTM(LIST,DAI,TEMP,FUNIEN)
"RTN","PXRMFFDB",208,0)
 .;Check for an operator. Unary operators have a "U" appended.
"RTN","PXRMFFDB",209,0)
 . I OPERS[$P(TEMP,"U",1) Q
"RTN","PXRMFFDB",210,0)
 .;Check for number
"RTN","PXRMFFDB",211,0)
 . I TEMP=+TEMP Q
"RTN","PXRMFFDB",212,0)
 .;Check for allowed M function.
"RTN","PXRMFFDB",213,0)
 . I $D(MFUN(TEMP)) Q
"RTN","PXRMFFDB",214,0)
 .;Check for a global reminder variable
"RTN","PXRMFFDB",215,0)
 . I $$ISGRV(TEMP) Q
"RTN","PXRMFFDB",216,0)
 .;Check for a non-executable string.
"RTN","PXRMFFDB",217,0)
 . I $$ISSTR(TEMP) Q
"RTN","PXRMFFDB",218,0)
 . S VALID=0
"RTN","PXRMFFDB",219,0)
 . S TEXT=TEMP_" is not a valid function finding element!"
"RTN","PXRMFFDB",220,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",221,0)
 I VALID D
"RTN","PXRMFFDB",222,0)
 . N X
"RTN","PXRMFFDB",223,0)
 . S X="I "_FFSTRING
"RTN","PXRMFFDB",224,0)
 . D ^DIM
"RTN","PXRMFFDB",225,0)
 . I $D(X)=0 S VALID=0
"RTN","PXRMFFDB",226,0)
 I 'VALID D
"RTN","PXRMFFDB",227,0)
 . S TEMP=FFSTRING_" is not a valid function string!"
"RTN","PXRMFFDB",228,0)
 . D EN^DDIOL(TEMP)
"RTN","PXRMFFDB",229,0)
 Q VALID
"RTN","PXRMFFDB",230,0)
 ;
"RTN","PXRMFFDB",231,0)
 ;===========================================
"RTN","PXRMFFDB",232,0)
VALISTS(LIST,DAI,FUNCTION,FUNIEN) ;Make sure the function argument list
"RTN","PXRMFFDB",233,0)
 ;s valid. This check is for functions where a single pattern can
"RTN","PXRMFFDB",234,0)
 ;be used.
"RTN","PXRMFFDB",235,0)
 N AT,IND,LEN,PATTERN,VALID,X
"RTN","PXRMFFDB",236,0)
 S LEN=$L(LIST,",")
"RTN","PXRMFFDB",237,0)
 I LEN=0 D  Q 0
"RTN","PXRMFFDB",238,0)
 . N TEXT
"RTN","PXRMFFDB",239,0)
 . S TEXT="The argument list is not defined!"
"RTN","PXRMFFDB",240,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",241,0)
 S PATTERN=^PXRMD(802.4,FUNIEN,2)
"RTN","PXRMFFDB",242,0)
 S VALID=$S(LIST?@PATTERN:1,1:0)
"RTN","PXRMFFDB",243,0)
 I 'VALID D  Q 0
"RTN","PXRMFFDB",244,0)
 . N TEXT
"RTN","PXRMFFDB",245,0)
 . S TEXT="Argument list "_LIST_" is not correct for function "_$P(^PXRMD(802.4,FUNIEN,0),U,1)
"RTN","PXRMFFDB",246,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",247,0)
 F IND=1:1:LEN D
"RTN","PXRMFFDB",248,0)
 . S X=$P(LIST,",",IND)
"RTN","PXRMFFDB",249,0)
 . S AT=$$ARGTYPE^PXRMFFAT(FUNCTION,IND)
"RTN","PXRMFFDB",250,0)
 . I AT="U" S VALID=0 Q
"RTN","PXRMFFDB",251,0)
 . I AT="F",'$$VFINDING(X,DAI) S VALID=0
"RTN","PXRMFFDB",252,0)
 Q VALID
"RTN","PXRMFFDB",253,0)
 ;
"RTN","PXRMFFDB",254,0)
 ;===========================================
"RTN","PXRMFFDB",255,0)
VALISTM(LIST,DAI,FUNCTION,FUNIEN) ;Make sure the function argument list
"RTN","PXRMFFDB",256,0)
 ;is valid. This check is for functions where a different pattern is
"RTN","PXRMFFDB",257,0)
 ;required for each argument.
"RTN","PXRMFFDB",258,0)
 N ARG,AT,IND,LEN,NL,PAT,PATTERNS,TEXT,VARG,VALID
"RTN","PXRMFFDB",259,0)
 S LEN=$L(LIST,",")
"RTN","PXRMFFDB",260,0)
 I LEN=0 D  Q 0
"RTN","PXRMFFDB",261,0)
 . N TEXT
"RTN","PXRMFFDB",262,0)
 . S TEXT="The argument list is not defined!"
"RTN","PXRMFFDB",263,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",264,0)
 S PATTERNS=^PXRMD(802.4,FUNIEN,3)
"RTN","PXRMFFDB",265,0)
 S LEN=$L(PATTERNS,"~")
"RTN","PXRMFFDB",266,0)
 I LEN=0 D  Q 0
"RTN","PXRMFFDB",267,0)
 . N TEXT
"RTN","PXRMFFDB",268,0)
 . S TEXT="The pattern list is not defined!"
"RTN","PXRMFFDB",269,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMFFDB",270,0)
 S NL=0,VALID=1
"RTN","PXRMFFDB",271,0)
 F IND=1:1:LEN D
"RTN","PXRMFFDB",272,0)
 . S ARG=$P(LIST,",",IND)
"RTN","PXRMFFDB",273,0)
 . S PAT=$P(PATTERNS,"~",IND)
"RTN","PXRMFFDB",274,0)
 . S VARG=ARG?@PAT
"RTN","PXRMFFDB",275,0)
 . I 'VARG S VALID=0,NL=NL+1,TEXT(NL)="Function argument number "_IND_" is incorrect." Q
"RTN","PXRMFFDB",276,0)
 . S AT=$$ARGTYPE^PXRMFFAT(FUNCTION,IND)
"RTN","PXRMFFDB",277,0)
 . I AT="U" S VARG=0
"RTN","PXRMFFDB",278,0)
 . I 'VARG S VALID=0,NL=NL+1,TEXT(NL)="Function argument number "_IND_" is the wrong type." Q
"RTN","PXRMFFDB",279,0)
 . I AT="F",'$$VFINDING(ARG,DAI) S VARG=0
"RTN","PXRMFFDB",280,0)
 I 'VALID D EN^DDIOL(.TEXT)
"RTN","PXRMFFDB",281,0)
 Q VALID
"RTN","PXRMFFDB",282,0)
 ;
"RTN","PXRMFFH")
0^90^B11369552
"RTN","PXRMFFH",1,0)
PXRMFFH ;SLC/PKR - Routines for function finding help. ;03/01/2013
"RTN","PXRMFFH",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMFFH",3,0)
 ;
"RTN","PXRMFFH",4,0)
 ;======================================================
"RTN","PXRMFFH",5,0)
FSXHELP ;Function finding function string executable help.
"RTN","PXRMFFH",6,0)
 N DIR0,DONE,IND,TEXT
"RTN","PXRMFFH",7,0)
 S DONE=0
"RTN","PXRMFFH",8,0)
 ;Load the general help text.
"RTN","PXRMFFH",9,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMFFH",10,0)
 . S TEXT(IND)=$P($T(GHTEXT+IND),";",3)
"RTN","PXRMFFH",11,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMFFH",12,0)
 ;Load the help text for the functions.
"RTN","PXRMFFH",13,0)
 D GFTEXT(IND-2,.TEXT)
"RTN","PXRMFFH",14,0)
 D BROWSE^DDBR("TEXT","NR","Function Finding Help")
"RTN","PXRMFFH",15,0)
 I $D(DDS) D REFRESH^DDSUTL S DY=IOSL-7,DX=0 X IOXY S $Y=DY,$X=DX
"RTN","PXRMFFH",16,0)
 Q
"RTN","PXRMFFH",17,0)
 ;
"RTN","PXRMFFH",18,0)
 ;======================================================
"RTN","PXRMFFH",19,0)
GFTEXT(START,TEXT) ;Load descriptions of available function finding
"RTN","PXRMFFH",20,0)
 ;GFTEXT(START,FUN,TEXT) ;Load descriptions of available function finding
"RTN","PXRMFFH",21,0)
 ;functions into the TEXT array starting at line START.
"RTN","PXRMFFH",22,0)
 N IEN,IND,FUNCTION,NDL,NL,PNAME
"RTN","PXRMFFH",23,0)
 S NL=START
"RTN","PXRMFFH",24,0)
 S FUNCTION=""
"RTN","PXRMFFH",25,0)
 F  S FUNCTION=$O(^PXRMD(802.4,"B",FUNCTION)) Q:FUNCTION=""  D
"RTN","PXRMFFH",26,0)
 . S NL=NL+1,TEXT(NL)=" "_FUNCTION
"RTN","PXRMFFH",27,0)
 S NL=NL+1,TEXT(NL)=""
"RTN","PXRMFFH",28,0)
 S NL=NL+1,TEXT(NL)="Details for each function follow."
"RTN","PXRMFFH",29,0)
 ;
"RTN","PXRMFFH",30,0)
 S FUNCTION=""
"RTN","PXRMFFH",31,0)
 F  S FUNCTION=$O(^PXRMD(802.4,"B",FUNCTION)) Q:FUNCTION=""  D
"RTN","PXRMFFH",32,0)
 . S IEN=$O(^PXRMD(802.4,"B",FUNCTION,""))
"RTN","PXRMFFH",33,0)
 . S PNAME=$P(^PXRMD(802.4,IEN,0),U,4)
"RTN","PXRMFFH",34,0)
 . S NL=NL+1,TEXT(NL)=" "
"RTN","PXRMFFH",35,0)
 . S NL=NL+1,TEXT(NL)="Function: "_FUNCTION
"RTN","PXRMFFH",36,0)
 . S NL=NL+1,TEXT(NL)="Print Name: "_PNAME
"RTN","PXRMFFH",37,0)
 .;Load the description
"RTN","PXRMFFH",38,0)
 . S NL=NL+1,TEXT(NL)="Description:"
"RTN","PXRMFFH",39,0)
 . S NDL=+$P($G(^PXRMD(802.4,IEN,1,0)),U,4)
"RTN","PXRMFFH",40,0)
 . F IND=1:1:NDL S NL=NL+1,TEXT(NL)=^PXRMD(802.4,IEN,1,IND,0)
"RTN","PXRMFFH",41,0)
 Q
"RTN","PXRMFFH",42,0)
 ;
"RTN","PXRMFFH",43,0)
 ;======================================================
"RTN","PXRMFFH",44,0)
GHTEXT ;Function finding general help text.
"RTN","PXRMFFH",45,0)
 ;;The general form for a function finding string is:
"RTN","PXRMFFH",46,0)
 ;; FUN1(arg1,arg2,...argN) oper1 FUN2(arg1,arg2,...,argN) ...
"RTN","PXRMFFH",47,0)
 ;; where FUN1 stands for function 1, FUN2 function 2, and so on.
"RTN","PXRMFFH",48,0)
 ;; arg1,arg2,...,argN are the regular findings whose data are arguments
"RTN","PXRMFFH",49,0)
 ;; to the function and oper1 stands for a MUMPS operator.
"RTN","PXRMFFH",50,0)
 ;; The operators can be any of the following MUMPS operators:
"RTN","PXRMFFH",51,0)
 ;; !&-+*/\#<>='][
"RTN","PXRMFFH",52,0)
 ;; 
"RTN","PXRMFFH",53,0)
 ;;When a function finding is evaluated, the result will be treated as a logical
"RTN","PXRMFFH",54,0)
 ;;true or false, where 0 is false and non-zero is true.
"RTN","PXRMFFH",55,0)
 ;;
"RTN","PXRMFFH",56,0)
 ;;An example of a function finding string is:
"RTN","PXRMFFH",57,0)
 ;; MRD(1,2)>MRD(5,6,7)
"RTN","PXRMFFH",58,0)
 ;;
"RTN","PXRMFFH",59,0)
 ;;This function finding will be true if the most recent date
"RTN","PXRMFFH",60,0)
 ;;of regular findings 1 and 2 is greater than the most recent
"RTN","PXRMFFH",61,0)
 ;;date of regular findings 5, 6, and 7.
"RTN","PXRMFFH",62,0)
 ;;
"RTN","PXRMFFH",63,0)
 ;;Comparisons to fixed values can also be made. An example of this is:
"RTN","PXRMFFH",64,0)
 ;;
"RTN","PXRMFFH",65,0)
 ;; MRD(1,2)>0
"RTN","PXRMFFH",66,0)
 ;;
"RTN","PXRMFFH",67,0)
 ;;Some dates associated with findings include time. For those functions
"RTN","PXRMFFH",68,0)
 ;;that have dates as arguments, if a date includes time, the full date
"RTN","PXRMFFH",69,0)
 ;;and time will be used in the calculation.
"RTN","PXRMFFH",70,0)
 ;;
"RTN","PXRMFFH",71,0)
 ;;The function finding functions are:
"RTN","PXRMFFH",72,0)
 ;;**End Text**
"RTN","PXRMFFH",73,0)
 Q
"RTN","PXRMFFH",74,0)
 ;
"RTN","PXRMFRPT")
0^92^B184393482
"RTN","PXRMFRPT",1,0)
PXRMFRPT ;SLC/PKR - Finding usage report. ;06/11/2013
"RTN","PXRMFRPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,16,18,22,26**;Feb 04, 2005;Build 404
"RTN","PXRMFRPT",3,0)
 ;==============================
"RTN","PXRMFRPT",4,0)
BLDLIST(FILENUM,GBL,FIEN,SUB) ;
"RTN","PXRMFRPT",5,0)
 I FILENUM'=811.9 D DEFLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",6,0)
 I FILENUM'=811.5 D TERMLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",7,0)
 D DIALOG(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",8,0)
 D OIGLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",9,0)
 I (FILENUM=811.5)!(FILENUM=811.9) D
"RTN","PXRMFRPT",10,0)
 . D OCRLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",11,0)
 . D RSETLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",12,0)
 Q
"RTN","PXRMFRPT",13,0)
 ;
"RTN","PXRMFRPT",14,0)
 ;==============================
"RTN","PXRMFRPT",15,0)
DEFLIST(FILENUM,GBL,FIEN,SUB) ;Search reminder definitions for any that are
"RTN","PXRMFRPT",16,0)
 ;using GBL as a finding. If FIEN is not null then search for only
"RTN","PXRMFRPT",17,0)
 ;those findings.
"RTN","PXRMFRPT",18,0)
 N FI,FNDIEN,IEN
"RTN","PXRMFRPT",19,0)
 S IEN=0
"RTN","PXRMFRPT",20,0)
 F  S IEN=+$O(^PXD(811.9,IEN)) Q:IEN=0  D
"RTN","PXRMFRPT",21,0)
 . I '$D(^PXD(811.9,IEN,20,"E",GBL)) Q
"RTN","PXRMFRPT",22,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",23,0)
 .. S FI=""
"RTN","PXRMFRPT",24,0)
 .. F  S FI=$O(^PXD(811.9,IEN,20,"E",GBL,FIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",25,0)
 ... S ^TMP($J,SUB,FILENUM,FIEN,"DEF",IEN,FI)=""
"RTN","PXRMFRPT",26,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",27,0)
 ..;No finding specified, find all of them.
"RTN","PXRMFRPT",28,0)
 .. S FNDIEN=""
"RTN","PXRMFRPT",29,0)
 .. F  S FNDIEN=$O(^PXD(811.9,IEN,20,"E",GBL,FNDIEN)) Q:FNDIEN=""  D
"RTN","PXRMFRPT",30,0)
 ... S FI=""
"RTN","PXRMFRPT",31,0)
 ... F  S FI=$O(^PXD(811.9,IEN,20,"E",GBL,FNDIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",32,0)
 .... S ^TMP($J,SUB,FILENUM,FNDIEN,"DEF",IEN,FI)=""
"RTN","PXRMFRPT",33,0)
 Q
"RTN","PXRMFRPT",34,0)
 ;
"RTN","PXRMFRPT",35,0)
 ;==============================
"RTN","PXRMFRPT",36,0)
DIALDSAR(OUTPUT) ;
"RTN","PXRMFRPT",37,0)
 ;This is used for individual dialog element checks, may be better in a
"RTN","PXRMFRPT",38,0)
 ;different routine
"RTN","PXRMFRPT",39,0)
 N FILENUM,IND,STATUS,TEMP
"RTN","PXRMFRPT",40,0)
 S IND=0 F  S IND=+$O(^DD(801.41,15,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",41,0)
 . S TEMP=^DD(801.41,15,"V",IND,0)
"RTN","PXRMFRPT",42,0)
 . S FILENUM=$P(TEMP,U)
"RTN","PXRMFRPT",43,0)
 .;DBIA #4640
"RTN","PXRMFRPT",44,0)
 . S STATUS=+$$GETSTAT^HDISVF01(FILENUM)
"RTN","PXRMFRPT",45,0)
 . I STATUS'=6,STATUS'=7 Q
"RTN","PXRMFRPT",46,0)
 . S OUTPUT($$ROOT^DILFD(FILENUM))=FILENUM_U_STATUS
"RTN","PXRMFRPT",47,0)
 ;DBIA #4640
"RTN","PXRMFRPT",48,0)
 S STATUS=+$$GETSTAT^HDISVF01(101.43) I STATUS'=6,STATUS'=7 Q
"RTN","PXRMFRPT",49,0)
 S OUTPUT($$ROOT^DILFD("^101.43,"))=101.43_U_STATUS
"RTN","PXRMFRPT",50,0)
 Q
"RTN","PXRMFRPT",51,0)
 ;
"RTN","PXRMFRPT",52,0)
 ;==============================
"RTN","PXRMFRPT",53,0)
DIALOG(FILENUM,GBL,FIEN,SUB) ;
"RTN","PXRMFRPT",54,0)
 N DIEN,FIELD,FIND
"RTN","PXRMFRPT",55,0)
 I '$D(^TMP($J,"DLG FIND")) D BLDDLGTM^PXRMSTS("DLG FIND")
"RTN","PXRMFRPT",56,0)
 I +FIEN>0 D  Q
"RTN","PXRMFRPT",57,0)
 .I '$D(^TMP($J,"DLG FIND",GBL,FIEN)) Q
"RTN","PXRMFRPT",58,0)
 .S DIEN=0
"RTN","PXRMFRPT",59,0)
 .F  S DIEN=$O(^TMP($J,"DLG FIND",GBL,FIEN,DIEN)) Q:DIEN'>0  D
"RTN","PXRMFRPT",60,0)
 ..S FIELD=""
"RTN","PXRMFRPT",61,0)
 ..F  S FIELD=$O(^TMP($J,"DLG FIND",GBL,FIEN,DIEN,FIELD)) Q:FIELD=""  D
"RTN","PXRMFRPT",62,0)
 ...S ^TMP($J,SUB,FILENUM,FIEN,"DIALOG",DIEN,FIELD)=""
"RTN","PXRMFRPT",63,0)
 ;
"RTN","PXRMFRPT",64,0)
 S FIND="" F  S FIND=$O(^TMP($J,"DLG FIND",GBL,FIND)) Q:FIND=""  D
"RTN","PXRMFRPT",65,0)
 .S DIEN=0
"RTN","PXRMFRPT",66,0)
 .F  S DIEN=$O(^TMP($J,"DLG FIND",GBL,FIND,DIEN)) Q:DIEN'>0  D
"RTN","PXRMFRPT",67,0)
 ..S FIELD=""
"RTN","PXRMFRPT",68,0)
 ..F  S FIELD=$O(^TMP($J,"DLG FIND",GBL,FIND,DIEN,FIELD)) Q:FIELD=""  D
"RTN","PXRMFRPT",69,0)
 ...S ^TMP($J,SUB,FILENUM,FIND,"DIALOG",DIEN,FIELD)=""
"RTN","PXRMFRPT",70,0)
 Q
"RTN","PXRMFRPT",71,0)
 ;
"RTN","PXRMFRPT",72,0)
 ;==============================
"RTN","PXRMFRPT",73,0)
FINDDIAL(RESULT,GBL,FIEN) ;
"RTN","PXRMFRPT",74,0)
 ;This api is used to return a list of dialogs that contains a specific
"RTN","PXRMFRPT",75,0)
 ;finding
"RTN","PXRMFRPT",76,0)
 K ^TMP($J,"DLG FIND")
"RTN","PXRMFRPT",77,0)
 D BLDDLGTM^PXRMSTS("DLG FIND")
"RTN","PXRMFRPT",78,0)
 N DIEN,FIELD,FIND,NAME
"RTN","PXRMFRPT",79,0)
 I +FIEN'>0 Q
"RTN","PXRMFRPT",80,0)
 I '$D(^TMP($J,"DLG FIND",GBL,FIEN)) Q
"RTN","PXRMFRPT",81,0)
 S DIEN=0
"RTN","PXRMFRPT",82,0)
 F  S DIEN=$O(^TMP($J,"DLG FIND",GBL,FIEN,DIEN)) Q:DIEN'>0  D
"RTN","PXRMFRPT",83,0)
 .S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U) Q:NAME=""
"RTN","PXRMFRPT",84,0)
 .S RESULT(NAME)=DIEN
"RTN","PXRMFRPT",85,0)
 Q
"RTN","PXRMFRPT",86,0)
 ;
"RTN","PXRMFRPT",87,0)
 ;==============================
"RTN","PXRMFRPT",88,0)
FSEL(FNUM,GBL,GNAME,LIST) ;Build a list of reminder findings and let the user
"RTN","PXRMFRPT",89,0)
 ;select from the list.
"RTN","PXRMFRPT",90,0)
 N ALIST,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILENUM,FLIST,IND,INUM
"RTN","PXRMFRPT",91,0)
 N STAR,TEMP,TLIST,X,Y
"RTN","PXRMFRPT",92,0)
 S (IND,INUM)=0
"RTN","PXRMFRPT",93,0)
 ;Create a temporary list ordered by file name.
"RTN","PXRMFRPT",94,0)
 S TLIST("REMINDER DEFINITION")=811.9
"RTN","PXRMFRPT",95,0)
 ;DBIA #2991, #5149 for access to ^DD.
"RTN","PXRMFRPT",96,0)
 F  S IND=+$O(^DD(811.902,.01,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",97,0)
 . S TEMP=^DD(811.902,.01,"V",IND,0)
"RTN","PXRMFRPT",98,0)
 . S TLIST($P(TEMP,U,2))=$P(TEMP,U,1)
"RTN","PXRMFRPT",99,0)
 ;Scan dialogs for additional findings.
"RTN","PXRMFRPT",100,0)
 S IND=0
"RTN","PXRMFRPT",101,0)
 F  S IND=+$O(^DD(801.41,15,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",102,0)
 . S TEMP=^DD(801.41,15,"V",IND,0)
"RTN","PXRMFRPT",103,0)
 . S TLIST($P(TEMP,U,2))=$P(TEMP,U,1)
"RTN","PXRMFRPT",104,0)
 S IND="",INUM=0
"RTN","PXRMFRPT",105,0)
 F  S IND=$O(TLIST(IND)) Q:IND=""  D
"RTN","PXRMFRPT",106,0)
 . S INUM=INUM+1
"RTN","PXRMFRPT",107,0)
 . S FILENUM=TLIST(IND)
"RTN","PXRMFRPT",108,0)
 .;DBIA #4640
"RTN","PXRMFRPT",109,0)
 . S STAR=$S($$SCREEN^HDISVF01(FILENUM):" *",1:"")
"RTN","PXRMFRPT",110,0)
 . S FLIST(FILENUM)=INUM
"RTN","PXRMFRPT",111,0)
 . S GNAME(INUM)=IND
"RTN","PXRMFRPT",112,0)
 . S ALIST(INUM)=" "_$J(INUM,4)_" - "_GNAME(INUM)_STAR
"RTN","PXRMFRPT",113,0)
 . S FNUM(INUM)=FILENUM
"RTN","PXRMFRPT",114,0)
 . S GBL(INUM)=$P($$GET1^DID(FILENUM,"","","GLOBAL NAME"),"^",2)
"RTN","PXRMFRPT",115,0)
 M DIR("A")=ALIST
"RTN","PXRMFRPT",116,0)
 S DIR("A")="Enter your list for the report"
"RTN","PXRMFRPT",117,0)
 S DIR(0)="LO^1:"_INUM
"RTN","PXRMFRPT",118,0)
 W !!,"Select from the following reminder findings (* signifies standardized):"
"RTN","PXRMFRPT",119,0)
 D ^DIR
"RTN","PXRMFRPT",120,0)
 I $D(DIROUT)!$D(DIRUT) S LIST="" Q
"RTN","PXRMFRPT",121,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMFRPT",122,0)
 S LIST=Y
"RTN","PXRMFRPT",123,0)
 Q
"RTN","PXRMFRPT",124,0)
 ;
"RTN","PXRMFRPT",125,0)
 ;==============================
"RTN","PXRMFRPT",126,0)
ISEL(FNUM,GBL,GNAME,LIST,ITEMLIST) ;See if the user wants selected items or
"RTN","PXRMFRPT",127,0)
 ;all from the selected finding types.
"RTN","PXRMFRPT",128,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IND,LI,NUM,SEL,TEXT,Y
"RTN","PXRMFRPT",129,0)
 S DIC(0)="AEMQ"
"RTN","PXRMFRPT",130,0)
 S DIR(0)="S^1:ALL;2:SELECTED"
"RTN","PXRMFRPT",131,0)
 S DIR("B")="SELECTED"
"RTN","PXRMFRPT",132,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMFRPT",133,0)
 F IND=1:1:NUM D
"RTN","PXRMFRPT",134,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMFRPT",135,0)
 . S TEXT="Search for all or selected "_GNAME(LI)
"RTN","PXRMFRPT",136,0)
 . S TEXT=TEXT_$S($E(TEXT,$L(TEXT))="S":"?",1:"S?")
"RTN","PXRMFRPT",137,0)
 . W !,TEXT
"RTN","PXRMFRPT",138,0)
 . D ^DIR
"RTN","PXRMFRPT",139,0)
 . I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMFRPT",140,0)
 . I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMFRPT",141,0)
 . I Y=1 S ITEMLIST="ALL" Q
"RTN","PXRMFRPT",142,0)
 . S DIC=FNUM(LI)
"RTN","PXRMFRPT",143,0)
 . S DIC("A")="Select "_GNAME(LI)_": "
"RTN","PXRMFRPT",144,0)
 . S SEL=1
"RTN","PXRMFRPT",145,0)
 . F  Q:'SEL  D
"RTN","PXRMFRPT",146,0)
 .. D ^DIC
"RTN","PXRMFRPT",147,0)
 .. I ($D(DTOUT))!($D(DUOUT)) S SEL=0 Q
"RTN","PXRMFRPT",148,0)
 .. I Y=-1 S SEL=0 Q
"RTN","PXRMFRPT",149,0)
 .. S ITEMLIST(FNUM(LI),$P(Y,U,1))=""
"RTN","PXRMFRPT",150,0)
 Q
"RTN","PXRMFRPT",151,0)
 ;
"RTN","PXRMFRPT",152,0)
 ;==============================
"RTN","PXRMFRPT",153,0)
OCRLIST(FILENUM,GBL,FIEN,SUB) ;Search Reminder Order Check rules for
"RTN","PXRMFRPT",154,0)
 ;any that are using GBL as a finding. If FIEN is not null then search
"RTN","PXRMFRPT",155,0)
 ;for only those findings.
"RTN","PXRMFRPT",156,0)
 I FILENUM=811.5,'$D(^PXD(801.1,"T")) Q
"RTN","PXRMFRPT",157,0)
 I FILENUM=811.9,'$D(^PXD(801.1,"R")) Q
"RTN","PXRMFRPT",158,0)
 N IEN
"RTN","PXRMFRPT",159,0)
 I FILENUM=811.5 D
"RTN","PXRMFRPT",160,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",161,0)
 .. S IEN=0
"RTN","PXRMFRPT",162,0)
 .. F  S IEN=$O(^PXD(801.1,"T",FIEN,IEN)) Q:IEN'>0  S ^TMP($J,SUB,FILENUM,FIEN,"OCRULE",IEN)=""
"RTN","PXRMFRPT",163,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",164,0)
 .. S FIEN=""
"RTN","PXRMFRPT",165,0)
 .. F  S FIEN=$O(^PXD(801.1,"T",FIEN)) Q:FIEN=""  D
"RTN","PXRMFRPT",166,0)
 ... S IEN=0
"RTN","PXRMFRPT",167,0)
 ... F  S IEN=$O(^PXD(801.1,"T",FIEN,IEN)) Q:IEN'>0  S ^TMP($J,SUB,FILENUM,FIEN,"OCRULE",IEN)=""
"RTN","PXRMFRPT",168,0)
 I FILENUM=811.9 D
"RTN","PXRMFRPT",169,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",170,0)
 .. S IEN=0
"RTN","PXRMFRPT",171,0)
 .. F  S IEN=$O(^PXD(801.1,"R",FIEN,IEN)) Q:IEN'>0  S ^TMP($J,SUB,FILENUM,FIEN,"OCRULE",IEN)=""
"RTN","PXRMFRPT",172,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",173,0)
 .. S FIEN=""
"RTN","PXRMFRPT",174,0)
 .. F  S FIEN=$O(^PXD(801.1,"R",FIEN)) Q:FIEN=""  D
"RTN","PXRMFRPT",175,0)
 ... S IEN=0
"RTN","PXRMFRPT",176,0)
 ... F  S IEN=$O(^PXD(801.1,"R",FIEN,IEN)) Q:IEN'>0  S ^TMP($J,SUB,FILENUM,FIEN,"OCRULE",IEN)=""
"RTN","PXRMFRPT",177,0)
 Q
"RTN","PXRMFRPT",178,0)
 ;
"RTN","PXRMFRPT",179,0)
 ;==============================
"RTN","PXRMFRPT",180,0)
OIGLIST(FNUM,GBL,FIEN,SUB) ;Search reminder orderable item groups for
"RTN","PXRMFRPT",181,0)
 ;any that are using GBL as a finding. If FIEN is not null then search
"RTN","PXRMFRPT",182,0)
 ;for only those findings.
"RTN","PXRMFRPT",183,0)
 N IEN,ITEM,NODE,RIEN,RNAME
"RTN","PXRMFRPT",184,0)
 S NODE=$S(FNUM=101.43:"O",FNUM=50.605:"P",FNUM=50:"P",FNUM=50.6:"P",1:"")
"RTN","PXRMFRPT",185,0)
 I NODE="" Q
"RTN","PXRMFRPT",186,0)
 S ITEM=$S(NODE="P":FIEN_";"_GBL,1:FIEN)
"RTN","PXRMFRPT",187,0)
 I +FIEN>0 D  Q
"RTN","PXRMFRPT",188,0)
 . I '$D(^PXD(801,NODE,ITEM)) Q
"RTN","PXRMFRPT",189,0)
 . S IEN=0 F  S IEN=$O(^PXD(801,NODE,ITEM,IEN)) Q:IEN'>0  D
"RTN","PXRMFRPT",190,0)
 .. S ^TMP($J,SUB,FNUM,FIEN,"ROC",IEN)="" Q
"RTN","PXRMFRPT",191,0)
 I '$D(^PXD(801,NODE)) Q
"RTN","PXRMFRPT",192,0)
 S ITEM="" F  S ITEM=$O(^PXD(801,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMFRPT",193,0)
 . S FIEN=$S(NODE="P":$P(ITEM,";"),1:ITEM)
"RTN","PXRMFRPT",194,0)
 . S IEN=0 F  S IEN=$O(^PXD(801,NODE,ITEM,IEN)) Q:IEN'>0  D
"RTN","PXRMFRPT",195,0)
 .. S ^TMP($J,SUB,FNUM,FIEN,"ROC",IEN)=""
"RTN","PXRMFRPT",196,0)
 Q
"RTN","PXRMFRPT",197,0)
 ;
"RTN","PXRMFRPT",198,0)
 ;==============================
"RTN","PXRMFRPT",199,0)
REPD ;Main report driver.
"RTN","PXRMFRPT",200,0)
 N DONE,FI,FIEN,FIENS,FILES,FILENUM,FNUM,GBL,GNAME,IEN,IND,ITEMLIST
"RTN","PXRMFRPT",201,0)
 N LI,LIST,NL,NUM,REP,STATUS,TYPE
"RTN","PXRMFRPT",202,0)
 S DONE=0
"RTN","PXRMFRPT",203,0)
 W !,"Clinical Reminders Usage Report"
"RTN","PXRMFRPT",204,0)
 F  Q:DONE  D
"RTN","PXRMFRPT",205,0)
 . K ^TMP($J,"DIALOG MESSAGE"),^TMP($J,"DLG FIND")
"RTN","PXRMFRPT",206,0)
 . K ^TMP($J,"FDATA"),^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",207,0)
 . K FNUM,GBL,GNAME,ITEMLIST,LIST
"RTN","PXRMFRPT",208,0)
 .;Get a list of findings for the report.
"RTN","PXRMFRPT",209,0)
 . D FSEL(.FNUM,.GBL,.GNAME,.LIST)
"RTN","PXRMFRPT",210,0)
 . S NUM=$L(LIST,",")-1
"RTN","PXRMFRPT",211,0)
 . I NUM=0 S DONE=1 Q
"RTN","PXRMFRPT",212,0)
 . D ISEL(.FNUM,.GBL,.GNAME,.LIST,.ITEMLIST)
"RTN","PXRMFRPT",213,0)
 . I '$D(ITEMLIST) Q
"RTN","PXRMFRPT",214,0)
 . D BLDDLGTM^PXRMSTS("DLG FIND")
"RTN","PXRMFRPT",215,0)
 . F IND=1:1:NUM D
"RTN","PXRMFRPT",216,0)
 .. S LI=$P(LIST,",",IND)
"RTN","PXRMFRPT",217,0)
 .. I '$D(ITEMLIST(FNUM(LI))) D BLDLIST(FNUM(LI),GBL(LI),"","FDATA") Q
"RTN","PXRMFRPT",218,0)
 .. I $D(ITEMLIST(FNUM(LI))) D
"RTN","PXRMFRPT",219,0)
 ... S FIEN=""
"RTN","PXRMFRPT",220,0)
 ... F  S FIEN=$O(ITEMLIST(FNUM(LI),FIEN)) Q:FIEN=""  D BLDLIST(FNUM(LI),GBL(LI),FIEN,"FDATA")
"RTN","PXRMFRPT",221,0)
 .;Process the finding list and generate the MailMan message.
"RTN","PXRMFRPT",222,0)
 . D REPORT
"RTN","PXRMFRPT",223,0)
 . K ^TMP($J,"FDATA"),^TMP($J,"SDATA"),^TMP("PXRMXMZ",$J),^TMP($J,"DLG FIND")
"RTN","PXRMFRPT",224,0)
 Q
"RTN","PXRMFRPT",225,0)
 ;
"RTN","PXRMFRPT",226,0)
 ;==============================
"RTN","PXRMFRPT",227,0)
REPORT ;Generate the report.
"RTN","PXRMFRPT",228,0)
 N DTYP,FILENUM,FNAME,FNUMLIST,GNAME,IND,NAME,NL,NOUT,NTYPE
"RTN","PXRMFRPT",229,0)
 N REPFNAME,REPGNAME,RNUM,STANDARD,STATUS
"RTN","PXRMFRPT",230,0)
 N TEXT,TEXTOUT,TO,TYPELIST
"RTN","PXRMFRPT",231,0)
 D SORT
"RTN","PXRMFRPT",232,0)
 S FNUMLIST("DEF")=811.9,TYPELIST("DEF")="Reminder Definition"
"RTN","PXRMFRPT",233,0)
 S FNUMLIST("DIALOG")=801.41,TYPELIST("DIALOG")="Reminder Dialog"
"RTN","PXRMFRPT",234,0)
 S FNUMLIST("LRULE")=810.4,TYPELIST("LRULE")="Reminder List Rule"
"RTN","PXRMFRPT",235,0)
 S FNUMLIST("OCRULE")=801.1,TYPELIST("OCRULE")="Reminder Order Check Rules"
"RTN","PXRMFRPT",236,0)
 S FNUMLIST("ROC")=801,TYPELIST("ROC")="Reminder Order Check Items Group"
"RTN","PXRMFRPT",237,0)
 S FNUMLIST("TERM")=811.5,TYPELIST("TERM")="Reminder Term"
"RTN","PXRMFRPT",238,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",239,0)
 S NL=1,^TMP("PXRMXMZ",$J,NL,0)="Clinical Reminders finding usage report."
"RTN","PXRMFRPT",240,0)
 S GNAME=""
"RTN","PXRMFRPT",241,0)
 F  S GNAME=$O(^TMP($J,"SDATA",GNAME)) Q:GNAME=""  D
"RTN","PXRMFRPT",242,0)
 . S FILENUM=$P(^TMP($J,"SDATA",GNAME),U,1)
"RTN","PXRMFRPT",243,0)
 . S STANDARD=$P(^TMP($J,"SDATA",GNAME),U,2)
"RTN","PXRMFRPT",244,0)
 . S NTYPE=0
"RTN","PXRMFRPT",245,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",246,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="The following "_GNAME_"(s) are used as follows:"
"RTN","PXRMFRPT",247,0)
 . I STANDARD S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="(This file has been standardized.)"
"RTN","PXRMFRPT",248,0)
 . S FNAME=""
"RTN","PXRMFRPT",249,0)
 . F  S FNAME=$O(^TMP($J,"SDATA",GNAME,FNAME)) Q:FNAME=""  D
"RTN","PXRMFRPT",250,0)
 .. S FIEN=^TMP($J,"SDATA",GNAME,FNAME)
"RTN","PXRMFRPT",251,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",252,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="======================================================="
"RTN","PXRMFRPT",253,0)
 .. S TEXT=GNAME_" - "_FNAME_" (IEN="_FIEN_")"
"RTN","PXRMFRPT",254,0)
 .. D FORMATS^PXRMTEXT(1,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",255,0)
 .. F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",256,0)
 .. I STANDARD D
"RTN","PXRMFRPT",257,0)
 ... S STATUS=^TMP($J,"SDATA",GNAME,FNAME,"STD")
"RTN","PXRMFRPT",258,0)
 ... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  status is: "_STATUS
"RTN","PXRMFRPT",259,0)
 ... I $D(^TMP($J,"SDATA",GNAME,FNAME,"STD","REP")) D
"RTN","PXRMFRPT",260,0)
 .... S REPGNAME=$P(^TMP($J,"SDATA",GNAME,FNAME,"STD","REP"),U,1)
"RTN","PXRMFRPT",261,0)
 .... S REPFNAME=$P(^TMP($J,"SDATA",GNAME,FNAME,"STD","REP"),U,2)
"RTN","PXRMFRPT",262,0)
 .... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  its replacement is "_REPGNAME_"; "_REPFNAME
"RTN","PXRMFRPT",263,0)
 .. S TYPE=""
"RTN","PXRMFRPT",264,0)
 .. F  S TYPE=$O(TYPELIST(TYPE)) Q:TYPE=""  D
"RTN","PXRMFRPT",265,0)
 ... I '$D(^TMP($J,"FDATA",FILENUM,FIEN,TYPE)) Q
"RTN","PXRMFRPT",266,0)
 ... S NTYPE=NTYPE+1
"RTN","PXRMFRPT",267,0)
 ... S RNUM=FNUMLIST(TYPE)
"RTN","PXRMFRPT",268,0)
 ... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",269,0)
 ... I NTYPE>1 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="---------------------------------"
"RTN","PXRMFRPT",270,0)
 ... S TEXT=" Is used in the following "_TYPELIST(TYPE)_"(s):"
"RTN","PXRMFRPT",271,0)
 ... D FORMATS^PXRMTEXT(4,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",272,0)
 ... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",273,0)
 ... S IEN=0
"RTN","PXRMFRPT",274,0)
 ... F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN)) Q:IEN=""  D
"RTN","PXRMFRPT",275,0)
 .... S NAME=$$GET1^DIQ(RNUM,IEN,.01)
"RTN","PXRMFRPT",276,0)
 .... I NAME="" S NAME="Undefined"
"RTN","PXRMFRPT",277,0)
 .... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",278,0)
 ....;
"RTN","PXRMFRPT",279,0)
 .... I TYPE="DIALOG" D 
"RTN","PXRMFRPT",280,0)
 ..... S DTYP=$P(^PXRMD(801.41,IEN,0),U,4)
"RTN","PXRMFRPT",281,0)
 ..... S TEXT="Dialog "_$S(DTYP="E":"element",DTYP="G":"group",DTYP="S":"result group",1:"item")
"RTN","PXRMFRPT",282,0)
 ..... S TEXT=TEXT_" "_NAME_$S($P(^PXRMD(801.41,IEN,0),U,3)=1:" (Disable)",1:"")_" (IEN="_IEN_")"
"RTN","PXRMFRPT",283,0)
 ..... S TEXT=TEXT_", used in the"
"RTN","PXRMFRPT",284,0)
 ..... D FORMATS^PXRMTEXT(6,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",285,0)
 ..... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",286,0)
 ..... S FI=0
"RTN","PXRMFRPT",287,0)
 ..... F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",288,0)
 ...... S TEXT=$S(FI=15:"Finding Item field",FI=17:"Orderable Item field",FI=18:"Additional Finding field",FI=119:"MH Test field",1:"")
"RTN","PXRMFRPT",289,0)
 ...... D FORMATS^PXRMTEXT(8,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",290,0)
 ...... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",291,0)
 ....;
"RTN","PXRMFRPT",292,0)
 .... I TYPE'="DIALOG" D
"RTN","PXRMFRPT",293,0)
 ..... S TEXT=NAME_" (IEN="_IEN_")"
"RTN","PXRMFRPT",294,0)
 ..... D FORMATS^PXRMTEXT(6,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",295,0)
 ..... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",296,0)
 ..... S FI=0
"RTN","PXRMFRPT",297,0)
 ..... F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",298,0)
 ...... S TEXT="Finding number "_FI
"RTN","PXRMFRPT",299,0)
 ...... D FORMATS^PXRMTEXT(8,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",300,0)
 ...... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",301,0)
 .....;
"RTN","PXRMFRPT",302,0)
 ;Deliver the report.
"RTN","PXRMFRPT",303,0)
 I NL=1 D  Q
"RTN","PXRMFRPT",304,0)
 . W !,"None of the selected findings are used."
"RTN","PXRMFRPT",305,0)
 . K ^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",306,0)
 N ANS,BOP,X
"RTN","PXRMFRPT",307,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMFRPT",308,0)
 I BOP="B" D
"RTN","PXRMFRPT",309,0)
 . S X="IORESET"
"RTN","PXRMFRPT",310,0)
 . D ENDR^%ZISS
"RTN","PXRMFRPT",311,0)
 . D BROWSE^DDBR("^TMP(""PXRMXMZ"",$J)","NR","Reminder Usage Report")
"RTN","PXRMFRPT",312,0)
 . W IORESET
"RTN","PXRMFRPT",313,0)
 . D KILL^%ZISS
"RTN","PXRMFRPT",314,0)
 I BOP="P" D GPRINT^PXRMUTIL("^TMP(""PXRMXMZ"",$J)")
"RTN","PXRMFRPT",315,0)
 ;Ask the user if they want the report delivered through MailMan.
"RTN","PXRMFRPT",316,0)
 S ANS=$$ASKYN^PXRMEUT("N","Deliver the report as a MailMan message")
"RTN","PXRMFRPT",317,0)
 I ANS="1" D
"RTN","PXRMFRPT",318,0)
 . S TO(DUZ)=""
"RTN","PXRMFRPT",319,0)
 . D SEND^PXRMMSG("PXRMXMZ","Clinical Reminders Finding Usage Report",.TO,DUZ)
"RTN","PXRMFRPT",320,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",321,0)
 Q
"RTN","PXRMFRPT",322,0)
 ;
"RTN","PXRMFRPT",323,0)
 ;==============================
"RTN","PXRMFRPT",324,0)
RSETLIST(FILENUM,GBL,FIEN,SUB) ;Search list rules for any that are using
"RTN","PXRMFRPT",325,0)
 ;GBL as a finding. If FIEN is not null then search for only those
"RTN","PXRMFRPT",326,0)
 ;findings.
"RTN","PXRMFRPT",327,0)
 N FNDIEN,IEN,TEMP,TYPE
"RTN","PXRMFRPT",328,0)
 S IEN=0
"RTN","PXRMFRPT",329,0)
 F  S IEN=+$O(^PXRM(810.4,IEN)) Q:IEN=0  D
"RTN","PXRMFRPT",330,0)
 . S TEMP=^PXRM(810.4,IEN,0)
"RTN","PXRMFRPT",331,0)
 . S TYPE=$P(TEMP,U,3)
"RTN","PXRMFRPT",332,0)
 .;If it is not a finding rule or reminder rule skip it.
"RTN","PXRMFRPT",333,0)
 . I (TYPE=3)!(TYPE=5) Q
"RTN","PXRMFRPT",334,0)
 . S FNDIEN=+$S(FILENUM=811.5:$P(TEMP,U,7),FILENUM=811.9:$P(TEMP,U,10),1:0)
"RTN","PXRMFRPT",335,0)
 . I FNDIEN=0 Q
"RTN","PXRMFRPT",336,0)
 .;If no finding specified find, all of them.
"RTN","PXRMFRPT",337,0)
 . I (FIEN=FNDIEN)!(FIEN="") S ^TMP($J,SUB,FILENUM,FNDIEN,"LRULE",IEN)=""
"RTN","PXRMFRPT",338,0)
 Q
"RTN","PXRMFRPT",339,0)
 ;
"RTN","PXRMFRPT",340,0)
 ;==============================
"RTN","PXRMFRPT",341,0)
SORT ;Sort by global name and finding name.
"RTN","PXRMFRPT",342,0)
 N FIEN,FILENUM,FNAME,GNAME,STANDARD
"RTN","PXRMFRPT",343,0)
 K ^TMP($J,"SDATA")
"RTN","PXRMFRPT",344,0)
 S FILENUM=0
"RTN","PXRMFRPT",345,0)
 F  S FILENUM=$O(^TMP($J,"FDATA",FILENUM)) Q:FILENUM=""  D
"RTN","PXRMFRPT",346,0)
 . S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMFRPT",347,0)
 .;DBIA #4640
"RTN","PXRMFRPT",348,0)
 . S STANDARD=$$SCREEN^HDISVF01(FILENUM)
"RTN","PXRMFRPT",349,0)
 . S ^TMP($J,"SDATA",GNAME)=FILENUM_U_STANDARD
"RTN","PXRMFRPT",350,0)
 . S FIEN=0
"RTN","PXRMFRPT",351,0)
 . F  S FIEN=$O(^TMP($J,"FDATA",FILENUM,FIEN)) Q:FIEN=""  D
"RTN","PXRMFRPT",352,0)
 .. S FNAME=$$GET1^DIQ(FILENUM,FIEN,.01)
"RTN","PXRMFRPT",353,0)
 .. I FNAME="" S FNAME="Undefined"
"RTN","PXRMFRPT",354,0)
 .. S ^TMP($J,"SDATA",GNAME,FNAME)=FIEN
"RTN","PXRMFRPT",355,0)
 .. I STANDARD D
"RTN","PXRMFRPT",356,0)
 ... N REPFNAME,REPFNUM,REPGNAME,REPIEN,STATUS
"RTN","PXRMFRPT",357,0)
 ...;DBIA #4631
"RTN","PXRMFRPT",358,0)
 ... S STATUS=$P($$GETSTAT^XTID(FILENUM,.01,FIEN_","),U,3)
"RTN","PXRMFRPT",359,0)
 ... I STATUS="" S STATUS="undefined"
"RTN","PXRMFRPT",360,0)
 ... S ^TMP($J,"SDATA",GNAME,FNAME,"STD")=STATUS
"RTN","PXRMFRPT",361,0)
 ... S REP=$$RPLCMNT^XTIDTRM(FILENUM,FIEN)
"RTN","PXRMFRPT",362,0)
 ... I REP=(FIEN_";"_FILENUM) S REP=""
"RTN","PXRMFRPT",363,0)
 ... I REP'="" D
"RTN","PXRMFRPT",364,0)
 .... S REPIEN=$P(REP,";",1)
"RTN","PXRMFRPT",365,0)
 .... S REPFNUM=$P(REP,";",2)
"RTN","PXRMFRPT",366,0)
 .... S REPGNAME=$$GET1^DID(REPFNUM,"","","NAME")
"RTN","PXRMFRPT",367,0)
 .... S REPFNAME=$$GET1^DIQ(REPFNUM,REPIEN,.01)
"RTN","PXRMFRPT",368,0)
 .... S ^TMP($J,"SDATA",GNAME,FNAME,"STD","REP")=REPGNAME_U_REPFNAME
"RTN","PXRMFRPT",369,0)
 Q
"RTN","PXRMFRPT",370,0)
 ;
"RTN","PXRMFRPT",371,0)
 ;==============================
"RTN","PXRMFRPT",372,0)
TERMLIST(FILENUM,GBL,FIEN,SUB) ;Search reminder terms for any that are using
"RTN","PXRMFRPT",373,0)
 ;GBL as a finding. If FIEN is not null then search for only those
"RTN","PXRMFRPT",374,0)
 ;findings.
"RTN","PXRMFRPT",375,0)
 N FI,FNDIEN,IEN
"RTN","PXRMFRPT",376,0)
 S IEN=0
"RTN","PXRMFRPT",377,0)
 F  S IEN=+$O(^PXRMD(811.5,IEN)) Q:IEN=0  D
"RTN","PXRMFRPT",378,0)
 . I '$D(^PXRMD(811.5,IEN,20,"E",GBL)) Q
"RTN","PXRMFRPT",379,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",380,0)
 .. S FI=""
"RTN","PXRMFRPT",381,0)
 .. F  S FI=$O(^PXRMD(811.5,IEN,20,"E",GBL,FIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",382,0)
 ... S ^TMP($J,SUB,FILENUM,FIEN,"TERM",IEN,FI)=""
"RTN","PXRMFRPT",383,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",384,0)
 ..;No finding specified find, all of them.
"RTN","PXRMFRPT",385,0)
 .. S FNDIEN=""
"RTN","PXRMFRPT",386,0)
 .. F  S FNDIEN=$O(^PXRMD(811.5,IEN,20,"E",GBL,FNDIEN)) Q:FNDIEN=""  D
"RTN","PXRMFRPT",387,0)
 ... S FI=""
"RTN","PXRMFRPT",388,0)
 ... F  S FI=$O(^PXRMD(811.5,IEN,20,"E",GBL,FNDIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",389,0)
 .... S ^TMP($J,SUB,FILENUM,FNDIEN,"TERM",IEN,FI)=""
"RTN","PXRMFRPT",390,0)
 Q
"RTN","PXRMFRPT",391,0)
 ;
"RTN","PXRMGEDT")
0^78^B45920622
"RTN","PXRMGEDT",1,0)
PXRMGEDT ; SLC/PJH - PXRM General Edit/Add. ;01/28/2013
"RTN","PXRMGEDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMGEDT",3,0)
 ;
"RTN","PXRMGEDT",4,0)
 ;
"RTN","PXRMGEDT",5,0)
 ;Called from protocol PXRM SELECTION ADD
"RTN","PXRMGEDT",6,0)
 ;
"RTN","PXRMGEDT",7,0)
ADD(TYP) ;
"RTN","PXRMGEDT",8,0)
 N DIC,DIDEL,DLAYGO,DTOUT,DUOUT,FILE,HED,PXRMHD,X,Y
"RTN","PXRMGEDT",9,0)
 W IORESET
"RTN","PXRMGEDT",10,0)
 ;
"RTN","PXRMGEDT",11,0)
 ;Ignore finding type parameters
"RTN","PXRMGEDT",12,0)
 I "FPAR"=TYP D DUMMY^PXRMRUTL H 1 Q
"RTN","PXRMGEDT",13,0)
 ;
"RTN","PXRMGEDT",14,0)
 ;Edit dialog
"RTN","PXRMGEDT",15,0)
 I "DLGE"=TYP D ADD^PXRMDEDT Q
"RTN","PXRMGEDT",16,0)
 ;
"RTN","PXRMGEDT",17,0)
 ;Allow auto generate of reminder dialogs
"RTN","PXRMGEDT",18,0)
 I TYP["DLG" D ^PXRMDBLD Q
"RTN","PXRMGEDT",19,0)
 ;
"RTN","PXRMGEDT",20,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",21,0)
 I TYP="FIP" S FILE="801.43",HED="FINDING ITEM PARAMETER"
"RTN","PXRMGEDT",22,0)
 ;
"RTN","PXRMGEDT",23,0)
 ;Reminder Category
"RTN","PXRMGEDT",24,0)
 I TYP="RCAT" S FILE="811.7",HED="REMINDER CATEGORY"
"RTN","PXRMGEDT",25,0)
 ;
"RTN","PXRMGEDT",26,0)
 ;Resolution Status
"RTN","PXRMGEDT",27,0)
 I TYP="RESN" S FILE="801.9",HED="RESOLUTION STATUS"
"RTN","PXRMGEDT",28,0)
 ;
"RTN","PXRMGEDT",29,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",30,0)
 I TYP="SHFR" S FILE="801.95",HED="HEALTH FACTOR"
"RTN","PXRMGEDT",31,0)
 ;
"RTN","PXRMGEDT",32,0)
 F  D  Q:(X="")!$D(DUOUT)!$D(DTOUT)
"RTN","PXRMGEDT",33,0)
 .S DIC=FILE,DLAYGO=DIC,DIDEL=DIC,DIC(0)="QAELX"
"RTN","PXRMGEDT",34,0)
 .S DIC("A")="Select new "_HED_" name: "
"RTN","PXRMGEDT",35,0)
 .I TYP="SHFR" S DIC(0)="QAEL"
"RTN","PXRMGEDT",36,0)
 .D ^DIC Q:X=""
"RTN","PXRMGEDT",37,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMGEDT",38,0)
 .I Y=-1 S DUOUT=1 W !,"Details not saved",! Q
"RTN","PXRMGEDT",39,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMGEDT",40,0)
 .;Check if exists
"RTN","PXRMGEDT",41,0)
 .I ($P(Y,U,3)'=1) W !,"already exists" Q
"RTN","PXRMGEDT",42,0)
 .S DA=$P(Y,U)
"RTN","PXRMGEDT",43,0)
 .;Edit resolution status
"RTN","PXRMGEDT",44,0)
 .I TYP="RESN" D EDIT^PXRMSEDT("^PXRMD(801.9,",DA)
"RTN","PXRMGEDT",45,0)
 .;Edit others
"RTN","PXRMGEDT",46,0)
 .I TYP'="RESN" D EDIT(TYP,DA,1)
"RTN","PXRMGEDT",47,0)
 .S DUOUT=1
"RTN","PXRMGEDT",48,0)
 Q
"RTN","PXRMGEDT",49,0)
 ;
"RTN","PXRMGEDT",50,0)
DIE(HDR,FILE) ;Lock and edit
"RTN","PXRMGEDT",51,0)
 I FILE=801.45 W "ED - EDIT "_HDR,!!,PXRMHD,!
"RTN","PXRMGEDT",52,0)
 ;Display resolution details if finding type parameter edit
"RTN","PXRMGEDT",53,0)
 I FILE=801.45,$G(PXRMINST)'=1 D
"RTN","PXRMGEDT",54,0)
 .N RSUB,RNAM
"RTN","PXRMGEDT",55,0)
 .S RSUB=$P($G(^PXRMD(801.45,PXRMFIEN,1,PXRMFSUB,0)),U) Q:'RSUB
"RTN","PXRMGEDT",56,0)
 .S RNAM=$P($G(^PXRMD(801.9,RSUB,0)),U)
"RTN","PXRMGEDT",57,0)
 .S:RNAM="" RNAM=RSUB W "RESOLUTION STATUS : ",RNAM
"RTN","PXRMGEDT",58,0)
 D:$$LOCK(FILE) ^DIE,UNLOCK(FILE)
"RTN","PXRMGEDT",59,0)
 Q
"RTN","PXRMGEDT",60,0)
 ;
"RTN","PXRMGEDT",61,0)
 ;Called by protocol PXRM GENERAL EDIT
"RTN","PXRMGEDT",62,0)
 ;------------------------------------
"RTN","PXRMGEDT",63,0)
EDIT(TYP,DA,ADD) ;
"RTN","PXRMGEDT",64,0)
 N DIC,DIDEL,DIE,DR,DTOUT,DUOUT,Y
"RTN","PXRMGEDT",65,0)
 W IORESET
"RTN","PXRMGEDT",66,0)
 S VALMBCK="R"
"RTN","PXRMGEDT",67,0)
 ;
"RTN","PXRMGEDT",68,0)
 ;Taxonomy Dialog
"RTN","PXRMGEDT",69,0)
 I TYP="DTAX" D
"RTN","PXRMGEDT",70,0)
 .I $$TLOCK(811.2,DA) D  D TUNLOCK(811.2,DA)
"RTN","PXRMGEDT",71,0)
 ..;Initialize the selectable codes if none exist
"RTN","PXRMGEDT",72,0)
 ..I ('$D(^PXD(811.2,DA,"SDX")))&('$D(^PXD(811.2,DA,"SPR"))) D
"RTN","PXRMGEDT",73,0)
 ...D BUILD^PXRMTDUP(DA)
"RTN","PXRMGEDT",74,0)
 ..;
"RTN","PXRMGEDT",75,0)
 ..N DIE,DR
"RTN","PXRMGEDT",76,0)
 ..S DIE="^PXD(811.2,"
"RTN","PXRMGEDT",77,0)
 ..;
"RTN","PXRMGEDT",78,0)
 ..W !,"Dialog Text Fields"
"RTN","PXRMGEDT",79,0)
 ..S DR=".03;3107;3108;3111;3112"
"RTN","PXRMGEDT",80,0)
 ..D ^DIE
"RTN","PXRMGEDT",81,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",82,0)
 ..;
"RTN","PXRMGEDT",83,0)
 ..W !!,"Dialog Selectable codes"
"RTN","PXRMGEDT",84,0)
 ..S DR="3102;3104"
"RTN","PXRMGEDT",85,0)
 ..D ^DIE
"RTN","PXRMGEDT",86,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",87,0)
 ..;
"RTN","PXRMGEDT",88,0)
 ..W !!,"Dialog Generation Parameters"
"RTN","PXRMGEDT",89,0)
 ..S DR="3106;3110"
"RTN","PXRMGEDT",90,0)
 ..D ^DIE
"RTN","PXRMGEDT",91,0)
 ;
"RTN","PXRMGEDT",92,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",93,0)
 I TYP="FIP" D
"RTN","PXRMGEDT",94,0)
 .S DIE="^PXRMD(801.43,",DR=".01;.02;.03;.04",DIDEL=801.43
"RTN","PXRMGEDT",95,0)
 .D DIE("FINDING ITEM PARAMETER",801.43)
"RTN","PXRMGEDT",96,0)
 ;
"RTN","PXRMGEDT",97,0)
 ;Finding Type Parameter
"RTN","PXRMGEDT",98,0)
 I TYP="FPAR" D
"RTN","PXRMGEDT",99,0)
 .;Programmer mode
"RTN","PXRMGEDT",100,0)
 .S:$G(PXRMINST)=1 DR=1,DR(2,801.451)="1;3;4;5",DIE="^PXRMD(801.45,"
"RTN","PXRMGEDT",101,0)
 .;Site mode
"RTN","PXRMGEDT",102,0)
 .I $G(PXRMINST)'=1 D
"RTN","PXRMGEDT",103,0)
 ..S DR="1;3;4;5",DIE="^PXRMD(801.45,PXRMFIEN,1,",DA(1)=PXRMFIEN
"RTN","PXRMGEDT",104,0)
 ..S DR(2,801.4515)="2;4;5;6;1"
"RTN","PXRMGEDT",105,0)
 .D DIE("FINDING TYPE PARAMETER",801.45)
"RTN","PXRMGEDT",106,0)
 ;
"RTN","PXRMGEDT",107,0)
 ;Reminder Category
"RTN","PXRMGEDT",108,0)
 I TYP="RCAT" D
"RTN","PXRMGEDT",109,0)
 .S DIE="^PXRMD(811.7,",DR=".01;1;2;10",DIDEL=811.7
"RTN","PXRMGEDT",110,0)
 .D DIE("CATEGORY",811.7)
"RTN","PXRMGEDT",111,0)
 ;
"RTN","PXRMGEDT",112,0)
 ;Resolution Status
"RTN","PXRMGEDT",113,0)
 I TYP="RESN" D
"RTN","PXRMGEDT",114,0)
 .I $$LOCK(801.9) D EDIT^PXRMSEDT("^PXRMD(801.9,",.DA),UNLOCK(811.9)
"RTN","PXRMGEDT",115,0)
 ;
"RTN","PXRMGEDT",116,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",117,0)
 I TYP="SHFR" D
"RTN","PXRMGEDT",118,0)
 .S DIE="^PXRMD(801.95,",DR=".01;.02",DIDEL=801.95
"RTN","PXRMGEDT",119,0)
 .D DIE("HEALTH FACTOR RESOLUTIONS",811.7)
"RTN","PXRMGEDT",120,0)
 ;
"RTN","PXRMGEDT",121,0)
 ;Skip rebuild if editting taxonomy called from dialog edit
"RTN","PXRMGEDT",122,0)
 I PXRMGTYP["DLG" Q
"RTN","PXRMGEDT",123,0)
 ;
"RTN","PXRMGEDT",124,0)
 ;Deleted ???
"RTN","PXRMGEDT",125,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMGEDT",126,0)
 ;Redisplay changes
"RTN","PXRMGEDT",127,0)
 I 'ADD D BUILD^PXRMGEN
"RTN","PXRMGEDT",128,0)
 Q
"RTN","PXRMGEDT",129,0)
 ;
"RTN","PXRMGEDT",130,0)
 ;
"RTN","PXRMGEDT",131,0)
LOCK(FILE) ;Lock the entire file
"RTN","PXRMGEDT",132,0)
 L +^PXRMD(FILE):DILOCKTM I  Q 1
"RTN","PXRMGEDT",133,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2
"RTN","PXRMGEDT",134,0)
 Q 0
"RTN","PXRMGEDT",135,0)
 ;
"RTN","PXRMGEDT",136,0)
 ;
"RTN","PXRMGEDT",137,0)
UNLOCK(FILE) ;Unlock the file
"RTN","PXRMGEDT",138,0)
 L -^PXRMD(FILE)
"RTN","PXRMGEDT",139,0)
 Q
"RTN","PXRMGEDT",140,0)
 ;Build the list of codes for one taxonomy
"RTN","PXRMGEDT",141,0)
 ;----------------------------------------
"RTN","PXRMGEDT",142,0)
SEL(TAXIND) ;
"RTN","PXRMGEDT",143,0)
 N CODELIST,IC,FINDING,FILE,HIGH,LOW,NCE,TEMP
"RTN","PXRMGEDT",144,0)
 ;
"RTN","PXRMGEDT",145,0)
 ;Setup file names for indirection, these will hold the taxonomy lists.
"RTN","PXRMGEDT",146,0)
 N ICD9IEN,ICPTIEN
"RTN","PXRMGEDT",147,0)
 S ICD9IEN="^TMP(""PXRM"",$J,""ICD9IEN"")"
"RTN","PXRMGEDT",148,0)
 S ICPTIEN="^TMP(""PXRM"",$J,""ICPTIEN"")"
"RTN","PXRMGEDT",149,0)
 ;
"RTN","PXRMGEDT",150,0)
 S NCE=0
"RTN","PXRMGEDT",151,0)
 F FILE=80,81 D
"RTN","PXRMGEDT",152,0)
 .S IC=0
"RTN","PXRMGEDT",153,0)
 .F  S IC=$O(^PXD(811.2,TAXIND,FILE,IC)) Q:+IC=0  D
"RTN","PXRMGEDT",154,0)
 ..S TEMP=$G(^PXD(811.2,TAXIND,FILE,IC,0))
"RTN","PXRMGEDT",155,0)
 ..;Append the taxonomy and finding information to CODELIST.
"RTN","PXRMGEDT",156,0)
 ..S NCE=NCE+1
"RTN","PXRMGEDT",157,0)
 ..S CODELIST(NCE)=TEMP_U_FILE
"RTN","PXRMGEDT",158,0)
 ;CODELIST is LOW_U_HIGH_U_FILE
"RTN","PXRMGEDT",159,0)
 ;Go through the standard coded list and get the file IEN for each entry.
"RTN","PXRMGEDT",160,0)
 F IC=1:1:NCE D
"RTN","PXRMGEDT",161,0)
 .S LOW=$P(CODELIST(IC),U,1)
"RTN","PXRMGEDT",162,0)
 .S HIGH=$P(CODELIST(IC),U,2)
"RTN","PXRMGEDT",163,0)
 .S FILE=$P(CODELIST(IC),U,3)
"RTN","PXRMGEDT",164,0)
 .I FILE=80 D ICD9(LOW,HIGH) Q
"RTN","PXRMGEDT",165,0)
 .I FILE=81 D ICPT(LOW,HIGH) Q
"RTN","PXRMGEDT",166,0)
 ;
"RTN","PXRMGEDT",167,0)
 ;Store the results.
"RTN","PXRMGEDT",168,0)
 D STORE(TAXIND)
"RTN","PXRMGEDT",169,0)
 K ^TMP("PXRM",$J,"ICD9IEN")
"RTN","PXRMGEDT",170,0)
 K ^TMP("PXRM",$J,"ICPTIEN")
"RTN","PXRMGEDT",171,0)
 Q
"RTN","PXRMGEDT",172,0)
 ;
"RTN","PXRMGEDT",173,0)
 ;=======================================================================
"RTN","PXRMGEDT",174,0)
DEL(TAXIND) ;Delete existing entry
"RTN","PXRMGEDT",175,0)
 K ^PXD(811.2,TAXIND,"SDX")
"RTN","PXRMGEDT",176,0)
 K ^PXD(811.2,TAXIND,"SPR")
"RTN","PXRMGEDT",177,0)
 Q
"RTN","PXRMGEDT",178,0)
 ;
"RTN","PXRMGEDT",179,0)
 ;Build the list of internal entries for ICD9 (File 80)
"RTN","PXRMGEDT",180,0)
 ;-----------------------------------------------------
"RTN","PXRMGEDT",181,0)
ICD9(LOW,HIGH) ;
"RTN","PXRMGEDT",182,0)
 N END,IEN,IND
"RTN","PXRMGEDT",183,0)
 S IND=LOW_" "
"RTN","PXRMGEDT",184,0)
 S END=HIGH_" "
"RTN","PXRMGEDT",185,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMGEDT",186,0)
 .S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMGEDT",187,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),80) D
"RTN","PXRMGEDT",188,0)
 ..S ^TMP("PXRM",$J,"ICD9IEN",IND)=IEN
"RTN","PXRMGEDT",189,0)
 .S IND=$O(^ICD9("BA",IND))
"RTN","PXRMGEDT",190,0)
 Q
"RTN","PXRMGEDT",191,0)
 ;
"RTN","PXRMGEDT",192,0)
 ;Build the list of internal entries for ICPT (File 81)
"RTN","PXRMGEDT",193,0)
 ;-----------------------------------------------------
"RTN","PXRMGEDT",194,0)
ICPT(LOW,HIGH) ;
"RTN","PXRMGEDT",195,0)
 N IEN,IND
"RTN","PXRMGEDT",196,0)
 S IND=LOW
"RTN","PXRMGEDT",197,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMGEDT",198,0)
 .S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMGEDT",199,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),81) D
"RTN","PXRMGEDT",200,0)
 ..S ^TMP("PXRM",$J,"ICPTIEN",IND)=IEN
"RTN","PXRMGEDT",201,0)
 .S IND=$O(^ICPT("B",IND))
"RTN","PXRMGEDT",202,0)
 Q
"RTN","PXRMGEDT",203,0)
 ;
"RTN","PXRMGEDT",204,0)
 ;Store selectable codes in taxonomy
"RTN","PXRMGEDT",205,0)
 ;----------------------------------
"RTN","PXRMGEDT",206,0)
STORE(TAXIND) ;
"RTN","PXRMGEDT",207,0)
 K ^TMP("PXRMGEDT",$J)
"RTN","PXRMGEDT",208,0)
 N FDA,FDAIEN,FITEM,I2N,IEN,IND,MSG,NAME,SEQ,SUB,TEMP
"RTN","PXRMGEDT",209,0)
 ;
"RTN","PXRMGEDT",210,0)
 S NAME=$P(^PXD(811.2,TAXIND,0),U)
"RTN","PXRMGEDT",211,0)
 ;
"RTN","PXRMGEDT",212,0)
 S FDAIEN(1)=TAXIND
"RTN","PXRMGEDT",213,0)
 ;
"RTN","PXRMGEDT",214,0)
 S SUB="",IND=1,SEQ=0
"RTN","PXRMGEDT",215,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICD9IEN",SUB)) Q:SUB=""  D
"RTN","PXRMGEDT",216,0)
 .S IEN=^TMP("PXRM",$J,"ICD9IEN",SUB)
"RTN","PXRMGEDT",217,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMGEDT",218,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMGEDT",219,0)
 .S ^TMP("PXRMGEDT",$J,811.23102,I2N,.01)=IEN
"RTN","PXRMGEDT",220,0)
 ;
"RTN","PXRMGEDT",221,0)
 S SEQ=0
"RTN","PXRMGEDT",222,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICPTIEN",SUB)) Q:SUB=""  D
"RTN","PXRMGEDT",223,0)
 .S IEN=^TMP("PXRM",$J,"ICPTIEN",SUB)
"RTN","PXRMGEDT",224,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMGEDT",225,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMGEDT",226,0)
 .S ^TMP("PXRMGEDT",$J,811.23104,I2N,.01)=IEN
"RTN","PXRMGEDT",227,0)
 ;
"RTN","PXRMGEDT",228,0)
 ;None found
"RTN","PXRMGEDT",229,0)
 I IND=1 Q
"RTN","PXRMGEDT",230,0)
 ;
"RTN","PXRMGEDT",231,0)
 S TEMP="^TMP(""PXRMGEDT"","_$J_")"
"RTN","PXRMGEDT",232,0)
 D UPDATE^DIE("",TEMP,"FDAIEN","MSG")
"RTN","PXRMGEDT",233,0)
 I $D(MSG) D ERR
"RTN","PXRMGEDT",234,0)
 K ^TMP("PXRMGEDT",$J)
"RTN","PXRMGEDT",235,0)
 Q
"RTN","PXRMGEDT",236,0)
 ;
"RTN","PXRMGEDT",237,0)
 ;Error Handler
"RTN","PXRMGEDT",238,0)
 ;-------------
"RTN","PXRMGEDT",239,0)
ERR N ERROR,IC,REF
"RTN","PXRMGEDT",240,0)
 S ERROR(1)="Unable to build selectable codes for taxonomy : "
"RTN","PXRMGEDT",241,0)
 S ERROR(2)=NAME
"RTN","PXRMGEDT",242,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMGEDT",243,0)
 ;Move MSG into ERROR
"RTN","PXRMGEDT",244,0)
 S REF="MSG"
"RTN","PXRMGEDT",245,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMGEDT",246,0)
 ;Screen message
"RTN","PXRMGEDT",247,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMGEDT",248,0)
 Q
"RTN","PXRMGEDT",249,0)
 ;
"RTN","PXRMGEDT",250,0)
TLOCK(FILE,DA) ;Lock the record
"RTN","PXRMGEDT",251,0)
 L +^PXD(FILE,DA):DILOCKTM I  Q 1
"RTN","PXRMGEDT",252,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMGEDT",253,0)
 ;
"RTN","PXRMGEDT",254,0)
 ;
"RTN","PXRMGEDT",255,0)
TUNLOCK(FILE,DA) ;Unlock the record
"RTN","PXRMGEDT",256,0)
 L -^PXD(FILE,DA)
"RTN","PXRMGEDT",257,0)
 Q
"RTN","PXRMGEN")
0^37^B4344668
"RTN","PXRMGEN",1,0)
PXRMGEN ; SLC/PJH - PXRM General Edit/Inquiry ;09/08/2012
"RTN","PXRMGEN",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMGEN",3,0)
 ;
"RTN","PXRMGEN",4,0)
 ;Labels called from list 'PXRM GENERAL EDIT/LIST'
"RTN","PXRMGEN",5,0)
 ;
"RTN","PXRMGEN",6,0)
START(HEADER,PXRMGTYP,IEN) ;
"RTN","PXRMGEN",7,0)
 N PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMGEN",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMGEN",9,0)
 S X="IORESET"
"RTN","PXRMGEN",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM GENERAL EDIT/LIST")
"RTN","PXRMGEN",11,0)
 W IORESET
"RTN","PXRMGEN",12,0)
 D KILL^%ZISS
"RTN","PXRMGEN",13,0)
 Q
"RTN","PXRMGEN",14,0)
 ;
"RTN","PXRMGEN",15,0)
EXIT ;Exit code
"RTN","PXRMGEN",16,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMGEN",17,0)
 S VALMBCK="Q"
"RTN","PXRMGEN",18,0)
 K ^TMP("PXRMGEN",$J)
"RTN","PXRMGEN",19,0)
 Q
"RTN","PXRMGEN",20,0)
 ;
"RTN","PXRMGEN",21,0)
HDR ; Header code
"RTN","PXRMGEN",22,0)
 S VALMHDR(1)=HEADER
"RTN","PXRMGEN",23,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMGEN",24,0)
 Q
"RTN","PXRMGEN",25,0)
 ;
"RTN","PXRMGEN",26,0)
HELP ;Help code
"RTN","PXRMGEN",27,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="G"_PXRMGTYP
"RTN","PXRMGEN",28,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMGEN",29,0)
 Q
"RTN","PXRMGEN",30,0)
 ;
"RTN","PXRMGEN",31,0)
INIT ;Init
"RTN","PXRMGEN",32,0)
 S VALMCNT=0
"RTN","PXRMGEN",33,0)
 D BUILD
"RTN","PXRMGEN",34,0)
 Q
"RTN","PXRMGEN",35,0)
 ;
"RTN","PXRMGEN",36,0)
 ;Load details (also called from edit PXRMGEDIT)
"RTN","PXRMGEN",37,0)
BUILD ;
"RTN","PXRMGEN",38,0)
 ;I PXRMGTYP="DTAX" D DTAX^PXRMTDLG(PXRMTIEN)
"RTN","PXRMGEN",39,0)
 I PXRMGTYP="FIP" D FIP^PXRMFIP(PXRMFIP)
"RTN","PXRMGEN",40,0)
 I PXRMGTYP="FPAR" D FPAR^PXRMFIND
"RTN","PXRMGEN",41,0)
 I PXRMGTYP="RCAT" D CAT^PXRMCAT(PXRMCAT)
"RTN","PXRMGEN",42,0)
 I PXRMGTYP="RESN" D RESN^PXRMRESN(PXRMRESN)
"RTN","PXRMGEN",43,0)
 I PXRMGTYP="SHFR" D SHFR^PXRMSHF(PXRMSHF)
"RTN","PXRMGEN",44,0)
 ;Reset Header
"RTN","PXRMGEN",45,0)
 D HDR
"RTN","PXRMGEN",46,0)
 Q
"RTN","PXRMGEN",47,0)
 ;
"RTN","PXRMGEN",48,0)
INQUIRE W IORESET
"RTN","PXRMGEN",49,0)
 ;I PXRMGTYP="DTAX" D INQ^PXRMTDLG(PXRMTIEN)
"RTN","PXRMGEN",50,0)
 I PXRMGTYP="RCAT" D INQ^PXRMCLST(PXRMCAT)
"RTN","PXRMGEN",51,0)
 I PXRMGTYP="DLG" D INQ^PXRMDLST(PXRMDIEN)
"RTN","PXRMGEN",52,0)
 I PXRMGTYP="DLGR" D INQ^PXRMDLST(PXRMDIEN)
"RTN","PXRMGEN",53,0)
 I PXRMGTYP="FIP" D INQ^PXRMFIP(PXRMFIP)
"RTN","PXRMGEN",54,0)
 I PXRMGTYP="FPAR" D INQ^PXRMFLST(PXRMFIEN)
"RTN","PXRMGEN",55,0)
 I PXRMGTYP="RESN" D INQ^PXRMSLST(PXRMRESN)
"RTN","PXRMGEN",56,0)
 I PXRMGTYP="SHFR" D INQ^PXRMSHF(PXRMSHF)
"RTN","PXRMGEN",57,0)
 ;
"RTN","PXRMGEN",58,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PXRMGEN",59,0)
 ;
"RTN","PXRMGEN",60,0)
 S VALMBCK="R"
"RTN","PXRMGEN",61,0)
 Q
"RTN","PXRMGEN",62,0)
 ;
"RTN","PXRMGEN",63,0)
PEXIT ;PXRM GENERAL MENU protocol exit code
"RTN","PXRMGEN",64,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMGEN",65,0)
 Q
"RTN","PXRMICHK")
0^56^B191422911
"RTN","PXRMICHK",1,0)
PXRMICHK ;SLC/PKR - Integrity checking routines. ;11/14/2013
"RTN","PXRMICHK",2,0)
 ;;2.0;CLINICAL REMINDERS;**18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMICHK",3,0)
 ;
"RTN","PXRMICHK",4,0)
 ;======================================================
"RTN","PXRMICHK",5,0)
CCRLOGIC(COHOK,RESOK,DEFARR) ;Check cohort and resolution logic.
"RTN","PXRMICHK",6,0)
 N AGE,FIEVAL,FINDING,FF,FLIST,IND,JND,NUM,OCCN,PCLOG
"RTN","PXRMICHK",7,0)
 N RESLOG,RESLSTR,SEX,TEMP,TEST,TEXT
"RTN","PXRMICHK",8,0)
 N PXRMAGE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMSEX
"RTN","PXRMICHK",9,0)
 S (PXRMAGE,PXRMDOB,PXRMDOD,PXRMLAD)=0
"RTN","PXRMICHK",10,0)
 S PXRMSEX=""
"RTN","PXRMICHK",11,0)
 ;Set all findings false.
"RTN","PXRMICHK",12,0)
 S (FIEVAL("AGE"),FIEVAL("SEX"))=0
"RTN","PXRMICHK",13,0)
 S IND=0
"RTN","PXRMICHK",14,0)
 F  S IND=+$O(DEFARR(20,IND)) Q:IND=0  D
"RTN","PXRMICHK",15,0)
 . S FIEVAL(IND)=0
"RTN","PXRMICHK",16,0)
 . S OCCN=$P(DEFARR(20,IND,0),U,14)
"RTN","PXRMICHK",17,0)
 . F JND=1:1:OCCN S FIEVAL(IND,JND)=0
"RTN","PXRMICHK",18,0)
 ;Evaluate function findings with all findings false.
"RTN","PXRMICHK",19,0)
 D EVAL^PXRMFF(0,.DEFARR,.FIEVAL)
"RTN","PXRMICHK",20,0)
 I COHOK D
"RTN","PXRMICHK",21,0)
 . S TEMP=DEFARR(32)
"RTN","PXRMICHK",22,0)
 . S NUM=+$P(TEMP,U,1)
"RTN","PXRMICHK",23,0)
 . I NUM=0 Q
"RTN","PXRMICHK",24,0)
 . S PCLOG=DEFARR(31)
"RTN","PXRMICHK",25,0)
 . S FLIST=$P(TEMP,U,2)
"RTN","PXRMICHK",26,0)
 . F IND=1:1:NUM D
"RTN","PXRMICHK",27,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMICHK",28,0)
 .. I FINDING="AGE" S AGE=+$G(FIEVAL("AGE"))
"RTN","PXRMICHK",29,0)
 .. I FINDING="SEX" S SEX=+$G(FIEVAL("SEX"))
"RTN","PXRMICHK",30,0)
 .. I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMICHK",31,0)
 .. E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMICHK",32,0)
 . I @PCLOG
"RTN","PXRMICHK",33,0)
 . S TEST=$T
"RTN","PXRMICHK",34,0)
 . I TEST D
"RTN","PXRMICHK",35,0)
 .. S TEXT(1)="WARNING: Cohort logic is true even when there are no true findings!"
"RTN","PXRMICHK",36,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",37,0)
 I RESOK D
"RTN","PXRMICHK",38,0)
 . S TEMP=DEFARR(36)
"RTN","PXRMICHK",39,0)
 . S NUM=+$P(TEMP,U,1)
"RTN","PXRMICHK",40,0)
 . I NUM=0 Q
"RTN","PXRMICHK",41,0)
 . S (RESLOG,RESLSTR)=DEFARR(35)
"RTN","PXRMICHK",42,0)
 . S FLIST=$P(TEMP,U,2)
"RTN","PXRMICHK",43,0)
 . F IND=1:1:NUM D
"RTN","PXRMICHK",44,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMICHK",45,0)
 .. I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMICHK",46,0)
 .. E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMICHK",47,0)
 . I @RESLOG
"RTN","PXRMICHK",48,0)
 . S TEST=$T
"RTN","PXRMICHK",49,0)
 . I TEST D
"RTN","PXRMICHK",50,0)
 .. S TEXT(1)="WARNING: Resolution logic is true even when there are no true findings!"
"RTN","PXRMICHK",51,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",52,0)
 Q
"RTN","PXRMICHK",53,0)
 ;
"RTN","PXRMICHK",54,0)
 ;======================================================
"RTN","PXRMICHK",55,0)
CFCHK(USAGE,IND,FIEN,DEF,DEFARR,TYPE) ;Check computed findings.
"RTN","PXRMICHK",56,0)
 N CFPR,CFNAME,CFPAR,CFTYPE,OK,TEXT
"RTN","PXRMICHK",57,0)
 S OK=1
"RTN","PXRMICHK",58,0)
 ;Is the Computed Finding Parameter required?
"RTN","PXRMICHK",59,0)
 S CFPR=$P(^PXRMD(811.4,FIEN,0),U,6)
"RTN","PXRMICHK",60,0)
 S CFNAME=$P(^PXRMD(811.4,FIEN,0),U,1)
"RTN","PXRMICHK",61,0)
 S CFPAR=$P(DEFARR(20,IND,15),U,1)
"RTN","PXRMICHK",62,0)
 I CFPR,CFPAR="" D
"RTN","PXRMICHK",63,0)
 . I TYPE="D" S TEXT(1)="FATAL: Finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",64,0)
 . I TYPE="T" S TEXT(1)="FATAL: Term finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",65,0)
 . S TEXT(2)="This computed finding will not work properly unless the"
"RTN","PXRMICHK",66,0)
 . S TEXT(3)="Computed Finding Parameter is defined and in this case it is not."
"RTN","PXRMICHK",67,0)
 . D OUTPUT(3,.TEXT)
"RTN","PXRMICHK",68,0)
 . S OK=0
"RTN","PXRMICHK",69,0)
 ;If USAGE is 'L' make sure the CF is list type.
"RTN","PXRMICHK",70,0)
 S CFTYPE=$P(^PXRMD(811.4,FIEN,0),U,5)
"RTN","PXRMICHK",71,0)
 I CFTYPE="" S CFTYPE="S"
"RTN","PXRMICHK",72,0)
 I (USAGE["L"),(CFTYPE'="L") D
"RTN","PXRMICHK",73,0)
 . S CFNAME=$P(^PXRMD(811.4,FIEN,0),U,1)
"RTN","PXRMICHK",74,0)
 . K TEXT
"RTN","PXRMICHK",75,0)
 . I TYPE="D" S TEXT(1)="FATAL: Finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",76,0)
 . I TYPE="T" S TEXT(1)="FATAL: Term finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",77,0)
 . S TEXT(2)="Usage is 'L' and this computed finding's Type is "_CFTYPE_";"
"RTN","PXRMICHK",78,0)
 . S TEXT(3)="the Type must be 'L'."
"RTN","PXRMICHK",79,0)
 . D OUTPUT(3,.TEXT)
"RTN","PXRMICHK",80,0)
 . S OK=0
"RTN","PXRMICHK",81,0)
 ;If the CF is VA-REMINDER DEFINITION check for recursion.
"RTN","PXRMICHK",82,0)
 I (CFNAME="VA-REMINDER DEFINITION"),(CFPAR=DEF) D
"RTN","PXRMICHK",83,0)
 . K TEXT
"RTN","PXRMICHK",84,0)
 . I TYPE="D" S TEXT(1)="FATAL: Finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",85,0)
 . I TYPE="T" S TEXT(1)="FATAL: Term finding number "_IND_" uses computed finding "_CFNAME_"."
"RTN","PXRMICHK",86,0)
 . S TEXT(2)="It is recursively calling "_CFPAR
"RTN","PXRMICHK",87,0)
 . D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",88,0)
 . S OK=0
"RTN","PXRMICHK",89,0)
 Q OK
"RTN","PXRMICHK",90,0)
 ;
"RTN","PXRMICHK",91,0)
 ;======================================================
"RTN","PXRMICHK",92,0)
CHECKALL ;Check all definitions.
"RTN","PXRMICHK",93,0)
 N IEN,NAME,OK,POP,PXRMDONE,TEXT
"RTN","PXRMICHK",94,0)
 W #!,"Check the integrity of all reminder definitions."
"RTN","PXRMICHK",95,0)
 D ^%ZIS Q:POP
"RTN","PXRMICHK",96,0)
 U IO
"RTN","PXRMICHK",97,0)
 S NAME="",PXRMDONE=0
"RTN","PXRMICHK",98,0)
 F  S NAME=$O(^PXD(811.9,"B",NAME)) Q:(NAME="")!(PXRMDONE)  D
"RTN","PXRMICHK",99,0)
 . S IEN=$O(^PXD(811.9,"B",NAME,""))
"RTN","PXRMICHK",100,0)
 . S TEXT(1)=" "
"RTN","PXRMICHK",101,0)
 . S TEXT(2)="Checking "_NAME_" (IEN="_IEN_")"
"RTN","PXRMICHK",102,0)
 . D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",103,0)
 . S OK=$$DEF^PXRMICHK(IEN)
"RTN","PXRMICHK",104,0)
 D ^%ZISC
"RTN","PXRMICHK",105,0)
 Q
"RTN","PXRMICHK",106,0)
 ;
"RTN","PXRMICHK",107,0)
 ;======================================================
"RTN","PXRMICHK",108,0)
CHECKONE ;Check selected definitions.
"RTN","PXRMICHK",109,0)
 N DIC,DTOUT,DUOUT,IEN,OK,Y
"RTN","PXRMICHK",110,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMICHK",111,0)
 S DIC(0)="AEMQ"
"RTN","PXRMICHK",112,0)
 S DIC("A")="Select Reminder Definition: "
"RTN","PXRMICHK",113,0)
GETDEF ;Get the definition to check.
"RTN","PXRMICHK",114,0)
 W !
"RTN","PXRMICHK",115,0)
 D ^DIC
"RTN","PXRMICHK",116,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMICHK",117,0)
 I Y=-1 Q
"RTN","PXRMICHK",118,0)
 S IEN=$P(Y,U,1)
"RTN","PXRMICHK",119,0)
 W #
"RTN","PXRMICHK",120,0)
 S OK=$$DEF^PXRMICHK(IEN)
"RTN","PXRMICHK",121,0)
 G GETDEF
"RTN","PXRMICHK",122,0)
 Q
"RTN","PXRMICHK",123,0)
 ;
"RTN","PXRMICHK",124,0)
 ;======================================================
"RTN","PXRMICHK",125,0)
DATECHK(FINDING,DATE,TYPE,DEFARR) ;Check Beginning and Ending Date/Times if
"RTN","PXRMICHK",126,0)
 ;they contain FIEVAL.
"RTN","PXRMICHK",127,0)
 N ARGS,DFI,DTYPE,OCC,OCN,OK,TEXT
"RTN","PXRMICHK",128,0)
 S OK=1
"RTN","PXRMICHK",129,0)
 S ARGS=$E(DATE,$F(DATE,"FIEVAL("),$F(DATE,"""DATE"")")-9)
"RTN","PXRMICHK",130,0)
 I ARGS="" Q OK
"RTN","PXRMICHK",131,0)
 S DFI=$P(ARGS,",",1)
"RTN","PXRMICHK",132,0)
 I '$D(DEFARR(20,DFI)) D
"RTN","PXRMICHK",133,0)
 . S DTYPE=$S(TYPE="BDT":"Beginning Date/Time",TYPE="EDT":"Ending Date/Time")
"RTN","PXRMICHK",134,0)
 . S TEXT(1)="FATAL: "_DTYPE_" for finding number "_FINDING_" uses finding number "_DFI_" which does not exist."
"RTN","PXRMICHK",135,0)
 . D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",136,0)
 . S OK=0
"RTN","PXRMICHK",137,0)
 I OK D
"RTN","PXRMICHK",138,0)
 . S OCN=$P(ARGS,",",2)
"RTN","PXRMICHK",139,0)
 . I OCN="" Q
"RTN","PXRMICHK",140,0)
 . S OCC=+$P(DEFARR(20,DFI,0),U,14)
"RTN","PXRMICHK",141,0)
 . S OCC=$S(OCC=0:1,OCC>0:OCC,1:-OCC)
"RTN","PXRMICHK",142,0)
 . I OCN>OCC D
"RTN","PXRMICHK",143,0)
 .. S DTYPE=$S(TYPE="BDT":"Beginning Date/Time",TYPE="EDT":"Ending Date/Time")
"RTN","PXRMICHK",144,0)
 .. S TEXT(1)="FATAL: "_DTYPE_" for finding number "_FINDING_" uses occurrence "_OCN_" of finding number "_DFI_";"
"RTN","PXRMICHK",145,0)
 .. S TEXT(2)="the Occurrence Count for finding "_DFI_" is "_OCC_"."
"RTN","PXRMICHK",146,0)
 .. D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",147,0)
 .. S OK=0
"RTN","PXRMICHK",148,0)
 Q OK
"RTN","PXRMICHK",149,0)
 ;
"RTN","PXRMICHK",150,0)
 ;======================================================
"RTN","PXRMICHK",151,0)
DEF(IEN) ;Definition integrity check.
"RTN","PXRMICHK",152,0)
 N ARGTYPE,BDT,COHOK,DEF,DEFARR,EDT
"RTN","PXRMICHK",153,0)
 N FFNUM,FI,FIEN,FLIST,FNUM,FUNCTION,GBL,IND,JND,KND
"RTN","PXRMICHK",154,0)
 N OCC,OCN,LOGCHK,LOGINTR,LOGSTR,NFI,NBFREQ,NFFREQ,OK,RESOK
"RTN","PXRMICHK",155,0)
 N TEXT,USAGE,ZNODE
"RTN","PXRMICHK",156,0)
 S OK=1
"RTN","PXRMICHK",157,0)
 ;Check usage.
"RTN","PXRMICHK",158,0)
 S ZNODE=^PXD(811.9,IEN,100)
"RTN","PXRMICHK",159,0)
 S USAGE=$P(ZNODE,U,4)
"RTN","PXRMICHK",160,0)
 I $P(ZNODE,U,1)'="N",USAGE["P" D
"RTN","PXRMICHK",161,0)
 . K TEXT
"RTN","PXRMICHK",162,0)
 . S TEXT(1)="WARNING: Usage field contains a ""P"" and this is not a national reminder definition."
"RTN","PXRMICHK",163,0)
 . D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",164,0)
 ;
"RTN","PXRMICHK",165,0)
 D DEF^PXRMLDR(IEN,.DEFARR)
"RTN","PXRMICHK",166,0)
 S DEF=$P(DEFARR(0),U,1)
"RTN","PXRMICHK",167,0)
 ;Check findings and finding modifiers.
"RTN","PXRMICHK",168,0)
 S IND=0
"RTN","PXRMICHK",169,0)
 F  S IND=+$O(DEFARR(20,IND)) Q:IND=0  D
"RTN","PXRMICHK",170,0)
 . S ZNODE=DEFARR(20,IND,0)
"RTN","PXRMICHK",171,0)
 . S FI=$P(ZNODE,U,1)
"RTN","PXRMICHK",172,0)
 . S FIEN=$P(FI,";",1)
"RTN","PXRMICHK",173,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMICHK",174,0)
 . I (FIEN'=+FIEN)!(GBL="") D  Q
"RTN","PXRMICHK",175,0)
 .. K TEXT
"RTN","PXRMICHK",176,0)
 .. S TEXT(1)="FATAL: Finding number "_IND_" is invalid."
"RTN","PXRMICHK",177,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",178,0)
 .. S OK=0
"RTN","PXRMICHK",179,0)
 . S FNUM=$$GETFNUM^PXRMEXPS(GBL)
"RTN","PXRMICHK",180,0)
 . I '$$FIND1^DIC(FNUM,"","XU","`"_FIEN) D
"RTN","PXRMICHK",181,0)
 .. K TEXT
"RTN","PXRMICHK",182,0)
 .. S TEXT(1)="FATAL: Finding number "_IND_", does not exist! It is entry number "_FIEN_" in file #"_FNUM_"."
"RTN","PXRMICHK",183,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",184,0)
 .. S OK=0
"RTN","PXRMICHK",185,0)
 . S BDT=$P(ZNODE,U,8)
"RTN","PXRMICHK",186,0)
 . I BDT["FIEVAL",'$$DATECHK(IND,BDT,"BDT",.DEFARR) S OK=0
"RTN","PXRMICHK",187,0)
 . S EDT=$P(ZNODE,U,11)
"RTN","PXRMICHK",188,0)
 . I EDT["FIEVAL",'$$DATECHK(IND,EDT,"EDT",.DEFARR) S OK=0
"RTN","PXRMICHK",189,0)
 .;Check computed findings.
"RTN","PXRMICHK",190,0)
 . I (GBL="PXRMD(811.4,"),'$$CFCHK(USAGE,IND,FIEN,DEF,.DEFARR,"D") S OK=0
"RTN","PXRMICHK",191,0)
 .;Check terms.
"RTN","PXRMICHK",192,0)
 . I (GBL="PXRMD(811.5,"),'$$TERMCHK(USAGE,FIEN,DEF,.DEFARR) S OK=0
"RTN","PXRMICHK",193,0)
 ;
"RTN","PXRMICHK",194,0)
 ;Check function findings.
"RTN","PXRMICHK",195,0)
 S FFNUM="FF"
"RTN","PXRMICHK",196,0)
 F  S FFNUM=$O(DEFARR(25,FFNUM)) Q:FFNUM=""  D
"RTN","PXRMICHK",197,0)
 . S IND=$P(FFNUM,"FF",2)
"RTN","PXRMICHK",198,0)
 .;Check for an invalid function string.
"RTN","PXRMICHK",199,0)
 . I $L($G(DEFARR(25,FFNUM,3)))<2 D  Q
"RTN","PXRMICHK",200,0)
 .. K TEXT
"RTN","PXRMICHK",201,0)
 .. S TEXT(1)="FATAL: Function finding number "_IND_" has an invalid function string."
"RTN","PXRMICHK",202,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",203,0)
 .. S OK=0
"RTN","PXRMICHK",204,0)
 . S JND=0
"RTN","PXRMICHK",205,0)
 . F  S JND=+$O(DEFARR(25,FFNUM,5,JND)) Q:JND=0  D
"RTN","PXRMICHK",206,0)
 .. S FUNCTION=$P(DEFARR(25,FFNUM,5,JND,0),U,2)
"RTN","PXRMICHK",207,0)
 .. S FUNCTION=$P(^PXRMD(802.4,FUNCTION,0),U,1)
"RTN","PXRMICHK",208,0)
 .. S KND=0
"RTN","PXRMICHK",209,0)
 .. F  S KND=+$O(DEFARR(25,FFNUM,5,JND,20,KND)) Q:KND=0  D
"RTN","PXRMICHK",210,0)
 ... S ARGTYPE=$$ARGTYPE^PXRMFFAT(FUNCTION,KND)
"RTN","PXRMICHK",211,0)
 ... I ARGTYPE="F" D
"RTN","PXRMICHK",212,0)
 .... S FI=DEFARR(25,FFNUM,5,JND,20,KND,0)
"RTN","PXRMICHK",213,0)
 .... I '$D(DEFARR(20,FI,0)) D
"RTN","PXRMICHK",214,0)
 ..... K TEXT
"RTN","PXRMICHK",215,0)
 ..... S TEXT(1)="FATAL: Function finding number "_IND_" depends on finding number "_FI_" which does not exist."
"RTN","PXRMICHK",216,0)
 ..... D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",217,0)
 ..... S OK=0
"RTN","PXRMICHK",218,0)
 ... I OK,ARGTYPE="N" D
"RTN","PXRMICHK",219,0)
 .... S OCN=DEFARR(25,FFNUM,5,JND,20,KND,0)
"RTN","PXRMICHK",220,0)
 .... S OCC=+$P(DEFARR(20,FI,0),U,14)
"RTN","PXRMICHK",221,0)
 .... S OCC=$S(OCC=0:1,OCC>0:OCC,1:-OCC)
"RTN","PXRMICHK",222,0)
 .... I OCN>OCC D
"RTN","PXRMICHK",223,0)
 ..... K TEXT
"RTN","PXRMICHK",224,0)
 ..... S TEXT(1)="FATAL: Function finding number "_IND_" uses occurrence number "_OCN
"RTN","PXRMICHK",225,0)
 ..... S TEXT(2)="of finding number "_FI_"."
"RTN","PXRMICHK",226,0)
 ..... S TEXT(3)="The Occurrence Count for finding "_FI_" is "_OCC_"."
"RTN","PXRMICHK",227,0)
 ..... D OUTPUT(3,.TEXT)
"RTN","PXRMICHK",228,0)
 ..... S OK=0
"RTN","PXRMICHK",229,0)
 ;
"RTN","PXRMICHK",230,0)
 ;Check custom date due.
"RTN","PXRMICHK",231,0)
 S IND=0
"RTN","PXRMICHK",232,0)
 F  S IND=+$O(DEFARR(47,IND)) Q:IND=0  D
"RTN","PXRMICHK",233,0)
 . S FI=$P(DEFARR(47,IND,0),U,1)
"RTN","PXRMICHK",234,0)
 . I '$D(DEFARR(20,FI,0)) D
"RTN","PXRMICHK",235,0)
 .. K TEXT
"RTN","PXRMICHK",236,0)
 .. S TEXT(1)="FATAL: Custom Date Due depends on finding number "_FI_" which does not exist."
"RTN","PXRMICHK",237,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",238,0)
 .. S OK=0
"RTN","PXRMICHK",239,0)
 ;
"RTN","PXRMICHK",240,0)
 ;Check cohort logic structure and dependencies.
"RTN","PXRMICHK",241,0)
 S LOGSTR=$G(DEFARR(31))
"RTN","PXRMICHK",242,0)
 ;Run the input transform.
"RTN","PXRMICHK",243,0)
 S LOGINTR=$S(LOGSTR'="":$$VALID^PXRMLOG(LOGSTR,IEN,3,512),1:1)
"RTN","PXRMICHK",244,0)
 S NFI=+$P($G(DEFARR(32)),U,1)
"RTN","PXRMICHK",245,0)
 S FLIST=$P($G(DEFARR(32)),U,2)
"RTN","PXRMICHK",246,0)
 S LOGCHK=$$LOGCHECK(NFI,FLIST,LOGSTR,"Patient Cohort",.DEFARR)
"RTN","PXRMICHK",247,0)
 S COHOK=LOGINTR&LOGCHK
"RTN","PXRMICHK",248,0)
 I 'COHOK D
"RTN","PXRMICHK",249,0)
 . S TEXT(1)="FATAL: Definition has invalid cohort logic.\\"
"RTN","PXRMICHK",250,0)
 . S TEXT(2)=" "_LOGSTR
"RTN","PXRMICHK",251,0)
 . D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",252,0)
 . S OK=0
"RTN","PXRMICHK",253,0)
 ;
"RTN","PXRMICHK",254,0)
 ;If the USAGE is List, check the cohort logic to make sure it
"RTN","PXRMICHK",255,0)
 ;meets the special requirements.
"RTN","PXRMICHK",256,0)
 I USAGE["L",COHOK S COHOK=$$LCOHORTC(.DEFARR)
"RTN","PXRMICHK",257,0)
 I 'COHOK S OK=0
"RTN","PXRMICHK",258,0)
 ;
"RTN","PXRMICHK",259,0)
 ;Check resolution structure and dependencies.
"RTN","PXRMICHK",260,0)
 S LOGSTR=$G(DEFARR(35))
"RTN","PXRMICHK",261,0)
 ;Run the input transform.
"RTN","PXRMICHK",262,0)
 S LOGINTR=$S(LOGSTR'="":$$VALIDR^PXRMLOG(LOGSTR,IEN,5,512),1:1)
"RTN","PXRMICHK",263,0)
 S NFI=+$P($G(DEFARR(36)),U,1)
"RTN","PXRMICHK",264,0)
 S FLIST=$P($G(DEFARR(36)),U,2)
"RTN","PXRMICHK",265,0)
 S LOGCHK=$$LOGCHECK(NFI,FLIST,LOGSTR,"Resolution",.DEFARR)
"RTN","PXRMICHK",266,0)
 S RESOK=LOGINTR&LOGCHK
"RTN","PXRMICHK",267,0)
 I 'RESOK D
"RTN","PXRMICHK",268,0)
 . S TEXT(1)="FATAL: Definition has invalid resolution logic.\\"
"RTN","PXRMICHK",269,0)
 . S TEXT(2)=" "_LOGSTR
"RTN","PXRMICHK",270,0)
 . D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",271,0)
 . S OK=0
"RTN","PXRMICHK",272,0)
 ;
"RTN","PXRMICHK",273,0)
 ;Make other checks for bad cohort and resolution logic; these are
"RTN","PXRMICHK",274,0)
 ;all just warnings.
"RTN","PXRMICHK",275,0)
 D CCRLOGIC(COHOK,RESOK,.DEFARR)
"RTN","PXRMICHK",276,0)
 ;
"RTN","PXRMICHK",277,0)
 ;A frequency is required if there is resolution logic.
"RTN","PXRMICHK",278,0)
 I $G(DEFARR(35))'="" D
"RTN","PXRMICHK",279,0)
 . S (IND,NBFREQ,NFFREQ)=0
"RTN","PXRMICHK",280,0)
 . F  S IND=+$O(DEFARR(7,IND)) Q:IND=0  S NBFREQ=NBFREQ+1
"RTN","PXRMICHK",281,0)
 . I NBFREQ=0 D
"RTN","PXRMICHK",282,0)
 .. S IND=0
"RTN","PXRMICHK",283,0)
 .. F  S IND=+$O(DEFARR(20,IND)) Q:IND=0  I $P(DEFARR(20,IND,0),U,4)'="" S NFFREQ=NFFREQ+1
"RTN","PXRMICHK",284,0)
 .. S IND="FF"
"RTN","PXRMICHK",285,0)
 .. F  S IND=$O(DEFARR(25,IND)) Q:IND=""  I $P(DEFARR(25,IND,0),U,4)'="" S NFFREQ=NFFREQ+1
"RTN","PXRMICHK",286,0)
 . I NBFREQ=0,NFFREQ=0 D
"RTN","PXRMICHK",287,0)
 .. S TEXT(1)="FATAL: Definition has resolution logic but no baseline frequencies."
"RTN","PXRMICHK",288,0)
 .. S TEXT(2)="Also there are no findings or function findings that set a frequency."
"RTN","PXRMICHK",289,0)
 .. D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",290,0)
 .. S OK=0
"RTN","PXRMICHK",291,0)
 . I NBFREQ=0,NFFREQ>0 D
"RTN","PXRMICHK",292,0)
 .. S TEXT(1)="WARNING: definition has resolution logic but no baseline frequencies."
"RTN","PXRMICHK",293,0)
 .. S TEXT(2)="There are findings that set a frequency but if they are all false there will not be a frequency."
"RTN","PXRMICHK",294,0)
 .. D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",295,0)
 K TEXT
"RTN","PXRMICHK",296,0)
 I OK S TEXT(1)="No fatal errors were found."
"RTN","PXRMICHK",297,0)
 E  S TEXT(1)="This definition has fatal errors and it will not work!"
"RTN","PXRMICHK",298,0)
 D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",299,0)
 Q OK
"RTN","PXRMICHK",300,0)
 ;
"RTN","PXRMICHK",301,0)
 ;======================================================
"RTN","PXRMICHK",302,0)
LCOHORTC(DEFARR) ;Check list type reminder cohort logic for special
"RTN","PXRMICHK",303,0)
 ;requirements.
"RTN","PXRMICHK",304,0)
 N IND,MAXAGE,MINAGE,NL,OK,PCLOG,TEXT
"RTN","PXRMICHK",305,0)
 S (OK,NL)=1
"RTN","PXRMICHK",306,0)
 S PCLOG=DEFARR(31)
"RTN","PXRMICHK",307,0)
 ;The cohort logic cannot start with a logical not.
"RTN","PXRMICHK",308,0)
 I $E(PCLOG,1)="'" D
"RTN","PXRMICHK",309,0)
 . S NL=NL+1
"RTN","PXRMICHK",310,0)
 . S TEXT(NL)="The cohort logic cannot start with a logical not.\\"
"RTN","PXRMICHK",311,0)
 . S OK=0
"RTN","PXRMICHK",312,0)
 I PCLOG["!'" D
"RTN","PXRMICHK",313,0)
 . S NL=NL+1
"RTN","PXRMICHK",314,0)
 . S TEXT(NL)="The cohort logic cannot contain !' (OR NOT).\\"
"RTN","PXRMICHK",315,0)
 . S OK=0
"RTN","PXRMICHK",316,0)
 I PCLOG["AGE" D
"RTN","PXRMICHK",317,0)
 .;Make sure a baseline age range is defined.
"RTN","PXRMICHK",318,0)
 . S IND=0 F  S IND=$O(DEFARR(7,IND)) Q:(IND="")  Q:(DEFARR(7,IND,0)'="")
"RTN","PXRMICHK",319,0)
 . S MINAGE=$S(IND="":0,1:+$P($G(DEFARR(7,IND,3)),U,1))
"RTN","PXRMICHK",320,0)
 . S MAXAGE=$S(IND="":0,1:+$P($G(DEFARR(7,IND,3)),U,2))
"RTN","PXRMICHK",321,0)
 . I (MINAGE=0),(MAXAGE=0) D
"RTN","PXRMICHK",322,0)
 .. S NL=NL+1
"RTN","PXRMICHK",323,0)
 .. S TEXT(NL)="The cohort logic contains AGE but no baseline age range is defined.\\"
"RTN","PXRMICHK",324,0)
 .. S OK=0
"RTN","PXRMICHK",325,0)
 I PCLOG["SEX" D
"RTN","PXRMICHK",326,0)
 . I $P(DEFARR(0),U,9)="" D
"RTN","PXRMICHK",327,0)
 .. S NL=NL+1
"RTN","PXRMICHK",328,0)
 .. S TEXT(NL)="The cohort logic contains SEX but the SEX SPECIFIC field is not defined.\\"
"RTN","PXRMICHK",329,0)
 .. S OK=0
"RTN","PXRMICHK",330,0)
 I PCLOG["SEX" D
"RTN","PXRMICHK",331,0)
 . N PFSTACK
"RTN","PXRMICHK",332,0)
 . D POSTFIX^PXRMSTAC(PCLOG,"!&",.PFSTACK)
"RTN","PXRMICHK",333,0)
 . I PFSTACK(1)'="SEX" Q
"RTN","PXRMICHK",334,0)
 . I (PFSTACK(2)'="AGE")!(PFSTACK(3)'="&") D
"RTN","PXRMICHK",335,0)
 .. S NL=NL+1
"RTN","PXRMICHK",336,0)
 .. S TEXT(NL)="The cohort logic starts with SEX but SEX is not logically ANDED with AGE.\\"
"RTN","PXRMICHK",337,0)
 .. S OK=0
"RTN","PXRMICHK",338,0)
 I 'OK D
"RTN","PXRMICHK",339,0)
 . S TEXT(1)="FATAL: List type definitions have the following restrictions:\\"
"RTN","PXRMICHK",340,0)
 . D OUTPUT(NL,.TEXT)
"RTN","PXRMICHK",341,0)
 Q OK
"RTN","PXRMICHK",342,0)
 ;
"RTN","PXRMICHK",343,0)
 ;======================================================
"RTN","PXRMICHK",344,0)
LOGCHECK(NFI,FLIST,LOGSTR,TYPE,DEFARR) ;Verify logic strings. Make sure the
"RTN","PXRMICHK",345,0)
 ;findings exist and the syntax is correct.
"RTN","PXRMICHK",346,0)
 N FFNUM,FI,IND,OK,TEXT,X
"RTN","PXRMICHK",347,0)
 S OK=1
"RTN","PXRMICHK",348,0)
 I NFI=0 D  Q OK
"RTN","PXRMICHK",349,0)
 . S TEXT(1)="Warning, there is no "_TYPE_" logic."
"RTN","PXRMICHK",350,0)
 . D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",351,0)
 F IND=1:1:NFI D
"RTN","PXRMICHK",352,0)
 . S FI=$P(FLIST,";",IND)
"RTN","PXRMICHK",353,0)
 . I FI=+FI D
"RTN","PXRMICHK",354,0)
 .. I '$D(DEFARR(20,FI,0)) D
"RTN","PXRMICHK",355,0)
 ... S TEXT(1)="FATAL: "_TYPE_" logic uses finding "_FI_" which does not exist."
"RTN","PXRMICHK",356,0)
 ... D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",357,0)
 ... S OK=0
"RTN","PXRMICHK",358,0)
 . I FI["FF" D
"RTN","PXRMICHK",359,0)
 .. I '$D(DEFARR(25,FI,0)) D
"RTN","PXRMICHK",360,0)
 ... S FFNUM=$P(FI,"FF",2)
"RTN","PXRMICHK",361,0)
 ... S TEXT(1)="Fatal :"_TYPE_" logic uses function finding "_FFNUM_" which does not exist."
"RTN","PXRMICHK",362,0)
 ... D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",363,0)
 ... S OK=0
"RTN","PXRMICHK",364,0)
 S X="S Y="_LOGSTR
"RTN","PXRMICHK",365,0)
 D ^DIM
"RTN","PXRMICHK",366,0)
 I '$D(X) D
"RTN","PXRMICHK",367,0)
 . S TEXT(1)="FATAL: "_TYPE_" logic syntax is invalid."
"RTN","PXRMICHK",368,0)
 . D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",369,0)
 . S OK=0
"RTN","PXRMICHK",370,0)
 Q OK
"RTN","PXRMICHK",371,0)
 ;
"RTN","PXRMICHK",372,0)
 ;======================================================
"RTN","PXRMICHK",373,0)
OUTPUT(NIN,TEXT) ;Format and output TEXT.
"RTN","PXRMICHK",374,0)
 I $G(PXRMDONE) Q
"RTN","PXRMICHK",375,0)
 N ANS,EXIT,IND,NOUT,TEXTOUT
"RTN","PXRMICHK",376,0)
 D FORMAT^PXRMTEXT(1,80,NIN,.TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMICHK",377,0)
 S EXIT=0
"RTN","PXRMICHK",378,0)
 F IND=1:1:NOUT D
"RTN","PXRMICHK",379,0)
 . W !,TEXTOUT(IND)
"RTN","PXRMICHK",380,0)
 . I ($Y+2>IOSL),$E(IOST,1,2)="C-" D
"RTN","PXRMICHK",381,0)
 .. W !,"Press ENTER to continue or '^' to exit: "
"RTN","PXRMICHK",382,0)
 .. R ANS:DTIME
"RTN","PXRMICHK",383,0)
 .. S EXIT=('$T)!(ANS="^")
"RTN","PXRMICHK",384,0)
 .. I 'EXIT W #
"RTN","PXRMICHK",385,0)
 . I EXIT Q
"RTN","PXRMICHK",386,0)
 I EXIT S PXRMDONE=1
"RTN","PXRMICHK",387,0)
 Q
"RTN","PXRMICHK",388,0)
 ;
"RTN","PXRMICHK",389,0)
 ;======================================================
"RTN","PXRMICHK",390,0)
TERMCHK(USAGE,TIEN,DEF,DEFARR) ;Check terms.
"RTN","PXRMICHK",391,0)
 N FI,FIEN,FNUM,GBL,JND,OK,TERMARR,TNAME,TTEXT,ZNODE
"RTN","PXRMICHK",392,0)
 S TNAME=$P(^PXRMD(811.5,TIEN,0),U,1)_" ("_TIEN_")"
"RTN","PXRMICHK",393,0)
 S TTEXT=" The term is "_TNAME_"."
"RTN","PXRMICHK",394,0)
 S OK=1
"RTN","PXRMICHK",395,0)
 D TERM^PXRMLDR(TIEN,.TERMARR)
"RTN","PXRMICHK",396,0)
 ;Check findings and finding modifiers.
"RTN","PXRMICHK",397,0)
 S JND=0
"RTN","PXRMICHK",398,0)
 F  S JND=+$O(TERMARR(20,JND)) Q:JND=0  D
"RTN","PXRMICHK",399,0)
 . S ZNODE=TERMARR(20,JND,0)
"RTN","PXRMICHK",400,0)
 . S FI=$P(ZNODE,U,1)
"RTN","PXRMICHK",401,0)
 . S FIEN=$P(FI,";",1)
"RTN","PXRMICHK",402,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMICHK",403,0)
 . I (FIEN'=+FIEN)!(GBL="") D  Q
"RTN","PXRMICHK",404,0)
 .. K TEXT
"RTN","PXRMICHK",405,0)
 .. S TEXT(1)="FATAL: Term finding number "_JND_" is invalid."
"RTN","PXRMICHK",406,0)
 .. S TEXT(2)=TTEXT
"RTN","PXRMICHK",407,0)
 .. D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",408,0)
 .. S OK=0
"RTN","PXRMICHK",409,0)
 . S FNUM=$$GETFNUM^PXRMEXPS(GBL)
"RTN","PXRMICHK",410,0)
 . I '$$FIND1^DIC(FNUM,"","XU","`"_FIEN) D
"RTN","PXRMICHK",411,0)
 .. K TEXT
"RTN","PXRMICHK",412,0)
 .. S TEXT(1)="FATAL: Term finding number "_JND_", does not exist! It is entry number "_FIEN_" in file #"_FNUM_"."
"RTN","PXRMICHK",413,0)
 .. S TEXT(2)=TTEXT
"RTN","PXRMICHK",414,0)
 .. D OUTPUT(2,.TEXT)
"RTN","PXRMICHK",415,0)
 .. S OK=0
"RTN","PXRMICHK",416,0)
 .;Check computed findings.
"RTN","PXRMICHK",417,0)
 . I (GBL="PXRMD(811.4,"),'$$CFCHK(USAGE,JND,FIEN,DEF,.TERMARR,"T") D
"RTN","PXRMICHK",418,0)
 ..;CFCHK issues the messages for the CF, let the user know the name
"RTN","PXRMICHK",419,0)
 ..;of the term.
"RTN","PXRMICHK",420,0)
 .. K TEXT
"RTN","PXRMICHK",421,0)
 .. S TEXT(1)=TTEXT
"RTN","PXRMICHK",422,0)
 .. D OUTPUT(1,.TEXT)
"RTN","PXRMICHK",423,0)
 .. S OK=0
"RTN","PXRMICHK",424,0)
 Q OK
"RTN","PXRMICHK",425,0)
 ;
"RTN","PXRMINDC")
0^41^B76451646
"RTN","PXRMINDC",1,0)
PXRMINDC ; SLC/PKR - Index counting routines. ;09/27/2012
"RTN","PXRMINDC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,17,26**;Feb 04, 2005;Build 404
"RTN","PXRMINDC",3,0)
 ;
"RTN","PXRMINDC",4,0)
 ;========================================================
"RTN","PXRMINDC",5,0)
CNT5(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",6,0)
 ;is at subscript 5. Works for file numbers:
"RTN","PXRMINDC",7,0)
 ;63, 70, 120.5, 601.2, 601.84,
"RTN","PXRMINDC",8,0)
 ;9000010.11, 9000010.12, 9000010.13, 9000010.16, 9000010.23
"RTN","PXRMINDC",9,0)
 N DAS,DATE,DFN,IND,ITEM,YEAR
"RTN","PXRMINDC",10,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",11,0)
 S IND=0
"RTN","PXRMINDC",12,0)
 S DFN=""
"RTN","PXRMINDC",13,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",14,0)
 . S IND=IND+1
"RTN","PXRMINDC",15,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",16,0)
 . S ITEM=""
"RTN","PXRMINDC",17,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",18,0)
 .. S DATE=""
"RTN","PXRMINDC",19,0)
 .. F  S DATE=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",20,0)
 ... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",21,0)
 ... S DAS=""
"RTN","PXRMINDC",22,0)
 ... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",23,0)
 .... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",24,0)
 Q
"RTN","PXRMINDC",25,0)
 ;
"RTN","PXRMINDC",26,0)
 ;========================================================
"RTN","PXRMINDC",27,0)
CNT6(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",28,0)
 ;is at subscript 6. Works for file numbers:
"RTN","PXRMINDC",29,0)
 ;9000010.07, 9000010.18
"RTN","PXRMINDC",30,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,TYPE,YEAR
"RTN","PXRMINDC",31,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",32,0)
 S DFN="",IND=0
"RTN","PXRMINDC",33,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",34,0)
 . S IND=IND+1
"RTN","PXRMINDC",35,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",36,0)
 . S TYPE=""
"RTN","PXRMINDC",37,0)
 . F  S TYPE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDC",38,0)
 .. S ITEM=""
"RTN","PXRMINDC",39,0)
 .. F  S ITEM=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",40,0)
 ... S DATE=""
"RTN","PXRMINDC",41,0)
 ... F  S DATE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",42,0)
 .... S YEAR=$E(DATE,1,3),DAS=""
"RTN","PXRMINDC",43,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",44,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",45,0)
 I FILENUM'=9000010.07 Q
"RTN","PXRMINDC",46,0)
 S CODESYS=""
"RTN","PXRMINDC",47,0)
 F  S CODESYS=$O(^PXRMINDX(FILENUM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDC",48,0)
 . I (CODESYS="PPI")!(CODESYS="IPP") Q
"RTN","PXRMINDC",49,0)
 . S DFN=""
"RTN","PXRMINDC",50,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",51,0)
 .. S IND=IND+1
"RTN","PXRMINDC",52,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",53,0)
 .. S TYPE=""
"RTN","PXRMINDC",54,0)
 .. F  S TYPE=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDC",55,0)
 ... S ITEM=""
"RTN","PXRMINDC",56,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",57,0)
 .... S DATE=""
"RTN","PXRMINDC",58,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",59,0)
 ..... S YEAR=$E(DATE,1,3),DAS=""
"RTN","PXRMINDC",60,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",61,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",62,0)
 Q
"RTN","PXRMINDC",63,0)
 ;
"RTN","PXRMINDC",64,0)
 ;========================================================
"RTN","PXRMINDC",65,0)
CNTPL(FILENUM,COUNT) ;Get date counts for Problem List indexes where the
"RTN","PXRMINDC",66,0)
 ;date is at subscript 8. Works for file numbers:
"RTN","PXRMINDC",67,0)
 ;9000011
"RTN","PXRMINDC",68,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,PRIORITY,STATUS,TYPE,YEAR
"RTN","PXRMINDC",69,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",70,0)
 S CODESYS="",IND=0
"RTN","PXRMINDC",71,0)
 F  S CODESYS=$O(^PXRMINDX(FILENUM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDC",72,0)
 . S DFN=""
"RTN","PXRMINDC",73,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",74,0)
 .. S IND=IND+1
"RTN","PXRMINDC",75,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",76,0)
 .. S STATUS=""
"RTN","PXRMINDC",77,0)
 .. F  S STATUS=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS)) Q:STATUS=""  D
"RTN","PXRMINDC",78,0)
 ... S PRIORITY=""
"RTN","PXRMINDC",79,0)
 ... F  S PRIORITY=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY)) Q:PRIORITY=""  D
"RTN","PXRMINDC",80,0)
 .... S ITEM=""
"RTN","PXRMINDC",81,0)
 .... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",82,0)
 ..... S DATE=""
"RTN","PXRMINDC",83,0)
 ..... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",84,0)
 ...... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",85,0)
 ...... S DAS=""
"RTN","PXRMINDC",86,0)
 ...... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",87,0)
 ....... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",88,0)
 Q
"RTN","PXRMINDC",89,0)
 ;
"RTN","PXRMINDC",90,0)
 ;========================================================
"RTN","PXRMINDC",91,0)
CNTPTF(FILENUM,COUNT) ;Get date counts for PTF indexes where the
"RTN","PXRMINDC",92,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDC",93,0)
 ;45
"RTN","PXRMINDC",94,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,NODE,YEAR
"RTN","PXRMINDC",95,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",96,0)
 S CODESYS="",IND=0
"RTN","PXRMINDC",97,0)
 ;F TYPE="ICD0","ICD9" D
"RTN","PXRMINDC",98,0)
 F  S CODESYS=$O(^PXRMINDX(FILENUM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDC",99,0)
 . S DFN=""
"RTN","PXRMINDC",100,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",101,0)
 .. S IND=IND+1
"RTN","PXRMINDC",102,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",103,0)
 .. S NODE=""
"RTN","PXRMINDC",104,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","PXRMINDC",105,0)
 ... S ITEM=""
"RTN","PXRMINDC",106,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",107,0)
 .... S DATE=""
"RTN","PXRMINDC",108,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",109,0)
 ..... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",110,0)
 ..... S DAS=""
"RTN","PXRMINDC",111,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",112,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",113,0)
 Q
"RTN","PXRMINDC",114,0)
 ;
"RTN","PXRMINDC",115,0)
 ;========================================================
"RTN","PXRMINDC",116,0)
CNTSS(FILENUM,COUNT) ;Get date counts for indexes where the start date
"RTN","PXRMINDC",117,0)
 ;is at subscript 5 and the stop date is at subscript 6.
"RTN","PXRMINDC",118,0)
 ;Works for file numbers: 52, 55, 100
"RTN","PXRMINDC",119,0)
 N DAS,DFN,IND,ITEM,START,STOP,YEAR
"RTN","PXRMINDC",120,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",121,0)
 S IND=0
"RTN","PXRMINDC",122,0)
 S DFN=""
"RTN","PXRMINDC",123,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",124,0)
 . S IND=IND+1
"RTN","PXRMINDC",125,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",126,0)
 . S ITEM=""
"RTN","PXRMINDC",127,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",128,0)
 .. S START=""
"RTN","PXRMINDC",129,0)
 .. F  S START=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START)) Q:START=""  D
"RTN","PXRMINDC",130,0)
 ... S YEAR=$E(START,1,3)
"RTN","PXRMINDC",131,0)
 ... S STOP=""
"RTN","PXRMINDC",132,0)
 ... F  S STOP=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP)) Q:STOP=""  D
"RTN","PXRMINDC",133,0)
 .... S DAS=""
"RTN","PXRMINDC",134,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",135,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",136,0)
 Q
"RTN","PXRMINDC",137,0)
 ;
"RTN","PXRMINDC",138,0)
 ;========================================================
"RTN","PXRMINDC",139,0)
COUNT ;Driver for making index counts.
"RTN","PXRMINDC",140,0)
 N GBL,LIST,TASKIT
"RTN","PXRMINDC",141,0)
 W !,"Which indexes do you want to count?"
"RTN","PXRMINDC",142,0)
 D SEL^PXRMSXRM(.LIST,.GBL)
"RTN","PXRMINDC",143,0)
 I LIST="" Q
"RTN","PXRMINDC",144,0)
 ;See if this should be tasked.
"RTN","PXRMINDC",145,0)
 S TASKIT=$$ASKTASK^PXRMSXRM
"RTN","PXRMINDC",146,0)
 I TASKIT D
"RTN","PXRMINDC",147,0)
 . W !,"Queue the Clinical Reminders Index count."
"RTN","PXRMINDC",148,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMINDC",149,0)
 E  D RUNNOW(LIST,.GBL)
"RTN","PXRMINDC",150,0)
 Q
"RTN","PXRMINDC",151,0)
 ;
"RTN","PXRMINDC",152,0)
 ;========================================================
"RTN","PXRMINDC",153,0)
MESSAGE(FILENUM,COUNT,TOTAL,START,END) ;Build the MailMan message giving the
"RTN","PXRMINDC",154,0)
 ;count breakdown.
"RTN","PXRMINDC",155,0)
 N COFF,FROM,ML,NAME,NL,PERC,TEXT,TO,YEAR,XMSUB
"RTN","PXRMINDC",156,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDC",157,0)
 S ML=$$MAX^XLFMTH($L(TOTAL)+2,8)
"RTN","PXRMINDC",158,0)
 S COFF=ML-5
"RTN","PXRMINDC",159,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMINDC",160,0)
 S XMSUB="Yearly data distribution for global "_NAME
"RTN","PXRMINDC",161,0)
 S ^TMP("PXRMXMZ",$J,1,0)="File name: "_NAME
"RTN","PXRMINDC",162,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Count finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMINDC",163,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^PXRMSXRM(START,END)
"RTN","PXRMINDC",164,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","PXRMINDC",165,0)
 S ^TMP("PXRMXMZ",$J,5,0)="Year"_$$INSCHR^PXRMEXLC(COFF," ")_"Count"_$J("%",8)
"RTN","PXRMINDC",166,0)
 S ^TMP("PXRMXMZ",$J,6,0)="----"_$$INSCHR^PXRMEXLC(COFF," ")_"-----"_$J("-----",10)
"RTN","PXRMINDC",167,0)
 S NL=6,YEAR=0
"RTN","PXRMINDC",168,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",169,0)
 . S PERC=100*COUNT(YEAR)/TOTAL
"RTN","PXRMINDC",170,0)
 . S TEXT=YEAR_$J(COUNT(YEAR),ML,0)_$J(PERC,10,2)
"RTN","PXRMINDC",171,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",172,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMINDC",173,0)
 S TEXT="Total entries: "_TOTAL
"RTN","PXRMINDC",174,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",175,0)
 I TOTAL=0 D
"RTN","PXRMINDC",176,0)
 . I '$D(^PXRMINDX(FILENUM)) S TEXT="The index for file "_NAME_" does not exist!"
"RTN","PXRMINDC",177,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",178,0)
 I TOTAL>0,'$D(^PXRMINDX(FILENUM,"DATE BUILT")) D
"RTN","PXRMINDC",179,0)
 . S TEXT="Warning, the index for file "_NAME_" may be incomplete or corrupted!"
"RTN","PXRMINDC",180,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMINDC",181,0)
 S FROM=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMINDC",182,0)
 S TO(DUZ)=""
"RTN","PXRMINDC",183,0)
 D SEND^PXRMMSG("PXRMXMZ",XMSUB,.TO,FROM)
"RTN","PXRMINDC",184,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDC",185,0)
 Q
"RTN","PXRMINDC",186,0)
 ;
"RTN","PXRMINDC",187,0)
 ;===============================================================
"RTN","PXRMINDC",188,0)
RUNNOW(LIST,GBL) ;Run the routines now.
"RTN","PXRMINDC",189,0)
 N COUNT,END,FN,IND,LI,NUM,ROUTINE,RTN,START,TOTAL
"RTN","PXRMINDC",190,0)
 S ROUTINE(45)="CNTPTF^PXRMINDC"
"RTN","PXRMINDC",191,0)
 S ROUTINE(52)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",192,0)
 S ROUTINE(55)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",193,0)
 S ROUTINE(63)="CNT5^PXRMINDC"
"RTN","PXRMINDC",194,0)
 S ROUTINE(70)="CNT5^PXRMINDC"
"RTN","PXRMINDC",195,0)
 S ROUTINE(100)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",196,0)
 S ROUTINE(120.5)="CNT5^PXRMINDC"
"RTN","PXRMINDC",197,0)
 S ROUTINE(601.2)="CNT5^PXRMINDC"
"RTN","PXRMINDC",198,0)
 S ROUTINE(601.84)="CNT5^PXRMINDC"
"RTN","PXRMINDC",199,0)
 S ROUTINE(9000011)="CNTPL^PXRMINDC"
"RTN","PXRMINDC",200,0)
 S ROUTINE(9000010.07)="CNT6^PXRMINDC"
"RTN","PXRMINDC",201,0)
 S ROUTINE(9000010.11)="CNT5^PXRMINDC"
"RTN","PXRMINDC",202,0)
 S ROUTINE(9000010.12)="CNT5^PXRMINDC"
"RTN","PXRMINDC",203,0)
 S ROUTINE(9000010.13)="CNT5^PXRMINDC"
"RTN","PXRMINDC",204,0)
 S ROUTINE(9000010.16)="CNT5^PXRMINDC"
"RTN","PXRMINDC",205,0)
 S ROUTINE(9000010.18)="CNT6^PXRMINDC"
"RTN","PXRMINDC",206,0)
 S ROUTINE(9000010.23)="CNT5^PXRMINDC"
"RTN","PXRMINDC",207,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",208,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",209,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMINDC",210,0)
 . S FN=GBL(LI)
"RTN","PXRMINDC",211,0)
 . S RTN=ROUTINE(FN)
"RTN","PXRMINDC",212,0)
 . S RTN=RTN_"("_FN_",.COUNT)"
"RTN","PXRMINDC",213,0)
 . S START=$H
"RTN","PXRMINDC",214,0)
 . K COUNT
"RTN","PXRMINDC",215,0)
 . I $D(^PXRMINDX(FN)) D @RTN
"RTN","PXRMINDC",216,0)
 . S END=$H
"RTN","PXRMINDC",217,0)
 . D TOTAL(.COUNT,.TOTAL)
"RTN","PXRMINDC",218,0)
 . D MESSAGE(FN,.COUNT,TOTAL,START,END)
"RTN","PXRMINDC",219,0)
 Q
"RTN","PXRMINDC",220,0)
 ;
"RTN","PXRMINDC",221,0)
 ;===============================================================
"RTN","PXRMINDC",222,0)
TASKIT(LIST,GBL,ROUTINE) ;Count the indexes as a tasked job.
"RTN","PXRMINDC",223,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMINDC",224,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMINDC",225,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMINDC",226,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMINDC",227,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMINDC",228,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMINDC",229,0)
 D ^DIR
"RTN","PXRMINDC",230,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMINDC",231,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMINDC",232,0)
 S SDTIME=Y
"RTN","PXRMINDC",233,0)
 K DIR
"RTN","PXRMINDC",234,0)
 ;Put the task into the queue.
"RTN","PXRMINDC",235,0)
 K ZTSAVE
"RTN","PXRMINDC",236,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMINDC",237,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMINDC",238,0)
 S ZTRTN="TASKJOB^PXRMINDC"
"RTN","PXRMINDC",239,0)
 S ZTDESC="Clinical Reminders Index count"
"RTN","PXRMINDC",240,0)
 S ZTDTH=SDTIME
"RTN","PXRMINDC",241,0)
 S ZTIO=""
"RTN","PXRMINDC",242,0)
 D ^%ZTLOAD
"RTN","PXRMINDC",243,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMINDC",244,0)
 Q
"RTN","PXRMINDC",245,0)
 ;
"RTN","PXRMINDC",246,0)
 ;===============================================================
"RTN","PXRMINDC",247,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","PXRMINDC",248,0)
 N IND,LI,NUM
"RTN","PXRMINDC",249,0)
 S ZTREQ="@"
"RTN","PXRMINDC",250,0)
 S ZTSTOP=0
"RTN","PXRMINDC",251,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",252,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",253,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMINDC",254,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMINDC",255,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","PXRMINDC",256,0)
 . D RUNNOW^PXRMINDC(LI,.GBL)
"RTN","PXRMINDC",257,0)
 Q
"RTN","PXRMINDC",258,0)
 ;
"RTN","PXRMINDC",259,0)
 ;========================================================
"RTN","PXRMINDC",260,0)
TOTAL(COUNT,TOTAL) ;Convert the FileMan years in COUNT to regular
"RTN","PXRMINDC",261,0)
 ;years get the total number of entries in count.
"RTN","PXRMINDC",262,0)
 N TC,YEAR
"RTN","PXRMINDC",263,0)
 S (TOTAL,YEAR)=0
"RTN","PXRMINDC",264,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",265,0)
 . S TOTAL=TOTAL+COUNT(YEAR)
"RTN","PXRMINDC",266,0)
 . S TC(YEAR+1700)=COUNT(YEAR)
"RTN","PXRMINDC",267,0)
 K COUNT
"RTN","PXRMINDC",268,0)
 M COUNT=TC
"RTN","PXRMINDC",269,0)
 Q
"RTN","PXRMINDC",270,0)
 ;
"RTN","PXRMINDD")
0^42^B76803119
"RTN","PXRMINDD",1,0)
PXRMINDD ; SLC/PKR - Index string date checking routines. ;09/27/2012
"RTN","PXRMINDD",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,17,26**;Feb 04, 2005;Build 404
"RTN","PXRMINDD",3,0)
 ;
"RTN","PXRMINDD",4,0)
 ;========================================================
"RTN","PXRMINDD",5,0)
CNT5(FILENUM,NSD) ;Check for string dates for indexes where the date
"RTN","PXRMINDD",6,0)
 ;is at subscript 5. Works for file numbers:
"RTN","PXRMINDD",7,0)
 ;63, 70, 120.5, 601.2, 601.84
"RTN","PXRMINDD",8,0)
 ;9000010.11, 9000010.12, 9000010.13, 9000010.16, 9000010.23
"RTN","PXRMINDD",9,0)
 N DAS,DATE,DFN,IND,ITEM
"RTN","PXRMINDD",10,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",11,0)
 S IND=0
"RTN","PXRMINDD",12,0)
 S DFN=""
"RTN","PXRMINDD",13,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",14,0)
 . S IND=IND+1
"RTN","PXRMINDD",15,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",16,0)
 . S ITEM=""
"RTN","PXRMINDD",17,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",18,0)
 .. S DATE=""
"RTN","PXRMINDD",19,0)
 .. F  S DATE=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",20,0)
 ... I +DATE=DATE Q
"RTN","PXRMINDD",21,0)
 ... S DAS=""
"RTN","PXRMINDD",22,0)
 ... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",23,0)
 .... S NSD=NSD+1
"RTN","PXRMINDD",24,0)
 .... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PI"","_DFN_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",25,0)
 Q
"RTN","PXRMINDD",26,0)
 ;
"RTN","PXRMINDD",27,0)
 ;========================================================
"RTN","PXRMINDD",28,0)
CNT6(FILENUM,NSD) ;Check for string dates for indexes where the date
"RTN","PXRMINDD",29,0)
 ;is at subscript 6. Works for file numbers:
"RTN","PXRMINDD",30,0)
 ;9000010.07, 9000010.18
"RTN","PXRMINDD",31,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,TYPE
"RTN","PXRMINDD",32,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",33,0)
 S DFN="",IND=0
"RTN","PXRMINDD",34,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",35,0)
 . S IND=IND+1
"RTN","PXRMINDD",36,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",37,0)
 . S TYPE=""
"RTN","PXRMINDD",38,0)
 . F  S TYPE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDD",39,0)
 .. S ITEM=""
"RTN","PXRMINDD",40,0)
 .. F  S ITEM=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",41,0)
 ... S DATE=""
"RTN","PXRMINDD",42,0)
 ... F  S DATE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",43,0)
 .... I +DATE=DATE Q
"RTN","PXRMINDD",44,0)
 .... S DAS=""
"RTN","PXRMINDD",45,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",46,0)
 ..... S NSD=NSD+1
"RTN","PXRMINDD",47,0)
 ..... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PPI"","_DFN_","_TYPE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",48,0)
 I FILENUM'=9000010.07 Q
"RTN","PXRMINDD",49,0)
 S CODESYS=""
"RTN","PXRMINDD",50,0)
 F  S CODESYS=$O(^PXRMINDX(FILENUM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDD",51,0)
 . I (CODESYS="PPI")!(CODESYS="IPP") Q
"RTN","PXRMINDD",52,0)
 . S DFN=""
"RTN","PXRMINDD",53,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",54,0)
 .. S IND=IND+1
"RTN","PXRMINDD",55,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",56,0)
 .. S TYPE=""
"RTN","PXRMINDD",57,0)
 .. F  S TYPE=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDD",58,0)
 ... S ITEM=""
"RTN","PXRMINDD",59,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",60,0)
 .... S DATE=""
"RTN","PXRMINDD",61,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",62,0)
 ..... I +DATE=DATE Q
"RTN","PXRMINDD",63,0)
 ..... S DAS=""
"RTN","PXRMINDD",64,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",65,0)
 ...... S NSD=NSD+1
"RTN","PXRMINDD",66,0)
 ...... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_","_CODESYS_",""PPI"","_DFN_","_TYPE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",67,0)
 Q
"RTN","PXRMINDD",68,0)
 ;
"RTN","PXRMINDD",69,0)
 ;========================================================
"RTN","PXRMINDD",70,0)
CNTPL(FILENUM,NSD) ;Check for string date for Problem List indexes where the
"RTN","PXRMINDD",71,0)
 ;date is at subscript 8. Works for file numbers:
"RTN","PXRMINDD",72,0)
 ;9000011
"RTN","PXRMINDD",73,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,PRIORITY,STATUS,TYPE
"RTN","PXRMINDD",74,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",75,0)
 S CODESYS=""
"RTN","PXRMINDD",76,0)
 F  S CODESYS=$O(^PXRMINDX(9000011,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDD",77,0)
 . S DFN="",IND=0
"RTN","PXRMINDD",78,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",79,0)
 .. S IND=IND+1
"RTN","PXRMINDD",80,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",81,0)
 .. S STATUS=""
"RTN","PXRMINDD",82,0)
 .. F  S STATUS=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS)) Q:STATUS=""  D
"RTN","PXRMINDD",83,0)
 ... S PRIORITY=""
"RTN","PXRMINDD",84,0)
 ... F  S PRIORITY=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY)) Q:PRIORITY=""  D
"RTN","PXRMINDD",85,0)
 .... S ITEM=""
"RTN","PXRMINDD",86,0)
 .... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",87,0)
 ..... S DATE=""
"RTN","PXRMINDD",88,0)
 ..... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",89,0)
 ...... I +DATE=DATE Q
"RTN","PXRMINDD",90,0)
 ...... S DAS=""
"RTN","PXRMINDD",91,0)
 ...... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",92,0)
 ....... S NSD=NSD+1
"RTN","PXRMINDD",93,0)
 ....... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_","_CODESYS_",""PSPI"","_DFN_","_STATUS_","_PRIORITY_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",94,0)
 Q
"RTN","PXRMINDD",95,0)
 ;
"RTN","PXRMINDD",96,0)
 ;========================================================
"RTN","PXRMINDD",97,0)
CNTPTF(FILENUM,NSD) ;Check for string dates for PTF indexes where the
"RTN","PXRMINDD",98,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDD",99,0)
 ;45
"RTN","PXRMINDD",100,0)
 N CODESYS,DAS,DATE,DFN,IND,ITEM,NODE
"RTN","PXRMINDD",101,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",102,0)
 S CODESYS="",IND=0
"RTN","PXRMINDD",103,0)
 F  S CODESYS=$O(^PXRMINDX(FILENUM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMINDD",104,0)
 . S DFN=""
"RTN","PXRMINDD",105,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",106,0)
 .. S IND=IND+1
"RTN","PXRMINDD",107,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",108,0)
 .. S NODE=""
"RTN","PXRMINDD",109,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","PXRMINDD",110,0)
 ... S ITEM=""
"RTN","PXRMINDD",111,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",112,0)
 .... S DATE=""
"RTN","PXRMINDD",113,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDD",114,0)
 ..... I +DATE=DATE Q
"RTN","PXRMINDD",115,0)
 ..... S DAS=""
"RTN","PXRMINDD",116,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,CODESYS,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",117,0)
 ...... S NSD=NSD+1
"RTN","PXRMINDD",118,0)
 ...... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_","_CODESYS_",""PNI"","_DFN_","_NODE_","_ITEM_","""_DATE_""","_DAS_")"
"RTN","PXRMINDD",119,0)
 Q
"RTN","PXRMINDD",120,0)
 ;
"RTN","PXRMINDD",121,0)
 ;========================================================
"RTN","PXRMINDD",122,0)
CNTSS(FILENUM,NSD) ;Check for string dates for indexes where the start date
"RTN","PXRMINDD",123,0)
 ;is at subscript 5 and the stop date is at subscript 6.
"RTN","PXRMINDD",124,0)
 ;Works for file numbers: 52, 55, 100
"RTN","PXRMINDD",125,0)
 N DAS,DFN,IND,ITEM,START,STOP
"RTN","PXRMINDD",126,0)
 I '$D(ZTQUEUED) W !,"Checking file number "_FILENUM
"RTN","PXRMINDD",127,0)
 S IND=0
"RTN","PXRMINDD",128,0)
 S DFN=""
"RTN","PXRMINDD",129,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDD",130,0)
 . S IND=IND+1
"RTN","PXRMINDD",131,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDD",132,0)
 . S ITEM=""
"RTN","PXRMINDD",133,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDD",134,0)
 .. S START=""
"RTN","PXRMINDD",135,0)
 .. F  S START=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START)) Q:START=""  D
"RTN","PXRMINDD",136,0)
 ... I +START=START Q
"RTN","PXRMINDD",137,0)
 ... S STOP=""
"RTN","PXRMINDD",138,0)
 ... F  S STOP=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP)) Q:STOP=""  D
"RTN","PXRMINDD",139,0)
 .... S DAS=""
"RTN","PXRMINDD",140,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP,DAS)) Q:DAS=""  D
"RTN","PXRMINDD",141,0)
 ..... S NSD=NSD+1
"RTN","PXRMINDD",142,0)
 ..... S ^TMP($J,"SDATE",NSD)="^PXRMINDX("_FILENUM_",""PI"","_DFN_","_ITEM_","""_START_""","_STOP_","_DAS_")"
"RTN","PXRMINDD",143,0)
 Q
"RTN","PXRMINDD",144,0)
 ;
"RTN","PXRMINDD",145,0)
 ;========================================================
"RTN","PXRMINDD",146,0)
CHECK ;Driver for making index date checks.
"RTN","PXRMINDD",147,0)
 N GBL,LIST,TASKIT
"RTN","PXRMINDD",148,0)
 W !,"Which indexes do you want to check?"
"RTN","PXRMINDD",149,0)
 D SEL^PXRMSXRM(.LIST,.GBL)
"RTN","PXRMINDD",150,0)
 I LIST="" Q
"RTN","PXRMINDD",151,0)
 ;See if this should be tasked.
"RTN","PXRMINDD",152,0)
 S TASKIT=$$ASKTASK^PXRMSXRM
"RTN","PXRMINDD",153,0)
 I TASKIT D
"RTN","PXRMINDD",154,0)
 . W !,"Queue the Clinical Reminders Index date check."
"RTN","PXRMINDD",155,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMINDD",156,0)
 E  D RUNNOW(LIST,.GBL)
"RTN","PXRMINDD",157,0)
 Q
"RTN","PXRMINDD",158,0)
 ;
"RTN","PXRMINDD",159,0)
 ;========================================================
"RTN","PXRMINDD",160,0)
MESSAGE(FILENUM,NSD,START,END) ;Build the MailMan message giving the
"RTN","PXRMINDD",161,0)
 ;list of entries with string dates.
"RTN","PXRMINDD",162,0)
 N FROM,IND,NAME,NL,TEXT,TO,XMSUB
"RTN","PXRMINDD",163,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDD",164,0)
 S XMSUB="CR Index string date check for file #"_FILENUM
"RTN","PXRMINDD",165,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")_", file #"_FILENUM
"RTN","PXRMINDD",166,0)
 I NSD=0 S TEXT="No string dates were found for "_NAME_"."
"RTN","PXRMINDD",167,0)
 I NSD>0 S TEXT="A total of "_NSD_" string dates were found for "_NAME_"."
"RTN","PXRMINDD",168,0)
 S ^TMP("PXRMXMZ",$J,1,0)=TEXT
"RTN","PXRMINDD",169,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Check finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMINDD",170,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^PXRMSXRM(START,END)
"RTN","PXRMINDD",171,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","PXRMINDD",172,0)
 I NSD=0,'$D(^PXRMINDX(FILENUM)) D
"RTN","PXRMINDD",173,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The index for file number "_FILENUM_" does not exist."
"RTN","PXRMINDD",174,0)
 . S ^TMP("PXRMXMZ",$J,6,0)=" "
"RTN","PXRMINDD",175,0)
 I NSD>0 D
"RTN","PXRMINDD",176,0)
 . S ^TMP("PXRMXMZ",$J,5,0)="The following entries with string dates were found:"
"RTN","PXRMINDD",177,0)
 . S NL=5
"RTN","PXRMINDD",178,0)
 . F IND=1:1:NSD D
"RTN","PXRMINDD",179,0)
 .. S NL=NL+1
"RTN","PXRMINDD",180,0)
 .. S ^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDATE",IND)
"RTN","PXRMINDD",181,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "
"RTN","PXRMINDD",182,0)
 S FROM=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMINDD",183,0)
 S TO(DUZ)=""
"RTN","PXRMINDD",184,0)
 D SEND^PXRMMSG("PXRMXMZ",XMSUB,.TO,FROM)
"RTN","PXRMINDD",185,0)
 K ^TMP($J,"SDATE"),^TMP("PXRMXMZ",$J)
"RTN","PXRMINDD",186,0)
 Q
"RTN","PXRMINDD",187,0)
 ;
"RTN","PXRMINDD",188,0)
 ;===============================================================
"RTN","PXRMINDD",189,0)
RUNNOW(LIST,GBL) ;Run the routines now.
"RTN","PXRMINDD",190,0)
 N END,FN,IND,LI,NSD,NUM,ROUTINE,RTN,START,TOTAL
"RTN","PXRMINDD",191,0)
 K ^TMP($J,"SDATE")
"RTN","PXRMINDD",192,0)
 S ROUTINE(45)="CNTPTF^PXRMINDD"
"RTN","PXRMINDD",193,0)
 S ROUTINE(52)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",194,0)
 S ROUTINE(55)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",195,0)
 S ROUTINE(63)="CNT5^PXRMINDD"
"RTN","PXRMINDD",196,0)
 S ROUTINE(70)="CNT5^PXRMINDD"
"RTN","PXRMINDD",197,0)
 S ROUTINE(100)="CNTSS^PXRMINDD"
"RTN","PXRMINDD",198,0)
 S ROUTINE(120.5)="CNT5^PXRMINDD"
"RTN","PXRMINDD",199,0)
 S ROUTINE(601.2)="CNT5^PXRMINDD"
"RTN","PXRMINDD",200,0)
 S ROUTINE(601.84)="CNT5^PXRMINDD"
"RTN","PXRMINDD",201,0)
 S ROUTINE(9000011)="CNTPL^PXRMINDD"
"RTN","PXRMINDD",202,0)
 S ROUTINE(9000010.07)="CNT6^PXRMINDD"
"RTN","PXRMINDD",203,0)
 S ROUTINE(9000010.11)="CNT5^PXRMINDD"
"RTN","PXRMINDD",204,0)
 S ROUTINE(9000010.12)="CNT5^PXRMINDD"
"RTN","PXRMINDD",205,0)
 S ROUTINE(9000010.13)="CNT5^PXRMINDD"
"RTN","PXRMINDD",206,0)
 S ROUTINE(9000010.16)="CNT5^PXRMINDD"
"RTN","PXRMINDD",207,0)
 S ROUTINE(9000010.18)="CNT6^PXRMINDD"
"RTN","PXRMINDD",208,0)
 S ROUTINE(9000010.23)="CNT5^PXRMINDD"
"RTN","PXRMINDD",209,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDD",210,0)
 F IND=1:1:NUM D
"RTN","PXRMINDD",211,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMINDD",212,0)
 . S NSD=0
"RTN","PXRMINDD",213,0)
 . S FN=GBL(LI)
"RTN","PXRMINDD",214,0)
 . S RTN=ROUTINE(FN)
"RTN","PXRMINDD",215,0)
 . S RTN=RTN_"("_FN_",.NSD)"
"RTN","PXRMINDD",216,0)
 . S START=$H
"RTN","PXRMINDD",217,0)
 . I $D(^PXRMINDX(FN)) D @RTN
"RTN","PXRMINDD",218,0)
 . S END=$H
"RTN","PXRMINDD",219,0)
 . D MESSAGE(FN,NSD,START,END)
"RTN","PXRMINDD",220,0)
 Q
"RTN","PXRMINDD",221,0)
 ;
"RTN","PXRMINDD",222,0)
 ;===============================================================
"RTN","PXRMINDD",223,0)
TASKIT(LIST,GBL,ROUTINE) ;Check the indexes as a tasked job.
"RTN","PXRMINDD",224,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMINDD",225,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMINDD",226,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMINDD",227,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMINDD",228,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMINDD",229,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMINDD",230,0)
 D ^DIR
"RTN","PXRMINDD",231,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMINDD",232,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMINDD",233,0)
 S SDTIME=Y
"RTN","PXRMINDD",234,0)
 K DIR
"RTN","PXRMINDD",235,0)
 ;Put the task into the queue.
"RTN","PXRMINDD",236,0)
 K ZTSAVE
"RTN","PXRMINDD",237,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMINDD",238,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMINDD",239,0)
 S ZTRTN="TASKJOB^PXRMINDD"
"RTN","PXRMINDD",240,0)
 S ZTDESC="Clinical Reminders Index string date check"
"RTN","PXRMINDD",241,0)
 S ZTDTH=SDTIME
"RTN","PXRMINDD",242,0)
 S ZTIO=""
"RTN","PXRMINDD",243,0)
 D ^%ZTLOAD
"RTN","PXRMINDD",244,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMINDD",245,0)
 Q
"RTN","PXRMINDD",246,0)
 ;
"RTN","PXRMINDD",247,0)
 ;===============================================================
"RTN","PXRMINDD",248,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","PXRMINDD",249,0)
 N IND,LI,NUM
"RTN","PXRMINDD",250,0)
 S ZTREQ="@"
"RTN","PXRMINDD",251,0)
 S ZTSTOP=0
"RTN","PXRMINDD",252,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDD",253,0)
 F IND=1:1:NUM D
"RTN","PXRMINDD",254,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMINDD",255,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMINDD",256,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","PXRMINDD",257,0)
 . D RUNNOW^PXRMINDD(LI,.GBL)
"RTN","PXRMINDD",258,0)
 Q
"RTN","PXRMINDD",259,0)
 ;
"RTN","PXRMINDL")
0^57^B24651910
"RTN","PXRMINDL",1,0)
PXRMINDL ; SLC/PKR - List building routines. ;01/07/2013
"RTN","PXRMINDL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMINDL",3,0)
 ;================================================
"RTN","PXRMINDL",4,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;General patient list term evaluator.
"RTN","PXRMINDL",5,0)
 ;Return the list in ^TMP($J,PLIST)
"RTN","PXRMINDL",6,0)
 N ITEM,FILENUM,PFINDPA
"RTN","PXRMINDL",7,0)
 N SSFIND,TEMP,TFINDING,TFINDPA
"RTN","PXRMINDL",8,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDL",9,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D  Q
"RTN","PXRMINDL",10,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),FILENUM)
"RTN","PXRMINDL",11,0)
 S ITEM=""
"RTN","PXRMINDL",12,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDL",13,0)
 . S TFINDING=""
"RTN","PXRMINDL",14,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMINDL",15,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMINDL",16,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMINDL",17,0)
 ..;Set the finding parameters.
"RTN","PXRMINDL",18,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMINDL",19,0)
 .. D GPLIST(FILENUM,"IP",ITEM,.PFINDPA,PLIST)
"RTN","PXRMINDL",20,0)
 Q
"RTN","PXRMINDL",21,0)
 ;
"RTN","PXRMINDL",22,0)
 ;================================================
"RTN","PXRMINDL",23,0)
FPLIST(FILENUM,SNODE,ITEM,NOCC,BDT,EDT,PLIST) ;Find patient list data for
"RTN","PXRMINDL",24,0)
 ;regular files. Return the list in ^TMP($J,PLIST).
"RTN","PXRMINDL",25,0)
 N DAS,DATE,DFN,DS,NFOUND
"RTN","PXRMINDL",26,0)
 K ^TMP($J,PLIST)
"RTN","PXRMINDL",27,0)
 I FILENUM=601.84 D SEVALPL^PXRMMH(ITEM,NOCC,BDT,EDT,PLIST) Q
"RTN","PXRMINDL",28,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDL",29,0)
 S DFN=0
"RTN","PXRMINDL",30,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",31,0)
 . S NFOUND=0
"RTN","PXRMINDL",32,0)
 . S DATE=DS
"RTN","PXRMINDL",33,0)
 . F  S DATE=+$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)!(NFOUND=NOCC)  D
"RTN","PXRMINDL",34,0)
 .. S DAS=""
"RTN","PXRMINDL",35,0)
 .. F  S DAS=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,DATE,DAS),-1) Q:DAS=""  D
"RTN","PXRMINDL",36,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMINDL",37,0)
 ... S ^TMP($J,PLIST,DFN,NFOUND)=DAS_U_DATE
"RTN","PXRMINDL",38,0)
 Q
"RTN","PXRMINDL",39,0)
 ;
"RTN","PXRMINDL",40,0)
 ;================================================
"RTN","PXRMINDL",41,0)
FPLISTSS(FILENUM,SNODE,ITEM,NGET,BDT,EDT,USESTRT,PLIST) ;Find patient list
"RTN","PXRMINDL",42,0)
 ;data for a finding with a start and stop date.
"RTN","PXRMINDL",43,0)
 ;Return the list in ^TMP($J,PLIST).
"RTN","PXRMINDL",44,0)
 N DAS,DFN,DONE,EDTT,NFOUND,OVERLAP,SDATE,START,STOP,TDATE,TIND,TLIST
"RTN","PXRMINDL",45,0)
 K ^TMP($J,PLIST)
"RTN","PXRMINDL",46,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDL",47,0)
 S DFN=0
"RTN","PXRMINDL",48,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",49,0)
 . S (DONE,NFOUND)=0
"RTN","PXRMINDL",50,0)
 . S START=EDTT
"RTN","PXRMINDL",51,0)
 . K TLIST
"RTN","PXRMINDL",52,0)
 . F  S START=+$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START),-1) Q:(START=0)!(DONE)  D
"RTN","PXRMINDL",53,0)
 .. S STOP=""
"RTN","PXRMINDL",54,0)
 .. F  S STOP=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START,STOP),-1) Q:(STOP="")!(DONE)  D
"RTN","PXRMINDL",55,0)
 ... S SDATE=$S(USESTRT:START,STOP["U":$$NOW^PXRMDATE_"U",1:STOP)
"RTN","PXRMINDL",56,0)
 ... S OVERLAP=$$OVERLAP^PXRMINDX(START,SDATE,BDT,EDTT)
"RTN","PXRMINDL",57,0)
 ... I OVERLAP="O" D
"RTN","PXRMINDL",58,0)
 .... S DAS=$O(^PXRMINDX(FILENUM,SNODE,ITEM,DFN,START,STOP,""))
"RTN","PXRMINDL",59,0)
 .... S NFOUND=NFOUND+1,TLIST(SDATE,NFOUND)=DAS_U_START_U_SDATE
"RTN","PXRMINDL",60,0)
 ... I FILENUM="55NVA" Q
"RTN","PXRMINDL",61,0)
 ... I FILENUM=100 Q
"RTN","PXRMINDL",62,0)
 ... I OVERLAP="L" S DONE=1 Q
"RTN","PXRMINDL",63,0)
 .;Return up to NGET of the most recent entries.
"RTN","PXRMINDL",64,0)
 . S NFOUND=0,TDATE=""
"RTN","PXRMINDL",65,0)
 . F  S TDATE=$O(TLIST(TDATE)) Q:(TDATE="")!(NFOUND=NGET)  D
"RTN","PXRMINDL",66,0)
 .. S TIND=0
"RTN","PXRMINDL",67,0)
 .. F  S TIND=$O(TLIST(TDATE,TIND)) Q:(TIND="")!(NFOUND=NGET)  D
"RTN","PXRMINDL",68,0)
 ... S NFOUND=NFOUND+1,^TMP($J,PLIST,DFN,NFOUND)=TLIST(TDATE,TIND)
"RTN","PXRMINDL",69,0)
 Q
"RTN","PXRMINDL",70,0)
 ;
"RTN","PXRMINDL",71,0)
 ;================================================
"RTN","PXRMINDL",72,0)
GPLIST(FILENUM,SNODE,ITEM,PFINDPA,PLIST) ;Add to the patient list
"RTN","PXRMINDL",73,0)
 ;for a regular file. Return the list in ^TMP($J,PLIST):
"RTN","PXRMINDL",74,0)
 ;^TMP($J,PLIST,T/F,DFN,ITEM,COUNT,FILENUM)=DAS^DATE^VALUE
"RTN","PXRMINDL",75,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,DFN,FIEVD,FLIST,GPLIST
"RTN","PXRMINDL",76,0)
 N ICOND,IND,INVFD,IPLIST,NOCC,NFOUND,NGET
"RTN","PXRMINDL",77,0)
 N SAVE,SSFIND,STATOK,STATUSA,TEMP,TGLIST,TPLIST
"RTN","PXRMINDL",78,0)
 N UCIFS,USESTRT,VALUE,VSLIST
"RTN","PXRMINDL",79,0)
 S TGLIST="GPLIST_PXRMINDL"
"RTN","PXRMINDL",80,0)
 ;Determine if this is a finding with a start and stop date.
"RTN","PXRMINDL",81,0)
 S SSFIND=$S(FILENUM=52:1,FILENUM[55:1,FILENUM=100:1,1:0)
"RTN","PXRMINDL",82,0)
 S USESTRT=$S(SSFIND:$P(PFINDPA(0),U,15),1:0)
"RTN","PXRMINDL",83,0)
 I FILENUM=100,USESTRT="" S USESTRT=1
"RTN","PXRMINDL",84,0)
 ;Set the finding search parameters.
"RTN","PXRMINDL",85,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMINDL",86,0)
 S INVFD=$P(PFINDPA(0),U,16)
"RTN","PXRMINDL",87,0)
 D GETSTATI^PXRMSTAT(FILENUM,.PFINDPA,.STATUSA)
"RTN","PXRMINDL",88,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMINDL",89,0)
 ;Ignore any negative occurrence counts, date reversal not allowed
"RTN","PXRMINDL",90,0)
 ;in patient lists.
"RTN","PXRMINDL",91,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMINDL",92,0)
 S NGET=$S(UCIFS:50,$D(STATUSA):50,1:NOCC)
"RTN","PXRMINDL",93,0)
 I SSFIND D FPLISTSS(FILENUM,SNODE,ITEM,NGET,BDT,EDT,USESTRT,TGLIST)
"RTN","PXRMINDL",94,0)
 I 'SSFIND D FPLIST(FILENUM,SNODE,ITEM,NGET,BDT,EDT,TGLIST)
"RTN","PXRMINDL",95,0)
 S DFN=""
"RTN","PXRMINDL",96,0)
 F  S DFN=$O(^TMP($J,TGLIST,DFN)) Q:DFN=""  D
"RTN","PXRMINDL",97,0)
 . K GPLIST
"RTN","PXRMINDL",98,0)
 . M GPLIST=^TMP($J,TGLIST,DFN)
"RTN","PXRMINDL",99,0)
 . S (IND,NFOUND)=0
"RTN","PXRMINDL",100,0)
 . K IPLIST
"RTN","PXRMINDL",101,0)
 . F  S IND=$O(GPLIST(IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMINDL",102,0)
 .. S TEMP=GPLIST(IND)
"RTN","PXRMINDL",103,0)
 .. S DAS=$P(TEMP,U,1)
"RTN","PXRMINDL",104,0)
 .. S DATE=$P(TEMP,U,2)
"RTN","PXRMINDL",105,0)
 ..;If this a Lab finding attach the item to the DAS.
"RTN","PXRMINDL",106,0)
 .. I PFINDPA(0)["LAB(60" S DAS=ITEM_"~"_DAS
"RTN","PXRMINDL",107,0)
 ..;If this is a Mental Health finding attach the scale to DAS.
"RTN","PXRMINDL",108,0)
 .. I PFINDPA(0)["YTT(601.71" S DAS=DAS_"S"_$P(PFINDPA(0),U,12)
"RTN","PXRMINDL",109,0)
 .. D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMINDL",110,0)
 .. S VALUE=$G(FIEVD("VALUE"))
"RTN","PXRMINDL",111,0)
 .. I INVFD,$D(FIEVD("VISIT")) D GETDATA^PXRMVSIT(FIEVD("VISIT"),.FIEVD,0)
"RTN","PXRMINDL",112,0)
 .. S FIEVD("DATE")=DATE
"RTN","PXRMINDL",113,0)
 ..;If there is a status list make sure the finding has a status on
"RTN","PXRMINDL",114,0)
 ..;the list.
"RTN","PXRMINDL",115,0)
 .. S STATOK=$S($D(STATUSA):$$STATUSOK^PXRMINDX(.STATUSA,.FIEVD),1:1)
"RTN","PXRMINDL",116,0)
 .. I 'STATOK Q
"RTN","PXRMINDL",117,0)
 .. S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMINDL",118,0)
 .. S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMINDL",119,0)
 .. I SAVE D
"RTN","PXRMINDL",120,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMINDL",121,0)
 ... S IPLIST(CONVAL,DFN,ITEM,NFOUND,FILENUM)=TEMP_U_VALUE
"RTN","PXRMINDL",122,0)
 . M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMINDL",123,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMINDL",124,0)
 Q
"RTN","PXRMINDL",125,0)
 ;
"RTN","PXRMINDX")
0^58^B36378752
"RTN","PXRMINDX",1,0)
PXRMINDX ;SLC/PKR - Routines for utilizing the index. ;01/07/2013
"RTN","PXRMINDX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMINDX",3,0)
 ;Code for patient findings.
"RTN","PXRMINDX",4,0)
 ;================================================================
"RTN","PXRMINDX",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;General finding evaluator.
"RTN","PXRMINDX",6,0)
 N BDT,EDT,FIEVT,FILENUM,FINDING,FINDPA,ITEM,NOINDEX
"RTN","PXRMINDX",7,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDX",8,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D
"RTN","PXRMINDX",9,0)
 . D NOINDEX^PXRMERRH("D",PXRMITEM,FILENUM)
"RTN","PXRMINDX",10,0)
 . S NOINDEX=1
"RTN","PXRMINDX",11,0)
 E  S NOINDEX=0
"RTN","PXRMINDX",12,0)
 S ITEM=""
"RTN","PXRMINDX",13,0)
 F  S ITEM=$O(DEFARR("E",ENODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDX",14,0)
 . S FINDING=""
"RTN","PXRMINDX",15,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,ITEM,FINDING)) Q:+FINDING=0  D
"RTN","PXRMINDX",16,0)
 .. I NOINDEX S FIEVAL(FINDING)=0 Q
"RTN","PXRMINDX",17,0)
 .. K FINDPA
"RTN","PXRMINDX",18,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMINDX",19,0)
 .. K FIEVT
"RTN","PXRMINDX",20,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.FINDPA,.FIEVT)
"RTN","PXRMINDX",21,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMINDX",22,0)
 .. S FIEVAL(FINDING,"FINDING")=$P(FINDPA(0),U,1)
"RTN","PXRMINDX",23,0)
 Q
"RTN","PXRMINDX",24,0)
 ;
"RTN","PXRMINDX",25,0)
 ;================================================================
"RTN","PXRMINDX",26,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;General term
"RTN","PXRMINDX",27,0)
 ;evaluator.
"RTN","PXRMINDX",28,0)
 N FIEVT,FILENUM,ITEM,NOINDEX,PFINDPA
"RTN","PXRMINDX",29,0)
 N TFINDING,TFINDPA
"RTN","PXRMINDX",30,0)
 S FILENUM=$$GETFNUM^PXRMDATA(ENODE)
"RTN","PXRMINDX",31,0)
 I $G(^PXRMINDX(FILENUM,"DATE BUILT"))="" D
"RTN","PXRMINDX",32,0)
 . D NOINDEX^PXRMERRH("TR",TERMARR("IEN"),FILENUM)
"RTN","PXRMINDX",33,0)
 . S NOINDEX=1
"RTN","PXRMINDX",34,0)
 E  S NOINDEX=0
"RTN","PXRMINDX",35,0)
 S ITEM=""
"RTN","PXRMINDX",36,0)
 F  S ITEM=$O(TERMARR("E",ENODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDX",37,0)
 . S TFINDING=""
"RTN","PXRMINDX",38,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,ITEM,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMINDX",39,0)
 .. I NOINDEX S TFIEVAL(TFINDING)=0 Q
"RTN","PXRMINDX",40,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMINDX",41,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMINDX",42,0)
 ..;Set the finding parameters.
"RTN","PXRMINDX",43,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMINDX",44,0)
 .. D FIEVAL(FILENUM,"PI",DFN,ITEM,.PFINDPA,.FIEVT)
"RTN","PXRMINDX",45,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMINDX",46,0)
 .. S TFIEVAL(TFINDING,"FINDING")=$P(TFINDPA(0),U,1)
"RTN","PXRMINDX",47,0)
 Q
"RTN","PXRMINDX",48,0)
 ;
"RTN","PXRMINDX",49,0)
 ;================================================================
"RTN","PXRMINDX",50,0)
FIEVAL(FILENUM,SNODE,DFN,ITEM,PFINDPA,FIEVAL) ;
"RTN","PXRMINDX",51,0)
 ;Evaluate regular patient findings.
"RTN","PXRMINDX",52,0)
 N BDT,CASESEN,COND,CONVAL,DAS,DATE,EDT,FIEVD,FLIST,ICOND,IEN,IND,INVFD
"RTN","PXRMINDX",53,0)
 N NFOUND,NGET,NOCC,NP
"RTN","PXRMINDX",54,0)
 N SAVE,SDIR,SSFIND,STATOK,STATUSA,UCIFS,USESTRT,VSLIST
"RTN","PXRMINDX",55,0)
 ;Set the finding search parameters.
"RTN","PXRMINDX",56,0)
 D SSPAR^PXRMUTIL(PFINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMINDX",57,0)
 I $G(PXRMDEBG) S FIEVAL("BDTE")=BDT,FIEVAL("EDTE")=EDT
"RTN","PXRMINDX",58,0)
 D SCPAR^PXRMCOND(.PFINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMINDX",59,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMINDX",60,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMINDX",61,0)
 S NGET=$S(UCIFS:50,1:NOCC)
"RTN","PXRMINDX",62,0)
 ;Determine if this is a finding with a start and stop date.
"RTN","PXRMINDX",63,0)
 S SSFIND=$S(FILENUM=52:1,FILENUM["55":1,FILENUM=100:1,1:0)
"RTN","PXRMINDX",64,0)
 S USESTRT=$S(SSFIND:$P(PFINDPA(0),U,15),1:0)
"RTN","PXRMINDX",65,0)
 I FILENUM=100,USESTRT="" S USESTRT=1
"RTN","PXRMINDX",66,0)
 ;Get the status list.
"RTN","PXRMINDX",67,0)
 D GETSTATI^PXRMSTAT(FILENUM,.PFINDPA,.STATUSA)
"RTN","PXRMINDX",68,0)
 I SSFIND D FPDATSS(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,USESTRT,.NFOUND,.FLIST)
"RTN","PXRMINDX",69,0)
 I 'SSFIND D FPDAT(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,.NFOUND,.FLIST)
"RTN","PXRMINDX",70,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMINDX",71,0)
 S INVFD=$P(PFINDPA(0),U,16)
"RTN","PXRMINDX",72,0)
 S NP=0
"RTN","PXRMINDX",73,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMINDX",74,0)
 . S DAS=$P(FLIST(IND),U,1)
"RTN","PXRMINDX",75,0)
 .;If this a Lab finding attach the item to the DAS.
"RTN","PXRMINDX",76,0)
 . I PFINDPA(0)["LAB(60" S DAS=ITEM_"~"_DAS
"RTN","PXRMINDX",77,0)
 .;If this is a Mental Health finding attach the scale to DAS.
"RTN","PXRMINDX",78,0)
 . I PFINDPA(0)["YTT(601.71" S DAS=DAS_"S"_$P(PFINDPA(0),U,12)
"RTN","PXRMINDX",79,0)
 . D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVD)
"RTN","PXRMINDX",80,0)
 . I INVFD,$D(FIEVD("VISIT")) D GETDATA^PXRMVSIT(FIEVD("VISIT"),.FIEVD,0)
"RTN","PXRMINDX",81,0)
 . S FIEVD("DATE")=$P(FLIST(IND),U,2)
"RTN","PXRMINDX",82,0)
 .;If there is a status list make sure the finding has one on the list.
"RTN","PXRMINDX",83,0)
 . S STATOK=$S($D(STATUSA):$$STATUSOK(.STATUSA,.FIEVD),1:1)
"RTN","PXRMINDX",84,0)
 . I 'STATOK Q
"RTN","PXRMINDX",85,0)
 . S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVD),1:1)
"RTN","PXRMINDX",86,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMINDX",87,0)
 . I SAVE D
"RTN","PXRMINDX",88,0)
 .. S NP=NP+1
"RTN","PXRMINDX",89,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMINDX",90,0)
 .. I COND'="" S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMINDX",91,0)
 .. S FIEVAL(NP,"DAS")=$P(FLIST(IND),U,1)
"RTN","PXRMINDX",92,0)
 .. S FIEVAL(NP,"DATE")=FIEVD("DATE")
"RTN","PXRMINDX",93,0)
 .. M FIEVAL(NP)=FIEVD
"RTN","PXRMINDX",94,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=FIEVD
"RTN","PXRMINDX",95,0)
 ;
"RTN","PXRMINDX",96,0)
 ;Save the finding result.
"RTN","PXRMINDX",97,0)
 D SFRES^PXRMUTIL(SDIR,NP,.FIEVAL)
"RTN","PXRMINDX",98,0)
 S FIEVAL("FILE NUMBER")=FILENUM
"RTN","PXRMINDX",99,0)
 Q
"RTN","PXRMINDX",100,0)
 ;
"RTN","PXRMINDX",101,0)
 ;================================================================
"RTN","PXRMINDX",102,0)
FPDAT(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,NFOUND,FLIST) ;Find patient
"RTN","PXRMINDX",103,0)
 ;data for regular files. FLIST is returned in date order, i.e.,
"RTN","PXRMINDX",104,0)
 ;FLIST(1) is the most recent SDIR=-1, oldest SDIR=+1.
"RTN","PXRMINDX",105,0)
 I FILENUM=601.84 D SEVALFI^PXRMMH(DFN,ITEM,NGET,SDIR,BDT,EDT,.NFOUND,.FLIST) Q
"RTN","PXRMINDX",106,0)
 N DAS,DATE,DONE,EDTT
"RTN","PXRMINDX",107,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDX",108,0)
 S (DONE,NFOUND)=0
"RTN","PXRMINDX",109,0)
 S DATE=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMINDX",110,0)
 F  S DATE=+$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,DATE),SDIR) Q:(DATE=0)!(DONE)  D
"RTN","PXRMINDX",111,0)
 . I DATE<BDT,SDIR=-1 S DONE=1 Q
"RTN","PXRMINDX",112,0)
 . I DATE>EDTT,SDIR=1 S DONE=1 Q
"RTN","PXRMINDX",113,0)
 . S DAS=""
"RTN","PXRMINDX",114,0)
 . F  S DAS=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,DATE,DAS),-1) Q:DAS=""  D
"RTN","PXRMINDX",115,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMINDX",116,0)
 .. S FLIST(NFOUND)=DAS_U_DATE
"RTN","PXRMINDX",117,0)
 .. I NFOUND=NGET S DONE=1 Q
"RTN","PXRMINDX",118,0)
 Q
"RTN","PXRMINDX",119,0)
 ;
"RTN","PXRMINDX",120,0)
 ;================================================================
"RTN","PXRMINDX",121,0)
FPDATSS(FILENUM,SNODE,DFN,ITEM,NGET,SDIR,BDT,EDT,USESTRT,NFOUND,FLIST) ;Find
"RTN","PXRMINDX",122,0)
 ;patient data for findings that have a start and stop date. FLIST
"RTN","PXRMINDX",123,0)
 ;is returned in date order, i.e., FLIST(1) is the most recent.
"RTN","PXRMINDX",124,0)
 N DAS,DONE,EDTT,OVERLAP,SDATE,START,STOP,TDATE,TIND,TLIST
"RTN","PXRMINDX",125,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMINDX",126,0)
 S (DONE,NFOUND)=0
"RTN","PXRMINDX",127,0)
 S START=$S(SDIR=+1:0,1:EDTT)
"RTN","PXRMINDX",128,0)
 F  S START=+$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START),SDIR) Q:(START=0)!(DONE)!(START>EDTT)  D
"RTN","PXRMINDX",129,0)
 . S STOP=""
"RTN","PXRMINDX",130,0)
 . F  S STOP=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START,STOP),SDIR) Q:(STOP="")!(DONE)  D
"RTN","PXRMINDX",131,0)
 ..;Items that do not have a stop date are flagged by "U".
"RTN","PXRMINDX",132,0)
 .. S SDATE=$S(USESTRT:START,STOP["U":$$NOW^PXRMDATE_"U",1:STOP)
"RTN","PXRMINDX",133,0)
 .. S OVERLAP=$$OVERLAP(START,SDATE,BDT,EDT)
"RTN","PXRMINDX",134,0)
 .. I OVERLAP="O" D
"RTN","PXRMINDX",135,0)
 ... S DAS=$O(^PXRMINDX(FILENUM,SNODE,DFN,ITEM,START,STOP,""))
"RTN","PXRMINDX",136,0)
 ... S NFOUND=NFOUND+1,TLIST(SDATE,NFOUND)=DAS_U_SDATE
"RTN","PXRMINDX",137,0)
 ..;Some orders and non-VA meds may not have a Stop Date so we have
"RTN","PXRMINDX",138,0)
 ..;to check all entries.
"RTN","PXRMINDX",139,0)
 .. I FILENUM="55NVA" Q
"RTN","PXRMINDX",140,0)
 .. I FILENUM=100 Q
"RTN","PXRMINDX",141,0)
 .. I OVERLAP="L",SDIR=-1 S DONE=1 Q
"RTN","PXRMINDX",142,0)
 .. I OVERLAP="R",SDIR=1 S DONE=1 Q
"RTN","PXRMINDX",143,0)
 ;Return up to NGET of the most recent/oldest entries.
"RTN","PXRMINDX",144,0)
 S NFOUND=0,TDATE=""
"RTN","PXRMINDX",145,0)
 F  S TDATE=$O(TLIST(TDATE),SDIR) Q:(TDATE="")!(NFOUND=NGET)  D
"RTN","PXRMINDX",146,0)
 . S TIND=0
"RTN","PXRMINDX",147,0)
 . F  S TIND=$O(TLIST(TDATE,TIND)) Q:(TIND="")!(NFOUND=NGET)  D
"RTN","PXRMINDX",148,0)
 .. S NFOUND=NFOUND+1,FLIST(NFOUND)=TLIST(TDATE,TIND)
"RTN","PXRMINDX",149,0)
 Q
"RTN","PXRMINDX",150,0)
 ;
"RTN","PXRMINDX",151,0)
 ;================================================================
"RTN","PXRMINDX",152,0)
OVERLAP(START,STOP,BDT,EDT) ;Determine if the date range defined by START and
"RTN","PXRMINDX",153,0)
 ;STOP overlaps with the date range defined by BDT and EDT. The return
"RTN","PXRMINDX",154,0)
 ;value "O" means they overlap, "L" means START, STOP is to the
"RTN","PXRMINDX",155,0)
 ;left of BDT, EDT and "R" means it is to the right.
"RTN","PXRMINDX",156,0)
 I EDT<START Q "R"
"RTN","PXRMINDX",157,0)
 I STOP<BDT Q "L"
"RTN","PXRMINDX",158,0)
 Q "O"
"RTN","PXRMINDX",159,0)
 ;
"RTN","PXRMINDX",160,0)
 ;================================================================
"RTN","PXRMINDX",161,0)
STATUSOK(STATUSA,FIEVD) ;Return true if the status in FIEVD matches one in
"RTN","PXRMINDX",162,0)
 ;the list in STATUSA.
"RTN","PXRMINDX",163,0)
 I '$D(FIEVD("STATUS")) Q 1
"RTN","PXRMINDX",164,0)
 N JND,OK
"RTN","PXRMINDX",165,0)
 S OK=0
"RTN","PXRMINDX",166,0)
 F JND=1:1:STATUSA(0) Q:OK  D
"RTN","PXRMINDX",167,0)
 . I STATUSA(JND)="*" S OK=1 Q
"RTN","PXRMINDX",168,0)
 . I STATUSA(JND)=FIEVD("STATUS") S OK=1 Q
"RTN","PXRMINDX",169,0)
 Q OK
"RTN","PXRMINDX",170,0)
 ;
"RTN","PXRMINTR")
0^27^B45347072
"RTN","PXRMINTR",1,0)
PXRMINTR ;SLC/PKR/PJH - Input transforms for Clinical Reminders. ;11/04/2013
"RTN","PXRMINTR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,16,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMINTR",3,0)
 ;=======================================================
"RTN","PXRMINTR",4,0)
VASP(DA,X) ;Check for valid associate sponsor in file 811.6.
"RTN","PXRMINTR",5,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",6,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",7,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",8,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",9,0)
 ;Make sure that an associated sponsor does not point to itself.
"RTN","PXRMINTR",10,0)
 I X=DA D  Q 0
"RTN","PXRMINTR",11,0)
 . D EN^DDIOL("An associated sponsor cannot point to itself.")
"RTN","PXRMINTR",12,0)
 ;A sponsor cannot be an associated sponsor if it contains associated
"RTN","PXRMINTR",13,0)
 ;sponsors.
"RTN","PXRMINTR",14,0)
 I $D(^PXRMD(811.6,X,2,"B")) D  Q 0
"RTN","PXRMINTR",15,0)
 . D EN^DDIOL("A sponsor cannot be selected as an associated sponsor if it contains associated sponsors.")
"RTN","PXRMINTR",16,0)
 ;The class of an associated sponsor must match that of the sponsor.
"RTN","PXRMINTR",17,0)
 N ASCLASS,SCLASS
"RTN","PXRMINTR",18,0)
 S SCLASS=$P(^PXRMD(811.6,DA,0),U,2)
"RTN","PXRMINTR",19,0)
 S ASCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",20,0)
 I ASCLASS'=SCLASS D  Q 0
"RTN","PXRMINTR",21,0)
 . N TEXT
"RTN","PXRMINTR",22,0)
 . S TEXT="The associated sponsor's class is "_ASCLASS_", it does not match the sponsor's class which is "_SCLASS_". They must match."
"RTN","PXRMINTR",23,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",24,0)
 Q 1
"RTN","PXRMINTR",25,0)
 ;
"RTN","PXRMINTR",26,0)
 ;=======================================================
"RTN","PXRMINTR",27,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXRMINTR",28,0)
 ;National classes.
"RTN","PXRMINTR",29,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",30,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",31,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",32,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",33,0)
 I (X["N"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXRMINTR",34,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXRMINTR",35,0)
 E  Q 1
"RTN","PXRMINTR",36,0)
 ;
"RTN","PXRMINTR",37,0)
 ;=======================================================
"RTN","PXRMINTR",38,0)
VDT(X) ;Check for a valid date/time. Input transform on 
"RTN","PXRMINTR",39,0)
 ;beginning date/time and ending date/time fields.
"RTN","PXRMINTR",40,0)
 N FMDATE,PXRMINTR,VALID
"RTN","PXRMINTR",41,0)
 S PXRMINTR=1
"RTN","PXRMINTR",42,0)
 ;If X is already in internal FileMan format make sure it is valid.
"RTN","PXRMINTR",43,0)
 I X?7N0.1"."0.6N D DT^DILF("ST",X,.FMDATE,"","MSG")
"RTN","PXRMINTR",44,0)
 I X'?7N0.1"."0.6N S FMDATE=$$CTFMD^PXRMDATE(X)
"RTN","PXRMINTR",45,0)
 S VALID=$S(FMDATE=-1:0,1:1)
"RTN","PXRMINTR",46,0)
 I 'VALID D 
"RTN","PXRMINTR",47,0)
 . N TEXT
"RTN","PXRMINTR",48,0)
 . S TEXT=X_" is not a valid date/time"
"RTN","PXRMINTR",49,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",50,0)
 Q VALID
"RTN","PXRMINTR",51,0)
 ;
"RTN","PXRMINTR",52,0)
 ;=======================================================
"RTN","PXRMINTR",53,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",54,0)
 ;transform on the .01 field of the reminder findings multiple for
"RTN","PXRMINTR",55,0)
 ;definitions and terms.
"RTN","PXRMINTR",56,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",57,0)
 ;transforms on them.
"RTN","PXRMINTR",58,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",59,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",60,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",61,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",62,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",63,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",64,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",65,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",66,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",67,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",68,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",69,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",70,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",71,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",72,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",73,0)
 ;I X["YTT(601," Q 1
"RTN","PXRMINTR",74,0)
 Q 1
"RTN","PXRMINTR",75,0)
 ;
"RTN","PXRMINTR",76,0)
 ;=======================================================
"RTN","PXRMINTR",77,0)
VFREQ(X) ;Check for a valid frequency. It must be of the form NU,
"RTN","PXRMINTR",78,0)
 ;where N is an integer and U is unit. The integer can be between
"RTN","PXRMINTR",79,0)
 ;0 and 9999 inclusive. Valid units are: H (hours),
"RTN","PXRMINTR",80,0)
 ;D (days), W (weeks), M (months), and Y (years). Used as input
"RTN","PXRMINTR",81,0)
 ;transform for Baseline Frequency, finding multiple Reminder
"RTN","PXRMINTR",82,0)
 ;Frequency and called by Custom Date Due input transform.
"RTN","PXRMINTR",83,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",84,0)
 Q X?1.4N1(1"H",1"D",1"W",1"M",1"Y")
"RTN","PXRMINTR",85,0)
 ;
"RTN","PXRMINTR",86,0)
 ;=======================================================
"RTN","PXRMINTR",87,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",88,0)
 ;a category.
"RTN","PXRMINTR",89,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",90,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",91,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",92,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",93,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",94,0)
 . D EN^DDIOL("Category health factors cannot be used as a finding!")
"RTN","PXRMINTR",95,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",96,0)
 . D EN^DDIOL("Only factor health factors can be used as a finding!")
"RTN","PXRMINTR",97,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",98,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",99,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",100,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",101,0)
 I '$D(^AUTTHF(CAT)) D  Q 0
"RTN","PXRMINTR",102,0)
 . D EN^DDIOL("The category for this health factor does not exist!")
"RTN","PXRMINTR",103,0)
 Q 1
"RTN","PXRMINTR",104,0)
 ;
"RTN","PXRMINTR",105,0)
 ;=======================================================
"RTN","PXRMINTR",106,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",107,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",108,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",109,0)
 ;   A - age
"RTN","PXRMINTR",110,0)
 ;   I - inactive
"RTN","PXRMINTR",111,0)
 ;   R - race
"RTN","PXRMINTR",112,0)
 ;   S - sex
"RTN","PXRMINTR",113,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",114,0)
 N LEN
"RTN","PXRMINTR",115,0)
 S LEN=$L(X)
"RTN","PXRMINTR",116,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",117,0)
 ;
"RTN","PXRMINTR",118,0)
 N TEMP,TEXT
"RTN","PXRMINTR",119,0)
 S TEMP=X
"RTN","PXRMINTR",120,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",121,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",122,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",123,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",124,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",125,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",126,0)
 ;bad codes.
"RTN","PXRMINTR",127,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",128,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",129,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",130,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",131,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",132,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",133,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",134,0)
 Q 1
"RTN","PXRMINTR",135,0)
 ;
"RTN","PXRMINTR",136,0)
 ;=======================================================
"RTN","PXRMINTR",137,0)
VLAB(X) ;Check for valid lab findings. Everything but a panel is ok.
"RTN","PXRMINTR",138,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",139,0)
 N DATANAME,LAB0,LABTEST,SUB,TEST,TEXT
"RTN","PXRMINTR",140,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",141,0)
 ;DBIA #91-A
"RTN","PXRMINTR",142,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",143,0)
 S SUB=$P(LAB0,U,4)
"RTN","PXRMINTR",144,0)
 ;BB and WK not allowed
"RTN","PXRMINTR",145,0)
 I (SUB="BB")!(SUB="WK") D  Q 0
"RTN","PXRMINTR",146,0)
 . S TEXT=SUB_" tests cannot be used as reminder findings."
"RTN","PXRMINTR",147,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",148,0)
 ;The concept of lab panel only applies to CH tests.
"RTN","PXRMINTR",149,0)
 I SUB'["CH" Q 1
"RTN","PXRMINTR",150,0)
 S DATANAME=$P(LAB0,U,5)
"RTN","PXRMINTR",151,0)
 ;If DATA NAME is null then it is a panel.
"RTN","PXRMINTR",152,0)
 I DATANAME="" D  Q 0
"RTN","PXRMINTR",153,0)
 . S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, it cannot be used as a reminder finding!"
"RTN","PXRMINTR",154,0)
 . S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",155,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",156,0)
 Q 1
"RTN","PXRMINTR",157,0)
 ;
"RTN","PXRMINTR",158,0)
 ;=======================================================
"RTN","PXRMINTR",159,0)
VNAME(NAME) ;Check for a valid .01 value. The names of national reminder
"RTN","PXRMINTR",160,0)
 ;components start with "VA-" and normal users are not allowed to
"RTN","PXRMINTR",161,0)
 ;create them.
"RTN","PXRMINTR",162,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",163,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",164,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",165,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",166,0)
 N AUTH,STEXT,TEXT,VALID
"RTN","PXRMINTR",167,0)
 S NAME=$$UP^XLFSTR(NAME)
"RTN","PXRMINTR",168,0)
 S VALID=1
"RTN","PXRMINTR",169,0)
 I NAME["~" D
"RTN","PXRMINTR",170,0)
 . S TEXT="Name cannot contain the ""~"" character."
"RTN","PXRMINTR",171,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",172,0)
 . H 2
"RTN","PXRMINTR",173,0)
 . S VALID=0
"RTN","PXRMINTR",174,0)
 S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",175,0)
 I (STEXT="VA-") D
"RTN","PXRMINTR",176,0)
 . S AUTH=($G(PXRMINST)=1)&(DUZ(0)="@")
"RTN","PXRMINTR",177,0)
 . I 'AUTH D
"RTN","PXRMINTR",178,0)
 .. S TEXT="Name cannot start with ""VA-"", reserved for national reminder components!"
"RTN","PXRMINTR",179,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",180,0)
 .. H 2
"RTN","PXRMINTR",181,0)
 .. S VALID=0
"RTN","PXRMINTR",182,0)
 Q VALID
"RTN","PXRMINTR",183,0)
 ;
"RTN","PXRMINTR",184,0)
 ;=======================================================
"RTN","PXRMINTR",185,0)
VPRIOL(X) ;Check for a valid Priority List.
"RTN","PXRMINTR",186,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",187,0)
 I $L(X)=0 Q 1
"RTN","PXRMINTR",188,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",189,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",190,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",191,0)
 N IND,CHAR,TEXT,VALID
"RTN","PXRMINTR",192,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",193,0)
 S VALID=1
"RTN","PXRMINTR",194,0)
 F IND=1:1:$L(X) D
"RTN","PXRMINTR",195,0)
 . S CHAR=$E(X,IND)
"RTN","PXRMINTR",196,0)
 . I CHAR?0.1"A"0.1"C"0.1"U" Q
"RTN","PXRMINTR",197,0)
 . S VALID=0
"RTN","PXRMINTR",198,0)
 . S TEXT=CHAR_" is not valid for the Priority List"
"RTN","PXRMINTR",199,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",200,0)
 Q VALID
"RTN","PXRMINTR",201,0)
 ;
"RTN","PXRMINTR",202,0)
 ;=======================================================
"RTN","PXRMINTR",203,0)
VSPONSOR(X) ;Make sure file Class and Sponsor Class match.
"RTN","PXRMINTR",204,0)
 ;If there is no sponsor don't do the check.
"RTN","PXRMINTR",205,0)
 I X="" Q 1
"RTN","PXRMINTR",206,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",207,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",208,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",209,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",210,0)
 N FCLASS,FILENUM,SCLASS,TEXT,VALID
"RTN","PXRMINTR",211,0)
 S VALID=1
"RTN","PXRMINTR",212,0)
 I $G(X)="" Q VALID
"RTN","PXRMINTR",213,0)
 I $G(DIC)="" Q 0
"RTN","PXRMINTR",214,0)
 S FILENUM=+$P(@(DIC_"0)"),U,2)
"RTN","PXRMINTR",215,0)
 S FCLASS=$P(@(DIC_DA_",100)"),U,1)
"RTN","PXRMINTR",216,0)
 S SCLASS=$P(^PXRMD(811.6,X,100),U,1)
"RTN","PXRMINTR",217,0)
 I SCLASS'=FCLASS D
"RTN","PXRMINTR",218,0)
 . S FCLASS=$$EXTERNAL^DILFD(FILENUM,100,"",FCLASS)
"RTN","PXRMINTR",219,0)
 . S SCLASS=$$EXTERNAL^DILFD(811.6,100,"",SCLASS)
"RTN","PXRMINTR",220,0)
 . S TEXT="Sponsor Class is "_SCLASS_", File Class is "_FCLASS_" they must match!"
"RTN","PXRMINTR",221,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",222,0)
 . S VALID=0
"RTN","PXRMINTR",223,0)
 Q VALID
"RTN","PXRMINTR",224,0)
 ;
"RTN","PXRMINTR",225,0)
 ;=======================================================
"RTN","PXRMINTR",226,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",227,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",228,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",229,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",230,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",231,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",232,0)
 Q 1
"RTN","PXRMINTR",233,0)
 ;
"RTN","PXRMINTR",234,0)
 ;=======================================================
"RTN","PXRMINTR",235,0)
VUSAGE(X) ;Check X to see if it contains valid USAGE codes.
"RTN","PXRMINTR",236,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",237,0)
 ;USAGE field is 10 characters. The valid codes are:
"RTN","PXRMINTR",238,0)
 ;   C - CPRS
"RTN","PXRMINTR",239,0)
 ;   L - Reminder Patient List
"RTN","PXRMINTR",240,0)
 ;   O - Reminder Order Checks
"RTN","PXRMINTR",241,0)
 ;   P - Patient
"RTN","PXRMINTR",242,0)
 ;   R - Reports
"RTN","PXRMINTR",243,0)
 ;   X - Extracts
"RTN","PXRMINTR",244,0)
 ;   * - Wildcard matches anything, except P.
"RTN","PXRMINTR",245,0)
 N LEN
"RTN","PXRMINTR",246,0)
 S LEN=$L(X)
"RTN","PXRMINTR",247,0)
 I (LEN>10)!(LEN<1) Q 0
"RTN","PXRMINTR",248,0)
 ;
"RTN","PXRMINTR",249,0)
 N TEMP,TEXT
"RTN","PXRMINTR",250,0)
 S TEMP=$$UP^XLFSTR(X)
"RTN","PXRMINTR",251,0)
 S TEMP=$TR(TEMP,"C","")
"RTN","PXRMINTR",252,0)
 S TEMP=$TR(TEMP,"L","")
"RTN","PXRMINTR",253,0)
 S TEMP=$TR(TEMP,"O","")
"RTN","PXRMINTR",254,0)
 S TEMP=$TR(TEMP,"P","")
"RTN","PXRMINTR",255,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",256,0)
 S TEMP=$TR(TEMP,"X","")
"RTN","PXRMINTR",257,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",258,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",259,0)
 ;bad codes.
"RTN","PXRMINTR",260,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",261,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",262,0)
 . S TEXT=TEMP_" is not a valid USAGE code!"
"RTN","PXRMINTR",263,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",264,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",265,0)
 . S TEXT=TEMP_" are not valid USAGE codes!"
"RTN","PXRMINTR",266,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",267,0)
 Q 1
"RTN","PXRMINTR",268,0)
 ;
"RTN","PXRMLCR")
0^125^B39948429
"RTN","PXRMLCR",1,0)
PXRMLCR ; SLC/PJH - Create Patient List from individual finding rule; 04/15/2014
"RTN","PXRMLCR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMLCR",3,0)
 ; 
"RTN","PXRMLCR",4,0)
 ; Called from PXRM PATIENT LIST CREATE protocol
"RTN","PXRMLCR",5,0)
 ;
"RTN","PXRMLCR",6,0)
START N BEG,DUOUT,DTOUT,END,LIT,PXRMDPAT,PXRMLIST,PXRMNODE,PXRMRULE,PXRMTPAT
"RTN","PXRMLCR",7,0)
 ;Check if evaluation is disabled.
"RTN","PXRMLCR",8,0)
 I $D(^XTMP("PXRM_DISEV",0)) D  Q
"RTN","PXRMLCR",9,0)
 . W !,"Reminder evaluation is disabled, cannot start patient list building."
"RTN","PXRMLCR",10,0)
 . H 2
"RTN","PXRMLCR",11,0)
 ;
"RTN","PXRMLCR",12,0)
 N TEXT
"RTN","PXRMLCR",13,0)
 ;Initialise
"RTN","PXRMLCR",14,0)
 K ^TMP("PXRMLCR",$J)
"RTN","PXRMLCR",15,0)
 ;Node for ^TMP lists created in PXRMRULE
"RTN","PXRMLCR",16,0)
 S PXRMNODE="PXRMRULE",LIT="Patient List"
"RTN","PXRMLCR",17,0)
 ;Reset screen mode
"RTN","PXRMLCR",18,0)
 W IORESET
"RTN","PXRMLCR",19,0)
 ;Set prompt text
"RTN","PXRMLCR",20,0)
 S TEXT="Select PATIENT LIST name: "
"RTN","PXRMLCR",21,0)
 ;Select Patient List
"RTN","PXRMLCR",22,0)
LIST D PLIST(.PXRMLIST,TEXT,"") I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","PXRMLCR",23,0)
 . I $G(PXRMLIST)="" Q
"RTN","PXRMLCR",24,0)
 . I $P($G(^PXRMXP(810.5,PXRMLIST,0)),U,4)'="" Q
"RTN","PXRMLCR",25,0)
 . N DIK
"RTN","PXRMLCR",26,0)
 . S DA=PXRMLIST,DIK="^PXRMXP(810.5," D ^DIK
"RTN","PXRMLCR",27,0)
 ;
"RTN","PXRMLCR",28,0)
SECURE ;option to secure the list
"RTN","PXRMLCR",29,0)
 K PATCREAT
"RTN","PXRMLCR",30,0)
 I $D(PATCREAT)=0 S PATCREAT="N" D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2) Q:$D(DTOUT)  G:$D(DUOUT) START
"RTN","PXRMLCR",31,0)
 ;
"RTN","PXRMLCR",32,0)
PURGE ;Option to purge the list
"RTN","PXRMLCR",33,0)
 K PLISTPUG
"RTN","PXRMLCR",34,0)
 S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5) Q:$D(DTOUT)  G:$D(DUOUT) SECURE
"RTN","PXRMLCR",35,0)
 ;Select rule set.
"RTN","PXRMLCR",36,0)
RULE D LRULE(.PXRMRULE) Q:$D(DTOUT)  G:$D(DUOUT) LIST
"RTN","PXRMLCR",37,0)
 ;Select Date Range
"RTN","PXRMLCR",38,0)
DATE D DATES^PXRMEUT(.BEG,.END,LIT) Q:$D(DTOUT)  G:$D(DUOUT) RULE
"RTN","PXRMLCR",39,0)
 ;
"RTN","PXRMLCR",40,0)
 ;Ask whether to include deceased and test patients.
"RTN","PXRMLCR",41,0)
DPAT S PXRMDPAT=$$ASKYN^PXRMEUT("N","Include deceased patients on the list")
"RTN","PXRMLCR",42,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DATE
"RTN","PXRMLCR",43,0)
TPAT S PXRMTPAT=$$ASKYN^PXRMEUT("N","Include test patients on the list")
"RTN","PXRMLCR",44,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DPAT
"RTN","PXRMLCR",45,0)
 I $G(PXRMDEBG) D RUN^PXRMLCR(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,PXRMDPAT,PXRMTPAT) Q
"RTN","PXRMLCR",46,0)
 ;Build patient list in background
"RTN","PXRMLCR",47,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PXRMLCR",48,0)
 S ZTDESC="Build Reminder Patient List"
"RTN","PXRMLCR",49,0)
 S ZTRTN="RUN^PXRMLCR(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,PXRMDPAT,PXRMTPAT)"
"RTN","PXRMLCR",50,0)
 S ZTSAVE("BEG")=""
"RTN","PXRMLCR",51,0)
 S ZTSAVE("END")=""
"RTN","PXRMLCR",52,0)
 S ZTSAVE("PATCREAT")=""
"RTN","PXRMLCR",53,0)
 S ZTSAVE("PXRMDPAT")=""
"RTN","PXRMLCR",54,0)
 S ZTSAVE("PXRMLIST")=""
"RTN","PXRMLCR",55,0)
 S ZTSAVE("PXRMNODE")=""
"RTN","PXRMLCR",56,0)
 S ZTSAVE("PXRMRULE")=""
"RTN","PXRMLCR",57,0)
 S ZTSAVE("PXRMTPAT")=""
"RTN","PXRMLCR",58,0)
 S ZTSAVE("PLISTPUG")=""
"RTN","PXRMLCR",59,0)
 S ZTIO=""
"RTN","PXRMLCR",60,0)
 ;
"RTN","PXRMLCR",61,0)
 ;Select and verify start date/time for task
"RTN","PXRMLCR",62,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,STIME,X,Y
"RTN","PXRMLCR",63,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMLCR",64,0)
 W !,"Queue the "_ZTDESC_" for "_$P($G(^PXRMXP(810.5,PXRMLIST,0)),U)_": "
"RTN","PXRMLCR",65,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMLCR",66,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMLCR",67,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMLCR",68,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMLCR",69,0)
 D ^DIR
"RTN","PXRMLCR",70,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",71,0)
 S SDTIME=Y
"RTN","PXRMLCR",72,0)
 ;
"RTN","PXRMLCR",73,0)
 ;Put the task into the queue.
"RTN","PXRMLCR",74,0)
 S ZTDTH=SDTIME
"RTN","PXRMLCR",75,0)
 D ^%ZTLOAD
"RTN","PXRMLCR",76,0)
 W !,"Task number ",ZTSK," queued." H 2
"RTN","PXRMLCR",77,0)
EXIT Q
"RTN","PXRMLCR",78,0)
 ;
"RTN","PXRMLCR",79,0)
HELP(CALL) ;General help text routine
"RTN","PXRMLCR",80,0)
 N HTEXT
"RTN","PXRMLCR",81,0)
 I CALL=1 D
"RTN","PXRMLCR",82,0)
 .S HTEXT(1)="Enter 'Y' to overwrite this existing list. Enter 'N' to"
"RTN","PXRMLCR",83,0)
 .S HTEXT(2)="use a different patient list name."
"RTN","PXRMLCR",84,0)
 ;
"RTN","PXRMLCR",85,0)
 I CALL=2 D
"RTN","PXRMLCR",86,0)
 .S HTEXT(1)="Enter 'Y' to make the list private or 'N' to make it public."
"RTN","PXRMLCR",87,0)
 .S HTEXT(2)="You can give other users access to your private lists in the Patient List Menu screens."
"RTN","PXRMLCR",88,0)
 ;
"RTN","PXRMLCR",89,0)
 I CALL=3 D
"RTN","PXRMLCR",90,0)
 .S HTEXT(1)="Enter Y to save the patient to a Reminder Patient List. Enter N to not save the output."
"RTN","PXRMLCR",91,0)
 ;
"RTN","PXRMLCR",92,0)
 I CALL=4 D
"RTN","PXRMLCR",93,0)
 .S HTEXT(1)="Enter Y to turn on debug output."
"RTN","PXRMLCR",94,0)
 .S HTEXT(2)="The debug output will send a series of MailMan messages to the requestor of the report"
"RTN","PXRMLCR",95,0)
 .S HTEXT(3)="-**WARNING**- the reminder report will take longer to run if you turn on this option!"
"RTN","PXRMLCR",96,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMLCR",97,0)
 Q
"RTN","PXRMLCR",98,0)
 ;
"RTN","PXRMLCR",99,0)
PLIST(LIST,TEXT,IENO) ;Select Patient List
"RTN","PXRMLCR",100,0)
 N X,Y,DIC,DLAYGO
"RTN","PXRMLCR",101,0)
PL1 S DIC=810.5,DLAYGO=DIC,DIC(0)="QAEMZL"
"RTN","PXRMLCR",102,0)
 S DIC("A")=TEXT
"RTN","PXRMLCR",103,0)
 S DIC("S")="I $P($G(^(100)),U)'=""N"""
"RTN","PXRMLCR",104,0)
 ;If this is a new entry save the creator, make the TYPE public and
"RTN","PXRMLCR",105,0)
 ;CLASS local.
"RTN","PXRMLCR",106,0)
 S DIC("DR")=".07///`"_DUZ_";.08///PUB;100///L"
"RTN","PXRMLCR",107,0)
 W !
"RTN","PXRMLCR",108,0)
 D ^DIC
"RTN","PXRMLCR",109,0)
 I X="" W !,"A patient list name must be entered" G PL1
"RTN","PXRMLCR",110,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLCR",111,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLCR",112,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",113,0)
 ;
"RTN","PXRMLCR",114,0)
 ;I copy mode dissallow copy to same list
"RTN","PXRMLCR",115,0)
 I IENO=$P(Y,U) W !,"A patient list cannot be copied to itself." G PL1
"RTN","PXRMLCR",116,0)
 ;
"RTN","PXRMLCR",117,0)
 I ($P(Y,U,3)=1) S LIST=$P(Y,U) Q
"RTN","PXRMLCR",118,0)
 ;Check if OK to overwrite
"RTN","PXRMLCR",119,0)
 N OWRITE
"RTN","PXRMLCR",120,0)
 S OWRITE=$$ASKYN^PXRMEUT("N","Okay to overwrite "_$P(Y,U,2),"PXRMLCR",1)
"RTN","PXRMLCR",121,0)
 Q:$D(DTOUT)  G:$D(DUOUT)!('OWRITE) PL1
"RTN","PXRMLCR",122,0)
 S OWRITE=$$LDELOK^PXRMEUT($P(Y,U,1))
"RTN","PXRMLCR",123,0)
 I 'OWRITE D  G PL1
"RTN","PXRMLCR",124,0)
 . W !,"In order to overwrite a list you must be the creator or a Reminder Manager!"
"RTN","PXRMLCR",125,0)
 ;Return list ien
"RTN","PXRMLCR",126,0)
 S LIST=$P(Y,U)
"RTN","PXRMLCR",127,0)
 Q
"RTN","PXRMLCR",128,0)
 ;
"RTN","PXRMLCR",129,0)
LRULE(RULE) ;Select List Rule
"RTN","PXRMLCR",130,0)
 N X,Y,DIC
"RTN","PXRMLCR",131,0)
LR1 S DIC=810.4,DIC(0)="QAEMZ"
"RTN","PXRMLCR",132,0)
 S DIC("A")="Select LIST RULE SET: "
"RTN","PXRMLCR",133,0)
 ;Only allow rule sets with components
"RTN","PXRMLCR",134,0)
 S DIC("S")="I $P(^(0),U,3)=3"
"RTN","PXRMLCR",135,0)
 W !
"RTN","PXRMLCR",136,0)
 D ^DIC
"RTN","PXRMLCR",137,0)
 I X="" W !,"A list rule set name must be entered" G LR1
"RTN","PXRMLCR",138,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLCR",139,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLCR",140,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLCR",141,0)
 ;Return rule ien
"RTN","PXRMLCR",142,0)
 S RULE=$P(Y,U)
"RTN","PXRMLCR",143,0)
 ;Check that rule set is valid
"RTN","PXRMLCR",144,0)
 N ERROR,LR,LRTYPE,NL,OP,SEQ,SUB,TEMP,TEXT
"RTN","PXRMLCR",145,0)
 S SUB=$O(^PXRM(810.4,RULE,30,0))
"RTN","PXRMLCR",146,0)
 I SUB="" W !,"Rule set has no component rules" G LR1
"RTN","PXRMLCR",147,0)
 S (ERROR,SUB)=0,NL=1
"RTN","PXRMLCR",148,0)
 F  S SUB=$O(^PXRM(810.4,RULE,30,SUB)) Q:'SUB  D  Q:ERROR
"RTN","PXRMLCR",149,0)
 .S TEMP=$G(^PXRM(810.4,RULE,30,SUB,0))
"RTN","PXRMLCR",150,0)
 .S SEQ=$P(TEMP,U,1),LR=$P(TEMP,U,2),OP=$P(TEMP,U,3)
"RTN","PXRMLCR",151,0)
 .I SEQ="" S NL=NL+1,TEXT(NL)=" Sequence is missing.",ERROR=1
"RTN","PXRMLCR",152,0)
 .I LR="" S NL=NL+1,TEXT(NL)=" List rule is missing.",ERROR=1
"RTN","PXRMLCR",153,0)
 .I OP="" S NL=NL+1,TEXT(NL)=" Operation is missing.",ERROR=1
"RTN","PXRMLCR",154,0)
 .;The Insert operation can only be used with finding rules.
"RTN","PXRMLCR",155,0)
 .I OP="F",LR'="" D
"RTN","PXRMLCR",156,0)
 ..S LRTYPE=$P(^PXRM(810.4,LR,0),U,3)
"RTN","PXRMLCR",157,0)
 ..I LRTYPE'=1 S NL=NL+1,TEXT(NL)=" Insert operation can only be used with finding rules.",ERROR=1
"RTN","PXRMLCR",158,0)
 I ERROR D  G LR1
"RTN","PXRMLCR",159,0)
 .S TEXT(1)="The rule set is incomplete or incorrect:"
"RTN","PXRMLCR",160,0)
 .D EN^DDIOL(.TEXT)
"RTN","PXRMLCR",161,0)
 Q
"RTN","PXRMLCR",162,0)
 ;
"RTN","PXRMLCR",163,0)
 ;Build list and clear ^TMP files
"RTN","PXRMLCR",164,0)
RUN(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,PXRMDPAT,PXRMTPAT) ;
"RTN","PXRMLCR",165,0)
 ;Process rule set and update final patient list
"RTN","PXRMLCR",166,0)
 D START^PXRMRULE(PXRMRULE,PXRMLIST,PXRMNODE,BEG,END,"","","",PXRMDPAT,PXRMTPAT,"")
"RTN","PXRMLCR",167,0)
 ;Clear ^TMP lists created for rule
"RTN","PXRMLCR",168,0)
 D CLEAR^PXRMRULE(PXRMRULE,PXRMNODE)
"RTN","PXRMLCR",169,0)
 Q
"RTN","PXRMLCR",170,0)
 ;
"RTN","PXRMLCR",171,0)
REMOVE(IEN) ;
"RTN","PXRMLCR",172,0)
 S $P(^PXRM(810.4,IEN,0),U,10)=""
"RTN","PXRMLCR",173,0)
 Q "@1"
"RTN","PXRMLCR",174,0)
 ;
"RTN","PXRMLDR")
0^18^B15240412
"RTN","PXRMLDR",1,0)
PXRMLDR ;SLC/PKR - Load Definitions and terms for evaluation. ;09/04/2012
"RTN","PXRMLDR",2,0)
 ;;2.0;CLINICAL REMINDERS;**18,26**;Feb 04, 2005;Build 404
"RTN","PXRMLDR",3,0)
 ;
"RTN","PXRMLDR",4,0)
 ;===================================
"RTN","PXRMLDR",5,0)
DEF(DEFIEN,DEFARR) ;Load those portions of the definition needed for
"RTN","PXRMLDR",6,0)
 ;evaluation.
"RTN","PXRMLDR",7,0)
 K DEFARR
"RTN","PXRMLDR",8,0)
 S DEFARR("IEN")=DEFIEN
"RTN","PXRMLDR",9,0)
 I '$D(^PXD(811.9,DEFIEN)) S DEFARR("DNE")="" Q
"RTN","PXRMLDR",10,0)
 N FTYPE,IND,JND,STL
"RTN","PXRMLDR",11,0)
 S STL=0
"RTN","PXRMLDR",12,0)
 S DEFARR(0)=^PXD(811.9,DEFIEN,0)
"RTN","PXRMLDR",13,0)
 ;Baseline
"RTN","PXRMLDR",14,0)
 S IND=0
"RTN","PXRMLDR",15,0)
 F  S IND=+$O(^PXD(811.9,DEFIEN,7,IND)) Q:IND=0  D
"RTN","PXRMLDR",16,0)
 . S DEFARR(7,IND,0)=^PXD(811.9,DEFIEN,7,IND,0)
"RTN","PXRMLDR",17,0)
 . S DEFARR(7,IND,3)=^PXD(811.9,DEFIEN,7,IND,3)
"RTN","PXRMLDR",18,0)
 ;Load the findings multiple.
"RTN","PXRMLDR",19,0)
 S IND=0
"RTN","PXRMLDR",20,0)
 F  S IND=+$O(^PXD(811.9,DEFIEN,20,IND)) Q:IND=0  D
"RTN","PXRMLDR",21,0)
 . S DEFARR(20,IND,0)=^PXD(811.9,DEFIEN,20,IND,0)
"RTN","PXRMLDR",22,0)
 . S DEFARR(20,IND,3)=$G(^PXD(811.9,DEFIEN,20,IND,3))
"RTN","PXRMLDR",23,0)
 . S DEFARR(20,IND,6)=$G(^PXD(811.9,DEFIEN,20,IND,6))
"RTN","PXRMLDR",24,0)
 . S DEFARR(20,IND,10)=$G(^PXD(811.9,DEFIEN,20,IND,10))
"RTN","PXRMLDR",25,0)
 . S DEFARR(20,IND,11)=$G(^PXD(811.9,DEFIEN,20,IND,11))
"RTN","PXRMLDR",26,0)
 . S DEFARR(20,IND,15)=$G(^PXD(811.9,DEFIEN,20,IND,15))
"RTN","PXRMLDR",27,0)
 . S JND=0
"RTN","PXRMLDR",28,0)
 . F  S JND=+$O(^PXD(811.9,DEFIEN,20,IND,5,JND)) Q:JND=0  D
"RTN","PXRMLDR",29,0)
 .. S DEFARR(20,IND,5,JND)=^PXD(811.9,DEFIEN,20,IND,5,JND,0)
"RTN","PXRMLDR",30,0)
 M DEFARR("E")=^PXD(811.9,DEFIEN,20,"E")
"RTN","PXRMLDR",31,0)
 M DEFARR("EDEP")=^PXD(811.9,DEFIEN,20,"EDEP")
"RTN","PXRMLDR",32,0)
 ;Load the function findings.
"RTN","PXRMLDR",33,0)
 S IND=0
"RTN","PXRMLDR",34,0)
 F  S IND=+$O(^PXD(811.9,DEFIEN,25,IND)) Q:IND=0  D
"RTN","PXRMLDR",35,0)
 . M DEFARR(25,"FF"_IND)=^PXD(811.9,DEFIEN,25,IND)
"RTN","PXRMLDR",36,0)
 ;Load the logic fields.
"RTN","PXRMLDR",37,0)
 S DEFARR(31)=$G(^PXD(811.9,DEFIEN,31))
"RTN","PXRMLDR",38,0)
 S DEFARR(32)=$G(^PXD(811.9,DEFIEN,32))
"RTN","PXRMLDR",39,0)
 S DEFARR(35)=$G(^PXD(811.9,DEFIEN,35))
"RTN","PXRMLDR",40,0)
 S DEFARR(36)=$G(^PXD(811.9,DEFIEN,36))
"RTN","PXRMLDR",41,0)
 S DEFARR(40)=$G(^PXD(811.9,DEFIEN,40))
"RTN","PXRMLDR",42,0)
 S DEFARR(42)=$G(^PXD(811.9,DEFIEN,42))
"RTN","PXRMLDR",43,0)
 ;Load the custom date due fields.
"RTN","PXRMLDR",44,0)
 S DEFARR(45)=$G(^PXD(811.9,DEFIEN,45))
"RTN","PXRMLDR",45,0)
 I $L(DEFARR(45))>0 D
"RTN","PXRMLDR",46,0)
 . M DEFARR(46)=^PXD(811.9,DEFIEN,46)
"RTN","PXRMLDR",47,0)
 . M DEFARR(47)=^PXD(811.9,DEFIEN,47)
"RTN","PXRMLDR",48,0)
 . K DEFARR(47,0),DEFARR(47,"B")
"RTN","PXRMLDR",49,0)
 ;Load the logic found/not found text fields.
"RTN","PXRMLDR",50,0)
 S DEFARR(62)=$G(^PXD(811.9,DEFIEN,62))
"RTN","PXRMLDR",51,0)
 S DEFARR(67)=$G(^PXD(811.9,DEFIEN,67))
"RTN","PXRMLDR",52,0)
 S DEFARR(72)=$G(^PXD(811.9,DEFIEN,72))
"RTN","PXRMLDR",53,0)
 S DEFARR(77)=$G(^PXD(811.9,DEFIEN,77))
"RTN","PXRMLDR",54,0)
 ;Check for finding list strings too long.
"RTN","PXRMLDR",55,0)
 I DEFARR(32)=-1 S STL=1,FTYPE="cohort"
"RTN","PXRMLDR",56,0)
 I DEFARR(36)=-1 S STL=1,FTYPE="resolution"
"RTN","PXRMLDR",57,0)
 I DEFARR(40)=-1 S STL=1,FTYPE="age"
"RTN","PXRMLDR",58,0)
 I DEFARR(42)=-1 S STL=1,FTYPE="information"
"RTN","PXRMLDR",59,0)
 I STL S $P(DEFARR(0),U,6,7)=1_U_$$NOW^XLFDT D ERRMSG^PXRMLOGX(FTYPE)
"RTN","PXRMLDR",60,0)
 Q
"RTN","PXRMLDR",61,0)
 ;
"RTN","PXRMLDR",62,0)
 ;===================================
"RTN","PXRMLDR",63,0)
EDITFM0(FINDING,FIELD,VALUE,FARR) ;For finding number FINDING set the
"RTN","PXRMLDR",64,0)
 ;field named field to the value VALUE in FARR.
"RTN","PXRMLDR",65,0)
 N NTP,PIECE
"RTN","PXRMLDR",66,0)
 S NTP("MINIMUM AGE")=2,NTP("MAXIMUM AGE")=3,NTP("REMINDER FREQUENCY")=4
"RTN","PXRMLDR",67,0)
 S NTP("RANK FREQUENCY")=5,NTP("USE IN RESOLUTION LOGIC")=6
"RTN","PXRMLDR",68,0)
 S NTP("USE IN PATIENT COHORT LOGIC")=7,NTP("BEGINNING DATE/TIME")=8
"RTN","PXRMLDR",69,0)
 S NTP("USE INACTIVE PROBLEMS")=9,NTP("WITHIN CATEGORY RANK")=10
"RTN","PXRMLDR",70,0)
 S NTP("ENDING DATE/TIME")=11,NTP("MH SCALE")=12
"RTN","PXRMLDR",71,0)
 S NTP("RX TYPE")=13,NTP("OCCURRENCE COUNT")=14
"RTN","PXRMLDR",72,0)
 S PIECE=NTP(FIELD)
"RTN","PXRMLDR",73,0)
 S $P(FARR(20,FINDING,0),U,PIECE)=VALUE
"RTN","PXRMLDR",74,0)
 Q
"RTN","PXRMLDR",75,0)
 ;
"RTN","PXRMLDR",76,0)
 ;===================================
"RTN","PXRMLDR",77,0)
TAX(TAXIEN,TAXARR) ;Load a taxonomy into TAXARR for evaluation.
"RTN","PXRMLDR",78,0)
 S TAXARR("IEN")=TAXIEN
"RTN","PXRMLDR",79,0)
 M TAXARR("AE")=^PXD(811.2,TAXIEN,20,"AE")
"RTN","PXRMLDR",80,0)
 M TAXARR("APDS")=^PXD(811.2,TAXIEN,"APDS")
"RTN","PXRMLDR",81,0)
 S TAXARR(0)=^PXD(811.2,TAXIEN,0)
"RTN","PXRMLDR",82,0)
 S TAXARR(15)=$G(^PXD(811.2,TAXIEN,15))
"RTN","PXRMLDR",83,0)
 Q
"RTN","PXRMLDR",84,0)
 ;
"RTN","PXRMLDR",85,0)
 ;===================================
"RTN","PXRMLDR",86,0)
TERM(TERMIEN,TERMARR) ;Load those portions of the term needed for
"RTN","PXRMLDR",87,0)
 ;evaluation.
"RTN","PXRMLDR",88,0)
 I '$D(^PXRMD(811.5,TERMIEN)) Q
"RTN","PXRMLDR",89,0)
 K TERMARR
"RTN","PXRMLDR",90,0)
 N IND,JND
"RTN","PXRMLDR",91,0)
 S TERMARR(0)=^PXRMD(811.5,TERMIEN,0)
"RTN","PXRMLDR",92,0)
 ;Load the findings multiple.
"RTN","PXRMLDR",93,0)
 S IND=0
"RTN","PXRMLDR",94,0)
 F  S IND=+$O(^PXRMD(811.5,TERMIEN,20,IND)) Q:IND=0  D
"RTN","PXRMLDR",95,0)
 . S TERMARR(20,IND,0)=^PXRMD(811.5,TERMIEN,20,IND,0)
"RTN","PXRMLDR",96,0)
 . S TERMARR(20,IND,3)=$G(^PXRMD(811.5,TERMIEN,20,IND,3))
"RTN","PXRMLDR",97,0)
 . S TERMARR(20,IND,10)=$G(^PXRMD(811.5,TERMIEN,20,IND,10))
"RTN","PXRMLDR",98,0)
 . S TERMARR(20,IND,11)=$G(^PXRMD(811.5,TERMIEN,20,IND,11))
"RTN","PXRMLDR",99,0)
 . S TERMARR(20,IND,15)=$G(^PXRMD(811.5,TERMIEN,20,IND,15))
"RTN","PXRMLDR",100,0)
 . S JND=0
"RTN","PXRMLDR",101,0)
 . F  S JND=+$O(^PXRMD(811.5,TERMIEN,20,IND,5,JND)) Q:JND=0  D
"RTN","PXRMLDR",102,0)
 .. S TERMARR(20,IND,5,JND)=^PXRMD(811.5,TERMIEN,20,IND,5,JND,0)
"RTN","PXRMLDR",103,0)
 M TERMARR("E")=^PXRMD(811.5,TERMIEN,20,"E")
"RTN","PXRMLDR",104,0)
 S TERMARR("IEN")=TERMIEN
"RTN","PXRMLDR",105,0)
 Q
"RTN","PXRMLDR",106,0)
 ;
"RTN","PXRMLEX")
0^107^B35438125
"RTN","PXRMLEX",1,0)
PXRMLEX ;SLC/PKR - Routines for working with Lexicon. ;05/07/2014
"RTN","PXRMLEX",2,0)
 ;;2.0;CLINICAL REMINDERS;**17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMLEX",3,0)
 ;
"RTN","PXRMLEX",4,0)
 ;==========================================
"RTN","PXRMLEX",5,0)
CODESYSL(CODESYSL) ;Return the list of Lexicon coding systems supported
"RTN","PXRMLEX",6,0)
 ;by Clinical Reminders.
"RTN","PXRMLEX",7,0)
 S CODESYSL("10D")="",CODESYSL("10P")=""
"RTN","PXRMLEX",8,0)
 S CODESYSL("CPC")="",CODESYSL("CPT")=""
"RTN","PXRMLEX",9,0)
 S CODESYSL("ICD")="",CODESYSL("ICP")=""
"RTN","PXRMLEX",10,0)
 S CODESYSL("SCT")=""
"RTN","PXRMLEX",11,0)
 Q
"RTN","PXRMLEX",12,0)
 ;
"RTN","PXRMLEX",13,0)
 ;==========================================
"RTN","PXRMLEX",14,0)
GETCSYS(CODE) ;Given a code return the coding system.
"RTN","PXRMLEX",15,0)
 ;Order the checking so the most commonly used coding systems
"RTN","PXRMLEX",16,0)
 ;are done first.
"RTN","PXRMLEX",17,0)
 ;
"RTN","PXRMLEX",18,0)
 ;ICD-9 CM diagnosis patterns.
"RTN","PXRMLEX",19,0)
 I CODE?3N1"."0.2N Q "ICD"
"RTN","PXRMLEX",20,0)
 I CODE?1"E"3N1"."0.2N Q "ICD"
"RTN","PXRMLEX",21,0)
 I CODE?1"V"2N1"."0.2N Q "ICD"
"RTN","PXRMLEX",22,0)
 ;
"RTN","PXRMLEX",23,0)
CHK10D ;ICD-10 CM diagnosis patterns.
"RTN","PXRMLEX",24,0)
 N CN,F4C,OK
"RTN","PXRMLEX",25,0)
 S F4C=$E(CODE,1,4)
"RTN","PXRMLEX",26,0)
 S OK=(F4C?1U2N1".")!(F4C?1U1N1U1".") I 'OK G CHKCPT
"RTN","PXRMLEX",27,0)
 S CN=$E(CODE,5),OK=(CN?1N)!(CN?1U)!(CN?1"") I 'OK G CHKCPT
"RTN","PXRMLEX",28,0)
 S CN=$E(CODE,6),OK=(CN?1N)!(CN?1U)!(CN?1"") I 'OK G CHKCPT
"RTN","PXRMLEX",29,0)
 S CN=$E(CODE,7),OK=(CN?1N)!(CN?1U)!(CN?1"") I 'OK G CHKCPT
"RTN","PXRMLEX",30,0)
 S CN=$E(CODE,8),OK=(CN?1N)!(CN?1U)!(CN?1"") I 'OK G CHKCPT
"RTN","PXRMLEX",31,0)
 Q "10D"
"RTN","PXRMLEX",32,0)
 ;
"RTN","PXRMLEX",33,0)
CHKCPT ;CPT-4 Procedure pattterns.
"RTN","PXRMLEX",34,0)
 I (CODE?5N)!(CODE?4N1U) Q "CPT"
"RTN","PXRMLEX",35,0)
 ;
"RTN","PXRMLEX",36,0)
CHKCPC ;HCPS Procedure patterns.
"RTN","PXRMLEX",37,0)
 I (CODE?1U4N) Q "CPC"
"RTN","PXRMLEX",38,0)
 ;
"RTN","PXRMLEX",39,0)
CHKICP ;ICD-9 Procedure patterns.
"RTN","PXRMLEX",40,0)
 I CODE?2N1"."1.3N Q "ICP"
"RTN","PXRMLEX",41,0)
 ;
"RTN","PXRMLEX",42,0)
CHKSCT ;SNOMED CT patterns.
"RTN","PXRMLEX",43,0)
 ;Cannot start with a 0.
"RTN","PXRMLEX",44,0)
 I $E(CODE,1)=0 G CHK10P
"RTN","PXRMLEX",45,0)
 ;If a code is 7 numeric characters it can be 10P or SCT.
"RTN","PXRMLEX",46,0)
 N DATA
"RTN","PXRMLEX",47,0)
 ;DBIA #5679
"RTN","PXRMLEX",48,0)
 I (CODE?7N),(+$$HIST^LEXU(CODE,"10P",.DATA)=1) Q "10P"
"RTN","PXRMLEX",49,0)
 I (CODE?6.18N) Q "SCT"
"RTN","PXRMLEX",50,0)
 ;
"RTN","PXRMLEX",51,0)
CHK10P ;ICD-10 Procedure patterns.
"RTN","PXRMLEX",52,0)
 S CN=$E(CODE,1),OK=(CN?1N)!(CN?1U) I 'OK Q "UNK"
"RTN","PXRMLEX",53,0)
 S CN=$E(CODE,2),OK=(CN?1N)!(CN?1U)!(CN?1"Z") I 'OK Q "UNK"
"RTN","PXRMLEX",54,0)
 S CN=$E(CODE,3),OK=(CN?1N)!(CN?1U) I 'OK Q "UNK"
"RTN","PXRMLEX",55,0)
 S CN=$E(CODE,4),OK=(CN?1N)!(CN?1U)!(CN?1"Z") I 'OK Q "UNK"
"RTN","PXRMLEX",56,0)
 S CN=$E(CODE,5),OK=(CN?1N)!(CN?1U)!(CN?1"Z") I 'OK Q "UNK"
"RTN","PXRMLEX",57,0)
 S CN=$E(CODE,6),OK=(CN?1N)!(CN?1U)!(CN?1"Z") I 'OK Q "UNK"
"RTN","PXRMLEX",58,0)
 S CN=$E(CODE,7),OK=(CN?1N)!(CN?1U)!(CN?1"Z") I 'OK Q "UNK"
"RTN","PXRMLEX",59,0)
 Q "10P"
"RTN","PXRMLEX",60,0)
 ;
"RTN","PXRMLEX",61,0)
 Q "UNK"
"RTN","PXRMLEX",62,0)
 ;
"RTN","PXRMLEX",63,0)
 ;==========================================
"RTN","PXRMLEX",64,0)
LEXTEXT ;Get the codes from the Lexicon update text file.
"RTN","PXRMLEX",65,0)
 N ACTION,ACTIONS,CODE,CODEIEN,CODETYPE,CTYPE,DES,DONE
"RTN","PXRMLEX",66,0)
 N FIELD,FILE,FILENUM,GBL,HFILE,HT,IND,JND
"RTN","PXRMLEX",67,0)
 N NEW,NDES,NFIELDS,NFOUND,NL,NOUT,PATH,RETVAL
"RTN","PXRMLEX",68,0)
 N SDES,SUCCESS,TAX,TAXLIST,TEMP,TEXTIN,TEXTOUT
"RTN","PXRMLEX",69,0)
 S HFILE=$$GETEHF^PXRMEXHF("TXT")
"RTN","PXRMLEX",70,0)
 I HFILE="" Q
"RTN","PXRMLEX",71,0)
 S ACTIONS("AD")="new code is added"
"RTN","PXRMLEX",72,0)
 S ACTIONS("AG")="edits - (ie. Age_High, Age_Low, Gender)"
"RTN","PXRMLEX",73,0)
 S ACTIONS("BR")="both short and long description are revised"
"RTN","PXRMLEX",74,0)
 S ACTIONS("IA")="code has been deleted or inactivated"
"RTN","PXRMLEX",75,0)
 S ACTIONS("FR")="long description is revised"
"RTN","PXRMLEX",76,0)
 S ACTIONS("NA")="not applicable"
"RTN","PXRMLEX",77,0)
 S ACTIONS("RA")="code is reactivated"
"RTN","PXRMLEX",78,0)
 S ACTIONS("RU")="code is reactivated and revised"
"RTN","PXRMLEX",79,0)
 S ACTIONS("SR")="short description is revised"
"RTN","PXRMLEX",80,0)
 S ACTIONS("UN")="undo previous action"
"RTN","PXRMLEX",81,0)
 S HT=$C(9)
"RTN","PXRMLEX",82,0)
 S PATH=$P(HFILE,U,1)
"RTN","PXRMLEX",83,0)
 S FILE=$P(HFILE,U,2)
"RTN","PXRMLEX",84,0)
 K ^TMP($J,"HF")
"RTN","PXRMLEX",85,0)
 S GBL="^TMP($J,""HF"",1,0)"
"RTN","PXRMLEX",86,0)
 S GBL=$NA(@GBL)
"RTN","PXRMLEX",87,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILE,GBL,3)
"RTN","PXRMLEX",88,0)
 I 'SUCCESS W !,"Could not open the host file." Q
"RTN","PXRMLEX",89,0)
 ;The list of fields is on the first line.
"RTN","PXRMLEX",90,0)
 S TEMP=^TMP($J,"HF",1,0)
"RTN","PXRMLEX",91,0)
 S NFIELDS=$L(TEMP,HT)-1
"RTN","PXRMLEX",92,0)
 F IND=1:1:NFIELDS S FIELD($P(TEMP,HT,IND))=IND
"RTN","PXRMLEX",93,0)
 S CTYPE=$P(^TMP($J,"HF",2,0),HT,FIELD("CODE_SYSTEM"))
"RTN","PXRMLEX",94,0)
 S FILENUM=$S(CTYPE="CPC":81,CTYPE="CPT":81,CTYPE="ICD9":80,CTYPE="ICP9":80.1,1:"")
"RTN","PXRMLEX",95,0)
 I FILENUM="" Q
"RTN","PXRMLEX",96,0)
 W !,"Processing Lexicon text update file ",FILE,";"
"RTN","PXRMLEX",97,0)
 W !,"update for ",CTYPE," codes."
"RTN","PXRMLEX",98,0)
 S IND=1
"RTN","PXRMLEX",99,0)
 F  S IND=$O(^TMP($J,"HF",IND)) Q:IND=""  D
"RTN","PXRMLEX",100,0)
 . S TEMP=^TMP($J,"HF",IND,0)
"RTN","PXRMLEX",101,0)
 . S CODE=$P(TEMP,HT,FIELD("CODE"))
"RTN","PXRMLEX",102,0)
 . S ACTION=$P(TEMP,HT,FIELD("ACTION"))
"RTN","PXRMLEX",103,0)
 . S NEW=$S(ACTION="AD":1,ACTION="RA":1,ACTION="RU":1,1:0)
"RTN","PXRMLEX",104,0)
 . I NEW D  Q
"RTN","PXRMLEX",105,0)
 .. S TEXTIN="For "_CTYPE_" code, "_CODE_" the action is: "_ACTIONS(ACTION)_"."
"RTN","PXRMLEX",106,0)
 .. D FORMATS^PXRMTEXT(1,78,TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMLEX",107,0)
 .. W ! F NL=1:1:NOUT W !,TEXTOUT(NL)
"RTN","PXRMLEX",108,0)
 .. S SDES=$P(TEMP,HT,FIELD("SHORT_DESCRIPTION"))
"RTN","PXRMLEX",109,0)
 .. W !," Short description: ",SDES
"RTN","PXRMLEX",110,0)
 .. S NDES=1,DES(1)="Long description: "_$P(TEMP,HT,FIELD("LONG_DESCRIPTION"))
"RTN","PXRMLEX",111,0)
 ..;Get the rest of the long description.
"RTN","PXRMLEX",112,0)
 .. S DONE=0,JND=IND
"RTN","PXRMLEX",113,0)
 .. F  S JND=+$O(^TMP($J,"HF",JND)) Q:(DONE)!(JND=0)  D
"RTN","PXRMLEX",114,0)
 ... S TEMP=^TMP($J,"HF",JND,0)
"RTN","PXRMLEX",115,0)
 ... I $P(TEMP,HT,FIELD("CODE"))'=CODE S DONE=1 Q
"RTN","PXRMLEX",116,0)
 ... S NDES=NDES+1,DES(NDES)=$P(TEMP,HT,FIELD("LONG_DESCRIPTION"))
"RTN","PXRMLEX",117,0)
 .. D FORMAT^PXRMTEXT(2,78,NDES,.DES,.NOUT,.TEXTOUT)
"RTN","PXRMLEX",118,0)
 .. F NL=1:1:NOUT W !,TEXTOUT(NL)
"RTN","PXRMLEX",119,0)
 ..;JND now is at the next code so back IND up by 2 so $O of IND
"RTN","PXRMLEX",120,0)
 ..;is at the next code. If JND=0 then there were no additional lines.
"RTN","PXRMLEX",121,0)
 .. I JND>IND S IND=JND-2
"RTN","PXRMLEX",122,0)
 . I ACTION'="" D
"RTN","PXRMLEX",123,0)
 .. S RETVAL=$$CODE^PXRMVAL(CODE,FILENUM)
"RTN","PXRMLEX",124,0)
 .. I +RETVAL=0 Q
"RTN","PXRMLEX",125,0)
 .. S CODEIEN=$P(RETVAL,U,8)
"RTN","PXRMLEX",126,0)
 .. S CODETYPE=$P(RETVAL,U,7)
"RTN","PXRMLEX",127,0)
 .. D CSEARCH^PXRMTAXS(FILENUM,CODE,CODEIEN,CODETYPE,.NFOUND,.TAXLIST)
"RTN","PXRMLEX",128,0)
 .. I NFOUND=0 Q
"RTN","PXRMLEX",129,0)
 .. S TEXTIN="For "_CTYPE_" code, "_CODE_" the action is: "_ACTIONS(ACTION)_"."
"RTN","PXRMLEX",130,0)
 .. D FORMATS^PXRMTEXT(1,78,TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMLEX",131,0)
 .. W ! F NL=1:1:NOUT W !,TEXTOUT(NL)
"RTN","PXRMLEX",132,0)
 .. W !,CODETYPE," ",CODE," is used in the following taxonomies:"
"RTN","PXRMLEX",133,0)
 .. S TAX=""
"RTN","PXRMLEX",134,0)
 .. F  S TAX=$O(TAXLIST(TAX)) Q:TAX=""  W !," ",TAX
"RTN","PXRMLEX",135,0)
 K ^TMP($J,"HF")
"RTN","PXRMLEX",136,0)
 Q
"RTN","PXRMLEX",137,0)
 ;
"RTN","PXRMLEX",138,0)
 ;==========================================
"RTN","PXRMLEX",139,0)
VCODE(CODE) ;Check that a code is valid.
"RTN","PXRMLEX",140,0)
 N CODESYS,DATA,RESULT,VALID
"RTN","PXRMLEX",141,0)
 S CODESYS=$$GETCSYS^PXRMLEX(CODE)
"RTN","PXRMLEX",142,0)
 I CODESYS="UNK" Q 0
"RTN","PXRMLEX",143,0)
 ;The code fits the pattern for a supported coding system, verify that
"RTN","PXRMLEX",144,0)
 ;it is a valid code.
"RTN","PXRMLEX",145,0)
 S VALID=0
"RTN","PXRMLEX",146,0)
 ;DBIA #5679
"RTN","PXRMLEX",147,0)
 S RESULT=$$HIST^LEXU(CODE,CODESYS,.DATA)
"RTN","PXRMLEX",148,0)
 I +RESULT'=-1 Q 1
"RTN","PXRMLEX",149,0)
 I (CODESYS="CPC")!(CODESYS="CPT") D
"RTN","PXRMLEX",150,0)
 .;DBIA #1995
"RTN","PXRMLEX",151,0)
 . S RESULT=$$CPT^ICPTCOD(CODE)
"RTN","PXRMLEX",152,0)
 . I +RESULT=-1 S VALID=0 Q
"RTN","PXRMLEX",153,0)
 . I CODESYS="CPC",$P(RESULT,U,5)="H" S VALID=1 Q
"RTN","PXRMLEX",154,0)
 . I CODESYS="CPT",$P(RESULT,U,5)="C" S VALID=1 Q
"RTN","PXRMLEX",155,0)
 I VALID=1 Q VALID
"RTN","PXRMLEX",156,0)
 ;DBIA #3990
"RTN","PXRMLEX",157,0)
 I CODESYS="ICD" S RESULT=$$ICDDX^ICDCODE(CODE,DT,"",0)
"RTN","PXRMLEX",158,0)
 I CODESYS="ICP" S RESULT=$$ICDOP^ICDCODE(CODE,DT,"",0)
"RTN","PXRMLEX",159,0)
 I +RESULT'=-1 S VALID=1
"RTN","PXRMLEX",160,0)
 Q VALID
"RTN","PXRMLEX",161,0)
 ;
"RTN","PXRMLEX",162,0)
 ;==========================================
"RTN","PXRMLEX",163,0)
VCODESYS(CODESYS) ;Make sure the coding system is one taxonomies support.
"RTN","PXRMLEX",164,0)
 N CODESYSL
"RTN","PXRMLEX",165,0)
 D CODESYSL^PXRMLEX(.CODESYSL)
"RTN","PXRMLEX",166,0)
 Q $S($D(CODESYSL(CODESYS)):1,1:0)
"RTN","PXRMLEX",167,0)
 ;
"RTN","PXRMLEXL")
0^1^B240921269
"RTN","PXRMLEXL",1,0)
PXRMLEXL ;SLC/PKR - List Manager routines for Taxonomies and Lexicon. ;10/30/2013
"RTN","PXRMLEXL",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMLEXL",3,0)
 ;
"RTN","PXRMLEXL",4,0)
 ;=========================================
"RTN","PXRMLEXL",5,0)
ADDSEL(ENUM,UID) ;Add entry ENUM to the selected list and highlight it.
"RTN","PXRMLEXL",6,0)
 N CODE
"RTN","PXRMLEXL",7,0)
 S CODE=^TMP("PXRMLEXL",$J,"CODE",ENUM)
"RTN","PXRMLEXL",8,0)
 S ^TMP("PXRMLEXL",$J,"SELECTED",ENUM)=CODE_U_UID
"RTN","PXRMLEXL",9,0)
 D HLITE(ENUM,1,UID)
"RTN","PXRMLEXL",10,0)
 Q
"RTN","PXRMLEXL",11,0)
 ;
"RTN","PXRMLEXL",12,0)
 ;=========================================
"RTN","PXRMLEXL",13,0)
BLDLIST ;Build the Lexicon list.
"RTN","PXRMLEXL",14,0)
 N CODE,CODESYS,CODESYSP,DESC,ENUM,FMTSTR,IND,JND
"RTN","PXRMLEXL",15,0)
 N NCODES,NL,NLINES,NSEL,NUID,NUM,OUTPUT,START,TAXIEN,TERM,TEXT,UID
"RTN","PXRMLEXL",16,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLLL")
"RTN","PXRMLEXL",17,0)
 ;^TMP("PXRMLEXTC",$J) nodes are set in PXRMTXSM which calls this
"RTN","PXRMLEXL",18,0)
 ;List Manager selection. 
"RTN","PXRMLEXL",19,0)
 ;Clear the display.
"RTN","PXRMLEXL",20,0)
 D KILL^VALM10
"RTN","PXRMLEXL",21,0)
 K ^TMP("PXRMLEXL",$J)
"RTN","PXRMLEXL",22,0)
 S CODESYS=^TMP("PXRMLEXTC",$J,"CODESYS")
"RTN","PXRMLEXL",23,0)
 S TAXIEN=^TMP("PXRMLEXTC",$J,"TAX IEN")
"RTN","PXRMLEXL",24,0)
 S TERM=^TMP("PXRMLEXTC",$J,"LEX TERM")
"RTN","PXRMLEXL",25,0)
 ;Clear the display.
"RTN","PXRMLEXL",26,0)
 D KILL^VALM10
"RTN","PXRMLEXL",27,0)
 K ^TMP("PXRMLEXL",$J)
"RTN","PXRMLEXL",28,0)
 I '$D(^TMP("PXRMLEXS",$J,TERM,CODESYS)) D
"RTN","PXRMLEXL",29,0)
 . D LEXLIST(TAXIEN,TERM,CODESYS,.NCODES,.NLINES,.TEXT)
"RTN","PXRMLEXL",30,0)
 . M ^TMP("PXRMTEXT",$J,TERM,CODESYS,"TEXT")=TEXT
"RTN","PXRMLEXL",31,0)
 . S ^TMP("PXRMTEXT",$J,TERM,CODESYS,"NCODES")=NCODES
"RTN","PXRMLEXL",32,0)
 . S ^TMP("PXRMTEXT",$J,TERM,CODESYS,"NLINES")=NLINES
"RTN","PXRMLEXL",33,0)
 I $D(^TMP("PXRMTEXT",$J,TERM,CODESYS)) D
"RTN","PXRMLEXL",34,0)
 . S NCODES=^TMP("PXRMTEXT",$J,TERM,CODESYS,"NCODES")
"RTN","PXRMLEXL",35,0)
 . S NLINES=^TMP("PXRMTEXT",$J,TERM,CODESYS,"NLINES")
"RTN","PXRMLEXL",36,0)
 ;Get the coding system Lexicon information for building the display.
"RTN","PXRMLEXL",37,0)
 ;DBIA #5679
"RTN","PXRMLEXL",38,0)
 S CODESYSP=$$CSYS^LEXU(CODESYS)
"RTN","PXRMLEXL",39,0)
 S TEXT=^TMP("PXRMLEXTC",$J,"LEX TERM")
"RTN","PXRMLEXL",40,0)
 S TEXT=$S(($L(TEXT)'>66):TEXT,1:$E(TEXT,1,63)_"...")
"RTN","PXRMLEXL",41,0)
 S VALMHDR(1)="Term/Code: "_TEXT
"RTN","PXRMLEXL",42,0)
 S VALMHDR(2)=NCODES_" "_$P(CODESYSP,U,4)_$S(NCODES=1:" code was found",1:" codes were found")
"RTN","PXRMLEXL",43,0)
 I NCODES=1,'$$UIDOK S VALMHDR(2)=VALMHDR(2)_" It cannot be used in a dialog."
"RTN","PXRMLEXL",44,0)
 I NCODES>1,'$$UIDOK S VALMHDR(2)=VALMHDR(2)_" These cannot be used in a dialog."
"RTN","PXRMLEXL",45,0)
 ;Set these so LM shows Page 1 of 1 when there are no codes.
"RTN","PXRMLEXL",46,0)
 I NCODES=0 S VALMHDR(2)=VALMHDR(2)_".",^TMP("PXRMLEXL",$J,1,0)="",VALMCNT=1 Q
"RTN","PXRMLEXL",47,0)
 ;
"RTN","PXRMLEXL",48,0)
 ;If the display list has been saved restore it, if not build it.
"RTN","PXRMLEXL",49,0)
 I $D(^TMP("PXRMLEXS",$J,TERM,CODESYS)) D
"RTN","PXRMLEXL",50,0)
 . M ^TMP("PXRMLEXL",$J)=^TMP("PXRMLEXS",$J,TERM,CODESYS)
"RTN","PXRMLEXL",51,0)
 . S VALMCNT=^TMP("PXRMLEXS",$J,TERM,CODESYS,"VALMCNT")
"RTN","PXRMLEXL",52,0)
 I '$D(^TMP("PXRMLEXS",$J,TERM,CODESYS)) D
"RTN","PXRMLEXL",53,0)
 . S VALMCNT=0
"RTN","PXRMLEXL",54,0)
 . F IND=1:1:NLINES D
"RTN","PXRMLEXL",55,0)
 .. S NUM=$P(TEXT(IND),U,1),CODE=$P(TEXT(IND),U,2)
"RTN","PXRMLEXL",56,0)
 .. I NUM'="",CODE'="" S ENUM=NUM,^TMP("PXRMLEXL",$J,"CODE",NUM)=CODE,START=VALMCNT+1
"RTN","PXRMLEXL",57,0)
 .. D FORMAT(TEXT(IND),FMTSTR,.NL,.OUTPUT)
"RTN","PXRMLEXL",58,0)
 .. F JND=1:1:NL D
"RTN","PXRMLEXL",59,0)
 ... S VALMCNT=VALMCNT+1,^TMP("PXRMLEXL",$J,VALMCNT,0)=OUTPUT(JND)
"RTN","PXRMLEXL",60,0)
 ... S ^TMP("PXRMLEXL",$J,"IDX",VALMCNT,ENUM)=""
"RTN","PXRMLEXL",61,0)
 .. S ^TMP("PXRMLEXL",$J,"LINES",ENUM)=START_U_VALMCNT
"RTN","PXRMLEXL",62,0)
 . S ^TMP("PXRMLEXL",$J,"NCODES")=NCODES
"RTN","PXRMLEXL",63,0)
 . S ^TMP("PXRMLEXL",$J,"VALMCNT")=VALMCNT
"RTN","PXRMLEXL",64,0)
 ;If the display list has not been saved, save it.
"RTN","PXRMLEXL",65,0)
 I '$D(^TMP("PXRMLEXS",$J,TERM,CODESYS)) M ^TMP("PXRMLEXS",$J,TERM,CODESYS)=^TMP("PXRMLEXL",$J)
"RTN","PXRMLEXL",66,0)
 ;
"RTN","PXRMLEXL",67,0)
 ;Mark any entries that were previously selected.
"RTN","PXRMLEXL",68,0)
 S ENUM="",(NSEL,NUID)=0
"RTN","PXRMLEXL",69,0)
 F  S ENUM=$O(^TMP("PXRMLEXL",$J,"CODE",ENUM)) Q:ENUM=""  D
"RTN","PXRMLEXL",70,0)
 . S CODE=^TMP("PXRMLEXL",$J,"CODE",ENUM)
"RTN","PXRMLEXL",71,0)
 . I CODE'="",$D(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) D  Q
"RTN","PXRMLEXL",72,0)
 .. S NSEL=NSEL+1
"RTN","PXRMLEXL",73,0)
 .. S UID=+^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)
"RTN","PXRMLEXL",74,0)
 .. I UID S NUID=NUID+1
"RTN","PXRMLEXL",75,0)
 .. D ADDSEL(ENUM,UID)
"RTN","PXRMLEXL",76,0)
 S VALMHDR(2)=VALMHDR(2)_", "_NSEL_" are selected."
"RTN","PXRMLEXL",77,0)
 S PXRMLEXV="ALL"
"RTN","PXRMLEXL",78,0)
 I $D(PXRMBGS("ALL")) S VALMBG=PXRMBGS("ALL")
"RTN","PXRMLEXL",79,0)
 Q
"RTN","PXRMLEXL",80,0)
 ;
"RTN","PXRMLEXL",81,0)
 ;=========================================
"RTN","PXRMLEXL",82,0)
BLDSLIST ;Build the Lexicon list, selected or UID codes only.
"RTN","PXRMLEXL",83,0)
 N CODE,CODESYS,CODESYSP,DONE,FMTSTR,IND,JND,KND
"RTN","PXRMLEXL",84,0)
 N NL,NSEL,NUID,OUTPUT,START,TERM,TEXT,UID
"RTN","PXRMLEXL",85,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLLL")
"RTN","PXRMLEXL",86,0)
 ;^TMP("PXRMLEXTC",$J) nodes are set in PXRMTXSM which calls this
"RTN","PXRMLEXL",87,0)
 ;List Manager selection.
"RTN","PXRMLEXL",88,0)
 ;Clear the display.
"RTN","PXRMLEXL",89,0)
 D KILL^VALM10
"RTN","PXRMLEXL",90,0)
 K ^TMP("PXRMLEXL",$J)
"RTN","PXRMLEXL",91,0)
 S CODESYS=^TMP("PXRMLEXTC",$J,"CODESYS")
"RTN","PXRMLEXL",92,0)
 ;DBIA #5679
"RTN","PXRMLEXL",93,0)
 S CODESYSP=$$CSYS^LEXU(CODESYS)
"RTN","PXRMLEXL",94,0)
 S TERM=^TMP("PXRMLEXTC",$J,"LEX TERM")
"RTN","PXRMLEXL",95,0)
 S TEXT=^TMP("PXRMLEXTC",$J,"LEX TERM")
"RTN","PXRMLEXL",96,0)
 S TEXT=$S(($L(TEXT)'>66):TEXT,1:$E(TEXT,1,63)_"...")
"RTN","PXRMLEXL",97,0)
 ;Get the entries that were previously selected.
"RTN","PXRMLEXL",98,0)
 S NLINES=^TMP("PXRMTEXT",$J,TERM,CODESYS,"NLINES")
"RTN","PXRMLEXL",99,0)
 S (NSEL,NUID,VALMCNT)=0
"RTN","PXRMLEXL",100,0)
 F IND=1:1:NLINES D
"RTN","PXRMLEXL",101,0)
 . S TEMP=^TMP("PXRMTEXT",$J,TERM,CODESYS,"TEXT",IND)
"RTN","PXRMLEXL",102,0)
 . S CODE=$P(TEMP,U,2)
"RTN","PXRMLEXL",103,0)
 . I (CODE'=""),'$D(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) Q
"RTN","PXRMLEXL",104,0)
 .;Skip additional activation/inactivation lines for non-selected codes.
"RTN","PXRMLEXL",105,0)
 . I CODE="" Q
"RTN","PXRMLEXL",106,0)
 . I CODE'="" S UID=^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)
"RTN","PXRMLEXL",107,0)
 . I UID S NUID=NUID+1
"RTN","PXRMLEXL",108,0)
 . S NSEL=NSEL+1
"RTN","PXRMLEXL",109,0)
 . S ^TMP("PXRMLEXL",$J,"CODE",NSEL)=CODE,START=VALMCNT+1
"RTN","PXRMLEXL",110,0)
 . S TEXT=NSEL_U_CODE_U_$P(TEMP,U,3,5)
"RTN","PXRMLEXL",111,0)
 . D FORMAT(TEXT,FMTSTR,.NL,.OUTPUT)
"RTN","PXRMLEXL",112,0)
 . F JND=1:1:NL D
"RTN","PXRMLEXL",113,0)
 .. S VALMCNT=VALMCNT+1,^TMP("PXRMLEXL",$J,VALMCNT,0)=OUTPUT(JND)
"RTN","PXRMLEXL",114,0)
 .. S ^TMP("PXRMLEXL",$J,"IDX",VALMCNT,NSEL)=""
"RTN","PXRMLEXL",115,0)
 . ;S ^TMP("PXRMLEXL",$J,"LINES",NSEL)=START_U_VALMCNT
"RTN","PXRMLEXL",116,0)
 . ;D ADDSEL(NSEL,UID)
"RTN","PXRMLEXL",117,0)
 .;Check for additional activation/inactivation lines.
"RTN","PXRMLEXL",118,0)
 . S KND=IND
"RTN","PXRMLEXL",119,0)
 . S DONE=$S(IND<NLINES:0,1:1)
"RTN","PXRMLEXL",120,0)
 . F  Q:DONE  D
"RTN","PXRMLEXL",121,0)
 .. S KND=KND+1
"RTN","PXRMLEXL",122,0)
 .. S TEMP=^TMP("PXRMTEXT",$J,TERM,CODESYS,"TEXT",KND)
"RTN","PXRMLEXL",123,0)
 .. I $P(TEMP,U,2)'="" S DONE=1 Q
"RTN","PXRMLEXL",124,0)
 .. I KND=NLINES S DONE=1
"RTN","PXRMLEXL",125,0)
 .. S IND=KND
"RTN","PXRMLEXL",126,0)
 .. D FORMAT(TEMP,FMTSTR,.NL,.OUTPUT)
"RTN","PXRMLEXL",127,0)
 .. F JND=1:1:NL D
"RTN","PXRMLEXL",128,0)
 ... S VALMCNT=VALMCNT+1,^TMP("PXRMLEXL",$J,VALMCNT,0)=OUTPUT(JND)
"RTN","PXRMLEXL",129,0)
 ... S ^TMP("PXRMLEXL",$J,"IDX",VALMCNT,NSEL)=""
"RTN","PXRMLEXL",130,0)
 . S ^TMP("PXRMLEXL",$J,"LINES",NSEL)=START_U_VALMCNT
"RTN","PXRMLEXL",131,0)
 . D ADDSEL(NSEL,UID)
"RTN","PXRMLEXL",132,0)
 S ^TMP("PXRMLEXL",$J,"NCODES")=NSEL
"RTN","PXRMLEXL",133,0)
 S ^TMP("PXRMLEXL",$J,"VALMCNT")=VALMCNT
"RTN","PXRMLEXL",134,0)
 S VALMHDR(1)="Term/Code: "_TERM
"RTN","PXRMLEXL",135,0)
 S VALMHDR(2)="Selected "_$P(CODESYSP,U,4)_": "_NSEL_" selected codes, "_NUID_" UID codes."
"RTN","PXRMLEXL",136,0)
 S PXRMLEXV="SEL"
"RTN","PXRMLEXL",137,0)
 S VALMBG=$S($D(PXRMBGS("SEL")):PXRMBGS("SEL"),1:1)
"RTN","PXRMLEXL",138,0)
 Q
"RTN","PXRMLEXL",139,0)
 ;
"RTN","PXRMLEXL",140,0)
 ;=========================================
"RTN","PXRMLEXL",141,0)
CPLIST(TAXIEN,TERM,CODESYS,NCODES,NLINES,TEXT) ;Build the list for a copy from
"RTN","PXRMLEXL",142,0)
 ;a range list of codes.
"RTN","PXRMLEXL",143,0)
 N ACTDT,CODE,DATA,INACTDT,NUM,SDESC,TEMP
"RTN","PXRMLEXL",144,0)
 S CODE="",(NCODES,NLINES)=0
"RTN","PXRMLEXL",145,0)
 F  S CODE=$O(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMLEXL",146,0)
 . K DATA
"RTN","PXRMLEXL",147,0)
 .;DBIA #1997, #3991
"RTN","PXRMLEXL",148,0)
 . I CODESYS="CPC" D PERIOD^ICPTAPIU(CODE,.DATA)
"RTN","PXRMLEXL",149,0)
 . I CODESYS="CPT" D PERIOD^ICPTAPIU(CODE,.DATA)
"RTN","PXRMLEXL",150,0)
 . I CODESYS="ICD" D PERIOD^ICDAPIU(CODE,.DATA)
"RTN","PXRMLEXL",151,0)
 . I CODESYS="ICP" D PERIOD^ICDAPIU(CODE,.DATA)
"RTN","PXRMLEXL",152,0)
 . I +DATA(0)=-1 Q
"RTN","PXRMLEXL",153,0)
 . S NCODES=NCODES+1
"RTN","PXRMLEXL",154,0)
 . S (ACTDT,NUM)=0
"RTN","PXRMLEXL",155,0)
 . F  S ACTDT=$O(DATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXRMLEXL",156,0)
 .. S TEMP=DATA(ACTDT)
"RTN","PXRMLEXL",157,0)
 .. S NUM=NUM+1
"RTN","PXRMLEXL",158,0)
 .. S INACTDT=$P(TEMP,U,1)
"RTN","PXRMLEXL",159,0)
 .. S SDESC=$P(TEMP,U,2)
"RTN","PXRMLEXL",160,0)
 .. S NLINES=NLINES+1
"RTN","PXRMLEXL",161,0)
 .. I NUM=1 S TEXT(NLINES)=NCODES_U_CODE_U_ACTDT_U_INACTDT_U_SDESC
"RTN","PXRMLEXL",162,0)
 .. E  S TEXT(NLINES)=U_U_ACTDT_U_INACTDT_U_DESC
"RTN","PXRMLEXL",163,0)
 Q
"RTN","PXRMLEXL",164,0)
 ;
"RTN","PXRMLEXL",165,0)
 ;=========================================
"RTN","PXRMLEXL",166,0)
ENTRY ;Entry code
"RTN","PXRMLEXL",167,0)
 D INITMPG^PXRMLEXL
"RTN","PXRMLEXL",168,0)
 D BLDLIST^PXRMLEXL
"RTN","PXRMLEXL",169,0)
 D XQORM
"RTN","PXRMLEXL",170,0)
 Q
"RTN","PXRMLEXL",171,0)
 ;
"RTN","PXRMLEXL",172,0)
 ;=========================================
"RTN","PXRMLEXL",173,0)
EXIT ;Exit code
"RTN","PXRMLEXL",174,0)
 D INITMPG^PXRMLEXL
"RTN","PXRMLEXL",175,0)
 D FULL^VALM1
"RTN","PXRMLEXL",176,0)
 D CLEAN^VALM10
"RTN","PXRMLEXL",177,0)
 D KILL^VALM10
"RTN","PXRMLEXL",178,0)
 D CLEAR^VALM1
"RTN","PXRMLEXL",179,0)
 S VALMBCK="Q"
"RTN","PXRMLEXL",180,0)
 Q
"RTN","PXRMLEXL",181,0)
 ;
"RTN","PXRMLEXL",182,0)
 ;=========================================
"RTN","PXRMLEXL",183,0)
EXITS ;Exit and save action.
"RTN","PXRMLEXL",184,0)
 D SAVE^PXRMLEXL
"RTN","PXRMLEXL",185,0)
 S VALMBCK="Q"
"RTN","PXRMLEXL",186,0)
 Q
"RTN","PXRMLEXL",187,0)
 ;
"RTN","PXRMLEXL",188,0)
 ;=========================================
"RTN","PXRMLEXL",189,0)
FORMAT(TEXT,FMTSTR,NL,OUTPUT) ;Format  entry number, code,
"RTN","PXRMLEXL",190,0)
 ;activation date, inactivation date, short text for LM display.
"RTN","PXRMLEXL",191,0)
 N ACTDT,INACTDT
"RTN","PXRMLEXL",192,0)
 S ACTDT=$P(TEXT,U,3),INACTDT=$P(TEXT,U,4)
"RTN","PXRMLEXL",193,0)
 S ACTDT=$$FMTE^XLFDT(ACTDT,5)
"RTN","PXRMLEXL",194,0)
 S INACTDT=$$FMTE^XLFDT(INACTDT,5)
"RTN","PXRMLEXL",195,0)
 S $P(TEXT,U,3)=ACTDT,$P(TEXT,U,4)=INACTDT
"RTN","PXRMLEXL",196,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXRMLEXL",197,0)
 Q
"RTN","PXRMLEXL",198,0)
 ;
"RTN","PXRMLEXL",199,0)
 ;=========================================
"RTN","PXRMLEXL",200,0)
GETLIST(LIST) ;Let the user input a list of items.
"RTN","PXRMLEXL",201,0)
 N INUM,ITEM,LEND,LELEM,NCODES,LSTART,X,Y
"RTN","PXRMLEXL",202,0)
 S NCODES=+$G(^TMP("PXRMLEXL",$J,"NCODES"))
"RTN","PXRMLEXL",203,0)
 I NCODES=0 Q
"RTN","PXRMLEXL",204,0)
 I NCODES=1 S LIST(1)="" Q
"RTN","PXRMLEXL",205,0)
 S DIR(0)="LC^1:"_NCODES
"RTN","PXRMLEXL",206,0)
 D ^DIR
"RTN","PXRMLEXL",207,0)
 I $E(Y,1)="^" Q
"RTN","PXRMLEXL",208,0)
 ;Populate the list.
"RTN","PXRMLEXL",209,0)
 F INUM=1:1:($L(Y,",")-1) D
"RTN","PXRMLEXL",210,0)
 . S LELEM=$P(Y,",",INUM)
"RTN","PXRMLEXL",211,0)
 . I LELEM?1.N  S LIST(LELEM)=""
"RTN","PXRMLEXL",212,0)
 . S LSTART=$P(LELEM,"-",1),LEND=$P(LELEM,"-",2)
"RTN","PXRMLEXL",213,0)
 . F ITEM=LSTART:1:LEND S LIST(ITEM)=""
"RTN","PXRMLEXL",214,0)
 Q
"RTN","PXRMLEXL",215,0)
 ;
"RTN","PXRMLEXL",216,0)
 ;=========================================
"RTN","PXRMLEXL",217,0)
HDR ; Header code
"RTN","PXRMLEXL",218,0)
 S VALMHDR(1)="Select Lexicon items to include in the taxonomy."
"RTN","PXRMLEXL",219,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLEXL",220,0)
 Q
"RTN","PXRMLEXL",221,0)
 ;
"RTN","PXRMLEXL",222,0)
 ;=========================================
"RTN","PXRMLEXL",223,0)
HELP ;Display help.
"RTN","PXRMLEXL",224,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXRMLEXL",225,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXRMLEXL",226,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXRMLEXL",227,0)
 S DDS=1,DONE=0
"RTN","PXRMLEXL",228,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMLEXL",229,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXRMLEXL",230,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMLEXL",231,0)
 D BROWSE^DDBR("TEXT","NR","Lexicon Selection Help")
"RTN","PXRMLEXL",232,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",233,0)
 Q
"RTN","PXRMLEXL",234,0)
 ;
"RTN","PXRMLEXL",235,0)
 ;=========================================
"RTN","PXRMLEXL",236,0)
HLITE(ENUM,MODE,UID) ;Highlight/unhighlight an entry. MODE=1 turns on
"RTN","PXRMLEXL",237,0)
 ;highlighting, MODE=0 turns it off.
"RTN","PXRMLEXL",238,0)
 N LINE,START,STOP,VCTRL
"RTN","PXRMLEXL",239,0)
 S VCTRL=$S(MODE=1:IOINHI,1:IOINORM)
"RTN","PXRMLEXL",240,0)
 S START=$P(^TMP("PXRMLEXL",$J,"LINES",ENUM),U,1)
"RTN","PXRMLEXL",241,0)
 S STOP=$P(^TMP("PXRMLEXL",$J,"LINES",ENUM),U,2)
"RTN","PXRMLEXL",242,0)
 F LINE=START:1:STOP D CNTRL^VALM10(LINE,1,80,VCTRL,IOINORM)
"RTN","PXRMLEXL",243,0)
 ;If the entry is marked Use In Dialog turn on marker.
"RTN","PXRMLEXL",244,0)
 I MODE=1,UID=1 D FLDCTRL^VALM10(START,"CODE",IORVON,IORVOFF,"")
"RTN","PXRMLEXL",245,0)
 I MODE=0 D FLDCTRL^VALM10(START,"CODE",IORVOFF,IORVOFF,"")
"RTN","PXRMLEXL",246,0)
 Q
"RTN","PXRMLEXL",247,0)
 ;
"RTN","PXRMLEXL",248,0)
 ;=========================================
"RTN","PXRMLEXL",249,0)
HTEXT ;Lexicon selection help text.
"RTN","PXRMLEXL",250,0)
 ;;Select one of the following actions:
"RTN","PXRMLEXL",251,0)
 ;;
"RTN","PXRMLEXL",252,0)
 ;;  ADD  - adds selected codes to the taxonomy.
"RTN","PXRMLEXL",253,0)
 ;;  RFT  - removes selected codes from the taxonomy.
"RTN","PXRMLEXL",254,0)
 ;;  RFD  - removes selected codes from being used in a dialog.
"RTN","PXRMLEXL",255,0)
 ;;  UID  - adds selected codes to the taxonomy and marks them for use in a dialog.
"RTN","PXRMLEXL",256,0)
 ;;  SAVE - saves all selected codes. Even if codes have been selected, they will
"RTN","PXRMLEXL",257,0)
 ;;         not be stored until they are saved. Finally, a save must be done when
"RTN","PXRMLEXL",258,0)
 ;;         exiting the ScreenMan form or no changes will be saved.
"RTN","PXRMLEXL",259,0)
 ;;  EXIT - saves then exits.
"RTN","PXRMLEXL",260,0)
 ;;
"RTN","PXRMLEXL",261,0)
 ;;Some coding systems cannot be used in a dialog; in those cases, the RFD and UID
"RTN","PXRMLEXL",262,0)
 ;;actions cannot be selected. Actions that cannot be selected have their text
"RTN","PXRMLEXL",263,0)
 ;;description surrounded by parentheses. For example, when a coding system can be
"RTN","PXRMLEXL",264,0)
 ;;used in a dialog, the UID action will look like this:
"RTN","PXRMLEXL",265,0)
 ;; UID  Use in dialog
"RTN","PXRMLEXL",266,0)
 ;;When the coding system cannot be used in a dialog, it will look like this:
"RTN","PXRMLEXL",267,0)
 ;; UID  (Use in dialog)
"RTN","PXRMLEXL",268,0)
 ;;
"RTN","PXRMLEXL",269,0)
 ;;You can select the action first and then be prompted for a list of codes or
"RTN","PXRMLEXL",270,0)
 ;;you can input the list and then select the action. Because of the way List
"RTN","PXRMLEXL",271,0)
 ;;Manager works, you may be able to select a larger list by selecting the action
"RTN","PXRMLEXL",272,0)
 ;;first.
"RTN","PXRMLEXL",273,0)
 ;;
"RTN","PXRMLEXL",274,0)
 ;;**End Text**
"RTN","PXRMLEXL",275,0)
 Q
"RTN","PXRMLEXL",276,0)
 ;
"RTN","PXRMLEXL",277,0)
 ;=========================================
"RTN","PXRMLEXL",278,0)
IMPLIST(TAXIEN,TERM,CODESYS,NCODES,NLINES,TEXT) ;Build the list for an
"RTN","PXRMLEXL",279,0)
 ;imported set of codes.
"RTN","PXRMLEXL",280,0)
 N ACTDT,CODE,DESC,INACTDT,NUM,PDATA,RESULT
"RTN","PXRMLEXL",281,0)
 S CODE="",(NCODES,NLINES)=0
"RTN","PXRMLEXL",282,0)
 F  S CODE=$O(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMLEXL",283,0)
 . K PDATA
"RTN","PXRMLEXL",284,0)
 .;DBIA #5679
"RTN","PXRMLEXL",285,0)
 . S RESULT=$$PERIOD^LEXU(CODE,CODESYS,.PDATA)
"RTN","PXRMLEXL",286,0)
 . I +RESULT=-1 Q
"RTN","PXRMLEXL",287,0)
 . S NCODES=NCODES+1
"RTN","PXRMLEXL",288,0)
 . S (ACTDT,NUM)=0
"RTN","PXRMLEXL",289,0)
 . F  S ACTDT=$O(PDATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXRMLEXL",290,0)
 .. S INACTDT=$P(PDATA(ACTDT),U,1)
"RTN","PXRMLEXL",291,0)
 .. S DESC=PDATA(ACTDT,0)
"RTN","PXRMLEXL",292,0)
 .. S NUM=NUM+1
"RTN","PXRMLEXL",293,0)
 .. S NLINES=NLINES+1
"RTN","PXRMLEXL",294,0)
 .. I NUM=1 S TEXT(NLINES)=NCODES_U_CODE_U_ACTDT_U_INACTDT_U_DESC
"RTN","PXRMLEXL",295,0)
 .. E  S TEXT(NLINES)=U_U_ACTDT_U_INACTDT_U_DESC
"RTN","PXRMLEXL",296,0)
 Q
"RTN","PXRMLEXL",297,0)
 ;
"RTN","PXRMLEXL",298,0)
 ;=========================================
"RTN","PXRMLEXL",299,0)
INCL ;Put the selected entries on the selected list and highlight them.
"RTN","PXRMLEXL",300,0)
 N SEL,SELLIST
"RTN","PXRMLEXL",301,0)
 ;Get the list.
"RTN","PXRMLEXL",302,0)
 D GETLIST(.SELLIST)
"RTN","PXRMLEXL",303,0)
 ;If there is no list quit.
"RTN","PXRMLEXL",304,0)
 I '$D(SELLIST) Q
"RTN","PXRMLEXL",305,0)
 S SEL=""
"RTN","PXRMLEXL",306,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D ADDSEL(SEL,"")
"RTN","PXRMLEXL",307,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",308,0)
 Q
"RTN","PXRMLEXL",309,0)
 ;
"RTN","PXRMLEXL",310,0)
 ;=========================================
"RTN","PXRMLEXL",311,0)
INCX(LIST,UID) ;Put the selected entries on the selected list and highlight
"RTN","PXRMLEXL",312,0)
 ;them.
"RTN","PXRMLEXL",313,0)
 N ENUM,IND
"RTN","PXRMLEXL",314,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXRMLEXL",315,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXRMLEXL",316,0)
 . D ADDSEL(ENUM,UID)
"RTN","PXRMLEXL",317,0)
 Q
"RTN","PXRMLEXL",318,0)
 ;
"RTN","PXRMLEXL",319,0)
 ;=========================================
"RTN","PXRMLEXL",320,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXRMLEXL",321,0)
 K ^TMP("PXRMLEXL",$J)
"RTN","PXRMLEXL",322,0)
 Q
"RTN","PXRMLEXL",323,0)
 ;
"RTN","PXRMLEXL",324,0)
 ;=========================================
"RTN","PXRMLEXL",325,0)
LEXLIST(TAXIEN,TERM,CODESYS,NCODES,NLINES,TEXT) ;Call Lexicon to get the list
"RTN","PXRMLEXL",326,0)
 ;of codes.
"RTN","PXRMLEXL",327,0)
 I $E(TERM,1,9)="Copy from" D CPLIST(TAXIEN,TERM,CODESYS,.NCODES,.NLINES,.TEXT) Q
"RTN","PXRMLEXL",328,0)
 I TERM["(imported)" D IMPLIST(TAXIEN,TERM,CODESYS,.NCODES,.NLINES,.TEXT) Q
"RTN","PXRMLEXL",329,0)
 N ACTDT,CODE,CODEI,INACTDT,IND,NUM
"RTN","PXRMLEXL",330,0)
 N RESULT,SRC,SDESC,TEMP
"RTN","PXRMLEXL",331,0)
 W @IOF,"Searching Lexicon ..."
"RTN","PXRMLEXL",332,0)
 K ^TMP("LEXTAX",$J)
"RTN","PXRMLEXL",333,0)
 ;DBIA #5681
"RTN","PXRMLEXL",334,0)
 S RESULT=$$TAX^LEX10CS(TERM,CODESYS,DT,"LEXTAX",0)
"RTN","PXRMLEXL",335,0)
 S NCODES=+RESULT
"RTN","PXRMLEXL",336,0)
 I NCODES=-1 S (NCODES,NLINES)=0 K ^TMP("LEXTAX",$J) Q
"RTN","PXRMLEXL",337,0)
 S SRC=+$O(^TMP("LEXTAX",$J,0))
"RTN","PXRMLEXL",338,0)
 I CODESYS="SCT" D SCTDESC("LEXTAX")
"RTN","PXRMLEXL",339,0)
 S CODEI="",(NLINES,NUM)=0
"RTN","PXRMLEXL",340,0)
 F  S CODEI=$O(^TMP("LEXTAX",$J,SRC,CODEI)) Q:CODEI=""  D
"RTN","PXRMLEXL",341,0)
 . S NUM=NUM+1,IND=0
"RTN","PXRMLEXL",342,0)
 . F  S IND=$O(^TMP("LEXTAX",$J,SRC,CODEI,IND)) Q:IND=""  D
"RTN","PXRMLEXL",343,0)
 .. S TEMP=^TMP("LEXTAX",$J,SRC,CODEI,IND)
"RTN","PXRMLEXL",344,0)
 .. S ACTDT=$P(TEMP,U,1),INACTDT=$P(TEMP,U,2)
"RTN","PXRMLEXL",345,0)
 .. S TEMP=^TMP("LEXTAX",$J,SRC,CODEI,IND,0)
"RTN","PXRMLEXL",346,0)
 .. S CODE=$P(TEMP,U,1),SDESC=$P(TEMP,U,2)
"RTN","PXRMLEXL",347,0)
 .. S NLINES=NLINES+1
"RTN","PXRMLEXL",348,0)
 .. I IND=1 S TEXT(NLINES)=NUM_U_CODE_U_ACTDT_U_INACTDT_U_SDESC
"RTN","PXRMLEXL",349,0)
 .. E  S TEXT(NLINES)=U_U_ACTDT_U_INACTDT_U_SDESC
"RTN","PXRMLEXL",350,0)
 K ^TMP("LEXTAX",$J)
"RTN","PXRMLEXL",351,0)
 Q
"RTN","PXRMLEXL",352,0)
 ;
"RTN","PXRMLEXL",353,0)
 ;=========================================
"RTN","PXRMLEXL",354,0)
PEXIT ; Protocol exit code
"RTN","PXRMLEXL",355,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMLEXL",356,0)
 ;Reset after page up/down etc
"RTN","PXRMLEXL",357,0)
 D XQORM
"RTN","PXRMLEXL",358,0)
 Q
"RTN","PXRMLEXL",359,0)
 ;
"RTN","PXRMLEXL",360,0)
 ;=========================================
"RTN","PXRMLEXL",361,0)
RFD(ENUM) ;Remove UID from the selected entry.
"RTN","PXRMLEXL",362,0)
 N START
"RTN","PXRMLEXL",363,0)
 S $P(^TMP("PXRMLEXL",$J,"SELECTED",ENUM),U,2)=0
"RTN","PXRMLEXL",364,0)
 S START=$P(^TMP("PXRMLEXL",$J,"LINES",ENUM),U,1)
"RTN","PXRMLEXL",365,0)
 D FLDCTRL^VALM10(START,"CODE",IORVOFF,IORVOFF,"")
"RTN","PXRMLEXL",366,0)
 Q
"RTN","PXRMLEXL",367,0)
 ;
"RTN","PXRMLEXL",368,0)
 ;=========================================
"RTN","PXRMLEXL",369,0)
RFDL ;Remove UID from the selected entries.
"RTN","PXRMLEXL",370,0)
 N SEL,SELLIST
"RTN","PXRMLEXL",371,0)
 ;Get the list.
"RTN","PXRMLEXL",372,0)
 D GETLIST(.SELLIST)
"RTN","PXRMLEXL",373,0)
 ;If there is no list quit.
"RTN","PXRMLEXL",374,0)
 I '$D(SELLIST) Q
"RTN","PXRMLEXL",375,0)
 S SEL=""
"RTN","PXRMLEXL",376,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D RFD(SEL)
"RTN","PXRMLEXL",377,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",378,0)
 Q
"RTN","PXRMLEXL",379,0)
 ;
"RTN","PXRMLEXL",380,0)
 ;=========================================
"RTN","PXRMLEXL",381,0)
RFDX(LIST) ;Remove UID from the selected entries.
"RTN","PXRMLEXL",382,0)
 N ENUM,IND
"RTN","PXRMLEXL",383,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXRMLEXL",384,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXRMLEXL",385,0)
 . D RFD(ENUM)
"RTN","PXRMLEXL",386,0)
 Q
"RTN","PXRMLEXL",387,0)
 ;
"RTN","PXRMLEXL",388,0)
 ;=========================================
"RTN","PXRMLEXL",389,0)
RFT(ENUM) ;Remove entry ENUM from the selected list and unhighlight it.
"RTN","PXRMLEXL",390,0)
 K ^TMP("PXRMLEXL",$J,"SELECTED",ENUM)
"RTN","PXRMLEXL",391,0)
 D HLITE(ENUM,0,0)
"RTN","PXRMLEXL",392,0)
 Q
"RTN","PXRMLEXL",393,0)
 ;
"RTN","PXRMLEXL",394,0)
 ;=========================================
"RTN","PXRMLEXL",395,0)
RFTL ;Remove the selected entries from the selected list and unhighlight them.
"RTN","PXRMLEXL",396,0)
 N SEL,SELLIST
"RTN","PXRMLEXL",397,0)
 ;Get the list.
"RTN","PXRMLEXL",398,0)
 D GETLIST(.SELLIST)
"RTN","PXRMLEXL",399,0)
 ;If there is no list quit.
"RTN","PXRMLEXL",400,0)
 I '$D(SELLIST) Q
"RTN","PXRMLEXL",401,0)
 S SEL=""
"RTN","PXRMLEXL",402,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D RFT(SEL)
"RTN","PXRMLEXL",403,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",404,0)
 Q
"RTN","PXRMLEXL",405,0)
 ;
"RTN","PXRMLEXL",406,0)
 ;=========================================
"RTN","PXRMLEXL",407,0)
RFTX(LIST) ;Remove the selected entries from the selected list and unhighlight
"RTN","PXRMLEXL",408,0)
 ;them.
"RTN","PXRMLEXL",409,0)
 N ENUM,IND
"RTN","PXRMLEXL",410,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXRMLEXL",411,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXRMLEXL",412,0)
 . D RFT(ENUM)
"RTN","PXRMLEXL",413,0)
 Q
"RTN","PXRMLEXL",414,0)
 ;
"RTN","PXRMLEXL",415,0)
 ;=========================================
"RTN","PXRMLEXL",416,0)
SAVE ;Save the selected entries in the taxonomy.
"RTN","PXRMLEXL",417,0)
 N CODE,CODESYS,ENUM,TEMP,TERM,UID
"RTN","PXRMLEXL",418,0)
 ;^TMP("PXRMLEXTC",$J) nodes are set in PXRMTXSM which calls this
"RTN","PXRMLEXL",419,0)
 ;List Manager selection. 
"RTN","PXRMLEXL",420,0)
 S CODESYS=^TMP("PXRMLEXTC",$J,"CODESYS")
"RTN","PXRMLEXL",421,0)
 S TERM=^TMP("PXRMLEXTC",$J,"LEX TERM")
"RTN","PXRMLEXL",422,0)
 K ^TMP("PXRMCODES",$J,TERM,CODESYS)
"RTN","PXRMLEXL",423,0)
 ;Mark this coding system as having been edited so it is not reloaded
"RTN","PXRMLEXL",424,0)
 ;from the taxonomy in CODELIST^PXRMTXSM.
"RTN","PXRMLEXL",425,0)
 S ^TMP("PXRMCODES",$J,TERM,CODESYS)=""
"RTN","PXRMLEXL",426,0)
 S ENUM=0,NSEL=0
"RTN","PXRMLEXL",427,0)
 F  S ENUM=$O(^TMP("PXRMLEXL",$J,"SELECTED",ENUM)) Q:ENUM=""  D
"RTN","PXRMLEXL",428,0)
 . S TEMP=^TMP("PXRMLEXL",$J,"SELECTED",ENUM)
"RTN","PXRMLEXL",429,0)
 . S CODE=$P(TEMP,U,1),UID=$P(TEMP,U,2)
"RTN","PXRMLEXL",430,0)
 . S ^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)=UID
"RTN","PXRMLEXL",431,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",432,0)
 Q
"RTN","PXRMLEXL",433,0)
 ;
"RTN","PXRMLEXL",434,0)
 ;=========================================
"RTN","PXRMLEXL",435,0)
SCTDESC(NODE) ;Append the SNOMED hierarchy to the description and then
"RTN","PXRMLEXL",436,0)
 ;sort the list by description.
"RTN","PXRMLEXL",437,0)
 N ACTDT,CODEI,CODE,DESC,FSN,HE,HIER,HS,NUM,SRC
"RTN","PXRMLEXL",438,0)
 K ^TMP($J,"DESC"),^TMP($J,"SORT")
"RTN","PXRMLEXL",439,0)
 S SRC=$O(^TMP(NODE,$J,0))
"RTN","PXRMLEXL",440,0)
 S CODEI=""
"RTN","PXRMLEXL",441,0)
 F  S CODEI=$O(^TMP(NODE,$J,SRC,CODEI)) Q:CODEI=""  D
"RTN","PXRMLEXL",442,0)
 . S ACTDT=$P(^TMP(NODE,$J,SRC,CODEI,1),U,1)
"RTN","PXRMLEXL",443,0)
 . S CODE=$P(^TMP(NODE,$J,SRC,CODEI,1,0),U,1)
"RTN","PXRMLEXL",444,0)
 . S DESC=$P(^TMP(NODE,$J,SRC,CODEI,1,0),U,2)
"RTN","PXRMLEXL",445,0)
 .;DBIA #5007
"RTN","PXRMLEXL",446,0)
 . S FSN=$$GETFSN^LEXTRAN1(SRC,CODE,ACTDT)
"RTN","PXRMLEXL",447,0)
 . S HS=$F(FSN,"(")
"RTN","PXRMLEXL",448,0)
 . S HE=$F(FSN,")",HS)
"RTN","PXRMLEXL",449,0)
 . S HIER=$E(FSN,HS-1,HE-1)
"RTN","PXRMLEXL",450,0)
 . S DESC=DESC_" "_HIER
"RTN","PXRMLEXL",451,0)
 . S ^TMP($J,"DESC",DESC,CODEI)=""
"RTN","PXRMLEXL",452,0)
 S DESC="",NUM=0
"RTN","PXRMLEXL",453,0)
 F  S DESC=$O(^TMP($J,"DESC",DESC)) Q:DESC=""  D
"RTN","PXRMLEXL",454,0)
 . S CODEI=""
"RTN","PXRMLEXL",455,0)
 . F  S CODEI=$O(^TMP($J,"DESC",DESC,CODEI)) Q:CODEI=""  D
"RTN","PXRMLEXL",456,0)
 .. S NUM=NUM+1
"RTN","PXRMLEXL",457,0)
 .. M ^TMP($J,"SORT",SRC,NUM)=^TMP(NODE,$J,SRC,CODEI)
"RTN","PXRMLEXL",458,0)
 .. S $P(^TMP($J,"SORT",SRC,NUM,1,0),U,2)=DESC
"RTN","PXRMLEXL",459,0)
 K ^TMP(NODE,$J)
"RTN","PXRMLEXL",460,0)
 M ^TMP(NODE,$J)=^TMP($J,"SORT")
"RTN","PXRMLEXL",461,0)
 K ^TMP($J,"DESC"),^TMP($J,"SORT")
"RTN","PXRMLEXL",462,0)
 Q
"RTN","PXRMLEXL",463,0)
 ;
"RTN","PXRMLEXL",464,0)
 ;=========================================
"RTN","PXRMLEXL",465,0)
UIDL ;Mark selected entries as UID.
"RTN","PXRMLEXL",466,0)
 N SEL,SELLIST
"RTN","PXRMLEXL",467,0)
 ;Get the list.
"RTN","PXRMLEXL",468,0)
 D GETLIST(.SELLIST)
"RTN","PXRMLEXL",469,0)
 ;If there is no list quit.
"RTN","PXRMLEXL",470,0)
 I '$D(SELLIST) Q
"RTN","PXRMLEXL",471,0)
 S SEL=""
"RTN","PXRMLEXL",472,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D ADDSEL(SEL,1)
"RTN","PXRMLEXL",473,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",474,0)
 Q
"RTN","PXRMLEXL",475,0)
 ;
"RTN","PXRMLEXL",476,0)
 ;=========================================
"RTN","PXRMLEXL",477,0)
UIDOK() ;Check the coding system to determine if it can be used in a dialog.
"RTN","PXRMLEXL",478,0)
 N CODESYS
"RTN","PXRMLEXL",479,0)
 S CODESYS=^TMP("PXRMLEXTC",$J,"CODESYS")
"RTN","PXRMLEXL",480,0)
 I CODESYS="10D" Q 1
"RTN","PXRMLEXL",481,0)
 I CODESYS="CPC" Q 1
"RTN","PXRMLEXL",482,0)
 I CODESYS="CPT" Q 1
"RTN","PXRMLEXL",483,0)
 I CODESYS="ICD" Q 1
"RTN","PXRMLEXL",484,0)
 I CODESYS="SCT" Q 1
"RTN","PXRMLEXL",485,0)
 S (XQORQUIT,XQORPOP)=1
"RTN","PXRMLEXL",486,0)
 Q 0
"RTN","PXRMLEXL",487,0)
 ;
"RTN","PXRMLEXL",488,0)
 ;=========================================
"RTN","PXRMLEXL",489,0)
VIEW() ;Select the view.
"RTN","PXRMLEXL",490,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",491,0)
 Q
"RTN","PXRMLEXL",492,0)
 ;I PXRMLEXV="ALL" S PXRMBGS("ALL")=VALMBG D BLDSLIST Q
"RTN","PXRMLEXL",493,0)
 ;I PXRMLEXV="SEL" S PXRMBGS("SEL")=VALMBG D BLDLIST Q
"RTN","PXRMLEXL",494,0)
 ;Q
"RTN","PXRMLEXL",495,0)
 ;
"RTN","PXRMLEXL",496,0)
 ;=========================================
"RTN","PXRMLEXL",497,0)
XQORM ; Set range for selection.
"RTN","PXRMLEXL",498,0)
 N NCODES
"RTN","PXRMLEXL",499,0)
 S NCODES=+$G(^TMP("PXRMLEXL",$J,"NCODES"))
"RTN","PXRMLEXL",500,0)
 I NCODES=0 Q
"RTN","PXRMLEXL",501,0)
 S XQORM("#")=$O(^ORD(101,"B","PXRM LEXICON SELECT ENTRY",0))_U_"1:"_NCODES
"RTN","PXRMLEXL",502,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMLEXL",503,0)
 Q
"RTN","PXRMLEXL",504,0)
 ;
"RTN","PXRMLEXL",505,0)
 ;=========================================
"RTN","PXRMLEXL",506,0)
XSEL ;Entry action for protocol PXRM LEXICON SELECT ENTRY.
"RTN","PXRMLEXL",507,0)
 N ENUM,IND,LIST,LVALID
"RTN","PXRMLEXL",508,0)
 S LIST=$P(XQORNOD(0),"=",2)
"RTN","PXRMLEXL",509,0)
 ;Remove trailing ,
"RTN","PXRMLEXL",510,0)
 I $E(LIST,$L(LIST))="," S LIST=$E(LIST,1,$L(LIST)-1)
"RTN","PXRMLEXL",511,0)
 S LVALID=1
"RTN","PXRMLEXL",512,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXRMLEXL",513,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXRMLEXL",514,0)
 . I (ENUM<1)!(ENUM>VALMCNT)!('$D(^TMP("PXRMLEXL",$J,"LINES",ENUM))) D
"RTN","PXRMLEXL",515,0)
 .. W !,ENUM," is not a valid selection."
"RTN","PXRMLEXL",516,0)
 .. W !,"The range is 1 to ",$O(^TMP("PXRMLEXL",$J,"LINES",""),-1),"."
"RTN","PXRMLEXL",517,0)
 .. H 2
"RTN","PXRMLEXL",518,0)
 .. S LVALID=0
"RTN","PXRMLEXL",519,0)
 I 'LVALID S VALMBCK="R" Q
"RTN","PXRMLEXL",520,0)
 ;
"RTN","PXRMLEXL",521,0)
 ;Full screen mode
"RTN","PXRMLEXL",522,0)
 D FULL^VALM1
"RTN","PXRMLEXL",523,0)
 ;
"RTN","PXRMLEXL",524,0)
 ;Possible actions.
"RTN","PXRMLEXL",525,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXRMLEXL",526,0)
 S DIR(0)="SBM"_U_"ADD:Add to taxonomy;"
"RTN","PXRMLEXL",527,0)
 S DIR(0)=DIR(0)_"RFT:Remove from taxonomy;"
"RTN","PXRMLEXL",528,0)
 I $$UIDOK D
"RTN","PXRMLEXL",529,0)
 . S DIR(0)=DIR(0)_"RFD:Remove from dialog;"
"RTN","PXRMLEXL",530,0)
 . S DIR(0)=DIR(0)_"UID:Use in dialog;"
"RTN","PXRMLEXL",531,0)
 S DIR("A")="Select Action: "
"RTN","PXRMLEXL",532,0)
 S DIR("B")="ADD"
"RTN","PXRMLEXL",533,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXRMLEXL",534,0)
 D ^DIR
"RTN","PXRMLEXL",535,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXRMLEXL",536,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXRMLEXL",537,0)
 S OPTION=Y
"RTN","PXRMLEXL",538,0)
 D CLEAR^VALM1
"RTN","PXRMLEXL",539,0)
 ;
"RTN","PXRMLEXL",540,0)
 I OPTION="ADD" D INCX^PXRMLEXL(.LIST,0)
"RTN","PXRMLEXL",541,0)
 I OPTION="RFD" D RFDX^PXRMLEXL(.LIST)
"RTN","PXRMLEXL",542,0)
 I OPTION="RFT" D RFTX^PXRMLEXL(.LIST)
"RTN","PXRMLEXL",543,0)
 I OPTION="UID" D INCX^PXRMLEXL(.LIST,1)
"RTN","PXRMLEXL",544,0)
 ;
"RTN","PXRMLEXL",545,0)
 S VALMBCK="R"
"RTN","PXRMLEXL",546,0)
 Q
"RTN","PXRMLEXL",547,0)
 ;
"RTN","PXRMLIST")
0^64^B9607187
"RTN","PXRMLIST",1,0)
PXRMLIST ; SLC/PKR/PJH - Clinical Reminders list functions. ;01/18/2013
"RTN","PXRMLIST",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,26**;Feb 04, 2005;Build 404
"RTN","PXRMLIST",3,0)
 ;Used in the reminder exchange utility for building lists of
"RTN","PXRMLIST",4,0)
 ;reminders, Exchange File entries, etc.
"RTN","PXRMLIST",5,0)
 ;=======================================================
"RTN","PXRMLIST",6,0)
FRDEF(NAME,PNAME) ;Format the reminder name and print name.
"RTN","PXRMLIST",7,0)
 N IND,TEMP
"RTN","PXRMLIST",8,0)
 S TEMP=$$LJ^XLFSTR(NAME,40," ")
"RTN","PXRMLIST",9,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMLIST",10,0)
 Q TEMP
"RTN","PXRMLIST",11,0)
 ;
"RTN","PXRMLIST",12,0)
 ;=======================================================
"RTN","PXRMLIST",13,0)
FMT(NUMBER,NAME,SOURCE,DATE,FMTSTR,NL,OUTPUT) ;Format  entry number, name,
"RTN","PXRMLIST",14,0)
 ;source, and date packed for LM display.
"RTN","PXRMLIST",15,0)
 N TEMP,TSOURCE
"RTN","PXRMLIST",16,0)
 S TEMP=NUMBER_U_NAME
"RTN","PXRMLIST",17,0)
 S TSOURCE=$E($P(SOURCE,",",1),1,12)_"@"_$E($P(SOURCE," at ",2),1,12)
"RTN","PXRMLIST",18,0)
 S TEMP=TEMP_U_TSOURCE
"RTN","PXRMLIST",19,0)
 S DATE=$$FMTE^XLFDT(DATE,"5Z")
"RTN","PXRMLIST",20,0)
 S TEMP=TEMP_U_DATE
"RTN","PXRMLIST",21,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXRMLIST",22,0)
 Q
"RTN","PXRMLIST",23,0)
 ;
"RTN","PXRMLIST",24,0)
 ;=======================================================
"RTN","PXRMLIST",25,0)
LIST ;Print a list of location lists.
"RTN","PXRMLIST",26,0)
 N BY,DIC,FLDS,FR,L,PXRMEDOK
"RTN","PXRMLIST",27,0)
 S PXRMEDOK=1
"RTN","PXRMLIST",28,0)
 S BY=".01"
"RTN","PXRMLIST",29,0)
 S DIC="^PXRMD(810.9,"
"RTN","PXRMLIST",30,0)
 S FLDS="[PXRM LOCATION LIST LIST]"
"RTN","PXRMLIST",31,0)
 S FR=""
"RTN","PXRMLIST",32,0)
 S L=0
"RTN","PXRMLIST",33,0)
 D EN1^DIP
"RTN","PXRMLIST",34,0)
 Q
"RTN","PXRMLIST",35,0)
 ;
"RTN","PXRMLIST",36,0)
 ;=======================================================
"RTN","PXRMLIST",37,0)
MRKINACT(TEXT) ;Append the inactive mark to TEXT in column 77.
"RTN","PXRMLIST",38,0)
 N IC,NSPA
"RTN","PXRMLIST",39,0)
 S NSPA=77-$L(TEXT)
"RTN","PXRMLIST",40,0)
 F IC=1:1:NSPA S TEXT=TEXT_" "
"RTN","PXRMLIST",41,0)
 S TEXT=TEXT_"X"
"RTN","PXRMLIST",42,0)
 Q TEXT
"RTN","PXRMLIST",43,0)
 ;
"RTN","PXRMLIST",44,0)
 ;=======================================================
"RTN","PXRMLIST",45,0)
QUERYAO() ;See if the user wants only active reminders listed.
"RTN","PXRMLIST",46,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMLIST",47,0)
 S DIR(0)="YA"
"RTN","PXRMLIST",48,0)
 S DIR("A")="List active reminders only? "
"RTN","PXRMLIST",49,0)
 S DIR("B")="Y"
"RTN","PXRMLIST",50,0)
 W !
"RTN","PXRMLIST",51,0)
 D ^DIR
"RTN","PXRMLIST",52,0)
 Q Y
"RTN","PXRMLIST",53,0)
 ;
"RTN","PXRMLIST",54,0)
 ;=======================================================
"RTN","PXRMLIST",55,0)
RDEF(DEFLIST,ARO) ;Build a list of the name and print name of all
"RTN","PXRMLIST",56,0)
 ;reminder definitions.
"RTN","PXRMLIST",57,0)
 N INACTIVE,IEN,NAME,PNAME,REMINDER
"RTN","PXRMLIST",58,0)
 S INACTIVE=""
"RTN","PXRMLIST",59,0)
 ;Build the list of reminders in alphabetical order.
"RTN","PXRMLIST",60,0)
 S VALMCNT=0
"RTN","PXRMLIST",61,0)
 S NAME=""
"RTN","PXRMLIST",62,0)
 F  S NAME=$O(^PXD(811.9,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLIST",63,0)
 . S IEN=$O(^PXD(811.9,"B",NAME,""))
"RTN","PXRMLIST",64,0)
 . S REMINDER=^PXD(811.9,IEN,0)
"RTN","PXRMLIST",65,0)
 . S INACTIVE=$P(REMINDER,U,6)
"RTN","PXRMLIST",66,0)
 . I (ARO)&(INACTIVE) Q
"RTN","PXRMLIST",67,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMLIST",68,0)
 . S PNAME=$P(REMINDER,U,3)
"RTN","PXRMLIST",69,0)
 . S DEFLIST(VALMCNT,0)=$$FRDEF(NAME,PNAME)
"RTN","PXRMLIST",70,0)
 . I INACTIVE D
"RTN","PXRMLIST",71,0)
 .. S DEFLIST(VALMCNT,0)=$$MRKINACT(DEFLIST(VALMCNT,0))
"RTN","PXRMLIST",72,0)
 S DEFLIST("VALMCNT")=VALMCNT
"RTN","PXRMLIST",73,0)
 Q
"RTN","PXRMLIST",74,0)
 ;
"RTN","PXRMLIST",75,0)
 ;=======================================================
"RTN","PXRMLIST",76,0)
REXL(RLIST) ;Build a list of exchange repository entries.
"RTN","PXRMLIST",77,0)
 N DATE,EXIEN,FMTSTR,IND,NAME,NL,NUM,OUTPUT,SOURCE,STR
"RTN","PXRMLIST",78,0)
 ;Build the list in alphabetical order.
"RTN","PXRMLIST",79,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLL")
"RTN","PXRMLIST",80,0)
 S (NUM,VALMCNT)=0
"RTN","PXRMLIST",81,0)
 S NAME=""
"RTN","PXRMLIST",82,0)
 F  S NAME=$O(^PXD(811.8,"B",NAME)) Q:NAME=""  D
"RTN","PXRMLIST",83,0)
 . S DATE=""
"RTN","PXRMLIST",84,0)
 . F  S DATE=$O(^PXD(811.8,"B",NAME,DATE)) Q:DATE=""  D
"RTN","PXRMLIST",85,0)
 .. S EXIEN=$O(^PXD(811.8,"B",NAME,DATE,""))
"RTN","PXRMLIST",86,0)
 .. S SOURCE=$P(^PXD(811.8,EXIEN,0),U,2)
"RTN","PXRMLIST",87,0)
 .. S NUM=NUM+1
"RTN","PXRMLIST",88,0)
 .. S ^TMP(RLIST,$J,"SEL",NUM)=EXIEN
"RTN","PXRMLIST",89,0)
 .. D FMT(NUM,NAME,SOURCE,DATE,FMTSTR,.NL,.OUTPUT)
"RTN","PXRMLIST",90,0)
 .. F IND=1:1:NL D
"RTN","PXRMLIST",91,0)
 ... S VALMCNT=VALMCNT+1,^TMP(RLIST,$J,VALMCNT,0)=OUTPUT(IND)
"RTN","PXRMLIST",92,0)
 ... S ^TMP(RLIST,$J,"IDX",VALMCNT,NUM)=""
"RTN","PXRMLIST",93,0)
 S ^TMP(RLIST,$J,"VALMCNT")=VALMCNT
"RTN","PXRMLIST",94,0)
 S ^TMP(RLIST,$J,"NEXCHE")=NUM
"RTN","PXRMLIST",95,0)
 Q
"RTN","PXRMLIST",96,0)
 ;
"RTN","PXRMLIST",97,0)
 ;=======================================================
"RTN","PXRMLIST",98,0)
SPONSOR ;Print a list of Sponsors.
"RTN","PXRMLIST",99,0)
 N BY,DIC,FLDS,FR,L,PXRMEDOK
"RTN","PXRMLIST",100,0)
 S PXRMEDOK=1
"RTN","PXRMLIST",101,0)
 S BY=".01"
"RTN","PXRMLIST",102,0)
 S DIC="^PXRMD(811.6,"
"RTN","PXRMLIST",103,0)
 S FLDS="[PXRM SPONSOR LIST]"
"RTN","PXRMLIST",104,0)
 S FR=""
"RTN","PXRMLIST",105,0)
 S L=0
"RTN","PXRMLIST",106,0)
 D EN1^DIP
"RTN","PXRMLIST",107,0)
 Q
"RTN","PXRMLIST",108,0)
 ;
"RTN","PXRMLOG")
0^114^B65785719
"RTN","PXRMLOG",1,0)
PXRMLOG ;SLC/PKR - Clinical Reminders logic routines. ;11/06/2013
"RTN","PXRMLOG",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMLOG",3,0)
 ;==========================================================
"RTN","PXRMLOG",4,0)
EVALPCL(DEFARR,PXRMPDEM,FREQ,PCLOGIC,FIEVAL) ;Evaluate the Patient Cohort
"RTN","PXRMLOG",5,0)
 ;Logic.
"RTN","PXRMLOG",6,0)
 ;Determine the applicable frequency age range set; get the baseline.
"RTN","PXRMLOG",7,0)
 N AGEFI,IND,FINDING,FIFREQ,FLIST,FREQDAY,MAXAGE,MINAGE,NODE,NUMAFI
"RTN","PXRMLOG",8,0)
 N PCLOG,PCLSTR,RANKAR,RANK,RANKFI,TEMP,TEST
"RTN","PXRMLOG",9,0)
 D MMF^PXRMAGE(.DEFARR,.PXRMPDEM,.MINAGE,.MAXAGE,.FREQ,.FIEVAL)
"RTN","PXRMLOG",10,0)
 S FIFREQ="Baseline"
"RTN","PXRMLOG",11,0)
 ;If there is no match with any of the baseline values FREQ=-1.
"RTN","PXRMLOG",12,0)
 ;If there was no frequency in the definition then FREQ="".
"RTN","PXRMLOG",13,0)
 ;See if any findings override the baseline.
"RTN","PXRMLOG",14,0)
 S TEMP=DEFARR(40)
"RTN","PXRMLOG",15,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMLOG",16,0)
 ;If there are no age findings use the baseline.
"RTN","PXRMLOG",17,0)
 I NUMAFI=0 G ACHK
"RTN","PXRMLOG",18,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",19,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMLOG",20,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",21,0)
 . I FIEVAL(FINDING) D
"RTN","PXRMLOG",22,0)
 .. S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMLOG",23,0)
 .. S TEMP=DEFARR(NODE,FINDING,0)
"RTN","PXRMLOG",24,0)
 .. S RANK=+$P(TEMP,U,5)
"RTN","PXRMLOG",25,0)
 .. I RANK=0 S RANK=9999
"RTN","PXRMLOG",26,0)
 .. S FREQDAY=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMLOG",27,0)
 ..;If there is no frequency with this rank ignore it.
"RTN","PXRMLOG",28,0)
 .. I FREQDAY]"" S RANKAR(RANK,FREQDAY,FINDING)=""
"RTN","PXRMLOG",29,0)
 ;If there was a ranking use it otherwise use the greatest frequency.
"RTN","PXRMLOG",30,0)
 I '$D(RANKAR) G ACHK
"RTN","PXRMLOG",31,0)
 S RANK=0
"RTN","PXRMLOG",32,0)
 S RANK=+$O(RANKAR(RANK))
"RTN","PXRMLOG",33,0)
 S FREQDAY=+$O(RANKAR(RANK,""))
"RTN","PXRMLOG",34,0)
 S FINDING=$O(RANKAR(RANK,FREQDAY,""))
"RTN","PXRMLOG",35,0)
 I FINDING'="" D
"RTN","PXRMLOG",36,0)
 . S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMLOG",37,0)
 . S TEMP=DEFARR(NODE,FINDING,0)
"RTN","PXRMLOG",38,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMLOG",39,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMLOG",40,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMLOG",41,0)
 . S FIFREQ="Finding "_FINDING
"RTN","PXRMLOG",42,0)
 .;Remove the baseline age findings since they have been overridden.
"RTN","PXRMLOG",43,0)
 . K FIEVAL("AGE")
"RTN","PXRMLOG",44,0)
ACHK ;
"RTN","PXRMLOG",45,0)
 I FREQ="" D
"RTN","PXRMLOG",46,0)
 . S AGEFI=0
"RTN","PXRMLOG",47,0)
 .;If there is no resolution logic then frequency is not required.
"RTN","PXRMLOG",48,0)
 . I DEFARR(35)'="" S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","NOFREQ")="There is no reminder frequency!"
"RTN","PXRMLOG",49,0)
 E  D
"RTN","PXRMLOG",50,0)
 .;Save the final frequency and age range for display.
"RTN","PXRMLOG",51,0)
 .;Use the z so this will be the last of the info text.
"RTN","PXRMLOG",52,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG")=FREQ_U_MINAGE_U_MAXAGE_U_FIFREQ
"RTN","PXRMLOG",53,0)
 . S AGEFI=$S(FREQ=-1:0,1:$$AGECHECK^PXRMAGE(PXRMPDEM("AGE"),MINAGE,MAXAGE))
"RTN","PXRMLOG",54,0)
 S FIEVAL("AGE")=AGEFI
"RTN","PXRMLOG",55,0)
 ;
"RTN","PXRMLOG",56,0)
 ;Evaluate the patient cohort logic
"RTN","PXRMLOG",57,0)
EVAL ;
"RTN","PXRMLOG",58,0)
 N AGE,DPCLOG,FI,FF,FUN,FUNCTION,FUNLIST,NUM,SEX,VAR
"RTN","PXRMLOG",59,0)
 S TEMP=DEFARR(32)
"RTN","PXRMLOG",60,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",61,0)
 S (PCLOG,PCLSTR)=DEFARR(31)
"RTN","PXRMLOG",62,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",63,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",64,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",65,0)
 . I FINDING="AGE" S AGE=+$G(FIEVAL("AGE"))
"RTN","PXRMLOG",66,0)
 . I FINDING="SEX" S SEX=+$G(FIEVAL("SEX"))
"RTN","PXRMLOG",67,0)
 . I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMLOG",68,0)
 . E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMLOG",69,0)
 I @PCLOG
"RTN","PXRMLOG",70,0)
 S TEST=$T
"RTN","PXRMLOG",71,0)
 I 'AGEFI,PCLSTR["AGE" D
"RTN","PXRMLOG",72,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")=""
"RTN","PXRMLOG",73,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="Patient does not meet any age criteria!"
"RTN","PXRMLOG",74,0)
 ;Reminders are always N/A for dead patients unless PXRMIDOD is true in which case
"RTN","PXRMLOG",75,0)
 ;the regular cohort logic applies.
"RTN","PXRMLOG",76,0)
 I '$G(PXRMIDOD),PXRMPDEM("DOD")'="" S TEST=0
"RTN","PXRMLOG",77,0)
 S PCLOGIC=TEST_U_PCLSTR
"RTN","PXRMLOG",78,0)
 I 'TEST S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","COHORT")=""
"RTN","PXRMLOG",79,0)
 I $G(PXRMDEBG) D
"RTN","PXRMLOG",80,0)
 . S DPCLOG=PCLOG
"RTN","PXRMLOG",81,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",82,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",83,0)
 .. I FINDING="AGE" S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,"AGE",+$G(FIEVAL(FINDING))) Q
"RTN","PXRMLOG",84,0)
 .. I FINDING="SEX" S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,"SEX",+$G(FIEVAL(FINDING))) Q
"RTN","PXRMLOG",85,0)
 .. S TEMP=$S(FINDING["FF":"FF("_$P(FINDING,"FF",2)_")",1:"FI("_FINDING_")")
"RTN","PXRMLOG",86,0)
 .. S DPCLOG=$$STRREP^PXRMUTIL(DPCLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",87,0)
 S PCLOGIC=PCLOGIC_U_$G(DPCLOG)
"RTN","PXRMLOG",88,0)
 I $G(PXRMDEBG) S ^TMP(PXRMPID,$J,PXRMITEM,"PATIENT COHORT LOGIC")=PCLOGIC
"RTN","PXRMLOG",89,0)
 Q
"RTN","PXRMLOG",90,0)
 ;
"RTN","PXRMLOG",91,0)
 ;==========================================================
"RTN","PXRMLOG",92,0)
EVALRESL(DEFARR,RESDATE,RESLOGIC,FIEVAL) ;Evaluate the
"RTN","PXRMLOG",93,0)
 ;Resolution Logic.
"RTN","PXRMLOG",94,0)
 N DRESLOG,IND,FF,FI,FINDING,FLIST,NUM,RESLOG,RESLSTR,TEMP,TEST
"RTN","PXRMLOG",95,0)
 S TEMP=DEFARR(36)
"RTN","PXRMLOG",96,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",97,0)
 I NUM=0 Q
"RTN","PXRMLOG",98,0)
 S (RESLOG,RESLSTR)=DEFARR(35)
"RTN","PXRMLOG",99,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",100,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",101,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",102,0)
 .;Check for contraindicated in a resolution finding
"RTN","PXRMLOG",103,0)
 . I $G(FIEVAL(FINDING,"CONTRAINDICATED")) S FIEVAL("CONTRAINDICATED")=1
"RTN","PXRMLOG",104,0)
 . I FINDING["FF" S TEMP=$P(FINDING,"FF",2),FF(TEMP)=FIEVAL(FINDING)
"RTN","PXRMLOG",105,0)
 . E  S FI(FINDING)=FIEVAL(FINDING)
"RTN","PXRMLOG",106,0)
 I @RESLOG
"RTN","PXRMLOG",107,0)
 S TEST=$T
"RTN","PXRMLOG",108,0)
 I $G(PXRMDEBG) D
"RTN","PXRMLOG",109,0)
 . S DRESLOG=RESLOG
"RTN","PXRMLOG",110,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",111,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",112,0)
 .. S TEMP=$S(FINDING["FF":"FF("_$P(FINDING,"FF",2)_")",1:"FI("_FINDING_")")
"RTN","PXRMLOG",113,0)
 .. S DRESLOG=$$STRREP^PXRMUTIL(DRESLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",114,0)
 S RESLOGIC=TEST_U_RESLSTR_U_$G(DRESLOG)
"RTN","PXRMLOG",115,0)
 I $G(PXRMDEBG) S ^TMP(PXRMPID,$J,PXRMITEM,"RESOLUTION LOGIC")=RESLOGIC
"RTN","PXRMLOG",116,0)
 S RESDATE=$S(TEST=1:$$RESDATE(RESLSTR,.FIEVAL),1:0)
"RTN","PXRMLOG",117,0)
 Q
"RTN","PXRMLOG",118,0)
 ;
"RTN","PXRMLOG",119,0)
 ;==========================================================
"RTN","PXRMLOG",120,0)
LOGOP(DT1,DT2,LOP) ;Given two dates return the most recent if the logical
"RTN","PXRMLOG",121,0)
 ;operator is ! and the oldest if it is &. 'FIs and FFs which don't
"RTN","PXRMLOG",122,0)
 ;have a date are flagged with date of -1.
"RTN","PXRMLOG",123,0)
 I DT1=0,DT2=0 Q 0
"RTN","PXRMLOG",124,0)
 I DT1=-1,DT2=-1 Q -1
"RTN","PXRMLOG",125,0)
 N VALUE
"RTN","PXRMLOG",126,0)
 I LOP="&" D  Q VALUE
"RTN","PXRMLOG",127,0)
 . I (DT1=0)!(DT2=0) S VALUE=0 Q
"RTN","PXRMLOG",128,0)
 . I (DT1=-1) S VALUE=DT2 Q
"RTN","PXRMLOG",129,0)
 . I (DT2=-1) S VALUE=DT1 Q
"RTN","PXRMLOG",130,0)
 . S VALUE=$S(DT1>DT2:DT2,1:DT1)
"RTN","PXRMLOG",131,0)
 I LOP'="!" Q 0
"RTN","PXRMLOG",132,0)
 I DT1=-1 Q $S(DT2>0:DT2,1:-1)
"RTN","PXRMLOG",133,0)
 I DT2=-1 Q $S(DT1>0:DT1,1:-1)
"RTN","PXRMLOG",134,0)
 Q $S(DT1>DT2:DT1,1:DT2)
"RTN","PXRMLOG",135,0)
 ;
"RTN","PXRMLOG",136,0)
 ;==========================================================
"RTN","PXRMLOG",137,0)
RESDATE(RESLSTR,FIEVAL) ;Return the resolution date based on the following
"RTN","PXRMLOG",138,0)
 ;rules:
"RTN","PXRMLOG",139,0)
 ;Dates that are ORed use the most recent.
"RTN","PXRMLOG",140,0)
 ;Dates that are ANDed use the oldest.
"RTN","PXRMLOG",141,0)
 ;This is routine is called only if the resolution logic is true.
"RTN","PXRMLOG",142,0)
 N DATE,DT1,DT2,DT3,FINUM,IND,JND,OPER,PFSTACK,STACK,T1,T2
"RTN","PXRMLOG",143,0)
 ;Remove leading (n) entries.
"RTN","PXRMLOG",144,0)
 I ($E(RESLSTR,1,4)="(0)!")!($E(RESLSTR,1,4)="(1)&") S $E(RESLSTR,1,4)=""
"RTN","PXRMLOG",145,0)
 S OPER="!&'U"
"RTN","PXRMLOG",146,0)
 D POSTFIX^PXRMSTAC(RESLSTR,OPER,.PFSTACK)
"RTN","PXRMLOG",147,0)
 S (IND,JND)=0
"RTN","PXRMLOG",148,0)
 F  D  Q:(IND'<PFSTACK(0))
"RTN","PXRMLOG",149,0)
 . S IND=IND+1,T1=PFSTACK(IND)
"RTN","PXRMLOG",150,0)
 . I T1="FI" D  Q
"RTN","PXRMLOG",151,0)
 .. S IND=IND+1,FINUM=PFSTACK(IND)
"RTN","PXRMLOG",152,0)
 ..;Replace true findings with their dates.
"RTN","PXRMLOG",153,0)
 .. S DATE=$S(FIEVAL(FINUM)=1:FIEVAL(FINUM,"DATE"),1:0)
"RTN","PXRMLOG",154,0)
 .. S JND=JND+1,STACK(JND)=DATE
"RTN","PXRMLOG",155,0)
 . I T1="FF" D  Q
"RTN","PXRMLOG",156,0)
 ..;FFs do not have dates, flag them all with -1.
"RTN","PXRMLOG",157,0)
 .. S IND=IND+1,JND=JND+1,STACK(JND)=-1
"RTN","PXRMLOG",158,0)
 . I OPER[T1 S JND=JND+1,STACK(JND)=T1
"RTN","PXRMLOG",159,0)
 S STACK(0)=JND
"RTN","PXRMLOG",160,0)
 K PFSTACK
"RTN","PXRMLOG",161,0)
 S PFSTACK(0)=0
"RTN","PXRMLOG",162,0)
 F IND=1:1:STACK(0) D
"RTN","PXRMLOG",163,0)
 . S T1=STACK(IND)
"RTN","PXRMLOG",164,0)
 . I OPER'[T1 D PUSH^PXRMSTAC(.PFSTACK,T1) Q
"RTN","PXRMLOG",165,0)
 .;For unary NOT replace the top of the stack with -1.
"RTN","PXRMLOG",166,0)
 . I T1="'U" S DT1=$$POP^PXRMSTAC(.PFSTACK) D PUSH^PXRMSTAC(.PFSTACK,-1) Q
"RTN","PXRMLOG",167,0)
 .;Pop the top two elements on the stack and do the operation.
"RTN","PXRMLOG",168,0)
 . S DT1=$$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",169,0)
 . S DT2=$$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",170,0)
 . S DT3=$$LOGOP(DT1,DT2,T1)
"RTN","PXRMLOG",171,0)
 .;Save the result back on the stack
"RTN","PXRMLOG",172,0)
 . D PUSH^PXRMSTAC(.PFSTACK,DT3)
"RTN","PXRMLOG",173,0)
 ;The result is the only thing left on the stack.
"RTN","PXRMLOG",174,0)
 Q $$POP^PXRMSTAC(.PFSTACK)
"RTN","PXRMLOG",175,0)
 ;
"RTN","PXRMLOG",176,0)
 ;==========================================================
"RTN","PXRMLOG",177,0)
SEX(DEFARR,SEX) ;Return FALSE (0) if the patient is the wrong sex for
"RTN","PXRMLOG",178,0)
 ; the reminder, TRUE (1) is the patient is the right sex.
"RTN","PXRMLOG",179,0)
 N REMSEX
"RTN","PXRMLOG",180,0)
 S REMSEX=$P(DEFARR(0),U,9)
"RTN","PXRMLOG",181,0)
 I REMSEX="" Q 1
"RTN","PXRMLOG",182,0)
 I SEX=REMSEX Q 1
"RTN","PXRMLOG",183,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRMLOG",184,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRMLOG",185,0)
 Q 0
"RTN","PXRMLOG",186,0)
 ;
"RTN","PXRMLOG",187,0)
 ;==========================================================
"RTN","PXRMLOG",188,0)
VALID(LOGSTR,DA,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid logic string.
"RTN","PXRMLOG",189,0)
 ;This is called by the input transform for PATIENT COHORT LOGIC and
"RTN","PXRMLOG",190,0)
 ;RESOLUTION LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",191,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",192,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",193,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",194,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",195,0)
 ;
"RTN","PXRMLOG",196,0)
 ;Check the length.
"RTN","PXRMLOG",197,0)
 N LEN
"RTN","PXRMLOG",198,0)
 S LEN=$L(LOGSTR)
"RTN","PXRMLOG",199,0)
 I LEN<MINLEN D  Q 0
"RTN","PXRMLOG",200,0)
 . D EN^DDIOL("Logic string is too short")
"RTN","PXRMLOG",201,0)
 I LEN>MAXLEN D  Q 0
"RTN","PXRMLOG",202,0)
 . D EN^DDIOL("Logic string is too long")
"RTN","PXRMLOG",203,0)
 ;
"RTN","PXRMLOG",204,0)
 ;Use the FileMan code validator to check the code.
"RTN","PXRMLOG",205,0)
 N TEST,X
"RTN","PXRMLOG",206,0)
 S X="S Y="_$TR(LOGSTR,";","")
"RTN","PXRMLOG",207,0)
 D ^DIM
"RTN","PXRMLOG",208,0)
 I $D(X)=0 D  Q 0
"RTN","PXRMLOG",209,0)
 . S TEXT(1)="LOGIC string: "_LOGSTR
"RTN","PXRMLOG",210,0)
 . S TEXT(2)="contains invalid MUMPS code!"
"RTN","PXRMLOG",211,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMLOG",212,0)
 ;
"RTN","PXRMLOG",213,0)
 N ELE1,ELE2,MNUM,SEP,STACK,TEXT,TSTSTR,VALID
"RTN","PXRMLOG",214,0)
 ;Make sure the entries in LOGSTR are valid elements or functions.
"RTN","PXRMLOG",215,0)
 S TSTSTR=LOGSTR
"RTN","PXRMLOG",216,0)
 S TSTSTR=$TR(TSTSTR,"'","")
"RTN","PXRMLOG",217,0)
 S TSTSTR=$TR(TSTSTR,"&",U)
"RTN","PXRMLOG",218,0)
 S TSTSTR=$TR(TSTSTR,"!",U)
"RTN","PXRMLOG",219,0)
 ;Set the allowable logic separators.
"RTN","PXRMLOG",220,0)
 S SEP="^,<>="
"RTN","PXRMLOG",221,0)
 ;Convert the string to postfix form for evaluation.
"RTN","PXRMLOG",222,0)
 D POSTFIX^PXRMSTAC(TSTSTR,SEP,.STACK)
"RTN","PXRMLOG",223,0)
 S (ELE1,VALID)=1
"RTN","PXRMLOG",224,0)
 F  Q:(ELE1="")!(VALID=0)  D
"RTN","PXRMLOG",225,0)
 . S ELE1=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMLOG",226,0)
 . I '$$VELEM(ELE1) S VALID=0 Q
"RTN","PXRMLOG",227,0)
 . I SEP[ELE1 Q
"RTN","PXRMLOG",228,0)
 .;If the element is FI or FF then the next element should be a number.
"RTN","PXRMLOG",229,0)
 . S MNUM=$S(ELE1="FI":20,ELE1="FF":25,1:"")
"RTN","PXRMLOG",230,0)
 . I MNUM'="" D
"RTN","PXRMLOG",231,0)
 .. S ELE2=$$POP^PXRMSTAC(.STACK)
"RTN","PXRMLOG",232,0)
 .. I ELE2'=+ELE2 S VALID=0
"RTN","PXRMLOG",233,0)
 .. I VALID S VALID=$D(^PXD(811.9,DA,MNUM,ELE2))
"RTN","PXRMLOG",234,0)
 .. I 'VALID D
"RTN","PXRMLOG",235,0)
 ... S TEXT=ELE1_"("_ELE2_") is not in this definition!"
"RTN","PXRMLOG",236,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMLOG",237,0)
 Q VALID
"RTN","PXRMLOG",238,0)
 ;
"RTN","PXRMLOG",239,0)
 ;==========================================================
"RTN","PXRMLOG",240,0)
VALIDR(LOGSTR,DA,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid resolution 
"RTN","PXRMLOG",241,0)
 ;logic string. This is called by the input transform for RESOLUTION
"RTN","PXRMLOG",242,0)
 ;LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",243,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",244,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",245,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",246,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",247,0)
 N TEXT
"RTN","PXRMLOG",248,0)
 ;The resolution logic cannot contain SEX or AGE.
"RTN","PXRMLOG",249,0)
 I LOGSTR["AGE" D  Q 0
"RTN","PXRMLOG",250,0)
 . S TEXT="The resolution logic cannot contain AGE!"
"RTN","PXRMLOG",251,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMLOG",252,0)
 I LOGSTR["SEX" D  Q 0
"RTN","PXRMLOG",253,0)
 . S TEXT="The resolution logic cannot contain SEX!"
"RTN","PXRMLOG",254,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMLOG",255,0)
 ;Now call the regular logic string validator.
"RTN","PXRMLOG",256,0)
 Q $$VALID(LOGSTR,DA,MINLEN,MAXLEN)
"RTN","PXRMLOG",257,0)
 ;
"RTN","PXRMLOG",258,0)
 ;==========================================================
"RTN","PXRMLOG",259,0)
VELEM(ELEMENT) ;Make sure that the element is valid.
"RTN","PXRMLOG",260,0)
 I ELEMENT="AGE" Q 1
"RTN","PXRMLOG",261,0)
 I ELEMENT="FI" Q 1
"RTN","PXRMLOG",262,0)
 I ELEMENT="FF" Q 1
"RTN","PXRMLOG",263,0)
 I ELEMENT="SEX" Q 1
"RTN","PXRMLOG",264,0)
 I ELEMENT="^" Q 1
"RTN","PXRMLOG",265,0)
 I ELEMENT?.N Q 1
"RTN","PXRMLOG",266,0)
 D EN^DDIOL(ELEMENT_" is not a valid logic element.")
"RTN","PXRMLOG",267,0)
 Q 0
"RTN","PXRMLOG",268,0)
 ;
"RTN","PXRMLPOE")
0^79^B15191347
"RTN","PXRMLPOE",1,0)
PXRMLPOE ;SLC/PJH,PKR - Build OE/RR Team from Patient List ;02/21/2014
"RTN","PXRMLPOE",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMLPOE",3,0)
 ; 
"RTN","PXRMLPOE",4,0)
 ; Called from PXRM PATIENT LIST OE/RR protocol
"RTN","PXRMLPOE",5,0)
ASK(PLIEN,OPT) ;Verify patient list name
"RTN","PXRMLPOE",6,0)
 N DIR,X,Y,TEXT
"RTN","PXRMLPOE",7,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPOE",8,0)
 S DIR(0)="YA0"
"RTN","PXRMLPOE",9,0)
 S DIR("A")=OPT_" patient list "_$P($G(^PXRMXP(810.5,PLIEN,0)),U)_"?: "
"RTN","PXRMLPOE",10,0)
 S DIR("B")="N"
"RTN","PXRMLPOE",11,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMLPOE",12,0)
 W !
"RTN","PXRMLPOE",13,0)
 D ^DIR K DIR
"RTN","PXRMLPOE",14,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPOE",15,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLPOE",16,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMLPOE",17,0)
 Q
"RTN","PXRMLPOE",18,0)
 ;
"RTN","PXRMLPOE",19,0)
LOCK(LIST) ;Lock the list
"RTN","PXRMLPOE",20,0)
 L +^PXRMXP(100.21,LIST):DILOCKTM
"RTN","PXRMLPOE",21,0)
 E  W !!?5,"Another user is using this OE/RR team list" S DUOUT=1
"RTN","PXRMLPOE",22,0)
 Q
"RTN","PXRMLPOE",23,0)
 ;
"RTN","PXRMLPOE",24,0)
OERR(IENO) ;Copy patient list to OE/RR Team
"RTN","PXRMLPOE",25,0)
 ;Check if OK to copy
"RTN","PXRMLPOE",26,0)
 D ASK(IENO,"Copy") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMLPOE",27,0)
 ;
"RTN","PXRMLPOE",28,0)
 N IENN,NNAME,ONAME,TEXT,X,Y
"RTN","PXRMLPOE",29,0)
 ;
"RTN","PXRMLPOE",30,0)
 ;Select OE/RR Team to copy to
"RTN","PXRMLPOE",31,0)
 S TEXT="Select OE/RR TEAM name to copy to: "
"RTN","PXRMLPOE",32,0)
 D OTEAM(.IENN,.NNAME,TEXT) Q:$D(DUOUT)!$D(DTOUT)  Q:'IENN
"RTN","PXRMLPOE",33,0)
 ;
"RTN","PXRMLPOE",34,0)
 S ONAME=$P($G(^PXRMXP(810.5,IENO,0)),U)
"RTN","PXRMLPOE",35,0)
 ;
"RTN","PXRMLPOE",36,0)
 ;Update OE/RR Team list
"RTN","PXRMLPOE",37,0)
 D UPDLST(IENO,IENN,NNAME)
"RTN","PXRMLPOE",38,0)
 Q
"RTN","PXRMLPOE",39,0)
 ;
"RTN","PXRMLPOE",40,0)
OK ;Option to overwrite existing list
"RTN","PXRMLPOE",41,0)
 N X,Y,TEXT
"RTN","PXRMLPOE",42,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMLPOE",43,0)
 S DIR(0)="YA0"
"RTN","PXRMLPOE",44,0)
 S DIR("A")="Overwrite existing OE/RR Team list: "
"RTN","PXRMLPOE",45,0)
 S DIR("B")="N"
"RTN","PXRMLPOE",46,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMLPOE",47,0)
 S DIR("??")=U_"D HELP^PXRMLCR(1)"
"RTN","PXRMLPOE",48,0)
 W !
"RTN","PXRMLPOE",49,0)
 D ^DIR K DIR
"RTN","PXRMLPOE",50,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMLPOE",51,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMLPOE",52,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMLPOE",53,0)
 Q
"RTN","PXRMLPOE",54,0)
 ;
"RTN","PXRMLPOE",55,0)
OTEAM(LIST,NAME,TEXT) ;Select OERR/Team
"RTN","PXRMLPOE",56,0)
 N X,Y,DIC,DIE,DR,DLAYGO
"RTN","PXRMLPOE",57,0)
 W !
"RTN","PXRMLPOE",58,0)
 W !,"To overwrite an existing list you must be the creator of the list and"
"RTN","PXRMLPOE",59,0)
 W !,"the OE/RR team list must be defined as a Team List."
"RTN","PXRMLPOE",60,0)
OT1 S DIC=100.21,DLAYGO=DIC,DIC(0)="QAEMZL"
"RTN","PXRMLPOE",61,0)
 S DIC("S")="I $P($G(^(0)),U,2)=""TM"",$P($G(^(0)),U,5)=DUZ"
"RTN","PXRMLPOE",62,0)
 S DIC("A")=TEXT
"RTN","PXRMLPOE",63,0)
 W !
"RTN","PXRMLPOE",64,0)
 D ^DIC
"RTN","PXRMLPOE",65,0)
 I X="" W !,"An OE/RR Team name must be entered" G OT1
"RTN","PXRMLPOE",66,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMLPOE",67,0)
 I Y=-1 S DUOUT=1
"RTN","PXRMLPOE",68,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMLPOE",69,0)
 ;
"RTN","PXRMLPOE",70,0)
 ;Check if OK to overwrite
"RTN","PXRMLPOE",71,0)
 I $P(Y,U,3)'=1  D  Q:$D(DTOUT)  G:$D(DUOUT) OT1
"RTN","PXRMLPOE",72,0)
 .D OK
"RTN","PXRMLPOE",73,0)
 ;Return list ien
"RTN","PXRMLPOE",74,0)
 S LIST=$P(Y,U),NAME=$P(Y,U,2)
"RTN","PXRMLPOE",75,0)
 Q
"RTN","PXRMLPOE",76,0)
 ;
"RTN","PXRMLPOE",77,0)
UPDLST(IENO,LIST,NAME) ;Update patient list
"RTN","PXRMLPOE",78,0)
 N CNT,DA,DFN,DIK,DUOUT,FDA,FDAIEN,IEN,MSG,SUB,TEMP
"RTN","PXRMLPOE",79,0)
 ;Lock patient list
"RTN","PXRMLPOE",80,0)
 D LOCK(LIST) Q:$D(DUOUT)
"RTN","PXRMLPOE",81,0)
 ;
"RTN","PXRMLPOE",82,0)
 ;Clear existing list
"RTN","PXRMLPOE",83,0)
 S SUB=0
"RTN","PXRMLPOE",84,0)
 F  S SUB=$O(^OR(100.21,LIST,10,SUB)) Q:'SUB  D
"RTN","PXRMLPOE",85,0)
 . S DA=SUB,DA(1)=LIST,DIK="^OR(100.21,"_DA(1)_",10,"
"RTN","PXRMLPOE",86,0)
 . D ^DIK
"RTN","PXRMLPOE",87,0)
 ;
"RTN","PXRMLPOE",88,0)
 ;DBIA #4561 covers putting data into OE/RR list.
"RTN","PXRMLPOE",89,0)
 ;Create the stub in file #100.21
"RTN","PXRMLPOE",90,0)
 W !,"Updating "_NAME
"RTN","PXRMLPOE",91,0)
 S FDA(100.21,"?1,",.01)=NAME
"RTN","PXRMLPOE",92,0)
 S FDA(100.21,"?1,",.1)=$$UP^XLFSTR(NAME)
"RTN","PXRMLPOE",93,0)
 S FDA(100.21,"?1,",1)="TM"
"RTN","PXRMLPOE",94,0)
 S FDA(100.21,"?1,",1.6)=DUZ
"RTN","PXRMLPOE",95,0)
 S FDA(100.21,"?1,",1.65)=$$NOW^XLFDT
"RTN","PXRMLPOE",96,0)
 S FDA(100.21,"?1,",11)="0"
"RTN","PXRMLPOE",97,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMLPOE",98,0)
 ;Error
"RTN","PXRMLPOE",99,0)
 I $D(MSG) D  Q
"RTN","PXRMLPOE",100,0)
 . N TEXT
"RTN","PXRMLPOE",101,0)
 . S TEXT(1)="The patient list copy failed."
"RTN","PXRMLPOE",102,0)
 . S TEXT(2)="Examine the following error message for the reason."
"RTN","PXRMLPOE",103,0)
 . S TEXT(3)=""
"RTN","PXRMLPOE",104,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMLPOE",105,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMLPOE",106,0)
 . W ! H 3
"RTN","PXRMLPOE",107,0)
 . D UNLOCK(LIST)
"RTN","PXRMLPOE",108,0)
 ;Do a direct copy of the patients.
"RTN","PXRMLPOE",109,0)
 S (CNT,SUB)=0,IEN=FDAIEN(1)
"RTN","PXRMLPOE",110,0)
 F  S SUB=$O(^PXRMXP(810.5,IENO,30,SUB)) Q:'SUB  D
"RTN","PXRMLPOE",111,0)
 . S DFN=$P($G(^PXRMXP(810.5,IENO,30,SUB,0)),U,1) Q:'DFN
"RTN","PXRMLPOE",112,0)
 . S CNT=CNT+1
"RTN","PXRMLPOE",113,0)
 . S TEMP=DFN_";DPT("
"RTN","PXRMLPOE",114,0)
 . S ^OR(100.21,IEN,10,CNT,0)=TEMP
"RTN","PXRMLPOE",115,0)
 . S ^OR(100.21,IEN,10,"B",TEMP,CNT)=""
"RTN","PXRMLPOE",116,0)
 . S ^OR(100.21,"AB",TEMP,IEN,CNT)=""
"RTN","PXRMLPOE",117,0)
  S ^OR(100.21,IEN,10,0)="^100.2101AV"_U_CNT_U_CNT
"RTN","PXRMLPOE",118,0)
 ;Unlock patient list
"RTN","PXRMLPOE",119,0)
 D UNLOCK(LIST)
"RTN","PXRMLPOE",120,0)
 W !!,"Completed copy of patient list '"_ONAME_"'"
"RTN","PXRMLPOE",121,0)
 W !,"into OE/RR Team '"_NNAME_"'",! H 3
"RTN","PXRMLPOE",122,0)
 Q
"RTN","PXRMLPOE",123,0)
 ;
"RTN","PXRMLPOE",124,0)
UNLOCK(LIST) ;Unlock the list
"RTN","PXRMLPOE",125,0)
 L -^PXRMXP(100.21,LIST)
"RTN","PXRMLPOE",126,0)
 Q
"RTN","PXRMLPOE",127,0)
 ;
"RTN","PXRMMSER")
0^115^B106758017
"RTN","PXRMMSER",1,0)
PXRMMSER ;SLC/PKR,AJB - Computed findings for military service information. ;12/11/2013
"RTN","PXRMMSER",2,0)
 ;;2.0;CLINICAL REMINDERS;**11,12,21,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMMSER",3,0)
 ;
"RTN","PXRMMSER",4,0)
 ;======================================================
"RTN","PXRMMSER",5,0)
AORANGE(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",6,0)
 ;finding will be true if the agent orange exposure registration
"RTN","PXRMMSER",7,0)
 ;date is in the date range specified by Beginning Date/Time
"RTN","PXRMMSER",8,0)
 ;and Ending Date/Time. VA-AGENT ORANGE EXPOSURE.
"RTN","PXRMMSER",9,0)
 N RDATE
"RTN","PXRMMSER",10,0)
 S NFOUND=0
"RTN","PXRMMSER",11,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",12,0)
 S TEST=^TMP($J,"SVC",DFN,2)
"RTN","PXRMMSER",13,0)
 I 'TEST Q
"RTN","PXRMMSER",14,0)
 S RDATE=+$P(^TMP($J,"SVC",DFN,2,1),U,1)
"RTN","PXRMMSER",15,0)
 I (RDATE=0)!(RDATE<BDT)!(RDATE>EDT) S TEST=0 Q
"RTN","PXRMMSER",16,0)
 S NFOUND=1
"RTN","PXRMMSER",17,0)
 S TEST(NFOUND)=1,DATE(NFOUND)=RDATE
"RTN","PXRMMSER",18,0)
 S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=$P(^TMP($J,"SVC",DFN,2,5),U,2)
"RTN","PXRMMSER",19,0)
 S TEXT(NFOUND)="Agent orange exposure registration date: "_$$FMTE^XLFDT(RDATE,"5Z")_"; location: "_DATA(NFOUND,"LOCATION")
"RTN","PXRMMSER",20,0)
 Q
"RTN","PXRMMSER",21,0)
 ;
"RTN","PXRMMSER",22,0)
 ;======================================================
"RTN","PXRMMSER",23,0)
COMBAT(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",24,0)
 ;finding will be true if combat service is found in the
"RTN","PXRMMSER",25,0)
 ;date range the date range specified by Beginning Date/Time
"RTN","PXRMMSER",26,0)
 ;and Ending Date/Time. VA-COMBAT SERVICE.
"RTN","PXRMMSER",27,0)
 N FDATE,TDATE
"RTN","PXRMMSER",28,0)
 S NFOUND=0
"RTN","PXRMMSER",29,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",30,0)
 S TEST=^TMP($J,"SVC",DFN,5)
"RTN","PXRMMSER",31,0)
 I 'TEST Q
"RTN","PXRMMSER",32,0)
 S FDATE=$P(^TMP($J,"SVC",DFN,5,1),U,1)
"RTN","PXRMMSER",33,0)
 S TDATE=$P(^TMP($J,"SVC",DFN,5,2),U,1)
"RTN","PXRMMSER",34,0)
 I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" S TEST=0 Q
"RTN","PXRMMSER",35,0)
 S NFOUND=1
"RTN","PXRMMSER",36,0)
 S TEST(NFOUND)=1,DATE(NFOUND)=FDATE
"RTN","PXRMMSER",37,0)
 S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=$P(^TMP($J,"SVC",DFN,5,3),U,2)
"RTN","PXRMMSER",38,0)
 S TEXT(NFOUND)="Combat service from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")_"; location: "_DATA(NFOUND,"LOCATION")
"RTN","PXRMMSER",39,0)
 Q
"RTN","PXRMMSER",40,0)
 ;
"RTN","PXRMMSER",41,0)
 ;======================================================
"RTN","PXRMMSER",42,0)
CVELIG(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding for
"RTN","PXRMMSER",43,0)
 ;combat vet eligiblity data. VA-COMBAT VET ELIGIBILITY.
"RTN","PXRMMSER",44,0)
 N CV,EDATE,ELIG,RESULT
"RTN","PXRMMSER",45,0)
 ;DBIA #4156
"RTN","PXRMMSER",46,0)
 S RESULT=$$CVEDT^DGCV(DFN,$$NOW^PXRMDATE)
"RTN","PXRMMSER",47,0)
 ;RESULT=(1,0,-1)^End Date (if populated, otherwise null)^CV
"RTN","PXRMMSER",48,0)
 ;      (piece 1)  1 - qualifies as a CV
"RTN","PXRMMSER",49,0)
 ;                 0 - does not qualify as a CV
"RTN","PXRMMSER",50,0)
 ;                -1 - bad DFN or date
"RTN","PXRMMSER",51,0)
 ;      (piece 3)  1 - vet was eligible on date specified (or DT)      
"RTN","PXRMMSER",52,0)
 ;                 0 - vet was not eligible on date specified (or DT)
"RTN","PXRMMSER",53,0)
 S CV=$P(RESULT,U,1),EDATE=$P(RESULT,U,2),ELIG=$P(RESULT,U,3)
"RTN","PXRMMSER",54,0)
 I 'CV S NFOUND=0 Q
"RTN","PXRMMSER",55,0)
 S NFOUND=1
"RTN","PXRMMSER",56,0)
 S TEST(NFOUND)=CV,DATE(NFOUND)=$$NOW^PXRMDATE
"RTN","PXRMMSER",57,0)
 S TEXT(NFOUND)="End date is "_$$FMTE^XLFDT(EDATE,"5Z")
"RTN","PXRMMSER",58,0)
 S DATA(NFOUND,"END DATE")=EDATE
"RTN","PXRMMSER",59,0)
 S DATA(NFOUND,"VALUE")=$S(ELIG:"ELIGIBLE",1:"EXPIRED")
"RTN","PXRMMSER",60,0)
 S DATA(NFOUND,"STATUS")=DATA(NFOUND,"VALUE")
"RTN","PXRMMSER",61,0)
 Q
"RTN","PXRMMSER",62,0)
 ;
"RTN","PXRMMSER",63,0)
 ;======================================================
"RTN","PXRMMSER",64,0)
DISCHDT(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;
"RTN","PXRMMSER",65,0)
 ; This computed finding returns the service separation date.
"RTN","PXRMMSER",66,0)
 ; CF.VA-SERVICE SEPARATION DATES
"RTN","PXRMMSER",67,0)
 N IND
"RTN","PXRMMSER",68,0)
 D MSDATA(DFN,NGET,BDT,EDT,.NFOUND,.TEST,.DATE,.DATA,.TEXT,1)
"RTN","PXRMMSER",69,0)
 F IND=1:1:NFOUND S DATA(IND,"VALUE")=DATE(IND)
"RTN","PXRMMSER",70,0)
 Q
"RTN","PXRMMSER",71,0)
 ;
"RTN","PXRMMSER",72,0)
 ;======================================================
"RTN","PXRMMSER",73,0)
GETSVCD(DFN) ;Get the SVC^VADPT service data.
"RTN","PXRMMSER",74,0)
 I $D(^TMP($J,"SVC",DFN)) Q
"RTN","PXRMMSER",75,0)
 N VAERR,VAROOT
"RTN","PXRMMSER",76,0)
 S VAROOT="^TMP($J,""SVC"",DFN)"
"RTN","PXRMMSER",77,0)
 D SVC^VADPT
"RTN","PXRMMSER",78,0)
 Q
"RTN","PXRMMSER",79,0)
 ;
"RTN","PXRMMSER",80,0)
 ;======================================================
"RTN","PXRMMSER",81,0)
MSDATA(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT,SEPDTR) ;This computed
"RTN","PXRMMSER",82,0)
 ;finding will return service branch information.
"RTN","PXRMMSER",83,0)
 ;CF.VA-SERVICE BRANCH.
"RTN","PXRMMSER",84,0)
 ;DBIA #5354
"RTN","PXRMMSER",85,0)
 N ENTRYDTA,MSDATA,NEPS
"RTN","PXRMMSER",86,0)
 D MSDATA^DGMSE(DFN,.NEPS,.ENTRYDTA,.MSDATA)
"RTN","PXRMMSER",87,0)
 I NEPS=0 S NFOUND=0 Q
"RTN","PXRMMSER",88,0)
 N BRANCH,DISTYPE,ENTRYDT,ENTRYDTO,IND,NOW
"RTN","PXRMMSER",89,0)
 N SCOMP,SDIR,SEPDT,SEPDTC,SEPDTCO
"RTN","PXRMMSER",90,0)
 S NOW=$$NOW^PXRMDATE
"RTN","PXRMMSER",91,0)
 S SDIR=$S(NGET>0:-1,1:1)
"RTN","PXRMMSER",92,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMMSER",93,0)
 S NFOUND=0,ENTRYDT=""
"RTN","PXRMMSER",94,0)
 F  S ENTRYDT=$O(ENTRYDTA(ENTRYDT),SDIR) Q:(ENTRYDT="")!(NFOUND=NGET)  D
"RTN","PXRMMSER",95,0)
 . S IND=ENTRYDTA(ENTRYDT)
"RTN","PXRMMSER",96,0)
 . S SEPDT=MSDATA(IND,"SEPARATION DATE")
"RTN","PXRMMSER",97,0)
 .;Check for separation date required.
"RTN","PXRMMSER",98,0)
 . I SEPDTR,SEPDT="" Q
"RTN","PXRMMSER",99,0)
 . I SEPDTR,(SEPDT>EDT) Q
"RTN","PXRMMSER",100,0)
 .;If there is no Separation Date use the evaluation date and time.
"RTN","PXRMMSER",101,0)
 . S SEPDTC=$S(SEPDT'="":SEPDT,1:NOW)
"RTN","PXRMMSER",102,0)
 . I $$OVERLAP^PXRMINDX(ENTRYDT,SEPDTC,BDT,EDT)'="O" Q
"RTN","PXRMMSER",103,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMMSER",104,0)
 . S TEST(NFOUND)=1
"RTN","PXRMMSER",105,0)
 . S DATE(NFOUND)=MSDATA(IND,"DATE")
"RTN","PXRMMSER",106,0)
 . S BRANCH=MSDATA(IND,"BRANCH")
"RTN","PXRMMSER",107,0)
 . I BRANCH="" S BRANCH="<NO DATA>"
"RTN","PXRMMSER",108,0)
 . S DATA(NFOUND,"BRANCH")=BRANCH
"RTN","PXRMMSER",109,0)
 . S SCOMP=MSDATA(IND,"SERVICE COMPONENT")
"RTN","PXRMMSER",110,0)
 . S SCOMP=$S(SCOMP="":"<NO DATA>",1:SCOMP)
"RTN","PXRMMSER",111,0)
 . S DATA(NFOUND,"SERVICE COMPONENT")=SCOMP
"RTN","PXRMMSER",112,0)
 . S DISTYPE=MSDATA(IND,"DISCHARGE TYPE")
"RTN","PXRMMSER",113,0)
 . S DISTYPE=$S(DISTYPE="":"<NO DATA>",1:DISTYPE)
"RTN","PXRMMSER",114,0)
 . S DATA(NFOUND,"DISCHARGE TYPE")=DISTYPE
"RTN","PXRMMSER",115,0)
 . S ENTRYDTO=$$FMTE^XLFDT(ENTRYDT,"5Z")
"RTN","PXRMMSER",116,0)
 . S SEPDTO=$S(SEPDT="":"<NO DATA>",1:$$FMTE^XLFDT(SEPDT,"5Z"))
"RTN","PXRMMSER",117,0)
 . S TEXT(NFOUND)="Service from "_ENTRYDTO_" to "_SEPDTO_" in "_BRANCH_"; service component "_SCOMP_"; discharge "_DISTYPE_"."
"RTN","PXRMMSER",118,0)
 Q
"RTN","PXRMMSER",119,0)
 ;
"RTN","PXRMMSER",120,0)
 ;======================================================
"RTN","PXRMMSER",121,0)
OEF(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",122,0)
 ;finding will return OEF service information in the date range
"RTN","PXRMMSER",123,0)
 ;specified by Beginning Date/Time and Ending Date/Time.
"RTN","PXRMMSER",124,0)
 ;VA-OEF SERVICE.
"RTN","PXRMMSER",125,0)
 N FDATE,IND,SDIR,TDATE,TEMP
"RTN","PXRMMSER",126,0)
 S NFOUND=0
"RTN","PXRMMSER",127,0)
 S SDIR=$S(NGET<0:1,1:-1)
"RTN","PXRMMSER",128,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMMSER",129,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",130,0)
 I ^TMP($J,"SVC",DFN,12)=0 Q
"RTN","PXRMMSER",131,0)
 S IND=""
"RTN","PXRMMSER",132,0)
 F  S IND=$O(^TMP($J,"SVC",DFN,12,IND)) Q:IND=""  D
"RTN","PXRMMSER",133,0)
 . S FDATE=$P(^TMP($J,"SVC",DFN,12,IND,2),U,1)
"RTN","PXRMMSER",134,0)
 . I FDATE="" Q
"RTN","PXRMMSER",135,0)
 . S TDATE=$P(^TMP($J,"SVC",DFN,12,IND,3),U,1)
"RTN","PXRMMSER",136,0)
 . I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" Q
"RTN","PXRMMSER",137,0)
 . S TEMP(FDATE,"TEST")=1
"RTN","PXRMMSER",138,0)
 . S TEMP(FDATE,"DATA","LOCATION")=$P(^TMP($J,"SVC",DFN,12,IND,1),U,2)
"RTN","PXRMMSER",139,0)
 . S TEMP(FDATE,"TEXT")="OEF service from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")_"; location: "_TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",140,0)
 S FDATE=""
"RTN","PXRMMSER",141,0)
 F  S FDATE=$O(TEMP(FDATE),SDIR) Q:(FDATE="")!(NFOUND=NGET)  D
"RTN","PXRMMSER",142,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMMSER",143,0)
 . S TEST(NFOUND)=TEMP(FDATE,"TEST"),DATE(NFOUND)=FDATE
"RTN","PXRMMSER",144,0)
 . S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",145,0)
 . S TEXT(NFOUND)=TEMP(FDATE,"TEXT")
"RTN","PXRMMSER",146,0)
 Q
"RTN","PXRMMSER",147,0)
 ;
"RTN","PXRMMSER",148,0)
 ;======================================================
"RTN","PXRMMSER",149,0)
OEIF(NGET,BDT,EDT,TGLIST,PARAM) ;List computed finding to build patient
"RTN","PXRMMSER",150,0)
 ;list based on OEF/OIF/UNK data.
"RTN","PXRMMSER",151,0)
 ;VA-OEF/OIF
"RTN","PXRMMSER",152,0)
 N DA,DATE,DFN,FDATE,LOC,LOCATION,NFOUND,TDATE
"RTN","PXRMMSER",153,0)
 K ^TMP($J,TGLIST)
"RTN","PXRMMSER",154,0)
 ;DBIA #5354
"RTN","PXRMMSER",155,0)
 D OEIF^DGMSE(BDT,EDT,"OEIF")
"RTN","PXRMMSER",156,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMMSER",157,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMMSER",158,0)
 S LOCATION=$G(PARAM)
"RTN","PXRMMSER",159,0)
 I LOCATION="" S LOCATION="ANY"
"RTN","PXRMMSER",160,0)
 S DFN=""
"RTN","PXRMMSER",161,0)
 F  S DFN=$O(^TMP($J,"OEIF",DFN)) Q:DFN=""  D
"RTN","PXRMMSER",162,0)
 . S FDATE=""
"RTN","PXRMMSER",163,0)
 . F  S FDATE=$O(^TMP($J,"OEIF",DFN,FDATE)) Q:FDATE=""  D
"RTN","PXRMMSER",164,0)
 .. S TDATE=""
"RTN","PXRMMSER",165,0)
 .. F  S TDATE=$O(^TMP($J,"OEIF",DFN,FDATE,TDATE)) Q:TDATE=""  D
"RTN","PXRMMSER",166,0)
 ... S LOC=""
"RTN","PXRMMSER",167,0)
 ... F  S LOC=$O(^TMP($J,"OEIF",DFN,FDATE,TDATE,LOC)) Q:LOC=""  D
"RTN","PXRMMSER",168,0)
 .... S NFOUND=+$O(^TMP($J,TGLIST,DFN,""))
"RTN","PXRMMSER",169,0)
 .... I NFOUND=NGET Q
"RTN","PXRMMSER",170,0)
 .... I (LOCATION["ANY")!(LOCATION[LOC) D
"RTN","PXRMMSER",171,0)
 ..... S DA=""
"RTN","PXRMMSER",172,0)
 ..... F  S DA=$O(^TMP($J,"OEIF",DFN,FDATE,TDATE,LOC,DA)) Q:DA=""  D
"RTN","PXRMMSER",173,0)
 ...... S NFOUND=NFOUND+1
"RTN","PXRMMSER",174,0)
 ...... S ^TMP($J,TGLIST,DFN,NFOUND)=DFN_";"_DA_U_DATE_U_2_U_LOC_U_TDATE_";"_FDATE
"RTN","PXRMMSER",175,0)
 K ^TMP($J,"OEIF")
"RTN","PXRMMSER",176,0)
 Q
"RTN","PXRMMSER",177,0)
 ;
"RTN","PXRMMSER",178,0)
 ;======================================================
"RTN","PXRMMSER",179,0)
OIF(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",180,0)
 ;finding will return OIF service information in the date range
"RTN","PXRMMSER",181,0)
 ;specified by Beginning Date/Time and Ending Date/Time.
"RTN","PXRMMSER",182,0)
 ;VA-OIF SERVICE.
"RTN","PXRMMSER",183,0)
 N FDATE,IND,SDIR,TDATE,TEMP
"RTN","PXRMMSER",184,0)
 S NFOUND=0
"RTN","PXRMMSER",185,0)
 S SDIR=$S(NGET<0:1,1:-1)
"RTN","PXRMMSER",186,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMMSER",187,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",188,0)
 I ^TMP($J,"SVC",DFN,11)=0 Q
"RTN","PXRMMSER",189,0)
 S IND=""
"RTN","PXRMMSER",190,0)
 F  S IND=$O(^TMP($J,"SVC",DFN,11,IND)) Q:IND=""  D
"RTN","PXRMMSER",191,0)
 . S FDATE=$P(^TMP($J,"SVC",DFN,11,IND,2),U,1)
"RTN","PXRMMSER",192,0)
 . I FDATE="" Q
"RTN","PXRMMSER",193,0)
 . S TDATE=$P(^TMP($J,"SVC",DFN,11,IND,3),U,1)
"RTN","PXRMMSER",194,0)
 . I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" Q
"RTN","PXRMMSER",195,0)
 . S TEMP(FDATE,"TEST")=1
"RTN","PXRMMSER",196,0)
 . S TEMP(FDATE,"DATA","LOCATION")=$P(^TMP($J,"SVC",DFN,11,IND,1),U,2)
"RTN","PXRMMSER",197,0)
 . S TEMP(FDATE,"TEXT")="OIF service from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")_"; location: "_TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",198,0)
 S FDATE=""
"RTN","PXRMMSER",199,0)
 F  S FDATE=$O(TEMP(FDATE),SDIR) Q:(FDATE="")!(NFOUND=NGET)  D
"RTN","PXRMMSER",200,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMMSER",201,0)
 . S TEST(NFOUND)=TEMP(FDATE,"TEST"),DATE(NFOUND)=FDATE
"RTN","PXRMMSER",202,0)
 . S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",203,0)
 . S TEXT(NFOUND)=TEMP(FDATE,"TEXT")
"RTN","PXRMMSER",204,0)
 Q
"RTN","PXRMMSER",205,0)
 ;
"RTN","PXRMMSER",206,0)
 ;======================================================
"RTN","PXRMMSER",207,0)
PHEART(DFN,TEST,DATE,VALUE,TEXT) ;Single value computed finding for
"RTN","PXRMMSER",208,0)
 ;purple heart data. VA-PURPLE HEART.
"RTN","PXRMMSER",209,0)
 N CV,EDATE,ELIG,RESULT
"RTN","PXRMMSER",210,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",211,0)
 S TEST=^TMP($J,"SVC",DFN,9)
"RTN","PXRMMSER",212,0)
 I 'TEST Q
"RTN","PXRMMSER",213,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMMSER",214,0)
 S VALUE=""
"RTN","PXRMMSER",215,0)
 S TEXT="Patient is a Purple Heart recipient."
"RTN","PXRMMSER",216,0)
 Q
"RTN","PXRMMSER",217,0)
 ;
"RTN","PXRMMSER",218,0)
 ;======================================================
"RTN","PXRMMSER",219,0)
POW(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",220,0)
 ;finding will be true if the patient was a POW in the date range
"RTN","PXRMMSER",221,0)
 ;specified by Beginning Date/Time and Ending Date/Time.
"RTN","PXRMMSER",222,0)
 ;VA-POW.
"RTN","PXRMMSER",223,0)
 N FDATE,TDATE
"RTN","PXRMMSER",224,0)
 S NFOUND=0
"RTN","PXRMMSER",225,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",226,0)
 S TEST=^TMP($J,"SVC",DFN,4)
"RTN","PXRMMSER",227,0)
 I 'TEST Q
"RTN","PXRMMSER",228,0)
 S FDATE=$P(^TMP($J,"SVC",DFN,4,1),U,1)
"RTN","PXRMMSER",229,0)
 S TDATE=$P(^TMP($J,"SVC",DFN,4,2),U,1)
"RTN","PXRMMSER",230,0)
 I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" S TEST=0 Q
"RTN","PXRMMSER",231,0)
 S NFOUND=1
"RTN","PXRMMSER",232,0)
 S TEST(NFOUND)=1,DATE(NFOUND)=FDATE
"RTN","PXRMMSER",233,0)
 S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=$P(^TMP($J,"SVC",DFN,4,3),U,2)
"RTN","PXRMMSER",234,0)
 S TEXT(NFOUND)="Patient was a POW from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")_"; location: "_DATA(NFOUND,"LOCATION")
"RTN","PXRMMSER",235,0)
 Q
"RTN","PXRMMSER",236,0)
 ;
"RTN","PXRMMSER",237,0)
 ;======================================================
"RTN","PXRMMSER",238,0)
RADEXP(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;;This computed
"RTN","PXRMMSER",239,0)
 ;finding will be true if the radiation exposure registration
"RTN","PXRMMSER",240,0)
 ;date is in the date range specified by Beginning Date/Time
"RTN","PXRMMSER",241,0)
 ;and Ending Date/Time. DVA-RADIATION EXPOSURE.
"RTN","PXRMMSER",242,0)
 N RDATE
"RTN","PXRMMSER",243,0)
 S NFOUND=0
"RTN","PXRMMSER",244,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",245,0)
 S TEST=^TMP($J,"SVC",DFN,3)
"RTN","PXRMMSER",246,0)
 I 'TEST Q
"RTN","PXRMMSER",247,0)
 S RDATE=$P(^TMP($J,"SVC",DFN,3,1),U,1)
"RTN","PXRMMSER",248,0)
 I (RDATE<BDT)!(RDATE>EDT) S TEST=0 Q
"RTN","PXRMMSER",249,0)
 S NFOUND=1
"RTN","PXRMMSER",250,0)
 S TEST(NFOUND)=1,DATE(NFOUND)=RDATE
"RTN","PXRMMSER",251,0)
 S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"EXPOSURE METHOD"))=$P(^TMP($J,"SVC",DFN,3,2),U,2)
"RTN","PXRMMSER",252,0)
 S TEXT(NFOUND)="Radiation exposure registration date: "_$$FMTE^XLFDT(RDATE,"5Z")_"; exposure method: "_DATA(NFOUND,"EXPOSURE METHOD")
"RTN","PXRMMSER",253,0)
 Q
"RTN","PXRMMSER",254,0)
 ;
"RTN","PXRMMSER",255,0)
 ;======================================================
"RTN","PXRMMSER",256,0)
SBRANCH(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",257,0)
 ;finding will return service branch information.
"RTN","PXRMMSER",258,0)
 ;CF.VA-SERVICE BRANCH.
"RTN","PXRMMSER",259,0)
 N IND
"RTN","PXRMMSER",260,0)
 D MSDATA(DFN,NGET,BDT,EDT,.NFOUND,.TEST,.DATE,.DATA,.TEXT,0)
"RTN","PXRMMSER",261,0)
 F IND=1:1:NFOUND S DATA(IND,"VALUE")=DATA(IND,"BRANCH")
"RTN","PXRMMSER",262,0)
 Q
"RTN","PXRMMSER",263,0)
 ;
"RTN","PXRMMSER",264,0)
 ;======================================================
"RTN","PXRMMSER",265,0)
UNKOEIF(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed
"RTN","PXRMMSER",266,0)
 ;finding will return unknown OEF/OIF service information in the date
"RTN","PXRMMSER",267,0)
 ;range specified by Beginning Date/Time and Ending Date/Time.
"RTN","PXRMMSER",268,0)
 ;VA-UNKNOWN OEF/OIF SERVICE.
"RTN","PXRMMSER",269,0)
 N FDATE,IND,SDIR,TDATE,TEMP
"RTN","PXRMMSER",270,0)
 S NFOUND=0
"RTN","PXRMMSER",271,0)
 S SDIR=$S(NGET<0:1,1:-1)
"RTN","PXRMMSER",272,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMMSER",273,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",274,0)
 I ^TMP($J,"SVC",DFN,13)=0 Q
"RTN","PXRMMSER",275,0)
 S IND=""
"RTN","PXRMMSER",276,0)
 F  S IND=$O(^TMP($J,"SVC",DFN,13,IND)) Q:IND=""  D
"RTN","PXRMMSER",277,0)
 . S FDATE=$P(^TMP($J,"SVC",DFN,13,IND,2),U,1)
"RTN","PXRMMSER",278,0)
 . I FDATE="" Q
"RTN","PXRMMSER",279,0)
 . S TDATE=$P(^TMP($J,"SVC",DFN,13,IND,3),U,1)
"RTN","PXRMMSER",280,0)
 . I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" Q
"RTN","PXRMMSER",281,0)
 . S TEMP(FDATE,"TEST")=1
"RTN","PXRMMSER",282,0)
 . S TEMP(FDATE,"DATA","LOCATION")=$P(^TMP($J,"SVC",DFN,13,IND,1),U,2)
"RTN","PXRMMSER",283,0)
 . S TEMP(FDATE,"TEXT")="OEF/OIF service from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")_"; location: "_TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",284,0)
 S FDATE=""
"RTN","PXRMMSER",285,0)
 F  S FDATE=$O(TEMP(FDATE),SDIR) Q:(FDATE="")!(NFOUND=NGET)  D
"RTN","PXRMMSER",286,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMMSER",287,0)
 . S TEST(NFOUND)=TEMP(FDATE,"TEST"),DATE(NFOUND)=FDATE
"RTN","PXRMMSER",288,0)
 . S (DATA(NFOUND,"VALUE"),DATA(NFOUND,"LOCATION"))=TEMP(FDATE,"DATA","LOCATION")
"RTN","PXRMMSER",289,0)
 . S TEXT(NFOUND)=TEMP(FDATE,"TEXT")
"RTN","PXRMMSER",290,0)
 Q
"RTN","PXRMMSER",291,0)
 ;
"RTN","PXRMMSER",292,0)
 ;======================================================
"RTN","PXRMMSER",293,0)
VETERAN(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking if a
"RTN","PXRMMSER",294,0)
 ;patient is a veteran. VA-VETERAN.
"RTN","PXRMMSER",295,0)
 N VAEL
"RTN","PXRMMSER",296,0)
 S DATE=$$NOW^PXRMDATE
"RTN","PXRMMSER",297,0)
 D ELIG^VADPT
"RTN","PXRMMSER",298,0)
 S TEST=VAEL(4)
"RTN","PXRMMSER",299,0)
 S VALUE=""
"RTN","PXRMMSER",300,0)
 D KVA^VADPT
"RTN","PXRMMSER",301,0)
 Q
"RTN","PXRMMSER",302,0)
 ;
"RTN","PXRMMSER",303,0)
 ;======================================================
"RTN","PXRMMSER",304,0)
VIET(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;This computed will be
"RTN","PXRMMSER",305,0)
 ;true if Vietnam service in the date range specified by BDT and EDT
"RTN","PXRMMSER",306,0)
 ;is found. Note even though it is a multi structure it can only
"RTN","PXRMMSER",307,0)
 ;return one occurrence. VA-VIETNAM SERVICE.
"RTN","PXRMMSER",308,0)
 N FDATE,TDATE
"RTN","PXRMMSER",309,0)
 S NFOUND=0
"RTN","PXRMMSER",310,0)
 D GETSVCD(DFN)
"RTN","PXRMMSER",311,0)
 S TEST=^TMP($J,"SVC",DFN,1)
"RTN","PXRMMSER",312,0)
 I 'TEST Q
"RTN","PXRMMSER",313,0)
 S FDATE=$P(^TMP($J,"SVC",DFN,1,1),U,1)
"RTN","PXRMMSER",314,0)
 S TDATE=$P(^TMP($J,"SVC",DFN,1,2),U,1)
"RTN","PXRMMSER",315,0)
 I $$OVERLAP^PXRMINDX(FDATE,TDATE,BDT,EDT)'="O" S TEST=0 Q
"RTN","PXRMMSER",316,0)
 S NFOUND=1
"RTN","PXRMMSER",317,0)
 S TEST(NFOUND)=1,DATE(NFOUND)=FDATE
"RTN","PXRMMSER",318,0)
 S TEXT(NFOUND)="Vietnam service from "_$$FMTE^XLFDT(FDATE,"5Z")_" to "_$$FMTE^XLFDT(TDATE,"5Z")
"RTN","PXRMMSER",319,0)
 Q
"RTN","PXRMMSER",320,0)
 ;
"RTN","PXRMORCH")
0^121^B34974913
"RTN","PXRMORCH",1,0)
PXRMORCH ;SLC/AGP - Reminder Order Checks API;05/14/2014
"RTN","PXRMORCH",2,0)
 ;;2.0;CLINICAL REMINDERS;**16,22,26**;Feb 04, 2005;Build 404
"RTN","PXRMORCH",3,0)
 ;
"RTN","PXRMORCH",4,0)
 Q
"RTN","PXRMORCH",5,0)
 ;
"RTN","PXRMORCH",6,0)
GETOCTXT(DFN,IEN,OI,SEV,PNAME,SUB,CNT) ;Get the Order Check text from
"RTN","PXRMORCH",7,0)
 ;rule IEN.
"RTN","PXRMORCH",8,0)
 N LC,NFL,NIN,NOUT,PXRMRM,TEXTIN,TEXTOUT
"RTN","PXRMORCH",9,0)
 ;If formatted text is stored just copy it.
"RTN","PXRMORCH",10,0)
 S NFL=$P(^PXD(801.1,IEN,5),U,2)
"RTN","PXRMORCH",11,0)
 I NFL>0 D  Q
"RTN","PXRMORCH",12,0)
 . F LC=1:1:NFL S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=^PXD(801.1,IEN,6,LC,0)
"RTN","PXRMORCH",13,0)
 ;
"RTN","PXRMORCH",14,0)
 ;If there is no formatted text then the Order Check Text contains a
"RTN","PXRMORCH",15,0)
 ;TIU Object so call the Found/Not Found Text expansion.
"RTN","PXRMORCH",16,0)
 S NIN=$P(^PXD(801.1,IEN,5),U,1)
"RTN","PXRMORCH",17,0)
 F LC=1:1:NIN S TEXTIN(LC)=^PXD(801.1,IEN,4,LC,0)
"RTN","PXRMORCH",18,0)
 S PXRMRM=80,NOUT=0
"RTN","PXRMORCH",19,0)
 D FNFTXTO^PXRMFNFT(1,NIN,.TEXTIN,DFN,"",.NOUT,.TEXTOUT)
"RTN","PXRMORCH",20,0)
 F LC=1:1:NOUT S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=TEXTOUT(LC)
"RTN","PXRMORCH",21,0)
 Q
"RTN","PXRMORCH",22,0)
 ;
"RTN","PXRMORCH",23,0)
ADDRULES(TYPE,ITEM,LIST) ;
"RTN","PXRMORCH",24,0)
 I ITEM'>0 Q
"RTN","PXRMORCH",25,0)
 N IEN S IEN=0
"RTN","PXRMORCH",26,0)
 F  S IEN=$O(^PXD(801,"ADRUGR",TYPE,ITEM,IEN)) Q:IEN'>0  S LIST(IEN)=""
"RTN","PXRMORCH",27,0)
 Q
"RTN","PXRMORCH",28,0)
 ;
"RTN","PXRMORCH",29,0)
GETDRUG(DRGIEN,OI,LIST) ;
"RTN","PXRMORCH",30,0)
 ;add rules assigned to the drug
"RTN","PXRMORCH",31,0)
 D ADDRULES("DR",DRGIEN,.LIST)
"RTN","PXRMORCH",32,0)
 ;get drug information DBIA 4533
"RTN","PXRMORCH",33,0)
 D DATA^PSS50(DRGIEN,,DT,,,"PXRM DRUG")
"RTN","PXRMORCH",34,0)
 I $G(^TMP($J,"PXRM DRUG",0))'>0 Q
"RTN","PXRMORCH",35,0)
 ;add rules assigned to VA Generic
"RTN","PXRMORCH",36,0)
 D ADDRULES("DG",$P($G(^TMP($J,"PXRM DRUG",DRGIEN,20)),U),.LIST)
"RTN","PXRMORCH",37,0)
 ;add rules assigned to VA Drug Class
"RTN","PXRMORCH",38,0)
 D ADDRULES("DC",$P($G(^TMP($J,"PXRM DRUG",DRGIEN,25)),U),.LIST)
"RTN","PXRMORCH",39,0)
 I OI>0 Q
"RTN","PXRMORCH",40,0)
 ;get OI from DRUG
"RTN","PXRMORCH",41,0)
 N IEN,PSOI
"RTN","PXRMORCH",42,0)
 S PSOI=+$G(^TMP($J,"PXRM DRUG",DRGIEN,2.1)) I PSOI'>0 Q
"RTN","PXRMORCH",43,0)
 S OI=$$OITM^ORX8(PSOI,"99PSP") I OI'>0 Q
"RTN","PXRMORCH",44,0)
 S IEN=0 F  S IEN=$O(^PXD(801,"AOIR",OI,IEN)) Q:IEN'>0  S LIST(IEN)=""
"RTN","PXRMORCH",45,0)
 Q
"RTN","PXRMORCH",46,0)
 ;
"RTN","PXRMORCH",47,0)
GETRULES(OI,DRUG,LIST) ;
"RTN","PXRMORCH",48,0)
 ;get rules for OI
"RTN","PXRMORCH",49,0)
 N DRGIEN,IEN,OIID
"RTN","PXRMORCH",50,0)
 I OI>0 S IEN=0 F  S IEN=$O(^PXD(801,"AOIR",OI,IEN)) Q:IEN'>0  S LIST(IEN)=""
"RTN","PXRMORCH",51,0)
 ;detemine if pharmacy OI
"RTN","PXRMORCH",52,0)
 I OI>0 S OIID=$P($G(^ORD(101.43,OI,0)),U,2) I OIID'["PSP" Q
"RTN","PXRMORCH",53,0)
 K ^TMP($J,"PXRM DRUG LIST"),^TMP($J,"PXRM DRUG")
"RTN","PXRMORCH",54,0)
 I DRUG>0 D GETDRUG(DRUG,OI,.LIST) G GETRULEX
"RTN","PXRMORCH",55,0)
 ;get drug(s) assocaited with the OI DBIA 4662
"RTN","PXRMORCH",56,0)
 D DRGIEN^PSS50P7(+OIID,DT,"PXRM DRUG LIST")
"RTN","PXRMORCH",57,0)
 I $G(^TMP($J,"PXRM DRUG LIST",0))'>0 Q
"RTN","PXRMORCH",58,0)
 S DRGIEN=0
"RTN","PXRMORCH",59,0)
 F  S DRGIEN=$O(^TMP($J,"PXRM DRUG LIST",DRGIEN)) Q:DRGIEN'>0  D GETDRUG(DRGIEN,OI,.LIST)
"RTN","PXRMORCH",60,0)
GETRULEX ;
"RTN","PXRMORCH",61,0)
 K ^TMP($J,"PXRM DRUG LIST"),^TMP($J,"PXRM DRUG")
"RTN","PXRMORCH",62,0)
 Q
"RTN","PXRMORCH",63,0)
 ;
"RTN","PXRMORCH",64,0)
ORDERCHK(DFN,OI,TEST,DRUG,TESTER) ;
"RTN","PXRMORCH",65,0)
 ;main order check API
"RTN","PXRMORCH",66,0)
 ;Input
"RTN","PXRMORCH",67,0)
 ;  OI=IEN of Orderable Item from file 101.43
"RTN","PXRMORCH",68,0)
 ;  DFN=Patient DFN
"RTN","PXRMORCH",69,0)
 ;  TEST=Value that matches the Testing Flag either 1 or 0
"RTN","PXRMORCH",70,0)
 ;
"RTN","PXRMORCH",71,0)
 ;Output
"RTN","PXRMORCH",72,0)
 ;  ^TMP($J,OI,SEV,DISPLAY NAME,n)=TEXT
"RTN","PXRMORCH",73,0)
 ;  SEV=is the value assigned to the severity field
"RTN","PXRMORCH",74,0)
 ;  DISPLAY NAME=is the value assigned to the Display Field Name
"RTN","PXRMORCH",75,0)
 ;
"RTN","PXRMORCH",76,0)
 ;K ^TMP($J,OI)
"RTN","PXRMORCH",77,0)
 N CNT,FLAG,IEN,IENOI,IENR,NODE,NUM,OIREM,PNAME,RIEN,RNAME
"RTN","PXRMORCH",78,0)
 N RULES,REMEVLST,RSTAT,SEV,SUB,TEXTTYPE,TIEN,TNAME,TSTAT
"RTN","PXRMORCH",79,0)
 ;
"RTN","PXRMORCH",80,0)
 ;loop through AOIR xref to find the group IEN and the corresponding
"RTN","PXRMORCH",81,0)
 ;Rules assigned to the orderable item
"RTN","PXRMORCH",82,0)
 ;
"RTN","PXRMORCH",83,0)
 S SUB=$S(DRUG>0:DRUG,1:OI)
"RTN","PXRMORCH",84,0)
 K ^TMP($J,SUB)
"RTN","PXRMORCH",85,0)
 D GETRULES(OI,DRUG,.RULES)
"RTN","PXRMORCH",86,0)
 S IEN=0 F  S IEN=$O(RULES(IEN)) Q:IEN'>0  D
"RTN","PXRMORCH",87,0)
 .S NODE=$G(^PXD(801.1,IEN,0))
"RTN","PXRMORCH",88,0)
 .S FLAG=$P(NODE,U,3)
"RTN","PXRMORCH",89,0)
 .I FLAG="I" Q
"RTN","PXRMORCH",90,0)
 .I TEST=1,FLAG="P" Q
"RTN","PXRMORCH",91,0)
 .I TEST=0,FLAG="T" Q
"RTN","PXRMORCH",92,0)
 .;S PNAME=IEN_U_$P(NODE,U,2)
"RTN","PXRMORCH",93,0)
 .S PNAME=$P(NODE,U,2)
"RTN","PXRMORCH",94,0)
 .S SEV=$P(NODE,U,5)
"RTN","PXRMORCH",95,0)
 .S TIEN=$P($G(^PXD(801.1,IEN,2)),U)
"RTN","PXRMORCH",96,0)
 .;
"RTN","PXRMORCH",97,0)
 .;Reminder Term defined used branching logic code
"RTN","PXRMORCH",98,0)
 .I TIEN>0 D  Q
"RTN","PXRMORCH",99,0)
 ..S TSTAT=$$TERM^PXRMDLLB(TIEN,DFN,IEN,"O")
"RTN","PXRMORCH",100,0)
 ..S CNT=0
"RTN","PXRMORCH",101,0)
 ..I $D(^XTMP("PXRM_DISEV",0)) D  Q
"RTN","PXRMORCH",102,0)
 ...S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)="Clinical Reminder evaluation is currently disabled; this order check cannot"
"RTN","PXRMORCH",103,0)
 ...S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)="be processed." Q
"RTN","PXRMORCH",104,0)
 ..I TESTER=1 D
"RTN","PXRMORCH",105,0)
 ...S TNAME=$P(^PXRMD(811.5,TIEN,0),U)
"RTN","PXRMORCH",106,0)
 ...S CNT=CNT+1,^TMP($J,SUB,3,PNAME,CNT)="INTERNAL: Reminder Term: "_TNAME_" Status: "_$S(TSTAT=1:"True",1:"False")
"RTN","PXRMORCH",107,0)
 ...;S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",108,0)
 ..I TSTAT'=$P(^PXD(801.1,IEN,2),U,2) D  Q
"RTN","PXRMORCH",109,0)
 ...I TESTER=1 D
"RTN","PXRMORCH",110,0)
 ....S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)="RULE FAILED"
"RTN","PXRMORCH",111,0)
 ....S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",112,0)
 ..;load order check text needs to be converted
"RTN","PXRMORCH",113,0)
 ..D GETOCTXT(DFN,IEN,OI,SEV,PNAME,SUB,.CNT)
"RTN","PXRMORCH",114,0)
 .;if not TERM do reminder evaluation
"RTN","PXRMORCH",115,0)
 .S NODE=$G(^PXD(801.1,IEN,3))
"RTN","PXRMORCH",116,0)
 .S RIEN=$P(NODE,U),RSTAT=$P(NODE,U,2),TEXTTYPE=$P(NODE,U,3)
"RTN","PXRMORCH",117,0)
 .S NODE=$G(^PXD(811.9,RIEN,0))
"RTN","PXRMORCH",118,0)
 .;
"RTN","PXRMORCH",119,0)
 .S RNAME=$S($P(NODE,U,3)'="":$P(NODE,U,3),1:$P(NODE,U))
"RTN","PXRMORCH",120,0)
 .D REMEVAL(DFN,OI,RIEN,PNAME,IEN,RNAME,TEXTTYPE,RSTAT,SEV,SUB,TESTER)
"RTN","PXRMORCH",121,0)
 Q
"RTN","PXRMORCH",122,0)
 ;
"RTN","PXRMORCH",123,0)
 ;
"RTN","PXRMORCH",124,0)
REMEVAL(DFN,OI,RIEN,PNAME,IEN,RNAME,TEXTTYE,RSTAT,SEV,SUB,TESTER) ;
"RTN","PXRMORCH",125,0)
 ;used by ORDECHK this does the reminder evaluation and put the
"RTN","PXRMORCH",126,0)
 ;reminder text in the temp global
"RTN","PXRMORCH",127,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMORTMP",$J)
"RTN","PXRMORCH",128,0)
 N CNT,NUM,STATUS
"RTN","PXRMORCH",129,0)
 S CNT=0
"RTN","PXRMORCH",130,0)
 ;
"RTN","PXRMORCH",131,0)
 ;standard reminder evaluation results, final output like the
"RTN","PXRMORCH",132,0)
 ;HS COMPONENT REMINDER FINDINGS
"RTN","PXRMORCH",133,0)
 ;
"RTN","PXRMORCH",134,0)
 D MAIN^PXRM(DFN,RIEN,55,1)
"RTN","PXRMORCH",135,0)
 S STATUS=$P($G(^TMP("PXRHM",$J,RIEN,RNAME)),U)
"RTN","PXRMORCH",136,0)
 I TESTER=1 D
"RTN","PXRMORCH",137,0)
 .S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)="INTERNAL: Reminder Definition: "_RNAME_" Status: "_STATUS
"RTN","PXRMORCH",138,0)
 .;S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",139,0)
 ;if not valid status return error message
"RTN","PXRMORCH",140,0)
 I (STATUS="CNBD")!(STATUS="ERROR") D  Q
"RTN","PXRMORCH",141,0)
 .S CNT=CNT+1,^TMP($J,SUB,3,PNAME,CNT)="Clinical Reminder evaluation is currently disabled; this order check cannot"
"RTN","PXRMORCH",142,0)
 .S CNT=CNT+1,^TMP($J,SUB,3,PNAME,CNT)="be processed."
"RTN","PXRMORCH",143,0)
 ;if Reminder Status does not match status field quit.
"RTN","PXRMORCH",144,0)
 I $$STATMTCH(STATUS,RSTAT)=0 D  Q
"RTN","PXRMORCH",145,0)
 .I TESTER=1 D
"RTN","PXRMORCH",146,0)
 ..S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)="RULE FAILED"
"RTN","PXRMORCH",147,0)
 ..S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",148,0)
 ;save off the evaluation temp global into another global. This
"RTN","PXRMORCH",149,0)
 ;prevent a problem with TIU Objects for reminder evaluation
"RTN","PXRMORCH",150,0)
 M ^TMP("PXRMORTMP",$J)=^TMP("PXRHM",$J)
"RTN","PXRMORCH",151,0)
 ;
"RTN","PXRMORCH",152,0)
 S NUM=0
"RTN","PXRMORCH",153,0)
 ;load order check text if requested
"RTN","PXRMORCH",154,0)
 I TEXTTYPE="O"!(TEXTTYPE="B") D GETOCTXT(DFN,IEN,OI,SEV,PNAME,SUB,.CNT)
"RTN","PXRMORCH",155,0)
 I TEXTTYPE="O" Q
"RTN","PXRMORCH",156,0)
 ;
"RTN","PXRMORCH",157,0)
 I TEXTTYPE="B" S CNT=CNT+1,^TMP($J,SUB,SEV,PNAME,CNT)=""
"RTN","PXRMORCH",158,0)
 ;build reminder text if requested
"RTN","PXRMORCH",159,0)
 F  S NUM=$O(^TMP("PXRMORTMP",$J,RIEN,RNAME,"TXT",NUM)) Q:NUM'>0  D
"RTN","PXRMORCH",160,0)
 .S CNT=CNT+1
"RTN","PXRMORCH",161,0)
 .S ^TMP($J,SUB,SEV,PNAME,CNT)=$G(^TMP("PXRMORTMP",$J,RIEN,RNAME,"TXT",NUM))
"RTN","PXRMORCH",162,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMORTMP",$J)
"RTN","PXRMORCH",163,0)
 Q
"RTN","PXRMORCH",164,0)
 ;
"RTN","PXRMORCH",165,0)
STATMTCH(REMSTAT,RULESTAT) ;
"RTN","PXRMORCH",166,0)
 I RULESTAT="D",REMSTAT["DUE" Q 1
"RTN","PXRMORCH",167,0)
 I RULESTAT="A",REMSTAT'="N/A",REMSTAT'="NEVER" Q 1
"RTN","PXRMORCH",168,0)
 I RULESTAT="N",$E(REMSTAT,1)="N" Q 1
"RTN","PXRMORCH",169,0)
 Q 0
"RTN","PXRMORCH",170,0)
 ;
"RTN","PXRMOUTC")
0^85^B38949930
"RTN","PXRMOUTC",1,0)
PXRMOUTC ; SLC/PKR - Clinical Maintenance output. ;01/06/2014
"RTN","PXRMOUTC",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,17,26**;Feb 04, 2005;Build 404
"RTN","PXRMOUTC",3,0)
 ;================================================
"RTN","PXRMOUTC",4,0)
CM(DEFARR,PXRMPDEM,PCLOGIC,RESLOGIC,RESDATE,FIEVAL,OUTTYPE) ;Prepare the 
"RTN","PXRMOUTC",5,0)
 ;Clinical maintenance (OUTTYPE=5) and order check (OUTTPYPE=55)
"RTN","PXRMOUTC",6,0)
 ;output.
"RTN","PXRMOUTC",7,0)
 N IND,JND,FINDING,FLIST,FTYPE
"RTN","PXRMOUTC",8,0)
 N HDR,NHDR,IFIEVAL,LIST,NFLINES,NTXT,NUM
"RTN","PXRMOUTC",9,0)
 N TEMP,TEXT
"RTN","PXRMOUTC",10,0)
 S NTXT=0
"RTN","PXRMOUTC",11,0)
 ;Check for a dead patient
"RTN","PXRMOUTC",12,0)
 I +$G(PXRMPDEM("DOD"))>0 D
"RTN","PXRMOUTC",13,0)
 . S TEMP=$$FMTE^XLFDT(PXRMPDEM("DOD"),"5DZ")
"RTN","PXRMOUTC",14,0)
 . S TEXT="Patient is deceased, date of death: "_TEMP
"RTN","PXRMOUTC",15,0)
 . D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",16,0)
 ;Display the frequency information only if there is resolution logic.
"RTN","PXRMOUTC",17,0)
 I RESLOGIC'="",OUTTYPE=5 D FREQ(.DEFARR,.NTXT,.TEXT)
"RTN","PXRMOUTC",18,0)
 ;Output the AGE match/no match text.
"RTN","PXRMOUTC",19,0)
 D AGE^PXRMFNFT(PXRMPDEM("DFN"),.DEFARR,.FIEVAL,.NTXT)
"RTN","PXRMOUTC",20,0)
 ;Process the findings in the order: patient cohort, resolution,
"RTN","PXRMOUTC",21,0)
 ;age, and informational.
"RTN","PXRMOUTC",22,0)
 F FTYPE="PCL","RES","AGE","INFO" D
"RTN","PXRMOUTC",23,0)
 . S LIST=$S(FTYPE="PCL":DEFARR(32),FTYPE="RES":DEFARR(36),FTYPE="AGE":DEFARR(40),FTYPE="INFO":DEFARR(42))
"RTN","PXRMOUTC",24,0)
 .;Output the general logic text.
"RTN","PXRMOUTC",25,0)
 . I FTYPE="PCL" D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),PCLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTC",26,0)
 . I FTYPE="RES",$P(PCLOGIC,U,1) D LOGIC^PXRMFNFT(PXRMPDEM("DFN"),RESLOGIC,FTYPE,"D",.DEFARR,.NTXT)
"RTN","PXRMOUTC",27,0)
 .;Process the findings for each type.
"RTN","PXRMOUTC",28,0)
 . K TEXT
"RTN","PXRMOUTC",29,0)
 . S (NHDR,NFLINES)=0
"RTN","PXRMOUTC",30,0)
 . S NUM=+$P(LIST,U,1)
"RTN","PXRMOUTC",31,0)
 . S FLIST=$P(LIST,U,2)
"RTN","PXRMOUTC",32,0)
 . F IND=1:1:NUM D
"RTN","PXRMOUTC",33,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOUTC",34,0)
 ..;No output for age or sex findings.
"RTN","PXRMOUTC",35,0)
 .. I (FINDING="AGE")!(FINDING="SEX") Q
"RTN","PXRMOUTC",36,0)
 ..;If the finding is not defined skip it. This can occur when the
"RTN","PXRMOUTC",37,0)
 ..;reminder is N/A.
"RTN","PXRMOUTC",38,0)
 .. I '$D(FIEVAL(FINDING)) Q
"RTN","PXRMOUTC",39,0)
 .. K IFIEVAL
"RTN","PXRMOUTC",40,0)
 .. I FIEVAL(FINDING) D
"RTN","PXRMOUTC",41,0)
 ... M IFIEVAL=FIEVAL(FINDING)
"RTN","PXRMOUTC",42,0)
 ...;Remove any false occurrences so they are not displayed.
"RTN","PXRMOUTC",43,0)
 ... S JND=0
"RTN","PXRMOUTC",44,0)
 ... F  S JND=+$O(IFIEVAL(JND)) Q:JND=0  K:'IFIEVAL(JND) IFIEVAL(JND)
"RTN","PXRMOUTC",45,0)
 .. E  S IFIEVAL=0
"RTN","PXRMOUTC",46,0)
 ..;If the regular finding is false all we need to do is process the
"RTN","PXRMOUTC",47,0)
 ..;not found text. If it is true we also need to output the finding
"RTN","PXRMOUTC",48,0)
 ..;information.
"RTN","PXRMOUTC",49,0)
 ..;Function findings are processed as a group.
"RTN","PXRMOUTC",50,0)
 .. I IFIEVAL,FINDING'["FF" D FOUT(1,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTC",51,0)
 ..;Output the found/not found text for the finding.
"RTN","PXRMOUTC",52,0)
 .. D FINDING^PXRMFNFT(3,PXRMPDEM("DFN"),FINDING,.IFIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTC",53,0)
 .;
"RTN","PXRMOUTC",54,0)
 .;Display function finding values for this FTYPE, skip INFO only.
"RTN","PXRMOUTC",55,0)
 . I (FTYPE'="INFO"),(FLIST["FF") D FFOUT(3,NUM,FLIST,.FIEVAL,.NFLINES,.TEXT)
"RTN","PXRMOUTC",56,0)
 .;If there was any text for this finding type create a header.
"RTN","PXRMOUTC",57,0)
 . I OUTTYPE=5 D HEADER(FTYPE,NFLINES,RESDATE,.NHDR,.HDR)
"RTN","PXRMOUTC",58,0)
 .;Output the header and the finding text.
"RTN","PXRMOUTC",59,0)
 . D ADDTXTA^PXRMOUTU(1,PXRMRM,.NTXT,NHDR,.HDR)
"RTN","PXRMOUTC",60,0)
 . D COPYTXT^PXRMOUTU(.NTXT,NFLINES,.TEXT)
"RTN","PXRMOUTC",61,0)
 ;Output INFO nodes
"RTN","PXRMOUTC",62,0)
 D INFO^PXRMOUTU(PXRMITEM,.NTXT)
"RTN","PXRMOUTC",63,0)
 Q
"RTN","PXRMOUTC",64,0)
 ;
"RTN","PXRMOUTC",65,0)
 ;================================================
"RTN","PXRMOUTC",66,0)
FOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Do output for individual findings 
"RTN","PXRMOUTC",67,0)
 ;in the FINDING array.
"RTN","PXRMOUTC",68,0)
 I $D(IFIEVAL("TERM")) D OUTPUT^PXRMTERM(1,.IFIEVAL,.NFLINES,.TEXT) Q
"RTN","PXRMOUTC",69,0)
 N FTYPE
"RTN","PXRMOUTC",70,0)
 S FTYPE=$P(IFIEVAL("FINDING"),U,1)
"RTN","PXRMOUTC",71,0)
 S FTYPE=$P(FTYPE,";",2)
"RTN","PXRMOUTC",72,0)
 I FTYPE="AUTTEDT(" D OUTPUT^PXRMEDU(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",73,0)
 I FTYPE="AUTTEXAM(" D OUTPUT^PXRMEXAM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",74,0)
 I FTYPE="AUTTHF(" D OUTPUT^PXRMHF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",75,0)
 I FTYPE="AUTTIMM(" D OUTPUT^PXRMIMM(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",76,0)
 I FTYPE="AUTTSK(" D OUTPUT^PXRMSKIN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",77,0)
 I FTYPE="GMRD(120.51," D OUTPUT^PXRMVITL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",78,0)
 I FTYPE="LAB(60," D OUTPUT^PXRMLAB(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",79,0)
 I FTYPE="ORD(101.43," D OUTPUT^PXRMORDR(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",80,0)
 I FTYPE="PS(50.605," D OUTPUT^PXRMDRCL(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",81,0)
 I FTYPE="PSDRUG(" D OUTPUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",82,0)
 I FTYPE="PSNDF(50.6," D OUTPUT^PXRMDGEN(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",83,0)
 I FTYPE="PS(55," D OUTPUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",84,0)
 I FTYPE="PS(55NVA," D OUTPUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",85,0)
 I FTYPE="PSRX(" D OUTPUT^PXRMDRUG(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",86,0)
 I FTYPE="PXD(811.2," D OUTPUT^PXRMTAX(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",87,0)
 I FTYPE="PXRMD(802.4," D OUTPUT^PXRMFF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",88,0)
 I FTYPE="PXRMD(810.9," D OUTPUT^PXRMLOCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",89,0)
 I FTYPE="PXRMD(811.4," D OUTPUT^PXRMCF(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",90,0)
 I FTYPE="RAMIS(71," D OUTPUT^PXRMRAD(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",91,0)
 I FTYPE="YTT(601.71," D OUTPUT^PXRMMH(INDENT,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMOUTC",92,0)
 Q
"RTN","PXRMOUTC",93,0)
 ;
"RTN","PXRMOUTC",94,0)
 ;================================================
"RTN","PXRMOUTC",95,0)
FFOUT(INDENT,NUM,FLIST,FIEVAL,NLINES,TEXT) ;Output for function findings.
"RTN","PXRMOUTC",96,0)
 I '$D(PXRMDEBG) Q
"RTN","PXRMOUTC",97,0)
 N IND,FFNUM,FFLIST,FFTEXT,FINDING,NOUT,TEXTOUT
"RTN","PXRMOUTC",98,0)
 F IND=1:1:NUM D
"RTN","PXRMOUTC",99,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOUTC",100,0)
 . I '$D(FIEVAL(FINDING)) Q
"RTN","PXRMOUTC",101,0)
 . I $E(FINDING,1,2)="FF" S FFNUM=$P(FINDING,"FF",2),FFLIST(FFNUM)=""
"RTN","PXRMOUTC",102,0)
 I '$D(FFLIST) Q
"RTN","PXRMOUTC",103,0)
 S FFNUM=$O(FFLIST(0))
"RTN","PXRMOUTC",104,0)
 S FFTEXT="FF("_FFNUM_")="_FIEVAL("FF"_FFNUM)
"RTN","PXRMOUTC",105,0)
 F  S FFNUM=$O(FFLIST(FFNUM)) Q:FFNUM=""  D
"RTN","PXRMOUTC",106,0)
 . S FFTEXT=FFTEXT_", FF("_FFNUM_")="_FIEVAL("FF"_FFNUM)
"RTN","PXRMOUTC",107,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMOUTC",108,0)
 D FORMATS^PXRMTEXT(INDENT,PXRMRM,FFTEXT,.NOUT,.TEXTOUT)
"RTN","PXRMOUTC",109,0)
 F IND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(IND)
"RTN","PXRMOUTC",110,0)
 Q
"RTN","PXRMOUTC",111,0)
 ;
"RTN","PXRMOUTC",112,0)
 ;================================================
"RTN","PXRMOUTC",113,0)
FREQ(DEFARR,NTXT,TEXT) ;Display the frequency information.
"RTN","PXRMOUTC",114,0)
 N FREQ,TEMP
"RTN","PXRMOUTC",115,0)
 ;If there was a custom date due print out that information.
"RTN","PXRMOUTC",116,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"zCDUE")) D
"RTN","PXRMOUTC",117,0)
 . S TEMP=^TMP(PXRMPID,$J,PXRMITEM,"zCDUE")
"RTN","PXRMOUTC",118,0)
 . S TEXT=$$OUTPUT^PXRMCDUE(TEMP,.DEFARR)
"RTN","PXRMOUTC",119,0)
 . I DEFARR(31)["AGE" D
"RTN","PXRMOUTC",120,0)
 .. S TEMP=$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))
"RTN","PXRMOUTC",121,0)
 .. I TEMP'="" S TEXT=TEXT_" Applicable"_$$FMTAGE^PXRMAGE($P(TEMP,U,2),$P(TEMP,U,3))_"."
"RTN","PXRMOUTC",122,0)
 . D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",123,0)
 E  D
"RTN","PXRMOUTC",124,0)
 . S TEMP=$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))
"RTN","PXRMOUTC",125,0)
 . I TEMP'="" D
"RTN","PXRMOUTC",126,0)
 .. S FREQ=$P(TEMP,U,1)
"RTN","PXRMOUTC",127,0)
 .. S TEXT=$$FMTFREQ^PXRMAGE(FREQ)
"RTN","PXRMOUTC",128,0)
 .. I FREQ=-1 S TEXT=TEXT_" for this patient."
"RTN","PXRMOUTC",129,0)
 .. I DEFARR(31)["AGE",FREQ'=-1 S TEXT=TEXT_$$FMTAGE^PXRMAGE($P(TEMP,U,2),$P(TEMP,U,3))_"."
"RTN","PXRMOUTC",130,0)
 .. D ADDTXT^PXRMOUTU(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTC",131,0)
 Q
"RTN","PXRMOUTC",132,0)
 ;
"RTN","PXRMOUTC",133,0)
 ;================================================
"RTN","PXRMOUTC",134,0)
HEADER(FTYPE,NLINES,RESDATE,NHDR,HDR) ;Create a finding header.
"RTN","PXRMOUTC",135,0)
 K HDR
"RTN","PXRMOUTC",136,0)
 I FTYPE="RES" D  Q
"RTN","PXRMOUTC",137,0)
 . I +RESDATE'=0 D  Q
"RTN","PXRMOUTC",138,0)
 .. S HDR(2)="Resolution: Last done - "_$$EDATE^PXRMDATE(RESDATE)
"RTN","PXRMOUTC",139,0)
 .. S NHDR=2
"RTN","PXRMOUTC",140,0)
 .. S HDR(1)="\\"
"RTN","PXRMOUTC",141,0)
 . I '$D(HDR(2)),NLINES>0 D
"RTN","PXRMOUTC",142,0)
 .. S HDR(2)="Resolution:"
"RTN","PXRMOUTC",143,0)
 .. S NHDR=2
"RTN","PXRMOUTC",144,0)
 .. S HDR(1)="\\"
"RTN","PXRMOUTC",145,0)
 ;
"RTN","PXRMOUTC",146,0)
 I NLINES=0 Q
"RTN","PXRMOUTC",147,0)
 I FTYPE="PCL" D  Q
"RTN","PXRMOUTC",148,0)
 . S NHDR=2
"RTN","PXRMOUTC",149,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",150,0)
 . S HDR(2)="Cohort:"
"RTN","PXRMOUTC",151,0)
 ;
"RTN","PXRMOUTC",152,0)
 I FTYPE="AGE" D  Q
"RTN","PXRMOUTC",153,0)
 . S NHDR=2
"RTN","PXRMOUTC",154,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",155,0)
 . S HDR(2)="Age/Frequency:"
"RTN","PXRMOUTC",156,0)
 ;
"RTN","PXRMOUTC",157,0)
 I FTYPE="INFO" D  Q
"RTN","PXRMOUTC",158,0)
 . S NHDR=2
"RTN","PXRMOUTC",159,0)
 . S HDR(1)="\\"
"RTN","PXRMOUTC",160,0)
 . S HDR(2)="Information:"
"RTN","PXRMOUTC",161,0)
 Q
"RTN","PXRMOUTC",162,0)
 ;
"RTN","PXRMOUTU")
0^66^B17168118
"RTN","PXRMOUTU",1,0)
PXRMOUTU ;SLC/PKR - Utilities for preparing output. ;01/28/2013
"RTN","PXRMOUTU",2,0)
 ;;2.0;CLINICAL REMINDERS;**17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMOUTU",3,0)
 ;
"RTN","PXRMOUTU",4,0)
 ;==================================================
"RTN","PXRMOUTU",5,0)
ADDTXT(LM,RM,NTXT,TXT) ;
"RTN","PXRMOUTU",6,0)
 N IND,NOUT,TEXTOUT
"RTN","PXRMOUTU",7,0)
 D FORMATS^PXRMTEXT(LM,RM,.TXT,.NOUT,.TEXTOUT)
"RTN","PXRMOUTU",8,0)
 F IND=1:1:NOUT S NTXT=NTXT+1,^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=TEXTOUT(IND)
"RTN","PXRMOUTU",9,0)
 Q
"RTN","PXRMOUTU",10,0)
 ;
"RTN","PXRMOUTU",11,0)
 ;==================================================
"RTN","PXRMOUTU",12,0)
ADDTXTA(LM,RM,NTXT,NLINES,TXTA) ;Add an array of text.
"RTN","PXRMOUTU",13,0)
 I NLINES=0 Q
"RTN","PXRMOUTU",14,0)
 N IND,NOUT,TEXTOUT
"RTN","PXRMOUTU",15,0)
 D FORMAT^PXRMTEXT(LM,RM,NLINES,.TXTA,.NOUT,.TEXTOUT)
"RTN","PXRMOUTU",16,0)
 F IND=1:1:NOUT S NTXT=NTXT+1,^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=TEXTOUT(IND)
"RTN","PXRMOUTU",17,0)
 Q
"RTN","PXRMOUTU",18,0)
 ;
"RTN","PXRMOUTU",19,0)
 ;==================================================
"RTN","PXRMOUTU",20,0)
COPYTXT(NTXT,NLINES,TEXT) ;Copy NLINES of TEXT into ^TMP output.
"RTN","PXRMOUTU",21,0)
 N IND
"RTN","PXRMOUTU",22,0)
 F IND=1:1:NLINES S NTXT=NTXT+1,^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=TEXT(IND)
"RTN","PXRMOUTU",23,0)
 Q
"RTN","PXRMOUTU",24,0)
 ;
"RTN","PXRMOUTU",25,0)
 ;==================================================
"RTN","PXRMOUTU",26,0)
FERROR(NTXT) ; Check for a fatal error and output a message.
"RTN","PXRMOUTU",27,0)
 I '$D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR")) Q 0
"RTN","PXRMOUTU",28,0)
 N ERROR,TEXT
"RTN","PXRMOUTU",29,0)
 ;Error trap
"RTN","PXRMOUTU",30,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMOUTU",31,0)
 . S TEXT="There was an error processing this reminder. It could not be properly evaluated; please notify your Clinical Reminder coordinator."
"RTN","PXRMOUTU",32,0)
 . D ADDTXT(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",33,0)
 ;
"RTN","PXRMOUTU",34,0)
 ;Reminder errors
"RTN","PXRMOUTU",35,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")) D
"RTN","PXRMOUTU",36,0)
 . S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")
"RTN","PXRMOUTU",37,0)
 . D ADDTXT(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",38,0)
 ;
"RTN","PXRMOUTU",39,0)
 ;Expanded taxonomy errors
"RTN","PXRMOUTU",40,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY")) D
"RTN","PXRMOUTU",41,0)
 . S ERROR=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY",""))
"RTN","PXRMOUTU",42,0)
 . I ERROR="NO LOCK" S TEXT="Could not get a lock for expanded taxonomy "_+PXRMXTLK_", try again!"
"RTN","PXRMOUTU",43,0)
 . D ADDTXT(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",44,0)
 ;
"RTN","PXRMOUTU",45,0)
 ;Patient errors
"RTN","PXRMOUTU",46,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT")) D
"RTN","PXRMOUTU",47,0)
 . S ERROR=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT",""))
"RTN","PXRMOUTU",48,0)
 . I ERROR="NOPAT" S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NOPAT")
"RTN","PXRMOUTU",49,0)
 . I ERROR="NO LOCK" S TEXT="Could not get a lock for patient "_PXRMPDEM("DFN")_", try again!"
"RTN","PXRMOUTU",50,0)
 . D ADDTXT(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",51,0)
 ;
"RTN","PXRMOUTU",52,0)
 ;Recursion
"RTN","PXRMOUTU",53,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","RECURSION")) D
"RTN","PXRMOUTU",54,0)
 . K TEXT
"RTN","PXRMOUTU",55,0)
 . S TEXT(1)=""
"RTN","PXRMOUTU",56,0)
 . S TEXT(2)="This reminder definition is being called recursively, check CF.VA-REMINDER DEFINITION."
"RTN","PXRMOUTU",57,0)
 . D ADDTXTA(1,PXRMRM,.NTXT,2,.TEXT)
"RTN","PXRMOUTU",58,0)
 ;
"RTN","PXRMOUTU",59,0)
 Q 1
"RTN","PXRMOUTU",60,0)
 ;
"RTN","PXRMOUTU",61,0)
 ;==================================================
"RTN","PXRMOUTU",62,0)
INFO(PXRMITEM,NTXT) ;Output INFO text. An INFO node has the structure:
"RTN","PXRMOUTU",63,0)
 ;(PXRMPID,$J,PXRMITEM,"INFO",DESCRIPTION)=TEXT
"RTN","PXRMOUTU",64,0)
 I '$D(^TMP(PXRMPID,$J,PXRMITEM,"INFO")) Q
"RTN","PXRMOUTU",65,0)
 N DES,TEXT
"RTN","PXRMOUTU",66,0)
 S TEXT="Information about the reminder evaluation:"
"RTN","PXRMOUTU",67,0)
 D ADDTXT(1,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",68,0)
 S DES=""
"RTN","PXRMOUTU",69,0)
 F  S DES=$O(^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)) Q:DES=""  D
"RTN","PXRMOUTU",70,0)
 . S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)
"RTN","PXRMOUTU",71,0)
 . D ADDTXT(2,PXRMRM,.NTXT,TEXT)
"RTN","PXRMOUTU",72,0)
 Q
"RTN","PXRMOUTU",73,0)
 ;
"RTN","PXRMOUTU",74,0)
 ;==================================================
"RTN","PXRMOUTU",75,0)
WARN(PXRMITEM,PXRMPDEM) ;Output WARNING text. An WARN node has the structure:
"RTN","PXRMOUTU",76,0)
 ;(PXRMPID,$J,PXRMITEM,"WARN",DESCRIPTION)=TEXT
"RTN","PXRMOUTU",77,0)
 I '$D(^TMP(PXRMPID,$J,PXRMITEM,"WARN")) Q
"RTN","PXRMOUTU",78,0)
 N DES,NL,REMINDER,SUB
"RTN","PXRMOUTU",79,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMOUTU",80,0)
 S SUB="Reminder evaluation warnings"
"RTN","PXRMOUTU",81,0)
 S REMINDER=$S($G(PXRMITEM)>0:$P(^PXD(811.9,PXRMITEM,0),U,1),1:"?")
"RTN","PXRMOUTU",82,0)
 S ^TMP("PXRMXMZ",$J,1,0)="The following warnings were encountered:",NL=1
"RTN","PXRMOUTU",83,0)
 S DES=""
"RTN","PXRMOUTU",84,0)
 F  S DES=$O(^TMP(PXRMPID,$J,PXRMITEM,"WARN",DES)) Q:DES=""  D
"RTN","PXRMOUTU",85,0)
 . S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"WARN",DES)
"RTN","PXRMOUTU",86,0)
 . S NL=NL+1 S ^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP(PXRMPID,$J,PXRMITEM,"WARN",DES)
"RTN","PXRMOUTU",87,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="While evaluating reminder "_REMINDER
"RTN","PXRMOUTU",88,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="For patient DFN="_PXRMPDEM("DFN")
"RTN","PXRMOUTU",89,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="The time of the evaluation was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMOUTU",90,0)
 D SEND^PXRMMSG("PXRMXMZ",SUB,"",DUZ)
"RTN","PXRMOUTU",91,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMOUTU",92,0)
 Q
"RTN","PXRMOUTU",93,0)
 ;
"RTN","PXRMP26D")
0^40^B226626413
"RTN","PXRMP26D",1,0)
PXRMP26D ;SLC/AGP - Dialog Conversion for PXRM*2.0*26. ;05/07/2014
"RTN","PXRMP26D",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMP26D",3,0)
 Q
"RTN","PXRMP26D",4,0)
 ;
"RTN","PXRMP26D",5,0)
 ;this code is used to add prompts to a dialog from file 801.45. This
"RTN","PXRMP26D",6,0)
 ;should only be called when an existing dialog contains a taxonomy
"RTN","PXRMP26D",7,0)
 ;and prompts are not set in the dialog.
"RTN","PXRMP26D",8,0)
PROMPTS(DIEN,SEL,DEFAULT,IENCNT,FDA) ;
"RTN","PXRMP26D",9,0)
 N CNT,CODE,DIR,DNUM,ENC,FIELD,IEN,IENS,NAME,NODE,NUM,PROMPT,PROMPTS,START,VALUE,Y
"RTN","PXRMP26D",10,0)
 ;
"RTN","PXRMP26D",11,0)
 ;if prompts already defined then Quit keeps existing functionality
"RTN","PXRMP26D",12,0)
 ;in sync prompts at element level override prompts for taxonomy
"RTN","PXRMP26D",13,0)
 D MES^XPDUTL("Adding prompts to the dialog.")
"RTN","PXRMP26D",14,0)
 S START=+$O(^PXRMD(801.41,DIEN,10,""),-1) I START>0 Q
"RTN","PXRMP26D",15,0)
 ;
"RTN","PXRMP26D",16,0)
 S CODE="" F  S CODE=$O(DEFAULT(CODE)) Q:CODE=""  D
"RTN","PXRMP26D",17,0)
 .I SEL="P",CODE="POV" Q
"RTN","PXRMP26D",18,0)
 .I SEL="D",CODE="CPT" Q
"RTN","PXRMP26D",19,0)
 .S CNT=0 F  S CNT=$O(DEFAULT(CODE,"ADDFIND",CNT)) Q:CNT'>0  D
"RTN","PXRMP26D",20,0)
 ..S NODE=DEFAULT(CODE,"ADDFIND",CNT)
"RTN","PXRMP26D",21,0)
 ..S IEN=$P(NODE,U)
"RTN","PXRMP26D",22,0)
 ..I $D(^PXRMD(801.41,DIEN,10,"D",IEN))>0 Q
"RTN","PXRMP26D",23,0)
 ..I $D(PROMPTS(IEN))>0 I $L(PROMPTS(IEN),U)<$L(NODE,U) S PROMPTS(IEN)=NODE
"RTN","PXRMP26D",24,0)
 ..S PROMPTS(IEN)=NODE
"RTN","PXRMP26D",25,0)
 ;
"RTN","PXRMP26D",26,0)
 I '$D(PROMPTS) Q
"RTN","PXRMP26D",27,0)
 S START=+$O(^PXRMD(801.41,DIEN,10,""),-1)
"RTN","PXRMP26D",28,0)
 S DNUM=0
"RTN","PXRMP26D",29,0)
 S IEN=0,CNT=0 F  S IEN=$O(PROMPTS(IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",30,0)
 .S CNT=CNT+1,START=START+1,DNUM=DNUM+1
"RTN","PXRMP26D",31,0)
 .S IENCNT=IENCNT+1,IENS="+"_IENCNT_","_DIEN_","
"RTN","PXRMP26D",32,0)
 .;S IENCNT=IENCNT+1,IENS="+"_IENCNT_",1,"
"RTN","PXRMP26D",33,0)
 .S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",34,0)
 .S NODE=PROMPTS(IEN),CNT=$L(NODE,U)
"RTN","PXRMP26D",35,0)
 .I $P(NODE,U,3)>0 Q
"RTN","PXRMP26D",36,0)
 .S FDA(801.412,IENS,.01)=START
"RTN","PXRMP26D",37,0)
 .S FDA(801.412,IENS,2)=IEN
"RTN","PXRMP26D",38,0)
 .I CNT=1 Q
"RTN","PXRMP26D",39,0)
 .F NUM=2:1:CNT D
"RTN","PXRMP26D",40,0)
 ..I NUM=3 Q
"RTN","PXRMP26D",41,0)
 ..I NUM=4 Q
"RTN","PXRMP26D",42,0)
 ..S VALUE=$P(NODE,U,NUM) I $G(VALUE)="" Q
"RTN","PXRMP26D",43,0)
 ..S FIELD=$S(NUM=2:9,NUM=4:.01,NUM=5:6,NUM=6:7,NUM=7:8,1:"") I $G(FIELD)="" Q
"RTN","PXRMP26D",44,0)
 ..S FDA(801.412,IENS,FIELD)=VALUE
"RTN","PXRMP26D",45,0)
 Q
"RTN","PXRMP26D",46,0)
 ;
"RTN","PXRMP26D",47,0)
 ;this is used to add a taxonomy to a finding in a dialog. Set field
"RTN","PXRMP26D",48,0)
 ;123 to N this should keep the functionality to the same as pre-ICD10
"RTN","PXRMP26D",49,0)
 ;functionality.
"RTN","PXRMP26D",50,0)
ADDFIND(DIEN,TAX,UPD,DEFAULT,IENCNT,FDA) ;
"RTN","PXRMP26D",51,0)
 N TNAME
"RTN","PXRMP26D",52,0)
 S TNAME=$P(^PXD(811.2,TAX,0),U)
"RTN","PXRMP26D",53,0)
 D MES^XPDUTL("Adding Taxonomy "_TNAME_" as a Finding Item.")
"RTN","PXRMP26D",54,0)
 N IENS
"RTN","PXRMP26D",55,0)
 S IENS=DIEN_","
"RTN","PXRMP26D",56,0)
 S FDA(801.41,IENS,15)=TAX_";PXD(811.2,"
"RTN","PXRMP26D",57,0)
 I UPD=2 S FDA(801.41,IENS,123)="N" Q
"RTN","PXRMP26D",58,0)
 ;S FDA(801.41,IENS,123)="A"
"RTN","PXRMP26D",59,0)
 ;I UPD=0 D ADDPROMPT(DIEN,TAX,.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",60,0)
 Q
"RTN","PXRMP26D",61,0)
 ;
"RTN","PXRMP26D",62,0)
ADDFIND1(DIEN,TAX,DEFAULT,IENCNT,FDA) ;
"RTN","PXRMP26D",63,0)
 ;additional finding addition does not add prompts to the dialog.
"RTN","PXRMP26D",64,0)
 ;this should keep existing functionality in place
"RTN","PXRMP26D",65,0)
 ;may need a decision on this
"RTN","PXRMP26D",66,0)
 N TNAME
"RTN","PXRMP26D",67,0)
 S TNAME=$P(^PXD(811.2,TAX,0),U)
"RTN","PXRMP26D",68,0)
 D MES^XPDUTL("Adding Taxonomy "_TNAME_" as an Additional Finding Item.")
"RTN","PXRMP26D",69,0)
 N IENS
"RTN","PXRMP26D",70,0)
 S IENCNT=IENCNT+1,IENS="+"_IENCNT_","_DIEN_","
"RTN","PXRMP26D",71,0)
 ;S IENCNT=IENCNT+1,IENS="?+"_IENCNT_",1,"
"RTN","PXRMP26D",72,0)
 S FDA(801.4118,IENS,.01)=TAX_";PXD(811.2,"
"RTN","PXRMP26D",73,0)
 Q
"RTN","PXRMP26D",74,0)
 ;
"RTN","PXRMP26D",75,0)
 ;This is used to pulled the default taxonomy field values from 801.45
"RTN","PXRMP26D",76,0)
 ; into 801.41 when updating a dialog that contains a taxonomy.
"RTN","PXRMP26D",77,0)
ADDTAXFL(DIEN,TAX,CODE,DEFAULT,IENCNT,FDA) ;
"RTN","PXRMP26D",78,0)
 ;D MES^XPDUTL("Adding default Taxonomy Field Values for "_CODE_".")
"RTN","PXRMP26D",79,0)
 D MES^XPDUTL("Adding default Header Text for "_CODE_".")
"RTN","PXRMP26D",80,0)
 N ENCTYPE,IENS,NODEIEN,RESULT,TEMP,VALUE,X
"RTN","PXRMP26D",81,0)
 S VALUE=$$ADDTAXF1^PXRMDTAX(CODE,.DEFAULT)
"RTN","PXRMP26D",82,0)
 S X=$S(CODE="POV":141,1:142)
"RTN","PXRMP26D",83,0)
 S IENS=DIEN_","
"RTN","PXRMP26D",84,0)
 S FDA(801.41,IENS,X)=VALUE
"RTN","PXRMP26D",85,0)
 Q
"RTN","PXRMP26D",86,0)
 ;
"RTN","PXRMP26D",87,0)
 ;use to build an array of codes to create a taxonomy from
"RTN","PXRMP26D",88,0)
BLDARRAY(DIEN,ARRAY,TCNT,TEXT) ;
"RTN","PXRMP26D",89,0)
 N CLASS,CNT,CODESYSN,CODESYS,FNUM,IEN,NAME,TEMP
"RTN","PXRMP26D",90,0)
 S CNT=0
"RTN","PXRMP26D",91,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",92,0)
 S TCNT=TCNT+1,TEXT(TCNT)="Dialog "_NAME_" Pre-conversion codes"
"RTN","PXRMP26D",93,0)
 F CODESYS="ICD9(","ICPT(" D
"RTN","PXRMP26D",94,0)
 .S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"DIALOG",DIEN,CODESYS,IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",95,0)
 ..S CODESYSN=$S(CODESYS[9:"ICD",1:"CPT")
"RTN","PXRMP26D",96,0)
 ..S CNT=CNT+1,ARRAY("CODE",CODESYSN,IEN)="I"_U_1
"RTN","PXRMP26D",97,0)
 ..S TCNT=TCNT+1,TEXT(TCNT)="   "_$S(CODESYSN="ICD":"Diagnosis Code",1:"Procedure Code")_": "_$$GET1^DIQ($S(CODESYSN="ICD":80,1:81),IEN,.01)
"RTN","PXRMP26D",98,0)
 I CNT=0 Q
"RTN","PXRMP26D",99,0)
 S TCNT=TCNT+1,TEXT(TCNT)=""
"RTN","PXRMP26D",100,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",101,0)
 S CLASS=$P($G(^PXRMD(801.41,DIEN,100)),U)
"RTN","PXRMP26D",102,0)
 I CLASS="N" S NAME=$P(NAME,"-",2),CLASS="L"
"RTN","PXRMP26D",103,0)
 S TEMP=$$RTAXNAME^PXRMDUTL(NAME)
"RTN","PXRMP26D",104,0)
 S ARRAY("NAME")=TEMP
"RTN","PXRMP26D",105,0)
 S ARRAY("COUNT")=CNT
"RTN","PXRMP26D",106,0)
 S ARRAY("CLASS")=CLASS
"RTN","PXRMP26D",107,0)
 S ARRAY("SOURCE")="Reminder Dialog IEN: "_DIEN
"RTN","PXRMP26D",108,0)
 Q
"RTN","PXRMP26D",109,0)
 ;
"RTN","PXRMP26D",110,0)
BLDTAXC(TEXT,TCNT,TIEN,DIEN) ;
"RTN","PXRMP26D",111,0)
 N ARRAY,CNT,CODESYS,DNAME,TNAME,X
"RTN","PXRMP26D",112,0)
 S TNAME=$P(^PXD(811.2,TIEN,0),U)
"RTN","PXRMP26D",113,0)
 S DNAME=$P(^PXRMD(801.41,DIEN,0),U)
"RTN","PXRMP26D",114,0)
 S TCNT=TCNT+1,TEXT(TCNT)="Taxonomy "_TNAME_" added to dialog."
"RTN","PXRMP26D",115,0)
 S TCNT=TCNT+1,TEXT(TCNT)="Taxonomy "_TNAME_" post-conversion codes list:"
"RTN","PXRMP26D",116,0)
 F X="POV","CPT" D
"RTN","PXRMP26D",117,0)
 .K CODESYS,ARRAY
"RTN","PXRMP26D",118,0)
 .D BLDCODE^PXRMDTAX(X,.CODESYS),CODES^PXRMDLLB(TIEN,.CODESYS,.ARRAY)
"RTN","PXRMP26D",119,0)
 .S CNT=0 F  S CNT=$O(ARRAY(CNT)) Q:CNT'>0  S TCNT=TCNT+1,TEXT(TCNT)="   "_$S(X="POV":"Diagnosis Code",1:"Procedure Code")_": "_$P($P(ARRAY(CNT),U,2),":")
"RTN","PXRMP26D",120,0)
 Q
"RTN","PXRMP26D",121,0)
 ;create new taxonomy from dialog findings/additional findings,
"RTN","PXRMP26D",122,0)
 ;trap errors, and store new taxonomy and codes
"RTN","PXRMP26D",123,0)
CREATE(ARRAY,DIEN,TCNT,TEXT) ;
"RTN","PXRMP26D",124,0)
 N CNT,IEN,CODESYS,CODE,ERR
"RTN","PXRMP26D",125,0)
 S IEN=$$CRETAX^PXRMTXIM("",.ARRAY,.ERR)
"RTN","PXRMP26D",126,0)
 I $D(ERR) D
"RTN","PXRMP26D",127,0)
 .I IEN=0 D  Q
"RTN","PXRMP26D",128,0)
 ..S TCNT=TCNT+1,TEXT(TCNT)="ERROR: A taxonomy could not be created"
"RTN","PXRMP26D",129,0)
 ..S ^XTMP(PXRMXTMP,"DIALOG ERROR",DIEN,"ERROR")="Could not create a taxonomy. Dialog had the following codes assigned:"
"RTN","PXRMP26D",130,0)
 ..;S ^XTMP(PXRMXTMP,"DIALOG ERROR",DIEN,"ERROR","DIALOG IEN")=DIEN
"RTN","PXRMP26D",131,0)
 ..M ^XTMP(PXRMXTMP,"DIALOG ERROR",DIEN,"ERROR","CODE")=ARRAY("CODE")
"RTN","PXRMP26D",132,0)
 .I IEN>0 D
"RTN","PXRMP26D",133,0)
 ..S TCNT=TCNT+1,TEXT(TCNT)="ERROR: failed to add all the codes to the Taxonomy "_ARRAY("NAME")
"RTN","PXRMP26D",134,0)
 ..S ^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN,"ERROR")="Could not add the following codes to the Taxonomy "_ARRAY("NAME")
"RTN","PXRMP26D",135,0)
 ..M ^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN,"ERROR","CODE")=ERR
"RTN","PXRMP26D",136,0)
 ..;S ^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN,"ERROR","TAXIEN")=IEN 
"RTN","PXRMP26D",137,0)
 I IEN=0 Q 0
"RTN","PXRMP26D",138,0)
 S ^XTMP(PXRMXTMP,"TAXONOMY",IEN)=""
"RTN","PXRMP26D",139,0)
 S ^XTMP(PXRMXTMP,"TAXONOMY",IEN,"NAME")=ARRAY("NAME") K ARRAY("NAME")
"RTN","PXRMP26D",140,0)
 S ^XTMP(PXRMXTMP,"TAXONOMY",IEN,"COUNT")=ARRAY("COUNT") K ARRAY("COUNT")
"RTN","PXRMP26D",141,0)
 M ^XTMP(PXRMXTMP,"TAXONOMY",IEN,"DATA")=ARRAY("CODE")
"RTN","PXRMP26D",142,0)
 D BLDTAXC(.TEXT,.TCNT,IEN,DIEN)
"RTN","PXRMP26D",143,0)
 Q IEN
"RTN","PXRMP26D",144,0)
 ;
"RTN","PXRMP26D",145,0)
 ;determine if a new taxonomy needs to be use or if new taxonomy
"RTN","PXRMP26D",146,0)
 ;already exist
"RTN","PXRMP26D",147,0)
CRETAX ;
"RTN","PXRMP26D",148,0)
 N ARRAY,CNT,DIEN,FIND,HASCODE,IEN,NAME,TAX,TCNT,TEXT,TYPE
"RTN","PXRMP26D",149,0)
 D MES^XPDUTL(" ")
"RTN","PXRMP26D",150,0)
 D MES^XPDUTL("Dialogs updates")
"RTN","PXRMP26D",151,0)
 S DIEN=0 F  S DIEN=$O(^XTMP(PXRMXTMP,"DIALOG",DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26D",152,0)
 .I $G(^XTMP(PXRMXTMP,"DIALOG",DIEN,"DONE"))=1 Q
"RTN","PXRMP26D",153,0)
 .K ARRAY,TEXT
"RTN","PXRMP26D",154,0)
 .S TCNT=0
"RTN","PXRMP26D",155,0)
 .D BLDARRAY(DIEN,.ARRAY,.TCNT,.TEXT) I '$D(ARRAY) Q
"RTN","PXRMP26D",156,0)
 .S TAX=$$TAXEXIST(.ARRAY,DIEN,.TCNT,.TEXT) I TAX>0 S ^XTMP(PXRMXTMP,"DIALOG",DIEN,"PXD(811.2,",TAX)=2
"RTN","PXRMP26D",157,0)
 .I TAX<1 S TAX=$$CREATE(.ARRAY,DIEN,.TCNT,.TEXT) I TAX>0 S ^XTMP(PXRMXTMP,"DIALOG",DIEN,"PXD(811.2,",TAX)=2
"RTN","PXRMP26D",158,0)
 .S TCNT=TCNT+1,TEXT(TCNT)=""
"RTN","PXRMP26D",159,0)
 .D MES^XPDUTL(.TEXT)
"RTN","PXRMP26D",160,0)
 Q
"RTN","PXRMP26D",161,0)
 ;
"RTN","PXRMP26D",162,0)
 ;DEBUG CODE del to make clean-up easier for errors while in development
"RTN","PXRMP26D",163,0)
DELXTMP ;
"RTN","PXRMP26D",164,0)
 N ARRAY,DIEN,FIND,PXRMXTMP,TEMP,TIEN
"RTN","PXRMP26D",165,0)
 S PXRMXTMP="PXRM DIALOG CONVERSION",TEMP="DIALOG",FIND="PXD(811.2,"
"RTN","PXRMP26D",166,0)
 S DIEN=0 F  S DIEN=$O(^XTMP(PXRMXTMP,TEMP,DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26D",167,0)
 .S TIEN=0 F  S TIEN=$O(^XTMP(PXRMXTMP,TEMP,DIEN,FIND,TIEN)) Q:TIEN'>0  D
"RTN","PXRMP26D",168,0)
 ..I +$G(^XTMP(PXRMXTMP,TEMP,DIEN,FIND,TIEN))=2 S ARRAY(DIEN,TIEN)=""
"RTN","PXRMP26D",169,0)
 S DIEN=0 F  S DIEN=$O(ARRAY(DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26D",170,0)
 .S TIEN=0 F  S TIEN=$O(ARRAY(DIEN,TIEN)) Q:TIEN'>0  D
"RTN","PXRMP26D",171,0)
 ..K ^XTMP(PXRMXTMP,TEMP,DIEN,FIND,TIEN)
"RTN","PXRMP26D",172,0)
 Q
"RTN","PXRMP26D",173,0)
 ;
"RTN","PXRMP26D",174,0)
 ;build edit history from FDA array.
"RTN","PXRMP26D",175,0)
EDITDES(DIEN,FDA,WP) ;
"RTN","PXRMP26D",176,0)
 N CNT
"RTN","PXRMP26D",177,0)
 S CNT=1
"RTN","PXRMP26D",178,0)
 D MES^XPDUTL("Updating edit history of the dialog.")
"RTN","PXRMP26D",179,0)
 i $g(FDA(801.41,DIEN_",",13))'="" S CNT=CNT+1,WP(CNT,0)="   Set Resolution Type to Done Elsewhere (Historical)"
"RTN","PXRMP26D",180,0)
 I $G(FDA(801.41,DIEN_",",15))'="" S CNT=CNT+1,WP(CNT,0)="   Updated Finding Item Field"
"RTN","PXRMP26D",181,0)
 I $G(FDA(801.41,DIEN_",",123))'="" S CNT=CNT+1,WP(CNT,0)="   Updated Taxonomy Selection Field to "_$G(FDA(801.41,DIEN_",",123))
"RTN","PXRMP26D",182,0)
 I $G(FDA(801.41,DIEN_",",141))'="" S CNT=CNT+1,WP(CNT,0)="   Updated Diagnosis Header Text"
"RTN","PXRMP26D",183,0)
 I $G(FDA(801.41,DIEN_",",142))'="" S CNT=CNT+1,WP(CNT,0)="   Updated Diagnosis Header Text"
"RTN","PXRMP26D",184,0)
 ;I $D(FDA(801.46)) S CNT=CNT+1,WP(CNT,0)="   Update Taxonomy Fields"
"RTN","PXRMP26D",185,0)
 I $D(FDA(801.4118)) S CNT=CNT+1,WP(CNT,0)="   Update Additional Finding Item Multiple"
"RTN","PXRMP26D",186,0)
 I $D(FDA(801.412)) S CNT=CNT+1,WP(CNT,0)="   Added prompts to the dialog"
"RTN","PXRMP26D",187,0)
 I CNT=1 S CNT=CNT+1,WP(CNT,0)="   Nothing"
"RTN","PXRMP26D",188,0)
 Q
"RTN","PXRMP26D",189,0)
 ;
"RTN","PXRMP26D",190,0)
 ;loops through the xtmp of taxonomy determine the update path
"RTN","PXRMP26D",191,0)
GETLIST ;
"RTN","PXRMP26D",192,0)
 N ADDFVPL,CPTSTATUS,DIEN,FINDFVPL,IEN,POVSTATUS,TAXNEEDS,UPDTYPE,VALUE
"RTN","PXRMP26D",193,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26D",194,0)
 D BLDRLIST^PXRMVPTR(801.41,15,.FINDFVPL)
"RTN","PXRMP26D",195,0)
 D BLDRLIST^PXRMVPTR(801.4118,.01,.ADDFVPL)
"RTN","PXRMP26D",196,0)
 S CPTSTATUS=$$GETSTAT^PXRMDTAX("CPT"),POVSTATUS=$$GETSTAT^PXRMDTAX("POV")
"RTN","PXRMP26D",197,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26D",198,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Dialog post-conversion report:"
"RTN","PXRMP26D",199,0)
 S DIEN=0 F  S DIEN=$O(^XTMP(PXRMXTMP,"DIALOG",DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26D",200,0)
 .S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"DIALOG",DIEN,"PXD(811.2,",IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",201,0)
 ..S UPDTYPE=^XTMP(PXRMXTMP,"DIALOG",DIEN,"PXD(811.2,",IEN)
"RTN","PXRMP26D",202,0)
 ..S TAXNEEDS=0
"RTN","PXRMP26D",203,0)
 ..I $G(^XTMP(PXRMXTMP,"DIALOG",DIEN,"DONE"))'=1 D UPDATE(DIEN,IEN,UPDTYPE,CPTSTATUS,POVSTATUS,.TAXNEEDS)
"RTN","PXRMP26D",204,0)
 ..D BLDTXT^PXRMP26X(DIEN,.FINDFVPL,.ADDFVPL,TAXNEEDS,0)
"RTN","PXRMP26D",205,0)
 I $O(^TMP("PXRMXMZ",$J,""),-1)>1 D SEND^PXRMMSG("PXRMXMZ","Clinical Reminder Patch 26 Post-conversion dialog.")
"RTN","PXRMP26D",206,0)
 ;K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26D",207,0)
 Q
"RTN","PXRMP26D",208,0)
 ;
"RTN","PXRMP26D",209,0)
PRE ;
"RTN","PXRMP26D",210,0)
 ;I $$PATCH^XPDUTL("PXRM*2.0*26") Q
"RTN","PXRMP26D",211,0)
 N PXRMXTMP,PXRMSKIP
"RTN","PXRMP26D",212,0)
 S PXRMXTMP="PXRM DIALOG CONVERSION"
"RTN","PXRMP26D",213,0)
 K ^XTMP(PXRMXTMP)
"RTN","PXRMP26D",214,0)
 S ^XTMP(PXRMXTMP,0)=$$FMADD^XLFDT(DT,30)_U_DT_U_"PXRM Patch 26 Dialog Conversion"
"RTN","PXRMP26D",215,0)
 S PXRMSKIP("VA-WH PAP SMEAR OBTAINED")="",PXRMSKIP("VA-GP AAA PRIOR DIAGNOSIS")=""
"RTN","PXRMP26D",216,0)
 S PXRMSKIP("VA-IM FLU H1N1 DONE (1 DOSE)")="",PXRMSKIP("VA-IM FLU H1N1 OUTSIDE (1 DOSE)")=""
"RTN","PXRMP26D",217,0)
 S PXRMSKIP("VA-IM FLU HIGH DOSE DONE")="",PXRMSKIP("VA-IM FLU HIGH DOSE OUTSIDE")=""
"RTN","PXRMP26D",218,0)
 D BLDLIST^PXRMP26X(.PXRMSKIP)
"RTN","PXRMP26D",219,0)
 Q
"RTN","PXRMP26D",220,0)
 ;
"RTN","PXRMP26D",221,0)
POST ;
"RTN","PXRMP26D",222,0)
 ;I $$PATCH^XPDUTL("PXRM*2.0*26") Q
"RTN","PXRMP26D",223,0)
 K ^TMP($J,"PXRM TAX"),^TMP("PXRM DIALOG UPD",$J),^TMP("PXRM DIALOG STR",$J)
"RTN","PXRMP26D",224,0)
 N PXRMXTMP
"RTN","PXRMP26D",225,0)
 S PXRMXTMP="PXRM DIALOG CONVERSION"
"RTN","PXRMP26D",226,0)
 D CRETAX
"RTN","PXRMP26D",227,0)
 D GETLIST
"RTN","PXRMP26D",228,0)
 D WRITE
"RTN","PXRMP26D",229,0)
 D MAKNAT(801.41,"ADD TO PROBLEM LIST","PXRM FV ADD TO PROBLEM LIST")
"RTN","PXRMP26D",230,0)
 D RENAME^PXRMUTIL(801.41,"VA-ECOE DX LIST","VA-ECOE DX GROUP")
"RTN","PXRMP26D",231,0)
 ;K ^XTMP(PXRMXTMP),^TMP($J,"PXRM TAX"),^TMP("PXRM DIALOG UPD",$J),^TMP("PXRM DIALOG STR",$J)
"RTN","PXRMP26D",232,0)
 K ^TMP($J,"PXRM TAX"),^TMP("PXRM DIALOG UPD",$J),^TMP("PXRM DIALOG STR",$J)
"RTN","PXRMP26D",233,0)
 Q
"RTN","PXRMP26D",234,0)
 ;
"RTN","PXRMP26D",235,0)
MAKNAT(FILENUM,OLDNAME,NEWNAME) ;Rename entry OLDNAME to NEWNAME in
"RTN","PXRMP26D",236,0)
 ;file number FILENUM.
"RTN","PXRMP26D",237,0)
 N DA,DIE,DR,NIEN,PXRMINST,TEXT
"RTN","PXRMP26D",238,0)
 S DA=$$FIND1^DIC(FILENUM,"","BXU",OLDNAME)
"RTN","PXRMP26D",239,0)
 I DA=0 Q
"RTN","PXRMP26D",240,0)
 S PXRMINST=1
"RTN","PXRMP26D",241,0)
 S NIEN=$$FIND1^DIC(FILENUM,"","BXU",NEWNAME) I NIEN>0 Q
"RTN","PXRMP26D",242,0)
 S DIE=FILENUM
"RTN","PXRMP26D",243,0)
 S DR=".01///^S X=NEWNAME;100///N"
"RTN","PXRMP26D",244,0)
 D ^DIE
"RTN","PXRMP26D",245,0)
 S TEXT(1)="Converting "_OLDNAME_" IEN: "_DA,TEXT(2)="to national value "_NEWNAME
"RTN","PXRMP26D",246,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMP26D",247,0)
 Q
"RTN","PXRMP26D",248,0)
 ;
"RTN","PXRMP26D",249,0)
 ;compare array with new taxonomies already created if one matches the
"RTN","PXRMP26D",250,0)
 ;array returns that taxonomy IEN
"RTN","PXRMP26D",251,0)
TAXEXIST(ARRAY,DIEN,TCNT,TEXT) ;
"RTN","PXRMP26D",252,0)
 N CIEN,CODESYS,FAIL,IEN,MATCH,RESULT,EDATE,SDATE,TAX,TYPE
"RTN","PXRMP26D",253,0)
 S RESULT=0,MATCH=0
"RTN","PXRMP26D",254,0)
 S TAX=0 F  S TAX=$O(^XTMP(PXRMXTMP,"TAXONOMY",TAX)) Q:TAX'>0!(MATCH=1)  D
"RTN","PXRMP26D",255,0)
 .I ^XTMP(PXRMXTMP,"TAXONOMY",TAX,"COUNT")'=ARRAY("COUNT") Q
"RTN","PXRMP26D",256,0)
 .S FAIL=0
"RTN","PXRMP26D",257,0)
 .S TYPE="" F  S TYPE=$O(^XTMP(PXRMXTMP,"TAXONOMY",TAX,"DATA",TYPE)) Q:TYPE=""!(FAIL=1)  D
"RTN","PXRMP26D",258,0)
 ..S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"TAXONOMY",TAX,"DATA",TYPE,IEN)) Q:IEN'>0!(FAIL=1)  D
"RTN","PXRMP26D",259,0)
 ...I '$D(ARRAY("CODE",TYPE,IEN)) S FAIL=1 Q
"RTN","PXRMP26D",260,0)
 .I FAIL=0 S RESULT=TAX,MATCH=1 D BLDTAXC(.TEXT,.TCNT,RESULT,DIEN)
"RTN","PXRMP26D",261,0)
 Q RESULT
"RTN","PXRMP26D",262,0)
 ;
"RTN","PXRMP26D",263,0)
 ;determine what updates are needed for the Taxonomy
"RTN","PXRMP26D",264,0)
 ; add taxonomy as a finding item/additional finding item if prompts
"RTN","PXRMP26D",265,0)
 ;should be added
"RTN","PXRMP26D",266,0)
 ; calls UPDATE^DIE
"RTN","PXRMP26D",267,0)
UPDATE(DIEN,TAX,UPDTYPE,CPTSTATUS,POVSTATUS,TAXNEEDS) ;
"RTN","PXRMP26D",268,0)
 N CLASS,DEFAULT,DNAME,FDA,FIND,IENCNT,IENROOT,IENS,MSG,NAME,SAME,START,TEXT,TDX,TPR,TYPE,TAXSEL
"RTN","PXRMP26D",269,0)
 S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",270,0)
 D MES^XPDUTL("Updating record for dialog "_DNAME_" IEN: "_DIEN)
"RTN","PXRMP26D",271,0)
 S IENROOT(1)=DIEN
"RTN","PXRMP26D",272,0)
 S TDX=$$TOK^PXRMDTAX(TAX,"POV")
"RTN","PXRMP26D",273,0)
 S TPR=$$TOK^PXRMDTAX(TAX,"CPT")
"RTN","PXRMP26D",274,0)
 I TDX=1 D GETTAXDF^PXRMDTAX(.DEFAULT,"POV",$S(POVSTATUS=2:1,1:0))
"RTN","PXRMP26D",275,0)
 I TPR=1 D GETTAXDF^PXRMDTAX(.DEFAULT,"CPT",$S(CPTSTATUS=2:1,1:0))
"RTN","PXRMP26D",276,0)
 I TDX=0,TPR=0 D  Q
"RTN","PXRMP26D",277,0)
 .S ^XTMP(PXRMXTMP,"DIALOG ERROR",DIEN,"ERROR")="A taxonomy does not have codes marked to be used in a dialog."
"RTN","PXRMP26D",278,0)
 S IENCNT=DIEN
"RTN","PXRMP26D",279,0)
 ;
"RTN","PXRMP26D",280,0)
 S FIND=$P($G(^PXRMD(801.41,DIEN,1)),U,5) I FIND'="" D  G UPDATEX
"RTN","PXRMP26D",281,0)
 .S SAME=0 I FIND[811.2 D
"RTN","PXRMP26D",282,0)
 ..;if same find only add prompts if suppress prompts is null
"RTN","PXRMP26D",283,0)
 ..I +FIND=TAX D  Q
"RTN","PXRMP26D",284,0)
 ...S SAME=1
"RTN","PXRMP26D",285,0)
 ...I UPDTYPE<2 D
"RTN","PXRMP26D",286,0)
 ....S TAXSEL="N"
"RTN","PXRMP26D",287,0)
 ....I TPR=1 S TAXSEL="P" I POVSTATUS=2 S FDA(801.41,DIEN_",",13)="2"
"RTN","PXRMP26D",288,0)
 ....I TDX=1 S TAXSEL="D" I CPTSTATUS=2 S FDA(801.41,DIEN_",",13)="2"
"RTN","PXRMP26D",289,0)
 ....I TPR=1,TDX=1 D
"RTN","PXRMP26D",290,0)
 .....K FDA(801.41,DIEN_",",13)
"RTN","PXRMP26D",291,0)
 .....S TAXSEL="A"
"RTN","PXRMP26D",292,0)
 .....I CPTSTATUS=POVSTATUS,POVSTATUS=2 S FDA(801.41,DIEN_",",13)="2" Q
"RTN","PXRMP26D",293,0)
 .....I CPTSTATUS'=POVSTATUS S TAXNEEDS=1
"RTN","PXRMP26D",294,0)
 ....S FDA(801.41,DIEN_",",123)=TAXSEL
"RTN","PXRMP26D",295,0)
 ....I TDX=1 D ADDTAXFL(DIEN,TAX,"POV",.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",296,0)
 ....I TPR=1 D ADDTAXFL(DIEN,TAX,"CPT",.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",297,0)
 ...I UPDTYPE=1 D PROMPTS(DIEN,TAXSEL,.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",298,0)
 . I SAME=1 Q
"RTN","PXRMP26D",299,0)
 . D ADDFIND1(DIEN,TAX,.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",300,0)
 ;
"RTN","PXRMP26D",301,0)
 D ADDFIND(DIEN,TAX,UPDTYPE,.DEFAULT,.IENCNT,.FDA)
"RTN","PXRMP26D",302,0)
 ;
"RTN","PXRMP26D",303,0)
UPDATEX ;
"RTN","PXRMP26D",304,0)
 ;populate edit history
"RTN","PXRMP26D",305,0)
 N WP
"RTN","PXRMP26D",306,0)
 S WP(1,0)="Reminder Code Conversion Routine did the following:"
"RTN","PXRMP26D",307,0)
 D EDITDES(DIEN,.FDA,.WP)
"RTN","PXRMP26D",308,0)
 ;S IENCNT=IENCNT+1,IENS="+"_IENCNT_","_DIEN_","
"RTN","PXRMP26D",309,0)
 S IENCNT=IENCNT+1,IENS="+"_IENCNT_","_DIEN_","
"RTN","PXRMP26D",310,0)
 S FDA(801.44,IENS,.01)=DT
"RTN","PXRMP26D",311,0)
 S FDA(801.44,IENS,1)=DUZ
"RTN","PXRMP26D",312,0)
 S FDA(801.44,IENS,2)="WP"
"RTN","PXRMP26D",313,0)
 ;populate required fields from existing entry
"RTN","PXRMP26D",314,0)
 S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",315,0)
 S CLASS=$P($G(^PXRMD(801.41,DIEN,100)),U)
"RTN","PXRMP26D",316,0)
 S TYPE=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMP26D",317,0)
 ;
"RTN","PXRMP26D",318,0)
 S FDA(801.41,DIEN_",",.01)=NAME
"RTN","PXRMP26D",319,0)
 S FDA(801.41,DIEN_",",4)=TYPE
"RTN","PXRMP26D",320,0)
 S FDA(801.41,DIEN_",",100)=CLASS
"RTN","PXRMP26D",321,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMP26D",322,0)
 I '$D(MSG) S ^XTMP(PXRMXTMP,"DIALOG",DIEN,"DONE")=1
"RTN","PXRMP26D",323,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMP26D",324,0)
 S ^XTMP(PXRMXTMP,"DIALOG UPDATED",DIEN)=1
"RTN","PXRMP26D",325,0)
 D MES^XPDUTL("Completed record updates for dialog "_DNAME_" IEN: "_DIEN)
"RTN","PXRMP26D",326,0)
 D MES^XPDUTL(" ")
"RTN","PXRMP26D",327,0)
 Q
"RTN","PXRMP26D",328,0)
 ;
"RTN","PXRMP26D",329,0)
 ;DEBUG CODE to be deleted
"RTN","PXRMP26D",330,0)
WRITENAM ;
"RTN","PXRMP26D",331,0)
 N NAME,PXRMXTMP,TEMP,DIEN
"RTN","PXRMP26D",332,0)
 S PXRMXTMP="PXRM DIALOG CONVERSION",TEMP="DIALOG"
"RTN","PXRMP26D",333,0)
 S DIEN=0 F  S DIEN=$O(^XTMP(PXRMXTMP,TEMP,DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26D",334,0)
 .S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26D",335,0)
 .I NAME["WAT" D
"RTN","PXRMP26D",336,0)
 ..K ^XTMP(PXRMXTMP,TEMP,DIEN,"ICD9(")
"RTN","PXRMP26D",337,0)
 Q
"RTN","PXRMP26D",338,0)
 ;
"RTN","PXRMP26D",339,0)
 ;write out the final overview when the updates are done
"RTN","PXRMP26D",340,0)
WRITE ;
"RTN","PXRMP26D",341,0)
 N ARRAY,CNT,FIRST,IEN,NAME,NODE,TEXT,CODESYS,CODE
"RTN","PXRMP26D",342,0)
 S CNT=0
"RTN","PXRMP26D",343,0)
 D MES^XPDUTL("Overview")
"RTN","PXRMP26D",344,0)
 I $D(^XTMP(PXRMXTMP,"TAXONOMY"))>0 D
"RTN","PXRMP26D",345,0)
 . S CNT=0
"RTN","PXRMP26D",346,0)
 . ;S CNT=CNT+1,TEXT(CNT)="The following Taxonomies were created:"
"RTN","PXRMP26D",347,0)
 . S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"TAXONOMY",IEN)) Q:IEN'>0  S CNT=CNT+1
"RTN","PXRMP26D",348,0)
 . I CNT>0 D MES^XPDUTL("Created "_CNT_" taxonomies")
"RTN","PXRMP26D",349,0)
 ;
"RTN","PXRMP26D",350,0)
 I $D(^XTMP(PXRMXTMP,"DIALOG UPDATED"))>0 D
"RTN","PXRMP26D",351,0)
 . S CNT=0
"RTN","PXRMP26D",352,0)
 . S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"DIALOG UPDATED",IEN)) Q:IEN'>0  S CNT=CNT+1
"RTN","PXRMP26D",353,0)
 . I CNT>0 D MES^XPDUTL("Updated "_CNT_" dialogs")
"RTN","PXRMP26D",354,0)
 I '$D(^XTMP(PXRMXTMP,"DIALOG UPDATED")),$D(^XTMP(PXRMXTMP,"TAXONOMY ERROR")) D MES^XPDUTL("No errors found") Q
"RTN","PXRMP26D",355,0)
 S CNT=1
"RTN","PXRMP26D",356,0)
 ;
"RTN","PXRMP26D",357,0)
 S TEXT(CNT,0)="Manual Correction is needed for the following items"
"RTN","PXRMP26D",358,0)
 I $D(^XTMP(PXRMXTMP,"DIALOG ERROR")) D
"RTN","PXRMP26D",359,0)
 .S CNT=CNT+1,TEXT(CNT,0)="",CNT=CNT+1,TEXT(CNT,0)="The following dialog(s) had an error in the update process."
"RTN","PXRMP26D",360,0)
 .S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",361,0)
 ..S NAME=$P($G(^PXRMD(801.41,IEN,0)),U) I NAME="" Q
"RTN","PXRMP26D",362,0)
 ..S ARRAY(IEN)=""
"RTN","PXRMP26D",363,0)
 ..S CNT=CNT+1,TEXT(CNT,0)="   "_NAME
"RTN","PXRMP26D",364,0)
 ..I $D(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN,"CODE")) D
"RTN","PXRMP26D",365,0)
 ...S CNT=CNT+1,TEXT(CNT,0)="   List of pre-conversion codes below:"
"RTN","PXRMP26D",366,0)
 ...S CODESYS="" F  S CODESYS=$O(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN,"CODE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMP26D",367,0)
 ....S CODE="" F  S CODE=$O(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN,"CODE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMP26D",368,0)
 .....S CNT=CNT+1,TEXT(CNT,0)="      "_CODESYS_": "_CODE
"RTN","PXRMP26D",369,0)
 ..I $D(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN,"ERROR")) S CNT=CNT+1,TEXT(CNT,0)="       "_$G(^XTMP(PXRMXTMP,"DIALOG ERROR",IEN,"ERROR"))
"RTN","PXRMP26D",370,0)
 ;
"RTN","PXRMP26D",371,0)
 I $D(^XTMP(PXRMXTMP,"TAXONOMY ERROR")) D
"RTN","PXRMP26D",372,0)
 .S CNT=CNT+1,TEXT(CNT,0)="",CNT=CNT+1,TEXT(CNT,0)="The following taxonomies are missing codes."
"RTN","PXRMP26D",373,0)
 .S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",374,0)
 ..S NAME=$P($G(^PXD(811.2,IEN,0)),U) I NAME="" Q
"RTN","PXRMP26D",375,0)
 ..S CNT=CNT+1,TEXT(CNT,0)="   "_NAME
"RTN","PXRMP26D",376,0)
 ..S CNT=CNT+1,TEXT(CNT,0)="   List of pre-conversion codes below:"
"RTN","PXRMP26D",377,0)
 ..S CODESYS="" F  S CODESYS=$O(^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN,"CODE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMP26D",378,0)
 ...S CODE="" F  S CODE=$O(^XTMP(PXRMXTMP,"TAXONOMY ERROR",IEN,"CODE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMP26D",379,0)
 ....S CNT=CNT+1,TEXT(CNT,0)="      "_CODESYS_": "_CODE
"RTN","PXRMP26D",380,0)
 ;
"RTN","PXRMP26D",381,0)
 S FIRST=1
"RTN","PXRMP26D",382,0)
 S IEN=0 F  S IEN=$O(^XTMP(PXRMXTMP,"DIALOG",IEN)) Q:IEN'>0  D
"RTN","PXRMP26D",383,0)
 .I $G(^XTMP(PXRMXTMP,"DIALOG",IEN,"DONE"))=1 Q
"RTN","PXRMP26D",384,0)
 .I $D(ARRAY(IEN)) Q
"RTN","PXRMP26D",385,0)
 .S NAME=$P($G(^PXRMD(801.41,IEN,0)),U) I NAME="" Q
"RTN","PXRMP26D",386,0)
 .I FIRST=1 D
"RTN","PXRMP26D",387,0)
 ..S CNT=CNT+1,TEXT(CNT,0)="",CNT=CNT+1,TEXT(CNT,0)="The following dialogs took an error in UPDATE^DIE.",FIRST=0
"RTN","PXRMP26D",388,0)
 .S CNT=CNT+1,TEXT(CNT,0)="   "_NAME
"RTN","PXRMP26D",389,0)
 ;
"RTN","PXRMP26D",390,0)
 I CNT>1 D
"RTN","PXRMP26D",391,0)
 .K ^TMP("PXRMERRM")
"RTN","PXRMP26D",392,0)
 .M ^TMP("PXRMERRM",$J)=TEXT
"RTN","PXRMP26D",393,0)
 .D SEND^PXRMMSG("PXRMERRM","Clinical Reminder Patch 26 Errors.")
"RTN","PXRMP26D",394,0)
 ;
"RTN","PXRMP26D",395,0)
 ;D MES^XPDUTL(.TEXT)
"RTN","PXRMP26D",396,0)
 ;D MES^XPDUTL(.TEXT)
"RTN","PXRMP26D",397,0)
 Q
"RTN","PXRMP26D",398,0)
 ;
"RTN","PXRMP26E")
0^97^B1814747
"RTN","PXRMP26E",1,0)
PXRMP26E ;SLC/PKR - Exchange inits for PXRM*2.0*26 ;6/24/2014
"RTN","PXRMP26E",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMP26E",3,0)
 ;====================================================
"RTN","PXRMP26E",4,0)
EXARRAY(MODE,ARRAY) ;List of exchange entries used by delete and install
"RTN","PXRMP26E",5,0)
 ;MODE values: I for include in build, A for include action.
"RTN","PXRMP26E",6,0)
 N LN
"RTN","PXRMP26E",7,0)
 S LN=0
"RTN","PXRMP26E",8,0)
 ;
"RTN","PXRMP26E",9,0)
 S LN=LN+1
"RTN","PXRMP26E",10,0)
 S ARRAY(LN,1)="PXRM PATCH 26 DIALOG UPDATES"
"RTN","PXRMP26E",11,0)
 I MODE["I" S ARRAY(LN,2)="09/17/2013@19:18:42"
"RTN","PXRMP26E",12,0)
 I MODE["A" S ARRAY(LN,3)="O"
"RTN","PXRMP26E",13,0)
 ;
"RTN","PXRMP26E",14,0)
 S LN=LN+1
"RTN","PXRMP26E",15,0)
 S ARRAY(LN,1)="PXRM PATCH 26 ECOE UPDATE"
"RTN","PXRMP26E",16,0)
 I MODE["I" S ARRAY(LN,2)="04/17/2014@17:06:32"
"RTN","PXRMP26E",17,0)
 I MODE["A" S ARRAY(LN,3)="O"
"RTN","PXRMP26E",18,0)
 ;
"RTN","PXRMP26E",19,0)
 S LN=LN+1
"RTN","PXRMP26E",20,0)
 S ARRAY(LN,1)="PXRM PATCH 26 PALLIATIVE CARE UPDATE"
"RTN","PXRMP26E",21,0)
 I MODE["I" S ARRAY(LN,2)="04/17/2014@17:05:45"
"RTN","PXRMP26E",22,0)
 I MODE["A" S ARRAY(LN,3)="O"
"RTN","PXRMP26E",23,0)
 ;
"RTN","PXRMP26E",24,0)
 S LN=LN+1
"RTN","PXRMP26E",25,0)
 S ARRAY(LN,1)="PXRM*2*26 NATIONAL TAXONOMIES"
"RTN","PXRMP26E",26,0)
 I MODE["I" S ARRAY(LN,2)="06/24/2014@09:51:15"
"RTN","PXRMP26E",27,0)
 I MODE["A" S ARRAY(LN,3)="O"
"RTN","PXRMP26E",28,0)
 ;
"RTN","PXRMP26E",29,0)
 I MODE="IA" D BMES^XPDUTL("There are "_LN_" Reminder Exchange entries to be installed.")
"RTN","PXRMP26E",30,0)
 Q
"RTN","PXRMP26E",31,0)
 ;
"RTN","PXRMP26I")
0^^B28578314
"RTN","PXRMP26I",1,0)
PXRMP26I ;SLC/PKR - Inits for PXRM*2.0*26. ;05/07/2014
"RTN","PXRMP26I",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMP26I",3,0)
 Q
"RTN","PXRMP26I",4,0)
 ;==========================================
"RTN","PXRMP26I",5,0)
CFINC(Y) ;List of computed findings to include in the build.
"RTN","PXRMP26I",6,0)
 N CFLIST,CFNAME
"RTN","PXRMP26I",7,0)
 S CFLIST("VA-ALLERGY")=""
"RTN","PXRMP26I",8,0)
 S CFLIST("VA-FILEMAN DATE")=""
"RTN","PXRMP26I",9,0)
 S CFLIST("VA-PROGRESS NOTE")=""
"RTN","PXRMP26I",10,0)
 S CFLIST("VA-REMINDER DEFINITION")=""
"RTN","PXRMP26I",11,0)
 ;S CFLIST("")=""
"RTN","PXRMP26I",12,0)
 S CFNAME=$P($G(^PXRMD(811.4,Y,0)),U)
"RTN","PXRMP26I",13,0)
 Q $S($D(CFLIST(CFNAME)):1,1:0)
"RTN","PXRMP26I",14,0)
 ;
"RTN","PXRMP26I",15,0)
 ;==========================================
"RTN","PXRMP26I",16,0)
CHECK(GLOB,DLGPTR) ; check for duplicates
"RTN","PXRMP26I",17,0)
 N INDEX,RETURN S INDEX=0,RESULT=1
"RTN","PXRMP26I",18,0)
 ;RESULT=1 ok to add, RESULT=-1 not ok to add
"RTN","PXRMP26I",19,0)
 F  S INDEX=$O(@GLOB@(INDEX)) Q:INDEX=""!(RESULT=-1)  D
"RTN","PXRMP26I",20,0)
 .S:DLGPTR=$P(@GLOB@(INDEX),U) RESULT=-1 ;if the pointer matches one of the prompts already stored, it's a duplicate, don't store it again.
"RTN","PXRMP26I",21,0)
 Q RESULT
"RTN","PXRMP26I",22,0)
 ;
"RTN","PXRMP26I",23,0)
 ;==================================================
"RTN","PXRMP26I",24,0)
CTAXBDES ;Copy taxonomy brief descriptions to the description field.
"RTN","PXRMP26I",25,0)
 N BDES,IEN,NAME
"RTN","PXRMP26I",26,0)
 D BMES^XPDUTL("Copying all taxonomy Brief Descriptions to Description.")
"RTN","PXRMP26I",27,0)
 S NAME=""
"RTN","PXRMP26I",28,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMP26I",29,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMP26I",30,0)
 . S BDES=$P(^PXD(811.2,IEN,0),U,2)
"RTN","PXRMP26I",31,0)
 . D BMES^XPDUTL("Working on taxonomy "_NAME)
"RTN","PXRMP26I",32,0)
 . I BDES="" D MES^XPDUTL(" Brief description does not exist.") Q
"RTN","PXRMP26I",33,0)
 . I $D(^PXD(811.2,IEN,1)) D MES^XPDUTL(" Already copied.") Q
"RTN","PXRMP26I",34,0)
 . D MES^XPDUTL(" Brief description: "_BDES)
"RTN","PXRMP26I",35,0)
 . S ^PXD(811.2,IEN,1,0)="^^1^1^"_DT_"^^"
"RTN","PXRMP26I",36,0)
 . S ^PXD(811.2,IEN,1,1,0)=BDES
"RTN","PXRMP26I",37,0)
 Q
"RTN","PXRMP26I",38,0)
 ;
"RTN","PXRMP26I",39,0)
 ;==========================================
"RTN","PXRMP26I",40,0)
DELDD ;Delete the old data dictionaries.
"RTN","PXRMP26I",41,0)
 N DIU,TEXT
"RTN","PXRMP26I",42,0)
 D EN^DDIOL("Removing old data dictionaries.")
"RTN","PXRMP26I",43,0)
 S DIU(0)=""
"RTN","PXRMP26I",44,0)
 F DIU=811.2,801.41 D
"RTN","PXRMP26I",45,0)
 . S TEXT=" Deleting data dictionary for file # "_DIU
"RTN","PXRMP26I",46,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMP26I",47,0)
 . D EN^DIU2
"RTN","PXRMP26I",48,0)
 Q
"RTN","PXRMP26I",49,0)
 ;
"RTN","PXRMP26I",50,0)
 ;==========================================
"RTN","PXRMP26I",51,0)
DELOPT ;AGP ICD10: added code to remove options from menu.
"RTN","PXRMP26I",52,0)
 N RESULT
"RTN","PXRMP26I",53,0)
 ;Remove PXRM TAXONOMY DIALOG from PXRM DIALOG PARAMETERS also set the 
"RTN","PXRMP26I",54,0)
 ;PXRM TAXONOMY DIALOG to delete in the build file.
"RTN","PXRMP26I",55,0)
 S RESULT=$$DELETE^XPDMENU("PXRM DIALOG PARAMETERS","PXRM TAXONOMY DIALOG")
"RTN","PXRMP26I",56,0)
 Q
"RTN","PXRMP26I",57,0)
 ;
"RTN","PXRMP26I",58,0)
 ;===============================================
"RTN","PXRMP26I",59,0)
DEXXREFS ;Delete unused Exchange Installation History 'B' indexes.
"RTN","PXRMP26I",60,0)
 N MSG
"RTN","PXRMP26I",61,0)
 ;Component List
"RTN","PXRMP26I",62,0)
 D DELIX^DDMOD(811.8031,.01,1,"K","","MSG")
"RTN","PXRMP26I",63,0)
 ;Additional Details
"RTN","PXRMP26I",64,0)
 D DELIX^DDMOD(811.80315,.01,1,"K","","MSG")
"RTN","PXRMP26I",65,0)
 Q
"RTN","PXRMP26I",66,0)
 ;
"RTN","PXRMP26I",67,0)
 ;===============================================
"RTN","PXRMP26I",68,0)
INILT ;Initialize list templates
"RTN","PXRMP26I",69,0)
 ;THIS MAY NO LONGER BE NECESSARY, THIS NEEDS TO BE CONFIRMED
"RTN","PXRMP26I",70,0)
 ;N IEN,IND,LIST,TEMP0
"RTN","PXRMP26I",71,0)
 ;D LTL^PXRMP26I(.LIST)
"RTN","PXRMP26I",72,0)
 ;S IND=0
"RTN","PXRMP26I",73,0)
 ;IA #4123
"RTN","PXRMP26I",74,0)
 ;F  S IND=$O(LIST(IND)) Q:IND=""  D
"RTN","PXRMP26I",75,0)
 ;. S IEN=$O(^SD(409.61,"B",LIST(IND),"")) Q:IEN=""
"RTN","PXRMP26I",76,0)
 ;. S TEMP0=$G(^SD(409.61,IEN,0))
"RTN","PXRMP26I",77,0)
 ;. K ^SD(409.61,IEN)
"RTN","PXRMP26I",78,0)
 ;. S ^SD(409.61,IEN,0)=TEMP0
"RTN","PXRMP26I",79,0)
 Q
"RTN","PXRMP26I",80,0)
 ;
"RTN","PXRMP26I",81,0)
 ;==========================================
"RTN","PXRMP26I",82,0)
LTL(LIST) ;This is the list of list templates that being distributed
"RTN","PXRMP26I",83,0)
 ;in the patch.
"RTN","PXRMP26I",84,0)
 ;S LIST(1)="PXRM EX LIST COMPONENTS"
"RTN","PXRMP26I",85,0)
 ;S LIST(2)="PXRM EX REMINDER EXCHANGE"
"RTN","PXRMP26I",86,0)
 Q
"RTN","PXRMP26I",87,0)
 ;
"RTN","PXRMP26I",88,0)
 ;==========================================
"RTN","PXRMP26I",89,0)
PRE ;Pre-init
"RTN","PXRMP26I",90,0)
 ;Disable options and protocols
"RTN","PXRMP26I",91,0)
 D OPTION^PXRMUTIL("DISABLE")
"RTN","PXRMP26I",92,0)
 D PROTOCOL^PXRMUTIL("DISABLE")
"RTN","PXRMP26I",93,0)
 D BUILDD^PXRMDIEV("PXRM*2.0*26")
"RTN","PXRMP26I",94,0)
 D DELOPT
"RTN","PXRMP26I",95,0)
 D TMGRRO^PXRMP26I
"RTN","PXRMP26I",96,0)
 D PRE^PXRMP26D
"RTN","PXRMP26I",97,0)
 D DELDD^PXRMP26I
"RTN","PXRMP26I",98,0)
 D DELEXE^PXRMEXSI("EXARRAY","PXRMP26E")
"RTN","PXRMP26I",99,0)
 Q
"RTN","PXRMP26I",100,0)
 ;
"RTN","PXRMP26I",101,0)
 ;==========================================
"RTN","PXRMP26I",102,0)
POST ;Post-init
"RTN","PXRMP26I",103,0)
 D TMGRN^PXRMP26I
"RTN","PXRMP26I",104,0)
 D CTAXBDES^PXRMP26I
"RTN","PXRMP26I",105,0)
 D CPALL^PXRMTXCR
"RTN","PXRMP26I",106,0)
 D SETPVER^PXRMUTIL("2.0P26")
"RTN","PXRMP26I",107,0)
 D POST^PXRMP26D
"RTN","PXRMP26I",108,0)
 D DEXXREFS^PXRMP26I
"RTN","PXRMP26I",109,0)
 ;Install Exchange File entries.
"RTN","PXRMP26I",110,0)
 D SMEXINS^PXRMEXSI("EXARRAY","PXRMP26E")
"RTN","PXRMP26I",111,0)
 D RBLD20I^PXRMTAXD
"RTN","PXRMP26I",112,0)
 D RBPDS^PXRMP26I
"RTN","PXRMP26I",113,0)
 ;Check the Selected Codes Multiple and repair any that are corrupted.
"RTN","PXRMP26I",114,0)
 D CHECKALL^PXRMTXIC
"RTN","PXRMP26I",115,0)
 ;Enable options and protocols
"RTN","PXRMP26I",116,0)
 D OPTION^PXRMUTIL("ENABLE")
"RTN","PXRMP26I",117,0)
 D PROTOCOL^PXRMUTIL("ENABLE")
"RTN","PXRMP26I",118,0)
 D BUILDE^PXRMDIEV("PXRM*2.0*26")
"RTN","PXRMP26I",119,0)
 ;If the indexes for files #45 and #9000011 are still rebuilding,
"RTN","PXRMP26I",120,0)
 ;disable reminder evaluation.
"RTN","PXRMP26I",121,0)
 I '$D(^PXRMINDX(45,"DATE BUILT")) D INDEXD^PXRMDIEV(45)
"RTN","PXRMP26I",122,0)
 I '$D(^PXRMINDX(9000011,"DATE BUILT")) D INDEXD^PXRMDIEV(9000011)
"RTN","PXRMP26I",123,0)
 ;Put the old taxonomy management and edit options out of order.
"RTN","PXRMP26I",124,0)
 D OUT^XPDMENU("PXRM TAXONOMY MANAGEMENT (OLD)","This option is obsolete.")
"RTN","PXRMP26I",125,0)
 D OUT^XPDMENU("PXRM TAXONOMY EDIT","This option is obsolete.")
"RTN","PXRMP26I",126,0)
 D OUT^XPDMENU("PXRMCS INACTIVE DIALOG CODES","This option is obsolete.")
"RTN","PXRMP26I",127,0)
 D SENDIM^PXRMP26I
"RTN","PXRMP26I",128,0)
 Q
"RTN","PXRMP26I",129,0)
 ;
"RTN","PXRMP26I",130,0)
 ;==========================================
"RTN","PXRMP26I",131,0)
RBPDS ;Rebuild the Patient Data Source index.
"RTN","PXRMP26I",132,0)
 N IEN,NAME,PDS
"RTN","PXRMP26I",133,0)
 D BMES^XPDUTL("Rebuilding Patient Data Source Index.")
"RTN","PXRMP26I",134,0)
 S NAME=""
"RTN","PXRMP26I",135,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMP26I",136,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMP26I",137,0)
 . S PDS=$P(^PXD(811.2,IEN,0),U,4)
"RTN","PXRMP26I",138,0)
 . D MES^XPDUTL(" Taxonomy: "_NAME_"; IEN="_IEN_"; PDS="_PDS)
"RTN","PXRMP26I",139,0)
 . D SPDS^PXRMPDS(IEN,PDS)
"RTN","PXRMP26I",140,0)
 Q
"RTN","PXRMP26I",141,0)
 ;
"RTN","PXRMP26I",142,0)
 ;==========================================
"RTN","PXRMP26I",143,0)
SENDIM ;Send install message.
"RTN","PXRMP26I",144,0)
 N FROM,NODE,PARAM,SYSTEM,SUBJECT,TO,VALUE
"RTN","PXRMP26I",145,0)
 S NODE="PXRM*2.0*26"
"RTN","PXRMP26I",146,0)
 K ^TMP(NODE,$J)
"RTN","PXRMP26I",147,0)
 ;DBIA #1131 for ^XMB("NETNAME")
"RTN","PXRMP26I",148,0)
 S FROM="PXRM*2.0*26 Install@"_^XMB("NETNAME")
"RTN","PXRMP26I",149,0)
 ;DBIA #2541
"RTN","PXRMP26I",150,0)
 S SYSTEM=$$KSP^XUPARAM("WHERE")
"RTN","PXRMP26I",151,0)
 I $$PROD^XUPROD(1) S TO("G.CLINICAL REMINDERS SUPPORT@DOMAIN.EXT")=""
"RTN","PXRMP26I",152,0)
 E  D
"RTN","PXRMP26I",153,0)
 . N MGIEN,MGROUP
"RTN","PXRMP26I",154,0)
 . S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMP26I",155,0)
 . S MGROUP=$S(MGIEN'="":"G."_$$GET1^DIQ(3.8,MGIEN,.01),1:DUZ)
"RTN","PXRMP26I",156,0)
 . S TO(MGROUP)=""
"RTN","PXRMP26I",157,0)
 S SUBJECT="Install of PXRM*2.0*26"
"RTN","PXRMP26I",158,0)
 S ^TMP(NODE,$J,1,0)="PXRM*2.0*26 has been installed."
"RTN","PXRMP26I",159,0)
 S ^TMP(NODE,$J,2,0)="System is "_SYSTEM
"RTN","PXRMP26I",160,0)
 D SEND^PXRMMSG(NODE,SUBJECT,.TO,FROM)
"RTN","PXRMP26I",161,0)
 Q
"RTN","PXRMP26I",162,0)
 ;
"RTN","PXRMP26I",163,0)
 ;===============================================
"RTN","PXRMP26I",164,0)
TMGRN ;Replace the old taxonomy mangement option with the new one on the
"RTN","PXRMP26I",165,0)
 ;PXRM MANAGERS MENU.
"RTN","PXRMP26I",166,0)
 N RESULT
"RTN","PXRMP26I",167,0)
 S RESULT=$$DELETE^XPDMENU("PXRM MANAGERS MENU","PXRM TAXONOMY MANAGEMENT (OLD)")
"RTN","PXRMP26I",168,0)
 S RESULT=$$ADD^XPDMENU("PXRM MANAGERS MENU","PXRM TAXONOMY MANAGEMENT","TXM",20)
"RTN","PXRMP26I",169,0)
 Q
"RTN","PXRMP26I",170,0)
 ;
"RTN","PXRMP26I",171,0)
 ;===============================================
"RTN","PXRMP26I",172,0)
TMGRRO ;Handle the old PXRM TAXONOMY MANAGEMENT option. Do not delete it until
"RTN","PXRMP26I",173,0)
 ;the cleanup patch, rename it for now. If the rename has already been
"RTN","PXRMP26I",174,0)
 ;done, don't do it again.
"RTN","PXRMP26I",175,0)
 I +$$LKOPT^XPDMENU("PXRM TAXONOMY MANAGEMENT (OLD)")>0 Q
"RTN","PXRMP26I",176,0)
 D BMES^XPDUTL("Setting up taxonomy management option.")
"RTN","PXRMP26I",177,0)
 D RENAME^XPDMENU("PXRM TAXONOMY MANAGEMENT","PXRM TAXONOMY MANAGEMENT (OLD)")
"RTN","PXRMP26I",178,0)
 Q
"RTN","PXRMP26I",179,0)
 ;
"RTN","PXRMP26X")
0^96^B39898924
"RTN","PXRMP26X",1,0)
PXRMP26X ;SLC/AGP - Dialog Conversion Extra routine for PXRM*2.0*26. ;01/02/2014
"RTN","PXRMP26X",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMP26X",3,0)
 Q
"RTN","PXRMP26X",4,0)
 ;
"RTN","PXRMP26X",5,0)
 ;build an XTMP value of dialogs that contains Taxonomy, ICD9 codes, and/or CPT codes.
"RTN","PXRMP26X",6,0)
 ;if ICD9 or CPT deletes the values from file 801.41
"RTN","PXRMP26X",7,0)
BLDLIST(PXRMSKIP) ;
"RTN","PXRMP26X",8,0)
 K ^TMP($J,"DLG FIND"),^TMP($J,"DLG ORDER")
"RTN","PXRMP26X",9,0)
 D MES^XPDUTL("Building lists of dialogs to update")
"RTN","PXRMP26X",10,0)
 D BLDDLGTM^PXRMSTS("DLG FIND")
"RTN","PXRMP26X",11,0)
 N ADD,ADDFNDS,ADDFVPL,CNT,DIEN,FIND,FINDFVPL,IEN,NAME,NUM,TEMP,TYPE
"RTN","PXRMP26X",12,0)
 D BLDRLIST^PXRMVPTR(801.41,15,.FINDFVPL)
"RTN","PXRMP26X",13,0)
 D BLDRLIST^PXRMVPTR(801.4118,.01,.ADDFVPL)
"RTN","PXRMP26X",14,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26X",15,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Dialog pre-conversion report:"
"RTN","PXRMP26X",16,0)
 F TYPE="ICD9(","ICPT(","PXD(811.2," D
"RTN","PXRMP26X",17,0)
 .S IEN=0 F  S IEN=$O(^TMP($J,"DLG FIND",TYPE,IEN)) Q:IEN'>0  D
"RTN","PXRMP26X",18,0)
 ..S DIEN=0 F  S DIEN=$O(^TMP($J,"DLG FIND",TYPE,IEN,DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26X",19,0)
 ...S NAME=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMP26X",20,0)
 ...;If field is set assume conversion has already happen.
"RTN","PXRMP26X",21,0)
 ...I TYPE="PXD(811.2,",$P($G(^PXRMD(801.41,DIEN,"TAX")),U)'="" Q
"RTN","PXRMP26X",22,0)
 ...;If taxonomy is assigned as an additional finding assume conversion has already happen
"RTN","PXRMP26X",23,0)
 ...I TYPE="PXD(811.2,",$D(^TMP($J,"DLG FIND",TYPE,IEN,DIEN,18)) Q
"RTN","PXRMP26X",24,0)
 ...I '$D(PXRMSKIP(NAME)) D BLDXTMP(TYPE,DIEN,IEN,.FINDFVPL,.ADDFVPL)
"RTN","PXRMP26X",25,0)
 ...I TYPE="PXD(811.2," Q
"RTN","PXRMP26X",26,0)
 ...;
"RTN","PXRMP26X",27,0)
 ...F FIND=15,18 D
"RTN","PXRMP26X",28,0)
 ....I FIND=15,$D(^TMP($J,"DLG FIND",TYPE,IEN,DIEN,FIND)) S TEMP(15,DIEN)="" Q
"RTN","PXRMP26X",29,0)
 ....S NUM=0 F  S NUM=$O(^TMP($J,"DLG FIND",TYPE,IEN,DIEN,FIND,NUM)) Q:NUM'>0  S TEMP(18,DIEN,NUM)=""
"RTN","PXRMP26X",30,0)
 I $D(^TMP($J,"DLG ORDER")) S DIEN=0 F  S DIEN=$O(^TMP($J,"DLG ORDER",DIEN)) Q:DIEN'>0  D BLDTXT(DIEN,.FINDFVPL,.ADDFVPL,0,1)
"RTN","PXRMP26X",31,0)
 I '$D(TEMP) G BLDLISTX
"RTN","PXRMP26X",32,0)
 F FIND=15,18 D
"RTN","PXRMP26X",33,0)
 .S DIEN="" F  S DIEN=$O(TEMP(FIND,DIEN)) Q:DIEN'>0  D
"RTN","PXRMP26X",34,0)
 ..I FIND=15 D DELDATA(DIEN,FIND) Q
"RTN","PXRMP26X",35,0)
 ..S NUM="" F  S NUM=$O(TEMP(FIND,DIEN,NUM)) Q:NUM'>0  D DELDATA(DIEN,FIND,NUM)
"RTN","PXRMP26X",36,0)
BLDLISTX ;
"RTN","PXRMP26X",37,0)
 I $O(^TMP("PXRMXMZ",$J,""),-1)>1 D SEND^PXRMMSG("PXRMXMZ","Clinical Reminder Patch 26 Pre-conversion dialog.")
"RTN","PXRMP26X",38,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26X",39,0)
 Q
"RTN","PXRMP26X",40,0)
 ;
"RTN","PXRMP26X",41,0)
BLDTXT(DIEN,FINDFVPL,ADDFVPL,TAXNEEDS,PRE) ;
"RTN","PXRMP26X",42,0)
 N ADD,CNT,CPTTEXT,NAME,NODE,NUM,POVTEXT,RES,TEXT,TEMP,TSEL
"RTN","PXRMP26X",43,0)
 S CNT=+$O(^TMP("PXRMXMZ",$J,""),-1)
"RTN","PXRMP26X",44,0)
 I CNT>0 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=" "
"RTN","PXRMP26X",45,0)
 S NODE=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMP26X",46,0)
 S NAME=$P(NODE,U)
"RTN","PXRMP26X",47,0)
 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=NAME
"RTN","PXRMP26X",48,0)
 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="======================================================="
"RTN","PXRMP26X",49,0)
 ;
"RTN","PXRMP26X",50,0)
 S TEMP=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMP26X",51,0)
 ;S TEMP=$P($G(^PXRMD(801.41,DIEN,1)),U,5),RES=+$P($G(^PXRMD(801.41,DIEN,1)),U,3)
"RTN","PXRMP26X",52,0)
 I TAXNEEDS=1 D
"RTN","PXRMP26X",53,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="PREVIOUSLY THE DIALOG WAS SET TO BOTH CURRENT AND HISTORICAL ENCOUNTERS."
"RTN","PXRMP26X",54,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="DIALOG IS NOW SET TO CURRENT ENCOUNTER ONLY."
"RTN","PXRMP26X",55,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="REVIEW THE DIALOG BEFORE USING IN CPRS."
"RTN","PXRMP26X",56,0)
 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Resolution Type:",25)_" "_$$GET1^DIQ(801.41,DIEN,13)
"RTN","PXRMP26X",57,0)
 I TEMP'="" D
"RTN","PXRMP26X",58,0)
 .S TEXT=$$BLDTXTF(TEMP,.FINDFVPL)
"RTN","PXRMP26X",59,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Finding Item:",25)_" "_TEXT
"RTN","PXRMP26X",60,0)
 .D LISTCODE(DIEN,TEXT,TEMP,.CNT,0)
"RTN","PXRMP26X",61,0)
 .S TSEL=$$GET1^DIQ(801.41,DIEN,123)
"RTN","PXRMP26X",62,0)
 .I PRE=0 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Taxonomy Pick List:",25)_" "_$G(TSEL)
"RTN","PXRMP26X",63,0)
 .S CPTTEXT="",POVTEXT=""
"RTN","PXRMP26X",64,0)
 .I "AD"[TSEL S POVTEXT=$$GET1^DIQ(801.41,DIEN,141)
"RTN","PXRMP26X",65,0)
 .I "AP"[TSEL S CPTTEXT=$$GET1^DIQ(801.41,DIEN,142)
"RTN","PXRMP26X",66,0)
 .I $G(POVTEXT)'="" S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Diagnosis Header:",25)_" "_POVTEXT
"RTN","PXRMP26X",67,0)
 .I $G(CPTTEXT)'="" S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Procedure Header:",25)_" "_CPTTEXT
"RTN","PXRMP26X",68,0)
 ;
"RTN","PXRMP26X",69,0)
 I $D(^PXRMD(801.41,DIEN,3,0)) D
"RTN","PXRMP26X",70,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=" "
"RTN","PXRMP26X",71,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Additional Finding Items:",25)
"RTN","PXRMP26X",72,0)
 .S ADD="" F  S ADD=$O(^PXRMD(801.41,DIEN,3,"B",ADD)) Q:ADD=""  D
"RTN","PXRMP26X",73,0)
 ..S TEXT=$$BLDTXTF(ADD,.ADDFVPL)
"RTN","PXRMP26X",74,0)
 ..S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="    Items: "_TEXT
"RTN","PXRMP26X",75,0)
 ..D LISTCODE(DIEN,TEXT,ADD,.CNT,1)
"RTN","PXRMP26X",76,0)
 I $P($G(^PXRMD(801.41,DIEN,2)),U,5)=1 D
"RTN","PXRMP26X",77,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=" "
"RTN","PXRMP26X",78,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)="Suppress All Prompts: Yes"
"RTN","PXRMP26X",79,0)
 I $D(^PXRMD(801.41,DIEN,10)) D
"RTN","PXRMP26X",80,0)
 . S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=" "
"RTN","PXRMP26X",81,0)
 . S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Components:",15)
"RTN","PXRMP26X",82,0)
 . S NUM=0 F  S NUM=$O(^PXRMD(801.41,DIEN,10,NUM)) Q:NUM'>0  D
"RTN","PXRMP26X",83,0)
 . .S NODE=$G(^PXRMD(801.41,DIEN,10,NUM,0))
"RTN","PXRMP26X",84,0)
 . .D BLDTXTP(NODE,.CNT)
"RTN","PXRMP26X",85,0)
 Q
"RTN","PXRMP26X",86,0)
 ;
"RTN","PXRMP26X",87,0)
BLDTXTP(NODE,CNT) ;
"RTN","PXRMP26X",88,0)
 N DNODE,IEN,LABEL,NAME,TEMP,TYPE,TYPEOUT,VALUE,X
"RTN","PXRMP26X",89,0)
 S IEN=$P(NODE,U,2) I +$G(IEN)'>0 Q
"RTN","PXRMP26X",90,0)
 S DNODE=$G(^PXRMD(801.41,IEN,0))
"RTN","PXRMP26X",91,0)
 S NAME=$P(DNODE,U),TYPE=$P(DNODE,U,4),TYPEOUT=$$BLDTXTT(TYPE)
"RTN","PXRMP26X",92,0)
 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR("Sequence:",20)_" "_$P(NODE,U)_" "_TYPEOUT_" "_NAME
"RTN","PXRMP26X",93,0)
 I "FP"'[TYPE Q
"RTN","PXRMP26X",94,0)
 F X=6:1:10 D
"RTN","PXRMP26X",95,0)
 . S TEMP=$P(NODE,U,X) I TEMP="" Q
"RTN","PXRMP26X",96,0)
 . S LABEL=$S(X=6:"Prompt Caption:",X=7:"New Line:",X=8:"Exclude From PN Text:",X=9:"Required:",1:" ")
"RTN","PXRMP26X",97,0)
 . I $L(TEMP)>1 S VALUE=TEMP
"RTN","PXRMP26X",98,0)
 . I $L(TEMP)=1 S VALUE=$S(TEMP=1:"Yes",1:"No")
"RTN","PXRMP26X",99,0)
 . S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=$$RJ^XLFSTR(LABEL,20)_" "_VALUE
"RTN","PXRMP26X",100,0)
 Q
"RTN","PXRMP26X",101,0)
 ;
"RTN","PXRMP26X",102,0)
BLDTXTT(T) ;
"RTN","PXRMP26X",103,0)
 N RESULT
"RTN","PXRMP26X",104,0)
 S RESULT=$S(T="E":"Element",T="G":"Group",T="P":"Prompt",T="F":"Forced Value",T="S":"Result Group",T="T":"Result Element","R":"Dialog",1:"")
"RTN","PXRMP26X",105,0)
 Q RESULT
"RTN","PXRMP26X",106,0)
 ;
"RTN","PXRMP26X",107,0)
BLDTXTF(FIND,FVPL) ;
"RTN","PXRMP26X",108,0)
 N ABB,FNUM,GBL,IEN,NODE
"RTN","PXRMP26X",109,0)
 S IEN=$P(FIND,";"),GBL=$P(FIND,";",2) I IEN'>0!(GBL="") Q ""
"RTN","PXRMP26X",110,0)
 S NODE=$G(FVPL(GBL)) I NODE="" Q ""
"RTN","PXRMP26X",111,0)
 S ABB=$P(NODE,U,4),FNUM=$P(NODE,U)
"RTN","PXRMP26X",112,0)
 S FNAME=$$GET1^DIQ(FNUM,IEN,.01)
"RTN","PXRMP26X",113,0)
 Q ABB_"."_FNAME
"RTN","PXRMP26X",114,0)
 ;
"RTN","PXRMP26X",115,0)
BLDXTMP(TYPE,DIEN,IEN,FINDVPL,ADDFVPL) ;
"RTN","PXRMP26X",116,0)
 I TYPE="PXD(811.2," D  G PRETEXT
"RTN","PXRMP26X",117,0)
 . S ^XTMP(PXRMXTMP,"DIALOG",DIEN)=""
"RTN","PXRMP26X",118,0)
 . S ^XTMP(PXRMXTMP,"DIALOG",DIEN,TYPE,IEN)=+$S($P($G(^PXRMD(801.41,DIEN,2)),U,5)="Y":0,1:1)
"RTN","PXRMP26X",119,0)
 ;
"RTN","PXRMP26X",120,0)
 S ^XTMP(PXRMXTMP,"DIALOG",DIEN,TYPE,IEN)=""
"RTN","PXRMP26X",121,0)
PRETEXT ;
"RTN","PXRMP26X",122,0)
 S ^TMP($J,"DLG ORDER",DIEN)=""
"RTN","PXRMP26X",123,0)
 S ^XTMP(PXRMXTMP,"DIALOG",DIEN,"DONE")=0
"RTN","PXRMP26X",124,0)
 ;D BLDTXT(DIEN,.FINDVPL,.ADDFVPL,0,1)
"RTN","PXRMP26X",125,0)
 Q
"RTN","PXRMP26X",126,0)
 ;
"RTN","PXRMP26X",127,0)
DELDATA(DIEN,FIELD,NUM) ;
"RTN","PXRMP26X",128,0)
 N DA,DIE,DR
"RTN","PXRMP26X",129,0)
 S DIE="^PXRMD(801.41,"
"RTN","PXRMP26X",130,0)
 I FIELD=15 S DA=DIEN,DR="15///@"
"RTN","PXRMP26X",131,0)
 I FIELD=18 D
"RTN","PXRMP26X",132,0)
 .S DA(1)=DIEN,DA=NUM
"RTN","PXRMP26X",133,0)
 .S DIE=DIE_DA(1)_",3,",DR=".01///@"
"RTN","PXRMP26X",134,0)
 D ^DIE
"RTN","PXRMP26X",135,0)
 Q
"RTN","PXRMP26X",136,0)
 ;
"RTN","PXRMP26X",137,0)
LISTCODE(DIEN,TEXT,FIND,CNT,ISADD) ;
"RTN","PXRMP26X",138,0)
 I $P(TEXT,".")'="TX" Q
"RTN","PXRMP26X",139,0)
 N CODES,HIST,NLINES,NODE,TDX,TPR
"RTN","PXRMP26X",140,0)
 S NODE="PXRM POST TEXT"
"RTN","PXRMP26X",141,0)
 K ^TMP(NODE,$J)
"RTN","PXRMP26X",142,0)
 S NLINES=0
"RTN","PXRMP26X",143,0)
 D TAXDISP^PXRMDTAX(FIND,0,DIEN,.NLINES,NODE,ISADD,1)
"RTN","PXRMP26X",144,0)
 S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=""
"RTN","PXRMP26X",145,0)
 S NLINES=0 F  S NLINES=$O(^TMP(NODE,$J,NLINES)) Q:NLINES'>0  D
"RTN","PXRMP26X",146,0)
 .S CNT=CNT+1,^TMP("PXRMXMZ",$J,CNT,0)=^TMP(NODE,$J,NLINES,0)
"RTN","PXRMP26X",147,0)
 K ^TMP(NODE,$J)
"RTN","PXRMP26X",148,0)
 Q
"RTN","PXRMP26X",149,0)
 ;
"RTN","PXRMP26X",150,0)
 ;
"RTN","PXRMP26X",151,0)
TEST(DIEN,FIND) ;
"RTN","PXRMP26X",152,0)
 N CNT,TEXT
"RTN","PXRMP26X",153,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMP26X",154,0)
 S CNT=0,TEXT="TX.SOMETHING"
"RTN","PXRMP26X",155,0)
 D LISTCODE(DIEN,TEXT,FIND,.CNT,0)
"RTN","PXRMP26X",156,0)
 S CNT=0 F  S CNT=$O(^TMP("PXRMXMZ",$J,CNT)) Q:CNT'>0  D
"RTN","PXRMP26X",157,0)
 .W !,$G(^TMP("PXRMXMZ",$J,CNT,0))
"RTN","PXRMP26X",158,0)
 Q
"RTN","PXRMPARS")
0^80^B3546283
"RTN","PXRMPARS",1,0)
PXRMPARS ; SLC/PJH - Edit PXRM(800 reminder parameters. ;01/28/2013
"RTN","PXRMPARS",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMPARS",3,0)
 ;
"RTN","PXRMPARS",4,0)
 ;called by protocol PXRM EDIT SITE DISCLAIMER
"RTN","PXRMPARS",5,0)
 ;
"RTN","PXRMPARS",6,0)
DISC(DA) ;Edit default disclaimer
"RTN","PXRMPARS",7,0)
 Q:'$$LOCK(DA)
"RTN","PXRMPARS",8,0)
 N DIC,DIE,DR,Y
"RTN","PXRMPARS",9,0)
 ;Edit
"RTN","PXRMPARS",10,0)
 S DIC="^PXRM(800,",DIE=800,DR=2
"RTN","PXRMPARS",11,0)
 D ^DIE
"RTN","PXRMPARS",12,0)
 D FORMAT^PXRMDISC
"RTN","PXRMPARS",13,0)
 Q
"RTN","PXRMPARS",14,0)
 ;
"RTN","PXRMPARS",15,0)
MH(DA) ;Edit MH default Question Value
"RTN","PXRMPARS",16,0)
 Q:'$$LOCK(DA)
"RTN","PXRMPARS",17,0)
 N DIC,DIE,DR,Y
"RTN","PXRMPARS",18,0)
 ;Edit
"RTN","PXRMPARS",19,0)
 S DIE="^PXRM(800,",DR=17
"RTN","PXRMPARS",20,0)
 D ^DIE
"RTN","PXRMPARS",21,0)
 Q
"RTN","PXRMPARS",22,0)
 ;
"RTN","PXRMPARS",23,0)
 ;called by protocol PXRM EDIT WEB SITE
"RTN","PXRMPARS",24,0)
 ;
"RTN","PXRMPARS",25,0)
WEB(DA) ;Edit default web site
"RTN","PXRMPARS",26,0)
 Q:'$$LOCK(DA)
"RTN","PXRMPARS",27,0)
 ;Edit
"RTN","PXRMPARS",28,0)
 N DTOUT,DUOUT
"RTN","PXRMPARS",29,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMPARS",30,0)
 .D WLIST,WSET,WURL(DA)
"RTN","PXRMPARS",31,0)
 Q
"RTN","PXRMPARS",32,0)
 ;
"RTN","PXRMPARS",33,0)
WLIST ;Display web sites
"RTN","PXRMPARS",34,0)
 N FIRST,SUB,SUB1
"RTN","PXRMPARS",35,0)
 S FIRST=1,SUB=""
"RTN","PXRMPARS",36,0)
 F  S SUB=$O(^PXRM(800,DA,1,"B",SUB)) Q:SUB=""  D
"RTN","PXRMPARS",37,0)
 .S SUB1=0
"RTN","PXRMPARS",38,0)
 .F  S SUB1=$O(^PXRM(800,DA,1,"B",SUB,SUB1)) Q:'SUB1  D
"RTN","PXRMPARS",39,0)
 ..I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMPARS",40,0)
 ..W ?8,$P($G(^PXRM(800,DA,1,SUB1,0)),U),!
"RTN","PXRMPARS",41,0)
 I FIRST W !!,"No default web sites defined",!
"RTN","PXRMPARS",42,0)
 Q
"RTN","PXRMPARS",43,0)
 ;
"RTN","PXRMPARS",44,0)
WSET ;Set node if not defined
"RTN","PXRMPARS",45,0)
 S:'$D(^PXRM(800,DA,1,0)) ^PXRM(800,DA,1,0)="^800.04"
"RTN","PXRMPARS",46,0)
 Q
"RTN","PXRMPARS",47,0)
 ;
"RTN","PXRMPARS",48,0)
WURL(IEN) ;Edit individual URL
"RTN","PXRMPARS",49,0)
 N DA,DIC,DIE,DR,Y
"RTN","PXRMPARS",50,0)
 S DA(1)=IEN
"RTN","PXRMPARS",51,0)
 S DIC="^PXRM(800,"_IEN_",1,"
"RTN","PXRMPARS",52,0)
 S DIC(0)="QEAL"
"RTN","PXRMPARS",53,0)
 S DIC("A")="Select URL: "
"RTN","PXRMPARS",54,0)
 S DIC("P")="800.04"
"RTN","PXRMPARS",55,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMPARS",56,0)
 S DIE=DIC K DIC
"RTN","PXRMPARS",57,0)
 S DA=+Y
"RTN","PXRMPARS",58,0)
 ;Finding record fields
"RTN","PXRMPARS",59,0)
 S DR=".01;.02;1"
"RTN","PXRMPARS",60,0)
 ;Edit finding record
"RTN","PXRMPARS",61,0)
 D ^DIE
"RTN","PXRMPARS",62,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMPARS",63,0)
 ;Check if deleted
"RTN","PXRMPARS",64,0)
 I '$D(DA) Q
"RTN","PXRMPARS",65,0)
 Q
"RTN","PXRMPARS",66,0)
 ;
"RTN","PXRMPARS",67,0)
LOCK(DA) ;Lock the record
"RTN","PXRMPARS",68,0)
 L +^PXRM(800,DA):DILOCKTM I  Q 1
"RTN","PXRMPARS",69,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMPARS",70,0)
 ;
"RTN","PXRMPARS",71,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMPARS",72,0)
 L -^PXRM(800,DA)
"RTN","PXRMPARS",73,0)
 Q
"RTN","PXRMPDS")
0^4^B38727338
"RTN","PXRMPDS",1,0)
PXRMPDS ; SLC/PKR - Routines for patient data source. ;03/13/2013
"RTN","PXRMPDS",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMPDS",3,0)
 ;
"RTN","PXRMPDS",4,0)
 ;====================================
"RTN","PXRMPDS",5,0)
HTEXT ;Taxonomy field Patient Data Source executable help text.
"RTN","PXRMPDS",6,0)
 ;;Taxonomy matching looks for all codes in the taxonomy. It searches for
"RTN","PXRMPDS",7,0)
 ;;ICD diagnosis codes in Problem List, PTF, and V POV. It searches for ICD
"RTN","PXRMPDS",8,0)
 ;;procedure codes in PTF. It searches for CPT-4 procedure codes in V CPT and
"RTN","PXRMPDS",9,0)
 ;;Radiology. It searches for SNOMED CT codes in Problem List.
"RTN","PXRMPDS",10,0)
 ;;
"RTN","PXRMPDS",11,0)
 ;;This comma separated list of patient data sources is used to refine the
"RTN","PXRMPDS",12,0)
 ;;taxonomy search by specifying exactly which patient data sources are searched.
"RTN","PXRMPDS",13,0)
 ;;You may use any combination of valid entries. The valid entries are:
"RTN","PXRMPDS",14,0)
 ;;
"RTN","PXRMPDS",15,0)
 ;;  ALL - all sources
"RTN","PXRMPDS",16,0)
 ;;  EN - All PCE encounter data (CPT-4 & ICD diagnosis)
"RTN","PXRMPDS",17,0)
 ;;  ENPP - PCE encounter data, principal procedure (CPT-4) only
"RTN","PXRMPDS",18,0)
 ;;  ENPD - PCE encounter data primary diagnosis (ICD) only
"RTN","PXRMPDS",19,0)
 ;;  IN - All PTF inpatient data (ICD diagnosis and procedures)
"RTN","PXRMPDS",20,0)
 ;;  INDXLS - PTF inpatient DXLS diagnosis (ICD) only
"RTN","PXRMPDS",21,0)
 ;;  INM - PTF inpatient diagnosis (ICD) movement only
"RTN","PXRMPDS",22,0)
 ;;  INPD - PTF inpatient principal diagnosis (ICD) only
"RTN","PXRMPDS",23,0)
 ;;  INPR - PTF inpatient procedure (ICD) only
"RTN","PXRMPDS",24,0)
 ;;  PL - Problem List (ICD diagnosis and SNOMED CT)
"RTN","PXRMPDS",25,0)
 ;;  RA - Radiology (CPT-4 procedures) only
"RTN","PXRMPDS",26,0)
 ;;
"RTN","PXRMPDS",27,0)
 ;;You may also use a minus sign to remove a particular source from the list.
"RTN","PXRMPDS",28,0)
 ;;For example: IN,-INM would search for all inpatient diagnoses, except those
"RTN","PXRMPDS",29,0)
 ;;associated with a movement, and all inpatient procedures.
"RTN","PXRMPDS",30,0)
 ;;
"RTN","PXRMPDS",31,0)
 ;;The default is ALL, search all sources for all codes in the taxonomy.
"RTN","PXRMPDS",32,0)
 ;;
"RTN","PXRMPDS",33,0)
 ;;**End Text**
"RTN","PXRMPDS",34,0)
 Q
"RTN","PXRMPDS",35,0)
 ;
"RTN","PXRMPDS",36,0)
 ;====================================
"RTN","PXRMPDS",37,0)
PDSXHELP ;Taxonomy field Patient Data Source executable help.
"RTN","PXRMPDS",38,0)
 N DONE,DIR0,IND,TEXT
"RTN","PXRMPDS",39,0)
 S DONE=0
"RTN","PXRMPDS",40,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMPDS",41,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3)
"RTN","PXRMPDS",42,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMPDS",43,0)
 D BROWSE^DDBR("TEXT","NR","Patient Data Source Help")
"RTN","PXRMPDS",44,0)
 I $D(DDS) D REFRESH^DDSUTL S DY=IOSL-7,DX=0 X IOXY S $Y=DY,$X=DX
"RTN","PXRMPDS",45,0)
 Q
"RTN","PXRMPDS",46,0)
 ;
"RTN","PXRMPDS",47,0)
 ;====================================
"RTN","PXRMPDS",48,0)
SPDS(DA,X2) ;Build the patient data source list.
"RTN","PXRMPDS",49,0)
 ;Called from cross-reference on Patient Data Source.
"RTN","PXRMPDS",50,0)
 ;X2 is the new value for PDS.
"RTN","PXRMPDS",51,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMPDS",52,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMPDS",53,0)
 N IND,NNODES,NODE,NSOURCE,PDS,PDSL,PDSTMP
"RTN","PXRMPDS",54,0)
 N ALL,EN,ENPP,ENPD,IN,INDXLS,INM,INPDX,INPR,PL,RA
"RTN","PXRMPDS",55,0)
 ;Build the list of patient data sources.
"RTN","PXRMPDS",56,0)
 S NSOURCE=$L(X2,",")
"RTN","PXRMPDS",57,0)
 F IND=1:1:NSOURCE D
"RTN","PXRMPDS",58,0)
 . S PDS=$P(X2,",",IND)
"RTN","PXRMPDS",59,0)
 . I PDS'="" S PDSL(PDS)=""
"RTN","PXRMPDS",60,0)
 S ALL=$S($D(PDSL("ALL")):1,X2="":1,1:0)
"RTN","PXRMPDS",61,0)
 S EN=$S($D(PDSL("-EN")):0,$D(PDSL("EN")):1,ALL:1,1:0)
"RTN","PXRMPDS",62,0)
 S ENPD=$S($D(PDSL("-ENPD")):0,$D(PDSL("ENPD")):1,EN:1,1:0)
"RTN","PXRMPDS",63,0)
 S ENPP=$S($D(PDSL("-ENPP")):0,$D(PDSL("ENPP")):1,EN:1,1:0)
"RTN","PXRMPDS",64,0)
 S IN=$S($D(PDSL("-IN")):0,$D(PDSL("IN")):1,ALL:1,1:0)
"RTN","PXRMPDS",65,0)
 S INDXLS=$S($D(PDSL("-INDXLS")):0,$D(PDSL("INDXLS")):1,IN:1,1:0)
"RTN","PXRMPDS",66,0)
 S INM=$S($D(PDSL("-INM")):0,$D(PDSL("INM")):1,IN:1,1:0)
"RTN","PXRMPDS",67,0)
 S INPDX=$S($D(PDSL("-INPDX")):0,$D(PDSL("INPDX")):1,IN:1,1:0)
"RTN","PXRMPDS",68,0)
 S INPR=$S($D(PDSL("-INPR")):0,$D(PDSL("INPR")):1,IN:1,1:0)
"RTN","PXRMPDS",69,0)
 S PL=$S($D(PDSL("-PL")):0,$D(PDSL("PL")):1,ALL:1,1:0)
"RTN","PXRMPDS",70,0)
 S RA=$S($D(PDSL("-RA")):0,$D(PDSL("RA")):1,ALL:1,1:0)
"RTN","PXRMPDS",71,0)
 ;PROBLEM LIST
"RTN","PXRMPDS",72,0)
 I PL S PDSTMP(9000011,1)=.01,PDSTMP(9000011,"NNODES")=1
"RTN","PXRMPDS",73,0)
 E  S PDSTMP(9000011,"NNODES")=0
"RTN","PXRMPDS",74,0)
 ;PTF
"RTN","PXRMPDS",75,0)
 S NNODES=0
"RTN","PXRMPDS",76,0)
 I IN F NODE=1:1:13 D
"RTN","PXRMPDS",77,0)
 . S NNODES=NNODES+1,PDSTMP(45,NNODES)="D SD"_NODE
"RTN","PXRMPDS",78,0)
 I INDXLS S NNODES=NNODES+1,PDSTMP(45,NNODES)="DXLS"
"RTN","PXRMPDS",79,0)
 I INM F NODE=1:1:10 D
"RTN","PXRMPDS",80,0)
 . S NNODES=NNODES+1,PDSTMP(45,NNODES)="M ICD"_NODE
"RTN","PXRMPDS",81,0)
 I INPDX S NNODES=NNODES+1,PDSTMP(45,NNODES)="PDX"
"RTN","PXRMPDS",82,0)
 I INPR D
"RTN","PXRMPDS",83,0)
 . F NODE=1:1:5 S NNODES=NNODES+1,PDSTMP(45,NNODES)="P"_NODE
"RTN","PXRMPDS",84,0)
 . F NODE=1:1:5 S NNODES=NNODES+1,PDSTMP(45,NNODES)="S"_NODE
"RTN","PXRMPDS",85,0)
 S PDSTMP(45,"NNODES")=NNODES
"RTN","PXRMPDS",86,0)
 ;V CPT
"RTN","PXRMPDS",87,0)
 S NNODES=0
"RTN","PXRMPDS",88,0)
 I EN S NNODES=NNODES+1,PDSTMP(9000010.18,NNODES)="U"
"RTN","PXRMPDS",89,0)
 I ENPP S NNODES=NNODES+1,PDSTMP(9000010.18,NNODES)="Y"
"RTN","PXRMPDS",90,0)
 S PDSTMP(9000010.18,"NNODES")=NNODES
"RTN","PXRMPDS",91,0)
 ;V POV
"RTN","PXRMPDS",92,0)
 S NNODES=0
"RTN","PXRMPDS",93,0)
 I EN D
"RTN","PXRMPDS",94,0)
 . S NNODES=NNODES+1,PDSTMP(9000010.07,NNODES)="S"
"RTN","PXRMPDS",95,0)
 . S NNODES=NNODES+1,PDSTMP(9000010.07,NNODES)="U"
"RTN","PXRMPDS",96,0)
 I ENPD S NNODES=NNODES+1,PDSTMP(9000010.07,NNODES)="P"
"RTN","PXRMPDS",97,0)
 S PDSTMP(9000010.07,"NNODES")=NNODES
"RTN","PXRMPDS",98,0)
 ;Radiology procedures
"RTN","PXRMPDS",99,0)
 S PDSTMP(71,"NNODES")=$S(RA:1,1:0)
"RTN","PXRMPDS",100,0)
 K ^PXD(811.2,DA,"APDS")
"RTN","PXRMPDS",101,0)
 M ^PXD(811.2,DA,"APDS")=PDSTMP
"RTN","PXRMPDS",102,0)
 Q
"RTN","PXRMPDS",103,0)
 ;
"RTN","PXRMPDS",104,0)
 ;====================================
"RTN","PXRMPDS",105,0)
VPDS(X) ;Taxonomy field Patient Data Source input transform. Check for valid
"RTN","PXRMPDS",106,0)
 ;patient data sources.
"RTN","PXRMPDS",107,0)
 N IND,NSOURCE,PDS,PDSL,TEXT,VALID
"RTN","PXRMPDS",108,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMPDS",109,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMPDS",110,0)
 ;Do not execute as part of exchange.
"RTN","PXRMPDS",111,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMPDS",112,0)
 S VALID=1
"RTN","PXRMPDS",113,0)
 S NSOURCE=$L(X,",")
"RTN","PXRMPDS",114,0)
 F IND=1:1:NSOURCE D
"RTN","PXRMPDS",115,0)
 . S PDS=$P(X,",",IND),PDSL(PDS)=""
"RTN","PXRMPDS",116,0)
 .;Check for valid source abbreviations.
"RTN","PXRMPDS",117,0)
 . I PDS="ALL" Q
"RTN","PXRMPDS",118,0)
 . I (PDS="EN")!(PDS="-EN") Q
"RTN","PXRMPDS",119,0)
 . I (PDS="ENPD")!(PDS="-ENPD") Q
"RTN","PXRMPDS",120,0)
 . I (PDS="ENPP")!(PDS="-ENPP") Q
"RTN","PXRMPDS",121,0)
 . I (PDS="IN")!(PDS="-IN") Q
"RTN","PXRMPDS",122,0)
 . I (PDS="INDXLS")!(PDS="-INDXLS") Q
"RTN","PXRMPDS",123,0)
 . I (PDS="INM")!(PDS="-INM") Q
"RTN","PXRMPDS",124,0)
 . I (PDS="INPD")!(PDS="-INPD") Q
"RTN","PXRMPDS",125,0)
 . I (PDS="INPR")!(PDS="-INPR") Q
"RTN","PXRMPDS",126,0)
 . I (PDS="PL")!(PDS="-PL") Q
"RTN","PXRMPDS",127,0)
 . I (PDS="RA")!(PDS="-RA") Q
"RTN","PXRMPDS",128,0)
 . S VALID=0
"RTN","PXRMPDS",129,0)
 . S TEXT=PDS_" is not a valid Patient Data Source"
"RTN","PXRMPDS",130,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMPDS",131,0)
 ;Check for invalid combinations.
"RTN","PXRMPDS",132,0)
 I $D(PDSL("EN")),$D(PDSL("-EN")) S TEXT="EN and -EN is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",133,0)
 I $D(PDSL("ENPD")),$D(PDSL("-ENPD")) S TEXT="ENPD and -ENPD is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",134,0)
 I $D(PDSL("ENPP")),$D(PDSL("-ENPP")) S TEXT="ENPP and -ENPP is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",135,0)
 I $D(PDSL("IN")),$D(PDSL("-IN")) S TEXT="IN and -IN is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",136,0)
 I $D(PDSL("INDXLS")),$D(PDSL("-INDXLS")) S TEXT="INDXLS and -INDXLS is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",137,0)
 I $D(PDSL("INM")),$D(PDSL("-INM")) S TEXT="INM and -INM is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",138,0)
 I $D(PDSL("INPD")),$D(PDSL("-INPD")) S TEXT="INPD and -INPD is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",139,0)
 I $D(PDSL("INPR")),$D(PDSL("-INPR")) S TEXT="INPR and -INPR is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",140,0)
 I $D(PDSL("PL")),$D(PDSL("-PL")) S TEXT="PL and -PL is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",141,0)
 I $D(PDSL("RA")),$D(PDSL("-RA")) S TEXT="RA and -RA is an invalid combination",VALID=0 D EN^DDIOL(TEXT)
"RTN","PXRMPDS",142,0)
 Q VALID
"RTN","PXRMPDS",143,0)
 ;
"RTN","PXRMPROB")
0^23^B47060633
"RTN","PXRMPROB",1,0)
PXRMPROB ; SLC/PKR - Code for Problem List. ;10/11/2012
"RTN","PXRMPROB",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMPROB",3,0)
 ;
"RTN","PXRMPROB",4,0)
 ;===================================================
"RTN","PXRMPROB",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,STATUSA,FLIST) ;Find data for a
"RTN","PXRMPROB",6,0)
 ;patient.
"RTN","PXRMPROB",7,0)
 N CODE,CODESYS,DAS,DATE,DEND,DS,DSAVE,EDATE,EDTT,IND,JND,NFOUND
"RTN","PXRMPROB",8,0)
 N PRIO,PRIOA,STAT,TDATE,TIND,TLIST
"RTN","PXRMPROB",9,0)
 I TAXARR("APDS",9000011,"NNODES")=0 Q
"RTN","PXRMPROB",10,0)
 I $G(^PXRMINDX(9000011,"DATE BUILT"))="" D  Q
"RTN","PXRMPROB",11,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000011)
"RTN","PXRMPROB",12,0)
 I STATUSA(0)=0 Q
"RTN","PXRMPROB",13,0)
 ;EDATE is the evaluation date.
"RTN","PXRMPROB",14,0)
 S EDATE=$$NOW^PXRMDATE
"RTN","PXRMPROB",15,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMPROB",16,0)
 S DEND=$S(EDT[".":EDT,1:EDT+.24)
"RTN","PXRMPROB",17,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMPROB",18,0)
 D SPRIOA(BDT,DEND,EDATE,.TAXARR,.PRIOA)
"RTN","PXRMPROB",19,0)
 S CODESYS=""
"RTN","PXRMPROB",20,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMPROB",21,0)
 . I '$D(^PXRMINDX(9000011,CODESYS,"PSPI",DFN)) Q
"RTN","PXRMPROB",22,0)
 . S NFOUND=0
"RTN","PXRMPROB",23,0)
 . F IND=1:1:STATUSA(0) S STAT=STATUSA(IND) D
"RTN","PXRMPROB",24,0)
 .. I '$D(^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STAT)) Q
"RTN","PXRMPROB",25,0)
 .. F JND=1:1:PRIOA(0) S PRIO=PRIOA(JND) D
"RTN","PXRMPROB",26,0)
 ... I '$D(^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STAT,PRIO)) Q
"RTN","PXRMPROB",27,0)
 ... S CODE=""
"RTN","PXRMPROB",28,0)
 ... F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMPROB",29,0)
 .... I '$D(^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STAT,PRIO,CODE)) Q
"RTN","PXRMPROB",30,0)
 .... S DATE=DS
"RTN","PXRMPROB",31,0)
 .... F  S DATE=+$O(^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STAT,PRIO,CODE,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMPROB",32,0)
 ..... S DSAVE=$S(PRIO="C":EDATE,1:DATE)
"RTN","PXRMPROB",33,0)
 ..... I (DSAVE<BDT)!(DSAVE>DEND) Q
"RTN","PXRMPROB",34,0)
 ..... S DAS=""
"RTN","PXRMPROB",35,0)
 ..... F  S DAS=$O(^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STAT,PRIO,CODE,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMPROB",36,0)
 ...... S NFOUND=NFOUND+1
"RTN","PXRMPROB",37,0)
 ...... S TLIST(DSAVE,NFOUND)=DAS_U_DSAVE_U_CODESYS_U_CODE_U_STAT_U_PRIO
"RTN","PXRMPROB",38,0)
 ...... I NFOUND>NGET D
"RTN","PXRMPROB",39,0)
 ....... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMPROB",40,0)
 ....... K TLIST(TDATE,TIND)
"RTN","PXRMPROB",41,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMPROB",42,0)
 S NFOUND=0
"RTN","PXRMPROB",43,0)
 S DATE=""
"RTN","PXRMPROB",44,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMPROB",45,0)
 . S IND=0
"RTN","PXRMPROB",46,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMPROB",47,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMPROB",48,0)
 .. S FLIST(DATE,NFOUND,9000011)=TLIST(DATE,IND)
"RTN","PXRMPROB",49,0)
 Q
"RTN","PXRMPROB",50,0)
 ;
"RTN","PXRMPROB",51,0)
 ;===================================================
"RTN","PXRMPROB",52,0)
GETDATA(DAS,FIEVT) ;Return data for a specified Problem List entry.
"RTN","PXRMPROB",53,0)
 N DATA
"RTN","PXRMPROB",54,0)
 ;DBIA #5881
"RTN","PXRMPROB",55,0)
 D PROBDATA^GMPLPXRM(DAS,.DATA)
"RTN","PXRMPROB",56,0)
 M FIEVT=DATA
"RTN","PXRMPROB",57,0)
 Q
"RTN","PXRMPROB",58,0)
 ;
"RTN","PXRMPROB",59,0)
 ;===================================================
"RTN","PXRMPROB",60,0)
GPLIST(TAXARR,NOCC,BDT,EDT,STATUSA,PLIST) ;Build patient list for
"RTN","PXRMPROB",61,0)
 ;Problem List entries.
"RTN","PXRMPROB",62,0)
 N CODE,CODESYS,DAS,DATE,DEND,DFN,DSAVE,EDATE,IND,JND,NFOUND,PRIO,PRIOA
"RTN","PXRMPROB",63,0)
 N STAT,TEMP,TLIST
"RTN","PXRMPROB",64,0)
 I $G(^PXRMINDX(9000011,"DATE BUILT"))="" D  Q
"RTN","PXRMPROB",65,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000011)
"RTN","PXRMPROB",66,0)
 S TLIST="GPLIST_PXRMPROB"
"RTN","PXRMPROB",67,0)
 S DEND=$S(EDT[".":EDT,1:EDT+.240001)
"RTN","PXRMPROB",68,0)
 K ^TMP($J,TLIST)
"RTN","PXRMPROB",69,0)
 I STATUSA(0)=0 Q
"RTN","PXRMPROB",70,0)
 ;EDATE is the evaluation date.
"RTN","PXRMPROB",71,0)
 S EDATE=$$NOW^PXRMDATE
"RTN","PXRMPROB",72,0)
 D SPRIOA(BDT,DEND,EDATE,.TAXARR,.PRIOA)
"RTN","PXRMPROB",73,0)
 S CODESYS="",NFOUND=0
"RTN","PXRMPROB",74,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMPROB",75,0)
 . I '$D(^PXRMINDX(9000011,CODESYS,"ISPP")) Q
"RTN","PXRMPROB",76,0)
 . S CODE=""
"RTN","PXRMPROB",77,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:(CODE="")  D
"RTN","PXRMPROB",78,0)
 .. I '$D(^PXRMINDX(9000011,CODESYS,"ISPP",CODE)) Q
"RTN","PXRMPROB",79,0)
 ..;Since chronic problems will have today's date find those first.
"RTN","PXRMPROB",80,0)
 .. F IND=1:1:STATUSA(0) D
"RTN","PXRMPROB",81,0)
 ... S STAT=STATUSA(IND)
"RTN","PXRMPROB",82,0)
 ... I '$D(^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STAT)) Q
"RTN","PXRMPROB",83,0)
 ... F JND=1:1:PRIOA(0) D
"RTN","PXRMPROB",84,0)
 .... S PRIO=PRIOA(JND)
"RTN","PXRMPROB",85,0)
 .... I '$D(^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STAT,PRIO)) Q
"RTN","PXRMPROB",86,0)
 .... S DFN=""
"RTN","PXRMPROB",87,0)
 .... F  S DFN=$O(^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STAT,PRIO,DFN)) Q:DFN=""  D
"RTN","PXRMPROB",88,0)
 ..... S DATE=""
"RTN","PXRMPROB",89,0)
 ..... F  S DATE=$O(^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STAT,PRIO,DFN,DATE)) Q:DATE=""  D
"RTN","PXRMPROB",90,0)
 ...... S DAS=""
"RTN","PXRMPROB",91,0)
 ...... F  S DAS=$O(^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STAT,PRIO,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMPROB",92,0)
 ....... S NFOUND=NFOUND+1
"RTN","PXRMPROB",93,0)
 ....... S DSAVE=$S(PRIO="C":EDATE,1:DATE)
"RTN","PXRMPROB",94,0)
 ....... I DSAVE'<BDT,DSAVE'>DEND S ^TMP($J,TLIST,DFN,DSAVE,DAS)=CODE_U_CODESYS_U_STAT_U_PRIO
"RTN","PXRMPROB",95,0)
 ;Return up to NOCC of the most recent entries.
"RTN","PXRMPROB",96,0)
 S DFN=0
"RTN","PXRMPROB",97,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMPROB",98,0)
 . S NFOUND=0
"RTN","PXRMPROB",99,0)
 . S DATE=""
"RTN","PXRMPROB",100,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMPROB",101,0)
 .. S DAS=""
"RTN","PXRMPROB",102,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMPROB",103,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMPROB",104,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMPROB",105,0)
 ... S ^TMP($J,PLIST,1,DFN,NFOUND,9000011)=DAS_U_DATE_U_TEMP
"RTN","PXRMPROB",106,0)
 K ^TMP($J,TLIST)
"RTN","PXRMPROB",107,0)
 Q
"RTN","PXRMPROB",108,0)
 ;
"RTN","PXRMPROB",109,0)
 ;===================================================
"RTN","PXRMPROB",110,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMPROB",111,0)
 N CDATA,CODE,CODESYS,IND,NAME,NOUT
"RTN","PXRMPROB",112,0)
 N RESULT,STATUS,TEMP,TEXTOUT,VDATE
"RTN","PXRMPROB",113,0)
 S NAME="Problem Diagnosis = "
"RTN","PXRMPROB",114,0)
 S IND=0
"RTN","PXRMPROB",115,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMPROB",116,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMPROB",117,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMPROB",118,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMPROB",119,0)
 . K CDATA
"RTN","PXRMPROB",120,0)
 .;DBIA #5679
"RTN","PXRMPROB",121,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,VDATE,.CDATA)
"RTN","PXRMPROB",122,0)
 . S TEMP=NAME_$P(CDATA("LEX",1),U,2)
"RTN","PXRMPROB",123,0)
 . S TEMP=TEMP_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMPROB",124,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMPROB",125,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMPROB",126,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMPROB",127,0)
 Q
"RTN","PXRMPROB",128,0)
 ;
"RTN","PXRMPROB",129,0)
 ;===================================================
"RTN","PXRMPROB",130,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMPROB",131,0)
 ;maintenance output.
"RTN","PXRMPROB",132,0)
 N CDATA,CODE,CODEDATE,CODESYS,CODESYSN,EM,IND,JND,NIN,NOUT,PN,PRIORITY
"RTN","PXRMPROB",133,0)
 N RESULT,STATUS,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMPROB",134,0)
 S NLINES=NLINES+1
"RTN","PXRMPROB",135,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Problem Diagnosis:"
"RTN","PXRMPROB",136,0)
 S IND=0
"RTN","PXRMPROB",137,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMPROB",138,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMPROB",139,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMPROB",140,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMPROB",141,0)
 . S CODEDATE=$G(IFIEVAL(IND,"MT CODE DATE"))
"RTN","PXRMPROB",142,0)
 . I CODEDATE="" S CODEDATE=$G(IFIEVAL(IND,"DATE OF INTEREST"))
"RTN","PXRMPROB",143,0)
 . I CODEDATE="" S CODEDATE=$G(IFIEVAL(IND,"DATE ENTERED"))
"RTN","PXRMPROB",144,0)
 .;DBIA #5679
"RTN","PXRMPROB",145,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMPROB",146,0)
 . K CDATA
"RTN","PXRMPROB",147,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,CODEDATE,.CDATA)
"RTN","PXRMPROB",148,0)
 . S PRIORITY=$G(IFIEVAL(IND,"PRIORITY"))
"RTN","PXRMPROB",149,0)
 . S PRIORITY=$S(PRIORITY'="":$$EXTERNAL^DILFD(9000011,1.14,"",PRIORITY,.EM),1:"UNDEFINED")
"RTN","PXRMPROB",150,0)
 . S STATUS=$G(IFIEVAL(IND,"STATUS"))
"RTN","PXRMPROB",151,0)
 . S STATUS=$S(STATUS'="":$$EXTERNAL^DILFD(9000011,.12,"",STATUS,.EM),1:"UNDEFINED")
"RTN","PXRMPROB",152,0)
 . S PN=$G(IFIEVAL(IND,"PROVIDER NARRATIVE"))
"RTN","PXRMPROB",153,0)
 . S PN=$S(PN="":"MISSING",1:$P($G(^AUTNPOV(PN,0)),U,1))
"RTN","PXRMPROB",154,0)
 . S TEXTIN(1)=$$EDATE^PXRMDATE(VDATE)_" "_CODE_" ("_CODESYSN(CODESYS)_")"
"RTN","PXRMPROB",155,0)
 . S TEXTIN(2)=$P(CDATA("LEX",1),U,2)_"\\"
"RTN","PXRMPROB",156,0)
 . S TEXTIN(3)=" Date Entered: "_$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE ENTERED"))_"; Date Last Modified: "_$$EDATE^PXRMDATE(IFIEVAL(IND,"DATE LAST MODIFIED"))_"\\"
"RTN","PXRMPROB",157,0)
 . S TEXTIN(4)=" Status: "_STATUS_"; Priority: "_PRIORITY_"\\"
"RTN","PXRMPROB",158,0)
 . S TEXTIN(5)=" Prov. Narr. - "_PN
"RTN","PXRMPROB",159,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,5,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMPROB",160,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMPROB",161,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMPROB",162,0)
 Q
"RTN","PXRMPROB",163,0)
 ;
"RTN","PXRMPROB",164,0)
 ;===================================================
"RTN","PXRMPROB",165,0)
SPRIOA(BDT,DEND,EDATE,TAXARR,PRIOA) ;Set the priority array.
"RTN","PXRMPROB",166,0)
 N NPRIO,PRIOL
"RTN","PXRMPROB",167,0)
 S PRIOL=$P(TAXARR(15),U,1)
"RTN","PXRMPROB",168,0)
 I PRIOL="" S PRIOA(0)=3,PRIOA(1)="A",PRIOA(2)="U",PRIOA(3)="C" Q
"RTN","PXRMPROB",169,0)
 S NPRIO=0
"RTN","PXRMPROB",170,0)
 I PRIOL["A" S NPRIO=NPRIO+1,PRIOA(NPRIO)="A"
"RTN","PXRMPROB",171,0)
 I PRIOL["U" S NPRIO=NPRIO+1,PRIOA(NPRIO)="U"
"RTN","PXRMPROB",172,0)
 ;For chronic problems the evaluation date becomes the finding date
"RTN","PXRMPROB",173,0)
 ;so only search for chronic problems if the evaluation date lies in
"RTN","PXRMPROB",174,0)
 ;the date range.
"RTN","PXRMPROB",175,0)
 I PRIOL["C",EDATE'<BDT,EDATE'>DEND S NPRIO=NPRIO+1,PRIOA(NPRIO)="C"
"RTN","PXRMPROB",176,0)
 S PRIOA(0)=NPRIO
"RTN","PXRMPROB",177,0)
 Q
"RTN","PXRMPROB",178,0)
 ;
"RTN","PXRMPTTX")
0^129^B39642269
"RTN","PXRMPTTX",1,0)
PXRMPTTX ; SLC/PKR - Routines for taxonomy print templates ;05/07/2014
"RTN","PXRMPTTX",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,26**;Feb 04, 2005;Build 404
"RTN","PXRMPTTX",3,0)
 ;References to ICDAPIU DBIA #3991.
"RTN","PXRMPTTX",4,0)
 ;References to ICPTAPIU DBIA #1997.
"RTN","PXRMPTTX",5,0)
 ;References to ICDCODE DBIA #3990.
"RTN","PXRMPTTX",6,0)
 ;References to ICPTCOD DBIA #1995.
"RTN","PXRMPTTX",7,0)
 ;=======================================================
"RTN","PXRMPTTX",8,0)
CHKEXP ;Check the expansion
"RTN","PXRMPTTX",9,0)
 I '$D(^PXD(811.3,D0)) W !!,"Expansion check; expansion does not exist." Q
"RTN","PXRMPTTX",10,0)
 N CODE,EXPOK,EXTRA,FNUM,LMAX,LOW,HIGH,HMAX,LIST,NEWLINE,NEXTRA,NMISS
"RTN","PXRMPTTX",11,0)
 N OEXTRA,PTR,TLEN,TYPE
"RTN","PXRMPTTX",12,0)
 ;Store 811.3 expansion in EXTRA, "current" one is in ^TMP
"RTN","PXRMPTTX",13,0)
 I $D(^PXD(811.3,D0,80,"ICD9P")) M EXTRA("ICD 9")=^PXD(811.3,D0,80,"ICD9P")
"RTN","PXRMPTTX",14,0)
 I $D(^PXD(811.3,D0,80.1,"ICD0P")) M EXTRA("ICD 0")=^PXD(811.3,D0,80.1,"ICD0P")
"RTN","PXRMPTTX",15,0)
 I $D(^PXD(811.3,D0,81,"ICPTP")) M EXTRA("CPT")=^PXD(811.3,D0,81,"ICPTP")
"RTN","PXRMPTTX",16,0)
 S EXPOK=1
"RTN","PXRMPTTX",17,0)
 W !!,"Expansion check; expansion was last built on ",$$FMTE^XLFDT($P(^PXD(811.3,D0,0),U,2),"5Z")
"RTN","PXRMPTTX",18,0)
 F FNUM=80,80.1,81 D
"RTN","PXRMPTTX",19,0)
 . S TYPE=$S(FNUM=80:"ICD 9",FNUM=80.1:"ICD 0",FNUM=81:"CPT",1:"")
"RTN","PXRMPTTX",20,0)
 . K LIST
"RTN","PXRMPTTX",21,0)
 . S PTR=""
"RTN","PXRMPTTX",22,0)
 . F  S PTR=$O(^TMP($J,"TAXEXP",FNUM,PTR)) Q:PTR=""  D
"RTN","PXRMPTTX",23,0)
 .. I $D(EXTRA(TYPE,PTR)) K EXTRA(TYPE,PTR),^TMP($J,"TAXEXP",FNUM,PTR)
"RTN","PXRMPTTX",24,0)
 . I $D(^TMP($J,"TAXEXP",FNUM)) D
"RTN","PXRMPTTX",25,0)
 .. S (HMAX,LMAX)=0
"RTN","PXRMPTTX",26,0)
 .. S PTR=""
"RTN","PXRMPTTX",27,0)
 .. F  S PTR=$O(^TMP($J,"TAXEXP",FNUM,PTR)) Q:PTR=""  D
"RTN","PXRMPTTX",28,0)
 ... S CODE=""
"RTN","PXRMPTTX",29,0)
 ... F  S CODE=$O(^TMP($J,"TAXEXP",FNUM,PTR,CODE)) Q:CODE=""  D
"RTN","PXRMPTTX",30,0)
 .... S LOW=""
"RTN","PXRMPTTX",31,0)
 .... F  S LOW=$O(^TMP($J,"TAXEXP",FNUM,PTR,CODE,LOW)) Q:LOW=""  D
"RTN","PXRMPTTX",32,0)
 ..... S TLEN=$L(LOW)
"RTN","PXRMPTTX",33,0)
 ..... I TLEN>LMAX S LMAX=TLEN
"RTN","PXRMPTTX",34,0)
 ..... S HIGH=""
"RTN","PXRMPTTX",35,0)
 ..... F  S HIGH=$O(^TMP($J,"TAXEXP",FNUM,PTR,CODE,LOW,HIGH)) Q:HIGH=""  D
"RTN","PXRMPTTX",36,0)
 ...... S TLEN=$L(HIGH)
"RTN","PXRMPTTX",37,0)
 ...... I TLEN>HMAX S HMAX=TLEN
"RTN","PXRMPTTX",38,0)
 ...... S LIST(CODE_" ",PTR,LOW,HIGH)=""
"RTN","PXRMPTTX",39,0)
 . K ^TMP($J,"TAXEXP",FNUM)
"RTN","PXRMPTTX",40,0)
 . I $D(LIST) D
"RTN","PXRMPTTX",41,0)
 .. W !!,"The following ",TYPE," codes are missing from the expansion:"
"RTN","PXRMPTTX",42,0)
 .. W !,?5,"Code",?14,"Range"
"RTN","PXRMPTTX",43,0)
 .. S (EXPOK,NMISS)=0
"RTN","PXRMPTTX",44,0)
 .. S CODE=""
"RTN","PXRMPTTX",45,0)
 .. F  S CODE=$O(LIST(CODE)) Q:CODE=""  D
"RTN","PXRMPTTX",46,0)
 ... S NMISS=NMISS+1
"RTN","PXRMPTTX",47,0)
 ... W !,$$RJ^XLFSTR(NMISS,4)," ",$$LJ^XLFSTR(CODE,8)
"RTN","PXRMPTTX",48,0)
 ... S PTR=""
"RTN","PXRMPTTX",49,0)
 ... F  S PTR=$O(LIST(CODE,PTR)) Q:PTR=""  D
"RTN","PXRMPTTX",50,0)
 .... S LOW="",NEWLINE=-1
"RTN","PXRMPTTX",51,0)
 .... F  S LOW=$O(LIST(CODE,PTR,LOW)) Q:LOW=""  D
"RTN","PXRMPTTX",52,0)
 ..... S HIGH=""
"RTN","PXRMPTTX",53,0)
 ..... F  S HIGH=$O(LIST(CODE,PTR,LOW,HIGH)) Q:HIGH=""  D
"RTN","PXRMPTTX",54,0)
 ...... S NEWLINE=NEWLINE+1
"RTN","PXRMPTTX",55,0)
 ...... I NEWLINE=0 W ?14,$$LJ^XLFSTR(LOW,LMAX),"-",$$LJ^XLFSTR(HIGH,HMAX),"  "," (IEN="_PTR_")"
"RTN","PXRMPTTX",56,0)
 ...... I NEWLINE>0 W !,?14,$$LJ^XLFSTR(LOW,LMAX),"-",$$LJ^XLFSTR(HIGH,HMAX)
"RTN","PXRMPTTX",57,0)
 . I $D(EXTRA(TYPE)) D
"RTN","PXRMPTTX",58,0)
 .. S EXPOK=0,NEXTRA=0
"RTN","PXRMPTTX",59,0)
 .. W !!,"The following ",TYPE," codes are in the expansion and they should not be:"
"RTN","PXRMPTTX",60,0)
 .. K OEXTRA
"RTN","PXRMPTTX",61,0)
 .. S PTR=""
"RTN","PXRMPTTX",62,0)
 .. F  S PTR=$O(EXTRA(TYPE,PTR)) Q:PTR=""  D
"RTN","PXRMPTTX",63,0)
 ... S CODE=$S(FNUM=81:$$CPT^ICPTCOD(PTR,DT),FNUM=80:$$ICDDX^ICDCODE(PTR,DT),FNUM=80.1:$$ICDOP^ICDCODE(PTR,DT))
"RTN","PXRMPTTX",64,0)
 ... S OEXTRA($P(CODE,U,2)_" ")=$P(CODE,U,4)_" (IEN="_PTR_")"
"RTN","PXRMPTTX",65,0)
 .. S CODE=""
"RTN","PXRMPTTX",66,0)
 .. F  S CODE=$O(OEXTRA(CODE)) Q:CODE=""  D
"RTN","PXRMPTTX",67,0)
 ... S NEXTRA=NEXTRA+1
"RTN","PXRMPTTX",68,0)
 ... W !,$$RJ^XLFSTR(NEXTRA,4),"  ",CODE,?10,OEXTRA(CODE)
"RTN","PXRMPTTX",69,0)
 I EXPOK W !,"The expansion is correct."
"RTN","PXRMPTTX",70,0)
 Q
"RTN","PXRMPTTX",71,0)
 ;
"RTN","PXRMPTTX",72,0)
 ;=======================================================
"RTN","PXRMPTTX",73,0)
ICD0LIST ;Print expanded list of ICD0 codes.
"RTN","PXRMPTTX",74,0)
 N ACTDATE,CODE,DATA,IEN,INADATE,LOW,HIGH,PTR,TEMP,TEXT
"RTN","PXRMPTTX",75,0)
 S TEMP=^PXD(811.2,D0,80.1,D1,0)
"RTN","PXRMPTTX",76,0)
 S (ACTDATE,INADATE)=$$FMTE^XLFDT(DT,"5Z")
"RTN","PXRMPTTX",77,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",78,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",79,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",80,0)
 W !!,?2,"Code",?10,"ICD Operation/Procedure",?42,"Activation",?54,"Inactivation"
"RTN","PXRMPTTX",81,0)
 W !,?2,"----",?10,"-----------------------",?42,"----------",?54,"------------"
"RTN","PXRMPTTX",82,0)
 S CODE=LOW
"RTN","PXRMPTTX",83,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMPTTX",84,0)
 . K DATA
"RTN","PXRMPTTX",85,0)
 . D PERIOD^ICDAPIU(CODE,.DATA)
"RTN","PXRMPTTX",86,0)
 . S ACTDATE=0
"RTN","PXRMPTTX",87,0)
 . F  S ACTDATE=$O(DATA(ACTDATE)) Q:ACTDATE=""  D
"RTN","PXRMPTTX",88,0)
 .. S INADATE=$P(DATA(ACTDATE),U,1)
"RTN","PXRMPTTX",89,0)
 .. S TEXT=$P(DATA(ACTDATE),U,2)
"RTN","PXRMPTTX",90,0)
 .. S TEXT=$E(TEXT,1,30)
"RTN","PXRMPTTX",91,0)
 .. W !,?2,CODE,?10,TEXT,?42,$$FMTE^XLFDT(ACTDATE,"5Z"),?54,$$FMTE^XLFDT(INADATE,"5Z")
"RTN","PXRMPTTX",92,0)
 . S IEN=$P($$STATCHK^ICDAPIU(CODE,""),U,2)
"RTN","PXRMPTTX",93,0)
 . S ^TMP($J,"TAXEXP",80.1,IEN,CODE,LOW,HIGH)=""
"RTN","PXRMPTTX",94,0)
 . S CODE=$$NEXT^ICDAPIU(CODE)
"RTN","PXRMPTTX",95,0)
 Q
"RTN","PXRMPTTX",96,0)
 ;
"RTN","PXRMPTTX",97,0)
 ;=======================================================
"RTN","PXRMPTTX",98,0)
ICD9LIST ;Print expanded list of ICD9 codes.
"RTN","PXRMPTTX",99,0)
 N ACTDATE,CODE,DATA,IEN,INADATE,LOW,HIGH,PTR,SEL,TEMP,TEXT
"RTN","PXRMPTTX",100,0)
 S TEMP=^PXD(811.2,D0,80,D1,0)
"RTN","PXRMPTTX",101,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",102,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",103,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",104,0)
 W !!,?2,"Code",?10,"ICD Diagnosis",?42,"Activation",?54,"Inactivation",?67,"Selectable"
"RTN","PXRMPTTX",105,0)
 W !,?2,"----",?10,"--------------",?42,"----------",?54,"------------",?67,"----------"
"RTN","PXRMPTTX",106,0)
 S CODE=LOW
"RTN","PXRMPTTX",107,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMPTTX",108,0)
 . K DATA
"RTN","PXRMPTTX",109,0)
 . D PERIOD^ICDAPIU(CODE,.DATA)
"RTN","PXRMPTTX",110,0)
 . S IEN=$P(DATA(0),U,1)
"RTN","PXRMPTTX",111,0)
 . S SEL=$S($D(^PXD(811.2,D0,"SDX","B",IEN)):"X",1:"")
"RTN","PXRMPTTX",112,0)
 . S ACTDATE=0
"RTN","PXRMPTTX",113,0)
 . F  S ACTDATE=$O(DATA(ACTDATE)) Q:ACTDATE=""  D
"RTN","PXRMPTTX",114,0)
 .. S INADATE=$P(DATA(ACTDATE),U,1)
"RTN","PXRMPTTX",115,0)
 .. S TEXT=$P(DATA(ACTDATE),U,2)
"RTN","PXRMPTTX",116,0)
 .. W !,?2,CODE,?10,TEXT,?42,$$FMTE^XLFDT(ACTDATE,"5Z"),?54,$$FMTE^XLFDT(INADATE,"5Z"),?71,SEL
"RTN","PXRMPTTX",117,0)
 . S PTR=$P($$STATCHK^ICDAPIU(CODE,""),U,2)
"RTN","PXRMPTTX",118,0)
 . S ^TMP($J,"TAXEXP",80,PTR,CODE,LOW,HIGH)=""
"RTN","PXRMPTTX",119,0)
 . S CODE=$$NEXT^ICDAPIU(CODE)
"RTN","PXRMPTTX",120,0)
 Q
"RTN","PXRMPTTX",121,0)
 ;
"RTN","PXRMPTTX",122,0)
 ;=======================================================
"RTN","PXRMPTTX",123,0)
ICPTLIST ;Print expanded list of CPT codes.
"RTN","PXRMPTTX",124,0)
 N ACTDATE,CODE,DATA,IEN,INADATE,LOW,HIGH,PTR,SEL,TEMP,TEXT
"RTN","PXRMPTTX",125,0)
 S TEMP=^PXD(811.2,D0,81,D1,0)
"RTN","PXRMPTTX",126,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",127,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",128,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",129,0)
 W !!,?2,"Code",?10,"CPT Short Name",?42,"Activation",?54,"Inactivation",?67,"Selectable"
"RTN","PXRMPTTX",130,0)
 W !,?2,"----",?10,"--------------",?42,"----------",?54,"------------",?67,"----------"
"RTN","PXRMPTTX",131,0)
 S CODE=LOW
"RTN","PXRMPTTX",132,0)
 F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMPTTX",133,0)
 . K DATA
"RTN","PXRMPTTX",134,0)
 . D PERIOD^ICPTAPIU(CODE,.DATA)
"RTN","PXRMPTTX",135,0)
 . S IEN=$P(DATA(0),U,1)
"RTN","PXRMPTTX",136,0)
 . S SEL=$S($D(^PXD(811.2,D0,"SPR","B",IEN)):"X",1:"")
"RTN","PXRMPTTX",137,0)
 . S ACTDATE=0
"RTN","PXRMPTTX",138,0)
 . F  S ACTDATE=$O(DATA(ACTDATE)) Q:ACTDATE=""  D
"RTN","PXRMPTTX",139,0)
 .. S INADATE=$P(DATA(ACTDATE),U,1)
"RTN","PXRMPTTX",140,0)
 .. S TEXT=$P(DATA(ACTDATE),U,2)
"RTN","PXRMPTTX",141,0)
 .. W !,?2,CODE,?10,TEXT,?42,$$FMTE^XLFDT(ACTDATE,"5Z"),?54,$$FMTE^XLFDT(INADATE,"5Z"),?71,SEL
"RTN","PXRMPTTX",142,0)
 . S PTR=$P($$STATCHK^ICPTAPIU(CODE,""),U,2)
"RTN","PXRMPTTX",143,0)
 . S ^TMP($J,"TAXEXP",81,PTR,CODE,LOW,HIGH)=""
"RTN","PXRMPTTX",144,0)
 . S CODE=$$NEXT^ICPTAPIU(CODE)
"RTN","PXRMPTTX",145,0)
 Q
"RTN","PXRMPTTX",146,0)
 ;
"RTN","PXRMPTTX",147,0)
 ;=======================================================
"RTN","PXRMPTTX",148,0)
TAXLIST ;Taxonomy list.
"RTN","PXRMPTTX",149,0)
 N CODES,CPT,CPTLIST,IC,ICD0,ICD0LIST,ICD9,ICD9LIST,IND,NCODES
"RTN","PXRMPTTX",150,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",151,0)
 F  S IND=+$O(^PXD(811.2,D0,80,IND)) Q:IND=0  D
"RTN","PXRMPTTX",152,0)
 . S IC=IC+1
"RTN","PXRMPTTX",153,0)
 . S CODES=^PXD(811.2,D0,80,IND,0)
"RTN","PXRMPTTX",154,0)
 . S ICD9LIST(IC)=CODES
"RTN","PXRMPTTX",155,0)
 S NCODES=IC
"RTN","PXRMPTTX",156,0)
 ;
"RTN","PXRMPTTX",157,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",158,0)
 F  S IND=+$O(^PXD(811.2,D0,80.1,IND)) Q:IND=0  D
"RTN","PXRMPTTX",159,0)
 . S IC=IC+1
"RTN","PXRMPTTX",160,0)
 . S CODES=^PXD(811.2,D0,80.1,IND,0)
"RTN","PXRMPTTX",161,0)
 . S ICD0LIST(IC)=CODES
"RTN","PXRMPTTX",162,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPTTX",163,0)
 ;
"RTN","PXRMPTTX",164,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",165,0)
 F  S IND=+$O(^PXD(811.2,D0,81,IND)) Q:IND=0  D
"RTN","PXRMPTTX",166,0)
 . S IC=IC+1
"RTN","PXRMPTTX",167,0)
 . S CODES=^PXD(811.2,D0,81,IND,0)
"RTN","PXRMPTTX",168,0)
 . S CPTLIST(IC)=CODES
"RTN","PXRMPTTX",169,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPTTX",170,0)
 ;Print the list.
"RTN","PXRMPTTX",171,0)
 F IC=1:1:NCODES D
"RTN","PXRMPTTX",172,0)
 . S ICD9=$G(ICD9LIST(IC))
"RTN","PXRMPTTX",173,0)
 . S ICD0=$G(ICD0LIST(IC))
"RTN","PXRMPTTX",174,0)
 . S CPT=$G(CPTLIST(IC))
"RTN","PXRMPTTX",175,0)
 . W !,?9,$P(ICD9,U,1),?19,$P(ICD9,U,2)
"RTN","PXRMPTTX",176,0)
 . W ?29,$P(ICD0,U,1),?39,$P(ICD0,U,2)
"RTN","PXRMPTTX",177,0)
 . W ?49,$P(CPT,U,1),?59,$P(CPT,U,2)
"RTN","PXRMPTTX",178,0)
 Q
"RTN","PXRMPTTX",179,0)
 ;
"RTN","PXRMRCPT")
0^25^B24259553
"RTN","PXRMRCPT",1,0)
PXRMRCPT ; SLC/PKR - Code to handle radiology CPT data. ;12/19/2012
"RTN","PXRMRCPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMRCPT",3,0)
 ;
"RTN","PXRMRCPT",4,0)
 ;==============================================
"RTN","PXRMRCPT",5,0)
FPDAT(DFN,TAXARR,NOCC,BDT,EDT,STATUSA,FLIST) ;Find radiology procedures for a
"RTN","PXRMRCPT",6,0)
 ;patient from the linkage of a radiology procedure to a CPT4 code.
"RTN","PXRMRCPT",7,0)
 N CPT4P,CODE,DATE,FIEVT,IND,NOCCABS,NFOUND,PFINDPA
"RTN","PXRMRCPT",8,0)
 N RADIEN,SDIR,TE,TDATE,TIND,TF,TLIST
"RTN","PXRMRCPT",9,0)
 I TAXARR("APDS",71,"NNODES")=0 Q
"RTN","PXRMRCPT",10,0)
 I $G(^PXRMINDX(70,"DATE BUILT"))="" D  Q
"RTN","PXRMRCPT",11,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),70)
"RTN","PXRMRCPT",12,0)
 I '$D(^PXRMINDX(70,"PI",DFN)) Q
"RTN","PXRMRCPT",13,0)
 S $P(PFINDPA(0),U,8)=BDT
"RTN","PXRMRCPT",14,0)
 S $P(PFINDPA(0),U,11)=EDT
"RTN","PXRMRCPT",15,0)
 S $P(PFINDPA(0),U,14)=NOCC
"RTN","PXRMRCPT",16,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMRCPT",17,0)
 F IND=1:1:STATUSA(0) S PFINDPA(5,IND)=STATUSA(IND)
"RTN","PXRMRCPT",18,0)
 S NFOUND=0,CPT4P=""
"RTN","PXRMRCPT",19,0)
 F  S CPT4P=$O(TAXARR("AE","CPT",CPT4P)) Q:CPT4P=""  D
"RTN","PXRMRCPT",20,0)
 . S RADIEN=""
"RTN","PXRMRCPT",21,0)
 .;DBIA #586
"RTN","PXRMRCPT",22,0)
 . F  S RADIEN=$O(^RAMIS(71,"D",CPT4P,RADIEN)) Q:RADIEN=""  D
"RTN","PXRMRCPT",23,0)
 .. I '$D(^PXRMINDX(70,"PI",DFN,RADIEN)) Q
"RTN","PXRMRCPT",24,0)
 .. K FIEVT
"RTN","PXRMRCPT",25,0)
 .. D FIEVAL^PXRMINDX(70,"PI",DFN,RADIEN,.PFINDPA,.FIEVT)
"RTN","PXRMRCPT",26,0)
 .. I FIEVT D
"RTN","PXRMRCPT",27,0)
 ...;DBIA #1995
"RTN","PXRMRCPT",28,0)
 ... S CODE=$P($$CPT^ICPTCOD(CPT4P),U,2)
"RTN","PXRMRCPT",29,0)
 ... S IND=0
"RTN","PXRMRCPT",30,0)
 ... F  S IND=+$O(FIEVT(IND)) Q:IND=0  D
"RTN","PXRMRCPT",31,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMRCPT",32,0)
 .... S TLIST(FIEVT(IND,"DATE"),NFOUND)=FIEVT(IND,"DAS")_U_FIEVT(IND,"DATE")_U_"CPT4"_U_CODE_U_U_RADIEN
"RTN","PXRMRCPT",33,0)
 .... I NFOUND>NGET D
"RTN","PXRMRCPT",34,0)
 ..... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMRCPT",35,0)
 ..... K TLIST(TDATE,TIND)
"RTN","PXRMRCPT",36,0)
 ;Return up to NOCC of the most recent entries.
"RTN","PXRMRCPT",37,0)
 S NOCCABS=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMRCPT",38,0)
 S NFOUND=0
"RTN","PXRMRCPT",39,0)
 S DATE=""
"RTN","PXRMRCPT",40,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NOCCABS)  D
"RTN","PXRMRCPT",41,0)
 . S IND=0
"RTN","PXRMRCPT",42,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NOCCABS)  D
"RTN","PXRMRCPT",43,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMRCPT",44,0)
 .. S FLIST(DATE,NFOUND,70)=TLIST(DATE,IND)
"RTN","PXRMRCPT",45,0)
 Q
"RTN","PXRMRCPT",46,0)
 ;
"RTN","PXRMRCPT",47,0)
 ;==============================================
"RTN","PXRMRCPT",48,0)
GPLIST(TAXARR,PFINDPA,PLIST) ;Build a patient list for radiology procedures
"RTN","PXRMRCPT",49,0)
 ;based on the linkage to CPT4 codes.
"RTN","PXRMRCPT",50,0)
 N CPT4P,DAS,DATE,DFN,NFOUND
"RTN","PXRMRCPT",51,0)
 N RADIEN,TEMP,TF,TLIST,VALUE
"RTN","PXRMRCPT",52,0)
 I TAXARR("APDS",71,"NNODES")=0 Q
"RTN","PXRMRCPT",53,0)
 I $G(^PXRMINDX(70,"DATE BUILT"))="" D  Q
"RTN","PXRMRCPT",54,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),70)
"RTN","PXRMRCPT",55,0)
 S TLIST="GPLIST_PXRMRCPT"
"RTN","PXRMRCPT",56,0)
 S CPT4P=""
"RTN","PXRMRCPT",57,0)
 F  S CPT4P=$O(TAXARR("AE","CPT",CPT4P)) Q:CPT4P=""  D
"RTN","PXRMRCPT",58,0)
 . S RADIEN=""
"RTN","PXRMRCPT",59,0)
 .;DBIA #586
"RTN","PXRMRCPT",60,0)
 . F  S RADIEN=$O(^RAMIS(71,"D",CPT4P,RADIEN)) Q:RADIEN=""  D
"RTN","PXRMRCPT",61,0)
 .. I '$D(^PXRMINDX(70,"IP",RADIEN)) Q
"RTN","PXRMRCPT",62,0)
 .. S CPT4P=TAXARR("AE","RADPROC",RADIEN)
"RTN","PXRMRCPT",63,0)
 .. K ^TMP($J,TLIST)
"RTN","PXRMRCPT",64,0)
 .. D GPLIST^PXRMINDL(70,"IP",RADIEN,.PFINDPA,TLIST)
"RTN","PXRMRCPT",65,0)
 .. F TF=0,1 D
"RTN","PXRMRCPT",66,0)
 ... S DFN=0
"RTN","PXRMRCPT",67,0)
 ... F  S DFN=$O(^TMP($J,TLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMRCPT",68,0)
 .... S NFOUND=0
"RTN","PXRMRCPT",69,0)
 .... F  S NFOUND=$O(^TMP($J,TLIST,TF,DFN,RADIEN,NFOUND)) Q:NFOUND=""  D
"RTN","PXRMRCPT",70,0)
 ..... S TEMP=^TMP($J,TLIST,TF,DFN,RADIEN,NFOUND,70)
"RTN","PXRMRCPT",71,0)
 ..... S DAS=$P(TEMP,U,1)
"RTN","PXRMRCPT",72,0)
 ..... S DATE=$P(TEMP,U,2)
"RTN","PXRMRCPT",73,0)
 ..... S VALUE=$P(TEMP,U,4)
"RTN","PXRMRCPT",74,0)
 ..... S ^TMP($J,PLIST,TF,DFN,DATE,70)=DAS_U_DATE_U_CPT4P_U_"CPT"_U_VALUE
"RTN","PXRMRCPT",75,0)
 K ^TMP($J,TLIST)
"RTN","PXRMRCPT",76,0)
 Q
"RTN","PXRMRCPT",77,0)
 ;
"RTN","PXRMRCPT",78,0)
 ;==============================================
"RTN","PXRMRCPT",79,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMRCPT",80,0)
 N CODE,CDATA,DATE,ICPTP,IND,JND,NAME,NOUT,RESULT,TEXTIN,TEXTOUT
"RTN","PXRMRCPT",81,0)
 S NAME="Radiology Procedure = "
"RTN","PXRMRCPT",82,0)
 S IND=0
"RTN","PXRMRCPT",83,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMRCPT",84,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMRCPT",85,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMRCPT",86,0)
 .;DBIA #5679
"RTN","PXRMRCPT",87,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMRCPT",88,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMRCPT",89,0)
 . K CDATA
"RTN","PXRMRCPT",90,0)
 .;DBIA #5679
"RTN","PXRMRCPT",91,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DATE,.CDATA)
"RTN","PXRMRCPT",92,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMRCPT",93,0)
 . S TEXTIN(1)=NAME_" "_IFIEVAL(IND,"PROCEDURE")_"\\"
"RTN","PXRMRCPT",94,0)
 . S TEXTIN(2)=$P(CDATA("LEX",1),U,2)_" ("_$$EDATE^PXRMDATE(DATE)_")"
"RTN","PXRMRCPT",95,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,2,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMRCPT",96,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRCPT",97,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRCPT",98,0)
 Q
"RTN","PXRMRCPT",99,0)
 ;
"RTN","PXRMRCPT",100,0)
 ;==============================================
"RTN","PXRMRCPT",101,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMRCPT",102,0)
 ;maintenance output.
"RTN","PXRMRCPT",103,0)
 N CDATA,CODE,CODESYS,CODESYSN,DATE,IND,JND,NOUT,RESULT
"RTN","PXRMRCPT",104,0)
 N TAXIEN,TEMP,TEXTIN,TEXTOUT
"RTN","PXRMRCPT",105,0)
 S TEMP=IFIEVAL("FINDING")
"RTN","PXRMRCPT",106,0)
 S TAXIEN=$P(TEMP,";",1)
"RTN","PXRMRCPT",107,0)
 S TEMP="Radiology Procedure(s) from taxonomy "_$P(^PXD(811.2,TAXIEN,0),U,1)
"RTN","PXRMRCPT",108,0)
 S NLINES=NLINES+1
"RTN","PXRMRCPT",109,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_TEMP
"RTN","PXRMRCPT",110,0)
 S IND=0
"RTN","PXRMRCPT",111,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMRCPT",112,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMRCPT",113,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMRCPT",114,0)
 .;DBIA #5679
"RTN","PXRMRCPT",115,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMRCPT",116,0)
 . S DATE=IFIEVAL(IND,"DATE")
"RTN","PXRMRCPT",117,0)
 . K CDATA
"RTN","PXRMRCPT",118,0)
 .;DBIA #5679
"RTN","PXRMRCPT",119,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DATE,.CDATA)
"RTN","PXRMRCPT",120,0)
 . S TEXTIN(1)=$$EDATE^PXRMDATE(DATE)_" "_IFIEVAL(IND,"PROCEDURE")_"\\"
"RTN","PXRMRCPT",121,0)
 . S TEXTIN(2)=CODESYSN(CODESYS)_": "_CODE_" - "_$P(CDATA("LEX",1),U,2)_"\\"
"RTN","PXRMRCPT",122,0)
 . S TEXTIN(3)="Status: "_IFIEVAL(IND,"STATUS")
"RTN","PXRMRCPT",123,0)
 . S TEXTIN(4)="; Report Status: "_IFIEVAL(IND,"RPT STATUS")
"RTN","PXRMRCPT",124,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,4,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMRCPT",125,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMRCPT",126,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMRCPT",127,0)
 Q
"RTN","PXRMRCPT",128,0)
 ;
"RTN","PXRMRDI")
0^113^B37867827
"RTN","PXRMRDI",1,0)
PXRMRDI ;SLC/PKR - Routines to support RDI list building. ;11/05/2013
"RTN","PXRMRDI",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,17,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMRDI",3,0)
 ;=========================================================
"RTN","PXRMRDI",4,0)
APPERR(TYPE) ;Handle errors getting appointment data.
"RTN","PXRMRDI",5,0)
 N ECODE,MGIEN,MGROUP,NL,TIME,TO,USER
"RTN","PXRMRDI",6,0)
 S USER=$S($D(ZTQUEUED):DBDUZ,1:DUZ)
"RTN","PXRMRDI",7,0)
 S TIME=$$NOW^XLFDT
"RTN","PXRMRDI",8,0)
 S TIME=$$FMTE^XLFDT(TIME)
"RTN","PXRMRDI",9,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMRDI",10,0)
 S ^TMP("PXRMXMZ",$J,1,0)="The "_TYPE_" requested by "_$$GET1^DIQ(200,USER,.01)_" on "
"RTN","PXRMRDI",11,0)
 S ^TMP("PXRMXMZ",$J,2,0)=TIME_" requires appointment data which could not be obtained"
"RTN","PXRMRDI",12,0)
 S ^TMP("PXRMXMZ",$J,3,0)="from the Scheduling database due to the following error(s):"
"RTN","PXRMRDI",13,0)
 S ECODE=0,NL=3
"RTN","PXRMRDI",14,0)
 F  S ECODE=$O(^TMP($J,"SDAMA301",ECODE)) Q:ECODE=""  D
"RTN","PXRMRDI",15,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_^TMP($J,"SDAMA301",ECODE)
"RTN","PXRMRDI",16,0)
 S TO(DUZ)=""
"RTN","PXRMRDI",17,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMRDI",18,0)
 I MGIEN'="" D
"RTN","PXRMRDI",19,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMRDI",20,0)
 . S TO(MGROUP)=""
"RTN","PXRMRDI",21,0)
 D SEND^PXRMMSG("PXRMXMZ","Scheduling database error(s)",.TO,DUZ)
"RTN","PXRMRDI",22,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMRDI",23,0)
 Q
"RTN","PXRMRDI",24,0)
 ;
"RTN","PXRMRDI",25,0)
 ;=========================================================
"RTN","PXRMRDI",26,0)
APPL(NGET,BDT,EDT,PLIST,PARAM) ;List type computed finding that returns
"RTN","PXRMRDI",27,0)
 ;a list of patients with appointments in the date range BDT to EDT.
"RTN","PXRMRDI",28,0)
 N FILTER,FLDS,RESULT
"RTN","PXRMRDI",29,0)
 K ^TMP($J,PLIST),^TMP($J,"SDAMA301")
"RTN","PXRMRDI",30,0)
 I BDT<2000000 S BDT=2000101
"RTN","PXRMRDI",31,0)
 S FILTER(1)=BDT_";"_EDT
"RTN","PXRMRDI",32,0)
 S FILTER("SORT")="P"
"RTN","PXRMRDI",33,0)
 ;Set the rest of the filter nodes.
"RTN","PXRMRDI",34,0)
 D SFILTER(PARAM,.FILTER,.FLDS)
"RTN","PXRMRDI",35,0)
 ;DBIA #4433
"RTN","PXRMRDI",36,0)
 S RESULT=$$SDAPI^SDAMA301(.FILTER)
"RTN","PXRMRDI",37,0)
 I RESULT=-1 D APPERR("Patient List build") Q
"RTN","PXRMRDI",38,0)
 N COUNT,DATE,DFN,DONE,ITEM
"RTN","PXRMRDI",39,0)
 S DFN=""
"RTN","PXRMRDI",40,0)
 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","PXRMRDI",41,0)
 . S (COUNT,DONE)=0,DATE=""
"RTN","PXRMRDI",42,0)
 . F  S DATE=$O(^TMP($J,"SDAMA301",DFN,DATE),-1) Q:(DONE)!(DATE="")  D
"RTN","PXRMRDI",43,0)
 .. S COUNT=COUNT+1
"RTN","PXRMRDI",44,0)
 .. S ITEM=$P(^TMP($J,"SDAMA301",DFN,DATE),U,2)
"RTN","PXRMRDI",45,0)
 .. S ^TMP($J,PLIST,DFN,COUNT)=U_DATE_U_44_U_$P(ITEM,";",1)_U_$P(ITEM,";",2)
"RTN","PXRMRDI",46,0)
 .. I COUNT=NGET S DONE=1
"RTN","PXRMRDI",47,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"HLOCL")
"RTN","PXRMRDI",48,0)
 Q
"RTN","PXRMRDI",49,0)
 ;
"RTN","PXRMRDI",50,0)
 ;=========================================================
"RTN","PXRMRDI",51,0)
FSTATUS(STATUS) ;Format the STATUS, field #22.
"RTN","PXRMRDI",52,0)
 N TEXT,TMP
"RTN","PXRMRDI",53,0)
 S TMP=$P(STATUS,";",1)
"RTN","PXRMRDI",54,0)
 S TEXT=$S(TMP="":"",1:"Code - "_TMP)
"RTN","PXRMRDI",55,0)
 S TMP=$P(STATUS,";",2)
"RTN","PXRMRDI",56,0)
 I TMP'="" S TEXT=TEXT_"; Description - "_TMP
"RTN","PXRMRDI",57,0)
 S TMP=$P(STATUS,";",3)
"RTN","PXRMRDI",58,0)
 I TMP'="" S TEXT=TEXT_"; Print Status - "_TMP
"RTN","PXRMRDI",59,0)
 S TMP=$P(STATUS,";",4)
"RTN","PXRMRDI",60,0)
 I TMP'="" S TEXT=TEXT_"; Checked In Date/Time - "_$$EDATE^PXRMDATE(TMP)
"RTN","PXRMRDI",61,0)
 S TMP=$P(STATUS,";",5)
"RTN","PXRMRDI",62,0)
 I TMP'="" S TEXT=TEXT_"; Checked Out Date/Time - "_$$EDATE^PXRMDATE(TMP)
"RTN","PXRMRDI",63,0)
 S TMP=$P(STATUS,";",6)
"RTN","PXRMRDI",64,0)
 I TMP'="" S TEXT=TEXT_"; Admission Movement IFN - "_TMP
"RTN","PXRMRDI",65,0)
 Q TEXT
"RTN","PXRMRDI",66,0)
 ;
"RTN","PXRMRDI",67,0)
 ;=========================================================
"RTN","PXRMRDI",68,0)
PAPPL(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Multiple type computed
"RTN","PXRMRDI",69,0)
 ;finding that returns a list appointments for a patient.
"RTN","PXRMRDI",70,0)
 N FIELD,FILTER,FLDS,PARAM,RESULT
"RTN","PXRMRDI",71,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXRMRDI",72,0)
 S PARAM=TEST K TEST
"RTN","PXRMRDI",73,0)
 S NFOUND=0
"RTN","PXRMRDI",74,0)
 I BDT<2000000 S BDT=2000101
"RTN","PXRMRDI",75,0)
 S FILTER(1)=BDT_";"_EDT
"RTN","PXRMRDI",76,0)
 S FILTER(4)=DFN
"RTN","PXRMRDI",77,0)
 S FILTER("SORT")="P"
"RTN","PXRMRDI",78,0)
 ;Set the rest of the filter nodes.
"RTN","PXRMRDI",79,0)
 D SFILTER(PARAM,.FILTER,.FLDS)
"RTN","PXRMRDI",80,0)
 ;DBIA #4433
"RTN","PXRMRDI",81,0)
 S RESULT=$$SDAPI^SDAMA301(.FILTER)
"RTN","PXRMRDI",82,0)
 I RESULT=-1 D APPERR("Computed finding evaluation") Q
"RTN","PXRMRDI",83,0)
 N ALLNULL,APPDATE,DATALIST,DONE,FLABEL,IND,ITEM,STATUS,TMP
"RTN","PXRMRDI",84,0)
 S FLABEL(1)="APPOINTMENT DATE/TIME"
"RTN","PXRMRDI",85,0)
 S FLABEL(2)="CLINIC"
"RTN","PXRMRDI",86,0)
 S FLABEL(3)="APPOINTMENT STATUS"
"RTN","PXRMRDI",87,0)
 S FLABEL(4)="PATIENT"
"RTN","PXRMRDI",88,0)
 S FLABEL(5)="LENGTH OF APPOINTMENT"
"RTN","PXRMRDI",89,0)
 S FLABEL(6)="COMMENTS"
"RTN","PXRMRDI",90,0)
 S FLABEL(7)="OVERBOOK"
"RTN","PXRMRDI",91,0)
 S FLABEL(8)="ELIGIBILITY OF VISIT"
"RTN","PXRMRDI",92,0)
 S FLABEL(9)="CHECK-IN DATE/TIME"
"RTN","PXRMRDI",93,0)
 S FLABEL(10)="APPOINTMENT TYPE"
"RTN","PXRMRDI",94,0)
 S FLABEL(11)="CHECK-OUT DATE/TIME"
"RTN","PXRMRDI",95,0)
 S FLABEL(12)="OUTPATIENT ENCOUNTER IEN"
"RTN","PXRMRDI",96,0)
 S FLABEL(13)="PRIMARY STOP CODE"
"RTN","PXRMRDI",97,0)
 S FLABEL(14)="CREDIT STOP CODE"
"RTN","PXRMRDI",98,0)
 S FLABEL(15)="WORKLOAD NON-COUNT"
"RTN","PXRMRDI",99,0)
 S FLABEL(16)="DATE APPOINTMENT MADE"
"RTN","PXRMRDI",100,0)
 S FLABEL(17)="DESIRED DATE OF APPOINTMENT"
"RTN","PXRMRDI",101,0)
 S FLABEL(18)="PURPOSE OF VISIT and SHORT DESCRIPTION"
"RTN","PXRMRDI",102,0)
 S FLABEL(19)="EKG DATE/TIME"
"RTN","PXRMRDI",103,0)
 S FLABEL(20)="X-RAY DATE/TIME"
"RTN","PXRMRDI",104,0)
 S FLABEL(21)="LAB DATE/TIME"
"RTN","PXRMRDI",105,0)
 S FLABEL(22)="STATUS"
"RTN","PXRMRDI",106,0)
 S FLABEL(23)="X-RAY FILMS"
"RTN","PXRMRDI",107,0)
 S FLABEL(24)="AUTO-REBOOKED APPOINTMENT DATE/TIME"
"RTN","PXRMRDI",108,0)
 S FLABEL(25)="NO-SHOW/CANCEL DATE/TIME"
"RTN","PXRMRDI",109,0)
 S FLABEL(26)="RSA APPOINTMENT ID"
"RTN","PXRMRDI",110,0)
 S FLABEL(28)="DATA ENTRY CLERK"
"RTN","PXRMRDI",111,0)
 S FLABEL(29)="NO-SHOW/CANCELED BY"
"RTN","PXRMRDI",112,0)
 S FLABEL(30)="CHECK-IN USER"
"RTN","PXRMRDI",113,0)
 S FLABEL(31)="CHECK-OUT USER"
"RTN","PXRMRDI",114,0)
 S FLABEL(32)="CANCELLATION REASON"
"RTN","PXRMRDI",115,0)
 S FLABEL(33)="CONSULT LINK"
"RTN","PXRMRDI",116,0)
 S SDIR=$S(NGET<0:1,1:-1)
"RTN","PXRMRDI",117,0)
 S NGET=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMRDI",118,0)
 S APPDATE="",DONE=0
"RTN","PXRMRDI",119,0)
 F  S APPDATE=$O(^TMP($J,"SDAMA301",DFN,APPDATE),SDIR) Q:(DONE)!(APPDATE="")  D
"RTN","PXRMRDI",120,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMRDI",121,0)
 . S TEST(NFOUND)=1,DATE(NFOUND)=APPDATE
"RTN","PXRMRDI",122,0)
 .;Fields 1-26
"RTN","PXRMRDI",123,0)
 . S DATALIST=$G(^TMP($J,"SDAMA301",DFN,APPDATE))
"RTN","PXRMRDI",124,0)
 .;Fields 28-33
"RTN","PXRMRDI",125,0)
 . S TMP=$G(^TMP($J,"SDAMA301",DFN,APPDATE,0))
"RTN","PXRMRDI",126,0)
 . S ALLNULL=1
"RTN","PXRMRDI",127,0)
 . I TMP'="" F IND=1:1:$L(TMP,U) I $P(TMP,U,IND)'="" S ALLNULL=0
"RTN","PXRMRDI",128,0)
 . I 'ALLNULL S $P(DATALIST,U,28)=TMP
"RTN","PXRMRDI",129,0)
 . F IND=1:1:$L(DATALIST,U) D
"RTN","PXRMRDI",130,0)
 .. S FIELD=$P(DATALIST,U,IND)
"RTN","PXRMRDI",131,0)
 .. I IND=6 S FIELD=$G(^TMP($J,"SDAMA301",DFN,APPDATE,"C"))
"RTN","PXRMRDI",132,0)
 .. I FIELD="" Q
"RTN","PXRMRDI",133,0)
 .. I IND=22 S STATUS=FIELD
"RTN","PXRMRDI",134,0)
 .. I FLABEL(IND)["DATE" S FIELD=$$EDATE^PXRMDATE(FIELD)
"RTN","PXRMRDI",135,0)
 .. I FIELD[";" S FIELD=$P(FIELD,";",2)
"RTN","PXRMRDI",136,0)
 ..;Save the clinic as the value.
"RTN","PXRMRDI",137,0)
 .. I IND=2 S DATA(NFOUND,"VALUE")=FIELD
"RTN","PXRMRDI",138,0)
 .. I IND=22 S FIELD=$$FSTATUS(STATUS)
"RTN","PXRMRDI",139,0)
 .. S TEXT(NFOUND,IND)=FLABEL(IND)_": "_FIELD
"RTN","PXRMRDI",140,0)
 .. S DATA(NFOUND,FLABEL(IND))=FIELD
"RTN","PXRMRDI",141,0)
 . I NFOUND=NGET S DONE=1
"RTN","PXRMRDI",142,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"HLOCL")
"RTN","PXRMRDI",143,0)
 Q
"RTN","PXRMRDI",144,0)
 ;
"RTN","PXRMRDI",145,0)
 ;=========================================================
"RTN","PXRMRDI",146,0)
SFILTER(PARAM,FILTER,FLDS) ;Parse the PARMETER and set the appropriate
"RTN","PXRMRDI",147,0)
 ;fields.
"RTN","PXRMRDI",148,0)
 N IND,LLNAME,LLP,P1,P2,STATUS,TEMP
"RTN","PXRMRDI",149,0)
 S (FLDS,LLNAME,STATUS)=""
"RTN","PXRMRDI",150,0)
 F IND=1:1:$L(PARAM,U) D
"RTN","PXRMRDI",151,0)
 . S TEMP=$P(PARAM,U,IND)
"RTN","PXRMRDI",152,0)
 . S P1=$P(TEMP,":",1),P2=$P(TEMP,":",2)
"RTN","PXRMRDI",153,0)
 . I P1="FLDS" S FLDS=$TR(P2,",",";") Q
"RTN","PXRMRDI",154,0)
 . I P1="LL" S LLNAME=P2 Q
"RTN","PXRMRDI",155,0)
 . I P1="STATUS" S STATUS=$TR(P2,",",";") Q
"RTN","PXRMRDI",156,0)
 S FILTER("FLDS")=$S(FLDS="":"1;2",1:FLDS)
"RTN","PXRMRDI",157,0)
 S FILTER(3)=$S(STATUS="":"I;R",1:STATUS)
"RTN","PXRMRDI",158,0)
 I LLNAME="" Q
"RTN","PXRMRDI",159,0)
 S LLP=$O(^PXRMD(810.9,"B",LLNAME,""))
"RTN","PXRMRDI",160,0)
 ;The LL VA-ALL LOCATIONS means no clinic filter.
"RTN","PXRMRDI",161,0)
 I LLNAME'="VA-ALL LOCATIONS" D LOCLIST^PXRMLOCF(LLP,"HLOCL")
"RTN","PXRMRDI",162,0)
 I $D(^TMP($J,"HLOCL")) S FILTER(2)="^TMP($J,""HLOCL"","
"RTN","PXRMRDI",163,0)
 Q
"RTN","PXRMRDI",164,0)
 ;
"RTN","PXRMRDI",165,0)
 ;=========================================================
"RTN","PXRMRDI",166,0)
TFL(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,VALUE,TEXT) ;Multiple type computed
"RTN","PXRMRDI",167,0)
 ;finding for a patient's treating facility list.
"RTN","PXRMRDI",168,0)
 N DONE,IND,NOW,SDIR,TDATE,TFL,TFLD
"RTN","PXRMRDI",169,0)
 S NFOUND=0
"RTN","PXRMRDI",170,0)
 ;DBIA #2990
"RTN","PXRMRDI",171,0)
 D TFL^VAFCTFU1(.TFL,DFN)
"RTN","PXRMRDI",172,0)
 I +TFL(1)=-1 Q
"RTN","PXRMRDI",173,0)
 S NOW=$$NOW^PXRMDATE
"RTN","PXRMRDI",174,0)
 S (DONE,IND)=0
"RTN","PXRMRDI",175,0)
 F  S IND=$O(TFL(IND)) Q:(DONE)!(IND="")  D
"RTN","PXRMRDI",176,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMRDI",177,0)
 . S TEST(NFOUND)=1,DATE(NFOUND)=NOW
"RTN","PXRMRDI",178,0)
 . S VALUE(NFOUND,"VALUE")=TFL(IND)
"RTN","PXRMRDI",179,0)
 . I NFOUND=NGET S DONE=1 Q
"RTN","PXRMRDI",180,0)
 F IND=1:1:NFOUND S VALUE(IND,"NUM FACILITIES")=NFOUND
"RTN","PXRMRDI",181,0)
 Q
"RTN","PXRMRDI",182,0)
 ;
"RTN","PXRMREDF")
0^89^B84708461
"RTN","PXRMREDF",1,0)
PXRMREDF ; SLC/PJH - Edit PXRM reminder findings. ;05/08/2014
"RTN","PXRMREDF",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMREDF",3,0)
 ;
"RTN","PXRMREDF",4,0)
 ; Called by PXRMREDT which newes and initialized DEF, DEF1, DEF2.
"RTN","PXRMREDF",5,0)
 ;
"RTN","PXRMREDF",6,0)
SET S:'$D(^PXD(811.9,DA,20,0)) ^PXD(811.9,DA,20,0)="^811.902V" Q
"RTN","PXRMREDF",7,0)
 ;Display ALL findings
"RTN","PXRMREDF",8,0)
 ;
"RTN","PXRMREDF",9,0)
 ;--------------------
"RTN","PXRMREDF",10,0)
DSPALL(TYPE,NODE,DA,LIST) ;
"RTN","PXRMREDF",11,0)
 I '$D(LIST) D  Q
"RTN","PXRMREDF",12,0)
 . I TYPE="D" W !!,"Reminder has no findings!",!
"RTN","PXRMREDF",13,0)
 . I TYPE="T" W !!,"Reminder Term has no findings!",!
"RTN","PXRMREDF",14,0)
 N FINUM,FMTSTR,FNAME,FTYPE,IND,NL,OUTPUT,TEXTSTR
"RTN","PXRMREDF",15,0)
 W !!,"Choose from:",!
"RTN","PXRMREDF",16,0)
 S FMTSTR="2L1^60L1^9L1^3R"
"RTN","PXRMREDF",17,0)
 S FTYPE=""
"RTN","PXRMREDF",18,0)
 F  S FTYPE=$O(LIST(FTYPE)) Q:FTYPE=""  D
"RTN","PXRMREDF",19,0)
 . S FNAME=0
"RTN","PXRMREDF",20,0)
 . F  S FNAME=$O(LIST(FTYPE,FNAME)) Q:FNAME=""  D
"RTN","PXRMREDF",21,0)
 .. S FINUM=0
"RTN","PXRMREDF",22,0)
 .. F  S FINUM=$O(LIST(FTYPE,FNAME,FINUM)) Q:FINUM=""  D
"RTN","PXRMREDF",23,0)
 ... S TEXTSTR=FTYPE_U_FNAME_U_"Finding #"_U_FINUM
"RTN","PXRMREDF",24,0)
 ... D COLFMT^PXRMTEXT(FMTSTR,TEXTSTR," ",.NL,.OUTPUT)
"RTN","PXRMREDF",25,0)
 ... F IND=1:1:NL W !,OUTPUT(IND)
"RTN","PXRMREDF",26,0)
 ;Update
"RTN","PXRMREDF",27,0)
 D LIST^PXRMREDT(NODE,DA,.DEF1,.LIST)
"RTN","PXRMREDF",28,0)
 Q
"RTN","PXRMREDF",29,0)
 ;
"RTN","PXRMREDF",30,0)
 ;Edit individual FINDING entry
"RTN","PXRMREDF",31,0)
 ;-----------------------------
"RTN","PXRMREDF",32,0)
FEDIT(IEN) ;
"RTN","PXRMREDF",33,0)
 N CFIEN,DA,DIC,DIE,DR,ETYPE,GLOB
"RTN","PXRMREDF",34,0)
 N STATUS,TERMSTAT,TIEN,TERMTYPE,VF,WPIEN,Y
"RTN","PXRMREDF",35,0)
 S DA(1)=IEN
"RTN","PXRMREDF",36,0)
 S DIC="^PXD(811.9,"_IEN_",20,"
"RTN","PXRMREDF",37,0)
 I $P(^PXD(811.9,IEN,100),U)="N",$G(PXRMINST)'=1 S DIC(0)="QEA"
"RTN","PXRMREDF",38,0)
 E  S DIC(0)="QEAL"
"RTN","PXRMREDF",39,0)
 S DIC("A")="Select FINDING: "
"RTN","PXRMREDF",40,0)
 S DIC("P")="811.902V"
"RTN","PXRMREDF",41,0)
 D ^DIC
"RTN","PXRMREDF",42,0)
 I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",43,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",44,0)
 S DIE("NO^")="OUTOK"
"RTN","PXRMREDF",45,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMREDF",46,0)
 S TYPE=$G(DEF1(GLOB))
"RTN","PXRMREDF",47,0)
 S SDA(2)=DA(1),SDA(1)=DA
"RTN","PXRMREDF",48,0)
 ;Save term IEN
"RTN","PXRMREDF",49,0)
 S STATUS=0
"RTN","PXRMREDF",50,0)
 I TYPE="CF" S CFIEN=$P($P(Y,U,2),";",1) D HELP^PXRMCF(CFIEN)
"RTN","PXRMREDF",51,0)
 I TYPE="MH" D WARN^PXRMMH
"RTN","PXRMREDF",52,0)
 I TYPE="RT" S TIEN=$P($P(Y,U,2),";",1)
"RTN","PXRMREDF",53,0)
 ;Finding record fields
"RTN","PXRMREDF",54,0)
 W !!,"Editing Finding Number: "_$G(DA)
"RTN","PXRMREDF",55,0)
 S DR=".01;3;I X=""0Y"" S Y=6;1;2;6;7;8;9;12;17"
"RTN","PXRMREDF",56,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMREDF",57,0)
 I TYPE="TX" D
"RTN","PXRMREDF",58,0)
 .S TERMSTAT=$$TAXNODE^PXRMSTA1($P($P(Y,U,2),";"))
"RTN","PXRMREDF",59,0)
 .I TERMSTAT="P" S DR=DR_";10" Q
"RTN","PXRMREDF",60,0)
 .I TERMSTAT'=0 S DR=DR_";10",STATUS=1
"RTN","PXRMREDF",61,0)
 I TYPE="RT" D
"RTN","PXRMREDF",62,0)
 .S TERMTYPE=$$TERMTYPE(TIEN)
"RTN","PXRMREDF",63,0)
 .I TERMTYPE["H" S DR=DR_";11"
"RTN","PXRMREDF",64,0)
 ;Health Factor - within category rank
"RTN","PXRMREDF",65,0)
 I TYPE="HF" S DR=DR_";11"
"RTN","PXRMREDF",66,0)
 ;If V file INCLUDE VISIT DATA
"RTN","PXRMREDF",67,0)
 S VF=$S(TYPE="ED":1,TYPE="EX":1,TYPE="HF":1,TYPE="IM":1,TYPE="ST":1,TYPE="TX":1,1:0)
"RTN","PXRMREDF",68,0)
 I TYPE="RT",$P(TERMTYPE,U,2)="VF" S VF=1
"RTN","PXRMREDF",69,0)
 I VF S DR=DR_";28"
"RTN","PXRMREDF",70,0)
 ;
"RTN","PXRMREDF",71,0)
 ;Mental Health - scale
"RTN","PXRMREDF",72,0)
 I TYPE="MH" S DR=DR_";13"
"RTN","PXRMREDF",73,0)
 ;Radiology procedure.
"RTN","PXRMREDF",74,0)
 I TYPE="RP" S STATUS=1
"RTN","PXRMREDF",75,0)
 ;Orderable Item
"RTN","PXRMREDF",76,0)
 I TYPE="OI" S DR=DR_";27",STATUS=1
"RTN","PXRMREDF",77,0)
 ;Rx Type
"RTN","PXRMREDF",78,0)
 I (TYPE="DC")!(TYPE="DG")!(TYPE="DR") S DR=DR_";16;27",STATUS=1
"RTN","PXRMREDF",79,0)
 ;Condition
"RTN","PXRMREDF",80,0)
 S DR=DR_";14;15;18"
"RTN","PXRMREDF",81,0)
 I TYPE="CF" S DR=DR_";26"
"RTN","PXRMREDF",82,0)
 ;Found/not found text
"RTN","PXRMREDF",83,0)
 S DR=DR_";4;5"
"RTN","PXRMREDF",84,0)
 ;
"RTN","PXRMREDF",85,0)
 I TYPE="RT" D
"RTN","PXRMREDF",86,0)
 . I TERMTYPE["D" S DR=DR_";16;27",STATUS=1
"RTN","PXRMREDF",87,0)
 . I TERMTYPE["O" S DR=DR_";27",STATUS=1
"RTN","PXRMREDF",88,0)
 . I TERMTYPE["R" S STATUS=1
"RTN","PXRMREDF",89,0)
 . I TERMTYPE["T" S STATUS=1
"RTN","PXRMREDF",90,0)
 .I TERMTYPE[2 D
"RTN","PXRMREDF",91,0)
 .. N MSG
"RTN","PXRMREDF",92,0)
 .. S MSG(1)="Cannot set a status since the term contains multiple types of findings"
"RTN","PXRMREDF",93,0)
 .. S MSG(2)="Edit the status field at the term level for each finding" H 2
"RTN","PXRMREDF",94,0)
 .. D EN^DDIOL(.MSG)
"RTN","PXRMREDF",95,0)
 ;Edit finding record
"RTN","PXRMREDF",96,0)
 D ^DIE
"RTN","PXRMREDF",97,0)
 S $P(^PXD(811.9,IEN,20,0),U,3)=0
"RTN","PXRMREDF",98,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",99,0)
 ;Check if deleted
"RTN","PXRMREDF",100,0)
 I '$D(DA) Q
"RTN","PXRMREDF",101,0)
 I STATUS=1,$D(Y)=0 D STATUS^PXRMSTA1(.DA,"D")
"RTN","PXRMREDF",102,0)
 ;
"RTN","PXRMREDF",103,0)
 S ETYPE=$P(^PXD(811.9,IEN,20,SDA(1),0),U,1)
"RTN","PXRMREDF",104,0)
 ;Option to edit term findings
"RTN","PXRMREDF",105,0)
 I $P(ETYPE,";",2)="PXRMD(811.5," D
"RTN","PXRMREDF",106,0)
 . S TIEN=$P(ETYPE,";",1)
"RTN","PXRMREDF",107,0)
 . D TMAP(IEN,TIEN)
"RTN","PXRMREDF",108,0)
 Q
"RTN","PXRMREDF",109,0)
 ;
"RTN","PXRMREDF",110,0)
 ;Edit individual function finding entry
"RTN","PXRMREDF",111,0)
 ;-----------------------------
"RTN","PXRMREDF",112,0)
FFEDIT(IEN) ;
"RTN","PXRMREDF",113,0)
 N DA,DIC,DIE,DR,Y
"RTN","PXRMREDF",114,0)
 S DA(1)=IEN
"RTN","PXRMREDF",115,0)
 S DIC="^PXD(811.9,"_IEN_",25,"
"RTN","PXRMREDF",116,0)
 S DIC(0)="QEAL"
"RTN","PXRMREDF",117,0)
 S DIC("A")="Select FUNCTION FINDING: "
"RTN","PXRMREDF",118,0)
 D ^DIC
"RTN","PXRMREDF",119,0)
 I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",120,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",121,0)
 S DA=+Y
"RTN","PXRMREDF",122,0)
 ;Finding record fields
"RTN","PXRMREDF",123,0)
 S DR=".01;3"
"RTN","PXRMREDF",124,0)
 ;Edit finding record
"RTN","PXRMREDF",125,0)
 D ^DIE
"RTN","PXRMREDF",126,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",127,0)
 I '$D(DA) Q
"RTN","PXRMREDF",128,0)
 ;If the function string is null don't do the rest of the fields.
"RTN","PXRMREDF",129,0)
 I $G(^PXD(811.9,IEN,25,DA,3))="" Q
"RTN","PXRMREDF",130,0)
 S DR="1;2;11;12;15;I X=""0Y"" S Y=16;13;14;16"
"RTN","PXRMREDF",131,0)
 D ^DIE
"RTN","PXRMREDF",132,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDF",133,0)
 I '$D(DA) Q
"RTN","PXRMREDF",134,0)
 ;Check if deleted
"RTN","PXRMREDF",135,0)
 Q
"RTN","PXRMREDF",136,0)
 ;
"RTN","PXRMREDF",137,0)
 ;Edit Reminder Function Findings
"RTN","PXRMREDF",138,0)
 ;----------------------
"RTN","PXRMREDF",139,0)
FFIND ;
"RTN","PXRMREDF",140,0)
 N DTOUT,DUOUT
"RTN","PXRMREDF",141,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",142,0)
 .D FFEDIT(DA) I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMREDF",143,0)
 K DUOUT,DTOUT
"RTN","PXRMREDF",144,0)
 Q
"RTN","PXRMREDF",145,0)
 ;
"RTN","PXRMREDF",146,0)
 ;Edit Reminder Findings
"RTN","PXRMREDF",147,0)
 ;----------------------
"RTN","PXRMREDF",148,0)
FIND(LIST) ;
"RTN","PXRMREDF",149,0)
 N DTOUT,DUOUT,NODE,SDA
"RTN","PXRMREDF",150,0)
 D SET ; Check if node defined
"RTN","PXRMREDF",151,0)
 S NODE="^PXD(811.9)"
"RTN","PXRMREDF",152,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",153,0)
 .;Display list of existing reminder findings
"RTN","PXRMREDF",154,0)
 .W !!,"Reminder Definition Findings"
"RTN","PXRMREDF",155,0)
 .D DSPALL("D",NODE,DA,.LIST)
"RTN","PXRMREDF",156,0)
 .;Edit findings
"RTN","PXRMREDF",157,0)
 .D FEDIT(DA) I $D(DUOUT)!$D(DTOUT) D LIST^PXRMREDT(NODE,DA,.DEF1,.LIST) Q
"RTN","PXRMREDF",158,0)
 .;Update list with finding changes
"RTN","PXRMREDF",159,0)
 .D LIST^PXRMREDT(NODE,DA,.DEF1,.LIST)
"RTN","PXRMREDF",160,0)
 Q
"RTN","PXRMREDF",161,0)
 ;
"RTN","PXRMREDF",162,0)
 ;General help text routine
"RTN","PXRMREDF",163,0)
 ;-------------------------
"RTN","PXRMREDF",164,0)
HELP(CALL) ;
"RTN","PXRMREDF",165,0)
 N HTEXT
"RTN","PXRMREDF",166,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMREDF",167,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREDF",168,0)
 ;
"RTN","PXRMREDF",169,0)
 I CALL=1 D
"RTN","PXRMREDF",170,0)
 .S HTEXT(1)="Select the type of finding you wish to change or add."
"RTN","PXRMREDF",171,0)
 .S HTEXT(2)="Type '?' for a list of the available finding types."
"RTN","PXRMREDF",172,0)
 I CALL=2 D
"RTN","PXRMREDF",173,0)
 .S HTEXT(1)="Select section of the reminder you wish to edit or 'All'"
"RTN","PXRMREDF",174,0)
 .S HTEXT(2)="to step through all sections of the reminder definition."
"RTN","PXRMREDF",175,0)
 I CALL=3 D
"RTN","PXRMREDF",176,0)
 .S HTEXT(1)="Select 'Y' to edit the findings mapped to this term"
"RTN","PXRMREDF",177,0)
 .S HTEXT(2)="or 'N' to return to select another reminder finding."
"RTN","PXRMREDF",178,0)
 ;
"RTN","PXRMREDF",179,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",180,0)
 S IC=""
"RTN","PXRMREDF",181,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREDF",182,0)
 . S X=HTEXT(IC)
"RTN","PXRMREDF",183,0)
 . D ^DIWP
"RTN","PXRMREDF",184,0)
 W !
"RTN","PXRMREDF",185,0)
 S IC=0
"RTN","PXRMREDF",186,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREDF",187,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREDF",188,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",189,0)
 W !
"RTN","PXRMREDF",190,0)
 Q
"RTN","PXRMREDF",191,0)
 ;
"RTN","PXRMREDF",192,0)
 ;Display TERM findings
"RTN","PXRMREDF",193,0)
 ;--------------------
"RTN","PXRMREDF",194,0)
TDSP(DA) ;
"RTN","PXRMREDF",195,0)
 N FIRST,SUB,SUB1,TLST
"RTN","PXRMREDF",196,0)
 S FIRST=1,SUB="",SUB1=""
"RTN","PXRMREDF",197,0)
 ;Build list of term findings
"RTN","PXRMREDF",198,0)
 D TLST(.TLST,DA)
"RTN","PXRMREDF",199,0)
 ;Display list
"RTN","PXRMREDF",200,0)
 F  S SUB=$O(TLST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",201,0)
 .S SUB1=0
"RTN","PXRMREDF",202,0)
 .F  S SUB1=$O(TLST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",203,0)
 ..I FIRST S FIRST=0 W !!,"Reminder Term Findings:",!!
"RTN","PXRMREDF",204,0)
 ..W SUB
"RTN","PXRMREDF",205,0)
 ..W ?8,SUB1,!
"RTN","PXRMREDF",206,0)
 I FIRST W !!,"Term has no mapped findings",!!
"RTN","PXRMREDF",207,0)
 Q
"RTN","PXRMREDF",208,0)
 ;
"RTN","PXRMREDF",209,0)
 ;List Reminders using this term
"RTN","PXRMREDF",210,0)
 ;------------------------------
"RTN","PXRMREDF",211,0)
TERMS(TIEN,RIEN) ;
"RTN","PXRMREDF",212,0)
 ;RIEN will be the reminder ien if called from reminder edit
"RTN","PXRMREDF",213,0)
 ;or zero if called from term edit
"RTN","PXRMREDF",214,0)
 N ARRAY,FIND,IEN,SUB,TCNT,RNAME
"RTN","PXRMREDF",215,0)
 ;Scan all reminders in file #811.9
"RTN","PXRMREDF",216,0)
 S IEN=0,FIND="PXRMD(811.5,",TCNT=0
"RTN","PXRMREDF",217,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:'IEN  D
"RTN","PXRMREDF",218,0)
 .;Exclude current reminder called in reminder edit
"RTN","PXRMREDF",219,0)
 .I RIEN,IEN=RIEN Q
"RTN","PXRMREDF",220,0)
 .;Check the term findings
"RTN","PXRMREDF",221,0)
 .I '$D(^PXD(811.9,IEN,20,"E",FIND,TIEN)) Q
"RTN","PXRMREDF",222,0)
 .;Add to reminder array
"RTN","PXRMREDF",223,0)
 .S RNAME=$P($G(^PXD(811.9,IEN,0)),U)
"RTN","PXRMREDF",224,0)
 .I RNAME="" S RNAME=IEN
"RTN","PXRMREDF",225,0)
 .I '$D(ARRAY(RNAME)) S TCNT=TCNT+1
"RTN","PXRMREDF",226,0)
 .S ARRAY(RNAME)=""
"RTN","PXRMREDF",227,0)
 ;
"RTN","PXRMREDF",228,0)
 ;Display list of reminders using the term
"RTN","PXRMREDF",229,0)
 I TCNT D
"RTN","PXRMREDF",230,0)
 .N TXT
"RTN","PXRMREDF",231,0)
 .S TXT="This Reminder Term is" S:RIEN TXT=TXT_" also"
"RTN","PXRMREDF",232,0)
 .S TXT=TXT_" used by the following Reminder Definition"
"RTN","PXRMREDF",233,0)
 .I TCNT>1 S TXT=TXT_"s"
"RTN","PXRMREDF",234,0)
 .W !!,TXT_":"
"RTN","PXRMREDF",235,0)
 .S RNAME="" F  S RNAME=$O(ARRAY(RNAME)) Q:RNAME=""  W !," ",RNAME
"RTN","PXRMREDF",236,0)
 Q
"RTN","PXRMREDF",237,0)
 ;
"RTN","PXRMREDF",238,0)
 ;------------------------------
"RTN","PXRMREDF",239,0)
 ;Check term for finding item to edit status item
"RTN","PXRMREDF",240,0)
TERMTYPE(TIEN) ;
"RTN","PXRMREDF",241,0)
 N DRUG,FOUND,HF,ORD,OTHER,RAD,RESULT,TAX,TYPE,VF
"RTN","PXRMREDF",242,0)
 S (DRUG,FOUND,HF,ORD,OTHER,RAD,RESULT,TAX,VF)=0
"RTN","PXRMREDF",243,0)
 S TYPE="" F  S TYPE=$O(^PXRMD(811.5,TIEN,20,"B",TYPE)) Q:TYPE=""  D
"RTN","PXRMREDF",244,0)
 . I TYPE["AUTTEDT(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",245,0)
 . I TYPE["AUTTHF(" S (HF,OTHER,VF)=1 Q
"RTN","PXRMREDF",246,0)
 . I TYPE["AUTTIMM(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",247,0)
 . I TYPE["AUTTSK(" S (OTHER,VF)=1 Q
"RTN","PXRMREDF",248,0)
 . I TYPE["ORD" S (ORD,FOUND)=1 Q
"RTN","PXRMREDF",249,0)
 . I TYPE["PS" S (DRUG,FOUND)=1 Q
"RTN","PXRMREDF",250,0)
 . I TYPE["PXD(811.2" S (FOUND,TAX,VF)=1 Q
"RTN","PXRMREDF",251,0)
 . I TYPE["RAMIS" S (FOUND,RAD)=1 Q
"RTN","PXRMREDF",252,0)
 . S OTHER=1
"RTN","PXRMREDF",253,0)
 I RAD=1,ORD=0,TAX=0,DRUG=0,OTHER=0 S RESULT="R"
"RTN","PXRMREDF",254,0)
 I RAD=0,ORD=1,TAX=0,DRUG=0,OTHER=0 S RESULT="O"
"RTN","PXRMREDF",255,0)
 I RAD=0,ORD=0,TAX=1,DRUG=0,OTHER=0 S RESULT="T"
"RTN","PXRMREDF",256,0)
 I RAD=0,ORD=0,TAX=0,DRUG=1,OTHER=0 S RESULT="D"
"RTN","PXRMREDF",257,0)
 I OTHER=1 S RESULT=1 I FOUND=1 S RESULT=2
"RTN","PXRMREDF",258,0)
 I RESULT="T" S RESULT=$$TAXTYPE^PXRMSTA1(TIEN,"")
"RTN","PXRMREDF",259,0)
 I HF=1 S RESULT="H"_RESULT
"RTN","PXRMREDF",260,0)
 I VF=1 S RESULT=RESULT_U_"VF"
"RTN","PXRMREDF",261,0)
 Q RESULT
"RTN","PXRMREDF",262,0)
 ;
"RTN","PXRMREDF",263,0)
 ;Build list of mapped findings for term
"RTN","PXRMREDF",264,0)
 ;--------------------------------------
"RTN","PXRMREDF",265,0)
TLST(ARRAY,DA) ;
"RTN","PXRMREDF",266,0)
 N TYPE,DATA,GLOB,IEN,NAME,NODE,SUB
"RTN","PXRMREDF",267,0)
 ;Clear passed arrays
"RTN","PXRMREDF",268,0)
 K ARRAY
"RTN","PXRMREDF",269,0)
 ;Build cross reference global to file number
"RTN","PXRMREDF",270,0)
 ;Get each finding
"RTN","PXRMREDF",271,0)
 S SUB=0 F  S SUB=$O(^PXRMD(811.5,DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDF",272,0)
 .S DATA=$G(^PXRMD(811.5,DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDF",273,0)
 .;Determine global and global ien
"RTN","PXRMREDF",274,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDF",275,0)
 .;Ignore null entries
"RTN","PXRMREDF",276,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDF",277,0)
 .;Work out the file type
"RTN","PXRMREDF",278,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDF",279,0)
 .S NAME=$P($G(@(U_GLOB_IEN_",0)")),U)
"RTN","PXRMREDF",280,0)
 .S ARRAY(TYPE,NAME)=""
"RTN","PXRMREDF",281,0)
 Q
"RTN","PXRMREDF",282,0)
 ;
"RTN","PXRMREDF",283,0)
 ;Map Term findings
"RTN","PXRMREDF",284,0)
 ;-----------------
"RTN","PXRMREDF",285,0)
TMAP(RIEN,TIEN) ;
"RTN","PXRMREDF",286,0)
 N TOPT,TNAM
"RTN","PXRMREDF",287,0)
 ;Display any other reminders using this term
"RTN","PXRMREDF",288,0)
 D TERMS(TIEN,RIEN)
"RTN","PXRMREDF",289,0)
 ;Term name
"RTN","PXRMREDF",290,0)
 S TNAM=$P($G(^PXRMD(811.5,TIEN,0)),U)
"RTN","PXRMREDF",291,0)
 ;Give option to edit mapped findings (Y/N)
"RTN","PXRMREDF",292,0)
 D TMASK(.TOPT,TNAM) Q:$D(DUOUT)!($D(DTOUT))
"RTN","PXRMREDF",293,0)
 ;Edit term findings
"RTN","PXRMREDF",294,0)
 I TOPT="Y" D TRMED(TIEN)
"RTN","PXRMREDF",295,0)
 Q
"RTN","PXRMREDF",296,0)
 ;
"RTN","PXRMREDF",297,0)
 ;Option to edit term findings
"RTN","PXRMREDF",298,0)
 ;----------------------------
"RTN","PXRMREDF",299,0)
TMASK(YESNO,TNAM) ;
"RTN","PXRMREDF",300,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREDF",301,0)
 S DIR(0)="YA0"
"RTN","PXRMREDF",302,0)
 S DIR("A")="Do you want to edit mapped findings for "_TNAM_": "
"RTN","PXRMREDF",303,0)
 S (DIR("B"),YESNO)="N"
"RTN","PXRMREDF",304,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMREDF",305,0)
 S DIR("??")=U_"D HELP^PXRMREDF(3)"
"RTN","PXRMREDF",306,0)
 W !
"RTN","PXRMREDF",307,0)
 D ^DIR K DIR
"RTN","PXRMREDF",308,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMREDF",309,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMREDF",310,0)
 S YESNO=$E(Y(0))
"RTN","PXRMREDF",311,0)
 Q
"RTN","PXRMREDF",312,0)
 ;
"RTN","PXRMREDF",313,0)
 ;Term edit
"RTN","PXRMREDF",314,0)
 ;---------
"RTN","PXRMREDF",315,0)
TRMED(DA) ;
"RTN","PXRMREDF",316,0)
 N CS1,CS2,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDF",317,0)
 K DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDF",318,0)
 ;Display term findings
"RTN","PXRMREDF",319,0)
 D TDSP(DA)
"RTN","PXRMREDF",320,0)
 ;Initialize change history
"RTN","PXRMREDF",321,0)
 S CS1=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMREDF",322,0)
 ;Edit term findings
"RTN","PXRMREDF",323,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMREDF",324,0)
 D EDIT^PXRMTMED(DIC,DA)
"RTN","PXRMREDF",325,0)
 ;Update change history
"RTN","PXRMREDF",326,0)
 S CS2=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMREDF",327,0)
 I CS2=0 Q
"RTN","PXRMREDF",328,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.5,DIC,DA)
"RTN","PXRMREDF",329,0)
 Q
"RTN","PXRMREDF",330,0)
 ;
"RTN","PXRMREDT")
0^86^B70699612
"RTN","PXRMREDT",1,0)
PXRMREDT ;SLC/PKR,PJH - Edit PXRM reminder definition. ;01/30/2013
"RTN","PXRMREDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMREDT",3,0)
 ;
"RTN","PXRMREDT",4,0)
 ;=======================================================
"RTN","PXRMREDT",5,0)
EEDIT ;Entry point for PXRM DEFINITION EDIT option.
"RTN","PXRMREDT",6,0)
 ;Build list of finding file definitions.
"RTN","PXRMREDT",7,0)
 N DEF,DEF1,DEF2,NEW
"RTN","PXRMREDT",8,0)
 D DEF^PXRMRUTL("811.902",.DEF,.DEF1,.DEF2)
"RTN","PXRMREDT",9,0)
 ;
"RTN","PXRMREDT",10,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDT",11,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMREDT",12,0)
 S DIC(0)="AEMQL"
"RTN","PXRMREDT",13,0)
 S DIC("A")="Select Reminder Definition: "
"RTN","PXRMREDT",14,0)
 S DLAYGO=811.9
"RTN","PXRMREDT",15,0)
GETNAME ;Get the name of the reminder definition to edit.
"RTN","PXRMREDT",16,0)
 ;Set the starting place for additions.
"RTN","PXRMREDT",17,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMREDT",18,0)
 W !
"RTN","PXRMREDT",19,0)
 S DIC("W")="W $$LUDISP^PXRMREDT(Y)"
"RTN","PXRMREDT",20,0)
 D ^DIC
"RTN","PXRMREDT",21,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMREDT",22,0)
 I Y=-1 G END
"RTN","PXRMREDT",23,0)
 S DA=$P(Y,U,1)
"RTN","PXRMREDT",24,0)
 S NEW=$P(Y,U,3)
"RTN","PXRMREDT",25,0)
 D ALL(DIC,DA,.DEF1,NEW)
"RTN","PXRMREDT",26,0)
 G GETNAME
"RTN","PXRMREDT",27,0)
END ;
"RTN","PXRMREDT",28,0)
 Q
"RTN","PXRMREDT",29,0)
 ;
"RTN","PXRMREDT",30,0)
 ;=======================================================
"RTN","PXRMREDT",31,0)
 ;Select section of reminder to edit, also called at ALL by PXRMEDIT.
"RTN","PXRMREDT",32,0)
 ;----------------------------------
"RTN","PXRMREDT",33,0)
ALL(DIC,DA,DEF1,NEW) ;
"RTN","PXRMREDT",34,0)
 ;Get list of findings/terms for reminder
"RTN","PXRMREDT",35,0)
 N BLDLOGIC,CS1,CS2,DTOUT,DUOUT,LIST,NODE,OPTION,TYPE
"RTN","PXRMREDT",36,0)
 ;Save the original checksum.
"RTN","PXRMREDT",37,0)
 S CS1=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",38,0)
STRTEDIT S BLDLOGIC=0
"RTN","PXRMREDT",39,0)
 ;Build finding list
"RTN","PXRMREDT",40,0)
 S NODE="^PXD(811.9)"
"RTN","PXRMREDT",41,0)
 D LIST(NODE,DA,.DEF1,.LIST)
"RTN","PXRMREDT",42,0)
 ;If this is a new reminder enter all fields
"RTN","PXRMREDT",43,0)
 I $G(NEW) D EDIT(DIC,DA) Q 
"RTN","PXRMREDT",44,0)
 ;National reminder allows editing of term findings only 
"RTN","PXRMREDT",45,0)
 I '$$VEDIT^PXRMUTIL(DIC,DA) D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",46,0)
 .S TYPE=""
"RTN","PXRMREDT",47,0)
 .F  S TYPE=$O(LIST(TYPE)) Q:TYPE=""  D
"RTN","PXRMREDT",48,0)
 .. I TYPE="RT" Q
"RTN","PXRMREDT",49,0)
 .. K LIST(TYPE)
"RTN","PXRMREDT",50,0)
 .I '$D(LIST) S DUOUT=1 Q
"RTN","PXRMREDT",51,0)
 .S BLDLOGIC=1
"RTN","PXRMREDT",52,0)
 .D TFIND(DA,.LIST)
"RTN","PXRMREDT",53,0)
 .I $D(Y) S DUOUT=1
"RTN","PXRMREDT",54,0)
 ;Otherwise choose fields to edit
"RTN","PXRMREDT",55,0)
 I $$VEDIT^PXRMUTIL(DIC,DA) F  D  Q:($G(OPTION)="^")!$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",56,0)
 .S OPTION=$$OPTION^PXRMREDT Q:(OPTION="^")!$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",57,0)
 .;All details
"RTN","PXRMREDT",58,0)
 .I OPTION="A" D
"RTN","PXRMREDT",59,0)
 .. S BLDLOGIC=1
"RTN","PXRMREDT",60,0)
 .. D EDIT(DIC,DA)
"RTN","PXRMREDT",61,0)
 .;Set up local variables
"RTN","PXRMREDT",62,0)
 .N DIE,DR S DIE=DIC N DIC
"RTN","PXRMREDT",63,0)
 .;Descriptions
"RTN","PXRMREDT",64,0)
 .I OPTION="G" D
"RTN","PXRMREDT",65,0)
 ..D GEN
"RTN","PXRMREDT",66,0)
 .;Baseline Frequency
"RTN","PXRMREDT",67,0)
 .I OPTION="B" D
"RTN","PXRMREDT",68,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",69,0)
 ..D BASE
"RTN","PXRMREDT",70,0)
 .;Findings
"RTN","PXRMREDT",71,0)
 .I OPTION="F"  D
"RTN","PXRMREDT",72,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",73,0)
 ..D FIND(.LIST)
"RTN","PXRMREDT",74,0)
 .;Function findings
"RTN","PXRMREDT",75,0)
 .I OPTION="FF"  D
"RTN","PXRMREDT",76,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",77,0)
 ..D FFIND
"RTN","PXRMREDT",78,0)
 .;Logic
"RTN","PXRMREDT",79,0)
 .I OPTION="L" D
"RTN","PXRMREDT",80,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",81,0)
 ..D LOGIC
"RTN","PXRMREDT",82,0)
 .;Custom date due
"RTN","PXRMREDT",83,0)
 . I OPTION="C" D
"RTN","PXRMREDT",84,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",85,0)
 ..D CDUE
"RTN","PXRMREDT",86,0)
 .;Dialog
"RTN","PXRMREDT",87,0)
 .I OPTION="D" D
"RTN","PXRMREDT",88,0)
 ..D DIALOG
"RTN","PXRMREDT",89,0)
 .;Web addresses
"RTN","PXRMREDT",90,0)
 .I OPTION="W" D
"RTN","PXRMREDT",91,0)
 ..D WEB
"RTN","PXRMREDT",92,0)
 .;If necessary build the internal logic strings.
"RTN","PXRMREDT",93,0)
 .I BLDLOGIC D BLDALL^PXRMLOGX(DA,"","")
"RTN","PXRMREDT",94,0)
 ;See if any changes have been made.
"RTN","PXRMREDT",95,0)
 S CS2=$$FILE^PXRMEXCS(811.9,DA)
"RTN","PXRMREDT",96,0)
 I CS2=0 Q
"RTN","PXRMREDT",97,0)
 ;If the file has been edited, do an integrity check.
"RTN","PXRMREDT",98,0)
 I CS2'=CS1 D
"RTN","PXRMREDT",99,0)
 . ;I OPTION="^" Q
"RTN","PXRMREDT",100,0)
 . W !,"Checking integrity of the definition ...",#
"RTN","PXRMREDT",101,0)
 . I OPTION'="^",'$$DEF^PXRMICHK(DA) G STRTEDIT
"RTN","PXRMREDT",102,0)
 .;If it passes the integrity check save the edit history.
"RTN","PXRMREDT",103,0)
 . D SEHIST^PXRMUTIL(811.9,DIC,DA)
"RTN","PXRMREDT",104,0)
 Q
"RTN","PXRMREDT",105,0)
 ;
"RTN","PXRMREDT",106,0)
 ;Reminder Edit
"RTN","PXRMREDT",107,0)
 ;-------------
"RTN","PXRMREDT",108,0)
EDIT(ROOT,DA) ;
"RTN","PXRMREDT",109,0)
 N DIC,DIDEL,DIE,DR,RESULT
"RTN","PXRMREDT",110,0)
 S DIE=ROOT,DIDEL=811.9
"RTN","PXRMREDT",111,0)
 ;Edit the fields in the same order they are printed by a reminder
"RTN","PXRMREDT",112,0)
 ;inquiry.
"RTN","PXRMREDT",113,0)
 ;Reminder name
"RTN","PXRMREDT",114,0)
 W !!
"RTN","PXRMREDT",115,0)
 S DR=".01"
"RTN","PXRMREDT",116,0)
 D ^DIE
"RTN","PXRMREDT",117,0)
 ;If DA is undefined then the entry was deleted and we are done.
"RTN","PXRMREDT",118,0)
 I '$D(DA) S DTOUT=1 Q
"RTN","PXRMREDT",119,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDT",120,0)
 ;
"RTN","PXRMREDT",121,0)
 ;Other fields
"RTN","PXRMREDT",122,0)
 D GEN Q:$D(Y)
"RTN","PXRMREDT",123,0)
 D BASE Q:$D(Y)
"RTN","PXRMREDT",124,0)
 D FIND(.LIST) Q:$D(Y)
"RTN","PXRMREDT",125,0)
 D FFIND Q:$D(Y)
"RTN","PXRMREDT",126,0)
 D LOGIC Q:$D(Y)
"RTN","PXRMREDT",127,0)
 D DIALOG Q:$D(Y)
"RTN","PXRMREDT",128,0)
 D WEB Q:$D(Y)
"RTN","PXRMREDT",129,0)
 W #
"RTN","PXRMREDT",130,0)
 I '$$DEF^PXRMICHK(DA) G STRTEDIT
"RTN","PXRMREDT",131,0)
 ;If it passes the integrity check save the edit history.
"RTN","PXRMREDT",132,0)
 D SEHIST^PXRMUTIL(811.9,DIC,DA)
"RTN","PXRMREDT",133,0)
 Q
"RTN","PXRMREDT",134,0)
 ;
"RTN","PXRMREDT",135,0)
GEN ;Print name
"RTN","PXRMREDT",136,0)
 W !!
"RTN","PXRMREDT",137,0)
 S DR="1.2"
"RTN","PXRMREDT",138,0)
 D ^DIE
"RTN","PXRMREDT",139,0)
 I $D(Y) Q
"RTN","PXRMREDT",140,0)
 ;
"RTN","PXRMREDT",141,0)
CLASS ;
"RTN","PXRMREDT",142,0)
 ;Class
"RTN","PXRMREDT",143,0)
 W !!
"RTN","PXRMREDT",144,0)
 S DR="100"
"RTN","PXRMREDT",145,0)
 D ^DIE
"RTN","PXRMREDT",146,0)
 I $D(Y) Q
"RTN","PXRMREDT",147,0)
 ;Sponsor
"RTN","PXRMREDT",148,0)
 S DR="101"
"RTN","PXRMREDT",149,0)
 D ^DIE
"RTN","PXRMREDT",150,0)
 I $D(Y) Q
"RTN","PXRMREDT",151,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMREDT",152,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMREDT",153,0)
 I RESULT=0 G CLASS
"RTN","PXRMREDT",154,0)
 ;Review date, Usage
"RTN","PXRMREDT",155,0)
 S DR="102;103"
"RTN","PXRMREDT",156,0)
 D ^DIE
"RTN","PXRMREDT",157,0)
 I $D(Y) Q
"RTN","PXRMREDT",158,0)
 ;
"RTN","PXRMREDT",159,0)
 ;Related VA-* reminder
"RTN","PXRMREDT",160,0)
 W !!
"RTN","PXRMREDT",161,0)
 S DR="1.4"
"RTN","PXRMREDT",162,0)
 D ^DIE
"RTN","PXRMREDT",163,0)
 I $D(Y) Q
"RTN","PXRMREDT",164,0)
 ;
"RTN","PXRMREDT",165,0)
 ;Inactive flag
"RTN","PXRMREDT",166,0)
 W !!
"RTN","PXRMREDT",167,0)
 S DR="1.6"
"RTN","PXRMREDT",168,0)
 D ^DIE
"RTN","PXRMREDT",169,0)
 I $D(Y) Q
"RTN","PXRMREDT",170,0)
 ;Ignore on N/A
"RTN","PXRMREDT",171,0)
 S DR=1.8
"RTN","PXRMREDT",172,0)
 D ^DIE
"RTN","PXRMREDT",173,0)
 I $D(Y) Q
"RTN","PXRMREDT",174,0)
 ;
"RTN","PXRMREDT",175,0)
 ;Recision Date
"RTN","PXRMREDT",176,0)
 S DR="69"
"RTN","PXRMREDT",177,0)
 D ^DIE
"RTN","PXRMREDT",178,0)
 I $D(Y) Q
"RTN","PXRMREDT",179,0)
 ;
"RTN","PXRMREDT",180,0)
 ;Reminder description
"RTN","PXRMREDT",181,0)
 W !!
"RTN","PXRMREDT",182,0)
 S DR="2"
"RTN","PXRMREDT",183,0)
 D ^DIE
"RTN","PXRMREDT",184,0)
 I $D(Y) Q
"RTN","PXRMREDT",185,0)
 ;
"RTN","PXRMREDT",186,0)
 ;Technical description
"RTN","PXRMREDT",187,0)
 W !!
"RTN","PXRMREDT",188,0)
 S DR="3"
"RTN","PXRMREDT",189,0)
 D ^DIE
"RTN","PXRMREDT",190,0)
 ;
"RTN","PXRMREDT",191,0)
 ;Priority
"RTN","PXRMREDT",192,0)
 W !!
"RTN","PXRMREDT",193,0)
 S DR="1.91"
"RTN","PXRMREDT",194,0)
 D ^DIE
"RTN","PXRMREDT",195,0)
 Q
"RTN","PXRMREDT",196,0)
 ;
"RTN","PXRMREDT",197,0)
BASE W !!,"Baseline Frequency"
"RTN","PXRMREDT",198,0)
 ;Do in advance time frame
"RTN","PXRMREDT",199,0)
 S DR=1.3
"RTN","PXRMREDT",200,0)
 D ^DIE
"RTN","PXRMREDT",201,0)
 I $D(Y) Q
"RTN","PXRMREDT",202,0)
 ;
"RTN","PXRMREDT",203,0)
 ;Sex specific
"RTN","PXRMREDT",204,0)
 S DR=1.9
"RTN","PXRMREDT",205,0)
 D ^DIE
"RTN","PXRMREDT",206,0)
 I $D(Y) Q
"RTN","PXRMREDT",207,0)
FARS ;
"RTN","PXRMREDT",208,0)
 W !!,"Baseline frequency age range set"
"RTN","PXRMREDT",209,0)
 S DR="7"
"RTN","PXRMREDT",210,0)
 S DR(2,811.97)=".01;1;2;3;4"
"RTN","PXRMREDT",211,0)
 D ^DIE
"RTN","PXRMREDT",212,0)
 I $$OVLAP^PXRMAGE G FARS
"RTN","PXRMREDT",213,0)
 D SNMLA^PXRMFNFT(DA)
"RTN","PXRMREDT",214,0)
 Q
"RTN","PXRMREDT",215,0)
 ;
"RTN","PXRMREDT",216,0)
FIND(LIST) ;Edit findings (multiple)
"RTN","PXRMREDT",217,0)
 D FIND^PXRMREDF(.LIST)
"RTN","PXRMREDT",218,0)
 D SNMLF^PXRMFNFT(DA,20)
"RTN","PXRMREDT",219,0)
 Q
"RTN","PXRMREDT",220,0)
 ;
"RTN","PXRMREDT",221,0)
FFIND W !!,"Function Findings"
"RTN","PXRMREDT",222,0)
 D FFIND^PXRMREDF
"RTN","PXRMREDT",223,0)
 D SNMLF^PXRMFNFT(DA,25)
"RTN","PXRMREDT",224,0)
 Q
"RTN","PXRMREDT",225,0)
 ;
"RTN","PXRMREDT",226,0)
LOGIC W !!,"Patient Cohort and Resolution Logic"
"RTN","PXRMREDT",227,0)
 S DR="30T;60T;61T;70T;71T;34T;65T;66T;75T;76T"
"RTN","PXRMREDT",228,0)
 D ^DIE
"RTN","PXRMREDT",229,0)
 ;Make sure the Patient Cohort Logic at least contains the default.
"RTN","PXRMREDT",230,0)
 I $G(^PXD(811.9,DA,31))="" D
"RTN","PXRMREDT",231,0)
 . S ^PXD(811.9,DA,31)="(SEX)&(AGE)"
"RTN","PXRMREDT",232,0)
 . S ^PXD(811.9,DA,32)="2"_U_"SEX;AGE"
"RTN","PXRMREDT",233,0)
 D SNMLL^PXRMFNFT(DA)
"RTN","PXRMREDT",234,0)
 Q
"RTN","PXRMREDT",235,0)
CDUE W !!,"Custom Date Due"
"RTN","PXRMREDT",236,0)
 S DR=45
"RTN","PXRMREDT",237,0)
 D ^DIE
"RTN","PXRMREDT",238,0)
 Q
"RTN","PXRMREDT",239,0)
 ;
"RTN","PXRMREDT",240,0)
DIALOG W !!,"Reminder Dialog"
"RTN","PXRMREDT",241,0)
 S DR="51"
"RTN","PXRMREDT",242,0)
 D ^DIE
"RTN","PXRMREDT",243,0)
 Q
"RTN","PXRMREDT",244,0)
 ;
"RTN","PXRMREDT",245,0)
WEB W !!,"Web Addresses for Reminder Information"
"RTN","PXRMREDT",246,0)
 S DR="50"
"RTN","PXRMREDT",247,0)
 D ^DIE
"RTN","PXRMREDT",248,0)
 Q
"RTN","PXRMREDT",249,0)
 ;
"RTN","PXRMREDT",250,0)
 ;Get full list of findings
"RTN","PXRMREDT",251,0)
 ;-------------------------
"RTN","PXRMREDT",252,0)
LIST(GBL,DA,DEF1,ARRAY) ;
"RTN","PXRMREDT",253,0)
 N CNT,DATA,GLOB,IEN,NAME,NODE,SUB,TYPE
"RTN","PXRMREDT",254,0)
 ;Clear passed arrays
"RTN","PXRMREDT",255,0)
 K ARRAY
"RTN","PXRMREDT",256,0)
 S CNT=0
"RTN","PXRMREDT",257,0)
 ;Build cross reference global to file number
"RTN","PXRMREDT",258,0)
 ;Get each finding
"RTN","PXRMREDT",259,0)
 S SUB=0 F  S SUB=$O(@GBL@(DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDT",260,0)
 .S DATA=$G(@GBL@(DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDT",261,0)
 .;Determine global and global ien
"RTN","PXRMREDT",262,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDT",263,0)
 .;Ignore null entries
"RTN","PXRMREDT",264,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDT",265,0)
 .;Work out the file type
"RTN","PXRMREDT",266,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDT",267,0)
 .S CNT=CNT+1
"RTN","PXRMREDT",268,0)
 .I $P($G(@(U_GLOB_IEN_",0)")),U)="" D
"RTN","PXRMREDT",269,0)
 ..W !,"**WARNING** Finding #"_SUB_" does not exist, select finding `"_SUB_" to edit it." Q
"RTN","PXRMREDT",270,0)
 .E  S NAME=$P($G(@(U_GLOB_IEN_",0)")),U) S ARRAY(TYPE,NAME,SUB)=IEN
"RTN","PXRMREDT",271,0)
 Q
"RTN","PXRMREDT",272,0)
 ;
"RTN","PXRMREDT",273,0)
 ;Choose which part of Reminder to edit
"RTN","PXRMREDT",274,0)
 ;-------------------------------------
"RTN","PXRMREDT",275,0)
OPTION() ;
"RTN","PXRMREDT",276,0)
 N DIR,X,Y
"RTN","PXRMREDT",277,0)
 ;Display warning message if un-mapped terms exist
"RTN","PXRMREDT",278,0)
 K DIROUT,DIRUT
"RTN","PXRMREDT",279,0)
 S DIR(0)="SO"_U
"RTN","PXRMREDT",280,0)
 S DIR(0)=DIR(0)_"A:All reminder details;"
"RTN","PXRMREDT",281,0)
 S DIR(0)=DIR(0)_"G:General;"
"RTN","PXRMREDT",282,0)
 S DIR(0)=DIR(0)_"B:Baseline Frequency;"
"RTN","PXRMREDT",283,0)
 S DIR(0)=DIR(0)_"F:Findings;"
"RTN","PXRMREDT",284,0)
 S DIR(0)=DIR(0)_"FF:Function Findings;"
"RTN","PXRMREDT",285,0)
 S DIR(0)=DIR(0)_"L:Logic;"
"RTN","PXRMREDT",286,0)
 S DIR(0)=DIR(0)_"C:Custom date due;"
"RTN","PXRMREDT",287,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREDT",288,0)
 S DIR(0)=DIR(0)_"W:Web Addresses;"
"RTN","PXRMREDT",289,0)
 S DIR("A",1)="Select a section to edit; press ENTER when you are done editing."
"RTN","PXRMREDT",290,0)
 S DIR("A")="To quit and exit type '^'"
"RTN","PXRMREDT",291,0)
 S DIR("?")="Select which section of the reminder you wish to edit."
"RTN","PXRMREDT",292,0)
 S DIR("??")="^D HELP^PXRMREDF(2)"
"RTN","PXRMREDT",293,0)
 D ^DIR K DIR
"RTN","PXRMREDT",294,0)
 I (Y="")!(Y="^") S DUOUT=1
"RTN","PXRMREDT",295,0)
 Q Y
"RTN","PXRMREDT",296,0)
 ;
"RTN","PXRMREDT",297,0)
 ;-------------------------------------
"RTN","PXRMREDT",298,0)
LUDISP(IEN) ;Use for DIC("W") to augment look-up display.
"RTN","PXRMREDT",299,0)
 N CLASS,EM,INACTIVE,TEXT
"RTN","PXRMREDT",300,0)
 S INACTIVE=$P(^PXD(811.9,IEN,0),U,6)
"RTN","PXRMREDT",301,0)
 S CLASS=$P(^PXD(811.9,IEN,100),U,1)
"RTN","PXRMREDT",302,0)
 I INACTIVE'="" S INACTIVE="("_$$EXTERNAL^DILFD(811.9,1.6,"",INACTIVE,.EM)_")"
"RTN","PXRMREDT",303,0)
 S CLASS=$$EXTERNAL^DILFD(811.9,100,"",CLASS,.EM)
"RTN","PXRMREDT",304,0)
 S TEXT="  "_CLASS_" "_INACTIVE
"RTN","PXRMREDT",305,0)
 Q TEXT
"RTN","PXRMREDT",306,0)
 ;
"RTN","PXRMREDT",307,0)
 ;-------------------------------------
"RTN","PXRMREDT",308,0)
TFIND(DA,LIST) ;Allow edit of term findings for national reminders.
"RTN","PXRMREDT",309,0)
 N DIR,IENLIST,IND,JND,NAME,NAMELIST,SUB,X,Y
"RTN","PXRMREDT",310,0)
 S IND=0,NAME=""
"RTN","PXRMREDT",311,0)
 F  S NAME=$O(LIST("RT",NAME)) Q:NAME=""  D
"RTN","PXRMREDT",312,0)
 . S IND=IND+1
"RTN","PXRMREDT",313,0)
 . S NAMELIST(IND)=$$RJ^XLFSTR(IND,3)_" "_NAME
"RTN","PXRMREDT",314,0)
 . S SUB=$O(LIST("RT",NAME,""))
"RTN","PXRMREDT",315,0)
 . S IENLIST(IND)=LIST("RT",NAME,SUB)
"RTN","PXRMREDT",316,0)
 M DIR("A")=NAMELIST
"RTN","PXRMREDT",317,0)
 S DIR("A")="Enter your list"
"RTN","PXRMREDT",318,0)
 S DIR(0)="LO^1:"_IND
"RTN","PXRMREDT",319,0)
 W !!,"Select term(s) for finding edit:"
"RTN","PXRMREDT",320,0)
 D ^DIR
"RTN","PXRMREDT",321,0)
 I $D(DIROUT)!$D(DIRUT) S LIST="" Q
"RTN","PXRMREDT",322,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMREDT",323,0)
 F IND=1:1:$L(Y,",")-1 D
"RTN","PXRMREDT",324,0)
 . S JND=$P(Y,",",IND)
"RTN","PXRMREDT",325,0)
 . S NAME=$P(NAMELIST(JND),JND,2)
"RTN","PXRMREDT",326,0)
 . W !!,"Reminder Term:",NAME
"RTN","PXRMREDT",327,0)
 . D TMAP^PXRMREDF(DA,IENLIST(JND))
"RTN","PXRMREDT",328,0)
 Q
"RTN","PXRMREDT",329,0)
 ;
"RTN","PXRMRUL1")
0^81^B49947013
"RTN","PXRMRUL1",1,0)
PXRMRUL1 ; SLC/AGP,PKR - Patient list routines. ; 01/28/2013
"RTN","PXRMRUL1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMRUL1",3,0)
 ; 
"RTN","PXRMRUL1",4,0)
 ;
"RTN","PXRMRUL1",5,0)
ASK(PLIEN,OPT) ;Verify patient list name
"RTN","PXRMRUL1",6,0)
 N X,Y,TEXT
"RTN","PXRMRUL1",7,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMRUL1",8,0)
 S DIR(0)="YA0"
"RTN","PXRMRUL1",9,0)
 S DIR("A")=OPT_" patient list "_$P($G(^PXRMXP(810.5,PLIEN,0)),U)_"?: "
"RTN","PXRMRUL1",10,0)
 S DIR("B")="N"
"RTN","PXRMRUL1",11,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMRUL1",12,0)
 W !
"RTN","PXRMRUL1",13,0)
 D ^DIR K DIR
"RTN","PXRMRUL1",14,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMRUL1",15,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMRUL1",16,0)
 I $E(Y(0))="N" S DUOUT=1 Q
"RTN","PXRMRUL1",17,0)
 Q
"RTN","PXRMRUL1",18,0)
 ;
"RTN","PXRMRUL1",19,0)
COPY(IENO) ;Copy patient list
"RTN","PXRMRUL1",20,0)
 ;Check if OK to copy
"RTN","PXRMRUL1",21,0)
 D ASK(IENO,"Copy") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMRUL1",22,0)
 N FDA,IENN,IND,MSG,NNAME,ODATA,OEPIEN,ONAME,ORULE,PATCREAT,TEXT,X,Y
"RTN","PXRMRUL1",23,0)
 ;Select list to copy to
"RTN","PXRMRUL1",24,0)
 S TEXT="Select PATIENT LIST name to copy to: "
"RTN","PXRMRUL1",25,0)
 D PLIST^PXRMLCR(.IENN,TEXT,IENO) Q:$D(DUOUT)!$D(DTOUT)  Q:'IENN
"RTN","PXRMRUL1",26,0)
 S NNAME=$P($G(^PXRMXP(810.5,IENN,0)),U)
"RTN","PXRMRUL1",27,0)
 ;
"RTN","PXRMRUL1",28,0)
 ;Get original Patient List record 
"RTN","PXRMRUL1",29,0)
 S ODATA=$G(^PXRMXP(810.5,IENO,0))
"RTN","PXRMRUL1",30,0)
 S ONAME=$P(ODATA,U),OEPIEN=$P(ODATA,U,5),ORULE=$P(ODATA,U,6)
"RTN","PXRMRUL1",31,0)
 ;
"RTN","PXRMRUL1",32,0)
 M ^PXRMXP(810.5,IENN)=^PXRMXP(810.5,IENO)
"RTN","PXRMRUL1",33,0)
 D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2)
"RTN","PXRMRUL1",34,0)
 ;Update header info
"RTN","PXRMRUL1",35,0)
 S TYPE=$S($G(PATCREAT)="Y":"PVT",1:"PUB")
"RTN","PXRMRUL1",36,0)
 S IND=IENN_","
"RTN","PXRMRUL1",37,0)
 S FDA(810.5,IND,.01)=NNAME
"RTN","PXRMRUL1",38,0)
 S FDA(810.5,IND,.04)=$$NOW^XLFDT
"RTN","PXRMRUL1",39,0)
 S FDA(810.5,IND,.05)=OEPIEN
"RTN","PXRMRUL1",40,0)
 S FDA(810.5,IND,.06)=ORULE
"RTN","PXRMRUL1",41,0)
 S FDA(810.5,IND,.07)=$G(DUZ)
"RTN","PXRMRUL1",42,0)
 S FDA(810.5,IND,.08)=TYPE
"RTN","PXRMRUL1",43,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMRUL1",44,0)
 ;Error
"RTN","PXRMRUL1",45,0)
 I $D(MSG) D ERR
"RTN","PXRMRUL1",46,0)
 ;
"RTN","PXRMRUL1",47,0)
 W !!,"Completed copy of '"_ONAME_"'"
"RTN","PXRMRUL1",48,0)
 W !,"into '"_NNAME_"'",! H 2
"RTN","PXRMRUL1",49,0)
 K ^TMP($J,"PXRMRULE")
"RTN","PXRMRUL1",50,0)
 Q
"RTN","PXRMRUL1",51,0)
 ;
"RTN","PXRMRUL1",52,0)
CRLST(NAME,CLASS) ;Create new patient list
"RTN","PXRMRUL1",53,0)
 N IEN
"RTN","PXRMRUL1",54,0)
 ;Check if name exists
"RTN","PXRMRUL1",55,0)
 S IEN=$O(^PXRMXP(810.5,"B",NAME,"")) I IEN Q IEN
"RTN","PXRMRUL1",56,0)
 ;Otherwise create national entry
"RTN","PXRMRUL1",57,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMRUL1",58,0)
 S FDA(810.5,"+1,",.01)=NAME
"RTN","PXRMRUL1",59,0)
 S FDA(810.5,"+1,",100)=CLASS
"RTN","PXRMRUL1",60,0)
 S FDA(810.5,"+1,",.07)=$G(DUZ)
"RTN","PXRMRUL1",61,0)
 ;Make stub public
"RTN","PXRMRUL1",62,0)
 S FDA(810.5,"+1,",.08)="PUB"
"RTN","PXRMRUL1",63,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMRUL1",64,0)
 ;Error
"RTN","PXRMRUL1",65,0)
 I $D(MSG) Q 0
"RTN","PXRMRUL1",66,0)
 ;Otherwise list ien
"RTN","PXRMRUL1",67,0)
 Q FDAIEN(1)
"RTN","PXRMRUL1",68,0)
 ;
"RTN","PXRMRUL1",69,0)
COUNT(NODE) ;Count the number of entries.
"RTN","PXRMRUL1",70,0)
 N DFN,NUM
"RTN","PXRMRUL1",71,0)
 S (DFN,NUM)=0
"RTN","PXRMRUL1",72,0)
 F  S DFN=$O(^TMP($J,NODE,DFN)) Q:DFN=""  S NUM=NUM+1
"RTN","PXRMRUL1",73,0)
 Q NUM
"RTN","PXRMRUL1",74,0)
 ;
"RTN","PXRMRUL1",75,0)
DELETE(LIST) ;Delete Patient list
"RTN","PXRMRUL1",76,0)
 I '$$VEDIT^PXRMUTIL("^PXRMXP(810.5,",LIST) D  Q
"RTN","PXRMRUL1",77,0)
 .W !!,?5,"VA- and national class patient lists may not be deleted" H 2
"RTN","PXRMRUL1",78,0)
 .S DUOUT=1
"RTN","PXRMRUL1",79,0)
 ;Check if this is the right list
"RTN","PXRMRUL1",80,0)
 D ASK(LIST,"Delete") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMRUL1",81,0)
 ;
"RTN","PXRMRUL1",82,0)
 N DA,DIK,DUOUT
"RTN","PXRMRUL1",83,0)
 ;Lock patient list
"RTN","PXRMRUL1",84,0)
 D LOCK Q:$D(DUOUT)
"RTN","PXRMRUL1",85,0)
 ;Kill List
"RTN","PXRMRUL1",86,0)
 S DA=LIST,DIK="^PXRMXP(810.5,"
"RTN","PXRMRUL1",87,0)
 D ^DIK
"RTN","PXRMRUL1",88,0)
 ;Unlock patient list
"RTN","PXRMRUL1",89,0)
 D UNLOCK
"RTN","PXRMRUL1",90,0)
 Q
"RTN","PXRMRUL1",91,0)
 ;
"RTN","PXRMRUL1",92,0)
DATECHK(DATE) ;
"RTN","PXRMRUL1",93,0)
 I DATE=0 Q 1
"RTN","PXRMRUL1",94,0)
 S DATE=$$STRREP^PXRMUTIL(DATE,"BDT","T")
"RTN","PXRMRUL1",95,0)
 Q $$VDT^PXRMINTR(DATE)
"RTN","PXRMRUL1",96,0)
 ;
"RTN","PXRMRUL1",97,0)
DATES(LBBDT,LBEDT,RBDT,REDT,FARR) ;Set the dates in the finding array to
"RTN","PXRMRUL1",98,0)
 ;FileMan dates.
"RTN","PXRMRUL1",99,0)
 N FI,PXRMDATE,TBDT,TEDT
"RTN","PXRMRUL1",100,0)
 S FI=0
"RTN","PXRMRUL1",101,0)
 F  S FI=+$O(FARR(20,FI)) Q:FI=0  D
"RTN","PXRMRUL1",102,0)
 . S TBDT=$P(FARR(20,FI,0),U,8),TEDT=$P(FARR(20,FI,0),U,11)
"RTN","PXRMRUL1",103,0)
 . I TBDT="",TEDT="" D
"RTN","PXRMRUL1",104,0)
 .. S $P(FARR(20,FI,0),U,8)=RBDT,$P(FARR(20,FI,0),U,11)=REDT
"RTN","PXRMRUL1",105,0)
 . E  D
"RTN","PXRMRUL1",106,0)
 .. S PXRMDATE=$S(TBDT["BDT":LBBDT,1:LBEDT)
"RTN","PXRMRUL1",107,0)
 .. S TBDT=$S(TBDT="":0,TBDT=0:0,TBDT="BDT":LBBDT,1:$$CTFMD^PXRMDATE(TBDT))
"RTN","PXRMRUL1",108,0)
 .. S PXRMDATE=$S(TEDT["BDT":LBBDT,1:LBEDT)
"RTN","PXRMRUL1",109,0)
 .. S TEDT=$S(TEDT="":"T",TEDT=0:"T",TEDT="BDT":LBBDT,1:TEDT)
"RTN","PXRMRUL1",110,0)
 .. S TEDT=$$CTFMD^PXRMDATE(TEDT)
"RTN","PXRMRUL1",111,0)
 .. S $P(FARR(20,FI,0),U,8)=TBDT,$P(FARR(20,FI,0),U,11)=TEDT
"RTN","PXRMRUL1",112,0)
 Q
"RTN","PXRMRUL1",113,0)
 ;
"RTN","PXRMRUL1",114,0)
ERR ;Error Handler
"RTN","PXRMRUL1",115,0)
 N ERROR,IC,REF
"RTN","PXRMRUL1",116,0)
 S ERROR(1)="Unable to build patient list : "
"RTN","PXRMRUL1",117,0)
 S ERROR(2)=NAME
"RTN","PXRMRUL1",118,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMRUL1",119,0)
 ; Move MSG into Error
"RTN","PXRMRUL1",120,0)
 S REF="MSG"
"RTN","PXRMRUL1",121,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMRUL1",122,0)
 ;Screen message
"RTN","PXRMRUL1",123,0)
 D EN^DDIOL(.ERROR)
"RTN","PXRMRUL1",124,0)
 Q
"RTN","PXRMRUL1",125,0)
 ;
"RTN","PXRMRUL1",126,0)
INSERT(FROUT,DFN,TNAME,TFIEV,RSTOP) ;Save patient data.
"RTN","PXRMRUL1",127,0)
 I TFIEV(1)=0 Q
"RTN","PXRMRUL1",128,0)
 N DATA,DONE,IND,LEN,REF,ROOT,START,SUB,TEMP
"RTN","PXRMRUL1",129,0)
 S REF="TFIEV(1,""CSUB"")"
"RTN","PXRMRUL1",130,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMRUL1",131,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMRUL1",132,0)
 S TEMP=$NA(@REF)
"RTN","PXRMRUL1",133,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMRUL1",134,0)
 S REF=$Q(@REF)
"RTN","PXRMRUL1",135,0)
 I REF'[ROOT Q
"RTN","PXRMRUL1",136,0)
 S DONE=0
"RTN","PXRMRUL1",137,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMRUL1",138,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMRUL1",139,0)
 . S LEN=$L(REF)-1
"RTN","PXRMRUL1",140,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMRUL1",141,0)
 . S DATA(TNAME_IND)=@REF
"RTN","PXRMRUL1",142,0)
 . S REF=$Q(@REF)
"RTN","PXRMRUL1",143,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMRUL1",144,0)
 I $D(DATA) M ^TMP($J,FROUT,DFN,"DATA")=DATA
"RTN","PXRMRUL1",145,0)
 Q
"RTN","PXRMRUL1",146,0)
 ;
"RTN","PXRMRUL1",147,0)
INST(DFN) ;Get the PCMM Institution.
"RTN","PXRMRUL1",148,0)
 N DATE,INST
"RTN","PXRMRUL1",149,0)
 ;Check PCMM
"RTN","PXRMRUL1",150,0)
 S DATE=$S($G(PXRMDATE)'="":$P(PXRMDATE,"."),1:DT)
"RTN","PXRMRUL1",151,0)
 ;DBIA #1916
"RTN","PXRMRUL1",152,0)
 S INST=$P($$INSTPCTM^SCAPMC(DFN,DATE),U,3,4)
"RTN","PXRMRUL1",153,0)
 Q INST
"RTN","PXRMRUL1",154,0)
 ;
"RTN","PXRMRUL1",155,0)
LOCK L +^PXRMXP(810.5,LIST):DILOCKTM
"RTN","PXRMRUL1",156,0)
 E  W !!?5,"Another user is using this patient list" S DUOUT=1
"RTN","PXRMRUL1",157,0)
 Q
"RTN","PXRMRUL1",158,0)
 ;
"RTN","PXRMRUL1",159,0)
LOGOP(LIST1,LIST2,LOGOP) ;Given LIST1 and LIST2 apply the logical
"RTN","PXRMRUL1",160,0)
 ;operator LOGOP to generate a new list and return it in LIST1
"RTN","PXRMRUL1",161,0)
 N DFN1,DFN2
"RTN","PXRMRUL1",162,0)
 I LOGOP="&" D  Q
"RTN","PXRMRUL1",163,0)
 . S DFN1=""
"RTN","PXRMRUL1",164,0)
 . F  S DFN1=$O(^TMP($J,LIST1,DFN1)) Q:DFN1=""  D
"RTN","PXRMRUL1",165,0)
 .. I $D(^TMP($J,LIST2,DFN1)) M ^TMP($J,LIST1,DFN1)=^TMP($J,LIST2,DFN1) Q
"RTN","PXRMRUL1",166,0)
 .. K ^TMP($J,LIST1,DFN1)
"RTN","PXRMRUL1",167,0)
 ;
"RTN","PXRMRUL1",168,0)
 ;"~" represents "&'".
"RTN","PXRMRUL1",169,0)
 I LOGOP="~" D  Q
"RTN","PXRMRUL1",170,0)
 . S DFN1=""
"RTN","PXRMRUL1",171,0)
 . F  S DFN1=$O(^TMP($J,LIST1,DFN1)) Q:DFN1=""  D
"RTN","PXRMRUL1",172,0)
 .. I $D(^TMP($J,LIST2,DFN1)) K ^TMP($J,LIST1,DFN1)
"RTN","PXRMRUL1",173,0)
 ;
"RTN","PXRMRUL1",174,0)
 I LOGOP="!" D
"RTN","PXRMRUL1",175,0)
 . S DFN2=""
"RTN","PXRMRUL1",176,0)
 . F  S DFN2=$O(^TMP($J,LIST2,DFN2)) Q:DFN2=""  D
"RTN","PXRMRUL1",177,0)
 .. M ^TMP($J,LIST1,DFN2)=^TMP($J,LIST2,DFN2)
"RTN","PXRMRUL1",178,0)
 Q
"RTN","PXRMRUL1",179,0)
 ;
"RTN","PXRMRUL1",180,0)
REM(FRACT,RIEN,LBBDT,LBEDT,RSTART,RSTOP,PNODE) ;Process reminder finding rule
"RTN","PXRMRUL1",181,0)
 N DEFFARR,PXRMDATE
"RTN","PXRMRUL1",182,0)
 D DEF^PXRMLDR(RIEN,.DEFARR)
"RTN","PXRMRUL1",183,0)
 D DATES(LBBDT,LBEDT,RSTART,RSTOP,.DEFARR)
"RTN","PXRMRUL1",184,0)
 S PXRMDATE=RSTOP
"RTN","PXRMRUL1",185,0)
 D BLDPLST^PXRMPLST(.DEFARR,PNODE,1)
"RTN","PXRMRUL1",186,0)
 ;Remove, Select or Add Findings operations
"RTN","PXRMRUL1",187,0)
 I FRACT="A" D LOGOP(FROUT,PNODE,"!") Q
"RTN","PXRMRUL1",188,0)
 I FRACT="D" D LOGOP(FROUT,PNODE,"~") Q
"RTN","PXRMRUL1",189,0)
 I FRACT="S" D LOGOP(FROUT,PNODE,"&") Q
"RTN","PXRMRUL1",190,0)
 Q
"RTN","PXRMRUL1",191,0)
 ;
"RTN","PXRMRUL1",192,0)
TERM(FRACT,FRTIEN,LBBDT,LBEDT,RSTART,RSTOP,PNODE,INST) ;Process TERM finding
"RTN","PXRMRUL1",193,0)
 ;rules
"RTN","PXRMRUL1",194,0)
 N FINDPA,FINDING,FNAME,PLIST,PXRMDATE,PXRMDEBG
"RTN","PXRMRUL1",195,0)
 N TERMARR,TFIEV,TNAME
"RTN","PXRMRUL1",196,0)
 ;Get term definition array
"RTN","PXRMRUL1",197,0)
 D TERM^PXRMLDR(FRTIEN,.TERMARR)
"RTN","PXRMRUL1",198,0)
 S TNAME=$P(TERMARR(0),U,1)
"RTN","PXRMRUL1",199,0)
 S INST=$S(FRACT'="F":0,TNAME="VA-PCMM INSTITUTION":1,TNAME="VA-IHD STATION CODE":1,1:0)
"RTN","PXRMRUL1",200,0)
 ;Set begin and end dates in the term.
"RTN","PXRMRUL1",201,0)
 D DATES(LBBDT,LBEDT,RSTART,RSTOP,.TERMARR)
"RTN","PXRMRUL1",202,0)
 S $P(FINDPA(0),U,8)=RSTART,$P(FINDPA(0),U,11)=RSTOP,PXRMDATE=RSTOP
"RTN","PXRMRUL1",203,0)
 ;
"RTN","PXRMRUL1",204,0)
 ;Add operation
"RTN","PXRMRUL1",205,0)
 I FRACT="A" D  Q
"RTN","PXRMRUL1",206,0)
 .;Process term for date range
"RTN","PXRMRUL1",207,0)
 .D EVALPL^PXRMTERL(.FINDPA,.TERMARR,PNODE)
"RTN","PXRMRUL1",208,0)
 .;Merge lists if operation is add
"RTN","PXRMRUL1",209,0)
 .M ^TMP($J,FROUT)=^TMP($J,PNODE,1)
"RTN","PXRMRUL1",210,0)
 ;Remove, Select or Insert Findings operations
"RTN","PXRMRUL1",211,0)
 I FRACT="F" S PXRMDEBG=1
"RTN","PXRMRUL1",212,0)
 S DFN=0
"RTN","PXRMRUL1",213,0)
 F  S DFN=$O(^TMP($J,FROUT,DFN)) Q:'DFN  D
"RTN","PXRMRUL1",214,0)
 .I INST S ^TMP($J,FROUT,DFN,"INST")=$$INST(DFN) Q
"RTN","PXRMRUL1",215,0)
 .;Evaluate term
"RTN","PXRMRUL1",216,0)
 .K TFIEV D IEVALTER^PXRMTERM(DFN,.FINDPA,.TERMARR,1,.TFIEV)
"RTN","PXRMRUL1",217,0)
 .;Delete any ^TMP patient in PLIST if action is remove
"RTN","PXRMRUL1",218,0)
 .I FRACT="R",TFIEV(1) K ^TMP($J,FROUT,DFN) Q
"RTN","PXRMRUL1",219,0)
 .;Delete any ^TMP patient not in PLIST if action is select
"RTN","PXRMRUL1",220,0)
 .I FRACT="S",'TFIEV(1) K ^TMP($J,FROUT,DFN) Q
"RTN","PXRMRUL1",221,0)
 .I FRACT="F",TFIEV(1) D
"RTN","PXRMRUL1",222,0)
 .. S FINDING=TFIEV(1,"FINDING")
"RTN","PXRMRUL1",223,0)
 .. I '$D(FNAME(FINDING)) S FNAME(FINDING)=$$GETFNAME^PXRMDATA(FINDING)
"RTN","PXRMRUL1",224,0)
 .. S TFIEV(1,"CSUB","FINDING NAME")=FNAME(FINDING)
"RTN","PXRMRUL1",225,0)
 .. D INSERT(FROUT,DFN,TNAME,.TFIEV,RSTOP)
"RTN","PXRMRUL1",226,0)
 Q
"RTN","PXRMRUL1",227,0)
 ;
"RTN","PXRMRUL1",228,0)
UNLOCK L -^PXRMXP(810.5,LIST) Q
"RTN","PXRMRUL1",229,0)
 ;
"RTN","PXRMSCR")
0^52^B126404
"RTN","PXRMSCR",1,0)
PXRMSCR ;SLC/PKR - Screens for Clinical Reminders. ;05/01/2014
"RTN","PXRMSCR",2,0)
 ;;2.0;CLINICAL REMINDERS;**24,26**;Feb 04, 2005;Build 404
"RTN","PXRMSCR",3,0)
 ;============================================
"RTN","PXRMSCR",4,0)
WHFSCR(NODE,PIECE) ;Whole file screen based on Class.
"RTN","PXRMSCR",5,0)
 ;Prevent direct FileMan editing of national entries.
"RTN","PXRMSCR",6,0)
 I $G(PXRMNSCR)=1 Q 1
"RTN","PXRMSCR",7,0)
 I '$D(DIE) Q 1
"RTN","PXRMSCR",8,0)
 I $G(DIC)'=DIE Q 1
"RTN","PXRMSCR",9,0)
 ;Do not allow selection of entries whose Class is National.
"RTN","PXRMSCR",10,0)
 I $P($G(^(NODE)),U,PIECE)="N" Q 0
"RTN","PXRMSCR",11,0)
 Q 1
"RTN","PXRMSCR",12,0)
 ;
"RTN","PXRMSEL")
0^38^B75136649
"RTN","PXRMSEL",1,0)
PXRMSEL ; SLC/PJH - PXRM Selection ;09/07/2012
"RTN","PXRMSEL",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMSEL",3,0)
 ;
"RTN","PXRMSEL",4,0)
 ;Selection screen for all dialog files
"RTN","PXRMSEL",5,0)
 ;
"RTN","PXRMSEL",6,0)
START(HEADER,PXRMGTYP,PXRMNAM) ;
"RTN","PXRMSEL",7,0)
 N PXRMREAD,PXRMSHD,PXRMSRC,PXRMVARM
"RTN","PXRMSEL",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMSEL",9,0)
 S X="IORESET"
"RTN","PXRMSEL",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM SELECTION")
"RTN","PXRMSEL",11,0)
 W IORESET
"RTN","PXRMSEL",12,0)
 D KILL^%ZISS
"RTN","PXRMSEL",13,0)
 Q
"RTN","PXRMSEL",14,0)
 ;
"RTN","PXRMSEL",15,0)
 ;Labels called from list 'PXRM SELECTION'
"RTN","PXRMSEL",16,0)
 ;
"RTN","PXRMSEL",17,0)
 ;Add new entry
"RTN","PXRMSEL",18,0)
ADD ;
"RTN","PXRMSEL",19,0)
 N ANS,ARRAY,ARRAYN,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",20,0)
 ;Health factor resolutions
"RTN","PXRMSEL",21,0)
 I PXRMGTYP="SHFR" D  Q:$D(DTOUT)!$D(DUOUT)  Q:ANS="A"
"RTN","PXRMSEL",22,0)
 .D ^PXRMSEL2 S:$D(DUOUT) VALMBCK="R"
"RTN","PXRMSEL",23,0)
 ;Add entry
"RTN","PXRMSEL",24,0)
 D ADD^PXRMGEDT(PXRMGTYP),INIT
"RTN","PXRMSEL",25,0)
 Q
"RTN","PXRMSEL",26,0)
 ;
"RTN","PXRMSEL",27,0)
 ;Copy any dialog
"RTN","PXRMSEL",28,0)
COPY D ANY^PXRMDCPY
"RTN","PXRMSEL",29,0)
 D:PXRMGTYP="DLGE" INIT
"RTN","PXRMSEL",30,0)
 Q
"RTN","PXRMSEL",31,0)
 ;
"RTN","PXRMSEL",32,0)
 ;Copy selected reminder dialog
"RTN","PXRMSEL",33,0)
COPYS N DIC,DUOUT,DTOUT,DIROUT,DIRUT,X,Y
"RTN","PXRMSEL",34,0)
 D SEL^PXRMDCPY(PXRMDIEN,"")
"RTN","PXRMSEL",35,0)
 Q
"RTN","PXRMSEL",36,0)
 ;
"RTN","PXRMSEL",37,0)
 ;Change dialog view
"RTN","PXRMSEL",38,0)
CHNG K PXRMBG D SEL^PXRMSEL2(.PXRMDTYP),INIT
"RTN","PXRMSEL",39,0)
 Q
"RTN","PXRMSEL",40,0)
 ;
"RTN","PXRMSEL",41,0)
 ;Change reminder view
"RTN","PXRMSEL",42,0)
CHNGR(VIEW) ;
"RTN","PXRMSEL",43,0)
 S $E(PXRMVIEW)=VIEW K PXRMBG
"RTN","PXRMSEL",44,0)
 D INIT
"RTN","PXRMSEL",45,0)
 Q
"RTN","PXRMSEL",46,0)
 ;
"RTN","PXRMSEL",47,0)
 ;Toggle view name/print name 
"RTN","PXRMSEL",48,0)
CHNGV N VIEW
"RTN","PXRMSEL",49,0)
 S VIEW=$E(PXRMVIEW,2)
"RTN","PXRMSEL",50,0)
 I VIEW="P" S $E(PXRMVIEW,2)="N"
"RTN","PXRMSEL",51,0)
 I VIEW="N" S $E(PXRMVIEW,2)="P"
"RTN","PXRMSEL",52,0)
 D INIT
"RTN","PXRMSEL",53,0)
 Q
"RTN","PXRMSEL",54,0)
 ;
"RTN","PXRMSEL",55,0)
 ;Change between dialog view and reminder view
"RTN","PXRMSEL",56,0)
DIDL(VIEW) ;
"RTN","PXRMSEL",57,0)
 K PXRMBG S PXRMGTYP=VIEW
"RTN","PXRMSEL",58,0)
 D INIT
"RTN","PXRMSEL",59,0)
 Q
"RTN","PXRMSEL",60,0)
 ;
"RTN","PXRMSEL",61,0)
EXIT ;Exit code
"RTN","PXRMSEL",62,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMSEL",63,0)
 S VALMBCK="Q"
"RTN","PXRMSEL",64,0)
 K ^TMP("PXRMSEL",$J)
"RTN","PXRMSEL",65,0)
 Q
"RTN","PXRMSEL",66,0)
 ;
"RTN","PXRMSEL",67,0)
HDR ; Header code
"RTN","PXRMSEL",68,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",69,0)
 ;Non-Dialog options
"RTN","PXRMSEL",70,0)
 I PXRMGTYP'["DLG" S VALMHDR(1)=HEADER Q
"RTN","PXRMSEL",71,0)
 ;Dialog Options
"RTN","PXRMSEL",72,0)
 S VALM("TITLE")=PXRMHD,VALMHDR(1)=PXRMSHD
"RTN","PXRMSEL",73,0)
 Q
"RTN","PXRMSEL",74,0)
 ;
"RTN","PXRMSEL",75,0)
HELP ;Help code
"RTN","PXRMSEL",76,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG=PXRMGTYP
"RTN","PXRMSEL",77,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMSEL",78,0)
 S VALMBCK="R"
"RTN","PXRMSEL",79,0)
 Q
"RTN","PXRMSEL",80,0)
 ;
"RTN","PXRMSEL",81,0)
INIT ;Init
"RTN","PXRMSEL",82,0)
 D CLEAN^VALM10
"RTN","PXRMSEL",83,0)
 S VALMCNT=0
"RTN","PXRMSEL",84,0)
 D BUILD
"RTN","PXRMSEL",85,0)
 D XQORM
"RTN","PXRMSEL",86,0)
 ;
"RTN","PXRMSEL",87,0)
 ;Set header and title for dialog options
"RTN","PXRMSEL",88,0)
 I PXRMGTYP["DLG" D
"RTN","PXRMSEL",89,0)
 .S PXRMHD="Dialog List",PXRMSHD="DIALOG VIEW ("
"RTN","PXRMSEL",90,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",91,0)
 ..I PXRMDTYP="E" S PXRMSHD=PXRMSHD_"DIALOG ELEMENTS)"
"RTN","PXRMSEL",92,0)
 ..I PXRMDTYP="F" S PXRMSHD=PXRMSHD_"FORCED VALUES)"
"RTN","PXRMSEL",93,0)
 ..I PXRMDTYP="G" S PXRMSHD=PXRMSHD_"DIALOG GROUPS)"
"RTN","PXRMSEL",94,0)
 ..I PXRMDTYP="P" S PXRMSHD=PXRMSHD_"ADDITIONAL PROMPTS)"
"RTN","PXRMSEL",95,0)
 ..I PXRMDTYP="S" S PXRMSHD=PXRMSHD_"RESULT GROUPS)"
"RTN","PXRMSEL",96,0)
 ..I PXRMDTYP="T" S PXRMSHD=PXRMSHD_"RESULT ELEMENT)"
"RTN","PXRMSEL",97,0)
 .I PXRMGTYP="DLG" D
"RTN","PXRMSEL",98,0)
 ..S PXRMSHD=PXRMSHD_"REMINDER DIALOGS - "
"RTN","PXRMSEL",99,0)
 ..I $E(PXRMVIEW,2)="N" S PXRMSHD=PXRMSHD_"SOURCE REMINDER NAME)"
"RTN","PXRMSEL",100,0)
 ..I $E(PXRMVIEW,2)="P" S PXRMSHD=PXRMSHD_"SOURCE REMINDER PRINT NAME)"
"RTN","PXRMSEL",101,0)
 .I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",102,0)
 ..S PXRMSHD="REMINDER VIEW ("
"RTN","PXRMSEL",103,0)
 ..I PXRMVIEW="AN" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY NAME)"
"RTN","PXRMSEL",104,0)
 ..I PXRMVIEW="AP" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",105,0)
 ..I PXRMVIEW="LN" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY NAME)"
"RTN","PXRMSEL",106,0)
 ..I PXRMVIEW="LP" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",107,0)
 .;Restore original place
"RTN","PXRMSEL",108,0)
 .S:$G(PXRMBG) VALMBG=PXRMBG
"RTN","PXRMSEL",109,0)
 .S VALMHDR(1)=PXRMSHD,VALM("TITLE")=PXRMHD
"RTN","PXRMSEL",110,0)
 ;
"RTN","PXRMSEL",111,0)
 S VALMBCK="R"
"RTN","PXRMSEL",112,0)
 Q
"RTN","PXRMSEL",113,0)
 ;
"RTN","PXRMSEL",114,0)
 ;
"RTN","PXRMSEL",115,0)
BUILD ;Build selection list
"RTN","PXRMSEL",116,0)
 ;
"RTN","PXRMSEL",117,0)
 D ^PXRMSEL1
"RTN","PXRMSEL",118,0)
 Q
"RTN","PXRMSEL",119,0)
 ;
"RTN","PXRMSEL",120,0)
LIST ;List All option
"RTN","PXRMSEL",121,0)
 W IORESET
"RTN","PXRMSEL",122,0)
 I PXRMGTYP["DLG" D ALL^PXRMDLST
"RTN","PXRMSEL",123,0)
 ;I PXRMGTYP="DTAX" D ALL^PXRMTDLG
"RTN","PXRMSEL",124,0)
 I PXRMGTYP="FIP" D ALL^PXRMFIP
"RTN","PXRMSEL",125,0)
 I PXRMGTYP="FPAR" D ALL^PXRMFLST
"RTN","PXRMSEL",126,0)
 I PXRMGTYP="RCAT" D ALL^PXRMCLST
"RTN","PXRMSEL",127,0)
 I PXRMGTYP="RESN" D ALL^PXRMSLST
"RTN","PXRMSEL",128,0)
 I PXRMGTYP="SHFR" D ALL^PXRMSHF
"RTN","PXRMSEL",129,0)
 ;
"RTN","PXRMSEL",130,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PXRMSEL",131,0)
 ; 
"RTN","PXRMSEL",132,0)
 D XQORM
"RTN","PXRMSEL",133,0)
 S VALMBCK="R"
"RTN","PXRMSEL",134,0)
 Q
"RTN","PXRMSEL",135,0)
 ;
"RTN","PXRMSEL",136,0)
PEXIT ;PXRM SELECTION MENU protocol exit code
"RTN","PXRMSEL",137,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",138,0)
 ;Reset after page up/down etc
"RTN","PXRMSEL",139,0)
 D XQORM
"RTN","PXRMSEL",140,0)
 Q
"RTN","PXRMSEL",141,0)
 ;
"RTN","PXRMSEL",142,0)
SEL ;PXRM SELECT ITEM validation
"RTN","PXRMSEL",143,0)
 N ERR,IEN,SEL
"RTN","PXRMSEL",144,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMSEL",145,0)
 ;Invalid selection
"RTN","PXRMSEL",146,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMSEL",147,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMSEL",148,0)
 .S VALMBCK="R"
"RTN","PXRMSEL",149,0)
 ;Valid selection
"RTN","PXRMSEL",150,0)
 S IEN=$O(@VALMAR@("IDX",SEL,"")) Q:'IEN
"RTN","PXRMSEL",151,0)
 S VALMBCK="Q",@PXRMNAM=IEN
"RTN","PXRMSEL",152,0)
 ;Save place - reminder link only
"RTN","PXRMSEL",153,0)
 I PXRMGTYP["DLG" S PXRMBG=VALMBG
"RTN","PXRMSEL",154,0)
 Q
"RTN","PXRMSEL",155,0)
 ;
"RTN","PXRMSEL",156,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECTION ITEM",0))_U_"1:"_VALMCNT
"RTN","PXRMSEL",157,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMSEL",158,0)
 ;For finding type parameters dissallow add option
"RTN","PXRMSEL",159,0)
 I ((PXRMGTYP="FPAR")&(+$G(PXRMINST)=0))!(PXRMGTYP="DTAX") D
"RTN","PXRMSEL",160,0)
 .N FMENU
"RTN","PXRMSEL",161,0)
 .S FMENU=$O(^ORD(101,"B","PXRM FINDING SELECTION MENU",0))_";ORD(101,"
"RTN","PXRMSEL",162,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",163,0)
 ;For dialog edit allow extra options
"RTN","PXRMSEL",164,0)
 I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",165,0)
 .N FMENU
"RTN","PXRMSEL",166,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLGE)",0))_";ORD(101,"
"RTN","PXRMSEL",167,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",168,0)
 ;For reminder dialog edit allow change view
"RTN","PXRMSEL",169,0)
 I PXRMGTYP="DLG" D
"RTN","PXRMSEL",170,0)
 .N FMENU
"RTN","PXRMSEL",171,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLG)",0))_";ORD(101,"
"RTN","PXRMSEL",172,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",173,0)
 ;Reminder to dialog link
"RTN","PXRMSEL",174,0)
 I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",175,0)
 .N FMENU
"RTN","PXRMSEL",176,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG/REMINDER MENU",0))_";ORD(101,"
"RTN","PXRMSEL",177,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",178,0)
 Q
"RTN","PXRMSEL",179,0)
 ;
"RTN","PXRMSEL",180,0)
 ;Select single HF or all HF's for the reminder
"RTN","PXRMSEL",181,0)
 ;---------------------------------------------
"RTN","PXRMSEL",182,0)
ZOPT(TYPE) ;
"RTN","PXRMSEL",183,0)
 N X,Y
"RTN","PXRMSEL",184,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",185,0)
 S DIR(0)="S"_U_"I:Individual Health Factor;"
"RTN","PXRMSEL",186,0)
 S DIR(0)=DIR(0)_"A:All Health Factors for a Selected Reminder;"
"RTN","PXRMSEL",187,0)
 S DIR("A")="SELECTION OPTION"
"RTN","PXRMSEL",188,0)
 S DIR("B")="I"
"RTN","PXRMSEL",189,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMSEL",190,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(1)"
"RTN","PXRMSEL",191,0)
 D ^DIR K DIR
"RTN","PXRMSEL",192,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",193,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",194,0)
 S TYPE=Y
"RTN","PXRMSEL",195,0)
 Q
"RTN","PXRMSEL",196,0)
 ;
"RTN","PXRMSEL",197,0)
 ;Reminder selection
"RTN","PXRMSEL",198,0)
 ;------------------
"RTN","PXRMSEL",199,0)
ZREM(ARRAY) ;
"RTN","PXRMSEL",200,0)
 N X,Y,CNT,FSUB,FHF,FIND,FNAM,FOUND,REM
"RTN","PXRMSEL",201,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",202,0)
 S FOUND=0
"RTN","PXRMSEL",203,0)
 W !
"RTN","PXRMSEL",204,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:FOUND
"RTN","PXRMSEL",205,0)
 .S DIC=811.9,DIC(0)="AEMQZ"
"RTN","PXRMSEL",206,0)
 .D ^DIC K DIC S:X=(U_U) DTOUT=1 Q:$D(DTOUT)!$D(DUOUT)!(+Y=-1)
"RTN","PXRMSEL",207,0)
 .;Reminder ien
"RTN","PXRMSEL",208,0)
 .S REM=$P(Y,U) Q:'REM
"RTN","PXRMSEL",209,0)
 .;Get health factor findings on this reminder
"RTN","PXRMSEL",210,0)
 .S FSUB=0
"RTN","PXRMSEL",211,0)
 .F  S FSUB=$O(^PXD(811.9,REM,20,FSUB)) Q:'FSUB  D
"RTN","PXRMSEL",212,0)
 ..S FIND=$P($G(^PXD(811.9,REM,20,FSUB,0)),U)
"RTN","PXRMSEL",213,0)
 ..Q:$P(FIND,";",2)'="AUTTHF("
"RTN","PXRMSEL",214,0)
 ..S FHF=$P(FIND,";") Q:'FHF
"RTN","PXRMSEL",215,0)
 ..S FNAM=$P($G(^AUTTHF(FHF,0)),U) Q:FNAM=""
"RTN","PXRMSEL",216,0)
 ..;Save array used by PXRMGEDT
"RTN","PXRMSEL",217,0)
 ..S FOUND=FOUND+1
"RTN","PXRMSEL",218,0)
 ..S ARRAY(FNAM)=FHF,ARRAYN(FHF)=""
"RTN","PXRMSEL",219,0)
 .I 'FOUND W !!,"No health factor findings on this reminder",! Q
"RTN","PXRMSEL",220,0)
 .S FNAM=""
"RTN","PXRMSEL",221,0)
 .W !!,"HEALTH FACTORS:",!
"RTN","PXRMSEL",222,0)
 .F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D
"RTN","PXRMSEL",223,0)
 ..S FHF=$P(ARRAY(FNAM),U)
"RTN","PXRMSEL",224,0)
 ..W !,FNAM W:$D(^PXRMD(801.95,FHF,0)) " (Resolution defined)"
"RTN","PXRMSEL",225,0)
 .W !
"RTN","PXRMSEL",226,0)
 Q
"RTN","PXRMSEL",227,0)
 ;
"RTN","PXRMSEL",228,0)
 ;Reminders Health Factors
"RTN","PXRMSEL",229,0)
 ;------------------------
"RTN","PXRMSEL",230,0)
ZSKIP N ANS,FNAM,FHF,EXISTS,TEXT
"RTN","PXRMSEL",231,0)
 S FNAM=""
"RTN","PXRMSEL",232,0)
 F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMSEL",233,0)
 .S FHF=ARRAY(FNAM),EXISTS=$D(^PXRMD(801.95,FHF,0))
"RTN","PXRMSEL",234,0)
 .I 'EXISTS S TEXT="ADD resolution status for "_FNAM_": "
"RTN","PXRMSEL",235,0)
 .I EXISTS S TEXT="MODIFY resolution status for "_FNAM_": "
"RTN","PXRMSEL",236,0)
 .;Option to ADD/MODIFY
"RTN","PXRMSEL",237,0)
 .D ZASK(.ANS,TEXT) Q:$D(DTOUT)!$D(DUOUT)  Q:(ANS'="Y")
"RTN","PXRMSEL",238,0)
 .;Force entry of HF into 801.95
"RTN","PXRMSEL",239,0)
 .I 'EXISTS D
"RTN","PXRMSEL",240,0)
 ..N DA,DIC,DIK,DR
"RTN","PXRMSEL",241,0)
 ..;Store the unique name
"RTN","PXRMSEL",242,0)
 ..S DR=".01///"_FNAM,DIE="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",243,0)
 ..D ^DIE
"RTN","PXRMSEL",244,0)
 ..;Reindex the cross-references.
"RTN","PXRMSEL",245,0)
 ..S DIK="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",246,0)
 ..D IX^DIK
"RTN","PXRMSEL",247,0)
 .;Edit
"RTN","PXRMSEL",248,0)
 .D EDIT^PXRMGEDT(PXRMGTYP,FHF,1)
"RTN","PXRMSEL",249,0)
 Q
"RTN","PXRMSEL",250,0)
 ;
"RTN","PXRMSEL",251,0)
 ;Ask ADD/MODIFY or not
"RTN","PXRMSEL",252,0)
 ;---------------------
"RTN","PXRMSEL",253,0)
ZASK(YESNO,TEXT) ;
"RTN","PXRMSEL",254,0)
 N X,Y,DIR
"RTN","PXRMSEL",255,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",256,0)
 S DIR(0)="YA0"
"RTN","PXRMSEL",257,0)
 S DIR("A")=TEXT
"RTN","PXRMSEL",258,0)
 S DIR("B")="N"
"RTN","PXRMSEL",259,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMSEL",260,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(2)"
"RTN","PXRMSEL",261,0)
 D ^DIR K DIR
"RTN","PXRMSEL",262,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",263,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",264,0)
 S YESNO=$E(Y(0))
"RTN","PXRMSEL",265,0)
 Q
"RTN","PXRMSEL",266,0)
 ;
"RTN","PXRMSEL",267,0)
 ;General help text routine.
"RTN","PXRMSEL",268,0)
 ;--------------------------
"RTN","PXRMSEL",269,0)
ZHELP(CALL) ;
"RTN","PXRMSEL",270,0)
 N HTEXT
"RTN","PXRMSEL",271,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMSEL",272,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMSEL",273,0)
 ;
"RTN","PXRMSEL",274,0)
 I CALL=1 D
"RTN","PXRMSEL",275,0)
 .S HTEXT(1)="Enter I to select an individual health factor. Enter A to"
"RTN","PXRMSEL",276,0)
 .S HTEXT(2)="process all health factor findings on a selected reminder."
"RTN","PXRMSEL",277,0)
 I CALL=2 D
"RTN","PXRMSEL",278,0)
 .S HTEXT(1)="Enter Yes to enter resolution status for this health"
"RTN","PXRMSEL",279,0)
 .S HTEXT(2)="factor. Enter No to continue to the next health factor."
"RTN","PXRMSEL",280,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",281,0)
 S IC=""
"RTN","PXRMSEL",282,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMSEL",283,0)
 . S X=HTEXT(IC)
"RTN","PXRMSEL",284,0)
 . D ^DIWP
"RTN","PXRMSEL",285,0)
 W !
"RTN","PXRMSEL",286,0)
 S IC=0
"RTN","PXRMSEL",287,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMSEL",288,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMSEL",289,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",290,0)
 W !
"RTN","PXRMSEL",291,0)
 Q
"RTN","PXRMSINQ")
0^8^B22958302
"RTN","PXRMSINQ",1,0)
PXRMSINQ ;SLC/PKR - Reminder simple inquiry routines ;03/14/2013
"RTN","PXRMSINQ",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMSINQ",3,0)
 ;===================================
"RTN","PXRMSINQ",4,0)
BROWSE(FILENUM,FLDLIST,IEN) ;Display the details of an entry using the
"RTN","PXRMSINQ",5,0)
 ;FileMan Browser.
"RTN","PXRMSINQ",6,0)
 I '$$FIND1^DIC(FILENUM,"","AQU",IEN) Q
"RTN","PXRMSINQ",7,0)
 N BOP,NL,OUTPUT,TITLE,X
"RTN","PXRMSINQ",8,0)
 D GETTEXT(FILENUM,FLDLIST,IEN,.NL,.OUTPUT)
"RTN","PXRMSINQ",9,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMSINQ",10,0)
 I BOP="B" D
"RTN","PXRMSINQ",11,0)
 . S X="IORESET"
"RTN","PXRMSINQ",12,0)
 . D ENDR^%ZISS
"RTN","PXRMSINQ",13,0)
 . S TITLE=$$GET1^DID(FILENUM,"","","NAME")_" INQUIRY for IEN="_IEN
"RTN","PXRMSINQ",14,0)
 . D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMSINQ",15,0)
 . W IORESET
"RTN","PXRMSINQ",16,0)
 . D KILL^%ZISS
"RTN","PXRMSINQ",17,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMSINQ",18,0)
 Q
"RTN","PXRMSINQ",19,0)
 ;
"RTN","PXRMSINQ",20,0)
 ;===================================
"RTN","PXRMSINQ",21,0)
CLBROWSE(FILENUM,FLDLIST,IEN) ;Display the details of an entry's Change
"RTN","PXRMSINQ",22,0)
 ;Log using the FileMan Browser.
"RTN","PXRMSINQ",23,0)
 I '$$FIND1^DIC(FILENUM,"","AQU",IEN) Q
"RTN","PXRMSINQ",24,0)
 N BOP,NL,OUTPUT,TITLE,X
"RTN","PXRMSINQ",25,0)
 D GETEH(FILENUM,FLDLIST,IEN,.NL,.OUTPUT)
"RTN","PXRMSINQ",26,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMSINQ",27,0)
 I BOP="B" D
"RTN","PXRMSINQ",28,0)
 . S X="IORESET"
"RTN","PXRMSINQ",29,0)
 . D ENDR^%ZISS
"RTN","PXRMSINQ",30,0)
 . S TITLE=$$GET1^DID(FILENUM,"","","NAME")_" Change Log for IEN="_IEN
"RTN","PXRMSINQ",31,0)
 . D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMSINQ",32,0)
 . W IORESET
"RTN","PXRMSINQ",33,0)
 . D KILL^%ZISS
"RTN","PXRMSINQ",34,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMSINQ",35,0)
 Q
"RTN","PXRMSINQ",36,0)
 ;
"RTN","PXRMSINQ",37,0)
 ;===================================
"RTN","PXRMSINQ",38,0)
GETEH(FILENUM,FLDLST,IEN,NL,OUTPUT) ;Get the edit history.
"RTN","PXRMSINQ",39,0)
 N IND,NLINES,TEXT
"RTN","PXRMSINQ",40,0)
 D GETTEXT(FILENUM,FLDLST,IEN,.NLINES,.TEXT)
"RTN","PXRMSINQ",41,0)
 I '$D(TEXT) S OUTPUT(1)="No edits have been made." Q
"RTN","PXRMSINQ",42,0)
 S NL=0
"RTN","PXRMSINQ",43,0)
 F IND=2:1:NLINES  D
"RTN","PXRMSINQ",44,0)
 . I TEXT(IND)["Edit Date:" D  Q
"RTN","PXRMSINQ",45,0)
 .. I NL>0 S NL=NL+1,OUTPUT(NL)=" "
"RTN","PXRMSINQ",46,0)
 .. S NL=NL+1,OUTPUT(NL)=TEXT(IND+1)_" on"_$P(TEXT(IND),"Edit Date:",2)
"RTN","PXRMSINQ",47,0)
 .. S IND=IND+1
"RTN","PXRMSINQ",48,0)
 . I TEXT(IND)["Edit Comments" Q
"RTN","PXRMSINQ",49,0)
 . S NL=NL+1,OUTPUT(NL)=TEXT(IND)
"RTN","PXRMSINQ",50,0)
 Q
"RTN","PXRMSINQ",51,0)
 ;
"RTN","PXRMSINQ",52,0)
 ;===================================
"RTN","PXRMSINQ",53,0)
GETTEXT(FILENUM,FLDLIST,IEN,NL,OUTPUT) ;Get the requested contents of an entry.
"RTN","PXRMSINQ",54,0)
 ;FILENUM - file number
"RTN","PXRMSINQ",55,0)
 ;IEN - internal entry number
"RTN","PXRMSINQ",56,0)
 ;OUTPUT - array where text is returned.
"RTN","PXRMSINQ",57,0)
 ;FLDLIST - a semicolon separated list of fields to include in the
"RTN","PXRMSINQ",58,0)
 ;output. A piece can be a single field number, a range of fields
"RTN","PXRMSINQ",59,0)
 ;in the form FM:FN, or a multiple in the form FN*. Each piece will
"RTN","PXRMSINQ",60,0)
 ;be preceeded by a blank line. Example: ".01;10;15*;100:102"
"RTN","PXRMSINQ",61,0)
 ;This will get the .01, a blank line and field 10, a blank line
"RTN","PXRMSINQ",62,0)
 ;followed by the contents of multiple 15, a blank line followed by
"RTN","PXRMSINQ",63,0)
 ;the contents of fields 100 through 102. 
"RTN","PXRMSINQ",64,0)
 ;text in OUTPUT.
"RTN","PXRMSINQ",65,0)
 N DIQOUT,IENS,IND,INDENT,FIELD,FLABEL,FLDIND,FLDNUM,FNUM,JND
"RTN","PXRMSINQ",66,0)
 N MSG,MULT,NIN,NOUT,TEMP,TEXTIN,TEXTOUT,TITLE,WPF
"RTN","PXRMSINQ",67,0)
 S NL=0
"RTN","PXRMSINQ",68,0)
 F FLDIND=1:1:$L(FLDLIST,";") D
"RTN","PXRMSINQ",69,0)
 . S FLDNUM=$P(FLDLIST,";",FLDIND)
"RTN","PXRMSINQ",70,0)
 . K DIQOUT
"RTN","PXRMSINQ",71,0)
 . D GETS^DIQ(FILENUM,IEN,FLDNUM,"N","DIQOUT","MSG")
"RTN","PXRMSINQ",72,0)
 . I $D(DIQOUT)=0 Q
"RTN","PXRMSINQ",73,0)
 .;Preceed each group of fields with a blank line.
"RTN","PXRMSINQ",74,0)
 . I NL>0 S NL=NL+1,OUTPUT(NL)=" "
"RTN","PXRMSINQ",75,0)
 . S FNUM="",MULT=0
"RTN","PXRMSINQ",76,0)
 . F  S FNUM=$O(DIQOUT(FNUM)) Q:FNUM=""  D
"RTN","PXRMSINQ",77,0)
 .. I FNUM'=FILENUM D
"RTN","PXRMSINQ",78,0)
 ... S MULT=1
"RTN","PXRMSINQ",79,0)
 ...;DBIA #4768
"RTN","PXRMSINQ",80,0)
 ... S TEXTIN=$$TITLE^XLFSTR($O(^DD(FNUM,0,"NM","")))
"RTN","PXRMSINQ",81,0)
 ... D FORMATS^PXRMTEXT(1,80,TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMSINQ",82,0)
 ... F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXRMSINQ",83,0)
 .. S IENS=""
"RTN","PXRMSINQ",84,0)
 .. F  S IENS=$O(DIQOUT(FNUM,IENS)) Q:IENS=""  D
"RTN","PXRMSINQ",85,0)
 ... S FIELD=""
"RTN","PXRMSINQ",86,0)
 ... F  S FIELD=$O(DIQOUT(FNUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXRMSINQ",87,0)
 .... S FLABEL=$$GET1^DID(FNUM,FIELD,"","LABEL")
"RTN","PXRMSINQ",88,0)
 .... S FLABEL=$$TITLE^XLFSTR(FLABEL)
"RTN","PXRMSINQ",89,0)
 ....;Check for a word-processing field.
"RTN","PXRMSINQ",90,0)
 .... S TEMP=DIQOUT(FNUM,IENS,FIELD)
"RTN","PXRMSINQ",91,0)
 .... S WPF=$S(TEMP["DIQOUT":1,1:0)
"RTN","PXRMSINQ",92,0)
 .... I WPF D  Q
"RTN","PXRMSINQ",93,0)
 ..... S NL=NL+1,OUTPUT(NL)=FLABEL_":"
"RTN","PXRMSINQ",94,0)
 ..... S JND=0
"RTN","PXRMSINQ",95,0)
 .....;Do not format word-processing fields so the original is displayed.
"RTN","PXRMSINQ",96,0)
 ..... F  S JND=$O(DIQOUT(FNUM,IENS,FIELD,JND)) Q:JND=""  S NL=NL+1,OUTPUT(NL)=DIQOUT(FNUM,IENS,FIELD,JND)
"RTN","PXRMSINQ",97,0)
 .... S TEXTIN=$$TITLE^XLFSTR(FLABEL)_": "_DIQOUT(FNUM,IENS,FIELD)
"RTN","PXRMSINQ",98,0)
 .... S INDENT=$S(MULT:2,1:1)
"RTN","PXRMSINQ",99,0)
 .... D FORMATS^PXRMTEXT(INDENT,80,TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMSINQ",100,0)
 .... F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXRMSINQ",101,0)
 Q
"RTN","PXRMSINQ",102,0)
 ;
"RTN","PXRMSINQ",103,0)
 ;===================================
"RTN","PXRMSINQ",104,0)
LMBROWSE(FILENUM,FLDLIST,IEN) ;Display the details of an entry using the
"RTN","PXRMSINQ",105,0)
 ;FileMan Browser. For use by a ListManager application.
"RTN","PXRMSINQ",106,0)
 I '$$FIND1^DIC(FILENUM,"","AQU",IEN) Q
"RTN","PXRMSINQ",107,0)
 N BOP,NL,OUTPUT,TITLE
"RTN","PXRMSINQ",108,0)
 D GETTEXT(FILENUM,FLDLIST,IEN,.NL,.OUTPUT)
"RTN","PXRMSINQ",109,0)
 D FULL^VALM1
"RTN","PXRMSINQ",110,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMSINQ",111,0)
 I BOP="B" D
"RTN","PXRMSINQ",112,0)
 . S TITLE=$$GET1^DID(FILENUM,"","","NAME")_" INQUIRY for IEN="_IEN
"RTN","PXRMSINQ",113,0)
 . D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMSINQ",114,0)
 I BOP="P" D
"RTN","PXRMSINQ",115,0)
 . D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMSINQ",116,0)
 . S VALMBCK="R"
"RTN","PXRMSINQ",117,0)
 Q
"RTN","PXRMSINQ",118,0)
 ;
"RTN","PXRMSINQ",119,0)
 ;===================================
"RTN","PXRMSINQ",120,0)
LMCLBROW(FILENUM,FLDLIST,IEN) ;Display the details of an entry's edit history
"RTN","PXRMSINQ",121,0)
 ;using the FileMan Browser. For use by a ListManager application.
"RTN","PXRMSINQ",122,0)
 I '$$FIND1^DIC(FILENUM,"","AQU",IEN) Q
"RTN","PXRMSINQ",123,0)
 N BOP,NL,OUTPUT,TITLE
"RTN","PXRMSINQ",124,0)
 D GETEH(FILENUM,FLDLIST,IEN,.NL,.OUTPUT)
"RTN","PXRMSINQ",125,0)
 D FULL^VALM1
"RTN","PXRMSINQ",126,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMSINQ",127,0)
 I BOP="B" D
"RTN","PXRMSINQ",128,0)
 . S TITLE=$$GET1^DID(FILENUM,"","","NAME")_" Change Log for IEN="_IEN
"RTN","PXRMSINQ",129,0)
 . D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMSINQ",130,0)
 I BOP="P" D
"RTN","PXRMSINQ",131,0)
 . D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMSINQ",132,0)
 . S VALMBCK="R"
"RTN","PXRMSINQ",133,0)
 Q
"RTN","PXRMSINQ",134,0)
 ;
"RTN","PXRMSINQ",135,0)
 ;===================================
"RTN","PXRMSINQ",136,0)
TEST(FILENUM,IEN) ;Test driver.
"RTN","PXRMSINQ",137,0)
 N FLDLIST
"RTN","PXRMSINQ",138,0)
 I FILENUM=801 S FLDLIST=".01;10;15*;20*;30*;100:102"
"RTN","PXRMSINQ",139,0)
 I FILENUM=803 S FLDLIST=".01:15;30*;40*;45*;50*;100:102"
"RTN","PXRMSINQ",140,0)
 I FILENUM=803.2 S FLDLIST=".01:5;20:24;100:102"
"RTN","PXRMSINQ",141,0)
 I FILENUM=810.9 S FLDLIST=".01;1;40.7*;44*;100:102"
"RTN","PXRMSINQ",142,0)
 D BROWSE(FILENUM,FLDLIST,IEN)
"RTN","PXRMSINQ",143,0)
 Q
"RTN","PXRMSINQ",144,0)
 ;
"RTN","PXRMSTA1")
0^53^B67419179
"RTN","PXRMSTA1",1,0)
PXRMSTA1 ; SLC/AGP - Routines for building status list. ;05/08/2014
"RTN","PXRMSTA1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMSTA1",3,0)
 ;
"RTN","PXRMSTA1",4,0)
 ;This routine and PXRMSTA2 allows users to select the
"RTN","PXRMSTA1",5,0)
 ;approriate status for Orders, Medication, Taxonomy, Problem List,
"RTN","PXRMSTA1",6,0)
 ;and Radiology Procedure findings items.
"RTN","PXRMSTA1",7,0)
 ;
"RTN","PXRMSTA1",8,0)
ADD(GBL,FILE,CSTATUS,TYPE,WILD,DA,UPDATE) ;
"RTN","PXRMSTA1",9,0)
 N ANS,STATUS,TERMIEN
"RTN","PXRMSTA1",10,0)
 ;Find what types of finding are in the term
"RTN","PXRMSTA1",11,0)
 I TYPE["PXRMD(811.5," D
"RTN","PXRMSTA1",12,0)
 .S TERMIEN=$P($G(TYPE),";")
"RTN","PXRMSTA1",13,0)
 .S TYPE=$$TERMSTAT(TERMIEN) I TYPE=0 Q
"RTN","PXRMSTA1",14,0)
 .I TYPE["PXD" S TAXTYPE=$$TAXTYPE(TERMIEN,"")
"RTN","PXRMSTA1",15,0)
 I TYPE=0 Q
"RTN","PXRMSTA1",16,0)
 ;Find out what is in the taxonomy
"RTN","PXRMSTA1",17,0)
 I TYPE["PXD(811.2,",$G(TAXTYPE)="" S TAXTYPE=$$TAXNODE($P(TYPE,";"))
"RTN","PXRMSTA1",18,0)
 I TYPE[";" S TYPE=$P($G(TYPE),";",2)
"RTN","PXRMSTA1",19,0)
 I TYPE="PXD(811.2," D  G ADDEX
"RTN","PXRMSTA1",20,0)
 .I $G(TAXTYPE)="R"!($G(TAXTYPE)="B") D DATA^PXRMSTA2(FILE,.DA,"RAMIS(71,","",.STATUS)
"RTN","PXRMSTA1",21,0)
 ;Handle drug finding items
"RTN","PXRMSTA1",22,0)
 I TYPE["PSDRUG("!(TYPE["PS(50.605")!(TYPE["PSNDF") D  G ADDEX
"RTN","PXRMSTA1",23,0)
 .D SRXTYL^PXRMRXTY(NODE,.RXTYPE)
"RTN","PXRMSTA1",24,0)
 .D DATA^PXRMSTA2(FILE,.DA,"DRUG",.RXTYPE,.STATUS)
"RTN","PXRMSTA1",25,0)
 ;Radiology and orderable item finding item
"RTN","PXRMSTA1",26,0)
 D DATA^PXRMSTA2(FILE,.DA,TYPE,"",.STATUS)
"RTN","PXRMSTA1",27,0)
ADDEX ;
"RTN","PXRMSTA1",28,0)
 I '$D(STATUS) S UPDATE=0 Q
"RTN","PXRMSTA1",29,0)
 S STAT="" F  S STAT=$O(STATUS(STAT)) Q:STAT=""!(WILD)=1  D
"RTN","PXRMSTA1",30,0)
 .I STAT["*" S WILD=1 Q
"RTN","PXRMSTA1",31,0)
 .S CSTATUS(STAT)=""
"RTN","PXRMSTA1",32,0)
 I WILD=1 K CSTATUS S CSTATUS("*")=""
"RTN","PXRMSTA1",33,0)
 S UPDATE=1 D DISPLAY(GBL,UPDATE,.WILD,0)
"RTN","PXRMSTA1",34,0)
 Q
"RTN","PXRMSTA1",35,0)
 ;
"RTN","PXRMSTA1",36,0)
ADDDEL(ANS,GBL,FILE,TYPE,NODE,WILD,DA,UPDATE,DELALL) ;
"RTN","PXRMSTA1",37,0)
 I $G(ANS)="" S ANS=$$PROMPT("S^A:ADD STATUS;D:DELETE A STATUS;S:SAVE AND QUIT;Q:QUIT WITHOUT SAVING CHANGES")
"RTN","PXRMSTA1",38,0)
 I "ADDASQ"'[ANS Q
"RTN","PXRMSTA1",39,0)
 I ANS="A",WILD=1 D
"RTN","PXRMSTA1",40,0)
 .W !,"Wildcard is already on the status list all possible statuses will be evaluated."
"RTN","PXRMSTA1",41,0)
 .W !,"To add a specific status please remove the wildcard first."
"RTN","PXRMSTA1",42,0)
 .S UPDATE=0 H 1
"RTN","PXRMSTA1",43,0)
 I ANS="A",WILD=0 D ADD(GBL,FILE,.CSTATUS,TYPE,.WILD,.DA,.UPDATE)
"RTN","PXRMSTA1",44,0)
 I ANS="D" D DELETE(GBL,FILE,.CSTATUS,NODE,.WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",45,0)
 I ANS="S" S UPDATE="S"
"RTN","PXRMSTA1",46,0)
 I ANS="Q" S UPDATE="Q"
"RTN","PXRMSTA1",47,0)
 I UPDATE'="S",UPDATE'="Q" S DELALL=0 D ADDDEL("",GBL,FILE,TYPE,NODE,.WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",48,0)
 ; only update the new record if the action is Save
"RTN","PXRMSTA1",49,0)
 I UPDATE="S" D UPDATE(FILE,.UPDATE,.CSTATUS,.DA,.DELALL)
"RTN","PXRMSTA1",50,0)
 Q
"RTN","PXRMSTA1",51,0)
 ;
"RTN","PXRMSTA1",52,0)
ASK(STR,HTEXT) ;
"RTN","PXRMSTA1",53,0)
 N DIR,HTEXT
"RTN","PXRMSTA1",54,0)
 I '$D(HTEXT) S HTEXT(1)="Enter 'Y' to continue editing the Status List or '^' to Quit"
"RTN","PXRMSTA1",55,0)
 S DIR(0)="YA0"
"RTN","PXRMSTA1",56,0)
 S DIR("A")=STR
"RTN","PXRMSTA1",57,0)
 S DIR("B")="N"
"RTN","PXRMSTA1",58,0)
 S DIR("?")="Select either 'Y' or 'N' or '^' to quit. Enter ?? for detail help."
"RTN","PXRMSTA1",59,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMSTA1",60,0)
 D ^DIR
"RTN","PXRMSTA1",61,0)
 Q Y
"RTN","PXRMSTA1",62,0)
 ;
"RTN","PXRMSTA1",63,0)
CLEAR(GBL,FILE,DA) ;
"RTN","PXRMSTA1",64,0)
 N IEN,NODE,DIK,TEMP
"RTN","PXRMSTA1",65,0)
 I FILE="D" S DIK="^PXD(811.9,"_DA(2)_",20,"_DA(1)_",5,"
"RTN","PXRMSTA1",66,0)
 I FILE="T" S DIK="^PXRMD(811.5,"_DA(2)_",20,"_DA(1)_",5,"
"RTN","PXRMSTA1",67,0)
 S DA=0 F  S DA=$O(@GBL@(DA(2),20,DA(1),5,DA)) Q:DA'>0  S TEMP(DA)=""
"RTN","PXRMSTA1",68,0)
 S DA=0 F  S DA=$O(TEMP(DA)) Q:DA'>0  D ^DIK
"RTN","PXRMSTA1",69,0)
 Q
"RTN","PXRMSTA1",70,0)
 ;
"RTN","PXRMSTA1",71,0)
DEFAULT(GBL,TYPE,NODE,RFILE,DELETE,DA) ;
"RTN","PXRMSTA1",72,0)
 N ANS,FDA,FILE,IND,MSG,STATUS,TERMIEN
"RTN","PXRMSTA1",73,0)
 S FILE=""
"RTN","PXRMSTA1",74,0)
 I TYPE["PXRMD(811.5," D
"RTN","PXRMSTA1",75,0)
 .S TERMIEN=$P($G(TYPE),";")
"RTN","PXRMSTA1",76,0)
 .S TYPE=$$TERMSTAT(TERMIEN) I TYPE=0 S STATUS="" Q
"RTN","PXRMSTA1",77,0)
 .I TYPE["PXD" S TAXTYPE=$$TAXTYPE(TERMIEN,"")
"RTN","PXRMSTA1",78,0)
 I TYPE=0 Q
"RTN","PXRMSTA1",79,0)
 I TYPE["PXD(811.2,",$G(TAXTYPE)="" S TAXTYPE=$$TAXNODE($P(TYPE,";"))
"RTN","PXRMSTA1",80,0)
 I TYPE[";" S TYPE=$P($G(TYPE),";",2)
"RTN","PXRMSTA1",81,0)
 I TYPE="PXD(811.2," D
"RTN","PXRMSTA1",82,0)
 .I $G(TAXTYPE)="R"!($G(TAXTYPE)="B") S FILE=70
"RTN","PXRMSTA1",83,0)
 I FILE="",TYPE="ORD(101.43," S FILE=100
"RTN","PXRMSTA1",84,0)
 I FILE="",TYPE="RAMIS(71," S FILE=70
"RTN","PXRMSTA1",85,0)
 I FILE="",TYPE["PSDRUG("!(TYPE["PS(50.605")!(TYPE["PSNDF") D
"RTN","PXRMSTA1",86,0)
 .N DSTATUS,NAME,STATUSI,STATUSN,STATUSO,RXTYPE
"RTN","PXRMSTA1",87,0)
 .D SRXTYL^PXRMRXTY(NODE,.RXTYPE)
"RTN","PXRMSTA1",88,0)
 .I $D(RXTYPE("O")) D DEFAULT^PXRMSTAT(52,.STATUSO) D
"RTN","PXRMSTA1",89,0)
 ..F IND=1:1:STATUSO(0) S DSTATUS(STATUSO(IND))=""
"RTN","PXRMSTA1",90,0)
 .I $D(RXTYPE("I")) D DEFAULT^PXRMSTAT(55,.STATUSI) D
"RTN","PXRMSTA1",91,0)
 ..F IND=1:1:STATUSI(0) S DSTATUS(STATUSI(IND))=""
"RTN","PXRMSTA1",92,0)
 .I $D(RXTYPE("N")) D DEFAULT^PXRMSTAT("55NVA",.STATUSN) D
"RTN","PXRMSTA1",93,0)
 ..F IND=1:1:STATUSN(0) S DSTATUS(STATUSN(IND))=""
"RTN","PXRMSTA1",94,0)
 .S NAME="",IND=0 F  S NAME=$O(DSTATUS(NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",95,0)
 ..S IND=IND+1 S STATUS(IND)=NAME
"RTN","PXRMSTA1",96,0)
 .S STATUS(0)=IND
"RTN","PXRMSTA1",97,0)
 I '$D(STATUS) D DEFAULT^PXRMSTAT(FILE,.STATUS)
"RTN","PXRMSTA1",98,0)
 F IND=1:1:STATUS(0) Q:$D(MSG)>0  D
"RTN","PXRMSTA1",99,0)
 .I DELETE=1 S CSTATUS(STATUS(IND))="" Q
"RTN","PXRMSTA1",100,0)
 .I $D(@GBL@(DA(2),20,DA(1),5,"B",STATUS(IND))) Q
"RTN","PXRMSTA1",101,0)
 .I RFILE="D" S FDA(811.90221,"+3,"_DA(1)_","_DA(2)_",",.01)=STATUS(IND)
"RTN","PXRMSTA1",102,0)
 .I RFILE="T" S FDA(811.54,"+3,"_DA(1)_","_DA(2)_",",.01)=STATUS(IND)
"RTN","PXRMSTA1",103,0)
 .D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMSTA1",104,0)
 I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMSTA1",105,0)
 Q
"RTN","PXRMSTA1",106,0)
 ;
"RTN","PXRMSTA1",107,0)
DELETE(GBL,FILE,CSTATUS,NODE,WILD,DA,UPDATE,DELALL) ;
"RTN","PXRMSTA1",108,0)
 N ANS,CNT,DIK,NUM,NAME,DIR,TMP,TMPARR,Y
"RTN","PXRMSTA1",109,0)
 S CNT=0,NAME="" F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",110,0)
 .S CNT=CNT+1 S TMPARR(CNT)=CNT_" - "_NAME,TMP(CNT)=NAME
"RTN","PXRMSTA1",111,0)
 S DIR(0)="LO^1:"_CNT_""
"RTN","PXRMSTA1",112,0)
 M DIR("A")=TMPARR
"RTN","PXRMSTA1",113,0)
 S DIR("A")="Select which status to be deleted"
"RTN","PXRMSTA1",114,0)
 ;S DIR("?")=HELP
"RTN","PXRMSTA1",115,0)
 D ^DIR
"RTN","PXRMSTA1",116,0)
 I $D(DTOUT)!($D(DUOUT))!($G(Y)="") Q
"RTN","PXRMSTA1",117,0)
 S CNT=0 F X=1:1:$L(Y(0)) D
"RTN","PXRMSTA1",118,0)
 .I $E(Y(0),X)="," S CNT=CNT+1,NUM=$P(Y(0),",",CNT) S NAME=TMP(NUM) K CSTATUS(NAME) I NAME["*" S WILD=0
"RTN","PXRMSTA1",119,0)
 S UPDATE=1
"RTN","PXRMSTA1",120,0)
 I FILE="T",$D(CSTATUS)'>0 S DELALL=1
"RTN","PXRMSTA1",121,0)
 D DISPLAY(GBL,UPDATE,.WILD,DELALL)
"RTN","PXRMSTA1",122,0)
 Q
"RTN","PXRMSTA1",123,0)
 ;
"RTN","PXRMSTA1",124,0)
DISPLAY(GBL,UPDATE,WILD,DELALL) ;
"RTN","PXRMSTA1",125,0)
 ;Display statuses defined in the 5 node or display statuses if CStatus
"RTN","PXRMSTA1",126,0)
 ;array has been loaded
"RTN","PXRMSTA1",127,0)
 N NAME
"RTN","PXRMSTA1",128,0)
 S NAME=""
"RTN","PXRMSTA1",129,0)
 I ((UPDATE=1)&(DELALL=1))!(($D(CSTATUS)'>0)&(UPDATE=0)&(GBL["811.5")&('$D(@GBL@(DA(2),20,DA(1),5)))) W !!,"No statuses defined for this finding item" W ! Q 
"RTN","PXRMSTA1",130,0)
 W !!,"Statuses already defined for this finding item:"
"RTN","PXRMSTA1",131,0)
 I $D(CSTATUS)'>0,UPDATE=0 D 
"RTN","PXRMSTA1",132,0)
 .F  S NAME=$O(@GBL@(DA(2),20,DA(1),5,"B",NAME)) Q:NAME=""  D
"RTN","PXRMSTA1",133,0)
 ..I NAME["*" S WILD=1
"RTN","PXRMSTA1",134,0)
 ..W !,NAME S CSTATUS(NAME)=$O(^PXD(811.9,DA(2),20,DA(1),5,"B","NAME",""))
"RTN","PXRMSTA1",135,0)
 I UPDATE=1 F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""  W !,NAME I NAME["*" S WILD=1
"RTN","PXRMSTA1",136,0)
 W !
"RTN","PXRMSTA1",137,0)
 Q
"RTN","PXRMSTA1",138,0)
 ;
"RTN","PXRMSTA1",139,0)
PROMPT(STR) ;
"RTN","PXRMSTA1",140,0)
 N DIR,HTEXT
"RTN","PXRMSTA1",141,0)
 S HTEXT(1)="Select 'A' to add a status to the current status list.\\Select 'D' to"
"RTN","PXRMSTA1",142,0)
 S HTEXT(2)="delete a status from the list.\\Select 'S' to save your changes and quit. "
"RTN","PXRMSTA1",143,0)
 S HTEXT(3)="\\Select 'Q' to quit without saving your changes."
"RTN","PXRMSTA1",144,0)
 S DIR(0)=STR
"RTN","PXRMSTA1",145,0)
 S DIR("B")="S"
"RTN","PXRMSTA1",146,0)
 S DIR("?")="Select one of the above option or '^' to quit. Enter ?? for detail help."
"RTN","PXRMSTA1",147,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMSTA1",148,0)
 D ^DIR
"RTN","PXRMSTA1",149,0)
 I $G(Y)="" S Y=U
"RTN","PXRMSTA1",150,0)
 Q Y
"RTN","PXRMSTA1",151,0)
 ;
"RTN","PXRMSTA1",152,0)
STATUS(DA,FILE) ;
"RTN","PXRMSTA1",153,0)
 N ANS,DELSTS,DELALL,GBL,NODE,PXRMRX,STATUS,STS,TAXIEN,TERMIEN,TAXTYPE,TTYPE,TYPE
"RTN","PXRMSTA1",154,0)
 N RXTYPE,TAXNODE,TERMTYPE,Y
"RTN","PXRMSTA1",155,0)
 N CSTATUS,UPDATE,HTEXT,OSTAUS,WILD
"RTN","PXRMSTA1",156,0)
 S DA(2)=DA(1),DA(1)=DA,DA="",UPDATE=0,DELALL=0
"RTN","PXRMSTA1",157,0)
 I FILE="D" S GBL="^PXD(811.9)"
"RTN","PXRMSTA1",158,0)
 I FILE="T" S GBL="^PXRMD(811.5)"
"RTN","PXRMSTA1",159,0)
 S NODE=$G(@GBL@(DA(2),20,DA(1),0))
"RTN","PXRMSTA1",160,0)
 S TYPE=$P($G(@GBL@(DA(2),20,DA(1),0)),U)
"RTN","PXRMSTA1",161,0)
 S WILD=0
"RTN","PXRMSTA1",162,0)
 ;Check for current defined statuses if none set the default values
"RTN","PXRMSTA1",163,0)
 I FILE="D",$P($G(@GBL@(DA(2),20,DA(1),5,0)),U,4)'>0 D DEFAULT(GBL,TYPE,NODE,FILE,0,.DA)
"RTN","PXRMSTA1",164,0)
 ;Display the current status 
"RTN","PXRMSTA1",165,0)
 D DISPLAY(GBL,UPDATE,.WILD,DELALL)
"RTN","PXRMSTA1",166,0)
 ;Do inital prompt
"RTN","PXRMSTA1",167,0)
 D ADDDEL($G(ANS),GBL,FILE,TYPE,NODE,WILD,.DA,.UPDATE,.DELALL)
"RTN","PXRMSTA1",168,0)
 Q
"RTN","PXRMSTA1",169,0)
 ;
"RTN","PXRMSTA1",170,0)
TAXNODE(TAXIEN) ;Determine if the taxonomy is searching Problem List and/or
"RTN","PXRMSTA1",171,0)
 ;CPT codes which can be Radiology Procedures.
"RTN","PXRMSTA1",172,0)
 N PL,RAD,RESULT
"RTN","PXRMSTA1",173,0)
 S (PL,RAD,RESULT)=0
"RTN","PXRMSTA1",174,0)
 I (^PXD(811.2,TAXIEN,"APDS",71,"NNODES")>0),($D(^PXD(811.2,TAXIEN,20,"AE","CPT"))) S RAD=1
"RTN","PXRMSTA1",175,0)
 I ^PXD(811.2,TAXIEN,"APDS",9000011,"NNODES")>0 S PL=1
"RTN","PXRMSTA1",176,0)
 I RAD=1,PL=1 S RESULT="B"
"RTN","PXRMSTA1",177,0)
 I RAD=1,PL=0 S RESULT="R"
"RTN","PXRMSTA1",178,0)
 I RAD=0,PL=1 S RESULT="P"
"RTN","PXRMSTA1",179,0)
 Q RESULT
"RTN","PXRMSTA1",180,0)
 ;
"RTN","PXRMSTA1",181,0)
TAXTYPE(TERMIEN,HELP) ;Determine the Rx type of the term and the type of
"RTN","PXRMSTA1",182,0)
 ;taxonomy
"RTN","PXRMSTA1",183,0)
 N ARRAY,BOTH,CNT,IEN,TAXNODE,RAD,PL,RESULT,TYPE
"RTN","PXRMSTA1",184,0)
 S (BOTH,PL,RAD,RESULT)=0
"RTN","PXRMSTA1",185,0)
 S IEN=0 F  S IEN=$O(^PXRMD(811.5,TERMIEN,20,IEN)) Q:+IEN'>0  D
"RTN","PXRMSTA1",186,0)
 .S TAXNODE=$G(^PXRMD(811.5,TERMIEN,20,IEN,0))
"RTN","PXRMSTA1",187,0)
 .S ARRAY($P($P($G(TAXNODE),U),";"))=""
"RTN","PXRMSTA1",188,0)
 I $D(ARRAY)>0 S IEN=0 F  S IEN=$O(ARRAY(IEN)) Q:IEN'>0  D
"RTN","PXRMSTA1",189,0)
 .S TYPE=$$TAXNODE(IEN)
"RTN","PXRMSTA1",190,0)
 .I TYPE="R" S RAD=1
"RTN","PXRMSTA1",191,0)
 .I TYPE="P" S PL=1
"RTN","PXRMSTA1",192,0)
 .I TYPE="B" S BOTH=1
"RTN","PXRMSTA1",193,0)
 I RAD=1,PL=1 S RESULT="B" Q
"RTN","PXRMSTA1",194,0)
 I RAD=1,PL=0,BOTH=0 S RESULT="R"
"RTN","PXRMSTA1",195,0)
 I RAD=0,PL=1,BOTH=0 S RESULT="P"
"RTN","PXRMSTA1",196,0)
 Q RESULT
"RTN","PXRMSTA1",197,0)
 ;
"RTN","PXRMSTA1",198,0)
TERMSTAT(TIEN) ;
"RTN","PXRMSTA1",199,0)
 N CNT,FIEN,NODE
"RTN","PXRMSTA1",200,0)
 S (CNT,FIEN)=0
"RTN","PXRMSTA1",201,0)
 S TYPE=0 F  S FIEN=$O(^PXRMD(811.5,TIEN,20,FIEN)) Q:+FIEN=0!(CNT=1)  D
"RTN","PXRMSTA1",202,0)
 . S NODE=$G(^PXRMD(811.5,TIEN,20,FIEN,0)),TYPE=$P(NODE,U),CNT=CNT+1
"RTN","PXRMSTA1",203,0)
 Q TYPE
"RTN","PXRMSTA1",204,0)
 ;
"RTN","PXRMSTA1",205,0)
UPDATE(FILE,UPDATE,CSTATUS,DA,DELALL) ;
"RTN","PXRMSTA1",206,0)
 N FDA,MSG,NAME
"RTN","PXRMSTA1",207,0)
 I UPDATE="S" S UPDATE=1
"RTN","PXRMSTA1",208,0)
 I UPDATE=0,$D(CSTATUS) G EXIT
"RTN","PXRMSTA1",209,0)
 D CLEAR(GBL,FILE,.DA)
"RTN","PXRMSTA1",210,0)
 I $D(CSTATUS)'>0 S UPDATE=0,DELALL=0 G EXIT
"RTN","PXRMSTA1",211,0)
 I $D(CSTATUS)'>0 S UPDATE=1,DELALL=1 G EXIT
"RTN","PXRMSTA1",212,0)
 S NAME="" F  S NAME=$O(CSTATUS(NAME)) Q:NAME=""!($D(MSG)>0)  D
"RTN","PXRMSTA1",213,0)
 .I FILE="D" S FDA(811.90221,"+3,"_DA(1)_","_DA(2)_",",.01)=NAME
"RTN","PXRMSTA1",214,0)
 .I FILE="T" S FDA(811.54,"+3,"_DA(1)_","_DA(2)_",",.01)=NAME
"RTN","PXRMSTA1",215,0)
 .D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMSTA1",216,0)
 I $D(MSG)>0 D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMSTA1",217,0)
EXIT ;
"RTN","PXRMSTA1",218,0)
 Q
"RTN","PXRMSTA1",219,0)
 ;
"RTN","PXRMSTA1",220,0)
WARN ;
"RTN","PXRMSTA1",221,0)
 ;If the whole entry is being deleted don't give the warning.
"RTN","PXRMSTA1",222,0)
 I $G(PXRMDEFD) Q
"RTN","PXRMSTA1",223,0)
 I $G(PXRMTMD) Q
"RTN","PXRMSTA1",224,0)
 ;Do not execute as part of exchange.
"RTN","PXRMSTA1",225,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMSTA1",226,0)
 N TEXT
"RTN","PXRMSTA1",227,0)
 S TEXT(1)=""
"RTN","PXRMSTA1",228,0)
 S TEXT(2)="Since you changed the value of Rx Type, you should review the status list"
"RTN","PXRMSTA1",229,0)
 S TEXT(3)="for the finding to make sure it is still appropriate."
"RTN","PXRMSTA1",230,0)
 S TEXT(4)=""
"RTN","PXRMSTA1",231,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMSTA1",232,0)
 Q
"RTN","PXRMSTA1",233,0)
 ;
"RTN","PXRMSTA2")
0^54^B22367612
"RTN","PXRMSTA2",1,0)
PXRMSTA2 ; SLC/AGP - Routines for building status list. ;12/19/2012
"RTN","PXRMSTA2",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,26**;Feb 04, 2005;Build 404
"RTN","PXRMSTA2",3,0)
 ;
"RTN","PXRMSTA2",4,0)
ARRAYFOR(ARRAY,OUTPUT,DEF) ;
"RTN","PXRMSTA2",5,0)
 ;Format the data array into a standard format
"RTN","PXRMSTA2",6,0)
 N CNT,COMP,PIECE,STR,TYPE
"RTN","PXRMSTA2",7,0)
 S PIECE=0
"RTN","PXRMSTA2",8,0)
 ;Determine the number of pieces minus one in the string
"RTN","PXRMSTA2",9,0)
 F CNT=1:1:$L(ARRAY("POINTER")) I $E(ARRAY("POINTER"),CNT)=";" S PIECE=PIECE+1 I PIECE>0 D
"RTN","PXRMSTA2",10,0)
 . S STR=$P($P($G(ARRAY("POINTER")),";",PIECE),":",2)
"RTN","PXRMSTA2",11,0)
 . S OUTPUT($P($P($G(ARRAY("POINTER")),";",PIECE),":",2))=STR_U_$G(DEF)
"RTN","PXRMSTA2",12,0)
 ;
"RTN","PXRMSTA2",13,0)
 ;Add last piece in the string to the array
"RTN","PXRMSTA2",14,0)
 I PIECE>0 S PIECE=PIECE+1 D
"RTN","PXRMSTA2",15,0)
 . I $P($G(ARRAY("POINTER")),";",PIECE)'="" D
"RTN","PXRMSTA2",16,0)
 .. S OUTPUT($P($P($G(ARRAY("POINTER")),";",PIECE),":",2))=$P($P($G(ARRAY("POINTER")),";",PIECE),":",2)_U_$G(DEF)
"RTN","PXRMSTA2",17,0)
 Q
"RTN","PXRMSTA2",18,0)
 ;
"RTN","PXRMSTA2",19,0)
COMPARE(ARRAY,ARRAY1,TYPE,OUTPUT) ;
"RTN","PXRMSTA2",20,0)
 ;This sub routine is used to combine both Pharmacy types into one array
"RTN","PXRMSTA2",21,0)
 N ARY,CNT,COMP,NODE
"RTN","PXRMSTA2",22,0)
 K OUTPUT
"RTN","PXRMSTA2",23,0)
 S COMP=""
"RTN","PXRMSTA2",24,0)
 ;
"RTN","PXRMSTA2",25,0)
 ;Inpatient pharmacy list is built from two separated fields in file #55
"RTN","PXRMSTA2",26,0)
 ;this is used to combine the two fields into one array
"RTN","PXRMSTA2",27,0)
 I $G(TYPE)="I" D
"RTN","PXRMSTA2",28,0)
 . F  S COMP=$O(ARRAY(COMP)) Q:COMP=""  S OUTPUT(COMP)=ARRAY(COMP)
"RTN","PXRMSTA2",29,0)
 . S (COMP)="" F  S COMP=$O(ARRAY1(COMP)) Q:COMP=""  I '$D(OUTPUT(COMP)) S OUTPUT(COMP)=ARRAY1(COMP)
"RTN","PXRMSTA2",30,0)
 ;
"RTN","PXRMSTA2",31,0)
 ;This section combines the different RX Types into one array
"RTN","PXRMSTA2",32,0)
 I $G(TYPE)'="I" D
"RTN","PXRMSTA2",33,0)
 . F  S COMP=$O(ARRAY(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",34,0)
 .. S NODE=$G(ARRAY(COMP))
"RTN","PXRMSTA2",35,0)
 .. S OUTPUT(COMP)=NODE
"RTN","PXRMSTA2",36,0)
 . S COMP="" F  S COMP=$O(ARRAY1(COMP)) Q:COMP=""  D
"RTN","PXRMSTA2",37,0)
 .. S NODE=$G(ARRAY1(COMP))
"RTN","PXRMSTA2",38,0)
 .. I '$D(OUTPUT(COMP)) S OUTPUT(COMP)=NODE Q
"RTN","PXRMSTA2",39,0)
 .. I $D(OUTPUT(COMP)) S $P(OUTPUT(COMP),U,2)=$P(OUTPUT(COMP),U,2)_$P(NODE,U,2)
"RTN","PXRMSTA2",40,0)
 Q
"RTN","PXRMSTA2",41,0)
 ;
"RTN","PXRMSTA2",42,0)
DATA(FILE,DA,TYPE,RXTYPE,STATUS) ;
"RTN","PXRMSTA2",43,0)
 ;Get the list of statuses from the appopriate global
"RTN","PXRMSTA2",44,0)
 N ARRAY,ARRAY1,CNT,CODE,DEF,OUTPUT,SARRAY,STAT
"RTN","PXRMSTA2",45,0)
LOOP ;
"RTN","PXRMSTA2",46,0)
 ;Get build status list into a local array from each pharmacy type of
"RTN","PXRMSTA2",47,0)
 ;finding item
"RTN","PXRMSTA2",48,0)
 I TYPE="DRUG" D
"RTN","PXRMSTA2",49,0)
 . I $D(RXTYPE("I"))>0 D
"RTN","PXRMSTA2",50,0)
 ..;DBIA #4928
"RTN","PXRMSTA2",51,0)
 .. D STATUS^PSS55MIS(55.06,28,"SARRAY")
"RTN","PXRMSTA2",52,0)
 .. D ARRAYFOR(.SARRAY,.ARRAY,"I") K CODE
"RTN","PXRMSTA2",53,0)
 .. D STATUS^PSS55MIS(55.01,100,"SARRAY")
"RTN","PXRMSTA2",54,0)
 .. D ARRAYFOR(.SARRAY,.ARRAY1,"I") K CODE
"RTN","PXRMSTA2",55,0)
 .. D COMPARE(.ARRAY,.ARRAY1,"I",.OUTPUT)
"RTN","PXRMSTA2",56,0)
 . I $D(RXTYPE("O"))>0 D
"RTN","PXRMSTA2",57,0)
 .. K ARRAY,ARRAY1,CODE
"RTN","PXRMSTA2",58,0)
 ..;DBIA #4848
"RTN","PXRMSTA2",59,0)
 .. D STATUS^PSODI(52,100,"SARRAY")
"RTN","PXRMSTA2",60,0)
 .. D ARRAYFOR(.SARRAY,.ARRAY,"O") K CODE
"RTN","PXRMSTA2",61,0)
 .. I $D(OUTPUT)>0 K ARRAY1 M ARRAY1=OUTPUT K OUTPUT D COMPARE(.ARRAY,.ARRAY1,"",.OUTPUT)
"RTN","PXRMSTA2",62,0)
 .. E  M OUTPUT=ARRAY
"RTN","PXRMSTA2",63,0)
 . I $D(RXTYPE("N"))>0 D
"RTN","PXRMSTA2",64,0)
 .. K ARRAY,ARRAY1,CODE
"RTN","PXRMSTA2",65,0)
 .. D STATUS^PSS55MIS(55.05,5,"SARRAY")
"RTN","PXRMSTA2",66,0)
 .. S SARRAY("POINTER")=SARRAY("POINTER")_"0:ACTIVE;"
"RTN","PXRMSTA2",67,0)
 .. D ARRAYFOR(.SARRAY,.ARRAY,"N") K CODE
"RTN","PXRMSTA2",68,0)
 .. I $D(OUTPUT)>0 K ARRAY1 M ARRAY1=OUTPUT K OUTPUT D COMPARE(.ARRAY,.ARRAY1,"",.OUTPUT)
"RTN","PXRMSTA2",69,0)
 .. E  M OUTPUT=ARRAY
"RTN","PXRMSTA2",70,0)
 ;
"RTN","PXRMSTA2",71,0)
 I TYPE="PROB" S OUTPUT("ACTIVE")="ACTIVE",OUTPUT("INACTIVE")="INACTIVE"
"RTN","PXRMSTA2",72,0)
 I TYPE="ORD(101.43," D
"RTN","PXRMSTA2",73,0)
 .;DBIA #??
"RTN","PXRMSTA2",74,0)
 . S CNT=0,STAT="" F  S STAT=$O(^ORD(100.01,"B",STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",75,0)
 .. S CNT=CNT+1 S OUTPUT(STAT)=STAT
"RTN","PXRMSTA2",76,0)
 I TYPE="RAMIS(71,"!(TYPE="TAX") D
"RTN","PXRMSTA2",77,0)
 . S TYPE="RAMIS(71,"
"RTN","PXRMSTA2",78,0)
 .;DBIA #996
"RTN","PXRMSTA2",79,0)
 . S CNT=0,STAT="" F  S STAT=$O(^RA(72,"B",STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",80,0)
 .. S CNT=CNT+1 S OUTPUT(STAT)=STAT
"RTN","PXRMSTA2",81,0)
 D SELECT(.OUTPUT,FILE,TYPE,.STATUS,.DA)
"RTN","PXRMSTA2",82,0)
 Q
"RTN","PXRMSTA2",83,0)
 ;
"RTN","PXRMSTA2",84,0)
SELECT(ARRAY,FILE,TYPE,STATUS,DA) ;
"RTN","PXRMSTA2",85,0)
 ;Sort through the formated array and set up the DIR call
"RTN","PXRMSTA2",86,0)
 N CHECK,CNT,CNT1,DIR,DUOUT,DTOUT,EMPTY,EXTR
"RTN","PXRMSTA2",87,0)
 N HELP,LENGTH,NODE,STAT,STR,TEXT,TMP,X,Y
"RTN","PXRMSTA2",88,0)
 N TMPARR,NUM
"RTN","PXRMSTA2",89,0)
DISPLAY ;
"RTN","PXRMSTA2",90,0)
 I TYPE="DRUG" S TEXT="Select a Medication Status or enter '^' to Quit",HELP="Select a status from the Medication Status list or '^' to Quit"
"RTN","PXRMSTA2",91,0)
 I TYPE="ORD(101.43," S TEXT="Select a Order Status from or enter '^' to Quit",HELP="Select a Order Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",92,0)
 I TYPE="RAMIS(71," S TEXT="Select a Radiology Procedure Status or enter '^' to Quit",HELP="Select a Radiology Procedure Status from the status list or '^' to Quit"
"RTN","PXRMSTA2",93,0)
 ;
"RTN","PXRMSTA2",94,0)
 S CNT=0,CNT1=0,STAT=""
"RTN","PXRMSTA2",95,0)
 ;If text is not entered into the prompt or no match is found display
"RTN","PXRMSTA2",96,0)
 ;entire list of statuses for this finding item
"RTN","PXRMSTA2",97,0)
 ;
"RTN","PXRMSTA2",98,0)
 ;Add wildcard character
"RTN","PXRMSTA2",99,0)
 S CNT=CNT+1,CNT1=CNT1+1,TMP(CNT)=CNT_" - * (WildCard)",TMPARR(CNT)="*"
"RTN","PXRMSTA2",100,0)
 ;Add status from file to the selectable list
"RTN","PXRMSTA2",101,0)
 F  S STAT=$O(ARRAY(STAT)) Q:STAT=""  D
"RTN","PXRMSTA2",102,0)
 . S NODE=$G(ARRAY(STAT))
"RTN","PXRMSTA2",103,0)
 . S STR=$P(NODE,U)
"RTN","PXRMSTA2",104,0)
 . S CNT=CNT+1,CNT1=CNT1+1
"RTN","PXRMSTA2",105,0)
 . I TYPE="DRUG" S TMP(CNT)=CNT_" - "_STR_"("_$P(NODE,U,2)_")",TMPARR(CNT)=STR
"RTN","PXRMSTA2",106,0)
 . E  S TMP(CNT)=CNT_" - "_STR,TMPARR(CNT)=STR
"RTN","PXRMSTA2",107,0)
 ;
"RTN","PXRMSTA2",108,0)
 S DIR(0)="LO^1:"_CNT_""
"RTN","PXRMSTA2",109,0)
 M DIR("A")=TMP
"RTN","PXRMSTA2",110,0)
 S DIR("A")=TEXT
"RTN","PXRMSTA2",111,0)
 S DIR("?")=HELP
"RTN","PXRMSTA2",112,0)
 D ^DIR
"RTN","PXRMSTA2",113,0)
 I $D(DTOUT)!($D(DUOUT))!($G(Y)="") K STATUS Q
"RTN","PXRMSTA2",114,0)
 S CNT=0 F X=1:1:$L(Y(0)) D
"RTN","PXRMSTA2",115,0)
 .I $E(Y(0),X)="," S CNT=CNT+1,NUM=$P(Y(0),",",CNT),STATUS(TMPARR(NUM))=""
"RTN","PXRMSTA2",116,0)
 Q
"RTN","PXRMSTA2",117,0)
 ;
"RTN","PXRMSTAC")
0^119^B10577788
"RTN","PXRMSTAC",1,0)
PXRMSTAC ;SLC/PKR - Stack routines for use by PXRM. ;12/24/2013
"RTN","PXRMSTAC",2,0)
 ;;2.0;CLINICAL REMINDERS;**18,26**;Feb 04, 2005;Build 404
"RTN","PXRMSTAC",3,0)
 ;
"RTN","PXRMSTAC",4,0)
 ;=====================================================
"RTN","PXRMSTAC",5,0)
POP(STACK) ;Pop an element off of the stack.
"RTN","PXRMSTAC",6,0)
 I STACK(0)=0 Q ""
"RTN","PXRMSTAC",7,0)
 N IND,TEMP
"RTN","PXRMSTAC",8,0)
 S TEMP=STACK(1)
"RTN","PXRMSTAC",9,0)
 F IND=2:1:STACK(0) S STACK(IND-1)=STACK(IND)
"RTN","PXRMSTAC",10,0)
 K STACK(STACK(0))
"RTN","PXRMSTAC",11,0)
 S STACK(0)=STACK(0)-1
"RTN","PXRMSTAC",12,0)
 Q TEMP
"RTN","PXRMSTAC",13,0)
 ;
"RTN","PXRMSTAC",14,0)
 ;=====================================================
"RTN","PXRMSTAC",15,0)
POSTFIX(EXPR,OPERS,PFSTACK) ;Given an expression, EXPR, in infix notation
"RTN","PXRMSTAC",16,0)
 ;convert it to postfix and return the result in PFSTACK. PFSTACK(0)
"RTN","PXRMSTAC",17,0)
 ;will contain the number of elements in PFSTACK. OPERS is a
"RTN","PXRMSTAC",18,0)
 ;string containing allowable operators.
"RTN","PXRMSTAC",19,0)
 N CHAR,IND,LEN,NSYM,OPERP,PFP,QF,QUOTE,SP,STACK,SYM,SYMP,SYMT
"RTN","PXRMSTAC",20,0)
 N TEMP,UNARYOPS
"RTN","PXRMSTAC",21,0)
 S UNARYOPS=""
"RTN","PXRMSTAC",22,0)
 F TEMP="+","-","'" I OPERS[TEMP S UNARYOPS=UNARYOPS_TEMP
"RTN","PXRMSTAC",23,0)
 S QUOTE=$C(34)
"RTN","PXRMSTAC",24,0)
 S OPERP=OPERS_"()"
"RTN","PXRMSTAC",25,0)
 S LEN=$L(EXPR)
"RTN","PXRMSTAC",26,0)
 ;Break the expression into (, ), operators, and operands.
"RTN","PXRMSTAC",27,0)
 ;Put the symbols onto the symbol stack in left to right order.
"RTN","PXRMSTAC",28,0)
 ;Symbol number 1 is SYM(1).
"RTN","PXRMSTAC",29,0)
 S QF=0,NSYM=0,TEMP=""
"RTN","PXRMSTAC",30,0)
 F IND=1:1:LEN D
"RTN","PXRMSTAC",31,0)
 . S CHAR=$E(EXPR,IND)
"RTN","PXRMSTAC",32,0)
 . I (CHAR=QUOTE),('QF) S TEMP=TEMP_CHAR,QF=1 Q
"RTN","PXRMSTAC",33,0)
 . I (QF),(CHAR'=QUOTE) S TEMP=TEMP_CHAR Q
"RTN","PXRMSTAC",34,0)
 . I (QF),(CHAR=QUOTE) S TEMP=TEMP_CHAR,QF=0 Q
"RTN","PXRMSTAC",35,0)
 . I OPERP[CHAR D  Q
"RTN","PXRMSTAC",36,0)
 .. I TEMP'="" S NSYM=NSYM+1,SYM(NSYM)=TEMP,TEMP=""
"RTN","PXRMSTAC",37,0)
 ..;In MUMPS "'&", "'!", "'=", "'<", "'>", "'[", and "']" must be
"RTN","PXRMSTAC",38,0)
 ..;treated as a single operator.
"RTN","PXRMSTAC",39,0)
 .. I CHAR="'" D
"RTN","PXRMSTAC",40,0)
 ... S TEMP=$E(EXPR,IND+1)
"RTN","PXRMSTAC",41,0)
 ... I (TEMP="=")!(TEMP="<")!(TEMP=">")!(TEMP="&")!(TEMP="!")!(TEMP="[")!(TEMP="]") S CHAR=CHAR_TEMP,IND=IND+1
"RTN","PXRMSTAC",42,0)
 .. S NSYM=NSYM+1,SYM(NSYM)=CHAR,TEMP=""
"RTN","PXRMSTAC",43,0)
 . S TEMP=TEMP_CHAR
"RTN","PXRMSTAC",44,0)
 I (IND=LEN),(TEMP'="") S NSYM=NSYM+1,SYM(NSYM)=TEMP
"RTN","PXRMSTAC",45,0)
 ;Process the symbols.
"RTN","PXRMSTAC",46,0)
 S (PFP,SP)=0
"RTN","PXRMSTAC",47,0)
 F SYMP=1:1:NSYM D
"RTN","PXRMSTAC",48,0)
 . S SYMT=SYM(SYMP)
"RTN","PXRMSTAC",49,0)
 .;
"RTN","PXRMSTAC",50,0)
 .;Symbol is "("
"RTN","PXRMSTAC",51,0)
 . I SYMT="(" S SP=SP+1,STACK(SP)=SYMT Q
"RTN","PXRMSTAC",52,0)
 .;
"RTN","PXRMSTAC",53,0)
 .;Symbol is an operator
"RTN","PXRMSTAC",54,0)
 . I OPERS[SYMT D  Q
"RTN","PXRMSTAC",55,0)
 ..;Check for a unary operator, they have the highest precendence.
"RTN","PXRMSTAC",56,0)
 .. ;The NOT operator is always unary.
"RTN","PXRMSTAC",57,0)
 .. I SYMT="'" S SYMT=SYMT_"U",SP=SP+1,STACK(SP)=SYMT Q
"RTN","PXRMSTAC",58,0)
 .. I (SYMP=1),(UNARYOPS[SYMT) S SYMT=SYMT_"U"
"RTN","PXRMSTAC",59,0)
 .. I (SYMP>1),(OPERS[SYM(SYMP-1)),(UNARYOPS[SYMT) S SYMT=SYMT_"U"
"RTN","PXRMSTAC",60,0)
 .. I SYMT["U" S SP=SP+1,STACK(SP)=SYMT Q
"RTN","PXRMSTAC",61,0)
 .. S LEN=SP
"RTN","PXRMSTAC",62,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMSTAC",63,0)
 ... S PFP=PFP+1,PFSTACK(PFP)=TEMP
"RTN","PXRMSTAC",64,0)
 ... K STACK(SP)
"RTN","PXRMSTAC",65,0)
 ... S SP=SP-1
"RTN","PXRMSTAC",66,0)
 .. S SP=SP+1
"RTN","PXRMSTAC",67,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMSTAC",68,0)
 .;
"RTN","PXRMSTAC",69,0)
 .;Symbol is ")"
"RTN","PXRMSTAC",70,0)
 . I SYMT=")" D  Q
"RTN","PXRMSTAC",71,0)
 .. S LEN=SP
"RTN","PXRMSTAC",72,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMSTAC",73,0)
 ... S PFP=PFP+1,PFSTACK(PFP)=TEMP
"RTN","PXRMSTAC",74,0)
 ... K STACK(SP)
"RTN","PXRMSTAC",75,0)
 ... S SP=SP-1
"RTN","PXRMSTAC",76,0)
 ..;Pop the "(" at the top of the stack.
"RTN","PXRMSTAC",77,0)
 .. K STACK(SP)
"RTN","PXRMSTAC",78,0)
 .. S SP=SP-1
"RTN","PXRMSTAC",79,0)
 .;
"RTN","PXRMSTAC",80,0)
 .;If we get to here then symbol is an operand.
"RTN","PXRMSTAC",81,0)
 . S PFP=PFP+1,PFSTACK(PFP)=SYMT
"RTN","PXRMSTAC",82,0)
 ;
"RTN","PXRMSTAC",83,0)
 ;Pop and output anything left on the stack.
"RTN","PXRMSTAC",84,0)
 F IND=SP:-1:1 S PFP=PFP+1,PFSTACK(PFP)=STACK(IND)
"RTN","PXRMSTAC",85,0)
 ;
"RTN","PXRMSTAC",86,0)
 ;Save the number of elements in PFSTACK.
"RTN","PXRMSTAC",87,0)
 S PFSTACK(0)=PFP
"RTN","PXRMSTAC",88,0)
 Q
"RTN","PXRMSTAC",89,0)
 ;
"RTN","PXRMSTAC",90,0)
 ;=====================================================
"RTN","PXRMSTAC",91,0)
PUSH(STACK,ELEM) ;Push an element on the stack.
"RTN","PXRMSTAC",92,0)
 I '$D(STACK) S STACK(1)=ELEM,STACK(0)=1 Q
"RTN","PXRMSTAC",93,0)
 I STACK(0)=0 S STACK(1)=ELEM,STACK(0)=1 Q
"RTN","PXRMSTAC",94,0)
 N IND
"RTN","PXRMSTAC",95,0)
 F IND=STACK(0):-1:1 S STACK(IND+1)=STACK(IND)
"RTN","PXRMSTAC",96,0)
 S STACK(1)=ELEM,STACK(0)=STACK(0)+1
"RTN","PXRMSTAC",97,0)
 Q
"RTN","PXRMSTAC",98,0)
 ;
"RTN","PXRMSTS")
0^105^B178092687
"RTN","PXRMSTS",1,0)
PXRMSTS ;SLC/PKR,AGP - Master File Server event handling routines. ;06/11/2013
"RTN","PXRMSTS",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMSTS",3,0)
 ;==============================
"RTN","PXRMSTS",4,0)
AERRMSG(EMSG,NL) ;Add the UPDATE^DIE error message.
"RTN","PXRMSTS",5,0)
 N ERRMSG,IND
"RTN","PXRMSTS",6,0)
 D ACOPY^PXRMUTIL("MSG","ERRMSG()")
"RTN","PXRMSTS",7,0)
 S IND=0
"RTN","PXRMSTS",8,0)
 F  S IND=$O(ERRMSG(IND)) Q:IND=""  S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=ERRMSG(IND)
"RTN","PXRMSTS",9,0)
 Q
"RTN","PXRMSTS",10,0)
 ;
"RTN","PXRMSTS",11,0)
 ;==============================
"RTN","PXRMSTS",12,0)
ATFND(IEN,FI,REP,NL) ;Add the replacement as a new finding to the term.
"RTN","PXRMSTS",13,0)
 N DA,DIK,EMSG,GBL,NEWFI,TEXT
"RTN","PXRMSTS",14,0)
 S GBL=$P($$GET1^DID($P(REP,";",2),"","","GLOBAL NAME"),U,2)
"RTN","PXRMSTS",15,0)
 S NEWFI=$P(REP,";",1)_";"_GBL
"RTN","PXRMSTS",16,0)
 ;If this finding already exists don't add it again.
"RTN","PXRMSTS",17,0)
 I $D(^PXRMD(811.5,IEN,20,"B",NEWFI)) Q
"RTN","PXRMSTS",18,0)
 S DA(1)=IEN,DIK="^PXRMD(811.5,"_IEN_",20,"
"RTN","PXRMSTS",19,0)
 D SETSTART^PXRMCOPY(DIK)
"RTN","PXRMSTS",20,0)
 S DA=$$GETFOIEN^PXRMCOPY(DIK)
"RTN","PXRMSTS",21,0)
 M ^PXRMD(811.5,IEN,20,DA)=^PXRMD(811.5,IEN,20,FI)
"RTN","PXRMSTS",22,0)
 S $P(^PXRMD(811.5,IEN,20,DA,0),U,1)=NEWFI
"RTN","PXRMSTS",23,0)
 D IX^DIK
"RTN","PXRMSTS",24,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Replacement added as finding number "_DA
"RTN","PXRMSTS",25,0)
 S TEXT(1)="STS protocol automated update."
"RTN","PXRMSTS",26,0)
 S TEXT(2)="Replacement added as finding number "_DA_"."
"RTN","PXRMSTS",27,0)
 D UPEHIST^PXRMUTIL(811.5,IEN,.TEXT,.EMSG)
"RTN","PXRMSTS",28,0)
 I $D(EMSG) D
"RTN","PXRMSTS",29,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Edit history update failed."
"RTN","PXRMSTS",30,0)
 . D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",31,0)
 Q
"RTN","PXRMSTS",32,0)
 ;
"RTN","PXRMSTS",33,0)
 ;==============================
"RTN","PXRMSTS",34,0)
BLDDLGEH(MSG,IEN,TEXT) ;
"RTN","PXRMSTS",35,0)
 N CNT
"RTN","PXRMSTS",36,0)
 I '$D(MSG(IEN)) S MSG(IEN,1)=TEXT Q
"RTN","PXRMSTS",37,0)
 S CNT=""
"RTN","PXRMSTS",38,0)
 S CNT=$O(MSG(IEN,CNT),-1)
"RTN","PXRMSTS",39,0)
 S CNT=CNT+1,MSG(IEN,CNT)=TEXT
"RTN","PXRMSTS",40,0)
 Q
"RTN","PXRMSTS",41,0)
 ;
"RTN","PXRMSTS",42,0)
 ;==============================
"RTN","PXRMSTS",43,0)
BLDDLGTM(SUB) ;Build an index of dialog finding usage.
"RTN","PXRMSTS",44,0)
 N AFIND,AIEN,FIELD,FIEN,FIND,GBL,IEN,MH,NODE,ORD,TYPE
"RTN","PXRMSTS",45,0)
 K ^TMP($J,SUB)
"RTN","PXRMSTS",46,0)
 S IEN=0 F  S IEN=$O(^PXRMD(801.41,IEN)) Q:IEN'>0  D
"RTN","PXRMSTS",47,0)
 .S TYPE=$P($G(^PXRMD(801.41,IEN,0)),U,4)
"RTN","PXRMSTS",48,0)
 .I TYPE'="E",TYPE'="G",TYPE'="S" Q
"RTN","PXRMSTS",49,0)
 .S NODE=$G(^PXRMD(801.41,IEN,1))
"RTN","PXRMSTS",50,0)
 .S FIND=$P(NODE,U,5)
"RTN","PXRMSTS",51,0)
 .S ORD=$P(NODE,U,7)
"RTN","PXRMSTS",52,0)
 .I FIND'="" D
"RTN","PXRMSTS",53,0)
 ..S FIEN=$P(FIND,";"),GBL=$P(FIND,";",2)
"RTN","PXRMSTS",54,0)
 ..S ^TMP($J,SUB,GBL,FIEN,IEN,15)=""
"RTN","PXRMSTS",55,0)
 .I ORD'="" S ^TMP($J,SUB,"ORD(101.43,",ORD,IEN,17)=""
"RTN","PXRMSTS",56,0)
 .S MH=$P($G(^PXRMD(801.41,IEN,50)),U)
"RTN","PXRMSTS",57,0)
 .I MH'="" S ^TMP($J,SUB,"YTT(601.71,",MH,IEN,119)=""
"RTN","PXRMSTS",58,0)
 .S AFIND=0
"RTN","PXRMSTS",59,0)
 .F  S AFIND=$O(^PXRMD(801.41,IEN,3,"B",AFIND)) Q:AFIND=""  D
"RTN","PXRMSTS",60,0)
 ..S AIEN=$O(^PXRMD(801.41,IEN,3,"B",AFIND,"")) Q:AIEN'>0
"RTN","PXRMSTS",61,0)
 ..S FIEN=$P(AFIND,";"),GBL=$P(AFIND,";",2)
"RTN","PXRMSTS",62,0)
 ..S ^TMP($J,SUB,GBL,FIEN,IEN,18,AIEN)=""
"RTN","PXRMSTS",63,0)
 Q
"RTN","PXRMSTS",64,0)
 ;
"RTN","PXRMSTS",65,0)
 ;==============================
"RTN","PXRMSTS",66,0)
DEF(FILENUM,GBL,FIEN,REP,MAPACT,NL) ;Search all reminder definitions
"RTN","PXRMSTS",67,0)
 ;for any  that are using this finding, defined by the global (GBL) and
"RTN","PXRMSTS",68,0)
 ;the IEN (FIEN).
"RTN","PXRMSTS",69,0)
 N DEF,FI,IEN,TERM
"RTN","PXRMSTS",70,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",71,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" It is used in the following definitions:"
"RTN","PXRMSTS",72,0)
 I '$D(^TMP($J,"FDATA",FILENUM,FIEN,"DEF")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMSTS",73,0)
 S TERM=$S(MAPACT="M":$$GENTERM(FILENUM,FIEN,REP,.NL),1:0)
"RTN","PXRMSTS",74,0)
 S IEN=0
"RTN","PXRMSTS",75,0)
 F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,"DEF",IEN)) Q:IEN=""  D
"RTN","PXRMSTS",76,0)
 . S DEF=$P(^PXD(811.9,IEN,0),U,1)
"RTN","PXRMSTS",77,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",78,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  "_DEF_" IEN="_IEN
"RTN","PXRMSTS",79,0)
 . S FI=""
"RTN","PXRMSTS",80,0)
 . F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,"DEF",IEN,FI)) Q:FI=""  D
"RTN","PXRMSTS",81,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Finding number "_FI
"RTN","PXRMSTS",82,0)
 .. I MAPACT="M",TERM>0 D RFWT(IEN,FI,TERM,.NL)
"RTN","PXRMSTS",83,0)
 Q
"RTN","PXRMSTS",84,0)
 ;
"RTN","PXRMSTS",85,0)
 ;==================================================================
"RTN","PXRMSTS",86,0)
DIALOG(FILENUM,GBL,FIEN,REPA,REPB,MAPACT,DSUB,DLGUNMP,STATUS,NL) ;
"RTN","PXRMSTS",87,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",88,0)
 N AIEN,DA,DIE,DISABLE,DISTXT,DR,DIEN,EDITHIS,EDTEXT,FIELD,FIELDNAM
"RTN","PXRMSTS",89,0)
 N FILESTAT,FINDNAME,ISLOCK,LOCK,NAME,NODE,TEXT,TYPE
"RTN","PXRMSTS",90,0)
 ;
"RTN","PXRMSTS",91,0)
 I MAPACT'="U" S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" It is used in the following dialogs:"
"RTN","PXRMSTS",92,0)
 ;
"RTN","PXRMSTS",93,0)
 ;Unmapped write a message listing what dialog item contains the original
"RTN","PXRMSTS",94,0)
 ;term
"RTN","PXRMSTS",95,0)
 I DLGUNMP=1 D  Q
"RTN","PXRMSTS",96,0)
 .S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" The original term is used in the following dialogs:"
"RTN","PXRMSTS",97,0)
 .I '$D(^TMP($J,DSUB,GBL,+REPB)) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMSTS",98,0)
 .S DA=0
"RTN","PXRMSTS",99,0)
 .F  S DA=$O(^TMP($J,DSUB,GBL,+REPB,DA)) Q:DA'>0  D
"RTN","PXRMSTS",100,0)
 ..S NODE=$G(^PXRMD(801.41,DA,0))
"RTN","PXRMSTS",101,0)
 ..S NAME=$P(NODE,U)
"RTN","PXRMSTS",102,0)
 ..S ISLOCK=$S(+$P(NODE,U,3)>0:1,1:0)
"RTN","PXRMSTS",103,0)
 ..S TYPE=$P(NODE,U,4)
"RTN","PXRMSTS",104,0)
 ..S DISTXT=$S(ISLOCK=1:" (DISABLED) ",1:" ")
"RTN","PXRMSTS",105,0)
 ..S TEXT="Dialog "_$S(TYPE="E":"element",TYPE="G":"group",TYPE="S":"result group",1:"item")
"RTN","PXRMSTS",106,0)
 ..S TEXT="  "_TEXT_" "_NAME_DISTXT_"IEN="_DA
"RTN","PXRMSTS",107,0)
 ..S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMSTS",108,0)
 ;
"RTN","PXRMSTS",109,0)
 I '$D(^TMP($J,DSUB,GBL,FIEN)) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMSTS",110,0)
 S DIE="^PXRMD(801.41,",DISABLE=1
"RTN","PXRMSTS",111,0)
 S DR="3////^S X=DISABLE"
"RTN","PXRMSTS",112,0)
 ;DBIA #4640
"RTN","PXRMSTS",113,0)
 S FILESTAT=+$$GETSTAT^HDISVF01(FILENUM)
"RTN","PXRMSTS",114,0)
 S LOCK=$S(FILESTAT=6:1,1:0)
"RTN","PXRMSTS",115,0)
 ;
"RTN","PXRMSTS",116,0)
 ;No replacement list dialog names, if file status of 6 disable the 
"RTN","PXRMSTS",117,0)
 ;dialog items if the term is inactive
"RTN","PXRMSTS",118,0)
 I MAPACT="N" D  G DIALOGX
"RTN","PXRMSTS",119,0)
 .S DA=0
"RTN","PXRMSTS",120,0)
 .F  S DA=$O(^TMP($J,DSUB,GBL,FIEN,DA)) Q:DA'>0  D
"RTN","PXRMSTS",121,0)
 ..S NODE=$G(^PXRMD(801.41,DA,0))
"RTN","PXRMSTS",122,0)
 ..S NAME=$P(NODE,U)
"RTN","PXRMSTS",123,0)
 ..S ISLOCK=$S(+$P(NODE,U,3)>0:1,1:0)
"RTN","PXRMSTS",124,0)
 ..S TYPE=$P(NODE,U,4)
"RTN","PXRMSTS",125,0)
 ..S DISTXT=$S(ISLOCK=1:" (DISABLED) ",1:" ")
"RTN","PXRMSTS",126,0)
 ..S TEXT="Dialog "_$S(TYPE="E":"element",TYPE="G":"group",TYPE="S":"result group",1:"item")
"RTN","PXRMSTS",127,0)
 ..;
"RTN","PXRMSTS",128,0)
 ..;File in state 6, dialog item not already disable, and finding item
"RTN","PXRMSTS",129,0)
 ..;is inactive
"RTN","PXRMSTS",130,0)
 ..I LOCK=1,ISLOCK=0,+STATUS=0 D
"RTN","PXRMSTS",131,0)
 ...S DISTXT=" (MADE INACTIVE) "
"RTN","PXRMSTS",132,0)
 ...D ^DIE
"RTN","PXRMSTS",133,0)
 ...S FINDNAME=$$GET1^DIQ(FILENUM,FIEN,.01,"","","")
"RTN","PXRMSTS",134,0)
 ...S EDTEXT="Disabled for inactive item "_FINDNAME
"RTN","PXRMSTS",135,0)
 ...D BLDDLGEH(.EDITHIS,DA,EDTEXT)
"RTN","PXRMSTS",136,0)
 ..S TEXT="  "_TEXT_" "_NAME_DISTXT_"IEN="_DA
"RTN","PXRMSTS",137,0)
 ..S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXT
"RTN","PXRMSTS",138,0)
 ;
"RTN","PXRMSTS",139,0)
 ;Do if MAPACT="M", only update items if file status is 6.
"RTN","PXRMSTS",140,0)
 I FILESTAT'=6 Q
"RTN","PXRMSTS",141,0)
 ;I FILESTAT'=6,FILESTAT'=7 Q
"RTN","PXRMSTS",142,0)
 S DA=0
"RTN","PXRMSTS",143,0)
 F  S DA=$O(^TMP($J,DSUB,GBL,FIEN,DA)) Q:DA'>0  D
"RTN","PXRMSTS",144,0)
 .S NAME=$P(^PXRMD(801.41,DA,0),U)
"RTN","PXRMSTS",145,0)
 .S TYPE=$P(^PXRMD(801.41,DA,0),U,4)
"RTN","PXRMSTS",146,0)
 .S TEXT="Dialog "_$S(TYPE="E":"element",TYPE="G":"group",TYPE="S":"result group",1:"item")_" "_NAME
"RTN","PXRMSTS",147,0)
 .S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  "_TEXT
"RTN","PXRMSTS",148,0)
 .;
"RTN","PXRMSTS",149,0)
 .S FIELD=0
"RTN","PXRMSTS",150,0)
 .F  S FIELD=$O(^TMP($J,DSUB,GBL,FIEN,DA,FIELD)) Q:FIELD'>0  D
"RTN","PXRMSTS",151,0)
 ..;additional loop for additional findings
"RTN","PXRMSTS",152,0)
 ..I FIELD=18 D  Q
"RTN","PXRMSTS",153,0)
 ...S AIEN=0
"RTN","PXRMSTS",154,0)
 ...F  S AIEN=$O(^TMP($J,DSUB,GBL,FIEN,DA,FIELD,AIEN)) Q:AIEN'>0  D
"RTN","PXRMSTS",155,0)
 ....D DIALUPD(FIEN,+REPA,GBL,FIELD,DA,AIEN,FILENUM,"Additional Finding item",.EDITHIS)
"RTN","PXRMSTS",156,0)
 ....S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Additional Finding item was replaced."
"RTN","PXRMSTS",157,0)
 ..;
"RTN","PXRMSTS",158,0)
 ..S FIELDNAM=$S(FIELD=15:"Finding Item",FIELD=17:"Orderable Item",FIELD=119:"MH Test",1:" ")
"RTN","PXRMSTS",159,0)
 ..D DIALUPD(FIEN,+REPA,GBL,FIELD,DA,0,FILENUM,FIELDNAM,.EDITHIS)
"RTN","PXRMSTS",160,0)
 ..S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="    "_FIELDNAM_" was replaced."
"RTN","PXRMSTS",161,0)
 ;
"RTN","PXRMSTS",162,0)
DIALOGX ;
"RTN","PXRMSTS",163,0)
 I '$D(EDITHIS) Q
"RTN","PXRMSTS",164,0)
 N CNT,EMSG,MESTXT
"RTN","PXRMSTS",165,0)
 S DA="" F  S DA=$O(EDITHIS(DA)) Q:DA'>0  D
"RTN","PXRMSTS",166,0)
 .K EMSG,MESTXT
"RTN","PXRMSTS",167,0)
 .S CNT=0 F  S CNT=$O(EDITHIS(DA,CNT)) Q:CNT'>0  S MESTXT(CNT)=EDITHIS(DA,CNT)
"RTN","PXRMSTS",168,0)
 .D UPEHIST^PXRMUTIL(801.41,DA,.MESTXT,.EMSG)
"RTN","PXRMSTS",169,0)
 .I $D(EMSG) D
"RTN","PXRMSTS",170,0)
 ..S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Edit history update failed."
"RTN","PXRMSTS",171,0)
 ..D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",172,0)
 Q
"RTN","PXRMSTS",173,0)
 ;
"RTN","PXRMSTS",174,0)
 ;==================================================================
"RTN","PXRMSTS",175,0)
DIALUPD(OLDVALUE,NEWVALUE,GBL,FIELD,DIEN,FIEN,FILENUM,FIELDNAM,EDITHIST) ;
"RTN","PXRMSTS",176,0)
 N EMSG,FDA,FIENS,FILE,NEWNAME,OLDNAME,TEXT
"RTN","PXRMSTS",177,0)
 S FILE=$S(FIEN>0:801.4118,1:801.41)
"RTN","PXRMSTS",178,0)
 I FILE=801.4118 S FIELD=.01
"RTN","PXRMSTS",179,0)
 S FIENS=$S(FIEN>0:FIEN_","_DIEN_",",1:DIEN_",")
"RTN","PXRMSTS",180,0)
 S FDA(FILE,FIENS,FIELD)=NEWVALUE_";"_GBL
"RTN","PXRMSTS",181,0)
 D UPDATE^DIE("","FDA","","EMSG")
"RTN","PXRMSTS",182,0)
 I $D(MSG) D  Q
"RTN","PXRMSTS",183,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Dialog update failed."
"RTN","PXRMSTS",184,0)
 . D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",185,0)
 S OLDNAME=$$GET1^DIQ(FILENUM,OLDVALUE,.01,"","","")
"RTN","PXRMSTS",186,0)
 S NEWNAME=$$GET1^DIQ(FILENUM,NEWVALUE,.01,"","","")
"RTN","PXRMSTS",187,0)
 S TEXT=FIELDNAM_" value "_OLDNAME_" replaced by "_NEWNAME_" for data mapping"
"RTN","PXRMSTS",188,0)
 D BLDDLGEH(.EDITHIST,DIEN,TEXT)
"RTN","PXRMSTS",189,0)
 Q
"RTN","PXRMSTS",190,0)
 ;
"RTN","PXRMSTS",191,0)
 ;==============================
"RTN","PXRMSTS",192,0)
ERROR(EVENT,NL) ;Error
"RTN","PXRMSTS",193,0)
 N IND
"RTN","PXRMSTS",194,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="An error occurred; error message text is -"
"RTN","PXRMSTS",195,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_^XTMP(EVENT,"ERROR")
"RTN","PXRMSTS",196,0)
 S IND=0
"RTN","PXRMSTS",197,0)
 F  S IND=$O(^XTMP(EVENT,"ERROR",IND)) Q:IND=""  D
"RTN","PXRMSTS",198,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_^XTMP(EVENT,"ERROR",IND)
"RTN","PXRMSTS",199,0)
 Q
"RTN","PXRMSTS",200,0)
 ;
"RTN","PXRMSTS",201,0)
 ;==============================
"RTN","PXRMSTS",202,0)
EVDRVR ;Event driver for STS events.
"RTN","PXRMSTS",203,0)
 N DEFL,DIAL,DLGUNMP,FIEN,FIENS,FILENUM,FILES,FSTAT,GBL,MAPACT,NL
"RTN","PXRMSTS",204,0)
 N REPA,REPB,STATUS,TYPE
"RTN","PXRMSTS",205,0)
 S ZTREQ="@"
"RTN","PXRMSTS",206,0)
 K ^TMP($J,"DLG FIND"),^TMP($J,"FDATA"),^TMP($J,"PXRM DIALOGS"),^TMP("PXRMXMZ",$J)
"RTN","PXRMSTS",207,0)
 D BLDDLGTM("DLG FIND")
"RTN","PXRMSTS",208,0)
 S NL=1,^TMP("PXRMXMZ",$J,NL,0)="Protocol event summary:"
"RTN","PXRMSTS",209,0)
 ;Check for error.
"RTN","PXRMSTS",210,0)
 I $D(^XTMP(EVENT,"ERROR")) D ERROR(EVENT,.NL) G SEND
"RTN","PXRMSTS",211,0)
 S FILENUM=0
"RTN","PXRMSTS",212,0)
 F  S FILENUM=$O(^XTMP(EVENT,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMSTS",213,0)
 .;Skip the STANDARD TERMINOLOGY VERSION FILE, it is not relevant
"RTN","PXRMSTS",214,0)
 .;for Clinical Reminders.
"RTN","PXRMSTS",215,0)
 . I FILENUM=4.009 Q
"RTN","PXRMSTS",216,0)
 . S FSTAT=$P($$GETSTAT^HDISVF01(FILENUM),U,1)
"RTN","PXRMSTS",217,0)
 . S GBL=$P($$GET1^DID(FILENUM,"","","GLOBAL NAME"),U,2)
"RTN","PXRMSTS",218,0)
 . S TYPE=""
"RTN","PXRMSTS",219,0)
 . F  S TYPE=$O(^XTMP(EVENT,FILENUM,TYPE)) Q:TYPE=""  D
"RTN","PXRMSTS",220,0)
 .. I TYPE="STATUS" Q
"RTN","PXRMSTS",221,0)
 .. S FIEN=""
"RTN","PXRMSTS",222,0)
 .. F  S FIEN=$O(^XTMP(EVENT,FILENUM,TYPE,FIEN)) Q:FIEN=""  D
"RTN","PXRMSTS",223,0)
 ...;Call processing routines.
"RTN","PXRMSTS",224,0)
 ... S FIENS=FIEN_","
"RTN","PXRMSTS",225,0)
 ...;DBIA #4631
"RTN","PXRMSTS",226,0)
 ... S STATUS=$$GETSTAT^XTID(FILENUM,"",FIENS)
"RTN","PXRMSTS",227,0)
 ... I $P(STATUS,U,3)="" S $P(STATUS,U,3)="UNDEFINED"
"RTN","PXRMSTS",228,0)
 ... I TYPE="NEW" D NEW(EVENT,FILENUM,FIEN,STATUS,.NL) Q
"RTN","PXRMSTS",229,0)
 ... I TYPE="BEFORE" Q
"RTN","PXRMSTS",230,0)
 ... I TYPE'="AFTER" D UNKNOWN(TYPE,.NL) Q
"RTN","PXRMSTS",231,0)
 ... S REPA=$G(^XTMP(EVENT,FILENUM,"AFTER",FIEN,"INHERITS FROM"))
"RTN","PXRMSTS",232,0)
 ... S REPB=$G(^XTMP(EVENT,FILENUM,"BEFORE",FIEN,"INHERITS FROM"))
"RTN","PXRMSTS",233,0)
 ...;MAP ACTION can be M (map) or U (unmap) or N (none).
"RTN","PXRMSTS",234,0)
 ...;Set the map action for displaying the status.
"RTN","PXRMSTS",235,0)
 ... S MAPACT=$S(REPA=REPB:"N",REPA'=(FIEN_";"_FILENUM):"M",1:"U")
"RTN","PXRMSTS",236,0)
 ... D STATUSTX(MAPACT,FILENUM,FIEN,REPA,REPB,STATUS,.NL)
"RTN","PXRMSTS",237,0)
 ... S DLGUNMP=$S(MAPACT="U":1,1:0)
"RTN","PXRMSTS",238,0)
 ...;Unless the file status is 6 do not do any automatic replacements.
"RTN","PXRMSTS",239,0)
 ... S MAPACT=$S(FSTAT'=6:"N",1:MAPACT)
"RTN","PXRMSTS",240,0)
 ...;Process the lists, doing replacements updates etc. and generate
"RTN","PXRMSTS",241,0)
 ...;a MailMan message describing what was done.
"RTN","PXRMSTS",242,0)
 ... D DEFLIST^PXRMFRPT(FILENUM,GBL,FIEN,"FDATA")
"RTN","PXRMSTS",243,0)
 ... D DEF(FILENUM,GBL,FIEN,REPA,MAPACT,.NL)
"RTN","PXRMSTS",244,0)
 ... D TERMLIST^PXRMFRPT(FILENUM,GBL,FIEN,"FDATA")
"RTN","PXRMSTS",245,0)
 ... D TERM(FILENUM,GBL,FIEN,REPA,MAPACT,.NL)
"RTN","PXRMSTS",246,0)
 ... D DIALOG(FILENUM,GBL,FIEN,REPA,REPB,MAPACT,"DLG FIND",DLGUNMP,STATUS,.NL)
"RTN","PXRMSTS",247,0)
 ;
"RTN","PXRMSTS",248,0)
 ;Deliver the MailMan message.
"RTN","PXRMSTS",249,0)
SEND D SEND^PXRMMSG("PXRMXMZ",SUBJECT,"",DUZ)
"RTN","PXRMSTS",250,0)
 K ^TMP($J,"DLG FIND"),^TMP($J,"FDATA"),^TMP($J,"PXRM DIALOGS"),^TMP("PXRMXMZ",$J),^XTMP(EVENT)
"RTN","PXRMSTS",251,0)
 Q
"RTN","PXRMSTS",252,0)
 ;
"RTN","PXRMSTS",253,0)
 ;==============================
"RTN","PXRMSTS",254,0)
GENTERM(FILENUM,IEN,REP,NL) ;Generate a term that contains the original
"RTN","PXRMSTS",255,0)
 ;definition finding and its replacement as mapped findings.
"RTN","PXRMSTS",256,0)
 N EMSG,FDA,FINDING,ROOT,TEMP,TEXT,TIEN,TIENS,TNAME,WPTMP
"RTN","PXRMSTS",257,0)
 S TNAME=$$GENTNAME(FILENUM,IEN)
"RTN","PXRMSTS",258,0)
 S TEMP="^PXRMD(811.5,"
"RTN","PXRMSTS",259,0)
 D SETSTART^PXRMCOPY(TEMP)
"RTN","PXRMSTS",260,0)
 S TIEN=$$GETFOIEN^PXRMCOPY(TEMP)
"RTN","PXRMSTS",261,0)
 S TIENS="+"_TIEN_","
"RTN","PXRMSTS",262,0)
 S FINDING=REP
"RTN","PXRMSTS",263,0)
 S ROOT=$P($$ROOT^DILFD(FILENUM),"^",2)
"RTN","PXRMSTS",264,0)
 S $P(FINDING,";",2)=ROOT
"RTN","PXRMSTS",265,0)
 S FDA(811.5,TIENS,.01)=TNAME
"RTN","PXRMSTS",266,0)
 S FDA(811.5,TIENS,.04)=DT
"RTN","PXRMSTS",267,0)
 S FDA(811.5,TIENS,100)="L"
"RTN","PXRMSTS",268,0)
 S FDA(811.5,TIENS,1)="WPTMP(1,1)"
"RTN","PXRMSTS",269,0)
 S WPTMP(1,1,1)="Autogenerated during STS protocol processing."
"RTN","PXRMSTS",270,0)
 S FDA(811.52,"+1,"_TIENS,.01)=FIEN_";"_ROOT
"RTN","PXRMSTS",271,0)
 S FDA(811.52,"+2,"_TIENS,.01)=FINDING
"RTN","PXRMSTS",272,0)
 S FDA(811.53,"+3,"_TIENS,.01)=$$NOW^XLFDT
"RTN","PXRMSTS",273,0)
 S FDA(811.53,"+3,"_TIENS,1)=$G(DUZ)
"RTN","PXRMSTS",274,0)
 S FDA(811.53,"+3,"_TIENS,2)="WPTMP(1,1)"
"RTN","PXRMSTS",275,0)
 D UPDATE^DIE("","FDA","","EMSG")
"RTN","PXRMSTS",276,0)
 I $D(EMSG) D  Q 0
"RTN","PXRMSTS",277,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Term creation failed."
"RTN","PXRMSTS",278,0)
 . D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",279,0)
 Q TIEN_";"_TNAME
"RTN","PXRMSTS",280,0)
 ;
"RTN","PXRMSTS",281,0)
 ;==============================
"RTN","PXRMSTS",282,0)
GENTNAME(FILENUM,IEN) ;Generate a new term name to use. Create it based on
"RTN","PXRMSTS",283,0)
 ;the original definition finding.
"RTN","PXRMSTS",284,0)
 N ABBR,FNAME,NLEN,TEMP,TNAME,TSTAMP
"RTN","PXRMSTS",285,0)
 S FNAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMSTS",286,0)
 ;DBIA #2991, #5149 for access to ^DD.
"RTN","PXRMSTS",287,0)
 S TEMP=$O(^DD(811.902,.01,"V","B",FILENUM,""))
"RTN","PXRMSTS",288,0)
 S ABBR=$P(^DD(811.902,.01,"V",TEMP,0),U,4)
"RTN","PXRMSTS",289,0)
 S TSTAMP=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMSTS",290,0)
 ;Calculate the number of characters from the .01 we can use.
"RTN","PXRMSTS",291,0)
 ;AUTOGENERATED ABBR-NAME TIMESTAMP
"RTN","PXRMSTS",292,0)
 S NLEN=48-$L(ABBR)-$L(TSTAMP)
"RTN","PXRMSTS",293,0)
 S TNAME="AUTOGENERATED "_ABBR_"-"_$E(FNAME,1,NLEN)_" "_TSTAMP
"RTN","PXRMSTS",294,0)
 Q TNAME
"RTN","PXRMSTS",295,0)
 ;
"RTN","PXRMSTS",296,0)
 ;==============================
"RTN","PXRMSTS",297,0)
NEW(EVENT,FILENUM,FIEN,STATUS,NL) ;New entry in file.
"RTN","PXRMSTS",298,0)
 N FNAME,NAME
"RTN","PXRMSTS",299,0)
 S FNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMSTS",300,0)
 S NAME=$P(^XTMP(EVENT,FILENUM,"NEW",FIEN,0),U,1)
"RTN","PXRMSTS",301,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",302,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="======================================================"
"RTN","PXRMSTS",303,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="Added new "_FNAME_" named "_NAME_" status is "_$P(STATUS,U,3)
"RTN","PXRMSTS",304,0)
 Q
"RTN","PXRMSTS",305,0)
 ;
"RTN","PXRMSTS",306,0)
 ;==============================
"RTN","PXRMSTS",307,0)
RFWT(IEN,FI,TERM,NL) ;Definition finding has a replacement; change the
"RTN","PXRMSTS",308,0)
 ;finding to a term that is mapped to the original replacement and
"RTN","PXRMSTS",309,0)
 ;its replacement.
"RTN","PXRMSTS",310,0)
 N EMSG,FDA,TEXT
"RTN","PXRMSTS",311,0)
 S FDA(811.902,FI_","_IEN_",",.01)=$P(TERM,";",1)_";PXRMD(811.5,"
"RTN","PXRMSTS",312,0)
 D FILE^DIE("","FDA","EMSG")
"RTN","PXRMSTS",313,0)
 I $D(MSG) D
"RTN","PXRMSTS",314,0)
 . N ERRMSG,IND
"RTN","PXRMSTS",315,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Error changing finding to term."
"RTN","PXRMSTS",316,0)
 . D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",317,0)
 E  S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Finding number "_FI_" changed to RT."_$P(TERM,";",2)
"RTN","PXRMSTS",318,0)
 S TEXT(1)="STS protocol automated update."
"RTN","PXRMSTS",319,0)
 S TEXT(2)="Finding number "_FI_" changed to RT."_$P(TERM,";",2)_"."
"RTN","PXRMSTS",320,0)
 D UPEHIST^PXRMUTIL(811.9,IEN,.TEXT,.EMSG)
"RTN","PXRMSTS",321,0)
 I $D(EMSG) D
"RTN","PXRMSTS",322,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  Edit history update failed."
"RTN","PXRMSTS",323,0)
 . D AERRMSG(.EMSG,.NL)
"RTN","PXRMSTS",324,0)
 Q
"RTN","PXRMSTS",325,0)
 ;
"RTN","PXRMSTS",326,0)
 ;==============================
"RTN","PXRMSTS",327,0)
STATUSTX(MAPACT,FILENUM,FIEN,REPA,REPB,STATUS,NL) ;Generate the status text.
"RTN","PXRMSTS",328,0)
 N ABBR,FNAME,NAME,RFNAME,RFNUM,RIEN,RNAME,TEMP
"RTN","PXRMSTS",329,0)
 S FNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMSTS",330,0)
 S NAME=$$GET1^DIQ(FILENUM,FIEN,.01)
"RTN","PXRMSTS",331,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",332,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="======================================================"
"RTN","PXRMSTS",333,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=FNAME_" entry "_NAME_" status is "_$P(STATUS,U,3)
"RTN","PXRMSTS",334,0)
 I MAPACT="M" D
"RTN","PXRMSTS",335,0)
 . S RIEN=$P(REPA,";",1)
"RTN","PXRMSTS",336,0)
 . S RFNUM=$P(REPA,";",2)
"RTN","PXRMSTS",337,0)
 . S RFNAME=$$GET1^DID(RFNUM,"","","NAME")
"RTN","PXRMSTS",338,0)
 . S RNAME=$$GET1^DIQ(RFNUM,RIEN,.01)
"RTN","PXRMSTS",339,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Its replacement is "_RFNAME_"; "_RNAME_"."
"RTN","PXRMSTS",340,0)
 I MAPACT="U" D
"RTN","PXRMSTS",341,0)
 . S RIEN=$P(REPB,";",1)
"RTN","PXRMSTS",342,0)
 . S RFNUM=$P(REPB,";",2)
"RTN","PXRMSTS",343,0)
 . S RFNAME=$$GET1^DID(RFNUM,"","","NAME")
"RTN","PXRMSTS",344,0)
 . S RNAME=$$GET1^DIQ(RFNUM,RIEN,.01)
"RTN","PXRMSTS",345,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" It is being unmapped; originally mapped to "_RFNAME_"; "_RNAME_"."
"RTN","PXRMSTS",346,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" This finding may need to be manually removed."
"RTN","PXRMSTS",347,0)
 Q
"RTN","PXRMSTS",348,0)
 ;
"RTN","PXRMSTS",349,0)
 ;==============================
"RTN","PXRMSTS",350,0)
TERM(FILENUM,GBL,FIEN,REP,MAPACT,NL) ;Search all reminder terms for any
"RTN","PXRMSTS",351,0)
 ;that are using this finding, defined by the global (GBL) and the
"RTN","PXRMSTS",352,0)
 ;IEN (FIEN).
"RTN","PXRMSTS",353,0)
 N FI,IEN,TERM
"RTN","PXRMSTS",354,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",355,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" It is used in the following terms:"
"RTN","PXRMSTS",356,0)
 I '$D(^TMP($J,"FDATA",FILENUM,FIEN,"TERM")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMSTS",357,0)
 S IEN=0
"RTN","PXRMSTS",358,0)
 F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,"TERM",IEN)) Q:IEN=""  D
"RTN","PXRMSTS",359,0)
 . S TERM=$P(^PXRMD(811.5,IEN,0),U,1)
"RTN","PXRMSTS",360,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMSTS",361,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  "_TERM_" IEN="_IEN
"RTN","PXRMSTS",362,0)
 . S FI=""
"RTN","PXRMSTS",363,0)
 . F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,"TERM",IEN,FI)) Q:FI=""  D
"RTN","PXRMSTS",364,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Finding number "_FI
"RTN","PXRMSTS",365,0)
 .. I MAPACT="M" D ATFND(IEN,FI,REP,.NL)
"RTN","PXRMSTS",366,0)
 Q
"RTN","PXRMSTS",367,0)
 ;
"RTN","PXRMSTS",368,0)
 ;==============================
"RTN","PXRMSTS",369,0)
UNKNOWN(TYPE,NL) ;Unknown event type.
"RTN","PXRMSTS",370,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TYPE_" is an unknown event type."
"RTN","PXRMSTS",371,0)
 Q
"RTN","PXRMSTS",372,0)
 ;
"RTN","PXRMSXRM")
0^123^B51532846
"RTN","PXRMSXRM",1,0)
PXRMSXRM ; SLC/PKR - Main driver for building indexes. ;05/10/2014
"RTN","PXRMSXRM",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,17,26**;Feb 04, 2005;Build 404
"RTN","PXRMSXRM",3,0)
 ;
"RTN","PXRMSXRM",4,0)
 ;==========================================
"RTN","PXRMSXRM",5,0)
ADDERROR(GLOBAL,IDEN,NERROR) ;Add to the error list.
"RTN","PXRMSXRM",6,0)
 S NERROR=NERROR+1
"RTN","PXRMSXRM",7,0)
 S ^TMP("PXRMERROR",$J,NERROR,0)="GLOBAL: "_GLOBAL_" ENTRY: "_IDEN
"RTN","PXRMSXRM",8,0)
 Q
"RTN","PXRMSXRM",9,0)
 ;
"RTN","PXRMSXRM",10,0)
 ;==========================================
"RTN","PXRMSXRM",11,0)
ASKTASK() ;See if this should be tasked.
"RTN","PXRMSXRM",12,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMSXRM",13,0)
 S DIR(0)="YO"
"RTN","PXRMSXRM",14,0)
 S DIR("A")="Do you want this to be tasked"
"RTN","PXRMSXRM",15,0)
 S DIR("B")="Y"
"RTN","PXRMSXRM",16,0)
 D ^DIR
"RTN","PXRMSXRM",17,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMSXRM",18,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","PXRMSXRM",19,0)
 Q Y
"RTN","PXRMSXRM",20,0)
 ;
"RTN","PXRMSXRM",21,0)
 ;==========================================
"RTN","PXRMSXRM",22,0)
COMMSG(GLOBAL,START,END,NE,NERROR) ;Send a MailMan message providing
"RTN","PXRMSXRM",23,0)
 ;notification that the indexing completed.
"RTN","PXRMSXRM",24,0)
 N FROM,MGIEN,MGROUP,TO,XMSUB
"RTN","PXRMSXRM",25,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMSXRM",26,0)
 S XMSUB="Index for global "_GLOBAL_" successfully built"
"RTN","PXRMSXRM",27,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Build of Clinical Reminders index for global "_GLOBAL_" completed."
"RTN","PXRMSXRM",28,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Build finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMSXRM",29,0)
 S ^TMP("PXRMXMZ",$J,3,0)=NE_" entries were created."
"RTN","PXRMSXRM",30,0)
 S ^TMP("PXRMXMZ",$J,4,0)=$$ETIME(START,END)
"RTN","PXRMSXRM",31,0)
 S ^TMP("PXRMXMZ",$J,5,0)=NERROR_" errors were encountered."
"RTN","PXRMSXRM",32,0)
 I NERROR>0 S ^TMP("PXRMXMZ",$J,6,0)="Another MailMan message will contain the error information."
"RTN","PXRMSXRM",33,0)
 S FROM=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMSXRM",34,0)
 S TO(DUZ)=""
"RTN","PXRMSXRM",35,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMSXRM",36,0)
 I MGIEN'="" D
"RTN","PXRMSXRM",37,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMSXRM",38,0)
 . S TO(MGROUP)=""
"RTN","PXRMSXRM",39,0)
 D SEND^PXRMMSG("PXRMXMZ",XMSUB,.TO,FROM)
"RTN","PXRMSXRM",40,0)
 Q
"RTN","PXRMSXRM",41,0)
 ;
"RTN","PXRMSXRM",42,0)
 ;==========================================
"RTN","PXRMSXRM",43,0)
DETIME(START,END) ;Write out the elapsed time.
"RTN","PXRMSXRM",44,0)
 ;START and END are $H times.
"RTN","PXRMSXRM",45,0)
 N TEXT
"RTN","PXRMSXRM",46,0)
 S TEXT=$$ETIME(START,END)
"RTN","PXRMSXRM",47,0)
 D MES^XPDUTL(TEXT)
"RTN","PXRMSXRM",48,0)
 Q
"RTN","PXRMSXRM",49,0)
 ;
"RTN","PXRMSXRM",50,0)
 ;==========================================
"RTN","PXRMSXRM",51,0)
ERRMSG(NERROR,GLOBAL) ;If there were errors send an error message.
"RTN","PXRMSXRM",52,0)
 N END,FROM,IND,MAXERR,MGIEN,MGROUP,NE,TO,XMSUB
"RTN","PXRMSXRM",53,0)
 I NERROR=0 Q
"RTN","PXRMSXRM",54,0)
 ;Return the last MAXERR errors
"RTN","PXRMSXRM",55,0)
 S MAXERR=+$G(^PXRM(800,1,"MIERR"))
"RTN","PXRMSXRM",56,0)
 I MAXERR=0 S MAXERR=200
"RTN","PXRMSXRM",57,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMSXRM",58,0)
 S END=$S(NERROR'>MAXERR:NERROR,1:MAXERR)
"RTN","PXRMSXRM",59,0)
 S NE=NERROR+1
"RTN","PXRMSXRM",60,0)
 F IND=1:1:END S NE=NE-1,^TMP("PXRMXMZ",$J,IND,0)=^TMP("PXRMERROR",$J,NE,0)
"RTN","PXRMSXRM",61,0)
 I END=MAXERR S ^TMP("PXRMXMZ",$J,MAXERR+1,0)="GLOBAL: "_GLOBAL_"- Maximum number of errors reached, will not report any more."
"RTN","PXRMSXRM",62,0)
 K ^TMP("PXRMERROR",$J)
"RTN","PXRMSXRM",63,0)
 S XMSUB="CLINICAL REMINDER INDEX BUILD ERROR(S) FOR GLOBAL "_GLOBAL
"RTN","PXRMSXRM",64,0)
 S FROM=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMSXRM",65,0)
 S TO(DUZ)=""
"RTN","PXRMSXRM",66,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMSXRM",67,0)
 I MGIEN'="" D
"RTN","PXRMSXRM",68,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMSXRM",69,0)
 . S TO(MGROUP)=""
"RTN","PXRMSXRM",70,0)
 D SEND^PXRMMSG("PXRMXMZ",XMSUB,.TO,FROM)
"RTN","PXRMSXRM",71,0)
 Q
"RTN","PXRMSXRM",72,0)
 ;
"RTN","PXRMSXRM",73,0)
 ;==========================================
"RTN","PXRMSXRM",74,0)
ETIME(START,END) ;Calculate and format the elapsed time.
"RTN","PXRMSXRM",75,0)
 ;START and END are $H times.
"RTN","PXRMSXRM",76,0)
 N ETIME,TEXT
"RTN","PXRMSXRM",77,0)
 S ETIME=$$HDIFF^XLFDT(END,START,2)
"RTN","PXRMSXRM",78,0)
 I ETIME>90 D
"RTN","PXRMSXRM",79,0)
 . S ETIME=$$HDIFF^XLFDT(END,START,3)
"RTN","PXRMSXRM",80,0)
 . S TEXT="Elapsed time: "_ETIME
"RTN","PXRMSXRM",81,0)
 E  S TEXT="Elapsed time: "_ETIME_" secs"
"RTN","PXRMSXRM",82,0)
 Q TEXT
"RTN","PXRMSXRM",83,0)
 ;
"RTN","PXRMSXRM",84,0)
 ;==========================================
"RTN","PXRMSXRM",85,0)
INDEX ;Driver for building the various indexes.
"RTN","PXRMSXRM",86,0)
 N ANS,GBL,LIST,ROUTINE,TASKIT
"RTN","PXRMSXRM",87,0)
 S ROUTINE(45)="INDEX^DGPTDDCR" ;DBIA #4521
"RTN","PXRMSXRM",88,0)
 S ROUTINE(52)="PSRX^PSOPXRMI"  ;DBIA #4522
"RTN","PXRMSXRM",89,0)
 S ROUTINE(55)="PSPA^PSSSXRD"   ;DBIA #4172
"RTN","PXRMSXRM",90,0)
 S ROUTINE(63)="LAB^LRPXSXRL"   ;DBIA #4247
"RTN","PXRMSXRM",91,0)
 S ROUTINE(70)="RAD^RAPXRM"     ;DBIA #3731
"RTN","PXRMSXRM",92,0)
 S ROUTINE(100)="INDEX^ORPXRM"  ;DBIA #4498
"RTN","PXRMSXRM",93,0)
 S ROUTINE(120.5)="VITALS^GMVPXRM"  ;DBIA #3647
"RTN","PXRMSXRM",94,0)
 S ROUTINE(601.2)="INDEX^YTPXRM" ;DBIA #4523
"RTN","PXRMSXRM",95,0)
 S ROUTINE(601.84)="INDEX^YTQPXRM" ;DBIA #5055
"RTN","PXRMSXRM",96,0)
 S ROUTINE(9000011)="INDEX^GMPLPXRM" ;DBIA #4516
"RTN","PXRMSXRM",97,0)
 S ROUTINE(9000010.07)="VPOV^PXPXRMI2" ;DBIA #4520
"RTN","PXRMSXRM",98,0)
 S ROUTINE(9000010.11)="VIMM^PXPXRMI1" ;DBIA #4519
"RTN","PXRMSXRM",99,0)
 S ROUTINE(9000010.12)="VSK^PXPXRMI2"  ;DBIA #4520
"RTN","PXRMSXRM",100,0)
 S ROUTINE(9000010.13)="VXAM^PXPXRMI2" ;DBIA #4520
"RTN","PXRMSXRM",101,0)
 S ROUTINE(9000010.16)="VPED^PXPXRMI2" ;DBIA #4520
"RTN","PXRMSXRM",102,0)
 S ROUTINE(9000010.18)="VCPT^PXPXRMI1" ;DBIA #4519
"RTN","PXRMSXRM",103,0)
 S ROUTINE(9000010.23)="VHF^PXPXRMI1"  ;DBIA #4519
"RTN","PXRMSXRM",104,0)
 W !,"Rebuilding an index will stop all evaluation, dialogs,"
"RTN","PXRMSXRM",105,0)
 W !,"reminder order checks, and anything using reminder evaluation!"
"RTN","PXRMSXRM",106,0)
 W !,"Are you sure you want to proceed?"
"RTN","PXRMSXRM",107,0)
 S ANS=$$ASKYN^PXRMEUT("N","Rebuild index and disable reminder evaluation")
"RTN","PXRMSXRM",108,0)
 I 'ANS Q
"RTN","PXRMSXRM",109,0)
 ;Get the list
"RTN","PXRMSXRM",110,0)
 W !,"Which indexes do you want to (re)build?"
"RTN","PXRMSXRM",111,0)
 D SEL(.LIST,.GBL)
"RTN","PXRMSXRM",112,0)
 I LIST="" Q
"RTN","PXRMSXRM",113,0)
 ;See if this should be tasked.
"RTN","PXRMSXRM",114,0)
 S TASKIT=$$ASKTASK
"RTN","PXRMSXRM",115,0)
 I TASKIT="" Q
"RTN","PXRMSXRM",116,0)
 ;Disable some PXRM options and protocols.
"RTN","PXRMSXRM",117,0)
 D OPTIONS^PXRMDIEV("index rebuild")
"RTN","PXRMSXRM",118,0)
 D PROTCOLS^PXRMDIEV("index rebuild")
"RTN","PXRMSXRM",119,0)
 I TASKIT D
"RTN","PXRMSXRM",120,0)
 . W !,"Queue the Clinical Reminders index job."
"RTN","PXRMSXRM",121,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMSXRM",122,0)
 E  D RUNNOW(LIST,.GBL,.ROUTINE)
"RTN","PXRMSXRM",123,0)
 Q
"RTN","PXRMSXRM",124,0)
 ;
"RTN","PXRMSXRM",125,0)
 ;==========================================
"RTN","PXRMSXRM",126,0)
RUNNOW(LIST,GBL,ROUTINE) ;Run the routines now.
"RTN","PXRMSXRM",127,0)
 N IND,LI,NUM,RTN
"RTN","PXRMSXRM",128,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMSXRM",129,0)
 F IND=1:1:NUM D
"RTN","PXRMSXRM",130,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMSXRM",131,0)
 . S RTN=ROUTINE(GBL(LI))
"RTN","PXRMSXRM",132,0)
 . D @RTN
"RTN","PXRMSXRM",133,0)
 . D INDEXD^PXRMDIEV(GBL(LI))
"RTN","PXRMSXRM",134,0)
 Q
"RTN","PXRMSXRM",135,0)
 ;
"RTN","PXRMSXRM",136,0)
 ;==========================================
"RTN","PXRMSXRM",137,0)
SEL(LIST,GBL) ;Select global list
"RTN","PXRMSXRM",138,0)
 N ALIST,DIR,DIROUT,DIRUT,DTOUT,DUOUT,INUM,X,Y
"RTN","PXRMSXRM",139,0)
 S INUM=1,ALIST(INUM)="  "_INUM_" - LABORATORY TEST (CH, Anatomic Path, Micro)",GBL(INUM)=63
"RTN","PXRMSXRM",140,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - MENTAL HEALTH",GBL(INUM)=601.2
"RTN","PXRMSXRM",141,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - MENTAL HEALTH (MHA3)",GBL(INUM)=601.84
"RTN","PXRMSXRM",142,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - ORDER",GBL(INUM)=100
"RTN","PXRMSXRM",143,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - PTF",GBL(INUM)=45
"RTN","PXRMSXRM",144,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - PHARMACY PATIENT",GBL(INUM)=55
"RTN","PXRMSXRM",145,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - PRESCRIPTION",GBL(INUM)=52
"RTN","PXRMSXRM",146,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - PROBLEM LIST",GBL(INUM)=9000011
"RTN","PXRMSXRM",147,0)
 S INUM=INUM+1,ALIST(INUM)="  "_INUM_" - RADIOLOGY",GBL(INUM)=70
"RTN","PXRMSXRM",148,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V CPT",GBL(INUM)=9000010.18
"RTN","PXRMSXRM",149,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V EXAM",GBL(INUM)=9000010.13
"RTN","PXRMSXRM",150,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V HEALTH FACTORS",GBL(INUM)=9000010.23
"RTN","PXRMSXRM",151,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V IMMUNIZATION",GBL(INUM)=9000010.11
"RTN","PXRMSXRM",152,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V PATIENT ED",GBL(INUM)=9000010.16
"RTN","PXRMSXRM",153,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V POV",GBL(INUM)=9000010.07
"RTN","PXRMSXRM",154,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - V SKIN TEST",GBL(INUM)=9000010.12
"RTN","PXRMSXRM",155,0)
 S INUM=INUM+1,ALIST(INUM)=" "_INUM_" - VITAL MEASUREMENT",GBL(INUM)=120.5
"RTN","PXRMSXRM",156,0)
 M DIR("A")=ALIST
"RTN","PXRMSXRM",157,0)
 S DIR("A")="Enter your list"
"RTN","PXRMSXRM",158,0)
 S DIR(0)="LO^1:"_INUM
"RTN","PXRMSXRM",159,0)
 D ^DIR
"RTN","PXRMSXRM",160,0)
 I $D(DIROUT)!$D(DIRUT) S LIST="" Q
"RTN","PXRMSXRM",161,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMSXRM",162,0)
 S LIST=Y
"RTN","PXRMSXRM",163,0)
 Q
"RTN","PXRMSXRM",164,0)
 ;
"RTN","PXRMSXRM",165,0)
 ;==========================================
"RTN","PXRMSXRM",166,0)
TASKIT(LIST,GBL,ROUTINE) ;Build the indexes as a tasked job.
"RTN","PXRMSXRM",167,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMSXRM",168,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMSXRM",169,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMSXRM",170,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMSXRM",171,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMSXRM",172,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMSXRM",173,0)
 D ^DIR
"RTN","PXRMSXRM",174,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMSXRM",175,0)
 I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMSXRM",176,0)
 S SDTIME=Y
"RTN","PXRMSXRM",177,0)
 ;Put the task into the queue.
"RTN","PXRMSXRM",178,0)
 K ZTSAVE
"RTN","PXRMSXRM",179,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMSXRM",180,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMSXRM",181,0)
 S ZTSAVE("ROUTINE(")=""
"RTN","PXRMSXRM",182,0)
 S ZTRTN="TASKJOB^PXRMSXRM"
"RTN","PXRMSXRM",183,0)
 S ZTDESC="Clinical Reminders index build"
"RTN","PXRMSXRM",184,0)
 S ZTDTH=SDTIME
"RTN","PXRMSXRM",185,0)
 S ZTIO=""
"RTN","PXRMSXRM",186,0)
 D ^%ZTLOAD
"RTN","PXRMSXRM",187,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMSXRM",188,0)
 Q
"RTN","PXRMSXRM",189,0)
 ;
"RTN","PXRMSXRM",190,0)
 ;==========================================
"RTN","PXRMSXRM",191,0)
TASKJOB ;Execute as tasked job. LIST, GBL, and ROUTINE come through
"RTN","PXRMSXRM",192,0)
 ;ZTSAVE.
"RTN","PXRMSXRM",193,0)
 N IND,LI,NUM,RTN
"RTN","PXRMSXRM",194,0)
 S ZTREQ="@"
"RTN","PXRMSXRM",195,0)
 S ZTSTOP=0
"RTN","PXRMSXRM",196,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMSXRM",197,0)
 F IND=1:1:NUM D
"RTN","PXRMSXRM",198,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMSXRM",199,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMSXRM",200,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMSXRM",201,0)
 . S RTN=ROUTINE(GBL(LI))
"RTN","PXRMSXRM",202,0)
 . D @RTN
"RTN","PXRMSXRM",203,0)
 . D INDEXD^PXRMDIEV(GBL(LI))
"RTN","PXRMSXRM",204,0)
 Q
"RTN","PXRMSXRM",205,0)
 ;
"RTN","PXRMTAX")
0^19^B60136875
"RTN","PXRMTAX",1,0)
PXRMTAX ;SLC/PKR - Handle taxonomy finding. ;09/13/2012
"RTN","PXRMTAX",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMTAX",3,0)
 ;
"RTN","PXRMTAX",4,0)
 ;==================================================
"RTN","PXRMTAX",5,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate taxonomy findings.
"RTN","PXRMTAX",6,0)
 N FIEVT,FINDPA,FINDING
"RTN","PXRMTAX",7,0)
 N TAXIEN
"RTN","PXRMTAX",8,0)
 S TAXIEN=""
"RTN","PXRMTAX",9,0)
 F  S TAXIEN=$O(DEFARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",10,0)
 . S FINDING=""
"RTN","PXRMTAX",11,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,TAXIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTAX",12,0)
 .. K FINDPA
"RTN","PXRMTAX",13,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMTAX",14,0)
 .. K FIEVT
"RTN","PXRMTAX",15,0)
 .. D FIEVAL(DFN,TAXIEN,.FINDPA,.FIEVT)
"RTN","PXRMTAX",16,0)
 .. M FIEVAL(FINDING)=FIEVT
"RTN","PXRMTAX",17,0)
 Q
"RTN","PXRMTAX",18,0)
 ;
"RTN","PXRMTAX",19,0)
 ;==================================================
"RTN","PXRMTAX",20,0)
EVALPL(FINDPA,ENODE,TERMARR,PLIST) ;Evaluate taxonomy terms for
"RTN","PXRMTAX",21,0)
 ;building patient lists.
"RTN","PXRMTAX",22,0)
 N PFIND3,PFIND4,PFINDPA,TAXIEN
"RTN","PXRMTAX",23,0)
 N TFINDPA,TFINDING
"RTN","PXRMTAX",24,0)
 S TAXIEN=""
"RTN","PXRMTAX",25,0)
 F  S TAXIEN=$O(TERMARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",26,0)
 . S TFINDING=""
"RTN","PXRMTAX",27,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",28,0)
 .. K PFINDPA,TFINDPA
"RTN","PXRMTAX",29,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMTAX",30,0)
 ..;Set the finding parameters.
"RTN","PXRMTAX",31,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMTAX",32,0)
 .. D GPLIST(TAXIEN,.PFINDPA,PLIST)
"RTN","PXRMTAX",33,0)
 Q
"RTN","PXRMTAX",34,0)
 ;
"RTN","PXRMTAX",35,0)
 ;==================================================
"RTN","PXRMTAX",36,0)
EVALTERM(DFN,FINDPA,ENODE,TERMARR,TFIEVAL) ;Evaluate taxonomy
"RTN","PXRMTAX",37,0)
 ;terms.
"RTN","PXRMTAX",38,0)
 N FIEVT,PFINDPA
"RTN","PXRMTAX",39,0)
 N TAXIEN,TFINDPA,TFINDING
"RTN","PXRMTAX",40,0)
 S TAXIEN=""
"RTN","PXRMTAX",41,0)
 F  S TAXIEN=$O(TERMARR("E",ENODE,TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",42,0)
 . S TFINDING=""
"RTN","PXRMTAX",43,0)
 . F  S TFINDING=$O(TERMARR("E",ENODE,TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",44,0)
 .. K FIEVT,PFINDPA,TFINDPA
"RTN","PXRMTAX",45,0)
 .. M TFINDPA=TERMARR(20,TFINDING)
"RTN","PXRMTAX",46,0)
 ..;Set the finding parameters.
"RTN","PXRMTAX",47,0)
 .. D SPFINDPA^PXRMTERM(.FINDPA,.TFINDPA,.PFINDPA)
"RTN","PXRMTAX",48,0)
 .. D FIEVAL(DFN,TAXIEN,.PFINDPA,.FIEVT)
"RTN","PXRMTAX",49,0)
 .. M TFIEVAL(TFINDING)=FIEVT
"RTN","PXRMTAX",50,0)
 Q
"RTN","PXRMTAX",51,0)
 ;
"RTN","PXRMTAX",52,0)
 ;==================================================
"RTN","PXRMTAX",53,0)
FIEVAL(DFN,TAXIEN,FINDPA,FIEVAL) ;
"RTN","PXRMTAX",54,0)
 N BDT,CASESEN,CODE,CODESYS,COND,CONVAL,DAS,DATE,EDT,ENS
"RTN","PXRMTAX",55,0)
 N FIEVT,FILENUM,FLIST,ICOND,IND,INS,INVFD
"RTN","PXRMTAX",56,0)
 N NFOUND,NGET,NOCC,NP,PLS
"RTN","PXRMTAX",57,0)
 N RAS,SAVE,SDIR,STATUSA,TAXARR,TLIST,UCIFS,USEINP,VSLIST
"RTN","PXRMTAX",58,0)
 ;Set the finding search parameters.
"RTN","PXRMTAX",59,0)
 D SSPAR^PXRMUTIL(FINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMTAX",60,0)
 I $G(PXRMDEBG) S FIEVAL("BDTE")=BDT,FIEVAL("EDTE")=EDT
"RTN","PXRMTAX",61,0)
 S INVFD=$P(FINDPA(0),U,16)
"RTN","PXRMTAX",62,0)
 D TAX^PXRMLDR(TAXIEN,.TAXARR)
"RTN","PXRMTAX",63,0)
 D SCPAR^PXRMCOND(.FINDPA,.CASESEN,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMTAX",64,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTAX",65,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTAX",66,0)
 S NGET=$S(UCIFS:50,1:NOCC)
"RTN","PXRMTAX",67,0)
 ;
"RTN","PXRMTAX",68,0)
 ;Each TLIST entry returned by the FPDAT entry points should be:
"RTN","PXRMTAX",69,0)
 ;DAS^DATE^CODESYS^CODE^NODE
"RTN","PXRMTAX",70,0)
 ;
"RTN","PXRMTAX",71,0)
 I TAXARR("APDS",45,"NNODES")>0 D FPDAT^PXRMDGPT(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.TLIST)
"RTN","PXRMTAX",72,0)
 ;
"RTN","PXRMTAX",73,0)
 I TAXARR("APDS",9000010.07,"NNODES")>0 D FPDAT^PXRMVPOV(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.TLIST)
"RTN","PXRMTAX",74,0)
 ;
"RTN","PXRMTAX",75,0)
 I TAXARR("APDS",9000011,"NNODES")>0 D
"RTN","PXRMTAX",76,0)
 . K STATUSA
"RTN","PXRMTAX",77,0)
 . D GETSTATI^PXRMSTAT(9000011,.FINDPA,.STATUSA)
"RTN","PXRMTAX",78,0)
 . D FPDAT^PXRMPROB(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.STATUSA,.TLIST)
"RTN","PXRMTAX",79,0)
 ;
"RTN","PXRMTAX",80,0)
 I (TAXARR("APDS",9000010.18,"NNODES")>0) D FPDAT^PXRMVCPT(DFN,.TAXARR,NGET,SDIR,BDT,EDT,.TLIST)
"RTN","PXRMTAX",81,0)
 ;
"RTN","PXRMTAX",82,0)
 I (TAXARR("APDS",71,"NNODES")>0) D
"RTN","PXRMTAX",83,0)
 . K STATUSA
"RTN","PXRMTAX",84,0)
 . D GETSTATI^PXRMSTAT(70,.FINDPA,.STATUSA)
"RTN","PXRMTAX",85,0)
 . D FPDAT^PXRMRCPT(DFN,.TAXARR,NOCC,BDT,EDT,.STATUSA,.TLIST)
"RTN","PXRMTAX",86,0)
 ;
"RTN","PXRMTAX",87,0)
 ;Process the found list, returning up to NOCC date ordered results.
"RTN","PXRMTAX",88,0)
 S DATE="",NFOUND=0
"RTN","PXRMTAX",89,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",90,0)
 . S IND=0
"RTN","PXRMTAX",91,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",92,0)
 .. S FILENUM=0
"RTN","PXRMTAX",93,0)
 .. F  S FILENUM=$O(TLIST(DATE,IND,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",94,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMTAX",95,0)
 ... S FLIST(NFOUND)=FILENUM_U_TLIST(DATE,IND,FILENUM)
"RTN","PXRMTAX",96,0)
 I NFOUND=0 S FIEVAL=0 Q
"RTN","PXRMTAX",97,0)
 S NP=0
"RTN","PXRMTAX",98,0)
 F IND=1:1:NFOUND Q:NP=NOCC  D
"RTN","PXRMTAX",99,0)
 . S FILENUM=$P(FLIST(IND),U,1)
"RTN","PXRMTAX",100,0)
 . S DAS=$P(FLIST(IND),U,2)
"RTN","PXRMTAX",101,0)
 . D GETDATA^PXRMDATA(FILENUM,DAS,.FIEVT)
"RTN","PXRMTAX",102,0)
 . I $D(FIEVT("VISIT")) D GETDATA^PXRMVSIT(FIEVT("VISIT"),.FIEVT,0)
"RTN","PXRMTAX",103,0)
 . S FIEVT("DATE")=$P(FLIST(IND),U,3)
"RTN","PXRMTAX",104,0)
 . S FIEVT("CODESYS")=$P(FLIST(IND),U,4)
"RTN","PXRMTAX",105,0)
 . S FIEVT("CODE")=$P(FLIST(IND),U,5)
"RTN","PXRMTAX",106,0)
 . S FIEVT("NODE")=$P(FLIST(IND),U,6)
"RTN","PXRMTAX",107,0)
 . S CONVAL=$S(COND'="":$$COND^PXRMCOND(CASESEN,ICOND,VSLIST,.FIEVT),1:1)
"RTN","PXRMTAX",108,0)
 . S SAVE=$S('UCIFS:1,(UCIFS&CONVAL):1,1:0)
"RTN","PXRMTAX",109,0)
 . I SAVE D
"RTN","PXRMTAX",110,0)
 .. S NP=NP+1
"RTN","PXRMTAX",111,0)
 .. S FIEVAL(NP)=CONVAL
"RTN","PXRMTAX",112,0)
 .. I COND'="" S FIEVAL(NP,"CONDITION")=CONVAL
"RTN","PXRMTAX",113,0)
 .. S FIEVAL(NP,"DAS")=DAS
"RTN","PXRMTAX",114,0)
 .. S FIEVAL(NP,"DATE")=FIEVT("DATE")
"RTN","PXRMTAX",115,0)
 .. S FIEVAL(NP,"FILE NUMBER")=FILENUM
"RTN","PXRMTAX",116,0)
 .. S FIEVAL(NP,"FILE SPECIFIC")=$P(FLIST(IND),U,6,10)
"RTN","PXRMTAX",117,0)
 .. S FIEVAL(NP,"FINDING")=TAXIEN_";PXD(811.2,"
"RTN","PXRMTAX",118,0)
 .. M FIEVAL(NP)=FIEVT
"RTN","PXRMTAX",119,0)
 .. I $G(PXRMDEBG) M FIEVAL(NP,"CSUB")=FIEVT
"RTN","PXRMTAX",120,0)
 ;Save the finding result.
"RTN","PXRMTAX",121,0)
 D SFRES^PXRMUTIL(SDIR,NP,.FIEVAL)
"RTN","PXRMTAX",122,0)
 Q
"RTN","PXRMTAX",123,0)
 ;
"RTN","PXRMTAX",124,0)
 ;==================================================
"RTN","PXRMTAX",125,0)
GPLIST(TAXIEN,FINDPA,PLIST) ;Get the list of patients with
"RTN","PXRMTAX",126,0)
 ;taxonomy TAXIEN. Return the list as:
"RTN","PXRMTAX",127,0)
 ; ^TMP($J,PLIST,T/F,DFN,TAXIEN,COUNT,FILE NUMBER)
"RTN","PXRMTAX",128,0)
 ; =DAS^DATE^CODE^TYPE^file specific. TAXIEN is like the item for
"RTN","PXRMTAX",129,0)
 ;non-taxonomy findings.
"RTN","PXRMTAX",130,0)
 N BDT,COND,DATE,DFN,DLIST,EDT,ENS,FILENUM
"RTN","PXRMTAX",131,0)
 N ICOND,IND,INS,IPLIST
"RTN","PXRMTAX",132,0)
 N NF,NFOUND,NF,NGET,NOCC
"RTN","PXRMTAX",133,0)
 N PLS,RAS,STATUSA,UCIFS,USEINP,TAXARR,TF,TLIST,VSLIST
"RTN","PXRMTAX",134,0)
 ;Set the finding search parameters.
"RTN","PXRMTAX",135,0)
 S TLIST="GPLIST_PXRMTAX"
"RTN","PXRMTAX",136,0)
 K ^TMP($J,TLIST)
"RTN","PXRMTAX",137,0)
 D SSPAR^PXRMUTIL(FINDPA(0),.NOCC,.BDT,.EDT)
"RTN","PXRMTAX",138,0)
 D TAX^PXRMLDR(TAXIEN,.TAXARR)
"RTN","PXRMTAX",139,0)
 D SCPAR^PXRMCOND(.FINDPA,.COND,.UCIFS,.ICOND,.VSLIST)
"RTN","PXRMTAX",140,0)
 ;
"RTN","PXRMTAX",141,0)
 ;Each TLIST entry returned by the GPLIST entry points should be:
"RTN","PXRMTAX",142,0)
 ;DAS^DATE^CODESYS^CODE^NODE
"RTN","PXRMTAX",143,0)
 ;
"RTN","PXRMTAX",144,0)
 I TAXARR("APDS",45,"NNODES")>0 D GPLIST^PXRMDGPT(.TAXARR,NOCC,BDT,EDT,TLIST)
"RTN","PXRMTAX",145,0)
 ;
"RTN","PXRMTAX",146,0)
 I TAXARR("APDS",9000011,"NNODES")>0 D 
"RTN","PXRMTAX",147,0)
 . K STATUSA
"RTN","PXRMTAX",148,0)
 . D GETSTATI^PXRMSTAT(9000011,.FINDPA,.STATUSA)
"RTN","PXRMTAX",149,0)
 . D GPLIST^PXRMPROB(.TAXARR,NOCC,BDT,EDT,.STATUSA,TLIST)
"RTN","PXRMTAX",150,0)
 ;
"RTN","PXRMTAX",151,0)
 I (TAXARR("APDS",9000010.07,"NNODES")>0) D GPLIST^PXRMVPOV(.TAXARR,NOCC,BDT,EDT,TLIST)
"RTN","PXRMTAX",152,0)
 ;
"RTN","PXRMTAX",153,0)
 I (TAXARR("APDS",9000010.18,"NNODES")>0) D GPLIST^PXRMVCPT(.TAXARR,NOCC,BDT,EDT,TLIST)
"RTN","PXRMTAX",154,0)
 ;
"RTN","PXRMTAX",155,0)
 I (TAXARR("APDS",71,"NNODES")>0) D GPLIST^PXRMRCPT(.TAXARR,.FINDPA,TLIST)
"RTN","PXRMTAX",156,0)
 ;Conditions for taxonomies only apply to radiology findings, this
"RTN","PXRMTAX",157,0)
 ;is taken care of in PXRMRCPT.
"RTN","PXRMTAX",158,0)
 ;
"RTN","PXRMTAX",159,0)
 ;Process the found list, return up to NOCC of the most recent entries.
"RTN","PXRMTAX",160,0)
 F TF=0,1 D
"RTN","PXRMTAX",161,0)
 . I '$D(^TMP($J,TLIST,TF)) Q
"RTN","PXRMTAX",162,0)
 . S DFN=""
"RTN","PXRMTAX",163,0)
 . F  S DFN=$O(^TMP($J,TLIST,TF,DFN)) Q:DFN=""  D
"RTN","PXRMTAX",164,0)
 .. K DLIST,IPLIST
"RTN","PXRMTAX",165,0)
 .. S NFOUND=0
"RTN","PXRMTAX",166,0)
 .. S NF=""
"RTN","PXRMTAX",167,0)
 .. F  S NF=$O(^TMP($J,TLIST,TF,DFN,NF),-1) Q:NF=""  D
"RTN","PXRMTAX",168,0)
 ... S FILENUM=0
"RTN","PXRMTAX",169,0)
 ... F  S FILENUM=$O(^TMP($J,TLIST,TF,DFN,NF,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",170,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMTAX",171,0)
 .... S DATE=$P(^TMP($J,TLIST,TF,DFN,NF,FILENUM),U,2)
"RTN","PXRMTAX",172,0)
 .... S DLIST(DATE,NFOUND)=NF_U_FILENUM
"RTN","PXRMTAX",173,0)
 ..;
"RTN","PXRMTAX",174,0)
 .. S DATE="",NFOUND=0
"RTN","PXRMTAX",175,0)
 .. F  S DATE=$O(DLIST(DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",176,0)
 ... S NF=0
"RTN","PXRMTAX",177,0)
 ... F  S NF=$O(DLIST(DATE,NF)) Q:(NF="")!(NFOUND=NOCC)  D
"RTN","PXRMTAX",178,0)
 .... S NFOUND=NFOUND+1
"RTN","PXRMTAX",179,0)
 .... S IND=$P(DLIST(DATE,NF),U,1)
"RTN","PXRMTAX",180,0)
 .... S FILENUM=$P(DLIST(DATE,NF),U,2)
"RTN","PXRMTAX",181,0)
 .... S IPLIST(TF,DFN,TAXIEN,NFOUND,FILENUM)=^TMP($J,TLIST,TF,DFN,IND,FILENUM)
"RTN","PXRMTAX",182,0)
 .. M ^TMP($J,PLIST)=IPLIST
"RTN","PXRMTAX",183,0)
 K ^TMP($J,TLIST)
"RTN","PXRMTAX",184,0)
 Q
"RTN","PXRMTAX",185,0)
 ;
"RTN","PXRMTAX",186,0)
 ;==================================================
"RTN","PXRMTAX",187,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMTAX",188,0)
 N IND,FILENUM,FNA,OCCLIST,TIFIEVAL
"RTN","PXRMTAX",189,0)
 S IND=0
"RTN","PXRMTAX",190,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  S FILENUM=IFIEVAL(IND,"FILE NUMBER"),FNA(FILENUM,IND)=""
"RTN","PXRMTAX",191,0)
 S FILENUM=""
"RTN","PXRMTAX",192,0)
 F  S FILENUM=$O(FNA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",193,0)
 . K OCCLIST
"RTN","PXRMTAX",194,0)
 . M OCCLIST=FNA(FILENUM)
"RTN","PXRMTAX",195,0)
 . I FILENUM=45 D MHVOUT^PXRMDGPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",196,0)
 . I FILENUM=70 D MHVOUT^PXRMRCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",197,0)
 . I FILENUM=9000010.07 D MHVOUT^PXRMVPOV(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",198,0)
 . I FILENUM=9000010.18 D MHVOUT^PXRMVCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",199,0)
 . I FILENUM=9000011 D MHVOUT^PXRMPROB(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTAX",200,0)
 Q
"RTN","PXRMTAX",201,0)
 ;
"RTN","PXRMTAX",202,0)
 ;==================================================
"RTN","PXRMTAX",203,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMTAX",204,0)
 ;maintenance output.
"RTN","PXRMTAX",205,0)
 N IND,FILENUM,FNA,OCCLIST,TIFIEVAL
"RTN","PXRMTAX",206,0)
 S IND=0
"RTN","PXRMTAX",207,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  S FILENUM=IFIEVAL(IND,"FILE NUMBER"),FNA(FILENUM,IND)=""
"RTN","PXRMTAX",208,0)
 S FILENUM=""
"RTN","PXRMTAX",209,0)
 F  S FILENUM=$O(FNA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMTAX",210,0)
 . K OCCLIST
"RTN","PXRMTAX",211,0)
 . M OCCLIST=FNA(FILENUM)
"RTN","PXRMTAX",212,0)
 . I FILENUM=45 D OUTPUT^PXRMDGPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",213,0)
 . I FILENUM=70 D OUTPUT^PXRMRCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",214,0)
 . I FILENUM=9000010.07 D OUTPUT^PXRMVPOV(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",215,0)
 . I FILENUM=9000010.18 D OUTPUT^PXRMVCPT(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT) Q
"RTN","PXRMTAX",216,0)
 . I FILENUM=9000011 D OUTPUT^PXRMPROB(INDENT,.OCCLIST,.IFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTAX",217,0)
 Q
"RTN","PXRMTAX",218,0)
 ;
"RTN","PXRMTAXD")
0^3^B68009180
"RTN","PXRMTAXD",1,0)
PXRMTAXD ; SLC/PKR - Routines used by taxonomy data dictionary. ;05/05/2014
"RTN","PXRMTAXD",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTAXD",3,0)
 ;
"RTN","PXRMTAXD",4,0)
 ;===================================
"RTN","PXRMTAXD",5,0)
CDINPTR(CODE) ;Input transform for code field of Use in Dialogs Code multiple.
"RTN","PXRMTAXD",6,0)
 N CODESYS,CODESYSL,DATA,RESULT,TEXT,VALID
"RTN","PXRMTAXD",7,0)
 S VALID=$$VCODE^PXRMLEX(CODE)
"RTN","PXRMTAXD",8,0)
 I 'VALID D
"RTN","PXRMTAXD",9,0)
 . S TEXT(1)="Only valid codes from a supported coding system can be entered here."
"RTN","PXRMTAXD",10,0)
 . S TEXT(2)=CODE_" is not a valid code."
"RTN","PXRMTAXD",11,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMTAXD",12,0)
 Q VALID
"RTN","PXRMTAXD",13,0)
 ;
"RTN","PXRMTAXD",14,0)
 ;========================================
"RTN","PXRMTAXD",15,0)
CHGUID(IEN,CODESYS,CODE,UID) ;For a coding system code pair in the 20
"RTN","PXRMTAXD",16,0)
 ;node change the value of UID.
"RTN","PXRMTAXD",17,0)
 N FDA,IENS,IND,JND,KND,MSG,NCHG,NUID,TERM
"RTN","PXRMTAXD",18,0)
 S NCHG=0,TERM=""
"RTN","PXRMTAXD",19,0)
 F  S TERM=$O(^PXD(811.2,IEN,20,"ATCC",TERM)) Q:TERM=""  D
"RTN","PXRMTAXD",20,0)
 . I '$D(^PXD(811.2,IEN,20,"ATCC",TERM,CODESYS,CODE)) Q
"RTN","PXRMTAXD",21,0)
 . S IND=$P(^PXD(811.2,IEN,20,"ATC",TERM,CODESYS),U,1)
"RTN","PXRMTAXD",22,0)
 . S JND=$P(^PXD(811.2,IEN,20,"ATC",TERM,CODESYS),U,2)
"RTN","PXRMTAXD",23,0)
 . S NUID=$P(^PXD(811.2,IEN,20,IND,1,JND,0),U,3)
"RTN","PXRMTAXD",24,0)
 . S KND=0
"RTN","PXRMTAXD",25,0)
 . F  S KND=+$O(^PXD(811.2,IEN,20,IND,1,JND,1,KND)) Q:KND=0  D
"RTN","PXRMTAXD",26,0)
 .. I $P(^PXD(811.2,IEN,20,IND,1,JND,1,KND,0),U,1)=CODE D
"RTN","PXRMTAXD",27,0)
 ... S NCHG=NCHG+1
"RTN","PXRMTAXD",28,0)
 ... S IENS=KND_","_JND_","_IND_","_IEN_","
"RTN","PXRMTAXD",29,0)
 ... S FDA(811.2312,IENS,1)=UID
"RTN","PXRMTAXD",30,0)
 ... I UID=0 S NUID=NUID-1
"RTN","PXRMTAXD",31,0)
 ... I UID=1 S NUID=NUID+1
"RTN","PXRMTAXD",32,0)
 .. S IENS=JND_","_IND_","_IEN_","
"RTN","PXRMTAXD",33,0)
 .. S FDA(811.231,IENS,3)=NUID
"RTN","PXRMTAXD",34,0)
 I NCHG>0 D FILE^DIE("","FDA","MSG")
"RTN","PXRMTAXD",35,0)
 Q NCHG
"RTN","PXRMTAXD",36,0)
 ;
"RTN","PXRMTAXD",37,0)
 ;===================================
"RTN","PXRMTAXD",38,0)
CSYSOPTR(CODESYS) ;Output transform for Coding System field of Use in Dialogs
"RTN","PXRMTAXD",39,0)
 ;Codes multiple.
"RTN","PXRMTAXD",40,0)
 ;DBIA #5679
"RTN","PXRMTAXD",41,0)
 Q $S($D(DDS):$P($$CSYS^LEXU(CODESYS),U,4),1:CODESYS)
"RTN","PXRMTAXD",42,0)
 ;
"RTN","PXRMTAXD",43,0)
 ;====================================
"RTN","PXRMTAXD",44,0)
INUSE(TIEN,CHKTYP) ;Check to see if a taxonomy is in use. Used for the "DEL"
"RTN","PXRMTAXD",45,0)
 ;node: ^DD(811.2,.01,"DEL",1,0) and inactivation check in
"RTN","PXRMTAXD",46,0)
 ;POSTACT^PXRMTXSM.
"RTN","PXRMTAXD",47,0)
 N FNUM,IEN,NAME,NL,TEXT,TYPE
"RTN","PXRMTAXD",48,0)
 K ^TMP($J,"TDATA"),^TMP($J,"DLG FIND")
"RTN","PXRMTAXD",49,0)
 D BLDLIST^PXRMFRPT(811.2,"PXD(811.2,",TIEN,"TDATA")
"RTN","PXRMTAXD",50,0)
 I '$D(^TMP($J,"TDATA")) K ^TMP($J,"DLG FIND") Q 0
"RTN","PXRMTAXD",51,0)
 I CHKTYP="DEL" S TEXT(1)="This taxonomy cannot be deleted, it is used by the following:"
"RTN","PXRMTAXD",52,0)
 I CHKTYP="INACT" S TEXT(1)="Warning - this taxonomy has been inactivated but, it is used by the following:"
"RTN","PXRMTAXD",53,0)
 S NL=1,TYPE=""
"RTN","PXRMTAXD",54,0)
 F  S TYPE=$O(^TMP($J,"TDATA",811.2,TIEN,TYPE)) Q:TYPE=""  D
"RTN","PXRMTAXD",55,0)
 . S FNUM=$S(TYPE="DEF":811.9,TYPE="TERM":811.5,TYPE="DIALOG":801.41,TYPE="ROC":801,TYPE="OCRULE":801.1)
"RTN","PXRMTAXD",56,0)
 . S NL=NL+1,TEXT(NL)=" "_$S(TYPE="DEF":"Definitions:",TYPE="TERM":"Terms:",TYPE="DIALOG":"Dialogs:",TYPE="ROC":"Orderable Item Groups:",TYPE="OCRULE":"Order Check Rules:",1:"")
"RTN","PXRMTAXD",57,0)
 . S IEN=""
"RTN","PXRMTAXD",58,0)
 . F  S IEN=$O(^TMP($J,"TDATA",811.2,TIEN,TYPE,IEN)) Q:IEN=""  D
"RTN","PXRMTAXD",59,0)
 .. S NL=NL+1,TEXT(NL)="  "_$$GET1^DIQ(FNUM,IEN,.01)
"RTN","PXRMTAXD",60,0)
 . S NL=NL+1,TEXT(NL)=" "
"RTN","PXRMTAXD",61,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMTAXD",62,0)
 K ^TMP($J,"TDATA"),^TMP($J,"DLG FIND")
"RTN","PXRMTAXD",63,0)
 Q 1
"RTN","PXRMTAXD",64,0)
 ;
"RTN","PXRMTAXD",65,0)
 ;========================================
"RTN","PXRMTAXD",66,0)
KENODE(DA,X) ;Kill the "AE" (coding system, code) index.
"RTN","PXRMTAXD",67,0)
 ;X(1) is the code.
"RTN","PXRMTAXD",68,0)
 N CODESYS
"RTN","PXRMTAXD",69,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",70,0)
 K ^PXD(811.2,DA(3),20,"AE",CODESYS,X(1))
"RTN","PXRMTAXD",71,0)
 Q
"RTN","PXRMTAXD",72,0)
 ;
"RTN","PXRMTAXD",73,0)
 ;========================================
"RTN","PXRMTAXD",74,0)
KILLUIDC(IEN,CODE,CODESYS) ;Remove codes from the Use In Dialogs Codes multiple
"RTN","PXRMTAXD",75,0)
 ;when Use In Dialog is false.
"RTN","PXRMTAXD",76,0)
 I '$D(^PXD(811.2,IEN,30,"ACC",CODE,CODESYS)) Q
"RTN","PXRMTAXD",77,0)
 N IENS,KFDA,MSG
"RTN","PXRMTAXD",78,0)
 S IENS=^PXD(811.2,IEN,30,"ACC",CODE,CODESYS)_","_IEN_","
"RTN","PXRMTAXD",79,0)
 S KFDA(811.24,IENS,.01)="@"
"RTN","PXRMTAXD",80,0)
 D FILE^DIE("","KFDA","MSG")
"RTN","PXRMTAXD",81,0)
 Q
"RTN","PXRMTAXD",82,0)
 ;
"RTN","PXRMTAXD",83,0)
 ;========================================
"RTN","PXRMTAXD",84,0)
KTC(DA,X) ;Kill the "ATC" (term, coding system) index.
"RTN","PXRMTAXD",85,0)
 ;X(1) is the coding system.
"RTN","PXRMTAXD",86,0)
 N TERM
"RTN","PXRMTAXD",87,0)
 S TERM=^PXD(811.2,DA(2),20,DA(1),0)
"RTN","PXRMTAXD",88,0)
 K ^PXD(811.2,DA(2),20,"ATC",TERM,X(1))
"RTN","PXRMTAXD",89,0)
 Q
"RTN","PXRMTAXD",90,0)
 ;
"RTN","PXRMTAXD",91,0)
 ;========================================
"RTN","PXRMTAXD",92,0)
KTCC(DA,X) ;KILL the "ATCC" (term, coding system, code) index.
"RTN","PXRMTAXD",93,0)
 ;X(1) is the code, X(2) is Use in Dialog.
"RTN","PXRMTAXD",94,0)
 N CODESYS,TERM
"RTN","PXRMTAXD",95,0)
 S TERM=^PXD(811.2,DA(3),20,DA(2),0)
"RTN","PXRMTAXD",96,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",97,0)
 K ^PXD(811.2,DA(3),20,"ATCC",TERM,CODESYS,X(1))
"RTN","PXRMTAXD",98,0)
 Q
"RTN","PXRMTAXD",99,0)
 ;
"RTN","PXRMTAXD",100,0)
 ;========================================
"RTN","PXRMTAXD",101,0)
KUID(DA,X) ;Kill the "AUID" Use in Dialog index and remove the code
"RTN","PXRMTAXD",102,0)
 ;from the Use In Dialogs Codes multiple.
"RTN","PXRMTAXD",103,0)
 ;X(1) is the code, X(2) is Use in Dialog.
"RTN","PXRMTAXD",104,0)
 N CODESYS
"RTN","PXRMTAXD",105,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",106,0)
 I '$D(^PXD(811.2,DA(3),20,"AUID",CODESYS,X(1))) Q
"RTN","PXRMTAXD",107,0)
 K ^PXD(811.2,DA(3),20,"AUID",CODESYS,X(1))
"RTN","PXRMTAXD",108,0)
 D KILLUIDC(DA(3),X(1),CODESYS)
"RTN","PXRMTAXD",109,0)
 Q
"RTN","PXRMTAXD",110,0)
 ;
"RTN","PXRMTAXD",111,0)
 ;========================================
"RTN","PXRMTAXD",112,0)
KUIDC(DA,X) ;When a code is deleted from the Use In Dialog Codes multiple
"RTN","PXRMTAXD",113,0)
 ;check to see if a special entry was made for this code in the
"RTN","PXRMTAXD",114,0)
 ;Selected Codes Multiple, if one is found delete it. If one is not
"RTN","PXRMTAXD",115,0)
 ;found then find the code in the Selected Codes Multiple and change
"RTN","PXRMTAXD",116,0)
 ;UID to 0.
"RTN","PXRMTAXD",117,0)
 ;X(1) is the code, X(2) is the coding system.
"RTN","PXRMTAXD",118,0)
 I '$D(^PXD(811.2,DA(1),30,"ACC",X1(1),X1(2))) Q
"RTN","PXRMTAXD",119,0)
 K ^PXD(811.2,DA(1),30,"ACC",X1(1),X1(2))
"RTN","PXRMTAXD",120,0)
 N IENS,KFDA,MSG,NCHG,TERM,TERMIND
"RTN","PXRMTAXD",121,0)
 I $D(^PXD(811.2,DA(1),20,"ATC",X1(1),X1(2))) D
"RTN","PXRMTAXD",122,0)
 . S TERMIND=$P(^PXD(811.2,DA(1),20,"ATC",X1(1),X1(2)),U,1)
"RTN","PXRMTAXD",123,0)
 . S IENS=TERMIND_","_DA(1)_","
"RTN","PXRMTAXD",124,0)
 . S KFDA(811.23,IENS,.01)="@"
"RTN","PXRMTAXD",125,0)
 . D FILE^DIE("","KFDA","MSG")
"RTN","PXRMTAXD",126,0)
 ;Search for the code in the Selected Codes Multiple and set UID=0.
"RTN","PXRMTAXD",127,0)
 S NCHG=$$CHGUID^PXRMTAXD(DA(1),X1(2),X1(1),0)
"RTN","PXRMTAXD",128,0)
 Q
"RTN","PXRMTAXD",129,0)
 ;
"RTN","PXRMTAXD",130,0)
 ;========================================
"RTN","PXRMTAXD",131,0)
RBLD20I ;Rebuild all the indexes on the 20 node.
"RTN","PXRMTAXD",132,0)
 N CODESYS,D0,D1,D2,D3,DA,NAME,TCCDA,TCCX,TEMP,UID,X
"RTN","PXRMTAXD",133,0)
 ;X(1) is the code and X(2) is UID.
"RTN","PXRMTAXD",134,0)
 D BMES^XPDUTL("Building Selected Codes multiple indexes.")
"RTN","PXRMTAXD",135,0)
 S NAME=""
"RTN","PXRMTAXD",136,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMTAXD",137,0)
 . S D0=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTAXD",138,0)
 . D MES^XPDUTL(" Taxonomy: "_NAME_"; IEN="_D0)
"RTN","PXRMTAXD",139,0)
 . K ^PXD(811.2,D0,20,"AE")
"RTN","PXRMTAXD",140,0)
 . K ^PXD(811.2,D0,20,"ATC")
"RTN","PXRMTAXD",141,0)
 . K ^PXD(811.2,D0,20,"ATCC")
"RTN","PXRMTAXD",142,0)
 . K ^PXD(811.2,D0,20,"AUID")
"RTN","PXRMTAXD",143,0)
 . S DA(3)=D0,D1=0,TCCDA(2)=D0
"RTN","PXRMTAXD",144,0)
 . F  S D1=+$O(^PXD(811.2,D0,20,D1)) Q:D1=0  D
"RTN","PXRMTAXD",145,0)
 .. S DA(2)=D1,D2=0,TCCDA(1)=D1
"RTN","PXRMTAXD",146,0)
 .. F  S D2=+$O(^PXD(811.2,D0,20,D1,1,D2)) Q:D2=0  D
"RTN","PXRMTAXD",147,0)
 ... S CODESYS=$P(^PXD(811.2,D0,20,D1,1,D2,0),U,1)
"RTN","PXRMTAXD",148,0)
 ... I $L(CODESYS)>3 D
"RTN","PXRMTAXD",149,0)
 .... S CODESYS=$E(CODESYS,1,3)
"RTN","PXRMTAXD",150,0)
 .... S $P(^PXD(811.2,D0,20,D1,1,D2,0),U,1)=CODESYS
"RTN","PXRMTAXD",151,0)
 ... S TCCX(1)=CODESYS
"RTN","PXRMTAXD",152,0)
 ... S DA(1)=D2,D3=0,TCCDA=D2
"RTN","PXRMTAXD",153,0)
 ... D STC^PXRMTAXD(.TCCDA,.TCCX)
"RTN","PXRMTAXD",154,0)
 ... F  S D3=+$O(^PXD(811.2,D0,20,D1,1,D2,1,D3)) Q:D3=0  D
"RTN","PXRMTAXD",155,0)
 .... S DA=D3
"RTN","PXRMTAXD",156,0)
 .... S TEMP=^PXD(811.2,D0,20,D1,1,D2,1,D3,0)
"RTN","PXRMTAXD",157,0)
 .... S X(1)=$P(TEMP,U,1)
"RTN","PXRMTAXD",158,0)
 .... D SENODE^PXRMTAXD(.DA,.X)
"RTN","PXRMTAXD",159,0)
 .... S X(2)=$P(TEMP,U,2)
"RTN","PXRMTAXD",160,0)
 .... D STCC^PXRMTAXD(.DA,.X)
"RTN","PXRMTAXD",161,0)
 .... I +X(2)=0 Q
"RTN","PXRMTAXD",162,0)
 .... D SUID^PXRMTAXD(.DA,.X)
"RTN","PXRMTAXD",163,0)
 Q
"RTN","PXRMTAXD",164,0)
 ;
"RTN","PXRMTAXD",165,0)
 ;========================================
"RTN","PXRMTAXD",166,0)
RBLDUID ;Rebuild the "AUID" index for all entries.
"RTN","PXRMTAXD",167,0)
 N D0,D1,D2,D3,DA,TEMP,UID,X
"RTN","PXRMTAXD",168,0)
 ;X(1) is the code and X(2) is UID.
"RTN","PXRMTAXD",169,0)
 S D0=0
"RTN","PXRMTAXD",170,0)
 F  S D0=+$O(^PXD(811.2,D0)) Q:D0=0  D
"RTN","PXRMTAXD",171,0)
 . K ^PXD(811.2,D0,20,"AUID")
"RTN","PXRMTAXD",172,0)
 . S DA(3)=D0,D1=0
"RTN","PXRMTAXD",173,0)
 . F  S D1=+$O(^PXD(811.2,D0,20,D1)) Q:D1=0  D
"RTN","PXRMTAXD",174,0)
 .. S DA(2)=D1,D2=0
"RTN","PXRMTAXD",175,0)
 .. F  S D2=+$O(^PXD(811.2,D0,20,D1,1,D2)) Q:D2=0  D
"RTN","PXRMTAXD",176,0)
 ... S DA(1)=D2,D3=0
"RTN","PXRMTAXD",177,0)
 ... F  S D3=+$O(^PXD(811.2,D0,20,D1,1,D2,1,D3)) Q:D3=0  D
"RTN","PXRMTAXD",178,0)
 .... S DA=D3
"RTN","PXRMTAXD",179,0)
 .... S TEMP=^PXD(811.2,D0,20,D1,1,D2,1,D3,0)
"RTN","PXRMTAXD",180,0)
 .... S X(1)=$P(TEMP,U,1)
"RTN","PXRMTAXD",181,0)
 .... S X(2)=$P(TEMP,U,2)
"RTN","PXRMTAXD",182,0)
 .... I +X(2)=0 Q
"RTN","PXRMTAXD",183,0)
 .... D SUID^PXRMTAXD(.DA,.X)
"RTN","PXRMTAXD",184,0)
 Q
"RTN","PXRMTAXD",185,0)
 ;
"RTN","PXRMTAXD",186,0)
 ;========================================
"RTN","PXRMTAXD",187,0)
SAVEUIDC(IEN,CODESYS,CODE) ;Save codes marked as Use In Dialog in the 
"RTN","PXRMTAXD",188,0)
 ;Use In Dialogs Codes Multiple.
"RTN","PXRMTAXD",189,0)
 ;If the coding system code pair already exists quit.
"RTN","PXRMTAXD",190,0)
 I $D(^PXD(811.2,IEN,30,"ACC",CODE,CODESYS)) Q
"RTN","PXRMTAXD",191,0)
 N IENS,FDA,MSG
"RTN","PXRMTAXD",192,0)
 S IENS="+1,"_IEN_","
"RTN","PXRMTAXD",193,0)
 S FDA(811.24,IENS,.01)=CODE
"RTN","PXRMTAXD",194,0)
 S FDA(811.24,IENS,1)=CODESYS
"RTN","PXRMTAXD",195,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMTAXD",196,0)
 Q
"RTN","PXRMTAXD",197,0)
 ;
"RTN","PXRMTAXD",198,0)
 ;========================================
"RTN","PXRMTAXD",199,0)
SENODE(DA,X) ;Set the "AE" (coding system, code) index.
"RTN","PXRMTAXD",200,0)
 ;X(1) is the code.
"RTN","PXRMTAXD",201,0)
 N CODEP,CODESYS
"RTN","PXRMTAXD",202,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",203,0)
 ;The ICD and CPT coding systems are "grandfathered" to
"RTN","PXRMTAXD",204,0)
 ;use the pointer in the Clinical Reminders Index for V CPT
"RTN","PXRMTAXD",205,0)
 ;and V POV so save the code pointer.
"RTN","PXRMTAXD",206,0)
 S CODEP=X(1)
"RTN","PXRMTAXD",207,0)
 ;DBIA #5747
"RTN","PXRMTAXD",208,0)
 I CODESYS="ICD" S CODEP=$P($$CODEN^ICDEX(X(1),80),"~",1)
"RTN","PXRMTAXD",209,0)
 I CODESYS="ICP" S CODEP=$P($$CODEN^ICDEX(X(1),80.1),"~",1)
"RTN","PXRMTAXD",210,0)
 I CODESYS="CPC" S CODEP=$P($$STATCHK^ICPTAPIU(X(1)),U,2)
"RTN","PXRMTAXD",211,0)
 I CODESYS="CPT" S CODEP=$P($$STATCHK^ICPTAPIU(X(1)),U,2)
"RTN","PXRMTAXD",212,0)
 S ^PXD(811.2,DA(3),20,"AE",CODESYS,X(1))=CODEP
"RTN","PXRMTAXD",213,0)
 Q
"RTN","PXRMTAXD",214,0)
 ;
"RTN","PXRMTAXD",215,0)
 ;========================================
"RTN","PXRMTAXD",216,0)
STC(DA,X) ;Set the "ATC" (term, coding system) index.
"RTN","PXRMTAXD",217,0)
 ;X(1) is the coding system.
"RTN","PXRMTAXD",218,0)
 N TERM
"RTN","PXRMTAXD",219,0)
 S TERM=^PXD(811.2,DA(2),20,DA(1),0)
"RTN","PXRMTAXD",220,0)
 S ^PXD(811.2,DA(2),20,"ATC",TERM,X(1))=DA(1)_U_DA
"RTN","PXRMTAXD",221,0)
 Q
"RTN","PXRMTAXD",222,0)
 ;
"RTN","PXRMTAXD",223,0)
 ;========================================
"RTN","PXRMTAXD",224,0)
STCC(DA,X) ;Set the "ATCC" (term, coding system, code) index.
"RTN","PXRMTAXD",225,0)
 ;X(1) is the code, X(2) is Use in Dialog.
"RTN","PXRMTAXD",226,0)
 N CODESYS,TERM
"RTN","PXRMTAXD",227,0)
 S TERM=^PXD(811.2,DA(3),20,DA(2),0)
"RTN","PXRMTAXD",228,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",229,0)
 S ^PXD(811.2,DA(3),20,"ATCC",TERM,CODESYS,X(1))=X(2)
"RTN","PXRMTAXD",230,0)
 Q
"RTN","PXRMTAXD",231,0)
 ;
"RTN","PXRMTAXD",232,0)
 ;========================================
"RTN","PXRMTAXD",233,0)
SUID(DA,X) ;Set the "AUID" Use in Dialog index.
"RTN","PXRMTAXD",234,0)
 ;X(1) is the code, X(2) is Use in Dialog.
"RTN","PXRMTAXD",235,0)
 N ACTDT,BDESC,CODESYS,DATA,INACTDT,LDESC,RESULT,TEMP,VP
"RTN","PXRMTAXD",236,0)
 I +X(2)=0 Q
"RTN","PXRMTAXD",237,0)
 S CODESYS=$P(^PXD(811.2,DA(3),20,DA(2),1,DA(1),0),U,1)
"RTN","PXRMTAXD",238,0)
 I $D(^PXD(811.2,DA(3),20,"AUID",CODESYS,X(1))) Q
"RTN","PXRMTAXD",239,0)
 ;DBIA #5679
"RTN","PXRMTAXD",240,0)
 S RESULT=$$PERIOD^LEXU(X(1),CODESYS,.DATA)
"RTN","PXRMTAXD",241,0)
 I +RESULT=-1 Q
"RTN","PXRMTAXD",242,0)
 S ACTDT=0
"RTN","PXRMTAXD",243,0)
 F  S ACTDT=$O(DATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXRMTAXD",244,0)
 . S TEMP=DATA(ACTDT)
"RTN","PXRMTAXD",245,0)
 . S INACTDT=$P(TEMP,U,1)
"RTN","PXRMTAXD",246,0)
 . I INACTDT="" S INACTDT="DT"
"RTN","PXRMTAXD",247,0)
 . S VP=$P(TEMP,U,3)
"RTN","PXRMTAXD",248,0)
 . S LDESC=DATA(ACTDT,0)
"RTN","PXRMTAXD",249,0)
 . S BDESC=$P(TEMP,U,4)
"RTN","PXRMTAXD",250,0)
 . I BDESC="" S BDESC=LDESC
"RTN","PXRMTAXD",251,0)
 . S ^PXD(811.2,DA(3),20,"AUID",CODESYS,X(1),ACTDT,INACTDT)=$P(VP,";",1)_U_LDESC
"RTN","PXRMTAXD",252,0)
 ;If UID=1 add the code to the Use In Dialog Codes Multiple.
"RTN","PXRMTAXD",253,0)
 ;This cannot be done if the entry is being installed by Reminder
"RTN","PXRMTAXD",254,0)
 ;Exchange because it causes an UPDATE^DIE call to make another
"RTN","PXRMTAXD",255,0)
 ;UPDATE^DIE call. The Use In Dialog Codes Multiple is built after
"RTN","PXRMTAXD",256,0)
 ;the entry is installed by a call to TAX30^PXRMEXUO.
"RTN","PXRMTAXD",257,0)
 I $G(PXRMEXCH)=1 Q
"RTN","PXRMTAXD",258,0)
 I X(2)=1 D SAVEUIDC(DA(3),CODESYS,X(1))
"RTN","PXRMTAXD",259,0)
 Q
"RTN","PXRMTAXD",260,0)
 ;
"RTN","PXRMTAXD",261,0)
 ;========================================
"RTN","PXRMTAXD",262,0)
SUIDC(DA,X) ;Copy codes from the Use in Dialog Codes multiple to the Selected
"RTN","PXRMTAXD",263,0)
 ;Codes structure.
"RTN","PXRMTAXD",264,0)
 ;X(1) is the code, X(2) is the coding system.
"RTN","PXRMTAXD",265,0)
 ;Check if this coding system code pair already exists.
"RTN","PXRMTAXD",266,0)
 I $D(^PXD(811.2,DA(1),30,"ACC",X(1),X(2))) Q
"RTN","PXRMTAXD",267,0)
 S ^PXD(811.2,DA(1),30,"ACC",X(1),X(2))=DA
"RTN","PXRMTAXD",268,0)
 I $D(^PXD(811.2,DA(1),20,"AUID",X(2),X(1))) Q
"RTN","PXRMTAXD",269,0)
 N NCHG
"RTN","PXRMTAXD",270,0)
 S NCHG=$$CHGUID^PXRMTAXD(DA(1),X(2),X(1),1)
"RTN","PXRMTAXD",271,0)
 I NCHG>0 Q
"RTN","PXRMTAXD",272,0)
 ;No instances of this code were found in the 20 node so create one.
"RTN","PXRMTAXD",273,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTAXD",274,0)
 S ^TMP("PXRMCODES",$J,X(1),X(2),X(1))=1
"RTN","PXRMTAXD",275,0)
 D SAVETC^PXRMTXIM(DA(1))
"RTN","PXRMTAXD",276,0)
 D POSTSAVE^PXRMTXSM(DA(1))
"RTN","PXRMTAXD",277,0)
 Q
"RTN","PXRMTAXD",278,0)
 ;
"RTN","PXRMTAXD",279,0)
 ;========================================
"RTN","PXRMTAXD",280,0)
TAXCOUNT(TAXIEN) ;Count the expanded taxonomy entries and set the 0 node.
"RTN","PXRMTAXD",281,0)
 ;This code is obsolete and will be removed in the taxonomy cleanup
"RTN","PXRMTAXD",282,0)
 ;patch that follows PXRM*2*26.
"RTN","PXRMTAXD",283,0)
 Q
"RTN","PXRMTAXD",284,0)
 N IEN,NUM
"RTN","PXRMTAXD",285,0)
 S (IEN,NUM)=0
"RTN","PXRMTAXD",286,0)
 F  S IEN=+$O(^PXD(811.3,IEN)) Q:IEN=0  S NUM=NUM+1
"RTN","PXRMTAXD",287,0)
 S $P(^PXD(811.3,0),U,3,4)=TAXIEN_U_NUM
"RTN","PXRMTAXD",288,0)
 Q
"RTN","PXRMTAXD",289,0)
 ;
"RTN","PXRMTAXD",290,0)
 ;========================================
"RTN","PXRMTAXD",291,0)
TAXEDIT(TAXIEN,KI) ;Whenever a taxonony item is edited rebuild the expanded
"RTN","PXRMTAXD",292,0)
 ;taxonomy. Called from new-style cross-reference on 811.2.
"RTN","PXRMTAXD",293,0)
 ;This code is obsolete and will be removed in the taxonomy cleanup
"RTN","PXRMTAXD",294,0)
 ;patch that follows PXRM*2*26.
"RTN","PXRMTAXD",295,0)
 Q
"RTN","PXRMTAXD",296,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMTAXD",297,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMTAXD",298,0)
 ;Do not execute as part of exchange.
"RTN","PXRMTAXD",299,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMTAXD",300,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAXD",301,0)
 D EXPAND^PXRMBXTL(TAXIEN,KI)
"RTN","PXRMTAXD",302,0)
 D TAXCOUNT(TAXIEN)
"RTN","PXRMTAXD",303,0)
 Q
"RTN","PXRMTAXD",304,0)
 ;
"RTN","PXRMTAXD",305,0)
 ;========================================
"RTN","PXRMTAXD",306,0)
TAXKILL(TAXIEN) ;Called whenever a taxonony item is killed. Called from new-
"RTN","PXRMTAXD",307,0)
 ;style cross-reference on 811.2.
"RTN","PXRMTAXD",308,0)
 ;This code is obsolete and will be removed in the taxonomy cleanup
"RTN","PXRMTAXD",309,0)
 ;patch that follows PXRM*2*26.
"RTN","PXRMTAXD",310,0)
 Q
"RTN","PXRMTAXD",311,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMTAXD",312,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMTAXD",313,0)
 ;Do not execute as part of exchange.
"RTN","PXRMTAXD",314,0)
 I $G(PXRMEXCH) Q
"RTN","PXRMTAXD",315,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAXD",316,0)
 D TAXCOUNT(TAXIEN)
"RTN","PXRMTAXD",317,0)
 Q
"RTN","PXRMTAXD",318,0)
 ;
"RTN","PXRMTAXL")
0^17^B59845028
"RTN","PXRMTAXL",1,0)
PXRMTAXL ;SLC/PKR - List Manager routines for Taxonomies. ;07/31/2013
"RTN","PXRMTAXL",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTAXL",3,0)
 ;
"RTN","PXRMTAXL",4,0)
 ;=========================================
"RTN","PXRMTAXL",5,0)
ADD ;Add a new entry.
"RTN","PXRMTAXL",6,0)
 D CLEAR^VALM1
"RTN","PXRMTAXL",7,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,NEW,Y
"RTN","PXRMTAXL",8,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTAXL",9,0)
 S DIC(0)="AEKLQ"
"RTN","PXRMTAXL",10,0)
 S DIC("A")="Enter a new Taxonomy Name: "
"RTN","PXRMTAXL",11,0)
 S DLAYGO=811.2
"RTN","PXRMTAXL",12,0)
 D ^DIC
"RTN","PXRMTAXL",13,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y=-1) S VALMBCK="R" Q
"RTN","PXRMTAXL",14,0)
 S NEW=$P(Y,U,3)
"RTN","PXRMTAXL",15,0)
 I 'NEW D EN^DDIOL("That entry already exists, use EDIT instead.") H 2
"RTN","PXRMTAXL",16,0)
 I NEW D
"RTN","PXRMTAXL",17,0)
 . S DA=$P(Y,U,1)
"RTN","PXRMTAXL",18,0)
 . D SMANEDIT^PXRMTXSM(DA,1,"PXRM TAXONOMY EDIT")
"RTN","PXRMTAXL",19,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",20,0)
 Q
"RTN","PXRMTAXL",21,0)
 ;
"RTN","PXRMTAXL",22,0)
 ;=========================================
"RTN","PXRMTAXL",23,0)
BLDLIST(NODE) ;Build of list of Taxomomy file entries.
"RTN","PXRMTAXL",24,0)
 N IEN,DESC,FMTSTR,IND,NAME,NL,NUM,OUTPUT,START
"RTN","PXRMTAXL",25,0)
 K ^TMP(NODE,$J)
"RTN","PXRMTAXL",26,0)
 ;Build the list in alphabetical order.
"RTN","PXRMTAXL",27,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLL")
"RTN","PXRMTAXL",28,0)
 S (NUM,VALMCNT)=0
"RTN","PXRMTAXL",29,0)
 S NAME=""
"RTN","PXRMTAXL",30,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMTAXL",31,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTAXL",32,0)
 . S NUM=NUM+1
"RTN","PXRMTAXL",33,0)
 . S ^TMP(NODE,$J,"SEL",NUM)=IEN
"RTN","PXRMTAXL",34,0)
 . S ^TMP(NODE,$J,"IEN",IEN)=NUM
"RTN","PXRMTAXL",35,0)
 . S DESC=$G(^PXD(811.2,IEN,1,1,0))
"RTN","PXRMTAXL",36,0)
 . I $L(DESC)>40 S DESC=$E(DESC,1,37)_"..."
"RTN","PXRMTAXL",37,0)
 . D FORMAT(NUM,NAME,DESC,FMTSTR,.NL,.OUTPUT)
"RTN","PXRMTAXL",38,0)
 . S START=VALMCNT+1
"RTN","PXRMTAXL",39,0)
 . F IND=1:1:NL D
"RTN","PXRMTAXL",40,0)
 .. S VALMCNT=VALMCNT+1,^TMP(NODE,$J,VALMCNT,0)=OUTPUT(IND)
"RTN","PXRMTAXL",41,0)
 .. S ^TMP(NODE,$J,"IDX",VALMCNT,NUM)=""
"RTN","PXRMTAXL",42,0)
 . S ^TMP(NODE,$J,"LINES",NUM)=START_U_VALMCNT
"RTN","PXRMTAXL",43,0)
 S ^TMP(NODE,$J,"VALMCNT")=VALMCNT
"RTN","PXRMTAXL",44,0)
 S ^TMP(NODE,$J,"NTAX")=NUM
"RTN","PXRMTAXL",45,0)
 Q
"RTN","PXRMTAXL",46,0)
 ;
"RTN","PXRMTAXL",47,0)
 ;=========================================
"RTN","PXRMTAXL",48,0)
CLOG(IEN) ;Display the edit history.
"RTN","PXRMTAXL",49,0)
 D LMCLBROW^PXRMSINQ(811.2,"110*",IEN)
"RTN","PXRMTAXL",50,0)
 Q
"RTN","PXRMTAXL",51,0)
 ;
"RTN","PXRMTAXL",52,0)
 ;=========================================
"RTN","PXRMTAXL",53,0)
CLOGS ;Display Change Log for a selected entry.
"RTN","PXRMTAXL",54,0)
 N IEN
"RTN","PXRMTAXL",55,0)
 ;Get the entry
"RTN","PXRMTAXL",56,0)
 S IEN=+$$GETSEL("Display the change log for which taxonomy?")
"RTN","PXRMTAXL",57,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",58,0)
 D CLOG(IEN)
"RTN","PXRMTAXL",59,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",60,0)
 Q
"RTN","PXRMTAXL",61,0)
 ;
"RTN","PXRMTAXL",62,0)
 ;=========================================
"RTN","PXRMTAXL",63,0)
CODESRCH ;Let the user input a code and then search for all taxonomies
"RTN","PXRMTAXL",64,0)
 ;that include that code.
"RTN","PXRMTAXL",65,0)
 D FULL^VALM1
"RTN","PXRMTAXL",66,0)
 W @IOF
"RTN","PXRMTAXL",67,0)
 D SEARCH^PXRMTXCS
"RTN","PXRMTAXL",68,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",69,0)
 Q
"RTN","PXRMTAXL",70,0)
 ;
"RTN","PXRMTAXL",71,0)
 ;=========================================
"RTN","PXRMTAXL",72,0)
COPY(IEN) ;Copy a selected entry to a new name.
"RTN","PXRMTAXL",73,0)
 D FULL^VALM1
"RTN","PXRMTAXL",74,0)
 D COPY^PXRMCPLS(811.2,IEN)
"RTN","PXRMTAXL",75,0)
 D BLDLIST^PXRMTAXL("PXRMTAXL")
"RTN","PXRMTAXL",76,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",77,0)
 Q
"RTN","PXRMTAXL",78,0)
 ;
"RTN","PXRMTAXL",79,0)
 ;=========================================
"RTN","PXRMTAXL",80,0)
COPYS ;Copy a selected entry.
"RTN","PXRMTAXL",81,0)
 N IEN
"RTN","PXRMTAXL",82,0)
 ;Get the entry
"RTN","PXRMTAXL",83,0)
 S IEN=+$$GETSEL("Select taxonomy to copy")
"RTN","PXRMTAXL",84,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",85,0)
 D COPY(IEN)
"RTN","PXRMTAXL",86,0)
 Q
"RTN","PXRMTAXL",87,0)
 ;
"RTN","PXRMTAXL",88,0)
 ;=========================================
"RTN","PXRMTAXL",89,0)
EDITS ;Edit a selected entry.
"RTN","PXRMTAXL",90,0)
 N CLASS,IEN
"RTN","PXRMTAXL",91,0)
 ;Get the entry
"RTN","PXRMTAXL",92,0)
 S IEN=+$$GETSEL("Select the taxonomy to edit")
"RTN","PXRMTAXL",93,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",94,0)
 D SMANEDIT^PXRMTXSM(IEN,0,"PXRM TAXONOMY EDIT")
"RTN","PXRMTAXL",95,0)
 Q
"RTN","PXRMTAXL",96,0)
 ;
"RTN","PXRMTAXL",97,0)
 ;=========================================
"RTN","PXRMTAXL",98,0)
ENTRY ;Entry code
"RTN","PXRMTAXL",99,0)
 D INITMPG^PXRMTAXL
"RTN","PXRMTAXL",100,0)
 D BLDLIST^PXRMTAXL("PXRMTAXL")
"RTN","PXRMTAXL",101,0)
 D XQORM
"RTN","PXRMTAXL",102,0)
 Q
"RTN","PXRMTAXL",103,0)
 ;
"RTN","PXRMTAXL",104,0)
 ;=========================================
"RTN","PXRMTAXL",105,0)
EXIT ;Exit code
"RTN","PXRMTAXL",106,0)
 D INITMPG^PXRMTAXL
"RTN","PXRMTAXL",107,0)
 D CLEAN^VALM10
"RTN","PXRMTAXL",108,0)
 D FULL^VALM1
"RTN","PXRMTAXL",109,0)
 S VALMBCK="Q"
"RTN","PXRMTAXL",110,0)
 Q
"RTN","PXRMTAXL",111,0)
 ;
"RTN","PXRMTAXL",112,0)
 ;=========================================
"RTN","PXRMTAXL",113,0)
FORMAT(NUMBER,NAME,DESC,FMTSTR,NL,OUTPUT) ;Format  entry number, name,
"RTN","PXRMTAXL",114,0)
 ;and first line of description for LM display.
"RTN","PXRMTAXL",115,0)
 N TEMP
"RTN","PXRMTAXL",116,0)
 S TEMP=NUMBER_U_NAME_U_DESC
"RTN","PXRMTAXL",117,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXRMTAXL",118,0)
 Q
"RTN","PXRMTAXL",119,0)
 ;
"RTN","PXRMTAXL",120,0)
 ;=========================================
"RTN","PXRMTAXL",121,0)
GETSEL(TEXT) ;Get a single selection
"RTN","PXRMTAXL",122,0)
 N DIR,NTAX,X,Y
"RTN","PXRMTAXL",123,0)
 S NTAX=+$G(^TMP("PXRMTAXL",$J,"NTAX"))
"RTN","PXRMTAXL",124,0)
 I NTAX=0 Q 0
"RTN","PXRMTAXL",125,0)
 S DIR(0)="N^1:"_NTAX
"RTN","PXRMTAXL",126,0)
 S DIR("A")=TEXT
"RTN","PXRMTAXL",127,0)
 D ^DIR
"RTN","PXRMTAXL",128,0)
 Q +$G(^TMP("PXRMTAXL",$J,"SEL",+Y))
"RTN","PXRMTAXL",129,0)
 ;
"RTN","PXRMTAXL",130,0)
 ;=========================================
"RTN","PXRMTAXL",131,0)
HELP ;Display help.
"RTN","PXRMTAXL",132,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXRMTAXL",133,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXRMTAXL",134,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXRMTAXL",135,0)
 S DDS=1,DONE=0
"RTN","PXRMTAXL",136,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMTAXL",137,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXRMTAXL",138,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMTAXL",139,0)
 D BROWSE^DDBR("TEXT","NR","Taxonomy Management Help")
"RTN","PXRMTAXL",140,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",141,0)
 Q
"RTN","PXRMTAXL",142,0)
 ;
"RTN","PXRMTAXL",143,0)
 ;=========================================
"RTN","PXRMTAXL",144,0)
HDR ; Header code
"RTN","PXRMTAXL",145,0)
 S VALMHDR(1)="Taxonomy File Entries."
"RTN","PXRMTAXL",146,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMTAXL",147,0)
 Q
"RTN","PXRMTAXL",148,0)
 ;
"RTN","PXRMTAXL",149,0)
 ;=========================================
"RTN","PXRMTAXL",150,0)
HTEXT ;Taxonomy mangement help text.
"RTN","PXRMTAXL",151,0)
 ;;Select one of the following actions:
"RTN","PXRMTAXL",152,0)
 ;; ADD  - add a new taxonomy.
"RTN","PXRMTAXL",153,0)
 ;; EDIT - edit a taxonomy.
"RTN","PXRMTAXL",154,0)
 ;; COPY - copy an existing taxonomy to a new taxonomy.
"RTN","PXRMTAXL",155,0)
 ;; INQ  - taxonomy inquiry.
"RTN","PXRMTAXL",156,0)
 ;; EH   - taxonomy edit history.
"RTN","PXRMTAXL",157,0)
 ;; CS   - code search. Input a code and search for all taxonomies that include
"RTN","PXRMTAXL",158,0)
 ;;        the code.
"RTN","PXRMTAXL",159,0)
 ;; IMP  - import codes from another taxonomy or a CSV file. Each line of the CSV
"RTN","PXRMTAXL",160,0)
 ;;        file should have the format:
"RTN","PXRMTAXL",161,0)
 ;;        term/code,coding system,code 1,code 2,...code n
"RTN","PXRMTAXL",162,0)
 ;;
"RTN","PXRMTAXL",163,0)
 ;;You can select the action first and then the entry or choose the entry and then
"RTN","PXRMTAXL",164,0)
 ;;the action.
"RTN","PXRMTAXL",165,0)
 ;;
"RTN","PXRMTAXL",166,0)
 ;;OLDINQ displays an old taxonomy inquiry and is provided as an aid in
"RTN","PXRMTAXL",167,0)
 ;;transitioning to the new structure. It is only available after selecting a
"RTN","PXRMTAXL",168,0)
 ;;taxonomy. It will be removed once the transition has been fully implemented.
"RTN","PXRMTAXL",169,0)
 ;;**End Text**
"RTN","PXRMTAXL",170,0)
 Q
"RTN","PXRMTAXL",171,0)
 ;
"RTN","PXRMTAXL",172,0)
 ;=========================================
"RTN","PXRMTAXL",173,0)
IMPS ;Import codes into a selected entry.
"RTN","PXRMTAXL",174,0)
 N IEN
"RTN","PXRMTAXL",175,0)
 ;Get the entry
"RTN","PXRMTAXL",176,0)
 S IEN=+$$GETSEL("Select the taxonomy to import into")
"RTN","PXRMTAXL",177,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",178,0)
 D IMP^PXRMTXIM(IEN)
"RTN","PXRMTAXL",179,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",180,0)
 Q
"RTN","PXRMTAXL",181,0)
 ;
"RTN","PXRMTAXL",182,0)
 ;=========================================
"RTN","PXRMTAXL",183,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXRMTAXL",184,0)
 K ^TMP("PXRMTAXL",$J)
"RTN","PXRMTAXL",185,0)
 Q
"RTN","PXRMTAXL",186,0)
 ;
"RTN","PXRMTAXL",187,0)
 ;=========================================
"RTN","PXRMTAXL",188,0)
INQ(IEN) ;Taxonomy inquiry.
"RTN","PXRMTAXL",189,0)
 D BTAXINQ^PXRMTXIN(IEN)
"RTN","PXRMTAXL",190,0)
 Q
"RTN","PXRMTAXL",191,0)
 ;
"RTN","PXRMTAXL",192,0)
 ;=========================================
"RTN","PXRMTAXL",193,0)
INQS ;Display inquiry for selected entries.
"RTN","PXRMTAXL",194,0)
 N IEN
"RTN","PXRMTAXL",195,0)
 ;Get the entry
"RTN","PXRMTAXL",196,0)
 S IEN=+$$GETSEL("Display inquiry for which taxonomy?")
"RTN","PXRMTAXL",197,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",198,0)
 D INQ(IEN)
"RTN","PXRMTAXL",199,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",200,0)
 Q
"RTN","PXRMTAXL",201,0)
 ;
"RTN","PXRMTAXL",202,0)
 ;=========================================
"RTN","PXRMTAXL",203,0)
OLDINQS ;Old Taxonomy inquiry.
"RTN","PXRMTAXL",204,0)
 N IEN
"RTN","PXRMTAXL",205,0)
 ;Get the entry
"RTN","PXRMTAXL",206,0)
 S IEN=+$$GETSEL("Display old inquiry for which taxonomy?")
"RTN","PXRMTAXL",207,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTAXL",208,0)
 D FULL^VALM1
"RTN","PXRMTAXL",209,0)
 D OLDINQ^PXRMTXIN(IEN)
"RTN","PXRMTAXL",210,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",211,0)
 Q
"RTN","PXRMTAXL",212,0)
 ;
"RTN","PXRMTAXL",213,0)
 ;=========================================
"RTN","PXRMTAXL",214,0)
PEXIT ; Protocol exit code
"RTN","PXRMTAXL",215,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMTAXL",216,0)
 ;Reset after page up/down etc
"RTN","PXRMTAXL",217,0)
 D XQORM
"RTN","PXRMTAXL",218,0)
 Q
"RTN","PXRMTAXL",219,0)
 ;
"RTN","PXRMTAXL",220,0)
 ;=========================================
"RTN","PXRMTAXL",221,0)
START ;Main entry point for PXRM Taxonomy Management
"RTN","PXRMTAXL",222,0)
 N VALMBCK,VALMSG,X
"RTN","PXRMTAXL",223,0)
 S X="IORESET"
"RTN","PXRMTAXL",224,0)
 D ENDR^%ZISS
"RTN","PXRMTAXL",225,0)
 D EN^VALM("PXRM TAXONOMY MANAGEMENT")
"RTN","PXRMTAXL",226,0)
 W IORESET
"RTN","PXRMTAXL",227,0)
 D KILL^%ZISS
"RTN","PXRMTAXL",228,0)
 Q
"RTN","PXRMTAXL",229,0)
 ;
"RTN","PXRMTAXL",230,0)
 ;=========================================
"RTN","PXRMTAXL",231,0)
XQORM ;Set range for selection.
"RTN","PXRMTAXL",232,0)
 N NTAX
"RTN","PXRMTAXL",233,0)
 S NTAX=^TMP("PXRMTAXL",$J,"NTAX")
"RTN","PXRMTAXL",234,0)
 S XQORM("#")=$O(^ORD(101,"B","PXRM TAXONOMY SELECT ENTRY",0))_U_"1:"_NTAX
"RTN","PXRMTAXL",235,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMTAXL",236,0)
 Q
"RTN","PXRMTAXL",237,0)
 ;
"RTN","PXRMTAXL",238,0)
 ;=========================================
"RTN","PXRMTAXL",239,0)
XSEL ;Entry action for protocol PXRM TAXONOMY SELECT ENTRY.
"RTN","PXRMTAXL",240,0)
 N CLASS,EDITOK,IEN,SEL
"RTN","PXRMTAXL",241,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMTAXL",242,0)
 ;Remove trailing ,
"RTN","PXRMTAXL",243,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMTAXL",244,0)
 ;Invalid selection
"RTN","PXRMTAXL",245,0)
 I SEL["," D  Q
"RTN","PXRMTAXL",246,0)
 . W !,"Only one item number allowed." H 2
"RTN","PXRMTAXL",247,0)
 . S VALMBCK="R"
"RTN","PXRMTAXL",248,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMTAXL",249,0)
 . W !,SEL_" is not a valid item number." H 2
"RTN","PXRMTAXL",250,0)
 . S VALMBCK="R"
"RTN","PXRMTAXL",251,0)
 ;
"RTN","PXRMTAXL",252,0)
 ;Get the IEN.
"RTN","PXRMTAXL",253,0)
 S IEN=^TMP("PXRMTAXL",$J,"SEL",SEL)
"RTN","PXRMTAXL",254,0)
 S CLASS=$P(^PXD(811.2,IEN,100),U,1)
"RTN","PXRMTAXL",255,0)
 ;
"RTN","PXRMTAXL",256,0)
 ;Full screen mode
"RTN","PXRMTAXL",257,0)
 D FULL^VALM1
"RTN","PXRMTAXL",258,0)
 ;
"RTN","PXRMTAXL",259,0)
 ;Action list.
"RTN","PXRMTAXL",260,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXRMTAXL",261,0)
 S DIR(0)="SBM"_U
"RTN","PXRMTAXL",262,0)
 S EDITOK=$S(CLASS'="N":1,1:($G(PXRMINST)=1)&($G(DUZ(0))="@"))
"RTN","PXRMTAXL",263,0)
 I EDITOK S DIR(0)=DIR(0)_"EDIT:Edit;"
"RTN","PXRMTAXL",264,0)
 S DIR(0)=DIR(0)_"COPY:Copy;"
"RTN","PXRMTAXL",265,0)
 S DIR(0)=DIR(0)_"INQ:Inquire;"
"RTN","PXRMTAXL",266,0)
 S DIR(0)=DIR(0)_"CL:Change Log;"
"RTN","PXRMTAXL",267,0)
 S DIR("A")="Select Action: "
"RTN","PXRMTAXL",268,0)
 S DIR("B")=$S(CLASS="N":"INQ",1:"EDIT")
"RTN","PXRMTAXL",269,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXRMTAXL",270,0)
 D ^DIR
"RTN","PXRMTAXL",271,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXRMTAXL",272,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXRMTAXL",273,0)
 S OPTION=Y
"RTN","PXRMTAXL",274,0)
 D CLEAR^VALM1
"RTN","PXRMTAXL",275,0)
 ;
"RTN","PXRMTAXL",276,0)
 I OPTION="COPY" D COPY^PXRMTAXL(IEN)
"RTN","PXRMTAXL",277,0)
 I OPTION="EDIT" D SMANEDIT^PXRMTXSM(IEN,0,"PXRM TAXONOMY EDIT")
"RTN","PXRMTAXL",278,0)
 I OPTION="INQ" D INQ^PXRMTAXL(IEN)
"RTN","PXRMTAXL",279,0)
 I OPTION="CL" D CLOG^PXRMTAXL(IEN)
"RTN","PXRMTAXL",280,0)
 S VALMBCK="R"
"RTN","PXRMTAXL",281,0)
 Q
"RTN","PXRMTAXL",282,0)
 ;
"RTN","PXRMTDLG")
0^39^B19639441
"RTN","PXRMTDLG",1,0)
PXRMTDLG ; SLC/PJH - Edit/Inquire Taxonomy Dialog ;9/7/2012
"RTN","PXRMTDLG",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTDLG",3,0)
 ;
"RTN","PXRMTDLG",4,0)
 ;Called by option PXRM TAXONOMY DIALOG
"RTN","PXRMTDLG",5,0)
 ;
"RTN","PXRMTDLG",6,0)
START N DIC,PXRMGTYP,PXRMHD,PXRMTIEN,Y
"RTN","PXRMTDLG",7,0)
SELECT ;General selection
"RTN","PXRMTDLG",8,0)
 S PXRMHD="Taxonomy Dialog",PXRMGTYP="DTAX",PXRMTIEN=""
"RTN","PXRMTDLG",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMTIEN")
"RTN","PXRMTDLG",10,0)
 ;Should return a value
"RTN","PXRMTDLG",11,0)
 I PXRMTIEN D  G SELECT
"RTN","PXRMTDLG",12,0)
 .S PXRMHD="TAXONOMY NAME:"
"RTN","PXRMTDLG",13,0)
 .;Listman option
"RTN","PXRMTDLG",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMTIEN)
"RTN","PXRMTDLG",15,0)
 ;
"RTN","PXRMTDLG",16,0)
END Q
"RTN","PXRMTDLG",17,0)
 ;
"RTN","PXRMTDLG",18,0)
 ;List all Taxonomy Dialogs (for protocol PXRM SELECTION LIST)
"RTN","PXRMTDLG",19,0)
 ;-------------------------
"RTN","PXRMTDLG",20,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMTDLG",21,0)
 S Y=1
"RTN","PXRMTDLG",22,0)
 D SET
"RTN","PXRMTDLG",23,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",24,0)
 S BY=".01"
"RTN","PXRMTDLG",25,0)
 S FR=""
"RTN","PXRMTDLG",26,0)
 S TO=""
"RTN","PXRMTDLG",27,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",28,0)
 D DISP
"RTN","PXRMTDLG",29,0)
 Q
"RTN","PXRMTDLG",30,0)
 ;
"RTN","PXRMTDLG",31,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMTDLG",32,0)
 ;--------------------
"RTN","PXRMTDLG",33,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMTDLG",34,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",35,0)
 S DIC(0)="AEMQ"
"RTN","PXRMTDLG",36,0)
 D SET
"RTN","PXRMTDLG",37,0)
 D DISP
"RTN","PXRMTDLG",38,0)
 Q
"RTN","PXRMTDLG",39,0)
 ;
"RTN","PXRMTDLG",40,0)
 ;Display Header (see DHD variable)
"RTN","PXRMTDLG",41,0)
 ;--------------
"RTN","PXRMTDLG",42,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMTDLG",43,0)
 S TEXTHED="TAXONOMY DIALOG LIST"
"RTN","PXRMTDLG",44,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMTDLG",45,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMTDLG",46,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMTDLG",47,0)
 W TEXTHED
"RTN","PXRMTDLG",48,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMTDLG",49,0)
 W !,TEXTUND,!!
"RTN","PXRMTDLG",50,0)
 Q
"RTN","PXRMTDLG",51,0)
 ;
"RTN","PXRMTDLG",52,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMTDLG",53,0)
 ;-------
"RTN","PXRMTDLG",54,0)
DISP S L=0,FLDS="[PXRM TAXONOMY DIALOG]"
"RTN","PXRMTDLG",55,0)
 D EN1^DIP
"RTN","PXRMTDLG",56,0)
 Q
"RTN","PXRMTDLG",57,0)
 ;
"RTN","PXRMTDLG",58,0)
SET ;Setup all the variables
"RTN","PXRMTDLG",59,0)
 ; Set Date for Header
"RTN","PXRMTDLG",60,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMTDLG",61,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMTDLG",62,0)
 ;
"RTN","PXRMTDLG",63,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMTDLG",64,0)
 S BY="NUMBER"
"RTN","PXRMTDLG",65,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMTDLG",66,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",67,0)
 ;
"RTN","PXRMTDLG",68,0)
 Q
"RTN","PXRMTDLG",69,0)
 ;
"RTN","PXRMTDLG",70,0)
 ;Build display for selected taxonomy - Called from PXRMGEN
"RTN","PXRMTDLG",71,0)
 ;---------------------------------------------------------
"RTN","PXRMTDLG",72,0)
DTAX(TIEN) ;
"RTN","PXRMTDLG",73,0)
 ;If dialog selectable codes don't exist build them
"RTN","PXRMTDLG",74,0)
 I ('$D(^PXD(811.2,TIEN,"SDX")))&('$D(^PXD(811.2,TIEN,"SPR"))) D
"RTN","PXRMTDLG",75,0)
 .D BUILD^PXRMTDUP(TIEN)
"RTN","PXRMTDLG",76,0)
 ;
"RTN","PXRMTDLG",77,0)
 N ARRAY,CNT,SEQ,TSEQ
"RTN","PXRMTDLG",78,0)
 S VALMCNT=0 K ^TMP("PXRMGEN",$J)
"RTN","PXRMTDLG",79,0)
 ;Format headings to include taxonomy name
"RTN","PXRMTDLG",80,0)
 S HEADER=PXRMHD_" "_$P(^PXD(811.2,TIEN,0),U)
"RTN","PXRMTDLG",81,0)
 ;Get associated codes
"RTN","PXRMTDLG",82,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMTDLG",83,0)
 ;Taxonomy header
"RTN","PXRMTDLG",84,0)
 S SEQ=1,TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMTDLG",85,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",86,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMTDLG",87,0)
 ;Dialog and Procedure entries
"RTN","PXRMTDLG",88,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMTDLG",89,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMTDLG",90,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",91,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMTDLG",92,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMTDLG",93,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",94,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMTDLG",95,0)
 ;Create headings
"RTN","PXRMTDLG",96,0)
 D CHGCAP^VALM("HEADER1","Taxonomy Dialog")
"RTN","PXRMTDLG",97,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMTDLG",98,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMTDLG",99,0)
 Q
"RTN","PXRMTDLG",100,0)
 ;
"RTN","PXRMTDLG",101,0)
 ;Selectable codes
"RTN","PXRMTDLG",102,0)
 ;----------------
"RTN","PXRMTDLG",103,0)
CODES(FILE,TIEN) ;
"RTN","PXRMTDLG",104,0)
 N BDATE,CODES,CODE,DATES,DESC,DTEXT,EDATE,STR,SUB,TAB,TEXT
"RTN","PXRMTDLG",105,0)
 ;Display text
"RTN","PXRMTDLG",106,0)
 S TEXT=$J("",15)_"Selectable codes:",TAB=18
"RTN","PXRMTDLG",107,0)
 S STR=$$LJ^XLFSTR($G(TEXT),60)
"RTN","PXRMTDLG",108,0)
 S STR=STR_"Activation Periods"
"RTN","PXRMTDLG",109,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",110,0)
 ;S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)
"RTN","PXRMTDLG",111,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=STR
"RTN","PXRMTDLG",112,0)
 ;Get array
"RTN","PXRMTDLG",113,0)
 D CODES^PXRMDLLB(FILE,TIEN,.CODES)
"RTN","PXRMTDLG",114,0)
 ;Move results into workfile
"RTN","PXRMTDLG",115,0)
 S SUB=""
"RTN","PXRMTDLG",116,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMTDLG",117,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMTDLG",118,0)
 .S BDATE=$$FMTE^XLFDT($P($G(CODE),":",2))
"RTN","PXRMTDLG",119,0)
 .I $P($G(CODE),":",3)'="" S EDATE=$$FMTE^XLFDT($P($G(CODE),":",3))
"RTN","PXRMTDLG",120,0)
 .S DATE=BDATE I $G(EDATE)'="" S DATE=DATE_"-"_EDATE
"RTN","PXRMTDLG",121,0)
 .S STR=$$LJ^XLFSTR($P($G(CODE),":"),8)
"RTN","PXRMTDLG",122,0)
 .S STR=STR_$$LJ^XLFSTR(DESC,37)
"RTN","PXRMTDLG",123,0)
 .S DTEXT=STR_DATE
"RTN","PXRMTDLG",124,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",125,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",15)_DTEXT
"RTN","PXRMTDLG",126,0)
 .;S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMTDLG",127,0)
 .;S TEXT=$J("",TAB)
"RTN","PXRMTDLG",128,0)
 Q
"RTN","PXRMTDLG",129,0)
 ;
"RTN","PXRMTDLG",130,0)
 ;Display selectable codes - called from print template
"RTN","PXRMTDLG",131,0)
 ;-----------------------------------------------------
"RTN","PXRMTDLG",132,0)
TDES(FILE,D0,D1) ;
"RTN","PXRMTDLG",133,0)
 N CNT,CODE,DATA,IEN,TEMP,TEXT,NODE
"RTN","PXRMTDLG",134,0)
 S NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMTDLG",135,0)
 S DATA=$G(^PXD(811.2,D0,NODE,D1,0)) Q:DATA=""
"RTN","PXRMTDLG",136,0)
 ;Get ien of code
"RTN","PXRMTDLG",137,0)
 S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMTDLG",138,0)
 S TEMP=$S(FILE=80:$$ICDDX^ICDCODE(IEN,DT),FILE=81:$$CPT^ICPTCOD(IEN,DT))
"RTN","PXRMTDLG",139,0)
 S CODE=$P(TEMP,U,2)
"RTN","PXRMTDLG",140,0)
 ;Set display text from taxonomy selectable code text
"RTN","PXRMTDLG",141,0)
 ;otherwise use icd9/cpt diagnosis or short name.
"RTN","PXRMTDLG",142,0)
 S TEXT=$P(DATA,U,2)
"RTN","PXRMTDLG",143,0)
 ;Check for an invalid code.
"RTN","PXRMTDLG",144,0)
 I $P(TEMP,U,1)=-1 S CODE=$$CODEC^ICDCODE(IEN),TEXT=$P(TEMP,U,2)_" (invalid code)"
"RTN","PXRMTDLG",145,0)
 I TEXT="" S TEXT=$S(FILE=80:$P(TEMP,U,4),FILE=81:$P(TEMP,U,3))
"RTN","PXRMTDLG",146,0)
 S TEXT="  "_$E(TEXT,1,40)_$J("",40-$L(TEXT))
"RTN","PXRMTDLG",147,0)
 ;Lineup file 80 codes on the ".".
"RTN","PXRMTDLG",148,0)
 I FILE=80,$L(CODE)=5 S CODE=CODE_" "
"RTN","PXRMTDLG",149,0)
 W $J(CODE,10)_TEXT
"RTN","PXRMTDLG",150,0)
 Q
"RTN","PXRMTERM")
0^120^B55315672
"RTN","PXRMTERM",1,0)
PXRMTERM ;SLC/PKR - Handle reminder terms. ;01/08/2014
"RTN","PXRMTERM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,11,18,26**;Feb 04, 2005;Build 404
"RTN","PXRMTERM",3,0)
 ;
"RTN","PXRMTERM",4,0)
 ;=============================================
"RTN","PXRMTERM",5,0)
COPY(NOCC,SDIR,TFIEVAL,DATEORDR,FINDING,FIEVAL,STF) ;Copy the NOCC date ordered
"RTN","PXRMTERM",6,0)
 ;findings from TFIEVAL to FIEVAL(FINDING).
"RTN","PXRMTERM",7,0)
 N DATE,IND,JND,MRS,NFOUND,TFI
"RTN","PXRMTERM",8,0)
 ;Start with most recent and go to oldest finding.
"RTN","PXRMTERM",9,0)
 S MRS=1
"RTN","PXRMTERM",10,0)
 S NFOUND=0
"RTN","PXRMTERM",11,0)
 S DATE=""
"RTN","PXRMTERM",12,0)
 F  S DATE=$O(DATEORDR(DATE),SDIR) Q:(NFOUND=NOCC)!(DATE="")  D
"RTN","PXRMTERM",13,0)
 . S TFI=0
"RTN","PXRMTERM",14,0)
 . F  S TFI=$O(DATEORDR(DATE,TFI)) Q:(NFOUND=NOCC)!(TFI="")  D
"RTN","PXRMTERM",15,0)
 .. I MRS D
"RTN","PXRMTERM",16,0)
 ...;Save the main result node.
"RTN","PXRMTERM",17,0)
 ... S FIEVAL(FINDING)=TFIEVAL(TFI)
"RTN","PXRMTERM",18,0)
 ... S MRS=0
"RTN","PXRMTERM",19,0)
 ... I 'FIEVAL(FINDING) Q
"RTN","PXRMTERM",20,0)
 ... S JND="@"
"RTN","PXRMTERM",21,0)
 ... F  S JND=$O(TFIEVAL(TFI,JND)) Q:JND=""  M FIEVAL(FINDING,JND)=TFIEVAL(TFI,JND)
"RTN","PXRMTERM",22,0)
 .. I 'FIEVAL(FINDING) Q
"RTN","PXRMTERM",23,0)
 .. S IND=0
"RTN","PXRMTERM",24,0)
 .. F  S IND=$O(DATEORDR(DATE,TFI,IND)) Q:(NFOUND=NOCC)!(IND="")  D
"RTN","PXRMTERM",25,0)
 ...;Only save true sub-results.
"RTN","PXRMTERM",26,0)
 ... I 'TFIEVAL(TFI,IND) Q
"RTN","PXRMTERM",27,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMTERM",28,0)
 ... M FIEVAL(FINDING,NFOUND)=TFIEVAL(TFI,IND)
"RTN","PXRMTERM",29,0)
 ... S FIEVAL(FINDING,NFOUND,"FILE NUMBER")=TFIEVAL(TFI,"FILE NUMBER")
"RTN","PXRMTERM",30,0)
 ... S FIEVAL(FINDING,NFOUND,"FINDING")=TFIEVAL(TFI,"FINDING")
"RTN","PXRMTERM",31,0)
 ... I STF S FIEVAL(FINDING,NFOUND,"TERM FINDING")=TFI
"RTN","PXRMTERM",32,0)
 ... S JND=0
"RTN","PXRMTERM",33,0)
 ... F  S JND=$O(TFIEVAL(TFI,IND,JND)) Q:JND=""  M FIEVAL(FINDING,NFOUND,JND)=TFIEVAL(TFI,IND,JND)
"RTN","PXRMTERM",34,0)
 Q
"RTN","PXRMTERM",35,0)
 ;
"RTN","PXRMTERM",36,0)
 ;=============================================
"RTN","PXRMTERM",37,0)
DORDER(TFIEVAL,DATEORDR) ;Order term findings by date, term finding,
"RTN","PXRMTERM",38,0)
 ;and term finding occurrence.
"RTN","PXRMTERM",39,0)
 N DATE,FI,IND
"RTN","PXRMTERM",40,0)
 K DATEORDR
"RTN","PXRMTERM",41,0)
 S FI=0
"RTN","PXRMTERM",42,0)
 F  S FI=+$O(TFIEVAL(FI)) Q:FI=0  D
"RTN","PXRMTERM",43,0)
 . S IND=0
"RTN","PXRMTERM",44,0)
 . F  S IND=+$O(TFIEVAL(FI,IND)) Q:IND=0  D
"RTN","PXRMTERM",45,0)
 .. S DATE=$G(TFIEVAL(FI,IND,"DATE"))
"RTN","PXRMTERM",46,0)
 .. I DATE'="" S DATEORDR(DATE,FI,IND)=""
"RTN","PXRMTERM",47,0)
 Q
"RTN","PXRMTERM",48,0)
 ;
"RTN","PXRMTERM",49,0)
 ;=============================================
"RTN","PXRMTERM",50,0)
EVALFI(DFN,DEFARR,ENODE,FIEVAL) ;Evaluate all reminder terms in a
"RTN","PXRMTERM",51,0)
 ;definition.
"RTN","PXRMTERM",52,0)
 N CASESEN,CONVAL,DATE,DATEORDR
"RTN","PXRMTERM",53,0)
 N FIEVT,FINDING,FINDPA,IND,NOCC
"RTN","PXRMTERM",54,0)
 N SDIR,TFIND3,TFIND4,TERMARR,TERMIEN,TFI,TFIEVAL,UCIFS
"RTN","PXRMTERM",55,0)
 S TERMIEN=""
"RTN","PXRMTERM",56,0)
 F  S TERMIEN=$O(DEFARR("E",ENODE,TERMIEN)) Q:+TERMIEN=0  D
"RTN","PXRMTERM",57,0)
 . I '$D(^PXRMD(811.5,TERMIEN,20,"E")) D  Q
"RTN","PXRMTERM",58,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFI",TERMIEN)="Warning no findings items in reminder term "_$P(^PXRMD(811.5,TERMIEN,0),U,1)
"RTN","PXRMTERM",59,0)
 .. S FINDING=""
"RTN","PXRMTERM",60,0)
 .. F  S FINDING=$O(DEFARR("E",ENODE,TERMIEN,FINDING)) Q:FINDING=""  S FIEVAL(FINDING)=0
"RTN","PXRMTERM",61,0)
 . D TERM^PXRMLDR(TERMIEN,.TERMARR)
"RTN","PXRMTERM",62,0)
 . S FINDING=""
"RTN","PXRMTERM",63,0)
 . F  S FINDING=$O(DEFARR("E",ENODE,TERMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTERM",64,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTERM",65,0)
 .. S FIEVAL(FINDING,"TERM")=TERMARR(0)
"RTN","PXRMTERM",66,0)
 .. S FIEVAL(FINDING,"TERM IEN")=TERMIEN
"RTN","PXRMTERM",67,0)
 .. K FINDPA,TFIEVAL
"RTN","PXRMTERM",68,0)
 .. M FINDPA=DEFARR(20,FINDING)
"RTN","PXRMTERM",69,0)
 .. D EVALTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMTERM",70,0)
 .. I $G(PXRMTDEB) M ^TMP("PXRMTDEB",$J,FINDING)=TFIEVAL
"RTN","PXRMTERM",71,0)
 ..;Set NOCC and SDIR.
"RTN","PXRMTERM",72,0)
 .. S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMTERM",73,0)
 .. I NOCC="" S NOCC=1
"RTN","PXRMTERM",74,0)
 .. S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTERM",75,0)
 .. S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTERM",76,0)
 ..;Order the term findings by date.
"RTN","PXRMTERM",77,0)
 .. D DORDER(.TFIEVAL,.DATEORDR)
"RTN","PXRMTERM",78,0)
 .. D COPY(NOCC,SDIR,.TFIEVAL,.DATEORDR,FINDING,.FIEVAL,1)
"RTN","PXRMTERM",79,0)
 .. S IND=0
"RTN","PXRMTERM",80,0)
 .. F  S IND=+$O(FIEVAL(FINDING,IND)) Q:IND=0  S FIEVAL(FINDING,IND,"TERM FINDING")=$P(TERMARR(20,FIEVAL(FINDING,IND,"TERM FINDING"),0),U,1)
"RTN","PXRMTERM",81,0)
 Q
"RTN","PXRMTERM",82,0)
 ;
"RTN","PXRMTERM",83,0)
 ;=============================================
"RTN","PXRMTERM",84,0)
EVALTERM(DFN,FINDPA,TERMARR,TFIEVAL) ;Evaluate all the findings in
"RTN","PXRMTERM",85,0)
 ;a term. Use the "E" cross-reference just like the finding evaluation.
"RTN","PXRMTERM",86,0)
 N ENODE,PXRMDEFS
"RTN","PXRMTERM",87,0)
 S ENODE=""
"RTN","PXRMTERM",88,0)
 F  S ENODE=$O(TERMARR("E",ENODE)) Q:ENODE=""  D
"RTN","PXRMTERM",89,0)
 . I ENODE="AUTTEDT(" D EVALTERM^PXRMEDU(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",90,0)
 . I ENODE="AUTTEXAM(" D EVALTERM^PXRMEXAM(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",91,0)
 . I ENODE="AUTTHF(" D EVALTERM^PXRMHF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",92,0)
 . I ENODE="AUTTIMM(" D EVALTERM^PXRMIMM(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",93,0)
 . I ENODE="AUTTSK(" D EVALTERM^PXRMSKIN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",94,0)
 . I ENODE="GMRD(120.51," D EVALTERM^PXRMVITL(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",95,0)
 . I ENODE="LAB(60," D EVALTERM^PXRMLAB(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",96,0)
 . I ENODE="ORD(101.43," D EVALTERM^PXRMORDR(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",97,0)
 . I ENODE="PXD(811.2," D EVALTERM^PXRMTAX(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",98,0)
 . I ENODE="PXRMD(810.9," D EVALTERM^PXRMLOCF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",99,0)
 . I ENODE="PXRMD(811.4," D EVALTERM^PXRMCF(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",100,0)
 . I ENODE="PS(50.605," D EVALTERM^PXRMDRCL(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",101,0)
 . I ENODE="PS(55," D EVALTERM^PXRMDIN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",102,0)
 . I ENODE="PS(55NVA," D EVALTERM^PXRMDNVA(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",103,0)
 . I ENODE="PSDRUG(" D EVALTERM^PXRMDRUG(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",104,0)
 . I ENODE="PSRX(" D EVALTERM^PXRMDOUT(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",105,0)
 . I ENODE="PSNDF(50.6," D EVALTERM^PXRMDGEN(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",106,0)
 . I ENODE="RAMIS(71," D EVALTERM^PXRMRAD(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",107,0)
 . I ENODE="YTT(601.71," D EVALTERM^PXRMMH(DFN,.FINDPA,ENODE,.TERMARR,.TFIEVAL) Q
"RTN","PXRMTERM",108,0)
 Q
"RTN","PXRMTERM",109,0)
 ;
"RTN","PXRMTERM",110,0)
 ;=============================================
"RTN","PXRMTERM",111,0)
IEVALTER(DFN,FINDPA,TERMARR,FINDING,FIEVAL) ;Evaluate an individual term
"RTN","PXRMTERM",112,0)
 ;put the result in FIEVAL(FINDING).
"RTN","PXRMTERM",113,0)
 N DATEORDR,NOCC,SDIR,TFIEVAL
"RTN","PXRMTERM",114,0)
 I '$D(PXRMDATE) N PXRMDATE S PXRMDATE=DT
"RTN","PXRMTERM",115,0)
 I $D(PXRMPDEM) G DEMOK
"RTN","PXRMTERM",116,0)
 N PXRMPDEM D DEM^PXRMPINF(DFN,DT,.PXRMPDEM)
"RTN","PXRMTERM",117,0)
 ;Create the local demographic variables for use in Condition.
"RTN","PXRMTERM",118,0)
 N PXRMAGE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMSEX
"RTN","PXRMTERM",119,0)
 S PXRMAGE=PXRMPDEM("AGE"),PXRMDOB=PXRMPDEM("DOB"),PXRMDOD=PXRMPDEM("DOD")
"RTN","PXRMTERM",120,0)
 S PXRMLAD=PXRMPDEM("LAD"),PXRMSEX=PXRMPDEM("SEX")
"RTN","PXRMTERM",121,0)
DEMOK S FIEVAL(FINDING)=0
"RTN","PXRMTERM",122,0)
 D EVALTERM(DFN,.FINDPA,.TERMARR,.TFIEVAL)
"RTN","PXRMTERM",123,0)
 ;Set NOCC and SDIR.
"RTN","PXRMTERM",124,0)
 S NOCC=$P(FINDPA(0),U,14)
"RTN","PXRMTERM",125,0)
 I NOCC="" S NOCC=1
"RTN","PXRMTERM",126,0)
 S SDIR=$S(NOCC<0:+1,1:-1)
"RTN","PXRMTERM",127,0)
 S NOCC=$S(NOCC<0:-NOCC,1:NOCC)
"RTN","PXRMTERM",128,0)
 ;Order the term findings by date.
"RTN","PXRMTERM",129,0)
 D DORDER(.TFIEVAL,.DATEORDR)
"RTN","PXRMTERM",130,0)
 D COPY(NOCC,SDIR,.TFIEVAL,.DATEORDR,FINDING,.FIEVAL,0)
"RTN","PXRMTERM",131,0)
 K ^TMP($J,"SVC",DFN)
"RTN","PXRMTERM",132,0)
 Q
"RTN","PXRMTERM",133,0)
 ;
"RTN","PXRMTERM",134,0)
 ;=============================================
"RTN","PXRMTERM",135,0)
MHVOUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMTERM",136,0)
 D OPT(INDENT,.IFIEVAL,.NLINES,.TEXT,"MHV")
"RTN","PXRMTERM",137,0)
 Q
"RTN","PXRMTERM",138,0)
 ;
"RTN","PXRMTERM",139,0)
 ;=============================================
"RTN","PXRMTERM",140,0)
OUTPUT(INDENT,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMTERM",141,0)
 ;maintenance output.
"RTN","PXRMTERM",142,0)
 D OPT(INDENT,.IFIEVAL,.NLINES,.TEXT,"CM")
"RTN","PXRMTERM",143,0)
 Q
"RTN","PXRMTERM",144,0)
 ;
"RTN","PXRMTERM",145,0)
 ;=============================================
"RTN","PXRMTERM",146,0)
OPT(INDENT,IFIEVAL,NLINES,TEXT,TYPE) ;General output.
"RTN","PXRMTERM",147,0)
 N DG,DGL,DGN,IEN,IND,JND,KND,INDENTT,FILENUM,TEMP,TIFIEVAL
"RTN","PXRMTERM",148,0)
 ;Build the display grouping.
"RTN","PXRMTERM",149,0)
 S FILENUM=IFIEVAL(1,"FILE NUMBER")
"RTN","PXRMTERM",150,0)
 S IEN=$P(IFIEVAL(1,"FINDING"),";",1)
"RTN","PXRMTERM",151,0)
 S DG(FILENUM,IEN)=1,DGL(1)=FILENUM_U_IEN,DGL(1,1)=""
"RTN","PXRMTERM",152,0)
 S (DGN,IND)=1
"RTN","PXRMTERM",153,0)
 F  S IND=+$O(IFIEVAL(IND)) Q:IND=0  D
"RTN","PXRMTERM",154,0)
 . S FILENUM=IFIEVAL(IND,"FILE NUMBER")
"RTN","PXRMTERM",155,0)
 . S IEN=$P(IFIEVAL(IND,"FINDING"),";",1)
"RTN","PXRMTERM",156,0)
 . I '$D(DG(FILENUM,IEN)) D
"RTN","PXRMTERM",157,0)
 .. S DGN=DGN+1,DG(FILENUM,IEN)=DGN
"RTN","PXRMTERM",158,0)
 .. S DGL(DGN)=FILENUM_U_IEN,DGL(DGN,IND)=""
"RTN","PXRMTERM",159,0)
 . I $D(DG(FILENUM,IEN)) D
"RTN","PXRMTERM",160,0)
 .. S TEMP=DG(FILENUM,IEN),DGL(TEMP,IND)=""
"RTN","PXRMTERM",161,0)
 S INDENTT=INDENT+1
"RTN","PXRMTERM",162,0)
 S TEMP=$$INSCHR^PXRMEXLC(INDENT," ")_"Reminder Term: "_$P(FIEVAL(FINDING,"TERM"),U,1)
"RTN","PXRMTERM",163,0)
 S NLINES=NLINES+1,TEXT(NLINES)=TEMP
"RTN","PXRMTERM",164,0)
 F IND=1:1:DGN D
"RTN","PXRMTERM",165,0)
 . K TIFIEVAL
"RTN","PXRMTERM",166,0)
 . S (JND,KND)=0
"RTN","PXRMTERM",167,0)
 . F  S JND=$O(DGL(IND,JND)) Q:JND=""  D
"RTN","PXRMTERM",168,0)
 .. S KND=KND+1
"RTN","PXRMTERM",169,0)
 .. I KND=1 M TIFIEVAL=IFIEVAL(JND)
"RTN","PXRMTERM",170,0)
 .. M TIFIEVAL(KND)=IFIEVAL(JND)
"RTN","PXRMTERM",171,0)
 . I TYPE="CM" D FOUT^PXRMOUTC(INDENTT,.TIFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTERM",172,0)
 . I TYPE="MHV" D FOUT^PXRMOUTM(INDENTT,.TIFIEVAL,.NLINES,.TEXT)
"RTN","PXRMTERM",173,0)
 Q
"RTN","PXRMTERM",174,0)
 ;
"RTN","PXRMTERM",175,0)
 ;=============================================
"RTN","PXRMTERM",176,0)
SPFINDPA(FINDPA,TFINDPA,PFINDPA) ;Set the finding parameter array
"RTN","PXRMTERM",177,0)
 ;for terms.
"RTN","PXRMTERM",178,0)
 N FIND0,PIECE,PFIND0,TFIND0,VAL
"RTN","PXRMTERM",179,0)
 S FIND0=$G(FINDPA(0))
"RTN","PXRMTERM",180,0)
 S (PFIND0,TFIND0)=TFINDPA(0)
"RTN","PXRMTERM",181,0)
 ;Set the 0 node.
"RTN","PXRMTERM",182,0)
 F PIECE=9,10,12,13,14,15,16 D
"RTN","PXRMTERM",183,0)
 . S VAL=$P(TFIND0,U,PIECE)
"RTN","PXRMTERM",184,0)
 . I VAL="" S VAL=$P(FIND0,U,PIECE)
"RTN","PXRMTERM",185,0)
 . S $P(PFIND0,U,PIECE)=VAL
"RTN","PXRMTERM",186,0)
 ;BDT and EDT are treated as a pair.
"RTN","PXRMTERM",187,0)
 I $P(TFIND0,U,8)="",$P(TFIND0,U,11)="" F PIECE=8,11 S $P(PFIND0,U,PIECE)=$P(FIND0,U,PIECE)
"RTN","PXRMTERM",188,0)
 E  F PIECE=8,11 S $P(PFIND0,U,PIECE)=$P(TFIND0,U,PIECE)
"RTN","PXRMTERM",189,0)
 S PFINDPA(0)=PFIND0
"RTN","PXRMTERM",190,0)
 I $P($G(TFINDPA(3)),U,1)'="" S PFINDPA(3)=TFINDPA(3),PFINDPA(10)=TFINDPA(10),PFINDPA(11)=TFINDPA(11)
"RTN","PXRMTERM",191,0)
 E  S PFINDPA(3)=$G(FINDPA(3)),PFINDPA(10)=$G(FINDPA(10)),PFINDPA(11)=$G(FINDPA(11))
"RTN","PXRMTERM",192,0)
 ;Get the status list.
"RTN","PXRMTERM",193,0)
 I $D(TFINDPA(5)) M PFINDPA(5)=TFINDPA(5)
"RTN","PXRMTERM",194,0)
 E  M PFINDPA(5)=FINDPA(5)
"RTN","PXRMTERM",195,0)
 I $D(TFINDPA(15)) S PFINDPA(15)=TFINDPA(15)
"RTN","PXRMTERM",196,0)
 E  S PFINDPA(15)=$G(FINDPA(15))
"RTN","PXRMTERM",197,0)
 Q
"RTN","PXRMTERM",198,0)
 ;
"RTN","PXRMTIU")
0^104^B7669051
"RTN","PXRMTIU",1,0)
PXRMTIU ;SLC/RMS,PKR - Clinical Reminder TIU routines. ; 06/03/2013
"RTN","PXRMTIU",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMTIU",3,0)
 ;==========================================================
"RTN","PXRMTIU",4,0)
NOTE(DFN,NGET,BDT,EDT,NFOUND,TEST,DATE,DATA,TEXT) ;Computed finding
"RTN","PXRMTIU",5,0)
 ;for note title.
"RTN","PXRMTIU",6,0)
 S NFOUND=0
"RTN","PXRMTIU",7,0)
 Q:(TEST="")!(NGET=0)
"RTN","PXRMTIU",8,0)
 N ADDDATA,AUTH,DONE,EDTT,ECOSIGN,ESIGN,INVDATE,NGETABS,PIEN
"RTN","PXRMTIU",9,0)
 N SDIR,STATUS,TEMP,TIEN,TITLE,TYPE
"RTN","PXRMTIU",10,0)
 S TITLE=$P(TEST,U),STATUS=$P(TEST,U,2),ADDDATA=+$P(TEST,U,3)
"RTN","PXRMTIU",11,0)
 I STATUS="" S STATUS=7  ;COMPLETED IS THE DEFAULT
"RTN","PXRMTIU",12,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMTIU",13,0)
 ;Invert and switch beginning and ending dates because the TIU index
"RTN","PXRMTIU",14,0)
 ;uses inverse dates.
"RTN","PXRMTIU",15,0)
 S INVDATE=BDT,BDT=9999999-EDTT,EDTT=9999999-INVDATE
"RTN","PXRMTIU",16,0)
 S SDIR=$S(NGET>0:1,1:-1)
"RTN","PXRMTIU",17,0)
 S INVDATE=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMTIU",18,0)
 S NGETABS=$S(NGET<0:-NGET,1:NGET)
"RTN","PXRMTIU",19,0)
 ;See if the note is passed as a title or an IEN.
"RTN","PXRMTIU",20,0)
 S (DONE,TIEN)=0
"RTN","PXRMTIU",21,0)
 I $E(TITLE,1)="`" D
"RTN","PXRMTIU",22,0)
 . S TIEN=$P(TITLE,"`",2)
"RTN","PXRMTIU",23,0)
 .;DBIA #2321
"RTN","PXRMTIU",24,0)
 . S TYPE=$P(^TIU(8925.1,TIEN,0),U,4)
"RTN","PXRMTIU",25,0)
 . I TYPE="DOC" S DONE=1,TITLE=$P(^TIU(8925.1,TIEN,0),U,1)
"RTN","PXRMTIU",26,0)
 E  D
"RTN","PXRMTIU",27,0)
 .;Find the ien for the title.
"RTN","PXRMTIU",28,0)
 .;DBIA #2321
"RTN","PXRMTIU",29,0)
 . F  Q:DONE  S TIEN=$O(^TIU(8925.1,"B",TITLE,TIEN)) Q:TIEN=""  D
"RTN","PXRMTIU",30,0)
 .. S TYPE=$P(^TIU(8925.1,TIEN,0),U,4)
"RTN","PXRMTIU",31,0)
 .. I TYPE="DOC" S DONE=1
"RTN","PXRMTIU",32,0)
 I 'DONE Q
"RTN","PXRMTIU",33,0)
 ;DBIA #2937
"RTN","PXRMTIU",34,0)
 F  S INVDATE=$O(^TIU(8925,"APT",DFN,TIEN,STATUS,INVDATE),SDIR)  Q:$S(INVDATE=0:1,NFOUND=NGETABS:1,INVDATE<BDT:1,INVDATE>EDTT:1,1:0)  D
"RTN","PXRMTIU",35,0)
 . S PIEN=$O(^TIU(8925,"APT",DFN,TIEN,STATUS,INVDATE,0)) Q:'+PIEN
"RTN","PXRMTIU",36,0)
 . S NFOUND=NFOUND+1
"RTN","PXRMTIU",37,0)
 . S TEST(NFOUND)=1
"RTN","PXRMTIU",38,0)
 . S DATE(NFOUND)=$P(^TIU(8925,PIEN,13),U)
"RTN","PXRMTIU",39,0)
 . S DATA(NFOUND,"VALUE")=TITLE
"RTN","PXRMTIU",40,0)
 . S DATA(NFOUND,"TITLE")=TITLE
"RTN","PXRMTIU",41,0)
 . S TEMP=$G(^TIU(8925,PIEN,12))
"RTN","PXRMTIU",42,0)
 . S AUTH=+$P(TEMP,U,2)
"RTN","PXRMTIU",43,0)
 . S AUTH=$S(AUTH>0:$$GET1^DIQ(200,AUTH,.01),1:"MISSING")
"RTN","PXRMTIU",44,0)
 . S DATA(NFOUND,"AUTH")=AUTH
"RTN","PXRMTIU",45,0)
 . S TEXT(NFOUND)="Author: "_AUTH
"RTN","PXRMTIU",46,0)
 . S ESIGN=$P(TEMP,U,4)
"RTN","PXRMTIU",47,0)
 . S ESIGN=$S(ESIGN>0:$$GET1^DIQ(200,ESIGN,.01),1:"")
"RTN","PXRMTIU",48,0)
 . S DATA(NFOUND,"EXPECTED SIGNER")=ESIGN
"RTN","PXRMTIU",49,0)
 . S ECOSIGN=$P(TEMP,U,8)
"RTN","PXRMTIU",50,0)
 . S ECOSIGN=$S(ECOSIGN>0:$$GET1^DIQ(200,ECOSIGN,.01),1:"")
"RTN","PXRMTIU",51,0)
 . S DATA(NFOUND,"EXPECTED COSIGNER")=ECOSIGN
"RTN","PXRMTIU",52,0)
 . I ADDDATA D
"RTN","PXRMTIU",53,0)
 ..;DBIA #2834
"RTN","PXRMTIU",54,0)
 .. S TEMP=$$RESOLVE^TIUSRVLO(PIEN)
"RTN","PXRMTIU",55,0)
 .. S DATA(NFOUND,"DISPLAY NAME")=$P(TEMP,U,1)
"RTN","PXRMTIU",56,0)
 .. S DATA(NFOUND,"HOSPITAL LOCATION")=$P(TEMP,U,5)
"RTN","PXRMTIU",57,0)
 .. S DATA(NFOUND,"EPISODE BEGIN DATE/TIME")=$P(TEMP,U,7)
"RTN","PXRMTIU",58,0)
 .. S DATA(NFOUND,"EPISODE END DATE/TIME")=$P(TEMP,U,8)
"RTN","PXRMTIU",59,0)
 .. S DATA(NFOUND,"REQUESTING PACKAGE")=$P(TEMP,U,9)
"RTN","PXRMTIU",60,0)
 .. S DATA(NFOUND,"NUMBER OF IMAGES")=$P(TEMP,U,10)
"RTN","PXRMTIU",61,0)
 .. S DATA(NFOUND,"SUBJECT")=$P(TEMP,U,11)
"RTN","PXRMTIU",62,0)
 Q
"RTN","PXRMTIU",63,0)
 ;
"RTN","PXRMTMED")
0^130^B13031751
"RTN","PXRMTMED",1,0)
PXRMTMED ; SLC/PKR/PJH - Edit a reminder term. ;05/27/2014
"RTN","PXRMTMED",2,0)
 ;;2.0;CLINICAL REMINDERS;**1,4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMTMED",3,0)
 ;
"RTN","PXRMTMED",4,0)
 ;=======================================================
"RTN","PXRMTMED",5,0)
 N CS1,CS2,DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",6,0)
GETNAME ;Get the name of the term to edit.
"RTN","PXRMTMED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",8,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMTMED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTMED",10,0)
 S DIC("A")="Select Reminder Term: "
"RTN","PXRMTMED",11,0)
 S DLAYGO=811.5
"RTN","PXRMTMED",12,0)
 ;Set the starting place for additions.
"RTN","PXRMTMED",13,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMTMED",14,0)
 W !
"RTN","PXRMTMED",15,0)
 D ^DIC
"RTN","PXRMTMED",16,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTMED",17,0)
 I Y=-1 G END
"RTN","PXRMTMED",18,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTMED",19,0)
 S CS1=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",20,0)
 D EDIT(DIC,DA)
"RTN","PXRMTMED",21,0)
 I $G(DA)="" G GETNAME
"RTN","PXRMTMED",22,0)
 S CS2=$$FILE^PXRMEXCS(811.5,DA)
"RTN","PXRMTMED",23,0)
 I CS2=0 G GETNAME
"RTN","PXRMTMED",24,0)
 I CS2'=CS1 D SEHIST^PXRMUTIL(811.5,DIC,DA)
"RTN","PXRMTMED",25,0)
 G GETNAME
"RTN","PXRMTMED",26,0)
END ;
"RTN","PXRMTMED",27,0)
 Q
"RTN","PXRMTMED",28,0)
 ;
"RTN","PXRMTMED",29,0)
 ;=======================================================
"RTN","PXRMTMED",30,0)
CLASS(DA,DIE) ;
"RTN","PXRMTMED",31,0)
 N DR,RESULT,X,Y
"RTN","PXRMTMED",32,0)
RETRY W !
"RTN","PXRMTMED",33,0)
 S DR="100" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",34,0)
 ;Sponsor
"RTN","PXRMTMED",35,0)
 S DR="101" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",36,0)
 ;Make sure Class and Sponsor Class are in synch.
"RTN","PXRMTMED",37,0)
 S RESULT=$$VSPONSOR^PXRMINTR(X)
"RTN","PXRMTMED",38,0)
 I RESULT=0 S DIE("NO^")="Other value" G RETRY
"RTN","PXRMTMED",39,0)
 I RESULT=1 K DIE("NO^")
"RTN","PXRMTMED",40,0)
 ;Review date, Usage
"RTN","PXRMTMED",41,0)
 S DR="102;1" D ^DIE I $D(Y) Q
"RTN","PXRMTMED",42,0)
 Q
"RTN","PXRMTMED",43,0)
 ;
"RTN","PXRMTMED",44,0)
 ;=======================================================
"RTN","PXRMTMED",45,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTMED",46,0)
 N CLASS,DIC,DIE,DR,DIDEL,PXRMTMD,RESULT,TCONT,Y
"RTN","PXRMTMED",47,0)
 ;PXRMTMD is set by a xref on the .01 as a flag that the entire
"RTN","PXRMTMED",48,0)
 ;entry is being deleted.
"RTN","PXRMTMED",49,0)
 S CLASS=$P($G(^PXRMD(811.5,DA,100)),U,1)
"RTN","PXRMTMED",50,0)
 S DIE=ROOT
"RTN","PXRMTMED",51,0)
 I CLASS'="N"!(($G(PXRMINST)=1)&($G(DUZ(0))="@")) D
"RTN","PXRMTMED",52,0)
 . S DR=".01"
"RTN","PXRMTMED",53,0)
 . D ^DIE
"RTN","PXRMTMED",54,0)
 . I $G(DA)'="" D CLASS(DA,DIE)
"RTN","PXRMTMED",55,0)
 I $G(DA)="" Q
"RTN","PXRMTMED",56,0)
 S TCONT=1
"RTN","PXRMTMED",57,0)
 F  D FINDING(ROOT,DA)  Q:TCONT=0
"RTN","PXRMTMED",58,0)
 Q
"RTN","PXRMTMED",59,0)
 ;
"RTN","PXRMTMED",60,0)
 ;=======================================================
"RTN","PXRMTMED",61,0)
FINDING(DIE,DA) ;
"RTN","PXRMTMED",62,0)
 N CFIEN,GLOB,IEN,LIST,NODE,TERMSTAT,VF,WPIEN
"RTN","PXRMTMED",63,0)
 N DEF,DEF1,DEF2,STATUS
"RTN","PXRMTMED",64,0)
 S DIE("NO^")="OUTOK"
"RTN","PXRMTMED",65,0)
 S STATUS=0
"RTN","PXRMTMED",66,0)
 D DEF^PXRMRUTL("811.52",.DEF,.DEF1,.DEF2)
"RTN","PXRMTMED",67,0)
 S NODE="^PXRMD(811.5)"
"RTN","PXRMTMED",68,0)
 D LIST^PXRMREDT(NODE,DA,.DEF1,.LIST)
"RTN","PXRMTMED",69,0)
 D DSPALL^PXRMREDF("T",NODE,DA,.LIST)
"RTN","PXRMTMED",70,0)
 S DA(1)=DA
"RTN","PXRMTMED",71,0)
 S IEN=DA
"RTN","PXRMTMED",72,0)
 S DIC=DIE_DA(1)_",20,"
"RTN","PXRMTMED",73,0)
 S DIC(0)="QEAL"
"RTN","PXRMTMED",74,0)
 S DIC("A")="Select Finding: "
"RTN","PXRMTMED",75,0)
 D ^DIC I Y=-1 S DTOUT=1,TCONT=0 Q
"RTN","PXRMTMED",76,0)
 S DIE=DIC
"RTN","PXRMTMED",77,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMTMED",78,0)
 I GLOB="PXRMD(811.4," S CFIEN=$P($P(Y,U,2),";",1) D
"RTN","PXRMTMED",79,0)
 . I $D(^PXRMD(811.4,CFIEN,1))>0 D
"RTN","PXRMTMED",80,0)
 .. W !!,"Computed Finding Description:" S WPIEN=0
"RTN","PXRMTMED",81,0)
 .. F  S WPIEN=$O(^PXRMD(811.4,CFIEN,1,WPIEN)) Q:+WPIEN'>0  D
"RTN","PXRMTMED",82,0)
 ... W !,$G(^PXRMD(811.4,CFIEN,1,WPIEN,0))
"RTN","PXRMTMED",83,0)
 . E  W !!,"No description defined for this computed finding"
"RTN","PXRMTMED",84,0)
 . W !
"RTN","PXRMTMED",85,0)
 I GLOB="YTT(601.71," D WARN^PXRMMH
"RTN","PXRMTMED",86,0)
 W !,"Editing Finding Number: "_$G(DA)
"RTN","PXRMTMED",87,0)
 ;Finding record fields
"RTN","PXRMTMED",88,0)
 S DR=".01;9;12;17"
"RTN","PXRMTMED",89,0)
 I GLOB="PXRMD(811.4," S DR=DR_";26"
"RTN","PXRMTMED",90,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMTMED",91,0)
 I GLOB="PXD(811.2," D
"RTN","PXRMTMED",92,0)
 .S TERMSTAT=$$TAXNODE^PXRMSTA1($P($P(Y,U,2),";"))
"RTN","PXRMTMED",93,0)
 .I TERMSTAT="P" S DR=DR_";10" Q
"RTN","PXRMTMED",94,0)
 .I TERMSTAT'=0 S DR=DR_";10",STATUS=1
"RTN","PXRMTMED",95,0)
 ;Health Factor - within category rank
"RTN","PXRMTMED",96,0)
 I GLOB="AUTTHF(" S DR=DR_";11"
"RTN","PXRMTMED",97,0)
 ;If V file INCLUDE VISIT DATA
"RTN","PXRMTMED",98,0)
 S VF=$S(GLOB["AUTTEDT":1,GLOB["AUTTEXAM":1,GLOB["AUTTHF":1,GLOB["AUTTIMM":1,GLOB="AUTTSK":1,GLOB["PXD(811.2":1,1:0)
"RTN","PXRMTMED",99,0)
 I VF S DR=DR_";28"
"RTN","PXRMTMED",100,0)
 ;Mental Health - scale
"RTN","PXRMTMED",101,0)
 I GLOB="YTT(601.71," S DR=DR_";13"
"RTN","PXRMTMED",102,0)
 ;Radiology procedure
"RTN","PXRMTMED",103,0)
 I GLOB="RAMIS(71," S STATUS=1
"RTN","PXRMTMED",104,0)
 ;Orderable item
"RTN","PXRMTMED",105,0)
 I GLOB="ORD(101.43," S DR=DR_";27",STATUS=1
"RTN","PXRMTMED",106,0)
 ;Rx Type
"RTN","PXRMTMED",107,0)
 I GLOB="PSDRUG("!(GLOB="PS(50.605,")!(GLOB="PSNDF(50.6,") S DR=DR_";16;27",STATUS=1
"RTN","PXRMTMED",108,0)
 ;Condition
"RTN","PXRMTMED",109,0)
 S DR=DR_";14;15;18"
"RTN","PXRMTMED",110,0)
 ;
"RTN","PXRMTMED",111,0)
 ;Edit finding record
"RTN","PXRMTMED",112,0)
 D ^DIE
"RTN","PXRMTMED",113,0)
 I STATUS=1,$D(DA)>0,$D(Y)=0 D STATUS^PXRMSTA1(.DA,"T")
"RTN","PXRMTMED",114,0)
 S $P(^PXRMD(811.5,IEN,20,0),U,3)=0
"RTN","PXRMTMED",115,0)
 Q
"RTN","PXRMTMED",116,0)
 ;
"RTN","PXRMTXCE")
0^95^B21765274
"RTN","PXRMTXCE",1,0)
PXRMTXCE ;SLC/PKR - List Manager routines for taxonomy choose entries. ;05/21/2013
"RTN","PXRMTXCE",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXCE",3,0)
 ;
"RTN","PXRMTXCE",4,0)
 ;=========================================
"RTN","PXRMTXCE",5,0)
ENTRY ;Entry code
"RTN","PXRMTXCE",6,0)
 K ^TMP("PXRMTAXCE",$J)
"RTN","PXRMTXCE",7,0)
 I '$D(^TMP("PXRMTAXL",$J)) D BLDLIST^PXRMTAXL("PXRMTAXL")
"RTN","PXRMTXCE",8,0)
 M ^TMP("PXRMTAXCE",$J)=^TMP("PXRMTAXL",$J)
"RTN","PXRMTXCE",9,0)
 D XQORM
"RTN","PXRMTXCE",10,0)
 Q
"RTN","PXRMTXCE",11,0)
 ;
"RTN","PXRMTXCE",12,0)
 ;=========================================
"RTN","PXRMTXCE",13,0)
EXIT ;Exit code
"RTN","PXRMTXCE",14,0)
 K ^TMP("PXRMTAXCE",$J)
"RTN","PXRMTXCE",15,0)
 S VALMBCK="R"
"RTN","PXRMTXCE",16,0)
 Q
"RTN","PXRMTXCE",17,0)
 ;
"RTN","PXRMTXCE",18,0)
 ;=========================================
"RTN","PXRMTXCE",19,0)
HDR ; Header code
"RTN","PXRMTXCE",20,0)
 S VALMHDR(1)="Taxonomy File Entries."
"RTN","PXRMTXCE",21,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMTXCE",22,0)
 Q
"RTN","PXRMTXCE",23,0)
 ;
"RTN","PXRMTXCE",24,0)
 ;=========================================
"RTN","PXRMTXCE",25,0)
HELP ;Display help.
"RTN","PXRMTXCE",26,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXRMTXCE",27,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXRMTXCE",28,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXRMTXCE",29,0)
 S DDS=1,DONE=0
"RTN","PXRMTXCE",30,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMTXCE",31,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXRMTXCE",32,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMTXCE",33,0)
 D BROWSE^DDBR("TEXT","NR","Taxonomy Choose Entries Help")
"RTN","PXRMTXCE",34,0)
 S VALMBCK="R"
"RTN","PXRMTXCE",35,0)
 Q
"RTN","PXRMTXCE",36,0)
 ;
"RTN","PXRMTXCE",37,0)
 ;=========================================
"RTN","PXRMTXCE",38,0)
HLITE(ENUM,MODE,PXRMTIEN) ;Highlight/unhighlight an entry. MODE=1 turns on
"RTN","PXRMTXCE",39,0)
 ;highlighting, MODE=0 turns it off.
"RTN","PXRMTXCE",40,0)
 N LINE,START,STOP,VCTRL
"RTN","PXRMTXCE",41,0)
 S VCTRL=$S(MODE=1:IOINHI,1:IOINORM)
"RTN","PXRMTXCE",42,0)
 S START=$P(^TMP("PXRMTAXCE",$J,"LINES",ENUM),U,1)
"RTN","PXRMTXCE",43,0)
 S STOP=$P(^TMP("PXRMTAXCE",$J,"LINES",ENUM),U,2)
"RTN","PXRMTXCE",44,0)
 F LINE=START:1:STOP D CNTRL^VALM10(LINE,1,80,VCTRL,IOINORM)
"RTN","PXRMTXCE",45,0)
 S VALMHDR(1)=$$SLIST(.PXRMTIEN)
"RTN","PXRMTXCE",46,0)
 Q
"RTN","PXRMTXCE",47,0)
 ;
"RTN","PXRMTXCE",48,0)
 ;=========================================
"RTN","PXRMTXCE",49,0)
HTEXT ;Taxonomy choose entries help text.
"RTN","PXRMTXCE",50,0)
 ;;Select one of the following actions:
"RTN","PXRMTXCE",51,0)
 ;; SEL  - select a taxonomy to add to the list.
"RTN","PXRMTXCE",52,0)
 ;; REM  - remove a taxonomy from the list.
"RTN","PXRMTXCE",53,0)
 ;; INQ  - taxonomy inquiry.
"RTN","PXRMTXCE",54,0)
 ;; DONE - done building the selection list.
"RTN","PXRMTXCE",55,0)
 ;;**End Text**
"RTN","PXRMTXCE",56,0)
 Q
"RTN","PXRMTXCE",57,0)
 ;
"RTN","PXRMTXCE",58,0)
 ;=========================================
"RTN","PXRMTXCE",59,0)
PEXIT ; Protocol exit code
"RTN","PXRMTXCE",60,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMTXCE",61,0)
 ;Reset after page up/down etc
"RTN","PXRMTXCE",62,0)
 D XQORM
"RTN","PXRMTXCE",63,0)
 Q
"RTN","PXRMTXCE",64,0)
 ;
"RTN","PXRMTXCE",65,0)
 ;=========================================
"RTN","PXRMTXCE",66,0)
REMTAX ;Remove a taxonomy.
"RTN","PXRMTXCE",67,0)
 N IEN
"RTN","PXRMTXCE",68,0)
 ;Get the entry
"RTN","PXRMTXCE",69,0)
 S IEN=+$$GETSEL^PXRMTAXL("Remove which taxonomy from selection list?")
"RTN","PXRMTXCE",70,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTXCE",71,0)
 D REMOVE(IEN)
"RTN","PXRMTXCE",72,0)
 Q
"RTN","PXRMTXCE",73,0)
 ;
"RTN","PXRMTXCE",74,0)
 ;=========================================
"RTN","PXRMTXCE",75,0)
REMOVE(IEN) ;
"RTN","PXRMTXCE",76,0)
 N ENUM
"RTN","PXRMTXCE",77,0)
 K PXRMTIEN(IEN)
"RTN","PXRMTXCE",78,0)
 S ENUM=+$G(^TMP("PXRMTAXCE",$J,"IEN",IEN))
"RTN","PXRMTXCE",79,0)
 I ENUM>0 D HLITE(ENUM,0,.PXRMTIEN)
"RTN","PXRMTXCE",80,0)
 S VALMBCK="R"
"RTN","PXRMTXCE",81,0)
 Q
"RTN","PXRMTXCE",82,0)
 ;
"RTN","PXRMTXCE",83,0)
 ;=========================================
"RTN","PXRMTXCE",84,0)
SELECTED(IEN) ;
"RTN","PXRMTXCE",85,0)
 N ENUM
"RTN","PXRMTXCE",86,0)
 S ENUM=+$G(^TMP("PXRMTAXCE",$J,"IEN",IEN))
"RTN","PXRMTXCE",87,0)
 S PXRMTIEN(IEN)=ENUM
"RTN","PXRMTXCE",88,0)
 I ENUM>0 D HLITE(ENUM,1,.PXRMTIEN)
"RTN","PXRMTXCE",89,0)
 S VALMBCK="R"
"RTN","PXRMTXCE",90,0)
 Q
"RTN","PXRMTXCE",91,0)
 ;
"RTN","PXRMTXCE",92,0)
 ;=========================================
"RTN","PXRMTXCE",93,0)
SELTAX ;Select a taxonomy.
"RTN","PXRMTXCE",94,0)
 N IEN
"RTN","PXRMTXCE",95,0)
 ;Get the entry
"RTN","PXRMTXCE",96,0)
 S IEN=+$$GETSEL^PXRMTAXL("Add which taxonomy to selection list?")
"RTN","PXRMTXCE",97,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXRMTXCE",98,0)
 D SELECTED(IEN)
"RTN","PXRMTXCE",99,0)
 Q
"RTN","PXRMTXCE",100,0)
 ;
"RTN","PXRMTXCE",101,0)
 ;=========================================
"RTN","PXRMTXCE",102,0)
SLIST(PXRMTIEN) ;
"RTN","PXRMTXCE",103,0)
 N IEN,ENUM,ENUMLIST,SLIST
"RTN","PXRMTXCE",104,0)
 S IEN=""
"RTN","PXRMTXCE",105,0)
 F  S IEN=$O(PXRMTIEN(IEN)) Q:IEN=""  S ENUMLIST(PXRMTIEN(IEN))=""
"RTN","PXRMTXCE",106,0)
 S ENUM=$O(ENUMLIST("")),SLIST=ENUM
"RTN","PXRMTXCE",107,0)
 F  S ENUM=$O(ENUMLIST(ENUM)) Q:ENUM=""  S SLIST=SLIST_", "_ENUM
"RTN","PXRMTXCE",108,0)
 I SLIST="" S SLIST="none"
"RTN","PXRMTXCE",109,0)
 Q "Selected taxonomies: "_SLIST_"."
"RTN","PXRMTXCE",110,0)
 ;
"RTN","PXRMTXCE",111,0)
 ;=========================================
"RTN","PXRMTXCE",112,0)
START ;Main entry point for PXRM TAXONOMY SELECTION
"RTN","PXRMTXCE",113,0)
 W !,"Select a taxonomy or taxonomies to import from." H 2
"RTN","PXRMTXCE",114,0)
 D EN^VALM("PXRM TAXONOMY CHOOSE ENTRIES")
"RTN","PXRMTXCE",115,0)
 Q
"RTN","PXRMTXCE",116,0)
 ;
"RTN","PXRMTXCE",117,0)
 ;=========================================
"RTN","PXRMTXCE",118,0)
XQORM ;Set range for selection.
"RTN","PXRMTXCE",119,0)
 N NTAX
"RTN","PXRMTXCE",120,0)
 S NTAX=^TMP("PXRMTAXCE",$J,"NTAX")
"RTN","PXRMTXCE",121,0)
 S XQORM("#")=$O(^ORD(101,"B","PXRM TAXONOMY CHOOSE ENTRY",0))_U_"1:"_NTAX
"RTN","PXRMTXCE",122,0)
 S XQORM("A")="Select Action: "
"RTN","PXRMTXCE",123,0)
 Q
"RTN","PXRMTXCE",124,0)
 ;
"RTN","PXRMTXCE",125,0)
 ;=========================================
"RTN","PXRMTXCE",126,0)
XSEL ;Entry action for protocol PXRM TAXONOMY CHOOSE ENTRY.
"RTN","PXRMTXCE",127,0)
 N IEN,SEL
"RTN","PXRMTXCE",128,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXRMTXCE",129,0)
 ;Remove trailing ,
"RTN","PXRMTXCE",130,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXRMTXCE",131,0)
 ;Invalid selection
"RTN","PXRMTXCE",132,0)
 I SEL["," D  Q
"RTN","PXRMTXCE",133,0)
 . W !,"Only one item number allowed." H 2
"RTN","PXRMTXCE",134,0)
 . S VALMBCK="R"
"RTN","PXRMTXCE",135,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXRMTXCE",136,0)
 . W !,SEL_" is not a valid item number." H 2
"RTN","PXRMTXCE",137,0)
 . S VALMBCK="R"
"RTN","PXRMTXCE",138,0)
 ;
"RTN","PXRMTXCE",139,0)
 ;Get the IEN.
"RTN","PXRMTXCE",140,0)
 S IEN=^TMP("PXRMTAXL",$J,"SEL",SEL)
"RTN","PXRMTXCE",141,0)
 ;
"RTN","PXRMTXCE",142,0)
 ;Full screen mode
"RTN","PXRMTXCE",143,0)
 D FULL^VALM1
"RTN","PXRMTXCE",144,0)
 ;
"RTN","PXRMTXCE",145,0)
 ;Action list.
"RTN","PXRMTXCE",146,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXRMTXCE",147,0)
 S DIR(0)="SBM"_U
"RTN","PXRMTXCE",148,0)
 S DIR(0)=DIR(0)_"SEL:Select;REM:Remove;INQ:Inquire"
"RTN","PXRMTXCE",149,0)
 S DIR("A")="Select Action: "
"RTN","PXRMTXCE",150,0)
 S DIR("B")="SEL"
"RTN","PXRMTXCE",151,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXRMTXCE",152,0)
 D ^DIR
"RTN","PXRMTXCE",153,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXRMTXCE",154,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXRMTXCE",155,0)
 S OPTION=Y
"RTN","PXRMTXCE",156,0)
 D CLEAR^VALM1
"RTN","PXRMTXCE",157,0)
 ;
"RTN","PXRMTXCE",158,0)
 I OPTION="INQ" D INQ^PXRMTAXL(IEN)
"RTN","PXRMTXCE",159,0)
 I OPTION="REM" D REMOVE^PXRMTXCE(IEN)
"RTN","PXRMTXCE",160,0)
 I OPTION="SEL" D SELECTED^PXRMTXCE(IEN)
"RTN","PXRMTXCE",161,0)
 S VALMBCK="R"
"RTN","PXRMTXCE",162,0)
 Q
"RTN","PXRMTXCE",163,0)
 ;
"RTN","PXRMTXCR")
0^6^B74745189
"RTN","PXRMTXCR",1,0)
PXRMTXCR ;SLC/PKR - Taxonomies, copy from a range. ;05/07/2014
"RTN","PXRMTXCR",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXCR",3,0)
 ;==========================================
"RTN","PXRMTXCR",4,0)
BLDCFR(IEN,NODE) ;Build the range, selectable diagnosis, and selectable
"RTN","PXRMTXCR",5,0)
 ;procedure lists.
"RTN","PXRMTXCR",6,0)
 N CODE,CODEIEN,CODESYS,HIGH,IND,LOW,TNODE,TEMP
"RTN","PXRMTXCR",7,0)
 K ^TMP($J,NODE)
"RTN","PXRMTXCR",8,0)
 F CODESYS="ICD","ICP","CPT" D
"RTN","PXRMTXCR",9,0)
 . S TNODE=$S(CODESYS="ICD":80,CODESYS="ICP":80.1,CODESYS="CPT":81)
"RTN","PXRMTXCR",10,0)
 . S IND=0
"RTN","PXRMTXCR",11,0)
 . F  S IND=+$O(^PXD(811.2,IEN,TNODE,IND)) Q:IND=0  D
"RTN","PXRMTXCR",12,0)
 .. S TEMP=^PXD(811.2,IEN,TNODE,IND,0)
"RTN","PXRMTXCR",13,0)
 .. S LOW=$P(TEMP,U,1),HIGH=$P(TEMP,U,2)
"RTN","PXRMTXCR",14,0)
 .. I HIGH="" S HIGH=LOW
"RTN","PXRMTXCR",15,0)
 .. S ^TMP($J,NODE,CODESYS,LOW,HIGH)=""
"RTN","PXRMTXCR",16,0)
 ;
"RTN","PXRMTXCR",17,0)
 S IND=0
"RTN","PXRMTXCR",18,0)
 F  S IND=+$O(^PXD(811.2,IEN,"SDX",IND)) Q:IND=0  D
"RTN","PXRMTXCR",19,0)
 . S CODEIEN=$P(^PXD(811.2,IEN,"SDX",IND,0),U,1)
"RTN","PXRMTXCR",20,0)
 .;DBIA #5747
"RTN","PXRMTXCR",21,0)
 . S TEMP=$$ICDDX^ICDEX(CODEIEN,DT,"ICD","I")
"RTN","PXRMTXCR",22,0)
 . S CODE=$P(TEMP,U,2)
"RTN","PXRMTXCR",23,0)
 . S ^TMP($J,NODE,"SDX",CODE)=TEMP
"RTN","PXRMTXCR",24,0)
 S IND=0
"RTN","PXRMTXCR",25,0)
 F  S IND=+$O(^PXD(811.2,IEN,"SPR",IND)) Q:IND=0  D
"RTN","PXRMTXCR",26,0)
 . S CODEIEN=$P(^PXD(811.2,IEN,"SPR",IND,0),U,1)
"RTN","PXRMTXCR",27,0)
 .;DBIA #1995-A
"RTN","PXRMTXCR",28,0)
 . S TEMP=$$CPT^ICPTCOD(CODEIEN)
"RTN","PXRMTXCR",29,0)
 . S CODE=$P(TEMP,U,2)
"RTN","PXRMTXCR",30,0)
 . S ^TMP($J,NODE,"SPR",CODE)=TEMP
"RTN","PXRMTXCR",31,0)
 Q
"RTN","PXRMTXCR",32,0)
 ;
"RTN","PXRMTXCR",33,0)
 ;==========================================
"RTN","PXRMTXCR",34,0)
CFR(IEN) ;Combine building selectable lists and copy from range.
"RTN","PXRMTXCR",35,0)
 D BLDCFR(IEN,"CFR")
"RTN","PXRMTXCR",36,0)
 D CFRANGE(IEN,"CFR")
"RTN","PXRMTXCR",37,0)
 Q
"RTN","PXRMTXCR",38,0)
 ;
"RTN","PXRMTXCR",39,0)
 ;==========================================
"RTN","PXRMTXCR",40,0)
CFRANGE(IEN,NODE) ;Copy from a range of codes to the Lexicon based structure.
"RTN","PXRMTXCR",41,0)
 N CODE,CODEIEN,CODESYS,CSYS,CSYSIND,FDA,IENS,IND,HIGH,LOW,MSG
"RTN","PXRMTXCR",42,0)
 N NCODES,NUID,TEMP,TERM,TERMIND,UID
"RTN","PXRMTXCR",43,0)
 K ^TMP("PXRMCFR",$J)
"RTN","PXRMTXCR",44,0)
 F CODESYS="ICD","ICP","CPT" D
"RTN","PXRMTXCR",45,0)
 . S LOW=""
"RTN","PXRMTXCR",46,0)
 . F  S LOW=$O(^TMP($J,NODE,CODESYS,LOW)) Q:LOW=""  D
"RTN","PXRMTXCR",47,0)
 .. S HIGH=""
"RTN","PXRMTXCR",48,0)
 .. F  S HIGH=$O(^TMP($J,NODE,CODESYS,LOW,HIGH)) Q:HIGH=""  D
"RTN","PXRMTXCR",49,0)
 ... S TERM="Copy from "_CODESYS_" range "_LOW_" to "_HIGH
"RTN","PXRMTXCR",50,0)
 ...;Check for existing entries for this term and remove them before
"RTN","PXRMTXCR",51,0)
 ...; storing the new set.
"RTN","PXRMTXCR",52,0)
 ... I $D(^PXD(811.2,IEN,20,"B",TERM)) D
"RTN","PXRMTXCR",53,0)
 .... S TERMIND=$O(^PXD(811.2,IEN,20,"B",TERM,""))
"RTN","PXRMTXCR",54,0)
 .... S IENS=TERMIND_","_IEN_","
"RTN","PXRMTXCR",55,0)
 .... S FDA(811.23,IENS,.01)="@"
"RTN","PXRMTXCR",56,0)
 .... D FILE^DIE("","FDA","MSG")
"RTN","PXRMTXCR",57,0)
 ... S CODE=LOW
"RTN","PXRMTXCR",58,0)
 ... F  Q:(CODE]HIGH)!(CODE="")  D
"RTN","PXRMTXCR",59,0)
 ....;DBIA #1997, #3991
"RTN","PXRMTXCR",60,0)
 .... S TEMP=$S(CODESYS="CPT":$$STATCHK^ICPTAPIU(CODE,""),1:$$STATCHK^ICDAPIU(CODE,""))
"RTN","PXRMTXCR",61,0)
 .... S CODEIEN=$P(TEMP,U,2)
"RTN","PXRMTXCR",62,0)
 .... I CODEIEN=-1 D  Q
"RTN","PXRMTXCR",63,0)
 ..... D MES^XPDUTL(" Warning - "_CODESYS_" code "_CODE_" is not valid.")
"RTN","PXRMTXCR",64,0)
 ..... S CODE=$S(CODESYS="CPT":$$NEXT^ICPTAPIU(CODE),1:$$NEXT^ICDAPIU(CODE))
"RTN","PXRMTXCR",65,0)
 .... S UID=0
"RTN","PXRMTXCR",66,0)
 ....;Mark as Use in Dialog if the code is marked as selectable.
"RTN","PXRMTXCR",67,0)
 .... I CODESYS="ICD",$D(^TMP($J,NODE,"SDX",CODE)) S UID=1
"RTN","PXRMTXCR",68,0)
 .... I CODESYS="CPT",$D(^TMP($J,NODE,"SPR",CODE)) S UID=1
"RTN","PXRMTXCR",69,0)
 .... S ^TMP("PXRMCFR",$J,TERM,CODESYS,CODE)=UID
"RTN","PXRMTXCR",70,0)
 .... S ^TMP($J,NODE,"STORED",CODESYS,CODE)=""
"RTN","PXRMTXCR",71,0)
 .... S CODE=$S(CODESYS="CPT":$$NEXT^ICPTAPIU(CODE),1:$$NEXT^ICDAPIU(CODE))
"RTN","PXRMTXCR",72,0)
 ;
"RTN","PXRMTXCR",73,0)
 ;Get selectable codes that are not in a range.
"RTN","PXRMTXCR",74,0)
 S TERM="Copy from selectable diagnosis"
"RTN","PXRMTXCR",75,0)
 ;Check for existing entries for this term and remove them before
"RTN","PXRMTXCR",76,0)
 ;storing the new set.
"RTN","PXRMTXCR",77,0)
 I $D(^PXD(811.2,IEN,20,"B",TERM)) D
"RTN","PXRMTXCR",78,0)
 . S TERMIND=$O(^PXD(811.2,IEN,20,"B",TERM,""))
"RTN","PXRMTXCR",79,0)
 . S IENS=TERMIND_","_IEN_","
"RTN","PXRMTXCR",80,0)
 . S FDA(811.23,IENS,.01)="@"
"RTN","PXRMTXCR",81,0)
 . D FILE^DIE("","FDA","MSG")
"RTN","PXRMTXCR",82,0)
 S CODE=""
"RTN","PXRMTXCR",83,0)
 F  S CODE=$O(^TMP($J,NODE,"SDX",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",84,0)
 .;Don't store codes that have already been stored.
"RTN","PXRMTXCR",85,0)
 . I $D(^TMP($J,NODE,"STORED","ICD",CODE)) Q
"RTN","PXRMTXCR",86,0)
 . S TEMP=^TMP($J,NODE,"SDX",CODE)
"RTN","PXRMTXCR",87,0)
 . I $P(TEMP,U,1)=-1 D  Q
"RTN","PXRMTXCR",88,0)
 .. D MES^XPDUTL(" Warning - selectable code "_CODE_" is not valid.")
"RTN","PXRMTXCR",89,0)
 . S ^TMP("PXRMCFR",$J,TERM,"ICD",CODE)=1
"RTN","PXRMTXCR",90,0)
 ;
"RTN","PXRMTXCR",91,0)
 S TERM="Copy from selectable procedure"
"RTN","PXRMTXCR",92,0)
 ;Check for existing entries for this term and remove them before
"RTN","PXRMTXCR",93,0)
 ;storing the new set.
"RTN","PXRMTXCR",94,0)
 I $D(^PXD(811.2,IEN,20,"B",TERM)) D
"RTN","PXRMTXCR",95,0)
 . S TERMIND=$O(^PXD(811.2,IEN,20,"B",TERM,""))
"RTN","PXRMTXCR",96,0)
 . S IENS=TERMIND_","_IEN_","
"RTN","PXRMTXCR",97,0)
 . S FDA(811.23,IENS,.01)="@"
"RTN","PXRMTXCR",98,0)
 . D FILE^DIE("","FDA","MSG")
"RTN","PXRMTXCR",99,0)
 S CODE=""
"RTN","PXRMTXCR",100,0)
 F  S CODE=$O(^TMP($J,NODE,"SPR",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",101,0)
 .;Don't store codes that have already been stored.
"RTN","PXRMTXCR",102,0)
 . I $D(^TMP($J,NODE,"STORED","CPT",CODE)) Q
"RTN","PXRMTXCR",103,0)
 . S TEMP=^TMP($J,NODE,"SPR",CODE)
"RTN","PXRMTXCR",104,0)
 . I $P(TEMP,U,1)=-1 D  Q
"RTN","PXRMTXCR",105,0)
 .. D MES^XPDUTL(" Warning - selectable procedure "_CODE_" is not valid.")
"RTN","PXRMTXCR",106,0)
 . S ^TMP("PXRMCFR",$J,TERM,"CPT",CODE)=1
"RTN","PXRMTXCR",107,0)
 ;
"RTN","PXRMTXCR",108,0)
 ;The pointer based system did not differentiate between CPC and CPT
"RTN","PXRMTXCR",109,0)
 ;codes, do that here.
"RTN","PXRMTXCR",110,0)
 S TERM=""
"RTN","PXRMTXCR",111,0)
 F  S TERM=$O(^TMP("PXRMCFR",$J,TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",112,0)
 . I '$D(^TMP("PXRMCFR",$J,TERM,"CPT")) Q
"RTN","PXRMTXCR",113,0)
 . S CODE=""
"RTN","PXRMTXCR",114,0)
 . F  S CODE=$O(^TMP("PXRMCFR",$J,TERM,"CPT",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",115,0)
 ..;DBIA #1995
"RTN","PXRMTXCR",116,0)
 .. S CSYS=$P($$CPT^ICPTCOD(CODE),U,5)
"RTN","PXRMTXCR",117,0)
 .. I CSYS="C" Q
"RTN","PXRMTXCR",118,0)
 .. S ^TMP("PXRMCFR",$J,TERM,"CPC",CODE)=^TMP("PXRMCFR",$J,TERM,"CPT",CODE)
"RTN","PXRMTXCR",119,0)
 ;Remove extraneous CPT codes.
"RTN","PXRMTXCR",120,0)
 S TERM=""
"RTN","PXRMTXCR",121,0)
 F  S TERM=$O(^TMP("PXRMCFR",$J,TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",122,0)
 . I '$D(^TMP("PXRMCFR",$J,TERM,"CPC")) Q
"RTN","PXRMTXCR",123,0)
 . S CODE=""
"RTN","PXRMTXCR",124,0)
 . F  S CODE=$O(^TMP("PXRMCFR",$J,TERM,"CPC",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",125,0)
 .. K ^TMP("PXRMCFR",$J,TERM,"CPT",CODE)
"RTN","PXRMTXCR",126,0)
 K ^TMP($J,NODE)
"RTN","PXRMTXCR",127,0)
 ;
"RTN","PXRMTXCR",128,0)
 ;Build the FDA and file it for each range.
"RTN","PXRMTXCR",129,0)
 S TERM="",TERMIND=0
"RTN","PXRMTXCR",130,0)
 F  S TERM=$O(^TMP("PXRMCFR",$J,TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",131,0)
 . K FDA,MSG
"RTN","PXRMTXCR",132,0)
 . S TERMIND=TERMIND+1
"RTN","PXRMTXCR",133,0)
 . S IENS="+"_TERMIND_","_IEN_","
"RTN","PXRMTXCR",134,0)
 . S FDA(811.23,IENS,.01)=TERM
"RTN","PXRMTXCR",135,0)
 . S CODESYS="",CSYSIND=TERMIND
"RTN","PXRMTXCR",136,0)
 . F  S CODESYS=$O(^TMP("PXRMCFR",$J,TERM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXCR",137,0)
 .. S CSYSIND=CSYSIND+1
"RTN","PXRMTXCR",138,0)
 .. S CODE="",(NCODES,NUID)=0
"RTN","PXRMTXCR",139,0)
 .. F  S CODE=$O(^TMP("PXRMCFR",$J,TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",140,0)
 ... S NCODES=NCODES+1
"RTN","PXRMTXCR",141,0)
 ... S IENS="+"_(NCODES+CSYSIND)_",+"_CSYSIND_",+"_TERMIND_","_IEN_","
"RTN","PXRMTXCR",142,0)
 ... S UID=^TMP("PXRMCFR",$J,TERM,CODESYS,CODE)
"RTN","PXRMTXCR",143,0)
 ... I UID=1 S NUID=NUID+1
"RTN","PXRMTXCR",144,0)
 ... S FDA(811.2312,IENS,.01)=CODE
"RTN","PXRMTXCR",145,0)
 ... S FDA(811.2312,IENS,1)=UID
"RTN","PXRMTXCR",146,0)
 .. S IENS="+"_CSYSIND_",+"_TERMIND_","_IEN_","
"RTN","PXRMTXCR",147,0)
 .. S FDA(811.231,IENS,.01)=CODESYS
"RTN","PXRMTXCR",148,0)
 .. S FDA(811.231,IENS,1)=NCODES
"RTN","PXRMTXCR",149,0)
 .. S FDA(811.231,IENS,3)=NUID
"RTN","PXRMTXCR",150,0)
 . D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMTXCR",151,0)
 K ^TMP("PXRMCFR",$J)
"RTN","PXRMTXCR",152,0)
 D CNTCHK(IEN)
"RTN","PXRMTXCR",153,0)
 Q
"RTN","PXRMTXCR",154,0)
 ;
"RTN","PXRMTXCR",155,0)
 ;==========================================
"RTN","PXRMTXCR",156,0)
CNTCHK(IEN) ;Compare the number of codes stored under the old pointer
"RTN","PXRMTXCR",157,0)
 ;structure with the number in the new structure.
"RTN","PXRMTXCR",158,0)
 N CODE,CODEIEN,NCPC,NCPT,NICD,NICD0,NICD9,NICP,NICPT,TEMP,TERM,TEXT
"RTN","PXRMTXCR",159,0)
 K ^TMP($J,"CPT"),^TMP($J,"ICD"),^TMP($J,"ICP")
"RTN","PXRMTXCR",160,0)
 ;Rebuild the expansion to make sure it is current.
"RTN","PXRMTXCR",161,0)
 D EXPAND^PXRMBXTL(IEN,"")
"RTN","PXRMTXCR",162,0)
 S TEMP=$G(^PXD(811.3,IEN,0))
"RTN","PXRMTXCR",163,0)
 S NICD0=+$P(TEMP,U,3),NICD9=+$P(TEMP,U,5),NICPT=+$P(TEMP,U,7)
"RTN","PXRMTXCR",164,0)
 S (NCPC,NCPT,NICD,NICP)=0
"RTN","PXRMTXCR",165,0)
 I NICD0>0 D
"RTN","PXRMTXCR",166,0)
 . S TERM=""
"RTN","PXRMTXCR",167,0)
 . F  S TERM=$O(^PXD(811.2,IEN,20,"ATCC",TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",168,0)
 .. I $E(TERM,1,13)'="Copy from ICP" Q
"RTN","PXRMTXCR",169,0)
 .. S CODE=""
"RTN","PXRMTXCR",170,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"ATCC",TERM,"ICP",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",171,0)
 ... S CODEIEN=^PXD(811.2,IEN,20,"AE","ICP",CODE)
"RTN","PXRMTXCR",172,0)
 ... S ^TMP($J,"ICP",CODEIEN)=CODE
"RTN","PXRMTXCR",173,0)
 .;Count the unqiue entries.
"RTN","PXRMTXCR",174,0)
 . S CODEIEN=""
"RTN","PXRMTXCR",175,0)
 . F  S CODEIEN=$O(^TMP($J,"ICP",CODEIEN)) Q:CODEIEN=""  S NICP=NICP+1
"RTN","PXRMTXCR",176,0)
 I NICD9>0 D
"RTN","PXRMTXCR",177,0)
 . S TERM=""
"RTN","PXRMTXCR",178,0)
 . F  S TERM=$O(^PXD(811.2,IEN,20,"ATCC",TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",179,0)
 .. I $E(TERM,1,13)'="Copy from ICD" Q
"RTN","PXRMTXCR",180,0)
 .. S CODE=""
"RTN","PXRMTXCR",181,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"ATCC",TERM,"ICD",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",182,0)
 ... S CODEIEN=^PXD(811.2,IEN,20,"AE","ICD",CODE)
"RTN","PXRMTXCR",183,0)
 ... S ^TMP($J,"ICD",CODEIEN)=CODE
"RTN","PXRMTXCR",184,0)
 .;Count the unqiue entries.
"RTN","PXRMTXCR",185,0)
 . S CODEIEN=""
"RTN","PXRMTXCR",186,0)
 . F  S CODEIEN=$O(^TMP($J,"ICD",CODEIEN)) Q:CODEIEN=""  S NICD=NICD+1
"RTN","PXRMTXCR",187,0)
 I NICPT>0 D
"RTN","PXRMTXCR",188,0)
 . S TERM=""
"RTN","PXRMTXCR",189,0)
 . F  S TERM=$O(^PXD(811.2,IEN,20,"ATCC",TERM)) Q:TERM=""  D
"RTN","PXRMTXCR",190,0)
 .. I $E(TERM,1,13)'="Copy from CPT" Q
"RTN","PXRMTXCR",191,0)
 .. S CODE=""
"RTN","PXRMTXCR",192,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"ATCC",TERM,"CPC",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",193,0)
 ... S NCPC=NCPC+1
"RTN","PXRMTXCR",194,0)
 ... S CODEIEN=^PXD(811.2,IEN,20,"AE","CPC",CODE)
"RTN","PXRMTXCR",195,0)
 ... S ^TMP($J,"CPT",CODEIEN)=CODE
"RTN","PXRMTXCR",196,0)
 .. S CODE=""
"RTN","PXRMTXCR",197,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"ATCC",TERM,"CPT",CODE)) Q:CODE=""  D
"RTN","PXRMTXCR",198,0)
 ... S CODEIEN=^PXD(811.2,IEN,20,"AE","CPT",CODE)
"RTN","PXRMTXCR",199,0)
 ... S ^TMP($J,"CPT",CODEIEN)=CODE
"RTN","PXRMTXCR",200,0)
 .;Count the unqiue entries.
"RTN","PXRMTXCR",201,0)
 . S CODEIEN=""
"RTN","PXRMTXCR",202,0)
 . F  S CODEIEN=$O(^TMP($J,"CPT",CODEIEN)) Q:CODEIEN=""  S NCPT=NCPT+1
"RTN","PXRMTXCR",203,0)
 I (NICD0>0),(NICD0'=NICP) D
"RTN","PXRMTXCR",204,0)
 . S TEXT(1)="Encountered a problem moving ICD-9 operation/procedure codes to the new structure."
"RTN","PXRMTXCR",205,0)
 . S TEXT(2)=" For taxonomy "_$P(^PXD(811.2,IEN,0),U,1)_" ("_IEN_")."
"RTN","PXRMTXCR",206,0)
 . S TEXT(3)=" Original number of codes: "_NICD0
"RTN","PXRMTXCR",207,0)
 . S TEXT(4)=" Number of copied codes: "_NICP
"RTN","PXRMTXCR",208,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMTXCR",209,0)
 I (NICD9>0),(NICD9'=NICD) D
"RTN","PXRMTXCR",210,0)
 . K TEXT
"RTN","PXRMTXCR",211,0)
 . S TEXT(1)="Encountered a problem moving ICD-9 diagnosis codes to the new structure."
"RTN","PXRMTXCR",212,0)
 . S TEXT(2)=" For taxonomy "_$P(^PXD(811.2,IEN,0),U,1)_" ("_IEN_")."
"RTN","PXRMTXCR",213,0)
 . S TEXT(3)=" Original number of codes: "_NICD9
"RTN","PXRMTXCR",214,0)
 . S TEXT(4)=" Number of copied codes: "_NICD
"RTN","PXRMTXCR",215,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMTXCR",216,0)
 I (NICPT>0),(NICPT'=NCPT) D
"RTN","PXRMTXCR",217,0)
 . K TEXT
"RTN","PXRMTXCR",218,0)
 . S TEXT(1)="Encountered a problem moving CPT codes to the new structure."
"RTN","PXRMTXCR",219,0)
 . S TEXT(2)=" For taxonomy "_$P(^PXD(811.2,IEN,0),U,1)_" ("_IEN_")."
"RTN","PXRMTXCR",220,0)
 . S TEXT(3)=" Original number of codes: "_NICPT
"RTN","PXRMTXCR",221,0)
 . S TEXT(4)=" Number of copied codes: "_(NCPC+NCPT)
"RTN","PXRMTXCR",222,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMTXCR",223,0)
 K ^TMP($J,"CPT"),^TMP($J,"ICD"),^TMP($J,"ICP")
"RTN","PXRMTXCR",224,0)
 Q
"RTN","PXRMTXCR",225,0)
 ;
"RTN","PXRMTXCR",226,0)
 ;==========================================
"RTN","PXRMTXCR",227,0)
CPALL ;Do a range of codes copy for all taxonomies.
"RTN","PXRMTXCR",228,0)
 N IEN,NAME
"RTN","PXRMTXCR",229,0)
 D BMES^XPDUTL("Copying ranges of codes for all taxonomies.")
"RTN","PXRMTXCR",230,0)
 S NAME=""
"RTN","PXRMTXCR",231,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMTXCR",232,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTXCR",233,0)
 . D MES^XPDUTL("Copy codes for taxonomy "_NAME_" (IEN="_IEN_")")
"RTN","PXRMTXCR",234,0)
 . D CFR(IEN)
"RTN","PXRMTXCR",235,0)
 K ^TMP($J,"PXRMDLG")
"RTN","PXRMTXCR",236,0)
 Q
"RTN","PXRMTXCR",237,0)
 ;
"RTN","PXRMTXCR",238,0)
 ;==========================================
"RTN","PXRMTXCR",239,0)
EXCH(IEN,NODE) ;This entry point is used by Reminder Exchange to populate
"RTN","PXRMTXCR",240,0)
 ;the Selected Codes multiple for taxonomies that were packed before
"RTN","PXRMTXCR",241,0)
 ;the Selected Codes multiple existed.
"RTN","PXRMTXCR",242,0)
 ;^TMP($J,NODE) is built in TAX^PXRMEXU0
"RTN","PXRMTXCR",243,0)
 I '$D(^TMP($J,NODE)) Q
"RTN","PXRMTXCR",244,0)
 D CFRANGE(IEN,NODE)
"RTN","PXRMTXCR",245,0)
 Q
"RTN","PXRMTXCR",246,0)
 ;
"RTN","PXRMTXCS")
0^91^B3010053
"RTN","PXRMTXCS",1,0)
PXRMTXCS ; SLC/PKR - Taxonomy code search routines. ;07/24/2013
"RTN","PXRMTXCS",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXCS",3,0)
 ;
"RTN","PXRMTXCS",4,0)
 ;=====================================================
"RTN","PXRMTXCS",5,0)
CSEARCH(CODESYS,CODE,NFOUND,TAXLIST) ; Search all taxonomies to see if they
"RTN","PXRMTXCS",6,0)
 ;contain CODE.
"RTN","PXRMTXCS",7,0)
 N IEN,NAME
"RTN","PXRMTXCS",8,0)
 K TAXLIST
"RTN","PXRMTXCS",9,0)
 S NFOUND=0,NAME=""
"RTN","PXRMTXCS",10,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMTXCS",11,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTXCS",12,0)
 . I $D(^PXD(811.2,IEN,20,"AE",CODESYS,CODE)) S NFOUND=NFOUND+1,TAXLIST(NAME)=""
"RTN","PXRMTXCS",13,0)
 Q
"RTN","PXRMTXCS",14,0)
 ;
"RTN","PXRMTXCS",15,0)
 ;=====================================================
"RTN","PXRMTXCS",16,0)
SEARCH ; Let the user input a code then search all taxonomies to determine
"RTN","PXRMTXCS",17,0)
 ;which ones include that code.
"RTN","PXRMTXCS",18,0)
 N CODE,CODESYS,CODESYSL,CODESYSP,DATA,DIR,DIRUT,DTOUT,DUOUT,NFOUND
"RTN","PXRMTXCS",19,0)
 N TAX,TAXLIST,RESULT,VALID,Y
"RTN","PXRMTXCS",20,0)
 D CODESYSL^PXRMLEX(.CODESYSL)
"RTN","PXRMTXCS",21,0)
 S DIR(0)="FAOU"
"RTN","PXRMTXCS",22,0)
 S DIR("A")="Input a code to search for: "
"RTN","PXRMTXCS",23,0)
GCODE W !
"RTN","PXRMTXCS",24,0)
 D ^DIR
"RTN","PXRMTXCS",25,0)
 I $D(DIRUT) Q
"RTN","PXRMTXCS",26,0)
 S CODE=Y
"RTN","PXRMTXCS",27,0)
 ;See if this is a valid code.
"RTN","PXRMTXCS",28,0)
 S VALID=$$VCODE^PXRMLEX(CODE)
"RTN","PXRMTXCS",29,0)
 I 'VALID W !,CODE," is not a valid code, try again." G GCODE
"RTN","PXRMTXCS",30,0)
 S CODESYS=$$GETCSYS^PXRMLEX(CODE)
"RTN","PXRMTXCS",31,0)
 ;DBIA #5679
"RTN","PXRMTXCS",32,0)
 S CODESYSP=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMTXCS",33,0)
 W !,"Searching for ",CODESYSP," code ",CODE
"RTN","PXRMTXCS",34,0)
 D CSEARCH(CODESYS,CODE,.NFOUND,.TAXLIST)
"RTN","PXRMTXCS",35,0)
 I NFOUND=0 W !,CODE," is not used in any taxonomies." G GCODE
"RTN","PXRMTXCS",36,0)
 W !,CODESYSP," ",CODE," is used in the following taxonomies:"
"RTN","PXRMTXCS",37,0)
 S TAX=""
"RTN","PXRMTXCS",38,0)
 F  S TAX=$O(TAXLIST(TAX)) Q:TAX=""  W !," ",TAX
"RTN","PXRMTXCS",39,0)
 G GCODE
"RTN","PXRMTXCS",40,0)
 Q
"RTN","PXRMTXCS",41,0)
 ; 
"RTN","PXRMTXDL")
0^108^B1299916
"RTN","PXRMTXDL",1,0)
PXRMTXDL ;SLC/PKR - Reminder Dialog Taxonomy edit routines ;10/31/2013
"RTN","PXRMTXDL",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXDL",3,0)
 ;
"RTN","PXRMTXDL",4,0)
 ;===================================
"RTN","PXRMTXDL",5,0)
CODEPOST ;Post Action on Change for the Code field of Use in Dialog Codes.
"RTN","PXRMTXDL",6,0)
 N CODE,CODESYS,ERROR
"RTN","PXRMTXDL",7,0)
 S CODE=$$GET^DDSVAL(811.24,.DA,.01,.ERROR)
"RTN","PXRMTXDL",8,0)
 S CODESYS=$$GETCSYS^PXRMLEX(CODE)
"RTN","PXRMTXDL",9,0)
 D PUT^DDSVAL(811.24,.DA,1,CODESYS,.ERROR)
"RTN","PXRMTXDL",10,0)
 Q
"RTN","PXRMTXDL",11,0)
 ;
"RTN","PXRMTXDL",12,0)
 ;===================================
"RTN","PXRMTXDL",13,0)
POSTSAVE(IEN) ;Form Post Save. Store changes in lists of codes.
"RTN","PXRMTXDL",14,0)
 N CODE,CODESYS,CSYIND,FDA,KCSYSIND,KFDA,MSG,NSEL,NUID,PDS
"RTN","PXRMTXDL",15,0)
 N PDS
"RTN","PXRMTXDL",16,0)
 ;Make sure Patient Data Source index is built.
"RTN","PXRMTXDL",17,0)
 S PDS=$$GET^DDSVAL(811.2,IEN,"PATIENT DATA SOURCE")
"RTN","PXRMTXDL",18,0)
 I PDS="" D SPDS^PXRMPDS(IEN,PDS)
"RTN","PXRMTXDL",19,0)
 Q
"RTN","PXRMTXDL",20,0)
 ;
"RTN","PXRMTXDL",21,0)
 ;===================================
"RTN","PXRMTXDL",22,0)
SELECT ;Select the taxonomy to create or edit.
"RTN","PXRMTXDL",23,0)
 N DIC,DLAYGO,IEN,Y
"RTN","PXRMTXDL",24,0)
 S (DIC,DLAYGO)=811.2,DIC(0)="AEKL"
"RTN","PXRMTXDL",25,0)
 S DIC("S")="I $P(^(100),U,1)'=""N"""
"RTN","PXRMTXDL",26,0)
 D FULL^VALM1
"RTN","PXRMTXDL",27,0)
 D ^DIC
"RTN","PXRMTXDL",28,0)
 S IEN=$P(Y,U,1)
"RTN","PXRMTXDL",29,0)
 I IEN=-1 S VALMBCK="R" Q
"RTN","PXRMTXDL",30,0)
 ;Edit the taxonomy
"RTN","PXRMTXDL",31,0)
 D SMANEDIT^PXRMTXSM(IEN,0,"PXRM DIALOG TAXONOMY EDIT")
"RTN","PXRMTXDL",32,0)
 S VALMBCK="R"
"RTN","PXRMTXDL",33,0)
 Q
"RTN","PXRMTXDL",34,0)
 ;
"RTN","PXRMTXIC")
0^128^B8164040
"RTN","PXRMTXIC",1,0)
PXRMTXIC ;SLC/PKR - Reminder Taxonomy integrity check and repair. ;04/22/2014
"RTN","PXRMTXIC",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXIC",3,0)
 ;
"RTN","PXRMTXIC",4,0)
 ;===================================
"RTN","PXRMTXIC",5,0)
CHECKALL ;Check all taxonomies.
"RTN","PXRMTXIC",6,0)
 N IEN,NAME,TEXT
"RTN","PXRMTXIC",7,0)
 D MES^XPDUTL("Check the integrity of all reminder taxonomies.")
"RTN","PXRMTXIC",8,0)
 S NAME=""
"RTN","PXRMTXIC",9,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:(NAME="")  D
"RTN","PXRMTXIC",10,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTXIC",11,0)
 . S TEXT(1)=" "
"RTN","PXRMTXIC",12,0)
 . S TEXT(2)="Checking "_NAME_" (IEN="_IEN_")"
"RTN","PXRMTXIC",13,0)
 . D MES^XPDUTL(.TEXT)
"RTN","PXRMTXIC",14,0)
 . D INTCHK(IEN)
"RTN","PXRMTXIC",15,0)
 Q
"RTN","PXRMTXIC",16,0)
 ;
"RTN","PXRMTXIC",17,0)
 ;===================================
"RTN","PXRMTXIC",18,0)
CHECKONE ;Check selected definitions.
"RTN","PXRMTXIC",19,0)
 N DIC,DTOUT,DUOUT,IEN,OK,Y
"RTN","PXRMTXIC",20,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTXIC",21,0)
 S DIC(0)="AEMQ"
"RTN","PXRMTXIC",22,0)
 S DIC("A")="Select Reminder Taxonomy: "
"RTN","PXRMTXIC",23,0)
GETTAX ;Get the taxonomy to check.
"RTN","PXRMTXIC",24,0)
 W !
"RTN","PXRMTXIC",25,0)
 D ^DIC
"RTN","PXRMTXIC",26,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTXIC",27,0)
 I Y=-1 Q
"RTN","PXRMTXIC",28,0)
 S IEN=$P(Y,U,1)
"RTN","PXRMTXIC",29,0)
 D INTCHK(IEN)
"RTN","PXRMTXIC",30,0)
 G GETTAX
"RTN","PXRMTXIC",31,0)
 Q
"RTN","PXRMTXIC",32,0)
 ;
"RTN","PXRMTXIC",33,0)
 ;===================================
"RTN","PXRMTXIC",34,0)
INTCHK(TAXIEN) ;Taxonomy integrity check.
"RTN","PXRMTXIC",35,0)
 ;Check for search term inconsistencies.
"RTN","PXRMTXIC",36,0)
 N CODESYS,DA1,IENS,NPROB,NTC,SAVEOK,TC,TCLIST,TEXT
"RTN","PXRMTXIC",37,0)
 S TC=""
"RTN","PXRMTXIC",38,0)
 F  S TC=$O(^PXD(811.2,TAXIEN,20,"ATC",TC)) Q:TC=""  D
"RTN","PXRMTXIC",39,0)
 . S CODESYS=""
"RTN","PXRMTXIC",40,0)
 . F  S CODESYS=$O(^PXD(811.2,TAXIEN,20,"ATC",TC,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIC",41,0)
 .. S DA1=$P(^PXD(811.2,TAXIEN,20,"ATC",TC,CODESYS),U,1)
"RTN","PXRMTXIC",42,0)
 .. S TCLIST(DA1,TC,CODESYS)=""
"RTN","PXRMTXIC",43,0)
 ;Count the number of search terms that were stored and overwritten
"RTN","PXRMTXIC",44,0)
 ;at DA1. There is a problem if there is more than one.
"RTN","PXRMTXIC",45,0)
 S DA1=0
"RTN","PXRMTXIC",46,0)
 F  S DA1=$O(TCLIST(DA1)) Q:DA1=""  D
"RTN","PXRMTXIC",47,0)
 . S NTC=0,TC=""
"RTN","PXRMTXIC",48,0)
 . F  S TC=$O(TCLIST(DA1,TC)) Q:TC=""  D
"RTN","PXRMTXIC",49,0)
 .. S NTC=NTC+1
"RTN","PXRMTXIC",50,0)
 . S TCLIST(DA1)=NTC
"RTN","PXRMTXIC",51,0)
 S (DA1,NPROB)=0
"RTN","PXRMTXIC",52,0)
 F  S DA1=$O(TCLIST(DA1)) Q:DA1=""  D
"RTN","PXRMTXIC",53,0)
 . I TCLIST(DA1)<2 Q
"RTN","PXRMTXIC",54,0)
 . S NPROB=NPROB+1
"RTN","PXRMTXIC",55,0)
 . S NL=0,TC=""
"RTN","PXRMTXIC",56,0)
 . S NL=NL+1,TEXT(NL)="WARNING: "_TCLIST(DA1)_" different search terms have been stored as the number "_DA1_" search term."
"RTN","PXRMTXIC",57,0)
 . S NL=NL+1,TEXT(NL)="There can only be one number "_DA1_" search term."
"RTN","PXRMTXIC",58,0)
 . S NL=NL+1,TEXT(NL)="The search terms were:"
"RTN","PXRMTXIC",59,0)
 . F  S TC=$O(TCLIST(DA1,TC)) Q:TC=""  D
"RTN","PXRMTXIC",60,0)
 .. S CODESYS=""
"RTN","PXRMTXIC",61,0)
 .. F  S CODESYS=$O(TCLIST(DA1,TC,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIC",62,0)
 ... S NL=NL+1,TEXT(NL)=" "_TC_"; coding system - "_CODESYS
"RTN","PXRMTXIC",63,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMTXIC",64,0)
 ;If there were no problems quit.
"RTN","PXRMTXIC",65,0)
 I NPROB=0 D MES^XPDUTL("No problems were found.") Q
"RTN","PXRMTXIC",66,0)
 ;
"RTN","PXRMTXIC",67,0)
 ;Reconstruct the 20 node using the "ATCC" index.
"RTN","PXRMTXIC",68,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXIC",69,0)
 M ^TMP("PXRMCODES",$J)=^PXD(811.2,TAXIEN,20,"ATCC")
"RTN","PXRMTXIC",70,0)
 ;Delete the 20 node, then rebuild it.
"RTN","PXRMTXIC",71,0)
 K ^PXD(811.2,TAXIEN,20)
"RTN","PXRMTXIC",72,0)
 S SAVEOK=$$SAVETC^PXRMTXIM(TAXIEN)
"RTN","PXRMTXIC",73,0)
 I SAVEOK D POSTSAVE^PXRMTXSM(TAXIEN)
"RTN","PXRMTXIC",74,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXIC",75,0)
 S TEXT="Reconstruction done."
"RTN","PXRMTXIC",76,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMTXIC",77,0)
 Q
"RTN","PXRMTXIC",78,0)
 ;
"RTN","PXRMTXIH")
0^127^B25527600
"RTN","PXRMTXIH",1,0)
PXRMTXIH ;SLC/PKR - Taxonomy import help. ;04/21/2014
"RTN","PXRMTXIH",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXIH",3,0)
 ;==========================================
"RTN","PXRMTXIH",4,0)
HELP ;Extended help for import.
"RTN","PXRMTXIH",5,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXRMTXIH",6,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXRMTXIH",7,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXRMTXIH",8,0)
 S DDS=1,DONE=0
"RTN","PXRMTXIH",9,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMTXIH",10,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXRMTXIH",11,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXRMTXIH",12,0)
 D BROWSE^DDBR("TEXT","NR","Taxonomy Import Help")
"RTN","PXRMTXIH",13,0)
 S VALMBCK="R"
"RTN","PXRMTXIH",14,0)
 Q
"RTN","PXRMTXIH",15,0)
 ;
"RTN","PXRMTXIH",16,0)
 ;==========================================
"RTN","PXRMTXIH",17,0)
HTEXT ;Import help text.
"RTN","PXRMTXIH",18,0)
 ;;Codes can be imported from a CSV (comma-separated value) file or from one
"RTN","PXRMTXIH",19,0)
 ;;taxonomy into another.
"RTN","PXRMTXIH",20,0)
 ;;
"RTN","PXRMTXIH",21,0)
 ;;  HF - use this action when the CSV file has been saved as a host file.
"RTN","PXRMTXIH",22,0)
 ;;  PA - use this action to paste in the CSV file.
"RTN","PXRMTXIH",23,0)
 ;; TAX - use this action to select another taxonomy to import codes from. Once
"RTN","PXRMTXIH",24,0)
 ;;       selected, you can import all the codes or selected sets of codes.
"RTN","PXRMTXIH",25,0)
 ;; WEB - use this action to import a CSV file from a web site. You will need 
"RTN","PXRMTXIH",26,0)
 ;;       the full url of the CSV file.
"RTN","PXRMTXIH",27,0)
 ;;
"RTN","PXRMTXIH",28,0)
 ;;Creating a CSV file
"RTN","PXRMTXIH",29,0)
 ;;Each row of the CSV file should have the following format:
"RTN","PXRMTXIH",30,0)
 ;;Column 1 - term/code
"RTN","PXRMTXIH",31,0)
 ;;Column 2 - three-character coding system abbreviation
"RTN","PXRMTXIH",32,0)
 ;;
"RTN","PXRMTXIH",33,0)
 ;;The list of codes for the term/code and coding system combination starts at
"RTN","PXRMTXIH",34,0)
 ;;column 3. There can be as many subsequent columns as necessary. For example,
"RTN","PXRMTXIH",35,0)
 ;;if there were four codes for the term/code coding system combination, then:
"RTN","PXRMTXIH",36,0)
 ;;
"RTN","PXRMTXIH",37,0)
 ;;Column 3 - first code
"RTN","PXRMTXIH",38,0)
 ;;Column 4 - second code
"RTN","PXRMTXIH",39,0)
 ;;Column 5 - third code
"RTN","PXRMTXIH",40,0)
 ;;Column 6 - fourth code
"RTN","PXRMTXIH",41,0)
 ;;
"RTN","PXRMTXIH",42,0)
 ;;An easy way to create a CSV file s to first create a spreadsheet where the
"RTN","PXRMTXIH",43,0)
 ;;columns are as described above. When the spreadsheet is complete, use SAVE AS
"RTN","PXRMTXIH",44,0)
 ;;to save it to a CSV file. You can also create a CSV file directly using a text
"RTN","PXRMTXIH",45,0)
 ;;editor.
"RTN","PXRMTXIH",46,0)
 ;;
"RTN","PXRMTXIH",47,0)
 ;;Host File
"RTN","PXRMTXIH",48,0)
 ;;Once you have created the CSV file, you will probably need help from IRM to
"RTN","PXRMTXIH",49,0)
 ;;move the file to a VistA-accessible directory. The format of this will
"RTN","PXRMTXIH",50,0)
 ;;depend on the type of operating system on the server. The path includes the
"RTN","PXRMTXIH",51,0)
 ;;device and directory. Your IRM person should be able to give you this. Once
"RTN","PXRMTXIH",52,0)
 ;;you have entered the path, all files with a .CSV extension will be listed.
"RTN","PXRMTXIH",53,0)
 ;;Type in the name of the file you want to import and press <Enter>.
"RTN","PXRMTXIH",54,0)
 ;;
"RTN","PXRMTXIH",55,0)
 ;;Pasting
"RTN","PXRMTXIH",56,0)
 ;;Open the CSV file on your computer as a text file, using a text editor such as
"RTN","PXRMTXIH",57,0)
 ;;Notepad. Do not open it as a spreadsheet. Highlight all the rows you want to
"RTN","PXRMTXIH",58,0)
 ;;import and copy them. Go to your VistA session and select the PA action. At the
"RTN","PXRMTXIH",59,0)
 ;;prompt "Paste the CSV file now, press <ENTER> to finish.", paste what has been
"RTN","PXRMTXIH",60,0)
 ;;copied within 10 seconds. The import will complete; you will then need to save
"RTN","PXRMTXIH",61,0)
 ;;the imported codes.
"RTN","PXRMTXIH",62,0)
 ;;
"RTN","PXRMTXIH",63,0)
 ;;Web
"RTN","PXRMTXIH",64,0)
 ;;This action will import a CSV file from a web site. You must know the exact
"RTN","PXRMTXIH",65,0)
 ;;url. NOTE: The only protocol currently supported is http; https will not work.
"RTN","PXRMTXIH",66,0)
 ;;Enter the url at the prompt and then press <Enter>.
"RTN","PXRMTXIH",67,0)
 ;;
"RTN","PXRMTXIH",68,0)
 ;;TAX
"RTN","PXRMTXIH",69,0)
 ;;This option is used to import codes from an existing taxonomy into another
"RTN","PXRMTXIH",70,0)
 ;;existing taxonomy. The receiving taxonomy may already have codes or may be a
"RTN","PXRMTXIH",71,0)
 ;;shell of a taxonomy (contains no codes). After selecting the TAX action, you
"RTN","PXRMTXIH",72,0)
 ;;will see the prompt "Select a taxonomy or taxonomies to import from." a
"RTN","PXRMTXIH",73,0)
 ;;List Manager display will then open, listing all the taxonomies on your system.
"RTN","PXRMTXIH",74,0)
 ;;You can select one or more taxonomies to import from by typing in a
"RTN","PXRMTXIH",75,0)
 ;;comma-separated list or a range. Once the selection has been made, choose the
"RTN","PXRMTXIH",76,0)
 ;;Done (Quit) action. You will then be prompted to choose either ALL or
"RTN","PXRMTXIH",77,0)
 ;;SEL(ected) codes. If you choose SEL, each Term/Code Coding system pair in the
"RTN","PXRMTXIH",78,0)
 ;;taxonomies being imported from will be displayed and you can choose whether or
"RTN","PXRMTXIH",79,0)
 ;;not to import that set of codes.
"RTN","PXRMTXIH",80,0)
 ;;
"RTN","PXRMTXIH",81,0)
 ;;**End Text**
"RTN","PXRMTXIH",82,0)
 Q
"RTN","PXRMTXIH",83,0)
 ;
"RTN","PXRMTXIM")
0^26^B193866629
"RTN","PXRMTXIM",1,0)
PXRMTXIM ;SLC/PKR - Taxonomy import/create routines. ;05/07/2014
"RTN","PXRMTXIM",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXIM",3,0)
 ;==========================================
"RTN","PXRMTXIM",4,0)
CRETAX(FLAGS,TXDATA,ERRMSG) ;Create a taxonomy based on the data in TXDATA.
"RTN","PXRMTXIM",5,0)
 ;The following TXDATA nodes are required:
"RTN","PXRMTXIM",6,0)
 ;NAME, CLASS, and SOURCE.
"RTN","PXRMTXIM",7,0)
 ;The SPONSOR node is optional, it is a pointer to the Sponsor file.
"RTN","PXRMTXIM",8,0)
 ;Codes to include in the taxonomy are specified as
"RTN","PXRMTXIM",9,0)
 ;TXDATA("CODE",CODESYS,CODEP)=FMT^UID
"RTN","PXRMTXIM",10,0)
 ;where CODESYS is one of the following: 10D, 10P, CPT, ICD, ICP, SCT.
"RTN","PXRMTXIM",11,0)
 ;CODEP is either the code or its IEN, except for SCT where it must be
"RTN","PXRMTXIM",12,0)
 ;the code. FMT is "E" if CODEP is the code and "I" if it is the
"RTN","PXRMTXIM",13,0)
 ;pointer. UID is 1 if the code can be used in a dialog and 0 or null
"RTN","PXRMTXIM",14,0)
 ;if it cannot.
"RTN","PXRMTXIM",15,0)
 N CDATA,CODE,CODEP,CODESYS,CODESYST,DESC,IENS,FDA,FDAIEN,FMT,MSG
"RTN","PXRMTXIM",16,0)
 N RESULT,SAVEOK,TC,TEMP,UID
"RTN","PXRMTXIM",17,0)
 S DESC(1,0)="This taxonomy was automatically generated from "_TXDATA("SOURCE")_"."
"RTN","PXRMTXIM",18,0)
 S IENS="+1,"
"RTN","PXRMTXIM",19,0)
 S FDA(811.2,IENS,.01)=TXDATA("NAME")
"RTN","PXRMTXIM",20,0)
 S FDA(811.2,IENS,2)="DESC"
"RTN","PXRMTXIM",21,0)
 S FDA(811.2,IENS,100)=TXDATA("CLASS")
"RTN","PXRMTXIM",22,0)
 I $D(TXDATA("SPONSOR")) S FDA(811.2,IENS,101)=TXDATA("SPONSOR")
"RTN","PXRMTXIM",23,0)
 D UPDATE^DIE(FLAGS,"FDA","FDAIEN","MSG")
"RTN","PXRMTXIM",24,0)
 I $D(MSG) D  Q 0
"RTN","PXRMTXIM",25,0)
 . N IC,EMSG,REF
"RTN","PXRMTXIM",26,0)
 . S REF="MSG"
"RTN","PXRMTXIM",27,0)
 . F IC=1:1 S REF=$Q(@REF) Q:REF=""  S EMSG(IC)=REF_"="_@REF
"RTN","PXRMTXIM",28,0)
 . D BMES^XPDUTL("Could not create taxonomy named "_TXDATA("NAME"))
"RTN","PXRMTXIM",29,0)
 . D MES^XPDUTL(.EMSG)
"RTN","PXRMTXIM",30,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXIM",31,0)
 S CODESYST=""
"RTN","PXRMTXIM",32,0)
 F  S CODESYST=$O(TXDATA("CODE",CODESYST)) Q:CODESYST=""  D
"RTN","PXRMTXIM",33,0)
 . S CODEP=""
"RTN","PXRMTXIM",34,0)
 . F  S CODEP=$O(TXDATA("CODE",CODESYST,CODEP)) Q:CODEP=""  D
"RTN","PXRMTXIM",35,0)
 .. S CODESYS=CODESYST
"RTN","PXRMTXIM",36,0)
 .. S TEMP=$G(TXDATA("CODE",CODESYST,CODEP))
"RTN","PXRMTXIM",37,0)
 .. S FMT=$P(TEMP,U,1)
"RTN","PXRMTXIM",38,0)
 .. S UID=+$P(TEMP,U,2)
"RTN","PXRMTXIM",39,0)
 ..;DBIA #5747
"RTN","PXRMTXIM",40,0)
 .. I (CODESYST="10D")!(CODESYS="ICD") S RESULT=$$ICDDX^ICDEX(CODEP,DT,CODESYS,FMT)
"RTN","PXRMTXIM",41,0)
 .. I (CODESYST="10P")!(CODESYS="ICP") S RESULT=$$ICDOP^ICDEX(CODEP,DT,CODESYS,FMT)
"RTN","PXRMTXIM",42,0)
 ..;DBIA #1995
"RTN","PXRMTXIM",43,0)
 .. I CODESYST="CPC" S RESULT=$$CPT^ICPTCOD(CODEP)
"RTN","PXRMTXIM",44,0)
 .. I CODESYST="CPT" S RESULT=$$CPT^ICPTCOD(CODEP) I $P(RESULT,U,5)="H" S CODESYS="CPC"
"RTN","PXRMTXIM",45,0)
 .. I CODESYST="SCT" S RESULT=1_U_CODEP
"RTN","PXRMTXIM",46,0)
 .. I +RESULT=-1 S ERRMSG(CODESYS,CODEP)=$P(RESULT,U,2)  Q
"RTN","PXRMTXIM",47,0)
 .. S CODE=$P(RESULT,U,2)
"RTN","PXRMTXIM",48,0)
 .. K CDATA
"RTN","PXRMTXIM",49,0)
 ..;DBIA #5679
"RTN","PXRMTXIM",50,0)
 .. S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DT,.CDATA)
"RTN","PXRMTXIM",51,0)
 .. S TC=$P(CDATA("LEX",1),U,2)
"RTN","PXRMTXIM",52,0)
 .. I TC="" S TC=CDATA("SYS",14,1)
"RTN","PXRMTXIM",53,0)
 .. I TC="" S ERRMSG(CODESYS,CODE)="No description found." Q
"RTN","PXRMTXIM",54,0)
 .. S ^TMP("PXRMCODES",$J,TC,CODESYS,CODE)=UID
"RTN","PXRMTXIM",55,0)
 S SAVEOK=$$SAVETC^PXRMTXIM(FDAIEN(1))
"RTN","PXRMTXIM",56,0)
 I SAVEOK D POSTSAVE^PXRMTXSM(FDAIEN(1))
"RTN","PXRMTXIM",57,0)
 Q FDAIEN(1)
"RTN","PXRMTXIM",58,0)
 ;
"RTN","PXRMTXIM",59,0)
 ;==========================================
"RTN","PXRMTXIM",60,0)
IMP(IEN) ;Import codes into a taxonomy.
"RTN","PXRMTXIM",61,0)
 N CLASS,DIR,LOADOK,NATOK,OPTION,PXRMTIEN,SAVED,X,Y
"RTN","PXRMTXIM",62,0)
 S CLASS=$P(^PXD(811.2,IEN,100),U,1)
"RTN","PXRMTXIM",63,0)
 S NATOK=$S(CLASS'="N":1,1:($G(PXRMINST)=1)&($G(DUZ(0))="@"))
"RTN","PXRMTXIM",64,0)
 I 'NATOK D  Q
"RTN","PXRMTXIM",65,0)
 . D EN^DDIOL("Codes cannot be imported into national taxonomies!")
"RTN","PXRMTXIM",66,0)
 . H 2
"RTN","PXRMTXIM",67,0)
 . S VALMBCK="R"
"RTN","PXRMTXIM",68,0)
 ;Present the menu of import choices.
"RTN","PXRMTXIM",69,0)
 S DIR(0)="S^HF:CSV host file;"
"RTN","PXRMTXIM",70,0)
 S DIR(0)=DIR(0)_"PA:CSV file paste;"
"RTN","PXRMTXIM",71,0)
 S DIR(0)=DIR(0)_"TAX:Another taxonomy;"
"RTN","PXRMTXIM",72,0)
 S DIR(0)=DIR(0)_"WEB:CSV file from a web site"
"RTN","PXRMTXIM",73,0)
 S DIR("A")="Select the import method"
"RTN","PXRMTXIM",74,0)
 S DIR("??")="^D HELP^PXRMTXIH"
"RTN","PXRMTXIM",75,0)
 D ^DIR
"RTN","PXRMTXIM",76,0)
 S OPTION=Y
"RTN","PXRMTXIM",77,0)
 I OPTION="HF" D
"RTN","PXRMTXIM",78,0)
 . S LOADOK=$$LOADHF("TAXIMP")
"RTN","PXRMTXIM",79,0)
 . I LOADOK D
"RTN","PXRMTXIM",80,0)
 .. S SAVED=$$IMPCSV(IEN,"TAXIMP")
"RTN","PXRMTXIM",81,0)
 .. I SAVED D UPDCL(IEN,"from a host file")
"RTN","PXRMTXIM",82,0)
 I OPTION="PA" D
"RTN","PXRMTXIM",83,0)
 . D PASTECSV("TAXIMP")
"RTN","PXRMTXIM",84,0)
 . S SAVED=$$IMPCSV(IEN,"TAXIMP")
"RTN","PXRMTXIM",85,0)
 . I SAVED D UPDCL(IEN,"by pasting")
"RTN","PXRMTXIM",86,0)
 I OPTION="TAX" D
"RTN","PXRMTXIM",87,0)
 . D START^PXRMTXCE
"RTN","PXRMTXIM",88,0)
 . S SAVED=$$IMPTAX(IEN,.PXRMTIEN)
"RTN","PXRMTXIM",89,0)
 . I SAVED D UPDCL(IEN,"from other taxonomies")
"RTN","PXRMTXIM",90,0)
 I OPTION="WEB" D
"RTN","PXRMTXIM",91,0)
 . S LOADOK=$$LOADWEB("TAXIMP")
"RTN","PXRMTXIM",92,0)
 . I LOADOK D
"RTN","PXRMTXIM",93,0)
 .. S SAVED=$$IMPCSV(IEN,"TAXIMP")
"RTN","PXRMTXIM",94,0)
 .. I SAVED D UPDCL(IEN,"from a web site")
"RTN","PXRMTXIM",95,0)
 S VALMBCK="R"
"RTN","PXRMTXIM",96,0)
 Q
"RTN","PXRMTXIM",97,0)
 ;
"RTN","PXRMTXIM",98,0)
 ;==========================================
"RTN","PXRMTXIM",99,0)
IMPCSV(IEN,NODE) ;Import comma separated data into the Lexicon Term/Code
"RTN","PXRMTXIM",100,0)
 ;multiple. The expected format is:
"RTN","PXRMTXIM",101,0)
 ;LEXICON TERM/CODE,CODING SYSTEM,CODE 1,CODE 2, .... CODE N.
"RTN","PXRMTXIM",102,0)
 I '$D(^TMP($J,NODE)) Q 0
"RTN","PXRMTXIM",103,0)
 N ANS,CODE,CODESYS,CODESYSN,DUPL,IND,JND,KND,NCODES,NL,RESULT
"RTN","PXRMTXIM",104,0)
 N SAVED,SAVEOK,TEMP,TERM,TEXT,TEXTOUT
"RTN","PXRMTXIM",105,0)
 K ^TMP($J,"CC")
"RTN","PXRMTXIM",106,0)
 S (IND,NL,SAVED)=0
"RTN","PXRMTXIM",107,0)
 D EN^DDIOL("Starting the import process ... ")
"RTN","PXRMTXIM",108,0)
 F  S IND=$O(^TMP($J,NODE,IND)) Q:IND=""  D
"RTN","PXRMTXIM",109,0)
 . S TEMP=^TMP($J,NODE,IND,1)
"RTN","PXRMTXIM",110,0)
 . I '$$ISCSV(TEMP) Q
"RTN","PXRMTXIM",111,0)
 . S TERM=$P(TEMP,",",1)
"RTN","PXRMTXIM",112,0)
 . I (TERM="")!(TERM="^") Q
"RTN","PXRMTXIM",113,0)
 . S TERM=TERM_" (imported)"
"RTN","PXRMTXIM",114,0)
 . I IND>1 S NL=NL+1,TEXTOUT(NL)=""
"RTN","PXRMTXIM",115,0)
 . S NL=NL+1,TEXTOUT(NL)="Term/Code: "_TERM
"RTN","PXRMTXIM",116,0)
 . S CODESYS=$P(TEMP,",",2)
"RTN","PXRMTXIM",117,0)
 .;DBIA #5679
"RTN","PXRMTXIM",118,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMTXIM",119,0)
 .;Make sure it is a valid Lexicon coding system.
"RTN","PXRMTXIM",120,0)
 .;DBIA #5679
"RTN","PXRMTXIM",121,0)
 . S RESULT=$$CSYS^LEXU(CODESYS)
"RTN","PXRMTXIM",122,0)
 . I +RESULT=-1 D
"RTN","PXRMTXIM",123,0)
 .. S TEXT="  Coding System: "_CODESYS_" not found in Lexicon."
"RTN","PXRMTXIM",124,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMTXIM",125,0)
 . I +RESULT'=-1 D
"RTN","PXRMTXIM",126,0)
 .. S TEXT="  Coding System: "_$P(RESULT,U,4)
"RTN","PXRMTXIM",127,0)
 .. I '$D(NCODES(CODESYS)) S NCODES(CODESYS)=0
"RTN","PXRMTXIM",128,0)
 . S NL=NL+1,TEXTOUT(NL)=TEXT
"RTN","PXRMTXIM",129,0)
 . I +RESULT=-1 Q
"RTN","PXRMTXIM",130,0)
 .;Make sure it is a valid taxonomy coding system.
"RTN","PXRMTXIM",131,0)
 . I '$$VCODESYS^PXRMLEX(CODESYS) S NL=NL+1,TEXTOUT(NL)="  Warning taxonomies do not use "_CODESYS_" codes." Q
"RTN","PXRMTXIM",132,0)
 . S NCODES=0
"RTN","PXRMTXIM",133,0)
 . F JND=3:1:$L(TEMP,",") D
"RTN","PXRMTXIM",134,0)
 .. S CODE=$P(TEMP,",",JND)
"RTN","PXRMTXIM",135,0)
 .. S CODE=$TR(CODE," ","")
"RTN","PXRMTXIM",136,0)
 .. I CODE="" Q
"RTN","PXRMTXIM",137,0)
 .. S RESULT=$$PERCHK(CODE,CODESYS,TERM,.NCODES,.NL,.TEXTOUT)
"RTN","PXRMTXIM",138,0)
 .. I +RESULT=-1 D LEXCHK(CODE,CODESYS,TERM,.NCODES,.NL,.TEXTOUT)
"RTN","PXRMTXIM",139,0)
 .;Check for additional code only nodes in ^TMP.
"RTN","PXRMTXIM",140,0)
 . S JND=1
"RTN","PXRMTXIM",141,0)
 . F  S JND=$O(^TMP($J,NODE,IND,JND)) Q:JND=""  D
"RTN","PXRMTXIM",142,0)
 .. S TEMP=^TMP($J,NODE,IND,JND)
"RTN","PXRMTXIM",143,0)
 .. F KND=1:1:$L(TEMP,",") D
"RTN","PXRMTXIM",144,0)
 ... S CODE=$P(TEMP,",",KND)
"RTN","PXRMTXIM",145,0)
 ... S CODE=$TR(CODE," ","")
"RTN","PXRMTXIM",146,0)
 ... I CODE="" Q
"RTN","PXRMTXIM",147,0)
 ... S RESULT=$$PERCHK(CODE,CODESYS,TERM,.NCODES,.NL,.TEXTOUT)
"RTN","PXRMTXIM",148,0)
 ... I +RESULT=-1 D LEXCHK(CODE,CODESYS,TERM,.NCODES,.NL,.TEXTOUT)
"RTN","PXRMTXIM",149,0)
 S NL=NL+1,TEXTOUT(NL)=""
"RTN","PXRMTXIM",150,0)
 ;Look for duplicate codes.
"RTN","PXRMTXIM",151,0)
 S CODE=""
"RTN","PXRMTXIM",152,0)
 F  S CODE=$O(^TMP($J,"CC",CODE)) Q:CODE=""  D
"RTN","PXRMTXIM",153,0)
 . I ^TMP($J,"CC",CODE)>1 S DUPL(CODE)=^TMP($J,"CC",CODE)
"RTN","PXRMTXIM",154,0)
 I $D(DUPL) D EN^DDIOL("This import contains duplicate codes.")
"RTN","PXRMTXIM",155,0)
 I '$D(NCODES) D  Q SAVED
"RTN","PXRMTXIM",156,0)
 . D EN^DDIOL("There are no codes to import.")
"RTN","PXRMTXIM",157,0)
 . S VALMBCK="R"
"RTN","PXRMTXIM",158,0)
 . H 2
"RTN","PXRMTXIM",159,0)
 ;
"RTN","PXRMTXIM",160,0)
 S ANS=$$ASKYN^PXRMEUT("Y","Do you want to browse the list of codes")
"RTN","PXRMTXIM",161,0)
 I ANS D
"RTN","PXRMTXIM",162,0)
 . S NL=NL+1,TEXTOUT(NL)=""
"RTN","PXRMTXIM",163,0)
 . S NL=NL+1,TEXTOUT(NL)="This import includes the following numbers of codes:"
"RTN","PXRMTXIM",164,0)
 . S CODESYS="",TEMP=0
"RTN","PXRMTXIM",165,0)
 . F  S CODESYS=$O(NCODES(CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIM",166,0)
 .. S NL=NL+1,TEXTOUT(NL)=CODESYSN(CODESYS)_": "_NCODES(CODESYS)
"RTN","PXRMTXIM",167,0)
 .. S TEMP=TEMP+NCODES(CODESYS)
"RTN","PXRMTXIM",168,0)
 . S NL=NL+1,TEXTOUT(NL)="Total number of codes: "_TEMP
"RTN","PXRMTXIM",169,0)
 . ;If there are duplicates, list them.
"RTN","PXRMTXIM",170,0)
 . I $D(DUPL) D
"RTN","PXRMTXIM",171,0)
 .. S NL=NL+1,TEXTOUT(NL)=""
"RTN","PXRMTXIM",172,0)
 .. S NL=NL+1,TEXTOUT(NL)="The following codes are included in more than one Term/Code:"
"RTN","PXRMTXIM",173,0)
 .. S CODE=""
"RTN","PXRMTXIM",174,0)
 .. F  S CODE=$O(DUPL(CODE)) Q:CODE=""  D
"RTN","PXRMTXIM",175,0)
 ... S CODESYS=""
"RTN","PXRMTXIM",176,0)
 ... F  S CODESYS=$O(^TMP($J,"CC",CODE,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIM",177,0)
 .... S NL=NL+1,TEXTOUT(NL)=CODESYSN(CODESYS)_" code "_CODE_" is included "_DUPL(CODE)_" times."
"RTN","PXRMTXIM",178,0)
 .... S NL=NL+1,TEXTOUT(NL)=" Term/Code:"
"RTN","PXRMTXIM",179,0)
 .... S TERM=""
"RTN","PXRMTXIM",180,0)
 .... F  S TERM=$O(^TMP($J,"CC",CODE,CODESYS,TERM)) Q:TERM=""  D
"RTN","PXRMTXIM",181,0)
 ..... S NL=NL+1,TEXTOUT(NL)="  "_TERM
"RTN","PXRMTXIM",182,0)
 ... S NL=NL+1,TEXTOUT(NL)=""
"RTN","PXRMTXIM",183,0)
 .. S NL=NL+1,TEXTOUT(NL)="After importing the codes more details can be found in the taxonomy inquiry."
"RTN","PXRMTXIM",184,0)
 . D BROWSE^DDBR("TEXTOUT","NR","List Of Codes To Be Imported")
"RTN","PXRMTXIM",185,0)
 S SAVED=0
"RTN","PXRMTXIM",186,0)
 S ANS=$$ASKYN^PXRMEUT("Y","Do you want to save the imported codes")
"RTN","PXRMTXIM",187,0)
 I ANS D
"RTN","PXRMTXIM",188,0)
 . M ^TMP("PXRMCODES",$J)=^TMP($J,"CODES")
"RTN","PXRMTXIM",189,0)
 . S SAVEOK=$$SAVETC(IEN)
"RTN","PXRMTXIM",190,0)
 . I SAVEOK D POSTSAVE^PXRMTXSM(IEN) S SAVED=1
"RTN","PXRMTXIM",191,0)
 ;
"RTN","PXRMTXIM",192,0)
 K ^TMP($J,NODE),^TMP($J,"CC"),^TMP($J,"CODES")
"RTN","PXRMTXIM",193,0)
 S VALMBCK="R"
"RTN","PXRMTXIM",194,0)
 Q SAVED
"RTN","PXRMTXIM",195,0)
 ;
"RTN","PXRMTXIM",196,0)
 ;==========================================
"RTN","PXRMTXIM",197,0)
IMPTAX(IEN,PXRMTIEN) ;Import codes from other taxonomies.
"RTN","PXRMTXIM",198,0)
 ;Go through the list ask if some or all, if some then have to prompt
"RTN","PXRMTXIM",199,0)
 ;for each term/code.
"RTN","PXRMTXIM",200,0)
 N ANS,CODESYS,DIR,IMP,IND,JND,SAVED,SAVELIST,SAVEOK
"RTN","PXRMTXIM",201,0)
 N TIEN,TERM,TEXT,TNAME,X,Y
"RTN","PXRMTXIM",202,0)
 S DIR(0)="S^ALL:All codes;"
"RTN","PXRMTXIM",203,0)
 S DIR(0)=DIR(0)_"SEL:Selected codes"
"RTN","PXRMTXIM",204,0)
 S DIR("B")="ALL"
"RTN","PXRMTXIM",205,0)
 S TIEN=0
"RTN","PXRMTXIM",206,0)
 F  S TIEN=$O(PXRMTIEN(TIEN)) Q:TIEN=""  D
"RTN","PXRMTXIM",207,0)
 . S TNAME=$P(^PXD(811.2,TIEN,0),U,1)
"RTN","PXRMTXIM",208,0)
 . D EN^DDIOL("Ready to import codes from taxonomy "_TNAME)
"RTN","PXRMTXIM",209,0)
 . D ^DIR
"RTN","PXRMTXIM",210,0)
 . S ANS=Y
"RTN","PXRMTXIM",211,0)
 . S IND=0
"RTN","PXRMTXIM",212,0)
 . F  S IND=+$O(^PXD(811.2,TIEN,20,IND)) Q:IND=0  D
"RTN","PXRMTXIM",213,0)
 .. S TERM=^PXD(811.2,TIEN,20,IND,0)
"RTN","PXRMTXIM",214,0)
 .. S JND=0
"RTN","PXRMTXIM",215,0)
 .. F  S JND=+$O(^PXD(811.2,TIEN,20,IND,1,JND)) Q:JND=0  D
"RTN","PXRMTXIM",216,0)
 ... S CODESYS=$P(^PXD(811.2,TIEN,20,IND,1,JND,0),U,1)
"RTN","PXRMTXIM",217,0)
 ... S IMP=$S(ANS="SEL":0,1:1)
"RTN","PXRMTXIM",218,0)
 ... I ANS="SEL" D
"RTN","PXRMTXIM",219,0)
 .... S TEXT(1)=""
"RTN","PXRMTXIM",220,0)
 .... S TEXT(2)="Import codes from:"
"RTN","PXRMTXIM",221,0)
 .... S TEXT(3)=" Term/Code - "_TERM
"RTN","PXRMTXIM",222,0)
 .... S TEXT(4)=" Coding system - "_CODESYS
"RTN","PXRMTXIM",223,0)
 .... D EN^DDIOL(.TEXT)
"RTN","PXRMTXIM",224,0)
 .... S IMP=$$ASKYN^PXRMEUT("Y","Import","","")
"RTN","PXRMTXIM",225,0)
 ... I IMP S SAVELIST(TIEN,TERM,CODESYS)=""
"RTN","PXRMTXIM",226,0)
 S SAVED=0,TIEN=""
"RTN","PXRMTXIM",227,0)
 F  S TIEN=$O(SAVELIST(TIEN)) Q:TIEN=""  D
"RTN","PXRMTXIM",228,0)
 . K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXIM",229,0)
 . S TERM=""
"RTN","PXRMTXIM",230,0)
 . F  S TERM=$O(SAVELIST(TIEN,TERM)) Q:TERM=""  D
"RTN","PXRMTXIM",231,0)
 .. S CODESYS=""
"RTN","PXRMTXIM",232,0)
 .. F  S CODESYS=$O(SAVELIST(TIEN,TERM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIM",233,0)
 ... M ^TMP("PXRMCODES",$J,TERM,CODESYS)=^PXD(811.2,TIEN,20,"ATCC",TERM,CODESYS)
"RTN","PXRMTXIM",234,0)
 . S SAVEOK=$$SAVETC(IEN)
"RTN","PXRMTXIM",235,0)
 . I SAVEOK D POSTSAVE^PXRMTXSM(IEN) S SAVED=1
"RTN","PXRMTXIM",236,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXIM",237,0)
 Q SAVED
"RTN","PXRMTXIM",238,0)
 ;
"RTN","PXRMTXIM",239,0)
 ;==========================================
"RTN","PXRMTXIM",240,0)
ISCSV(LINE) ;Verify that LINE is in CSV format with a least 3 pieces of
"RTN","PXRMTXIM",241,0)
 ;data.
"RTN","PXRMTXIM",242,0)
 I $L(LINE)=0 Q 0
"RTN","PXRMTXIM",243,0)
 N ISCSV
"RTN","PXRMTXIM",244,0)
 S ISCSV=$S($L(LINE,",")>2:1,1:0)
"RTN","PXRMTXIM",245,0)
 I 'ISCSV D
"RTN","PXRMTXIM",246,0)
 . N TEXT
"RTN","PXRMTXIM",247,0)
 . S TEXT(1)=""
"RTN","PXRMTXIM",248,0)
 . S TEXT(2)="The following line is not in CSV format and cannot be processed:"
"RTN","PXRMTXIM",249,0)
 . S TEXT(3)=" "_LINE
"RTN","PXRMTXIM",250,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMTXIM",251,0)
 . H 1
"RTN","PXRMTXIM",252,0)
 Q ISCSV
"RTN","PXRMTXIM",253,0)
 ;
"RTN","PXRMTXIM",254,0)
 ;==========================================
"RTN","PXRMTXIM",255,0)
LEXCHK(CODE,CODESYS,TERM,NCODES,NL,TEXTOUT) ;Use $$TAX^LEX10CS
"RTN","PXRMTXIM",256,0)
 ;to determine if code is a partial code that expands to a list of
"RTN","PXRMTXIM",257,0)
 ;codes. Add valid codes to the list.
"RTN","PXRMTXIM",258,0)
 N ACODE,CODEI,IND,NFOUND,RESULT,SRC,TEXT
"RTN","PXRMTXIM",259,0)
 K ^TMP("LEXTAX",$J)
"RTN","PXRMTXIM",260,0)
 ;DBIA #5681
"RTN","PXRMTXIM",261,0)
 S RESULT=$$TAX^LEX10CS(CODE,CODESYS,DT,"LEXTAX",0)
"RTN","PXRMTXIM",262,0)
 S NFOUND=+RESULT
"RTN","PXRMTXIM",263,0)
 I NFOUND=-1 D  Q
"RTN","PXRMTXIM",264,0)
 . S TEXT(1)="Invalid coding system code pair:"
"RTN","PXRMTXIM",265,0)
 . S TEXT(2)=" Coding system is "_CODESYS_", code is "_CODE
"RTN","PXRMTXIM",266,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMTXIM",267,0)
 . S NL=NL+1,TEXTOUT(NL)=TEXT(1)
"RTN","PXRMTXIM",268,0)
 . S NL=NL+1,TEXTOUT(NL)=TEXT(2)
"RTN","PXRMTXIM",269,0)
 . K ^TMP("LEXTAX",$J)
"RTN","PXRMTXIM",270,0)
 S SRC=+$O(^TMP("LEXTAX",$J,0))
"RTN","PXRMTXIM",271,0)
 S CODEI=""
"RTN","PXRMTXIM",272,0)
 F  S CODEI=$O(^TMP("LEXTAX",$J,SRC,CODEI)) Q:CODEI=""  D
"RTN","PXRMTXIM",273,0)
 . S IND=0
"RTN","PXRMTXIM",274,0)
 . F  S IND=$O(^TMP("LEXTAX",$J,SRC,CODEI,IND)) Q:IND=""  D
"RTN","PXRMTXIM",275,0)
 .. S ACODE=$P(^TMP("LEXTAX",$J,SRC,CODEI,IND,0),U,1)
"RTN","PXRMTXIM",276,0)
 .. S NCODES=NCODES+1
"RTN","PXRMTXIM",277,0)
 .. S NL=NL+1,TEXTOUT(NL)=$J(NCODES,5)_". "_ACODE
"RTN","PXRMTXIM",278,0)
 .. S ^TMP($J,"CODES",TERM,CODESYS,ACODE)=""
"RTN","PXRMTXIM",279,0)
 .. I '$D(^TMP($J,"CC",ACODE,CODESYS,TERM)) D
"RTN","PXRMTXIM",280,0)
 ... S ^TMP($J,"CC",ACODE,CODESYS,TERM)=""
"RTN","PXRMTXIM",281,0)
 ... S ^TMP($J,"CC",ACODE)=$G(^TMP($J,"CC",ACODE))+1
"RTN","PXRMTXIM",282,0)
 ... S NCODES(CODESYS)=NCODES(CODESYS)+1
"RTN","PXRMTXIM",283,0)
 K ^TMP("LEXTAX",$J)
"RTN","PXRMTXIM",284,0)
 Q
"RTN","PXRMTXIM",285,0)
 ;
"RTN","PXRMTXIM",286,0)
 ;==========================================
"RTN","PXRMTXIM",287,0)
LOADHF(NODEOUT) ;Load the CSV host file into ^TMP.
"RTN","PXRMTXIM",288,0)
 ;The name of the host file should have a ".CSV" extension.
"RTN","PXRMTXIM",289,0)
 N FILE,GBL,LHF,PATH,TEMP
"RTN","PXRMTXIM",290,0)
 S TEMP=$$GETEHF^PXRMEXHF("CSV")
"RTN","PXRMTXIM",291,0)
 I TEMP="" Q 0
"RTN","PXRMTXIM",292,0)
 S PATH=$P(TEMP,U,1),FILE=$P(TEMP,U,2)
"RTN","PXRMTXIM",293,0)
 ;Load the host file into ^TMP.
"RTN","PXRMTXIM",294,0)
 K ^TMP($J,"HFCSV")
"RTN","PXRMTXIM",295,0)
 S GBL="^TMP($J,""HFCSV"",1)"
"RTN","PXRMTXIM",296,0)
 S GBL=$NA(@GBL)
"RTN","PXRMTXIM",297,0)
 ;Load the file contents into ^TMP.
"RTN","PXRMTXIM",298,0)
 S LHF=$$FTG^%ZISH(PATH,FILE,GBL,3)
"RTN","PXRMTXIM",299,0)
 I LHF=0 D EN^DDIOL("The host file load failed") H 2 K ^TMP($J,"HFCSV") Q 0
"RTN","PXRMTXIM",300,0)
 D RBLCKHF("HFCSV",NODEOUT)
"RTN","PXRMTXIM",301,0)
 K ^TMP($J,"HFCSV")
"RTN","PXRMTXIM",302,0)
 Q 1
"RTN","PXRMTXIM",303,0)
 ;
"RTN","PXRMTXIM",304,0)
 ;==========================================
"RTN","PXRMTXIM",305,0)
LOADWEB(NODEOUT) ;Load the CSV file from a web site into ^TMP
"RTN","PXRMTXIM",306,0)
 N DIR,HDR,IND,JND,NL1,NL2,RESULT,TEXT,URL,X,Y
"RTN","PXRMTXIM",307,0)
 S DIR(0)="F^10:245"
"RTN","PXRMTXIM",308,0)
 S DIR("A")="Input the url for the CSV file"
"RTN","PXRMTXIM",309,0)
 D ^DIR
"RTN","PXRMTXIM",310,0)
 I (Y="")!(Y=U) Q 0
"RTN","PXRMTXIM",311,0)
 S URL=Y
"RTN","PXRMTXIM",312,0)
 S Y=$$LOW^XLFSTR(Y)
"RTN","PXRMTXIM",313,0)
 I $E(Y,1,5)="https" D  Q 0
"RTN","PXRMTXIM",314,0)
 . D EN^DDIOL("The https protocol is not supported.")
"RTN","PXRMTXIM",315,0)
 ;Load the file contents into ^TMP.
"RTN","PXRMTXIM",316,0)
 K ^TMP($J,NODEOUT),^TMP($J,"WEBCSV")
"RTN","PXRMTXIM",317,0)
 ;DBIA #5553
"RTN","PXRMTXIM",318,0)
 S RESULT=$$GETURL^XTHC10(URL,10,"^TMP($J,""WEBCSV"")",.HDR)
"RTN","PXRMTXIM",319,0)
 I $P(RESULT,U,1)'=200 D  Q 0
"RTN","PXRMTXIM",320,0)
 . S TEXT="Could not load the csv file: "
"RTN","PXRMTXIM",321,0)
 . S TEXT=TEXT_"Error "_$P(RESULT,U,1)_" "_$P(RESULT,U,2)
"RTN","PXRMTXIM",322,0)
 . D EN^DDIOL(.TEXT) H 2
"RTN","PXRMTXIM",323,0)
 . K ^TMP($J,"WEBCSV")
"RTN","PXRMTXIM",324,0)
 D RBLCKWEB("WEBCSV",NODEOUT)
"RTN","PXRMTXIM",325,0)
 K ^TMP($J,"WEBCSV")
"RTN","PXRMTXIM",326,0)
 Q 1
"RTN","PXRMTXIM",327,0)
 ;
"RTN","PXRMTXIM",328,0)
 ;==========================================
"RTN","PXRMTXIM",329,0)
PASTECSV(NODE) ;Paste the CSV file.
"RTN","PXRMTXIM",330,0)
 N DONE,NL,TEMP
"RTN","PXRMTXIM",331,0)
 K ^TMP($J,NODE)
"RTN","PXRMTXIM",332,0)
 S DONE=0,NL=0
"RTN","PXRMTXIM",333,0)
 D EN^DDIOL("Paste the CSV file now, press <ENTER> to finish.")
"RTN","PXRMTXIM",334,0)
 D EN^DDIOL("","","!") H 1
"RTN","PXRMTXIM",335,0)
 F  Q:DONE  D
"RTN","PXRMTXIM",336,0)
 . R TEMP:10
"RTN","PXRMTXIM",337,0)
 . I '$T S DONE=1 Q
"RTN","PXRMTXIM",338,0)
 . I $L(TEMP)=0 S DONE=1 Q
"RTN","PXRMTXIM",339,0)
 . S NL=NL+1,^TMP($J,NODE,NL,1)=TEMP
"RTN","PXRMTXIM",340,0)
 Q
"RTN","PXRMTXIM",341,0)
 ;
"RTN","PXRMTXIM",342,0)
 ;==========================================
"RTN","PXRMTXIM",343,0)
PERCHK(CODE,CODESYS,TERM,NCODES,NL,TEXTOUT) ;Use $$PERIOD^LEXU
"RTN","PXRMTXIM",344,0)
 ;to verify a code is valid and add valid codes to the list.
"RTN","PXRMTXIM",345,0)
 N PDATA,RESULT
"RTN","PXRMTXIM",346,0)
 ;DBIA #5679
"RTN","PXRMTXIM",347,0)
 S RESULT=$$PERIOD^LEXU(CODE,CODESYS,.PDATA)
"RTN","PXRMTXIM",348,0)
 I +RESULT=-1 Q RESULT
"RTN","PXRMTXIM",349,0)
 S NCODES=NCODES+1
"RTN","PXRMTXIM",350,0)
 S NL=NL+1,TEXTOUT(NL)=$J(NCODES,5)_". "_CODE
"RTN","PXRMTXIM",351,0)
 S ^TMP($J,"CODES",TERM,CODESYS,CODE)=""
"RTN","PXRMTXIM",352,0)
 I '$D(^TMP($J,"CC",CODE,CODESYS,TERM)) D
"RTN","PXRMTXIM",353,0)
 . S ^TMP($J,"CC",CODE,CODESYS,TERM)=""
"RTN","PXRMTXIM",354,0)
 . S ^TMP($J,"CC",CODE)=$G(^TMP($J,"CC",CODE))+1
"RTN","PXRMTXIM",355,0)
 . S NCODES(CODESYS)=NCODES(CODESYS)+1
"RTN","PXRMTXIM",356,0)
 Q RESULT
"RTN","PXRMTXIM",357,0)
 ;
"RTN","PXRMTXIM",358,0)
 ;==========================================
"RTN","PXRMTXIM",359,0)
RBLCKHF(NODEIN,NODEOUT) ;FTG^%ZISH breaks lines at 255 characters. This could
"RTN","PXRMTXIM",360,0)
 ;put a code across two lines. Format the ^TMP array so this does not
"RTN","PXRMTXIM",361,0)
 ;happen.
"RTN","PXRMTXIM",362,0)
 N CHAR,IND,JND,KND,L1,NL1,NL2,TEMP
"RTN","PXRMTXIM",363,0)
 K ^TMP($J,"NODEOUT")
"RTN","PXRMTXIM",364,0)
 S IND="",NL1=0
"RTN","PXRMTXIM",365,0)
 F  S IND=+$O(^TMP($J,NODEIN,IND)) Q:IND=0  D
"RTN","PXRMTXIM",366,0)
 . S TEMP=^TMP($J,NODEIN,IND),NL1=NL1+1
"RTN","PXRMTXIM",367,0)
 . I '$D(^TMP($J,NODEIN,IND,"OVF")) S ^TMP($J,NODEOUT,NL1,1)=TEMP Q
"RTN","PXRMTXIM",368,0)
 . S L1="",NL2=0
"RTN","PXRMTXIM",369,0)
 . F JND=1:1:$L(TEMP) D
"RTN","PXRMTXIM",370,0)
 .. S CHAR=$E(TEMP,JND)
"RTN","PXRMTXIM",371,0)
 .. S L1=L1_CHAR
"RTN","PXRMTXIM",372,0)
 .. I $L(L1)>230,CHAR="," S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1,L1=""
"RTN","PXRMTXIM",373,0)
 .;Check for overflow nodes.
"RTN","PXRMTXIM",374,0)
 . S JND=0
"RTN","PXRMTXIM",375,0)
 . F  S JND=+$O(^TMP($J,NODEIN,IND,"OVF",JND)) Q:JND=0  D
"RTN","PXRMTXIM",376,0)
 .. S TEMP=^TMP($J,NODEIN,IND,"OVF",JND)
"RTN","PXRMTXIM",377,0)
 .. F KND=1:1:$L(TEMP) D
"RTN","PXRMTXIM",378,0)
 ... S CHAR=$E(TEMP,KND)
"RTN","PXRMTXIM",379,0)
 ... S L1=L1_CHAR
"RTN","PXRMTXIM",380,0)
 ... I $L(L1)>230,CHAR="," S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1,L1=""
"RTN","PXRMTXIM",381,0)
 . I $L(L1)>0 S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1
"RTN","PXRMTXIM",382,0)
 Q
"RTN","PXRMTXIM",383,0)
 ;
"RTN","PXRMTXIM",384,0)
 ;==========================================
"RTN","PXRMTXIM",385,0)
RBLCKWEB(NODEIN,NODEOUT) ;GETURL^XTHC10 breaks lines at 245 characters. This
"RTN","PXRMTXIM",386,0)
 ;could break a line into two lines. Format the ^TMP array so this does
"RTN","PXRMTXIM",387,0)
 ;not happen.
"RTN","PXRMTXIM",388,0)
 N CHAR,IND,JND,KND,L1,LEN,NL1,NL2,TEMP
"RTN","PXRMTXIM",389,0)
 K ^TMP($J,"NODEOUT")
"RTN","PXRMTXIM",390,0)
 S IND="",NL1=0
"RTN","PXRMTXIM",391,0)
 F  S IND=+$O(^TMP($J,NODEIN,IND)) Q:IND=0  D
"RTN","PXRMTXIM",392,0)
 . S TEMP=^TMP($J,NODEIN,IND),LEN=$L(TEMP)
"RTN","PXRMTXIM",393,0)
 . I LEN=0 S NL1=NL1+1,^TMP($J,NODEOUT,NL1,1)=TEMP Q
"RTN","PXRMTXIM",394,0)
 . S NL1=NL1+1
"RTN","PXRMTXIM",395,0)
 . I $D(^TMP($J,NODEIN,IND))<11 S ^TMP($J,NODEOUT,NL1,1)=$TR(TEMP,$C(13),"") Q
"RTN","PXRMTXIM",396,0)
 . S L1="",NL2=0
"RTN","PXRMTXIM",397,0)
 . F JND=1:1:$L(TEMP) D
"RTN","PXRMTXIM",398,0)
 .. S CHAR=$E(TEMP,JND)
"RTN","PXRMTXIM",399,0)
 .. I CHAR=$C(13) Q
"RTN","PXRMTXIM",400,0)
 .. S L1=L1_CHAR
"RTN","PXRMTXIM",401,0)
 .. I $L(L1)>230,CHAR="," S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1,L1=""
"RTN","PXRMTXIM",402,0)
 .;Check for overflow nodes.
"RTN","PXRMTXIM",403,0)
 . S JND=0
"RTN","PXRMTXIM",404,0)
 . F  S JND=+$O(^TMP($J,NODEIN,IND,JND)) Q:JND=0  D
"RTN","PXRMTXIM",405,0)
 .. S TEMP=^TMP($J,NODEIN,IND,JND)
"RTN","PXRMTXIM",406,0)
 .. F KND=1:1:$L(TEMP) D
"RTN","PXRMTXIM",407,0)
 ... S CHAR=$E(TEMP,KND)
"RTN","PXRMTXIM",408,0)
 ... I CHAR=$C(13) Q
"RTN","PXRMTXIM",409,0)
 ... S L1=L1_CHAR
"RTN","PXRMTXIM",410,0)
 ... I $L(L1)>230,CHAR="," S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1,L1=""
"RTN","PXRMTXIM",411,0)
 . I $L(L1)>0 S NL2=NL2+1,^TMP($J,NODEOUT,NL1,NL2)=L1
"RTN","PXRMTXIM",412,0)
 Q
"RTN","PXRMTXIM",413,0)
 ;
"RTN","PXRMTXIM",414,0)
 ;==========================================
"RTN","PXRMTXIM",415,0)
SAVETC(IEN) ;Save the term/code.
"RTN","PXRMTXIM",416,0)
 N FDA,IENS,IND,MSG,SUCCESS,TC
"RTN","PXRMTXIM",417,0)
 S IND=0,SUCCESS=1,TC=""
"RTN","PXRMTXIM",418,0)
 F  S TC=$O(^TMP("PXRMCODES",$J,TC)) Q:TC=""  D
"RTN","PXRMTXIM",419,0)
 .;If the Term/Code already exists skip it.
"RTN","PXRMTXIM",420,0)
 . I $D(^PXD(811.2,IEN,20,"B",TC)) Q
"RTN","PXRMTXIM",421,0)
 . S IND=IND+1
"RTN","PXRMTXIM",422,0)
 . S IENS="+"_IND_","_IEN_","
"RTN","PXRMTXIM",423,0)
 . S FDA(811.23,IENS,.01)=TC
"RTN","PXRMTXIM",424,0)
 I '$D(FDA(811.23)) Q SUCCESS
"RTN","PXRMTXIM",425,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMTXIM",426,0)
 I $D(MSG) D
"RTN","PXRMTXIM",427,0)
 . D FULL^VALM1
"RTN","PXRMTXIM",428,0)
 . D MES^XPDUTL("Unable to store Term/Code "_TC)
"RTN","PXRMTXIM",429,0)
 . D AWRITE^PXRMUTIL("MSG") H 1
"RTN","PXRMTXIM",430,0)
 . S SUCCESS=0
"RTN","PXRMTXIM",431,0)
 Q SUCCESS
"RTN","PXRMTXIM",432,0)
 ;
"RTN","PXRMTXIM",433,0)
 ;==========================================
"RTN","PXRMTXIM",434,0)
UPDCL(IEN,TEXT) ;Add an entry to the change log.
"RTN","PXRMTXIM",435,0)
 N IENS,FDA,FDAIEN,MSG,WPTMP
"RTN","PXRMTXIM",436,0)
 S IENS="+1,"_IEN_","
"RTN","PXRMTXIM",437,0)
 S FDA(811.21,IENS,.01)=$$NOW^XLFDT
"RTN","PXRMTXIM",438,0)
 S FDA(811.21,IENS,1)=DUZ
"RTN","PXRMTXIM",439,0)
 S WPTMP(1,1,1)=" Import codes "_TEXT_"."
"RTN","PXRMTXIM",440,0)
 S FDA(811.21,IENS,2)="WPTMP(1,1)"
"RTN","PXRMTXIM",441,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMTXIM",442,0)
 K DA,DDSFILE
"RTN","PXRMTXIM",443,0)
 S DA=FDAIEN(1),DA(1)=IEN
"RTN","PXRMTXIM",444,0)
 S DDSFILE=811.2,DDSFILE(1)=811.21
"RTN","PXRMTXIM",445,0)
 S DR="[PXRM TAXONOMY CHANGE LOG]"
"RTN","PXRMTXIM",446,0)
 D ^DDS
"RTN","PXRMTXIM",447,0)
 Q
"RTN","PXRMTXIM",448,0)
 ;
"RTN","PXRMTXIN")
0^7^B68427938
"RTN","PXRMTXIN",1,0)
PXRMTXIN ;SLC/PKR - Taxonomy inquiry for general use. ;02/26/2014
"RTN","PXRMTXIN",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXIN",3,0)
 ;==========================================
"RTN","PXRMTXIN",4,0)
BTAXALL ;Taxonomy inquiry, return the formatted text OUTPUT.
"RTN","PXRMTXIN",5,0)
 N BOP,IEN,NAME,OUTPUT,TYPE
"RTN","PXRMTXIN",6,0)
 S TYPE=$$GTYPE
"RTN","PXRMTXIN",7,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMTXIN",8,0)
 I BOP="" Q
"RTN","PXRMTXIN",9,0)
 S NAME=""
"RTN","PXRMTXIN",10,0)
 F  S NAME=$O(^PXD(811.2,"B",NAME)) Q:NAME=""  D
"RTN","PXRMTXIN",11,0)
 . S IEN=$O(^PXD(811.2,"B",NAME,""))
"RTN","PXRMTXIN",12,0)
 . D TAXINQ(TYPE,IEN,.OUTPUT)
"RTN","PXRMTXIN",13,0)
 . I BOP="B" D BROWSE^DDBR("OUTPUT","NR","Taxonomy Inquiry")
"RTN","PXRMTXIN",14,0)
 . I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMTXIN",15,0)
 Q
"RTN","PXRMTXIN",16,0)
 ;
"RTN","PXRMTXIN",17,0)
 ;==========================================
"RTN","PXRMTXIN",18,0)
BTAXINQ(IEN) ;Display a Taxonomy inquiry, defaults to the Browswer.
"RTN","PXRMTXIN",19,0)
 N BOP,DIR0,OUTPUT,TITLE,TYPE
"RTN","PXRMTXIN",20,0)
 I '$D(^PXD(811.2,IEN)) Q
"RTN","PXRMTXIN",21,0)
 S TYPE=$$GTYPE
"RTN","PXRMTXIN",22,0)
 S TITLE="Taxonomy Inquiry - "_$S(TYPE="C":"Condensed",TYPE="F":"Full",1:"")
"RTN","PXRMTXIN",23,0)
 D TAXINQ(TYPE,IEN,.OUTPUT)
"RTN","PXRMTXIN",24,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXRMTXIN",25,0)
 I BOP="" Q
"RTN","PXRMTXIN",26,0)
 I BOP="B" D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMTXIN",27,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXRMTXIN",28,0)
 Q
"RTN","PXRMTXIN",29,0)
 ;
"RTN","PXRMTXIN",30,0)
 ;==========================================
"RTN","PXRMTXIN",31,0)
CDETAILC(CODESYS,CODE,UID,NL,OUTPUT) ;Get the condensed details about a code.
"RTN","PXRMTXIN",32,0)
 N ACTDT,DESC,HIER,INACT,INACTDT,LDESC,LHIER,LTEXT,NOLEX,PDATA,TEXT
"RTN","PXRMTXIN",33,0)
 S UID=$S(UID=1:"X",1:" ")
"RTN","PXRMTXIN",34,0)
 D CDETAILS(CODESYS,CODE,.NOLEX,.PDATA)
"RTN","PXRMTXIN",35,0)
 S ACTDT=1000101
"RTN","PXRMTXIN",36,0)
 F  S ACTDT=$O(PDATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXRMTXIN",37,0)
 . S INACTDT=$P(PDATA(ACTDT),U,1)
"RTN","PXRMTXIN",38,0)
 . S INACT=$S((ACTDT>DT):"X",(INACTDT=""):" ",(INACTDT'>DT):"X",1:" ")
"RTN","PXRMTXIN",39,0)
 . S DESC=$S(NOLEX=1:$P(PDATA(ACTDT),U,2),1:PDATA(ACTDT,0))
"RTN","PXRMTXIN",40,0)
 . S LDESC=$L(DESC)
"RTN","PXRMTXIN",41,0)
 . I (LDESC>51),(CODESYS'="SCT") S DESC=$E(DESC,1,47)_"..."
"RTN","PXRMTXIN",42,0)
 . I CODESYS="SCT" D
"RTN","PXRMTXIN",43,0)
 .. S HIER=$$SCTHIER(CODE,ACTDT),LHIER=$L(HIER)
"RTN","PXRMTXIN",44,0)
 .. I (LDESC+LHIER)'>50 S DESC=DESC_" "_HIER
"RTN","PXRMTXIN",45,0)
 .. E  S DESC=$E(DESC,1,(46-LHIER))_"... "_HIER
"RTN","PXRMTXIN",46,0)
 . S TEXT=CODE,LTEXT=$L(TEXT)
"RTN","PXRMTXIN",47,0)
 . S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(22-LTEXT))_INACT,LTEXT=$L(TEXT)
"RTN","PXRMTXIN",48,0)
 . S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(27-LTEXT))_UID,LTEXT=$L(TEXT)
"RTN","PXRMTXIN",49,0)
 . S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(30-LTEXT))_DESC
"RTN","PXRMTXIN",50,0)
 . S NL=NL+1,OUTPUT(NL)=TEXT
"RTN","PXRMTXIN",51,0)
 Q
"RTN","PXRMTXIN",52,0)
 ;
"RTN","PXRMTXIN",53,0)
 ;==========================================
"RTN","PXRMTXIN",54,0)
CDETAILF(CODESYS,CODE,UID,NL,OUTPUT) ;Get the full details about a code.
"RTN","PXRMTXIN",55,0)
 N ACTDT,DESC,FMTSTR,INACTDT,IND,NOLEX,NOUT,NP,PDATA,TEXT
"RTN","PXRMTXIN",56,0)
 S FMTSTR="10L1^10C2^10C4^1C3^35L"
"RTN","PXRMTXIN",57,0)
 S UID=$S(UID=1:"X",1:" ")
"RTN","PXRMTXIN",58,0)
 D CDETAILS(CODESYS,CODE,.NOLEX,.PDATA)
"RTN","PXRMTXIN",59,0)
 S ACTDT=1000101,NP=0
"RTN","PXRMTXIN",60,0)
 F  S ACTDT=$O(PDATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXRMTXIN",61,0)
 . S NP=NP+1
"RTN","PXRMTXIN",62,0)
 . S INACTDT=$P(PDATA(ACTDT),U,1)
"RTN","PXRMTXIN",63,0)
 . S DESC=$S(NOLEX=1:$P(PDATA(ACTDT),U,2),1:PDATA(ACTDT,0))
"RTN","PXRMTXIN",64,0)
 . I CODESYS="SCT" S DESC=DESC_" "_$$SCTHIER(CODE,ACTDT)
"RTN","PXRMTXIN",65,0)
 . I NP=1 S TEXT=CODE_U_$$FMTE^XLFDT(ACTDT,"5Z")_U_$$FMTE^XLFDT(INACTDT,"5Z")_U_UID_U_DESC
"RTN","PXRMTXIN",66,0)
 . I NP>1 S TEXT=U_$$FMTE^XLFDT(ACTDT,"5Z")_U_$$FMTE^XLFDT(INACTDT,"5Z")_U_UID_U_DESC
"RTN","PXRMTXIN",67,0)
 . D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NOUT,.TEXTOUT)
"RTN","PXRMTXIN",68,0)
 . F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXRMTXIN",69,0)
 Q
"RTN","PXRMTXIN",70,0)
 ;
"RTN","PXRMTXIN",71,0)
 ;==========================================
"RTN","PXRMTXIN",72,0)
CDETAILS(CODESYS,CODE,NOLEX,PDATA) ;Get the details about a code.
"RTN","PXRMTXIN",73,0)
 N RESULT
"RTN","PXRMTXIN",74,0)
 ;DBIA #5679
"RTN","PXRMTXIN",75,0)
 S RESULT=$$PERIOD^LEXU(CODE,CODESYS,.PDATA)
"RTN","PXRMTXIN",76,0)
 S NOLEX=0
"RTN","PXRMTXIN",77,0)
 I +RESULT=-1 D
"RTN","PXRMTXIN",78,0)
 . S NOLEX=1
"RTN","PXRMTXIN",79,0)
 .;DBIA #1997, #3991
"RTN","PXRMTXIN",80,0)
 . I (CODESYS="CPC")!(CODESYS="CPT") D PERIOD^ICPTAPIU(CODE,.PDATA)
"RTN","PXRMTXIN",81,0)
 . I (CODESYS="ICD")!(CODESYS="ICP") D PERIOD^ICDAPIU(CODE,.PDATA)
"RTN","PXRMTXIN",82,0)
 Q
"RTN","PXRMTXIN",83,0)
 ;
"RTN","PXRMTXIN",84,0)
 ;==========================================
"RTN","PXRMTXIN",85,0)
GTYPE() ;Prompt the user for the type of output.
"RTN","PXRMTXIN",86,0)
 N DIR,POP,X,Y
"RTN","PXRMTXIN",87,0)
 S DIR(0)="SA"_U_"C:Condensed;F:Full"
"RTN","PXRMTXIN",88,0)
 S DIR("A")="Condensed or full inquiry? "
"RTN","PXRMTXIN",89,0)
 S DIR("B")="C"
"RTN","PXRMTXIN",90,0)
 D ^DIR
"RTN","PXRMTXIN",91,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMTXIN",92,0)
 I $D(DTOUT)!($D(DUOUT)) Q "F"
"RTN","PXRMTXIN",93,0)
 Q Y
"RTN","PXRMTXIN",94,0)
 ;
"RTN","PXRMTXIN",95,0)
 ;==========================================
"RTN","PXRMTXIN",96,0)
OLDINQ(IEN) ;Produce the old inquiry output for comparison during testing.
"RTN","PXRMTXIN",97,0)
 N FLDS,HEADER,PXRMROOT,STEXT
"RTN","PXRMTXIN",98,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMTXIN",99,0)
 S HEADER="REMINDER TAXONOMY INQUIRY"
"RTN","PXRMTXIN",100,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMTXIN",101,0)
 S STEXT="Select REMINDER TAXONOMY: "
"RTN","PXRMTXIN",102,0)
 D SET^PXRMINQ(IEN,HEADER)
"RTN","PXRMTXIN",103,0)
 D DISP^PXRMINQ(PXRMROOT,FLDS)
"RTN","PXRMTXIN",104,0)
 Q
"RTN","PXRMTXIN",105,0)
 ;
"RTN","PXRMTXIN",106,0)
 ;==========================================
"RTN","PXRMTXIN",107,0)
SCTHIER(CODE,ACTDT) ;Return the SNOMED hierarchy.
"RTN","PXRMTXIN",108,0)
 N FSN,HE,HIER,HS
"RTN","PXRMTXIN",109,0)
 ;DBIA #5007
"RTN","PXRMTXIN",110,0)
 S FSN=$$GETFSN^LEXTRAN1("SCT",CODE,ACTDT)
"RTN","PXRMTXIN",111,0)
 S HS=$F(FSN,"(")
"RTN","PXRMTXIN",112,0)
 S HE=$F(FSN,")",HS)
"RTN","PXRMTXIN",113,0)
 S HIER=$E(FSN,HS-1,HE-1)
"RTN","PXRMTXIN",114,0)
 Q HIER
"RTN","PXRMTXIN",115,0)
 ;
"RTN","PXRMTXIN",116,0)
 ;==========================================
"RTN","PXRMTXIN",117,0)
TAXINQ(TYPE,IEN,OUTPUT) ;Taxonomy inquiry, return the formatted text OUTPUT.
"RTN","PXRMTXIN",118,0)
 ;Use 80 column output.
"RTN","PXRMTXIN",119,0)
 N CHDR,CODE,CODEP,CODESYS,CODESYSN,DUPL,IND,OCL,NL,IENSTR
"RTN","PXRMTXIN",120,0)
 N NCODES,NOUT,NPAD,NUCODES,RM,T100,TEMP,TERM,TEXT,TEXTOUT,UID,WPARRAY
"RTN","PXRMTXIN",121,0)
 S RM=80
"RTN","PXRMTXIN",122,0)
 I TYPE="C" D
"RTN","PXRMTXIN",123,0)
 . S CHDR(1)="Code                INACT UID Description"
"RTN","PXRMTXIN",124,0)
 . S CHDR(2)="------------------  ----- --- -----------"
"RTN","PXRMTXIN",125,0)
 . ;S CHDR(1)="Code       Inactive  UID  Description"
"RTN","PXRMTXIN",126,0)
 . ;S CHDR(2)="---------  --------  ---  -----------"
"RTN","PXRMTXIN",127,0)
 I TYPE="F" D
"RTN","PXRMTXIN",128,0)
 . S CHDR(1)="Code       Activation Inactivation  UID  Description"
"RTN","PXRMTXIN",129,0)
 . S CHDR(2)="---------  ---------- ------------  ---  -----------"
"RTN","PXRMTXIN",130,0)
 S TEMP=^PXD(811.2,IEN,0)
"RTN","PXRMTXIN",131,0)
 S IENSTR="No. "_IEN
"RTN","PXRMTXIN",132,0)
 S OUTPUT(1)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXRMTXIN",133,0)
 S TEXT=$P(TEMP,U,1)
"RTN","PXRMTXIN",134,0)
 S NPAD=RM-$L(TEXT)-1
"RTN","PXRMTXIN",135,0)
 S OUTPUT(2)=TEXT_$$RJ^XLFSTR(IENSTR,NPAD," ")
"RTN","PXRMTXIN",136,0)
 S OUTPUT(3)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXRMTXIN",137,0)
 S OUTPUT(4)=""
"RTN","PXRMTXIN",138,0)
 S T100=^PXD(811.2,IEN,100)
"RTN","PXRMTXIN",139,0)
 S OUTPUT(5)="Class: "_$$GET1^DIQ(811.2,IEN,100)
"RTN","PXRMTXIN",140,0)
 S OUTPUT(6)="Sponsor: "_$$GET1^DIQ(811.2,IEN,101)
"RTN","PXRMTXIN",141,0)
 S OUTPUT(7)="Review Date: "_$$GET1^DIQ(811.2,IEN,102)
"RTN","PXRMTXIN",142,0)
 S OUTPUT(8)=""
"RTN","PXRMTXIN",143,0)
 S OUTPUT(9)="Description:"
"RTN","PXRMTXIN",144,0)
 S NL=9
"RTN","PXRMTXIN",145,0)
 S TEMP=$$GET1^DIQ(811.2,IEN,2,"","WPARRAY")
"RTN","PXRMTXIN",146,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",147,0)
 I TEMP="WPARRAY" D
"RTN","PXRMTXIN",148,0)
 . S IND=0
"RTN","PXRMTXIN",149,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXRMTXIN",150,0)
 . K WPARRAY
"RTN","PXRMTXIN",151,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",152,0)
 S NL=NL+1,OUTPUT(NL)="Inactive Flag: "_$$GET1^DIQ(811.2,IEN,1.6)
"RTN","PXRMTXIN",153,0)
 S NL=NL+1,OUTPUT(NL)="Patient Data Source: "_$$GET1^DIQ(811.2,IEN,4)
"RTN","PXRMTXIN",154,0)
 S NL=NL+1,OUTPUT(NL)="Use Inactive Problems: "_$$GET1^DIQ(811.2,IEN,10)
"RTN","PXRMTXIN",155,0)
 ;Initialze the code counter.
"RTN","PXRMTXIN",156,0)
 K ^TMP($J,"CC")
"RTN","PXRMTXIN",157,0)
 S CODESYS=""
"RTN","PXRMTXIN",158,0)
 F  S CODESYS=$O(^PXD(811.2,IEN,20,"AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIN",159,0)
 . S (NCODES(CODESYS),NUCODES(CODESYS))=0
"RTN","PXRMTXIN",160,0)
 .;DBIA #5679
"RTN","PXRMTXIN",161,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMTXIN",162,0)
 ;Display the selected codes.
"RTN","PXRMTXIN",163,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",164,0)
 S NL=NL+1,OUTPUT(NL)="Selected Codes:"
"RTN","PXRMTXIN",165,0)
 S TERM=""
"RTN","PXRMTXIN",166,0)
 F  S TERM=$O(^PXD(811.2,IEN,20,"ATCC",TERM)) Q:TERM=""  D
"RTN","PXRMTXIN",167,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",168,0)
 . S TEXT="Lexicon Search Term/Code: "_TERM
"RTN","PXRMTXIN",169,0)
 . D COLFMT^PXRMTEXT(RM_"L",TEXT," ",.NOUT,.TEXTOUT)
"RTN","PXRMTXIN",170,0)
 . F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXRMTXIN",171,0)
 . S CODESYS=""
"RTN","PXRMTXIN",172,0)
 . F  S CODESYS=$O(^PXD(811.2,IEN,20,"ATCC",TERM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIN",173,0)
 .. S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",174,0)
 ..;DBIA #5679
"RTN","PXRMTXIN",175,0)
 .. S NL=NL+1,OUTPUT(NL)="Coding System: "_CODESYSN(CODESYS)
"RTN","PXRMTXIN",176,0)
 .. K OCL
"RTN","PXRMTXIN",177,0)
 .. S CODE=""
"RTN","PXRMTXIN",178,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"ATCC",TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMTXIN",179,0)
 ... S OCL(CODE_" ")=CODE_U_^PXD(811.2,IEN,20,"ATCC",TERM,CODESYS,CODE)
"RTN","PXRMTXIN",180,0)
 ... S NCODES(CODESYS)=NCODES(CODESYS)+1
"RTN","PXRMTXIN",181,0)
 ... S ^TMP($J,"CC",CODE)=$G(^TMP($J,"CC",CODE))+1
"RTN","PXRMTXIN",182,0)
 ... S ^TMP($J,"CC",CODE,CODESYS,TERM)=""
"RTN","PXRMTXIN",183,0)
 .. S CODEP=""
"RTN","PXRMTXIN",184,0)
 .. S NL=NL+1,OUTPUT(NL)=CHDR(1)
"RTN","PXRMTXIN",185,0)
 .. S NL=NL+1,OUTPUT(NL)=CHDR(2)
"RTN","PXRMTXIN",186,0)
 .. F  S CODEP=$O(OCL(CODEP)) Q:CODEP=""  D
"RTN","PXRMTXIN",187,0)
 ... S CODE=$P(OCL(CODEP),U,1),UID=$P(OCL(CODEP),U,2)
"RTN","PXRMTXIN",188,0)
 ... I TYPE="C" D CDETAILC(CODESYS,CODE,UID,.NL,.OUTPUT)
"RTN","PXRMTXIN",189,0)
 ... I TYPE="F" D CDETAILF(CODESYS,CODE,UID,.NL,.OUTPUT)
"RTN","PXRMTXIN",190,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",191,0)
 ;
"RTN","PXRMTXIN",192,0)
 ;Look for duplicated codes if there are any list them.
"RTN","PXRMTXIN",193,0)
 S CODE=""
"RTN","PXRMTXIN",194,0)
 F  S CODE=$O(^TMP($J,"CC",CODE)) Q:CODE=""  D
"RTN","PXRMTXIN",195,0)
 . I ^TMP($J,"CC",CODE)>1 S DUPL(CODE)=^TMP($J,"CC",CODE)
"RTN","PXRMTXIN",196,0)
 ;
"RTN","PXRMTXIN",197,0)
 ;If there are duplicates count the number of unique codes.
"RTN","PXRMTXIN",198,0)
 I $D(DUPL) D
"RTN","PXRMTXIN",199,0)
 . S CODESYS="",NUCODES=0
"RTN","PXRMTXIN",200,0)
 . F  S CODESYS=$O(^PXD(811.2,IEN,20,"AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIN",201,0)
 .. S CODE=""
"RTN","PXRMTXIN",202,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMTXIN",203,0)
 ... S NUCODES(CODESYS)=NUCODES(CODESYS)+1,NUCODES=NUCODES+1
"RTN","PXRMTXIN",204,0)
 ;
"RTN","PXRMTXIN",205,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",206,0)
 S NL=NL+1,OUTPUT(NL)="This taxonomy includes the following numbers of codes:"
"RTN","PXRMTXIN",207,0)
 S CODESYS="",TEMP=0
"RTN","PXRMTXIN",208,0)
 F  S CODESYS=$O(NCODES(CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIN",209,0)
 . S NL=NL+1,OUTPUT(NL)=CODESYSN(CODESYS)_": "_NCODES(CODESYS)
"RTN","PXRMTXIN",210,0)
 . I $D(DUPL) S OUTPUT(NL)=OUTPUT(NL)_"; "_NUCODES(CODESYS)_" are unique."
"RTN","PXRMTXIN",211,0)
 . S TEMP=TEMP+NCODES(CODESYS)
"RTN","PXRMTXIN",212,0)
 S NL=NL+1,OUTPUT(NL)="Total number of codes: "_TEMP
"RTN","PXRMTXIN",213,0)
 I $D(DUPL) S OUTPUT(NL)=OUTPUT(NL)_"; "_NUCODES_" are unique."
"RTN","PXRMTXIN",214,0)
 ;
"RTN","PXRMTXIN",215,0)
 ;If there are duplicates, list them.
"RTN","PXRMTXIN",216,0)
 I '$D(DUPL) K ^TMP($J,"CC") Q
"RTN","PXRMTXIN",217,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",218,0)
 S NL=NL+1,OUTPUT(NL)="The following codes are included in more than one Term/Code."
"RTN","PXRMTXIN",219,0)
 S CODE=""
"RTN","PXRMTXIN",220,0)
 F  S CODE=$O(DUPL(CODE)) Q:CODE=""  D
"RTN","PXRMTXIN",221,0)
 . S CODESYS=""
"RTN","PXRMTXIN",222,0)
 . F  S CODESYS=$O(^TMP($J,"CC",CODE,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXIN",223,0)
 .. S NL=NL+1,OUTPUT(NL)=CODESYSN(CODESYS)_" code "_CODE_" is included "_DUPL(CODE)_" times."
"RTN","PXRMTXIN",224,0)
 .. S NL=NL+1,OUTPUT(NL)=" Term/Code:"
"RTN","PXRMTXIN",225,0)
 .. S TERM=""
"RTN","PXRMTXIN",226,0)
 .. F  S TERM=$O(^TMP($J,"CC",CODE,CODESYS,TERM)) Q:TERM=""  D
"RTN","PXRMTXIN",227,0)
 ... S NL=NL+1,OUTPUT(NL)="  "_TERM
"RTN","PXRMTXIN",228,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXRMTXIN",229,0)
 K ^TMP($J,"CC")
"RTN","PXRMTXIN",230,0)
 Q
"RTN","PXRMTXIN",231,0)
 ;
"RTN","PXRMTXSM")
0^2^B41443129
"RTN","PXRMTXSM",1,0)
PXRMTXSM ;SLC/PKR - Reminder Taxonomy ScreenMan routines ;04/17/2014
"RTN","PXRMTXSM",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMTXSM",3,0)
 ;
"RTN","PXRMTXSM",4,0)
 ;===================================
"RTN","PXRMTXSM",5,0)
CODELIST(TAXIEN,TERM,CODESYS) ;See if the temporary list of selected codes
"RTN","PXRMTXSM",6,0)
 ;exists, if it does not and codes have been stored in the taxonomy
"RTN","PXRMTXSM",7,0)
 ;then build it.
"RTN","PXRMTXSM",8,0)
 I $D(^TMP("PXRMCODES",$J,TERM,CODESYS)) Q
"RTN","PXRMTXSM",9,0)
 I '$D(^PXD(811.2,TAXIEN,20,"ATC",TERM,CODESYS)) Q
"RTN","PXRMTXSM",10,0)
 M ^TMP("PXRMCODES",$J,TERM,CODESYS)=^PXD(811.2,TAXIEN,20,"ATCC",TERM,CODESYS)
"RTN","PXRMTXSM",11,0)
 Q
"RTN","PXRMTXSM",12,0)
 ;
"RTN","PXRMTXSM",13,0)
 ;===================================
"RTN","PXRMTXSM",14,0)
EXETCCAP(DA) ;Executable caption for code search.
"RTN","PXRMTXSM",15,0)
 N TC
"RTN","PXRMTXSM",16,0)
 S TC=$$GET^DDSVAL(811.23,.DA,.01,"","E")
"RTN","PXRMTXSM",17,0)
 I $L(TC)>57 S TC=$E(TC,1,54)_"..."
"RTN","PXRMTXSM",18,0)
 Q " Term/Code: "_TC_" "
"RTN","PXRMTXSM",19,0)
 ;
"RTN","PXRMTXSM",20,0)
 ;===================================
"RTN","PXRMTXSM",21,0)
LEXSRCH(DA,CODESYS) ;Branch for Lexicon Term/Code search.
"RTN","PXRMTXSM",22,0)
 ;selection.
"RTN","PXRMTXSM",23,0)
 N PXRMLEXV,SAVEDDS,TAXIEN,TERM
"RTN","PXRMTXSM",24,0)
 ;These PXRM variables are used in the List Manager Lexicon search.
"RTN","PXRMTXSM",25,0)
 N PXRMBGS,PXRMLEXV
"RTN","PXRMTXSM",26,0)
 K ^TMP("PXRMLEXTC",$J)
"RTN","PXRMTXSM",27,0)
 S ^TMP("PXRMLEXTC",$J,"CODESYS")=CODESYS
"RTN","PXRMTXSM",28,0)
 S (^TMP("PXRMLEXTC",$J,"LEX TERM"),TERM)=$$GET^DDSVAL(811.23,.DA,.01,"","E")
"RTN","PXRMTXSM",29,0)
 S (^TMP("PXRMLEXTC",$J,"TAX IEN"),TAXIEN)=DA(1)
"RTN","PXRMTXSM",30,0)
 D CODELIST(TAXIEN,TERM,CODESYS)
"RTN","PXRMTXSM",31,0)
 ;DBIA #5746 covers kill and set of DDS.
"RTN","PXRMTXSM",32,0)
 I $D(DDS) S SAVEDDS=DDS K DDS
"RTN","PXRMTXSM",33,0)
 D EN^VALM("PXRM LEXICON SELECT")
"RTN","PXRMTXSM",34,0)
 K ^TMP("PXRMLEXTC",$J)
"RTN","PXRMTXSM",35,0)
 ;Reset the screen so ScreenMan displays properly.
"RTN","PXRMTXSM",36,0)
 I $D(SAVEDDS) D
"RTN","PXRMTXSM",37,0)
 . N IOAWM0,X
"RTN","PXRMTXSM",38,0)
 . S DDS=SAVEDDS
"RTN","PXRMTXSM",39,0)
 . S X=0 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","PXRMTXSM",40,0)
 . S X="IOAWM0" D ENDR^%ZISS W IOAWM0
"RTN","PXRMTXSM",41,0)
 . D REFRESH^DDSUTL
"RTN","PXRMTXSM",42,0)
 Q
"RTN","PXRMTXSM",43,0)
 ;
"RTN","PXRMTXSM",44,0)
 ;===================================
"RTN","PXRMTXSM",45,0)
LTCPAOC(DA) ;Lexicon Term/Code post-action on change.
"RTN","PXRMTXSM",46,0)
 N NTC,OTC,TEXT
"RTN","PXRMTXSM",47,0)
 S NTC=$$GET^DDSVAL(811.23,.DA,"TERM/CODE")
"RTN","PXRMTXSM",48,0)
 S OTC=$G(^PXD(811.2,DA(1),20,DA,0))
"RTN","PXRMTXSM",49,0)
 I ($L(OTC)>0),(NTC'=OTC) D
"RTN","PXRMTXSM",50,0)
 . S TEXT(1)="Overwriting a search Term/Code is not allowed!"
"RTN","PXRMTXSM",51,0)
 . S TEXT(2)="To replace a search term delete the existing one first."
"RTN","PXRMTXSM",52,0)
 . S TEXT(3)="$$EOP"
"RTN","PXRMTXSM",53,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXRMTXSM",54,0)
 . D PUT^DDSVAL(811.23,.DA,"TERM/CODE",OTC)
"RTN","PXRMTXSM",55,0)
 Q
"RTN","PXRMTXSM",56,0)
 ;
"RTN","PXRMTXSM",57,0)
 ;===================================
"RTN","PXRMTXSM",58,0)
NUMCODES(DA) ;Executable caption to display the number of selected codes
"RTN","PXRMTXSM",59,0)
 ;for Lexicon Term/Code.
"RTN","PXRMTXSM",60,0)
 ;^TMP("PXRMCODES",$J) will have the value from the current editing
"RTN","PXRMTXSM",61,0)
 ;session so check it first.
"RTN","PXRMTXSM",62,0)
 I DA="" Q $$REPEAT^XLFSTR(" ",30)
"RTN","PXRMTXSM",63,0)
 N CODESYS,COUNT,IND,NUID,NUM,TEMP,TERM,TEXT,UID
"RTN","PXRMTXSM",64,0)
 S TERM=$$GET^DDSVAL(811.23,.DA,.01,"","E")
"RTN","PXRMTXSM",65,0)
 S CODESYS=""
"RTN","PXRMTXSM",66,0)
 F  S CODESYS=$O(^TMP("PXRMCODES",$J,TERM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXSM",67,0)
 . S CODE="",(NUID,NUM)=0
"RTN","PXRMTXSM",68,0)
 . F  S CODE=$O(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMTXSM",69,0)
 .. S NUM=NUM+1
"RTN","PXRMTXSM",70,0)
 .. S UID=^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)
"RTN","PXRMTXSM",71,0)
 .. I UID=1 S NUID=NUID+1
"RTN","PXRMTXSM",72,0)
 . S COUNT(CODESYS)=NUM
"RTN","PXRMTXSM",73,0)
 . S NUID(CODESYS)=NUID
"RTN","PXRMTXSM",74,0)
 ;Check for stored values.
"RTN","PXRMTXSM",75,0)
 S IND=0
"RTN","PXRMTXSM",76,0)
 F  S IND=+$O(^PXD(811.2,DA(1),20,DA,1,IND)) Q:IND=0  D
"RTN","PXRMTXSM",77,0)
 . S TEMP=^PXD(811.2,DA(1),20,DA,1,IND,0)
"RTN","PXRMTXSM",78,0)
 . S CODESYS=$P(TEMP,U,1),NUM=$P(TEMP,U,2),NUID=$P(TEMP,U,3)
"RTN","PXRMTXSM",79,0)
 . I $D(COUNT(CODESYS))!(NUM=0) Q
"RTN","PXRMTXSM",80,0)
 . S COUNT(CODESYS)=NUM
"RTN","PXRMTXSM",81,0)
 . S NUID(CODESYS)=NUID
"RTN","PXRMTXSM",82,0)
 I '$D(COUNT) Q "None"_$$REPEAT^XLFSTR(" ",26)
"RTN","PXRMTXSM",83,0)
 S (CODESYS,TEXT)=""
"RTN","PXRMTXSM",84,0)
 F  S CODESYS=$O(COUNT(CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXSM",85,0)
 . S TEXT=TEXT_CODESYS_":"_COUNT(CODESYS)
"RTN","PXRMTXSM",86,0)
 . I NUID(CODESYS)>0 S TEXT=TEXT_":"_NUID(CODESYS)
"RTN","PXRMTXSM",87,0)
 . S TEXT=TEXT_" "
"RTN","PXRMTXSM",88,0)
 S NUM=$L(TEXT)
"RTN","PXRMTXSM",89,0)
 I NUM<30 S TEXT=TEXT_$$REPEAT^XLFSTR(" ",(30-NUM))
"RTN","PXRMTXSM",90,0)
 Q TEXT
"RTN","PXRMTXSM",91,0)
 ;
"RTN","PXRMTXSM",92,0)
 ;===================================
"RTN","PXRMTXSM",93,0)
POSTACT(D0) ;Form Post Action
"RTN","PXRMTXSM",94,0)
 N INACTIVE,INUSE,OUTPUT
"RTN","PXRMTXSM",95,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXSM",96,0)
 ;If the change was a deletion there is nothing else to do.
"RTN","PXRMTXSM",97,0)
 I '$D(^PXD(811.2,D0)) Q
"RTN","PXRMTXSM",98,0)
 ;If the taxonomy was inactivated check to see if it is being used.
"RTN","PXRMTXSM",99,0)
 S INACTIVE=$$GET^DDSVAL(811.2,D0,"INACTIVE FLAG")
"RTN","PXRMTXSM",100,0)
 S INUSE=$S(INACTIVE:$$INUSE^PXRMTAXD(D0,"INACT"),1:0)
"RTN","PXRMTXSM",101,0)
 I INUSE D HLP^DDSUTL("$$EOP")
"RTN","PXRMTXSM",102,0)
 ;Check for dialog problems.
"RTN","PXRMTXSM",103,0)
 D TAXEDITC^PXRMDTAX(D0,.OUTPUT)
"RTN","PXRMTXSM",104,0)
 I $D(OUTPUT) D
"RTN","PXRMTXSM",105,0)
 . D BROWSE^DDBR("OUTPUT","NR","Problems with dialogs using this taxonomy.")
"RTN","PXRMTXSM",106,0)
 . I $D(DDS) D REFRESH^DDSUTL S DY=IOSL-7,DX=0 X IOXY S $Y=DY,$X=DX
"RTN","PXRMTXSM",107,0)
 Q
"RTN","PXRMTXSM",108,0)
 ;
"RTN","PXRMTXSM",109,0)
 ;===================================
"RTN","PXRMTXSM",110,0)
POSTSAVE(IEN) ;Form Post Save. Store changes in lists of codes.
"RTN","PXRMTXSM",111,0)
 N CODE,CODESYS,CSYIND,FDA,KCSYSIND,KFDA,MSG,NSEL,NUID,PDS
"RTN","PXRMTXSM",112,0)
 N TEMP,TERM,TERMIND,TEXT,UID
"RTN","PXRMTXSM",113,0)
 S TERM="",TERMIND=0
"RTN","PXRMTXSM",114,0)
 F  S TERM=$O(^TMP("PXRMCODES",$J,TERM)) Q:TERM=""  D
"RTN","PXRMTXSM",115,0)
 .;If this term has been deleted, skip the rest.
"RTN","PXRMTXSM",116,0)
 . I '$D(^PXD(811.2,IEN,20,"B",TERM)) Q
"RTN","PXRMTXSM",117,0)
 . S TERMIND=$O(^PXD(811.2,IEN,20,"B",TERM,""))
"RTN","PXRMTXSM",118,0)
 . S CODESYS="",CSYSIND=TERMIND
"RTN","PXRMTXSM",119,0)
 . F  S CODESYS=$O(^TMP("PXRMCODES",$J,TERM,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMTXSM",120,0)
 ..;Check for existing entries for this term and this coding system.
"RTN","PXRMTXSM",121,0)
 ..;If there are any remove them before storing the new set.
"RTN","PXRMTXSM",122,0)
 .. I $D(^PXD(811.2,IEN,20,"ATC",TERM,CODESYS)) D
"RTN","PXRMTXSM",123,0)
 ... S KCSYSIND=$P(^PXD(811.2,IEN,20,"ATC",TERM,CODESYS),U,2)
"RTN","PXRMTXSM",124,0)
 ... S IENS=KCSYSIND_","_TERMIND_","_IEN_","
"RTN","PXRMTXSM",125,0)
 ... S KFDA(811.231,IENS,.01)="@"
"RTN","PXRMTXSM",126,0)
 ... D FILE^DIE("","KFDA","MSG")
"RTN","PXRMTXSM",127,0)
 .. S CSYSIND=CSYSIND+1
"RTN","PXRMTXSM",128,0)
 .. S (NSEL,NUID)=0,CODE=""
"RTN","PXRMTXSM",129,0)
 .. F  S CODE=$O(^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMTXSM",130,0)
 ... S NSEL=NSEL+1
"RTN","PXRMTXSM",131,0)
 ... S UID=^TMP("PXRMCODES",$J,TERM,CODESYS,CODE)
"RTN","PXRMTXSM",132,0)
 ... I UID=1 S NUID=NUID+1
"RTN","PXRMTXSM",133,0)
 ... S IENS="+"_(NSEL+CSYSIND)_",+"_CSYSIND_","_TERMIND_","_IEN_","
"RTN","PXRMTXSM",134,0)
 ... S FDA(811.2312,IENS,.01)=CODE
"RTN","PXRMTXSM",135,0)
 ... S FDA(811.2312,IENS,1)=UID
"RTN","PXRMTXSM",136,0)
 .. S IENS="+"_CSYSIND_","_TERMIND_","_IEN_","
"RTN","PXRMTXSM",137,0)
 .. S FDA(811.231,IENS,.01)=CODESYS
"RTN","PXRMTXSM",138,0)
 .. S FDA(811.231,IENS,1)=NSEL
"RTN","PXRMTXSM",139,0)
 .. S FDA(811.231,IENS,3)=NUID
"RTN","PXRMTXSM",140,0)
 .. S CSYSIND=NSEL+CSYSIND
"RTN","PXRMTXSM",141,0)
 . D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMTXSM",142,0)
 . I $D(MSG) D
"RTN","PXRMTXSM",143,0)
 .. S TEXT(1)="Error storing codes for term "_TERM
"RTN","PXRMTXSM",144,0)
 .. S TEXT(2)=" coding system "_CODESYS
"RTN","PXRMTXSM",145,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMTXSM",146,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMTXSM",147,0)
 .. H 2
"RTN","PXRMTXSM",148,0)
 K ^TMP("PXRMCODES",$J)
"RTN","PXRMTXSM",149,0)
 ;Make sure Patient Data Source index is built.
"RTN","PXRMTXSM",150,0)
 S PDS=$$GET^DDSVAL(811.2,IEN,"PATIENT DATA SOURCE")
"RTN","PXRMTXSM",151,0)
 I PDS="" D SPDS^PXRMPDS(IEN,PDS)
"RTN","PXRMTXSM",152,0)
 Q
"RTN","PXRMTXSM",153,0)
 ;
"RTN","PXRMTXSM",154,0)
 ;===================================
"RTN","PXRMTXSM",155,0)
SMANEDIT(IEN,NEW,FORM) ;ScreenMan edit for entry IEN.
"RTN","PXRMTXSM",156,0)
 N CLASS,DA,DDSCHANG,DDSFILE,DDSPARM,DIDEL,DIMSG,DR,DTOUT,NATOK
"RTN","PXRMTXSM",157,0)
 S (DDSFILE,DIDEL)=811.2,DDSPARM="CS",DR="["_FORM_"]"
"RTN","PXRMTXSM",158,0)
 S CLASS=$P(^PXD(811.2,IEN,100),U,1)
"RTN","PXRMTXSM",159,0)
 S NATOK=$S(CLASS'="N":1,1:($G(PXRMINST)=1)&($G(DUZ(0))="@"))
"RTN","PXRMTXSM",160,0)
 I 'NATOK D  Q
"RTN","PXRMTXSM",161,0)
 . W !,"National taxonomies cannot be edited."
"RTN","PXRMTXSM",162,0)
 . H 2
"RTN","PXRMTXSM",163,0)
 . S VALMBCK="R"
"RTN","PXRMTXSM",164,0)
 ;These ^TMP entries are used by the Lexicon display to store the 
"RTN","PXRMTXSM",165,0)
 ;results of the search and selection. Initializing them here minimizes
"RTN","PXRMTXSM",166,0)
 ;the number of Lexicon searches.
"RTN","PXRMTXSM",167,0)
 K ^TMP("PXRMCODES",$J),^TMP("PXRMLEXS",$J),^TMP("PXRMTEXT",$J)
"RTN","PXRMTXSM",168,0)
 S DA=IEN
"RTN","PXRMTXSM",169,0)
 D ^DDS
"RTN","PXRMTXSM",170,0)
 K ^TMP("PXRMCODES",$J),^TMP("PXRMLEXS",$J),^TMP("PXRMTEXT",$J)
"RTN","PXRMTXSM",171,0)
 I $D(DIMSG) H 2
"RTN","PXRMTXSM",172,0)
 ;If the entry is new and the user did not save, delete it.
"RTN","PXRMTXSM",173,0)
 I $G(NEW),$G(DDSSAVE)'=1 D DELETE^PXRMEXFI(811.2,IEN) Q
"RTN","PXRMTXSM",174,0)
 ;If changes were made update the change log and rebuild the
"RTN","PXRMTXSM",175,0)
 ;List Manager list.
"RTN","PXRMTXSM",176,0)
 I 'NEW,$G(DDSCHANG)'=1 S VALMBCK="R" Q
"RTN","PXRMTXSM",177,0)
 D BLDLIST^PXRMTAXL("PXRMTAXL")
"RTN","PXRMTXSM",178,0)
 S VALMBCK="R"
"RTN","PXRMTXSM",179,0)
 ;If the change was a deletion skip the change log.
"RTN","PXRMTXSM",180,0)
 I '$D(^PXD(811.2,IEN)) Q
"RTN","PXRMTXSM",181,0)
 N IENS,FDA,FDAIEN,MSG,WPTMP
"RTN","PXRMTXSM",182,0)
 S IENS="+1,"_IEN_","
"RTN","PXRMTXSM",183,0)
 S FDA(811.21,IENS,.01)=$$NOW^XLFDT
"RTN","PXRMTXSM",184,0)
 S FDA(811.21,IENS,1)=DUZ
"RTN","PXRMTXSM",185,0)
 I NEW D
"RTN","PXRMTXSM",186,0)
 . S WPTMP(1,1,1)=" Creation."
"RTN","PXRMTXSM",187,0)
 . S FDA(811.21,IENS,2)="WPTMP(1,1)"
"RTN","PXRMTXSM",188,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMTXSM",189,0)
 K DA,DDSFILE
"RTN","PXRMTXSM",190,0)
 S DA=FDAIEN(1),DA(1)=IEN
"RTN","PXRMTXSM",191,0)
 S DDSFILE=811.2,DDSFILE(1)=811.21
"RTN","PXRMTXSM",192,0)
 S DR="[PXRM TAXONOMY CHANGE LOG]"
"RTN","PXRMTXSM",193,0)
 D ^DDS
"RTN","PXRMTXSM",194,0)
 Q
"RTN","PXRMTXSM",195,0)
 ;
"RTN","PXRMUIDR")
0^30^B9563816
"RTN","PXRMUIDR",1,0)
PXRMUIDR ;SLC/PKR - Taxonomy Use In Dialog report routines. ;03/01/2013
"RTN","PXRMUIDR",2,0)
 ;;2.0;CLINICAL REMINDERS;**26**;Feb 04, 2005;Build 404
"RTN","PXRMUIDR",3,0)
 ;==========================================
"RTN","PXRMUIDR",4,0)
REPD ;Inactive UID report driver.
"RTN","PXRMUIDR",5,0)
 N DIR0,NLINES,OUTPUT,TITLE
"RTN","PXRMUIDR",6,0)
 D REPTEXT(.NLINES,.OUTPUT)
"RTN","PXRMUIDR",7,0)
 S TITLE="Inactive UID Report as of "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMUIDR",8,0)
 D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXRMUIDR",9,0)
 I $D(VALMDDF) S VALMBCK="R"
"RTN","PXRMUIDR",10,0)
 Q
"RTN","PXRMUIDR",11,0)
 ;
"RTN","PXRMUIDR",12,0)
 ;==========================================
"RTN","PXRMUIDR",13,0)
REPTEXT(NLINES,OUTPUT) ;Create inactive UID report text.
"RTN","PXRMUIDR",14,0)
 N ACTDT,BDESC,CODE,CODESYS,CODESYSN,FMTSTR,IEN,INACTDT,IND,LC
"RTN","PXRMUIDR",15,0)
 N NAME,NCS,NOUT,TEXT,TEXTOUT
"RTN","PXRMUIDR",16,0)
 K ^TMP("PXRMUIDR",$J)
"RTN","PXRMUIDR",17,0)
 S FMTSTR="10L1^10C4^45L"
"RTN","PXRMUIDR",18,0)
 S IEN=0
"RTN","PXRMUIDR",19,0)
 F  S IEN=+$O(^PXD(811.2,IEN)) Q:IEN=0  D
"RTN","PXRMUIDR",20,0)
 . S NAME=$P(^PXD(811.2,IEN,0),U,1)
"RTN","PXRMUIDR",21,0)
 . S CODESYS=""
"RTN","PXRMUIDR",22,0)
 . F  S CODESYS=$O(^PXD(811.2,IEN,20,"AUID",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMUIDR",23,0)
 .. S CODE=""
"RTN","PXRMUIDR",24,0)
 .. F  S CODE=$O(^PXD(811.2,IEN,20,"AUID",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMUIDR",25,0)
 ... S ACTDT=$O(^PXD(811.2,IEN,20,"AUID",CODESYS,CODE,""),-1)
"RTN","PXRMUIDR",26,0)
 ... S INACTDT=$O(^PXD(811.2,IEN,20,"AUID",CODESYS,CODE,ACTDT,""),-1)
"RTN","PXRMUIDR",27,0)
 ... I (INACTDT>DT)!(INACTDT="DT") Q
"RTN","PXRMUIDR",28,0)
 ... S ^TMP("PXRMUIDR",$J,NAME,CODESYS,CODE,INACTDT)=$P(^PXD(811.2,IEN,20,"AUID",CODESYS,CODE,ACTDT,INACTDT),U,2)
"RTN","PXRMUIDR",29,0)
 . I $D(^TMP("PXRMUIDR",$J,NAME)) S ^TMP("PXRMUIDR",$J,NAME)=IEN
"RTN","PXRMUIDR",30,0)
 ;Create the text.
"RTN","PXRMUIDR",31,0)
 S OUTPUT(1)="The following taxonomies contain the listed inactive codes which are marked as"
"RTN","PXRMUIDR",32,0)
 S OUTPUT(2)="Use in Dialog:"
"RTN","PXRMUIDR",33,0)
 S OUTPUT(3)=""
"RTN","PXRMUIDR",34,0)
 S LC=3,NAME=""
"RTN","PXRMUIDR",35,0)
 F  S NAME=$O(^TMP("PXRMUIDR",$J,NAME)) Q:NAME=""  D
"RTN","PXRMUIDR",36,0)
 . S IEN=^TMP("PXRMUIDR",$J,NAME)
"RTN","PXRMUIDR",37,0)
 . I LC>3 S LC=LC+1,OUTPUT(LC)=""
"RTN","PXRMUIDR",38,0)
 . S LC=LC+1,OUTPUT(LC)="Taxonomy: "_NAME_" (IEN="_IEN_")"
"RTN","PXRMUIDR",39,0)
 . S CODESYS="",NCS=0
"RTN","PXRMUIDR",40,0)
 . F  S CODESYS=$O(^TMP("PXRMUIDR",$J,NAME,CODESYS)) Q:CODESYS=""  D
"RTN","PXRMUIDR",41,0)
 .. S NCS=NCS+1
"RTN","PXRMUIDR",42,0)
 ..;DBIA #5679
"RTN","PXRMUIDR",43,0)
 .. I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMUIDR",44,0)
 .. I NCS>1 S LC=LC+1,OUTPUT(LC)=""
"RTN","PXRMUIDR",45,0)
 .. S LC=LC+1,OUTPUT(LC)=" Coding system: "_CODESYSN(CODESYS)
"RTN","PXRMUIDR",46,0)
 .. S LC=LC+1,OUTPUT(LC)="Code       Inactivation  Brief Description"
"RTN","PXRMUIDR",47,0)
 .. S LC=LC+1,OUTPUT(LC)="---------  ------------  -----------------"
"RTN","PXRMUIDR",48,0)
 .. S CODE=""
"RTN","PXRMUIDR",49,0)
 .. F  S CODE=$O(^TMP("PXRMUIDR",$J,NAME,CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMUIDR",50,0)
 ... S INACTDT=$O(^TMP("PXRMUIDR",$J,NAME,CODESYS,CODE,""))
"RTN","PXRMUIDR",51,0)
 ... S BDESC=^TMP("PXRMUIDR",$J,NAME,CODESYS,CODE,INACTDT)
"RTN","PXRMUIDR",52,0)
 ... S TEXT=CODE_U_$$FMTE^XLFDT(INACTDT,"5Z")_U_BDESC
"RTN","PXRMUIDR",53,0)
 ... D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NOUT,.TEXTOUT)
"RTN","PXRMUIDR",54,0)
 ... F IND=1:1:NOUT S LC=LC+1,OUTPUT(LC)=TEXTOUT(IND)
"RTN","PXRMUIDR",55,0)
 ;If no text in addition to the header was created change the header.
"RTN","PXRMUIDR",56,0)
 I LC=3 D
"RTN","PXRMUIDR",57,0)
 . S OUTPUT(1)="No taxonomies containing inactive codes which are marked as Use in Dialog"
"RTN","PXRMUIDR",58,0)
 . S OUTPUT(2)="were found."
"RTN","PXRMUIDR",59,0)
 . S OUTPUT(3)=""
"RTN","PXRMUIDR",60,0)
 S NLINES=LC
"RTN","PXRMUIDR",61,0)
 K ^TMP("PXRMUIDR",$J)
"RTN","PXRMUIDR",62,0)
 Q
"RTN","PXRMUIDR",63,0)
 ;
"RTN","PXRMUTIL")
0^87^B128848927
"RTN","PXRMUTIL",1,0)
PXRMUTIL ;SLC/PKR/PJH - Utility routines for use by PXRM. ;02/05/2013
"RTN","PXRMUTIL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,11,12,17,18,24,26**;Feb 04, 2005;Build 404
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;=================================
"RTN","PXRMUTIL",5,0)
ATTVALUE(STRING,ATTR,SEP,AVSEP) ;STRING contains a list of attribute value
"RTN","PXRMUTIL",6,0)
 ;pairs. Each pair is separated by SEP and the attribute value pair
"RTN","PXRMUTIL",7,0)
 ;is separated by AVSEP. Return the value for the attribute ATTR.
"RTN","PXRMUTIL",8,0)
 N AVPAIR,IND,NUMAVP,VALUE
"RTN","PXRMUTIL",9,0)
 S NUMAVP=$L(STRING,SEP)
"RTN","PXRMUTIL",10,0)
 S VALUE=""
"RTN","PXRMUTIL",11,0)
 F IND=1:1:NUMAVP Q:VALUE'=""  D
"RTN","PXRMUTIL",12,0)
 . S AVPAIR=$P(STRING,SEP,IND)
"RTN","PXRMUTIL",13,0)
 . I AVPAIR[ATTR S VALUE=$P(AVPAIR,AVSEP,2)
"RTN","PXRMUTIL",14,0)
 Q VALUE
"RTN","PXRMUTIL",15,0)
 ;
"RTN","PXRMUTIL",16,0)
 ;=================================
"RTN","PXRMUTIL",17,0)
ACOPY(REF,OUTPUT) ;Copy all the descendants of the array reference into a linear
"RTN","PXRMUTIL",18,0)
 ;array. REF is the starting array reference, for example A or
"RTN","PXRMUTIL",19,0)
 ;^TMP("PXRM",$J). OUTPUT is the linear array for the output. It
"RTN","PXRMUTIL",20,0)
 ;should be in the form of a closed root, i.e., A() or ^TMP($J,).
"RTN","PXRMUTIL",21,0)
 ;Note OUTPUT cannot be used as the name of the output array.
"RTN","PXRMUTIL",22,0)
 N DONE,IND,LEN,NL,OROOT,OUT,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",23,0)
 I REF="" Q
"RTN","PXRMUTIL",24,0)
 S NL=0
"RTN","PXRMUTIL",25,0)
 S OROOT=$P(OUTPUT,")",1)
"RTN","PXRMUTIL",26,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",27,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",28,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",29,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",30,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",31,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",32,0)
 S DONE=0
"RTN","PXRMUTIL",33,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",34,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",35,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",36,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",37,0)
 . S NL=NL+1
"RTN","PXRMUTIL",38,0)
 . S OUT=OROOT_NL_")"
"RTN","PXRMUTIL",39,0)
 . S @OUT=PROOT_IND_"="_@REF
"RTN","PXRMUTIL",40,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",41,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",42,0)
 Q
"RTN","PXRMUTIL",43,0)
 ;
"RTN","PXRMUTIL",44,0)
 ;=================================
"RTN","PXRMUTIL",45,0)
APRINT(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",46,0)
 ;REF is the starting array reference, for example A or
"RTN","PXRMUTIL",47,0)
 ;^TMP("PXRM",$J).
"RTN","PXRMUTIL",48,0)
 N DONE,IND,LEN,LN,PROOT,ROOT,START,TEMP,TEXT
"RTN","PXRMUTIL",49,0)
 I REF="" Q
"RTN","PXRMUTIL",50,0)
 S LN=0
"RTN","PXRMUTIL",51,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",52,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",53,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",54,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",55,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",56,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",57,0)
 S DONE=0
"RTN","PXRMUTIL",58,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",59,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",60,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",61,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",62,0)
 . S LN=LN+1,TEXT(LN)=@REF
"RTN","PXRMUTIL",63,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",64,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",65,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMUTIL",66,0)
 Q
"RTN","PXRMUTIL",67,0)
 ;
"RTN","PXRMUTIL",68,0)
 ;=================================
"RTN","PXRMUTIL",69,0)
AWRITE(REF) ;Write all the descendants of the array reference, including the
"RTN","PXRMUTIL",70,0)
 ;array. REF is the starting array reference, for example A or
"RTN","PXRMUTIL",71,0)
 ;^TMP("PXRM",$J).
"RTN","PXRMUTIL",72,0)
 N DONE,IND,LEN,LN,PROOT,ROOT,START,TEMP,TEXT
"RTN","PXRMUTIL",73,0)
 I REF="" Q
"RTN","PXRMUTIL",74,0)
 S LN=0
"RTN","PXRMUTIL",75,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",76,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",77,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",78,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",79,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",80,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",81,0)
 S DONE=0
"RTN","PXRMUTIL",82,0)
 F  Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",83,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",84,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",85,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",86,0)
 . S LN=LN+1,TEXT(LN)=PROOT_IND_"="_@REF
"RTN","PXRMUTIL",87,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",88,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",89,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMUTIL",90,0)
 Q
"RTN","PXRMUTIL",91,0)
 ;
"RTN","PXRMUTIL",92,0)
 ;=================================
"RTN","PXRMUTIL",93,0)
BORP(DEFAULT) ;Ask the user if they want to browse or print.
"RTN","PXRMUTIL",94,0)
 N DIR,POP,X,Y
"RTN","PXRMUTIL",95,0)
 S DIR(0)="SA"_U_"B:Browse;P:Print"
"RTN","PXRMUTIL",96,0)
 S DIR("A")="Browse or Print? "
"RTN","PXRMUTIL",97,0)
 S DIR("B")=DEFAULT
"RTN","PXRMUTIL",98,0)
 D ^DIR
"RTN","PXRMUTIL",99,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMUTIL",100,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMUTIL",101,0)
 Q Y
"RTN","PXRMUTIL",102,0)
 ;
"RTN","PXRMUTIL",103,0)
 ;=================================
"RTN","PXRMUTIL",104,0)
DELTLFE(FILENUM,NAME) ;Delete top level entries from a file.
"RTN","PXRMUTIL",105,0)
 N FDA,IENS,MSG
"RTN","PXRMUTIL",106,0)
 S IENS=+$$FIND1^DIC(FILENUM,"","BXU",NAME)
"RTN","PXRMUTIL",107,0)
 I IENS=0 Q
"RTN","PXRMUTIL",108,0)
 S IENS=IENS_","
"RTN","PXRMUTIL",109,0)
 S FDA(FILENUM,IENS,.01)="@"
"RTN","PXRMUTIL",110,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMUTIL",111,0)
 Q
"RTN","PXRMUTIL",112,0)
 ;
"RTN","PXRMUTIL",113,0)
 ;=================================
"RTN","PXRMUTIL",114,0)
DIP(VAR,IEN,PXRMROOT,FLDS) ;Do general inquiry for IEN return formatted
"RTN","PXRMUTIL",115,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMUTIL",116,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMUTIL",117,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMUTIL",118,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMUTIL",119,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMUTIL",120,0)
 N %ZIS,ARRAY,BY,DC,DHD,DIC,DONE,FF,FILENAME,FILESPEC,FR,GBL,HFNAME
"RTN","PXRMUTIL",121,0)
 N IND,IOP,L,NOW,PATH,SUCCESS,TO,UNIQN
"RTN","PXRMUTIL",122,0)
 S BY="NUMBER",(FR,TO)=+$P(IEN,U,1),DHD="@@"
"RTN","PXRMUTIL",123,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMUTIL",124,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMUTIL",125,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMUTIL",126,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMUTIL",127,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMUTIL",128,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMUTIL",129,0)
 S UNIQN=$J_NOW
"RTN","PXRMUTIL",130,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMUTIL",131,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMUTIL",132,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMUTIL",133,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMUTIL",134,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMUTIL",135,0)
 S L=0,DIC=PXRMROOT
"RTN","PXRMUTIL",136,0)
 D EN1^DIP
"RTN","PXRMUTIL",137,0)
 ;Move the host file into a global.
"RTN","PXRMUTIL",138,0)
 S GBL="^TMP(""PXRMUTIL"",$J,1,0)"
"RTN","PXRMUTIL",139,0)
 S GBL=$NA(@GBL)
"RTN","PXRMUTIL",140,0)
 K ^TMP("PXRMUTIL",$J)
"RTN","PXRMUTIL",141,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMUTIL",142,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMUTIL",143,0)
 S FF=$C(12)
"RTN","PXRMUTIL",144,0)
 I $G(VAR)["^" D
"RTN","PXRMUTIL",145,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMUTIL",146,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMUTIL",147,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMUTIL",148,0)
 . S (DONE,IND)=0
"RTN","PXRMUTIL",149,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMUTIL",$J,IND)) Q:+IND=0  D
"RTN","PXRMUTIL",150,0)
 .. I ^TMP("PXRMUTIL",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMUTIL",151,0)
 .. S @VAR=^TMP("PXRMUTIL",$J,IND,0)
"RTN","PXRMUTIL",152,0)
 E  D
"RTN","PXRMUTIL",153,0)
 . S (DONE,IND)=0
"RTN","PXRMUTIL",154,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMUTIL",$J,IND)) Q:+IND=0  D
"RTN","PXRMUTIL",155,0)
 .. S VAR(IND)=^TMP("PXRMUTIL",$J,IND,0)
"RTN","PXRMUTIL",156,0)
 .. I VAR(IND)=FF K ARRAY(IND) S DONE=1
"RTN","PXRMUTIL",157,0)
 K ^TMP("PXRMUTIL",$J)
"RTN","PXRMUTIL",158,0)
 ;Delete the host file.
"RTN","PXRMUTIL",159,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMUTIL",160,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMUTIL",161,0)
 Q
"RTN","PXRMUTIL",162,0)
 ;
"RTN","PXRMUTIL",163,0)
 ;=================================
"RTN","PXRMUTIL",164,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",165,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",166,0)
 ;
"RTN","PXRMUTIL",167,0)
 ;=================================
"RTN","PXRMUTIL",168,0)
GPRINT(REF) ;General printing.
"RTN","PXRMUTIL",169,0)
 N DIR,IOTP,POP
"RTN","PXRMUTIL",170,0)
 S %ZIS="Q"
"RTN","PXRMUTIL",171,0)
 D ^%ZIS
"RTN","PXRMUTIL",172,0)
 I POP Q
"RTN","PXRMUTIL",173,0)
 I $D(IO("Q")) D  Q
"RTN","PXRMUTIL",174,0)
 . N ZTDESC,ZTRTN,ZTSAVE
"RTN","PXRMUTIL",175,0)
 . S ZTSAVE("IO")=""
"RTN","PXRMUTIL",176,0)
 .;Save the evaluated name of REF.
"RTN","PXRMUTIL",177,0)
 . S ZTSAVE("REF")=$NA(@$$CREF^DILF(REF))
"RTN","PXRMUTIL",178,0)
 .;Save the open root form for TaskMan.
"RTN","PXRMUTIL",179,0)
 . S ZTSAVE($$OREF^DILF(ZTSAVE("REF")))=""
"RTN","PXRMUTIL",180,0)
 . S ZTRTN="GPRINTQ^PXRMUTIL"
"RTN","PXRMUTIL",181,0)
 . S ZTDESC="Queued print job"
"RTN","PXRMUTIL",182,0)
 . D ^%ZTLOAD
"RTN","PXRMUTIL",183,0)
 . W !,"Task number ",ZTSK
"RTN","PXRMUTIL",184,0)
 . D HOME^%ZIS
"RTN","PXRMUTIL",185,0)
 . K IO("Q")
"RTN","PXRMUTIL",186,0)
 . H 2
"RTN","PXRMUTIL",187,0)
 ;If this is being called from List Manager go to full screen.
"RTN","PXRMUTIL",188,0)
 I $D(VALMDDF) D FULL^VALM1
"RTN","PXRMUTIL",189,0)
 U IO
"RTN","PXRMUTIL",190,0)
 S IOTP=IOT
"RTN","PXRMUTIL",191,0)
 D APRINT^PXRMUTIL(REF)
"RTN","PXRMUTIL",192,0)
 D ^%ZISC
"RTN","PXRMUTIL",193,0)
 I IOTP["TRM" S DIR(0)="E",DIR("A")="Press ENTER to continue" D ^DIR
"RTN","PXRMUTIL",194,0)
 I $D(VALMDDF) S VALMBCK="R"
"RTN","PXRMUTIL",195,0)
 Q
"RTN","PXRMUTIL",196,0)
 ;
"RTN","PXRMUTIL",197,0)
 ;=================================
"RTN","PXRMUTIL",198,0)
GPRINTQ ;Queued general printing.
"RTN","PXRMUTIL",199,0)
 U IO
"RTN","PXRMUTIL",200,0)
 D APRINT^PXRMUTIL(REF)
"RTN","PXRMUTIL",201,0)
 D ^%ZISC
"RTN","PXRMUTIL",202,0)
 S ZTREQ="@"
"RTN","PXRMUTIL",203,0)
 Q
"RTN","PXRMUTIL",204,0)
 ;
"RTN","PXRMUTIL",205,0)
 ;=================================
"RTN","PXRMUTIL",206,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",207,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",208,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",209,0)
 N ALPH
"RTN","PXRMUTIL",210,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",211,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",212,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",213,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",214,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",215,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",216,0)
 ;
"RTN","PXRMUTIL",217,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",218,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",219,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",220,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",221,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",222,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",223,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",224,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",225,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",226,0)
 Q ANUM
"RTN","PXRMUTIL",227,0)
 ;
"RTN","PXRMUTIL",228,0)
 ;=================================
"RTN","PXRMUTIL",229,0)
OPTION(ACT) ;Disable/enable options.
"RTN","PXRMUTIL",230,0)
 N ACTION,IND,OPT,LIST,RESULT
"RTN","PXRMUTIL",231,0)
 S ACTION=$S(ACT="DISABLE":2,ACT="ENABLE":1,1:1)
"RTN","PXRMUTIL",232,0)
 D BMES^XPDUTL(ACT_" options.")
"RTN","PXRMUTIL",233,0)
 ;
"RTN","PXRMUTIL",234,0)
 D FIND^DIC(19,"","@;.01","","GMTS","*","B","","","LIST")
"RTN","PXRMUTIL",235,0)
 F IND=1:1:+LIST("DILIST",0) S OPT=LIST("DILIST","ID",IND,.01)
"RTN","PXRMUTIL",236,0)
 S RESULT=$$OPTDE^XPDUTL(OPT,ACTION)
"RTN","PXRMUTIL",237,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" option "_OPT)
"RTN","PXRMUTIL",238,0)
 ;
"RTN","PXRMUTIL",239,0)
 K LIST
"RTN","PXRMUTIL",240,0)
 D FIND^DIC(19,"","@;.01","","IBDF PRINT","*","B","","","LIST")
"RTN","PXRMUTIL",241,0)
 F IND=1:1:+LIST("DILIST",0) D
"RTN","PXRMUTIL",242,0)
 . S OPT=LIST("DILIST","ID",IND,.01)
"RTN","PXRMUTIL",243,0)
 . S RESULT=$$OPTDE^XPDUTL(OPT,ACTION)
"RTN","PXRMUTIL",244,0)
 . I RESULT=0 D MES^XPDUTL("Could not "_ACT_" option "_OPT)
"RTN","PXRMUTIL",245,0)
 ;
"RTN","PXRMUTIL",246,0)
 S OPT="OR CPRS GUI CHART"
"RTN","PXRMUTIL",247,0)
 S RESULT=$$OPTDE^XPDUTL(OPT,ACTION)
"RTN","PXRMUTIL",248,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" option "_OPT)
"RTN","PXRMUTIL",249,0)
 ;
"RTN","PXRMUTIL",250,0)
 S OPT="ORS HEALTH SUMMARY"
"RTN","PXRMUTIL",251,0)
 S RESULT=$$OPTDE^XPDUTL(OPT,ACTION)
"RTN","PXRMUTIL",252,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" option "_OPT)
"RTN","PXRMUTIL",253,0)
 ;
"RTN","PXRMUTIL",254,0)
 K LIST
"RTN","PXRMUTIL",255,0)
 D FIND^DIC(19,"","@;.01","","PXRM","*","B","","","LIST")
"RTN","PXRMUTIL",256,0)
 F IND=1:1:+LIST("DILIST",0) D
"RTN","PXRMUTIL",257,0)
 . S OPT=LIST("DILIST","ID",IND,.01)
"RTN","PXRMUTIL",258,0)
 . S RESULT=$$OPTDE^XPDUTL(OPT,ACTION)
"RTN","PXRMUTIL",259,0)
 . I RESULT=0 W !,"Could not ",ACTION," option ",OPT
"RTN","PXRMUTIL",260,0)
 Q
"RTN","PXRMUTIL",261,0)
 ;
"RTN","PXRMUTIL",262,0)
 ;=================================
"RTN","PXRMUTIL",263,0)
PROTOCOL(ACT) ;Disable/enable protocols.
"RTN","PXRMUTIL",264,0)
 N ACTION,PROT,RESULT
"RTN","PXRMUTIL",265,0)
 S ACTION=$S(ACT="DISABLE":2,ACT="ENABLE":1,1:1)
"RTN","PXRMUTIL",266,0)
 D BMES^XPDUTL(ACT_" protocols.")
"RTN","PXRMUTIL",267,0)
 ;
"RTN","PXRMUTIL",268,0)
 S PROT="ORS HEALTH SUMMARY"
"RTN","PXRMUTIL",269,0)
 S RESULT=$$PRODE^XPDUTL(PROT,ACTION)
"RTN","PXRMUTIL",270,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" protocol "_PROT)
"RTN","PXRMUTIL",271,0)
 ;
"RTN","PXRMUTIL",272,0)
 S PROT="ORS AD HOC HEALTH SUMMARY"
"RTN","PXRMUTIL",273,0)
 S RESULT=$$PRODE^XPDUTL(PROT,ACTION)
"RTN","PXRMUTIL",274,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" protocol "_PROT)
"RTN","PXRMUTIL",275,0)
 ;
"RTN","PXRMUTIL",276,0)
 S PROT="PXRM PATIENT DATA CHANGE"
"RTN","PXRMUTIL",277,0)
 S RESULT=$$PRODE^XPDUTL(PROT,ACTION)
"RTN","PXRMUTIL",278,0)
 I RESULT=0 D MES^XPDUTL("Could not "_ACT_" protocol "_PROT)
"RTN","PXRMUTIL",279,0)
 Q
"RTN","PXRMUTIL",280,0)
 ;
"RTN","PXRMUTIL",281,0)
 ;=================================
"RTN","PXRMUTIL",282,0)
RENAME(FILENUM,OLDNAME,NEWNAME) ;Rename entry OLDNAME to NEWNAME in
"RTN","PXRMUTIL",283,0)
 ;file number FILENUM.
"RTN","PXRMUTIL",284,0)
 N DA,DIE,DR,NIEN,PXRMINST
"RTN","PXRMUTIL",285,0)
 S DA=$$FIND1^DIC(FILENUM,"","BXU",OLDNAME)
"RTN","PXRMUTIL",286,0)
 I DA=0 Q
"RTN","PXRMUTIL",287,0)
 S PXRMINST=1
"RTN","PXRMUTIL",288,0)
 S NIEN=$$FIND1^DIC(FILENUM,"","BXU",NEWNAME) I NIEN>0 Q
"RTN","PXRMUTIL",289,0)
 S DIE=FILENUM
"RTN","PXRMUTIL",290,0)
 S DR=".01///^S X=NEWNAME"
"RTN","PXRMUTIL",291,0)
 D ^DIE
"RTN","PXRMUTIL",292,0)
 Q
"RTN","PXRMUTIL",293,0)
 ;
"RTN","PXRMUTIL",294,0)
 ;=================================
"RTN","PXRMUTIL",295,0)
RMEHIST(FILENUM,IEN) ;Remove the edit history for a reminder file.
"RTN","PXRMUTIL",296,0)
 I (FILENUM<800)!(FILENUM>811.9)!(FILENUM=811.8) Q
"RTN","PXRMUTIL",297,0)
 N DA,DIK,GLOBAL,ROOT
"RTN","PXRMUTIL",298,0)
 S GLOBAL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXRMUTIL",299,0)
 ;Edit History is stored in node 110 for all files.
"RTN","PXRMUTIL",300,0)
 S DA(1)=IEN
"RTN","PXRMUTIL",301,0)
 S DIK=GLOBAL_IEN_",110,"
"RTN","PXRMUTIL",302,0)
 S ROOT=GLOBAL_IEN_",110,DA)"
"RTN","PXRMUTIL",303,0)
 S DA=0
"RTN","PXRMUTIL",304,0)
 F  S DA=+$O(@ROOT) Q:DA=0  D ^DIK
"RTN","PXRMUTIL",305,0)
 Q
"RTN","PXRMUTIL",306,0)
 ;
"RTN","PXRMUTIL",307,0)
 ;=================================
"RTN","PXRMUTIL",308,0)
SEHIST(FILENUM,ROOT,IEN) ;Set the edit date and edit by and prompt the
"RTN","PXRMUTIL",309,0)
 ;user for the edit comment.
"RTN","PXRMUTIL",310,0)
 N DIC,DIR,DWLW,DWPK,ENTRY,FDA,FDAIEN,IENS,IND,MSG,SFN,TARGET,X,Y
"RTN","PXRMUTIL",311,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",312,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMUTIL",313,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMUTIL",314,0)
 I SFN=0 Q
"RTN","PXRMUTIL",315,0)
 S ENTRY=ROOT_IEN_",110)"
"RTN","PXRMUTIL",316,0)
 S IND=$O(@ENTRY@("B"),-1)
"RTN","PXRMUTIL",317,0)
 S IND=IND+1
"RTN","PXRMUTIL",318,0)
 S IENS="+"_IND_","_IEN_","
"RTN","PXRMUTIL",319,0)
 S FDAIEN(IEN)=IEN
"RTN","PXRMUTIL",320,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMUTIL",321,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMUTIL",322,0)
 ;Prompt the user for edit comments.
"RTN","PXRMUTIL",323,0)
 S DIC="^TMP(""PXRMWP"",$J,"
"RTN","PXRMUTIL",324,0)
 S DWLW=72
"RTN","PXRMUTIL",325,0)
 S DWPK=1
"RTN","PXRMUTIL",326,0)
 W !,"Input your edit comments."
"RTN","PXRMUTIL",327,0)
 S DIR(0)="Y"_U_"AO"
"RTN","PXRMUTIL",328,0)
 S DIR("A")="Edit"
"RTN","PXRMUTIL",329,0)
 S DIR("B")="NO"
"RTN","PXRMUTIL",330,0)
 D ^DIR
"RTN","PXRMUTIL",331,0)
 I Y D
"RTN","PXRMUTIL",332,0)
 . D EN^DIWE
"RTN","PXRMUTIL",333,0)
 . K ^TMP("PXRMWP",$J,0)
"RTN","PXRMUTIL",334,0)
 . I $D(^TMP("PXRMWP",$J)) S FDA(SFN,IENS,2)="^TMP(""PXRMWP"",$J)"
"RTN","PXRMUTIL",335,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMUTIL",336,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMUTIL",337,0)
 K ^TMP("PXRMWP",$J)
"RTN","PXRMUTIL",338,0)
 Q
"RTN","PXRMUTIL",339,0)
 ;
"RTN","PXRMUTIL",340,0)
 ;=================================
"RTN","PXRMUTIL",341,0)
SETPVER(VERSION) ;Set the package version
"RTN","PXRMUTIL",342,0)
 N DA,DIE,DR
"RTN","PXRMUTIL",343,0)
 S DIE="^PXRM(800,",DA=1,DR="5////"_VERSION
"RTN","PXRMUTIL",344,0)
 D ^DIE
"RTN","PXRMUTIL",345,0)
 Q
"RTN","PXRMUTIL",346,0)
 ;
"RTN","PXRMUTIL",347,0)
 ;=================================
"RTN","PXRMUTIL",348,0)
SFRES(SDIR,NRES,FIEVAL) ;Save the finding result.
"RTN","PXRMUTIL",349,0)
 I NRES=0 S FIEVAL=0 Q
"RTN","PXRMUTIL",350,0)
 N DATE,IND,OA,SUB,TF
"RTN","PXRMUTIL",351,0)
 F IND=1:1:NRES S OA(FIEVAL(IND,"DATE"),FIEVAL(IND),IND)=""
"RTN","PXRMUTIL",352,0)
 ;If SDIR is positive get the oldest date otherwise get the most
"RTN","PXRMUTIL",353,0)
 ;recent date.
"RTN","PXRMUTIL",354,0)
 S DATE=$S(SDIR>0:$O(OA("")),1:$O(OA(""),-1))
"RTN","PXRMUTIL",355,0)
 ;If there is a true finding on DATE get it.
"RTN","PXRMUTIL",356,0)
 S TF=$O(OA(DATE,""),-1)
"RTN","PXRMUTIL",357,0)
 S IND=$O(OA(DATE,TF,""))
"RTN","PXRMUTIL",358,0)
 S FIEVAL=TF
"RTN","PXRMUTIL",359,0)
 S SUB=""
"RTN","PXRMUTIL",360,0)
 F  S SUB=$O(FIEVAL(IND,SUB)) Q:SUB=""  M FIEVAL(SUB)=FIEVAL(IND,SUB)
"RTN","PXRMUTIL",361,0)
 Q
"RTN","PXRMUTIL",362,0)
 ;
"RTN","PXRMUTIL",363,0)
 ;=================================
"RTN","PXRMUTIL",364,0)
SSPAR(FIND0,NOCC,BDT,EDT) ;Set the finding search parameters.
"RTN","PXRMUTIL",365,0)
 S BDT=$P(FIND0,U,8),EDT=$P(FIND0,U,11),NOCC=$P(FIND0,U,14)
"RTN","PXRMUTIL",366,0)
 I +NOCC=0 S NOCC=1
"RTN","PXRMUTIL",367,0)
 ;Convert the dates to FileMan dates.
"RTN","PXRMUTIL",368,0)
 S BDT=$S(BDT="":0,BDT=0:0,1:$$CTFMD^PXRMDATE(BDT))
"RTN","PXRMUTIL",369,0)
 I EDT="" S EDT="T"
"RTN","PXRMUTIL",370,0)
 S EDT=$$CTFMD^PXRMDATE(EDT)
"RTN","PXRMUTIL",371,0)
 ;If EDT does not contain a time set it to the end of the day.
"RTN","PXRMUTIL",372,0)
 I (EDT'=-1),EDT'["." S EDT=EDT_".235959"
"RTN","PXRMUTIL",373,0)
 I $G(PXRMDDOC)'=1 Q
"RTN","PXRMUTIL",374,0)
 S ^TMP("PXRMDDOC",$J,$P(FIND0,U,1,11))=BDT_U_EDT
"RTN","PXRMUTIL",375,0)
 Q
"RTN","PXRMUTIL",376,0)
 ;
"RTN","PXRMUTIL",377,0)
 ;=================================
"RTN","PXRMUTIL",378,0)
STRREP(STRING,TS,RS) ;Replace every occurrence of the target string (TS)
"RTN","PXRMUTIL",379,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",380,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",381,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",382,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",383,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",384,0)
 ;
"RTN","PXRMUTIL",385,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",386,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",387,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",388,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",389,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",390,0)
 S STR=""
"RTN","PXRMUTIL",391,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",392,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",393,0)
 Q STR
"RTN","PXRMUTIL",394,0)
 ;
"RTN","PXRMUTIL",395,0)
 ;=================================
"RTN","PXRMUTIL",396,0)
UPEHIST(FILENUM,IEN,TEXT,MSG) ;Update the edit history.
"RTN","PXRMUTIL",397,0)
 N FDA,GBL,IENS,IND,LN,NEXT,SUBFN,TARGET,WPTMP
"RTN","PXRMUTIL",398,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMUTIL",399,0)
 S SUBFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMUTIL",400,0)
 I SUBFN=0 Q
"RTN","PXRMUTIL",401,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")_IEN_",110)"
"RTN","PXRMUTIL",402,0)
 S NEXT=$O(@GBL@("B"),-1)+1
"RTN","PXRMUTIL",403,0)
 S (IND,LN)=0
"RTN","PXRMUTIL",404,0)
 F  S IND=$O(TEXT(IND)) Q:IND=""  D
"RTN","PXRMUTIL",405,0)
 . S LN=LN+1
"RTN","PXRMUTIL",406,0)
 . S WPTMP(1,2,LN)=TEXT(IND)
"RTN","PXRMUTIL",407,0)
 S IENS="+"_NEXT_","_IEN_","
"RTN","PXRMUTIL",408,0)
 S FDA(SUBFN,IENS,.01)=$$NOW^XLFDT
"RTN","PXRMUTIL",409,0)
 S FDA(SUBFN,IENS,1)=$G(DUZ)
"RTN","PXRMUTIL",410,0)
 S FDA(SUBFN,IENS,2)="WPTMP(1,2)"
"RTN","PXRMUTIL",411,0)
 D UPDATE^DIE("","FDA","","MSG")
"RTN","PXRMUTIL",412,0)
 Q
"RTN","PXRMUTIL",413,0)
 ;
"RTN","PXRMUTIL",414,0)
 ;=================================
"RTN","PXRMUTIL",415,0)
VEDIT(ROOT,IEN) ;This is used as a DIC("S") screen to select which entries
"RTN","PXRMUTIL",416,0)
 ;a user can edit.
"RTN","PXRMUTIL",417,0)
 N CLASS,ENTRY,VALID
"RTN","PXRMUTIL",418,0)
 S ENTRY=ROOT_IEN_")"
"RTN","PXRMUTIL",419,0)
 S CLASS=$P($G(@ENTRY@(100)),U,1)
"RTN","PXRMUTIL",420,0)
 I CLASS="N" D
"RTN","PXRMUTIL",421,0)
 . I ($G(PXRMINST)=1),(DUZ(0)="@") S VALID=1
"RTN","PXRMUTIL",422,0)
 . E  S VALID=0
"RTN","PXRMUTIL",423,0)
 E  S VALID=1
"RTN","PXRMUTIL",424,0)
 Q VALID
"RTN","PXRMUTIL",425,0)
 ;
"RTN","PXRMVCPT")
0^21^B51805382
"RTN","PXRMVCPT",1,0)
PXRMVCPT ; SLC/PKR - Code to handle VCPT data. ;05/05/2014
"RTN","PXRMVCPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMVCPT",3,0)
 ;
"RTN","PXRMVCPT",4,0)
 ;===============================================
"RTN","PXRMVCPT",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,FLIST) ;Find data for a patient.
"RTN","PXRMVCPT",6,0)
 N CODESYS,CSYST,DATE,DS,EDTT,IND,NFOUND,NNODES,TLIST
"RTN","PXRMVCPT",7,0)
 S NNODES=TAXARR("APDS",9000010.18,"NNODES")
"RTN","PXRMVCPT",8,0)
 I NNODES=0 Q
"RTN","PXRMVCPT",9,0)
 I $G(^PXRMINDX(9000010.18,"DATE BUILT"))="" D  Q
"RTN","PXRMVCPT",10,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.18)
"RTN","PXRMVCPT",11,0)
 I '$D(^PXRMINDX(9000010.18,"PPI",DFN)) Q
"RTN","PXRMVCPT",12,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVCPT",13,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMVCPT",14,0)
 S CODESYS=""
"RTN","PXRMVCPT",15,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMVCPT",16,0)
 . S CSYST=$S(CODESYS="CPC":"P81",CODESYS="CPT":"P81",1:"NP81")
"RTN","PXRMVCPT",17,0)
 . I (CSYST="P81"),$D(^PXRMINDX(9000010.18,"PPI",DFN)) D FPDP81(DFN,CODESYS,.TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,.TLIST)
"RTN","PXRMVCPT",18,0)
 . I (CSYST="NP81"),$D(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN)) D FPDCSYS(DFN,CODESYS,.TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,.TLIST)
"RTN","PXRMVCPT",19,0)
 ;Return up to NGET of the most recent entries.
"RTN","PXRMVCPT",20,0)
 S DATE="",NFOUND=0
"RTN","PXRMVCPT",21,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMVCPT",22,0)
 . S IND=0
"RTN","PXRMVCPT",23,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMVCPT",24,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMVCPT",25,0)
 .. S FLIST(DATE,NFOUND,9000010.18)=TLIST(DATE,IND)
"RTN","PXRMVCPT",26,0)
 Q
"RTN","PXRMVCPT",27,0)
 ;
"RTN","PXRMVCPT",28,0)
 ;===============================================
"RTN","PXRMVCPT",29,0)
FPDP81(DFN,CODESYS,TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,TLIST) ;Find data for a
"RTN","PXRMVCPT",30,0)
 ;patient for pointers to file 81.
"RTN","PXRMVCPT",31,0)
 N CODE,CODEP,DAS,DATE,NFOUND,NODE,TDATE,TIND
"RTN","PXRMVCPT",32,0)
 S NFOUND=0
"RTN","PXRMVCPT",33,0)
 F IND=1:1:NNODES D
"RTN","PXRMVCPT",34,0)
 . S NODE=TAXARR("APDS",9000010.18,IND)
"RTN","PXRMVCPT",35,0)
 . I '$D(^PXRMINDX(9000010.18,"PPI",DFN,NODE)) Q
"RTN","PXRMVCPT",36,0)
 . S CODE=""
"RTN","PXRMVCPT",37,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMVCPT",38,0)
 .. S CODEP=TAXARR("AE",CODESYS,CODE)
"RTN","PXRMVCPT",39,0)
 .. I '$D(^PXRMINDX(9000010.18,"PPI",DFN,NODE,CODEP)) Q
"RTN","PXRMVCPT",40,0)
 .. S DATE=DS
"RTN","PXRMVCPT",41,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.18,"PPI",DFN,NODE,CODEP,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVCPT",42,0)
 ... S DAS=$O(^PXRMINDX(9000010.18,"PPI",DFN,NODE,CODEP,DATE,""))
"RTN","PXRMVCPT",43,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVCPT",44,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_DATE_U_CODESYS_U_CODE_U_NODE
"RTN","PXRMVCPT",45,0)
 ... I NFOUND>NGET D
"RTN","PXRMVCPT",46,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVCPT",47,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVCPT",48,0)
 Q
"RTN","PXRMVCPT",49,0)
 ;
"RTN","PXRMVCPT",50,0)
 ;===============================================
"RTN","PXRMVCPT",51,0)
FPDCSYS(DFN,CODESYS,TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,TLIST) ;Find data for
"RTN","PXRMVCPT",52,0)
 ;a patient for coding systems not stored as a pointer.
"RTN","PXRMVCPT",53,0)
 N CODE,DAS,DATE,NFOUND,NODE,TDATE,TIND
"RTN","PXRMVCPT",54,0)
 ;Get the start and end of the taxonomy.
"RTN","PXRMVCPT",55,0)
 I '$D(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN)) Q
"RTN","PXRMVCPT",56,0)
 S NFOUND=0
"RTN","PXRMVCPT",57,0)
 F IND=1:1:NNODES D
"RTN","PXRMVCPT",58,0)
 . S NODE=TAXARR("APDS",9000010.18,IND)
"RTN","PXRMVCPT",59,0)
 . I '$D(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN,NODE)) Q
"RTN","PXRMVCPT",60,0)
 . S CODE=""
"RTN","PXRMVCPT",61,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMVCPT",62,0)
 .. I '$D(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN,NODE,CODE)) Q
"RTN","PXRMVCPT",63,0)
 .. S DATE=DS
"RTN","PXRMVCPT",64,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN,NODE,CODE,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVCPT",65,0)
 ... S DAS=$O(^PXRMINDX(9000010.18,CODESYS,"PPI",DFN,NODE,CODE,DATE,""))
"RTN","PXRMVCPT",66,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVCPT",67,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_DATE_U_CODESYS_U_CODE_U_NODE
"RTN","PXRMVCPT",68,0)
 ... I NFOUND>NGET D
"RTN","PXRMVCPT",69,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVCPT",70,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVCPT",71,0)
 Q
"RTN","PXRMVCPT",72,0)
 ;
"RTN","PXRMVCPT",73,0)
 ;===============================================
"RTN","PXRMVCPT",74,0)
GETDATA(DAS,FIEVT) ;Return data for a specified V CPT entry.
"RTN","PXRMVCPT",75,0)
 ;DBIA #4250.
"RTN","PXRMVCPT",76,0)
 D VCPT^PXPXRM(DAS,.FIEVT)
"RTN","PXRMVCPT",77,0)
 Q
"RTN","PXRMVCPT",78,0)
 ;
"RTN","PXRMVCPT",79,0)
 ;===============================================
"RTN","PXRMVCPT",80,0)
GPLIST(TAXARR,NOCC,BDT,EDT,PLIST) ;Build patient list for V CPT entries.
"RTN","PXRMVCPT",81,0)
 N CODE,CODEP,CODESYS,DAS,DATE,DFN,DS,NFOUND,NODE,NNODES,TEMP,TLIST
"RTN","PXRMVCPT",82,0)
 S NNODES=TAXARR("APDS",9000010.18,"NNODES")
"RTN","PXRMVCPT",83,0)
 I NNODES=0 Q
"RTN","PXRMVCPT",84,0)
 I $G(^PXRMINDX(9000010.18,"DATE BUILT"))="" D  Q
"RTN","PXRMVCPT",85,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.18)
"RTN","PXRMVCPT",86,0)
 S TLIST="GPLIST_PXRMVPOV"
"RTN","PXRMVCPT",87,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVCPT",88,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVCPT",89,0)
 S CODESYS=""
"RTN","PXRMVCPT",90,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMVCPT",91,0)
 . S CODE=""
"RTN","PXRMVCPT",92,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:(CODE="")  D
"RTN","PXRMVCPT",93,0)
 .. I (CODESYS="CPT") D
"RTN","PXRMVCPT",94,0)
 ... S CODEP=TAXARR("AE","CPT",CODE)
"RTN","PXRMVCPT",95,0)
 ... I $D(^PXRMINDX(9000010.18,"IPP",CODEP)) D GPLCPT4(CODE,CODEP,.TAXARR,NNODES,BDT,DS,TLIST)
"RTN","PXRMVCPT",96,0)
 .. I (CODESYS'="CPT"),$D(^PXRMINDX(9000010.18,CODESYS,"IPP",CODE)) D GPLCSYS(CODESYS,CODE,.TAXARR,NNODES,BDT,DS,TLIST)
"RTN","PXRMVCPT",97,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMVCPT",98,0)
 S DFN=0
"RTN","PXRMVCPT",99,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMVCPT",100,0)
 . S DATE="",NFOUND=0
"RTN","PXRMVCPT",101,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMVCPT",102,0)
 .. S DAS=""
"RTN","PXRMVCPT",103,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMVCPT",104,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVCPT",105,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMVCPT",106,0)
 ... S ^TMP($J,PLIST,1,DFN,DATE,9000010.18)=DAS_U_DATE_U_TEMP
"RTN","PXRMVCPT",107,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVCPT",108,0)
 Q
"RTN","PXRMVCPT",109,0)
 ;
"RTN","PXRMVCPT",110,0)
 ;===============================================
"RTN","PXRMVCPT",111,0)
GPLCPT4(CODE,CODEP,TAXARR,NNODES,BDT,DS,TLIST) ;Build patient list for V CPT for
"RTN","PXRMVCPT",112,0)
 ;CPT-4.
"RTN","PXRMVCPT",113,0)
 N DAS,DATE,DFN,IND,NODE,TEMP
"RTN","PXRMVCPT",114,0)
 F IND=1:1:NNODES D
"RTN","PXRMVCPT",115,0)
 . S NODE=TAXARR("APDS",9000010.18,IND)
"RTN","PXRMVCPT",116,0)
 . I '$D(^PXRMINDX(9000010.18,"IPP",CODEP,NODE)) Q
"RTN","PXRMVCPT",117,0)
 . S DFN=0
"RTN","PXRMVCPT",118,0)
 . F  S DFN=$O(^PXRMINDX(9000010.18,"IPP",CODEP,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVCPT",119,0)
 .. S DATE=DS
"RTN","PXRMVCPT",120,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.18,"IPP",CODEP,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVCPT",121,0)
 ... S DAS=$O(^PXRMINDX(9000010.18,"IPP",CODEP,NODE,DFN,DATE,""))
"RTN","PXRMVCPT",122,0)
 ... S ^TMP($J,TLIST,DFN,DATE,DAS)="CPT"_U_CODE_U_NODE
"RTN","PXRMVCPT",123,0)
 Q
"RTN","PXRMVCPT",124,0)
 ;
"RTN","PXRMVCPT",125,0)
 ;===============================================
"RTN","PXRMVCPT",126,0)
GPLCSYS(CODESYS,CODE,TAXARR,NNODES,BDT,DS,TLIST) ;Build patient list for V CPT
"RTN","PXRMVCPT",127,0)
 ;for coding systems other than CPT-4.
"RTN","PXRMVCPT",128,0)
 N DAS,DATE,DFN,IND,NODE,TEMP
"RTN","PXRMVCPT",129,0)
 F IND=1:1:NNODES D
"RTN","PXRMVCPT",130,0)
 . S NODE=TAXARR("APDS",9000010.18,IND)
"RTN","PXRMVCPT",131,0)
 . I '$D(^PXRMINDX(9000010.18,CODESYS,"IPP",CODE,NODE)) Q
"RTN","PXRMVCPT",132,0)
 . S DFN=0
"RTN","PXRMVCPT",133,0)
 . F  S DFN=$O(^PXRMINDX(9000010.18,CODESYS,"IPP",CODE,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVCPT",134,0)
 .. S DATE=DS
"RTN","PXRMVCPT",135,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.18,CODESYS,"IPP",CODE,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVCPT",136,0)
 ... S DAS=$O(^PXRMINDX(9000010.18,CODESYS,"IPP",CODE,NODE,DFN,DATE,""))
"RTN","PXRMVCPT",137,0)
 ... S ^TMP($J,TLIST,DFN,DATE,DAS)=CODESYS_U_CODE_U_NODE
"RTN","PXRMVCPT",138,0)
 Q
"RTN","PXRMVCPT",139,0)
 ;
"RTN","PXRMVCPT",140,0)
 ;===============================================
"RTN","PXRMVCPT",141,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMVCPT",142,0)
 N CDATA,CODE,IND,JND,NAME,NIN,NOUT
"RTN","PXRMVCPT",143,0)
 N PN,PP,RESULT,TEMP,TEXTOUT,VDATE
"RTN","PXRMVCPT",144,0)
 S NAME="Encounter Procedure = "
"RTN","PXRMVCPT",145,0)
 S IND=0
"RTN","PXRMVCPT",146,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVCPT",147,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVCPT",148,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMVCPT",149,0)
 . K CDATA
"RTN","PXRMVCPT",150,0)
 .;DBIA #5679
"RTN","PXRMVCPT",151,0)
 . S RESULT=$$CSDATA^LEXU(CODE,"CPT",VDATE,.CDATA)
"RTN","PXRMVCPT",152,0)
 . S TEMP=NAME_$P(CDATA("LEX",1),U,2)_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMVCPT",153,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",154,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",155,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVCPT",156,0)
 Q
"RTN","PXRMVCPT",157,0)
 ;
"RTN","PXRMVCPT",158,0)
 ;===============================================
"RTN","PXRMVCPT",159,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMVCPT",160,0)
 ;maintenance output.
"RTN","PXRMVCPT",161,0)
 N CDATA,CODE,CODESYS,CODESYSN,D0,IND,JND,NIN,NOUT
"RTN","PXRMVCPT",162,0)
 N PN,PP,RESULT,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVCPT",163,0)
 S NLINES=NLINES+1
"RTN","PXRMVCPT",164,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Encounter Procedure:"
"RTN","PXRMVCPT",165,0)
 ;DBIA #5679
"RTN","PXRMVCPT",166,0)
 S CODESYSN=$P($$CSYS^LEXU("CPT"),U,4)
"RTN","PXRMVCPT",167,0)
 S IND=0
"RTN","PXRMVCPT",168,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVCPT",169,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVCPT",170,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMVCPT",171,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMVCPT",172,0)
 . K CDATA
"RTN","PXRMVCPT",173,0)
 .;DBIA #5679
"RTN","PXRMVCPT",174,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,VDATE,.CDATA)
"RTN","PXRMVCPT",175,0)
 . S D0=$G(^AUPNVCPT(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVCPT",176,0)
 . S PN=$P(D0,U,4)
"RTN","PXRMVCPT",177,0)
 . I PN="" S PN="MISSING"
"RTN","PXRMVCPT",178,0)
 . E  S PN=$P($G(^AUTNPOV(PN,0)),U,1)
"RTN","PXRMVCPT",179,0)
 . S PP=$P(IFIEVAL(IND,"FILE SPECIFIC"),U,1)
"RTN","PXRMVCPT",180,0)
 . S PP=$S(PP="Y":"YES",1:"NO")
"RTN","PXRMVCPT",181,0)
 . S TEXTIN(1)=$$EDATE^PXRMDATE(VDATE)_"  "_CODE_" ("_CODESYSN_")"
"RTN","PXRMVCPT",182,0)
 . S TEXTIN(2)=$P(CDATA("LEX",1),U,2)_"\\"
"RTN","PXRMVCPT",183,0)
 . S TEXTIN(3)=" Principle Procedure: "_PP_"\\"
"RTN","PXRMVCPT",184,0)
 . S TEXTIN(4)=" Prov. Narr. - "_PN
"RTN","PXRMVCPT",185,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,4,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",186,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",187,0)
 . I IFIEVAL(IND,"COMMENTS")'="" D
"RTN","PXRMVCPT",188,0)
 .. S TEMP="Comments: "_IFIEVAL(IND,"COMMENTS")
"RTN","PXRMVCPT",189,0)
 .. D FORMATS^PXRMTEXT(INDENT+3,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVCPT",190,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVCPT",191,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVCPT",192,0)
 Q
"RTN","PXRMVCPT",193,0)
 ;
"RTN","PXRMVPOV")
0^22^B51874901
"RTN","PXRMVPOV",1,0)
PXRMVPOV ; SLC/PKR - Code to handle V POV ;10/11/2012
"RTN","PXRMVPOV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMVPOV",3,0)
 ;
"RTN","PXRMVPOV",4,0)
 ;====================================================
"RTN","PXRMVPOV",5,0)
FPDAT(DFN,TAXARR,NGET,SDIR,BDT,EDT,FLIST) ;Find data for a patient.
"RTN","PXRMVPOV",6,0)
 N CODESYS,DATE,DS,EDTT,IND,NFOUND,NNODES,TLIST
"RTN","PXRMVPOV",7,0)
 S NNODES=TAXARR("APDS",9000010.07,"NNODES")
"RTN","PXRMVPOV",8,0)
 I NNODES=0 Q
"RTN","PXRMVPOV",9,0)
 I $G(^PXRMINDX(9000010.07,"DATE BUILT"))="" D  Q
"RTN","PXRMVPOV",10,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.07)
"RTN","PXRMVPOV",11,0)
 S EDTT=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVPOV",12,0)
 S DS=$S(SDIR=+1:BDT-.000001,1:EDTT)
"RTN","PXRMVPOV",13,0)
 S CODESYS=""
"RTN","PXRMVPOV",14,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMVPOV",15,0)
 . I (CODESYS="ICD"),$D(^PXRMINDX(9000010.07,"PPI",DFN)) D FPDICD9(DFN,.TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,.TLIST)
"RTN","PXRMVPOV",16,0)
 . I (CODESYS'="ICD"),$D(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN)) D FPDCSYS(DFN,CODESYS,.TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,.TLIST)
"RTN","PXRMVPOV",17,0)
 ;Return up to NGET entries.
"RTN","PXRMVPOV",18,0)
 S DATE="",NFOUND=0
"RTN","PXRMVPOV",19,0)
 F  S DATE=$O(TLIST(DATE),SDIR) Q:(DATE="")!(NFOUND=NGET)  D
"RTN","PXRMVPOV",20,0)
 . S IND=0
"RTN","PXRMVPOV",21,0)
 . F  S IND=$O(TLIST(DATE,IND)) Q:(IND="")!(NFOUND=NGET)  D
"RTN","PXRMVPOV",22,0)
 .. S NFOUND=NFOUND+1
"RTN","PXRMVPOV",23,0)
 .. S FLIST(DATE,NFOUND,9000010.07)=TLIST(DATE,IND)
"RTN","PXRMVPOV",24,0)
 Q
"RTN","PXRMVPOV",25,0)
 ;
"RTN","PXRMVPOV",26,0)
 ;====================================================
"RTN","PXRMVPOV",27,0)
FPDCSYS(DFN,CODESYS,TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,TLIST) ;Find data for
"RTN","PXRMVPOV",28,0)
 ;a patient in coding systems other than ICD-9.
"RTN","PXRMVPOV",29,0)
 N CODE,DAS,DATE,IND,NFOUND,NODE,TDATE,TIND
"RTN","PXRMVPOV",30,0)
 I '$D(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN)) Q
"RTN","PXRMVPOV",31,0)
 S NFOUND=0
"RTN","PXRMVPOV",32,0)
 F IND=1:1:NNODES D
"RTN","PXRMVPOV",33,0)
 . S NODE=TAXARR("APDS",9000010.07,IND)
"RTN","PXRMVPOV",34,0)
 . I '$D(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN,NODE)) Q
"RTN","PXRMVPOV",35,0)
 . S CODE=""
"RTN","PXRMVPOV",36,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMVPOV",37,0)
 .. I '$D(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN,NODE,CODE)) Q
"RTN","PXRMVPOV",38,0)
 .. S DATE=DS
"RTN","PXRMVPOV",39,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN,NODE,CODE,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVPOV",40,0)
 ... S DAS=$O(^PXRMINDX(9000010.07,CODESYS,"PPI",DFN,NODE,CODE,DATE,""))
"RTN","PXRMVPOV",41,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVPOV",42,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_DATE_U_CODESYS_U_CODE_U_NODE
"RTN","PXRMVPOV",43,0)
 ... I NFOUND>NGET D
"RTN","PXRMVPOV",44,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVPOV",45,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVPOV",46,0)
 Q
"RTN","PXRMVPOV",47,0)
 ;
"RTN","PXRMVPOV",48,0)
 ;====================================================
"RTN","PXRMVPOV",49,0)
FPDICD9(DFN,TAXARR,NNODES,NGET,BDT,EDTT,DS,SDIR,TLIST) ;Find ICD-9 data for a
"RTN","PXRMVPOV",50,0)
 ;patient.
"RTN","PXRMVPOV",51,0)
 N CODE,CODEP,DAS,DATE,IND,NFOUND,NODE,TDATE,TIND
"RTN","PXRMVPOV",52,0)
 I '$D(^PXRMINDX(9000010.07,"PPI",DFN)) Q
"RTN","PXRMVPOV",53,0)
 S NFOUND=0
"RTN","PXRMVPOV",54,0)
 F IND=1:1:NNODES D
"RTN","PXRMVPOV",55,0)
 . S NODE=TAXARR("APDS",9000010.07,IND)
"RTN","PXRMVPOV",56,0)
 . I '$D(^PXRMINDX(9000010.07,"PPI",DFN,NODE)) Q
"RTN","PXRMVPOV",57,0)
 . S CODE=""
"RTN","PXRMVPOV",58,0)
 . F  S CODE=$O(TAXARR("AE","ICD",CODE)) Q:CODE=""  D
"RTN","PXRMVPOV",59,0)
 .. S CODEP=TAXARR("AE","ICD",CODE)
"RTN","PXRMVPOV",60,0)
 .. I '$D(^PXRMINDX(9000010.07,"PPI",DFN,NODE,CODEP)) Q
"RTN","PXRMVPOV",61,0)
 .. S DATE=DS
"RTN","PXRMVPOV",62,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.07,"PPI",DFN,NODE,CODEP,DATE),SDIR) Q:$S(DATE=0:1,DATE<BDT:1,DATE>EDTT:1,1:0)  D
"RTN","PXRMVPOV",63,0)
 ... S DAS=$O(^PXRMINDX(9000010.07,"PPI",DFN,NODE,CODEP,DATE,""))
"RTN","PXRMVPOV",64,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVPOV",65,0)
 ... S TLIST(DATE,NFOUND)=DAS_U_DATE_U_"ICD"_U_CODE_U_NODE
"RTN","PXRMVPOV",66,0)
 ... I NFOUND>NGET D
"RTN","PXRMVPOV",67,0)
 .... S TDATE=$O(TLIST(""),-SDIR),TIND=$O(TLIST(TDATE,""))
"RTN","PXRMVPOV",68,0)
 .... K TLIST(TDATE,TIND)
"RTN","PXRMVPOV",69,0)
 Q
"RTN","PXRMVPOV",70,0)
 ;
"RTN","PXRMVPOV",71,0)
 ;====================================================
"RTN","PXRMVPOV",72,0)
GETDATA(DAS,FIEVT) ;Return data for a specified V POV entry.
"RTN","PXRMVPOV",73,0)
 ;DBIA #4250
"RTN","PXRMVPOV",74,0)
 D VPOV^PXPXRM(DAS,.FIEVT)
"RTN","PXRMVPOV",75,0)
 Q
"RTN","PXRMVPOV",76,0)
 ;
"RTN","PXRMVPOV",77,0)
 ;====================================================
"RTN","PXRMVPOV",78,0)
GPLIST(TAXARR,NOCC,BDT,EDT,PLIST) ;Build patient list for V POV entries.
"RTN","PXRMVPOV",79,0)
 N CODE,CODEP,CODESYS,DAS,DATE,DFN,DS,IND,NFOUND,NODE,NNODES,TEMP,TLIST
"RTN","PXRMVPOV",80,0)
 S NNODES=TAXARR("APDS",9000010.07,"NNODES")
"RTN","PXRMVPOV",81,0)
 I NNODES=0 Q
"RTN","PXRMVPOV",82,0)
 I $G(^PXRMINDX(9000010.07,"DATE BUILT"))="" D  Q
"RTN","PXRMVPOV",83,0)
 . D NOINDEX^PXRMERRH("TX",TAXARR("IEN"),9000010.07)
"RTN","PXRMVPOV",84,0)
 S TLIST="GPLIST_PXRMVPOV"
"RTN","PXRMVPOV",85,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVPOV",86,0)
 S DS=$S(EDT[".":EDT+.0000001,1:EDT+.240001)
"RTN","PXRMVPOV",87,0)
 S CODESYS=""
"RTN","PXRMVPOV",88,0)
 F  S CODESYS=$O(TAXARR("AE",CODESYS)) Q:CODESYS=""  D
"RTN","PXRMVPOV",89,0)
 . S CODE=""
"RTN","PXRMVPOV",90,0)
 . F  S CODE=$O(TAXARR("AE",CODESYS,CODE)) Q:CODE=""  D
"RTN","PXRMVPOV",91,0)
 .. I (CODESYS="ICD") D
"RTN","PXRMVPOV",92,0)
 ... S CODEP=TAXARR("AE","ICD",CODE)
"RTN","PXRMVPOV",93,0)
 ... I $D(^PXRMINDX(9000010.07,"IPP",CODEP)) D GPLICD9(CODE,CODEP,.TAXARR,NNODES,BDT,DS,TLIST)
"RTN","PXRMVPOV",94,0)
 .. I (CODESYS'="ICD"),$D(^PXRMINDX(9000010.07,CODESYS,"IPP",CODE)) D GPLCSYS(CODESYS,CODE,.TAXARR,NNODES,BDT,DS,TLIST)
"RTN","PXRMVPOV",95,0)
 ;Return up to NOCC of the most recent entries for each patient.
"RTN","PXRMVPOV",96,0)
 S DFN=0
"RTN","PXRMVPOV",97,0)
 F  S DFN=$O(^TMP($J,TLIST,DFN)) Q:DFN=""  D
"RTN","PXRMVPOV",98,0)
 . S DATE="",NFOUND=0
"RTN","PXRMVPOV",99,0)
 . F  S DATE=$O(^TMP($J,TLIST,DFN,DATE),-1) Q:(DATE="")!(NFOUND=NOCC)  D
"RTN","PXRMVPOV",100,0)
 .. S DAS=""
"RTN","PXRMVPOV",101,0)
 .. F  S DAS=$O(^TMP($J,TLIST,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMVPOV",102,0)
 ... S NFOUND=NFOUND+1
"RTN","PXRMVPOV",103,0)
 ... S TEMP=^TMP($J,TLIST,DFN,DATE,DAS)
"RTN","PXRMVPOV",104,0)
 ... S ^TMP($J,PLIST,1,DFN,NFOUND,9000010.07)=DAS_U_DATE_U_TEMP
"RTN","PXRMVPOV",105,0)
 K ^TMP($J,TLIST)
"RTN","PXRMVPOV",106,0)
 Q
"RTN","PXRMVPOV",107,0)
 ;
"RTN","PXRMVPOV",108,0)
 ;====================================================
"RTN","PXRMVPOV",109,0)
GPLCSYS(CODESYS,CODE,TAXARR,NNODES,BDT,DS,TLIST) ;Build a patient list for V POV
"RTN","PXRMVPOV",110,0)
 ;entries for coding systems other than ICD-9.
"RTN","PXRMVPOV",111,0)
 N DAS,DATE,DFN,IND,NODE
"RTN","PXRMVPOV",112,0)
 F IND=1:1:NNODES D
"RTN","PXRMVPOV",113,0)
 . S NODE=TAXARR("APDS",9000010.07,IND)
"RTN","PXRMVPOV",114,0)
 . I '$D(^PXRMINDX(9000010.07,CODESYS,"IPP",CODE,NODE)) Q
"RTN","PXRMVPOV",115,0)
 . S DFN=0
"RTN","PXRMVPOV",116,0)
 . F  S DFN=$O(^PXRMINDX(9000010.07,CODESYS,"IPP",CODE,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVPOV",117,0)
 .. S DATE=DS
"RTN","PXRMVPOV",118,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.07,"IPP",CODE,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVPOV",119,0)
 ... S DAS=$O(^PXRMINDX(9000010.07,"IPP",CODE,NODE,DFN,DATE,""))
"RTN","PXRMVPOV",120,0)
 ... S ^TMP($J,TLIST,DFN,DATE,DAS)=CODESYS_U_CODE_U_NODE
"RTN","PXRMVPOV",121,0)
 Q
"RTN","PXRMVPOV",122,0)
 ;
"RTN","PXRMVPOV",123,0)
 ;====================================================
"RTN","PXRMVPOV",124,0)
GPLICD9(CODE,CODEP,TAXARR,NNODES,BDT,DS,TLIST) ;Build a patient list for
"RTN","PXRMVPOV",125,0)
 ;V POV entries using ICD-9 codes.
"RTN","PXRMVPOV",126,0)
 N DAS,DATE,DFN,IND,NODE
"RTN","PXRMVPOV",127,0)
 F IND=1:1:NNODES D
"RTN","PXRMVPOV",128,0)
 . S NODE=TAXARR("APDS",9000010.07,IND)
"RTN","PXRMVPOV",129,0)
 . I '$D(^PXRMINDX(9000010.07,"IPP",CODEP,NODE)) Q
"RTN","PXRMVPOV",130,0)
 . S DFN=0
"RTN","PXRMVPOV",131,0)
 . F  S DFN=$O(^PXRMINDX(9000010.07,"IPP",CODEP,NODE,DFN)) Q:DFN=""  D
"RTN","PXRMVPOV",132,0)
 .. S DATE=DS
"RTN","PXRMVPOV",133,0)
 .. F  S DATE=+$O(^PXRMINDX(9000010.07,"IPP",CODEP,NODE,DFN,DATE),-1) Q:(DATE=0)!(DATE<BDT)  D
"RTN","PXRMVPOV",134,0)
 ... S DAS=$O(^PXRMINDX(9000010.07,"IPP",CODEP,NODE,DFN,DATE,""))
"RTN","PXRMVPOV",135,0)
 ... S ^TMP($J,TLIST,DFN,DATE,DAS)="ICD"_U_CODE_U_NODE
"RTN","PXRMVPOV",136,0)
 Q
"RTN","PXRMVPOV",137,0)
 ;
"RTN","PXRMVPOV",138,0)
 ;====================================================
"RTN","PXRMVPOV",139,0)
MHVOUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the MHV output.
"RTN","PXRMVPOV",140,0)
 N CDATA,CODE,CODESYS,EM,IND,JND,NAME,NIN,NOUT
"RTN","PXRMVPOV",141,0)
 N PN,RESULT,TEMP,TEXTOUT,VDATE
"RTN","PXRMVPOV",142,0)
 S NAME="Encounter Diagnosis = "
"RTN","PXRMVPOV",143,0)
 S IND=0
"RTN","PXRMVPOV",144,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVPOV",145,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVPOV",146,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMVPOV",147,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMVPOV",148,0)
 . K CDATA
"RTN","PXRMVPOV",149,0)
 . ;DBIA #5679
"RTN","PXRMVPOV",150,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,VDATE,.CDATA)
"RTN","PXRMVPOV",151,0)
 . S TEMP=NAME_$P(CDATA("LEX",1),U,2)_" ("_$$EDATE^PXRMDATE(VDATE)_")"
"RTN","PXRMVPOV",152,0)
 . D FORMATS^PXRMTEXT(INDENT+2,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",153,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",154,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVPOV",155,0)
 Q
"RTN","PXRMVPOV",156,0)
 ;
"RTN","PXRMVPOV",157,0)
 ;====================================================
"RTN","PXRMVPOV",158,0)
OUTPUT(INDENT,OCCLIST,IFIEVAL,NLINES,TEXT) ;Produce the clinical
"RTN","PXRMVPOV",159,0)
 ;maintenance output.
"RTN","PXRMVPOV",160,0)
 N CDATA,CODE,CODESYS,CODESYSN,D0,EM,IND,JND
"RTN","PXRMVPOV",161,0)
 N NOUT,PN,RANK,RESULT,TEXTIN,TEXTOUT,VDATE
"RTN","PXRMVPOV",162,0)
 S NLINES=NLINES+1
"RTN","PXRMVPOV",163,0)
 S TEXT(NLINES)=$$INSCHR^PXRMEXLC(INDENT," ")_"Encounter Diagnosis:"
"RTN","PXRMVPOV",164,0)
 S IND=0
"RTN","PXRMVPOV",165,0)
 F  S IND=$O(OCCLIST(IND)) Q:IND=""  D
"RTN","PXRMVPOV",166,0)
 . S VDATE=IFIEVAL(IND,"DATE")
"RTN","PXRMVPOV",167,0)
 . S CODE=IFIEVAL(IND,"CODE")
"RTN","PXRMVPOV",168,0)
 . S CODESYS=IFIEVAL(IND,"CODESYS")
"RTN","PXRMVPOV",169,0)
 .;DBIA #5679
"RTN","PXRMVPOV",170,0)
 . I '$D(CODESYSN(CODESYS)) S CODESYSN(CODESYS)=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXRMVPOV",171,0)
 . K CDATA
"RTN","PXRMVPOV",172,0)
 . ;DBIA #5679
"RTN","PXRMVPOV",173,0)
 . S RESULT=$$CSDATA^LEXU(CODE,CODESYS,VDATE,.CDATA)
"RTN","PXRMVPOV",174,0)
 . S D0=$G(^AUPNVPOV(IFIEVAL(IND,"DAS"),0))
"RTN","PXRMVPOV",175,0)
 . S PN=$P(D0,U,4)
"RTN","PXRMVPOV",176,0)
 . I PN="" S PN="MISSING"
"RTN","PXRMVPOV",177,0)
 . E  S PN=$P($G(^AUTNPOV(PN,0)),U,1)
"RTN","PXRMVPOV",178,0)
 . S RANK=IFIEVAL(IND,"PRIMARY/SECONDARY")
"RTN","PXRMVPOV",179,0)
 . S RANK=$$EXTERNAL^DILFD(9000010.07,.12,"",RANK,.EM)
"RTN","PXRMVPOV",180,0)
 . S TEXTIN(1)=$$EDATE^PXRMDATE(VDATE)_"  "_CODE_" ("_CODESYSN(CODESYS)_")"
"RTN","PXRMVPOV",181,0)
 . S TEXTIN(2)=$P(CDATA("LEX",1),U,2)
"RTN","PXRMVPOV",182,0)
 . S TEXTIN(3)=" rank: "_RANK_"\\"
"RTN","PXRMVPOV",183,0)
 . S TEXTIN(4)="Prov. Narr. - "_PN
"RTN","PXRMVPOV",184,0)
 . D FORMAT^PXRMTEXT(INDENT+2,PXRMRM,4,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",185,0)
 . F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",186,0)
 . I IFIEVAL(IND,"COMMENTS")'="" D
"RTN","PXRMVPOV",187,0)
 .. S TEMP="Comments: "_IFIEVAL(IND,"COMMENTS")
"RTN","PXRMVPOV",188,0)
 .. D FORMATS^PXRMTEXT(INDENT+3,PXRMRM,TEMP,.NOUT,.TEXTOUT)
"RTN","PXRMVPOV",189,0)
 .. F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMVPOV",190,0)
 S NLINES=NLINES+1,TEXT(NLINES)=""
"RTN","PXRMVPOV",191,0)
 Q
"RTN","PXRMVPOV",192,0)
 ;
"RTN","PXRMXEVL")
0^68^B1989772
"RTN","PXRMXEVL",1,0)
PXRMXEVL ; SLC/AGP - Reports Reminder Evaluation routine;11/14/2013
"RTN","PXRMXEVL",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMXEVL",3,0)
 ;
"RTN","PXRMXEVL",4,0)
 ; Called by label from PXRMXSE1
"RTN","PXRMXEVL",5,0)
 ;
"RTN","PXRMXEVL",6,0)
 ;Detailed report
"RTN","PXRMXEVL",7,0)
EVAL(SUB,REMINDER) ;
"RTN","PXRMXEVL",8,0)
 N CNT,DFN,DEFARR,FIEV,ITEM,LIT,PXRMDEFS
"RTN","PXRMXEVL",9,0)
 S CNT=0
"RTN","PXRMXEVL",10,0)
 F  S CNT=$O(REMINDER(CNT)) Q:CNT'>0  D
"RTN","PXRMXEVL",11,0)
 . S ITEM=$P(REMINDER(CNT),U,1),LIT=$P(REMINDER(CNT),U,4)
"RTN","PXRMXEVL",12,0)
 . I LIT="" S LIT=$P(REMINDER(CNT),U,2)
"RTN","PXRMXEVL",13,0)
 . I $P($G(^PXD(811.9,ITEM,0)),U,6)=1 Q
"RTN","PXRMXEVL",14,0)
 . D DEF^PXRMLDR(ITEM,.DEFARR)
"RTN","PXRMXEVL",15,0)
 . S DFN=0
"RTN","PXRMXEVL",16,0)
 . F  S DFN=$O(^TMP($J,SUB,DFN)) Q:DFN'>0!(ZTSTOP=1)  D
"RTN","PXRMXEVL",17,0)
 .. D NOTIFY^PXRMXBSY("Evaluating Reminders",.BUSY)
"RTN","PXRMXEVL",18,0)
 ..;PXRMDEFS is the definition stack, used to prevent recursion via
"RTN","PXRMXEVL",19,0)
 ..;CF.VA-REMINDER DEFINITION.
"RTN","PXRMXEVL",20,0)
 .. K FIEV,PXRMDEFS
"RTN","PXRMXEVL",21,0)
 ..;Evaluate the reminder for the patient and save the results.
"RTN","PXRMXEVL",22,0)
 .. D EVAL^PXRM(DFN,.DEFARR,1,1,.FIEV,PXRMSDT)
"RTN","PXRMXEVL",23,0)
 .. S ^TMP($J,SUB,DFN,ITEM)=$G(^TMP("PXRHM",$J,ITEM,LIT))
"RTN","PXRMXEVL",24,0)
 .. K ^TMP("PXRHM",$J)
"RTN","PXRMXEVL",25,0)
 Q
"RTN","PXRMXEVL",26,0)
 ;
"RTN","PXRMXSE1")
0^69^B30616308
"RTN","PXRMXSE1",1,0)
PXRMXSE1 ; SLC/PJH - Build Patient lists for Reminder Due report; 01/28/2013
"RTN","PXRMXSE1",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMXSE1",3,0)
 ;
"RTN","PXRMXSE1",4,0)
 ; Called/jobbed from PXRMXD
"RTN","PXRMXSE1",5,0)
 ;
"RTN","PXRMXSE1",6,0)
 ; Input - PXRMSEL,PXRMXTMP
"RTN","PXRMXSE1",7,0)
 ;         PXRM*
"RTN","PXRMXSE1",8,0)
 ; Output- ^XTMP(PXRMXTMP
"RTN","PXRMXSE1",9,0)
 ;
"RTN","PXRMXSE1",10,0)
 ;
"RTN","PXRMXSE1",11,0)
START ;  
"RTN","PXRMXSE1",12,0)
 N LIT,TOTAL,TODAY,ZTSTOP,BUSY,PXRMDEFS
"RTN","PXRMXSE1",13,0)
 S DBDOWN=0
"RTN","PXRMXSE1",14,0)
 S TOTAL=0,ZTSTOP="",TODAY=$$DT^XLFDT-.0001
"RTN","PXRMXSE1",15,0)
 ;
"RTN","PXRMXSE1",16,0)
 K ^TMP($J,"PXRM PATIENT LIST"),^TMP($J,"PXRM PATIENT EVAL")
"RTN","PXRMXSE1",17,0)
 K ^TMP($J,"PXRM FUTURE APPT"),^TMP($J,"SDAMA301")
"RTN","PXRMXSE1",18,0)
 K ^TMP($J),^TMP(PXRMRT,$J),^TMP("PXRMDUP",$J)
"RTN","PXRMXSE1",19,0)
 K ^TMP("PXRMCMB",$J),^TMP("PXRMCMB1",$J),^TMP("PXRMCMB2",$J)
"RTN","PXRMXSE1",20,0)
 K ^TMP("PXRMCMB3",$J),^TMP("PXRMCMB4",$J)
"RTN","PXRMXSE1",21,0)
 N PXRMRERR
"RTN","PXRMXSE1",22,0)
 ;
"RTN","PXRMXSE1",23,0)
 ;Initialize the busy counter.
"RTN","PXRMXSE1",24,0)
 S BUSY=0
"RTN","PXRMXSE1",25,0)
 ;
"RTN","PXRMXSE1",26,0)
 ;OE/RR team selected (PXRMOTM)
"RTN","PXRMXSE1",27,0)
 I PXRMSEL="O" D OERR^PXRMXSL1
"RTN","PXRMXSE1",28,0)
 ; 
"RTN","PXRMXSE1",29,0)
 ;PCMM team selected (PXRMPCM)
"RTN","PXRMXSE1",30,0)
 I PXRMSEL="T" D PCMMT^PXRMXSL1
"RTN","PXRMXSE1",31,0)
 ;
"RTN","PXRMXSE1",32,0)
 N HLIEN,FACILITY
"RTN","PXRMXSE1",33,0)
 ;Location selected (PXRMLCHL,PXRMCGRP)
"RTN","PXRMXSE1",34,0)
 I PXRMSEL="L" D  G:ZTSTOP=1 EXIT
"RTN","PXRMXSE1",35,0)
 .;Build Clinic List
"RTN","PXRMXSE1",36,0)
 .D BHLOC^PXRMXSL1
"RTN","PXRMXSE1",37,0)
 .;Prior Visits - build patient list in ^TMP
"RTN","PXRMXSE1",38,0)
 .I PXRMFD="P" D VISITS^PXRMXSL2 I DBDOWN=1 Q
"RTN","PXRMXSE1",39,0)
 .;Inpatient Admissions and current inpatient locations
"RTN","PXRMXSE1",40,0)
 .I PXRMFD="A"!(PXRMFD="C") D INPADM^PXRMXSL1
"RTN","PXRMXSE1",41,0)
 .;Future Appointments - build patient list in ^TMP
"RTN","PXRMXSE1",42,0)
 .I PXRMFD="F" D APPTS^PXRMXSL2 I DBDOWN=1 Q
"RTN","PXRMXSE1",43,0)
 .;End task requested
"RTN","PXRMXSE1",44,0)
 .Q:ZTSTOP=1
"RTN","PXRMXSE1",45,0)
 ;Update ^XTMP from ^TMP
"RTN","PXRMXSE1",46,0)
 ;Initialize the busy counter.
"RTN","PXRMXSE1",47,0)
 S BUSY=0
"RTN","PXRMXSE1",48,0)
 ;
"RTN","PXRMXSE1",49,0)
 ;PCMM provider selected (PXRMPRV)
"RTN","PXRMXSE1",50,0)
 I PXRMSEL="P" D PCMMP^PXRMXSL1
"RTN","PXRMXSE1",51,0)
 ;
"RTN","PXRMXSE1",52,0)
 ;Individual Patients selected (PXRMPAT)
"RTN","PXRMXSE1",53,0)
 I PXRMSEL="I" D IND^PXRMXSL1
"RTN","PXRMXSE1",54,0)
 ;
"RTN","PXRMXSE1",55,0)
 ;Patient List selected (PXRMLIST)
"RTN","PXRMXSE1",56,0)
 I PXRMSEL="R" D LIST^PXRMXSL1
"RTN","PXRMXSE1",57,0)
 ;
"RTN","PXRMXSE1",58,0)
 I DBDOWN=1 G EXIT
"RTN","PXRMXSE1",59,0)
 S START=$H
"RTN","PXRMXSE1",60,0)
 D EVAL^PXRMXEVL("PXRM PATIENT EVAL",.REMINDER)
"RTN","PXRMXSE1",61,0)
 D XTMP(START)
"RTN","PXRMXSE1",62,0)
 ;
"RTN","PXRMXSE1",63,0)
 ;Update patient list
"RTN","PXRMXSE1",64,0)
 I PXRMSEL'="I"&(PXRMUSER'="Y")&($G(PXRMLIS1)'="") D
"RTN","PXRMXSE1",65,0)
 .;If no patients due delete patient list
"RTN","PXRMXSE1",66,0)
 .I +$O(^TMP($J,"PXRMXPAT",""))=0 D  Q
"RTN","PXRMXSE1",67,0)
 ..N DA,DIK S DA=PXRMLIS1,DIK="^PXRMXP(810.5," D ^DIK
"RTN","PXRMXSE1",68,0)
 .;Otherwise create patient list
"RTN","PXRMXSE1",69,0)
 .D UPDLST^PXRMRULE("PXRMXPAT",PXRMLIS1,"","","",PXRMDPAT,PXRMTPAT)
"RTN","PXRMXSE1",70,0)
 .S $P(^PXRMXP(810.5,PXRMLIS1,0),U,9)=1
"RTN","PXRMXSE1",71,0)
 K ^TMP($J,"PXRMXPAT")
"RTN","PXRMXSE1",72,0)
 K ^TMP($J),^TMP(PXRMRT,$J),^TMP("PXRMDUP",$J)
"RTN","PXRMXSE1",73,0)
 K ^TMP("PXRMCMB",$J),^TMP("PXRMCMB1",$J),^TMP("PXRMCMB2",$J)
"RTN","PXRMXSE1",74,0)
 K ^TMP("PXRMCMB3",$J),^TMP("PXRMCMB4",$J)
"RTN","PXRMXSE1",75,0)
 K DBDOWN
"RTN","PXRMXSE1",76,0)
 ;Sorting is done, produce the output.
"RTN","PXRMXSE1",77,0)
 D START^PXRMXPR
"RTN","PXRMXSE1",78,0)
 Q
"RTN","PXRMXSE1",79,0)
 ;
"RTN","PXRMXSE1",80,0)
ERROR(STATUS,ITEM) ;
"RTN","PXRMXSE1",81,0)
 ;Create XTMP entry for Reminders that error out or could not be
"RTN","PXRMXSE1",82,0)
 ;determing on evaluation
"RTN","PXRMXSE1",83,0)
 N ERRNAME
"RTN","PXRMXSE1",84,0)
 S STATUS=$P(STATUS,U)
"RTN","PXRMXSE1",85,0)
 S ERRNAME=$P(^PXD(811.9,ITEM,0),U)
"RTN","PXRMXSE1",86,0)
 I $D(^XTMP(PXRMXTMP,STATUS,ERRNAME))>0,^XTMP(PXRMXTMP,STATUS,ERRNAME)>0 D
"RTN","PXRMXSE1",87,0)
 .S ^XTMP(PXRMXTMP,STATUS,ERRNAME)=^XTMP(PXRMXTMP,STATUS,ERRNAME)+1
"RTN","PXRMXSE1",88,0)
 E  S ^XTMP(PXRMXTMP,STATUS,ERRNAME)=1
"RTN","PXRMXSE1",89,0)
 Q
"RTN","PXRMXSE1",90,0)
 ;
"RTN","PXRMXSE1",91,0)
 ;End Task requested
"RTN","PXRMXSE1",92,0)
EXIT ;
"RTN","PXRMXSE1",93,0)
 S ZTSK=$G(^XTMP(PXRMXTMP,"PRZTSK"))
"RTN","PXRMXSE1",94,0)
 I ZTSK>0 D KILL^%ZTLOAD
"RTN","PXRMXSE1",95,0)
 D EXIT^PXRMXGUT
"RTN","PXRMXSE1",96,0)
 K DBDOWN
"RTN","PXRMXSE1",97,0)
 Q
"RTN","PXRMXSE1",98,0)
 ;
"RTN","PXRMXSE1",99,0)
XTMP(START) ;
"RTN","PXRMXSE1",100,0)
 N CNT,CCNT,DDAT,II,INP,ITEM,LIT,LOC,LSSN,MCNBD,MCNBDR,NAME
"RTN","PXRMXSE1",101,0)
 N SUB,STATUS,TEMP,TEXT
"RTN","PXRMXSE1",102,0)
 K ^TMP($J,"PXRM CNBD")
"RTN","PXRMXSE1",103,0)
 S CCNT=0,MCNBD=$G(^PXRM(800,1,"MIERR")),MCNBDR=0
"RTN","PXRMXSE1",104,0)
 S BUSY=0,SUB="NAM",TEMP=0,PX="PXRM"
"RTN","PXRMXSE1",105,0)
 N DDAT,DDUE,DEMARR,DFN,DLAST,DNEXT,FACILITY,NAM,PNAM
"RTN","PXRMXSE1",106,0)
 S FACILITY="",DDAT="N/A"
"RTN","PXRMXSE1",107,0)
 F  S FACILITY=$O(^TMP(PXRMRT,$J,FACILITY)) Q:FACILITY=""  D
"RTN","PXRMXSE1",108,0)
 .S NAM=""
"RTN","PXRMXSE1",109,0)
 .F  S NAM=$O(^TMP(PXRMRT,$J,FACILITY,NAM)) Q:NAM=""  D
"RTN","PXRMXSE1",110,0)
 ..S LOC=""
"RTN","PXRMXSE1",111,0)
 ..F  S LOC=$O(^TMP(PXRMRT,$J,FACILITY,NAM,LOC)) Q:LOC=""  D
"RTN","PXRMXSE1",112,0)
 ...S DFN=""
"RTN","PXRMXSE1",113,0)
 ...F  S DFN=$O(^TMP(PXRMRT,$J,FACILITY,NAM,LOC,DFN)) Q:DFN=""  D
"RTN","PXRMXSE1",114,0)
 ....D NOTIFY^PXRMXBSY("Evaluating reminders",.BUSY)
"RTN","PXRMXSE1",115,0)
 ....S INP=$G(^TMP(PXRMRT,$J,FACILITY,NAM,LOC,DFN))
"RTN","PXRMXSE1",116,0)
 ....S CNT=0 F  S CNT=$O(REMINDER(CNT)) Q:CNT'>0  D
"RTN","PXRMXSE1",117,0)
 .....S ITEM=$P(REMINDER(CNT),U,1),LIT=$P(REMINDER(CNT),U,4)
"RTN","PXRMXSE1",118,0)
 .....I LIT="" S LIT=$P(REMINDER(CNT),U,2)
"RTN","PXRMXSE1",119,0)
 .....S STATUS=$G(^TMP($J,"PXRM PATIENT EVAL",DFN,ITEM))
"RTN","PXRMXSE1",120,0)
 .....I STATUS="" Q
"RTN","PXRMXSE1",121,0)
 .....I STATUS["ERROR"!(STATUS["CNBD") D
"RTN","PXRMXSE1",122,0)
 ......D ERROR(STATUS,ITEM) I STATUS["ERROR"!(MCNBDR=1) Q
"RTN","PXRMXSE1",123,0)
 ......I CCNT=0 D
"RTN","PXRMXSE1",124,0)
 .......S ^TMP($J,"PXRM CNBD",1,0)=" "_$$LJ^XLFSTR("PATIENT NAME",30)_$$RJ^XLFSTR("LAST 4",8)_"  REMINDER"
"RTN","PXRMXSE1",125,0)
 .......S TEMP=" "
"RTN","PXRMXSE1",126,0)
 .......F II=1:1:30 S TEMP=TEMP_"-"
"RTN","PXRMXSE1",127,0)
 .......S TEMP=TEMP_"  "
"RTN","PXRMXSE1",128,0)
 .......F II=1:1:6 S TEMP=TEMP_"-"
"RTN","PXRMXSE1",129,0)
 .......S TEMP=TEMP_"  "
"RTN","PXRMXSE1",130,0)
 .......F II=1:1:30 S TEMP=TEMP_"-"
"RTN","PXRMXSE1",131,0)
 .......S ^TMP($J,"PXRM CNBD",2,0)=TEMP
"RTN","PXRMXSE1",132,0)
 .......S CCNT=2
"RTN","PXRMXSE1",133,0)
 ......S CCNT=CCNT+1
"RTN","PXRMXSE1",134,0)
 ......I CCNT>MCNBD S MCNBDR=1 Q
"RTN","PXRMXSE1",135,0)
 ......S NAME=$P(^DPT(DFN,0),U)
"RTN","PXRMXSE1",136,0)
 ......S LSSN=$E($P(^DPT(DFN,0),U,9),6,9)
"RTN","PXRMXSE1",137,0)
 ......S ^TMP($J,"PXRM CNBD",CCNT,0)=" "_$$LJ^XLFSTR(NAME,30)_$$RJ^XLFSTR(LSSN,8)_"  "_$$LJ^XLFSTR(LIT,30)
"RTN","PXRMXSE1",138,0)
 .....;Add reminder status to patient list TMP Global
"RTN","PXRMXSE1",139,0)
 .....I STATUS["DUE NOW" S ^TMP($J,"PXRMXPAT",DFN,"REM",ITEM)=ITEM_U_STATUS
"RTN","PXRMXSE1",140,0)
 .....I PXRMREP="D" D SDET^PXRMXDT1(DFN,STATUS,NAM,FACILITY,INP)
"RTN","PXRMXSE1",141,0)
 .....I PXRMREP="S" D SUM^PXRMXDT1(DFN,STATUS,FACILITY,NAM,LOC)
"RTN","PXRMXSE1",142,0)
 I $D(^TMP($J,"PXRM CNBD"))>0 D ERRMSG^PXRMXDT1("C")
"RTN","PXRMXSE1",143,0)
 K ^TMP($J,"PXRM CNBD")
"RTN","PXRMXSE1",144,0)
 S TEXT="Elapsed time for reminder evaluation: "_$$DETIME^PXRMXSL1(START,$H)
"RTN","PXRMXSE1",145,0)
 S ^XTMP(PXRMXTMP,"TIMING","REMINDER EVALUATION")=TEXT
"RTN","PXRMXSE1",146,0)
 I '(PXRMQUE!$D(IO("S"))!(PXRMTABS="Y")) W !,TEXT
"RTN","PXRMXSE1",147,0)
 K ^TMP($J,"PXRM PATIENT EVAL")
"RTN","PXRMXSE1",148,0)
 Q
"RTN","PXRMXSE1",149,0)
 ;
"RTN","PXRMXT")
0^82^B32837496
"RTN","PXRMXT",1,0)
PXRMXT ; SLC/PJH - Reminder Reports Template Load ;01/28/2013
"RTN","PXRMXT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,26**;Feb 04, 2005;Build 404
"RTN","PXRMXT",3,0)
 ; 
"RTN","PXRMXT",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXT",5,0)
 ;
"RTN","PXRMXT",6,0)
 ;Select Template
"RTN","PXRMXT",7,0)
 ;---------------
"RTN","PXRMXT",8,0)
START N X,Y,CNT,FOUND,PXRMFLD,DIC,MSG
"RTN","PXRMXT",9,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXT",10,0)
 S PXRMTMP="",FOUND=0
"RTN","PXRMXT",11,0)
 ;
"RTN","PXRMXT",12,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",13,0)
 Q:'$$FIND(PXRMTYP)
"RTN","PXRMXT",14,0)
 ;
"RTN","PXRMXT",15,0)
 ;Select template required
"RTN","PXRMXT",16,0)
 W !
"RTN","PXRMXT",17,0)
 S CNT=0,DIC=810.1,DIC(0)="AEQMZ"
"RTN","PXRMXT",18,0)
 S DIC("A")="Select an existing REPORT TEMPLATE or return to continue: "
"RTN","PXRMXT",19,0)
 S DIC("S")="I $P(^PXRMPT(810.1,+Y,0),U,3)=PXRMTYP"
"RTN","PXRMXT",20,0)
 D ^DIC
"RTN","PXRMXT",21,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXT",22,0)
 I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXT",23,0)
 .I +Y'=-1 D  Q
"RTN","PXRMXT",24,0)
 ..S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXT",25,0)
 K DIC
"RTN","PXRMXT",26,0)
 ;
"RTN","PXRMXT",27,0)
 ;Load template into local array
"RTN","PXRMXT",28,0)
 I (+Y'=-1)&('$D(DTOUT))&('$D(DUOUT)) D
"RTN","PXRMXT",29,0)
 .L +^PXRMPT(810.1,$P(Y,U)):DILOCKTM
"RTN","PXRMXT",30,0)
 .E  W !!?5,"Another user is editing this entry." S DUOUT=1 Q
"RTN","PXRMXT",31,0)
 .;Load template into an array
"RTN","PXRMXT",32,0)
 .S PXRMTMP=Y_U_$P(Y(0),U,2) D LOAD
"RTN","PXRMXT",33,0)
 .L -^PXRMPT(810.1,$P(PXRMTMP,U))
"RTN","PXRMXT",34,0)
 .;Exit if problem loading template
"RTN","PXRMXT",35,0)
 .I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXT",36,0)
 .;Display Template information
"RTN","PXRMXT",37,0)
 .D:'$D(MSG) ^PXRMXTD
"RTN","PXRMXT",38,0)
 ;
"RTN","PXRMXT",39,0)
EXIT Q
"RTN","PXRMXT",40,0)
 ;
"RTN","PXRMXT",41,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",42,0)
 ;-------------------------------------------------
"RTN","PXRMXT",43,0)
FIND(TYP) ;
"RTN","PXRMXT",44,0)
 N SUB,FOUND
"RTN","PXRMXT",45,0)
 S SUB=0,FOUND=0
"RTN","PXRMXT",46,0)
 F  S SUB=$O(^PXRMPT(810.1,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMXT",47,0)
 .I $P($G(^PXRMPT(810.1,SUB,0)),U,3)=TYP S FOUND=1
"RTN","PXRMXT",48,0)
 Q FOUND
"RTN","PXRMXT",49,0)
 ;
"RTN","PXRMXT",50,0)
 ;
"RTN","PXRMXT",51,0)
 ;Load variables from report template (both INT and EXT)
"RTN","PXRMXT",52,0)
 ;------------------------------------------------------
"RTN","PXRMXT",53,0)
LOAD N ARRAY
"RTN","PXRMXT",54,0)
 D GETS^DIQ(810.1,$P(PXRMTMP,U),"**","IE","ARRAY","MSG")
"RTN","PXRMXT",55,0)
 I $D(MSG) D  Q
"RTN","PXRMXT",56,0)
 .W !!,"File read failed, GETS^DIQ returned the following error message:"
"RTN","PXRMXT",57,0)
 .N IC S IC="MSG"
"RTN","PXRMXT",58,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","PXRMXT",59,0)
 .W !,"Examine the above error message for the reason.",!
"RTN","PXRMXT",60,0)
 .H 2
"RTN","PXRMXT",61,0)
 ;
"RTN","PXRMXT",62,0)
 N MREF,ORDER,ORDERC,SUB,SUB1,XREF
"RTN","PXRMXT",63,0)
 ;
"RTN","PXRMXT",64,0)
 S SUB1=$O(ARRAY(810.1,""))
"RTN","PXRMXT",65,0)
 D XREF^PXRMXTB
"RTN","PXRMXT",66,0)
 S SUB="" F  S SUB=$O(XREF(SUB)) Q:SUB=""  D 
"RTN","PXRMXT",67,0)
 .S @SUB=$G(ARRAY(810.1,SUB1,XREF(SUB),"I"))
"RTN","PXRMXT",68,0)
 ;
"RTN","PXRMXT",69,0)
 S PXRMFLD=$G(ARRAY(810.1,SUB1,XREF("PXRMSEL"),"E"))
"RTN","PXRMXT",70,0)
 S RUN=$G(ARRAY(810.1,SUB1,XREF("RUN"),"E"))
"RTN","PXRMXT",71,0)
 ;Update name if template has been renamed
"RTN","PXRMXT",72,0)
 S $P(PXRMTMP,U,2)=$G(ARRAY(810.1,SUB1,XREF("NAME"),"E"))
"RTN","PXRMXT",73,0)
 S TITLE=$G(ARRAY(810.1,SUB1,XREF("TITLE"),"E")),$P(PXRMTMP,U,3)=TITLE
"RTN","PXRMXT",74,0)
 ;
"RTN","PXRMXT",75,0)
MULT ;Clear multiple field arrays
"RTN","PXRMXT",76,0)
 K PXRMREM,PXRMPAT,PXRMPRV,PXRMOTM,PXRMFAC,PXRMLCHL,PXRMCS,PXRMCGRP
"RTN","PXRMXT",77,0)
 K PXRMFACN,PXRMCSN,PXRMCGRN,PXRMRCAT,REMINDER
"RTN","PXRMXT",78,0)
 ;
"RTN","PXRMXT",79,0)
 ;Load Multiple fields
"RTN","PXRMXT",80,0)
 D SUB(.PXRMREM,810.12,"REMINDER",1)
"RTN","PXRMXT",81,0)
 ;Load Patients
"RTN","PXRMXT",82,0)
 D SUB(.PXRMPAT,810.16,"PATIENT",1)
"RTN","PXRMXT",83,0)
 ;Load Providers
"RTN","PXRMXT",84,0)
 D SUB(.PXRMPRV,810.14,"PROVIDER",1)
"RTN","PXRMXT",85,0)
 ;Load OE/RR Teams
"RTN","PXRMXT",86,0)
 D SUB(.PXRMOTM,810.17,"OERR TEAM",1)
"RTN","PXRMXT",87,0)
 ;Load PCMM Teams
"RTN","PXRMXT",88,0)
 D SUB(.PXRMPCM,810.18,"PCMM TEAM",1)
"RTN","PXRMXT",89,0)
 ;Load Facility codes
"RTN","PXRMXT",90,0)
 D SUB(.PXRMFAC,810.13,"FACILITY",1)
"RTN","PXRMXT",91,0)
 ;Load Hospital Location codes
"RTN","PXRMXT",92,0)
 D SUB(.PXRMLCHL,810.11,"LOCATION",2)
"RTN","PXRMXT",93,0)
 ;Load Clinic Stop codes
"RTN","PXRMXT",94,0)
 D SUB(.PXRMCS,810.111,"STOP CODE",2)
"RTN","PXRMXT",95,0)
 ;Load Clinic Groups
"RTN","PXRMXT",96,0)
 D SUB(.PXRMCGRP,810.112,"CLINIC GROUP",1)
"RTN","PXRMXT",97,0)
 ;Load Reminder Categories
"RTN","PXRMXT",98,0)
 D SUB(.PXRMRCAT,810.113,"REMINDER CATEGORY",1)
"RTN","PXRMXT",99,0)
 ;Load Patient lists
"RTN","PXRMXT",100,0)
 D SUB(.PXRMLIST,810.114,"PXRMLIST",1)
"RTN","PXRMXT",101,0)
 ;
"RTN","PXRMXT",102,0)
 ;Build PXRMFACN/PXRMLOCN array IEN's and counters NHL/NFAC
"RTN","PXRMXT",103,0)
 D NUM
"RTN","PXRMXT",104,0)
 ;
"RTN","PXRMXT",105,0)
 ;Build Service Category array
"RTN","PXRMXT",106,0)
 I $L(PXRMSCAT)>0 F IC=1:1:$L(PXRMSCAT,",") S PXRMSCAT($P(PXRMSCAT,",",IC))=""
"RTN","PXRMXT",107,0)
 ;
"RTN","PXRMXT",108,0)
 ;Add Descriptions for Reminders
"RTN","PXRMXT",109,0)
 D DES(.PXRMREM,"^PXD(811.9",4)
"RTN","PXRMXT",110,0)
 ;Add Descriptions for Reminder Categories
"RTN","PXRMXT",111,0)
 D DES(.PXRMRCAT,"^PXRMD(811.7",4)
"RTN","PXRMXT",112,0)
 ;Add Descriptions for Teams
"RTN","PXRMXT",113,0)
 D DES(.PXRMOTM,"^OR(100.21",3)
"RTN","PXRMXT",114,0)
 ;Add Display Codes for Stops
"RTN","PXRMXT",115,0)
 D CODE(.PXRMCS,"^DIC(40.7",3)
"RTN","PXRMXT",116,0)
 ;
"RTN","PXRMXT",117,0)
 ;Sort Reminders into display order
"RTN","PXRMXT",118,0)
 D SORT(.PXRMREM,.ORDER)
"RTN","PXRMXT",119,0)
 ;Sort Reminders categories into display order
"RTN","PXRMXT",120,0)
 D SORT(.PXRMRCAT,.ORDERC)
"RTN","PXRMXT",121,0)
 ;
"RTN","PXRMXT",122,0)
 ;Combine individual reminders and category reminders
"RTN","PXRMXT",123,0)
 D MERGE^PXRMXS1
"RTN","PXRMXT",124,0)
 Q
"RTN","PXRMXT",125,0)
 ;
"RTN","PXRMXT",126,0)
 ;
"RTN","PXRMXT",127,0)
 ;Extract INTernal and EXTernal format from ARRAY
"RTN","PXRMXT",128,0)
 ;-----------------------------------------------
"RTN","PXRMXT",129,0)
SUB(OUTPUT,SUB,VAR,ORD) ; 
"RTN","PXRMXT",130,0)
 K OUTPUT
"RTN","PXRMXT",131,0)
 N IC,INT,EXT,SUB1,DISP
"RTN","PXRMXT",132,0)
 S SUB1="",IC=0
"RTN","PXRMXT",133,0)
 F  S SUB1=$O(ARRAY(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMXT",134,0)
 .S INT=$P($G(ARRAY(SUB,SUB1,MREF(VAR),"I")),";")
"RTN","PXRMXT",135,0)
 .S EXT=$G(ARRAY(SUB,SUB1,MREF(VAR),"E"))
"RTN","PXRMXT",136,0)
 .S IC=IC+1
"RTN","PXRMXT",137,0)
 .I ORD=1 S OUTPUT(IC)=INT_U_EXT
"RTN","PXRMXT",138,0)
 .I ORD'=1 S OUTPUT(IC)=EXT_U_INT
"RTN","PXRMXT",139,0)
 .I (VAR'="REMINDER")&(VAR'="REMINDER CATEGORY") Q
"RTN","PXRMXT",140,0)
 .;Get display order
"RTN","PXRMXT",141,0)
 .S DISP=$G(ARRAY(SUB,SUB1,MREF("DISPLAY ORDER"),"I"))
"RTN","PXRMXT",142,0)
 .;Store in PXRMREM for display
"RTN","PXRMXT",143,0)
 .S OUTPUT(IC)=OUTPUT(IC)_U_DISP
"RTN","PXRMXT",144,0)
 .;Put reminders with no sequence number last
"RTN","PXRMXT",145,0)
 .I DISP="" S DISP=99
"RTN","PXRMXT",146,0)
 .;Create order array for sorting entries later
"RTN","PXRMXT",147,0)
 .I VAR="REMINDER" S ORDER(DISP,IC)=""
"RTN","PXRMXT",148,0)
 .I VAR="REMINDER CATEGORY" S ORDERC(DISP,IC)=""
"RTN","PXRMXT",149,0)
 Q
"RTN","PXRMXT",150,0)
 ;
"RTN","PXRMXT",151,0)
 ;Build array PXRMFACN and NFAC
"RTN","PXRMXT",152,0)
 ;-----------------------------
"RTN","PXRMXT",153,0)
NUM N IC,FACN,FACNAM
"RTN","PXRMXT",154,0)
 K PXRMLOCN,PXRMCSN,PXRMCGRN,PXRMFACN
"RTN","PXRMXT",155,0)
 S IC=""
"RTN","PXRMXT",156,0)
 F  S IC=$O(PXRMFAC(IC)) Q:IC=""  D
"RTN","PXRMXT",157,0)
 .S FACN=$P(PXRMFAC(IC),U),FACNAM=$P(PXRMFAC(IC),U,2)
"RTN","PXRMXT",158,0)
 .S PXRMFACN(FACN)=FACNAM_U_FACN,NFAC=IC
"RTN","PXRMXT",159,0)
 ; Build Array PXRMLOCN and NHL
"RTN","PXRMXT",160,0)
 N LOCN
"RTN","PXRMXT",161,0)
 F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXT",162,0)
 .S LOCN=$P(PXRMLCHL(IC),U,2)
"RTN","PXRMXT",163,0)
 .S PXRMLOCN(LOCN)=IC,NHL=IC
"RTN","PXRMXT",164,0)
 ; Build Array PXRMCSN and NCS
"RTN","PXRMXT",165,0)
 N CSN
"RTN","PXRMXT",166,0)
 F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXT",167,0)
 .S CSN=$P(PXRMCS(IC),U,2)
"RTN","PXRMXT",168,0)
 .S PXRMCSN(CSN)=IC,NCS=IC
"RTN","PXRMXT",169,0)
 ; Build Array PXRMCGRN and NCGRP
"RTN","PXRMXT",170,0)
 N GRPN
"RTN","PXRMXT",171,0)
 F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXT",172,0)
 .S GRPN=$P(PXRMCGRP(IC),U,1)
"RTN","PXRMXT",173,0)
 .S PXRMCGRN(GRPN)=IC,NCGRP=IC
"RTN","PXRMXT",174,0)
 Q
"RTN","PXRMXT",175,0)
 ;
"RTN","PXRMXT",176,0)
 ;Add print name to OUTPUT array
"RTN","PXRMXT",177,0)
 ;-------------------------------
"RTN","PXRMXT",178,0)
DES(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",179,0)
 N IC,IEN,DES
"RTN","PXRMXT",180,0)
 S IC=""
"RTN","PXRMXT",181,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",182,0)
 .S IEN=$P(OUTPUT(IC),U,1)
"RTN","PXRMXT",183,0)
 .X "S DES=$P($G("_GLOB_",IEN,0)),U,3)"
"RTN","PXRMXT",184,0)
 .S $P(OUTPUT(IC),U,POSN)=DES
"RTN","PXRMXT",185,0)
 Q
"RTN","PXRMXT",186,0)
 ;
"RTN","PXRMXT",187,0)
 ;Add stop code to OUTPUT array
"RTN","PXRMXT",188,0)
 ;-------------------------------
"RTN","PXRMXT",189,0)
CODE(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",190,0)
 N IC,IEN,CODE
"RTN","PXRMXT",191,0)
 S IC=""
"RTN","PXRMXT",192,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",193,0)
 .S IEN=$P(OUTPUT(IC),U,2)
"RTN","PXRMXT",194,0)
 .X "S CODE=$P($G("_GLOB_",IEN,0)),U,2)"
"RTN","PXRMXT",195,0)
 .S $P(OUTPUT(IC),U,POSN)=CODE
"RTN","PXRMXT",196,0)
 Q
"RTN","PXRMXT",197,0)
 ;
"RTN","PXRMXT",198,0)
 ;Sort reminders into display order (allow for duplicates)
"RTN","PXRMXT",199,0)
 ;--------------------------------------------------------
"RTN","PXRMXT",200,0)
SORT(INPUT,ORDER) ;
"RTN","PXRMXT",201,0)
 N IC,DISP,OUTPUT,IC1
"RTN","PXRMXT",202,0)
 S DISP="",IC1=0
"RTN","PXRMXT",203,0)
 F  S DISP=$O(ORDER(DISP)) Q:DISP=""  D
"RTN","PXRMXT",204,0)
 .S IC=""
"RTN","PXRMXT",205,0)
 .F  S IC=$O(ORDER(DISP,IC)) Q:IC=""  D
"RTN","PXRMXT",206,0)
 ..S IC1=IC1+1,OUTPUT(IC1)=INPUT(IC)
"RTN","PXRMXT",207,0)
 ; Move results back
"RTN","PXRMXT",208,0)
 K INPUT M INPUT=OUTPUT
"RTN","PXRMXT",209,0)
 Q
"RTN","PXRMXTA")
0^83^B53931120
"RTN","PXRMXTA",1,0)
PXRMXTA ; SLC/PJH - Reminder Reports Template Edit ;01/28/2013
"RTN","PXRMXTA",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMXTA",3,0)
 ; 
"RTN","PXRMXTA",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXTA",5,0)
 ;
"RTN","PXRMXTA",6,0)
 ;Edit selected template or run report
"RTN","PXRMXTA",7,0)
 ;-------------------------------------
"RTN","PXRMXTA",8,0)
CANEDIT(TIEN) ;
"RTN","PXRMXTA",9,0)
 I $P($G(^PXRMPT(810.1,TIEN,0)),U,11)=DUZ Q 1
"RTN","PXRMXTA",10,0)
 I $D(^XUSEC("PXRM MANAGER",DUZ)) Q 1
"RTN","PXRMXTA",11,0)
 Q 0
"RTN","PXRMXTA",12,0)
 ;
"RTN","PXRMXTA",13,0)
START(ROUTINE) ;
"RTN","PXRMXTA",14,0)
 N DA,PXRMASK,PXRMEDIT,PXRMCOPY,MSG,DIC,NLOC
"RTN","PXRMXTA",15,0)
 N PXRMTREM,PXRMTCAT
"RTN","PXRMXTA",16,0)
 S PXRMASK="N",PXRMCOPY="N",PXRMEDIT="N"
"RTN","PXRMXTA",17,0)
 ;Option to edit/copy template
"RTN","PXRMXTA",18,0)
USE I 'PXRMUSER,$$CANEDIT($P(PXRMTMP,U)) D ASK(.PXRMASK) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",19,0)
 ;Option to edit template
"RTN","PXRMXTA",20,0)
 I PXRMASK="Y" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",21,0)
 .;Template edit and redisplay
"RTN","PXRMXTA",22,0)
 .D LOCK Q:$D(DUOUT)
"RTN","PXRMXTA",23,0)
 .D EDIT^PXRMXTE,UNLOCK
"RTN","PXRMXTA",24,0)
 .;Rollback changes on exit
"RTN","PXRMXTA",25,0)
 .I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","PXRMXTA",26,0)
 ..D ROLL^PXRMXTF
"RTN","PXRMXTA",27,0)
 .;If all the templates have been deleted exit report
"RTN","PXRMXTA",28,0)
 .I '$$FIND^PXRMXT(PXRMTYP) S DTOUT=1 Q
"RTN","PXRMXTA",29,0)
 .;Check if template has been deleted 
"RTN","PXRMXTA",30,0)
 .I '$D(DA) S DUOUT=1 Q
"RTN","PXRMXTA",31,0)
 .;Sort out the filing
"RTN","PXRMXTA",32,0)
 .D ^PXRMXTF I $D(MSG) S DUOUT=1 Q
"RTN","PXRMXTA",33,0)
 ;
"RTN","PXRMXTA",34,0)
CHECK ;Check for missing fields
"RTN","PXRMXTA",35,0)
 N CNT,CRCNT,NODE,QUIT,RIEN
"RTN","PXRMXTA",36,0)
 S CNT=0,QUIT=0
"RTN","PXRMXTA",37,0)
 I PXRMSEL="R" F  S CNT=$O(PXRMLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",38,0)
 .S NODE=$G(PXRMLIST(CNT))
"RTN","PXRMXTA",39,0)
 .I $P(^PXRMXP(810.5,$P(NODE,U),30,0),U,3)'>0 S QUIT=1 W !!,"PATIENT LIST: "_$P(NODE,U,2)_"DOES NOT CONTAIN PATIENTS!" Q
"RTN","PXRMXTA",40,0)
 ;I PXRMSEL="O" F  S CNT=$O(PXRMOTM(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",41,0)
 ;.S NODE=$G(PXRMOTM(CNT)) 
"RTN","PXRMXTA",42,0)
 ;.I $P(^OR(100.21,$P(NODE,U),10,0),U,3)'>0 S QUIT=1 W !!,"OE/RR TEAM: "_$P(NODE,U,2)_"DOES NOT CONTAIN PATIENTS!" Q
"RTN","PXRMXTA",43,0)
 S CNT=0
"RTN","PXRMXTA",44,0)
 I $D(PXRMRCAT)>0 F  S CNT=$O(PXRMRCAT(CNT)) Q:CNT'>0  D
"RTN","PXRMXTA",45,0)
 .S NODE=$G(PXRMRCAT(CNT))
"RTN","PXRMXTA",46,0)
 .S CRCNT=0 F  S CRCNT=$O(^PXRMD(811.7,$P(NODE,U),2,CRCNT)) Q:CRCNT'>0  D
"RTN","PXRMXTA",47,0)
 ..S RIEN=$P($G(^PXRMD(811.7,$P(NODE,U),2,CRCNT,0)),U)
"RTN","PXRMXTA",48,0)
 ..I $D(^PXD(811.9,RIEN))'>0 S QUIT=1 D
"RTN","PXRMXTA",49,0)
 ...W !!,"REMINDER CATEGORY: "_$P(NODE,U,2)_" CONTAINS A POINTER TO ONE OR MORE REMINDERS THAT DO"
"RTN","PXRMXTA",50,0)
 ...W !,"NOT EXIST ON THE SYSTEM!" Q
"RTN","PXRMXTA",51,0)
 I QUIT=1,'PXRMUSER W !!,"THE TEMPLATE NEEDS TO BE EDITED." H 2 G USE
"RTN","PXRMXTA",52,0)
 I QUIT=1,PXRMUSER W !!,"HAVE THE REMINDERS CLINICAL APPLICATION COORDINATOR CORRECT THE TEMPLATE." H 2 Q
"RTN","PXRMXTA",53,0)
 ;
"RTN","PXRMXTA",54,0)
FAC ;Option to combine multifacility report
"RTN","PXRMXTA",55,0)
 I "IRPO"'[PXRMSEL,NFAC>1 D  Q:$D(DTOUT)  I $D(DUOUT) Q:PXRMUSER  G USE
"RTN","PXRMXTA",56,0)
 .D COMB^PXRMXSD(.PXRMFCMB,"Facilities","N")
"RTN","PXRMXTA",57,0)
 ;
"RTN","PXRMXTA",58,0)
 ;Date range input (location only)
"RTN","PXRMXTA",59,0)
DAT I PXRMSEL="L" D  Q:$D(DTOUT)  I $D(DUOUT) Q:PXRMUSER  G USE
"RTN","PXRMXTA",60,0)
 .I PXRMFD="P" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ENCOUNTER")
"RTN","PXRMXTA",61,0)
 .I PXRMFD="F" D FDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"APPOINTMENT")
"RTN","PXRMXTA",62,0)
 .I PXRMFD="A" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ADMISSION")
"RTN","PXRMXTA",63,0)
 .I PXRMFD="C" S PXRMBDT=DT,PXRMEDT=DT
"RTN","PXRMXTA",64,0)
 ;Due Effective Date
"RTN","PXRMXTA",65,0)
EFF D SDR^PXRMXDUT(.PXRMSDT) Q:$D(DTOUT)
"RTN","PXRMXTA",66,0)
 I $D(DUOUT) G:PXRMSEL="L" DAT Q:PXRMUSER  G USE
"RTN","PXRMXTA",67,0)
 ;
"RTN","PXRMXTA",68,0)
 ;Check if combined location report is required
"RTN","PXRMXTA",69,0)
LCOMB S NLOC=0
"RTN","PXRMXTA",70,0)
 I PXRMREP="D",PXRMSEL="L" D  G:$D(DTOUT) EXIT G:$D(DUOUT) EFF
"RTN","PXRMXTA",71,0)
 .N DEFAULT,TEXT
"RTN","PXRMXTA",72,0)
 .D NLOC^PXRMXD
"RTN","PXRMXTA",73,0)
 .I NLOC>1 D COMB^PXRMXSD(.PXRMLCMB,TEXT,DEFAULT)
"RTN","PXRMXTA",74,0)
 ;
"RTN","PXRMXTA",75,0)
 ;Check if combined OE/RR team report is required
"RTN","PXRMXTA",76,0)
TCOMB S NOTM=0
"RTN","PXRMXTA",77,0)
 I PXRMREP="D",PXRMSEL="O" D  G:$D(DTOUT) EXIT G:$D(DUOUT) EFF
"RTN","PXRMXTA",78,0)
 .N DEFAULT,TEXT
"RTN","PXRMXTA",79,0)
 .S NOTM=$O(PXRMOTM(""),-1) I NOTM<2 Q
"RTN","PXRMXTA",80,0)
 .S DEFAULT="N",TEXT="OE/RR teams"
"RTN","PXRMXTA",81,0)
 .D COMB^PXRMXSD(.PXRMTCMB,TEXT,DEFAULT)
"RTN","PXRMXTA",82,0)
 ;
"RTN","PXRMXTA",83,0)
 ;Reminders Due sort and appointment date options
"RTN","PXRMXTA",84,0)
APPT I PXRMREP="D" D FUT Q:$D(DTOUT)  I $D(DUOUT) G:(PXRMSEL="L")&(NLOC>1) LCOMB G:(PXRMSEL="O")&(NOTM>1) TCOMB G EFF
"RTN","PXRMXTA",85,0)
 ;
"RTN","PXRMXTA",86,0)
 ;
"RTN","PXRMXTA",87,0)
 ;Option to print full SSN
"RTN","PXRMXTA",88,0)
SSN I PXRMREP="D" D  G:$D(DTOUT) EXIT G:$D(DUOUT) APPT
"RTN","PXRMXTA",89,0)
 .D SSN^PXRMXSD(.PXRMSSN)
"RTN","PXRMXTA",90,0)
 ;
"RTN","PXRMXTA",91,0)
 ;Option to print without totals, with totals or totals only
"RTN","PXRMXTA",92,0)
TOT I PXRMREP="S" D  Q:$D(DTOUT)  I $D(DUOUT) G EFF
"RTN","PXRMXTA",93,0)
 .;Default is normal report
"RTN","PXRMXTA",94,0)
 .S PXRMTOT="I"
"RTN","PXRMXTA",95,0)
 .;Ignore patient list and individual patient options
"RTN","PXRMXTA",96,0)
 .I "RI"[PXRMSEL Q
"RTN","PXRMXTA",97,0)
 .;Only prompt if more than one location, team or provider is selected
"RTN","PXRMXTA",98,0)
 .I PXRMSEL="P",'$O(PXRMPRV(1)) Q
"RTN","PXRMXTA",99,0)
 .I PXRMSEL="O",'$O(PXRMOTM(1)) Q
"RTN","PXRMXTA",100,0)
 .I PXRMSEL="T",'$O(PXRMPCM(1)) Q
"RTN","PXRMXTA",101,0)
 .;Ignore reports for all locations
"RTN","PXRMXTA",102,0)
 .I PXRMSEL="L",PXRMLCMB="Y" Q
"RTN","PXRMXTA",103,0)
 .I PXRMSEL="L" N DEFAULT,TEXT D NLOC^PXRMXD Q:NLOC<2
"RTN","PXRMXTA",104,0)
 .;Prompt for options
"RTN","PXRMXTA",105,0)
 .N LIT1,LIT2,LIT3
"RTN","PXRMXTA",106,0)
 .D LIT^PXRMXD,TOTALS^PXRMXSD(.PXRMTOT,LIT1,LIT2,LIT3)
"RTN","PXRMXTA",107,0)
 ;
"RTN","PXRMXTA",108,0)
SEPCS ;Allow users to determine the output of the Clinic Stops report
"RTN","PXRMXTA",109,0)
 D SEPCS^PXRMXSD(.PXRMCCS) G:$D(DTOUT) EXIT I $D(DUOUT) G:PXRMREP="D" SSN G TOT
"RTN","PXRMXTA",110,0)
 ;Option to print delimiter separated output
"RTN","PXRMXTA",111,0)
TABS D  G:$D(DTOUT) EXIT I $D(DUOUT) G:PXRMREP="D" SSN G TOT
"RTN","PXRMXTA",112,0)
 .D TABS^PXRMXSD(.PXRMTABS)
"RTN","PXRMXTA",113,0)
 ;
"RTN","PXRMXTA",114,0)
 ;Select chracter
"RTN","PXRMXTA",115,0)
TCHAR I PXRMTABS="Y" D  G:$D(DTOUT) EXIT G:$D(DUOUT) TABS
"RTN","PXRMXTA",116,0)
 .S PXRMTABC=$$DELIMSEL^PXRMXSD
"RTN","PXRMXTA",117,0)
 ;
"RTN","PXRMXTA",118,0)
DPAT ;Ask whether to include deceased and test patients.
"RTN","PXRMXTA",119,0)
 S PXRMDPAT=$$ASKYN^PXRMEUT("N","Include deceased patients on the list")
"RTN","PXRMXTA",120,0)
 N PXRMIDOD I PXRMDPAT>0 S PXRMIDOD=1
"RTN","PXRMXTA",121,0)
 Q:$D(DTOUT)  G:$D(DUOUT) TABS
"RTN","PXRMXTA",122,0)
TPAT ;
"RTN","PXRMXTA",123,0)
 S PXRMTPAT=$$ASKYN^PXRMEUT("N","Include test patients on the list")
"RTN","PXRMXTA",124,0)
 Q:$D(DTOUT)  G:$D(DUOUT) DPAT
"RTN","PXRMXTA",125,0)
PATLIST ;
"RTN","PXRMXTA",126,0)
 N PATLST,PATCREAT
"RTN","PXRMXTA",127,0)
 I PXRMSEL'="I"&(PXRMUSER=0) D
"RTN","PXRMXTA",128,0)
 . D ASK^PXRMXD(.PATLST,"Save due patients to a patient list: ",3)
"RTN","PXRMXTA",129,0)
 . I $G(PATLST)="" Q
"RTN","PXRMXTA",130,0)
 . I $G(PATLST)="N" S PXRMLIS1=""
"RTN","PXRMXTA",131,0)
 . I $G(PATLST)="Y" D
"RTN","PXRMXTA",132,0)
 . . S PATCREAT="N" D ASK^PXRMXD(.PATCREAT,"Secure list?: ",2)
"RTN","PXRMXTA",133,0)
 . . Q:$D(DTOUT)!($D(DUOUT))
"RTN","PXRMXTA",134,0)
 . . K PLISTPUG
"RTN","PXRMXTA",135,0)
 . . S PLISTPUG="N" D ASK^PXRMXD(.PLISTPUG,"Purge Patient List after 5 years?: ",5)
"RTN","PXRMXTA",136,0)
 I $G(PATLST)="" G:$D(DTOUT) EXIT I $D(DUOUT) G TPAT
"RTN","PXRMXTA",137,0)
 G:$D(DTOUT) EXIT I $D(DUOUT) G PATLIST
"RTN","PXRMXTA",138,0)
 I $G(PATLST)="Y" S TEXT="Select PATIENT LIST name: " D PLIST^PXRMLCR(.PXRMLIS1,TEXT,"") Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",139,0)
 ;Initiate report
"RTN","PXRMXTA",140,0)
 D @ROUTINE
"RTN","PXRMXTA",141,0)
EXIT Q
"RTN","PXRMXTA",142,0)
 ;
"RTN","PXRMXTA",143,0)
 ;File locking
"RTN","PXRMXTA",144,0)
 ;------------
"RTN","PXRMXTA",145,0)
UNLOCK L -^PXRMPT(810.1,$P(PXRMTMP,U)) Q
"RTN","PXRMXTA",146,0)
LOCK L +^PXRMPT(810.1,$P(PXRMTMP,U)):DILOCKTM
"RTN","PXRMXTA",147,0)
 E  W !!?5,"Another user is editing this entry" S DUOUT=1
"RTN","PXRMXTA",148,0)
 Q
"RTN","PXRMXTA",149,0)
 ;
"RTN","PXRMXTA",150,0)
 ;Option to use report template
"RTN","PXRMXTA",151,0)
 ;-----------------------------
"RTN","PXRMXTA",152,0)
ASK(YESNO) ;
"RTN","PXRMXTA",153,0)
 N X,Y,TEXT
"RTN","PXRMXTA",154,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTA",155,0)
 S DIR(0)="YA0"
"RTN","PXRMXTA",156,0)
 S DIR("A")="WANT TO EDIT '"_$P(PXRMTMP,U,2)_"' TEMPLATE: "
"RTN","PXRMXTA",157,0)
 S DIR("B")="N"
"RTN","PXRMXTA",158,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXTA",159,0)
 S DIR("??")=U_"D HELP^PXRMXTA(1)"
"RTN","PXRMXTA",160,0)
 W !
"RTN","PXRMXTA",161,0)
 D ^DIR K DIR
"RTN","PXRMXTA",162,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTA",163,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTA",164,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXTA",165,0)
 Q
"RTN","PXRMXTA",166,0)
 ;
"RTN","PXRMXTA",167,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTA",168,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTA",169,0)
HELP(CALL) ;
"RTN","PXRMXTA",170,0)
 N HTEXT
"RTN","PXRMXTA",171,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTA",172,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTA",173,0)
 ;
"RTN","PXRMXTA",174,0)
 I CALL=1 D
"RTN","PXRMXTA",175,0)
 .S HTEXT(1)="Enter 'N' to run the report using the parameters from "
"RTN","PXRMXTA",176,0)
 .S HTEXT(2)="the existing template. Enter 'Y' to copy/edit the "
"RTN","PXRMXTA",177,0)
 .S HTEXT(3)="template."
"RTN","PXRMXTA",178,0)
 ;
"RTN","PXRMXTA",179,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",180,0)
 S IC=""
"RTN","PXRMXTA",181,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTA",182,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTA",183,0)
 . D ^DIWP
"RTN","PXRMXTA",184,0)
 W !
"RTN","PXRMXTA",185,0)
 S IC=0
"RTN","PXRMXTA",186,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTA",187,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTA",188,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",189,0)
 W !
"RTN","PXRMXTA",190,0)
 Q
"RTN","PXRMXTA",191,0)
 ;
"RTN","PXRMXTA",192,0)
 ;Reminders Due specific prompts
"RTN","PXRMXTA",193,0)
 ;------------------------------
"RTN","PXRMXTA",194,0)
FUT ;For detailed report give option to display future appointments
"RTN","PXRMXTA",195,0)
 S PXRMFUT="N",PXRMDLOC="N"
"RTN","PXRMXTA",196,0)
 I PXRMREP="D" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXTA",197,0)
 .D FUTURE^PXRMXSD(.PXRMFUT,"Display All Future Appointments: ",5)
"RTN","PXRMXTA",198,0)
 .I PXRMFUT="Y" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXTA",199,0)
 ..D FUTURE^PXRMXSD(.PXRMDLOC,"Display Appointment Location: ",15)
"RTN","PXRMXTA",200,0)
 ;
"RTN","PXRMXTA",201,0)
SRT ;For detailed report give option to sort by appointment date
"RTN","PXRMXTA",202,0)
 S PXRMSRT="N"
"RTN","PXRMXTA",203,0)
 I PXRMREP="D",(PXRMSEL'="I") D  G:$D(DUOUT) FUT
"RTN","PXRMXTA",204,0)
 .;Inpatient report
"RTN","PXRMXTA",205,0)
 .S PXRMINP=$$INP^PXRMXD
"RTN","PXRMXTA",206,0)
 .;Option to sort by bed
"RTN","PXRMXTA",207,0)
 .I PXRMINP D BED^PXRMXSD(.PXRMSRT) Q
"RTN","PXRMXTA",208,0)
 .;Option to sort by appt date
"RTN","PXRMXTA",209,0)
 .D SRT^PXRMXSD(.PXRMSRT)
"RTN","PXRMXTA",210,0)
 ;
"RTN","PXRMXTA",211,0)
 Q
"RTN","PXRMXTA",212,0)
 ;
"RTN","PXRMXTA",213,0)
 ;Input validation for file #810.1
"RTN","PXRMXTA",214,0)
 ;
"RTN","PXRMXTA",215,0)
 ;If detail report allow only one reminder
"RTN","PXRMXTA",216,0)
PXRMREM I $P(^PXRMPT(810.1,DA(1),0),U,6)'="D" Q
"RTN","PXRMXTA",217,0)
 ;If template has no reminders ignore
"RTN","PXRMXTA",218,0)
 I +$P($G(^PXRMPT(810.1,DA(1),1,0)),U,4)=0 Q
"RTN","PXRMXTA",219,0)
 ;If this a new entry
"RTN","PXRMXTA",220,0)
 I $G(Y)=-1 K X W !,"Only one reminder allowed for detailed report."
"RTN","PXRMXTA",221,0)
 Q
"RTN","PXRMXTA",222,0)
 ;
"RTN","PXRMXTA",223,0)
 ;If changing from Summary to Detail report
"RTN","PXRMXTA",224,0)
PXRMREP Q:$G(X)'="D"
"RTN","PXRMXTA",225,0)
 Q:$P($G(^PXRMPT(810.1,DA,0)),U,6)'="S"
"RTN","PXRMXTA",226,0)
 Q:+$G(NREM)<2
"RTN","PXRMXTA",227,0)
 W !,"Only the first reminder on this template will be evaluated"
"RTN","PXRMXTA",228,0)
 Q
"RTN","PXRMXTB")
0^84^B7902302
"RTN","PXRMXTB",1,0)
PXRMXTB ; SLC/PJH - Reminder Reports Template Load ;01/28/2013
"RTN","PXRMXTB",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,26**;Feb 04, 2005;Build 404
"RTN","PXRMXTB",3,0)
 ; 
"RTN","PXRMXTB",4,0)
 ; Called from PXRMXD
"RTN","PXRMXTB",5,0)
 ;
"RTN","PXRMXTB",6,0)
 ;Select Template
"RTN","PXRMXTB",7,0)
 ;---------------
"RTN","PXRMXTB",8,0)
START N X,Y,CNT,FOUND,PXRMFLD,DIC,MSG
"RTN","PXRMXTB",9,0)
 N ERR,SEQ,TMPLST,LIST
"RTN","PXRMXTB",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTB",11,0)
 S PXRMTMP="",FOUND=0
"RTN","PXRMXTB",12,0)
 ;
"RTN","PXRMXTB",13,0)
 ;Check if any templates exist for the user
"RTN","PXRMXTB",14,0)
 D GETLST^XPAR(.TMPLST,"USR","PXRM REPORT TEMPLATE (USER)","Q",.ERR)
"RTN","PXRMXTB",15,0)
 I ERR>0 W !!,?5,"Error: "_$P(ERR,U,2) S DUOUT=1 H 2 Q
"RTN","PXRMXTB",16,0)
 I 'TMPLST W !!,?5,"No report Templates for this user" S DUOUT=1 H 2 Q
"RTN","PXRMXTB",17,0)
 ;Build list of templates
"RTN","PXRMXTB",18,0)
 S SEQ=0
"RTN","PXRMXTB",19,0)
 F  S SEQ=$O(TMPLST(SEQ)) Q:'SEQ  D
"RTN","PXRMXTB",20,0)
 .S Y=$P(TMPLST(SEQ),U,2) Q:'Y
"RTN","PXRMXTB",21,0)
 .S LIST(Y)=""
"RTN","PXRMXTB",22,0)
 ;
"RTN","PXRMXTB",23,0)
 ;Select template required
"RTN","PXRMXTB",24,0)
 W !
"RTN","PXRMXTB",25,0)
 S CNT=0,DIC=810.1,DIC(0)="AEQMZ"
"RTN","PXRMXTB",26,0)
 S DIC("A")="Select REPORT TEMPLATE:"
"RTN","PXRMXTB",27,0)
 S DIC("S")="I $D(LIST(+Y)),$P(^PXRMPT(810.1,+Y,0),U,3)=PXRMTYP"
"RTN","PXRMXTB",28,0)
 D ^DIC
"RTN","PXRMXTB",29,0)
 W !!,"1"
"RTN","PXRMXTB",30,0)
 I X="" S DUOUT=1
"RTN","PXRMXTB",31,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXTB",32,0)
 I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXTB",33,0)
 .I +Y'=-1 D  Q
"RTN","PXRMXTB",34,0)
 ..S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXTB",35,0)
 K DIC
"RTN","PXRMXTB",36,0)
 ;
"RTN","PXRMXTB",37,0)
 ;Load template into local array
"RTN","PXRMXTB",38,0)
 I (+Y'=-1)&('$D(DTOUT))&('$D(DUOUT)) D
"RTN","PXRMXTB",39,0)
 .L +^PXRMPT(810.1,$P(Y,U)):DILOCKTM
"RTN","PXRMXTB",40,0)
 .E  W !!?5,"Another user is editing this entry." S DUOUT=1 Q
"RTN","PXRMXTB",41,0)
 .;Load template into an array
"RTN","PXRMXTB",42,0)
 .S PXRMTMP=Y_U_$P(Y(0),U,2) D LOAD^PXRMXT
"RTN","PXRMXTB",43,0)
 .L -^PXRMPT(810.1,$P(PXRMTMP,U))
"RTN","PXRMXTB",44,0)
 .;Exit if problem loading template
"RTN","PXRMXTB",45,0)
 .I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXTB",46,0)
 .;Display Template information
"RTN","PXRMXTB",47,0)
 .D:'$D(MSG) ^PXRMXTD
"RTN","PXRMXTB",48,0)
EXIT Q
"RTN","PXRMXTB",49,0)
 ;
"RTN","PXRMXTB",50,0)
XREF ;       
"RTN","PXRMXTB",51,0)
 K MREF,XREF
"RTN","PXRMXTB",52,0)
 S XREF("NAME")=.01
"RTN","PXRMXTB",53,0)
 S XREF("TITLE")=1.9
"RTN","PXRMXTB",54,0)
 S XREF("PXRMTYP")=1.1
"RTN","PXRMXTB",55,0)
 S XREF("PXRMSEL")=1.2
"RTN","PXRMXTB",56,0)
 S XREF("PXRMPRIM")=1.3
"RTN","PXRMXTB",57,0)
 S XREF("PXRMREP")=1.4
"RTN","PXRMXTB",58,0)
 S XREF("PXRMLCSC")=1.5
"RTN","PXRMXTB",59,0)
 S XREF("PXRMFD")=1.6
"RTN","PXRMXTB",60,0)
 S XREF("PXRMPML")=1.7
"RTN","PXRMXTB",61,0)
 S XREF("PXRMPER")=1.8
"RTN","PXRMXTB",62,0)
 S XREF("PXRMREM")=2
"RTN","PXRMXTB",63,0)
 S XREF("PXRMFAC")=3
"RTN","PXRMXTB",64,0)
 S XREF("PXRMPRV")=4
"RTN","PXRMXTB",65,0)
 S XREF("RUN")=5
"RTN","PXRMXTB",66,0)
 S XREF("PXRMPAT")=6
"RTN","PXRMXTB",67,0)
 S XREF("PXRMOTM")=7
"RTN","PXRMXTB",68,0)
 S XREF("PXRMPCM")=8
"RTN","PXRMXTB",69,0)
 S XREF("PXRMSCAT")=9
"RTN","PXRMXTB",70,0)
 S XREF("PXRMLCHL")=10
"RTN","PXRMXTB",71,0)
 S XREF("PXRMCS")=11
"RTN","PXRMXTB",72,0)
 S XREF("PXRMCGRP")=12
"RTN","PXRMXTB",73,0)
 S XREF("PXRMRCAT")=13
"RTN","PXRMXTB",74,0)
 S XREF("PXRMLIST")=14
"RTN","PXRMXTB",75,0)
 S XREF("PXRMOWN")=15
"RTN","PXRMXTB",76,0)
 ;
"RTN","PXRMXTB",77,0)
 S MREF("REMINDER")=.01
"RTN","PXRMXTB",78,0)
 S MREF("PATIENT")=.01
"RTN","PXRMXTB",79,0)
 S MREF("PROVIDER")=.01
"RTN","PXRMXTB",80,0)
 S MREF("OERR TEAM")=.01
"RTN","PXRMXTB",81,0)
 S MREF("PCMM TEAM")=.01
"RTN","PXRMXTB",82,0)
 S MREF("FACILITY")=.01
"RTN","PXRMXTB",83,0)
 S MREF("SERVICE")=.01
"RTN","PXRMXTB",84,0)
 S MREF("LOCATION")=.01
"RTN","PXRMXTB",85,0)
 S MREF("STOP CODE")=.01
"RTN","PXRMXTB",86,0)
 S MREF("CLINIC GROUP")=.01
"RTN","PXRMXTB",87,0)
 S MREF("DISPLAY ORDER")=.02
"RTN","PXRMXTB",88,0)
 S MREF("REMINDER CATEGORY")=.01
"RTN","PXRMXTB",89,0)
 S MREF("DISPLAY")=.02
"RTN","PXRMXTB",90,0)
 S MREF("PXRMLIST")=.01
"RTN","PXRMXTB",91,0)
 Q
"SEC","^DIC",811.2,811.2,0,"AUDIT")
@
"SEC","^DIC",811.2,811.2,0,"DD")
@
"SEC","^DIC",811.2,811.2,0,"DEL")
@
"SEC","^DIC",811.2,811.2,0,"LAYGO")
@
"SEC","^DIC",811.2,811.2,0,"RD")

"SEC","^DIC",811.2,811.2,0,"WR")
@
"VER")
8.0^22.0
"^DD",801.41,801.41,0)
FIELD^^142^45
"^DD",801.41,801.41,0,"DDA")
N
"^DD",801.41,801.41,0,"DT")
3131104
"^DD",801.41,801.41,0,"ID",4)
W "   ",@("$P($P($C(59)_$S($D(^DD(801.41,4,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(801.41,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"IX","AC",801.41,111)

"^DD",801.41,801.41,0,"IX","AD",801.412,2)

"^DD",801.41,801.41,0,"IX","AG",801.41,2)

"^DD",801.41,801.41,0,"IX","TYPE",801.41,4)

"^DD",801.41,801.41,0,"NM","REMINDER DIALOG")

"^DD",801.41,801.41,0,"PT",801.41,118)

"^DD",801.41,801.41,0,"PT",801.41121,.01)

"^DD",801.41,801.41,0,"PT",801.412,2)

"^DD",801.41,801.41,0,"PT",801.422,.01)

"^DD",801.41,801.41,0,"PT",801.43,.04)

"^DD",801.41,801.41,0,"PT",801.4515,.01)

"^DD",801.41,801.41,0,"PT",811.9,51)

"^DD",801.41,801.41,0,"PT",8927,.15)

"^DD",801.41,801.41,0,"PT",21695.5,.02)

"^DD",801.41,801.41,0,"VRPK")
PXRM
"^DD",801.41,801.41,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(.X)) X
"^DD",801.41,801.41,.01,.1)

"^DD",801.41,801.41,.01,1,0)
^.1^^0
"^DD",801.41,801.41,.01,3)
Enter a 3-64 character name to represent this dialog entry.
"^DD",801.41,801.41,.01,21,0)
^.001^23^23^3090604^^^^
"^DD",801.41,801.41,.01,21,1,0)
This is the name of the dialog entry. 
"^DD",801.41,801.41,.01,21,2,0)

"^DD",801.41,801.41,.01,21,3,0)
Dialogs that are auto-generated from a reminder will default to the name of 
"^DD",801.41,801.41,.01,21,4,0)
the reminder for ease in identifying the reminder dialog entry. Dialog 
"^DD",801.41,801.41,.01,21,5,0)
elements that are auto-generated use the following naming convention:  
"^DD",801.41,801.41,.01,21,6,0)
Finding type prefix_ _Name from finding file_ _Resolution Status. Examples 
"^DD",801.41,801.41,.01,21,7,0)
of two dialog element entry names generated from an Exam file entry for 
"^DD",801.41,801.41,.01,21,8,0)
DIABETIC EYE EXAM follow.  
"^DD",801.41,801.41,.01,21,9,0)

"^DD",801.41,801.41,.01,21,10,0)
EX DIABETIC EYE EXAM DONE 
"^DD",801.41,801.41,.01,21,11,0)
EX DIABETIC EYE EXAM DONE ELSEWHERE 
"^DD",801.41,801.41,.01,21,12,0)
                                 
"^DD",801.41,801.41,.01,21,13,0)
Any item created locally can use any type of naming convention. Your site 
"^DD",801.41,801.41,.01,21,14,0)
may want to create special namespacing for dialog entries that you create 
"^DD",801.41,801.41,.01,21,15,0)
locally. 
"^DD",801.41,801.41,.01,21,16,0)

"^DD",801.41,801.41,.01,21,17,0)
Entries prefixed with PXRM are prompts, result groups, and result elements 
"^DD",801.41,801.41,.01,21,18,0)
that were distributed with the Clinical Reminders package. The PXRM-prefixed 
"^DD",801.41,801.41,.01,21,19,0)
prompts are the additional prompts that can be asked for particular types of 
"^DD",801.41,801.41,.01,21,20,0)
PCE findings and WH Notification Purpose. For example: PXRM COMMENT can be 
"^DD",801.41,801.41,.01,21,21,0)
added to any PCE file to allow the user to enter an additional COMMENT 
"^DD",801.41,801.41,.01,21,22,0)
beyond the dialog element's progress note text, and the PXRM LEVEL OF 
"^DD",801.41,801.41,.01,21,23,0)
UNDERSTANDING can only be used with PCE Education Topic findings.  
"^DD",801.41,801.41,.01,"DEL",1,0)
I $$OKTODEL^PXRMDLG6(DA)=0 D EN^DDIOL($C(7)_"IN USE - CANNOT BE DELETED")
"^DD",801.41,801.41,.01,"DT")
3090529
"^DD",801.41,801.41,2,0)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",801.41,801.41,2,1,0)
^.1
"^DD",801.41,801.41,2,1,1,0)
801.41^AG
"^DD",801.41,801.41,2,1,1,1)
S ^PXRMD(801.41,"AG",$E(X,1,30),DA)=""
"^DD",801.41,801.41,2,1,1,2)
K ^PXRMD(801.41,"AG",$E(X,1,30),DA)
"^DD",801.41,801.41,2,1,1,"%D",0)
^^1^1^2991217^
"^DD",801.41,801.41,2,1,1,"%D",1,0)
Index of dialogs by source reminder.
"^DD",801.41,801.41,2,1,1,"DT")
2991217
"^DD",801.41,801.41,2,3)
Enter the associated reminder for this reminder dialog.
"^DD",801.41,801.41,2,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,2,21,1,0)
This identifies which reminder definition is associated with this
"^DD",801.41,801.41,2,21,2,0)
"Reminder Dialog" entry.  "Reminder Dialog" type entries are the only
"^DD",801.41,801.41,2,21,3,0)
entries that require this field.
"^DD",801.41,801.41,2,"DT")
2991217
"^DD",801.41,801.41,3,0)
DISABLE^S^0:NO;1:DISABLE AND SEND MESSAGE;2:DISABLE AND DO NOT SEND MESSAGE;^0;3^Q
"^DD",801.41,801.41,3,3)
Select one of the DISABLE choices to disable the dialog item.
"^DD",801.41,801.41,3,21,0)
^.001^4^4^3090219^^^^
"^DD",801.41,801.41,3,21,1,0)
This field disables the use of a dialog item. If a dialog item is
"^DD",801.41,801.41,3,21,2,0)
marked as DISABLE AND SEND MESSAGE and a user tries to use it in
"^DD",801.41,801.41,3,21,3,0)
CPRS, a message will be sent to the Clinical Reminders mail group.
"^DD",801.41,801.41,3,21,4,0)

"^DD",801.41,801.41,3,"DT")
3090514
"^DD",801.41,801.41,4,0)
TYPE^RS^P:prompt;E:dialog element;R:reminder dialog;F:forced value;G:dialog group;S:result group;T:result element;^0;4^Q
"^DD",801.41,801.41,4,1,0)
^.1
"^DD",801.41,801.41,4,1,1,0)
801.41^TYPE
"^DD",801.41,801.41,4,1,1,1)
S ^PXRMD(801.41,"TYPE",$E(X,1,30),DA)=""
"^DD",801.41,801.41,4,1,1,2)
K ^PXRMD(801.41,"TYPE",$E(X,1,30),DA)
"^DD",801.41,801.41,4,1,1,"DT")
3070502
"^DD",801.41,801.41,4,3)
Specify a type for this entry.
"^DD",801.41,801.41,4,21,0)
80
"^DD",801.41,801.41,4,21,1,0)
This field defines what type of dialog component this entry is. The
"^DD",801.41,801.41,4,21,2,0)
type determines the processing that can occur with this entry. 
"^DD",801.41,801.41,4,21,3,0)
 
"^DD",801.41,801.41,4,21,4,0)
Reminder dialogs are the dialog entries that can be mapped to a
"^DD",801.41,801.41,4,21,5,0)
reminder definition. Reminder dialogs will typically contain several
"^DD",801.41,801.41,4,21,6,0)
dialog elements and/or dialog groups. 
"^DD",801.41,801.41,4,21,7,0)
 
"^DD",801.41,801.41,4,21,8,0)
Dialog elements that are auto-generated represent a finding item and
"^DD",801.41,801.41,4,21,9,0)
resolution status combination, based on the Finding Type Parameters for
"^DD",801.41,801.41,4,21,10,0)
auto-generation. The dialog elements can be defined manually if
"^DD",801.41,801.41,4,21,11,0)
needed. Dialog elements must have the FINDING ITEM field defined in
"^DD",801.41,801.41,4,21,12,0)
order to cause the finding to be updated automatically. When no
"^DD",801.41,801.41,4,21,13,0)
finding item is defined, the dialog element is treated as a header or
"^DD",801.41,801.41,4,21,14,0)
instruction text in the CPRS GUI. Sites can also add Additional Finding
"^DD",801.41,801.41,4,21,15,0)
items to automatically update when a dialog element is checked off. An
"^DD",801.41,801.41,4,21,16,0)
example of using the additional finding would be for a dialog element
"^DD",801.41,801.41,4,21,17,0)
for a diagnosis, that must always be recorded with a second diagnosis.
"^DD",801.41,801.41,4,21,18,0)
Another example is when an Exam or Education Topic dialog element
"^DD",801.41,801.41,4,21,19,0)
checked off should automatically add an additional ICD9 and/or CPT
"^DD",801.41,801.41,4,21,20,0)
finding to PCE.
"^DD",801.41,801.41,4,21,21,0)
 
"^DD",801.41,801.41,4,21,22,0)
Dialog elements will use the DIALOG/PROGRESS NOTE TEXT to display in
"^DD",801.41,801.41,4,21,23,0)
the CPRS GUI window. This text will also be added to the progress note,
"^DD",801.41,801.41,4,21,24,0)
unless the optional ALTERNATE PROGRESS NOTE TEXT field is defined. If
"^DD",801.41,801.41,4,21,25,0)
the dialog text to display to the user needs to be different from the
"^DD",801.41,801.41,4,21,26,0)
text to add to the progress note, use the ALTERNATE PROGRESS NOTE TEXT
"^DD",801.41,801.41,4,21,27,0)
field to define the progress note text.
"^DD",801.41,801.41,4,21,28,0)
 
"^DD",801.41,801.41,4,21,29,0)
Dialog Groups can be used to group dialog elements together. Groups
"^DD",801.41,801.41,4,21,30,0)
can be displayed with a box around them and have selection rules
"^DD",801.41,801.41,4,21,31,0)
applied to them (e.g., select one, one or more)  A dialog element can
"^DD",801.41,801.41,4,21,32,0)
be changed to a dialog group by changing its TYPE.
"^DD",801.41,801.41,4,21,33,0)
Prompts are distributed in the PXRM namespace to represent additional
"^DD",801.41,801.41,4,21,34,0)
fields that the user can enter when an element is checked off. Prompts
"^DD",801.41,801.41,4,21,35,0)
are added to dialog elements during auto-generation based on the
"^DD",801.41,801.41,4,21,36,0)
finding type parameters. The PXRM COMMENT field is a generic comment
"^DD",801.41,801.41,4,21,37,0)
field that can be used on all PCE related finding items. Dialog
"^DD",801.41,801.41,4,21,38,0)
elements for "DONE ELSEWHERE" need to require the historical visit date
"^DD",801.41,801.41,4,21,39,0)
prompt. The forced value is similar to a prompt, except it represents
"^DD",801.41,801.41,4,21,40,0)
a stuffed prompt which doesn't need to be presented to answer. The PXRM
"^DD",801.41,801.41,4,21,41,0)
prompts can be copied for local modification to create additional
"^DD",801.41,801.41,4,21,42,0)
forced value entries if necessary.
"^DD",801.41,801.41,4,21,43,0)
 
"^DD",801.41,801.41,4,21,44,0)
Prompts created locally (not copies of PXRM prompts) are treated as
"^DD",801.41,801.41,4,21,45,0)
display text with checkboxes, which, when checked off, add text to a
"^DD",801.41,801.41,4,21,46,0)
comment field which is added to the progress note text. Refer to these
"^DD",801.41,801.41,4,21,47,0)
as Local Comment Prompts.
"^DD",801.41,801.41,4,21,48,0)
 
"^DD",801.41,801.41,4,21,49,0)
Result Groups and Result Elements are distributed in the PXRM namespace
"^DD",801.41,801.41,4,21,50,0)
and are associated with Mental Health Instrument finding items during
"^DD",801.41,801.41,4,21,51,0)
auto-generation of a reminder dialog. When the mental health instrument
"^DD",801.41,801.41,4,21,52,0)
finding item dialog element is selected by the CPRS GUI user, a window
"^DD",801.41,801.41,4,21,53,0)
will be opened which contains the test's questions and probable answers.
"^DD",801.41,801.41,4,21,54,0)
The selected answers are sent to the mental health package when the
"^DD",801.41,801.41,4,21,55,0)
user selects OK. The mental health package returns the score and
"^DD",801.41,801.41,4,21,56,0)
results which can be used within sentences. These sentences are defined
"^DD",801.41,801.41,4,21,57,0)
as Result Elements, and can vary depending on the test score. If
"^DD",801.41,801.41,4,21,58,0)
multiple sentences are possible depending on the score, the result
"^DD",801.41,801.41,4,21,59,0)
elements should be defined in a result group. The result group should
"^DD",801.41,801.41,4,21,60,0)
be added to the mental health test's dialog elements RESULT
"^DD",801.41,801.41,4,21,61,0)
GROUP/ELEMENT field. Mental Health tests for use by Mental Health
"^DD",801.41,801.41,4,21,62,0)
clinicians only are not available for CPRS reminder resolution.
"^DD",801.41,801.41,4,21,63,0)
 
"^DD",801.41,801.41,4,21,64,0)
A reminder dialog can be made into a dialog group and added to another
"^DD",801.41,801.41,4,21,65,0)
reminder's dialog. This allows multiple reminders to be addressed by
"^DD",801.41,801.41,4,21,66,0)
one reminder dialog.
"^DD",801.41,801.41,4,21,67,0)
 
"^DD",801.41,801.41,4,21,68,0)
Reminder Dialogs can include dialog elements that don't have anything
"^DD",801.41,801.41,4,21,69,0)
to do with the findings defined in the reminder.
"^DD",801.41,801.41,4,21,70,0)
 
"^DD",801.41,801.41,4,21,71,0)
Taxonomy dialogs are auto-generated based on the Taxonomy Dialog
"^DD",801.41,801.41,4,21,72,0)
Parameters. The taxonomy dialog can be used as a black box that allows
"^DD",801.41,801.41,4,21,73,0)
the users to enter current or historical encounter diagnoses or
"^DD",801.41,801.41,4,21,74,0)
procedures, based on the selectable list of diagnosis parameters. 
"^DD",801.41,801.41,4,21,75,0)
Alternatively, a taxonomy can have individual dialog elements created
"^DD",801.41,801.41,4,21,76,0)
for each coded value in the selectable list of diagnoses and
"^DD",801.41,801.41,4,21,77,0)
procedures. It may be more useful for sites to create dialog elements
"^DD",801.41,801.41,4,21,78,0)
for the common diagnoses and procedures they actively use and add them
"^DD",801.41,801.41,4,21,79,0)
to groups, similar to the encounter form section and coded value
"^DD",801.41,801.41,4,21,80,0)
groupings.
"^DD",801.41,801.41,4,"DT")
3070502
"^DD",801.41,801.41,5,0)
CAPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,5,3)
Enter a caption to use for this component.
"^DD",801.41,801.41,5,21,0)
^.001^8^8^3131104^^^
"^DD",801.41,801.41,5,21,1,0)
The caption is used for prompt, dialog group, and reminder components.
"^DD",801.41,801.41,5,21,2,0)
When a prompt has a caption defined, this is the text that should be
"^DD",801.41,801.41,5,21,3,0)
used whenever the prompt is asked (e.g., Comment:). A dialog group can
"^DD",801.41,801.41,5,21,4,0)
use the caption field to specify a header to use on a box around the
"^DD",801.41,801.41,5,21,5,0)
group of dialog elements. The reminder dialog component can use the
"^DD",801.41,801.41,5,21,6,0)
caption to specify a header to use on a box around the dialog
"^DD",801.41,801.41,5,21,7,0)
elements for a reminder.
"^DD",801.41,801.41,5,21,8,0)

"^DD",801.41,801.41,5,"DT")
2990923
"^DD",801.41,801.41,6,0)
BOX^S^Y:YES;N:NO;^0;6^Q
"^DD",801.41,801.41,6,3)
Enter Y to add a box around the components.
"^DD",801.41,801.41,6,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,6,21,1,0)
This flag will be used to determine whether the components will be
"^DD",801.41,801.41,6,21,2,0)
presented to the user in a box. If the caption field is defined, it
"^DD",801.41,801.41,6,21,3,0)
will appear as header text in the top line of the box.
"^DD",801.41,801.41,6,"DT")
3040823
"^DD",801.41,801.41,7,0)
NUMBER OF INDENTS^NJ1,0^^0;7^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",801.41,801.41,7,3)
Enter the number of indents required (between 0 and 4).
"^DD",801.41,801.41,7,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.41,7,21,1,0)
This is the number of indents that should be made before presenting the
"^DD",801.41,801.41,7,21,2,0)
group's components/elements. Indent is used only for dialog groups.
"^DD",801.41,801.41,7,"DT")
2990923
"^DD",801.41,801.41,8,0)
SHARE COMMON PROMPTS^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.41,8,3)
Enter No if the common prompts must be prompted for each dialog element separately.
"^DD",801.41,801.41,8,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.41,8,21,1,0)
This field is used only for a dialog group where different dialog
"^DD",801.41,801.41,8,21,2,0)
elements have common prompts. Prompts will be shared for all dialog
"^DD",801.41,801.41,8,21,3,0)
elements unless otherwise selected.
"^DD",801.41,801.41,8,"DT")
2991124
"^DD",801.41,801.41,9,0)
GROUP ENTRY^SX^1:ONE SELECTION ONLY;2:ONE OR MORE SELECTIONS;3:NONE OR ONE SELECTION;4:ALL SELECTIONS ARE REQUIRED;0:NO SELECTION REQUIRED;^0;9^I '$$MSEL^PXRMDLG5(X) K X Q
"^DD",801.41,801.41,9,3)
Enter 1 for one selection only. Enter 2 for one or more. Enter 3 for none or one selection. Enter 4 to require all selections. Enter 0 for no selection required.
"^DD",801.41,801.41,9,21,0)
^.001^8^8^3060517^^^
"^DD",801.41,801.41,9,21,1,0)
Used for dialog groups only.
"^DD",801.41,801.41,9,21,2,0)
 
"^DD",801.41,801.41,9,21,3,0)
1 indicates that only one element in the dialog group may be selected.
"^DD",801.41,801.41,9,21,4,0)
2 indicates that one or more elements must be selected.
"^DD",801.41,801.41,9,21,5,0)
3 indicates that either none or one selection is required.
"^DD",801.41,801.41,9,21,6,0)
4 indicates all selections are required.
"^DD",801.41,801.41,9,21,7,0)
0 or null indicates no selection required.
"^DD",801.41,801.41,9,21,8,0)

"^DD",801.41,801.41,9,"DT")
3060517
"^DD",801.41,801.41,10,0)
COMPONENTS^801.412IA^^10;0
"^DD",801.41,801.41,10,21,0)
^.001^7^7^3050114^^^^
"^DD",801.41,801.41,10,21,1,0)
This field contains the components that are used to process a
"^DD",801.41,801.41,10,21,2,0)
reminder.  Generally the components relate to the TYPE of entry in the
"^DD",801.41,801.41,10,21,3,0)
Reminder Dialog File:
"^DD",801.41,801.41,10,21,4,0)
 
"^DD",801.41,801.41,10,21,5,0)
     Reminder dialogs have dialog group or dialog element components.
"^DD",801.41,801.41,10,21,6,0)
     Dialog groups have a combination of dialog element components.
"^DD",801.41,801.41,10,21,7,0)
     Dialog elements have prompt and forced value components.
"^DD",801.41,801.41,10,"DT")
2990923
"^DD",801.41,801.41,13,0)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"^DD",801.41,801.41,13,3)
Enter the resolution status to use when this item is selected.
"^DD",801.41,801.41,13,21,0)
^^2^2^2990628^
"^DD",801.41,801.41,13,21,1,0)
This field contains what type of resolution is represented by this
"^DD",801.41,801.41,13,21,2,0)
dialog entry.
"^DD",801.41,801.41,13,"DT")
2990628
"^DD",801.41,801.41,14,0)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"^DD",801.41,801.41,14,3)
Enter finding type if the additional prompt is intended for use with only one type of finding item.
"^DD",801.41,801.41,14,21,0)
^.001^17^17^3080413^^
"^DD",801.41,801.41,14,21,1,0)
1f an additional prompt is restricted to use with only one type of
"^DD",801.41,801.41,14,21,2,0)
finding item this field contains the mnemonic of the finding type. The
"^DD",801.41,801.41,14,21,3,0)
mnemonics allowed are:
"^DD",801.41,801.41,14,21,4,0)
 
"^DD",801.41,801.41,14,21,5,0)
   CPT  Procedure      
"^DD",801.41,801.41,14,21,6,0)
   ED   Education Topic
"^DD",801.41,801.41,14,21,7,0)
   EX   Exam
"^DD",801.41,801.41,14,21,8,0)
   HF   Health Factor
"^DD",801.41,801.41,14,21,9,0)
   IM   Immunization
"^DD",801.41,801.41,14,21,10,0)
   OI   Orderable Item
"^DD",801.41,801.41,14,21,11,0)
   POV  Diagnosis (ICD9) 
"^DD",801.41,801.41,14,21,12,0)
   ST   Skin Test
"^DD",801.41,801.41,14,21,13,0)
   VM   Vital Measurement
"^DD",801.41,801.41,14,21,14,0)
   WH   WH Notification Purpose
"^DD",801.41,801.41,14,21,15,0)
 
"^DD",801.41,801.41,14,21,16,0)
(e.g. PXRM Contraindicated is restricted to IMMUNIZATION, 
"^DD",801.41,801.41,14,21,17,0)
finding type IM)
"^DD",801.41,801.41,14,"DT")
3040823
"^DD",801.41,801.41,15,0)
FINDING ITEM^V^^1;5^Q
"^DD",801.41,801.41,15,3)
Enter the finding item for this dialog element.
"^DD",801.41,801.41,15,21,0)
^.001^3^3^3130724^^^^
"^DD",801.41,801.41,15,21,1,0)
This is the finding item that should be created if the dialog
"^DD",801.41,801.41,15,21,2,0)
element/group is checked in CPRS. Additional findings may be entered
"^DD",801.41,801.41,15,21,3,0)
into the additional findings field.
"^DD",801.41,801.41,15,"DT")
3120817
"^DD",801.41,801.41,15,"V",0)
^.12P^^10
"^DD",801.41,801.41,15,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^y^n
"^DD",801.41,801.41,15,"V",1,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.09,.DA)=1"
"^DD",801.41,801.41,15,"V",1,2)
File Screen
"^DD",801.41,801.41,15,"V",2,0)
9999999.14^IMMUNIZATION^10^IM^y^n
"^DD",801.41,801.41,15,"V",2,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.14,.DA)=1"
"^DD",801.41,801.41,15,"V",2,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",3,0)
9999999.28^SKIN TEST^15^ST^y^n
"^DD",801.41,801.41,15,"V",3,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.28,.DA)=1"
"^DD",801.41,801.41,15,"V",3,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",4,0)
9999999.15^EXAM^20^EX^y^n
"^DD",801.41,801.41,15,"V",4,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.15,.DA)=1"
"^DD",801.41,801.41,15,"V",4,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",5,0)
9999999.64^HEALTH FACTOR^25^HF^y^n
"^DD",801.41,801.41,15,"V",5,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.64,.DA)=1"
"^DD",801.41,801.41,15,"V",5,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",8,0)
120.51^VITAL TYPE^40^VM^y^n
"^DD",801.41,801.41,15,"V",8,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,120.51,.DA)=1"
"^DD",801.41,801.41,15,"V",8,2)
Only allows selections of valid Vital Types
"^DD",801.41,801.41,15,"V",9,0)
811.2^REMINDER TAXONOMY^45^TX^y^n
"^DD",801.41,801.41,15,"V",9,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,811.2,.DA)=1"
"^DD",801.41,801.41,15,"V",9,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",10,0)
101.41^ORDER DIALOG^50^Q^y^n
"^DD",801.41,801.41,15,"V",10,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,101.41,.DA)=1"
"^DD",801.41,801.41,15,"V",10,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",11,0)
601.71^MENTAL HEALTH^55^MH^y^n
"^DD",801.41,801.41,15,"V",11,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,601.71,.DA)=1"
"^DD",801.41,801.41,15,"V",11,2)
FILE SCREEN
"^DD",801.41,801.41,15,"V",12,0)
790.404^WH NOTIFICATION PURPOSE^60^WH^y^n
"^DD",801.41,801.41,15,"V",12,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,790.404,.DA)=1"
"^DD",801.41,801.41,15,"V",12,2)
FILE SCREEN
"^DD",801.41,801.41,17,0)
ORDERABLE ITEM^*P101.43'^ORD(101.43,^1;7^S DIC("S")="I $$FILESCR^PXRMDLG6(Y,101.43)=1" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",801.41,801.41,17,3)
Select an orderable item to be associated with the reminder dialog in CPRS.
"^DD",801.41,801.41,17,12)
This screen evaluates whether the orderable item file has been standardized. If it has been standardized then only an active entry can be attached to a reminder dialog.
"^DD",801.41,801.41,17,12.1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,101.43)=1"
"^DD",801.41,801.41,17,21,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,21,1,0)
Orderable item from the reminder definition.
"^DD",801.41,801.41,17,23,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,23,1,0)
This field is used only in the dialog display.
"^DD",801.41,801.41,17,"DT")
3090518
"^DD",801.41,801.41,18,0)
ADDITIONAL FINDINGS^801.4118AV^^3;0
"^DD",801.41,801.41,21,0)
DEFAULT VALUE^F^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,21,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,21,21,0)
^^8^8^3021213^
"^DD",801.41,801.41,21,21,1,0)
This is the default value for an additional prompt.
"^DD",801.41,801.41,21,21,2,0)
 
"^DD",801.41,801.41,21,21,3,0)
If entering defaults for the PXRM VISIT DATE prompt (or copies) then the
"^DD",801.41,801.41,21,21,4,0)
following codes are available:
"^DD",801.41,801.41,21,21,5,0)
 
"^DD",801.41,801.41,21,21,6,0)
  0  - no year is initially set (forces required dates to be entered).
"^DD",801.41,801.41,21,21,7,0)
  M  - Month is required.
"^DD",801.41,801.41,21,21,8,0)
  M0 - Month is required, no year initially set.
"^DD",801.41,801.41,21,"DT")
3021213
"^DD",801.41,801.41,22,0)
FORCED VALUE^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,22,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,22,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,22,21,1,0)
This is the value that will be used for a forced value type dialog.
"^DD",801.41,801.41,22,"DT")
2990714
"^DD",801.41,801.41,23,0)
EXCLUDE FROM PROGRESS NOTE^S^1:YES;0:NO;^2;3^Q
"^DD",801.41,801.41,23,3)
Enter Y to stop the question text being added to the progress note.
"^DD",801.41,801.41,23,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,23,21,1,0)
This field indicates that the question text of the dialog element will
"^DD",801.41,801.41,23,21,2,0)
be excluded from the progress note.
"^DD",801.41,801.41,23,"DT")
2991102
"^DD",801.41,801.41,24,0)
PROMPT CAPTION^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,24,3)
Enter a 3-30 character prompt caption.
"^DD",801.41,801.41,24,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,24,21,1,0)
This is the caption that will be used for this prompt.  This caption
"^DD",801.41,801.41,24,21,2,0)
can be overridden by the OVERRIDE PROMPT CAPTION field in the ITEMS
"^DD",801.41,801.41,24,21,3,0)
multiple, which can be more specific for the instance of the prompt.
"^DD",801.41,801.41,24,"DT")
3040823
"^DD",801.41,801.41,25,0)
DIALOG/PROGRESS NOTE TEXT^801.4125^^25;0
"^DD",801.41,801.41,25,21,0)
^.001^2^2^3000511^^
"^DD",801.41,801.41,25,21,1,0)
This is the sentence text that will appear in the reminder dialog and
"^DD",801.41,801.41,25,21,2,0)
progress note.
"^DD",801.41,801.41,25,"DT")
3000420
"^DD",801.41,801.41,35,0)
ALTERNATE PROGRESS NOTE TEXT^801.4135^^35;0
"^DD",801.41,801.41,35,21,0)
^.001^2^2^3000503^^^^
"^DD",801.41,801.41,35,21,1,0)
This field is only required if the text on the progress note differs
"^DD",801.41,801.41,35,21,2,0)
from the dialog text.
"^DD",801.41,801.41,35,"DT")
3000503
"^DD",801.41,801.41,45,0)
CHECKBOX SEQUENCE^801.4145I^^45;0
"^DD",801.41,801.41,45,21,0)
^.001^2^2^3020617^^^^
"^DD",801.41,801.41,45,21,1,0)
Comment prompts (with a GUI Process ID of COM) may have a number
"^DD",801.41,801.41,45,21,2,0)
of checkboxes associated with the comment prompt.
"^DD",801.41,801.41,45,"DT")
3010424
"^DD",801.41,801.41,46,0)
GUI PROCESS ID^P801.42'^PXRMD(801.42,^46;1^Q
"^DD",801.41,801.41,46,3)
Enter GUI Process ID for additional prompts and forced values.
"^DD",801.41,801.41,46,21,0)
^^4^4^3040823^^
"^DD",801.41,801.41,46,21,1,0)
Additional prompts and forced values which update PCE should have a
"^DD",801.41,801.41,46,21,2,0)
GUI Process ID. If an additional prompt or forced value is created by
"^DD",801.41,801.41,46,21,3,0)
copying one of the PXRM prompts, the GUI Process ID field will automatically
"^DD",801.41,801.41,46,21,4,0)
be populated by the copy process.
"^DD",801.41,801.41,46,"DT")
3040823
"^DD",801.41,801.41,50,0)
HIDE/SHOW GROUP^S^1:HIDE;0:SHOW;^0;10^Q
"^DD",801.41,801.41,50,3)
Enter HIDE or SHOW
"^DD",801.41,801.41,50,21,0)
^^4^4^2991124^
"^DD",801.41,801.41,50,21,1,0)
Used for dialog groups.
"^DD",801.41,801.41,50,21,2,0)
 
"^DD",801.41,801.41,50,21,3,0)
1 indicates that the group will be hidden until checked
"^DD",801.41,801.41,50,21,4,0)
0 indicates that the group will be displayed 
"^DD",801.41,801.41,50,"DT")
2991124
"^DD",801.41,801.41,51,0)
SUPPRESS CHECKBOX^S^1:SUPPRESS;^0;11^Q
"^DD",801.41,801.41,51,3)
Enter 1 if the WP text is for display only.
"^DD",801.41,801.41,51,21,0)
^^10^10^3050114^
"^DD",801.41,801.41,51,21,1,0)
If the field is set to SUPPRESS, the dialog element or group header will
"^DD",801.41,801.41,51,21,2,0)
be displayed without a checkbox. Otherwise the WP text will be
"^DD",801.41,801.41,51,21,3,0)
presented with a checkbox.
"^DD",801.41,801.41,51,21,4,0)
 
"^DD",801.41,801.41,51,21,5,0)
If the dialog element or group header has a finding item associated
"^DD",801.41,801.41,51,21,6,0)
with it the SUPPRESS CHECKBOX flag will be ignored.
"^DD",801.41,801.41,51,21,7,0)
 
"^DD",801.41,801.41,51,21,8,0)
Also if the HIDE/SHOW GROUP field is set to hide, then the SUPPRESS
"^DD",801.41,801.41,51,21,9,0)
CHECKBOX field will be ignored (the group header question must be a
"^DD",801.41,801.41,51,21,10,0)
checkbox).
"^DD",801.41,801.41,51,"DT")
3040823
"^DD",801.41,801.41,52,0)
INDENT PROGRESS NOTE TEXT^S^1:INDENT;0:NO INDENT;^0;12^Q
"^DD",801.41,801.41,52,3)
Enter 1 if the progress note text should be indented. Enter 0 if no indent is required.
"^DD",801.41,801.41,52,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,52,21,1,0)
In a dialog group the dialog questions may be indented. This field
"^DD",801.41,801.41,52,21,2,0)
allows the progress note text to be indented also.
"^DD",801.41,801.41,52,"DT")
3000110
"^DD",801.41,801.41,53,0)
RESULT CONDITION^FXO^^0;13^K:($L(X)<3)!($L(X)>40)!('$$VCOND^PXRMCOND(X)) X
"^DD",801.41,801.41,53,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,2.1)
S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,3)
Answer must be 3-40 characters in length.
"^DD",801.41,801.41,53,21,0)
^.001^8^8^3131104^^^^
"^DD",801.41,801.41,53,21,1,0)
This field is used for dialog result elements only. The result
"^DD",801.41,801.41,53,21,2,0)
condition determines if the progress note text of the result element
"^DD",801.41,801.41,53,21,3,0)
will be included in the progress note e.g., I SCORE<2 will insert the
"^DD",801.41,801.41,53,21,4,0)
text in the progress note if the SCORE from the mental health test is
"^DD",801.41,801.41,53,21,5,0)
below 2.
"^DD",801.41,801.41,53,21,6,0)

"^DD",801.41,801.41,53,21,7,0)
Result Elements will only use the Raw Score returned from a MH test.
"^DD",801.41,801.41,53,21,8,0)

"^DD",801.41,801.41,53,"DT")
3070620
"^DD",801.41,801.41,54,0)
EXCLUDE MH TEST FROM PN TEXT^S^1:YES;0:NO;^0;14^Q
"^DD",801.41,801.41,54,3)
Enter Y to stop the test questions from being added to the note text.
"^DD",801.41,801.41,54,21,0)
^.001^3^3^3040823^^^
"^DD",801.41,801.41,54,21,1,0)
This flag is used to control whether or not a mental health instrument
"^DD",801.41,801.41,54,21,2,0)
question will be excluded from the progress note text when the
"^DD",801.41,801.41,54,21,3,0)
component is acted upon.
"^DD",801.41,801.41,54,"DT")
3040823
"^DD",801.41,801.41,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",801.41,801.41,100,3)
Enter the class.
"^DD",801.41,801.41,100,21,0)
^.001^1^1^3010518^^
"^DD",801.41,801.41,100,21,1,0)
This is the class of dialog. National dialogs cannot be edited.
"^DD",801.41,801.41,100,"DT")
3010518
"^DD",801.41,801.41,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",801.41,801.41,101,3)
Enter the sponsor.
"^DD",801.41,801.41,101,21,0)
^^1^1^3010501^
"^DD",801.41,801.41,101,21,1,0)
This is the organization or group that sponsors this dialog.
"^DD",801.41,801.41,101,"DT")
3090707
"^DD",801.41,801.41,102,0)
REVIEW DATE^D^^100;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,102,3)
Enter the review date.
"^DD",801.41,801.41,102,21,0)
^^2^2^3050114^
"^DD",801.41,801.41,102,21,1,0)
The REVIEW DATE is used to determine when the dialog should be reviewed,
"^DD",801.41,801.41,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",801.41,801.41,102,"DT")
3010424
"^DD",801.41,801.41,110,0)
EDIT HISTORY^801.44D^^110;0
"^DD",801.41,801.41,110,21,0)
^.001^1^1^3010502^^
"^DD",801.41,801.41,110,21,1,0)
This multiple is used to record a history of changes to the dialog.
"^DD",801.41,801.41,111,0)
IDENTIFY^FX^^0;16^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,111,1,0)
^.1
"^DD",801.41,801.41,111,1,1,0)
801.41^AC
"^DD",801.41,801.41,111,1,1,1)
S ^PXRMD(801.41,"AC",$E(X,1,30),DA)=""
"^DD",801.41,801.41,111,1,1,2)
K ^PXRMD(801.41,"AC",$E(X,1,30),DA)
"^DD",801.41,801.41,111,1,1,"%D",0)
^^1^1^3030430^
"^DD",801.41,801.41,111,1,1,"%D",1,0)
"AC",IDENTIFY,DA
"^DD",801.41,801.41,111,1,1,"DT")
3030430
"^DD",801.41,801.41,111,3)
Short text to Identify dialog with module. Can only be modified by a Programmer.
"^DD",801.41,801.41,111,21,0)
^^5^5^3050114^
"^DD",801.41,801.41,111,21,1,0)
This field will associate a dialog with a package or module. Example: 
"^DD",801.41,801.41,111,21,2,0)
if the field contained the letters IHD, then this dialog would be part of the 
"^DD",801.41,801.41,111,21,3,0)
Ischemic Heart Disease project. If one dialog had IHD1 in this field and 
"^DD",801.41,801.41,111,21,4,0)
another had IHD2 located in this field, we would know that they were associated 
"^DD",801.41,801.41,111,21,5,0)
with each other and were both part of the same project.
"^DD",801.41,801.41,111,"DT")
3040823
"^DD",801.41,801.41,112,0)
PATIENT SPECIFIC^S^1:TRUE;0:FALSE;^0;17^Q
"^DD",801.41,801.41,112,3)

"^DD",801.41,801.41,112,4)
D BHELP^PXRMDLG5(4)
"^DD",801.41,801.41,112,21,0)
^^12^12^3050114^
"^DD",801.41,801.41,112,21,1,0)
This field is used to identify a Reminder Dialog that has branching logic 
"^DD",801.41,801.41,112,21,2,0)
defined in the dialog. It is used
"^DD",801.41,801.41,112,21,3,0)
in conjunction with three additional fields
"^DD",801.41,801.41,112,21,4,0)
(Reminder Term, Reminder Term Status, and Replacement Element/group) defined 
"^DD",801.41,801.41,112,21,5,0)
at the item level of the Reminder Dialog.
"^DD",801.41,801.41,112,21,6,0)
 
"^DD",801.41,801.41,112,21,7,0)
This field is used by CPRS to identify if the dialog set-up should be cached 
"^DD",801.41,801.41,112,21,8,0)
or re-built between every use. If the field is set to Yes,
"^DD",801.41,801.41,112,21,9,0)
then the dialog will
"^DD",801.41,801.41,112,21,10,0)
be re-loaded every time it is opened in CPRS. If the field is set to No or 
"^DD",801.41,801.41,112,21,11,0)
Null, the dialog set-up will be stored in CPRS the first time the dialog is 
"^DD",801.41,801.41,112,21,12,0)
loaded for the user.
"^DD",801.41,801.41,112,"DT")
3040823
"^DD",801.41,801.41,113,0)
MH TEST REQUIRED^S^0:Optional open and optional complete (partial complete possible);1:Required open and required complete before finish;2:Optional open and required complete or cancel before finish;^0;18^Q
"^DD",801.41,801.41,113,3)

"^DD",801.41,801.41,113,4)
D MHREQHLP^PXRMDLG5
"^DD",801.41,801.41,113,21,0)
^.001^25^25^3070912^^^^
"^DD",801.41,801.41,113,21,1,0)
The value defined in this field is used to control whether or not a
"^DD",801.41,801.41,113,21,2,0)
mental health (MH) test is required to open from the reminder
"^DD",801.41,801.41,113,21,3,0)
dialog, and whether the test must be completed before the reminder
"^DD",801.41,801.41,113,21,4,0)
dialog can be finished in CPRS.
"^DD",801.41,801.41,113,21,5,0)

"^DD",801.41,801.41,113,21,6,0)
If the value is 0, the user is not required to select/open the MH
"^DD",801.41,801.41,113,21,7,0)
test before the reminder dialog can be finished. 
"^DD",801.41,801.41,113,21,8,0)

"^DD",801.41,801.41,113,21,9,0)
If the value is 1, the user is required to select/open and complete
"^DD",801.41,801.41,113,21,10,0)
the MH test in the reminder dialog before the reminder dialog can be
"^DD",801.41,801.41,113,21,11,0)
finished. 
"^DD",801.41,801.41,113,21,12,0)

"^DD",801.41,801.41,113,21,13,0)
If the value is 2, the user is not required to select/open the MH
"^DD",801.41,801.41,113,21,14,0)
test in the reminder dialog; however, if the user opens the MH test,
"^DD",801.41,801.41,113,21,15,0)
then the user is required to complete or Cancel the MH test before
"^DD",801.41,801.41,113,21,16,0)
the reminder dialog can be finished. 
"^DD",801.41,801.41,113,21,17,0)

"^DD",801.41,801.41,113,21,18,0)
Clicking Cancel in the MH test dialog is considered the same as not
"^DD",801.41,801.41,113,21,19,0)
opening the MH test. 
"^DD",801.41,801.41,113,21,20,0)

"^DD",801.41,801.41,113,21,21,0)
A value of 2 only works with CPRS 27 and the YS_MHA.dll file. If 2
"^DD",801.41,801.41,113,21,22,0)
is used in a pre-CPRS 27 environment, the value of 2 will be
"^DD",801.41,801.41,113,21,23,0)
considered the same as the value 1.
"^DD",801.41,801.41,113,21,24,0)

"^DD",801.41,801.41,113,21,25,0)

"^DD",801.41,801.41,113,"DT")
3070731
"^DD",801.41,801.41,114,0)
LOCK^SX^0:NO;1:YES;^100;4^Q
"^DD",801.41,801.41,114,21,0)
^^4^4^3040823^^^
"^DD",801.41,801.41,114,21,1,0)
This field is used to "Lock" a reminder dialog, dialog element, and/or a 
"^DD",801.41,801.41,114,21,2,0)
dialog group from being copied and/or edited. It will prevent any copying 
"^DD",801.41,801.41,114,21,3,0)
and/or editing of a dialog element if a finding item is defined or if the 
"^DD",801.41,801.41,114,21,4,0)
only finding item defined for the element/group is an order. 
"^DD",801.41,801.41,114,"DT")
3040823
"^DD",801.41,801.41,116,0)
REMINDER TERM^P811.5'^PXRMD(811.5,^49;1^Q
"^DD",801.41,801.41,116,3)

"^DD",801.41,801.41,116,4)
D BHELP^PXRMDLG5(1)
"^DD",801.41,801.41,116,21,0)
^^5^5^3040823^^^
"^DD",801.41,801.41,116,21,1,0)
This field is a pointer to file 811.5. If a reminder term is defined in this 
"^DD",801.41,801.41,116,21,2,0)
field when the dialog is loaded by CPRS, the reminder term will be 
"^DD",801.41,801.41,116,21,3,0)
evaluated. The Reminder Term evaluation will return either a True of False 
"^DD",801.41,801.41,116,21,4,0)
value. The value returned by the Reminder Term evaluation is used in 
"^DD",801.41,801.41,116,21,5,0)
conjunction with the Reminder Term Status field.
"^DD",801.41,801.41,116,"DT")
3040823
"^DD",801.41,801.41,117,0)
REMINDER TERM STATUS^S^1:TRUE;0:FALSE;^49;2^Q
"^DD",801.41,801.41,117,3)

"^DD",801.41,801.41,117,4)
D BHELP^PXRMDLG5(2)
"^DD",801.41,801.41,117,21,0)
^^8^8^3040823^^^^
"^DD",801.41,801.41,117,21,1,0)
This field is used in conjunction with the Reminder Term field. It will be 
"^DD",801.41,801.41,117,21,2,0)
used to determine if a Reminder Dialog Element/Group should do a special 
"^DD",801.41,801.41,117,21,3,0)
action. When the Reminder Term is defined in field #116, the True/False 
"^DD",801.41,801.41,117,21,4,0)
result of the term evaluation will be compared to the value defined in this 
"^DD",801.41,801.41,117,21,5,0)
field. If the value matches the dialog, it will complete the action defined 
"^DD",801.41,801.41,117,21,6,0)
in field #118. If the reminder term evaluation value does not match the 
"^DD",801.41,801.41,117,21,7,0)
value defined in this field, the default action of the element/group is 
"^DD",801.41,801.41,117,21,8,0)
loaded into CPRS.
"^DD",801.41,801.41,117,"DT")
3040823
"^DD",801.41,801.41,118,0)
REPLACEMENT ELEMENT/GROUP^*P801.41'^PXRMD(801.41,^49;3^S DIC("S")="I ""EG""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,118,3)

"^DD",801.41,801.41,118,4)
D BHELP^PXRMDLG5(3)
"^DD",801.41,801.41,118,12)
Only active dialog elements or groups can be selected.
"^DD",801.41,801.41,118,12.1)
S DIC("S")="I ""EG""[$P(^(0),U,4)"
"^DD",801.41,801.41,118,21,0)
^.001^11^11^3050114^^^^
"^DD",801.41,801.41,118,21,1,0)
This field is used to determine if a dialog element/group should be replaced 
"^DD",801.41,801.41,118,21,2,0)
with another element/group or if the original element/group should be 
"^DD",801.41,801.41,118,21,3,0)
suppressed in the Dialog.  
"^DD",801.41,801.41,118,21,4,0)

"^DD",801.41,801.41,118,21,5,0)
If the Reminder Term defined in field #116 is evaluated and matches the 
"^DD",801.41,801.41,118,21,6,0)
value defined in field #117, then the dialog element/group will either be 
"^DD",801.41,801.41,118,21,7,0)
replaced or suppressed depending on the value defined in this field. This 
"^DD",801.41,801.41,118,21,8,0)
field points to file 801.41.  If there is an active element/group defined 
"^DD",801.41,801.41,118,21,9,0)
in this field, then the original dialog element/group will be replaced with 
"^DD",801.41,801.41,118,21,10,0)
the new dialog element/group. If this field is null, then the original 
"^DD",801.41,801.41,118,21,11,0)
dialog element/group will be suppressed in CPRS.
"^DD",801.41,801.41,118,"DT")
3050114
"^DD",801.41,801.41,119,0)
MH TEST^*P601.71'^YTT(601.71,^50;1^S DIC("S")="I $$FILESCR^PXRMDLG6(Y,601.71)=1" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",801.41,801.41,119,3)
Select a valid MH Test to associate with the result group. This MH test needs to match the MH Test assigned as the finding item that the result group will be attached to.
"^DD",801.41,801.41,119,12)
This screen evaluates whether file 601.71 has been standardized. If it has been standardized then only an active entry can be attached to a reminder dialog. This screen also calls a MH API to determine if the MH Test can be used in a dialog.
"^DD",801.41,801.41,119,12.1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,601.71)=1"
"^DD",801.41,801.41,119,21,0)
^.001^4^4^3131104^^^^
"^DD",801.41,801.41,119,21,1,0)
This field is used to assign a mental health test to a result group. The
"^DD",801.41,801.41,119,21,2,0)
value assigned to this field must match the mental health test assigned
"^DD",801.41,801.41,119,21,3,0)
to the dialog element finding item.
"^DD",801.41,801.41,119,21,4,0)

"^DD",801.41,801.41,119,"DT")
3131104
"^DD",801.41,801.41,120,0)
MH SCALE^NJ9,0X^^50;2^K:+X'=X!(X>999999999999999)!(X<1)!('$$VSCALED^PXRMMH(X,DA)) X
"^DD",801.41,801.41,120,3)

"^DD",801.41,801.41,120,4)
D SCHELPD^PXRMMH(DA)
"^DD",801.41,801.41,120,21,0)
^.001^4^4^3071004^^
"^DD",801.41,801.41,120,21,1,0)
This field stores the mental health scale number used when obtaining
"^DD",801.41,801.41,120,21,2,0)
a score for the mental health test defined in the MH Test field
"^DD",801.41,801.41,120,21,3,0)
#119.
"^DD",801.41,801.41,120,21,4,0)

"^DD",801.41,801.41,120,"DT")
3071003
"^DD",801.41,801.41,121,0)
RESULT GROUP LIST^801.41121P^^51;0
"^DD",801.41,801.41,121,21,0)
^.001^6^6^3071004^^^^
"^DD",801.41,801.41,121,21,1,0)
This multiple assigns one or more result groups to the MH Test 
"^DD",801.41,801.41,121,21,2,0)
finding item, field #119, for creating progress note text. The text
"^DD",801.41,801.41,121,21,3,0)
will change depending on the score of the MH Test. The score depends
"^DD",801.41,801.41,121,21,4,0)
on the scale defined in the MH Scale field, #120.
"^DD",801.41,801.41,121,21,5,0)

"^DD",801.41,801.41,121,21,6,0)

"^DD",801.41,801.41,121,"DT")
3070817
"^DD",801.41,801.41,123,0)
TAXONOMY PICK LIST^S^A:ALL;D:DIAGNOSIS ONLY;P:PROCEDURE ONLY;N:NO PICK LIST;^TAX;1^Q
"^DD",801.41,801.41,123,3)
Select how the taxonomy should display in CPRS.
"^DD",801.41,801.41,123,21,0)
^^11^11^3120823^
"^DD",801.41,801.41,123,21,1,0)
This field is used to determine how a Taxonomy should be display to an 
"^DD",801.41,801.41,123,21,2,0)
user in CPRS. A selection of:
"^DD",801.41,801.41,123,21,3,0)
 
"^DD",801.41,801.41,123,21,4,0)
  A: Displays two pick lists one for Diagnosis Codes and one for 
"^DD",801.41,801.41,123,21,5,0)
     procedure codes.
"^DD",801.41,801.41,123,21,6,0)
  D: Displays a pick list for Diagnosis Codes only. The procedures codes 
"^DD",801.41,801.41,123,21,7,0)
     will automatically be filed to VistA when the dialog is finish.
"^DD",801.41,801.41,123,21,8,0)
  P: Displays a pick list for Procedure Codes only. The diagnosis codes 
"^DD",801.41,801.41,123,21,9,0)
     will automatically be filed to VistA when the dialog is finish.
"^DD",801.41,801.41,123,21,10,0)
  N: Does not displays a pick list. Both the diagnosis and procedures 
"^DD",801.41,801.41,123,21,11,0)
     codes will be filed to VistA when the dialog is finish.
"^DD",801.41,801.41,123,"DT")
3130918
"^DD",801.41,801.41,141,0)
POV HEADER^F^^POV;1^K:$L(X)>80!($L(X)<3) X
"^DD",801.41,801.41,141,3)
Answer must be 3-80 characters in length.
"^DD",801.41,801.41,141,21,0)
^^2^2^3130606^
"^DD",801.41,801.41,141,21,1,0)
This field is used to set the diagnosis header text to display in CPRS 
"^DD",801.41,801.41,141,21,2,0)
when using a Taxonomy.
"^DD",801.41,801.41,141,"DT")
3130606
"^DD",801.41,801.41,142,0)
CPT HEADER^F^^CPT;1^K:$L(X)>80!($L(X)<3) X
"^DD",801.41,801.41,142,3)
Answer must be 3-80 characters in length.
"^DD",801.41,801.41,142,21,0)
^^2^2^3130606^
"^DD",801.41,801.41,142,21,1,0)
This field is used to set the Procedure Text to display in CPRS when 
"^DD",801.41,801.41,142,21,2,0)
using a Taxonomy.
"^DD",801.41,801.41,142,"DT")
3130606
"^DD",801.41,801.41121,0)
RESULT GROUP LIST SUB-FIELD^^.01^1
"^DD",801.41,801.41121,0,"DT")
3070817
"^DD",801.41,801.41121,0,"IX","B",801.41121,.01)

"^DD",801.41,801.41121,0,"NM","RESULT GROUP LIST")

"^DD",801.41,801.41121,0,"UP")
801.41
"^DD",801.41,801.41121,.01,0)
RESULT GROUP^M*P801.41'X^PXRMD(801.41,^0;1^S DIC("S")="I $$RGLSCR^PXRMDLG5(DA,X,Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41121,.01,1,0)
^.1^^-1
"^DD",801.41,801.41121,.01,1,1,0)
801.41121^B
"^DD",801.41,801.41121,.01,1,1,1)
S ^PXRMD(801.41,DA(1),51,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.41121,.01,1,1,2)
K ^PXRMD(801.41,DA(1),51,"B",$E(X,1,30),DA)
"^DD",801.41,801.41121,.01,12)
Only result groups associated with the selected MH test are allowed
"^DD",801.41,801.41121,.01,12.1)
S DIC("S")="I $$RGLSCR^PXRMDLG5(DA,X,Y)"
"^DD",801.41,801.41121,.01,21,0)
^.001^1^1^3070817^^^^
"^DD",801.41,801.41121,.01,21,1,0)

"^DD",801.41,801.41121,.01,"DT")
3090810
"^DD",801.41,801.4118,0)
ADDITIONAL FINDINGS SUB-FIELD^^.01^1
"^DD",801.41,801.4118,0,"DT")
3130321
"^DD",801.41,801.4118,0,"IX","B",801.4118,.01)

"^DD",801.41,801.4118,0,"NM","ADDITIONAL FINDINGS")

"^DD",801.41,801.4118,0,"UP")
801.41
"^DD",801.41,801.4118,.01,0)
ADDITIONAL FINDINGS^MV^^0;1^Q
"^DD",801.41,801.4118,.01,1,0)
^.1
"^DD",801.41,801.4118,.01,1,1,0)
801.4118^B
"^DD",801.41,801.4118,.01,1,1,1)
S ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4118,.01,1,1,2)
K ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801.41,801.4118,.01,1,1,3)
Required Index for Variable Pointer
"^DD",801.41,801.4118,.01,3)
Enter additional finding items for this dialog element.
"^DD",801.41,801.4118,.01,21,0)
^.001^3^3^3130724^^^^
"^DD",801.41,801.4118,.01,21,1,0)
If additional finding items should be posted if the dialog is checked
"^DD",801.41,801.4118,.01,21,2,0)
then they should be entered in this field. The field is relevant to
"^DD",801.41,801.4118,.01,21,3,0)
both dialog element and dialog group type records.
"^DD",801.41,801.4118,.01,"DT")
3130321
"^DD",801.41,801.4118,.01,"V",0)
^.12P^11^9
"^DD",801.41,801.4118,.01,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^y^n
"^DD",801.41,801.4118,.01,"V",1,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.09)=1"
"^DD",801.41,801.4118,.01,"V",1,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",2,0)
9999999.14^IMMUNIZATIONS^10^IM^y^n
"^DD",801.41,801.4118,.01,"V",2,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.14)=1"
"^DD",801.41,801.4118,.01,"V",2,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",3,0)
9999999.28^SKIN TEST^15^ST^y^n
"^DD",801.41,801.4118,.01,"V",3,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.28)=1"
"^DD",801.41,801.4118,.01,"V",3,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",4,0)
9999999.15^EXAM^20^EX^y^n
"^DD",801.41,801.4118,.01,"V",4,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.15)=1"
"^DD",801.41,801.4118,.01,"V",4,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",5,0)
9999999.64^HEALTH FACTORS^25^HF^y^n
"^DD",801.41,801.4118,.01,"V",5,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,9999999.64)=1"
"^DD",801.41,801.4118,.01,"V",5,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",8,0)
120.51^VITAL TYPE^40^VM^y^n
"^DD",801.41,801.4118,.01,"V",8,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,120.51)=1"
"^DD",801.41,801.4118,.01,"V",8,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",9,0)
101.41^ORDER DIALOG^45^Q^y^n
"^DD",801.41,801.4118,.01,"V",9,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,101.41)=1"
"^DD",801.41,801.4118,.01,"V",9,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",10,0)
790.404^WH NOTIFICATION PURPOSE^50^WH^y^n
"^DD",801.41,801.4118,.01,"V",10,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,790.404)=1"
"^DD",801.41,801.4118,.01,"V",10,2)
FILE SCREEN
"^DD",801.41,801.4118,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^y^n
"^DD",801.41,801.4118,.01,"V",11,1)
S DIC("S")="I $$FILESCR^PXRMDLG6(Y,811.2)=1"
"^DD",801.41,801.4118,.01,"V",11,2)
Screened out taxonomy without codes to be used a dialog.
"^DD",801.41,801.412,0)
COMPONENTS SUB-FIELD^^9^6
"^DD",801.41,801.412,0,"DT")
3120417
"^DD",801.41,801.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^PXRMD(801.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",801.41,801.412,0,"IX","B",801.412,.01)

"^DD",801.41,801.412,0,"IX","D",801.412,2)

"^DD",801.41,801.412,0,"IX","DAD1",801.412,.01)

"^DD",801.41,801.412,0,"NM","COMPONENTS")

"^DD",801.41,801.412,0,"UP")
801.41
"^DD",801.41,801.412,.01,0)
SEQUENCE^MNJ5,1X^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X I $G(X)]"" K:$D(^PXRMD(801.41,DA(1),10,"B",X)) X
"^DD",801.41,801.412,.01,1,0)
^.1^^-1
"^DD",801.41,801.412,.01,1,1,0)
801.412^B
"^DD",801.41,801.412,.01,1,1,1)
S ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.412,.01,1,1,2)
K ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.41,801.412,.01,1,2,0)
801.412^DAD1^MUMPS
"^DD",801.41,801.412,.01,1,2,1)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) S:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)=""
"^DD",801.41,801.412,.01,1,2,2)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) K:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)
"^DD",801.41,801.412,.01,1,2,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",801.41,801.412,.01,1,2,"DT")
2990624
"^DD",801.41,801.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",801.41,801.412,.01,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",801.41,801.412,.01,21,2,0)
processed.
"^DD",801.41,801.412,.01,"DT")
3010502
"^DD",801.41,801.412,2,0)
ITEM^R*P801.41'X^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.412,2,1,0)
^.1^^-1
"^DD",801.41,801.412,2,1,1,0)
801.41^AD
"^DD",801.41,801.412,2,1,1,1)
S ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",801.41,801.412,2,1,1,2)
K ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",801.41,801.412,2,1,1,"DT")
2950123
"^DD",801.41,801.412,2,1,2,0)
801.412^D
"^DD",801.41,801.412,2,1,2,1)
S ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",801.41,801.412,2,1,2,2)
K ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",801.41,801.412,2,1,2,"DT")
2950411
"^DD",801.41,801.412,2,3)
Enter a dialog; a dialog that is an ancestor may not also be a sub-item. The dialog type of the sub-item must be valid for the ancestor.
"^DD",801.41,801.412,2,12)
The item must be valid for this dialog type.
"^DD",801.41,801.412,2,12.1)
D SCREEN^PXRMDD41
"^DD",801.41,801.412,2,21,0)
^.001^3^3^3050114^^^^
"^DD",801.41,801.412,2,21,1,0)
This field points to a dialog which is subordinate to this dialog.
"^DD",801.41,801.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",801.41,801.412,2,21,3,0)
as an item.
"^DD",801.41,801.412,2,"DT")
3040823
"^DD",801.41,801.412,6,0)
OVERRIDE PROMPT CAPTION^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.412,6,3)
This is the caption that should override the prompt's default caption.
"^DD",801.41,801.412,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.412,6,21,1,0)
This text will override the caption for this component in the reminder
"^DD",801.41,801.412,6,21,2,0)
dialog, when the component is a prompt.  When the text is blank, the
"^DD",801.41,801.412,6,21,3,0)
caption from the prompt entry will be used.
"^DD",801.41,801.412,6,"DT")
2990923
"^DD",801.41,801.412,7,0)
START NEW LINE^S^1:YES;0:NO;^0;7^Q
"^DD",801.41,801.412,7,3)
Answer Y/N to control whether to prompt on a new line.
"^DD",801.41,801.412,7,21,0)
^.001^2^2^3010302^^
"^DD",801.41,801.412,7,21,1,0)
This flag is used to allow the user to have some control of the display
"^DD",801.41,801.412,7,21,2,0)
of prompts related to a dialog element.
"^DD",801.41,801.412,7,"DT")
2990923
"^DD",801.41,801.412,8,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.412,8,3)
Enter Y to stop the component activity from being added to the note text.
"^DD",801.41,801.412,8,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.412,8,21,1,0)
This flag is used to control whether or not a component will be
"^DD",801.41,801.412,8,21,2,0)
excluded from the progress note text when the component is acted upon.
"^DD",801.41,801.412,8,"DT")
2991102
"^DD",801.41,801.412,9,0)
REQUIRED^S^1:YES;0:NO;^0;9^Q
"^DD",801.41,801.412,9,"DT")
2991102
"^DD",801.41,801.4125,0)
DIALOG/PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4125,0,"DT")
2990628
"^DD",801.41,801.4125,0,"NM","DIALOG/PROGRESS NOTE TEXT")

"^DD",801.41,801.4125,0,"UP")
801.41
"^DD",801.41,801.4125,.01,0)
DIALOG/PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4125,.01,3)
Enter the lines that should be used in the Progress Note when this item is checked off.
"^DD",801.41,801.4125,.01,"DT")
3000503
"^DD",801.41,801.4135,0)
ALTERNATE PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4135,0,"DT")
3000209
"^DD",801.41,801.4135,0,"NM","ALTERNATE PROGRESS NOTE TEXT")

"^DD",801.41,801.4135,0,"UP")
801.41
"^DD",801.41,801.4135,.01,0)
ALTERNATE PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4135,.01,.1)

"^DD",801.41,801.4135,.01,3)
Enter text to appear on the progress note. Only required if the text on the progress note differs from the dialog text.
"^DD",801.41,801.4135,.01,21,0)
^^8^8^3000503^
"^DD",801.41,801.4135,.01,21,1,0)
This field is used to define an alternate text to add to the progress note
"^DD",801.41,801.4135,.01,21,2,0)
when the progress note text needs to be different from the dialog text.
"^DD",801.41,801.4135,.01,21,3,0)
(e.g., Dialog/Progress Note Text displayed is "Place Influenza Order", but
"^DD",801.41,801.4135,.01,21,4,0)
the Alternate Progress Note Text is "Ordered Influenza Vaccine at this
"^DD",801.41,801.4135,.01,21,5,0)
encounter.")
"^DD",801.41,801.4135,.01,21,6,0)
 
"^DD",801.41,801.4135,.01,21,7,0)
If there is no text in this alternate text field the dialog/progress note
"^DD",801.41,801.4135,.01,21,8,0)
text will be added to the progress note.
"^DD",801.41,801.4135,.01,"DT")
3000503
"^DD",801.41,801.4145,0)
CHECKBOX SUB-FIELD^^2^2
"^DD",801.41,801.4145,0,"DT")
3020617
"^DD",801.41,801.4145,0,"ID",2)
W "   ",$P(^(0),U,2)
"^DD",801.41,801.4145,0,"IX","B",801.4145,.01)

"^DD",801.41,801.4145,0,"NM","CHECKBOX SEQUENCE")

"^DD",801.41,801.4145,0,"UP")
801.41
"^DD",801.41,801.4145,.01,0)
CHECKBOX SEQUENCE^MNJ3,0X^^0;1^K:+X'=X!(X>500)!(X<1)!(X?.E1"."1N.N) X
"^DD",801.41,801.4145,.01,.1)

"^DD",801.41,801.4145,.01,1,0)
^.1
"^DD",801.41,801.4145,.01,1,1,0)
801.4145^B
"^DD",801.41,801.4145,.01,1,1,1)
S ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4145,.01,1,1,2)
K ^PXRMD(801.41,DA(1),45,"B",$E(X,1,30),DA)
"^DD",801.41,801.4145,.01,3)
Type a Number between 1 and 500, 0 Decimal Digits
"^DD",801.41,801.4145,.01,"DT")
3020617
"^DD",801.41,801.4145,2,0)
TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.4145,2,.1)

"^DD",801.41,801.4145,2,3)
Answer must be 3-30 characters in length.
"^DD",801.41,801.4145,2,"DT")
3010503
"^DD",801.41,801.44,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",801.41,801.44,0,"DT")
3010424
"^DD",801.41,801.44,0,"IX","B",801.44,.01)

"^DD",801.41,801.44,0,"NM","EDIT HISTORY")

"^DD",801.41,801.44,0,"UP")
801.41
"^DD",801.41,801.44,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.44,.01,1,0)
^.1
"^DD",801.41,801.44,.01,1,1,0)
801.44^B
"^DD",801.41,801.44,.01,1,1,1)
S ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.44,.01,1,1,2)
K ^PXRMD(801.41,DA(1),110,"B",$E(X,1,30),DA)
"^DD",801.41,801.44,.01,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",801.41,801.44,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",801.41,801.44,.01,"DT")
3010424
"^DD",801.41,801.44,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",801.41,801.44,1,21,0)
^^2^2^3010501^
"^DD",801.41,801.44,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",801.41,801.44,1,21,2,0)
and should not be changed by the user.
"^DD",801.41,801.44,1,"DT")
3010424
"^DD",801.41,801.44,2,0)
EDIT COMMENTS^801.442^^1;0
"^DD",801.41,801.44,2,21,0)
^.001^2^2^3010502^^
"^DD",801.41,801.44,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",801.41,801.44,2,21,2,0)
during the editing session.
"^DD",801.41,801.44,2,"DT")
3010425
"^DD",801.41,801.442,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",801.41,801.442,0,"DT")
3010424
"^DD",801.41,801.442,0,"NM","EDIT COMMENTS")

"^DD",801.41,801.442,0,"UP")
801.44
"^DD",801.41,801.442,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",801.41,801.442,.01,3)
Enter your edit comments.
"^DD",801.41,801.442,.01,"DT")
3010425
"^DD",801.45,801.45,0)
FIELD^^1^3
"^DD",801.45,801.45,0,"DDA")
N
"^DD",801.45,801.45,0,"DT")
2991213
"^DD",801.45,801.45,0,"IX","B",801.45,.01)

"^DD",801.45,801.45,0,"NM","REMINDER FINDING TYPE PARAMETER")

"^DD",801.45,801.45,0,"PT",801.41,14)

"^DD",801.45,801.45,0,"VRPK")
PXRM
"^DD",801.45,801.45,.01,0)
FILE ID^RFI^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",801.45,801.45,.01,1,0)
^.1
"^DD",801.45,801.45,.01,1,1,0)
801.45^B
"^DD",801.45,801.45,.01,1,1,1)
S ^PXRMD(801.45,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.45,.01,1,1,2)
K ^PXRMD(801.45,"B",$E(X,1,30),DA)
"^DD",801.45,801.45,.01,3)
Answer must be 1-10 characters in length.
"^DD",801.45,801.45,.01,21,0)
^^11^11^3000511^
"^DD",801.45,801.45,.01,21,1,0)
This is the type of finding. The options are:
"^DD",801.45,801.45,.01,21,2,0)
 
"^DD",801.45,801.45,.01,21,3,0)
   CPT  Procedure 
"^DD",801.45,801.45,.01,21,4,0)
   ED   Education
"^DD",801.45,801.45,.01,21,5,0)
   EX   Examination
"^DD",801.45,801.45,.01,21,6,0)
   HF   Health Factor
"^DD",801.45,801.45,.01,21,7,0)
   IM   Immunization
"^DD",801.45,801.45,.01,21,8,0)
   OI   Orderable Item
"^DD",801.45,801.45,.01,21,9,0)
   POV  Diagnosis 
"^DD",801.45,801.45,.01,21,10,0)
   ST   Skin Test
"^DD",801.45,801.45,.01,21,11,0)
   VM   Vital Measurement
"^DD",801.45,801.45,.01,"DT")
3000530
"^DD",801.45,801.45,.02,0)
RELATED GUI PROCESS^P801.42'^PXRMD(801.42,^0;2^Q
"^DD",801.45,801.45,.02,3)
Enter the GUI process that will process this type of finding.
"^DD",801.45,801.45,.02,21,0)
^^1^1^2991101^
"^DD",801.45,801.45,.02,21,1,0)
This is the GUI process that supports processing of this type of finding.
"^DD",801.45,801.45,.02,"DT")
2991101
"^DD",801.45,801.45,1,0)
RESOLUTION STATUS DEFAULTS^801.451P^^1;0
"^DD",801.45,801.45,1,21,0)
^.001^3^3^3000505^^^^
"^DD",801.45,801.45,1,21,1,0)
This multiple allows unique criteria to be set
"^DD",801.45,801.45,1,21,2,0)
for default auto-generation of findings text
"^DD",801.45,801.45,1,21,3,0)
to use to create a default reminder dialog.
"^DD",801.45,801.45,1,"DT")
2991029
"^DD",801.45,801.451,0)
RESOLUTION STATUS DEFAULTS SUB-FIELD^^5^5
"^DD",801.45,801.451,0,"DT")
2991213
"^DD",801.45,801.451,0,"IX","B",801.451,.01)

"^DD",801.45,801.451,0,"NM","RESOLUTION STATUS DEFAULTS")

"^DD",801.45,801.451,0,"UP")
801.45
"^DD",801.45,801.451,.01,0)
RESOLUTION STATUS^MRP801.9'I^PXRMD(801.9,^0;1^Q
"^DD",801.45,801.451,.01,1,0)
^.1
"^DD",801.45,801.451,.01,1,1,0)
801.451^B
"^DD",801.45,801.451,.01,1,1,1)
S ^PXRMD(801.45,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.451,.01,1,1,2)
K ^PXRMD(801.45,DA(1),1,"B",$E(X,1,30),DA)
"^DD",801.45,801.451,.01,3)
Enter the resolution status that should have default parameters.
"^DD",801.45,801.451,.01,21,0)
^^2^2^2990902^
"^DD",801.45,801.451,.01,21,1,0)
This multiple is used to allow default parameters to be defined for
"^DD",801.45,801.451,.01,21,2,0)
each file and resolution status combination.
"^DD",801.45,801.451,.01,"DT")
3000530
"^DD",801.45,801.451,1,0)
DISABLE RESOLUTION STATUS^S^1:DISABLED;^0;2^Q
"^DD",801.45,801.451,1,3)
Enter 1 to disable sentence generation for this status and finding type.
"^DD",801.45,801.451,1,21,0)
^^2^2^2991101^^^^
"^DD",801.45,801.451,1,21,1,0)
This Y/N flag determines whether a sentence will be generated to represent
"^DD",801.45,801.451,1,21,2,0)
this resolution status within the finding type.
"^DD",801.45,801.451,1,"DT")
2991101
"^DD",801.45,801.451,3,0)
PREFIX TEXT^F^^3;1^K:$L(X)>150!($L(X)<3) X
"^DD",801.45,801.451,3,3)
Answer must be 3-150 characters in length.
"^DD",801.45,801.451,3,21,0)
^^1^1^2990902^
"^DD",801.45,801.451,3,21,1,0)
This is the text to add to the front of the name of the finding item.
"^DD",801.45,801.451,3,"DT")
2990902
"^DD",801.45,801.451,4,0)
SUFFIX TEXT^F^^4;1^K:$L(X)>150!($L(X)<1) X
"^DD",801.45,801.451,4,3)
Answer must be 1-150 characters in length.
"^DD",801.45,801.451,4,21,0)
^^2^2^2991213^^^
"^DD",801.45,801.451,4,21,1,0)
This is the text that will be added to the sentence after the finding
"^DD",801.45,801.451,4,21,2,0)
item name.
"^DD",801.45,801.451,4,"DT")
2991213
"^DD",801.45,801.451,5,0)
ADDITIONAL PROMPTS^801.4515P^^5;0
"^DD",801.45,801.451,5,12)
Only prompts or forced values allowed
"^DD",801.45,801.451,5,12.1)
S DIC("S")="I ""PF""[$P(^(0),U,4)"
"^DD",801.45,801.451,5,21,0)
^^2^2^2991102^^
"^DD",801.45,801.451,5,21,1,0)
These are the additional prompts that should be asked for the finding type
"^DD",801.45,801.451,5,21,2,0)
and resolution status.
"^DD",801.45,801.4515,0)
ADDITIONAL PROMPTS SUB-FIELD^^6^7
"^DD",801.45,801.4515,0,"DT")
2991101
"^DD",801.45,801.4515,0,"IX","B",801.4515,.01)

"^DD",801.45,801.4515,0,"NM","ADDITIONAL PROMPTS")

"^DD",801.45,801.4515,0,"UP")
801.451
"^DD",801.45,801.4515,.01,0)
ADDITIONAL PROMPTS^M*P801.41'^PXRMD(801.41,^0;1^S DIC("S")="I ""PF""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.45,801.4515,.01,1,0)
^.1
"^DD",801.45,801.4515,.01,1,1,0)
801.4515^B
"^DD",801.45,801.4515,.01,1,1,1)
S ^PXRMD(801.45,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.4515,.01,1,1,2)
K ^PXRMD(801.45,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",801.45,801.4515,.01,3)
Enter the additional prompts to ask for this resolution type.
"^DD",801.45,801.4515,.01,21,0)
^^3^3^2990902^
"^DD",801.45,801.4515,.01,21,1,0)
This multiple allows prompts to be identified
"^DD",801.45,801.4515,.01,21,2,0)
for including in the default auto-generation
"^DD",801.45,801.4515,.01,21,3,0)
process for the reminder finding type.
"^DD",801.45,801.4515,.01,"DT")
2990902
"^DD",801.45,801.4515,1,0)
REQUIRED^S^1:REQUIRED;^0;2^Q
"^DD",801.45,801.4515,1,3)
Enter 1 to make this prompt be required to answer.
"^DD",801.45,801.4515,1,21,0)
^^1^1^2991101^^
"^DD",801.45,801.4515,1,21,1,0)
Required additional prompts may not be disabled.
"^DD",801.45,801.4515,1,"DT")
2991101
"^DD",801.45,801.4515,2,0)
DISABLE ADDITIONAL PROMPT^SX^1:DISABLE;^0;3^I $P(^PXRMD(801.45,DA(2),1,DA(1),5,DA,0),U,2) K X
"^DD",801.45,801.4515,2,3)
Enter 1 to disable additional prompt.
"^DD",801.45,801.4515,2,21,0)
^^3^3^2990903^^^^
"^DD",801.45,801.4515,2,21,1,0)
Disabled additional prompts will be ignored in dialog auto generation.
"^DD",801.45,801.4515,2,21,2,0)
 
"^DD",801.45,801.4515,2,21,3,0)
Mandatory additional prompts cannot be disabled.
"^DD",801.45,801.4515,2,"DT")
2990903
"^DD",801.45,801.4515,3,0)
SEQUENCE^NJ1,0^^0;4^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",801.45,801.4515,3,3)
Type a number from 1-9 for the sequence to present the prompt.
"^DD",801.45,801.4515,3,21,0)
^^3^3^2991101^
"^DD",801.45,801.4515,3,21,1,0)
This field allows the sequence of the prompts to be specified.  If they
"^DD",801.45,801.4515,3,21,2,0)
are not specified here, the prompts will be in the sequence they appear 
"^DD",801.45,801.4515,3,21,3,0)
in the additional prompts multiple.
"^DD",801.45,801.4515,3,"DT")
2991101
"^DD",801.45,801.4515,4,0)
OVERRIDE PROMPT CAPTION^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",801.45,801.4515,4,3)
Enter the caption to use for this particular prompt.
"^DD",801.45,801.4515,4,21,0)
^^1^1^2991101^
"^DD",801.45,801.4515,4,21,1,0)
This field defines the caption that will be presented with this prompt.
"^DD",801.45,801.4515,4,"DT")
2991101
"^DD",801.45,801.4515,5,0)
START NEW LINE^S^1:YES;0:NO;^0;6^Q
"^DD",801.45,801.4515,5,3)
Enter 1 to have the prompt asked on a new line.
"^DD",801.45,801.4515,5,21,0)
^^2^2^2991101^
"^DD",801.45,801.4515,5,21,1,0)
The additional prompts can all appear on the same line, or be defined
"^DD",801.45,801.4515,5,21,2,0)
for new line presentation by the coordinator.
"^DD",801.45,801.4515,5,"DT")
2991101
"^DD",801.45,801.4515,6,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;7^Q
"^DD",801.45,801.4515,6,3)
Enter 1 to include the prompt information in the progress note.
"^DD",801.45,801.4515,6,21,0)
^^2^2^2991102^^
"^DD",801.45,801.4515,6,21,1,0)
This field controls whether the prompt and answer will be added to the
"^DD",801.45,801.4515,6,21,2,0)
progress note text.
"^DD",801.45,801.4515,6,"DT")
2991102
"^DD",802.4,802.4,0)
FIELD^^3^11
"^DD",802.4,802.4,0,"DDA")
N
"^DD",802.4,802.4,0,"DT")
3100917
"^DD",802.4,802.4,0,"NM","REMINDER FUNCTION FINDING FUNCTIONS")

"^DD",802.4,802.4,0,"PT",811.9255,.02)

"^DD",802.4,802.4,0,"VRPK")
PXRM
"^DD",802.4,802.4,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",802.4,802.4,.01,1,0)
^.1^^0
"^DD",802.4,802.4,.01,3)
Answer must be 2-30 characters in length.
"^DD",802.4,802.4,.01,21,0)
^.001^1^1^3040712^^
"^DD",802.4,802.4,.01,21,1,0)
This is the name of the function finding.
"^DD",802.4,802.4,.01,"DT")
3040712
"^DD",802.4,802.4,.02,0)
ENTRY^RF^^0;2^K:$L(X)>8!($L(X)<2) X
"^DD",802.4,802.4,.02,3)
Answer must be 2-8 characters in length.
"^DD",802.4,802.4,.02,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,.02,21,1,0)
This is the entry point in the routine specified in the ROUTINE field. 
"^DD",802.4,802.4,.02,"DT")
3030131
"^DD",802.4,802.4,.03,0)
ROUTINE^RF^^0;3^K:$L(X)>8!($L(X)<3) X
"^DD",802.4,802.4,.03,3)
Enter the M routine name
"^DD",802.4,802.4,.03,21,0)
^^3^3^3030131^
"^DD",802.4,802.4,.03,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",802.4,802.4,.03,21,2,0)
function finding. The entry point to use is specified in the ENTRY
"^DD",802.4,802.4,.03,21,3,0)
POINT field.
"^DD",802.4,802.4,.03,"DT")
3030131
"^DD",802.4,802.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",802.4,802.4,.04,3)
Answer must be 1-40 characters in length.
"^DD",802.4,802.4,.04,"DT")
3030131
"^DD",802.4,802.4,1,0)
DESCRIPTION^802.41^^1;0
"^DD",802.4,802.4,1,21,0)
^.001^1^1^3030723^^
"^DD",802.4,802.4,1,21,1,0)
This is the description of the function finding.
"^DD",802.4,802.4,2,0)
ARGUMENT PATTERN^F^^2;1^K:$L(X)>128!($L(X)<2) X
"^DD",802.4,802.4,2,3)
Answer must be 2-128 characters in length.
"^DD",802.4,802.4,2,21,0)
^.001^8^8^3110621^^^^
"^DD",802.4,802.4,2,21,1,0)
This is a standard MUMPS pattern that is used to verify that the
"^DD",802.4,802.4,2,21,2,0)
argument list for the function has the correct format. This is used
"^DD",802.4,802.4,2,21,3,0)
when verification is done optimally by a single pattern. ARGUMENT
"^DD",802.4,802.4,2,21,4,0)
PATTERNS (#3) field is used when verification is better done with a
"^DD",802.4,802.4,2,21,5,0)
separate pattern for each argument.
"^DD",802.4,802.4,2,21,6,0)

"^DD",802.4,802.4,2,21,7,0)

"^DD",802.4,802.4,2,21,8,0)

"^DD",802.4,802.4,2,"DT")
3100917
"^DD",802.4,802.4,3,0)
ARGUMENT PATTERNS^F^^3;1^K:$L(X)>128!($L(X)<2) X
"^DD",802.4,802.4,3,3)
Answer must be 2-128 characters in length.
"^DD",802.4,802.4,3,21,0)
^.001^6^6^3110620^^
"^DD",802.4,802.4,3,21,1,0)
This is a list of standard MUMPS patterns that are used to verify that each
"^DD",802.4,802.4,3,21,2,0)
argument in the function argument list has the correct form. The patterns for
"^DD",802.4,802.4,3,21,3,0)
each argument are separated by the "~" character. The ARGUMENT PATTERN (#2)
"^DD",802.4,802.4,3,21,4,0)
field is used when verification is better done with a single pattern.
"^DD",802.4,802.4,3,21,5,0)

"^DD",802.4,802.4,3,21,6,0)

"^DD",802.4,802.4,3,"DT")
3100917
"^DD",802.4,802.4,100,0)
CLASS^RS^N:NATIONAL;V:VISN;L:LOCAL;^100;1^Q
"^DD",802.4,802.4,100,3)
Enter the class
"^DD",802.4,802.4,100,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,100,21,1,0)
This is the class of the function finding.
"^DD",802.4,802.4,100,"DT")
3030131
"^DD",802.4,802.4,101,0)
SPONSOR^P811.6'^PXRMD(811.6,^100;2^Q
"^DD",802.4,802.4,101,3)
Enter the sponsor
"^DD",802.4,802.4,101,21,0)
^^1^1^3030131^
"^DD",802.4,802.4,101,21,1,0)
This is the organization or group that sponsors this function finding.
"^DD",802.4,802.4,101,"DT")
3030131
"^DD",802.4,802.4,102,0)
REVIEW DATE^D^^100;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",802.4,802.4,102,3)
Enter the review date
"^DD",802.4,802.4,102,21,0)
^^3^3^3030131^
"^DD",802.4,802.4,102,21,1,0)
The REVIEW DATE is used to determine when the function finding should be
"^DD",802.4,802.4,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",802.4,802.4,102,21,3,0)
guidelines.  
"^DD",802.4,802.4,102,"DT")
3030131
"^DD",802.4,802.4,110,0)
EDIT HISTORY^802.42DA^^110;0
"^DD",802.4,802.4,110,21,0)
^^2^2^3030131^
"^DD",802.4,802.4,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",802.4,802.4,110,21,2,0)
function finding.
"^DD",802.4,802.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",802.4,802.41,0,"DT")
3021120
"^DD",802.4,802.41,0,"NM","DESCRIPTION")

"^DD",802.4,802.41,0,"UP")
802.4
"^DD",802.4,802.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",802.4,802.41,.01,3)
Enter the description of the functional finding
"^DD",802.4,802.41,.01,"DT")
3021120
"^DD",802.4,802.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",802.4,802.42,0,"DT")
3021120
"^DD",802.4,802.42,0,"IX","B",802.42,.01)

"^DD",802.4,802.42,0,"NM","EDIT HISTORY")

"^DD",802.4,802.42,0,"UP")
802.4
"^DD",802.4,802.42,.01,0)
EDIT DATE^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",802.4,802.42,.01,1,0)
^.1
"^DD",802.4,802.42,.01,1,1,0)
802.42^B
"^DD",802.4,802.42,.01,1,1,1)
S ^PXRMD(802.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",802.4,802.42,.01,1,1,2)
K ^PXRMD(802.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",802.4,802.42,.01,21,0)
^^2^2^3021120^
"^DD",802.4,802.42,.01,21,1,0)
This is the date and time when editing was done. This field is set
"^DD",802.4,802.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",802.4,802.42,.01,"DT")
3021120
"^DD",802.4,802.42,1,0)
EDIT BY^P200'^VA(200,^110;1^Q
"^DD",802.4,802.42,1,21,0)
^^3^3^3021120^
"^DD",802.4,802.42,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",802.4,802.42,1,21,2,0)
and should not be changed by the user.  
"^DD",802.4,802.42,1,21,3,0)

"^DD",802.4,802.42,1,"DT")
3021120
"^DD",802.4,802.42,2,0)
EDIT COMMENTS^802.422^^1;0
"^DD",802.4,802.42,2,21,0)
^^3^3^3021120^
"^DD",802.4,802.42,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",802.4,802.42,2,21,2,0)
during the editing session.  
"^DD",802.4,802.42,2,21,3,0)

"^DD",802.4,802.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",802.4,802.422,0,"DT")
3021120
"^DD",802.4,802.422,0,"NM","EDIT COMMENTS")

"^DD",802.4,802.422,0,"UP")
802.42
"^DD",802.4,802.422,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",802.4,802.422,.01,"DT")
3021120
"^DD",811.2,811.2,0)
FIELD^^30^25
"^DD",811.2,811.2,0,"DDA")
N
"^DD",811.2,811.2,0,"DT")
3130716
"^DD",811.2,811.2,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.2,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.2,811.2,0,"NM","REMINDER TAXONOMY")

"^DD",811.2,811.2,0,"PT",801.41,15)

"^DD",811.2,811.2,0,"PT",801.4118,.01)

"^DD",811.2,811.2,0,"PT",810.31,.04)

"^DD",811.2,811.2,0,"PT",810.32,.01)

"^DD",811.2,811.2,0,"PT",811.3,.01)

"^DD",811.2,811.2,0,"PT",811.52,.01)

"^DD",811.2,811.2,0,"PT",811.902,.01)

"^DD",811.2,811.2,0,"SCR")
I $$WHFSCR^PXRMSCR(100,1)
"^DD",811.2,811.2,0,"VRPK")
PXRM
"^DD",811.2,811.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(.X)) X
"^DD",811.2,811.2,.01,1,0)
^.1^^0
"^DD",811.2,811.2,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.2,811.2,.01,21,0)
^.001^1^1^3130716^^^^
"^DD",811.2,811.2,.01,21,1,0)
This is the name of the taxonomy. It must be unique.
"^DD",811.2,811.2,.01,"DEL",1,0)
I $$INUSE^PXRMTAXD(DA,"DEL")
"^DD",811.2,811.2,.01,"DT")
3130716
"^DD",811.2,811.2,.02,0)
BRIEF DESCRIPTION^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.02,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.02,21,0)
^.001^3^3^3050120^^^^
"^DD",811.2,811.2,.02,21,1,0)
This is a brief description of what the taxonomy represents. It may be
"^DD",811.2,811.2,.02,21,2,0)
used to further define the intended use of this taxonomy. The Brief
"^DD",811.2,811.2,.02,21,3,0)
Description will be displayed as part of a taxonomy inquiry.
"^DD",811.2,811.2,.02,"DT")
3000502
"^DD",811.2,811.2,.03,0)
DIALOG HEADER TEXT^F^^0;3^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.03,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.03,21,0)
^.001^2^2^3050114^^^^
"^DD",811.2,811.2,.03,21,1,0)
This text will be displayed as a checkbox in the reminder dialog for this
"^DD",811.2,811.2,.03,21,2,0)
taxonomy.
"^DD",811.2,811.2,.03,"DT")
2991025
"^DD",811.2,811.2,1.6,0)
INACTIVE FLAG^S^1:INACTIVE;^0;6^Q
"^DD",811.2,811.2,1.6,3)
Enter a 1 to inactivate this taxonomy.
"^DD",811.2,811.2,1.6,21,0)
^.001^6^6^3050114^^^^
"^DD",811.2,811.2,1.6,21,1,0)
Enter "1" to inactivate the taxonomy.  This flag is set to ACTIVE in
"^DD",811.2,811.2,1.6,21,2,0)
the distribution. As part of the installation, each site should review
"^DD",811.2,811.2,1.6,21,3,0)
the taxonomy definitions and inactivate those that do not meet the
"^DD",811.2,811.2,1.6,21,4,0)
site's needs. If desired, a site can copy a distributed taxonomy, using
"^DD",811.2,811.2,1.6,21,5,0)
the taxonomy copy option, to a local version and edit it to meet the
"^DD",811.2,811.2,1.6,21,6,0)
site's needs.
"^DD",811.2,811.2,1.6,23,0)
^.001^2^2^3050114^^^^
"^DD",811.2,811.2,1.6,23,1,0)
This flag controls whether or not taxonomies may be selected as a
"^DD",811.2,811.2,1.6,23,2,0)
Clinical Reminder finding.
"^DD",811.2,811.2,1.6,"DT")
2960730
"^DD",811.2,811.2,2,0)
DESCRIPTION^811.22^^1;0
"^DD",811.2,811.2,2,21,0)
^.001^3^3^3140430^^^^
"^DD",811.2,811.2,2,21,1,0)
The DESCRIPTION is used to describe the purpose and usage of the
"^DD",811.2,811.2,2,21,2,0)
taxonomy.
"^DD",811.2,811.2,2,21,3,0)

"^DD",811.2,811.2,4,0)
PATIENT DATA SOURCE^FX^^0;4^S X=$$UP^XLFSTR(X) K:($L(X)>40)!($L(X)<1)!('$$VPDS^PXRMPDS(X)) X
"^DD",811.2,811.2,4,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.2,4,4)
D PDSXHELP^PXRMPDS
"^DD",811.2,811.2,4,21,0)
^.001^3^3^3130823^^^^
"^DD",811.2,811.2,4,21,1,0)
PATIENT DATA SOURCE refines the taxonomy search by specifying which
"^DD",811.2,811.2,4,21,2,0)
patient data sources are searched for matching codes.
"^DD",811.2,811.2,4,21,3,0)

"^DD",811.2,811.2,4,"DT")
3130528
"^DD",811.2,811.2,10,0)
USE INACTIVE PROBLEMS^S^1:YES;^0;9^Q
"^DD",811.2,811.2,10,3)
Enter YES if you want to use both active and inactive problems.
"^DD",811.2,811.2,10,21,0)
^.001^6^6^3050120^^^^
"^DD",811.2,811.2,10,21,1,0)
USE INACTIVE PROBLEMS applies only to searches in Problem List. Normally,
"^DD",811.2,811.2,10,21,2,0)
inactive problems are not used. However, when this field is set to YES,
"^DD",811.2,811.2,10,21,3,0)
then both active and inactive problems are used. This field works just
"^DD",811.2,811.2,10,21,4,0)
like the field with the same name that can be specified for a reminder
"^DD",811.2,811.2,10,21,5,0)
definition finding or a reminder term finding. The order of precedence
"^DD",811.2,811.2,10,21,6,0)
is taxonomy > term > definition.
"^DD",811.2,811.2,10,"DT")
3000403
"^DD",811.2,811.2,15,0)
PRIORITY LIST^FX^^15;1^K:$L(X)>3!($L(X)<1)!('$$VPRIOL^PXRMINTR(.X)) X
"^DD",811.2,811.2,15,3)
Answer must be 1-3 characters in length.
"^DD",811.2,811.2,15,21,0)
^^12^12^3120724^
"^DD",811.2,811.2,15,21,1,0)
This field applies only to Problem List searches. It can be used to
"^DD",811.2,811.2,15,21,2,0)
limit the problems that are included to those with the listed
"^DD",811.2,811.2,15,21,3,0)
priorities. The possible values are:
"^DD",811.2,811.2,15,21,4,0)
 A - acute
"^DD",811.2,811.2,15,21,5,0)
 C - chronic
"^DD",811.2,811.2,15,21,6,0)
 U - undefined
"^DD",811.2,811.2,15,21,7,0)

"^DD",811.2,811.2,15,21,8,0)
Any combination of these letters can be used. For example, 'A' would
"^DD",811.2,811.2,15,21,9,0)
limit the search to acute problems. 'CU' would include chronic
"^DD",811.2,811.2,15,21,10,0)
problems and those whose priority is undefined. If this field is
"^DD",811.2,811.2,15,21,11,0)
left blank then all priorities will be included.
"^DD",811.2,811.2,15,21,12,0)

"^DD",811.2,811.2,15,"DT")
3120724
"^DD",811.2,811.2,20,0)
SELECTED CODES^811.23A^^20;0
"^DD",811.2,811.2,20,21,0)
^.001^10^10^3140430^^^^
"^DD",811.2,811.2,20,21,1,0)
The SELECTED CODES multiple stores the codes selected by the user to
"^DD",811.2,811.2,20,21,2,0)
be in the taxonomy. The storage hierarchy is:
"^DD",811.2,811.2,20,21,3,0)
 Term/Code
"^DD",811.2,811.2,20,21,4,0)
  Coding system
"^DD",811.2,811.2,20,21,5,0)
   Code
"^DD",811.2,811.2,20,21,6,0)

"^DD",811.2,811.2,20,21,7,0)
Term/Code and coding system are passed to Lexicon, which returns a
"^DD",811.2,811.2,20,21,8,0)
list of matching codes. The user selects the codes to be included in
"^DD",811.2,811.2,20,21,9,0)
the taxonomy from the list.
"^DD",811.2,811.2,20,21,10,0)

"^DD",811.2,811.2,20,"DT")
3120321
"^DD",811.2,811.2,30,0)
USE IN DIALOG CODES^811.24A^^30;0
"^DD",811.2,811.2,30,21,0)
^^6^6^3130823^
"^DD",811.2,811.2,30,21,1,0)
This multiple stores all the codes in the SELECTED CODES multiple that
"^DD",811.2,811.2,30,21,2,0)
have been marked as Use In Dialog. Its purpose is to provide a multiple
"^DD",811.2,811.2,30,21,3,0)
for the ScreenMan form PXRM DIALOG TAXONOMY EDIT.
"^DD",811.2,811.2,30,21,4,0)

"^DD",811.2,811.2,30,21,5,0)
It is automatically synchronized with the SELECTED CODES MULTIPLE
"^DD",811.2,811.2,30,21,6,0)

"^DD",811.2,811.2,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.2,811.2,100,3)
Enter the CLASS.
"^DD",811.2,811.2,100,21,0)
^.001^3^3^3121025^^^^
"^DD",811.2,811.2,100,21,1,0)
This is the CLASS of the taxonomy. Possible classes are "N" for
"^DD",811.2,811.2,100,21,2,0)
national, "V" for VISN, and "L" for local. National taxonomies cannot
"^DD",811.2,811.2,100,21,3,0)
be edited by sites.
"^DD",811.2,811.2,100,"DT")
3010518
"^DD",811.2,811.2,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.2,811.2,101,3)
Enter the SPONSOR.
"^DD",811.2,811.2,101,21,0)
^.001^1^1^3050616^^^^
"^DD",811.2,811.2,101,21,1,0)
This is the organization or group that sponsors this taxonomy.
"^DD",811.2,811.2,101,"DT")
3010419
"^DD",811.2,811.2,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.2,811.2,102,3)
Enter the REVIEW DATE.
"^DD",811.2,811.2,102,21,0)
^.001^4^4^3050616^^^^
"^DD",811.2,811.2,102,21,1,0)
REVIEW DATE is used to determine when the taxonomy should be reviewed
"^DD",811.2,811.2,102,21,2,0)
to verify that it is current with the latest standards and guidelines.
"^DD",811.2,811.2,102,21,3,0)
You can find all taxonomies whose review date has passed using the
"^DD",811.2,811.2,102,21,4,0)
Clinical Reminders Review Date Report.
"^DD",811.2,811.2,102,"DT")
3010419
"^DD",811.2,811.2,110,0)
CHANGE LOG^811.21D^^110;0
"^DD",811.2,811.2,110,21,0)
^.001^3^3^3130314^^^^
"^DD",811.2,811.2,110,21,1,0)
This multiple is used to record a log of changes made to the
"^DD",811.2,811.2,110,21,2,0)
taxonomy.
"^DD",811.2,811.2,110,21,3,0)

"^DD",811.2,811.2,110,"DT")
3130314
"^DD",811.2,811.2,2102,0)
ICD9 RANGE OF CODES^811.22102^^80;0
"^DD",811.2,811.2,2102,21,0)
^.001^4^4^3050120^^^^
"^DD",811.2,811.2,2102,21,1,0)
This multiple is used to define the set of ranges of ICD9 codes to be
"^DD",811.2,811.2,2102,21,2,0)
included in the taxonomy. A range is defined by a low code and high
"^DD",811.2,811.2,2102,21,3,0)
code. All codes that lie in this range will be automatically included.
"^DD",811.2,811.2,2102,21,4,0)

"^DD",811.2,811.2,2102,"DT")
3030220
"^DD",811.2,811.2,2103,0)
ICD0 RANGE OF CODES^811.22103^^80.1;0
"^DD",811.2,811.2,2103,21,0)
^.001^4^4^3050120^^^^
"^DD",811.2,811.2,2103,21,1,0)
This multiple is used to define the set of ranges of ICD0 codes to be
"^DD",811.2,811.2,2103,21,2,0)
included in the taxonomy. A range is defined by a low code and high
"^DD",811.2,811.2,2103,21,3,0)
code. All codes that lie in this range will be automatically included.
"^DD",811.2,811.2,2103,21,4,0)

"^DD",811.2,811.2,2103,"DT")
3030220
"^DD",811.2,811.2,2104,0)
CPT RANGE OF CODES^811.22104^^81;0
"^DD",811.2,811.2,2104,21,0)
^.001^4^4^3050120^^^^
"^DD",811.2,811.2,2104,21,1,0)
This multiple is used to define the set of ranges of CPT codes to be
"^DD",811.2,811.2,2104,21,2,0)
included in the taxonomy. A range is defined by a low code and a high
"^DD",811.2,811.2,2104,21,3,0)
code. All codes that lie in this range will be automatically included.
"^DD",811.2,811.2,2104,21,4,0)

"^DD",811.2,811.2,2104,"DT")
3030220
"^DD",811.2,811.2,3102,0)
SELECTABLE DIAGNOSIS^811.23102IP^^SDX;0
"^DD",811.2,811.2,3102,21,0)
^.001^4^4^3050302^^^^
"^DD",811.2,811.2,3102,21,1,0)
These are the diagnosis codes that may be selected when processing a
"^DD",811.2,811.2,3102,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3102,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3102,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3104,0)
SELECTABLE PROCEDURE^811.23104IP^^SPR;0
"^DD",811.2,811.2,3104,21,0)
^.001^4^4^3050302^^^^
"^DD",811.2,811.2,3104,21,1,0)
These are the procedure codes that may be selected when processing a
"^DD",811.2,811.2,3104,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3104,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3104,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3106,0)
GENERATE DIALOG DX PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH DIAGNOSIS CODE;^SDZ;1^Q
"^DD",811.2,811.2,3106,3)
Enter 1 if each selectable diagnosis should be a separate prompt.
"^DD",811.2,811.2,3106,21,0)
^.001^10^10^3050302^^^^
"^DD",811.2,811.2,3106,21,1,0)
This parameter works in conjunction with the autogeneration of dialogs.
"^DD",811.2,811.2,3106,21,2,0)
If it is set, then each active code in the selectable diagnosis list
"^DD",811.2,811.2,3106,21,3,0)
will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3106,21,4,0)
from the finding parameter file, #801.45.
"^DD",811.2,811.2,3106,21,5,0)
 
"^DD",811.2,811.2,3106,21,6,0)
If it is not set, then there will be a checkbox for current diagnoses
"^DD",811.2,811.2,3106,21,7,0)
and a checkbox for historical entries. Fields #3107 and #3108 can be
"^DD",811.2,811.2,3106,21,8,0)
used to customize the checkbox headers. When one of the checkboxes is
"^DD",811.2,811.2,3106,21,9,0)
checked, then the selectable diagnoses list will be displayed as a
"^DD",811.2,811.2,3106,21,10,0)
drop-down list. This is the default option.
"^DD",811.2,811.2,3106,"DT")
2990908
"^DD",811.2,811.2,3107,0)
CURRENT VISIT DX DIALOG HDR^F^^SDZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3107,.1)

"^DD",811.2,811.2,3107,3)
Enter 1-80 character header text for current visit diagnosis selection.
"^DD",811.2,811.2,3107,21,0)
^.001^6^6^3050302^^^^
"^DD",811.2,811.2,3107,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3107,21,2,0)
CPRS users to document a diagnosis from the taxonomy as treated at the
"^DD",811.2,811.2,3107,21,3,0)
current visit. The header text will display with a checkbox, which CPRS
"^DD",811.2,811.2,3107,21,4,0)
users can select to see the selectable diagnoses list. 
"^DD",811.2,811.2,3107,21,5,0)
 
"^DD",811.2,811.2,3107,21,6,0)
If this field is not present, the taxonomy name will be used.
"^DD",811.2,811.2,3107,"DT")
3000503
"^DD",811.2,811.2,3108,0)
HISTORICAL VISIT DX DIALOG HDR^F^^SDZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3108,3)
Enter 1-80 character header text for historical visit diagnosis selection.
"^DD",811.2,811.2,3108,21,0)
^.001^8^8^3050302^^^^
"^DD",811.2,811.2,3108,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3108,21,2,0)
CPRS users to document a diagnosis from the taxonomy as a historical
"^DD",811.2,811.2,3108,21,3,0)
diagnosis. The header text will display with a checkbox, which CPRS users
"^DD",811.2,811.2,3108,21,4,0)
can select to see the selectable diagnoses list. Historical diagnoses
"^DD",811.2,811.2,3108,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3108,21,6,0)
 
"^DD",811.2,811.2,3108,21,7,0)
If this field is not present, the taxonomy name followed by
"^DD",811.2,811.2,3108,21,8,0)
"(HISTORICAL)" will be used.
"^DD",811.2,811.2,3108,"DT")
3000503
"^DD",811.2,811.2,3110,0)
GENERATE DIALOG PR PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH PROCEDURE;^SPZ;1^Q
"^DD",811.2,811.2,3110,3)
Enter 1 if each selectable procedure should be a separate prompt.
"^DD",811.2,811.2,3110,21,0)
^.001^10^10^3050302^^^^
"^DD",811.2,811.2,3110,21,1,0)
This parameter works in conjunction with the autogeneration of dialogs.
"^DD",811.2,811.2,3110,21,2,0)
If it is set then each active code in the selectable procedure list
"^DD",811.2,811.2,3110,21,3,0)
will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3110,21,4,0)
from the finding parameter file, #801.45.
"^DD",811.2,811.2,3110,21,5,0)
 
"^DD",811.2,811.2,3110,21,6,0)
If it is not set then there will be a checkbox for current procedures
"^DD",811.2,811.2,3110,21,7,0)
and a checkbox for historical entries. Fields #3110 and #3112 can be
"^DD",811.2,811.2,3110,21,8,0)
used to customize the checkbox headers. When one of the checkboxes is
"^DD",811.2,811.2,3110,21,9,0)
checked then the selectable diagnoses list will be displayed as a
"^DD",811.2,811.2,3110,21,10,0)
drop-down list. This is the default option.
"^DD",811.2,811.2,3110,"DT")
2990909
"^DD",811.2,811.2,3111,0)
CURRENT VISIT PR DIALOG HDR^F^^SPZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3111,3)
Enter 1-80 character header text for current visit procedure selection.
"^DD",811.2,811.2,3111,21,0)
^.001^6^6^3050302^^^^
"^DD",811.2,811.2,3111,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3111,21,2,0)
CPRS users to document a procedure from the taxonomy as done at the
"^DD",811.2,811.2,3111,21,3,0)
current visit. The header text will display with a checkbox, which CPRS
"^DD",811.2,811.2,3111,21,4,0)
users can select to see the selectable procedure list. 
"^DD",811.2,811.2,3111,21,5,0)
 
"^DD",811.2,811.2,3111,21,6,0)
If this field is not present, the taxonomy name will be used.
"^DD",811.2,811.2,3111,"DT")
3000503
"^DD",811.2,811.2,3112,0)
HISTORICAL VISIT PR DIALOG HDR^F^^SPZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3112,3)
Enter 1-80 character header text for historical visit procedure selection.
"^DD",811.2,811.2,3112,21,0)
^.001^8^8^3050302^^^^
"^DD",811.2,811.2,3112,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3112,21,2,0)
CPRS users to document a procedure from the taxonomy as a historical
"^DD",811.2,811.2,3112,21,3,0)
procedure. The header text will display with a checkbox, which CPRS users
"^DD",811.2,811.2,3112,21,4,0)
can select to see the selectable procedure list.  Historical procedures
"^DD",811.2,811.2,3112,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3112,21,6,0)
 
"^DD",811.2,811.2,3112,21,7,0)
If this field is not present, the taxonomy name followed by
"^DD",811.2,811.2,3112,21,8,0)
"(HISTORICAL)" will be used.
"^DD",811.2,811.2,3112,"DT")
3000503
"^DD",811.2,811.21,0)
CHANGE LOG SUB-FIELD^^2^3
"^DD",811.2,811.21,0,"DT")
3010419
"^DD",811.2,811.21,0,"IX","B",811.21,.01)

"^DD",811.2,811.21,0,"NM","CHANGE LOG")

"^DD",811.2,811.21,0,"UP")
811.2
"^DD",811.2,811.21,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.2,811.21,.01,1,0)
^.1
"^DD",811.2,811.21,.01,1,1,0)
811.21^B
"^DD",811.2,811.21,.01,1,1,1)
S ^PXD(811.2,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.21,.01,1,1,2)
K ^PXD(811.2,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.2,811.21,.01,3)
Do not edit this field.
"^DD",811.2,811.21,.01,21,0)
^.001^2^2^3050616^^^^
"^DD",811.2,811.21,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.2,811.21,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.2,811.21,.01,"DT")
3010419
"^DD",811.2,811.21,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.2,811.21,1,3)
Do not edit this field.
"^DD",811.2,811.21,1,21,0)
^.001^2^2^3050616^^^^
"^DD",811.2,811.21,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.2,811.21,1,21,2,0)
and should not be changed by the user.
"^DD",811.2,811.21,1,"DT")
3010419
"^DD",811.2,811.21,2,0)
EDIT COMMENTS^811.212^^1;0
"^DD",811.2,811.21,2,21,0)
^.001^2^2^3050616^^^^
"^DD",811.2,811.21,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.2,811.21,2,21,2,0)
during the editing session.
"^DD",811.2,811.21,2,"DT")
3010425
"^DD",811.2,811.212,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.2,811.212,0,"DT")
3010419
"^DD",811.2,811.212,0,"NM","EDIT COMMENTS")

"^DD",811.2,811.212,0,"UP")
811.21
"^DD",811.2,811.212,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.2,811.212,.01,3)
Enter your edit comments.
"^DD",811.2,811.212,.01,"DT")
3010425
"^DD",811.2,811.22,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.2,811.22,0,"DT")
3120314
"^DD",811.2,811.22,0,"NM","DESCRIPTION")

"^DD",811.2,811.22,0,"UP")
811.2
"^DD",811.2,811.22,.01,0)
DESCRIPTION^Wx^^0;1^Q
"^DD",811.2,811.22,.01,3)
Enter a detailed description
"^DD",811.2,811.22,.01,21,0)
^.001^2^2^3140430^^^^
"^DD",811.2,811.22,.01,21,1,0)
This field is used to record a detailed description of taxonomy.
"^DD",811.2,811.22,.01,21,2,0)

"^DD",811.2,811.22,.01,"DT")
3120314
"^DD",811.2,811.22102,0)
ICD9 RANGE OF CODES SUB-FIELD^^3^4
"^DD",811.2,811.22102,0,"DT")
3030325
"^DD",811.2,811.22102,0,"IX","B",811.22102,.01)

"^DD",811.2,811.22102,0,"NM","ICD9 RANGE OF CODES")

"^DD",811.2,811.22102,0,"UP")
811.2
"^DD",811.2,811.22102,.01,0)
ICD9 LOW CODE^MFX^^0;1^K:(($L(X)>7)!($L(X)<3)!('$$VICD9^PXRMCODE(X))) X
"^DD",811.2,811.22102,.01,1,0)
^.1^^-1
"^DD",811.2,811.22102,.01,1,1,0)
811.22102^B
"^DD",811.2,811.22102,.01,1,1,1)
S ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22102,.01,1,1,2)
K ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)
"^DD",811.2,811.22102,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,.01,21,0)
^^1^1^3050114^
"^DD",811.2,811.22102,.01,21,1,0)
This is the low code in the range of codes.
"^DD",811.2,811.22102,.01,"DT")
3030414
"^DD",811.2,811.22102,1,0)
ICD9 HIGH CODE^FX^^0;2^K:(($L(X)>7)!($L(X)<3)!('$$VHICD9^PXRMCODE(.DA,X))) X
"^DD",811.2,811.22102,1,1,0)
^.1^^0
"^DD",811.2,811.22102,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,1,21,0)
^.001^1^1^3050120^^
"^DD",811.2,811.22102,1,21,1,0)
This is the high code in the range of codes.
"^DD",811.2,811.22102,1,"DT")
3030326
"^DD",811.2,811.22102,2,0)
ICD9 ADJACENT LOWER CODE^F^^0;3^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22102,2,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,2,21,0)
^.001^5^5^3050120^^^^
"^DD",811.2,811.22102,2,21,1,0)
This is the code that comes immediately before the Low Code. Whenever a
"^DD",811.2,811.22102,2,21,2,0)
code set update is made, the old and new Adjacent Lower Codes are
"^DD",811.2,811.22102,2,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22102,2,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22102,2,21,5,0)
review the taxonomy for codes that should be added or removed.
"^DD",811.2,811.22102,2,"DT")
3030325
"^DD",811.2,811.22102,3,0)
ICD9 ADJACENT HIGHER CODE^F^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22102,3,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,3,21,0)
^.001^6^6^3050120^^^^
"^DD",811.2,811.22102,3,21,1,0)
This is the code that comes immediately after the High Code. Whenever a
"^DD",811.2,811.22102,3,21,2,0)
code set update is made the old and new Adjacent Higher Codes are
"^DD",811.2,811.22102,3,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22102,3,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22102,3,21,5,0)
review the taxonomy for codes that should be added or removed.
"^DD",811.2,811.22102,3,21,6,0)

"^DD",811.2,811.22102,3,"DT")
3030325
"^DD",811.2,811.22103,0)
ICD0 RANGE OF CODES SUB-FIELD^^3^4
"^DD",811.2,811.22103,0,"DT")
3030325
"^DD",811.2,811.22103,0,"IX","B",811.22103,.01)

"^DD",811.2,811.22103,0,"NM","ICD0 RANGE OF CODES")

"^DD",811.2,811.22103,0,"UP")
811.2
"^DD",811.2,811.22103,.01,0)
ICDO LOW CODE^MFX^^0;1^K:(($L(X)>7)!($L(X)<3)!('$$VICD0^PXRMCODE(X))) X
"^DD",811.2,811.22103,.01,1,0)
^.1^^-1
"^DD",811.2,811.22103,.01,1,1,0)
811.22103^B
"^DD",811.2,811.22103,.01,1,1,1)
S ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22103,.01,1,1,2)
K ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)
"^DD",811.2,811.22103,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,.01,21,0)
^^1^1^3050114^
"^DD",811.2,811.22103,.01,21,1,0)
This is the low code in the range of codes.
"^DD",811.2,811.22103,.01,"DT")
3030326
"^DD",811.2,811.22103,1,0)
ICD0 HIGH CODE^FX^^0;2^K:(($L(X)>7)!($L(X)<3)!('$$VHICD0^PXRMCODE(.DA,X))) X
"^DD",811.2,811.22103,1,1,0)
^.1^^0
"^DD",811.2,811.22103,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,1,21,0)
^^1^1^3050114^
"^DD",811.2,811.22103,1,21,1,0)
This is the high code in the range of codes.
"^DD",811.2,811.22103,1,"DT")
3030326
"^DD",811.2,811.22103,2,0)
ICD0 ADJACENT LOWER CODE^F^^0;3^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22103,2,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,2,21,0)
^.001^6^6^3050120^^^^
"^DD",811.2,811.22103,2,21,1,0)
This is the code that comes immediately before the Low Code. Whenever a
"^DD",811.2,811.22103,2,21,2,0)
code set update is made, the old and new Adjacent Lower Codes are 
"^DD",811.2,811.22103,2,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22103,2,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22103,2,21,5,0)
review the taxonomy for codes that should be added or removed.  
"^DD",811.2,811.22103,2,21,6,0)

"^DD",811.2,811.22103,2,"DT")
3030325
"^DD",811.2,811.22103,3,0)
ICD0 ADJACENT HIGHER CODE^F^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22103,3,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,3,21,0)
^.001^5^5^3050120^^^^
"^DD",811.2,811.22103,3,21,1,0)
This is the code that comes immediately after the High Code. Whenever a
"^DD",811.2,811.22103,3,21,2,0)
code set update is made, the old and new Adjacent Higher Codes are
"^DD",811.2,811.22103,3,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22103,3,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22103,3,21,5,0)
review the taxonomy for codes that should be added or removed.
"^DD",811.2,811.22103,3,"DT")
3030325
"^DD",811.2,811.22104,0)
CPT RANGE OF CODES SUB-FIELD^^3^4
"^DD",811.2,811.22104,0,"DT")
3030321
"^DD",811.2,811.22104,0,"IX","B",811.22104,.01)

"^DD",811.2,811.22104,0,"NM","CPT RANGE OF CODES")

"^DD",811.2,811.22104,0,"UP")
811.2
"^DD",811.2,811.22104,.01,0)
CPT LOW CODE^MFX^^0;1^K:(($L(X)>7)!($L(X)<3)!('$$VICPT^PXRMCODE(X))) X
"^DD",811.2,811.22104,.01,1,0)
^.1^^-1
"^DD",811.2,811.22104,.01,1,1,0)
811.22104^B
"^DD",811.2,811.22104,.01,1,1,1)
S ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22104,.01,1,1,2)
K ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)
"^DD",811.2,811.22104,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,.01,21,0)
^^1^1^3050114^
"^DD",811.2,811.22104,.01,21,1,0)
This is the low code in the range of codes.
"^DD",811.2,811.22104,.01,"DT")
3030326
"^DD",811.2,811.22104,1,0)
CPT HIGH CODE^FX^^0;2^K:(($L(X)>7)!($L(X)<3)!('$$VHICPT^PXRMCODE(.DA,X))) X
"^DD",811.2,811.22104,1,1,0)
^.1^^0
"^DD",811.2,811.22104,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,1,21,0)
^^1^1^3050114^
"^DD",811.2,811.22104,1,21,1,0)
This is the high code in the range of codes.
"^DD",811.2,811.22104,1,"DT")
3030326
"^DD",811.2,811.22104,2,0)
CPT ADJACENT LOWER CODE^F^^0;3^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22104,2,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,2,21,0)
^.001^6^6^3050120^^^^
"^DD",811.2,811.22104,2,21,1,0)
This is the code that comes immediately before the Low Code. Whenever a
"^DD",811.2,811.22104,2,21,2,0)
code set update is made, the old and new Adjacent Lower Codes are 
"^DD",811.2,811.22104,2,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22104,2,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22104,2,21,5,0)
review the taxonomy for codes that should be added or removed.  
"^DD",811.2,811.22104,2,21,6,0)

"^DD",811.2,811.22104,2,"DT")
3030325
"^DD",811.2,811.22104,3,0)
CPT ADJACENT HIGHER CODE^F^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.22104,3,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,3,21,0)
^.001^5^5^3050120^^^^
"^DD",811.2,811.22104,3,21,1,0)
This is the code that comes immediately after the High Code. Whenever a
"^DD",811.2,811.22104,3,21,2,0)
code set update is made, the old and new Adjacent Higher Codes are
"^DD",811.2,811.22104,3,21,3,0)
compared. If there is a change, then a message is sent to the Reminders
"^DD",811.2,811.22104,3,21,4,0)
mail group alerting them to this fact, along with a suggestion that they
"^DD",811.2,811.22104,3,21,5,0)
review the taxonomy for codes that should be added or removed.
"^DD",811.2,811.22104,3,"DT")
3030325
"^DD",811.2,811.23,0)
SELECTED CODES SUB-FIELD^^1^2
"^DD",811.2,811.23,0,"DT")
3130328
"^DD",811.2,811.23,0,"NM","SELECTED CODES")

"^DD",811.2,811.23,0,"UP")
811.2
"^DD",811.2,811.23,.01,0)
TERM/CODE^F^^0;1^K:$L(X)>240!($L(X)<2) X
"^DD",811.2,811.23,.01,1,0)
^.1^^0
"^DD",811.2,811.23,.01,3)
Answer must be 2-240 characters in length.
"^DD",811.2,811.23,.01,21,0)
^.001^12^12^3131219^^^^
"^DD",811.2,811.23,.01,21,1,0)
TERM/CODE along with a Coding System are passed to the Lexicon search
"^DD",811.2,811.23,.01,21,2,0)
utility, which returns a list of codes based on the user's search
"^DD",811.2,811.23,.01,21,3,0)
criteria. Terms are descriptions for a concept and the code is a
"^DD",811.2,811.23,.01,21,4,0)
unique identifier assigned to that description. A concept can have
"^DD",811.2,811.23,.01,21,5,0)
one or more descriptions to express the concept. An example of this
"^DD",811.2,811.23,.01,21,6,0)
in SNOMED is the concept code 271807003 that has a fully specified
"^DD",811.2,811.23,.01,21,7,0)
name of "Eruption of Skin", a preferred name of "Eruption" and
"^DD",811.2,811.23,.01,21,8,0)
several synonyms: "Rash", "Skin Eruption", "Skin Rash". For more
"^DD",811.2,811.23,.01,21,9,0)
information, see the Lexicon Utility User Manual.
"^DD",811.2,811.23,.01,21,10,0)

"^DD",811.2,811.23,.01,21,11,0)
Note the Lexicon search utility does not accept '?' or '*' as wildcards.
"^DD",811.2,811.23,.01,21,12,0)

"^DD",811.2,811.23,.01,"DT")
3131219
"^DD",811.2,811.23,1,0)
CODING SYSTEM^811.231A^^1;0
"^DD",811.2,811.23,1,21,0)
^.001^2^2^3140430^^^^
"^DD",811.2,811.23,1,21,1,0)
These are the coding systems selected by the user.
"^DD",811.2,811.23,1,21,2,0)

"^DD",811.2,811.231,0)
CODING SYSTEM SUB-FIELD^^3^4
"^DD",811.2,811.231,0,"DT")
3130328
"^DD",811.2,811.231,0,"NM","CODING SYSTEM")

"^DD",811.2,811.231,0,"UP")
811.23
"^DD",811.2,811.231,.01,0)
CODING SYSTEM^F^^0;1^K:$L(X)>7!($L(X)<3) X
"^DD",811.2,811.231,.01,1,0)
^.1^^0
"^DD",811.2,811.231,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.231,.01,21,0)
^^4^4^3140430^
"^DD",811.2,811.231,.01,21,1,0)
Each coding system selected by the user, is stored as one
"^DD",811.2,811.231,.01,21,2,0)
of the standard three-character abbreviations as defined in the
"^DD",811.2,811.231,.01,21,3,0)
Lexicon Coding Systems file #757.03.
"^DD",811.2,811.231,.01,21,4,0)

"^DD",811.2,811.231,.01,"DT")
3120801
"^DD",811.2,811.231,1,0)
NUMBER OF CODES SELECTED^NJ4,0^^0;2^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.2,811.231,1,3)
Do not edit; this field is set automatically.
"^DD",811.2,811.231,1,21,0)
^.001^3^3^3121029^^^
"^DD",811.2,811.231,1,21,1,0)
This is the number of codes that were selected; it is set
"^DD",811.2,811.231,1,21,2,0)
automatically by the taxonomy editor.
"^DD",811.2,811.231,1,21,3,0)

"^DD",811.2,811.231,1,"DT")
3120321
"^DD",811.2,811.231,2,0)
CODE LIST^811.2312A^^1;0
"^DD",811.2,811.231,2,21,0)
^.001^3^3^3140430^^^^
"^DD",811.2,811.231,2,21,1,0)
These are the lists of codes that were selected to be included in the
"^DD",811.2,811.231,2,21,2,0)
taxonomy.
"^DD",811.2,811.231,2,21,3,0)

"^DD",811.2,811.231,3,0)
NUMBER OF CODES MARKED AS UID^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.2,811.231,3,3)
Do not edit; this field is set automatically.
"^DD",811.2,811.231,3,21,0)
^^3^3^3130328^
"^DD",811.2,811.231,3,21,1,0)
This is the number of codes that were marked as Use in Dialog; it is
"^DD",811.2,811.231,3,21,2,0)
set automatically by the taxonomy editor.
"^DD",811.2,811.231,3,21,3,0)

"^DD",811.2,811.231,3,"DT")
3130328
"^DD",811.2,811.23102,0)
SELECTABLE DIAGNOSIS SUB-FIELD^^2^3
"^DD",811.2,811.23102,0,"DT")
2991025
"^DD",811.2,811.23102,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23102,0,"IX","B",811.23102,.01)

"^DD",811.2,811.23102,0,"NM","SELECTABLE DIAGNOSIS")

"^DD",811.2,811.23102,0,"UP")
811.2
"^DD",811.2,811.23102,.01,0)
SELECTABLE DIAGNOSIS^MP80'^ICD9(^0;1^Q
"^DD",811.2,811.23102,.01,1,0)
^.1
"^DD",811.2,811.23102,.01,1,1,0)
811.23102^B
"^DD",811.2,811.23102,.01,1,1,1)
S ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23102,.01,1,1,2)
K ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)
"^DD",811.2,811.23102,.01,3)
Enter a ICD9 code that can be entered in CPRS to satisfy a reminder.
"^DD",811.2,811.23102,.01,21,0)
^.001^2^2^3050114^^^
"^DD",811.2,811.23102,.01,21,1,0)
This is the selectable diagnosis code that will appear in the taxonomy
"^DD",811.2,811.23102,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23102,.01,"DT")
2991025
"^DD",811.2,811.23102,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23102,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23102,1,21,0)
^.001^3^3^3050114^^^
"^DD",811.2,811.23102,1,21,1,0)
This is the description of the diagnosis code that will appear in the
"^DD",811.2,811.23102,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard diagnosis
"^DD",811.2,811.23102,1,21,3,0)
code name is the default.
"^DD",811.2,811.23102,1,"DT")
2991025
"^DD",811.2,811.23102,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23102,2,21,0)
^.001^2^2^3050114^^
"^DD",811.2,811.23102,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23102,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23102,2,"DT")
2991025
"^DD",811.2,811.23104,0)
SELECTABLE PROCEDURE SUB-FIELD^^2^3
"^DD",811.2,811.23104,0,"DT")
2991025
"^DD",811.2,811.23104,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23104,0,"IX","B",811.23104,.01)

"^DD",811.2,811.23104,0,"NM","SELECTABLE PROCEDURE")

"^DD",811.2,811.23104,0,"UP")
811.2
"^DD",811.2,811.23104,.01,0)
SELECTABLE PROCEDURE^MP81'^ICPT(^0;1^Q
"^DD",811.2,811.23104,.01,1,0)
^.1
"^DD",811.2,811.23104,.01,1,1,0)
811.23104^B
"^DD",811.2,811.23104,.01,1,1,1)
S ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23104,.01,1,1,2)
K ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)
"^DD",811.2,811.23104,.01,3)
Enter a CPT code that can be entered in CPRS to satisfy a reminder
"^DD",811.2,811.23104,.01,21,0)
^.001^2^2^3050114^^
"^DD",811.2,811.23104,.01,21,1,0)
This is the selectable procedure code that will appear in the taxonomy
"^DD",811.2,811.23104,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23104,.01,"DT")
2991025
"^DD",811.2,811.23104,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23104,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23104,1,21,0)
^.001^4^4^3131104^^^
"^DD",811.2,811.23104,1,21,1,0)
This is the description of the procedure code that will appear in the
"^DD",811.2,811.23104,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard code name
"^DD",811.2,811.23104,1,21,3,0)
is the default.
"^DD",811.2,811.23104,1,21,4,0)

"^DD",811.2,811.23104,1,"DT")
3131104
"^DD",811.2,811.23104,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23104,2,21,0)
^.001^2^2^3050114^^
"^DD",811.2,811.23104,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23104,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23104,2,"DT")
2991025
"^DD",811.2,811.2312,0)
CODE LIST SUB-FIELD^^1^2
"^DD",811.2,811.2312,0,"DT")
3120321
"^DD",811.2,811.2312,0,"NM","CODE LIST")

"^DD",811.2,811.2312,0,"UP")
811.231
"^DD",811.2,811.2312,.01,0)
CODE^F^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.2312,.01,1,0)
^.1^^0
"^DD",811.2,811.2312,.01,3)
Enter a code, 1-40 characters.
"^DD",811.2,811.2312,.01,21,0)
^.001^2^2^3140430^^
"^DD",811.2,811.2312,.01,21,1,0)
This is a code such as ICD-9, CPT, SNOMED CT, etc.
"^DD",811.2,811.2312,.01,21,2,0)

"^DD",811.2,811.2312,.01,"DT")
3130725
"^DD",811.2,811.2312,1,0)
USE IN DIALOG^S^0:NO;1:YES;^0;2^Q
"^DD",811.2,811.2312,1,3)
Enter YES if the selected code is to be used in a dialog.
"^DD",811.2,811.2312,1,21,0)
^.001^3^3^3130823^^^
"^DD",811.2,811.2312,1,21,1,0)
If the selected code is to be used in a reminder dialog, then USE IN
"^DD",811.2,811.2312,1,21,2,0)
DIALOG should be set to YES.
"^DD",811.2,811.2312,1,21,3,0)

"^DD",811.2,811.2312,1,"DT")
3130725
"^DD",811.2,811.24,0)
USE IN DIALOG CODES SUB-FIELD^^1^2
"^DD",811.2,811.24,0,"DT")
3130716
"^DD",811.2,811.24,0,"IX","B",811.24,.01)

"^DD",811.2,811.24,0,"NM","USE IN DIALOG CODES")

"^DD",811.2,811.24,0,"UP")
811.2
"^DD",811.2,811.24,.01,0)
CODE^FX^^0;1^K:$L(X)>40!($L(X)<3)!('$$CDINPTR^PXRMTAXD(X)) X
"^DD",811.2,811.24,.01,1,0)
^.1
"^DD",811.2,811.24,.01,1,1,0)
811.24^B
"^DD",811.2,811.24,.01,1,1,1)
S ^PXD(811.2,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.24,.01,1,1,2)
K ^PXD(811.2,DA(1),30,"B",$E(X,1,30),DA)
"^DD",811.2,811.24,.01,3)
Answer must be 3-40 characters in length.
"^DD",811.2,811.24,.01,"DT")
3130725
"^DD",811.2,811.24,1,0)
CODING SYSTEM^FO^^0;2^K:$L(X)>3!($L(X)<3) X
"^DD",811.2,811.24,1,2)
S Y(0)=Y S Y=$$CSYSOPTR^PXRMTAXD(Y)
"^DD",811.2,811.24,1,2.1)
S Y=$$CSYSOPTR^PXRMTAXD(Y)
"^DD",811.2,811.24,1,3)
This field is set automatically, do not edit.
"^DD",811.2,811.24,1,21,0)
^^3^3^3130823^
"^DD",811.2,811.24,1,21,1,0)
CODING SYSTEM is set automatically by determining which coding system
"^DD",811.2,811.24,1,21,2,0)
the code belongs to.
"^DD",811.2,811.24,1,21,3,0)

"^DD",811.2,811.24,1,"DT")
3130725
"^DD",811.4,811.4,0)
FIELD^^6^11
"^DD",811.4,811.4,0,"DDA")
N
"^DD",811.4,811.4,0,"DT")
3110614
"^DD",811.4,811.4,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.4,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.4,811.4,0,"NM","REMINDER COMPUTED FINDINGS")

"^DD",811.4,811.4,0,"PT",810.31,.04)

"^DD",811.4,811.4,0,"PT",810.32,.01)

"^DD",811.4,811.4,0,"PT",811.52,.01)

"^DD",811.4,811.4,0,"PT",811.902,.01)

"^DD",811.4,811.4,0,"VRPK")
PXRM
"^DD",811.4,811.4,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(.X)) X
"^DD",811.4,811.4,.01,.1)

"^DD",811.4,811.4,.01,1,0)
^.1^^0
"^DD",811.4,811.4,.01,3)
Answer must be 3-64 characters in length.
"^DD",811.4,811.4,.01,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,.01,21,1,0)
This is the name of the computed finding and is the name the User will
"^DD",811.4,811.4,.01,21,2,0)
use when adding a computed finding to a reminder definition or a term.
"^DD",811.4,811.4,.01,"DT")
3090529
"^DD",811.4,811.4,.02,0)
ROUTINE^F^^0;2^K:$L(X)>8!($L(X)<3) X
"^DD",811.4,811.4,.02,3)
Enter the M routine name.
"^DD",811.4,811.4,.02,8.5)
@
"^DD",811.4,811.4,.02,9)
@
"^DD",811.4,811.4,.02,21,0)
^.001^3^3^3050117^^^^
"^DD",811.4,811.4,.02,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",811.4,811.4,.02,21,2,0)
computed finding. The entry point to use is specified in the ENTRY
"^DD",811.4,811.4,.02,21,3,0)
POINT field.
"^DD",811.4,811.4,.02,"DT")
2990526
"^DD",811.4,811.4,.03,0)
ENTRY POINT^F^^0;3^K:$L(X)>8!($L(X)<2) X
"^DD",811.4,811.4,.03,3)
Enter the entry point, must be 2-8 characters in length.
"^DD",811.4,811.4,.03,8.5)
@
"^DD",811.4,811.4,.03,9)
@
"^DD",811.4,811.4,.03,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,.03,21,1,0)
This is the entry point in the routine specified in the ROUTINE
"^DD",811.4,811.4,.03,21,2,0)
field.
"^DD",811.4,811.4,.03,"DT")
2990527
"^DD",811.4,811.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>64!($L(X)<1) X
"^DD",811.4,811.4,.04,3)
Answer must be 1-64 characters in length.
"^DD",811.4,811.4,.04,21,0)
^.001^2^2^3100820^^^^
"^DD",811.4,811.4,.04,21,1,0)
The PRINT NAME will be displayed in the Clinical Maintenance output for
"^DD",811.4,811.4,.04,21,2,0)
computed findings.
"^DD",811.4,811.4,.04,"DT")
3100820
"^DD",811.4,811.4,1,0)
DESCRIPTION^811.41^^1;0
"^DD",811.4,811.4,1,21,0)
^.001^3^3^3110624^^^^
"^DD",811.4,811.4,1,21,1,0)
This is the description of the computed finding. It should explain its
"^DD",811.4,811.4,1,21,2,0)
purpose and how it is to be used including what data is returned for
"^DD",811.4,811.4,1,21,3,0)
use in a Condition.
"^DD",811.4,811.4,5,0)
TYPE^S^M:MULTIPLE;L:LIST;S:SINGLE;^0;5^Q
"^DD",811.4,811.4,5,21,0)
^^4^4^3050117^
"^DD",811.4,811.4,5,21,1,0)
This is the type of computed finding; the possible values are "S" for
"^DD",811.4,811.4,5,21,2,0)
single, "M" for multiple, and "L" for list. The default value is "S".
"^DD",811.4,811.4,5,21,3,0)
For a detailed explanation of the computed finding types see the
"^DD",811.4,811.4,5,21,4,0)
Clinical Reminder Manager manual.
"^DD",811.4,811.4,5,"DT")
3030129
"^DD",811.4,811.4,6,0)
CF PARAMETER REQUIRED^S^0:NO;1:YES;^0;6^Q
"^DD",811.4,811.4,6,3)
Enter 'YES' if the computed finding parameter must be defined for this computed finding to work.
"^DD",811.4,811.4,6,21,0)
^.001^9^9^3110620^^^
"^DD",811.4,811.4,6,21,1,0)
This field should be set to "YES" if the computed finding requires a
"^DD",811.4,811.4,6,21,2,0)
value in the COMPUTED FINDING PARAMETER (#6) field of the definition
"^DD",811.4,811.4,6,21,3,0)
or term in order to function properly. It is used by the integrity
"^DD",811.4,811.4,6,21,4,0)
checker to determine whether or not to issue an error if the
"^DD",811.4,811.4,6,21,5,0)
COMPUTED FINDING PARAMETER is not defined.
"^DD",811.4,811.4,6,21,6,0)

"^DD",811.4,811.4,6,21,7,0)
The default is "NO".
"^DD",811.4,811.4,6,21,8,0)

"^DD",811.4,811.4,6,21,9,0)

"^DD",811.4,811.4,6,"DT")
3110614
"^DD",811.4,811.4,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.4,811.4,100,3)
Enter the class.
"^DD",811.4,811.4,100,21,0)
^.001^4^4^3050117^^^^
"^DD",811.4,811.4,100,21,1,0)
This is the class of computed finding. Possible values are "N" for
"^DD",811.4,811.4,100,21,2,0)
national, "V" for VISN, and "L" for local. National computed findings
"^DD",811.4,811.4,100,21,3,0)
will be  prefixed with VA- and cannot be edited. Local or VISN entry
"^DD",811.4,811.4,100,21,4,0)
names cannot  start with VA-.
"^DD",811.4,811.4,100,"DT")
3010518
"^DD",811.4,811.4,101,0)
SPONSOR^P811.6^PXRMD(811.6,^100;2^Q
"^DD",811.4,811.4,101,3)
Enter the sponsor.
"^DD",811.4,811.4,101,21,0)
^.001^1^1^3050117^^
"^DD",811.4,811.4,101,21,1,0)
This is the organization or group that sponsors this computed finding.
"^DD",811.4,811.4,101,"DT")
3010419
"^DD",811.4,811.4,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.4,102,3)
Enter the review date.
"^DD",811.4,811.4,102,21,0)
^.001^4^4^3050117^^
"^DD",811.4,811.4,102,21,1,0)
The REVIEW DATE is used to determine when the computed finding should
"^DD",811.4,811.4,102,21,2,0)
be reviewed to verify that it is current with the latest standards and
"^DD",811.4,811.4,102,21,3,0)
guidelines. You can find all computed findings whose review date has
"^DD",811.4,811.4,102,21,4,0)
passed using the Reminder Review Date report.
"^DD",811.4,811.4,102,"DT")
3010419
"^DD",811.4,811.4,110,0)
EDIT HISTORY^811.42D^^110;0
"^DD",811.4,811.4,110,21,0)
^.001^2^2^3050117^^^^
"^DD",811.4,811.4,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.4,811.4,110,21,2,0)
computed finding.
"^DD",811.4,811.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.4,811.41,0,"DT")
3000405
"^DD",811.4,811.41,0,"NM","DESCRIPTION")

"^DD",811.4,811.41,0,"UP")
811.4
"^DD",811.4,811.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.4,811.41,.01,3)
Enter a description for this computed finding.
"^DD",811.4,811.41,.01,"DT")
3000405
"^DD",811.4,811.42,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.4,811.42,0,"DT")
3010419
"^DD",811.4,811.42,0,"IX","B",811.42,.01)

"^DD",811.4,811.42,0,"NM","EDIT HISTORY")

"^DD",811.4,811.42,0,"UP")
811.4
"^DD",811.4,811.42,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.4,811.42,.01,1,0)
^.1
"^DD",811.4,811.42,.01,1,1,0)
811.42^B
"^DD",811.4,811.42,.01,1,1,1)
S ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.4,811.42,.01,1,1,2)
K ^PXRMD(811.4,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.4,811.42,.01,21,0)
^.001^2^2^3050117^^
"^DD",811.4,811.42,.01,21,1,0)
This is the date and time when editing was done. This field is set
"^DD",811.4,811.42,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.4,811.42,.01,"DT")
3010419
"^DD",811.4,811.42,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.4,811.42,1,21,0)
^.001^2^2^3050117^^
"^DD",811.4,811.42,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.4,811.42,1,21,2,0)
and should not be changed by the user.
"^DD",811.4,811.42,1,"DT")
3010419
"^DD",811.4,811.42,2,0)
EDIT COMMENTS^811.422^^1;0
"^DD",811.4,811.42,2,21,0)
^.001^2^2^3050117^^^
"^DD",811.4,811.42,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.4,811.42,2,21,2,0)
during the editing session.
"^DD",811.4,811.42,2,"DT")
3010425
"^DD",811.4,811.422,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.4,811.422,0,"DT")
3010419
"^DD",811.4,811.422,0,"NM","EDIT COMMENTS")

"^DD",811.4,811.422,0,"UP")
811.42
"^DD",811.4,811.422,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.4,811.422,.01,3)
Enter your edit comments.
"^DD",811.4,811.422,.01,"DT")
3010425
"^DD",811.8,811.8,0)
FIELD^^130^8
"^DD",811.8,811.8,0,"DDA")
N
"^DD",811.8,811.8,0,"DT")
3080125
"^DD",811.8,811.8,0,"NM","REMINDER EXCHANGE")

"^DD",811.8,811.8,0,"SCR")
I 0>1
"^DD",811.8,811.8,0,"VRPK")
PXRM
"^DD",811.8,811.8,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.8,811.8,.01,.1)

"^DD",811.8,811.8,.01,1,0)
^.1^^0
"^DD",811.8,811.8,.01,3)
Do not edit this field.
"^DD",811.8,811.8,.01,21,0)
^.001^2^2^3050124^^^^
"^DD",811.8,811.8,.01,21,1,0)
This is the name of the entry in the Exchange File. It will be the same
"^DD",811.8,811.8,.01,21,2,0)
as the name of the reminder definition that was packed.
"^DD",811.8,811.8,.01,"DT")
3010601
"^DD",811.8,811.8,.02,0)
SOURCE^F^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",811.8,811.8,.02,3)
Do not edit this field.
"^DD",811.8,811.8,.02,21,0)
^.001^3^3^3070313^^^
"^DD",811.8,811.8,.02,21,1,0)
This is the source of the packed reminder. It will contain the name of
"^DD",811.8,811.8,.02,21,2,0)
the person who packed it and their site.
"^DD",811.8,811.8,.02,21,3,0)

"^DD",811.8,811.8,.02,"DT")
3000706
"^DD",811.8,811.8,.03,0)
DATE PACKED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.8,.03,3)
Do not edit this field.
"^DD",811.8,811.8,.03,21,0)
^.001^3^3^3050124^^^
"^DD",811.8,811.8,.03,21,1,0)
This is the date and time the reminder was originally packed. When a
"^DD",811.8,811.8,.03,21,2,0)
packed reminder is put into the Exchange File from a MailMan message or
"^DD",811.8,811.8,.03,21,3,0)
a host file, this will reflect the original packing date and time.
"^DD",811.8,811.8,.03,"DT")
3000712
"^DD",811.8,811.8,100,0)
PACKED REMINDER^811.801A^^100;0
"^DD",811.8,811.8,100,9)
@
"^DD",811.8,811.8,100,21,0)
^.001^1^1^3050126^^^^
"^DD",811.8,811.8,100,21,1,0)
This multiple stores the packed reminder definition in XML format.
"^DD",811.8,811.8,100,"DT")
3030312
"^DD",811.8,811.8,110,0)
DESCRIPTION^811.804^^110;0
"^DD",811.8,811.8,110,21,0)
^.001^4^4^3050124^^^^
"^DD",811.8,811.8,110,21,1,0)
This contains formatted information about the Exchange File entry. It
"^DD",811.8,811.8,110,21,2,0)
includes source information, a brief description, and keywords. This
"^DD",811.8,811.8,110,21,3,0)
information will be displayed when an entry is selected for possible
"^DD",811.8,811.8,110,21,4,0)
installation.
"^DD",811.8,811.8,119,0)
NUMBER OF UNIQUE COMPONENTS^NJ6,0^^119;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8,119,3)
Do not edit this field.
"^DD",811.8,811.8,119,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8,119,21,1,0)
This is the number of unique components in the packed reminder.
"^DD",811.8,811.8,119,"DT")
3030609
"^DD",811.8,811.8,120,0)
COMPONENT LIST^811.802A^^120;0
"^DD",811.8,811.8,120,21,0)
^.001^1^1^3080206^^^^
"^DD",811.8,811.8,120,21,1,0)
This is a list of components that are included in the packed reminder.
"^DD",811.8,811.8,130,0)
INSTALLATION HISTORY^811.803DA^^130;0
"^DD",811.8,811.8,130,21,0)
^.001^2^2^3070808^^^^
"^DD",811.8,811.8,130,21,1,0)
This multiple is used to record a history of packed reminder
"^DD",811.8,811.8,130,21,2,0)
installations.
"^DD",811.8,811.801,0)
PACKED REMINDER SUB-FIELD^^.01^1
"^DD",811.8,811.801,0,"DT")
3030609
"^DD",811.8,811.801,0,"IX","B",811.801,.01)

"^DD",811.8,811.801,0,"NM","PACKED REMINDER")

"^DD",811.8,811.801,0,"UP")
811.8
"^DD",811.8,811.801,.01,0)
XML DATA^WL^^0;1^Q
"^DD",811.8,811.801,.01,1,0)
^.1
"^DD",811.8,811.801,.01,1,1,0)
811.801^B
"^DD",811.8,811.801,.01,1,1,1)
S ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",811.8,811.801,.01,1,1,2)
K ^PXD(811.8,DA(1),100,"B",$E(X,1,30),DA)
"^DD",811.8,811.801,.01,1,1,"DT")
3030415
"^DD",811.8,811.801,.01,3)
Do not edit this field.
"^DD",811.8,811.801,.01,9)
@
"^DD",811.8,811.801,.01,21,0)
^.001^1^1^3050126^^^^
"^DD",811.8,811.801,.01,21,1,0)
This is a line of XML data.
"^DD",811.8,811.801,.01,"DT")
3030609
"^DD",811.8,811.802,0)
COMPONENT LIST SUB-FIELD^^1^4
"^DD",811.8,811.802,0,"DT")
3080125
"^DD",811.8,811.802,0,"NM","COMPONENT LIST")

"^DD",811.8,811.802,0,"UP")
811.8
"^DD",811.8,811.802,.01,0)
COMPONENT^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.802,.01,1,0)
^.1^^0
"^DD",811.8,811.802,.01,3)
Do not edit this field.
"^DD",811.8,811.802,.01,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.802,.01,21,1,0)
This is the name of the component; for example, ROUTINE or EDUCATION TOPIC.
"^DD",811.8,811.802,.01,"DT")
3050112
"^DD",811.8,811.802,.02,0)
FILE NUMBER^NJ14,4X^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."5N.N) X
"^DD",811.8,811.802,.02,3)
Do not edit this field.
"^DD",811.8,811.802,.02,21,0)
^.001^2^2^3050126^^^^
"^DD",811.8,811.802,.02,21,1,0)
This is the file number of the component. If the component is a routine,
"^DD",811.8,811.802,.02,21,2,0)
then the file number will be 0.
"^DD",811.8,811.802,.02,"DT")
3050111
"^DD",811.8,811.802,.03,0)
NUMBER OF ITEMS^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.802,.03,3)
Do not edit this field.
"^DD",811.8,811.802,.03,21,0)
^.001^4^4^3050124^^^
"^DD",811.8,811.802,.03,21,1,0)
This is the number of this type of component that is included in the
"^DD",811.8,811.802,.03,21,2,0)
packed reminder. For example, if this particular component is Health
"^DD",811.8,811.802,.03,21,3,0)
Factors and there are three of them in the packed reminder, the NUMBER
"^DD",811.8,811.802,.03,21,4,0)
OF ITEMS would be 3.
"^DD",811.8,811.802,.03,"DT")
3001101
"^DD",811.8,811.802,1,0)
ITEM LIST^811.8021A^^1;0
"^DD",811.8,811.802,1,21,0)
^.001^3^3^3080206^^^^
"^DD",811.8,811.802,1,21,1,0)
This is the list of items of the component type. For example, if the
"^DD",811.8,811.802,1,21,2,0)
component type is Health Factors and there are three of them, the three
"^DD",811.8,811.802,1,21,3,0)
entries are specified in this list.
"^DD",811.8,811.8021,0)
ITEM LIST SUB-FIELD^^4^7
"^DD",811.8,811.8021,0,"DT")
3080125
"^DD",811.8,811.8021,0,"NM","ITEM LIST")

"^DD",811.8,811.8021,0,"UP")
811.802
"^DD",811.8,811.8021,.01,0)
ITEM^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8021,.01,1,0)
^.1^^0
"^DD",811.8,811.8021,.01,3)
Do not edit this field.
"^DD",811.8,811.8021,.01,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.8021,.01,21,1,0)
This is the name of the item.
"^DD",811.8,811.8021,.01,"DT")
3050112
"^DD",811.8,811.8021,.02,0)
START LINE^NJ6,0^^0;2^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.02,3)
Do not edit this field.
"^DD",811.8,811.8021,.02,21,0)
^.001^1^1^3050124^^^
"^DD",811.8,811.8021,.02,21,1,0)
This is the line in node 100 where the data for this item starts.
"^DD",811.8,811.8021,.02,"DT")
3050124
"^DD",811.8,811.8021,.03,0)
END LINE^NJ6,0^^0;3^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,.03,3)
Do not edit this field.
"^DD",811.8,811.8021,.03,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,.03,21,1,0)
This is the line in node 100 where the data for this item ends.
"^DD",811.8,811.8021,.03,"DT")
3050124
"^DD",811.8,811.8021,1,0)
IEN ROOT START LINE^NJ6,0^^0;4^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,1,3)
Do not edit this field.
"^DD",811.8,811.8021,1,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,1,21,1,0)
This is the line in node 100 where the ien root for this item starts.
"^DD",811.8,811.8021,1,"DT")
3050124
"^DD",811.8,811.8021,2,0)
IEN ROOT END LINE^NJ6,0^^0;5^K:+X'=X!(X>100000)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.8,811.8021,2,3)
Do not edit this field.
"^DD",811.8,811.8021,2,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8021,2,21,1,0)
This is the line in node 100 where the ien root ends.
"^DD",811.8,811.8021,2,"DT")
3050124
"^DD",811.8,811.8021,3,0)
OK TO INSTALL^S^0:NO;1:YES;^0;6^Q
"^DD",811.8,811.8021,3,21,0)
^^4^4^3080122^
"^DD",811.8,811.8021,3,21,1,0)
If this field is YES then the item can be installed. The value for
"^DD",811.8,811.8021,3,21,2,0)
this field is determined when the list of components and items in
"^DD",811.8,811.8021,3,21,3,0)
the Exchange File is built.
"^DD",811.8,811.8021,3,21,4,0)

"^DD",811.8,811.8021,3,"DT")
3080122
"^DD",811.8,811.8021,4,0)
SELECTABLE^S^0:NO;1:YES;^0;7^Q
"^DD",811.8,811.8021,4,21,0)
^.001^6^6^3080206^^
"^DD",811.8,811.8021,4,21,1,0)
If this field is marked YES then the item can be selected for
"^DD",811.8,811.8021,4,21,2,0)
installation. This will include all Clinical Reminder items selected
"^DD",811.8,811.8021,4,21,3,0)
for packing by the user, reminder dialogs that are linked to a reminder
"^DD",811.8,811.8021,4,21,4,0)
definition, and entries from files that are exchangeable.
"^DD",811.8,811.8021,4,21,5,0)

"^DD",811.8,811.8021,4,21,6,0)

"^DD",811.8,811.8021,4,"DT")
3080206
"^DD",811.8,811.803,0)
INSTALLATION HISTORY SUB-FIELD^^2^4
"^DD",811.8,811.803,0,"DT")
3070808
"^DD",811.8,811.803,0,"NM","INSTALLATION HISTORY")

"^DD",811.8,811.803,0,"UP")
811.8
"^DD",811.8,811.803,.01,0)
INSTALLATION DATE AND TIME^D^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.8,811.803,.01,1,0)
^.1^^0
"^DD",811.8,811.803,.01,3)
Do not edit this field.
"^DD",811.8,811.803,.01,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.803,.01,21,1,0)
This is the date and time of the installation.
"^DD",811.8,811.803,.01,"DT")
3001121
"^DD",811.8,811.803,.02,0)
INSTALLED BY^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",811.8,811.803,.02,3)
Do not edit this field.
"^DD",811.8,811.803,.02,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.803,.02,21,1,0)
This is the person who did the installation.
"^DD",811.8,811.803,.02,"DT")
3001116
"^DD",811.8,811.803,1,0)
COMPONENT LIST^811.8031A^^1;0
"^DD",811.8,811.803,1,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.803,1,21,1,0)
This multiple contains a list of the packed reminder components that
"^DD",811.8,811.803,1,21,2,0)
were selected as part of this installation.
"^DD",811.8,811.803,2,0)
INSTALLATION TYPE^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",811.8,811.803,2,3)
Answer must be 1-30 characters in length.
"^DD",811.8,811.803,2,21,0)
^.001^3^3^3070808^^
"^DD",811.8,811.803,2,21,1,0)
This field is used to store the installation type.
"^DD",811.8,811.803,2,21,2,0)

"^DD",811.8,811.803,2,21,3,0)

"^DD",811.8,811.803,2,"DT")
3070808
"^DD",811.8,811.8031,0)
COMPONENT LIST SUB-FIELD^^5^6
"^DD",811.8,811.8031,0,"DT")
3010313
"^DD",811.8,811.8031,0,"NM","COMPONENT LIST")

"^DD",811.8,811.8031,0,"UP")
811.803
"^DD",811.8,811.8031,.01,0)
INDEX^NJ6,0^^0;1^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.8,811.8031,.01,1,0)
^.1^^0
"^DD",811.8,811.8031,.01,3)
Do not edit this field.
"^DD",811.8,811.8031,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.8,811.8031,.01,21,1,0)
This number corresponds to the item number in the List Manager display
"^DD",811.8,811.8031,.01,21,2,0)
of the components in the Exchange File entry.
"^DD",811.8,811.8031,.01,"DT")
3001115
"^DD",811.8,811.8031,1,0)
COMPONENT^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,1,3)
Do not edit this field.
"^DD",811.8,811.8031,1,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,1,21,1,0)
This is the type of component, Education Topic, Health Factor, etc.
"^DD",811.8,811.8031,1,"DT")
3001115
"^DD",811.8,811.8031,2,0)
ITEM^F^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,2,3)
Do not edit this field.
"^DD",811.8,811.8031,2,21,0)
^.001^2^2^3050124^^
"^DD",811.8,811.8031,2,21,1,0)
This is the name of the component. For example, if the component is
"^DD",811.8,811.8031,2,21,2,0)
a Health Factor then this is the name of the Health Factor.
"^DD",811.8,811.8031,2,"DT")
3001115
"^DD",811.8,811.8031,3,0)
ACTION^F^^0;4^K:$L(X)>4!($L(X)<1) X
"^DD",811.8,811.8031,3,3)
Do not edit this field.
"^DD",811.8,811.8031,3,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,3,21,1,0)
This is the action that was taken with the item.
"^DD",811.8,811.8031,3,"DT")
3001115
"^DD",811.8,811.8031,4,0)
NEWNAME^F^^0;5^K:$L(X)>64!($L(X)<1) X
"^DD",811.8,811.8031,4,3)
Do not edit this field.
"^DD",811.8,811.8031,4,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.8031,4,21,1,0)
If the item was copied to a new name then the new name is stored here.
"^DD",811.8,811.8031,4,"DT")
3001115
"^DD",811.8,811.8031,5,0)
ADDITIONAL DETAILS^811.80315A^^1;0
"^DD",811.8,811.8031,5,21,0)
^.001^3^3^3050124^^^
"^DD",811.8,811.8031,5,21,1,0)
This multiple is used to store additional details about the
"^DD",811.8,811.8031,5,21,2,0)
installation. As an example, if a finding in a reminder definition is
"^DD",811.8,811.8031,5,21,3,0)
replaced with another finding that information is stored here.
"^DD",811.8,811.80315,0)
ADDITIONAL DETAILS SUB-FIELD^^.01^1
"^DD",811.8,811.80315,0,"DT")
3010313
"^DD",811.8,811.80315,0,"NM","ADDITIONAL DETAILS")

"^DD",811.8,811.80315,0,"UP")
811.8031
"^DD",811.8,811.80315,.01,0)
ADDITIONAL DETAILS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",811.8,811.80315,.01,1,0)
^.1^^0
"^DD",811.8,811.80315,.01,3)
Do not edit this field.
"^DD",811.8,811.80315,.01,21,0)
^.001^1^1^3050124^^
"^DD",811.8,811.80315,.01,21,1,0)
This is a line of additional information.
"^DD",811.8,811.80315,.01,"DT")
3010313
"^DD",811.8,811.804,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.8,811.804,0,"DT")
3001221
"^DD",811.8,811.804,0,"NM","DESCRIPTION")

"^DD",811.8,811.804,0,"UP")
811.8
"^DD",811.8,811.804,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.8,811.804,.01,3)
Do not edit this field.
"^DD",811.8,811.804,.01,"DT")
3001221
"^DIC",801.41,801.41,0)
REMINDER DIALOG^801.41
"^DIC",801.41,801.41,0,"GL")
^PXRMD(801.41,
"^DIC",801.41,801.41,"%",0)
^1.005^^0
"^DIC",801.41,801.41,"%D",0)
^1.001^63^63^3131104^^^^
"^DIC",801.41,801.41,"%D",1,0)
This file is used to define all of the components that work together to 
"^DIC",801.41,801.41,"%D",2,0)
define a reminder dialog. Reminder dialog definitions are used by the CPRS 
"^DIC",801.41,801.41,"%D",3,0)
GUI for reminder resolution.  
"^DIC",801.41,801.41,"%D",4,0)
 
"^DIC",801.41,801.41,"%D",5,0)
This file contains a combination of nationally distributed entries, local 
"^DIC",801.41,801.41,"%D",6,0)
auto-generated entries, site and VISN exchanged entries and local manually 
"^DIC",801.41,801.41,"%D",7,0)
created entries. Nationally distributed dialog, element, and group 
"^DIC",801.41,801.41,"%D",8,0)
entries have their name prefixed with VA-. Nationally distributed Prompts, 
"^DIC",801.41,801.41,"%D",9,0)
Forced Value, Result Groups, and Result Elements have their name prefixed 
"^DIC",801.41,801.41,"%D",10,0)
with PXRM. Entries in this file may be auto-generated via the Dialog 
"^DIC",801.41,801.41,"%D",11,0)
Management Menu option. Manually created dialog entries should use local 
"^DIC",801.41,801.41,"%D",12,0)
namespacing conventions. Nationally distributed entries will have their 
"^DIC",801.41,801.41,"%D",13,0)
class type defined as National. Entries created at the VISN level should be 
"^DIC",801.41,801.41,"%D",14,0)
defined as VISN and entries created at a site should be defined as Local.  
"^DIC",801.41,801.41,"%D",15,0)
 
"^DIC",801.41,801.41,"%D",16,0)
This file is similar to the option file where there are different types of 
"^DIC",801.41,801.41,"%D",17,0)
entries (reminder dialog, dialog elements (sentences), prompts, and groups 
"^DIC",801.41,801.41,"%D",18,0)
of elements, result elements and groups of result elements). Where an option 
"^DIC",801.41,801.41,"%D",19,0)
has menu items, the dialog file has components that are entered, with the 
"^DIC",801.41,801.41,"%D",20,0)
sequence field as the .01 field. 
"^DIC",801.41,801.41,"%D",21,0)
 
"^DIC",801.41,801.41,"%D",22,0)
A prompt is defined for PCE prompts, WH Notification Purpose, or as locally 
"^DIC",801.41,801.41,"%D",23,0)
created comment check-boxes. The prompts will not have any components within 
"^DIC",801.41,801.41,"%D",24,0)
them. PXRM-prefixed prompts are distributed in this file with the Clinical 
"^DIC",801.41,801.41,"%D",25,0)
Reminder package.  
"^DIC",801.41,801.41,"%D",26,0)
 
"^DIC",801.41,801.41,"%D",27,0)
A dialog element is defined primarily to represent sentences to display in 
"^DIC",801.41,801.41,"%D",28,0)
the CPRS window with a check-box. When the user checks the sentence off, the
"^DIC",801.41,801.41,"%D",29,0)
FINDING ITEM in the dialog element and the ADDITIONAL FINDINGS will be added 
"^DIC",801.41,801.41,"%D",30,0)
to the list of PCE updates, orders, WH Notification Purposes, and mental 
"^DIC",801.41,801.41,"%D",31,0)
health tests. The updates won't occur on the CPRS GUI until the user clicks 
"^DIC",801.41,801.41,"%D",32,0)
on the FINISH button. Dialog elements may have components added to them. 
"^DIC",801.41,801.41,"%D",33,0)
Auto-generated components will be based on the additional prompts defined in 
"^DIC",801.41,801.41,"%D",34,0)
the Finding Type Parameters. Once a dialog element is auto-generated, the 
"^DIC",801.41,801.41,"%D",35,0)
sites can modify them.  
"^DIC",801.41,801.41,"%D",36,0)
 
"^DIC",801.41,801.41,"%D",37,0)
Dialog elements may also be instructional text or a header. The FINDING ITEM 
"^DIC",801.41,801.41,"%D",38,0)
and components would not be defined in dialog elements.  
"^DIC",801.41,801.41,"%D",39,0)
 
"^DIC",801.41,801.41,"%D",40,0)
A dialog group is similar to menu options. It groups dialog elements and 
"^DIC",801.41,801.41,"%D",41,0)
dialog groups within its component multiple. The dialog group can be defined 
"^DIC",801.41,801.41,"%D",42,0)
with a finding item and a check-box. The components in the group can be 
"^DIC",801.41,801.41,"%D",43,0)
hidden from the CPRS GUI window until the dialog group is checked off. 
"^DIC",801.41,801.41,"%D",44,0)
 
"^DIC",801.41,801.41,"%D",45,0)
A result element contains special logic that uses information entered during 
"^DIC",801.41,801.41,"%D",46,0)
the resolution process to create a sentence to add to the progress note. The 
"^DIC",801.41,801.41,"%D",47,0)
special logic contains a CONDITION that, when true, will use the ALTERNATE 
"^DIC",801.41,801.41,"%D",48,0)
PROGRESS NOTE TEXT field to update the progress note. A separate result 
"^DIC",801.41,801.41,"%D",49,0)
element is used for each separate sentence needed. The result element is 
"^DIC",801.41,801.41,"%D",50,0)
only used with mental health test finding items. Default result elements are 
"^DIC",801.41,801.41,"%D",51,0)
distributed for common mental health tests, prefixed with PXRM and the 
"^DIC",801.41,801.41,"%D",52,0)
mental health test name. Sites may copy them and modify their local versions 
"^DIC",801.41,801.41,"%D",53,0)
as needed.  
"^DIC",801.41,801.41,"%D",54,0)
 
"^DIC",801.41,801.41,"%D",55,0)
A result group contains all of the result elements that need to be checked 
"^DIC",801.41,801.41,"%D",56,0)
to create sentences for one mental health test finding. The dialog element 
"^DIC",801.41,801.41,"%D",57,0)
for the test will have its RESULT GROUP/ELEMENT field defined with the 
"^DIC",801.41,801.41,"%D",58,0)
result group. Default result groups for mental health tests are distributed 
"^DIC",801.41,801.41,"%D",59,0)
with the Clinical Reminders package. Sites may copy them and modify their local 
"^DIC",801.41,801.41,"%D",60,0)
versions as needed.  
"^DIC",801.41,801.41,"%D",61,0)

"^DIC",801.41,801.41,"%D",62,0)
Sites should name locally created items according to their local naming 
"^DIC",801.41,801.41,"%D",63,0)
convention.
"^DIC",801.41,"B","REMINDER DIALOG",801.41)

"^DIC",801.45,801.45,0)
REMINDER FINDING TYPE PARAMETER^801.45
"^DIC",801.45,801.45,0,"GL")
^PXRMD(801.45,
"^DIC",801.45,801.45,"%",0)
^1.005^^0
"^DIC",801.45,801.45,"%D",0)
^1.001^13^13^3050117^^
"^DIC",801.45,801.45,"%D",1,0)
This file is used by the process that generates reminder dialogs for a
"^DIC",801.45,801.45,"%D",2,0)
reminder. During this process, for each reminder finding item in a
"^DIC",801.45,801.45,"%D",3,0)
reminder definition, one or more dialog elements are created, depending on
"^DIC",801.45,801.45,"%D",4,0)
the Finding Type parameters in this file.  The file content is distributed
"^DIC",801.45,801.45,"%D",5,0)
with the package, but may be edited by sites to reflect how the site uses
"^DIC",801.45,801.45,"%D",6,0)
PCE data.  The site can alter the pre-defined prefix and suffix text used
"^DIC",801.45,801.45,"%D",7,0)
to create sentences.  The site can also disable creation of sentences for
"^DIC",801.45,801.45,"%D",8,0)
specific types of resolution statuses (e.g., disable creation of education
"^DIC",801.45,801.45,"%D",9,0)
refused for an education topic because the site prefers to use Health
"^DIC",801.45,801.45,"%D",10,0)
Factors to represent refusals).
"^DIC",801.45,801.45,"%D",11,0)
 
"^DIC",801.45,801.45,"%D",12,0)
The entries distributed in this file may not be deleted and new entries
"^DIC",801.45,801.45,"%D",13,0)
may not be added locally. 
"^DIC",801.45,"B","REMINDER FINDING TYPE PARAMETER",801.45)

"^DIC",802.4,802.4,0)
REMINDER FUNCTION FINDING FUNCTIONS^802.4
"^DIC",802.4,802.4,0,"GL")
^PXRMD(802.4,
"^DIC",802.4,802.4,"%",0)
^1.005^^0
"^DIC",802.4,802.4,"%D",0)
^1.001^6^6^3060224^^^^
"^DIC",802.4,802.4,"%D",1,0)
Function findings operate on data from standard findings and return
"^DIC",802.4,802.4,"%D",2,0)
computed data. They can be used in patient cohort logic and resolution
"^DIC",802.4,802.4,"%D",3,0)
logic. This file defines the functions that can be used in function
"^DIC",802.4,802.4,"%D",4,0)
findings.
"^DIC",802.4,802.4,"%D",5,0)

"^DIC",802.4,802.4,"%D",6,0)

"^DIC",802.4,"B","REMINDER FUNCTION FINDING FUNCTIONS",802.4)

"^DIC",811.2,811.2,0)
REMINDER TAXONOMY^811.2I
"^DIC",811.2,811.2,0,"GL")
^PXD(811.2,
"^DIC",811.2,811.2,"%",0)
^1.005^^0
"^DIC",811.2,811.2,"%D",0)
^1.001^17^17^3140430^^^^
"^DIC",811.2,811.2,"%D",1,0)
This file stores the Clinical Reminders taxonomies. Taxonomies are
"^DIC",811.2,811.2,"%D",2,0)
used as Clinical Reminders findings and provide a way to define a
"^DIC",811.2,811.2,"%D",3,0)
set of codes as a single finding. Taxonomies are structured so that
"^DIC",811.2,811.2,"%D",4,0)
any of the coding systems defined in Lexicon's Coding System (file
"^DIC",811.2,811.2,"%D",5,0)
#757.03) can be used. However, in order for a coding system to be
"^DIC",811.2,811.2,"%D",6,0)
used in Clinical Reminders, there must be a source in VistA where
"^DIC",811.2,811.2,"%D",7,0)
the coded patient data is stored. Examples are V POV (file
"^DIC",811.2,811.2,"%D",8,0)
#9000010.07) which stores ICD diagnosis codes and PTF (file #45)
"^DIC",811.2,811.2,"%D",9,0)
which stores ICD diagnosis and procedure codes. The coding systems
"^DIC",811.2,811.2,"%D",10,0)
that meet this criteria are listed for selection in the taxonomy
"^DIC",811.2,811.2,"%D",11,0)
editor.
"^DIC",811.2,811.2,"%D",12,0)

"^DIC",811.2,811.2,"%D",13,0)
This file contains a combination of nationally distributed and local
"^DIC",811.2,811.2,"%D",14,0)
entries. Nationally distributed entries have their names prefixed with
"^DIC",811.2,811.2,"%D",15,0)
VA- and their Class is National. Local entry names cannot start with
"^DIC",811.2,811.2,"%D",16,0)
VA- or have a National Class.
"^DIC",811.2,811.2,"%D",17,0)

"^DIC",811.2,"B","REMINDER TAXONOMY",811.2)

"^DIC",811.4,811.4,0)
REMINDER COMPUTED FINDINGS^811.4
"^DIC",811.4,811.4,0,"GL")
^PXRMD(811.4,
"^DIC",811.4,811.4,"%",0)
^1.005^^0
"^DIC",811.4,811.4,"%D",0)
^1.001^28^28^3110614^^^^
"^DIC",811.4,811.4,"%D",1,0)
When none of the standard Clinical Reminder finding types will work, a
"^DIC",811.4,811.4,"%D",2,0)
computed finding can be created. There are two steps in creating a
"^DIC",811.4,811.4,"%D",3,0)
computed finding. First a MUMPS routine must be written. Information
"^DIC",811.4,811.4,"%D",4,0)
about how to do this can be found in the Clinical Reminders Manager
"^DIC",811.4,811.4,"%D",5,0)
Manual. The second step is to make an entry in this file, which
"^DIC",811.4,811.4,"%D",6,0)
contains a list of reminder computed findings. There are four fields
"^DIC",811.4,811.4,"%D",7,0)
for each entry; they are:
"^DIC",811.4,811.4,"%D",8,0)
 
"^DIC",811.4,811.4,"%D",9,0)
NAME - this is the name of the computed finding. When adding a computed
"^DIC",811.4,811.4,"%D",10,0)
finding as finding to a reminder definition or term, it is done using
"^DIC",811.4,811.4,"%D",11,0)
the name. For example, you would type CF.VA-BMI to add the exported
"^DIC",811.4,811.4,"%D",12,0)
VA-BMI computed finding to your reminder definition.
"^DIC",811.4,811.4,"%D",13,0)
 
"^DIC",811.4,811.4,"%D",14,0)
ROUTINE - this is the name of the MUMPS routine.
"^DIC",811.4,811.4,"%D",15,0)
 
"^DIC",811.4,811.4,"%D",16,0)
ENTRY - this is the entry point in the MUMPS routine.
"^DIC",811.4,811.4,"%D",17,0)
 
"^DIC",811.4,811.4,"%D",18,0)
PRINT NAME - this will be displayed on the Clinical Maintenance
"^DIC",811.4,811.4,"%D",19,0)
component as the name of the computed finding. If it is blank, then NAME
"^DIC",811.4,811.4,"%D",20,0)
will be used.
"^DIC",811.4,811.4,"%D",21,0)

"^DIC",811.4,811.4,"%D",22,0)
TYPE - this is a set of codes that specifies what type of computed
"^DIC",811.4,811.4,"%D",23,0)
finding this is. "S" stands for single occurrence, "M" for multiple occurrence,
"^DIC",811.4,811.4,"%D",24,0)
and "L" for list. If it is blank, single will be assumed.
"^DIC",811.4,811.4,"%D",25,0)

"^DIC",811.4,811.4,"%D",26,0)
This file contains a combination of nationally distributed and local
"^DIC",811.4,811.4,"%D",27,0)
entries. Nationally distributed entries have their name prefixed with
"^DIC",811.4,811.4,"%D",28,0)
VA-. Local entry names cannot start with VA-.
"^DIC",811.4,"B","REMINDER COMPUTED FINDINGS",811.4)

"^DIC",811.8,811.8,0)
REMINDER EXCHANGE^811.8
"^DIC",811.8,811.8,0,"GL")
^PXD(811.8,
"^DIC",811.8,811.8,"%",0)
^1.005^^0
"^DIC",811.8,811.8,"%D",0)
^1.001^3^3^3050126^^^^
"^DIC",811.8,811.8,"%D",1,0)
The Reminder Exchange File is used to store packed reminder
"^DIC",811.8,811.8,"%D",2,0)
definitions. All the entries in this file are managed by the
"^DIC",811.8,811.8,"%D",3,0)
Reminder Exchange Utility and should never be edited by hand.
"^DIC",811.8,"B","REMINDER EXCHANGE",811.8)

**END**
**END**
