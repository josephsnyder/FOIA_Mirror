KIDS Distribution saved on Jul 18, 2012@08:45:08
HDI7, LR350, AND LA74
**KIDS**:HDI*1.0*7^LR*5.2*350^LA*5.2*74^

**INSTALL NAME**
HDI*1.0*7
"BLD",7049,0)
HDI*1.0*7^HEALTH DATA & INFORMATICS^0^3120718^y
"BLD",7049,1,0)
^^1^1^3120221^
"BLD",7049,1,1,0)
Refer to National Patch Module.
"BLD",7049,4,0)
^9.64PA^^
"BLD",7049,6)
15^
"BLD",7049,6.3)
33
"BLD",7049,"INIT")
POST^HDI1007A
"BLD",7049,"KRN",0)
^9.67PA^8989.52^19
"BLD",7049,"KRN",.4,0)
.4
"BLD",7049,"KRN",.401,0)
.401
"BLD",7049,"KRN",.402,0)
.402
"BLD",7049,"KRN",.403,0)
.403
"BLD",7049,"KRN",.5,0)
.5
"BLD",7049,"KRN",.84,0)
.84
"BLD",7049,"KRN",3.6,0)
3.6
"BLD",7049,"KRN",3.8,0)
3.8
"BLD",7049,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",7049,"KRN",3.8,"NM",1,0)
HDIS LAB EXCEPTIONS^^0
"BLD",7049,"KRN",3.8,"NM","B","HDIS LAB EXCEPTIONS",1)

"BLD",7049,"KRN",9.2,0)
9.2
"BLD",7049,"KRN",9.8,0)
9.8
"BLD",7049,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",7049,"KRN",9.8,"NM",1,0)
HDISVAP1^^0^B15807756
"BLD",7049,"KRN",9.8,"NM",2,0)
HDISVM03^^0^B37279918
"BLD",7049,"KRN",9.8,"NM",3,0)
HDISVM04^^0^B38623461
"BLD",7049,"KRN",9.8,"NM",4,0)
HDISVS04^^0^B1565418
"BLD",7049,"KRN",9.8,"NM",5,0)
HDISVM00^^0^B9620498
"BLD",7049,"KRN",9.8,"NM",6,0)
HDISVAP2^^0^B100092820
"BLD",7049,"KRN",9.8,"NM",7,0)
HDISVAP3^^0^B39464123
"BLD",7049,"KRN",9.8,"NM",8,0)
HDISVM05^^0^B13220707
"BLD",7049,"KRN",9.8,"NM",9,0)
HDI1007A^^0^B6928908
"BLD",7049,"KRN",9.8,"NM",10,0)
HDI1007B^^0^B21051816
"BLD",7049,"KRN",9.8,"NM","B","HDI1007A",9)

"BLD",7049,"KRN",9.8,"NM","B","HDI1007B",10)

"BLD",7049,"KRN",9.8,"NM","B","HDISVAP1",1)

"BLD",7049,"KRN",9.8,"NM","B","HDISVAP2",6)

"BLD",7049,"KRN",9.8,"NM","B","HDISVAP3",7)

"BLD",7049,"KRN",9.8,"NM","B","HDISVM00",5)

"BLD",7049,"KRN",9.8,"NM","B","HDISVM03",2)

"BLD",7049,"KRN",9.8,"NM","B","HDISVM04",3)

"BLD",7049,"KRN",9.8,"NM","B","HDISVM05",8)

"BLD",7049,"KRN",9.8,"NM","B","HDISVS04",4)

"BLD",7049,"KRN",19,0)
19
"BLD",7049,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7049,"KRN",19,"NM",1,0)
HDIS-LAB-EXCEPTION-SERVER^^0
"BLD",7049,"KRN",19,"NM","B","HDIS-LAB-EXCEPTION-SERVER",1)

"BLD",7049,"KRN",19.1,0)
19.1
"BLD",7049,"KRN",101,0)
101
"BLD",7049,"KRN",409.61,0)
409.61
"BLD",7049,"KRN",771,0)
771
"BLD",7049,"KRN",870,0)
870
"BLD",7049,"KRN",8989.51,0)
8989.51
"BLD",7049,"KRN",8989.52,0)
8989.52
"BLD",7049,"KRN",8994,0)
8994
"BLD",7049,"KRN","B",.4,.4)

"BLD",7049,"KRN","B",.401,.401)

"BLD",7049,"KRN","B",.402,.402)

"BLD",7049,"KRN","B",.403,.403)

"BLD",7049,"KRN","B",.5,.5)

"BLD",7049,"KRN","B",.84,.84)

"BLD",7049,"KRN","B",3.6,3.6)

"BLD",7049,"KRN","B",3.8,3.8)

"BLD",7049,"KRN","B",9.2,9.2)

"BLD",7049,"KRN","B",9.8,9.8)

"BLD",7049,"KRN","B",19,19)

"BLD",7049,"KRN","B",19.1,19.1)

"BLD",7049,"KRN","B",101,101)

"BLD",7049,"KRN","B",409.61,409.61)

"BLD",7049,"KRN","B",771,771)

"BLD",7049,"KRN","B",870,870)

"BLD",7049,"KRN","B",8989.51,8989.51)

"BLD",7049,"KRN","B",8989.52,8989.52)

"BLD",7049,"KRN","B",8994,8994)

"BLD",7049,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7049,"QUES",0)
^9.62^^
"BLD",7049,"REQB",0)
^9.611^1^1
"BLD",7049,"REQB",1,0)
HDI*1.0*6^2
"BLD",7049,"REQB","B","HDI*1.0*6",1)

"INIT")
POST^HDI1007A
"KRN",3.8,336,-1)
0^1
"KRN",3.8,336,0)
HDIS LAB EXCEPTIONS^PU^^^^0^
"KRN",3.8,336,2,0)
^3.801^1^1^3080114^^^^
"KRN",3.8,336,2,1,0)
Exchange mail group that will be notified of Lab exceptions
"KRN",3.8,336,3)

"KRN",19,14791,-1)
0^1
"KRN",19,14791,0)
HDIS-LAB-EXCEPTION-SERVER^HDIS LAB EXCEPTION SERVER^^S^^^^^^^^
"KRN",19,14791,1,0)
^19.06^2^2^3080124^^^^
"KRN",19,14791,1,1,0)
Server option to process messages containing Lab exceptions.  The Lab 
"KRN",19,14791,1,2,0)
exception messages contain an attached (ie UUEncoded) XML document.
"KRN",19,14791,25)
LABXCPT^HDISVM00
"KRN",19,14791,220)
^R^^N^Y^N^0
"KRN",19,14791,"U")
HDIS LAB EXCEPTION SERVER
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",557,-1)
1^1
"PKG",557,0)
HEALTH DATA & INFORMATICS^HDI^Data Standardization
"PKG",557,20,0)
^9.402P^^
"PKG",557,22,0)
^9.49I^1^1
"PKG",557,22,1,0)
1.0^3070816^3050905^6686
"PKG",557,22,1,"PAH",1,0)
7^3120718^235
"PKG",557,22,1,"PAH",1,1,0)
^^1^1^3120718
"PKG",557,22,1,"PAH",1,1,1,0)
Refer to National Patch Module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","HDI1007A")
0^9^B6928908
"RTN","HDI1007A",1,0)
HDI1007A ;HRN/ART - PATCH 7 POST INSTALL;6/13/2008
"RTN","HDI1007A",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDI1007A",3,0)
 ;
"RTN","HDI1007A",4,0)
POST ;Main entry point for post-install routine
"RTN","HDI1007A",5,0)
 ; Input: None
"RTN","HDI1007A",6,0)
 ;        All variables set by Kernel for KIDS post-installs
"RTN","HDI1007A",7,0)
 ;Output: None
"RTN","HDI1007A",8,0)
 N HDIMSG
"RTN","HDI1007A",9,0)
 S HDIMSG(1)=" "
"RTN","HDI1007A",10,0)
 S HDIMSG(2)="~~~~~~~~~~~~~~~~~~~~"
"RTN","HDI1007A",11,0)
 S HDIMSG(3)="Post-Installation (POST^HDI1007A) will now be run"
"RTN","HDI1007A",12,0)
 S HDIMSG(4)=" "
"RTN","HDI1007A",13,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1007A",14,0)
 D DELETE
"RTN","HDI1007A",15,0)
 S HDIMSG(1)=" "
"RTN","HDI1007A",16,0)
 S HDIMSG(2)="Post-Installation ran to completion"
"RTN","HDI1007A",17,0)
 S HDIMSG(3)="~~~~~~~~~~~~~~~~~~~~"
"RTN","HDI1007A",18,0)
 S HDIMSG(4)=" "
"RTN","HDI1007A",19,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1007A",20,0)
 Q
"RTN","HDI1007A",21,0)
 ;
"RTN","HDI1007A",22,0)
PSTHALT ;Print post-install halted text
"RTN","HDI1007A",23,0)
 N HDIMSG
"RTN","HDI1007A",24,0)
 S HDIMSG(1)=" "
"RTN","HDI1007A",25,0)
 S HDIMSG(2)="*****"
"RTN","HDI1007A",26,0)
 S HDIMSG(3)="***** Post-installation has been halted"
"RTN","HDI1007A",27,0)
 S HDIMSG(4)="***** Please contact Enterprise VistA Support"
"RTN","HDI1007A",28,0)
 S HDIMSG(5)="*****"
"RTN","HDI1007A",29,0)
 S HDIMSG(6)=" "
"RTN","HDI1007A",30,0)
 D MES^XPDUTL(.HDIMSG)
"RTN","HDI1007A",31,0)
 Q
"RTN","HDI1007A",32,0)
 ;
"RTN","HDI1007A",33,0)
DELETE ;Delete VUID for ENTERED IN ERROR field (#22) of PATIENT
"RTN","HDI1007A",34,0)
 ; ALLERGIES file (#120.8)
"RTN","HDI1007A",35,0)
 ;
"RTN","HDI1007A",36,0)
 ; Input: None
"RTN","HDI1007A",37,0)
 ;Output: None
"RTN","HDI1007A",38,0)
 N HDIFILE,HDIFLD,HDIZERO,HDIARR,HDIERR,DIK,DA,HDIMSG,VUID,SCREEN
"RTN","HDI1007A",39,0)
 N INDX1,INDX2,HDIDATA,CODE
"RTN","HDI1007A",40,0)
 S HDIMSG(1)=" "
"RTN","HDI1007A",41,0)
 S HDIMSG(2)="Deleting invalid VUIDs entered for Lab set of code fields."
"RTN","HDI1007A",42,0)
 S HDIMSG(3)=" "
"RTN","HDI1007A",43,0)
 D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1007A",44,0)
 ;Find entry in XTID VUID FOR SET OF CODES file (#8985.1)
"RTN","HDI1007A",45,0)
 F INDX1=1:1 Q:$P($T(LAB+INDX1^HDI1007B),";;",2)=""  D
"RTN","HDI1007A",46,0)
 .S HDIDATA=$P($T(LAB+INDX1^HDI1007B),";;",2)
"RTN","HDI1007A",47,0)
 .S HDIFILE=$P(HDIDATA,"~",1)
"RTN","HDI1007A",48,0)
 .S HDIFLD=$P(HDIDATA,"~",2)
"RTN","HDI1007A",49,0)
 .S HDIMSG(1)=" "
"RTN","HDI1007A",50,0)
 .S HDIMSG(2)=" File: "_HDIFILE_"  Field: "_HDIFLD
"RTN","HDI1007A",51,0)
 .D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1007A",52,0)
 .S SCREEN="S HDIZERO=^(0) I $P(HDIZERO,""^"",1)=HDIFILE I $P(HDIZERO,""^"",2)=HDIFLD"
"RTN","HDI1007A",53,0)
 .D FIND^DIC(8985.1,,".01;.02;.03;99.99","Q",HDIFILE,,"B",SCREEN,,"HDIARR","HDIERR")
"RTN","HDI1007A",54,0)
 .;Delete entries found
"RTN","HDI1007A",55,0)
 .S INDX2=0
"RTN","HDI1007A",56,0)
 .F  S INDX2=+$O(HDIARR("DILIST",2,INDX2)) Q:'INDX2  D
"RTN","HDI1007A",57,0)
 ..S VUID=HDIARR("DILIST","ID",INDX2,99.99)
"RTN","HDI1007A",58,0)
 ..S CODE=HDIARR("DILIST","ID",INDX2,.03)
"RTN","HDI1007A",59,0)
 ..S HDIMSG(1)=" "
"RTN","HDI1007A",60,0)
 ..S HDIMSG(2)="    Deleting CODE "_CODE_"  VUID "_VUID_" ..."
"RTN","HDI1007A",61,0)
 ..;S HDIMSG(2)="    Deleting VUID "_VUID_" ..."
"RTN","HDI1007A",62,0)
 ..D MES^XPDUTL(.HDIMSG) K HDIMSG
"RTN","HDI1007A",63,0)
 ..S DA=HDIARR("DILIST",2,INDX2)
"RTN","HDI1007A",64,0)
 ..S DIK=$$GET1^DID(8985.1,,,"GLOBAL NAME")
"RTN","HDI1007A",65,0)
 ..D ^DIK
"RTN","HDI1007A",66,0)
 Q
"RTN","HDI1007B")
0^10^B21051816
"RTN","HDI1007B",1,0)
HDI1007B ;HRN/ART - HDI v1.0 POST-INSTALL DATA;6/16/2008
"RTN","HDI1007B",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDI1007B",3,0)
 ;
"RTN","HDI1007B",4,0)
LAB ;invalid VUIDs to delete for Lab domain
"RTN","HDI1007B",5,0)
 ;;60~3
"RTN","HDI1007B",6,0)
 ;;60~4
"RTN","HDI1007B",7,0)
 ;;60~7
"RTN","HDI1007B",8,0)
 ;;60~8
"RTN","HDI1007B",9,0)
 ;;60~10
"RTN","HDI1007B",10,0)
 ;;60~15
"RTN","HDI1007B",11,0)
 ;;60~64.2
"RTN","HDI1007B",12,0)
 ;;60~501
"RTN","HDI1007B",13,0)
 ;;60~503
"RTN","HDI1007B",14,0)
 ;;60.12~3
"RTN","HDI1007B",15,0)
 ;;60.2~2
"RTN","HDI1007B",16,0)
 ;;61.2~3
"RTN","HDI1007B",17,0)
 ;;61.2~4
"RTN","HDI1007B",18,0)
 ;;61.2~10
"RTN","HDI1007B",19,0)
 ;;61.21~6
"RTN","HDI1007B",20,0)
 ;;62.06~7
"RTN","HDI1007B",21,0)
 ;;62.08~.01
"RTN","HDI1007B",22,0)
 ;;63~.04
"RTN","HDI1007B",23,0)
 ;;63~.05
"RTN","HDI1007B",24,0)
 ;;63~.092
"RTN","HDI1007B",25,0)
 ;;63~13.7
"RTN","HDI1007B",26,0)
 ;;63~14.5
"RTN","HDI1007B",27,0)
 ;;63~83.1
"RTN","HDI1007B",28,0)
 ;;63~83.2
"RTN","HDI1007B",29,0)
 ;;63~102.2
"RTN","HDI1007B",30,0)
 ;;63.01~2.9
"RTN","HDI1007B",31,0)
 ;;63.01~6
"RTN","HDI1007B",32,0)
 ;;63.01~10
"RTN","HDI1007B",33,0)
 ;;63.01~11
"RTN","HDI1007B",34,0)
 ;;63.01~127
"RTN","HDI1007B",35,0)
 ;;63.01~129.12
"RTN","HDI1007B",36,0)
 ;;63.01~131
"RTN","HDI1007B",37,0)
 ;;63.01~143
"RTN","HDI1007B",38,0)
 ;;63.01~146
"RTN","HDI1007B",39,0)
 ;;63.01~149.11
"RTN","HDI1007B",40,0)
 ;;63.01~151
"RTN","HDI1007B",41,0)
 ;;63.01~153
"RTN","HDI1007B",42,0)
 ;;63.01~154
"RTN","HDI1007B",43,0)
 ;;63.014~.01
"RTN","HDI1007B",44,0)
 ;;63.014~.02
"RTN","HDI1007B",45,0)
 ;;63.015~.01
"RTN","HDI1007B",46,0)
 ;;63.015~.03
"RTN","HDI1007B",47,0)
 ;;63.017~.05
"RTN","HDI1007B",48,0)
 ;;63.017~.06
"RTN","HDI1007B",49,0)
 ;;63.017~.08
"RTN","HDI1007B",50,0)
 ;;63.017~.09
"RTN","HDI1007B",51,0)
 ;;63.018~.01
"RTN","HDI1007B",52,0)
 ;;63.018~.02
"RTN","HDI1007B",53,0)
 ;;63.019~.03
"RTN","HDI1007B",54,0)
 ;;63.02~.14
"RTN","HDI1007B",55,0)
 ;;63.02~.172
"RTN","HDI1007B",56,0)
 ;;63.04~.02
"RTN","HDI1007B",57,0)
 ;;63.04~.12
"RTN","HDI1007B",58,0)
 ;;63.04~176
"RTN","HDI1007B",59,0)
 ;;63.04~405
"RTN","HDI1007B",60,0)
 ;;63.04~406
"RTN","HDI1007B",61,0)
 ;;63.04~407
"RTN","HDI1007B",62,0)
 ;;63.04~408
"RTN","HDI1007B",63,0)
 ;;63.04~409
"RTN","HDI1007B",64,0)
 ;;63.04~410
"RTN","HDI1007B",65,0)
 ;;63.04~411
"RTN","HDI1007B",66,0)
 ;;63.04~412
"RTN","HDI1007B",67,0)
 ;;63.04~413
"RTN","HDI1007B",68,0)
 ;;63.04~414
"RTN","HDI1007B",69,0)
 ;;63.04~415
"RTN","HDI1007B",70,0)
 ;;63.04~416
"RTN","HDI1007B",71,0)
 ;;63.04~417
"RTN","HDI1007B",72,0)
 ;;63.04~418
"RTN","HDI1007B",73,0)
 ;;63.04~419
"RTN","HDI1007B",74,0)
 ;;63.04~420
"RTN","HDI1007B",75,0)
 ;;63.04~421
"RTN","HDI1007B",76,0)
 ;;63.04~422
"RTN","HDI1007B",77,0)
 ;;63.04~423
"RTN","HDI1007B",78,0)
 ;;63.04~424
"RTN","HDI1007B",79,0)
 ;;63.04~425
"RTN","HDI1007B",80,0)
 ;;63.04~426
"RTN","HDI1007B",81,0)
 ;;63.04~473
"RTN","HDI1007B",82,0)
 ;;63.04~474
"RTN","HDI1007B",83,0)
 ;;63.04~475
"RTN","HDI1007B",84,0)
 ;;63.04~476
"RTN","HDI1007B",85,0)
 ;;63.04~477
"RTN","HDI1007B",86,0)
 ;;63.04~542
"RTN","HDI1007B",87,0)
 ;;63.04~551
"RTN","HDI1007B",88,0)
 ;;63.04~581
"RTN","HDI1007B",89,0)
 ;;63.04~583
"RTN","HDI1007B",90,0)
 ;;63.04~696
"RTN","HDI1007B",91,0)
 ;;63.04~697
"RTN","HDI1007B",92,0)
 ;;63.04~699
"RTN","HDI1007B",93,0)
 ;;63.04~706
"RTN","HDI1007B",94,0)
 ;;63.04~710
"RTN","HDI1007B",95,0)
 ;;63.04~711
"RTN","HDI1007B",96,0)
 ;;63.04~712
"RTN","HDI1007B",97,0)
 ;;63.04~713
"RTN","HDI1007B",98,0)
 ;;63.04~714
"RTN","HDI1007B",99,0)
 ;;63.04~715
"RTN","HDI1007B",100,0)
 ;;63.04~716
"RTN","HDI1007B",101,0)
 ;;63.04~717
"RTN","HDI1007B",102,0)
 ;;63.04~718
"RTN","HDI1007B",103,0)
 ;;63.04~719
"RTN","HDI1007B",104,0)
 ;;63.04~721
"RTN","HDI1007B",105,0)
 ;;63.04~722
"RTN","HDI1007B",106,0)
 ;;63.04~723
"RTN","HDI1007B",107,0)
 ;;63.04~724
"RTN","HDI1007B",108,0)
 ;;63.04~725
"RTN","HDI1007B",109,0)
 ;;63.04~726
"RTN","HDI1007B",110,0)
 ;;63.04~727
"RTN","HDI1007B",111,0)
 ;;63.04~728
"RTN","HDI1007B",112,0)
 ;;63.04~798
"RTN","HDI1007B",113,0)
 ;;63.04~363037
"RTN","HDI1007B",114,0)
 ;;63.04~363043
"RTN","HDI1007B",115,0)
 ;;63.04~363076
"RTN","HDI1007B",116,0)
 ;;63.04~363079
"RTN","HDI1007B",117,0)
 ;;63.04~363080
"RTN","HDI1007B",118,0)
 ;;63.04~363086
"RTN","HDI1007B",119,0)
 ;;63.04~363105
"RTN","HDI1007B",120,0)
 ;;63.04~363139
"RTN","HDI1007B",121,0)
 ;;63.04~363158
"RTN","HDI1007B",122,0)
 ;;63.04~463001
"RTN","HDI1007B",123,0)
 ;;63.04~463039
"RTN","HDI1007B",124,0)
 ;;63.04~463060
"RTN","HDI1007B",125,0)
 ;;63.04~463061
"RTN","HDI1007B",126,0)
 ;;63.04~463066
"RTN","HDI1007B",127,0)
 ;;63.04~463067
"RTN","HDI1007B",128,0)
 ;;63.04~463073
"RTN","HDI1007B",129,0)
 ;;63.04~463079
"RTN","HDI1007B",130,0)
 ;;63.04~6017001
"RTN","HDI1007B",131,0)
 ;;63.04~6017005
"RTN","HDI1007B",132,0)
 ;;63.04~6017010
"RTN","HDI1007B",133,0)
 ;;63.04~6017012
"RTN","HDI1007B",134,0)
 ;;63.04~6017021
"RTN","HDI1007B",135,0)
 ;;63.04~6017047
"RTN","HDI1007B",136,0)
 ;;63.04~6017051
"RTN","HDI1007B",137,0)
 ;;63.04~6017052
"RTN","HDI1007B",138,0)
 ;;63.04~6017053
"RTN","HDI1007B",139,0)
 ;;63.04~6017055
"RTN","HDI1007B",140,0)
 ;;63.04~6017056
"RTN","HDI1007B",141,0)
 ;;63.04~6017057
"RTN","HDI1007B",142,0)
 ;;63.04~6017058
"RTN","HDI1007B",143,0)
 ;;63.04~6017077
"RTN","HDI1007B",144,0)
 ;;63.04~6017129
"RTN","HDI1007B",145,0)
 ;;63.04~6017147
"RTN","HDI1007B",146,0)
 ;;63.04~6017176
"RTN","HDI1007B",147,0)
 ;;63.04~6017179
"RTN","HDI1007B",148,0)
 ;;63.04~6017180
"RTN","HDI1007B",149,0)
 ;;63.04~6017220
"RTN","HDI1007B",150,0)
 ;;63.04~6017224
"RTN","HDI1007B",151,0)
 ;;63.04~6017225
"RTN","HDI1007B",152,0)
 ;;63.04~6017226
"RTN","HDI1007B",153,0)
 ;;63.04~6017238
"RTN","HDI1007B",154,0)
 ;;63.04~6017279
"RTN","HDI1007B",155,0)
 ;;63.04~6017280
"RTN","HDI1007B",156,0)
 ;;63.04~6017281
"RTN","HDI1007B",157,0)
 ;;63.04~6017282
"RTN","HDI1007B",158,0)
 ;;63.04~6017283
"RTN","HDI1007B",159,0)
 ;;63.04~6017284
"RTN","HDI1007B",160,0)
 ;;63.04~6017285
"RTN","HDI1007B",161,0)
 ;;63.04~6017286
"RTN","HDI1007B",162,0)
 ;;63.04~6017287
"RTN","HDI1007B",163,0)
 ;;63.04~6017288
"RTN","HDI1007B",164,0)
 ;;63.04~6017299
"RTN","HDI1007B",165,0)
 ;;63.04~6017300
"RTN","HDI1007B",166,0)
 ;;63.04~6017301
"RTN","HDI1007B",167,0)
 ;;63.04~6017302
"RTN","HDI1007B",168,0)
 ;;63.04~6017308
"RTN","HDI1007B",169,0)
 ;;63.04~6017316
"RTN","HDI1007B",170,0)
 ;;63.04~6017326
"RTN","HDI1007B",171,0)
 ;;63.04~6017330
"RTN","HDI1007B",172,0)
 ;;63.04~6017332
"RTN","HDI1007B",173,0)
 ;;63.04~6017334
"RTN","HDI1007B",174,0)
 ;;63.05~.02
"RTN","HDI1007B",175,0)
 ;;63.05~.09
"RTN","HDI1007B",176,0)
 ;;63.05~11.5
"RTN","HDI1007B",177,0)
 ;;63.05~11.51
"RTN","HDI1007B",178,0)
 ;;63.05~11.57
"RTN","HDI1007B",179,0)
 ;;63.05~15
"RTN","HDI1007B",180,0)
 ;;63.05~19
"RTN","HDI1007B",181,0)
 ;;63.05~23
"RTN","HDI1007B",182,0)
 ;;63.05~24
"RTN","HDI1007B",183,0)
 ;;63.05~34
"RTN","HDI1007B",184,0)
 ;;63.05~38
"RTN","HDI1007B",185,0)
 ;;63.08~.14
"RTN","HDI1007B",186,0)
 ;;63.08~.172
"RTN","HDI1007B",187,0)
 ;;63.084~.02
"RTN","HDI1007B",188,0)
 ;;63.084~.06
"RTN","HDI1007B",189,0)
 ;;63.084~.07
"RTN","HDI1007B",190,0)
 ;;63.09~.101
"RTN","HDI1007B",191,0)
 ;;63.09~.14
"RTN","HDI1007B",192,0)
 ;;63.09~.172
"RTN","HDI1007B",193,0)
 ;;63.2021~.03
"RTN","HDI1007B",194,0)
 ;;63.207~.02
"RTN","HDI1007B",195,0)
 ;;63.219~.01
"RTN","HDI1007B",196,0)
 ;;63.24~.02
"RTN","HDI1007B",197,0)
 ;;63.26~.01
"RTN","HDI1007B",198,0)
 ;;63.282~.02
"RTN","HDI1007B",199,0)
 ;;63.292~.01
"RTN","HDI1007B",200,0)
 ;;63.3~1.5
"RTN","HDI1007B",201,0)
 ;;63.3~1.8
"RTN","HDI1007B",202,0)
 ;;63.324~.02
"RTN","HDI1007B",203,0)
 ;;63.331~.03
"RTN","HDI1007B",204,0)
 ;;63.35~.01
"RTN","HDI1007B",205,0)
 ;;63.42~1
"RTN","HDI1007B",206,0)
 ;;63.812~.04
"RTN","HDI1007B",207,0)
 ;;63.812~.05
"RTN","HDI1007B",208,0)
 ;;63.8121~.03
"RTN","HDI1007B",209,0)
 ;;63.817~.02
"RTN","HDI1007B",210,0)
 ;;63.819~.01
"RTN","HDI1007B",211,0)
 ;;63.82~.02
"RTN","HDI1007B",212,0)
 ;;63.822~.03
"RTN","HDI1007B",213,0)
 ;;63.824~.03
"RTN","HDI1007B",214,0)
 ;;63.824~.04
"RTN","HDI1007B",215,0)
 ;;63.907~.02
"RTN","HDI1007B",216,0)
 ;;63.919~.01
"RTN","HDI1007B",217,0)
 ;;63.982~.02
"RTN","HDI1007B",218,0)
 ;;64~4
"RTN","HDI1007B",219,0)
 ;;64~11
"RTN","HDI1007B",220,0)
 ;;64~14
"RTN","HDI1007B",221,0)
 ;;64~15
"RTN","HDI1007B",222,0)
 ;;64~16
"RTN","HDI1007B",223,0)
 ;;64.018~5
"RTN","HDI1007B",224,0)
 ;;69.5~1
"RTN","HDI1007B",225,0)
 ;;69.5~10
"RTN","HDI1007B",226,0)
 ;;69.5~11
"RTN","HDI1007B",227,0)
 ;;69.5~13
"RTN","HDI1007B",228,0)
 ;;69.5~16
"RTN","HDI1007B",229,0)
 ;;69.52~1
"RTN","HDI1007B",230,0)
 ;;69.55~1
"RTN","HDI1007B",231,0)
 ;;95.3~20
"RTN","HDI1007B",232,0)
 ;;95.3~41
"RTN","HDI1007B",233,0)
 ;;
"RTN","HDISVAP1")
0^1^B15807756
"RTN","HDISVAP1",1,0)
HDISVAP1 ;BPFO/JRP - Application Programmer API(s);03/07/12  07:37
"RTN","HDISVAP1",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVAP1",3,0)
 ;
"RTN","HDISVAP1",4,0)
LABXCPT(ARRAY,TASKIT) ;Transmit Lab SNOMED CT exceptions
"RTN","HDISVAP1",5,0)
 ; Input: ARRAY - Array containing information about the exception
"RTN","HDISVAP1",6,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVAP1",7,0)
 ;          @ARRAY@(ETC, n) = Transaction number ^ Time stamp
"RTN","HDISVAP1",8,0)
 ;          @ARRAY@(ETC, n, [x, y, ...]) = Exception specific nodes
"RTN","HDISVAP1",9,0)
 ;
"RTN","HDISVAP1",10,0)
 ;            ETC is a code denoting the type of exception to report
"RTN","HDISVAP1",11,0)
 ;              1 = Load Exception
"RTN","HDISVAP1",12,0)
 ;              2 = Reference Lab
"RTN","HDISVAP1",13,0)
 ;              3 = Add/Edit by Site
"RTN","HDISVAP1",14,0)
 ;
"RTN","HDISVAP1",15,0)
 ;            Time Stamp is in FileMan format
"RTN","HDISVAP1",16,0)
 ;        TASKIT - Flag denoting if the work this API does should
"RTN","HDISVAP1",17,0)
 ;                 be queued to run
"RTN","HDISVAP1",18,0)
 ;                   1 = Queue to run
"RTN","HDISVAP1",19,0)
 ;                   0 = Run now (DEFAULT)
"RTN","HDISVAP1",20,0)
 ;
"RTN","HDISVAP1",21,0)
 ;Output: None
"RTN","HDISVAP1",22,0)
 ;      : The node @ARRAY@("XMZ") will be set equal to the message
"RTN","HDISVAP1",23,0)
 ;        number of the generated message.  A value of zero (0) will
"RTN","HDISVAP1",24,0)
 ;        be used when the message could not be generated.
"RTN","HDISVAP1",25,0)
 ;      : The node @ARRAY@("ZTSK") will be set equal to the task number
"RTN","HDISVAP1",26,0)
 ;        assigned if the TASKIT variable is set to one (1).  A value
"RTN","HDISVAP1",27,0)
 ;        of zero (0) will be used if queuing of this API's work was
"RTN","HDISVAP1",28,0)
 ;        not requested.
"RTN","HDISVAP1",29,0)
 ;      : The node @ARRAY@("ERROR", ETC) will be set equal to error
"RTN","HDISVAP1",30,0)
 ;        text for input exception type codes that are not supported.
"RTN","HDISVAP1",31,0)
 ;      : The node @ARRAY@("ERROR", ETC, n) will be set to error
"RTN","HDISVAP1",32,0)
 ;        text if the exception could not be handled.  This is
"RTN","HDISVAP1",33,0)
 ;        typically set because of a missing input node.  This node
"RTN","HDISVAP1",34,0)
 ;        will not be set for unsupported exception type codes.
"RTN","HDISVAP1",35,0)
 ;
"RTN","HDISVAP1",36,0)
 ; Notes: If this is not a production system the generated message
"RTN","HDISVAP1",37,0)
 ;        will be sent to the currently defined user (i.e. DUZ)
"RTN","HDISVAP1",38,0)
 ;      : The node @ARRAY@("ERROR") will be KILLed on input
"RTN","HDISVAP1",39,0)
 ;      : A pipe (|) is used as the delimiter for the "SA" and "SB"
"RTN","HDISVAP1",40,0)
 ;        nodes.  This is because they mirror the layout of the SNOMED
"RTN","HDISVAP1",41,0)
 ;        CT extract already implemented by the Lab package.
"RTN","HDISVAP1",42,0)
 ;      : A pipe (|) is used as the delimiter for the "RD" node.  This
"RTN","HDISVAP1",43,0)
 ;        is because it mirrors the layout of the resolution data being
"RTN","HDISVAP1",44,0)
 ;        transmitted by ERT to the Lab package for loading.
"RTN","HDISVAP1",45,0)
 ;      : The following text lists the nodes for each exception type
"RTN","HDISVAP1",46,0)
 ;
"RTN","HDISVAP1",47,0)
 ;   Exception Type Code 1: Load Exception
"RTN","HDISVAP1",48,0)
 ;   =====================================
"RTN","HDISVAP1",49,0)
 ;   @ARRAY@(1, n) = Transaction number ^ Time stamp
"RTN","HDISVAP1",50,0)
 ;   @ARRAY@(1, n, "TXT") = Text to describe why the exception was
"RTN","HDISVAP1",51,0)
 ;                          generated.  Contents is up to the
"RTN","HDISVAP1",52,0)
 ;                          discretion of the Lab package.
"RTN","HDISVAP1",53,0)
 ;   @ARRAY@(1, n, "SA") = The pipe delimited row of data for the
"RTN","HDISVAP1",54,0)
 ;                         entry that would be generated by the LR
"RTN","HDISVAP1",55,0)
 ;                         LAB SERVER when fulfilling a SNOMED extract
"RTN","HDISVAP1",56,0)
 ;                         report
"RTN","HDISVAP1",57,0)
 ;   @ARRAY@(1, n, "RD") = The pipe delimited row of data received
"RTN","HDISVAP1",58,0)
 ;                         from STS that the Lab package attempted
"RTN","HDISVAP1",59,0)
 ;                         to load
"RTN","HDISVAP1",60,0)
 ;
"RTN","HDISVAP1",61,0)
 ;   Exception Type Code 2: Reference Lab
"RTN","HDISVAP1",62,0)
 ;   ====================================
"RTN","HDISVAP1",63,0)
 ;   @ARRAY@(2, n) = Transaction number ^ Time stamp
"RTN","HDISVAP1",64,0)
 ;   @ARRAY@(2, n, "TXT") = Text to describe why the exception was
"RTN","HDISVAP1",65,0)
 ;                          generated.  Contents is up to the
"RTN","HDISVAP1",66,0)
 ;                          discretion of the Lab package.
"RTN","HDISVAP1",67,0)
 ;   @ARRAY@(2, n, "SA") = The pipe delimited row of data for the
"RTN","HDISVAP1",68,0)
 ;                         entry that would be generated by the LR
"RTN","HDISVAP1",69,0)
 ;                         LAB SERVER when fulfilling a SNOMED extract
"RTN","HDISVAP1",70,0)
 ;                         report
"RTN","HDISVAP1",71,0)
 ;   @ARRAY@(2, n, "RL") = Location type code ^ Location number ^
"RTN","HDISVAP1",72,0)
 ;                         Location name
"RTN","HDISVAP1",73,0)
 ;   @ARRAY@(2, n, "EC") = Encoding characters from HL-7 message
"RTN","HDISVAP1",74,0)
 ;   @ARRAY@(2, n, "OBX", 3) = Sequence 3 of received OBX segment
"RTN","HDISVAP1",75,0)
 ;   @ARRAY@(2, n, "OBX", 5) = Sequence 5 of received OBX segment
"RTN","HDISVAP1",76,0)
 ;
"RTN","HDISVAP1",77,0)
 ;     Location Type Code:
"RTN","HDISVAP1",78,0)
 ;       1 = DoD              4 = IHS 
"RTN","HDISVAP1",79,0)
 ;       2 = VA               5 = Other 
"RTN","HDISVAP1",80,0)
 ;       3 = Non-government   6 = Unknown
"RTN","HDISVAP1",81,0)
 ;
"RTN","HDISVAP1",82,0)
 ;   Exception Type Code 3: Add/Edit by Site
"RTN","HDISVAP1",83,0)
 ;   =======================================
"RTN","HDISVAP1",84,0)
 ;   @ARRAY@(3, n) = Transaction number ^ Time stamp
"RTN","HDISVAP1",85,0)
 ;   @ARRAY@(3, n, "TXT") = Text to describe why the exception was
"RTN","HDISVAP1",86,0)
 ;                          generated.  Contents is up to the
"RTN","HDISVAP1",87,0)
 ;                          discretion of the Lab package.
"RTN","HDISVAP1",88,0)
 ;   @ARRAY@(3, n, "SA") = The pipe delimited row of data for the
"RTN","HDISVAP1",89,0)
 ;                         entry that would be generated by the LR
"RTN","HDISVAP1",90,0)
 ;                         LAB SERVER when fulfilling a SNOMED extract
"RTN","HDISVAP1",91,0)
 ;                         report
"RTN","HDISVAP1",92,0)
 ;   @ARRAY@(3, n, "SB") = Same definition as the SA node except the
"RTN","HDISVAP1",93,0)
 ;                         values prior to the add/edit are used.
"RTN","HDISVAP1",94,0)
 ;                         Node not present for additions.
"RTN","HDISVAP1",95,0)
 ;
"RTN","HDISVAP1",96,0)
 ;
"RTN","HDISVAP1",97,0)
 ;   Alternate Array Format
"RTN","HDISVAP1",98,0)
 ;   ======================
"RTN","HDISVAP1",99,0)
 ;   Array nodes that are delimited pieces of data can also be broken
"RTN","HDISVAP1",100,0)
 ;   out into their individual pieces of data.  The only node that
"RTN","HDISVAP1",101,0)
 ;   CAN NOT be broken out in this manner is the main node for the
"RTN","HDISVAP1",102,0)
 ;   exception.
"RTN","HDISVAP1",103,0)
 ;   
"RTN","HDISVAP1",104,0)
 ;   Using exception type code 1 (Load Exception) as an example, the
"RTN","HDISVAP1",105,0)
 ;   alternate array format would be:
"RTN","HDISVAP1",106,0)
 ;
"RTN","HDISVAP1",107,0)
 ;     @ARRAY@(1, n) = Transaction number ^ Time stamp
"RTN","HDISVAP1",108,0)
 ;     @ARRAY@(1, n, "TXT") = Some kind of text
"RTN","HDISVAP1",109,0)
 ;     @ARRAY@(1, n, "SA", 1..N) = Piece N of the SA node
"RTN","HDISVAP1",110,0)
 ;     @ARRAY@(1, n, "RD", 1..N) = Piece N of the RD node
"RTN","HDISVAP1",111,0)
 ;
"RTN","HDISVAP1",112,0)
 ;   Note that the primary and alternate formats can not be used at
"RTN","HDISVAP1",113,0)
 ;   the same time for the same node.  If this is done, the data will
"RTN","HDISVAP1",114,0)
 ;   be ignored and the error node for the exception will be set.
"RTN","HDISVAP1",115,0)
 ;
"RTN","HDISVAP1",116,0)
 ;Initialize XMZ & ZTSK output nodes
"RTN","HDISVAP1",117,0)
 SET @ARRAY@("XMZ")=0
"RTN","HDISVAP1",118,0)
 SET @ARRAY@("ZTSK")=0
"RTN","HDISVAP1",119,0)
 SET TASKIT=+$GET(TASKIT)
"RTN","HDISVAP1",120,0)
 ;Queue running ?
"RTN","HDISVAP1",121,0)
 IF TASKIT DO  QUIT
"RTN","HDISVAP1",122,0)
 .;API asked to queue it's running
"RTN","HDISVAP1",123,0)
 .NEW ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK,TMP
"RTN","HDISVAP1",124,0)
 .SET ZTRTN="TASKIT^HDISVAP1"
"RTN","HDISVAP1",125,0)
 .SET ZTDESC="Transmit Lab SNOMED CT exceptions"
"RTN","HDISVAP1",126,0)
 .SET ZTDTH=$HOROLOG
"RTN","HDISVAP1",127,0)
 .SET ZTIO=""
"RTN","HDISVAP1",128,0)
 .SET ZTSAVE("TASKIT")=1
"RTN","HDISVAP1",129,0)
 .KILL ^TMP("HDISVAP1-TASK",$JOB)
"RTN","HDISVAP1",130,0)
 .MERGE ^TMP("HDISVAP1-TASK",$JOB)=@ARRAY
"RTN","HDISVAP1",131,0)
 .SET ZTSAVE("ARRAY")="^TMP(""HDISVAP1-TASK"",$JOB)"
"RTN","HDISVAP1",132,0)
 .SET ZTSAVE("^TMP(""HDISVAP1-TASK"",$JOB,")=""
"RTN","HDISVAP1",133,0)
 .DO ^%ZTLOAD
"RTN","HDISVAP1",134,0)
 .KILL ^TMP("HDISVAP1-TASK",$JOB)
"RTN","HDISVAP1",135,0)
 .SET @ARRAY@("ZTSK")=$GET(ZTSK)
"RTN","HDISVAP1",136,0)
 .QUIT
"RTN","HDISVAP1",137,0)
TASKIT ;Entry point used when API is asked to queue itself
"RTN","HDISVAP1",138,0)
 NEW XMLDOC,SUMTXT,ENCODED,LINE,SUBJ,LOOP
"RTN","HDISVAP1",139,0)
 ;Initialize
"RTN","HDISVAP1",140,0)
 SET XMLDOC=$NAME(^TMP("HDISVAP1",$JOB,"XMLDOC"))
"RTN","HDISVAP1",141,0)
 SET SUMTXT=$NAME(^TMP("HDISVAP1",$JOB,"SUMTXT"))
"RTN","HDISVAP1",142,0)
 SET ENCODED=$NAME(^TMP("HDISVAP1",$JOB,"ENCODED"))
"RTN","HDISVAP1",143,0)
 KILL @XMLDOC,@SUMTXT,@ENCODED,@ARRAY@("ERROR")
"RTN","HDISVAP1",144,0)
 ;Build XML document & summary text - quit if nothing to encode/send
"RTN","HDISVAP1",145,0)
 IF ('$$BUILD^HDISVAP2(ARRAY,XMLDOC,SUMTXT)) DO  QUIT
"RTN","HDISVAP1",146,0)
 .KILL @XMLDOC,@SUMTXT,@ENCODED
"RTN","HDISVAP1",147,0)
 .QUIT
"RTN","HDISVAP1",148,0)
 ;UUEncode array containing XML document
"RTN","HDISVAP1",149,0)
 SET @XMLDOC@(0)=$$FILENAME^HDISVAP3()
"RTN","HDISVAP1",150,0)
 DO ENCODE^HDISVM03(XMLDOC,ENCODED,1)
"RTN","HDISVAP1",151,0)
 ;Combine UUEncoded array and summary text
"RTN","HDISVAP1",152,0)
 SET LINE=0
"RTN","HDISVAP1",153,0)
 FOR  SET LINE=+$ORDER(@SUMTXT@(LINE)) QUIT:('LINE)  DO
"RTN","HDISVAP1",154,0)
 .SET @ENCODED@(LINE*.000001)=@SUMTXT@(LINE,0)
"RTN","HDISVAP1",155,0)
 ;Build & send message
"RTN","HDISVAP1",156,0)
 SET SUBJ="Lab Exception(s): "_$GET(@SUMTXT@(0))
"RTN","HDISVAP1",157,0)
 IF ($LENGTH(SUBJ)>64) DO
"RTN","HDISVAP1",158,0)
 .FOR LOOP=$LENGTH(SUBJ,","):-1 DO   QUIT:($LENGTH(SUBJ)<59)
"RTN","HDISVAP1",159,0)
 ..SET SUBJ=$PIECE(SUBJ,",",1,LOOP-1)
"RTN","HDISVAP1",160,0)
 .SET SUBJ=SUBJ_", ..."
"RTN","HDISVAP1",161,0)
 SET @ARRAY@("XMZ")=$$SENDMSG^HDISVAP3(ENCODED,SUBJ)
"RTN","HDISVAP1",162,0)
 ;Clean up
"RTN","HDISVAP1",163,0)
 KILL @XMLDOC,@SUMTXT,@ENCODED
"RTN","HDISVAP1",164,0)
 ;Checked for tasked use
"RTN","HDISVAP1",165,0)
 IF $DATA(ZTQUEUED) DO
"RTN","HDISVAP1",166,0)
 .;Delete task & input/output array
"RTN","HDISVAP1",167,0)
 .SET ZTREQ="@"
"RTN","HDISVAP1",168,0)
 .KILL @ARRAY
"RTN","HDISVAP1",169,0)
 .QUIT
"RTN","HDISVAP1",170,0)
 QUIT
"RTN","HDISVAP2")
0^6^B100092820
"RTN","HDISVAP2",1,0)
HDISVAP2 ;BPFO/JRP - Application Programmer API(s);03/07/12  07:47
"RTN","HDISVAP2",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVAP2",3,0)
 ;
"RTN","HDISVAP2",4,0)
 ; THIS IS A CONTINUATION OF LABXCPT^HDISVAP1
"RTN","HDISVAP2",5,0)
 ;
"RTN","HDISVAP2",6,0)
BUILD(ARRAY,XMLDOC,SUMTXT) ;Build XML document for Lab exceptions
"RTN","HDISVAP2",7,0)
 ; Input: ARRAY - Array containing information about the exception
"RTN","HDISVAP2",8,0)
 ;                (FULL GLOBAL REFERENCE)
"RTN","HDISVAP2",9,0)
 ;        XMLDOC - Array to build XML document into
"RTN","HDISVAP2",10,0)
 ;                 (FULL GLOBAL REFERENCE)
"RTN","HDISVAP2",11,0)
 ;        SUMTXT - Array to build summary text into
"RTN","HDISVAP2",12,0)
 ;                 (FULL GLOBAL REFERENCE) (Optional)
"RTN","HDISVAP2",13,0)
 ;Output: Number of exeptions added to XML document
"RTN","HDISVAP2",14,0)
 ;        @XMLDOC@(1..N,0) = Line N of XML document
"RTN","HDISVAP2",15,0)
 ;        @SUMTXT@(1..N,0) = Line N of summary text
"RTN","HDISVAP2",16,0)
 ;        @SUMTXT@(0) = List of IDs added to XML document
"RTN","HDISVAP2",17,0)
 ;                      (comma separated)
"RTN","HDISVAP2",18,0)
 ; Notes: See LABXCPT^HDISVAP1 for details concerning layout of
"RTN","HDISVAP2",19,0)
 ;        ARRAY and the nodes that are set to denote errors that
"RTN","HDISVAP2",20,0)
 ;        were encountered while building the XML document
"RTN","HDISVAP2",21,0)
 ;      : Existance and validity of required input is assumed
"RTN","HDISVAP2",22,0)
 ;      : XMLDOC & SUMTXT are initialized (ie KILLed) on input
"RTN","HDISVAP2",23,0)
 ;      : XMLDOC & SUMTXT will be KILLed if no exceptions are
"RTN","HDISVAP2",24,0)
 ;        are added to the XML document
"RTN","HDISVAP2",25,0)
 ;
"RTN","HDISVAP2",26,0)
 NEW XCPTTYPE,XCPTNUM,XCPTNODE,XMLNODE,XCPTADD,ERROR
"RTN","HDISVAP2",27,0)
 NEW TAGS,TAGREF,ERRXML,SUMNODE,ERRSUM,TEXT,ERRTXT
"RTN","HDISVAP2",28,0)
 SET TAGS=$NAME(^TMP("HDISVAP1",$JOB,"TAGS"))
"RTN","HDISVAP2",29,0)
 SET SUMTXT=$GET(SUMTXT)
"RTN","HDISVAP2",30,0)
 KILL @XMLDOC,@TAGS IF (SUMTXT'="") KILL @SUMTXT
"RTN","HDISVAP2",31,0)
 SET XMLNODE=1
"RTN","HDISVAP2",32,0)
 SET XCPTADD=0
"RTN","HDISVAP2",33,0)
 SET SUMNODE=1
"RTN","HDISVAP2",34,0)
 ;Initialize array of XML element names
"RTN","HDISVAP2",35,0)
 DO GETTAGS^HDISVAP3(TAGS)
"RTN","HDISVAP2",36,0)
 ;Add XML header to XML document
"RTN","HDISVAP2",37,0)
 SET @XMLDOC@(XMLNODE,0)=$$XMLHDR^XOBVLIB()
"RTN","HDISVAP2",38,0)
 SET XMLNODE=XMLNODE+1
"RTN","HDISVAP2",39,0)
 ;Add root element to XML document
"RTN","HDISVAP2",40,0)
 SET TAGREF=1 DO ADDBEG
"RTN","HDISVAP2",41,0)
 ;Loop through exception type codes
"RTN","HDISVAP2",42,0)
 SET XCPTTYPE=0
"RTN","HDISVAP2",43,0)
 FOR  SET XCPTTYPE=+$ORDER(@ARRAY@(XCPTTYPE)) QUIT:('XCPTTYPE)  DO
"RTN","HDISVAP2",44,0)
 .SET ERROR=0
"RTN","HDISVAP2",45,0)
 .;Remember current locations in XML document & summary text
"RTN","HDISVAP2",46,0)
 .; Needed for errors
"RTN","HDISVAP2",47,0)
 .SET ERRXML=XMLNODE
"RTN","HDISVAP2",48,0)
 .SET ERRSUM=SUMNODE
"RTN","HDISVAP2",49,0)
 .;Unsupported exception type code
"RTN","HDISVAP2",50,0)
 .IF (",1,2,3,"'[XCPTTYPE) DO  QUIT
"RTN","HDISVAP2",51,0)
 ..SET XCPTNUM=0
"RTN","HDISVAP2",52,0)
 ..SET ERRTXT="Exception Type Code "_XCPTTYPE_" not supported"
"RTN","HDISVAP2",53,0)
 ..DO ERR
"RTN","HDISVAP2",54,0)
 ..QUIT
"RTN","HDISVAP2",55,0)
 .;Loop through exceptions
"RTN","HDISVAP2",56,0)
 .SET XCPTNUM=0
"RTN","HDISVAP2",57,0)
 .FOR  SET XCPTNUM=+$ORDER(@ARRAY@(XCPTTYPE,XCPTNUM)) QUIT:('XCPTNUM)  DO
"RTN","HDISVAP2",58,0)
 ..;Remember current locations in XML document & summary text
"RTN","HDISVAP2",59,0)
 ..; Needed for errors
"RTN","HDISVAP2",60,0)
 ..SET ERRXML=XMLNODE
"RTN","HDISVAP2",61,0)
 ..SET ERRSUM=SUMNODE
"RTN","HDISVAP2",62,0)
 ..;Add begin tag to XML document
"RTN","HDISVAP2",63,0)
 ..SET TAGREF=2 DO ADDBEG
"RTN","HDISVAP2",64,0)
 ..;Build contents of XML document (also creates summary text)
"RTN","HDISVAP2",65,0)
 ..DO ADMIN QUIT:(ERROR)
"RTN","HDISVAP2",66,0)
 ..DO SNOMED QUIT:(ERROR)
"RTN","HDISVAP2",67,0)
 ..DO RSLTN QUIT:(ERROR)
"RTN","HDISVAP2",68,0)
 ..DO REFLAB QUIT:(ERROR)
"RTN","HDISVAP2",69,0)
 ..;Separator for summary text
"RTN","HDISVAP2",70,0)
 ..IF (SUMTXT'="") DO
"RTN","HDISVAP2",71,0)
 ...SET TEXT="" SET $PIECE(TEXT,"= ",40)="="
"RTN","HDISVAP2",72,0)
 ...DO SUMADD^HDISVAP3(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP2",73,0)
 ...DO SUMADD^HDISVAP3(" ",SUMTXT,.SUMNODE)
"RTN","HDISVAP2",74,0)
 ..;Add end tag to XML document
"RTN","HDISVAP2",75,0)
 ..SET TAGREF=2 DO ADDEND
"RTN","HDISVAP2",76,0)
 ..;Increment counter of exceptions added to XML document
"RTN","HDISVAP2",77,0)
 ..SET XCPTADD=XCPTADD+1
"RTN","HDISVAP2",78,0)
 ..;Add ID to list of IDs in summary text
"RTN","HDISVAP2",79,0)
 ..IF (SUMTXT'="") DO SUMID^HDISVAP3(SUMTXT,$NAME(@ARRAY@(XCPTTYPE,XCPTNUM,"SA")))
"RTN","HDISVAP2",80,0)
 ..QUIT
"RTN","HDISVAP2",81,0)
 .QUIT
"RTN","HDISVAP2",82,0)
 ;End root element in XML document
"RTN","HDISVAP2",83,0)
 SET TAGREF=1 DO ADDEND
"RTN","HDISVAP2",84,0)
 ;No exceptions added to XML document - delete it & summary text
"RTN","HDISVAP2",85,0)
 IF ('XCPTADD) KILL @XMLDOC IF (SUMTXT'="") KILL @SUMTXT
"RTN","HDISVAP2",86,0)
 ;Done - clean up and quit
"RTN","HDISVAP2",87,0)
 KILL @TAGS
"RTN","HDISVAP2",88,0)
 QUIT XCPTADD
"RTN","HDISVAP2",89,0)
 ;
"RTN","HDISVAP2",90,0)
ADMIN ;Administrative data
"RTN","HDISVAP2",91,0)
 NEW NODE,TMP,DATA,ARRTYPE,DELIM,TEXT
"RTN","HDISVAP2",92,0)
 SET ERROR=0
"RTN","HDISVAP2",93,0)
 ;Add begin tag
"RTN","HDISVAP2",94,0)
 SET TAGREF=3 DO ADDBEG
"RTN","HDISVAP2",95,0)
 ;Facility number
"RTN","HDISVAP2",96,0)
 SET:('$$GETFAC^HDISVF07(,.TEXT)) TEXT=$$FACPTR^HDISVF01()
"RTN","HDISVAP2",97,0)
 SET TEXT=$PIECE($$NS^XUAF4(TEXT),"^",2)
"RTN","HDISVAP2",98,0)
 IF (TEXT="") SET TEXT=$$FACNUM^HDISVF01()
"RTN","HDISVAP2",99,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",100,0)
 .SET ERRTXT="Unable to determine current facility number"
"RTN","HDISVAP2",101,0)
 .DO ERR
"RTN","HDISVAP2",102,0)
 .QUIT
"RTN","HDISVAP2",103,0)
 SET TAGREF=3.01
"RTN","HDISVAP2",104,0)
 DO ADD
"RTN","HDISVAP2",105,0)
 ;Facility domain/IP
"RTN","HDISVAP2",106,0)
 SET:('$$GETDIP^HDISVF07(,.TEXT)) TEXT=$GET(^XMB("NETNAME"))
"RTN","HDISVAP2",107,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",108,0)
 .SET ERRTXT="Unable to determine MailMan domain for this location"
"RTN","HDISVAP2",109,0)
 .DO ERR
"RTN","HDISVAP2",110,0)
 .QUIT
"RTN","HDISVAP2",111,0)
 SET TAGREF=3.02
"RTN","HDISVAP2",112,0)
 DO ADD
"RTN","HDISVAP2",113,0)
 ;System type of facility
"RTN","HDISVAP2",114,0)
 IF ('$$GETTYPE^HDISVF07(,,.TEXT)) DO
"RTN","HDISVAP2",115,0)
 .SET TEXT=$$PROD^XUPROD()
"RTN","HDISVAP2",116,0)
 .SET TEXT=$SELECT(TEXT:"PRODUCTION",1:"TEST")
"RTN","HDISVAP2",117,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",118,0)
 .SET ERRTXT="Unable to determine if this is a production or test system"
"RTN","HDISVAP2",119,0)
 .DO ERR
"RTN","HDISVAP2",120,0)
 .QUIT
"RTN","HDISVAP2",121,0)
 SET TAGREF=3.03
"RTN","HDISVAP2",122,0)
 DO ADD
"RTN","HDISVAP2",123,0)
 ;Exception type
"RTN","HDISVAP2",124,0)
 SET TEXT=XCPTTYPE
"RTN","HDISVAP2",125,0)
 SET TAGREF=3.04
"RTN","HDISVAP2",126,0)
 DO ADD
"RTN","HDISVAP2",127,0)
 ;Copy into working array
"RTN","HDISVAP2",128,0)
 SET DELIM="^"
"RTN","HDISVAP2",129,0)
 SET NODE=$GET(@ARRAY@(XCPTTYPE,XCPTNUM))
"RTN","HDISVAP2",130,0)
 DO PRSENODE
"RTN","HDISVAP2",131,0)
 ;Trasaction number
"RTN","HDISVAP2",132,0)
 SET TEXT=$GET(DATA(1))
"RTN","HDISVAP2",133,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",134,0)
 .SET ERRTXT="Transaction Number does not have a value"
"RTN","HDISVAP2",135,0)
 .DO ERR
"RTN","HDISVAP2",136,0)
 .QUIT
"RTN","HDISVAP2",137,0)
 SET TAGREF=3.05
"RTN","HDISVAP2",138,0)
 DO ADD
"RTN","HDISVAP2",139,0)
 ;Time stamp (convert to XML)
"RTN","HDISVAP2",140,0)
 SET TEXT=$GET(DATA(2))
"RTN","HDISVAP2",141,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",142,0)
 .SET ERRTXT="Time Stamp of exception does not have a value"
"RTN","HDISVAP2",143,0)
 .DO ERR
"RTN","HDISVAP2",144,0)
 .QUIT
"RTN","HDISVAP2",145,0)
 SET TEXT=$$FMTXML^HDISVU01(TEXT,0,1)
"RTN","HDISVAP2",146,0)
 SET TAGREF=3.06
"RTN","HDISVAP2",147,0)
 DO ADD
"RTN","HDISVAP2",148,0)
 ;Exception text
"RTN","HDISVAP2",149,0)
 SET TEXT=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"TXT"))
"RTN","HDISVAP2",150,0)
 SET TAGREF=3.07
"RTN","HDISVAP2",151,0)
 DO ADD
"RTN","HDISVAP2",152,0)
 ;Add end tag
"RTN","HDISVAP2",153,0)
 SET TAGREF=3 DO ADDEND
"RTN","HDISVAP2",154,0)
 ;Summary text
"RTN","HDISVAP2",155,0)
 IF (SUMTXT'="") DO SUMADMIN^HDISVAP3(SUMTXT,XCPTTYPE,.DATA,.SUMNODE)
"RTN","HDISVAP2",156,0)
 QUIT
"RTN","HDISVAP2",157,0)
 ;
"RTN","HDISVAP2",158,0)
SNOMED ;SNOMED extract data
"RTN","HDISVAP2",159,0)
 NEW NODE,SPOT,DATA,ARRTYPE,DELIM,TEXT
"RTN","HDISVAP2",160,0)
 SET ERROR=0
"RTN","HDISVAP2",161,0)
 ;Add begin tag
"RTN","HDISVAP2",162,0)
 SET TAGREF=4 DO ADDBEG
"RTN","HDISVAP2",163,0)
 ;Determine array format
"RTN","HDISVAP2",164,0)
 SET ARRTYPE=$DATA(@ARRAY@(XCPTTYPE,XCPTNUM,"SA"))
"RTN","HDISVAP2",165,0)
 ;Primary and alternate format used - throw error
"RTN","HDISVAP2",166,0)
 IF ARRTYPE=11 DO  QUIT
"RTN","HDISVAP2",167,0)
 .SET ERRTXT="Primary & alternate input formats used"
"RTN","HDISVAP2",168,0)
 .DO ERR
"RTN","HDISVAP2",169,0)
 .QUIT
"RTN","HDISVAP2",170,0)
 ;Primary format used
"RTN","HDISVAP2",171,0)
 IF ARRTYPE=1 DO
"RTN","HDISVAP2",172,0)
 .;Copy into working array
"RTN","HDISVAP2",173,0)
 .SET DELIM="|"
"RTN","HDISVAP2",174,0)
 .SET NODE=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"SA"))
"RTN","HDISVAP2",175,0)
 .DO PRSENODE
"RTN","HDISVAP2",176,0)
 .QUIT
"RTN","HDISVAP2",177,0)
 ;Alternate format used
"RTN","HDISVAP2",178,0)
 IF ARRTYPE=10 DO
"RTN","HDISVAP2",179,0)
 .;Copy into working array
"RTN","HDISVAP2",180,0)
 .KILL DATA
"RTN","HDISVAP2",181,0)
 .MERGE DATA=@ARRAY@(XCPTTYPE,XCPTNUM,"SA")
"RTN","HDISVAP2",182,0)
 .QUIT
"RTN","HDISVAP2",183,0)
 ;Loop through data and add to document
"RTN","HDISVAP2",184,0)
 SET NODE=0
"RTN","HDISVAP2",185,0)
 FOR  SET NODE=+$ORDER(DATA(NODE)) QUIT:('NODE)  DO
"RTN","HDISVAP2",186,0)
 .SET TEXT=DATA(NODE)
"RTN","HDISVAP2",187,0)
 .SET TAGREF=4+(NODE*.01)
"RTN","HDISVAP2",188,0)
 .DO ADD
"RTN","HDISVAP2",189,0)
 .QUIT
"RTN","HDISVAP2",190,0)
 ;Add end tag
"RTN","HDISVAP2",191,0)
 SET TAGREF=4 DO ADDEND
"RTN","HDISVAP2",192,0)
 ;Summary text
"RTN","HDISVAP2",193,0)
 IF (SUMTXT'="") DO SUMSNOMD^HDISVAP3(SUMTXT,.DATA,.SUMNODE)
"RTN","HDISVAP2",194,0)
 QUIT
"RTN","HDISVAP2",195,0)
 ;
"RTN","HDISVAP2",196,0)
RSLTN ;Resolution data
"RTN","HDISVAP2",197,0)
 NEW NODE,SPOT,DATA,ARRTYPE,DELIM,TEXT
"RTN","HDISVAP2",198,0)
 SET ERROR=0
"RTN","HDISVAP2",199,0)
 ;Add begin tag
"RTN","HDISVAP2",200,0)
 SET TAGREF=5 DO ADDBEG
"RTN","HDISVAP2",201,0)
 ;Resolution data sent to site (load exceptions only)
"RTN","HDISVAP2",202,0)
 IF (XCPTTYPE=1) DO  QUIT:(ERROR)
"RTN","HDISVAP2",203,0)
 .;Determine array format
"RTN","HDISVAP2",204,0)
 .SET ARRTYPE=$DATA(@ARRAY@(XCPTTYPE,XCPTNUM,"RD"))
"RTN","HDISVAP2",205,0)
 .;Primary and alternate format used - throw error
"RTN","HDISVAP2",206,0)
 .IF ARRTYPE=11 DO  QUIT
"RTN","HDISVAP2",207,0)
 ..SET ERRTXT="Primary & alternate input formats used"
"RTN","HDISVAP2",208,0)
 ..DO ERR
"RTN","HDISVAP2",209,0)
 ..QUIT
"RTN","HDISVAP2",210,0)
 .;Primary format used
"RTN","HDISVAP2",211,0)
 .IF ARRTYPE=1 DO
"RTN","HDISVAP2",212,0)
 ..;Copy into working array
"RTN","HDISVAP2",213,0)
 ..SET DELIM="|"
"RTN","HDISVAP2",214,0)
 ..SET NODE=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"RD"))
"RTN","HDISVAP2",215,0)
 ..DO PRSENODE
"RTN","HDISVAP2",216,0)
 ..QUIT
"RTN","HDISVAP2",217,0)
 .;Alternate format used
"RTN","HDISVAP2",218,0)
 .IF ARRTYPE=10 DO
"RTN","HDISVAP2",219,0)
 ..;Copy into working array
"RTN","HDISVAP2",220,0)
 ..KILL DATA
"RTN","HDISVAP2",221,0)
 ..MERGE DATA=@ARRAY@(XCPTTYPE,XCPTNUM,"RD")
"RTN","HDISVAP2",222,0)
 ..QUIT
"RTN","HDISVAP2",223,0)
 .;Loop through data and add to document
"RTN","HDISVAP2",224,0)
 .SET NODE=0
"RTN","HDISVAP2",225,0)
 .FOR  SET NODE=+$ORDER(DATA(NODE)) QUIT:('NODE)  DO
"RTN","HDISVAP2",226,0)
 ..SET TEXT=DATA(NODE)
"RTN","HDISVAP2",227,0)
 ..SET TAGREF=5+(NODE*.01)
"RTN","HDISVAP2",228,0)
 ..DO ADD
"RTN","HDISVAP2",229,0)
 ..QUIT
"RTN","HDISVAP2",230,0)
 .QUIT
"RTN","HDISVAP2",231,0)
 ;Doesn't apply to exception type - send empty elements
"RTN","HDISVAP2",232,0)
 IF (XCPTTYPE'=1) DO
"RTN","HDISVAP2",233,0)
 .SET TEXT=""
"RTN","HDISVAP2",234,0)
 .FOR TAGREF=5.01:.01:5.06 DO ADD
"RTN","HDISVAP2",235,0)
 .QUIT
"RTN","HDISVAP2",236,0)
 ;Add end tag
"RTN","HDISVAP2",237,0)
 SET TAGREF=5 DO ADDEND
"RTN","HDISVAP2",238,0)
 QUIT
"RTN","HDISVAP2",239,0)
 ;
"RTN","HDISVAP2",240,0)
REFLAB ;Reference lab data
"RTN","HDISVAP2",241,0)
 NEW NODE,DATA,ARRTYPE,DELIM,TEXT
"RTN","HDISVAP2",242,0)
 SET ERROR=0
"RTN","HDISVAP2",243,0)
 ;Add begin tag
"RTN","HDISVAP2",244,0)
 SET TAGREF=6 DO ADDBEG
"RTN","HDISVAP2",245,0)
 ;Reference lab data (reference lab exceptions only)
"RTN","HDISVAP2",246,0)
 IF (XCPTTYPE=2) DO  QUIT:(ERROR)
"RTN","HDISVAP2",247,0)
 .;Determine array format
"RTN","HDISVAP2",248,0)
 .SET ARRTYPE=$DATA(@ARRAY@(XCPTTYPE,XCPTNUM,"RL"))
"RTN","HDISVAP2",249,0)
 .;Primary and alternate format used - throw error
"RTN","HDISVAP2",250,0)
 .IF ARRTYPE=11 DO  QUIT
"RTN","HDISVAP2",251,0)
 ..SET ERRTXT="Primary & alternate input formats used"
"RTN","HDISVAP2",252,0)
 ..DO ERR
"RTN","HDISVAP2",253,0)
 ..QUIT
"RTN","HDISVAP2",254,0)
 .;Primary format used
"RTN","HDISVAP2",255,0)
 .IF ARRTYPE=1 DO
"RTN","HDISVAP2",256,0)
 ..;Copy into working array
"RTN","HDISVAP2",257,0)
 ..SET DELIM="^"
"RTN","HDISVAP2",258,0)
 ..SET NODE=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"RL"))
"RTN","HDISVAP2",259,0)
 ..DO PRSENODE
"RTN","HDISVAP2",260,0)
 ..QUIT
"RTN","HDISVAP2",261,0)
 .;Alternate format used
"RTN","HDISVAP2",262,0)
 .IF ARRTYPE=10 DO
"RTN","HDISVAP2",263,0)
 ..;Copy into working array
"RTN","HDISVAP2",264,0)
 ..KILL DATA
"RTN","HDISVAP2",265,0)
 ..MERGE DATA=@ARRAY@(XCPTTYPE,XCPTNUM,"RL")
"RTN","HDISVAP2",266,0)
 ..QUIT
"RTN","HDISVAP2",267,0)
 .;Lab type code
"RTN","HDISVAP2",268,0)
 .SET TEXT=$GET(DATA(1))
"RTN","HDISVAP2",269,0)
 .IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",270,0)
 ..SET ERRTXT="Location Type Code of reference lab does not have a value"
"RTN","HDISVAP2",271,0)
 ..DO ERR
"RTN","HDISVAP2",272,0)
 ..QUIT
"RTN","HDISVAP2",273,0)
 .IF (",1,2,3,4,5,6,"'[TEXT) DO  QUIT
"RTN","HDISVAP2",274,0)
 ..SET ERRTXT="Location Type Code of reference lab does not have a valid value"
"RTN","HDISVAP2",275,0)
 ..DO ERR
"RTN","HDISVAP2",276,0)
 ..QUIT
"RTN","HDISVAP2",277,0)
 .SET TAGREF=6.01
"RTN","HDISVAP2",278,0)
 .DO ADD
"RTN","HDISVAP2",279,0)
 .;Lab station number
"RTN","HDISVAP2",280,0)
 .SET TEXT=$GET(DATA(2))
"RTN","HDISVAP2",281,0)
 .IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",282,0)
 ..SET ERRTXT="Location Number of reference lab does not have a value"
"RTN","HDISVAP2",283,0)
 ..DO ERR
"RTN","HDISVAP2",284,0)
 ..QUIT
"RTN","HDISVAP2",285,0)
 .SET TAGREF=6.02
"RTN","HDISVAP2",286,0)
 .DO ADD
"RTN","HDISVAP2",287,0)
 .;Lab name
"RTN","HDISVAP2",288,0)
 .SET TEXT=$GET(DATA(3))
"RTN","HDISVAP2",289,0)
 .IF (TEXT="") DO  QUIT
"RTN","HDISVAP2",290,0)
 ..SET ERRTXT="Location Name of reference lab does not have a value"
"RTN","HDISVAP2",291,0)
 ..DO ERR
"RTN","HDISVAP2",292,0)
 ..QUIT
"RTN","HDISVAP2",293,0)
 .SET TAGREF=6.03
"RTN","HDISVAP2",294,0)
 .DO ADD
"RTN","HDISVAP2",295,0)
 .;OBX-3
"RTN","HDISVAP2",296,0)
 .SET TEXT=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"OBX",3))
"RTN","HDISVAP2",297,0)
 .SET TAGREF=6.04
"RTN","HDISVAP2",298,0)
 .DO ADD
"RTN","HDISVAP2",299,0)
 .;OBX-5
"RTN","HDISVAP2",300,0)
 .SET TEXT=$GET(@ARRAY@(XCPTTYPE,XCPTNUM,"OBX",5))
"RTN","HDISVAP2",301,0)
 .SET TAGREF=6.05
"RTN","HDISVAP2",302,0)
 .DO ADD
"RTN","HDISVAP2",303,0)
 .;Summary text
"RTN","HDISVAP2",304,0)
 .IF (SUMTXT'="") DO SUMRFLAB^HDISVAP3(SUMTXT,.DATA,.SUMNODE)
"RTN","HDISVAP2",305,0)
 .QUIT
"RTN","HDISVAP2",306,0)
 ;Doesn't apply to exception type - send empty elements
"RTN","HDISVAP2",307,0)
 IF (XCPTTYPE'=2) DO
"RTN","HDISVAP2",308,0)
 .SET TEXT=""
"RTN","HDISVAP2",309,0)
 .FOR TAGREF=6.01:.01:6.05 DO ADD
"RTN","HDISVAP2",310,0)
 .QUIT
"RTN","HDISVAP2",311,0)
 ;Add end tag
"RTN","HDISVAP2",312,0)
 SET TAGREF=6 DO ADDEND
"RTN","HDISVAP2",313,0)
 QUIT
"RTN","HDISVAP2",314,0)
 ;
"RTN","HDISVAP2",315,0)
ADD ;Add text to XML document
"RTN","HDISVAP2",316,0)
 NEW TAGNAME
"RTN","HDISVAP2",317,0)
 ;Get element name
"RTN","HDISVAP2",318,0)
 SET TAGNAME=$GET(@TAGS@(TAGREF))
"RTN","HDISVAP2",319,0)
 IF (TAGNAME="") QUIT
"RTN","HDISVAP2",320,0)
 ;Add text
"RTN","HDISVAP2",321,0)
 DO ADD^HDISVAP3(TEXT,TAGNAME,XMLDOC,.XMLNODE)
"RTN","HDISVAP2",322,0)
 QUIT
"RTN","HDISVAP2",323,0)
 ;
"RTN","HDISVAP2",324,0)
ADDBEG ; Add beginning tag to XML document
"RTN","HDISVAP2",325,0)
 NEW TAGNAME
"RTN","HDISVAP2",326,0)
 ;Get element name
"RTN","HDISVAP2",327,0)
 SET TAGNAME=$GET(@TAGS@(TAGREF))
"RTN","HDISVAP2",328,0)
 IF (TAGNAME="") QUIT
"RTN","HDISVAP2",329,0)
 ;Add beginning tag
"RTN","HDISVAP2",330,0)
 DO ADDBEG^HDISVAP3(TAGNAME,XMLDOC,.XMLNODE)
"RTN","HDISVAP2",331,0)
 QUIT
"RTN","HDISVAP2",332,0)
 ;
"RTN","HDISVAP2",333,0)
ADDEND ;Add ending tag to XML document
"RTN","HDISVAP2",334,0)
 NEW TAGNAME
"RTN","HDISVAP2",335,0)
 ;Get element name
"RTN","HDISVAP2",336,0)
 SET TAGNAME=$GET(@TAGS@(TAGREF))
"RTN","HDISVAP2",337,0)
 IF (TAGNAME="") QUIT
"RTN","HDISVAP2",338,0)
 ;Add closing tag
"RTN","HDISVAP2",339,0)
 DO ADDEND^HDISVAP3(TAGNAME,XMLDOC,.XMLNODE)
"RTN","HDISVAP2",340,0)
 QUIT
"RTN","HDISVAP2",341,0)
 ;
"RTN","HDISVAP2",342,0)
PRSENODE ;Parse delimited data in NODE into individual pieces
"RTN","HDISVAP2",343,0)
 NEW LOOP
"RTN","HDISVAP2",344,0)
 KILL DATA
"RTN","HDISVAP2",345,0)
 FOR LOOP=1:1:$LENGTH(NODE,DELIM) DO
"RTN","HDISVAP2",346,0)
 .SET DATA(LOOP)=$PIECE(NODE,DELIM,LOOP)
"RTN","HDISVAP2",347,0)
 QUIT
"RTN","HDISVAP2",348,0)
 ;
"RTN","HDISVAP2",349,0)
ERR ;Error found
"RTN","HDISVAP2",350,0)
 NEW X
"RTN","HDISVAP2",351,0)
 ;Remove data from XML document
"RTN","HDISVAP2",352,0)
 FOR X=ERRXML:1:XMLNODE KILL @XMLDOC@(X)
"RTN","HDISVAP2",353,0)
 ;Remove data from summary text
"RTN","HDISVAP2",354,0)
 IF (SUMTXT'="") DO
"RTN","HDISVAP2",355,0)
 .FOR X=ERRSUM:1:SUMNODE KILL @SUMTXT@(X)
"RTN","HDISVAP2",356,0)
 ;Log exception
"RTN","HDISVAP2",357,0)
 IF ($GET(XCPTNUM)) SET @ARRAY@("ERROR",XCPTTYPE,XCPTNUM)=ERRTXT
"RTN","HDISVAP2",358,0)
 IF ('$GET(XCPTNUM)) SET @ARRAY@("ERROR",XCPTTYPE)=ERRTXT
"RTN","HDISVAP2",359,0)
 ;Reset insertion points
"RTN","HDISVAP2",360,0)
 SET XMLNODE=ERRXML
"RTN","HDISVAP2",361,0)
 SET SUMNODE=ERRSUM
"RTN","HDISVAP2",362,0)
 ;Set error flag
"RTN","HDISVAP2",363,0)
 SET ERROR=1
"RTN","HDISVAP2",364,0)
 QUIT
"RTN","HDISVAP3")
0^7^B39464123
"RTN","HDISVAP3",1,0)
HDISVAP3 ;BPFO/JRP - Application Programmer API(s);03/07/12  07:56
"RTN","HDISVAP3",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVAP3",3,0)
 ;
"RTN","HDISVAP3",4,0)
 ; THIS IS A CONTINUATION OF LABXCPT^HDISVAP1
"RTN","HDISVAP3",5,0)
 ;
"RTN","HDISVAP3",6,0)
ADD(TEXT,TAGNAME,XMLDOC,XMLNODE) ;Add text to XML document
"RTN","HDISVAP3",7,0)
 NEW ESCTEXT
"RTN","HDISVAP3",8,0)
 IF (TAGNAME="") QUIT
"RTN","HDISVAP3",9,0)
 ;Check for NULL data - special denotion in XML
"RTN","HDISVAP3",10,0)
 IF (TEXT="") DO  QUIT
"RTN","HDISVAP3",11,0)
 .SET @XMLDOC@(XMLNODE,0)="<"_TAGNAME_"/>"
"RTN","HDISVAP3",12,0)
 .SET XMLNODE=XMLNODE+1
"RTN","HDISVAP3",13,0)
 .QUIT
"RTN","HDISVAP3",14,0)
 ;Convert reserved XML characters to escape sequences
"RTN","HDISVAP3",15,0)
 SET ESCTEXT=$$CHARCHK^XOBVLIB(TEXT)
"RTN","HDISVAP3",16,0)
 ;Add text
"RTN","HDISVAP3",17,0)
 SET @XMLDOC@(XMLNODE,0)="<"_TAGNAME_">"_ESCTEXT_"</"_TAGNAME_">"
"RTN","HDISVAP3",18,0)
 SET XMLNODE=XMLNODE+1
"RTN","HDISVAP3",19,0)
 QUIT
"RTN","HDISVAP3",20,0)
 ;
"RTN","HDISVAP3",21,0)
ADDBEG(TAGNAME,XMLDOC,XMLNODE) ; Add beginning tag to XML document
"RTN","HDISVAP3",22,0)
 SET @XMLDOC@(XMLNODE,0)="<"_TAGNAME_">"
"RTN","HDISVAP3",23,0)
 SET XMLNODE=XMLNODE+1
"RTN","HDISVAP3",24,0)
 QUIT
"RTN","HDISVAP3",25,0)
 ;
"RTN","HDISVAP3",26,0)
ADDEND(TAGNAME,XMLDOC,XMLNODE) ;Add ending tag to XML document
"RTN","HDISVAP3",27,0)
 SET @XMLDOC@(XMLNODE,0)="</"_TAGNAME_">"
"RTN","HDISVAP3",28,0)
 SET XMLNODE=XMLNODE+1
"RTN","HDISVAP3",29,0)
 QUIT
"RTN","HDISVAP3",30,0)
 ;
"RTN","HDISVAP3",31,0)
SUMADD(TEXT,SUMTXT,SUMNODE) ;Add line of text to summary data
"RTN","HDISVAP3",32,0)
 SET @SUMTXT@(SUMNODE,0)=TEXT
"RTN","HDISVAP3",33,0)
 SET SUMNODE=SUMNODE+1
"RTN","HDISVAP3",34,0)
 QUIT
"RTN","HDISVAP3",35,0)
 ;
"RTN","HDISVAP3",36,0)
SUMADMIN(SUMTXT,XCPTTYPE,DATA,SUMNODE) ;Administrative summary text
"RTN","HDISVAP3",37,0)
 NEW TEXT
"RTN","HDISVAP3",38,0)
 SET TEXT=" "
"RTN","HDISVAP3",39,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",40,0)
 SET TEXT=" Transaction Number: "_$GET(DATA(1))
"RTN","HDISVAP3",41,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",42,0)
 SET TEXT="Exception Type Code: "_$GET(XCPTTYPE)
"RTN","HDISVAP3",43,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",44,0)
 SET TEXT="         Time Stamp: "_$GET(DATA(2))
"RTN","HDISVAP3",45,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",46,0)
 SET TEXT=" "
"RTN","HDISVAP3",47,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",48,0)
 QUIT
"RTN","HDISVAP3",49,0)
 ;
"RTN","HDISVAP3",50,0)
SUMSNOMD(SUMTXT,DATA,SUMNODE) ;SNOMED summary text
"RTN","HDISVAP3",51,0)
 NEW TEXT
"RTN","HDISVAP3",52,0)
 SET TEXT="ID (Fac#-File#-IEN): "_$GET(DATA(1))
"RTN","HDISVAP3",53,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",54,0)
 SET TEXT="          SNOMED CT: "_$GET(DATA(5))
"RTN","HDISVAP3",55,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",56,0)
 SET TEXT="     SNOMED CT Term: "_$GET(DATA(6))
"RTN","HDISVAP3",57,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",58,0)
 SET TEXT="  Mapping Exception: "_$GET(DATA(7))
"RTN","HDISVAP3",59,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",60,0)
 SET TEXT="        Term Status: "_$GET(DATA(11))
"RTN","HDISVAP3",61,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",62,0)
 SET TEXT=" "
"RTN","HDISVAP3",63,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",64,0)
 QUIT
"RTN","HDISVAP3",65,0)
 ;
"RTN","HDISVAP3",66,0)
SUMRFLAB(SUMTXT,DATA,SUMNODE) ;Reference lab summary text
"RTN","HDISVAP3",67,0)
 NEW TEXT
"RTN","HDISVAP3",68,0)
 SET TEXT=" Location Type Code: "_$GET(DATA(1))
"RTN","HDISVAP3",69,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",70,0)
 SET TEXT="    Location Number: "_$GET(DATA(2))
"RTN","HDISVAP3",71,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",72,0)
 SET TEXT="      Location Name: "_$GET(DATA(3))
"RTN","HDISVAP3",73,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",74,0)
 SET TEXT=" "
"RTN","HDISVAP3",75,0)
 DO SUMADD(TEXT,SUMTXT,.SUMNODE)
"RTN","HDISVAP3",76,0)
 QUIT
"RTN","HDISVAP3",77,0)
 ;
"RTN","HDISVAP3",78,0)
SUMID(SUMTXT,SANODE) ;Add ID to list of IDs added to XML document
"RTN","HDISVAP3",79,0)
 NEW TEXT,ARRTYPE,ID
"RTN","HDISVAP3",80,0)
 SET ARRTYPE=$DATA(@SANODE)
"RTN","HDISVAP3",81,0)
 IF ARRTYPE=0 QUIT
"RTN","HDISVAP3",82,0)
 IF ARRTYPE=1 SET ID=$PIECE($GET(@SANODE),"|",1)
"RTN","HDISVAP3",83,0)
 IF ARRTYPE=10 SET ID=$GET(@SANODE@(1))
"RTN","HDISVAP3",84,0)
 SET TEXT=$GET(@SUMTXT@(0))
"RTN","HDISVAP3",85,0)
 SET @SUMTXT@(0)=$SELECT(TEXT="":ID,1:TEXT_", "_ID)
"RTN","HDISVAP3",86,0)
 QUIT
"RTN","HDISVAP3",87,0)
 ;
"RTN","HDISVAP3",88,0)
FILENAME() ;Returns fabricated file name
"RTN","HDISVAP3",89,0)
 NEW TMP,OUT
"RTN","HDISVAP3",90,0)
 SET OUT=$$FACNUM^HDISVF01()
"RTN","HDISVAP3",91,0)
 SET TMP=$$HTE^XLFDT($HOROLOG,"7FS")
"RTN","HDISVAP3",92,0)
 SET OUT=OUT_"-"_$TRANSLATE(TMP," @/:","0-")
"RTN","HDISVAP3",93,0)
 SET OUT=OUT_".XML"
"RTN","HDISVAP3",94,0)
 QUIT OUT
"RTN","HDISVAP3",95,0)
 ;
"RTN","HDISVAP3",96,0)
SENDMSG(MSGTXT,SUBJ) ;Build/send message
"RTN","HDISVAP3",97,0)
 ; Input: MSGTXT - Array containing message text
"RTN","HDISVAP3",98,0)
 ;                 (FULL GLOBAL REFERENCE)
"RTN","HDISVAP3",99,0)
 ;        SUBJ - Message subject (optional)
"RTN","HDISVAP3",100,0)
 ;Output: Message number of generated message (aka XMZ)
"RTN","HDISVAP3",101,0)
 ;        0 is returned if the message could not be generated
"RTN","HDISVAP3",102,0)
 ; Notes: If this is a non-production system the message is sent
"RTN","HDISVAP3",103,0)
 ;        to the current user
"RTN","HDISVAP3",104,0)
 ;
"RTN","HDISVAP3",105,0)
 NEW HDISVTO,HDISVFLG,HDISVXMZ,XTYPE
"RTN","HDISVAP3",106,0)
 ;Default message subject
"RTN","HDISVAP3",107,0)
 SET SUBJ=$GET(SUBJ)
"RTN","HDISVAP3",108,0)
 IF (SUBJ="") DO
"RTN","HDISVAP3",109,0)
 .NEW FACPTR,FACNUM
"RTN","HDISVAP3",110,0)
 .;Get pointer to current location
"RTN","HDISVAP3",111,0)
 .SET:('$$GETFAC^HDISVF07(,.FACPTR)) FACPTR=$$FACPTR^HDISVF01()
"RTN","HDISVAP3",112,0)
 .;Get facility number of current location
"RTN","HDISVAP3",113,0)
 .SET FACNUM=$PIECE($$NS^XUAF4(FACPTR),"^",2)
"RTN","HDISVAP3",114,0)
 .IF (FACNUM="") SET FACNUM=$$FACNUM^HDISVF01()
"RTN","HDISVAP3",115,0)
 .;Build message subject
"RTN","HDISVAP3",116,0)
 .SET SUBJ="LAB EXCEPTION DATA FROM "_FACNUM
"RTN","HDISVAP3",117,0)
 .QUIT
"RTN","HDISVAP3",118,0)
 ;Deliver to mail group on FORUM
"RTN","HDISVAP3",119,0)
 SET HDISVTO("G.HDIS LAB EXCEPTIONS@DOMAIN.EXT")=""
"RTN","HDISVAP3",120,0)
 ;If this is a non-production system send message to current user
"RTN","HDISVAP3",121,0)
 SET:('$$GETTYPE^HDISVF07(,.XTYPE)) XTYPE=$$PROD^XUPROD()
"RTN","HDISVAP3",122,0)
 IF ('XTYPE) DO
"RTN","HDISVAP3",123,0)
 .KILL HDISVTO
"RTN","HDISVAP3",124,0)
 .SET HDISVTO(DUZ)=""
"RTN","HDISVAP3",125,0)
 .QUIT
"RTN","HDISVAP3",126,0)
 ;Unrestricted addressing
"RTN","HDISVAP3",127,0)
 SET HDISVFLG("ADDR FLAGS")="R"
"RTN","HDISVAP3",128,0)
 ;Message is info only
"RTN","HDISVAP3",129,0)
 SET HDISVFLG("FLAGS")="I"
"RTN","HDISVAP3",130,0)
 ;Message sender
"RTN","HDISVAP3",131,0)
 SET HDISVFLG("FROM")="Data Standardization Toolset"
"RTN","HDISVAP3",132,0)
 ;Send message (UUEncoded array is the message text)
"RTN","HDISVAP3",133,0)
 DO SENDMSG^XMXAPI(DUZ,SUBJ,MSGTXT,.HDISVTO,.HDISVFLG,.HDISVXMZ)
"RTN","HDISVAP3",134,0)
 IF $GET(XMERR) DO
"RTN","HDISVAP3",135,0)
 .;Error sending message - log error text
"RTN","HDISVAP3",136,0)
 .DO ERR2XTMP^HDISVU01("HDI-XM","Message sending",$NAME(^TMP("XMERR",$JOB)))
"RTN","HDISVAP3",137,0)
 .KILL XMERR,^TMP("XMERR",$JOB)
"RTN","HDISVAP3",138,0)
 .;Reset generated message number
"RTN","HDISVAP3",139,0)
 .SET HDISVXMZ=0
"RTN","HDISVAP3",140,0)
 .QUIT
"RTN","HDISVAP3",141,0)
 ;Done - return message number
"RTN","HDISVAP3",142,0)
 QUIT HDISVXMZ
"RTN","HDISVAP3",143,0)
 ;
"RTN","HDISVAP3",144,0)
GETTAGS(TAGS) ;Build array of element names
"RTN","HDISVAP3",145,0)
 NEW X,LINE
"RTN","HDISVAP3",146,0)
 KILL @TAGS
"RTN","HDISVAP3",147,0)
 FOR X=1:1 DO  QUIT:('X)
"RTN","HDISVAP3",148,0)
 .SET LINE=$PIECE($TEXT(TAGS+X),";;",2)
"RTN","HDISVAP3",149,0)
 .IF (LINE="") SET X=0 QUIT
"RTN","HDISVAP3",150,0)
 .SET @TAGS@(+$PIECE(LINE,"^",1))=$PIECE(LINE,"^",2)
"RTN","HDISVAP3",151,0)
 .QUIT
"RTN","HDISVAP3",152,0)
 QUIT
"RTN","HDISVAP3",153,0)
 ;
"RTN","HDISVAP3",154,0)
TAGS ;
"RTN","HDISVAP3",155,0)
 ;;1^Lab_Exceptions
"RTN","HDISVAP3",156,0)
 ;;2^Lab_Exception_Data
"RTN","HDISVAP3",157,0)
 ;;3^Administrative_Data
"RTN","HDISVAP3",158,0)
 ;;3.01^Exception_Station_Number
"RTN","HDISVAP3",159,0)
 ;;3.02^Exception_Station_Domain_IP
"RTN","HDISVAP3",160,0)
 ;;3.03^Exception_Station_System_Type
"RTN","HDISVAP3",161,0)
 ;;3.04^Exception_Type_Code
"RTN","HDISVAP3",162,0)
 ;;3.05^Exception_Transaction_Number
"RTN","HDISVAP3",163,0)
 ;;3.06^Exception_Time_Stamp
"RTN","HDISVAP3",164,0)
 ;;3.07^Lab_Package_Exception_Text
"RTN","HDISVAP3",165,0)
 ;;4^Lab_File_SNOMED_Data
"RTN","HDISVAP3",166,0)
 ;;4.01^FacilityNumber_FileNumber_IEN
"RTN","HDISVAP3",167,0)
 ;;4.02^Entry_Name
"RTN","HDISVAP3",168,0)
 ;;4.03^SNOMED_I
"RTN","HDISVAP3",169,0)
 ;;4.04^VUID
"RTN","HDISVAP3",170,0)
 ;;4.05^SNOMED_CT
"RTN","HDISVAP3",171,0)
 ;;4.06^SNOMED_CT_Term
"RTN","HDISVAP3",172,0)
 ;;4.07^Mapping_Exception
"RTN","HDISVAP3",173,0)
 ;;4.08^Related_Specimen
"RTN","HDISVAP3",174,0)
 ;;4.09^Related_Specimen_ID
"RTN","HDISVAP3",175,0)
 ;;4.10^Extract_Version
"RTN","HDISVAP3",176,0)
 ;;4.11^Term_Status
"RTN","HDISVAP3",177,0)
 ;;4.12^STS_Exception
"RTN","HDISVAP3",178,0)
 ;;4.13^STS_Exception_Reason
"RTN","HDISVAP3",179,0)
 ;;5^Mapping_Data_Being_Loaded
"RTN","HDISVAP3",180,0)
 ;;5.01^Mapping_Data_FacilityNumber_FileNumber_IEN
"RTN","HDISVAP3",181,0)
 ;;5.02^Mapping_Data_Entry_Name
"RTN","HDISVAP3",182,0)
 ;;5.03^Mapping_Data_SNOMED_I
"RTN","HDISVAP3",183,0)
 ;;5.04^Mapping_Data_STS_Further_Action
"RTN","HDISVAP3",184,0)
 ;;5.05^Mapping_Data_STS_SCT_ID
"RTN","HDISVAP3",185,0)
 ;;5.06^Mapping_Data_STS_Type_Of_Match
"RTN","HDISVAP3",186,0)
 ;;6^Reference_Lab_Data
"RTN","HDISVAP3",187,0)
 ;;6.01^Reference_Lab_Type_Code
"RTN","HDISVAP3",188,0)
 ;;6.02^Reference_Lab_Station_Number
"RTN","HDISVAP3",189,0)
 ;;6.03^Reference_Lab_Name
"RTN","HDISVAP3",190,0)
 ;;6.04^Reference_Lab_OBX-3
"RTN","HDISVAP3",191,0)
 ;;6.05^Reference_Lab_OBX-5
"RTN","HDISVAP3",192,0)
 ;;
"RTN","HDISVM00")
0^5^B9620498
"RTN","HDISVM00",1,0)
HDISVM00 ;BPFO/JRP - SERVER TO RECEIVE XML MESSAGE;1/4/2005
"RTN","HDISVM00",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**6,7**;Feb 22, 2005;Build 33
"RTN","HDISVM00",3,0)
 ;
"RTN","HDISVM00",4,0)
XML ;Main entry point for XML server options
"RTN","HDISVM00",5,0)
 ; Input: (As defined by MailMan and Kernel)
"RTN","HDISVM00",6,0)
 ;        XMREC - Executable code to "read" next line of message
"RTN","HDISVM00",7,0)
 ;        XQSUB - Subject of received message
"RTN","HDISVM00",8,0)
 ;        XQSOP - Server option name
"RTN","HDISVM00",9,0)
 ;        XQMSG,XMZ - Msg IEN in file 3.9
"RTN","HDISVM00",10,0)
 ;        XQSND,XMFROM - Msg sender
"RTN","HDISVM00",11,0)
 ;Output: None
"RTN","HDISVM00",12,0)
 ;  Note: Input is not checked (assumes existence)
"RTN","HDISVM00",13,0)
 ;
"RTN","HDISVM00",14,0)
 NEW XMLARR,PRSARR,ERRARR,STOP,LINE,TYPE
"RTN","HDISVM00",15,0)
 ;Establish temporary globals
"RTN","HDISVM00",16,0)
 SET XMLARR=$NAME(^TMP(XQSOP,$JOB,"XML"))
"RTN","HDISVM00",17,0)
 SET PRSARR=$NAME(^TMP(XQSOP,$JOB,"PARSED"))
"RTN","HDISVM00",18,0)
 SET ERRARR=$NAME(^TMP(XQSOP,$JOB,"ERROR"))
"RTN","HDISVM00",19,0)
 KILL @XMLARR,@PRSARR,@ERRARR
"RTN","HDISVM00",20,0)
 ;Copy message to temporary global
"RTN","HDISVM00",21,0)
 SET STOP=0
"RTN","HDISVM00",22,0)
 FOR LINE=1:1 DO  QUIT:STOP
"RTN","HDISVM00",23,0)
 .XECUTE XMREC
"RTN","HDISVM00",24,0)
 .IF $DATA(XMER) IF (XMER<0) SET STOP=1 QUIT
"RTN","HDISVM00",25,0)
 .SET @XMLARR@(LINE)=XMRG
"RTN","HDISVM00",26,0)
 ;Parse message
"RTN","HDISVM00",27,0)
 DO SAX^HDISVM01(XMLARR,PRSARR)
"RTN","HDISVM00",28,0)
 ;Get type of system out of parameter file
"RTN","HDISVM00",29,0)
 SET TYPE=+$$GETTYPE^HDISVF02()
"RTN","HDISVM00",30,0)
 ;Process messages on centralized server
"RTN","HDISVM00",31,0)
 IF TYPE=2 DO MAIN^HDISVS00(PRSARR,ERRARR)
"RTN","HDISVM00",32,0)
 ;Process messages on VistA (client) system
"RTN","HDISVM00",33,0)
 IF TYPE=1 DO MAIN^HDISVC00(PRSARR,ERRARR)
"RTN","HDISVM00",34,0)
 ;Error(s) occurred
"RTN","HDISVM00",35,0)
 IF $DATA(@ERRARR) DO
"RTN","HDISVM00",36,0)
 .;Send error message
"RTN","HDISVM00",37,0)
 .DO ERROR(ERRARR,XQMSG,XQSOP,XMFROM)
"RTN","HDISVM00",38,0)
 .;Set message status
"RTN","HDISVM00",39,0)
 .SET X=$$SRVTIME^XMS1(XQMSG,"S."_XQSOP,"ERROR FOUND DURING PROCESSING")
"RTN","HDISVM00",40,0)
 ;Delete message (don't delete if errors found)
"RTN","HDISVM00",41,0)
 IF '$DATA(@ERRARR) DO ZAPSERV^XMXAPI("S."_XQSOP,XQMSG)
"RTN","HDISVM00",42,0)
 ;Done
"RTN","HDISVM00",43,0)
 KILL @XMLARR,@PRSARR,@ERRARR
"RTN","HDISVM00",44,0)
 QUIT
"RTN","HDISVM00",45,0)
 ;
"RTN","HDISVM00",46,0)
ERROR(ERRARR,MSGNUM,SRVR,SNDR) ;Send error message
"RTN","HDISVM00",47,0)
 ; Input : ERRARR - Error array (closed root)
"RTN","HDISVM00",48,0)
 ;         MSGNUM - Message number of received message (XMZ)
"RTN","HDISVM00",49,0)
 ;         SRVR - Name of server option (XQSOP)
"RTN","HDISVM00",50,0)
 ;         SNDR - Sender of message (XMFROM)
"RTN","HDISVM00",51,0)
 ;Output : None
"RTN","HDISVM00",52,0)
 ; Notes : Existance/validity of input assumed (internal call)
"RTN","HDISVM00",53,0)
 NEW NAME,HDISPRAM,HDISFLAG
"RTN","HDISVM00",54,0)
 ;Set bulletin parameters
"RTN","HDISVM00",55,0)
 SET HDISPRAM(1)=MSGNUM
"RTN","HDISVM00",56,0)
 SET HDISPRAM(2)=SNDR
"RTN","HDISVM00",57,0)
 SET HDISPRAM(3)=SRVR
"RTN","HDISVM00",58,0)
 ;Send bulletin
"RTN","HDISVM00",59,0)
 SET NAME="HDIS XML MSG PROCESS ERROR"
"RTN","HDISVM00",60,0)
 SET HDISFLAG("FROM")="HDIS XML MESSAGE SERVER"
"RTN","HDISVM00",61,0)
 ;TASKBULL^XMXAPI was redefining ERRARR when it ran so switched to SENDBULL
"RTN","HDISVM00",62,0)
 DO SENDBULL^XMXAPI(DUZ,NAME,.HDISPRAM,ERRARR,,.HDISFLAG)
"RTN","HDISVM00",63,0)
 IF $GET(XMERR) DO
"RTN","HDISVM00",64,0)
 .;Error generating bulletin - log error text
"RTN","HDISVM00",65,0)
 .DO ERR2XTMP^HDISVU01("HDI-XM","Server error bulletin",$NAME(^TMP("XMERR",$JOB)))
"RTN","HDISVM00",66,0)
 .KILL XMERR,^TMP("XMERR",$JOB)
"RTN","HDISVM00",67,0)
 QUIT
"RTN","HDISVM00",68,0)
 ;
"RTN","HDISVM00",69,0)
LABXCPT ;Main entry point for serving UUEncoded Lab exception messages
"RTN","HDISVM00",70,0)
 ; Input: (As defined by MailMan and Kernel)
"RTN","HDISVM00",71,0)
 ;        XMREC - Executable code to "read" next line of message
"RTN","HDISVM00",72,0)
 ;        XQSUB - Subject of received message
"RTN","HDISVM00",73,0)
 ;        XQSOP - Server option name
"RTN","HDISVM00",74,0)
 ;        XQMSG,XMZ - Msg IEN in file 3.9
"RTN","HDISVM00",75,0)
 ;        XQSND,XMFROM - Msg sender
"RTN","HDISVM00",76,0)
 ;Output: None
"RTN","HDISVM00",77,0)
 ;  Note: Input is not checked (assumes existence)
"RTN","HDISVM00",78,0)
 ;
"RTN","HDISVM00",79,0)
 NEW STOP,LINE,MSGARR,ERRARR
"RTN","HDISVM00",80,0)
 SET MSGARR=$NAME(^TMP("HDISVM00",$JOB,"MSGARR"))
"RTN","HDISVM00",81,0)
 SET ERRARR=$NAME(^TMP("HDISVM00",$JOB,"ERRARR"))
"RTN","HDISVM00",82,0)
 KILL @MSGARR,@ERRARR
"RTN","HDISVM00",83,0)
 ;Copy message to temporary global
"RTN","HDISVM00",84,0)
 SET STOP=0
"RTN","HDISVM00",85,0)
 FOR LINE=1:1 DO  QUIT:(STOP)
"RTN","HDISVM00",86,0)
 .XECUTE XMREC
"RTN","HDISVM00",87,0)
 .IF ($DATA(XMER)) IF (XMER<0) SET STOP=1 QUIT
"RTN","HDISVM00",88,0)
 .SET @MSGARR@(LINE,0)=XMRG
"RTN","HDISVM00",89,0)
 .QUIT
"RTN","HDISVM00",90,0)
 ;Get type of system out of parameter file
"RTN","HDISVM00",91,0)
 SET TYPE=+$$GETTYPE^HDISVF02()
"RTN","HDISVM00",92,0)
 ;Process messages on centralized server
"RTN","HDISVM00",93,0)
 IF TYPE=2 DO LABXCPT^HDISVS04(MSGARR,ERRARR)
"RTN","HDISVM00",94,0)
 ;Send error message
"RTN","HDISVM00",95,0)
 IF ($DATA(@ERRARR)) DO
"RTN","HDISVM00",96,0)
 .DO ERROR(ERRARR,XQMSG,XQSOP,XMFROM)
"RTN","HDISVM00",97,0)
 .;Set message status
"RTN","HDISVM00",98,0)
 .SET X=$$SRVTIME^XMS1(XQMSG,"S."_XQSOP,"ERROR FOUND DURING PROCESSING")
"RTN","HDISVM00",99,0)
 ;Delete message (don't delete if errors found)
"RTN","HDISVM00",100,0)
 IF ('$DATA(@ERRARR)) DO ZAPSERV^XMXAPI("S."_XQSOP,XQMSG)
"RTN","HDISVM00",101,0)
 ;Done
"RTN","HDISVM00",102,0)
 KILL @MSGARR,@ERRARR
"RTN","HDISVM00",103,0)
 QUIT
"RTN","HDISVM03")
0^2^B37279918
"RTN","HDISVM03",1,0)
HDISVM03 ;BPFO/JRP,HRN/ART - UUENCODE;5/31/2007
"RTN","HDISVM03",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVM03",3,0)
 ;
"RTN","HDISVM03",4,0)
ENCODE(IN,OUT,ZERO) ;UUEncode contents of array
"RTN","HDISVM03",5,0)
 ; Input: IN = Array containing lines of text to encode
"RTN","HDISVM03",6,0)
 ;             (FULL GLOBAL REFERENCE)
"RTN","HDISVM03",7,0)
 ;           IN(0) = File name for encoded text
"RTN","HDISVM03",8,0)
 ;                   (used when uudecoding)
"RTN","HDISVM03",9,0)
 ;           IN(1..n) = Lines of text
"RTN","HDISVM03",10,0)
 ;           IN(n,1..m) = Continuation of text when length of line
"RTN","HDISVM03",11,0)
 ;                        is longer than 245 characters
"RTN","HDISVM03",12,0)
 ;        OUT = Array to put uuencoded text into
"RTN","HDISVM03",13,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM03",14,0)
 ;        ZERO = Flag indicating if the main nodes in the input array
"RTN","HDISVM03",15,0)
 ;               store their text on a zero node.  A value of 1
"RTN","HDISVM03",16,0)
 ;               denotes that the text is stored in IN(node,0).  A
"RTN","HDISVM03",17,0)
 ;               value of 0 denotes that the text is not.  This only
"RTN","HDISVM03",18,0)
 ;               applies to the main nodes; IN(0) and continuation
"RTN","HDISVM03",19,0)
 ;               nodes are assumed to not use a zero node (i.e.
"RTN","HDISVM03",20,0)
 ;               IN(0,0) and IN(node,cont,0) are not valid).
"RTN","HDISVM03",21,0)
 ;               (DEFAULTS TO 0)
"RTN","HDISVM03",22,0)
 ;
"RTN","HDISVM03",23,0)
 ;Output: None
"RTN","HDISVM03",24,0)
 ;        OUT will be set as follows:
"RTN","HDISVM03",25,0)
 ;          OUT(1) = "begin 644 FILENAME"
"RTN","HDISVM03",26,0)
 ;          OUT(2..n) = UUEncoded line of text
"RTN","HDISVM03",27,0)
 ;          OUT(n+1) = "`"
"RTN","HDISVM03",28,0)
 ;          OUT(n+2) = "end"
"RTN","HDISVM03",29,0)
 ;
"RTN","HDISVM03",30,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM03",31,0)
 ;      : The OUT array will be initialized (KILLed) on input.
"RTN","HDISVM03",32,0)
 ;      : It is assumed that IN is not an empty arrary (i.e. there's
"RTN","HDISVM03",33,0)
 ;        data to be uuencoded in it).
"RTN","HDISVM03",34,0)
 ;      : A carriage return & line feed will be inserted between each
"RTN","HDISVM03",35,0)
 ;        line of text [after all continuation nodes have been
"RTN","HDISVM03",36,0)
 ;        appended].
"RTN","HDISVM03",37,0)
 ;      : FILENAME in node OUT(1) will be replaced by the value from
"RTN","HDISVM03",38,0)
 ;        input node IN(0).  TEXT.TXT will be used as the filename
"RTN","HDISVM03",39,0)
 ;        if IN(0) is not defined or empty.
"RTN","HDISVM03",40,0)
 ;
"RTN","HDISVM03",41,0)
 NEW NODE,CONT,TEXT,WORKING,OUTNODE,CRLF
"RTN","HDISVM03",42,0)
 KILL @OUT
"RTN","HDISVM03",43,0)
 SET ZERO=+$GET(ZERO)
"RTN","HDISVM03",44,0)
 SET CRLF=$CHAR(13,10)
"RTN","HDISVM03",45,0)
 SET WORKING=""
"RTN","HDISVM03",46,0)
 ;Append beginning uuencoding designation to output array
"RTN","HDISVM03",47,0)
 SET TEXT=@IN@(0)
"RTN","HDISVM03",48,0)
 SET:(TEXT="") TEXT="TEXT.TXT"
"RTN","HDISVM03",49,0)
 SET @OUT@(1)="begin 644 "_TEXT
"RTN","HDISVM03",50,0)
 SET OUTNODE=2
"RTN","HDISVM03",51,0)
 ;Loop through input array
"RTN","HDISVM03",52,0)
 SET NODE=0
"RTN","HDISVM03",53,0)
 FOR  SET NODE=+$ORDER(@IN@(NODE)) QUIT:('NODE)  DO
"RTN","HDISVM03",54,0)
 .SET TEXT=$SELECT(ZERO:@IN@(NODE,0),1:@IN@(NODE))
"RTN","HDISVM03",55,0)
 .DO UUEWORK(TEXT,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",56,0)
 .;Loop through continuation nodes
"RTN","HDISVM03",57,0)
 .SET CONT=0
"RTN","HDISVM03",58,0)
 .FOR  SET CONT=+$ORDER(@IN@(NODE,CONT)) QUIT:('CONT)  DO
"RTN","HDISVM03",59,0)
 ..SET TEXT=@IN@(NODE,CONT)
"RTN","HDISVM03",60,0)
 ..DO UUEWORK(TEXT,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",61,0)
 ..QUIT
"RTN","HDISVM03",62,0)
 .;Append CR-LF between main nodes
"RTN","HDISVM03",63,0)
 .DO UUEWORK(CRLF,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",64,0)
 .QUIT
"RTN","HDISVM03",65,0)
 ;Encode remaining text
"RTN","HDISVM03",66,0)
 IF $LENGTH(WORKING) DO
"RTN","HDISVM03",67,0)
 .SET @OUT@(OUTNODE)=$$UUE45(WORKING)
"RTN","HDISVM03",68,0)
 .SET OUTNODE=OUTNODE+1
"RTN","HDISVM03",69,0)
 .QUIT
"RTN","HDISVM03",70,0)
 ;Append end uuencoding designation to output array
"RTN","HDISVM03",71,0)
 SET @OUT@(OUTNODE)="`"
"RTN","HDISVM03",72,0)
 SET @OUT@(OUTNODE+1)="end"
"RTN","HDISVM03",73,0)
 QUIT
"RTN","HDISVM03",74,0)
 ;
"RTN","HDISVM03",75,0)
ENCGRID(IN,OUT,DELIMITR) ;UUEncode contents of a grid
"RTN","HDISVM03",76,0)
 ; Input: IN = Array containing grid cells of text to encode
"RTN","HDISVM03",77,0)
 ;             (FULL GLOBAL REFERENCE)
"RTN","HDISVM03",78,0)
 ;          IN(0) = File name for encoded text
"RTN","HDISVM03",79,0)
 ;                  (used when uudecoding)
"RTN","HDISVM03",80,0)
 ;          IN(1..n,1..n) = Grid cells of text - IN(row,col)=value
"RTN","HDISVM03",81,0)
 ;          IN(n,n,1..m) = Continuation of text when length of line
"RTN","HDISVM03",82,0)
 ;                         is longer than 245 characters
"RTN","HDISVM03",83,0)
 ;        OUT = Array to put uuencoded text into
"RTN","HDISVM03",84,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM03",85,0)
 ;   DELIMITR = Delimiter character (DEFAULTS TO | (pipe))
"RTN","HDISVM03",86,0)
 ;
"RTN","HDISVM03",87,0)
 ;Output: None
"RTN","HDISVM03",88,0)
 ;        OUT will be set as follows:
"RTN","HDISVM03",89,0)
 ;          OUT(1) = "begin 644 FILENAME"
"RTN","HDISVM03",90,0)
 ;          OUT(2..n) = UUEncoded line of text
"RTN","HDISVM03",91,0)
 ;          OUT(n+1) = "`"
"RTN","HDISVM03",92,0)
 ;          OUT(n+2) = "end"
"RTN","HDISVM03",93,0)
 ;
"RTN","HDISVM03",94,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM03",95,0)
 ;      : The input grid array will be 1 based - no subscripts with value
"RTN","HDISVM03",96,0)
 ;        of zero (0), except IN(0) which contains the file name
"RTN","HDISVM03",97,0)
 ;        IN(0) and continuation nodes are assumed to not use a zero node
"RTN","HDISVM03",98,0)
 ;        (i.e. IN(0,0) and IN(row,col,cont,0) are not valid).
"RTN","HDISVM03",99,0)
 ;      : The input grid array must include empty cells - no missing nodes
"RTN","HDISVM03",100,0)
 ;      : If column headings are included, they must be in row 1 - IN(1,1..n)
"RTN","HDISVM03",101,0)
 ;      : The OUT array will be initialized (KILLed) on input.
"RTN","HDISVM03",102,0)
 ;      : It is assumed that IN is not an empty arrary (i.e. there's
"RTN","HDISVM03",103,0)
 ;        data to be uuencoded in it).
"RTN","HDISVM03",104,0)
 ;      : A carriage return & line feed will be inserted between each
"RTN","HDISVM03",105,0)
 ;        line of text [after all continuation nodes have been
"RTN","HDISVM03",106,0)
 ;        appended].
"RTN","HDISVM03",107,0)
 ;      : FILENAME in node OUT(1) will be replaced by the value from
"RTN","HDISVM03",108,0)
 ;        input node IN(0).  TEXT.TXT will be used as the filename
"RTN","HDISVM03",109,0)
 ;        if IN(0) is not defined or empty.
"RTN","HDISVM03",110,0)
 ;
"RTN","HDISVM03",111,0)
 NEW RNODE,CNODE,CONT,TEXT,WORKING,OUTNODE,CRLF
"RTN","HDISVM03",112,0)
 KILL @OUT
"RTN","HDISVM03",113,0)
 SET:($G(DELIMITR)="") DELIMITR="|"
"RTN","HDISVM03",114,0)
 SET CRLF=$CHAR(13,10)
"RTN","HDISVM03",115,0)
 SET WORKING=""
"RTN","HDISVM03",116,0)
 ;Append beginning uuencoding designation to output array
"RTN","HDISVM03",117,0)
 SET TEXT=@IN@(0)
"RTN","HDISVM03",118,0)
 SET:(TEXT="") TEXT="TEXT.TXT"
"RTN","HDISVM03",119,0)
 SET @OUT@(1)="begin 644 "_TEXT
"RTN","HDISVM03",120,0)
 SET OUTNODE=2
"RTN","HDISVM03",121,0)
 ;Loop through input array
"RTN","HDISVM03",122,0)
 SET RNODE=0
"RTN","HDISVM03",123,0)
 FOR  SET RNODE=+$ORDER(@IN@(RNODE)) QUIT:('RNODE)  DO
"RTN","HDISVM03",124,0)
 .SET CNODE=0
"RTN","HDISVM03",125,0)
 .FOR  SET CNODE=+$ORDER(@IN@(RNODE,CNODE)) QUIT:('CNODE)  DO
"RTN","HDISVM03",126,0)
 ..SET TEXT=@IN@(RNODE,CNODE)
"RTN","HDISVM03",127,0)
 ..DO UUEWORK(TEXT,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",128,0)
 ..;Loop through continuation nodes
"RTN","HDISVM03",129,0)
 ..SET CONT=0
"RTN","HDISVM03",130,0)
 ..FOR  SET CONT=+$ORDER(@IN@(RNODE,CNODE,CONT)) QUIT:('CONT)  DO
"RTN","HDISVM03",131,0)
 ...SET TEXT=@IN@(RNODE,CNODE,CONT)
"RTN","HDISVM03",132,0)
 ...DO UUEWORK(TEXT,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",133,0)
 ...QUIT
"RTN","HDISVM03",134,0)
 ..;Append delimiter between cell nodes
"RTN","HDISVM03",135,0)
 ..DO UUEWORK(DELIMITR,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",136,0)
 ..QUIT
"RTN","HDISVM03",137,0)
 .;Append CR-LF between main nodes
"RTN","HDISVM03",138,0)
 .DO UUEWORK(CRLF,.WORKING,OUT,.OUTNODE)
"RTN","HDISVM03",139,0)
 .QUIT
"RTN","HDISVM03",140,0)
 ;Encode remaining text
"RTN","HDISVM03",141,0)
 IF $LENGTH(WORKING) DO
"RTN","HDISVM03",142,0)
 .SET @OUT@(OUTNODE)=$$UUE45(WORKING)
"RTN","HDISVM03",143,0)
 .SET OUTNODE=OUTNODE+1
"RTN","HDISVM03",144,0)
 .QUIT
"RTN","HDISVM03",145,0)
 ;Append end uuencoding designation to output array
"RTN","HDISVM03",146,0)
 SET @OUT@(OUTNODE)="`"
"RTN","HDISVM03",147,0)
 SET @OUT@(OUTNODE+1)="end"
"RTN","HDISVM03",148,0)
 QUIT
"RTN","HDISVM03",149,0)
 ;
"RTN","HDISVM03",150,0)
UUEWORK(TEXT,WORKING,OUT,OUTNODE) ;UUEncode text & add to output
"RTN","HDISVM03",151,0)
 ; Input: TEXT = Text to append to uuencoded output array
"RTN","HDISVM03",152,0)
 ;        WORKING = Text that hasn't been uuencoded yet as
"RTN","HDISVM03",153,0)
 ;                  uuencoding is done against 45 characters
"RTN","HDISVM03",154,0)
 ;                  at a time
"RTN","HDISVM03",155,0)
 ;                  (PASS BY REFERENCE)
"RTN","HDISVM03",156,0)
 ;        OUT = Array to put uuencoded text into
"RTN","HDISVM03",157,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM03",158,0)
 ;        OUTNODE = Node in OUT to store uuencoded text into
"RTN","HDISVM03",159,0)
 ;                  (PASS BY REFERENCE)
"RTN","HDISVM03",160,0)
 ;Output: None
"RTN","HDISVM03",161,0)
 ;        WORKING = Text that was not uuencoded
"RTN","HDISVM03",162,0)
 ;        OUTNODE = Next node in OUT to store uuencoded text into
"RTN","HDISVM03",163,0)
 ;        OUT will be set as follows:
"RTN","HDISVM03",164,0)
 ;          OUT(OUTNODE..n) = UUEncoded line of text
"RTN","HDISVM03",165,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM03",166,0)
 ;
"RTN","HDISVM03",167,0)
 NEW STOP,LENWORK
"RTN","HDISVM03",168,0)
 SET STOP=0
"RTN","HDISVM03",169,0)
 ;UUEncode 45 characters at a time
"RTN","HDISVM03",170,0)
 FOR  DO  QUIT:(STOP)
"RTN","HDISVM03",171,0)
 .;Combine text with left over text to make 45 character string
"RTN","HDISVM03",172,0)
 .SET LENWORK=$LENGTH(WORKING)
"RTN","HDISVM03",173,0)
 .SET WORKING=WORKING_$EXTRACT(TEXT,1,(45-LENWORK))
"RTN","HDISVM03",174,0)
 .SET TEXT=$EXTRACT(TEXT,(45-LENWORK+1),$LENGTH(TEXT))
"RTN","HDISVM03",175,0)
 .IF $LENGTH(WORKING)<45 SET STOP=1 QUIT
"RTN","HDISVM03",176,0)
 .;UUEncode and store in output array
"RTN","HDISVM03",177,0)
 .SET @OUT@(OUTNODE)=$$UUE45(WORKING)
"RTN","HDISVM03",178,0)
 .;Increment subscript value and reset left over text
"RTN","HDISVM03",179,0)
 .SET OUTNODE=OUTNODE+1
"RTN","HDISVM03",180,0)
 .SET WORKING=""
"RTN","HDISVM03",181,0)
 .QUIT
"RTN","HDISVM03",182,0)
 QUIT
"RTN","HDISVM03",183,0)
 ;
"RTN","HDISVM03",184,0)
UUE45(TEXT) ;UUEncode a string of 45 characters
"RTN","HDISVM03",185,0)
 ; Input: TEXT = String of text to uuencode (up to 45 characters)
"RTN","HDISVM03",186,0)
 ;Output: UUEncoded text including length character
"RTN","HDISVM03",187,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM03",188,0)
 ;      : It is assumed that TEXT will not be greater than 45
"RTN","HDISVM03",189,0)
 ;        characters in length.
"RTN","HDISVM03",190,0)
 ;
"RTN","HDISVM03",191,0)
 NEW LOOP,LENGTH,UUENC
"RTN","HDISVM03",192,0)
 SET TEXT=$GET(TEXT)
"RTN","HDISVM03",193,0)
 SET LENGTH=$LENGTH(TEXT)
"RTN","HDISVM03",194,0)
 SET UUENC="" SET:(LENGTH=0) UUENC=$$UUE3("")
"RTN","HDISVM03",195,0)
 FOR LOOP=1:3:LENGTH SET UUENC=UUENC_$$UUE3($EXTRACT(TEXT,LOOP,LOOP+2))
"RTN","HDISVM03",196,0)
 QUIT $CHAR(32+LENGTH)_UUENC
"RTN","HDISVM03",197,0)
 ;
"RTN","HDISVM03",198,0)
UUE3(CHARS) ;UUEncode 3 characters
"RTN","HDISVM03",199,0)
 ; Input: CHARS = Characters to uuencode (up to 3 characters)
"RTN","HDISVM03",200,0)
 ;Output: UUEncoded text
"RTN","HDISVM03",201,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM03",202,0)
 ;      : It is assumed that CHARS will not be greater than 3
"RTN","HDISVM03",203,0)
 ;        characters in length.
"RTN","HDISVM03",204,0)
 ;      : CHARS will be right padded with spaces to make it 3
"RTN","HDISVM03",205,0)
 ;        characters in length.
"RTN","HDISVM03",206,0)
 ;
"RTN","HDISVM03",207,0)
 NEW DEC1,DEC2,DEC3,BIN1,BIN2,BIN3
"RTN","HDISVM03",208,0)
 NEW BIN1A,BIN2A,BIN3A,BIN4A,DEC1A,DEC2A,DEC3A,DEC4A
"RTN","HDISVM03",209,0)
 SET CHARS=$EXTRACT($GET(CHARS)_"   ",1,3)
"RTN","HDISVM03",210,0)
 SET DEC1=$ASCII($EXTRACT(CHARS,1))
"RTN","HDISVM03",211,0)
 SET DEC2=$ASCII($EXTRACT(CHARS,2))
"RTN","HDISVM03",212,0)
 SET DEC3=$ASCII($EXTRACT(CHARS,3))
"RTN","HDISVM03",213,0)
 SET BIN1=$$RJ^XLFSTR($$CNV^XLFUTL(DEC1,2),8,"0")
"RTN","HDISVM03",214,0)
 SET BIN1=$EXTRACT(BIN1,($LENGTH(BIN1)-7),$LENGTH(BIN1))
"RTN","HDISVM03",215,0)
 SET BIN2=$$RJ^XLFSTR($$CNV^XLFUTL(DEC2,2),8,"0")
"RTN","HDISVM03",216,0)
 SET BIN2=$EXTRACT(BIN2,($LENGTH(BIN2)-7),$LENGTH(BIN2))
"RTN","HDISVM03",217,0)
 SET BIN3=$$RJ^XLFSTR($$CNV^XLFUTL(DEC3,2),8,"0")
"RTN","HDISVM03",218,0)
 SET BIN3=$EXTRACT(BIN3,($LENGTH(BIN3)-7),$LENGTH(BIN3))
"RTN","HDISVM03",219,0)
 SET BIN1A=$EXTRACT(BIN1,1,6)
"RTN","HDISVM03",220,0)
 SET BIN2A=$EXTRACT(BIN1,7,8)_$EXTRACT(BIN2,1,4)
"RTN","HDISVM03",221,0)
 SET BIN3A=$EXTRACT(BIN2,5,8)_$EXTRACT(BIN3,1,2)
"RTN","HDISVM03",222,0)
 SET BIN4A=$EXTRACT(BIN3,3,8)
"RTN","HDISVM03",223,0)
 SET DEC1A=$$DEC^XLFUTL(BIN1A,2)+32
"RTN","HDISVM03",224,0)
 SET DEC2A=$$DEC^XLFUTL(BIN2A,2)+32
"RTN","HDISVM03",225,0)
 SET DEC3A=$$DEC^XLFUTL(BIN3A,2)+32
"RTN","HDISVM03",226,0)
 SET DEC4A=$$DEC^XLFUTL(BIN4A,2)+32
"RTN","HDISVM03",227,0)
 QUIT $CHAR(DEC1A,DEC2A,DEC3A,DEC4A)
"RTN","HDISVM04")
0^3^B38623461
"RTN","HDISVM04",1,0)
HDISVM04 ;BPFO/JRP - UUDECODE;5/31/2007
"RTN","HDISVM04",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVM04",3,0)
 ;
"RTN","HDISVM04",4,0)
DECODE(IN,OUT,FIND,ZERO) ;UUDecode contents of text
"RTN","HDISVM04",5,0)
 ; Input: IN = Array containing lines of text to encode
"RTN","HDISVM04",6,0)
 ;             (FULL GLOBAL REFERENCE)
"RTN","HDISVM04",7,0)
 ;          IN(1) = "begin 644 FILENAME"
"RTN","HDISVM04",8,0)
 ;          IN(2..n) = UUEncoded line of text
"RTN","HDISVM04",9,0)
 ;          IN(n+1) = "`"
"RTN","HDISVM04",10,0)
 ;          IN(n+2) = "end"
"RTN","HDISVM04",11,0)
 ;        OUT = Array to put uudecoded text into
"RTN","HDISVM04",12,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM04",13,0)
 ;        FIND = Flag indicating if the "begin 644 FILENAME" line
"RTN","HDISVM04",14,0)
 ;               must be found.  A value of 1 will cause this utility
"RTN","HDISVM04",15,0)
 ;               to order through the nodes of the array until the
"RTN","HDISVM04",16,0)
 ;               beginning line is found.  A value of 0 will cause
"RTN","HDISVM04",17,0)
 ;               this utility to assume that node IN(1) is the
"RTN","HDISVM04",18,0)
 ;               beginning node.
"RTN","HDISVM04",19,0)
 ;               (DEFAULTS TO 0)
"RTN","HDISVM04",20,0)
 ;        ZERO = Flag indicating if the input array stores it's data
"RTN","HDISVM04",21,0)
 ;               on a zero node.  A value of 1 denotes that the
"RTN","HDISVM04",22,0)
 ;               uuencoded data is stored in IN(node,0).  A value of
"RTN","HDISVM04",23,0)
 ;               0 denotes that the uuencoded data is not.
"RTN","HDISVM04",24,0)
 ;               (DEFAULTS TO 0)
"RTN","HDISVM04",25,0)
 ;Output: None
"RTN","HDISVM04",26,0)
 ;        OUT will be set as follows:
"RTN","HDISVM04",27,0)
 ;          OUT(0) = File name from encoded text
"RTN","HDISVM04",28,0)
 ;          OUT(1..n) = Lines of text
"RTN","HDISVM04",29,0)
 ;          OUT(n,1..m) = Continuation of text when length of line
"RTN","HDISVM04",30,0)
 ;                        is longer than 245 characters
"RTN","HDISVM04",31,0)
 ;
"RTN","HDISVM04",32,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM04",33,0)
 ;      : The OUT array will be initialized (KILLed) on input.
"RTN","HDISVM04",34,0)
 ;      : It is assumed that IN is not an empty arrary (i.e. there's
"RTN","HDISVM04",35,0)
 ;        data to be uudecoded in it).
"RTN","HDISVM04",36,0)
 ;      : A carriage return, line feed, or carriage return plus line
"RTN","HDISVM04",37,0)
 ;        feed will move storing of the decoded text to the next node
"RTN","HDISVM04",38,0)
 ;        of the output array
"RTN","HDISVM04",39,0)
 ;
"RTN","HDISVM04",40,0)
 NEW NODE,CR,LF,UUENC,LOOP,LENGTH,OUTNODE,WORKING,TEXT
"RTN","HDISVM04",41,0)
 NEW CRSPOT,LFSPOT,TMPTXT,TMPLEN,CREND
"RTN","HDISVM04",42,0)
 KILL @OUT
"RTN","HDISVM04",43,0)
 SET FIND=+$GET(FIND)
"RTN","HDISVM04",44,0)
 SET ZERO=+$GET(ZERO)
"RTN","HDISVM04",45,0)
 SET CR=$CHAR(13)
"RTN","HDISVM04",46,0)
 SET LF=$CHAR(10)
"RTN","HDISVM04",47,0)
 SET CREND=0
"RTN","HDISVM04",48,0)
 ;Move to beginning of encoded text
"RTN","HDISVM04",49,0)
 SET NODE=1
"RTN","HDISVM04",50,0)
 IF (FIND) DO  QUIT:('NODE)
"RTN","HDISVM04",51,0)
 .NEW STOP
"RTN","HDISVM04",52,0)
 .SET STOP=0
"RTN","HDISVM04",53,0)
 .SET NODE=0
"RTN","HDISVM04",54,0)
 .FOR  SET NODE=+$ORDER(@IN@(NODE)) QUIT:('NODE)  DO  QUIT:(STOP)
"RTN","HDISVM04",55,0)
 ..SET TEXT=$SELECT(ZERO:@IN@(NODE,0),1:@IN@(NODE))
"RTN","HDISVM04",56,0)
 ..IF ($TRANSLATE(TEXT,0)["begin 644") SET STOP=1
"RTN","HDISVM04",57,0)
 ..QUIT
"RTN","HDISVM04",58,0)
 .IF ('STOP) SET NODE=0
"RTN","HDISVM04",59,0)
 .QUIT
"RTN","HDISVM04",60,0)
 ;Put file name into output array
"RTN","HDISVM04",61,0)
 SET TEXT=$SELECT(ZERO:@IN@(NODE,0),1:@IN@(NODE))
"RTN","HDISVM04",62,0)
 SET @OUT@(0)=$PIECE(TEXT,"644 ",2)
"RTN","HDISVM04",63,0)
 ;Loop through input array
"RTN","HDISVM04",64,0)
 SET OUTNODE=1
"RTN","HDISVM04",65,0)
 SET WORKING=""
"RTN","HDISVM04",66,0)
 FOR  SET NODE=+$ORDER(@IN@(NODE)) QUIT:('NODE)  DO
"RTN","HDISVM04",67,0)
 .SET UUENC=$SELECT(ZERO:@IN@(NODE,0),1:@IN@(NODE))
"RTN","HDISVM04",68,0)
 .;End of encoded input - force outer loop to quit
"RTN","HDISVM04",69,0)
 .IF ((UUENC="`")!(UUENC=" ")) SET NODE=+$ORDER(@IN@(""),-1) QUIT
"RTN","HDISVM04",70,0)
 .;Get length of encoded text
"RTN","HDISVM04",71,0)
 .SET LENGTH=$ASCII($EXTRACT(UUENC,1))-32
"RTN","HDISVM04",72,0)
 .;UUDecode 4 characters at a time
"RTN","HDISVM04",73,0)
 .SET TEXT=""
"RTN","HDISVM04",74,0)
 .FOR LOOP=2:4:$LENGTH(UUENC) DO
"RTN","HDISVM04",75,0)
 ..SET TEXT=TEXT_$$UUD4($EXTRACT(UUENC,LOOP,LOOP+3))
"RTN","HDISVM04",76,0)
 ..QUIT
"RTN","HDISVM04",77,0)
 .;Remove extra characters from end of text
"RTN","HDISVM04",78,0)
 .SET TEXT=$EXTRACT(TEXT,1,LENGTH)
"RTN","HDISVM04",79,0)
 .;First character is LF and last character of previous line was CR
"RTN","HDISVM04",80,0)
 .;Drop the LF since the CR/LF was done on previous line
"RTN","HDISVM04",81,0)
 .IF ($EXTRACT(TEXT,1)=LF) IF (CREND) SET TEXT=$EXTRACT(TEXT,2,$LENGTH(TEXT))
"RTN","HDISVM04",82,0)
 .;Remember if last character is CR
"RTN","HDISVM04",83,0)
 .SET CREND=0
"RTN","HDISVM04",84,0)
 .IF ($EXTRACT(TEXT,$LENGTH(TEXT))=CR) SET CREND=1
"RTN","HDISVM04",85,0)
 .;Check for CR/LF in text
"RTN","HDISVM04",86,0)
 .IF ((TEXT[CR)!(TEXT[LF)) FOR  DO  QUIT:((TEXT'[CR)&(TEXT'[LF))
"RTN","HDISVM04",87,0)
 ..SET CRSPOT=$FIND(TEXT,CR)-1
"RTN","HDISVM04",88,0)
 ..SET:(CRSPOT<0) CRSPOT=0
"RTN","HDISVM04",89,0)
 ..SET LFSPOT=$FIND(TEXT,LF)-1
"RTN","HDISVM04",90,0)
 ..SET:(LFSPOT<0) LFSPOT=0
"RTN","HDISVM04",91,0)
 ..IF (LFSPOT=(CRSPOT+1)) DO  QUIT
"RTN","HDISVM04",92,0)
 ...;CR/LF pair
"RTN","HDISVM04",93,0)
 ...SET TMPTXT=$EXTRACT(TEXT,1,CRSPOT-1)
"RTN","HDISVM04",94,0)
 ...SET TEXT=$EXTRACT(TEXT,LFSPOT+1,$LENGTH(TEXT))
"RTN","HDISVM04",95,0)
 ...;Add to output array & increment subscript
"RTN","HDISVM04",96,0)
 ...DO APPEND(TMPTXT,.WORKING,OUT,.OUTNODE,1)
"RTN","HDISVM04",97,0)
 ...QUIT
"RTN","HDISVM04",98,0)
 ..ELSE  IF ((('CRSPOT)&(LFSPOT))!((LFSPOT)&(LFSPOT<CRSPOT))) DO  QUIT
"RTN","HDISVM04",99,0)
 ...;LF before CR
"RTN","HDISVM04",100,0)
 ...SET TMPTXT=$EXTRACT(TEXT,1,LFSPOT-1)
"RTN","HDISVM04",101,0)
 ...SET TEXT=$EXTRACT(TEXT,LFSPOT+1,$LENGTH(TEXT))
"RTN","HDISVM04",102,0)
 ...;Add to output array & increment subscript
"RTN","HDISVM04",103,0)
 ...DO APPEND(TMPTXT,.WORKING,OUT,.OUTNODE,1)
"RTN","HDISVM04",104,0)
 ...QUIT
"RTN","HDISVM04",105,0)
 ..ELSE  IF ((('LFSPOT)&(CRSPOT))!((CRSPOT)&(CRSPOT<LFSPOT))) DO  QUIT
"RTN","HDISVM04",106,0)
 ...;LF after CR (but not CR/LF pair)
"RTN","HDISVM04",107,0)
 ...SET TMPTXT=$EXTRACT(TEXT,1,CRSPOT-1)
"RTN","HDISVM04",108,0)
 ...SET TEXT=$EXTRACT(TEXT,CRSPOT+1,$LENGTH(TEXT))
"RTN","HDISVM04",109,0)
 ...;Add to output array & increment subscript
"RTN","HDISVM04",110,0)
 ...DO APPEND(TMPTXT,.WORKING,OUT,.OUTNODE,1)
"RTN","HDISVM04",111,0)
 ...QUIT
"RTN","HDISVM04",112,0)
 ..QUIT
"RTN","HDISVM04",113,0)
 .;Add text to output
"RTN","HDISVM04",114,0)
 .DO APPEND(TEXT,.WORKING,OUT,.OUTNODE,0)
"RTN","HDISVM04",115,0)
 .QUIT
"RTN","HDISVM04",116,0)
 ;Add remaining text to output
"RTN","HDISVM04",117,0)
 IF $LENGTH(WORKING) DO
"RTN","HDISVM04",118,0)
 .DO STORE(WORKING,OUT,OUTNODE)
"RTN","HDISVM04",119,0)
 QUIT
"RTN","HDISVM04",120,0)
 ;
"RTN","HDISVM04",121,0)
UUD4(CHARS) ;UUDecode 4 characters
"RTN","HDISVM04",122,0)
 ; Input: CHARS = Characters to uudecode
"RTN","HDISVM04",123,0)
 ;Output: UUDecoded text
"RTN","HDISVM04",124,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM04",125,0)
 ;      : It is assumed that CHARS is exactly 4 characters in length
"RTN","HDISVM04",126,0)
 ;
"RTN","HDISVM04",127,0)
 NEW DEC1,DEC2,DEC3,BIN1,BIN2,BIN3
"RTN","HDISVM04",128,0)
 NEW BIN1A,BIN2A,BIN3A,BIN4A,DEC1A,DEC2A,DEC3A,DEC4A
"RTN","HDISVM04",129,0)
 SET DEC1A=$ASCII($EXTRACT(CHARS,1))-32
"RTN","HDISVM04",130,0)
 SET DEC2A=$ASCII($EXTRACT(CHARS,2))-32
"RTN","HDISVM04",131,0)
 SET DEC3A=$ASCII($EXTRACT(CHARS,3))-32
"RTN","HDISVM04",132,0)
 SET DEC4A=$ASCII($EXTRACT(CHARS,4))-32
"RTN","HDISVM04",133,0)
 SET BIN1A=$$RJ^XLFSTR($$CNV^XLFUTL(DEC1A,2),6,"0")
"RTN","HDISVM04",134,0)
 SET BIN1A=$EXTRACT(BIN1A,($LENGTH(BIN1A)-5),$LENGTH(BIN1A))
"RTN","HDISVM04",135,0)
 SET BIN2A=$$RJ^XLFSTR($$CNV^XLFUTL(DEC2A,2),6,"0")
"RTN","HDISVM04",136,0)
 SET BIN2A=$EXTRACT(BIN2A,($LENGTH(BIN2A)-5),$LENGTH(BIN2A))
"RTN","HDISVM04",137,0)
 SET BIN3A=$$RJ^XLFSTR($$CNV^XLFUTL(DEC3A,2),6,"0")
"RTN","HDISVM04",138,0)
 SET BIN3A=$EXTRACT(BIN3A,($LENGTH(BIN3A)-5),$LENGTH(BIN3A))
"RTN","HDISVM04",139,0)
 SET BIN4A=$$RJ^XLFSTR($$CNV^XLFUTL(DEC4A,2),6,"0")
"RTN","HDISVM04",140,0)
 SET BIN4A=$EXTRACT(BIN4A,($LENGTH(BIN4A)-5),$LENGTH(BIN4A))
"RTN","HDISVM04",141,0)
 SET BIN1=BIN1A_$EXTRACT(BIN2A,1,2)
"RTN","HDISVM04",142,0)
 SET BIN2=$EXTRACT(BIN2A,3,6)_$EXTRACT(BIN3A,1,4)
"RTN","HDISVM04",143,0)
 SET BIN3=$EXTRACT(BIN3A,5,6)_BIN4A
"RTN","HDISVM04",144,0)
 SET DEC1=$$DEC^XLFUTL(BIN1,2)
"RTN","HDISVM04",145,0)
 SET DEC2=$$DEC^XLFUTL(BIN2,2)
"RTN","HDISVM04",146,0)
 SET DEC3=$$DEC^XLFUTL(BIN3,2)
"RTN","HDISVM04",147,0)
 QUIT $CHAR(DEC1,DEC2,DEC3)
"RTN","HDISVM04",148,0)
 ;
"RTN","HDISVM04",149,0)
APPEND(TEXT,WORKING,OUT,OUTNODE,FORCE) ;Append text to running text
"RTN","HDISVM04",150,0)
 ; Input: TEXT = Text to append to uudecoded output array
"RTN","HDISVM04",151,0)
 ;        WORKING = Text that hasn't been added to output array yet
"RTN","HDISVM04",152,0)
 ;                  but is uudencoded.  Text is added to the output
"RTN","HDISVM04",153,0)
 ;                  array 245 characters at a time.
"RTN","HDISVM04",154,0)
 ;                  (PASS BY REFERENCE)
"RTN","HDISVM04",155,0)
 ;        OUT = Array to put uudecoded text into
"RTN","HDISVM04",156,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM04",157,0)
 ;        OUTNODE = Node in OUT to store uudecoded text into
"RTN","HDISVM04",158,0)
 ;                  (PASS BY REFERENCE)
"RTN","HDISVM04",159,0)
 ;        FORCE = Flag indicating that a carriage return / line feed
"RTN","HDISVM04",160,0)
 ;               was encountered and all of the uudecoded text passed
"RTN","HDISVM04",161,0)
 ;               in should be stored in the output array.  Passing a
"RTN","HDISVM04",162,0)
 ;               value of 1 will force storage and incrementing of
"RTN","HDISVM04",163,0)
 ;               OUTNODE.  Passing a value of 0 will only store data
"RTN","HDISVM04",164,0)
 ;               in the output array if the running text exceeds 245
"RTN","HDISVM04",165,0)
 ;               characters.
"RTN","HDISVM04",166,0)
 ;               (DEFAULTS TO 0)
"RTN","HDISVM04",167,0)
 ;Output: None
"RTN","HDISVM04",168,0)
 ;        WORKING = Text that was not added to output array
"RTN","HDISVM04",169,0)
 ;        OUTNODE = Next node in OUT to store uudecoded text into
"RTN","HDISVM04",170,0)
 ;                  (this is incremented if FORCE = 1)
"RTN","HDISVM04",171,0)
 ;        OUT will be set as follows (if applicable):
"RTN","HDISVM04",172,0)
 ;          OUT(1..n) = Lines of text
"RTN","HDISVM04",173,0)
 ;          OUT(n,1..m) = Continuation of text when length of line
"RTN","HDISVM04",174,0)
 ;                        is longer than 245 characters
"RTN","HDISVM04",175,0)
 ; Notes: It is assumed that all input (except CRLF) is defined
"RTN","HDISVM04",176,0)
 ;
"RTN","HDISVM04",177,0)
 NEW LENWORK,LENTEXT
"RTN","HDISVM04",178,0)
 SET FORCE=+$GET(FORCE)
"RTN","HDISVM04",179,0)
 SET LENWORK=$LENGTH(WORKING)
"RTN","HDISVM04",180,0)
 SET LENTEXT=$LENGTH(TEXT)
"RTN","HDISVM04",181,0)
 ;Length of running text and new text won't exceed 245
"RTN","HDISVM04",182,0)
 IF ((LENWORK+LENTEXT)<245) DO
"RTN","HDISVM04",183,0)
 .SET WORKING=WORKING_TEXT
"RTN","HDISVM04",184,0)
 .QUIT
"RTN","HDISVM04",185,0)
 ;Length of running text and new text exceeds or equals 245
"RTN","HDISVM04",186,0)
 IF ((LENWORK+LENTEXT)>244) DO
"RTN","HDISVM04",187,0)
 .;Store combined text in output array
"RTN","HDISVM04",188,0)
 .SET WORKING=WORKING_$EXTRACT(TEXT,1,(245-LENWORK))
"RTN","HDISVM04",189,0)
 .DO STORE(WORKING,OUT,OUTNODE)
"RTN","HDISVM04",190,0)
 .;Set new working text
"RTN","HDISVM04",191,0)
 .SET WORKING=$EXTRACT(TEXT,(245-LENWORK+1),LENTEXT)
"RTN","HDISVM04",192,0)
 ;Carriage return / line feed request
"RTN","HDISVM04",193,0)
 IF (FORCE) DO
"RTN","HDISVM04",194,0)
 .;Store working text
"RTN","HDISVM04",195,0)
 .DO STORE(WORKING,OUT,OUTNODE)
"RTN","HDISVM04",196,0)
 .;Increment subscript value & clear working text
"RTN","HDISVM04",197,0)
 .SET OUTNODE=OUTNODE+1
"RTN","HDISVM04",198,0)
 .SET WORKING=""
"RTN","HDISVM04",199,0)
 .QUIT
"RTN","HDISVM04",200,0)
 QUIT
"RTN","HDISVM04",201,0)
 ;
"RTN","HDISVM04",202,0)
STORE(TEXT,OUT,NODE) ;Store text in uudecoded array
"RTN","HDISVM04",203,0)
 ; Input: TEXT = Text to append to uudecoded output array
"RTN","HDISVM04",204,0)
 ;        OUT = Array to put uudecoded text into
"RTN","HDISVM04",205,0)
 ;              (FULL GLOBAL REFERENCE)
"RTN","HDISVM04",206,0)
 ;        NODE = Node in OUT to store uudecoded text into
"RTN","HDISVM04",207,0)
 ;Output: None
"RTN","HDISVM04",208,0)
 ;        OUT will be set as follows:
"RTN","HDISVM04",209,0)
 ;          OUT(1..n) = Lines of text
"RTN","HDISVM04",210,0)
 ;          OUT(n,1..m) = Continuation of text when length of line
"RTN","HDISVM04",211,0)
 ;                        is longer than 245 characters
"RTN","HDISVM04",212,0)
 ; Notes: It is assumed that all input is defined
"RTN","HDISVM04",213,0)
 ;
"RTN","HDISVM04",214,0)
 ;Store text on main node
"RTN","HDISVM04",215,0)
 IF ('$DATA(@OUT@(NODE))) DO  QUIT
"RTN","HDISVM04",216,0)
 .SET @OUT@(NODE)=TEXT
"RTN","HDISVM04",217,0)
 .QUIT
"RTN","HDISVM04",218,0)
 ;Store combined text on continuation node
"RTN","HDISVM04",219,0)
 SET @OUT@(NODE,(1+$ORDER(@OUT@(NODE,""),-1)))=TEXT
"RTN","HDISVM04",220,0)
 QUIT
"RTN","HDISVM05")
0^8^B13220707
"RTN","HDISVM05",1,0)
HDISVM05 ;BPFO/JRP - PARSE DELIMITTED TEXT;6/26/2007
"RTN","HDISVM05",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVM05",3,0)
 ;
"RTN","HDISVM05",4,0)
 ;**
"RTN","HDISVM05",5,0)
 ;**  The following code was copied from SCMSVUT5, which I
"RTN","HDISVM05",6,0)
 ;**  originally wrote in July of 2002.  It was copied to
"RTN","HDISVM05",7,0)
 ;**  prevent the dependancy on the Scheduling package, which
"RTN","HDISVM05",8,0)
 ;**  may not exist on all systems.
"RTN","HDISVM05",9,0)
 ;**
"RTN","HDISVM05",10,0)
 ;**  It has also been modified to handle fields that contain
"RTN","HDISVM05",11,0)
 ;**  the separator character.  These fields are surrounded by
"RTN","HDISVM05",12,0)
 ;**  quotation marks (ex: ...^"Field ^ With ^ Separator"^...).
"RTN","HDISVM05",13,0)
 ;**  This was done because the original parser was written for
"RTN","HDISVM05",14,0)
 ;**  parsing HL7 messages and this parser is meant for parsing
"RTN","HDISVM05",15,0)
 ;**  delimitted text (ie spreadsheets).
"RTN","HDISVM05",16,0)
 ;**
"RTN","HDISVM05",17,0)
 ;
"RTN","HDISVM05",18,0)
PARSE(INARR,OUTARR,SEP,SUB,MAX) ;Parse array into individual fields
"RTN","HDISVM05",19,0)
 ;Input  : INARR - Array containing data to parse (full global ref)
"RTN","HDISVM05",20,0)
 ;                   INARR = First 245 characters of data
"RTN","HDISVM05",21,0)
 ;                   INARR(1..n) = Continuation nodes
"RTN","HDISVM05",22,0)
 ;                        OR
"RTN","HDISVM05",23,0)
 ;                   INARR(x) = First 245 characters of data
"RTN","HDISVM05",24,0)
 ;                   INARR(x,1..n) = Continuation nodes
"RTN","HDISVM05",25,0)
 ;         OUTARR - Array to put parsed data into (full global ref)
"RTN","HDISVM05",26,0)
 ;         SEP - Field separator (defaults to ^) (1 character)
"RTN","HDISVM05",27,0)
 ;         SUB - Starting subscript of OUTARR (defaults to 0)
"RTN","HDISVM05",28,0)
 ;         MAX - Maximum length of output node (defaults to 245)
"RTN","HDISVM05",29,0)
 ;Output : None
"RTN","HDISVM05",30,0)
 ;         OUTARR(SUB) = First piece (MAX characters)
"RTN","HDISVM05",31,0)
 ;         OUTARR(SUB,1..n) = Continuation nodes
"RTN","HDISVM05",32,0)
 ;         OUTARR(SUB+X) = Xth piece (MAX characters)
"RTN","HDISVM05",33,0)
 ;         OUTARR(SUB+X,1..n) = Continuation nodes
"RTN","HDISVM05",34,0)
 ;Notes  : OUTARR is initialized (KILLed) on entry
"RTN","HDISVM05",35,0)
 ;       : Assumes that INARR and OUTARR are defined and valid
"RTN","HDISVM05",36,0)
 ;
"RTN","HDISVM05",37,0)
 ;Declare variables
"RTN","HDISVM05",38,0)
 NEW NODE,STOP,DATA,INFO,FLD,SEPCNT,CN,OUT,TMP,ROOT,OUTNODE
"RTN","HDISVM05",39,0)
 NEW QUOTE,HASQ,ADDSEP
"RTN","HDISVM05",40,0)
 KILL @OUTARR
"RTN","HDISVM05",41,0)
 SET SEP=$GET(SEP) SET SEP=$EXTRACT(SEP,1) SET:SEP="" SEP="^"
"RTN","HDISVM05",42,0)
 SET SUB=+$GET(SUB)
"RTN","HDISVM05",43,0)
 SET MAX=+$GET(MAX) SET:'MAX MAX=245
"RTN","HDISVM05",44,0)
 SET NODE=INARR
"RTN","HDISVM05",45,0)
 SET INFO=$GET(@NODE)
"RTN","HDISVM05",46,0)
 SET ROOT=$$OREF^DILF(INARR)
"RTN","HDISVM05",47,0)
 SET FLD=1
"RTN","HDISVM05",48,0)
 SET SEPCNT=$LENGTH(INFO,SEP)
"RTN","HDISVM05",49,0)
 SET STOP=0
"RTN","HDISVM05",50,0)
 SET OUTNODE=$NAME(@OUTARR@(SUB))
"RTN","HDISVM05",51,0)
 SET QUOTE=$CHAR(34)
"RTN","HDISVM05",52,0)
 SET HASQ=0
"RTN","HDISVM05",53,0)
 SET ADDSEP=0
"RTN","HDISVM05",54,0)
 SET CN=0
"RTN","HDISVM05",55,0)
 ;Loop through all columns in all nodes
"RTN","HDISVM05",56,0)
 FOR  SET DATA=$PIECE(INFO,SEP,FLD) DO  QUIT:STOP
"RTN","HDISVM05",57,0)
 .;Check for data in double quotes
"RTN","HDISVM05",58,0)
 .IF (DATA[QUOTE) IF (($LENGTH(DATA,QUOTE)-1)#2) DO
"RTN","HDISVM05",59,0)
 ..;Check for leading double quote
"RTN","HDISVM05",60,0)
 ..IF ('HASQ) DO
"RTN","HDISVM05",61,0)
 ...;Separator on next node (don't append now in case it isn't)
"RTN","HDISVM05",62,0)
 ...IF (FLD=SEPCNT) SET ADDSEP=1 QUIT
"RTN","HDISVM05",63,0)
 ...;Append separator
"RTN","HDISVM05",64,0)
 ...SET DATA=DATA_SEP
"RTN","HDISVM05",65,0)
 ...SET ADDSEP=0
"RTN","HDISVM05",66,0)
 ...QUIT
"RTN","HDISVM05",67,0)
 ..SET HASQ='HASQ
"RTN","HDISVM05",68,0)
 ..QUIT
"RTN","HDISVM05",69,0)
 .;Need to append separator when the leading quotation mark was
"RTN","HDISVM05",70,0)
 .;on the previous node AND the next separator is encounterd
"RTN","HDISVM05",71,0)
 .IF (ADDSEP) IF (HASQ) IF (DATA'=QUOTE) IF (INFO[SEP) IF (FLD'=SEPCNT) DO
"RTN","HDISVM05",72,0)
 ..SET DATA=DATA_SEP
"RTN","HDISVM05",73,0)
 ..SET ADDSEP=0
"RTN","HDISVM05",74,0)
 ..QUIT
"RTN","HDISVM05",75,0)
 .;End of line - store in output global
"RTN","HDISVM05",76,0)
 .IF FLD=SEPCNT DO  QUIT
"RTN","HDISVM05",77,0)
 ..DO ADDNODE
"RTN","HDISVM05",78,0)
 ..;Get next line of data from input global
"RTN","HDISVM05",79,0)
 ..SET NODE=$QUERY(@NODE)
"RTN","HDISVM05",80,0)
 ..;No more data - stop outer loop
"RTN","HDISVM05",81,0)
 ..IF (NODE="")!(NODE'[ROOT) SET STOP=1 QUIT
"RTN","HDISVM05",82,0)
 ..;Set text and column variables
"RTN","HDISVM05",83,0)
 ..SET INFO=$GET(@NODE)
"RTN","HDISVM05",84,0)
 ..SET SEPCNT=$LENGTH(INFO,SEP)
"RTN","HDISVM05",85,0)
 ..SET FLD=1
"RTN","HDISVM05",86,0)
 ..QUIT
"RTN","HDISVM05",87,0)
 .;Add column to output global
"RTN","HDISVM05",88,0)
 .DO ADDNODE
"RTN","HDISVM05",89,0)
 .;Increment subscript if not in middle of double quotes
"RTN","HDISVM05",90,0)
 .IF ('HASQ) SET SUB=SUB+1
"RTN","HDISVM05",91,0)
 .;Set next storage node to use
"RTN","HDISVM05",92,0)
 .SET OUTNODE=$NAME(@OUTARR@(SUB))
"RTN","HDISVM05",93,0)
 .;Increment column number
"RTN","HDISVM05",94,0)
 .SET FLD=FLD+1
"RTN","HDISVM05",95,0)
 .;Reset continuation node number
"RTN","HDISVM05",96,0)
 .SET CN=0
"RTN","HDISVM05",97,0)
 .QUIT
"RTN","HDISVM05",98,0)
 QUIT
"RTN","HDISVM05",99,0)
ADDNODE ;Used by PARSE to add data to output node
"RTN","HDISVM05",100,0)
 ;Get currently stored column value
"RTN","HDISVM05",101,0)
 SET TMP=$GET(@OUTNODE)
"RTN","HDISVM05",102,0)
 ;Length of node won't go over max value - append
"RTN","HDISVM05",103,0)
 IF ($LENGTH(TMP)+$LENGTH(DATA))<(MAX+1) SET @OUTNODE=TMP_DATA QUIT
"RTN","HDISVM05",104,0)
 ;Append as much as stored column value can take
"RTN","HDISVM05",105,0)
 SET @OUTNODE=TMP_$EXTRACT(DATA,1,(MAX-$LENGTH(TMP)))
"RTN","HDISVM05",106,0)
 ;Increment continuation node number
"RTN","HDISVM05",107,0)
 SET CN=CN+1
"RTN","HDISVM05",108,0)
 ;Recursively call self to store remaining text
"RTN","HDISVM05",109,0)
 SET DATA=$EXTRACT(DATA,(MAX-$LENGTH(TMP)+1),$LENGTH(DATA))
"RTN","HDISVM05",110,0)
 SET OUTNODE=$NAME(@OUTARR@(SUB,CN))
"RTN","HDISVM05",111,0)
 IF DATA'="" DO ADDNODE
"RTN","HDISVM05",112,0)
 QUIT
"RTN","HDISVS04")
0^4^B1565418
"RTN","HDISVS04",1,0)
HDISVS04 ;BPFO/JRP - PROCESS UUENCODED MESSAGE FOR LAB EXCEPTIONS;6/26/2007
"RTN","HDISVS04",2,0)
 ;;1.0;HEALTH DATA & INFORMATICS;**7**;Feb 22, 2005;Build 33
"RTN","HDISVS04",3,0)
 ;
"RTN","HDISVS04",4,0)
LABXCPT(MSGARR,ERRARR) ;Main entry point for Lab exception messages
"RTN","HDISVS04",5,0)
 ; Input : MSGARR - Array containing received message (closed root)
"RTN","HDISVS04",6,0)
 ;           @MSGARR@(1..n,0) = Message text
"RTN","HDISVS04",7,0)
 ;         ERRARR - Array to output errors in (closed root)
"RTN","HDISVS04",8,0)
 ;Output : None
"RTN","HDISVS04",9,0)
 ;         @ERRARR@(x) = Error text (if applicable)
"RTN","HDISVS04",10,0)
 ; Notes : ERRARR is initialized (KILLed) on input
"RTN","HDISVS04",11,0)
 ;
"RTN","HDISVS04",12,0)
 NEW DECARR,FILENAME,PATH
"RTN","HDISVS04",13,0)
 SET DECARR=$NAME(^TMP("HDISVS04",$JOB,"DECARR"))
"RTN","HDISVS04",14,0)
 KILL @DECARR
"RTN","HDISVS04",15,0)
 ;UUDecode attachment in received message
"RTN","HDISVS04",16,0)
 DO DECODE^HDISVM04(MSGARR,DECARR,1,1)
"RTN","HDISVS04",17,0)
 ;Nothing decoded
"RTN","HDISVS04",18,0)
 IF ('$DATA(@DECARR)) DO  QUIT
"RTN","HDISVS04",19,0)
 .SET @ERRARR@(1)="Unable to find attachment to UUDecode"
"RTN","HDISVS04",20,0)
 .KILL @DECARR
"RTN","HDISVS04",21,0)
 .QUIT
"RTN","HDISVS04",22,0)
 ;Remember filename of attachment and remove from decoded array
"RTN","HDISVS04",23,0)
 SET FILENAME=$GET(@DECARR@(0))
"RTN","HDISVS04",24,0)
 KILL @DECARR@(0)
"RTN","HDISVS04",25,0)
 ;Save file to disk - hard coded as FORUM's Anonymous directory
"RTN","HDISVS04",26,0)
 SET PATH="USER$:[ANONYMOUS]"
"RTN","HDISVS04",27,0)
 IF ('$$GTF^%ZISH(DECARR,($QLENGTH(DECARR)+1),PATH,FILENAME)) DO  QUIT
"RTN","HDISVS04",28,0)
 .SET @ERRARR@(1)="Unable to store attached document to disk ("_PATH_")"
"RTN","HDISVS04",29,0)
 .KILL @DECARR
"RTN","HDISVS04",30,0)
 .QUIT
"RTN","HDISVS04",31,0)
 ;Done
"RTN","HDISVS04",32,0)
 KILL @DECARR
"RTN","HDISVS04",33,0)
 QUIT
"RTN","HDISVS04",34,0)
 ;
"RTN","HDISVS04",35,0)
 ; === Code from here down was used when the received
"RTN","HDISVS04",36,0)
 ; === data was a delimitted text file that was broken
"RTN","HDISVS04",37,0)
 ; === down into a "grid" for hand-off to interface to
"RTN","HDISVS04",38,0)
 ; === HWSC.  Left for reference purposes.  Removed
"RTN","HDISVS04",39,0)
 ; === NEWing and instantiation of GRIDARR variable.
"RTN","HDISVS04",40,0)
 ;
"RTN","HDISVS04",41,0)
 ;  Break up into individual columns
"RTN","HDISVS04",42,0)
 ;  SET ROW=0
"RTN","HDISVS04",43,0)
 ;  FOR  SET ROW=+$ORDER(@DECARR@(ROW)) QUIT:('ROW)  DO
"RTN","HDISVS04",44,0)
 ;  .DO PARSE^HDISVM05($NAME(@DECARR@(ROW)),$NAME(@GRIDARR@(ROW)),"|",1,245)
"RTN","HDISVS04",45,0)
 ;  .QUIT
"RTN","HDISVS04",46,0)
 ;  ;Done
"RTN","HDISVS04",47,0)
 ;  KILL @DECARR,@GRIDARR
"RTN","HDISVS04",48,0)
 ;  QUIT
"VER")
8.0^22.0
**INSTALL NAME**
LR*5.2*350
"BLD",6099,0)
LR*5.2*350^LAB SERVICE^0^3120718^y
"BLD",6099,1,0)
^^1^1^3120221^
"BLD",6099,1,1,0)
Refer to National Patch Module.
"BLD",6099,4,0)
^9.64PA^69^13
"BLD",6099,4,60,0)
60
"BLD",6099,4,60,2,0)
^9.641^60.03^4
"BLD",6099,4,60,2,60,0)
LABORATORY TEST  (File-top level)
"BLD",6099,4,60,2,60,1,0)
^9.6411^51^1
"BLD",6099,4,60,2,60,1,51,0)
PRINT NAME
"BLD",6099,4,60,2,60.01,0)
SITE/SPECIMEN  (sub-file)
"BLD",6099,4,60,2,60.01,1,0)
^9.6411^9^2
"BLD",6099,4,60,2,60.01,1,.01,0)
SITE/SPECIMEN
"BLD",6099,4,60,2,60.01,1,9,0)
DEFAULT VALUE
"BLD",6099,4,60,2,60.02,0)
LAB TEST INCLUDED IN PANEL  (sub-file)
"BLD",6099,4,60,2,60.02,1,0)
^9.6411^.01^1
"BLD",6099,4,60,2,60.02,1,.01,0)
LAB TEST
"BLD",6099,4,60,2,60.03,0)
COLLECTION SAMPLE  (sub-file)
"BLD",6099,4,60,2,60.03,1,0)
^9.6411^.01^1
"BLD",6099,4,60,2,60.03,1,.01,0)
COLLECTION SAMPLE
"BLD",6099,4,60,222)
y^y^p^^^^n^^n
"BLD",6099,4,60,223)
I 1
"BLD",6099,4,60,224)

"BLD",6099,4,61,0)
61
"BLD",6099,4,61,2,0)
^9.641^61.023^2
"BLD",6099,4,61,2,61,0)
TOPOGRAPHY FIELD  (File-top level)
"BLD",6099,4,61,2,61,1,0)
^9.6411^.01^5
"BLD",6099,4,61,2,61,1,.01,0)
NAME
"BLD",6099,4,61,2,61,1,2,0)
SNOMED CODE
"BLD",6099,4,61,2,61,1,20,0)
SNOMED CT ID
"BLD",6099,4,61,2,61,1,21,0)
SCT CODE STATUS
"BLD",6099,4,61,2,61,1,22,0)
SCT TOP CONCEPT
"BLD",6099,4,61,2,61.023,0)
SCT STATUS DATE  (sub-file)
"BLD",6099,4,61,2,61.023,1,0)
^9.6411^^0
"BLD",6099,4,61,222)
y^n^p^^^^n^^n
"BLD",6099,4,61,223)
I 1
"BLD",6099,4,61,224)

"BLD",6099,4,61.2,0)
61.2
"BLD",6099,4,61.2,2,0)
^9.641^61.223^2
"BLD",6099,4,61.2,2,61.2,0)
ETIOLOGY FIELD  (File-top level)
"BLD",6099,4,61.2,2,61.2,1,0)
^9.6411^.01^6
"BLD",6099,4,61.2,2,61.2,1,.01,0)
NAME
"BLD",6099,4,61.2,2,61.2,1,2,0)
SNOMED CODE
"BLD",6099,4,61.2,2,61.2,1,4,0)
IDENTIFIER
"BLD",6099,4,61.2,2,61.2,1,20,0)
SNOMED CT ID
"BLD",6099,4,61.2,2,61.2,1,21,0)
SCT CODE STATUS
"BLD",6099,4,61.2,2,61.2,1,22,0)
SCT TOP CONCEPT
"BLD",6099,4,61.2,2,61.223,0)
SCT STATUS DATE  (sub-file)
"BLD",6099,4,61.2,2,61.223,1,0)
^9.6411^^0
"BLD",6099,4,61.2,222)
y^n^p^^^^n^^n
"BLD",6099,4,61.2,223)
I 1
"BLD",6099,4,61.2,224)

"BLD",6099,4,62,0)
62
"BLD",6099,4,62,2,0)
^9.641^62.023^2
"BLD",6099,4,62,2,62,0)
COLLECTION SAMPLE  (File-top level)
"BLD",6099,4,62,2,62,1,0)
^9.6411^.01^4
"BLD",6099,4,62,2,62,1,.01,0)
NAME
"BLD",6099,4,62,2,62,1,20,0)
SNOMED CT ID
"BLD",6099,4,62,2,62,1,21,0)
SCT CODE STATUS
"BLD",6099,4,62,2,62,1,22,0)
SCT TOP CONCEPT
"BLD",6099,4,62,2,62.023,0)
SCT STATUS DATE  (sub-file)
"BLD",6099,4,62,2,62.023,1,0)
^9.6411^^0
"BLD",6099,4,62,222)
y^n^p^^^^n^^n
"BLD",6099,4,62,223)
I 1
"BLD",6099,4,62,224)

"BLD",6099,4,62.06,0)
62.06
"BLD",6099,4,62.06,2,0)
^9.641^62.06^1
"BLD",6099,4,62.06,2,62.06,0)
ANTIMICROBIAL SUSCEPTIBILITY  (File-top level)
"BLD",6099,4,62.06,2,62.06,1,0)
^9.6411^5^4
"BLD",6099,4,62.06,2,62.06,1,1,0)
DRUG NODE
"BLD",6099,4,62.06,2,62.06,1,1.1,0)
AFB DRUG NODE
"BLD",6099,4,62.06,2,62.06,1,5,0)
INTERNAL NAME
"BLD",6099,4,62.06,2,62.06,1,5.1,0)
AFB INTERNAL NAME
"BLD",6099,4,62.06,222)
y^n^p^^^^n^^n
"BLD",6099,4,62.06,224)

"BLD",6099,4,63,0)
63
"BLD",6099,4,63,2,0)
^9.641^63.00014^23
"BLD",6099,4,63,2,63,0)
LAB DATA  (File-top level)
"BLD",6099,4,63,2,63,1,0)
^9.6411^14.91^2
"BLD",6099,4,63,2,63,1,.01,0)
LRDFN
"BLD",6099,4,63,2,63,1,14.91,0)
RELEASING SITE
"BLD",6099,4,63,2,63.00012,0)
PRODUCING LABORATORY  (sub-file)
"BLD",6099,4,63,2,63.00012,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.00013,0)
EXTERNAL PACAKGE REFERENCE  (sub-file)
"BLD",6099,4,63,2,63.00013,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.00014,0)
CODE SYSTEM REFERENCE  (sub-file)
"BLD",6099,4,63,2,63.00014,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.02,0)
EM  (sub-file)
"BLD",6099,4,63,2,63.02,1,0)
^9.6411^.345^6
"BLD",6099,4,63,2,63.02,1,.31,0)
UID
"BLD",6099,4,63,2,63.02,1,.32,0)
ORDERING SITE
"BLD",6099,4,63,2,63.02,1,.33,0)
COLLECTING SITE
"BLD",6099,4,63,2,63.02,1,.34,0)
HOST UID
"BLD",6099,4,63,2,63.02,1,.342,0)
ORDERING SITE UID
"BLD",6099,4,63,2,63.02,1,.345,0)
RELEASING SITE
"BLD",6099,4,63,2,63.04,0)
CHEM, HEM, TOX, RIA, SER, etc.  (sub-file)
"BLD",6099,4,63,2,63.04,1,0)
^9.6411^.345^1
"BLD",6099,4,63,2,63.04,1,.345,0)
RELEASING SITE
"BLD",6099,4,63,2,63.05,0)
MICROBIOLOGY  (sub-file)
"BLD",6099,4,63,2,63.05,1,0)
^9.6411^.345^6
"BLD",6099,4,63,2,63.05,1,.31,0)
UID
"BLD",6099,4,63,2,63.05,1,.32,0)
ORDERING SITE
"BLD",6099,4,63,2,63.05,1,.33,0)
COLLECTING SITE
"BLD",6099,4,63,2,63.05,1,.34,0)
HOST UID
"BLD",6099,4,63,2,63.05,1,.342,0)
ORDERING SITE UID
"BLD",6099,4,63,2,63.05,1,.345,0)
RELEASING SITE
"BLD",6099,4,63,2,63.07,0)
ORDERED TEST  (sub-file)
"BLD",6099,4,63,2,63.07,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.08,0)
SURGICAL PATHOLOGY  (sub-file)
"BLD",6099,4,63,2,63.08,1,0)
^9.6411^.345^6
"BLD",6099,4,63,2,63.08,1,.31,0)
UID
"BLD",6099,4,63,2,63.08,1,.32,0)
ORDERING SITE
"BLD",6099,4,63,2,63.08,1,.33,0)
COLLECTING SITE
"BLD",6099,4,63,2,63.08,1,.34,0)
HOST UID
"BLD",6099,4,63,2,63.08,1,.342,0)
ORDERING SITE UID
"BLD",6099,4,63,2,63.08,1,.345,0)
RELEASING SITE
"BLD",6099,4,63,2,63.09,0)
CYTOPATHOLOGY  (sub-file)
"BLD",6099,4,63,2,63.09,1,0)
^9.6411^.345^6
"BLD",6099,4,63,2,63.09,1,.31,0)
UID
"BLD",6099,4,63,2,63.09,1,.32,0)
ORDERING SITE
"BLD",6099,4,63,2,63.09,1,.33,0)
COLLECTING SITE
"BLD",6099,4,63,2,63.09,1,.34,0)
HOST UID
"BLD",6099,4,63,2,63.09,1,.342,0)
ORDERING SITE UID
"BLD",6099,4,63,2,63.09,1,.345,0)
RELEASING SITE
"BLD",6099,4,63,2,63.202,0)
SPECIMEN  (sub-file)
"BLD",6099,4,63,2,63.202,1,0)
^9.6411^.07^2
"BLD",6099,4,63,2,63.202,1,.06,0)
SPECIMEN TOPOGRAPHY
"BLD",6099,4,63,2,63.202,1,.07,0)
COLLECTION SAMPLE
"BLD",6099,4,63,2,63.3,0)
ORGANISM  (sub-file)
"BLD",6099,4,63,2,63.3,1,0)
^9.6411^.01^2
"BLD",6099,4,63,2,63.3,1,.01,0)
ORGANISM
"BLD",6099,4,63,2,63.3,1,.1,0)
ISOLATE ID
"BLD",6099,4,63,2,63.34,0)
PARASITE  (sub-file)
"BLD",6099,4,63,2,63.34,1,0)
^9.6411^.01^2
"BLD",6099,4,63,2,63.34,1,.01,0)
PARASITE
"BLD",6099,4,63,2,63.34,1,.1,0)
ISOLATE ID
"BLD",6099,4,63,2,63.37,0)
FUNGUS/YEAST  (sub-file)
"BLD",6099,4,63,2,63.37,1,0)
^9.6411^.01^2
"BLD",6099,4,63,2,63.37,1,.01,0)
FUNGUS/YEAST
"BLD",6099,4,63,2,63.37,1,.1,0)
ISOLATE ID
"BLD",6099,4,63,2,63.39,0)
MYCOBACTERIUM  (sub-file)
"BLD",6099,4,63,2,63.39,1,0)
^9.6411^.01^2
"BLD",6099,4,63,2,63.39,1,.01,0)
MYCOBACTERIUM
"BLD",6099,4,63,2,63.39,1,.1,0)
ISOLATE ID
"BLD",6099,4,63,2,63.43,0)
VIRUS  (sub-file)
"BLD",6099,4,63,2,63.43,1,0)
^9.6411^.01^2
"BLD",6099,4,63,2,63.43,1,.01,0)
VIRUS
"BLD",6099,4,63,2,63.43,1,.1,0)
ISOLATE ID
"BLD",6099,4,63,2,63.5,0)
ORDERED TEST  (sub-file)
"BLD",6099,4,63,2,63.5,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.51,0)
ORDERED TEST  (sub-file)
"BLD",6099,4,63,2,63.51,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.52,0)
ORDERED TEST  (sub-file)
"BLD",6099,4,63,2,63.52,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.53,0)
ORDERED TEST  (sub-file)
"BLD",6099,4,63,2,63.53,1,0)
^9.6411^^
"BLD",6099,4,63,2,63.539,0)
MICROBIOLOGY AUDIT  (sub-file)
"BLD",6099,4,63,2,63.539,1,0)
^9.6411^^0
"BLD",6099,4,63,2,63.812,0)
SPECIMEN  (sub-file)
"BLD",6099,4,63,2,63.812,1,0)
^9.6411^.07^2
"BLD",6099,4,63,2,63.812,1,.06,0)
SPECIMEN TOPOGRAPHY
"BLD",6099,4,63,2,63.812,1,.07,0)
COLLECTION SAMPLE
"BLD",6099,4,63,2,63.902,0)
SPECIMEN  (sub-file)
"BLD",6099,4,63,2,63.902,1,0)
^9.6411^.07^2
"BLD",6099,4,63,2,63.902,1,.06,0)
SPECIMEN TOPOGRAPHY
"BLD",6099,4,63,2,63.902,1,.07,0)
COLLECTION SAMPLE
"BLD",6099,4,63,222)
y^n^p^^^^n^^n
"BLD",6099,4,63,223)
I 1
"BLD",6099,4,63,224)

"BLD",6099,4,64,0)
64
"BLD",6099,4,64,2,0)
^9.641^64^1
"BLD",6099,4,64,2,64,0)
WKLD CODE  (File-top level)
"BLD",6099,4,64,2,64,1,0)
^9.6411^63^1
"BLD",6099,4,64,2,64,1,63,0)
MI/AP DATABASE CODE
"BLD",6099,4,64,222)
y^n^p^^^^n^^n
"BLD",6099,4,64,224)

"BLD",6099,4,64.061,0)
64.061
"BLD",6099,4,64.061,222)
y^n^f^^y^^y^o^n
"BLD",6099,4,64.062,0)
64.062
"BLD",6099,4,64.062,222)
y^n^f^^n^^y^o^n
"BLD",6099,4,64.5,0)
64.5
"BLD",6099,4,64.5,2,0)
^9.641^64.53^1
"BLD",6099,4,64.5,2,64.53,0)
LAB TEST  (sub-file)
"BLD",6099,4,64.5,2,64.53,1,0)
^9.6411^2^1
"BLD",6099,4,64.5,2,64.53,1,2,0)
PRINT TEST NAME
"BLD",6099,4,64.5,222)
y^y^p^^^^n^^n
"BLD",6099,4,64.5,224)

"BLD",6099,4,69,0)
69
"BLD",6099,4,69,2,0)
^9.641^69.03^2
"BLD",6099,4,69,2,69.01,0)
SPECIMEN #  (sub-file)
"BLD",6099,4,69,2,69.01,1,0)
^9.6411^21^1
"BLD",6099,4,69,2,69.01,1,21,0)
DATE/TIME RESULTS AVAILABLE
"BLD",6099,4,69,2,69.03,0)
TEST  (sub-file)
"BLD",6099,4,69,2,69.03,1,0)
^9.6411^10^1
"BLD",6099,4,69,2,69.03,1,10,0)
CANCELED BY
"BLD",6099,4,69,222)
y^n^p^^^^n^^n
"BLD",6099,4,69,224)

"BLD",6099,4,69.6,0)
69.6
"BLD",6099,4,69.6,222)
y^n^f^^^^n
"BLD",6099,4,95.4,0)
95.4
"BLD",6099,4,95.4,222)
y^y^f^^^^n
"BLD",6099,4,95.4,223)
I 1
"BLD",6099,4,"APDD",60,60)

"BLD",6099,4,"APDD",60,60,51)

"BLD",6099,4,"APDD",60,60.01)

"BLD",6099,4,"APDD",60,60.01,.01)

"BLD",6099,4,"APDD",60,60.01,9)

"BLD",6099,4,"APDD",60,60.02)

"BLD",6099,4,"APDD",60,60.02,.01)

"BLD",6099,4,"APDD",60,60.03)

"BLD",6099,4,"APDD",60,60.03,.01)

"BLD",6099,4,"APDD",61,61)

"BLD",6099,4,"APDD",61,61,.01)

"BLD",6099,4,"APDD",61,61,2)

"BLD",6099,4,"APDD",61,61,20)

"BLD",6099,4,"APDD",61,61,21)

"BLD",6099,4,"APDD",61,61,22)

"BLD",6099,4,"APDD",61,61.023)

"BLD",6099,4,"APDD",61.2,61.2)

"BLD",6099,4,"APDD",61.2,61.2,.01)

"BLD",6099,4,"APDD",61.2,61.2,2)

"BLD",6099,4,"APDD",61.2,61.2,4)

"BLD",6099,4,"APDD",61.2,61.2,20)

"BLD",6099,4,"APDD",61.2,61.2,21)

"BLD",6099,4,"APDD",61.2,61.2,22)

"BLD",6099,4,"APDD",61.2,61.223)

"BLD",6099,4,"APDD",62,62)

"BLD",6099,4,"APDD",62,62,.01)

"BLD",6099,4,"APDD",62,62,20)

"BLD",6099,4,"APDD",62,62,21)

"BLD",6099,4,"APDD",62,62,22)

"BLD",6099,4,"APDD",62,62.023)

"BLD",6099,4,"APDD",62.06,62.06)

"BLD",6099,4,"APDD",62.06,62.06,1)

"BLD",6099,4,"APDD",62.06,62.06,1.1)

"BLD",6099,4,"APDD",62.06,62.06,5)

"BLD",6099,4,"APDD",62.06,62.06,5.1)

"BLD",6099,4,"APDD",63,63)

"BLD",6099,4,"APDD",63,63,.01)

"BLD",6099,4,"APDD",63,63,14.91)

"BLD",6099,4,"APDD",63,63.00012)

"BLD",6099,4,"APDD",63,63.00013)

"BLD",6099,4,"APDD",63,63.00014)

"BLD",6099,4,"APDD",63,63.02)

"BLD",6099,4,"APDD",63,63.02,.31)

"BLD",6099,4,"APDD",63,63.02,.32)

"BLD",6099,4,"APDD",63,63.02,.33)

"BLD",6099,4,"APDD",63,63.02,.34)

"BLD",6099,4,"APDD",63,63.02,.342)

"BLD",6099,4,"APDD",63,63.02,.345)

"BLD",6099,4,"APDD",63,63.04)

"BLD",6099,4,"APDD",63,63.04,.345)

"BLD",6099,4,"APDD",63,63.05)

"BLD",6099,4,"APDD",63,63.05,.31)

"BLD",6099,4,"APDD",63,63.05,.32)

"BLD",6099,4,"APDD",63,63.05,.33)

"BLD",6099,4,"APDD",63,63.05,.34)

"BLD",6099,4,"APDD",63,63.05,.342)

"BLD",6099,4,"APDD",63,63.05,.345)

"BLD",6099,4,"APDD",63,63.07)

"BLD",6099,4,"APDD",63,63.08)

"BLD",6099,4,"APDD",63,63.08,.31)

"BLD",6099,4,"APDD",63,63.08,.32)

"BLD",6099,4,"APDD",63,63.08,.33)

"BLD",6099,4,"APDD",63,63.08,.34)

"BLD",6099,4,"APDD",63,63.08,.342)

"BLD",6099,4,"APDD",63,63.08,.345)

"BLD",6099,4,"APDD",63,63.09)

"BLD",6099,4,"APDD",63,63.09,.31)

"BLD",6099,4,"APDD",63,63.09,.32)

"BLD",6099,4,"APDD",63,63.09,.33)

"BLD",6099,4,"APDD",63,63.09,.34)

"BLD",6099,4,"APDD",63,63.09,.342)

"BLD",6099,4,"APDD",63,63.09,.345)

"BLD",6099,4,"APDD",63,63.202)

"BLD",6099,4,"APDD",63,63.202,.06)

"BLD",6099,4,"APDD",63,63.202,.07)

"BLD",6099,4,"APDD",63,63.3)

"BLD",6099,4,"APDD",63,63.3,.01)

"BLD",6099,4,"APDD",63,63.3,.1)

"BLD",6099,4,"APDD",63,63.34)

"BLD",6099,4,"APDD",63,63.34,.01)

"BLD",6099,4,"APDD",63,63.34,.1)

"BLD",6099,4,"APDD",63,63.37)

"BLD",6099,4,"APDD",63,63.37,.01)

"BLD",6099,4,"APDD",63,63.37,.1)

"BLD",6099,4,"APDD",63,63.39)

"BLD",6099,4,"APDD",63,63.39,.01)

"BLD",6099,4,"APDD",63,63.39,.1)

"BLD",6099,4,"APDD",63,63.43)

"BLD",6099,4,"APDD",63,63.43,.01)

"BLD",6099,4,"APDD",63,63.43,.1)

"BLD",6099,4,"APDD",63,63.5)

"BLD",6099,4,"APDD",63,63.51)

"BLD",6099,4,"APDD",63,63.52)

"BLD",6099,4,"APDD",63,63.53)

"BLD",6099,4,"APDD",63,63.539)

"BLD",6099,4,"APDD",63,63.812)

"BLD",6099,4,"APDD",63,63.812,.06)

"BLD",6099,4,"APDD",63,63.812,.07)

"BLD",6099,4,"APDD",63,63.902)

"BLD",6099,4,"APDD",63,63.902,.06)

"BLD",6099,4,"APDD",63,63.902,.07)

"BLD",6099,4,"APDD",64,64)

"BLD",6099,4,"APDD",64,64,63)

"BLD",6099,4,"APDD",64.5,64.53)

"BLD",6099,4,"APDD",64.5,64.53,2)

"BLD",6099,4,"APDD",69,69.01)

"BLD",6099,4,"APDD",69,69.01,21)

"BLD",6099,4,"APDD",69,69.03)

"BLD",6099,4,"APDD",69,69.03,10)

"BLD",6099,4,"B",60,60)

"BLD",6099,4,"B",61,61)

"BLD",6099,4,"B",61.2,61.2)

"BLD",6099,4,"B",62,62)

"BLD",6099,4,"B",62.06,62.06)

"BLD",6099,4,"B",63,63)

"BLD",6099,4,"B",64,64)

"BLD",6099,4,"B",64.061,64.061)

"BLD",6099,4,"B",64.062,64.062)

"BLD",6099,4,"B",64.5,64.5)

"BLD",6099,4,"B",69,69)

"BLD",6099,4,"B",69.6,69.6)

"BLD",6099,4,"B",95.4,95.4)

"BLD",6099,6.3)
230
"BLD",6099,"ABPKG")
n
"BLD",6099,"INI")
PRE^LR350A
"BLD",6099,"INID")
y^y^y
"BLD",6099,"INIT")
POST^LR350A
"BLD",6099,"KRN",0)
^9.67PA^779.2^20
"BLD",6099,"KRN",.4,0)
.4
"BLD",6099,"KRN",.401,0)
.401
"BLD",6099,"KRN",.402,0)
.402
"BLD",6099,"KRN",.403,0)
.403
"BLD",6099,"KRN",.5,0)
.5
"BLD",6099,"KRN",.84,0)
.84
"BLD",6099,"KRN",3.6,0)
3.6
"BLD",6099,"KRN",3.8,0)
3.8
"BLD",6099,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",6099,"KRN",3.8,"NM",1,0)
LAB MAPPING^^0
"BLD",6099,"KRN",3.8,"NM","B","LAB MAPPING",1)

"BLD",6099,"KRN",9.2,0)
9.2
"BLD",6099,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",6099,"KRN",9.2,"NM",1,0)
LRCAPFF^^0
"BLD",6099,"KRN",9.2,"NM","B","LRCAPFF",1)

"BLD",6099,"KRN",9.8,0)
9.8
"BLD",6099,"KRN",9.8,"NM",0)
^9.68A^217^182
"BLD",6099,"KRN",9.8,"NM",1,0)
LRXREF^^0^B75229218
"BLD",6099,"KRN",9.8,"NM",2,0)
LRSCT^^0^B28378651
"BLD",6099,"KRN",9.8,"NM",3,0)
LRVRMI1^^0^B34551287
"BLD",6099,"KRN",9.8,"NM",4,0)
LRVRMI2^^0^B34553820
"BLD",6099,"KRN",9.8,"NM",5,0)
LRVRMI3^^0^B17349617
"BLD",6099,"KRN",9.8,"NM",6,0)
LRMIPSZ^^0^B11196257
"BLD",6099,"KRN",9.8,"NM",7,0)
LRMIPSZ1^^0^B49126027
"BLD",6099,"KRN",9.8,"NM",8,0)
LRMIPSZ2^^0^B34660166
"BLD",6099,"KRN",9.8,"NM",9,0)
LRMIPSZ3^^0^B28861527
"BLD",6099,"KRN",9.8,"NM",10,0)
LRMIPSZ4^^0^B32976079
"BLD",6099,"KRN",9.8,"NM",11,0)
LRMIPSZ5^^0^B61501584
"BLD",6099,"KRN",9.8,"NM",12,0)
LRVER^^0^B43503691
"BLD",6099,"KRN",9.8,"NM",17,0)
LRMIEDZ^^0^B6581426
"BLD",6099,"KRN",9.8,"NM",18,0)
LRMIEDZ2^^0^B43535275
"BLD",6099,"KRN",9.8,"NM",19,0)
LR7OGMP^^0^B17939589
"BLD",6099,"KRN",9.8,"NM",20,0)
LR7OSUM1^^0^B83587916
"BLD",6099,"KRN",9.8,"NM",21,0)
LR7OGMG^^0^B17064297
"BLD",6099,"KRN",9.8,"NM",22,0)
LRMIAUD^^0^B1362054
"BLD",6099,"KRN",9.8,"NM",23,0)
LRMIAU1^^0^B2029471
"BLD",6099,"KRN",9.8,"NM",42,0)
LR7OSUM5^^0^B48077281
"BLD",6099,"KRN",9.8,"NM",43,0)
LRWLST1^^0^B81664062
"BLD",6099,"KRN",9.8,"NM",44,0)
LRWLST11^^0^B73046359
"BLD",6099,"KRN",9.8,"NM",45,0)
LRORD^^0^B27336248
"BLD",6099,"KRN",9.8,"NM",46,0)
LR7OSUM2^^0^B38355976
"BLD",6099,"KRN",9.8,"NM",47,0)
LRVR4^^0^B53036474
"BLD",6099,"KRN",9.8,"NM",48,0)
LRVRMI4^^0^B37691501
"BLD",6099,"KRN",9.8,"NM",49,0)
LRVRMI5^^0^B10998053
"BLD",6099,"KRN",9.8,"NM",50,0)
LRMIVER1^^0^B15048312
"BLD",6099,"KRN",9.8,"NM",51,0)
LRVR^^0^B31822971
"BLD",6099,"KRN",9.8,"NM",52,0)
LR7OSUM3^^0^B15244956
"BLD",6099,"KRN",9.8,"NM",53,0)
LRSCTX^^0^B51489941
"BLD",6099,"KRN",9.8,"NM",54,0)
LRAP^^0^B24889097
"BLD",6099,"KRN",9.8,"NM",55,0)
LRAPDA^^0^B88410283
"BLD",6099,"KRN",9.8,"NM",56,0)
LRAPLG1^^0^B161872680
"BLD",6099,"KRN",9.8,"NM",58,0)
LRAPUTL^^0^B143796070
"BLD",6099,"KRN",9.8,"NM",59,0)
LRU^^0^B44711331
"BLD",6099,"KRN",9.8,"NM",62,0)
LRVRAP4^^0^B33201794
"BLD",6099,"KRN",9.8,"NM",64,0)
LR7OFAO^^0^B37607643
"BLD",6099,"KRN",9.8,"NM",65,0)
LRVRMI0^^0^B2697549
"BLD",6099,"KRN",9.8,"NM",66,0)
LRMIPSU^^0^B70736403
"BLD",6099,"KRN",9.8,"NM",67,0)
LRCAPES1^^0^B78998804
"BLD",6099,"KRN",9.8,"NM",68,0)
LRVRA^^0^B28568230
"BLD",6099,"KRN",9.8,"NM",69,0)
LRVR0^^0^B109458597
"BLD",6099,"KRN",9.8,"NM",70,0)
LRMIEDZ4^^0^B2660171
"BLD",6099,"KRN",9.8,"NM",71,0)
LRMIUT^^0^B4291793
"BLD",6099,"KRN",9.8,"NM",72,0)
LRORD1^^0^B23742203
"BLD",6099,"KRN",9.8,"NM",73,0)
LRAPR^^0^B102075847
"BLD",6099,"KRN",9.8,"NM",74,0)
LRUTIL^^0^B42182036
"BLD",6099,"KRN",9.8,"NM",75,0)
LROW3^^0^B12501822
"BLD",6099,"KRN",9.8,"NM",76,0)
LRVERA^^0^B50656389
"BLD",6099,"KRN",9.8,"NM",77,0)
LRVER3^^0^B75732733
"BLD",6099,"KRN",9.8,"NM",78,0)
LRVR3^^0^B71492279
"BLD",6099,"KRN",9.8,"NM",79,0)
LRVRPOC^^0^B82812080
"BLD",6099,"KRN",9.8,"NM",80,0)
LRVRPOCU^^0^B51599484
"BLD",6099,"KRN",9.8,"NM",81,0)
LRRP1^^0^B56529861
"BLD",6099,"KRN",9.8,"NM",82,0)
LRRP2^^0^B61115638
"BLD",6099,"KRN",9.8,"NM",83,0)
LR7OSMZ5^^0^B61988118
"BLD",6099,"KRN",9.8,"NM",84,0)
LR7OSAP^^0^B70117996
"BLD",6099,"KRN",9.8,"NM",85,0)
LR7OSMZU^^0^B17588750
"BLD",6099,"KRN",9.8,"NM",86,0)
LRMIUT1^^0^B6708446
"BLD",6099,"KRN",9.8,"NM",87,0)
LRVER3A^^0^B25488291
"BLD",6099,"KRN",9.8,"NM",88,0)
LRORDB^^0^B46918556
"BLD",6099,"KRN",9.8,"NM",91,0)
LRWU7^^0^B33901774
"BLD",6099,"KRN",9.8,"NM",92,0)
LRGP2^^0^B20133526
"BLD",6099,"KRN",9.8,"NM",93,0)
LRAPR1^^0^B20852920
"BLD",6099,"KRN",9.8,"NM",95,0)
LRAPD1^^0^B22367539
"BLD",6099,"KRN",9.8,"NM",96,0)
LRAPED^^0^B27109913
"BLD",6099,"KRN",9.8,"NM",98,0)
LRAPBS^^0^B9302870
"BLD",6099,"KRN",9.8,"NM",99,0)
LRAPM^^0^B22300887
"BLD",6099,"KRN",9.8,"NM",100,0)
LRAPMRL^^0^B67731027
"BLD",6099,"KRN",9.8,"NM",101,0)
LRAPMRL1^^0^B23860987
"BLD",6099,"KRN",9.8,"NM",102,0)
LRWLST12^^0^B55671661
"BLD",6099,"KRN",9.8,"NM",103,0)
LRWRKLST^^0^B65810954
"BLD",6099,"KRN",9.8,"NM",104,0)
LRAPF^^0^B5527434
"BLD",6099,"KRN",9.8,"NM",105,0)
LRSCTF^^0^B91859854
"BLD",6099,"KRN",9.8,"NM",106,0)
LRMIBUG^^0^B9500545
"BLD",6099,"KRN",9.8,"NM",108,0)
LRX^^0^B71828345
"BLD",6099,"KRN",9.8,"NM",109,0)
LRMISEZ^^0^B11672648
"BLD",6099,"KRN",9.8,"NM",110,0)
LRMISEZB^^0^B12235566
"BLD",6099,"KRN",9.8,"NM",111,0)
LRRSP^^0^B5673218
"BLD",6099,"KRN",9.8,"NM",112,0)
LRVRMI2A^^0^B77056025
"BLD",6099,"KRN",9.8,"NM",113,0)
LRVRMI4A^^0^B95345785
"BLD",6099,"KRN",9.8,"NM",114,0)
LRVRMI1A^^0^B13452364
"BLD",6099,"KRN",9.8,"NM",115,0)
LRMINEW1^^0^B8153364
"BLD",6099,"KRN",9.8,"NM",116,0)
LRSPRPT^^0^B65444483
"BLD",6099,"KRN",9.8,"NM",117,0)
LRMISTF1^^0^B39570376
"BLD",6099,"KRN",9.8,"NM",118,0)
LRAPRES^^0^B184355664
"BLD",6099,"KRN",9.8,"NM",119,0)
LRWLST1A^^0^B15060477
"BLD",6099,"KRN",9.8,"NM",120,0)
LRWU4^^0^B32373640
"BLD",6099,"KRN",9.8,"NM",121,0)
LRAPP^^0^B7507591
"BLD",6099,"KRN",9.8,"NM",122,0)
LRTSTOUT^^0^B163383366
"BLD",6099,"KRN",9.8,"NM",123,0)
LRUTIL1^^0^B18356877
"BLD",6099,"KRN",9.8,"NM",124,0)
LRAPBK^^0^B72642436
"BLD",6099,"KRN",9.8,"NM",125,0)
LRCAPFF^^0^B27176612
"BLD",6099,"KRN",9.8,"NM",126,0)
LRMIAU2^^0^B8206786
"BLD",6099,"KRN",9.8,"NM",127,0)
LRSTUF2^^0^B21119353
"BLD",6099,"KRN",9.8,"NM",128,0)
LRLABLIO^^0^B15144930
"BLD",6099,"KRN",9.8,"NM",129,0)
LRAPPF1^^0^B32286245
"BLD",6099,"KRN",9.8,"NM",130,0)
LRVER5^^0^B147369024
"BLD",6099,"KRN",9.8,"NM",131,0)
LRAPRES1^^0^B66194684
"BLD",6099,"KRN",9.8,"NM",132,0)
LRSCTX1^^0^B48804373
"BLD",6099,"KRN",9.8,"NM",133,0)
LRERT^^0^B38702192
"BLD",6099,"KRN",9.8,"NM",134,0)
LRERT1^^0^B37373031
"BLD",6099,"KRN",9.8,"NM",135,0)
LRVRW^^0^B16901632
"BLD",6099,"KRN",9.8,"NM",136,0)
LRAPCUM^^0^B23321950
"BLD",6099,"KRN",9.8,"NM",137,0)
LRUTIL2^^0^B20508256
"BLD",6099,"KRN",9.8,"NM",138,0)
LRUTIL3^^0^B21135813
"BLD",6099,"KRN",9.8,"NM",139,0)
LR7OB63C^^0^B28532845
"BLD",6099,"KRN",9.8,"NM",140,0)
LR7OB63D^^0^B28748245
"BLD",6099,"KRN",9.8,"NM",141,0)
LR7OSUM6^^0^B14781997
"BLD",6099,"KRN",9.8,"NM",142,0)
LR7OV0^^0^B31803944
"BLD",6099,"KRN",9.8,"NM",143,0)
LRRP^^0^B28641479
"BLD",6099,"KRN",9.8,"NM",144,0)
LR7OSUM4^^0^B20007671
"BLD",6099,"KRN",9.8,"NM",145,0)
LR7OSUM^^0^B15755012
"BLD",6099,"KRN",9.8,"NM",146,0)
LR7OGMC^^0^B33832740
"BLD",6099,"KRN",9.8,"NM",147,0)
LR7OGM^^0^B42661615
"BLD",6099,"KRN",9.8,"NM",148,0)
LRSCTF1^^0^B8364733
"BLD",6099,"KRN",9.8,"NM",149,0)
LREGFR^^0^B30928139
"BLD",6099,"KRN",9.8,"NM",150,0)
LR7OGG^^0^B63370341
"BLD",6099,"KRN",9.8,"NM",151,0)
LR7OF1^^0^B25392448
"BLD",6099,"KRN",9.8,"NM",152,0)
LRSPRPTA^^0^B15274783
"BLD",6099,"KRN",9.8,"NM",153,0)
LRAPBK1^^0^B17043567
"BLD",6099,"KRN",9.8,"NM",154,0)
LRTSTJAM^^0^B30520985
"BLD",6099,"KRN",9.8,"NM",155,0)
LRTSTJM1^^0^B28238574
"BLD",6099,"KRN",9.8,"NM",156,0)
LRTSTSET^^0^B10120516
"BLD",6099,"KRN",9.8,"NM",157,0)
LRTSTJAN^^0^B15648125
"BLD",6099,"KRN",9.8,"NM",158,0)
LRPHSET2^^0^B27648184
"BLD",6099,"KRN",9.8,"NM",159,0)
LR7OMERG^^0^B51143327
"BLD",6099,"KRN",9.8,"NM",160,0)
LRVER1^^0^B33061562
"BLD",6099,"KRN",9.8,"NM",161,0)
LRSRVR6^^0^B34119485
"BLD",6099,"KRN",9.8,"NM",162,0)
LRSRVR5^^0^B45171198
"BLD",6099,"KRN",9.8,"NM",163,0)
LRSRVR8^^0^B248084471
"BLD",6099,"KRN",9.8,"NM",164,0)
LRSRVR^^0^B18215977
"BLD",6099,"KRN",9.8,"NM",165,0)
LRRPL^^0^B138917268
"BLD",6099,"KRN",9.8,"NM",166,0)
LRRPLU^^0^B286239164
"BLD",6099,"KRN",9.8,"NM",167,0)
LR7OSMZ1^^0^B17671319
"BLD",6099,"KRN",9.8,"NM",168,0)
LR7OR2^^0^B40394119
"BLD",6099,"KRN",9.8,"NM",169,0)
LR7OB63^^0^B57006283
"BLD",6099,"KRN",9.8,"NM",170,0)
LRTT5P1^^0^B25453515
"BLD",6099,"KRN",9.8,"NM",171,0)
LR7OS^^0^B192100
"BLD",6099,"KRN",9.8,"NM",172,0)
LRRPLUA^^0^B24542488
"BLD",6099,"KRN",9.8,"NM",173,0)
LR7OSMZ4^^0^B29272550
"BLD",6099,"KRN",9.8,"NM",174,0)
LRACMOVE^^0^B24954137
"BLD",6099,"KRN",9.8,"NM",175,0)
LRAPSNMD^^0^B37542341
"BLD",6099,"KRN",9.8,"NM",176,0)
LRAPFICH^^0^B11962057
"BLD",6099,"KRN",9.8,"NM",177,0)
LRAPQAR^^0^B18456988
"BLD",6099,"KRN",9.8,"NM",178,0)
LRAPTT^^0^B118014265
"BLD",6099,"KRN",9.8,"NM",179,0)
LRAPALRT^^0^B7865668
"BLD",6099,"KRN",9.8,"NM",180,0)
LRMISR1^^0^B5768153
"BLD",6099,"KRN",9.8,"NM",181,0)
LRUEPR^^0^B9595740
"BLD",6099,"KRN",9.8,"NM",182,0)
LR7OV5^^0^B8563542
"BLD",6099,"KRN",9.8,"NM",183,0)
LRAPBR4^^0^B44175433
"BLD",6099,"KRN",9.8,"NM",184,0)
LRMINEW2^^0^B3998581
"BLD",6099,"KRN",9.8,"NM",185,0)
LRAPDSR^^0^B48581707
"BLD",6099,"KRN",9.8,"NM",186,0)
LR7OGMU^^0^B6947212
"BLD",6099,"KRN",9.8,"NM",187,0)
LRMITSPO^^0^B11792474
"BLD",6099,"KRN",9.8,"NM",188,0)
LRCE^^0^B66243304
"BLD",6099,"KRN",9.8,"NM",189,0)
LRWRKLS1^^0^B21972414
"BLD",6099,"KRN",9.8,"NM",190,0)
LRUWLF^^0^B10175468
"BLD",6099,"KRN",9.8,"NM",191,0)
LRAPLG2^^0^B4901786
"BLD",6099,"KRN",9.8,"NM",192,0)
LR7ORB3^^0^B91737672
"BLD",6099,"KRN",9.8,"NM",193,0)
LR7OSAP4^^0^B3951083
"BLD",6099,"KRN",9.8,"NM",198,0)
LRAPRES2^^1^
"BLD",6099,"KRN",9.8,"NM",199,0)
LRUCSR^^0^B10392354
"BLD",6099,"KRN",9.8,"NM",200,0)
LRGV2^^0^B9894517
"BLD",6099,"KRN",9.8,"NM",201,0)
LRUTELL^^0^B1166200
"BLD",6099,"KRN",9.8,"NM",202,0)
LRUDEL^^0^B17685487
"BLD",6099,"KRN",9.8,"NM",203,0)
LRVER4^^0^B82238256
"BLD",6099,"KRN",9.8,"NM",204,0)
LRVR1^^0^B56535395
"BLD",6099,"KRN",9.8,"NM",205,0)
LR7OSMZ2^^0^B44248028
"BLD",6099,"KRN",9.8,"NM",206,0)
LR7OR1^^0^B33990199
"BLD",6099,"KRN",9.8,"NM",207,0)
LRAPTIUP^^0^B34578178
"BLD",6099,"KRN",9.8,"NM",208,0)
LRAPBR1^^0^B131863197
"BLD",6099,"KRN",9.8,"NM",209,0)
LRNIGHT^^0^B6404812
"BLD",6099,"KRN",9.8,"NM",210,0)
LRCENDEL^^0^B45893338
"BLD",6099,"KRN",9.8,"NM",211,0)
LRWU8^^0^B142893179
"BLD",6099,"KRN",9.8,"NM",212,0)
LRWU8A^^0^B118207612
"BLD",6099,"KRN",9.8,"NM",213,0)
LRWU9^^0^B178029023
"BLD",6099,"KRN",9.8,"NM",214,0)
LRWU6^^0^B22920488
"BLD",6099,"KRN",9.8,"NM",215,0)
LRBEBA3^^0^B65375352
"BLD",6099,"KRN",9.8,"NM",216,0)
LRCAPES^^0^B86635853
"BLD",6099,"KRN",9.8,"NM",217,0)
LR7OU64^^0^B21786622
"BLD",6099,"KRN",9.8,"NM","B","LR7OB63",169)

"BLD",6099,"KRN",9.8,"NM","B","LR7OB63C",139)

"BLD",6099,"KRN",9.8,"NM","B","LR7OB63D",140)

"BLD",6099,"KRN",9.8,"NM","B","LR7OF1",151)

"BLD",6099,"KRN",9.8,"NM","B","LR7OFAO",64)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGG",150)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGM",147)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGMC",146)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGMG",21)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGMP",19)

"BLD",6099,"KRN",9.8,"NM","B","LR7OGMU",186)

"BLD",6099,"KRN",9.8,"NM","B","LR7OMERG",159)

"BLD",6099,"KRN",9.8,"NM","B","LR7OR1",206)

"BLD",6099,"KRN",9.8,"NM","B","LR7OR2",168)

"BLD",6099,"KRN",9.8,"NM","B","LR7ORB3",192)

"BLD",6099,"KRN",9.8,"NM","B","LR7OS",171)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSAP",84)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSAP4",193)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSMZ1",167)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSMZ2",205)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSMZ4",173)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSMZ5",83)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSMZU",85)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM",145)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM1",20)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM2",46)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM3",52)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM4",144)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM5",42)

"BLD",6099,"KRN",9.8,"NM","B","LR7OSUM6",141)

"BLD",6099,"KRN",9.8,"NM","B","LR7OU64",217)

"BLD",6099,"KRN",9.8,"NM","B","LR7OV0",142)

"BLD",6099,"KRN",9.8,"NM","B","LR7OV5",182)

"BLD",6099,"KRN",9.8,"NM","B","LRACMOVE",174)

"BLD",6099,"KRN",9.8,"NM","B","LRAP",54)

"BLD",6099,"KRN",9.8,"NM","B","LRAPALRT",179)

"BLD",6099,"KRN",9.8,"NM","B","LRAPBK",124)

"BLD",6099,"KRN",9.8,"NM","B","LRAPBK1",153)

"BLD",6099,"KRN",9.8,"NM","B","LRAPBR1",208)

"BLD",6099,"KRN",9.8,"NM","B","LRAPBR4",183)

"BLD",6099,"KRN",9.8,"NM","B","LRAPBS",98)

"BLD",6099,"KRN",9.8,"NM","B","LRAPCUM",136)

"BLD",6099,"KRN",9.8,"NM","B","LRAPD1",95)

"BLD",6099,"KRN",9.8,"NM","B","LRAPDA",55)

"BLD",6099,"KRN",9.8,"NM","B","LRAPDSR",185)

"BLD",6099,"KRN",9.8,"NM","B","LRAPED",96)

"BLD",6099,"KRN",9.8,"NM","B","LRAPF",104)

"BLD",6099,"KRN",9.8,"NM","B","LRAPFICH",176)

"BLD",6099,"KRN",9.8,"NM","B","LRAPLG1",56)

"BLD",6099,"KRN",9.8,"NM","B","LRAPLG2",191)

"BLD",6099,"KRN",9.8,"NM","B","LRAPM",99)

"BLD",6099,"KRN",9.8,"NM","B","LRAPMRL",100)

"BLD",6099,"KRN",9.8,"NM","B","LRAPMRL1",101)

"BLD",6099,"KRN",9.8,"NM","B","LRAPP",121)

"BLD",6099,"KRN",9.8,"NM","B","LRAPPF1",129)

"BLD",6099,"KRN",9.8,"NM","B","LRAPQAR",177)

"BLD",6099,"KRN",9.8,"NM","B","LRAPR",73)

"BLD",6099,"KRN",9.8,"NM","B","LRAPR1",93)

"BLD",6099,"KRN",9.8,"NM","B","LRAPRES",118)

"BLD",6099,"KRN",9.8,"NM","B","LRAPRES1",131)

"BLD",6099,"KRN",9.8,"NM","B","LRAPRES2",198)

"BLD",6099,"KRN",9.8,"NM","B","LRAPSNMD",175)

"BLD",6099,"KRN",9.8,"NM","B","LRAPTIUP",207)

"BLD",6099,"KRN",9.8,"NM","B","LRAPTT",178)

"BLD",6099,"KRN",9.8,"NM","B","LRAPUTL",58)

"BLD",6099,"KRN",9.8,"NM","B","LRBEBA3",215)

"BLD",6099,"KRN",9.8,"NM","B","LRCAPES",216)

"BLD",6099,"KRN",9.8,"NM","B","LRCAPES1",67)

"BLD",6099,"KRN",9.8,"NM","B","LRCAPFF",125)

"BLD",6099,"KRN",9.8,"NM","B","LRCE",188)

"BLD",6099,"KRN",9.8,"NM","B","LRCENDEL",210)

"BLD",6099,"KRN",9.8,"NM","B","LREGFR",149)

"BLD",6099,"KRN",9.8,"NM","B","LRERT",133)

"BLD",6099,"KRN",9.8,"NM","B","LRERT1",134)

"BLD",6099,"KRN",9.8,"NM","B","LRGP2",92)

"BLD",6099,"KRN",9.8,"NM","B","LRGV2",200)

"BLD",6099,"KRN",9.8,"NM","B","LRLABLIO",128)

"BLD",6099,"KRN",9.8,"NM","B","LRMIAU1",23)

"BLD",6099,"KRN",9.8,"NM","B","LRMIAU2",126)

"BLD",6099,"KRN",9.8,"NM","B","LRMIAUD",22)

"BLD",6099,"KRN",9.8,"NM","B","LRMIBUG",106)

"BLD",6099,"KRN",9.8,"NM","B","LRMIEDZ",17)

"BLD",6099,"KRN",9.8,"NM","B","LRMIEDZ2",18)

"BLD",6099,"KRN",9.8,"NM","B","LRMIEDZ4",70)

"BLD",6099,"KRN",9.8,"NM","B","LRMINEW1",115)

"BLD",6099,"KRN",9.8,"NM","B","LRMINEW2",184)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSU",66)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ",6)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ1",7)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ2",8)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ3",9)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ4",10)

"BLD",6099,"KRN",9.8,"NM","B","LRMIPSZ5",11)

"BLD",6099,"KRN",9.8,"NM","B","LRMISEZ",109)

"BLD",6099,"KRN",9.8,"NM","B","LRMISEZB",110)

"BLD",6099,"KRN",9.8,"NM","B","LRMISR1",180)

"BLD",6099,"KRN",9.8,"NM","B","LRMISTF1",117)

"BLD",6099,"KRN",9.8,"NM","B","LRMITSPO",187)

"BLD",6099,"KRN",9.8,"NM","B","LRMIUT",71)

"BLD",6099,"KRN",9.8,"NM","B","LRMIUT1",86)

"BLD",6099,"KRN",9.8,"NM","B","LRMIVER1",50)

"BLD",6099,"KRN",9.8,"NM","B","LRNIGHT",209)

"BLD",6099,"KRN",9.8,"NM","B","LRORD",45)

"BLD",6099,"KRN",9.8,"NM","B","LRORD1",72)

"BLD",6099,"KRN",9.8,"NM","B","LRORDB",88)

"BLD",6099,"KRN",9.8,"NM","B","LROW3",75)

"BLD",6099,"KRN",9.8,"NM","B","LRPHSET2",158)

"BLD",6099,"KRN",9.8,"NM","B","LRRP",143)

"BLD",6099,"KRN",9.8,"NM","B","LRRP1",81)

"BLD",6099,"KRN",9.8,"NM","B","LRRP2",82)

"BLD",6099,"KRN",9.8,"NM","B","LRRPL",165)

"BLD",6099,"KRN",9.8,"NM","B","LRRPLU",166)

"BLD",6099,"KRN",9.8,"NM","B","LRRPLUA",172)

"BLD",6099,"KRN",9.8,"NM","B","LRRSP",111)

"BLD",6099,"KRN",9.8,"NM","B","LRSCT",2)

"BLD",6099,"KRN",9.8,"NM","B","LRSCTF",105)

"BLD",6099,"KRN",9.8,"NM","B","LRSCTF1",148)

"BLD",6099,"KRN",9.8,"NM","B","LRSCTX",53)

"BLD",6099,"KRN",9.8,"NM","B","LRSCTX1",132)

"BLD",6099,"KRN",9.8,"NM","B","LRSPRPT",116)

"BLD",6099,"KRN",9.8,"NM","B","LRSPRPTA",152)

"BLD",6099,"KRN",9.8,"NM","B","LRSRVR",164)

"BLD",6099,"KRN",9.8,"NM","B","LRSRVR5",162)

"BLD",6099,"KRN",9.8,"NM","B","LRSRVR6",161)

"BLD",6099,"KRN",9.8,"NM","B","LRSRVR8",163)

"BLD",6099,"KRN",9.8,"NM","B","LRSTUF2",127)

"BLD",6099,"KRN",9.8,"NM","B","LRTSTJAM",154)

"BLD",6099,"KRN",9.8,"NM","B","LRTSTJAN",157)

"BLD",6099,"KRN",9.8,"NM","B","LRTSTJM1",155)

"BLD",6099,"KRN",9.8,"NM","B","LRTSTOUT",122)

"BLD",6099,"KRN",9.8,"NM","B","LRTSTSET",156)

"BLD",6099,"KRN",9.8,"NM","B","LRTT5P1",170)

"BLD",6099,"KRN",9.8,"NM","B","LRU",59)

"BLD",6099,"KRN",9.8,"NM","B","LRUCSR",199)

"BLD",6099,"KRN",9.8,"NM","B","LRUDEL",202)

"BLD",6099,"KRN",9.8,"NM","B","LRUEPR",181)

"BLD",6099,"KRN",9.8,"NM","B","LRUTELL",201)

"BLD",6099,"KRN",9.8,"NM","B","LRUTIL",74)

"BLD",6099,"KRN",9.8,"NM","B","LRUTIL1",123)

"BLD",6099,"KRN",9.8,"NM","B","LRUTIL2",137)

"BLD",6099,"KRN",9.8,"NM","B","LRUTIL3",138)

"BLD",6099,"KRN",9.8,"NM","B","LRUWLF",190)

"BLD",6099,"KRN",9.8,"NM","B","LRVER",12)

"BLD",6099,"KRN",9.8,"NM","B","LRVER1",160)

"BLD",6099,"KRN",9.8,"NM","B","LRVER3",77)

"BLD",6099,"KRN",9.8,"NM","B","LRVER3A",87)

"BLD",6099,"KRN",9.8,"NM","B","LRVER4",203)

"BLD",6099,"KRN",9.8,"NM","B","LRVER5",130)

"BLD",6099,"KRN",9.8,"NM","B","LRVERA",76)

"BLD",6099,"KRN",9.8,"NM","B","LRVR",51)

"BLD",6099,"KRN",9.8,"NM","B","LRVR0",69)

"BLD",6099,"KRN",9.8,"NM","B","LRVR1",204)

"BLD",6099,"KRN",9.8,"NM","B","LRVR3",78)

"BLD",6099,"KRN",9.8,"NM","B","LRVR4",47)

"BLD",6099,"KRN",9.8,"NM","B","LRVRA",68)

"BLD",6099,"KRN",9.8,"NM","B","LRVRAP4",62)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI0",65)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI1",3)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI1A",114)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI2",4)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI2A",112)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI3",5)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI4",48)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI4A",113)

"BLD",6099,"KRN",9.8,"NM","B","LRVRMI5",49)

"BLD",6099,"KRN",9.8,"NM","B","LRVRPOC",79)

"BLD",6099,"KRN",9.8,"NM","B","LRVRPOCU",80)

"BLD",6099,"KRN",9.8,"NM","B","LRVRW",135)

"BLD",6099,"KRN",9.8,"NM","B","LRWLST1",43)

"BLD",6099,"KRN",9.8,"NM","B","LRWLST11",44)

"BLD",6099,"KRN",9.8,"NM","B","LRWLST12",102)

"BLD",6099,"KRN",9.8,"NM","B","LRWLST1A",119)

"BLD",6099,"KRN",9.8,"NM","B","LRWRKLS1",189)

"BLD",6099,"KRN",9.8,"NM","B","LRWRKLST",103)

"BLD",6099,"KRN",9.8,"NM","B","LRWU4",120)

"BLD",6099,"KRN",9.8,"NM","B","LRWU6",214)

"BLD",6099,"KRN",9.8,"NM","B","LRWU7",91)

"BLD",6099,"KRN",9.8,"NM","B","LRWU8",211)

"BLD",6099,"KRN",9.8,"NM","B","LRWU8A",212)

"BLD",6099,"KRN",9.8,"NM","B","LRWU9",213)

"BLD",6099,"KRN",9.8,"NM","B","LRX",108)

"BLD",6099,"KRN",9.8,"NM","B","LRXREF",1)

"BLD",6099,"KRN",19,0)
19
"BLD",6099,"KRN",19,"NM",0)
^9.68A^14^14
"BLD",6099,"KRN",19,"NM",1,0)
LRAP VR^^0
"BLD",6099,"KRN",19,"NM",2,0)
LRAPD^^2
"BLD",6099,"KRN",19,"NM",3,0)
LRLIAISON^^2
"BLD",6099,"KRN",19,"NM",4,0)
LRWU7 EDIT^^0
"BLD",6099,"KRN",19,"NM",5,0)
LRMENU^^3
"BLD",6099,"KRN",19,"NM",6,0)
LRCAPFF^^0
"BLD",6099,"KRN",19,"NM",7,0)
LR7O 60-64^^2
"BLD",6099,"KRN",19,"NM",8,0)
LRRP1^^0
"BLD",6099,"KRN",19,"NM",9,0)
LR OUT^^2
"BLD",6099,"KRN",19,"NM",10,0)
LRAC MOVE^^0
"BLD",6099,"KRN",19,"NM",11,0)
LRAC^^2
"BLD",6099,"KRN",19,"NM",12,0)
LR7O PAR USER LIST^^0
"BLD",6099,"KRN",19,"NM",13,0)
LR7O PARAM MENU^^2
"BLD",6099,"KRN",19,"NM",14,0)
LRAP ALERT^^0
"BLD",6099,"KRN",19,"NM","B","LR OUT",9)

"BLD",6099,"KRN",19,"NM","B","LR7O 60-64",7)

"BLD",6099,"KRN",19,"NM","B","LR7O PAR USER LIST",12)

"BLD",6099,"KRN",19,"NM","B","LR7O PARAM MENU",13)

"BLD",6099,"KRN",19,"NM","B","LRAC",11)

"BLD",6099,"KRN",19,"NM","B","LRAC MOVE",10)

"BLD",6099,"KRN",19,"NM","B","LRAP ALERT",14)

"BLD",6099,"KRN",19,"NM","B","LRAP VR",1)

"BLD",6099,"KRN",19,"NM","B","LRAPD",2)

"BLD",6099,"KRN",19,"NM","B","LRCAPFF",6)

"BLD",6099,"KRN",19,"NM","B","LRLIAISON",3)

"BLD",6099,"KRN",19,"NM","B","LRMENU",5)

"BLD",6099,"KRN",19,"NM","B","LRRP1",8)

"BLD",6099,"KRN",19,"NM","B","LRWU7 EDIT",4)

"BLD",6099,"KRN",19.1,0)
19.1
"BLD",6099,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6099,"KRN",101,0)
101
"BLD",6099,"KRN",101,"NM",0)
^9.68A^^
"BLD",6099,"KRN",409.61,0)
409.61
"BLD",6099,"KRN",771,0)
771
"BLD",6099,"KRN",779.2,0)
779.2
"BLD",6099,"KRN",870,0)
870
"BLD",6099,"KRN",8989.51,0)
8989.51
"BLD",6099,"KRN",8989.51,"NM",0)
^9.68A^32^31
"BLD",6099,"KRN",8989.51,"NM",1,0)
LR LABEL PRINTER DEFAULT^^0
"BLD",6099,"KRN",8989.51,"NM",2,0)
LR EGFR METHOD^^0
"BLD",6099,"KRN",8989.51,"NM",3,0)
LR EGFR AGE CUTOFF^^0
"BLD",6099,"KRN",8989.51,"NM",4,0)
LR EGFR RESULT SUPPRESS^^0
"BLD",6099,"KRN",8989.51,"NM",5,0)
LR VER EA VERIFY BY UID^^0
"BLD",6099,"KRN",8989.51,"NM",6,0)
LR VER EM VERIFY BY UID^^0
"BLD",6099,"KRN",8989.51,"NM",7,0)
LRAPRES1 AP ALERT^^0
"BLD",6099,"KRN",8989.51,"NM",8,0)
LR AP REPORT SELECTION^^0
"BLD",6099,"KRN",8989.51,"NM",9,0)
LR AP SNOMED SYSTEM PRINT^^0
"BLD",6099,"KRN",8989.51,"NM",10,0)
LR MAPPING DEFAULT DIRECTORY^^0
"BLD",6099,"KRN",8989.51,"NM",12,0)
LR MAPPING ASK DOMAIN^^0
"BLD",6099,"KRN",8989.51,"NM",13,0)
LR MAPPING DEFAULT FILESPEC^^0
"BLD",6099,"KRN",8989.51,"NM",14,0)
LR MAPPING PURGE DAYS^^0
"BLD",6099,"KRN",8989.51,"NM",15,0)
LR MAPPING MESSAGE MAX RECORDS^^0
"BLD",6099,"KRN",8989.51,"NM",16,0)
LR CH GUI REPORT RIGHT MARGIN^^0
"BLD",6099,"KRN",8989.51,"NM",17,0)
LR MI GUI REPORT RIGHT MARGIN^^0
"BLD",6099,"KRN",8989.51,"NM",18,0)
LR AP GUI REPORT RIGHT MARGIN^^0
"BLD",6099,"KRN",8989.51,"NM",19,0)
LR MI VERIFY DISPLAY PROVIDER^^0
"BLD",6099,"KRN",8989.51,"NM",20,0)
LR ACCESSION DEFAULT COL SAMP^^0
"BLD",6099,"KRN",8989.51,"NM",21,0)
LR ACCESSION DEFAULT LAB TEST^^0
"BLD",6099,"KRN",8989.51,"NM",22,0)
LR ACCESSION DEFAULT SPECIMEN^^0
"BLD",6099,"KRN",8989.51,"NM",23,0)
LR VER DEFAULT PERFORMING LAB^^0
"BLD",6099,"KRN",8989.51,"NM",24,0)
LR AP SURGERY REFERENCE^^0
"BLD",6099,"KRN",8989.51,"NM",25,0)
LR MI VERIFY CPRS ALERT^^0
"BLD",6099,"KRN",8989.51,"NM",26,0)
LR REPORTS FACILITY PRINT^^0
"BLD",6099,"KRN",8989.51,"NM",27,0)
LR MAPPING PROCESSED DIRECTORY^^0
"BLD",6099,"KRN",8989.51,"NM",28,0)
LR ASK PERFORMING LAB AP^^0
"BLD",6099,"KRN",8989.51,"NM",29,0)
LR ASK PERFORMING LAB MICRO^^0
"BLD",6099,"KRN",8989.51,"NM",30,0)
LR MANIFEST DEFLT ACCESSION^^0
"BLD",6099,"KRN",8989.51,"NM",31,0)
LR MANIFEST EXC PREV TEST^^0
"BLD",6099,"KRN",8989.51,"NM",32,0)
LR CH VERIFY CPRS ALERT^^0
"BLD",6099,"KRN",8989.51,"NM","B","LR ACCESSION DEFAULT COL SAMP",20)

"BLD",6099,"KRN",8989.51,"NM","B","LR ACCESSION DEFAULT LAB TEST",21)

"BLD",6099,"KRN",8989.51,"NM","B","LR ACCESSION DEFAULT SPECIMEN",22)

"BLD",6099,"KRN",8989.51,"NM","B","LR AP GUI REPORT RIGHT MARGIN",18)

"BLD",6099,"KRN",8989.51,"NM","B","LR AP REPORT SELECTION",8)

"BLD",6099,"KRN",8989.51,"NM","B","LR AP SNOMED SYSTEM PRINT",9)

"BLD",6099,"KRN",8989.51,"NM","B","LR AP SURGERY REFERENCE",24)

"BLD",6099,"KRN",8989.51,"NM","B","LR ASK PERFORMING LAB AP",28)

"BLD",6099,"KRN",8989.51,"NM","B","LR ASK PERFORMING LAB MICRO",29)

"BLD",6099,"KRN",8989.51,"NM","B","LR CH GUI REPORT RIGHT MARGIN",16)

"BLD",6099,"KRN",8989.51,"NM","B","LR CH VERIFY CPRS ALERT",32)

"BLD",6099,"KRN",8989.51,"NM","B","LR EGFR AGE CUTOFF",3)

"BLD",6099,"KRN",8989.51,"NM","B","LR EGFR METHOD",2)

"BLD",6099,"KRN",8989.51,"NM","B","LR EGFR RESULT SUPPRESS",4)

"BLD",6099,"KRN",8989.51,"NM","B","LR LABEL PRINTER DEFAULT",1)

"BLD",6099,"KRN",8989.51,"NM","B","LR MANIFEST DEFLT ACCESSION",30)

"BLD",6099,"KRN",8989.51,"NM","B","LR MANIFEST EXC PREV TEST",31)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING ASK DOMAIN",12)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING DEFAULT DIRECTORY",10)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING DEFAULT FILESPEC",13)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING MESSAGE MAX RECORDS",15)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING PROCESSED DIRECTORY",27)

"BLD",6099,"KRN",8989.51,"NM","B","LR MAPPING PURGE DAYS",14)

"BLD",6099,"KRN",8989.51,"NM","B","LR MI GUI REPORT RIGHT MARGIN",17)

"BLD",6099,"KRN",8989.51,"NM","B","LR MI VERIFY CPRS ALERT",25)

"BLD",6099,"KRN",8989.51,"NM","B","LR MI VERIFY DISPLAY PROVIDER",19)

"BLD",6099,"KRN",8989.51,"NM","B","LR REPORTS FACILITY PRINT",26)

"BLD",6099,"KRN",8989.51,"NM","B","LR VER DEFAULT PERFORMING LAB",23)

"BLD",6099,"KRN",8989.51,"NM","B","LR VER EA VERIFY BY UID",5)

"BLD",6099,"KRN",8989.51,"NM","B","LR VER EM VERIFY BY UID",6)

"BLD",6099,"KRN",8989.51,"NM","B","LRAPRES1 AP ALERT",7)

"BLD",6099,"KRN",8989.52,0)
8989.52
"BLD",6099,"KRN",8989.52,"NM",0)
^9.68A^3^3
"BLD",6099,"KRN",8989.52,"NM",1,0)
LR USER^^0
"BLD",6099,"KRN",8989.52,"NM",2,0)
LR DOMAIN^^0
"BLD",6099,"KRN",8989.52,"NM",3,0)
LR PKG^^1^
"BLD",6099,"KRN",8989.52,"NM","B","LR DOMAIN",2)

"BLD",6099,"KRN",8989.52,"NM","B","LR PKG",3)

"BLD",6099,"KRN",8989.52,"NM","B","LR USER",1)

"BLD",6099,"KRN",8994,0)
8994
"BLD",6099,"KRN",8994,"NM",0)
^9.68A^^
"BLD",6099,"KRN","B",.4,.4)

"BLD",6099,"KRN","B",.401,.401)

"BLD",6099,"KRN","B",.402,.402)

"BLD",6099,"KRN","B",.403,.403)

"BLD",6099,"KRN","B",.5,.5)

"BLD",6099,"KRN","B",.84,.84)

"BLD",6099,"KRN","B",3.6,3.6)

"BLD",6099,"KRN","B",3.8,3.8)

"BLD",6099,"KRN","B",9.2,9.2)

"BLD",6099,"KRN","B",9.8,9.8)

"BLD",6099,"KRN","B",19,19)

"BLD",6099,"KRN","B",19.1,19.1)

"BLD",6099,"KRN","B",101,101)

"BLD",6099,"KRN","B",409.61,409.61)

"BLD",6099,"KRN","B",771,771)

"BLD",6099,"KRN","B",779.2,779.2)

"BLD",6099,"KRN","B",870,870)

"BLD",6099,"KRN","B",8989.51,8989.51)

"BLD",6099,"KRN","B",8989.52,8989.52)

"BLD",6099,"KRN","B",8994,8994)

"BLD",6099,"PRE")
LR350
"BLD",6099,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",6099,"QUES",0)
^9.62^^0
"BLD",6099,"REQB",0)
^9.611^46^32
"BLD",6099,"REQB",2,0)
LR*5.2*308^2
"BLD",6099,"REQB",4,0)
LR*5.2*334^2
"BLD",6099,"REQB",6,0)
LEX*2.0*41^2
"BLD",6099,"REQB",9,0)
LR*5.2*373^2
"BLD",6099,"REQB",10,0)
HDI*1.0*7^2
"BLD",6099,"REQB",11,0)
LR*5.2*378^2
"BLD",6099,"REQB",12,0)
LR*5.2*218^2
"BLD",6099,"REQB",16,0)
LR*5.2*300^2
"BLD",6099,"REQB",17,0)
LR*5.2*313^2
"BLD",6099,"REQB",18,0)
LR*5.2*323^2
"BLD",6099,"REQB",19,0)
LR*5.2*330^2
"BLD",6099,"REQB",20,0)
LR*5.2*337^2
"BLD",6099,"REQB",21,0)
LR*5.2*339^2
"BLD",6099,"REQB",22,0)
LR*5.2*347^2
"BLD",6099,"REQB",23,0)
LR*5.2*360^2
"BLD",6099,"REQB",24,0)
LR*5.2*361^2
"BLD",6099,"REQB",26,0)
LR*5.2*363^2
"BLD",6099,"REQB",28,0)
LR*5.2*375^2
"BLD",6099,"REQB",29,0)
LR*5.2*384^2
"BLD",6099,"REQB",30,0)
LR*5.2*386^2
"BLD",6099,"REQB",33,0)
LR*5.2*388^2
"BLD",6099,"REQB",34,0)
LR*5.2*392^2
"BLD",6099,"REQB",35,0)
LR*5.2*315^2
"BLD",6099,"REQB",36,0)
LR*5.2*395^2
"BLD",6099,"REQB",38,0)
LR*5.2*402^2
"BLD",6099,"REQB",39,0)
LR*5.2*406^2
"BLD",6099,"REQB",40,0)
LR*5.2*413^2
"BLD",6099,"REQB",41,0)
LR*5.2*415^2
"BLD",6099,"REQB",43,0)
LR*5.2*269^2
"BLD",6099,"REQB",44,0)
LR*5.2*348^2
"BLD",6099,"REQB",45,0)
LR*5.2*352^2
"BLD",6099,"REQB",46,0)
LR*5.2*358^2
"BLD",6099,"REQB","B","HDI*1.0*7",10)

"BLD",6099,"REQB","B","LEX*2.0*41",6)

"BLD",6099,"REQB","B","LR*5.2*218",12)

"BLD",6099,"REQB","B","LR*5.2*269",43)

"BLD",6099,"REQB","B","LR*5.2*300",16)

"BLD",6099,"REQB","B","LR*5.2*308",2)

"BLD",6099,"REQB","B","LR*5.2*313",17)

"BLD",6099,"REQB","B","LR*5.2*315",35)

"BLD",6099,"REQB","B","LR*5.2*323",18)

"BLD",6099,"REQB","B","LR*5.2*330",19)

"BLD",6099,"REQB","B","LR*5.2*334",4)

"BLD",6099,"REQB","B","LR*5.2*337",20)

"BLD",6099,"REQB","B","LR*5.2*339",21)

"BLD",6099,"REQB","B","LR*5.2*347",22)

"BLD",6099,"REQB","B","LR*5.2*348",44)

"BLD",6099,"REQB","B","LR*5.2*352",45)

"BLD",6099,"REQB","B","LR*5.2*358",46)

"BLD",6099,"REQB","B","LR*5.2*360",23)

"BLD",6099,"REQB","B","LR*5.2*361",24)

"BLD",6099,"REQB","B","LR*5.2*363",26)

"BLD",6099,"REQB","B","LR*5.2*373",9)

"BLD",6099,"REQB","B","LR*5.2*375",28)

"BLD",6099,"REQB","B","LR*5.2*378",11)

"BLD",6099,"REQB","B","LR*5.2*384",29)

"BLD",6099,"REQB","B","LR*5.2*386",30)

"BLD",6099,"REQB","B","LR*5.2*388",33)

"BLD",6099,"REQB","B","LR*5.2*392",34)

"BLD",6099,"REQB","B","LR*5.2*395",36)

"BLD",6099,"REQB","B","LR*5.2*402",38)

"BLD",6099,"REQB","B","LR*5.2*406",39)

"BLD",6099,"REQB","B","LR*5.2*413",40)

"BLD",6099,"REQB","B","LR*5.2*415",41)

"DATA",64.061,1,0)
Abcess^ABS^ABS^^0070^^S^from LOINC system list^10
"DATA",64.061,2,0)
Amniotic fluid^AMN^AMN^^0070^^S^from LOINC system list^10
"DATA",64.061,3,0)
Aspirate^ASP^ASP^^0070^^S^^10
"DATA",64.061,4,0)
Basophils^BPH^BPH^^0070^^S^^10
"DATA",64.061,5,0)
Bile fluid^BIFL^BIFL^BIFL^0070^^S^from LOINC system list^10
"DATA",64.061,6,0)
Blood arterial^BLDA^BLDA^^0070^^S^from LOINC system list^10
"DATA",64.061,7,0)
Blood bag^BBL^BBL^^0070^^S^from LOINC system list^10
"DATA",64.061,8,0)
Blood capillary^BLDC^BLDC^^0070^^S^from LOINC system list^10
"DATA",64.061,9,0)
Blood-cord^BLDCO^CBLD^^0070^^S^from LOINC system list^10
"DATA",64.061,10,0)
Blood product unit^BPU^BPU^BPU^0070-0258^^S^from LOINC system list^11
"DATA",64.061,11,0)
Blood venous^BLDV^BLDV^^0070^^S^from LOINC system list^10
"DATA",64.061,11,7,0)
^64.614AV^1^1
"DATA",64.061,11,7,1,0)
70;LAB(61,
"DATA",64.061,12,0)
Bone^BONE^BONE^^0070^^S^from LOINC system list^10
"DATA",64.061,13,0)
Breath (use EXG)^BRTH^BRTH^^0070^^S
"DATA",64.061,14,0)
Bronchial^BRO^BRO^^0070^^S^from LOINC system list^10
"DATA",64.061,15,0)
Burn^BRN^BRN^^0070^^S^from LOINC system list^10
"DATA",64.061,16,0)
Calculus (=Stone)^CALC^CALC^^0070^^S^from LOINC system list^10
"DATA",64.061,17,0)
Cardiac muscle^CDM^CDM^^0070^^S
"DATA",64.061,18,0)
Cannula^CNL^CNL^^0070^^S^from LOINC system list^10
"DATA",64.061,19,0)
Catheter tip^CTP^CTP^^0070^^S
"DATA",64.061,20,0)
Cerebral spinal fluid^CSF^CSF^^0070^^S^from LOINC system list^10
"DATA",64.061,21,0)
Cervical mucus^CVM^CVM^^0070^^S^from LOINC system list^10
"DATA",64.061,22,0)
Cervix^CVX^CVX^^0070^^S^from LOINC system list^10
"DATA",64.061,23,0)
Colostrum^COL^COL^^0070^^S
"DATA",64.061,24,0)
Conjunctiva^CNJT^CNJT^^0070^^S^from LOINC system list^10
"DATA",64.061,25,0)
Curettage^CUR^CUR^^0070^^S
"DATA",64.061,26,0)
Cyst^CYST^CYST^^0070^^S
"DATA",64.061,27,0)
Dialysis fluid^DIAF^DIAF^^0070^^S^from LOINC system list^10
"DATA",64.061,28,0)
Dose med or substance ^DOSE^DOSE^^0070^^S^from LOINC system list^10
"DATA",64.061,29,0)
Drain^DRN^DRN^^0070^^S^from LOINC system list^10
"DATA",64.061,30,0)
Duodenal fluid^DUFL^DUFL^^0070^^S^from LOINC system list^10
"DATA",64.061,31,0)
Ear^EAR^EAR^^0070^^S^from LOINC system list^10
"DATA",64.061,32,0)
Ear wax (cerumen)^EARW^EARW^^0070^^S
"DATA",64.061,33,0)
Electrode^ELT^ELT^^0070^^S
"DATA",64.061,34,0)
Endocardium^ENDC^ENDC^^0070^^S^^10
"DATA",64.061,35,0)
Endometrium^ENDM^ENDM^^0070^^S^from LOINC system list^10
"DATA",64.061,36,0)
Eosinophils^EOS^EOS^^0070^^S
"DATA",64.061,37,0)
Erythrocytes^RBC^RBC^^0070^^S^from LOINC system list^10
"DATA",64.061,38,0)
Eye^EYE^EYE^^0070^^S^from LOINC system list^10
"DATA",64.061,39,0)
Exhaled gas (=breath)^EXG^EXHLD^^0070^^S^from LOINC system list^10
"DATA",64.061,40,0)
Fibroblasts^FIB^FIB^^0070^^S
"DATA",64.061,41,0)
Filter^FLT^FLT^^0070^^S
"DATA",64.061,42,0)
Fistula^FIST^FIST^^0070^^S
"DATA",64.061,43,0)
Body fluid, unsp^FLU^FLU^^0070^^S^from LOINC system list^10
"DATA",64.061,44,0)
Gas^GAS^GAS^^0070^^S^from LOINC system list^10
"DATA",64.061,45,0)
Gastric fluid/contents^GAST^GAST^^0070^^S^from LOINC system list^10
"DATA",64.061,46,0)
Genital^GEN^GEN^^0070^^S^from LOINC system list^10
"DATA",64.061,47,0)
Genital cervix^GENC^GENC^^0070^^S
"DATA",64.061,48,0)
Genital lochia^GENL^GENL^^0070^^S^from LOINC system list^10
"DATA",64.061,49,0)
Genital vaginal^GENV^GENV^^0070^^S^from LOINC system list^10
"DATA",64.061,50,0)
Hair^HAR^HAR^^0070^^S^from LOINC system list
"DATA",64.061,51,0)
Inhaled Gas^IHG^IHG^^0070^^S^from LOINC system list^10
"DATA",64.061,52,0)
Intubation tube^IT^IT^^0070^^S
"DATA",64.061,53,0)
Isolate^ISLT^ISLT^^0070^^S^from LOINC system list^10
"DATA",64.061,54,0)
Lamella^LAM^LAM^^0070^^S
"DATA",64.061,55,0)
Leukocytes^WBC^WBC^^0070^^S^from LOINC system list^10
"DATA",64.061,56,0)
Line^LN^LN^^0070^^S^from LOINC system list^10
"DATA",64.061,57,0)
Line arterial^LNA^LNA^^0070^^S
"DATA",64.061,58,0)
Line venous^LNV^LNV^^0070^^S
"DATA",64.061,59,0)
Liquid NOS^LIQ^LIQ^^0070^^S
"DATA",64.061,60,0)
Lymphocytes^LYM^LYM^^0070^^S
"DATA",64.061,61,0)
Macrophages^MAC^MAC^^0070^^S
"DATA",64.061,62,0)
Marrow (bone)^MAR^MAR^^0070^^S^from LOINC system list^10
"DATA",64.061,63,0)
Meconium^MEC^MEC^^0070^^S^from LOINC system list^10
"DATA",64.061,64,0)
Menstrual blood^MBLD^MBLD^^0070^^S
"DATA",64.061,65,0)
Milk^MLK^MLK^^0070^^S^from LOINC system list^10
"DATA",64.061,66,0)
Breast milk^MILK^MILK^^0070^^S^from LOINC system list^10
"DATA",64.061,67,0)
Nail^NAIL^NAIL^^0070^^S^from LOINC system list^10
"DATA",64.061,68,0)
Nose (nasal passage)^NOS^NOS^^0070^^S^from LOINC system list^10
"DATA",64.061,69,0)
Other^ORH^ORH^^0070^^S^from LOINC system list^10
"DATA",64.061,70,0)
Pancreatic fluid^PAFL^PAFL^^0070^^S
"DATA",64.061,71,0)
Patient^PAT^PAT^^0070^^S^from LOINC system list^11
"DATA",64.061,72,0)
Peritoneal fluid /ascites^PRT^PRT^^0070^^S^from LOINC system list
"DATA",64.061,73,0)
Placenta^PLC^PLC^^0070^^S^from LOINC system list^10
"DATA",64.061,74,0)
Plasma^PLAS^PLAS^^0070^^S^from LOINC system list^10
"DATA",64.061,75,0)
Plasma bag^PLB^PLB^^0070^^S
"DATA",64.061,76,0)
Pleural fluid (thoracentesis fld)^PLR^PLR^^0070^^S^from LOINC system list^10
"DATA",64.061,77,0)
Polymorphonuclear neutrophils^PMN^PMN^^0070^^S
"DATA",64.061,78,0)
Platelet poor plasma^PPP^PPP^^0070^^S^from LOINC system list^10
"DATA",64.061,79,0)
Platelet rich plasma^PRP^PRP^^0070^^S^from LOINC system list^10
"DATA",64.061,80,0)
Pus^PUS^PUS^^0070^^S^from LOINC system list^10
"DATA",64.061,81,0)
Saliva^SAL^SAL^^0070^^S^from LOINC system list
"DATA",64.061,82,0)
Seminal fluid^SMN^SMN^^0070^^S^from LOINC system list^10
"DATA",64.061,83,0)
Serum^SER^SER^^0070^^S^from LOINC system list^10
"DATA",64.061,84,0)
Skin^SKN^SKN^^0070^^S^from LOINC system list^10
"DATA",64.061,85,0)
Skeletal muscle^SKM^SKM^^0070^^S
"DATA",64.061,86,0)
Spermatozoa^SPRM^SPRM^^0070^^S^from LOINC system list^10
"DATA",64.061,87,0)
Sputum^SPT^SPT^^0070^^S^from LOINC system list^10
"DATA",64.061,88,0)
Sputum-coughed^SPTC^SPTC^^0070^^S^from LOINC system list^10
"DATA",64.061,89,0)
Sputum-tracheal aspirate^SPTT^SPTT^^0070^^S^from LOINC system list^10
"DATA",64.061,90,0)
Stone (use CALC)^STON^STON^^0070^^S
"DATA",64.061,91,0)
Stool=Fecal^STL^STL^^0070^^S^from LOINC system list^10
"DATA",64.061,92,0)
Sweat^SWT^SWT^^0070^^S^from LOINC system list
"DATA",64.061,93,0)
Synovial fluid (Joint fluid)^SNV^SNV^^0070^^S^from LOINC system list
"DATA",64.061,94,0)
Tears^TEAR^TEAR^^0070^^S
"DATA",64.061,95,0)
Throat^THRT^THRT^^0070^^S^from LOINC system list^10
"DATA",64.061,96,0)
Thrombocyte (platelet)^THRB^THRB^^0070^^S^from LOINC system list^10
"DATA",64.061,97,0)
Tissue, unspecified^TISS^TISS^^0070^^S^from LOINC system list^10
"DATA",64.061,98,0)
Tissue gall bladder^TISG^TISG^^0070^^S
"DATA",64.061,99,0)
Tissue large intestine^TLGI^TLGI^^0070^^S
"DATA",64.061,100,0)
Tissue lung^TLNG^TLNG^^0070^^S^from LOINC system list^10
"DATA",64.061,101,0)
Tissue placenta^TISPL^TISPL^^0070^^S
"DATA",64.061,102,0)
Tissue small intestine^TSMI^TSMI^^0070^^S
"DATA",64.061,103,0)
Tube, unspecified ^TUB^TUB^^0070^^S
"DATA",64.061,104,0)
Ulcer^ULC^ULC^^0070^^S^from LOINC system list^10
"DATA",64.061,105,0)
Umbilical blood^UMB^UMB^^0070^^S
"DATA",64.061,106,0)
Unknown medicine^UMED^UMED^^0070^^S
"DATA",64.061,107,0)
Urethra^URTH^URTH^^0070^^S^from LOINC system list^10
"DATA",64.061,108,0)
Urine^UR^UR^^0070^^S^from LOINC system list^10
"DATA",64.061,109,0)
Urine clean catch^URC^URC^^0070^^S
"DATA",64.061,110,0)
Urine catheter^URT^URT^^0070^^S
"DATA",64.061,111,0)
Urine sediment^URNS^URNS^^0070^^S^from LOINC system list^10
"DATA",64.061,112,0)
Unknown substance^USUB^USUB^^0070^^S^from LOINC system list^10
"DATA",64.061,113,0)
Vomitus^VOM^VOM^^0070^^S^from LOINC system list^10
"DATA",64.061,114,0)
Whole blood^BLD^BLD^^0070^^S^from LOINC system list
"DATA",64.061,115,0)
Whole body^BDY^BDY^^0070^^S
"DATA",64.061,116,0)
Water^WAT^WAT^^0070^^S^from LOINC system list^10
"DATA",64.061,117,0)
Wick^WICK^WICK^^0070^^S
"DATA",64.061,118,0)
Wound^WND^WND^^0070^^S^from LOINC system list^10
"DATA",64.061,119,0)
Wound abscess^WNDA^WNDA^^0070^^S
"DATA",64.061,120,0)
Wound exudate^WNDE^WNDE^^0070^^S
"DATA",64.061,121,0)
Wound drainage^WNDD^^^^^S^^10
"DATA",64.061,122,0)
Another message part^XXX^XXX^^0070^^S^from LOINC system list^10
"DATA",64.061,123,0)
Tissue ulcer^TISU^TISU^^0070^^S^Tissue ulcer^10
"DATA",64.061,124,0)
Stat^^S^^4.4.6^^P
"DATA",64.061,125,0)
ASAP^^A^^4.4.6^^P
"DATA",64.061,126,0)
Routine^^R^^4.4.6^^P
"DATA",64.061,126,7,0)
^64.614AV^1^1
"DATA",64.061,126,7,1,0)
9;LAB(62.05,
"DATA",64.061,127,0)
Preop^^P^^4.4.6^^P
"DATA",64.061,128,0)
Callback^C^C^^4.4.6^^P
"DATA",64.061,129,0)
Timing Critical^^T^^4.4.6^^P
"DATA",64.061,130,0)
ORDER RECIEVED^^O^O^0123^^E
"DATA",64.061,131,0)
SPECIMEN RECEIVED^^I^^0123^^E
"DATA",64.061,132,0)
PROCEDURE SCHEDULED^^S^^0123^^E
"DATA",64.061,133,0)
SOME RESULTS AVAILABLE^^A^^0123^^E
"DATA",64.061,134,0)
PRELIMINARY^^P^^0123^^E
"DATA",64.061,135,0)
CORRECTED RESULTS^^C^^0123^^E
"DATA",64.061,136,0)
NOT VERIFIED^^R^^0123^^E
"DATA",64.061,137,0)
FINAL RESULTS^^F^^0123^^E
"DATA",64.061,138,0)
ORDER CANCELED^^X^^0123^^E
"DATA",64.061,139,0)
NO ORDER ON RECORD^^Y^^0123^^E
"DATA",64.061,140,0)
NO PATIENT RECORD^NO PATIENT RECORD^Z^^0123^^U
"DATA",64.061,141,0)
DUPLICATE-DO NOT USE^^^^^^E
"DATA",64.061,142,0)
DUPLICATE-DO NOT USE^^^^^^E
"DATA",64.061,143,0)
48H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^^C
"DATA",64.061,144,0)
48H POST DOSE MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,145,0)
BS PRE 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^^C
"DATA",64.061,146,0)
BS PRE DOSE MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,147,0)
26H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^^C
"DATA",64.061,148,0)
26H POST DOSE MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,149,0)
50H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^^C
"DATA",64.061,150,0)
50H POST DOSE MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,151,0)
9.5H POST 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^^^^^^C
"DATA",64.061,152,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,153,0)
Required Shipping Info Updated^^^SM40^^^E
"DATA",64.061,159,0)
Shipment Received^Shipment Received^^^^^U
"DATA",64.061,160,0)
Specimen in process^Specimen in process^^^^^U
"DATA",64.061,161,0)
Results Available^Results Available^^^^^U
"DATA",64.061,162,0)
Results/data Received^Results/data Received^^^^^U
"DATA",64.061,163,0)
Results Stored^Results Stored^^^^^U
"DATA",64.061,164,0)
Results Accepted^Results Accepted^^^^^U
"DATA",64.061,165,0)
In-Transit^In-Transit^^^^^U
"DATA",64.061,166,0)
Specimen Rejected^Specimen Rejected^^^^^U
"DATA",64.061,167,0)
Timing Critical Seconds^^TS^^4.4.6^^P
"DATA",64.061,168,0)
Timing Critical Minutes^^TM^^4.4.6^^P
"DATA",64.061,169,0)
Timing Critical Hours^^TH^^4.4.6^^P
"DATA",64.061,170,0)
Timing Critical Days^^TD^^4.4.6^^P
"DATA",64.061,171,0)
Timing Critical Week^^TW^^4.4.6^^P
"DATA",64.061,172,0)
Timing Critical Month^^TL^^4.4.6^^P
"DATA",64.061,174,0)
Manifest cancelled^^^SM00^^^E
"DATA",64.061,175,0)
Manifest created^^^SM01^^^E
"DATA",64.061,176,0)
Manifest open^^^SM02^^^E
"DATA",64.061,177,0)
Manifest building^^^SM03^^^E
"DATA",64.061,178,0)
Manifest closed^^^SM04^^^E
"DATA",64.061,179,0)
Manifest shipped to host facility^^^SM05^^^E
"DATA",64.061,180,0)
Manifest transmitted to host facility^^^SM06^^^E
"DATA",64.061,181,0)
Manifest received by host facility^^^SM07^^^E
"DATA",64.061,182,0)
Test added^^^SM50^^^E
"DATA",64.061,183,0)
Test removed^^^SM51^^^E
"DATA",64.061,184,0)
Test did not ship^^^SM52^^^E
"DATA",64.061,185,0)
Test shipped^^^SM53^^^E
"DATA",64.061,186,0)
Test not received^^^SM54^^^E
"DATA",64.061,187,0)
Test received^^^SM55^^^E
"DATA",64.061,188,0)
Test received/no order^^^SM56^^^E
"DATA",64.061,189,0)
Test damaged in shipment^^^SM57^^^E
"DATA",64.061,190,0)
Improper shipping condition^^^SM58^^^E
"DATA",64.061,191,0)
Incorrect specimen type^^^SM59^^^E
"DATA",64.061,192,0)
Quantity not sufficient^^^SM60^^^E
"DATA",64.061,193,0)
Results received^^^SM70^^^E
"DATA",64.061,194,0)
Testing completed^^^SM71^^^E
"DATA",64.061,195,0)
10*10^/10*10^^^^NumberNumber^M^TenGiga^^8^U
"DATA",64.061,196,0)
10*2^/10*2^^^^NumberNumber^M^Hecta^^8^U
"DATA",64.061,197,0)
10*3/l^10*3/l^^^^NumberConcentration^M^ThousandPerLiter^^8^U
"DATA",64.061,198,0)
10*3/ml^10*3/ml^^^^NumberConcentration^M^ThousandPerMilliter^^8^U
"DATA",64.061,199,0)
10*3^10*3^^^^Multiplier^M^Thousand^^8^U
"DATA",64.061,200,0)
10*6/l^10*6/l^^^^NumberConcentration^M^MillionPerLiter^^8^U
"DATA",64.061,201,0)
a^a^^^^ElectricalCurrent^M^Amperes
"DATA",64.061,202,0)
ABR^ABR^^^^Arbitrary^M^AntibodyResponseUnits
"DATA",64.061,203,0)
AHFU^AHFU^^^^Arbitrary^M^AmericanHospitalFormularyUnit
"DATA",64.061,204,0)
atm^atm^^^^Pressure^M^Atmospheres
"DATA",64.061,205,0)
bar^bar^^^^Pressure^M^Bars
"DATA",64.061,206,0)
cal^cal^^^^Energy^M^Calories
"DATA",64.061,207,0)
Cal^CAL^^^^Energy^M^NutritionCalories
"DATA",64.061,208,0)
C^C^^^^Temperature^M^DegreeCelsius^^8^U
"DATA",64.061,209,0)
CFU^CFU^^^^Arbitrary^M^ColonyformingUnits^^8^U
"DATA",64.061,210,0)
CFU/ml^CFU/ml^^^^m^M^ColonyFormingUnitsPerMill^^8^U
"DATA",64.061,211,0)
cg^cg^^^^SIMass^M^Centigrams^^1^M
"DATA",64.061,212,0)
cm^cm^^^^SILength^M^Centimeters^^2^L
"DATA",64.061,213,0)
cmH2O^/cmH2O^^^^NumberPressure^M^CentimeterOfWater^^3^V
"DATA",64.061,215,0)
cup^cup^^^^EnglishVolume^M^Cups
"DATA",64.061,216,0)
d^d^^^^Time^M^Days^^5^T
"DATA",64.061,217,0)
dg^dg^^^^SIMass^M^Decigrams^^1^M
"DATA",64.061,218,0)
dl^dl^^^^SIVolume^M^Deciliters^^3^V
"DATA",64.061,219,0)
dm^dm^^^^SILength^M^Decimeters^^2^L
"DATA",64.061,220,0)
eq^eq^^^^Substance^M^Equivalents
"DATA",64.061,221,0)
eq/l^eq/l^^^^SubstanceConcentration^M^EquivalentsPerLiter^^8^U
"DATA",64.061,222,0)
erg^erg^^^^Energy^M^Ergs
"DATA",64.061,223,0)
eV^eV^^^^Energy^M^ElectronVolts
"DATA",64.061,224,0)
F^F^^^^Temperature^M^DegreeFahrenheit^^8^U
"DATA",64.061,225,0)
fg^fg^^^^SIMass^M^Fentograms^^1^M
"DATA",64.061,226,0)
fl oz^fl soz^^^^EnglishVolume^M^FluidOunces^^3^V
"DATA",64.061,227,0)
fl^fl^^^^SIVolume^M^Fentoliters^^3^V
"DATA",64.061,228,0)
fm^fm^^^^SiLength^M^Fentometers^^2^L
"DATA",64.061,229,0)
fmol/mg^fmol/mg^^^^SubstanceContent^M^FemtomolesPerMilligram^^8^U
"DATA",64.061,230,0)
ft^ft^^^^EnglishLength^M^Feet^^2^L
"DATA",64.061,231,0)
ftm^ftm^^^^EnglishLength^M^Fathoms^^2^L
"DATA",64.061,232,0)
gal^gal^^^^EnglishVolume^M^Gallons^^3^V
"DATA",64.061,233,0)
g/dl^g/dl^^^^MassConcentration^M^GramsPerDeciliter^^8^U
"DATA",64.061,234,0)
g^g^^^^Mass^M^Gram^^1^M
"DATA",64.061,235,0)
g/hr^g/hr^^^^MassRate^M^GramsPerHour^^8^U
"DATA",64.061,236,0)
g/l^g/l^^^^MassConcentration^M^GramsPerLiter^^8^U
"DATA",64.061,238,0)
gr^gr^^^^EnglishMass^M^Grains^^1^M
"DATA",64.061,239,0)
gtts^gtts^^^^ImpreciseVolume^M^Drops^^3^V
"DATA",64.061,240,0)
hr^hr^^^^Time^M^Hour^^5^T
"DATA",64.061,241,0)
in^in^^^^EnglishLength^M^Inches^^2^L
"DATA",64.061,242,0)
IU^/IU^^^^NumberArbitrary^M^InternationalUnit^^8^U
"DATA",64.061,243,0)
IU/l^IU/l^^^^ArbitraryConcentration^M^InternationalUnitsPerLiter^^8^U
"DATA",64.061,244,0)
IU/ml^IU/ml^^^^ArbitraryConcentration^M^InternationalUnits/Milliliter^^8^U
"DATA",64.061,246,0)
J^J^^^^Energy^M^Joules
"DATA",64.061,247,0)
K^K^^^^Temperature^M^DegreeKelvin^^8^U
"DATA",64.061,248,0)
kg^kg^^^^SIMass^M^Kilograms^^1^M
"DATA",64.061,249,0)
km^km^^^^SILength^M^Kilometers^^2^L
"DATA",64.061,250,0)
lb^lb^^^^EnglishMass^M^Pounds^^1^M
"DATA",64.061,251,0)
l/hr^l/hr^^^^VolumeRate^M^LitersPerHour^^8^U
"DATA",64.061,252,0)
l^/l^^^^NumberConcentration^M^PerLiter^^3^V
"DATA",64.061,253,0)
l/min^l/min^^^^VolumeRate^M^LitersPerMinute^^8^U
"DATA",64.061,255,0)
ma^ma^^^^ElectricalCurrent^M^Milliamperes
"DATA",64.061,256,0)
mceq/l^mceq/l^^^^SubstanceConcentration^M^MicroequivalentsPerLiter^^8^U
"DATA",64.061,257,0)
mcg/24hr^mcg/24hr^^^^mcg/24hr^M^MicrogramsPerDay^^8^U
"DATA",64.061,258,0)
mcg/dl^mcg/dl^^^^MassConcentration^M^MicrogramsPerDeciliter^^8^U
"DATA",64.061,259,0)
mcg/gm^mcg/gm^^^^MassContent^M^MicrogramsPerGram^^8^U
"DATA",64.061,260,0)
mcg/kg/min^mcg/dl/min^^^^MassContentRate^M^MicrogramsPerKilogram/Minute^^8^U
"DATA",64.061,261,0)
mcg/l^mcg/l^^^^MassConcentration^M^MicrogramsPerLiter^^8^U
"DATA",64.061,262,0)
mcg^mcg^^^^SIMass^M^Micrograms^^1^M
"DATA",64.061,263,0)
mcg/min^mcg/min^^^^MassRate^M^MicrogramsPerMinute^^8^U
"DATA",64.061,264,0)
mcg/ml^mcg/ml^^^^MassConcentration^M^MicrogramPerMilliliter^^8^U
"DATA",64.061,265,0)
mcl^mcl^^^^SIVolume^M^Microliters^^3^V
"DATA",64.061,266,0)
mcmol/l^mcmol/l^^^^SubstanceConcentration^M^MicromolesPerLiter^^8^U
"DATA",64.061,267,0)
mcs^mcs^^^^Time^M^Microseconds^^5^T
"DATA",64.061,268,0)
mcU/ml^mcU/ml^^^^ArbitraryConcentration^M^MicroUnitsPerMilliliter^^8^U
"DATA",64.061,269,0)
meq/hr^meq/hr^^^^SubstanceRate^M^MilliequivalentPerHour^^8^U
"DATA",64.061,270,0)
meq/l^meq/l^^^^SubstanceConcentration^M^MilliequivalentPerLiter^^8^U
"DATA",64.061,271,0)
meq^meq^^^^Substance^M^Melliequivalent
"DATA",64.061,272,0)
mg/24hr^mg/24hr^^^^MassRate^M^MilligramPerDay^^8^U
"DATA",64.061,273,0)
mg/2hr^mg/2hr^^^^MassRate^M^MilligramsPerTwoHours^^8^U
"DATA",64.061,274,0)
mg/dl^mg/dl^^^^MassConcentration^M^MilligramsPerDeciliter^^8^U
"DATA",64.061,275,0)
mg/gm^mg/gm^^^^MassContent^M^MilligramsPerGram^^8^U
"DATA",64.061,276,0)
mg/hr^mg/hr^^^^MassRate^M^MilligramsPerHour^^8^U
"DATA",64.061,277,0)
mg/kg/hr^mg/kg/hr^^^^MassContentRate^M^MillogramsPerKilogramPerHour^^6^R
"DATA",64.061,278,0)
mg/l^mg/l^^^^MassConcentration^M^MilligramsPerLiter^^8^U
"DATA",64.061,279,0)
mg^/mg^^^^Mass^M^Milligram^^1^M
"DATA",64.061,280,0)
mg/min^mg/min^^^^MassRate^M^MilligramsPerMinute^^8^U
"DATA",64.061,281,0)
mg/ml^mg/ml^^^^MassConcentration^M^MilligramsPerMilliliter^^8^U
"DATA",64.061,283,0)
min^/min^^^^Time^M^Minute^^5^T
"DATA",64.061,285,0)
mi^mi^^^^EnglishLength^M^StatuteMiles^^2^L
"DATA",64.061,286,0)
mIU/l^mIU/l^^^^ArbitraryConcentration^M^MilliInternationUnits/Liter^^8^U
"DATA",64.061,287,0)
ml/hr^ml/hr^^^^VolumeRate^M^MillilitersPerHour^^8^U
"DATA",64.061,288,0)
ml/kg^mg/kg^^^^VolumeRate^M^MillilitersPerKilogram^^8^U
"DATA",64.061,289,0)
ml^ml^^^^Volume^M^Milliliter^^3^V
"DATA",64.061,290,0)
ml/min^ml/min^^^^VolumeRate^M^MillitersPerMinute^^8^U
"DATA",64.061,292,0)
m^m^^^^SILength^M^Meters^^2^L
"DATA",64.061,293,0)
mmH2O^mmH2O^^^^Pressure^M^MillimetersOfWater^^8^U
"DATA",64.061,294,0)
mmHg^mmHg^^^^Pressure^M^MillimetersOfMercury
"DATA",64.061,295,0)
mm/hr^mm/hr^^^^Velocity^M^MillimetersPerHour^^8^U
"DATA",64.061,296,0)
mm^mm^^^^SILength^M^Millimeters^^2^L
"DATA",64.061,297,0)
mmol/kg^mmol/kg^^^^SubstanceContent^M^MillimolesPerKilogram^^8^U
"DATA",64.061,298,0)
mmol/l^mmol/l^^^^SubstanceConcentration^M^MillimolesPerLiter^^8^U
"DATA",64.061,299,0)
mmol^mmol^^^^Substance^M^Millimoles
"DATA",64.061,300,0)
mmol/min^mmol/min^^^^SubstanceRate^M^MillimolesPerMinute^^8^U
"DATA",64.061,301,0)
mmol/ml^mmol/ml^^^^SubstanceConcentration^M^MicromolesPerMilliliter^^8^U
"DATA",64.061,302,0)
mol/l^mol/l^^^^SubstanceConcentration^M^MolesPerLiter^^8^U
"DATA",64.061,303,0)
mol^mol^^^^Substance^M^Moles
"DATA",64.061,304,0)
mOsm/kg^mOsm/kg^^^^SubstanceContent^M^MilliosmolesPerKilogram^^8^U
"DATA",64.061,305,0)
ms^ms^^^^Time^M^Milliseconds^^5^T
"DATA",64.061,306,0)
mth^mth^^^^Time^M^Months^^5^T
"DATA",64.061,307,0)
mU/g^mU/g^^^^Arbitrarycontent^M^MilliunitsPerGram^^8^U
"DATA",64.061,308,0)
mu^mu^^^^Arbitrary^M^ThousandUnits
"DATA",64.061,309,0)
mv^mv^^^^ElectricalPotential^M^Millivolts
"DATA",64.061,310,0)
n mile^m mile^^^^EnglishLength^M^NauticalMiles^^2^L
"DATA",64.061,311,0)
ng/24hr^ng/24hr^^^^MassRate^M^NanogramsPerDay^^8^U
"DATA",64.061,312,0)
ng/dl^ng/dl^^^^MassConcentration^M^NanogramsPerDeciliter^^8^U
"DATA",64.061,313,0)
ng/ml^ng/ml^^^^MassConcentration^M^NanogramsPerMilliliter^^8^U
"DATA",64.061,314,0)
ng^ng^^^^SIMass^M^Nanograms^^1^M
"DATA",64.061,315,0)
nl^nl^^^^SIVolume^M^Nanoliters^^3^V
"DATA",64.061,316,0)
nm^nm^^^^SILength^M^Nanometers^^2^L
"DATA",64.061,317,0)
nmol/l^nmol/l^^^^SubstanceConcentration^M^NanomolesPerLiter^^8^U
"DATA",64.061,318,0)
ns/s/l^ns/s/l^^^^VelocityConcentration^M^NanometersPerSecondPerLiter^^6^R
"DATA",64.061,319,0)
N^N^^^^Force^M^Newtons
"DATA",64.061,320,0)
oz^oz^^^^EnglishMass^M^Ounces^^3^V
"DATA",64.061,321,0)
Pa^Pa^^^^Pressure^M^Pascals
"DATA",64.061,322,0)
pc^pc^^^^SILength^M^Picometers^^2^L
"DATA",64.061,323,0)
Percent^%^^^^PerCent^M^Percent^^8^U
"DATA",64.061,324,0)
pg/ml^pg/ml^^^^MassConcentration^M^PicogramsPerMilliliter^^8^U
"DATA",64.061,325,0)
pg^pg^^^^SIMass^M^Picograms^^1^M
"DATA",64.061,326,0)
pH^pH^^^^ExponentialQuantity^M^pHUnits^^8^U
"DATA",64.061,327,0)
pl^pl^^^^SIVolume^M^Picoliters^^3^V
"DATA",64.061,328,0)
pmol/l^pmol/l^^^^SubstanceConcentration^M^PicomolesPerLiter^^8^U
"DATA",64.061,329,0)
ppb^ppb^^^^MassConcentration^M^PartsPerBillion^^8^U
"DATA",64.061,330,0)
ppm^ppm^^^^MassConcentration^M^PartsPerMillion^^8^U
"DATA",64.061,331,0)
pt^pt^^^^EnglishVolume^M^Pints^^3^V
"DATA",64.061,332,0)
qt^qt^^^^EnglishVolume^M^Quarts^^3^V
"DATA",64.061,333,0)
s^s^^^^Time^M^Seconds^^5^T
"DATA",64.061,334,0)
sprays^sprays^^^^ImpreciseVolume^M^PharmacySprays
"DATA",64.061,335,0)
sq cm^sq cm^^^^SIArea^M^SquareCentermeters^^3^V
"DATA",64.061,336,0)
sq ft^sq ft^^^^EnglishArea^M^SquareFeet^^3^V
"DATA",64.061,337,0)
sq in^sq in^^^^EnglishArea^M^SquareInches^^3^V
"DATA",64.061,338,0)
sq mm^sq mm^^^^SIArea^M^SquareMillimeters^^3^V
"DATA",64.061,339,0)
sq m^sq m^^^^SIArea^M^SquareMeters^^3^V
"DATA",64.061,340,0)
sq yd^sq yd^^^^EnglishArea^M^SquareYards^^3^V
"DATA",64.061,342,0)
t^t^^^^SIMass^M^MetricTons^^5^T
"DATA",64.061,343,0)
tn^tn^^^^EnglishMass^M^Tons^^1^M
"DATA",64.061,344,0)
Torr^Torr^^^^Pressure^M^Torrs
"DATA",64.061,345,0)
tr oz^tr oz^^^^EnglishMass^M^TroyOunces^^1^M
"DATA",64.061,346,0)
U/g^U/g^^^^ArbitraryContent^M^UnitsPerGram^^8^U
"DATA",64.061,347,0)
um^um^^^^SILength^M^Micrometers^^2^L
"DATA",64.061,348,0)
unit^unit^^^^Arbitrary^M^PhysicalUnit^^8^U
"DATA",64.061,350,0)
units/hr^units/hr^^^^ArbitraryRate^M^UnitsPerHour^^8^U
"DATA",64.061,351,0)
units/l^units/l^^^^ArbitraryConcentration^M^UnitsPerLiter^^8^U
"DATA",64.061,352,0)
units/min^units/min^^^^ArbitraryRate^M^UnitsPerMinute^^8^U
"DATA",64.061,353,0)
unit/ml^unit/ml^^^^ArbitraryConcentration^M^UnitsPerMilliliter^^8^U
"DATA",64.061,354,0)
v^v^^^^ElecticalPotential^M^Volts
"DATA",64.061,355,0)
wk^wk^^^^Time^M^Weeks^^5^T
"DATA",64.061,356,0)
yd^ys^^^^EnglishLength^M^Yards^^2^L
"DATA",64.061,357,0)
yr^yr^^^^Time^M^Years^^5^T
"DATA",64.061,358,0)
Test deleted from accession^^^SM61^^^E
"DATA",64.061,359,0)
Accession deleted^^^SM62^^^E
"DATA",64.061,360,0)
Saturday^^SAT^SAT^0267^^G
"DATA",64.061,361,0)
Sunday^^SUN^SUN^0267^^G
"DATA",64.061,362,0)
Monday^^MON^MON^0267^^G
"DATA",64.061,363,0)
Tuesday^^TUE^TUE^0267^^G
"DATA",64.061,364,0)
Wednesday^^WED^WED^0267^^G
"DATA",64.061,365,0)
Thursday^^THU^THU^0267^^G
"DATA",64.061,366,0)
Friday^^FRI^FRI^0267^^G
"DATA",64.061,367,0)
Urine 24Hr^UA24HR^^UA24HR^^^S
"DATA",64.061,368,0)
Urine Timed^^^UAT^^^S
"DATA",64.061,369,0)
Random^RANDOM^RANDOM^RANDOM^0256^^S^^^5^T
"DATA",64.061,370,0)
Baseline^BS^BS^BS^0256^^S
"DATA",64.061,371,0)
Peak^PEAK^PEAK^PEAK^0256^^S^^^5^T
"DATA",64.061,372,0)
Trough^TROUGH^TROUGH^TROUGH^0256^^S^^^5^T
"DATA",64.061,373,0)
1 min^1M^1M^1M^0256^^S^^^5^T
"DATA",64.061,374,0)
2 min^2M^2M^2M^0256^^S^^^5^T
"DATA",64.061,375,0)
3 mins^3M^3M^3M^0256^^S^^^5^T
"DATA",64.061,376,0)
4 mins^4M^4M^4M^0256^^S^^^5^T
"DATA",64.061,377,0)
5 mins^5M^5M^5M^0256^^S^^^5^T
"DATA",64.061,378,0)
6 mins^6M^6M^6M^0256^^S^^^5^T
"DATA",64.061,379,0)
7 mins^7M^7M^7M^0256^^S^^^5^T
"DATA",64.061,380,0)
8 mins^8M^8M^8M^0256^^S^^^5^T
"DATA",64.061,381,0)
9 mins^9M^9M^9M^0256^^S^^^5^T
"DATA",64.061,382,0)
10 months^10MO^10M^10M^0256^^S^^^5^T
"DATA",64.061,383,0)
15 mins^15M^15M^15M^0256^^S^^^5^T
"DATA",64.061,384,0)
20 mins^20M^20M^20M^0256^^S^^^5^T
"DATA",64.061,385,0)
25 mins^25M^25M^25M^0256^^S^^^5^T
"DATA",64.061,386,0)
30 mins^30M^30M^30M^0256^^S^^^5^T
"DATA",64.061,387,0)
1 hour^1H^1H^1H^0256^^S^^^5^T
"DATA",64.061,388,0)
2 hours^2H^2H^2H^0256^^S^^^5^T
"DATA",64.061,389,0)
2.5 hours^2.5H^2.5H^2.5H^0256^^S^^^5^T
"DATA",64.061,390,0)
3 hours^3H^3H^3H^0256^^S^^^5^T
"DATA",64.061,391,0)
4 hours^4H^4H^4H^0256^^S^^^5^T
"DATA",64.061,392,0)
5 hours^5H^5H^5H^0256^^S^^^5^T
"DATA",64.061,393,0)
6 hours^6H^6H^6H^0256^^S^^^5^T
"DATA",64.061,394,0)
7 hours^7H^7H^7H^0256^^S^^^5^T
"DATA",64.061,395,0)
8 hours^8H^8H^8H^0256^^S^^^5^T
"DATA",64.061,396,0)
8 hr Shift^8HRSH^8H SHIFT^8H SHIFT^0256^^S
"DATA",64.061,397,0)
12 hours^12H^12H^12H^0256^^S^^^5^T
"DATA",64.061,398,0)
24 hours^24H^24H^24H^0256^^S^^^5^T
"DATA",64.061,399,0)
2 days^2D^2D^2H^0256^^S^^^5^T
"DATA",64.061,400,0)
3 days^3D^3D^3D^0256^^S^^^5^T
"DATA",64.061,401,0)
4 days^4D^4D^4D^0256^^S^^^5^T
"DATA",64.061,402,0)
5 days^5D^5D^5D^0256^^S^^^5^T
"DATA",64.061,403,0)
6 days^6D^6D^6D^0256^^S^^^5^T
"DATA",64.061,404,0)
7 days^7D^7D^7D^0256^^S^^^5^T
"DATA",64.061,405,0)
1 week^1W^1W^1W^0256^^S^^^5^T
"DATA",64.061,406,0)
10 days^10D^10D^10D^0256^^S^^^5^T
"DATA",64.061,407,0)
2 weeks^2W^2W^2W^0256^^S^^^5^T
"DATA",64.061,408,0)
3 weeks^3W^3W^3W^0256^^S^^^5^T
"DATA",64.061,409,0)
4 weeks^4W^4W^4W^0256^^S^^^5^T
"DATA",64.061,410,0)
1 month^1MO^1L^1L^0256^^S^^^5^T
"DATA",64.061,411,0)
2 months^2MO^2L^2L^0256^^S^^^5^T
"DATA",64.061,412,0)
3 months^3MO^3L^3L^0256^^S^^^5^T
"DATA",64.061,413,0)
Fasting^FS^CFST^CFST^0257^^S
"DATA",64.061,414,0)
Exercise^EXERC^EXCZ^EXCZ^0257^^S
"DATA",64.061,415,0)
No Fluid^NO FLD^FFST^FFST^0257^^S
"DATA",64.061,416,0)
Control^CONTROL^CONTROL^CONTROL^0258^^S^from LOINC system list^11
"DATA",64.061,417,0)
Donor^DONOR^DONOR^DONOR^0258^^S^from LOINC system list^11
"DATA",64.061,418,0)
Volume^^VOL^VOL^0254^^M
"DATA",64.061,419,0)
Temperature^^TEMP^TEMP^0254^^M
"DATA",64.061,420,0)
Titer^TITR^TITR^TITR^0254^^M^^^8^U
"DATA",64.061,421,0)
Susceptibility^^SUSC^SUSC^0254^^M^Susceptibility^7
"DATA",64.061,422,0)
Length^^LEN^LEN^0254^^M
"DATA",64.061,423,0)
Density^^DEN^DEN^0254^^M
"DATA",64.061,424,0)
Mass^^MASS^MASS^0254^^M^Weight
"DATA",64.061,425,0)
Weight^^^WT^^^M
"DATA",64.061,426,0)
Nursing Unit^^N^N^0260^^G
"DATA",64.061,427,0)
Room^^R^R^0260^^G
"DATA",64.061,428,0)
Bed^^B^B^0260^^G
"DATA",64.061,429,0)
Exam Room^^E^E^0260^^G
"DATA",64.061,430,0)
Operating Room^^O^O^0256^^G
"DATA",64.061,431,0)
Clinc^^C^C^0260^^G
"DATA",64.061,432,0)
Add order^^A^A^0065^^E
"DATA",64.061,433,0)
Reflex Order^^G^G^0065^^E
"DATA",64.061,434,0)
Lab Collect^^L^L^0065^^E
"DATA",64.061,435,0)
Ward Collect^^O^O^0065^^E
"DATA",64.061,436,0)
Pending Specimen^^P^P^0065^^E
"DATA",64.061,437,0)
Revised Order^^R^R^0065^^E
"DATA",64.061,438,0)
Schedule Test^^S^S^0065^^E
"DATA",64.061,439,0)
Outside/Reference Lab^^OSL^OSL^0074^^G
"DATA",64.061,440,0)
FRST^FRST^^^^^A^First value observed
"DATA",64.061,441,0)
POINT^PT^^SPOT^^^S^SPOT OR RANDOM^^5^T
"DATA",64.061,442,0)
STUDY^STDY^^^^^S^DURATION OF THE STUDY
"DATA",64.061,443,0)
ENCOUNTER^ENCTR^^^^^S^ENCOUNTER
"DATA",64.061,444,0)
PROCEDURE^PROCEDURE^^^^^S^DURATION OF THE PROCEDURE
"DATA",64.061,445,0)
10 mins^10M^^^^^S^10 MINUTES^^5^T
"DATA",64.061,446,0)
45 mins^45M^^^^^S^45 MINUTES^^5^T
"DATA",64.061,447,0)
90 mins^90M^^^^^S^90 MINUTES^^5^T
"DATA",64.061,448,0)
9 hours^9H^^^^^S^^^5^T
"DATA",64.061,449,0)
10 hours^10H^^^^^S^^^5^T
"DATA",64.061,450,0)
18 hours^18H^^^^^S^^^5^T
"DATA",64.061,451,0)
72 hours^72H^^^^^S^^^5^T
"DATA",64.061,452,0)
1 day^1D^^^^^S^^^5^T
"DATA",64.061,453,0)
MIN^MIN^^^^^A^Minimum value over interval^^5^T
"DATA",64.061,454,0)
MAX^MAX^^^^^A^Maximum value over interval
"DATA",64.061,455,0)
LAST^LAST^^^^^A^Last value observed
"DATA",64.061,456,0)
MEAN^MEAN^^^^^A^Mean of all values
"DATA",64.061,457,0)
Catalytic Activity^CACT^^^^^PR^Enzymatic Activity^7
"DATA",64.061,458,0)
Catalytic Concentration^CCNC^^^^^PR^Enzymatic Activity^7
"DATA",64.061,459,0)
Catalytic Concentration Ratio^CCRTO^^^^^PR^Enzymatic Activity^7
"DATA",64.061,460,0)
Catalytic Content^CCNT^^^^^PR^Enzymatic Activity^7
"DATA",64.061,461,0)
Catalytic Fraction^CFR^^^^^PR^Enzymatic Activity^7
"DATA",64.061,462,0)
Catalytic Rate^CRAT^^^^^PR^Enzymatic Activity^7
"DATA",64.061,463,0)
Catalytic Ratio^CRTO^^^^^PR^Enzymatic Activity^7
"DATA",64.061,464,0)
Entitic^ENT^^^^^PR^Entitic^7
"DATA",64.061,465,0)
Arbitrary Entitic^AENT^^^^^PR^Entitic^7
"DATA",64.061,466,0)
Entitic Substance of Amount^ENTSUB^^^^^PR^Entitic^7
"DATA",64.061,467,0)
Entitic Catalytic Activity^ENTCAT^^^^^PR^Entitic^7
"DATA",64.061,468,0)
Entitic Length^ENTLEN^^^^^PR^Entitic^7
"DATA",64.061,469,0)
Entitic Mass^ENTMASS^^^^^PR^Entitic^7
"DATA",64.061,470,0)
Entitic Number^ENTNUM^^^^^PR^Entitic^7
"DATA",64.061,471,0)
Entitic Volume^ENTVOL^^^^^PR^Entitic^7
"DATA",64.061,472,0)
Mass^MASS^^^^^PR^Mass^7
"DATA",64.061,473,0)
Mass Concentration^MCNC^^^^^PR^Mass Concentration^7
"DATA",64.061,474,0)
Mass Concentration Ratio^MCRTO^^^^^PR^Mass Concentration Ratio^7
"DATA",64.061,475,0)
Mass Content^MCNT^^^^^PR^Mass Content^7
"DATA",64.061,476,0)
Mass Fraction^MFR^^^^^PR^Mass Fraction^7
"DATA",64.061,477,0)
Mass Increment^MINC^^^^^PR^Mass Increment^7
"DATA",64.061,478,0)
Mass Rate^MRAT^^^^^PR^Mass Rate^7
"DATA",64.061,479,0)
Mass Ratio^MRTO^^^^^PR^Mass Ratio^7
"DATA",64.061,480,0)
Relative Mass Concentration^RLMCNC^^^^^PR^Relative Mass Concentration^7
"DATA",64.061,481,0)
Threshold Mass Concentration^THRMCNC^^^^^PR^Threshold Mass Concentration^7
"DATA",64.061,482,0)
Arbitrary Count^ACNT^^^^^PR^Arbitrary Count^7
"DATA",64.061,483,0)
Number^NUM^^^^^PR^Number^7
"DATA",64.061,484,0)
Number Areic (number per area)^NARIC^^^^^PR^Number per Area^7
"DATA",64.061,485,0)
Number Concentration (count/vol)^NCNC^^^^^PR^Number Concentration^7
"DATA",64.061,486,0)
Number Content = Count/Mass^NCNT^^^^^PR^Count/Mass^7
"DATA",64.061,487,0)
Number Fraction^NFR^^^^^PR^Number Fraction^7
"DATA",64.061,488,0)
Number Rate = Count/Time^NRAT^^^^^PR^Count/Time^7
"DATA",64.061,489,0)
Number Ratio^NRTO^^^^^PR^Number Ratio^7
"DATA",64.061,490,0)
Relative Substance Concentration^RLSCNC^^^^^PR^Relative Substance Conc^7
"DATA",64.061,491,0)
Substance Amount^SUB^^^^^PR^Substance Amount^7
"DATA",64.061,492,0)
Substance Concentration^SCNC^^^^^PR^Substance Concentration^7
"DATA",64.061,493,0)
Substance Concentration Ratio^SCRTO^^^^^PR^Substance Concentration Ratio^7
"DATA",64.061,494,0)
Substance Content^SCNT^^^^^PR^Substance Content^7
"DATA",64.061,495,0)
Substance Content Rate^SCNTR^^^^^PR^Substance Content Rate^7
"DATA",64.061,496,0)
Substance Fraction^SFR^^^^^PR^Substance Fraction^7
"DATA",64.061,497,0)
Substance Concentration Increment^SCNCIN^^^^^PR^Substance Concentration Increm^7
"DATA",64.061,498,0)
Substance Rate^SRAT^^^^^PR^Substance Rate^7
"DATA",64.061,499,0)
Substance Ratio^SRTO^^^^^PR^Substance Ratio^7
"DATA",64.061,500,0)
Threshold Substance Concentration^THRSCNC^^^^^PR^Threshold Substance Conc^7
"DATA",64.061,501,0)
Volume^VOL^^^^^PR^Volume^7
"DATA",64.061,502,0)
Volume Content^VCNT^^^^^PR^Volume Content^7
"DATA",64.061,503,0)
Volume Fraction^VFR^^^^^PR^Volume Fraction^7
"DATA",64.061,504,0)
Volume Rate^VRAT^^^^^PR^Volume Rate^7
"DATA",64.061,505,0)
Volume Ratio^VRTO^^^^^PR^Volume Ratio^7
"DATA",64.061,506,0)
Energy/Area^ARENRG^^^^^PR^Energy/Area^7^6^R
"DATA",64.061,507,0)
Resistance/Area^ARRESIS^^^^^PR^Resistance/Area^7^6^R
"DATA",64.061,508,0)
Volume/Area^ARVOL^^^^^PR^Volume/Area^7^6^R
"DATA",64.061,509,0)
Volume Rate/Ratio^ARVOLRT^^^^^PR^Volume Rate/Ratio^7^6^R
"DATA",64.061,510,0)
Volume Rate/Area^ARVRAT^^^^^PR^Volume Rate/Area^7^6^R
"DATA",64.061,511,0)
ACNC^ACNC^^^^^PR^Arbitrary Concentration^7
"DATA",64.061,512,0)
Wound^WND^^^^^C^Wound Challenge^5
"DATA",64.061,513,0)
Arbitrary Fraction^AFR^^^^^PR^Arbitrary Fraction^7
"DATA",64.061,514,0)
Threshold Arbitrary Concentration^THRACNC^^^^^PR^Threshold Arbitrary Conc^7
"DATA",64.061,515,0)
Arbitrary Rate^ARAT^^^^^PR^Arbitrary Rate^7
"DATA",64.061,516,0)
Absorbance^ABS^^^^^PR^Absorbance^7
"DATA",64.061,517,0)
Activity^ACT^^^^^PR^Activity^7
"DATA",64.061,518,0)
Anatomy^ANAT^^^^^PR^Anatomy^7
"DATA",64.061,519,0)
Angle^ANGLE^^^^^PR^Angle^7
"DATA",64.061,520,0)
Appearance^APER^^^^^PR^Appearance^7
"DATA",64.061,521,0)
Arbitrary^ARB^^^^^PR^Arbitrary^7
"DATA",64.061,522,0)
Area^AREA^^^^^PR^Area^7
"DATA",64.061,523,0)
Aspect^ASPECT^^^^^PR^Aspect^7
"DATA",64.061,524,0)
Bibliographic Citation^BIB^^^^^PR^Bibliographic Citation^7
"DATA",64.061,525,0)
Circumference^CIRC^^^^^PR^Cirumference^7
"DATA",64.061,526,0)
Class^CLASS^^^^^PR^Class^7
"DATA",64.061,527,0)
Constant^CNST^^^^^PR^Constant^7
"DATA",64.061,528,0)
Coefficient^COEF^^^^^PR^Coefficient^7
"DATA",64.061,529,0)
Color^COLOR^^^^^PR^Color^7
"DATA",64.061,530,0)
Complex^CMPLX^^^^^PR^Complex^7
"DATA",64.061,531,0)
Consistency^CONS^^^^^PR^Consistency^7
"DATA",64.061,532,0)
Density = Mass/Volume^DEN^^^^^PR^Mass/Volume^7
"DATA",64.061,533,0)
Device^DEV^^^^^PR^Device^7
"DATA",64.061,534,0)
Difference^DIFF^^^^^PR^Difference^7
"DATA",64.061,535,0)
Elasticity^ELAS^^^^^PR^Elasticity^7
"DATA",64.061,536,0)
Electrical Potential(Voltage)^ELPOT^^^^^PR^Electrical Potential^7
"DATA",64.061,537,0)
Voltage Rate(=Amperage)^ELPOTRAT^^^^^PR^Voltage Rate^7
"DATA",64.061,538,0)
Electrical Resistance^ELRES^^^^^PR^Electrical Resistance^7
"DATA",64.061,539,0)
Power = Energy/Time^ENGRAT^^^^^PR^Energy/Time^7
"DATA",64.061,540,0)
Energy Ratio^ENGRTO^^^^^PR^Energy Ratio^7
"DATA",64.061,541,0)
Energy^ENRG^^^^^PR^Energy^7
"DATA",64.061,542,0)
Equilibrium^EQL^^^^^PR^Equilibrium^7
"DATA",64.061,543,0)
Equation^EQU^^^^^PR^Equation^7
"DATA",64.061,544,0)
Function^FCN^^^^^PR^Function^7
"DATA",64.061,545,0)
Finding^FIND^^^^^PR^Finding^7
"DATA",64.061,546,0)
Mechanical Force^FORCE^^^^^PR^Mechanical Force^7
"DATA",64.061,547,0)
Frequency^FREQ^^^^^PR^Frequency^7
"DATA",64.061,548,0)
Impression/interpretation of study^IMP^^^^^PR^Impression/Interpretation^7
"DATA",64.061,549,0)
IDENTIFIER^ID^^^^^PR^Identifier^7
"DATA",64.061,550,0)
History^HX^^^^^PR^History^7
"DATA",64.061,551,0)
Kinematic Viscosity^KINV^^^^^PR^Kinematic Viscosity^7
"DATA",64.061,552,0)
Length^LEN^^^^^PR^Length^7
"DATA",64.061,553,0)
Length Ratio^LENRTO^^^^^PR^Length Ratio^7
"DATA",64.061,554,0)
Length Increment^LINC^^^^^PR^Length Increment^7
"DATA",64.061,555,0)
Liquifaction^LIQ^^^^^PR^Liquifaction^7
"DATA",64.061,556,0)
Method^METHOD^^^^^PR^Method^7
"DATA",64.061,557,0)
Magnetic flux^MGFLUX^^^^^PR^Magnetic flux^7
"DATA",64.061,558,0)
Morphology^MORPH^^^^^PR^Morphology^7
"DATA",64.061,559,0)
Motility^MOTIL^^^^^PR^Motility^7
"DATA",64.061,560,0)
Optical density^OD^^^^^PR^OpitcalDensity^7^8^U
"DATA",64.061,561,0)
Osmolality^OSMOL^^^^^PR^Osmolality^7
"DATA",64.061,563,0)
Percentile^PRCTL^^^^Rank^PR^Percentile^7^8^U
"DATA",64.061,564,0)
Presence or Identity^PRID^^^^^PR^Presence/Identity^7
"DATA",64.061,565,0)
Pressure (partial)^PPRES^^^^^PR^Partial Pressure^7^8^U
"DATA",64.061,566,0)
Pressure^PRES^^^^^PR^Pressure^7
"DATA",64.061,567,0)
Pressure Ratio^PRESRTO^^^^^PR^Pressure Ratio^7
"DATA",64.061,568,0)
Ranges^RANGE^^^^^PR^Ranges^7
"DATA",64.061,569,0)
Ratios^RATIO^^^^^PR^Ratio^7
"DATA",64.061,570,0)
Relative Density^RDEN^^^^^PR^Relative Density^7
"DATA",64.061,571,0)
Relative^REL^^^^^PR^Relative^7
"DATA",64.061,572,0)
Route of RX^ROUTE^^^^^PR^Route of Drug^7
"DATA",64.061,573,0)
Saturation Fraction^SATFR^^^^^PR^Saturation Fraction^7
"DATA",64.061,574,0)
Shape^SHAPE^^^^^PR^Shape^7
"DATA",64.061,575,0)
Smell^SMELL^^^^^PR^Smell^7
"DATA",64.061,576,0)
Susceptibility^SUSC^^^^^PR
"DATA",64.061,577,0)
Taste^TASTE^^^^^PR^Taste^7
"DATA",64.061,578,0)
TEMP^TEMP^^^^^PR^Temperature^7
"DATA",64.061,579,0)
Temperature Difference^TEMPDF^^^^^PR^Temperature Difference^7
"DATA",64.061,580,0)
Temperature Increment^TEMPIN^^^^^PR^Temperature Increment^7
"DATA",64.061,581,0)
Text^TXT^^^^^PR^Text^7
"DATA",64.061,582,0)
Date^DATE^^^^^PR
"DATA",64.061,583,0)
Time (e.g. seconds)^TIME^^^^^PR
"DATA",64.061,584,0)
Time Stamp - Date and Time^TMSTP^^^^^PR
"DATA",64.061,585,0)
Time Ratio^TRTO^^^^^PR
"DATA",64.061,586,0)
Reciprocal Relative Time^RCRLTM^^^^^PR
"DATA",64.061,587,0)
Relative Time^RLTM^^^^^PR
"DATA",64.061,588,0)
Threshold^THRESHOLD^^^^^PR
"DATA",64.061,589,0)
Dilution Factor (Titer)
"DATA",64.061,590,0)
Type^TYPE^^^^^PR
"DATA",64.061,591,0)
Velocity^VEL^^^^^PR
"DATA",64.061,592,0)
Velocity Rate^VELRAT^^^^^PR
"DATA",64.061,593,0)
Velocity Ratio^VELRTO^^^^^PR
"DATA",64.061,594,0)
Viscosity^VISC^^^^^PR
"DATA",64.061,595,0)
Apply Externally^AP^^^^^C
"DATA",64.061,596,0)
Buccal^B^^^^^C
"DATA",64.061,597,0)
Dental^DT^^^^^C
"DATA",64.061,598,0)
Epidural^EP^^^^^C
"DATA",64.061,599,0)
Endotrachial Tube^ET^^^^^C
"DATA",64.061,600,0)
Gastronomy Tube^GTT^^^^^C
"DATA",64.061,601,0)
GU Irrigant^GU^^^^^C
"DATA",64.061,602,0)
Immerse (Soak) Body Part^IMR^^^^^C
"DATA",64.061,603,0)
Intra-arterial^IA^^^^^C
"DATA",64.061,604,0)
Intrabursal^IB^^^^^C
"DATA",64.061,605,0)
Intracardiac^IC^^^^^C
"DATA",64.061,606,0)
Intracervical (uterus)^ICV^^^^^C
"DATA",64.061,607,0)
Intradermal^ID^^^^^C
"DATA",64.061,608,0)
Inhalation^IH^^^^^C
"DATA",64.061,609,0)
Intrahepatic Artery^IHA^^^^^C
"DATA",64.061,610,0)
Intramuscular^IM^^^^^C
"DATA",64.061,611,0)
Intranasal^IN^^^^^C
"DATA",64.061,612,0)
Intraocular^Intraocular^^^^^S
"DATA",64.061,613,0)
Intraperitoneal^IP^^^^^C
"DATA",64.061,614,0)
Intrasynovial^IS^^^^^C
"DATA",64.061,615,0)
Intrathecal^IT^^^^^C
"DATA",64.061,616,0)
Intrauterine^IU^^^^^C
"DATA",64.061,617,0)
Intravenous^IV^^^^^C
"DATA",64.061,618,0)
Mouth/Throat^MTH^^^^^C
"DATA",64.061,619,0)
Mucous Membrane^MM^^^^^C
"DATA",64.061,620,0)
Nasal^NS^^^^^C
"DATA",64.061,621,0)
Nasogastric^NG^^^^^C
"DATA",64.061,622,0)
Nasal Prongs^NP^^^^^C
"DATA",64.061,623,0)
Nasotrachial Tube^NT^^^^^C
"DATA",64.061,624,0)
Ophthalmic^OP^^^^^C
"DATA",64.061,625,0)
Otic^OT^^^^^C
"DATA",64.061,626,0)
Other/Miscellaneous^OTH^^^^^C
"DATA",64.061,627,0)
Perfusion^PF^^^^^C
"DATA",64.061,628,0)
Oral^PO^^^^^C
"DATA",64.061,629,0)
Rectal^PR^^^^^C
"DATA",64.061,630,0)
Rebreather Mask^RM^^^^^C
"DATA",64.061,631,0)
Soaked Dressing^SD^^^^^C^^5
"DATA",64.061,632,0)
Subcutaneous^SC^^^^^C
"DATA",64.061,633,0)
Sublingual^SL^^^^^C
"DATA",64.061,634,0)
Topical^TP^^^^^C
"DATA",64.061,635,0)
Tracheostomy^TRA^^^^^C
"DATA",64.061,636,0)
Transdermal^TD^^^^^C
"DATA",64.061,637,0)
Translingual^TL^^^^^C
"DATA",64.061,638,0)
Urethral^UR^^^^^C^^5
"DATA",64.061,639,0)
Vaginal^VG^^^^^C
"DATA",64.061,640,0)
Ventimask^VM^^^^^C
"DATA",64.061,642,0)
Calorie fast^CFST^^^^^C
"DATA",64.061,643,0)
Enzymatic Activity^^^^^^PR^^7
"DATA",64.061,644,0)
Counts^^^^^^PR^^7
"DATA",64.061,645,0)
Arbitrary Units^^^^^^PR^Arbitrary Units Measures^7
"DATA",64.061,646,0)
Other Properties^^^^^^PR^^7
"DATA",64.061,647,0)
LOINC Property^^^^^^PR
"DATA",64.061,648,0)
Metric Length^^^^^^PR^Length Metric
"DATA",64.061,649,0)
Metric Volume^^^^^^PR^Volume Metric
"DATA",64.061,650,0)
Metric Weight^^^^^^PR^Weight Metric
"DATA",64.061,651,0)
English Length^^^^^^PR^Lenght English
"DATA",64.061,652,0)
English Volume^^^^^^PR^Volume English
"DATA",64.061,653,0)
English Weight^^^^^^PR^Weight English
"DATA",64.061,654,0)
Metric System^^^^^^PR^Measurement System
"DATA",64.061,655,0)
English System^^^^^^PR^English Measurement System
"DATA",64.061,656,0)
Quantitative^QN^^^^^PR^Example 7,-7,7.4,7.8912^12
"DATA",64.061,657,0)
Ordinal^ORD^^^^^PR^Example 1+,2+,Pos,Neg^12
"DATA",64.061,658,0)
ZQuant/Ordinal^^^^^^^Example  resistant, zone size^12
"DATA",64.061,659,0)
Nominal^NOM^^^^^PR^Example  yellow, clear, cloudy^12
"DATA",64.061,660,0)
Narrative^NAR^^^^^PR^Text Narrative^12
"DATA",64.061,661,0)
Multi^MULTI^^^^^PR^Large text file or glob^12
"DATA",64.061,662,0)
PEAK^^^^^^C
"DATA",64.061,663,0)
TROUGH^^^^^^C
"DATA",64.061,664,0)
9H POST 3 G METYRAPONE PO OVERNIGHT^^^^^^C
"DATA",64.061,665,0)
BS PRE 3 G METYRAPONE PO OVERNIGHT^^^^^^C
"DATA",64.061,666,0)
15M POST 250 UG CORTOSYN^^^^^^C
"DATA",64.061,667,0)
1H POST 250 UG CORTOSYN^^^^^^C
"DATA",64.061,668,0)
30M POST 250 UG CORTOSYN^^^^^^C
"DATA",64.061,669,0)
8H POST 30 MG/KG METYRAPONE PO^^^^^^C
"DATA",64.061,670,0)
POST 750 MG METYRAPONE Q4H X 6^^^^^^C
"DATA",64.061,671,0)
15M POST 250 UG CORTROSYN^^^^^^C
"DATA",64.061,672,0)
1H POST 250 UG CORTROSYN^^^^^^C
"DATA",64.061,673,0)
30M POST 250 UG CORTROSYN^^^^^^C
"DATA",64.061,674,0)
15M POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,675,0)
1H POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,676,0)
2ND SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,677,0)
30M POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,678,0)
3RD SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,679,0)
4TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,680,0)
5TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,681,0)
1H POST 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,682,0)
1H POST DOSE U/KG INSULIN IV^^^^^^C
"DATA",64.061,683,0)
1M POST 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,684,0)
30M POST 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,685,0)
30M POST DOSE U/KG INSULIN IV^^^^^^C
"DATA",64.061,686,0)
45M POST 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,687,0)
45M POST DOSE U/KG INSULIN IV^^^^^^C
"DATA",64.061,688,0)
5M POST 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,689,0)
90M POST DOSE U/KG INSULIN IV^^^^^^C
"DATA",64.061,690,0)
BS PRE 1 UG/KG CRH IV^^^^^^C
"DATA",64.061,691,0)
BS PRE DOSE U/KG INSULIN IV^^^^^^C
"DATA",64.061,692,0)
1H POST 25 MG CAPTOPRIL PO^^^^^^C
"DATA",64.061,693,0)
1H POST CHALLENGE^^^^^^C
"DATA",64.061,694,0)
2H POST 25 MG CAPTOPRIL PO^^^^^^C
"DATA",64.061,695,0)
30M POST CHALLENGE^^^^^^C
"DATA",64.061,696,0)
POST DOSE PO^^^^^^C
"DATA",64.061,697,0)
POST 15000 U CAROTENE Q3XD FOR 3D POLY^^^^^^C
"DATA",64.061,698,0)
1.5H POST CHALLENGE^^^^^^C
"DATA",64.061,699,0)
10M POST 1 MG GLUCAGON IV^^^^^^C
"DATA",64.061,700,0)
15M POST 1 MG GLUCAGON IV^^^^^^C
"DATA",64.061,701,0)
2.5H POST CHALLENGE^^^^^^C
"DATA",64.061,702,0)
2H POST CHALLENGE^^^^^^C
"DATA",64.061,703,0)
3H POST CHALLENGE^^^^^^C
"DATA",64.061,704,0)
5H POST CHALLENGE^^^^^^C
"DATA",64.061,705,0)
5M POST 1 MG GLUCAGON IV^^^^^^C
"DATA",64.061,706,0)
6H POST CHALLENGE^^^^^^C
"DATA",64.061,707,0)
6TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,708,0)
POST CFST^^^^^^C
"DATA",64.061,709,0)
10M POST 2.4 MG/KG CALCIUM SHORT IV^^^^^^C
"DATA",64.061,710,0)
3H POST 15 MG/KG CALCIUM GLUCONATE IV^^^^^^C
"DATA",64.061,711,0)
4H POST 15 MG/KG CALCIUM GLUCONATE IV^^^^^^C
"DATA",64.061,712,0)
5M POST .5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,713,0)
5M POST 2.4 MG/KG CALCIUM SHORT IV^^^^^^C
"DATA",64.061,714,0)
90S POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,715,0)
BS PRE .5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,716,0)
BS PRE 2.4 MG/KG CALCIUM SHORT IV^^^^^^C
"DATA",64.061,717,0)
POST CALCIUM INFUSION^^^^^^C
"DATA",64.061,718,0)
1 HR POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,719,0)
2 HR POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,720,0)
3 HR POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,721,0)
BS PRE 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,722,0)
7TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,723,0)
8TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,724,0)
24H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,725,0)
48H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,728,0)
72H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,729,0)
BS PRE 50 UG ACTH IM 3 DAY^^^^^^C
"DATA",64.061,732,0)
10TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,733,0)
1H POST 0.05-0.15 U INSULIN/KG IV POST 12H CFST^^^^^^C
"DATA",64.061,734,0)
1H POST 250 UG ACTH IM RAPID^^^^^^C
"DATA",64.061,735,0)
1H POST 250 UG ACTH IV RAPID^^^^^^C
"DATA",64.061,736,0)
20M POST CHALLENGE^^^^^^C
"DATA",64.061,737,0)
24H POST 2.0 MG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,738,0)
24H POST 500 UG CORTROSYN IM^^^^^^C
"DATA",64.061,739,0)
24H POST 500 UG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,742,0)
2D POST 500 UG CORTROSYN IM^^^^^^C
"DATA",64.061,743,0)
2H POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,744,0)
30M POST 0.05-0.15 U INSULIN/KG IV POST 12H CFST^^^^^^C
"DATA",64.061,745,0)
30M POST 250 UG ACTH IM RAPID^^^^^^C
"DATA",64.061,746,0)
30M POST 250 UG ACTH IV RAPID^^^^^^C
"DATA",64.061,747,0)
32H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,748,0)
3D POST 500 UG CORTROSYN IM^^^^^^C
"DATA",64.061,749,0)
45M POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,750,0)
48H POST 2.0 MG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,751,0)
48H POST 500 UG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,754,0)
56H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,755,0)
72H POST 2.0 MG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,756,0)
72H POST 500 UG DEXAMETHASONE PO Q6H^^^^^^C
"DATA",64.061,757,0)
8H POST 1 MG DEXAMETHASONE PO^^^^^^C
"DATA",64.061,758,0)
8H POST 2.0 MG DEXAMETHASONE PO^^^^^^C
"DATA",64.061,759,0)
8H POST 40 UG ACTH IM BID 3 DAY^^^^^^C
"DATA",64.061,760,0)
8H POST 500 UG DEXAMETHASONE PO^^^^^^C
"DATA",64.061,762,0)
90M POST 0.05-0.15 U INSULIN/KG IV POST 12H CFST^^^^^^C
"DATA",64.061,763,0)
90M POST 250 UG CORTROSYN IM^^^^^^C
"DATA",64.061,764,0)
9H POST 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^^C
"DATA",64.061,765,0)
9H POST 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^^^^^^C
"DATA",64.061,766,0)
9TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,767,0)
BS PRE 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^^C
"DATA",64.061,768,0)
BS PRE 12H CFST^^^^^^C
"DATA",64.061,769,0)
BS PRE 250 MCG CORTROSYN IM^^^^^^C
"DATA",64.061,770,0)
BS PRE 40 UG ACTH IM 3 DAY^^^^^^C
"DATA",64.061,771,0)
BS PRE 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^^^^^^C
"DATA",64.061,772,0)
POST CHALLENGE^^^^^^C
"DATA",64.061,773,0)
POST DOSE CYANOCOBALAMIN PO^^^^^^C
"DATA",64.061,775,0)
30M POST DOSE 250 UG CORTROSYN^^^^^^C
"DATA",64.061,776,0)
1H POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,777,0)
2H POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,778,0)
3H POST 300 UG CLONIDINE PO^^^^^^C
"DATA",64.061,779,0)
105M POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,780,0)
10M POST CHALLENGE^^^^^^C
"DATA",64.061,781,0)
15M POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,782,0)
1H POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,783,0)
1H POST DOSE UG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,784,0)
2H POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,785,0)
30M POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,786,0)
30M POST DOSE UG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,787,0)
40M POST CHALLENGE^^^^^^C
"DATA",64.061,788,0)
45M POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,789,0)
75M POST 100 G LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,790,0)
90M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,791,0)
90M POST DOSE UG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,792,0)
BS^^^^^^C
"DATA",64.061,793,0)
BS PRE DOSE UG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,794,0)
1H POST 40 G GALACTOSE PO^^^^^^C
"DATA",64.061,795,0)
2H POST 40 G GALACTOSE PO^^^^^^C
"DATA",64.061,796,0)
30M POST 40 G GALACTOSE PO^^^^^^C
"DATA",64.061,797,0)
90M POST 40 G GALACTOSE PO^^^^^^C
"DATA",64.061,798,0)
POST 40 G DOSE PO^^^^^^C
"DATA",64.061,799,0)
10M POST .2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,800,0)
15M POST .2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,801,0)
20M POST .2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,802,0)
25M POST .2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,803,0)
2M POST .2 U/KG SECRETIN^^^^^^C
"DATA",64.061,804,0)
30M POST .2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,805,0)
5M POST .2 U/KG SECRETIN^^^^^^C
"DATA",64.061,806,0)
BS PRE .2 U/KG SECRETIN^^^^^^C
"DATA",64.061,807,0)
1.5H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,808,0)
1.5H POST GLUCOSE PO^^^^^^C
"DATA",64.061,809,0)
10H POST CHALLENGE^^^^^^C
"DATA",64.061,810,0)
10M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,811,0)
10M PRE CHALLENGE^^^^^^C
"DATA",64.061,812,0)
11TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,813,0)
12H POST CHALLENGE^^^^^^C
"DATA",64.061,814,0)
12TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,815,0)
13TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,816,0)
14TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,817,0)
150M POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,818,0)
15M POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,819,0)
15M POST CHALLENGE^^^^^^C
"DATA",64.061,820,0)
15M POST LACTOSE CHALLENGE^^^^^^C
"DATA",64.061,821,0)
15TH SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,822,0)
1H POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,823,0)
1H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,824,0)
1H POST 50 G GLUCOSE PO^^^^^^C
"DATA",64.061,825,0)
1H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,826,0)
1H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,827,0)
1H POST GLUCOSE PO^^^^^^C
"DATA",64.061,828,0)
1H POST MEAL^^^^^^C
"DATA",64.061,829,0)
1M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,830,0)
1ST SPECIMEN POST CHALLENGE^^^^^^C
"DATA",64.061,831,0)
2.5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,832,0)
2.5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,833,0)
20M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,834,0)
2H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,835,0)
2H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,836,0)
2H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,837,0)
2H POST GLUCOSE PO^^^^^^C
"DATA",64.061,838,0)
2H POST MEAL^^^^^^C
"DATA",64.061,839,0)
2M POST CHALLENGE^^^^^^C
"DATA",64.061,840,0)
3.5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,841,0)
3.5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,842,0)
3.5H POST LACTOSE PO^^^^^^C
"DATA",64.061,843,0)
30M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,844,0)
30M POST 0.1 U/KG INSULIN^^^^^^C
"DATA",64.061,845,0)
30M POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,846,0)
30M POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,847,0)
30M POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,848,0)
30M POST 75 G GLUSOSE PO^^^^^^C
"DATA",64.061,849,0)
30M POST GLUCOSE PO^^^^^^C
"DATA",64.061,850,0)
3H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,851,0)
3H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,852,0)
3H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,853,0)
3H POST GLUCOSE PO^^^^^^C
"DATA",64.061,854,0)
3M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,855,0)
4.5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,856,0)
4.5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,857,0)
40M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,858,0)
45M POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,859,0)
4H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,860,0)
4H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,861,0)
4H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,862,0)
4H POST GLUCOSE PO^^^^^^C
"DATA",64.061,863,0)
4M POST CHALLENGE^^^^^^C
"DATA",64.061,864,0)
5.5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,865,0)
5.5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,866,0)
50M POST CHALLENGE^^^^^^C
"DATA",64.061,867,0)
5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,868,0)
5H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,869,0)
5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,870,0)
5H POST GLUCOSE PO^^^^^^C
"DATA",64.061,871,0)
5M POST .5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,872,0)
6.5H POST CHALLENGE^^^^^^C
"DATA",64.061,873,0)
6H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,874,0)
6H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,875,0)
6TH SPECIMEN POST LACTOSE CHALLENGE^^^^^^C
"DATA",64.061,876,0)
7.5H POST CHALLENGE^^^^^^C
"DATA",64.061,877,0)
70M POST CHALLENGE^^^^^^C
"DATA",64.061,878,0)
7H POST CHALLENGE^^^^^^C
"DATA",64.061,879,0)
7H POST MEAL^^^^^^C
"DATA",64.061,880,0)
8H POST CHALLENGE^^^^^^C
"DATA",64.061,881,0)
8M POST CHALLENGE^^^^^^C
"DATA",64.061,882,0)
90M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,883,0)
90M POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,884,0)
90M POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,885,0)
90M POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,886,0)
9H POST CHALLENGE^^^^^^C
"DATA",64.061,887,0)
BS PRE 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,888,0)
BS PRE 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,889,0)
BS PRE 50 G LACTOSE PO^^^^^^C
"DATA",64.061,890,0)
BS PRE 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,891,0)
BS PRE LACTOSE PO^^^^^^C
"DATA",64.061,892,0)
POST 10H CFST^^^^^^C
"DATA",64.061,893,0)
POST 12H CFST^^^^^^C
"DATA",64.061,894,0)
POST 50 G GLUCOSE PO^^^^^^C
"DATA",64.061,895,0)
11H POST CHALLENGE^^^^^^C
"DATA",64.061,896,0)
150M POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,897,0)
19M POST CHALLENGE^^^^^^C
"DATA",64.061,898,0)
1H POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,899,0)
2.5H POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,900,0)
22M POST CHALLENGE^^^^^^C
"DATA",64.061,901,0)
2H POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,902,0)
30M POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,903,0)
3H POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,904,0)
4.5H POST CHALLENGE^^^^^^C
"DATA",64.061,905,0)
45M POST CHALLENGE^^^^^^C
"DATA",64.061,906,0)
5.5H POST CHALLENGE^^^^^^C
"DATA",64.061,907,0)
7H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,908,0)
90M POST DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,909,0)
BS 15M PRE CHALLENGE^^^^^^C
"DATA",64.061,910,0)
BS 30M PRE CHALLENGE^^^^^^C
"DATA",64.061,911,0)
BS PRE CHALLENGE^^^^^^C
"DATA",64.061,912,0)
BS PRE DOSE TOLBUTAMIDE IV^^^^^^C
"DATA",64.061,914,0)
4H POST CHALLENGE^^^^^^C
"DATA",64.061,915,0)
POST EDTA THERAPY^^^^^^C
"DATA",64.061,916,0)
105M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,917,0)
15M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,918,0)
1H POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,919,0)
1H POST DOSE MG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,920,0)
2H POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,921,0)
2H POST DOSE MG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,922,0)
30M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,923,0)
30M POST DOSE MG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,924,0)
45M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,925,0)
75M POST 100 G LUTENIN IV^^^^^^C
"DATA",64.061,926,0)
90M POST DOSE MG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,927,0)
BS PRE DOSE MG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,928,0)
15M PRE CHALLENGE^^^^^^C
"DATA",64.061,929,0)
1H POST DOSE L-DOPA PO^^^^^^C
"DATA",64.061,930,0)
1H POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,931,0)
2H POST DOSE L-DOPA PO^^^^^^C
"DATA",64.061,932,0)
30M POST DOSE TRH IV^^^^^^C
"DATA",64.061,933,0)
3H POST DOSE L-DOPA PO^^^^^^C
"DATA",64.061,934,0)
BS PRE DOSE L-DOPA PO^^^^^^C
"DATA",64.061,935,0)
BS PRE DOSE UG TRH IV^^^^^^C
"DATA",64.061,936,0)
10M POST STANDING^^^^^^C
"DATA",64.061,937,0)
SUPINE^^^^^^C
"DATA",64.061,938,0)
POST 12H FFST^^^^^^C
"DATA",64.061,939,0)
POST 8H FFST^^^^^^C
"DATA",64.061,940,0)
6H POST 500 MG BENTIROMIDE PO^^^^^^C
"DATA",64.061,941,0)
5H POST 600 UG FUROSEMIDE PO^^^^^^C
"DATA",64.061,942,0)
BS PRE 600 UG FUROSEMIDE PO^^^^^^C
"DATA",64.061,943,0)
3H POST 5000 UNITS^^^^^^C
"DATA",64.061,944,0)
6H POST 5000 UNITS^^^^^^C
"DATA",64.061,945,0)
BS PRE 5000 UNITS^^^^^^C
"DATA",64.061,946,0)
1H POST 1 G/KG GLUCOSE PO^^^^^^C
"DATA",64.061,947,0)
2H POST 1 G/KG GLUCOSE PO^^^^^^C
"DATA",64.061,948,0)
3H POST 1 G/KG GLUCOSE PO^^^^^^C
"DATA",64.061,949,0)
52H POST 250 UG L-DOPA TID 2DAY PO^^^^^^C
"DATA",64.061,950,0)
60M POST CHALLENGE^^^^^^C
"DATA",64.061,951,0)
90M POST CHALLENGE^^^^^^C
"DATA",64.061,952,0)
BS PRE 1 G/KG GLUCOSE PO^^^^^^C
"DATA",64.061,953,0)
BS PRE 250 UG L-DOPA TID 2DAY PO^^^^^^C
"DATA",64.061,954,0)
96H POST 5000 U HCG IM^^^^^^C
"DATA",64.061,955,0)
BS PRE 5000 U POST HCG IM^^^^^^C
"DATA",64.061,956,0)
15M POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,957,0)
2H POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,958,0)
30M POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,959,0)
45M POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,960,0)
60M POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,961,0)
90M POST DOSE UG TRH IV^^^^^^C
"DATA",64.061,962,0)
12H POST CFST^^^^^^C
"DATA",64.061,963,0)
1H POST 25 G XYLOSE^^^^^^C
"DATA",64.061,964,0)
1H POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,965,0)
1H POST DOSE XYLOSE PO^^^^^^C
"DATA",64.061,966,0)
2H POST 25 G XYLOSE^^^^^^C
"DATA",64.061,967,0)
2H POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,968,0)
30M POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,969,0)
3H POST 25 G XYLOSE^^^^^^C
"DATA",64.061,970,0)
4H POST 25 G XYLOSE^^^^^^C
"DATA",64.061,971,0)
5H POST 25 G XYLOSE^^^^^^C
"DATA",64.061,972,0)
POST 6H CFST^^^^^^C
"DATA",64.061,973,0)
3D POST 25 TU ID^^^^^^C
"DATA",64.061,974,0)
3D POST 5 TU ID^^^^^^C
"DATA",64.061,975,0)
3D POST 0.1 ML MUMPS^^^^^^C
"DATA",64.061,976,0)
3D POST 50 UG CANDIDA ALBICANS^^^^^^C
"DATA",64.061,977,0)
3D POST 50 UG TRICHOPHYTON^^^^^^C
"DATA",64.061,978,0)
UPRIGHT^^^^^^C
"DATA",64.061,979,0)
EVENING^^^^^^C
"DATA",64.061,980,0)
MORNING^^^^^^C
"DATA",64.061,981,0)
12H POST PERITONEAL DIALYSIS^^^^^^C
"DATA",64.061,982,0)
1ST SPECIMEN^^^^^^C
"DATA",64.061,983,0)
24H SPECIMEN^^^^^^C
"DATA",64.061,984,0)
2H POST PERITONEAL DIALYSIS^^^^^^C
"DATA",64.061,985,0)
2H SPECIMEN^^^^^^C
"DATA",64.061,986,0)
2ND SPECIMEN^^^^^^C
"DATA",64.061,987,0)
3RD SPECIMEN^^^^^^C
"DATA",64.061,988,0)
4H POST PERITONEAL DIALYSIS^^^^^^C
"DATA",64.061,989,0)
4H SPECIMEN^^^^^^C
"DATA",64.061,990,0)
4TH SPECIMEN^^^^^^C
"DATA",64.061,991,0)
5TH SPECIMEN^^^^^^C
"DATA",64.061,992,0)
6TH SPECIMEN^^^^^^C
"DATA",64.061,993,0)
7TH SPECIMEN^^^^^^C
"DATA",64.061,994,0)
8TH SPECIMEN^^^^^^C
"DATA",64.061,995,0)
POST DIALYSIS^^^^^^C
"DATA",64.061,996,0)
PRE DIALYSIS^^^^^^C
"DATA",64.061,997,0)
15M POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,998,0)
45M POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,999,0)
BS PRE DIALYSIS^^^^^^C
"DATA",64.061,1000,0)
UPRIGHT POSTURE^^^^^^C
"DATA",64.061,1001,0)
70M SPECIMEN^^^^^^C
"DATA",64.061,1003,0)
IMMEDIATELY AFTER 1:4 ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,1004,0)
IMMEDIATELY AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,1005,0)
10M POST VENISTASIS^^^^^^C
"DATA",64.061,1006,0)
20M POST VENISTASIS^^^^^^C
"DATA",64.061,1007,0)
10 MIN AFTER VENISTASIS^^^^^^C
"DATA",64.061,1008,0)
20 MIN AFTER VENISTASIS^^^^^^C
"DATA",64.061,1009,0)
RANDOM^^^^^^C
"DATA",64.061,1010,0)
TROUGH >12H POST DOSE^^^^^^C
"DATA",64.061,1011,0)
12H POST DOSE^^^^^^C
"DATA",64.061,1012,0)
24H POST DOSE^^^^^^C
"DATA",64.061,1013,0)
6H POST DOSE^^^^^^C
"DATA",64.061,1014,0)
>12H POST DOSE^^^^^^C
"DATA",64.061,1015,0)
>45M POST BOLUS DOSE^^^^^^C
"DATA",64.061,1016,0)
1-2W POST DOSE^^^^^^C
"DATA",64.061,1017,0)
48H POST DOSE^^^^^^C
"DATA",64.061,1018,0)
72H POST DOSE^^^^^^C
"DATA",64.061,1019,0)
PO^^^^^^C
"DATA",64.061,1020,0)
IV^^^^^^C
"DATA",64.061,1021,0)
POST EJACULATION^^^^^^C
"DATA",64.061,1022,0)
POST COITUS^^^^^^C
"DATA",64.061,1023,0)
POST VASECTOMY^^^^^^C
"DATA",64.061,1024,0)
POST^^^^^^C
"DATA",64.061,1025,0)
POST/STREPTOCOCCUS PNEUMONIAE 12F AB^^^^^^C
"DATA",64.061,1026,0)
POST/STREPTOCOCCUS PNEUMONIAE 14 AB^^^^^^C
"DATA",64.061,1027,0)
AT BIRTH^^^^^^C
"DATA",64.061,1028,0)
EXPIRATION^^^^^^C
"DATA",64.061,1029,0)
INSPIRATION^^^^^^C
"DATA",64.061,1030,0)
Z*^Z*^^^^^C
"DATA",64.061,1031,0)
LYING^^^^^^C
"DATA",64.061,1032,0)
POST PARTUM^^^^^^C
"DATA",64.061,1033,0)
PRE-SURGERY^^^^^^C
"DATA",64.061,1034,0)
STANDING^^^^^^C
"DATA",64.061,1035,0)
ANTE PARTUM^^^^^^C
"DATA",64.061,1036,0)
DRY WEIGHT^^^^^^C
"DATA",64.061,1037,0)
LEAN^^^^^^C
"DATA",64.061,1038,0)
POST SURGERY^^^^^^C
"DATA",64.061,1039,0)
PRE PREGNANCY^^^^^^C
"DATA",64.061,1040,0)
PRE SURGERY^^^^^^C
"DATA",64.061,1041,0)
WITH CLOTHES^^^^^^C
"DATA",64.061,1042,0)
WITHOUT CLOTHES^^^^^^C
"DATA",64.061,1043,0)
SITTING^^^^^^C
"DATA",64.061,1044,0)
POST VOID^^^^^^C
"DATA",64.061,1045,0)
10M POST BIRTH^^^^^^C
"DATA",64.061,1046,0)
1M POST BIRTH^^^^^^C
"DATA",64.061,1047,0)
2M POST BIRTH^^^^^^C
"DATA",64.061,1048,0)
5M POST BIRTH^^^^^^C
"DATA",64.061,1049,0)
POST BRONCHOSCOPY^^^^^^C
"DATA",64.061,1050,0)
POST CARDIOVERSION^^^^^^C
"DATA",64.061,1051,0)
POST CONSCIOUS SEDATION^^^^^^C
"DATA",64.061,1052,0)
POST INHALATION THERAPY^^^^^^C
"DATA",64.061,1053,0)
PRE BRONCHOSCOPY^^^^^^C
"DATA",64.061,1054,0)
PRE CARDIOVERSION^^^^^^C
"DATA",64.061,1055,0)
PRE CONSCIOUS SEDATION^^^^^^C
"DATA",64.061,1056,0)
PRE INHALATION THERAPY^^^^^^C
"DATA",64.061,1057,0)
RESTING^^^^^^C
"DATA",64.061,1060,0)
POST XXX CHALLENGE^^^^^^C
"DATA",64.061,1062,0)
CORRECTED FOR NUCLEATED ERYTHROCYTES^^^^^^A
"DATA",64.061,1063,0)
CORRECTED FOR SURFACE AREA^^^^^^A
"DATA",64.061,1064,0)
HEMATOCRIT ADJUSTED^^^^^^A
"DATA",64.061,1065,0)
NORMALIZED TO 1.72 BODY SURFACE^^^^^^A
"DATA",64.061,1066,0)
FETUS^FETUS^^^^^S^from LOINC system list^11
"DATA",64.061,1067,0)
MUSHROOM SPECIMEN^^^^^^S
"DATA",64.061,1068,0)
NEWBORN^NEWBORN^^^^^S^from LOINC system list^11
"DATA",64.061,1069,0)
PLANT SPECIMEN^PLANT^^^^^S
"DATA",64.061,1070,0)
POPULATION DISTRIBUTION^POPULATION DISTRIBUTION^^^^^S^from LOINC system list^11
"DATA",64.061,1072,0)
ASTERISK^*^^^^^S^Life of the unit BB^8
"DATA",64.061,1073,0)
QUESTION MARK^? ^^^^^S^from LOINC system list
"DATA",64.061,1074,0)
ABDOMEN^ABDOMEN^^^^^S^from LOINC system list
"DATA",64.061,1075,0)
ABDOMEN.MID^ABDOMEN.MID^^^^^S^from LOINC system list
"DATA",64.061,1076,0)
ABDOMINAL WALL^ABDOMINAL WALL^^^^^S^from LOINC system list
"DATA",64.061,1077,0)
ALLERGIC & IMMUNOLOGIC^ALLERGIC & IMMUNOLOGIC^^^^^S^from LOINC system list
"DATA",64.061,1078,0)
AMNIOTIC FLUID.QUADRANT FOUR^AMNIOTIC FLUID.QUADRANT FOUR^^^^^S^from LOINC system list
"DATA",64.061,1079,0)
AMNIOTIC FLUID.QUADRANT ONE^AMNIOTIC FLUID.QUADRANT ONE^^^^^S^from LOINC system list
"DATA",64.061,1080,0)
AMNIOTIC FLUID.QUADRANT THREE^AMNIOTIC FLUID.QUADRANT THREE^^^^^S^from LOINC system list
"DATA",64.061,1081,0)
AMNIOTIC FLUID.QUADRANT TWO^AMNIOTIC FLUID.QUADRANT TWO^^^^^S^from LOINC system list
"DATA",64.061,1082,0)
Anus^ANUS^^^^^S^from LOINC system list^10
"DATA",64.061,1083,0)
ANKLE^ANKLE^^^^^S^from LOINC system list
"DATA",64.061,1084,0)
AORTA^AORTA^^^^^S^from LOINC system list
"DATA",64.061,1085,0)
AORTA ASCENDING^AORTA ASCENDING^^^^^S^from LOINC system list
"DATA",64.061,1086,0)
AORTA DESCENDING^AORTA DESCENDING^^^^^S^from LOINC system list
"DATA",64.061,1087,0)
AORTA.ABDOMINAL.DISTAL^AORTA.ABDOMINAL.DISTAL^^^^^S^from LOINC system list
"DATA",64.061,1088,0)
AORTA.ABDOMINAL.PROXIMAL^AORTA.ABDOMINAL.PROXIMAL^^^^^S^from LOINC system list
"DATA",64.061,1089,0)
AORTA.THORACIC.ASCENDING^AORTA.THORACIC.ASCENDING^^^^^S^from LOINC system list
"DATA",64.061,1090,0)
AORTA.THORACIC.DESCENDING^AORTA.THORACIC.DESCENDING^^^^^S^from LOINC system list
"DATA",64.061,1091,0)
AORTA.THORACIC.PROXIMAL ASCENDING^AORTA.THORACIC.PROXIMAL ASCENDING^^^^^S^from LOINC system list
"DATA",64.061,1092,0)
AORTIC ARCH^AORTIC ARCH^^^^^S^from LOINC system list
"DATA",64.061,1093,0)
AORTIC ROOT^AORTIC ROOT^^^^^S^from LOINC system list
"DATA",64.061,1094,0)
ARM,UPPER^ARM.UPPER^^^^^S^from LOINC system list
"DATA",64.061,1095,0)
ARTERIAL SYSTEM^ARTERIAL SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1096,0)
ARTIFICIAL CARDIAC PACEMAKER^ARTIFICIAL CARDIAC PACEMAKER^^^^^S^from LOINC system list
"DATA",64.061,1097,0)
ATRIUM.LEFT^ATRIUM.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1098,0)
ATRIUM.RIGHT^ATRIUM.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1099,0)
ATRIUM.RIGHT.HIGH^ATRIUM.RIGHT.HIGH^^^^^S^from LOINC system list
"DATA",64.061,1100,0)
ATRIUM.RIGHT.LOW^ATRIUM.RIGHT.LOW^^^^^S^from LOINC system list
"DATA",64.061,1101,0)
ATRIUM.RIGHT.MID^ATRIUM.RIGHT.MID^^^^^S^from LOINC system list
"DATA",64.061,1102,0)
AXILLA^AXILLA^^^^^S^from LOINC system list
"DATA",64.061,1103,0)
AXILLARY^AXILLARY^^^^^S^from LOINC system list
"DATA",64.061,1104,0)
BACK^BACK^^^^^S^from LOINC system list
"DATA",64.061,1105,0)
BILIARY DRAIN^BILIARY DRAIN^^^^^S^from LOINC system list
"DATA",64.061,1106,0)
BILIARY TRACT^BILIARY TRACT^^^^^S^from LOINC system list
"DATA",64.061,1107,0)
BLADDER^BLADDER^^^^^S^from LOINC system list
"DATA",64.061,1108,0)
BLD/MAR^BLD/MAR^^^^^S^from LOINC system list
"DATA",64.061,1109,0)
Blood-peripheral^BLDP^^^^^S^Blood peripheral^10
"DATA",64.061,1110,0)
BLOOD PRESSURE DEVICE^BLOOD PRESSURE DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1111,0)
BODY TEMPERATURE DEVICE^BODY TEMPERATURE DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1112,0)
BOWEL^BOWEL^^^^^S^from LOINC system list
"DATA",64.061,1113,0)
BRACHIAL ARTERY^BRACHIAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1114,0)
BRACHIAL ARTERY.LEFT^BRACHIAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1115,0)
BRACHIAL ARTERY.RIGHT^BRACHIAL ARTERY.RIGHT^^^^^S^from LOINC system file
"DATA",64.061,1116,0)
BRAIN^BRAIN^^^^^S^from LOINC system list^10
"DATA",64.061,1117,0)
BREASTS^BREASTS^^^^^S^From LOINC system list
"DATA",64.061,1118,0)
BREATH RATE DEVICE^BREATH RATE DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1119,0)
BREATH RATE MEASUREMENT^BREATH RATE MEASUREMENT^^^^^S^from LOINC system list
"DATA",64.061,1120,0)
BUTTOCKS^BUTTOCKS^^^^^S^from LOINC system list
"DATA",64.061,1121,0)
CALF^CALF^^^^^S^from LOINC system list
"DATA",64.061,1122,0)
CALF.LEFT^CALF.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1123,0)
CALF.RIGHT^CALF.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1124,0)
CAPILLARY BED^CAPILLARY BED^^^^^S^from LOINC system list
"DATA",64.061,1125,0)
CARDIAC APEX^CARDIAC APEX^^^^^S^from LOINC system list
"DATA",64.061,1126,0)
CARDIAC ATRIA^CARDIAC ATRIA^^^^^S^from LOINC system list
"DATA",64.061,1127,0)
CARDIAC ATRIUM.LEFT^CARDIAC ATRIUM.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1128,0)
CARDIAC ATRIUM.RIGHT^CARDIAC ATRIUM.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1129,0)
CARDIAC MEASUREMENT DEVICE^CARDIAC MEASUREMENT DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1130,0)
CARDIAC PACEMAKER PROSTHETIC DEVICE^CARDIAC PACEMAKER PROSTHETIC DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1131,0)
CARDIAC PACEMAKER PROSTHETIC LEAD^CARDIAC PACEMAKER PROSTHETIC LEAD^^^^^S^from LOINC system list
"DATA",64.061,1132,0)
CARDIAC VENTRICLE^CARDIAC VENTRICLE^^^^^S^from LOINC system list
"DATA",64.061,1133,0)
CARDIAC VENTRICLE.LEFT^CARDIAC VENTRICLE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1134,0)
CARDIAC VENTRICLE.OUTFLOW TRACT.LEFT^CARDIAC VENTRICLE.OUTFLOW TRACT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1135,0)
CARDIAC VENTRICLE.OUTFLOW TRACT.RIGHT^CARDIAC VENTRICLE.OUTFLOW TRACT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1136,0)
CARDIAC VENTRICLE.RIGHT^CARDIAC VENTRICLE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1137,0)
CARDIAC VENTRICLES^CARDIAC VENTRICLES^^^^^S^from LOINC system list
"DATA",64.061,1138,0)
CARDIOVASCULAR SYSTEM^CARDIOVASCULAR SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1139,0)
CAROTID ARTERY.LEFT^CAROTID ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1140,0)
CAROTID ARTERY.RIGHT^CAROTID ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1141,0)
CELIAC TRUNK ARTERY^CELIAC TRUNK ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1142,0)
CEREBELLUM^CEREBELLUM^^^^^S^from LOINC system list
"DATA",64.061,1143,0)
CEREBRAL ARTERY ANTERIOR^CEREBRAL ARTERY ANTERIOR^^^^^S^from LOINC system list
"DATA",64.061,1144,0)
CEREBRAL ARTERY MIDDLE^CEREBRAL ARTERY MIDDLE^^^^^S^from LOINC system list
"DATA",64.061,1145,0)
CEREBRAL VENTRICLES^CEREBRAL VENTRICLES^^^^^S^from LOINC system list
"DATA",64.061,1146,0)
CEREBRUM^CEREBRUM^^^^^S^from LOINC system list
"DATA",64.061,1147,0)
CERVICAL CANAL^CERVICAL CANAL^^^^^S^from LOINC system list
"DATA",64.061,1148,0)
CERVICAL CANAL.EXTERNAL OS^CERVICAL CANAL.EXTERNAL OS^^^^^S^from LOINC system list
"DATA",64.061,1149,0)
CERVICAL CANAL.INTERNAL OS^CERVICAL CANAL.INTERNAL OS^^^^^S^from LOINC system list
"DATA",64.061,1150,0)
CERVIX.EXTERNALLY PALPABLE SURFACE^CERVIX.EXTERNALLY PALPABLE SURFACE^^^^^S^from LOINC system list
"DATA",64.061,1151,0)
CHEST^CHEST^^^^^S^from LOINC system list
"DATA",64.061,1152,0)
CHEST TUBE^CHEST TUBE^^^^^S^from LOINC system list
"DATA",64.061,1153,0)
CHEST WALL^CHEST WALL^^^^^S^from LOINC system list
"DATA",64.061,1154,0)
CIRCULATORY SYSTEM^CIRCULATORY SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1155,0)
CISTERNA MAGNA^CISTERNA MAGNA^^^^^S^from LOINC system list
"DATA",64.061,1156,0)
CLAVICLE.DIAPHYSIS^CLAVICLE.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1157,0)
COLON^COLON^^^^^S^from LOINC system list
"DATA",64.061,1158,0)
COLON.LUMEN^COLON.LUMEN^^^^^S^from LOINC system list
"DATA",64.061,1159,0)
CORE^CORE^^^^^S^from LOINC system list
"DATA",64.061,1160,0)
CORONARY SINUS^CORONARY SINUS^^^^^S^from LOINC system list
"DATA",64.061,1161,0)
CRANIUM^CRANIUM^^^^^S^from LOINC system list
"DATA",64.061,1162,0)
Cornea^CRN^^^^^S^from LOINC system list^10
"DATA",64.061,1163,0)
CSF+PLAS^CSF+PLAS^^^^^S^from LOINC system list
"DATA",64.061,1164,0)
CSF+SER^CSF+SER^^^^^S^from LOINC system list
"DATA",64.061,1165,0)
DEEP TENDON REFLEXES^DEEP TENDON REFLEXES^^^^^S^from LOINC system list
"DATA",64.061,1166,0)
Dentin^DENTIN^^^^^S^from LOINC system list^10
"DATA",64.061,1167,0)
Peritoneal Dialysis fluid^DIAFP^^^^^S^from LOINC system list^10
"DATA",64.061,1168,0)
DIAPHRAGM^DIAPHRAGM^^^^^S^from LOINC system list
"DATA",64.061,1169,0)
DIGITAL ARTERY.LEFT^DIGITAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1170,0)
DIGITAL ARTERY.RIGHT^DIGITAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1171,0)
DORSAL PEDAL ARTERY^DORSAL PEDAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1172,0)
DORSAL PEDAL ARTERY.LEFT^DORSAL PEDAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1173,0)
DORSAL PEDAL ARTERY.RIGHT^DORSAL PEDAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1174,0)
DORSAL PEDIS ARTERY.LEFT^DORSAL PEDIS ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1175,0)
DORSAL PENILE ARTERY^DORSAL PENILE ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1176,0)
DORSALIS PEDIS ARTERY^DORSALIS PEDIS ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1177,0)
DUCTAL ARCH^DUCTAL ARCH^^^^^S^from LOINC system list
"DATA",64.061,1178,0)
DUCTUS ARTERIOSIS^DUCTUS ARTERIOSIS^^^^^S^from LOINC system list
"DATA",64.061,1179,0)
DUCTUS ARTERIOSUS^DUCTUS ARTERIOSUS^^^^^S^from LOINC system list
"DATA",64.061,1180,0)
DUFL/GAST^DUFL/GAST^^^^^S^from LOINC system list
"DATA",64.061,1181,0)
EARS & NOSE & MOUTH & THROAT^EARS & NOSE & MOUTH & THROAT^^^^^S^from LOINC system list
"DATA",64.061,1182,0)
EARS & NOSE & SINUSES & MOUTH & THR^EARS & NOSE & SINUSES & MOUTH & THR^^^^^S^from LOINC system list
"DATA",64.061,1183,0)
EGG YOLK^EGG YOLK^^^^^S^from LOINC system list
"DATA",64.061,1184,0)
EKG DEVICE^EKG DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1185,0)
EKG LEADS^EKG LEADS^^^^^S^from LOINC system list
"DATA",64.061,1186,0)
ELBOW^ELBOW^^^^^S^from LOINC system list
"DATA",64.061,1187,0)
EMS SYSTEM^EMS SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1188,0)
ENDOCRINE SYSTEM^ENDOCRINE SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1189,0)
ENEMA DEVICE^ENEMA DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1190,0)
ENTERAL TUBE^ENTERAL TUBE^^^^^S^from LOINC system list
"DATA",64.061,1191,0)
EXTREMITIES^EXTREMITIES^^^^^S^from LOINC system list
"DATA",64.061,1192,0)
EYE.LEFT^EYE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1193,0)
EYE.RIGHT^EYE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1194,0)
EYES^EYES^^^^^S^from LOINC system list
"DATA",64.061,1195,0)
FACE^FACE^^^^^S^from LOINC system list
"DATA",64.061,1196,0)
FAMILY^FAMILY^^^^^S^from LOINC system list
"DATA",64.061,1197,0)
FEMORAL ARTERY^FEMORAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1198,0)
FEMORAL ARTERY.LEFT^FEMORAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1199,0)
FEMORAL ARTERY.RIGHT^FEMORAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1200,0)
FEMUR.DIAPHYSIS^FEMUR.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1201,0)
FETAL BODY WEIGHT ESTIMATION FORMULA^FETAL BODY WEIGHT ESTIMATION FORMULA^^^^^S^from LOINC system list
"DATA",64.061,1202,0)
FIBULA.DIAPHYSIS^FIBULA.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1203,0)
FLU.NONBIOLOGICAL^FLU.NONBIOLOGICAL^^^^^S^from LOINC system list
"DATA",64.061,1204,0)
FLUID INTAKE INTRAVASCULAR SUBSTANCE^FLUID INTAKE INTRAVASCULAR SUBSTANCE^^^^^S^from LOINC system list
"DATA",64.061,1205,0)
FLUID INTAKE SUBSTANCE^FLUID INTAKE SUBSTANCE^^^^^S^from LOINC system list
"DATA",64.061,1206,0)
FOLLICLE^FOLLICLE^^^^^S^from LOINC system list
"DATA",64.061,1207,0)
Food sample^FOOD^^^^^S^from LOINC system list^10
"DATA",64.061,1208,0)
FOOT^FOOT^^^^^S^from LOINC system list
"DATA",64.061,1209,0)
FOOT.LEFT^FOOT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1210,0)
FOOT.RIGHT^FOOT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1211,0)
FOREARM^FOREARM^^^^^S^from LOINC system list
"DATA",64.061,1212,0)
FORMULA^FORMULA^^^^^S^from LOINC system list
"DATA",64.061,1213,0)
GASTROINTESTINAL SYSTEM^GASTROINTESTINAL SYSTEM^^^^^S
"DATA",64.061,1214,0)
GASTROSTOMY TUBE^GASTROSTOMY TUBE^^^^^S^from LOINC system list
"DATA",64.061,1215,0)
Genital fluid^GENF^^^^^S^from LOINC system list^10
"DATA",64.061,1216,0)
GENITALIA^GENITALIA^^^^^S^from LOINC system list
"DATA",64.061,1217,0)
GENITALIA.FEMALE^GENITALIA.FEMALE^^^^^S^from LOINC system list
"DATA",64.061,1218,0)
GENITALIA.MALE^GENITALIA.MALE^^^^^S^from LOINC system list
"DATA",64.061,1219,0)
GENITOURINARY SYSTEMS^GENITOURINARY SYSTEMS^^^^^S^from LOINC system list
"DATA",64.061,1220,0)
GENITOURINARY TRACT^GENITOURINARY TRACT^^^^^S^from LOINC system list
"DATA",64.061,1221,0)
Genital Mucus^GENM^^^^^S^from LOINC system list^10
"DATA",64.061,1222,0)
GESTATIONAL AGE ESTIMATION FORMULA^GESTATIONAL AGE ESTIMATION FORMULA^^^^^S^from LOINC system list
"DATA",64.061,1223,0)
GESTATIONAL SAC^GESTATIONAL SAC^^^^^S^from LOINC system list
"DATA",64.061,1224,0)
GI TUBE^GI TUBE^^^^^S^from LOINC system list
"DATA",64.061,1225,0)
GREAT TOE ARTERIES.LEFT^GREAT TOE ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1226,0)
GREAT TOE ARTERIES.RIGHT^GREAT TOE ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1227,0)
GROIN^GROIN^^^^^S^from LOINC system list
"DATA",64.061,1228,0)
HAND^HAND^^^^^S^from LOINC system list
"DATA",64.061,1229,0)
HEAD^HEAD^^^^^S^from LOINC system list
"DATA",64.061,1230,0)
HEAD.CHOROID PLEXUS^HEAD.CHOROID PLEXUS^^^^^S^from LOINC system list
"DATA",64.061,1231,0)
HEAD.FOURTH VENTRICLE^HEAD.FOURTH VENTRICLE^^^^^S^from LOINC system list
"DATA",64.061,1232,0)
HEAD.INTRACRANIAL ANATOMY^HEAD.INTRACRANIAL ANATOMY^^^^^S^from LOINC system list
"DATA",64.061,1233,0)
HEAD.LATERAL CEREBRAL VENTRICLES^HEAD.LATERAL CEREBRAL VENTRICLES^^^^^S^from LOINC system list
"DATA",64.061,1234,0)
HEAD.POSTERIOR FOSSA^HEAD.POSTERIOR FOSSA^^^^^S^from LOINC system list
"DATA",64.061,1235,0)
HEAD.THIRD VENTRICLE^HEAD.THIRD VENTRICLE^^^^^S^from LOINC system list
"DATA",64.061,1236,0)
HEART^HEART^^^^^S^from LOINC system list
"DATA",64.061,1237,0)
HEART RATE DEVICE^HEART RATE DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1238,0)
HEART RATE MEASURE^HEART RATE MEASURE^^^^^S^from LOINC system list
"DATA",64.061,1239,0)
HEART STUDY^HEART STUDY^^^^^S^from LOINC system list
"DATA",64.061,1240,0)
HEART.AORTIC VALVE^HEART.AORTIC VALVE^^^^^S^from LOINC system list
"DATA",64.061,1241,0)
HEART.ATRIA^HEART.ATRIA^^^^^S^from LOINC system list
"DATA",64.061,1242,0)
HEART.CHAMBERS^HEART.CHAMBERS^^^^^S^from LOINC system list
"DATA",64.061,1243,0)
HEART.GREAT VESSELS^HEART.GREAT VESSELS^^^^^S^from LOINC system list
"DATA",64.061,1244,0)
HEART.INTRAVENTRICULAR SEPTUM^HEART.INTRAVENTRICULAR SEPTUM^^^^^S^from LOINC system list
"DATA",64.061,1245,0)
HEART.MITRAL VALVE^HEART.MITRAL VALVE^^^^^S^from LOINC system list
"DATA",64.061,1246,0)
HEART.PULMONARY VALVE^HEART.PULMONARY VALVE^^^^^S^from LOINC system list
"DATA",64.061,1247,0)
HEART.TRICUSPID VALVE^HEART.TRICUSPID VALVE^^^^^S^from LOINC system list
"DATA",64.061,1248,0)
HEART.VALVES^HEART.VALVES^^^^^S^from LOINC system list
"DATA",64.061,1249,0)
HEART.VENTRICLE.LEFT^HEART.VENTRICLE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1250,0)
HEART.VENTRICLE.POSTERIOR WALL.LEFT^HEART.VENTRICLE.POSTERIOR WALL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1251,0)
HEART.VENTRICULAR OUTFLOW TRACT.LEFT^HEART.VENTRICULAR OUTFLOW TRACT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1252,0)
HEART.VENTRICULAR OUTFLOW TRACT.RIGHT^HEART.VENTRICULAR OUTFLOW TRACT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1253,0)
HEMATOLOGIC SYSTEM^HEMATOLOGIC SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1254,0)
HEMODYNAMIC METHOD^HEMODYNAMIC METHOD^^^^^S^from LOINC system list
"DATA",64.061,1255,0)
HEPATIC ARTERY^HEPATIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1256,0)
HEPATIC ARTERY.WEDGE^HEPATIC ARTERY.WEDGE^^^^^S^from LOINC system list
"DATA",64.061,1257,0)
HIP^HIP^^^^^S^from LOINC system list
"DATA",64.061,1258,0)
HISTORY TAKER^HISTORY TAKER^^^^^S^from LOINC system list
"DATA",64.061,1259,0)
HUMERUS.DIAPHYSIS^HUMERUS.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1260,0)
ILIAC ARTERY.LEFT^ILIAC ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1261,0)
ILIAC ARTERY.RIGHT^ILIAC ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1262,0)
INCUBATOR.PEDIATRIC^INCUBATOR.PEDIATRIC^^^^^S^from LOINC system list
"DATA",64.061,1263,0)
INDEX FINGER ARTERIES.LEFT^INDEX FINGER ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1264,0)
INDEX FINGER ARTERIES.RIGHT^INDEX FINGER ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1265,0)
INFERIOR VENA CAVA^INFERIOR VENA CAVA^^^^^S^from LOINC system list
"DATA",64.061,1266,0)
INTEGUMENTARY SYSTEM^INTEGUMENTARY SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1267,0)
INTERVIEWEE^INTERVIEWEE^^^^^S^from LOINC system list
"DATA",64.061,1268,0)
INTESTINE^INTESTINE^^^^^S^from LOINC system list
"DATA",64.061,1269,0)
INTRAVASCULAR^INTRAVASCULAR^^^^^S^from LOINC system list
"DATA",64.061,1270,0)
INTRAVASCULAR SPACE.XXX^INTRAVASCULAR SPACE.XXX^^^^^S^from LOINC system list
"DATA",64.061,1271,0)
INTRAVASCULAR TUBE^INTRAVASCULAR TUBE^^^^^S^from LOINC system list
"DATA",64.061,1272,0)
IO TUBE^IO TUBE^^^^^S^from LOINC system list
"DATA",64.061,1273,0)
ISLT+SER^ISLT+SER^^^^^S^from LOINC system list
"DATA",64.061,1274,0)
JUGULAR VEIN^JUGULAR VEIN^^^^^S^from LOINC system list
"DATA",64.061,1275,0)
KIDNEY^KIDNEY^^^^^S^from LOINC system list
"DATA",64.061,1276,0)
KIDNEY.LEFT^KIDNEY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1277,0)
KIDNEY.RIGHT^KIDNEY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1278,0)
KNEE^KNEE^^^^^S^from LOINC system list
"DATA",64.061,1279,0)
LEAD AVF^LEAD AVF^^^^^S^from LOINC system list
"DATA",64.061,1280,0)
LEAD AVL^LEAD AVL^^^^^S^from LOINC system list
"DATA",64.061,1281,0)
LEAD AVR^LEAD AVR^^^^^S^from LOINC system list
"DATA",64.061,1282,0)
LEAD I^LEAD I^^^^^S^from LOINC system list
"DATA",64.061,1283,0)
LEAD II^LEAD II^^^^^S^from LOINC system list
"DATA",64.061,1284,0)
LEAD III^LEAD III^^^^^S^from LOINC system list
"DATA",64.061,1285,0)
LEAD V1^LEAD V1^^^^^S^from LOINC system list
"DATA",64.061,1286,0)
LEAD V2^LEAD V2^^^^^S^from LOINC system list
"DATA",64.061,1287,0)
LEAD V3^LEAD V3^^^^^S^from LOINC system list
"DATA",64.061,1288,0)
LEAD V4^LEAD V4^^^^^S^from LOINC system list
"DATA",64.061,1289,0)
LEAD V5^LEAD V5^^^^^S^from LOINC system list
"DATA",64.061,1290,0)
LEAD V6^LEAD V6^^^^^S^from LOINC system list
"DATA",64.061,1291,0)
LIMBS^LIMBS^^^^^S^from LOINC system list
"DATA",64.061,1292,0)
LITTLE FINGER ARTERIES.LEFT^LITTLE FINGER ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1293,0)
LITTLE FINGER ARTERIES.RIGHT^LITTLE FINGER ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1294,0)
LIVER^LIVER^^^^^S^from LOINC system list
"DATA",64.061,1295,0)
LOWER GI TRACT^LOWER GI TRACT^^^^^S^from LOINC system list
"DATA",64.061,1296,0)
MEASUREMENT^MEASUREMENT^^^^^S^from LOINC system list
"DATA",64.061,1297,0)
MESENTERIC ARTERY^MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1298,0)
MESENTERIC INFERIOR ARTERY^MESENTERIC INFERIOR ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1299,0)
MESENTERIC SUPERIOR ARTERY^MESENTERIC SUPERIOR ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1300,0)
MIDDLE FINGER ARTERIES.LEFT^MIDDLE FINGER ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1301,0)
MIDDLE FINGER ARTERIES.RIGHT^MIDDLE FINGER ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1302,0)
MOUTH^MOUTH^^^^^S^from LOINC system list
"DATA",64.061,1303,0)
MOUTH & THROAT & TEETH^MOUTH & THROAT & TEETH^^^^^S^from LOINC system list
"DATA",64.061,1304,0)
MUSCULOSKELETAL SYSTEM^MUSCULOSKELETAL SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1305,0)
NASOGASTRIC TUBE^NASOGASTRIC TUBE^^^^^S^from LOINC system list
"DATA",64.061,1306,0)
NECK^NECK^^^^^S^from LOINC system list
"DATA",64.061,1307,0)
NEUROLOGIC SYSTEM^NEUROLOGIC SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1308,0)
NOS/TRAC^NOS/TRAC^^^^^S^from LOINC system list
"DATA",64.061,1309,0)
NUCHAL FOLD^NUCHAL FOLD^^^^^S^from LOINC system list
"DATA",64.061,1310,0)
OB ULTRASOUND IMAGING DEVICE^OB ULTRASOUND IMAGING DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1311,0)
ORAL CAVITY^ORAL CAVITY^^^^^S^from LOINC system list
"DATA",64.061,1312,0)
ORAL TUBE^ORAL TUBE^^^^^S^from LOINc system list
"DATA",64.061,1313,0)
OVARIAN ARTERY.LEFT^OVARIAN ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1314,0)
OVARIAN ARTERY.RIGHT^OVARIAN ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1315,0)
OVARY.LARGEST FOLLICLE^OVARY.LARGEST FOLLICLE^^^^^S^from LOINC system list
"DATA",64.061,1316,0)
OVARY.LEFT^OVARY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1317,0)
OVARY.LEFT.LARGEST FOLLICLE^OVARY.LEFT.LARGEST FOLLICLE^^^^^S^from LOINC system list
"DATA",64.061,1318,0)
OVARY.RIGHT^OVARY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1319,0)
OVARY.RIGHT.LARGEST FOLLICLE^OVARY.RIGHT.LARGEST FOLLICLE^^^^^S^from LOINC system list
"DATA",64.061,1320,0)
OXYGEN SATURATION DEVICE^OXYGEN SATURATION DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1321,0)
Pericardial Fluid^PCAR^^^^^S^from LOINC system list^10
"DATA",64.061,1322,0)
PELVIS^PELVIS^^^^^S^from LOINC system list
"DATA",64.061,1323,0)
Penis^PEN^^^^^S^from LOINC system list^10
"DATA",64.061,1324,0)
PENILE CAVERNOSAL ARTERY^PENILE CAVERNOSAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1325,0)
PERICARDIAL SPACE^PERICARDIAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,1326,0)
PERIPHERAL ARTERY^PERIPHERAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1327,0)
PERIPHERAL VASCULAR SYSTEM^PERIPHERAL VASCULAR SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1328,0)
PERITONEAL DRAIN^PERITONEAL DRAIN^^^^^S^from LOINC system list
"DATA",64.061,1329,0)
PERITONEAL SPACE^PERITONEAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,1330,0)
PERITONEAL TUBE^PERITONEAL TUBE^^^^^S^from LOINC system list
"DATA",64.061,1331,0)
PLAS+UR^PLAS+UR^^^^^S^from LOINC system list
"DATA",64.061,1332,0)
PLAS/RBC^PLAS/RBC^^^^^S^from LOINC system list
"DATA",64.061,1333,0)
PLEURAL SPACE^PLEURAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,1334,0)
POPLATEAL ARTERY.LEFT^POPLATEAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1335,0)
POPLATEAL ARTERY.RIGHT^POPLATEAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1336,0)
POSTERIOR TIBIAL ARTERY^POSTERIOR TIBIAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1338,0)
POSTERIOR TIBIAL ARTERY.LEFT^POSTERIOR TIBIAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1339,0)
POSTERIOR TIBIAL ARTERY.RIGHT^POSTERIOR TIBIAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1340,0)
PROSTATE^PROSTATE^^^^^S^from LOINC system list
"DATA",64.061,1341,0)
PROSTATE.ADENOMA^PROSTATE.ADENOMA^^^^^S^from LOINC system list
"DATA",64.061,1342,0)
PROVIDER^PROVIDER^^^^^S^from LOINC system list
"DATA",64.061,1343,0)
PSYCHIATRIC^PSYCHIATRIC^^^^^S^from LOINC system list
"DATA",64.061,1344,0)
PULMONARY ARTERY^PULMONARY ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1345,0)
PULMONARY ARTERY.LEFT^PULMONARY ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1346,0)
PULMONARY ARTERY.MAIN^PULMONARY ARTERY.MAIN^^^^^S^from LOINC system list
"DATA",64.061,1347,0)
PULMONARY ARTERY.RIGHT^PULMONARY ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1348,0)
PULMONARY ARTERY.WEDGE^PULMONARY ARTERY.WEDGE^^^^^S^from LOINC system list
"DATA",64.061,1349,0)
PULMONARY VASCULATURE^PULMONARY VASCULATURE^^^^^S^from LOINC system list
"DATA",64.061,1350,0)
PULMONARY VEIN^PULMONARY VEIN^^^^^S^from LOINC system list
"DATA",64.061,1351,0)
PULMONARY WEDGE^PULMONARY WEDGE^^^^^S^from LOINC system list
"DATA",64.061,1352,0)
RADIAL ARTERY^RADIAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1353,0)
RADIAL ARTERY.LEFT^RADIAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1354,0)
RADIAL ARTERY.RIGHT^RADIAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1355,0)
RADIUS.DIAPHYSIS^RADIUS.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1356,0)
RATE CONTROL^RATE CONTROL^^^^^S^from LOINC system list
"DATA",64.061,1357,0)
RATE CONTROL DEVICE^RATE CONTROL DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1358,0)
RECTUM^RECTUM^^^0070^^S^from LOINC system list
"DATA",64.061,1359,0)
REFERRAL SOURCE^REFERRAL SOURCE^^^^^S^from LOINC system list
"DATA",64.061,1360,0)
RENAL ARTERY.LEFT^RENAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1361,0)
RENAL ARTERY.RIGHT^RENAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1362,0)
RENAL PELVIS.LEFT^RENAL PELVIS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1363,0)
RENAL PELVIS.RIGHT^RENAL PELVIS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1364,0)
REPORT^REPORT^^^^^S^from LOINC system list
"DATA",64.061,1365,0)
REPRODUCTIVE SYSTEM^REPRODUCTIVE SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1366,0)
RESPIRATORY SYSTEM^RESPIRATORY SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1367,0)
RETINAL ARTERY.LEFT^RETINAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1368,0)
RETINAL ARTERY.RIGHT^RETINAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1369,0)
RING FINGER ARTERIES.LEFT^RING FINGER ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1370,0)
RING FINGER ARTERIES.RIGHT^RING FINGER ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1371,0)
SAL+SER^SAL+SER^^^^^S^from LOINC system list
"DATA",64.061,1372,0)
SER+CSF^SER+CSF^^^^^S^from LOINC system list
"DATA",64.061,1373,0)
SER+PROSTATE^SER+PROSTATE^^^^^S^from LOINC system list
"DATA",64.061,1374,0)
SER+STL^SER+STL^^^^^S^from LOINC system list
"DATA",64.061,1375,0)
SER/BLD^SER/BLD^^^^^S^from LOINC system list
"DATA",64.061,1376,0)
SER/PLAS^SER/PLAS^SER^^^^S^from LOINC system list
"DATA",64.061,1377,0)
SER/PLAS/BLD^SER/PLAS/BLD^^^^^S^from LOINC system list
"DATA",64.061,1378,0)
SHOULDER^SHOULDER^^^^^S^from LOINC system list
"DATA",64.061,1379,0)
SMALL BOWEL^SMALL BOWEL^^^^^S^from LOINC system list
"DATA",64.061,1380,0)
SMN+CVM^SMN+CVM^^^^^S^from LOINC system list
"DATA",64.061,1381,0)
Seminal Plasma^SMPLS^^^^^S^from LOINC system list
"DATA",64.061,1382,0)
SPINAL SUBARACHNOID SPACE^SPINAL SUBARACHNOID SPACE^^^^^S^from LOINC system list
"DATA",64.061,1383,0)
SPINE^SPINE^^^^^S^from LOINC system list
"DATA",64.061,1384,0)
SPLENIC ARTERY^SPLENIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1385,0)
SPT/BRO^SPT/BRO^^^^^S^from LOINC system list
"DATA",64.061,1386,0)
STOMACH^STOMACH^^^^^S^from LOINC system list
"DATA",64.061,1387,0)
STOOL COLLECTION DEVICE^STOOL COLLECTION DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1388,0)
SUBCLAVIAN VEIN.LEFT^SUBCLAVIAN VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1389,0)
SUBCLAVIAN VEIN.RIGHT^SUBCLAVIAN VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1390,0)
SUBRACHNOID DRAIN^SUBRACHNOID DRAIN^^^^^S^from LOINC system list
"DATA",64.061,1391,0)
SUPERIOR VENA CAVA^SUPERIOR VENA CAVA^^^^^S^from LOINC system list
"DATA",64.061,1392,0)
SURG^SURG^^^^^S^from LOINC system list
"DATA",64.061,1393,0)
SURGERY^SURGERY^^^^^S^from LOINC system list
"DATA",64.061,1394,0)
SURGICAL SITE^SURGICAL SITE^^^^^S^from LOINC system list
"DATA",64.061,1395,0)
SYNOVIAL DRAIN^SYNOVIAL DRAIN^^^^^S^from LOINC system list
"DATA",64.061,1396,0)
SYNOVIAL SPACE^SYNOVIAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,1397,0)
SYSTEMIC VASCULATURE^SYSTEMIC VASCULATURE^^^^^S^from LOINC system list
"DATA",64.061,1398,0)
TESTIS.LEFT^TESTIS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1399,0)
TESTIS.RIGHT^TESTIS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1400,0)
THIGH^THIGH^^^^^S^from LOINC system list
"DATA",64.061,1401,0)
THIGH.LEFT^THIGH.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1402,0)
THIGH.RIGHT^THIGH.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1403,0)
THORAX^THORAX^^^^^S^from LOINC system list
"DATA",64.061,1404,0)
THORAX+LUNGS^THORAX+LUNGS^^^^^S^from LOINC system list
"DATA",64.061,1405,0)
THROAT+NECK^THROAT+NECK^^^^^S^from LOINC system list
"DATA",64.061,1406,0)
THUMB ARTERIES.LEFT^THUMB ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1407,0)
THUMB ARTERIES.RIGHT^THUMB ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1408,0)
TIBIA.DIAPHYSIS^TIBIA.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1409,0)
TISS.FNA^TISS.FNA^^^^^S^from LOINC system list
"DATA",64.061,1410,0)
TRICEPS^TRICEPS^^^^^S^from LOINC system list
"DATA",64.061,1411,0)
TRUNK^TRUNK^^^^^S^from LOINC system list
"DATA",64.061,1412,0)
TUBE/DRAIN^TUBE/DRAIN^^^^^S^from LOINC system list
"DATA",64.061,1413,0)
TYMPANIC MEMBRANE^TYMPANIC MEMBRANE^^^^^S^from LOINC system list
"DATA",64.061,1414,0)
ULNA.DIAPHYSIS^ULNA.DIAPHYSIS^^^^^S^from LOINC system list
"DATA",64.061,1415,0)
ULNAR ARTERY.LEFT^ULNAR ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1416,0)
ULNAR ARTERY.RIGHT^ULNAR ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1417,0)
UMBILICAL ARTERY^UMBILICAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,1418,0)
UMBILICAL ARTERY.AT FETUS^UMBILICAL ARTERY.AT FETUS^^^^^S^from LOINC system list
"DATA",64.061,1419,0)
UMBILICAL ARTERY.AT PLACENTA^UMBILICAL ARTERY.AT PLACENTA^^^^^S^from LOINC system list
"DATA",64.061,1420,0)
UMBILICAL ARTERY.BETWEEN FETUS AND PLACENTA^UMBILICAL ARTERY.BETWEEN FETUS AND PLACENTA^^^^^S^from LOINC system list
"DATA",64.061,1421,0)
UMBILICAL ARTERY.BETWEEN PLACENTA AND FETUS^UMBILICAL ARTERY.BETWEEN PLACENTA AND FETUS^^^^^S^from LOINC system list
"DATA",64.061,1422,0)
UMBILICAL CORD^UMBILICAL CORD^^^^^S^from LOINC system list
"DATA",64.061,1423,0)
UMBILICAL CORD.PLACENTA^UMBILICAL CORD.PLACENTA^^^^^S^from LOINC system list
"DATA",64.061,1424,0)
UMBILICAL VEIN^UMBILICAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,1425,0)
UPPER GI TRACT^UPPER GI TRACT^^^^^S^from LOINC system list
"DATA",64.061,1426,0)
UPPER GI TUBE^UPPER GI TUBE^^^^^S^from LOINC system list
"DATA",64.061,1427,0)
URINARY BLADDER^URINARY BLADDER^^^^^S^from LOINC system list
"DATA",64.061,1428,0)
URINARY BLADDER IRRIGATION TUBE^URINARY BLADDER IRRIGATION TUBE^^^^^S^from LOINC system list
"DATA",64.061,1429,0)
URINARY TRACT^URINARY TRACT^^^^^S^from LOINC system list
"DATA",64.061,1430,0)
URINE COLLECTION METHOD^URINE COLLECTION METHOD^^^^^S^from LOINC system list
"DATA",64.061,1431,0)
URINE TUBE^URINE TUBE^^^^^S^from LOINC system list
"DATA",64.061,1432,0)
UTERINE ARTERY.LEFT^UTERINE ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,1433,0)
UTERINE ARTERY.RIGHT^UTERINE ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,1434,0)
UTERUS^UTERUS^^^^^S^from LOINC system list
"DATA",64.061,1435,0)
VASCULAR SYSTEM^VASCULAR SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,1436,0)
VENA CAVA^VENA CAVA^^^^^S^from LOINC system list
"DATA",64.061,1437,0)
VENA CAVA. INFERIOR^VENA CAVA. INFERIOR^^^^^S^from LOINC system list
"DATA",64.061,1438,0)
VENA CAVA. SUPERIOR^VENA CAVA. SUPERIOR^^^^^S^from LOINC system list
"DATA",64.061,1439,0)
VENOUS.CENTRAL^VENOUS.CENTRAL^^^^^S^from LOINC system list
"DATA",64.061,1440,0)
VESSELS^VESSELS^^^^^S^from LOINC system list
"DATA",64.061,1441,0)
Vitreoud Fluid^VITF^^^^^S^from LOINC system list^10
"DATA",64.061,1442,0)
VOLUME.PLANIMETRY^VOLUME.PLANIMETRY^^^^^S^from LOINC system list
"DATA",64.061,1443,0)
WAIST^WAIST^^^^^S^from LOINC system list
"DATA",64.061,1444,0)
WEIGHING DEVICE^WEIGHING DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1445,0)
WOUND DRAIN DEVICE^WOUND DRAIN DEVICE^^^^^S^from LOINC system list
"DATA",64.061,1446,0)
WRIST^WRIST^^^^^S^from LOINC system list
"DATA",64.061,1447,0)
YOLK SAC^YOLK SAC^^^^^S^from LOINC system list
"DATA",64.061,1448,0)
ABXBACT^^^^^^^Antibiotic Susceptibility^18^7^C
"DATA",64.061,1449,0)
ALLERGY^^^^^^^Allergy tests^18^7^C
"DATA",64.061,1450,0)
BC^^^^^^^Cell counts^18^7^C
"DATA",64.061,1451,0)
BDYCRC.ATOM^^^^^^^Body dimension measurements^18^7^C
"DATA",64.061,1452,0)
BDYCRC.MOLEC^^^^^^^Body dimension measurements^18^7^C
"DATA",64.061,1453,0)
BDYHGT.ATOM^^^^^^^Body dimension measurements^18^7^C
"DATA",64.061,1454,0)
BDYHGT.MOLEC^^^^^^^Body dimension measurements^18^7^C
"DATA",64.061,1455,0)
BDYSURF.ATOM^^^^^^^Body surface area measurements^18^7^C
"DATA",64.061,1456,0)
BDYTMP.ATOM^^^^^^^Body temperature measurements^18^7^C
"DATA",64.061,1457,0)
BDYTMP.MOLEC^^^^^^^Body temperature measurements^18^7^C
"DATA",64.061,1458,0)
BDYTMP.TIMED.MOLE^^^^^^^Body temperature measurements^18^7^C
"DATA",64.061,1459,0)
BDYWGT.ATOM^^^^^^^Body weight measurements^18^7^C
"DATA",64.061,1460,0)
BDYWGT.MOLEC^^^^^^^Body weight measurements^18^7^C
"DATA",64.061,1461,0)
BLDBK^^^^^^^Blood bank^18^7^C
"DATA",64.061,1462,0)
BP.ATOM^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1463,0)
BP.CENT.MOLEC^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1464,0)
BP.MOLEC^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1465,0)
BP.PSTN.MOLEC^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1466,0)
BP.TIMED.MOLEC^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1467,0)
BP.VENOUS.MOLEC^^^^^^^Blood pressure measurements^18^7^C
"DATA",64.061,1468,0)
CHAL^^^^^^^Challenge Class
"DATA",64.061,1469,0)
CHALSKIN^^^^^^^Skin challenge tests^18^7^C
"DATA",64.061,1470,0)
CHEM^^^^^^^General chemistries^18^7^C
"DATA",64.061,1471,0)
CLIN^^^^^^^Clinical status^18^7^C
"DATA",64.061,1472,0)
COAG^^^^^^^Coagulation studies^18^7^C
"DATA",64.061,1473,0)
CYTO^^^^^^^Cytology studies^18^7^C
"DATA",64.061,1474,0)
DRUG^^^^^^^Drug levels^18^7^C
"DATA",64.061,1475,0)
DRUGDOSE^^^^^^^Drug dose^18^7^C
"DATA",64.061,1476,0)
ED^^^^^^^Emergency department^18^7^C
"DATA",64.061,1477,0)
EKG.ATOM^^^^^^^EKG measurements^18^7^C
"DATA",64.061,1478,0)
EKG.IMP^^^^^^^Electrocardiogram impression^18^7^C
"DATA",64.061,1479,0)
EKG.MEAS^^^^^^^Electrocardiogram measures^18^7^C
"DATA",64.061,1481,0)
FERT^^^^^^^Fertility tests^18^7^C
"DATA",64.061,1482,0)
FUNCTION^^^^^^^Functional status^18^7^C
"DATA",64.061,1483,0)
H&P^^^^^^^History and physical^18^7^C
"DATA",64.061,1484,0)
H&P.HX^^^^^^^^18^7^C
"DATA",64.061,1485,0)
H&P.PX^^^^^^^^18^7^C
"DATA",64.061,1486,0)
H&P.SURG PROC^^^^^^^^18^7^C
"DATA",64.061,1487,0)
HEM^^^^^^^Hematology tests^18^7^C
"DATA",64.061,1488,0)
HEMODYN.MOLEC^^^^^^^Hemodynamic measurements^18^7^C
"DATA",64.061,1489,0)
HEMODYN.ATOM^^^^^^^Hemodynamic measurements^18^7^C
"DATA",64.061,1490,0)
HLA^^^^^^^HLA tissure typing^18^7^C
"DATA",64.061,1491,0)
HRTRATE.ATOM^^^^^^^Heart rate measurements^18^7^C
"DATA",64.061,1492,0)
HRTRATE.MOLEC^^^^^^^Heart rate measurements^18^7^C
"DATA",64.061,1493,0)
HRTRATE.TIMED.MOL^^^^^^^^18^7^C
"DATA",64.061,1494,0)
IO.TUBE^^^^^^^^18^7^C
"DATA",64.061,1495,0)
IO_IN.ATOM^^^^^^^^18^7^C
"DATA",64.061,1496,0)
IO_IN.MOLEC^^^^^^^^18^7^C
"DATA",64.061,1497,0)
IO_IN.SUMMARY^^^^^^^^18^7^C
"DATA",64.061,1498,0)
IO_IN.TIMED.MOLEC^^^^^^^^18^7^C
"DATA",64.061,1499,0)
IO_IN_SALTS+CALS^^^^^^^^18^7^C
"DATA",64.061,1500,0)
IO_OUT.ATOM^^^^^^^^18^7^C
"DATA",64.061,1501,0)
IO_OUT.MOLEC^^^^^^^^18^7^C
"DATA",64.061,1502,0)
IO_OUT.TIMED.MOLE^^^^^^^^18^7^C
"DATA",64.061,1503,0)
MICRO^^^^^^^Microbiology tests^18^7^C
"DATA",64.061,1504,0)
MISC^^^^^^^^18^7^C
"DATA",64.061,1505,0)
NEONAT^^^^^^^Neonatal measurements^18^7^C
"DATA",64.061,1506,0)
NYA^^^^^^^^18^7^C
"DATA",64.061,1507,0)
OB.US^^^^^^^Obstetric ultrasound^18^7^C
"DATA",64.061,1508,0)
OBGYN^^^^^^^Ob/Gyn measurements^18^7^C
"DATA",64.061,1509,0)
PATH^^^^^^^Pathology tests^18^7^C
"DATA",64.061,1510,0)
RESP.ATOM^^^^^^^Respiratory rate measurements^18^7^C
"DATA",64.061,1511,0)
RESP.MOLEC^^^^^^^Respiratory rate measurements^18^7^C
"DATA",64.061,1512,0)
RESP.TIMED.MOLEC^^^^^^^Respiratory rate measurements^18^7^C
"DATA",64.061,1513,0)
SERO^^^^^^^Serology tests^18^7^C
"DATA",64.061,1514,0)
SKINFLD.MOLEC^^^^^^^Skin fold measurements^18^7^C
"DATA",64.061,1515,0)
SURGPATH^^^^^^^Pathology stains^18^7^C
"DATA",64.061,1516,0)
TOX^^^^^^^Toxicology tests^18^7^C
"DATA",64.061,1517,0)
UA^^^^^^^Urinalysis^18^7^C
"DATA",64.061,1518,0)
US.URO^^^^^^^Urological ultrasound^18^7^C
"DATA",64.061,1519,0)
VET^^^^^^^Veterinary Medicine^18^7^C
"DATA",64.061,1520,0)
VOLUME.MOLEC^^^^^^^Body volume measurements^18^7^C
"DATA",64.061,1521,0)
KIU/l^KIU/L^^^^^^^^8^U
"DATA",64.061,1522,0)
50 percentile^50 percentile^^^^^M^^^8^U
"DATA",64.061,1523,0)
EU/ml^EU/ml^^^^^M^^^8^U
"DATA",64.061,1524,0)
Antibody Units^Antibody Units^^^^^M^^^8^U
"DATA",64.061,1525,0)
ELISA UNITS^ELISA Units^^^^^M^^^8^U
"DATA",64.061,1526,0)
Copies^copies/^^^^^M^^^8^U
"DATA",64.061,1527,0)
AKAT^AKAT^^^^^M^^^8^U
"DATA",64.061,1528,0)
MKAT/l^MKAT/L^^^^^M^^^8^U
"DATA",64.061,1529,0)
UKAT/l^UKAT/L^^^^^M^^^8^U
"DATA",64.061,1530,0)
ug/ml^ug/ml^^^^microgrampermilliliter^M^^^8^U
"DATA",64.061,1531,0)
ug/g^ug/g^^^^microgrampergram^M^^^8^U
"DATA",64.061,1532,0)
ug/dl^ug/ml^^^^microgramperdeciliter^M^^^8^U
"DATA",64.061,1533,0)
ug/24h^ug/24h^^^^microgramper24hours^M^^^8^U
"DATA",64.061,1534,0)
nmol/mmol^nmol/mmol^^^^nanomolepermilimole^M^^^8^U
"DATA",64.061,1535,0)
ug/l^ug/l^^^^microgramperliter^M^^^8^U
"DATA",64.061,1536,0)
u/l^u/l^^^^unitsperliter^M^^^8^U
"DATA",64.061,1537,0)
umol/l^umol/l^^^^micromolperliter^M^^^8^U
"DATA",64.061,1538,0)
g/24h^g/24h^^^^gramsper24hours^M^GramsPer24Hour^^8^U
"DATA",64.061,1539,0)
mg/hg^mg/hg^^^^miligramperhectogram^M^^^8^U
"DATA",64.061,1540,0)
NG/G^NG/G^^^^^M^^^8^U
"DATA",64.061,1541,0)
MMOL/MOL^MMOL/MOL^^^^^M^^^8^U
"DATA",64.061,1542,0)
U/ML^U/ML^^^^^M^^^8^U
"DATA",64.061,1543,0)
U/G HGB^U/G HGB^^^^^M^^^8^U
"DATA",64.061,1544,0)
copies/ml^copies/ml^^^^^M^^^8^U
"DATA",64.061,1545,0)
ML/24H^ML/24H^^^^^M^^^8^U
"DATA",64.061,1546,0)
mg/g creatinine^mg/g creatinine^^^^^M^^^8^U
"DATA",64.061,1547,0)
nmol/mmol creatinine^nmol/mmol creatinine^^^^^M^^^8^U
"DATA",64.061,1548,0)
UM/L^UM/L^^^^^M^^^8^U
"DATA",64.061,1549,0)
UM/G CREAT^UM/G CREAT^^^^^M^^^8^U
"DATA",64.061,1550,0)
NONE;FEW;MANY^NONE;FEW;MANY^^^^^M^^^8^U
"DATA",64.061,1551,0)
ML/MERCURY^ML/MERCURY^^^^^M^^^8^U
"DATA",64.061,1552,0)
MM3^MM3^^^^^M^^^8^U
"DATA",64.061,1553,0)
MCF^MCF^^^^^M^^^8^U
"DATA",64.061,1554,0)
NG/ML/HR^NG/ML/HR^^^^^M^^^8^U
"DATA",64.061,1555,0)
HPF^HPF^^^^^M^^^8^U
"DATA",64.061,1556,0)
G/5H^G/5H^^^^^M^^^8^U
"DATA",64.061,1557,0)
BETHESDA UNITS^BETHESDA UNITS^^^^^M^^^8^U
"DATA",64.061,1558,0)
mcg Eq/ml^mcg Eq/ml^^^^^M^^^8^U
"DATA",64.061,1559,0)
U/G creat^U/G creat^^^^^M^^^8^U
"DATA",64.061,1560,0)
ug/G creat^ug/G creat^^^^^M^^^8^U
"DATA",64.061,1561,0)
mmol/mole creatine^mmol/mole creatine^^^^^M^^^8^U
"DATA",64.061,1562,0)
meq/G creat^meq/G creat^^^^^M^^^8^U
"DATA",64.061,1563,0)
mmol/mole creatinine^mmol/mole creatinine^^^^^M^^^8^U
"DATA",64.061,1564,0)
G/G creatinine^G/G creatinine^^^^^M^^^8^U
"DATA",64.061,1565,0)
umol/g creat^umol/g creat^^^^^M^^^8^U
"DATA",64.061,1566,0)
ug/mg creat^ug/mg creat^^^^^M^^^6^R
"DATA",64.061,1567,0)
mmol/g creat^mmol/g creat^^^^^M^^^8^U
"DATA",64.061,1568,0)
nM/HR/ML^nM/HR/ML^^^^^M^^^8^U
"DATA",64.061,1569,0)
uM/24HR^uM/24HR^^^^^M^^^8^U
"DATA",64.061,1570,0)
nMOLE/L^nMOLE/L^^^^^M^^^8^U
"DATA",64.061,1571,0)
percent of total^% of total^^^^^M^^^8^U
"DATA",64.061,1572,0)
mmol/mol creatinine^mmol/mol creatinine^^^^^M^^^8^U
"DATA",64.061,1573,0)
SD^SD^^^^^M^^^8^U
"DATA",64.061,1574,0)
RFU^RFU^^^^^M^^^8^U
"DATA",64.061,1575,0)
percent of lymphocytes^% of lymphocytes^^^^^M^^^8^U
"DATA",64.061,1576,0)
fmol/mg protein^fmol/mg protein^^^^^M^^^8^U
"DATA",64.061,1577,0)
nmol BCE/mmol creatinine^nmol BDE/mmol creatinine^^^^^M^^^8^U
"DATA",64.061,1578,0)
percent of total PSA^% of total PSA^^^^^M^^^8^U
"DATA",64.061,1579,0)
mcg/12 HR^mcg/12 HR^^^^^M^^^8^U
"DATA",64.061,1580,0)
ug/24hr^ug/24hr^^^^^M^^^8^U
"DATA",64.061,1581,0)
micromol/L^micromol/L^^^^^M^^^8^U
"DATA",64.061,1582,0)
meq/k^meq/k^^^^^M^^^8^U
"DATA",64.061,1583,0)
CH100U^CH100U^^^^^M^^^8^U
"DATA",64.061,1584,0)
nmol/hr/ml^nmol/hr/ml^^^^^M^^^8^U
"DATA",64.061,1585,0)
ug/dry wt^ug/dry wt^^^^^M^^^6^R
"DATA",64.061,1586,0)
14160^^^^^^M
"DATA",64.061,1587,0)
uM/min/g protein^uM/min/g protein^^^^^M^^^6^R
"DATA",64.061,1588,0)
thous/ul^thous/ul^^^^^M^^^8^U
"DATA",64.061,1589,0)
EIA units^EIA units^^^^^M^EnzymeImmunoAssay^^8^U
"DATA",64.061,1590,0)
ug Eq/ml^ug Eq/ml^^^^^M^^^6^R
"DATA",64.061,1591,0)
UMOLE/L^UMOLE/L^^^^^M^^^8^U
"DATA",64.061,1592,0)
NMOLE/HR/ML^NMOLE/HR/ML^^^^^M^^^8^U
"DATA",64.061,1593,0)
MIU/ML^MIU/ML^^^^^M^^^8^U
"DATA",64.061,1594,0)
UIU/ML^UIU/ML^^^^^M^^^8^U
"DATA",64.061,1595,0)
mU/L^mU/L^^^^^M^^^8^U
"DATA",64.061,1596,0)
micromol/d^micromol/d^^^^^M^^^8^U
"DATA",64.061,1597,0)
mmol/d^mmol/d^^^^^M^^^8^U
"DATA",64.061,1598,0)
ng/L^ng/L^^^^^M^^^8^U
"DATA",64.061,1599,0)
nmol/d^nmol/d^^^^^M^^^8^U
"DATA",64.061,1600,0)
mol/kg^mol/kg^^^^^M^^^8^U
"DATA",64.061,1601,0)
microg/L^microg/L^^^^^M^^^8^U
"DATA",64.061,1602,0)
UI/L^UI/L^^^^^M^^^8^U
"DATA",64.061,1603,0)
UI/d^UI/d^^^^^M^^^8^U
"DATA",64.061,1604,0)
mU/d^mU/d^^^^^M^^^8^U
"DATA",64.061,1605,0)
U^U^^^^^M^Unit^^8^U
"DATA",64.061,1606,0)
MOSM/KG WATER^MOSM/KG WATER^^^^^M^^^8^U
"DATA",64.061,1607,0)
U/DL^U/DL^^^^^M^^^8^U
"DATA",64.061,1608,0)
ug/g hair^ug/g hair^^^^^M^^^6^R
"DATA",64.061,1609,0)
ug/g nail^ug/g nail^^^^^M^^^6^R
"DATA",64.061,1610,0)
mUI/L^mUI/L^^^^^M^^^8^U
"DATA",64.061,1611,0)
percent of total estrone^% of total estrone^^^^^M^^^8^U
"DATA",64.061,1612,0)
percent wt by volume^% wt by volume^^^^^M^^^8^U
"DATA",64.061,1613,0)
percent tumor cells positive^%tumor cells positive^^^^^M^^^8^U
"DATA",64.061,1614,0)
percent inhibition^% inhibition^^^^^M^^^8^U
"DATA",64.061,2158,0)
Blood-Mixed Venous^BLDMV^^^^^S^Blood-Mixed Venous^10
"DATA",64.061,2159,0)
Trachea^TRAC^^^^^S^Trachea^10
"DATA",64.061,2160,0)
Fluid Conductance^FLDCONDUCT^^^^^S^Fluid Conductance^7
"DATA",64.061,2161,0)
Fluid Resistance^FLDRESIST^^^^^PR^Fluid Resistance^7
"DATA",64.061,2163,0)
CELLMARK^CELLMARK^^^^^^Cell surface models^18^7^C
"DATA",64.061,2164,0)
MOLPATH^MOLPATH^^^^^^Molecular Pathology^18^7^C
"DATA",64.061,2165,0)
SPEC^SPEC^^^^^^Specimen characteristics^18^7^C
"DATA",64.061,2166,0)
ATTACH.AMB^ATTACH.AMB^^^^^^Ambulance claims attachment^18^7^C
"DATA",64.061,2167,0)
BDYCRC^BDYCRC^^^^^^Body circumference^18^7^C
"DATA",64.061,2168,0)
BDYHGT^BDYHGT^^^^^^Body height^18^7^C
"DATA",64.061,2169,0)
BDYSURF^BDYSURF^^^^^^Body surface area^18^7^C
"DATA",64.061,2170,0)
BDYTMP^BDYTMP^^^^^^Body temperature^18^7^C
"DATA",64.061,2171,0)
BDYWGT^BDYWGT^^^^^^Body weight^18^7^C
"DATA",64.061,2172,0)
BP^BP^^^^^^Blood pressure^18^7^C
"DATA",64.061,2173,0)
BP.CENT^BP.CENT^^^^^^Blood pressure-central^18^7^C
"DATA",64.061,2174,0)
BP.PSTN^BP.PSTN^^^^^^Blood pressure-positional^18^7^C
"DATA",64.061,2175,0)
BP.VENOUS^BP.VENOUS^^^^^^Blood pressure-venous^18^7^C
"DATA",64.061,2176,0)
EKG^EKG^^^^^^Electrocardiogram^18^7^C
"DATA",64.061,2177,0)
ENDO.GI^ENDO.GI^^^^^^Gastrointestinal endoscopy^18^7^C
"DATA",64.061,2178,0)
HEMODYN^HEMODYN^^^^^^Hemodynamics^18^7^C
"DATA",64.061,2179,0)
IO^IO^^^^^^Input/Output^18^7^C
"DATA",64.061,2180,0)
PULM^PULM^^^^^^Pulmonary ventilator mgt^18^7^C
"DATA",64.061,2181,0)
RESP^RESP^^^^^^Respiration^18^7^C
"DATA",64.061,2182,0)
SKNFLD^SKNFLD^^^^^^Skinfold measurements^18^7^C
"DATA",64.061,2183,0)
US.ECHO^US.ECHO^^^^^^Cardiac ultrasound echo^18^7^C
"DATA",64.061,2185,0)
PULMONIC VALVE^PULMONIC VALVE^^^^^S^from LOINC system list
"DATA",64.061,2186,0)
TRICUSPID VALVE^TRICUSPID VALVE^^^^^S^from LOINC system list
"DATA",64.061,2187,0)
CARDIAC ECHO IMAGING DEVICE^CARDIAC ECHO IMAGING DEVICE^^^^^S^from LOINC system list
"DATA",64.061,2188,0)
CIRCULATORY SYSTEM.XXX^CIRCULATORY SYSTEM.XXX^^^^^S
"DATA",64.061,2189,0)
REGION OF INTEREST.XXX^REGION OF INTEREST.XXX^^^^^S
"DATA",64.061,2208,0)
4TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,2210,0)
5TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,2212,0)
6TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,2238,0)
PRE PARTUM^^^^^^C
"DATA",64.061,2243,0)
DESC^DESC^^^^^PR
"DATA",64.061,2244,0)
STDY^^^^^^PR
"DATA",64.061,2246,0)
Instruct^INSTRCT^^^^^PR
"DATA",64.061,2250,0)
Loc^LOC^^^^^PR^Loc^7
"DATA",64.061,2252,0)
TELE^TELE^^^^^PR
"DATA",64.061,2254,0)
Time Stamp^TMSTMP^^^^^PR^Time Stamp--Date and Time
"DATA",64.061,2260,0)
AT MAXIMUM VOLUNTARY VENTILATION^^^^^^C
"DATA",64.061,2272,0)
AT END EXPIRATION^^^^^^C
"DATA",64.061,2276,0)
DURING BRONCHODILATION^^^^^^C
"DATA",64.061,2280,0)
DURING CHEST PHYSIOTHERAPY^^^^^^C
"DATA",64.061,2284,0)
DURING XXX TREATMENT^^^^^^C
"DATA",64.061,2286,0)
DURING XXX TREATMENT ^^^^^^C
"DATA",64.061,2292,0)
POST CHEST PHYSIOTHERAPY^^^^^^C
"DATA",64.061,2296,0)
POST XXX TREATMENT^^^^^^C
"DATA",64.061,2308,0)
PRE XXX TREATMENT^^^^^^C
"DATA",64.061,2312,0)
ADJUSTED FOR HEMOGLOBIN^ADJUSTED FOR HEMOGLOBIN^^^^^A^ADJUSTED FOR HEMOGLOBIN
"DATA",64.061,2317,0)
ADJUSTED TO BODY CONDITIONS^^^^^^A
"DATA",64.061,2321,0)
AT 25-75% OF FORCED EXPIRATION^^^^^^C
"DATA",64.061,2345,0)
Fluid Conductance^FLDCONDUCT^^^^^PR^Fluid Conductance^7
"DATA",64.061,2365,0)
STANDARD^^^^^^A
"DATA",64.061,2367,0)
CORRECTED FOR TOTAL PROTEIN^^^^^^A
"DATA",64.061,2372,0)
3RD SPECIMEN POST XXX CHALLENGE^^^^^^C^^4
"DATA",64.061,2373,0)
7TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,2392,0)
POST AMNIOCENTESIS^^^^^^C
"DATA",64.061,2395,0)
PRE AMNIOCENTESIS^^^^^^C
"DATA",64.061,2408,0)
TITR^TITR^TITR^TITR^^^PR^^7
"DATA",64.061,2596,0)
BASELINE.SETTING^^^^^^C
"DATA",64.061,2598,0)
POST THERAPY^^^^^^C
"DATA",64.061,2602,0)
PRE THERAPY^^^^^^C
"DATA",64.061,2622,0)
DURING TREATMENT^DURING TREATMENT^^^^^C^During Treatment
"DATA",64.061,2626,0)
ON ROOM AIR^ON ROOM AIR^^^^^C^On room air
"DATA",64.061,2642,0)
PRE PHYSIOTHERAPY^^^^^^A
"DATA",64.061,2650,0)
AT INSPIRATION ON VENTILATOR^^^^^^C
"DATA",64.061,2680,0)
ON OXYGEN.HIGH FLOW & ASLEEP^^^^^^C
"DATA",64.061,2684,0)
ON OXYGEN.HIGH FLOW & AWAKE^^^^^^C
"DATA",64.061,2688,0)
ON OXYGEN.HIGH FLOW & EATING^^^^^^C
"DATA",64.061,2692,0)
ON OXYGEN.LOW FLOW & ASLEEP^^^^^^C
"DATA",64.061,2696,0)
ON OXYGEN.LOW FLOW & AWAKE^^^^^^C
"DATA",64.061,2700,0)
ON OXYGEN.LOW FLOW & EATING^^^^^^C
"DATA",64.061,2704,0)
ON ROOM AIR AND ASLEEP^^^^^^C
"DATA",64.061,2709,0)
ON ROOM AIR AND AWAKE^^^^^^C
"DATA",64.061,2715,0)
ON ROOM AIR AND EATING^^^^^^C
"DATA",64.061,2727,0)
POST TREATMENT^^^^^^C
"DATA",64.061,2735,0)
PRE CHEST PHYSIOTHERAPY^^^^^^C
"DATA",64.061,2739,0)
PRE TREATMENT^^^^^^C
"DATA",64.061,2747,0)
AT 0.5 LITER PER SECOND ON VENTILATOR^^^^^^C
"DATA",64.061,2755,0)
AT 1.0 LITER PER SECOND ON VENTILATOR^^^^^^C
"DATA",64.061,2763,0)
AT 1.5 LITER PER SECOND ON VENTILATOR^^^^^^C
"DATA",64.061,2771,0)
AT 2.0 LITER PER SECOND ON VENTILATOR^^^^^^C
"DATA",64.061,2779,0)
AT 2.5 LITER PER SECOND ON VENTILATOR^^^^^^C
"DATA",64.061,2781,0)
AT MEAN EXPIRATORY FLOW ON VENTILATOR^^^^^^C
"DATA",64.061,2783,0)
AT PEAK INSPIRATORY FLOW MAX.SETTING^^^^^^C
"DATA",64.061,2785,0)
AT PEAK INSPIRATORY FLOW.SETTING^^^^^^C
"DATA",64.061,2789,0)
AT ZERO INSPIRATORY FLOW ON VENTILATOR^^^^^^C
"DATA",64.061,2793,0)
ON VENTILATOR.PRESSURE TARGETED CONTROL^^^^^^C
"DATA",64.061,2797,0)
ON VENTILATOR.VOLUME TARGETED ASSIST & CONTROL^^^^^^C
"DATA",64.061,2801,0)
ON VENTILATOR.VOLUME TARGETED CONTROL^^^^^^C
"DATA",64.061,2808,0)
POST 1.5-2.0 S INSPIRATORY HOLD.ON VENTILATOR^^^^^^C
"DATA",64.061,2817,0)
UNCORRECTED FOR COMPRESSIBLE GAS VOLUME.SETTING^^^^^^A
"DATA",64.061,2837,0)
ON VENTILATOR^^^^^^C
"DATA",64.061,2849,0)
AT 0.5 S POST FORCED EXPIRATION^^^^^^C
"DATA",64.061,2857,0)
AT 1.0 S POST FORCED EXPIRATION MEASURED/PREDICTED^^^^^^C
"DATA",64.061,2863,0)
POST BRONCHODILATION^^^^^^C
"DATA",64.061,2866,0)
AT 1.0 S POST FORCED EXPIRATION^^^^^^C
"DATA",64.061,2867,0)
PRE BRONCHODILATION^^^^^^C
"DATA",64.061,2877,0)
PRE BRONCHODILATOR^^^^^^C
"DATA",64.061,2879,0)
PRE BRONCHODILATOR/MVV PREDICTED^^^^^^C
"DATA",64.061,2881,0)
AT STENOSIS^^^^^^C
"DATA",64.061,2884,0)
AT AORTIC FLOW MEASUREMENT^^^^^^C
"DATA",64.061,2886,0)
AT MITRAL FLOW MEASUREMENT^^^^^^C
"DATA",64.061,2888,0)
AT PULMONIC FLOW MEASUREMENT^^^^^^C
"DATA",64.061,2890,0)
AT TRICUSPID FLOW MEASUREMENT^^^^^^C
"DATA",64.061,2892,0)
FOR PEAK HALF-TIME CALCULATION^^^^^^C
"DATA",64.061,2894,0)
Fluid fast^FFST^^^^^C^Fluid fast^6
"DATA",64.061,2896,0)
4D POST XXX CHALLENGE^^^^^^C
"DATA",64.061,2898,0)
CORRECTED FOR COMPRESSIBLE GAS VOLUME^^^^^^A
"DATA",64.061,2899,0)
AT 1.0 S POST FORCED EXP/VOLUME.FORCED EXP.TOTAL^^^^^^C
"DATA",64.061,3302,0)
RELVOL^RELVOL^^^^^PR
"DATA",64.061,3317,0)
POST BRONCHODILATOR/MVV PREDICTED^^^^^^C
"DATA",64.061,3320,0)
RELVRAT^RELVRAT^^^^^PR
"DATA",64.061,3328,0)
POST BRONCHODILATOR^^^^^^C
"DATA",64.061,3329,0)
AT 1.0 S POST FORCED EXPIRATION/VOLUME.FORCED EXPI^^^^^^C
"DATA",64.061,3956,0)
AT 1.0 S POST FORCED EXP POST BRONCHODILATION^^^^^^C
"DATA",64.061,3957,0)
AT 1.0 S POST FORCED EXP PRE BRONCHODILATION^^^^^^C
"DATA",64.061,4713,0)
ID
"DATA",64.061,4714,0)
XCN^XCN^^^^^PR
"DATA",64.061,4715,0)
HEART.VENTRICLE.RIGHT.OUTFLOW TRACT^HEART.VENTRICLE.RIGHT.OUTFLOW TRACT^^^^^S^^10
"DATA",64.061,4716,0)
HEART.VENTRICLE.LEFT.OUTFLOW TRACT^HEART.VENTRICLE.LEFT.OUTFLOW TRACT^^^^^S
"DATA",64.061,4717,0)
MOTHER^MOTHER^^^^^S^from LOINC system list^11
"DATA",64.061,4718,0)
FATHER^FATHER^^^^^S^from LOINC system list^11
"DATA",64.061,4719,0)
SIBLING^SIBLING^^^^^S^from LOINC system list^11
"DATA",64.061,4741,0)
SER+ISLT^SER+ISLT^^^^^S
"DATA",64.061,4742,0)
SER/PLAS.ULTRACENTRIFUGATE^SER/PLAS.ULTRACENTRIFUGATE^^^^^S
"DATA",64.061,4894,0)
IMP
"DATA",64.061,5091,0)
AT 1.0 S POST FORCED EXP~POST BRONCHODILATION^AT 1.0 S POST FORCED EXP~POST BRONCHODILATION^^^^^C
"DATA",64.061,5092,0)
AT 1.0 S POST FORCED EXP~PRE BRONCHODILATION^AT 1.0 S POST FORCED EXP~PRE BRONCHODILATION^^^^^C
"DATA",64.061,5111,0)
2ND SPECIMEN POST XXX CHALLENGE^^^^^^C^from LOINC system list
"DATA",64.061,5174,0)
GAS~BREATHING CIRCUIT^GAS~BREATHING CIRCUIT^^^^^S^from LOINC system list
"DATA",64.061,5175,0)
THORACIC~GAS^THORACIC~GAS^^^^^S^from LOINC system list
"DATA",64.061,5177,0)
45M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5178,0)
90M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5179,0)
1.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5180,0)
10M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5181,0)
15M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5182,0)
20M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5183,0)
2H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5184,0)
40M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5185,0)
9TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5186,0)
BS 30M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,5187,0)
POST DOSE TRH^^^^^^C
"DATA",64.061,5188,0)
1H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5189,0)
8TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5190,0)
1.5 POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5191,0)
3H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5192,0)
4H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5193,0)
5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5194,0)
POST DOSE^^^^^^C
"DATA",64.061,5195,0)
10TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5196,0)
30M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5198,0)
30M POST COLLECTION^^^^^^C
"DATA",64.061,5199,0)
2ND SPECIMEN/STREP PNEUMONIAE 12F AB~1ST SPECIMEN^^^^^^C
"DATA",64.061,5200,0)
2ND SPECIMEN/STREP PNEUMONIAE 14 AB~1ST SPECIMEN^^^^^^C
"DATA",64.061,5201,0)
2ND SPECIMEN/STREP PNEUMONIAE 3 AB~1ST SPECIMEN^^^^^^C
"DATA",64.061,5202,0)
2ND SPECIMEN/STREP PNEUMONIAE 7F AB~1ST SPECIMEN^^^^^^C
"DATA",64.061,5203,0)
1ST SPECIMEN/STREP PNEUMONIAE 9N AB~2ND SPECIMEN^^^^^^C
"DATA",64.061,5204,0)
1ST SPECIMEN/STREP PNEUMONIAE AB.IGG~2ND SPECIMEN^^^^^^C
"DATA",64.061,5206,0)
15M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,5207,0)
75M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5208,0)
BS PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,5209,0)
6H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5210,0)
2.5 POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5211,0)
52H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5212,0)
60M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5213,0)
BS 15M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,5214,0)
70M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5215,0)
7H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5216,0)
8H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5217,0)
8M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5218,0)
9H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5219,0)
POST 8H CFST^^^^^^C
"DATA",64.061,5220,0)
POST GLUCOSE^^^^^^C
"DATA",64.061,5221,0)
POST MEAL^^^^^^C
"DATA",64.061,5222,0)
150M POST GLUCOSE^^^^^^C
"DATA",64.061,5223,0)
210M POST GLUCOSE^^^^^^C
"DATA",64.061,5224,0)
270M POST GLUCOSE^^^^^^C
"DATA",64.061,5225,0)
330M POST GLUCOSE^^^^^^C
"DATA",64.061,5226,0)
6H POST GLUCOSE^^^^^^C
"DATA",64.061,5227,0)
90M POST GLUCOSE^^^^^^C
"DATA",64.061,5228,0)
BS PRE GLUCOSE^^^^^^C
"DATA",64.061,5229,0)
POST EXERCISE^^^^^^C
"DATA",64.061,5230,0)
POST IMMEDIATE SPIN^^^^^^C
"DATA",64.061,5231,0)
2.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5232,0)
1.5M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5233,0)
5M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5234,0)
150M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5235,0)
1M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5236,0)
VOLFR^VOLFR^^^^^PR
"DATA",64.061,5237,0)
1ST SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5238,0)
12H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5239,0)
12TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5240,0)
CORRECTED FOR COMPRESSIBLE GAS VOLUME/BODY WEIGHT^^^^^^A
"DATA",64.061,5241,0)
UNCORRECTED FOR COMPRESSIBLE GAS VOLUME^^^^^^C
"DATA",64.061,5242,0)
BS PRE 500 UG DEXMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^^C
"DATA",64.061,5243,0)
50M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5244,0)
80M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5245,0)
105M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5246,0)
11TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5247,0)
25M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5248,0)
10AM SPECIMEN^^^^^^C
"DATA",64.061,5249,0)
10H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5250,0)
11AM SPECIMEN^^^^^^C
"DATA",64.061,5251,0)
12H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,5252,0)
13TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5253,0)
14TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5254,0)
15M POST LACTOSE^^^^^^C
"DATA",64.061,5255,0)
1H POST GLUCOSE^^^^^^C
"DATA",64.061,5256,0)
2M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5257,0)
2PM SPECIMEN^^^^^^C
"DATA",64.061,5258,0)
3PM SPECIMEN^^^^^^C
"DATA",64.061,5259,0)
4M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5260,0)
4PM SPECIMEN^^^^^^C
"DATA",64.061,5261,0)
5PM SPECIMEN^^^^^^C
"DATA",64.061,5262,0)
6.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5263,0)
6H POST 50 C LACTOSE PO^^^^^^C
"DATA",64.061,5264,0)
7.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5265,0)
150M POST GLUCOSE PO^^^^^^C
"DATA",64.061,5266,0)
210M POST GLUCOSE PO^^^^^^C
"DATA",64.061,5267,0)
270M POST GLUCOSE PO^^^^^^C
"DATA",64.061,5268,0)
330M POST GLUCOSE PO^^^^^^C
"DATA",64.061,5269,0)
6H POST GLUCOSE PO^^^^^^C
"DATA",64.061,5270,0)
90M POST GLUCOSE PO^^^^^^C
"DATA",64.061,5271,0)
BS PRE GLUCOSE PO^^^^^^C
"DATA",64.061,5272,0)
POST GLUCOSE PO^^^^^^C
"DATA",64.061,5273,0)
11H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5274,0)
19M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5275,0)
22M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5276,0)
3.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5277,0)
4.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5278,0)
5.5H POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5279,0)
3H POST DOSE^^^^^^C
"DATA",64.061,5280,0)
>6H POST DOSE^^^^^^C
"DATA",64.061,5281,0)
ADJUSTED TO PH 7.4^^^^^^A
"DATA",64.061,5282,0)
ADJUSTED TO PATIENTS ACTUAL TEMPERATURE^^^^^^A
"DATA",64.061,5283,0)
SATURATION ADJUSTED TO 0.5^^^^^^A
"DATA",64.061,5284,0)
Breast.Fine Needle^BREAST.FINE NEEDLE^^^^^S^^10
"DATA",64.061,5285,0)
Buccal Smear^BUCCAL SMEAR^^^^^S^^10
"DATA",64.061,5286,0)
Deep Tissue.Fine Needle^DEEP TISSUE.FINE NEEDLE^^^^^S^^10
"DATA",64.061,5287,0)
Nipple Discharge^NIPPLE DISCHARGE^^^^^S^from LOINC system list^10
"DATA",64.061,5288,0)
Superficial Tissue.Fine Needle^SUPERFICIAL TISSUE.FINE NEEDLE^^^^^S^from LOINC system list^10
"DATA",64.061,5289,0)
Thyroid.Fine Needle^THYROID.FINE NEEDLE^^^^^S^from LOINC system list^10
"DATA",64.061,5290,0)
Hyperal Solution^HYPERAL SOLUTION^^^^^S^from LOINC system list^10
"DATA",64.061,5291,0)
Thyroid^THYROID^^^^^S^from LOINC system list^10
"DATA",64.061,5294,0)
48 hours^48H^^^^^S
"DATA",64.061,5296,0)
PLANT.TOXIC IDENTIFIED^PLANT.TOXIC IDENTIFIED^^^^^S
"DATA",64.061,5301,0)
17-HYDROXYPROGESTERONE^17-HYDROXYPROGESTERONE^^^^^S
"DATA",64.061,5333,0)
THYROXINE UPTAKE^THYROXINE UPTAKE^^^^^S
"DATA",64.061,5356,0)
TIDAL VOLUME.EXPIRED^TIDAL VOLUME.EXPIRED^^^^^S
"DATA",64.061,5357,0)
15TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5358,0)
105 M POST XXX CHALLENGE^^^^^^C
"DATA",64.061,5359,0)
BS^^^^^^A
"DATA",64.061,5360,0)
Blood.Post Ductal^BLD.POSTDUCTAL^^^^^S^from LOINC system list
"DATA",64.061,5361,0)
TROUGH>12H POST DOSE^^^^^^C^from LOINC list
"DATA",64.061,5362,0)
5H POST 100 GLUCOSE PO^^^^^^C^from LOINC list
"DATA",64.061,5363,0)
cPU^^^^^^PR^centipoiseunits^^8^U
"DATA",64.061,5364,0)
CMM^CMM^^^^^M^CubicMilliMeter^^8^U
"DATA",64.061,5365,0)
ETU/ml^^^^^^M^endotoxinunitspermilliliter^^8^U
"DATA",64.061,5366,0)
eu/24hr^^^^^^M^EhrlichUnitsPer24Hr^^8^U
"DATA",64.061,5367,0)
ELU^^^^^^M^ELISAunits^^8^U
"DATA",64.061,5368,0)
EIU^^^^^^M^EnzymeImmunoassayUnit^^8^U
"DATA",64.061,5369,0)
GPL^^^^^^M^IgGPhospholipidUnit^^8^U
"DATA",64.061,5370,0)
MPL^^^^^^M^IgMPhospholipidUnit^^8^U
"DATA",64.061,5371,0)
ISR^^^^^^M^ImmuneStatusRatio^^8^U
"DATA",64.061,5372,0)
LIV^^^^^^M^LymeIndexValue^^8^U
"DATA",64.061,5373,0)
mPOL^^^^^^M^MilliPolarization^^8^U
"DATA",64.061,5374,0)
IV^^^^^^M^IndexValue^^8^U
"DATA",64.061,5375,0)
RIV^^^^^^M^RubellaIndexValue^^8^U
"DATA",64.061,5376,0)
U^^^^^^M^Unit^^8^U
"DATA",64.061,5377,0)
U/day^^^^^^M^UnitsPerDay^^8^U
"DATA",64.061,5378,0)
U/hr^^^^^^M^UnitsPerHour^^8^U
"DATA",64.061,5379,0)
ENVIRNMENTAL^ENVIR^^ENV^^^S
"DATA",64.061,5380,0)
Serum/Plasma^SER/P^^SER/P^^^S^Serum Or Plasma^10
"DATA",64.061,5381,0)
Antigen Detection^AG^^^^^PR^^7
"DATA",64.061,5382,0)
Clotting Activity^CLOT^^^^^PR^^7
"DATA",64.061,5383,0)
Enzymatic Detection^CHROM^^^^^PR^^7
"DATA",64.061,5384,0)
Fluid Misc^FLD^^^^^S^^1
"DATA",64.061,5385,0)
Qualitative^QL^^^^^M^^2
"DATA",64.061,5387,0)
Quantitative Count^#^^^^^M^Quant count of entities^2
"DATA",64.061,5388,0)
Quantitative %^%^^^^^M^Quant % measure^2
"DATA",64.061,5389,0)
Confirmatory^CNFRM^^^^^M
"DATA",64.061,5390,0)
Screen^SCN^^^^^M
"DATA",64.061,5391,0)
TUMRRGT^TUMRRGT^^^^^^Tumor registry (NAACCR)^18
"DATA",64.061,5392,0)
1.5 POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,5393,0)
ABXBACTSH^^^^^^^^^7^C
"DATA",64.061,5404,0)
UNCORRECTED FOR COMPRESSIBLE GAS VOLUME^^^^^^A
"DATA",64.061,5405,0)
POST BRONCHODILATION^^^^^^A
"DATA",64.061,5406,0)
PRE BRONCHODILATION^^^^^^A
"DATA",64.061,5413,0)
BLD/TISS^BLD/TISS^^^^^S
"DATA",64.061,5415,0)
ADJUSTED^^^^^^A
"DATA",64.061,5416,0)
UNADJUSTED^^^^^^A
"DATA",64.061,5418,0)
~FETUS^~FETUS^^^^^S
"DATA",64.061,5419,0)
ZFLU^^^FLU^^^S^Body Fluid^10
"DATA",64.061,5433,0)
~MOTHER^~MOTHER^^^^^S
"DATA",64.061,5436,0)
ADJUSTED FOR SEX HORMONE BINDING GLOBULIN^^^^^^A
"DATA",64.061,5438,0)
~PATIENT^~PATIENT^^^^^S
"DATA",64.061,5445,0)
MOLPATH.TRISOMY
"DATA",64.061,5448,0)
NAACCR MESSAGE^NAACCR MESSAGE^^^^^S
"DATA",64.061,5449,0)
REGISTRY MESSAGE^REGISTRY MESSAGE^^^^^S
"DATA",64.061,5451,0)
~CENSUS TRACT AT CANCER XXX DX^~CENSUS TRACT AT CANCER XXX DX^^^^^S
"DATA",64.061,5453,0)
~CENSUS TRACT AT CANCER XXX DX.ALTERNATE^~CENSUS TRACT AT CANCER XXX DX.ALTERNATE^^^^^S
"DATA",64.061,5454,0)
RACE^RACE^^^^^S
"DATA",64.061,5457,0)
ETHNICITY COMPUTATION^ETHNICITY COMPUTATION^^^^^S
"DATA",64.061,5462,0)
USUAL OCCUPATION HX~PATIENT^USUAL OCCUPATION HX~PATIENT^^^^^S
"DATA",64.061,5463,0)
USUAL INDUSTRY HX~PATIENT^USUAL INDUSTRY HX~PATIENT^^^^^S
"DATA",64.061,5466,0)
OCCUPATION & INDUSTRY HX~PATIENT^OCCUPATION & INDUSTRY HX~PATIENT^^^^^S
"DATA",64.061,5467,0)
~FAMILY MEMBER^~FAMILY MEMBER^^^^^S
"DATA",64.061,5469,0)
~CENSUS TRACT^~CENSUS TRACT^^^^^S
"DATA",64.061,5470,0)
CANCER.XXX ^CANCER.XXX^^^^^S
"DATA",64.061,5471,0)
CANCER.XXX.ANATOMIC SITE^CANCER.XXX.ANATOMIC SITE^^^^^S
"DATA",64.061,5472,0)
CANCER.XXX.MORPHOLOGY^CANCER.XXX.MORPHOLOGY^^^^^S
"DATA",64.061,5474,0)
ABSTRACTOR^ABSTRACTOR^^^^^S
"DATA",64.061,5475,0)
CANCER~PATIENT^CANCER~PATIENT^^^^^S
"DATA",64.061,5476,0)
TUMOR^TUMOR^^^^^S
"DATA",64.061,5477,0)
PROSTATE CANCER.XXX^PROSTATE CANCER.XXX^^^^^S
"DATA",64.061,5478,0)
EXTENT OF DISEASE CODING SYSTEM^EXTENT OF DISEASE CODING SYSTEM^^^^^S
"DATA",64.061,5479,0)
TNM CLASSIFICATION^TNM CLASSIFICATION^^^^^S
"DATA",64.061,5480,0)
CANCER.XXX PEDIATRIC STAGING^CANCER.XXX PEDIATRIC STAGING^^^^^S
"DATA",64.061,5481,0)
Quantitative Or Ordinal^ORDQN^ORDQN^ORDQN^^^PR^ORD or QN^12
"DATA",64.061,5483,0)
RADIATION.RX^RADIATION.RX^^^^^S
"DATA",64.061,5484,0)
SUBSEQUENT CANCER RX^SUBSEQUENT CANCER RX^^^^^S
"DATA",64.061,5489,0)
CAUSE OF DEATH~PATIENT^CAUSE OF DEATH~PATIENT^^^^^S
"DATA",64.061,5492,0)
CANCER CASE.XXX^CANCER CASE.XXX^^^^^S
"DATA",64.061,5493,0)
CANCER REGISTRY^CANCER REGISTRY^^^^^S
"DATA",64.061,5496,0)
NAACCR CASE?^ NAACCR CASE?^^^^^S
"DATA",64.061,5509,0)
WHEY^WHEY^^^^^S
"DATA",64.061,5511,0)
SER~DONOR^SER~DONOR^^^^^S^Serum Donor
"DATA",64.061,5512,0)
SER/PLAS~DONOR^SER/PLAS~DONOR^^^^^S
"DATA",64.061,5513,0)
1ST SPECIMEN^^^^^^A
"DATA",64.061,5514,0)
2ND SPECIMEN^^^^^^A
"DATA",64.061,5515,0)
SPECIMEN^SPECIMEN^^^^^S
"DATA",64.061,5517,0)
ZTRAC^^^^^^^^10
"DATA",64.061,5518,0)
TISS~FETUS^TISS~FETUS^^^^^S
"DATA",64.061,5526,0)
BURSA OF FABRICIUS^BURSA OF FABRICIUS^^^^^S
"DATA",64.061,5527,0)
FEATHER^FEATHER^^^^^S
"DATA",64.061,5531,0)
FEED^FEED^^^^^S
"DATA",64.061,5533,0)
FTIS^FTIS^^^^^S
"DATA",64.061,5544,0)
SER+UR^SER+UR^^^^^S
"DATA",64.061,5546,0)
SER+BLD^SER+BLD^^^^^S
"DATA",64.061,5548,0)
ARTERIAL SYSTEM.XXX^ARTERIAL SYSTEM.XXX^^^^^S
"DATA",64.061,5551,0)
ABDOMEN.RETROPERITONEUM^ABDOMEN.RETROPERITONEUM^^^^^S
"DATA",64.061,5553,0)
ABDOMEN.RUQ^ABDOMEN.RUQ^^^^^S
"DATA",64.061,5554,0)
ABDOMINAL VESSELS^ABDOMINAL VESSELS^^^^^S
"DATA",64.061,5555,0)
ACETABULUM.XXX^ACETABULUM.XXX^^^^^S
"DATA",64.061,5556,0)
ACROMIOCLAVICULAR JOINT.XXX^ACROMIOCLAVICULAR JOINT.XXX^^^^^S
"DATA",64.061,5557,0)
AMNIOTIC SAC^AMNIOTIC SAC^^^^^S
"DATA",64.061,5558,0)
ANKLE.XXX^ANKLE.XXX^^^^^S
"DATA",64.061,5560,0)
AORTA.THORACIC^AORTA.THORACIC^^^^^S
"DATA",64.061,5561,0)
AORTA.THORACIC ARCH^AORTA.THORACIC ARCH^^^^^S
"DATA",64.061,5562,0)
AORTA.XXX^AORTA.XXX^^^^^S
"DATA",64.061,5563,0)
APPENDIX^APPENDIX^^^^^S
"DATA",64.061,5564,0)
ARM+HAND VESSELS.XXX^ARM+HAND VESSELS.XXX^^^^^S
"DATA",64.061,5565,0)
ARM VEIN.XXX^ARM VEIN.XXX^^^^^S
"DATA",64.061,5566,0)
ARTERIOVENOUS FISTULA.XXX^ARTERIOVENOUS FISTULA.XXX^^^^^S
"DATA",64.061,5567,0)
STENT.XXX^STENT.XXX^^^^^S
"DATA",64.061,5568,0)
VESSEL.INTRACRANIAL.XXX^VESSEL.INTRACRANIAL.XXX^^^^^S
"DATA",64.061,5569,0)
ARTERY.XXX^ARTERY.XXX^^^^^S
"DATA",64.061,5570,0)
ABDOMEN.XXX^ABDOMEN.XXX^^^^^S
"DATA",64.061,5571,0)
ABDOMEN+CHEST^ABDOMEN+CHEST^^^^^S
"DATA",64.061,5572,0)
AV FISTULA.XXX^AV FISTULA.XXX^^^^^S
"DATA",64.061,5573,0)
AV SHUNT.XXX^AV SHUNT.XXX^^^^^S
"DATA",64.061,5574,0)
BILIARY DUCT.COMMON^BILIARY DUCT.COMMON^^^^^S
"DATA",64.061,5575,0)
BILIARY DUCTS+GALLBLADDER^BILIARY DUCTS+GALLBLADDER^^^^^S
"DATA",64.061,5576,0)
BLADDER ARTERY^BLADDER ARTERY^^^^^S
"DATA",64.061,5577,0)
BONE.XXX^BONE.XXX^^^^^S
"DATA",64.061,5578,0)
BONES^BONES^^^^^S
"DATA",64.061,5579,0)
BONES.LONG^BONES.LONG^^^^^S
"DATA",64.061,5580,0)
BRACHIAL+CEPHALIC ARTERY.XXX^BRACHIAL+CEPHALIC ARTERY.XXX^^^^^S
"DATA",64.061,5581,0)
BRACHIAL+SUBCLAVIAN ARTERY^BRACHIAL+SUBCLAVIAN ARTERY^^^^^S
"DATA",64.061,5582,0)
BRACHIAL PLEXUS.XXX^BRACHIAL PLEXUS.XXX^^^^^S
"DATA",64.061,5583,0)
BRAIN VESSELS^BRAIN VESSELS^^^^^S
"DATA",64.061,5584,0)
BREAST.CYST.XXX^BREAST.CYST.XXX^^^^^S
"DATA",64.061,5585,0)
BREAST.MASS.XXX^BREAST.MASS.XXX^^^^^S
"DATA",64.061,5586,0)
BREAST.SPECIMEN^BREAST.SPECIMEN^^^^^S
"DATA",64.061,5587,0)
BREAST.XXX^BREAST.XXX^^^^^S
"DATA",64.061,5588,0)
CALCANEUS.XXX^CALCANEUS.XXX^^^^^S
"DATA",64.061,5589,0)
CARDIOVASCULAR.CENTRAL ARTERY^CARDIOVASCULAR.CENTRAL ARTERY^^^^^S
"DATA",64.061,5590,0)
CAROTID ARTERY.EXTRACRANIAL^CAROTID ARTERY.EXTRACRANIAL^^^^^S
"DATA",64.061,5591,0)
CAROTID ARTERY.INTRACRANIAL^CAROTID ARTERY.INTRACRANIAL^^^^^S
"DATA",64.061,5592,0)
CAROTID ARTERY.XXX^CAROTID ARTERY.XXX^^^^^S
"DATA",64.061,5593,0)
CARPAL BONES.XXX^CARPAL BONES.XXX^^^^^S
"DATA",64.061,5594,0)
CATHETER.XXX^CATHETER.XXX^^^^^S
"DATA",64.061,5595,0)
CAVITY.XXX^CAVITY.XXX^^^^^S
"DATA",64.061,5596,0)
CELIAC AXIS ARTERY^CELIAC AXIS ARTERY^^^^^S
"DATA",64.061,5597,0)
CELIAC PLEXUS^CELIAC PLEXUS^^^^^S
"DATA",64.061,5598,0)
VEIN.CENTRAL.XXX^VEIN.CENTRAL.XXX^^^^^S
"DATA",64.061,5599,0)
CHEST VESSELS^CHEST VESSELS^^^^^S
"DATA",64.061,5600,0)
CHEST.AORTA.THORACIC^CHEST.AORTA.THORACIC^^^^^S
"DATA",64.061,5601,0)
CISTERNAL SPACE^CISTERNAL SPACE^^^^^S
"DATA",64.061,5602,0)
CLAVICLE.XXX^CLAVICLE.XXX^^^^^S
"DATA",64.061,5603,0)
COCCYX+SACRUM^COCCYX+SACRUM^^^^^S
"DATA",64.061,5604,0)
CYST.XXX^CYST.XXX^^^^^S
"DATA",64.061,5605,0)
DUODENUM^DUODENUM^^^^^S
"DATA",64.061,5606,0)
ELBOW.XXX^ELBOW.XXX^^^^^S
"DATA",64.061,5607,0)
ESOPHAGUS^ESOPHAGUS^^^^^S
"DATA",64.061,5608,0)
ESOPHAGUS+HYPOPHARYNX^ESOPHAGUS+HYPOPHARYNX^^^^^S
"DATA",64.061,5609,0)
ESOPHAGUS+STOMACH^ESOPHAGUS+STOMACH^^^^^S
"DATA",64.061,5610,0)
EXTRACRANIAL VESSELS.XXX^EXTRACRANIAL VESSELS.XXX^^^^^S
"DATA",64.061,5611,0)
VEINS.PERIPHERAL.XXX^VEINS.PERIPHERAL.XXX^^^^^S
"DATA",64.061,5612,0)
EXTREMITY.LOWER.XXX^EXTREMITY.LOWER.XXX^^^^^S
"DATA",64.061,5613,0)
EXTREMITY.LOWER.JOINT.XXX^EXTREMITY.LOWER.JOINT.XXX^^^^^S
"DATA",64.061,5614,0)
EXTREMITY.UPPER.XXX^EXTREMITY.UPPER.XXX^^^^^S
"DATA",64.061,5615,0)
EXTREMITY.XXX^EXTREMITY.XXX^^^^^S
"DATA",64.061,5616,0)
FACIAL BONES^FACIAL BONES^^^^^S
"DATA",64.061,5617,0)
FACIAL BONES+SINUSES^FACIAL BONES+SINUSES^^^^^S
"DATA",64.061,5618,0)
FEMORAL ARTERY.XXX^FEMORAL ARTERY.XXX^^^^^S
"DATA",64.061,5619,0)
FEMUR+TIBIA^FEMUR+TIBIA^^^^^S
"DATA",64.061,5620,0)
FEMUR.XXX^FEMUR.XXX^^^^^S
"DATA",64.061,5621,0)
FINGER.XXX^FINGER.XXX^^^^^S
"DATA",64.061,5622,0)
FOOT.XXX^FOOT.XXX^^^^^S
"DATA",64.061,5623,0)
FOREARM.XXX^FOREARM.XXX^^^^^S
"DATA",64.061,5624,0)
GALLBLADDER^GALLBLADDER^^^^^S
"DATA",64.061,5625,0)
GASTROINTESTINE^GASTROINTESTINE^^^^^S
"DATA",64.061,5626,0)
GASTROINTESTINE.UPPER^GASTROINTESTINE.UPPER^^^^^S
"DATA",64.061,5627,0)
GASTROINTESTINE.XXX^GASTROINTESTINE.XXX^^^^^S
"DATA",64.061,5628,0)
GENITOURINARY COLLECTING SYSTEM^GENITOURINARY COLLECTING SYSTEM^^^^^S
"DATA",64.061,5629,0)
HAND.XXX^HAND.XXX^^^^^S
"DATA",64.061,5630,0)
HAND+WRIST.XXX^HAND+WRIST.XXX^^^^^S
"DATA",64.061,5631,0)
HEAD.CISTERN^HEAD.CISTERN^^^^^S
"DATA",64.061,5632,0)
HEAD.INTERNAL AUDITORY CANAL+POSTERIOR FOSSA^HEAD.INTERNAL AUDITORY CANAL+POSTERIOR FOSSA^^^^^S
"DATA",64.061,5633,0)
HEAD.PETROUS TIP^HEAD.PETROUS TIP^^^^^S
"DATA",64.061,5634,0)
HEAD.SAGITTAL SINUS^HEAD.SAGITTAL SINUS^^^^^S
"DATA",64.061,5635,0)
SINUS^SINUS^^^^^S
"DATA",64.061,5636,0)
PARATHYROID^PARATHYROID^^^^^S
"DATA",64.061,5637,0)
VEIN.XXX^VEIN.XXX^^^^^S
"DATA",64.061,5638,0)
HEART.CORONARY ARTERIES^HEART.CORONARY ARTERIES^^^^^S
"DATA",64.061,5639,0)
HIP.XXX^HIP.XXX^^^^^S
"DATA",64.061,5640,0)
HUMERUS.XXX^HUMERUS.XXX^^^^^S
"DATA",64.061,5641,0)
ILIAC ARTERY.XXX^ILIAC ARTERY.XXX^^^^^S
"DATA",64.061,5642,0)
INTERNAL AUDITORY CANAL.XXX^INTERNAL AUDITORY CANAL.XXX^^^^^S
"DATA",64.061,5643,0)
JOINT.SPACE.XXX^JOINT.SPACE.XXX^^^^^S
"DATA",64.061,5644,0)
JOINT.XXX^JOINT.XXX^^^^^S
"DATA",64.061,5645,0)
KIDNEY.XXX^KIDNEY.XXX^^^^^S
"DATA",64.061,5646,0)
KIDNEYS+COLLECTING SYSTEM^KIDNEYS+COLLECTING SYSTEM^^^^^S
"DATA",64.061,5647,0)
KNEE JOINT.XXX^KNEE JOINT.XXX^^^^^S
"DATA",64.061,5648,0)
KNEE.XXX^KNEE.XXX^^^^^S
"DATA",64.061,5649,0)
LIVER+DIAPHRAGM^LIVER+DIAPHRAGM^^^^^S
"DATA",64.061,5650,0)
LIVER+SPLEEN^LIVER+SPLEEN^^^^^S
"DATA",64.061,5651,0)
LEG.LOWER VESSELS.XXX^LEG.LOWER VESSELS.XXX^^^^^S
"DATA",64.061,5652,0)
LEG.LOWER.XXX^LEG.LOWER.XXX^^^^^S
"DATA",64.061,5653,0)
LUNG^LUNG^^^^^S
"DATA",64.061,5654,0)
LYMPHATICS^LYMPHATICS^^^^^S
"DATA",64.061,5655,0)
MANDIBLE^MANDIBLE^^^^^S
"DATA",64.061,5656,0)
MASTOID.XXX^MASTOID.XXX^^^^^S
"DATA",64.061,5657,0)
MECKELS DIVERTICULUM^MECKELS DIVERTICULUM^^^^^S
"DATA",64.061,5658,0)
NASAL BONES^NASAL BONES^^^^^S
"DATA",64.061,5659,0)
NASOPHARYNX+NECK^NASOPHARYNX+NECK^^^^^S
"DATA",64.061,5660,0)
NECK VESSEL.XXX^NECK VESSEL.XXX^^^^^S
"DATA",64.061,5661,0)
NECK.LARYNX^NECK.LARYNX^^^^^S
"DATA",64.061,5662,0)
OPTIC FORAMEN.XXX^OPTIC FORAMEN.XXX^^^^^S
"DATA",64.061,5663,0)
ORBITS^ORBITS^^^^^S
"DATA",64.061,5664,0)
OROPHARYNX^OROPHARYNX^^^^^S
"DATA",64.061,5665,0)
PANCREAS^PANCREAS^^^^^S
"DATA",64.061,5666,0)
PANCREATIC ARTERY^PANCREATIC ARTERY^^^^^S
"DATA",64.061,5667,0)
PATELLA.XXX^PATELLA.XXX^^^^^S
"DATA",64.061,5668,0)
PELVIC ARTERY^PELVIC ARTERY^^^^^S
"DATA",64.061,5669,0)
PELVIS VESSELS^PELVIS VESSELS^^^^^S
"DATA",64.061,5670,0)
PELVIS+HIP.XXX^PELVIS+HIP.XXX^^^^^S
"DATA",64.061,5671,0)
PELVIS.VESSELS^PELVIS.VESSELS^^^^^S
"DATA",64.061,5672,0)
PERIPHERAL ARTERY .XXX^PERIPHERAL ARTERY .XXX^^^^^S
"DATA",64.061,5673,0)
PERIPHERAL VESSEL.XXX^PERIPHERAL VESSEL.XXX^^^^^S
"DATA",64.061,5674,0)
PERITONEOVENOUS SHUNT^PERITONEOVENOUS SHUNT^^^^^S
"DATA",64.061,5675,0)
PETROUS BONE^PETROUS BONE^^^^^S
"DATA",64.061,5676,0)
PITUITARY+SELLA TURCICA^PITUITARY+SELLA TURCICA^^^^^S
"DATA",64.061,5677,0)
POPLITEAL SPACE.XXX^POPLITEAL SPACE.XXX^^^^^S
"DATA",64.061,5678,0)
POPLITEAL.XXX^POPLITEAL.XXX^^^^^S
"DATA",64.061,5679,0)
PSEUDOANEURYSM/AV FISTULA^PSEUDOANEURYSM/AV FISTULA^^^^^S
"DATA",64.061,5680,0)
PULMONARY ARTERIES^PULMONARY ARTERIES^^^^^S
"DATA",64.061,5681,0)
PULMONARY SYSTEM^PULMONARY SYSTEM^^^^^S
"DATA",64.061,5682,0)
PYLORUS+STOMACH^PYLORUS+STOMACH^^^^^S
"DATA",64.061,5683,0)
RADIUS+ULNA.XXX^RADIUS+ULNA.XXX^^^^^S
"DATA",64.061,5684,0)
RECTUM+URINARY BLADDER^RECTUM+URINARY BLADDER^^^^^S
"DATA",64.061,5685,0)
RENAL.XXX^RENAL.XXX^^^^^S
"DATA",64.061,5686,0)
RIBS.XXX^RIBS.XXX^^^^^S
"DATA",64.061,5687,0)
SACROILIAC JOINT^SACROILIAC JOINT^^^^^S
"DATA",64.061,5688,0)
SACROILIAC JOINT.XXX^SACROILIAC JOINT.XXX^^^^^S
"DATA",64.061,5689,0)
SALIVARY GLAND.XXX^SALIVARY GLAND.XXX^^^^^S
"DATA",64.061,5690,0)
SCAPULA.XXX^SCAPULA.XXX^^^^^S
"DATA",64.061,5691,0)
SHOULDER.XXX^SHOULDER.XXX^^^^^S
"DATA",64.061,5692,0)
SHUNT.XXX^SHUNT.XXX^^^^^S
"DATA",64.061,5693,0)
SINUS TRACT.XXX^SINUS TRACT.XXX^^^^^S
"DATA",64.061,5694,0)
SINUSES^SINUSES^^^^^S
"DATA",64.061,5695,0)
SKULL^SKULL^^^^^S
"DATA",64.061,5696,0)
SPINAL ARTERY.XXX^SPINAL ARTERY.XXX^^^^^S
"DATA",64.061,5697,0)
SPINAL CANAL^SPINAL CANAL^^^^^S
"DATA",64.061,5698,0)
SPINE.XXX^SPINE.XXX^^^^^S
"DATA",64.061,5699,0)
SPINE FACET.XXX^SPINE FACET.XXX^^^^^S
"DATA",64.061,5700,0)
SPINE.CERVICAL^SPINE.CERVICAL^^^^^S
"DATA",64.061,5701,0)
SPINE.CERVICAL.ODONTOID+SPINE.CERVICAL.AXIS^SPINE.CERVICAL.ODONTOID+SPINE.CERVICAL.AXIS^^^^^S
"DATA",64.061,5702,0)
SPINE.LUMBAR^SPINE.LUMBAR^^^^^S
"DATA",64.061,5703,0)
SPINAL CORD.LUMBAR^SPINAL CORD.LUMBAR^^^^^S
"DATA",64.061,5704,0)
SPINE.LUMBAR.SPACE.XXX^SPINE.LUMBAR.SPACE.XXX^^^^^S
"DATA",64.061,5705,0)
SPINE.LUMBAR+SACRAL JOINTS^SPINE.LUMBAR+SACRAL JOINTS^^^^^S
"DATA",64.061,5706,0)
SPINE.THORACIC^SPINE.THORACIC^^^^^S
"DATA",64.061,5707,0)
SPINE.THORACIC+SPINE.LUMBAR^SPINE.THORACIC+SPINE.LUMBAR^^^^^S
"DATA",64.061,5708,0)
SPINAL CORD.THORACIC^SPINAL CORD.THORACIC^^^^^S
"DATA",64.061,5709,0)
SPLEEN^SPLEEN^^^^^S
"DATA",64.061,5710,0)
SPLENIC+PORTAL ARTERIES^SPLENIC+PORTAL ARTERIES^^^^^S
"DATA",64.061,5711,0)
STERNOCLAVICULAR JOINTS^STERNOCLAVICULAR JOINTS^^^^^S
"DATA",64.061,5712,0)
STERNUM^STERNUM^^^^^S
"DATA",64.061,5713,0)
TEMPOROMANDIBULAR JOINTS^TEMPOROMANDIBULAR JOINTS^^^^^S
"DATA",64.061,5714,0)
TESTICLE.XXX^TESTICLE.XXX^^^^^S
"DATA",64.061,5715,0)
THIGH.VESSELS.XXX^THIGH.VESSELS.XXX^^^^^S
"DATA",64.061,5717,0)
THREE VESSELS.XXX^THREE VESSELS.XXX^^^^^S
"DATA",64.061,5718,0)
THUMB.XXX^THUMB.XXX^^^^^S
"DATA",64.061,5720,0)
TIBIA+FIBULA.XXX^TIBIA+FIBULA.XXX^^^^^S
"DATA",64.061,5721,0)
TIBIAL ARTERY.XXX^TIBIAL ARTERY.XXX^^^^^S
"DATA",64.061,5722,0)
TOES.XXX^TOES.XXX^^^^^S
"DATA",64.061,5723,0)
TWO VESSELS.XXX^TWO VESSELS.XXX^^^^^S
"DATA",64.061,5724,0)
URETHRA^URETHRA^^^^^S
"DATA",64.061,5725,0)
URETHRA+URINARY BLADDER^URETHRA+URINARY BLADDER^^^^^S
"DATA",64.061,5726,0)
URINARY BLADDER+URETHRA^URINARY BLADDER+URETHRA^^^^^S
"DATA",64.061,5727,0)
UTERUS+FALLOPIAN TUBES^UTERUS+FALLOPIAN TUBES^^^^^S
"DATA",64.061,5728,0)
VENA CAVA.INFERIOR^VENA CAVA.INFERIOR^^^^^S
"DATA",64.061,5729,0)
VESSEL.XXX^VESSEL.XXX^^^^^S
"DATA",64.061,5730,0)
VESSELS.XXX^VESSELS.XXX^^^^^S
"DATA",64.061,5731,0)
INTRAABDOMINAL ARTERY.XXX^INTRAABDOMINAL ARTERY.XXX^^^^^S
"DATA",64.061,5732,0)
WRIST.XXX^WRIST.XXX^^^^^S
"DATA",64.061,5733,0)
ZYGOMATIC ARCH.XXX^ZYGOMATIC ARCH.XXX^^^^^S
"DATA",64.061,5735,0)
INTRAHEPAR, LIVER PORTAL SYSTEM^INTRAHEPAR, LIVER PORTAL SYSTEM^^^^^S
"DATA",64.061,5736,0)
KIDNEY ARTERIES^KIDNEY ARTERIES^^^^^S
"DATA",64.061,5737,0)
KIDNEY VEINS^KIDNEY VEINS^^^^^S
"DATA",64.061,5738,0)
KIDNEY VESSEL.XXX^KIDNEY VESSEL.XXX^^^^^S
"DATA",64.061,5739,0)
PPP~CONTROL^PPP~CONTROL^^^^^S^Platlet poor plasma control
"DATA",64.061,5740,0)
VEIN.BILATERAL^VEIN.BILATERAL^^^^^S
"DATA",64.061,5741,0)
VEIN.LEFT^VEIN.LEFT^^^^^S
"DATA",64.061,5742,0)
VEIN.RIGHT^VEIN.RIGHT^^^^^S
"DATA",64.061,5743,0)
SALIVARY GLAND.BILATERAL^SALIVARY GLAND.BILATERAL^^^^^S
"DATA",64.061,5744,0)
SALIVARY GLAND.LEFT^SALIVARY GLAND.LEFT^^^^^S
"DATA",64.061,5745,0)
SALIVARY GLAND.RIGHT^SALIVARY GLAND.RIGHT^^^^^S
"DATA",64.061,5746,0)
HIP.BILATERAL^HIP.BILATERAL^^^^^S
"DATA",64.061,5747,0)
HIP.LEFT^HIP.LEFT^^^^^S
"DATA",64.061,5748,0)
HIP.RIGHT^HIP.RIGHT^^^^^S
"DATA",64.061,5749,0)
KNEE JOINT.BILATERAL^KNEE JOINT.BILATERAL^^^^^S
"DATA",64.061,5750,0)
KNEE JOINT.LEFT^KNEE JOINT.LEFT^^^^^S
"DATA",64.061,5751,0)
KNEE JOINT.RIGHT^KNEE JOINT.RIGHT^^^^^S
"DATA",64.061,5752,0)
SHOULDER.BILATERAL^SHOULDER.BILATERAL^^^^^S
"DATA",64.061,5753,0)
SHOULDER.LEFT^SHOULDER.LEFT^^^^^S
"DATA",64.061,5754,0)
SHOULDER.RIGHT^SHOULDER.RIGHT^^^^^S
"DATA",64.061,5755,0)
CAROTID ARTERY.BILATERAL^CAROTID ARTERY.BILATERAL^^^^^S
"DATA",64.061,5756,0)
SPINAL ARTERY.BILATERAL^SPINAL ARTERY.BILATERAL^^^^^S
"DATA",64.061,5757,0)
SPINAL ARTERY.LEFT^SPINAL ARTERY.LEFT^^^^^S
"DATA",64.061,5758,0)
SPINAL ARTERY.RIGHT^SPINAL ARTERY.RIGHT^^^^^S
"DATA",64.061,5759,0)
KNEE.BILATERAL^KNEE.BILATERAL^^^^^S
"DATA",64.061,5760,0)
KNEE.LEFT^KNEE.LEFT^^^^^S
"DATA",64.061,5761,0)
KNEE.RIGHT^KNEE.RIGHT^^^^^S
"DATA",64.061,5762,0)
TESTICLE.BILATERAL^TESTICLE.BILATERAL^^^^^S
"DATA",64.061,5763,0)
TESTICLE.LEFT^TESTICLE.LEFT^^^^^S
"DATA",64.061,5764,0)
TESTICLE.RIGHT^TESTICLE.RIGHT^^^^^S
"DATA",64.061,5765,0)
FOOT.BILATERAL^FOOT.BILATERAL^^^^^S
"DATA",64.061,5766,0)
ANKLE.BILATERAL^ANKLE.BILATERAL^^^^^S
"DATA",64.061,5767,0)
ANKLE.LEFT^ANKLE.LEFT^^^^^S
"DATA",64.061,5768,0)
ANKLE.RIGHT^ANKLE.RIGHT^^^^^S
"DATA",64.061,5769,0)
CALCANEUS.BILATERAL^CALCANEUS.BILATERAL^^^^^S
"DATA",64.061,5770,0)
CALCANEUS.LEFT^CALCANEUS.LEFT^^^^^S
"DATA",64.061,5771,0)
CALCANEUS.RIGHT^CALCANEUS.RIGHT^^^^^S
"DATA",64.061,5772,0)
CARPAL BONES.BILATERAL^CARPAL BONES.BILATERAL^^^^^S
"DATA",64.061,5773,0)
CARPAL BONES.LEFT^CARPAL BONES.LEFT^^^^^S
"DATA",64.061,5774,0)
CARPAL BONES.RIGHT^CARPAL BONES.RIGHT^^^^^S
"DATA",64.061,5775,0)
CLAVICLE.BILATERAL^CLAVICLE.BILATERAL^^^^^S
"DATA",64.061,5776,0)
CLAVICLE.LEFT^CLAVICLE.LEFT^^^^^S
"DATA",64.061,5777,0)
CLAVICLE.RIGHT^CLAVICLE.RIGHT^^^^^S
"DATA",64.061,5778,0)
ELBOW.BILATERAL^ELBOW.BILATERAL^^^^^S
"DATA",64.061,5779,0)
ELBOW.LEFT^ELBOW.LEFT^^^^^S
"DATA",64.061,5780,0)
ELBOW.RIGHT^ELBOW.RIGHT^^^^^S
"DATA",64.061,5781,0)
EXTREMITY.LOWER.BILATERAL^EXTREMITY.LOWER.BILATERAL^^^^^S
"DATA",64.061,5782,0)
EXTREMITY.LOWER.LEFT^EXTREMITY.LOWER.LEFT^^^^^S
"DATA",64.061,5783,0)
EXTREMITY.LOWER.RIGHT^EXTREMITY.LOWER.RIGHT^^^^^S
"DATA",64.061,5784,0)
EXTREMITY.UPPER.BILATERAL^EXTREMITY.UPPER.BILATERAL^^^^^S
"DATA",64.061,5785,0)
EXTREMITY.UPPER.LEFT^EXTREMITY.UPPER.LEFT^^^^^S
"DATA",64.061,5786,0)
EXTREMITY.UPPER.RIGHT^EXTREMITY.UPPER.RIGHT^^^^^S
"DATA",64.061,5787,0)
FEMUR.BILATERAL^FEMUR.BILATERAL^^^^^S
"DATA",64.061,5788,0)
FEMUR.LEFT^FEMUR.LEFT^^^^^S
"DATA",64.061,5789,0)
FEMUR.RIGHT^FEMUR.RIGHT^^^^^S
"DATA",64.061,5790,0)
FINGER.BILATERAL^FINGER.BILATERAL^^^^^S
"DATA",64.061,5791,0)
FINGER.LEFT^FINGER.LEFT^^^^^S
"DATA",64.061,5792,0)
FINGER.RIGHT^FINGER.RIGHT^^^^^S
"DATA",64.061,5793,0)
ACETABULUM.BILATERAL^ACETABULUM.BILATERAL^^^^^S
"DATA",64.061,5794,0)
ACETABULUM.LEFT^ACETABULUM.LEFT^^^^^S
"DATA",64.061,5795,0)
ACETABULUM.RIGHT^ACETABULUM.RIGHT^^^^^S
"DATA",64.061,5796,0)
ACROMIOCLAVICULAR JOINT.BILATERAL^ACROMIOCLAVICULAR JOINT.BILATERAL^^^^^S
"DATA",64.061,5797,0)
ACROMIOCLAVICULAR JOINT.LEFT^ACROMIOCLAVICULAR JOINT.LEFT^^^^^S
"DATA",64.061,5798,0)
ACROMIOCLAVICULAR JOINT.RIGHT^ACROMIOCLAVICULAR JOINT.RIGHT^^^^^S
"DATA",64.061,5799,0)
MASTOID.BILATERAL^MASTOID.BILATERAL^^^^^S
"DATA",64.061,5800,0)
MASTOID.LEFT^MASTOID.LEFT^^^^^S
"DATA",64.061,5801,0)
MASTOID.RIGHT^MASTOID.RIGHT^^^^^S
"DATA",64.061,5802,0)
OPTIC FORAMEN.BILATERAL^OPTIC FORAMEN.BILATERAL^^^^^S
"DATA",64.061,5803,0)
OPTIC FORAMEN.LEFT^OPTIC FORAMEN.LEFT^^^^^S
"DATA",64.061,5804,0)
OPTIC FORAMEN.RIGHT^OPTIC FORAMEN.RIGHT^^^^^S
"DATA",64.061,5805,0)
RADIUS+ULNA.BILATERAL^RADIUS+ULNA.BILATERAL^^^^^S
"DATA",64.061,5806,0)
RADIUS+ULNA.LEFT^RADIUS+ULNA.LEFT^^^^^S
"DATA",64.061,5807,0)
RADIUS+ULNA.RIGHT^RADIUS+ULNA.RIGHT^^^^^S
"DATA",64.061,5808,0)
RIBS.BILATERAL^RIBS.BILATERAL^^^^^S
"DATA",64.061,5809,0)
RIBS.LEFT^RIBS.LEFT^^^^^S
"DATA",64.061,5810,0)
RIBS.RIGHT^RIBS.RIGHT^^^^^S
"DATA",64.061,5811,0)
SCAPULA.BILATERAL^SCAPULA.BILATERAL^^^^^S
"DATA",64.061,5812,0)
SCAPULA.LEFT^SCAPULA.LEFT^^^^^S
"DATA",64.061,5813,0)
SCAPULA.RIGHT^SCAPULA.RIGHT^^^^^S
"DATA",64.061,5814,0)
THUMB.BILATERAL^THUMB.BILATERAL^^^^^S
"DATA",64.061,5815,0)
THUMB.LEFT^THUMB.LEFT^^^^^S
"DATA",64.061,5816,0)
THUMB.RIGHT^THUMB.RIGHT^^^^^S
"DATA",64.061,5817,0)
TIBIA+FIBULA.BILATERAL^TIBIA+FIBULA.BILATERAL^^^^^S
"DATA",64.061,5818,0)
TIBIA+FIBULA.LEFT^TIBIA+FIBULA.LEFT^^^^^S
"DATA",64.061,5819,0)
TIBIA+FIBULA.RIGHT^TIBIA+FIBULA.RIGHT^^^^^S
"DATA",64.061,5820,0)
TOES.BILATERAL^TOES.BILATERAL^^^^^S
"DATA",64.061,5821,0)
TOES.LEFT^TOES.LEFT^^^^^S
"DATA",64.061,5822,0)
TOES.RIGHT^TOES.RIGHT^^^^^S
"DATA",64.061,5823,0)
WRIST.BILATERAL^WRIST.BILATERAL^^^^^S
"DATA",64.061,5824,0)
WRIST.LEFT^WRIST.LEFT^^^^^S
"DATA",64.061,5825,0)
WRIST.RIGHT^WRIST.RIGHT^^^^^S
"DATA",64.061,5826,0)
ZYGOMATIC ARCH.BILATERAL^ZYGOMATIC ARCH.BILATERAL^^^^^S
"DATA",64.061,5827,0)
ZYGOMATIC ARCH.LEFT^ZYGOMATIC ARCH.LEFT^^^^^S
"DATA",64.061,5828,0)
ZYGOMATIC ARCH.RIGHT^ZYGOMATIC ARCH.RIGHT^^^^^S
"DATA",64.061,5829,0)
BREAST.BILATERAL^BREAST.BILATERAL^^^^^S
"DATA",64.061,5830,0)
BREAST.LEFT^BREAST.LEFT^^^^^S
"DATA",64.061,5831,0)
BREAST.RIGHT^BREAST.RIGHT^^^^^S
"DATA",64.061,5832,0)
FEMORAL ARTERY.BILATERAL^FEMORAL ARTERY.BILATERAL^^^^^S
"DATA",64.061,5833,0)
BRACHIAL PLEXUS.BILATERAL^BRACHIAL PLEXUS.BILATERAL^^^^^S
"DATA",64.061,5834,0)
BRACHIAL PLEXUS.LEFT^BRACHIAL PLEXUS.LEFT^^^^^S
"DATA",64.061,5835,0)
BRACHIAL PLEXUS.RIGHT^BRACHIAL PLEXUS.RIGHT^^^^^S
"DATA",64.061,5836,0)
EXTREMITY.BILATERAL^EXTREMITY.BILATERAL^^^^^S
"DATA",64.061,5837,0)
EXTREMITY.LEFT^EXTREMITY.LEFT^^^^^S
"DATA",64.061,5838,0)
EXTREMITY.RIGHT^EXTREMITY.RIGHT^^^^^S
"DATA",64.061,5839,0)
EXTREMITY.LOWER.JOINT.BILATERAL^EXTREMITY.LOWER.JOINT.BILATERAL^^^^^S
"DATA",64.061,5840,0)
EXTREMITY.LOWER.JOINT.LEFT^EXTREMITY.LOWER.JOINT.LEFT^^^^^S
"DATA",64.061,5841,0)
EXTREMITY.LOWER.JOINT.RIGHT^EXTREMITY.LOWER.JOINT.RIGHT^^^^^S
"DATA",64.061,5842,0)
FOREARM.BILATERAL^FOREARM.BILATERAL^^^^^S
"DATA",64.061,5843,0)
FOREARM.LEFT^FOREARM.LEFT^^^^^S
"DATA",64.061,5844,0)
FOREARM.RIGHT^FOREARM.RIGHT^^^^^S
"DATA",64.061,5845,0)
HAND.BILATERAL^HAND.BILATERAL^^^^^S
"DATA",64.061,5846,0)
HAND.LEFT^HAND.LEFT^^^^^S
"DATA",64.061,5847,0)
HAND.RIGHT^HAND.RIGHT^^^^^S
"DATA",64.061,5848,0)
INTERNAL AUDITORY CANAL.BILATERAL^INTERNAL AUDITORY CANAL.BILATERAL^^^^^S
"DATA",64.061,5849,0)
INTERNAL AUDITORY CANAL.LEFT^INTERNAL AUDITORY CANAL.LEFT^^^^^S
"DATA",64.061,5850,0)
INTERNAL AUDITORY CANAL.RIGHT^INTERNAL AUDITORY CANAL.RIGHT^^^^^S
"DATA",64.061,5851,0)
PELVIS+HIP.BILATERAL^PELVIS+HIP.BILATERAL^^^^^S
"DATA",64.061,5852,0)
PELVIS+HIP.LEFT^PELVIS+HIP.LEFT^^^^^S
"DATA",64.061,5853,0)
PELVIS+HIP.RIGHT^PELVIS+HIP.RIGHT^^^^^S
"DATA",64.061,5854,0)
POPLITEAL SPACE.BILATERAL^POPLITEAL SPACE.BILATERAL^^^^^S
"DATA",64.061,5855,0)
POPLITEAL SPACE.LEFT^POPLITEAL SPACE.LEFT^^^^^S
"DATA",64.061,5856,0)
POPLITEAL SPACE.RIGHT^POPLITEAL SPACE.RIGHT^^^^^S
"DATA",64.061,5857,0)
THIGH.BILATERAL^THIGH.BILATERAL^^^^^S
"DATA",64.061,5858,0)
VEIN.CENTRAL.BILATERAL^VEIN.CENTRAL.BILATERAL^^^^^S
"DATA",64.061,5859,0)
VEIN.CENTRAL.LEFT^VEIN.CENTRAL.LEFT^^^^^S
"DATA",64.061,5860,0)
VEIN.CENTRAL.RIGHT^VEIN.CENTRAL.RIGHT^^^^^S
"DATA",64.061,5861,0)
BREAST.MASS.BILATERAL^BREAST.MASS.BILATERAL^^^^^S
"DATA",64.061,5862,0)
BREAST.MASS.LEFT^BREAST.MASS.LEFT^^^^^S
"DATA",64.061,5863,0)
BREAST.MASS.RIGHT^BREAST.MASS.RIGHT^^^^^S
"DATA",64.061,5864,0)
SACROILIAC JOINT.BILATERAL^SACROILIAC JOINT.BILATERAL^^^^^S
"DATA",64.061,5865,0)
SACROILIAC JOINT.LEFT^SACROILIAC JOINT.LEFT^^^^^S
"DATA",64.061,5866,0)
SACROILIAC JOINT.RIGHT^SACROILIAC JOINT.RIGHT^^^^^S
"DATA",64.061,5867,0)
SPINE FACET.BILATERAL^SPINE FACET.BILATERAL^^^^^S
"DATA",64.061,5868,0)
SPINE FACET.LEFT^SPINE FACET.LEFT^^^^^S
"DATA",64.061,5869,0)
SPINE FACET.RIGHT^SPINE FACET.RIGHT^^^^^S
"DATA",64.061,5870,0)
RENAL.BILATERAL^RENAL.BILATERAL^^^^^S
"DATA",64.061,5871,0)
RENAL.LEFT^RENAL.LEFT^^^^^S
"DATA",64.061,5872,0)
RENAL.RIGHT^RENAL.RIGHT^^^^^S
"DATA",64.061,5873,0)
KIDNEY.BILATERAL^KIDNEY.BILATERAL^^^^^S
"DATA",64.061,5874,0)
BREAST.CYST.BILATERAL^BREAST.CYST.BILATERAL^^^^^S
"DATA",64.061,5875,0)
BREAST.CYST.LEFT^BREAST.CYST.LEFT^^^^^S
"DATA",64.061,5876,0)
BREAST.CYST.RIGHT^BREAST.CYST.RIGHT^^^^^S
"DATA",64.061,5877,0)
HAND+WRIST.BILATERAL^HAND+WRIST.BILATERAL^^^^^S
"DATA",64.061,5878,0)
HAND+WRIST.LEFT^HAND+WRIST.LEFT^^^^^S
"DATA",64.061,5879,0)
HAND+WRIST.RIGHT^HAND+WRIST.RIGHT^^^^^S
"DATA",64.061,5880,0)
BRACHIAL+CEPHALIC ARTERY.BILATERAL^BRACHIAL+CEPHALIC ARTERY.BILATERAL^^^^^S
"DATA",64.061,5881,0)
BRACHIAL+CEPHALIC ARTERY.LEFT^BRACHIAL+CEPHALIC ARTERY.LEFT^^^^^S
"DATA",64.061,5882,0)
BRACHIAL+CEPHALIC ARTERY.RIGHT^BRACHIAL+CEPHALIC ARTERY.RIGHT^^^^^S
"DATA",64.061,5883,0)
ILIAC ARTERY.BILATERAL^ILIAC ARTERY.BILATERAL^^^^^S
"DATA",64.061,5884,0)
TIBIAL ARTERY.BILATERAL^TIBIAL ARTERY.BILATERAL^^^^^S
"DATA",64.061,5885,0)
TIBIAL ARTERY.LEFT^TIBIAL ARTERY.LEFT^^^^^S
"DATA",64.061,5886,0)
TIBIAL ARTERY.RIGHT^TIBIAL ARTERY.RIGHT^^^^^S
"DATA",64.061,5887,0)
HUMERUS.BILATERAL^HUMERUS.BILATERAL^^^^^S
"DATA",64.061,5888,0)
HUMERUS.LEFT^HUMERUS.LEFT^^^^^S
"DATA",64.061,5889,0)
HUMERUS.RIGHT^HUMERUS.RIGHT^^^^^S
"DATA",64.061,5890,0)
PATELLA.BILATERAL^PATELLA.BILATERAL^^^^^S
"DATA",64.061,5891,0)
PATELLA.LEFT^PATELLA.LEFT^^^^^S
"DATA",64.061,5892,0)
PATELLA.RIGHT^PATELLA.RIGHT^^^^^S
"DATA",64.061,5912,0)
CARDIAC REHABILITATION TREATMENT PLAN^CARDIAC REHABILITATION TREATMENT PLAN^^^^^S
"DATA",64.061,5914,0)
CARDIAC REHABILITATION TREATMENT^CARDIAC REHABILITATION TREATMENT^^^^^S
"DATA",64.061,5915,0)
HOSP LEADING TO CARDIAC REHAB RX^HOSP LEADING TO CARDIAC REHAB RX^^^^^S
"DATA",64.061,5916,0)
SKILLED NURSING TREATMENT PLAN^SKILLED NURSING TREATMENT PLAN^^^^^S
"DATA",64.061,5918,0)
PRIMARY DX FOR SKILLED NURSING TREATMENT PLAN^PRIMARY DX FOR SKILLED NURSING TREATMENT PLAN^^^^^S
"DATA",64.061,5919,0)
ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT PLAN^ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT PLAN^^^^^S
"DATA",64.061,5920,0)
PRIMARY DX FOR CARDIAC REHABILITATION TREATMENT PLAN^PRIMARY DX FOR CARDIAC REHABILITATION TREATMENT PLAN^^^^^S
"DATA",64.061,5921,0)
HOSP LEADING TO ALCOHOL ABUSE REHAB RX^HOSP LEADING TO ALCOHOL ABUSE REHAB RX^^^^^S
"DATA",64.061,5922,0)
ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT^ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT^^^^^S
"DATA",64.061,5923,0)
HOSPITALIZATION LEADING TO SKILLED NURSING TREATMENT^HOSPITALIZATION LEADING TO SKILLED NURSING TREATMENT^^^^^S
"DATA",64.061,5924,0)
SKILLED NURSING TREATMENT^SKILLED NURSING TREATMENT^^^^^S
"DATA",64.061,5925,0)
OCCUPATIONAL THERAPY TREATMENT PLAN^OCCUPATIONAL THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5927,0)
PRIMARY DX FOR OCCUPATIONAL THERAPY TREATMENT PLAN^PRIMARY DX FOR OCCUPATIONAL THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5928,0)
HOSP LEADING TO OCCUPATIONAL THERAPY RX^HOSP LEADING TO OCCUPATIONAL THERAPY RX^^^^^S
"DATA",64.061,5929,0)
OCCUPATIONAL THERAPY TREATMENT^OCCUPATIONAL THERAPY TREATMENT^^^^^S
"DATA",64.061,5930,0)
HOSPITALIZATION LEADING TO PHYSICAL THERAPY TREATMENT^HOSPITALIZATION LEADING TO PHYSICAL THERAPY TREATMENT^^^^^S
"DATA",64.061,5932,0)
PHYSICAL THERAPY TREATMENT PLAN^PHYSICAL THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5933,0)
PRIMARY DX FOR PHYSICAL THERAPY TREATMENT PLAN^PRIMARY DX FOR PHYSICAL THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5934,0)
PHYSICAL THERAPY TREATMENT^PHYSICAL THERAPY TREATMENT^^^^^S
"DATA",64.061,5935,0)
RESPIRATORY THERAPY TREATMENT PLAN^RESPIRATORY THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5937,0)
PRIMARY DX FOR RESPIRATORY THERAPY TREATMENT PLAN^PRIMARY DX FOR RESPIRATORY THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,5938,0)
RESPIRATORY THERAPY TREATMENT^RESPIRATORY THERAPY TREATMENT^^^^^S
"DATA",64.061,5939,0)
HOSP LEADING TO RESPIRATORY THERAPY RX^HOSP LEADING TO RESPIRATORY THERAPY RX^^^^^S
"DATA",64.061,5940,0)
MEDICAL SOCIAL SERVICES TREATMENT PLAN^MEDICAL SOCIAL SERVICES TREATMENT PLAN^^^^^S
"DATA",64.061,5942,0)
PRIMARY DX FOR MEDICAL SOCIAL SERVICES TREATMENT PLAN^PRIMARY DX FOR MEDICAL SOCIAL SERVICES TREATMENT PLAN^^^^^S
"DATA",64.061,5943,0)
HOSP LEADING TO MEDICAL SOCIAL SERVICES RX^HOPS LEADING TO MEDICAL SOCIAL SERVICES RX^^^^^S
"DATA",64.061,5944,0)
MEDICAL SOCIAL SERVICES TREATMENT^MEDICAL SOCIAL SERVICES TREATMENT^^^^^S
"DATA",64.061,5945,0)
PRIMARY DX FOR ALCOHOL ABUSE REHAB RX PLAN^PRIMARY DX FOR ALCOHOL ABUSE REHAB RX PLAN^^^^^S
"DATA",64.061,5956,0)
LIVER+PANCREAS^LIVER+PANCREAS^^^^^S
"DATA",64.061,5957,0)
RECTUM+COLON^RECTUM+COLON^^^^^S
"DATA",64.061,5960,0)
SURVEY.NURSE.HHCC
"DATA",64.061,5969,0)
~FAMILY^~FAMILY^^^^^S
"DATA",64.061,5974,0)
NEURO-MUSCULO-SKELETAL SYSTEM^NEURO-MUSCULO-SKELETAL SYSTEM^^^^^S
"DATA",64.061,5986,0)
GENITOURINARY SYSTEM^GENITOURINARY SYSTEM^^^^^S
"DATA",64.061,5995,0)
IMMUNE SYSTEM^IMMUNE SYSTEM^^^^^S
"DATA",64.061,6023,0)
SURVEY.NURSE.LIV-HIV
"DATA",64.061,6046,0)
MOUTH & THROAT^MOUTH & THROAT^^^^^S
"DATA",64.061,6341,0)
Percent^PCT^PCT^PCT^^^PR^^7
"DATA",64.061,6380,0)
BLDCOV^BLDCOV^^^^^S
"DATA",64.061,6381,0)
BLDCOA^BLDCOA^^^^^S
"DATA",64.061,6389,0)
LM GLASSES^LM GLASSES^^^^^S
"DATA",64.061,6390,0)
LM GLASSES.LENS.RIGHT^LM GLASSES.LENS.RIGHT^^^^^S
"DATA",64.061,6391,0)
LM GLASSES.LENS.LEFT^LM GLASSES.LENS.LEFT^^^^^S
"DATA",64.061,6392,0)
GLASSES PRESCRIPTION^GLASSES PRESCRIPTION^^^^^S
"DATA",64.061,6393,0)
GLASSES PRESCRIPTION.LENS.RIGHT^GLASSES PRESCRIPTION.LENS.RIGHT^^^^^S
"DATA",64.061,6394,0)
GLASSES PRESCRIPTION.LENS.LEFT^GLASSES PRESCRIPTION.LENS.LEFT^^^^^S
"DATA",64.061,6395,0)
CONTACT LENS.RIGHT^CONTACT LENS.RIGHT^^^^^S
"DATA",64.061,6396,0)
CONTACT LENS.LEFT^CONTACT LENS.LEFT^^^^^S
"DATA",64.061,6397,0)
CONTACT LENS^CONTACT LENS^^^^^S
"DATA",64.061,6398,0)
CONTACT LENS.PRESCRIPTION.RIGHT^CONTACT LENS.PRESCRIPTION.RIGHT^^^^^S
"DATA",64.061,6399,0)
CONTACT LENS.PRESCRIPTION.LEFT^CONTACT LENS.PRESCRIPTION.LEFT^^^^^S
"DATA",64.061,6400,0)
VISUAL SENSORY^VISUAL SENSORY^^^^^S
"DATA",64.061,6401,0)
Relative Catalytic Concentration^RLCCNC^RLCCNC^RLCCNC^^^PR^^7
"DATA",64.061,6402,0)
EYE LID.RIGHT^EYE LID.RIGHT^^^^^S
"DATA",64.061,6403,0)
EYE LID.LEFT^EYE LID.LEFT^^^^^S
"DATA",64.061,6404,0)
LACRIMAL GLAND.RIGHT^LACRIMAL GLAND.RIGHT^^^^^S
"DATA",64.061,6405,0)
LACRIMAL GLAND.LEFT^LACRIMAL GLAND.LEFT^^^^^S
"DATA",64.061,6406,0)
CONJUNCTIVA.RIGHT^CONJUNCTIVA.RIGHT^^^^^S
"DATA",64.061,6407,0)
CONJUNCTIVA.LEFT^CONJUNCTIVA.LEFT^^^^^S
"DATA",64.061,6408,0)
CORNEA.RIGHT^CORNEA.RIGHT^^^^^S
"DATA",64.061,6409,0)
CORNEA.LEFT^CORNEA.LEFT^^^^^S
"DATA",64.061,6410,0)
ANTERIOR CHAMBER.RIGHT^ANTERIOR CHAMBER.RIGHT^^^^^S
"DATA",64.061,6411,0)
ANTERIOR CHAMBER.LEFT^ANTERIOR CHAMBER.LEFT^^^^^S
"DATA",64.061,6412,0)
IRIS.RIGHT^IRIS.RIGHT^^^^^S
"DATA",64.061,6413,0)
IRIS.LEFT^IRIS.LEFT^^^^^S
"DATA",64.061,6414,0)
OPTIC LENS.RIGHT^OPTIC LENS.RIGHT^^^^^S
"DATA",64.061,6415,0)
OPTIC LENS.LEFT^OPTIC LENS.LEFT^^^^^S
"DATA",64.061,6416,0)
CILIARY BODY.RIGHT^CILIARY BODY.RIGHT^^^^^S
"DATA",64.061,6417,0)
CILIARY BODY.LEFT^CILIARY BODY.LEFT^^^^^S
"DATA",64.061,6418,0)
VITREOUS BODY.RIGHT^VITREOUS BODY.RIGHT^^^^^S
"DATA",64.061,6419,0)
VITREOUS BODY.LEFT^VITREOUS BODY.LEFT^^^^^S
"DATA",64.061,6420,0)
RETINA.RIGHT^RETINA.RIGHT^^^^^S
"DATA",64.061,6421,0)
RETINA.LEFT^RETINA.LEFT^^^^^S
"DATA",64.061,6422,0)
CHOROIDEA.RIGHT^CHOROIDEA.RIGHT^^^^^S
"DATA",64.061,6423,0)
CHOROIDEA.LEFT^CHOROIDEA.LEFT^^^^^S
"DATA",64.061,6426,0)
SER~BPU^SER~BPU^^^^^S^Serum Blood Product Unit
"DATA",64.061,6427,0)
RBC~BPU^RBC~BPU^^^^^S
"DATA",64.061,6428,0)
RBC~DONOR^RBC~DONOR^^^^^S
"DATA",64.061,6429,0)
RBC~PATIENT^RBC~PATIENT^^^^^S
"DATA",64.061,6430,0)
BBL~BPU^BBL~BPU^^^^^S
"DATA",64.061,6432,0)
90M POST DOSE INSULIN IV^^^^^^C
"DATA",64.061,6433,0)
1H POST DOSE INSULIN IV^^^^^^C
"DATA",64.061,6434,0)
30M POST DOSE INSULIN IV^^^^^^C
"DATA",64.061,6435,0)
45M POST DOSE INSULIN IV^^^^^^C
"DATA",64.061,6436,0)
5M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,6437,0)
BS PRE 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,6438,0)
24H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6439,0)
48H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6440,0)
72H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6441,0)
BS PRE 50 UG CORTICOTROPIN IM 3 DAY^^^^^^C
"DATA",64.061,6442,0)
1H POST 250 UG CORTICOTROPIN IM RAPID^^^^^^C
"DATA",64.061,6443,0)
1H POST 250 UG CORTICOTROPIN IV RAPID^^^^^^C
"DATA",64.061,6444,0)
26H POST DOSE DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,6445,0)
30M POST 250 UG CORTICOTROPIN IM RAPID^^^^^^C
"DATA",64.061,6446,0)
30M POST 250 UG CORTICOTROPIN IV RAPID^^^^^^C
"DATA",64.061,6447,0)
32H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6448,0)
50H POST DOSE DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,6449,0)
56H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6450,0)
8H POST 40 UG CORTICOTROPIN IM BID 3 DAY^^^^^^C
"DATA",64.061,6451,0)
BS PRE 40 UG CORTICOTROPIN IM 3 DAY^^^^^^C
"DATA",64.061,6452,0)
48H POST DOSE DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^^C
"DATA",64.061,6453,0)
90M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6454,0)
90M POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6455,0)
105M POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6456,0)
15M POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6457,0)
1H POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6458,0)
1H POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6459,0)
2H POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6460,0)
30M POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6461,0)
30M POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6462,0)
45M POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6463,0)
75M POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,6464,0)
BS PRE DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6465,0)
10M POST 0.2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,6466,0)
15M POST 0.2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,6467,0)
20M POST 0.2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,6468,0)
25M POST 0.2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,6469,0)
30M POST 0.2 U/KG SECRETIN IV^^^^^^C
"DATA",64.061,6470,0)
5M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,6471,0)
BS PRE 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,6472,0)
1.5H POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6473,0)
1.5H POST 0.05-0.15 U INSULIN/KG IV POST 12H CFST^^^^^^C
"DATA",64.061,6474,0)
1.5H POST 100 G GLUCOSE PO^^^^^^C
"DATA",64.061,6475,0)
1.5H POST 75 G GLUCOSE PO^^^^^^C
"DATA",64.061,6476,0)
1.5H POST DOSE INSULIN IV^^^^^^C
"DATA",64.061,6477,0)
10M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6478,0)
1H POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6479,0)
1M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6480,0)
20M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6481,0)
30M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6482,0)
3M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6483,0)
40M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6484,0)
5M POST 0.5 G/KG GLUCOSE IV^^^^^^C
"DATA",64.061,6485,0)
1.5H POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6486,0)
1.5H POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6487,0)
105M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6488,0)
15M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6489,0)
1H POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6490,0)
2H POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6491,0)
2H POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,6492,0)
30M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6493,0)
45M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6494,0)
75M POST 100 G LUTROPIN IV^^^^^^C
"DATA",64.061,6495,0)
1H POST DOSE TRH IV^^^^^^C
"DATA",64.061,6496,0)
METHODLESS^***^^^^^PR^Not method specific
"DATA",64.061,6503,0)
*^^^^^^C
"DATA",64.061,6510,0)
BLD~DONOR^BLD~DONOR^^^^^S^Blood Donor
"DATA",64.061,6511,0)
BLD~PATIENT^BLD~PATIENT^^^^^S^Blood Patient
"DATA",64.061,6512,0)
BBL~PATIENT^BBL~PATIENT^^^^^S
"DATA",64.061,6513,0)
20M POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,6514,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,6515,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,6516,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,6517,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,6531,0)
1HR MAX^1H-MAX^^1H~MAX^^^S^ONE HOUR MAXIMUM
"DATA",64.061,6532,0)
8H MAX^8H~MAX^^8H~MAX^^^S^8 HOUR MAXIMUM^8
"DATA",64.061,6533,0)
10H MAX^10H~MAX^^^^^S^1O HOUR MAXIMUM^8
"DATA",64.061,6534,0)
12H MAX^12H~MAX^^12H~MAX^^^S^12 HOUR MAXIMUM^8
"DATA",64.061,6535,0)
24H MAX^24H~MAX^^24H~MAX^^^S^24 HOUR MAXIMUM^8
"DATA",64.061,6536,0)
1H MIM^1H~MIN^^^^^S^1 HOUR MIN^8
"DATA",64.061,6537,0)
8H MIN^8H~MIN^^8H~MIN^^^S^8 HOUR MIN^8
"DATA",64.061,6538,0)
10H MIN^10H~MIN^^1OH~MIN^^^S^10 HOUR MIN^8
"DATA",64.061,6539,0)
12H MIN^12H~MIN^^12H~MIN^^^S^12 HOUR MIN^8
"DATA",64.061,6540,0)
24H MIN^24H~MIN^^24H~MIN^^^S^24 HOUR MIN^8
"DATA",64.061,6541,0)
*~PATIENT^*~PATIENT^^^^^S^Anywhere from patient
"DATA",64.061,6564,0)
HEART.ATRIUM.LEFT^HEART.ATRIUM.LEFT^^^^^S
"DATA",64.061,6565,0)
HEART.ATRIUM.RIGHT^HEART.ATRIUM.RIGHT^^^^^S
"DATA",64.061,6566,0)
1H MEAN^1H~MEAN^^1H~MEAN^^^S^1 HOUR MEAN^8
"DATA",64.061,6567,0)
8H MEAN^8H~MEAN^^H8~MEAN^^^S^8 HOUR MEAN^8
"DATA",64.061,6568,0)
10H MEAN^10H~MEAN^^10H~MEAN^^^S^10 HOUR MEAN^8
"DATA",64.061,6569,0)
12H MEAN^12H~MEAN^^12H~MEAN^^^S^12 HOUR MEAN^8
"DATA",64.061,6570,0)
24H MEAN^24H~MEAN^^24H~MEAN^^^S^24 HOUR MEAN^8
"DATA",64.061,6620,0)
HEART.VENTRICLE^HEART.VENTRICLE^^^^^S
"DATA",64.061,6621,0)
HEART.VENTRICLE.RIGHT^HEART.VENTRICLE.RIGHT^^^^^S
"DATA",64.061,6622,0)
Resistance^RESIS^^^^^PR
"DATA",64.061,6623,0)
Substance Fraction Ratio^SFCR^^^^^PR
"DATA",64.061,6624,0)
HEART.ATRIUM.RIGHT.HIGH^HEART.ATRIUM.RIGHT.HIGH^^^^^S
"DATA",64.061,6625,0)
HEART.ATRIUM.RIGHT.LOW^HEART.ATRIUM.RIGHT.LOW^^^^^S
"DATA",64.061,6626,0)
HEART.ATRIUM.RIGHT.MID^HEART.ATRIUM.RIGHT.MID^^^^^S
"DATA",64.061,6629,0)
HEART.VENTRICLES^HEART.VENTRICLES^^^^^S
"DATA",64.061,6630,0)
POPLITEAL ARTERY.LEFT^POPLITEAL ARTERY.LEFT^^^^^S
"DATA",64.061,6631,0)
POPLITEAL ARTERY.RIGHT^POPLITEAL ARTERY.RIGHT^^^^^S
"DATA",64.061,6632,0)
POSTERIOR TIBIAL ARTERY. RIGHT^POSTERIOR TIBIAL ARTERY. RIGHT^^^^^S
"DATA",64.061,6798,0)
~MUSHROOM SPECIMEN^~MUSHROOM SPECIMEN^^^^^S
"DATA",64.061,6799,0)
~PLANT SPECIMEN^~PLANT SPECIMEN^^^^^S
"DATA",64.061,6802,0)
3H POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,6803,0)
4H POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,6804,0)
5H POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,6805,0)
45M POST DOSE TRH IV^^^^^^C
"DATA",64.061,6807,0)
BLDCO~FETUS^BLDCO~FETUS^^^^^S
"DATA",64.061,6808,0)
ENCOUNTER FIRST^ENCTR~FRST^^ENCTR~FRST^^^PR^FIRST ENCOUNTER^8
"DATA",64.061,6813,0)
Q^Q^Q^^^^PR
"DATA",64.061,6842,0)
PSYCHIATRIC~PATIENT^PSYCHIATRIC~PATIENT^^^^^S
"DATA",64.061,6862,0)
PROVIDER-XXX^^^^^^A
"DATA",64.061,6880,0)
REPORT~PATIENT^REPORT~PATIENT
"DATA",64.061,6889,0)
STDY-MAX^STDY~MAX^^STDY~MAX^^^S^Maximum study time^8
"DATA",64.061,6900,0)
PELVIS+FETUS^PELVIS+FETUS^^^^^S
"DATA",64.061,6905,0)
SURGERY~PATIENT^SURGERY~PATIENT
"DATA",64.061,6915,0)
HEART~FETUS^HEART~FETUS^^^^^S
"DATA",64.061,6916,0)
LIMBS~FETUS^LIMBS~FETUS^^^^^S
"DATA",64.061,6917,0)
RESPIRATORY SYSTEM~FETUS^RESPIRATORY SYSTEM~FETUS^^^^^S
"DATA",64.061,6918,0)
TRUNK~FETUS^TRUNK~FETUS^^^^^S
"DATA",64.061,6919,0)
AMNIOTIC FLUID.QUADRANT FOUR~FETUS^AMNIOTIC FLUID.QUADRANT FOUR~FETUS^^^^^S
"DATA",64.061,6920,0)
AMNIOTIC FLUID.QUADRANT ONE~FETUS^AMNIOTIC FLUID.QUADRANT ONE~FETUS^^^^^S
"DATA",64.061,6921,0)
AMNIOTIC FLUID.QUADRANT THREE~FETUS^AMNIOTIC FLUID.QUADRANT THREE~FETUS^^^^^S
"DATA",64.061,6922,0)
AMNIOTIC FLUID.QUADRANT TWO~FETUS^AMNIOTIC FLUID.QUADRANT TWO~FETUS^^^^^S
"DATA",64.061,6923,0)
AMNIOTIC FLUID~FETUS^AMNIOTIC FLUID~FETUS^^^^^S
"DATA",64.061,6924,0)
HEAD~FETUS^HEAD~FETUS^^^^^S
"DATA",64.061,6936,0)
MITRAL VALVE~FETUS^MITRAL VALVE~FETUS^^^^^S
"DATA",64.061,6937,0)
MITRAL VALVE~PATIENT^MITRAL VALVE~PATIENT^^^^^S
"DATA",64.061,6938,0)
TRICUSPID VALVE~FETUS^TRICUSPID VALVE~FETUS^^^^^S
"DATA",64.061,6939,0)
TRICUSPID VALVE~PATIENT^TRICUSPID VALVE~PATIENT^^^^^S
"DATA",64.061,6940,0)
CEREBRAL ARTERY ANTERIOR~FETUS^CEREBRAL ARTERY ANTERIOR~FETUS^^^^^S
"DATA",64.061,6941,0)
CEREBRAL ARTERY ANTERIOR~PATIENT^CEREBRAL ARTERY ANTERIOR~PATIENT^^^^^S
"DATA",64.061,6942,0)
CEREBRAL ARTERY MIDDLE~FETUS^CEREBRAL ARTERY MIDDLE~FETUS^^^^^S
"DATA",64.061,6943,0)
CEREBRAL ARTERY MIDDLE~PATIENT^CEREBRAL ARTERY MIDDLE~PATIENT^^^^^S
"DATA",64.061,6944,0)
OVARIAN ARTERY.LEFT~PATIENT^OVARIAN ARTERY.LEFT~PATIENT^^^^^S
"DATA",64.061,6945,0)
OVARIAN ARTERY.RIGHT~PATIENT^OVARIAN ARTERY.RIGHT~PATIENT^^^^^S
"DATA",64.061,6946,0)
UMBILICAL ARTERY.AT FETUS~FETUS^UMBILICAL ARTERY.AT FETUS~FETUS^^^^^S
"DATA",64.061,6947,0)
UMBILICAL ARTERY.AT PLACENTA~FETUS^UMBILICAL ARTERY.AT PLACENTA~FETUS^^^^^S
"DATA",64.061,6948,0)
UMBILICAL ARTERY.BETWEEN FETUS AND PLACENTA~FETUS^UMBILICAL ARTERY.BETWEEN FETUS AND PLACENTA~FETUS^^^^^S
"DATA",64.061,6949,0)
UTERINE ARTERY.LEFT~PATIENT^UTERINE ARTERY.LEFT~PATIENT^^^^^S
"DATA",64.061,6950,0)
UTERINE ARTERY.RIGHT~PATIENT^UTERINE ARTERY.RIGHT~PATIENT^^^^^S
"DATA",64.061,6951,0)
AORTA ASCENDING~FETUS^AORTA ASCENDING~FETUS^^^^^S
"DATA",64.061,6952,0)
AORTA ASCENDING~PATIENT^AORTA ASCENDING~PATIENT^^^^^S
"DATA",64.061,6953,0)
AORTA DESCENDING~FETUS^AORTA DESCENDING~FETUS^^^^^S
"DATA",64.061,6954,0)
AORTA DESCENDING~PATIENT^AORTA DESCENDING~PATIENT^^^^^S
"DATA",64.061,6955,0)
AORTIC ARCH~FETUS^AORTIC ARCH~FETUS^^^^^S
"DATA",64.061,6956,0)
AORTIC ARCH~PATIENT^AORTIC ARCH~PATIENT^^^^^S
"DATA",64.061,6957,0)
DUCTUS ARTERIOSUS~FETUS^DUCTUS ARTERIOSUS~FETUS^^^^^S
"DATA",64.061,6958,0)
DUCTUS ARTERIOSUS~PATIENT^DUCTUS ARTERIOSUS~PATIENT^^^^^S
"DATA",64.061,6959,0)
PULMONARY VALVE~FETUS^PULMONARY VALVE~FETUS^^^^^S
"DATA",64.061,6960,0)
PULMONARY VALVE~PATIENT^PULMONARY VALVE~PATIENT^^^^^S
"DATA",64.061,6961,0)
HEART.VENTRICLE.LEFT.OUTFLOW TRACT~FETUS^HEART.VENTRICLE.LEFT.OUTFLOW TRACT~FETUS^^^^^S
"DATA",64.061,6962,0)
HEART.VENTRICLE.LEFT.OUTFLOW TRACT~PATIENT^HEART.VENTRICLE.LEFT.OUTFLOW TRACT~PATIENT^^^^^S
"DATA",64.061,6963,0)
HEART.VENTRICLE.RIGHT.OUTFLOW TRACT~FETUS^HEART.VENTRICLE.RIGHT.OUTFLOW TRACT~FETUS^^^^^S
"DATA",64.061,6964,0)
HEART.VENTRICLE.RIGHT.OUTFLOW TRACT~PATIENT^HEART.VENTRICLE.RIGHT.OUTFLOW TRACT~PATIENT^^^^^S
"DATA",64.061,6965,0)
PULMONARY ARTERY.MAIN~FETUS^PULMONARY ARTERY.MAIN~FETUS^^^^^S
"DATA",64.061,6966,0)
PULMONARY ARTERY.MAIN~PATIENT^PULMONARY ARTERY.MAIN~PATIENT^^^^^S
"DATA",64.061,6967,0)
AORTIC VALVE~FETUS^AORTIC VALVE~FETUS^^^^^S
"DATA",64.061,6968,0)
AORTIC VALVE~PATIENT^AORTIC VALVE~PATIENT^^^^^S
"DATA",64.061,7051,0)
~POPULATION DISTRIBUTION^~POPULATION DISTRIBUTION^^^^^S
"DATA",64.061,7057,0)
ABDOMEN~FETUS^ABDOMEN~FETUS^^^^^S
"DATA",64.061,7064,0)
BOWEL~FETUS^BOWEL~FETUS^^^^^S
"DATA",64.061,7065,0)
BOWEL~PATIENT^BOWEL~PATIENT^^^^^S
"DATA",64.061,7066,0)
CERVICAL CANAL.EXTERNAL OS~PATIENT^CERVICAL CANAL.EXTERNAL OS~PATIENT^^^^^S
"DATA",64.061,7067,0)
CERVICAL CANAL.INTERNAL OS~PATIENT^CERVICAL CANAL.INTERNAL OS~PATIENT^^^^^S
"DATA",64.061,7068,0)
CERVICAL CANAL~PATIENT^CERVICAL CANAL~PATIENT^^^^^S
"DATA",64.061,7069,0)
COLON.LUMEN~FETUS^COLON.LUMEN~FETUS^^^^^S
"DATA",64.061,7070,0)
COLON.LUMEN~PATIENT^COLON.LUMEN~PATIENT^^^^^S
"DATA",64.061,7071,0)
EYE~FETUS^EYE~FETUS^^^^^S
"DATA",64.061,7072,0)
PULMONARY ARTERY~FETUS^PULMONARY ARTERY~FETUS^^^^^S
"DATA",64.061,7073,0)
PULMONARY ARTERY~PATIENT^PULMONARY ARTERY~PATIENT^^^^^S
"DATA",64.061,7074,0)
RENAL PELVIS.LEFT~FETUS^RENAL PELVIS.LEFT~FETUS^^^^^S
"DATA",64.061,7075,0)
RENAL PELVIS.LEFT~PATIENT^RENAL PELVIS.LEFT~PATIENT^^^^^S
"DATA",64.061,7076,0)
RENAL PELVIS.RIGHT~FETUS^RENAL PELVIS.RIGHT~FETUS^^^^^S
"DATA",64.061,7077,0)
RENAL PELVIS.RIGHT~PATIENT^RENAL PELVIS.RIGHT~PATIENT^^^^^S
"DATA",64.061,7078,0)
SMALL BOWEL~FETUS^SMALL BOWEL~FETUS^^^^^S
"DATA",64.061,7079,0)
SMALL BOWEL~PATIENT^SMALL BOWEL~PATIENT^^^^^S
"DATA",64.061,7080,0)
UMBILICAL VEIN~FETUS^UMBILICAL VEIN~FETUS^^^^^S
"DATA",64.061,7081,0)
URINARY BLADDER~FETUS^URINARY BLADDER~FETUS^^^^^S
"DATA",64.061,7082,0)
YOLK SAC~FETUS^YOLK SAC~FETUS^^^^^S
"DATA",64.061,7083,0)
THORAX~FETUS^THORAX~FETUS^^^^^S
"DATA",64.061,7084,0)
KIDNEY.LEFT~FETUS^KIDNEY.LEFT~FETUS^^^^^S
"DATA",64.061,7085,0)
KIDNEY.LEFT~PATIENT^KIDNEY.LEFT~PATIENT^^^^^S
"DATA",64.061,7086,0)
KIDNEY.RIGHT~FETUS^KIDNEY.RIGHT~FETUS^^^^^S
"DATA",64.061,7087,0)
KIDNEY.RIGHT~PATIENT^KIDNEY.RIGHT~PATIENT^^^^^S
"DATA",64.061,7088,0)
OVARY.LEFT~PATIENT^OVARY.LEFT~PATIENT^^^^^S
"DATA",64.061,7089,0)
OVARY.RIGHT~PATIENT^OVARY.RIGHT~PATIENT^^^^^S
"DATA",64.061,7090,0)
KIDNEY~FETUS^KIDNEY~FETUS^^^^^S
"DATA",64.061,7091,0)
LIVER~FETUS^LIVER~FETUS^^^^^S
"DATA",64.061,7092,0)
LIVER~PATIENT^LIVER~PATIENT^^^^^S
"DATA",64.061,7093,0)
UTERUS~PATIENT^UTERUS~PATIENT^^^^^S
"DATA",64.061,7094,0)
OVARY.LARGEST FOLLICLE~PATIENT^OVARY.LARGEST FOLLICLE~PATIENT^^^^^S
"DATA",64.061,7095,0)
OVARY.LEFT.LARGEST FOLLICLE~PATIENT^OVARY.LEFT.LARGEST FOLLICLE~PATIENT^^^^^S
"DATA",64.061,7096,0)
OVARY.RIGHT.LARGEST FOLLICLE~PATIENT^OVARY.RIGHT.LARGEST FOLLICLE~PATIENT^^^^^S
"DATA",64.061,7097,0)
CISTERNA MAGNA~FETUS^CISTERNA MAGNA~FETUS^^^^^S
"DATA",64.061,7098,0)
CEREBELLUM~FETUS^CEREBELLUM~FETUS^^^^^S
"DATA",64.061,7099,0)
CERVIX~PATIENT^CERVIX~PATIENT^^^^^S
"DATA",64.061,7104,0)
PELVIS~PATIENT^PELVIS~PATIENT^^^^^S
"DATA",64.061,7222,0)
PLACENTA~FETUS^PLACENTA~FETUS^^^^^S
"DATA",64.061,7228,0)
UMBILICAL CORD.PLACENTA~FETUS^UMBILICAL CORD.PLACENTA~FETUS^^^^^S
"DATA",64.061,7231,0)
CERVIX.EXTERNALLY PALPABLE SURFACE~PATIENT^CERVIX.EXTERNALLY PALPABLE SURFACE~PATIENT^^^^^S
"DATA",64.061,7232,0)
CLAVICLE.DIAPHYSIS~FETUS^CLAVICLE.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7233,0)
FEMUR.DIAPHYSIS~FETUS^FEMUR.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7234,0)
FIBULA.DIAPHYSIS~FETUS^FIBULA.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7235,0)
FOOT~FETUS^FOOT~FETUS^^^^^S
"DATA",64.061,7236,0)
HUMERUS.DIAPHYSIS~FETUS^HUMERUS.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7237,0)
RADIUS.DIAPHYSIS~FETUS^RADIUS.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7238,0)
TIBIA.DIAPHYSIS~FETUS^TIBIA.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7239,0)
ULNA.DIAPHYSIS~FETUS^ULNA.DIAPHYSIS~FETUS^^^^^S
"DATA",64.061,7246,0)
HEART.VENTRICLE.LEFT~PATIENT^HEART.VENTRICLE.LEFT~PATIENT^^^^^S
"DATA",64.061,7247,0)
ABDOMINAL WALL~FETUS^ABDOMINAL WALL~FETUS^^^^^S
"DATA",64.061,7248,0)
AORTA~FETUS^AORTA~FETUS^^^^^S
"DATA",64.061,7249,0)
CEREBRUM~FETUS^CEREBRUM~FETUS^^^^^S
"DATA",64.061,7250,0)
COLON~FETUS^COLON~FETUS^^^^^S
"DATA",64.061,7251,0)
CRANIUM~FETUS^CRANIUM~FETUS^^^^^S
"DATA",64.061,7252,0)
DIAPHRAGM~FETUS^DIAPHRAGM~FETUS^^^^^S
"DATA",64.061,7253,0)
DUCTAL ARCH~FETUS^DUCTAL ARCH~FETUS^^^^^S
"DATA",64.061,7254,0)
FACE~FETUS^FACE~FETUS^^^^^S
"DATA",64.061,7255,0)
HEAD.CHOROID PLEXUS~FETUS^HEAD.CHOROID PLEXUS~FETUS^^^^^S
"DATA",64.061,7256,0)
HEAD.FOURTH VENTRICLE~FETUS^HEAD.FOURTH VENTRICLE~FETUS^^^^^S
"DATA",64.061,7257,0)
HEAD.INTRACRANIAL ANATOMY~FETUS^HEAD.INTRACRANIAL ANATOMY~FETUS^^^^^S
"DATA",64.061,7258,0)
HEAD.LATERAL CEREBRAL VENTRICLES~FETUS^HEAD.LATERAL CEREBRAL VENTRICLES~FETUS^^^^^S
"DATA",64.061,7259,0)
HEAD.POSTERIOR FOSSA~FETUS^HEAD.POSTERIOR FOSSA~FETUS^^^^^S
"DATA",64.061,7260,0)
HEAD.THIRD VENTRICLE~FETUS^HEAD.THIRD VENTRICLE~FETUS^^^^^S
"DATA",64.061,7261,0)
HEART.ATRIA~FETUS^HEART.ATRIA~FETUS^^^^^S
"DATA",64.061,7262,0)
HEART.CHAMBERS ~FETUS^HEART.CHAMBERS ~FETUS^^^^^S
"DATA",64.061,7263,0)
HEART.GREAT VESSELS~FETUS^HEART.GREAT VESSELS~FETUS^^^^^S
"DATA",64.061,7264,0)
HEART.INTERVENTRICULAR SEPTUM~FETUS^HEART.INTERVENTRICULAR SEPTUM~FETUS^^^^^S
"DATA",64.061,7265,0)
HEART.VALVES ~FETUS^HEART.VALVES ~FETUS^^^^^S
"DATA",64.061,7266,0)
INTESTINE~FETUS^INTESTINE~FETUS^^^^^S
"DATA",64.061,7267,0)
NUCHAL FOLD~FETUS^NUCHAL FOLD~FETUS^^^^^S
"DATA",64.061,7268,0)
PULMONARY VEIN~FETUS^PULMONARY VEIN~FETUS^^^^^S
"DATA",64.061,7269,0)
SPINE~FETUS^SPINE~FETUS^^^^^S
"DATA",64.061,7270,0)
STOMACH~FETUS^STOMACH~FETUS^^^^^S
"DATA",64.061,7271,0)
UMBILICAL CORD~FETUS^UMBILICAL CORD~FETUS^^^^^S
"DATA",64.061,7272,0)
VENA CAVA. INFERIOR~FETUS^VENA CAVA. INFERIOR~FETUS^^^^^S
"DATA",64.061,7273,0)
VENA CAVA. SUPERIOR~FETUS^VENA CAVA. SUPERIOR~FETUS^^^^^S
"DATA",64.061,7274,0)
VENA CAVA~FETUS^VENA CAVA~FETUS^^^^^S
"DATA",64.061,7280,0)
ENDOMETRIUM~PATIENT^ENDOMETRIUM~PATIENT^^^^^S
"DATA",64.061,7281,0)
HEART.VENTRICLE.POSTERIOR WALL.LEFT~FETUS^HEART.VENTRICLE.POSTERIOR WALL.LEFT~FETUS^^^^^S
"DATA",64.061,7285,0)
BLD~CONTROL^BLD~CONTROL^^^^^S^Blood Control Specimen
"DATA",64.061,7286,0)
6TH SPECIMEN POST LACTOSE^^^^^^C
"DATA",64.061,7287,0)
10M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,7288,0)
POST DIALYSIS/UREA NITROGEN^^^^^^C
"DATA",64.061,7289,0)
PRE DIALYSIS^^^^^^A
"DATA",64.061,7290,0)
2.5H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,7291,0)
90M POST DOSE TRH IV^^^^^^C
"DATA",64.061,7292,0)
15M POST DOSE TRH IV^^^^^^C
"DATA",64.061,7293,0)
WBC~CONTROL^WBC~CONTROL^^^^^S
"DATA",64.061,7295,0)
BLD~BPU^BLD~BPU^^^^^S^Blood Blood Product Unit
"DATA",64.061,7296,0)
BLD~NEWBORN^BLD~NEWBORN^^^^^S^Blood Newborn
"DATA",64.061,7298,0)
2M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7299,0)
1.5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7300,0)
1H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7301,0)
2H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7302,0)
30M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7303,0)
3H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7304,0)
4H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7305,0)
5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7309,0)
EMS TRANSPORT^EMS TRANSPORT^^^^^S
"DATA",64.061,7310,0)
AMBULANCE TRANSPORT^AMBULANCE TRANSPORT^^^^^S
"DATA",64.061,7311,0)
90M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7313,0)
150M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7314,0)
210M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7315,0)
270M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7316,0)
330M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7317,0)
6H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7318,0)
POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7319,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 12F AB^^^^^^C
"DATA",64.061,7320,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 14 AB^^^^^^C
"DATA",64.061,7321,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 3 AB^^^^^^C
"DATA",64.061,7322,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 7F AB^^^^^^C
"DATA",64.061,7323,0)
1ST SPECIMEN/STREPTOCOCCUS PNEUMONIAE 9N AB^^^^^^C
"DATA",64.061,7324,0)
1ST SPECIMEN/STREPTOCOCCUS PNEUMONIAE AB.IGG^^^^^^C
"DATA",64.061,7326,0)
WND.DEEP^WND.DEEP^^^^^S
"DATA",64.061,7327,0)
WND.SHLW^WND.SHLW^^^^^S
"DATA",64.061,7328,0)
MITRAL VALVE^MITRAL VALVE^^^^^S
"DATA",64.061,7329,0)
MITRAL VALVE.ANTERIOR LEAFLET^MITRAL VALVE.ANTERIOR LEAFLET^^^^^S
"DATA",64.061,7330,0)
AORTIC VALVE^AORTIC VALVE^^^^^S
"DATA",64.061,7331,0)
AORTA.ROOT^AORTA.ROOT^^^^^S
"DATA",64.061,7332,0)
MITRAL VALVE.LEAFLET.ANTERIOR^MITRAL VALVE.LEAFLET.ANTERIOR^^^^^S
"DATA",64.061,7333,0)
AORTIC VALVE.REGURGITANT JET^AORTIC VALVE.REGURGITANT JET^^^^^S
"DATA",64.061,7334,0)
HEART.ATRIUM.SEPTUM^HEART.ATRIUM.SEPTUM^^^^^S
"DATA",64.061,7335,0)
HEART.VENTRICLE.SEPTUM^HEART.VENTRICLE.SEPTUM^^^^^S
"DATA",64.061,7336,0)
AORTA.THORACIC.ARCH^AORTA.THORACIC.ARCH^^^^^S
"DATA",64.061,7337,0)
AORTA.ISTHMUS^AORTA.ISTHMUS^^^^^S
"DATA",64.061,7338,0)
AORTA.ROOT.ANNULO-AORTIC JUNCTION^AORTA.ROOT.ANNULO-AORTIC JUNCTION^^^^^S
"DATA",64.061,7339,0)
AORTIC VALVE.ANNULUS^AORTIC VALVE.ANNULUS^^^^^S
"DATA",64.061,7340,0)
MITRAL VALVE.ANNULUS^MITRAL VALVE.ANNULUS^^^^^S
"DATA",64.061,7341,0)
PULMONIC VALVE.ANNULUS^PULMONIC VALVE.ANNULUS^^^^^S
"DATA",64.061,7342,0)
TRICUSPID VALVE.ANNULUS^TRICUSPID VALVE.ANNULUS^^^^^S
"DATA",64.061,7343,0)
TRICUSPID VALVE.REGURGITANT JET^TRICUSPID VALVE.REGURGITANT JET^^^^^S
"DATA",64.061,7344,0)
MITRAL VALVE.REGURGITANT JET^MITRAL VALVE.REGURGITANT JET^^^^^S
"DATA",64.061,7345,0)
HEART.VENTRICLE.RIGHT.ANTERIOR WALL^HEART.VENTRICLE.RIGHT.ANTERIOR WALL^^^^^S
"DATA",64.061,7346,0)
HEART.VENTRICLE.LEFT.POSTERIOR WALL^HEART.VENTRICLE.LEFT.POSTERIOR WALL^^^^^S
"DATA",64.061,7347,0)
HEART.INTERVENTRICULARSEPTUM^HEART.INTERVENTRICULARSEPTUM^^^^^S
"DATA",64.061,7348,0)
CARDIAC ECHO STUDY^CARDIAC ECHO STUDY^^^^^S
"DATA",64.061,7349,0)
HEART.VENTRICLE.LEFT.APICAL ANTERIOR^HEART.VENTRICLE.LEFT.APICAL ANTERIOR^^^^^S
"DATA",64.061,7350,0)
HEART.VENTRICLE.LEFT.APICAL SEPTUM^HEART.VENTRICLE.LEFT.APICAL SEPTUM^^^^^S
"DATA",64.061,7351,0)
HEART.VENTRICLE.LEFT.BASAL ANTERIOR^HEART.VENTRICLE.LEFT.BASAL ANTERIOR^^^^^S
"DATA",64.061,7352,0)
HEART.VENTRICLE.LEFT.BASAL ANTERIOR SEPTUM^HEART.VENTRICLE.LEFT.BASAL ANTERIOR SEPTUM^^^^^S
"DATA",64.061,7353,0)
HEART.VENTRICLE.LEFT.BASAL INFERIOR^HEART.VENTRICLE.LEFT.BASAL INFERIOR^^^^^S
"DATA",64.061,7354,0)
HEART.VENTRICLE.LEFT.BASAL LATERAL^HEART.VENTRICLE.LEFT.BASAL LATERAL^^^^^S
"DATA",64.061,7355,0)
HEART.VENTRICLE.LEFT.BASAL POSTERIOR^HEART.VENTRICLE.LEFT.BASAL POSTERIOR^^^^^S
"DATA",64.061,7356,0)
HEART.VENTRICLE.LEFT.BASAL SEPTUM^HEART.VENTRICLE.LEFT.BASAL SEPTUM^^^^^S
"DATA",64.061,7357,0)
HEART.VENTRICLE.LEFT.INFERIOR APICAL^HEART.VENTRICLE.LEFT.INFERIOR APICAL^^^^^S
"DATA",64.061,7358,0)
HEART.VENTRICLE.LEFT.LATERAL APICAL^HEART.VENTRICLE.LEFT.LATERAL APICAL^^^^^S
"DATA",64.061,7359,0)
HEART.VENTRICLE.LEFT.MID ANTERIOR^HEART.VENTRICLE.LEFT.MID ANTERIOR^^^^^S
"DATA",64.061,7360,0)
HEART.VENTRICLE.LEFT.MID ANTERIOR SEPTUM^HEART.VENTRICLE.LEFT.MID ANTERIOR SEPTUM^^^^^S
"DATA",64.061,7361,0)
HEART.VENTRICLE.LEFT.MID INFERIOR^HEART.VENTRICLE.LEFT.MID INFERIOR^^^^^S
"DATA",64.061,7362,0)
HEART.VENTRICLE.LEFT.MID LATERAL^HEART.VENTRICLE.LEFT.MID LATERAL^^^^^S
"DATA",64.061,7363,0)
HEART.VENTRICLE.LEFT.MID POSTERIOR^HEART.VENTRICLE.LEFT.MID POSTERIOR^^^^^S
"DATA",64.061,7364,0)
HEART.VENTRICLE.LEFT.MID SEPTUM^HEART.VENTRICLE.LEFT.MID SEPTUM^^^^^S
"DATA",64.061,7365,0)
STRESS STUDY^STRESS STUDY^^^^^S
"DATA",64.061,7366,0)
CARDIOVASCULAR.CENTRAL^CARDIOVASCULAR.CENTRAL^^^^^S
"DATA",64.061,7367,0)
HEART CHAMBERS^HEART CHAMBERS^^^^^S
"DATA",64.061,7368,0)
HEART VALVES^HEART VALVES^^^^^S
"DATA",64.061,7369,0)
HEART.INTERVENTRICULAR SEPTUM^HEART.INTERVENTRICULAR SEPTUM^^^^^S
"DATA",64.061,7370,0)
PULMONIC VALVE.REGURGITANT JET^PULMONIC VALVE.REGURGITANT JET^^^^^S
"DATA",64.061,7372,0)
SER/PLAS+STL^SER/PLAS+STL^^^^^S
"DATA",64.061,7373,0)
SER+RBC~CONTROL^SER+RBC~CONTROL^^^^^S
"DATA",64.061,7375,0)
6H POST 50 G LACTOSE PO^^^^^^C
"DATA",64.061,7376,0)
REFERENCE BEAT^REFERENCE BEAT
"DATA",64.061,7377,0)
AT EMS TRANSPORT^^^^^^C
"DATA",64.061,7379,0)
BEFORE EMS TRANSPORT^^^^^^C
"DATA",64.061,7381,0)
AFTER EMS TRANSPORT^^^^^^C
"DATA",64.061,7385,0)
PROVIDER~PATIENT^PROVIDER~PATIENT^^^^^S
"DATA",64.061,7387,0)
MEDICATION.CURRENT^MEDICATION.CURRENT^^^^^S
"DATA",64.061,7389,0)
MEDICATION.ADMINISTERED^MEDICATION.ADMINISTERED^^^^^S
"DATA",64.061,7391,0)
MEDICATION.DISCHARGE^MEDICATION.DISCHARGE^^^^^S
"DATA",64.061,7393,0)
PSYCHIATRIC REHABILITATION TREATMENT PLAN^PSYCHIATRIC REHABILITATION TREATMENT PLAN^^^^^S
"DATA",64.061,7394,0)
PRIMARY DX FOR PSYCH REHABILITATION RX PLAN^PRIMARY DX FOR PSYCH REHAB RX PLAN^^^^^S
"DATA",64.061,7396,0)
HOSP LEADING TO PSYCH REHAB RX^HOSP LEADING TO PSYCH REHAB RX^^^^^S
"DATA",64.061,7397,0)
PSYCHIATRIC REHABILITATION TREATMENT^PSYCHIATRIC REHABILITATION TREATMENT^^^^^S
"DATA",64.061,7399,0)
REHABILITATION TREATMENT PLAN^REHABILITATION TREATMENT PLAN^^^^^S
"DATA",64.061,7456,0)
TREATMENT PLAN^TREATMENT PLAN^^^^^S
"DATA",64.061,7458,0)
X12~277^X12~277^^^^^S
"DATA",64.061,7489,0)
1^CARDIAC STRESS STUDY^^^^^S
"DATA",64.061,7504,0)
3H POST GLUCOSE^^^^^^C
"DATA",64.061,7507,0)
~PROVIDER^~PROVIDER^^^^^S
"DATA",64.061,7509,0)
~REFERENCE LAB TEST^~REFERENCE LAB TEST^^^^^S
"DATA",64.061,7513,0)
CVX/VAG^CVX/VAG^^^^^S
"DATA",64.061,7518,0)
ENDOSCOPY STUDY^ENDOSCOPY STUDY^^^^^S
"DATA",64.061,7519,0)
ENDOSCOPY DEVICE^ENDOSCOPY DEVICE^^^^^S
"DATA",64.061,7522,0)
BILIARY DUCT^BILIARY DUCT^^^^^S
"DATA",64.061,7523,0)
PANCREATIC DUCT^PANCREATIC DUCT^^^^^S
"DATA",64.061,7524,0)
GASTROINTESTINE.LOWER^GASTROINTESTINE.LOWER^^^^^S
"DATA",64.061,7525,0)
ENDOSCOPY PROCEDURE^ENDOSCOPY PROCEDURE^^^^^S
"DATA",64.061,7526,0)
BILIARY DUCT+PANCREATIC DUCT^BILIARY DUCT+PANCREATIC DUCT^^^^^S
"DATA",64.061,7527,0)
ENDOSCOPY PROCEDURE.XXX^ENDOSCOPY PROCEDURE.XXX^^^^^S
"DATA",64.061,7537,0)
APNEA MONITOR^APNEA MONITOR^^^^^S
"DATA",64.061,7538,0)
VENTILATOR XXX^VENTILATOR XXX^^^^^S
"DATA",64.061,7539,0)
VENTILATOR.ALARM^VENTILATOR.ALARM^^^^^S
"DATA",64.061,7540,0)
VENTILATOR^VENTILATOR^^^^^S
"DATA",64.061,7541,0)
VENTILATOR.SYNCHRONIZED INTERMITTENT MANDATORY^VENTILATOR.SYNCHRONIZED INTERMITTENT MANDATORY^^^^^S
"DATA",64.061,7542,0)
VENTILATOR.INTERMITTEN MANDATORY^VENTILATOR.INTERMITTEN MANDATORY^^^^^S
"DATA",64.061,7543,0)
VENTILATOR.NEONATAL^VENTILATOR.NEONATAL^^^^^S
"DATA",64.061,7544,0)
VENTILATOR CIRCUIT^VENTILATOR CIRCUIT^^^^^S
"DATA",64.061,7545,0)
BLD.PREDUCTAL^BLD.PREDUCTAL^^^^^S
"DATA",64.061,7547,0)
DURING XXX TREATMENT ^^^^^^C
"DATA",64.061,7548,0)
RESPIRATORY SYSTEM.AIRWAY^RESPIRATORY SYSTEM.AIRWAY^^^^^S
"DATA",64.061,7549,0)
OXYGEN DELIVERY SYSTEM^OXYGEN DELIVERY SYSTEM^^^^^S
"DATA",64.061,7550,0)
OXYMISER^OXYMISER^^^^^S
"DATA",64.061,7551,0)
APNEA MONITOR.ALARM^APNEA MONITOR.ALARM^^^^^S
"DATA",64.061,7552,0)
PRE PHYSIOTHERAPY^^^^^^C
"DATA",64.061,7553,0)
RESPIRATORY SYSTEM. AIRWAY OPENING^RESPIRATORY SYSTEM. AIRWAY OPENING^^^^^S
"DATA",64.061,7554,0)
TRACHEA.AIRWAY^TRACHEA.AIRWAY^^^^^S
"DATA",64.061,7555,0)
RESPIRATORY SYSTEM.ALVEOLUS^RESPIRATORY SYSTEM.ALVEOLUS^^^^^S
"DATA",64.061,7556,0)
ATMOSPHERE^ATMOSPHERE^^^^^S
"DATA",64.061,7557,0)
VENTILATOR.SERVO^VENTILATOR.SERVO^^^^^S
"DATA",64.061,7558,0)
HUMIDIFIER^HUMIDIFIER^^^^^S
"DATA",64.061,7559,0)
AIRWAY.PROXIMAL^AIRWAY.PROXIMAL^^^^^S
"DATA",64.061,7560,0)
AIRWAY.DISTAL^AIRWAY.DISTAL^^^^^S
"DATA",64.061,7562,0)
Exercise Undertaken^EXCZ^^^^^C^^6
"DATA",64.061,7563,0)
AMNC^AMNC^^^^^S^Amniotic Fliud cells^10
"DATA",64.061,7569,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7570,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7571,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7572,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7574,0)
* ^* ^^^^^PR^Asterisk wild card
"DATA",64.061,7575,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7576,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7577,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7578,0)
20M POST INCUBATION.37 C AFTER ADDITION OF NORMAL PLASMA^^^^^^C
"DATA",64.061,7579,0)
20M AFTER VENISTASIS^^^^^^C
"DATA",64.061,7580,0)
NEUROLOGIC DEEP TENDON REFLEXES^NEUROLOGIC DEEP TENDON REFLEXES^^^^^S
"DATA",64.061,7581,0)
NEUROLOGIC BALANCE+COORDINATION^NEUROLOGIC BALANCE+COORDINATION^^^^^S
"DATA",64.061,7582,0)
GENERAL STATUS^GENERAL STATUS
"DATA",64.061,7583,0)
SENSE OF TOUCH^SENSE OF TOUCH
"DATA",64.061,7584,0)
STRENGTH^STRENGTH
"DATA",64.061,7585,0)
VITAL SIGNS^VITAL SIGNS
"DATA",64.061,7586,0)
HEMATOLOGICAL+LYMPHATIC+IMMUNOLOGICAL SYSTEM^HEMATOLOGIC+LYMPHATIC+IMMUNOLOGIC SYSTEM
"DATA",64.061,7587,0)
VALVE~FETUS^VALVE~FETUS^^^^^S
"DATA",64.061,7588,0)
ARTERY ANTERIOR~FETUS^ANTERY ANTERIOR~FETUS^^^^^S
"DATA",64.061,7589,0)
SET^SET^^^^^PR^Set of orders
"DATA",64.061,7590,0)
10 AM SPECIMEN^^^^^^C
"DATA",64.061,7591,0)
11 AM SPECIMEN^^^^^^C
"DATA",64.061,7592,0)
2 PM SPECIMEN^^^^^^C
"DATA",64.061,7593,0)
3 PM SPECIMEN^^^^^^C
"DATA",64.061,7594,0)
4 PM SPECIMEN^^^^^^C
"DATA",64.061,7595,0)
5 PM SPECIMEN^^^^^^C
"DATA",64.061,7596,0)
ACCEL^ACCEL^^^^^PR^Acceleration
"DATA",64.061,7597,0)
Pressure Rate^PRESRAT^^^^^PR
"DATA",64.061,7598,0)
Length Fraction^LENFR^^^^^PR
"DATA",64.061,7599,0)
Time Duration^TIMDUR^^^^^PR
"DATA",64.061,7600,0)
STDY-MEAN^STDY~MEAN^^^^^S^Study Mean^8
"DATA",64.061,7601,0)
Address^ADDR^^^^^PR
"DATA",64.061,7602,0)
DOSE^DOSE^^^^^PR
"DATA",64.061,7603,0)
TQ2^TQ2^^^^^PR
"DATA",64.061,7604,0)
PN^PN^^^^^PR
"DATA",64.061,7605,0)
Patient Encounter^PT/ENCTR^^^^^S^PATIENT ENCOUNTER^8
"DATA",64.061,7606,0)
SCOPE.MODIFIER.SELECTION ITEM^SCOPE.MODIFIER.SELECTION ITEM^^^^^PR
"DATA",64.061,7607,0)
SCOPE.MODIFIER.TIME WINDOW^SCOPE.MODIFIER.TIME WINDOW^^^^^PR
"DATA",64.061,7608,0)
PRN^PRN^^^^^PR
"DATA",64.061,7609,0)
INVERSE VI^INVERSE VI^^^^^PR
"DATA",64.061,7610,0)
STDY-MIN^STDY~MIN^^^^^S^Study Minimum^8
"DATA",64.061,7611,0)
BREATHING BAG^BREATHING BAG^^^^^S
"DATA",64.061,7612,0)
Volumne Rate Count^VRATCNT^^^^^PR
"DATA",64.061,7613,0)
AT 1.0 S POST FORCED EXPIR/VOL.FORCED EXPIR.TOT^^^^^^C
"DATA",64.061,7614,0)
Area Ratio^AREARTO^^^^^PR
"DATA",64.061,7615,0)
HEART.VENTRICLE.XXX^HEART.VENTRICLE.XXX^^^^^S
"DATA",64.061,7616,0)
Circumference Fraction^CIRCFR^^^^^PR
"DATA",64.061,7617,0)
ANATOMIC PART.*^ANATOMIC PART.*^^^^^S
"DATA",64.061,7618,0)
HEART.VENTRICLE.LEFT.EPICARDIUM^HEART.VENTRICLE.LEFT.EPICARDIUM^^^^^S
"DATA",64.061,7619,0)
PULMONIC VALVE.DISTAL^PULMONIC VALVE.DISTAL^^^^^S
"DATA",64.061,7620,0)
Volumne Rate Ratio^VRATRTO^^^^^PR
"DATA",64.061,7621,0)
Time Diffenential^TIMEDIF^^^^^PR
"DATA",64.061,7622,0)
TRICUSPID VALVE.ORIFICE^TRICUSPID VALVE.ORIFICE^^^^^S
"DATA",64.061,7623,0)
HEART.VALVE.XXX^HEART.VALVE.XXX^^^^^S
"DATA",64.061,7624,0)
HEART.INTERVENTRICULAR SEPTUM.DEFECT^HEART.INTERVENTRICULAR SEPTUM.DEFECT^^^^^S
"DATA",64.061,7625,0)
POST 50 G GLUCOSE^^^^^^C
"DATA",64.061,7626,0)
Relative Ratio^RELRTO^^^^^PR
"DATA",64.061,7627,0)
INGESTA^INGESTA^^^^^S
"DATA",64.061,7628,0)
LITTER^LITTER^^^^^S
"DATA",64.061,7629,0)
EMBRYO^EMBRYO^^^^^S
"DATA",64.061,7630,0)
MMLK^MMLK^^^^^S
"DATA",64.061,7631,0)
OCFLU^OCFLU^^^^^S
"DATA",64.061,7632,0)
EGG^EGG^^^^^S
"DATA",64.061,7633,0)
TLGI/TSMI^TLGI/TSMI^^^^^S
"DATA",64.061,7634,0)
FSMI^FSMI^^^^^S
"DATA",64.061,7635,0)
MILK.RAW^MILK.RAW^^^^^S
"DATA",64.061,7636,0)
Exudate^EXUD^^^^^S
"DATA",64.061,7637,0)
TRACHEAL SWAB^TRACHEAL SWAB^^^^^S
"DATA",64.061,7638,0)
Fluid Fetus^FLU~FETUS^^^^^S
"DATA",64.061,7639,0)
CHEESE^CHEESE^^^^^S
"DATA",64.061,7640,0)
FAT^FAT^^^^^S
"DATA",64.061,7641,0)
GICNT^GICNT^^^^^S
"DATA",64.061,7642,0)
SPIRAL COLON^SPIRAL COLON^^^^^S
"DATA",64.061,7643,0)
PREPUTIAL WASH^PREPUTIAL WASH^^^^^S
"DATA",64.061,7644,0)
DAIRY PRODUCT^DAIRY PRODUCT^^^^^S
"DATA",64.061,7645,0)
1H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7646,0)
UR+PLAS^UR+PLAS^^^^^S
"DATA",64.061,7647,0)
10M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,7648,0)
1M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,7649,0)
2M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,7650,0)
3M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^^C
"DATA",64.061,7651,0)
11 PM^^^^^^C
"DATA",64.061,7652,0)
15M POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,7653,0)
45M POST DOSE UG GONADOTROPIN RELEASING HORMONE^^^^^^C
"DATA",64.061,7654,0)
1.5H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7655,0)
1H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7656,0)
2.5H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7657,0)
2H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7658,0)
3.5H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7659,0)
3H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7660,0)
40M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7661,0)
45M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7662,0)
4H POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7663,0)
50M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7664,0)
7M POST 0.2 U/KG SECRETIN^^^^^^C
"DATA",64.061,7665,0)
1H POST EJACULATION^^^^^^C
"DATA",64.061,7666,0)
2H POST EJACULATION^^^^^^C
"DATA",64.061,7667,0)
3H POST EJACULATION^^^^^^C
"DATA",64.061,7668,0)
4H POST EJACULATION^^^^^^C
"DATA",64.061,7669,0)
6H POST EJACULATION^^^^^^C
"DATA",64.061,7670,0)
XAD^XAD^^^^^PR
"DATA",64.061,7671,0)
EPISODE^EPISODE^^^^^PR
"DATA",64.061,7672,0)
AT FACILITY.YYY MOST DEFINITIVE PROCEDURE^^^^^^C
"DATA",64.061,7673,0)
AT FACILITY.YYY^^^^^^C
"DATA",64.061,7674,0)
QQQ^QQQ^^^^^PR
"DATA",64.061,7675,0)
EPISODE-FIRST^EPISODE~FRST^^^^^S^FIRST EPISODE^8
"DATA",64.061,7676,0)
2H POST 5 G XYLOSE PO^^^^^^C
"DATA",64.061,7677,0)
2H POST DOSE XYLOSE PO^^^^^^C
"DATA",64.061,7678,0)
POST 25 G XYLOSE PO^^^^^^C
"DATA",64.061,7679,0)
POST 5 G XYLOSE PO^^^^^^C
"DATA",64.061,7680,0)
POST DOSE XYLOSE PO^^^^^^C
"DATA",64.061,7681,0)
2D POST 0.1 ML BRUCELLIN ID^^^^^^C
"DATA",64.061,7682,0)
3D POST 0.1 ML BRUCELLIN ID^^^^^^C
"DATA",64.061,7683,0)
24H POST 0.1 ML MALLEIN ID^^^^^^C
"DATA",64.061,7684,0)
2D POST 0.1 ML MALLEIN ID^^^^^^C
"DATA",64.061,7685,0)
ZQQQ^ZQQQ^^^^^PR
"DATA",64.061,7686,0)
24H POST DOSE ID^^^^^^C
"DATA",64.061,7687,0)
2D POST DOSE ID^^^^^^C
"DATA",64.061,7688,0)
3D POST DOSE ID^^^^^^C
"DATA",64.061,7689,0)
3D POST 0.1 ML LEISHMANIN ID^^^^^^C
"DATA",64.061,7690,0)
3D POST 0.1 ML AVIAN TUBERCULIN ID^^^^^^C
"DATA",64.061,7691,0)
3D POST 0.1 ML JOHNIN ID^^^^^^C
"DATA",64.061,7692,0)
POST 0.1 ML TRICIN ID^^^^^^C
"DATA",64.061,7693,0)
2D POST DOSE MAMMALIAN TUBERCULIN ID^^^^^^C
"DATA",64.061,7694,0)
3D POST DOSE AVIAN TUBERCULIN ID^^^^^^C
"DATA",64.061,7695,0)
3D POST DOSE MAMMALIAN TUBERCULIN ID^^^^^^C
"DATA",64.061,7696,0)
0.0% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7697,0)
0.30% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7698,0)
0.35% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7699,0)
0.40% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7700,0)
0.45% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7701,0)
0.50% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7702,0)
0.55% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7703,0)
0.60% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7704,0)
0.60% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^^C
"DATA",64.061,7705,0)
0.65% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7706,0)
0.65% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^^C
"DATA",64.061,7707,0)
0.75% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^^C
"DATA",64.061,7708,0)
0.85% SODIUM CHLORIDE^^^^^^C
"DATA",64.061,7709,0)
1H POST 5 G XYLOSE PO^^^^^^C
"DATA",64.061,7710,0)
DURING XXX MEASUREMENT^^^^^^C
"DATA",64.061,7711,0)
DURING MR MAX VEL MEASUREMENT^^^^^^C
"DATA",64.061,7712,0)
DURING AS MAX VEL MEASUREMENT^^^^^^C
"DATA",64.061,7713,0)
DURING RVSP MAX VEL MEASUREMENT^^^^^^C
"DATA",64.061,7714,0)
BS PRE 250 UG CORTICOTROPIN IM^^^^^^C
"DATA",64.061,7715,0)
30M POST 250 UG CORTICOTROPIN IM^^^^^^C
"DATA",64.061,7716,0)
1H POST 250 UG CORTICOTROPIN IM^^^^^^C
"DATA",64.061,7717,0)
BS PRE 1 MG DEXAMETHASONE^^^^^^C
"DATA",64.061,7718,0)
10H POST 1 MG DEXAMETHASONE^^^^^^C
"DATA",64.061,7719,0)
17H POST 1 MG DEXAMETHASONE^^^^^^C
"DATA",64.061,7720,0)
24H POST 1 MG DEXAMETHASONE^^^^^^C
"DATA",64.061,7721,0)
20M POST DOSE TRH^^^^^^C
"DATA",64.061,7722,0)
W CONTRAST.XXX IV^^^^^^C
"DATA",64.061,7723,0)
ACETABULUM^ACETABULUM^^^^^S
"DATA",64.061,7724,0)
ACROMIOCLAVICULAR JOINT^ACROMIOCLAVICULAR JOINT^^^^^S
"DATA",64.061,7725,0)
W & WO CONTRAST.XXX IV^^^^^^C
"DATA",64.061,7726,0)
W CONTRAST.XXX IA^^^^^^C
"DATA",64.061,7727,0)
ARM+HAND VESSELS^ARM+HAND VESSELS^^^^^S
"DATA",64.061,7728,0)
ARM VEIN^ARM VEIN^^^^^S
"DATA",64.061,7729,0)
ARTERIOVENOUS FISTULA^ARTERIOVENOUS FISTULA^^^^^S
"DATA",64.061,7730,0)
W CONTRAST.XXX^^^^^^C
"DATA",64.061,7731,0)
W CONTRAST.XXX VIA BILIARY TRACT^^^^^^C
"DATA",64.061,7732,0)
99 MTC IV & POST SINCALIDE IV^^^^^^C
"DATA",64.061,7733,0)
99 MTC IV^^^^^^C
"DATA",64.061,7734,0)
DURING SURGERY W CONTRAST.XXX BILIARY DUCT^^^^^^C
"DATA",64.061,7735,0)
W CONTRAST.XXX VIA TRANSHEPAR, LIVER BILIARY DUCT^^^^^^C
"DATA",64.061,7736,0)
DURING SURGERY^^^^^^C
"DATA",64.061,7737,0)
BRACHIAL+CEPHALIC ARTERY^BRACHIAL+CEPHALIC ARTERY^^^^^S
"DATA",64.061,7738,0)
BRACHIAL PLEXUS^BRACHIAL PLEXUS^^^^^S
"DATA",64.061,7739,0)
W ANESTHESIA^^^^^^C
"DATA",64.061,7740,0)
W & WO CONTRAST.XXX IV & W ANESTHESIA^^^^^^C
"DATA",64.061,7741,0)
99 MTC HMPAO IV^^^^^^C
"DATA",64.061,7742,0)
99 MTC DISIDA OR MIBIDA^^^^^^C
"DATA",64.061,7743,0)
BREAST.CYST^BREAST.CYST^^^^^S
"DATA",64.061,7744,0)
BREAST.MASS^BREAST.MASS^^^^^S
"DATA",64.061,7745,0)
BREAST^BREAST^^^^^S
"DATA",64.061,7746,0)
CALCANEUS^CALCANEUS^^^^^S
"DATA",64.061,7747,0)
CAROTID ARTERY^CAROTID ARTERY^^^^^S
"DATA",64.061,7748,0)
CARPAL BONES^CARPAL BONES^^^^^S
"DATA",64.061,7749,0)
W CONTRAST.XXX VIA CATHETER^^^^^^C
"DATA",64.061,7750,0)
W INSPIRATION & EXPIRATION^^^^^^C
"DATA",64.061,7751,0)
W CONTRAST.XXX VIA PLEURAL SPACE^^^^^^C
"DATA",64.061,7752,0)
W RADIONUCLIDE.XXX IT^^^^^^C
"DATA",64.061,7753,0)
CLAVICLE^CLAVICLE^^^^^S
"DATA",64.061,7754,0)
W AIR & BARIUM CONTRAST PR^^^^^^C
"DATA",64.061,7755,0)
W CONTRAST.XXX PR^^^^^^C
"DATA",64.061,7756,0)
POST SOLID CONTRAST.XXX PO^^^^^^C
"DATA",64.061,7757,0)
W WATER SOLUBLE CONTRAST PR^^^^^^C
"DATA",64.061,7758,0)
W CONTRAST.XXX PO & HYPOTONIC AGENT PER NG^^^^^^C
"DATA",64.061,7759,0)
W CONTRAST.XXX PO^^^^^^C
"DATA",64.061,7760,0)
W GASTROGRAFFIN CONTRAST PO^^^^^^C
"DATA",64.061,7761,0)
W CONTRAST.XXX PO DURING SWALLOWING^^^^^^C
"DATA",64.061,7762,0)
W LIQUID & PASTE CONTRAST PO DURING SWALLOWING^^^^^^C
"DATA",64.061,7763,0)
99 MTC SC PO^^^^^^C
"DATA",64.061,7764,0)
EXTREMITY.LOWER^EXTREMITY.LOWER^^^^^S
"DATA",64.061,7765,0)
EXTREMITY.LOWER.JOINT^EXTREMITY.LOWER.JOINT^^^^^S
"DATA",64.061,7766,0)
EXTREMITY.UPPER^EXTREMITY.UPPER^^^^^S
"DATA",64.061,7767,0)
EXTREMITY^EXTREMITY^^^^^S
"DATA",64.061,7768,0)
FEMUR^FEMUR^^^^^S
"DATA",64.061,7769,0)
FINGER^FINGER^^^^^S
"DATA",64.061,7770,0)
W STANDING^^^^^^C
"DATA",64.061,7771,0)
48H POST CONTRAST.XXX PO^^^^^^C
"DATA",64.061,7772,0)
W 99TC RBC TAGGED IV^^^^^^C
"DATA",64.061,7773,0)
W CONTRAST PO^^^^^^C
"DATA",64.061,7774,0)
HAND+WRIST^HAND+WRIST^^^^^S
"DATA",64.061,7775,0)
RADIONUCLIDE.XXX IV^^^^^^C
"DATA",64.061,7776,0)
201 TH IV AT REST^^^^^^C
"DATA",64.061,7777,0)
(201 TH SUBTRACTION 99 MTC) IV^^^^^^C
"DATA",64.061,7778,0)
W CONTRAST.XXX INTRA ARTICULAR^^^^^^C
"DATA",64.061,7779,0)
HUMERUS^HUMERUS^^^^^S
"DATA",64.061,7780,0)
ILIAC^ILIAC^^^^^S
"DATA",64.061,7781,0)
111 IN INTRAJOINT^^^^^^C
"DATA",64.061,7782,0)
RADIONUCLIDE.XXX TRANSPLANT SCAN^^^^^^C
"DATA",64.061,7783,0)
W & WO CONTRAST IV^^^^^^C
"DATA",64.061,7784,0)
W CONTRAST.XXX VIA TUBE^^^^^^C
"DATA",64.061,7785,0)
W CONTRAST.XXX VIA NEPHROSTOMY TUBE^^^^^^C
"DATA",64.061,7786,0)
W CONTRAST.XXX VIA STENT^^^^^^C
"DATA",64.061,7787,0)
POST 10M W & WO CONTRAST.XXX IV^^^^^^C
"DATA",64.061,7788,0)
KNEE JOINT^KNEE JOINT^^^^^S
"DATA",64.061,7789,0)
POST TC 99 MSC IV^^^^^^C
"DATA",64.061,7790,0)
99 MTC CALCIUM COLLOID IV^^^^^^C
"DATA",64.061,7791,0)
LEG.LOWER VESSELS^LEG.LOWER VESSELS^^^^^S
"DATA",64.061,7792,0)
LEG.LOWER^LEG.LOWER^^^^^S
"DATA",64.061,7793,0)
RADIONUCLIDE.XXX.IV^^^^^^C
"DATA",64.061,7794,0)
W CONTRAST.XXX INTRABRONCHIAL^^^^^^C
"DATA",64.061,7795,0)
RADIONUCLIDE.XXX INTRALYMPHATIC^^^^^^C
"DATA",64.061,7796,0)
W CONTRAST.XXX INTRALYMPHATIC^^^^^^C
"DATA",64.061,7797,0)
MASTOID^MASTOID^^^^^S
"DATA",64.061,7798,0)
99 MTC M04 IV^^^^^^C
"DATA",64.061,7799,0)
NECK VESSEL^NECK VESSEL^^^^^S
"DATA",64.061,7800,0)
W CONTRAST.XXX VIA INTRALARYNX^^^^^^C
"DATA",64.061,7801,0)
OPTIC FORAMEN^OPTIC FORAMEN^^^^^S
"DATA",64.061,7802,0)
PATELLA^PATELLA^^^^^S
"DATA",64.061,7803,0)
PELVIS+HIP^PELVIS+HIP^^^^^S
"DATA",64.061,7804,0)
PERIPHERAL VESSEL^PERIPHERAL VESSEL^^^^^S
"DATA",64.061,7805,0)
99 MTC DTPA INJ FOR SHUNT PATENCY^^^^^^C
"DATA",64.061,7806,0)
POPLITEAL SPACE^POPLITEAL SPACE^^^^^S
"DATA",64.061,7807,0)
POPLITEAL^POPLITEAL^^^^^S
"DATA",64.061,7808,0)
W CONTRAST.XXX VIA PULMONARY ARTERY^^^^^^C
"DATA",64.061,7809,0)
133 XE INHALED & 99 MTC MAA IV^^^^^^C
"DATA",64.061,7810,0)
RADIUS+ULNA^RADIUS+ULNA^^^^^S
"DATA",64.061,7811,0)
POST CONTRAST.XXX PR DURING DEFECATION^^^^^^C
"DATA",64.061,7812,0)
W CONTRAST.XXX PR & PER BLADDER DURING DEFECATION & VOIDING^^^^^^C
"DATA",64.061,7813,0)
RIB^RIB^^^^^S
"DATA",64.061,7814,0)
W CONTRAST.XXX INTRA SALIVARY DUCT^^^^^^C
"DATA",64.061,7815,0)
SCAPULA^SCAPULA^^^^^S
"DATA",64.061,7816,0)
W CONTRAST.XXX VIA SINUS TRACT^^^^^^C
"DATA",64.061,7817,0)
W CONTRAST.XXX PO VIA DUODENAL INTUBATION^^^^^^C
"DATA",64.061,7818,0)
W CONTRAST.XXX INTO DISC^^^^^^C
"DATA",64.061,7819,0)
W FLEXION & EXTENSION^^^^^^C
"DATA",64.061,7820,0)
W CONTRAST.XXX IT^^^^^^C
"DATA",64.061,7821,0)
W CONTRAST VIA GI TUBE^^^^^^C
"DATA",64.061,7822,0)
99 MTC PERTECHNETATE IV^^^^^^C
"DATA",64.061,7823,0)
TESTICLE^TESTICLE^^^^^S
"DATA",64.061,7824,0)
THIGH.VESSELS^THIGH.VESSELS^^^^^S
"DATA",64.061,7825,0)
W CONTRAST.XXX INTRAVASCULAR^^^^^^C
"DATA",64.061,7826,0)
THUMB^THUMB^^^^^S
"DATA",64.061,7827,0)
131I IV^^^^^^C
"DATA",64.061,7828,0)
TIBIA+FIBULA^TIBIA+FIBULA^^^^^S
"DATA",64.061,7829,0)
TIBIAL ARTERY^TIBIAL ARTERY^^^^^S
"DATA",64.061,7830,0)
TOES^TOES^^^^^S
"DATA",64.061,7831,0)
W CONTRAST INTRAURETHRAL^^^^^^C
"DATA",64.061,7832,0)
W CONTRAST.XXX PER BLADDER^^^^^^C
"DATA",64.061,7833,0)
W CONTRAST.XXX TRANSURETHRAL^^^^^^C
"DATA",64.061,7834,0)
W VOIDING^^^^^^C
"DATA",64.061,7835,0)
W CONTRAST.XXX INTRAUTERINE^^^^^^C
"DATA",64.061,7836,0)
W CONTRAST IV^^^^^^C
"DATA",64.061,7837,0)
111 IN TAGGED LEUKOCYTES IV^^^^^^C
"DATA",64.061,7838,0)
W CONSCIOUS SEDATION^^^^^^C
"DATA",64.061,7839,0)
W DISARTICULATION^^^^^^C
"DATA",64.061,7840,0)
DURING RADIOSURGERY^^^^^^C
"DATA",64.061,7841,0)
DURING RADIOSURGERY W CONTRAST.XXX IV^^^^^^C
"DATA",64.061,7842,0)
ZYGOMATIC ARCH^ZYGOMATIC ARCH^^^^^S
"DATA",64.061,7843,0)
W RENIN IV & W CONTRAST.XXX IV^^^^^^C
"DATA",64.061,7844,0)
8.0 MCG/ML^^^^^^C
"DATA",64.061,7845,0)
16.0 MCG/ML^^^^^^C
"DATA",64.061,7846,0)
32.0 MCG/ML^^^^^^C
"DATA",64.061,7847,0)
12.0 MCG/ML^^^^^^C
"DATA",64.061,7848,0)
30.0 MCG/ML^^^^^^C
"DATA",64.061,7849,0)
6.0 MCG/ML^^^^^^C
"DATA",64.061,7850,0)
2.0 MCG/ML^^^^^^C
"DATA",64.061,7851,0)
4.0 MCG/ML^^^^^^C
"DATA",64.061,7852,0)
5.0 MCG/ML^^^^^^C
"DATA",64.061,7853,0)
11.0 MCG/ML^^^^^^C
"DATA",64.061,7854,0)
14.0 MCG/ML^^^^^^C
"DATA",64.061,7855,0)
25.0 MCG/ML^^^^^^C
"DATA",64.061,7856,0)
7.5 MCG/ML^^^^^^C
"DATA",64.061,7857,0)
10.0 MCG/ML^^^^^^C
"DATA",64.061,7858,0)
15.0 MCG/ML^^^^^^C
"DATA",64.061,7859,0)
1.0 MCG/ML^^^^^^C
"DATA",64.061,7860,0)
20.0 MCG/ML^^^^^^C
"DATA",64.061,7861,0)
0.1 MCG/ML^^^^^^C
"DATA",64.061,7862,0)
0.2 MCG/ML^^^^^^C
"DATA",64.061,7863,0)
300.0 MCG/ML^^^^^^C
"DATA",64.061,7864,0)
100.0 MCG/ML^^^^^^C
"DATA",64.061,7865,0)
2.5 MCG/ML^^^^^^C
"DATA",64.061,7866,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 9N AB.IGG^^^^^^C
"DATA",64.061,7867,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 8 AB.IGG^^^^^^C
"DATA",64.061,7868,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 7F.IGG AB^^^^^^C
"DATA",64.061,7869,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 6B.IGG AB^^^^^^C
"DATA",64.061,7870,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 4 AB.IGG^^^^^^C
"DATA",64.061,7871,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 3 AB.IGG^^^^^^C
"DATA",64.061,7872,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 23F AB.IGG^^^^^^C
"DATA",64.061,7873,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 19F AB.IGG^^^^^^C
"DATA",64.061,7874,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 18C AB.IGG^^^^^^C
"DATA",64.061,7875,0)
2ND SPECIMEN/STREPTOCOCCUS PNEUMONIAE 1 AB.IGG^^^^^^C
"DATA",64.061,7876,0)
1ST SPECIMEN/RUBELLA VIRUS AB.IGG^^^^^^C
"DATA",64.061,7877,0)
1ST SPECIMEN/MEASLES VIRUS AB.IGG^^^^^^C
"DATA",64.061,7878,0)
1ST SPECIMEN/TOXOPLASMA GONDII AB.IGG^^^^^^C
"DATA",64.061,7879,0)
SUPINE POSTURE^^^^^^C
"DATA",64.061,7880,0)
5H POST 500 MG CALCIUM PO^^^^^^C
"DATA",64.061,7881,0)
1.5H POST 100 UG LUTENIZING RELEASING HORMONE IV^^^^^^C
"DATA",64.061,7882,0)
15M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7883,0)
2.5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7884,0)
3.5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7885,0)
4.5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7886,0)
45M POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7887,0)
5.5H POST DOSE GLUCOSE^^^^^^C
"DATA",64.061,7888,0)
BS PRE 50 G GLUCOSE PO^^^^^^C
"DATA",64.061,7889,0)
10M POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7890,0)
1H POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7891,0)
20M POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7892,0)
2H POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7893,0)
30M POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7894,0)
40M POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7895,0)
50M POST 200 UG TRH IV^^^^^^C
"DATA",64.061,7896,0)
1.5H POST DOSE XYLOSE PO^^^^^^C
"DATA",64.061,7897,0)
BS PRE 500 MG CALCIUM PO^^^^^^C
"DATA",64.061,7898,0)
1ST SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7899,0)
2ND SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7900,0)
3RD SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7901,0)
4TH SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7902,0)
5TH SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7903,0)
6TH SPECIMEN POST EXCZ^^^^^^C
"DATA",64.061,7904,0)
PRE EXCZ^^^^^^C
"DATA",64.061,7905,0)
30M POST DOSE TRH IN^^^^^^C
"DATA",64.061,7906,0)
BS PRE DOSE TRH IN^^^^^^C
"DATA",64.061,7907,0)
1D POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7908,0)
2D POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7909,0)
BS PRE 250 MG PYRIDOXINE PO^^^^^^C
"DATA",64.061,7910,0)
POST 250 MG PYRIDOXINE PO^^^^^^C
"DATA",64.061,7911,0)
POST PYRIDOXINE PO^^^^^^C
"DATA",64.061,7912,0)
24H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7913,0)
48H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7914,0)
72H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7915,0)
30M POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7916,0)
32H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7917,0)
56H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7918,0)
8H POST DOSE CORTICOTROPIN^^^^^^C
"DATA",64.061,7919,0)
30M POST LACTOSE PO^^^^^^C
"DATA",64.061,7920,0)
1H POST LACTOSE PO^^^^^^C
"DATA",64.061,7921,0)
1.5H POST LACTOSE PO^^^^^^C
"DATA",64.061,7922,0)
2H POST LACTOSE PO^^^^^^C
"DATA",64.061,7923,0)
3H POST LACTOSE PO^^^^^^C
"DATA",64.061,7924,0)
4H POST LACTOSE PO^^^^^^C
"DATA",64.061,7925,0)
5H POST LACTOSE PO^^^^^^C
"DATA",64.061,7926,0)
12H POST EJACULATION^^^^^^C
"DATA",64.061,7927,0)
22ND SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7928,0)
18TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7929,0)
24H POST EJACULATION^^^^^^C
"DATA",64.061,7930,0)
16TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7931,0)
17TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7932,0)
19TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7933,0)
20TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7934,0)
21TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7935,0)
23RD SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7936,0)
24TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7937,0)
25TH SPECIMEN POST XXX CHALLENGE^^^^^^C
"DATA",64.061,7938,0)
EYE.REFRACTION^EYE.REFRACTION^^^^^S
"DATA",64.061,7939,0)
INVLEN^INVLEN^^^^^PR
"DATA",64.061,7949,0)
SPEECH THERAPY TREATMENT PLAN^SPEECH THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,7950,0)
PRIMARY DX FOR SPEECH THERAPY TREATMENT PLAN^PRIMARY DX FOR SPEECH THERAPY TREATMENT PLAN^^^^^S
"DATA",64.061,7951,0)
SPEECH THERAPY TREATMENT^SPEECH THERAPY TREATMENT^^^^^S
"DATA",64.061,7952,0)
HOSPITALIZATION LEADING TO SPEECH THERAPY TREATMENT^HOSPITALIZATION LEADING TO SPEECH THERAPY TREATMENT^^^^^S
"DATA",64.061,7953,0)
WO CONTRAST^^^^^^C
"DATA",64.061,7954,0)
CORRECTED FOR ALBUMIN^^^^^^A
"DATA",64.061,7955,0)
0.4 MCG/ML^^^^^^C
"DATA",64.061,7956,0)
2.5H POST DOSE XYLOSE PO^^^^^^C
"DATA",64.061,7957,0)
30M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,7958,0)
1M PRE XXX CHALLENGE^^^^^^C
"DATA",64.061,7959,0)
PULMONARY VEIN.RIGHT UPPER^PULMONARY VEIN.RIGHT UPPER^^^^^S
"DATA",64.061,7960,0)
PULMONARY VEIN.RIGHT LOWER^PULMONARY VEIN.RIGHT LOWER^^^^^S
"DATA",64.061,7961,0)
PULMONARY VEIN.LEFT UPPER^PULMONARY VEIN.LEFT UPPER^^^^^S
"DATA",64.061,7962,0)
PULMONARY VEIN.LEFT LOWER^PULMONARY VEIN.LEFT LOWER^^^^^S
"DATA",64.061,7963,0)
HEPATIC VEIN^HEPATIC VEIN^^^^^S
"DATA",64.061,7964,0)
HEART.ATRIUM.LEFT.APPENDAGE^HEART.ATRIUM.LEFT.APPENDAGE^^^^^S
"DATA",64.061,7965,0)
LNCNC^LNCNC^^^^^PR
"DATA",64.061,7966,0)
BEHAVIOR^BEHAVIOR^^^^^S
"DATA",64.061,7967,0)
BLD.DOT^BLD.DOT^^^^^S
"DATA",64.061,7970,0)
QUESTION MARKS^ ??? ^^^^^PR^Wild card property
"DATA",64.061,7971,0)
DASH^ - ^^^^^PR^Wild card property
"DATA",64.061,7972,0)
ODOR^ODOR^^^^^PR^Smell
"DATA",64.061,7973,0)
Compliance^COMPLI^^^^^PR
"DATA",64.061,7974,0)
Compliance Ratio^COMPLIRTO^^^^^PR^Precentage of breath
"DATA",64.061,7975,0)
Radiation Energy Count^ENGCNT^^^^^PR^joules/kilogram
"DATA",64.061,7976,0)
Pressure Differential^PRESSDIFF^^^^^PR^Blood pressure measure
"DATA",64.061,7977,0)
1H MAX^1H~MAX^^^^^S^1 HOUR MAX^8
"DATA",64.061,7978,0)
DASH SPECIMEN^ - ^^^^^S^WILD CARD DASH^8
"DATA",64.061,7979,0)
QUESTION MARK SPECIMEN^ ? ^^^^^S^Wild card Specimen
"DATA",64.061,7980,0)
 NAACCR CASE? ^ NAACCR CASE? ^^^^^S^from LOINC system list
"DATA",64.061,7981,0)
ABDOMEN VESSELS^ABDOMEN VESSELS^^^^^S^from LOINC system list
"DATA",64.061,7982,0)
ABDOMEN.FINE NEEDLE^ABDOMEN.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,7983,0)
ABDOMINAL VEINS+IVC^ABDOMINAL VEINS+IVC^^^^^S^from LOINC system list
"DATA",64.061,7984,0)
ACHILLES^ACHILLES^^^^^S^from LOINC system list
"DATA",64.061,7985,0)
ADNEXA^ADNEXA^^^^^S^from LOINC system list
"DATA",64.061,7986,0)
ADRENAL ARTERY^ADRENAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,7987,0)
ADRENAL ARTERY.BILATERAL^ADRENAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,7988,0)
ADRENAL VEIN^ADRENAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,7989,0)
ADRENAL VEIN.BILATERAL^ADRENAL VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,7990,0)
ALVEOLAR RIDGE^ALVEOLAR RIDGE^^^^^S^from LOINC system list
"DATA",64.061,7991,0)
AORTA+ARTERIES.ABDOMINAL^AORTA+ARTERIES.ABDOMINAL^^^^^S^from LOINC system list
"DATA",64.061,7992,0)
AORTA+ARTERY.FEMORAL^AORTA+ARTERY.FEMORAL^^^^^S^from LOINC system list
"DATA",64.061,7993,0)
AORTA+ARTERY.FEMORAL.BILATERAL^AORTA+ARTERY.FEMORAL.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,7994,0)
AORTA.ABDOMINAL^AORTA.ABDOMINAL^^^^^S^from LOINC system list
"DATA",64.061,7995,0)
AORTIC ARCH+NECK^AORTIC ARCH+NECK^^^^^S^from LOINC system list
"DATA",64.061,7996,0)
ARTERY.RENAL^ARTERY.RENAL^^^^^S^from LOINC system list
"DATA",64.061,7997,0)
AUDITORY CANAL^AUDITORY CANAL^^^^^S^from LOINC system list
"DATA",64.061,7998,0)
BICEPS^BICEPS^^^^^S^from LOINC system list
"DATA",64.061,7999,0)
BLDC~FETUS^BLDC~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8000,0)
BPU~PLATELET PHERESIS^BPU~PLATELET PHERESIS^^^^^S^from LOINC system list
"DATA",64.061,8001,0)
BRACHIORADIALIS^BRACHIORADIALIS^^^^^S^from LOINC system list
"DATA",64.061,8002,0)
BREAST.DUCT^BREAST.DUCT^^^^^S^from LOINC system list
"DATA",64.061,8003,0)
BROTHER^BROTHER^^^^^S^from LOINC system list
"DATA",64.061,8004,0)
CANCER^CANCER^^^^^S^from LOINC system list
"DATA",64.061,8005,0)
CAROTID ARTERY.EXTERNAL^CAROTID ARTERY.EXTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8006,0)
CAROTID ARTERY.EXTERNAL.BILATERAL^CAROTID ARTERY.EXTERNAL.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8007,0)
CAROTID+NECK VESSELS^CAROTID+NECK VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8008,0)
CELIAC+SMA VESSELS^CELIAC+SMA VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8009,0)
CENSUS TRACT^CENSUS TRACT^^^^^S^from LOINC system list
"DATA",64.061,8010,0)
CENSUS TRACT AT CANCER XXX DX^CENSUS TRACT AT CANCER XXX DX^^^^^S^from LOINC system list
"DATA",64.061,8011,0)
CENSUS TRACT AT CANCER XXX DX.ALTERNATE^CENSUS TRACT AT CANCER XXX DX.ALTERNATE^^^^^S^from LOINC system list
"DATA",64.061,8012,0)
CENTRAL VEIN^CENTRAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8013,0)
CENTRAL VEIN.BILATERAL^CENTRAL VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8014,0)
CENTRAL VEIN.LEFT^CENTRAL VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8015,0)
CENTRAL VEIN.RIGHT^CENTRAL VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8016,0)
CERVICOCEREBRAL ARTERY^CERVICOCEREBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8017,0)
CERVIX^CERVIX^^^^^S^from LOINC system list
"DATA",64.061,8018,0)
CHEEK.LEFT^CHEEK.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8019,0)
CHEEK.RIGHT^CHEEK.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8020,0)
CONJUNCTIVA^CONJUNCTIVA^^^^^S^from LOINC system list
"DATA",64.061,8021,0)
CRITICAL CARE UNIT^CRITICAL CARE UNIT^^^^^S^from LOINC system list
"DATA",64.061,8022,0)
CVS^CVS^^^^^S^from LOINC system list
"DATA",64.061,8023,0)
DENTITION^DENTITION^^^^^S^from LOINC system list
"DATA",64.061,8024,0)
DIGITS^DIGITS^^^^^S^from LOINC system list
"DATA",64.061,8025,0)
EAR.EXTERNAL^EAR.EXTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8026,0)
EAR.LEFT^EAR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8027,0)
EAR.LEFT+HEAD^EAR.LEFT+HEAD^^^^^S^from LOINC system list
"DATA",64.061,8028,0)
EAR.RIGHT^EAR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8029,0)
EAR.RIGHT+HEAD^EAR.RIGHT+HEAD^^^^^S^from LOINC system list
"DATA",64.061,8030,0)
EMERGENCY DEPARTMENT^EMERGENCY DEPARTMENT^^^^^S^from LOINC system list
"DATA",64.061,8031,0)
ENDOTRACHEAL SUCTION CATHETER^ENDOTRACHEAL SUCTION CATHETER^^^^^S^from LOINC system list
"DATA",64.061,8032,0)
EPIDURAL VEIN^EPIDURAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8033,0)
EXTRAOCULAR MUSCLES^EXTRAOCULAR MUSCLES^^^^^S^from LOINC system list
"DATA",64.061,8034,0)
EXTREMITY ARTERY^EXTREMITY ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8035,0)
EXTREMITY ARTERY.BILATERAL^EXTREMITY ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8036,0)
EXTREMITY VEIN^EXTREMITY VEIN^^^^^S^from LOINC system list
"DATA",64.061,8037,0)
EXTREMITY.UPPER.JOINT^EXTREMITY.UPPER.JOINT^^^^^S^from LOINC system list
"DATA",64.061,8038,0)
EYELID^EYELID^^^^^S^from LOINC system list
"DATA",64.061,8039,0)
FACIAL BONES+MAXILLA^FACIAL BONES+MAXILLA^^^^^S^from LOINC system list
"DATA",64.061,8040,0)
FALLOPIAN TUBES^FALLOPIAN TUBES^^^^^S^from LOINC system list
"DATA",64.061,8041,0)
FEMORAL VESSELS^FEMORAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8042,0)
FINGER.FIFTH^FINGER.FIFTH^^^^^S^from LOINC system list
"DATA",64.061,8043,0)
FINGER.FOURTH^FINGER.FOURTH^^^^^S^from LOINC system list
"DATA",64.061,8044,0)
FINGER.SECOND^FINGER.SECOND^^^^^S^from LOINC system list
"DATA",64.061,8045,0)
FINGER.THIRD^FINGER.THIRD^^^^^S^from LOINC system list
"DATA",64.061,8046,0)
FLUID.XXX^FLUID.XXX^^^^^S^from LOINC system list
"DATA",64.061,8047,0)
FOOT VESSELS^FOOT VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8048,0)
FOREARM VESSELS^FOREARM VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8049,0)
GAIT^GAIT^^^^^S^from LOINC system list
"DATA",64.061,8050,0)
GASTROINTESTINE.UPPER+SMALL BOWEL^GASTROINTESTINE.UPPER+SMALL BOWEL^^^^^S^from LOINC system list
"DATA",64.061,8051,0)
GENERAL APPEARANCE^GENERAL APPEARANCE^^^^^S^from LOINC system list
"DATA",64.061,8052,0)
GENERAL STATUS^GENERAL STATUS^^^^^S^from LOINC system list
"DATA",64.061,8053,0)
GINGIVA^GINGIVA^^^^^S^from LOINC system list
"DATA",64.061,8054,0)
GUARDIAN^GUARDIAN^^^^^S^from LOINC system list
"DATA",64.061,8055,0)
HEAD VEINS^HEAD VEINS^^^^^S^from LOINC system list
"DATA",64.061,8056,0)
HEAD VESSELS^HEAD VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8057,0)
HEAD+NECK ARTERY^HEAD+NECK ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8058,0)
HEAD+NECK ARTERY.BILATERAL^HEAD+NECK ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8059,0)
HEAD.CRANIAL NERVES^HEAD.CRANIAL NERVES^^^^^S^from LOINC system list
"DATA",64.061,8060,0)
HEARING^HEARING^^^^^S^from LOINC system list
"DATA",64.061,8062,0)
HEMATOLOGIC+LYMPHATIC+IMMUNOLOGIC SYSTEM^HEMATOLOGIC+LYMPHATIC+IMMUNOLOGIC SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,8063,0)
HEMORRHOID^HEMORRHOID^^^^^S^from LOINC system list
"DATA",64.061,8064,0)
HEREDITARY^HEREDITARY^^^^^S^from LOINC system list
"DATA",64.061,8065,0)
HOME HEALTH^HOME HEALTH^^^^^S^from LOINC system list
"DATA",64.061,8066,0)
HOME HEALTH CARE^HOME HEALTH CARE^^^^^S^from LOINC system list
"DATA",64.061,8067,0)
HOSPITAL^HOSPITAL^^^^^S^from LOINC system list
"DATA",64.061,8068,0)
HOSPITAL ALCOHOL-SUBSTANCE ABUSE REHAB TREATMENT^HOSPITAL ALCOHOL-SUBSTANCE ABUSE REHAB TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8069,0)
HOSPITAL PSYCHIATRIC REHAB TREAMENT^HOSPITAL PSYCHIATRIC REHAB TREAMENT^^^^^S^from LOINC system list
"DATA",64.061,8070,0)
HOSPITALIZATION LEADING TO CARDIAC REHABILITATION TREATMENT^HOSPITALIZATION LEADING TO CARDIAC REHABILITATION TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8071,0)
HOSPITALIZATION LEADING TO MEDICAL SOCIAL SERVICES TREATMENT^HOSPITALIZATION LEADING TO MEDICAL SOCIAL SERVICES TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8072,0)
HOSPITALIZATION LEADING TO OCCUPATIONAL THERAPY TREATMENT^HOSPITALIZATION LEADING TO OCCUPATIONAL THERAPY TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8073,0)
HOSPITALIZATION LEADING TO RESPIRATORY THERAPY TREATMENT^HOSPITALIZATION LEADING TO RESPIRATORY THERAPY TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8074,0)
ILIAC ARTERY.INTERNAL^ILIAC ARTERY.INTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8075,0)
INPATIENT^INPATIENT^^^^^S^from LOINC system list
"DATA",64.061,8076,0)
INTERNAL AUDITORY CANAL^INTERNAL AUDITORY CANAL^^^^^S^from LOINC system list
"DATA",64.061,8077,0)
INTRACRANIAL VESSEL.XXX^INTRACRANIAL VESSEL.XXX^^^^^S^from LOINC system list
"DATA",64.061,8078,0)
INTRACRANIAL+NECK VESSEL^INTRACRANIAL+NECK VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8079,0)
INTRAORAL^INTRAORAL^^^^^S^from LOINC system list
"DATA",64.061,8080,0)
INTUBATION TUBE^INTUBATION TUBE^^^^^S^from LOINC system list
"DATA",64.061,8081,0)
IRIS^IRIS^^^^^S^from LOINC system list
"DATA",64.061,8082,0)
KIDNEY.FINE NEEDLE^KIDNEY.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8083,0)
KIDNEYS+COLLECTING SYSTEM+VESSELS.RENAL^KIDNEYS+COLLECTING SYSTEM+VESSELS.RENAL^^^^^S^from LOINC system list
"DATA",64.061,8084,0)
LACRIMAL APPARATUS^LACRIMAL APPARATUS^^^^^S^from LOINC system list
"DATA",64.061,8085,0)
LACRIMAL DUCT^LACRIMAL DUCT^^^^^S^from LOINC system list
"DATA",64.061,8086,0)
LARYNX^LARYNX^^^^^S^from LOINC system list
"DATA",64.061,8087,0)
LIP^LIP^^^^^S^from LOINC system list
"DATA",64.061,8088,0)
LIVER.FINE NEEDLE^LIVER.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8089,0)
LOWER EXTREMITY VEIN^LOWER EXTREMITY VEIN^^^^^S^from LOINC system list
"DATA",64.061,8090,0)
LOWER EXTREMITY VESSELS^LOWER EXTREMITY VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8091,0)
LUMBAR PLEXUS^LUMBAR PLEXUS^^^^^S^from LOINC system list
"DATA",64.061,8092,0)
LUNG.BILATERAL^LUNG.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8093,0)
LUNG.FINE NEEDLE^LUNG.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8094,0)
LYMPH NODE^LYMPH NODE^^^^^S^from LOINC system list
"DATA",64.061,8095,0)
LYMPH NODE.FINE NEEDLE^LYMPH NODE.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8096,0)
LYMPHATICS.ABDOMINAL^LYMPHATICS.ABDOMINAL^^^^^S^from LOINC system list
"DATA",64.061,8097,0)
LYMPHATICS.ABDOMINAL.BILATERAL^LYMPHATICS.ABDOMINAL.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8098,0)
LYMPHATICS.EXTREMITY^LYMPHATICS.EXTREMITY^^^^^S^from LOINC system list
"DATA",64.061,8099,0)
LYMPHATICS.EXTREMITY.BILATERAL^LYMPHATICS.EXTREMITY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8100,0)
MACULA^MACULA^^^^^S^from LOINC system list
"DATA",64.061,8101,0)
MAMMARY ARTERY.INTERNAL^MAMMARY ARTERY.INTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8102,0)
MANDIBLE+FACE^MANDIBLE+FACE^^^^^S^from LOINC system list
"DATA",64.061,8103,0)
MAXILLA^MAXILLA^^^^^S^from LOINC system list
"DATA",64.061,8104,0)
MAXILLA+MANDIBLE^MAXILLA+MANDIBLE^^^^^S^from LOINC system list
"DATA",64.061,8105,0)
MAXILLA.CUSPID + MANDIBLE.CUSPID^MAXILLA.CUSPID + MANDIBLE.CUSPID^^^^^S^from LOINC system list
"DATA",64.061,8106,0)
MAXILLA.FIRST MOLAR + MANDIBLE.FIRST MOLAR^MAXILLA.FIRST MOLAR + MANDIBLE.FIRST MOLAR^^^^^S^from LOINC system list
"DATA",64.061,8107,0)
MAXILLA.LEFT + MANDIBLE.LEFT^MAXILLA.LEFT + MANDIBLE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8108,0)
MAXILLA.RIGHT + MANDIBLE.RIGHT^MAXILLA.RIGHT + MANDIBLE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8109,0)
MESOCRECTUM^MESOCRECTUM^^^^^S^from LOINC system list
"DATA",64.061,8110,0)
MOTOR FUNCTION^MOTOR FUNCTION^^^^^S^from LOINC system list
"DATA",64.061,8111,0)
MUCOUS MEMBRANE^MUCOUS MEMBRANE^^^^^S^from LOINC system list
"DATA",64.061,8112,0)
MUSCLE TONE^MUSCLE TONE^^^^^S^from LOINC system list
"DATA",64.061,8113,0)
NASAL SEPTUM^NASAL SEPTUM^^^^^S^from LOINC system list
"DATA",64.061,8114,0)
NECK MASS.FINE NEEDLE^NECK MASS.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8115,0)
NECK.SOFT TISSUE~FETUS^NECK.SOFT TISSUE~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8116,0)
NERVES.CRANIAL^NERVES.CRANIAL^^^^^S^from LOINC system list
"DATA",64.061,8117,0)
NOSTRIL^NOSTRIL^^^^^S^from LOINC system list
"DATA",64.061,8118,0)
NPH^NPH^^^^^S^from LOINC system list
"DATA",64.061,8119,0)
NURSING HOME^NURSING HOME^^^^^S^from LOINC system list
"DATA",64.061,8120,0)
OPTIC LENS^OPTIC LENS^^^^^S^from LOINC system list
"DATA",64.061,8121,0)
ORBIT VEIN^ORBIT VEIN^^^^^S^from LOINC system list
"DATA",64.061,8122,0)
ORBITS~FETUS^ORBITS~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8123,0)
OUTPATIENT^OUTPATIENT^^^^^S^from LOINC system list
"DATA",64.061,8124,0)
PALATE^PALATE^^^^^S^from LOINC system list
"DATA",64.061,8125,0)
PANCREAS.FINE NEEDLE^PANCREAS.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8126,0)
PARAMETRIUM^PARAMETRIUM^^^^^S^from LOINC system list
"DATA",64.061,8127,0)
PARAVERTEBRAL MUSCLES^PARAVERTEBRAL MUSCLES^^^^^S^from LOINC system list
"DATA",64.061,8128,0)
PAROTID.FINE NEEDLE^PAROTID.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8129,0)
PATELLAR^PATELLAR^^^^^S^from LOINC system list
"DATA",64.061,8130,0)
PELVIS ARTERY^PELVIS ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8131,0)
PELVIS.FINE NEEDLE^PELVIS.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8132,0)
PELVIS.SYMPHYSIS PUBIS^PELVIS.SYMPHYSIS PUBIS^^^^^S^from LOINC system list
"DATA",64.061,8133,0)
PERIPHERAL VEINS.BILATERAL^PERIPHERAL VEINS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8134,0)
PERIPHERAL VEINS.XXX^PERIPHERAL VEINS.XXX^^^^^S^from LOINC system list
"DATA",64.061,8135,0)
PERITONEUM^PERITONEUM^^^^^S^from LOINC system list
"DATA",64.061,8136,0)
PHARYNX^PHARYNX^^^^^S^from LOINC system list
"DATA",64.061,8137,0)
PIGMENTATION^PIGMENTATION^^^^^S^from LOINC system list
"DATA",64.061,8138,0)
PLAS+CSF^PLAS+CSF^^^^^S^from LOINC system list
"DATA",64.061,8139,0)
PLASA^PLASA^^^^^S^from LOINC system list
"DATA",64.061,8140,0)
PLASV^PLASV^^^^^S^from LOINC system list
"DATA",64.061,8141,0)
PLEURAL SPACE.LEFT^PLEURAL SPACE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8142,0)
PLEURAL SPACE.RIGHT^PLEURAL SPACE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8143,0)
PORTAL VEIN^PORTAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8144,0)
POSTERIOR FOSSA^POSTERIOR FOSSA^^^^^S^from LOINC system list
"DATA",64.061,8145,0)
PRI DX ALCOHOL-SUBSTANCE ABUSE REHAB TREATMENT^PRI DX ALCOHOL-SUBSTANCE ABUSE REHAB TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8146,0)
PRIMARY DX FOR PSYCHIATRIC REHABILITATION TREATMENT PLAN^PRIMARY DX FOR PSYCHIATRIC REHABILITATION TREATMENT PLAN^^^^^S^from LOINC system list
"DATA",64.061,8147,0)
PROSTATE.FINE NEEDLE^PROSTATE.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8148,0)
PRP~CONTROL^PRP~CONTROL^^^^^S^from LOINC system list
"DATA",64.061,8149,0)
PULMONARY ARTERY.BILATERAL^PULMONARY ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8150,0)
PULMONARY VALVE^PULMONARY VALVE^^^^^S^from LOINC system list
"DATA",64.061,8151,0)
PUPIL^PUPIL^^^^^S^from LOINC system list
"DATA",64.061,8152,0)
RASH^RASH^^^^^S^from LOINC system list
"DATA",64.061,8153,0)
REFERENCE BEAT^REFERENCE BEAT^^^^^S^from LOINC system list
"DATA",64.061,8154,0)
REFERENCE LAB TEST^REFERENCE LAB TEST^^^^^S^from LOINC system list
"DATA",64.061,8155,0)
RENAL ARTERY.BILATERAL^RENAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8156,0)
RENAL VEIN^RENAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8157,0)
RENAL VEIN.BILATERAL^RENAL VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8158,0)
RENAL VESSELS^RENAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8159,0)
RESPIRATORY ANALYZER^RESPIRATORY ANALYZER^^^^^S^from LOINC system list
"DATA",64.061,8160,0)
RESPIRATORY SYSTEM.AIRWAY OPENING^RESPIRATORY SYSTEM.AIRWAY OPENING^^^^^S^from LOINC system list
"DATA",64.061,8161,0)
RESPIRATORY THERAPY^RESPIRATORY THERAPY^^^^^S^from LOINC system list
"DATA",64.061,8162,0)
RETINA^RETINA^^^^^S^from LOINC system list
"DATA",64.061,8163,0)
SACRUM^SACRUM^^^^^S^from LOINC system list
"DATA",64.061,8164,0)
SAGITTAL SINUS VEIN^SAGITTAL SINUS VEIN^^^^^S^from LOINC system list
"DATA",64.061,8165,0)
SAGITTAL SINUS VEIN+JUGULAR^SAGITTAL SINUS VEIN+JUGULAR^^^^^S^from LOINC system list
"DATA",64.061,8166,0)
SALIVARY GLAND^SALIVARY GLAND^^^^^S^from LOINC system list
"DATA",64.061,8167,0)
SALIVARY GLAND.FINE NEEDLE^SALIVARY GLAND.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8168,0)
SCALP^SCALP^^^^^S^from LOINC system list
"DATA",64.061,8169,0)
SCLERA^SCLERA^^^^^S^from LOINC system list
"DATA",64.061,8170,0)
SEIZURE ACTIVITY^SEIZURE ACTIVITY^^^^^S^from LOINC system list
"DATA",64.061,8171,0)
SENSE OF TOUCH^SENSE OF TOUCH^^^^^S^from LOINC system list
"DATA",64.061,8172,0)
SER+SAL^SER+SAL^^^^^S^from LOINC system list
"DATA",64.061,8173,0)
SER/PLAS/BLDV^SER/PLAS/BLDV^^^^^S^from LOINC system list
"DATA",64.061,8174,0)
SER/PLAS~BPU^SER/PLAS~BPU^^^^^S^from LOINC system list
"DATA",64.061,8175,0)
SISTER^SISTER^^^^^S^from LOINC system list
"DATA",64.061,8176,0)
SKIN.SCAR^SKIN.SCAR^^^^^S^from LOINC system list
"DATA",64.061,8177,0)
SOFT TISSUE.FINE NEEDLE^SOFT TISSUE.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8178,0)
SPINAL ARTERY^SPINAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8179,0)
SPINAL CORD.CERVICAL+THORACIC+LUMBAR^SPINAL CORD.CERVICAL+THORACIC+LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8180,0)
SPINE FACET^SPINE FACET^^^^^S^from LOINC system list
"DATA",64.061,8181,0)
SPINE FACET.CERVICAL^SPINE FACET.CERVICAL^^^^^S^from LOINC system list
"DATA",64.061,8182,0)
SPINE FACET.LUMBAR^SPINE FACET.LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8183,0)
SPINE FACET.THORACIC^SPINE FACET.THORACIC^^^^^S^from LOINC system list
"DATA",64.061,8184,0)
SPINE.CERVICAL+SPINE.THORACIC+SPINE.LUMBAR^SPINE.CERVICAL+SPINE.THORACIC+SPINE.LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8185,0)
SPINE.CERVICAL+THORACIC+LUMBAR^SPINE.CERVICAL+THORACIC+LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8186,0)
STRENGTH^STRENGTH^^^^^S^from LOINC system list
"DATA",64.061,8187,0)
SUBMANDIBULAR.FINE NEEDLE^SUBMANDIBULAR.FINE NEEDLE^^^^^S^from LOINC system list
"DATA",64.061,8188,0)
SUCTION CATHETER^SUCTION CATHETER^^^^^S^from LOINC system list
"DATA",64.061,8189,0)
SURGERY~PATIENT^SURGERY~PATIENT^^^^^S^from LOINC system list
"DATA",64.061,8190,0)
TEETH AND GUM^TEETH AND GUM^^^^^S^from LOINC system list
"DATA",64.061,8191,0)
TEMPOROMANDIBULAR JOINTS.LEFT^TEMPOROMANDIBULAR JOINTS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8192,0)
TEMPOROMANDIBULAR JOINTS.RIGHT^TEMPOROMANDIBULAR JOINTS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8193,0)
TIBIA+FIBULA+CALF^TIBIA+FIBULA+CALF^^^^^S^from LOINC system list
"DATA",64.061,8194,0)
TIBIOPERONEAL VESSELS^TIBIOPERONEAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8195,0)
TOENAIL^TOENAIL^^^^^S^from LOINC system list
"DATA",64.061,8196,0)
TONGUE^TONGUE^^^^^S^from LOINC system list
"DATA",64.061,8197,0)
TONSIL^TONSIL^^^^^S^from LOINC system list
"DATA",64.061,8198,0)
TOOTH^TOOTH^^^^^S^from LOINC system list
"DATA",64.061,8199,0)
TPN^TPN^^^^^S^from LOINC system list
"DATA",64.061,8200,0)
UPPER EXTREMITY VEIN^UPPER EXTREMITY VEIN^^^^^S^from LOINC system list
"DATA",64.061,8201,0)
UPPER EXTREMITY VESSEL^UPPER EXTREMITY VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8202,0)
UR+SER/PLAS^UR+SER/PLAS^^^^^S^from LOINC system list
"DATA",64.061,8203,0)
VACCINE^VACCINE^^^^^S^from LOINC system list
"DATA",64.061,8204,0)
VACCINE.ADMINISTERED^VACCINE.ADMINISTERED^^^^^S^from LOINC system list
"DATA",64.061,8205,0)
VAGINA^VAGINA^^^^^S^from LOINC system list
"DATA",64.061,8206,0)
VEIN^VEIN^^^^^S^from LOINC system list
"DATA",64.061,8207,0)
VENA CAVA.INFERIOR~FETUS^VENA CAVA.INFERIOR~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8208,0)
VENA CAVA.SUPERIOR^VENA CAVA.SUPERIOR^^^^^S^from LOINC system list
"DATA",64.061,8209,0)
VENA CAVA.SUPERIOR~FETUS^VENA CAVA.SUPERIOR~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8210,0)
VENTILATION TUBE^VENTILATION TUBE^^^^^S^from LOINC system list
"DATA",64.061,8211,0)
VENTILATOR AIRWAY CIRCUIT^VENTILATOR AIRWAY CIRCUIT^^^^^S^from LOINC system list
"DATA",64.061,8212,0)
VESSEL.UPPER EXTREMITY^VESSEL.UPPER EXTREMITY^^^^^S^from LOINC system list
"DATA",64.061,8213,0)
VESSELS.ABDOMEN^VESSELS.ABDOMEN^^^^^S^from LOINC system list
"DATA",64.061,8214,0)
VISCERAL ARTERY^VISCERAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8215,0)
VISION^VISION^^^^^S^from LOINC system list
"DATA",64.061,8216,0)
VITAL SIGNS^VITAL SIGNS^^^^^S^from LOINC system list
"DATA",64.061,8217,0)
XXX ARTERY^XXX ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8218,0)
{BODY FLUID}^{BODY FLUID}^^^^^S^from LOINC system list
"DATA",64.061,8219,0)
{CHIEF COMPLAINT}^{CHIEF COMPLAINT}^^^^^S^from LOINC system list
"DATA",64.061,8220,0)
{CIRCULATORY SYSTEM}^{CIRCULATORY SYSTEM}^^^^^S^from LOINC system list
"DATA",64.061,8221,0)
{DENTAL ARCH}^{DENTAL ARCH}^^^^^S^from LOINC system list
"DATA",64.061,8222,0)
{DENTAL ARCH}.DENTURE.COMPLETE^{DENTAL ARCH}.DENTURE.COMPLETE^^^^^S^from LOINC system list
"DATA",64.061,8223,0)
{DENTAL ARCH}.DENTURE.PARTIAL^{DENTAL ARCH}.DENTURE.PARTIAL^^^^^S^from LOINC system list
"DATA",64.061,8224,0)
{DENTAL PROSTHESIS}^{DENTAL PROSTHESIS}^^^^^S^from LOINC system list
"DATA",64.061,8225,0)
{DIAGNOSIS.DENTAL}^{DIAGNOSIS.DENTAL}^^^^^S^from LOINC system list
"DATA",64.061,8226,0)
{DIAGNOSIS}^{DIAGNOSIS}^^^^^S^from LOINC system list
"DATA",64.061,8227,0)
{FIRST BONE REFERENCE} + {SECOND BONE REFERENCE}^{FIRST BONE REFERENCE} + {SECOND BONE REFERENCE}^^^^^S^from LOINC system list
"DATA",64.061,8228,0)
{FIRST FACIAL LANDMARK} {SECOND FACIAL LANDMARK}^{FIRST FACIAL LANDMARK} {SECOND FACIAL LANDMARK}^^^^^S^from LOINC system list
"DATA",64.061,8229,0)
{FIRST TOOTH SPACE BOUNDARY} {SECOND TOOTH SPACE BOUNDARY}^{FIRST TOOTH SPACE BOUNDARY} {SECOND TOOTH SPACE BOUNDARY}^^^^^S^from LOINC system list
"DATA",64.061,8230,0)
{HEAD}^{HEAD}^^^^^S^from LOINC system list
"DATA",64.061,8231,0)
{ORTHODONTIC TREATMENT}^{ORTHODONTIC TREATMENT}^^^^^S^from LOINC system list
"DATA",64.061,8232,0)
{PRIMARY PAIN LOCATION}^{PRIMARY PAIN LOCATION}^^^^^S^from LOINC system list
"DATA",64.061,8233,0)
{PROBE SITE}^{PROBE SITE}^^^^^S^from LOINC system list
"DATA",64.061,8234,0)
{PROCEDURE}^{PROCEDURE}^^^^^S^from LOINC system list
"DATA",64.061,8235,0)
{REFLEX LOCATION}^{REFLEX LOCATION}^^^^^S^from LOINC system list
"DATA",64.061,8236,0)
{SETTING}^{SETTING}^^^^^S^from LOINC system list
"DATA",64.061,8237,0)
{SUBJECT TOOTH} + {REFERENCE TOOTH}^{SUBJECT TOOTH} + {REFERENCE TOOTH}^^^^^S^from LOINC system list
"DATA",64.061,8238,0)
{TOOTH SPACE}^{TOOTH SPACE}^^^^^S^from LOINC system list
"DATA",64.061,8239,0)
{TOOTH}^{TOOTH}^^^^^S^from LOINC system list
"DATA",64.061,8240,0)
{TOOTH}.SULCUS^{TOOTH}.SULCUS^^^^^S^from LOINC system list
"DATA",64.061,8241,0)
{TOOTH}.{PROBE SITE}^{TOOTH}.{PROBE SITE}^^^^^S^from LOINC system list
"DATA",64.061,8242,0)
{TOOTH}.{PROBE SITE}.{SURFACE}+MANDIBLE^{TOOTH}.{PROBE SITE}.{SURFACE}+MANDIBLE^^^^^S^from LOINC system list
"DATA",64.061,8243,0)
{TOOTH}.{PROBE SITE}.{SURFACE}+MAXILLA^{TOOTH}.{PROBE SITE}.{SURFACE}+MAXILLA^^^^^S^from LOINC system list
"DATA",64.061,8244,0)
{TOOTH}.{SURFACE}^{TOOTH}.{SURFACE}^^^^^S^from LOINC system list
"DATA",64.061,8245,0)
{TREATMENT.DENTAL}^{TREATMENT.DENTAL}^^^^^S^from LOINC system list
"DATA",64.061,8246,0)
{TYPE OF TASK}^{TYPE OF TASK}^^^^^S^from LOINC system list
"DATA",64.061,8247,0)
~FDA PACKAGE INSERT^~FDA PACKAGE INSERT^^^^^S^from LOINC system list
"DATA",64.061,8248,0)
~FDA PRODUCT LABEL^~FDA PRODUCT LABEL^^^^^S^from LOINC system list
"DATA",64.061,8249,0)
~NEWBORN^~NEWBORN^^^^^S^from LOINC system list
"DATA",64.061,8250,0)
~TICK^~TICK^^^^^S^from LOINC system list
"DATA",64.061,8251,0)
Document^DOC^^^^^PR
"DATA",64.061,8252,0)
ABXBACT^ABXBACT^^^^^CL^LOINC Class^20
"DATA",64.061,8253,0)
ALLERGY^ALLERGY^^^^^CL^LOINC Class^20
"DATA",64.061,8254,0)
ATTACH^ATTACH^^^^^CL^LOINC Class^20
"DATA",64.061,8255,0)
ATTACH.AMB^ATTACH.AMB^^^^^CL^LOINC Class^20
"DATA",64.061,8256,0)
ATTACH.CARD^ATTACH.CARD^^^^^CL^LOINC Class^20
"DATA",64.061,8257,0)
ATTACH.CLINRPT^ATTACH.CLINRPT^^^^^CL^LOINC Class^20
"DATA",64.061,8258,0)
ATTACH.ED^ATTACH.ED^^^^^CL^LOINC Class^20
"DATA",64.061,8259,0)
ATTACH.GI^ATTACH.GI^^^^^CL^LOINC Class^20
"DATA",64.061,8260,0)
ATTACH.LAB^ATTACH.LAB^^^^^CL^LOINC Class^20
"DATA",64.061,8261,0)
ATTACH.MEDS^ATTACH.MEDS^^^^^CL^LOINC Class^20
"DATA",64.061,8262,0)
ATTACH.MODIFIER^ATTACH.MODIFIER^^^^^CL^LOINC Class^20
"DATA",64.061,8263,0)
ATTACH.OBS^ATTACH.OBS^^^^^CL^LOINC Class^20
"DATA",64.061,8264,0)
ATTACH.REHAB^ATTACH.REHAB^^^^^CL^LOINC Class^20
"DATA",64.061,8265,0)
ATTACH.REHAB.ABUSE^ATTACH.REHAB.ABUSE^^^^^CL^LOINC Class^20
"DATA",64.061,8266,0)
ATTACH.REHAB.CARDIAC^ATTACH.REHAB.CARDIAC^^^^^CL^LOINC Class^20
"DATA",64.061,8267,0)
ATTACH.REHAB.NURS^ATTACH.REHAB.NURS^^^^^CL^LOINC Class^20
"DATA",64.061,8268,0)
ATTACH.REHAB.OT^ATTACH.REHAB.OT^^^^^CL^LOINC Class^20
"DATA",64.061,8269,0)
ATTACH.REHAB.PSYCH^ATTACH.REHAB.PSYCH^^^^^CL^LOINC Class^20
"DATA",64.061,8270,0)
ATTACH.REHAB.PT^ATTACH.REHAB.PT^^^^^CL^LOINC Class^20
"DATA",64.061,8271,0)
ATTACH.REHAB.RT^ATTACH.REHAB.RT^^^^^CL^LOINC Class^20
"DATA",64.061,8272,0)
ATTACH.REHAB.SOCIAL^ATTACH.REHAB.SOCIAL^^^^^CL^LOINC Class^20
"DATA",64.061,8273,0)
ATTACH.REHAB.SPEECH^ATTACH.REHAB.SPEECH^^^^^CL^LOINC Class^20
"DATA",64.061,8274,0)
ATTACH.RESP^ATTACH.RESP^^^^^CL^LOINC Class^20
"DATA",64.061,8275,0)
BDYCRC.ATOM^BDYCRC.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8276,0)
BDYCRC.MOLEC^BDYCRC.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8277,0)
BDYHGT.ATOM^BDYHGT.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8278,0)
BDYHGT.MOLEC^BDYHGT.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8279,0)
BDYSURF.ATOM^BDYSURF.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8280,0)
BDYTMP.ATOM^BDYTMP.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8281,0)
BDYTMP.MOLEC^BDYTMP.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8282,0)
BDYTMP.TIMED.MOLE^BDYTMP.TIMED.MOLE^^^^^CL^LOINC Class^20
"DATA",64.061,8283,0)
BDYWGT.ATOM^BDYWGT.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8284,0)
BDYWGT.MOLEC^BDYWGT.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8285,0)
BLDBK^BLDBK^^^^^CL^LOINC Class^20
"DATA",64.061,8286,0)
BP.ATOM^BP.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8287,0)
BP.CENT.MOLEC^BP.CENT.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8288,0)
BP.MOLEC^BP.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8289,0)
BP.PSTN.MOLEC^BP.PSTN.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8290,0)
BP.TIMED.MOLEC^BP.TIMED.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8291,0)
BP.VENOUS.MOLEC^BP.VENOUS.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8292,0)
CARD.US^CARD.US^^^^^CL^LOINC Class^20
"DATA",64.061,8293,0)
CELLMARK^CELLMARK^^^^^CL^LOINC Class^20
"DATA",64.061,8294,0)
CHAL^CHAL^^^^^CL^LOINC Class^20
"DATA",64.061,8295,0)
CHALSKIN^CHALSKIN^^^^^CL^LOINC Class^20
"DATA",64.061,8296,0)
CHEM^CHEM^^^^^CL^LOINC Class^20
"DATA",64.061,8297,0)
CLIN^CLIN^^^^^CL^LOINC Class^20
"DATA",64.061,8298,0)
COAG^COAG^^^^^CL^LOINC Class^20
"DATA",64.061,8299,0)
CYTO^CYTO^^^^^CL^LOINC Class^20
"DATA",64.061,8300,0)
DENTAL^DENTAL^^^^^CL^LOINC Class^20
"DATA",64.061,8301,0)
DOC.CLINRPT^DOC.CLINRPT^^^^^CL^LOINC Class^20
"DATA",64.061,8302,0)
DOC.REF^DOC.REF^^^^^CL^LOINC Class^20
"DATA",64.061,8303,0)
DOCUMENT.REGULATORY^DOCUMENT.REGULATORY^^^^^CL^LOINC Class^20
"DATA",64.061,8304,0)
DRUG/TOX^DRUG/TOX^^^^^CL^LOINC Class^20
"DATA",64.061,8305,0)
DRUGDOSE^DRUGDOSE^^^^^CL^LOINC Class^20
"DATA",64.061,8306,0)
ED^ED^^^^^CL^LOINC Class^20
"DATA",64.061,8307,0)
EKG.ATOM^EKG.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8308,0)
EKG.IMP^EKG.IMP^^^^^CL^LOINC Class^20
"DATA",64.061,8309,0)
EKG.MEAS^EKG.MEAS^^^^^CL^LOINC Class^20
"DATA",64.061,8310,0)
ENDO.GI^ENDO.GI^^^^^CL^LOINC Class^20
"DATA",64.061,8311,0)
EYE^EYE^^^^^CL^LOINC Class^20
"DATA",64.061,8312,0)
EYE.CONTACT_LENS^EYE.CONTACT_LENS^^^^^CL^LOINC Class^20
"DATA",64.061,8313,0)
EYE.GLASSES^EYE.GLASSES^^^^^CL^LOINC Class^20
"DATA",64.061,8314,0)
EYE.HETEROPHORIA^EYE.HETEROPHORIA^^^^^CL^LOINC Class^20
"DATA",64.061,8315,0)
EYE.PX^EYE.PX^^^^^CL^LOINC Class^20
"DATA",64.061,8316,0)
EYE.REFRACTION^EYE.REFRACTION^^^^^CL^LOINC Class^20
"DATA",64.061,8317,0)
EYE.RETINAL_RX^EYE.RETINAL_RX^^^^^CL^LOINC Class^20
"DATA",64.061,8318,0)
EYE.TONOMETRY^EYE.TONOMETRY^^^^^CL^LOINC Class^20
"DATA",64.061,8319,0)
EYE.US^EYE.US^^^^^CL^LOINC Class^20
"DATA",64.061,8320,0)
EYE.VISUAL_FIELD^EYE.VISUAL_FIELD^^^^^CL^LOINC Class^20
"DATA",64.061,8321,0)
FERT^FERT^^^^^CL^LOINC Class^20
"DATA",64.061,8322,0)
FUNCTION^FUNCTION^^^^^CL^LOINC Class^20
"DATA",64.061,8323,0)
GEN.US^GEN.US^^^^^CL^LOINC Class^20
"DATA",64.061,8324,0)
H&P.HX^H&P.HX^^^^^CL^LOINC Class^20
"DATA",64.061,8325,0)
H&P.PX^H&P.PX^^^^^CL^LOINC Class^20
"DATA",64.061,8326,0)
H&P.SURG PROC^H&P.SURG PROC^^^^^CL^LOINC Class^20
"DATA",64.061,8327,0)
HEM/BC^HEM/BC^^^^^CL^LOINC Class^20
"DATA",64.061,8328,0)
HEMODYN.ATOM^HEMODYN.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8329,0)
HEMODYN.MOLEC^HEMODYN.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8330,0)
HLA^HLA^^^^^CL^LOINC Class^20
"DATA",64.061,8331,0)
HRTRATE.ATOM^HRTRATE.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8332,0)
HRTRATE.MOLEC^HRTRATE.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8333,0)
HRTRATE.TIMED.MOL^HRTRATE.TIMED.MOL^^^^^CL^LOINC Class^20
"DATA",64.061,8334,0)
IO.TUBE^IO.TUBE^^^^^CL^LOINC Class^20
"DATA",64.061,8335,0)
IO_IN.ATOM^IO_IN.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8336,0)
IO_IN.MOLEC^IO_IN.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8337,0)
IO_IN.SUMMARY^IO_IN.SUMMARY^^^^^CL^LOINC Class^20
"DATA",64.061,8338,0)
IO_IN.TIMED.MOLEC^IO_IN.TIMED.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8339,0)
IO_IN_SALTS+CALS^IO_IN_SALTS+CALS^^^^^CL^LOINC Class^20
"DATA",64.061,8340,0)
IO_OUT.ATOM^IO_OUT.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8341,0)
IO_OUT.MOLEC^IO_OUT.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8342,0)
IO_OUT.TIMED.MOLE^IO_OUT.TIMED.MOLE^^^^^CL^LOINC Class^20
"DATA",64.061,8343,0)
MICRO^MICRO^^^^^CL^LOINC Class^20
"DATA",64.061,8344,0)
MISC^MISC^^^^^CL^LOINC Class^20
"DATA",64.061,8345,0)
MOLPATH^MOLPATH^^^^^CL^LOINC Class^20
"DATA",64.061,8346,0)
MOLPATH.DEL^MOLPATH.DEL^^^^^CL^LOINC Class^20
"DATA",64.061,8347,0)
MOLPATH.MUT^MOLPATH.MUT^^^^^CL^LOINC Class^20
"DATA",64.061,8348,0)
MOLPATH.REARRANGE^MOLPATH.REARRANGE^^^^^CL^LOINC Class^20
"DATA",64.061,8349,0)
MOLPATH.TRINUC^MOLPATH.TRINUC^^^^^CL^LOINC Class^20
"DATA",64.061,8350,0)
MOLPATH.TRISOMY^MOLPATH.TRISOMY^^^^^CL^LOINC Class^20
"DATA",64.061,8351,0)
MOLPATH.TRNLOC^MOLPATH.TRNLOC^^^^^CL^LOINC Class^20
"DATA",64.061,8352,0)
NEONAT^NEONAT^^^^^CL^LOINC Class^20
"DATA",64.061,8353,0)
OB.US^OB.US^^^^^CL^LOINC Class^20
"DATA",64.061,8354,0)
OBGYN^OBGYN^^^^^CL^LOINC Class^20
"DATA",64.061,8355,0)
PANEL.ABXBACT^PANEL.ABXBACT^^^^^CL^LOINC Class^20
"DATA",64.061,8356,0)
PANEL.BLDBK^PANEL.BLDBK^^^^^CL^LOINC Class^20
"DATA",64.061,8357,0)
PANEL.BP^PANEL.BP^^^^^CL^LOINC Class^20
"DATA",64.061,8358,0)
PANEL.CARDIAC^PANEL.CARDIAC^^^^^CL^LOINC Class^20
"DATA",64.061,8359,0)
PANEL.CHAL^PANEL.CHAL^^^^^CL^LOINC Class^20
"DATA",64.061,8360,0)
PANEL.CHEM^PANEL.CHEM^^^^^CL^LOINC Class^20
"DATA",64.061,8361,0)
PANEL.COAG^PANEL.COAG^^^^^CL^LOINC Class^20
"DATA",64.061,8362,0)
PANEL.DRUG/TOX^PANEL.DRUG/TOX^^^^^CL^LOINC Class^20
"DATA",64.061,8363,0)
PANEL.HEM/BC^PANEL.HEM/BC^^^^^CL^LOINC Class^20
"DATA",64.061,8364,0)
PANEL.IO^PANEL.IO^^^^^CL^LOINC Class^20
"DATA",64.061,8365,0)
PANEL.MICRO^PANEL.MICRO^^^^^CL^LOINC Class^20
"DATA",64.061,8366,0)
PANEL.OBS^PANEL.OBS^^^^^CL^LOINC Class^20
"DATA",64.061,8367,0)
PANEL.SERO^PANEL.SERO^^^^^CL^LOINC Class^20
"DATA",64.061,8368,0)
PANEL.UA^PANEL.UA^^^^^CL^LOINC Class^20
"DATA",64.061,8369,0)
PANEL.VITALS^PANEL.VITALS^^^^^CL^LOINC Class^20
"DATA",64.061,8370,0)
PATH^PATH^^^^^CL^LOINC Class^20
"DATA",64.061,8371,0)
PATH.PROTOCOLS^PATH.PROTOCOLS^^^^^CL^LOINC Class^20
"DATA",64.061,8372,0)
PULM^PULM^^^^^CL^LOINC Class^20
"DATA",64.061,8373,0)
RAD^RAD^^^^^CL^LOINC Class^20
"DATA",64.061,8374,0)
RESP.ATOM^RESP.ATOM^^^^^CL^LOINC Class^20
"DATA",64.061,8375,0)
RESP.MOLEC^RESP.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8376,0)
RESP.TIMED.MOLEC^RESP.TIMED.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8377,0)
SERO^SERO^^^^^CL^LOINC Class^20
"DATA",64.061,8378,0)
SKNFLD.MOLEC^SKNFLD.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8379,0)
SPEC^SPEC^^^^^CL^LOINC Class^20
"DATA",64.061,8380,0)
SURVEY.NURSE.HHCC^SURVEY.NURSE.HHCC^^^^^CL^LOINC Class^20
"DATA",64.061,8381,0)
SURVEY.NURSE.HIV-SSC^SURVEY.NURSE.HIV-SSC^^^^^CL^LOINC Class^20
"DATA",64.061,8382,0)
SURVEY.NURSE.LIV-HIV^SURVEY.NURSE.LIV-HIV^^^^^CL^LOINC Class^20
"DATA",64.061,8383,0)
SURVEY.NURSE.OMAHA^SURVEY.NURSE.OMAHA^^^^^CL^LOINC Class^20
"DATA",64.061,8384,0)
SURVEY.NURSE.QAM^SURVEY.NURSE.QAM^^^^^CL^LOINC Class^20
"DATA",64.061,8385,0)
TUMRRGT^TUMRRGT^^^^^CL^LOINC Class^20
"DATA",64.061,8386,0)
UA^UA^^^^^CL^LOINC Class^20
"DATA",64.061,8387,0)
US.URO^US.URO^^^^^CL^LOINC Class^20
"DATA",64.061,8388,0)
VACCIN^VACCIN^^^^^CL^LOINC Class^20
"DATA",64.061,8389,0)
VOLUME.MOLEC^VOLUME.MOLEC^^^^^CL^LOINC Class^20
"DATA",64.061,8390,0)
0.0% SODIUM CHLORIDE 24H INCUBATION @37C^0.0% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8391,0)
0.30% SODIUM CHLORIDE 24H INCUBATION @37C^0.30% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8392,0)
0.35% SODIUM CHLORIDE 24H INCUBATION @37C^0.35% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8393,0)
0.40% SODIUM CHLORIDE 24H INCUBATION @37C^0.40% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8394,0)
0.45% SODIUM CHLORIDE 24H INCUBATION @37C^0.45% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8395,0)
0.50% SODIUM CHLORIDE 24H INCUBATION @37C^0.50% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8396,0)
0.55% SODIUM CHLORIDE 24H INCUBATION @37C^0.55% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8397,0)
0.85% SODIUM CHLORIDE 24H INCUBATION @37C^0.85% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8398,0)
1.3H POST DOSE GLUCOSE^1.3H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8399,0)
1.3H POST XXX CHALLENGE^1.3H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8400,0)
1.5H POST 200 UG TRH IV^1.5H POST 200 UG TRH IV^^^^^C
"DATA",64.061,8401,0)
1.5H POST DOSE LACTOSE PO^1.5H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8402,0)
1.6H POST DOSE GLUCOSE^1.6H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8403,0)
1.6H POST XXX CHALLENGE^1.6H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8404,0)
10M POST DOSE GLUCOSE^10M POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8405,0)
11 PM SPECIMEN^11 PM SPECIMEN^^^^^C
"DATA",64.061,8406,0)
1200 UG/ML^1200 UG/ML^^^^^C
"DATA",64.061,8407,0)
1500 UG/ML^1500 UG/ML^^^^^C
"DATA",64.061,8408,0)
15M POST 250 UG CORTICOTROPIN^15M POST 250 UG CORTICOTROPIN^^^^^C
"DATA",64.061,8409,0)
15M POST 250 UG CORTICOTROPIN IM^15M POST 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8410,0)
15M POST INCUBATION^15M POST INCUBATION^^^^^C
"DATA",64.061,8411,0)
1D POST 0.1 ML MUMPS ID^1D POST 0.1 ML MUMPS ID^^^^^C
"DATA",64.061,8412,0)
1D POST 50 UG CANDIDA ALBICANS ID^1D POST 50 UG CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,8413,0)
1D POST 50 UG TRICHOPHYTON ID^1D POST 50 UG TRICHOPHYTON ID^^^^^C
"DATA",64.061,8414,0)
1D POST DOSE ID^1D POST DOSE ID^^^^^C
"DATA",64.061,8415,0)
1D POST DOSE MAMMALIAN TUBERCULIN ID^1D POST DOSE MAMMALIAN TUBERCULIN ID^^^^^C
"DATA",64.061,8416,0)
1H AFTER 1-4 ADDITION OF NORMAL PLASMA^1H AFTER 1-4 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8417,0)
1H POST 1.2 G/KG LACTOSE PO^1H POST 1.2 G/KG LACTOSE PO^^^^^C
"DATA",64.061,8418,0)
1H POST 250 UG CORTICOTROPIN^1H POST 250 UG CORTICOTROPIN^^^^^C
"DATA",64.061,8419,0)
1H POST DOSE LACTOSE PO^1H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8420,0)
1H POST INCUBATION^1H POST INCUBATION^^^^^C
"DATA",64.061,8421,0)
1H POST INCUBATION AFTER 1-4 ADDITION OF NORMAL PLASMA^1H POST INCUBATION AFTER 1-4 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8422,0)
1H POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^1H POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8423,0)
1ST SPECIMEN/2ND SPECIMEN^1ST SPECIMEN/2ND SPECIMEN^^^^^C
"DATA",64.061,8424,0)
2.3H POST DOSE GLUCOSE^2.3H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8425,0)
2.3H POST XXX CHALLENGE^2.3H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8426,0)
2.5H POST DOSE LACTOSE PO^2.5H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8427,0)
2.6H POST DOSE GLUCOSE^2.6H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8428,0)
2.6H POST XXX CHALLENGE^2.6H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8429,0)
20M POST DOSE GLUCOSE^20M POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8430,0)
20M POST INCUBATE.37@C NORMAL PLASMA^20M POST INCUBATE.37@C NORMAL PLASMA^^^^^C
"DATA",64.061,8431,0)
21ST SPECIMEN POST XXX CHALLENGE^21ST SPECIMEN POST XXX CHALLENGE^^^^^C
"DATA",64.061,8432,0)
24H POST 500 UG CORTICOTROPIN IM^24H POST 500 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8433,0)
250 UG CORTICOTROPIN IM PANEL^250 UG CORTICOTROPIN IM PANEL^^^^^C
"DATA",64.061,8434,0)
250 UG CORTICOTROPIN IV PANEL^250 UG CORTICOTROPIN IV PANEL^^^^^C
"DATA",64.061,8435,0)
2D POST 0.1 ML CANDIDA ALBICANS ID^2D POST 0.1 ML CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,8436,0)
2D POST 0.1 ML COCCIDIOIDIN ID^2D POST 0.1 ML COCCIDIOIDIN ID^^^^^C
"DATA",64.061,8437,0)
2D POST 0.1 ML HISTOPLASMIN ID^2D POST 0.1 ML HISTOPLASMIN ID^^^^^C
"DATA",64.061,8438,0)
2D POST 0.1 ML MUMPS ID^2D POST 0.1 ML MUMPS ID^^^^^C
"DATA",64.061,8439,0)
2D POST 0.1ML TRICHOPHYTON ID^2D POST 0.1ML TRICHOPHYTON ID^^^^^C
"DATA",64.061,8440,0)
2D POST 50 UG CANDIDA ALBICANS ID^2D POST 50 UG CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,8441,0)
2D POST 50 UG TRICHOPHYTON ID^2D POST 50 UG TRICHOPHYTON ID^^^^^C
"DATA",64.061,8442,0)
2D POST 500 UG CORTICOTROPIN IM^2D POST 500 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8443,0)
2H AFTER 1-4 ADDITION OF NORMAL PLASMA^2H AFTER 1-4 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8444,0)
2H AFTER ADDITION OF NORMAL PLASMA^2H AFTER ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8445,0)
2H POST 1.2 G/KG LACTOSE PO^2H POST 1.2 G/KG LACTOSE PO^^^^^C
"DATA",64.061,8446,0)
2H POST 250 UG CORTICOTROPIN IM^2H POST 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8447,0)
2H POST DOSE^2H POST DOSE^^^^^C
"DATA",64.061,8448,0)
2H POST DOSE LACTOSE PO^2H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8449,0)
2H POST DOSE TRH^2H POST DOSE TRH^^^^^C
"DATA",64.061,8450,0)
2H POST DOSE TRH IV^2H POST DOSE TRH IV^^^^^C
"DATA",64.061,8451,0)
2H POST INCUBATION^2H POST INCUBATION^^^^^C
"DATA",64.061,8452,0)
2H POST INCUBATION AFTER 1-4 ADDITION OF NORMAL PLASMA^2H POST INCUBATION AFTER 1-4 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8453,0)
2H POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^2H POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8454,0)
2ND SPECIMEN/1ST SPECIMEN^2ND SPECIMEN/1ST SPECIMEN^^^^^C
"DATA",64.061,8455,0)
3.3H POST DOSE GLUCOSE^3.3H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8456,0)
3.3H POST XXX CHALLENGE^3.3H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8457,0)
3.6H POST DOSE GLUCOSE^3.6H POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8458,0)
3.6H POST XXX CHALLENGE^3.6H POST XXX CHALLENGE^^^^^C
"DATA",64.061,8459,0)
300 UG/ML^300 UG/ML^^^^^C
"DATA",64.061,8460,0)
30M POST 1.2 G/KG LACTOSE PO^30M POST 1.2 G/KG LACTOSE PO^^^^^C
"DATA",64.061,8461,0)
30M POST 250 UG CORTICOTROPIN^30M POST 250 UG CORTICOTROPIN^^^^^C
"DATA",64.061,8462,0)
30M POST DOSE LACTOSE PO^30M POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8463,0)
30M POST DOSE TRH^30M POST DOSE TRH^^^^^C
"DATA",64.061,8464,0)
30M POST INCUBATION^30M POST INCUBATION^^^^^C
"DATA",64.061,8465,0)
30M POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^30M POST INCUBATION AFTER ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8466,0)
3D POST 0.1 ML MUMPS ID^3D POST 0.1 ML MUMPS ID^^^^^C
"DATA",64.061,8467,0)
3D POST 50 UG CANDIDA ALBICANS ID^3D POST 50 UG CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,8468,0)
3D POST 50 UG TRICHOPHYTON ID^3D POST 50 UG TRICHOPHYTON ID^^^^^C
"DATA",64.061,8469,0)
3D POST 500 UG CORTICOTROPIN IM^3D POST 500 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8470,0)
3H POST 1.2 G/KG LACTOSE PO^3H POST 1.2 G/KG LACTOSE PO^^^^^C
"DATA",64.061,8471,0)
3H POST DOSE LACTOSE PO^3H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8472,0)
40M POST DOSE GLUCOSE^40M POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8473,0)
45M POST 250 UG CORTICOTROPIN IM^45M POST 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8474,0)
45M POST DOSE GONADOTROPIN RELEASING HORMONE^45M POST DOSE GONADOTROPIN RELEASING HORMONE^^^^^C
"DATA",64.061,8475,0)
45M POST LACTOSE PO^45M POST LACTOSE PO^^^^^C
"DATA",64.061,8476,0)
600 UG/ML^600 UG/ML^^^^^C
"DATA",64.061,8477,0)
6H POST DOSE METHIONINE^6H POST DOSE METHIONINE^^^^^C
"DATA",64.061,8478,0)
6H POST DOSE METHIONINE-HOMOCYSTINE^6H POST DOSE METHIONINE-HOMOCYSTINE^^^^^C
"DATA",64.061,8479,0)
900 UG/ML^900 UG/ML^^^^^C
"DATA",64.061,8480,0)
90M POST 250 UG CORTICOTROPIN IM^90M POST 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8481,0)
AT 1.0 S POST FORCED EXPIR/VOL.FORCED EXPIRATION.TOT^AT 1.0 S POST FORCED EXPIR/VOL.FORCED EXPIRATION.TOT^^^^^C
"DATA",64.061,8482,0)
BELOW COSTAL MARGIN^BELOW COSTAL MARGIN^^^^^C
"DATA",64.061,8483,0)
BENDING^BENDING^^^^^C
"DATA",64.061,8484,0)
FINE NEEDLE^FINE NEEDLE^^^^^C
"DATA",64.061,8485,0)
FLEXION & EXTENSION^FLEXION & EXTENSION^^^^^C
"DATA",64.061,8486,0)
FORCED DORSIFLEXION^FORCED DORSIFLEXION^^^^^C
"DATA",64.061,8487,0)
FRESH^FRESH^^^^^C
"DATA",64.061,8488,0)
HIGH DOSE^HIGH DOSE^^^^^C
"DATA",64.061,8489,0)
IMMEDIATELY AFTER 1-2 ADDITION OF NORMAL PLASMA^IMMEDIATELY AFTER 1-2 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8490,0)
IMMEDIATELY AFTER 1-4 ADDITION OF NORMAL PLASMA^IMMEDIATELY AFTER 1-4 ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8491,0)
IMMEDIATELY AFTER ADDITION OF PROTAMINE SULFATE^IMMEDIATELY AFTER ADDITION OF PROTAMINE SULFATE^^^^^C
"DATA",64.061,8492,0)
INCUBATED^INCUBATED^^^^^C
"DATA",64.061,8493,0)
INSPIRATION & EXPIRATION VIEW^INSPIRATION & EXPIRATION VIEW^^^^^C
"DATA",64.061,8494,0)
LAST 20% OF BREATH^LAST 20% OF BREATH^^^^^C
"DATA",64.061,8495,0)
LOW DOSE^LOW DOSE^^^^^C
"DATA",64.061,8496,0)
MANIPULATION.INFANT VIEW^MANIPULATION.INFANT VIEW^^^^^C
"DATA",64.061,8497,0)
MAX ABDUCTION^MAX ABDUCTION^^^^^C
"DATA",64.061,8498,0)
PEAK POST EXTENDED INTERVAL DOSING^PEAK POST EXTENDED INTERVAL DOSING^^^^^C
"DATA",64.061,8499,0)
POST 15000 U CAROTENE QDX3 FOR 3D POLY^POST 15000 U CAROTENE QDX3 FOR 3D POLY^^^^^C
"DATA",64.061,8500,0)
POST DOSE CYANOCOBALAMIN+INTRINSIC FACTOR^POST DOSE CYANOCOBALAMIN+INTRINSIC FACTOR^^^^^C
"DATA",64.061,8501,0)
POST DOSE CYANOCOBALAMIN+INTRINSIC FACTOR/COBALAMINS^POST DOSE CYANOCOBALAMIN+INTRINSIC FACTOR/COBALAMINS^^^^^C
"DATA",64.061,8502,0)
POST DOSE UREA^POST DOSE UREA^^^^^C
"DATA",64.061,8503,0)
PRE 0.2 U/KG SECRETIN^PRE 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8504,0)
PRE 0.5 G/KG GLUCOSE IV^PRE 0.5 G/KG GLUCOSE IV^^^^^C
"DATA",64.061,8505,0)
PRE 0.5 UG/KG PENTAGASTRIN IV^PRE 0.5 UG/KG PENTAGASTRIN IV^^^^^C
"DATA",64.061,8506,0)
PRE 1 G/KG GLUCOSE PO^PRE 1 G/KG GLUCOSE PO^^^^^C
"DATA",64.061,8507,0)
PRE 1 MG DEXAMETHASONE^PRE 1 MG DEXAMETHASONE^^^^^C
"DATA",64.061,8508,0)
PRE 1 MG DEXAMETHASONE PO OVERNIGHT^PRE 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^C
"DATA",64.061,8509,0)
PRE 1 UG/KG CRH IV^PRE 1 UG/KG CRH IV^^^^^C
"DATA",64.061,8510,0)
PRE 100 G GLUCOSE PO^PRE 100 G GLUCOSE PO^^^^^C
"DATA",64.061,8511,0)
PRE 12H CFST^PRE 12H CFST^^^^^C
"DATA",64.061,8512,0)
PRE 2.4 MG/KG CALCIUM SHORT IV^PRE 2.4 MG/KG CALCIUM SHORT IV^^^^^C
"DATA",64.061,8513,0)
PRE 250 MG PYRIDOXINE PO^PRE 250 MG PYRIDOXINE PO^^^^^C
"DATA",64.061,8514,0)
PRE 250 UG CORTICOTROPIN IM^PRE 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8515,0)
PRE 250 UG CORTROSYN IM^PRE 250 UG CORTROSYN IM^^^^^C
"DATA",64.061,8516,0)
PRE 250 UG L-DOPA TID 2DAY PO^PRE 250 UG L-DOPA TID 2DAY PO^^^^^C
"DATA",64.061,8517,0)
PRE 3 G METYRAPONE PO OVERNIGHT^PRE 3 G METYRAPONE PO OVERNIGHT^^^^^C
"DATA",64.061,8518,0)
PRE 300 UG CLONIDINE PO^PRE 300 UG CLONIDINE PO^^^^^C
"DATA",64.061,8519,0)
PRE 40 UG CORTICOTROPIN IM 3 DAY^PRE 40 UG CORTICOTROPIN IM 3 DAY^^^^^C
"DATA",64.061,8520,0)
PRE 50 G GLUCOSE PO^PRE 50 G GLUCOSE PO^^^^^C
"DATA",64.061,8521,0)
PRE 50 G LACTOSE PO^PRE 50 G LACTOSE PO^^^^^C
"DATA",64.061,8522,0)
PRE 50 UG CORTICOTROPIN IM 3 DAY^PRE 50 UG CORTICOTROPIN IM 3 DAY^^^^^C
"DATA",64.061,8523,0)
PRE 500 MG CALCIUM PO^PRE 500 MG CALCIUM PO^^^^^C
"DATA",64.061,8524,0)
PRE 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^PRE 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^C
"DATA",64.061,8525,0)
PRE 5000 U POST HCG IM^PRE 5000 U POST HCG IM^^^^^C
"DATA",64.061,8526,0)
PRE 5000 UNITS^PRE 5000 UNITS^^^^^C
"DATA",64.061,8527,0)
PRE 600 UG FUROSEMIDE PO^PRE 600 UG FUROSEMIDE PO^^^^^C
"DATA",64.061,8528,0)
PRE 75 G GLUCOSE PO^PRE 75 G GLUCOSE PO^^^^^C
"DATA",64.061,8529,0)
PRE 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^PRE 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^^^^^C
"DATA",64.061,8530,0)
PRE DOSE DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^PRE DOSE DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8531,0)
PRE DOSE GONADOTROPIN RELEASING HORMONE^PRE DOSE GONADOTROPIN RELEASING HORMONE^^^^^C
"DATA",64.061,8532,0)
PRE DOSE INSULIN IV^PRE DOSE INSULIN IV^^^^^C
"DATA",64.061,8533,0)
PRE DOSE L-DOPA PO^PRE DOSE L-DOPA PO^^^^^C
"DATA",64.061,8534,0)
PRE DOSE LACTOSE PO^PRE DOSE LACTOSE PO^^^^^C
"DATA",64.061,8535,0)
PRE DOSE RADIOACTIVE CYANOCOBALAMIN^PRE DOSE RADIOACTIVE CYANOCOBALAMIN^^^^^C
"DATA",64.061,8536,0)
PRE DOSE TOLBUTAMIDE IV^PRE DOSE TOLBUTAMIDE IV^^^^^C
"DATA",64.061,8537,0)
PRE DOSE TRH^PRE DOSE TRH^^^^^C
"DATA",64.061,8538,0)
PRE DOSE TRH IN^PRE DOSE TRH IN^^^^^C
"DATA",64.061,8539,0)
PRE DOSE TRH IV^PRE DOSE TRH IV^^^^^C
"DATA",64.061,8540,0)
PRE GLUCOSE PO^PRE GLUCOSE PO^^^^^C
"DATA",64.061,8541,0)
PRE LACTOSE PO^PRE LACTOSE PO^^^^^C
"DATA",64.061,8542,0)
PRE XXX CHALLENGE^PRE XXX CHALLENGE^^^^^C
"DATA",64.061,8543,0)
PRE/POST DOSE ARGININE^PRE/POST DOSE ARGININE^^^^^C
"DATA",64.061,8544,0)
PRE/POST DOSE CLONIDINE^PRE/POST DOSE CLONIDINE^^^^^C
"DATA",64.061,8545,0)
PRE/POST DOSE CORTICOTROPIN^PRE/POST DOSE CORTICOTROPIN^^^^^C
"DATA",64.061,8546,0)
PRE/POST DOSE GLUCAGON^PRE/POST DOSE GLUCAGON^^^^^C
"DATA",64.061,8547,0)
PRE/POST DOSE GLUCOSE^PRE/POST DOSE GLUCOSE^^^^^C
"DATA",64.061,8548,0)
PRE/POST DOSE INSULIN^PRE/POST DOSE INSULIN^^^^^C
"DATA",64.061,8549,0)
PRE/POST DOSE TRH^PRE/POST DOSE TRH^^^^^C
"DATA",64.061,8550,0)
PRE/POST XXX CHALLENGE^PRE/POST XXX CHALLENGE^^^^^C
"DATA",64.061,8551,0)
RADIONUCLIDE INHALED & RADIONUCLIDE IV^RADIONUCLIDE INHALED & RADIONUCLIDE IV^^^^^C
"DATA",64.061,8552,0)
RADIONUCLIDE IV^RADIONUCLIDE IV^^^^^C
"DATA",64.061,8553,0)
RADIONUCLIDE.IV^RADIONUCLIDE.IV^^^^^C
"DATA",64.061,8554,0)
RANDOM POST EXTENDED INTERVAL DOSING^RANDOM POST EXTENDED INTERVAL DOSING^^^^^C
"DATA",64.061,8555,0)
RETROGRADE^RETROGRADE^^^^^C
"DATA",64.061,8556,0)
RETROGRADE VIA URETHRA^RETROGRADE VIA URETHRA^^^^^C
"DATA",64.061,8557,0)
TRANSCERVICAL^TRANSCERVICAL^^^^^C
"DATA",64.061,8558,0)
TROUGH POST EXTENDED INTERVAL DOSING^TROUGH POST EXTENDED INTERVAL DOSING^^^^^C
"DATA",64.061,8559,0)
TUNNELED^TUNNELED^^^^^C
"DATA",64.061,8560,0)
W BARIUM CONTRAST PO^W BARIUM CONTRAST PO^^^^^C
"DATA",64.061,8561,0)
W CONTRAST VIA DUCT^W CONTRAST VIA DUCT^^^^^C
"DATA",64.061,8562,0)
W CONTRAST.XXX PERCUTANEOUS^W CONTRAST.XXX PERCUTANEOUS^^^^^C
"DATA",64.061,8563,0)
W CONTRAST.XXX RETROGRADE^W CONTRAST.XXX RETROGRADE^^^^^C
"DATA",64.061,8564,0)
W CONTRAST.XXX TRANSHEPATIC^W CONTRAST.XXX TRANSHEPATIC^^^^^C
"DATA",64.061,8565,0)
W CONTRAST.XXX VIA LACRIMAL DUCT^W CONTRAST.XXX VIA LACRIMAL DUCT^^^^^C
"DATA",64.061,8566,0)
W CONTRAST.XXX VIA T-TUBE^W CONTRAST.XXX VIA T-TUBE^^^^^C
"DATA",64.061,8567,0)
WO MANIPULATION.INFANT VIEW^WO MANIPULATION.INFANT VIEW^^^^^C
"DATA",64.061,8568,0)
XXX CHALLENGE^XXX CHALLENGE^^^^^C
"DATA",64.061,8569,0)
POST CFST^POST CFST^^^^^A
"DATA",64.061,8570,0)
POST CYANOCOBALAMIN^POST CYANOCOBALAMIN^^^^^A
"DATA",64.061,8571,0)
W HEMODYNAMICS^W HEMODYNAMICS^^^^^A
"DATA",64.061,8572,0)
POST DOSE CYANOCOBALAMIN^POST DOSE CYANOCOBALAMIN^^^^^C
"DATA",64.061,8573,0)
ENCOUNTER FIRST SPECIMEN^ENCTR~FRST^^^^^S^First encounter specimen
"DATA",64.061,8574,0)
ANAL^ANAL^^^^^S^^10
"DATA",64.061,8575,0)
0.10% SODIUM CHLORIDE^0.10% SODIUM CHLORIDE^^^^^C
"DATA",64.061,8576,0)
0.10% SODIUM CHLORIDE 24H INCUBATION @37C^0.10% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8577,0)
0.20% SODIUM CHLORIDE^0.20% SODIUM CHLORIDE^^^^^C
"DATA",64.061,8578,0)
0.20% SODIUM CHLORIDE 24H INCUBATION @37C^0.20% SODIUM CHLORIDE 24H INCUBATION @37C^^^^^C
"DATA",64.061,8579,0)
10M POST EXCISION^10M POST EXCISION^^^^^C
"DATA",64.061,8580,0)
1ST SPECIMEN POST DOSE SINCALIDE^1ST SPECIMEN POST DOSE SINCALIDE^^^^^C
"DATA",64.061,8581,0)
2ND SPECIMEN POST DOSE SINCALIDE^2ND SPECIMEN POST DOSE SINCALIDE^^^^^C
"DATA",64.061,8582,0)
3RD SPECIMEN POST DOSE SINCALIDE^3RD SPECIMEN POST DOSE SINCALIDE^^^^^C
"DATA",64.061,8583,0)
4TH SPECIMEN POST DOSE SINCALIDE^4TH SPECIMEN POST DOSE SINCALIDE^^^^^C
"DATA",64.061,8584,0)
5M POST EXCISION^5M POST EXCISION^^^^^C
"DATA",64.061,8585,0)
5TH SPECIMEN POST DOSE SINCALIDE^5TH SPECIMEN POST DOSE SINCALIDE^^^^^C
"DATA",64.061,8586,0)
6H POST XXX BENTIROMIDE PO^6H POST XXX BENTIROMIDE PO^^^^^C
"DATA",64.061,8587,0)
IMMEDIATELY AFTER ADDITION OF FACTOR II DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR II DEPLETED PLASMA^^^^^C
"DATA",64.061,8588,0)
IMMEDIATELY AFTER ADDITION OF FACTOR IX DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR IX DEPLETED PLASMA^^^^^C
"DATA",64.061,8589,0)
IMMEDIATELY AFTER ADDITION OF FACTOR V DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR V DEPLETED PLASMA^^^^^C
"DATA",64.061,8590,0)
IMMEDIATELY AFTER ADDITION OF FACTOR X DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR X DEPLETED PLASMA^^^^^C
"DATA",64.061,8591,0)
IMMEDIATELY AFTER ADDITION OF FACTOR XI DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR XI DEPLETED PLASMA^^^^^C
"DATA",64.061,8592,0)
IMMEDIATELY AFTER ADDITION OF FACTOR XII DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR XII DEPLETED PLASMA^^^^^C
"DATA",64.061,8593,0)
IMMEDIATELY AFTER ADDITION OF FACTOR XIII DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR XIII DEPLETED PLASMA^^^^^C
"DATA",64.061,8594,0)
POST REANASTOMOSIS^POST REANASTOMOSIS^^^^^C
"DATA",64.061,8595,0)
PRE ARTERIAL PUNCTURE^PRE ARTERIAL PUNCTURE^^^^^C
"DATA",64.061,8596,0)
LACNC^LACNC^^^^^PR^^7
"DATA",64.061,8597,0)
MSCNC^MSCNC^^^^^PR^^7
"DATA",64.061,8598,0)
MSRAT^MSRAT^^^^^PR^^7
"DATA",64.061,8599,0)
QUINTILE^QUINTILE^^^^^PR^^7
"DATA",64.061,8600,0)
INTRATHECAL SPACE^INTRATHECAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,8601,0)
NOSE^NOSE^^^^^S^from LOINC system list
"DATA",64.061,8602,0)
PPP~POOL^PPP~POOL^^^^^S^from LOINC system list
"DATA",64.061,8603,0)
PRP~DONOR^PRP~DONOR^^^^^S^from LOINC system list
"DATA",64.061,8604,0)
REC^REC^^^^^S^from LOINC system list
"DATA",64.061,8605,0)
SPINE.LUMBOSACRAL+CERVICAL+THORACIC^SPINE.LUMBOSACRAL+CERVICAL+THORACIC^^^^^S^from LOINC system list
"DATA",64.061,8606,0)
WRIST ARTERY^WRIST ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8607,0)
~CLINICAL TRIAL PROTOCOL^~CLINICAL TRIAL PROTOCOL^^^^^S^from LOINC system list
"DATA",64.061,8608,0)
DOC.REF.CTP^DOC.REF.CTP^^^^^CL^LOINC Class^20
"DATA",64.061,8609,0)
PANEL.ALLERGY^PANEL.ALLERGY^^^^^CL^LOINC Class^20
"DATA",64.061,8610,0)
PANEL.BDYTMP^PANEL.BDYTMP^^^^^CL^LOINC Class^20
"DATA",64.061,8611,0)
PANEL.FUNCTION^PANEL.FUNCTION^^^^^CL^LOINC Class^20
"DATA",64.061,8612,0)
PANEL.H&P^PANEL.H&P^^^^^CL^LOINC Class^20
"DATA",64.061,8613,0)
PANEL.OB.US^PANEL.OB.US^^^^^CL^LOINC Class^20
"DATA",64.061,8614,0)
PANEL.US.URO^PANEL.US.URO^^^^^CL^LOINC Class^20
"DATA",64.061,8615,0)
PROCEDURE DUR^^^^^^S^^^5^T
"DATA",64.061,8616,0)
SURGICAL PROCEDURE^SURGICAL PROCEDURE^^^^^S^from LOINC system list
"DATA",64.061,8617,0)
~BPU^~BPU^^^^^S^from LOINC system list
"DATA",64.061,8618,0)
AM FLD SPACE~FETUS^AM FLD SPACE~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8619,0)
AM FLD SPACE.QUADRANT FOUR~FETUS^AM FLD SPACE.QUADRANT FOUR~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8620,0)
AM FLD SPACE.QUADRANT ONE~FETUS^AM FLD SPACE.QUADRANT ONE~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8621,0)
AM FLD SPACE.QUADRANT THREE~FETUS^AM FLD SPACE.QUADRANT THREE~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8622,0)
AM FLD SPACE.QUADRANT TWO~FETUS^AM FLD SPACE.QUADRANT TWO~FETUS^^^^^S^from LOINC system list
"DATA",64.061,8623,0)
15M POST DOSE LACTOSE PO^15M POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8624,0)
6TH SPECIMEN POST DOSE LACTOSE^6TH SPECIMEN POST DOSE LACTOSE^^^^^C
"DATA",64.061,8625,0)
3.5H POST DOSE LACTOSE PO^3.5H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8626,0)
48H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^48H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8627,0)
8H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^8H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^C
"DATA",64.061,8628,0)
DEL^DEL^^^^^S^from LOINC system list
"DATA",64.061,8629,0)
13332-2^13332-2^^^^^PR^from LOINC Kind of property list^12
"DATA",64.061,8630,0)
1.5H POST DOSE TRH IV^1.5H POST DOSE TRH IV^^^^^C
"DATA",64.061,8631,0)
PRE 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^PRE 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8632,0)
24H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^24H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8633,0)
24H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^24H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^C
"DATA",64.061,8634,0)
26H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^26H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8635,0)
50H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^50H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8636,0)
72H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^72H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8637,0)
72H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^72H POST 500 UG DEXAMETHASONE PO 2.5 DAY LOW DOSE Q6H^^^^^C
"DATA",64.061,8638,0)
8H POST 1 MG DEXAMETHASONE PO OVERNIGHT^8H POST 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^C
"DATA",64.061,8639,0)
8H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^8H POST 2 MG DEXAMETHASONE PO 2.5 DAY HIGH DOSE Q6H^^^^^C
"DATA",64.061,8640,0)
1.5H POST 40 G GALACTOSE PO^1.5H POST 40 G GALACTOSE PO^^^^^C
"DATA",64.061,8641,0)
BLD.BUFFY COAT^BLD.BUFFY COAT^^^^^S^from LOINC system list
"DATA",64.061,8642,0)
EGGYLK^EGGYLK^^^^^S^from LOINC system list
"DATA",64.061,8643,0)
NOSE/TRAC^NOSE/TRAC^^^^^S^from LOINC system list
"DATA",64.061,8644,0)
1.5H POST DOSE TOLBUTAMIDE IV^1.5H POST DOSE TOLBUTAMIDE IV^^^^^C
"DATA",64.061,8645,0)
PRE 5000 U HCG IM^PRE 5000 U HCG IM^^^^^C
"DATA",64.061,8646,0)
PRE DOSE GLUCOSE^PRE DOSE GLUCOSE^^^^^C
"DATA",64.061,8647,0)
DOSAGE^DOSAGE^^^^^PR^^7
"DATA",64.061,8648,0)
HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATM^HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATM^^^^^S^from LOINC system list
"DATA",64.061,8649,0)
HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATM^HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATM^^^^^S^from LOINC system list
"DATA",64.061,8650,0)
THORACIC GAS^THORACIC GAS^^^^^S^from LOINC system list
"DATA",64.061,8653,0)
AT 1.0 S POST FORCED EXPIRATION/VOLUME.FORCED EXPIRATION.TOTAL^AT 1.0 S POST FORCED EXPIRATION/VOLUME.FORCED EXPIRATION.TOT^^^^^C
"DATA",64.061,8654,0)
MLK.RAW^MLK.RAW^^^^^S^from LOINC system list
"DATA",64.061,8655,0)
TISS FAT^TISS FAT^^^^^S^from LOINC system list
"DATA",64.061,8656,0)
1D POST 0.1 ML MALLEIN ID^1D POST 0.1 ML MALLEIN ID^^^^^C
"DATA",64.061,8657,0)
W CONTRAST IA^W CONTRAST IA^^^^^C
"DATA",64.061,8658,0)
W CONTRAST IT^W CONTRAST IT^^^^^C
"DATA",64.061,8659,0)
MARIC^MARIC^^^^^PR^^7
"DATA",64.061,8660,0)
10H POST 1 MG DEXAMETHASONE PO OVERNIGHT^10H POST 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^C
"DATA",64.061,8661,0)
17H POST 1 MG DEXAMETHASONE PO OVERNIGHT^17H POST 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^C
"DATA",64.061,8662,0)
24H POST 1 MG DEXAMETHASONE PO OVERNIGHT^24H POST 1 MG DEXAMETHASONE PO OVERNIGHT^^^^^C
"DATA",64.061,8663,0)
W CONTRAST^W CONTRAST^^^^^C
"DATA",64.061,8664,0)
W CONTRAST INTRA BILIARY TRACT^W CONTRAST INTRA BILIARY TRACT^^^^^C
"DATA",64.061,8665,0)
99M TC IV & POST SINCALIDE IV^99M TC IV & POST SINCALIDE IV^^^^^C
"DATA",64.061,8666,0)
DURING SURGERY W CONTRAST BILIARY DUCT^DURING SURGERY W CONTRAST BILIARY DUCT^^^^^C
"DATA",64.061,8667,0)
W CONTRAST VIA TRANSHEPAR, LIVER BILIARY DUCT^W CONTRAST VIA TRANSHEPAR, LIVER BILIARY DUCT^^^^^C
"DATA",64.061,8668,0)
W & WO CONTRAST IV & W ANESTHESIA^W & WO CONTRAST IV & W ANESTHESIA^^^^^C
"DATA",64.061,8669,0)
99M TC HMPAO IV^99M TC HMPAO IV^^^^^C
"DATA",64.061,8670,0)
99M TC DISIDA OR MIBIDA^99M TC DISIDA OR MIBIDA^^^^^C
"DATA",64.061,8671,0)
BREAST SPECIMEN^BREAST SPECIMEN^^^^^S^from LOINC system list
"DATA",64.061,8672,0)
W CONTRAST VIA CATHETER^W CONTRAST VIA CATHETER^^^^^C
"DATA",64.061,8673,0)
W CONTRAST INTO PLEURAL SPACE^W CONTRAST INTO PLEURAL SPACE^^^^^C
"DATA",64.061,8674,0)
W RADIONUCLIDE IT^W RADIONUCLIDE IT^^^^^C
"DATA",64.061,8675,0)
W CONTRAST PR^W CONTRAST PR^^^^^C
"DATA",64.061,8676,0)
POST SOLID CONTRAST PO^POST SOLID CONTRAST PO^^^^^C
"DATA",64.061,8677,0)
W CONTRAST PO & HYPOTONIC AGENT PER NG^W CONTRAST PO & HYPOTONIC AGENT PER NG^^^^^C
"DATA",64.061,8678,0)
W GASTROGRAFIN CONTRAST PO^W GASTROGRAFIN CONTRAST PO^^^^^C
"DATA",64.061,8679,0)
W CONTRAST PO DURING SWALLOWING^W CONTRAST PO DURING SWALLOWING^^^^^C
"DATA",64.061,8680,0)
99M TC SC PO^99M TC SC PO^^^^^C
"DATA",64.061,8681,0)
LOWER EXTREMITY^LOWER EXTREMITY^^^^^S^from LOINC system list
"DATA",64.061,8682,0)
LOWER EXTREMITY.JOINT^LOWER EXTREMITY.JOINT^^^^^S^from LOINC system list
"DATA",64.061,8683,0)
UPPER EXTREMITY^UPPER EXTREMITY^^^^^S^from LOINC system list
"DATA",64.061,8684,0)
48H POST CONTRAST PO^48H POST CONTRAST PO^^^^^C
"DATA",64.061,8685,0)
W 99M TC RBC TAGGED IV^W 99M TC RBC TAGGED IV^^^^^C
"DATA",64.061,8686,0)
(201 TH SUBTRACTION 99M TC) IV^(201 TH SUBTRACTION 99M TC) IV^^^^^C
"DATA",64.061,8687,0)
W CONTRAST INTRA ARTICULAR^W CONTRAST INTRA ARTICULAR^^^^^C
"DATA",64.061,8688,0)
XXX JOINT^XXX JOINT^^^^^S^from LOINC system list
"DATA",64.061,8689,0)
RADIONUCLIDE TRANSPLANT SCAN^RADIONUCLIDE TRANSPLANT SCAN^^^^^C
"DATA",64.061,8690,0)
W CONTRAST VIA TUBE^W CONTRAST VIA TUBE^^^^^C
"DATA",64.061,8691,0)
W CONTRAST VIA NEPHROSTOMY TUBE^W CONTRAST VIA NEPHROSTOMY TUBE^^^^^C
"DATA",64.061,8692,0)
W CONTRAST VIA STENT^W CONTRAST VIA STENT^^^^^C
"DATA",64.061,8693,0)
10M POST W & WO CONTRAST IV^10M POST W & WO CONTRAST IV^^^^^C
"DATA",64.061,8694,0)
99M TC CALCIUM COLLOID IV^99M TC CALCIUM COLLOID IV^^^^^C
"DATA",64.061,8695,0)
W CONTRAST INTRABRONCHIAL^W CONTRAST INTRABRONCHIAL^^^^^C
"DATA",64.061,8696,0)
RADIONUCLIDE INTRA LYMPHATIC^RADIONUCLIDE INTRA LYMPHATIC^^^^^C
"DATA",64.061,8697,0)
W CONTRAST INTRA LYMPHATIC^W CONTRAST INTRA LYMPHATIC^^^^^C
"DATA",64.061,8698,0)
99M TC M04 IV^99M TC M04 IV^^^^^C
"DATA",64.061,8699,0)
W CONTRAST INTRALARYNX^W CONTRAST INTRALARYNX^^^^^C
"DATA",64.061,8700,0)
99M TC DTPA INJ FOR SHUNT PATENCY^99M TC DTPA INJ FOR SHUNT PATENCY^^^^^C
"DATA",64.061,8701,0)
W CONTRAST IN PULMONARY ARTERY^W CONTRAST IN PULMONARY ARTERY^^^^^C
"DATA",64.061,8702,0)
133 XENON INHALED & 99M TC MAA IV^133 XENON INHALED & 99M TC MAA IV^^^^^C
"DATA",64.061,8703,0)
POST CONTRAST PR DURING DEFECATION^POST CONTRAST PR DURING DEFECATION^^^^^C
"DATA",64.061,8704,0)
W CONTRAST PR & VIA BLADDER DURING DEFECATION & VOIDING^W CONTRAST PR & VIA BLADDER DURING DEFECATION & VOIDING^^^^^C
"DATA",64.061,8705,0)
W CONTRAST INTRA SALIVARY DUCT^W CONTRAST INTRA SALIVARY DUCT^^^^^C
"DATA",64.061,8706,0)
W CONTRAST VIA SINUS TRACT^W CONTRAST VIA SINUS TRACT^^^^^C
"DATA",64.061,8707,0)
W CONTRAST PO VIA DUODENAL INTUBATION^W CONTRAST PO VIA DUODENAL INTUBATION^^^^^C
"DATA",64.061,8708,0)
W CONTRAST INTRADISC^W CONTRAST INTRADISC^^^^^C
"DATA",64.061,8709,0)
TEMPOROMANDIBULAR JOINT^TEMPOROMANDIBULAR JOINT^^^^^S^from LOINC system list
"DATA",64.061,8710,0)
99M TC PERTECHNETATE IV^99M TC PERTECHNETATE IV^^^^^C
"DATA",64.061,8711,0)
W CONTRAST INTRAVASCULAR^W CONTRAST INTRAVASCULAR^^^^^C
"DATA",64.061,8712,0)
W CONTRAST VIA URETHRA^W CONTRAST VIA URETHRA^^^^^C
"DATA",64.061,8713,0)
W CONTRAST VIA BLADDER^W CONTRAST VIA BLADDER^^^^^C
"DATA",64.061,8714,0)
W CONTRAST INTRAUTERINE^W CONTRAST INTRAUTERINE^^^^^C
"DATA",64.061,8715,0)
DURING RADIOSURGERY W CONTRAST IV^DURING RADIOSURGERY W CONTRAST IV^^^^^C
"DATA",64.061,8716,0)
W RENIN IV & W CONTRAST IV^W RENIN IV & W CONTRAST IV^^^^^C
"DATA",64.061,8717,0)
LOWER EXTREMITY.BILATERAL^LOWER EXTREMITY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8718,0)
LOWER EXTREMITY.LEFT^LOWER EXTREMITY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8719,0)
LOWER EXTREMITY.RIGHT^LOWER EXTREMITY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8720,0)
UPPER EXTREMITY.BILATERAL^UPPER EXTREMITY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8721,0)
UPPER EXTREMITY.LEFT^UPPER EXTREMITY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8722,0)
UPPER EXTREMITY.RIGHT^UPPER EXTREMITY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8723,0)
W CONTRAST INTRAARTICULAR^W CONTRAST INTRAARTICULAR^^^^^C
"DATA",64.061,8724,0)
LOWER EXTREMITY.JOINT.BILATERAL^LOWER EXTREMITY.JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8725,0)
LOWER EXTREMITY.JOINT.LEFT^LOWER EXTREMITY.JOINT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8726,0)
LOWER EXTREMITY.JOINT.RIGHT^LOWER EXTREMITY.JOINT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8727,0)
4H POST DOSE LACTOSE PO^4H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8728,0)
5H POST DOSE LACTOSE PO^5H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8729,0)
HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^^^^^S^from LOINC system list
"DATA",64.061,8730,0)
HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^^^^^S^from LOINC system list
"DATA",64.061,8731,0)
HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILIT^^^^^S^from LOINC system list
"DATA",64.061,8732,0)
PRIMARY DX FOR ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATM^PRIMARY DX FOR ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATM^^^^^S^from LOINC system list
"DATA",64.061,8733,0)
WO CONTRAST IV^WO CONTRAST IV^^^^^C
"DATA",64.061,8734,0)
AORTA+FEMORAL ARTERY^AORTA+FEMORAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8735,0)
W CONTRAST VIA T-TUBE^W CONTRAST VIA T-TUBE^^^^^C
"DATA",64.061,8736,0)
W CONTRAST VIA LACRIMAL DUCT^W CONTRAST VIA LACRIMAL DUCT^^^^^C
"DATA",64.061,8737,0)
SPINE.CERVICAL FACET^SPINE.CERVICAL FACET^^^^^S^from LOINC system list
"DATA",64.061,8738,0)
SPINE.THORACIC FACET^SPINE.THORACIC FACET^^^^^S^from LOINC system list
"DATA",64.061,8739,0)
W CONTRAST RETROGRADE^W CONTRAST RETROGRADE^^^^^C
"DATA",64.061,8740,0)
W CONTRAST PERCUTANEOUS^W CONTRAST PERCUTANEOUS^^^^^C
"DATA",64.061,8741,0)
SPINE.LUMBAR FACET^SPINE.LUMBAR FACET^^^^^S^from LOINC system list
"DATA",64.061,8742,0)
AORTA+FEMORAL ARTERY.BILATERAL^AORTA+FEMORAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8743,0)
W CONTRAST TRANSHEPATIC^W CONTRAST TRANSHEPATIC^^^^^C
"DATA",64.061,8744,0)
AORTA+ABDOMINAL ARTERIES^AORTA+ABDOMINAL ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,8745,0)
UPPER EXTREMITY.JOINT^UPPER EXTREMITY.JOINT^^^^^S^from LOINC system list
"DATA",64.061,8746,0)
KIDNEYS+COLLECTING SYSTEM+RENAL VESSELS^KIDNEYS+COLLECTING SYSTEM+RENAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8747,0)
TEMPOROMANDIBULAR JOINT.LEFT^TEMPOROMANDIBULAR JOINT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8748,0)
TEMPOROMANDIBULAR JOINT.RIGHT^TEMPOROMANDIBULAR JOINT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8749,0)
CORNEA^CORNEA^^^^^S^from LOINC system list
"DATA",64.061,8750,0)
CSF.SPUN^CSF.SPUN^^^^^S^from LOINC system list
"DATA",64.061,8751,0)
45M POST DOSE LACTOSE PO^45M POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,8752,0)
~BPU.PLATELET PHERESIS^~BPU.PLATELET PHERESIS^^^^^S^from LOINC system list
"DATA",64.061,8753,0)
20M POST INCUBATION.37@C AFTER ADDITION OF NORMAL PLASMA^20M POST INCUBATION.37@C AFTER ADDITION OF NORMAL PLASMA^^^^^C
"DATA",64.061,8754,0)
W EXPIRATION^W EXPIRATION^^^^^C
"DATA",64.061,8755,0)
1.5H POST 250 UG CORTICOTROPIN IM^1.5H POST 250 UG CORTICOTROPIN IM^^^^^C
"DATA",64.061,8757,0)
ENDOMETRIUM^ENDOMETRIUM^^^^^S^from LOINC system list
"DATA",64.061,8758,0)
CAUSE OF DEATH^CAUSE OF DEATH^^^^^S^from LOINC system list
"DATA",64.061,8759,0)
USUAL OCCUPATION HX^USUAL OCCUPATION HX^^^^^S^from LOINC system list
"DATA",64.061,8760,0)
USUAL INDUSTRY HX^USUAL INDUSTRY HX^^^^^S^from LOINC system list
"DATA",64.061,8761,0)
OCCUPATION & INDUSTRY HX^OCCUPATION & INDUSTRY HX^^^^^S^from LOINC system list
"DATA",64.061,8762,0)
SPINAL CORD.CERVICAL^SPINAL CORD.CERVICAL^^^^^S^from LOINC system list
"DATA",64.061,8763,0)
AV FISTULA^AV FISTULA^^^^^S^from LOINC system list
"DATA",64.061,8764,0)
CHEST VESSEL^CHEST VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8765,0)
NASOPHARYNX^NASOPHARYNX^^^^^S^from LOINC system list
"DATA",64.061,8766,0)
COCCYX^COCCYX^^^^^S^from LOINC system list
"DATA",64.061,8767,0)
FORM^FORM^^^^^S^from LOINC system list
"DATA",64.061,8768,0)
99M TC IV^99M TC IV^^^^^C
"DATA",64.061,8769,0)
0.75% SODIUM CHLORIDE^0.75% SODIUM CHLORIDE^^^^^C
"DATA",64.061,8770,0)
1H POST DOSE TRH^1H POST DOSE TRH^^^^^C
"DATA",64.061,8771,0)
1.5H POST DOSE TRH^1.5H POST DOSE TRH^^^^^C
"DATA",64.061,8772,0)
W AIR^W AIR^^^^^C
"DATA",64.061,8773,0)
W INSPIRATION^W INSPIRATION^^^^^C
"DATA",64.061,8774,0)
10M POST 0.2 U/KG SECRETIN^10M POST 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8775,0)
15M POST 0.2 U/KG SECRETIN^15M POST 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8776,0)
20M POST 0.2 U/KG SECRETIN^20M POST 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8777,0)
25M POST 0.2 U/KG SECRETIN^25M POST 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8778,0)
30M POST 0.2 U/KG SECRETIN^30M POST 0.2 U/KG SECRETIN^^^^^C
"DATA",64.061,8780,0)
EPISODE^^^^^^S^^^5^T
"DATA",64.061,8781,0)
HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATMENT^HOSPITALIZATION LEADING TO PSYCHIATRIC REHABILITATION TREATMENT^^^^^S^from LOINC system list
"DATA",64.061,8782,0)
AORTIC ARCH+CAROTID ARTERY.COMMON.RIGHT^AORTIC ARCH+CAROTID ARTERY.COMMON.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8783,0)
AORTIC ARCH+CAROTID ARTERY.EXTERNAL.BILATERAL^AORTIC ARCH+CAROTID ARTERY.EXTERNAL.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8784,0)
AORTIC ARCH+CAROTID ARTERY.EXTERNAL.LEFT^AORTIC ARCH+CAROTID ARTERY.EXTERNAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8785,0)
AORTIC ARCH+CAROTID ARTERY.EXTERNAL.RIGHT^AORTIC ARCH+CAROTID ARTERY.EXTERNAL.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8786,0)
AORTIC ARCH+CAROTID ARTERY+VERTEBRAL ARTERY^AORTIC ARCH+CAROTID ARTERY+VERTEBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8787,0)
CORONARY GRAFT^CORONARY GRAFT^^^^^S^from LOINC system list
"DATA",64.061,8788,0)
LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.LEFT^LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8789,0)
LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC^LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC^^^^^S^from LOINC system list
"DATA",64.061,8790,0)
LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.BILATERAL^LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8791,0)
LYMPHATICS.EXTREMITY.LEFT^LYMPHATICS.EXTREMITY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8792,0)
LYMPHATICS.LEFT^LYMPHATICS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8793,0)
LYMPHATICS.PELVIC.BILATERAL^LYMPHATICS.PELVIC.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8794,0)
SCROTUM+TESTICLE^SCROTUM+TESTICLE^^^^^S^from LOINC system list
"DATA",64.061,8795,0)
LOWER EXTREMITY VEINS^LOWER EXTREMITY VEINS^^^^^S^from LOINC system list
"DATA",64.061,8796,0)
UPPER EXTREMITY VEINS^UPPER EXTREMITY VEINS^^^^^S^from LOINC system list
"DATA",64.061,8797,0)
W CONTRAST DYNAMIC^W CONTRAST DYNAMIC^^^^^C
"DATA",64.061,8798,0)
W FLEXION & W EXTENSION^W FLEXION & W EXTENSION^^^^^C
"DATA",64.061,8799,0)
STERNOCLAVICULAR JOINT^STERNOCLAVICULAR JOINT^^^^^S^from LOINC system list
"DATA",64.061,8800,0)
SUBCLAVIAN ARTERY^SUBCLAVIAN ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8801,0)
XXX.CYST^XXX.CYST^^^^^S^from LOINC system list
"DATA",64.061,8802,0)
LOWER EXTREMITY VESSELS.BILATERAL^LOWER EXTREMITY VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8803,0)
THORACIC OUTLET^THORACIC OUTLET^^^^^S^from LOINC system list
"DATA",64.061,8804,0)
UPPER EXTREMITY VESSELS^UPPER EXTREMITY VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8805,0)
NECK VESSELS^NECK VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8806,0)
THORACIC OUTLET.LEFT^THORACIC OUTLET.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8807,0)
THORACIC OUTLET.RIGHT^THORACIC OUTLET.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8808,0)
RENAL ARTERY^RENAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8809,0)
AV SHUNT^AV SHUNT^^^^^S^from LOINC system list
"DATA",64.061,8810,0)
BILIARY DUCTS^BILIARY DUCTS^^^^^S^from LOINC system list
"DATA",64.061,8811,0)
EXTREMITY VESSEL^EXTREMITY VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8812,0)
FEMORAL ARTERY+POPLITEAL ARTERY^FEMORAL ARTERY+POPLITEAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8813,0)
FEMORAL VESSEL+POPLITEAL ARTERY^FEMORAL VESSEL+POPLITEAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8814,0)
XXX VESSEL^XXX VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8815,0)
CORONARY ARTERIES^CORONARY ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,8816,0)
ADRENAL GLAND^ADRENAL GLAND^^^^^S^from LOINC system list
"DATA",64.061,8817,0)
MUSCLE^MUSCLE^^^^^S^from LOINC system list
"DATA",64.061,8818,0)
KIDNEY+COLLECTING SYSTEM^KIDNEY+COLLECTING SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,8819,0)
TEMPORAL BONES^TEMPORAL BONES^^^^^S^from LOINC system list
"DATA",64.061,8820,0)
UPPER EXTREMITY.JOINT.LEFT^UPPER EXTREMITY.JOINT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8821,0)
UPPER EXTREMITY.JOINT.RIGHT^UPPER EXTREMITY.JOINT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8822,0)
ORBIT^ORBIT^^^^^S^from LOINC system list
"DATA",64.061,8823,0)
ORBIT.RIGHT^ORBIT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8824,0)
OVARY^OVARY^^^^^S^from LOINC system list
"DATA",64.061,8825,0)
TOE^TOE^^^^^S^from LOINC system list
"DATA",64.061,8826,0)
ABDOMINAL VEINS^ABDOMINAL VEINS^^^^^S^from LOINC system list
"DATA",64.061,8827,0)
VEINS^VEINS^^^^^S^from LOINC system list
"DATA",64.061,8828,0)
LOWER EXTREMITY VEINS.LEFT^LOWER EXTREMITY VEINS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8829,0)
LOWER EXTREMITY VEINS.RIGHT^LOWER EXTREMITY VEINS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8830,0)
UPPER EXTREMITY VEINS.LEFT^UPPER EXTREMITY VEINS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8831,0)
UPPER EXTREMITY VEINS.RIGHT^UPPER EXTREMITY VEINS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8832,0)
NECK VEINS^NECK VEINS^^^^^S^from LOINC system list
"DATA",64.061,8833,0)
PELVIS VEINS^PELVIS VEINS^^^^^S^from LOINC system list
"DATA",64.061,8834,0)
VENA CAVA.INFERIOR+LOWER EXTREMITY VEINS^VENA CAVA.INFERIOR+LOWER EXTREMITY VEINS^^^^^S^from LOINC system list
"DATA",64.061,8835,0)
ADRENAL VESSELS^ADRENAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8836,0)
CAROTID VESSEL^CAROTID VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8837,0)
EXTREMITY VESSELS^EXTREMITY VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8838,0)
UPPER EXTREMITY ARTERY.BILATERAL^UPPER EXTREMITY ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8839,0)
PENIS VESSELS^PENIS VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8840,0)
PENIS^PENIS^^^^^S^from LOINC system list
"DATA",64.061,8841,0)
ILIAC VESSELS.RIGHT^ILIAC VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8842,0)
CHEST XXX^CHEST XXX^^^^^S^from LOINC system list
"DATA",64.061,8843,0)
UPPER EXTREMITY ARTERY^UPPER EXTREMITY ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8844,0)
FINGER.SECOND.RIGHT^FINGER.SECOND.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8845,0)
FINGER.THIRD.RIGHT^FINGER.THIRD.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8846,0)
FINGER.FOURTH.RIGHT^FINGER.FOURTH.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8847,0)
FINGER.FIFTH.RIGHT^FINGER.FIFTH.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8848,0)
AIR~ENVIR^AIR~ENVIR^^^^^S^from LOINC system list
"DATA",64.061,8849,0)
LIVER TRANSPLANT^LIVER TRANSPLANT^^^^^S^from LOINC system list
"DATA",64.061,8850,0)
KIDNEY TRANSPLANT^KIDNEY TRANSPLANT^^^^^S^from LOINC system list
"DATA",64.061,8851,0)
LOWER EXTREMITY VESSELS.RIGHT^LOWER EXTREMITY VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8852,0)
LOWER EXTREMITY VESSELS.LEFT^LOWER EXTREMITY VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8853,0)
UPPER EXTREMITY VESSELS.LEFT^UPPER EXTREMITY VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8854,0)
UPPER EXTREMITY VESSELS.RIGHT^UPPER EXTREMITY VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8855,0)
KNEE VESSELS^KNEE VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8856,0)
KNEE VESSELS.LEFT^KNEE VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8857,0)
KNEE VESSELS.RIGHT^KNEE VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8858,0)
ORBIT VESSELS^ORBIT VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8859,0)
PULMONARY VESSELS^PULMONARY VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8860,0)
RENAL VESSELS.BILATERAL^RENAL VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8861,0)
SHOULDER VESSELS^SHOULDER VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8862,0)
SHOULDER VESSELS.LEFT^SHOULDER VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8863,0)
SHOULDER VESSELS.RIGHT^SHOULDER VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8864,0)
UPPER JOINT^UPPER JOINT^^^^^S^from LOINC system list
"DATA",64.061,8865,0)
ABDOMEN+PELVIS^ABDOMEN+PELVIS^^^^^S^from LOINC system list
"DATA",64.061,8866,0)
HEAD ARTERIES^HEAD ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,8867,0)
TEMPORAL BONES.RIGHT^TEMPORAL BONES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8868,0)
UPPER EXTREMITY.JOINT.BILATERAL^UPPER EXTREMITY.JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8869,0)
ORBIT.LEFT^ORBIT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8870,0)
CHEST VEINS^CHEST VEINS^^^^^S^from LOINC system list
"DATA",64.061,8871,0)
TEMPORAL BONES.LEFT^TEMPORAL BONES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8872,0)
ANKLE VESSELS^ANKLE VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8873,0)
BILIARY DUCTS+PANCREATIC DUCT^BILIARY DUCTS+PANCREATIC DUCT^^^^^S^from LOINC system list
"DATA",64.061,8874,0)
ORBIT+FACE^ORBIT+FACE^^^^^S^from LOINC system list
"DATA",64.061,8875,0)
W EXTENSION^W EXTENSION^^^^^C
"DATA",64.061,8876,0)
W FLEXION^W FLEXION^^^^^C
"DATA",64.061,8877,0)
W NIPPLE MARKERS^W NIPPLE MARKERS^^^^^C
"DATA",64.061,8878,0)
CEREBRAL ARTERY^CEREBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8879,0)
INFERIOR MESENTERIC ARTERY^INFERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8880,0)
SUPERIOR MESENTERIC ARTERY^SUPERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8881,0)
CEREBRAL VEIN^CEREBRAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8882,0)
ABDOMEN.CYST^ABDOMEN.CYST^^^^^S^from LOINC system list
"DATA",64.061,8883,0)
BONE MARROW^BONE MARROW^^^^^S^from LOINC system list
"DATA",64.061,8884,0)
EPIDIDYMIS^EPIDIDYMIS^^^^^S^from LOINC system list
"DATA",64.061,8885,0)
MEDIASTINUM^MEDIASTINUM^^^^^S^from LOINC system list
"DATA",64.061,8886,0)
SUPERFICIAL TISSUE^SUPERFICIAL TISSUE^^^^^S^from LOINC system list
"DATA",64.061,8887,0)
BRAIN+LARYNX^BRAIN+LARYNX^^^^^S^from LOINC system list
"DATA",64.061,8888,0)
AORTA.ENDOGRAFT^AORTA.ENDOGRAFT^^^^^S^from LOINC system list
"DATA",64.061,8889,0)
BRAIN STEM+NERVES.CRANIAL^BRAIN STEM+NERVES.CRANIAL^^^^^S^from LOINC system list
"DATA",64.061,8890,0)
BRAIN.TEMPORAL^BRAIN.TEMPORAL^^^^^S^from LOINC system list
"DATA",64.061,8891,0)
FISTULA^FISTULA^^^^^S^from LOINC system list
"DATA",64.061,8892,0)
FOOT+ANKLE^FOOT+ANKLE^^^^^S^from LOINC system list
"DATA",64.061,8893,0)
PAROTID GLAND^PAROTID GLAND^^^^^S^from LOINC system list
"DATA",64.061,8894,0)
TEMPOROMANDIBULAR JOINT.BILATERAL^TEMPOROMANDIBULAR JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8895,0)
SPINE.LUMBOSACRAL JUNCTION^SPINE.LUMBOSACRAL JUNCTION^^^^^S^from LOINC system list
"DATA",64.061,8896,0)
CIRCLE OF WILLIS^CIRCLE OF WILLIS^^^^^S^from LOINC system list
"DATA",64.061,8897,0)
GREAT VESSEL^GREAT VESSEL^^^^^S^from LOINC system list
"DATA",64.061,8898,0)
W CONTRAST INTRA SINUS TRACT^W CONTRAST INTRA SINUS TRACT^^^^^C
"DATA",64.061,8899,0)
BRAIN+INTERNAL AUDITORY CANAL^BRAIN+INTERNAL AUDITORY CANAL^^^^^S^from LOINC system list
"DATA",64.061,8900,0)
SOFT TISSUE^SOFT TISSUE^^^^^S^from LOINC system list
"DATA",64.061,8901,0)
PELVIS+SPINE.LUMBAR^PELVIS+SPINE.LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8902,0)
SPINE.LUMBAR+SACROILIAC JOINT^SPINE.LUMBAR+SACROILIAC JOINT^^^^^S^from LOINC system list
"DATA",64.061,8903,0)
SPINE.LUMBAR+SACRUM^SPINE.LUMBAR+SACRUM^^^^^S^from LOINC system list
"DATA",64.061,8904,0)
SPINE.LUMBAR+SACRUM+COCCYX^SPINE.LUMBAR+SACRUM+COCCYX^^^^^S^from LOINC system list
"DATA",64.061,8905,0)
SPINE.LUMBAR+SACRUM+SACROILIAC JOINT+COCCYX^SPINE.LUMBAR+SACRUM+SACROILIAC JOINT+COCCYX^^^^^S^from LOINC system list
"DATA",64.061,8906,0)
SPINAL VEIN^SPINAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8907,0)
FEMUR+HIP^FEMUR+HIP^^^^^S^from LOINC system list
"DATA",64.061,8908,0)
ABDOMEN+FETUS^ABDOMEN+FETUS^^^^^S^from LOINC system list
"DATA",64.061,8909,0)
STERNOCLAVICULAR JOINT.BILATERAL^STERNOCLAVICULAR JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8910,0)
STERNOCLAVICULAR JOINT.LEFT^STERNOCLAVICULAR JOINT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8911,0)
FACIAL BONES+ZYGOMATIC ARCH^FACIAL BONES+ZYGOMATIC ARCH^^^^^S^from LOINC system list
"DATA",64.061,8912,0)
HUMERUS.BICIPITAL GROOVE^HUMERUS.BICIPITAL GROOVE^^^^^S^from LOINC system list
"DATA",64.061,8913,0)
HUMERUS.BICIPITAL GROOVE.LEFT^HUMERUS.BICIPITAL GROOVE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8914,0)
HUMERUS.BICIPITAL GROOVE.BILATERAL^HUMERUS.BICIPITAL GROOVE.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8915,0)
OLECRANON.LEFT^OLECRANON.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8916,0)
SKULL+FACIAL BONES+MANDIBLE^SKULL+FACIAL BONES+MANDIBLE^^^^^S^from LOINC system list
"DATA",64.061,8917,0)
TOE.BILATERAL^TOE.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8918,0)
SPINE.CERVICAL+SPINE.THORACIC^SPINE.CERVICAL+SPINE.THORACIC^^^^^S^from LOINC system list
"DATA",64.061,8919,0)
XXX BONES^XXX BONES^^^^^S^from LOINC system list
"DATA",64.061,8920,0)
AORTA+FEMORAL ARTERY.LEFT^AORTA+FEMORAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8921,0)
AORTIC ARCH+UPPER EXTREMITY ARTERY^AORTIC ARCH+UPPER EXTREMITY ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8922,0)
AORTIC ARCH+BRACHIAL ARTERY^AORTIC ARCH+BRACHIAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8923,0)
AORTIC ARCH+CAROTID ARTERY^AORTIC ARCH+CAROTID ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8924,0)
AORTIC ARCH+SUBCLAVIAN ARTERY^AORTIC ARCH+SUBCLAVIAN ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8925,0)
AORTIC ARCH+SUBCLAVIAN ARTERY.LEFT^AORTIC ARCH+SUBCLAVIAN ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8926,0)
AORTIC ARCH+VERTEBRAL ARTERY^AORTIC ARCH+VERTEBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8927,0)
AORTIC ARCH+VERTEBRAL ARTERY.LEFT^AORTIC ARCH+VERTEBRAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8928,0)
AORTIC ARCH+VERTEBRAL ARTERY.RIGHT^AORTIC ARCH+VERTEBRAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,8929,0)
ADRENAL ARTERY.LEFT^ADRENAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8930,0)
BRACHIAL ARTERY.BILATERAL^BRACHIAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8931,0)
BRONCHIAL ARTERY^BRONCHIAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8932,0)
CAROTID ARTERY.EXTERNAL.LEFT^CAROTID ARTERY.EXTERNAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8933,0)
CAROTID ARTERY+VERTEBRAL ARTERY^CAROTID ARTERY+VERTEBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8934,0)
CAROTID ARTERY+VERTEBRAL ARTERY.BILATERAL^CAROTID ARTERY+VERTEBRAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8935,0)
CAROTID ARTERY+VERTEBRAL ARTERY.LEFT^CAROTID ARTERY+VERTEBRAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8936,0)
CELIAC ARTERY+INFERIOR MESENTERIC ARTERY+SUPERIOR MESENTERIC ARTERY^CELIAC ARTERY+INFERIOR MESENTERIC ARTERY+SUPERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8937,0)
EXTREMITY ARTERIES.LEFT^EXTREMITY ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8938,0)
UPPER EXTREMITY ARTERIES.BILATERAL^UPPER EXTREMITY ARTERIES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8939,0)
GASTRIC ARTERY^GASTRIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8940,0)
GASTRIC ARTERY.LEFT^GASTRIC ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8941,0)
GASTRODUODENAL ARTERY^GASTRODUODENAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8942,0)
MAXILLARY ARTERY.INTERNAL^MAXILLARY ARTERY.INTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8943,0)
INFERIOR MESENTERIC ARTERY+SUPERIOR MESENTERIC ARTERY^INFERIOR MESENTERIC ARTERY+SUPERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8944,0)
SUPERIOR MESENTERIC ARTERY+GASTRIC ARTERY.LEFT+CELIAC ARTERY^SUPERIOR MESENTERIC ARTERY+GASTRIC ARTERY.LEFT+CELIAC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,8945,0)
PUDENDAL ARTERY.INTERNAL^PUDENDAL ARTERY.INTERNAL^^^^^S^from LOINC system list
"DATA",64.061,8946,0)
SUBCLAVIAN ARTERY.BILATERAL^SUBCLAVIAN ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8947,0)
SUBCLAVIAN ARTERY.LEFT^SUBCLAVIAN ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8948,0)
VERTEBRAL ARTERY.BILATERAL^VERTEBRAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8949,0)
AZYGOS VEIN^AZYGOS VEIN^^^^^S^from LOINC system list
"DATA",64.061,8950,0)
EXTREMITY VEINS.BILATERAL^EXTREMITY VEINS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8951,0)
EXTREMITY VEINS.LEFT^EXTREMITY VEINS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8952,0)
LOWER EXTREMITY VEINS.BILATERAL^LOWER EXTREMITY VEINS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8953,0)
UPPER EXTREMITY VEINS.BILATERAL^UPPER EXTREMITY VEINS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8954,0)
FEMORAL VEIN^FEMORAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,8955,0)
INTRAOSSEOUS VEINS^INTRAOSSEOUS VEINS^^^^^S^from LOINC system list
"DATA",64.061,8956,0)
JUGULAR VEIN.LEFT^JUGULAR VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8957,0)
INFERIOR MESENTERIC VEIN^INFERIOR MESENTERIC VEIN^^^^^S^from LOINC system list
"DATA",64.061,8958,0)
ORBIT VEINS.LEFT^ORBIT VEINS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8959,0)
RENAL VEIN.LEFT^RENAL VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8960,0)
W MANUAL STRESS^W MANUAL STRESS^^^^^C
"DATA",64.061,8961,0)
LOWER EXTREMITY ARTERIES^LOWER EXTREMITY ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,8962,0)
UPPER EXTREMITY ARTERIES.LEFT^UPPER EXTREMITY ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8963,0)
TIBIOPERONEAL ARTERIES^TIBIOPERONEAL ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,8964,0)
VERTEBRAL ARTERY.LEFT^VERTEBRAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8965,0)
CHEST.PLEURA^CHEST.PLEURA^^^^^S^from LOINC system list
"DATA",64.061,8966,0)
SPINE.DISC.CERVICAL^SPINE.DISC.CERVICAL^^^^^S^from LOINC system list
"DATA",64.061,8967,0)
XXX TENDON^XXX TENDON^^^^^S^from LOINC system list
"DATA",64.061,8968,0)
SKULL.BASE^SKULL.BASE^^^^^S^from LOINC system list
"DATA",64.061,8969,0)
SPINE VESSELS^SPINE VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8970,0)
HEAD VESSELS+NECK VESSELS^HEAD VESSELS+NECK VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8971,0)
AORTIC STENT^AORTIC STENT^^^^^S^from LOINC system list
"DATA",64.061,8972,0)
SPINE.CERVICAL VESSELS^SPINE.CERVICAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8973,0)
SPINE.LUMBAR VESSELS^SPINE.LUMBAR VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8974,0)
SPINE.THORACIC VESSELS^SPINE.THORACIC VESSELS^^^^^S^from LOINC system list
"DATA",64.061,8975,0)
SPINE.DISC.LUMBAR^SPINE.DISC.LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,8976,0)
TIBIA.BILATERAL^TIBIA.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8977,0)
TIBIA.LEFT^TIBIA.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8978,0)
FINGER.FIFTH.BILATERAL^FINGER.FIFTH.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8979,0)
FINGER.FIFTH.LEFT^FINGER.FIFTH.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8980,0)
FINGER.FOURTH.BILATERAL^FINGER.FOURTH.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8981,0)
FINGER.FOURTH.LEFT^FINGER.FOURTH.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8982,0)
FINGER.SECOND.BILATERAL^FINGER.SECOND.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8983,0)
FINGER.SECOND.LEFT^FINGER.SECOND.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8984,0)
FINGER.THIRD.BILATERAL^FINGER.THIRD.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8985,0)
FINGER.THIRD.LEFT^FINGER.THIRD.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8986,0)
TOE.FIFTH.LEFT^TOE.FIFTH.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8987,0)
TOE.FOURTH.LEFT^TOE.FOURTH.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8988,0)
GREAT TOE.BILATERAL^GREAT TOE.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,8989,0)
GREAT TOE.LEFT^GREAT TOE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8990,0)
TOE.SECOND.LEFT^TOE.SECOND.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8991,0)
TOE.THIRD.LEFT^TOE.THIRD.LEFT^^^^^S^from LOINC system list
"DATA",64.061,8992,0)
COMPRESSION^COMPRESSION^^^^^C
"DATA",64.061,8993,0)
W BARIUM CONTRAST VIA FISTULA^W BARIUM CONTRAST VIA FISTULA^^^^^C
"DATA",64.061,8994,0)
W CONTRAST VIA COLOSTOMY^W CONTRAST VIA COLOSTOMY^^^^^C
"DATA",64.061,8995,0)
W CONTRAST VIA FISTULA^W CONTRAST VIA FISTULA^^^^^C
"DATA",64.061,8996,0)
W CONTRAST VIA SUPRAPUBIC TUBE^W CONTRAST VIA SUPRAPUBIC TUBE^^^^^C
"DATA",64.061,8997,0)
W CONTRAST & FATTY MEAL PO^W CONTRAST & FATTY MEAL PO^^^^^C
"DATA",64.061,8998,0)
W GASTROGRAFIN VIA FISTULA^W GASTROGRAFIN VIA FISTULA^^^^^C
"DATA",64.061,8999,0)
W WEIGHT^W WEIGHT^^^^^C
"DATA",64.061,9000,0)
W & WO WEIGHT^W & WO WEIGHT^^^^^C
"DATA",64.061,9001,0)
WO WEIGHT^WO WEIGHT^^^^^C
"DATA",64.061,9002,0)
JEJUNUM^JEJUNUM^^^^^S^from LOINC system list
"DATA",64.061,9003,0)
W CONTRAST INTRA CORPUS CAVERNOSUM^W CONTRAST INTRA CORPUS CAVERNOSUM^^^^^C
"DATA",64.061,9004,0)
AORTIC ARCH+CAROTID ARTERY.BILATERAL+VERTEBRAL ARTERY.BILATERAL^AORTIC ARCH+CAROTID ARTERY.BILATERAL+VERTEBRAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9005,0)
AORTIC ARCH+CAROTID ARTERY.COMMON.BILATERAL^AORTIC ARCH+CAROTID ARTERY.COMMON.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9006,0)
AORTIC ARCH+CAROTID ARTERY.COMMON.LEFT^AORTIC ARCH+CAROTID ARTERY.COMMON.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9007,0)
ADRENAL VEIN LEFT^ADRENAL VEIN LEFT^^^^^S^from LOINC system list
"DATA",64.061,9008,0)
RIBS.LEFT+CHEST^RIBS.LEFT+CHEST^^^^^S^from LOINC system list
"DATA",64.061,9009,0)
ORBIT.BILATERAL^ORBIT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9010,0)
KIDNEY.CYST^KIDNEY.CYST^^^^^S^from LOINC system list
"DATA",64.061,9011,0)
FEMORAL VESSELS.BILATERAL^FEMORAL VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9012,0)
ILIAC VESSELS.BILATERAL^ILIAC VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9013,0)
LOWER EXTREMITY ARTERY.BILATERAL^LOWER EXTREMITY ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9014,0)
SUBCLAVIAN VESSELS.BILATERAL^SUBCLAVIAN VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9015,0)
PANCREAS.CYST^PANCREAS.CYST^^^^^S^from LOINC system list
"DATA",64.061,9016,0)
DEEP TISSUE^DEEP TISSUE^^^^^S^from LOINC system list
"DATA",64.061,9017,0)
STERNOCLAVICULAR JOINT.RIGHT^STERNOCLAVICULAR JOINT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9018,0)
PELVIS ARTERIES+LOWER EXTREMITY ARTERIES.BILATERAL^PELVIS ARTERIES+LOWER EXTREMITY ARTERIES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9019,0)
PERIPHERAL VESSELS^PERIPHERAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9020,0)
RIBS.ANTERIOR^RIBS.ANTERIOR^^^^^S^from LOINC system list
"DATA",64.061,9021,0)
RIBS.POSTERIOR^RIBS.POSTERIOR^^^^^S^from LOINC system list
"DATA",64.061,9022,0)
ADRENAL ARTERY.RIGHT^ADRENAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9023,0)
ADRENAL VEIN.RIGHT^ADRENAL VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9024,0)
ANKLE ARTERIES.RIGHT^ANKLE ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9025,0)
CAROTID ARTERY+VERTEBRAL ARTERY.RIGHT^CAROTID ARTERY+VERTEBRAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9026,0)
CAROTID ARTERY+CEREBRAL ARTERY.RIGHT^CAROTID ARTERY+CEREBRAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9027,0)
CAROTID ARTERY.CERVICAL.RIGHT^CAROTID ARTERY.CERVICAL.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9028,0)
CAROTID ARTERY.EXTERNAL.RIGHT^CAROTID ARTERY.EXTERNAL.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9029,0)
EXTREMITY ARTERIES.RIGHT^EXTREMITY ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9030,0)
EXTREMITY VEINS.RIGHT^EXTREMITY VEINS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9031,0)
CAROTID ARTERY.INTERNAL.RIGHT^CAROTID ARTERY.INTERNAL.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9032,0)
CAROTID ARTERY+CEREBRAL ARTERY INTERNAL.RIGHT^CAROTID ARTERY+CEREBRAL ARTERY INTERNAL.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9033,0)
JUGULAR VEIN.RIGHT^JUGULAR VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9034,0)
ORBIT VEINS.RIGHT^ORBIT VEINS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9035,0)
RENAL VEIN.RIGHT^RENAL VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9036,0)
RIBS.LOWER.RIGHT^RIBS.LOWER.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9037,0)
RIBS.UPPER.RIGHT^RIBS.UPPER.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9038,0)
RIBS.ANTERIOR+POSTERIOR.RIGHT^RIBS.ANTERIOR+POSTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9039,0)
RIBS.ANTERIOR.RIGHT^RIBS.ANTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9040,0)
RIBS.POSTERIOR.RIGHT^RIBS.POSTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9041,0)
SUBCLAVIAN ARTERY.RIGHT^SUBCLAVIAN ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9042,0)
UPPER EXTREMITY ARTERIES.RIGHT^UPPER EXTREMITY ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9043,0)
VERTEBRAL ARTERY.RIGHT^VERTEBRAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9044,0)
SINUS VEIN^SINUS VEIN^^^^^S^from LOINC system list
"DATA",64.061,9045,0)
SPLENIC VEIN^SPLENIC VEIN^^^^^S^from LOINC system list
"DATA",64.061,9046,0)
SUBCLAVIAN VEIN^SUBCLAVIAN VEIN^^^^^S^from LOINC system list
"DATA",64.061,9047,0)
SUPERIOR MESENTERIC VEIN^SUPERIOR MESENTERIC VEIN^^^^^S^from LOINC system list
"DATA",64.061,9048,0)
TESTICLE VESSELS^TESTICLE VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9049,0)
SPINE.THORACOLUMBAR JUNCTION^SPINE.THORACOLUMBAR JUNCTION^^^^^S^from LOINC system list
"DATA",64.061,9050,0)
UPPER EXTREMITY ARTERIES^UPPER EXTREMITY ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9051,0)
UTERINE ARTERY^UTERINE ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9052,0)
VERTEBRAL VESSELS^VERTEBRAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9053,0)
VISCERAL VESSELS^VISCERAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9054,0)
W CHOLECYSTOKININ^W CHOLECYSTOKININ^^^^^C
"DATA",64.061,9055,0)
LOWER EXTREMITY ARTERY^LOWER EXTREMITY ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9056,0)
BREAST IMPLANT.LEFT^BREAST IMPLANT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9057,0)
BREAST IMPLANT.RIGHT^BREAST IMPLANT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9058,0)
TALUS^TALUS^^^^^S^from LOINC system list
"DATA",64.061,9059,0)
SPINE.CERVICAL+SPINE.THORACIC+SPINE.LUMBAR+SACRUM^SPINE.CERVICAL+SPINE.THORACIC+SPINE.LUMBAR+SACRUM^^^^^S^from LOINC system list
"DATA",64.061,9060,0)
BREAST IMPLANT^BREAST IMPLANT^^^^^S^from LOINC system list
"DATA",64.061,9061,0)
BREAST IMPLANT.BILATERAL^BREAST IMPLANT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9062,0)
RIBS.ANTERIOR.BILATERAL^RIBS.ANTERIOR.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9063,0)
RIBS.ANTERIOR.LEFT^RIBS.ANTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9064,0)
BREAST SPECIMEN.BILATERAL^BREAST SPECIMEN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9065,0)
BREAST SPECIMEN.LEFT^BREAST SPECIMEN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9066,0)
W CHAIN & CONTRAST INTRA BLADDER^W CHAIN & CONTRAST INTRA BLADDER^^^^^C
"DATA",64.061,9067,0)
SPINE.CAVITY^SPINE.CAVITY^^^^^S^from LOINC system list
"DATA",64.061,9068,0)
W CONTRAST INTRA DUCT^W CONTRAST INTRA DUCT^^^^^C
"DATA",64.061,9069,0)
BREAST.DUCT.BILATERAL^BREAST.DUCT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9070,0)
BREAST.DUCT.LEFT^BREAST.DUCT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9071,0)
PAROTID GLAND.LEFT^PAROTID GLAND.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9072,0)
W CONTRAST INTRA LACRIMAL DUCT^W CONTRAST INTRA LACRIMAL DUCT^^^^^C
"DATA",64.061,9073,0)
LACRIMAL DUCT.BILATERAL^LACRIMAL DUCT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9074,0)
LACRIMAL DUCT.LEFT^LACRIMAL DUCT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9075,0)
W CONTRAST ANTEGRADE^W CONTRAST ANTEGRADE^^^^^C
"DATA",64.061,9076,0)
W CONTRAST ANTEGRADE VIA PYELOSTOMY^W CONTRAST ANTEGRADE VIA PYELOSTOMY^^^^^C
"DATA",64.061,9077,0)
SPINE.CERVICAL+SPINE.LUMBAR^SPINE.CERVICAL+SPINE.LUMBAR^^^^^S^from LOINC system list
"DATA",64.061,9078,0)
SPINE.EPIDURAL SPACE^SPINE.EPIDURAL SPACE^^^^^S^from LOINC system list
"DATA",64.061,9079,0)
KIDNEY+COLLECTING SYSTEM.RIGHT^KIDNEY+COLLECTING SYSTEM.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9080,0)
W CONTRAST RETROGRADE VIA URETHRA^W CONTRAST RETROGRADE VIA URETHRA^^^^^C
"DATA",64.061,9081,0)
THORACIC ARTERY^THORACIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9082,0)
ILIAC VESSELS.LEFT^ILIAC VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9083,0)
TOE.SECOND.RIGHT^TOE.SECOND.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9084,0)
TOE.THIRD.RIGHT^TOE.THIRD.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9085,0)
TOE.FOURTH.RIGHT^TOE.FOURTH.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9086,0)
TOE.FIFTH.RIGHT^TOE.FIFTH.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9087,0)
GREAT TOE.RIGHT^GREAT TOE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9088,0)
SUBMANDIBULAR GLAND^SUBMANDIBULAR GLAND^^^^^S^from LOINC system list
"DATA",64.061,9089,0)
BONE.SUPERFICIAL^BONE.SUPERFICIAL^^^^^S^from LOINC system list
"DATA",64.061,9090,0)
SKELETAL SYSTEM^SKELETAL SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9091,0)
PRE DOSE^PRE DOSE^^^^^C
"DATA",64.061,9092,0)
30M POST DOSE^30M POST DOSE^^^^^C
"DATA",64.061,9093,0)
1H POST DOSE^1H POST DOSE^^^^^C
"DATA",64.061,9094,0)
1.5H POST DOSE^1.5H POST DOSE^^^^^C
"DATA",64.061,9095,0)
2.5H POST DOSE^2.5H POST DOSE^^^^^C
"DATA",64.061,9096,0)
POST WASHING^POST WASHING^^^^^C
"DATA",64.061,9097,0)
PRE WASHING^PRE WASHING^^^^^C
"DATA",64.061,9098,0)
PRE/POST DOSE DEXAMETHASONE^PRE/POST DOSE DEXAMETHASONE^^^^^C
"DATA",64.061,9099,0)
HUMERUS.BICIPITAL GROOVE.RIGHT^HUMERUS.BICIPITAL GROOVE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9100,0)
OLECRANON.RIGHT^OLECRANON.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9101,0)
AORTA+FEMORAL ARTERY.RIGHT^AORTA+FEMORAL ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9102,0)
AORTIC ARCH+SUBCLAVIAN ARTERY.RIGHT^AORTIC ARCH+SUBCLAVIAN ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9103,0)
GASTRIC ARTERY.RIGHT^GASTRIC ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9104,0)
TIBIA.RIGHT^TIBIA.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9105,0)
LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.RIGHT^LYMPHATICS.ABDOMINAL+LYMPHATICS.PELVIC.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9106,0)
LYMPHATICS.EXTREMITY.RIGHT^LYMPHATICS.EXTREMITY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9107,0)
LYMPHATICS.RIGHT^LYMPHATICS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9108,0)
BREAST SPECIMEN.RIGHT^BREAST SPECIMEN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9109,0)
BREAST.DUCT.RIGHT^BREAST.DUCT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9110,0)
PAROTID GLAND.RIGHT^PAROTID GLAND.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9111,0)
LACRIMAL DUCT.RIGHT^LACRIMAL DUCT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9112,0)
ANKLE ARTERIES.LEFT^ANKLE ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9113,0)
CAROTID ARTERY+CEREBRAL ARTERY.LEFT^CAROTID ARTERY+CEREBRAL ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9114,0)
CAROTID ARTERY.CERVICAL.LEFT^CAROTID ARTERY.CERVICAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9115,0)
CAROTID ARTERY.INTERNAL.LEFT^CAROTID ARTERY.INTERNAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9116,0)
CAROTID ARTERY+CEREBRAL ARTERY INTERNAL.LEFT^CAROTID ARTERY+CEREBRAL ARTERY INTERNAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9117,0)
RIBS.LOWER.LEFT^RIBS.LOWER.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9118,0)
RIBS.UPPER.LEFT^RIBS.UPPER.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9119,0)
RIBS.ANTERIOR+POSTERIOR.LEFT^RIBS.ANTERIOR+POSTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9120,0)
RIBS.POSTERIOR.LEFT^RIBS.POSTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9121,0)
KIDNEY+COLLECTING SYSTEM.LEFT^KIDNEY+COLLECTING SYSTEM.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9122,0)
ABDOMINAL ARTERIES^ABDOMINAL ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9123,0)
ABDOMINAL VEINS+VENA CAVA.INFERIOR^ABDOMINAL VEINS+VENA CAVA.INFERIOR^^^^^S^from LOINC system list
"DATA",64.061,9124,0)
AORTIC ARCH+NECK VESSELS^AORTIC ARCH+NECK VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9125,0)
BRACHIAL ARTERY+CEPHALIC ARTERY^BRACHIAL ARTERY+CEPHALIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9126,0)
BRACHIAL ARTERY+SUBCLAVIAN ARTERY^BRACHIAL ARTERY+SUBCLAVIAN ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9127,0)
BRACHIAL ARTERY.BILATERAL+CEPHALIC ARTERY.BILATERAL^BRACHIAL ARTERY.BILATERAL+CEPHALIC ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9128,0)
BRACHIAL ARTERY.LEFT+CEPHALIC ARTERY.LEFT^BRACHIAL ARTERY.LEFT+CEPHALIC ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9129,0)
BRACHIAL ARTERY.RIGHT+CEPHALIC ARTERY.RIGHT^BRACHIAL ARTERY.RIGHT+CEPHALIC ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9130,0)
CAROTID VESSELS+NECK VESSELS^CAROTID VESSELS+NECK VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9131,0)
CELIAC ARTERY^CELIAC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9132,0)
CELIAC VESSELS+SUPERIOR MESENTERIC VESSELS^CELIAC VESSELS+SUPERIOR MESENTERIC VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9133,0)
EPIDURAL VEINS^EPIDURAL VEINS^^^^^S^from LOINC system list
"DATA",64.061,9134,0)
EXTREMITY ARTERIES^EXTREMITY ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9135,0)
EXTREMITY ARTERIES.BILATERAL^EXTREMITY ARTERIES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9136,0)
EXTREMITY VEINS^EXTREMITY VEINS^^^^^S^from LOINC system list
"DATA",64.061,9137,0)
HEAD ARTERY+NECK ARTERY^HEAD ARTERY+NECK ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9138,0)
HEAD ARTERY.BILATERAL+NECK ARTERY.BILATERAL^HEAD ARTERY.BILATERAL+NECK ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9139,0)
HEART.CHAMBERS~FETUS^HEART.CHAMBERS~FETUS^^^^^S^from LOINC system list
"DATA",64.061,9140,0)
HEART.VALVES~FETUS^HEART.VALVES~FETUS^^^^^S^from LOINC system list
"DATA",64.061,9141,0)
HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREA^HOSPITALIZATION LEADING TO ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREA^^^^^S^from LOINC system list
"DATA",64.061,9142,0)
ILEAL CONDUIT^ILEAL CONDUIT^^^^^S^from LOINC system list
"DATA",64.061,9143,0)
ILIAC ARTERY^ILIAC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9144,0)
INTERNAL AUDITORY CANAL+POSTERIOR FOSSA^INTERNAL AUDITORY CANAL+POSTERIOR FOSSA^^^^^S^from LOINC system list
"DATA",64.061,9145,0)
ORBIT VEINS^ORBIT VEINS^^^^^S^from LOINC system list
"DATA",64.061,9146,0)
ORBIT.BILATERAL~FETUS^ORBIT.BILATERAL~FETUS^^^^^S^from LOINC system list
"DATA",64.061,9147,0)
PELVIS ARTERIES^PELVIS ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9148,0)
PERIPHERAL ARTERIES^PERIPHERAL ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9149,0)
POPLITEAL ARTERY^POPLITEAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9150,0)
PRIMARY DX FOR ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT PLAN^PRIMARY DX FOR ALCOHOL-SUBSTANCE ABUSE REHABILITATION TREATMENT PLAN^^^^^S^from LOINC system list
"DATA",64.061,9151,0)
PYLORUS^PYLORUS^^^^^S^from LOINC system list
"DATA",64.061,9152,0)
RENAL VESSEL.XXX^RENAL VESSEL.XXX^^^^^S^from LOINC system list
"DATA",64.061,9153,0)
SAGITTAL SINUS VEIN+JUGULAR VEIN^SAGITTAL SINUS VEIN+JUGULAR VEIN^^^^^S^from LOINC system list
"DATA",64.061,9154,0)
SCROTUM+TESTICLE.BILATERAL^SCROTUM+TESTICLE.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9155,0)
SCROTUM+TESTICLE.LEFT^SCROTUM+TESTICLE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9156,0)
SCROTUM+TESTICLE.RIGHT^SCROTUM+TESTICLE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9157,0)
SPINE FACET JOINT^SPINE FACET JOINT^^^^^S^from LOINC system list
"DATA",64.061,9158,0)
SPINE FACET JOINT.BILATERAL^SPINE FACET JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9159,0)
SPINE FACET JOINT.LEFT^SPINE FACET JOINT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9160,0)
SPINE FACET JOINT.RIGHT^SPINE FACET JOINT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9161,0)
SPINE.CERVICAL FACET JOINT^SPINE.CERVICAL FACET JOINT^^^^^S^from LOINC system list
"DATA",64.061,9162,0)
SPINE.LUMBAR FACET JOINT^SPINE.LUMBAR FACET JOINT^^^^^S^from LOINC system list
"DATA",64.061,9163,0)
SPINE.LUMBAR+SACROILIAC JOINT.BILATERAL^SPINE.LUMBAR+SACROILIAC JOINT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9164,0)
SPINE.THORACIC FACET JOINT^SPINE.THORACIC FACET JOINT^^^^^S^from LOINC system list
"DATA",64.061,9165,0)
SPLENIC VEIN+PORTAL VEIN^SPLENIC VEIN+PORTAL VEIN^^^^^S^from LOINC system list
"DATA",64.061,9166,0)
THIGH VESSELS^THIGH VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9167,0)
THORACIC OUTLET VESSELS^THORACIC OUTLET VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9168,0)
THORACIC OUTLET VESSELS.BILATERAL^THORACIC OUTLET VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9169,0)
THORACIC OUTLET VESSELS.LEFT^THORACIC OUTLET VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9170,0)
THORACIC OUTLET VESSELS.RIGHT^THORACIC OUTLET VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9171,0)
THORACIC OUTLET.BILATERAL^THORACIC OUTLET.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9172,0)
URINARY BLADDER ARTERIES^URINARY BLADDER ARTERIES^^^^^S^from LOINC system list
"DATA",64.061,9173,0)
WAT~ENVIR^WAT~ENVIR^^^^^S^from LOINC system list
"DATA",64.061,9174,0)
W CONTRAST INTRA BILIARY DUCT^W CONTRAST INTRA BILIARY DUCT^^^^^C
"DATA",64.061,9175,0)
W CONTRAST INTRA BLADDER^W CONTRAST INTRA BLADDER^^^^^C
"DATA",64.061,9176,0)
W CONTRAST INTRA LARYNX^W CONTRAST INTRA LARYNX^^^^^C
"DATA",64.061,9177,0)
W CONTRAST INTRA URETHRA^W CONTRAST INTRA URETHRA^^^^^C
"DATA",64.061,9178,0)
W CONTRAST IV & W RENIN SAMPLING^W CONTRAST IV & W RENIN SAMPLING^^^^^C
"DATA",64.061,9179,0)
W CONTRAST PERCUTANEOUS TRANSHEPATIC^W CONTRAST PERCUTANEOUS TRANSHEPATIC^^^^^C
"DATA",64.061,9180,0)
W CONTRAST PR & INTRA BLADDER DURING DEFECATION & VOIDING^W CONTRAST PR & INTRA BLADDER DURING DEFECATION & VOIDING^^^^^C
"DATA",64.061,9181,0)
W CONTRAST TRANSHEPATIC & W HEMODYNAMICS^W CONTRAST TRANSHEPATIC & W HEMODYNAMICS^^^^^C
"DATA",64.061,9182,0)
W FORCED DORSIFLEXION^W FORCED DORSIFLEXION^^^^^C
"DATA",64.061,9183,0)
W R-BENDING & W L-BENDING^W R-BENDING & W L-BENDING^^^^^C
"DATA",64.061,9184,0)
W RADIONUCLIDE INHALED & RADIONUCLIDE IV^W RADIONUCLIDE INHALED & RADIONUCLIDE IV^^^^^C
"DATA",64.061,9185,0)
W RADIONUCLIDE INTRA LYMPHATIC^W RADIONUCLIDE INTRA LYMPHATIC^^^^^C
"DATA",64.061,9186,0)
W RADIONUCLIDE IV^W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9187,0)
W RADIONUCLIDE TRANSPLANT SCAN^W RADIONUCLIDE TRANSPLANT SCAN^^^^^C
"DATA",64.061,9188,0)
W RADIONUCLIDE.IV^W RADIONUCLIDE.IV^^^^^C
"DATA",64.061,9189,0)
MI Organism Db^^^^^^G^ORGANISM DATANAME^^12^B
"DATA",64.061,9189,63)
MI^63.3^.01^9318
"DATA",64.061,9190,0)
MI Comment on Specimen Db^^^^^^G^COMMENT ON SPECIMEN DATANAME^^12^B
"DATA",64.061,9190,63)
MI^63.05^.99^9329
"DATA",64.061,9191,0)
MI Urine Screen Db^^^^^^G^URINE SCREEN DATANAME^^12^B
"DATA",64.061,9191,63)
MI^63.05^11.57^9314
"DATA",64.061,9192,0)
MI Sputum Screen Db^^^^^^G^SPUTUME SCREEN DATANAME^^12^B
"DATA",64.061,9192,63)
MI^63.05^11.58^9314
"DATA",64.061,9193,0)
MI Bacteria Rpt Date^^^^^^G^BACTERIA RPT DATABASE^^12^B
"DATA",64.061,9193,63)
MI^63.05^11^9329
"DATA",64.061,9194,0)
MI Gram Stain Rpt Date^^^^^^G^GRAM STAIN DATANAME^^12^B
"DATA",64.061,9194,63)
MI^63.05^11.6;63.29^9314
"DATA",64.061,9195,0)
MI Bacteria Smear/Prep^^^^^^G^BACTERIA SMEAR/PREP DATABASE^^12^B
"DATA",64.061,9195,63)
MI^63.291^.01^9314
"DATA",64.061,9196,0)
MI Bacteriology Tests^^^^^^G^BACTERIOLOGY TEST DATANAME^^12^B
"DATA",64.061,9196,63)
MI^63.061^.01^9314
"DATA",64.061,9197,0)
MI Parasitology Complete Rpt Date^^^^^^G^PARASITOLOGY RPT DATE DATANAME^^12^B
"DATA",64.061,9197,63)
MI^63.05^14^9329
"DATA",64.061,9198,0)
MI Parasitology Smear/Prep^^^^^^G^PARASIT SMEAR/PREP^^12^B
"DATA",64.061,9198,63)
MI^63.341^.01^9314
"DATA",64.061,9199,0)
MI Parasite^^^^^^G^PARASITE DATANAME^^12^B
"DATA",64.061,9199,63)
MI^63.34^.01^9318
"DATA",64.061,9200,0)
MI Parasite Test^^^^^^G^PARASITE TEST DATANAME^^12^B
"DATA",64.061,9200,63)
MI^63.361^.01^9314
"DATA",64.061,9201,0)
MI Mycology Rpt Date^^^^^^G^MYCOLOGY RPT DATE DATANAME^^12^B
"DATA",64.061,9201,63)
MI^63.05^18^9329
"DATA",64.061,9202,0)
MI Mycology Smear/Prep^^^^^^G^MYCOLOCY SMEAR/PREP DATANAME^^12^B
"DATA",64.061,9202,63)
MI^63.371^.01^9314
"DATA",64.061,9203,0)
MI Fungus/Yeast^^^^^^G^FUNGUS/YEAST DATANAME^^12^B
"DATA",64.061,9203,63)
MI^63.37^.01^9318
"DATA",64.061,9204,0)
MI Mycology Test^^^^^^G^MYCOLOGY TEST DATANAME^^12^B
"DATA",64.061,9204,63)
MI^63.111^.01^9314
"DATA",64.061,9205,0)
MI TB Rpt Date^^^^^^G^TB RPT DATE DATANAME^^12^B
"DATA",64.061,9205,63)
MI^63.05^22^9329
"DATA",64.061,9206,0)
MI Mycobacterium^^^^^^G^MYCOBACATERIUM DATANAME^^12^B
"DATA",64.061,9206,63)
MI^63.39^.01^9318
"DATA",64.061,9207,0)
MI TB Test^^^^^^G^TB TEST DATANAME^^12^B
"DATA",64.061,9207,63)
MI^63.181^.01^9314
"DATA",64.061,9208,0)
MI Antibiotic Level^^^^^^G^ANTIBIOTIC LEVEL DATANAME^^12^B
"DATA",64.061,9208,63)
MI^63.42^.01^9328
"DATA",64.061,9209,0)
MI Virology Rpt Date^^^^^^G^VIROLOGY RPT DATE DATANAME^^12^B
"DATA",64.061,9209,63)
MI^63.05^33^9329
"DATA",64.061,9210,0)
MI Virus^^^^^^G^VIRUS DATABASE^^12^B
"DATA",64.061,9210,63)
MI^63.43^.01^9318
"DATA",64.061,9211,0)
MI Virology Test^^^^^^G^VIROLOGY TEST DATANAME^^12^B
"DATA",64.061,9211,63)
MI^63.432^.01^9314
"DATA",64.061,9212,0)
MI Sterility Result^^^^^^G^STERILITY RESULT DATANAME^^12^B
"DATA",64.061,9212,63)
MI^63.292^.01^9315
"DATA",64.061,9213,0)
Record Correction^^C^^0085^^U^RECORD CORRECTION REPLACES
"DATA",64.061,9214,0)
Deletes OBX^^D^^0085^^U^DELETES OBX RECORD
"DATA",64.061,9215,0)
Final Results^^F^^0085^^U^FINAL RESULTS
"DATA",64.061,9216,0)
Specimen In Lab^^I^^0085^^U^IN LAB RESULTS PENDING
"DATA",64.061,9217,0)
Preliminary Results^^S^^0085^^U^PRELIMINARY RESULTS
"DATA",64.061,9218,0)
Results Entered^^R^^0085^^U^RESULTS ENTERED NOT VERIFIED
"DATA",64.061,9219,0)
Partial Results^^S^^0085^^U^PARTIAL RESULTS
"DATA",64.061,9220,0)
Results Not Obtained^^X^^0085^^U^RESULTS CANNOT BE OBTAINED
"DATA",64.061,9221,0)
Results To Final^^U^^0085^^U^RESULTS STATUS CHANGED TO FINAL
"DATA",64.061,9222,0)
Post Original Wrong^^W^^0085^^U^POST ORIGINAL IS WRONG
"DATA",64.061,9223,0)
Below Low Normal^^L^^0078^^G^BELOW LOW NORMAL
"DATA",64.061,9224,0)
Above High Normal^^H^^0078^^G^ABOVE HIGH NORMAL
"DATA",64.061,9225,0)
Below Lower Panic Limits^^0078^^0078^^G^BELOW LOWER PANIC LIMITS
"DATA",64.061,9226,0)
Above Upper Panic Limits^^HH^^0078^^G^ABOVE UPPER PANIC LIMITS
"DATA",64.061,9227,0)
Below Absolute Low-off Instrument Scale^^<^^0078^^G
"DATA",64.061,9228,0)
Above Absolute High-Off Instrument Scale^^>^^0078^^G
"DATA",64.061,9229,0)
Normal^^N^^0078^^G
"DATA",64.061,9230,0)
Abnormal^^A^^0078^^G
"DATA",64.061,9231,0)
Very Abnormal^^AA^^0078^^G
"DATA",64.061,9232,0)
No Range Defined^^null^^0078^^G
"DATA",64.061,9233,0)
Significant Change Up^^U^^0078^^G
"DATA",64.061,9234,0)
Significant Change Down^^D^^0078^^G
"DATA",64.061,9235,0)
Better direction not relevent^^B^^0078^^G^BETTER USE WHEN DIRECTION NOT RELEVENT
"DATA",64.061,9236,0)
Worse direction not relevent^^W^^^^G^WORSE USE WHEN DIRECTION NOT RELEVENT
"DATA",64.061,9237,0)
Sensitive^^S^^0078^^G^MICROBIOLOGY SENSITIVITES ONLY
"DATA",64.061,9238,0)
Intermediate^^I^^0078^^G^MICROBIOLOGY ONLY
"DATA",64.061,9239,0)
Moderate Sensitive^^MS^^0078^^G^MICROBIOLOGY ONLY
"DATA",64.061,9240,0)
Very Sensitive^^VS^^0078^^G^MICROBIOLOGY ONLY
"DATA",64.061,9241,0)
SP Brief Clinical History^^^^^^G^BRIEF CLINICAL HISTORY DATANAME^^11^A
"DATA",64.061,9241,63)
SP^63.08^.013;63.813
"DATA",64.061,9242,0)
SP Preoperative Diagnosis^^^^^^G^PREOPERATIVE DIAGNOSIS DATANAME^^11^A
"DATA",64.061,9242,63)
SP^63.08^.014;63.814
"DATA",64.061,9243,0)
SP Operative Findings^^^^^^G^OPERATIVE FINDINGS DATANAME^^11^A
"DATA",64.061,9243,63)
SP^63.08^.015;63.815
"DATA",64.061,9244,0)
SP Postoperative Diagnosis^^^^^^G^POSTOPERATIVE DIAGNOSIS DATANAME^^11^A
"DATA",64.061,9244,63)
SP^63.08^.016;63.816
"DATA",64.061,9245,0)
SP Gross Description^^^^^^G^GROSS DESCRIPTION DATANAME^^11^A
"DATA",64.061,9245,63)
SP^63.08^1;63.81
"DATA",64.061,9246,0)
SP Microscopic Description ^^^^^^G^MICROSCOPIC DESCRIPTION DATANAME^^11^A
"DATA",64.061,9246,63)
SP^63.08^1.1;63.811
"DATA",64.061,9247,0)
SP Supplementary Rpt Date^^^^^^G^SUPPLEMENTARY REPORT DATANAME^^11^A
"DATA",64.061,9247,63)
SP^63.08^1.2;63.817
"DATA",64.061,9248,0)
SP Supplement Desc^^^^^^G^SUPPLEMENT DESC DATANAME^^11^A
"DATA",64.061,9248,63)
SP^63.817^1;63.818
"DATA",64.061,9249,0)
SP Supplementary Report Modified^^^^^^G^SUPPLEMENTARY REPORT MODIFIED DATANAME^^11^A
"DATA",64.061,9249,63)
SP^63.817^2;63.8172
"DATA",64.061,9250,0)
SP Frozen Section^^^^^^G^FROZEN SECTION DATANAME^^11^A
"DATA",64.061,9250,63)
SP^63.08^1.3;63.801
"DATA",64.061,9251,0)
SP Surgical Path Diagnosis^^^^^^G^SURGICAL PATH DIAGNOSIS DATANAME^^11^A
"DATA",64.061,9251,63)
SP^63.08^1.4;63.802
"DATA",64.061,9252,0)
MI Bact Preliminary Comment^^^^^^G^MI BACT PRELIMINARY COMMENT DATANAME^^12^B
"DATA",64.061,9252,63)
MI^63.06^.01^9329
"DATA",64.061,9253,0)
MI Bact Rpt Remark^^^^^^G^MI BACT RPT REMARK DATANAME^^12^B
"DATA",64.061,9253,63)
MI^63.33^.01^9329
"DATA",64.061,9254,0)
MI Parasite Stage^^^^^^G^MI PARASITE STAGE DATANAME^^12^B
"DATA",64.061,9254,63)
MI^63.35^.01^9328
"DATA",64.061,9255,0)
MI Parasite Stage Comment^^^^^^G^MI PARASITE STAGE COMMENT DATANAME^^12^B
"DATA",64.061,9255,63)
MI^63.351^.01^9329
"DATA",64.061,9256,0)
MI Parasite Stage Quantity^^^^^^G^MI PARASITE STAGE QUANTITY DATANAME^^12^B
"DATA",64.061,9256,63)
MI^63.35^1^9329
"DATA",64.061,9257,0)
MI Parasite Isolate ID^^^^^^G^MI PARASITE ISOLATE ID DATANAME^^12^B
"DATA",64.061,9257,63)
MI^63.34^2^9328
"DATA",64.061,9258,0)
MI Parasite Preliminary Comment^^^^^^G^MI PARASITE PRELIMINARY COMMENT DATANAME^^12^B
"DATA",64.061,9258,63)
MI^63.1^.01^9329
"DATA",64.061,9259,0)
MI Parasite Rpt Remark^^^^^^G^MI PARASITE RPT REMARK DATANAME^^12^B
"DATA",64.061,9259,63)
MI^63.36^.01^9329
"DATA",64.061,9260,0)
MI Fungus/Yeast Quantity^^^^^^G^MI FUNGUS/YEAST QUANTITY DATANAME^^12^B
"DATA",64.061,9260,63)
MI^63.37^1^9328
"DATA",64.061,9261,0)
MI Fungus/Yeast Comment^^^^^^G^MI FUNGUS/YEAST COMMENT DATANAME^^12^B
"DATA",64.061,9261,63)
MI^63.372^.01^9329
"DATA",64.061,9262,0)
MI Fungus/Yeast Isolate ID^^^^^^G^MI FUNGUS/YEAST ISOLATE ID DATANAME^^12^B
"DATA",64.061,9262,63)
MI^63.37^3^9328
"DATA",64.061,9263,0)
CY BRIEF CLINICAL HISTORY^^^^^^G^BRIEF CLINICAL HISTORY DATANAME^^16^
"DATA",64.061,9263,63)
CY^63.09^.013;63.913
"DATA",64.061,9264,0)
CY Preoperative Diagnosis^^^^^^G^PREOPERATIVE DIAGNOSIS DATANAME^^16^
"DATA",64.061,9264,63)
CY^63.09^.014;63.914
"DATA",64.061,9265,0)
CY Operative Findings^^^^^^G^OPERATIVE FINDINGS DATANAME^^16^
"DATA",64.061,9265,63)
CY^63.09^.015;63.905
"DATA",64.061,9266,0)
CY Postoperative Diagnosis^^^^^^G^POSTOPERATIVE DIAGNOSIS DATANAME^^16^
"DATA",64.061,9266,63)
CY^63.09^.016;63.916
"DATA",64.061,9267,0)
CY Gross Description^^^^^^G^GROSS DESCRIPTION DATANAME^^16^
"DATA",64.061,9267,63)
CY^63.09^1;63.91
"DATA",64.061,9268,0)
CY Microscopic Examination^^^^^^G^MICROSCOPIC EXAMINATION DATANAME^^16^
"DATA",64.061,9268,63)
CY^63.09^1.1;63.911
"DATA",64.061,9269,0)
CY Supplementary Rpt Date^^^^^^G^SUPPLEMNETARY REPORT DATANAME^^16^
"DATA",64.061,9269,63)
CY^63.09^1.2;63.907
"DATA",64.061,9270,0)
MI Preliminary Mycology Comment^^^^^^G^MI MYCOLOGY PRELIMINARY REMARK DATANAME^^12^B
"DATA",64.061,9270,63)
MI^63.11^.01^9329^
"DATA",64.061,9271,0)
CY Supplementary Complete^^^^^^G^SUPPLEMENTARY REPORT DATE/TIME^^16^
"DATA",64.061,9271,63)
CY^63.09^.01;63.907
"DATA",64.061,9272,0)
CY Supplement Desc^^^^^^G^SUPPLEMENT DESC DATANAME^^16^
"DATA",64.061,9272,63)
CY^63.907^1;63.918
"DATA",64.061,9273,0)
CY Supplementary Report Modified^^^^^^G^SUPPLEMENTARY REPORT MODIFIED DATANAME^^16^
"DATA",64.061,9273,63)
CY^63.907^2;63.9072
"DATA",64.061,9274,0)
MI Mycobacterium Quantity^^^^^^G^MI MYCOBACTERIUM QUANTITY DATANAME^^12^B
"DATA",64.061,9274,63)
MI^63.39^1^9329
"DATA",64.061,9275,0)
MI Mycobacterium Comment^^^^^^G^MI MYCOBACTERIUM COMMENT DATANAME^^12^B
"DATA",64.061,9275,63)
MI^63.4^.01^9329
"DATA",64.061,9276,0)
MI TB Preliminary Comment^^^^^^G^MI TB PRELIMINARY COMMENT DATANAME^^12^B
"DATA",64.061,9276,63)
MI^63.18^.01^9329
"DATA",64.061,9277,0)
MI TB Rpt Remark^^^^^^G^MI TB RPT REMARK DATANAME^^12^B
"DATA",64.061,9277,63)
MI^63.41^.01^9329
"DATA",64.061,9278,0)
MI Virology Preliminary Comment^^^^^^G^MI VIROLOGY PRELIMINARY COMMENT^^12^B
"DATA",64.061,9278,63)
MI^63.431^.01^9329
"DATA",64.061,9279,0)
CY Person Releasing the Supp. Rpt^^^^^^G^PERSON RELEASING THE SUPP. RPT DATANAME^^16^
"DATA",64.061,9279,63)
CY^63.907^.03;63.9072
"DATA",64.061,9280,0)
MI Virology Rpt Remark^^^^^^G^MI VIROLOGY RPT REMARK DATANAME^^12^B
"DATA",64.061,9280,63)
MI^63.44^.01^9329
"DATA",64.061,9281,0)
CY Supp Report Release Date/Time^^^^^^G^SUPP REPORT RELEASE DATE/TIME DATANAME^^16^
"DATA",64.061,9281,63)
CY^63.907^.04;63.9072
"DATA",64.061,9282,0)
SP Person Releasing the Supp. Rpt^^^^^^G^PERSON RELEASING THE SUPP. RPT DATANAME^^11^A
"DATA",64.061,9282,63)
SP^63.817^.03;63.8172
"DATA",64.061,9283,0)
MI Organism Quantity^^^^^^G^MI ORGANISM QUANTITY DATANAME^^12^B
"DATA",64.061,9283,63)
MI^63.3^1^9329
"DATA",64.061,9284,0)
SP Supp Report Release Date/Time^^^^^^G^SUPP REPORT RELEASE DATE/TIME DATANAME^^11^A
"DATA",64.061,9284,63)
SP^63.817^.04;63.8172
"DATA",64.061,9285,0)
MI Organism Isolate ID^^^^^^G^MI ORGANISM ISOLATE ID DATA NAME^^12^B
"DATA",64.061,9285,63)
MI^63.3^201^9328
"DATA",64.061,9286,0)
MI Antibiotic Draw Time^^^^^^G^MI ANTIBIOLTIC DRAW TIME DATANAME^^12^B
"DATA",64.061,9286,63)
MI^63.42^1^9329
"DATA",64.061,9287,0)
MI Antibiotic Conc^^^^^^G^MI ANTIBIOTIC CONC DATANAME^^12^B
"DATA",64.061,9287,63)
MI^63.42^2^9329
"DATA",64.061,9288,0)
MI Virus Isolate ID^^^^^^G^MI VIRUS ISOLATE ID DATANAME^^12^B
"DATA",64.061,9288,63)
MI^63.43^1^9328
"DATA",64.061,9289,0)
MI Bact Rpt Status^^^^^^G^MI BACT RPT STATUS DATANAME^^12^B
"DATA",64.061,9289,63)
MI^63.05^11.5^9328
"DATA",64.061,9290,0)
MI Bact Person^^^^^^G^MI BACT PERSON DATANAME^^12^B
"DATA",64.061,9290,63)
MI^63.05^11.55^9316
"DATA",64.061,9291,0)
MI Sterility Control^^^^^^G^MI STERILITY CONTROL DATANAME^^12^B
"DATA",64.061,9291,63)
MI^63.05^11.51^9314
"DATA",64.061,9292,0)
MI Mic Person^^^^^^G^MI MIC PERSON DATANAME^^12^B
"DATA",64.061,9292,63)
MI^63.05^11.56^9316
"DATA",64.061,9293,0)
MI Parasite Rpt Status^^^^^^G^MI PARASITE RPT STATUS DATANAME^^12^B
"DATA",64.061,9293,63)
MI^63.05^15^9329
"DATA",64.061,9294,0)
MI Parasite Entering Person^^^^^^G^MI PARASITE ENTERING PERSON DATANAME^^12^B
"DATA",64.061,9294,63)
MI^63.05^15.5^9316
"DATA",64.061,9295,0)
MI Mycology Rpt Status^^^^^^G^MI MYCOLOGY RPT STATUS DATANAME^^12^B
"DATA",64.061,9295,63)
MI^63.05^19^9329
"DATA",64.061,9296,0)
MI Mycology Person^^^^^^G^MI MYCOLOGY PERSON DATANAME^^12^B
"DATA",64.061,9296,63)
MI^63.05^19.5^9316
"DATA",64.061,9297,0)
MI TB Rpt Status^^^^^^G^MI TB RPT STATUS DATANAME^^12^B
"DATA",64.061,9297,63)
MI^63.05^23^9329
"DATA",64.061,9298,0)
MI TB Entering Person^^^^^^G^MI TB ENTERING PERSON DATANAME^^12^B
"DATA",64.061,9298,63)
MI^63.05^25.5^9316
"DATA",64.061,9299,0)
MI Virology Rpt Status^^^^^^G^MI VIROLOGY RPT STATUS DATANAME^^12^B
"DATA",64.061,9299,63)
MI^63.05^34^9329
"DATA",64.061,9300,0)
MI Virology Entering Person^^^^^^G^MI VIROLOGY ENTERING PERSON DATANAME^^12^B
"DATA",64.061,9300,63)
MI^63.05^35^9316
"DATA",64.061,9301,0)
EM Brief Clinical History^^^^^^G^BRIEF CLINICAL HISTORY DATANAME^^15^
"DATA",64.061,9301,63)
EM^63.02^.013;63.213
"DATA",64.061,9302,0)
EM Preoperative Diagnosis^^^^^^G^PREOPERATIVE DIAGNOSIS DATANAME^^15^
"DATA",64.061,9302,63)
EM^63.02^.014;63.214
"DATA",64.061,9303,0)
EM Operative Findings^^^^^^G^OPERATIVE FINDINGS DATANAME^^15^
"DATA",64.061,9303,63)
EM^63.02^.015;63.205
"DATA",64.061,9304,0)
EM Postoperative Diagnosis^^^^^^G^POSTOPERATIVE DIAGNOSIS DATANAME^^15^
"DATA",64.061,9304,63)
EM^63.02^.016;63.206
"DATA",64.061,9305,0)
EM Gross Description^^^^^^G^GROSS DESCRIPTION DATANAME^^15^
"DATA",64.061,9305,63)
EM^63.02^1;63.201
"DATA",64.061,9306,0)
EM Microscopic Examination^^^^^^G^MICROSCOPIC EXAMINATION DATANAME^^15^
"DATA",64.061,9306,63)
EM^63.02^1.1;63.211
"DATA",64.061,9307,0)
EM Supplementary Rpt Date^^^^^^G^SUPPLEMENTARY REPORT DATANAME^^15^
"DATA",64.061,9307,63)
EM^63.02^1.2;63.207
"DATA",64.061,9308,0)
EM Supplementary Date^^^^^^G^SUPPLEMENTARY REPORT DATE/TIME DATANAME^^15^
"DATA",64.061,9308,63)
EM^63.02^.01;63.207
"DATA",64.061,9309,0)
EM Supplement Desc^^^^^^G^SUPPLEMENT DESC DATANAME^^15^
"DATA",64.061,9309,63)
EM^63.207^1;63.218
"DATA",64.061,9310,0)
EM Supplementary Report Modified^^^^^^G^SUPPLEMENTARY REPORT MODIFIED DATANAME^^15^
"DATA",64.061,9310,63)
EM^63.207^2;63.2072
"DATA",64.061,9311,0)
EM Person Releasing the Supp. Rpt^^^^^^G^PERSON RELEASING THE SUPP. RPT DATANAME^^15^
"DATA",64.061,9311,63)
EM^63.207^.03;63.2072
"DATA",64.061,9312,0)
EM Supp Report Release Date/Time^^^^^^G^SUPP REPORT RELEASE DATE/TIME DATANAME^^15^
"DATA",64.061,9312,63)
EM^63.207^.04;63.2072
"DATA",64.061,9313,0)
SCT Clinical Finding^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9314,0)
SCT Procedure^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9314,1)
PRC
"DATA",64.061,9314,63)
^^^^61.2
"DATA",64.061,9315,0)
SCT Observable Entity^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9315,1)
OBS
"DATA",64.061,9316,0)
SCT Social Concept^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9316,1)
SCN
"DATA",64.061,9317,0)
SCT Body Structure^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9317,1)
BDS
"DATA",64.061,9317,63)
^^^^61
"DATA",64.061,9318,0)
SCT Organism^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9318,1)
ORG
"DATA",64.061,9318,63)
^^^^61.2
"DATA",64.061,9319,0)
SCT Substance^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9319,1)
SUB
"DATA",64.061,9319,63)
^^^^61.2
"DATA",64.061,9320,0)
SCT Physical Object^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9320,1)
OBJ
"DATA",64.061,9320,63)
^^^^61.2
"DATA",64.061,9321,0)
SCT Physical Force^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9321,1)
FOR
"DATA",64.061,9321,63)
^^^^61.2
"DATA",64.061,9322,0)
SCT Events^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9322,1)
EVE
"DATA",64.061,9322,63)
^^^^61.2
"DATA",64.061,9323,0)
SCT Environment/Location^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9323,1)
ENL
"DATA",64.061,9323,63)
^^^^61.2
"DATA",64.061,9324,0)
SCT Specimen^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9324,1)
SPC
"DATA",64.061,9324,63)
^^^^61
"DATA",64.061,9325,0)
SCT Context-dependent Categories^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9325,1)
CON
"DATA",64.061,9326,0)
SCT Staging Scales^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9326,1)
STG
"DATA",64.061,9327,0)
SCT Pharmaceutical/biological Product^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9328,0)
SCT Attribute^^^^^^G^SCT Heirarchy Top 3^^14^SCT
"DATA",64.061,9328,1)
ATT
"DATA",64.061,9328,63)
^^^^61.2
"DATA",64.061,9329,0)
SCT Qualifier Value^^^^^^G^SCT Heirarchy Top 3^^14^SCT
"DATA",64.061,9329,1)
QUV
"DATA",64.061,9329,63)
^^^^61.2
"DATA",64.061,9330,0)
SCT Special Concept^^^^^^G^SCT Heirarchy Top 3^^14^SCT
"DATA",64.061,9330,1)
SPL
"DATA",64.061,9332,0)
MI Bacteria Susceptibility^^^^^^G^Bacteria sensitivity^^12^B
"DATA",64.061,9332,63)
MI^63.3^^9329
"DATA",64.061,9333,0)
MI TB Susceptibility^^^^^^G^Mycobacteria sensitivity^^12^B
"DATA",64.061,9333,63)
MI^63.39^^9329
"DATA",64.061,9334,0)
SP Specimen^^^^^^G^SURGICAL PATH SPECIMEN^^11^A
"DATA",64.061,9334,63)
SP^63.08^.012;63.812
"DATA",64.061,9335,0)
SP Specimen Weight^^^^^^G^SURGICAL PATH SPECIMEN WEIGHT^^11^A
"DATA",64.061,9335,63)
SP^63.08^2;63.12
"DATA",64.061,9336,0)
SP Organ/Tissue^^^^^^G^SURG PATH ORGAN/TISSUE^^11^A
"DATA",64.061,9336,63)
SP^63.08^.01;63.12
"DATA",64.061,9337,0)
SCT Disorder^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9337,1)
DIS
"DATA",64.061,9337,63)
^^^^61.2
"DATA",64.061,9338,0)
SCT Morphologic Abnormality^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9338,1)
MAB
"DATA",64.061,9338,63)
^^^^61
"DATA",64.061,9339,0)
SCT cell^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9339,1)
CLL
"DATA",64.061,9339,63)
^^^^61
"DATA",64.061,9340,0)
SCT cell structure^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9340,1)
CLS
"DATA",64.061,9340,63)
^^^^61
"DATA",64.061,9341,0)
SCT Navigational Concept^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9341,1)
NAV
"DATA",64.061,9341,63)
^^^^61
"DATA",64.061,9342,0)
SCT Environment^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9342,1)
ENV
"DATA",64.061,9342,63)
^^^^61.2
"DATA",64.061,9343,0)
SCT Finding^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9343,1)
FND
"DATA",64.061,9343,63)
^^^^61.2
"DATA",64.061,9344,0)
SCT Product^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9344,1)
PRD
"DATA",64.061,9344,63)
^^^^61.2
"DATA",64.061,9345,0)
SCT Regime/Therapy^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9345,1)
REG
"DATA",64.061,9345,63)
^^^^61.2
"DATA",64.061,9346,0)
MI Mycology Rpt Remark^^^^^^G^MI MYCOLOGY RPT REMARK DATABASE^^12^B
"DATA",64.061,9346,63)
MI^63.38^.01^9329
"DATA",64.061,9347,0)
Manifest rejected by host facility^^^SM08^^^E
"DATA",64.061,9348,0)
SCT Ethnic Group^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9348,1)
ETH
"DATA",64.061,9349,0)
SCT Life Style^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9349,1)
LIF
"DATA",64.061,9350,0)
SCT Occupation^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9350,1)
OCC
"DATA",64.061,9351,0)
SCT Person^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9351,1)
PER
"DATA",64.061,9352,0)
SCT Religion/philosophy^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9352,1)
REL
"DATA",64.061,9353,0)
SCT SNOMED RT+CTV3^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9353,1)
SCH
"DATA",64.061,9354,0)
SCT Administrative Concept^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9354,1)
ADM
"DATA",64.061,9355,0)
SCT Assessment Scale^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9355,1)
ASS
"DATA",64.061,9356,0)
SCT Geographic Location^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9356,1)
GEO
"DATA",64.061,9357,0)
SCT Inacative Concept^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9357,1)
INA
"DATA",64.061,9358,0)
SCT Namespace Concept^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9358,1)
NAM
"DATA",64.061,9359,0)
SCT Tumor Staging^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9359,1)
TMR
"DATA",64.061,9360,0)
SCT SNOMED CT^^^^^^G^SCT Heirarchy^^14^SCT
"DATA",64.061,9360,1)
SCT
"DATA",64.061,9361,0)
CY Specimen^^^^^^G^CY SPECIMEN^^16^
"DATA",64.061,9361,63)
CY^63.09^.012;63.902
"DATA",64.061,9362,0)
EM Specimen^^^^^^G^EM SPECIMEN^^15^
"DATA",64.061,9362,63)
EM^63.02^.012;63.202
"DATA",64.061,9363,0)
CY Diagnosis^^^^^^G^CY DIAGNOSIS^^16^
"DATA",64.061,9363,63)
CY^63.09^1.4;63.903
"DATA",64.061,9364,0)
EM Diagnosis^^^^^^G^EM DIAGNOSIS^^15^
"DATA",64.061,9364,63)
EM^63.02^1.4;63.204
"DATA",64.061,9365,0)
MI Acid Fast Stain^^^^^^G^ACID FAST STAIN DATANAME^^12^B
"DATA",64.061,9365,63)
MI^63.05^24^9314
"DATA",64.061,9366,0)
EM Complete Rpt Date^^^^^^G^DATE REPORT COMPLETE DATABASE^^15^
"DATA",64.061,9366,63)
EM^63.02^.11
"DATA",64.061,9367,0)
SP Comment^^^^^^G^SURGICAL PATH COMMENT DATANAME^^11^A
"DATA",64.061,9367,63)
SP^63.08^.99;63.98
"DATA",64.061,9368,0)
EM Comment^^^^^^G^EM COMMENT DATANAME^^15^
"DATA",64.061,9368,63)
EM^63.02^.99;63.208
"DATA",64.061,9369,0)
CY Comment^^^^^^G^EM COMMENT DATANAME^^16^
"DATA",64.061,9369,63)
CY^63.09^.99;63.908
"DATA",64.061,9370,0)
SP Complete Rpt Date^^^^^^G^DATE REPORT COMPLETED DATANAME^^11^A
"DATA",64.061,9370,63)
SP^63.08^.03^9329
"DATA",64.061,9371,0)
CY Complete Rpt Date^^^^^^G^DATE REPORT COMPLETE DATABASE^^16^
"DATA",64.061,9371,63)
CY^63.09^.03
"DATA",64.061,9372,0)
MI Mycobacterium Stain Quantity^^^^^^G^MI MYCOBACTERIUM STAIN QUANTITY DATANAME^^12^B
"DATA",64.061,9372,63)
MI^63.05^25
"DATA",64.061,9373,0)
1.5H POST 1 G/KG GLUCOSE PO^1.5H POST 1 G/KG GLUCOSE PO^^^^^C
"DATA",64.061,9374,0)
10M POST EXERCISE^10M POST EXERCISE^^^^^A
"DATA",64.061,9375,0)
1.5H POST 1 UG/KG CRH IV^1.5H POST 1 UG/KG CRH IV^^^^^C
"DATA",64.061,9376,0)
1.5H POST CONTRAST RETROGRADE^1.5H POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9377,0)
1.5H POST DOSE ARGININE^1.5H POST DOSE ARGININE^^^^^C
"DATA",64.061,9378,0)
1.5H POST DOSE CLONIDINE^1.5H POST DOSE CLONIDINE^^^^^C
"DATA",64.061,9379,0)
1.5H POST DOSE TRIPLE BOLUS^1.5H POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9380,0)
1.5H POST MEAL^1.5H POST MEAL^^^^^C
"DATA",64.061,9381,0)
1.5H PRE XXX CHALLENGE^1.5H PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9382,0)
10.5H POST XXX CHALLENGE^10.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9383,0)
10.75H POST XXX CHALLENGE^10.75H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9384,0)
100 UM^100 UM^^^^^C
"DATA",64.061,9385,0)
100M POST XXX CHALLENGE^100M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9386,0)
105M POST DOSE ARGININE^105M POST DOSE ARGININE^^^^^C
"DATA",64.061,9387,0)
105M POST DOSE GLUCOSE^105M POST DOSE GLUCOSE^^^^^C
"DATA",64.061,9388,0)
11.5H POST XXX CHALLENGE^11.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9389,0)
110M POST XXX CHALLENGE^110M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9390,0)
12 AM SPECIMEN^12 AM SPECIMEN^^^^^C
"DATA",64.061,9391,0)
12 PM SPECIMEN^12 PM SPECIMEN^^^^^C
"DATA",64.061,9392,0)
12.5H POST XXX CHALLENGE^12.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9393,0)
12M POST XXX CHALLENGE^12M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9394,0)
13.5H POST XXX CHALLENGE^13.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9395,0)
13H POST XXX CHALLENGE^13H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9396,0)
13M PRE XXX CHALLENGE^13M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9397,0)
14H POST XXX CHALLENGE^14H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9398,0)
14M POST XXX CHALLENGE^14M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9399,0)
15.5H POST XXX CHALLENGE^15.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9400,0)
15M POST 1 UG/KG CRH IV^15M POST 1 UG/KG CRH IV^^^^^C
"DATA",64.061,9401,0)
15M POST 25 G XYLOSE PO^15M POST 25 G XYLOSE PO^^^^^C
"DATA",64.061,9402,0)
15M POST CONTRAST RETROGRADE^15M POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9403,0)
15M POST DOSE ARGININE^15M POST DOSE ARGININE^^^^^C
"DATA",64.061,9404,0)
15M POST DOSE CORTICOTROPIN IM^15M POST DOSE CORTICOTROPIN IM^^^^^C
"DATA",64.061,9405,0)
15M POST DOSE TRIPLE BOLUS^15M POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9406,0)
15M PRE DOSE ARGININE^15M PRE DOSE ARGININE^^^^^C
"DATA",64.061,9407,0)
15M PRE DOSE TRH IV^15M PRE DOSE TRH IV^^^^^C
"DATA",64.061,9408,0)
16H POST XXX CHALLENGE^16H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9409,0)
16M POST XXX CHALLENGE^16M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9410,0)
17.5H POST XXX CHALLENGE^17.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9411,0)
18.5H POST XXX CHALLENGE^18.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9412,0)
18H POST XXX CHALLENGE^18H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9413,0)
19.5H POST XXX CHALLENGE^19.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9414,0)
1D POST DOSE CANDIDA ALBICANS ID^1D POST DOSE CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,9415,0)
1D POST DOSE TRICHOPHYTON ID^1D POST DOSE TRICHOPHYTON ID^^^^^C
"DATA",64.061,9416,0)
1D POST INCUBATION^1D POST INCUBATION^^^^^C
"DATA",64.061,9417,0)
1D POST MUMPS ID^1D POST MUMPS ID^^^^^C
"DATA",64.061,9418,0)
1H POST CONTRAST RETROGRADE^1H POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9419,0)
1H POST DOSE ARGININE^1H POST DOSE ARGININE^^^^^C
"DATA",64.061,9420,0)
1H POST DOSE CLONIDINE^1H POST DOSE CLONIDINE^^^^^C
"DATA",64.061,9421,0)
1H POST DOSE TRIPLE BOLUS^1H POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9422,0)
1H PRE XXX CHALLENGE^1H PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9423,0)
1ST SPECIMEN POST DOSE LACTOSE^1ST SPECIMEN POST DOSE LACTOSE^^^^^C
"DATA",64.061,9424,0)
1ST SPECIMEN POST EXERCISE^1ST SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9425,0)
2.25H POST XXX CHALLENGE^2.25H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9426,0)
2.25H PRE XXX CHALLENGE^2.25H PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9427,0)
20.5H POST XXX CHALLENGE^20.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9428,0)
20H POST XXX CHALLENGE^20H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9429,0)
20M POST COLLECTION^20M POST COLLECTION^^^^^C
"DATA",64.061,9430,0)
20M POST DOSE TRIPLE BOLUS^20M POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9431,0)
20M POST INCUBATION^20M POST INCUBATION^^^^^C
"DATA",64.061,9432,0)
20M PRE XXX CHALLENGE^20M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9433,0)
21.5H POST XXX CHALLENGE^21.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9434,0)
22H POST XXX CHALLENGE^22H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9435,0)
23.5H POST XXX CHALLENGE^23.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9436,0)
25H POST XXX CHALLENGE^25H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9437,0)
26H POST XXX CHALLENGE^26H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9438,0)
27H POST XXX CHALLENGE^27H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9439,0)
27M POST XXX CHALLENGE^27M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9440,0)
28H POST XXX CHALLENGE^28H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9441,0)
29H POST XXX CHALLENGE^29H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9442,0)
2D POST DOSE CANDIDA ALBICANS ID^2D POST DOSE CANDIDA ALBICANS ID^^^^^C
"DATA",64.061,9443,0)
2D POST DOSE HISTOPLASMIN ID^2D POST DOSE HISTOPLASMIN ID^^^^^C
"DATA",64.061,9444,0)
2D POST DOSE MUMPS ID^2D POST DOSE MUMPS ID^^^^^C
"DATA",64.061,9445,0)
2D POST DOSE TRICHOPHYTON ID^2D POST DOSE TRICHOPHYTON ID^^^^^C
"DATA",64.061,9446,0)
2H POST 1 UG/KG CRH IV^2H POST 1 UG/KG CRH IV^^^^^C
"DATA",64.061,9447,0)
2H POST 50 G GLUCOSE PO^2H POST 50 G GLUCOSE PO^^^^^C
"DATA",64.061,9448,0)
2H POST CONTRAST RETROGRADE^2H POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9449,0)
2H POST DOSE ARGININE^2H POST DOSE ARGININE^^^^^C
"DATA",64.061,9450,0)
2H POST DOSE CLONIDINE^2H POST DOSE CLONIDINE^^^^^C
"DATA",64.061,9451,0)
2H POST DOSE INSULIN IV^2H POST DOSE INSULIN IV^^^^^C
"DATA",64.061,9452,0)
2H POST DOSE TRIPLE BOLUS^2H POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9453,0)
2H PRE XXX CHALLENGE^2H PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9454,0)
2ND SPECIMEN POST DOSE LACTOSE^2ND SPECIMEN POST DOSE LACTOSE^^^^^C
"DATA",64.061,9455,0)
2ND SPECIMEN POST EXERCISE^2ND SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9456,0)
3.5H POST DOSE ARGININE^3.5H POST DOSE ARGININE^^^^^C
"DATA",64.061,9457,0)
3.75H POST XXX CHALLENGE^3.75H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9458,0)
30H POST XXX CHALLENGE^30H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9459,0)
30M POST 1 G/KG GLUCOSE PO^30M POST 1 G/KG GLUCOSE PO^^^^^C
"DATA",64.061,9460,0)
30M POST CONTRAST RETROGRADE^30M POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9461,0)
30M POST DOSE ARGININE^30M POST DOSE ARGININE^^^^^C
"DATA",64.061,9462,0)
30M POST DOSE TRIPLE BOLUS^30M POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9463,0)
30M POST DOSE XYLOSE PO^30M POST DOSE XYLOSE PO^^^^^C
"DATA",64.061,9464,0)
30M PRE 1 G/KG GLUCOSE PO^30M PRE 1 G/KG GLUCOSE PO^^^^^C
"DATA",64.061,9465,0)
31H POST XXX CHALLENGE^31H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9466,0)
36H POST XXX CHALLENGE^36H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9467,0)
3D POST 1 TU ID^3D POST 1 TU ID^^^^^C
"DATA",64.061,9468,0)
3D POST XXX CHALLENGE^3D POST XXX CHALLENGE^^^^^C
"DATA",64.061,9469,0)
3H POST DOSE ARGININE^3H POST DOSE ARGININE^^^^^C
"DATA",64.061,9470,0)
3H POST DOSE TRIPLE BOLUS^3H POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9471,0)
3H POST INCUBATION^3H POST INCUBATION^^^^^C
"DATA",64.061,9472,0)
3M POST XXX CHALLENGE^3M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9473,0)
3M PRE XXX CHALLENGE^3M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9474,0)
3RD SPECIMEN POST DOSE LACTOSE^3RD SPECIMEN POST DOSE LACTOSE^^^^^C
"DATA",64.061,9475,0)
3RD SPECIMEN POST EXERCISE^3RD SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9476,0)
45M POST CONTRAST RETROGRADE^45M POST CONTRAST RETROGRADE^^^^^C
"DATA",64.061,9477,0)
45M POST DOSE ARGININE^45M POST DOSE ARGININE^^^^^C
"DATA",64.061,9478,0)
45M POST DOSE TRIPLE BOLUS^45M POST DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9479,0)
45M PRE XXX CHALLENGE^45M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9480,0)
4H POST DOSE ARGININE^4H POST DOSE ARGININE^^^^^C
"DATA",64.061,9481,0)
4H POST INCUBATION^4H POST INCUBATION^^^^^C
"DATA",64.061,9482,0)
4TH SPECIMEN POST EXERCISE^4TH SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9483,0)
5.25H POST XXX CHALLENGE^5.25H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9484,0)
50 UM^50 UM^^^^^C
"DATA",64.061,9485,0)
5H POST 5 G XYLOSE PO^5H POST 5 G XYLOSE PO^^^^^C
"DATA",64.061,9486,0)
5H POST DOSE XYLOSE PO^5H POST DOSE XYLOSE PO^^^^^C
"DATA",64.061,9487,0)
5M PRE XXX CHALLENGE^5M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9488,0)
5TH SPECIMEN POST EXERCISE^5TH SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9489,0)
6H POST DOSE LACTOSE PO^6H POST DOSE LACTOSE PO^^^^^C
"DATA",64.061,9490,0)
6M POST XXX CHALLENGE^6M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9491,0)
6TH SPECIMEN POST EXERCISE^6TH SPECIMEN POST EXERCISE^^^^^C
"DATA",64.061,9492,0)
75M POST DOSE GLUCOSE^75M POST DOSE GLUCOSE^^^^^C
"DATA",64.061,9493,0)
7D POST XXX CHALLENGE^7D POST XXX CHALLENGE^^^^^C
"DATA",64.061,9494,0)
7M POST 0.5 UG/KG PENTAGASTRIN IV^7M POST 0.5 UG/KG PENTAGASTRIN IV^^^^^C
"DATA",64.061,9495,0)
8 AM SPECIMEN^8 AM SPECIMEN^^^^^C
"DATA",64.061,9496,0)
8 PM SPECIMEN^8 PM SPECIMEN^^^^^C
"DATA",64.061,9497,0)
8.5H POST XXX CHALLENGE^8.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9498,0)
8H POST 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^8H POST 8 MG DEXAMETHASONE PO OVERNIGHT HIGH DOSE^^^^^C
"DATA",64.061,9499,0)
8M PRE XXX CHALLENGE^8M PRE XXX CHALLENGE^^^^^C
"DATA",64.061,9500,0)
9.5H POST XXX CHALLENGE^9.5H POST XXX CHALLENGE^^^^^C
"DATA",64.061,9501,0)
9M POST XXX CHALLENGE^9M POST XXX CHALLENGE^^^^^C
"DATA",64.061,9502,0)
AFTER ADDITION OF HEPARINASE^AFTER ADDITION OF HEPARINASE^^^^^C
"DATA",64.061,9503,0)
AT 1.0 S POST FORCED EXPIRATION/VITAL CAPACITY.FORCED^AT 1.0 S POST FORCED EXPIRATION/VITAL CAPACITY.FORCED^^^^^C
"DATA",64.061,9504,0)
AT 1.0 S POST FORCED INSPIRATION^AT 1.0 S POST FORCED INSPIRATION^^^^^C
"DATA",64.061,9505,0)
AT 1.0 S POST FORCED INSPIRATION/VOLUME.FORCED INSPIRATION.TOTAL^AT 1.0 S POST FORCED INSPIRATION/VOLUME.FORCED INSPIRATION.TOTAL^^^^^C
"DATA",64.061,9506,0)
AT 3.0 S POST FORCED EXPIRATION^AT 3.0 S POST FORCED EXPIRATION^^^^^C
"DATA",64.061,9507,0)
AT 3.0 S POST FORCED EXPIRATION/VOLUME.FORCED EXPIRATION.TOTAL^AT 3.0 S POST FORCED EXPIRATION/VOLUME.FORCED EXPIRATION.TOTAL^^^^^C
"DATA",64.061,9508,0)
AT REST & W 201 TI IV^AT REST & W 201 TI IV^^^^^C
"DATA",64.061,9509,0)
AT REST & W 99M TC MIBI IV^AT REST & W 99M TC MIBI IV^^^^^C
"DATA",64.061,9510,0)
AT REST & W ADENOSINE & W RADIONUCLIDE IV^AT REST & W ADENOSINE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9511,0)
AT REST & W ADENOSINE & W TL-201 IV^AT REST & W ADENOSINE & W TL-201 IV^^^^^C
"DATA",64.061,9512,0)
AT REST & W DIPYRIDAMOLE & W RADIONUCLIDE IV^AT REST & W DIPYRIDAMOLE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9513,0)
AT REST & W DIPYRIDAMOLE & W TC-99M SESTAMIBI IV^AT REST & W DIPYRIDAMOLE & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9514,0)
AT REST & W DOBUTAMINE & W RADIONUCLIDE IV^AT REST & W DOBUTAMINE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9515,0)
AT REST & W RADIONUCLIDE IV^AT REST & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9516,0)
AT REST & W STRESS & W 99M TC SESTAMIBI IV^AT REST & W STRESS & W 99M TC SESTAMIBI IV^^^^^C
"DATA",64.061,9517,0)
AT REST & W STRESS & W RADIONUCLIDE IV^AT REST & W STRESS & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9518,0)
AT REST & W STRESS & W TC-99M SESTAMIBI IV^AT REST & W STRESS & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9519,0)
AT REST & W STRESS & W TL-201 IV^AT REST & W STRESS & W TL-201 IV^^^^^C
"DATA",64.061,9520,0)
AT REST & W TC-99M PERTECHNETATE IV^AT REST & W TC-99M PERTECHNETATE IV^^^^^C
"DATA",64.061,9521,0)
AT REST & W TC-99M SESTAMIBI IV^AT REST & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9522,0)
AT REST & W TL-201 IV^AT REST & W TL-201 IV^^^^^C
"DATA",64.061,9523,0)
AT TIME OF {EVENT}^AT TIME OF {EVENT}^^^^^C
"DATA",64.061,9524,0)
BASELINE^BASELINE^^^^^C
"DATA",64.061,9525,0)
DURING ELECTROCONVULSIVE SHOCK TREATMENT^DURING ELECTROCONVULSIVE SHOCK TREATMENT^^^^^C
"DATA",64.061,9526,0)
DURING SURGERY W CONTRAST INTRA DUCT^DURING SURGERY W CONTRAST INTRA DUCT^^^^^C
"DATA",64.061,9527,0)
DURING SURGERY W CONTRAST RETROGRAD^DURING SURGERY W CONTRAST RETROGRAD^^^^^C
"DATA",64.061,9528,0)
HEAD RAISED 30 DEGREES^HEAD RAISED 30 DEGREES^^^^^C
"DATA",64.061,9529,0)
IMMEDIATELY AFTER ADDITION OF BOVINE THROMBIN^IMMEDIATELY AFTER ADDITION OF BOVINE THROMBIN^^^^^C
"DATA",64.061,9530,0)
IMMEDIATELY AFTER ADDITION OF FACTOR VIII DEPLETED PLASMA^IMMEDIATELY AFTER ADDITION OF FACTOR VIII DEPLETED PLASMA^^^^^C
"DATA",64.061,9531,0)
IN TRACTION^IN TRACTION^^^^^C
"DATA",64.061,9532,0)
OVERNIGHT^OVERNIGHT^^^^^C
"DATA",64.061,9533,0)
POST 10 G LACTULOSE PO^POST 10 G LACTULOSE PO^^^^^C
"DATA",64.061,9534,0)
POST 50 G LACTOSE PO^POST 50 G LACTOSE PO^^^^^C
"DATA",64.061,9535,0)
POST CONCENTRATION^POST CONCENTRATION^^^^^C
"DATA",64.061,9536,0)
POST DOSE DEXAMETHASONE^POST DOSE DEXAMETHASONE^^^^^C
"DATA",64.061,9537,0)
POST DOSE METYRAPONE^POST DOSE METYRAPONE^^^^^C
"DATA",64.061,9538,0)
POST LOCALIZATION^POST LOCALIZATION^^^^^C
"DATA",64.061,9539,0)
POST PHLEBOTOMY^POST PHLEBOTOMY^^^^^C
"DATA",64.061,9540,0)
POST TRANSFUSION REACTION^POST TRANSFUSION REACTION^^^^^C
"DATA",64.061,9541,0)
POST WIRE PLACEMENT^POST WIRE PLACEMENT^^^^^C
"DATA",64.061,9542,0)
POST {EVENT}^POST {EVENT}^^^^^C
"DATA",64.061,9543,0)
PRE CFST^PRE CFST^^^^^C
"DATA",64.061,9544,0)
PRE DOSE ARGININE^PRE DOSE ARGININE^^^^^C
"DATA",64.061,9545,0)
PRE DOSE CLONIDINE^PRE DOSE CLONIDINE^^^^^C
"DATA",64.061,9546,0)
PRE DOSE CORTICOTROPIN^PRE DOSE CORTICOTROPIN^^^^^C
"DATA",64.061,9547,0)
PRE DOSE DEXAMETHASONE^PRE DOSE DEXAMETHASONE^^^^^C
"DATA",64.061,9548,0)
PRE DOSE TRIPLE BOLUS^PRE DOSE TRIPLE BOLUS^^^^^C
"DATA",64.061,9549,0)
PRE EXERCISE^PRE EXERCISE^^^^^C
"DATA",64.061,9550,0)
PRE {EVENT}^PRE {EVENT}^^^^^C
"DATA",64.061,9551,0)
PRE-MEAL^PRE-MEAL^^^^^C
"DATA",64.061,9552,0)
STANDING & IN BRACE^STANDING & IN BRACE^^^^^C
"DATA",64.061,9553,0)
STANDING & W FLEXION^STANDING & W FLEXION^^^^^C
"DATA",64.061,9554,0)
STANDING & W FLEXION & W EXTENSION^STANDING & W FLEXION & W EXTENSION^^^^^C
"DATA",64.061,9555,0)
STANDING & W R-BENDING^STANDING & W R-BENDING^^^^^C
"DATA",64.061,9556,0)
STANDING & W R-BENDING & W L-BENDING & WO BENDING^STANDING & W R-BENDING & W L-BENDING & WO BENDING^^^^^C
"DATA",64.061,9557,0)
STANDING)^STANDING)^^^^^C
"DATA",64.061,9558,0)
STANDING) & (LATERAL^STANDING) & (LATERAL^^^^^C
"DATA",64.061,9559,0)
UNINCUBATED^UNINCUBATED^^^^^C
"DATA",64.061,9560,0)
UPRIGHT & SUPINE^UPRIGHT & SUPINE^^^^^C
"DATA",64.061,9561,0)
W & WO CONTRAST IT^W & WO CONTRAST IT^^^^^C
"DATA",64.061,9562,0)
W & WO FERUMOXIDES IV^W & WO FERUMOXIDES IV^^^^^C
"DATA",64.061,9563,0)
W & WO L-BENDING^W & WO L-BENDING^^^^^C
"DATA",64.061,9564,0)
W & WO R-BENDING^W & WO R-BENDING^^^^^C
"DATA",64.061,9565,0)
W & WO REDUCED CONTRAST VOLUME IV^W & WO REDUCED CONTRAST VOLUME IV^^^^^C
"DATA",64.061,9566,0)
W & WO TC-99M DTPA IV^W & WO TC-99M DTPA IV^^^^^C
"DATA",64.061,9567,0)
W & WO TC-99M MERTIATIDE IV^W & WO TC-99M MERTIATIDE IV^^^^^C
"DATA",64.061,9568,0)
W 201 TL SUBTRACTION TC-99M IV^W 201 TL SUBTRACTION TC-99M IV^^^^^C
"DATA",64.061,9569,0)
W 99M TC DISIDA OR MIBIDA^W 99M TC DISIDA OR MIBIDA^^^^^C
"DATA",64.061,9570,0)
W ADENOSINE & W RADIONUCLIDE IV^W ADENOSINE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9571,0)
W ADENOSINE & W TC-99M SESTAMIBI IV^W ADENOSINE & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9572,0)
W ADENOSINE & W TL-201 IV^W ADENOSINE & W TL-201 IV^^^^^C
"DATA",64.061,9573,0)
W AIR & BARIUM CONTRAST PO^W AIR & BARIUM CONTRAST PO^^^^^C
"DATA",64.061,9574,0)
W AIR CONTRAST PO^W AIR CONTRAST PO^^^^^C
"DATA",64.061,9575,0)
W AIR CONTRAST PR^W AIR CONTRAST PR^^^^^C
"DATA",64.061,9576,0)
W BARIUM CONTRAST PR^W BARIUM CONTRAST PR^^^^^C
"DATA",64.061,9577,0)
W CHOLECYSTOKININ & W RADIONUCLIDE IV^W CHOLECYSTOKININ & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9578,0)
W CLENCHED FIST^W CLENCHED FIST^^^^^C
"DATA",64.061,9579,0)
W CONTRAST INTRA BLADDER DURING VOIDING^W CONTRAST INTRA BLADDER DURING VOIDING^^^^^C
"DATA",64.061,9580,0)
W CONTRAST INTRA MULTIPLE DUCTS^W CONTRAST INTRA MULTIPLE DUCTS^^^^^C
"DATA",64.061,9581,0)
W CONTRAST INTRA PLEURAL SPACE^W CONTRAST INTRA PLEURAL SPACE^^^^^C
"DATA",64.061,9582,0)
W CONTRAST INTRA STENT^W CONTRAST INTRA STENT^^^^^C
"DATA",64.061,9583,0)
W CONTRAST INTRA VAS DEFERENS^W CONTRAST INTRA VAS DEFERENS^^^^^C
"DATA",64.061,9584,0)
W CONTRAST IV & W HEMODYNAMICS^W CONTRAST IV & W HEMODYNAMICS^^^^^C
"DATA",64.061,9585,0)
W CONTRAST RETROGRADE PR^W CONTRAST RETROGRADE PR^^^^^C
"DATA",64.061,9586,0)
W DEPREOTIDE & W RADIONUCLIDE IV^W DEPREOTIDE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9587,0)
W DIPYRIDAMOLE & W 99M TC MIBI IV^W DIPYRIDAMOLE & W 99M TC MIBI IV^^^^^C
"DATA",64.061,9588,0)
W DIPYRIDAMOLE & W RADIONUCLIDE IV^W DIPYRIDAMOLE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9589,0)
W DIPYRIDAMOLE & W TC-99M IV^W DIPYRIDAMOLE & W TC-99M IV^^^^^C
"DATA",64.061,9590,0)
W DIPYRIDAMOLE & W TC-99M SESTAMIBI IV^W DIPYRIDAMOLE & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9591,0)
W DIPYRIDAMOLE & W TL-201 IV^W DIPYRIDAMOLE & W TL-201 IV^^^^^C
"DATA",64.061,9592,0)
W DOBUTAMINE & W RADIONUCLIDE IV^W DOBUTAMINE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9593,0)
W DOBUTAMINE & W TC-99M SESTAMIBI IV^W DOBUTAMINE & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9594,0)
W DOBUTAMINE & W TL-201 IV^W DOBUTAMINE & W TL-201 IV^^^^^C
"DATA",64.061,9595,0)
W DOUBLE DOSE CONTRAST PO^W DOUBLE DOSE CONTRAST PO^^^^^C
"DATA",64.061,9596,0)
W FUROSEMIDE & W RADIONUCLIDE IV^W FUROSEMIDE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9597,0)
W GA-67 IV^W GA-67 IV^^^^^C
"DATA",64.061,9598,0)
W GASTROGRAFIN PO^W GASTROGRAFIN PO^^^^^C
"DATA",64.061,9599,0)
W GASTROGRAFIN PO & W BARIUM CONTRAST PR^W GASTROGRAFIN PO & W BARIUM CONTRAST PR^^^^^C
"DATA",64.061,9600,0)
W GASTROGRAFIN PR^W GASTROGRAFIN PR^^^^^C
"DATA",64.061,9601,0)
W I-123 IV^W I-123 IV^^^^^C
"DATA",64.061,9602,0)
W I-131 IV^W I-131 IV^^^^^C
"DATA",64.061,9603,0)
W I-131 MIBG IV^W I-131 MIBG IV^^^^^C
"DATA",64.061,9604,0)
W I-131 NP59 IV^W I-131 NP59 IV^^^^^C
"DATA",64.061,9605,0)
W IN-111 INTRAJOINT^W IN-111 INTRAJOINT^^^^^C
"DATA",64.061,9606,0)
W IN-111 IT^W IN-111 IT^^^^^C
"DATA",64.061,9607,0)
W IN-111 PENTETREOTIDE IV^W IN-111 PENTETREOTIDE IV^^^^^C
"DATA",64.061,9608,0)
W IN-111 SATUMOMAB IV^W IN-111 SATUMOMAB IV^^^^^C
"DATA",64.061,9609,0)
W IN-111 TAGGED WBC IV^W IN-111 TAGGED WBC IV^^^^^C
"DATA",64.061,9610,0)
W IN-111 TIUXETAN IV^W IN-111 TIUXETAN IV^^^^^C
"DATA",64.061,9611,0)
W L-BENDING^W L-BENDING^^^^^C
"DATA",64.061,9612,0)
W L-BENDING & WO BENDING^W L-BENDING & WO BENDING^^^^^C
"DATA",64.061,9613,0)
W NON-IONIC CONTRAST IT^W NON-IONIC CONTRAST IT^^^^^C
"DATA",64.061,9614,0)
W PARTICULATE RADIONUCLIDE IV^W PARTICULATE RADIONUCLIDE IV^^^^^C
"DATA",64.061,9615,0)
W R-BENDING^W R-BENDING^^^^^C
"DATA",64.061,9616,0)
W R-BENDING & W L-BENDING & WO BENDING^W R-BENDING & W L-BENDING & WO BENDING^^^^^C
"DATA",64.061,9617,0)
W R-BENDING & W L-BENDING & WO BENDING) & LATERAL^W R-BENDING & W L-BENDING & WO BENDING) & LATERAL^^^^^C
"DATA",64.061,9618,0)
W R-BENDING & W L-BENDING) & (LATERAL^W R-BENDING & W L-BENDING) & (LATERAL^^^^^C
"DATA",64.061,9619,0)
W R-BENDING & WO BENDING^W R-BENDING & WO BENDING^^^^^C
"DATA",64.061,9620,0)
W RADIONUCLIDE AEROSOL INHALED^W RADIONUCLIDE AEROSOL INHALED^^^^^C
"DATA",64.061,9621,0)
W RADIONUCLIDE GASEOUS INHALED^W RADIONUCLIDE GASEOUS INHALED^^^^^C
"DATA",64.061,9622,0)
W RADIONUCLIDE GASEOUS INHALED SINGLE BREATH^W RADIONUCLIDE GASEOUS INHALED SINGLE BREATH^^^^^C
"DATA",64.061,9623,0)
W RADIONUCLIDE INHALED^W RADIONUCLIDE INHALED^^^^^C
"DATA",64.061,9624,0)
W RADIONUCLIDE INHALED & W PARTICULATE RADIONUCLIDE IV^W RADIONUCLIDE INHALED & W PARTICULATE RADIONUCLIDE IV^^^^^C
"DATA",64.061,9625,0)
W RADIONUCLIDE INHALED & W RADIONUCLIDE IV^W RADIONUCLIDE INHALED & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9626,0)
W RADIONUCLIDE INHALED SINGLE BREATH^W RADIONUCLIDE INHALED SINGLE BREATH^^^^^C
"DATA",64.061,9627,0)
W RADIONUCLIDE INHALED SINGLE BREATH & W PARTICULATE RADIONUCLIDE IV^W RADIONUCLIDE INHALED SINGLE BREATH & W PARTICULATE RADIONUCLIDE IV^^^^^C
"DATA",64.061,9628,0)
W RADIONUCLIDE INTRA LACRIMAL DUCT^W RADIONUCLIDE INTRA LACRIMAL DUCT^^^^^C
"DATA",64.061,9629,0)
W RADIONUCLIDE PO^W RADIONUCLIDE PO^^^^^C
"DATA",64.061,9630,0)
W RADIONUCLIDE TAGGED HEAT DAMAGED RBC IV^W RADIONUCLIDE TAGGED HEAT DAMAGED RBC IV^^^^^C
"DATA",64.061,9631,0)
W RADIONUCLIDE XXX^W RADIONUCLIDE XXX^^^^^C
"DATA",64.061,9632,0)
W REDUCED CONTRAST VOLUME IV^W REDUCED CONTRAST VOLUME IV^^^^^C
"DATA",64.061,9633,0)
W SALINE INTRAUTERINE^W SALINE INTRAUTERINE^^^^^C
"DATA",64.061,9634,0)
W SINCALIDE & W RADIONUCLIDE IV^W SINCALIDE & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9635,0)
W SM153 IV^W SM153 IV^^^^^C
"DATA",64.061,9636,0)
W STRESS^W STRESS^^^^^C
"DATA",64.061,9637,0)
W STRESS & W 201 TH IV^W STRESS & W 201 TH IV^^^^^C
"DATA",64.061,9638,0)
W STRESS & W RADIONUCLIDE IV^W STRESS & W RADIONUCLIDE IV^^^^^C
"DATA",64.061,9639,0)
W STRESS & W TC-99M PERTECHNETATE IV^W STRESS & W TC-99M PERTECHNETATE IV^^^^^C
"DATA",64.061,9640,0)
W STRESS & W TC-99M SESTAMIBI IV^W STRESS & W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9641,0)
W STRESS & W TL-201 IV^W STRESS & W TL-201 IV^^^^^C
"DATA",64.061,9642,0)
W TC-99M ARCITUMOMAB IV^W TC-99M ARCITUMOMAB IV^^^^^C
"DATA",64.061,9643,0)
W TC-99M BICISATE IV^W TC-99M BICISATE IV^^^^^C
"DATA",64.061,9644,0)
W TC-99M CALCIUM COLLOID IV^W TC-99M CALCIUM COLLOID IV^^^^^C
"DATA",64.061,9645,0)
W TC-99M CAPROMAB PENDATIDE IV^W TC-99M CAPROMAB PENDATIDE IV^^^^^C
"DATA",64.061,9646,0)
W TC-99M DISIDA IV^W TC-99M DISIDA IV^^^^^C
"DATA",64.061,9647,0)
W TC-99M DMSA IV^W TC-99M DMSA IV^^^^^C
"DATA",64.061,9648,0)
W TC-99M DTPA AEROSOL INHALED^W TC-99M DTPA AEROSOL INHALED^^^^^C
"DATA",64.061,9649,0)
W TC-99M DTPA IA^W TC-99M DTPA IA^^^^^C
"DATA",64.061,9650,0)
W TC-99M DTPA IT^W TC-99M DTPA IT^^^^^C
"DATA",64.061,9651,0)
W TC-99M DTPA IV^W TC-99M DTPA IV^^^^^C
"DATA",64.061,9652,0)
W TC-99M GLUCOHEPTONATE IV^W TC-99M GLUCOHEPTONATE IV^^^^^C
"DATA",64.061,9653,0)
W TC-99M HDP IV^W TC-99M HDP IV^^^^^C
"DATA",64.061,9654,0)
W TC-99M HMPAO IV^W TC-99M HMPAO IV^^^^^C
"DATA",64.061,9655,0)
W TC-99M IV^W TC-99M IV^^^^^C
"DATA",64.061,9656,0)
W TC-99M IV & POST SINCALIDE IV^W TC-99M IV & POST SINCALIDE IV^^^^^C
"DATA",64.061,9657,0)
W TC-99M M04 IV^W TC-99M M04 IV^^^^^C
"DATA",64.061,9658,0)
W TC-99M MAA INJ^W TC-99M MAA INJ^^^^^C
"DATA",64.061,9659,0)
W TC-99M MAA IV^W TC-99M MAA IV^^^^^C
"DATA",64.061,9660,0)
W TC-99M MEDRONATE IV^W TC-99M MEDRONATE IV^^^^^C
"DATA",64.061,9661,0)
W TC-99M MERTIATIDE IV^W TC-99M MERTIATIDE IV^^^^^C
"DATA",64.061,9662,0)
W TC-99M PERTECHNETATE IV^W TC-99M PERTECHNETATE IV^^^^^C
"DATA",64.061,9663,0)
W TC-99M PYP IV^W TC-99M PYP IV^^^^^C
"DATA",64.061,9664,0)
W TC-99M RBC TAGGED IV^W TC-99M RBC TAGGED IV^^^^^C
"DATA",64.061,9665,0)
W TC-99M SC IV^W TC-99M SC IV^^^^^C
"DATA",64.061,9666,0)
W TC-99M SC PO^W TC-99M SC PO^^^^^C
"DATA",64.061,9667,0)
W TC-99M SESTAMIBI IV^W TC-99M SESTAMIBI IV^^^^^C
"DATA",64.061,9668,0)
W TC-99M TAGGED RBC IV^W TC-99M TAGGED RBC IV^^^^^C
"DATA",64.061,9669,0)
W TC-99M TAGGED WBC IV^W TC-99M TAGGED WBC IV^^^^^C
"DATA",64.061,9670,0)
W TC-99M TETROFOSMIN IV^W TC-99M TETROFOSMIN IV^^^^^C
"DATA",64.061,9671,0)
W TL-201 IV^W TL-201 IV^^^^^C
"DATA",64.061,9672,0)
W TL-201 IV & TC-99M TETROFOSMIN IV^W TL-201 IV & TC-99M TETROFOSMIN IV^^^^^C
"DATA",64.061,9673,0)
W WATER SOLUBLE CONTRAST PO^W WATER SOLUBLE CONTRAST PO^^^^^C
"DATA",64.061,9674,0)
W XE-133 INHALED^W XE-133 INHALED^^^^^C
"DATA",64.061,9675,0)
W XE-133 INHALED & W TC-99M MAA IV^W XE-133 INHALED & W TC-99M MAA IV^^^^^C
"DATA",64.061,9676,0)
15M POST EXERCISE^15M POST EXERCISE^^^^^A
"DATA",64.061,9677,0)
5M POST EXERCISE^5M POST EXERCISE^^^^^A
"DATA",64.061,9678,0)
ADJUSTED FOR DIABETES^ADJUSTED FOR DIABETES^^^^^A
"DATA",64.061,9679,0)
ADJUSTED FOR DIABETES+WEIGHT^ADJUSTED FOR DIABETES+WEIGHT^^^^^A
"DATA",64.061,9680,0)
ADJUSTED FOR WEIGHT^ADJUSTED FOR WEIGHT^^^^^A
"DATA",64.061,9681,0)
POST 0.025 MG/ML METHACHOLINE^POST 0.025 MG/ML METHACHOLINE^^^^^A
"DATA",64.061,9682,0)
POST 0.25 MG/ML METHACHOLINE^POST 0.25 MG/ML METHACHOLINE^^^^^A
"DATA",64.061,9683,0)
POST 10 MG/ML METHACHOLINE^POST 10 MG/ML METHACHOLINE^^^^^A
"DATA",64.061,9684,0)
POST 2.5 MG/ML METHACHOLINE^POST 2.5 MG/ML METHACHOLINE^^^^^A
"DATA",64.061,9685,0)
POST 25 MG/ML METHACHOLINE^POST 25 MG/ML METHACHOLINE^^^^^A
"DATA",64.061,9686,0)
POST DOSE METHACHOLINE^POST DOSE METHACHOLINE^^^^^A
"DATA",64.061,9687,0)
PRE DOSE METHACHOLINE^PRE DOSE METHACHOLINE^^^^^A
"DATA",64.061,9688,0)
PRE EXERCISE^PRE EXERCISE^^^^^A
"DATA",64.061,9689,0)
W FLEXION & W EXTENSION)^W FLEXION & W EXTENSION)^^^^^A
"DATA",64.061,9690,0)
W HYPEREXTENSION)^W HYPEREXTENSION)^^^^^A
"DATA",64.061,9691,0)
RLACNC^RLACNC^^^^^PR^^7
"DATA",64.061,9692,0)
1W~MAX^^^^^^S^^^5^T
"DATA",64.061,9693,0)
1W~MEAN^^^^^^S^^^5^T
"DATA",64.061,9694,0)
EPISODE~MAX^^^^^^S^^^5^T
"DATA",64.061,9695,0)
EPISODE~MEAN^^^^^^S^^^5^T
"DATA",64.061,9696,0)
EPISODE~MIN^^^^^^S^^^5^T
"DATA",64.061,9697,0)
GT 1H^^^^^^S^^^5^T
"DATA",64.061,9698,0)
LT 1H^^^^^^S^^^5^T
"DATA",64.061,9699,0)
ABDOMEN.FNA^ABDOMEN.FNA^^^^^S^from LOINC system list
"DATA",64.061,9700,0)
AGENCY^AGENCY^^^^^S^from LOINC system list
"DATA",64.061,9701,0)
AIR^AIR^^^^^S^from LOINC system list
"DATA",64.061,9702,0)
AMNIO FLD^AMNIO FLD^^^^^S^from LOINC system list
"DATA",64.061,9703,0)
AORTA & LOWER EXTREMITY VESSELS^AORTA & LOWER EXTREMITY VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9704,0)
AXILLA.LEFT^AXILLA.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9705,0)
AXILLA.RIGHT^AXILLA.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9706,0)
BAL^BAL^^^^^S^from LOINC system list
"DATA",64.061,9707,0)
BIL FLD^BIL FLD^^^^^S^from LOINC system list
"DATA",64.061,9708,0)
BLD/BONE MAR^BLD/BONE MAR^^^^^S^from LOINC system list
"DATA",64.061,9709,0)
BLOOD COAGULATION DEVICE^BLOOD COAGULATION DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9710,0)
BODY FLD^BODY FLD^^^^^S^from LOINC system list
"DATA",64.061,9711,0)
BODY FLD~FETUS^BODY FLD~FETUS^^^^^S^from LOINC system list
"DATA",64.061,9712,0)
BONE MAR^BONE MAR^^^^^S^from LOINC system list
"DATA",64.061,9713,0)
BRAIN VEINS^BRAIN VEINS^^^^^S^from LOINC system list
"DATA",64.061,9714,0)
BRAIN+PITUITARY+SELLA TURCICA^BRAIN+PITUITARY+SELLA TURCICA^^^^^S^from LOINC system list
"DATA",64.061,9715,0)
BREAST IMPLANT.UNILATERAL^BREAST IMPLANT.UNILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9716,0)
BREAST TUMOR^BREAST TUMOR^^^^^S^from LOINC system list
"DATA",64.061,9717,0)
BREAST.DUCTAL LAVAGE^BREAST.DUCTAL LAVAGE^^^^^S^from LOINC system list
"DATA",64.061,9718,0)
BREAST.FNA^BREAST.FNA^^^^^S^from LOINC system list
"DATA",64.061,9719,0)
BREAST.UNILATERAL^BREAST.UNILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9720,0)
BRONCHIAL^BRONCHIAL^^^^^S^from LOINC system list
"DATA",64.061,9721,0)
BRONCHIAL BRUSH^BRONCHIAL BRUSH^^^^^S^from LOINC system list
"DATA",64.061,9722,0)
CALCULUS^CALCULUS^^^^^S^from LOINC system list
"DATA",64.061,9723,0)
CAPILLARY BED+BLDC^CAPILLARY BED+BLDC^^^^^S^from LOINC system list
"DATA",64.061,9724,0)
CAROTID ARTERY+CEREBRAL ARTERY^CAROTID ARTERY+CEREBRAL ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9725,0)
CAROTID ARTERY.BILATERAL+CEREBRAL ARTERY.BILATERAL^CAROTID ARTERY.BILATERAL+CEREBRAL ARTERY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9726,0)
CAROTID ARTERY.CERVICAL^CAROTID ARTERY.CERVICAL^^^^^S^from LOINC system list
"DATA",64.061,9727,0)
CAROTID ARTERY.CERVICAL.BILATERAL^CAROTID ARTERY.CERVICAL.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9728,0)
CAROTID ARTERY.UNILATERAL^CAROTID ARTERY.UNILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9729,0)
CELIAC ARTERY+GASTRIC ARTERY.LEFT+SUPERIOR MESENTERIC ARTERY^CELIAC ARTERY+GASTRIC ARTERY.LEFT+SUPERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9730,0)
CELIAC ARTERY+SUPERIOR MESENTERIC ARTERY+INFERIOR MESENTERIC ARTERY^CELIAC ARTERY+SUPERIOR MESENTERIC ARTERY+INFERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9731,0)
CLINICAL REFERRAL^CLINICAL REFERRAL^^^^^S^from LOINC system list
"DATA",64.061,9732,0)
DEEP BONE^DEEP BONE^^^^^S^from LOINC system list
"DATA",64.061,9733,0)
DEEP MUSCLE^DEEP MUSCLE^^^^^S^from LOINC system list
"DATA",64.061,9734,0)
DEEP TISSUE.FNA^DEEP TISSUE.FNA^^^^^S^from LOINC system list
"DATA",64.061,9735,0)
DUFL/GASTRIC FLD^DUFL/GASTRIC FLD^^^^^S^from LOINC system list
"DATA",64.061,9736,0)
ENDOMYOCARDIUM^ENDOMYOCARDIUM^^^^^S^from LOINC system list
"DATA",64.061,9737,0)
ENT^ENT^^^^^S^from LOINC system list
"DATA",64.061,9738,0)
ESCORT^ESCORT^^^^^S^from LOINC system list
"DATA",64.061,9739,0)
ESOPHAGIAL BRUSH^ESOPHAGIAL BRUSH^^^^^S^from LOINC system list
"DATA",64.061,9740,0)
EXTREMITY ARTERY.LEFT^EXTREMITY ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9741,0)
EXTREMITY ARTERY.RIGHT^EXTREMITY ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9742,0)
EXTREMITY VEIN.BILATERAL^EXTREMITY VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9743,0)
EXTREMITY VEIN.LEFT^EXTREMITY VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9744,0)
EXTREMITY VEIN.RIGHT^EXTREMITY VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9745,0)
EXTREMITY VESSELS.BILATERAL^EXTREMITY VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9746,0)
EXTREMITY VESSELS.RIGHT^EXTREMITY VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9747,0)
FACILITY^FACILITY^^^^^S^from LOINC system list
"DATA",64.061,9748,0)
FEMORAL VESSELS.LEFT^FEMORAL VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9749,0)
FEMORAL VESSELS.RIGHT^FEMORAL VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9750,0)
FEMUR+TIBIA.RIGHT^FEMUR+TIBIA.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9751,0)
FOOT.SESAMOID BONES^FOOT.SESAMOID BONES^^^^^S^from LOINC system list
"DATA",64.061,9752,0)
FOOT.SESAMOID BONES.BILATERAL^FOOT.SESAMOID BONES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9753,0)
FOOT.SESAMOID BONES.LEFT^FOOT.SESAMOID BONES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9754,0)
FOOT.SESAMOID BONES.RIGHT^FOOT.SESAMOID BONES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9755,0)
GAST FLD^GAST FLD^^^^^S^from LOINC system list
"DATA",64.061,9756,0)
GASTROINTESTINAL SYSTEM+RESPIRATORY SYSTEM^GASTROINTESTINAL SYSTEM+RESPIRATORY SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9757,0)
GASTROINTESTINE.UPPER+GALLBLADDER^GASTROINTESTINE.UPPER+GALLBLADDER^^^^^S^from LOINC system list
"DATA",64.061,9758,0)
GASTROINTESTINE.UPPER+SMALL BOWEL+GALLBLADDER^GASTROINTESTINE.UPPER+SMALL BOWEL+GALLBLADDER^^^^^S^from LOINC system list
"DATA",64.061,9759,0)
GLUCOSE METER DEVICE^GLUCOSE METER DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9760,0)
HAIR^HAIR^^^^^S^from LOINC system list
"DATA",64.061,9761,0)
HAND VESSELS^HAND VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9762,0)
HBA1C MEASUREMENT DEVICE^HBA1C MEASUREMENT DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9763,0)
HEAD+NECK^HEAD+NECK^^^^^S^from LOINC system list
"DATA",64.061,9764,0)
HEIGHT DEVICE^HEIGHT DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9765,0)
HEPATIC ARTERY~GRAFT^HEPATIC ARTERY~GRAFT^^^^^S^from LOINC system list
"DATA",64.061,9766,0)
HEPATIC VEINS^HEPATIC VEINS^^^^^S^from LOINC system list
"DATA",64.061,9767,0)
HIP+THIGH^HIP+THIGH^^^^^S^from LOINC system list
"DATA",64.061,9768,0)
ILIAC GRAFT^ILIAC GRAFT^^^^^S^from LOINC system list
"DATA",64.061,9769,0)
ILIAC VESSELS^ILIAC VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9770,0)
INSULIN DELIVERY DEVICE^INSULIN DELIVERY DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9771,0)
INTRACRANIAL VESSEL+NECK VESSEL^INTRACRANIAL VESSEL+NECK VESSEL^^^^^S^from LOINC system list
"DATA",64.061,9772,0)
INTRAHEPATIC PORTAL SYSTEM^INTRAHEPATIC PORTAL SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9773,0)
ISOLATE^ISOLATE^^^^^S^from LOINC system list
"DATA",64.061,9774,0)
ISOLATE+SER^ISOLATE+SER^^^^^S^from LOINC system list
"DATA",64.061,9775,0)
KIDNEY VESSELS TRANSPLANT^KIDNEY VESSELS TRANSPLANT^^^^^S^from LOINC system list
"DATA",64.061,9776,0)
KIDNEY.BILATERAL+COLLECTING SYSTEM^KIDNEY.BILATERAL+COLLECTING SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9777,0)
KIDNEY.BILATERAL+COLLECTING SYSTEM+RENAL VESSELS^KIDNEY.BILATERAL+COLLECTING SYSTEM+RENAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9778,0)
KIDNEY.FNA^KIDNEY.FNA^^^^^S^from LOINC system list
"DATA",64.061,9779,0)
KIDNEY.LEFT+COLLECTING SYSTEM^KIDNEY.LEFT+COLLECTING SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9780,0)
KIDNEY.RIGHT+COLLECTING SYSTEM^KIDNEY.RIGHT+COLLECTING SYSTEM^^^^^S^from LOINC system list
"DATA",64.061,9781,0)
LABORATORY DEVICE^LABORATORY DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9782,0)
LIVER+BILIARY DUCTS+GALLBLADDER^LIVER+BILIARY DUCTS+GALLBLADDER^^^^^S^from LOINC system list
"DATA",64.061,9783,0)
LIVER+LUNG^LIVER+LUNG^^^^^S^from LOINC system list
"DATA",64.061,9784,0)
LIVER.FNA^LIVER.FNA^^^^^S^from LOINC system list
"DATA",64.061,9785,0)
LOWER EXTREMITY ARTERY.LEFT^LOWER EXTREMITY ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9786,0)
LOWER EXTREMITY ARTERY.RIGHT^LOWER EXTREMITY ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9787,0)
LOWER EXTREMITY VEIN.BILATERAL^LOWER EXTREMITY VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9788,0)
LOWER EXTREMITY VEIN.LEFT^LOWER EXTREMITY VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9789,0)
LOWER EXTREMITY VEIN.RIGHT^LOWER EXTREMITY VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9790,0)
LOWER EXTREMITY VESSEL GRAFT.LEFT^LOWER EXTREMITY VESSEL GRAFT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9791,0)
LOWER EXTREMITY VESSEL GRAFT.RIGHT^LOWER EXTREMITY VESSEL GRAFT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9792,0)
LOWER LEG^LOWER LEG^^^^^S^from LOINC system list
"DATA",64.061,9793,0)
LOWER LEG VESSELS^LOWER LEG VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9794,0)
LOWER LEG VESSELS.BILATERAL^LOWER LEG VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9795,0)
LOWER LEG VESSELS.LEFT^LOWER LEG VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9796,0)
LOWER LEG VESSELS.RIGHT^LOWER LEG VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9797,0)
LOWER LEG.BILATERAL^LOWER LEG.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9798,0)
LOWER LEG.LEFT^LOWER LEG.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9799,0)
LOWER LEG.RIGHT^LOWER LEG.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9800,0)
LUNG.FNA^LUNG.FNA^^^^^S^from LOINC system list
"DATA",64.061,9801,0)
LYMPH NODE.FNA^LYMPH NODE.FNA^^^^^S^from LOINC system list
"DATA",64.061,9802,0)
LYMPHATICS.PELVIC^LYMPHATICS.PELVIC^^^^^S^from LOINC system list
"DATA",64.061,9803,0)
MAMMARY ARTERY.INTERNAL.LEFT^MAMMARY ARTERY.INTERNAL.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9804,0)
MANDIBLE.LEFT^MANDIBLE.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9805,0)
MANDIBLE.RIGHT^MANDIBLE.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9806,0)
MECONIUM^MECONIUM^^^^^S^from LOINC system list
"DATA",64.061,9807,0)
METABOLISM MEASUREMENT DEVICE^METABOLISM MEASUREMENT DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9808,0)
NAIL BED^NAIL BED^^^^^S^from LOINC system list
"DATA",64.061,9809,0)
NECK MASS.FNA^NECK MASS.FNA^^^^^S^from LOINC system list
"DATA",64.061,9810,0)
OCULAR FLD^OCULAR FLD^^^^^S^from LOINC system list
"DATA",64.061,9811,0)
ORBIT+FACE+NECK^ORBIT+FACE+NECK^^^^^S^from LOINC system list
"DATA",64.061,9812,0)
ORBIT+FACIAL BONES^ORBIT+FACIAL BONES^^^^^S^from LOINC system list
"DATA",64.061,9813,0)
OVARIAN VESSELS^OVARIAN VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9814,0)
OVARY.BILATERAL^OVARY.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9815,0)
PANCREAS TRANSPLANT^PANCREAS TRANSPLANT^^^^^S^from LOINC system list
"DATA",64.061,9816,0)
PANCREAS.FNA^PANCREAS.FNA^^^^^S^from LOINC system list
"DATA",64.061,9817,0)
PAROTID.FNA^PAROTID.FNA^^^^^S^from LOINC system list
"DATA",64.061,9818,0)
PEAK FLOW METER^PEAK FLOW METER^^^^^S^from LOINC system list
"DATA",64.061,9819,0)
PEDOMETER DEVICE^PEDOMETER DEVICE^^^^^S^from LOINC system list
"DATA",64.061,9820,0)
PELVIS.FNA^PELVIS.FNA^^^^^S^from LOINC system list
"DATA",64.061,9821,0)
PERICARD FLD^PERICARD FLD^^^^^S^from LOINC system list
"DATA",64.061,9822,0)
PERIPHERAL ARTERIES.BILATERAL^PERIPHERAL ARTERIES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9823,0)
PERITON FLD^PERITON FLD^^^^^S^from LOINC system list
"DATA",64.061,9824,0)
PERITONEAL CAVITY^PERITONEAL CAVITY^^^^^S^from LOINC system list
"DATA",64.061,9825,0)
PLAS+URINE^PLAS+URINE^^^^^S^from LOINC system list
"DATA",64.061,9826,0)
PLR FLD^PLR FLD^^^^^S^from LOINC system list
"DATA",64.061,9827,0)
PORTAL VEIN~GRAFT^PORTAL VEIN~GRAFT^^^^^S^from LOINC system list
"DATA",64.061,9828,0)
PROGAM REFERRAL^PROGAM REFERRAL^^^^^S^from LOINC system list
"DATA",64.061,9829,0)
PROSTATE TUMOR^PROSTATE TUMOR^^^^^S^from LOINC system list
"DATA",64.061,9830,0)
PROSTATE.FNA^PROSTATE.FNA^^^^^S^from LOINC system list
"DATA",64.061,9831,0)
RADIUS+ULNA+ELBOW^RADIUS+ULNA+ELBOW^^^^^S^from LOINC system list
"DATA",64.061,9832,0)
RBC~CONTROL^RBC~CONTROL^^^^^S^from LOINC system list
"DATA",64.061,9833,0)
REAGENT^REAGENT^^^^^S^from LOINC system list
"DATA",64.061,9834,0)
RENAL VESSEL^RENAL VESSEL^^^^^S^from LOINC system list
"DATA",64.061,9835,0)
RESPONSIBLE PARTY^RESPONSIBLE PARTY^^^^^S^from LOINC system list
"DATA",64.061,9836,0)
RETIC^RETIC^^^^^S^from LOINC system list
"DATA",64.061,9837,0)
RIBS^RIBS^^^^^S^from LOINC system list
"DATA",64.061,9838,0)
RIBS+CHEST^RIBS+CHEST^^^^^S^from LOINC system list
"DATA",64.061,9839,0)
RIBS.BILATERAL+CHEST^RIBS.BILATERAL+CHEST^^^^^S^from LOINC system list
"DATA",64.061,9840,0)
RIBS.LOWER.POSTERIOR^RIBS.LOWER.POSTERIOR^^^^^S^from LOINC system list
"DATA",64.061,9841,0)
RIBS.LOWER.POSTERIOR.LEFT^RIBS.LOWER.POSTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9842,0)
RIBS.LOWER.POSTERIOR.RIGHT^RIBS.LOWER.POSTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9843,0)
RIBS.POSTERIOR.BILATERAL^RIBS.POSTERIOR.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9844,0)
RIBS.RIGHT+CHEST^RIBS.RIGHT+CHEST^^^^^S^from LOINC system list
"DATA",64.061,9845,0)
RIBS.UNILATERAL+CHEST^RIBS.UNILATERAL+CHEST^^^^^S^from LOINC system list
"DATA",64.061,9846,0)
RIBS.UPPER.ANTERIOR+POSTERIOR.LEFT^RIBS.UPPER.ANTERIOR+POSTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9847,0)
RIBS.UPPER.ANTERIOR+POSTERIOR.RIGHT^RIBS.UPPER.ANTERIOR+POSTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9848,0)
RIBS.UPPER.POSTERIOR.LEFT^RIBS.UPPER.POSTERIOR.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9849,0)
RIBS.UPPER.POSTERIOR.RIGHT^RIBS.UPPER.POSTERIOR.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9850,0)
SACRUM+COCCYX^SACRUM+COCCYX^^^^^S^from LOINC system list
"DATA",64.061,9851,0)
SALIVA^SALIVA^^^^^S^from LOINC system list
"DATA",64.061,9852,0)
SALIVARY GLAND.FNA^SALIVARY GLAND.FNA^^^^^S^from LOINC system list
"DATA",64.061,9853,0)
SELLA TURCICA^SELLA TURCICA^^^^^S^from LOINC system list
"DATA",64.061,9854,0)
SEMEN^SEMEN^^^^^S^from LOINC system list
"DATA",64.061,9855,0)
SEMIN PLAS^SEMIN PLAS^^^^^S^from LOINC system list
"DATA",64.061,9856,0)
SER+SALIVA^SER+SALIVA^^^^^S^from LOINC system list
"DATA",64.061,9857,0)
SER+STOOL^SER+STOOL^^^^^S^from LOINC system list
"DATA",64.061,9858,0)
SER/PLAS+DIAF^SER/PLAS+DIAF^^^^^S^from LOINC system list
"DATA",64.061,9859,0)
SER/PLAS+STOOL^SER/PLAS+STOOL^^^^^S^from LOINC system list
"DATA",64.061,9860,0)
SER~CONTROL^SER~CONTROL^^^^^S^from LOINC system list
"DATA",64.061,9861,0)
SKELETAL SYSTEM.AXIAL^SKELETAL SYSTEM.AXIAL^^^^^S^from LOINC system list
"DATA",64.061,9862,0)
SKELETAL SYSTEM.PERIPHERAL^SKELETAL SYSTEM.PERIPHERAL^^^^^S^from LOINC system list
"DATA",64.061,9863,0)
SKIN^SKIN^^^^^S^from LOINC system list
"DATA",64.061,9864,0)
SKIN MELANOMA^SKIN MELANOMA^^^^^S^from LOINC system list
"DATA",64.061,9865,0)
SOFT BONE^SOFT BONE^^^^^S^from LOINC system list
"DATA",64.061,9866,0)
SOFT TISSUE.FNA^SOFT TISSUE.FNA^^^^^S^from LOINC system list
"DATA",64.061,9867,0)
SPERMATAZOA^SPERMATAZOA^^^^^S^from LOINC system list
"DATA",64.061,9868,0)
SPINE.CERVICOTHORACIC JUNCTION^SPINE.CERVICOTHORACIC JUNCTION^^^^^S^from LOINC system list
"DATA",64.061,9869,0)
SPINE.LUMBAR SPACE^SPINE.LUMBAR SPACE^^^^^S^from LOINC system list
"DATA",64.061,9870,0)
SPUTUM^SPUTUM^^^^^S^from LOINC system list
"DATA",64.061,9871,0)
SPUTUM/BRONCHIAL^SPUTUM/BRONCHIAL^^^^^S^from LOINC system list
"DATA",64.061,9872,0)
STOOL^STOOL^^^^^S^from LOINC system list
"DATA",64.061,9873,0)
SUBMANDIBULAR GLAND.LEFT^SUBMANDIBULAR GLAND.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9874,0)
SUBMANDIBULAR.FNA^SUBMANDIBULAR.FNA^^^^^S^from LOINC system list
"DATA",64.061,9875,0)
SUBPHRENIC SPACE^SUBPHRENIC SPACE^^^^^S^from LOINC system list
"DATA",64.061,9876,0)
SUPERFICIAL BONE^SUPERFICIAL BONE^^^^^S^from LOINC system list
"DATA",64.061,9877,0)
SUPERFICIAL LYMPH NODE^SUPERFICIAL LYMPH NODE^^^^^S^from LOINC system list
"DATA",64.061,9878,0)
SUPERFICIAL MUSCLE^SUPERFICIAL MUSCLE^^^^^S^from LOINC system list
"DATA",64.061,9879,0)
SUPERFICIAL TISSUE.FNA^SUPERFICIAL TISSUE.FNA^^^^^S^from LOINC system list
"DATA",64.061,9880,0)
SUPERIOR MESENTERIC ARTERY+INFERIOR MESENTERIC ARTERY^SUPERIOR MESENTERIC ARTERY+INFERIOR MESENTERIC ARTERY^^^^^S^from LOINC system list
"DATA",64.061,9881,0)
SUPERIOR MESENTERIC VESSELS^SUPERIOR MESENTERIC VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9882,0)
SURGICAL SPECIMEN^SURGICAL SPECIMEN^^^^^S^from LOINC system list
"DATA",64.061,9883,0)
SWEAT^SWEAT^^^^^S^from LOINC system list
"DATA",64.061,9884,0)
SYNV FLD^SYNV FLD^^^^^S^from LOINC system list
"DATA",64.061,9885,0)
TEETH^TEETH^^^^^S^from LOINC system list
"DATA",64.061,9886,0)
THIGH VESSELS.LEFT^THIGH VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9887,0)
THIGH VESSELS.RIGHT^THIGH VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9888,0)
THYMUS GLAND^THYMUS GLAND^^^^^S^from LOINC system list
"DATA",64.061,9889,0)
THYROID.FNA^THYROID.FNA^^^^^S^from LOINC system list
"DATA",64.061,9890,0)
TIBIOPERONEAL ARTERIES.BILATERAL^TIBIOPERONEAL ARTERIES.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9891,0)
TIBIOPERONEAL ARTERIES.LEFT^TIBIOPERONEAL ARTERIES.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9892,0)
TIBIOPERONEAL ARTERIES.RIGHT^TIBIOPERONEAL ARTERIES.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9893,0)
TISSUE CHIP^TISSUE CHIP^^^^^S^from LOINC system list
"DATA",64.061,9894,0)
TISSUE CORE^TISSUE CORE^^^^^S^from LOINC system list
"DATA",64.061,9895,0)
TRACHEA^TRACHEA^^^^^S^from LOINC system list
"DATA",64.061,9896,0)
TUBE^TUBE^^^^^S^from LOINC system list
"DATA",64.061,9897,0)
UMBILICAL VESSELS^UMBILICAL VESSELS^^^^^S^from LOINC system list
"DATA",64.061,9898,0)
UNK SUB^UNK SUB^^^^^S^from LOINC system list
"DATA",64.061,9899,0)
UPPER ARM^UPPER ARM^^^^^S^from LOINC system list
"DATA",64.061,9900,0)
UPPER ARM.BILATERAL^UPPER ARM.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9901,0)
UPPER ARM.LEFT^UPPER ARM.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9902,0)
UPPER ARM.RIGHT^UPPER ARM.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9903,0)
UPPER EXTREMITY ARTERY.LEFT^UPPER EXTREMITY ARTERY.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9904,0)
UPPER EXTREMITY ARTERY.RIGHT^UPPER EXTREMITY ARTERY.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9905,0)
UPPER EXTREMITY VEIN.BILATERAL^UPPER EXTREMITY VEIN.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9906,0)
UPPER EXTREMITY VEIN.LEFT^UPPER EXTREMITY VEIN.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9907,0)
UPPER EXTREMITY VEIN.RIGHT^UPPER EXTREMITY VEIN.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9908,0)
UPPER EXTREMITY VESSEL GRAFT^UPPER EXTREMITY VESSEL GRAFT^^^^^S^from LOINC system list
"DATA",64.061,9909,0)
UPPER EXTREMITY VESSEL GRAFT.BILATERAL^UPPER EXTREMITY VESSEL GRAFT.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9910,0)
UPPER EXTREMITY VESSEL GRAFT.LEFT^UPPER EXTREMITY VESSEL GRAFT.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9911,0)
UPPER EXTREMITY VESSEL GRAFT.RIGHT^UPPER EXTREMITY VESSEL GRAFT.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9912,0)
UPPER EXTREMITY VESSELS.BILATERAL^UPPER EXTREMITY VESSELS.BILATERAL^^^^^S^from LOINC system list
"DATA",64.061,9913,0)
URINE^URINE^^^^^S^from LOINC system list
"DATA",64.061,9914,0)
URINE SED^URINE SED^^^^^S^from LOINC system list
"DATA",64.061,9915,0)
URINE+SER/PLAS^URINE+SER/PLAS^^^^^S^from LOINC system list
"DATA",64.061,9916,0)
VAS DEFERENS^VAS DEFERENS^^^^^S^from LOINC system list
"DATA",64.061,9917,0)
VESSELS.LEFT^VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9918,0)
VITR FLD^VITR FLD^^^^^S^from LOINC system list
"DATA",64.061,9919,0)
VOMITUS^VOMITUS^^^^^S^from LOINC system list
"DATA",64.061,9920,0)
WATER^WATER^^^^^S^from LOINC system list
"DATA",64.061,9921,0)
WOUND^WOUND^^^^^S^from LOINC system list
"DATA",64.061,9922,0)
WOUND.BASE^WOUND.BASE^^^^^S^from LOINC system list
"DATA",64.061,9923,0)
WOUND.DEEP^WOUND.DEEP^^^^^S^from LOINC system list
"DATA",64.061,9924,0)
WOUND.EDGE^WOUND.EDGE^^^^^S^from LOINC system list
"DATA",64.061,9925,0)
WOUND.SHLW^WOUND.SHLW^^^^^S^from LOINC system list
"DATA",64.061,9926,0)
WRIST VESSELS.LEFT^WRIST VESSELS.LEFT^^^^^S^from LOINC system list
"DATA",64.061,9927,0)
WRIST VESSELS.RIGHT^WRIST VESSELS.RIGHT^^^^^S^from LOINC system list
"DATA",64.061,9928,0)
XXX BONE^XXX BONE^^^^^S^from LOINC system list
"DATA",64.061,9929,0)
XXX STENT^XXX STENT^^^^^S^from LOINC system list
"DATA",64.061,9930,0)
XXX TUBE^XXX TUBE^^^^^S^from LOINC system list
"DATA",64.061,9931,0)
XXX~DONOR^XXX~DONOR^^^^^S^from LOINC system list
"DATA",64.061,9932,0)
{ARTERY}^{ARTERY}^^^^^S^from LOINC system list
"DATA",64.061,9933,0)
{BLOOD VESSEL}^{BLOOD VESSEL}^^^^^S^from LOINC system list
"DATA",64.061,9934,0)
{BODY SITE}^{BODY SITE}^^^^^S^from LOINC system list
"DATA",64.061,9935,0)
{DEVICE}^{DEVICE}^^^^^S^from LOINC system list
"DATA",64.061,9936,0)
{ELECTROCARDIOGRAPH LEAD}^{ELECTROCARDIOGRAPH LEAD}^^^^^S^from LOINC system list
"DATA",64.061,9937,0)
{EVENT}^{EVENT}^^^^^S^from LOINC system list
"DATA",64.061,9938,0)
{GRAFT}^{GRAFT}^^^^^S^from LOINC system list
"DATA",64.061,9939,0)
{NURSING UNIT}^{NURSING UNIT}^^^^^S^from LOINC system list
"DATA",64.061,9940,0)
{ORGAN}^{ORGAN}^^^^^S^from LOINC system list
"DATA",64.061,9941,0)
~CANCER^~CANCER^^^^^S^from LOINC system list
"DATA",64.061,9942,0)
~CAREGIVER^~CAREGIVER^^^^^S^from LOINC system list
"DATA",64.061,9943,0)
~COMMUNITY^~COMMUNITY^^^^^S^from LOINC system list
"DATA",64.061,9944,0)
~DONOR^~DONOR^^^^^S^from LOINC system list
"DATA",64.061,9945,0)
~EMBRYO^~EMBRYO^^^^^S^from LOINC system list
"DATA",64.061,9946,0)
~FAMILY MEMBER-CAREGIVER^~FAMILY MEMBER-CAREGIVER^^^^^S^from LOINC system list
"DATA",64.061,9947,0)
~FETUSES^~FETUSES^^^^^S^from LOINC system list
"DATA",64.061,9948,0)
~FETUSES.TWINS^~FETUSES.TWINS^^^^^S^from LOINC system list
"DATA",64.061,9949,0)
~POPULATION^~POPULATION^^^^^S^from LOINC system list
"DATA",64.061,9950,0)
~SIGNIFICANT OTHER^~SIGNIFICANT OTHER^^^^^S^from LOINC system list
"DATA",64.061,9951,0)
~STEM CELL PRODUCT^~STEM CELL PRODUCT^^^^^S^from LOINC system list
"DATA",64.061,9952,0)
~{SUBJECT}^~{SUBJECT}^^^^^S^from LOINC system list
"DATA",64.061,9953,0)
ATTACH.CPHS^ATTACH.CPHS^^^^^CL^LOINC Class^20
"DATA",64.061,9954,0)
DEVICES^DEVICES^^^^^CL^LOINC Class^20
"DATA",64.061,9955,0)
PANEL.CELLMARK^PANEL.CELLMARK^^^^^CL^LOINC Class^20
"DATA",64.061,9956,0)
PANEL.CV^PANEL.CV^^^^^CL^LOINC Class^20
"DATA",64.061,9957,0)
PANEL.DEVICES^PANEL.DEVICES^^^^^CL^LOINC Class^20
"DATA",64.061,9958,0)
PANEL.FERT^PANEL.FERT^^^^^CL^LOINC Class^20
"DATA",64.061,9959,0)
PANEL.HLA^PANEL.HLA^^^^^CL^LOINC Class^20
"DATA",64.061,9960,0)
PANEL.SURVEY.MDS^PANEL.SURVEY.MDS^^^^^CL^LOINC Class^20
"DATA",64.061,9961,0)
PANEL.SURVEY.OASIS^PANEL.SURVEY.OASIS^^^^^CL^LOINC Class^20
"DATA",64.061,9962,0)
PANEL.SURVEY.RFC^PANEL.SURVEY.RFC^^^^^CL^LOINC Class^20
"DATA",64.061,9963,0)
PANEL.TUMRRGT^PANEL.TUMRRGT^^^^^CL^LOINC Class^20
"DATA",64.061,9964,0)
PATH.PROTOCOLS.BRST^PATH.PROTOCOLS.BRST^^^^^CL^LOINC Class^20
"DATA",64.061,9965,0)
PATH.PROTOCOLS.GENER^PATH.PROTOCOLS.GENER^^^^^CL^LOINC Class^20
"DATA",64.061,9966,0)
PATH.PROTOCOLS.PROST^PATH.PROTOCOLS.PROST^^^^^CL^LOINC Class^20
"DATA",64.061,9967,0)
PATH.PROTOCOLS.SKIN^PATH.PROTOCOLS.SKIN^^^^^CL^LOINC Class^20
"DATA",64.061,9968,0)
PATIENT SAFETY^PATIENT SAFETY^^^^^CL^LOINC Class^20
"DATA",64.061,9969,0)
SURVEY.MDS^SURVEY.MDS^^^^^CL^LOINC Class^20
"DATA",64.061,9970,0)
SURVEY.OASIS^SURVEY.OASIS^^^^^CL^LOINC Class^20
"DATA",64.061,9971,0)
SURVEY.PHQ9^SURVEY.PHQ9^^^^^CL^LOINC Class^20
"DATA",64.061,9972,0)
SURVEY.RFC^SURVEY.RFC^^^^^CL^LOINC Class^20
"DATA",64.061,9973,0)
TRNSPLNT.ORGAN^TRNSPLNT.ORGAN^^^^^CL^LOINC Class^20
"DATA",64.061,9974,0)
 W CONTRAST IV & W RENIN SAMPLING^ W CONTRAST IV & W RENIN SAMPLING^^^^^C
"DATA",64.062,1,0)
Mass^M
"DATA",64.062,2,0)
Length^L
"DATA",64.062,3,0)
Volume^V
"DATA",64.062,4,0)
Speed^S
"DATA",64.062,5,0)
Time^T
"DATA",64.062,6,0)
Ratio^R
"DATA",64.062,7,0)
Class^C
"DATA",64.062,8,0)
Report Units^U
"DATA",64.062,9,0)
Fraction^F
"DATA",64.062,10,0)
Per^P
"DATA",64.062,11,0)
SP Db^A
"DATA",64.062,12,0)
MI Db^B
"DATA",64.062,13,0)
BB Db^B
"DATA",64.062,14,0)
SCT Heir^SCT
"DATA",64.062,15,0)
EM Db
"DATA",64.062,16,0)
CY Db
"FIA",60)
LABORATORY TEST
"FIA",60,0)
^LAB(60,
"FIA",60,0,0)
60I
"FIA",60,0,1)
y^y^p^^^^n^^n
"FIA",60,0,10)
I 1
"FIA",60,0,11)

"FIA",60,0,"RLRO")

"FIA",60,0,"VR")
5.2^LR
"FIA",60,60)
1
"FIA",60,60,51)

"FIA",60,60,100)

"FIA",60,60,200)

"FIA",60,60,300)

"FIA",60,60.01)
1
"FIA",60,60.01,.01)

"FIA",60,60.01,9)

"FIA",60,60.02)
1
"FIA",60,60.02,.01)

"FIA",60,60.03)
1
"FIA",60,60.03,.01)

"FIA",61)
TOPOGRAPHY FIELD
"FIA",61,0)
^LAB(61,
"FIA",61,0,0)
61I
"FIA",61,0,1)
y^n^p^^^^n^^n
"FIA",61,0,10)
I 1
"FIA",61,0,11)

"FIA",61,0,"RLRO")

"FIA",61,0,"VR")
5.2^LR
"FIA",61,61)
1
"FIA",61,61,.01)

"FIA",61,61,2)

"FIA",61,61,20)

"FIA",61,61,21)

"FIA",61,61,22)

"FIA",61,61,23)

"FIA",61,61.023)
0
"FIA",61,61.0231)
0
"FIA",61.2)
ETIOLOGY FIELD
"FIA",61.2,0)
^LAB(61.2,
"FIA",61.2,0,0)
61.2Is
"FIA",61.2,0,1)
y^n^p^^^^n^^n
"FIA",61.2,0,10)
I 1
"FIA",61.2,0,11)

"FIA",61.2,0,"RLRO")

"FIA",61.2,0,"VR")
5.2^LR
"FIA",61.2,61.2)
1
"FIA",61.2,61.2,.01)

"FIA",61.2,61.2,2)

"FIA",61.2,61.2,4)

"FIA",61.2,61.2,20)

"FIA",61.2,61.2,21)

"FIA",61.2,61.2,22)

"FIA",61.2,61.2,23)

"FIA",61.2,61.223)
0
"FIA",61.2,61.2231)
0
"FIA",62)
COLLECTION SAMPLE
"FIA",62,0)
^LAB(62,
"FIA",62,0,0)
62I
"FIA",62,0,1)
y^n^p^^^^n^^n
"FIA",62,0,10)
I 1
"FIA",62,0,11)

"FIA",62,0,"RLRO")

"FIA",62,0,"VR")
5.2^LR
"FIA",62,62)
1
"FIA",62,62,.01)

"FIA",62,62,20)

"FIA",62,62,21)

"FIA",62,62,22)

"FIA",62,62,23)

"FIA",62,62.023)
0
"FIA",62,62.0231)
0
"FIA",62.06)
ANTIMICROBIAL SUSCEPTIBILITY
"FIA",62.06,0)
^LAB(62.06,
"FIA",62.06,0,0)
62.06I
"FIA",62.06,0,1)
y^n^p^^^^n^^n
"FIA",62.06,0,10)

"FIA",62.06,0,11)

"FIA",62.06,0,"RLRO")

"FIA",62.06,0,"VR")
5.2^LR
"FIA",62.06,62.06)
1
"FIA",62.06,62.06,1)

"FIA",62.06,62.06,1.1)

"FIA",62.06,62.06,5)

"FIA",62.06,62.06,5.1)

"FIA",63)
LAB DATA
"FIA",63,0)
^LR(
"FIA",63,0,0)
63
"FIA",63,0,1)
y^n^p^^^^n^^n
"FIA",63,0,10)
I 1
"FIA",63,0,11)

"FIA",63,0,"RLRO")

"FIA",63,0,"VR")
5.2^LR
"FIA",63,63)
1
"FIA",63,63,.01)

"FIA",63,63,.12)

"FIA",63,63,.13)

"FIA",63,63,.14)

"FIA",63,63,14.91)

"FIA",63,63.00012)
0
"FIA",63,63.00013)
0
"FIA",63,63.00014)
0
"FIA",63,63.02)
1
"FIA",63,63.02,.31)

"FIA",63,63.02,.32)

"FIA",63,63.02,.33)

"FIA",63,63.02,.34)

"FIA",63,63.02,.342)

"FIA",63,63.02,.345)

"FIA",63,63.02,.35)

"FIA",63,63.04)
1
"FIA",63,63.04,.345)

"FIA",63,63.04,.35)

"FIA",63,63.05)
1
"FIA",63,63.05,.31)

"FIA",63,63.05,.32)

"FIA",63,63.05,.33)

"FIA",63,63.05,.34)

"FIA",63,63.05,.342)

"FIA",63,63.05,.345)

"FIA",63,63.05,.35)

"FIA",63,63.05,12)

"FIA",63,63.05,16)

"FIA",63,63.05,20)

"FIA",63,63.05,26)

"FIA",63,63.05,36)

"FIA",63,63.05,39)

"FIA",63,63.07)
0
"FIA",63,63.08)
1
"FIA",63,63.08,.31)

"FIA",63,63.08,.32)

"FIA",63,63.08,.33)

"FIA",63,63.08,.34)

"FIA",63,63.08,.342)

"FIA",63,63.08,.345)

"FIA",63,63.08,.35)

"FIA",63,63.09)
1
"FIA",63,63.09,.31)

"FIA",63,63.09,.32)

"FIA",63,63.09,.33)

"FIA",63,63.09,.34)

"FIA",63,63.09,.342)

"FIA",63,63.09,.345)

"FIA",63,63.09,.35)

"FIA",63,63.202)
1
"FIA",63,63.202,.06)

"FIA",63,63.202,.07)

"FIA",63,63.3)
1
"FIA",63,63.3,.01)

"FIA",63,63.3,.1)

"FIA",63,63.34)
1
"FIA",63,63.34,.01)

"FIA",63,63.34,.1)

"FIA",63,63.37)
1
"FIA",63,63.37,.01)

"FIA",63,63.37,.1)

"FIA",63,63.39)
1
"FIA",63,63.39,.01)

"FIA",63,63.39,.1)

"FIA",63,63.43)
1
"FIA",63,63.43,.01)

"FIA",63,63.43,.1)

"FIA",63,63.5)
0
"FIA",63,63.51)
0
"FIA",63,63.52)
0
"FIA",63,63.53)
0
"FIA",63,63.539)
0
"FIA",63,63.812)
1
"FIA",63,63.812,.06)

"FIA",63,63.812,.07)

"FIA",63,63.902)
1
"FIA",63,63.902,.06)

"FIA",63,63.902,.07)

"FIA",64)
WKLD CODE
"FIA",64,0)
^LAM(
"FIA",64,0,0)
64I
"FIA",64,0,1)
y^n^p^^^^n^^n
"FIA",64,0,10)

"FIA",64,0,11)

"FIA",64,0,"RLRO")

"FIA",64,0,"VR")
5.2^LR
"FIA",64,64)
1
"FIA",64,64,63)

"FIA",64.061)
LAB ELECTRONIC CODES
"FIA",64.061,0)
^LAB(64.061,
"FIA",64.061,0,0)
64.061I
"FIA",64.061,0,1)
y^n^f^^y^^y^o^n
"FIA",64.061,0,10)

"FIA",64.061,0,11)

"FIA",64.061,0,"RLRO")

"FIA",64.061,0,"VR")
5.2^LR
"FIA",64.061,64.061)
0
"FIA",64.061,64.614)
0
"FIA",64.062)
LAB ELECTRONIC SUBTYPES
"FIA",64.062,0)
^LAB(64.062,
"FIA",64.062,0,0)
64.062
"FIA",64.062,0,1)
y^n^f^^n^^y^o^n
"FIA",64.062,0,10)

"FIA",64.062,0,11)

"FIA",64.062,0,"RLRO")

"FIA",64.062,0,"VR")
5.2^LR
"FIA",64.062,64.062)
0
"FIA",64.5)
LAB REPORTS
"FIA",64.5,0)
^LAB(64.5,
"FIA",64.5,0,0)
64.5
"FIA",64.5,0,1)
y^y^p^^^^n^^n
"FIA",64.5,0,10)

"FIA",64.5,0,11)

"FIA",64.5,0,"RLRO")

"FIA",64.5,0,"VR")
5.2^LR
"FIA",64.5,64.5)
1
"FIA",64.5,64.53)
1
"FIA",64.5,64.53,2)

"FIA",69)
LAB ORDER ENTRY
"FIA",69,0)
^LRO(69,
"FIA",69,0,0)
69D
"FIA",69,0,1)
y^n^p^^^^n^^n
"FIA",69,0,10)

"FIA",69,0,11)

"FIA",69,0,"RLRO")

"FIA",69,0,"VR")
5.2^LR
"FIA",69,69)
1
"FIA",69,69.01)
1
"FIA",69,69.01,21)

"FIA",69,69.03)
1
"FIA",69,69.03,10)

"FIA",69.6)
LAB PENDING ORDERS ENTRY
"FIA",69.6,0)
^LRO(69.6,
"FIA",69.6,0,0)
69.6I
"FIA",69.6,0,1)
y^n^f^^^^n
"FIA",69.6,0,10)

"FIA",69.6,0,11)

"FIA",69.6,0,"RLRO")

"FIA",69.6,0,"VR")
5.2^LR
"FIA",69.6,69.6)
0
"FIA",69.6,69.6061)
0
"FIA",69.6,69.6063)
0
"FIA",69.6,69.60631)
0
"FIA",69.6,69.64)
0
"FIA",69.6,69.699)
0
"FIA",95.4)
LAB MAPPING TRANSPORT
"FIA",95.4,0)
^LAHM(95.4,
"FIA",95.4,0,0)
95.4
"FIA",95.4,0,1)
y^y^f^^^^n
"FIA",95.4,0,10)
I 1
"FIA",95.4,0,11)

"FIA",95.4,0,"RLRO")

"FIA",95.4,0,"VR")
5.2^LR
"FIA",95.4,95.4)
0
"FIA",95.4,95.401)
0
"FIA",95.4,95.4011)
0
"FRV1",64.061,"1448,0",10)
Class
"FRV1",64.061,"1448,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1449,0",10)
Class
"FRV1",64.061,"1449,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1450,0",10)
Class
"FRV1",64.061,"1450,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1451,0",10)
Class
"FRV1",64.061,"1451,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1452,0",10)
Class
"FRV1",64.061,"1452,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1453,0",10)
Class
"FRV1",64.061,"1453,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1454,0",10)
Class
"FRV1",64.061,"1454,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1455,0",10)
Class
"FRV1",64.061,"1455,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1456,0",10)
Class
"FRV1",64.061,"1456,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1457,0",10)
Class
"FRV1",64.061,"1457,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1458,0",10)
Class
"FRV1",64.061,"1458,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1459,0",10)
Class
"FRV1",64.061,"1459,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1460,0",10)
Class
"FRV1",64.061,"1460,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1461,0",10)
Class
"FRV1",64.061,"1461,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1462,0",10)
Class
"FRV1",64.061,"1462,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1463,0",10)
Class
"FRV1",64.061,"1463,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1464,0",10)
Class
"FRV1",64.061,"1464,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1465,0",10)
Class
"FRV1",64.061,"1465,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1466,0",10)
Class
"FRV1",64.061,"1466,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1467,0",10)
Class
"FRV1",64.061,"1467,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1469,0",10)
Class
"FRV1",64.061,"1469,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1470,0",10)
Class
"FRV1",64.061,"1470,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1471,0",10)
Class
"FRV1",64.061,"1471,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1472,0",10)
Class
"FRV1",64.061,"1472,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1473,0",10)
Class
"FRV1",64.061,"1473,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1474,0",10)
Class
"FRV1",64.061,"1474,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1475,0",10)
Class
"FRV1",64.061,"1475,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1476,0",10)
Class
"FRV1",64.061,"1476,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1477,0",10)
Class
"FRV1",64.061,"1477,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1478,0",10)
Class
"FRV1",64.061,"1478,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1479,0",10)
Class
"FRV1",64.061,"1479,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1481,0",10)
Class
"FRV1",64.061,"1481,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1482,0",10)
Class
"FRV1",64.061,"1482,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1483,0",10)
Class
"FRV1",64.061,"1483,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1484,0",10)
Class
"FRV1",64.061,"1484,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1485,0",10)
Class
"FRV1",64.061,"1485,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1486,0",10)
Class
"FRV1",64.061,"1486,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1487,0",10)
Class
"FRV1",64.061,"1487,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1488,0",10)
Class
"FRV1",64.061,"1488,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1489,0",10)
Class
"FRV1",64.061,"1489,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1490,0",10)
Class
"FRV1",64.061,"1490,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1491,0",10)
Class
"FRV1",64.061,"1491,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1492,0",10)
Class
"FRV1",64.061,"1492,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1493,0",10)
Class
"FRV1",64.061,"1493,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1494,0",10)
Class
"FRV1",64.061,"1494,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1495,0",10)
Class
"FRV1",64.061,"1495,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1496,0",10)
Class
"FRV1",64.061,"1496,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1497,0",10)
Class
"FRV1",64.061,"1497,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1498,0",10)
Class
"FRV1",64.061,"1498,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1499,0",10)
Class
"FRV1",64.061,"1499,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1500,0",10)
Class
"FRV1",64.061,"1500,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1501,0",10)
Class
"FRV1",64.061,"1501,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1502,0",10)
Class
"FRV1",64.061,"1502,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1503,0",10)
Class
"FRV1",64.061,"1503,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1504,0",10)
Class
"FRV1",64.061,"1504,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1505,0",10)
Class
"FRV1",64.061,"1505,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1506,0",10)
Class
"FRV1",64.061,"1506,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1507,0",10)
Class
"FRV1",64.061,"1507,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1508,0",10)
Class
"FRV1",64.061,"1508,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1509,0",10)
Class
"FRV1",64.061,"1509,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1510,0",10)
Class
"FRV1",64.061,"1510,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1511,0",10)
Class
"FRV1",64.061,"1511,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1512,0",10)
Class
"FRV1",64.061,"1512,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1513,0",10)
Class
"FRV1",64.061,"1513,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1514,0",10)
Class
"FRV1",64.061,"1514,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1515,0",10)
Class
"FRV1",64.061,"1515,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1516,0",10)
Class
"FRV1",64.061,"1516,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1517,0",10)
Class
"FRV1",64.061,"1517,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1518,0",10)
Class
"FRV1",64.061,"1518,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1519,0",10)
Class
"FRV1",64.061,"1519,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1520,0",10)
Class
"FRV1",64.061,"1520,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1521,0",10)
Report Units
"FRV1",64.061,"1521,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1522,0",10)
Report Units
"FRV1",64.061,"1522,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1523,0",10)
Report Units
"FRV1",64.061,"1523,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1524,0",10)
Report Units
"FRV1",64.061,"1524,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1525,0",10)
Report Units
"FRV1",64.061,"1525,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1526,0",10)
Report Units
"FRV1",64.061,"1526,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1527,0",10)
Report Units
"FRV1",64.061,"1527,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1528,0",10)
Report Units
"FRV1",64.061,"1528,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1529,0",10)
Report Units
"FRV1",64.061,"1529,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1530,0",10)
Report Units
"FRV1",64.061,"1530,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1531,0",10)
Report Units
"FRV1",64.061,"1531,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1532,0",10)
Report Units
"FRV1",64.061,"1532,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1533,0",10)
Report Units
"FRV1",64.061,"1533,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1534,0",10)
Report Units
"FRV1",64.061,"1534,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1535,0",10)
Report Units
"FRV1",64.061,"1535,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1536,0",10)
Report Units
"FRV1",64.061,"1536,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1537,0",10)
Report Units
"FRV1",64.061,"1537,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1538,0",10)
Report Units
"FRV1",64.061,"1538,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1539,0",10)
Report Units
"FRV1",64.061,"1539,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1540,0",10)
Report Units
"FRV1",64.061,"1540,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1541,0",10)
Report Units
"FRV1",64.061,"1541,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1542,0",10)
Report Units
"FRV1",64.061,"1542,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1543,0",10)
Report Units
"FRV1",64.061,"1543,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1544,0",10)
Report Units
"FRV1",64.061,"1544,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1545,0",10)
Report Units
"FRV1",64.061,"1545,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1546,0",10)
Report Units
"FRV1",64.061,"1546,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1547,0",10)
Report Units
"FRV1",64.061,"1547,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1548,0",10)
Report Units
"FRV1",64.061,"1548,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1549,0",10)
Report Units
"FRV1",64.061,"1549,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1550,0",10)
Report Units
"FRV1",64.061,"1550,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1551,0",10)
Report Units
"FRV1",64.061,"1551,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1552,0",10)
Report Units
"FRV1",64.061,"1552,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1553,0",10)
Report Units
"FRV1",64.061,"1553,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1554,0",10)
Report Units
"FRV1",64.061,"1554,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1555,0",10)
Report Units
"FRV1",64.061,"1555,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1556,0",10)
Report Units
"FRV1",64.061,"1556,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1557,0",10)
Report Units
"FRV1",64.061,"1557,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1558,0",10)
Report Units
"FRV1",64.061,"1558,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1559,0",10)
Report Units
"FRV1",64.061,"1559,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1560,0",10)
Report Units
"FRV1",64.061,"1560,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1561,0",10)
Report Units
"FRV1",64.061,"1561,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1562,0",10)
Report Units
"FRV1",64.061,"1562,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1563,0",10)
Report Units
"FRV1",64.061,"1563,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1564,0",10)
Report Units
"FRV1",64.061,"1564,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1565,0",10)
Report Units
"FRV1",64.061,"1565,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1566,0",10)
Ratio
"FRV1",64.061,"1566,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1567,0",10)
Report Units
"FRV1",64.061,"1567,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1568,0",10)
Report Units
"FRV1",64.061,"1568,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1569,0",10)
Report Units
"FRV1",64.061,"1569,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1570,0",10)
Report Units
"FRV1",64.061,"1570,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1571,0",10)
Report Units
"FRV1",64.061,"1571,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1572,0",10)
Report Units
"FRV1",64.061,"1572,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1573,0",10)
Report Units
"FRV1",64.061,"1573,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1574,0",10)
Report Units
"FRV1",64.061,"1574,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1575,0",10)
Report Units
"FRV1",64.061,"1575,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1576,0",10)
Report Units
"FRV1",64.061,"1576,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1577,0",10)
Report Units
"FRV1",64.061,"1577,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1578,0",10)
Report Units
"FRV1",64.061,"1578,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1579,0",10)
Report Units
"FRV1",64.061,"1579,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1580,0",10)
Report Units
"FRV1",64.061,"1580,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1581,0",10)
Report Units
"FRV1",64.061,"1581,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1582,0",10)
Report Units
"FRV1",64.061,"1582,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1583,0",10)
Report Units
"FRV1",64.061,"1583,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1584,0",10)
Report Units
"FRV1",64.061,"1584,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1585,0",10)
Ratio
"FRV1",64.061,"1585,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1587,0",10)
Ratio
"FRV1",64.061,"1587,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1588,0",10)
Report Units
"FRV1",64.061,"1588,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1589,0",10)
Report Units
"FRV1",64.061,"1589,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1590,0",10)
Ratio
"FRV1",64.061,"1590,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1591,0",10)
Report Units
"FRV1",64.061,"1591,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1592,0",10)
Report Units
"FRV1",64.061,"1592,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1593,0",10)
Report Units
"FRV1",64.061,"1593,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1594,0",10)
Report Units
"FRV1",64.061,"1594,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1595,0",10)
Report Units
"FRV1",64.061,"1595,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1596,0",10)
Report Units
"FRV1",64.061,"1596,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1597,0",10)
Report Units
"FRV1",64.061,"1597,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1598,0",10)
Report Units
"FRV1",64.061,"1598,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1599,0",10)
Report Units
"FRV1",64.061,"1599,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1600,0",10)
Report Units
"FRV1",64.061,"1600,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1601,0",10)
Report Units
"FRV1",64.061,"1601,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1602,0",10)
Report Units
"FRV1",64.061,"1602,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1603,0",10)
Report Units
"FRV1",64.061,"1603,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1604,0",10)
Report Units
"FRV1",64.061,"1604,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1605,0",10)
Report Units
"FRV1",64.061,"1605,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1606,0",10)
Report Units
"FRV1",64.061,"1606,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1607,0",10)
Report Units
"FRV1",64.061,"1607,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1608,0",10)
Ratio
"FRV1",64.061,"1608,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1609,0",10)
Ratio
"FRV1",64.061,"1609,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1610,0",10)
Report Units
"FRV1",64.061,"1610,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1611,0",10)
Report Units
"FRV1",64.061,"1611,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1612,0",10)
Report Units
"FRV1",64.061,"1612,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1613,0",10)
Report Units
"FRV1",64.061,"1613,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"1614,0",10)
Report Units
"FRV1",64.061,"1614,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"195,0",10)
Report Units
"FRV1",64.061,"195,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"196,0",10)
Report Units
"FRV1",64.061,"196,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"197,0",10)
Report Units
"FRV1",64.061,"197,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"198,0",10)
Report Units
"FRV1",64.061,"198,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"199,0",10)
Report Units
"FRV1",64.061,"199,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"200,0",10)
Report Units
"FRV1",64.061,"200,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"208,0",10)
Report Units
"FRV1",64.061,"208,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"209,0",10)
Report Units
"FRV1",64.061,"209,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"210,0",10)
Report Units
"FRV1",64.061,"210,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"211,0",10)
Mass
"FRV1",64.061,"211,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"212,0",10)
Length
"FRV1",64.061,"212,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"213,0",10)
Volume
"FRV1",64.061,"213,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"216,0",10)
Time
"FRV1",64.061,"216,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2163,0",10)
Class
"FRV1",64.061,"2163,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2164,0",10)
Class
"FRV1",64.061,"2164,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2165,0",10)
Class
"FRV1",64.061,"2165,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2166,0",10)
Class
"FRV1",64.061,"2166,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2167,0",10)
Class
"FRV1",64.061,"2167,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2168,0",10)
Class
"FRV1",64.061,"2168,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2169,0",10)
Class
"FRV1",64.061,"2169,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"217,0",10)
Mass
"FRV1",64.061,"217,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2170,0",10)
Class
"FRV1",64.061,"2170,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2171,0",10)
Class
"FRV1",64.061,"2171,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2172,0",10)
Class
"FRV1",64.061,"2172,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2173,0",10)
Class
"FRV1",64.061,"2173,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2174,0",10)
Class
"FRV1",64.061,"2174,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2175,0",10)
Class
"FRV1",64.061,"2175,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2176,0",10)
Class
"FRV1",64.061,"2176,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2177,0",10)
Class
"FRV1",64.061,"2177,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2178,0",10)
Class
"FRV1",64.061,"2178,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2179,0",10)
Class
"FRV1",64.061,"2179,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"218,0",10)
Volume
"FRV1",64.061,"218,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2180,0",10)
Class
"FRV1",64.061,"2180,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2181,0",10)
Class
"FRV1",64.061,"2181,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2182,0",10)
Class
"FRV1",64.061,"2182,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"2183,0",10)
Class
"FRV1",64.061,"2183,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"219,0",10)
Length
"FRV1",64.061,"219,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"221,0",10)
Report Units
"FRV1",64.061,"221,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"224,0",10)
Report Units
"FRV1",64.061,"224,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"225,0",10)
Mass
"FRV1",64.061,"225,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"226,0",10)
Volume
"FRV1",64.061,"226,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"227,0",10)
Volume
"FRV1",64.061,"227,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"228,0",10)
Length
"FRV1",64.061,"228,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"229,0",10)
Report Units
"FRV1",64.061,"229,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"230,0",10)
Length
"FRV1",64.061,"230,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"231,0",10)
Length
"FRV1",64.061,"231,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"232,0",10)
Volume
"FRV1",64.061,"232,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"233,0",10)
Report Units
"FRV1",64.061,"233,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"234,0",10)
Mass
"FRV1",64.061,"234,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"235,0",10)
Report Units
"FRV1",64.061,"235,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"236,0",10)
Report Units
"FRV1",64.061,"236,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"238,0",10)
Mass
"FRV1",64.061,"238,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"239,0",10)
Volume
"FRV1",64.061,"239,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"240,0",10)
Time
"FRV1",64.061,"240,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"241,0",10)
Length
"FRV1",64.061,"241,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"242,0",10)
Report Units
"FRV1",64.061,"242,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"243,0",10)
Report Units
"FRV1",64.061,"243,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"244,0",10)
Report Units
"FRV1",64.061,"244,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"247,0",10)
Report Units
"FRV1",64.061,"247,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"248,0",10)
Mass
"FRV1",64.061,"248,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"249,0",10)
Length
"FRV1",64.061,"249,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"250,0",10)
Mass
"FRV1",64.061,"250,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"251,0",10)
Report Units
"FRV1",64.061,"251,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"252,0",10)
Volume
"FRV1",64.061,"252,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"253,0",10)
Report Units
"FRV1",64.061,"253,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"256,0",10)
Report Units
"FRV1",64.061,"256,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"257,0",10)
Report Units
"FRV1",64.061,"257,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"258,0",10)
Report Units
"FRV1",64.061,"258,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"259,0",10)
Report Units
"FRV1",64.061,"259,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"260,0",10)
Report Units
"FRV1",64.061,"260,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"261,0",10)
Report Units
"FRV1",64.061,"261,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"262,0",10)
Mass
"FRV1",64.061,"262,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"263,0",10)
Report Units
"FRV1",64.061,"263,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"264,0",10)
Report Units
"FRV1",64.061,"264,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"265,0",10)
Volume
"FRV1",64.061,"265,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"266,0",10)
Report Units
"FRV1",64.061,"266,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"267,0",10)
Time
"FRV1",64.061,"267,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"268,0",10)
Report Units
"FRV1",64.061,"268,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"269,0",10)
Report Units
"FRV1",64.061,"269,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"270,0",10)
Report Units
"FRV1",64.061,"270,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"272,0",10)
Report Units
"FRV1",64.061,"272,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"273,0",10)
Report Units
"FRV1",64.061,"273,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"274,0",10)
Report Units
"FRV1",64.061,"274,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"275,0",10)
Report Units
"FRV1",64.061,"275,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"276,0",10)
Report Units
"FRV1",64.061,"276,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"277,0",10)
Ratio
"FRV1",64.061,"277,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"278,0",10)
Report Units
"FRV1",64.061,"278,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"279,0",10)
Mass
"FRV1",64.061,"279,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"280,0",10)
Report Units
"FRV1",64.061,"280,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"281,0",10)
Report Units
"FRV1",64.061,"281,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"283,0",10)
Time
"FRV1",64.061,"283,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"285,0",10)
Length
"FRV1",64.061,"285,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"286,0",10)
Report Units
"FRV1",64.061,"286,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"287,0",10)
Report Units
"FRV1",64.061,"287,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"288,0",10)
Report Units
"FRV1",64.061,"288,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"289,0",10)
Volume
"FRV1",64.061,"289,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"290,0",10)
Report Units
"FRV1",64.061,"290,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"292,0",10)
Length
"FRV1",64.061,"292,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"293,0",10)
Report Units
"FRV1",64.061,"293,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"295,0",10)
Report Units
"FRV1",64.061,"295,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"296,0",10)
Length
"FRV1",64.061,"296,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"297,0",10)
Report Units
"FRV1",64.061,"297,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"298,0",10)
Report Units
"FRV1",64.061,"298,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"300,0",10)
Report Units
"FRV1",64.061,"300,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"301,0",10)
Report Units
"FRV1",64.061,"301,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"302,0",10)
Report Units
"FRV1",64.061,"302,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"304,0",10)
Report Units
"FRV1",64.061,"304,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"305,0",10)
Time
"FRV1",64.061,"305,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"306,0",10)
Time
"FRV1",64.061,"306,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"307,0",10)
Report Units
"FRV1",64.061,"307,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"310,0",10)
Length
"FRV1",64.061,"310,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"311,0",10)
Report Units
"FRV1",64.061,"311,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"312,0",10)
Report Units
"FRV1",64.061,"312,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"313,0",10)
Report Units
"FRV1",64.061,"313,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"314,0",10)
Mass
"FRV1",64.061,"314,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"315,0",10)
Volume
"FRV1",64.061,"315,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"316,0",10)
Length
"FRV1",64.061,"316,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"317,0",10)
Report Units
"FRV1",64.061,"317,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"318,0",10)
Ratio
"FRV1",64.061,"318,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"320,0",10)
Volume
"FRV1",64.061,"320,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"322,0",10)
Length
"FRV1",64.061,"322,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"323,0",10)
Report Units
"FRV1",64.061,"323,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"324,0",10)
Report Units
"FRV1",64.061,"324,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"325,0",10)
Mass
"FRV1",64.061,"325,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"326,0",10)
Report Units
"FRV1",64.061,"326,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"327,0",10)
Volume
"FRV1",64.061,"327,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"328,0",10)
Report Units
"FRV1",64.061,"328,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"329,0",10)
Report Units
"FRV1",64.061,"329,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"330,0",10)
Report Units
"FRV1",64.061,"330,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"331,0",10)
Volume
"FRV1",64.061,"331,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"332,0",10)
Volume
"FRV1",64.061,"332,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"333,0",10)
Time
"FRV1",64.061,"333,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"335,0",10)
Volume
"FRV1",64.061,"335,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"336,0",10)
Volume
"FRV1",64.061,"336,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"337,0",10)
Volume
"FRV1",64.061,"337,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"338,0",10)
Volume
"FRV1",64.061,"338,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"339,0",10)
Volume
"FRV1",64.061,"339,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"340,0",10)
Volume
"FRV1",64.061,"340,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"342,0",10)
Time
"FRV1",64.061,"342,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"343,0",10)
Mass
"FRV1",64.061,"343,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"345,0",10)
Mass
"FRV1",64.061,"345,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"346,0",10)
Report Units
"FRV1",64.061,"346,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"347,0",10)
Length
"FRV1",64.061,"347,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"348,0",10)
Report Units
"FRV1",64.061,"348,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"350,0",10)
Report Units
"FRV1",64.061,"350,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"351,0",10)
Report Units
"FRV1",64.061,"351,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"352,0",10)
Report Units
"FRV1",64.061,"352,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"353,0",10)
Report Units
"FRV1",64.061,"353,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"355,0",10)
Time
"FRV1",64.061,"355,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"356,0",10)
Length
"FRV1",64.061,"356,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"357,0",10)
Time
"FRV1",64.061,"357,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"369,0",10)
Time
"FRV1",64.061,"369,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"371,0",10)
Time
"FRV1",64.061,"371,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"372,0",10)
Time
"FRV1",64.061,"372,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"373,0",10)
Time
"FRV1",64.061,"373,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"374,0",10)
Time
"FRV1",64.061,"374,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"375,0",10)
Time
"FRV1",64.061,"375,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"376,0",10)
Time
"FRV1",64.061,"376,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"377,0",10)
Time
"FRV1",64.061,"377,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"378,0",10)
Time
"FRV1",64.061,"378,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"379,0",10)
Time
"FRV1",64.061,"379,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"380,0",10)
Time
"FRV1",64.061,"380,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"381,0",10)
Time
"FRV1",64.061,"381,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"382,0",10)
Time
"FRV1",64.061,"382,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"383,0",10)
Time
"FRV1",64.061,"383,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"384,0",10)
Time
"FRV1",64.061,"384,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"385,0",10)
Time
"FRV1",64.061,"385,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"386,0",10)
Time
"FRV1",64.061,"386,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"387,0",10)
Time
"FRV1",64.061,"387,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"388,0",10)
Time
"FRV1",64.061,"388,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"389,0",10)
Time
"FRV1",64.061,"389,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"390,0",10)
Time
"FRV1",64.061,"390,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"391,0",10)
Time
"FRV1",64.061,"391,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"392,0",10)
Time
"FRV1",64.061,"392,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"393,0",10)
Time
"FRV1",64.061,"393,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"394,0",10)
Time
"FRV1",64.061,"394,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"395,0",10)
Time
"FRV1",64.061,"395,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"397,0",10)
Time
"FRV1",64.061,"397,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"398,0",10)
Time
"FRV1",64.061,"398,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"399,0",10)
Time
"FRV1",64.061,"399,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"400,0",10)
Time
"FRV1",64.061,"400,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"401,0",10)
Time
"FRV1",64.061,"401,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"402,0",10)
Time
"FRV1",64.061,"402,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"403,0",10)
Time
"FRV1",64.061,"403,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"404,0",10)
Time
"FRV1",64.061,"404,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"405,0",10)
Time
"FRV1",64.061,"405,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"406,0",10)
Time
"FRV1",64.061,"406,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"407,0",10)
Time
"FRV1",64.061,"407,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"408,0",10)
Time
"FRV1",64.061,"408,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"409,0",10)
Time
"FRV1",64.061,"409,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"410,0",10)
Time
"FRV1",64.061,"410,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"411,0",10)
Time
"FRV1",64.061,"411,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"412,0",10)
Time
"FRV1",64.061,"412,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"420,0",10)
Report Units
"FRV1",64.061,"420,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"441,0",10)
Time
"FRV1",64.061,"441,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"445,0",10)
Time
"FRV1",64.061,"445,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"446,0",10)
Time
"FRV1",64.061,"446,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"447,0",10)
Time
"FRV1",64.061,"447,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"448,0",10)
Time
"FRV1",64.061,"448,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"449,0",10)
Time
"FRV1",64.061,"449,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"450,0",10)
Time
"FRV1",64.061,"450,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"451,0",10)
Time
"FRV1",64.061,"451,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"452,0",10)
Time
"FRV1",64.061,"452,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"453,0",10)
Time
"FRV1",64.061,"453,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"506,0",10)
Ratio
"FRV1",64.061,"506,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"507,0",10)
Ratio
"FRV1",64.061,"507,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"508,0",10)
Ratio
"FRV1",64.061,"508,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"509,0",10)
Ratio
"FRV1",64.061,"509,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"510,0",10)
Ratio
"FRV1",64.061,"510,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5363,0",10)
Report Units
"FRV1",64.061,"5363,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5364,0",10)
Report Units
"FRV1",64.061,"5364,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5365,0",10)
Report Units
"FRV1",64.061,"5365,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5366,0",10)
Report Units
"FRV1",64.061,"5366,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5367,0",10)
Report Units
"FRV1",64.061,"5367,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5368,0",10)
Report Units
"FRV1",64.061,"5368,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5369,0",10)
Report Units
"FRV1",64.061,"5369,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5370,0",10)
Report Units
"FRV1",64.061,"5370,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5371,0",10)
Report Units
"FRV1",64.061,"5371,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5372,0",10)
Report Units
"FRV1",64.061,"5372,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5373,0",10)
Report Units
"FRV1",64.061,"5373,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5374,0",10)
Report Units
"FRV1",64.061,"5374,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5375,0",10)
Report Units
"FRV1",64.061,"5375,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5376,0",10)
Report Units
"FRV1",64.061,"5376,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5377,0",10)
Report Units
"FRV1",64.061,"5377,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5378,0",10)
Report Units
"FRV1",64.061,"5378,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"5393,0",10)
Class
"FRV1",64.061,"5393,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"560,0",10)
Report Units
"FRV1",64.061,"560,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"563,0",10)
Report Units
"FRV1",64.061,"563,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"565,0",10)
Report Units
"FRV1",64.061,"565,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"8615,0",10)
Time
"FRV1",64.061,"8615,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"8780,0",10)
Time
"FRV1",64.061,"8780,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9189,0",10)
MI Db
"FRV1",64.061,"9189,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9189,63",4)
SCT Organism
"FRV1",64.061,"9189,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9190,0",10)
MI Db
"FRV1",64.061,"9190,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9190,63",4)
SCT Qualifier Value
"FRV1",64.061,"9190,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9191,0",10)
MI Db
"FRV1",64.061,"9191,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9191,63",4)
SCT Procedure
"FRV1",64.061,"9191,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9192,0",10)
MI Db
"FRV1",64.061,"9192,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9192,63",4)
SCT Procedure
"FRV1",64.061,"9192,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9193,0",10)
MI Db
"FRV1",64.061,"9193,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9193,63",4)
SCT Qualifier Value
"FRV1",64.061,"9193,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9194,0",10)
MI Db
"FRV1",64.061,"9194,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9194,63",4)
SCT Procedure
"FRV1",64.061,"9194,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9195,0",10)
MI Db
"FRV1",64.061,"9195,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9195,63",4)
SCT Procedure
"FRV1",64.061,"9195,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9196,0",10)
MI Db
"FRV1",64.061,"9196,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9196,63",4)
SCT Procedure
"FRV1",64.061,"9196,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9197,0",10)
MI Db
"FRV1",64.061,"9197,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9197,63",4)
SCT Qualifier Value
"FRV1",64.061,"9197,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9198,0",10)
MI Db
"FRV1",64.061,"9198,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9198,63",4)
SCT Procedure
"FRV1",64.061,"9198,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9199,0",10)
MI Db
"FRV1",64.061,"9199,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9199,63",4)
SCT Organism
"FRV1",64.061,"9199,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9200,0",10)
MI Db
"FRV1",64.061,"9200,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9200,63",4)
SCT Procedure
"FRV1",64.061,"9200,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9201,0",10)
MI Db
"FRV1",64.061,"9201,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9201,63",4)
SCT Qualifier Value
"FRV1",64.061,"9201,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9202,0",10)
MI Db
"FRV1",64.061,"9202,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9202,63",4)
SCT Procedure
"FRV1",64.061,"9202,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9203,0",10)
MI Db
"FRV1",64.061,"9203,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9203,63",4)
SCT Organism
"FRV1",64.061,"9203,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9204,0",10)
MI Db
"FRV1",64.061,"9204,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9204,63",4)
SCT Procedure
"FRV1",64.061,"9204,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9205,0",10)
MI Db
"FRV1",64.061,"9205,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9205,63",4)
SCT Qualifier Value
"FRV1",64.061,"9205,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9206,0",10)
MI Db
"FRV1",64.061,"9206,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9206,63",4)
SCT Organism
"FRV1",64.061,"9206,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9207,0",10)
MI Db
"FRV1",64.061,"9207,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9207,63",4)
SCT Procedure
"FRV1",64.061,"9207,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9208,0",10)
MI Db
"FRV1",64.061,"9208,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9208,63",4)
SCT Attribute
"FRV1",64.061,"9208,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9209,0",10)
MI Db
"FRV1",64.061,"9209,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9209,63",4)
SCT Qualifier Value
"FRV1",64.061,"9209,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9210,0",10)
MI Db
"FRV1",64.061,"9210,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9210,63",4)
SCT Organism
"FRV1",64.061,"9210,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9211,0",10)
MI Db
"FRV1",64.061,"9211,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9211,63",4)
SCT Procedure
"FRV1",64.061,"9211,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9212,0",10)
MI Db
"FRV1",64.061,"9212,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9212,63",4)
SCT Observable Entity
"FRV1",64.061,"9212,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9241,0",10)
SP Db
"FRV1",64.061,"9241,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9242,0",10)
SP Db
"FRV1",64.061,"9242,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9243,0",10)
SP Db
"FRV1",64.061,"9243,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9244,0",10)
SP Db
"FRV1",64.061,"9244,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9245,0",10)
SP Db
"FRV1",64.061,"9245,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9246,0",10)
SP Db
"FRV1",64.061,"9246,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9247,0",10)
SP Db
"FRV1",64.061,"9247,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9248,0",10)
SP Db
"FRV1",64.061,"9248,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9249,0",10)
SP Db
"FRV1",64.061,"9249,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9250,0",10)
SP Db
"FRV1",64.061,"9250,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9251,0",10)
SP Db
"FRV1",64.061,"9251,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9252,0",10)
MI Db
"FRV1",64.061,"9252,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9252,63",4)
SCT Qualifier Value
"FRV1",64.061,"9252,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9253,0",10)
MI Db
"FRV1",64.061,"9253,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9253,63",4)
SCT Qualifier Value
"FRV1",64.061,"9253,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9254,0",10)
MI Db
"FRV1",64.061,"9254,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9254,63",4)
SCT Attribute
"FRV1",64.061,"9254,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9255,0",10)
MI Db
"FRV1",64.061,"9255,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9255,63",4)
SCT Qualifier Value
"FRV1",64.061,"9255,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9256,0",10)
MI Db
"FRV1",64.061,"9256,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9256,63",4)
SCT Qualifier Value
"FRV1",64.061,"9256,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9257,0",10)
MI Db
"FRV1",64.061,"9257,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9257,63",4)
SCT Attribute
"FRV1",64.061,"9257,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9258,0",10)
MI Db
"FRV1",64.061,"9258,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9258,63",4)
SCT Qualifier Value
"FRV1",64.061,"9258,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9259,0",10)
MI Db
"FRV1",64.061,"9259,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9259,63",4)
SCT Qualifier Value
"FRV1",64.061,"9259,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9260,0",10)
MI Db
"FRV1",64.061,"9260,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9260,63",4)
SCT Attribute
"FRV1",64.061,"9260,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9261,0",10)
MI Db
"FRV1",64.061,"9261,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9261,63",4)
SCT Qualifier Value
"FRV1",64.061,"9261,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9262,0",10)
MI Db
"FRV1",64.061,"9262,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9262,63",4)
SCT Attribute
"FRV1",64.061,"9262,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9263,0",10)
CY Db
"FRV1",64.061,"9263,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9264,0",10)
CY Db
"FRV1",64.061,"9264,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9265,0",10)
CY Db
"FRV1",64.061,"9265,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9266,0",10)
CY Db
"FRV1",64.061,"9266,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9267,0",10)
CY Db
"FRV1",64.061,"9267,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9268,0",10)
CY Db
"FRV1",64.061,"9268,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9269,0",10)
CY Db
"FRV1",64.061,"9269,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9270,0",10)
MI Db
"FRV1",64.061,"9270,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9270,63",4)
SCT Qualifier Value
"FRV1",64.061,"9270,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9271,0",10)
CY Db
"FRV1",64.061,"9271,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9272,0",10)
CY Db
"FRV1",64.061,"9272,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9273,0",10)
CY Db
"FRV1",64.061,"9273,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9274,0",10)
MI Db
"FRV1",64.061,"9274,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9274,63",4)
SCT Qualifier Value
"FRV1",64.061,"9274,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9275,0",10)
MI Db
"FRV1",64.061,"9275,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9275,63",4)
SCT Qualifier Value
"FRV1",64.061,"9275,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9276,0",10)
MI Db
"FRV1",64.061,"9276,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9276,63",4)
SCT Qualifier Value
"FRV1",64.061,"9276,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9277,0",10)
MI Db
"FRV1",64.061,"9277,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9277,63",4)
SCT Qualifier Value
"FRV1",64.061,"9277,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9278,0",10)
MI Db
"FRV1",64.061,"9278,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9278,63",4)
SCT Qualifier Value
"FRV1",64.061,"9278,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9279,0",10)
CY Db
"FRV1",64.061,"9279,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9280,0",10)
MI Db
"FRV1",64.061,"9280,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9280,63",4)
SCT Qualifier Value
"FRV1",64.061,"9280,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9281,0",10)
CY Db
"FRV1",64.061,"9281,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9282,0",10)
SP Db
"FRV1",64.061,"9282,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9283,0",10)
MI Db
"FRV1",64.061,"9283,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9283,63",4)
SCT Qualifier Value
"FRV1",64.061,"9283,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9284,0",10)
SP Db
"FRV1",64.061,"9284,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9285,0",10)
MI Db
"FRV1",64.061,"9285,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9285,63",4)
SCT Attribute
"FRV1",64.061,"9285,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9286,0",10)
MI Db
"FRV1",64.061,"9286,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9286,63",4)
SCT Qualifier Value
"FRV1",64.061,"9286,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9287,0",10)
MI Db
"FRV1",64.061,"9287,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9287,63",4)
SCT Qualifier Value
"FRV1",64.061,"9287,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9288,0",10)
MI Db
"FRV1",64.061,"9288,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9288,63",4)
SCT Attribute
"FRV1",64.061,"9288,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9289,0",10)
MI Db
"FRV1",64.061,"9289,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9289,63",4)
SCT Attribute
"FRV1",64.061,"9289,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9290,0",10)
MI Db
"FRV1",64.061,"9290,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9290,63",4)
SCT Social Concept
"FRV1",64.061,"9290,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9291,0",10)
MI Db
"FRV1",64.061,"9291,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9291,63",4)
SCT Procedure
"FRV1",64.061,"9291,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9292,0",10)
MI Db
"FRV1",64.061,"9292,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9292,63",4)
SCT Social Concept
"FRV1",64.061,"9292,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9293,0",10)
MI Db
"FRV1",64.061,"9293,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9293,63",4)
SCT Qualifier Value
"FRV1",64.061,"9293,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9294,0",10)
MI Db
"FRV1",64.061,"9294,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9294,63",4)
SCT Social Concept
"FRV1",64.061,"9294,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9295,0",10)
MI Db
"FRV1",64.061,"9295,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9295,63",4)
SCT Qualifier Value
"FRV1",64.061,"9295,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9296,0",10)
MI Db
"FRV1",64.061,"9296,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9296,63",4)
SCT Social Concept
"FRV1",64.061,"9296,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9297,0",10)
MI Db
"FRV1",64.061,"9297,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9297,63",4)
SCT Qualifier Value
"FRV1",64.061,"9297,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9298,0",10)
MI Db
"FRV1",64.061,"9298,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9298,63",4)
SCT Social Concept
"FRV1",64.061,"9298,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9299,0",10)
MI Db
"FRV1",64.061,"9299,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9299,63",4)
SCT Qualifier Value
"FRV1",64.061,"9299,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9300,0",10)
MI Db
"FRV1",64.061,"9300,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9300,63",4)
SCT Social Concept
"FRV1",64.061,"9300,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9301,0",10)
EM Db
"FRV1",64.061,"9301,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9302,0",10)
EM Db
"FRV1",64.061,"9302,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9303,0",10)
EM Db
"FRV1",64.061,"9303,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9304,0",10)
EM Db
"FRV1",64.061,"9304,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9305,0",10)
EM Db
"FRV1",64.061,"9305,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9306,0",10)
EM Db
"FRV1",64.061,"9306,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9307,0",10)
EM Db
"FRV1",64.061,"9307,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9308,0",10)
EM Db
"FRV1",64.061,"9308,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9309,0",10)
EM Db
"FRV1",64.061,"9309,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9310,0",10)
EM Db
"FRV1",64.061,"9310,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9311,0",10)
EM Db
"FRV1",64.061,"9311,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9312,0",10)
EM Db
"FRV1",64.061,"9312,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9313,0",10)
SCT Heir
"FRV1",64.061,"9313,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9314,0",10)
SCT Heir
"FRV1",64.061,"9314,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9315,0",10)
SCT Heir
"FRV1",64.061,"9315,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9316,0",10)
SCT Heir
"FRV1",64.061,"9316,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9317,0",10)
SCT Heir
"FRV1",64.061,"9317,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9318,0",10)
SCT Heir
"FRV1",64.061,"9318,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9319,0",10)
SCT Heir
"FRV1",64.061,"9319,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9320,0",10)
SCT Heir
"FRV1",64.061,"9320,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9321,0",10)
SCT Heir
"FRV1",64.061,"9321,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9322,0",10)
SCT Heir
"FRV1",64.061,"9322,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9323,0",10)
SCT Heir
"FRV1",64.061,"9323,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9324,0",10)
SCT Heir
"FRV1",64.061,"9324,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9325,0",10)
SCT Heir
"FRV1",64.061,"9325,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9326,0",10)
SCT Heir
"FRV1",64.061,"9326,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9327,0",10)
SCT Heir
"FRV1",64.061,"9327,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9328,0",10)
SCT Heir
"FRV1",64.061,"9328,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9329,0",10)
SCT Heir
"FRV1",64.061,"9329,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9330,0",10)
SCT Heir
"FRV1",64.061,"9330,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9332,0",10)
MI Db
"FRV1",64.061,"9332,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9332,63",4)
SCT Qualifier Value
"FRV1",64.061,"9332,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9333,0",10)
MI Db
"FRV1",64.061,"9333,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9333,63",4)
SCT Qualifier Value
"FRV1",64.061,"9333,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9334,0",10)
SP Db
"FRV1",64.061,"9334,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9335,0",10)
SP Db
"FRV1",64.061,"9335,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9336,0",10)
SP Db
"FRV1",64.061,"9336,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9337,0",10)
SCT Heir
"FRV1",64.061,"9337,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9338,0",10)
SCT Heir
"FRV1",64.061,"9338,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9339,0",10)
SCT Heir
"FRV1",64.061,"9339,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9340,0",10)
SCT Heir
"FRV1",64.061,"9340,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9341,0",10)
SCT Heir
"FRV1",64.061,"9341,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9342,0",10)
SCT Heir
"FRV1",64.061,"9342,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9343,0",10)
SCT Heir
"FRV1",64.061,"9343,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9344,0",10)
SCT Heir
"FRV1",64.061,"9344,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9345,0",10)
SCT Heir
"FRV1",64.061,"9345,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9346,0",10)
MI Db
"FRV1",64.061,"9346,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9346,63",4)
SCT Qualifier Value
"FRV1",64.061,"9346,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9348,0",10)
SCT Heir
"FRV1",64.061,"9348,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9349,0",10)
SCT Heir
"FRV1",64.061,"9349,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9350,0",10)
SCT Heir
"FRV1",64.061,"9350,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9351,0",10)
SCT Heir
"FRV1",64.061,"9351,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9352,0",10)
SCT Heir
"FRV1",64.061,"9352,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9353,0",10)
SCT Heir
"FRV1",64.061,"9353,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9354,0",10)
SCT Heir
"FRV1",64.061,"9354,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9355,0",10)
SCT Heir
"FRV1",64.061,"9355,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9356,0",10)
SCT Heir
"FRV1",64.061,"9356,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9357,0",10)
SCT Heir
"FRV1",64.061,"9357,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9358,0",10)
SCT Heir
"FRV1",64.061,"9358,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9359,0",10)
SCT Heir
"FRV1",64.061,"9359,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9360,0",10)
SCT Heir
"FRV1",64.061,"9360,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9361,0",10)
CY Db
"FRV1",64.061,"9361,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9362,0",10)
EM Db
"FRV1",64.061,"9362,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9363,0",10)
CY Db
"FRV1",64.061,"9363,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9364,0",10)
EM Db
"FRV1",64.061,"9364,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9365,0",10)
MI Db
"FRV1",64.061,"9365,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9365,63",4)
SCT Procedure
"FRV1",64.061,"9365,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9366,0",10)
EM Db
"FRV1",64.061,"9366,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9367,0",10)
SP Db
"FRV1",64.061,"9367,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9368,0",10)
EM Db
"FRV1",64.061,"9368,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9369,0",10)
CY Db
"FRV1",64.061,"9369,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9370,0",10)
SP Db
"FRV1",64.061,"9370,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9370,63",4)
SCT Qualifier Value
"FRV1",64.061,"9370,63",4,"F")
;LAB(64.061,
"FRV1",64.061,"9371,0",10)
CY Db
"FRV1",64.061,"9371,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9372,0",10)
MI Db
"FRV1",64.061,"9372,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9692,0",10)
Time
"FRV1",64.061,"9692,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9693,0",10)
Time
"FRV1",64.061,"9693,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9694,0",10)
Time
"FRV1",64.061,"9694,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9695,0",10)
Time
"FRV1",64.061,"9695,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9696,0",10)
Time
"FRV1",64.061,"9696,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9697,0",10)
Time
"FRV1",64.061,"9697,0",10,"F")
;LAB(64.062,
"FRV1",64.061,"9698,0",10)
Time
"FRV1",64.061,"9698,0",10,"F")
;LAB(64.062,
"INI")
PRE^LR350A
"INIT")
POST^LR350A
"IX",61,61,"AD",0)
61^AD^Whole file cross-reference on STS transaction numbers^R^^F^IR^W^61.023^^^^^S
"IX",61,61,"AD",.1,0)
^^2^2^3090610^
"IX",61,61,"AD",.1,1,0)
Index to cross-reference the transaction numbers associated with 
"IX",61,61,"AD",.1,2,0)
submission and disposition of terms by STS.
"IX",61,61,"AD",1)
S ^LAB(61,"AD",$E(X,1,45),DA(1),DA)=""
"IX",61,61,"AD",2)
K ^LAB(61,"AD",$E(X,1,45),DA(1),DA)
"IX",61,61,"AD",2.5)
K ^LAB(61,"AD")
"IX",61,61,"AD",11.1,0)
^.114IA^1^1
"IX",61,61,"AD",11.1,1,0)
1^F^61.023^2^45^1^F
"IX",61,61,"AD",11.1,1,3)

"IX",61,61,"AERT",0)
61^AERT^Send ERT alert if needed.^MU^^R^^I^61^^^^^A
"IX",61,61,"AERT",.1,0)
^^2^2^3090609^
"IX",61,61,"AERT",.1,1,0)
Action cross reference for sending ERT alerts when an entry is added or 
"IX",61,61,"AERT",.1,2,0)
modified.
"IX",61,61,"AERT",1)
D TASK^LRERT1(61,DA)
"IX",61,61,"AERT",1.4)
S X=$S('$D(LRFMERTS):1,1:0)
"IX",61,61,"AERT",2)
Q
"IX",61,61,"AERT",2.4)
S X=0
"IX",61,61,"AERT",11.1,0)
^.114IA^2^2
"IX",61,61,"AERT",11.1,1,0)
1^F^61^.01^^^F
"IX",61,61,"AERT",11.1,2,0)
2^F^61^20^^^F
"IX",61,61.023,"AC",0)
61.023^AC^Regular cross-reference on STS transaction numbers^R^^F^IR^I^61.023^^^^^S
"IX",61,61.023,"AC",.1,0)
^^2^2^3090610^
"IX",61,61.023,"AC",.1,1,0)
Index to cross-reference the transaction numbers associated with 
"IX",61,61.023,"AC",.1,2,0)
submission and disposition of terms by STS within this multiple.
"IX",61,61.023,"AC",1)
S ^LAB(61,DA(1),"SCT1","AC",$E(X,1,45),DA)=""
"IX",61,61.023,"AC",2)
K ^LAB(61,DA(1),"SCT1","AC",$E(X,1,45),DA)
"IX",61,61.023,"AC",2.5)
K ^LAB(61,DA(1),"SCT1","AC")
"IX",61,61.023,"AC",11.1,0)
^.114IA^1^1
"IX",61,61.023,"AC",11.1,1,0)
1^F^61.023^2^45^1^F
"IX",61,61.023,"AC",11.1,1,3)

"IX",61.2,61.2,"AD",0)
61.2^AD^Special xref for valid SCT and duplicate SCT screening^MU^^F^IR^I^61.2^^^^^A
"IX",61.2,61.2,"AD",1)
N LRY S LRY=$$SCTCHK^LRXREF($G(X2(1)),DA) D:LRY<1 DELSCT^LRXREF(DA)
"IX",61.2,61.2,"AD",1.4)
S X=$S('$D(LRFMERTS):1,1:0)
"IX",61.2,61.2,"AD",2)
Q
"IX",61.2,61.2,"AD",11.1,0)
^.114IA^1^1
"IX",61.2,61.2,"AD",11.1,1,0)
1^F^61.2^20^^1^F
"IX",61.2,61.2,"AERT",0)
61.2^AERT^Send ERT alert if needed.^MU^^R^^I^61.2^^^^^A
"IX",61.2,61.2,"AERT",.1,0)
^^3^3^3080215^^^
"IX",61.2,61.2,"AERT",.1,1,0)
Action cross reference for sending ERT alerts when an entry is added or 
"IX",61.2,61.2,"AERT",.1,2,0)
modified.
"IX",61.2,61.2,"AERT",.1,3,0)

"IX",61.2,61.2,"AERT",1)
D TASK^LRERT1(61.2,DA)
"IX",61.2,61.2,"AERT",1.4)
S X=$S('$D(LRFMERTS):1,1:0)
"IX",61.2,61.2,"AERT",2)
Q
"IX",61.2,61.2,"AERT",2.4)
S X=0
"IX",61.2,61.2,"AERT",11.1,0)
^.114IA^2^2
"IX",61.2,61.2,"AERT",11.1,1,0)
1^F^61.2^.01^^^F
"IX",61.2,61.2,"AERT",11.1,2,0)
2^F^61.2^20^^^F
"IX",62,62,"AERT",0)
62^AERT^Send ERT alert if needed.^MU^^R^^I^62^^^^^A
"IX",62,62,"AERT",.1,0)
^^2^2^3090112^^^
"IX",62,62,"AERT",.1,1,0)
Action cross reference for sending ERT alerts when an entry is added or 
"IX",62,62,"AERT",.1,2,0)
modified.
"IX",62,62,"AERT",1)
D TASK^LRERT1(62,DA)
"IX",62,62,"AERT",1.4)
S X=$S('$D(LRFMERTS):1,1:0)
"IX",62,62,"AERT",2)
Q
"IX",62,62,"AERT",2.4)
S X=0
"IX",62,62,"AERT",11.1,0)
^.114IA^2^2
"IX",62,62,"AERT",11.1,1,0)
1^F^62^.01^^^F
"IX",62,62,"AERT",11.1,2,0)
2^F^62^20^^^F
"IX",62.06,62.06,"AD1",0)
62.06^AD1^Cross-reference to link AFB drugs with corresponding drug node in file #63.^R^^F^IR^I^62.06^^^^^S
"IX",62.06,62.06,"AD1",.1,0)
^^4^4^3060322^
"IX",62.06,62.06,"AD1",.1,1,0)
This cross-reference is used to link the AFB drug nodes in the 
"IX",62.06,62.06,"AD1",.1,2,0)
MYCOBACTERIUM subfile (#63.39) of LAB DATA file (#63) with the
"IX",62.06,62.06,"AD1",.1,3,0)
corresponding antimicrobial drug in this file (#62.06).
"IX",62.06,62.06,"AD1",.1,4,0)

"IX",62.06,62.06,"AD1",1)
S ^LAB(62.06,"AD1",$E(X,1,30),DA)=""
"IX",62.06,62.06,"AD1",2)
K ^LAB(62.06,"AD1",$E(X,1,30),DA)
"IX",62.06,62.06,"AD1",2.5)
K ^LAB(62.06,"AD1")
"IX",62.06,62.06,"AD1",11.1,0)
^.114IA^1^1
"IX",62.06,62.06,"AD1",11.1,1,0)
1^F^62.06^1.1^30^1^F
"IX",62.06,62.06,"AD1",11.1,1,3)

"IX",63,63.00012,"AC",0)
63.00012^AC^Index to identify entries related to a specific specimen^R^^F^IR^I^63.00012^^^^^S
"IX",63,63.00012,"AC",.1,0)
^^11^11^3080616^^^
"IX",63,63.00012,"AC",.1,1,0)
This index is used to identify those entries which are related
"IX",63,63.00012,"AC",.1,2,0)
to a specific specimen/accession in file #63.
"IX",63,63.00012,"AC",.1,3,0)
It constructed based on the entry's LRDFN, LRSS and LRIDT
"IX",63,63.00012,"AC",.1,4,0)
where LRDFN = internal enter number in file #63
"IX",63,63.00012,"AC",.1,5,0)
       LRSS = related subscript
"IX",63,63.00012,"AC",.1,6,0)
      LRIDT = inverse date/time of specimen
"IX",63,63.00012,"AC",.1,7,0)
 
"IX",63,63.00012,"AC",.1,8,0)
Autopsy results being one of a kind are created
"IX",63,63.00012,"AC",.1,9,0)
using a value LRSS="AU" and LRIDT=0 to maintain the
"IX",63,63.00012,"AC",.1,10,0)
structure of the entries and related index.
"IX",63,63.00012,"AC",.1,11,0)

"IX",63,63.00012,"AC",1)
S ^LR(DA(1),"PL","AC",X(1),X(2),DA)=""
"IX",63,63.00012,"AC",2)
K ^LR(DA(1),"PL","AC",X(1),X(2),DA)
"IX",63,63.00012,"AC",2.5)
K ^LR(DA(1),"PL","AC")
"IX",63,63.00012,"AC",11.1,0)
^.114IA^2^2
"IX",63,63.00012,"AC",11.1,1,0)
1^F^63.00012^.01^^1^F
"IX",63,63.00012,"AC",11.1,1,2)
S X=$P(X,",",2)
"IX",63,63.00012,"AC",11.1,2,0)
2^C^^^^2
"IX",63,63.00012,"AC",11.1,2,1.5)
S X=$P(^LR(DA(1),"PL",DA,0),",",3)
"IX",63,63.00012,"B",0)
63.00012^B^Regular 'B' cross-reference^R^^F^IR^I^63.00012^^^^^LS
"IX",63,63.00012,"B",.1,0)
^^2^2^3080415^
"IX",63,63.00012,"B",.1,1,0)
Regular "B" cross-reference on #.01 field.
"IX",63,63.00012,"B",.1,2,0)
Setup as new style to edit subscript length
"IX",63,63.00012,"B",1)
S ^LR(DA(1),"PL","B",$E(X,1,60),DA)=""
"IX",63,63.00012,"B",2)
K ^LR(DA(1),"PL","B",$E(X,1,60),DA)
"IX",63,63.00012,"B",2.5)
K ^LR(DA(1),"PL","B")
"IX",63,63.00012,"B",11.1,0)
^.114IA^1^1
"IX",63,63.00012,"B",11.1,1,0)
1^F^63.00012^.01^60^1^F
"IX",63,63.00012,"B",11.1,1,3)

"IX",63,63.00013,"AC",0)
63.00013^AC^Index to identify entries related to a specific specimen.^R^^F^IR^I^63.00013^^^^^S
"IX",63,63.00013,"AC",.1,0)
^^9^9^3081001^
"IX",63,63.00013,"AC",.1,1,0)
This index is used to identify those entries which are related to a specific specimen/accession in
"IX",63,63.00013,"AC",.1,2,0)
file #63.  It constructed based on the entry's LRDFN, LRSS and LRIDT where LRDFN = internal enter
"IX",63,63.00013,"AC",.1,3,0)
number in file #63
"IX",63,63.00013,"AC",.1,4,0)
 
"IX",63,63.00013,"AC",.1,5,0)
LRSS = related subscript
"IX",63,63.00013,"AC",.1,6,0)
LRIDT = inverse date/time of specimen
"IX",63,63.00013,"AC",.1,7,0)
 
"IX",63,63.00013,"AC",.1,8,0)
Autopsy results being one of a kind are created using a value LRSS="AU" and LRIDT=0 to maintain the
"IX",63,63.00013,"AC",.1,9,0)
structure of the entries and related index.
"IX",63,63.00013,"AC",1)
S ^LR(DA(1),"EPR","AC",X(1),X(2),DA)=""
"IX",63,63.00013,"AC",2)
K ^LR(DA(1),"EPR","AC",X(1),X(2),DA)
"IX",63,63.00013,"AC",2.5)
K ^LR(DA(1),"EPR","AC")
"IX",63,63.00013,"AC",11.1,0)
^.114IA^2^2
"IX",63,63.00013,"AC",11.1,1,0)
1^F^63.00013^.01^^1^F
"IX",63,63.00013,"AC",11.1,1,2)
S X=$P(X,",",2)
"IX",63,63.00013,"AC",11.1,1,3)

"IX",63,63.00013,"AC",11.1,2,0)
2^C^^^^2
"IX",63,63.00013,"AC",11.1,2,1.5)
S X=$P(^LR(DA(1),"EPR",DA,0),",",3)
"IX",63,63.00013,"AD",0)
63.00013^AD^Index to identify reference by type^R^^R^IR^I^63.00013^^^^^S
"IX",63,63.00013,"AD",.1,0)
^^6^6^3081002^^^
"IX",63,63.00013,"AD",.1,1,0)
This index is used to identify those entries which relate to a
"IX",63,63.00013,"AD",.1,2,0)
specific type of external package reference.
"IX",63,63.00013,"AD",.1,3,0)
 
"IX",63,63.00013,"AD",.1,4,0)
Example is an entry that contains the related surgical
"IX",63,63.00013,"AD",.1,5,0)
package case ien to link to a surgical pathology report
"IX",63,63.00013,"AD",.1,6,0)
when the report is related to a surgery case.
"IX",63,63.00013,"AD",1)
S ^LR(DA(1),"EPR","AD",X(1),X(2),DA)=""
"IX",63,63.00013,"AD",2)
K ^LR(DA(1),"EPR","AD",X(1),X(2),DA)
"IX",63,63.00013,"AD",2.5)
K ^LR(DA(1),"EPR","AD")
"IX",63,63.00013,"AD",11.1,0)
^.114IA^2^2
"IX",63,63.00013,"AD",11.1,1,0)
1^F^63.00013^.01^^1^F
"IX",63,63.00013,"AD",11.1,2,0)
2^F^63.00013^.02^^2^F
"IX",63,63.00013,"B",0)
63.00013^B^Regular 'B' cross-reference^R^^F^IR^I^63.00013^^^^^LS
"IX",63,63.00013,"B",.1,0)
^^2^2^3081001^
"IX",63,63.00013,"B",.1,1,0)
Regular "B" cross-reference on #.01 field.
"IX",63,63.00013,"B",.1,2,0)
Setup as a new style cross-reference to edit subscript length.
"IX",63,63.00013,"B",1)
S ^LR(DA(1),"EPR","B",$E(X,1,60),DA)=""
"IX",63,63.00013,"B",2)
K ^LR(DA(1),"EPR","B",$E(X,1,60),DA)
"IX",63,63.00013,"B",2.5)
K ^LR(DA(1),"EPR","B")
"IX",63,63.00013,"B",11.1,0)
^.114IA^1^1
"IX",63,63.00013,"B",11.1,1,0)
1^F^63.00013^.01^60^1^F
"IX",63,63.00013,"B",11.1,1,3)

"IX",63,63.00014,"AC",0)
63.00014^AC^Index to identify entries related to a specific specimen.^R^^F^IR^I^63.00014^^^^^S
"IX",63,63.00014,"AC",.1,0)
^^9^9^3091102^
"IX",63,63.00014,"AC",.1,1,0)
This index is used to identify those entries which are related to a 
"IX",63,63.00014,"AC",.1,2,0)
specific specimen/accession in file #63.  It constructed based on the
"IX",63,63.00014,"AC",.1,3,0)
entry's LRDFN, LRSS and LRIDT where LRDFN = internal enter number in file
"IX",63,63.00014,"AC",.1,4,0)
#63
"IX",63,63.00014,"AC",.1,5,0)
 
"IX",63,63.00014,"AC",.1,6,0)
LRSS = related subscript LRIDT = inverse date/time of specimen
"IX",63,63.00014,"AC",.1,7,0)
 
"IX",63,63.00014,"AC",.1,8,0)
Autopsy results being one of a kind are created using a value LRSS="AU"
"IX",63,63.00014,"AC",.1,9,0)
and LRIDT=0 to maintain the structure of the entries and related index.
"IX",63,63.00014,"AC",1)
S ^LR(DA(1),"CSR","AC",X(1),X(2),DA)=""
"IX",63,63.00014,"AC",2)
K ^LR(DA(1),"CSR","AC",X(1),X(2),DA)
"IX",63,63.00014,"AC",2.5)
K ^LR(DA(1),"CSR","AC")
"IX",63,63.00014,"AC",11.1,0)
^.114IA^2^2
"IX",63,63.00014,"AC",11.1,1,0)
1^F^63.00014^.01^^1^F
"IX",63,63.00014,"AC",11.1,1,2)
S X=$P(X,",",2)
"IX",63,63.00014,"AC",11.1,1,3)

"IX",63,63.00014,"AC",11.1,2,0)
2^C^^^^2
"IX",63,63.00014,"AC",11.1,2,1.5)
S X=$P(^LR(DA(1),"CSR",DA,0),",",3)
"IX",63,63.00014,"AD",0)
63.00014^AD^Index to identify reference by role^R^^R^IR^I^63.00014^^^^^S
"IX",63,63.00014,"AD",.1,0)
^^2^2^3091102^
"IX",63,63.00014,"AD",.1,1,0)
This index is used to identify those entries which relate to a specific 
"IX",63,63.00014,"AD",.1,2,0)
type of code system role.
"IX",63,63.00014,"AD",1)
S ^LR(DA(1),"CSR","AD",X(1),X(2),DA)=""
"IX",63,63.00014,"AD",2)
K ^LR(DA(1),"CSR","AD",X(1),X(2),DA)
"IX",63,63.00014,"AD",2.5)
K ^LR(DA(1),"CSR","AD")
"IX",63,63.00014,"AD",11.1,0)
^.114IA^2^2
"IX",63,63.00014,"AD",11.1,1,0)
1^F^63.00014^.01^^1^F
"IX",63,63.00014,"AD",11.1,1,3)

"IX",63,63.00014,"AD",11.1,2,0)
2^F^63.00014^.02^^2^F
"IX",63,63.00014,"AD",11.1,2,3)

"IX",63,63.00014,"AE",0)
63.00014^AE^Index to identify reference by role/code system.^R^^R^IR^I^63.00014^^^^^S
"IX",63,63.00014,"AE",.1,0)
^^3^3^3091102^
"IX",63,63.00014,"AE",.1,1,0)
This index is used to identify those entries which relate to a specific 
"IX",63,63.00014,"AE",.1,2,0)
role and code system. There maybe multiple codes related to a specific 
"IX",63,63.00014,"AE",.1,3,0)
role that come from different code systems.
"IX",63,63.00014,"AE",1)
S ^LR(DA(1),"CSR","AE",X(1),X(2),X(3),X(4),DA)=""
"IX",63,63.00014,"AE",2)
K ^LR(DA(1),"CSR","AE",X(1),X(2),X(3),X(4),DA)
"IX",63,63.00014,"AE",2.5)
K ^LR(DA(1),"CSR","AE")
"IX",63,63.00014,"AE",11.1,0)
^.114IA^4^4
"IX",63,63.00014,"AE",11.1,1,0)
1^F^63.00014^.01^^1^F
"IX",63,63.00014,"AE",11.1,1,3)

"IX",63,63.00014,"AE",11.1,2,0)
2^F^63.00014^.02^^2^F
"IX",63,63.00014,"AE",11.1,2,3)

"IX",63,63.00014,"AE",11.1,3,0)
3^F^63.00014^.04^^3^F
"IX",63,63.00014,"AE",11.1,3,3)

"IX",63,63.00014,"AE",11.1,4,0)
4^F^63.00014^.03^^4^F
"IX",63,63.00014,"AE",11.1,4,3)

"IX",63,63.00014,"B",0)
63.00014^B^Regular 'B' cross-reference^R^^F^IR^I^63.00014^^^^^LS
"IX",63,63.00014,"B",.1,0)
^^2^2^3091102^
"IX",63,63.00014,"B",.1,1,0)
Regular "B" cross-reference on #.01 field.  Setup as a new style 
"IX",63,63.00014,"B",.1,2,0)
cross-reference to edit subscript length.
"IX",63,63.00014,"B",1)
S ^LR(DA(1),"CSR","B",$E(X,1,60),DA)=""
"IX",63,63.00014,"B",2)
K ^LR(DA(1),"CSR","B",$E(X,1,60),DA)
"IX",63,63.00014,"B",2.5)
K ^LR(DA(1),"CSR","B")
"IX",63,63.00014,"B",11.1,0)
^.114IA^1^1
"IX",63,63.00014,"B",11.1,1,0)
1^F^63.00014^.01^60^1^F
"IX",63,63.00014,"B",11.1,1,3)

"IX",63,63.3,"AD",0)
63.3^AD^Create ISOLATE ID on .01 entry^MU^^F^IR^I^63.3^^^^^A
"IX",63,63.3,"AD",1)
D SETISOID^LRXREF(3)
"IX",63,63.3,"AD",1.4)

"IX",63,63.3,"AD",2)
Q
"IX",63,63.3,"AD",11.1,0)
^.114IA^1^1
"IX",63,63.3,"AD",11.1,1,0)
1^F^63.3^.01^^1^F
"IX",63,63.34,"AD",0)
63.34^AD^Create ISOLATE ID on .01 entry^MU^^F^IR^I^63.34^^^^^A
"IX",63,63.34,"AD",.1,0)
^^1^1^3060927^
"IX",63,63.34,"AD",.1,1,0)
Creates and stuffs the ISOLATE ID whith .01 entry.
"IX",63,63.34,"AD",1)
D SETISOID^LRXREF(6)
"IX",63,63.34,"AD",2)
Q
"IX",63,63.34,"AD",11.1,0)
^.114IA^1^1
"IX",63,63.34,"AD",11.1,1,0)
1^F^63.34^.01^^1^F
"IX",63,63.37,"AD",0)
63.37^AD^Create ISOLATE ID on .01 entry^MU^^F^IR^I^63.37^^^^^A
"IX",63,63.37,"AD",1)
D SETISOID^LRXREF(9)
"IX",63,63.37,"AD",2)
Q
"IX",63,63.37,"AD",11.1,0)
^.114IA^1^1
"IX",63,63.37,"AD",11.1,1,0)
1^F^63.37^.01^^1^F
"IX",63,63.37,"AD",11.1,1,3)

"IX",63,63.39,"AD",0)
63.39^AD^Create ISOLATE ID on .01 entry^MU^^F^IR^I^63.39^^^^^A
"IX",63,63.39,"AD",1)
D SETISOID^LRXREF(12)
"IX",63,63.39,"AD",2)
Q
"IX",63,63.39,"AD",11.1,0)
^.114IA^1^1
"IX",63,63.39,"AD",11.1,1,0)
1^F^63.39^.01^^1^F
"IX",63,63.39,"AD",11.1,1,3)

"IX",63,63.43,"AD",0)
63.43^AD^Create ISOLATE ID on .01 entry.^MU^^F^IR^I^63.43^^^^^A
"IX",63,63.43,"AD",1)
D SETISOID^LRXREF(17)
"IX",63,63.43,"AD",2)
Q
"IX",63,63.43,"AD",11.1,0)
^.114IA^1^1
"IX",63,63.43,"AD",11.1,1,0)
1^F^63.43^.01^^1^F
"IX",63,63.43,"AD",11.1,1,3)

"IX",69.6,69.6,"AC",0)
69.6^AC^Used to sort pending orders for an ordering site by collecting site.^R^^R^IR^I^69.6^^^^^S
"IX",69.6,69.6,"AC",.1,0)
^^5^5^3070403^
"IX",69.6,69.6,"AC",.1,1,0)
This MUMPS cross reference is used to sort pending orders for an ordering site by collecting site.
"IX",69.6,69.6,"AC",.1,2,0)
The format is shown below.
"IX",69.6,69.6,"AC",.1,3,0)
 
"IX",69.6,69.6,"AC",.1,4,0)
 ^LRO(69.6,"AC",ORDERING SITE (pointer),COLLECTING SITE (pointer),IEN) = ""
"IX",69.6,69.6,"AC",.1,5,0)

"IX",69.6,69.6,"AC",1)
S ^LRO(69.6,"AC",X(1),X(2),DA)=""
"IX",69.6,69.6,"AC",2)
K ^LRO(69.6,"AC",X(1),X(2),DA)
"IX",69.6,69.6,"AC",2.5)
K ^LRO(69.6,"AC")
"IX",69.6,69.6,"AC",11.1,0)
^.114IA^2^2
"IX",69.6,69.6,"AC",11.1,1,0)
1^F^69.6^1^^1^F
"IX",69.6,69.6,"AC",11.1,1,3)

"IX",69.6,69.6,"AC",11.1,2,0)
2^F^69.6^2^^2^F
"IX",69.6,69.6,"AC",11.1,2,3)

"IX",69.6,69.6,"AD",0)
69.6^AD^Used to sort pending orders for a shipping manifest by ordering site UID.^R^^R^IR^I^69.6^^^^^S
"IX",69.6,69.6,"AD",.1,0)
^^5^5^3070403^
"IX",69.6,69.6,"AD",.1,1,0)
This MUMPS cross reference is used to sort pending orders for a shipping manifest by ordering site UID.
"IX",69.6,69.6,"AD",.1,2,0)
The format is shown below.
"IX",69.6,69.6,"AD",.1,3,0)
 
"IX",69.6,69.6,"AD",.1,4,0)
^LRO(69.6,"AD",SHIPPING MANIFEST,ORDERING SITE UID,IEN) = ""
"IX",69.6,69.6,"AD",.1,5,0)

"IX",69.6,69.6,"AD",1)
S ^LRO(69.6,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",69.6,69.6,"AD",2)
K ^LRO(69.6,"AD",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",69.6,69.6,"AD",2.5)
K ^LRO(69.6,"AD")
"IX",69.6,69.6,"AD",11.1,0)
^.114IA^2^2
"IX",69.6,69.6,"AD",11.1,1,0)
1^F^69.6^18^30^1^F
"IX",69.6,69.6,"AD",11.1,1,3)

"IX",69.6,69.6,"AD",11.1,2,0)
2^F^69.6^3^30^2^F
"IX",69.6,69.6,"AD",11.1,2,3)

"IX",69.6,69.6,"AE",0)
69.6^AE^Used to sort pending orders by collecting site.^R^^F^IR^I^69.6^^^^^S
"IX",69.6,69.6,"AE",.1,0)
^^5^5^3070403^
"IX",69.6,69.6,"AE",.1,1,0)
This MUMPS cross reference is used to sort pending orders by collecting site.
"IX",69.6,69.6,"AE",.1,2,0)
 The format is shown below.
"IX",69.6,69.6,"AE",.1,3,0)
 
"IX",69.6,69.6,"AE",.1,4,0)
 ^LRO(69.6,"AE",COLLECTING SITE (pointer),IEN) = ""
"IX",69.6,69.6,"AE",.1,5,0)

"IX",69.6,69.6,"AE",1)
S ^LRO(69.6,"AE",X,DA)=""
"IX",69.6,69.6,"AE",2)
K ^LRO(69.6,"AE",X,DA)
"IX",69.6,69.6,"AE",2.5)
K ^LRO(69.6,"AE")
"IX",69.6,69.6,"AE",11.1,0)
^.114IA^1^1
"IX",69.6,69.6,"AE",11.1,1,0)
1^F^69.6^2^^1^F
"IX",69.6,69.6,"AE",11.1,1,3)

"IX",69.6,69.6,"RST",0)
69.6^RST^Used to identify unique id's by ordering site.^R^^R^IR^I^69.6^^^^^LS
"IX",69.6,69.6,"RST",.1,0)
^^5^5^3070403^
"IX",69.6,69.6,"RST",.1,1,0)
This cross reference is used to identify unique id's by ordering site.
"IX",69.6,69.6,"RST",.1,2,0)
The cross reference is useful for packaging multiple results for a site into one message.
"IX",69.6,69.6,"RST",.1,3,0)
 
"IX",69.6,69.6,"RST",.1,4,0)
The format is as follows: ^LRO(69.6,"RST",ORDERING SITE,ORDERING SITE UID,DA)=""
"IX",69.6,69.6,"RST",.1,5,0)

"IX",69.6,69.6,"RST",1)
S ^LRO(69.6,"RST",X(1),$E(X(2),1,30),DA)=""
"IX",69.6,69.6,"RST",2)
K ^LRO(69.6,"RST",X(1),$E(X(2),1,30),DA)
"IX",69.6,69.6,"RST",2.5)
K ^LRO(69.6,"RST")
"IX",69.6,69.6,"RST",11.1,0)
^.114IA^2^2
"IX",69.6,69.6,"RST",11.1,1,0)
1^F^69.6^1^^1^F
"IX",69.6,69.6,"RST",11.1,1,3)

"IX",69.6,69.6,"RST",11.1,2,0)
2^F^69.6^3^30^2^F
"IX",69.6,69.6,"RST",11.1,2,3)

"IX",69.6,69.6061,"B",0)
69.6061^B^Regular "B" cross-reference^R^^F^IR^I^69.6061^^^^^LS
"IX",69.6,69.6061,"B",.1,0)
^^1^1^3070404^
"IX",69.6,69.6061,"B",.1,1,0)
Regualr "B" cross-reference modified to store entire field (1-75 characters).
"IX",69.6,69.6061,"B",1)
S ^LRO(69.6,DA(1),61,"B",$E(X,1,75),DA)=""
"IX",69.6,69.6061,"B",2)
K ^LRO(69.6,DA(1),61,"B",$E(X,1,75),DA)
"IX",69.6,69.6061,"B",2.5)
K ^LRO(69.6,DA(1),61,"B")
"IX",69.6,69.6061,"B",11.1,0)
^.114IA^1^1
"IX",69.6,69.6061,"B",11.1,1,0)
1^F^69.6061^.01^75^1^F
"IX",69.6,69.6061,"B",11.1,1,3)

"IX",95.4,95.4,"AC",0)
95.4^AC^Institution file (#4) cross-reference^R^^F^IR^I^95.4^^^^^S
"IX",95.4,95.4,"AC",.1,0)
^^3^3^3050328^
"IX",95.4,95.4,"AC",.1,1,0)
Cross reference entries by which institution they are
"IX",95.4,95.4,"AC",.1,2,0)
associated with. Used to extract and send entries to a
"IX",95.4,95.4,"AC",.1,3,0)
specific facility.
"IX",95.4,95.4,"AC",1)
S ^LAHM(95.4,"AC",$E(X,1,30),DA)=""
"IX",95.4,95.4,"AC",2)
K ^LAHM(95.4,"AC",$E(X,1,30),DA)
"IX",95.4,95.4,"AC",2.5)
K ^LAHM(95.4,"AC")
"IX",95.4,95.4,"AC",11.1,0)
^.114IA^1^1
"IX",95.4,95.4,"AC",11.1,1,0)
1^F^95.4^2^30^1^F
"IX",95.4,95.4,"AC",11.1,1,3)

"IX",95.4,95.4,"AD",0)
95.4^AD^Entries sorted by processing date.^R^^F^IR^I^95.4^^^^^S
"IX",95.4,95.4,"AD",.1,0)
^^3^3^3080208^
"IX",95.4,95.4,"AD",.1,1,0)
Cross-reference to sort entries by the date they
"IX",95.4,95.4,"AD",.1,2,0)
are processed at site. Used to determine purging
"IX",95.4,95.4,"AD",.1,3,0)
eligibility.
"IX",95.4,95.4,"AD",1)
S ^LAHM(95.4,"AD",$E(X,1,30),DA)=""
"IX",95.4,95.4,"AD",2)
K ^LAHM(95.4,"AD",$E(X,1,30),DA)
"IX",95.4,95.4,"AD",2.5)
K ^LAHM(95.4,"AD")
"IX",95.4,95.4,"AD",11.1,0)
^.114IA^1^1
"IX",95.4,95.4,"AD",11.1,1,0)
1^F^95.4^6^30^1^F
"IX",95.4,95.4,"AD",11.1,1,3)

"IX",95.4,95.4,"AE",0)
95.4^AE^Entries sorted by processing status^R^^F^IR^I^95.4^^^^^S
"IX",95.4,95.4,"AE",.1,0)
^^1^1^3080208^
"IX",95.4,95.4,"AE",.1,1,0)
Cross-reference used to purge selected entries by status
"IX",95.4,95.4,"AE",1)
S ^LAHM(95.4,"AE",$E(X,1,30),DA)=""
"IX",95.4,95.4,"AE",2)
K ^LAHM(95.4,"AE",$E(X,1,30),DA)
"IX",95.4,95.4,"AE",2.5)
K ^LAHM(95.4,"AE")
"IX",95.4,95.4,"AE",11.1,0)
^.114IA^1^1
"IX",95.4,95.4,"AE",11.1,1,0)
1^F^95.4^4^30^1^F
"IX",95.4,95.4,"AF",0)
95.4^AF^Index by code system type^R^^F^IR^I^95.4^^^^^S
"IX",95.4,95.4,"AF",.1,0)
^^2^2^3080208^
"IX",95.4,95.4,"AF",.1,1,0)
Cross-reference used to identify entries related to
"IX",95.4,95.4,"AF",.1,2,0)
a specific code system.
"IX",95.4,95.4,"AF",1)
S ^LAHM(95.4,"AF",$E(X,1,30),DA)=""
"IX",95.4,95.4,"AF",2)
K ^LAHM(95.4,"AF",$E(X,1,30),DA)
"IX",95.4,95.4,"AF",2.5)
K ^LAHM(95.4,"AF")
"IX",95.4,95.4,"AF",11.1,0)
^.114IA^1^1
"IX",95.4,95.4,"AF",11.1,1,0)
1^F^95.4^3^30^1^F
"IX",95.4,95.4,"AF",11.1,1,3)

"KRN",3.8,325,-1)
0^1
"KRN",3.8,325,0)
LAB MAPPING^PU^n^^^^
"KRN",3.8,325,2,0)
^3.801^7^7^3111206^^^^
"KRN",3.8,325,2,1,0)
Used for sending automated system messages to the recipients when 
"KRN",3.8,325,2,2,0)
certain fields of monitored files are added and/or modified.
"KRN",3.8,325,2,3,0)
 
"KRN",3.8,325,2,4,0)
Example: When a NAME field (#.01) of ETIOLOGY FIELD file (#61.2) is 
"KRN",3.8,325,2,5,0)
created or modified, an ERT alert is automatically generated
"KRN",3.8,325,2,6,0)
and members of this mailgroup receive a message containing ERT tracking
"KRN",3.8,325,2,7,0)
information.
"KRN",3.8,325,3)

"KRN",9.2,3378,-1)
0^1
"KRN",9.2,3378,0)
LRCAPFF^LRCAPFF^3070717.1523^
"KRN",9.2,3378,1,0)
^^50^50^3070717^
"KRN",9.2,3378,1,1,0)
This LEDI Order Test Mapping option is used to identify where the data
"KRN",9.2,3378,1,2,0)
is in File 60, so the HL7 messages can be created and the report can be
"KRN",9.2,3378,1,3,0)
sent to the collecting lab.  This option must be completed for all tests
"KRN",9.2,3378,1,4,0)
that a lab performs as the "Host Site" in order for the report to be 
"KRN",9.2,3378,1,5,0)
transferred to HL7 messages.  
"KRN",9.2,3378,1,6,0)
  
"KRN",9.2,3378,1,7,0)
The first step of the option is to choose which Lab Subscript area the
"KRN",9.2,3378,1,8,0)
test is located in. (MI for Microbiology, SP for Surgical Pathology and
"KRN",9.2,3378,1,9,0)
CY for Cytology).  
"KRN",9.2,3378,1,10,0)
  
"KRN",9.2,3378,1,11,0)
The second step is to choose the local Laboratory Test Name (File #60).  
"KRN",9.2,3378,1,12,0)
 
"KRN",9.2,3378,1,13,0)
The third step is to choose the associated National VA Lab Code for that
"KRN",9.2,3378,1,14,0)
test (File 64 entry).  Once a valid National VA Lab Code is chosen - the
"KRN",9.2,3378,1,15,0)
system will ask if the user wants to link the File 60 entry to the File 
"KRN",9.2,3378,1,16,0)
#64 entry.  It is strongly recommended to link the entries so that the
"KRN",9.2,3378,1,17,0)
associated name fields will be activated allowing easier lookups of the
"KRN",9.2,3378,1,18,0)
tests in the future.  
"KRN",9.2,3378,1,19,0)
  
"KRN",9.2,3378,1,20,0)
The last choice is to choose the report format for the lab test that will
"KRN",9.2,3378,1,21,0)
be accepted for LEDI transmission. This is called the MI/AP Database Code
"KRN",9.2,3378,1,22,0)
(File #64.061).  This code must contain the same lab area subscript as 
"KRN",9.2,3378,1,23,0)
well as the words "Rpt Date" in the name field of the Database code 
"KRN",9.2,3378,1,24,0)
(ex: MI Gram Stain Rpt Date).  
"KRN",9.2,3378,1,25,0)
  
"KRN",9.2,3378,1,26,0)
The test can now be reported electronically  via HL7 messaging through 
"KRN",9.2,3378,1,27,0)
the LEDI interface with other labs.  
"KRN",9.2,3378,1,28,0)
  
"KRN",9.2,3378,1,29,0)
 Example of the screens involved: 
"KRN",9.2,3378,1,30,0)
 
"KRN",9.2,3378,1,31,0)
  
"KRN",9.2,3378,1,32,0)
      Select one of the following: 
"KRN",9.2,3378,1,33,0)
  
"KRN",9.2,3378,1,34,0)
           MI        Microbiology 
"KRN",9.2,3378,1,35,0)
           SP        Surgical Pathology 
"KRN",9.2,3378,1,36,0)
           CY        Cytopathology 
"KRN",9.2,3378,1,37,0)
  
"KRN",9.2,3378,1,38,0)
Choose Lab Area Subscript: MI  Microbiology 
"KRN",9.2,3378,1,39,0)
Enter Laboratory Test Name: GRAM
"KRN",9.2,3378,1,40,0)
 STAIN       GRAM ST NATIONAL VA LAB CODE: Gram Stain// 
"KRN",9.2,3378,1,41,0)
60 = GRAM STAIN 
"KRN",9.2,3378,1,42,0)
64 = Gram Stain   87754.0000 
"KRN",9.2,3378,1,43,0)
     
"KRN",9.2,3378,1,44,0)
   Link the two entries? No// Y  (Yes) 
"KRN",9.2,3378,1,45,0)
                                 o----LINKED----o 
"KRN",9.2,3378,1,46,0)
  
"KRN",9.2,3378,1,47,0)
      MI/AP Database Code for this test is 
"KRN",9.2,3378,1,48,0)
        MI Gram Stain Rpt Date [9194] 
"KRN",9.2,3378,1,49,0)
 
"KRN",9.2,3378,1,50,0)
Do you want to keep this mapping? y  YES 
"KRN",19,697,-1)
3^5
"KRN",19,697,0)
LRMENU^Laboratory DHCP Menu^^M^^^^^^^^LAB SERVICE^^1^1
"KRN",19,697,1,0)
^19.06^1^1^3090915^^^^
"KRN",19,697,1,1,0)
Main laboratory menu.
"KRN",19,697,3.91,0)
^19.391^^0
"KRN",19,697,10,0)
^19.01IP^26^12
"KRN",19,697,10,24,0)
698^5
"KRN",19,697,10,24,"^")
LR OUT
"KRN",19,697,15)
D ^LRKILL
"KRN",19,697,20)
D ^LRPARAM
"KRN",19,697,99)
61618,56808
"KRN",19,697,99.1)
62655,46201
"KRN",19,697,"NOKILL")
LRBLOOD,LRDFN,LRDT0,LRLABKY,LRPARAM,LRPCEVSO,LRPLASMA,LRSERUM,LRUNKOWN,LRURINE,LRVIDO,LRVIDOF
"KRN",19,697,"U")
LABORATORY DHCP MENU
"KRN",19,698,-1)
2^9
"KRN",19,698,0)
LR OUT^Results menu^^M^.5^^^^^^^26
"KRN",19,698,10,0)
^19.01IP^17^14
"KRN",19,698,10,17,0)
14754
"KRN",19,698,10,17,"^")
LRRP1
"KRN",19,698,"U")
RESULTS MENU
"KRN",19,707,-1)
2^11
"KRN",19,707,0)
LRAC^Cumulative menu^^M^.5^LRSUPER^^^^^^26
"KRN",19,707,10,0)
^19.01IP^16^16
"KRN",19,707,10,16,0)
14795^LACM
"KRN",19,707,10,16,"^")
LRAC MOVE
"KRN",19,707,"U")
CUMULATIVE MENU
"KRN",19,2640,-1)
2^2
"KRN",19,2640,0)
LRAPD^Data entry, anat path^^M^.5^^^^^^^26
"KRN",19,2640,10,0)
^19.01IP^11^11
"KRN",19,2640,10,11,0)
14482^LEDI
"KRN",19,2640,10,11,"^")
LRAP VR
"KRN",19,2640,"U")
DATA ENTRY, ANAT PATH
"KRN",19,5023,-1)
2^3
"KRN",19,5023,0)
LRLIAISON^Lab liaison menu^^M^.5^LRLIASON^^^^^^26
"KRN",19,5023,10,0)
^19.01IP^35^35
"KRN",19,5023,10,34,0)
14526^ANTE
"KRN",19,5023,10,34,"^")
LRWU7 EDIT
"KRN",19,5023,"U")
LAB LIAISON MENU
"KRN",19,10166,-1)
2^7
"KRN",19,10166,0)
LR7O 60-64^National Laboratory File^^M^200^^^^^^^26
"KRN",19,10166,10,0)
^19.01IP^5^5
"KRN",19,10166,10,5,0)
14585^5^
"KRN",19,10166,10,5,"^")
LRCAPFF
"KRN",19,10166,"U")
NATIONAL LABORATORY FILE
"KRN",19,11092,-1)
2^13
"KRN",19,11092,0)
LR7O PARAM MENU^Update CPRS Parameters^^M^174^^^^^^^26
"KRN",19,11092,10,0)
^19.01IP^9^8
"KRN",19,11092,10,8,0)
14796^UL
"KRN",19,11092,10,8,"^")
LR7O PAR USER LIST
"KRN",19,11092,"U")
UPDATE CPRS PARAMETERS
"KRN",19,14482,-1)
0^1
"KRN",19,14482,0)
LRAP VR^AP LEDI Data Entry^^R^^^^^^^^LAB SERVICE
"KRN",19,14482,1,0)
^19.06^4^4^3090609^^
"KRN",19,14482,1,1,0)
Data from an automated instrument for Anatomic Pathology (LDSI 
"KRN",19,14482,1,2,0)
results) can be reviewed individually by accession or by UID.
"KRN",19,14482,1,3,0)
If the LRAPMOD key is owned, the data may also be verified.  Once
"KRN",19,14482,1,4,0)
verified, the data is not available for viewing with this option.  
"KRN",19,14482,25)
LRVR
"KRN",19,14482,"U")
AP LEDI DATA ENTRY
"KRN",19,14526,-1)
0^4
"KRN",19,14526,0)
LRWU7 EDIT^Edit an Antibiotic^^R^^LRLIASON^^^^^^LAB SERVICE
"KRN",19,14526,1,0)
^19.06^1^1^3090609^^
"KRN",19,14526,1,1,0)
Allows editing an existing antibiotic.
"KRN",19,14526,25)
EDIT^LRWU7
"KRN",19,14526,"U")
EDIT AN ANTIBIOTIC
"KRN",19,14585,-1)
0^6
"KRN",19,14585,0)
LRCAPFF^Manage MI/AP Test Mappings^^R^^LRLIASON^LRCAPFF^^^^^LAB SERVICE
"KRN",19,14585,1,0)
^19.06^2^2^3090609^^
"KRN",19,14585,1,1,0)
Establish the relationships between LABORATORY TEST file, WKLD file and 
"KRN",19,14585,1,2,0)
LAB ELECTRONIC CODES files for LEDI MI/AP tests.
"KRN",19,14585,25)
START^LRCAPFF
"KRN",19,14585,"U")
MANAGE MI/AP TEST MAPPINGS
"KRN",19,14754,-1)
0^8
"KRN",19,14754,0)
LRRP1^Interim report for an accession^^R^^^^^^^^LAB SERVICE
"KRN",19,14754,1,0)
^^5^5^3071206^
"KRN",19,14754,1,1,0)
This option will display an interim report for a selected accession.
"KRN",19,14754,1,2,0)
It will only print verified results.  The report prints site codes for tests.
"KRN",19,14754,1,3,0)
You will be asked if you would like to print an address page.
"KRN",19,14754,1,4,0)
The address page prints on a separate page(s) at the end of the report
"KRN",19,14754,1,5,0)
and lists the performing lab name, address and site code.
"KRN",19,14754,25)
LOOKUP^LRRP
"KRN",19,14754,"U")
INTERIM REPORT FOR AN ACCESSIO
"KRN",19,14784,-1)
0^14
"KRN",19,14784,0)
LRAP ALERT^Send an AP Alert^^R^^^^^^^^LAB SERVICE
"KRN",19,14784,1,0)
^^2^2^3080423^
"KRN",19,14784,1,1,0)
This option allows a pathologist to send an action alert to a provider
"KRN",19,14784,1,2,0)
or other person(s) or mail group(s) after the case has been released.
"KRN",19,14784,25)
LRAPALRT
"KRN",19,14784,"U")
SEND AN AP ALERT
"KRN",19,14795,-1)
0^10
"KRN",19,14795,0)
LRAC MOVE^Move Cumulative Major/Minor Headers^^R^^LRLIASON^^^^^^LAB SERVICE
"KRN",19,14795,1,0)
^^2^2^3080808^
"KRN",19,14795,1,1,0)
Option to move a cumulative major or minor header to another
"KRN",19,14795,1,2,0)
major header. After moving the header it deletes the old header.
"KRN",19,14795,25)
EN^LRACMOVE
"KRN",19,14795,"U")
MOVE CUMULATIVE MAJOR/MINOR HE
"KRN",19,14796,-1)
0^12
"KRN",19,14796,0)
LR7O PAR USER LIST^Display Lab User Parameters^^R^^^^^^^^
"KRN",19,14796,1,0)
^^2^2^3081022^
"KRN",19,14796,1,1,0)
This option displays the user selectable parameters that a user
"KRN",19,14796,1,2,0)
has configured for a selected parameter.
"KRN",19,14796,25)
LISTPAR^LR7OV5
"KRN",19,14796,"U")
DISPLAY LAB USER PARAMETERS
"KRN",8989.5,3108,0)
26;DIC(9.4,^LR AP SNOMED SYSTEM PRINT^1
"KRN",8989.5,3108,1)
1
"KRN",8989.5,3307,0)
26;DIC(9.4,^LR MI VERIFY CPRS ALERT^1
"KRN",8989.5,3307,1)
0
"KRN",8989.5,3561,0)
26;DIC(9.4,^LR REPORTS FACILITY PRINT^1
"KRN",8989.5,3561,1)
0
"KRN",8989.5,3756,0)
26;DIC(9.4,^LR MAPPING DEFAULT FILESPEC^1
"KRN",8989.5,3756,1)
*.TXT
"KRN",8989.5,3757,0)
26;DIC(9.4,^LR MAPPING PURGE DAYS^1
"KRN",8989.5,3757,1)
360
"KRN",8989.5,3817,0)
26;DIC(9.4,^LR ASK PERFORMING LAB AP^1
"KRN",8989.5,3817,1)
1
"KRN",8989.5,3819,0)
26;DIC(9.4,^LR ASK PERFORMING LAB MICRO^1
"KRN",8989.5,3819,1)
1
"KRN",8989.5,3835,0)
26;DIC(9.4,^LR AP SURGERY REFERENCE^1
"KRN",8989.5,3835,1)
0
"KRN",8989.51,21,0)
LR PHLEBOTOMY COLLECTION^Phlebotomy Collection Time^1^^PHLEBOTOMY COLLECTION
"KRN",8989.51,21,1)
F^4:4^Enter the collection time in military format (e.g. 0630).
"KRN",8989.51,21,2)
K:X'?4N X
"KRN",8989.51,21,6)
N^1:86400^Enter the $H time for this collection.
"KRN",8989.51,21,20,0)
^^3^3^2970912^^^
"KRN",8989.51,21,20,1,0)
This is the time for each phlebotomy collection.  The instance value
"KRN",8989.51,21,20,2,0)
makes each phlebotomy collection entry unique by using the $H value of
"KRN",8989.51,21,20,3,0)
the collection time.
"KRN",8989.51,21,30,0)
^8989.513I^2^2
"KRN",8989.51,21,30,1,0)
1^4
"KRN",8989.51,21,30,2,0)
2^4.2
"KRN",8989.51,34,0)
LR LAB COLLECT FUTURE^Lab Collect Days Allowed in Future^^^LAB COLLECT DAYS ALLOWED IN FUTURE^0
"KRN",8989.51,34,1)
N^1:370^Enter the number of days allowed to collect 'Lab Collect' future orders.
"KRN",8989.51,34,20,0)
^^2^2^3000211^^^^
"KRN",8989.51,34,20,1,0)
This is the maximum number of days that 'Lab Collect' orders may be
"KRN",8989.51,34,20,2,0)
placed.  The number may be specific to each hospital location.
"KRN",8989.51,34,30,0)
^8989.513I^4^4
"KRN",8989.51,34,30,1,0)
1^44
"KRN",8989.51,34,30,2,0)
2^4
"KRN",8989.51,34,30,3,0)
3^4.2
"KRN",8989.51,34,30,4,0)
4^9.4
"KRN",8989.51,366,0)
LR VER DISPLAY PREV COMMENT^Display previous comments for test^1^Laboratory Test^Display previous result's comments^0
"KRN",8989.51,366,1)
Y^^Answer with yes/no to display previous result's comments during verification.
"KRN",8989.51,366,6)
P^60
"KRN",8989.51,366,8)
I $P(^(0),"^",4)="CH"
"KRN",8989.51,366,20,0)
^8989.512^2^2^3040707^^^^
"KRN",8989.51,366,20,1,0)
Select whether the user wants comments associated with previous results to
"KRN",8989.51,366,20,2,0)
display with those results during lab verification process.
"KRN",8989.51,366,30,0)
^8989.513I^1^1
"KRN",8989.51,366,30,1,0)
1^200
"KRN",8989.51,404,-1)
0^5
"KRN",8989.51,404,0)
LR VER EA VERIFY BY UID^Default load/work list verify method^1^Accession Area^Default load/work list verify method^0
"KRN",8989.51,404,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,404,4,0)
^8989.514^1^1
"KRN",8989.51,404,4,1,0)
UID
"KRN",8989.51,404,4,"B","UID",1)

"KRN",8989.51,404,6)
P^68
"KRN",8989.51,404,20,0)
^8989.512^9^9^3070911^^^^
"KRN",8989.51,404,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,404,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,404,20,3,0)
via options that use a load/work list. Parameter is associated
"KRN",8989.51,404,20,4,0)
with the accession area linked to the load/worklist profile
"KRN",8989.51,404,20,5,0)
selected by the user.
"KRN",8989.51,404,20,6,0)

"KRN",8989.51,404,20,7,0)
Parameter can be set at the package or user level. 
"KRN",8989.51,404,20,8,0)
User level takes precedence over division level.
"KRN",8989.51,404,20,9,0)
Site can also force verification by UID only.
"KRN",8989.51,404,30,0)
^8989.513I^2^2
"KRN",8989.51,404,30,1,0)
1^200
"KRN",8989.51,404,30,2,0)
2^9.4
"KRN",8989.51,436,0)
LA7UTILA PARSE^Lab Messaging - Parse HL7 Messages^0^^Lab Messaging - Parse HL7 Messages
"KRN",8989.51,436,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,436,2)

"KRN",8989.51,436,3)

"KRN",8989.51,436,20,0)
^8989.512^5^5^3090904^^^^
"KRN",8989.51,436,20,1,0)
Allows the User to select the default setting for "Parse HL7 Message
"KRN",8989.51,436,20,2,0)
" prompt when using OPTION [LA7 PRINT LAB UI MESSAGE].
"KRN",8989.51,436,20,3,0)
 
"KRN",8989.51,436,20,4,0)
"LAST" means the User wants the system to keep track of their last
"KRN",8989.51,436,20,5,0)
response to this prompt and use that as their default. 
"KRN",8989.51,436,30,0)
^8989.513I^2^2
"KRN",8989.51,436,30,1,0)
1^200
"KRN",8989.51,436,30,2,0)
2^4.2
"KRN",8989.51,437,0)
LA7UTILA USE BROWSER^Lab Messaging - Display using Browser^^^Lab Messaging - Use Browser to display
"KRN",8989.51,437,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,437,2)

"KRN",8989.51,437,3)

"KRN",8989.51,437,20,0)
^8989.512^5^5^3061208^^^
"KRN",8989.51,437,20,1,0)
Allows the User to select the default setting for "Use Browser to display 
"KRN",8989.51,437,20,2,0)
HL7 Message" prompt when using OPTION [LA7 PRINT LAB UI MESSAGE].
"KRN",8989.51,437,20,3,0)
 
"KRN",8989.51,437,20,4,0)
"LAST" means the User wants the system to keep track of their last
"KRN",8989.51,437,20,5,0)
response to this prompt and use that as their default.
"KRN",8989.51,437,30,0)
^8989.513I^2^2
"KRN",8989.51,437,30,1,0)
1^200
"KRN",8989.51,437,30,2,0)
2^4.2
"KRN",8989.51,454,-1)
0^1
"KRN",8989.51,454,0)
LR LABEL PRINTER DEFAULT^Default lab label printer^1^Division^Lab Label Device^0
"KRN",8989.51,454,1)
P^3.5^Select the label printer to use as your default.
"KRN",8989.51,454,4,0)
^8989.514^1^1
"KRN",8989.51,454,4,1,0)
LABLABEL
"KRN",8989.51,454,4,"B","LABLABEL",1)

"KRN",8989.51,454,6)
P^4^Select the divisions which you log into.
"KRN",8989.51,454,7)

"KRN",8989.51,454,8)
N LRDIV S LRDIV=$$DIV4^XUSER(.LRDIV,DUZ) I $D(LRDIV(Y))
"KRN",8989.51,454,20,0)
^8989.512^3^3^3070831^^^^
"KRN",8989.51,454,20,1,0)
Allows selection of default lab label printer presented to the user when selecting
"KRN",8989.51,454,20,2,0)
the label device to use to print accession and order labels.
"KRN",8989.51,454,20,3,0)
User can specify default printer by division.
"KRN",8989.51,454,30,0)
^8989.513I^1^1
"KRN",8989.51,454,30,1,0)
1^200
"KRN",8989.51,461,-1)
0^2
"KRN",8989.51,461,0)
LR EGFR METHOD^EGFR Creatinine IDMS-traceable Method^0^IDMS-traceable^Creatinine IDMS-traceable Method^0
"KRN",8989.51,461,1)
Y^^Answer with yes/no if the Creatinine method is traceable to an IDMS method.
"KRN",8989.51,461,4,0)
^8989.514^2^2
"KRN",8989.51,461,4,1,0)
EGFR
"KRN",8989.51,461,4,2,0)
IDMS
"KRN",8989.51,461,4,"B","EGFR",1)

"KRN",8989.51,461,4,"B","IDMS",2)

"KRN",8989.51,461,6)
Y
"KRN",8989.51,461,20,0)
^8989.512^3^3^3111006^^^
"KRN",8989.51,461,20,1,0)
Used to designate if the EGFR calculation should calculate the
"KRN",8989.51,461,20,2,0)
EGFR based on a IDMS-traceable method. This parameter is configurable
"KRN",8989.51,461,20,3,0)
at both the package and division level.
"KRN",8989.51,461,30,0)
^8989.513I^2^2
"KRN",8989.51,461,30,1,0)
1^4
"KRN",8989.51,461,30,2,0)
2^9.4
"KRN",8989.51,462,-1)
0^3
"KRN",8989.51,462,0)
LR EGFR AGE CUTOFF^EGFR Patient's Age Cutoff^0^^Suppress EGFR When Patient's Age^0
"KRN",8989.51,462,1)
S^0:NEVER;1:<18 YEARS;2:>70 YEARS;3:BOTH^Select when the patient's age should suppress reporting of the patient's EGFR.
"KRN",8989.51,462,4,0)
^8989.514^1^1
"KRN",8989.51,462,4,1,0)
EGFR
"KRN",8989.51,462,4,"B","EGFR",1)

"KRN",8989.51,462,6)
^^
"KRN",8989.51,462,20,0)
^8989.512^5^5^3111006^^^^
"KRN",8989.51,462,20,1,0)
Used to designate if the EGFR calculation should not be performed 
"KRN",8989.51,462,20,2,0)
on creatinine when executing the delta check EGFR when the
"KRN",8989.51,462,20,3,0)
patient's age is <18 or >70. This parameter is configurable
"KRN",8989.51,462,20,4,0)
at both the package and division level and can be set for
"KRN",8989.51,462,20,5,0)
either or both age cutoffs.
"KRN",8989.51,462,30,0)
^8989.513I^2^2
"KRN",8989.51,462,30,1,0)
1^4
"KRN",8989.51,462,30,2,0)
2^9.4
"KRN",8989.51,463,-1)
0^4
"KRN",8989.51,463,0)
LR EGFR RESULT SUPPRESS^EGFR Result Cutoff^0^>60 Result Suppression^Report EGFR as >60^0
"KRN",8989.51,463,1)
Y^^Answer with yes/no if EGFR values >60 should be reported as ">60".
"KRN",8989.51,463,4,0)
^8989.514^1^1
"KRN",8989.51,463,4,1,0)
EGFR
"KRN",8989.51,463,4,"B","EGFR",1)

"KRN",8989.51,463,20,0)
^8989.512^4^4^3111006^^^
"KRN",8989.51,463,20,1,0)
Used to designate if the EGFR calculation should be suppressed
"KRN",8989.51,463,20,2,0)
when the value is >60. If enabled then ">60" is reported in
"KRN",8989.51,463,20,3,0)
lieu of the actual EGFR calculated value. This parameter is
"KRN",8989.51,463,20,4,0)
configurable at both the package and division level.
"KRN",8989.51,463,30,0)
^8989.513I^2^2
"KRN",8989.51,463,30,1,0)
1^4
"KRN",8989.51,463,30,2,0)
2^9.4
"KRN",8989.51,464,-1)
0^6
"KRN",8989.51,464,0)
LR VER EM VERIFY BY UID^Default manual verify method^0^^Default manual verify method^0
"KRN",8989.51,464,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,464,4,0)
^8989.514^1^1
"KRN",8989.51,464,4,1,0)
UID
"KRN",8989.51,464,4,"B","UID",1)

"KRN",8989.51,464,6)
^
"KRN",8989.51,464,20,0)
^8989.512^7^7^3070911^^^^
"KRN",8989.51,464,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,464,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,464,20,3,0)
via options that do not use a load/work list.
"KRN",8989.51,464,20,4,0)
Parameter can be set at the package, division or user
"KRN",8989.51,464,20,5,0)
level. Division level takes precedence over the package level.
"KRN",8989.51,464,20,6,0)
User level takes precedence over division level.
"KRN",8989.51,464,20,7,0)
Site can also force verification by UID only.
"KRN",8989.51,464,30,0)
^8989.513I^3^3
"KRN",8989.51,464,30,1,0)
1^200
"KRN",8989.51,464,30,2,0)
2^4
"KRN",8989.51,464,30,3,0)
3^9.4
"KRN",8989.51,465,0)
LA7UTILA SHOIDS^Lab Messaging - Show Identifiers^0^^Lab Messaging - Show Identifiers
"KRN",8989.51,465,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,465,20,0)
^8989.512^3^3^3071021^
"KRN",8989.51,465,20,1,0)
Allows the user to select the default setting for the "Display 
"KRN",8989.51,465,20,2,0)
identifiers during message selection?" prompt when using OPTION [LA7 
"KRN",8989.51,465,20,3,0)
PRINT LAB UI MESSAGE].
"KRN",8989.51,465,30,0)
^8989.513I^2^2
"KRN",8989.51,465,30,1,0)
1^200
"KRN",8989.51,465,30,2,0)
2^4.2
"KRN",8989.51,467,-1)
0^7
"KRN",8989.51,467,0)
LRAPRES1 AP ALERT^Send an alert after AP release^0^^Send alert for released AP^0
"KRN",8989.51,467,1)
Y
"KRN",8989.51,467,20,0)
^8989.512^2^2^3071116^^^^
"KRN",8989.51,467,20,1,0)
After Anatomic Pathology report is released, this will be the default 
"KRN",8989.51,467,20,2,0)
answer to the "Send an alert" message.
"KRN",8989.51,467,30,0)
^8989.513I^3^3
"KRN",8989.51,467,30,1,0)
1^200
"KRN",8989.51,467,30,2,0)
5^4
"KRN",8989.51,467,30,3,0)
10^9.4
"KRN",8989.51,471,-1)
0^8
"KRN",8989.51,471,0)
LR AP REPORT SELECTION^Default AP Report Selection Prompt^0^^AP Report Selection Default^0
"KRN",8989.51,471,1)
S^1:Accession Number;2:Unique Identifier (UID);3:Patient Name^Specify the default report selection method presented to user.
"KRN",8989.51,471,4,0)
^8989.514
"KRN",8989.51,471,30,0)
^8989.513I^3^3
"KRN",8989.51,471,30,1,0)
1^200
"KRN",8989.51,471,30,2,0)
2^4
"KRN",8989.51,471,30,3,0)
3^9.4
"KRN",8989.51,472,-1)
0^9
"KRN",8989.51,472,0)
LR AP SNOMED SYSTEM PRINT^Print SNOMED Code System^0^^Print SNOMED Version
"KRN",8989.51,472,1)
S^1:SNOMED I;2:SNOMED CT;3:BOTH^Select which version of SNOMED to print on AP reports
"KRN",8989.51,472,20,0)
^^2^2^3090227^
"KRN",8989.51,472,20,1,0)
Parameter to allow the site/division to indicate which version of SNOMED
"KRN",8989.51,472,20,2,0)
to print or display on Anatomic Pathology reports.
"KRN",8989.51,472,30,0)
^8989.513I^2^2
"KRN",8989.51,472,30,1,0)
1^4
"KRN",8989.51,472,30,2,0)
2^9.4
"KRN",8989.51,474,-1)
0^10
"KRN",8989.51,474,0)
LR MAPPING DEFAULT DIRECTORY^Lab STS Default Mapping Files Directory^0^^Default Directory^0
"KRN",8989.51,474,1)
F^3:245^The directory that contains the STS mapping files
"KRN",8989.51,474,4,0)
^8989.514^2^2
"KRN",8989.51,474,4,1,0)
MAPPING
"KRN",8989.51,474,4,2,0)
STANDARDIZATION
"KRN",8989.51,474,4,"B","MAPPING",1)

"KRN",8989.51,474,4,"B","STANDARDIZATION",2)

"KRN",8989.51,474,20,0)
^8989.512^5^5^3110105^^^^
"KRN",8989.51,474,20,1,0)
This parameter holds the name of the default directory
"KRN",8989.51,474,20,2,0)
which contains the STS mapping of standard code sets to VistA
"KRN",8989.51,474,20,3,0)
Laboratory system files.
"KRN",8989.51,474,20,4,0)
 
"KRN",8989.51,474,20,5,0)
Should be expressed as a full directory specification.
"KRN",8989.51,474,30,0)
^8989.513I^3^3
"KRN",8989.51,474,30,1,0)
1^200
"KRN",8989.51,474,30,2,0)
2^9.4
"KRN",8989.51,474,30,3,0)
3^4.2
"KRN",8989.51,475,-1)
0^15
"KRN",8989.51,475,0)
LR MAPPING MESSAGE MAX RECORDS^Lab STS Number of Records per Message^0^^Maximum Records per Message
"KRN",8989.51,475,1)
N^^Specify the maximum number of records to build per mail message
"KRN",8989.51,475,4,0)
^8989.514^1^1
"KRN",8989.51,475,4,1,0)
MAPPING
"KRN",8989.51,475,4,"B","MAPPING",1)

"KRN",8989.51,475,20,0)
^8989.512^5^5^3110106^^
"KRN",8989.51,475,20,1,0)
This parameter holds the number of records to transport per mail message
"KRN",8989.51,475,20,2,0)
which contains the STS mapping of standard code sets to VistA
"KRN",8989.51,475,20,3,0)
Laboratory system files. It allows the message size to be adjusted
"KRN",8989.51,475,20,4,0)
to accommodate the various system settings through which the mail
"KRN",8989.51,475,20,5,0)
messages containing the STS mappings are routed.
"KRN",8989.51,475,30,0)
^8989.513I^3^3
"KRN",8989.51,475,30,1,0)
1^200
"KRN",8989.51,475,30,2,0)
2^9.4
"KRN",8989.51,475,30,3,0)
3^4.2
"KRN",8989.51,476,-1)
0^13
"KRN",8989.51,476,0)
LR MAPPING DEFAULT FILESPEC^Lab STS Default Mapping Filespec^0^^Default FileSpec^0
"KRN",8989.51,476,1)
F^3:70^The filespec to screen the display of files
"KRN",8989.51,476,4,0)
^8989.514^2^2
"KRN",8989.51,476,4,1,0)
MAPPING
"KRN",8989.51,476,4,2,0)
STANDARDIZATION
"KRN",8989.51,476,4,"B","MAPPING",1)

"KRN",8989.51,476,4,"B","STANDARDIZATION",2)

"KRN",8989.51,476,20,0)
^8989.512^5^5^3110105^^^
"KRN",8989.51,476,20,1,0)
This parameter holds the file specification used to screen which
"KRN",8989.51,476,20,2,0)
files is a given directory are presented to the user for loading.
"KRN",8989.51,476,20,3,0)
These files contain the STS mapping of standard code sets to VistA
"KRN",8989.51,476,20,4,0)
Laboratory system files.
"KRN",8989.51,476,20,5,0)

"KRN",8989.51,476,30,0)
^8989.513I^3^3
"KRN",8989.51,476,30,1,0)
1^200
"KRN",8989.51,476,30,2,0)
2^9.4
"KRN",8989.51,476,30,3,0)
3^4.2
"KRN",8989.51,477,-1)
0^12
"KRN",8989.51,477,0)
LR MAPPING ASK DOMAIN^Lab STS Ask MailMan Domain Name^0^^Ask MailMan Domain Name
"KRN",8989.51,477,1)
Y^^Answer with yes/no to indicate the default for the 'Ask Domain Name' prompt
"KRN",8989.51,477,4,0)
^8989.514^1^1
"KRN",8989.51,477,4,1,0)
MAPPING
"KRN",8989.51,477,4,"B","MAPPING",1)

"KRN",8989.51,477,20,0)
^8989.512^7^7^3110106^^^^
"KRN",8989.51,477,20,1,0)
This parameter holds the default when asking the user if they
"KRN",8989.51,477,20,2,0)
want to specify a specific domain when selecting a facility to
"KRN",8989.51,477,20,3,0)
send a STS file mapping. It allows the user to override the
"KRN",8989.51,477,20,4,0)
normal domain associated with an Institution. This is useful when 
"KRN",8989.51,477,20,5,0)
sending the mapping to a facility's test system which is usually another
"KRN",8989.51,477,20,6,0)
MailMan domain.
"KRN",8989.51,477,20,7,0)

"KRN",8989.51,477,30,0)
^8989.513I^3^3
"KRN",8989.51,477,30,1,0)
1^200
"KRN",8989.51,477,30,2,0)
2^9.4
"KRN",8989.51,477,30,3,0)
3^4.2
"KRN",8989.51,478,-1)
0^14
"KRN",8989.51,478,0)
LR MAPPING PURGE DAYS^Lab STS Record Purge Cutoff^^^LAB MAPPING RECORDS DAYS TO KEEP^0
"KRN",8989.51,478,1)
N^1:360^Enter the number of days to keep mapping records before purging the record.
"KRN",8989.51,478,20,0)
^^3^3^3110111^
"KRN",8989.51,478,20,1,0)
This is the maximum number of days that STS mapping records are kept
"KRN",8989.51,478,20,2,0)
in LAB TRANSPORT MAPPING file (#95.4) before being eligible for purging
"KRN",8989.51,478,20,3,0)
by the Laboratory system task LRTASK NIGHTY.
"KRN",8989.51,478,30,0)
^8989.513I^4^2
"KRN",8989.51,478,30,3,0)
1^9.4
"KRN",8989.51,478,30,4,0)
2^4.2
"KRN",8989.51,479,-1)
0^16
"KRN",8989.51,479,0)
LR CH GUI REPORT RIGHT MARGIN^Chemistry GUI Report Right Margin^0^^Chemistry GUI Report Right Margin^0
"KRN",8989.51,479,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,479,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,479,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,479,20,2,0)
chemistry/hematology type laboratory reports within a GUI display/client.
"KRN",8989.51,479,20,3,0)

"KRN",8989.51,479,30,0)
^8989.513I^3^3
"KRN",8989.51,479,30,1,0)
1^200
"KRN",8989.51,479,30,2,0)
2^4
"KRN",8989.51,479,30,3,0)
3^9.4
"KRN",8989.51,480,-1)
0^17
"KRN",8989.51,480,0)
LR MI GUI REPORT RIGHT MARGIN^Microbiology GUI Report Right Margin^0^^Microbiology GUI Report Right Margin^0
"KRN",8989.51,480,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,480,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,480,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,480,20,2,0)
microbiology type laboratory reports within a GUI display/client.
"KRN",8989.51,480,20,3,0)

"KRN",8989.51,480,30,0)
^8989.513I^3^3
"KRN",8989.51,480,30,1,0)
1^200
"KRN",8989.51,480,30,2,0)
2^4
"KRN",8989.51,480,30,3,0)
3^9.4
"KRN",8989.51,481,-1)
0^18
"KRN",8989.51,481,0)
LR AP GUI REPORT RIGHT MARGIN^AP GUI Report Right Margin^0^^AP GUI Report Right Margin^0
"KRN",8989.51,481,1)
N^80:240:0^Enter the value to be used for the right margin when foramtting lab reports
"KRN",8989.51,481,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,481,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,481,20,2,0)
anatomic pathology type laboratory reports within a GUI display/client.
"KRN",8989.51,481,20,3,0)

"KRN",8989.51,481,30,0)
^8989.513I^3^3
"KRN",8989.51,481,30,1,0)
1^200
"KRN",8989.51,481,30,2,0)
2^4
"KRN",8989.51,481,30,3,0)
3^9.4
"KRN",8989.51,482,-1)
0^19
"KRN",8989.51,482,0)
LR MI VERIFY DISPLAY PROVIDER^Display Provider in Micro Result Entry^0^^Display Provider in Micro Result Entry^0
"KRN",8989.51,482,1)
Y^^Enter yes/no to display ordering provider information during micro result entry
"KRN",8989.51,482,20,0)
^8989.512^3^3^3111006^^^^
"KRN",8989.51,482,20,1,0)
This parameter allows the site/division/user to indicate if the ordering
"KRN",8989.51,482,20,2,0)
provider information should be displayed to the user during microbiology
"KRN",8989.51,482,20,3,0)
result data entry.
"KRN",8989.51,482,30,0)
^8989.513I^3^3
"KRN",8989.51,482,30,1,0)
1^200
"KRN",8989.51,482,30,2,0)
2^4
"KRN",8989.51,482,30,3,0)
3^9.4
"KRN",8989.51,483,-1)
0^27
"KRN",8989.51,483,0)
LR MAPPING PROCESSED DIRECTORY^Lab STS Processed Files Directory^0^^Processed Directory^0
"KRN",8989.51,483,1)
F^3:245^The directory that contains the processed STS mapping files
"KRN",8989.51,483,4,0)
^8989.514^2^2
"KRN",8989.51,483,4,1,0)
MAPPING
"KRN",8989.51,483,4,2,0)
STANDARDIZATION
"KRN",8989.51,483,4,"B","MAPPING",1)

"KRN",8989.51,483,4,"B","STANDARDIZATION",2)

"KRN",8989.51,483,20,0)
^8989.512^5^5^3110106^^^^
"KRN",8989.51,483,20,1,0)
This parameter holds the name of the directory which contains
"KRN",8989.51,483,20,2,0)
the processed STS mapping files of standard code sets to VistA
"KRN",8989.51,483,20,3,0)
Laboratory system files.
"KRN",8989.51,483,20,4,0)
 
"KRN",8989.51,483,20,5,0)
Should be expressed as a full directory specification.
"KRN",8989.51,483,30,0)
^8989.513I^3^3
"KRN",8989.51,483,30,1,0)
1^200
"KRN",8989.51,483,30,2,0)
2^9.4
"KRN",8989.51,483,30,3,0)
3^4.2
"KRN",8989.51,496,-1)
0^22
"KRN",8989.51,496,0)
LR ACCESSION DEFAULT SPECIMEN^Default Accessioning Specimen^1^Lab Section^Default Specimen
"KRN",8989.51,496,1)
P^61^Select the Lab Section for this default specimen
"KRN",8989.51,496,4,0)
^8989.514^1^1
"KRN",8989.51,496,4,1,0)
AP DEFAULTS
"KRN",8989.51,496,4,"B","AP DEFAULTS",1)

"KRN",8989.51,496,6)
P^68
"KRN",8989.51,496,7)

"KRN",8989.51,496,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,496,20,0)
^8989.512^2^2^3081007^^^^
"KRN",8989.51,496,20,1,0)
Allows the package/facility/user to set a default topography presented
"KRN",8989.51,496,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,496,30,0)
^8989.513I^3^3
"KRN",8989.51,496,30,1,0)
1^200
"KRN",8989.51,496,30,2,0)
2^4
"KRN",8989.51,496,30,3,0)
3^9.4
"KRN",8989.51,497,-1)
0^20
"KRN",8989.51,497,0)
LR ACCESSION DEFAULT COL SAMP^Default Accessioning Collection Sample^1^Lab Section^Default Collection Sample
"KRN",8989.51,497,1)
P^62^Select the Lab Section for this default collection sample
"KRN",8989.51,497,4,0)
^8989.514^1^1
"KRN",8989.51,497,4,1,0)
AP DEFAULTS
"KRN",8989.51,497,4,"B","AP DEFAULTS",1)

"KRN",8989.51,497,6)
P^68
"KRN",8989.51,497,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,497,20,0)
^8989.512^4^4^3111216^^^^
"KRN",8989.51,497,20,1,0)
Allows the package/facility/user to set a default collection sample
"KRN",8989.51,497,20,2,0)
presented to the user when accessioning specimens into the Laboratory
"KRN",8989.51,497,20,3,0)
system.
"KRN",8989.51,497,20,4,0)

"KRN",8989.51,497,30,0)
^8989.513I^3^3
"KRN",8989.51,497,30,1,0)
1^200
"KRN",8989.51,497,30,2,0)
2^4
"KRN",8989.51,497,30,3,0)
3^9.4
"KRN",8989.51,498,-1)
0^21
"KRN",8989.51,498,0)
LR ACCESSION DEFAULT LAB TEST^Default Accessioning Lab Test^1^Lab Section^Default Laboratory Test
"KRN",8989.51,498,1)
P^60^Select the Lab Section for this default lab test
"KRN",8989.51,498,4,0)
^8989.514^1^1
"KRN",8989.51,498,4,1,0)
AP DEFAULTS
"KRN",8989.51,498,4,"B","AP DEFAULTS",1)

"KRN",8989.51,498,6)
P^68
"KRN",8989.51,498,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,498,20,0)
^8989.512^3^3^3081007^^^^
"KRN",8989.51,498,20,1,0)
Allows the package/facility/user to set a default laboratory test presented
"KRN",8989.51,498,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,498,20,3,0)

"KRN",8989.51,498,30,0)
^8989.513I^3^3
"KRN",8989.51,498,30,1,0)
1^200
"KRN",8989.51,498,30,2,0)
2^4
"KRN",8989.51,498,30,3,0)
3^9.4
"KRN",8989.51,499,-1)
0^31
"KRN",8989.51,499,0)
LR MANIFEST EXC PREV TEST^Exclude removed tests from building^1^Shipping Configuration^Exclude removed tests default^0
"KRN",8989.51,499,1)
Y^^Answer with yes/no to exclude previously removed tests building on manifest
"KRN",8989.51,499,6)
P^62.9
"KRN",8989.51,499,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,499,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,499,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,499,20,2,0)
when building a shipping configuration to the prompt "Exclude previously
"KRN",8989.51,499,20,3,0)
removed tests from building?"
"KRN",8989.51,499,30,0)
^8989.513I^2^2
"KRN",8989.51,499,30,1,0)
1^200
"KRN",8989.51,499,30,2,0)
10^9.4
"KRN",8989.51,500,-1)
0^23
"KRN",8989.51,500,0)
LR VER DEFAULT PERFORMING LAB^Default Performing Laboratory^0^Institution^Default Performing Laboratory
"KRN",8989.51,500,1)
P^4^Choose the institution that you want presented as the default performing lab.
"KRN",8989.51,500,2)

"KRN",8989.51,500,3)
I $$SCRNPL^LRVERA(1)
"KRN",8989.51,500,20,0)
^8989.512^4^4^3081103^^
"KRN",8989.51,500,20,1,0)
Allows the user to designate a default performing lab that is
"KRN",8989.51,500,20,2,0)
presented to the user when specifying the performing lab. 
"KRN",8989.51,500,20,3,0)
Normally the lab software defaults to the user's institution.
"KRN",8989.51,500,20,4,0)
This parameter allows the user to specify a different institution.
"KRN",8989.51,500,30,0)
^8989.513I^1^1
"KRN",8989.51,500,30,1,0)
1^200
"KRN",8989.51,505,-1)
0^24
"KRN",8989.51,505,0)
LR AP SURGERY REFERENCE^Document Surgery Package Case Info^0^^Document Surgery Case Info^0
"KRN",8989.51,505,1)
Y^^Answer YES/NO if a source statement is included when copying surgical case info.
"KRN",8989.51,505,20,0)
^8989.512^3^3^3081126^
"KRN",8989.51,505,20,1,0)
Allows site/division to indicate when copying surgical case information from
"KRN",8989.51,505,20,2,0)
the Surgery package during surgical pathology login if a statement is also
"KRN",8989.51,505,20,3,0)
added to the copied information documenting the source of the copied information.
"KRN",8989.51,505,30,0)
^8989.513I^2^2
"KRN",8989.51,505,30,1,0)
1^4
"KRN",8989.51,505,30,2,0)
2^9.4
"KRN",8989.51,506,-1)
0^25
"KRN",8989.51,506,0)
LR MI VERIFY CPRS ALERT^Prompt CPRS Alert in Micro Result Entry^0^^Send CPRS Alert in Micro Result Entry^0
"KRN",8989.51,506,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,506,4,0)
^8989.514^1^1
"KRN",8989.51,506,4,1,0)
MICRO
"KRN",8989.51,506,4,"B","MICRO",1)

"KRN",8989.51,506,20,0)
^8989.512^6^6^3090508^^
"KRN",8989.51,506,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,506,20,2,0)
to send a CPRS alert after editing a microbiology accession.
"KRN",8989.51,506,20,3,0)
 
"KRN",8989.51,506,20,4,0)
The user can indicate:
"KRN",8989.51,506,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,506,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,506,30,0)
^8989.513I^3^3
"KRN",8989.51,506,30,1,0)
1^200
"KRN",8989.51,506,30,2,0)
2^4
"KRN",8989.51,506,30,3,0)
3^9.4
"KRN",8989.51,508,-1)
0^32
"KRN",8989.51,508,0)
LR CH VERIFY CPRS ALERT^Prompt CPRS Alert in CH Result Entry^0^^Send CPRS Alert in CH Result Entry^0
"KRN",8989.51,508,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,508,4,0)
^8989.514^1^1
"KRN",8989.51,508,4,1,0)
CHEM/HEME
"KRN",8989.51,508,4,"B","CHEM/HEME",1)

"KRN",8989.51,508,20,0)
^^6^6^3090629^
"KRN",8989.51,508,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,508,20,2,0)
to send a CPRS alert after editing a Chem/Heme accession.
"KRN",8989.51,508,20,3,0)
 
"KRN",8989.51,508,20,4,0)
The user can indicate:
"KRN",8989.51,508,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,508,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,508,30,0)
^8989.513I^3^3
"KRN",8989.51,508,30,1,0)
1^200
"KRN",8989.51,508,30,2,0)
2^4
"KRN",8989.51,508,30,3,0)
3^9.4
"KRN",8989.51,525,-1)
0^26
"KRN",8989.51,525,0)
LR REPORTS FACILITY PRINT^Print Reporting/Printing Facility^0^^Print Reporting/Printing Facility^0
"KRN",8989.51,525,1)
S^0:None;1:Reporting Facility;2:Printing Facility;3:Both^Should name of reporting and/or printing facility appear on Lab reports.
"KRN",8989.51,525,4,0)
^8989.514^1^1
"KRN",8989.51,525,4,1,0)
REPORTS
"KRN",8989.51,525,4,"B","REPORTS",1)

"KRN",8989.51,525,20,0)
^^6^6^3091110^
"KRN",8989.51,525,20,1,0)
 
"KRN",8989.51,525,20,2,0)
Determines if the name and address of the:
"KRN",8989.51,525,20,3,0)
 1. Laboratory that is responsible for the report display on the Laboratory report.
"KRN",8989.51,525,20,4,0)
 2. Facility where the report is printed display on the Laboratory report.
"KRN",8989.51,525,20,5,0)
 3. Both names display on the Laboratory report.
"KRN",8989.51,525,20,6,0)

"KRN",8989.51,525,30,0)
^8989.513I^3^2
"KRN",8989.51,525,30,2,0)
1^4
"KRN",8989.51,525,30,3,0)
2^9.4
"KRN",8989.51,526,-1)
0^30
"KRN",8989.51,526,0)
LR MANIFEST DEFLT ACCESSION^Use default accession dates^1^Shipping Configuration^Use default accession dates default^0
"KRN",8989.51,526,1)
Y^^Answer with yes/no to Use default accession dates prompt
"KRN",8989.51,526,6)
P^62.9
"KRN",8989.51,526,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,526,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,526,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,526,20,2,0)
when building a shipping configuration to the prompt "Use default 
"KRN",8989.51,526,20,3,0)
accession dates?"
"KRN",8989.51,526,30,0)
^8989.513I^2^2
"KRN",8989.51,526,30,1,0)
1^200
"KRN",8989.51,526,30,2,0)
10^9.4
"KRN",8989.51,529,-1)
0^29
"KRN",8989.51,529,0)
LR ASK PERFORMING LAB MICRO^Ask Performing Lab Micro^0^^Ask Performing Lab for MICRO^0
"KRN",8989.51,529,1)
Y^^Enter yes to be prompted for Performing Lab for Microbiology tests.
"KRN",8989.51,529,4,0)
^8989.514^1^1
"KRN",8989.51,529,4,1,0)
PERFORMING LAB
"KRN",8989.51,529,4,"B","PERFORMING LAB",1)

"KRN",8989.51,529,6)

"KRN",8989.51,529,20,0)
^8989.512^5^5^3111028^^^^
"KRN",8989.51,529,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,529,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,529,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,529,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,529,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,529,30,0)
^8989.513I^3^3
"KRN",8989.51,529,30,1,0)
1^200
"KRN",8989.51,529,30,2,0)
2^4
"KRN",8989.51,529,30,3,0)
3^9.4
"KRN",8989.51,530,-1)
0^28
"KRN",8989.51,530,0)
LR ASK PERFORMING LAB AP^Ask Performing Lab AP^0^^Ask Performing Lab AP^0
"KRN",8989.51,530,1)
Y^^Enter yes to be prompted for Performing Lab for Anatomic Pathology tests.
"KRN",8989.51,530,4,0)
^8989.514^1^1
"KRN",8989.51,530,4,1,0)
PERFORMING LAB
"KRN",8989.51,530,4,"B","PERFORMING LAB",1)

"KRN",8989.51,530,6)

"KRN",8989.51,530,20,0)
^8989.512^5^5^3111205^^^^
"KRN",8989.51,530,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,530,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,530,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,530,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,530,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,530,30,0)
^8989.513I^3^3
"KRN",8989.51,530,30,1,0)
1^200
"KRN",8989.51,530,30,2,0)
2^4
"KRN",8989.51,530,30,3,0)
3^9.4
"KRN",8989.52,11,-1)
0^2
"KRN",8989.52,11,0)
LR DOMAIN^Lab Domain Level Parameters^4
"KRN",8989.52,11,10,0)
^8989.521IA^24^22
"KRN",8989.52,11,10,1,0)
1^LR PHLEBOTOMY COLLECTION
"KRN",8989.52,11,10,3,0)
3^LR EGFR METHOD
"KRN",8989.52,11,10,4,0)
4^LR EGFR AGE CUTOFF
"KRN",8989.52,11,10,5,0)
5^LR EGFR RESULT SUPPRESS
"KRN",8989.52,11,10,6,0)
2.1^LR VER EM VERIFY BY UID
"KRN",8989.52,11,10,7,0)
2.2^LR VER EA VERIFY BY UID
"KRN",8989.52,11,10,8,0)
100^LR AP REPORT SELECTION
"KRN",8989.52,11,10,9,0)
105^LR AP SNOMED SYSTEM PRINT
"KRN",8989.52,11,10,11,0)
300^LR CH GUI REPORT RIGHT MARGIN
"KRN",8989.52,11,10,12,0)
305^LR MI GUI REPORT RIGHT MARGIN
"KRN",8989.52,11,10,13,0)
310^LR AP GUI REPORT RIGHT MARGIN
"KRN",8989.52,11,10,14,0)
200^LR MI VERIFY DISPLAY PROVIDER
"KRN",8989.52,11,10,15,0)
130.1^LR ACCESSION DEFAULT SPECIMEN
"KRN",8989.52,11,10,16,0)
130.2^LR ACCESSION DEFAULT COL SAMP
"KRN",8989.52,11,10,17,0)
130.3^LR ACCESSION DEFAULT LAB TEST
"KRN",8989.52,11,10,18,0)
107^LR AP SURGERY REFERENCE
"KRN",8989.52,11,10,19,0)
201^LR MI VERIFY CPRS ALERT
"KRN",8989.52,11,10,20,0)
202^LR CH VERIFY CPRS ALERT
"KRN",8989.52,11,10,21,0)
1.009^LR LAB COLLECT FUTURE
"KRN",8989.52,11,10,22,0)
400^LR REPORTS FACILITY PRINT
"KRN",8989.52,11,10,23,0)
101^LR ASK PERFORMING LAB AP
"KRN",8989.52,11,10,24,0)
102^LR ASK PERFORMING LAB MICRO
"KRN",8989.52,90,-1)
0^1
"KRN",8989.52,90,0)
LR USER^Lab User Level Parameters^200
"KRN",8989.52,90,10,0)
^8989.521IA^23^23
"KRN",8989.52,90,10,1,0)
100^LR VER DISPLAY PREV COMMENT
"KRN",8989.52,90,10,2,0)
200^LA7UTILA PARSE
"KRN",8989.52,90,10,3,0)
210^LA7UTILA USE BROWSER
"KRN",8989.52,90,10,4,0)
50^LR LABEL PRINTER DEFAULT
"KRN",8989.52,90,10,5,0)
220^LA7UTILA SHOIDS
"KRN",8989.52,90,10,6,0)
125^LRAPRES1 AP ALERT
"KRN",8989.52,90,10,7,0)
120^LR AP REPORT SELECTION
"KRN",8989.52,90,10,8,0)
300^LR CH GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,9,0)
305^LR MI GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,10,0)
310^LR AP GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,11,0)
110^LR MI VERIFY DISPLAY PROVIDER
"KRN",8989.52,90,10,12,0)
130.1^LR ACCESSION DEFAULT SPECIMEN
"KRN",8989.52,90,10,13,0)
130.2^LR ACCESSION DEFAULT COL SAMP
"KRN",8989.52,90,10,14,0)
130.3^LR ACCESSION DEFAULT LAB TEST
"KRN",8989.52,90,10,15,0)
150.1^LR MANIFEST EXC PREV TEST
"KRN",8989.52,90,10,16,0)
102^LR VER DEFAULT PERFORMING LAB
"KRN",8989.52,90,10,17,0)
112.6^LR MI VERIFY CPRS ALERT
"KRN",8989.52,90,10,18,0)
112.3^LR CH VERIFY CPRS ALERT
"KRN",8989.52,90,10,19,0)
150.2^LR MANIFEST DEFLT ACCESSION
"KRN",8989.52,90,10,20,0)
900^LR MAPPING DEFAULT DIRECTORY
"KRN",8989.52,90,10,21,0)
900.1^LR MAPPING DEFAULT FILESPEC
"KRN",8989.52,90,10,22,0)
104^LR ASK PERFORMING LAB AP
"KRN",8989.52,90,10,23,0)
105^LR ASK PERFORMING LAB MICRO
"KRN",8989.52,95,-1)
1^3
"KRN",8989.52,95,0)
LR PKG
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"PGL",64.061,0,10,10)
SUBTYPE^P64.062'^LAB(64.062,^0;10^Q
"PGL",64.061,63,4,63.3)
SCT TOP CONCEPT^*P64.061'^LAB(64.061,^63;4^S DIC("S")="I $P(^(0),U,11)=""SCT""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2941128
"PKG",26,22,1,"PAH",1,0)
350^3120718
"PKG",26,22,1,"PAH",1,1,0)
^^1^1^3120718
"PKG",26,22,1,"PAH",1,1,1,0)
Refer to National Patch Module.
"PRE")
LR350
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
184
"RTN","LR350")
0^^B99700348
"RTN","LR350",1,0)
LR350 ;DALOI/JMC - LR*5.2*350 KIDS ROUTINE ;Nov 26, 2008
"RTN","LR350",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LR350",3,0)
 ;
"RTN","LR350",4,0)
 ; File 19/10156
"RTN","LR350",5,0)
 ; File ^XUSEC/10076
"RTN","LR350",6,0)
 ;
"RTN","LR350",7,0)
EN ;
"RTN","LR350",8,0)
 ; Does not delete transport global.
"RTN","LR350",9,0)
 N STR,LRERR,LRLST,LRXUSEC,POS
"RTN","LR350",10,0)
 S XPDNOQUE=1 ;no queuing
"RTN","LR350",11,0)
 S POS=$G(IOM,80) S:POS<1 POS=80
"RTN","LR350",12,0)
 K ^TMP("LR350",$J)
"RTN","LR350",13,0)
 ;
"RTN","LR350",14,0)
 I '$G(XPDENV) D
"RTN","LR350",15,0)
 . S STR="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LR350",16,0)
 . D ALERT(STR)
"RTN","LR350",17,0)
 . D BMES("Sending transport global loaded alert to mail group G.LMI")
"RTN","LR350",18,0)
 ;
"RTN","LR350",19,0)
 I $G(XPDENV) D
"RTN","LR350",20,0)
 . D BMES("Sending install started alert to mail group G.LMI")
"RTN","LR350",21,0)
 . S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LR350",22,0)
 . D ALERT(STR)
"RTN","LR350",23,0)
 ;
"RTN","LR350",24,0)
 ; Perform environment checks
"RTN","LR350",25,0)
 S LRERR=0
"RTN","LR350",26,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D
"RTN","LR350",27,0)
 . D BMES("Terminal Device is not defined.")
"RTN","LR350",28,0)
 . S LRERR=2
"RTN","LR350",29,0)
 ;
"RTN","LR350",30,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D
"RTN","LR350",31,0)
 . D BMES("Please login to set local DUZ variables.")
"RTN","LR350",32,0)
 . S LRERR=2
"RTN","LR350",33,0)
 ;
"RTN","LR350",34,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D
"RTN","LR350",35,0)
 . D BMES("You are not a valid user on this system.")
"RTN","LR350",36,0)
 . S LRERR=2
"RTN","LR350",37,0)
 ;
"RTN","LR350",38,0)
 ; Check that installer has XUPROG and ZTMQ security keys
"RTN","LR350",39,0)
 S LRLST(1)="XUPROG",LRLST(2)="ZTMQ"
"RTN","LR350",40,0)
 D OWNSKEY^XUSRB(.LRXUSEC,.LRLST)
"RTN","LR350",41,0)
 F LRLST=1,2 I LRXUSEC(LRLST)'=1 D
"RTN","LR350",42,0)
 . W $C(7)
"RTN","LR350",43,0)
 . D BMES("You do not own the "_LRLST(LRLST)_" security key.")
"RTN","LR350",44,0)
 . S LRERR=2
"RTN","LR350",45,0)
 ;
"RTN","LR350",46,0)
 ; If installing, run system config
"RTN","LR350",47,0)
 I 'LRERR,$G(XPDENV) D
"RTN","LR350",48,0)
 . D ENV2
"RTN","LR350",49,0)
 . I $D(XPDABORT) S LRERR=1 Q
"RTN","LR350",50,0)
 . D BMES("N O T E:  If you abort this installation")
"RTN","LR350",51,0)
 . D MES("D RESTORE^LR350 from this console.")
"RTN","LR350",52,0)
 ;
"RTN","LR350",53,0)
 I $G(XPDENV)=1 S XPDDIQ("XPZ1","B")="YES"
"RTN","LR350",54,0)
 ;
"RTN","LR350",55,0)
 ; Prevent queuing of install since need locks on globals.
"RTN","LR350",56,0)
 I $G(XPDENV)=1 S XPDNOQUE=1
"RTN","LR350",57,0)
 ;
"RTN","LR350",58,0)
 I LRERR!$D(XPDABORT)!$D(XPDQUIT) D
"RTN","LR350",59,0)
 . S LRERR=1,XPDABORT=2
"RTN","LR350",60,0)
 . W !,$C(7),! D BMES("* * * Environment check FAILED * * *")
"RTN","LR350",61,0)
 ;
"RTN","LR350",62,0)
 I 'LRERR W ! D BMES("--- Environment is okay ---")
"RTN","LR350",63,0)
 Q
"RTN","LR350",64,0)
 ;
"RTN","LR350",65,0)
 ;
"RTN","LR350",66,0)
ALERT(MSG,RECIPS) ;
"RTN","LR350",67,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LR350",68,0)
 S XQAMSG=$G(MSG)
"RTN","LR350",69,0)
 I $$GOTLOCAL^XMXAPIG("LMI") S XQA("G.LMI")=""
"RTN","LR350",70,0)
 E  S XQA(DUZ)=""
"RTN","LR350",71,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LR350",72,0)
 D SETUP^XQALERT
"RTN","LR350",73,0)
 Q
"RTN","LR350",74,0)
 ;
"RTN","LR350",75,0)
 ;
"RTN","LR350",76,0)
BMES(STR) ;
"RTN","LR350",77,0)
 ; Write string
"RTN","LR350",78,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LR350",79,0)
 Q
"RTN","LR350",80,0)
 ;
"RTN","LR350",81,0)
 ;
"RTN","LR350",82,0)
MES(STR,CJ,LM) ;
"RTN","LR350",83,0)
 ; Displays a string using MES^XPDUTL
"RTN","LR350",84,0)
 ;  Inputs
"RTN","LR350",85,0)
 ;  STR: String to display
"RTN","LR350",86,0)
 ;   CJ: Center text?  1=yes 0=1 <dflt=1>
"RTN","LR350",87,0)
 ;   LM: Left Margin (padding)
"RTN","LR350",88,0)
 N X
"RTN","LR350",89,0)
 S STR=$G(STR)
"RTN","LR350",90,0)
 S CJ=$G(CJ,1)
"RTN","LR350",91,0)
 S LM=$G(LM)
"RTN","LR350",92,0)
 I LM<0 S LM=0
"RTN","LR350",93,0)
 I CJ S STR=$$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," ")
"RTN","LR350",94,0)
 I 'CJ I LM S X="" S $P(X," ",LM)=" " S STR=X_STR
"RTN","LR350",95,0)
 D MES^XPDUTL(STR)
"RTN","LR350",96,0)
 Q
"RTN","LR350",97,0)
 ;
"RTN","LR350",98,0)
 ;
"RTN","LR350",99,0)
GETLOCK(ZZZZTARG,ZZZZSECS,ZZZZSHOW) ;
"RTN","LR350",100,0)
 ; Acquire a Lock on the specified resource.
"RTN","LR350",101,0)
 ; Note: "ZZZ*" variable names used to avoid possible variable
"RTN","LR350",102,0)
 ;  name clashes with @TARG -- "^GBL(1,X)" N X then @TARG would
"RTN","LR350",103,0)
 ;  change the intended resource for lock since X would be different.
"RTN","LR350",104,0)
 ; Inputs
"RTN","LR350",105,0)
 ;   TARG : The Resource to Lock (ie "^GBL(1)")
"RTN","LR350",106,0)
 ;   SECS : Total # of seconds to wait for the lock
"RTN","LR350",107,0)
 ;        :  (Minimum value is 5 seconds)
"RTN","LR350",108,0)
 ;        : Negative value means one solid wait (no breaks)
"RTN","LR350",109,0)
 ;   SHOW : >0:show progress, 0:dont show progress
"RTN","LR350",110,0)
 ;        :    1:dots  2:countdown  3: timeleft+dots
"RTN","LR350",111,0)
 ; Output
"RTN","LR350",112,0)
 ;         1 if lock obtained, 0 if not.
"RTN","LR350",113,0)
 ;         If SHOW>0 API outputs progress info
"RTN","LR350",114,0)
 ;
"RTN","LR350",115,0)
 N ZZZZZZZI,ZZZZLOCK,ZZZTRIES,ZZZZZZTO
"RTN","LR350",116,0)
 S ZZZZLOCK=0
"RTN","LR350",117,0)
 S ZZZZTARG=$G(ZZZZTARG)
"RTN","LR350",118,0)
 S ZZZZSECS=+$G(ZZZZSECS)
"RTN","LR350",119,0)
 S ZZZZSHOW=+$G(ZZZZSHOW)
"RTN","LR350",120,0)
 S ZZZZZZTO=$G(DILOCKTM,5) ;timeout
"RTN","LR350",121,0)
 S:ZZZZZZTO<5 ZZZZZZTO=5
"RTN","LR350",122,0)
 I ZZZZSECS'<0 I ZZZZSECS<5 S ZZZZSECS=5
"RTN","LR350",123,0)
 S ZZZTRIES=ZZZZSECS/ZZZZZZTO
"RTN","LR350",124,0)
 S:ZZZTRIES["." ZZZTRIES=$P(ZZZTRIES,".",1)+1
"RTN","LR350",125,0)
 ;
"RTN","LR350",126,0)
 I ZZZZSECS>0 F ZZZZZZZI=1:1:ZZZTRIES L +(@ZZZZTARG):ZZZZZZTO S:$T ZZZZLOCK=1 Q:ZZZZLOCK  D  ;
"RTN","LR350",127,0)
 . I ZZZTRIES>1 I ZZZZSHOW D  ;
"RTN","LR350",128,0)
 . . I ZZZZSHOW=3 W:ZZZZZZZI=1 " ",ZZZTRIES-1*ZZZZZZTO W "."
"RTN","LR350",129,0)
 . . I ZZZZSHOW=2 W " ",(ZZZTRIES-ZZZZZZZI)*ZZZZZZTO
"RTN","LR350",130,0)
 . . I ZZZZSHOW=1 W "."
"RTN","LR350",131,0)
 ;
"RTN","LR350",132,0)
 I ZZZZSECS<0 D  ;
"RTN","LR350",133,0)
 . S ZZZZSECS=-ZZZZSECS
"RTN","LR350",134,0)
 . S:ZZZZSECS<ZZZZZZTO ZZZZSECS=ZZZZZZTO
"RTN","LR350",135,0)
 . L +(@ZZZZTARG):ZZZZSECS
"RTN","LR350",136,0)
 . S:$T ZZZZLOCK=1
"RTN","LR350",137,0)
 ;
"RTN","LR350",138,0)
 Q ZZZZLOCK
"RTN","LR350",139,0)
 ;
"RTN","LR350",140,0)
 ;
"RTN","LR350",141,0)
LOCKEM() ;
"RTN","LR350",142,0)
 ; Lock install globals
"RTN","LR350",143,0)
 ; Returns 1 on success  or  0|Global it couldnt lock
"RTN","LR350",144,0)
 N LRLCK,LRLCK2,LRLCK3,X,STATUS
"RTN","LR350",145,0)
 S STATUS=0
"RTN","LR350",146,0)
 S LRLCK="^LAHM(62.48,""Z"")"
"RTN","LR350",147,0)
 S LRLCK2="^LAHM(62.49,""HL7 PROCESS"")"
"RTN","LR350",148,0)
 ; S LRLCK3="^LAH(""Z"")"
"RTN","LR350",149,0)
 S X=$$GETLOCK(LRLCK,20,1)
"RTN","LR350",150,0)
 I 'X S STATUS="0|"_LRLCK
"RTN","LR350",151,0)
 I X D  ;
"RTN","LR350",152,0)
 . S X=$$GETLOCK(LRLCK2,20,1)
"RTN","LR350",153,0)
 . I 'X S STATUS="0|"_LRLCK2 L -@LRLCK Q
"RTN","LR350",154,0)
 . ; S X=$$GETLOCK(LRLCK3,20,1)
"RTN","LR350",155,0)
 . ; I 'X S STATUS="0|"_LRLCK3 L -@LRLCK2 L -@LRLCK Q
"RTN","LR350",156,0)
 . S STATUS=1
"RTN","LR350",157,0)
 Q STATUS
"RTN","LR350",158,0)
 ;
"RTN","LR350",159,0)
 ;
"RTN","LR350",160,0)
RESTORE ;
"RTN","LR350",161,0)
 N X,LRADL,STR,OKAY
"RTN","LR350",162,0)
 D BMES("*  *  *  Releasing system  *  *  *")
"RTN","LR350",163,0)
 ; Release locks
"RTN","LR350",164,0)
 S X=$G(IOM,80)\2-25
"RTN","LR350",165,0)
 ;S STR="Released lock on ^LAH(""Z"")"
"RTN","LR350",166,0)
 ;D MES(STR,"",X)
"RTN","LR350",167,0)
 ;L -^LAH("Z")
"RTN","LR350",168,0)
 ;
"RTN","LR350",169,0)
 S STR="Released lock on ^LAHM(62.49,""HL7 PROCESS"")"
"RTN","LR350",170,0)
 D MES(STR,"",X)
"RTN","LR350",171,0)
 L -^LAHM(62.49,"HL7 PROCESS")
"RTN","LR350",172,0)
 ;
"RTN","LR350",173,0)
 S STR="Released lock on ^LAHM(62.48,""Z"")"
"RTN","LR350",174,0)
 D MES(STR,"",X)
"RTN","LR350",175,0)
 L -^LAHM(62.48,"Z")
"RTN","LR350",176,0)
 ;
"RTN","LR350",177,0)
 ; reset options
"RTN","LR350",178,0)
 D BMES(" ")
"RTN","LR350",179,0)
 D OPTRE("LA7 ADL START/STOP")
"RTN","LR350",180,0)
 D OPTRE("LA DOWN")
"RTN","LR350",181,0)
 D OPTRE("LA7 ADL SEND")
"RTN","LR350",182,0)
 D OPTRE("LRMENU")
"RTN","LR350",183,0)
 ;
"RTN","LR350",184,0)
 ; Restart auto download process status if stopped by install
"RTN","LR350",185,0)
 S LRADL=$G(^TMP("LR350",$J,"ADL"))
"RTN","LR350",186,0)
 I LRADL=1 D  ;
"RTN","LR350",187,0)
 . D ZTSK^LA7ADL
"RTN","LR350",188,0)
 . D SETSTOP^LA7ADL1(1,DUZ)
"RTN","LR350",189,0)
 . D BMES("Restarting Lab Universal Interface Auto Download Job")
"RTN","LR350",190,0)
 . K ^TMP("LR350",$J,"ADL")
"RTN","LR350",191,0)
 . H 3
"RTN","LR350",192,0)
 ;
"RTN","LR350",193,0)
 ; If ADL not started, notify user to restart
"RTN","LR350",194,0)
 S X=$P($G(^LA("ADL","STOP")),"^")
"RTN","LR350",195,0)
 I X'=0 D BMES("Be sure to restart the Lab Universal Interface Auto Download Job")
"RTN","LR350",196,0)
 ;
"RTN","LR350",197,0)
 I $G(^TMP("LR350",$J,"POC"))=1 D BMES("Restart your POC COTS' VistA link.")
"RTN","LR350",198,0)
 ;
"RTN","LR350",199,0)
 K ^TMP("LR350",$J)
"RTN","LR350",200,0)
 Q
"RTN","LR350",201,0)
 ;
"RTN","LR350",202,0)
 ;
"RTN","LR350",203,0)
OPTOOO(LROPT,MODE) ;
"RTN","LR350",204,0)
 ; File 19/10156
"RTN","LR350",205,0)
 ; Mark Option out of order or clear (OPTDE^XPDUTL doesn't work in ENV)
"RTN","LR350",206,0)
 N R19,STATUS,LROOO
"RTN","LR350",207,0)
 S LROPT=$G(LROPT),MODE=$G(MODE),(LROOO,STATUS)=""
"RTN","LR350",208,0)
 ;
"RTN","LR350",209,0)
 S R19=$$LKOPT^XPDMENU(LROPT)
"RTN","LR350",210,0)
 I 'R19 S STATUS="0^1^Option not found"
"RTN","LR350",211,0)
 E  S LROOO=$$GET1^DIQ(19,R19_",",2,"","","LRMSG")
"RTN","LR350",212,0)
 ;
"RTN","LR350",213,0)
 I R19,'MODE D
"RTN","LR350",214,0)
 . I LROOO="" S LROOO="OOO VIA LR*5.2*350"
"RTN","LR350",215,0)
 . E  S STATUS="0^2^Already OOO"
"RTN","LR350",216,0)
 ;
"RTN","LR350",217,0)
 I R19,MODE D
"RTN","LR350",218,0)
 . I LROOO="OOO VIA LR*5.2*350" S LROOO=""
"RTN","LR350",219,0)
 . E  S STATUS="0^3^OOO before patch installation"
"RTN","LR350",220,0)
 ;
"RTN","LR350",221,0)
 I STATUS="" D
"RTN","LR350",222,0)
 . D OUT^XPDMENU(LROPT,LROOO)
"RTN","LR350",223,0)
 . S STATUS=1
"RTN","LR350",224,0)
 ;
"RTN","LR350",225,0)
 Q STATUS
"RTN","LR350",226,0)
 ;
"RTN","LR350",227,0)
 ;
"RTN","LR350",228,0)
OPTDE(OPT,STOP) ;
"RTN","LR350",229,0)
 N X,X2,Y,STATUS
"RTN","LR350",230,0)
 S STATUS=0,X2=$G(IOM,80)/2-15
"RTN","LR350",231,0)
 D MES("Disabling Option ["_OPT_"]",0,X2)
"RTN","LR350",232,0)
 S X=$$OPTOOO(OPT,0)
"RTN","LR350",233,0)
 I 'X D
"RTN","LR350",234,0)
 . I $P(X,"^",2)=2 D MES("["_OPT_"] already disabled.") Q
"RTN","LR350",235,0)
 . D MES("Could not disable Option ["_OPT_"]",0,X2-5)
"RTN","LR350",236,0)
 . S (STATUS,STOP)=1
"RTN","LR350",237,0)
 Q STATUS
"RTN","LR350",238,0)
 ;
"RTN","LR350",239,0)
 ;
"RTN","LR350",240,0)
OPTRE(OPT) ;
"RTN","LR350",241,0)
 ; Re-enable options
"RTN","LR350",242,0)
 N X,Y
"RTN","LR350",243,0)
 S OPT=$G(OPT)
"RTN","LR350",244,0)
 D MES("Enabling Option ["_OPT_"]",1,0)
"RTN","LR350",245,0)
 S X=0
"RTN","LR350",246,0)
 S X=$$OPTOOO(OPT,1)
"RTN","LR350",247,0)
 I 'X D  ;
"RTN","LR350",248,0)
 . S Y=$P(X,"^",2)
"RTN","LR350",249,0)
 . I Y>1 D MES("["_OPT_"] left disabled - "_$P(X,"^",3),1,0)
"RTN","LR350",250,0)
 . W $C(7)
"RTN","LR350",251,0)
 . D MES("Re-enable ["_OPT_"] manually.",1,0)
"RTN","LR350",252,0)
 Q
"RTN","LR350",253,0)
 ;
"RTN","LR350",254,0)
 ;
"RTN","LR350",255,0)
ENV2 ;
"RTN","LR350",256,0)
 N X,Y,I,STOP,ABORT,LR6248
"RTN","LR350",257,0)
 S ^TMP("LR350",$J,1)=0
"RTN","LR350",258,0)
 S ^TMP("LR350",$J,"POC")=0
"RTN","LR350",259,0)
 S ABORT=0
"RTN","LR350",260,0)
 S STOP=0
"RTN","LR350",261,0)
 S X="LA7POC"
"RTN","LR350",262,0)
 F  S X=$O(^LAHM(62.48,"B",X)) Q:X=""  Q:X'?1"LA7POC"1.E  S LR6248=$O(^LAHM(62.48,"B",X,0)) I LR6248 D  Q:STOP  ;
"RTN","LR350",263,0)
 . S Y=^LAHM(62.48,LR6248,0)
"RTN","LR350",264,0)
 . Q:$P(Y,U,3)'=1
"RTN","LR350",265,0)
 . S STOP=1
"RTN","LR350",266,0)
 . S ^TMP("LR350",$J,"POC")=1
"RTN","LR350",267,0)
 ;
"RTN","LR350",268,0)
 I STOP D  S STOP=0
"RTN","LR350",269,0)
 . W $C(7)
"RTN","LR350",270,0)
 . D BMES(" ")
"RTN","LR350",271,0)
 . D BMES("IMPORTANT: Shutdown your POC COTS system's VistA link.")
"RTN","LR350",272,0)
 . S Y=$$PROMPT("Continue",.ABORT)
"RTN","LR350",273,0)
 . I 'Y S ABORT=1
"RTN","LR350",274,0)
 ;
"RTN","LR350",275,0)
 I ABORT D  Q  ;
"RTN","LR350",276,0)
 . D BMES("** Aborted **")
"RTN","LR350",277,0)
 . D RESTORE^LR350
"RTN","LR350",278,0)
 . S XPDABORT=2
"RTN","LR350",279,0)
 ;
"RTN","LR350",280,0)
 ; disable options
"RTN","LR350",281,0)
 S STOP=0
"RTN","LR350",282,0)
 S X=$$OPTDE("LRMENU",.STOP)
"RTN","LR350",283,0)
 S X=$$OPTDE("LA7 ADL SEND",.STOP)
"RTN","LR350",284,0)
 S X=$$OPTDE("LA DOWN",.STOP)
"RTN","LR350",285,0)
 S X=$$OPTDE("LA7 ADL START/STOP",.STOP)
"RTN","LR350",286,0)
 ;
"RTN","LR350",287,0)
 I STOP D  ;
"RTN","LR350",288,0)
 . W $C(7)
"RTN","LR350",289,0)
 . D BMES("One or more Options weren't disabled.")
"RTN","LR350",290,0)
 . S Y=$$PROMPT("Continue",.ABORT)
"RTN","LR350",291,0)
 . I 'Y S ABORT=1
"RTN","LR350",292,0)
 ;
"RTN","LR350",293,0)
 I ABORT D  Q  ;
"RTN","LR350",294,0)
 . D BMES("Install aborted.")
"RTN","LR350",295,0)
 . D RESTORE^LR350
"RTN","LR350",296,0)
 . S XPDABORT=2
"RTN","LR350",297,0)
 ;
"RTN","LR350",298,0)
 ; Check and shutdown Auto Download job.
"RTN","LR350",299,0)
 S X=$G(^LA("ADL","STOP"))
"RTN","LR350",300,0)
 I $P(X,"^")=0 D  ;
"RTN","LR350",301,0)
 . D BMES("Shutting down Lab Universal Interface Auto Download Job")
"RTN","LR350",302,0)
 . D SETSTOP^LA7ADL1(2,DUZ)
"RTN","LR350",303,0)
 . S ^TMP("LR350",$J,"ADL")=1
"RTN","LR350",304,0)
 . F I=1:1:10 W "." H 1
"RTN","LR350",305,0)
 ;
"RTN","LR350",306,0)
 ; Find existing running HL7 tasks and tell them to shutdown
"RTN","LR350",307,0)
 D BMES("Shutting down currently running Lab HL7 processes")
"RTN","LR350",308,0)
 D STOPTASK
"RTN","LR350",309,0)
 ;
"RTN","LR350",310,0)
 ; get locks
"RTN","LR350",311,0)
 S ABORT=0
"RTN","LR350",312,0)
 S STOP=0
"RTN","LR350",313,0)
 F  D  Q:STOP  Q:ABORT  ;
"RTN","LR350",314,0)
 . S Y=0
"RTN","LR350",315,0)
 . D BMES("Acquiring locks ...")
"RTN","LR350",316,0)
 . S X=$$LOCKEM^LR350()
"RTN","LR350",317,0)
 . I X S STOP=1 Q
"RTN","LR350",318,0)
 . D BMES("Couldn't lock "_$P(X,"|",2))
"RTN","LR350",319,0)
 . S Y=$$PROMPT("Try again",.ABORT)
"RTN","LR350",320,0)
 . Q:ABORT
"RTN","LR350",321,0)
 . I 'Y S ABORT=1 Q
"RTN","LR350",322,0)
 . I Y=2 S STOP=1 ;ignore
"RTN","LR350",323,0)
 ;
"RTN","LR350",324,0)
 I ABORT D  Q  ;
"RTN","LR350",325,0)
 . D RESTORE^LR350
"RTN","LR350",326,0)
 . D BMES("** Aborted **")
"RTN","LR350",327,0)
 . S XPDABORT=2
"RTN","LR350",328,0)
 ;
"RTN","LR350",329,0)
 D BMES("Locks"_$S(Y=2:" NOT",1:"")_" acquired.")
"RTN","LR350",330,0)
 ;
"RTN","LR350",331,0)
 ; Indicates all system setup steps are done, LA74 checks this node as well
"RTN","LR350",332,0)
 S ^TMP("LR350",$J,1)=1
"RTN","LR350",333,0)
 Q
"RTN","LR350",334,0)
 ;
"RTN","LR350",335,0)
 ;
"RTN","LR350",336,0)
PROMPT(STR,ABORT) ;
"RTN","LR350",337,0)
 N DIR,Y,X,I,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LR350",338,0)
 S DIR(0)="SAO^Y:YES;N:NO;I:IGNORE"
"RTN","LR350",339,0)
 S X=$P(STR,":")_" (Yes/No/Ignore): "
"RTN","LR350",340,0)
 S I=$G(IOM,80)-$L(X)-8/2,Y="",$P(Y," ",I)=" " ; pseudo center text
"RTN","LR350",341,0)
 S DIR("A")=Y_X,DIR("B")="YES"
"RTN","LR350",342,0)
 D ^DIR
"RTN","LR350",343,0)
 S Y=$S(Y="Y":1,Y="I":2,Y="":1,1:0)
"RTN","LR350",344,0)
 I Y="" S Y=1
"RTN","LR350",345,0)
 I 'Y S ABORT=1
"RTN","LR350",346,0)
 I $D(DIRUT) S ABORT=1
"RTN","LR350",347,0)
 Q Y
"RTN","LR350",348,0)
 ;
"RTN","LR350",349,0)
 ;
"RTN","LR350",350,0)
PROMPT2(STR,ABORT) ;
"RTN","LR350",351,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,X,Y
"RTN","LR350",352,0)
 S DIR(0)="YO"
"RTN","LR350",353,0)
 S I=$G(IOM,80)-$L(STR)-8/2,Y="",$P(Y," ",I)=" " ;pseudo center text
"RTN","LR350",354,0)
 S DIR("A")=Y_X,DIR("B")="YES"
"RTN","LR350",355,0)
 D ^DIR
"RTN","LR350",356,0)
 I Y="" S Y=1
"RTN","LR350",357,0)
 I 'Y S ABORT=1
"RTN","LR350",358,0)
 I $D(DIRUT) S ABORT=1
"RTN","LR350",359,0)
 Q +Y
"RTN","LR350",360,0)
 ;
"RTN","LR350",361,0)
 ;
"RTN","LR350",362,0)
STOPTASK ;  Find existing running Lab HL7 tasks and tell them to shutdown
"RTN","LR350",363,0)
 ;
"RTN","LR350",364,0)
 N LRRTN,LRTASK,LRX,ZTNAME,ZTSK
"RTN","LR350",365,0)
 S ZTNAME="LR*5.2*350/LA*5.2*74 install"
"RTN","LR350",366,0)
 F LRRTN="EN^LA7VIN","EN^LRVRPOC","EN^LA7UIIN" D
"RTN","LR350",367,0)
 . K LRTASK,ZTSK
"RTN","LR350",368,0)
 . D RTN^%ZTLOAD(LRRTN,"LRTASK")
"RTN","LR350",369,0)
 . I '$D(LRTASK) Q
"RTN","LR350",370,0)
 . S LRTASK=0
"RTN","LR350",371,0)
 . F  S LRTASK=$O(LRTASK(LRTASK)) Q:'LRTASK  D
"RTN","LR350",372,0)
 . . K ZTSK
"RTN","LR350",373,0)
 . . S ZTSK=LRTASK D STAT^%ZTLOAD
"RTN","LR350",374,0)
 . . I ZTSK(1)>0,ZTSK(1)<3 S LRX=$$ASKSTOP^%ZTLOAD(LRTASK)
"RTN","LR350",375,0)
 Q
"RTN","LR350A")
0^^B27118063
"RTN","LR350A",1,0)
LR350A ;DALOI/JMC - LR*5.2*350 KIDS ROUTINE CONT ;12/05/11  12:11
"RTN","LR350A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LR350A",3,0)
 ;
"RTN","LR350A",4,0)
 Q
"RTN","LR350A",5,0)
 ;
"RTN","LR350A",6,0)
 ;
"RTN","LR350A",7,0)
PRE ;
"RTN","LR350A",8,0)
 ; KIDS Pre install for LR*5.2*350
"RTN","LR350A",9,0)
 N X,DA,DIU,DIK,LRERR,LRFN,LRFLD,LRMSG
"RTN","LR350A",10,0)
 D BMES("*** Pre install started ***")
"RTN","LR350A",11,0)
 ; Delete SNOMED fields - (field is now not required)
"RTN","LR350A",12,0)
 D BMES("Purging field #2 DD for file #61 and file #61.2")
"RTN","LR350A",13,0)
 K DA,DIK
"RTN","LR350A",14,0)
 S DA=2,DA(1)=61,DIK="^DD(61," D ^DIK K DA,DIK
"RTN","LR350A",15,0)
 S DA=2,DA(1)=61.2,DIK="^DD(61.2," D ^DIK K DA,DIK
"RTN","LR350A",16,0)
 ;
"RTN","LR350A",17,0)
 ; Delete SNOMED CT fields #20-24 in files 61, 61.2, 62
"RTN","LR350A",18,0)
 ;  if installed due to previous test build to insure clean install of these fields.
"RTN","LR350A",19,0)
 F LRFN=61,61.2,62 D
"RTN","LR350A",20,0)
 . F LRFLD=20:1:24 D
"RTN","LR350A",21,0)
 . . I '$$VFIELD^DILFD(LRFN,LRFLD) Q
"RTN","LR350A",22,0)
 . . N DA,DIK
"RTN","LR350A",23,0)
 . . D BMES("Purging field #"_LRFLD_" DD for file #"_LRFN)
"RTN","LR350A",24,0)
 . . S DA=LRFLD,DA(1)=LRFN,DIK="^DD("_LRFN_"," D ^DIK
"RTN","LR350A",25,0)
 ;
"RTN","LR350A",26,0)
 ; Purge NLT files
"RTN","LR350A",27,0)
 D BMES("Purging DDs and data for files #64.061, #64.062, #95.4")
"RTN","LR350A",28,0)
 K DA,DIU
"RTN","LR350A",29,0)
 S DIU="^LAB(64.061,",DIU(0)="DS" D EN^DIU2 K DIU,DA
"RTN","LR350A",30,0)
 S DIU="^LAB(64.062,",DIU(0)="DS" D EN^DIU2 K DIU,DA
"RTN","LR350A",31,0)
 S DIU="^LAHM(95.4,",DIU(0)="DS" D EN^DIU2 K DIU,DA
"RTN","LR350A",32,0)
 ;
"RTN","LR350A",33,0)
 ; Purge Micro Audit subfile DD (leave data)
"RTN","LR350A",34,0)
 D BMES("Deleting DD for Micro Audit subfile #63.539")
"RTN","LR350A",35,0)
 K DA,DIU
"RTN","LR350A",36,0)
 S DIU=63.539,DIU(0)="S" D EN^DIU2 K DIU,DA
"RTN","LR350A",37,0)
 ;
"RTN","LR350A",38,0)
 ; Delete "AB" xref on COLLECTION SAMPLE field (60.03,.01)
"RTN","LR350A",39,0)
 K LRERR,LRMSG
"RTN","LR350A",40,0)
 D BMES("Deleting ""AB"" cross reference on COLLECTION SAMPLE field (#60.03,.01)")
"RTN","LR350A",41,0)
 D DELIX^DDMOD(60.03,.01,2,"K","LRMSG","LRERR")
"RTN","LR350A",42,0)
 I $G(LRERR("DIERR",1))=202  D BMES("""AB"" cross reference previously removed")
"RTN","LR350A",43,0)
 ;
"RTN","LR350A",44,0)
 ;
"RTN","LR350A",45,0)
 ; Delete "AE" xref on CANCELED BY field (69.03,10)
"RTN","LR350A",46,0)
 K LRERR,LRMSG
"RTN","LR350A",47,0)
 D BMES("Deleting ""AE"" cross reference on CANCELED BY field (#69.03,10)")
"RTN","LR350A",48,0)
 D DELIX^DDMOD(69.03,10,1,"","LRMSG","LRERR")
"RTN","LR350A",49,0)
 I $G(LRERR("DIERR",1))=202  D BMES("""AE"" cross reference previously removed")
"RTN","LR350A",50,0)
 ;
"RTN","LR350A",51,0)
 D BMES("*** Pre install completed ***")
"RTN","LR350A",52,0)
 Q
"RTN","LR350A",53,0)
 ;
"RTN","LR350A",54,0)
 ;
"RTN","LR350A",55,0)
POST ; KIDS Post install for LR*5.2*350
"RTN","LR350A",56,0)
 N LRX,LRI,LRMSG,STR,X
"RTN","LR350A",57,0)
 ;
"RTN","LR350A",58,0)
 ;ZEXCEPT:  XPDNM
"RTN","LR350A",59,0)
 ;
"RTN","LR350A",60,0)
 D BMES("*** Post install started ***")
"RTN","LR350A",61,0)
 D BMES("*** Configuring mail group 'LAB MAPPING' ***")
"RTN","LR350A",62,0)
 D LABMAP
"RTN","LR350A",63,0)
 S STR="Patch LR*5.2*350 - add local members to mail group 'LAB MAPPING'"
"RTN","LR350A",64,0)
 D ALERT(STR)
"RTN","LR350A",65,0)
 ;
"RTN","LR350A",66,0)
 D BMES("Re-Indexing ""B"" cross-reference of file #61")
"RTN","LR350A",67,0)
 D RINDXB61
"RTN","LR350A",68,0)
 D BMES("Re-Indexing completed")
"RTN","LR350A",69,0)
 ;
"RTN","LR350A",70,0)
 ;D MICHECK1
"RTN","LR350A",71,0)
 D MICHECK2
"RTN","LR350A",72,0)
 D LRWU9
"RTN","LR350A",73,0)
 ;
"RTN","LR350A",74,0)
 D BMES("*** Post install completed ***")
"RTN","LR350A",75,0)
 D BMES("Sending install completion alert to mail group G.LMI")
"RTN","LR350A",76,0)
 S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR350A",77,0)
 D ALERT(STR)
"RTN","LR350A",78,0)
 Q
"RTN","LR350A",79,0)
 ;
"RTN","LR350A",80,0)
 ;
"RTN","LR350A",81,0)
ALERT(MSG,RECIPS) ;
"RTN","LR350A",82,0)
 D ALERT^LR350(MSG,.RECIPS)
"RTN","LR350A",83,0)
 Q
"RTN","LR350A",84,0)
 ;
"RTN","LR350A",85,0)
 ;
"RTN","LR350A",86,0)
BMES(STR) ;
"RTN","LR350A",87,0)
 D BMES^LR350(STR)
"RTN","LR350A",88,0)
 Q
"RTN","LR350A",89,0)
 ;
"RTN","LR350A",90,0)
 ;
"RTN","LR350A",91,0)
MES(STR,CJ,LM) ;
"RTN","LR350A",92,0)
 D MES^LR350(STR,$G(CJ),$G(LM))
"RTN","LR350A",93,0)
 Q
"RTN","LR350A",94,0)
 ;
"RTN","LR350A",95,0)
 ;
"RTN","LR350A",96,0)
LABMAP ;
"RTN","LR350A",97,0)
 ;
"RTN","LR350A",98,0)
 N DIERR,LRIEN,LRFDA,LRMSG
"RTN","LR350A",99,0)
 S LRIEN=$O(^XMB(3.8,"B","LAB MAPPING",0))
"RTN","LR350A",100,0)
 I LRIEN<1 Q
"RTN","LR350A",101,0)
 ; Set access levels
"RTN","LR350A",102,0)
 S LRIEN=LRIEN_","
"RTN","LR350A",103,0)
 S LRFDA(1,3.8,LRIEN,4)="PU" ; type
"RTN","LR350A",104,0)
 S LRFDA(1,3.8,LRIEN,7)="n" ; self enroll
"RTN","LR350A",105,0)
 D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LR350A",106,0)
 Q
"RTN","LR350A",107,0)
 ;
"RTN","LR350A",108,0)
 ;
"RTN","LR350A",109,0)
MICHECK1 ; Task routine LR350M to check for bad nodes in MI subscript.
"RTN","LR350A",110,0)
 ;
"RTN","LR350A",111,0)
 ;
"RTN","LR350A",112,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LR350A",113,0)
 D BMES("*** Tasking post-install check of MI subscript in LAB DATA file ***")
"RTN","LR350A",114,0)
 S ZTRTN="EN^LR350M",ZTDTH=$H,ZTIO=""
"RTN","LR350A",115,0)
 S ZTDESC="Check file #63 MI subscript (post-LR*5.2*350)"
"RTN","LR350A",116,0)
 D ^%ZTLOAD
"RTN","LR350A",117,0)
 I $G(ZTSK)>0 D BMES("*** Task #"_ZTSK_" created ***")
"RTN","LR350A",118,0)
 I $G(ZTSK)<1 D
"RTN","LR350A",119,0)
 . D BMES("*** Tasking FAILED ***")
"RTN","LR350A",120,0)
 . D BMES("***   with error "_$G(%ZTLOAD("ERROR"))_" ***")
"RTN","LR350A",121,0)
 ;
"RTN","LR350A",122,0)
 Q
"RTN","LR350A",123,0)
 ;
"RTN","LR350A",124,0)
 ;
"RTN","LR350A",125,0)
MICHECK2 ; Task routine LRUW8 to check for bad antibiotic field definition in MI subscript.
"RTN","LR350A",126,0)
 ;
"RTN","LR350A",127,0)
 ;
"RTN","LR350A",128,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LR350A",129,0)
 D BMES("*** Tasking post-install check of MI Antibiotic Field Definitions in LAB DATA file ***")
"RTN","LR350A",130,0)
 S ZTRTN="KIDS^LRWU8",ZTDTH=$H,ZTIO=""
"RTN","LR350A",131,0)
 S ZTDESC="Check file #63 MI Antibiotic Field Definitions (post-LR*5.2*350)"
"RTN","LR350A",132,0)
 D ^%ZTLOAD
"RTN","LR350A",133,0)
 I $G(ZTSK)>0 D BMES("*** Task #"_ZTSK_" created ***")
"RTN","LR350A",134,0)
 I $G(ZTSK)<1 D
"RTN","LR350A",135,0)
 . D BMES("*** Tasking FAILED ***")
"RTN","LR350A",136,0)
 . D BMES("***   with error "_$G(%ZTLOAD("ERROR"))_" ***")
"RTN","LR350A",137,0)
 ;
"RTN","LR350A",138,0)
 Q
"RTN","LR350A",139,0)
LRWU9 ;Task LRWU9 to check for bad Chemistry test names
"RTN","LR350A",140,0)
 ;
"RTN","LR350A",141,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LR350A",142,0)
 ;
"RTN","LR350A",143,0)
 S ZTDESC="*** Tasking post-install check of bad test names"
"RTN","LR350A",144,0)
 D BMES^XPDUTL($$CJ^XLFSTR(ZTDESC,80))
"RTN","LR350A",145,0)
 ;
"RTN","LR350A",146,0)
 S ZTRTN="KIDS^LRWU9",ZTDTH=$H,ZTIO=""
"RTN","LR350A",147,0)
 S ZTDESC="Check file #63 for bad test Chemistry names."
"RTN","LR350A",148,0)
 D ^%ZTLOAD
"RTN","LR350A",149,0)
 ;
"RTN","LR350A",150,0)
 I $G(ZTSK)<1 D
"RTN","LR350A",151,0)
 . S ZTDESC="*** Tasking FAILED ***"
"RTN","LR350A",152,0)
 . D BMES^XPDUTL($$CJ^XLFSTR(ZTDESC,80))
"RTN","LR350A",153,0)
 . S ZTDESC="***   with error "_$G(%ZTLOAD("ERROR"))_" ***"
"RTN","LR350A",154,0)
 . D BMES^XPDUTL($$CJ^XLFSTR(ZTDESC,80))
"RTN","LR350A",155,0)
 ;
"RTN","LR350A",156,0)
 Q
"RTN","LR350A",157,0)
 ;
"RTN","LR350A",158,0)
 ;
"RTN","LR350A",159,0)
RINDXB61 ; Re-index "B" cross-reference of File #61 (as it changed from 30 to 80 chars)
"RTN","LR350A",160,0)
 ;
"RTN","LR350A",161,0)
 N DA,DIK,LRFMERTS
"RTN","LR350A",162,0)
 ;
"RTN","LR350A",163,0)
 S LRFMERTS=1
"RTN","LR350A",164,0)
 K ^LAB(61,"B")
"RTN","LR350A",165,0)
 S DIK="^LAB(61,"
"RTN","LR350A",166,0)
 S DIK(1)=".01^B"
"RTN","LR350A",167,0)
 D ENALL^DIK
"RTN","LR350A",168,0)
 K DIK
"RTN","LR350A",169,0)
 S DIK="^LAB(61,"
"RTN","LR350A",170,0)
 S DIK(1)="6^B"
"RTN","LR350A",171,0)
 D ENALL^DIK
"RTN","LR350A",172,0)
 ;
"RTN","LR350A",173,0)
 Q
"RTN","LR7OB63")
0^169^B57006283
"RTN","LR7OB63",1,0)
LR7OB63 ;DALOI/JMC - Get Lab data from 63 ;05/10/11  13:51
"RTN","LR7OB63",2,0)
 ;;5.2;LAB SERVICE;**121,187,286,372,406,350**;Sep 27, 1994;Build 230
"RTN","LR7OB63",3,0)
 ;
"RTN","LR7OB63",4,0)
63(CTR,LRDFN,SS,IVDT,CORRECT) ;Get data from file 63
"RTN","LR7OB63",5,0)
 ; CTR=Counter
"RTN","LR7OB63",6,0)
 ; LRDFN=Patient ID
"RTN","LR7OB63",7,0)
 ; SS=Subscript for results 'CH'-Chem Tox 'MI'-Microbiology, etc.
"RTN","LR7OB63",8,0)
 ; IVDT=Inverse D/T verified
"RTN","LR7OB63",9,0)
 ; CORRECT=1 if a corrected result, 0 if not
"RTN","LR7OB63",10,0)
 ; See ^LR7OB69 for description of LRX array
"RTN","LR7OB63",11,0)
 I $G(CONTROL)="ZC" Q
"RTN","LR7OB63",12,0)
 N IFN
"RTN","LR7OB63",13,0)
 I SS'="",$L($T(@SS)) G @SS
"RTN","LR7OB63",14,0)
 Q
"RTN","LR7OB63",15,0)
 ;
"RTN","LR7OB63",16,0)
 ;
"RTN","LR7OB63",17,0)
CH ;Chem, Hem, Tox, Ria, Ser, etc.
"RTN","LR7OB63",18,0)
 N I,LRX,PORDER,X0,Y1,Y2,Y3,Y4,Y5,Y6,Y12,Y14,Y15,Y16,Y17,Y18
"RTN","LR7OB63",19,0)
 F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OB63",20,0)
 Q:'$D(^LR(LRDFN,"CH",+$G(IVDT),0))  S X0=^(0)
"RTN","LR7OB63",21,0)
 S Y6=$S(+$G(CORRECT):"C",$P(X0,"^",3):"F",1:"")
"RTN","LR7OB63",22,0)
 S Y16=$P(X0,"^",6)
"RTN","LR7OB63",23,0)
 S Y17=$$ORD^LR7OR2(LRDFN,IVDT),Y18=";CH;"_IVDT
"RTN","LR7OB63",24,0)
 ;
"RTN","LR7OB63",25,0)
 I '$D(SEX) N SEX S SEX=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",2)
"RTN","LR7OB63",26,0)
 ;
"RTN","LR7OB63",27,0)
 I '$D(DOB)!'$D(AGE) N AGE,DOB D
"RTN","LR7OB63",28,0)
 . S DOB=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",3)
"RTN","LR7OB63",29,0)
 . S AGE=$S($D(DT)&(DOB?7N):DT-DOB\10000,1:"??")
"RTN","LR7OB63",30,0)
 ;
"RTN","LR7OB63",31,0)
 S IFN=1
"RTN","LR7OB63",32,0)
 F  S IFN=$O(^LR(LRDFN,"CH",IVDT,IFN)) Q:IFN<1  S X=^(IFN) I $D(TSTY(IFN))!($D(BYPASS)),$S('$D(LRSB):1,$D(LRSB(IFN)):1,1:0) D
"RTN","LR7OB63",33,0)
 . I $D(LRSB(IFN)),$D(LRSA(IFN)),'$D(LRSA(IFN,2)),'$D(LRSA(IFN,3)) Q  ;Only re-transmit changed results
"RTN","LR7OB63",34,0)
 . S Y1=IFN,Y1=$O(^LAB(60,"C","CH;"_Y1_";1",0)),Y2=$P(X,"^"),Y3=$P(X,"^",2),Y12=$P(X,"^",4)
"RTN","LR7OB63",35,0)
 . S:Y2="pending" Y6="P" ;Set result status to P for pending results
"RTN","LR7OB63",36,0)
 . Q:"IN"[$P(^LAB(60,Y1,0),"^",3)  S Y15=$P($G(^LAB(60,Y1,.1)),"^")
"RTN","LR7OB63",37,0)
 . S (Y9,Y10,Y11,Y14)=""
"RTN","LR7OB63",38,0)
 . I $P($G(^LAB(60,Y1,64)),"^") S Y9=$P(^(64),"^"),Y9=$P(^LAM(Y9,0),"^",2),Y10=$P(^(0),"^"),Y11="99NLT"
"RTN","LR7OB63",39,0)
 . S LRX=$$TSTRES^LRRPU(LRDFN,"CH",IVDT,IFN,Y1)
"RTN","LR7OB63",40,0)
 . S Y2=$P(LRX,"^"),Y3=$P(LRX,"^",2),Y4=$P(LRX,"^",5),Y5=$$EN^LRLRRVF($P(LRX,"^",3),$P(LRX,"^",4))
"RTN","LR7OB63",41,0)
 . I $P(LRX,"^",7) S Y14="T"
"RTN","LR7OB63",42,0)
 . S Y2=$$TRIM^XLFSTR($$RESULT(Y1,Y2),"LR"," ")
"RTN","LR7OB63",43,0)
 . S PORDER=$P($G(^LAB(60,Y1,.1)),"^",6),PORDER=$S(PORDER:PORDER,1:998+(IFN/10000000))
"RTN","LR7OB63",44,0)
 . I $D(^TMP("LRX",$J,69,CTR,63,PORDER)) F PORDER=PORDER:.00000001 I '$D(^TMP("LRX",$J,69,CTR,63,PORDER)) Q
"RTN","LR7OB63",45,0)
 . S ^TMP("LRX",$J,69,CTR,63,PORDER)=Y1_"^"_Y2_"^"_Y3_"^"_Y4_"^"_Y5_"^"_Y6_"^^^"_Y9_"^"_Y10_"^"_Y11_"^"_Y12_"^^"_Y14_"^"_Y15_"^"_Y16_"^"_Y17_"^"_Y18
"RTN","LR7OB63",46,0)
 . D INTP
"RTN","LR7OB63",47,0)
 . I $P(LRX,"^",6) S ^TMP("LRPLS",$J,"CH",IVDT,$P(LRX,"^",6),$P(^LAB(60,Y1,0),"^"))=""
"RTN","LR7OB63",48,0)
 ;
"RTN","LR7OB63",49,0)
 I '$D(GOTCOM(LRDFN,"CH",IVDT)) D
"RTN","LR7OB63",50,0)
 . S GOTCOM(LRDFN,"CH",IVDT)="",IFN=0
"RTN","LR7OB63",51,0)
 . F  S IFN=$O(^LR(LRDFN,"CH",IVDT,1,IFN)) Q:IFN<1  S ^TMP("LRX",$J,69,CTR,63,"N",IFN)=$P(^LR(LRDFN,"CH",IVDT,1,IFN,0),"^")
"RTN","LR7OB63",52,0)
 . D ORDP($P($G(^LR(LRDFN,"CH",IVDT,0)),"^",10)) ; Display ordering provider
"RTN","LR7OB63",53,0)
 . D RRDT($P(X0,"^",3)) ; Display report released date/time
"RTN","LR7OB63",54,0)
 . I $G(LRPLSAVE) S LRPLSAVE(0)=CTR ; Save reference to which entry has comments
"RTN","LR7OB63",55,0)
 ;
"RTN","LR7OB63",56,0)
 ; List reporting/performing laboratories
"RTN","LR7OB63",57,0)
 ; If save for calling routine then save LRIDT value for calling routine
"RTN","LR7OB63",58,0)
 ;  otherwise print reporting/performing labs now
"RTN","LR7OB63",59,0)
 I $D(LRPLSAVE) D
"RTN","LR7OB63",60,0)
 . S LRPLSAVE("CH",IVDT)=""
"RTN","LR7OB63",61,0)
 E  D
"RTN","LR7OB63",62,0)
 . D PLS
"RTN","LR7OB63",63,0)
 . F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OB63",64,0)
 ;
"RTN","LR7OB63",65,0)
 Q
"RTN","LR7OB63",66,0)
 ;
"RTN","LR7OB63",67,0)
 ;
"RTN","LR7OB63",68,0)
MI ;Microbiology
"RTN","LR7OB63",69,0)
 D MI^LR7OB63A()
"RTN","LR7OB63",70,0)
 Q
"RTN","LR7OB63",71,0)
 ;
"RTN","LR7OB63",72,0)
 ;
"RTN","LR7OB63",73,0)
BB ;Blood bank
"RTN","LR7OB63",74,0)
 D BB1()
"RTN","LR7OB63",75,0)
 Q
"RTN","LR7OB63",76,0)
 ;
"RTN","LR7OB63",77,0)
 ;
"RTN","LR7OB63",78,0)
BB1(SPECMEN) ;Blood bank
"RTN","LR7OB63",79,0)
 ;SPECMEN=ptr to 61, to specify specimen (optional)
"RTN","LR7OB63",80,0)
 N CTR1,XNODE,X0,Y1,Y2,Y3,Y4,Y5,Y6,Y15,Y18,Y19
"RTN","LR7OB63",81,0)
 Q:'$D(^LR(LRDFN,"BB",+$G(IVDT),0))  S X0=^(0),Y6=$S(+$G(CORRECT):"C",$P(X0,"^",3):"F",1:""),Y19=$P(X0,"^",5),CTR1=0,Y18=";BB;"_IVDT
"RTN","LR7OB63",82,0)
 ;There are other multiples for blood bank in file 63 that also need to be processed, this is just a start.
"RTN","LR7OB63",83,0)
 I $G(SPECMEN),Y19'=SPECMEN Q
"RTN","LR7OB63",84,0)
 S IFN=1
"RTN","LR7OB63",85,0)
 F  S IFN=$O(^LR(LRDFN,"BB",IVDT,IFN)) Q:IFN<1  I $D(^(IFN))#2 S XNODE=^(IFN) F IFN1=1:1:$L(XNODE,"^") S X1=$P(XNODE,"^",IFN1) I $L(X1) D
"RTN","LR7OB63",86,0)
 . S X=$$NODEPIK(63.01,IFN,IFN1,X1) ;X=field^data
"RTN","LR7OB63",87,0)
 . I $L($P(X,"^")) S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=X_"^^^^"_Y6_"^^^^^^^^^"_X_"^^^"_Y18_"^"_Y19
"RTN","LR7OB63",88,0)
 I $D(^LR(LRDFN,"BB",IVDT,99)) S Y1="Specimen Comment: " S IFN=0 F  S IFN=$O(^LR(LRDFN,"BB",IVDT,99,IFN)) Q:IFN<1  S Y2=^(IFN,0),^TMP("LRX",$J,69,CTR,63,"N",IFN)=Y1_"^"_Y2
"RTN","LR7OB63",89,0)
 Q
"RTN","LR7OB63",90,0)
 ;
"RTN","LR7OB63",91,0)
 ;
"RTN","LR7OB63",92,0)
EM ;Electron Microscopy
"RTN","LR7OB63",93,0)
 D SS^LR7OB63C("EM")
"RTN","LR7OB63",94,0)
 Q
"RTN","LR7OB63",95,0)
 ;
"RTN","LR7OB63",96,0)
 ;
"RTN","LR7OB63",97,0)
SP ;Surgical Pathology
"RTN","LR7OB63",98,0)
 D SS^LR7OB63C("SP")
"RTN","LR7OB63",99,0)
 Q
"RTN","LR7OB63",100,0)
 ;
"RTN","LR7OB63",101,0)
 ;
"RTN","LR7OB63",102,0)
CY ;Cytology
"RTN","LR7OB63",103,0)
 D SS^LR7OB63C("CY")
"RTN","LR7OB63",104,0)
 Q
"RTN","LR7OB63",105,0)
 ;
"RTN","LR7OB63",106,0)
 ;
"RTN","LR7OB63",107,0)
AU ;Autopsy
"RTN","LR7OB63",108,0)
 D AU^LR7OB63D
"RTN","LR7OB63",109,0)
 Q
"RTN","LR7OB63",110,0)
 ;
"RTN","LR7OB63",111,0)
 ;
"RTN","LR7OB63",112,0)
NODEPIK(FILE,NODE,PIECE,DATA) ;Set field name and data into X
"RTN","LR7OB63",113,0)
 N Z,Y,Y1,Y2
"RTN","LR7OB63",114,0)
 S Z=$O(^DD(FILE,"GL",NODE,PIECE,0)),X=""
"RTN","LR7OB63",115,0)
 I Z S Y=^DD(FILE,Z,0),Y1=$P(Y,"^"),Y2=DATA S:$P(Y,"^",2)["S" Y2=$$SET(FILE,Z,Y2) S:$P(Y,"^",2)["P"!($P(Y,"^",2)["V") Y2=$$POINTER(FILE,Z,Y2) S X=Y1_"^"_Y2
"RTN","LR7OB63",116,0)
 Q X
"RTN","LR7OB63",117,0)
 ;
"RTN","LR7OB63",118,0)
 ;
"RTN","LR7OB63",119,0)
UNIT(X,SPEC,SEX,DOB,AGE) ;Find units and ref range
"RTN","LR7OB63",120,0)
 ;X=Result
"RTN","LR7OB63",121,0)
 ;SPEC=Specimen ptr
"RTN","LR7OB63",122,0)
 ;SEX=Patient sex
"RTN","LR7OB63",123,0)
 ;DOB=Patient Date of birth
"RTN","LR7OB63",124,0)
 ;AGE=Patient age
"RTN","LR7OB63",125,0)
 ;Output: Y4=Units, Y5=Ref Range, Y14=T or "" (If T, range is theraputic)
"RTN","LR7OB63",126,0)
 N LO,HI
"RTN","LR7OB63",127,0)
 S (Y4,Y5,Y14)=""
"RTN","LR7OB63",128,0)
 Q:'$D(^LAB(60,+X,1,+SPEC,0))  S X=^(0) ;No units/ranges defined
"RTN","LR7OB63",129,0)
 S Y4=$P(X,"^",7)
"RTN","LR7OB63",130,0)
 S @("LO="_$S($L($P(X,"^",2)):$P(X,"^",2),$L($P(X,"^",11)):$P(X,"^",11),1:""""""))
"RTN","LR7OB63",131,0)
 S @("HI="_$S($L($P(X,"^",3)):$P(X,"^",3),$L($P(X,"^",12)):$P(X,"^",12),1:""""""))
"RTN","LR7OB63",132,0)
 S Y5=$S($L(HI):LO_"-"_HI,1:LO)
"RTN","LR7OB63",133,0)
 S Y14=$S('$L($P(X,"^",2))&$L($P(X,"^",11)):"T",1:"")
"RTN","LR7OB63",134,0)
 Q
"RTN","LR7OB63",135,0)
 ;
"RTN","LR7OB63",136,0)
 ;
"RTN","LR7OB63",137,0)
RESULT(TEST,RESULT) ;Convert result to external format
"RTN","LR7OB63",138,0)
 ;TEST=Test ptr to file 60
"RTN","LR7OB63",139,0)
 ;RESULT=Test result
"RTN","LR7OB63",140,0)
 N X,X1,LRCW
"RTN","LR7OB63",141,0)
 S LRCW="",X1=$P($G(^LAB(60,TEST,.1)),"^",3),X1=$S($L(X1):X1,1:"$J(X,8)"),X=RESULT,@("X="_X1)
"RTN","LR7OB63",142,0)
 Q X
"RTN","LR7OB63",143,0)
 ;
"RTN","LR7OB63",144,0)
 ;
"RTN","LR7OB63",145,0)
STRIP(TEXT) ;Strips white space from text
"RTN","LR7OB63",146,0)
 N I,X
"RTN","LR7OB63",147,0)
 S X="" F I=1:1:$L(TEXT," ") S:$A($P(TEXT," ",I))>0 X=X_$P(TEXT," ",I)
"RTN","LR7OB63",148,0)
 Q X
"RTN","LR7OB63",149,0)
 ;
"RTN","LR7OB63",150,0)
 ;
"RTN","LR7OB63",151,0)
SET(FILE,FIELD,RESULT) ;Interpret set of codes
"RTN","LR7OB63",152,0)
 S X=$P(^DD(FILE,FIELD,0),"^",3),X=$P($P(";"_X,";"_RESULT_":",2),";")
"RTN","LR7OB63",153,0)
 Q X
"RTN","LR7OB63",154,0)
 ;
"RTN","LR7OB63",155,0)
 ;
"RTN","LR7OB63",156,0)
POINTER(FILE,FIELD,RESULT) ;Interpret pointer values
"RTN","LR7OB63",157,0)
 N X
"RTN","LR7OB63",158,0)
 S X=$P(^DD(FILE,FIELD,0),"^",2)
"RTN","LR7OB63",159,0)
 I X["V" S X1=@("^"_$P(RESULT,";",2)_+RESULT_",0)")
"RTN","LR7OB63",160,0)
 I X'["V" S X1=$P(@("^"_$P(^DD(FILE,FIELD,0),"^",3)_RESULT_",0)"),"^")
"RTN","LR7OB63",161,0)
 Q X1
"RTN","LR7OB63",162,0)
 ;
"RTN","LR7OB63",163,0)
 ;
"RTN","LR7OB63",164,0)
ORDP(LRPROV) ; Display ordering provider in comment
"RTN","LR7OB63",165,0)
 N LRY,CNT
"RTN","LR7OB63",166,0)
 S LRY=$$NAME^XUSER(LRPROV,"G")
"RTN","LR7OB63",167,0)
 S CNT=$O(^TMP("LRX",$J,69,CTR,63,"N",""),-1)+1
"RTN","LR7OB63",168,0)
 S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OB63",169,0)
 S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="Ordering Provider: "_LRY
"RTN","LR7OB63",170,0)
 Q
"RTN","LR7OB63",171,0)
 ;
"RTN","LR7OB63",172,0)
 ;
"RTN","LR7OB63",173,0)
PLS ; List reporting and performing laboratories
"RTN","LR7OB63",174,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OB63",175,0)
 ;
"RTN","LR7OB63",176,0)
 N CNT,LINE,LLEN,LRPLS,LRX,MPLS,PLS,TESTNAME,X
"RTN","LR7OB63",177,0)
 ;
"RTN","LR7OB63",178,0)
 S CNT=$O(^TMP("LRX",$J,69,CTR,63,"N",""),-1)+1
"RTN","LR7OB63",179,0)
 ;
"RTN","LR7OB63",180,0)
 ; Reporting Laboratory
"RTN","LR7OB63",181,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OB63",182,0)
 . S LRX=+$G(^LR(LRDFN,"CH",IVDT,"RF"))
"RTN","LR7OB63",183,0)
 . I LRX<1 Q
"RTN","LR7OB63",184,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OB63",185,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OB63",186,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="Reporting Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OB63",187,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="               "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OB63",188,0)
 ;
"RTN","LR7OB63",189,0)
 S PLS=$O(^TMP("LRPLS",$J,"CH",IVDT,0)),MPLS=0
"RTN","LR7OB63",190,0)
 I $O(^TMP("LRPLS",$J,"CH",IVDT,PLS)) S MPLS=1 ; multiple performing labs
"RTN","LR7OB63",191,0)
 S LRPLS=0
"RTN","LR7OB63",192,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,"CH",IVDT,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OB63",193,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OB63",194,0)
 . I MPLS D
"RTN","LR7OB63",195,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OB63",196,0)
 . . F  S TESTNAME=$O(^TMP("LRPLS",$J,"CH",IVDT,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OB63",197,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OB63",198,0)
 . . . I (LLEN+X)>240 S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=LINE,CNT=CNT+1,LINE="",LLEN=0
"RTN","LR7OB63",199,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OB63",200,0)
 . . I LINE'="" S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=LINE,CNT=CNT+1
"RTN","LR7OB63",201,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OB63",202,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="Performing Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OB63",203,0)
 . S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="                "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OB63",204,0)
 ;
"RTN","LR7OB63",205,0)
 S ^TMP("LRX",$J,69,CTR,63,"N",CNT)=" "
"RTN","LR7OB63",206,0)
 ;
"RTN","LR7OB63",207,0)
 K ^TMP("LRPLS",$J,"CH",IVDT)
"RTN","LR7OB63",208,0)
 Q
"RTN","LR7OB63",209,0)
 ;
"RTN","LR7OB63",210,0)
 ;
"RTN","LR7OB63",211,0)
RRDT(LRDT) ; Display report released date/time
"RTN","LR7OB63",212,0)
 N LRY,CNT
"RTN","LR7OB63",213,0)
 I LRDT S LRY=$$FMTE^XLFDT(LRDT,"M")
"RTN","LR7OB63",214,0)
 E  S LRY=""
"RTN","LR7OB63",215,0)
 S CNT=$O(^TMP("LRX",$J,69,CTR,63,"N",""),-1)+1
"RTN","LR7OB63",216,0)
 S ^TMP("LRX",$J,69,CTR,63,"N",CNT)="Report Released Date/Time: "_LRY
"RTN","LR7OB63",217,0)
 Q
"RTN","LR7OB63",218,0)
 ;
"RTN","LR7OB63",219,0)
 ;
"RTN","LR7OB63",220,0)
INTP ; Check and add any file #60 interpretation
"RTN","LR7OB63",221,0)
 ;
"RTN","LR7OB63",222,0)
 N INTP,SPEC
"RTN","LR7OB63",223,0)
 S SPEC=$P(^LR(LRDFN,"CH",IVDT,0),"^",5)
"RTN","LR7OB63",224,0)
 I SPEC,Y1,$D(^LAB(60,Y1,1,SPEC,1,0)) D
"RTN","LR7OB63",225,0)
 . S INTP=0
"RTN","LR7OB63",226,0)
 . F  S INTP=+$O(^LAB(60,Y1,1,SPEC,1,INTP)) Q:INTP<1  S ^TMP("LRX",$J,69,CTR,63,PORDER,INTP)=^(INTP,0)
"RTN","LR7OB63",227,0)
 ;
"RTN","LR7OB63",228,0)
 Q
"RTN","LR7OB63C")
0^139^B28532845
"RTN","LR7OB63C",1,0)
LR7OB63C ;DALOI/JMC - Get SP,EM,CY data ;11/10/09  16:31
"RTN","LR7OB63C",2,0)
 ;;5.2;LAB SERVICE;**121,187,315,350**;Sep 27, 1994;Build 230
"RTN","LR7OB63C",3,0)
 ;
"RTN","LR7OB63C",4,0)
 ;
"RTN","LR7OB63C",5,0)
SS(LRSS) ;Process SP,CY,EM data
"RTN","LR7OB63C",6,0)
 N IFN,IFN1,IFN2,X0,X1,X2,X3,X4,X5,Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y18,CTR1,PATH,SUB,NNN,NN1
"RTN","LR7OB63C",7,0)
 Q:'$G(IVDT)
"RTN","LR7OB63C",8,0)
 S NNN=$S(LRSS="SP":"",LRSS="CY":9,LRSS="EM":2,1:""),NN1=+("63."_$S(LRSS="SP":8,1:NNN)_19)
"RTN","LR7OB63C",9,0)
 Q:'$D(^LR(LRDFN,LRSS,IVDT))  S X0=^(IVDT,0),Y6=$S(+$G(CORRECT):"C",$P(X0,"^",11):"F",$P(X0,"^",3):"R",1:"I"),CTR1=0
"RTN","LR7OB63C",10,0)
 S:+X0 $P(^TMP("LRX",$J,69,CTR,68),"^",4)=+X0 ;DT Specimen Taken
"RTN","LR7OB63C",11,0)
 S:$P(X0,"^",10) $P(^TMP("LRX",$J,69,CTR,68),"^",5)=$P(X0,"^",10) ;DT Received
"RTN","LR7OB63C",12,0)
 S:$P(X0,"^",3) $P(^TMP("LRX",$J,69,CTR,68),"^",6)=$P(X0,"^",3) ;DT Completed
"RTN","LR7OB63C",13,0)
 S PATH=$P(X0,"^",2) ;Pathologist
"RTN","LR7OB63C",14,0)
 S Y18=";"_LRSS_";"_IVDT
"RTN","LR7OB63C",15,0)
 S CTR1=CTR1+1
"RTN","LR7OB63C",16,0)
 S ^TMP("LRX",$J,69,CTR,68,CTR1)=$S($D(^TMP("LRX",$J,69,1)):$P(^TMP("LRX",$J,69,1),"^"),1:"")_"^^"_PATH_"^"_$P(X0,"^",3)
"RTN","LR7OB63C",17,0)
 ;
"RTN","LR7OB63C",18,0)
 D WP(.1,"SPECIMEN","","ST")
"RTN","LR7OB63C",19,0)
 D WP(.2,"BRIEF CLINICAL HISTORY","","TX")
"RTN","LR7OB63C",20,0)
 D WP(.3,"PREOPERATIVE DIAGNOSIS","","TX")
"RTN","LR7OB63C",21,0)
 D WP(.4,"OPERATIVE FINDINGS","","TX")
"RTN","LR7OB63C",22,0)
 D WP(.5,"POSTOPERATIVE DIAGNOSIS","","TX")
"RTN","LR7OB63C",23,0)
 D WP(1,"GROSS DESCRIPTION","&GDT","TX"),MOD(7,"MODIFIED GROSS DESCRIPTION")
"RTN","LR7OB63C",24,0)
 D WP(1.1,"MICROSCOPIC DESCRIPTION","&MDT","TX"),MOD(4,"MODIFIED MICROSCOPIC DESCRIPTION")
"RTN","LR7OB63C",25,0)
 D WP(1.3,"FROZEN SECTION","","TX"),MOD(6,"MODIFIED FROZEN SECTION")
"RTN","LR7OB63C",26,0)
 D WP(1.4,"DIAGNOSIS","","TX"),MOD(5,"MODIFIED DIAGNOSIS")
"RTN","LR7OB63C",27,0)
 ;
"RTN","LR7OB63C",28,0)
 S IFN=0 N X1
"RTN","LR7OB63C",29,0)
 F  S IFN=$O(^LR(LRDFN,LRSS,IVDT,1.2,IFN)) Q:IFN<1  S X=^(IFN,0),IFN1=0 D
"RTN","LR7OB63C",30,0)
 . F  S IFN1=$O(^LR(LRDFN,LRSS,IVDT,1.2,IFN,1,IFN1)) Q:IFN1<1  D
"RTN","LR7OB63C",31,0)
 . . S CTR1=CTR1+1,X1=^(IFN1,0)
"RTN","LR7OB63C",32,0)
 . . S ^TMP("LRX",$J,69,CTR,63,CTR1)="SUPPLEMENTARY REPORT~"_+X_"^"_X1_"^^^^"_Y6_"^^TX^^^^^^^SUPPLEMNT RPT^^^"_Y18
"RTN","LR7OB63C",33,0)
 ;
"RTN","LR7OB63C",34,0)
 S IFN=0,SUB=0
"RTN","LR7OB63C",35,0)
 F  S IFN=$O(^LR(LRDFN,LRSS,IVDT,2,IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","LR7OB63C",36,0)
 . S SUB=SUB+1,CTR1=CTR1+1
"RTN","LR7OB63C",37,0)
 . S ^TMP("LRX",$J,69,CTR,63,CTR1)="ORGAN/TISSUE^"_$$POINTER^LR7OB63(+("63."_NNN_12),.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61,+X,0)),"^",2)_"^SNM^&ANT^^^^ORG/TISS^^^"_Y18
"RTN","LR7OB63C",38,0)
 . D PTR(1,"DISEASE",+("63."_NNN_15),.01,61.4,"")
"RTN","LR7OB63C",39,0)
 . S IFN1=0
"RTN","LR7OB63C",40,0)
 . F  S IFN1=$O(^LR(LRDFN,LRSS,IVDT,2,IFN,2,IFN1)) Q:IFN1<1  S X=^(IFN1,0) D
"RTN","LR7OB63C",41,0)
 .. S CTR1=CTR1+1
"RTN","LR7OB63C",42,0)
 .. S ^TMP("LRX",$J,69,CTR,63,CTR1)="MORPHOLOGY"_"^"_$$POINTER^LR7OB63(+("63."_NNN_16),.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61.1,+X,0)),"^",2)_"^SNM^&IMP^^^^_MORPH^^^"_Y18
"RTN","LR7OB63C",43,0)
 .. S IFN2=0
"RTN","LR7OB63C",44,0)
 .. F  S IFN2=$O(^LR(LRDFN,LRSS,IVDT,2,IFN,2,IFN1,1,IFN2)) Q:IFN2<1  S X=^(IFN2,0) D
"RTN","LR7OB63C",45,0)
 ... S CTR1=CTR1+1
"RTN","LR7OB63C",46,0)
 ... S ^TMP("LRX",$J,69,CTR,63,CTR1)="ETIOLOGY^"_$$POINTER^LR7OB63(+("63."_NNN_17),.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61.2,+X,0)),"^",2)_"^SNM^^^^^ETIOLOGY^^^"_Y18
"RTN","LR7OB63C",47,0)
 . D PTR(3,"FUNCTION",+("63."_NNN_85),.01,61.3,"")
"RTN","LR7OB63C",48,0)
 . D PTR(4,"PROCEDURE",+("63."_NNN_82),.01,61.5,"&CNP")
"RTN","LR7OB63C",49,0)
 . S IFN1=0
"RTN","LR7OB63C",50,0)
 . F  S IFN1=$O(^LR(LRDFN,LRSS,IVDT,2,IFN,5,IFN1)) Q:IFN1<1  S X=^(IFN1,0),IFN2=0 F  S IFN2=$O(^LR(LRDFN,LRSS,IVDT,2,IFN,5,IFN1,1,IFN2)) Q:IFN2<1  S X1=^(IFN2,0) D
"RTN","LR7OB63C",51,0)
 . . S CTR1=CTR1+1
"RTN","LR7OB63C",52,0)
 . . S ^TMP("LRX",$J,69,CTR,3,CTR1)="SPECIAL STUDIES "_$$SET^LR7OB63(NN1,.01,$P(X,"^"))_"~"_$P(X,"^",2)_"^"_X1_"^^^^^^TX^^^^^^^SPEC STUDIES"_$$SET^LR7OB63(NN1,.01,$P(X,"^"))_"~"_$P(X,"^",2)_"^^^"_Y18
"RTN","LR7OB63C",53,0)
 ;
"RTN","LR7OB63C",54,0)
 S IFN=0 F  S IFN=$O(^LR(LRDFN,LRSS,IVDT,3,IFN)) Q:IFN<1  D
"RTN","LR7OB63C",55,0)
 . N LRTMP,LRX
"RTN","LR7OB63C",56,0)
 . S LRX=^(IFN,0),LRX=$$ICDDX^ICDCODE(+LRX,,,1)
"RTN","LR7OB63C",57,0)
 . S CTR1=CTR1+1,LRTMP="ICD DIAGNOSIS^"
"RTN","LR7OB63C",58,0)
 . S LRTMP=LRTMP_$P(LRX,"^",4)_"^^^^"_Y6_"^^CE^"_$P(LRX,"^",2)
"RTN","LR7OB63C",59,0)
 . S LRTMP=LRTMP_"^ICD9^&IMP^^^^^ICD DIAG^^^"_Y18
"RTN","LR7OB63C",60,0)
 . S ^TMP("LRX",$J,69,CTR,63,CTR1)=LRTMP
"RTN","LR7OB63C",61,0)
 ;
"RTN","LR7OB63C",62,0)
 ; Print performing laboratory if designated
"RTN","LR7OB63C",63,0)
 D PPL
"RTN","LR7OB63C",64,0)
 ;
"RTN","LR7OB63C",65,0)
 Q
"RTN","LR7OB63C",66,0)
 ;
"RTN","LR7OB63C",67,0)
 ;
"RTN","LR7OB63C",68,0)
WP(I,NAME,ID,VALTYP) ;Store word processing fields
"RTN","LR7OB63C",69,0)
 ; I=Node at ^LR(LRDFN,LRSS,IVDT,I)
"RTN","LR7OB63C",70,0)
 ; NAME= Field name
"RTN","LR7OB63C",71,0)
 ; ID=Coded HL7 ID
"RTN","LR7OB63C",72,0)
 ; VALTYP="TX" for text, "CE" for Coded
"RTN","LR7OB63C",73,0)
 N IFN,IFN1,X
"RTN","LR7OB63C",74,0)
 Q:'I  Q:'$L(NAME)
"RTN","LR7OB63C",75,0)
 S IFN=0
"RTN","LR7OB63C",76,0)
 F  S IFN=$O(^LR(LRDFN,LRSS,IVDT,I,IFN)) Q:IFN<1  S X=^(IFN,0) D SPLIT^LR7OU1(X,"^TMP(""LRX"",$J,69,"_CTR_",63)",.CTR1,80,NAME_"^","^^^^"_Y6_"^^"_VALTYP_"^^^"_ID_"^^^^"_NAME_"^^^"_Y18)
"RTN","LR7OB63C",77,0)
 Q
"RTN","LR7OB63C",78,0)
 ;
"RTN","LR7OB63C",79,0)
 ;
"RTN","LR7OB63C",80,0)
PTR(I,NAME,FILE,FIELD,SNMFILE,ID) ;Store ptr fields for ORGAN/TISSUE multiple
"RTN","LR7OB63C",81,0)
 ; I=Node at ^LR(LRDFN,LRSS,ICDT,2,IFN,I)
"RTN","LR7OB63C",82,0)
 ; NAME=Field name
"RTN","LR7OB63C",83,0)
 ; FILE=File #
"RTN","LR7OB63C",84,0)
 ; FIELD=Field #
"RTN","LR7OB63C",85,0)
 ; SNMFILE=Snomed file # for coded entry
"RTN","LR7OB63C",86,0)
 ; ID=Procedure ID Natl
"RTN","LR7OB63C",87,0)
 N IFN1
"RTN","LR7OB63C",88,0)
 Q:'I  Q:'$L(NAME)
"RTN","LR7OB63C",89,0)
 S IFN1=0
"RTN","LR7OB63C",90,0)
 F  S IFN1=$O(^LR(LRDFN,LRSS,IVDT,2,IFN,I,IFN1)) Q:IFN1<1  S X=^(IFN1,0) D
"RTN","LR7OB63C",91,0)
 . S CTR1=CTR1+1
"RTN","LR7OB63C",92,0)
 . S ^TMP("LRX",$J,69,CTR,63,CTR1)=NAME_"^"_$$POINTER^LR7OB63(FILE,FIELD,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(@("^LAB("_SNMFILE_","_+X_",0)")),"^",2)_"^SNM^"_ID_"^^^^"_NAME_"^^^"_Y18
"RTN","LR7OB63C",93,0)
 Q
"RTN","LR7OB63C",94,0)
 ;
"RTN","LR7OB63C",95,0)
 ;
"RTN","LR7OB63C",96,0)
MOD(IFN,FLDNM) ;Process Modified text fields
"RTN","LR7OB63C",97,0)
 ; IFN=Internal # of modified node
"RTN","LR7OB63C",98,0)
 ; FLDNM=Field name
"RTN","LR7OB63C",99,0)
 Q:'$D(^LR(LRDFN,LRSS,IVDT,+IFN))
"RTN","LR7OB63C",100,0)
 N X,X1
"RTN","LR7OB63C",101,0)
 S IFN1=0
"RTN","LR7OB63C",102,0)
 F  S IFN1=$O(^LR(LRDFN,LRSS,IVDT,+IFN,IFN1)) Q:IFN1<1  S X=^(IFN1,0),IFN2=0 D
"RTN","LR7OB63C",103,0)
 . F  S IFN2=$O(^LR(LRDFN,LRSS,IVDT,+IFN,IFN1,1,IFN2)) Q:IFN2<1  S X1=^(IFN2,0) D
"RTN","LR7OB63C",104,0)
 . . S CTR1=CTR1+1
"RTN","LR7OB63C",105,0)
 . . S ^TMP("LRX",$J,69,CTR,63,CTR1)=FLDNM_"~"_+X_"^"_X1_"^^^^"_Y6_"^^TX^^^^^^^"_FLDNM_"^^^"_Y18
"RTN","LR7OB63C",106,0)
 Q
"RTN","LR7OB63C",107,0)
 ;
"RTN","LR7OB63C",108,0)
 ;
"RTN","LR7OB63C",109,0)
PPL ; Print any performing laboratories
"RTN","LR7OB63C",110,0)
 ;
"RTN","LR7OB63C",111,0)
 N LRPL,LRJ
"RTN","LR7OB63C",112,0)
 ;
"RTN","LR7OB63C",113,0)
 D RETLST^LRRPL(.LRPL,LRDFN,LRSS,IVDT,0)
"RTN","LR7OB63C",114,0)
 I $G(LRPL)<1 Q
"RTN","LR7OB63C",115,0)
 ;
"RTN","LR7OB63C",116,0)
 S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=$$REPEAT^XLFSTR("=",IOM)
"RTN","LR7OB63C",117,0)
 S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)="Performing Laboratory:"
"RTN","LR7OB63C",118,0)
 S LRJ=0
"RTN","LR7OB63C",119,0)
 F  S LRJ=$O(LRPL(LRJ)) Q:'LRJ  S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=LRPL(LRJ)
"RTN","LR7OB63C",120,0)
 ;
"RTN","LR7OB63C",121,0)
 Q
"RTN","LR7OB63D")
0^140^B28748245
"RTN","LR7OB63D",1,0)
LR7OB63D ;DALOI/JMC - Get Autopsy data ;05/10/12  15:11
"RTN","LR7OB63D",2,0)
 ;;5.2;LAB SERVICE;**121,187,315,350**;Sep 27, 1994;Build 230
"RTN","LR7OB63D",3,0)
 ;
"RTN","LR7OB63D",4,0)
 ;
"RTN","LR7OB63D",5,0)
AU ;Process AU data
"RTN","LR7OB63D",6,0)
 N IFN,IFN1,IFN2,X0,X1,X2,X3,X4,X5,Y1,Y2,Y3,Y4,Y5,Y6,Y7,Y18,CTR1,PATH,SUB,LRSN
"RTN","LR7OB63D",7,0)
 ;
"RTN","LR7OB63D",8,0)
 I '$G(LRSS) S LRSS="AU"  ;added for LSRP
"RTN","LR7OB63D",9,0)
 Q:'$D(^LR(LRDFN,"AU"))  S X0=^("AU"),Y6=$S(+$G(CORRECT):"C",$P(X0,"^",15):"F",$P(X0,"^",3):"R",1:"I"),CTR1=0
"RTN","LR7OB63D",10,0)
 S:+X0 $P(^TMP("LRX",$J,69,CTR,68),"^",4)=+X0 ;DT of autopsy
"RTN","LR7OB63D",11,0)
 S:$P(X0,"^",3) $P(^TMP("LRX",$J,69,CTR,68),"^",6)=$P(X0,"^",3) ;DT Completed
"RTN","LR7OB63D",12,0)
 S PATH=$S($P(X0,"^",10):$P(X0,"^",10),1:$P(X0,"^",7)) ;Pathologist
"RTN","LR7OB63D",13,0)
 S Y18=";AU;"_IVDT
"RTN","LR7OB63D",14,0)
 S CTR1=CTR1+1
"RTN","LR7OB63D",15,0)
 S ^TMP("LRX",$J,69,CTR,68,CTR1)=$S($D(^TMP("LRX",$J,69,1)):$P(^TMP("LRX",$J,69,1),"^"),1:"")_"^^"_PATH_"^"_$P(X0,"^",3)
"RTN","LR7OB63D",16,0)
 ;
"RTN","LR7OB63D",17,0)
 D WP(33,"SPECIMEN","","ST")
"RTN","LR7OB63D",18,0)
 ;
"RTN","LR7OB63D",19,0)
 S IFN=0 F  S IFN=$O(^LR(LRDFN,80,IFN)) Q:IFN<1  D
"RTN","LR7OB63D",20,0)
 . N LRTMP,LRX
"RTN","LR7OB63D",21,0)
 . S LRX=^(IFN,0),LRX=$$ICDDX^ICDCODE(+LRX,,,1)
"RTN","LR7OB63D",22,0)
 . S CTR1=CTR1+1,LRTMP="AUTOPSY ICD9CM CODE^"
"RTN","LR7OB63D",23,0)
 . S LRTMP=LRTMP_$P(LRX,"^",4)_"^^^^"_Y6_"^^CE^"_$P(LRX,"^",2)
"RTN","LR7OB63D",24,0)
 . S LRTMP=LRTMP_"^ICD9^&IMP^^^^AUTOPSY ICD9CM CODE"_"^^^"_Y18
"RTN","LR7OB63D",25,0)
 . S ^TMP("LRX",$J,69,CTR,63,CTR1)=LRTMP
"RTN","LR7OB63D",26,0)
 ;
"RTN","LR7OB63D",27,0)
 D WP(81,"CLINICAL DIAGNOSIS","","TX")
"RTN","LR7OB63D",28,0)
 D WP(82,"PATHOLOGICAL DIAGNOSIS","","TX")
"RTN","LR7OB63D",29,0)
 ;
"RTN","LR7OB63D",30,0)
 S IFN=0
"RTN","LR7OB63D",31,0)
 F  S IFN=$O(^LR(LRDFN,84,IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","LR7OB63D",32,0)
 . S IFN1=0
"RTN","LR7OB63D",33,0)
 . F  S IFN1=$O(^LR(LRDFN,84,IFN,1,IFN1)) Q:IFN1<1  S X1=^(IFN1,0) D
"RTN","LR7OB63D",34,0)
 . . S CTR1=CTR1+1
"RTN","LR7OB63D",35,0)
 . . S ^TMP("LRX",$J,69,CTR,63,CTR1)="SUPPLEMENTARY REPORT~"_+X_"^"_X1_"^^^^"_Y6_"^^TX^^^^^^^SUPLMNT RPT~"_+X_"^^^"_Y18
"RTN","LR7OB63D",36,0)
 ;
"RTN","LR7OB63D",37,0)
 I $D(^LR(LRDFN,"AV")) S XNODE=^("AV") D
"RTN","LR7OB63D",38,0)
 . F IFN=1:1:$L(XNODE,"^") D
"RTN","LR7OB63D",39,0)
 . . S X1=$P(XNODE,"^",IFN)
"RTN","LR7OB63D",40,0)
 . . I X1'="" S X=$$NODEPIK^LR7OB63(63,"AV",IFN,X1) I $P(X,"^")'="" S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=X_"^^^^"_Y6_"^^^^^^^^^"_X_"^^^"_Y18
"RTN","LR7OB63D",41,0)
 I $D(^LR(LRDFN,"AW")) S XNODE=^("AW") D
"RTN","LR7OB63D",42,0)
 . F IFN=1:1:$L(XNODE,"^") D
"RTN","LR7OB63D",43,0)
 . . S X1=$P(XNODE,"^",IFN)
"RTN","LR7OB63D",44,0)
 . . I X1'="" S X=$$NODEPIK^LR7OB63(63,"AW",IFN,X1) I $P(X,"^")'="" S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=X_"^^^^"_Y6_"^^^^^^^^^"_X_"^^^"_Y18
"RTN","LR7OB63D",45,0)
 I $D(^LR(LRDFN,"AWI")) S XNODE=^("AWI") D
"RTN","LR7OB63D",46,0)
 . F IFN=1:1:$L(XNODE,"^") D
"RTN","LR7OB63D",47,0)
 . . S X1=$P(XNODE,"^",IFN)
"RTN","LR7OB63D",48,0)
 . . I X1'="" S X=$$NODEPIK^LR7OB63(63,"AWI",IFN,X1) I $P(X,"^")'="" S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=X_"^^^^"_Y6_"^^^^^^^^^"_X_"^^^"_Y18
"RTN","LR7OB63D",49,0)
 ;
"RTN","LR7OB63D",50,0)
 S IFN=0,SUB=0
"RTN","LR7OB63D",51,0)
 F  S IFN=$O(^LR(LRDFN,"AY",IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","LR7OB63D",52,0)
 . S SUB=SUB+1,CTR1=CTR1+1
"RTN","LR7OB63D",53,0)
 . S ^TMP("LRX",$J,69,CTR,63,CTR1)="ORGAN/TISSUE^"_$$POINTER^LR7OB63(63.2,.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61,+X,0)),"^",2)_"^SNM^&ANT^^^^ORG/TISS"_"^^^"_Y18
"RTN","LR7OB63D",54,0)
 . D PTR(1,"DISEASE",63.21,.01,61.4,"")
"RTN","LR7OB63D",55,0)
 . S IFN1=0 F  S IFN1=$O(^LR(LRDFN,"AY",IFN,2,IFN1)) Q:IFN1<1  S X=^(IFN1,0) D
"RTN","LR7OB63D",56,0)
 . . S CTR1=CTR1+1
"RTN","LR7OB63D",57,0)
 . . S ^TMP("LRX",$J,69,CTR,63,CTR1)="MORPHOLOGY"_"^"_$$POINTER^LR7OB63(63.22,.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61.1,+X,0)),"^",2)_"^SNM^&IMP^^^^MORPH^^^"_Y18
"RTN","LR7OB63D",58,0)
 . . S IFN2=0
"RTN","LR7OB63D",59,0)
 . . F  S IFN2=$O(^LR(LRDFN,"AY",IFN,2,IFN1,1,IFN2)) Q:IFN2<1  S X=^(IFN2,0) D
"RTN","LR7OB63D",60,0)
 . . . S CTR1=CTR1+1
"RTN","LR7OB63D",61,0)
 . . . S ^TMP("LRX",$J,69,CTR,63,CTR1)="ETIOLOGY^"_$$POINTER^LR7OB63(63.23,.01,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(^LAB(61.2,+X,0)),"^",2)_"^SNM^^^^^ETIOLOGY^^^"_Y18
"RTN","LR7OB63D",62,0)
 . D PTR(3,"FUNCTION",63.25,.01,61.3,"")
"RTN","LR7OB63D",63,0)
 . D PTR(4,"PROCEDURE",63.24,.01,61.5,"&CNP")
"RTN","LR7OB63D",64,0)
 . S IFN1=0
"RTN","LR7OB63D",65,0)
 . F  S IFN1=$O(^LR(LRDFN,"AY",IFN,5,IFN1)) Q:IFN1<1  S X=^(IFN1,0),IFN2=0 F  S IFN2=$O(^LR(LRDFN,"AY",IFN,5,IFN1,1,IFN2)) Q:IFN2<1  S X1=^(IFN2,0) D
"RTN","LR7OB63D",66,0)
 . . S CTR1=CTR1+1
"RTN","LR7OB63D",67,0)
 . . S ^TMP("LRX",$J,69,CTR,63,CTR1)="SPECIAL STUDIES "_$$SET^LR7OB63(63.26,.01,$P(X,"^"))_"~"_$P(X,"^",2)_"^"_X1_"^^^^^^TX^^^^^^^SPEC STUDIES "_$$SET^LR7OB63(63.26,.01,$P(X,"^"))_"~"_$P(X,"^",2)_"^^^"_Y18
"RTN","LR7OB63D",68,0)
 ;
"RTN","LR7OB63D",69,0)
 ; Print performing laboratory if designated
"RTN","LR7OB63D",70,0)
 D PPL^LR7OB63C
"RTN","LR7OB63D",71,0)
 ;
"RTN","LR7OB63D",72,0)
 Q
"RTN","LR7OB63D",73,0)
 ;
"RTN","LR7OB63D",74,0)
 ;
"RTN","LR7OB63D",75,0)
WP(I,NAME,ID,VALTYP) ;Store word processing fields
"RTN","LR7OB63D",76,0)
 ;I=Node at ^LR(LRDFN,I)
"RTN","LR7OB63D",77,0)
 ;NAME=Field name
"RTN","LR7OB63D",78,0)
 ;ID=Coded HL7 ID
"RTN","LR7OB63D",79,0)
 ;VALTYP="TX" for text, "CE" for coded
"RTN","LR7OB63D",80,0)
 N IFN,IFN1,X
"RTN","LR7OB63D",81,0)
 Q:'I  Q:'$L(NAME)
"RTN","LR7OB63D",82,0)
 S IFN=0
"RTN","LR7OB63D",83,0)
 F  S IFN=$O(^LR(LRDFN,I,IFN)) Q:IFN<1  S X=^(IFN,0) D
"RTN","LR7OB63D",84,0)
 . D SPLIT^LR7OU1(X,"^TMP(""LRX"",$J,69,"_CTR_",63)",.CTR1,80,NAME_"^","^^^^"_Y6_"^^"_VALTYP_"^^^"_ID_"^^^^"_NAME_"^^^"_Y18)
"RTN","LR7OB63D",85,0)
 Q
"RTN","LR7OB63D",86,0)
 ;
"RTN","LR7OB63D",87,0)
 ;
"RTN","LR7OB63D",88,0)
PTR(I,NAME,FILE,FIELD,SNMFILE,ID) ;Store ptr fields for ORGAN/TISSUE multiple
"RTN","LR7OB63D",89,0)
 ;I=Node at ^LR(LRDFN,'AY',IFN,I)
"RTN","LR7OB63D",90,0)
 ;NAME=Field name
"RTN","LR7OB63D",91,0)
 ;FILE=File #
"RTN","LR7OB63D",92,0)
 ;FIELD=Field #
"RTN","LR7OB63D",93,0)
 ;SNMFILE=Snomed file # for coded entry
"RTN","LR7OB63D",94,0)
 ;ID=Procedure ID Natl
"RTN","LR7OB63D",95,0)
 N IFN1
"RTN","LR7OB63D",96,0)
 Q:'I  Q:'$L(NAME)
"RTN","LR7OB63D",97,0)
 S IFN1=0 F  S IFN1=$O(^LR(LRDFN,"AY",IFN,I,IFN1)) Q:IFN1<1  S X=^(IFN1,0) D
"RTN","LR7OB63D",98,0)
 . S CTR1=CTR1+1,^TMP("LRX",$J,69,CTR,63,CTR1)=NAME_"^"_$$POINTER^LR7OB63(FILE,FIELD,+X)_"^^^^"_Y6_"^"_SUB_"^CE^"_$P($G(@("^LAB("_SNMFILE_","_+X_",0)")),"^",2)_"^SNM^"_ID_"^^^^"_NAME_"^^^"_Y18
"RTN","LR7OB63D",99,0)
 Q
"RTN","LR7OB63D",100,0)
 ;
"RTN","LR7OB63D",101,0)
 ;
"RTN","LR7OB63D",102,0)
OERR ;Call to OE/RR to setup/update order
"RTN","LR7OB63D",103,0)
 N X,DR
"RTN","LR7OB63D",104,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S X=$P(^(0),"^",4),LRSN=$P(^(0),"^",5),X=$S($P($G(^LRO(69,+X,1,+LRSN,0)),"^",11):"SC",1:"SN") D ACC^LR7OB1(LRAA,LRAD,LRAN,X)
"RTN","LR7OB63D",105,0)
 Q
"RTN","LR7OB63D",106,0)
 ;
"RTN","LR7OB63D",107,0)
 ;
"RTN","LR7OB63D",108,0)
OE1 ;Get 'before' status of accession
"RTN","LR7OB63D",109,0)
 N X
"RTN","LR7OB63D",110,0)
 S CORRECT=0
"RTN","LR7OB63D",111,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S LRDFN=+^(0)
"RTN","LR7OB63D",112,0)
 I LRSS="AU" S:$P($G(^LR(LRDFN,LRSS)),"^",15) CORRECT=1 Q
"RTN","LR7OB63D",113,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))  Q:'$P(^(3),"^",5)  S X=$P(^(3),"^",5)
"RTN","LR7OB63D",114,0)
 S:$P($G(^LR(LRDFN,LRSS,X,0)),"^",11) CORRECT=1
"RTN","LR7OB63D",115,0)
 Q
"RTN","LR7OF1")
0^151^B25392448
"RTN","LR7OF1",1,0)
LR7OF1 ;DALOI/STAFF - Setup new order from OE/RR ;Jan 27, 2008
"RTN","LR7OF1",2,0)
 ;;5.2;LAB SERVICE;**121,187,223,256,299,291,350**;Sep 27, 1994;Build 230
"RTN","LR7OF1",3,0)
 ;
"RTN","LR7OF1",4,0)
EN ; Setup NEW orders from OE/RR messages
"RTN","LR7OF1",5,0)
 ; [^TMP("OR",$J,"LRES") DOCUMENTATION]
"RTN","LR7OF1",6,0)
 ; 'Combining of Orders' functionality depends on this TMP global
"RTN","LR7OF1",7,0)
 ; Set and Killed when BHS and BTS batch message headers are received
"RTN","LR7OF1",8,0)
 ; Global contains a list of lab orders for a session
"RTN","LR7OF1",9,0)
 ; Lab adds elements to the global array as orders are processed:
"RTN","LR7OF1",10,0)
 ;  ^TMP("OR",$J,"LRES",LRDFN,LRSDT,LRXZ,^TMP("OR",$J,"LRES","CTR"))=LRORD_"^"_LRODT_"^"_LRSN
"RTN","LR7OF1",11,0)
 ;  ^TMP("OR",$J,"LRES","CTR")=Count
"RTN","LR7OF1",12,0)
 ;
"RTN","LR7OF1",13,0)
 N ZTSK,LRORDR,X,UNEEK,LRNT ;UNEEK forces a unique entry (Micro tests), set when ^..."LROT" built
"RTN","LR7OF1",14,0)
 D DT
"RTN","LR7OF1",15,0)
 S LRORDR=LRXZ
"RTN","LR7OF1",16,0)
 S:'$D(^TMP("OR",$J,"LRES","CTR")) ^("CTR")=0
"RTN","LR7OF1",17,0)
 F LRSAMP=-1:0 S LRSAMP=$O(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP)) Q:LRSAMP=""  D
"RTN","LR7OF1",18,0)
 . F LRSPEC=-1:0 S LRSPEC=$O(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC)) Q:LRSPEC=""  S X=^(LRSPEC,0) D
"RTN","LR7OF1",19,0)
 . . S ORIFN=+X,UNEEK=$P(X,"^",2)
"RTN","LR7OF1",20,0)
 . . D ZX
"RTN","LR7OF1",21,0)
 Q
"RTN","LR7OF1",22,0)
 ;
"RTN","LR7OF1",23,0)
 ;
"RTN","LR7OF1",24,0)
ZX ;
"RTN","LR7OF1",25,0)
 N COMBINE,X,NEWORD
"RTN","LR7OF1",26,0)
 I '$D(^LRO(69,LRODT,0)) S ^(0)=$P(^LRO(69,0),U,1,2)_"^"_LRODT_"^"_(1+$P(^(0),U,4)),^LRO(69,LRODT,0)=LRODT,^LRO(69,"B",LRODT,LRODT)=""
"RTN","LR7OF1",27,0)
 S COMBINE=""
"RTN","LR7OF1",28,0)
 ;
"RTN","LR7OF1",29,0)
 I 'UNEEK D
"RTN","LR7OF1",30,0)
 . S COMBINE=$$ORES^LR7OF5(LRDFN,LRSDT,LRXZ,+LRSAMP,LRPRAC,LROLLOC,LRSPEC,LRDUZ)
"RTN","LR7OF1",31,0)
 . I COMBINE="" S COMBINE=$$FIND^LR7OF5(LRDFN,LRODT,LRSDT,LRXZ,+LRSAMP,LRPRAC,LROLLOC,LRSPEC,LRDUZ)
"RTN","LR7OF1",32,0)
 ;
"RTN","LR7OF1",33,0)
 I COMBINE="" S (NEWORD,LRQUIET)=1 D ORDER^LROW2 K ZTSK,ZTQUEUED,ZTREQ G LOCK
"RTN","LR7OF1",34,0)
 ;
"RTN","LR7OF1",35,0)
 I $E(COMBINE,1,2)="S." S LRSN=$P(COMBINE,".",2),LRORD=$P(COMBINE,".",3) G ADD ;Combine on specimen
"RTN","LR7OF1",36,0)
 I $E(COMBINE,1,2)="O."!($E(COMBINE,1,2)="C.") S LRORD=$S($E(COMBINE,1,2)="O.":$P(COMBINE,".",2),1:$P(COMBINE,".",3)) ;Combine on order #
"RTN","LR7OF1",37,0)
 ;
"RTN","LR7OF1",38,0)
LOCK ;
"RTN","LR7OF1",39,0)
 L +^LRO(69,LRODT,1):360
"RTN","LR7OF1",40,0)
 I '$T G LOCK
"RTN","LR7OF1",41,0)
 S LRSN=1+$O(^LRO(69,LRODT,1,999999999),-1),LRSUM=1+$S($D(^LRO(69,LRODT,1,0)):$P(^(0),U,4),1:0)
"RTN","LR7OF1",42,0)
 ;
"RTN","LR7OF1",43,0)
ZSN ;
"RTN","LR7OF1",44,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRSN=LRSN+1 G ZSN
"RTN","LR7OF1",45,0)
 S ^LRO(69,LRODT,1,LRSN,0)=LRDFN_"^"_LRDUZ_"^"_+LRSAMP_"^"_LRORDR_"^"_LRNT_"^"_LRPRAC_"^"_LRLLOC_"^"_LRSDT_"^"_LROLLOC_"^^"_ORIFN
"RTN","LR7OF1",46,0)
 S ^LRO(69,LRODT,1,0)="^69.01PA^"_LRSN_"^"_LRSUM
"RTN","LR7OF1",47,0)
 L -^LRO(69,LRODT,1)
"RTN","LR7OF1",48,0)
 ;
"RTN","LR7OF1",49,0)
 S ^LRO(69,LRODT,1,"AA",LRDFN,LRSN)=""
"RTN","LR7OF1",50,0)
 S ^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC,"SN")=LRSN
"RTN","LR7OF1",51,0)
 S ^LRO(69,"D",LRDFN,LRODT,LRSN)=""
"RTN","LR7OF1",52,0)
 ;
"RTN","LR7OF1",53,0)
 I LRLLOC'="" S ^LRO(69,LRODT,1,"AC",LRLLOC,LRSN)=""
"RTN","LR7OF1",54,0)
 I LRSPEC'="" S ^LRO(69,LRODT,1,LRSN,4,0)="^69.02PA^1^1",^(1,0)=LRSPEC
"RTN","LR7OF1",55,0)
 ;
"RTN","LR7OF1",56,0)
 S ^LRO(69,LRODT,1,LRSN,.1)=LRORD,^LRO(69,"C",+LRORD,LRODT,LRSN)=""
"RTN","LR7OF1",57,0)
 ;I $G(NEWORD) L -^LRO(69,$E(DT,1,3)_"0000",2)
"RTN","LR7OF1",58,0)
 ;
"RTN","LR7OF1",59,0)
ADD ;
"RTN","LR7OF1",60,0)
 N I,J,LRJ,LRSXN,LRORIFN,NODE,STATUS
"RTN","LR7OF1",61,0)
 S ^TMP("OR",$J,"LRES","CTR")=^TMP("OR",$J,"LRES","CTR")+1,^TMP("OR",$J,"LRES",LRDFN,LRSDT,LRXZ,^TMP("OR",$J,"LRES","CTR"))=LRORD_"^"_LRODT_"^"_LRSN
"RTN","LR7OF1",62,0)
 S LRORIFN=+$G(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC,0))
"RTN","LR7OF1",63,0)
 ;
"RTN","LR7OF1",64,0)
 S J=0
"RTN","LR7OF1",65,0)
 F LRJ=1:1 S J=$O(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC,J)) Q:J<1  S NODE=^(J),STATUS=$G(^(J,1)) D ZSN1(NODE,STATUS)
"RTN","LR7OF1",66,0)
 ;
"RTN","LR7OF1",67,0)
 S (LRSXN,I)=0
"RTN","LR7OF1",68,0)
 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,I)) Q:I<1  S LRSXN=LRSXN+1
"RTN","LR7OF1",69,0)
 S:LRSXN ^LRO(69,LRODT,1,LRSN,2,0)="^69.03PA^"_LRSXN_"^"_LRSXN
"RTN","LR7OF1",70,0)
 ;
"RTN","LR7OF1",71,0)
 I $E(COMBINE,1,2)="C." D
"RTN","LR7OF1",72,0)
 . S (LRSXN,I)=0 F  S I=$O(^LRO(69,LRODT,1,+$P(COMBINE,".",2),2,I)) Q:I<1  S LRSXN=LRSXN+1
"RTN","LR7OF1",73,0)
 . S:LRSXN ^LRO(69,LRODT,1,+$P(COMBINE,".",2),2,0)="^69.03PA^"_LRSXN_"^"_LRSXN
"RTN","LR7OF1",74,0)
 Q
"RTN","LR7OF1",75,0)
 ;
"RTN","LR7OF1",76,0)
 ;
"RTN","LR7OF1",77,0)
ZSN1(NODE,STATUS)    ;Add tests
"RTN","LR7OF1",78,0)
 N CNT,XI,X,I,C,TCNT
"RTN","LR7OF1",79,0)
 S CNT=+$O(^LRO(69,LRODT,1,LRSN,2,99999),-1)
"RTN","LR7OF1",80,0)
 S LRTSTS=+NODE,LRQUANT=$P(NODE,"^",2)
"RTN","LR7OF1",81,0)
 ;
"RTN","LR7OF1",82,0)
 I $D(^LRO(69,LRODT,1,LRSN,2,"B",LRTSTS)) S REJECT(LRTSTS)="" Q
"RTN","LR7OF1",83,0)
 S ^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,0)=LRTSTS_"^"_$S($L(STATUS):STATUS,1:LROUTINE)_"^^^^^"_LRORIFN
"RTN","LR7OF1",84,0)
 ;
"RTN","LR7OF1",85,0)
 D SDGX69^LRBEBA2(J,(CNT+LRJ)_","_LRSN_","_LRODT_",")
"RTN","LR7OF1",86,0)
 ;
"RTN","LR7OF1",87,0)
 ; Add "~" to comment lines, when needed, to insure that "~" is stored with comments
"RTN","LR7OF1",88,0)
 ;  to distinguish order and result comments when moved to file #63.
"RTN","LR7OF1",89,0)
 I $O(^TMP("OR",$J,"COM",LRSDT,LRXZ,LRSAMP,LRSPEC,J,0)) D
"RTN","LR7OF1",90,0)
 . S X=^TMP("OR",$J,"COM",LRSDT,LRXZ,LRSAMP,LRSPEC,J)+$S($P($G(^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,1,0)),"^",4):$P(^(0),"^",4),1:0)
"RTN","LR7OF1",91,0)
 . S ^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,1,0)="^^"_X_"^"_X_"^"_DT
"RTN","LR7OF1",92,0)
 . S TCNT=+$O(^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,1,99999),-1),(C,I)=0
"RTN","LR7OF1",93,0)
 . F  S I=$O(^TMP("OR",$J,"COM",LRSDT,LRXZ,LRSAMP,LRSPEC,J,I)) Q:I<1  D
"RTN","LR7OF1",94,0)
 . . S X=^TMP("OR",$J,"COM",LRSDT,LRXZ,LRSAMP,LRSPEC,J,I)
"RTN","LR7OF1",95,0)
 . . I $E(X,1)'="~" S X="~"_X
"RTN","LR7OF1",96,0)
 . . S C=C+1
"RTN","LR7OF1",97,0)
 . . S ^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,1,C+TCNT,0)=X
"RTN","LR7OF1",98,0)
 ;
"RTN","LR7OF1",99,0)
 S ^LRO(69,LRODT,1,LRSN,2,"B",LRTSTS,CNT+LRJ)=""
"RTN","LR7OF1",100,0)
 S ^LRO(69,"AT",LRDFN,LRTSTS,LRSPEC,LRODT)="",^(-LRODT)=""
"RTN","LR7OF1",101,0)
 ;
"RTN","LR7OF1",102,0)
 I $E(COMBINE,1,2)="C." D
"RTN","LR7OF1",103,0)
 . S X=^LRO(69,LRODT,1,LRSN,2,CNT+LRJ,0),$P(^(0),"^",6)=LRORD
"RTN","LR7OF1",104,0)
 . S XI=$P($G(^LRO(69,LRODT,1,LRSN,1)),"^",7)
"RTN","LR7OF1",105,0)
 . S XI=XI_LRORD_"/",$P(^(1),"^",7)=XI
"RTN","LR7OF1",106,0)
 . N CNT1
"RTN","LR7OF1",107,0)
 . S CNT1=$O(^LRO(69,LRODT,1,+$P(COMBINE,".",2),2,99999),-1)+1,^(CNT1,0)=X,$P(^(0),"^",14)=LRODT_";"_LRSN_";"_(CNT+LRJ)
"RTN","LR7OF1",108,0)
 . S ^LRO(69,LRODT,1,$P(COMBINE,".",2),2,"B",LRTSTS,CNT1)=""
"RTN","LR7OF1",109,0)
 Q
"RTN","LR7OF1",110,0)
 ;
"RTN","LR7OF1",111,0)
 ;
"RTN","LR7OF1",112,0)
DT ;
"RTN","LR7OF1",113,0)
 S DT=$$DT^XLFDT
"RTN","LR7OF1",114,0)
 S LRNT=$P($H,",",2),LRNT=LRNT\3600*100+(LRNT\60#60)/10000+DT
"RTN","LR7OF1",115,0)
 Q
"RTN","LR7OFAO")
0^64^B37607643
"RTN","LR7OFAO",1,0)
LR7OFAO ;DALOI/JMC - Setup file 69 for AP orders ;05/04/09  12:30
"RTN","LR7OFAO",2,0)
 ;;5.2;LAB SERVICE;**121,350**;Sep 27, 1994;Build 230
"RTN","LR7OFAO",3,0)
 ;
"RTN","LR7OFAO",4,0)
 ;File 44/10040
"RTN","LR7OFAO",5,0)
 ;
"RTN","LR7OFAO",6,0)
 Q
"RTN","LR7OFAO",7,0)
 ;
"RTN","LR7OFAO",8,0)
EN(LRODT,LRDFN,LRSAMP,LRORDR,LRNT,LRPRAC,LRLLOC,LRSDT,ORIFN,LRSPEC,LRSS,LRTST,LRUID,LRRECINF) ; Called from LDSI^LRAPLG1
"RTN","LR7OFAO",9,0)
 ; LRODT=Order date
"RTN","LR7OFAO",10,0)
 ; LRDFN=Patient Lab ID
"RTN","LR7OFAO",11,0)
 ; LRSAMP=Sample ptr to 62
"RTN","LR7OFAO",12,0)
 ; LRORDR=Collection type
"RTN","LR7OFAO",13,0)
 ; LRNT=d/t Ordered
"RTN","LR7OFAO",14,0)
 ; LRSDT=Start date
"RTN","LR7OFAO",15,0)
 ; ORIFN=OE/RR #
"RTN","LR7OFAO",16,0)
 ; LRSPEC=Specimen ptr to 61
"RTN","LR7OFAO",17,0)
 ; LRSS=Test subscript
"RTN","LR7OFAO",18,0)
 ; LRTST=Ordered test
"RTN","LR7OFAO",19,0)
 ; LRUID=UID
"RTN","LR7OFAO",20,0)
 ; LRRECINF:<byref> Output  Array that holds the record numbers created.
"RTN","LR7OFAO",21,0)
 ;
"RTN","LR7OFAO",22,0)
 N X,Y,LRIENLOC,LRQUIET,LRSN,LRSUM,LRIENLOC,LRLCK1,LRSTOP
"RTN","LR7OFAO",23,0)
 N LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",24,0)
 S LRQUIET=1 D ORDER^LROW2
"RTN","LR7OFAO",25,0)
 ; Make sure top level of File 69 is set up and cross referenced
"RTN","LR7OFAO",26,0)
 K DIERR,LRFDAIEN,LRMSG,LRRECINF
"RTN","LR7OFAO",27,0)
 S LRSTOP=0
"RTN","LR7OFAO",28,0)
 S LRLCK1=$NA(^LRO(69,LRODT))
"RTN","LR7OFAO",29,0)
 I '$D(^LRO(69,LRODT)) D  ;
"RTN","LR7OFAO",30,0)
 . S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",31,0)
 . I 'X D  Q  ;
"RTN","LR7OFAO",32,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",33,0)
 . . N MSG
"RTN","LR7OFAO",34,0)
 . . S MSG(1)="The Lab Order Entry File # 69 is in use.",MSG(1,"F")="!!"
"RTN","LR7OFAO",35,0)
 . . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",36,0)
 . . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",37,0)
 . ;
"RTN","LR7OFAO",38,0)
 . S (LRFDAIEN(1),LRRECINF(69))=LRODT
"RTN","LR7OFAO",39,0)
 . S LRFDA(1,69,"+1,",.01)=LRODT
"RTN","LR7OFAO",40,0)
 . D UPDATE^DIE("S","LRFDA(1)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",41,0)
 . I $D(LRMSG) S LRSTOP=1 D ERRMSG(.LRMSG)
"RTN","LR7OFAO",42,0)
 ;
"RTN","LR7OFAO",43,0)
 L -@LRLCK1 ;unlock top level and proceed
"RTN","LR7OFAO",44,0)
 I 'LRSTOP D ZSN("",.LRRECINF)
"RTN","LR7OFAO",45,0)
 Q
"RTN","LR7OFAO",46,0)
 ;
"RTN","LR7OFAO",47,0)
 ;
"RTN","LR7OFAO",48,0)
ZSN(LRSN,LRRECINF) ;
"RTN","LR7OFAO",49,0)
 ; Create new LRSN entry for specimen
"RTN","LR7OFAO",50,0)
 ; Expects LRODT,LRDFN,LRAA,LRAD,LRAN
"RTN","LR7OFAO",51,0)
 ; Inputs
"RTN","LR7OFAO",52,0)
 ;   LRSN: <byref><opt> Output only. See Outputs below.
"RTN","LR7OFAO",53,0)
 ;   LRRECINF:<byref>  See Outputs
"RTN","LR7OFAO",54,0)
 ; Outputs
"RTN","LR7OFAO",55,0)
 ;   The LRSN array passed in byref is used to return the
"RTN","LR7OFAO",56,0)
 ;   new LRSN value (record #)
"RTN","LR7OFAO",57,0)
 ;   LRRECINF: Holds the IENs the API created.  LRRECINF(69), LRRECINF(69.01), LRRECINF(69.03)
"RTN","LR7OFAO",58,0)
 ;
"RTN","LR7OFAO",59,0)
 N LRDATA,LRLCK1,LRLCK2,LRSTOP,X,Y,R6903
"RTN","LR7OFAO",60,0)
 N IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",61,0)
 S LRSN=0
"RTN","LR7OFAO",62,0)
 S LRSTOP=0
"RTN","LR7OFAO",63,0)
 S LRLCK1=$NA(^LRO(69,LRODT,1)) ;lock SPECIMEN subfile
"RTN","LR7OFAO",64,0)
 S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",65,0)
 I 'X D  Q  ;
"RTN","LR7OFAO",66,0)
 . N MSG
"RTN","LR7OFAO",67,0)
 . S MSG(1)="Could not lock SPECIMEN subfile.",MSG(1,"F")="!!"
"RTN","LR7OFAO",68,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",69,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",70,0)
 ;
"RTN","LR7OFAO",71,0)
 S IEN="+1,"_LRODT_","
"RTN","LR7OFAO",72,0)
 S LRFDA(2,69.01,IEN,.01)=LRDFN
"RTN","LR7OFAO",73,0)
 D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",74,0)
 I $D(LRMSG) D  ;
"RTN","LR7OFAO",75,0)
 . S LRSTOP=1
"RTN","LR7OFAO",76,0)
 . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",77,0)
 ;
"RTN","LR7OFAO",78,0)
 L -@LRLCK1  ;unlock SPECIMEN whole file
"RTN","LR7OFAO",79,0)
 S (LRSN,LRRECINF(69.01))=$G(LRFDAIEN(1))
"RTN","LR7OFAO",80,0)
 I LRSTOP Q
"RTN","LR7OFAO",81,0)
 I 'LRSN D  Q  ;
"RTN","LR7OFAO",82,0)
 . N MSG
"RTN","LR7OFAO",83,0)
 . S MSG(1)="Failed to create new SPECIMEN entry in file #69.",MSG(1,"F")="!!"
"RTN","LR7OFAO",84,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",85,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",86,0)
 ;
"RTN","LR7OFAO",87,0)
 ; lock new SPECIMEN record just created
"RTN","LR7OFAO",88,0)
 S LRLCK1=$NA(^LRO(69,LRODT,1,LRSN))
"RTN","LR7OFAO",89,0)
 S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",90,0)
 I 'X D  Q  ;
"RTN","LR7OFAO",91,0)
 . N MSG
"RTN","LR7OFAO",92,0)
 . S MSG(1)="Could not lock new SPECIMEN entry "_LRSN_" in file #69.",MSG(1,"F")="!!"
"RTN","LR7OFAO",93,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",94,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",95,0)
 ;
"RTN","LR7OFAO",96,0)
 ; Make sure Hospital Location has a value
"RTN","LR7OFAO",97,0)
 I $G(LRLLOC)="" S LRLLOC="UNK"
"RTN","LR7OFAO",98,0)
 K LRDATA,LRMSG,DIERR
"RTN","LR7OFAO",99,0)
 ; File 44/10040
"RTN","LR7OFAO",100,0)
 D FIND^DIC(44,"","@","BOX",LRLLOC,"","B^","","","LRDATA","LRMSG")
"RTN","LR7OFAO",101,0)
 S LRIENLOC=""
"RTN","LR7OFAO",102,0)
 S X=$O(LRDATA("DILIST",2,0))
"RTN","LR7OFAO",103,0)
 I X S LRIENLOC=$G(LRDATA("DILIST",2,X))
"RTN","LR7OFAO",104,0)
 I 'LRIENLOC S LRLLOC="UNK"
"RTN","LR7OFAO",105,0)
 ;
"RTN","LR7OFAO",106,0)
 ; Set entries into File 69.01
"RTN","LR7OFAO",107,0)
 K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",108,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OFAO",109,0)
 S LRFDA(3,69.01,IEN,9.5)=LRORD
"RTN","LR7OFAO",110,0)
 S LRFDA(3,69.01,IEN,1)=DUZ
"RTN","LR7OFAO",111,0)
 S LRFDA(3,69.01,IEN,3)=LRSAMP
"RTN","LR7OFAO",112,0)
 S LRFDA(3,69.01,IEN,4)=LRORDR
"RTN","LR7OFAO",113,0)
 S LRFDA(3,69.01,IEN,5)=LRNT
"RTN","LR7OFAO",114,0)
 S LRFDA(3,69.01,IEN,7)=LRPRAC
"RTN","LR7OFAO",115,0)
 S LRFDA(3,69.01,IEN,8)=LRLLOC
"RTN","LR7OFAO",116,0)
 S LRFDA(3,69.01,IEN,5.5)=LRSDT
"RTN","LR7OFAO",117,0)
 S LRFDA(3,69.01,IEN,23)=LRIENLOC
"RTN","LR7OFAO",118,0)
 S LRFDA(3,69.01,IEN,.11)=ORIFN
"RTN","LR7OFAO",119,0)
 S LRFDA(3,69.01,IEN,10)=LRSDT
"RTN","LR7OFAO",120,0)
 I $G(LRSRDT) S LRFDA(3,69.01,IEN,20)=LRSRDT
"RTN","LR7OFAO",121,0)
 S LRFDA(3,69.01,IEN,12)=DUZ
"RTN","LR7OFAO",122,0)
 S LRFDA(3,69.01,IEN,13)="C"
"RTN","LR7OFAO",123,0)
 D FILE^DIE("","LRFDA(3)","LRMSG")
"RTN","LR7OFAO",124,0)
 I $D(LRMSG) D  ;
"RTN","LR7OFAO",125,0)
 . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",126,0)
 . S LRSTOP=1
"RTN","LR7OFAO",127,0)
 ;
"RTN","LR7OFAO",128,0)
 ; node usually set in #69.01 fld 8's Input Transform
"RTN","LR7OFAO",129,0)
 ; using FILE^DIE with external data causes a READ (from 9.2 DD node)
"RTN","LR7OFAO",130,0)
 I 'LRSTOP S ^LR(+LRDFN,.1)=LRLLOC
"RTN","LR7OFAO",131,0)
 ;
"RTN","LR7OFAO",132,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",133,0)
 . ; Set File #61 pointer in #69.02
"RTN","LR7OFAO",134,0)
 . K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",135,0)
 . ; Set top node for 69.02
"RTN","LR7OFAO",136,0)
 . S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","LR7OFAO",137,0)
 . S LRFDA(5,69.02,IEN,.01)=LRSPEC
"RTN","LR7OFAO",138,0)
 . D UPDATE^DIE("","LRFDA(5)","","LRMSG")
"RTN","LR7OFAO",139,0)
 . I $D(LRMSG) D  ;
"RTN","LR7OFAO",140,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",141,0)
 . . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",142,0)
 . ;
"RTN","LR7OFAO",143,0)
 ;
"RTN","LR7OFAO",144,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",145,0)
 . ; Set data into File 68.02
"RTN","LR7OFAO",146,0)
 . S LRLCK2=$NA(^LRO(68,1,LRAA,1,LRAD,1,LRAN))
"RTN","LR7OFAO",147,0)
 . S X=$$GETLOCK^LRUTIL(LRLCK2,360)
"RTN","LR7OFAO",148,0)
 . I 'X D  Q  ;
"RTN","LR7OFAO",149,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",150,0)
 . . N MSG
"RTN","LR7OFAO",151,0)
 . . S MSG(1)="Could not lock ACCESSION NUMBER entry "_LRAN_" in file #68.02.",MSG(1,"F")="!!"
"RTN","LR7OFAO",152,0)
 . . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",153,0)
 . . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",154,0)
 . ;
"RTN","LR7OFAO",155,0)
 . K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",156,0)
 . S IEN=LRAN_","_LRAD_","_LRAA_","
"RTN","LR7OFAO",157,0)
 . S LRFDA(4,68.02,IEN,3)=LRODT
"RTN","LR7OFAO",158,0)
 . S LRFDA(4,68.02,IEN,4)=LRSN
"RTN","LR7OFAO",159,0)
 . S LRFDA(4,68.02,IEN,14)=LRORD
"RTN","LR7OFAO",160,0)
 . D FILE^DIE("","LRFDA(4)","LRMSG")
"RTN","LR7OFAO",161,0)
 . I $D(LRMSG) D  ;
"RTN","LR7OFAO",162,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",163,0)
 . . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",164,0)
 . ;
"RTN","LR7OFAO",165,0)
 ;
"RTN","LR7OFAO",166,0)
 ; Set test in file 69
"RTN","LR7OFAO",167,0)
 ; Set top node for 69.03
"RTN","LR7OFAO",168,0)
 ; Already have lock (#69.01 is parent)
"RTN","LR7OFAO",169,0)
 S R6903=0
"RTN","LR7OFAO",170,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",171,0)
 . K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",172,0)
 . S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","LR7OFAO",173,0)
 . S LRFDA(6,69.03,IEN,.01)=LRTST
"RTN","LR7OFAO",174,0)
 . I $G(LROUTINE) S LRFDA(6,69.03,IEN,1)=LROUTINE
"RTN","LR7OFAO",175,0)
 . S LRFDA(6,69.03,IEN,2)=LRAD
"RTN","LR7OFAO",176,0)
 . S LRFDA(6,69.03,IEN,3)=LRAA
"RTN","LR7OFAO",177,0)
 . S LRFDA(6,69.03,IEN,4)=LRAN
"RTN","LR7OFAO",178,0)
 . S LRFDA(6,69.03,IEN,13)=LRUID
"RTN","LR7OFAO",179,0)
 . D UPDATE^DIE("","LRFDA(6)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",180,0)
 . I $D(LRMSG) D ERRMSG(.LRMSG) Q
"RTN","LR7OFAO",181,0)
 . S (R6903,LRRECINF(69.03))=$G(LRFDAIEN(1))
"RTN","LR7OFAO",182,0)
 . I 'R6903 D  ;
"RTN","LR7OFAO",183,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",184,0)
 . . N MSG
"RTN","LR7OFAO",185,0)
 . . S MSG(1)="Could not create new #69.03 entry."
"RTN","LR7OFAO",186,0)
 . . D ERRMSG()
"RTN","LR7OFAO",187,0)
 . ;
"RTN","LR7OFAO",188,0)
 ;
"RTN","LR7OFAO",189,0)
 ; File test in #68.04
"RTN","LR7OFAO",190,0)
 ;I 'LRSTOP D  ;
"RTN","LR7OFAO",191,0)
 ;. K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",192,0)
 ;. ; Already have lock (#68.02 is parent)
"RTN","LR7OFAO",193,0)
 ;. S IEN="?+1,"_LRAN_","_LRAD_","_LRAA_","
"RTN","LR7OFAO",194,0)
 ;. S LRFDA(71,68.04,IEN,.01)=LRTST
"RTN","LR7OFAO",195,0)
 ;. D UPDATE^DIE("","LRFDA(71)","","LRMSG")
"RTN","LR7OFAO",196,0)
 ;. I $D(LRMSG) D  ;
"RTN","LR7OFAO",197,0)
 ;. . S LRSTOP=1
"RTN","LR7OFAO",198,0)
 ;. . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",199,0)
 ;. ;
"RTN","LR7OFAO",200,0)
 ;
"RTN","LR7OFAO",201,0)
 ; unlock nodes
"RTN","LR7OFAO",202,0)
 L -@LRLCK2
"RTN","LR7OFAO",203,0)
 L -@LRLCK1
"RTN","LR7OFAO",204,0)
 Q
"RTN","LR7OFAO",205,0)
 ;
"RTN","LR7OFAO",206,0)
 ;
"RTN","LR7OFAO",207,0)
ERRMSG(LRARRAY,ARR2) ;
"RTN","LR7OFAO",208,0)
 ; Filing error notification
"RTN","LR7OFAO",209,0)
 ; Inputs
"RTN","LR7OFAO",210,0)
 ;  LRARRAY: <byref><opt> FM compliant message array
"RTN","LR7OFAO",211,0)
 ;     ARR2: <byref><byval><opt> Additional text
"RTN","LR7OFAO",212,0)
 ;
"RTN","LR7OFAO",213,0)
 N MSG,I,II,J
"RTN","LR7OFAO",214,0)
 S MSG(1)="Filing errors in routine LR7OFAO for "_LRODT_" Specimen: "_LRDFN
"RTN","LR7OFAO",215,0)
 ; Add ARR2 nodes
"RTN","LR7OFAO",216,0)
 I $D(ARR2) D  ;
"RTN","LR7OFAO",217,0)
 . S J=+$O(MSG(" "),-1)
"RTN","LR7OFAO",218,0)
 . I J S:J<1 J=1
"RTN","LR7OFAO",219,0)
 . I $G(ARR2)'="" S MSG(J+1)=ARR2
"RTN","LR7OFAO",220,0)
 . S I=0
"RTN","LR7OFAO",221,0)
 . F  S I=$O(ARR2(I)) Q:'I  S J=+$O(MSG(" "),-1) S:J<1&(J) J=1 S MSG(J+1)=ARR2(I)
"RTN","LR7OFAO",222,0)
 ;
"RTN","LR7OFAO",223,0)
 D EN^DDIOL(.MSG)
"RTN","LR7OFAO",224,0)
 I $D(LRARRAY) D MSG^DIALOG("WE","","","","LRARRAY")
"RTN","LR7OFAO",225,0)
 Q
"RTN","LR7OGG")
0^150^B63370341
"RTN","LR7OGG",1,0)
LR7OGG ;DALOI/STAFF- Interim report rpc grid ;02/11/11  15:09
"RTN","LR7OGG",2,0)
 ;;5.2;LAB SERVICE;**187,290,364,350**;Sep 27, 1994;Build 230
"RTN","LR7OGG",3,0)
 ;
"RTN","LR7OGG",4,0)
TEST ; test use only
"RTN","LR7OGG",5,0)
 N CNT,I
"RTN","LR7OGG",6,0)
 K ^TMP("LR7OGX",$J)
"RTN","LR7OGG",7,0)
 S ^TMP("LR7OGX",$J,"INPUT",1)="2^2970202^2920202"
"RTN","LR7OGG",8,0)
 S CNT=1
"RTN","LR7OGG",9,0)
 ;F I=1:1:10 I $D(^LAB(60,I,0)) S CNT=CNT+1,^TMP("LR7OGX",$J,"INPUT",CNT)=I
"RTN","LR7OGG",10,0)
 F I=7,173,9,1 I $D(^LAB(60,I,0)) S CNT=CNT+1,^TMP("LR7OGX",$J,"INPUT",CNT)=I
"RTN","LR7OGG",11,0)
 D GRIDDATA
"RTN","LR7OGG",12,0)
 S I=0 F  S I=$O(^TMP("LR7OGX",$J,"OUTPUT",I)) Q:I<1  W !,^(I)
"RTN","LR7OGG",13,0)
 K ^TMP("LR7OGX",$J)
"RTN","LR7OGG",14,0)
 Q
"RTN","LR7OGG",15,0)
 ;
"RTN","LR7OGG",16,0)
GRID(ROOT,DFN,DATE1,DATE2,SPEC,TESTS) ; from ORWLRR
"RTN","LR7OGG",17,0)
 N CNT,NUM
"RTN","LR7OGG",18,0)
 K ^TMP("LR7OGX",$J,"INPUT"),^("OUTPUT")
"RTN","LR7OGG",19,0)
 S ROOT=$NA(^TMP("LR7OGX",$J,"OUTPUT"))
"RTN","LR7OGG",20,0)
 S ^TMP("LR7OGX",$J,"INPUT",1)=DFN_U_DATE1_U_DATE2_U_+SPEC
"RTN","LR7OGG",21,0)
 S CNT=1,NUM=0 F  S NUM=$O(TESTS(NUM)) Q:NUM<1  D
"RTN","LR7OGG",22,0)
 .S CNT=CNT+1
"RTN","LR7OGG",23,0)
 .S ^TMP("LR7OGX",$J,"INPUT",CNT)=+TESTS(NUM)
"RTN","LR7OGG",24,0)
 D GRIDDATA
"RTN","LR7OGG",25,0)
 Q
"RTN","LR7OGG",26,0)
 ;
"RTN","LR7OGG",27,0)
 ;
"RTN","LR7OGG",28,0)
GRIDDATA ;
"RTN","LR7OGG",29,0)
 ; input format
"RTN","LR7OGG",30,0)
 ; ^TMP("LR7OGX",$J,"INPUT",1)=dfn^start date^end date^spec^all tests
"RTN","LR7OGG",31,0)
 ; ^TMP("LR7OGX",$J,"INPUT",#)=test#  (tests displayed in this order)
"RTN","LR7OGG",32,0)
 ;   (these tests should, be atomic, subscript - ch, type - both or output)
"RTN","LR7OGG",33,0)
 ;
"RTN","LR7OGG",34,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",1)="0^0^0^1"
"RTN","LR7OGG",35,0)
 N ABCNT,ABDCNT,ABLINE,ABTCNT,ABTLINE,ADCNT,ADSEQ,AGE,ATCNT,ATSEQ,CDT,CHSUB,COMCNT,COMMENT,DATACNT,DATESEQ,DFN,DISPDATE,EDATE,EDT,FLAG,I,IDT,INEXACT
"RTN","LR7OGG",36,0)
 N LINE,LRCW,LRDFN,LRPROV,LRX,LRY,NUM,ONLYSPEC,OUTCNT,PNM,PRNTCODE,RESULT,SDATE,SEX,SPEC,SPECNAME,TESTNAME,TESTNUM,TESTSEQ,TESTZERO,X,ZERO
"RTN","LR7OGG",37,0)
 F I="LR7OG","LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OGG",38,0)
 S DFN=+^TMP("LR7OGX",$J,"INPUT",1),SDATE=+$P(^(1),U,2),EDATE=+$P(^(1),U,3),ONLYSPEC=+$P(^(1),U,4)
"RTN","LR7OGG",39,0)
 D DEMO^LR7OGU(DFN,.LRDFN,.PNM,.AGE,.SEX)
"RTN","LR7OGG",40,0)
 Q:'DFN  Q:'SDATE  Q:'EDATE  Q:'LRDFN
"RTN","LR7OGG",41,0)
 S (COMCNT,OUTCNT)=1,(ADCNT,ADSEQ,ATCNT,ATSEQ,DATACNT,DATESEQ,TESTSEQ)=0
"RTN","LR7OGG",42,0)
 S NUM=1
"RTN","LR7OGG",43,0)
 F  S NUM=$O(^TMP("LR7OGX",$J,"INPUT",NUM)) Q:NUM<1  S TESTNUM=+^(NUM) D
"RTN","LR7OGG",44,0)
 . S TESTZERO=$G(^LAB(60,TESTNUM,0))
"RTN","LR7OGG",45,0)
 . S CHSUB=$P($P(TESTZERO,U,5),";",2)
"RTN","LR7OGG",46,0)
 . I 'CHSUB Q
"RTN","LR7OGG",47,0)
 . S TESTNAME=$P($G(^LAB(60,TESTNUM,.1)),U),PRNTCODE=$P($G(^(.1)),U,3)
"RTN","LR7OGG",48,0)
 . I TESTNAME="" S TESTNAME=$P(TESTZERO,U)
"RTN","LR7OGG",49,0)
 . S TESTSEQ=TESTSEQ+1
"RTN","LR7OGG",50,0)
 . S LINE=TESTSEQ_U_TESTNUM_U_TESTNAME_U_PRNTCODE
"RTN","LR7OGG",51,0)
 . S ^TMP("LR7OG",$J,"TEST",CHSUB)=LINE
"RTN","LR7OGG",52,0)
 . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",53,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE
"RTN","LR7OGG",54,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",1)=TESTSEQ
"RTN","LR7OGG",55,0)
 S EDATE=EDATE\1
"RTN","LR7OGG",56,0)
 S IDT=9999999-SDATE,EDT=9999999-EDATE
"RTN","LR7OGG",57,0)
 F  S IDT=$O(^LR(LRDFN,"CH",IDT)) Q:IDT<1  Q:IDT>EDT  D
"RTN","LR7OGG",58,0)
 . S ZERO=^LR(LRDFN,"CH",IDT,0)
"RTN","LR7OGG",59,0)
 . I '$P(ZERO,U,3) Q
"RTN","LR7OGG",60,0)
 . S CDT=+ZERO,INEXACT=$P(ZERO,U,2),SPEC=+$P(ZERO,U,5),SPECNAME=$P($G(^LAB(61,SPEC,0)),U),COMMENT="**" ;COMMENT=$S($O(^LR(LRDFN,"CH",IDT,1,0)):"**",1:"")
"RTN","LR7OGG",61,0)
 . I ONLYSPEC,SPEC'=ONLYSPEC Q
"RTN","LR7OGG",62,0)
 . S LRPROV=$P(ZERO,"^",10)
"RTN","LR7OGG",63,0)
 . S CHSUB=1
"RTN","LR7OGG",64,0)
 . F  S CHSUB=$O(^LR(LRDFN,"CH",IDT,CHSUB)) Q:CHSUB=""  D
"RTN","LR7OGG",65,0)
 . . I '$D(^TMP("LR7OG",$J,"TEST",CHSUB)) Q
"RTN","LR7OGG",66,0)
 . . I '$D(^TMP("LR7OG",$J,"DATE",IDT)) S ^(IDT)="" D
"RTN","LR7OGG",67,0)
 . . . S DATESEQ=DATESEQ+1,OUTCNT=OUTCNT+1,DISPDATE=$S(INEXACT:CDT\1,1:CDT)
"RTN","LR7OGG",68,0)
 . . . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=DATESEQ_U_CDT_U_SPEC_U_SPECNAME_U_COMMENT_U_DISPDATE
"RTN","LR7OGG",69,0)
 . . S LRX=$$TSTRES^LRRPU(LRDFN,"CH",IDT,CHSUB,"")
"RTN","LR7OGG",70,0)
 . . S RESULT=$P(LRX,"^"),FLAG=$P(LRX,U,2)
"RTN","LR7OGG",71,0)
 . . S PRNTCODE=$P(^TMP("LR7OG",$J,"TEST",CHSUB),U,4)
"RTN","LR7OGG",72,0)
 . . I PRNTCODE'="" S X=RESULT,LRCW=8 S @("RESULT="_PRNTCODE)
"RTN","LR7OGG",73,0)
 . . E  S RESULT=$J(RESULT,8)
"RTN","LR7OGG",74,0)
 . . S RESULT=$$STRIP^LR7OGU(RESULT)
"RTN","LR7OGG",75,0)
 . . I FLAG'="" D
"RTN","LR7OGG",76,0)
 . . . S ABTLINE=^TMP("LR7OG",$J,"TEST",CHSUB)
"RTN","LR7OGG",77,0)
 . . . I '$D(^TMP("LR7OG",$J,"ABTSEQ",+ABTLINE)) S ^(+ABTLINE)=U_$P(ABTLINE,U,2,3)
"RTN","LR7OGG",78,0)
 . . . I '$D(^TMP("LR7OG",$J,"ABDSEQ",IDT)) S ^(IDT)=U_CDT_U_SPEC_U_SPECNAME_U_COMMENT
"RTN","LR7OGG",79,0)
 . . . S ^TMP("LR7OG",$J,"ABDATA",IDT,+ABTLINE)=RESULT_U_FLAG
"RTN","LR7OGG",80,0)
 . . S TESTSEQ=+^TMP("LR7OG",$J,"TEST",CHSUB)
"RTN","LR7OGG",81,0)
 . . S DATACNT=DATACNT+1
"RTN","LR7OGG",82,0)
 . . S ^TMP("LR7OG",$J,"DATA",DATACNT)=DATESEQ_U_TESTSEQ_U_RESULT_U_FLAG
"RTN","LR7OGG",83,0)
 . . D TESTSPEC(CHSUB,SPEC,SPECNAME,AGE,SEX)
"RTN","LR7OGG",84,0)
 . . I $P(LRX,"^",6) S ^TMP("LRPLS",$J,$P(LRX,"^",6),$P(^TMP("LR7OG",$J,"TEST",CHSUB),"^",3))=""
"RTN","LR7OGG",85,0)
 . I '$D(^TMP("LR7OG",$J,"DATE",IDT)) Q
"RTN","LR7OGG",86,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=$P($$FMTE^XLFDT(CDT),":",1,2)_" ** Comments:",COMCNT=COMCNT+1
"RTN","LR7OGG",87,0)
 . I $D(^LR(LRDFN,"CH",IDT,1)) D
"RTN","LR7OGG",88,0)
 . . S NUM=0
"RTN","LR7OGG",89,0)
 . . F  S NUM=$O(^LR(LRDFN,"CH",IDT,1,NUM)) Q:NUM<1  S LINE=$G(^(NUM,0)),^TMP("LR7OG",$J,"COMMENT",COMCNT)=LINE,COMCNT=COMCNT+1
"RTN","LR7OGG",90,0)
 . . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=" ",COMCNT=COMCNT+1
"RTN","LR7OGG",91,0)
 . S LRY=$$NAME^XUSER(LRPROV,"G")
"RTN","LR7OGG",92,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="Ordering Provider: "_LRY,COMCNT=COMCNT+1
"RTN","LR7OGG",93,0)
 . D RRDT($P(ZERO,"^",3),.COMCNT)
"RTN","LR7OGG",94,0)
 . D PLS
"RTN","LR7OGG",95,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,2,3)=DATESEQ_U_DATACNT
"RTN","LR7OGG",96,0)
 S DATACNT=0
"RTN","LR7OGG",97,0)
 F  S DATACNT=$O(^TMP("LR7OG",$J,"DATA",DATACNT)) Q:DATACNT<1  S LINE=^(DATACNT) D
"RTN","LR7OGG",98,0)
 . S OUTCNT=OUTCNT+1,^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE
"RTN","LR7OGG",99,0)
 S OUTCNT=OUTCNT+1,ABLINE=OUTCNT
"RTN","LR7OGG",100,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="0^0^0"
"RTN","LR7OGG",101,0)
 ;
"RTN","LR7OGG",102,0)
 S (ABTCNT,ATSEQ)=0
"RTN","LR7OGG",103,0)
 F  S ATSEQ=$O(^TMP("LR7OG",$J,"ABTSEQ",ATSEQ)) Q:ATSEQ<1  D
"RTN","LR7OGG",104,0)
 . S ABTCNT=ABTCNT+1
"RTN","LR7OGG",105,0)
 . S $P(^TMP("LR7OG",$J,"ABTSEQ",ATSEQ),U)=ABTCNT
"RTN","LR7OGG",106,0)
 . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",107,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=^TMP("LR7OG",$J,"ABTSEQ",ATSEQ)
"RTN","LR7OGG",108,0)
 ;
"RTN","LR7OGG",109,0)
 S (ABDCNT,ADSEQ)=0
"RTN","LR7OGG",110,0)
 F  S ADSEQ=$O(^TMP("LR7OG",$J,"ABDSEQ",ADSEQ)) Q:ADSEQ<1  D
"RTN","LR7OGG",111,0)
 . S ABDCNT=ABDCNT+1
"RTN","LR7OGG",112,0)
 . S $P(^TMP("LR7OG",$J,"ABDSEQ",ADSEQ),U)=ABDCNT
"RTN","LR7OGG",113,0)
 . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",114,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=^TMP("LR7OG",$J,"ABDSEQ",ADSEQ)
"RTN","LR7OGG",115,0)
 ;
"RTN","LR7OGG",116,0)
 S (ABCNT,ADSEQ)=0
"RTN","LR7OGG",117,0)
 F  S ADSEQ=$O(^TMP("LR7OG",$J,"ABDATA",ADSEQ)) Q:ADSEQ<1  D
"RTN","LR7OGG",118,0)
 . S ADCNT=+^TMP("LR7OG",$J,"ABDSEQ",ADSEQ)
"RTN","LR7OGG",119,0)
 . S ATSEQ=0
"RTN","LR7OGG",120,0)
 .  F  S ATSEQ=$O(^TMP("LR7OG",$J,"ABDATA",ADSEQ,ATSEQ)) Q:ATSEQ<1  D
"RTN","LR7OGG",121,0)
 . . S ATCNT=+^TMP("LR7OG",$J,"ABTSEQ",ATSEQ)
"RTN","LR7OGG",122,0)
 . . S ABCNT=ABCNT+1
"RTN","LR7OGG",123,0)
 . . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",124,0)
 . . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=ADCNT_U_ATCNT_U_^TMP("LR7OG",$J,"ABDATA",ADSEQ,ATSEQ)
"RTN","LR7OGG",125,0)
 ;
"RTN","LR7OGG",126,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",ABLINE)=ABTCNT_U_ABDCNT_U_ABCNT
"RTN","LR7OGG",127,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,4)=OUTCNT
"RTN","LR7OGG",128,0)
 S TESTSEQ=0
"RTN","LR7OGG",129,0)
 F  S TESTSEQ=$O(^TMP("LR7OG",$J,"TESTSPEC",TESTSEQ)) Q:TESTSEQ<1  D
"RTN","LR7OGG",130,0)
 . S SPEC=0
"RTN","LR7OGG",131,0)
 . F  S SPEC=$O(^TMP("LR7OG",$J,"TESTSPEC",TESTSEQ,SPEC)) Q:SPEC<1  S LINE=^(SPEC) D
"RTN","LR7OGG",132,0)
 . . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",133,0)
 . . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE
"RTN","LR7OGG",134,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,5)=OUTCNT
"RTN","LR7OGG",135,0)
 ;
"RTN","LR7OGG",136,0)
 S NUM=0
"RTN","LR7OGG",137,0)
 F  S NUM=$O(^TMP("LR7OG",$J,"COMMENT",NUM)) Q:NUM<1  S LINE=^(NUM) D
"RTN","LR7OGG",138,0)
 . S OUTCNT=OUTCNT+1
"RTN","LR7OGG",139,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE
"RTN","LR7OGG",140,0)
 ;
"RTN","LR7OGG",141,0)
 F I="LR7OG","LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OGG",142,0)
 Q
"RTN","LR7OGG",143,0)
 ;
"RTN","LR7OGG",144,0)
 ;
"RTN","LR7OGG",145,0)
TESTSPEC(CHSUB,SPEC,SPECNAME,AGE,SEX) ;
"RTN","LR7OGG",146,0)
 N RANGE,TESTNAME,TESTNUM,TESTSEQ,UNITS
"RTN","LR7OGG",147,0)
 S TESTSEQ=+$P(^TMP("LR7OG",$J,"TEST",CHSUB),U),TESTNUM=+$P(^(CHSUB),U,2),TESTNAME=$P(^(CHSUB),U,3)
"RTN","LR7OGG",148,0)
 I $D(^TMP("LR7OG",$J,"TESTSPEC",TESTSEQ,SPEC)) Q
"RTN","LR7OGG",149,0)
 D URANGE^LR7OGU(TESTNUM,SPEC,AGE,SEX,.UNITS,.RANGE)
"RTN","LR7OGG",150,0)
 S ^TMP("LR7OG",$J,"TESTSPEC",TESTSEQ,SPEC)=TESTNUM_U_SPECNAME_U_SPEC_U_UNITS_U_$P(RANGE," - ")_U_$P($P(RANGE," - ",2)," (")
"RTN","LR7OGG",151,0)
 Q
"RTN","LR7OGG",152,0)
 ;
"RTN","LR7OGG",153,0)
 ;
"RTN","LR7OGG",154,0)
RRDT(LRDT,COMCNT) ; Display report released date/time
"RTN","LR7OGG",155,0)
 ; Call with LRDT = Date/time report released (completed) in FileMan d/t format
"RTN","LR7OGG",156,0)
 ;            CNT = Current comment line counter (pass by reference)
"RTN","LR7OGG",157,0)
 N LRY
"RTN","LR7OGG",158,0)
 ;
"RTN","LR7OGG",159,0)
 I LRDT S LRY=$$FMTE^XLFDT(LRDT,"M")
"RTN","LR7OGG",160,0)
 E  S LRY=""
"RTN","LR7OGG",161,0)
 S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="Report Released Date/Time: "_LRY,COMCNT=COMCNT+1
"RTN","LR7OGG",162,0)
 Q
"RTN","LR7OGG",163,0)
 ;
"RTN","LR7OGG",164,0)
 ;
"RTN","LR7OGG",165,0)
PLS ; List reporting and performing laboratories
"RTN","LR7OGG",166,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OGG",167,0)
 ;
"RTN","LR7OGG",168,0)
 ;ZEXCEPT: COMCNT,IDT,LRDFN
"RTN","LR7OGG",169,0)
 ;
"RTN","LR7OGG",170,0)
 N LINE,LLEN,LRPLS,LRX,MPLS,PLS,TESTNAME,X
"RTN","LR7OGG",171,0)
 ;
"RTN","LR7OGG",172,0)
 ; Reporting Laboratory
"RTN","LR7OGG",173,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OGG",174,0)
 . S LRX=+$G(^LR(LRDFN,"CH",IDT,"RF"))
"RTN","LR7OGG",175,0)
 . I LRX<1 Q
"RTN","LR7OGG",176,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OGG",177,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=" ",COMCNT=COMCNT+1
"RTN","LR7OGG",178,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="Reporting Lab: "_$P(LINE,"^"),COMCNT=COMCNT+1
"RTN","LR7OGG",179,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="               "_$P(LINE,"^",2),COMCNT=COMCNT+1
"RTN","LR7OGG",180,0)
 ;
"RTN","LR7OGG",181,0)
 S PLS=$O(^TMP("LRPLS",$J,0)),MPLS=0
"RTN","LR7OGG",182,0)
 I $O(^TMP("LRPLS",$J,PLS)) S MPLS=1 ; multiple performing labs
"RTN","LR7OGG",183,0)
 S LRPLS=0
"RTN","LR7OGG",184,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OGG",185,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=" ",COMCNT=COMCNT+1
"RTN","LR7OGG",186,0)
 . I MPLS D
"RTN","LR7OGG",187,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OGG",188,0)
 . . F  S TESTNAME=$O(^TMP("LRPLS",$J,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OGG",189,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OGG",190,0)
 . . . I (LLEN+X)>240 S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=LINE,COMCNT=COMCNT+1,LINE="",LLEN=0
"RTN","LR7OGG",191,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OGG",192,0)
 . . I LINE'="" S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=LINE,COMCNT=COMCNT+1
"RTN","LR7OGG",193,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OGG",194,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="Performing Lab: "_$P(LINE,"^"),COMCNT=COMCNT+1
"RTN","LR7OGG",195,0)
 . S ^TMP("LR7OG",$J,"COMMENT",COMCNT)="                "_$P(LINE,"^",2),COMCNT=COMCNT+1
"RTN","LR7OGG",196,0)
 ;
"RTN","LR7OGG",197,0)
 S ^TMP("LR7OG",$J,"COMMENT",COMCNT)=" ",COMCNT=COMCNT+1
"RTN","LR7OGG",198,0)
 ;
"RTN","LR7OGG",199,0)
 K ^TMP("LRPLS",$J)
"RTN","LR7OGG",200,0)
 Q
"RTN","LR7OGM")
0^147^B42661615
"RTN","LR7OGM",1,0)
LR7OGM ;DALOI/STAFF- Interim report rpc memo ;11/19/09  17:38
"RTN","LR7OGM",2,0)
 ;;5.2;LAB SERVICE;**187,220,312,286,395,350**;Sep 27, 1994;Build 230
"RTN","LR7OGM",3,0)
 ;
"RTN","LR7OGM",4,0)
TEST ; test use only
"RTN","LR7OGM",5,0)
 N TESTS,I K TESTS,^TMP("LR7OGX",$J)
"RTN","LR7OGM",6,0)
 ;S TESTS(548)=548
"RTN","LR7OGM",7,0)
 ;F I=1:1:10 I $D(^LAB(60,I,0)) S TESTS(I)=I
"RTN","LR7OGM",8,0)
 D SELECT(16,3090730,2700202,.TESTS,1,0)
"RTN","LR7OGM",9,0)
 S I=0 F  S I=$O(^TMP("LR7OGX",$J,"OUTPUT",I)) Q:I<1  W !,^(I)
"RTN","LR7OGM",10,0)
 K ^TMP("LR7OGX",$J)
"RTN","LR7OGM",11,0)
 Q
"RTN","LR7OGM",12,0)
 ;
"RTN","LR7OGM",13,0)
INTERIM(ROOT,DFN,SDATE,EDATE) ; from ORWLRR
"RTN","LR7OGM",14,0)
 N FORMAT,MICROCHK,TESTS K TESTS
"RTN","LR7OGM",15,0)
 S (FORMAT,MICROCHK)=""
"RTN","LR7OGM",16,0)
 S ROOT=$NA(^TMP("LR7OGX",$J,"OUTPUT"))
"RTN","LR7OGM",17,0)
 D SELECT(DFN,SDATE,EDATE,.TESTS,FORMAT,MICROCHK) ;
"RTN","LR7OGM",18,0)
 Q
"RTN","LR7OGM",19,0)
 ;
"RTN","LR7OGM",20,0)
INTERIMG(ROOT,DFN,SDATE,DIR,FORMAT) ; from ORWLRR
"RTN","LR7OGM",21,0)
 N MICROCHK,TESTS K TESTS
"RTN","LR7OGM",22,0)
 S MICROCHK=1,FORMAT=$G(FORMAT,1)
"RTN","LR7OGM",23,0)
 S ROOT=$NA(^TMP("LR7OGX",$J,"OUTPUT"))
"RTN","LR7OGM",24,0)
 D SELECT(DFN,SDATE,DIR,.TESTS,FORMAT,MICROCHK) ;
"RTN","LR7OGM",25,0)
 Q
"RTN","LR7OGM",26,0)
 ;
"RTN","LR7OGM",27,0)
INTERIMS(ROOT,DFN,SDATE,EDATE,TESTLIST) ; from ORWLRR
"RTN","LR7OGM",28,0)
 N FORMAT,MICROCHK,NUM,TESTS K TESTS
"RTN","LR7OGM",29,0)
 S (FORMAT,MICROCHK)=""
"RTN","LR7OGM",30,0)
 S NUM=0 F  S NUM=$O(TESTLIST(NUM)) Q:NUM<1  S TESTS(+TESTLIST(NUM))=""
"RTN","LR7OGM",31,0)
 S ROOT=$NA(^TMP("LR7OGX",$J,"OUTPUT"))
"RTN","LR7OGM",32,0)
 D SELECT(DFN,SDATE,EDATE,.TESTS,FORMAT,MICROCHK) ;
"RTN","LR7OGM",33,0)
 Q
"RTN","LR7OGM",34,0)
 ;
"RTN","LR7OGM",35,0)
MICRO(ROOT,DFN,SDATE,EDATE) ; from ORWLRR
"RTN","LR7OGM",36,0)
 N FORMAT,MICROCHK,TESTS K TESTS
"RTN","LR7OGM",37,0)
 S FORMAT="",MICROCHK=-1
"RTN","LR7OGM",38,0)
 S ROOT=$NA(^TMP("LR7OGX",$J,"OUTPUT"))
"RTN","LR7OGM",39,0)
 D SELECT(DFN,SDATE,EDATE,.TESTS,FORMAT,MICROCHK) ;
"RTN","LR7OGM",40,0)
 Q
"RTN","LR7OGM",41,0)
 ;
"RTN","LR7OGM",42,0)
SELECT(DFN,SDATE,EDATE,TESTS,FORMAT,MICROCHK) ;
"RTN","LR7OGM",43,0)
 ; get patient info, and expand tests
"RTN","LR7OGM",44,0)
 ; route setup chem and/or micro data
"RTN","LR7OGM",45,0)
 ; 9th piece of output indicates format (2: CH of CH/MI exact date/time, 3: MI of CH/MI, else 1 or "")
"RTN","LR7OGM",46,0)
 N AGE,ALL,ASK,AVAIL,CNIDT,DIRECT,DONE,EDT,FOK,I,IDT,LRCAN,LRDFN,MICROSUB,MNIDT,NEWOLD,OUTCNT,PNM,ROUTE,SEX,SDT,SKIP
"RTN","LR7OGM",47,0)
 K MICROSUB
"RTN","LR7OGM",48,0)
 K ^TMP("LR7OG",$J),^TMP("LR7OGX",$J,"OUTPUT"),^TMP("LRPLS",$J)
"RTN","LR7OGM",49,0)
 S OUTCNT=1,(DONE,SKIP)=0
"RTN","LR7OGM",50,0)
 D DEMO^LR7OGU(DFN,.LRDFN,.PNM,.AGE,.SEX)
"RTN","LR7OGM",51,0)
 I '$G(LRDFN) Q
"RTN","LR7OGM",52,0)
 D NEWOLD^LR7OGMU(.NEWOLD,DFN)
"RTN","LR7OGM",53,0)
 S ^TMP("LR7OG",$J,"G")=DFN_U_PNM_U_LRDFN_U_AGE_U_SEX_"^8"
"RTN","LR7OGM",54,0)
 S ALL=$S($O(TESTS(0)):0,1:1)
"RTN","LR7OGM",55,0)
 I 'ALL D TESTSGET^LR7OGU(.TESTS,.MICROSUB)
"RTN","LR7OGM",56,0)
 S DIRECT=1
"RTN","LR7OGM",57,0)
 I FORMAT S DIRECT=EDATE,EDATE=2700101
"RTN","LR7OGM",58,0)
 S EDATE=EDATE\1
"RTN","LR7OGM",59,0)
 S (IDT,SDT)=9999999-SDATE,EDT=9999999-EDATE
"RTN","LR7OGM",60,0)
 I FORMAT>1 S FOK=0 D  I FOK Q
"RTN","LR7OGM",61,0)
 . I DIRECT=1 D  Q
"RTN","LR7OGM",62,0)
 . . I FORMAT=2 D  Q
"RTN","LR7OGM",63,0)
 . . . D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",64,0)
 . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",65,0)
 . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=3
"RTN","LR7OGM",66,0)
 . . . S FOK=1
"RTN","LR7OGM",67,0)
 . . I FORMAT=3 D  Q
"RTN","LR7OGM",68,0)
 . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=1
"RTN","LR7OGM",69,0)
 . I DIRECT=-1 D  Q
"RTN","LR7OGM",70,0)
 . . I FORMAT=2 D  Q
"RTN","LR7OGM",71,0)
 . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=1
"RTN","LR7OGM",72,0)
 . . I FORMAT=3 D  Q
"RTN","LR7OGM",73,0)
 . . . D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",74,0)
 . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",75,0)
 . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=2
"RTN","LR7OGM",76,0)
 . . . S FOK=1
"RTN","LR7OGM",77,0)
 I ALL S ASK="BOTH"
"RTN","LR7OGM",78,0)
 E  I $O(MICROSUB(0)) D
"RTN","LR7OGM",79,0)
 . S ASK="MI" I $O(^TMP("LR7OG",$J,"TMP",0)) S ASK="BOTH"
"RTN","LR7OGM",80,0)
 E  S ASK="CH"
"RTN","LR7OGM",81,0)
 S I=IDT,CNIDT=0 F  S I=$O(^LR(LRDFN,"CH",I),DIRECT) Q:'I  S CNIDT=I Q
"RTN","LR7OGM",82,0)
 S I=IDT,MNIDT=0 F  S I=$O(^LR(LRDFN,"MI",I),DIRECT) Q:'I  S MNIDT=I Q
"RTN","LR7OGM",83,0)
 S AVAIL="NONE"
"RTN","LR7OGM",84,0)
 I CNIDT,CNIDT'>EDT D
"RTN","LR7OGM",85,0)
 . S AVAIL="CH" I MNIDT,MNIDT'>EDT S AVAIL="BOTH"
"RTN","LR7OGM",86,0)
 E  I MNIDT,MNIDT'>EDT S AVAIL="MI"
"RTN","LR7OGM",87,0)
 I DIRECT=-1 S AVAIL="BOTH"
"RTN","LR7OGM",88,0)
 S ROUTE="NONE"
"RTN","LR7OGM",89,0)
 I ASK="BOTH" S ROUTE=AVAIL
"RTN","LR7OGM",90,0)
 I ASK="CH",AVAIL="CH"!(AVAIL="BOTH") S ROUTE="CH"
"RTN","LR7OGM",91,0)
 I ASK="MI",AVAIL="MI"!(AVAIL="BOTH") S ROUTE="MI"
"RTN","LR7OGM",92,0)
 I MICROCHK=-1 S ROUTE="MI"
"RTN","LR7OGM",93,0)
 I ROUTE="NONE" D  Q
"RTN","LR7OGM",94,0)
 . K ^TMP("LR7OG",$J)
"RTN","LR7OGM",95,0)
 ;
"RTN","LR7OGM",96,0)
 ; Print "printed at" header on start of report.
"RTN","LR7OGM",97,0)
 I 'FORMAT,$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC^LR7OGMP
"RTN","LR7OGM",98,0)
 ;
"RTN","LR7OGM",99,0)
 I ROUTE="CH" D  Q
"RTN","LR7OGM",100,0)
 . F  S IDT=$O(^LR(LRDFN,"CH",IDT),DIRECT) Q:IDT<1  Q:IDT>EDT  D  Q:DONE
"RTN","LR7OGM",101,0)
 . . D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",102,0)
 . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",103,0)
 . I 'FORMAT,$D(^TMP("LRPLS",$J)) D PLS^LR7OGMP
"RTN","LR7OGM",104,0)
 . K ^TMP("LR7OG",$J),^TMP("LRPLS",$J)
"RTN","LR7OGM",105,0)
 ;
"RTN","LR7OGM",106,0)
 I ROUTE="MI" D  Q
"RTN","LR7OGM",107,0)
 . F  S IDT=$O(^LR(LRDFN,"MI",IDT),DIRECT) Q:IDT<1  Q:IDT>EDT  D  Q:DONE
"RTN","LR7OGM",108,0)
 . . D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",109,0)
 . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",110,0)
 . K ^TMP("LR7OG",$J)
"RTN","LR7OGM",111,0)
 F  D  Q:DONE
"RTN","LR7OGM",112,0)
 . S I=IDT,CNIDT=0 F  S I=$O(^LR(LRDFN,"CH",I),DIRECT) Q:'I  S CNIDT=I Q
"RTN","LR7OGM",113,0)
 . S I=IDT,MNIDT=0 F  S I=$O(^LR(LRDFN,"MI",I),DIRECT) Q:'I  S MNIDT=I Q
"RTN","LR7OGM",114,0)
 . I 'CNIDT,'MNIDT S DONE=1 Q
"RTN","LR7OGM",115,0)
 . D  I IDT>EDT S DONE=1 Q
"RTN","LR7OGM",116,0)
 . . I CNIDT=MNIDT D  Q  ; both chem and micro at this date/time
"RTN","LR7OGM",117,0)
 . . . S IDT=CNIDT
"RTN","LR7OGM",118,0)
 . . . I IDT'>EDT D
"RTN","LR7OGM",119,0)
 . . . . I FORMAT D  Q
"RTN","LR7OGM",120,0)
 . . . . . I SDT=(9999999-2700101)!(DIRECT=-1) D  Q
"RTN","LR7OGM",121,0)
 . . . . . . D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",122,0)
 . . . . . . I SKIP S SKIP=0 D  Q
"RTN","LR7OGM",123,0)
 . . . . . . . D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",124,0)
 . . . . . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",125,0)
 . . . . . . . I $P(NEWOLD,U),$P(NEWOLD,U)'=IDT D  Q
"RTN","LR7OGM",126,0)
 . . . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=3
"RTN","LR7OGM",127,0)
 . . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=1
"RTN","LR7OGM",128,0)
 . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=3
"RTN","LR7OGM",129,0)
 . . . . . D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",130,0)
 . . . . . I SKIP S SKIP=0 D  Q
"RTN","LR7OGM",131,0)
 . . . . . . D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",132,0)
 . . . . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",133,0)
 . . . . . . I $P(NEWOLD,U),$P(NEWOLD,U)'=IDT D  Q
"RTN","LR7OGM",134,0)
 . . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=3
"RTN","LR7OGM",135,0)
 . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=1
"RTN","LR7OGM",136,0)
 . . . . . I $P(NEWOLD,U),$P(NEWOLD,U)'=IDT D  Q
"RTN","LR7OGM",137,0)
 . . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=2
"RTN","LR7OGM",138,0)
 . . . . . S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,9)=2
"RTN","LR7OGM",139,0)
 . . . . I MICROCHK'=1 D  Q:DONE
"RTN","LR7OGM",140,0)
 . . . . . D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",141,0)
 . . . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",142,0)
 . . . . . I FORMAT S MICROCHK=1
"RTN","LR7OGM",143,0)
 . . . . D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",144,0)
 . . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",145,0)
 . . I 'MNIDT D  Q  ; no micro since this date/time, only chem at this date/time
"RTN","LR7OGM",146,0)
 . . . S IDT=CNIDT
"RTN","LR7OGM",147,0)
 . . . I IDT'>EDT D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",148,0)
 . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",149,0)
 . . I 'CNIDT D  Q  ; no chem since this date/time, only micro at this date/time
"RTN","LR7OGM",150,0)
 . . . S IDT=MNIDT
"RTN","LR7OGM",151,0)
 . . . I IDT'>EDT D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",152,0)
 . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",153,0)
 . . I (DIRECT=1&(CNIDT<MNIDT))!(DIRECT=-1&(CNIDT>MNIDT)) D  Q  ;chem and micro data, chem is more recent
"RTN","LR7OGM",154,0)
 . . . S IDT=CNIDT
"RTN","LR7OGM",155,0)
 . . . I IDT'>EDT D CH^LR7OGMC(LRDFN,IDT,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",156,0)
 . . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",157,0)
 . . S IDT=MNIDT
"RTN","LR7OGM",158,0)
 . . I IDT'>EDT D MI^LR7OGMM(LRDFN,IDT,.MICROSUB,ALL,.OUTCNT,FORMAT,.DONE,.SKIP)
"RTN","LR7OGM",159,0)
 . . I SKIP S SKIP=0 Q
"RTN","LR7OGM",160,0)
 ;
"RTN","LR7OGM",161,0)
 I 'FORMAT,$D(^TMP("LRPLS",$J)) D PLS^LR7OGMP
"RTN","LR7OGM",162,0)
 ;
"RTN","LR7OGM",163,0)
 K ^TMP("LR7OG",$J),^TMP("LRPLS",$J),^TMP("LRPLS-ADDR",$J)
"RTN","LR7OGM",164,0)
 Q
"RTN","LR7OGMC")
0^146^B33832740
"RTN","LR7OGMC",1,0)
LR7OGMC ;DALOI/STAFF- Interim report rpc memo chem ;11/19/09  17:59
"RTN","LR7OGMC",2,0)
 ;;5.2;LAB SERVICE;**187,230,312,286,356,372,395,350**;Sep 27, 1994;Build 230
"RTN","LR7OGMC",3,0)
 ;
"RTN","LR7OGMC",4,0)
 ; sets lab data into ^TMP("LR7OG",$J,"TP"
"RTN","LR7OGMC",5,0)
 ; ^TMP("LR7OG",$J,"G")=dfn^pnm^lrdfn^age^sex^lrcw
"RTN","LR7OGMC",6,0)
 ; ^TMP("LR7OG",$J,"TMP",LR Subscript)=ifn of test from 60
"RTN","LR7OGMC",7,0)
 ; ^TMP("LR7OG",$J,"T",ifn 60)=^LAB(60,IFN,0)
"RTN","LR7OGMC",8,0)
 ; ^TMP("LR7OG",$J,"TP",collect date/time)=zero node from data
"RTN","LR7OGMC",9,0)
 ; ^TMP("LR7OG",$J,"TP",collect date/time,printorder)=test#^name^printname^^printcode^dataname^result^flag^units^range^performing site
"RTN","LR7OGMC",10,0)
 ; ^TMP("LR7OG",$J,"TP",collect date/time,printorder,#)=interpretation
"RTN","LR7OGMC",11,0)
 ; ^TMP("LR7OG",$J,"TP",collect date/time,"C",#)=comment
"RTN","LR7OGMC",12,0)
 ; ALL = 1 when coming from INTERIMG^LR7OGM (Most Recent)
"RTN","LR7OGMC",13,0)
 ;
"RTN","LR7OGMC",14,0)
 ;
"RTN","LR7OGMC",15,0)
CH(LRDFN,IDT,ALL,OUTCNT,FORMAT,DONE,SKIP) ; from LR7OGM
"RTN","LR7OGMC",16,0)
 N ACC,AREA,ACDT,CDT,CHSUB,CMNT,GOTNP,INTP,LABSUB,LRAAT,LRAD,NUM,PNODE
"RTN","LR7OGMC",17,0)
 N PORDER,SPEC,TCNT,TESTNUM,TESTSUB,UID,ZERO
"RTN","LR7OGMC",18,0)
 ;
"RTN","LR7OGMC",19,0)
 S GOTNP=0,ZERO=$G(^LR(LRDFN,"CH",IDT,0)),UID=$P($G(^("ORU")),"^")
"RTN","LR7OGMC",20,0)
 I UID'="" S UID=$$CHECKUID^LRWU4(UID)
"RTN","LR7OGMC",21,0)
 S AREA=$P(UID,"^",2),ACDT=$P(UID,"^",3),NUM=$P(UID,"^",4)
"RTN","LR7OGMC",22,0)
 S CDT=+ZERO,LABSUB="CH",TCNT=0,SPEC=$P(ZERO,U,5)
"RTN","LR7OGMC",23,0)
 ;
"RTN","LR7OGMC",24,0)
 D GETNP ;Check for NP comments
"RTN","LR7OGMC",25,0)
 I FORMAT,GOTNP S SKIP=1 Q
"RTN","LR7OGMC",26,0)
 I GOTNP,'$P(ZERO,U,3) D  Q
"RTN","LR7OGMC",27,0)
 . D ACC:UID
"RTN","LR7OGMC",28,0)
 . I $O(^TMP("LR7OG",$J,"TP",CDT,0)) K:FORMAT ^TMP("LR7OG",$J,"TP",CDT) D CHKNP Q
"RTN","LR7OGMC",29,0)
 ;
"RTN","LR7OGMC",30,0)
 D ACC:UID,VER
"RTN","LR7OGMC",31,0)
 I '$O(^TMP("LR7OG",$J,"TP",CDT,0)) S SKIP=1 Q
"RTN","LR7OGMC",32,0)
 I '$O(^LR(LRDFN,"CH",IDT,1)) D CHKNP
"RTN","LR7OGMC",33,0)
 ;
"RTN","LR7OGMC",34,0)
 I FORMAT D
"RTN","LR7OGMC",35,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="0^CH^"_(9999999-IDT)
"RTN","LR7OGMC",36,0)
 . S OUTCNT=OUTCNT+1,DONE=1
"RTN","LR7OGMC",37,0)
 . I 'GOTNP D GRID^LR7OGMG(.OUTCNT)
"RTN","LR7OGMC",38,0)
 ;
"RTN","LR7OGMC",39,0)
 I 'FORMAT D PRINT^LR7OGMP(.OUTCNT)
"RTN","LR7OGMC",40,0)
 ;
"RTN","LR7OGMC",41,0)
 K ^TMP("LR7OG",$J,"TP")
"RTN","LR7OGMC",42,0)
 ;
"RTN","LR7OGMC",43,0)
 Q
"RTN","LR7OGMC",44,0)
 ;
"RTN","LR7OGMC",45,0)
 ;
"RTN","LR7OGMC",46,0)
ACC ;Check Accession
"RTN","LR7OGMC",47,0)
 N ANODE,X0,LRODT,LRSN,LROD0,LROD1,X,STATUS,LROS
"RTN","LR7OGMC",48,0)
 ;
"RTN","LR7OGMC",49,0)
 K ^TMP("LR7OG",$J,"ACC")
"RTN","LR7OGMC",50,0)
 ;
"RTN","LR7OGMC",51,0)
 I '$D(^LRO(68,+AREA,1,+ACDT,1,+NUM)) Q
"RTN","LR7OGMC",52,0)
 ;
"RTN","LR7OGMC",53,0)
 S X0=$G(^LRO(68,+AREA,1,+ACDT,1,+NUM,0)),LRODT=$P(X0,"^",4),LRSN=$P(X0,"^",5),LROD0=$G(^LRO(69,+LRODT,1,LRSN,0)),LROD1=$G(^(1))
"RTN","LR7OGMC",54,0)
 ;
"RTN","LR7OGMC",55,0)
 S TESTNUM=0
"RTN","LR7OGMC",56,0)
 F  S TESTNUM=$O(^LRO(68,+AREA,1,+ACDT,1,+NUM,4,TESTNUM)) Q:'TESTNUM  S ANODE=^(TESTNUM,0) D
"RTN","LR7OGMC",57,0)
 . I $P(ANODE,U,6)'="*Not Performed" Q:$P(ANODE,U,5)  ;complete date
"RTN","LR7OGMC",58,0)
 . I FORMAT,$P(ANODE,U,6)="*Not Performed" Q  ;Don't show NP'd results on Most Recent Report
"RTN","LR7OGMC",59,0)
 . I 'ALL,'$D(^TMP("LR7OG",$J,"T",TESTNUM)),'$D(TESTS(TESTNUM)) Q  ;Selected test not in accession
"RTN","LR7OGMC",60,0)
 . I TESTNUM'=$P(ANODE,"^",9),$P($G(^LRO(68,+AREA,1,+ACDT,1,+NUM,4,+$P(ANODE,"^",9),0)),"^",5) Q  ;complete date on parent
"RTN","LR7OGMC",61,0)
 . S ^TMP("LR7OG",$J,"ACC",TESTNUM)=ANODE
"RTN","LR7OGMC",62,0)
 ;
"RTN","LR7OGMC",63,0)
 I '$O(^TMP("LR7OG",$J,"ACC",0)) Q
"RTN","LR7OGMC",64,0)
 ;
"RTN","LR7OGMC",65,0)
 S TESTNUM=0
"RTN","LR7OGMC",66,0)
 F  S TESTNUM=$O(^TMP("LR7OG",$J,"ACC",TESTNUM)) Q:'TESTNUM  S ANODE=^(TESTNUM) D
"RTN","LR7OGMC",67,0)
 . Q:'$D(^LAB(60,TESTNUM,.1))  S PNODE=^(.1) I '("BO"[$P($G(^(0)),U,3)) Q
"RTN","LR7OGMC",68,0)
 . S PORDER=$P(PNODE,U,6),PORDER=$S(PORDER:PORDER,1:1/1000000)
"RTN","LR7OGMC",69,0)
 . F  Q:'$D(^TMP("LR7OG",$J,"TP",CDT,PORDER))  Q:TESTNUM=+^(PORDER)  S PORDER=PORDER+1
"RTN","LR7OGMC",70,0)
 . I $D(^TMP("LR7OG",$J,"TP",CDT,PORDER)) Q
"RTN","LR7OGMC",71,0)
 . S LROS="Collected - Specimen In Lab"
"RTN","LR7OGMC",72,0)
 . I LROD1'="" S X=$P(LROD1,U,4),LROS=$S(X="C":"Collected - Specimen In Lab",X="U":"Uncollected, cancelled",1:"On Collection List")
"RTN","LR7OGMC",73,0)
 . S STATUS=$S($P(ANODE,"^",6)="*Not Performed":"Test Not Performed",1:LROS)
"RTN","LR7OGMC",74,0)
 . S ^TMP("LR7OG",$J,"TP",CDT,PORDER)=TESTNUM_U_$P(^LAB(60,TESTNUM,0),U)_U_$P(PNODE,U)_U_$P(PNODE,U,2)_U_"X"_U_$P(^(0),U,5)_U_STATUS
"RTN","LR7OGMC",75,0)
 . S TCNT=TCNT+1
"RTN","LR7OGMC",76,0)
 ;
"RTN","LR7OGMC",77,0)
 K ^TMP("LR7OG",$J,"ACC")
"RTN","LR7OGMC",78,0)
 I TCNT S ^TMP("LR7OG",$J,"TP",CDT)=ZERO
"RTN","LR7OGMC",79,0)
 ;
"RTN","LR7OGMC",80,0)
 Q
"RTN","LR7OGMC",81,0)
 ;
"RTN","LR7OGMC",82,0)
 ;
"RTN","LR7OGMC",83,0)
VER ; Check Verified Results
"RTN","LR7OGMC",84,0)
 Q:'$P(ZERO,U,3)
"RTN","LR7OGMC",85,0)
 ;
"RTN","LR7OGMC",86,0)
 I ALL D
"RTN","LR7OGMC",87,0)
 . S TESTSUB=1
"RTN","LR7OGMC",88,0)
 . F  S TESTSUB=$O(^LR(LRDFN,"CH",IDT,TESTSUB)) Q:TESTSUB<1  S TESTNUM=$O(^LAB(60,"C","CH;"_TESTSUB_";1",0)) D CHSETUP
"RTN","LR7OGMC",89,0)
 ;
"RTN","LR7OGMC",90,0)
 I 'ALL D
"RTN","LR7OGMC",91,0)
 . S TESTSUB=1
"RTN","LR7OGMC",92,0)
 . F  S TESTSUB=$O(^TMP("LR7OG",$J,"TMP",TESTSUB)) Q:TESTSUB<1  S TESTNUM=+^(TESTSUB) D CHSETUP
"RTN","LR7OGMC",93,0)
 ;
"RTN","LR7OGMC",94,0)
 I TCNT D
"RTN","LR7OGMC",95,0)
 . S ^TMP("LR7OG",$J,"TP",CDT)=ZERO,CMNT=0
"RTN","LR7OGMC",96,0)
 . F  S CMNT=+$O(^LR(LRDFN,LABSUB,IDT,1,CMNT)) Q:CMNT<1  S ^TMP("LR7OG",$J,"TP",CDT,"C",CMNT)=^(CMNT,0) S TCNT=TCNT+1
"RTN","LR7OGMC",97,0)
 Q
"RTN","LR7OGMC",98,0)
 ;
"RTN","LR7OGMC",99,0)
 ;
"RTN","LR7OGMC",100,0)
CHSETUP ; within scope of CH
"RTN","LR7OGMC",101,0)
 ;
"RTN","LR7OGMC",102,0)
 N LRX
"RTN","LR7OGMC",103,0)
 I 'TESTNUM Q
"RTN","LR7OGMC",104,0)
 Q:'$D(^LAB(60,TESTNUM,.1))  S PNODE=^(.1) I '("BO"[$P($G(^(0)),U,3)) Q
"RTN","LR7OGMC",105,0)
 Q:'$D(^LR(LRDFN,LABSUB,IDT,TESTSUB))  Q:'$L($P(^(TESTSUB),U))
"RTN","LR7OGMC",106,0)
 ;
"RTN","LR7OGMC",107,0)
 S PORDER=$P(PNODE,U,6),PORDER=$S(PORDER:PORDER,1:TESTSUB/1000000)
"RTN","LR7OGMC",108,0)
 F  Q:'$D(^TMP("LR7OG",$J,"TP",CDT,PORDER))  Q:TESTNUM=+^(PORDER)  S PORDER=PORDER+1
"RTN","LR7OGMC",109,0)
 ;
"RTN","LR7OGMC",110,0)
 I $D(^TMP("LR7OG",$J,"TP",CDT,PORDER)) Q
"RTN","LR7OGMC",111,0)
 ;
"RTN","LR7OGMC",112,0)
 S LRX=$$TSTRES^LRRPU(LRDFN,LABSUB,IDT,TESTSUB,TESTNUM)
"RTN","LR7OGMC",113,0)
 S ^TMP("LR7OG",$J,"TP",CDT,PORDER)=TESTNUM_U_$P(^LAB(60,TESTNUM,0),U)_U_$P(PNODE,U)_U_$P(PNODE,U,2)_U_$P(PNODE,U,3)_U_$P(^(0),U,5)_U_$P(LRX,U)_U_$P(LRX,U,2)_U_$P(LRX,U,5)_U_$$EN^LRLRRVF($P(LRX,U,3),$P(LRX,U,4))_U_$P(LRX,U,6)
"RTN","LR7OGMC",114,0)
 ;
"RTN","LR7OGMC",115,0)
 ; Save performing lab ien in list
"RTN","LR7OGMC",116,0)
 I $P(LRX,U,6) S ^TMP("LRPLS",$J,$P(LRX,U,6))=""
"RTN","LR7OGMC",117,0)
 ;
"RTN","LR7OGMC",118,0)
 S TCNT=TCNT+1
"RTN","LR7OGMC",119,0)
 I $D(^LAB(60,TESTNUM,1,SPEC,1,0)) D
"RTN","LR7OGMC",120,0)
 . S INTP=0
"RTN","LR7OGMC",121,0)
 . F  S INTP=+$O(^LAB(60,TESTNUM,1,SPEC,1,INTP)) Q:INTP<1  D
"RTN","LR7OGMC",122,0)
 . . S ^TMP("LR7OG",$J,"TP",CDT,PORDER,INTP)=^(INTP,0)
"RTN","LR7OGMC",123,0)
 . . S TCNT=TCNT+1
"RTN","LR7OGMC",124,0)
 Q
"RTN","LR7OGMC",125,0)
 ;
"RTN","LR7OGMC",126,0)
 ;
"RTN","LR7OGMC",127,0)
CMT ; Retrieve specimen comments
"RTN","LR7OGMC",128,0)
 ;
"RTN","LR7OGMC",129,0)
 S ^TMP("LR7OG",$J,"TP",CDT)=ZERO,CMNT=0
"RTN","LR7OGMC",130,0)
 F  S CMNT=+$O(^LR(LRDFN,LABSUB,IDT,1,CMNT)) Q:CMNT<1  S ^TMP("LR7OG",$J,"TP",CDT,"C",CMNT)=^(CMNT,0) S TCNT=TCNT+1
"RTN","LR7OGMC",131,0)
 ;
"RTN","LR7OGMC",132,0)
 Q
"RTN","LR7OGMC",133,0)
 ;
"RTN","LR7OGMC",134,0)
 ;
"RTN","LR7OGMC",135,0)
CHKNP ; Check for NP comments and no verified results.
"RTN","LR7OGMC",136,0)
 ;
"RTN","LR7OGMC",137,0)
 N LRCAN,X
"RTN","LR7OGMC",138,0)
 S LRCAN=0
"RTN","LR7OGMC",139,0)
 F  S LRCAN=+$O(^LR(LRDFN,"CH",IDT,1,LRCAN)) Q:LRCAN<1  S X=^(LRCAN,0) Q:(($E(X)="*")&(X["Not Performed:"))
"RTN","LR7OGMC",140,0)
 ;
"RTN","LR7OGMC",141,0)
 ; Print if cancel comment and no unverified results.
"RTN","LR7OGMC",142,0)
 I LRCAN<1 Q
"RTN","LR7OGMC",143,0)
 ;
"RTN","LR7OGMC",144,0)
 D CMT
"RTN","LR7OGMC",145,0)
 ;
"RTN","LR7OGMC",146,0)
 I 'FORMAT D PRINT^LR7OGMP(.OUTCNT)
"RTN","LR7OGMC",147,0)
 K ^TMP("LR7OG",$J,"TP")
"RTN","LR7OGMC",148,0)
 Q
"RTN","LR7OGMC",149,0)
 ;
"RTN","LR7OGMC",150,0)
 ;
"RTN","LR7OGMC",151,0)
GETNP ;Set NP flag (Not Performed)
"RTN","LR7OGMC",152,0)
 N LRCAN,X
"RTN","LR7OGMC",153,0)
 S LRCAN=0
"RTN","LR7OGMC",154,0)
 F  S LRCAN=+$O(^LR(LRDFN,"CH",IDT,1,LRCAN)) Q:LRCAN<1  S X=^(LRCAN,0) Q:(($E(X)="*")&(X["Not Performed:"))
"RTN","LR7OGMC",155,0)
 Q:LRCAN<1
"RTN","LR7OGMC",156,0)
 I $G(FORMAT) Q:$O(^LR(LRDFN,"CH",IDT,1))
"RTN","LR7OGMC",157,0)
 S GOTNP=1
"RTN","LR7OGMC",158,0)
 Q
"RTN","LR7OGMG")
0^21^B17064297
"RTN","LR7OGMG",1,0)
LR7OGMG ;DALOI/STAFF- Interim report rpc memo grid ;11/20/09  10:35
"RTN","LR7OGMG",2,0)
 ;;5.2;LAB SERVICE;**187,230,286,290,331,364,395,350**;Sep 27, 1994;Build 230
"RTN","LR7OGMG",3,0)
 ;
"RTN","LR7OGMG",4,0)
GRID(OUTCNT) ; from LR7OGMC
"RTN","LR7OGMG",5,0)
 N ACC,AGE,CDT,CMNT,DATA,DOC,FLAG,IDT,INTP,LINE,LRCW,LRX,MPLS,PLS,PORDER,PRNTCODE,RANGE,SEX,SPEC,SUB,TCNT,TESTNAME,TESTNUM
"RTN","LR7OGMG",6,0)
 N UNITS,VALUE,X,ZERO,INEXACT,DISPDATE
"RTN","LR7OGMG",7,0)
 ; the variables AGE, SEX, LRCW, and X are used withing the lab's print codes and ref ranges
"RTN","LR7OGMG",8,0)
 K ^TMP("LRMPLS",$J)
"RTN","LR7OGMG",9,0)
 S AGE=$P(^TMP("LR7OG",$J,"G"),U,4),SEX=$P(^("G"),U,5),LRCW=$P(^("G"),U,6)
"RTN","LR7OGMG",10,0)
 S CDT=+$O(^TMP("LR7OG",$J,"TP",0)) Q:'CDT
"RTN","LR7OGMG",11,0)
 S IDT=9999999-CDT
"RTN","LR7OGMG",12,0)
 S ZERO=$S($D(^TMP("LR7OG",$J,"TP",CDT))#2:^(CDT),1:"")
"RTN","LR7OGMG",13,0)
 S SPEC=+$P(ZERO,U,5)
"RTN","LR7OGMG",14,0)
 S INEXACT=$P(ZERO,U,2),DISPDATE=$S(INEXACT:CDT\1,1:CDT)
"RTN","LR7OGMG",15,0)
 S DOC=$$NAME^LR7OGMP(+$P(ZERO,U,10))
"RTN","LR7OGMG",16,0)
 S ACC=$P(ZERO,U,6)
"RTN","LR7OGMG",17,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,4,6)=SPEC_U_$P($G(^LAB(61,SPEC,0)),U)_U_ACC_U_DOC
"RTN","LR7OGMG",18,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U,10)=DISPDATE
"RTN","LR7OGMG",19,0)
 S (TCNT,MPLS,PORDER,PLS)=0
"RTN","LR7OGMG",20,0)
 S PLS=$O(^TMP("LRPLS",$J,0))
"RTN","LR7OGMG",21,0)
 I $O(^TMP("LRPLS",$J,PLS)) S MPLS=1 ; multiple performing labs
"RTN","LR7OGMG",22,0)
 F  S PORDER=$O(^TMP("LR7OG",$J,"TP",CDT,PORDER)) Q:PORDER'>0  S DATA=^(PORDER) D
"RTN","LR7OGMG",23,0)
 . I $P(DATA,U,7)="" Q
"RTN","LR7OGMG",24,0)
 . S TCNT=TCNT+1
"RTN","LR7OGMG",25,0)
 . S TESTNUM=+DATA,TESTNAME=$P(DATA,U,2),PRNTCODE=$P(DATA,U,5),SUB=$P(DATA,U,6),FLAG=$P(DATA,U,8),X=$P(DATA,U,7),UNITS=$P(DATA,U,9),RANGE=$P(DATA,U,10),PLS=$P(DATA,U,11)
"RTN","LR7OGMG",26,0)
 . I MPLS,PLS S ^TMP("LRMPLS",$J,PLS,TESTNAME)=""
"RTN","LR7OGMG",27,0)
 . I PRNTCODE="" S VALUE=$J(X,8)
"RTN","LR7OGMG",28,0)
 . E  S @("VALUE="_PRNTCODE)
"RTN","LR7OGMG",29,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=TESTNUM_U_TESTNAME_U_VALUE_U_FLAG_U_UNITS_U_RANGE
"RTN","LR7OGMG",30,0)
 . S OUTCNT=OUTCNT+1
"RTN","LR7OGMG",31,0)
 S $P(^TMP("LR7OGX",$J,"OUTPUT",1),U)=TCNT ;TCNT must be correct to display all values
"RTN","LR7OGMG",32,0)
 ;
"RTN","LR7OGMG",33,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="Report Released Date/Time: "_$$FMTE^XLFDT($P(ZERO,"^",3),"M"),OUTCNT=OUTCNT+1
"RTN","LR7OGMG",34,0)
 S PORDER=0
"RTN","LR7OGMG",35,0)
 F  S PORDER=$O(^TMP("LR7OG",$J,"TP",CDT,PORDER)) Q:PORDER'>0  S DATA=^(PORDER) D
"RTN","LR7OGMG",36,0)
 . I $O(^TMP("LR7OG",$J,"TP",CDT,PORDER,0))>0 D
"RTN","LR7OGMG",37,0)
 . . S TESTNAME=$P(DATA,U,3)
"RTN","LR7OGMG",38,0)
 . . S INTP=0
"RTN","LR7OGMG",39,0)
 . . F  S INTP=+$O(^TMP("LR7OG",$J,"TP",CDT,PORDER,INTP)) Q:INTP<1  D
"RTN","LR7OGMG",40,0)
 . . . S LINE=TESTNAME_" Eval: "_^TMP("LR7OG",$J,"TP",CDT,PORDER,INTP)
"RTN","LR7OGMG",41,0)
 . . . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE
"RTN","LR7OGMG",42,0)
 . . . S OUTCNT=OUTCNT+1
"RTN","LR7OGMG",43,0)
 ;
"RTN","LR7OGMG",44,0)
 I $D(^TMP("LR7OG",$J,"TP",CDT,"C")) D
"RTN","LR7OGMG",45,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="Comment: "
"RTN","LR7OGMG",46,0)
 . S OUTCNT=OUTCNT+1,CMNT=0
"RTN","LR7OGMG",47,0)
 . F  S CMNT=+$O(^TMP("LR7OG",$J,"TP",CDT,"C",CMNT)) Q:CMNT<1  S LINE=^(CMNT) D
"RTN","LR7OGMG",48,0)
 . . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="   "_LINE
"RTN","LR7OGMG",49,0)
 . . S OUTCNT=OUTCNT+1
"RTN","LR7OGMG",50,0)
 ;
"RTN","LR7OGMG",51,0)
 ; Display reporting lab
"RTN","LR7OGMG",52,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OGMG",53,0)
 . S LRX=+$G(^LR(LRDFN,"CH",IDT,"RF"))
"RTN","LR7OGMG",54,0)
 . I LRX D RL(LRX)
"RTN","LR7OGMG",55,0)
 ;
"RTN","LR7OGMG",56,0)
 D PLS
"RTN","LR7OGMG",57,0)
 ;
"RTN","LR7OGMG",58,0)
 Q
"RTN","LR7OGMG",59,0)
 ;
"RTN","LR7OGMG",60,0)
 ;
"RTN","LR7OGMG",61,0)
RL(LRX) ; Set reporting lab into TMP global
"RTN","LR7OGMG",62,0)
 ; Call with LRX = IEN of entry in file #4
"RTN","LR7OGMG",63,0)
 ;
"RTN","LR7OGMG",64,0)
 N LINE
"RTN","LR7OGMG",65,0)
 S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OGMG",66,0)
 D SETLINE^LR7OGMP(" ",.OUTCNT)
"RTN","LR7OGMG",67,0)
 D SETLINE^LR7OGMP("Reporting Lab: "_$P(LINE,"^"),.OUTCNT)
"RTN","LR7OGMG",68,0)
 D SETLINE^LR7OGMP("               "_$P(LINE,"^",2),.OUTCNT)
"RTN","LR7OGMG",69,0)
 D SETLINE^LR7OGMP(" ",.OUTCNT)
"RTN","LR7OGMG",70,0)
 Q
"RTN","LR7OGMG",71,0)
 ;
"RTN","LR7OGMG",72,0)
 ;
"RTN","LR7OGMG",73,0)
PLS ; List performing laboratories
"RTN","LR7OGMG",74,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OGMG",75,0)
 ;
"RTN","LR7OGMG",76,0)
 N CNT,LINE,LLEN,LRPLS,TESTNAME,X
"RTN","LR7OGMG",77,0)
 S (CNT,LRPLS)=0
"RTN","LR7OGMG",78,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OGMG",79,0)
 . I CNT S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=" ",OUTCNT=OUTCNT+1
"RTN","LR7OGMG",80,0)
 . I $D(^TMP("LRMPLS",$J,LRPLS)) D
"RTN","LR7OGMG",81,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OGMG",82,0)
 . . F  S TESTNAME=$O(^TMP("LRMPLS",$J,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OGMG",83,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OGMG",84,0)
 . . . I (LLEN+X)>240 S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE,OUTCNT=OUTCNT+1,LINE="",LLEN=0
"RTN","LR7OGMG",85,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OGMG",86,0)
 . . I LINE'="" S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)=LINE,OUTCNT=OUTCNT+1
"RTN","LR7OGMG",87,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OGMG",88,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="Performing Lab: "_$P(LINE,"^"),OUTCNT=OUTCNT+1,CNT=CNT+1
"RTN","LR7OGMG",89,0)
 . S ^TMP("LR7OGX",$J,"OUTPUT",OUTCNT)="                "_$P(LINE,"^",2),OUTCNT=OUTCNT+1
"RTN","LR7OGMG",90,0)
 ;
"RTN","LR7OGMG",91,0)
 K ^TMP("LRPLS",$J),^TMP("LRMPLS",$J)
"RTN","LR7OGMG",92,0)
 Q
"RTN","LR7OGMP")
0^19^B17939589
"RTN","LR7OGMP",1,0)
LR7OGMP ;DALOI/STAFF- Interim report rpc memo print ;11/20/09  10:36
"RTN","LR7OGMP",2,0)
 ;;5.2;LAB SERVICE;**187,246,282,286,344,395,350**;Sep 27, 1994;Build 230
"RTN","LR7OGMP",3,0)
 ;
"RTN","LR7OGMP",4,0)
PRINT(OUTCNT) ; from LR7OGMC
"RTN","LR7OGMP",5,0)
 N ACC,AGE,CDT,CMNT,DATA,DOC,FLAG,HIGH,IDT,INTP,LINE,LOW,LRCW,LRDRL,LREAL,LRX,PORDER,PRNTCODE,RANGE,REFHIGH,REFLOW,SEX,SITE,SPEC,SUB,TESTNUM
"RTN","LR7OGMP",6,0)
 N TESTSPEC,THER,THERHIGH,THERLOW,UNITS,VALUE,X,ZERO
"RTN","LR7OGMP",7,0)
 ;
"RTN","LR7OGMP",8,0)
 ; the variables AGE, SEX, LRCW, and X are used within the lab's print codes and ref ranges
"RTN","LR7OGMP",9,0)
 S AGE=$P(^TMP("LR7OG",$J,"G"),U,4),SEX=$P(^("G"),U,5),LRCW=$P(^("G"),U,6)
"RTN","LR7OGMP",10,0)
 ;
"RTN","LR7OGMP",11,0)
 ; Flag to determine if reporting laboratory is printed on report
"RTN","LR7OGMP",12,0)
 S LRDRL=$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2
"RTN","LR7OGMP",13,0)
 ;
"RTN","LR7OGMP",14,0)
 S CDT=0
"RTN","LR7OGMP",15,0)
 F  S CDT=$O(^TMP("LR7OG",$J,"TP",CDT)) Q:CDT=""  D
"RTN","LR7OGMP",16,0)
 . S IDT=9999999-CDT
"RTN","LR7OGMP",17,0)
 . S ZERO=$S($D(^TMP("LR7OG",$J,"TP",CDT))#2:^(CDT),1:"")
"RTN","LR7OGMP",18,0)
 . S SPEC=+$P(ZERO,U,5)
"RTN","LR7OGMP",19,0)
 . S DOC=$$NAME(+$P(ZERO,U,10)),LREAL=+$P(ZERO,U,2)
"RTN","LR7OGMP",20,0)
 . D SETLINE("",.OUTCNT)
"RTN","LR7OGMP",21,0)
 . I LRDRL D RL
"RTN","LR7OGMP",22,0)
 . S LINE="Report Released Date/Time: "
"RTN","LR7OGMP",23,0)
 . I $P(ZERO,"^",3) S LINE=LINE_$$FMTE^XLFDT($P(ZERO,"^",3),"M")
"RTN","LR7OGMP",24,0)
 . D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",25,0)
 . D SETLINE("Provider: "_DOC,.OUTCNT)
"RTN","LR7OGMP",26,0)
 . S LINE="  Specimen: "_$P($G(^LAB(61,SPEC,0),"<no specimen on file>"),U)_"."
"RTN","LR7OGMP",27,0)
 . S ACC=$P(ZERO,U,6)
"RTN","LR7OGMP",28,0)
 . S LINE=$$SETSTR^VALM1(" "_ACC,LINE,30,1+$L(ACC))
"RTN","LR7OGMP",29,0)
 . D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",30,0)
 . D SETLINE("    Specimen Collection Date: "_$$LRUDT^LR7OSUM6(CDT,LREAL),.OUTCNT)
"RTN","LR7OGMP",31,0)
 . D SETLINE("      Test name                Result    units      Ref.   range   Site Code",.OUTCNT)
"RTN","LR7OGMP",32,0)
 . S PORDER=0
"RTN","LR7OGMP",33,0)
 . F  S PORDER=$O(^TMP("LR7OG",$J,"TP",CDT,PORDER)) Q:PORDER'>0  S DATA=^(PORDER) D
"RTN","LR7OGMP",34,0)
 . . I $P(DATA,U,7)="" Q
"RTN","LR7OGMP",35,0)
 . . S TESTNUM=+DATA,PRNTCODE=$P(DATA,U,5),SUB=$P(DATA,U,6),FLAG=$P(DATA,U,8),X=$P(DATA,U,7),UNITS=$P(DATA,U,9),RANGE=$P(DATA,U,10),SITE=$P(DATA,U,11)
"RTN","LR7OGMP",36,0)
 . . S LOW=$P(RANGE,"-"),HIGH=$P(RANGE,"-",2),THER=$P(DATA,U,12)
"RTN","LR7OGMP",37,0)
 . . I $L($P(DATA,U,2))>28,$P(DATA,U,3)'="" S LINE=$P(DATA,U,3)
"RTN","LR7OGMP",38,0)
 . . E  S LINE=$E($P(DATA,U,2),1,28)
"RTN","LR7OGMP",39,0)
 . . S LINE=$$SETSTR^VALM1("",LINE,28,0)
"RTN","LR7OGMP",40,0)
 . . I PRNTCODE="" S LINE=LINE_$J(X,8)
"RTN","LR7OGMP",41,0)
 . . E  S @("VALUE="_PRNTCODE),LINE=LINE_VALUE
"RTN","LR7OGMP",42,0)
 . . S LINE=LINE_" "_FLAG
"RTN","LR7OGMP",43,0)
 . . I $L(LINE)>38 D SETLINE(LINE,.OUTCNT) S LINE=""
"RTN","LR7OGMP",44,0)
 . . I UNITS'="" S LINE=$$SETSTR^VALM1("  "_UNITS,LINE,39,2+$L(UNITS))
"RTN","LR7OGMP",45,0)
 . . S LRX=RANGE
"RTN","LR7OGMP",46,0)
 . . I LRX'="" S LINE=$$SETSTR^VALM1(LRX,LINE,52,$L(LRX))
"RTN","LR7OGMP",47,0)
 . . I $L(LINE)>67,SITE D SETLINE(LINE,.OUTCNT) S LINE=""
"RTN","LR7OGMP",48,0)
 . . I SITE S LINE=$$SETSTR^VALM1(" ["_SITE_"]",LINE,68,3+$L(SITE))
"RTN","LR7OGMP",49,0)
 . . I LINE'="" D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",50,0)
 . . I $O(^TMP("LR7OG",$J,"TP",CDT,PORDER,0))>0 D
"RTN","LR7OGMP",51,0)
 . . . S INTP=0
"RTN","LR7OGMP",52,0)
 . . . F  S INTP=+$O(^TMP("LR7OG",$J,"TP",CDT,PORDER,INTP)) Q:INTP<1  D SETLINE("      Eval: "_^(INTP),.OUTCNT)
"RTN","LR7OGMP",53,0)
 . I $D(^TMP("LR7OG",$J,"TP",CDT,"C")) D
"RTN","LR7OGMP",54,0)
 . . S LINE="Comment: "
"RTN","LR7OGMP",55,0)
 . . S CMNT=0
"RTN","LR7OGMP",56,0)
 . . F  S CMNT=+$O(^TMP("LR7OG",$J,"TP",CDT,"C",CMNT)) Q:CMNT<1  S LINE=LINE_^(CMNT) D
"RTN","LR7OGMP",57,0)
 . . . D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",58,0)
 . . . I $O(^TMP("LR7OG",$J,"TP",CDT,"C",CMNT)) S LINE="        "
"RTN","LR7OGMP",59,0)
 . D SETLINE("===============================================================================",.OUTCNT)
"RTN","LR7OGMP",60,0)
 D SETLINE(" ",.OUTCNT)
"RTN","LR7OGMP",61,0)
 Q
"RTN","LR7OGMP",62,0)
 ;
"RTN","LR7OGMP",63,0)
 ;
"RTN","LR7OGMP",64,0)
SETLINE(LINE,CNT) ;
"RTN","LR7OGMP",65,0)
 S ^TMP("LR7OGX",$J,"OUTPUT",CNT)=LINE
"RTN","LR7OGMP",66,0)
 S CNT=CNT+1
"RTN","LR7OGMP",67,0)
 Q
"RTN","LR7OGMP",68,0)
 ;
"RTN","LR7OGMP",69,0)
 ;
"RTN","LR7OGMP",70,0)
NAME(X) ; $$(#) -> name
"RTN","LR7OGMP",71,0)
 N LRDOC
"RTN","LR7OGMP",72,0)
 D DOC^LRX
"RTN","LR7OGMP",73,0)
 Q LRDOC
"RTN","LR7OGMP",74,0)
 ;
"RTN","LR7OGMP",75,0)
 ;
"RTN","LR7OGMP",76,0)
DD(Y) ; $$(date/time) -> date/time format
"RTN","LR7OGMP",77,0)
 D DD^LRX
"RTN","LR7OGMP",78,0)
 Q Y
"RTN","LR7OGMP",79,0)
 ;
"RTN","LR7OGMP",80,0)
 ;
"RTN","LR7OGMP",81,0)
RL ; Display reporting lab
"RTN","LR7OGMP",82,0)
 N LRX
"RTN","LR7OGMP",83,0)
 S LRX=+$G(^LR(LRDFN,"CH",IDT,"RF"))
"RTN","LR7OGMP",84,0)
 I LRX D RL^LR7OGMG(LRX)
"RTN","LR7OGMP",85,0)
 Q
"RTN","LR7OGMP",86,0)
 ;
"RTN","LR7OGMP",87,0)
 ;
"RTN","LR7OGMP",88,0)
PFAC ; Print header with name of facility generating report.
"RTN","LR7OGMP",89,0)
 N LRI,LRPF
"RTN","LR7OGMP",90,0)
 D PFAC^LRRP1(DUZ(2),0,1,.LRPF)
"RTN","LR7OGMP",91,0)
 I $D(LRPF) D
"RTN","LR7OGMP",92,0)
 . S LRI=0
"RTN","LR7OGMP",93,0)
 . F  S LRI=$O(LRPF(LRI)) Q:'LRI  D SETLINE(LRPF(LRI),.OUTCNT)
"RTN","LR7OGMP",94,0)
 D SETLINE("As of: "_$$HTE^XLFDT($H,"1M"),.OUTCNT)
"RTN","LR7OGMP",95,0)
 D SETLINE(" ",.OUTCNT)
"RTN","LR7OGMP",96,0)
 Q
"RTN","LR7OGMP",97,0)
 ;
"RTN","LR7OGMP",98,0)
 ;
"RTN","LR7OGMP",99,0)
PLS ; List performing laboratories
"RTN","LR7OGMP",100,0)
 ;
"RTN","LR7OGMP",101,0)
 N LINE,LRPLS,X
"RTN","LR7OGMP",102,0)
 D SETLINE("Performing Lab Sites",.OUTCNT)
"RTN","LR7OGMP",103,0)
 S LRPLS=0
"RTN","LR7OGMP",104,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OGMP",105,0)
 . S LRPLS(0)=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OGMP",106,0)
 . S LINE=$$LJ^XLFSTR("["_LRPLS_"] ",8)_$P(LRPLS(0),"^")
"RTN","LR7OGMP",107,0)
 . D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",108,0)
 . S LINE=$$REPEAT^XLFSTR(" ",8)_$P(LRPLS(0),"^",2)
"RTN","LR7OGMP",109,0)
 . D SETLINE(LINE,.OUTCNT)
"RTN","LR7OGMP",110,0)
 ;
"RTN","LR7OGMP",111,0)
 D SETLINE("===============================================================================",.OUTCNT)
"RTN","LR7OGMP",112,0)
 ;
"RTN","LR7OGMP",113,0)
 K ^TMP("LRPLS",$J),^TMP("LRPLS-ADDR",$J)
"RTN","LR7OGMP",114,0)
 Q
"RTN","LR7OGMU")
0^186^B6947212
"RTN","LR7OGMU",1,0)
LR7OGMU ;DALOI/STAFF- Interim report rpc memo utility ;11/19/09  13:37
"RTN","LR7OGMU",2,0)
 ;;5.2;LAB SERVICE;**187,312,395,350**;Sep 27, 1994;Build 230
"RTN","LR7OGMU",3,0)
 ;
"RTN","LR7OGMU",4,0)
NEWOLD(Y,DFN) ; from ORWLRR
"RTN","LR7OGMU",5,0)
 N LRDFN
"RTN","LR7OGMU",6,0)
 D DEMO^LR7OGU(DFN,.LRDFN)
"RTN","LR7OGMU",7,0)
 S Y=$$NEWEST(LRDFN)_U_$$OLDEST(LRDFN)
"RTN","LR7OGMU",8,0)
 Q
"RTN","LR7OGMU",9,0)
 ;
"RTN","LR7OGMU",10,0)
 ;
"RTN","LR7OGMU",11,0)
NEWEST(LRDFN) ;
"RTN","LR7OGMU",12,0)
 N ACDT,ACOMP,ANODE,AREA,CHKTYP,FIRSTCH,FIRSTMI,GOTNP,IDT,NUM,TESTNUM,UID,ZERO
"RTN","LR7OGMU",13,0)
 S (FIRSTCH,FIRSTMI)=""
"RTN","LR7OGMU",14,0)
 S IDT=0
"RTN","LR7OGMU",15,0)
 F  S IDT=$O(^LR(LRDFN,"CH",IDT)) Q:IDT<1  S ZERO=^(IDT,0),UID=$P($G(^("ORU")),"^") D  Q:FIRSTCH
"RTN","LR7OGMU",16,0)
 . I $P(ZERO,U,3) S FIRSTCH=9999999-IDT Q
"RTN","LR7OGMU",17,0)
 . I UID'="" S UID=$$CHECKUID^LRWU4(UID) Q:'UID
"RTN","LR7OGMU",18,0)
 . I 'UID,$P(ZERO,U,3) Q
"RTN","LR7OGMU",19,0)
 . S GOTNP=0 D GETNP^LR7OGMC Q:GOTNP
"RTN","LR7OGMU",20,0)
 . S AREA=$P(UID,"^",2),ACDT=$P(UID,"^",3),NUM=$P(UID,"^",4)
"RTN","LR7OGMU",21,0)
 . I '$D(^LRO(68,+AREA,1,+ACDT,1,+NUM)) Q
"RTN","LR7OGMU",22,0)
 . S (TESTNUM,CHKTYP,ACOMP)=0
"RTN","LR7OGMU",23,0)
 . F  S TESTNUM=$O(^LRO(68,+AREA,1,+ACDT,1,+NUM,4,TESTNUM)) Q:'TESTNUM  S ANODE=^(TESTNUM,0) D
"RTN","LR7OGMU",24,0)
 . . Q:'$D(^LAB(60,TESTNUM,0))  I ("BO"[$P($G(^(0)),U,3)) S CHKTYP=1
"RTN","LR7OGMU",25,0)
 . . I '$P(ANODE,"^",5) S ACOMP=1
"RTN","LR7OGMU",26,0)
 . Q:'CHKTYP
"RTN","LR7OGMU",27,0)
 . Q:'ACOMP
"RTN","LR7OGMU",28,0)
 . S FIRSTCH=9999999-IDT
"RTN","LR7OGMU",29,0)
 ;
"RTN","LR7OGMU",30,0)
 S IDT=$O(^LR(LRDFN,"MI",0))
"RTN","LR7OGMU",31,0)
 I IDT>0 S FIRSTMI=9999999-IDT
"RTN","LR7OGMU",32,0)
 I FIRSTCH>FIRSTMI Q FIRSTCH
"RTN","LR7OGMU",33,0)
 I FIRSTCH'>FIRSTMI Q FIRSTMI
"RTN","LR7OGMU",34,0)
 Q ""
"RTN","LR7OGMU",35,0)
 ;
"RTN","LR7OGMU",36,0)
 ;
"RTN","LR7OGMU",37,0)
OLDEST(LRDFN) ;
"RTN","LR7OGMU",38,0)
 N ACDT,ACOMP,ANODE,AREA,CHKTYP,FIRSTCH,FIRSTMI,GOTNP,IDT,NUM,TESTNUM,UID,ZERO
"RTN","LR7OGMU",39,0)
 S (FIRSTCH,FIRSTMI)=""
"RTN","LR7OGMU",40,0)
 S IDT=""
"RTN","LR7OGMU",41,0)
 F  S IDT=$O(^LR(LRDFN,"CH",IDT),-1) Q:IDT<1  S ZERO=^(IDT,0),UID=$P($G(^("ORU")),"^") D  Q:FIRSTCH
"RTN","LR7OGMU",42,0)
 . I $P(ZERO,U,3) S FIRSTCH=9999999-IDT Q
"RTN","LR7OGMU",43,0)
 . I UID'="" S UID=$$CHECKUID^LRWU4(UID)
"RTN","LR7OGMU",44,0)
 . I 'UID,$P(ZERO,U,3) Q
"RTN","LR7OGMU",45,0)
 . S GOTNP=0 D GETNP^LR7OGMC Q:GOTNP
"RTN","LR7OGMU",46,0)
 . S AREA=$P(UID,"^",2),ACDT=$P(UID,"^",3),NUM=$P(UID,"^",4)
"RTN","LR7OGMU",47,0)
 . I '$D(^LRO(68,+AREA,1,+ACDT,1,+NUM)) Q
"RTN","LR7OGMU",48,0)
 . S (TESTNUM,CHKTYP,ACOMP)=0
"RTN","LR7OGMU",49,0)
 . F  S TESTNUM=$O(^LRO(68,+AREA,1,+ACDT,1,+NUM,4,TESTNUM)) Q:'TESTNUM  S ANODE=^(TESTNUM,0) D
"RTN","LR7OGMU",50,0)
 . . Q:'$D(^LAB(60,TESTNUM,0))  I ("BO"[$P($G(^(0)),U,3)) S CHKTYP=1
"RTN","LR7OGMU",51,0)
 . . I '$P(ANODE,"^",5) S ACOMP=1
"RTN","LR7OGMU",52,0)
 . Q:'CHKTYP
"RTN","LR7OGMU",53,0)
 . Q:'ACOMP
"RTN","LR7OGMU",54,0)
 . S FIRSTCH=9999999-IDT
"RTN","LR7OGMU",55,0)
 ;
"RTN","LR7OGMU",56,0)
 S IDT=$O(^LR(LRDFN,"MI",""),-1)
"RTN","LR7OGMU",57,0)
 I IDT>0 S FIRSTMI=9999999-IDT
"RTN","LR7OGMU",58,0)
 I FIRSTMI="" Q FIRSTCH
"RTN","LR7OGMU",59,0)
 I FIRSTCH="" Q FIRSTMI
"RTN","LR7OGMU",60,0)
 I FIRSTCH<FIRSTMI Q FIRSTCH
"RTN","LR7OGMU",61,0)
 I FIRSTCH'<FIRSTMI Q FIRSTMI
"RTN","LR7OGMU",62,0)
 Q ""
"RTN","LR7OMERG")
0^159^B51143327
"RTN","LR7OMERG",1,0)
LR7OMERG ;DALOI/STAFF-MERGE ACCESSION ;07/27/09  17:14
"RTN","LR7OMERG",2,0)
 ;;5.2;LAB SERVICE;**121,221,386,350**;Sep 27, 1994;Build 230
"RTN","LR7OMERG",3,0)
 ;
"RTN","LR7OMERG",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LR7OMERG",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LR7OMERG",6,0)
 ;
"RTN","LR7OMERG",7,0)
EN ;Merge 2 accessions together
"RTN","LR7OMERG",8,0)
 D END
"RTN","LR7OMERG",9,0)
 ;
"RTN","LR7OMERG",10,0)
EN1 ;
"RTN","LR7OMERG",11,0)
 S COMP=0,LRACC=1
"RTN","LR7OMERG",12,0)
 W !!,"Merge from..." D LRACC^LRTSTOUT Q:LRAN<1
"RTN","LR7OMERG",13,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 W !?5,"This is not a valid Accession number ",!,$C(7) G EN1
"RTN","LR7OMERG",14,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):DILOCKTM I '$T W !?5,"Someone else is editing this entry ",!,$C(7) G EN1
"RTN","LR7OMERG",15,0)
 ;
"RTN","LR7OMERG",16,0)
 S LRSS=$P(^LRO(68,LRAA,0),"^",2),(LRX1,X)=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRIDT1=$P($G(^(3)),"^",5),SPEC1=$O(^(5,0)),SPEC1=$G(^(SPEC1,0))
"RTN","LR7OMERG",17,0)
 S LRDFN=$P(X,U),LRAODT=$P(X,U,3),LR1ODT=$P(X,U,4),LR1SN=$P(X,U,5),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LR7OMERG",18,0)
 D PT^LRX
"RTN","LR7OMERG",19,0)
 W ?35,PNM,?65,SSN
"RTN","LR7OMERG",20,0)
 D WRITE(LRAA,LRAD,LRAN,+SPEC1,.COMP,.LRT1SAD)
"RTN","LR7OMERG",21,0)
 S LR1AA=LRAA,LR1AD=LRAD,LR1AN=LRAN
"RTN","LR7OMERG",22,0)
 ;
"RTN","LR7OMERG",23,0)
2 ;
"RTN","LR7OMERG",24,0)
 S LRACC=1 W !!,"Merge into..." D LRACC^LRTSTOUT I LRAN<1 D UL1 Q
"RTN","LR7OMERG",25,0)
 ;
"RTN","LR7OMERG",26,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 W !?5,"This is not a valid Accession number ",!,$C(7) G 2
"RTN","LR7OMERG",27,0)
 I LRAA=LR1AA,LRAD=LR1AD,LRAN=LR1AN W !!,$C(7),"Cannot merge into the same accession" G 2
"RTN","LR7OMERG",28,0)
 I $P(^LRO(68,LRAA,0),"^",2)'=LRSS W !!,$C(7),"Cannot merge a """_LRSS_""" accession into a """_$P(^(0),"^",2)_""" accession" G EN
"RTN","LR7OMERG",29,0)
 ;
"RTN","LR7OMERG",30,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):DILOCKTM I '$T W !?5,"Someone else is editing this entry ",!,$C(7) G 2
"RTN","LR7OMERG",31,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRORD=$G(^(.1)),LRIDT=$P($G(^(3)),"^",5),LRTOACC=$G(^(.1))_"/"_$G(^(.2)),SPEC=$O(^(5,0)),SPEC=$G(^(SPEC,0))
"RTN","LR7OMERG",32,0)
 S LRCCOM="*Merge to:"_LRTOACC,LRNATURE="^^^6^SERVICE CORRECTION^99ORR"
"RTN","LR7OMERG",33,0)
 ;
"RTN","LR7OMERG",34,0)
 S LRDFN=$P(X,U),LRAODT=$P(X,U,3),LRODT=$P(X,U,4),LRSN=$P(X,U,5),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W ?35,PNM,?65,SSN
"RTN","LR7OMERG",35,0)
 I +X'=+LRX1 W !!,$C(7),"Cannot merge accessions for different patients!" D UL2 G EN
"RTN","LR7OMERG",36,0)
 ;
"RTN","LR7OMERG",37,0)
 D WRITE(LRAA,LRAD,LRAN,+SPEC,.COMP,.LRTSAD)
"RTN","LR7OMERG",38,0)
 ;
"RTN","LR7OMERG",39,0)
 I +SPEC'=+SPEC1 W !!,$C(7),"Cannot merge accessions with different specimens" D UL2 G EN
"RTN","LR7OMERG",40,0)
 I COMP W !!,$C(7),"Cannot merge accessions with completed results" D UL2 G EN
"RTN","LR7OMERG",41,0)
 ;
"RTN","LR7OMERG",42,0)
 W !
"RTN","LR7OMERG",43,0)
 S I=0
"RTN","LR7OMERG",44,0)
 F  S I=$O(^LRO(68,LR1AA,1,LR1AD,1,LR1AN,4,I)) Q:I<1  D
"RTN","LR7OMERG",45,0)
 . S J=$P($G(^LAB(60,I,8,+DUZ(2),0)),U,2)
"RTN","LR7OMERG",46,0)
 . I J,J'=LRAA W !,"<<"_$P(^LAB(60,I,0),"^")_" normally belongs to accession area: "_$P(^LRO(68,J,0),"^")_">>",$C(7)
"RTN","LR7OMERG",47,0)
 ;
"RTN","LR7OMERG",48,0)
 ;
"RTN","LR7OMERG",49,0)
OK ;
"RTN","LR7OMERG",50,0)
 S %=2 W !!,"Ok to merge" D YN^DICN
"RTN","LR7OMERG",51,0)
 I %=0 W !!,"Enter 'Yes' to merge these accessions, 'No' to abort." G OK
"RTN","LR7OMERG",52,0)
 I %'=1 W !!,"NOTHING MERGED!",! D UL1,UL2 Q
"RTN","LR7OMERG",53,0)
 ;
"RTN","LR7OMERG",54,0)
 N LRLFTOVR,LRORDTYP,LRTSORU,LRNLT,LRII,URG
"RTN","LR7OMERG",55,0)
 ; Set order type to (R)evised
"RTN","LR7OMERG",56,0)
 S $P(LRORDTYP,"^",2)=$$FIND1^DIC(64.061,"","OX","R","D","I $P(^(0),U,5)=""0065""")
"RTN","LR7OMERG",57,0)
 ;
"RTN","LR7OMERG",58,0)
 D CHK(.LRT1SAD,.LRTSAD,.LRLFTOVR)
"RTN","LR7OMERG",59,0)
 S LRII=0
"RTN","LR7OMERG",60,0)
 F  S LRII=$O(LRT1SAD(LRII)) Q:LRII<1  D
"RTN","LR7OMERG",61,0)
 . S X=LRT1SAD(LRII),URG=$P(X,"^",2),LRTSORU=$P(X,U,9)
"RTN","LR7OMERG",62,0)
 . I '$D(LRTSORU(LRTSORU)) D ORUT^LRWLST11
"RTN","LR7OMERG",63,0)
 . S LRTSORU(LRTSORU)=""
"RTN","LR7OMERG",64,0)
 . I $D(LRLFTOVR(LRII)) D
"RTN","LR7OMERG",65,0)
 . . I $O(^LAB(60,LRII,2,0)) D  Q
"RTN","LR7OMERG",66,0)
 . . . N ARAT,SAME,SUB
"RTN","LR7OMERG",67,0)
 . . . S J=0
"RTN","LR7OMERG",68,0)
 . . . F  S J=$O(^LAB(60,LRII,2,J)) Q:J<1  S ARAT(+^(J,0))=""
"RTN","LR7OMERG",69,0)
 . . . D CHK(.ARAT,.LRTSAD,.SUB)
"RTN","LR7OMERG",70,0)
 . . . S SAME=1,J=0 F  S J=$O(^LAB(60,LRII,2,J)) Q:J<1  I '$D(SUB(+^(J,0))) S SAME=0 Q
"RTN","LR7OMERG",71,0)
 . . . I SAME D SET68(LRII,URG,LRTSORU),SET69(LRODT,LRSN,LRII,URG,LRAA,LRAODT,LRAN) Q
"RTN","LR7OMERG",72,0)
 . . . S J=0
"RTN","LR7OMERG",73,0)
 . . . F  S J=$O(SUB(J)) Q:J<1  D SET68(J,URG,LRTSORU),SET69(LRODT,LRSN,J,URG,LRAA,LRAD,LRAN)
"RTN","LR7OMERG",74,0)
 . . D SET68(LRII,URG,LRTSORU),SET69(LRODT,LRSN,LRII,URG,LRAA,LRAD,LRAN)
"RTN","LR7OMERG",75,0)
 S X=^LRO(68,LR1AA,1,LR1AD,1,LR1AN,0),LROSN=$P(X,U,5),LROID=$P(X,U,6),LROCN=$S($D(^(.1)):$P(^(.1),U),1:"")
"RTN","LR7OMERG",76,0)
 S LRCWDT=$S($D(^LRO(68,LR1AA,1,LR1AD,1,LR1AN,9)):^(9),1:LR1AD),LROWDT=$P(^(0),U,3),LROWDT=$S($D(^LRO(68,LR1AA,1,LROWDT,1,LR1AN,0)):LROWDT,1:LR1AD)
"RTN","LR7OMERG",77,0)
 D ZAP(LR1ODT,LR1SN,LR1AA,LR1AD,LR1AN,LRIDT1,1)
"RTN","LR7OMERG",78,0)
 ;
"RTN","LR7OMERG",79,0)
 I '$D(^LRO(68,LR1AA,1,LR1AD,1,LR1AN)) D
"RTN","LR7OMERG",80,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT)),$D(^(LRIDT1,1)) M ^LR(LRDFN,LRSS,LRIDT,1)=^LR(LRDFN,LRSS,LRIDT1,1)
"RTN","LR7OMERG",81,0)
 ;
"RTN","LR7OMERG",82,0)
 ; Release locks
"RTN","LR7OMERG",83,0)
 D UL1,UL2
"RTN","LR7OMERG",84,0)
 ;
"RTN","LR7OMERG",85,0)
 W !!,"Accessions merged!"
"RTN","LR7OMERG",86,0)
 W !!,"Accession #"_LRAN_" now looks like:" D WRITE(LRAA,LRAD,LRAN,+SPEC)
"RTN","LR7OMERG",87,0)
 ;
"RTN","LR7OMERG",88,0)
 S X=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),U)
"RTN","LR7OMERG",89,0)
 I X'="" D EN^LA7ADL(X)
"RTN","LR7OMERG",90,0)
 ;
"RTN","LR7OMERG",91,0)
 D END
"RTN","LR7OMERG",92,0)
 W !,"Merge another accession"
"RTN","LR7OMERG",93,0)
 S %=1 D YN^DICN I %=1 G EN1
"RTN","LR7OMERG",94,0)
 Q
"RTN","LR7OMERG",95,0)
 ;
"RTN","LR7OMERG",96,0)
 ;
"RTN","LR7OMERG",97,0)
ZAP(LRODT,LRSN,LRAA,LRAD,LRAN,LRIDT,LRMERG) ;
"RTN","LR7OMERG",98,0)
 ;
"RTN","LR7OMERG",99,0)
 N LRNOW,LRTNM,LRTSTS
"RTN","LR7OMERG",100,0)
 ;
"RTN","LR7OMERG",101,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,0))#2
"RTN","LR7OMERG",102,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LR7OMERG",103,0)
 S LRTSTS=0
"RTN","LR7OMERG",104,0)
 F  S LRTSTS=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS)) Q:LRTSTS<1  D
"RTN","LR7OMERG",105,0)
 . S LRTNM=$P($G(^LAB(60,LRTSTS,0)),U)
"RTN","LR7OMERG",106,0)
 . D SET^LRTSTOUT
"RTN","LR7OMERG",107,0)
 Q
"RTN","LR7OMERG",108,0)
 ;
"RTN","LR7OMERG",109,0)
 ;
"RTN","LR7OMERG",110,0)
PRAC(LRAA,LRAD,LRAN,Y) ;Find all ordering providers for a given accession
"RTN","LR7OMERG",111,0)
 N LRODT,LRSN,I,PROV,X
"RTN","LR7OMERG",112,0)
 Q:'$D(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0))  S X=^(0),PROV=$P(X,"^",8)
"RTN","LR7OMERG",113,0)
 S LRODT=$P(X,"^",4),LRSN=$P(X,"^",5)
"RTN","LR7OMERG",114,0)
 I LRODT=""!(LRSN="") Q
"RTN","LR7OMERG",115,0)
 Q:'$D(^LRO(69,+LRODT,1,+LRSN,0))  I $P(^(0),"^",6),$P(^(0),"^",6)'=PROV S Y($P(^(0),"^",6))=""
"RTN","LR7OMERG",116,0)
 S I=0 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,I)) Q:I<1  S X=$P(^(I,0),"^",14) D
"RTN","LR7OMERG",117,0)
 . I X,$D(^LRO(69,+X,1,+$P(X,";",2),0)),$P(^(0),"^",6)'=PROV S Y($P(^(0),"^",6))=""
"RTN","LR7OMERG",118,0)
 Q
"RTN","LR7OMERG",119,0)
 ;
"RTN","LR7OMERG",120,0)
 ;
"RTN","LR7OMERG",121,0)
UL2 ;Unlock 2nd accession
"RTN","LR7OMERG",122,0)
 ;
"RTN","LR7OMERG",123,0)
 ;ZEXCEPT: LRAA,LRAD,LRAN
"RTN","LR7OMERG",124,0)
 ;
"RTN","LR7OMERG",125,0)
 L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LR7OMERG",126,0)
 Q
"RTN","LR7OMERG",127,0)
 ;
"RTN","LR7OMERG",128,0)
 ;
"RTN","LR7OMERG",129,0)
UL1 ;Unlock 1st accession
"RTN","LR7OMERG",130,0)
 ;
"RTN","LR7OMERG",131,0)
 ;ZEXCEPT: LR1AA,LR1AD,LR1AN
"RTN","LR7OMERG",132,0)
 ;
"RTN","LR7OMERG",133,0)
 L -^LRO(68,LR1AA,1,LR1AD,1,LR1AN)
"RTN","LR7OMERG",134,0)
 Q
"RTN","LR7OMERG",135,0)
 ;
"RTN","LR7OMERG",136,0)
 ;
"RTN","LR7OMERG",137,0)
CHK(ARAY1,ARAY2,OUT) ;Check for duplicate tests on accessions
"RTN","LR7OMERG",138,0)
 ; ARAY1(tst)=test aray from accession being merged
"RTN","LR7OMERG",139,0)
 ; ARAY2(tst)=test aray from accession being merged to
"RTN","LR7OMERG",140,0)
 ; Output [OUT] is an array of tests from ARAY1 that are not duplicated in ARAY2
"RTN","LR7OMERG",141,0)
 Q:'$O(ARAY2(0))
"RTN","LR7OMERG",142,0)
 N IN2,I
"RTN","LR7OMERG",143,0)
 S I=0 F  S I=$O(ARAY1(I)) Q:I<1  I '$D(ARAY2(I)) S OUT(I)=ARAY1(I)
"RTN","LR7OMERG",144,0)
 S I=0 F  S I=$O(ARAY2(I)) Q:I<1  D EXPAND^LR7OU1(I,.IN2)
"RTN","LR7OMERG",145,0)
 S I=0 F  S I=$O(OUT(I)) Q:I<1  I $D(IN2(I)) K OUT(I)
"RTN","LR7OMERG",146,0)
 Q
"RTN","LR7OMERG",147,0)
 ;
"RTN","LR7OMERG",148,0)
 ;
"RTN","LR7OMERG",149,0)
WRITE(AA,AD,AN,SP,COMP,ARAY) ; Display accession with tests
"RTN","LR7OMERG",150,0)
 ; AA=Accession area, AD=Accession Date, AN=Accession #, SP=ptr to 61 specimen
"RTN","LR7OMERG",151,0)
 ; COMP=1 (returned) if all tests on accession are complete
"RTN","LR7OMERG",152,0)
 ; ARAY(TST) (returned) for all tests on accession
"RTN","LR7OMERG",153,0)
 ;
"RTN","LR7OMERG",154,0)
 N I
"RTN","LR7OMERG",155,0)
 ;
"RTN","LR7OMERG",156,0)
 Q:'$D(^LRO(68,+$G(AA),1,+$G(AD),1,+$G(AN)))
"RTN","LR7OMERG",157,0)
 I $P($G(^LRO(68,+$G(AA),1,+$G(AD),1,+$G(AN),.3)),U)'="" W !,"UID: ",$P(^(.3),U)
"RTN","LR7OMERG",158,0)
 W !,$S($D(^LAB(61,+$G(SP),0)):$P(^(0),"^"),1:""),?35,"TESTS ON ACCESSION: "
"RTN","LR7OMERG",159,0)
 S I=0
"RTN","LR7OMERG",160,0)
 F  S I=$O(^LRO(68,AA,1,AD,1,AN,4,I)) Q:I<1  D
"RTN","LR7OMERG",161,0)
 . I $P($G(^LAB(60,I,0)),"^",4)="WK" Q  ; Don't include workload tests.
"RTN","LR7OMERG",162,0)
 . S ARAY(I)=^LRO(68,AA,1,AD,1,AN,4,I,0)
"RTN","LR7OMERG",163,0)
 . W !,?40,$P(^LAB(60,I,0),U)
"RTN","LR7OMERG",164,0)
 . I $P(ARAY(I),"^",5) W ?65,$S($P(ARAY(I),U,6)'="":$P(ARAY(I),U,6),1:" Verified") S COMP=1
"RTN","LR7OMERG",165,0)
 Q
"RTN","LR7OMERG",166,0)
 ;
"RTN","LR7OMERG",167,0)
 ;
"RTN","LR7OMERG",168,0)
SET68(LRTSTS,URG,LRPRIM) ;Set file 68
"RTN","LR7OMERG",169,0)
 ;
"RTN","LR7OMERG",170,0)
 ;ZEXCEPT: LRAA,LRAD,LRAN
"RTN","LR7OMERG",171,0)
 ;
"RTN","LR7OMERG",172,0)
 Q:$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS))
"RTN","LR7OMERG",173,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS,0)=LRTSTS_"^"_URG,$P(^(0),U,9)=LRPRIM
"RTN","LR7OMERG",174,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",+LRTSTS,+LRTSTS)=""
"RTN","LR7OMERG",175,0)
 S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),"^",3)=LRTSTS,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","LR7OMERG",176,0)
 Q
"RTN","LR7OMERG",177,0)
 ;
"RTN","LR7OMERG",178,0)
 ;
"RTN","LR7OMERG",179,0)
SET69(LRODT,LRSN,LRTS,LRURG,LRAA,LRAODT,LRAN) ;Set file 69
"RTN","LR7OMERG",180,0)
 N DA,DIC,DIE,DINUM,DO,DR,LRFLG,LRNATURE,LRPHSET,LRXDA,X,Y
"RTN","LR7OMERG",181,0)
 ;
"RTN","LR7OMERG",182,0)
 S (LRFLG,LRPHSET)=1,LRNATURE="^^^6^SERVICE CORRECTION^99ORR"
"RTN","LR7OMERG",183,0)
 ;
"RTN","LR7OMERG",184,0)
 ; Test already on order
"RTN","LR7OMERG",185,0)
 I $D(^LRO(69,LRODT,1,LRSN,2,"B",LRTS)) Q
"RTN","LR7OMERG",186,0)
 ;
"RTN","LR7OMERG",187,0)
 ; Add stub entry for new test.
"RTN","LR7OMERG",188,0)
 S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,",DA(2)=LRODT,DA(1)=LRSN
"RTN","LR7OMERG",189,0)
 S DIC(0)="F",X=+LRTS
"RTN","LR7OMERG",190,0)
 D FILE^DICN
"RTN","LR7OMERG",191,0)
 ;
"RTN","LR7OMERG",192,0)
 ; Update new entry
"RTN","LR7OMERG",193,0)
 D 69^LRTSTSET
"RTN","LR7OMERG",194,0)
 Q
"RTN","LR7OMERG",195,0)
 ;
"RTN","LR7OMERG",196,0)
 ;
"RTN","LR7OMERG",197,0)
END ;
"RTN","LR7OMERG",198,0)
 K COMP,X,X1,I,J,LRACC,LRSS,LRIDT,LRIDT1,LRORD,LRX1,LRAA,LRAD,LRAN,LR1AA,LR1AD,LR1AN,LR1ODT
"RTN","LR7OMERG",199,0)
 K LR1SN,TST,LRDFN,SPEC,SPEC1,DA,LREND,LRIDIV,LRX,LRAODT,LRDPF,LRODT,LRPRAC,LRRB,LRSN,LRTREA,LRTSAD,LRT1SAD,LRWRD,LRF,LRCWDT,LROWDT,LROSN,LROID,LROCN
"RTN","LR7OMERG",200,0)
 K PNM,SEX,SSN,Y,DOB,DFN,LRWRD,VA,VADM,VAIN,VA200,VAERR,LRTOACC
"RTN","LR7OMERG",201,0)
 D KVA^VADPT
"RTN","LR7OMERG",202,0)
 K AGE,D0,DI,IFN,LRNOW,LRNLT,LRNATURE,LRLLOC,LRLFTOVR,LRII,LRCCOM
"RTN","LR7OMERG",203,0)
 K LRAGE,LRTNM,LRTSORU,LRTSTS,URG
"RTN","LR7OMERG",204,0)
 Q
"RTN","LR7OR1")
0^206^B33990199
"RTN","LR7OR1",1,0)
LR7OR1 ;DALIO/JMC - Get Lab results ;11/10/10  17:38
"RTN","LR7OR1",2,0)
 ;;5.2;LAB SERVICE;**121,187,219,230,256,310,340,348,350**;Sep 27, 1994;Build 230
"RTN","LR7OR1",3,0)
 ;
"RTN","LR7OR1",4,0)
RR(DFN,ORD,SDATE,EDATE,SUB,TEST,FLAG,COUNT,SPEC,UNVER) ;Get LAB results for patient
"RTN","LR7OR1",5,0)
 ;DFN = Patient DFN, ptr to file 2 (Required)
"RTN","LR7OR1",6,0)
 ;ORD = Lab Link from OE/RR (ORPK node) (Optional)
"RTN","LR7OR1",7,0)
 ;SDATE = start date to begin search in fileman format (Optional)
"RTN","LR7OR1",8,0)
 ;EDATE = end date to end search in fileman format (Optional)
"RTN","LR7OR1",9,0)
 ;SUB =set to CH,MI,AP or ALL to specify lab (Optional)
"RTN","LR7OR1",10,0)
 ;    subsection. A null entry will imply ALL.
"RTN","LR7OR1",11,0)
 ;TEST = Test to do lookup on (Optional). A null parameter will get all tests
"RTN","LR7OR1",12,0)
 ;FLAG = L for local test ID, N for National test ID (Optional)
"RTN","LR7OR1",13,0)
 ;    this is specified for both input and output
"RTN","LR7OR1",14,0)
 ;COUNT =Count of results to return. Each Date/time counts as 1 (optional)
"RTN","LR7OR1",15,0)
 ;SPEC =ptr file 61 to specify specimen (optional).
"RTN","LR7OR1",16,0)
 ;      If specified, no AP results are returned.
"RTN","LR7OR1",17,0)
 ;UNVER =1 to include unverified data
"RTN","LR7OR1",18,0)
 ;Output is set in ^TMP("LRRR",$J,dfn,subscript,inverse d/t,seq)=
"RTN","LR7OR1",19,0)
 ; testID^result^flag^units^refrange^resultstatus(F or P)^^^natlCode^natlName^system^Verifyby^^Theraputicflag(T or "")^PrintName^Accession^Order#^Specimen
"RTN","LR7OR1",20,0)
 ;
"RTN","LR7OR1",21,0)
 N LRDFN,LRDPF,SEX,AGE,DOB,ORDT,ORSN,II,III,DRAW,TSTY,SS,CT1
"RTN","LR7OR1",22,0)
 ;
"RTN","LR7OR1",23,0)
 Q:'$G(DFN)
"RTN","LR7OR1",24,0)
 S LRDFN=$$LRDFN(DFN),LRDPF="2^DPT("
"RTN","LR7OR1",25,0)
 Q:'LRDFN
"RTN","LR7OR1",26,0)
 ;
"RTN","LR7OR1",27,0)
 S SEX=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",2)
"RTN","LR7OR1",28,0)
 S DOB=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",3),AGE=$S($D(DT)&(DOB?7N):DT-DOB\10000,1:"??")
"RTN","LR7OR1",29,0)
 D DTRNG
"RTN","LR7OR1",30,0)
 S SUB=$S($G(SUB)="ALL":"CHMIAP",$L($G(SUB)):SUB,1:"CHMIAP"),FLAG=$S('$L($G(FLAG)):"L",1:FLAG)
"RTN","LR7OR1",31,0)
 ;
"RTN","LR7OR1",32,0)
 I $G(TEST),FLAG="L",'$D(^LAB(60,TEST)) Q  ;No-Match on Local testID
"RTN","LR7OR1",33,0)
 I $G(TEST),FLAG="N" S TEST=$O(^LAB(60,"AC",TEST,0)) Q:'TEST  ;No-Match on National testID
"RTN","LR7OR1",34,0)
 I $G(TEST) S SUB=$P(^LAB(60,TEST,0),"^",4) Q:'$L(SUB)  ;Test with no subscript
"RTN","LR7OR1",35,0)
 ;
"RTN","LR7OR1",36,0)
 K ^TMP("LRRR",$J),^TMP("LRAPI",$J)
"RTN","LR7OR1",37,0)
 ;
"RTN","LR7OR1",38,0)
 S COUNT=$S($G(COUNT):COUNT,1:9999999),CT1=1
"RTN","LR7OR1",39,0)
 ;
"RTN","LR7OR1",40,0)
 I $G(ORD) S ORDT=0 D  Q
"RTN","LR7OR1",41,0)
 . I $G(TEST) Q:'$D(^LAB(60,TEST,0))  S X=^(0) I $P(X,"^",4)="CH" D
"RTN","LR7OR1",42,0)
 . . I $P(X,"^",5)'="" S TSTY($P($P(X,"^",5),";",2))=TEST
"RTN","LR7OR1",43,0)
 . . I $P(X,"^",5)="" D EN^LR7OU1(TEST)
"RTN","LR7OR1",44,0)
 . I ORD["^" S ORDT=$P(ORD,"^"),ORSN=$P(ORD,"^",2) I ORDT,ORSN D SN Q  ;OE/RR 2.5 unconverted orders
"RTN","LR7OR1",45,0)
 . I ORD'[";" F  S ORDT=$O(^LRO(69,"C",ORD,ORDT)) Q:ORDT<1  S ORSN=0 F  S ORSN=$O(^LRO(69,"C",ORD,ORDT,ORSN)) Q:ORSN<1  D SN ;Early CPRS when only LR# stored
"RTN","LR7OR1",46,0)
 . I ORD[";" S ORDT=$P(ORD,";",2),ORSN=$P(ORD,";",3) I ORDT,ORSN D SN
"RTN","LR7OR1",47,0)
 I SUB["CH" D CH^LR7OR2(SDATE,EDATE,$G(TEST),COUNT,$G(SPEC),$G(UNVER))
"RTN","LR7OR1",48,0)
 I SUB["MI" D MI(SDATE,EDATE,COUNT,$G(SPEC))
"RTN","LR7OR1",49,0)
 ;I SUB["BB" D BB(SDATE,EDATE,COUNT,$G(SPEC))
"RTN","LR7OR1",50,0)
 I SUB["AP",'$G(SPEC) D AP(SDATE,EDATE,COUNT)
"RTN","LR7OR1",51,0)
 Q
"RTN","LR7OR1",52,0)
 ;
"RTN","LR7OR1",53,0)
 ;
"RTN","LR7OR1",54,0)
MI(SDATE,EDATE,COUNT,SPEC) ;Get MI Subscript data
"RTN","LR7OR1",55,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",56,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",57,0)
 S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,"MI",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D MI^LR7OB63A(SPEC) M ^TMP("LRRR",$J,DFN,"MI",IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",58,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",59,0)
 Q
"RTN","LR7OR1",60,0)
 ;
"RTN","LR7OR1",61,0)
 ;
"RTN","LR7OR1",62,0)
BB(SDATE,EDATE,COUNT,SPEC) ;Get BB Subscript data
"RTN","LR7OR1",63,0)
 Q
"RTN","LR7OR1",64,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",65,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",66,0)
 S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,"BB",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D BB1^LR7OB63(SPEC) M ^TMP("LRRR",$J,DFN,"BB",IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",67,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",68,0)
 Q
"RTN","LR7OR1",69,0)
 ;
"RTN","LR7OR1",70,0)
 ;
"RTN","LR7OR1",71,0)
AP(SDATE,EDATE,COUNT) ;Get AP Subscript data (EM,CY,AU,SP)
"RTN","LR7OR1",72,0)
 N LRSS K ^TMP("LRX",$J)
"RTN","LR7OR1",73,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",74,0)
 S CTR=99 D AU^LR7OB63D M ^TMP("LRRR",$J,DFN,"AU")=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",75,0)
 F LRSS="EM","CY","SP" S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,LRSS,IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D SS^LR7OB63C(LRSS) M ^TMP("LRRR",$J,DFN,LRSS,IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",76,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",77,0)
 Q
"RTN","LR7OR1",78,0)
 ;
"RTN","LR7OR1",79,0)
 ;
"RTN","LR7OR1",80,0)
TEST ;Test the RR entry point
"RTN","LR7OR1",81,0)
 N X1,X2,X3,X4,X5,DIC,%DT,X,Y
"RTN","LR7OR1",82,0)
 K ^TMP("LRRR",$J),^TMP("LRAPI",$J) S (X1,X2,X3,X4,X5)=""
"RTN","LR7OR1",83,0)
 D ^LRDPA Q:'DFN
"RTN","LR7OR1",84,0)
O1 W !,"Select Lab Order #: " R X:DTIME Q:'$T!(X["^")
"RTN","LR7OR1",85,0)
 I $L(X),'$D(^LRO(69,"C",X)) W !!,X_" is not a valid order number." G O1
"RTN","LR7OR1",86,0)
 I $L(X),$D(^LRO(69,"C",X)) S X5=X,DIC=60,DIC(0)="AEQM",DIC("A")="Select Test (optional): " D ^DIC S X3=$S(Y>0:+Y,1:"") Q:Y<0&(X["^")  G T2
"RTN","LR7OR1",87,0)
 S %DT="AETS",%DT("A")="Select Start Date: " D ^%DT S X1=$S(Y>0:Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",88,0)
 S %DT="AETS",%DT("A")="Select End Date: " D ^%DT S X2=$S(Y>0:Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",89,0)
 S DIC=60,DIC(0)="AEQM",DIC("A")="Look for specific Test: " D ^DIC S X3=$S(Y>0:+Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",90,0)
 I 'X3 D
"RTN","LR7OR1",91,0)
T1 . W !,"Enter a lab area to search on (ALL,CH,MI,AP): " R X:DTIME Q:'$T!(X["^")
"RTN","LR7OR1",92,0)
 . IF "ALLCHMIAP"'[X W !!,"Bad input, enter ALL, CH, MI, or AP" G T1
"RTN","LR7OR1",93,0)
 . S X4=$S("ALLCHMIAP"[X:X,1:"")
"RTN","LR7OR1",94,0)
T2 D RR(DFN,X5,X1,X2,X4,X3)
"RTN","LR7OR1",95,0)
 W !!,$S($D(^TMP("LRRR",$J)):"Data found!",1:"NO Data found!")
"RTN","LR7OR1",96,0)
 Q
"RTN","LR7OR1",97,0)
 ;
"RTN","LR7OR1",98,0)
 ;
"RTN","LR7OR1",99,0)
DTRNG ; Date range setup
"RTN","LR7OR1",100,0)
 I $G(EDATE)<$G(SDATE) S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","LR7OR1",101,0)
 I $G(EDATE) S EDATE=$S($L(EDATE,".")=2:EDATE+.000001,1:EDATE+1)
"RTN","LR7OR1",102,0)
 I $G(SDATE) S SDATE=$S($L(SDATE,".")=2:SDATE-.000001,1:SDATE)
"RTN","LR7OR1",103,0)
 S SDATE=$S($G(SDATE):9999999-SDATE,1:9999999),EDATE=$S($G(EDATE):9999999-EDATE,1:1)
"RTN","LR7OR1",104,0)
 S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","LR7OR1",105,0)
 Q
"RTN","LR7OR1",106,0)
 ;
"RTN","LR7OR1",107,0)
 ;
"RTN","LR7OR1",108,0)
SN ; Get the subs
"RTN","LR7OR1",109,0)
 ;
"RTN","LR7OR1",110,0)
 N II,III,LRPLSAVE
"RTN","LR7OR1",111,0)
 ;
"RTN","LR7OR1",112,0)
 ; Set flag to not print performing lab in called routines, wait for control returns to this routine.
"RTN","LR7OR1",113,0)
 S LRPLSAVE=1
"RTN","LR7OR1",114,0)
 ;
"RTN","LR7OR1",115,0)
 D 69^LR7OB69(ORDT,ORSN) Q:'$D(^TMP("LRX",$J,69))
"RTN","LR7OR1",116,0)
 ;
"RTN","LR7OR1",117,0)
 ; List performing laboratories
"RTN","LR7OR1",118,0)
 I $G(LRPLSAVE(0)) D
"RTN","LR7OR1",119,0)
 . N CTR,IVDT
"RTN","LR7OR1",120,0)
 . S CTR=LRPLSAVE(0),IVDT=0
"RTN","LR7OR1",121,0)
 . F  S IVDT=$O(LRPLSAVE("CH",IVDT)) Q:IVDT<1  D
"RTN","LR7OR1",122,0)
 . . D PLS^LR7OB63
"RTN","LR7OR1",123,0)
 ;
"RTN","LR7OR1",124,0)
 S II=0
"RTN","LR7OR1",125,0)
 F  S II=$O(^TMP("LRX",$J,69,II)) Q:II<1  D
"RTN","LR7OR1",126,0)
 . S DRAW=$P($G(^TMP("LRX",$J,69,II,68)),"^",4),SS=$P($G(^LRO(68,+$P(^TMP("LRX",$J,69,II),"^",4),0)),"^",2)
"RTN","LR7OR1",127,0)
 . S III=0
"RTN","LR7OR1",128,0)
 . F  S III=$O(^TMP("LRX",$J,69,II,63,III)) Q:III<1  I $S($D(TSTY):$D(TSTY(III)),1:1) D
"RTN","LR7OR1",129,0)
 . . I $P(^TMP("LRX",$J,69,II,63,III),U,6)="" Q
"RTN","LR7OR1",130,0)
 . . S ^TMP("LRRR",$J,DFN,SS,9999999-DRAW,III)=^TMP("LRX",$J,69,II,63,III)
"RTN","LR7OR1",131,0)
 . I $D(^TMP("LRX",$J,69,II,63,"N")),$O(^TMP("LRRR",$J,DFN,SS,9999999-DRAW,0)) M ^TMP("LRRR",$J,DFN,SS,9999999-DRAW,"N")=^TMP("LRX",$J,69,II,63,"N")
"RTN","LR7OR1",132,0)
 ;
"RTN","LR7OR1",133,0)
 F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR1",134,0)
 ;
"RTN","LR7OR1",135,0)
 Q
"RTN","LR7OR1",136,0)
 ;
"RTN","LR7OR1",137,0)
 ;
"RTN","LR7OR1",138,0)
LRDFN(IFN,FILEROOT)  ;Get LRDFN
"RTN","LR7OR1",139,0)
 ; IFN=Internal file number
"RTN","LR7OR1",140,0)
 ; FILEROOT=Root of file to get LRDFN (optional) "DPT(" is default
"RTN","LR7OR1",141,0)
 Q:'$G(IFN) ""
"RTN","LR7OR1",142,0)
 I '$L($G(FILEROOT)) S FILEROOT="DPT("
"RTN","LR7OR1",143,0)
 S X=$S($D(@("^"_FILEROOT_+IFN_",""LR"")")):+^("LR"),1:"")
"RTN","LR7OR1",144,0)
 I X,'$D(^LR(X,0)) S X=""
"RTN","LR7OR1",145,0)
 Q X
"RTN","LR7OR2")
0^168^B40394119
"RTN","LR7OR2",1,0)
LR7OR2 ;DALOI/dcm - Get Lab results (cont.) ;02/11/11  14:39
"RTN","LR7OR2",2,0)
 ;;5.2;LAB SERVICE;**121,187,219,285,286,372,350**;Sep 27, 1994;Build 230
"RTN","LR7OR2",3,0)
 ;
"RTN","LR7OR2",4,0)
 ;
"RTN","LR7OR2",5,0)
CH(SDATE,EDATE,TEST,COUNT,SPEC,UNVER) ;Get CH subscript data
"RTN","LR7OR2",6,0)
 ;
"RTN","LR7OR2",7,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR2",8,0)
 N GOTIT,I,IVDT,ITST,IST,TSTY,X,X0,ORD,Y6,Y12,Y16,Y19
"RTN","LR7OR2",9,0)
 F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR2",10,0)
 ;
"RTN","LR7OR2",11,0)
 I $G(TEST) Q:'$D(^LAB(60,TEST,0))  S X=^(0) Q:$P(X,"^",4)'="CH"  D
"RTN","LR7OR2",12,0)
 . I $P(X,"^",5)'="" S TSTY($P($P(X,"^",5),";",2))=TEST
"RTN","LR7OR2",13,0)
 . I $P(X,"^",5)="" D EN^LR7OU1(TEST)
"RTN","LR7OR2",14,0)
 ;
"RTN","LR7OR2",15,0)
 S IVDT=SDATE
"RTN","LR7OR2",16,0)
 F  S IVDT=$O(^LR(LRDFN,"CH",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  D
"RTN","LR7OR2",17,0)
 . S X0=^LR(LRDFN,"CH",IVDT,0),Y6=$S($P(X0,"^",3):"F",1:"P"),Y12=$P(X0,"^",4),Y19=$P(X0,"^",5),Y16=$P(X0,"^",6),ORD=$$ORD(LRDFN,IVDT)
"RTN","LR7OR2",18,0)
 . S GOTIT=0
"RTN","LR7OR2",19,0)
 . I '$G(UNVER),Y6="P" Q  ;Unverified data not requested
"RTN","LR7OR2",20,0)
 . I $G(SPEC),Y19'=SPEC Q  ;Specimen specified
"RTN","LR7OR2",21,0)
 . I '$D(TSTY) S ITST=1 F  S ITST=$O(^LR(LRDFN,"CH",IVDT,ITST)) Q:ITST<1  S X=^(ITST) D SETTST(ITST,X)
"RTN","LR7OR2",22,0)
 . S IST=0 F  S IST=$O(TSTY(IST)) Q:IST<1  I $D(^LR(LRDFN,"CH",IVDT,IST)) S X=^(IST) D SETTST(IST,X)
"RTN","LR7OR2",23,0)
 . I $O(^TMP("LRRR",$J,DFN,"CH",IVDT,0)) D NOTE(LRDFN,IVDT)
"RTN","LR7OR2",24,0)
 . I GOTIT S CT1=CT1+1
"RTN","LR7OR2",25,0)
 . ; Display ordering provider
"RTN","LR7OR2",26,0)
 . D ORDP($P($G(^LR(LRDFN,"CH",IVDT,0)),"^",10))
"RTN","LR7OR2",27,0)
 . ; Display report released date/time
"RTN","LR7OR2",28,0)
 . D RRDT($P(X0,"^",3))
"RTN","LR7OR2",29,0)
 . ; List performing laboratories
"RTN","LR7OR2",30,0)
 . D PLS
"RTN","LR7OR2",31,0)
 ;
"RTN","LR7OR2",32,0)
 F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR2",33,0)
 Q
"RTN","LR7OR2",34,0)
 ;
"RTN","LR7OR2",35,0)
 ;
"RTN","LR7OR2",36,0)
SETTST(ISUB,ZERO) ;Set test data in ^TMP
"RTN","LR7OR2",37,0)
 ; ISUB= test subscript
"RTN","LR7OR2",38,0)
 ; ZERO= 0th node at ^LR(LRDFN,"CH",IVDT,TST)
"RTN","LR7OR2",39,0)
 N LRX,PORDER,X,Y,Y1,Y2,Y3,Y4,Y5,Y9,Y10,Y11,Y14
"RTN","LR7OR2",40,0)
 S X=ZERO,Y1=ISUB,Y1=$O(^LAB(60,"C","CH;"_Y1_";1",0)),Y2=$P(X,"^"),Y3=$P(X,"^",2)
"RTN","LR7OR2",41,0)
 Q:'Y1  Q:"IN"[$P(^LAB(60,Y1,0),"^",3)  S Y15=$P($G(^LAB(60,Y1,.1)),"^")
"RTN","LR7OR2",42,0)
 S (Y9,Y10,Y11,Y14)=""
"RTN","LR7OR2",43,0)
 I $P($G(^LAB(60,Y1,64)),"^") S Y9=$P(^(64),"^"),Y9=$P(^LAM(Y9,0),"^",2),Y10=$P(^(0),"^"),Y11="99NLT"
"RTN","LR7OR2",44,0)
 ;
"RTN","LR7OR2",45,0)
 S LRX=$$TSTRES^LRRPU(LRDFN,"CH",IVDT,ISUB,Y1)
"RTN","LR7OR2",46,0)
 S Y2=$P(LRX,"^"),Y3=$P(LRX,"^",2),Y4=$P(LRX,"^",5),Y5=$$EN^LRLRRVF($P(LRX,"^",3),$P(LRX,"^",4))
"RTN","LR7OR2",47,0)
 I $P(LRX,"^",7) S Y14="T"
"RTN","LR7OR2",48,0)
 S Y2=$$TRIM^XLFSTR($$RESULT^LR7OB63(Y1,Y2),"RL"," ")
"RTN","LR7OR2",49,0)
 ;
"RTN","LR7OR2",50,0)
 ; Determine print order and adjust if duplicate
"RTN","LR7OR2",51,0)
 S PORDER=$P($G(^LAB(60,Y1,.1)),"^",6),PORDER=$S(PORDER:PORDER,1:998+(ISUB/10000000))
"RTN","LR7OR2",52,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)) F PORDER=PORDER:.00000001 I '$D(^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)) Q
"RTN","LR7OR2",53,0)
 ;
"RTN","LR7OR2",54,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)=Y1_"^"_Y2_"^"_Y3_"^"_Y4_"^"_Y5_"^"_Y6_"^^^"_Y9_"^"_Y10_"^"_Y11_"^"_Y12_"^^"_Y14_"^"_Y15_"^"_Y16_"^"_$G(ORD)_"^^"_Y19
"RTN","LR7OR2",55,0)
 I $P(LRX,"^",6) S ^TMP("LRPLS",$J,$P(LRX,"^",6),$P(^LAB(60,Y1,0),"^"))=""
"RTN","LR7OR2",56,0)
 S GOTIT=1
"RTN","LR7OR2",57,0)
 Q
"RTN","LR7OR2",58,0)
 ;
"RTN","LR7OR2",59,0)
 ;
"RTN","LR7OR2",60,0)
NOTE(LRDFN,IVDT) ;Get comments
"RTN","LR7OR2",61,0)
 N IFN
"RTN","LR7OR2",62,0)
 S IFN=0
"RTN","LR7OR2",63,0)
 F  S IFN=$O(^LR(LRDFN,"CH",IVDT,1,IFN)) Q:IFN<1  S X=^(IFN,0),^TMP("LRRR",$J,DFN,"CH",IVDT,"N",IFN)=X
"RTN","LR7OR2",64,0)
 Q
"RTN","LR7OR2",65,0)
 ;
"RTN","LR7OR2",66,0)
 ;
"RTN","LR7OR2",67,0)
TEST(Y,DFN,ORD,SDATE,EDATE,SUB,TEST,FLAG,COUNT) ;Test network calls
"RTN","LR7OR2",68,0)
 ; Called from TIU
"RTN","LR7OR2",69,0)
 ; COUNT = count of results to send, results with the same date/time count as 1
"RTN","LR7OR2",70,0)
 N IVDT,SSUB,SEQ,CTR
"RTN","LR7OR2",71,0)
 Q:'$G(DFN)
"RTN","LR7OR2",72,0)
 D RR^LR7OR1(DFN,$G(ORD),$G(SDATE),$G(EDATE),$G(SUB),$G(TEST),$G(FLAG),$G(COUNT))
"RTN","LR7OR2",73,0)
 I '$D(^TMP("LRRR",$J)) S Y(1)="No Lab Data" Q
"RTN","LR7OR2",74,0)
 S CTR=0,SSUB="",COUNT=$S($G(COUNT):COUNT,1:9999999)
"RTN","LR7OR2",75,0)
 F  S SSUB=$O(^TMP("LRRR",$J,DFN,SSUB)) Q:SSUB=""  S IVDT=0 F  S IVDT=$O(^TMP("LRRR",$J,DFN,SSUB,IVDT)) Q:IVDT<1  S SEQ=0 F  S SEQ=$O(^TMP("LRRR",$J,DFN,SSUB,IVDT,SEQ)) Q:SEQ<1  D
"RTN","LR7OR2",76,0)
 . S CTR=CTR+1,^TMP("LRAPI",$J,CTR)=9999999-IVDT_"^"_SSUB_"^"_^TMP("LRRR",$J,DFN,SSUB,IVDT,SEQ)
"RTN","LR7OR2",77,0)
 S Y=$NA(^TMP("LRAPI",$J))
"RTN","LR7OR2",78,0)
 Q
"RTN","LR7OR2",79,0)
 ;
"RTN","LR7OR2",80,0)
 ;
"RTN","LR7OR2",81,0)
T60(Y,IFN) ;Get tests from file 60
"RTN","LR7OR2",82,0)
 ; If IFN is not passed then the whole file is sent.
"RTN","LR7OR2",83,0)
 N CTR S CTR=0
"RTN","LR7OR2",84,0)
 I $D(IFN) Q:'$D(^LAB(60,IFN,0))  S Y(1)=IFN_"^"_$P(^LAB(60,IFN,0),"^") Q
"RTN","LR7OR2",85,0)
 S NAME="" F  S NAME=$O(^LAB(60,"B",NAME)) Q:NAME=""  S IFN=0 F  S IFN=$O(^LAB(60,"B",NAME,IFN)) Q:IFN<1  I $D(^LAB(60,IFN,0)) S CTR=CTR+1,Y(CTR)=IFN_"^"_NAME
"RTN","LR7OR2",86,0)
 Q
"RTN","LR7OR2",87,0)
 ;
"RTN","LR7OR2",88,0)
 ;
"RTN","LR7OR2",89,0)
T64(Y,IFN) ;Get tests from file 64
"RTN","LR7OR2",90,0)
 ; If IFN is not passed then the whole file is sent, if entry has a link to file 60
"RTN","LR7OR2",91,0)
 N CTR S CTR=0
"RTN","LR7OR2",92,0)
 I $D(IFN) Q:'$D(^LAM(IFN,0))  Q:'$D(^LAB(60,"AC",IFN))  S Y(1)=IFN_"^"_$P(^LAM(IFN,0),"^") Q
"RTN","LR7OR2",93,0)
 S NAME="" F  S NAME=$O(^LAM("B",NAME)) Q:NAME=""  S IFN=0 F  S IFN=$O(^LAM("B",NAME,IFN)) Q:IFN<1  I $D(^LAM(IFN,0)),$D(^LAB(60,"AC",IFN)) S CTR=CTR+1,Y(CTR)=IFN_"^"_NAME
"RTN","LR7OR2",94,0)
 Q
"RTN","LR7OR2",95,0)
 ;
"RTN","LR7OR2",96,0)
 ;
"RTN","LR7OR2",97,0)
ORD(LRDFN,IVDT) ;Get order # for entry in file 63
"RTN","LR7OR2",98,0)
 ; LRDFN=Lab Patient #
"RTN","LR7OR2",99,0)
 ; IVDT=Inverse Date/time in 63 (^LR(LRDFN,"CH",IVDT))
"RTN","LR7OR2",100,0)
 Q:'$G(LRDFN)  Q:'$G(IVDT)
"RTN","LR7OR2",101,0)
 N X0,X6,X,AC,ACD,ACN
"RTN","LR7OR2",102,0)
 S X0=$G(^LR(LRDFN,"CH",IVDT,0)),X6=$P(X0,"^",6) I X6="" Q ""
"RTN","LR7OR2",103,0)
 S X=$P(X6," "),X=$O(^LRO(68,"B",X,0)) I 'X Q ""
"RTN","LR7OR2",104,0)
 S AC=X,ACD=+$P(X0,"."),ACN=$P(X6," ",3) I '$D(^LRO(68,AC,1,ACD,1,ACN,0)) Q ""
"RTN","LR7OR2",105,0)
 S X=$P($G(^LRO(68,AC,1,ACD,1,ACN,.1)),"^")
"RTN","LR7OR2",106,0)
 Q X
"RTN","LR7OR2",107,0)
 ;
"RTN","LR7OR2",108,0)
 ;
"RTN","LR7OR2",109,0)
ORDP(LRPROV) ; Display ordering provider in comment
"RTN","LR7OR2",110,0)
 N LRY,CNT
"RTN","LR7OR2",111,0)
 S LRY=$$NAME^XUSER(LRPROV,"G")
"RTN","LR7OR2",112,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",113,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Ordering Provider: "_LRY
"RTN","LR7OR2",114,0)
 Q
"RTN","LR7OR2",115,0)
 ;
"RTN","LR7OR2",116,0)
 ;
"RTN","LR7OR2",117,0)
RRDT(LRDT) ; Display report released date/time
"RTN","LR7OR2",118,0)
 N LRY,CNT
"RTN","LR7OR2",119,0)
 I LRDT S LRY=$$FMTE^XLFDT(LRDT,"M")
"RTN","LR7OR2",120,0)
 E  S LRY=""
"RTN","LR7OR2",121,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",122,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Report Released Date/Time: "_LRY,CNT=CNT+1
"RTN","LR7OR2",123,0)
 Q
"RTN","LR7OR2",124,0)
 ;
"RTN","LR7OR2",125,0)
 ;
"RTN","LR7OR2",126,0)
PLS ; List reporting and performing laboratories
"RTN","LR7OR2",127,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OR2",128,0)
 ;
"RTN","LR7OR2",129,0)
 N CNT,LINE,LLEN,LRPLS,LRX,MPLS,PLS,TESTNAME,X
"RTN","LR7OR2",130,0)
 ;
"RTN","LR7OR2",131,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",132,0)
 ;
"RTN","LR7OR2",133,0)
 ; Reporting Laboratory
"RTN","LR7OR2",134,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OR2",135,0)
 . S LRX=+$G(^LR(LRDFN,"CH",IVDT,"RF"))
"RTN","LR7OR2",136,0)
 . I LRX<1 Q
"RTN","LR7OR2",137,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OR2",138,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OR2",139,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Reporting Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OR2",140,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="               "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OR2",141,0)
 ;
"RTN","LR7OR2",142,0)
 S PLS=$O(^TMP("LRPLS",$J,0)),MPLS=0
"RTN","LR7OR2",143,0)
 I $O(^TMP("LRPLS",$J,PLS)) S MPLS=1 ; multiple performing labs
"RTN","LR7OR2",144,0)
 S LRPLS=0
"RTN","LR7OR2",145,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OR2",146,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OR2",147,0)
 . I MPLS D
"RTN","LR7OR2",148,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OR2",149,0)
 . . F  S TESTNAME=$O(^TMP("LRPLS",$J,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OR2",150,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OR2",151,0)
 . . . I (LLEN+X)>240 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=LINE,CNT=CNT+1,LINE="",LLEN=0
"RTN","LR7OR2",152,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OR2",153,0)
 . . I LINE'="" S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=LINE,CNT=CNT+1
"RTN","LR7OR2",154,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OR2",155,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Performing Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OR2",156,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="                "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OR2",157,0)
 ;
"RTN","LR7OR2",158,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" "
"RTN","LR7OR2",159,0)
 ;
"RTN","LR7OR2",160,0)
 K ^TMP("LRPLS",$J)
"RTN","LR7OR2",161,0)
 Q
"RTN","LR7ORB3")
0^192^B91737672
"RTN","LR7ORB3",1,0)
LR7ORB3 ;DALOI/JMC - Lab CPRS Notification Utility ;05/28/12  16:11
"RTN","LR7ORB3",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LR7ORB3",3,0)
 ;
"RTN","LR7ORB3",4,0)
 ; Reference to EN^ORB3 supported by ICR #1362
"RTN","LR7ORB3",5,0)
 ;
"RTN","LR7ORB3",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LR7ORB3",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LR7ORB3",8,0)
 ;
"RTN","LR7ORB3",9,0)
SETUP(LRDFN,LRSS,LRIDT,LRUID) ; Setup a CPRS notification
"RTN","LR7ORB3",10,0)
 ;  Call with LRDFN = file #63 IEN
"RTN","LR7ORB3",11,0)
 ;             LRSS = file #63 subscript
"RTN","LR7ORB3",12,0)
 ;            LRIDT = inverse d/t of entry in file #63
"RTN","LR7ORB3",13,0)
 ;            LRUID = accession's UID
"RTN","LR7ORB3",14,0)
 ;
"RTN","LR7ORB3",15,0)
 ; Only supports CH and MI. AP subscript handled by separate API.
"RTN","LR7ORB3",16,0)
 ;
"RTN","LR7ORB3",17,0)
 N DFN,DIC,DIR,DIRUT,DTOUT,DUOUT,LRC,LRDOCS,LRMORE,LRQUIT,LRTST,LRTYPE,LRX,LRXQA,LRY,X,Y
"RTN","LR7ORB3",18,0)
 ;
"RTN","LR7ORB3",19,0)
 S (LRTYPE,LRXQA,LRY)=""
"RTN","LR7ORB3",20,0)
 ;
"RTN","LR7ORB3",21,0)
 ; Select test to alert
"RTN","LR7ORB3",22,0)
 S LRY=$$SELTEST(LRUID)
"RTN","LR7ORB3",23,0)
 I 'LRY Q LRY
"RTN","LR7ORB3",24,0)
 S LRTST=$P(LRY,"^",2)
"RTN","LR7ORB3",25,0)
 ;
"RTN","LR7ORB3",26,0)
 ; Ask user type of CPRS notification to send
"RTN","LR7ORB3",27,0)
 S DIR(0)="SO^1:Lab results available;2:Abnormal lab results;3:Critical lab results"
"RTN","LR7ORB3",28,0)
 D ^DIR
"RTN","LR7ORB3",29,0)
 I $D(DIRUT) Q "0^User aborted"
"RTN","LR7ORB3",30,0)
 E  S LRTYPE=$S(Y=1:3,Y=2:14,1:57)
"RTN","LR7ORB3",31,0)
 ;
"RTN","LR7ORB3",32,0)
 ; Ask user for recipients.
"RTN","LR7ORB3",33,0)
 D GETDOCS(.LRDOCS,LRDFN,LRSS,LRIDT)
"RTN","LR7ORB3",34,0)
 S (LRC,LRXQA)=0
"RTN","LR7ORB3",35,0)
 F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  S LRXQA(+LRDOCS(LRC))=$P(LRDOCS(LRC),"^",3)
"RTN","LR7ORB3",36,0)
 I $O(LRXQA("")) D
"RTN","LR7ORB3",37,0)
 . N LRJ,LRMSG
"RTN","LR7ORB3",38,0)
 . D CURREC,EN^DDIOL(.LRMSG)
"RTN","LR7ORB3",39,0)
 ;
"RTN","LR7ORB3",40,0)
 S LRMORE=0 D MORE
"RTN","LR7ORB3",41,0)
 I LRMORE D LOOKUP
"RTN","LR7ORB3",42,0)
 I $O(LRXQA(""))'="" S LRXQA=1
"RTN","LR7ORB3",43,0)
 E  S LRY="0^No recipients selected"
"RTN","LR7ORB3",44,0)
 ;
"RTN","LR7ORB3",45,0)
 ; If everything OK then send alert
"RTN","LR7ORB3",46,0)
 I LRTYPE,LRXQA D
"RTN","LR7ORB3",47,0)
 . N LRJ,LRMSG
"RTN","LR7ORB3",48,0)
 . D CURREC,EN^DDIOL(.LRMSG)
"RTN","LR7ORB3",49,0)
 . K DIR
"RTN","LR7ORB3",50,0)
 . S DIR(0)="Y",DIR("A")="Send Alert",DIR("B")="YES"
"RTN","LR7ORB3",51,0)
 . D ^DIR
"RTN","LR7ORB3",52,0)
 . I Y'=1 S LRY="0^Alert Sending Aborted" Q
"RTN","LR7ORB3",53,0)
 . S LRY=$$OR(LRTYPE,LRDFN,LRSS,LRIDT,LRUID,.LRXQA,LRTST)
"RTN","LR7ORB3",54,0)
 ;
"RTN","LR7ORB3",55,0)
 Q LRY
"RTN","LR7ORB3",56,0)
 ;
"RTN","LR7ORB3",57,0)
 ;
"RTN","LR7ORB3",58,0)
 ;
"RTN","LR7ORB3",59,0)
GETDOCS(LRDOCS,LRDFN,LRSS,LRIDT) ; Return PCP(inpatient PC/attending/outpt PC/outpt assoc PC/outpt attending) and ordering provider
"RTN","LR7ORB3",60,0)
 ;
"RTN","LR7ORB3",61,0)
 N DFN,LRDPF,LRX,X
"RTN","LR7ORB3",62,0)
 ;
"RTN","LR7ORB3",63,0)
 S LRDOCS=0
"RTN","LR7ORB3",64,0)
 I LRSS'?1(1"CH",1"MI") Q
"RTN","LR7ORB3",65,0)
 ;
"RTN","LR7ORB3",66,0)
 S LRX=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^",$S(LRSS="CH":10,1:7))
"RTN","LR7ORB3",67,0)
 I LRX>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=LRX_"^"_$$NAME^XUSER(LRX,"F")_"^"_"Ordering Provider"
"RTN","LR7ORB3",68,0)
 ;
"RTN","LR7ORB3",69,0)
 S LRDPF=$P($G(^LR(LRDFN,0)),"^",2),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","LR7ORB3",70,0)
 I LRDPF=2 D
"RTN","LR7ORB3",71,0)
 . N LRDT,LRPCP,VADMVT,VAINDT
"RTN","LR7ORB3",72,0)
 . S LRPCP=0
"RTN","LR7ORB3",73,0)
 . S LRDT=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^")
"RTN","LR7ORB3",74,0)
 . I LRDT<1 S LRDT=DT
"RTN","LR7ORB3",75,0)
 . S VAINDT=LRDT D ADM^VADPT2
"RTN","LR7ORB3",76,0)
 . I VADMVT D  Q
"RTN","LR7ORB3",77,0)
 . . N VAHOW,VAIN,VAROOT
"RTN","LR7ORB3",78,0)
 . . D INP^VADPT
"RTN","LR7ORB3",79,0)
 . . I VAIN(2) S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=VAIN(2)_"^"_"Inpatient Primary Care Provider",LRPCP=1 Q
"RTN","LR7ORB3",80,0)
 . . I VAIN(11) S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=VAIN(11)_"^"_"Inpatient Attending Provider",LRPCP=1
"RTN","LR7ORB3",81,0)
 . S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,1)
"RTN","LR7ORB3",82,0)
 . I LRX>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=LRX_"^"_"Outpatient Primary Care Provider",LRPCP=1 Q
"RTN","LR7ORB3",83,0)
 . S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,2)
"RTN","LR7ORB3",84,0)
 . I LRX>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=LRX_"^"_"Outpatient Attending Provider",LRPCP=1
"RTN","LR7ORB3",85,0)
 Q
"RTN","LR7ORB3",86,0)
 ;
"RTN","LR7ORB3",87,0)
 ;
"RTN","LR7ORB3",88,0)
MORE ; Add names or mail groups to the lookup list?
"RTN","LR7ORB3",89,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LR7ORB3",90,0)
 ;
"RTN","LR7ORB3",91,0)
 ;ZEXCEPT: LRMORE,LRQUIT
"RTN","LR7ORB3",92,0)
 ;
"RTN","LR7ORB3",93,0)
 W !
"RTN","LR7ORB3",94,0)
 S LRMORE=1
"RTN","LR7ORB3",95,0)
 S DIR(0)="Y"
"RTN","LR7ORB3",96,0)
 S DIR("A")="Send the alert to additional recipients and/or mail groups"
"RTN","LR7ORB3",97,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LRAPRES1 AP ALERT",1,"Q")
"RTN","LR7ORB3",98,0)
 S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LR7ORB3",99,0)
 S DIR("?")="^D AHELP^LR7ORB3"
"RTN","LR7ORB3",100,0)
 D ^DIR
"RTN","LR7ORB3",101,0)
 I Y=0 S LRMORE=0 Q
"RTN","LR7ORB3",102,0)
 I $D(DUOUT)!($D(DTOUT)) S LRQUIT=1
"RTN","LR7ORB3",103,0)
 Q
"RTN","LR7ORB3",104,0)
 ;
"RTN","LR7ORB3",105,0)
 ;
"RTN","LR7ORB3",106,0)
LOOKUP ; Add additional names or mail groups to alert list.
"RTN","LR7ORB3",107,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,LRADL,LRDELETE,LRMSG,X,Y
"RTN","LR7ORB3",108,0)
 ;
"RTN","LR7ORB3",109,0)
 ;ZEXCEPT: LRQUIT,LRXQA
"RTN","LR7ORB3",110,0)
 ;
"RTN","LR7ORB3",111,0)
 S LRQUIT=0
"RTN","LR7ORB3",112,0)
 F  D  Q:LRQUIT
"RTN","LR7ORB3",113,0)
 . W !
"RTN","LR7ORB3",114,0)
 . K DIR
"RTN","LR7ORB3",115,0)
 . S LRDELETE=0
"RTN","LR7ORB3",116,0)
 . S DIR(0)="FO^3:30^I X["".""&(X'?1(1""G."",1""g."")1.E) K X"
"RTN","LR7ORB3",117,0)
 . S DIR("A")="Enter name or mail group"
"RTN","LR7ORB3",118,0)
 . S DIR("?",1)="Prefix selection with '-' to delete a recipient"
"RTN","LR7ORB3",119,0)
 . S DIR("?",2)="Enter lastname,firstname OR G.mailgroup OR ^ to exit"
"RTN","LR7ORB3",120,0)
 . S DIR("?")="Enter '??' for additional help and listing of currently selected recipients."
"RTN","LR7ORB3",121,0)
 . S DIR("??")="^D AHELP^LR7ORB3"
"RTN","LR7ORB3",122,0)
 . S DIR("PRE")="I '$D(DTOUT),$E(X)=""-"" S X=$E(X,2,9999),LRDELETE=1"
"RTN","LR7ORB3",123,0)
 . D ^DIR
"RTN","LR7ORB3",124,0)
 . I $D(DIRUT) S LRQUIT=1 Q
"RTN","LR7ORB3",125,0)
 . S LRADL=""
"RTN","LR7ORB3",126,0)
 . I Y?1(1"G.",1"g.")1.E S LRADL="G",X=$P(Y,".",2)
"RTN","LR7ORB3",127,0)
 . K DIC
"RTN","LR7ORB3",128,0)
 . S DIC(0)="EMQZ",DIC=$S(LRADL="G":3.8,1:200)
"RTN","LR7ORB3",129,0)
 . I LRADL="G" S DIC("S")="N LRX S LRX=^(0) I $S($P(LRX,U,2)=""PU"":1,$P($G(^XMB(3.8,+Y,3)),U)=DUZ:1,+$P(LRX,U,6):0,$D(^XMB(3.8,+Y,1,""B"",DUZ)):1,1:0)"
"RTN","LR7ORB3",130,0)
 . D ^DIC
"RTN","LR7ORB3",131,0)
 . Q:Y=-1
"RTN","LR7ORB3",132,0)
 . I LRDELETE D
"RTN","LR7ORB3",133,0)
 . . I LRADL="" K LRXQA($P(Y,"^")) Q
"RTN","LR7ORB3",134,0)
 . . I LRADL="G" K LRXQA("G."_$P(Y,"^",2))
"RTN","LR7ORB3",135,0)
 . E  D
"RTN","LR7ORB3",136,0)
 . . I LRADL="" S LRXQA($P(Y,"^"))="" Q
"RTN","LR7ORB3",137,0)
 . . I LRADL="G" S LRXQA("G."_$P(Y,"^",2))=""
"RTN","LR7ORB3",138,0)
 . K LRMSG
"RTN","LR7ORB3",139,0)
 . S LRMSG=$S(LRADL="G":"Mail group ",1:"User ")_$P(Y,"^",2)_$S(LRDELETE:" deleted from",1:" added to")_" alert list."
"RTN","LR7ORB3",140,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LR7ORB3",141,0)
 Q
"RTN","LR7ORB3",142,0)
 ;
"RTN","LR7ORB3",143,0)
 ;
"RTN","LR7ORB3",144,0)
AHELP ; Help Frame
"RTN","LR7ORB3",145,0)
 N LRI,LRMSG
"RTN","LR7ORB3",146,0)
 ;
"RTN","LR7ORB3",147,0)
 S LRMSG(1)="Enter either 'Y' or 'N'."
"RTN","LR7ORB3",148,0)
 S LRMSG(2)="If answered 'Yes', you will also have the opportunity to send alerts",LRMSG(2,"F")="!!"
"RTN","LR7ORB3",149,0)
 S LRMSG(3)="to additional recipients and/or mail groups."
"RTN","LR7ORB3",150,0)
 ;
"RTN","LR7ORB3",151,0)
 ; Get list of current recipients
"RTN","LR7ORB3",152,0)
 D CURREC
"RTN","LR7ORB3",153,0)
 ;
"RTN","LR7ORB3",154,0)
 D EN^DDIOL(.LRMSG)
"RTN","LR7ORB3",155,0)
 Q
"RTN","LR7ORB3",156,0)
 ;
"RTN","LR7ORB3",157,0)
 ;
"RTN","LR7ORB3",158,0)
CURREC ; Build list of current recipients.
"RTN","LR7ORB3",159,0)
 ;
"RTN","LR7ORB3",160,0)
 N LRI,LRJ
"RTN","LR7ORB3",161,0)
 ;
"RTN","LR7ORB3",162,0)
 ;ZEXCEPT: LRMSG,LRXQA
"RTN","LR7ORB3",163,0)
 ;
"RTN","LR7ORB3",164,0)
 S LRJ=$O(LRMSG(""),-1)
"RTN","LR7ORB3",165,0)
 ;
"RTN","LR7ORB3",166,0)
 I '$D(LRXQA) S LRJ=LRJ+1,LRMSG(LRJ)="No recipients listed",LRMSG(LRJ,"F")="!!" Q
"RTN","LR7ORB3",167,0)
 ;
"RTN","LR7ORB3",168,0)
 S LRI="",LRJ=LRJ+1,LRMSG(LRJ)="The current recipients will be:",LRMSG(LRJ,"F")="!!"
"RTN","LR7ORB3",169,0)
 F  S LRI=$O(LRXQA(LRI)) Q:LRI=""  D
"RTN","LR7ORB3",170,0)
 . S LRJ=LRJ+1,LRMSG(LRJ)=$S(LRI:$$NAME^XUSER(LRI,"F"),1:LRI)
"RTN","LR7ORB3",171,0)
 . I LRXQA(LRI)'="" S LRMSG(LRJ)=LRMSG(LRJ)_"  ["_LRXQA(LRI)_"]"
"RTN","LR7ORB3",172,0)
 ;
"RTN","LR7ORB3",173,0)
 Q
"RTN","LR7ORB3",174,0)
 ;
"RTN","LR7ORB3",175,0)
 ;
"RTN","LR7ORB3",176,0)
OR(LRTYPE,LRDFN,LRSS,LRIDT,LRUID,LRXQA,LRTST) ; Send OR notification
"RTN","LR7ORB3",177,0)
 ;
"RTN","LR7ORB3",178,0)
 N DFN,LRIENS,LRMSG,LRODT,LROE,LROIFN,LRPREFIX,LRSN,LRX,LRY
"RTN","LR7ORB3",179,0)
 ;
"RTN","LR7ORB3",180,0)
 ; Call with LRTYPE = type OERR notification (currently supports 3, 14, 57)
"RTN","LR7ORB3",181,0)
 ;            LRDFN = file #63 IEN
"RTN","LR7ORB3",182,0)
 ;             LRSS = file #63 subscript
"RTN","LR7ORB3",183,0)
 ;            LRIDT = inverse d/t of entry in file #63
"RTN","LR7ORB3",184,0)
 ;            LRUID = accession's UID
"RTN","LR7ORB3",185,0)
 ;            LRXQA = recipient array
"RTN","LR7ORB3",186,0)
 ;            LRTST = test name being alerted
"RTN","LR7ORB3",187,0)
 ;
"RTN","LR7ORB3",188,0)
 ; Only supports CH and MI. AP subscript handled by separate API.
"RTN","LR7ORB3",189,0)
 ;
"RTN","LR7ORB3",190,0)
 I LRSS'?1(1"CH",1"MI") Q "0^Lab Subscript not supported"
"RTN","LR7ORB3",191,0)
 ;
"RTN","LR7ORB3",192,0)
 S DFN=$P(^LR(LRDFN,0),"^",3)
"RTN","LR7ORB3",193,0)
 ;
"RTN","LR7ORB3",194,0)
 S LRPREFIX=$S(LRTYPE=3:"",LRTYPE=14:"Abnormal ",LRTYPE=57:"Critical ",1:"")
"RTN","LR7ORB3",195,0)
 ;
"RTN","LR7ORB3",196,0)
 S LRX=$$CHECKUID^LRWU4(LRUID,LRSS)
"RTN","LR7ORB3",197,0)
 I LRX<1 Q "0^Accession's UID not valid"
"RTN","LR7ORB3",198,0)
 S LRY=$G(^LRO(68,$P(LRX,"^",2),1,$P(LRX,"^",3),1,$P(LRX,"^",4),0))
"RTN","LR7ORB3",199,0)
 S LRODT=+$P(LRY,"^",4),LRSN=+$P(LRY,"^",5),(LROE,LROIFN)=""
"RTN","LR7ORB3",200,0)
 I LRODT,LRSN D
"RTN","LR7ORB3",201,0)
 . S LROIFN=$P($G(^LRO(69,LRODT,1,LRSN,0)),"^",11)
"RTN","LR7ORB3",202,0)
 . S LROE=$P($G(^LRO(69,LRODT,1,LRSN,.1)),"^")
"RTN","LR7ORB3",203,0)
 ;
"RTN","LR7ORB3",204,0)
 S LRIENS=LROIFN_"@OR|"_LROE_";"_LRODT_";"_LRSN_";"_LRSS_";"_LRIDT_"@LRCH"
"RTN","LR7ORB3",205,0)
 ;
"RTN","LR7ORB3",206,0)
 I LRSS="CH" D
"RTN","LR7ORB3",207,0)
 . I LRTYPE=14!(LRTYPE=57) S LRMSG=LRPREFIX_"lab results:"
"RTN","LR7ORB3",208,0)
 . E  S LRMSG="Lab results:"
"RTN","LR7ORB3",209,0)
 ;
"RTN","LR7ORB3",210,0)
 I LRSS="MI" D
"RTN","LR7ORB3",211,0)
 . I LRTYPE=14!(LRTYPE=57) S LRMSG=LRPREFIX_"microbiology results:"
"RTN","LR7ORB3",212,0)
 . E  S LRMSG="Microbiology results:"
"RTN","LR7ORB3",213,0)
 ;
"RTN","LR7ORB3",214,0)
 S LRMSG=LRMSG_" - ["_LRTST_"]"
"RTN","LR7ORB3",215,0)
 ;
"RTN","LR7ORB3",216,0)
 ; OERR parameters:
"RTN","LR7ORB3",217,0)
 ;          ORN: notification id (#100.9 ien)
"RTN","LR7ORB3",218,0)
 ;          |      ORBDFN: patient id (#2 ien)
"RTN","LR7ORB3",219,0)
 ;          |      |   ORNUM: order number (#100 ien)
"RTN","LR7ORB3",220,0)
 ;          |      |   |       ORBADUZ: recipient array
"RTN","LR7ORB3",221,0)
 ;          |      |   |       |     ORBPMSG: message text
"RTN","LR7ORB3",222,0)
 ;          |      |   |       |     |     ORBPDATA lab result reference
"RTN","LR7ORB3",223,0)
 ;          |      |   |       |     |     |
"RTN","LR7ORB3",224,0)
 D EN^ORB3(LRTYPE,DFN,LROIFN,.LRXQA,LRMSG,LRIENS)
"RTN","LR7ORB3",225,0)
 ;
"RTN","LR7ORB3",226,0)
 Q "1^Alert Sent"
"RTN","LR7ORB3",227,0)
 ;
"RTN","LR7ORB3",228,0)
 ;
"RTN","LR7ORB3",229,0)
SELTEST(LRUID) ; Select test on accession for alert messsage - screen out workload tests
"RTN","LR7ORB3",230,0)
 ;
"RTN","LR7ORB3",231,0)
 ; Call with LRUID = accession's UID
"RTN","LR7ORB3",232,0)
 ; Returns     LRY = 1^test names for alert message
"RTN","LR7ORB3",233,0)
 ;                   0^error message
"RTN","LR7ORB3",234,0)
 ;
"RTN","LR7ORB3",235,0)
 N DIC,DIR,DIROUT,DIRUT,DUOUT,LRAA,LRAD,LRADO,LRAN,LRI,LRJ,LRTEST,LRX,LRY,X,Y
"RTN","LR7ORB3",236,0)
 ;
"RTN","LR7ORB3",237,0)
 S LRY=1
"RTN","LR7ORB3",238,0)
 ; Resolve UID to global subscripts.
"RTN","LR7ORB3",239,0)
 S LRX=$$CHECKUID^LRWU4(LRUID)
"RTN","LR7ORB3",240,0)
 I LRX S LRAA=$P(LRX,"^",2),LRAD=$P(LRX,"^",3),LRAN=$P(LRX,"^",4)
"RTN","LR7ORB3",241,0)
 E  S LRY="0^Invalid Accession UID"
"RTN","LR7ORB3",242,0)
 I 'LRY Q LRY
"RTN","LR7ORB3",243,0)
 ;
"RTN","LR7ORB3",244,0)
 ; Build list of tests on accession
"RTN","LR7ORB3",245,0)
 ;  - if accession has rolled over then also check original accession
"RTN","LR7ORB3",246,0)
 S LRADO=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^",3)
"RTN","LR7ORB3",247,0)
 F LRJ=1,2 D
"RTN","LR7ORB3",248,0)
 . I LRJ=2,LRAD=LRADO Q
"RTN","LR7ORB3",249,0)
 . I LRJ=2 S LRAD=LRADO
"RTN","LR7ORB3",250,0)
 . S LRI=0
"RTN","LR7ORB3",251,0)
 . F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:'LRI  I $P(^LAB(60,LRI,0),"^",4)'="WK" S LRTEST(LRI)=""
"RTN","LR7ORB3",252,0)
 ;
"RTN","LR7ORB3",253,0)
 I '$D(LRTEST) S LRY="O^No tests on accession"
"RTN","LR7ORB3",254,0)
 ;
"RTN","LR7ORB3",255,0)
 I 'LRY Q LRY
"RTN","LR7ORB3",256,0)
 ;
"RTN","LR7ORB3",257,0)
 S DIC="^LAB(60,",DIC(0)="AEMQZ"
"RTN","LR7ORB3",258,0)
 S DIC("A")="Select TEST: ",DIC("S")="I $D(LRTEST(Y))"
"RTN","LR7ORB3",259,0)
 D ^DIC
"RTN","LR7ORB3",260,0)
 I Y<1 S LRY="0^User aborted"
"RTN","LR7ORB3",261,0)
 E  S LRY="1^"_Y(0,0)
"RTN","LR7ORB3",262,0)
 ;
"RTN","LR7ORB3",263,0)
 Q LRY
"RTN","LR7ORB3",264,0)
 ;
"RTN","LR7ORB3",265,0)
 ;
"RTN","LR7ORB3",266,0)
ASKXQA(LRDFN,LRSS,LRIDT,LRUID,LRDEFAULT) ; Ask if user wants to send a CPRS notification/alert for this accession.
"RTN","LR7ORB3",267,0)
 ;  Call with LRDFN = file #63 IEN
"RTN","LR7ORB3",268,0)
 ;             LRSS = file #63 subscript
"RTN","LR7ORB3",269,0)
 ;            LRIDT = inverse d/t of entry in file #63
"RTN","LR7ORB3",270,0)
 ;            LRUID = accession's UID
"RTN","LR7ORB3",271,0)
 ;        LRDEFAULT = default answer for DIR call (1-NO,2-YES)
"RTN","LR7ORB3",272,0)
 ;
"RTN","LR7ORB3",273,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRY,X,Y
"RTN","LR7ORB3",274,0)
 ;
"RTN","LR7ORB3",275,0)
 S LRDEFAULT=$G(LRDEFAULT)
"RTN","LR7ORB3",276,0)
 S DIR(0)="Y",DIR("A")="Send a CPRS Alert/Notification"
"RTN","LR7ORB3",277,0)
 S DIR("B")=$S(LRDEFAULT=2:"YES",1:"NO")
"RTN","LR7ORB3",278,0)
 D ^DIR
"RTN","LR7ORB3",279,0)
 I Y<1 Q
"RTN","LR7ORB3",280,0)
 ;
"RTN","LR7ORB3",281,0)
 S LRY=$$SETUP(LRDFN,LRSS,LRIDT,LRUID)
"RTN","LR7ORB3",282,0)
 W " ...",$P(LRY,"^",2)
"RTN","LR7ORB3",283,0)
 ;
"RTN","LR7ORB3",284,0)
 Q
"RTN","LR7ORB3",285,0)
 ;
"RTN","LR7ORB3",286,0)
 ;
"RTN","LR7ORB3",287,0)
SENDOR ; Send a CPRS alert for an accession.
"RTN","LR7ORB3",288,0)
 ;  - User is prompted to select the accession and tests.
"RTN","LR7ORB3",289,0)
 ;
"RTN","LR7ORB3",290,0)
 N %ZIS,DIC,DIR,DIROUT,DIRUT,DUOUT,LRAA,LRACC,LRAD,LRAN,LRDFN,LRDPF,LREND,LRIDT,LRLAB,LRSS,LRSTOP,LRUID,LRVBY,LRY,X,Y
"RTN","LR7ORB3",291,0)
 ;
"RTN","LR7ORB3",292,0)
 F  D  Q:LREND!LRSTOP
"RTN","LR7ORB3",293,0)
 . S (LREND,LRSTOP,LRVBY)=0
"RTN","LR7ORB3",294,0)
 . S LRACC="" D ^LRWU4
"RTN","LR7ORB3",295,0)
 . I LRAN<1 S LREND=1 Q
"RTN","LR7ORB3",296,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"Doesn't exist." Q
"RTN","LR7ORB3",297,0)
 . K DIC,LRDFN,LRDPF,LRIDT,LRSS
"RTN","LR7ORB3",298,0)
 . S LRSS=$P(^LRO(68,LRAA,0),"^",2),LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^"),LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LR7ORB3",299,0)
 . S LRDPF=$P(^LR(LRDFN,0),"^",2)
"RTN","LR7ORB3",300,0)
 . I LRDPF'=2 W !,"CPRS Alerts only support patients from the PATIENT file (#2)" Q
"RTN","LR7ORB3",301,0)
 . S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LR7ORB3",302,0)
 . I LRUID="" W !,"Accession missing associated UID" Q
"RTN","LR7ORB3",303,0)
 . I LRSS=""!(LRIDT<1)!(LRDFN<1) W !,"Incomplete accession - unable to identify results." Q
"RTN","LR7ORB3",304,0)
 . I LRSS'?1(1"CH",1"MI") D  Q
"RTN","LR7ORB3",305,0)
 . . W !,"This option only supports CH and MI subscripted accessions."
"RTN","LR7ORB3",306,0)
 . . W !,"Use option 'Send an AP Alert' [LRAP ALERT] to send AP alerts"
"RTN","LR7ORB3",307,0)
 . I '$$OK2SEND^LA7SRR W !,"This accession has not been released." Q
"RTN","LR7ORB3",308,0)
 . S LRY=$$SETUP(LRDFN,LRSS,LRIDT,LRUID)
"RTN","LR7ORB3",309,0)
 . W " ...",$P(LRY,"^",2)
"RTN","LR7ORB3",310,0)
 ;
"RTN","LR7ORB3",311,0)
 Q
"RTN","LR7OS")
0^171^B192100
"RTN","LR7OS",1,0)
LR7OS ;DALOI/STAFF - Silent Report utilities ;May 14, 2008
"RTN","LR7OS",2,0)
 ;;5.2;LAB SERVICE;**121,350**;Sep 27, 1994;Build 230
"RTN","LR7OS",3,0)
 ;
"RTN","LR7OS",4,0)
S(X,Y,Z) ;Pad over
"RTN","LR7OS",5,0)
 ; X=Column #
"RTN","LR7OS",6,0)
 ; Y=Current length
"RTN","LR7OS",7,0)
 ; Z=Text
"RTN","LR7OS",8,0)
 ; SP=TEXT SENT
"RTN","LR7OS",9,0)
 ; CCNT=Line position after input text
"RTN","LR7OS",10,0)
 ;
"RTN","LR7OS",11,0)
 I '$D(Z) Q ""
"RTN","LR7OS",12,0)
 S SP=Z
"RTN","LR7OS",13,0)
 I X,Y,X>Y S SP=$$RJ^XLFSTR(" ",X-Y)_Z
"RTN","LR7OS",14,0)
 S CCNT=$$INC(CCNT,SP)
"RTN","LR7OS",15,0)
 Q SP
"RTN","LR7OS",16,0)
 ;
"RTN","LR7OS",17,0)
 ;
"RTN","LR7OS",18,0)
INC(X,Y) ;Character position count
"RTN","LR7OS",19,0)
 ; X=Current count
"RTN","LR7OS",20,0)
 ; Y=Text
"RTN","LR7OS",21,0)
 S INC=X+$L(Y)
"RTN","LR7OS",22,0)
 Q INC
"RTN","LR7OSAP")
0^84^B70117996
"RTN","LR7OSAP",1,0)
LR7OSAP ;DALOI/STAFF - Silent AP rpt (compare to LRAPCUM) ;12/03/09  15:42
"RTN","LR7OSAP",2,0)
 ;;5.2;LAB SERVICE;**121,187,230,256,259,317,350**;Sep 27, 1994;Build 230
"RTN","LR7OSAP",3,0)
 ;
"RTN","LR7OSAP",4,0)
GET I '$D(^LR(LRDFN,LRSS)) Q
"RTN","LR7OSAP",5,0)
 N FST,X
"RTN","LR7OSAP",6,0)
 S (A,FST)=0,LRI=LRIN
"RTN","LR7OSAP",7,0)
 F  S LRI=$O(^LR(LRDFN,LRSS,LRI)) Q:'LRI!(CT1>COUNT)!(LRI>LROUT)  S B=$G(^(LRI,0)),CT1=CT1+1 I B D
"RTN","LR7OSAP",8,0)
 . D W
"RTN","LR7OSAP",9,0)
 . S X="",$P(X,"=",GIOM)=""
"RTN","LR7OSAP",10,0)
 . D LN
"RTN","LR7OSAP",11,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,X)
"RTN","LR7OSAP",12,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSAP",13,0)
 ;
"RTN","LR7OSAP",14,0)
 I 'FST D
"RTN","LR7OSAP",15,0)
 . I LRSS="SP",'$D(SUBHEAD("SURGICAL PATHOLOGY")) Q
"RTN","LR7OSAP",16,0)
 . I LRSS="CY",'$D(SUBHEAD("CYTOPATHOLOGY")) Q
"RTN","LR7OSAP",17,0)
 . I LRSS="EM",'$D(SUBHEAD("EM")) Q
"RTN","LR7OSAP",18,0)
 . D LINE^LR7OSUM4,LN
"RTN","LR7OSAP",19,0)
 . S X=GIOM/2-($L(LRAA(1))/2+5)
"RTN","LR7OSAP",20,0)
 . S ^TMP("LRH",$J,LRAA(1))=GCNT
"RTN","LR7OSAP",21,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(X,CCNT,"---- "_LRAA(1)_" ----")
"RTN","LR7OSAP",22,0)
 . D LN
"RTN","LR7OSAP",23,0)
 . S ^TMP("LRC",$J,GCNT,0)="No "_$S(LRSS="SP":"Surgical Pathology",LRSS="CY":"Cytology",LRSS="EM":"EM",1:"")_" reports available for date range ..."
"RTN","LR7OSAP",24,0)
 Q
"RTN","LR7OSAP",25,0)
 ;
"RTN","LR7OSAP",26,0)
 ;
"RTN","LR7OSAP",27,0)
F(PIECE) ;
"RTN","LR7OSAP",28,0)
 ;If PIECE=1, then only get 1st piece; otherwise get whole node
"RTN","LR7OSAP",29,0)
 I '$G(PIECE) D WRAP^LR7OSAP1("^LR("_LRDFN_","""_LRSS_""","_LRI_","_LRV_")",79) Q
"RTN","LR7OSAP",30,0)
 S C=0
"RTN","LR7OSAP",31,0)
 F  S C=$O(^LR(LRDFN,LRSS,LRI,LRV,C)) Q:'C  S X=$P(^(C,0),"^") D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,X)
"RTN","LR7OSAP",32,0)
 Q
"RTN","LR7OSAP",33,0)
 ;
"RTN","LR7OSAP",34,0)
 ;
"RTN","LR7OSAP",35,0)
W ; Called from above and LR7OSAP4
"RTN","LR7OSAP",36,0)
 N LR,LRPTR,LRMD,LRTEXT,LRV,LRW,LRX
"RTN","LR7OSAP",37,0)
 I 'FST D
"RTN","LR7OSAP",38,0)
 . D LINE^LR7OSUM4,LN
"RTN","LR7OSAP",39,0)
 . S X=GIOM/2-($L(LRAA(1))/2+5)
"RTN","LR7OSAP",40,0)
 . S ^TMP("LRH",$J,LRAA(1))=GCNT
"RTN","LR7OSAP",41,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(X,CCNT,"---- "_LRAA(1)_" ----")
"RTN","LR7OSAP",42,0)
 I FST D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Next "_LRAA(1)_" Specimen...")
"RTN","LR7OSAP",43,0)
 S FST=1
"RTN","LR7OSAP",44,0)
 ;
"RTN","LR7OSAP",45,0)
 ; Check for TIU document report and use instead and quit
"RTN","LR7OSAP",46,0)
 D TIUCHK^LRAPUTL(.LRPTR,LRDFN,LRSS,LRI)
"RTN","LR7OSAP",47,0)
 I +$G(LRPTR) D  Q
"RTN","LR7OSAP",48,0)
 . N LRCKSUM,LRCNT,LRCNTT,LRENCRYP,LRFLG,LRHFLG,LROR,LRQUIT,LRTXT
"RTN","LR7OSAP",49,0)
 . D MAIN^LR7OSAP3(LRPTR)
"RTN","LR7OSAP",50,0)
 ;
"RTN","LR7OSAP",51,0)
 ; Display reporting lab
"RTN","LR7OSAP",52,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OSAP",53,0)
 . S LRX=+$G(^LR(LRDFN,LRSS,LRI,"RF"))
"RTN","LR7OSAP",54,0)
 . I LRX D RL^LR7OSMZU(LRX)
"RTN","LR7OSAP",55,0)
 ;
"RTN","LR7OSAP",56,0)
 S Y=+B
"RTN","LR7OSAP",57,0)
 D D^LRU
"RTN","LR7OSAP",58,0)
 S LRW(1)=Y,Y=$P(B,"^",10)
"RTN","LR7OSAP",59,0)
 D D^LRU
"RTN","LR7OSAP",60,0)
 S LRW(10)=Y,Y=$P(B,"^",3)
"RTN","LR7OSAP",61,0)
 D D^LRU
"RTN","LR7OSAP",62,0)
 S LRW(3)=Y,X=$P(B,"^",2)
"RTN","LR7OSAP",63,0)
 D:X D^LRUA
"RTN","LR7OSAP",64,0)
 S LRW(2)=X,LRW(11)=$P(B,"^",11),X=$P(B,"^",4)
"RTN","LR7OSAP",65,0)
 D:X D^LRUA
"RTN","LR7OSAP",66,0)
 S LRW(4)=X,X=$P(B,"^",7)
"RTN","LR7OSAP",67,0)
 D:X D^LRUA
"RTN","LR7OSAP",68,0)
 S LRW(7)=X
"RTN","LR7OSAP",69,0)
 D LN
"RTN","LR7OSAP",70,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Date Spec taken: "_LRW(1)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(38,CCNT,"Pathologist:"_LRW(2))
"RTN","LR7OSAP",71,0)
 D LN
"RTN","LR7OSAP",72,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Date Spec rec'd: "_LRW(10)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(38,CCNT,$S(LRSS="SP":"Resident: ",1:"Tech: ")_LRW(4))
"RTN","LR7OSAP",73,0)
 D LN
"RTN","LR7OSAP",74,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$S($L(LRW(3)):"Date  completed: ",1:"REPORT INCOMPLETE")_LRW(3)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(38,CCNT,"Accession #: "_$P(B,"^",6))
"RTN","LR7OSAP",75,0)
 D LN
"RTN","LR7OSAP",76,0)
 S $P(LR("%"),"-",GIOM)=""
"RTN","LR7OSAP",77,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Submitted by: "_$P(B,"^",5)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(38,CCNT,"Practitioner:"_LRW(7))
"RTN","LR7OSAP",78,0)
 D LN
"RTN","LR7OSAP",79,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LR("%"))
"RTN","LR7OSAP",80,0)
 ;
"RTN","LR7OSAP",81,0)
 I $D(^LR(LRDFN,LRSS,LRI,.1)) D
"RTN","LR7OSAP",82,0)
 . D LN
"RTN","LR7OSAP",83,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Specimen: ")
"RTN","LR7OSAP",84,0)
 . S LRV=.1
"RTN","LR7OSAP",85,0)
 . D F(1)
"RTN","LR7OSAP",86,0)
 ;
"RTN","LR7OSAP",87,0)
 ; Don't show anymore data if not verified.
"RTN","LR7OSAP",88,0)
 I LRW(11)="" D  Q
"RTN","LR7OSAP",89,0)
 . D A,LN
"RTN","LR7OSAP",90,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Report not verified")
"RTN","LR7OSAP",91,0)
 ;
"RTN","LR7OSAP",92,0)
 I $P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),"^",4) D
"RTN","LR7OSAP",93,0)
 . D LN
"RTN","LR7OSAP",94,0)
 . S LRTEXT="SUPPLEMENTARY REPORT HAS BEEN ADDED"
"RTN","LR7OSAP",95,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(14,CCNT,"*+* "_LRTEXT_" *+*")
"RTN","LR7OSAP",96,0)
 . D LN
"RTN","LR7OSAP",97,0)
 . S LRTEXT="REFER TO BOTTOM OF REPORT"
"RTN","LR7OSAP",98,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(19,CCNT,"*+* "_LRTEXT_" *+*")
"RTN","LR7OSAP",99,0)
 . D LN
"RTN","LR7OSAP",100,0)
 ;
"RTN","LR7OSAP",101,0)
 I $D(^LR(LRDFN,LRSS,LRI,.2)) D
"RTN","LR7OSAP",102,0)
 . D LN
"RTN","LR7OSAP",103,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Brief Clinical History:")
"RTN","LR7OSAP",104,0)
 . S LRV=.2 D F()
"RTN","LR7OSAP",105,0)
 ;
"RTN","LR7OSAP",106,0)
 I $D(^LR(LRDFN,LRSS,LRI,.3)) D
"RTN","LR7OSAP",107,0)
 . D LN
"RTN","LR7OSAP",108,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Preoperative Diagnosis:")
"RTN","LR7OSAP",109,0)
 . S LRV=.3 D F()
"RTN","LR7OSAP",110,0)
 ;
"RTN","LR7OSAP",111,0)
 I $D(^LR(LRDFN,LRSS,LRI,.4)) D
"RTN","LR7OSAP",112,0)
 . D LN
"RTN","LR7OSAP",113,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Operative Findings:")
"RTN","LR7OSAP",114,0)
 . S LRV=.4 D F()
"RTN","LR7OSAP",115,0)
 ;
"RTN","LR7OSAP",116,0)
 I $D(^LR(LRDFN,LRSS,LRI,.5)) D
"RTN","LR7OSAP",117,0)
 . D LN
"RTN","LR7OSAP",118,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Postoperative Diagnosis:")
"RTN","LR7OSAP",119,0)
 . S LRV=.5 D F()
"RTN","LR7OSAP",120,0)
 ;
"RTN","LR7OSAP",121,0)
 D SET^LRUA
"RTN","LR7OSAP",122,0)
 ;
"RTN","LR7OSAP",123,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.3,0)) D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LR(69.2,.13)) I $P($G(^LR(LRDFN,LRSS,LRI,6,0)),U,4) S LR(0)=6 D MOD^LR7OSAP1
"RTN","LR7OSAP",124,0)
 S LRV=1.3
"RTN","LR7OSAP",125,0)
 D F()
"RTN","LR7OSAP",126,0)
 ;
"RTN","LR7OSAP",127,0)
 I $O(^LR(LRDFN,LRSS,LRI,1,0)) D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LR(69.2,.03)) I $P($G(^LR(LRDFN,LRSS,LRI,7,0)),U,4) S LR(0)=7 D MOD^LR7OSAP1
"RTN","LR7OSAP",128,0)
 S LRV=1
"RTN","LR7OSAP",129,0)
 D F()
"RTN","LR7OSAP",130,0)
 ;
"RTN","LR7OSAP",131,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.1,0)) D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LR(69.2,.04)_" (Date Spec taken: "_LRW(1)_")") I $P($G(^LR(LRDFN,LRSS,LRI,4,0)),U,4) S LR(0)=4 D MOD^LR7OSAP1
"RTN","LR7OSAP",132,0)
 S LRV=1.1
"RTN","LR7OSAP",133,0)
 D F()
"RTN","LR7OSAP",134,0)
 ;
"RTN","LR7OSAP",135,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.4,0)) D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LR(69.2,.14)) I $P($G(^LR(LRDFN,LRSS,LRI,5,0)),U,4) S LR(0)=5 D MOD^LR7OSAP1
"RTN","LR7OSAP",136,0)
 S LRV=1.4
"RTN","LR7OSAP",137,0)
 D F()
"RTN","LR7OSAP",138,0)
 ;
"RTN","LR7OSAP",139,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.2,0)) D
"RTN","LR7OSAP",140,0)
 . D LN
"RTN","LR7OSAP",141,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Supplementary Report:")
"RTN","LR7OSAP",142,0)
 . S C=0 F  S C=$O(^LR(LRDFN,LRSS,LRI,1.2,C)) Q:'C  D
"RTN","LR7OSAP",143,0)
 .. S X=^LR(LRDFN,LRSS,LRI,1.2,C,0),Y=+X,X=$P(X,U,2)
"RTN","LR7OSAP",144,0)
 .. ;Don't even print supp date if supp is not released
"RTN","LR7OSAP",145,0)
 .. Q:'X
"RTN","LR7OSAP",146,0)
 .. D D^LRU,LN
"RTN","LR7OSAP",147,0)
 .. S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,"Date: "_Y)
"RTN","LR7OSAP",148,0)
 .. I 'X S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(1,CCNT," not verified")
"RTN","LR7OSAP",149,0)
 .. I $O(^LR(LRDFN,LRSS,LRI,1.2,C,2,0)) D MODSR^LR7OSAP1
"RTN","LR7OSAP",150,0)
 .. D:X U
"RTN","LR7OSAP",151,0)
 I $D(^LR(LRDFN,LRSS,LRI,2)) D B
"RTN","LR7OSAP",152,0)
 ;
"RTN","LR7OSAP",153,0)
 I $D(^LR(LRDFN,LRSS,LRI,99)) D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Comments:") S LRV=99 D F(1)
"RTN","LR7OSAP",154,0)
 ;
"RTN","LR7OSAP",155,0)
 ; List performing labs
"RTN","LR7OSAP",156,0)
 D PPL^LR7OSMZ1(LRDFN,LRSS,LRI)
"RTN","LR7OSAP",157,0)
 ;
"RTN","LR7OSAP",158,0)
 Q
"RTN","LR7OSAP",159,0)
 ;
"RTN","LR7OSAP",160,0)
 ;
"RTN","LR7OSAP",161,0)
U ;
"RTN","LR7OSAP",162,0)
 D WRAP^LR7OSAP1("^LR("_LRDFN_","""_LRSS_""","_LRI_",1.2,"_C_",1)",79)
"RTN","LR7OSAP",163,0)
 Q
"RTN","LR7OSAP",164,0)
 ;
"RTN","LR7OSAP",165,0)
 ;
"RTN","LR7OSAP",166,0)
B ;
"RTN","LR7OSAP",167,0)
 S C=0
"RTN","LR7OSAP",168,0)
 F  S C=$O(^LR(LRDFN,LRSS,LRI,2,C)) Q:'C  D SP
"RTN","LR7OSAP",169,0)
 Q
"RTN","LR7OSAP",170,0)
 ;
"RTN","LR7OSAP",171,0)
 ;
"RTN","LR7OSAP",172,0)
SP ;
"RTN","LR7OSAP",173,0)
 S G=0
"RTN","LR7OSAP",174,0)
 F  S G=$O(^LR(LRDFN,LRSS,LRI,2,C,5,G)) Q:'G  S X=^(G,0),Y=$P(X,"^",2),E=$P(X,"^",3),E(1)=$P(X,"^")_":",E(1)=$P($P($G(LR(LRSS)),E(1),2),";") D D^LRU S T(2)=Y D WP
"RTN","LR7OSAP",175,0)
 Q
"RTN","LR7OSAP",176,0)
 ;
"RTN","LR7OSAP",177,0)
 ;
"RTN","LR7OSAP",178,0)
WP ;
"RTN","LR7OSAP",179,0)
 D LN
"RTN","LR7OSAP",180,0)
 S X=E(1)_" "_E_" Date: "_T(2)_" ",^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,X)
"RTN","LR7OSAP",181,0)
 D WRAP^LR7OSAP1("^LR("_LRDFN_","""_LRSS_""","_LRI_",2,"_C_",5,"_G_",1)",79)
"RTN","LR7OSAP",182,0)
 Q
"RTN","LR7OSAP",183,0)
 ;
"RTN","LR7OSAP",184,0)
 ;
"RTN","LR7OSAP",185,0)
A ;
"RTN","LR7OSAP",186,0)
 D WRAP^LR7OSAP1("^LR("_LRDFN_","""_LRSS_""","_LRI_",97)",79)
"RTN","LR7OSAP",187,0)
 Q
"RTN","LR7OSAP",188,0)
 ;
"RTN","LR7OSAP",189,0)
 ;
"RTN","LR7OSAP",190,0)
LN ;Increment the counter
"RTN","LR7OSAP",191,0)
 S GCNT=GCNT+1,CCNT=1
"RTN","LR7OSAP",192,0)
 Q
"RTN","LR7OSAP",193,0)
 ;
"RTN","LR7OSAP",194,0)
 ;
"RTN","LR7OSAP",195,0)
EN ; Get AP results
"RTN","LR7OSAP",196,0)
 ; Called by LR7OSUM
"RTN","LR7OSAP",197,0)
 ;
"RTN","LR7OSAP",198,0)
 N GIOM
"RTN","LR7OSAP",199,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSAP",200,0)
 I GIOM="" D
"RTN","LR7OSAP",201,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR AP GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSAP",202,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSAP",203,0)
 ;
"RTN","LR7OSAP",204,0)
 ; Display "Printed at:" notice
"RTN","LR7OSAP",205,0)
 I '$O(^TMP("LRC",$J,0)),$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC^LR7OSMZU
"RTN","LR7OSAP",206,0)
 ;
"RTN","LR7OSAP",207,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("SURGICAL PATHOLOGY"))) D SPA
"RTN","LR7OSAP",208,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("CYTOPATHOLOGY"))) D CY
"RTN","LR7OSAP",209,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("EM"))) D EM
"RTN","LR7OSAP",210,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("AUTOPSY"))) D AU
"RTN","LR7OSAP",211,0)
 Q
"RTN","LR7OSAP",212,0)
 ;
"RTN","LR7OSAP",213,0)
 ;
"RTN","LR7OSAP",214,0)
CY ; Cytology results
"RTN","LR7OSAP",215,0)
 ;
"RTN","LR7OSAP",216,0)
 I '$D(^LR(LRDFN,"CY")) D  Q
"RTN","LR7OSAP",217,0)
 . I '$D(SUBHEAD("CYTOPATHOLOGY")) Q
"RTN","LR7OSAP",218,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSAP",219,0)
 . D LN S ^TMP("LRC",$J,GCNT,0)="No Cytology reports available..."
"RTN","LR7OSAP",220,0)
 ;
"RTN","LR7OSAP",221,0)
 S LRSS="CY",LRAA(1)="CYTOPATHOLOGY",LRAA=+$O(^LRO(68,"B",LRAA(1),0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP",222,0)
 D GET
"RTN","LR7OSAP",223,0)
 Q
"RTN","LR7OSAP",224,0)
 ;
"RTN","LR7OSAP",225,0)
 ;
"RTN","LR7OSAP",226,0)
SPA ; Surgical Pathology results
"RTN","LR7OSAP",227,0)
 ;
"RTN","LR7OSAP",228,0)
 I '$D(^LR(LRDFN,"SP")) D  Q
"RTN","LR7OSAP",229,0)
 . I '$D(SUBHEAD("SURGICAL PATHOLOGY")) Q
"RTN","LR7OSAP",230,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSAP",231,0)
 . D LN S ^TMP("LRC",$J,GCNT,0)="No Surgical Pathology reports available..."
"RTN","LR7OSAP",232,0)
 ;
"RTN","LR7OSAP",233,0)
 S LRSS="SP",LRAA(1)="SURGICAL PATHOLOGY",LRAA=+$O(^LRO(68,"B",LRAA(1),0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP",234,0)
 D GET
"RTN","LR7OSAP",235,0)
 Q
"RTN","LR7OSAP",236,0)
 ;
"RTN","LR7OSAP",237,0)
 ;
"RTN","LR7OSAP",238,0)
EM ; Electron Microscopy results
"RTN","LR7OSAP",239,0)
 ;
"RTN","LR7OSAP",240,0)
 I '$D(^LR(LRDFN,"EM")) D  Q
"RTN","LR7OSAP",241,0)
 . I '$D(SUBHEAD("EM")) Q
"RTN","LR7OSAP",242,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSAP",243,0)
 . D LN S ^TMP("LRC",$J,GCNT,0)="No EM reports available..."
"RTN","LR7OSAP",244,0)
 ;
"RTN","LR7OSAP",245,0)
 S LRSS="EM",LRAA(1)="ELECTRON MICROSCOPY",LRAA=+$O(^LRO(68,"B","EM",0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP",246,0)
 D GET
"RTN","LR7OSAP",247,0)
 Q
"RTN","LR7OSAP",248,0)
 ;
"RTN","LR7OSAP",249,0)
 ;
"RTN","LR7OSAP",250,0)
AU ; Autopsy results
"RTN","LR7OSAP",251,0)
 ;
"RTN","LR7OSAP",252,0)
 I '$D(^LR(LRDFN,"AU")) D  Q
"RTN","LR7OSAP",253,0)
 . I '$D(SUBHEAD("AUTOPSY")) Q
"RTN","LR7OSAP",254,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSAP",255,0)
 . D LN S ^TMP("LRC",$J,GCNT,0)="No Autopsy report available..."
"RTN","LR7OSAP",256,0)
 ;
"RTN","LR7OSAP",257,0)
 D EN^LR7OSAP2(LRDFN)
"RTN","LR7OSAP",258,0)
 Q
"RTN","LR7OSAP",259,0)
 ;
"RTN","LR7OSAP",260,0)
 ;
"RTN","LR7OSAP",261,0)
FIND(SS) ; Find a valid entry in 68
"RTN","LR7OSAP",262,0)
 ;SS=LRSS value to look for
"RTN","LR7OSAP",263,0)
 N I,Y
"RTN","LR7OSAP",264,0)
 S I=0,Y="" F  S I=$O(^LRO(68,I)) Q:I<1  I $P($G(^LRO(68,I,0)),"^",2)=SS S Y=I Q
"RTN","LR7OSAP",265,0)
 Q Y
"RTN","LR7OSAP4")
0^193^B3951083
"RTN","LR7OSAP4",1,0)
LR7OSAP4 ;DALOI/staff - Silent AP API ;11/05/09  10:57
"RTN","LR7OSAP4",2,0)
 ;;5.2;LAB SERVICE;**365,350**;Sep 27, 1994;Build 230
"RTN","LR7OSAP4",3,0)
 ;
"RTN","LR7OSAP4",4,0)
EN(LRX,LRDFN,LRSS,LRI,LRGIOM)        ;Get Anatomic Path results from either TIU or Lab files
"RTN","LR7OSAP4",5,0)
 ; LRX is the global where the output is placed. Calling package is responsible for cleaning this up
"RTN","LR7OSAP4",6,0)
 ; LRDFN = Lab Patient ID
"RTN","LR7OSAP4",7,0)
 ; LRSS = Lab Subscript
"RTN","LR7OSAP4",8,0)
 ; LRI = Inverse Date/Time from ^LR(LRDFN,LRSS,LRIDT)
"RTN","LR7OSAP4",9,0)
 Q:'LRDFN  Q:$G(LRSS)=""  Q:'LRI  Q:'$D(^LR(+LRDFN,LRSS,LRI))&(LRSS'="AU")
"RTN","LR7OSAP4",10,0)
 N LRAA,FST,GCNT,B
"RTN","LR7OSAP4",11,0)
 ;
"RTN","LR7OSAP4",12,0)
 K ^TMP("LRC",$J)
"RTN","LR7OSAP4",13,0)
 ;
"RTN","LR7OSAP4",14,0)
 D:LRSS="CY" CY D:LRSS="SP" SPA D:LRSS="EM" EM
"RTN","LR7OSAP4",15,0)
 ;
"RTN","LR7OSAP4",16,0)
 S FST=0,GCNT=0,B=$G(^LR(LRDFN,LRSS,LRI,0))
"RTN","LR7OSAP4",17,0)
 ;
"RTN","LR7OSAP4",18,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSAP4",19,0)
 I GIOM="" D
"RTN","LR7OSAP4",20,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR AP GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSAP4",21,0)
 . I GIOM="" S GIOM=96
"RTN","LR7OSAP4",22,0)
 ;
"RTN","LR7OSAP4",23,0)
 ; Display "Printed at:" notice
"RTN","LR7OSAP4",24,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC^LR7OSMZU
"RTN","LR7OSAP4",25,0)
 ;
"RTN","LR7OSAP4",26,0)
 I LRSS="AU" D AU
"RTN","LR7OSAP4",27,0)
 I LRSS'="AU" D
"RTN","LR7OSAP4",28,0)
 . D W^LR7OSAP
"RTN","LR7OSAP4",29,0)
 ;
"RTN","LR7OSAP4",30,0)
 M @LRX=^TMP("LRC",$J)
"RTN","LR7OSAP4",31,0)
 Q
"RTN","LR7OSAP4",32,0)
 ;
"RTN","LR7OSAP4",33,0)
 ;
"RTN","LR7OSAP4",34,0)
CY ;
"RTN","LR7OSAP4",35,0)
 S LRSS="CY",LRAA(1)="CYTOPATHOLOGY",LRAA=+$O(^LRO(68,"B",LRAA(1),0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP4",36,0)
 Q
"RTN","LR7OSAP4",37,0)
 ;
"RTN","LR7OSAP4",38,0)
 ;
"RTN","LR7OSAP4",39,0)
SPA ;
"RTN","LR7OSAP4",40,0)
 S LRSS="SP",LRAA(1)="SURGICAL PATHOLOGY",LRAA=+$O(^LRO(68,"B",LRAA(1),0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP4",41,0)
 Q
"RTN","LR7OSAP4",42,0)
 ;
"RTN","LR7OSAP4",43,0)
 ;
"RTN","LR7OSAP4",44,0)
EM ;
"RTN","LR7OSAP4",45,0)
 S LRSS="EM",LRAA(1)="ELECTRON MICROSCOPY",LRAA=+$O(^LRO(68,"B","EM",0)) S:'LRAA LRAA=$$FIND(LRSS)
"RTN","LR7OSAP4",46,0)
 Q
"RTN","LR7OSAP4",47,0)
 ;
"RTN","LR7OSAP4",48,0)
 ;
"RTN","LR7OSAP4",49,0)
AU ;
"RTN","LR7OSAP4",50,0)
 D EN^LR7OSAP2(LRDFN)
"RTN","LR7OSAP4",51,0)
 Q
"RTN","LR7OSAP4",52,0)
 ;
"RTN","LR7OSAP4",53,0)
 ;
"RTN","LR7OSAP4",54,0)
FIND(SS) ;Find a valid entry in 68
"RTN","LR7OSAP4",55,0)
 ; SS=LRSS value to look for
"RTN","LR7OSAP4",56,0)
 N I,Y
"RTN","LR7OSAP4",57,0)
 S I=0,Y="" F  S I=$O(^LRO(68,I)) Q:I<1  I $P($G(^LRO(68,I,0)),"^",2)=SS S Y=I Q
"RTN","LR7OSAP4",58,0)
 Q Y
"RTN","LR7OSMZ1")
0^167^B17671319
"RTN","LR7OSMZ1",1,0)
LR7OSMZ1 ;DALOI/JMC - Silent Micro rpt Cont. ;09/02/10  22:14
"RTN","LR7OSMZ1",2,0)
 ;;5.2;LAB SERVICE;**121,244,350**;Sep 27, 1994;Build 230
"RTN","LR7OSMZ1",3,0)
 ;
"RTN","LR7OSMZ1",4,0)
EN ; from LRMINEW2, LRMIPC, LRMIPLOG, LR7OSMZ, LRMIVER1
"RTN","LR7OSMZ1",5,0)
 S LRSPEC=$P(LRLLT,U,5)
"RTN","LR7OSMZ1",6,0)
 I LRONESPC'="",LRSPEC'=LRONESPC Q
"RTN","LR7OSMZ1",7,0)
 ;
"RTN","LR7OSMZ1",8,0)
 N GIOM
"RTN","LR7OSMZ1",9,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSMZ1",10,0)
 I GIOM="" D
"RTN","LR7OSMZ1",11,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR MI GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSMZ1",12,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSMZ1",13,0)
 ;
"RTN","LR7OSMZ1",14,0)
 D RPT
"RTN","LR7OSMZ1",15,0)
 K %,A8,A,AB,B,B1,B2,B3,C,IA,LR1PASS,LR2ORMOR,LRABCNT,LRACNT,LRAO,LRADM,LRADX,LRAFS,LRAMT,LRAX,LRBN,LRBRR,LRBUG,LRCOMTAB,LRCS,LRDCOM,LRDOC,LRDRTM1,LRDRTM2,LREF,LRFMT,LRGRM,LRIFN,LRINT,LRPATLOC,LRMYC,LRNS,LRNUM
"RTN","LR7OSMZ1",16,0)
 K LRORG,LRPAR,LRPC,LRPRE,LRPRINT,LRQU,LRRC,LRRES,LRSBC1,LRSBC2,LRSET,LRSIC1,LRSIC2,LRSPEC,LRSSD,LRST,LRTA,LRTB,LRTBA,LRTBC,LRTBS,LRTK,LRTS,LRTSTS,LRTUS,LRUS,LRWRD,N
"RTN","LR7OSMZ1",17,0)
 Q
"RTN","LR7OSMZ1",18,0)
 ;
"RTN","LR7OSMZ1",19,0)
 ;
"RTN","LR7OSMZ1",20,0)
RPT ;
"RTN","LR7OSMZ1",21,0)
 ;
"RTN","LR7OSMZ1",22,0)
 N J,LRTSTS,LRTS,LRTESTCOMPLE,LRX,LRY
"RTN","LR7OSMZ1",23,0)
 ;
"RTN","LR7OSMZ1",24,0)
 S:'$D(LRSB) LRSB=0
"RTN","LR7OSMZ1",25,0)
 S LRPRINT=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,4)):"",1:1),LRPATLOC=$P(LRLLT,U,8)
"RTN","LR7OSMZ1",26,0)
 S LRCS=$S($D(^LAB(62,+$P(LRLLT,U,11),0)):$P(^(0),U),1:"")
"RTN","LR7OSMZ1",27,0)
 S LRTK=$P(LRLLT,U),LRRC=$P(LRLLT,U,10),LRST=$S(LRSPEC:$P(^LAB(61,LRSPEC,0),U),1:""),Y=LRTK
"RTN","LR7OSMZ1",28,0)
 D D^LRU
"RTN","LR7OSMZ1",29,0)
 S LRTK=Y,Y=LRRC
"RTN","LR7OSMZ1",30,0)
 D D^LRU
"RTN","LR7OSMZ1",31,0)
 S LRRC=Y,X=$P(LRLLT,U,7)
"RTN","LR7OSMZ1",32,0)
 D DOC^LRX
"RTN","LR7OSMZ1",33,0)
 ;
"RTN","LR7OSMZ1",34,0)
 K ^TMP("LR",$J,"T"),LRTSTS
"RTN","LR7OSMZ1",35,0)
 ;
"RTN","LR7OSMZ1",36,0)
 S (LRBRR,LRTESTCOMPLE)=0
"RTN","LR7OSMZ1",37,0)
 F  S LRBRR=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRBRR)) Q:LRBRR<1  D EN1
"RTN","LR7OSMZ1",38,0)
 I 'LRPRINT,LRONETST Q
"RTN","LR7OSMZ1",39,0)
 S LRPG=0
"RTN","LR7OSMZ1",40,0)
 D HDR^LR7OSMZU
"RTN","LR7OSMZ1",41,0)
 Q:LREND
"RTN","LR7OSMZ1",42,0)
 ;
"RTN","LR7OSMZ1",43,0)
 I $D(^TMP("LR",$J,"T")) D
"RTN","LR7OSMZ1",44,0)
 . D LINE^LR7OSUM4,LN
"RTN","LR7OSMZ1",45,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(2,CCNT,"Test(s) ordered:")
"RTN","LR7OSMZ1",46,0)
 . S J=""
"RTN","LR7OSMZ1",47,0)
 . F  S J=$O(^TMP("LR",$J,"T",J)) Q:J=""  S X=^(J) D
"RTN","LR7OSMZ1",48,0)
 . . S LRX=$P(X,"^")
"RTN","LR7OSMZ1",49,0)
 . . I LRTESTCOMPLE S LRX=$$LJ^XLFSTR(LRX,30,".")
"RTN","LR7OSMZ1",50,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(19,CCNT,LRX)
"RTN","LR7OSMZ1",51,0)
 . . S:'$D(^TMP("LRT",$J,$P(X,"^"))) ^($P(X,"^"))="MICROBIOLOGY"_"^"_GCNT
"RTN","LR7OSMZ1",52,0)
 . . I '$P(X,U,2) D LN S ^TMP("LRC",$J,GCNT,0)="" Q
"RTN","LR7OSMZ1",53,0)
 . . S Y=$P(X,U,2)
"RTN","LR7OSMZ1",54,0)
 . . D D^LRU S LRY="completed: "_Y
"RTN","LR7OSMZ1",55,0)
 . . I (19+$L(LRX)+$L(LRY))>GIOM D LN S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ1",56,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(50,CCNT,"completed: "_Y)
"RTN","LR7OSMZ1",57,0)
 . . D LN S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ1",58,0)
 ;
"RTN","LR7OSMZ1",59,0)
 K ^TMP("LR",$J,"T"),LRTSTS
"RTN","LR7OSMZ1",60,0)
 ;
"RTN","LR7OSMZ1",61,0)
 I $D(^LR(LRDFN,"MI",LRIDT,14)) D ANTI^LR7OSMZ2,LINE^LR7OSUM4
"RTN","LR7OSMZ1",62,0)
 I $D(^LR(LRDFN,"MI",LRIDT,1)) D BACT^LR7OSMZ2,REFS^LR7OSMZU,LINE^LR7OSUM4
"RTN","LR7OSMZ1",63,0)
 I $D(^LR(LRDFN,"MI",LRIDT,31)) D STER^LR7OSMZ3,LINE^LR7OSUM4
"RTN","LR7OSMZ1",64,0)
 I $D(^LR(LRDFN,"MI",LRIDT,5)) D PARA^LR7OSMZ3,REFS^LR7OSMZU,LINE^LR7OSUM4
"RTN","LR7OSMZ1",65,0)
 I $D(^LR(LRDFN,"MI",LRIDT,16)) D VIR^LR7OSMZ3,REFS^LR7OSMZU,LINE^LR7OSUM4
"RTN","LR7OSMZ1",66,0)
 I $D(^LR(LRDFN,"MI",LRIDT,11)) D TB^LR7OSMZ4,REFS^LR7OSMZU,LINE^LR7OSUM4
"RTN","LR7OSMZ1",67,0)
 I $D(^LR(LRDFN,"MI",LRIDT,8)) D FUNG^LR7OSMZ4,REFS^LR7OSMZU,LINE^LR7OSUM4
"RTN","LR7OSMZ1",68,0)
 ;
"RTN","LR7OSMZ1",69,0)
 ; List performing labs
"RTN","LR7OSMZ1",70,0)
 D PPL(LRDFN,"MI",LRIDT)
"RTN","LR7OSMZ1",71,0)
 ;
"RTN","LR7OSMZ1",72,0)
 Q
"RTN","LR7OSMZ1",73,0)
 ;
"RTN","LR7OSMZ1",74,0)
 ;
"RTN","LR7OSMZ1",75,0)
EN1 ;
"RTN","LR7OSMZ1",76,0)
 S LRTS=+^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRBRR,0),LRTS(1)=$P(^(0),U,5)
"RTN","LR7OSMZ1",77,0)
 Q:'$L($P($G(^LAB(60,LRTS,0)),U,3))
"RTN","LR7OSMZ1",78,0)
 I '$D(LRLABKY),"BO"'[$P($G(^LAB(60,LRTS,0)),U,3) Q
"RTN","LR7OSMZ1",79,0)
 ;
"RTN","LR7OSMZ1",80,0)
 ; Set flag that at least one test is completed
"RTN","LR7OSMZ1",81,0)
 I LRTS(1) S LRTESTCOMPLE=1
"RTN","LR7OSMZ1",82,0)
 ;
"RTN","LR7OSMZ1",83,0)
 S:LRTS=LRONETST LRPRINT=1
"RTN","LR7OSMZ1",84,0)
 S LRTSTS=$S($D(^LAB(60,LRTS,0)):$P(^(0),U),1:"deleted test"),^TMP("LR",$J,"T",$S($D(^LAB(60,LRTS,.1)):$P(^(.1),U,6),1:"")_","_LRBRR)=LRTSTS_U_LRTS(1)
"RTN","LR7OSMZ1",85,0)
 Q
"RTN","LR7OSMZ1",86,0)
 ;
"RTN","LR7OSMZ1",87,0)
 ;
"RTN","LR7OSMZ1",88,0)
LN ;Increment counter
"RTN","LR7OSMZ1",89,0)
 S GCNT=GCNT+1,CCNT=1
"RTN","LR7OSMZ1",90,0)
 Q
"RTN","LR7OSMZ1",91,0)
 ;
"RTN","LR7OSMZ1",92,0)
 ;
"RTN","LR7OSMZ1",93,0)
PPL(LRDFN,LRSS,LRIDT) ; Print any performing laboratories
"RTN","LR7OSMZ1",94,0)
 ; Call with LRDFN = file #63 IEN
"RTN","LR7OSMZ1",95,0)
 ;            LRSS = File #63 subscript
"RTN","LR7OSMZ1",96,0)
 ;           LRIDT = file #63 specimen inverse date/time
"RTN","LR7OSMZ1",97,0)
 ;
"RTN","LR7OSMZ1",98,0)
 N LRPL,LRI,LRX
"RTN","LR7OSMZ1",99,0)
 ;
"RTN","LR7OSMZ1",100,0)
 D RETLST^LRRPL(.LRPL,LRDFN,LRSS,LRIDT,0)
"RTN","LR7OSMZ1",101,0)
 I $G(LRPL)<1 Q
"RTN","LR7OSMZ1",102,0)
 ;
"RTN","LR7OSMZ1",103,0)
 D LN S LRX="=--",^TMP("LRC",$J,GCNT,0)=$$REPEAT^XLFSTR(LRX,GIOM/$L(LRX))
"RTN","LR7OSMZ1",104,0)
 D LN S ^TMP("LRC",$J,GCNT,0)="Performing Laboratory:"
"RTN","LR7OSMZ1",105,0)
 ;
"RTN","LR7OSMZ1",106,0)
 S LRI=0
"RTN","LR7OSMZ1",107,0)
 F  S LRI=$O(LRPL(LRI)) Q:'LRI  D LN S ^TMP("LRC",$J,GCNT,0)=LRPL(LRI)
"RTN","LR7OSMZ1",108,0)
 D LN S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ1",109,0)
 ;
"RTN","LR7OSMZ1",110,0)
 Q
"RTN","LR7OSMZ2")
0^205^B44248028
"RTN","LR7OSMZ2",1,0)
LR7OSMZ2 ;DALOI/STAFF - Silent Micro rpt - BACTERIA, SIC/SBC, MIC ;08/30/10  17:21
"RTN","LR7OSMZ2",2,0)
 ;;5.2;LAB SERVICE;**121,244,392,350**;Sep 27, 1994;Build 230
"RTN","LR7OSMZ2",3,0)
 ;
"RTN","LR7OSMZ2",4,0)
 ;
"RTN","LR7OSMZ2",5,0)
ANTI ;from LR7OSMZ1
"RTN","LR7OSMZ2",6,0)
 I $P(^LR(LRDFN,"MI",LRIDT,14,0),U,4)>0 D
"RTN","LR7OSMZ2",7,0)
 . D LINE,LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(28,CCNT,"Antibiotic Level(s):")
"RTN","LR7OSMZ2",8,0)
 . D LINE
"RTN","LR7OSMZ2",9,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"ANTIBIOTIC")_$$S^LR7OS(20,CCNT,"CONC RANGE (ug/ml)")_$$S^LR7OS(42,CCNT,"DRAW TIME")
"RTN","LR7OSMZ2",10,0)
 . S B=0
"RTN","LR7OSMZ2",11,0)
 . F  S B=$O(^LR(LRDFN,"MI",LRIDT,14,B)) Q:B<1  S X=^(B,0) D
"RTN","LR7OSMZ2",12,0)
 . . D LINE
"RTN","LR7OSMZ2",13,0)
 . . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$P(X,U))_$$S^LR7OS(20,CCNT,$P(X,U,3))_$$S^LR7OS(42,CCNT,$$EXTERNAL^DILFD(63.42,1,"",$P(X,U,2)))
"RTN","LR7OSMZ2",14,0)
 . . D LINE
"RTN","LR7OSMZ2",15,0)
 Q
"RTN","LR7OSMZ2",16,0)
 ;
"RTN","LR7OSMZ2",17,0)
 ;
"RTN","LR7OSMZ2",18,0)
BACT ;from LR7OSMZ1
"RTN","LR7OSMZ2",19,0)
 ;
"RTN","LR7OSMZ2",20,0)
 I '$L($P(^LR(LRDFN,"MI",LRIDT,1),U)) Q:'$D(LRWRDVEW)  Q:LRSB'=1
"RTN","LR7OSMZ2",21,0)
 ;
"RTN","LR7OSMZ2",22,0)
 D BUG
"RTN","LR7OSMZ2",23,0)
 I $D(^LR(LRDFN,"MI",LRIDT,2,0)) D FH^LR7OSMZU Q:LREND  D GRAM
"RTN","LR7OSMZ2",24,0)
 ;
"RTN","LR7OSMZ2",25,0)
 I $D(^LR(LRDFN,"MI",LRIDT,25,0)) D FH^LR7OSMZU Q:LREND  D BSMEAR
"RTN","LR7OSMZ2",26,0)
 ;
"RTN","LR7OSMZ2",27,0)
 I $D(^LR(LRDFN,"MI",LRIDT,3,0)) D FH^LR7OSMZU Q:LREND  D BRMK Q:LREND  D BACT^LR7OSMZ5 Q:LREND
"RTN","LR7OSMZ2",28,0)
 ;
"RTN","LR7OSMZ2",29,0)
 I $O(^LR(LRDFN,"MI",LRIDT,4,0)) D  Q:LREND
"RTN","LR7OSMZ2",30,0)
 . D FH^LR7OSMZU Q:LREND
"RTN","LR7OSMZ2",31,0)
 . D LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Bacteriology Remark(s):") S B=0 D
"RTN","LR7OSMZ2",32,0)
 . F  S B=+$O(^LR(LRDFN,"MI",LRIDT,4,B)) Q:B<1  D LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,^LR(LRDFN,"MI",LRIDT,4,B,0))
"RTN","LR7OSMZ2",33,0)
 ;
"RTN","LR7OSMZ2",34,0)
 Q
"RTN","LR7OSMZ2",35,0)
 ;
"RTN","LR7OSMZ2",36,0)
 ;
"RTN","LR7OSMZ2",37,0)
BUG ;
"RTN","LR7OSMZ2",38,0)
 ;
"RTN","LR7OSMZ2",39,0)
 N LRNS,LRTUS,LRUS,X
"RTN","LR7OSMZ2",40,0)
 ;
"RTN","LR7OSMZ2",41,0)
 S X=^LR(LRDFN,"MI",LRIDT,1),LRTUS=$P(X,U,2),DZ=$P(X,U,3),LRUS=$P(X,U,6),LRNS=$P(X,U,5),Y=$P(X,U)
"RTN","LR7OSMZ2",42,0)
 D D^LRU,LINE
"RTN","LR7OSMZ2",43,0)
 ;
"RTN","LR7OSMZ2",44,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"* BACTERIOLOGY "_$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")_" REPORT => "_Y_"   TECH CODE: "_DZ)
"RTN","LR7OSMZ2",45,0)
 S LRPRE=19
"RTN","LR7OSMZ2",46,0)
 D PRE^LR7OSMZU
"RTN","LR7OSMZ2",47,0)
 ;
"RTN","LR7OSMZ2",48,0)
 I LRUS'="" D
"RTN","LR7OSMZ2",49,0)
 . D LINE
"RTN","LR7OSMZ2",50,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"URINE SCREEN: "_$S(LRUS="N":"Negative",LRUS="P":"Positive",1:LRUS))
"RTN","LR7OSMZ2",51,0)
 . I LRNS="" D LINE
"RTN","LR7OSMZ2",52,0)
 ;
"RTN","LR7OSMZ2",53,0)
 I LRNS'="" D
"RTN","LR7OSMZ2",54,0)
 . D LINE
"RTN","LR7OSMZ2",55,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"SPUTUM SCREEN:  "_LRNS)
"RTN","LR7OSMZ2",56,0)
 . D LINE
"RTN","LR7OSMZ2",57,0)
 ;
"RTN","LR7OSMZ2",58,0)
 Q
"RTN","LR7OSMZ2",59,0)
 ;
"RTN","LR7OSMZ2",60,0)
 ;
"RTN","LR7OSMZ2",61,0)
GRAM ;
"RTN","LR7OSMZ2",62,0)
 N CNT,LRGRM
"RTN","LR7OSMZ2",63,0)
 ;
"RTN","LR7OSMZ2",64,0)
 D LINE
"RTN","LR7OSMZ2",65,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"GRAM STAIN:")
"RTN","LR7OSMZ2",66,0)
 S (CNT,LRGRM)=0
"RTN","LR7OSMZ2",67,0)
 F  S LRGRM=+$O(^LR(LRDFN,"MI",LRIDT,2,LRGRM)) Q:LRGRM<1  D
"RTN","LR7OSMZ2",68,0)
 . S X=^LR(LRDFN,"MI",LRIDT,2,LRGRM,0),CNT=CNT+1
"RTN","LR7OSMZ2",69,0)
 . I CNT>1 D LN^LR7OSMZ1 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ2",70,0)
 . S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(13,CCNT,X)
"RTN","LR7OSMZ2",71,0)
 D LINE
"RTN","LR7OSMZ2",72,0)
 Q
"RTN","LR7OSMZ2",73,0)
 ;
"RTN","LR7OSMZ2",74,0)
 ;
"RTN","LR7OSMZ2",75,0)
BSMEAR ;
"RTN","LR7OSMZ2",76,0)
 ;
"RTN","LR7OSMZ2",77,0)
 D LINE
"RTN","LR7OSMZ2",78,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"BACTERIOLOGY SMEAR/PREP:") S LRMYC=0
"RTN","LR7OSMZ2",79,0)
 F  S LRMYC=+$O(^LR(LRDFN,"MI",LRIDT,25,LRMYC)) Q:LRMYC<1  S X=^(LRMYC,0) D LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(5,CCNT,X)
"RTN","LR7OSMZ2",80,0)
 D LINE
"RTN","LR7OSMZ2",81,0)
 Q
"RTN","LR7OSMZ2",82,0)
 ;
"RTN","LR7OSMZ2",83,0)
 ;
"RTN","LR7OSMZ2",84,0)
BRMK ;
"RTN","LR7OSMZ2",85,0)
 ;
"RTN","LR7OSMZ2",86,0)
 N LRAX,LRBUG
"RTN","LR7OSMZ2",87,0)
 ;
"RTN","LR7OSMZ2",88,0)
 S (LRBUG,LR2ORMOR)=0
"RTN","LR7OSMZ2",89,0)
 F LRAX=1,2 S LRBUG=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  S:LRAX=2 LR2ORMOR=1
"RTN","LR7OSMZ2",90,0)
 ;
"RTN","LR7OSMZ2",91,0)
 I LRAX'=1 D
"RTN","LR7OSMZ2",92,0)
 . S (LRBUG,LRTSTS)=0
"RTN","LR7OSMZ2",93,0)
 . F LRAX=1:1 S LRBUG=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D LST,LINE
"RTN","LR7OSMZ2",94,0)
 ;
"RTN","LR7OSMZ2",95,0)
 Q
"RTN","LR7OSMZ2",96,0)
 ;
"RTN","LR7OSMZ2",97,0)
 ;
"RTN","LR7OSMZ2",98,0)
LST ;
"RTN","LR7OSMZ2",99,0)
 ;
"RTN","LR7OSMZ2",100,0)
 N LRX
"RTN","LR7OSMZ2",101,0)
 S LRX=^LR(LRDFN,"MI",LRIDT,3,LRBUG,0)
"RTN","LR7OSMZ2",102,0)
 S (LRBUG(LRAX),LRORG)=$P(LRX,U),LRQU=$P(LRX,U,2),LRSSD=$P(LRX,U,3,8),LRORG=$P(^LAB(61.2,LRORG,0),U)
"RTN","LR7OSMZ2",103,0)
 ;
"RTN","LR7OSMZ2",104,0)
 I LRSSD'?."^" S LRSIC1=$P(LRSSD,U),LRSBC1=$P(LRSSD,U,2),LRDRTM1=$P(LRSSD,U,3),LRSIC2=$P(LRSSD,U,4),LRSBC2=$P(LRSSD,U,5),LRDRTM2=$P(LRSSD,U,6),LRSSD=1
"RTN","LR7OSMZ2",105,0)
 ;
"RTN","LR7OSMZ2",106,0)
 I LRAX=1 D LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"CULTURE RESULTS: ")
"RTN","LR7OSMZ2",107,0)
 ;
"RTN","LR7OSMZ2",108,0)
 I LRAX>1 D LN^LR7OSMZ1 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ2",109,0)
 ;
"RTN","LR7OSMZ2",110,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(18,CCNT,$S(LR2ORMOR:$J(LRBUG,2)_". ",1:" ")_LRORG)
"RTN","LR7OSMZ2",111,0)
 ;
"RTN","LR7OSMZ2",112,0)
 ; Display quantity/colony count
"RTN","LR7OSMZ2",113,0)
 I LRQU'="" D
"RTN","LR7OSMZ2",114,0)
 . N LRX
"RTN","LR7OSMZ2",115,0)
 . S LRX=" - Quantity: "_LRQU
"RTN","LR7OSMZ2",116,0)
 . I (GIOM-$X-1)<$L(LRX) D LINE S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(21,CCNT,LRX) Q
"RTN","LR7OSMZ2",117,0)
 . S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,LRX)
"RTN","LR7OSMZ2",118,0)
 ;
"RTN","LR7OSMZ2",119,0)
 I LRSSD D SSD
"RTN","LR7OSMZ2",120,0)
 ;
"RTN","LR7OSMZ2",121,0)
 S:$D(^LR(LRDFN,"MI",LRIDT,3,LRBUG,2)) LRTSTS=LRTSTS+1
"RTN","LR7OSMZ2",122,0)
 ;
"RTN","LR7OSMZ2",123,0)
 I $O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,3,0)) D MIC
"RTN","LR7OSMZ2",124,0)
 ;
"RTN","LR7OSMZ2",125,0)
 I $O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,1,0)) D CMNT
"RTN","LR7OSMZ2",126,0)
 ;
"RTN","LR7OSMZ2",127,0)
 Q
"RTN","LR7OSMZ2",128,0)
 ;
"RTN","LR7OSMZ2",129,0)
 ;
"RTN","LR7OSMZ2",130,0)
SSD ;
"RTN","LR7OSMZ2",131,0)
 ;
"RTN","LR7OSMZ2",132,0)
 D LINE
"RTN","LR7OSMZ2",133,0)
 S LRDRTM1=$S(LRDRTM1="P":"PEAK",LRDRTM1="T":"TROUGH",1:LRDRTM1),LRDRTM2=$S(LRDRTM2="P":"PEAK",LRDRTM2="T":"TROUGH",1:LRDRTM2)
"RTN","LR7OSMZ2",134,0)
 ;
"RTN","LR7OSMZ2",135,0)
 I LRSIC1'="" D
"RTN","LR7OSMZ2",136,0)
 . D LINE
"RTN","LR7OSMZ2",137,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(20,CCNT,"SIT ")
"RTN","LR7OSMZ2",138,0)
 . S:$L(LRDRTM1) ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,"("_LRDRTM1_")")
"RTN","LR7OSMZ2",139,0)
 . S ^(0)=^(0)_$$S^LR7OS(CCNT,CCNT,": "_LRSIC1)
"RTN","LR7OSMZ2",140,0)
 ;
"RTN","LR7OSMZ2",141,0)
 I LRSBC1'="" D
"RTN","LR7OSMZ2",142,0)
 . D LINE
"RTN","LR7OSMZ2",143,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(20,CCNT,"SBT ")
"RTN","LR7OSMZ2",144,0)
 . S:$L(LRDRTM1) ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,"("_LRDRTM1_")")
"RTN","LR7OSMZ2",145,0)
 . S ^(0)=^(0)_$$S^LR7OS(CCNT,CCNT,": "_LRSBC1)
"RTN","LR7OSMZ2",146,0)
 ;
"RTN","LR7OSMZ2",147,0)
 I LRSIC2'="" D
"RTN","LR7OSMZ2",148,0)
 . D LINE
"RTN","LR7OSMZ2",149,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(20,CCNT,"SIT ")
"RTN","LR7OSMZ2",150,0)
 . S:$L(LRDRTM2) ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,"("_LRDRTM2_")")
"RTN","LR7OSMZ2",151,0)
 . S ^(0)=^(0)_$$S^LR7OS(CCNT,CCNT,": "_LRSIC2)
"RTN","LR7OSMZ2",152,0)
 ;
"RTN","LR7OSMZ2",153,0)
 I LRSBC2'="" D
"RTN","LR7OSMZ2",154,0)
 . D LINE
"RTN","LR7OSMZ2",155,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(20,CCNT,"SBT ")
"RTN","LR7OSMZ2",156,0)
 . S:$L(LRDRTM2) ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,"("_LRDRTM2_")")
"RTN","LR7OSMZ2",157,0)
 . S ^(0)=^(0)_$$S^LR7OS(CCNT,CCNT,": "_LRSBC2)
"RTN","LR7OSMZ2",158,0)
 ;
"RTN","LR7OSMZ2",159,0)
 Q
"RTN","LR7OSMZ2",160,0)
 ;
"RTN","LR7OSMZ2",161,0)
 ;
"RTN","LR7OSMZ2",162,0)
MIC ;
"RTN","LR7OSMZ2",163,0)
 ;
"RTN","LR7OSMZ2",164,0)
 D LINE
"RTN","LR7OSMZ2",165,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(22,CCNT,"Antibiotic"),B=0
"RTN","LR7OSMZ2",166,0)
 F  S B=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,3,B)) Q:B<1  I $L($P(^(B,0),U,2,3))>0 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(39,CCNT,"MIC (ug/ml)")_$$S^LR7OS(54,CCNT,"MBC (ug/ml)") Q
"RTN","LR7OSMZ2",167,0)
 ;
"RTN","LR7OSMZ2",168,0)
 S B=0
"RTN","LR7OSMZ2",169,0)
 F  S B=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,3,B)) Q:B<1  D
"RTN","LR7OSMZ2",170,0)
 . S X=^LR(LRDFN,"MI",LRIDT,3,LRBUG,3,B,0)
"RTN","LR7OSMZ2",171,0)
 . D LINE
"RTN","LR7OSMZ2",172,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(22,CCNT,$P(X,U))_$$S^LR7OS(39,CCNT,$J($P(X,U,2),7))_$$S^LR7OS(54,CCNT,$J($P(X,U,3),7))
"RTN","LR7OSMZ2",173,0)
 ;
"RTN","LR7OSMZ2",174,0)
 Q
"RTN","LR7OSMZ2",175,0)
 ;
"RTN","LR7OSMZ2",176,0)
 ;
"RTN","LR7OSMZ2",177,0)
CMNT ;
"RTN","LR7OSMZ2",178,0)
 ;
"RTN","LR7OSMZ2",179,0)
 N LRX
"RTN","LR7OSMZ2",180,0)
 S LRPC=0
"RTN","LR7OSMZ2",181,0)
 F A=0:1 S LRPC=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,1,LRPC)) Q:LRPC<1  D
"RTN","LR7OSMZ2",182,0)
 . S LRX=^LR(LRDFN,"MI",LRIDT,3,LRBUG,1,LRPC,0)
"RTN","LR7OSMZ2",183,0)
 . I A=0 S LRX="Comment: "_LRX
"RTN","LR7OSMZ2",184,0)
 . E  S LRX="         "_LRX
"RTN","LR7OSMZ2",185,0)
 . I $L(LRX)>(GIOM-22) D
"RTN","LR7OSMZ2",186,0)
 . . D LN^LR7OSMZ1
"RTN","LR7OSMZ2",187,0)
 . . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(22,CCNT,$E(LRX,1,(GIOM-22)))
"RTN","LR7OSMZ2",188,0)
 . . S LRX="         "_$E(LRX,(GIOM-21),$L(LRX))
"RTN","LR7OSMZ2",189,0)
 . D LN^LR7OSMZ1
"RTN","LR7OSMZ2",190,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(22,CCNT,LRX)
"RTN","LR7OSMZ2",191,0)
 Q
"RTN","LR7OSMZ2",192,0)
 ;
"RTN","LR7OSMZ2",193,0)
 ;
"RTN","LR7OSMZ2",194,0)
LINE ;
"RTN","LR7OSMZ2",195,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ2",196,0)
 Q
"RTN","LR7OSMZ4")
0^173^B29272550
"RTN","LR7OSMZ4",1,0)
LR7OSMZ4 ;DALOI/STAFF - Silent Micro rpt - AFB, FUNGUS ;09/02/10  15:32
"RTN","LR7OSMZ4",2,0)
 ;;5.2;LAB SERVICE;**121,244,350**;Sep 27, 1994;Build 230
"RTN","LR7OSMZ4",3,0)
 ;
"RTN","LR7OSMZ4",4,0)
 ;
"RTN","LR7OSMZ4",5,0)
TB ; from LR7OSMZ1
"RTN","LR7OSMZ4",6,0)
 ;
"RTN","LR7OSMZ4",7,0)
 N LRTA,LRX
"RTN","LR7OSMZ4",8,0)
 ;
"RTN","LR7OSMZ4",9,0)
 S LRX=^LR(LRDFN,"MI",LRIDT,11)
"RTN","LR7OSMZ4",10,0)
 I $P(LRX,U)="" Q:'$D(LRWRDVEW)  Q:LRSB'=11
"RTN","LR7OSMZ4",11,0)
 ;
"RTN","LR7OSMZ4",12,0)
 S LRTUS=$P(LRX,U,2),DZ=$P(LRX,U,5),LRAFS=$P(LRX,U,3),LRAMT=$P(LRX,U,4),Y=$P(LRX,U)
"RTN","LR7OSMZ4",13,0)
 D D^LRU,LINE^LR7OSUM4
"RTN","LR7OSMZ4",14,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"* MYCOBACTERIOLOGY "_$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")_" REPORT => "_Y_"   TECH CODE: "_DZ)
"RTN","LR7OSMZ4",15,0)
 S LRPRE=23
"RTN","LR7OSMZ4",16,0)
 D PRE^LR7OSMZU
"RTN","LR7OSMZ4",17,0)
 ;
"RTN","LR7OSMZ4",18,0)
 S LRTA=""
"RTN","LR7OSMZ4",19,0)
 I $O(^LR(LRDFN,"MI",LRIDT,12,0)) S LRTA=0
"RTN","LR7OSMZ4",20,0)
 D:LRAFS'=""!(LRTA=0) AFS
"RTN","LR7OSMZ4",21,0)
 ;
"RTN","LR7OSMZ4",22,0)
 I $O(^LR(LRDFN,"MI",LRIDT,13,0)) D
"RTN","LR7OSMZ4",23,0)
 . D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSMZ4",24,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Mycobacteriology Remark(s):")
"RTN","LR7OSMZ4",25,0)
 . S B=0
"RTN","LR7OSMZ4",26,0)
 . F  S B=+$O(^LR(LRDFN,"MI",LRIDT,13,B)) Q:B<1  S X=^(B,0) D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,X)
"RTN","LR7OSMZ4",27,0)
 ;
"RTN","LR7OSMZ4",28,0)
 Q
"RTN","LR7OSMZ4",29,0)
 ;
"RTN","LR7OSMZ4",30,0)
 ;
"RTN","LR7OSMZ4",31,0)
AFS ; Acid Fast Stain results
"RTN","LR7OSMZ4",32,0)
 ;
"RTN","LR7OSMZ4",33,0)
 N LRX,X
"RTN","LR7OSMZ4",34,0)
 ;
"RTN","LR7OSMZ4",35,0)
 I LRAFS'="" D
"RTN","LR7OSMZ4",36,0)
 . S LRX="Acid Fast Stain:  "
"RTN","LR7OSMZ4",37,0)
 . I LRAFS?1(1"DP",1"DN",1"CP",1"CN") D
"RTN","LR7OSMZ4",38,0)
 . . S LRX=$S($E(LRAFS)="D":"Direct ",$E(LRAFS)="C":"Concentrate ",1:"")_LRX
"RTN","LR7OSMZ4",39,0)
 . . S LRX=LRX_$S($E(LRAFS,2)="P":"Positive",$E(LRAFS,2)="N":"Negative",1:LRAFS)
"RTN","LR7OSMZ4",40,0)
 . E  D
"RTN","LR7OSMZ4",41,0)
 . . S X=$$GET1^DIQ(63.05,LRIDT_","_LRDFN_",",24)
"RTN","LR7OSMZ4",42,0)
 . . I X'="" S LRX=LRX_X Q
"RTN","LR7OSMZ4",43,0)
 . . S LRX=LRX_LRAFS
"RTN","LR7OSMZ4",44,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",45,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LRX)
"RTN","LR7OSMZ4",46,0)
 . I LRAMT'="" D
"RTN","LR7OSMZ4",47,0)
 . . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",48,0)
 . . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,"Quantity: "_LRAMT)
"RTN","LR7OSMZ4",49,0)
 ;
"RTN","LR7OSMZ4",50,0)
 K ^TMP("LR",$J,"T"),LRTSTS
"RTN","LR7OSMZ4",51,0)
 ;
"RTN","LR7OSMZ4",52,0)
 I $D(LRTA) D
"RTN","LR7OSMZ4",53,0)
 . S LRTSTS=0
"RTN","LR7OSMZ4",54,0)
 . F A=0:1 S LRTA=+$O(^LR(LRDFN,"MI",LRIDT,12,LRTA)) Q:LRTA<1  S (LRBUG(LRTA),LRTBC)=$P(^(LRTA,0),U),LRQU=$P(^(0),U,2),LRTBC=$P(^LAB(61.2,LRTBC,0),U) D LIST
"RTN","LR7OSMZ4",55,0)
 Q
"RTN","LR7OSMZ4",56,0)
 ;
"RTN","LR7OSMZ4",57,0)
 ;
"RTN","LR7OSMZ4",58,0)
LIST ;
"RTN","LR7OSMZ4",59,0)
 N CNT,LRTB,LRTBA,LRTBS
"RTN","LR7OSMZ4",60,0)
 D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSMZ4",61,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Mycobacterium: "_LRTBC)
"RTN","LR7OSMZ4",62,0)
 S:$D(^LR(LRDFN,"MI",LRIDT,12,LRTA,2)) LRTSTS=LRTSTS+1
"RTN","LR7OSMZ4",63,0)
 I LRQU'="" D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,"Quantity: "_LRQU)
"RTN","LR7OSMZ4",64,0)
 I $D(^LR(LRDFN,"MI",LRIDT,12,LRTA,1,0)) D
"RTN","LR7OSMZ4",65,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",66,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"   Comment: ")
"RTN","LR7OSMZ4",67,0)
 . S (CNT,B)=0
"RTN","LR7OSMZ4",68,0)
 . F  S B=+$O(^LR(LRDFN,"MI",LRIDT,12,LRTA,1,B)) Q:B<1  S X=^(B,0) D
"RTN","LR7OSMZ4",69,0)
 . . I 'CNT S CNT=1,^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(13,CCNT,X) Q
"RTN","LR7OSMZ4",70,0)
 . . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",71,0)
 . . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(13,CCNT,X)
"RTN","LR7OSMZ4",72,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",73,0)
 ;
"RTN","LR7OSMZ4",74,0)
SEN ;
"RTN","LR7OSMZ4",75,0)
 S LRTB=2
"RTN","LR7OSMZ4",76,0)
 F  S LRTB=+$O(^LR(LRDFN,"MI",LRIDT,12,LRTA,LRTB)) Q:LRTB'["2."!(LRTB="")  D
"RTN","LR7OSMZ4",77,0)
 . S LRTBS=^LR(LRDFN,"MI",LRIDT,12,LRTA,LRTB)
"RTN","LR7OSMZ4",78,0)
 . I LRTBS="" Q
"RTN","LR7OSMZ4",79,0)
 . S LRTBA=""
"RTN","LR7OSMZ4",80,0)
 . I $D(^LAB(62.06,"AD1",LRTB)) D
"RTN","LR7OSMZ4",81,0)
 . . S LRX=$O(^LAB(62.06,"AD1",LRTB,0)),LRX(0)=""
"RTN","LR7OSMZ4",82,0)
 . . I LRX S LRX(0)=$G(^LAB(62.06,LRX,0))
"RTN","LR7OSMZ4",83,0)
 . . S LRTBA=$P(LRX(0),"^")
"RTN","LR7OSMZ4",84,0)
 . I LRTBA="" D
"RTN","LR7OSMZ4",85,0)
 . . S LRTBA=$O(^DD(63.39,"GL",LRTB,1,0))
"RTN","LR7OSMZ4",86,0)
 . . S LRTBA=$P(^DD(63.39,LRTBA,0),U)
"RTN","LR7OSMZ4",87,0)
 . S LRTBA=$$LJ^XLFSTR(LRTBA,30,".")
"RTN","LR7OSMZ4",88,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",89,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,LRTBA)_$$S^LR7OS(34,CCNT,LRTBS)
"RTN","LR7OSMZ4",90,0)
 ;
"RTN","LR7OSMZ4",91,0)
 Q
"RTN","LR7OSMZ4",92,0)
 ;
"RTN","LR7OSMZ4",93,0)
 ;
"RTN","LR7OSMZ4",94,0)
FUNG ;from LR7OSMZ1
"RTN","LR7OSMZ4",95,0)
 S X=^LR(LRDFN,"MI",LRIDT,8)
"RTN","LR7OSMZ4",96,0)
 I '$L($P(X,U)) Q:'$D(LRWRDVEW)  Q:LRSB'=8
"RTN","LR7OSMZ4",97,0)
 S LRTUS=$P(X,U,2),DZ=$P(X,U,3),Y=$P(X,U)
"RTN","LR7OSMZ4",98,0)
 D D^LRU,LINE^LR7OSUM4
"RTN","LR7OSMZ4",99,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"* MYCOLOGY "_$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")_" REPORT => "_Y_"   TECH CODE: "_DZ)
"RTN","LR7OSMZ4",100,0)
 S LRPRE=22
"RTN","LR7OSMZ4",101,0)
 D PRE^LR7OSMZU
"RTN","LR7OSMZ4",102,0)
 I $D(^LR(LRDFN,"MI",LRIDT,15)) D
"RTN","LR7OSMZ4",103,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",104,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"MYCOLOGY SMEAR/PREP:")
"RTN","LR7OSMZ4",105,0)
 . S LRMYC=0
"RTN","LR7OSMZ4",106,0)
 . F  S LRMYC=+$O(^LR(LRDFN,"MI",LRIDT,15,LRMYC)) Q:LRMYC<1  S X=^(LRMYC,0) D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(5,CCNT,X)
"RTN","LR7OSMZ4",107,0)
 ;
"RTN","LR7OSMZ4",108,0)
 I $O(^LR(LRDFN,"MI",LRIDT,9,0)) D
"RTN","LR7OSMZ4",109,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",110,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Fungus/Yeast: ")
"RTN","LR7OSMZ4",111,0)
 . D SHOW
"RTN","LR7OSMZ4",112,0)
 ;
"RTN","LR7OSMZ4",113,0)
 I $O(^LR(LRDFN,"MI",LRIDT,10,0)) D
"RTN","LR7OSMZ4",114,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",115,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Mycology Remark(s):")
"RTN","LR7OSMZ4",116,0)
 . S LRMYC=0
"RTN","LR7OSMZ4",117,0)
 . F  S LRMYC=+$O(^LR(LRDFN,"MI",LRIDT,10,LRMYC)) Q:LRMYC<1  S X=^(LRMYC,0) D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,X)
"RTN","LR7OSMZ4",118,0)
 Q
"RTN","LR7OSMZ4",119,0)
 ;
"RTN","LR7OSMZ4",120,0)
 ;
"RTN","LR7OSMZ4",121,0)
SHOW ;
"RTN","LR7OSMZ4",122,0)
 S LRTA=0
"RTN","LR7OSMZ4",123,0)
 F  S LRTA=+$O(^LR(LRDFN,"MI",LRIDT,9,LRTA)) Q:LRTA<1  D
"RTN","LR7OSMZ4",124,0)
 . S (LRBUG(LRTA),LRTBC)=$P(^(LRTA,0),U),LRQU=$P(^(0),U,2),LRTBC=$P(^LAB(61.2,LRTBC,0),U)
"RTN","LR7OSMZ4",125,0)
 . D LIST1
"RTN","LR7OSMZ4",126,0)
 Q
"RTN","LR7OSMZ4",127,0)
 ;
"RTN","LR7OSMZ4",128,0)
 ;
"RTN","LR7OSMZ4",129,0)
LIST1 ;
"RTN","LR7OSMZ4",130,0)
 N B,C
"RTN","LR7OSMZ4",131,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ4",132,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LRTBC)
"RTN","LR7OSMZ4",133,0)
 I LRQU'="" D
"RTN","LR7OSMZ4",134,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",135,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,"Quantity: "_LRQU)
"RTN","LR7OSMZ4",136,0)
 ;
"RTN","LR7OSMZ4",137,0)
 I $D(^LR(LRDFN,"MI",LRIDT,9,LRTA,1,0)) D
"RTN","LR7OSMZ4",138,0)
 . D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,"Comment:")
"RTN","LR7OSMZ4",139,0)
 . S (B,C)=0
"RTN","LR7OSMZ4",140,0)
 . F  S B=+$O(^LR(LRDFN,"MI",LRIDT,9,LRTA,1,B)) Q:B<1  S X=^(B,0) D
"RTN","LR7OSMZ4",141,0)
 . . I 'C S C=1,^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(13,CCNT,X) Q
"RTN","LR7OSMZ4",142,0)
 . . D LINE^LR7OSUM4
"RTN","LR7OSMZ4",143,0)
 . . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(13,CCNT,X)
"RTN","LR7OSMZ4",144,0)
 Q
"RTN","LR7OSMZ5")
0^83^B61988118
"RTN","LR7OSMZ5",1,0)
LR7OSMZ5 ;DALOI/STAFF - Silent Micro rpt - BACTERIA, ANTIBIOTICS ;05/24/11  14:47
"RTN","LR7OSMZ5",2,0)
 ;;5.2;LAB SERVICE;**121,187,244,350**;Sep 27, 1994;Build 230
"RTN","LR7OSMZ5",3,0)
 ;
"RTN","LR7OSMZ5",4,0)
BACT ;from LR7OSMZ2
"RTN","LR7OSMZ5",5,0)
 ;
"RTN","LR7OSMZ5",6,0)
 N A,I,J,K,L,LRABCNT,LRCOMMAX,LRCOMTAB,LRBUG,LRDCOM,LRFMT,LR1PASS,LRBN,LRI,LRINT,LRMAX,LRORG,LRRES,LRSECT,LRTAB,LRWIDTH,LRX,LRY,X,Y
"RTN","LR7OSMZ5",7,0)
 ;
"RTN","LR7OSMZ5",8,0)
 Q:+$O(^LR(LRDFN,"MI",LRIDT,3,0))<1
"RTN","LR7OSMZ5",9,0)
 ;
"RTN","LR7OSMZ5",10,0)
 S LRFMT=$P(^LAB(69.9,1,0),U,11),LRFMT=$S(LRFMT="":"I",1:LRFMT)
"RTN","LR7OSMZ5",11,0)
 ;
"RTN","LR7OSMZ5",12,0)
 ; Check each organism identified on the specimen.
"RTN","LR7OSMZ5",13,0)
 ;         A = number of organisms on report that have susceptibilities
"RTN","LR7OSMZ5",14,0)
 S (A,LRBUG)=0
"RTN","LR7OSMZ5",15,0)
 F  S LRBUG=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D
"RTN","LR7OSMZ5",16,0)
 . I +$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,2))'["2." Q
"RTN","LR7OSMZ5",17,0)
 . S A=A+1 D CHECK
"RTN","LR7OSMZ5",18,0)
 ;
"RTN","LR7OSMZ5",19,0)
 S (LRBN,LRABCNT)=0
"RTN","LR7OSMZ5",20,0)
 F  S LRBN=+$O(LRRES(LRBN)) Q:LRBN<1  S LRABCNT=LRABCNT+1
"RTN","LR7OSMZ5",21,0)
 Q:'LRABCNT
"RTN","LR7OSMZ5",22,0)
 ;
"RTN","LR7OSMZ5",23,0)
 ; Scan result to find longest value, set mininium field width = 4
"RTN","LR7OSMZ5",24,0)
 S (LRI,LRMAX(1))=0
"RTN","LR7OSMZ5",25,0)
 F  S LRI=$O(LRRES(LRI)) Q:'LRI  D
"RTN","LR7OSMZ5",26,0)
 . F I=1:1:A D
"RTN","LR7OSMZ5",27,0)
 . . S X=$L($P(LRRES(LRI),"^",I))
"RTN","LR7OSMZ5",28,0)
 . . I X<4 S X=4
"RTN","LR7OSMZ5",29,0)
 . . I X>$G(LRWIDTH(I,1)) S LRWIDTH(I,1)=X
"RTN","LR7OSMZ5",30,0)
 . . I X>LRMAX(1) S LRMAX(1)=X
"RTN","LR7OSMZ5",31,0)
 ;
"RTN","LR7OSMZ5",32,0)
 ; Scan interpretations to find longest value
"RTN","LR7OSMZ5",33,0)
 S (LRI,LRMAX(2))=0
"RTN","LR7OSMZ5",34,0)
 F  S LRI=$O(LRINT(LRI)) Q:'LRI  D
"RTN","LR7OSMZ5",35,0)
 . F I=1:1:A D
"RTN","LR7OSMZ5",36,0)
 . . S X=$L($P(LRINT(LRI),"^",I))
"RTN","LR7OSMZ5",37,0)
 . . I X<4 S X=4
"RTN","LR7OSMZ5",38,0)
 . . I X>$G(LRWIDTH(I,2)) S LRWIDTH(I,2)=X
"RTN","LR7OSMZ5",39,0)
 . . I X>LRMAX(2) S LRMAX(2)=X
"RTN","LR7OSMZ5",40,0)
 ;
"RTN","LR7OSMZ5",41,0)
 ; Find longest antibiotic display comment to display on report
"RTN","LR7OSMZ5",42,0)
 S (LRCOMMAX,LRI)=0
"RTN","LR7OSMZ5",43,0)
 F  S LRI=$O(^LAB(62.06,LRI)) Q:'LRI  D
"RTN","LR7OSMZ5",44,0)
 . S LRX=$G(^LAB(62.06,LRI,0)) Q:$P(LRX,"^",3)=""
"RTN","LR7OSMZ5",45,0)
 . I '$P(LRX,"^",2) Q
"RTN","LR7OSMZ5",46,0)
 . S LRY=0
"RTN","LR7OSMZ5",47,0)
 . F  S LRY=$O(^LR(LRDFN,"MI",LRIDT,3,LRY)) Q:'LRY  D
"RTN","LR7OSMZ5",48,0)
 . . I $D(^LR(LRDFN,"MI",LRIDT,3,LRY,$P(LRX,"^",2))) S X=$L($P(LRX,"^",3)) S:X>LRCOMMAX LRCOMMAX=X
"RTN","LR7OSMZ5",49,0)
 ;
"RTN","LR7OSMZ5",50,0)
 ; Check display width so that at least one organsism's values will display when display width is limited
"RTN","LR7OSMZ5",51,0)
 ; 31 character for antibiotic name, possibly 40 character display comments does not leave much space for actual results.
"RTN","LR7OSMZ5",52,0)
 I LRCOMMAX>10,GIOM'>80 D
"RTN","LR7OSMZ5",53,0)
 . I LRFMT="B" S X=LRMAX(1)+LRMAX(2)+4
"RTN","LR7OSMZ5",54,0)
 . I LRFMT="R" S X=LRMAX(1)+2
"RTN","LR7OSMZ5",55,0)
 . I LRFMT="I" S X=LRMAX(2)+2
"RTN","LR7OSMZ5",56,0)
 . S X=X+31
"RTN","LR7OSMZ5",57,0)
 . I (X+LRCOMMAX)>GIOM S LRCOMMAX=GIOM-X
"RTN","LR7OSMZ5",58,0)
 ;
"RTN","LR7OSMZ5",59,0)
 ; Determine tab position (column) of each organism and associated results
"RTN","LR7OSMZ5",60,0)
 ;  LRSECT will indicate if multiple sections needed when number of organisms, results and display comments exceed right margin.
"RTN","LR7OSMZ5",61,0)
 S (LRI,LRWIDTH(0,1),LRWIDTH(0,2))=0,LRSECT=1,LRTAB(LRSECT,0)=29
"RTN","LR7OSMZ5",62,0)
 F  S LRI=$O(LRWIDTH(LRI)) Q:'LRI  D
"RTN","LR7OSMZ5",63,0)
 . S LRX=LRTAB(LRSECT,LRI-1)
"RTN","LR7OSMZ5",64,0)
 . I LRFMT="B" D  Q
"RTN","LR7OSMZ5",65,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,1)+LRWIDTH(LRI-1,2)+4
"RTN","LR7OSMZ5",66,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,1)+LRWIDTH(LRI,2))>GIOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LR7OSMZ5",67,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LR7OSMZ5",68,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LR7OSMZ5",69,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+2
"RTN","LR7OSMZ5",70,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LR7OSMZ5",71,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+LRWIDTH(LRI,2)+4
"RTN","LR7OSMZ5",72,0)
 . I LRFMT="I" D  Q
"RTN","LR7OSMZ5",73,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,2)+4
"RTN","LR7OSMZ5",74,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,2))>GIOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LR7OSMZ5",75,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LR7OSMZ5",76,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LR7OSMZ5",77,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)
"RTN","LR7OSMZ5",78,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LR7OSMZ5",79,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,2)+2
"RTN","LR7OSMZ5",80,0)
 . I LRFMT="R" D  Q
"RTN","LR7OSMZ5",81,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,1)+4
"RTN","LR7OSMZ5",82,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,1))>GIOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LR7OSMZ5",83,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LR7OSMZ5",84,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LR7OSMZ5",85,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)
"RTN","LR7OSMZ5",86,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LR7OSMZ5",87,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+2
"RTN","LR7OSMZ5",88,0)
 ;
"RTN","LR7OSMZ5",89,0)
 D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSMZ5",90,0)
 S X="ANTIBIOTIC SUSCEPTIBILITY TEST RESULTS:"
"RTN","LR7OSMZ5",91,0)
 I $D(^XUSEC("LRLAB",DUZ))&'$D(LRWRDVEW) S X=X_"  ('*' indicates display is suppressed)"
"RTN","LR7OSMZ5",92,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,X)
"RTN","LR7OSMZ5",93,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ5",94,0)
 ;
"RTN","LR7OSMZ5",95,0)
 S LRSECT=0
"RTN","LR7OSMZ5",96,0)
 F  S LRSECT=$O(LRTAB(LRSECT)) Q:'LRSECT  D SECT
"RTN","LR7OSMZ5",97,0)
 ;
"RTN","LR7OSMZ5",98,0)
 Q
"RTN","LR7OSMZ5",99,0)
 ;
"RTN","LR7OSMZ5",100,0)
 ;
"RTN","LR7OSMZ5",101,0)
SECT ; Print antibiotic susceptibility for each section
"RTN","LR7OSMZ5",102,0)
 ;
"RTN","LR7OSMZ5",103,0)
 N LRAO
"RTN","LR7OSMZ5",104,0)
 ;
"RTN","LR7OSMZ5",105,0)
 D BUGHDR
"RTN","LR7OSMZ5",106,0)
 ;
"RTN","LR7OSMZ5",107,0)
 ; Display antibiotics by print order
"RTN","LR7OSMZ5",108,0)
 S LRAO=0
"RTN","LR7OSMZ5",109,0)
 F  S LRAO=$O(^LAB(62.06,"AO",LRAO)) Q:LRAO<.001  D
"RTN","LR7OSMZ5",110,0)
 . S B=$O(^LAB(62.06,"AO",LRAO,0))
"RTN","LR7OSMZ5",111,0)
 . I B>0,$D(^LAB(62.06,B,0)) D AB
"RTN","LR7OSMZ5",112,0)
 ;
"RTN","LR7OSMZ5",113,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ5",114,0)
 ;
"RTN","LR7OSMZ5",115,0)
 Q
"RTN","LR7OSMZ5",116,0)
 ;
"RTN","LR7OSMZ5",117,0)
 ;
"RTN","LR7OSMZ5",118,0)
CHECK ;
"RTN","LR7OSMZ5",119,0)
 ;
"RTN","LR7OSMZ5",120,0)
 N B,B1,B2,B3,LRBN,LRFLAG,LR1PASS
"RTN","LR7OSMZ5",121,0)
 ;
"RTN","LR7OSMZ5",122,0)
 S LRFLAG=0,LRBN=2
"RTN","LR7OSMZ5",123,0)
 F  S LRBN=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,LRBN)) Q:LRBN'["2."  D
"RTN","LR7OSMZ5",124,0)
 . S B=^LR(LRDFN,"MI",LRIDT,3,LRBUG,LRBN),B1=$P(B,U),B2=$P(B,U,2)
"RTN","LR7OSMZ5",125,0)
 . I B1'="" D FIRST
"RTN","LR7OSMZ5",126,0)
 ;
"RTN","LR7OSMZ5",127,0)
 S LRBN=2
"RTN","LR7OSMZ5",128,0)
 F  S LRBN=+$O(LR1PASS(LRBN)) Q:LRBN<1  D
"RTN","LR7OSMZ5",129,0)
 . S B=LR1PASS(LRBN),B1=$P(B,U),B2=$P(B,U,2),B3=$P(B,U,3)
"RTN","LR7OSMZ5",130,0)
 . D LAB
"RTN","LR7OSMZ5",131,0)
 ;
"RTN","LR7OSMZ5",132,0)
 S LRBUG(A)=LRBUG
"RTN","LR7OSMZ5",133,0)
 ;
"RTN","LR7OSMZ5",134,0)
 Q
"RTN","LR7OSMZ5",135,0)
 ;
"RTN","LR7OSMZ5",136,0)
 ;
"RTN","LR7OSMZ5",137,0)
FIRST ;
"RTN","LR7OSMZ5",138,0)
 ;
"RTN","LR7OSMZ5",139,0)
 ; If format is 'interpretation only' and no interpretation for this sensitivity then display sensitivity result in it's place.
"RTN","LR7OSMZ5",140,0)
 I B2="" S B2=$S(LRFMT="I":B1,1:" ")
"RTN","LR7OSMZ5",141,0)
 ;
"RTN","LR7OSMZ5",142,0)
 S B3=$P(B,U,3)
"RTN","LR7OSMZ5",143,0)
 I B2'=" ",$E(B2)'="R","A"[B3 S LRFLAG=1
"RTN","LR7OSMZ5",144,0)
 S LR1PASS(LRBN)=B1_U_B2_U_B3
"RTN","LR7OSMZ5",145,0)
 Q
"RTN","LR7OSMZ5",146,0)
 ;
"RTN","LR7OSMZ5",147,0)
 ;
"RTN","LR7OSMZ5",148,0)
LAB ;
"RTN","LR7OSMZ5",149,0)
 I $D(^XUSEC("LRLAB",DUZ)),'$D(LRWRDVEW) D  Q
"RTN","LR7OSMZ5",150,0)
 . S $P(LRRES(LRBN),U,A)=$S(B3="N"!(B3="R"&LRFLAG):B1_"*",1:B1)
"RTN","LR7OSMZ5",151,0)
 . S $P(LRINT(LRBN),U,A)=$S(B3="N"!(B3="R"&LRFLAG):B2_"*",1:B2)
"RTN","LR7OSMZ5",152,0)
 ;
"RTN","LR7OSMZ5",153,0)
 I B3=""!(B3="A")!(B3="R"&'LRFLAG) S $P(LRRES(LRBN),U,A)=B1,$P(LRINT(LRBN),U,A)=B2
"RTN","LR7OSMZ5",154,0)
 Q
"RTN","LR7OSMZ5",155,0)
 ;
"RTN","LR7OSMZ5",156,0)
 ;
"RTN","LR7OSMZ5",157,0)
AB ;
"RTN","LR7OSMZ5",158,0)
 ;
"RTN","LR7OSMZ5",159,0)
 N LRX
"RTN","LR7OSMZ5",160,0)
 ;
"RTN","LR7OSMZ5",161,0)
 S LRX=$G(^LAB(62.06,B,0)),J=$P(LRX,"^",2)
"RTN","LR7OSMZ5",162,0)
 I J<1 Q
"RTN","LR7OSMZ5",163,0)
 ;
"RTN","LR7OSMZ5",164,0)
 I '$D(LRINT(J)) Q
"RTN","LR7OSMZ5",165,0)
 I LRINT(J)'="",LRINT(J)?."^" Q
"RTN","LR7OSMZ5",166,0)
 ;
"RTN","LR7OSMZ5",167,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ5",168,0)
 ;
"RTN","LR7OSMZ5",169,0)
 ; Write name of antibiotic
"RTN","LR7OSMZ5",170,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$$LJ^XLFSTR($P(LRX,U),30,"."))
"RTN","LR7OSMZ5",171,0)
 ;
"RTN","LR7OSMZ5",172,0)
 ; Antibiotic display comment from file #62.06
"RTN","LR7OSMZ5",173,0)
 K LRDCOM(0)
"RTN","LR7OSMZ5",174,0)
 S LRDCOM=$P(LRX,U,3)
"RTN","LR7OSMZ5",175,0)
 ; If longer than comment window (GIOM-LRCOMTAB) then format to fit within window.
"RTN","LR7OSMZ5",176,0)
 I $L(LRDCOM)>(GIOM-LRCOMTAB(LRSECT)) D
"RTN","LR7OSMZ5",177,0)
 . N J,K,L
"RTN","LR7OSMZ5",178,0)
 . S J=$L(LRDCOM),K=0,L=GIOM-LRCOMTAB(LRSECT)-1
"RTN","LR7OSMZ5",179,0)
 . F  Q:LRDCOM=""  S K=K+1,LRDCOM(0,K)=$E(LRDCOM,1,L),LRDCOM=$E(LRDCOM,L+1,J)
"RTN","LR7OSMZ5",180,0)
 ;
"RTN","LR7OSMZ5",181,0)
 D SIR
"RTN","LR7OSMZ5",182,0)
 Q
"RTN","LR7OSMZ5",183,0)
 ;
"RTN","LR7OSMZ5",184,0)
 ;
"RTN","LR7OSMZ5",185,0)
BUGHDR ;
"RTN","LR7OSMZ5",186,0)
 ;
"RTN","LR7OSMZ5",187,0)
 N A,J
"RTN","LR7OSMZ5",188,0)
 F J=1:1 S LRBUG=$P(LRSECT(LRSECT),"^",J) Q:LRBUG=""  D
"RTN","LR7OSMZ5",189,0)
 . S LRORG=$P(^LR(LRDFN,"MI",LRIDT,3,LRBUG(LRBUG),0),U),LRORG=$P(^LAB(61.2,LRORG,0),U)
"RTN","LR7OSMZ5",190,0)
 . I +$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG(LRBUG),2))'["2." Q
"RTN","LR7OSMZ5",191,0)
 . D ORG
"RTN","LR7OSMZ5",192,0)
 ;
"RTN","LR7OSMZ5",193,0)
 I LRFMT="B" D
"RTN","LR7OSMZ5",194,0)
 . D LN^LR7OSMZ1
"RTN","LR7OSMZ5",195,0)
 . S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ5",196,0)
 . F J=1:1 S A=$P(LRSECT(LRSECT),"^",J) Q:A=""  S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,A),CCNT,":")
"RTN","LR7OSMZ5",197,0)
 ;
"RTN","LR7OSMZ5",198,0)
 D LN^LR7OSMZ1
"RTN","LR7OSMZ5",199,0)
 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ5",200,0)
 ;
"RTN","LR7OSMZ5",201,0)
 F J=1:1 S A=$P(LRSECT(LRSECT),"^",J) Q:A=""  D
"RTN","LR7OSMZ5",202,0)
 . I LRFMT'="B" S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,A),CCNT,":")
"RTN","LR7OSMZ5",203,0)
 . I LRFMT="B" D
"RTN","LR7OSMZ5",204,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,A,1),CCNT,"SUSC")
"RTN","LR7OSMZ5",205,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,A,2),CCNT,"INTP")
"RTN","LR7OSMZ5",206,0)
 ;
"RTN","LR7OSMZ5",207,0)
 Q
"RTN","LR7OSMZ5",208,0)
 ;
"RTN","LR7OSMZ5",209,0)
 ;
"RTN","LR7OSMZ5",210,0)
ORG ;
"RTN","LR7OSMZ5",211,0)
 ;
"RTN","LR7OSMZ5",212,0)
 ; LR2ORMOR flag indicating 2 or more organsims on report - set in LRMIPSZ2.
"RTN","LR7OSMZ5",213,0)
 ;
"RTN","LR7OSMZ5",214,0)
 N J
"RTN","LR7OSMZ5",215,0)
 ;
"RTN","LR7OSMZ5",216,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZ5",217,0)
 ;
"RTN","LR7OSMZ5",218,0)
 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ5",219,0)
 ;
"RTN","LR7OSMZ5",220,0)
 I LRBUG>$P(LRSECT(LRSECT),"^") F J=1:1 Q:$P(LRSECT(LRSECT),"^",J)=LRBUG  S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,$P(LRSECT(LRSECT),"^",J)),CCNT,":")
"RTN","LR7OSMZ5",221,0)
 ;
"RTN","LR7OSMZ5",222,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,LRBUG),CCNT,$S(LR2ORMOR:LRBUG(LRBUG)_". ",1:"")_LRORG)
"RTN","LR7OSMZ5",223,0)
 ;
"RTN","LR7OSMZ5",224,0)
 Q
"RTN","LR7OSMZ5",225,0)
 ;
"RTN","LR7OSMZ5",226,0)
 ;
"RTN","LR7OSMZ5",227,0)
SIR ; Display the susceptibility results/interpretations
"RTN","LR7OSMZ5",228,0)
 ;
"RTN","LR7OSMZ5",229,0)
 N II,K
"RTN","LR7OSMZ5",230,0)
 ;
"RTN","LR7OSMZ5",231,0)
 F K=1:1 S II=$P(LRSECT(LRSECT),"^",K) Q:II=""  D
"RTN","LR7OSMZ5",232,0)
 . I LRFMT="B" D  Q
"RTN","LR7OSMZ5",233,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,II,1),CCNT,$P(LRRES(J),U,II))
"RTN","LR7OSMZ5",234,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,II,2),CCNT,$P(LRINT(J),U,II))
"RTN","LR7OSMZ5",235,0)
 . I LRFMT="I" S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,II,2),CCNT,$P(LRINT(J),U,II)) Q
"RTN","LR7OSMZ5",236,0)
 . I LRFMT="R" S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRTAB(LRSECT,II,1),CCNT,$P(LRRES(J),U,II)) Q
"RTN","LR7OSMZ5",237,0)
 ;
"RTN","LR7OSMZ5",238,0)
 D DCOM
"RTN","LR7OSMZ5",239,0)
 Q
"RTN","LR7OSMZ5",240,0)
 ;
"RTN","LR7OSMZ5",241,0)
 ;
"RTN","LR7OSMZ5",242,0)
DCOM ; Show antibiotic's display comments
"RTN","LR7OSMZ5",243,0)
 ;
"RTN","LR7OSMZ5",244,0)
 I LRDCOM'="" D
"RTN","LR7OSMZ5",245,0)
 . I LRCOMTAB(LRSECT)<$X,$L(LRDCOM)>(GIOM-$X) D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ5",246,0)
 . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRCOMTAB(LRSECT),CCNT,LRDCOM)
"RTN","LR7OSMZ5",247,0)
 ;
"RTN","LR7OSMZ5",248,0)
 I $D(LRDCOM(0)) D
"RTN","LR7OSMZ5",249,0)
 . N J
"RTN","LR7OSMZ5",250,0)
 . S J=0
"RTN","LR7OSMZ5",251,0)
 . F  S J=$O(LRDCOM(0,J)) Q:'J  D
"RTN","LR7OSMZ5",252,0)
 . . I J>1 D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSMZ5",253,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRCOMTAB(LRSECT),CCNT,LRDCOM(0,J))
"RTN","LR7OSMZ5",254,0)
 ;
"RTN","LR7OSMZ5",255,0)
 I $D(LRDCOM(J)) D
"RTN","LR7OSMZ5",256,0)
 . S K=0,A=0
"RTN","LR7OSMZ5",257,0)
 . F  S A=+$O(LRDCOM(J,A)) Q:A<1  D
"RTN","LR7OSMZ5",258,0)
 . . D:'('K&(LRDCOM="")) LINE^LR7OSUM4
"RTN","LR7OSMZ5",259,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRCOMTAB(LRSECT),CCNT,LRDCOM(J,A)),K=1
"RTN","LR7OSMZ5",260,0)
 Q
"RTN","LR7OSMZU")
0^85^B17588750
"RTN","LR7OSMZU",1,0)
LR7OSMZU ;DALOI/STAFF - Silent Micro rpt cont. ;11/05/09  12:04
"RTN","LR7OSMZU",2,0)
 ;;5.2;LAB SERVICE;**121,244,350**;Sep 27, 1994;Build 230
"RTN","LR7OSMZU",3,0)
 ;
"RTN","LR7OSMZU",4,0)
 ;
"RTN","LR7OSMZU",5,0)
FH ;from LR7OSMZ2, LR7OSMZ5
"RTN","LR7OSMZU",6,0)
 Q
"RTN","LR7OSMZU",7,0)
 ;
"RTN","LR7OSMZU",8,0)
 ;
"RTN","LR7OSMZU",9,0)
FHR ;from LR7OSMZ1, LR7OSMZ2
"RTN","LR7OSMZU",10,0)
 D REFS
"RTN","LR7OSMZU",11,0)
 Q
"RTN","LR7OSMZU",12,0)
 ;
"RTN","LR7OSMZU",13,0)
 ;
"RTN","LR7OSMZU",14,0)
REFS ;from LR7OSMZ1
"RTN","LR7OSMZU",15,0)
 S B=1,LREF=0
"RTN","LR7OSMZU",16,0)
 F  S LREF=$O(LRBUG(LREF)) Q:LREF=""  S LRIFN=LRBUG(LREF) D LIST Q:LREND
"RTN","LR7OSMZU",17,0)
 K LRBUG
"RTN","LR7OSMZU",18,0)
 Q
"RTN","LR7OSMZU",19,0)
 ;
"RTN","LR7OSMZU",20,0)
 ;
"RTN","LR7OSMZU",21,0)
LIST Q:'$D(^LAB(61.2,LRIFN,"JR",0))
"RTN","LR7OSMZU",22,0)
 S LRNUM=0
"RTN","LR7OSMZU",23,0)
 F  S LRNUM=$O(^LAB(61.2,LRIFN,"JR",LRNUM)) Q:LRNUM=""  D WR Q:LREND
"RTN","LR7OSMZU",24,0)
 Q
"RTN","LR7OSMZU",25,0)
 ;
"RTN","LR7OSMZU",26,0)
 ;
"RTN","LR7OSMZU",27,0)
WR ;
"RTN","LR7OSMZU",28,0)
 S X1=^LAB(61.2,LRIFN,"JR",LRNUM,0)
"RTN","LR7OSMZU",29,0)
 Q:$P(X1,U,7)'=1
"RTN","LR7OSMZU",30,0)
 I B=1 D LINE^LR7OSUM4,LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Reference(s): ")
"RTN","LR7OSMZU",31,0)
 S B=0
"RTN","LR7OSMZU",32,0)
 D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSMZU",33,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$J(LREF,2)_". "_$P(X1,U,2))
"RTN","LR7OSMZU",34,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",35,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$P(X1,U))
"RTN","LR7OSMZU",36,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",37,0)
 I $P(X1,U,3)'="" S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$P(^LAB(95,$P(X1,U,3),0),U)_" "_$P(X1,U,4)_":")
"RTN","LR7OSMZU",38,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$P(X1,U,5))
"RTN","LR7OSMZU",39,0)
 I $P(X1,U,6)'="" S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,","_$E($P(X1,U,6),1,3)+1700)
"RTN","LR7OSMZU",40,0)
 Q
"RTN","LR7OSMZU",41,0)
 ;
"RTN","LR7OSMZU",42,0)
 ;
"RTN","LR7OSMZU",43,0)
HDR ;from LR7OSMZ1
"RTN","LR7OSMZU",44,0)
 N LRI,LRPF,LRX
"RTN","LR7OSMZU",45,0)
 ;
"RTN","LR7OSMZU",46,0)
 S LRPG=LRPG+1,LRJ02=1
"RTN","LR7OSMZU",47,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",48,0)
 S X=GIOM/2-(12/2+5),^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(X,CCNT,"---- MICROBIOLOGY ----")
"RTN","LR7OSMZU",49,0)
 ;
"RTN","LR7OSMZU",50,0)
 ; Print header with name of facility printing report.
"RTN","LR7OSMZU",51,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC
"RTN","LR7OSMZU",52,0)
 ;
"RTN","LR7OSMZU",53,0)
 ; Display reporting lab
"RTN","LR7OSMZU",54,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OSMZU",55,0)
 . S LRX=+$G(^LR(LRDFN,"MI",LRIDT,"RF"))
"RTN","LR7OSMZU",56,0)
 . I LRX D RL(LRX)
"RTN","LR7OSMZU",57,0)
 ;
"RTN","LR7OSMZU",58,0)
 ;D LINE^LR7OSUM4
"RTN","LR7OSMZU",59,0)
 K LRX
"RTN","LR7OSMZU",60,0)
 D ORUA^LRRP1(.LRX,LRDFN,"MI",LRIDT,1)
"RTN","LR7OSMZU",61,0)
 S LRI=0
"RTN","LR7OSMZU",62,0)
 F  S LRI=$O(LRX(LRI)) Q:LRI<1  D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LRX(LRI))
"RTN","LR7OSMZU",63,0)
 ;S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Accession: "_LRACC)_$$S^LR7OS(40,CCNT,"Received: "_LRRC)
"RTN","LR7OSMZU",64,0)
 ;
"RTN","LR7OSMZU",65,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",66,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Collection sample: "_LRCS)_$$S^LR7OS(40,CCNT,"Collection date: "_LRTK)
"RTN","LR7OSMZU",67,0)
 I LRCS'=LRST,LRPG=1 D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Site/Specimen: "_LRST)
"RTN","LR7OSMZU",68,0)
 I LRPG=1 D
"RTN","LR7OSMZU",69,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZU",70,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Provider: "_LRDOC)
"RTN","LR7OSMZU",71,0)
 . D LINE^LR7OSUM4
"RTN","LR7OSMZU",72,0)
 . I LRCMNT'="" S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Comment on specimen: "_$S($L(LRCMNT)>58:"",1:LRCMNT)) D LINE^LR7OSUM4
"RTN","LR7OSMZU",73,0)
 . I $L(LRCMNT)>58 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LRCMNT) D LINE^LR7OSUM4
"RTN","LR7OSMZU",74,0)
 Q
"RTN","LR7OSMZU",75,0)
 ;
"RTN","LR7OSMZU",76,0)
 ;
"RTN","LR7OSMZU",77,0)
PRE ;from LR7OSMZ2, LR7OSMZ3, LR7OSMZ4
"RTN","LR7OSMZU",78,0)
 Q:LRTUS["F"&('$D(^XUSEC("LRLAB",DUZ))!$D(LRWRDVEW))
"RTN","LR7OSMZU",79,0)
 I +$O(^LR(LRDFN,"MI",LRIDT,LRPRE,0)) D
"RTN","LR7OSMZU",80,0)
 . D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Preliminary Comments: ")
"RTN","LR7OSMZU",81,0)
 . S J=0
"RTN","LR7OSMZU",82,0)
 . F  S J=+$O(^LR(LRDFN,"MI",LRIDT,LRPRE,J)) Q:J<1  S X=^(J,0) D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(3,CCNT,X)
"RTN","LR7OSMZU",83,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",84,0)
 Q
"RTN","LR7OSMZU",85,0)
 ;
"RTN","LR7OSMZU",86,0)
 ;
"RTN","LR7OSMZU",87,0)
RL(LRX) ; Set reporting lab into TMP global
"RTN","LR7OSMZU",88,0)
 ; Call with LRX = IEN of entry in file #4
"RTN","LR7OSMZU",89,0)
 ;
"RTN","LR7OSMZU",90,0)
 N LINE
"RTN","LR7OSMZU",91,0)
 S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OSMZU",92,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",93,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",94,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Reporting Lab: "_$P(LINE,"^"))
"RTN","LR7OSMZU",95,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",96,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"               "_$P(LINE,"^",2))
"RTN","LR7OSMZU",97,0)
 D LINE^LR7OSUM4
"RTN","LR7OSMZU",98,0)
 Q
"RTN","LR7OSMZU",99,0)
 ;
"RTN","LR7OSMZU",100,0)
 ;
"RTN","LR7OSMZU",101,0)
PFAC ; Print header with name of facility printing report.
"RTN","LR7OSMZU",102,0)
 ;
"RTN","LR7OSMZU",103,0)
 N LRI,LRPF
"RTN","LR7OSMZU",104,0)
 D PFAC^LRRP1(DUZ(2),0,1,.LRPF)
"RTN","LR7OSMZU",105,0)
 S LRI=0
"RTN","LR7OSMZU",106,0)
 F  S LRI=$O(LRPF(LRI)) Q:'LRI  D LN^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,LRPF(LRI))
"RTN","LR7OSMZU",107,0)
 D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,"As of: "_$$HTE^XLFDT($H,"1M"))
"RTN","LR7OSMZU",108,0)
 D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSMZU",109,0)
 ;
"RTN","LR7OSMZU",110,0)
 Q
"RTN","LR7OSUM")
0^145^B15755012
"RTN","LR7OSUM",1,0)
LR7OSUM ;DALOI/STAFF - Silent Patient cum ;11/19/09  18:15
"RTN","LR7OSUM",2,0)
 ;;5.2;LAB SERVICE;**121,187,230,256,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM",3,0)
 ;
"RTN","LR7OSUM",4,0)
 ;
"RTN","LR7OSUM",5,0)
DFN S LRIN=0,LRIDT=0,LREND=0,LROUT=9999999
"RTN","LR7OSUM",6,0)
 K ZTRTN,DIC,X2
"RTN","LR7OSUM",7,0)
 D ^LRDPA Q:Y<0
"RTN","LR7OSUM",8,0)
 U IO
"RTN","LR7OSUM",9,0)
 D LRLLOC,END
"RTN","LR7OSUM",10,0)
 Q
"RTN","LR7OSUM",11,0)
 ;
"RTN","LR7OSUM",12,0)
 ;
"RTN","LR7OSUM",13,0)
LRLLOC ;
"RTN","LR7OSUM",14,0)
 N GCNT,GIOM,GIOSL,CCNT,B,C,LRSB,VA,VA200,VAERR,W
"RTN","LR7OSUM",15,0)
 S CCNT=1,GCNT=0,GIOSL=999999,LRLLOC=$S($L(LRWRD):LRWRD,$D(^LR(LRDFN,.1)):^(.1),1:"File Room"),SSN=" "_SSN_" "
"RTN","LR7OSUM",16,0)
 S ^TMP($J,LRDFN,0)=PNM_U_SSN_U_AGE_U_LRDPF_U_DFN
"RTN","LR7OSUM",17,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("MISCELLANEOUS TESTS"))) S ^TMP($J,LRDFN,"MISC")="MISCELLANEOUS TESTS^"
"RTN","LR7OSUM",18,0)
 D LRIDT^LR7OSUM1
"RTN","LR7OSUM",19,0)
 D ^LR7OSUM3
"RTN","LR7OSUM",20,0)
 ;
"RTN","LR7OSUM",21,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("MICROBIOLOGY"))) D MICRO^LR7OSUM1
"RTN","LR7OSUM",22,0)
 I $S('$D(SUBHEAD):1,1:$D(SUBHEAD("BLOOD BANK"))) D
"RTN","LR7OSUM",23,0)
 . N GIOM
"RTN","LR7OSUM",24,0)
 . S GIOM=$G(LRGIOM)
"RTN","LR7OSUM",25,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSUM",26,0)
 . D EN^LR7OSBR
"RTN","LR7OSUM",27,0)
 ;
"RTN","LR7OSUM",28,0)
 ; Anatomic Path
"RTN","LR7OSUM",29,0)
 D EN^LR7OSAP
"RTN","LR7OSUM",30,0)
 Q
"RTN","LR7OSUM",31,0)
 ;
"RTN","LR7OSUM",32,0)
 ;
"RTN","LR7OSUM",33,0)
END ; Cleanup variables
"RTN","LR7OSUM",34,0)
 D END^LRACM
"RTN","LR7OSUM",35,0)
 D CLEAN
"RTN","LR7OSUM",36,0)
 ;
"RTN","LR7OSUM",37,0)
 Q
"RTN","LR7OSUM",38,0)
 ;
"RTN","LR7OSUM",39,0)
 ;
"RTN","LR7OSUM",40,0)
EN(Y,DFN,SDATE,EDATE,COUNT,LRGIOM,SUBHEAD) ; Enter here to get silent lab results
"RTN","LR7OSUM",41,0)
 ; Results in "CH" subscript are stored in the Cumulative format
"RTN","LR7OSUM",42,0)
 ; Headers for each format are found in ^TMP("LRH",$J,name)=ln count
"RTN","LR7OSUM",43,0)
 ; Index for where tests are found in ^TMP("LRT",$J,print name)=header^line # of1st occurance.  Entries without a header means that the test exists in the report, but no result.
"RTN","LR7OSUM",44,0)
 ; Formatted reports are found in ^TMP("LRC",$J,ifn)
"RTN","LR7OSUM",45,0)
 ;     DFN = Patient
"RTN","LR7OSUM",46,0)
 ;   SDATE = Start date to search for results (optional)
"RTN","LR7OSUM",47,0)
 ;   EDATE = End date to search for results (optional)
"RTN","LR7OSUM",48,0)
 ;   COUNT = Count of results to send (optional)
"RTN","LR7OSUM",49,0)
 ;  LRGIOM = Right margin
"RTN","LR7OSUM",50,0)
 ; SUBHEAD = Array of subheaders from file 64.5, misc, micro & AP to show results.  Null param = get all results
"RTN","LR7OSUM",51,0)
 ;
"RTN","LR7OSUM",52,0)
 Q:'$G(DFN)
"RTN","LR7OSUM",53,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN)
"RTN","LR7OSUM",54,0)
 Q:'LRDFN
"RTN","LR7OSUM",55,0)
 K ^TMP($J,"EVAL")
"RTN","LR7OSUM",56,0)
 N A,AGE,CT1,DIC,DOB,F,G,H,I,IFN,INC,J,K,LR,LRA,LRAA,LRABV,LRACT,LRADM,LRADX,LRCNT,LRCTN,LRDP,LREND,LRJ02,LRMD,LRMIT,LRN,LRNAME,LRPRAC,LRQ,LRRB,LRSAV,LRSPE,LRSPEM,LRTEST,LRTOP,LRTREA,LRUNKNOW,LRUNT,LRVAL,LRW,M,N,P,P7,S1,SP,T,X,X1,XZ,Y,Y1
"RTN","LR7OSUM",57,0)
 D PT^LRX
"RTN","LR7OSUM",58,0)
 S LRADM=$P($G(VAIN(7)),"^",2),LRADX=$G(VAIN(9)),CT1=0
"RTN","LR7OSUM",59,0)
 K VA,VADM,VAERR,VAIN
"RTN","LR7OSUM",60,0)
 D DTRNG^LR7OR1
"RTN","LR7OSUM",61,0)
 S COUNT=$S($G(COUNT):COUNT,1:9999999)
"RTN","LR7OSUM",62,0)
 I $G(LRGIOM)>240 S LRGIOM=240
"RTN","LR7OSUM",63,0)
 S (LRIN,LRIDT)=SDATE,LROUT=EDATE,LREND=0
"RTN","LR7OSUM",64,0)
 D LRLLOC,END
"RTN","LR7OSUM",65,0)
 S Y=$NA(^TMP("LRC",$J))
"RTN","LR7OSUM",66,0)
 Q
"RTN","LR7OSUM",67,0)
 ;
"RTN","LR7OSUM",68,0)
 ;
"RTN","LR7OSUM",69,0)
TEST ; Test the output
"RTN","LR7OSUM",70,0)
 N IFN
"RTN","LR7OSUM",71,0)
 S IFN=0 F  S IFN=$O(^TMP("LRC",$J,IFN)) Q:IFN<1  W !,^(IFN,0)
"RTN","LR7OSUM",72,0)
 Q
"RTN","LR7OSUM",73,0)
 ;
"RTN","LR7OSUM",74,0)
 ;
"RTN","LR7OSUM",75,0)
GET64(Y) ; Get minor headers from file 64.5
"RTN","LR7OSUM",76,0)
 N I,J
"RTN","LR7OSUM",77,0)
 S I=0
"RTN","LR7OSUM",78,0)
 F  S I=$O(^LAB(64.5,1,1,I)) Q:I<1  S J=0 F  S J=$O(^LAB(64.5,1,1,I,1,J)) Q:J<1  S X=^(J,0),Y($P(X,"^"))=""
"RTN","LR7OSUM",79,0)
 S Y("MISCELLANEOUS TESTS")=""
"RTN","LR7OSUM",80,0)
 S Y("MICROBIOLOGY")=""
"RTN","LR7OSUM",81,0)
 S Y("BLOOD BANK")=""
"RTN","LR7OSUM",82,0)
 S Y("CYTOPATHOLOGY")=""
"RTN","LR7OSUM",83,0)
 S Y("SURGICAL PATHOLOGY")=""
"RTN","LR7OSUM",84,0)
 S Y("EM")=""
"RTN","LR7OSUM",85,0)
 S Y("AUTOPSY")=""
"RTN","LR7OSUM",86,0)
 S Y=$NA(Y)
"RTN","LR7OSUM",87,0)
 Q
"RTN","LR7OSUM",88,0)
 ;
"RTN","LR7OSUM",89,0)
 ;
"RTN","LR7OSUM",90,0)
PT ; Test with a loop thru multiple patients
"RTN","LR7OSUM",91,0)
 N X,DFN,PTN,PTNX
"RTN","LR7OSUM",92,0)
 W !!,"How many patients: " R X:DTIME Q:X["^"
"RTN","LR7OSUM",93,0)
 I X'?1N.N W !!,"Enter a number" G PT
"RTN","LR7OSUM",94,0)
 S DFN=0,PTNX=X
"RTN","LR7OSUM",95,0)
 F PTN=1:1:PTNX S DFN=$O(^DPT(DFN)) Q:DFN<1  I $D(^DPT(DFN,"LR")) K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J) D EN(.Y,DFN) W !!!!,"////////////////////"_$P(^DPT(DFN,0),"^")_" LRDFN:"_+^DPT(DFN,"LR")_"////////////////////",!! D TEST
"RTN","LR7OSUM",96,0)
 Q
"RTN","LR7OSUM",97,0)
 ;
"RTN","LR7OSUM",98,0)
 ;
"RTN","LR7OSUM",99,0)
CLEAN ; Clean up TMP globals
"RTN","LR7OSUM",100,0)
 K ^TMP("LRT",$J),^TMP("LRPLS",$J),^TMP("LRPLS-ADDR",$J),^TMP("LRCMTINDX",$J)
"RTN","LR7OSUM",101,0)
 Q
"RTN","LR7OSUM",102,0)
 ;
"RTN","LR7OSUM",103,0)
 ;
"RTN","LR7OSUM",104,0)
AP(DFN) ; Get just the AP results
"RTN","LR7OSUM",105,0)
 Q:'$D(DFN)
"RTN","LR7OSUM",106,0)
 N GIOM,SUBHEAD,LRAU,LRV,LRZ,%I,E
"RTN","LR7OSUM",107,0)
 K ^TMP("LRC",$J)
"RTN","LR7OSUM",108,0)
 S SUBHEAD("CYTOPATHOLOGY")=""
"RTN","LR7OSUM",109,0)
 S SUBHEAD("SURGICAL PATHOLOGY")=""
"RTN","LR7OSUM",110,0)
 S SUBHEAD("EM")=""
"RTN","LR7OSUM",111,0)
 S SUBHEAD("AUTOPSY")=""
"RTN","LR7OSUM",112,0)
 S GIOM=$$GET^XPAR("USR^DIV^PKG","LR AP GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSUM",113,0)
 I GIOM="" S GIOM=80
"RTN","LR7OSUM",114,0)
 D EN(.ZIP,DFN,,,,GIOM,.SUBHEAD)
"RTN","LR7OSUM",115,0)
 Q
"RTN","LR7OSUM1")
0^20^B83587916
"RTN","LR7OSUM1",1,0)
LR7OSUM1 ;DALOI/staff - Silent Patient cum cont. ;11/05/09  12:12
"RTN","LR7OSUM1",2,0)
 ;;5.2;LAB SERVICE;**121,187,256,286,384,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM1",3,0)
 ;
"RTN","LR7OSUM1",4,0)
LRIDT ; from LR7OSUM
"RTN","LR7OSUM1",5,0)
 N GIOM,LRDRL
"RTN","LR7OSUM1",6,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSUM1",7,0)
 I GIOM="" D
"RTN","LR7OSUM1",8,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR CH GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSUM1",9,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSUM1",10,0)
 K ^TMP("LRPLS",$J),^TMP("LRPLS-ADDR",$J),^TMP("LRCMTINDX",$J)
"RTN","LR7OSUM1",11,0)
 ;
"RTN","LR7OSUM1",12,0)
 ; Flag to determine if reporting laboratory is printed on report
"RTN","LR7OSUM1",13,0)
 S LRDRL=$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2
"RTN","LR7OSUM1",14,0)
 ;
"RTN","LR7OSUM1",15,0)
 F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1!(LRIDT>LROUT)!(CT1>COUNT)  I $D(^(LRIDT,0)) S X=^(0),CT1=CT1+1 D LRIIDT
"RTN","LR7OSUM1",16,0)
 D CMTINDX^LR7OSUM2
"RTN","LR7OSUM1",17,0)
 Q
"RTN","LR7OSUM1",18,0)
 ;
"RTN","LR7OSUM1",19,0)
 ;
"RTN","LR7OSUM1",20,0)
LRIIDT ;
"RTN","LR7OSUM1",21,0)
 N LRIIDT,LRAN,LRPROV,LREAL,LRSPM,LRSPM1,LRSUB,LRTLOC,LRTNN,LRTST,LRTSTS,LRVDT,LRVIDT
"RTN","LR7OSUM1",22,0)
 S (LRIIDT,LRVIDT)=$P(X,U,1),LREAL=$P(X,U,2),LRSUB=1,LRTNN=1,LRSPM=$P(X,U,5),LRTLOC=$E($P(X,U,11),1,7),LRVDT=$P(X,U,3),LRAN=$P(X,U,6),LRPROV=$P(X,U,10)
"RTN","LR7OSUM1",23,0)
 ;
"RTN","LR7OSUM1",24,0)
 I LRVDT D  Q
"RTN","LR7OSUM1",25,0)
 . D LRSUB,ORDBY^LR7OSUM2,RELDT^LR7OSUM2
"RTN","LR7OSUM1",26,0)
 . I LRDRL D RL^LR7OSUM2
"RTN","LR7OSUM1",27,0)
 . D PLS^LR7OSUM2
"RTN","LR7OSUM1",28,0)
 ;
"RTN","LR7OSUM1",29,0)
 I LRVDT="" D
"RTN","LR7OSUM1",30,0)
 . D CHKNP,ORDBY^LR7OSUM2
"RTN","LR7OSUM1",31,0)
 . I LRDRL D RL^LR7OSUM2
"RTN","LR7OSUM1",32,0)
 . N OUTCNT
"RTN","LR7OSUM1",33,0)
 . S OUTCNT=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),OUTCNT=OUTCNT+1
"RTN","LR7OSUM1",34,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)=" "
"RTN","LR7OSUM1",35,0)
 ;
"RTN","LR7OSUM1",36,0)
 Q
"RTN","LR7OSUM1",37,0)
 ;
"RTN","LR7OSUM1",38,0)
 ;
"RTN","LR7OSUM1",39,0)
LRSUB ;
"RTN","LR7OSUM1",40,0)
 N LRTRES
"RTN","LR7OSUM1",41,0)
 S LRSUB=1
"RTN","LR7OSUM1",42,0)
 F  S LRSUB=$O(^LR(LRDFN,"CH",LRIDT,LRSUB)) Q:LRSUB<1  D
"RTN","LR7OSUM1",43,0)
 . S X=^LR(LRDFN,"CH",LRIDT,LRSUB)
"RTN","LR7OSUM1",44,0)
 . S LRTRES=$$TSTRES^LRRPU(LRDFN,"CH",LRIDT,LRSUB,"")
"RTN","LR7OSUM1",45,0)
 . I $P(LRTRES,"^",1)="" Q
"RTN","LR7OSUM1",46,0)
 . D SUB1
"RTN","LR7OSUM1",47,0)
 Q
"RTN","LR7OSUM1",48,0)
 ;
"RTN","LR7OSUM1",49,0)
 ;
"RTN","LR7OSUM1",50,0)
SUB1 ;
"RTN","LR7OSUM1",51,0)
 N LRNOFL,LRTSTVAL
"RTN","LR7OSUM1",52,0)
 S LRTSTVAL=$P(LRTRES,U,1)
"RTN","LR7OSUM1",53,0)
 S LRNOFL="",LRTST=$O(^LAB(60,"C","CH;"_LRSUB_";"_1,0))
"RTN","LR7OSUM1",54,0)
 Q:LRTST=""
"RTN","LR7OSUM1",55,0)
 Q:"IN"[$P(^LAB(60,LRTST,0),U,3)
"RTN","LR7OSUM1",56,0)
 I '$D(^LAB(64.5,"AC",LRSUB)) D MISC Q
"RTN","LR7OSUM1",57,0)
 K LRNON
"RTN","LR7OSUM1",58,0)
 D LRMH
"RTN","LR7OSUM1",59,0)
 I '$D(LRNON) D MISC
"RTN","LR7OSUM1",60,0)
 Q
"RTN","LR7OSUM1",61,0)
 ;
"RTN","LR7OSUM1",62,0)
 ;
"RTN","LR7OSUM1",63,0)
LRMH ;
"RTN","LR7OSUM1",64,0)
 S LRMH=0
"RTN","LR7OSUM1",65,0)
 F  S LRMH=$O(^LAB(64.5,"AC",LRSUB,1,LRMH)) Q:LRMH<1  D LRSH
"RTN","LR7OSUM1",66,0)
 Q
"RTN","LR7OSUM1",67,0)
 ;
"RTN","LR7OSUM1",68,0)
 ;
"RTN","LR7OSUM1",69,0)
LRSH ;
"RTN","LR7OSUM1",70,0)
 S LRSH=0
"RTN","LR7OSUM1",71,0)
 F  S LRSH=$O(^LAB(64.5,"AC",LRSUB,1,LRMH,LRSH)) Q:LRSH<1  D TST
"RTN","LR7OSUM1",72,0)
 Q
"RTN","LR7OSUM1",73,0)
 ;
"RTN","LR7OSUM1",74,0)
 ;
"RTN","LR7OSUM1",75,0)
TST ;
"RTN","LR7OSUM1",76,0)
 S LRTSTS=0
"RTN","LR7OSUM1",77,0)
 F  S LRTSTS=$O(^LAB(64.5,"AC",LRSUB,1,LRMH,LRSH,LRTSTS)) Q:'LRTSTS  S LRSPM1=^(LRTSTS) D TST1
"RTN","LR7OSUM1",78,0)
 Q
"RTN","LR7OSUM1",79,0)
 ;
"RTN","LR7OSUM1",80,0)
 ;
"RTN","LR7OSUM1",81,0)
TST1 ;
"RTN","LR7OSUM1",82,0)
 Q:LRSPM'=LRSPM1
"RTN","LR7OSUM1",83,0)
 ;
"RTN","LR7OSUM1",84,0)
SBSET ;
"RTN","LR7OSUM1",85,0)
 N LRMHN,LRTF
"RTN","LR7OSUM1",86,0)
 S LRMHN=$P(^LAB(64.5,1,1,LRMH,0),U,1),LRTF=^(1,LRSH,0),$P(LRTF,U,4)=$P(LRTF,U,3),$P(LRTF,U,3)=$P(^(1,0),U,4),LRNON=1
"RTN","LR7OSUM1",87,0)
 Q:$S('$D(SUBHEAD):0,1:'$D(SUBHEAD($P(LRTF,"^"))))
"RTN","LR7OSUM1",88,0)
 ;
"RTN","LR7OSUM1",89,0)
 ;**  LRTE=Total minor headings
"RTN","LR7OSUM1",90,0)
 ;** LRMHN=Major heading name^TE^Lab performing tests
"RTN","LR7OSUM1",91,0)
 ;**  LRTF=Minor header^Profile specimen^Total tests^Type of display
"RTN","LR7OSUM1",92,0)
 ;
"RTN","LR7OSUM1",93,0)
 S LRIIDT=LRVIDT
"RTN","LR7OSUM1",94,0)
 S:'$D(^TMP($J,LRDFN,LRMH)) ^(LRMH)=LRMHN
"RTN","LR7OSUM1",95,0)
 S:'$D(^TMP($J,LRDFN,LRMH,LRSH))!($D(^(LRSH))=10) ^(LRSH)=LRTF_U
"RTN","LR7OSUM1",96,0)
 S:'$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,0)) ^(0)=LRTLOC_U_LRVIDT_U_LRVDT_U_LRAN_U_LRIDT_U_LREAL
"RTN","LR7OSUM1",97,0)
 ;
"RTN","LR7OSUM1",98,0)
LRTSTVAL ;
"RTN","LR7OSUM1",99,0)
 ;
"RTN","LR7OSUM1",100,0)
 N TST
"RTN","LR7OSUM1",101,0)
 S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,LRTSTS)=$P(LRTRES,"^")_"^"_$P(LRTRES,"^",2)
"RTN","LR7OSUM1",102,0)
 S X=$P($G(^LAB(64.5,1,1,LRMH,1,LRSH,1,LRTSTS,0)),"^",3)
"RTN","LR7OSUM1",103,0)
 I X'="" S ^TMP("LRT",$J,X)=$P(LRTF,"^")
"RTN","LR7OSUM1",104,0)
 ;
"RTN","LR7OSUM1",105,0)
 ; Check for comment on specimen and put in TMP global on first pass
"RTN","LR7OSUM1",106,0)
 I $D(^LR(LRDFN,"CH",LRIDT,1,0)),'$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",0)) D TEXT
"RTN","LR7OSUM1",107,0)
 ;
"RTN","LR7OSUM1",108,0)
 ; Check if individual result's unit/normals different from test units/normals
"RTN","LR7OSUM1",109,0)
 I $P(LRTRES,"^")'?1(1"pending",1"comment",1"canc") D CHKUN
"RTN","LR7OSUM1",110,0)
 ;
"RTN","LR7OSUM1",111,0)
 S TST=$S($P($G(^LAB(60,LRTST,.1)),"^")'="":$P(^(.1),"^"),1:$P(^LAB(60,LRTST,0),"^"))
"RTN","LR7OSUM1",112,0)
 I $O(^LAB(60,LRTST,1,LRSPM,1,0)),'$D(^TMP($J,"EVAL",LRTST,LRSPM)) D
"RTN","LR7OSUM1",113,0)
 . S ^TMP($J,"EVAL",LRTST,LRSPM)=""
"RTN","LR7OSUM1",114,0)
 . N I,L,X
"RTN","LR7OSUM1",115,0)
 . S I=0
"RTN","LR7OSUM1",116,0)
 . S L=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),L=L+1,^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)="Evaluation for "_TST_":"
"RTN","LR7OSUM1",117,0)
 . F  S I=$O(^LAB(60,LRTST,1,LRSPM,1,I)) Q:'I  S X=^(I,0) S L=L+1,^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)=X
"RTN","LR7OSUM1",118,0)
 . S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM1",119,0)
 ;
"RTN","LR7OSUM1",120,0)
 ; Save performing lab ien in list
"RTN","LR7OSUM1",121,0)
 I $P(LRTRES,U,6) S ^TMP("LRPLS",$J,LRMH,LRSH,$P(LRTRES,U,6),TST)="",^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM1",122,0)
 Q
"RTN","LR7OSUM1",123,0)
 ;
"RTN","LR7OSUM1",124,0)
 ;
"RTN","LR7OSUM1",125,0)
MISC ;
"RTN","LR7OSUM1",126,0)
 Q:$S('$D(SUBHEAD):0,1:'$D(SUBHEAD("MISCELLANEOUS TESTS")))
"RTN","LR7OSUM1",127,0)
 S LRTST=$O(^LAB(60,"C","CH;"_LRSUB_";"_1,0))
"RTN","LR7OSUM1",128,0)
 Q:LRTST=""
"RTN","LR7OSUM1",129,0)
 Q:"IN"[$P(^LAB(60,LRTST,0),U,3)
"RTN","LR7OSUM1",130,0)
 N LRTOP,TST
"RTN","LR7OSUM1",131,0)
 S LRTOP=LRSPM
"RTN","LR7OSUM1",132,0)
 ;
"RTN","LR7OSUM1",133,0)
 S:'$D(^TMP($J,LRDFN,"MISC",LRIDT,0)) ^(0)=LRIDT_U_LRVIDT_U_LRVDT_U_LRAN_U_LRSPM_U_LREAL
"RTN","LR7OSUM1",134,0)
 S ^TMP($J,LRDFN,"MISC",LRIDT,LRTNN)=$P(LRTRES,"^")_U_LRSPM_U_LRTST_U_$P(LRTRES,"^",2)_U_LRSUB_U_$P(LRTRES,"^",3,6)
"RTN","LR7OSUM1",135,0)
 ;
"RTN","LR7OSUM1",136,0)
 S TST=$P($G(^LAB(60,LRTST,.1)),"^")
"RTN","LR7OSUM1",137,0)
 I TST="" S TST=$P(^LAB(60,LRTST,0),"^")
"RTN","LR7OSUM1",138,0)
 S ^TMP("LRT",$J,TST)="MISCELLANEOUS TESTS"
"RTN","LR7OSUM1",139,0)
 ;
"RTN","LR7OSUM1",140,0)
 ; Grab specimen comments
"RTN","LR7OSUM1",141,0)
 D GSC
"RTN","LR7OSUM1",142,0)
 ;
"RTN","LR7OSUM1",143,0)
 ; Grab test interpretation
"RTN","LR7OSUM1",144,0)
 I $O(^LAB(60,LRTST,1,LRSPM,1,0)) D
"RTN","LR7OSUM1",145,0)
 . N I,L,X
"RTN","LR7OSUM1",146,0)
 . S I=0
"RTN","LR7OSUM1",147,0)
 . S:'$D(^TMP($J,LRDFN,"MISC",LRIDT,"TX",0)) ^TMP($J,LRDFN,"MISC",LRIDT,"TX",0)=""
"RTN","LR7OSUM1",148,0)
 . S L=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM1",149,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)="Evaluation for "_TST_":"
"RTN","LR7OSUM1",150,0)
 . F  S I=$O(^LAB(60,LRTST,1,LRSPM,1,I)) Q:'I  S X=^(I,0) S L=L+1,^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)=X
"RTN","LR7OSUM1",151,0)
 ;
"RTN","LR7OSUM1",152,0)
 ; Save performing lab ien in list
"RTN","LR7OSUM1",153,0)
 I $P(LRTRES,U,6) S ^TMP("LRPLS",$J,"MISC",$P(LRTRES,U,6),TST)=""
"RTN","LR7OSUM1",154,0)
 ;
"RTN","LR7OSUM1",155,0)
 S LRTNN=LRTNN+1
"RTN","LR7OSUM1",156,0)
 Q
"RTN","LR7OSUM1",157,0)
 ;
"RTN","LR7OSUM1",158,0)
 ;
"RTN","LR7OSUM1",159,0)
TEXT ;
"RTN","LR7OSUM1",160,0)
 N LRYESCOM,M,N
"RTN","LR7OSUM1",161,0)
 S LRYESCOM=0
"RTN","LR7OSUM1",162,0)
 S M=0
"RTN","LR7OSUM1",163,0)
 F  S M=$O(^LR(LRDFN,"CH",LRIDT,1,M)) Q:M<1!(LRYESCOM)  F N=1:1:$L(^LR(LRDFN,"CH",LRIDT,1,M,0)) Q:LRYESCOM  S:$E(^(0),N)'[$C(32) LRYESCOM=1
"RTN","LR7OSUM1",164,0)
 Q:'LRYESCOM
"RTN","LR7OSUM1",165,0)
 S L=0
"RTN","LR7OSUM1",166,0)
 F  S L=$O(^LR(LRDFN,"CH",LRIDT,1,L)) Q:L<1  S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)=^LR(LRDFN,"CH",LRIDT,1,L,0)
"RTN","LR7OSUM1",167,0)
 S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM1",168,0)
 Q
"RTN","LR7OSUM1",169,0)
 ;
"RTN","LR7OSUM1",170,0)
 ;
"RTN","LR7OSUM1",171,0)
MICRO ;from LR7OSUM
"RTN","LR7OSUM1",172,0)
 Q:'$D(^LR(LRDFN,"MI"))
"RTN","LR7OSUM1",173,0)
 N GIOM,MICROCNT
"RTN","LR7OSUM1",174,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSUM1",175,0)
 I GIOM="" D
"RTN","LR7OSUM1",176,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR MI GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSUM1",177,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSUM1",178,0)
 S:'$D(LRUNKNOW) LRUNKNOW=$P(^LAB(69.9,1,1),U,5)
"RTN","LR7OSUM1",179,0)
 S (LRONESPC,LRONETST)="",LREND=0,MICROCNT=GCNT+1
"RTN","LR7OSUM1",180,0)
 I $O(^LR(LRDFN,"MI",0)) S ^TMP("LRH",$J,"MICROBIOLOGY")=MICROCNT
"RTN","LR7OSUM1",181,0)
 S LRWRDVEW="",LRSB=0,LRIDT=LRIN
"RTN","LR7OSUM1",182,0)
 F  S LRIDT=$O(^LR(LRDFN,"MI",LRIDT)) Q:LRIDT<1!(LRIDT>LROUT)!(CT1>COUNT)  S LRNLOC=LRLLOC,CT1=CT1+1 D EN1^LR7OSMZ0 S LRLLOC=LRNLOC
"RTN","LR7OSUM1",183,0)
 I GCNT'>MICROCNT K ^TMP("LRH",$J,"MICROBIOLOGY")
"RTN","LR7OSUM1",184,0)
 K %,A,A1,AGE,B,B1,DFN,DOB,DZ,I,J,LR2ORMOR,LRAA,LRACC,LRACN,LRAD,LRADM,LRADX,LRAFS,LRAX,LRBUG,LRCMNT,LRCS,LRDCOM,LREF,LREND,LRIFN,LRLLT,LRMD,LRNLOC,LRNS,LROK,LRONESPC,LRONETST,LRORG,LRPRE,LRPRINT
"RTN","LR7OSUM1",185,0)
 Q
"RTN","LR7OSUM1",186,0)
 ;
"RTN","LR7OSUM1",187,0)
 ;
"RTN","LR7OSUM1",188,0)
CHKUN ; Check units and normals with cumulative report values
"RTN","LR7OSUM1",189,0)
 ; Add comment if these differ from file #64.5 values
"RTN","LR7OSUM1",190,0)
 ;
"RTN","LR7OSUM1",191,0)
 N I,L,LRFLAG,LRHI,LRLO,LRLOHI,LRX,LRY,TST,TXT
"RTN","LR7OSUM1",192,0)
 S LRX=$G(^LAB(64.5,"A",1,LRMH,LRSH,LRTSTS)),LRFLAG=0
"RTN","LR7OSUM1",193,0)
 S TST=$P($G(^LAB(64.5,1,1,LRMH,1,LRSH,1,LRTSTS,0)),"^",3)
"RTN","LR7OSUM1",194,0)
 S LRY="*** For test "_TST
"RTN","LR7OSUM1",195,0)
 ; Check units - if different generate comment
"RTN","LR7OSUM1",196,0)
 I $$UP^XLFSTR($P(LRX,"^",7))'=$$UP^XLFSTR($P(LRTRES,"^",5)) S LRY=LRY_" Units: "_$S($P(LRTRES,"^",5)'="":$P(LRTRES,"^",5),1:"<none specified>"),LRFLAG=1
"RTN","LR7OSUM1",197,0)
 ;
"RTN","LR7OSUM1",198,0)
 ; Check normals - if different generate comment
"RTN","LR7OSUM1",199,0)
 S @("LRLO="_$S($P(LRX,"^",2)'="":$P(LRX,"^",2),$P(LRX,"^",11)'="":$P(LRX,"^",11),1:""""""))
"RTN","LR7OSUM1",200,0)
 ;
"RTN","LR7OSUM1",201,0)
 S @("LRHI="_$S($P(LRX,"^",3)'="":$P(LRX,"^",3),$P(LRX,"^",12)'="":$P(LRX,"^",12),1:""""""))
"RTN","LR7OSUM1",202,0)
 I LRLO'=$P(LRTRES,"^",3)!(LRHI'=$P(LRTRES,"^",4)) D
"RTN","LR7OSUM1",203,0)
 . I '$$REALDIFF Q
"RTN","LR7OSUM1",204,0)
 . I LRFLAG S LRY=LRY_" and"
"RTN","LR7OSUM1",205,0)
 . S TXT=""
"RTN","LR7OSUM1",206,0)
 . D
"RTN","LR7OSUM1",207,0)
 . . I $P(LRTRES,"^",3)="",$P(LRTRES,"^",4)="" S TXT="<none specified>" Q
"RTN","LR7OSUM1",208,0)
 . . I $P(LRTRES,"^",3)'="",$P(LRTRES,"^",4)'="" S TXT=$P(LRTRES,"^",3)_" to "_$P(LRTRES,"^",4) Q
"RTN","LR7OSUM1",209,0)
 . . I $P(LRTRES,"^",3)'="",$P(LRTRES,"^",4)="" S TXT=$S($P(LRTRES,"^",3)?.AP:$P(LRTRES,"^",3),1:"low: "_$P(LRTRES,"^",3)) Q
"RTN","LR7OSUM1",210,0)
 . . I $P(LRTRES,"^",3)="",$P(LRTRES,"^",4)'="" S TXT=$S($P(LRTRES,"^",4)?.AP:$P(LRTRES,"^",4),1:"high: "_$P(LRTRES,"^",4)) Q
"RTN","LR7OSUM1",211,0)
 . I TXT'="" S LRY=LRY_" Normals: "_TXT,LRFLAG=1
"RTN","LR7OSUM1",212,0)
 ;
"RTN","LR7OSUM1",213,0)
 I 'LRFLAG Q
"RTN","LR7OSUM1",214,0)
 ;
"RTN","LR7OSUM1",215,0)
 S L=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM1",216,0)
 S LRY=LRY_" ***",^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)=LRY
"RTN","LR7OSUM1",217,0)
 S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM1",218,0)
 Q
"RTN","LR7OSUM1",219,0)
 ;
"RTN","LR7OSUM1",220,0)
 ;
"RTN","LR7OSUM1",221,0)
REALDIFF() ;
"RTN","LR7OSUM1",222,0)
 ; function to determine if values are numeric and are different
"RTN","LR7OSUM1",223,0)
 ; solely because of leading or trailing zeroes
"RTN","LR7OSUM1",224,0)
 ;     returns 0 if difference is because of leading/trailing zeroes
"RTN","LR7OSUM1",225,0)
 ;     returns 1 if differences are meaningful
"RTN","LR7OSUM1",226,0)
 N LRTRESLO,LRTRESHI,DIFF
"RTN","LR7OSUM1",227,0)
 S LRTRESLO=$P(LRTRES,"^",3),LRTRESHI=$P(LRTRES,"^",4)
"RTN","LR7OSUM1",228,0)
 S DIFF=0
"RTN","LR7OSUM1",229,0)
 I LRLO'=LRTRESLO S DIFF=1 D
"RTN","LR7OSUM1",230,0)
 . I LRLO?.N!(LRLO?.N1".".N) D
"RTN","LR7OSUM1",231,0)
 . . I LRTRESLO?.N!(LRTRESLO?.N1".".N) D
"RTN","LR7OSUM1",232,0)
 . . . I +LRLO=+LRTRESLO S DIFF=0
"RTN","LR7OSUM1",233,0)
 I DIFF Q 1
"RTN","LR7OSUM1",234,0)
 I LRHI'=LRTRESHI S DIFF=1 D
"RTN","LR7OSUM1",235,0)
 . I LRHI?.N!(LRHI?.N1".".N) D
"RTN","LR7OSUM1",236,0)
 . . I LRTRESHI?.N!(LRTRESHI?.N1".".N) D
"RTN","LR7OSUM1",237,0)
 . . . I +LRHI=+LRTRESHI S DIFF=0
"RTN","LR7OSUM1",238,0)
 I DIFF Q 1
"RTN","LR7OSUM1",239,0)
 Q 0
"RTN","LR7OSUM1",240,0)
 ;
"RTN","LR7OSUM1",241,0)
 ;
"RTN","LR7OSUM1",242,0)
GSC ; Grab specimen comments
"RTN","LR7OSUM1",243,0)
 ;
"RTN","LR7OSUM1",244,0)
 I $D(^LR(LRDFN,"CH",LRIDT,1,0)),'$D(^TMP($J,LRDFN,"MISC",LRIDT,"TX",0)) D
"RTN","LR7OSUM1",245,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",0)="",L=0
"RTN","LR7OSUM1",246,0)
 . F  S L=$O(^LR(LRDFN,"CH",LRIDT,1,L)) Q:L<1  S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)=^LR(LRDFN,"CH",LRIDT,1,L,0)
"RTN","LR7OSUM1",247,0)
 ;
"RTN","LR7OSUM1",248,0)
 Q
"RTN","LR7OSUM1",249,0)
 ;
"RTN","LR7OSUM1",250,0)
 ;
"RTN","LR7OSUM1",251,0)
CHKNP ; Check for NP comments and no verified results.
"RTN","LR7OSUM1",252,0)
 ;
"RTN","LR7OSUM1",253,0)
 ;
"RTN","LR7OSUM1",254,0)
 N LRCAN,TST
"RTN","LR7OSUM1",255,0)
 ; Don't print unverified results.
"RTN","LR7OSUM1",256,0)
 I $O(^LR(LRDFN,"CH",LRIDT,1)) Q
"RTN","LR7OSUM1",257,0)
 ;
"RTN","LR7OSUM1",258,0)
 S LRCAN=0
"RTN","LR7OSUM1",259,0)
 F  S LRCAN=+$O(^LR(LRDFN,"CH",LRIDT,1,LRCAN)) Q:LRCAN<1  Q:($E(^(LRCAN,0))="*")
"RTN","LR7OSUM1",260,0)
 ;
"RTN","LR7OSUM1",261,0)
 ; Print if cancel comment and no unverified results.
"RTN","LR7OSUM1",262,0)
 I LRCAN<1 Q
"RTN","LR7OSUM1",263,0)
 ;
"RTN","LR7OSUM1",264,0)
 Q:$S('$D(SUBHEAD):0,1:'$D(SUBHEAD("MISCELLANEOUS TESTS")))
"RTN","LR7OSUM1",265,0)
 ;
"RTN","LR7OSUM1",266,0)
 S:'$D(^TMP($J,LRDFN,"MISC",LRIDT,0)) ^(0)=LRIDT_U_LRVIDT_U_LRVDT_U_LRAN_U_LRSPM_U_LREAL
"RTN","LR7OSUM1",267,0)
 S ^TMP($J,LRDFN,"MISC",LRIDT,LRTNN)=""_U_LRSPM_U
"RTN","LR7OSUM1",268,0)
 ;
"RTN","LR7OSUM1",269,0)
 S TST="See comment"
"RTN","LR7OSUM1",270,0)
 S ^TMP("LRT",$J,TST)="MISCELLANEOUS TESTS"
"RTN","LR7OSUM1",271,0)
 ;
"RTN","LR7OSUM1",272,0)
 ; Grab specimen comments
"RTN","LR7OSUM1",273,0)
 D GSC
"RTN","LR7OSUM1",274,0)
 ;
"RTN","LR7OSUM1",275,0)
 S LRTNN=LRTNN+1
"RTN","LR7OSUM1",276,0)
 Q
"RTN","LR7OSUM2")
0^46^B38355976
"RTN","LR7OSUM2",1,0)
LR7OSUM2 ;DALOI/staff - Silent Patient cum cont. ;08/28/09  14:13
"RTN","LR7OSUM2",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM2",3,0)
 ;
"RTN","LR7OSUM2",4,0)
 ;
"RTN","LR7OSUM2",5,0)
ORDBY ; List ordering provider
"RTN","LR7OSUM2",6,0)
 N L,LRMH,LRSH,LRY
"RTN","LR7OSUM2",7,0)
 S LRY=$$NAME^XUSER(LRPROV,"G")
"RTN","LR7OSUM2",8,0)
 ;
"RTN","LR7OSUM2",9,0)
 S LRMH=0
"RTN","LR7OSUM2",10,0)
 F  S LRMH=$O(^TMP($J,LRDFN,LRMH)) Q:'LRMH  D
"RTN","LR7OSUM2",11,0)
 . S LRSH=0
"RTN","LR7OSUM2",12,0)
 . F  S LRSH=$O(^TMP($J,LRDFN,LRMH,LRSH)) Q:'LRSH  D
"RTN","LR7OSUM2",13,0)
 . . I '$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT)) Q
"RTN","LR7OSUM2",14,0)
 . . S L=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",15,0)
 . . I L>1 S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)=" ",L=L+1
"RTN","LR7OSUM2",16,0)
 . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)="Ordering Provider: "_LRY
"RTN","LR7OSUM2",17,0)
 . . S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM2",18,0)
 ;
"RTN","LR7OSUM2",19,0)
 I $D(^TMP($J,LRDFN,"MISC",LRIDT)) D
"RTN","LR7OSUM2",20,0)
 . S L=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",21,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)=" "
"RTN","LR7OSUM2",22,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L+1,0)="Ordering Provider: "_LRY
"RTN","LR7OSUM2",23,0)
 Q
"RTN","LR7OSUM2",24,0)
 ;
"RTN","LR7OSUM2",25,0)
 ;
"RTN","LR7OSUM2",26,0)
RELDT ; List report release date/time
"RTN","LR7OSUM2",27,0)
 N L,LRMH,LRSH,LRY
"RTN","LR7OSUM2",28,0)
 S LRY=$$FMTE^XLFDT(LRVDT,"M")
"RTN","LR7OSUM2",29,0)
 ;
"RTN","LR7OSUM2",30,0)
 S LRMH=0
"RTN","LR7OSUM2",31,0)
 F  S LRMH=$O(^TMP($J,LRDFN,LRMH)) Q:'LRMH  D
"RTN","LR7OSUM2",32,0)
 . S LRSH=0
"RTN","LR7OSUM2",33,0)
 . F  S LRSH=$O(^TMP($J,LRDFN,LRMH,LRSH)) Q:'LRSH  D
"RTN","LR7OSUM2",34,0)
 . . I '$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT)) Q
"RTN","LR7OSUM2",35,0)
 . . S L=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",36,0)
 . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)="Report Released..: "_LRY
"RTN","LR7OSUM2",37,0)
 . . S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM2",38,0)
 ;
"RTN","LR7OSUM2",39,0)
 I $D(^TMP($J,LRDFN,"MISC",LRIDT)) D
"RTN","LR7OSUM2",40,0)
 . S L=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",41,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L+1,0)="Report Released..: "_LRY
"RTN","LR7OSUM2",42,0)
 Q
"RTN","LR7OSUM2",43,0)
 ;
"RTN","LR7OSUM2",44,0)
 ;
"RTN","LR7OSUM2",45,0)
RL ; List reporting laboratory
"RTN","LR7OSUM2",46,0)
 N L,LINE,LRMH,LRSH,LRX
"RTN","LR7OSUM2",47,0)
 ; Retrieve reporting lab
"RTN","LR7OSUM2",48,0)
 S LRX=+$G(^LR(LRDFN,"CH",LRIDT,"RF"))
"RTN","LR7OSUM2",49,0)
 I LRX<1 Q
"RTN","LR7OSUM2",50,0)
 S LINE=$$PLSADDR(LRX)
"RTN","LR7OSUM2",51,0)
 ;
"RTN","LR7OSUM2",52,0)
 S LRMH=0
"RTN","LR7OSUM2",53,0)
 F  S LRMH=$O(^TMP($J,LRDFN,LRMH)) Q:'LRMH  D
"RTN","LR7OSUM2",54,0)
 . S LRSH=0
"RTN","LR7OSUM2",55,0)
 . F  S LRSH=$O(^TMP($J,LRDFN,LRMH,LRSH)) Q:'LRSH  D
"RTN","LR7OSUM2",56,0)
 . . I '$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT)) Q
"RTN","LR7OSUM2",57,0)
 . . S L=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",58,0)
 . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)="Reporting Lab....: "_$P(LINE,"^"),L=L+1
"RTN","LR7OSUM2",59,0)
 . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",L,0)="                  "_$P(LINE,"^",2)
"RTN","LR7OSUM2",60,0)
 . . S ^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM2",61,0)
 ;
"RTN","LR7OSUM2",62,0)
 I $D(^TMP($J,LRDFN,"MISC",LRIDT)) D
"RTN","LR7OSUM2",63,0)
 . S L=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),L=L+1
"RTN","LR7OSUM2",64,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)="Reporting Lab....: "_$P(LINE,"^"),L=L+1
"RTN","LR7OSUM2",65,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",L,0)="                   "_$P(LINE,"^",2)
"RTN","LR7OSUM2",66,0)
 ;
"RTN","LR7OSUM2",67,0)
 Q
"RTN","LR7OSUM2",68,0)
 ;
"RTN","LR7OSUM2",69,0)
 ;
"RTN","LR7OSUM2",70,0)
PLS ; List performing laboratories
"RTN","LR7OSUM2",71,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OSUM2",72,0)
 ;
"RTN","LR7OSUM2",73,0)
 N CLIA,CNT,LINE,LLEN,LRMH,LRMPLS,LRPLS,LRSH,OUTCNT,TESTNAME,X
"RTN","LR7OSUM2",74,0)
 ;
"RTN","LR7OSUM2",75,0)
 ; Tests formatted to a header
"RTN","LR7OSUM2",76,0)
 S LRMH=0
"RTN","LR7OSUM2",77,0)
 F  S LRMH=$O(^TMP($J,LRDFN,LRMH)) Q:'LRMH  D
"RTN","LR7OSUM2",78,0)
 . S LRSH=0
"RTN","LR7OSUM2",79,0)
 . F  S LRSH=$O(^TMP($J,LRDFN,LRMH,LRSH)) Q:'LRSH  D
"RTN","LR7OSUM2",80,0)
 . . I '$D(^TMP($J,LRDFN,LRMH,LRSH,LRIDT)) Q
"RTN","LR7OSUM2",81,0)
 . . S OUTCNT=+$O(^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",9999999),-1),OUTCNT=OUTCNT+1,CNT=0
"RTN","LR7OSUM2",82,0)
 . . S LRMPLS=+$O(^TMP("LRPLS",$J,LRMH,LRSH,0)),LRMPLS=+$O(^TMP("LRPLS",$J,LRMH,LRSH,LRMPLS)) ; More than one performing lab to report
"RTN","LR7OSUM2",83,0)
 . . S LRPLS=0
"RTN","LR7OSUM2",84,0)
 . . F  S LRPLS=$O(^TMP("LRPLS",$J,LRMH,LRSH,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OSUM2",85,0)
 . . . I CNT S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)=" ",OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",86,0)
 . . . I LRMPLS D
"RTN","LR7OSUM2",87,0)
 . . . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OSUM2",88,0)
 . . . . F  S TESTNAME=$O(^TMP("LRPLS",$J,LRMH,LRSH,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OSUM2",89,0)
 . . . . . S X=$L(TESTNAME)
"RTN","LR7OSUM2",90,0)
 . . . . . I (LLEN+X)>240 S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)=LINE,OUTCNT=OUTCNT+1,LINE="",LLEN=0
"RTN","LR7OSUM2",91,0)
 . . . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OSUM2",92,0)
 . . . . I LINE'="" S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)=LINE,OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",93,0)
 . . . S LINE=$$PLSADDR(LRPLS)
"RTN","LR7OSUM2",94,0)
 . . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)="Performing Lab...: "_$P(LINE,"^"),OUTCNT=OUTCNT+1,CNT=CNT+1
"RTN","LR7OSUM2",95,0)
 . . . S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)="                   "_$P(LINE,"^",2),OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",96,0)
 . . I CNT>0 S ^TMP($J,LRDFN,LRMH,LRSH,LRIDT,"TX",OUTCNT,0)=" ",^TMP("LRCMTINDX",$J,LRIDT)=""
"RTN","LR7OSUM2",97,0)
 ;
"RTN","LR7OSUM2",98,0)
 ; Miscellaneous tests
"RTN","LR7OSUM2",99,0)
 S OUTCNT=+$O(^TMP($J,LRDFN,"MISC",LRIDT,"TX",9999999),-1),OUTCNT=OUTCNT+1,CNT=0
"RTN","LR7OSUM2",100,0)
 S LRMPLS=+$O(^TMP("LRPLS",$J,"MISC",0)),LRMPLS=+$O(^TMP("LRPLS",$J,"MISC",LRMPLS)) ; More than one performing lab to report
"RTN","LR7OSUM2",101,0)
 S LRPLS=0
"RTN","LR7OSUM2",102,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,"MISC",LRPLS)) Q:LRPLS<1  D
"RTN","LR7OSUM2",103,0)
 . I CNT S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)=" ",OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",104,0)
 . I LRMPLS D
"RTN","LR7OSUM2",105,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OSUM2",106,0)
 . . F  S TESTNAME=$O(^TMP("LRPLS",$J,"MISC",LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OSUM2",107,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OSUM2",108,0)
 . . . I (LLEN+X)>240 S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)=LINE,OUTCNT=OUTCNT+1,LINE="",LLEN=0
"RTN","LR7OSUM2",109,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OSUM2",110,0)
 . . I LINE'="" S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)=LINE,OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",111,0)
 . S LINE=$$PLSADDR(LRPLS)
"RTN","LR7OSUM2",112,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)="Performing Lab...: "_$P(LINE,"^"),OUTCNT=OUTCNT+1,CNT=CNT+1
"RTN","LR7OSUM2",113,0)
 . S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)="                   "_$P(LINE,"^",2),OUTCNT=OUTCNT+1
"RTN","LR7OSUM2",114,0)
 I CNT>0 S ^TMP($J,LRDFN,"MISC",LRIDT,"TX",OUTCNT,0)=" "
"RTN","LR7OSUM2",115,0)
 ;
"RTN","LR7OSUM2",116,0)
 K ^TMP("LRPLS",$J),^TMP("LRPLS-ADDR",$J)
"RTN","LR7OSUM2",117,0)
 Q
"RTN","LR7OSUM2",118,0)
 ;
"RTN","LR7OSUM2",119,0)
 ;
"RTN","LR7OSUM2",120,0)
PLSADDR(LRPLS) ; Performing lab name/address/CLIA
"RTN","LR7OSUM2",121,0)
 ; Call with LRPLS = ien of entry in file #4
"RTN","LR7OSUM2",122,0)
 ; Returns LINE = name [CLIA# nnnn] ^ address of institution
"RTN","LR7OSUM2",123,0)
 ;
"RTN","LR7OSUM2",124,0)
 ; Saves information in TMP("LRPLS-ADDR",$J) for subsequent use by this process.
"RTN","LR7OSUM2",125,0)
 ;
"RTN","LR7OSUM2",126,0)
 N CLIA,LINE,LRX
"RTN","LR7OSUM2",127,0)
 S LINE=""
"RTN","LR7OSUM2",128,0)
 I $D(^TMP("LRPLS-ADDR",$J,LRPLS)) S LINE=^TMP("LRPLS-ADDR",$J,LRPLS)
"RTN","LR7OSUM2",129,0)
 I LINE="" D
"RTN","LR7OSUM2",130,0)
 . S LINE=$$NAME^XUAF4(LRPLS),CLIA=$$ID^XUAF4("CLIA",LRPLS)
"RTN","LR7OSUM2",131,0)
 . I CLIA'="" S LINE=LINE_" [CLIA# "_CLIA_"]"
"RTN","LR7OSUM2",132,0)
 . S LRX=$$PADD^XUAF4(LRPLS),LRX(1)=$$WHAT^XUAF4(LRPLS,1.02)
"RTN","LR7OSUM2",133,0)
 . S LINE=LINE_"^"_$P(LRX,U)_" "_$S(LRX(1)'="":LRX(1)_" ",1:"")_$P(LRX,U,2)_$S($P(LRX,U,3)'="":", ",1:"")_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LR7OSUM2",134,0)
 . S ^TMP("LRPLS-ADDR",$J,LRPLS)=LINE
"RTN","LR7OSUM2",135,0)
 Q LINE
"RTN","LR7OSUM2",136,0)
 ;
"RTN","LR7OSUM2",137,0)
 ;
"RTN","LR7OSUM2",138,0)
CMTINDX ; Generate comment indexes for each specimen date/time
"RTN","LR7OSUM2",139,0)
 N CNT,LRIDT,LRNX
"RTN","LR7OSUM2",140,0)
 S LRIDT=0,CNT=1
"RTN","LR7OSUM2",141,0)
 F  S LRIDT=$O(^TMP("LRCMTINDX",$J,LRIDT)) Q:'LRIDT  S ^TMP("LRCMTINDX",$J,LRIDT)=$$LRNX(CNT),CNT=CNT+1
"RTN","LR7OSUM2",142,0)
 Q
"RTN","LR7OSUM2",143,0)
 ;
"RTN","LR7OSUM2",144,0)
 ;
"RTN","LR7OSUM2",145,0)
LRNX(CNT) ; Generate comment index
"RTN","LR7OSUM2",146,0)
 ; Call with CNT = current seed value
"RTN","LR7OSUM2",147,0)
 ; Returns  LRNX = comment index
"RTN","LR7OSUM2",148,0)
 N LRNX
"RTN","LR7OSUM2",149,0)
 ;
"RTN","LR7OSUM2",150,0)
 S LRNX=""
"RTN","LR7OSUM2",151,0)
 F  S J=CNT#26,LRNX=$C(96+$S(J=0:26,1:J))_LRNX,CNT=$S(CNT#26=0:(CNT\26)-1,1:CNT\26) Q:CNT<1
"RTN","LR7OSUM2",152,0)
 ;
"RTN","LR7OSUM2",153,0)
 Q LRNX
"RTN","LR7OSUM3")
0^52^B15244956
"RTN","LR7OSUM3",1,0)
LR7OSUM3 ;DALOI/STAFF - Silent Patient cum cont. ;07/05/12  11:18
"RTN","LR7OSUM3",2,0)
 ;;5.2;LAB SERVICE;**121,201,187,228,250,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM3",3,0)
 ;
"RTN","LR7OSUM3",4,0)
 N GIOM,LRPF,LRI
"RTN","LR7OSUM3",5,0)
 S GIOM=$G(LRGIOM)
"RTN","LR7OSUM3",6,0)
 I GIOM="" D
"RTN","LR7OSUM3",7,0)
 . S GIOM=$$GET^XPAR("USR^DIV^PKG","LR CH GUI REPORT RIGHT MARGIN",1,"Q")
"RTN","LR7OSUM3",8,0)
 . I GIOM="" S GIOM=80
"RTN","LR7OSUM3",9,0)
 S LRAG=0,LRYESCOM=0,LRIL=0,LRFULL=0
"RTN","LR7OSUM3",10,0)
 ;
"RTN","LR7OSUM3",11,0)
 ; Print header with name of facility printing report.
"RTN","LR7OSUM3",12,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC
"RTN","LR7OSUM3",13,0)
 ;
"RTN","LR7OSUM3",14,0)
 D LRMH S LRMH="MISC"
"RTN","LR7OSUM3",15,0)
 G PRE^LR7OSUM6
"RTN","LR7OSUM3",16,0)
 ;
"RTN","LR7OSUM3",17,0)
LRMH S LRMH=0
"RTN","LR7OSUM3",18,0)
 F  S LRMH=$O(^TMP($J,LRDFN,LRMH)) Q:LRMH<1  S X=^(LRMH) D MH1
"RTN","LR7OSUM3",19,0)
 Q
"RTN","LR7OSUM3",20,0)
 ;
"RTN","LR7OSUM3",21,0)
 ;
"RTN","LR7OSUM3",22,0)
MH1 S LRMHN=$P(X,U,1),LRSH=0
"RTN","LR7OSUM3",23,0)
 S LRPG=1
"RTN","LR7OSUM3",24,0)
 D TOP^LR7OSUM6
"RTN","LR7OSUM3",25,0)
 S LROFMT="",LRFDE=0 D LRSH
"RTN","LR7OSUM3",26,0)
 D:'LRFDE LRBOT^LR7OSUM6
"RTN","LR7OSUM3",27,0)
 K LRTM,^TMP($J,"TM")
"RTN","LR7OSUM3",28,0)
 S LRFULL=0,LRTM=0,LROFMT="",LRFDE=0
"RTN","LR7OSUM3",29,0)
 Q
"RTN","LR7OSUM3",30,0)
 ;
"RTN","LR7OSUM3",31,0)
 ;
"RTN","LR7OSUM3",32,0)
LRSH ;from LR7OSUM4, LR7OSUM5
"RTN","LR7OSUM3",33,0)
 S LRSH=$O(^TMP($J,LRDFN,LRMH,LRSH)) Q:LRSH<1  G:$D(^(LRSH))'=11 LRSH S X=^(LRSH),LRSHN=$P(X,U,1),LRTOPP=$P(X,U,2),LRSHD=$P(X,U,3),LRFMT=$P(X,U,4),LRFMT(1)=$E(LRFMT,1),LROFMT(1)=$E(LROFMT,1)
"RTN","LR7OSUM3",34,0)
 Q:$S('$D(SUBHEAD):0,1:'$D(SUBHEAD(LRSHN)))
"RTN","LR7OSUM3",35,0)
 I (LROFMT["V"&(LRFMT["V"))!(LROFMT'=""&(LRFMT(1)'=LROFMT(1))) S LROFMT="" D HEAD^LR7OSUM6
"RTN","LR7OSUM3",36,0)
 S LROFMT=LRFMT,LRTOPP=$E($P(^LAB(61,LRTOPP,0),U,1),1,13),LRTOT=0,LRPL=1,LRACT=0,LRJS=0,LRTS=0,LRFDE=0
"RTN","LR7OSUM3",37,0)
 S LRNP=0,LRFDT=0,LRLFDT=0,LRFFDT=0 D LRNP
"RTN","LR7OSUM3",38,0)
 ;
"RTN","LR7OSUM3",39,0)
LOOP ;from LR7OSUM5
"RTN","LR7OSUM3",40,0)
 I LRACT<LRPL S LRFDT=LRFFDT G:LRFMT["H" TS^LR7OSUM5 I LRFMT["V" S LRMULT=99999,LRMU=0 G BS^LR7OSUM4
"RTN","LR7OSUM3",41,0)
 D TXT1^LR7OSUM5
"RTN","LR7OSUM3",42,0)
 I LRCTR'<LRLNS S LRFULL=1 S:'LRFDT LRFED=1 D:LRFDE LRBOT^LR7OSUM6 D:'LRFDT HEAD^LR7OSUM6 S LRFULL=0 G LRSH
"RTN","LR7OSUM3",43,0)
 G LRSH
"RTN","LR7OSUM3",44,0)
 ;
"RTN","LR7OSUM3",45,0)
 ;
"RTN","LR7OSUM3",46,0)
LRNP ;from LR7OSUM4
"RTN","LR7OSUM3",47,0)
 S I=0 F  S I=$O(^LAB(64.5,1,1,LRMH,1,LRSH,1,I)) Q:I<1  S LRTOT=LRTOT+$P(^(I,0),U,2) I LRTOT>(GIOM-25) S LRPL=LRPL+1,LRTOT=$P(^(0),U,2)
"RTN","LR7OSUM3",48,0)
LRLNS ;from LR7OSUM5
"RTN","LR7OSUM3",49,0)
 K LRTM,^TMP($J,"TM") S LRTM=0
"RTN","LR7OSUM3",50,0)
 S LRLNS=((GIOSL-18)-(GCNT+(6*LRPL)))\LRPL
"RTN","LR7OSUM3",51,0)
 S LRCL=(GIOM/2)-(5+($L(LRSHN)/2)) S GCNT=GCNT+1,CCNT=1,^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(LRCL,CCNT,"---- "_LRSHN_" ----")
"RTN","LR7OSUM3",52,0)
 S ^TMP("LRH",$J,LRSHN)=GCNT ;Set x-ref of minor headers with data
"RTN","LR7OSUM3",53,0)
 S LRACT=0,LRJS=0,LRNP=1
"RTN","LR7OSUM3",54,0)
 Q
"RTN","LR7OSUM3",55,0)
 ;
"RTN","LR7OSUM3",56,0)
 ;
"RTN","LR7OSUM3",57,0)
UDT ;from LR7OSUM4, LR7OSUM5
"RTN","LR7OSUM3",58,0)
 N LRBDT,LREAL
"RTN","LR7OSUM3",59,0)
 S LRBDT=LRFDT
"RTN","LR7OSUM3",60,0)
 ; If inexact date/time then suppress any pseudo time.
"RTN","LR7OSUM3",61,0)
 S LREAL=+$P(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,0),U,6)
"RTN","LR7OSUM3",62,0)
 ; Forces all formats to be inverse date/time regardless of parameter in file 64.5
"RTN","LR7OSUM3",63,0)
 S LRFDT=$P(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,0),U,2) ;,LRTIM=$E(LRFDT,9,12)
"RTN","LR7OSUM3",64,0)
 ;F I=0:0 Q:$L(LRTIM)=4  S LRTIM=LRTIM_0
"RTN","LR7OSUM3",65,0)
 ;S LRTIM=$S(LRTIM?4"0":"     ",1:$E(LRTIM,1,2)_":"_$E(LRTIM,3,4))
"RTN","LR7OSUM3",66,0)
 ;S LRUDT=$E($$Y2K^LRX($P(LRFDT,".")),1,5)_" "_$J(LRTIM,4)_" "
"RTN","LR7OSUM3",67,0)
 S LRFDT=LRBDT D:LRTM LRTM
"RTN","LR7OSUM3",68,0)
 Q
"RTN","LR7OSUM3",69,0)
 ;
"RTN","LR7OSUM3",70,0)
 ;
"RTN","LR7OSUM3",71,0)
LRTM ;
"RTN","LR7OSUM3",72,0)
 S LRNXSW=0 S:'$D(LRTM(0)) LRTM(0)=96
"RTN","LR7OSUM3",73,0)
 I $D(^TMP($J,"TM",LRFDT)) S LRNXSW=1
"RTN","LR7OSUM3",74,0)
 E  I $D(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,"TX")) D
"RTN","LR7OSUM3",75,0)
 . S ^TMP($J,"TM",LRFDT)=^TMP("LRCMTINDX",$J,LRFDT),LRNXSW=1
"RTN","LR7OSUM3",76,0)
 . S I=0 F  S I=$O(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,"TX",I)) Q:I<1  S ^TMP($J,"TM",LRFDT,I)=^(I,0)
"RTN","LR7OSUM3",77,0)
 N LRUDT7
"RTN","LR7OSUM3",78,0)
 ;S LRUDT7=$$Y2K^LRX(9999999-LRFDT)
"RTN","LR7OSUM3",79,0)
 ;S LRUDT7=$$FMTE^XLFDT(9999999-LRFDT,"1"_$S(LREAL:"D",1:"M"))
"RTN","LR7OSUM3",80,0)
 S LRUDT7=$$LRUDT^LR7OSUM6(9999999-LRFDT,LREAL)
"RTN","LR7OSUM3",81,0)
 S LRUDT=$P(LRUDT7,"@")_" "_$E($P(LRUDT7,"@",2),1,5)
"RTN","LR7OSUM3",82,0)
 ;S:LRNXSW I=$P(^TMP($J,"TM",LRFDT),"^"),LRUDT=I_$E("   ",1,$S(I'="":1,1:2))_LRUDT
"RTN","LR7OSUM3",83,0)
 I LRNXSW D
"RTN","LR7OSUM3",84,0)
 . S I=$P(^TMP($J,"TM",LRFDT),"^")
"RTN","LR7OSUM3",85,0)
 . I I'="" S I="["_I_"]"
"RTN","LR7OSUM3",86,0)
 . S LRUDT=$$LJ^XLFSTR(I,5)_LRUDT_" "
"RTN","LR7OSUM3",87,0)
 Q
"RTN","LR7OSUM3",88,0)
 ;
"RTN","LR7OSUM3",89,0)
 ;
"RTN","LR7OSUM3",90,0)
PFAC ; Print header with name of facility printing report.
"RTN","LR7OSUM3",91,0)
 ;
"RTN","LR7OSUM3",92,0)
 D PFAC^LRRP1(DUZ(2),0,1,.LRPF)
"RTN","LR7OSUM3",93,0)
 I ($O(^TMP($J,LRDFN,0))!($O(^TMP($J,LRDFN,"MISC",0)))),$D(LRPF) D
"RTN","LR7OSUM3",94,0)
 . S LRI=0
"RTN","LR7OSUM3",95,0)
 . F  S LRI=$O(LRPF(LRI)) Q:'LRI  D LN^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,LRPF(LRI))
"RTN","LR7OSUM3",96,0)
 . D LINE^LR7OSUM4 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,"As of: "_$$HTE^XLFDT($H,"1M"))
"RTN","LR7OSUM3",97,0)
 . D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSUM3",98,0)
 Q
"RTN","LR7OSUM4")
0^144^B20007671
"RTN","LR7OSUM4",1,0)
LR7OSUM4 ;DALOI/STAFF - Silent Patient cum cont. ;06/04/12  11:15
"RTN","LR7OSUM4",2,0)
 ;;5.2;LAB SERVICE;**121,187,228,241,251,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM4",3,0)
 ;
"RTN","LR7OSUM4",4,0)
BS ;from LR7OSUM3
"RTN","LR7OSUM4",5,0)
 ;
"RTN","LR7OSUM4",6,0)
 K I,Z,^TMP($J,"TY")
"RTN","LR7OSUM4",7,0)
 ;
"RTN","LR7OSUM4",8,0)
 S LRCW=10,LRHI="",LRLO="",LRTT=1,I=0,LRTY=GIOM-28\10,LRMU=LRMU+1,LRII=0
"RTN","LR7OSUM4",9,0)
 ;
"RTN","LR7OSUM4",10,0)
 F  S LRII=$O(^LAB(64.5,1,1,LRMH,1,LRSH,1,LRII)) Q:LRII<1  D
"RTN","LR7OSUM4",11,0)
 . S Z=^LAB(64.5,1,1,LRMH,1,LRSH,1,LRII,0),P3=$P(Z,U,3),P6=$P(Z,U,6),I=I+1,I(I)=LRII
"RTN","LR7OSUM4",12,0)
 . S ^TMP($J,"TY",0,I)=P3 S:P6 ^TMP($J,"TY",I,"D")=P6
"RTN","LR7OSUM4",13,0)
 K P3,P6
"RTN","LR7OSUM4",14,0)
 ;
"RTN","LR7OSUM4",15,0)
 F K=1:1:(LRTY-1) S LRFDT=$O(^TMP($J,LRDFN,LRMH,LRSH,LRFDT)) Q:LRFDT<1  D
"RTN","LR7OSUM4",16,0)
 . S Z=^TMP($J,LRDFN,LRMH,LRSH,LRFDT,0),^TMP($J,"TY",K,"L")=$P(Z,U,1),LRTT=LRTT+1
"RTN","LR7OSUM4",17,0)
 . D BS1
"RTN","LR7OSUM4",18,0)
 . S:LRFDT>LRLFDT LRLFDT=LRFDT
"RTN","LR7OSUM4",19,0)
 ;
"RTN","LR7OSUM4",20,0)
 S:LRTT>(LRTY-1)&(LRMULT=1) LRFULL=1
"RTN","LR7OSUM4",21,0)
 S:LRTT>(LRTY-1)&(LRMU=(LRMULT-1)) LRFULL=1
"RTN","LR7OSUM4",22,0)
 F I=1:1:LRSHD D LRLO^LR7OSUM5 S:LRLOHI'="" ^TMP($J,"TY",(LRTT+1),I)=LRLOHI S:P7'="" ^TMP($J,"TY",LRTT,I)=P7
"RTN","LR7OSUM4",23,0)
 S ^TMP($J,"TY",LRTT,"T")="Units",^TMP($J,"TY",(LRTT+1),"T")="Ranges"
"RTN","LR7OSUM4",24,0)
 S ^TMP($J,"TY",(LRTT+1),0)=$S($P(^LAB(64.5,"A",1,LRMH,LRSH,I(1)),U,11)'="":"Therapeutic",1:"Reference")
"RTN","LR7OSUM4",25,0)
 S ^TMP($J,"TY",LRTT,0)=""
"RTN","LR7OSUM4",26,0)
 ;
"RTN","LR7OSUM4",27,0)
 D LINE,LN
"RTN","LR7OSUM4",28,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,$E(LRTOPP,1,15))_$$S^LR7OS(16,CCNT,"")
"RTN","LR7OSUM4",29,0)
 F I=1:1:(LRTT+1) S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(I*10-4,CCNT,$J(^TMP($J,"TY",I,0),10))
"RTN","LR7OSUM4",30,0)
 ;
"RTN","LR7OSUM4",31,0)
 D LN
"RTN","LR7OSUM4",32,0)
 S XZ="",$P(XZ," ",3)="",^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,XZ)_$$S^LR7OS(16,CCNT,"")
"RTN","LR7OSUM4",33,0)
 F I=1:1:(LRTT-1) S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(I*10-4,CCNT,$J(^TMP($J,"Y2K",I),10))
"RTN","LR7OSUM4",34,0)
 ;
"RTN","LR7OSUM4",35,0)
 D LN
"RTN","LR7OSUM4",36,0)
 S XZ="",$P(XZ," ",3)="",^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,XZ)_$$S^LR7OS(16,CCNT,"")
"RTN","LR7OSUM4",37,0)
 F I=1:1:(LRTT+1) S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(I*10-4,CCNT,$J(^TMP($J,"TY",I,"T"),10))
"RTN","LR7OSUM4",38,0)
 ;
"RTN","LR7OSUM4",39,0)
 D LN
"RTN","LR7OSUM4",40,0)
 S XZ="-",$P(XZ,"-",GIOM)="",^TMP("LRC",$J,GCNT,0)=XZ
"RTN","LR7OSUM4",41,0)
 F I=1:1:LRSHD D
"RTN","LR7OSUM4",42,0)
 . S LRCL=16,LRG=^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0)
"RTN","LR7OSUM4",43,0)
 . D LN S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSUM4",44,0)
 . D BS4
"RTN","LR7OSUM4",45,0)
 I $D(LRTX) D
"RTN","LR7OSUM4",46,0)
 . D LN S LRTX="",^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"Comments: ")_$$S^LR7OS(16,CCNT,"")
"RTN","LR7OSUM4",47,0)
 . F I=1:1 S LRTX=$O(LRTX(LRTX)) Q:LRTX=""  D
"RTN","LR7OSUM4",48,0)
 . . S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(10*LRTX+2,CCNT,$P(^TMP("LRCMTINDX",$J,$P(LRTX(LRTX),"^")),"^"))
"RTN","LR7OSUM4",49,0)
 ;
"RTN","LR7OSUM4",50,0)
 D TXT1^LR7OSUM5
"RTN","LR7OSUM4",51,0)
 S LROFDT=LRFDT
"RTN","LR7OSUM4",52,0)
 I $D(LRTX) D
"RTN","LR7OSUM4",53,0)
 . S LRTX=""
"RTN","LR7OSUM4",54,0)
 . F I=1:1 S LRTX=$O(LRTX(LRTX)) Q:LRTX=""  D
"RTN","LR7OSUM4",55,0)
 . . D LN
"RTN","LR7OSUM4",56,0)
 . . S LRFDT=LRTX(LRTX),^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,$P(^TMP("LRCMTINDX",$J,LRFDT),"^")_". ")
"RTN","LR7OSUM4",57,0)
 . . D TXT^LR7OSUM5
"RTN","LR7OSUM4",58,0)
 S LRFDT=LROFDT
"RTN","LR7OSUM4",59,0)
 K LRTY,LRTX,^TMP($J,"TY")
"RTN","LR7OSUM4",60,0)
 I 'LRFDT G LRSH^LR7OSUM3
"RTN","LR7OSUM4",61,0)
 I $O(^TMP($J,LRDFN,LRMH,LRSH,LRFDT))="" G LRSH^LR7OSUM3
"RTN","LR7OSUM4",62,0)
 S LRFDT=LRLFDT
"RTN","LR7OSUM4",63,0)
 I LRFULL D HEAD^LR7OSUM6,LRNP^LR7OSUM3 S LRFULL=0,LRMU=0
"RTN","LR7OSUM4",64,0)
 G BS
"RTN","LR7OSUM4",65,0)
 ;
"RTN","LR7OSUM4",66,0)
 ;
"RTN","LR7OSUM4",67,0)
BS1 ;
"RTN","LR7OSUM4",68,0)
 N LRDATE
"RTN","LR7OSUM4",69,0)
 S LRDATE=$$FMTE^XLFDT(9999999-LRFDT,"1"_$S(+$P(Z,"^",6):"D",1:"M"))
"RTN","LR7OSUM4",70,0)
 S ^TMP($J,"TY",K,0)=$P(LRDATE,",",1)
"RTN","LR7OSUM4",71,0)
 S ^TMP($J,"TY",K,"T")=$P(LRDATE,"@",2)
"RTN","LR7OSUM4",72,0)
 S ^TMP($J,"Y2K",K)=$P($P(LRDATE," ",3),"@")
"RTN","LR7OSUM4",73,0)
 F J=1:1:LRSHD D
"RTN","LR7OSUM4",74,0)
 . S:$D(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,I(J))) ^TMP($J,"TY",K,J)=^(I(J))
"RTN","LR7OSUM4",75,0)
 . S:$D(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,"TX"))&'$D(LRTX(LRTT)) LRTX(LRTT)=LRFDT
"RTN","LR7OSUM4",76,0)
 Q
"RTN","LR7OSUM4",77,0)
 ;
"RTN","LR7OSUM4",78,0)
 ;
"RTN","LR7OSUM4",79,0)
BS2 ;
"RTN","LR7OSUM4",80,0)
 S X=$S($D(^TMP($J,"TY",J,I)):$P(^(I),U,1),1:"")
"RTN","LR7OSUM4",81,0)
 S X1=$S(X'="":$P(^TMP($J,"TY",J,I),U,2),1:"")
"RTN","LR7OSUM4",82,0)
 S LRDP=$S($D(^TMP($J,"TY",I,"D")):^("D"),1:""),LRCL=LRCL+10
"RTN","LR7OSUM4",83,0)
 K T1,T3
"RTN","LR7OSUM4",84,0)
 Q
"RTN","LR7OSUM4",85,0)
 ;
"RTN","LR7OSUM4",86,0)
 ;
"RTN","LR7OSUM4",87,0)
BS4 ;
"RTN","LR7OSUM4",88,0)
 ;
"RTN","LR7OSUM4",89,0)
 ; Build test names on left column
"RTN","LR7OSUM4",90,0)
 N LROVRFL
"RTN","LR7OSUM4",91,0)
 S LROVRFL=""
"RTN","LR7OSUM4",92,0)
 S X=^TMP($J,"TY",0,I)
"RTN","LR7OSUM4",93,0)
 I $L(X)>15 S LROVRFL=$E(X,16,100)
"RTN","LR7OSUM4",94,0)
 S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(1,CCNT,$E(X,1,15))_$$S^LR7OS(16,CCNT,"")
"RTN","LR7OSUM4",95,0)
 S:'$P($G(^TMP("LRT",$J,X)),"^",2) $P(^TMP("LRT",$J,X),"^",2)=GCNT
"RTN","LR7OSUM4",96,0)
 ;
"RTN","LR7OSUM4",97,0)
 ; Print test results then unit/reference ranges
"RTN","LR7OSUM4",98,0)
 F J=1:1:(LRTT+1) D
"RTN","LR7OSUM4",99,0)
 . D BS2
"RTN","LR7OSUM4",100,0)
 . I X="" Q
"RTN","LR7OSUM4",101,0)
 . I J'<LRTT N LRDP S LRDP=""
"RTN","LR7OSUM4",102,0)
 . D C1^LR7OSUM5(.X,.X1)
"RTN","LR7OSUM4",103,0)
 . I $P(LRG,U,4)'=""&(J<LRTT) S @("X="_$P(LRG,"^",4)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(J*10+8,CCNT,X_X1)
"RTN","LR7OSUM4",104,0)
 . I $P(LRG,U,4)=""!(J'<LRTT) S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(J*10+8,CCNT,$J(X,LRCW))
"RTN","LR7OSUM4",105,0)
 ;
"RTN","LR7OSUM4",106,0)
 ; Handle overflow on test name, indent 1 character for readability
"RTN","LR7OSUM4",107,0)
 I LROVRFL'="" F  S X=$E(LROVRFL,1,14),LROVRFL=$E(LROVRFL,15,100) Q:X=""  S GCNT=GCNT+1,^TMP("LRC",$J,GCNT,0)=" "_X
"RTN","LR7OSUM4",108,0)
 ;
"RTN","LR7OSUM4",109,0)
 Q
"RTN","LR7OSUM4",110,0)
 ;
"RTN","LR7OSUM4",111,0)
 ;
"RTN","LR7OSUM4",112,0)
LN ; Increment the counter
"RTN","LR7OSUM4",113,0)
 S GCNT=GCNT+1,CCNT=1
"RTN","LR7OSUM4",114,0)
 Q
"RTN","LR7OSUM4",115,0)
 ;
"RTN","LR7OSUM4",116,0)
 ;
"RTN","LR7OSUM4",117,0)
LINE ; Fill in the global with bank lines
"RTN","LR7OSUM4",118,0)
 N X
"RTN","LR7OSUM4",119,0)
 D LN
"RTN","LR7OSUM4",120,0)
 S X=" ",$P(X," ",GIOM)="",^TMP("LRC",$J,GCNT,0)=X
"RTN","LR7OSUM4",121,0)
 Q
"RTN","LR7OSUM5")
0^42^B48077281
"RTN","LR7OSUM5",1,0)
LR7OSUM5 ;DALOI/STAFFC - Silent Patient cum cont.;Nov 12, 2008
"RTN","LR7OSUM5",2,0)
 ;;5.2;LAB SERVICE;**121,187,228,241,250,251,256,356,372,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM5",3,0)
 ;
"RTN","LR7OSUM5",4,0)
TS ; from LR7OSUM3
"RTN","LR7OSUM5",5,0)
 N A,B,I,J,LRII,LRCCNT,LRCTR,LRFALT,LRCL,LRCW,LRJ,LRLEN,LRPNAME,LRTLOC,LRWRAP,LRX,LRY,X,XZ,Z
"RTN","LR7OSUM5",6,0)
 ;
"RTN","LR7OSUM5",7,0)
 I LRACT'=0 S X="",$P(X,"=",GIOM)="" D LN S ^TMP("LRC",$J,GCNT,0)=X
"RTN","LR7OSUM5",8,0)
 ;
"RTN","LR7OSUM5",9,0)
 S I=0,LRII=0
"RTN","LR7OSUM5",10,0)
 F  S LRII=$O(^LAB(64.5,1,1,LRMH,1,LRSH,1,LRII)) Q:LRII<1  S I=I+1,I(I)=LRII
"RTN","LR7OSUM5",11,0)
 S LRFALT=0,LRCTR=0,LRACT=LRACT+1,J=LRJS+1,LRCL=25
"RTN","LR7OSUM5",12,0)
 ;
"RTN","LR7OSUM5",13,0)
 I J'>LRSHD D
"RTN","LR7OSUM5",14,0)
 . D LINE^LR7OSUM4,LN
"RTN","LR7OSUM5",15,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,LRTOPP)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",16,0)
 ;
"RTN","LR7OSUM5",17,0)
 ; GIOM=right margin  LRCL=column position  LRCW=column width
"RTN","LR7OSUM5",18,0)
 F I=J:1:LRSHD S Z=^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0),LRCW=$P(Z,U,2) Q:(GIOM-LRCL)<LRCW  D
"RTN","LR7OSUM5",19,0)
 . S LRCL=LRCL+LRCW,LRPNAME=$P(Z,U,3),LRLEN=$L(LRPNAME),LRWRAP=0
"RTN","LR7OSUM5",20,0)
 . I LRLEN>(LRCW-1) S LRCCNT=CCNT,LRWRAP=1
"RTN","LR7OSUM5",21,0)
 . S LRX=$E(LRPNAME,1,LRCW-1),LRX=$$TRIM^XLFSTR(LRX,"RL"," "),LRX=$$CJ^XLFSTR(LRX,LRCW-1)
"RTN","LR7OSUM5",22,0)
 . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,LRX)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",23,0)
 . S:'$P($G(^TMP("LRT",$J,LRPNAME)),"^",2) $P(^TMP("LRT",$J,LRPNAME),"^",2)=GCNT
"RTN","LR7OSUM5",24,0)
 . I LRWRAP D
"RTN","LR7OSUM5",25,0)
 . . S LRJ=0
"RTN","LR7OSUM5",26,0)
 . . F  D  Q:LRPNAME="" 
"RTN","LR7OSUM5",27,0)
 . . . S LRPNAME=$E(LRPNAME,LRCW,LRLEN) S:$E(LRPNAME,1)=" " LRPNAME=$$TRIM^XLFSTR(LRPNAME,"L"," ") Q:LRPNAME=""
"RTN","LR7OSUM5",28,0)
 . . . S LRX=$E(LRPNAME,1,LRCW-1),LRX=$$TRIM^XLFSTR(LRX,"RL"," "),LRX=$$CJ^XLFSTR(LRX,LRCW-1),LRJ=LRJ+1
"RTN","LR7OSUM5",29,0)
 . . . S LRY=$G(^TMP("LRC",$J,GCNT+LRJ,0))
"RTN","LR7OSUM5",30,0)
 . . . S ^TMP("LRC",$J,GCNT+LRJ,0)=$$LJ^XLFSTR(LRY,LRCCNT-1)_LRX
"RTN","LR7OSUM5",31,0)
 S GCNT=$O(^TMP("LRC",$J,""),-1)
"RTN","LR7OSUM5",32,0)
 ;
"RTN","LR7OSUM5",33,0)
 S LRJS=(I-1)
"RTN","LR7OSUM5",34,0)
 S:LRACT=LRPL LRJS=LRJS+1
"RTN","LR7OSUM5",35,0)
 F I=J:1:LRJS Q:'$D(^LAB(64.5,"A",1,LRMH,LRSH,I(I)))  S Z=^(I(I)) S:$L($P(Z,U,2))!$L($P(Z,U,11)) LRFALT=1
"RTN","LR7OSUM5",36,0)
 I LRFALT D
"RTN","LR7OSUM5",37,0)
 . D LN
"RTN","LR7OSUM5",38,0)
 . S LRCL=25
"RTN","LR7OSUM5",39,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,$S($P(^LAB(64.5,"A",1,LRMH,LRSH,I(J)),U,11)'="":"Therapeutic low",1:"Ref range low"))_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",40,0)
 . D TS1,LN
"RTN","LR7OSUM5",41,0)
 . S LRCL=25
"RTN","LR7OSUM5",42,0)
 . S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(CCNT,CCNT,$S($P(^LAB(64.5,"A",1,LRMH,LRSH,I(J)),U,11)'="":"Therapeutic high",1:"Ref range high"))_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",43,0)
 . D TS2
"RTN","LR7OSUM5",44,0)
 ;
"RTN","LR7OSUM5",45,0)
 F I=J:1:LRJS Q:'$D(^LAB(64.5,"A",1,LRMH,LRSH,I(I)))  S:$P(^(I(I)),U,7)'="" LRFALT=1
"RTN","LR7OSUM5",46,0)
 I LRFALT S LRCL=25 D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(LRCL,CCNT,"") F I=J:1:LRJS D TS3
"RTN","LR7OSUM5",47,0)
 S LRFALT=0,XZ="",$P(XZ,"-",GIOM)=""
"RTN","LR7OSUM5",48,0)
 D LN
"RTN","LR7OSUM5",49,0)
 S ^TMP("LRC",$J,GCNT,0)=XZ
"RTN","LR7OSUM5",50,0)
 ;
"RTN","LR7OSUM5",51,0)
LRFDT ;
"RTN","LR7OSUM5",52,0)
 S:LRNP LRFFDT=LRFDT,LRNP=0
"RTN","LR7OSUM5",53,0)
 S LRFDT=$O(^TMP($J,LRDFN,LRMH,LRSH,LRFDT)) G:LRFDT<1 LOOP^LR7OSUM3 S LRTLOC=$P(^(LRFDT,0),U,1)
"RTN","LR7OSUM5",54,0)
 S:LRFDT>LRLFDT LRLFDT=LRFDT
"RTN","LR7OSUM5",55,0)
 ;
"RTN","LR7OSUM5",56,0)
GOUT ;
"RTN","LR7OSUM5",57,0)
 D QRS
"RTN","LR7OSUM5",58,0)
 I LRCTR>LRLNS&(LRACT'<LRPL) S LRFULL=1 D TXT1 G:$O(^TMP($J,LRDFN,LRMH,LRSH,LRLFDT))<1 LRSH^LR7OSUM3 D HEAD^LR7OSUM6,LRLNS^LR7OSUM3 S LRFULL=0,LRFDT=LRLFDT G TS
"RTN","LR7OSUM5",59,0)
 I LRCTR>LRLNS&(LRACT<LRPL) S LRFDT=LRFFDT G TS
"RTN","LR7OSUM5",60,0)
 G LRFDT
"RTN","LR7OSUM5",61,0)
 ;
"RTN","LR7OSUM5",62,0)
 ;
"RTN","LR7OSUM5",63,0)
QRS ;
"RTN","LR7OSUM5",64,0)
 S LRCTR=LRCTR+1
"RTN","LR7OSUM5",65,0)
 F I=J:1:LRJS I $D(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,I(I))) S:^(I(I))'="" LRFALT=1
"RTN","LR7OSUM5",66,0)
 Q:'LRFALT
"RTN","LR7OSUM5",67,0)
 S LRFALT=0,LRTM=1
"RTN","LR7OSUM5",68,0)
 D UDT^LR7OSUM3
"RTN","LR7OSUM5",69,0)
 S LRCL=25,LRTM=0
"RTN","LR7OSUM5",70,0)
 D LN
"RTN","LR7OSUM5",71,0)
 S ^TMP("LRC",$J,GCNT,0)=""
"RTN","LR7OSUM5",72,0)
 S:'LRNXSW ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(2,CCNT,""),^(0)=^(0)_$$S^LR7OS(3,CCNT,"")
"RTN","LR7OSUM5",73,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,LRUDT)
"RTN","LR7OSUM5",74,0)
 F I=J:1:LRJS S LRG=^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0) S X=^(0) D QRS1
"RTN","LR7OSUM5",75,0)
 Q
"RTN","LR7OSUM5",76,0)
 ;
"RTN","LR7OSUM5",77,0)
 ;
"RTN","LR7OSUM5",78,0)
QRS1 ;
"RTN","LR7OSUM5",79,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRCL,CCNT,""),LRCW=$P(LRG,U,2),LRDP=$P(X,U,6)
"RTN","LR7OSUM5",80,0)
 Q:(GIOM-LRCL)<LRCW
"RTN","LR7OSUM5",81,0)
 S LRCL=LRCL+LRCW
"RTN","LR7OSUM5",82,0)
 I $D(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,I(I))) D
"RTN","LR7OSUM5",83,0)
 . S X=^TMP($J,LRDFN,LRMH,LRSH,LRFDT,I(I))
"RTN","LR7OSUM5",84,0)
 . D C(.X,.X1)
"RTN","LR7OSUM5",85,0)
 . I $P(LRG,U,4)'=""&($L(X)) S @("X="_$P(LRG,U,4)),^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,X_X1)
"RTN","LR7OSUM5",86,0)
 . I $P(LRG,U,4)="" S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,X_X1)
"RTN","LR7OSUM5",87,0)
 Q
"RTN","LR7OSUM5",88,0)
 ;
"RTN","LR7OSUM5",89,0)
 ;
"RTN","LR7OSUM5",90,0)
TXT ; from LR7OSUM4
"RTN","LR7OSUM5",91,0)
 S LRVAR=0,LRIV=0
"RTN","LR7OSUM5",92,0)
 F  S LRIV=$O(^TMP($J,LRDFN,LRMH,LRSH,LRFDT,"TX",LRIV)) Q:LRIV<1  D
"RTN","LR7OSUM5",93,0)
 . S X=^TMP($J,LRDFN,LRMH,LRSH,LRFDT,"TX",LRIV,0),LRVAR=LRVAR+1
"RTN","LR7OSUM5",94,0)
 . I LRVAR>1 D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(5,CCNT,"")
"RTN","LR7OSUM5",95,0)
 . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(5,CCNT,X)
"RTN","LR7OSUM5",96,0)
 Q
"RTN","LR7OSUM5",97,0)
 ;
"RTN","LR7OSUM5",98,0)
 ;
"RTN","LR7OSUM5",99,0)
LRLO ; from LR7OSUM4
"RTN","LR7OSUM5",100,0)
 S @("LRLO="_$S($L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,2)):$P(^(I(I)),U,2),$L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,11)):$P(^(I(I)),U,11),1:""""""))
"RTN","LR7OSUM5",101,0)
 ;
"RTN","LR7OSUM5",102,0)
LRHI ;
"RTN","LR7OSUM5",103,0)
 S @("LRHI="_$S($L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,3)):$P(^(I(I)),U,3),$L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,12)):$P(^(I(I)),U,12),1:"""""")),P7=$P(^(I(I)),U,7)
"RTN","LR7OSUM5",104,0)
 S LRLOHI=$$EN^LRLRRVF(LRLO,LRHI)
"RTN","LR7OSUM5",105,0)
 Q
"RTN","LR7OSUM5",106,0)
 ;
"RTN","LR7OSUM5",107,0)
 ;
"RTN","LR7OSUM5",108,0)
TXT1 ; from LR7OSUM3, LR7OSUM4
"RTN","LR7OSUM5",109,0)
 S XZ="",$P(XZ,"=",GIOM)=""
"RTN","LR7OSUM5",110,0)
 Q:'$D(LRTM(0))
"RTN","LR7OSUM5",111,0)
 N C6,I,L
"RTN","LR7OSUM5",112,0)
 S C6=0
"RTN","LR7OSUM5",113,0)
 F  S C6=$O(^TMP($J,"TM",C6)) Q:C6<1  S X=^(C6) D
"RTN","LR7OSUM5",114,0)
 . D LN
"RTN","LR7OSUM5",115,0)
 . S I=$S($L($P(X,"^"))>1:2,1:3),^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(I,CCNT,$P(X,U)_". "),L(0)=0,L=0 D
"RTN","LR7OSUM5",116,0)
 . F  S L=$O(^TMP($J,"TM",C6,L)) Q:L<1  S X=^(L),L(0)=L(0)+1 D
"RTN","LR7OSUM5",117,0)
 . . I L(0)>1 D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(6,CCNT,"")
"RTN","LR7OSUM5",118,0)
 . . S ^(0)=^TMP("LRC",$J,GCNT,0)_X
"RTN","LR7OSUM5",119,0)
 Q
"RTN","LR7OSUM5",120,0)
 ;
"RTN","LR7OSUM5",121,0)
 ;
"RTN","LR7OSUM5",122,0)
C(X,X1)    ;
"RTN","LR7OSUM5",123,0)
 N X2
"RTN","LR7OSUM5",124,0)
 S X1=" "_$P(X,U,2),X=$P(X,U,1)
"RTN","LR7OSUM5",125,0)
 I $P(LRG,U,4)'="" S LRCW=LRCW-3 Q
"RTN","LR7OSUM5",126,0)
 I "-<>"[$E(X,1),$E(X,2,$L(X))?.N.P1N S X2=$E(X,1),X=$E(X,2,$L(X))
"RTN","LR7OSUM5",127,0)
 S LRCW(1)=LRCW-3
"RTN","LR7OSUM5",128,0)
 I X?.N.P1N!(LRDP="")!(X?.N1".".N) S X=$S(LRDP="":$J(X,LRCW(1)),1:$J(X,LRCW(1),LRDP)) D C2(.X,.X2)
"RTN","LR7OSUM5",129,0)
 Q
"RTN","LR7OSUM5",130,0)
 ;
"RTN","LR7OSUM5",131,0)
 ;
"RTN","LR7OSUM5",132,0)
C1(X,X1) ; from LR7OSUM4
"RTN","LR7OSUM5",133,0)
 N X2
"RTN","LR7OSUM5",134,0)
 S LRCW=$S(X1="":7,1:10),X1=$S($L(X1)=1:" "_X1_" ",$L(X1)=0:X1,1:" "_X1)
"RTN","LR7OSUM5",135,0)
 I $P(LRG,U,4)'="" S LRCW=7 Q
"RTN","LR7OSUM5",136,0)
 I "-<>"[$E(X,1),$E(X,2,$L(X))?.N.P1N S X2=$E(X,1),X=$E(X,2,$L(X))
"RTN","LR7OSUM5",137,0)
 S LRCW(1)=LRCW-3
"RTN","LR7OSUM5",138,0)
 I X?.N.P1N!(LRDP="")!(X?.N1".".N) S X=$S(LRDP="":$J(X,LRCW(1)),1:$J(X,LRCW(1),LRDP)) D C2(.X,.X2)
"RTN","LR7OSUM5",139,0)
 S X=$S(X1'="":X_X1,1:X)
"RTN","LR7OSUM5",140,0)
 Q
"RTN","LR7OSUM5",141,0)
 ;
"RTN","LR7OSUM5",142,0)
 ;
"RTN","LR7OSUM5",143,0)
C2(X,X2) ;
"RTN","LR7OSUM5",144,0)
 Q:'$D(X2)
"RTN","LR7OSUM5",145,0)
 Q:'$D(X)
"RTN","LR7OSUM5",146,0)
 N X3
"RTN","LR7OSUM5",147,0)
 F X3=1:1:$L(X) I $E(X,X3)'=" " S X=$E(X,1,X3-2)_X2_$E(X,X3,$L(X)) Q
"RTN","LR7OSUM5",148,0)
 Q
"RTN","LR7OSUM5",149,0)
 ;
"RTN","LR7OSUM5",150,0)
 ;
"RTN","LR7OSUM5",151,0)
TS1 ; Print low therapeutic or reference range values
"RTN","LR7OSUM5",152,0)
 F I=J:1:LRJS S LRCW=$P(^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0),U,2),LRCL=LRCL+LRCW D
"RTN","LR7OSUM5",153,0)
 . S @("LRLO="_$S($L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,2)):$P(^(I(I)),U,2),$L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,11)):$P(^(I(I)),U,11),1:""""""))
"RTN","LR7OSUM5",154,0)
 . ;S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$J(LRLO,(A+B))),^(0)=^(0)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",155,0)
 . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$$CJ^XLFSTR(LRLO,LRCW)),^(0)=^(0)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",156,0)
 Q
"RTN","LR7OSUM5",157,0)
 ;
"RTN","LR7OSUM5",158,0)
 ;
"RTN","LR7OSUM5",159,0)
TS2 ; Print high therapeutic or reference range values
"RTN","LR7OSUM5",160,0)
 F I=J:1:LRJS S LRCW=$P(^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0),U,2),LRCL=LRCL+LRCW D
"RTN","LR7OSUM5",161,0)
 . S @("LRHI="_$S($L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,3)):$P(^(I(I)),U,3),$L($P(^LAB(64.5,"A",1,LRMH,LRSH,I(I)),U,12)):$P(^(I(I)),U,12),1:"""""")),P7=$P(^(I(I)),U,7)
"RTN","LR7OSUM5",162,0)
 . ;S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$J(LRHI,(A+B))),^(0)=^(0)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",163,0)
 . S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$$CJ^XLFSTR(LRHI,LRCW)),^(0)=^(0)_$$S^LR7OS(LRCL,CCNT,"")
"RTN","LR7OSUM5",164,0)
 Q
"RTN","LR7OSUM5",165,0)
 ;
"RTN","LR7OSUM5",166,0)
 ;
"RTN","LR7OSUM5",167,0)
TS3 ; Print units
"RTN","LR7OSUM5",168,0)
 S LRCW=$P(^LAB(64.5,1,1,LRMH,1,LRSH,1,I(I),0),U,2)
"RTN","LR7OSUM5",169,0)
 Q:(GIOM-LRCL)<LRCW
"RTN","LR7OSUM5",170,0)
 S LRCL=LRCL+LRCW,X=^LAB(64.5,"A",1,LRMH,LRSH,I(I))
"RTN","LR7OSUM5",171,0)
 ;S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$J($P(X,U,7),(A+B)))
"RTN","LR7OSUM5",172,0)
 S ^(0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(CCNT,CCNT,$$CJ^XLFSTR($P(X,U,7),LRCW))
"RTN","LR7OSUM5",173,0)
 S ^TMP("LRC",$J,GCNT,0)=^TMP("LRC",$J,GCNT,0)_$$S^LR7OS(LRCL,CCNT,""),LRFALT=0
"RTN","LR7OSUM5",174,0)
 Q
"RTN","LR7OSUM5",175,0)
 ;
"RTN","LR7OSUM5",176,0)
 ;
"RTN","LR7OSUM5",177,0)
LN ;
"RTN","LR7OSUM5",178,0)
 S GCNT=GCNT+1,CCNT=1
"RTN","LR7OSUM5",179,0)
 Q
"RTN","LR7OSUM6")
0^141^B14781997
"RTN","LR7OSUM6",1,0)
LR7OSUM6 ;DALOI/STAFF - Silent Patient cum cont. ;Nov 12, 2008
"RTN","LR7OSUM6",2,0)
 ;;5.2;LAB SERVICE;**121,201,187,286,356,372,350**;Sep 27, 1994;Build 230
"RTN","LR7OSUM6",3,0)
 ;
"RTN","LR7OSUM6",4,0)
LRUDT(LRDATE,LREAL) ;Get output date/time
"RTN","LR7OSUM6",5,0)
 ; Call with LRDATE = FileMan date/time
"RTN","LR7OSUM6",6,0)
 ;            LREAL = flag indicating inexact date/time (LREAL=1)
"RTN","LR7OSUM6",7,0)
 ; Called from below, LR7OGMP, LR7OSUM3
"RTN","LR7OSUM6",8,0)
 N LRUDT
"RTN","LR7OSUM6",9,0)
 ;S LRTIM=$E(X,9,12) F I=0:0 Q:$L(LRTIM)=4  S LRTIM=LRTIM_0
"RTN","LR7OSUM6",10,0)
 ;S LRTIM=$S(LRTIM?4"0":"     ",1:$E(LRTIM,1,2)_":"_$E(LRTIM,3,4)),LRUDT=$$FMTE^XLFDT($P(X,"."),"5Z")_" "_$J(LRTIM,5)_" "
"RTN","LR7OSUM6",11,0)
 S LRUDT=$$FMTE^XLFDT(LRDATE,"1"_$S(LREAL:"D",1:"M"))
"RTN","LR7OSUM6",12,0)
 Q LRUDT
"RTN","LR7OSUM6",13,0)
 ;
"RTN","LR7OSUM6",14,0)
 ;
"RTN","LR7OSUM6",15,0)
HEAD ;from LR7OSUM3, LR7OSUM4, LR7OSUM5
"RTN","LR7OSUM6",16,0)
 D LRBOT,TOP
"RTN","LR7OSUM6",17,0)
 Q
"RTN","LR7OSUM6",18,0)
 ;
"RTN","LR7OSUM6",19,0)
 ;
"RTN","LR7OSUM6",20,0)
LRBOT ;from LR7OSUM3
"RTN","LR7OSUM6",21,0)
 N L1 D LINE^LR7OSUM4
"RTN","LR7OSUM6",22,0)
Y D LINE^LR7OSUM4
"RTN","LR7OSUM6",23,0)
 Q
"RTN","LR7OSUM6",24,0)
 ;
"RTN","LR7OSUM6",25,0)
 ;
"RTN","LR7OSUM6",26,0)
TOP ; from LR7OSUM3
"RTN","LR7OSUM6",27,0)
 S LRAG=0
"RTN","LR7OSUM6",28,0)
 Q
"RTN","LR7OSUM6",29,0)
 ;
"RTN","LR7OSUM6",30,0)
 ;
"RTN","LR7OSUM6",31,0)
KILL ;
"RTN","LR7OSUM6",32,0)
 D HEAD
"RTN","LR7OSUM6",33,0)
 Q
"RTN","LR7OSUM6",34,0)
 ;
"RTN","LR7OSUM6",35,0)
 ;
"RTN","LR7OSUM6",36,0)
LRMISC S LRFDT=0,LRPG=1 D TOP
"RTN","LR7OSUM6",37,0)
 ;
"RTN","LR7OSUM6",38,0)
MHI ;
"RTN","LR7OSUM6",39,0)
 S LRMHN=$P(^TMP($J,LRDFN,LRMH),U,1),LRCNT=12 D WR
"RTN","LR7OSUM6",40,0)
 ;
"RTN","LR7OSUM6",41,0)
 ;
"RTN","LR7OSUM6",42,0)
MDT S LRFDT=$O(^TMP($J,LRDFN,"MISC",LRFDT)) G:LRFDT<1 END
"RTN","LR7OSUM6",43,0)
 S LRUDT=$$LRUDT(9999999-LRFDT,+$P($G(^TMP($J,LRDFN,"MISC",LRFDT,0)),U,6))
"RTN","LR7OSUM6",44,0)
 D LRCNT S LRMIT=0
"RTN","LR7OSUM6",45,0)
 ;
"RTN","LR7OSUM6",46,0)
LRMIT S LRMIT=$O(^TMP($J,LRDFN,"MISC",LRFDT,LRMIT)) G:LRMIT="TX" TXT G:LRMIT="" MDT S X=^(LRMIT) G:LRMIT=.1 MSG
"RTN","LR7OSUM6",47,0)
 ;
"RTN","LR7OSUM6",48,0)
 S LRVAL=$P(X,U,1),LRSPE=$P(X,U,2),LRTEST=$P(X,U,3),X1=$P(X,U,4)
"RTN","LR7OSUM6",49,0)
 S LRLO=$P(X,"^",6),LRHI=$P(X,"^",7),LRUNT=$P(X,"^",8)
"RTN","LR7OSUM6",50,0)
 S LRSPEM=$S($L(LRSPE):$P(^LAB(61,LRSPE,0),U,1),1:"")
"RTN","LR7OSUM6",51,0)
 ;G:'LRTEST COMM
"RTN","LR7OSUM6",52,0)
 S LRNAME=""
"RTN","LR7OSUM6",53,0)
 I LRTEST D
"RTN","LR7OSUM6",54,0)
 . S LRNAME=$P(^LAB(60,LRTEST,0),"^")
"RTN","LR7OSUM6",55,0)
 . I $L(LRNAME)>25,$P($G(^LAB(60,LRTEST,.1)),"^")'="" S LRNAME=$P(^LAB(60,LRTEST,.1),"^")
"RTN","LR7OSUM6",56,0)
 . E  S LRNAME=$E(LRNAME,1,25)
"RTN","LR7OSUM6",57,0)
 ;
"RTN","LR7OSUM6",58,0)
 D LINE^LR7OSUM4
"RTN","LR7OSUM6",59,0)
 S LRREF=$$EN^LRLRRVF(LRLO,LRHI)
"RTN","LR7OSUM6",60,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,LRUDT)_$$S^LR7OS(21,CCNT,$E(LRSPEM,1,16))_$$S^LR7OS(40,CCNT,LRNAME_":")_$$S^LR7OS(65,CCNT,LRVAL_" "_X1_"  "_LRUNT)_$$S^LR7OS(82,CCNT,LRREF)
"RTN","LR7OSUM6",61,0)
 I LRNAME'="",'$P($G(^TMP("LRT",$J,LRNAME)),"^",2) S $P(^(LRNAME),"^",2)=GCNT
"RTN","LR7OSUM6",62,0)
 K LRREF
"RTN","LR7OSUM6",63,0)
 I 'LRTEST G COMM
"RTN","LR7OSUM6",64,0)
 G LRMIT
"RTN","LR7OSUM6",65,0)
 ;
"RTN","LR7OSUM6",66,0)
 ;
"RTN","LR7OSUM6",67,0)
MSG D LINE^LR7OSUM4,LINE^LR7OSUM4
"RTN","LR7OSUM6",68,0)
 X X ;Need to see what is in X
"RTN","LR7OSUM6",69,0)
 G LRMIT
"RTN","LR7OSUM6",70,0)
 ;
"RTN","LR7OSUM6",71,0)
 ;
"RTN","LR7OSUM6",72,0)
COMM D LN
"RTN","LR7OSUM6",73,0)
 I LRVAL'="" S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(1,CCNT,"COMMENT: "_LRVAL)
"RTN","LR7OSUM6",74,0)
 G LRMIT
"RTN","LR7OSUM6",75,0)
 ;
"RTN","LR7OSUM6",76,0)
 ;
"RTN","LR7OSUM6",77,0)
WR ;
"RTN","LR7OSUM6",78,0)
 D LINE^LR7OSUM4
"RTN","LR7OSUM6",79,0)
 S X=GIOM/2-($L(LRMHN)/2+5)
"RTN","LR7OSUM6",80,0)
 S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(X,CCNT,"---- "_LRMHN_" ----"),^TMP("LRH",$J,LRMHN)=GCNT
"RTN","LR7OSUM6",81,0)
 D LINE^LR7OSUM4
"RTN","LR7OSUM6",82,0)
 D LN S ^TMP("LRC",$J,GCNT,0)=$$S^LR7OS(4,CCNT,"DATE     TIME    SPECIMEN")_$$S^LR7OS(40,CCNT,"TEST")_$$S^LR7OS(65,CCNT,"VALUE")_$$S^LR7OS(79,CCNT,"Ref ranges")
"RTN","LR7OSUM6",83,0)
 D LN S X="",$P(X,"-",GIOM)="",^TMP("LRC",$J,GCNT,0)=X
"RTN","LR7OSUM6",84,0)
 Q
"RTN","LR7OSUM6",85,0)
 ;
"RTN","LR7OSUM6",86,0)
 ;
"RTN","LR7OSUM6",87,0)
TXT S I=0
"RTN","LR7OSUM6",88,0)
 F  S I=$O(^TMP($J,LRDFN,"MISC",LRFDT,"TX",I)) Q:I<1  S GCNT=GCNT+1,^TMP("LRC",$J,GCNT,0)=^(I,0)
"RTN","LR7OSUM6",89,0)
 G LRMIT
"RTN","LR7OSUM6",90,0)
 ;
"RTN","LR7OSUM6",91,0)
 ;
"RTN","LR7OSUM6",92,0)
END S X="",$P(X,"=",GIOM)="",GCNT=GCNT+1,^TMP("LRC",$J,GCNT,0)=X
"RTN","LR7OSUM6",93,0)
 D LRBOT S LRLO=""
"RTN","LR7OSUM6",94,0)
 K LRSB,LRMISC
"RTN","LR7OSUM6",95,0)
 Q
"RTN","LR7OSUM6",96,0)
 ;
"RTN","LR7OSUM6",97,0)
 ;
"RTN","LR7OSUM6",98,0)
PRE ;from LR7OSUM3
"RTN","LR7OSUM6",99,0)
 Q:$D(^TMP($J,LRDFN,"MISC"))'=11
"RTN","LR7OSUM6",100,0)
 S LRMISC=1,LRPG=0,LRMH="MISC"
"RTN","LR7OSUM6",101,0)
 G LRMISC
"RTN","LR7OSUM6",102,0)
 ;
"RTN","LR7OSUM6",103,0)
 ;
"RTN","LR7OSUM6",104,0)
LRCNT ;
"RTN","LR7OSUM6",105,0)
 S LRCNT=0,I=0
"RTN","LR7OSUM6",106,0)
 F  S I=$O(^TMP($J,LRDFN,LRMH,LRFDT,I)) Q:I<1  S LRCNT=LRCNT+1
"RTN","LR7OSUM6",107,0)
 S LRCTN=0
"RTN","LR7OSUM6",108,0)
 I $D(^TMP($J,LRDFN,LRMH,LRFDT,"TX")) D
"RTN","LR7OSUM6",109,0)
 . S J=0
"RTN","LR7OSUM6",110,0)
 . F  S J=$O(^TMP($J,LRDFN,LRMH,LRFDT,"TX",J)) Q:J<1  S LRCTN=LRCTN+1
"RTN","LR7OSUM6",111,0)
 S LRCNT=LRCNT*2+5+LRCTN
"RTN","LR7OSUM6",112,0)
 Q
"RTN","LR7OSUM6",113,0)
 ;
"RTN","LR7OSUM6",114,0)
 ;
"RTN","LR7OSUM6",115,0)
LN ;
"RTN","LR7OSUM6",116,0)
 S CCNT=1,GCNT=GCNT+1
"RTN","LR7OSUM6",117,0)
 Q
"RTN","LR7OU64")
0^217^B21786622
"RTN","LR7OU64",1,0)
LR7OU64 ;SLC/DCM/FHS/DALISC - RESULT CODE NLT LINKING UTILITY AUTO ; 6/12/12 2:00
"RTN","LR7OU64",2,0)
 ;;5.2;LAB SERVICE;**153,201,350**;Sep 27, 1994;Build 230
"RTN","LR7OU64",3,0)
EN ;
"RTN","LR7OU64",4,0)
 ;Find matches between file 64 and 60
"RTN","LR7OU64",5,0)
 D MSG
"RTN","LR7OU64",6,0)
LIST ;
"RTN","LR7OU64",7,0)
 K DIR S DIR("A")="Would you like a list of RESULT NLT CODES from LABORATORY TEST file",DIR(0)="Y",DIR("B")="No"
"RTN","LR7OU64",8,0)
 D ^DIR G:$D(DIRUT)!($D(DTOUT))!($D(DUOUT)) END I Y=1 D   G:$D(DIRUT)!($D(DTOUT))!($D(DUOUT))!(Y=0) END G LK
"RTN","LR7OU64",9,0)
 . D LST K DIR S DIR("A")="Ready to start linkage procedure ",DIR(0)="Y"
"RTN","LR7OU64",10,0)
 . D ^DIR
"RTN","LR7OU64",11,0)
 W ! K DIR S DIR("A")="Ready to proceed",DIR(0)="Y"
"RTN","LR7OU64",12,0)
 D ^DIR G:$D(DTOUT)!($D(DUOUT))!($D(DIROUT))!(Y'=1) END
"RTN","LR7OU64",13,0)
LK W !!,$$CJ^XLFSTR("Do you want to automatically link entries when there is an exact match",80)
"RTN","LR7OU64",14,0)
 W !,$$CJ^XLFSTR("on the NAME in both files",80) S %=2 D YN^DICN G:%=-1 END
"RTN","LR7OU64",15,0)
 I %=0 W !!,$$CJ^XLFSTR("Answer YES to automatically link the entries, or NO to be prompted for each",80) G LK
"RTN","LR7OU64",16,0)
 S AUTO=$S(%=1:1,1:0)
"RTN","LR7OU64",17,0)
LAB ;
"RTN","LR7OU64",18,0)
 W:$G(AUTO) !?5,"Press Return to Stop Auto Update",!
"RTN","LR7OU64",19,0)
 S (END,LRN)="" F  S LRN=$O(^LAB(60,"B",LRN)) Q:LRN=""!($G(END))  D
"RTN","LR7OU64",20,0)
 . S LRIEN="" F  S LRIEN=+$O(^LAB(60,"B",LRN,LRIEN)) Q:LRIEN<1!($G(END))  I '$G(^(LRIEN)) D CHECK
"RTN","LR7OU64",21,0)
 W:'$G(END) !!,$$CJ^XLFSTR("End of loop",80),!
"RTN","LR7OU64",22,0)
 G END
"RTN","LR7OU64",23,0)
 Q
"RTN","LR7OU64",24,0)
CHECK ;
"RTN","LR7OU64",25,0)
 S LRMIEN=0
"RTN","LR7OU64",26,0)
 Q:'$D(^LAB(60,LRIEN,0))#2!('$P(^(0),";",2))!($P($G(^LAB(60,LRIEN,64)),U,2))!($G(END))
"RTN","LR7OU64",27,0)
 S LRDATA=$P(^LAB(60,LRIEN,0),U),LRTY=$P(^(0),U,3) Q:LRTY=""!(LRTY="N")
"RTN","LR7OU64",28,0)
 S LRNU=$$UP^XLFSTR(LRN),X=+$O(^LAM("D",LRNU,0)) I $D(^LAM(X,0)),^(0)'["~" S LRMIEN=X
"RTN","LR7OU64",29,0)
 D:'LRMIEN 64 Q:'LRMIEN!($G(END))
"RTN","LR7OU64",30,0)
 Q:'$D(^LAM(LRMIEN,0))#2  S LRCODE=$P(^(0),U,2) Q:'LRCODE!($D(^LAB(60,"AE",LRCODE)))
"RTN","LR7OU64",31,0)
 Q:'$D(^LAM(LRMIEN,0))  S LRMNAME=$P(^(0),U)
"RTN","LR7OU64",32,0)
 W !!,"60 = ",LRDATA,!,"64 = ",LRMNAME_"   "_LRCODE
"RTN","LR7OU64",33,0)
 D LINK(LRIEN,LRMIEN,AUTO)
"RTN","LR7OU64",34,0)
 Q
"RTN","LR7OU64",35,0)
64 ;Look for NATIONAL VA LAB CODE
"RTN","LR7OU64",36,0)
 S LRMIEN=0,I=+$P($G(^LAB(60,LRIEN,64)),U,2) I $D(^LAM(I,0)),^(0)'["~" S LRMIEN=I
"RTN","LR7OU64",37,0)
 Q:'LRMIEN
"RTN","LR7OU64",38,0)
 W !,$C(7),?5,"Did not find a exact name match for Lab Test "_LRDATA,!
"RTN","LR7OU64",39,0)
 K DIR
"RTN","LR7OU64",40,0)
 W !," Want to use the ["_$P(^LAM(LRMIEN,0),U)_"] NATIONAL VA LAB CODE instead?"
"RTN","LR7OU64",41,0)
 K DIR S DIR(0)="Y" D ^DIR S:Y'=1 LRMIEN=0 Q
"RTN","LR7OU64",42,0)
 Q
"RTN","LR7OU64",43,0)
LINK(X60,X641,DOIT) ;Link the 2 files
"RTN","LR7OU64",44,0)
 S LRDATA="`"_X60 I DOIT S %=1 G L2
"RTN","LR7OU64",45,0)
L1 W !?5,"Link the two entries" S %=2 D YN^DICN Q:%=2  I %=-1 S END=1 Q
"RTN","LR7OU64",46,0)
 I $G(DTOUT) S END=1 Q
"RTN","LR7OU64",47,0)
 I %=0 W !,"Enter Yes to link the entries, No to leave it alone." G L1
"RTN","LR7OU64",48,0)
L2 K DIE,DA,DR,DIC S DIE="^LAB(60,",DA=X60,DR="64.1///`"_X641,DLAYGO=60 D ^DIE K DLAYGO
"RTN","LR7OU64",49,0)
 I $P($G(^LAB(60,X60,64)),U,2) W !?32,"o----LINKED----o",! D  Q
"RTN","LR7OU64",50,0)
 . R X:1 I $T W !?20,"User terminated update",!,$C(7) S END=1
"RTN","LR7OU64",51,0)
 W !!?15,"***************** NOT LINKED ***************",!
"RTN","LR7OU64",52,0)
 W !!?5,"Press Return to continue" R X:DTIME S:$G(DTOUT)!($E(X)=U) END=1
"RTN","LR7OU64",53,0)
 Q
"RTN","LR7OU64",54,0)
END ;
"RTN","LR7OU64",55,0)
 Q:$G(LRDBUG)
"RTN","LR7OU64",56,0)
 K %,AUTO,DA,DIC,DIE,DIR,DOIT,DR,END,LRDATA,LRIEN,LRMIEN,LRN,LRNU
"RTN","LR7OU64",57,0)
 K LRSUF,LRTY,X,X60,X64,Y,LRMNAME,D1,D0,DLAYGO,I,LRCODE,END
"RTN","LR7OU64",58,0)
 K FLG,XXX,ZZ,ZZ1,X,Y,Y64,DLAYGO,DX,S
"RTN","LR7OU64",59,0)
 Q
"RTN","LR7OU64",60,0)
LST ;
"RTN","LR7OU64",61,0)
 K ^TMP("LR",$J),DIC I $O(^LAB(60,"AE",0))="" W !,"Nothing in X-Ref to Print.",!! Q
"RTN","LR7OU64",62,0)
 W !!,$$CJ^XLFSTR("I will produce a list of ",80)
"RTN","LR7OU64",63,0)
 W !,$$CJ^XLFSTR("NATIONAL VA Code / Result NLT codes from LABORATORY TEST file",80),!
"RTN","LR7OU64",64,0)
 K %ZIS S %ZIS="QN",%ZIS("A")="Printer Name " D ^%ZIS G:POP CLEAN
"RTN","LR7OU64",65,0)
 I IO'=IO(0)!($D(IO("Q"))) S ZTRTN="DQ^LR7OU64",ZTIO=ION,ZTDESC="PRINT NLT CODES FROM ^LAB(60 " W !!?10,"Report Queued to "_ION,! D ^%ZTLOAD,^%ZISC G CLEAN
"RTN","LR7OU64",66,0)
DQ K ^TMP("LR",$J),DX S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LR7OU64",67,0)
 W !!,$$CJ^XLFSTR("List of NATIONAL VA Code / Result NLT codes from LABORATORY TEST file",80),!!
"RTN","LR7OU64",68,0)
 W ?6,$$NOW^XLFDT,!
"RTN","LR7OU64",69,0)
 S LRNLT="" F  S LRNLT=$O(^LAB(60,"AE",LRNLT)) Q:LRNLT=""  D
"RTN","LR7OU64",70,0)
 . S LRLAB=0 F  S LRLAB=$O(^LAB(60,"AE",LRNLT,LRLAB)) Q:LRLAB<1  D
"RTN","LR7OU64",71,0)
 . . S ^TMP("LR",$J,$P(^LAB(60,LRLAB,0),U),LRNLT)=LRLAB
"RTN","LR7OU64",72,0)
 S DIC="^LAB(60,"
"RTN","LR7OU64",73,0)
 S NODE="^TMP(""LR"","_$J_")" F  S NODE=$Q(@NODE) Q:$QS(NODE,2)'=$J  D
"RTN","LR7OU64",74,0)
 . S DA=@NODE,DR=64 W !,"Test Name: ",$P(^LAB(60,DA,0),U)
"RTN","LR7OU64",75,0)
 . D EN^LRDIQ S:$E(IOST,1,2)="P-" S=0
"RTN","LR7OU64",76,0)
CLEAN K DIC,DA,NODE,LRNLT,LRLAB,DR,DX,S,^TMP("LR",$J)
"RTN","LR7OU64",77,0)
 Q
"RTN","LR7OU64",78,0)
MSG W !,$$CJ^XLFSTR("This option will Auto Link NLT RESULT CODE to Laboratory test file (#60).",80)
"RTN","LR7OU64",79,0)
 W !,$$CJ^XLFSTR("NLT RESULT CODE is used by the LEDI software to identify",80)
"RTN","LR7OU64",80,0)
 W !,$$CJ^XLFSTR("test results returned by Host Laboratories.",80)
"RTN","LR7OU64",81,0)
 W !,$$CJ^XLFSTR("ONLY GENERIC NLT CODES CAN BE LINKED TO LAB TEST ",80),!!
"RTN","LR7OU64",82,0)
 W !,$$CJ^XLFSTR("Only ATOMIC lab tests can have an NLT RESULT CODE.",80),!   ;[ccr-8218]
"RTN","LR7OU64",83,0)
 Q
"RTN","LR7OV0")
0^142^B31803944
"RTN","LR7OV0",1,0)
LR7OV0 ;DALOI/STAFF - Update orderable items ;Oct 10, 2007
"RTN","LR7OV0",2,0)
 ;;5.2;LAB SERVICE;**121,187,357,361,350**;Sep 27, 1994;Build 230
"RTN","LR7OV0",3,0)
 ;
"RTN","LR7OV0",4,0)
TEST(TEST,ICNT) ;Process single test
"RTN","LR7OV0",5,0)
 ;TEST=test ptr to file 60
"RTN","LR7OV0",6,0)
 ;ICNT=Current counter in ORUPDMSG(ICNT)
"RTN","LR7OV0",7,0)
 N TYPE,TESTID,IFN,IFN1,CTR,CTR1,GENW,X0,S0,SAMP,MAX,DMAX,COLLECT,SAMPLE,SPEC,SUBID,SYN,COST,WCOM,Y9,Y10,Y11
"RTN","LR7OV0",8,0)
 Q:'$D(^LAB(60,TEST,0))  S X0=^(0),COST=$P(X0,"^",11),SUB=$P(X0,"^",4),TYPE=$P(X0,"^",3),CTR1=0
"RTN","LR7OV0",9,0)
 I $D(^LAB(60,TEST,6)) S (CTR,IFN)=0 F  S IFN=$O(^LAB(60,TEST,6,IFN)) Q:IFN<1  S CTR=CTR+1,GENW(CTR)=^(IFN,0)
"RTN","LR7OV0",10,0)
 S (CTR,IFN)=0 F  S IFN=$O(^LAB(60,TEST,5,IFN)) Q:IFN<1  S CTR=CTR+1,SYN(CTR)=^(IFN,0)
"RTN","LR7OV0",11,0)
 S (Y9,Y10,Y11)="" I $P($G(^LAB(60,TEST,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OV0",12,0)
 D
"RTN","LR7OV0",13,0)
 . S (COLLECT,SAMP,SPEC)=0,TESTID=$$UVID^LR7OU0(TEST,+SPEC,Y9,Y11,Y10,"ORUPDMSG"),ICNT=ICNT+1,ORUPDMSG(ICNT)=$$MFE(MFECODE,TESTID)
"RTN","LR7OV0",14,0)
 . S ICNT=ICNT+1,ORUPDMSG(ICNT)=$$ZLR("","",CTR1,SUB,"","",COST,TYPE)
"RTN","LR7OV0",15,0)
 . S IFN1=0 F  S IFN1=$O(^LAB(60,TEST,2,IFN1)) Q:IFN1<1  S X=^(IFN1,0) I $D(^LAB(60,+X,0)) D
"RTN","LR7OV0",16,0)
 .. N Y9,Y10,Y11 S (Y9,Y10,Y11)="" I $P($G(^LAB(60,+X,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OV0",17,0)
 .. S SUBID=$$UVID^LR7OU0($P(X,"^"),"",Y9,Y11,Y10,"ORUPDMSG"),ICNT=ICNT+1,ORUPDMSG(ICNT)="ZLC||||"_SUBID
"RTN","LR7OV0",18,0)
 . D ZSY(.SYN),NTE(.GENW,.WCOM)
"RTN","LR7OV0",19,0)
 Q
"RTN","LR7OV0",20,0)
 ;
"RTN","LR7OV0",21,0)
MFE(EVENT,KEY) ;MFE component
"RTN","LR7OV0",22,0)
 ;EVENT=MAD-Add Record, MDL-Delete Record, MUP-Update Record
"RTN","LR7OV0",23,0)
 ;      MDC-Deactivate, MAC-Reactivate
"RTN","LR7OV0",24,0)
 N MFE
"RTN","LR7OV0",25,0)
 S MFE="MFE|"_EVENT_"|||"_KEY
"RTN","LR7OV0",26,0)
 Q MFE
"RTN","LR7OV0",27,0)
 ;
"RTN","LR7OV0",28,0)
ZLR(SPEC,COLLECT,SEQ,SUB,MAXORD,DMAXORD,COST,TYPE) ;ZLR component
"RTN","LR7OV0",29,0)
 N ZLR
"RTN","LR7OV0",30,0)
 S ZLR="ZLR|"_SPEC_"|"_COLLECT_"|"_SEQ_"|"_SUB_"|"_MAXORD_"|"_DMAXORD_"|"_COST_"|"_TYPE
"RTN","LR7OV0",31,0)
 Q ZLR
"RTN","LR7OV0",32,0)
 ;
"RTN","LR7OV0",33,0)
ZSY(SYN) ;ZSY component
"RTN","LR7OV0",34,0)
 N IFN
"RTN","LR7OV0",35,0)
 S IFN=0 F  S IFN=$O(SYN(IFN)) Q:IFN<1  S ICNT=ICNT+1,ORUPDMSG(ICNT)="ZSY|"_IFN_"|"_SYN(IFN)
"RTN","LR7OV0",36,0)
 Q
"RTN","LR7OV0",37,0)
 ;
"RTN","LR7OV0",38,0)
NTE(GEN,COM) ;NTE component
"RTN","LR7OV0",39,0)
 N IFN,CTR S CTR=0
"RTN","LR7OV0",40,0)
 S ICNT=ICNT+1 D NTE^LR7OU01(CTR,"P","GEN(",ICNT)
"RTN","LR7OV0",41,0)
 S ICNT=ICNT+1 D NTE^LR7OU01(CTR,"P","COM(",ICNT)
"RTN","LR7OV0",42,0)
 Q
"RTN","LR7OV0",43,0)
 ;
"RTN","LR7OV0",44,0)
MFI(EVENT) ;MFI component
"RTN","LR7OV0",45,0)
 ;EVENT=REP for initial population of orderables
"RTN","LR7OV0",46,0)
 ;     =UPD for subsequent updates
"RTN","LR7OV0",47,0)
 N MFI
"RTN","LR7OV0",48,0)
 S MFI="MFI|60^Lab Test^99DD||"_EVENT_"|||NE"
"RTN","LR7OV0",49,0)
 Q MFI
"RTN","LR7OV0",50,0)
 ;
"RTN","LR7OV0",51,0)
SINGLE(TEST,MFICODE,MFECODE) ;Message for a single test
"RTN","LR7OV0",52,0)
 ;TEST= ptr to test in file 60
"RTN","LR7OV0",53,0)
 ;MFICODE=File Level Event Code
"RTN","LR7OV0",54,0)
 ;MFECODE=Record Level Event Code
"RTN","LR7OV0",55,0)
 ;N X,ORUPDMSG,MSG
"RTN","LR7OV0",56,0)
 L +LR7OV0(TEST):9999
"RTN","LR7OV0",57,0)
 S MSG="ORUPDMSG",X=$$MSH^LR7OU0("MFN"),ORUPDMSG(1)=X
"RTN","LR7OV0",58,0)
 S X=$$MFI(MFICODE),ORUPDMSG(2)=X
"RTN","LR7OV0",59,0)
 D TEST(TEST,2)
"RTN","LR7OV0",60,0)
 ;W !!,$P(^LAB(60,TEST,0),"^"),! I $D(ORUPDMSG(3)) ZW ORUPDMSG
"RTN","LR7OV0",61,0)
 I $D(ORUPDMSG(3)) S ORUPDMSG="ORUPDMSG" D MSG^XQOR("LR7O ORDERABLE OR",.ORUPDMSG) ;Send update message
"RTN","LR7OV0",62,0)
 L -LR7OV0(TEST)
"RTN","LR7OV0",63,0)
 Q
"RTN","LR7OV0",64,0)
 ;
"RTN","LR7OV0",65,0)
ADD(TEST) ;Add single record to Master file
"RTN","LR7OV0",66,0)
 N MFICODE,MFECODE S MFECODE="MAD",MFICODE="REP" D SINGLE(TEST,MFICODE,MFECODE)
"RTN","LR7OV0",67,0)
 Q
"RTN","LR7OV0",68,0)
 ;
"RTN","LR7OV0",69,0)
DEL(TEST) ;Delete single record from Master file
"RTN","LR7OV0",70,0)
 N MFICODE,MFECODE S MFECODE="MDL",MFICODE="UPD" D SINGLE(TEST,MFICODE,MFECODE)
"RTN","LR7OV0",71,0)
 Q
"RTN","LR7OV0",72,0)
 ;
"RTN","LR7OV0",73,0)
UPD(TEST) ;Update record in Master file
"RTN","LR7OV0",74,0)
 ;Modified for patch LR*5.2*361
"RTN","LR7OV0",75,0)
 N ZTSAVE,ZTRTN,ZTDESC,ZTDTH,ZTIO
"RTN","LR7OV0",76,0)
 S ZTSAVE("TEST")=TEST
"RTN","LR7OV0",77,0)
 S ZTRTN="TUPD^LR7OV0"
"RTN","LR7OV0",78,0)
 S ZTDESC="LABORATORY TEST FILE HL7 update message"
"RTN","LR7OV0",79,0)
 S ZTDTH=$H
"RTN","LR7OV0",80,0)
 S ZTIO=""
"RTN","LR7OV0",81,0)
 D ^%ZTLOAD
"RTN","LR7OV0",82,0)
 Q
"RTN","LR7OV0",83,0)
 ;
"RTN","LR7OV0",84,0)
TUPD ;Tasked update of record in Master file
"RTN","LR7OV0",85,0)
 ;Added for patch LR*5.2*361
"RTN","LR7OV0",86,0)
 N MFICODE,MFECODE S MFECODE="MUP",MFICODE="UPD" D SINGLE(TEST,MFICODE,MFECODE)
"RTN","LR7OV0",87,0)
 Q
"RTN","LR7OV0",88,0)
 ;
"RTN","LR7OV0",89,0)
DEACT(TEST) ;Deactivate record in Master file
"RTN","LR7OV0",90,0)
 N MFICODE,MFECODE S MFECODE="MDC",MFICODE="UPD" D SINGLE(TEST,MFICODE,MFECODE)
"RTN","LR7OV0",91,0)
 Q
"RTN","LR7OV0",92,0)
 ;
"RTN","LR7OV0",93,0)
REACT(TEST) ;Reactivate record in Master file
"RTN","LR7OV0",94,0)
 N MFICODE,MFECODE S MFECODE="MAC",MFICODE="UPD" D SINGLE(TEST,MFICODE,MFECODE)
"RTN","LR7OV0",95,0)
 Q
"RTN","LR7OV0",96,0)
 ;
"RTN","LR7OV0",97,0)
 ;Following code added to support LR*5.2*357
"RTN","LR7OV0",98,0)
 ;Following code modified to support LR*5.2*361
"RTN","LR7OV0",99,0)
 ;Designed to help update the ORDERABLE ITEMS FILE (file 101.43) after the deletion
"RTN","LR7OV0",100,0)
 ;of a SYNONYM from the LABORATORY TEST file (file 60).
"RTN","LR7OV0",101,0)
UPD2(TEST,KSYN) ;Update record in Master file - Modified for LR*5.2*361
"RTN","LR7OV0",102,0)
 ;TEST = IEN of lab test in file 60
"RTN","LR7OV0",103,0)
 ;KSYN = IEN of synonym to be deleted from lab test in file 60
"RTN","LR7OV0",104,0)
 ;Modified for LR*5.2*361
"RTN","LR7OV0",105,0)
 N ZTSAVE,ZTRTN,ZTDESC,ZTDTH,ZTIO
"RTN","LR7OV0",106,0)
 S ZTSAVE("TEST")=TEST
"RTN","LR7OV0",107,0)
 S ZTSAVE("KSYN")=KSYN
"RTN","LR7OV0",108,0)
 S ZTRTN="TUPD2^LR7OV0"
"RTN","LR7OV0",109,0)
 S ZTDESC="LABORATORY TEST FILE HL7 update message"
"RTN","LR7OV0",110,0)
 S ZTDTH=$H
"RTN","LR7OV0",111,0)
 S ZTIO=""
"RTN","LR7OV0",112,0)
 D ^%ZTLOAD
"RTN","LR7OV0",113,0)
 Q
"RTN","LR7OV0",114,0)
 ;
"RTN","LR7OV0",115,0)
TUPD2 ;Update record in Master file
"RTN","LR7OV0",116,0)
 ;TEST = IEN of lab test in file 60
"RTN","LR7OV0",117,0)
 ;KSYN = IEN of synonym to be deleted from lab test in file 60
"RTN","LR7OV0",118,0)
 N MFICODE,MFECODE S MFECODE="MUP",MFICODE="UPD" D SINGLE2(TEST,KSYN,MFICODE,MFECODE)
"RTN","LR7OV0",119,0)
 Q
"RTN","LR7OV0",120,0)
 ;
"RTN","LR7OV0",121,0)
SINGLE2(TEST,KSYN,MFICODE,MFECODE) ;Message for a single test
"RTN","LR7OV0",122,0)
 ;TEST = IEN of lab test in file 60
"RTN","LR7OV0",123,0)
 ;KSYN = IEN of synonym to be deleted from lab test in file 60
"RTN","LR7OV0",124,0)
 ;MFICODE = File Level Event Code
"RTN","LR7OV0",125,0)
 ;MFECODE = Record Level Event Code
"RTN","LR7OV0",126,0)
 N X,ORUPDMSG,MSG
"RTN","LR7OV0",127,0)
 S MSG="ORUPDMSG",X=$$MSH^LR7OU0("MFN"),ORUPDMSG(1)=X
"RTN","LR7OV0",128,0)
 S X=$$MFI(MFICODE),ORUPDMSG(2)=X
"RTN","LR7OV0",129,0)
 D TEST2(TEST,KSYN,2)
"RTN","LR7OV0",130,0)
 I $D(ORUPDMSG(3)) S ORUPDMSG="ORUPDMSG" D MSG^XQOR("LR7O ORDERABLE OR",.ORUPDMSG) ;Send update message
"RTN","LR7OV0",131,0)
 Q
"RTN","LR7OV0",132,0)
 ;
"RTN","LR7OV0",133,0)
TEST2(TEST,KSYN,ICNT) ;Process single test
"RTN","LR7OV0",134,0)
 ;TEST = IEN of lab test in file 60
"RTN","LR7OV0",135,0)
 ;KSYN = IEN of synonym to be deleted from lab test in file 60
"RTN","LR7OV0",136,0)
 ;ICNT = Current counter in ORUPDMSG(ICNT)
"RTN","LR7OV0",137,0)
 N TYPE,TESTID,IFN,IFN1,CTR,CTR1,GENW,X0,S0,SAMP,MAX,DMAX,COLLECT,SAMPLE,SPEC,SYN,SUBID,COST,WCOM,Y9,Y10,Y11
"RTN","LR7OV0",138,0)
 Q:'$D(^LAB(60,TEST,0))  S X0=^(0),COST=$P(X0,"^",11),SUB=$P(X0,"^",4),TYPE=$P(X0,"^",3),CTR1=0
"RTN","LR7OV0",139,0)
 I $D(^LAB(60,TEST,6)) S (CTR,IFN)=0 F  S IFN=$O(^LAB(60,TEST,6,IFN)) Q:IFN<1  S CTR=CTR+1,GENW(CTR)=^(IFN,0)
"RTN","LR7OV0",140,0)
 S (CTR,IFN)=0 F  S IFN=$O(^LAB(60,TEST,5,IFN)) Q:IFN<1  D
"RTN","LR7OV0",141,0)
 . S:KSYN'=IFN CTR=CTR+1,SYN(CTR)=^LAB(60,TEST,5,IFN,0)
"RTN","LR7OV0",142,0)
 S (Y9,Y10,Y11)="" I $P($G(^LAB(60,TEST,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OV0",143,0)
 D
"RTN","LR7OV0",144,0)
 . S (COLLECT,SAMP,SPEC)=0,TESTID=$$UVID^LR7OU0(TEST,+SPEC,Y9,Y11,Y10,"ORUPDMSG"),ICNT=ICNT+1,ORUPDMSG(ICNT)=$$MFE(MFECODE,TESTID)
"RTN","LR7OV0",145,0)
 . S ICNT=ICNT+1,ORUPDMSG(ICNT)=$$ZLR("","",CTR1,SUB,"","",COST,TYPE)
"RTN","LR7OV0",146,0)
 . S IFN1=0 F  S IFN1=$O(^LAB(60,TEST,2,IFN1)) Q:IFN1<1  S X=^(IFN1,0) I $D(^LAB(60,+X,0)) D
"RTN","LR7OV0",147,0)
 .. N Y9,Y10,Y11 S (Y9,Y10,Y11)="" I $P($G(^LAB(60,+X,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OV0",148,0)
 .. S SUBID=$$UVID^LR7OU0($P(X,"^"),"",Y9,Y11,Y10,"ORUPDMSG"),ICNT=ICNT+1,ORUPDMSG(ICNT)="ZLC||||"_SUBID
"RTN","LR7OV0",149,0)
 . D ZSY(.SYN),NTE(.GENW,.WCOM)
"RTN","LR7OV0",150,0)
 Q
"RTN","LR7OV5")
0^182^B8563542
"RTN","LR7OV5",1,0)
LR7OV5 ;DALOI/JMC - Lab XPAR Parameter Utility;02/28/12  20:44
"RTN","LR7OV5",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LR7OV5",3,0)
 ;
"RTN","LR7OV5",4,0)
 ;
"RTN","LR7OV5",5,0)
LISTPAR ; List user-level values for a parameter
"RTN","LR7OV5",6,0)
 ;
"RTN","LR7OV5",7,0)
 N DIR,DIRUT,DDTOUT,UOUT,LN,LRENTITY,LRERR,LROUT,LRPAR,LRREF,LRXPAR,LRXPARLIST
"RTN","LR7OV5",8,0)
 ;
"RTN","LR7OV5",9,0)
 ; Select a parameter to display
"RTN","LR7OV5",10,0)
 F  D  Q:LRXPAR<0!(LRXPAR>0)
"RTN","LR7OV5",11,0)
 . K LRXPAR
"RTN","LR7OV5",12,0)
 . D GETPAR^XPAREDIT(.LRXPAR)
"RTN","LR7OV5",13,0)
 . I $E($P(LRXPAR,"^",2),1,2)?1(1"LR",1"LA") Q
"RTN","LR7OV5",14,0)
 . I LRXPAR>0 W !!,"*** Please select a PARAMETER within the Laboratory Namespace (LA/LR) ***" S LRXPAR=0
"RTN","LR7OV5",15,0)
 . E  S LRXPAR=-1
"RTN","LR7OV5",16,0)
 I LRXPAR<1 Q
"RTN","LR7OV5",17,0)
 ;
"RTN","LR7OV5",18,0)
 ; Return all parameter instances
"RTN","LR7OV5",19,0)
 D ENVAL^XPAR(.LRXPARLIST,+LRXPAR,"",.LRERR)
"RTN","LR7OV5",20,0)
 I LRERR W !,"Error encountered: "_LRERR Q
"RTN","LR7OV5",21,0)
 ;
"RTN","LR7OV5",22,0)
 ; Build list of entities allowed for this parameter
"RTN","LR7OV5",23,0)
 D BLDLST^XPAREDIT(.LRPAR,+LRXPAR)
"RTN","LR7OV5",24,0)
 ;
"RTN","LR7OV5",25,0)
 W !!,"Values for "_$P(LRXPAR,"^",2),!
"RTN","LR7OV5",26,0)
 D HEADER
"RTN","LR7OV5",27,0)
 ;
"RTN","LR7OV5",28,0)
 S LRREF="",LN=1
"RTN","LR7OV5",29,0)
 F  S LRREF=$O(LRXPARLIST(LRREF)) Q:LRREF=""  D  Q:$D(DIRUT)
"RTN","LR7OV5",30,0)
 . I $P(LRREF,";",2)'="VA(200," Q
"RTN","LR7OV5",31,0)
 . D ENTITY
"RTN","LR7OV5",32,0)
 . K LROUT
"RTN","LR7OV5",33,0)
 . D GETLST^XPAR(.LROUT,LRREF,+LRXPAR,"N",.LRERR)
"RTN","LR7OV5",34,0)
 . S LROUT=""
"RTN","LR7OV5",35,0)
 . F  S LROUT=$O(LROUT(LROUT)) Q:LROUT=""  D  Q:$D(DIRUT)
"RTN","LR7OV5",36,0)
 . . D WAIT Q:$D(DIRUT)
"RTN","LR7OV5",37,0)
 . . W !,$E(LRENTITY,1,30)
"RTN","LR7OV5",38,0)
 . . W ?31,$E(LROUT,1,20),?52,$E($P(LROUT(LROUT),"^",2),1,28)
"RTN","LR7OV5",39,0)
 ;
"RTN","LR7OV5",40,0)
 I '$D(DIRUT) S DIR("A")="Enter RETURN to continue",DIR(0)="E" D ^DIR
"RTN","LR7OV5",41,0)
 ;
"RTN","LR7OV5",42,0)
 Q
"RTN","LR7OV5",43,0)
 ;
"RTN","LR7OV5",44,0)
 ;
"RTN","LR7OV5",45,0)
 ;
"RTN","LR7OV5",46,0)
ENTITY ; Resolve entity
"RTN","LR7OV5",47,0)
 ;
"RTN","LR7OV5",48,0)
 S LRENTITY=""
"RTN","LR7OV5",49,0)
 I $P(LRREF,";",2)="VA(200," S LRENTITY="USR: "_$$NAME^XUSER(+LRREF,"F") Q
"RTN","LR7OV5",50,0)
 I $P(LRREF,";",2)="DIC(9.4," S LRENTITY="PKG: "_$$GET1^DIQ(9.4,+LRREF_",",.01) Q
"RTN","LR7OV5",51,0)
 I $P(LRREF,";",2)="DIC(4," S LRENTITY="DIV: "_$P($$NS^XUAF4(+LRREF),"^") Q
"RTN","LR7OV5",52,0)
 ;
"RTN","LR7OV5",53,0)
 I $P(LRREF,";",2)="DIC(4.2," D  Q
"RTN","LR7OV5",54,0)
 . N X
"RTN","LR7OV5",55,0)
 . S X=$G(LRPAR("P","SYS"))
"RTN","LR7OV5",56,0)
 . I X,$P(LRPAR(X),"^",6)'="" S LRENTITY="SYS: "_$P(LRPAR(X),"^",6) Q
"RTN","LR7OV5",57,0)
 . S LRENTITY="SYS: "_LRREF Q
"RTN","LR7OV5",58,0)
 ;
"RTN","LR7OV5",59,0)
 I $P(LRREF,";",2)="DIC(49," S LRENTITY="SRV: "_$$GET1^DIQ(49,+LRREF_",",.01) Q
"RTN","LR7OV5",60,0)
 I $P(LRREF,";",2)="SC(" S LRENTITY="LOC: "_$$GET1^DIQ(44,+LRREF_",",.01) Q
"RTN","LR7OV5",61,0)
 ;
"RTN","LR7OV5",62,0)
 I $P(LRREF,";",2)="SCTM(404.51," S LRENTITY="TEA: "_LRREF Q
"RTN","LR7OV5",63,0)
 I $P(LRREF,";",2)="USR(8930," S LRENTITY="CLS: "_LRREF Q
"RTN","LR7OV5",64,0)
 I $P(LRREF,";",2)="DG(405.4," S LRENTITY="BED: "_LRREF Q
"RTN","LR7OV5",65,0)
 I $P(LRREF,";",2)="OR(100.21," S LRENTITY="OTL: "_LRREF Q
"RTN","LR7OV5",66,0)
 ;
"RTN","LR7OV5",67,0)
 ; Default value if not handled.
"RTN","LR7OV5",68,0)
 S LRENTITY=LRREF
"RTN","LR7OV5",69,0)
 Q
"RTN","LR7OV5",70,0)
 ;
"RTN","LR7OV5",71,0)
 ;
"RTN","LR7OV5",72,0)
WAIT ; pause display
"RTN","LR7OV5",73,0)
 ;
"RTN","LR7OV5",74,0)
 ;
"RTN","LR7OV5",75,0)
 S LN=LN+1
"RTN","LR7OV5",76,0)
 I LN>(IOSL-4) S DIR(0)="E" D ^DIR W !! D:'$D(DIRUT) HEADER S LN=0
"RTN","LR7OV5",77,0)
 Q
"RTN","LR7OV5",78,0)
 ;
"RTN","LR7OV5",79,0)
 ;
"RTN","LR7OV5",80,0)
HEADER ;
"RTN","LR7OV5",81,0)
 W !,"Parameter",?31,"Instance",?52,"Value",!
"RTN","LR7OV5",82,0)
 W $$REPEAT^XLFSTR("-",IOM-4),!
"RTN","LR7OV5",83,0)
 Q
"RTN","LRACMOVE")
0^174^B24954137
"RTN","LRACMOVE",1,0)
LRACMOVE ;DALOI/JMC - MOVE MAJOR/MINOR HEADERS IN LAB REPORTS FILE (64.5);July 3, 2008
"RTN","LRACMOVE",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRACMOVE",3,0)
 ;
"RTN","LRACMOVE",4,0)
 ;
"RTN","LRACMOVE",5,0)
EN ; Move major and/or minor header to a new location
"RTN","LRACMOVE",6,0)
 ;
"RTN","LRACMOVE",7,0)
 N DIC,DIR,DIROUT,DIRUT,DUOUT,LRCKW,LRIEN,LRMH,LRSH,LRTYPE,X,Y
"RTN","LRACMOVE",8,0)
 ;
"RTN","LRACMOVE",9,0)
 I '$D(^XUSEC("LRLIASON",DUZ)) W $C(7),!,"You do not have access to this option" Q
"RTN","LRACMOVE",10,0)
 ;
"RTN","LRACMOVE",11,0)
 L +^LAB(64.5,0):DILOCKTM
"RTN","LRACMOVE",12,0)
 I '$T W !," This entry is being edited by someone else." Q
"RTN","LRACMOVE",13,0)
 ;
"RTN","LRACMOVE",14,0)
 S DIR(0)="SO^1:Major Header;2:Minor Header"
"RTN","LRACMOVE",15,0)
 S DIR("A")="Select type of header to move",DIR("B")=1,DIR("?")="Select the type of cumulative report header to move."
"RTN","LRACMOVE",16,0)
 D ^DIR
"RTN","LRACMOVE",17,0)
 I $D(DIRUT) D END Q
"RTN","LRACMOVE",18,0)
 ;
"RTN","LRACMOVE",19,0)
 S LRTYPE=+Y
"RTN","LRACMOVE",20,0)
 I LRTYPE=1 S LRMH=$$MAJOR
"RTN","LRACMOVE",21,0)
 ;
"RTN","LRACMOVE",22,0)
 I LRTYPE=2 D
"RTN","LRACMOVE",23,0)
 . S LRMH=$$MAJOR
"RTN","LRACMOVE",24,0)
 . I LRMH<1 Q
"RTN","LRACMOVE",25,0)
 . S LRSH=$$MINOR
"RTN","LRACMOVE",26,0)
 ;
"RTN","LRACMOVE",27,0)
 I LRMH<1 D END Q
"RTN","LRACMOVE",28,0)
 I LRTYPE=2,LRSH<1 D END Q
"RTN","LRACMOVE",29,0)
 ;
"RTN","LRACMOVE",30,0)
 D MOVETO
"RTN","LRACMOVE",31,0)
 I LRIEN<1 D END Q
"RTN","LRACMOVE",32,0)
 I LRTYPE=2,LRIEN(1)<1 D END Q
"RTN","LRACMOVE",33,0)
 ;
"RTN","LRACMOVE",34,0)
 ; Move the major/minor header to it's new destination
"RTN","LRACMOVE",35,0)
 D MOVE
"RTN","LRACMOVE",36,0)
 ;
"RTN","LRACMOVE",37,0)
 ; Reindex after move
"RTN","LRACMOVE",38,0)
 D REINDEX
"RTN","LRACMOVE",39,0)
 ;
"RTN","LRACMOVE",40,0)
 ; Run diagnostics to check for any problems introduced
"RTN","LRACMOVE",41,0)
 W !,"Run Diagnostic Report for LAB REPORTS File",!
"RTN","LRACMOVE",42,0)
 S LRCKW=0 D QUE^LRACDIAG
"RTN","LRACMOVE",43,0)
 ;
"RTN","LRACMOVE",44,0)
 D END
"RTN","LRACMOVE",45,0)
 ;
"RTN","LRACMOVE",46,0)
 Q
"RTN","LRACMOVE",47,0)
 ;
"RTN","LRACMOVE",48,0)
 ;
"RTN","LRACMOVE",49,0)
MAJOR() ; Select a major header
"RTN","LRACMOVE",50,0)
 ;
"RTN","LRACMOVE",51,0)
 N DIC
"RTN","LRACMOVE",52,0)
 S DIC(0)="AEMQZ",DIC="^LAB(64.5,1,1,"
"RTN","LRACMOVE",53,0)
 D ^DIC
"RTN","LRACMOVE",54,0)
 ;
"RTN","LRACMOVE",55,0)
 Q Y
"RTN","LRACMOVE",56,0)
 ;
"RTN","LRACMOVE",57,0)
 ;
"RTN","LRACMOVE",58,0)
MINOR() ; Select minor header within a major header
"RTN","LRACMOVE",59,0)
 ;
"RTN","LRACMOVE",60,0)
 N DIC
"RTN","LRACMOVE",61,0)
 S DIC(0)="AEMQZ",DIC="^LAB(64.5,1,1,"_+LRMH_",1,"
"RTN","LRACMOVE",62,0)
 D ^DIC
"RTN","LRACMOVE",63,0)
 ;
"RTN","LRACMOVE",64,0)
 Q Y
"RTN","LRACMOVE",65,0)
 ;
"RTN","LRACMOVE",66,0)
 ;
"RTN","LRACMOVE",67,0)
MOVETO ; Move the header to the destination location.
"RTN","LRACMOVE",68,0)
 ;
"RTN","LRACMOVE",69,0)
 N DA,DIC,DO,DINUM,DIR,DIROUT,DIRUT,DUOUT,LRMOVE,X
"RTN","LRACMOVE",70,0)
 ;
"RTN","LRACMOVE",71,0)
 I LRTYPE=1 D
"RTN","LRACMOVE",72,0)
 . S LRIEN=$$ADDIEN(LRTYPE)
"RTN","LRACMOVE",73,0)
 . I LRIEN<1 Q
"RTN","LRACMOVE",74,0)
 ;
"RTN","LRACMOVE",75,0)
 ;
"RTN","LRACMOVE",76,0)
 I LRTYPE=2 D
"RTN","LRACMOVE",77,0)
 . S LRIEN=0
"RTN","LRACMOVE",78,0)
 . S DIR(0)="SO^1:Within an existing major header;2:To a new major header"
"RTN","LRACMOVE",79,0)
 . S DIR("A")="Move minor header",DIR("B")=1
"RTN","LRACMOVE",80,0)
 . D ^DIR
"RTN","LRACMOVE",81,0)
 . I $D(DIRUT) Q
"RTN","LRACMOVE",82,0)
 . S LRMOVE=+Y
"RTN","LRACMOVE",83,0)
 . I LRMOVE=1 S LRIEN=$$MAJOR
"RTN","LRACMOVE",84,0)
 . I LRMOVE=2 S LRIEN=$$ADDIEN(1,"")
"RTN","LRACMOVE",85,0)
 . I LRIEN<1 Q
"RTN","LRACMOVE",86,0)
 . S LRIEN(1)=$$ADDIEN(LRTYPE,LRIEN)
"RTN","LRACMOVE",87,0)
 ;
"RTN","LRACMOVE",88,0)
 Q
"RTN","LRACMOVE",89,0)
 ;
"RTN","LRACMOVE",90,0)
 ;
"RTN","LRACMOVE",91,0)
ADDIEN(LRTYPE,LRIEN) ; Create new header
"RTN","LRACMOVE",92,0)
 ;
"RTN","LRACMOVE",93,0)
 N DA,DIC,DO,DINUM,LRDA,LRX,X,Y
"RTN","LRACMOVE",94,0)
 ;
"RTN","LRACMOVE",95,0)
 S DIC(0)="EZ",X="NEW HEADER"
"RTN","LRACMOVE",96,0)
 I LRTYPE=1 D
"RTN","LRACMOVE",97,0)
 . S DA(1)=1
"RTN","LRACMOVE",98,0)
 . S DIC="^LAB(64.5,1,1,",DIC("DR")=".01;5"
"RTN","LRACMOVE",99,0)
 . I $P(^LAB(64.5,1,1,+LRMH,0),"^",2)'="" S DIC("DR")=DIC("DR")_"//"_$P(^LAB(64.5,1,1,+LRMH,0),"^",2)
"RTN","LRACMOVE",100,0)
 ;
"RTN","LRACMOVE",101,0)
 I LRTYPE=2 D
"RTN","LRACMOVE",102,0)
 . S LRX=^LAB(64.5,1,1,+LRMH,1,+LRSH,0)
"RTN","LRACMOVE",103,0)
 . S DA(2)=1,DA(1)=+LRIEN
"RTN","LRACMOVE",104,0)
 . S DIC="^LAB(64.5,1,1,"_+LRIEN_",1,",DIC("DR")=".01;1////"_$P(LRX,"^",2)_";2////"_$P(LRX,"^",3)_";3////"_$P(LRX,"^",4)
"RTN","LRACMOVE",105,0)
 ;
"RTN","LRACMOVE",106,0)
 D FILE^DICN
"RTN","LRACMOVE",107,0)
 I Y>0 S LRDA=+Y_"^"_Y(0,0)
"RTN","LRACMOVE",108,0)
 E  S LRDA=Y
"RTN","LRACMOVE",109,0)
 ;
"RTN","LRACMOVE",110,0)
 Q LRDA
"RTN","LRACMOVE",111,0)
 ;
"RTN","LRACMOVE",112,0)
 ;
"RTN","LRACMOVE",113,0)
MOVE ; Move the entry to the new location, re-index the new entry and delete the old entry
"RTN","LRACMOVE",114,0)
 ;
"RTN","LRACMOVE",115,0)
 N DA,DIK
"RTN","LRACMOVE",116,0)
 ;
"RTN","LRACMOVE",117,0)
 W !!,"Copying ",$S(LRTYPE=1:"major",1:"minor")," header: ",$S(LRTYPE=1:$P(LRMH,"^",2),1:$P(LRSH,"^",2))
"RTN","LRACMOVE",118,0)
 W !," to ",$S(LRTYPE=1:"major",1:"minor")," header: ",$S(LRTYPE=1:$P(LRIEN,"^",2),1:$P(LRIEN(1),"^",2)),!
"RTN","LRACMOVE",119,0)
 I LRTYPE=2 W "  in the major header: ",$P(LRIEN,"^",2),!
"RTN","LRACMOVE",120,0)
 ;
"RTN","LRACMOVE",121,0)
 I LRTYPE=1 D
"RTN","LRACMOVE",122,0)
 . M ^LAB(64.5,1,1,+LRIEN,1)=^LAB(64.5,1,1,+LRMH,1)
"RTN","LRACMOVE",123,0)
 . S DA=+LRIEN,DA(1)=1,DIK="^LAB(64.5,1,1,"
"RTN","LRACMOVE",124,0)
 ;
"RTN","LRACMOVE",125,0)
 I LRTYPE=2 D
"RTN","LRACMOVE",126,0)
 . M ^LAB(64.5,1,1,+LRIEN,1,+LRIEN(1),1)=^LAB(64.5,1,1,+LRMH,1,+LRSH,1)
"RTN","LRACMOVE",127,0)
 . S DA=+LRIEN(1),DA(1)=+LRIEN,DA(2)=1,DIK="LAB(64.5,1,1,"_+LRIEN_",1,"
"RTN","LRACMOVE",128,0)
 ;
"RTN","LRACMOVE",129,0)
 ; Re-index the new entry
"RTN","LRACMOVE",130,0)
 W !,"Re-indexing new ",$S(LRTYPE=1:"major",1:"minor")," header: ",$S(LRTYPE=1:$P(LRIEN,"^",2),1:$P(LRIEN(1),"^",2)),!
"RTN","LRACMOVE",131,0)
 D IX1^DIK
"RTN","LRACMOVE",132,0)
 ;
"RTN","LRACMOVE",133,0)
 ; Delete the old entry
"RTN","LRACMOVE",134,0)
 W !,"Deleting ",$S(LRTYPE=1:"major",1:"minor")," header: ",$S(LRTYPE=1:$P(LRMH,"^",2),1:$P(LRSH,"^",2)),!
"RTN","LRACMOVE",135,0)
 K DA,DIK
"RTN","LRACMOVE",136,0)
 S DA=$S(LRTYPE=1:+LRMH,1:+LRSH)
"RTN","LRACMOVE",137,0)
 S DIK="^LAB(64.5,1,1,",DA(1)=1
"RTN","LRACMOVE",138,0)
 I LRTYPE=2 S DIK=DIK_+LRMH_",1,",DA(1)=+LRMH,DA(2)=1
"RTN","LRACMOVE",139,0)
 D ^DIK
"RTN","LRACMOVE",140,0)
 ;
"RTN","LRACMOVE",141,0)
 Q
"RTN","LRACMOVE",142,0)
 ;
"RTN","LRACMOVE",143,0)
 ;
"RTN","LRACMOVE",144,0)
REINDEX ; Reindex headers after they have been moved.
"RTN","LRACMOVE",145,0)
 N I,LR
"RTN","LRACMOVE",146,0)
 S LR(1)=1,LR(2)=1,LR(3)=1
"RTN","LRACMOVE",147,0)
 F I="A","AC","AR" K ^LAB(64.5,I)
"RTN","LRACMOVE",148,0)
 ;
"RTN","LRACMOVE",149,0)
 W !!,"Re-indexing the LAB REPORTS file for:"
"RTN","LRACMOVE",150,0)
 W !,"Mumps ""A"" index of the LAB TEST subfield",!?4,"(contains reference ranges, units, etc. from file 60)"
"RTN","LRACMOVE",151,0)
 W !,"Mumps ""AC"" index of the LAB TEST LOCATION subfield",!?4,"(atomic test x-ref.)"
"RTN","LRACMOVE",152,0)
 W !,"Mumps ""AR"" index of the LAB TEST subfield",!?4,"(site/specimen x-ref.)"
"RTN","LRACMOVE",153,0)
 ;
"RTN","LRACMOVE",154,0)
 D MAJ^LRACDIAG
"RTN","LRACMOVE",155,0)
 Q
"RTN","LRACMOVE",156,0)
 ;
"RTN","LRACMOVE",157,0)
 ;
"RTN","LRACMOVE",158,0)
END ; Release lock
"RTN","LRACMOVE",159,0)
 L -^LAB(64.5,0)
"RTN","LRACMOVE",160,0)
 Q
"RTN","LRAP")
0^54^B24889097
"RTN","LRAP",1,0)
LRAP ;DALOI/STAFF - ANATOMIC PATH UTILITY ;Oct 8, 2008
"RTN","LRAP",2,0)
 ;;5.2;LAB SERVICE;**72,248,259,350**;Sep 27, 1994;Build 230
"RTN","LRAP",3,0)
 ;
"RTN","LRAP",4,0)
 ; Called by many routines in AP package
"RTN","LRAP",5,0)
 D END,CK G:Y=-1 END D LRDICS G:Y B
"RTN","LRAP",6,0)
 S DIC=68,DIC(0)="AEOQMZ"
"RTN","LRAP",7,0)
 S DIC("A")="Select ANATOMIC PATHOLOGY SECTION: "
"RTN","LRAP",8,0)
 S DIC("S")="I LRDICS[$P(^(0),U,2),$P(^(0),U,2)]"""",$G(^(3,DUZ(2),0))"
"RTN","LRAP",9,0)
 D ^DIC
"RTN","LRAP",10,0)
 K DIC,LRDICS
"RTN","LRAP",11,0)
 G:Y<1 END
"RTN","LRAP",12,0)
 ;
"RTN","LRAP",13,0)
B ;
"RTN","LRAP",14,0)
 S X=$P(Y,U,2) D ^LRUTL G:Y=-1 END
"RTN","LRAP",15,0)
 Q
"RTN","LRAP",16,0)
 ;
"RTN","LRAP",17,0)
 ;
"RTN","LRAP",18,0)
AU ; log-in autopsy
"RTN","LRAP",19,0)
 Q  ;see routine LRAUAW
"RTN","LRAP",20,0)
 ;
"RTN","LRAP",21,0)
 ;
"RTN","LRAP",22,0)
CY ; log-in cytopath
"RTN","LRAP",23,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",24,0)
 ;
"RTN","LRAP",25,0)
 D GETDEF
"RTN","LRAP",26,0)
 ;
"RTN","LRAP",27,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",28,0)
 S DR=DR_";.07;D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW"
"RTN","LRAP",29,0)
 S DR=DR_";S LRRC=X;.02;.99;S LRC(5)=X;1"
"RTN","LRAP",30,0)
 S DR(2,63.902)=".01;S LR(63.902)=X;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",31,0)
 S DR(2,63.902)=DR(2,63.902)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U);S:'LRCAPA Y=""@2"";.02;@2"
"RTN","LRAP",32,0)
 Q
"RTN","LRAP",33,0)
 ;
"RTN","LRAP",34,0)
 ;
"RTN","LRAP",35,0)
EM ; log-in electron microscopy
"RTN","LRAP",36,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",37,0)
 ;
"RTN","LRAP",38,0)
 D GETDEF
"RTN","LRAP",39,0)
 ;
"RTN","LRAP",40,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",41,0)
 S DR=DR_";.07;D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW;S LRRC=X"
"RTN","LRAP",42,0)
 S DR=DR_";.02;.021;.99;S LRC(5)=X"
"RTN","LRAP",43,0)
 S DR(2,63.202)=".01;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",44,0)
 S DR(2,63.202)=DR(2,63.202)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U)"
"RTN","LRAP",45,0)
 Q
"RTN","LRAP",46,0)
 ;
"RTN","LRAP",47,0)
 ;
"RTN","LRAP",48,0)
SP ; log-in surg path
"RTN","LRAP",49,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",50,0)
 S LR("FS")=+$G(^LAB(69.9,1,11))
"RTN","LRAP",51,0)
 ;
"RTN","LRAP",52,0)
 D GETDEF
"RTN","LRAP",53,0)
 ;
"RTN","LRAP",54,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",55,0)
 S DR=DR_";.07//^S X=LR(.07);D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW"
"RTN","LRAP",56,0)
 S DR=DR_";S LRRC=X;.02;.99;S LRC(5)=X;S:'LR(""FS"") Y=""@1"";1.3;@1"
"RTN","LRAP",57,0)
 S DR(2,63.812)=".01;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",58,0)
 S DR(2,63.812)=DR(2,63.812)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U)"
"RTN","LRAP",59,0)
 ;
"RTN","LRAP",60,0)
 S:LRABV'["SP" LR("FS")=""
"RTN","LRAP",61,0)
 Q
"RTN","LRAP",62,0)
 ;
"RTN","LRAP",63,0)
 ;
"RTN","LRAP",64,0)
M ; edit path report parameters
"RTN","LRAP",65,0)
 W !
"RTN","LRAP",66,0)
 S DIC="^LRO(69.2,",DIC(0)="AEOQM"
"RTN","LRAP",67,0)
 S DIC("S")="I ""AUCYEMSP""[$P(^(0),U,2)&($P(^(0),U,2)]"""")"
"RTN","LRAP",68,0)
 D ^DIC K DIC G:Y<1 END S DA=+Y
"RTN","LRAP",69,0)
 L +^LRO(69.2,DA):5 I '$T D  G M
"RTN","LRAP",70,0)
 . S MSG="This entry is locked by another user.  Please try again later."
"RTN","LRAP",71,0)
 . D EN^DDIOL(MSG,"","!!") K MSG,DIE,DR,DA
"RTN","LRAP",72,0)
 . D END
"RTN","LRAP",73,0)
 S DR="[LRAPHDR]",DIE="^LRO(69.2,"
"RTN","LRAP",74,0)
 D ^DIE
"RTN","LRAP",75,0)
 L -^LRO(69.2,DA)
"RTN","LRAP",76,0)
 K DIE,DR,DA
"RTN","LRAP",77,0)
 G M
"RTN","LRAP",78,0)
 ;
"RTN","LRAP",79,0)
 ;
"RTN","LRAP",80,0)
D ; Edit path descriptions
"RTN","LRAP",81,0)
 W ! S DIC="^LAB(62.5,",DIC(0)="AEQLM"
"RTN","LRAP",82,0)
 S DLAYGO=62.5,DIC("S")="I ""ESCI""[$P(^(0),U,4)"
"RTN","LRAP",83,0)
 D ^DIC K DIC,DLAYGO G:X=""!(X[U) END S DA=+Y
"RTN","LRAP",84,0)
 S DIE("NO^")="",DIE="^LAB(62.5,"
"RTN","LRAP",85,0)
 L +^LAB(62.5,DA):5 I '$T D  G D
"RTN","LRAP",86,0)
 . S MSG="This entry is locked by another user.  Please try again later."
"RTN","LRAP",87,0)
 . D EN^DDIOL(MSG,"","!!") K MSG,DIE,DR,DA
"RTN","LRAP",88,0)
 . D END
"RTN","LRAP",89,0)
 S DR=".01;1;5;I ""ESCI""'[X W $C(7),!,""Enter E, S, C, or I"" S Y=5;10"
"RTN","LRAP",90,0)
 D ^DIE
"RTN","LRAP",91,0)
 L -^LAB(62.5,DA)
"RTN","LRAP",92,0)
 K DIE,DR,DA
"RTN","LRAP",93,0)
 G D
"RTN","LRAP",94,0)
 ;
"RTN","LRAP",95,0)
 ;
"RTN","LRAP",96,0)
V ; input transform DD(63.08,.11,0)
"RTN","LRAP",97,0)
 I $D(LRH(2)),LRH(2)'=$E(X,1,3) K X W !,"Year received must be same as log-in year (",LRH(2)+1700,") "
"RTN","LRAP",98,0)
 Q
"RTN","LRAP",99,0)
 ;
"RTN","LRAP",100,0)
 ;
"RTN","LRAP",101,0)
CK ;
"RTN","LRAP",102,0)
 S Y=1
"RTN","LRAP",103,0)
 I '$D(DUZ(2)) D  Q
"RTN","LRAP",104,0)
 . W !,$C(7)," Something is wrong..."
"RTN","LRAP",105,0)
 . W !!,"I can't tell if you're really here..."
"RTN","LRAP",106,0)
 . W !!,"Ask your IRM why you don't have a DUZ(2) variable defined!",!
"RTN","LRAP",107,0)
 . S Y=-1
"RTN","LRAP",108,0)
 ;
"RTN","LRAP",109,0)
 S LRAA(4)=$P($G(^DIC(4,+DUZ(2),0)),U)
"RTN","LRAP",110,0)
 I LRAA(4)="" D  Q
"RTN","LRAP",111,0)
 . W $C(7),!!,"I can't tell what DIVISION you are from.  Contact your IRM "
"RTN","LRAP",112,0)
 . S Y=-1
"RTN","LRAP",113,0)
 Q
"RTN","LRAP",114,0)
 ;
"RTN","LRAP",115,0)
 ;
"RTN","LRAP",116,0)
LRDICS ;
"RTN","LRAP",117,0)
 S Y=0,X=$G(LRDICS)
"RTN","LRAP",118,0)
 I $L(X)=2,"SPCYEMAU"[X D C I Y K LRDICS Q
"RTN","LRAP",119,0)
 S LRDICS=$S($L($G(LRDICS)):LRDICS,1:"SPCYEMAU")
"RTN","LRAP",120,0)
 Q
"RTN","LRAP",121,0)
 ;
"RTN","LRAP",122,0)
 ;
"RTN","LRAP",123,0)
C ;
"RTN","LRAP",124,0)
 I $D(LRDICS(2)) G CC
"RTN","LRAP",125,0)
 S (A,B)=0
"RTN","LRAP",126,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)=LRDICS,$G(^(3,DUZ(2),0)) S B=B+1,B(B)=A
"RTN","LRAP",127,0)
 I B=1 S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B Q
"RTN","LRAP",128,0)
 I B>1,$D(LRDICS(1)) S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B
"RTN","LRAP",129,0)
 Q
"RTN","LRAP",130,0)
 ;
"RTN","LRAP",131,0)
 ;
"RTN","LRAP",132,0)
CC ;
"RTN","LRAP",133,0)
 S (A,B)=0
"RTN","LRAP",134,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)=LRDICS S B=B+1,B(B)=A Q
"RTN","LRAP",135,0)
 I B=1 S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B
"RTN","LRAP",136,0)
 Q
"RTN","LRAP",137,0)
 ;
"RTN","LRAP",138,0)
 ;
"RTN","LRAP",139,0)
END ;
"RTN","LRAP",140,0)
 D V^LRU
"RTN","LRAP",141,0)
 Q
"RTN","LRAP",142,0)
 ;
"RTN","LRAP",143,0)
 ;
"RTN","LRAP",144,0)
GETDEF ; Get defaults for specimen login
"RTN","LRAP",145,0)
 ;
"RTN","LRAP",146,0)
 ; Default values for collection sample/specimen and lab test
"RTN","LRAP",147,0)
 ;
"RTN","LRAP",148,0)
 N X
"RTN","LRAP",149,0)
 ;
"RTN","LRAP",150,0)
 ; Default value for collection sample
"RTN","LRAP",151,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT COL SAMP","`"_LRAA,"B")
"RTN","LRAP",152,0)
 S LRSAMP=$P(X,"^"),LRSAMP(0)=$P(X,"^",2)
"RTN","LRAP",153,0)
 ;
"RTN","LRAP",154,0)
 ; Default value for specimen(topography)
"RTN","LRAP",155,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT SPECIMEN","`"_LRAA,"B")
"RTN","LRAP",156,0)
 S LRSPTOP=$P(X,"^"),LRSPTOP(0)=$P(X,"^",2)
"RTN","LRAP",157,0)
 ;
"RTN","LRAP",158,0)
 ; Default value for laboratory test
"RTN","LRAP",159,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT LAB TEST","`"_LRAA,"B")
"RTN","LRAP",160,0)
 S LRTST=$P(X,"^"),LRTST(0)=$P(X,"^",2)
"RTN","LRAP",161,0)
 ;
"RTN","LRAP",162,0)
 Q
"RTN","LRAPALRT")
0^179^B7865668
"RTN","LRAPALRT",1,0)
LRAPALRT ;DALOI/CKA - SEND AN AP ALERT AFTER THE REPORT HAS BEEN RELEASED ;02/14/11  15:30
"RTN","LRAPALRT",2,0)
 ;;5.2;LAB SERVICE;**365,315,350**;Sep 27, 1994;Build 230
"RTN","LRAPALRT",3,0)
 ;
"RTN","LRAPALRT",4,0)
 ;
"RTN","LRAPALRT",5,0)
EN ; Entry point to send/resend an AP alert to additional recipients
"RTN","LRAPALRT",6,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRA,LRAC,LRADL,LRAU,LRDATA,LRDFN,LRH,LRI,LRIDT,LRJ,LRMSG,LREND,LRMANDO,LRMORE,LRQUIT,LRIENS,LRSF,LRSS,LRXQA,LRZ,XQA,Y
"RTN","LRAPALRT",7,0)
 S LRQUIT=0
"RTN","LRAPALRT",8,0)
 D SECTION^LRAPRES
"RTN","LRAPALRT",9,0)
 I LRQUIT D END Q
"RTN","LRAPALRT",10,0)
 D ACCYR^LRAPRES
"RTN","LRAPALRT",11,0)
 I LRQUIT D END Q
"RTN","LRAPALRT",12,0)
 D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPALRT",13,0)
 I LRDATA<1 S LRQUIT=1
"RTN","LRAPALRT",14,0)
 I LRQUIT D END Q
"RTN","LRAPALRT",15,0)
 ;
"RTN","LRAPALRT",16,0)
 ; CPRS alerts only sent for "patients" related to PATIENT file (#2)
"RTN","LRAPALRT",17,0)
 I $P($G(^LR(LRDFN,0)),"^",2)'=2 D  Q
"RTN","LRAPALRT",18,0)
 . K DIR,DIRUT,DTOUT,DUOUT
"RTN","LRAPALRT",19,0)
 . S DIR(0)="E"
"RTN","LRAPALRT",20,0)
 . S DIR("A",1)="CPRS does not support alerts for non-PATIENT file (#2) patients."
"RTN","LRAPALRT",21,0)
 . S DIR("A")="Press any key to continue"
"RTN","LRAPALRT",22,0)
 . D ^DIR
"RTN","LRAPALRT",23,0)
 ;
"RTN","LRAPALRT",24,0)
 I 'LRAU D
"RTN","LRAPALRT",25,0)
 . S LRDFN=LRDATA,LRI=LRDATA(1)
"RTN","LRAPALRT",26,0)
 . S LRA=^LR(LRDFN,LRSS,LRI,0),LRZ(2)=$P(LRA,"^",11),LRAC=$P(LRA,"^",6)
"RTN","LRAPALRT",27,0)
 . I 'LRZ(2) D
"RTN","LRAPALRT",28,0)
 . . D EN^DDIOL($C(7)_"Report has not been released.  An alert cannot be sent.","","!!")
"RTN","LRAPALRT",29,0)
 . . S LRQUIT=1 Q
"RTN","LRAPALRT",30,0)
 ;
"RTN","LRAPALRT",31,0)
 I LRQUIT D END Q
"RTN","LRAPALRT",32,0)
 ;
"RTN","LRAPALRT",33,0)
 I LRAU D
"RTN","LRAPALRT",34,0)
 . S LRDFN=LRDATA
"RTN","LRAPALRT",35,0)
 . I $G(^LR(LRDFN,"AU"))="" D  Q
"RTN","LRAPALRT",36,0)
 . . D EN^DDIOL("No information found for this accession in the LAB DATA file (#63).","","!!")
"RTN","LRAPALRT",37,0)
 . . S LRQUIT=1 Q
"RTN","LRAPALRT",38,0)
 . S LRZ=$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPALRT",39,0)
 . I 'LRZ D
"RTN","LRAPALRT",40,0)
 . . D EN^DDIOL($C(7)_"Report has not been released.  An alert cannot be sent.","","!!")
"RTN","LRAPALRT",41,0)
 . . S LRQUIT=1 Q
"RTN","LRAPALRT",42,0)
 . S LRA=^LR(LRDFN,"AU"),LRI=$P(LRA,U),LRAC=$P(LRA,"^",6)
"RTN","LRAPALRT",43,0)
 I LRQUIT D END Q
"RTN","LRAPALRT",44,0)
 ;
"RTN","LRAPALRT",45,0)
 K DIR
"RTN","LRAPALRT",46,0)
 S DIR(0)="YO",DIR("A")="Include previous mandatory recipients",DIR("B")="YES"
"RTN","LRAPALRT",47,0)
 D ^DIR
"RTN","LRAPALRT",48,0)
 I $D(DIRUT) D END Q
"RTN","LRAPALRT",49,0)
 ;
"RTN","LRAPALRT",50,0)
 S LRMANDO=+Y
"RTN","LRAPALRT",51,0)
 I LRMANDO D
"RTN","LRAPALRT",52,0)
 . N LRC,LRDOCS
"RTN","LRAPALRT",53,0)
 . D GETDOCS^LRAPUTL(.LRDOCS,LRDFN,LRSS,LRIDT,LRSF)
"RTN","LRAPALRT",54,0)
 . S LRC=0
"RTN","LRAPALRT",55,0)
 . F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  D
"RTN","LRAPALRT",56,0)
 . . I $D(XQA(+LRDOCS(LRC))) S XQA(+LRDOCS(LRC))=XQA(+LRDOCS(LRC))_"/"_$P(LRDOCS(LRC),"^",3) Q
"RTN","LRAPALRT",57,0)
 . . S XQA(+LRDOCS(LRC))=$P(LRDOCS(LRC),"^",3)
"RTN","LRAPALRT",58,0)
 ;
"RTN","LRAPALRT",59,0)
 D MORE^LRAPRES1
"RTN","LRAPALRT",60,0)
 I LRMORE D LOOKUP^LRAPRES1
"RTN","LRAPALRT",61,0)
 ;
"RTN","LRAPALRT",62,0)
 I $D(XQA) D
"RTN","LRAPALRT",63,0)
 . K DIR
"RTN","LRAPALRT",64,0)
 . S LRJ=0 D CHELP^LRAPRES1
"RTN","LRAPALRT",65,0)
 . S DIR(0)="YO",DIR("A")="Send Alert",DIR("B")="YES"
"RTN","LRAPALRT",66,0)
 . D ^DIR
"RTN","LRAPALRT",67,0)
 . I Y=1 S LRI=LRIDT D ALERT^LRAPRES1
"RTN","LRAPALRT",68,0)
 ;
"RTN","LRAPALRT",69,0)
END D END^LRAPRES
"RTN","LRAPALRT",70,0)
 Q
"RTN","LRAPBK")
0^124^B72642436
"RTN","LRAPBK",1,0)
LRAPBK ;DALOI/STAFF - AP LOG BOOK ;08/29/11  13:58
"RTN","LRAPBK",2,0)
 ;;5.2;LAB SERVICE;**51,72,201,274,350**;Sep 27, 1994;Build 230
"RTN","LRAPBK",3,0)
 ;
"RTN","LRAPBK",4,0)
 ; Reference to PXAPIOE supported by ICR #1541
"RTN","LRAPBK",5,0)
 ;
"RTN","LRAPBK",6,0)
 ; The code for functionality of LR*5.2*51 has changed with patch 72.
"RTN","LRAPBK",7,0)
 ; The functionality that came with LR*5.2*51 remains the same.
"RTN","LRAPBK",8,0)
 ;
"RTN","LRAPBK",9,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRAPBK",10,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRAPBK",11,0)
 ;
"RTN","LRAPBK",12,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRB
"RTN","LRAPBK",13,0)
 D ^LRAP G:'$D(Y) END D XR^LRU
"RTN","LRAPBK",14,0)
 W !!?20,LRO(68)," LOG BOOK"
"RTN","LRAPBK",15,0)
 ;
"RTN","LRAPBK",16,0)
 S DIR(0)="SO^0:No;1:Yes;2:Only Topography and Morphology Codes",DIR("A")="Print SNOMED codes",DIR("B")="No"
"RTN","LRAPBK",17,0)
 D ^DIR
"RTN","LRAPBK",18,0)
 I $D(DIRUT) D END Q
"RTN","LRAPBK",19,0)
 S LRB=Y
"RTN","LRAPBK",20,0)
 ;
"RTN","LRAPBK",21,0)
 K DIR
"RTN","LRAPBK",22,0)
 S DIR(0)="Y",DIR("A")="Print Single Accession",DIR("B")="NO"
"RTN","LRAPBK",23,0)
 D ^DIR
"RTN","LRAPBK",24,0)
 I $D(DIRUT) Q
"RTN","LRAPBK",25,0)
 I Y=1 D ACC Q
"RTN","LRAPBK",26,0)
 ;
"RTN","LRAPBK",27,0)
 S LRH(2)=$E(DT,1,3),LRH(0)=$$FMTE^XLFDT(LRH(2)_"0000","D")
"RTN","LRAPBK",28,0)
 ;
"RTN","LRAPBK",29,0)
 K DIR
"RTN","LRAPBK",30,0)
 S DIR(0)="DO^::AEP^",DIR("A")="Select Log Book Year",DIR("B")=LRH(0)
"RTN","LRAPBK",31,0)
 F  D  Q:$D(DIRUT)!($G(LRH(0)))
"RTN","LRAPBK",32,0)
 . D ^DIR
"RTN","LRAPBK",33,0)
 . I $D(DIRUT) Q
"RTN","LRAPBK",34,0)
 . S LRH(2)=$E(Y,1,3),LRH(0)=$$FMTE^XLFDT(LRH(2)_"0000","D")
"RTN","LRAPBK",35,0)
 . I '$D(^LR(LRXREF,LRH(2),LRABV)) W $C(7),"   No entries for ",LRH(0) K LRH(0) Q
"RTN","LRAPBK",36,0)
 I $D(DIRUT) D END Q
"RTN","LRAPBK",37,0)
 ;
"RTN","LRAPBK",38,0)
 ;
"RTN","LRAPBK",39,0)
N1 R !,"Start with Acc #: ",X:DTIME G:X=""!(X[U) END I X'?1N.N W $C(7),!!,"NUMBERS ONLY !!" G N1
"RTN","LRAPBK",40,0)
 S LRN(1)=X
"RTN","LRAPBK",41,0)
 ;
"RTN","LRAPBK",42,0)
 ;
"RTN","LRAPBK",43,0)
N2 R !,"Go    to   Acc #: LAST // ",X:DTIME G:X='$T!(X[U) END S:X="" X=999999 I X'?1N.N W $C(7),!!,"NUMBERS ONLY !!",!! G N2
"RTN","LRAPBK",44,0)
 ;
"RTN","LRAPBK",45,0)
 S LRN(2)=X,ZTRTN="QUE^LRAPBK",ZTDESC="Anatomic Path Log Book",ZTSAVE("LR*")="" D BEG^LRUTL G:POP!($D(ZTSK)) END
"RTN","LRAPBK",46,0)
 ;
"RTN","LRAPBK",47,0)
 ;
"RTN","LRAPBK",48,0)
QUE ; Print the log book
"RTN","LRAPBK",49,0)
 N LRPSNM
"RTN","LRAPBK",50,0)
 ; Flag to indicate which SNOMED system to print
"RTN","LRAPBK",51,0)
 S LRPSNM=$$GET^XPAR("DIV^PKG","LR AP SNOMED SYSTEM PRINT",1,"Q")
"RTN","LRAPBK",52,0)
 I LRPSNM<1 S LRPSNM=2
"RTN","LRAPBK",53,0)
 ;
"RTN","LRAPBK",54,0)
 U IO D L^LRU,S^LRU S P(9)="",LRW=LRH(2)_"0000" D H S LR("F")=1
"RTN","LRAPBK",55,0)
 S LRAN=LRN(1)-1
"RTN","LRAPBK",56,0)
 F  S LRAN=$O(^LR(LRXREF,LRH(2),LRABV,LRAN)) Q:'LRAN!(LRAN>LRN(2))!(LR("Q"))  D SH
"RTN","LRAPBK",57,0)
 W:IOST'?1"C".E @IOF
"RTN","LRAPBK",58,0)
 D END^LRUTL,END
"RTN","LRAPBK",59,0)
 Q
"RTN","LRAPBK",60,0)
 ;
"RTN","LRAPBK",61,0)
 ;
"RTN","LRAPBK",62,0)
ACC ; Print log book entry for a single accession
"RTN","LRAPBK",63,0)
 ;  Called from above.
"RTN","LRAPBK",64,0)
 N DFN,LR,LRAA,LRABV,LRACC,LRAD,LRAN,LRAX,LRBSAV,LRCAPA,LRDFN,LRDPAF,LRDPF,LREND,LRH,LRIDIV,LRIDT,LRO,LRSCR,LRSF,LRT,LRU,LRVBY,LRWHO,X,Y
"RTN","LRAPBK",65,0)
 ;
"RTN","LRAPBK",66,0)
 S LRSCR=LRSS,LRBSAV=LRB
"RTN","LRAPBK",67,0)
 F  D  Q:LREND!LRSTOP
"RTN","LRAPBK",68,0)
 . S LRACC="",(LREND,LRSTOP,LRVBY)=0,LRB=LRBSAV
"RTN","LRAPBK",69,0)
 . D ENA^LRWU4(LRSCR)
"RTN","LRAPBK",70,0)
 . I LRAN<1 S LREND=1 Q
"RTN","LRAPBK",71,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"Doesn't exist." Q
"RTN","LRAPBK",72,0)
 . K LRDFN,LRDPF,LRIDT,LRSS
"RTN","LRAPBK",73,0)
 . S LRSS=$P(^LRO(68,LRAA,0),"^",2),LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^"),LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRAPBK",74,0)
 . I LRSS=""!(LRIDT<1)!(LRDFN<1) W !,"Incomplete accession - unable to identify results." Q
"RTN","LRAPBK",75,0)
 . I LRSS'?1(1"SP",1"CY",1"EM",1"AU") W !,"This option only supports SP, CY, EM and AU subscripted accessions." Q
"RTN","LRAPBK",76,0)
 . D ACCB
"RTN","LRAPBK",77,0)
 ;
"RTN","LRAPBK",78,0)
 D END^LRUTL,END
"RTN","LRAPBK",79,0)
 Q
"RTN","LRAPBK",80,0)
 ;
"RTN","LRAPBK",81,0)
 ;
"RTN","LRAPBK",82,0)
ACCB ; Build variables for printing.
"RTN","LRAPBK",83,0)
 ;
"RTN","LRAPBK",84,0)
 N LREND,LRSINGLE,LRSTOP,LRX
"RTN","LRAPBK",85,0)
 S LRX=^LRO(68,LRAA,0)
"RTN","LRAPBK",86,0)
 S (LRO(68),LRAA(1))=$P(LRX,U),LRAA(2)=LRSS,LRABV=$P(LRX,U,11)
"RTN","LRAPBK",87,0)
 S LRACC=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")
"RTN","LRAPBK",88,0)
 ;
"RTN","LRAPBK",89,0)
 S X=^DIC(4,DUZ(2),0),LRAA(4)=$P(X,"^"),LRAA(5)=$E($P($G(^(1)),"^",3),1,30),X=+$P(X,"^",2),LRAA(6)=$P($G(^DIC(5,X,0)),"^",2)
"RTN","LRAPBK",90,0)
 ;
"RTN","LRAPBK",91,0)
 S LRH(2)=$E(LRAD,1,3),LRH(0)=LRH(2)+1700
"RTN","LRAPBK",92,0)
 S (LRN(1),LRN(2))=LRAN
"RTN","LRAPBK",93,0)
 D XR^LRU
"RTN","LRAPBK",94,0)
 ;
"RTN","LRAPBK",95,0)
 S (LREND,LRSTOP)=0,LRSINGLE=1
"RTN","LRAPBK",96,0)
 S %ZIS="Q",ZTSAVE("DFN")="",ZTSAVE("LR*")="",ZTRTN="QUE^LRAPBK"
"RTN","LRAPBK",97,0)
 D IO^LRWU
"RTN","LRAPBK",98,0)
 Q
"RTN","LRAPBK",99,0)
 ;
"RTN","LRAPBK",100,0)
 ;
"RTN","LRAPBK",101,0)
SH ;
"RTN","LRAPBK",102,0)
 N LRX
"RTN","LRAPBK",103,0)
 S P(13)="",LRDFN=$O(^LR(LRXREF,LRH(2),LRABV,LRAN,0)) Q:'LRDFN!(LR("Q"))  I "SPCYEM"[LRSS S LRI=$O(^(LRDFN,0)) Q:'LRI
"RTN","LRAPBK",104,0)
 D:$Y>(IOSL-6) H Q:LR("Q")
"RTN","LRAPBK",105,0)
 K LRDPF,LRLLOC
"RTN","LRAPBK",106,0)
 D PT^LRX
"RTN","LRAPBK",107,0)
 I $G(LREND) K LREND Q
"RTN","LRAPBK",108,0)
 ;
"RTN","LRAPBK",109,0)
 S LRP=PNM,P(0)=$S(LRDPF=2:"PATIENT",1:"OTHER")
"RTN","LRAPBK",110,0)
 ;
"RTN","LRAPBK",111,0)
 I "SPCYEM"[LRSS Q:'$D(^LR(LRDFN,LRSS,LRI,0))  D
"RTN","LRAPBK",112,0)
 . S (LRX(0),X)=^LR(LRDFN,LRSS,LRI,0),LRX("ORU")=$G(^LR(LRDFN,LRSS,LRI,"ORU"))
"RTN","LRAPBK",113,0)
 . S LRLLOC=$P(X,U,8),Y=$P(X,U,7) D S
"RTN","LRAPBK",114,0)
 . S P(2)=Y,Y=$P(X,U,2) D S
"RTN","LRAPBK",115,0)
 . S P(1)=$E(Y,1,12),Y=$P(X,U,13) D S
"RTN","LRAPBK",116,0)
 . S P(13)=Y,LRSPDT=$$FMTE^XLFDT(($P(X,U,1)),"1M"),X=$P(X,U,10)
"RTN","LRAPBK",117,0)
 ;
"RTN","LRAPBK",118,0)
 I LRSS="AU" Q:'$D(^LR(LRDFN,"AU"))  D
"RTN","LRAPBK",119,0)
 . S (LRX(0),X)=^LR(LRDFN,"AU"),LRX("ORU")=$G(^LR(LRDFN,"AU","ORU"))
"RTN","LRAPBK",120,0)
 . S LRLLOC=$P(X,U,5),Y=$P(X,U,12) D S
"RTN","LRAPBK",121,0)
 . S P(2)=Y,Y=$P(X,U,7) D S
"RTN","LRAPBK",122,0)
 . S P(9)=$E(Y,1,15),Y=$P(X,U,2) D S
"RTN","LRAPBK",123,0)
 . S LR("ASST")=Y,Y=$P(X,U,10) D S
"RTN","LRAPBK",124,0)
 . S P(1)=$E(Y,1,12),X=+X
"RTN","LRAPBK",125,0)
 ;
"RTN","LRAPBK",126,0)
 S T=$$FMTE^XLFDT(X,"1P") S T=$P(T,",",1) S T=$TR(T," ","/")
"RTN","LRAPBK",127,0)
 W !,$J(T,6),?7,$J(LRAN,5),?14 W:P(0)'="PATIENT" "#"
"RTN","LRAPBK",128,0)
 W $E(LRP,1,18),?34,SSN(1),?40,$E(LRLLOC,1,8),?49,$E(P(2),1,16),?67,P(1),!?5,"Patient ID: ",SSN
"RTN","LRAPBK",129,0)
 S LRLLOC("TY")=$P($G(^LRO(68,LRAA,1,LRH(2)_"0000",1,LRAN,0)),U,11)
"RTN","LRAPBK",130,0)
 S LRLLOC("TY")=$S(LRLLOC("TY")="":"InPatient","WI"[LRLLOC("TY"):"InPatient",1:"OutPatient")
"RTN","LRAPBK",131,0)
 W !?5,LRLLOC("TY")
"RTN","LRAPBK",132,0)
 ;
"RTN","LRAPBK",133,0)
 W ?29,"Accession [UID]: "_$P(LRX(0),"^",6)_" ["_$P(LRX("ORU"),"^")_"]"
"RTN","LRAPBK",134,0)
 ;
"RTN","LRAPBK",135,0)
 I $G(^LRO(68,LRAA,1,LRH(2)_"0000",1,LRAN,"PCE")) D
"RTN","LRAPBK",136,0)
 . N IEN,LRENC,LRSTR,LRX,LRY,X,Y
"RTN","LRAPBK",137,0)
 . S LRSTR=^LRO(68,LRAA,1,LRH(2)_"0000",1,LRAN,"PCE")
"RTN","LRAPBK",138,0)
 . F IEN=1:1 S LRX=$P(LRSTR,";",IEN) Q:'LRX  D
"RTN","LRAPBK",139,0)
 . . K LRY
"RTN","LRAPBK",140,0)
 . . D GETCPT^PXAPIOE(LRX,"LRY","ERR")
"RTN","LRAPBK",141,0)
 . . S LRY=0
"RTN","LRAPBK",142,0)
 . . F  S LRY=$O(LRY(LRY)) Q:'LRY  S LRENC(LRX_"."_LRY)=LRY(LRY)
"RTN","LRAPBK",143,0)
 . I '$O(LRENC(0)) Q
"RTN","LRAPBK",144,0)
 . W !,"CPT Code: "
"RTN","LRAPBK",145,0)
 . S IEN=0
"RTN","LRAPBK",146,0)
 . F  S IEN=$O(LRENC(IEN)) Q:'IEN  W $P(LRENC(IEN),U)_"X"_$P(LRENC(IEN),U,16)_" " W:$X>70 !
"RTN","LRAPBK",147,0)
 ;
"RTN","LRAPBK",148,0)
 I "SPCYEM"[LRSS D
"RTN","LRAPBK",149,0)
 . W !,"Date specimen taken: ",LRSPDT
"RTN","LRAPBK",150,0)
 . S Y=$P($G(^LRO(68,LRAA,1,LRW,1,LRAN,0)),"^",10)
"RTN","LRAPBK",151,0)
 . I Y,$D(^VA(200,Y,0)) W ?39," Entered by: ",$P(^(0),"^")
"RTN","LRAPBK",152,0)
 ;
"RTN","LRAPBK",153,0)
 I P(13)'="" W !?39,"Released by: ",P(13)
"RTN","LRAPBK",154,0)
 S Y=+$G(^LRO(68,LRAA,1,LRH(2)_"0000",1,LRAN,.4)) I Y,Y'=DUZ(2) W !,$P($G(^DIC(4,Y,0)),U)
"RTN","LRAPBK",155,0)
 ;
"RTN","LRAPBK",156,0)
 I LRSS="AU" D
"RTN","LRAPBK",157,0)
 . S DA=LRDFN D D^LRAUAW
"RTN","LRAPBK",158,0)
 . S Y=LR(63,12) D D^LRU
"RTN","LRAPBK",159,0)
 . W !?14,"Date died: ",Y,?49,"Path resident:",?64,P(9)
"RTN","LRAPBK",160,0)
 . D AS
"RTN","LRAPBK",161,0)
 ;
"RTN","LRAPBK",162,0)
 ; Print specimens and any surgery case source references
"RTN","LRAPBK",163,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRAPBK",164,0)
 . N Z
"RTN","LRAPBK",165,0)
 . S Z=0
"RTN","LRAPBK",166,0)
 . F  S Z=$O(^LR(LRDFN,LRSS,LRI,.1,Z)) Q:'Z  D  Q:LR("Q")
"RTN","LRAPBK",167,0)
 . . I $Y>(IOSL-6) D H1 Q:LR("Q")
"RTN","LRAPBK",168,0)
 . . S Z(1)=$P(^LR(LRDFN,LRSS,LRI,.1,Z,0),"^")
"RTN","LRAPBK",169,0)
 . . W !,?$S($L(Z(1))<61:14,1:2),Z(1)
"RTN","LRAPBK",170,0)
 . I LR("Q") Q
"RTN","LRAPBK",171,0)
 . D SRCASE
"RTN","LRAPBK",172,0)
 ;
"RTN","LRAPBK",173,0)
 Q:LR("Q")
"RTN","LRAPBK",174,0)
 ;
"RTN","LRAPBK",175,0)
 ; Print SNOMED codes
"RTN","LRAPBK",176,0)
 I LRB,LRSS?1(1"SP",1"CY",1"EM"),$D(^LR(LRDFN,LRSS,LRI,2,0)) D  Q:LR("Q")
"RTN","LRAPBK",177,0)
 . I $Y>(IOSL-6) D H1 Q:LR("Q")
"RTN","LRAPBK",178,0)
 . W !?14,"SNOMED codes:"
"RTN","LRAPBK",179,0)
 . D ^LRAPBK1
"RTN","LRAPBK",180,0)
 ;
"RTN","LRAPBK",181,0)
 I LRB,LRSS="AU",$O(^LR(LRDFN,"AY",0)) D  Q:LR("Q")
"RTN","LRAPBK",182,0)
 . I $Y>(IOSL-6) D H1 Q:LR("Q")
"RTN","LRAPBK",183,0)
 . W !?14,"SNOMED codes:"
"RTN","LRAPBK",184,0)
 . D AU^LRAPBK1
"RTN","LRAPBK",185,0)
 ;
"RTN","LRAPBK",186,0)
 I LRSS'="AU" D D Q:LR("Q")
"RTN","LRAPBK",187,0)
 ;
"RTN","LRAPBK",188,0)
 Q:LR("Q")
"RTN","LRAPBK",189,0)
 W !,LR("%")
"RTN","LRAPBK",190,0)
 Q
"RTN","LRAPBK",191,0)
 ;
"RTN","LRAPBK",192,0)
 ;
"RTN","LRAPBK",193,0)
D ;
"RTN","LRAPBK",194,0)
 F Z(1)=99,97 Q:LR("Q")  D
"RTN","LRAPBK",195,0)
 . S Z=0
"RTN","LRAPBK",196,0)
 . F  S Z=$O(^LR(LRDFN,LRSS,LRI,Z(1),Z)) Q:'Z  D:$Y>(IOSL-6) H1 Q:LR("Q")  W !?4,^LR(LRDFN,LRSS,LRI,Z(1),Z,0)
"RTN","LRAPBK",197,0)
 Q
"RTN","LRAPBK",198,0)
 ;
"RTN","LRAPBK",199,0)
 ;
"RTN","LRAPBK",200,0)
H ;
"RTN","LRAPBK",201,0)
 I $D(LR("F")),IOST?1"C".E D M^LRU Q:LR("Q")
"RTN","LRAPBK",202,0)
 D F^LRU
"RTN","LRAPBK",203,0)
 I $G(LRSINGLE) W !,"LOG BOOK entry for accession ",LRACC,!
"RTN","LRAPBK",204,0)
 E  W !,LRO(68)," (",LRABV,") LOG BOOK for ",LRH(0),!
"RTN","LRAPBK",205,0)
 W "# =Demographic data in file other than PATIENT file"
"RTN","LRAPBK",206,0)
 W !,"Date",?8,"Num",?14,"Patient",?35,"ID",?40,"LOC",?49,"PHYSICIAN",?67,"PATHOLOGIST",!,LR("%")
"RTN","LRAPBK",207,0)
 Q
"RTN","LRAPBK",208,0)
 ;
"RTN","LRAPBK",209,0)
 ;
"RTN","LRAPBK",210,0)
H1 ;
"RTN","LRAPBK",211,0)
 D H Q:LR("Q")
"RTN","LRAPBK",212,0)
 W !,$J(T,5),?7,$J(LRAN,5),?14
"RTN","LRAPBK",213,0)
 W:P(0)'="PATIENT" "#"
"RTN","LRAPBK",214,0)
 W $E(LRP,1,18),?34,SSN(1),?40,$E(LRLLOC,1,8),?49,$E(P(2),1,16),?67,P(1)
"RTN","LRAPBK",215,0)
 Q
"RTN","LRAPBK",216,0)
 ;
"RTN","LRAPBK",217,0)
 ;
"RTN","LRAPBK",218,0)
S ;
"RTN","LRAPBK",219,0)
 S Y=$P($G(^VA(200,+Y,0)),U)
"RTN","LRAPBK",220,0)
 Q
"RTN","LRAPBK",221,0)
 ;
"RTN","LRAPBK",222,0)
 ;
"RTN","LRAPBK",223,0)
AS I $D(^LRO(68,LRAA,1,LRW,1,LRAN,0)) S Y=$P(^(0),"^",10) D S W ! W:Y]"" ?14,"Entered by: ",Y W:LR("ASST")]"" ?49,"Autopsy Asst: ",LR("ASST")
"RTN","LRAPBK",224,0)
 Q
"RTN","LRAPBK",225,0)
 ;
"RTN","LRAPBK",226,0)
 ;
"RTN","LRAPBK",227,0)
END ;
"RTN","LRAPBK",228,0)
 K LRSPDT D V^LRU
"RTN","LRAPBK",229,0)
 Q
"RTN","LRAPBK",230,0)
 ;
"RTN","LRAPBK",231,0)
 ;
"RTN","LRAPBK",232,0)
SRCASE ; Print related surgery case info
"RTN","LRAPBK",233,0)
 ;
"RTN","LRAPBK",234,0)
 N LRDATA,LRFIELDNAME,LRFIELDNUM,LRIENS,LRJ,LRK,LRREF,LRSRTN,LRSUBFILE,LRTAB,LRX,LRY
"RTN","LRAPBK",235,0)
 ;
"RTN","LRAPBK",236,0)
 ;ZEXCEPT: IOM,IOSL,LRDFN,LRI,LRSS
"RTN","LRAPBK",237,0)
 ;
"RTN","LRAPBK",238,0)
 ; Print related surgical case #
"RTN","LRAPBK",239,0)
 S LRIENS=LRDFN_","_LRSS_","_LRI_",0"
"RTN","LRAPBK",240,0)
 I $D(^LR(LRDFN,"EPR","AD",LRIENS,1)) D
"RTN","LRAPBK",241,0)
 . S LRJ=$O(^LR(LRDFN,"EPR","AD",LRIENS,1,0)),LRREF=LRJ_","_LRDFN_","
"RTN","LRAPBK",242,0)
 . D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRAPBK",243,0)
 . S LRSRTN=LRDATA(63.00013,LRREF,1,"I")
"RTN","LRAPBK",244,0)
 . I $P(LRSRTN,";",3)="" W !,"Related Surgery Case #"_$P(LRSRTN,";")
"RTN","LRAPBK",245,0)
 . E  W !,$P(LRSRTN,";",3)
"RTN","LRAPBK",246,0)
 ;
"RTN","LRAPBK",247,0)
 ; Print soruce of surgical case info copied to Lab package.
"RTN","LRAPBK",248,0)
 F LRJ=.2,.3,.4,.5 D  Q:LR("Q")
"RTN","LRAPBK",249,0)
 . S LRIENS=LRDFN_","_LRSS_","_LRI_","_LRJ_",0"
"RTN","LRAPBK",250,0)
 . I '$D(^LR(LRDFN,"EPR","AD",LRIENS,1)) Q
"RTN","LRAPBK",251,0)
 . I $Y>(IOSL-6) D H1 Q:LR("Q")
"RTN","LRAPBK",252,0)
 . S LRK=$O(^LR(LRDFN,"EPR","AD",LRIENS,1,0)),LRREF=LRK_","_LRDFN_","
"RTN","LRAPBK",253,0)
 . K LRDATA
"RTN","LRAPBK",254,0)
 . D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRAPBK",255,0)
 . S LRSUBFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPBK",256,0)
 . S LRFIELDNUM=((LRJ*10)+11)/1000
"RTN","LRAPBK",257,0)
 . S LRFIELDNAME=$$GET1^DID(LRSUBFILE,LRFIELDNUM,"","LABEL")
"RTN","LRAPBK",258,0)
 . S LRX=$P(LRDATA(63.00013,LRREF,1,"I"),";",3)
"RTN","LRAPBK",259,0)
 . W !,LRFIELDNAME_": " S LRTAB=$X
"RTN","LRAPBK",260,0)
 . I IOM'<($L(LRX)+LRTAB) W LRX Q
"RTN","LRAPBK",261,0)
 . F LRK=1:1:$L(LRX," ") D
"RTN","LRAPBK",262,0)
 . . S LRY=$P(LRX," ",LRK)
"RTN","LRAPBK",263,0)
 . . I $X>LRTAB,($X+$L(LRY)+1)>IOM W !,?LRTAB,LRY Q
"RTN","LRAPBK",264,0)
 . . W:$X>LRTAB " " W LRY
"RTN","LRAPBK",265,0)
 ;
"RTN","LRAPBK",266,0)
 Q
"RTN","LRAPBK1")
0^153^B17043567
"RTN","LRAPBK1",1,0)
LRAPBK1 ;DALOI/STAFF - AP LOG BOOK ;Dec 19 , 2007
"RTN","LRAPBK1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRAPBK1",3,0)
 ;
"RTN","LRAPBK1",4,0)
 ;
"RTN","LRAPBK1",5,0)
 N LRSCT,LRX
"RTN","LRAPBK1",6,0)
 ;
"RTN","LRAPBK1",7,0)
 F Z=0:0 S Z=$O(^LR(LRDFN,LRSS,LRI,2,Z)) Q:'Z  D
"RTN","LRAPBK1",8,0)
 . S LRT=+^LR(LRDFN,LRSS,LRI,2,Z,0)
"RTN","LRAPBK1",9,0)
 . D:$Y>(IOSL-6) H1^LRAPBK Q:LR("Q")
"RTN","LRAPBK1",10,0)
 . S X=$G(^LAB(61,LRT,0),"?")
"RTN","LRAPBK1",11,0)
 . I LRPSNM?1(1"1",1"3") W !?14,"T-",$P(X,"^",2)," (SNM)  ",$P(X,"^")
"RTN","LRAPBK1",12,0)
 . I LRPSNM>1 D
"RTN","LRAPBK1",13,0)
 . . S LRSCT=$$IEN2SCT^LA7VHLU6(61,LRT,DT,"")
"RTN","LRAPBK1",14,0)
 . . I LRSCT'="" W !,?14,$S(LRPSNM=2:"Topography: ",1:""),$P(LRSCT,"^")," (",$P(LRSCT,"^",3),")  ",$P(LRSCT,"^",2)
"RTN","LRAPBK1",15,0)
 . D M
"RTN","LRAPBK1",16,0)
 Q
"RTN","LRAPBK1",17,0)
 ;
"RTN","LRAPBK1",18,0)
 ;
"RTN","LRAPBK1",19,0)
M ;
"RTN","LRAPBK1",20,0)
 S LRM=0
"RTN","LRAPBK1",21,0)
 F  S LRM=$O(^LR(LRDFN,LRSS,LRI,2,Z,2,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",22,0)
 . S X=+^LR(LRDFN,LRSS,LRI,2,Z,2,LRM,0),LRM(1)=$S($D(^LAB(61.1,X,0)):^(0),1:"?")
"RTN","LRAPBK1",23,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",24,0)
 . W !?17,"M-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",25,0)
 . I LRB=1 D E
"RTN","LRAPBK1",26,0)
 ;
"RTN","LRAPBK1",27,0)
 I LRB=2 Q
"RTN","LRAPBK1",28,0)
 ;
"RTN","LRAPBK1",29,0)
 S J=0
"RTN","LRAPBK1",30,0)
 F  S J=$O(^LR(LRDFN,LRSS,LRI,2,Z,4,J)) Q:'J!(LR("Q"))  D
"RTN","LRAPBK1",31,0)
 . S LRX=^LR(LRDFN,LRSS,LRI,2,Z,4,J,0),LRX(1)=$P(LRX,"^",2)
"RTN","LRAPBK1",32,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",33,0)
 . S X=$S($D(^LAB(61.5,+LRX,0)):^(0),1:"?")
"RTN","LRAPBK1",34,0)
 . W !?17,"P-",$P(X,"^",2)," ",$P(X,"^")
"RTN","LRAPBK1",35,0)
 . I LRX(1)'="" D W
"RTN","LRAPBK1",36,0)
 ;
"RTN","LRAPBK1",37,0)
 S LRM=0
"RTN","LRAPBK1",38,0)
 F  S LRM=$O(^LR(LRDFN,LRSS,LRI,2,Z,1,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",39,0)
 . S X=+^LR(LRDFN,LRSS,LRI,2,Z,1,LRM,0),LRM(1)=$G(^LAB(61.4,X,0),"?")
"RTN","LRAPBK1",40,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",41,0)
 . W !?17,"D-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",42,0)
 ;
"RTN","LRAPBK1",43,0)
 S LRM=0
"RTN","LRAPBK1",44,0)
 F  S LRM=$O(^LR(LRDFN,LRSS,LRI,2,Z,3,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",45,0)
 . S X=+^LR(LRDFN,LRSS,LRI,2,Z,3,LRM,0),LRM(1)=$G(^LAB(61.3,X,0),"?")
"RTN","LRAPBK1",46,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",47,0)
 . W !?17,"F-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",48,0)
 Q
"RTN","LRAPBK1",49,0)
 ;
"RTN","LRAPBK1",50,0)
 ;
"RTN","LRAPBK1",51,0)
E ;
"RTN","LRAPBK1",52,0)
 S LRE=0
"RTN","LRAPBK1",53,0)
 F  S LRE=$O(^LR(LRDFN,LRSS,LRI,2,Z,2,LRM,1,LRE)) Q:'LRE  D
"RTN","LRAPBK1",54,0)
 . S LRX=+^LR(LRDFN,LRSS,LRI,2,Z,2,LRM,1,LRE,0),LRE(1)=$G(^LAB(61.2,LRX,0),"?")
"RTN","LRAPBK1",55,0)
 . I LRPSNM?1(1"1",1"3") W !?20,"E-",$P(LRE(1),"^",2)," (SNM)  ",$P(LRE(1),"^")
"RTN","LRAPBK1",56,0)
 . I LRPSNM>1 D
"RTN","LRAPBK1",57,0)
 . . S LRSCT=$$IEN2SCT^LA7VHLU6(61.2,LRX,DT,"")
"RTN","LRAPBK1",58,0)
 . . I LRSCT'="" W !,?20,$S(LRPSNM=2:"Etiology: ",1:""),$P(LRSCT,"^")," (",$P(LRSCT,"^",3),")  ",$P(LRSCT,"^",2)
"RTN","LRAPBK1",59,0)
 Q
"RTN","LRAPBK1",60,0)
 ;
"RTN","LRAPBK1",61,0)
 ;
"RTN","LRAPBK1",62,0)
AU ;
"RTN","LRAPBK1",63,0)
 S Z=0
"RTN","LRAPBK1",64,0)
 F  S Z=$O(^LR(LRDFN,"AY",Z)) Q:'Z  D
"RTN","LRAPBK1",65,0)
 . S LRT=+^(Z,0)
"RTN","LRAPBK1",66,0)
 . D:$Y>(IOSL-6) H1^LRAPBK Q:LR("Q")
"RTN","LRAPBK1",67,0)
 . S X=$S($D(^LAB(61,LRT,0)):^(0),1:"?")
"RTN","LRAPBK1",68,0)
 . W !?14,"T-",$P(X,"^",2)," ",$P(X,"^")
"RTN","LRAPBK1",69,0)
 . D MA
"RTN","LRAPBK1",70,0)
 Q
"RTN","LRAPBK1",71,0)
 ;
"RTN","LRAPBK1",72,0)
 ;
"RTN","LRAPBK1",73,0)
MA ;
"RTN","LRAPBK1",74,0)
 S LRM=0
"RTN","LRAPBK1",75,0)
 F  S LRM=$O(^LR(LRDFN,"AY",Z,2,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",76,0)
 . S X=+^LR(LRDFN,"AY",Z,2,LRM,0),LRM(1)=$S($D(^LAB(61.1,X,0)):^(0),1:"?")
"RTN","LRAPBK1",77,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",78,0)
 . W !?17,"M-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",79,0)
 . I LRB=1 D EA
"RTN","LRAPBK1",80,0)
 ;
"RTN","LRAPBK1",81,0)
 I LRB=2 Q
"RTN","LRAPBK1",82,0)
 ;
"RTN","LRAPBK1",83,0)
 S J=0
"RTN","LRAPBK1",84,0)
 F  S J=$O(^LR(LRDFN,"AY",Z,4,J)) Q:'J!(LR("Q"))  D
"RTN","LRAPBK1",85,0)
 . S LRX=^LR(LRDFN,"AY",Z,4,J,0),LRX(1)=$P(LRX,"^")
"RTN","LRAPBK1",86,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",87,0)
 . S X=$S($D(^LAB(61.5,+LRX,0)):^(0),1:"?")
"RTN","LRAPBK1",88,0)
 . W !?17,"P-",$P(X,"^",2)," ",$P(X,"^")
"RTN","LRAPBK1",89,0)
 . D:LRX(1)]"" W
"RTN","LRAPBK1",90,0)
 ;
"RTN","LRAPBK1",91,0)
 S LRM=0
"RTN","LRAPBK1",92,0)
 F  S LRM=$O(^LR(LRDFN,"AY",Z,1,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",93,0)
 . S X=+^LR(LRDFN,"AY",Z,1,LRM,0),LRM(1)=$S($D(^LAB(61.4,X,0)):^(0),1:"?")
"RTN","LRAPBK1",94,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",95,0)
 . W !?17,"D-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",96,0)
 ;
"RTN","LRAPBK1",97,0)
 S LRM=0
"RTN","LRAPBK1",98,0)
 F  S LRM=$O(^LR(LRDFN,"AY",Z,3,LRM)) Q:'LRM!(LR("Q"))  D
"RTN","LRAPBK1",99,0)
 . S X=+^LR(LRDFN,"AY",Z,3,LRM,0),LRM(1)=$S($D(^LAB(61.3,X,0)):^(0),1:"?")
"RTN","LRAPBK1",100,0)
 . D:$Y>(IOSL-6) H1^LRAPBK
"RTN","LRAPBK1",101,0)
 . W !?17,"F-",$P(LRM(1),"^",2)," ",$P(LRM(1),"^")
"RTN","LRAPBK1",102,0)
 Q
"RTN","LRAPBK1",103,0)
 ;
"RTN","LRAPBK1",104,0)
 ;
"RTN","LRAPBK1",105,0)
EA ;
"RTN","LRAPBK1",106,0)
 S LRE=0
"RTN","LRAPBK1",107,0)
 F  S LRE=$O(^LR(LRDFN,"AY",Z,2,LRM,1,LRE)) Q:'LRE  D
"RTN","LRAPBK1",108,0)
 . S LRX=+^LR(LRDFN,"AY",Z,2,LRM,1,LRE,0),LRE(1)=$G(^LAB(61.2,LRX,0),"?")
"RTN","LRAPBK1",109,0)
 . I LRPSNM?1(1"1",1"3") W !?20,"E-",$P(LRE(1),"^",2)," (SNM)  ",$P(LRE(1),"^")
"RTN","LRAPBK1",110,0)
 . I LRPSNM>1 D
"RTN","LRAPBK1",111,0)
 . . S LRSCT=$$IEN2SCT^LA7VHLU6(61.2,LRX,DT,"")
"RTN","LRAPBK1",112,0)
 . . I LRSCT'="" W !,?20,$S(LRPSNM=2:"Etiology: ",1:""),$P(LRSCT,"^")," (",$P(LRSCT,"^",3),")  ",$P(LRSCT,"^",2)
"RTN","LRAPBK1",113,0)
 Q
"RTN","LRAPBK1",114,0)
 ;
"RTN","LRAPBK1",115,0)
 ;
"RTN","LRAPBK1",116,0)
W ;
"RTN","LRAPBK1",117,0)
 W " (",$S(LRX(1)=1:"Positive",LRX(1)=0:"Negative",1:"?"),")"
"RTN","LRAPBK1",118,0)
 Q
"RTN","LRAPBR1")
0^208^B131863197
"RTN","LRAPBR1",1,0)
LRAPBR1 ;DALOI/STAFF - AP Browser Print Cont. ;12/04/09  18:27
"RTN","LRAPBR1",2,0)
 ;;5.2;LAB SERVICE;**259,317,363,350**;Sep 27, 1994;Build 230
"RTN","LRAPBR1",3,0)
 ;
"RTN","LRAPBR1",4,0)
 ;
"RTN","LRAPBR1",5,0)
ENTER ; from LRAPBR
"RTN","LRAPBR1",6,0)
 N LRCNT,LRTMP,LRA1,LRADESC,LRLENG1,LRLENG2,LRFILE,LRAPMD
"RTN","LRAPBR1",7,0)
 N LRFLD,LRV,LRV1,LRV2,LRX,LRB1,LRTEXT,LRSPCE,LRIENS,LRAPMR
"RTN","LRAPBR1",8,0)
 Q:'$D(^LR(LRDFN,LRSS,LRI,0))
"RTN","LRAPBR1",9,0)
 S:'LRTIU GROOT="^TMP(""LRAPBR"",$J,"
"RTN","LRAPBR1",10,0)
 S:LRTIU GROOT="^TMP(""TIUP"",$J,"
"RTN","LRAPBR1",11,0)
 ;
"RTN","LRAPBR1",12,0)
 D GETPCP^LRAPUTL(.LRPRAC,LRDFN,LRSS,LRI)
"RTN","LRAPBR1",13,0)
 ;
"RTN","LRAPBR1",14,0)
 ; If reporting lab available then use instead of VistA site name.
"RTN","LRAPBR1",15,0)
 S LRX=+$G(^LR(LRDFN,LRSS,LRI,"RF"))
"RTN","LRAPBR1",16,0)
 I LRX S LRQ(1)=$$NAME^XUAF4(LRX)
"RTN","LRAPBR1",17,0)
 ;
"RTN","LRAPBR1",18,0)
 S LRQ=0 D ^LRUA,HEADER
"RTN","LRAPBR1",19,0)
 S LR("F")=1
"RTN","LRAPBR1",20,0)
 D DASH
"RTN","LRAPBR1",21,0)
 D:LRTIU GLENTRY("$TEXT",,1)
"RTN","LRAPBR1",22,0)
 D GLENTRY("Submitted by: "_LRW(5),"",1)
"RTN","LRAPBR1",23,0)
 D GLENTRY("Date obtained: "_LRTK,44)
"RTN","LRAPBR1",24,0)
 D:LRA DASH
"RTN","LRAPBR1",25,0)
 ;
"RTN","LRAPBR1",26,0)
 S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPBR1",27,0)
 ;
"RTN","LRAPBR1",28,0)
 ;
"RTN","LRAPBR1",29,0)
MAIN ;
"RTN","LRAPBR1",30,0)
 D SPEC
"RTN","LRAPBR1",31,0)
 D MODCHK
"RTN","LRAPBR1",32,0)
 D SUPBNNR
"RTN","LRAPBR1",33,0)
 D COMMENT
"RTN","LRAPBR1",34,0)
 D DIAG
"RTN","LRAPBR1",35,0)
 D DOC
"RTN","LRAPBR1",36,0)
 D WPFLD
"RTN","LRAPBR1",37,0)
 D SUPRPT
"RTN","LRAPBR1",38,0)
 D SSJR
"RTN","LRAPBR1",39,0)
 D PPL
"RTN","LRAPBR1",40,0)
 Q
"RTN","LRAPBR1",41,0)
 ;
"RTN","LRAPBR1",42,0)
 ;
"RTN","LRAPBR1",43,0)
SPEC ; List specimens
"RTN","LRAPBR1",44,0)
 ;
"RTN","LRAPBR1",45,0)
 ;ZEXCEPT: LRDFN,LRI,LRIENS,LRSF,LRSS
"RTN","LRAPBR1",46,0)
 ;
"RTN","LRAPBR1",47,0)
 N LRB,LRFILE,LRX
"RTN","LRAPBR1",48,0)
 ;
"RTN","LRAPBR1",49,0)
 D GLENTRY("Specimen (Received "_LRTK(1)_"):","",1)
"RTN","LRAPBR1",50,0)
 ;
"RTN","LRAPBR1",51,0)
 S LRFILE=+$$GET1^DID(LRSF,.012,"","SPECIFIER")
"RTN","LRAPBR1",52,0)
 S LRB=0
"RTN","LRAPBR1",53,0)
 F  S LRB=$O(^LR(LRDFN,LRSS,LRI,.1,LRB)) Q:LRB<1  D
"RTN","LRAPBR1",54,0)
 . S LRX=$$GET1^DIQ(LRFILE,LRB_","_LRIENS,.01)
"RTN","LRAPBR1",55,0)
 . D GLENTRY(LRX,"",1)
"RTN","LRAPBR1",56,0)
 ;
"RTN","LRAPBR1",57,0)
 Q
"RTN","LRAPBR1",58,0)
 ;
"RTN","LRAPBR1",59,0)
 ;
"RTN","LRAPBR1",60,0)
MODCHK ; Display modified banner if required
"RTN","LRAPBR1",61,0)
 S LRAPMR=$$GET1^DIQ(LRSF,LRIENS,.17,"I")
"RTN","LRAPBR1",62,0)
 Q:'LRAPMR
"RTN","LRAPBR1",63,0)
 S LRAPMD=$$GET1^DIQ(LRSF,LRIENS,.172,"I")
"RTN","LRAPBR1",64,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",65,0)
 S LRTEXT=""
"RTN","LRAPBR1",66,0)
 F LRCNT=1:1:$S(LRAPMD:14,1:15) D
"RTN","LRAPBR1",67,0)
 . S LRTEXT=LRTEXT_"*+"
"RTN","LRAPBR1",68,0)
 S LRTEXT=LRTEXT_" MODIFIED "
"RTN","LRAPBR1",69,0)
 S LRTEXT=LRTEXT_$S(LRAPMD:"DIAGNOSIS ",1:"REPORT ")
"RTN","LRAPBR1",70,0)
 F LRCNT=1:1:$S(LRAPMD:14,1:15) D
"RTN","LRAPBR1",71,0)
 . S LRTEXT=LRTEXT_"*+"
"RTN","LRAPBR1",72,0)
 D GLENTRY(LRTEXT,"",1)
"RTN","LRAPBR1",73,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",74,0)
 Q
"RTN","LRAPBR1",75,0)
 ;
"RTN","LRAPBR1",76,0)
 ;
"RTN","LRAPBR1",77,0)
SUPBNNR ; Display supplementary report header if one or more has been added
"RTN","LRAPBR1",78,0)
 I $P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4) D
"RTN","LRAPBR1",79,0)
 . S LRTEXT="*+* SUPPLEMENTARY REPORT HAS BEEN ADDED *+*"
"RTN","LRAPBR1",80,0)
 . D GLENTRY($$CJ^XLFSTR(LRTEXT,IOM),"",1)
"RTN","LRAPBR1",81,0)
 . S LRTEXT="*+* REFER TO BOTTOM OF REPORT *+*"
"RTN","LRAPBR1",82,0)
 . D GLENTRY($$CJ^XLFSTR(LRTEXT,IOM),"",1)
"RTN","LRAPBR1",83,0)
 . D GLENTRY("","",1)
"RTN","LRAPBR1",84,0)
 Q
"RTN","LRAPBR1",85,0)
 ;
"RTN","LRAPBR1",86,0)
 ;
"RTN","LRAPBR1",87,0)
DIAG ; Display the Brief Clinical History, Preoperative Diagnosis, Operative Findings, and Postoperative Diagnosis
"RTN","LRAPBR1",88,0)
 S LRFILE=LRSF,LRCNT=0,LRIENS=LRI_","_LRDFN_","
"RTN","LRAPBR1",89,0)
 F LRFLD=.013:.001:.016 D
"RTN","LRAPBR1",90,0)
 . D:LRA DASH
"RTN","LRAPBR1",91,0)
 . S LRCNT=LRCNT+1
"RTN","LRAPBR1",92,0)
 . D GLENTRY($P($T(TEXT1+LRCNT),";",3),"",1)
"RTN","LRAPBR1",93,0)
 . D WP
"RTN","LRAPBR1",94,0)
 Q
"RTN","LRAPBR1",95,0)
 ;
"RTN","LRAPBR1",96,0)
 ;
"RTN","LRAPBR1",97,0)
DOC ; Pathologist information
"RTN","LRAPBR1",98,0)
 ;
"RTN","LRAPBR1",99,0)
 N LRIENS,LRX
"RTN","LRAPBR1",100,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",101,0)
 ;
"RTN","LRAPBR1",102,0)
 ; Retrieve surgeon/attending
"RTN","LRAPBR1",103,0)
 D ATTEND(.LRMD)
"RTN","LRAPBR1",104,0)
 D GLENTRY("Surgeon/physician: "_LRMD,27,1)
"RTN","LRAPBR1",105,0)
 I LRMD("SR-SURGEON")'="" D GLENTRY(LRMD("SR-SURGEON"),28,1)
"RTN","LRAPBR1",106,0)
 I LRMD("SR-ATTEND")'="" D GLENTRY(LRMD("SR-ATTEND"),26,1)
"RTN","LRAPBR1",107,0)
 ;I +$G(LRMD("ERR"))=601 D GLENTRY($P(LRMD("ERR"),"^",2),26,1)
"RTN","LRAPBR1",108,0)
 ;
"RTN","LRAPBR1",109,0)
 D:LRA GLENTRY(LR("%1"),"",1)
"RTN","LRAPBR1",110,0)
 D DASH
"RTN","LRAPBR1",111,0)
 D HEADER2
"RTN","LRAPBR1",112,0)
 D:LRA DASH
"RTN","LRAPBR1",113,0)
 I LRRC="" D
"RTN","LRAPBR1",114,0)
 . D GLENTRY("+*+* REPORT INCOMPLETE *+*+",20,1)
"RTN","LRAPBR1",115,0)
 . D GLENTRY("","",1)
"RTN","LRAPBR1",116,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",117,0)
 I LRRMD'="" D
"RTN","LRAPBR1",118,0)
 . S LRCNT=0 F LRA1="SP","CY","EM" D
"RTN","LRAPBR1",119,0)
 . . S LRCNT=LRCNT+1
"RTN","LRAPBR1",120,0)
 . . S LRTMP(LRA1)=$P($T(TEXT2+LRCNT),";",4)
"RTN","LRAPBR1",121,0)
 . S LRTMP=LRTMP(LRSS)
"RTN","LRAPBR1",122,0)
 . D GLENTRY(LRTMP_" "_LRRMD,31)
"RTN","LRAPBR1",123,0)
 Q
"RTN","LRAPBR1",124,0)
 ;
"RTN","LRAPBR1",125,0)
 ;
"RTN","LRAPBR1",126,0)
WPFLD ; Display Frozen Section, Gross Description, Microscopic Description and Surgical Path Diagnosis
"RTN","LRAPBR1",127,0)
 F LRCNT=1:1:4 D
"RTN","LRAPBR1",128,0)
 . S X=$T(FIELDS+LRCNT)
"RTN","LRAPBR1",129,0)
 . S LRV=$P(X,";",3),LRV1=$P(X,";",4),LRV2=$P(X,";",5)
"RTN","LRAPBR1",130,0)
 . D TEXTCHK
"RTN","LRAPBR1",131,0)
 . I $P($G(^LR(LRDFN,LRSS,LRI,LRV,0)),U,4) D
"RTN","LRAPBR1",132,0)
 . . D GLENTRY("","",1),GLENTRY(LR(69.2,LRV1),"",1)
"RTN","LRAPBR1",133,0)
 . . S LRFILE=LRSF,LRIENS=LRI_","_LRDFN_",",LRFLD=LRV
"RTN","LRAPBR1",134,0)
 . . I $P($G(^LR(LRDFN,LRSS,LRI,LRV2,0)),U,4) D
"RTN","LRAPBR1",135,0)
 . . . S LRFILE1=+$$GET1^DID(LRSF,LRV2,"","SPECIFIER")
"RTN","LRAPBR1",136,0)
 . . . D GLENTRY("*+* MODIFIED REPORT *+*",28,1)
"RTN","LRAPBR1",137,0)
 . . . D GLENTRY("(Last modified: ","",1)
"RTN","LRAPBR1",138,0)
 . . . S (LRA1,LRB1)=0
"RTN","LRAPBR1",139,0)
 . . . F  S LRA1=$O(^LR(LRDFN,LRSS,LRI,LRV2,LRA1)) Q:'LRA1  S LRB1=LRA1
"RTN","LRAPBR1",140,0)
 . . . Q:'$D(^LR(LRDFN,LRSS,LRI,LRV2,LRB1,0))
"RTN","LRAPBR1",141,0)
 . . . S LRSR1=$$GET1^DIQ(LRFILE1,LRB1_","_LRIENS,.01)
"RTN","LRAPBR1",142,0)
 . . . S LRSR2=$$GET1^DIQ(LRFILE1,LRB1_","_LRIENS,.02)
"RTN","LRAPBR1",143,0)
 . . . S LRTEXT=LRSR1_" typed by "_LRSR2_")"
"RTN","LRAPBR1",144,0)
 . . . D GLENTRY(LRTEXT,BTAB)
"RTN","LRAPBR1",145,0)
 . . D WP
"RTN","LRAPBR1",146,0)
 Q
"RTN","LRAPBR1",147,0)
 ;
"RTN","LRAPBR1",148,0)
 ;
"RTN","LRAPBR1",149,0)
SUPRPT ; Supplementary Report
"RTN","LRAPBR1",150,0)
 N LRA2
"RTN","LRAPBR1",151,0)
 I $P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4) D
"RTN","LRAPBR1",152,0)
 . S LRFILE=+$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","LRAPBR1",153,0)
 . S LRIENS1=LRI_","_LRDFN_","
"RTN","LRAPBR1",154,0)
 . D GLENTRY("","",1),GLENTRY("SUPPLEMENTARY REPORT(S):","",1)
"RTN","LRAPBR1",155,0)
 . S LRV=0 F  S LRV=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV)) Q:'LRV  D
"RTN","LRAPBR1",156,0)
 . . S LRIENS=LRV_","_LRIENS1
"RTN","LRAPBR1",157,0)
 . . S LRSR1=$$GET1^DIQ(LRFILE,LRIENS,.01)
"RTN","LRAPBR1",158,0)
 . . S LRSR2=+$$GET1^DIQ(LRFILE,LRIENS,.02)
"RTN","LRAPBR1",159,0)
 . . D GLENTRY("Supplementary Report Date: "_LRSR1,3,1)
"RTN","LRAPBR1",160,0)
 . . I $D(LR("R")),'LRSR2 D GLENTRY(" not verified",BTAB) Q
"RTN","LRAPBR1",161,0)
 . . I $P($G(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,0)),U,4) D
"RTN","LRAPBR1",162,0)
 . . . S LRTEXT="*+* SUPPLEMENTARY REPORT HAS BEEN ADDED/MODIFIED *+*"
"RTN","LRAPBR1",163,0)
 . . . D GLENTRY($$CJ^XLFSTR(LRTEXT,IOM),"",1)
"RTN","LRAPBR1",164,0)
 . . . D GLENTRY("(Added/Last","",1)
"RTN","LRAPBR1",165,0)
 . . . S (LRA1,LRB1)=0
"RTN","LRAPBR1",166,0)
 . . . F  S LRA1=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,LRA1)) Q:'LRA1  D
"RTN","LRAPBR1",167,0)
 . . . . S LRB1=LRA1
"RTN","LRAPBR1",168,0)
 . . . Q:'$D(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,LRB1,0))
"RTN","LRAPBR1",169,0)
 . . . S LRA2=^(0),Y=+LRA2,LRA2A=$P(LRA2,"^",2),LRSGN=" Typed by ",LRDSC=" modified: "
"RTN","LRAPBR1",170,0)
 . . . I $P(LRA2,"^",3) S LRSGN=" Signed by ",LRDSC=" released: ",LRA2A=$P(LRA2,"^",3),Y=$P(LRA2,"^",4)
"RTN","LRAPBR1",171,0)
 . . . S LRA2A=$S($D(^VA(200,LRA2A,0)):$P(^(0),"^"),1:LRA2A)
"RTN","LRAPBR1",172,0)
 . . . D D^LRU
"RTN","LRAPBR1",173,0)
 . . . D GLENTRY(LRDSC_Y_LRSGN_LRA2A_")",BTAB)
"RTN","LRAPBR1",174,0)
 . . S LRFLD=1 D WP
"RTN","LRAPBR1",175,0)
 . . D GLENTRY("","",1)
"RTN","LRAPBR1",176,0)
 Q
"RTN","LRAPBR1",177,0)
 ;
"RTN","LRAPBR1",178,0)
 ;
"RTN","LRAPBR1",179,0)
COMMENT ; Print comment field (#99)
"RTN","LRAPBR1",180,0)
 ;
"RTN","LRAPBR1",181,0)
 N LRB
"RTN","LRAPBR1",182,0)
 I '$O(^LR(LRDFN,LRSS,LRI,99,0)) Q
"RTN","LRAPBR1",183,0)
 ;
"RTN","LRAPBR1",184,0)
 D GLENTRY("Comment:","",1)
"RTN","LRAPBR1",185,0)
 ;
"RTN","LRAPBR1",186,0)
 S LRB=0
"RTN","LRAPBR1",187,0)
 F  S LRB=$O(^LR(LRDFN,LRSS,LRI,99,LRB)) Q:'LRB  D
"RTN","LRAPBR1",188,0)
 . S LRB(0)=^LR(LRDFN,LRSS,LRI,99,LRB,0)
"RTN","LRAPBR1",189,0)
 . D GLENTRY(LRB(0),"",1)
"RTN","LRAPBR1",190,0)
 ;
"RTN","LRAPBR1",191,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",192,0)
 ;
"RTN","LRAPBR1",193,0)
 Q
"RTN","LRAPBR1",194,0)
 ;
"RTN","LRAPBR1",195,0)
 ;
"RTN","LRAPBR1",196,0)
SSJR ; Print special studies/journal references
"RTN","LRAPBR1",197,0)
 D ^LRAPBR3
"RTN","LRAPBR1",198,0)
 S LREFLG=1
"RTN","LRAPBR1",199,0)
 Q
"RTN","LRAPBR1",200,0)
 ;
"RTN","LRAPBR1",201,0)
 ;
"RTN","LRAPBR1",202,0)
PPL ; Print performing laboratories.
"RTN","LRAPBR1",203,0)
 N LRPL,LRJ
"RTN","LRAPBR1",204,0)
 ;
"RTN","LRAPBR1",205,0)
 D RETLST^LRRPL(.LRPL,LRDFN,LRSS,LRI,0)
"RTN","LRAPBR1",206,0)
 I $G(LRPL)<1 Q
"RTN","LRAPBR1",207,0)
 ;
"RTN","LRAPBR1",208,0)
 D GLENTRY($$REPEAT^XLFSTR("=",IOM),"",1)
"RTN","LRAPBR1",209,0)
 D GLENTRY("Performing Laboratory:","",1)
"RTN","LRAPBR1",210,0)
 S LRJ=0
"RTN","LRAPBR1",211,0)
 F  S LRJ=$O(LRPL(LRJ)) Q:'LRJ  D GLENTRY(LRPL(LRJ),"",1)
"RTN","LRAPBR1",212,0)
 ;
"RTN","LRAPBR1",213,0)
 Q
"RTN","LRAPBR1",214,0)
 ;
"RTN","LRAPBR1",215,0)
 ;
"RTN","LRAPBR1",216,0)
WP ; Display word processing fields
"RTN","LRAPBR1",217,0)
 K LRTMP,^UTILITY($J,"W")
"RTN","LRAPBR1",218,0)
 N X,DIWR,DIWL,LRINC
"RTN","LRAPBR1",219,0)
 S X=$$GET1^DIQ(LRFILE,LRIENS,LRFLD,"","LRTMP",)
"RTN","LRAPBR1",220,0)
 S DIWR=IOM-5,DIWL=5,DIWF=$G(DIWF)
"RTN","LRAPBR1",221,0)
 S X=+$$GET1^DID(LRFILE,LRFLD,"","SPECIFIER")
"RTN","LRAPBR1",222,0)
 I $$GET1^DID(X,.01,"","SPECIFIER")["L",DIWF'["N" S DIWF=DIWF_"N"
"RTN","LRAPBR1",223,0)
 S LRINC=0
"RTN","LRAPBR1",224,0)
 F  S LRINC=$O(LRTMP(LRINC)) Q:'LRINC  S X=LRTMP(LRINC) D ^DIWP
"RTN","LRAPBR1",225,0)
 S LRINC=0
"RTN","LRAPBR1",226,0)
 F  S LRINC=$O(^UTILITY($J,"W",DIWL,LRINC)) Q:'LRINC  D GLENTRY(^UTILITY($J,"W",DIWL,LRINC,0),DIWL,1)
"RTN","LRAPBR1",227,0)
 K ^UTILITY($J,"W")
"RTN","LRAPBR1",228,0)
 Q
"RTN","LRAPBR1",229,0)
 ;
"RTN","LRAPBR1",230,0)
 ;
"RTN","LRAPBR1",231,0)
HEADER ;
"RTN","LRAPBR1",232,0)
 D:LRTIU GLENTRY("$APHDR",,1)
"RTN","LRAPBR1",233,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",234,0)
 ;
"RTN","LRAPBR1",235,0)
 ; Print names of facilities printing/releasing this report.
"RTN","LRAPBR1",236,0)
 N LRN,LRPL,LRRL,LRX
"RTN","LRAPBR1",237,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1,'LRTIU D
"RTN","LRAPBR1",238,0)
 . D PFAC^LRRP1(DUZ(2),"",1,.LRPL)
"RTN","LRAPBR1",239,0)
 . S LRN=0
"RTN","LRAPBR1",240,0)
 . F  S LRN=$O(LRPL(LRN)) Q:'LRN  D GLENTRY(LRPL(LRN),"",1)
"RTN","LRAPBR1",241,0)
 ;
"RTN","LRAPBR1",242,0)
 ; Display reporting lab
"RTN","LRAPBR1",243,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LRAPBR1",244,0)
 . S LRX=+$G(^LR(LRDFN,LRSS,LRI,"RF"))
"RTN","LRAPBR1",245,0)
 . I LRX<1 Q
"RTN","LRAPBR1",246,0)
 . D RL^LRRP1(LRX,1,.LRRL),GLENTRY("","",1)
"RTN","LRAPBR1",247,0)
 . S LRN=0
"RTN","LRAPBR1",248,0)
 . F  S LRN=$O(LRRL(LRN)) Q:'LRN  D GLENTRY(LRRL(LRN),"",1)
"RTN","LRAPBR1",249,0)
 ;
"RTN","LRAPBR1",250,0)
 D DASH
"RTN","LRAPBR1",251,0)
 D GLENTRY("MEDICAL RECORD |",5,1)
"RTN","LRAPBR1",252,0)
 D GLENTRY(LRAA1,40)
"RTN","LRAPBR1",253,0)
 D DASH
"RTN","LRAPBR1",254,0)
 ;
"RTN","LRAPBR1",255,0)
 ;
"RTN","LRAPBR1",256,0)
HEADER2 ;
"RTN","LRAPBR1",257,0)
 ;
"RTN","LRAPBR1",258,0)
 S LRADESC="Accession No. "_$S(LRQ(8)]"":LRQ(8)_LRW(1)_" "_LRAC,1:LRAC)
"RTN","LRAPBR1",259,0)
 S LRLENG1=$L(LRQ(1)),LRLENG2=$L(LRADESC),LRSPCE=IOM-LRLENG2-14
"RTN","LRAPBR1",260,0)
 S:LRLENG1>LRSPCE LRQ(1)=$E(LRQ(1),1,LRSPCE)
"RTN","LRAPBR1",261,0)
 ;
"RTN","LRAPBR1",262,0)
 D GLENTRY("PATHOLOGY REPORT",30,1)
"RTN","LRAPBR1",263,0)
 I '$G(^LR(LRDFN,LRSS,LRI,"RF")) D GLENTRY("Laboratory: "_LRQ(1),"",1)
"RTN","LRAPBR1",264,0)
 D GLENTRY(LRADESC,IOM-LRLENG2-1)
"RTN","LRAPBR1",265,0)
 Q
"RTN","LRAPBR1",266,0)
 ;
"RTN","LRAPBR1",267,0)
 ;
"RTN","LRAPBR1",268,0)
FOOTER ; Footer-called from ^LRAPBR
"RTN","LRAPBR1",269,0)
 D:LRTIU GLENTRY("$FTR",,1)
"RTN","LRAPBR1",270,0)
 D DASH
"RTN","LRAPBR1",271,0)
 S LRTEXT=$S('$D(LR("W")):"",1:"See signed copy in chart")
"RTN","LRAPBR1",272,0)
 D GLENTRY(LRTEXT,"",1)
"RTN","LRAPBR1",273,0)
 S LRTEXT="("_$S($D(LREFLG):"End of report",1:"See next page")_")"
"RTN","LRAPBR1",274,0)
 D GLENTRY(LRTEXT,57)
"RTN","LRAPBR1",275,0)
 D GLENTRY(LRPMD,"",1),GLENTRY(LRW(9),52),GLENTRY("| Date "_LRRC,55)
"RTN","LRAPBR1",276,0)
 D DASH
"RTN","LRAPBR1",277,0)
 D GLENTRY(LRP,"",1)
"RTN","LRAPBR1",278,0)
 S LRTEXT=$S('$D(LR("W")):"STANDARD FORM 515",1:"WORK COPY ONLY !!")
"RTN","LRAPBR1",279,0)
 D GLENTRY(LRTEXT,50)
"RTN","LRAPBR1",280,0)
 D GLENTRY("ID:"_SSN,"",1)
"RTN","LRAPBR1",281,0)
 D GLENTRY("SEX:"_SEX,16),GLENTRY(" DOB:"_DOB,BTAB)
"RTN","LRAPBR1",282,0)
 I AGE D
"RTN","LRAPBR1",283,0)
 . S LRTEXT=$S($G(VADM(6))]"":" AGE AT DEATH: ",1:" AGE: ")_AGE
"RTN","LRAPBR1",284,0)
 . D GLENTRY(LRTEXT,BTAB)
"RTN","LRAPBR1",285,0)
 D GLENTRY(" LOC:"_LRLLOC,BTAB)
"RTN","LRAPBR1",286,0)
 D GLENTRY("","",1)
"RTN","LRAPBR1",287,0)
 I LRADM'="" D GLENTRY("ADM:"_$P(LRADM,"@"),BTAB)
"RTN","LRAPBR1",288,0)
 I LRADX'="" D GLENTRY("DX:"_$E(LRADX,1,26),17)
"RTN","LRAPBR1",289,0)
 D GLENTRY("PCP:",46)
"RTN","LRAPBR1",290,0)
 I LRPRAC'="" D GLENTRY($E(LRPRAC(1),1,28),51)
"RTN","LRAPBR1",291,0)
 Q
"RTN","LRAPBR1",292,0)
 ;
"RTN","LRAPBR1",293,0)
 ;
"RTN","LRAPBR1",294,0)
ESIGLN ; Write signature block name, title, and date of signature
"RTN","LRAPBR1",295,0)
 D GLENTRY(,,1)
"RTN","LRAPBR1",296,0)
 I $D(^VA(200,DUZ,0)) D
"RTN","LRAPBR1",297,0)
 . S LRFILE=200,LRFLD=20.2,LRFLD2=20.3
"RTN","LRAPBR1",298,0)
 . S X=$$GET1^DIQ(LRFILE,DUZ,LRFLD)
"RTN","LRAPBR1",299,0)
 ; Compare DUZ to pathologist, if different, use proxy signature
"RTN","LRAPBR1",300,0)
 S:LRSS="AU" LRPATH=$$GET1^DIQ(63,LRDFN,13.6,"I")
"RTN","LRAPBR1",301,0)
 I LRSS'="AU" D
"RTN","LRAPBR1",302,0)
 . S LRFL2=$S(LRSS="EM":63.02,LRSS="CY":63.09,LRSS="SP":63.08,1:0)
"RTN","LRAPBR1",303,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPBR1",304,0)
 . S LRPATH=$$GET1^DIQ(LRFL2,LRIENS,.02,"I")
"RTN","LRAPBR1",305,0)
 S LRPATH2=""
"RTN","LRAPBR1",306,0)
 S:LRPATH'=DUZ LRPATH2=" FOR "_$$GET1^DIQ(LRFILE,LRPATH,LRFLD)
"RTN","LRAPBR1",307,0)
 S LRTEXT="/es/ "_X_LRPATH2
"RTN","LRAPBR1",308,0)
 ; S LRTEXT="/es/ "_X
"RTN","LRAPBR1",309,0)
 D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR1",310,0)
 S LRTEXT=$$GET1^DIQ(LRFILE,DUZ,LRFLD2)
"RTN","LRAPBR1",311,0)
 D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR1",312,0)
 S LRTEXT="Signed "_$$FMTE^XLFDT(LRNTIME,"1MZ")
"RTN","LRAPBR1",313,0)
 D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR1",314,0)
 Q
"RTN","LRAPBR1",315,0)
 ;
"RTN","LRAPBR1",316,0)
 ;
"RTN","LRAPBR1",317,0)
DASH ; Display a line of dashes
"RTN","LRAPBR1",318,0)
 D GLENTRY(LR("%"),"",1)
"RTN","LRAPBR1",319,0)
 Q
"RTN","LRAPBR1",320,0)
 ;
"RTN","LRAPBR1",321,0)
 ;
"RTN","LRAPBR1",322,0)
GLENTRY(LRPR1,LRPR2,LRPR3) ; Write to global
"RTN","LRAPBR1",323,0)
 ; LRPR1 = Text to be written to global
"RTN","LRAPBR1",324,0)
 ; LRPR2 = Tab position
"RTN","LRAPBR1",325,0)
 ; LRPR3 = 1 means start a new line.  Otherwise, write an current line.
"RTN","LRAPBR1",326,0)
 S LRPR1=$G(LRPR1)
"RTN","LRAPBR1",327,0)
 S LRPR2=+$G(LRPR2)
"RTN","LRAPBR1",328,0)
 S LRPR3=+$G(LRPR3)
"RTN","LRAPBR1",329,0)
 D:LRPR3 NEWLN^LRAPUTL(LRPR1,LRPR2)
"RTN","LRAPBR1",330,0)
 D:'LRPR3 GLBWRT^LRAPUTL(LRPR1,LRPR2)
"RTN","LRAPBR1",331,0)
 Q
"RTN","LRAPBR1",332,0)
 ;
"RTN","LRAPBR1",333,0)
 ;
"RTN","LRAPBR1",334,0)
TEXT1 ;Text for top of report
"RTN","LRAPBR1",335,0)
 ;;BRIEF CLINICAL HISTORY:
"RTN","LRAPBR1",336,0)
 ;;PREOPERATIVE DIAGNOSIS:
"RTN","LRAPBR1",337,0)
 ;;OPERATIVE FINDINGS:
"RTN","LRAPBR1",338,0)
 ;;POSTOPERATIVE DIAGNOSIS:
"RTN","LRAPBR1",339,0)
 ;
"RTN","LRAPBR1",340,0)
TEXT2 ;Descriptive text based on section
"RTN","LRAPBR1",341,0)
 ;;SP;Pathology Resident:
"RTN","LRAPBR1",342,0)
 ;;CY;Screened by:
"RTN","LRAPBR1",343,0)
 ;;EM;Prepared by:
"RTN","LRAPBR1",344,0)
 ;
"RTN","LRAPBR1",345,0)
FIELDS ;Field numbers for word processing fields
"RTN","LRAPBR1",346,0)
 ;;1.3;.13;6
"RTN","LRAPBR1",347,0)
 ;;1;.03;7
"RTN","LRAPBR1",348,0)
 ;;1.1;.04;4
"RTN","LRAPBR1",349,0)
 ;;1.4;.14;5
"RTN","LRAPBR1",350,0)
 ;
"RTN","LRAPBR1",351,0)
TEXTCHK ; update text line counter if it is missing (Remedy 116253)
"RTN","LRAPBR1",352,0)
 N I,X,DATA
"RTN","LRAPBR1",353,0)
 S I=0
"RTN","LRAPBR1",354,0)
 K ^TMP("WP",$J)
"RTN","LRAPBR1",355,0)
 S X=$G(^LR(LRDFN,LRSS,LRI,LRV,0))
"RTN","LRAPBR1",356,0)
 I X'="",$L(X,"^")=1 D
"RTN","LRAPBR1",357,0)
 . F  S I=$O(^LR(LRDFN,LRSS,LRI,LRV,I)) Q:I=""  D
"RTN","LRAPBR1",358,0)
 . . S DATA=$G(^LR(LRDFN,LRSS,LRI,LRV,I,0))
"RTN","LRAPBR1",359,0)
 . . S ^TMP("WP",$J,I,0)=DATA
"RTN","LRAPBR1",360,0)
 I $D(^TMP("WP",$J)) D
"RTN","LRAPBR1",361,0)
 . D WP^DIE(63.08,LRI_","_LRDFN_",",LRV,"","^TMP(""WP"",$J)")
"RTN","LRAPBR1",362,0)
 . K ^TMP("WP",$J)
"RTN","LRAPBR1",363,0)
 Q
"RTN","LRAPBR1",364,0)
 ;
"RTN","LRAPBR1",365,0)
 ;
"RTN","LRAPBR1",366,0)
ATTEND(LRMD) ; Retrieve surgeon/attending
"RTN","LRAPBR1",367,0)
 ; Call with LRMD = current ordering provider array, pass by reference
"RTN","LRAPBR1",368,0)
 ;
"RTN","LRAPBR1",369,0)
 ; Update ordering provider/surgeon if Surgery package indicates change
"RTN","LRAPBR1",370,0)
 ;
"RTN","LRAPBR1",371,0)
 N LRIENS,LRX
"RTN","LRAPBR1",372,0)
 S LRIENS=LRDFN_","_LRSS_","_LRI_",0",(LRMD("SR-ATTEND"),LRMD("SR-SURGEON"))=""
"RTN","LRAPBR1",373,0)
 S LRX=$O(^LR(LRDFN,"EPR","AD",LRIENS,1,0))
"RTN","LRAPBR1",374,0)
 I LRX<1 Q
"RTN","LRAPBR1",375,0)
 ;
"RTN","LRAPBR1",376,0)
 N LRDATA,LRJ,LRORDP,LRREF,LRSRDATA,LRSRTN
"RTN","LRAPBR1",377,0)
 S LRREF=LRX_","_LRDFN_","
"RTN","LRAPBR1",378,0)
 D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRAPBR1",379,0)
 S LRSRTN=LRDATA(63.00013,LRREF,1,"I")
"RTN","LRAPBR1",380,0)
 ;
"RTN","LRAPBR1",381,0)
 I $P(LRSRTN,";",2)'="SRF(" Q
"RTN","LRAPBR1",382,0)
 ;
"RTN","LRAPBR1",383,0)
 S LRORDP=+$P(^LR(LRDFN,LRSS,LRI,0),"^",7) ; Retrieve current surgeon/provider from file #63
"RTN","LRAPBR1",384,0)
 D SRCASE^LRUEPR(.LRSRDATA,+LRSRTN)
"RTN","LRAPBR1",385,0)
 ;
"RTN","LRAPBR1",386,0)
 I $G(LRSRDATA("ERR")) D  Q
"RTN","LRAPBR1",387,0)
 . S LRMD("ERR")=LRSRDATA("ERR")
"RTN","LRAPBR1",388,0)
 . D SRCASERR^LRUEPR(LRREF,LRSRTN,LRSRDATA("ERR"))
"RTN","LRAPBR1",389,0)
 ;
"RTN","LRAPBR1",390,0)
 F LRJ=.14,123 D
"RTN","LRAPBR1",391,0)
 . S LRX=LRSRDATA(130,+LRSRTN_",",LRJ,"I")
"RTN","LRAPBR1",392,0)
 . I LRX,LRORDP,LRX'=LRORDP S LRMD("SR-SURGEON")=$S(LRJ=.14:" Current Surgeon",LRJ=123:"Current Provider",1:"")_": "_$$NAME^XUSER(LRX,"G")
"RTN","LRAPBR1",393,0)
 F LRJ=.164,124 D
"RTN","LRAPBR1",394,0)
 . S LRX=LRSRDATA(130,+LRSRTN_",",LRJ,"I")
"RTN","LRAPBR1",395,0)
 . I LRX S LRMD("SR-ATTEND")=$S(LRJ=.164:" Attending Surgeon",LRJ=124:"Attending Provider",1:"")_": "_$$NAME^XUSER(LRX,"G")
"RTN","LRAPBR1",396,0)
 ;
"RTN","LRAPBR1",397,0)
 Q
"RTN","LRAPBR4")
0^183^B44175433
"RTN","LRAPBR4",1,0)
LRAPBR4 ;DALOI/STAFF - Autopsy Browser Display ;04/06/10  15:52
"RTN","LRAPBR4",2,0)
 ;;5.2;LAB SERVICE;**259,317,350**;Sep 27, 1994;Build 230
"RTN","LRAPBR4",3,0)
 ;
"RTN","LRAPBR4",4,0)
 ; Reference to ^DPT supported by IA #918
"RTN","LRAPBR4",5,0)
 ;
"RTN","LRAPBR4",6,0)
 Q
"RTN","LRAPBR4",7,0)
 ;
"RTN","LRAPBR4",8,0)
ENTER ; Entry point
"RTN","LRAPBR4",9,0)
 N LRTEXT,LRFILE,LRFIELD,LRTMP,LRFLG
"RTN","LRAPBR4",10,0)
 D INIT
"RTN","LRAPBR4",11,0)
 Q:'$D(^LR(LRDFN,LRSS))
"RTN","LRAPBR4",12,0)
 D HEADER
"RTN","LRAPBR4",13,0)
 D BODY
"RTN","LRAPBR4",14,0)
 D:'LRTIU POW
"RTN","LRAPBR4",15,0)
 D:LRTIU ESIGLN^LRAPBR1
"RTN","LRAPBR4",16,0)
 D FOOTER
"RTN","LRAPBR4",17,0)
 Q
"RTN","LRAPBR4",18,0)
 ;
"RTN","LRAPBR4",19,0)
 ;
"RTN","LRAPBR4",20,0)
INIT ; Initialize variables
"RTN","LRAPBR4",21,0)
 S X=^LR(LRDFN,0) D ^LRUP
"RTN","LRAPBR4",22,0)
 Q:'$D(^LR(LRDFN,LRSS))
"RTN","LRAPBR4",23,0)
 F LRTMP=1:1 D  Q:LRFIELD="Q"
"RTN","LRAPBR4",24,0)
 . S X=$T(VART1+LRTMP)
"RTN","LRAPBR4",25,0)
 . S LRFIELD=$P(X,";",2),VAR=$P(X,";",3),LRFLG=$P(X,";",4)
"RTN","LRAPBR4",26,0)
 . Q:LRFIELD="Q"
"RTN","LRAPBR4",27,0)
 . S @VAR=$$GET1^DIQ(63,LRDFN_",",LRFIELD,LRFLG)
"RTN","LRAPBR4",28,0)
 . I VAR["LRM",@VAR S X=@VAR D D^LRUA S @VAR=X
"RTN","LRAPBR4",29,0)
 S LRH(2)=$E(LRH(2),2,3)
"RTN","LRAPBR4",30,0)
 ;
"RTN","LRAPBR4",31,0)
 ; Get date of death (LRH)
"RTN","LRAPBR4",32,0)
 S DA=LRDFN D D^LRAUAW
"RTN","LRAPBR4",33,0)
 S Y=LR(63,12) D D^LRU S LRH=Y
"RTN","LRAPBR4",34,0)
 ;
"RTN","LRAPBR4",35,0)
 S LCT=0
"RTN","LRAPBR4",36,0)
 S:'LRTIU GROOT="^TMP(""LRAPBR"",$J,"
"RTN","LRAPBR4",37,0)
 S:LRTIU GROOT="^TMP(""TIUP"",$J,"
"RTN","LRAPBR4",38,0)
 K ^TMP("LRAPBR",$J)
"RTN","LRAPBR4",39,0)
 ;
"RTN","LRAPBR4",40,0)
 ; If reporting lab available then use instead of VistA site name.
"RTN","LRAPBR4",41,0)
 S LRX=$P($G(^LR(LRDFN,"AU")),"^",18)
"RTN","LRAPBR4",42,0)
 I LRX S LRQ(1)=$$NAME^XUAF4(LRX)
"RTN","LRAPBR4",43,0)
 ;
"RTN","LRAPBR4",44,0)
 Q
"RTN","LRAPBR4",45,0)
 ;
"RTN","LRAPBR4",46,0)
 ;
"RTN","LRAPBR4",47,0)
BODY ; Report body
"RTN","LRAPBR4",48,0)
 D:LRTIU GLENTRY("$TEXT",,1)
"RTN","LRAPBR4",49,0)
 S LR("F")=1
"RTN","LRAPBR4",50,0)
 I LRH(1)="" D
"RTN","LRAPBR4",51,0)
 . D GLENTRY("+*+* REPORT INCOMPLETE *+*+",20,1)
"RTN","LRAPBR4",52,0)
 . D GLENTRY(,,1)
"RTN","LRAPBR4",53,0)
 D MODAUCK
"RTN","LRAPBR4",54,0)
 ; Display supplementary report header if one or more has been added
"RTN","LRAPBR4",55,0)
 I $P($G(^LR(LRDFN,84,0)),U,4) D
"RTN","LRAPBR4",56,0)
 . S LRTEXT="*+* SUPPLEMENTARY REPORT HAS BEEN ADDED *+*"
"RTN","LRAPBR4",57,0)
 . S LRTEXT=$$CJ^XLFSTR(LRTEXT,IOM)
"RTN","LRAPBR4",58,0)
 . D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR4",59,0)
 . S LRTEXT="*+* REFER TO BOTTOM OF REPORT *+*"
"RTN","LRAPBR4",60,0)
 . S LRTEXT=$$CJ^XLFSTR(LRTEXT,IOM)
"RTN","LRAPBR4",61,0)
 . D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR4",62,0)
 D GLENTRY(,,1)
"RTN","LRAPBR4",63,0)
 F LRV=81,82,84 D
"RTN","LRAPBR4",64,0)
 . D:LRV'=84 GLENTRY(,,1)
"RTN","LRAPBR4",65,0)
 . D:LRV=81 GLENTRY(LRAU(1),0)
"RTN","LRAPBR4",66,0)
 . D:LRV=82 GLENTRY(LRAU(2),0)
"RTN","LRAPBR4",67,0)
 . I LRV'=84 D
"RTN","LRAPBR4",68,0)
 . . D GLENTRY(,,1)
"RTN","LRAPBR4",69,0)
 . . S LRFILE=63,LRIENS=LRDFN_","
"RTN","LRAPBR4",70,0)
 . . S LRFIELD=$S(LRV=81:32.2,1:32.3)
"RTN","LRAPBR4",71,0)
 . . D WP
"RTN","LRAPBR4",72,0)
 . I LRV=84 D
"RTN","LRAPBR4",73,0)
 . . N LRIENS1,LRIENS
"RTN","LRAPBR4",74,0)
 . . S LRFILE=63.324
"RTN","LRAPBR4",75,0)
 .  . S LRA=0 F  S LRA=$O(^LR(LRDFN,84,LRA)) Q:'LRA  D
"RTN","LRAPBR4",76,0)
 . . . S LRIENS1=LRA_","_LRDFN_","
"RTN","LRAPBR4",77,0)
 . . . D GLENTRY("SUPPLEMENTARY REPORT DATE: ",0,1)
"RTN","LRAPBR4",78,0)
 . . . S LRB=$$GET1^DIQ(LRFILE,LRIENS1,.01)
"RTN","LRAPBR4",79,0)
 . . . D GLENTRY(LRB,BTAB)
"RTN","LRAPBR4",80,0)
 . . . D:$P($G(^LR(LRDFN,84,LRA,2,0)),U,4) SUPA
"RTN","LRAPBR4",81,0)
 . . . S LRFIELD=1,LRIENS=LRIENS1 D WP
"RTN","LRAPBR4",82,0)
 . . . D GLENTRY(,,1)
"RTN","LRAPBR4",83,0)
 . I LRV'=84 D DASH,GLENTRY(,,1)
"RTN","LRAPBR4",84,0)
 D ^LRAPBR5
"RTN","LRAPBR4",85,0)
 Q
"RTN","LRAPBR4",86,0)
 ;
"RTN","LRAPBR4",87,0)
 ;
"RTN","LRAPBR4",88,0)
WP ; Display word procesing fields
"RTN","LRAPBR4",89,0)
 K LRTMP,^UTILITY($J,"W")
"RTN","LRAPBR4",90,0)
 N LRX,DIWR,DIWL,LRA1
"RTN","LRAPBR4",91,0)
 S LRX=$$GET1^DIQ(LRFILE,LRIENS,LRFIELD,"","LRTMP","LRERR(1)")
"RTN","LRAPBR4",92,0)
 S DIWR=IOM-5,DIWL=5,DIWF=""
"RTN","LRAPBR4",93,0)
 S LRX=+$$GET1^DID(LRFILE,LRFIELD,"","SPECIFIER","LRERR(2)")
"RTN","LRAPBR4",94,0)
 I $$GET1^DID(LRX,.01,"","SPECIFIER","LRERR(2)")["L" S DIWF="N"
"RTN","LRAPBR4",95,0)
 S LRA1=0 F  S LRA1=$O(LRTMP(LRA1)) Q:'LRA1  S X=LRTMP(LRA1) D ^DIWP
"RTN","LRAPBR4",96,0)
 S LRA1=0 F  S LRA1=$O(^UTILITY($J,"W",DIWL,LRA1)) Q:'LRA1  D
"RTN","LRAPBR4",97,0)
 .D GLENTRY(^UTILITY($J,"W",DIWL,LRA1,0),DIWL,1)
"RTN","LRAPBR4",98,0)
 K ^UTILITY($J,"W")
"RTN","LRAPBR4",99,0)
 Q
"RTN","LRAPBR4",100,0)
 ;
"RTN","LRAPBR4",101,0)
 ;
"RTN","LRAPBR4",102,0)
SUPA ; Print supplementary report audit information
"RTN","LRAPBR4",103,0)
 N LRFILE,LRIENS1,LRWP
"RTN","LRAPBR4",104,0)
 S LRTEXT="*+* SUPPLEMENTARY REPORT HAS BEEN ADDED/MODIFIED *+*"
"RTN","LRAPBR4",105,0)
 S LRTEXT=$$CJ^XLFSTR(LRTEXT,IOM)
"RTN","LRAPBR4",106,0)
 D GLENTRY(LRTEXT,,1)
"RTN","LRAPBR4",107,0)
 S LRTEXT="(Added/Last" D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",108,0)
 S (A,B)=0 F  S A=$O(^LR(LRDFN,84,LRA,2,A)) Q:'A  D
"RTN","LRAPBR4",109,0)
 .S B=A
"RTN","LRAPBR4",110,0)
 Q:'$D(^LR(LRDFN,84,LRA,2,B,0))
"RTN","LRAPBR4",111,0)
 S A=^(0),Y=+A,LRSGN=" typed by ",LRDSC=" modified: ",A2=$P(A,"^",2)
"RTN","LRAPBR4",112,0)
 ;If supp rpt is released, display 'signed by' instead of 'typed by'
"RTN","LRAPBR4",113,0)
 I $P(A,"^",3) S LRSGN=" signed by ",LRDSC=" released: ",A2=$P(A,"^",3),Y=$P(A,"^",4)
"RTN","LRAPBR4",114,0)
 S A2=$S($D(^VA(200,A2,0)):$P(^(0),"^"),1:A2)
"RTN","LRAPBR4",115,0)
 ;S LRFILE=63.3242,LRIENS1=B_","_LRA_","_LRDFN_","
"RTN","LRAPBR4",116,0)
 ;D GETS^DIQ(LRFILE,LRIENS1,"*","","LRWP")
"RTN","LRAPBR4",117,0)
 ;S Y=LRWP(LRFILE,LRIENS1,.01)
"RTN","LRAPBR4",118,0)
 ;S A=LRWP(LRFILE,LRIENS1,.02)
"RTN","LRAPBR4",119,0)
 D D^LRU
"RTN","LRAPBR4",120,0)
 S LRTEXT=LRDSC_Y_LRSGN_A2_")" D GLENTRY(LRTEXT,BTAB)
"RTN","LRAPBR4",121,0)
 Q
"RTN","LRAPBR4",122,0)
 ;
"RTN","LRAPBR4",123,0)
 ;
"RTN","LRAPBR4",124,0)
HEADER ;
"RTN","LRAPBR4",125,0)
 S LRQ=LRQ+1
"RTN","LRAPBR4",126,0)
 D:LRTIU GLENTRY("$APHDR",,1)
"RTN","LRAPBR4",127,0)
 F I=1:1:2 D GLENTRY(,,1)
"RTN","LRAPBR4",128,0)
 ;
"RTN","LRAPBR4",129,0)
 ; Print names of facilities printing/releasing this report.
"RTN","LRAPBR4",130,0)
 N LRN,LRPL,LRRL,LRX
"RTN","LRAPBR4",131,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1,'LRTIU D
"RTN","LRAPBR4",132,0)
 . D PFAC^LRRP1(DUZ(2),"",1,.LRPL)
"RTN","LRAPBR4",133,0)
 . S LRN=0
"RTN","LRAPBR4",134,0)
 . F  S LRN=$O(LRPL(LRN)) Q:'LRN  D GLENTRY(LRPL(LRN),"",1)
"RTN","LRAPBR4",135,0)
 ;
"RTN","LRAPBR4",136,0)
 ; Display reporting lab
"RTN","LRAPBR4",137,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LRAPBR4",138,0)
 . S LRX=+$P($G(^LR(LRDFN,"AU")),"^",18)
"RTN","LRAPBR4",139,0)
 . I LRX<1 Q
"RTN","LRAPBR4",140,0)
 . D RL^LRRP1(LRX,1,.LRRL),GLENTRY("","",1)
"RTN","LRAPBR4",141,0)
 . S LRN=0
"RTN","LRAPBR4",142,0)
 . F  S LRN=$O(LRRL(LRN)) Q:'LRN  D GLENTRY(LRRL(LRN),"",1)
"RTN","LRAPBR4",143,0)
 ;
"RTN","LRAPBR4",144,0)
 D DASH
"RTN","LRAPBR4",145,0)
 S LRTEXT="CLINICAL RECORD |" D GLENTRY(LRTEXT,5,1)
"RTN","LRAPBR4",146,0)
 S LRTEXT="AUTOPSY PROTOCOL" D GLENTRY(LRTEXT,40)
"RTN","LRAPBR4",147,0)
 D DASH
"RTN","LRAPBR4",148,0)
 S LRTEXT="Date died: "_LRH D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",149,0)
 S LRTEXT="| Autopsy date: "_LRH(1) D GLENTRY(LRTEXT,40)
"RTN","LRAPBR4",150,0)
 S LRTEXT="Resident: "_LRM(2) D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",151,0)
 S LRTEXT="| "_$E(LRS(3),1,13) D GLENTRY(LRTEXT,40)
"RTN","LRAPBR4",152,0)
 S LRTEXT="Autopsy No. "_$S(LRQ(8)'="":LRQ(8)_LRH(2)_" "_LRAC,1:LRAC)
"RTN","LRAPBR4",153,0)
 D GLENTRY(LRTEXT,56)
"RTN","LRAPBR4",154,0)
 D DASH
"RTN","LRAPBR4",155,0)
 Q
"RTN","LRAPBR4",156,0)
 ;
"RTN","LRAPBR4",157,0)
 ;
"RTN","LRAPBR4",158,0)
MODAUCK ; Display modified banner if required
"RTN","LRAPBR4",159,0)
 S LRAPMR=$$GET1^DIQ(63,LRDFN,102,"I")
"RTN","LRAPBR4",160,0)
 Q:'LRAPMR
"RTN","LRAPBR4",161,0)
 S LRAPMD=$$GET1^DIQ(63,LRDFN,102.2,"I")
"RTN","LRAPBR4",162,0)
 D GLENTRY("","",1)
"RTN","LRAPBR4",163,0)
 S LRTEXT=""
"RTN","LRAPBR4",164,0)
 F LRCNT=1:1:$S(LRAPMD:29,1:31) D
"RTN","LRAPBR4",165,0)
 .S LRTEXT=LRTEXT_"*"
"RTN","LRAPBR4",166,0)
 S LRTEXT=LRTEXT_" MODIFIED "
"RTN","LRAPBR4",167,0)
 S LRTEXT=LRTEXT_$S(LRAPMD:"DIAGNOSIS ",1:"REPORT ")
"RTN","LRAPBR4",168,0)
 F LRCNT=1:1:$S(LRAPMD:29,1:31) D
"RTN","LRAPBR4",169,0)
 .S LRTEXT=LRTEXT_"*"
"RTN","LRAPBR4",170,0)
 D GLENTRY(LRTEXT,"",1)
"RTN","LRAPBR4",171,0)
 D GLENTRY("","",1)
"RTN","LRAPBR4",172,0)
 Q
"RTN","LRAPBR4",173,0)
 ;
"RTN","LRAPBR4",174,0)
 ;
"RTN","LRAPBR4",175,0)
POW ; Determine POW or Persian Gulf status
"RTN","LRAPBR4",176,0)
 I $P($G(^LR(LRDFN,0)),"^",2)=2 D
"RTN","LRAPBR4",177,0)
 .S LRPOW=0
"RTN","LRAPBR4",178,0)
 .I $D(^DPT(DFN,.52)) S:$P(^(.52),U,5)="Y" LRPOW=1
"RTN","LRAPBR4",179,0)
 .I $D(^DPT(DFN,.322)) S:$P($G(^(.322)),"^",10)="Y" LRPOW=1
"RTN","LRAPBR4",180,0)
 .D ^LRAPBRPW
"RTN","LRAPBR4",181,0)
 .K LRPOW
"RTN","LRAPBR4",182,0)
 Q
"RTN","LRAPBR4",183,0)
 ;
"RTN","LRAPBR4",184,0)
 ;
"RTN","LRAPBR4",185,0)
FOOTER ; Report footer
"RTN","LRAPBR4",186,0)
 D:LRTIU GLENTRY("$FTR",,1)
"RTN","LRAPBR4",187,0)
 D DASH
"RTN","LRAPBR4",188,0)
 D GLENTRY(,,1)
"RTN","LRAPBR4",189,0)
 I LRH(3)=""&(LRH(17)'="") D
"RTN","LRAPBR4",190,0)
 . S LRTEXT="| Provisional Anatomic Dx"
"RTN","LRAPBR4",191,0)
 . D GLENTRY(LRTEXT,55)
"RTN","LRAPBR4",192,0)
 S LRTEXT="Pathologist: "_LRM(3) D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",193,0)
 D GLENTRY(LRW(9),52)
"RTN","LRAPBR4",194,0)
 S LRTEXT="| Date " D GLENTRY(LRTEXT,55)
"RTN","LRAPBR4",195,0)
 S LRTEXT=$E($S(LRH(3)'="":LRH(3),1:LRH(17)),1,12) D GLENTRY(LRTEXT,BTAB)
"RTN","LRAPBR4",196,0)
 D DASH
"RTN","LRAPBR4",197,0)
 S LRTEXT=$E(LRQ(1),1,IOM-20) D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",198,0)
 S LRTEXT="AUTOPSY PROTOCOL" D GLENTRY(LRTEXT,IOM-17)
"RTN","LRAPBR4",199,0)
 S LRTEXT="Patient: "_$E(LRP,1,30) D GLENTRY(LRTEXT,0,1)
"RTN","LRAPBR4",200,0)
 D GLENTRY(SSN,43),GLENTRY("SEX:"_SEX,56),GLENTRY("DOB:"_DOB,63)
"RTN","LRAPBR4",201,0)
 D GLENTRY($E(LRLLOC,1,22),0,1)
"RTN","LRAPBR4",202,0)
 S LRTEXT="Physician: "_$E(LRM(1),1,28) D GLENTRY(LRTEXT,23)
"RTN","LRAPBR4",203,0)
 S LRTEXT="AGE AT DEATH:"_$J(AGE,3) D GLENTRY(LRTEXT,63)
"RTN","LRAPBR4",204,0)
 Q
"RTN","LRAPBR4",205,0)
 ;
"RTN","LRAPBR4",206,0)
 ;
"RTN","LRAPBR4",207,0)
DASH ;
"RTN","LRAPBR4",208,0)
 D GLENTRY(LR("%"),0,1)
"RTN","LRAPBR4",209,0)
 Q
"RTN","LRAPBR4",210,0)
 ;
"RTN","LRAPBR4",211,0)
 ;
"RTN","LRAPBR4",212,0)
GLENTRY(LRPR1,LRPR2,LRPR3) ; Write to global
"RTN","LRAPBR4",213,0)
 ; LRPR1 = Text to be written to global
"RTN","LRAPBR4",214,0)
 ; LRPR2 = Tab position
"RTN","LRAPBR4",215,0)
 ; LRPR3 = 1 means start a new line.  Othewise, write on current line.
"RTN","LRAPBR4",216,0)
 S LRPR1=$G(LRPR1),LRPR2=+$G(LRPR2),LRPR3=+$G(LRPR3)
"RTN","LRAPBR4",217,0)
 D:LRPR3 NEWLN^LRAPUTL(LRPR1,LRPR2)
"RTN","LRAPBR4",218,0)
 D:'LRPR3 GLBWRT^LRAPUTL(LRPR1,LRPR2)
"RTN","LRAPBR4",219,0)
 Q
"RTN","LRAPBR4",220,0)
 ;
"RTN","LRAPBR4",221,0)
 ;
"RTN","LRAPBR4",222,0)
VART1 ;Setup variables
"RTN","LRAPBR4",223,0)
 ;14;LRAC;I;AUTOPSY ACCESSION #
"RTN","LRAPBR4",224,0)
 ;13.5;LRM(2);I;RESIDENT PATHOLOGIST
"RTN","LRAPBR4",225,0)
 ;12.1;LRM(1);I;PHYSICIAN
"RTN","LRAPBR4",226,0)
 ;13.01;LRW(9);I;AUTOPSY TYPIST
"RTN","LRAPBR4",227,0)
 ;13.6;LRM(3);I;SENIOR PATHOLOGIST
"RTN","LRAPBR4",228,0)
 ;11;LRH(1);;AUTOPSY DATE/TIME
"RTN","LRAPBR4",229,0)
 ;11;LRH(2);I;AUTOPSY DATE/TIME 2 DIGIT YEAR
"RTN","LRAPBR4",230,0)
 ;13;LRH(3);;DATE AUTOPSY REPORT COMPLETED
"RTN","LRAPBR4",231,0)
 ;14.9;LRH(17);;PROVISIONAL ANAT DX DATE
"RTN","LRAPBR4",232,0)
 ;14.1;LRLLOC;I;LOCATION
"RTN","LRAPBR4",233,0)
 ;12.5;AGE;I;AGE AT DEATH
"RTN","LRAPBR4",234,0)
 ;14.5;LRSVC;;SERVICE
"RTN","LRAPBR4",235,0)
 ;13.7;LRS(3);;AUTOPSY TYPE
"RTN","LRAPBR4",236,0)
 ;Q
"RTN","LRAPBS")
0^98^B9302870
"RTN","LRAPBS",1,0)
LRAPBS ;AVAMC/REG - BLOCK/SLIDE DATA ENTRY ;11/18/11  15:15
"RTN","LRAPBS",2,0)
 ;;5.2;LAB SERVICE;**72,350**;Sep 27, 1994;Build 230
"RTN","LRAPBS",3,0)
 ;
"RTN","LRAPBS",4,0)
 D ^LRAP G:'$D(Y) END K DR,Y D A^LRAPWU,S^LRAPST W !! D @LRSS G END
"RTN","LRAPBS",5,0)
 ;
"RTN","LRAPBS",6,0)
SP S (LRK(1),LRK)="",J=0 D:LRCAPA SP^LRAPBS1 Q:J  F X=1,2,3 S Y(X)=$P(^DD(63.812,X,0),"^") W !?15,X,". ",Y(X)
"RTN","LRAPBS",7,0)
 S Z="",B=1 F A=0:0 W !,"Selection (",B,"): " R X:DTIME Q:X=""!(X[U)  D:X<1!(X>3)!(X'=+X) HELP I X>0&(X<4)&(X=+X) W " ",Y(X) S:Z'[X Z=Z_X_";" S B=B+1 Q:B=4
"RTN","LRAPBS",8,0)
 Q:X[U  I Z="" S Z="1;2;3" W "  All selected."
"RTN","LRAPBS",9,0)
 S DR=.012,(DR(3,63.8121),DR(3,63.822))=".01;.02//^S X=LRK(1);.04;1//^S X=""H & E STAIN""",DR(3,63.824)=".01;.02//^S X=LRK(1);.04;1//^S X=""FROZEN SECTION H & E"""
"RTN","LRAPBS",10,0)
 S (DR(4,63.8122),DR(4,63.823),DR(4,63.825))=".01;.02//1;.03;.04//^S X=LRK",DR(2,63.812)=".06R;.07R;"_Z D ^LRAPBS1 Q
"RTN","LRAPBS",11,0)
 ;
"RTN","LRAPBS",12,0)
CY S (LRK,LRK(1))="" F X=1:1:5 S Y(X)=$P(^DD(63.902,X,0),"^") W !?15,X,". ",Y(X)
"RTN","LRAPBS",13,0)
 S Z="",B=1 F A=0:0 W !,"Selection (",B,"): " R X:DTIME Q:X=""!(X[U)  D:X<1!(X>5)!(X'=+X) HELP I X>0&(X<6)&(X=+X) W " ",Y(X) S:Z'[X Z=Z_X_";" S B=B+1 Q:B=6
"RTN","LRAPBS",14,0)
 Q:X[U  I Z="" S Z="1;2;3;4;5" W "  All selected."
"RTN","LRAPBS",15,0)
 S DR=.012,DR(3,63.9121)=".01;1//^S X=""PAP STAIN""",DR(3,63.922)=".01;1//^S X=""H & E STAIN""",DR(4,63.9122)=".01;.02;.03;.04//^S X=LRK",DR(4,63.923)=".01;.02;.03;.04//^S X=LRK"
"RTN","LRAPBS",16,0)
 S (DR(63.9024),DR(3,9025))=".01;1//^S X=""PAP STAIN""",DR(3,63.924)=".01;1//^S X=""PAP STAIN,MEMBRANE FILTER""",(DR(4,63.9241),DR(4,63.90241),DR(4,63.90251))=".01;.02;.03;.04//^S X=LRK"
"RTN","LRAPBS",17,0)
 S DR(2,63.902)=".06R;.07R;"_Z D ^LRAPBS1 Q
"RTN","LRAPBS",18,0)
 ;
"RTN","LRAPBS",19,0)
EM S J=0,X="EM EMBEDDING" D X^LRUWK S LRW(1)=LRT K LRT Q:J
"RTN","LRAPBS",20,0)
 S DR=.012,DR(3,63.2021)=".01;.02//^S X=LRK(1);1",DR(4,63.20211)=".01;.02;.04//^S X=LRK" F X=2:1:5 S LRW(X)=""
"RTN","LRAPBS",21,0)
 S DR(2,63.202)=".06R;.07R;1" D ^LRAPBS1 Q
"RTN","LRAPBS",22,0)
AU D AU^LRAPBS1 Q:J  S DR=33,DR(2,63.033)=".01;1",DR(3,63.331)=".01;.02//^S X=LRK(1);1",DR(4,63.3311)=".01;.02//1;.03;.04//^S X=LRK" D ^LRAPBS1 Q
"RTN","LRAPBS",23,0)
 Q
"RTN","LRAPBS",24,0)
 ;
"RTN","LRAPBS",25,0)
HELP W $C(7),!!,"Enter a number from 1 to ",$S(LRSS="SP":3,LRSS="CY":5,1:""),! Q
"RTN","LRAPBS",26,0)
 ;
"RTN","LRAPBS",27,0)
EN S LRDICS="SP" D ^LRAP G:'$D(Y) END S LRF=1,J=0,LR(1)=$P(^DD(63.812,.04,0),U,3)
"RTN","LRAPBS",28,0)
 S X="ROUTINE GROSS SURGICAL" D X^LRUWK S LRW(1)=LRT K LRT
"RTN","LRAPBS",29,0)
 S X="EXTENSIVE GROSS SURGICAL" D X^LRUWK S LRW(2)=LRT K LRT
"RTN","LRAPBS",30,0)
 S X="TECHNICAL ASSISTANCE SURGICAL" D X^LRUWK S LRW(3)=LRT K LRT
"RTN","LRAPBS",31,0)
 Q:J  S DR=.012,DR(2,63.812)=".04;.03//^S X=LRK" D ^LRAPBS1 Q
"RTN","LRAPBS",32,0)
 ;
"RTN","LRAPBS",33,0)
END D V^LRU Q
"RTN","LRAPCUM")
0^136^B23321950
"RTN","LRAPCUM",1,0)
LRAPCUM ;DALOI/STAFF - AP PATIENT CUM ;Sep 17,2007
"RTN","LRAPCUM",2,0)
 ;;5.2;LAB SERVICE;**34,72,173,248,259,350**;Sep 27, 1994;Build 230
"RTN","LRAPCUM",3,0)
 ;
"RTN","LRAPCUM",4,0)
 ;
"RTN","LRAPCUM",5,0)
 S IOP="HOME" D ^%ZIS,L^LRU
"RTN","LRAPCUM",6,0)
 W !!?15,LRAA(1)," PATIENT REPORT(S) DISPLAY"
"RTN","LRAPCUM",7,0)
P W ! S LR("Q")=0 K DIC D ^LRDPA Q:LRDFN=-1  D R G P
"RTN","LRAPCUM",8,0)
 ;
"RTN","LRAPCUM",9,0)
R W !!,"Is this the patient " S %=1 D YN^LRU Q:%'=1
"RTN","LRAPCUM",10,0)
 I '$D(^LR(LRDFN,LRSS)) W $C(7),!!,"No ",LRAA(1)," reports on file",! Q
"RTN","LRAPCUM",11,0)
 D S F LRI=0:0 W @IOF S LRA(1)=21,LRI=$O(^LR(LRDFN,LRSS,LRI)) Q:'LRI  S B=$G(^(LRI,0)) I B D W Q:LRA(2)?1P
"RTN","LRAPCUM",12,0)
 Q
"RTN","LRAPCUM",13,0)
C S C=0 F LRZ=0:1 S C=$O(^LR(LRDFN,LRSS,LRI,LRV,C)) Q:'C  D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  W !?2,$P(^LR(LRDFN,LRSS,LRI,LRV,C,0),U)
"RTN","LRAPCUM",14,0)
 Q
"RTN","LRAPCUM",15,0)
F D E
"RTN","LRAPCUM",16,0)
 K ^UTILITY($J,"W")
"RTN","LRAPCUM",17,0)
 S C=0 F LRZ=0:1 S C=$O(^LR(LRDFN,LRSS,LRI,LRV,C)) Q:'C!(LRA(2)?1P)  D
"RTN","LRAPCUM",18,0)
 .D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P
"RTN","LRAPCUM",19,0)
 .S X=^LR(LRDFN,LRSS,LRI,LRV,C,0),X=$P(X,U)
"RTN","LRAPCUM",20,0)
 .D ^DIWP
"RTN","LRAPCUM",21,0)
 Q:LRA(2)?1P  D:LRZ ^DIWW
"RTN","LRAPCUM",22,0)
 Q
"RTN","LRAPCUM",23,0)
 ;
"RTN","LRAPCUM",24,0)
 ;
"RTN","LRAPCUM",25,0)
E K ^TMP($J) S DIWL=3,DIWR=IOM-3,DIWF="W"
"RTN","LRAPCUM",26,0)
 Q
"RTN","LRAPCUM",27,0)
 ;
"RTN","LRAPCUM",28,0)
 ;
"RTN","LRAPCUM",29,0)
W S Y=+B D D^LRU S LRW(1)=Y,Y=$P(B,"^",10) D D^LRU S LRW(10)=Y,Y=$P(B,"^",3) D D^LRU S LRW(3)=Y,X=$P(B,"^",2) D:X D^LRUA S LRW(2)=X,LRW(11)=$P(B,"^",11)
"RTN","LRAPCUM",30,0)
 S X=$P(B,"^",4) D:X D^LRUA S LRW(4)=X,X=$P(B,"^",7) D:X D^LRUA S LRW(7)=X
"RTN","LRAPCUM",31,0)
 ;
"RTN","LRAPCUM",32,0)
 W !,"Date Spec taken: ",LRW(1),?38,"Pathologist:",LRW(2),!,"Date Spec rec'd: ",LRW(10),?38,$S(LRSS="SP":"Resident: ",1:"Tech: "),LRW(4)
"RTN","LRAPCUM",33,0)
 W !,$S($L(LRW(3)):"Date  completed: ",1:"REPORT INCOMPLETE"),LRW(3),?38,"Accession #: ",$P(B,"^",6),!,"Submitted by: ",$P(B,"^",5),?38,"Practitioner:",LRW(7),!,LR("%")
"RTN","LRAPCUM",34,0)
 I LRW(11)="" D A W !,$C(7),"Report not verified",! G MORE
"RTN","LRAPCUM",35,0)
 I $D(^LR(LRDFN,LRSS,LRI,.1)) W !,"Specimen: " S LRV=.1 D C Q:LRA(2)?1P
"RTN","LRAPCUM",36,0)
 I $D(^LR(LRDFN,LRSS,LRI,.2)) W !,"Brief Clinical History:" S LRV=.2 D F Q:LRA(2)?1P
"RTN","LRAPCUM",37,0)
 I $D(^LR(LRDFN,LRSS,LRI,.3)) W !,"Preoperative Diagnosis:" S LRV=.3 D F Q:LRA(2)?1P
"RTN","LRAPCUM",38,0)
 I $D(^LR(LRDFN,LRSS,LRI,.4)) W !,"Operative Findings:" S LRV=.4 D F Q:LRA(2)?1P
"RTN","LRAPCUM",39,0)
 I $D(^LR(LRDFN,LRSS,LRI,.5)) W !,"Postoperative Diagnosis:" S LRV=.5 D F Q:LRA(2)?1P
"RTN","LRAPCUM",40,0)
 D SET^LRUA
"RTN","LRAPCUM",41,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.3,0)) D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  W !,LR(69.2,.13) I $P($G(^LR(LRDFN,LRSS,LRI,6,0)),U,4) S LR(0)=6 D ^LRSPRPTM
"RTN","LRAPCUM",42,0)
 S LRV=1.3 D F Q:LRA(2)?1P
"RTN","LRAPCUM",43,0)
 I $O(^LR(LRDFN,LRSS,LRI,1,0)) D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  W !,LR(69.2,.03) I $P($G(^LR(LRDFN,LRSS,LRI,7,0)),U,4) S LR(0)=7 D ^LRSPRPTM
"RTN","LRAPCUM",44,0)
 S LRV=1 D F Q:LRA(2)?1P
"RTN","LRAPCUM",45,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.1,0)) D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  W !,LR(69.2,.04)," (Date Spec taken: ",LRW(1),")" I $P($G(^LR(LRDFN,LRSS,LRI,4,0)),U,4) S LR(0)=4 D ^LRSPRPTM
"RTN","LRAPCUM",46,0)
 S LRV=1.1 D F Q:LRA(2)?1P  I $O(^LR(LRDFN,LRSS,LRI,1.4,0)) D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  W !,LR(69.2,.14) I $P($G(^LR(LRDFN,LRSS,LRI,5,0)),U,4) S LR(0)=5 D ^LRSPRPTM
"RTN","LRAPCUM",47,0)
 S LRV=1.4 D F Q:LRA(2)?1P
"RTN","LRAPCUM",48,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.2,0)) D
"RTN","LRAPCUM",49,0)
 .W !,"Supplementary Report:"
"RTN","LRAPCUM",50,0)
 .F C=0:0 S C=$O(^LR(LRDFN,LRSS,LRI,1.2,C)) Q:'C!(LRA(2)?1P)  D
"RTN","LRAPCUM",51,0)
 ..S X=^(C,0),Y=+X,X=$P(X,U,2) D D^LRU
"RTN","LRAPCUM",52,0)
 ..W !?3,"Date: ",Y W:'X " not verified"
"RTN","LRAPCUM",53,0)
 ..D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P
"RTN","LRAPCUM",54,0)
 ..I X,$P($G(^LR(LRDFN,LRSS,LRI,1.2,C,2,0)),U,4) D
"RTN","LRAPCUM",55,0)
 ...S LRV=C,LR("Q")=LRA(2)
"RTN","LRAPCUM",56,0)
 ...D SUPA^LRSPRPT
"RTN","LRAPCUM",57,0)
 ...S LRA(2)=LR("Q")
"RTN","LRAPCUM",58,0)
 ..D:X U Q:LRA(2)?1P
"RTN","LRAPCUM",59,0)
 Q:LRA(2)?1P
"RTN","LRAPCUM",60,0)
 ;
"RTN","LRAPCUM",61,0)
 ; User must possess the LRLAB key to view SNOMED codes
"RTN","LRAPCUM",62,0)
 I $D(^LR(LRDFN,LRSS,LRI,2)) D
"RTN","LRAPCUM",63,0)
 .D B
"RTN","LRAPCUM",64,0)
 .I $D(^XUSEC("LRLAB",DUZ)) D ^LRAPCUM1
"RTN","LRAPCUM",65,0)
 Q:LRA(2)?1P
"RTN","LRAPCUM",66,0)
 I $D(^LR(LRDFN,LRSS,LRI,99)) D
"RTN","LRAPCUM",67,0)
 . N A
"RTN","LRAPCUM",68,0)
 . W !,"Comments:" S A=0
"RTN","LRAPCUM",69,0)
 . F  S A=$O(^LR(LRDFN,LRSS,LRI,99,A)) Q:'A  W !,$P(^(A,0),"^")
"RTN","LRAPCUM",70,0)
 D MORE
"RTN","LRAPCUM",71,0)
 Q
"RTN","LRAPCUM",72,0)
 ;
"RTN","LRAPCUM",73,0)
 ;
"RTN","LRAPCUM",74,0)
MORE R !,"'^' TO STOP: ",LRA(2):DTIME I LRA(2)["?" W $C(7) G MORE
"RTN","LRAPCUM",75,0)
 I LRA(2)?1P S A=0 Q
"RTN","LRAPCUM",76,0)
 S LRA(1)=LRA(1)+21
"RTN","LRAPCUM",77,0)
 W $C(13),$J("",15),$C(13)
"RTN","LRAPCUM",78,0)
 Q
"RTN","LRAPCUM",79,0)
 ;
"RTN","LRAPCUM",80,0)
 ;
"RTN","LRAPCUM",81,0)
S S (A,LRA(2))=0
"RTN","LRAPCUM",82,0)
 Q
"RTN","LRAPCUM",83,0)
 ;
"RTN","LRAPCUM",84,0)
 ;
"RTN","LRAPCUM",85,0)
U D E
"RTN","LRAPCUM",86,0)
 K ^UTILITY($J,"W")
"RTN","LRAPCUM",87,0)
 S E=0
"RTN","LRAPCUM",88,0)
 F LRZ=0:1 S E=$O(^LR(LRDFN,LRSS,LRI,1.2,C,1,E)) Q:'E!(LRA(2)?1P)  D
"RTN","LRAPCUM",89,0)
 .D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P
"RTN","LRAPCUM",90,0)
 .S X=^LR(LRDFN,LRSS,LRI,1.2,C,1,E,0)
"RTN","LRAPCUM",91,0)
 .D ^DIWP
"RTN","LRAPCUM",92,0)
 Q:LRA(2)?1P  D:LRZ ^DIWW
"RTN","LRAPCUM",93,0)
 Q
"RTN","LRAPCUM",94,0)
 ;
"RTN","LRAPCUM",95,0)
 ;
"RTN","LRAPCUM",96,0)
B F C=0:0 S C=$O(^LR(LRDFN,LRSS,LRI,2,C)) Q:'C!(LRA(2)?1P)  D SP
"RTN","LRAPCUM",97,0)
 Q
"RTN","LRAPCUM",98,0)
 ;
"RTN","LRAPCUM",99,0)
 ;
"RTN","LRAPCUM",100,0)
SP F G=0:0 S G=$O(^LR(LRDFN,LRSS,LRI,2,C,5,G)) Q:'G  S X=^(G,0),Y=$P(X,"^",2),E=$P(X,"^",3),E(1)=$P(X,"^")_":",E(1)=$P($P(LR(LRSS),E(1),2),";") D D^LRU S T(2)=Y D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P  D WP
"RTN","LRAPCUM",101,0)
 Q
"RTN","LRAPCUM",102,0)
 ;
"RTN","LRAPCUM",103,0)
 ;
"RTN","LRAPCUM",104,0)
WP W !,E(1)," ",E," Date: ",T(2)," ",!
"RTN","LRAPCUM",105,0)
 D E
"RTN","LRAPCUM",106,0)
 K ^UTILITY($J,"W")
"RTN","LRAPCUM",107,0)
 S F=0
"RTN","LRAPCUM",108,0)
 F LRZ=0:1 S F=$O(^LR(LRDFN,LRSS,LRI,2,C,5,G,1,F)) Q:'F!(LRA(2)?1P)  D
"RTN","LRAPCUM",109,0)
 .D:$Y>LRA(1)!'$Y MORE Q:LRA(2)?1P
"RTN","LRAPCUM",110,0)
 .S X=^LR(LRDFN,LRSS,LRI,2,C,5,G,1,F,0) D ^DIWP
"RTN","LRAPCUM",111,0)
 Q:LRA(2)?1P  D:LRZ ^DIWW
"RTN","LRAPCUM",112,0)
 Q
"RTN","LRAPCUM",113,0)
 ;
"RTN","LRAPCUM",114,0)
 ;
"RTN","LRAPCUM",115,0)
A S A=0 F  S A=$O(^LR(LRDFN,LRSS,LRI,97,A)) Q:'A  W !,^(A,0)
"RTN","LRAPCUM",116,0)
 Q
"RTN","LRAPD1")
0^95^B22367539
"RTN","LRAPD1",1,0)
LRAPD1 ;AVAMC/REG/WTY/KLL - AP DATA ENTRY ;9/25/00
"RTN","LRAPD1",2,0)
 ;;5.2;LAB SERVICE;**41,91,248,259,317,350**;Sep 27, 1994;Build 230
"RTN","LRAPD1",3,0)
 ;
"RTN","LRAPD1",4,0)
 ;WTY;17-AUG-01;Unwrapped text and add kills for DR string
"RTN","LRAPD1",5,0)
 ;
"RTN","LRAPD1",6,0)
SP ;Gross Desc/Clinical Hx, Surg Path
"RTN","LRAPD1",7,0)
 S LRSOP="G"
"RTN","LRAPD1",8,0)
 K DR S DR=".09///^S X=LRWHO;.012;.013;.014;.015;.016;"
"RTN","LRAPD1",9,0)
 S DR=DR_".021//^S X=LR(""TR"");1;S:'LR(""FS"") Y=0;1.3"
"RTN","LRAPD1",10,0)
 S LR(6)=1,DR(2,63.812)=".01;.06R;.07R"
"RTN","LRAPD1",11,0)
 Q
"RTN","LRAPD1",12,0)
MSP ;Micro Description/Gross Review, Surg Path
"RTN","LRAPD1",13,0)
 S LRSOP="M"
"RTN","LRAPD1",14,0)
 K DR S DR=".09///^S X=LRWHO;S:'LR(""FS"") Y=1;1.3;1;1.1;"
"RTN","LRAPD1",15,0)
 S DR=DR_"S:'LR(""DX"") Y=.02;1.4;.02;.03;S:'LRV Y=0;.14"
"RTN","LRAPD1",16,0)
 S (LR(7),LR(6))=1
"RTN","LRAPD1",17,0)
 Q
"RTN","LRAPD1",18,0)
BSP ;Micro Description/Snomed Coding
"RTN","LRAPD1",19,0)
 S LRSOP="B",(LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",20,0)
 K DR S DR=".09///^S X=LRWHO;S:'LR(""FS"") Y=1;1.3;1;1.1;"
"RTN","LRAPD1",21,0)
 S DR=DR_"S:'LR(""DX"") Y=.02;1.4;.02;.03;S:'LRV Y=10;.14;10"
"RTN","LRAPD1",22,0)
 S DR(2,63.12)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;I '$D(LR(1)) S Y=0;"
"RTN","LRAPD1",23,0)
 S DR(2,63.12)=DR(2,63.12)_"1;1.5;3"
"RTN","LRAPD1",24,0)
 S DR(3,63.16)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",25,0)
 S DR(3,63.82)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",26,0)
 Q
"RTN","LRAPD1",27,0)
ASP ;Micro Description/ICD9CM Coding
"RTN","LRAPD1",28,0)
 S LRSOP="A",(LR(7),LR(6))=1
"RTN","LRAPD1",29,0)
 K DR S DR=".09///^S X=LRWHO;S:'LR(""FS"") Y=1;1.3;1;1.1;"
"RTN","LRAPD1",30,0)
 S DR=DR_"S:'LR(""DX"") Y=.02;1.4;.02;.03;S:'LRV Y=80;.14;80"
"RTN","LRAPD1",31,0)
 Q
"RTN","LRAPD1",32,0)
SSP ;Supplementary Report, Surg Path
"RTN","LRAPD1",33,0)
 S (LRSOP,LRSFLG)="S",(LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",34,0)
 K DR
"RTN","LRAPD1",35,0)
 ;Entry of Supp rept must be allowed on released reports
"RTN","LRAPD1",36,0)
 ;S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",37,0)
 ;S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S LRSFLG="""",Y=0;"
"RTN","LRAPD1",38,0)
 ;S DR=DR_".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",39,0)
 S DR=".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",40,0)
 S DR(2,63.12)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;I '$D(LR(1)) "
"RTN","LRAPD1",41,0)
 S DR(2,63.12)=DR(2,63.12)_"S Y=0;1;1.5;3"
"RTN","LRAPD1",42,0)
 S DR(3,63.16)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",43,0)
 S DR(3,63.82)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",44,0)
 Q
"RTN","LRAPD1",45,0)
PSP ;Special Studies, Surg Path
"RTN","LRAPD1",46,0)
 S LRSOP="P"
"RTN","LRAPD1",47,0)
 K DR
"RTN","LRAPD1",48,0)
 S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",49,0)
 S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S Y=0;.03;10"
"RTN","LRAPD1",50,0)
 S DR(2,63.12)="5;1.5"
"RTN","LRAPD1",51,0)
 S DR(3,63.82)=".01;D R^LRAPD;.02",LR(7)=1
"RTN","LRAPD1",52,0)
 Q
"RTN","LRAPD1",53,0)
CY ;Gross Desc/Clinic Hx, Cytopath
"RTN","LRAPD1",54,0)
 S LRSOP="G"
"RTN","LRAPD1",55,0)
 K DR S DR=".09///^S X=LRWHO;.012;.013;.014;.015;.016;"
"RTN","LRAPD1",56,0)
 S DR=DR_".021//^S X=LR(""TR"");1"
"RTN","LRAPD1",57,0)
 S LR(6)=1,DR(2,63.902)=".01;.02;.06R;.07R"
"RTN","LRAPD1",58,0)
 Q
"RTN","LRAPD1",59,0)
MCY ;Micro Desc/Gross Review, Cytopath
"RTN","LRAPD1",60,0)
 S LRSOP="M"
"RTN","LRAPD1",61,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",62,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;.101;S:'LRV Y=0;.14"
"RTN","LRAPD1",63,0)
 S (LR(7),LR(6))=1
"RTN","LRAPD1",64,0)
 Q
"RTN","LRAPD1",65,0)
BCY ;Micro Desc/SNOMED Coding, Cytopath
"RTN","LRAPD1",66,0)
 S LRSOP="B",DIC(0)="M"
"RTN","LRAPD1",67,0)
 S (LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",68,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",69,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;.101;S:'LRV Y=10;.14;10"
"RTN","LRAPD1",70,0)
 S DR(2,63.912)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;"
"RTN","LRAPD1",71,0)
 S DR(2,63.912)=DR(2,63.912)_"I '$D(LR(1)) S Y=0;1;1.5;3"
"RTN","LRAPD1",72,0)
 S DR(3,63.916)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",73,0)
 S DR(3,63.982)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",74,0)
 Q
"RTN","LRAPD1",75,0)
ACY ;Micro Desc/ICD9CM Coding
"RTN","LRAPD1",76,0)
 S LRSOP="A"
"RTN","LRAPD1",77,0)
 S (LR(7),LR(6))=1
"RTN","LRAPD1",78,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",79,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;.101;S:'LRV Y=80;.14;80"
"RTN","LRAPD1",80,0)
 Q
"RTN","LRAPD1",81,0)
SCY ;Supplementary Report, Cyto
"RTN","LRAPD1",82,0)
 S LRSFLG="S"
"RTN","LRAPD1",83,0)
 S (LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",84,0)
 K DR
"RTN","LRAPD1",85,0)
 ;Entry of Supp rept must be allowed on released reports
"RTN","LRAPD1",86,0)
 ;S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",87,0)
 ;S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S LRSFLG="""",Y=0;"
"RTN","LRAPD1",88,0)
 ;S DR=DR_".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",89,0)
 S DR=".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",90,0)
 S DR(2,63.912)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;I '$D(LR(1)) "
"RTN","LRAPD1",91,0)
 S DR(2,63.912)=DR(2,63.912)_"S Y=0;1;1.5;3"
"RTN","LRAPD1",92,0)
 S DR(3,63.916)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",93,0)
 S DR(3,63.982)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",94,0)
 Q
"RTN","LRAPD1",95,0)
PCY ;Special Studies, Cyto
"RTN","LRAPD1",96,0)
 K DR
"RTN","LRAPD1",97,0)
 S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",98,0)
 S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S Y=0;.03;10"
"RTN","LRAPD1",99,0)
 S DR(2,63.912)="5;1.5"
"RTN","LRAPD1",100,0)
 S DR(3,63.982)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",101,0)
 S LR(7)=1
"RTN","LRAPD1",102,0)
 Q
"RTN","LRAPD1",103,0)
EM ;Gross Desc/Clinical Hx, Em
"RTN","LRAPD1",104,0)
 S LRSOP="G",LR(6)=1
"RTN","LRAPD1",105,0)
 K DR S DR=".09///^S X=LRWHO;.012;.013;.014;.015;.016;"
"RTN","LRAPD1",106,0)
 S DR=DR_".021//^S X=LR(""TR"");1"
"RTN","LRAPD1",107,0)
 S DR(2,63.202)=".01;.06R;.07R"
"RTN","LRAPD1",108,0)
 Q
"RTN","LRAPD1",109,0)
MEM ;Micro Desc/Gross Review, EM
"RTN","LRAPD1",110,0)
 S LRSOP="M"
"RTN","LRAPD1",111,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",112,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;S:'LRV Y=0;.14"
"RTN","LRAPD1",113,0)
 S (LR(7),LR(6))=1
"RTN","LRAPD1",114,0)
 Q
"RTN","LRAPD1",115,0)
BEM ;Micro Desc/SNOMED Coding
"RTN","LRAPD1",116,0)
 S LRSOP="B",(LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",117,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",118,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;S:'LRV Y=10;.14;10"
"RTN","LRAPD1",119,0)
 S DR(2,63.212)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;"
"RTN","LRAPD1",120,0)
 S DR(2,63.212)=DR(2,63.212)_"I '$D(LR(1)) S Y=0;1;1.5;3"
"RTN","LRAPD1",121,0)
 S DR(3,63.216)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",122,0)
 S DR(3,63.282)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",123,0)
 Q
"RTN","LRAPD1",124,0)
AEM ;Micro Desc/ICD9CM Coding
"RTN","LRAPD1",125,0)
 S LRSOP="A"
"RTN","LRAPD1",126,0)
 S (LR(7),LR(6))=1
"RTN","LRAPD1",127,0)
 K DR S DR=".09///^S X=LRWHO;1;1.1;S:'LR(""DX"") Y=.021;1.4;"
"RTN","LRAPD1",128,0)
 S DR=DR_".021//^S X=LR(""TR"");.02;.03;S:'LRV Y=80;.14;80"
"RTN","LRAPD1",129,0)
 Q
"RTN","LRAPD1",130,0)
SEM ;Supplementary Report, EM
"RTN","LRAPD1",131,0)
 S LRSFLG="S"
"RTN","LRAPD1",132,0)
 S (LR(2),LR(7),LR(6))=1
"RTN","LRAPD1",133,0)
 K DR
"RTN","LRAPD1",134,0)
 ;Entry of Supp rept must be allowed on released reports
"RTN","LRAPD1",135,0)
 ;S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",136,0)
 ;S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S LRSFLG="""",Y=0;"
"RTN","LRAPD1",137,0)
 ;S DR=DR_".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",138,0)
 S DR=".09///^S X=LRWHO;.03;10"
"RTN","LRAPD1",139,0)
 S DR(2,63.212)=".01;D T^LRAPD;S:'LR(8) Y=4;2;4;I '$D(LR(1)) "
"RTN","LRAPD1",140,0)
 S DR(2,63.212)=DR(2,63.212)_"S Y=0;1;1.5;3"
"RTN","LRAPD1",141,0)
 S DR(3,63.216)=".01;I '$D(LR(1)) S Y=0;1"
"RTN","LRAPD1",142,0)
 S DR(3,63.282)=".01;D R^LRAPD;.02"
"RTN","LRAPD1",143,0)
 Q
"RTN","LRAPD1",144,0)
PEM ;Special Studies, EM
"RTN","LRAPD1",145,0)
 K DR
"RTN","LRAPD1",146,0)
 S DR="N LRREL D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,LRI) "
"RTN","LRAPD1",147,0)
 S DR=DR_"I LRREL(1) D VMSG^LRAPD1 S Y=0;.03;10"
"RTN","LRAPD1",148,0)
 S DR(2,63.212)=5,LR(7)=1
"RTN","LRAPD1",149,0)
 Q
"RTN","LRAPD1",150,0)
VMSG ;Verified message
"RTN","LRAPD1",151,0)
 N LRMSG
"RTN","LRAPD1",152,0)
 S LRMSG=$C(7)_"Report verified.  Cannot edit with this option."
"RTN","LRAPD1",153,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPD1",154,0)
 Q
"RTN","LRAPDA")
0^55^B88410283
"RTN","LRAPDA",1,0)
LRAPDA ;DALOI/STAFF - ANATOMIC PATH DATA ENTRY ;01/06/10  10:07
"RTN","LRAPDA",2,0)
 ;;5.2;LAB SERVICE;**72,73,91,121,248,259,295,317,365,350**;Sep 27, 1994;Build 230
"RTN","LRAPDA",3,0)
 ;
"RTN","LRAPDA",4,0)
 ; Reference to ^VA(200 supported by IA #10060
"RTN","LRAPDA",5,0)
 ;
"RTN","LRAPDA",6,0)
 S LRDATA=0,LRAU=$S(LRSS'="AU":0,1:1)
"RTN","LRAPDA",7,0)
 W !?20,LRO(68)," (",LRABV,")",!
"RTN","LRAPDA",8,0)
 S:'$D(LRSOP) LRSOP=1 S:'$D(LRD(1)) LRD(1)="0"
"RTN","LRAPDA",9,0)
 S:'$D(^LRO(69.2,LRAA,2,0)) ^(0)="^69.23A^0^0"
"RTN","LRAPDA",10,0)
 ;
"RTN","LRAPDA",11,0)
SEL K LR(1)
"RTN","LRAPDA",12,0)
 I $D(LR(2)) D  G:%<1 END S:%=1 LR(1)=1
"RTN","LRAPDA",13,0)
 . W !!,"Enter Etiology, Function, Procedure & Disease "
"RTN","LRAPDA",14,0)
 . S %=2 D YN^LRU
"RTN","LRAPDA",15,0)
 ;
"RTN","LRAPDA",16,0)
 ;
"RTN","LRAPDA",17,0)
AK ; from LRAPD1
"RTN","LRAPDA",18,0)
 N CORRECT
"RTN","LRAPDA",19,0)
 S:'$D(LRSFLG) LRSFLG=""
"RTN","LRAPDA",20,0)
 W !!,"Data entry for ",LRH(0)," "
"RTN","LRAPDA",21,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPDA",22,0)
 I %=2 D  G:Y<1 END S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPDA",23,0)
 .S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT
"RTN","LRAPDA",24,0)
 I '$O(^LRO(68,LRAA,1,LRAD,1,0)) D  Q
"RTN","LRAPDA",25,0)
 . W $C(7),!!,"NO ",LRO(68)," ACCESSIONS IN FILE FOR ",LRH(0),!!
"RTN","LRAPDA",26,0)
W ;
"RTN","LRAPDA",27,0)
 D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPDA",28,0)
 I LRDATA=-1!('$G(LRSEL))!('$D(LRI)) S LREND=1 Q
"RTN","LRAPDA",29,0)
 S LRIDT=LRI
"RTN","LRAPDA",30,0)
 I LRSEL=2 G:LRUID="" W D REST,OERR^LR7OB63D G W
"RTN","LRAPDA",31,0)
 I LRSEL=3 D REST,OERR^LR7OB63D G W
"RTN","LRAPDA",32,0)
 I LRSEL=1 D REST S:$D(DR(1))#2 DR=DR(1) D OERR^LR7OB63D G W
"RTN","LRAPDA",33,0)
 ;
"RTN","LRAPDA",34,0)
 ;
"RTN","LRAPDA",35,0)
REST ;
"RTN","LRAPDA",36,0)
 N LRXSTOP,LRX,LRX1
"RTN","LRAPDA",37,0)
 ;W "  for ",LRH(0)
"RTN","LRAPDA",38,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPDA",39,0)
 . W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)," not in ",LRO(68),!!
"RTN","LRAPDA",40,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X,LRODT=$P(X,"^",4),LRSN=$P(X,"^",5)
"RTN","LRAPDA",41,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPDA",42,0)
 ;W !,LRP,"  ID: ",SSN
"RTN","LRAPDA",43,0)
 S (LRIDT,LRI)=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRAPDA",44,0)
 I LRSS'="AU",'$D(^LR(LRDFN,LRSS,LRI,0)) D  Q
"RTN","LRAPDA",45,0)
 . W $C(7),!,"Inverse date missing or incorrect in Accession Area file "
"RTN","LRAPDA",46,0)
 . W "for",!,LRO(68),"  Year: ",$E(LRAD,2,3),"  Accession: ",LRAN
"RTN","LRAPDA",47,0)
 ;I "SPCYEM"[LRSS,$O(^LR(LRDFN,LRSS,LRI,.1,0)) D
"RTN","LRAPDA",48,0)
 ;.W !,"Specimen(s):"
"RTN","LRAPDA",49,0)
 ;.S X=0 F  S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  D
"RTN","LRAPDA",50,0)
 ;..W !,$P($G(^LR(LRDFN,LRSS,LRI,.1,X,0)),"^")
"RTN","LRAPDA",51,0)
 ;
"RTN","LRAPDA",52,0)
 ; Don't allow supp. report to be added to a released report if modifications are being added via MM option
"RTN","LRAPDA",53,0)
 S LRXSTOP=0,(LRX,LRX1)=""
"RTN","LRAPDA",54,0)
 I LRSS'="AU",LRD(1)="S" D
"RTN","LRAPDA",55,0)
 . S LRX=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",11) ;release date/time
"RTN","LRAPDA",56,0)
 . S LRX1=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",15) ;orig rel date/time
"RTN","LRAPDA",57,0)
 I LRSS="AU",LRSOP="R" D
"RTN","LRAPDA",58,0)
 . S LRX=$P($G(^LR(LRDFN,"AU")),"^",15)  ;release date/time
"RTN","LRAPDA",59,0)
 . S LRX1=$P($G(^LR(LRDFN,"AU")),"^",3)  ;date report completed
"RTN","LRAPDA",60,0)
 I 'LRX,LRX1 D
"RTN","LRAPDA",61,0)
 . W $C(7),!!,"This "_$G(LRAA(1))_" report is currently being"
"RTN","LRAPDA",62,0)
 . W !,"modified; it must first be released before Supplementary"
"RTN","LRAPDA",63,0)
 . W !,"report can be added.",!
"RTN","LRAPDA",64,0)
 . S LRXSTOP=1
"RTN","LRAPDA",65,0)
 Q:LRXSTOP
"RTN","LRAPDA",66,0)
 ;
"RTN","LRAPDA",67,0)
 ;
"RTN","LRAPDA",68,0)
DIE ;Edit
"RTN","LRAPDA",69,0)
 I LRSS="AU" D AUE Q
"RTN","LRAPDA",70,0)
 N LRRDT1,LRRDT2,LRIENS,LREL,LRQUIT,LRSNO,LRCPT,LRESCPT
"RTN","LRAPDA",71,0)
 S (LREL,LRESCPT,LRQUIT,LRSNO,LRCPT)=0,LRIENS=LRI_","_LRDFN_","
"RTN","LRAPDA",72,0)
 S LRRDT1=$$GET1^DIQ(LRSF,LRIENS,.11,"I")
"RTN","LRAPDA",73,0)
 S LRRDT2=$$GET1^DIQ(LRSF,LRIENS,.15,"I")
"RTN","LRAPDA",74,0)
 S:LRRDT1!LRRDT2 LREL=1
"RTN","LRAPDA",75,0)
 ; Determine if CPT activated
"RTN","LRAPDA",76,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",77,0)
 I LRSOP="G",LREL D  Q
"RTN","LRAPDA",78,0)
 . W $C(7),!!,"Report verified.  Cannot edit with this option."
"RTN","LRAPDA",79,0)
 I LRSOP'="","ABM"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",80,0)
 .  ;Allow SNOMED and CPT coding even after release.
"RTN","LRAPDA",81,0)
 . W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",82,0)
 . I 'LRESCPT,LRSOP'="B" D  Q
"RTN","LRAPDA",83,0)
 . . W "Cannot edit with this option."
"RTN","LRAPDA",84,0)
 . . S LRQUIT=1
"RTN","LRAPDA",85,0)
 . W "Only "
"RTN","LRAPDA",86,0)
 . I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",87,0)
 . W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",88,0)
 . W "coding permitted.",!
"RTN","LRAPDA",89,0)
 . I LRSOP="B" D
"RTN","LRAPDA",90,0)
 . . K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",91,0)
 . . D ^DIR W !
"RTN","LRAPDA",92,0)
 . . S LRSNO=+Y
"RTN","LRAPDA",93,0)
 . Q:'LRESCPT
"RTN","LRAPDA",94,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",95,0)
 . D ^DIR W !
"RTN","LRAPDA",96,0)
 . S LRCPT=+Y
"RTN","LRAPDA",97,0)
 . I "AM"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",98,0)
 . I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",99,0)
 ;
"RTN","LRAPDA",100,0)
 ;
"RTN","LRAPDA",101,0)
RESET ; Reset DR string if altered by prior accession/patient
"RTN","LRAPDA",102,0)
 ; Reset DR to orig value in LRAPD1
"RTN","LRAPDA",103,0)
 I LRSOP'="","AMBS"[LRSOP,$G(LRD)'="" D @LRD
"RTN","LRAPDA",104,0)
 I LRSFLG="S",$G(LRD)'="" D @LRD  ;For CY,EM Supp entry
"RTN","LRAPDA",105,0)
 S:LRSNO DR=10    ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",106,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null in only CPT coding
"RTN","LRAPDA",107,0)
 ; If adding supp rpt to released rpt, remove date rpt completed from DR
"RTN","LRAPDA",108,0)
 I LRRDT1,LRSOP="S"!(LRSFLG="S") S DR=".09///^S X=LRWHO;10"
"RTN","LRAPDA",109,0)
 ;
"RTN","LRAPDA",110,0)
EDIT ; Call to ^DIE
"RTN","LRAPDA",111,0)
 W !
"RTN","LRAPDA",112,0)
 S LRA=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(LRA,"^",10)
"RTN","LRAPDA",113,0)
 I LRCAPA,"SPCYEM"[LRSS D C^LRAPSWK
"RTN","LRAPDA",114,0)
 S DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPDA",115,0)
 D CK^LRU Q:$D(LR("CK"))
"RTN","LRAPDA",116,0)
 I LRSS="SP",LRSOP="B",$O(^LR(LRDFN,LRSS,LRI,1.3,0)) D
"RTN","LRAPDA",117,0)
 . W $C(7),!!,"This accession has a FROZEN SECTION report."
"RTN","LRAPDA",118,0)
 . W !,"Be sure 'FROZEN SECTION' is entered as a SNOMED code in the PROCEDURE field"
"RTN","LRAPDA",119,0)
 . W !,"for the appropriate organ or tissue.",!!
"RTN","LRAPDA",120,0)
 ; Code S LRELSD is in DR string setup in LRAPR
"RTN","LRAPDA",121,0)
 N LRELSD S LRELSD=0
"RTN","LRAPDA",122,0)
 D ^DIE
"RTN","LRAPDA",123,0)
 ;
"RTN","LRAPDA",124,0)
 ; Ask for performing laboratory assignment
"RTN","LRAPDA",125,0)
 I LRSFLG'="S" D EDIT^LRRPLU(LRDFN,LRSS,LRI)
"RTN","LRAPDA",126,0)
 ;
"RTN","LRAPDA",127,0)
 ; Update accession and order file, releasing facility and send CPRS alerts
"RTN","LRAPDA",128,0)
 I LRELSD D
"RTN","LRAPDA",129,0)
 . D ACCCOMP^LRAPRES
"RTN","LRAPDA",130,0)
 . I LRSS'="AU" D
"RTN","LRAPDA",131,0)
 . . D SETRL^LRVERA(LRDFN,LRSS,LRI,DUZ(2))
"RTN","LRAPDA",132,0)
 . . D MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,$P(LRA,"^",6))
"RTN","LRAPDA",133,0)
 ;
"RTN","LRAPDA",134,0)
 ; Update clinical reminders
"RTN","LRAPDA",135,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRI)
"RTN","LRAPDA",136,0)
 ;
"RTN","LRAPDA",137,0)
 D:LRSFLG="S"&('$D(Y)) ^LRAPDSR
"RTN","LRAPDA",138,0)
 D FRE^LRU
"RTN","LRAPDA",139,0)
 I LRSOP'="","ABM"[LRSOP D CPTCOD
"RTN","LRAPDA",140,0)
 ;
"RTN","LRAPDA",141,0)
WKLD ; Capture Workload
"RTN","LRAPDA",142,0)
 I LRSOP="Z","CYSP"[LRSS,LRCAPA D S^LRAPR Q
"RTN","LRAPDA",143,0)
 I LRCAPA,"SPCYEM"[LRSS,LRD(1)'="","MBA"[LRD(1) D C1^LRAPSWK
"RTN","LRAPDA",144,0)
 I LRCAPA,"SPCYEM"[LRSS,LRSOP="G" D C1^LRAPSWK
"RTN","LRAPDA",145,0)
 ;
"RTN","LRAPDA",146,0)
QUEUES ; Update Queues
"RTN","LRAPDA",147,0)
 S X=$P(^LR(LRDFN,LRSS,LRI,0),"^",4)
"RTN","LRAPDA",148,0)
 I X,$D(^VA(200,X,0)) S LR("TR")=$P(^(0),"^")
"RTN","LRAPDA",149,0)
 I "CYEMSP"[LRSS,$D(LR(6)),LRSOP="G" Q:$D(^LRO(69.2,LRAA,1,LRAN,0))  D  Q
"RTN","LRAPDA",150,0)
 . L +^LRO(69.2,LRAA,1):DILOCKTM I '$T D  Q
"RTN","LRAPDA",151,0)
 . . N MSG
"RTN","LRAPDA",152,0)
 . . S MSG(1)="The preliminary reports queue is in use by another person.",MSG(1,"F")="!!"
"RTN","LRAPDA",153,0)
 . . S MSG(2)="  You will need to add this accession to the queue later."
"RTN","LRAPDA",154,0)
 . . D EN^DDIOL(.MSG)
"RTN","LRAPDA",155,0)
 . S ^LRO(69.2,LRAA,1,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",156,0)
 . S X=^LRO(69.2,LRAA,1,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",157,0)
 . L -^LRO(69.2,LRAA,1)
"RTN","LRAPDA",158,0)
 I "CYEMSP"[LRSS,$D(LR(7)),'$D(^LRO(69.2,LRAA,2,LRAN,0)),LRD(1)'="S" D
"RTN","LRAPDA",159,0)
 . L +^LRO(69.2,LRAA,2):DILOCKTM I '$T D  Q
"RTN","LRAPDA",160,0)
 . . N MSG
"RTN","LRAPDA",161,0)
 . . S MSG(1)="The final reports queue is in use by another person.  ",MSG(1,"F")="!!"
"RTN","LRAPDA",162,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",163,0)
 . . D EN^DDIOL(.MSG)
"RTN","LRAPDA",164,0)
 . S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",165,0)
 . S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",166,0)
 . L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",167,0)
 D:LRSOP="M"!(LRSOP="B") EN^LRSPGD
"RTN","LRAPDA",168,0)
 Q
"RTN","LRAPDA",169,0)
 ;
"RTN","LRAPDA",170,0)
 ;
"RTN","LRAPDA",171,0)
NM ;
"RTN","LRAPDA",172,0)
 I X'["@"!(X["@"&(Y(Z)="")) D  Q
"RTN","LRAPDA",173,0)
 .W $C(7),!?4,"ENTER WHOLE NUMBERS ONLY",! K X
"RTN","LRAPDA",174,0)
 I Y(Z)'="" W $C(7),?40,"OK TO DELETE" S %=2 D YN^LRU I %'=1 K X Q
"RTN","LRAPDA",175,0)
 S Y(Z)="" Q
"RTN","LRAPDA",176,0)
 ;
"RTN","LRAPDA",177,0)
 ;
"RTN","LRAPDA",178,0)
AUE ; Autopsy Data Entry
"RTN","LRAPDA",179,0)
 W !
"RTN","LRAPDA",180,0)
 N LREL,LRQUIT,LRSNO,LRESCPT,LRCPT
"RTN","LRAPDA",181,0)
 S (LREL,LRQUIT,LRSNO,LRCPT)=0
"RTN","LRAPDA",182,0)
 S LREL=+$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPDA",183,0)
 ; Determine if CPT activated
"RTN","LRAPDA",184,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",185,0)
 ; Allow supp report to be added on verified AU
"RTN","LRAPDA",186,0)
 I LRSOP'="","AFIP"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",187,0)
 . Q:LRESCPT&("AP"[LRSOP)
"RTN","LRAPDA",188,0)
 . W $C(7),!!,"Report verified.  Cannot edit with this option!"
"RTN","LRAPDA",189,0)
 . S LRQUIT=1
"RTN","LRAPDA",190,0)
 I LRSOP'="","ABP"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",191,0)
 . W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",192,0)
 . W "Only "
"RTN","LRAPDA",193,0)
 . I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",194,0)
 . W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",195,0)
 . W "coding permitted.",!
"RTN","LRAPDA",196,0)
 . I LRSOP="B" D
"RTN","LRAPDA",197,0)
 . . K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",198,0)
 . . D ^DIR W !
"RTN","LRAPDA",199,0)
 . . S LRSNO=+Y
"RTN","LRAPDA",200,0)
 . Q:'LRESCPT
"RTN","LRAPDA",201,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",202,0)
 . D ^DIR W !
"RTN","LRAPDA",203,0)
 . S LRCPT=+Y
"RTN","LRAPDA",204,0)
 . I "AP"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",205,0)
 . I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",206,0)
 ;
"RTN","LRAPDA",207,0)
AURESET ; Reset DR to orig value in LRAUDA
"RTN","LRAPDA",208,0)
 I LRSOP'="","AP"[LRSOP D @(LRSOP_"DR^LRAUDA")
"RTN","LRAPDA",209,0)
 I LRSOP="B" D BDR^LRAUDA
"RTN","LRAPDA",210,0)
 S:LRSNO DR=32       ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",211,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null inf only CPT coding
"RTN","LRAPDA",212,0)
 ;                              ;
"RTN","LRAPDA",213,0)
 ; Not all of the autopsy fields are within the AU subscript.
"RTN","LRAPDA",214,0)
 ; Therefore, we must lock the entire LRDFN.
"RTN","LRAPDA",215,0)
 L +^LR(LRDFN):DILOCKTM I '$T D  Q
"RTN","LRAPDA",216,0)
 . S MSG="This record is locked by another user.  "
"RTN","LRAPDA",217,0)
 . S MSG=MSG_"Please wait and try again."
"RTN","LRAPDA",218,0)
 . D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPDA",219,0)
 I LRSFLG'="S" D
"RTN","LRAPDA",220,0)
 . N LRELSD S LRELSD=0
"RTN","LRAPDA",221,0)
 . S DIE="^LR(",DA=LRDFN
"RTN","LRAPDA",222,0)
 . D ^DIE
"RTN","LRAPDA",223,0)
 . S LRA=^LR(LRDFN,"AU"),LRI=$P(LRA,U),LRAC=$P(LRA,U,6)
"RTN","LRAPDA",224,0)
 . I LRELSD D MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,LRAC)
"RTN","LRAPDA",225,0)
 ;
"RTN","LRAPDA",226,0)
 D:LRSFLG="S" ^LRAPDSR
"RTN","LRAPDA",227,0)
 ;
"RTN","LRAPDA",228,0)
 ; Ask for performing laboratory assignment
"RTN","LRAPDA",229,0)
 W !! D EDIT^LRRPLU(LRDFN,LRSS,LRI)
"RTN","LRAPDA",230,0)
 ;
"RTN","LRAPDA",231,0)
 D UPDATE^LRPXRM(LRDFN,"AU")
"RTN","LRAPDA",232,0)
 L -^LR(LRDFN)
"RTN","LRAPDA",233,0)
 D:"BAP"[LRSOP AU
"RTN","LRAPDA",234,0)
 D:LRSOP="R" R
"RTN","LRAPDA",235,0)
 I LRSOP'="","ABP"[LRSOP D CPTCOD
"RTN","LRAPDA",236,0)
 Q
"RTN","LRAPDA",237,0)
 ;
"RTN","LRAPDA",238,0)
 ;
"RTN","LRAPDA",239,0)
AU I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPDA",240,0)
 .L +^LRO(69.2,LRAA,2):DILOCKTM I '$T D  Q
"RTN","LRAPDA",241,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPDA",242,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",243,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",244,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",245,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN
"RTN","LRAPDA",246,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",247,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",248,0)
 D AU^LRSPGD
"RTN","LRAPDA",249,0)
 Q
"RTN","LRAPDA",250,0)
 ;
"RTN","LRAPDA",251,0)
 ;
"RTN","LRAPDA",252,0)
R I '$D(^LRO(69.2,LRAA,3,LRAN,0)) D
"RTN","LRAPDA",253,0)
 . L +^LRO(69.2,LRAA,3):DILOCKTM I '$T D  Q
"RTN","LRAPDA",254,0)
 . . S MSG(1)="The interim reports queue is in use by another person.  "
"RTN","LRAPDA",255,0)
 . . S MSG(1,"F")="!!"
"RTN","LRAPDA",256,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",257,0)
 . . D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",258,0)
 . S ^LRO(69.2,LRAA,3,LRAN,0)=LRDFN
"RTN","LRAPDA",259,0)
 . S X=^LRO(69.2,LRAA,3,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",260,0)
 . L -^LRO(69.2,LRAA,3)
"RTN","LRAPDA",261,0)
 Q
"RTN","LRAPDA",262,0)
 ;
"RTN","LRAPDA",263,0)
 ;
"RTN","LRAPDA",264,0)
PNAME ; Patient Name Lookup
"RTN","LRAPDA",265,0)
 ; LRPFLG tells LRUPS to limit accessions to the chosen year.
"RTN","LRAPDA",266,0)
 N LRPFLG
"RTN","LRAPDA",267,0)
 S X=LRPNM,LRPFLG=1
"RTN","LRAPDA",268,0)
 K LRPNM,DIC,VADM,VAIN,VA
"RTN","LRAPDA",269,0)
 S DFN=-1,DIC(0)="EQM",(LRX,LRDPF)=""
"RTN","LRAPDA",270,0)
 D:'$D(LRLABKY) LABKEY^LRPARAM
"RTN","LRAPDA",271,0)
 D DPA1^LRDPA
"RTN","LRAPDA",272,0)
 I DFN=-1 S LRAN=-1 Q
"RTN","LRAPDA",273,0)
 D I^LRUPS
"RTN","LRAPDA",274,0)
 Q
"RTN","LRAPDA",275,0)
 ;
"RTN","LRAPDA",276,0)
 ;
"RTN","LRAPDA",277,0)
CPTCOD ; CPT Coding
"RTN","LRAPDA",278,0)
 N LRPRO
"RTN","LRAPDA",279,0)
 Q:$T(CPT^LRCAPES)=""
"RTN","LRAPDA",280,0)
 Q:LREL&('LRCPT)
"RTN","LRAPDA",281,0)
 I 'LREL D
"RTN","LRAPDA",282,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",283,0)
 . D ^DIR W !
"RTN","LRAPDA",284,0)
 . S LRCPT=+Y
"RTN","LRAPDA",285,0)
 Q:'LRCPT
"RTN","LRAPDA",286,0)
 ; SET PROVIDER TO CURRENT USER, ALLOW UPDATES
"RTN","LRAPDA",287,0)
 S LRPRO=DUZ
"RTN","LRAPDA",288,0)
 D PROVIDR^LRAPUTL
"RTN","LRAPDA",289,0)
 Q:LRQUIT
"RTN","LRAPDA",290,0)
 D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPDA",291,0)
 Q
"RTN","LRAPDA",292,0)
 ;
"RTN","LRAPDA",293,0)
 ;
"RTN","LRAPDA",294,0)
END K LRSFLG
"RTN","LRAPDA",295,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPDA",296,0)
 D V^LRU
"RTN","LRAPDA",297,0)
 Q
"RTN","LRAPDA",298,0)
 ;
"RTN","LRAPDSR")
0^185^B48581707
"RTN","LRAPDSR",1,0)
LRAPDSR ;DALOI/STAFF - AP SUPPLEMENTARY REPORT ENTRY;Dec 17, 2008
"RTN","LRAPDSR",2,0)
 ;;5.2;LAB SERVICE;**248,259,295,317,350**;Sep 27, 1994;Build 230
"RTN","LRAPDSR",3,0)
 ;
"RTN","LRAPDSR",4,0)
 N LRYTMP,LRWPROOT,LRRLS,LRRLS1,LRRLS2,LRX,LRIENS,LRFILE1,LRFILE,LRA
"RTN","LRAPDSR",5,0)
 N LRIENS1,LRXTMP,LRFDA,LRNOW,LRIENS2,LRFIELD,LRORIEN,LRFLG,LRDA,LRQUIT,LRSRDA
"RTN","LRAPDSR",6,0)
 ;
"RTN","LRAPDSR",7,0)
MAIN ; Main Subroutine
"RTN","LRAPDSR",8,0)
 D RELEAS1
"RTN","LRAPDSR",9,0)
 D GETRPT
"RTN","LRAPDSR",10,0)
 Q:LRQUIT
"RTN","LRAPDSR",11,0)
 D RELEAS2
"RTN","LRAPDSR",12,0)
 Q:LRQUIT
"RTN","LRAPDSR",13,0)
 D:LRRLS COPY
"RTN","LRAPDSR",14,0)
 Q:LRQUIT
"RTN","LRAPDSR",15,0)
 D RPT
"RTN","LRAPDSR",16,0)
 ;
"RTN","LRAPDSR",17,0)
 ; Ask for performing laboratory assignment
"RTN","LRAPDSR",18,0)
 D EDIT^LRRPLU(LRDFN,LRSS,LRI)
"RTN","LRAPDSR",19,0)
 ;
"RTN","LRAPDSR",20,0)
 ; Add supp report to the PRELIMINARY print queue
"RTN","LRAPDSR",21,0)
 D QUESP
"RTN","LRAPDSR",22,0)
 Q:LRQUIT
"RTN","LRAPDSR",23,0)
 D COMPARE
"RTN","LRAPDSR",24,0)
 Q:LRQUIT
"RTN","LRAPDSR",25,0)
 ;
"RTN","LRAPDSR",26,0)
 ; If supp report is already released (LRRLS1) unrelease it only if the E-Sign Switch is ON (LRESSW)
"RTN","LRAPDSR",27,0)
 N LRESSW
"RTN","LRAPDSR",28,0)
 D GETDATA^LRAPESON(.LRESSW)
"RTN","LRAPDSR",29,0)
 I LRRLS1,LRESSW D UNRELEAS
"RTN","LRAPDSR",30,0)
 D UPDATE
"RTN","LRAPDSR",31,0)
 Q:LRQUIT
"RTN","LRAPDSR",32,0)
 D STORE
"RTN","LRAPDSR",33,0)
 Q
"RTN","LRAPDSR",34,0)
 ;
"RTN","LRAPDSR",35,0)
 ;
"RTN","LRAPDSR",36,0)
RELEAS1 ; Is the ENTIRE report already released?
"RTN","LRAPDSR",37,0)
 S (LRRLS,LRRLS1,LRQUIT)=0
"RTN","LRAPDSR",38,0)
 I LRSS="AU" D  Q
"RTN","LRAPDSR",39,0)
 . S LRX=$P($G(^LR(LRDFN,LRSS)),"^",15)
"RTN","LRAPDSR",40,0)
 . Q:'LRX  ; Report has not been released so no audit will occur.
"RTN","LRAPDSR",41,0)
 . W !!,$C(7),"This AUTOPSY has been released.  Supplementary report additions/modifications"
"RTN","LRAPDSR",42,0)
 . W !,"will create an audit trail.",!
"RTN","LRAPDSR",43,0)
 . S LRRLS=1    ; Report has been released so auditing will occur.
"RTN","LRAPDSR",44,0)
 S LRX=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",11)
"RTN","LRAPDSR",45,0)
 ;
"RTN","LRAPDSR",46,0)
 I LRX D
"RTN","LRAPDSR",47,0)
 . W $C(7),!!,"This "_$G(LRAA(1))_" report has been released."
"RTN","LRAPDSR",48,0)
 . W !,"Supplementary report additions/modifications will create an audit trail.",!
"RTN","LRAPDSR",49,0)
 . S LRRLS=1
"RTN","LRAPDSR",50,0)
 Q
"RTN","LRAPDSR",51,0)
 ;
"RTN","LRAPDSR",52,0)
 ;
"RTN","LRAPDSR",53,0)
GETRPT ; First, select the report
"RTN","LRAPDSR",54,0)
 ;
"RTN","LRAPDSR",55,0)
 N DA,DIC,DO,DIR,DIRUT,DTOUT,DUOUT,LRLAST,LRSFN,LRX,X,Y
"RTN","LRAPDSR",56,0)
 ;
"RTN","LRAPDSR",57,0)
 S (X,Y)=0
"RTN","LRAPDSR",58,0)
 I LRSS'="AU" D
"RTN","LRAPDSR",59,0)
 . F  S X=$O(^LR(LRDFN,LRSS,LRI,1.2,X)) Q:'X  D
"RTN","LRAPDSR",60,0)
 . . S X(0)=^LR(LRDFN,LRSS,LRI,1.2,X,0),Y=Y+1
"RTN","LRAPDSR",61,0)
 . . S DIR("A",Y)=Y_" - "_$$FMTE^XLFDT($P(X(0),"^"),"1M")
"RTN","LRAPDSR",62,0)
 . . S LRSFN=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:"")
"RTN","LRAPDSR",63,0)
 . . I $P(X(0),"^",2)'="" S DIR("A",Y)=DIR("A",Y)_"  Released: "_$$EXTERNAL^DILFD(LRSFN,.02,"",$P(X(0),"^",2))
"RTN","LRAPDSR",64,0)
 . . I $P(X(0),"^",3)'="" S DIR("A",Y)=DIR("A",Y)_"  Report Modified: "_$$EXTERNAL^DILFD(LRSFN,.03,"",$P(X(0),"^",3))
"RTN","LRAPDSR",65,0)
 . . S LRX(Y)=X
"RTN","LRAPDSR",66,0)
 ;
"RTN","LRAPDSR",67,0)
 I LRSS="AU" D
"RTN","LRAPDSR",68,0)
 . F  S X=$O(^LR(LRDFN,84,X)) Q:'X  D
"RTN","LRAPDSR",69,0)
 . . S X(0)=^LR(LRDFN,84,X,0),Y=Y+1
"RTN","LRAPDSR",70,0)
 . . S DIR("A",Y)=Y_" - "_$$FMTE^XLFDT($P(X(0),"^"),"1M")
"RTN","LRAPDSR",71,0)
 . . I $P(X(0),"^",2)'="" S DIR("A",Y)=DIR("A",Y)_"  Released: "_$$EXTERNAL^DILFD(63.324,.02,"",$P(X(0),"^",2))
"RTN","LRAPDSR",72,0)
 . . I $P(X(0),"^",3)'="" S DIR("A",Y)=DIR("A",Y)_"  Report Modified: "_$$EXTERNAL^DILFD(63.324,.03,"",$P(X(0),"^",3))
"RTN","LRAPDSR",73,0)
 . . S LRX(Y)=X
"RTN","LRAPDSR",74,0)
 ;
"RTN","LRAPDSR",75,0)
 S LRLAST=Y+1
"RTN","LRAPDSR",76,0)
 I LRLAST>1 D  Q:LRQUIT
"RTN","LRAPDSR",77,0)
 . S DIR("A",LRLAST)=LRLAST_" - Add a new SUPPLEMENTARY REPORT"
"RTN","LRAPDSR",78,0)
 . S DIR("A")="Select SUPPLEMENTARY REPORT"
"RTN","LRAPDSR",79,0)
 . S DIR("?",1)="Enter a number from 1 to "_LRLAST
"RTN","LRAPDSR",80,0)
 . S DIR("?")="Select the number of the supplementary report to edit"
"RTN","LRAPDSR",81,0)
 . S DIR(0)="NO:1:"_LRLAST_":0"
"RTN","LRAPDSR",82,0)
 . D ^DIR
"RTN","LRAPDSR",83,0)
 . I Y<1 S LRQUIT=1 Q
"RTN","LRAPDSR",84,0)
 ;
"RTN","LRAPDSR",85,0)
 ; Selected existing report
"RTN","LRAPDSR",86,0)
 I LRLAST>1,Y<LRLAST S LRSRDA=LRX(Y) Q
"RTN","LRAPDSR",87,0)
 ;
"RTN","LRAPDSR",88,0)
 ; Adding new report - ask for new date/time
"RTN","LRAPDSR",89,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPDSR",90,0)
 I LRLAST=1 W !,"Adding a new SUPPLEMENTARY REPORT"
"RTN","LRAPDSR",91,0)
 S DIR(0)=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="AU":63.324,LRSS="EM":63.207,1:"")_",.01"
"RTN","LRAPDSR",92,0)
 D ^DIR
"RTN","LRAPDSR",93,0)
 I Y<1 S LRQUIT=1 Q
"RTN","LRAPDSR",94,0)
 ;
"RTN","LRAPDSR",95,0)
 K DA,DO,DIC
"RTN","LRAPDSR",96,0)
 I LRSS'="AU" S DIC="^LR(LRDFN,LRSS,LRI,1.2,",DA(1)=LRDFN,DA=LRI
"RTN","LRAPDSR",97,0)
 E  S DIC="^LR(LRDFN,84,",DA=LRDFN
"RTN","LRAPDSR",98,0)
 S DIC(0)="EF",X=+Y,DIC("DR")=".02////0"
"RTN","LRAPDSR",99,0)
 D FILE^DICN
"RTN","LRAPDSR",100,0)
 I Y<1 S LRQUIT=1
"RTN","LRAPDSR",101,0)
 S LRSRDA=+Y
"RTN","LRAPDSR",102,0)
 ;
"RTN","LRAPDSR",103,0)
 Q
"RTN","LRAPDSR",104,0)
 ;
"RTN","LRAPDSR",105,0)
 ;
"RTN","LRAPDSR",106,0)
RELEAS2 ; Is the supplementary report already released?
"RTN","LRAPDSR",107,0)
 ;
"RTN","LRAPDSR",108,0)
 I LRSS'="AU" S LRX=$G(^LR(LRDFN,LRSS,LRI,1.2,LRSRDA,0))
"RTN","LRAPDSR",109,0)
 E  S LRX=$G(^LR(LRDFN,84,LRSRDA,0))
"RTN","LRAPDSR",110,0)
 S LRRLS2=+$P(LRX,"^",2)
"RTN","LRAPDSR",111,0)
 I LRRLS2 D
"RTN","LRAPDSR",112,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPDSR",113,0)
 . S DIR(0)="YO",DIR("B")="NO"
"RTN","LRAPDSR",114,0)
 . S DIR("A",1)=$C(7)
"RTN","LRAPDSR",115,0)
 . S DIR("A",2)="This supplementary report has been released."
"RTN","LRAPDSR",116,0)
 . S DIR("A",3)="Additions/modifications will create an audit trail."
"RTN","LRAPDSR",117,0)
 . S DIR("A")="Sure you want to update this record"
"RTN","LRAPDSR",118,0)
 . D ^DIR
"RTN","LRAPDSR",119,0)
 . I Y=1 S LRRLS1=1
"RTN","LRAPDSR",120,0)
 . E  S LRQUIT=1
"RTN","LRAPDSR",121,0)
 Q
"RTN","LRAPDSR",122,0)
 ;
"RTN","LRAPDSR",123,0)
 ;
"RTN","LRAPDSR",124,0)
COPY ; Make a copy of the current report.
"RTN","LRAPDSR",125,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",126,0)
 S LRIENS=LRSRDA_","_$S(LRSS'="AU":LRI_",",1:"")_LRDFN_","
"RTN","LRAPDSR",127,0)
 S LRFILE1=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:"")
"RTN","LRAPDSR",128,0)
 S:LRFILE1="" LRFILE1=$S(LRSS="AU":63.324,1:"")
"RTN","LRAPDSR",129,0)
 I LRFILE1="" S LRQUIT=1 Q
"RTN","LRAPDSR",130,0)
 D GETS^DIQ(LRFILE1,LRIENS,"**","Z","^TMP(""DIQ1"",$J)")
"RTN","LRAPDSR",131,0)
 Q
"RTN","LRAPDSR",132,0)
 ;
"RTN","LRAPDSR",133,0)
 ;
"RTN","LRAPDSR",134,0)
RPT ;
"RTN","LRAPDSR",135,0)
 N DIE,DA,DR
"RTN","LRAPDSR",136,0)
 ;S DIE=DIC K DIC
"RTN","LRAPDSR",137,0)
 S DIE=$S(LRSS="AU":"^LR(LRDFN,84,",1:"^LR(LRDFN,LRSS,LRI,1.2,")
"RTN","LRAPDSR",138,0)
 S (LRDA,DA)=LRSRDA
"RTN","LRAPDSR",139,0)
 S:LRSS="AU" DA(1)=LRDFN
"RTN","LRAPDSR",140,0)
 S:LRSS'="AU" DA(1)=LRI,DA(2)=LRDFN
"RTN","LRAPDSR",141,0)
 S DR=".01;1" D ^DIE
"RTN","LRAPDSR",142,0)
 I 'LRRLS S LRQUIT=1
"RTN","LRAPDSR",143,0)
 Q
"RTN","LRAPDSR",144,0)
 ;
"RTN","LRAPDSR",145,0)
 ;
"RTN","LRAPDSR",146,0)
QUESP ; Update the preliminary report print queue
"RTN","LRAPDSR",147,0)
 N LRIENS
"RTN","LRAPDSR",148,0)
 I '$D(^LRO(69.2,LRAA,1,LRAN,0)) D
"RTN","LRAPDSR",149,0)
 . K LRFDA
"RTN","LRAPDSR",150,0)
 . L +^LRO(69.2,LRAA,1):DILOCKTM
"RTN","LRAPDSR",151,0)
 . I '$T D  Q
"RTN","LRAPDSR",152,0)
 . . S MSG(1)="The preliminary reports queue is in use.",MSG(1,"F")="!!"
"RTN","LRAPDSR",153,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDSR",154,0)
 . . D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDSR",155,0)
 . S LRIENS="+1,"_LRAA_","
"RTN","LRAPDSR",156,0)
 . S LRFDA(69.21,LRIENS,.01)=LRDFN
"RTN","LRAPDSR",157,0)
 . S LRFDA(69.21,LRIENS,1)=LRI
"RTN","LRAPDSR",158,0)
 . S LRFDA(69.21,LRIENS,2)=LRH(0)
"RTN","LRAPDSR",159,0)
 . S LRORIEN(1)=LRAN
"RTN","LRAPDSR",160,0)
 . D UPDATE^DIE("","LRFDA","LRORIEN")
"RTN","LRAPDSR",161,0)
 . L -^LRO(69.2,LRAA,1)
"RTN","LRAPDSR",162,0)
 Q
"RTN","LRAPDSR",163,0)
 ;
"RTN","LRAPDSR",164,0)
 ;
"RTN","LRAPDSR",165,0)
COMPARE ; Compare reports
"RTN","LRAPDSR",166,0)
 I '$D(^TMP("DIQ1",$J)) S LRQUIT=1 Q
"RTN","LRAPDSR",167,0)
 S:LRSS'="AU" LRFILE="^LR(LRDFN,LRSS,LRI,1.2,LRDA,1,"
"RTN","LRAPDSR",168,0)
 S:LRSS="AU" LRFILE="^LR(LRDFN,84,LRDA,1,"
"RTN","LRAPDSR",169,0)
 I '$D(@(LRFILE_"0)")) D  Q
"RTN","LRAPDSR",170,0)
 . D:LRRLS1 UNRELEAS
"RTN","LRAPDSR",171,0)
 . S LRQUIT=1
"RTN","LRAPDSR",172,0)
 S LRA=0,LRFLG=1
"RTN","LRAPDSR",173,0)
 F  S LRA=$O(@(LRFILE_"LRA)")) Q:'LRA  D
"RTN","LRAPDSR",174,0)
 . S LRXTMP=@(LRFILE_"LRA,0)")
"RTN","LRAPDSR",175,0)
 . S:'$D(^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA,0)) LRFLG=0
"RTN","LRAPDSR",176,0)
 . Q:'LRFLG
"RTN","LRAPDSR",177,0)
 . S LRYTMP=^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA,0)
"RTN","LRAPDSR",178,0)
 . I LRXTMP'=LRYTMP S LRFLG=0
"RTN","LRAPDSR",179,0)
 I LRFLG D
"RTN","LRAPDSR",180,0)
 . S LRA=0
"RTN","LRAPDSR",181,0)
 . F  S LRA=$O(^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA)) Q:'LRA  D
"RTN","LRAPDSR",182,0)
 . . I '$D(@(LRFILE_"LRA,0)")) S LRFLG=0
"RTN","LRAPDSR",183,0)
 I LRFLG D
"RTN","LRAPDSR",184,0)
 . W $C(7),!!,"No changes were made to the supplementary report."
"RTN","LRAPDSR",185,0)
 . K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",186,0)
 . S LRQUIT=1
"RTN","LRAPDSR",187,0)
 Q
"RTN","LRAPDSR",188,0)
 ;
"RTN","LRAPDSR",189,0)
 ;
"RTN","LRAPDSR",190,0)
UNRELEAS ; Unrelease the supplementary report.
"RTN","LRAPDSR",191,0)
 K LRFDA
"RTN","LRAPDSR",192,0)
 S LRFDA(1,LRFILE1,LRIENS,.02)="@"
"RTN","LRAPDSR",193,0)
 D UPDATE^DIE("","LRFDA(1)")
"RTN","LRAPDSR",194,0)
 Q
"RTN","LRAPDSR",195,0)
 ;
"RTN","LRAPDSR",196,0)
 ;
"RTN","LRAPDSR",197,0)
UPDATE ; File changes
"RTN","LRAPDSR",198,0)
 ; First, store the date of the change and user ID
"RTN","LRAPDSR",199,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,+$G(LRI))
"RTN","LRAPDSR",200,0)
 K LRFDA
"RTN","LRAPDSR",201,0)
 S X="NOW",%DT="T" D ^%DT S LRNOW=Y
"RTN","LRAPDSR",202,0)
 S LRIENS1="+1,"_LRIENS
"RTN","LRAPDSR",203,0)
 S LRFILE=$S(LRSS="SP":63.8172,LRSS="CY":63.9072,LRSS="EM":63.2072,1:"")
"RTN","LRAPDSR",204,0)
 S:LRFILE="" LRFILE=$S(LRSS="AU":63.3242,1:"")
"RTN","LRAPDSR",205,0)
 I LRFILE="" S LRQUIT=1 Q
"RTN","LRAPDSR",206,0)
 S LRFDA(1,LRFILE,LRIENS1,.01)=LRNOW
"RTN","LRAPDSR",207,0)
 S LRFDA(1,LRFILE,LRIENS1,.02)=DUZ,LRFIELD=1
"RTN","LRAPDSR",208,0)
 D UPDATE^DIE("","LRFDA(1)","LRORIEN")
"RTN","LRAPDSR",209,0)
 ;If E-Sign switch OFF,set 3rd piece .03 SUPP REPORT MODIFIED to 1
"RTN","LRAPDSR",210,0)
 ;  to flag the supp report so it can be released via RS
"RTN","LRAPDSR",211,0)
 I 'LRESSW D
"RTN","LRAPDSR",212,0)
 . S:LRSS'="AU" $P(^LR(LRDFN,LRSS,LRI,1.2,LRDA,0),"^",3)=1
"RTN","LRAPDSR",213,0)
 . S:LRSS="AU" $P(^LR(LRDFN,84,LRDA,0),"^",3)=1
"RTN","LRAPDSR",214,0)
 Q
"RTN","LRAPDSR",215,0)
 ;
"RTN","LRAPDSR",216,0)
 ;
"RTN","LRAPDSR",217,0)
STORE ; Second, store the original report
"RTN","LRAPDSR",218,0)
 S LRIENS2=LRORIEN(1)_","_LRIENS
"RTN","LRAPDSR",219,0)
 S LRWPROOT="^TMP(""DIQ1"",$J,LRFILE1,LRIENS,1)"
"RTN","LRAPDSR",220,0)
 D WP^DIE(LRFILE,LRIENS2,LRFIELD,"",LRWPROOT)
"RTN","LRAPDSR",221,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",222,0)
 Q
"RTN","LRAPED")
0^96^B27109913
"RTN","LRAPED",1,0)
LRAPED ;DALOI/STAFF - ANATOMIC PATH EDIT LOG-IN ;Feb 2, 2009
"RTN","LRAPED",2,0)
 ;;5.2;LAB SERVICE;**1,31,72,115,259,350**;Sep 27, 1994;Build 230
"RTN","LRAPED",3,0)
 ;
"RTN","LRAPED",4,0)
 N LRTMP,LRREL,LRCOMP,LRMSG
"RTN","LRAPED",5,0)
 D ^LRAP Q:'$D(Y)
"RTN","LRAPED",6,0)
 D XR^LRU
"RTN","LRAPED",7,0)
 I LRCAPA D @(LRSS_"^LRAPSWK") G:'$D(X) END
"RTN","LRAPED",8,0)
 W !!,"EDIT ",LRO(68)," (",LRABV,") Log-In/Clinical Hx for ",LRH(0)," "
"RTN","LRAPED",9,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPED",10,0)
 I %=2 D  G:Y<1 END
"RTN","LRAPED",11,0)
 . S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: "
"RTN","LRAPED",12,0)
 . D ^%DT K %DT
"RTN","LRAPED",13,0)
 . Q:Y<1
"RTN","LRAPED",14,0)
 . S LRAD=$E(Y,1,3)_"0000",Y=LRAD D D^LRU S LRH(0)=Y
"RTN","LRAPED",15,0)
 S LRC=$E(LRAD,1,3)
"RTN","LRAPED",16,0)
G ;
"RTN","LRAPED",17,0)
 W !!,"Enter ",LRO(68)," Accession #: " R LRAN:DTIME
"RTN","LRAPED",18,0)
 G:LRAN=""!(LRAN[U) END
"RTN","LRAPED",19,0)
 I LRAN'?1N.N!($E(LRAN)=0) D  G G
"RTN","LRAPED",20,0)
 .W $C(7),!," ENTER NUMBERS ONLY, No leading zero's"
"RTN","LRAPED",21,0)
 D EDIT
"RTN","LRAPED",22,0)
 G G
"RTN","LRAPED",23,0)
 ;
"RTN","LRAPED",24,0)
 ;
"RTN","LRAPED",25,0)
EDIT ;
"RTN","LRAPED",26,0)
 N LRDIWESUB,LRFILE,LRACC
"RTN","LRAPED",27,0)
 S LRDFN=$O(^LR(LRXREF,LRC,LRABV,LRAN,0))
"RTN","LRAPED",28,0)
 I 'LRDFN W $C(7),"  Not in file" Q
"RTN","LRAPED",29,0)
 I '$D(^LR(LRDFN,0)) K ^LR(LRXREF,LRC,LRABV,LRAN,LRDFN) Q
"RTN","LRAPED",30,0)
 S X=^LR(LRDFN,0) D ^LRUP W !,LRP," ID: ",SSN," OK "
"RTN","LRAPED",31,0)
 S %=1 D YN^LRU Q:%'=1
"RTN","LRAPED",32,0)
 D @($S("CYEMSP"[LRSS:"I",1:"A"))
"RTN","LRAPED",33,0)
 Q
"RTN","LRAPED",34,0)
 ;
"RTN","LRAPED",35,0)
 ;
"RTN","LRAPED",36,0)
I ;Non-autopsy sections (SP,CY,EM)
"RTN","LRAPED",37,0)
 S LRI=+$O(^LR(LRXREF,LRC,LRABV,LRAN,LRDFN,0))
"RTN","LRAPED",38,0)
 I '$D(^LR(LRDFN,LRSS,LRI,0)) D  Q
"RTN","LRAPED",39,0)
 . W $C(7),!,"Entry in x-ref but not in file ! X-ref deleted."
"RTN","LRAPED",40,0)
 . K ^LR(LRXREF,LRC,LRABV,LRAN,LRDFN,LRI)
"RTN","LRAPED",41,0)
 S X=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(X,"^",10)
"RTN","LRAPED",42,0)
 S DA=LRI,DA(1)=LRDFN,DIE="^LR("_LRDFN_","""_LRSS_""",",(LRB,Y)=+X
"RTN","LRAPED",43,0)
 D D^LRU W !,"Specimen date: ",Y
"RTN","LRAPED",44,0)
 I $P(^LR(LRDFN,LRSS,LRI,0),"^",11)!($P(^(0),"^",3)) D  Q
"RTN","LRAPED",45,0)
 . W $C(7),!!,"Report released or completed.  Cannot edit Log-in data."
"RTN","LRAPED",46,0)
 D:LRCAPA C^LRAPSWK
"RTN","LRAPED",47,0)
 ;
"RTN","LRAPED",48,0)
DIE ;
"RTN","LRAPED",49,0)
 ;
"RTN","LRAPED",50,0)
 W ! D CK^LRU
"RTN","LRAPED",51,0)
 I $D(LR("CK")) K LR("CK") Q
"RTN","LRAPED",52,0)
 S LRACC=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",6)
"RTN","LRAPED",53,0)
 ;
"RTN","LRAPED",54,0)
 S LRDIWESUB="["_LRACC_"]"
"RTN","LRAPED",55,0)
 ;
"RTN","LRAPED",56,0)
 D SET,^DIE
"RTN","LRAPED",57,0)
 I $D(Y) D HELP G DIE
"RTN","LRAPED",58,0)
 D CK
"RTN","LRAPED",59,0)
 D:$O(^LR(LRDFN,LRSS,LRI,.1,0))&("SPCYEM"[LRSS)&(LRCAPA) C1^LRAPSWK
"RTN","LRAPED",60,0)
 D FRE^LRU
"RTN","LRAPED",61,0)
 Q
"RTN","LRAPED",62,0)
 ;
"RTN","LRAPED",63,0)
 ;
"RTN","LRAPED",64,0)
SET ; Setup fields for SP, CY and EM subscripts to edit.
"RTN","LRAPED",65,0)
 ;
"RTN","LRAPED",66,0)
 ;N LRFIELD,LRFILE
"RTN","LRAPED",67,0)
 ;S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPED",68,0)
 ;F LRFIELD=.013,.014,.015,.016 S LRDIWESUB(LRFILE,LRFIELD)=$$SET2(LRFILE,LRFIELD,LRACC)
"RTN","LRAPED",69,0)
 ;
"RTN","LRAPED",70,0)
 S (LRJ,LRE,LRF)=""
"RTN","LRAPED",71,0)
 S DR=".08;S LRE=X;.07;S LRJ=X;S:LRJ LRJ=$P(^VA(200,LRJ,0),U);"
"RTN","LRAPED",72,0)
 S DR=DR_".011//^S X=LRJ;.012;.013;.014;.015;.016;.1;S LRG=X;.02;.021;"
"RTN","LRAPED",73,0)
 S DR=DR_".99;S LRF=X"
"RTN","LRAPED",74,0)
 ;
"RTN","LRAPED",75,0)
 I LRSS="SP" S DR(2,63.812)=".01;.06R;.07R"
"RTN","LRAPED",76,0)
 ;
"RTN","LRAPED",77,0)
 I LRSS="CY" S DR(2,63.902)=".01;.02;.06R;.07R"
"RTN","LRAPED",78,0)
 ;
"RTN","LRAPED",79,0)
 I LRSS="EM" S DR(2,63.202)=".01;.06R;.07R"
"RTN","LRAPED",80,0)
 Q
"RTN","LRAPED",81,0)
 ;
"RTN","LRAPED",82,0)
 ;
"RTN","LRAPED",83,0)
SET1 ; Setup autopsy fields to edit.
"RTN","LRAPED",84,0)
 ;
"RTN","LRAPED",85,0)
 S LRJ="",DA=LRDFN,DIE="^LR(",DR="11;S LRRC=X;14.1;S LRLLOC=X;14.5;"
"RTN","LRAPED",86,0)
 S DR=DR_"14.6;S LRSVC=X;12.1;S LRMD=X;13.5:13.8"
"RTN","LRAPED",87,0)
 S:%=1 DR=DR_";16:24;26:31;25;31.1:31.4;25.1:25.9"
"RTN","LRAPED",88,0)
 D D^LRAUAW
"RTN","LRAPED",89,0)
 S (Y,LRB)=LR(63,12),LRI=9999999-$P(LRB,".")
"RTN","LRAPED",90,0)
 Q
"RTN","LRAPED",91,0)
 ;
"RTN","LRAPED",92,0)
 ;
"RTN","LRAPED",93,0)
SET2(FILE,FIELD,PREFIX) ; Build field name with specified prefix.
"RTN","LRAPED",94,0)
 ; Call with  FILE = file or subfile number
"RTN","LRAPED",95,0)
 ;           FIELD = field number of WP field
"RTN","LRAPED",96,0)
 ;          PREFIX = prefix for subject header
"RTN","LRAPED",97,0)
 ;
"RTN","LRAPED",98,0)
 N LABEL
"RTN","LRAPED",99,0)
 S LABEL=$$GET1^DID(FILE,FIELD,"","LABEL")
"RTN","LRAPED",100,0)
 I LABEL'="" S LABEL=PREFIX_" "_LABEL
"RTN","LRAPED",101,0)
 ;
"RTN","LRAPED",102,0)
 Q LABEL
"RTN","LRAPED",103,0)
 ;
"RTN","LRAPED",104,0)
 ;
"RTN","LRAPED",105,0)
A ;Autopsy
"RTN","LRAPED",106,0)
 S LRREL=+$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPED",107,0)
 S LRCOMP=+$$GET1^DIQ(63,LRDFN_",",13,"I")
"RTN","LRAPED",108,0)
 I LRREL!LRCOMP D  Q
"RTN","LRAPED",109,0)
 . D EN^DDIOL($C(7)_"Report released or completed.  Cannot edit Log-in data.","","!!")
"RTN","LRAPED",110,0)
 W !!,"Edit Weights & Measurements " S %=2 D YN^LRU Q:%<1
"RTN","LRAPED",111,0)
 S LRRC=$P(^LR(LRDFN,"AU"),U),DA=LRDFN,DIE="^LR("
"RTN","LRAPED",112,0)
 D SET1,D^LRU
"RTN","LRAPED",113,0)
 W !!,"Date Died: ",Y
"RTN","LRAPED",114,0)
 I 'LRB D  Q
"RTN","LRAPED",115,0)
 . W $C(7),"?  Must have date died entered in ",LR(63,.02)," File."
"RTN","LRAPED",116,0)
 ;
"RTN","LRAPED",117,0)
 S LRACC=$P($G(^LR(LRDFN,"AU")),"^",6)
"RTN","LRAPED",118,0)
 ;
"RTN","LRAPED",119,0)
AU ;
"RTN","LRAPED",120,0)
 ;
"RTN","LRAPED",121,0)
 S LRDIWESUB="["_LRACC_"]"
"RTN","LRAPED",122,0)
 W ! D ^DIE
"RTN","LRAPED",123,0)
 I $D(Y) D HELP G AU
"RTN","LRAPED",124,0)
 D CK1
"RTN","LRAPED",125,0)
 Q
"RTN","LRAPED",126,0)
 ;
"RTN","LRAPED",127,0)
 ;
"RTN","LRAPED",128,0)
CK ;
"RTN","LRAPED",129,0)
 I '$D(^LR(LRDFN,LRSS,LRI)) D K
"RTN","LRAPED",130,0)
 Q
"RTN","LRAPED",131,0)
 ;
"RTN","LRAPED",132,0)
 ;
"RTN","LRAPED",133,0)
CK1 ;
"RTN","LRAPED",134,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S X=^(0)
"RTN","LRAPED",135,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) ^(3)=LRB_"^^^^"_LRI
"RTN","LRAPED",136,0)
 S LRTMP=$P(X,U,1,2)_U_LRRC_U_$P(X,U,4,6)_U_LRLLOC_U_LRMD_U_LRSVC
"RTN","LRAPED",137,0)
 S LRTMP=LRTMP_U_$P(X,U,10)
"RTN","LRAPED",138,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,0)=LRTMP
"RTN","LRAPED",139,0)
 S LRD=+$P(X,U,3)
"RTN","LRAPED",140,0)
 K ^LRO(68,LRAA,1,LRAD,1,"E",LRD,LRAN)
"RTN","LRAPED",141,0)
 S ^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)=""
"RTN","LRAPED",142,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,3),^(3)=LRB_U_$P(X,U,2,99)
"RTN","LRAPED",143,0)
 Q
"RTN","LRAPED",144,0)
 ;
"RTN","LRAPED",145,0)
 ;
"RTN","LRAPED",146,0)
K ;
"RTN","LRAPED",147,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN))  D K^LRUDEL
"RTN","LRAPED",148,0)
 L +^LRO(68,LRAA):999
"RTN","LRAPED",149,0)
 K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)
"RTN","LRAPED",150,0)
 K ^LRO(68,LRAA,1,"AC",DUZ(2),LRAD,LRAN)
"RTN","LRAPED",151,0)
 S X=^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPED",152,0)
 S LRTMP=$P(X,"^",1,2)_"^"_(LRAN-1)_"^"_($P(X,"^",4)-1)
"RTN","LRAPED",153,0)
 S ^LRO(68,LRAA,1,LRAD,1,0)=LRTMP
"RTN","LRAPED",154,0)
 L -^LRO(68,LRAA)
"RTN","LRAPED",155,0)
 F A=1,2,3,4 D
"RTN","LRAPED",156,0)
 . I $D(^LRO(69.2,LRAA,A,LRAN)) K ^(LRAN) D
"RTN","LRAPED",157,0)
 . . S X(1)=$O(^LRO(69.2,LRAA,A,0)) S:'X(1) X(1)=0
"RTN","LRAPED",158,0)
 . . I $D(^LRO(69.2,LRAA,A,0)) D
"RTN","LRAPED",159,0)
 . . . L +^LRO(69.2,LRAA,A):999
"RTN","LRAPED",160,0)
 . . . S X=^LRO(69.2,LRAA,A,0)
"RTN","LRAPED",161,0)
 . . . S LRTMP=$P(X,"^",1,2)_"^"_X(1)_"^"_$S(X(1)=0:X(1),1:($P(X,"^",4)-1))
"RTN","LRAPED",162,0)
 . . . S ^LRO(69.2,LRAA,A,0)=LRTMP
"RTN","LRAPED",163,0)
 . . . L -^LRO(69.2,LRAA,A)
"RTN","LRAPED",164,0)
 Q
"RTN","LRAPED",165,0)
 ;
"RTN","LRAPED",166,0)
 ;
"RTN","LRAPED",167,0)
HELP ;
"RTN","LRAPED",168,0)
 W $C(7),!!,"Please do not exit EDIT with an ""^""."
"RTN","LRAPED",169,0)
 W !,"Press RETURN key repeatedly to complete the edit.",!!
"RTN","LRAPED",170,0)
 Q
"RTN","LRAPED",171,0)
 ;
"RTN","LRAPED",172,0)
 ;
"RTN","LRAPED",173,0)
END ;
"RTN","LRAPED",174,0)
 D V^LRU
"RTN","LRAPED",175,0)
 Q
"RTN","LRAPF")
0^104^B5527434
"RTN","LRAPF",1,0)
LRAPF ;DALOI/STAFF - CY/EM/SP RPT ;11/14/11  13:04
"RTN","LRAPF",2,0)
 ;;5.2;LAB SERVICE;**173,201,248,259,350**;Sep 27, 1994;Build 230
"RTN","LRAPF",3,0)
 ;
"RTN","LRAPF",4,0)
 ; 23-MAR-01;WTY;Trimmed down DX in line tag F per SAM-0301-22193
"RTN","LRAPF",5,0)
 ;
"RTN","LRAPF",6,0)
 ; From LRSPRPT,LRSPRPT1, LRSPRPT2, LRSPRPTM
"RTN","LRAPF",7,0)
 I $D(LR("F")),IOST?1"C".E D  Q:LR("Q")
"RTN","LRAPF",8,0)
 . K DIR S DIR(0)="E"
"RTN","LRAPF",9,0)
 . D ^DIR W !
"RTN","LRAPF",10,0)
 . S:$D(DTOUT)!(X[U) LR("Q")=1
"RTN","LRAPF",11,0)
 ;
"RTN","LRAPF",12,0)
 W:($D(LR("F"))) @IOF
"RTN","LRAPF",13,0)
 S LRQ=LRQ+1
"RTN","LRAPF",14,0)
 ;
"RTN","LRAPF",15,0)
 ; Print printing and reporting facility
"RTN","LRAPF",16,0)
 I LRQ=1,$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D
"RTN","LRAPF",17,0)
 . N A
"RTN","LRAPF",18,0)
 . D PFAC^LRRP1(DUZ(2),0,1,.A)
"RTN","LRAPF",19,0)
 . S A=0
"RTN","LRAPF",20,0)
 . F  S A=$O(A(A)) Q:'A  W !,A(A)
"RTN","LRAPF",21,0)
 ;
"RTN","LRAPF",22,0)
 I LRQ=1,$$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LRAPF",23,0)
 . N B,LRX
"RTN","LRAPF",24,0)
 . S LRX=+$G(^LR(LRDFN,LRSS,LRI,"RF"))
"RTN","LRAPF",25,0)
 . I LRX<1 Q
"RTN","LRAPF",26,0)
 . D RL^LRRP1(LRX,1,.B)
"RTN","LRAPF",27,0)
 . W ! S B=0
"RTN","LRAPF",28,0)
 . F  S B=$O(B(B)) Q:'B  W !,B(B)
"RTN","LRAPF",29,0)
 ;
"RTN","LRAPF",30,0)
 D W
"RTN","LRAPF",31,0)
 W !?5,"MEDICAL RECORD |",?40,LRAA(1),?73,"Pg ",LRQ
"RTN","LRAPF",32,0)
 D:LRQ>1 P
"RTN","LRAPF",33,0)
 D W
"RTN","LRAPF",34,0)
 Q
"RTN","LRAPF",35,0)
 ;
"RTN","LRAPF",36,0)
 ;
"RTN","LRAPF",37,0)
F ; from LRSPRPT,LRSPRPT1, LRSPRPT2, LRSPRPTM
"RTN","LRAPF",38,0)
 Q:LR("Q")
"RTN","LRAPF",39,0)
 I IOSL'>66 F  Q:$Y>(IOSL-11)  W !
"RTN","LRAPF",40,0)
 D W W !,$S('$D(LR("W")):"",1:"See signed copy in chart")
"RTN","LRAPF",41,0)
 W ?57,"(",$S($D(LRO):"End of report",1:"See next page"),")"
"RTN","LRAPF",42,0)
 W !,$G(LRPMD),?52,LRW(9),?55,"| Date ",$G(LRRC)
"RTN","LRAPF",43,0)
 D W
"RTN","LRAPF",44,0)
 W !,LRP,?50,$S('$D(LR("W")):"STANDARD FORM 515",1:"WORK COPY ONLY !!")
"RTN","LRAPF",45,0)
 W !,"ID:",SSN,?16,"SEX:",SEX," DOB:",DOB
"RTN","LRAPF",46,0)
 I AGE W $S($G(VADM(6))'="":" AGE AT DEATH: ",1:" AGE: "),AGE
"RTN","LRAPF",47,0)
 W " LOC:",$E(LRLLOC,1,20)
"RTN","LRAPF",48,0)
 W ! W:LRADM'="" "ADM:",$P(LRADM,"@")
"RTN","LRAPF",49,0)
 W:LRADX'="" ?17,"DX:",$E(LRADX,1,26)
"RTN","LRAPF",50,0)
 W ?46,"PCP: "
"RTN","LRAPF",51,0)
 W:LRPRAC ?51,$E(LRPRAC(1),1,28)
"RTN","LRAPF",52,0)
 Q
"RTN","LRAPF",53,0)
 ;
"RTN","LRAPF",54,0)
 ;
"RTN","LRAPF",55,0)
P ;
"RTN","LRAPF",56,0)
 ; Handle printing footer after printing prior cases on end of report and LRI now null.
"RTN","LRAPF",57,0)
 I $G(LRI)<1 N LRI S LRI=+$P($G(LRAP),"^",2)
"RTN","LRAPF",58,0)
 ;
"RTN","LRAPF",59,0)
 D:LRQ>1 W
"RTN","LRAPF",60,0)
 ;
"RTN","LRAPF",61,0)
 S ADESC="Accession No. "_$S(LRQ(8)]"":LRQ(8)_LRW(1)_" "_LRAC,1:LRAC)
"RTN","LRAPF",62,0)
 S LENG1=$L(LRQ(1)),LENG2=$L(ADESC),LNSPCE=IOM-LENG2-14
"RTN","LRAPF",63,0)
 S:LENG1>LNSPCE LRQ(1)=$E(LRQ(1),1,LNSPCE)
"RTN","LRAPF",64,0)
 ;
"RTN","LRAPF",65,0)
 W !?30,"PATHOLOGY REPORT",!
"RTN","LRAPF",66,0)
 ;
"RTN","LRAPF",67,0)
 I '$G(^LR(LRDFN,LRSS,+LRI,"RF")) W "Laboratory: ",LRQ(1)
"RTN","LRAPF",68,0)
 W ?(IOM-LENG2-1),ADESC
"RTN","LRAPF",69,0)
 ;
"RTN","LRAPF",70,0)
 K ADESC,LENG1,LENG2,LNSPCE
"RTN","LRAPF",71,0)
 Q
"RTN","LRAPF",72,0)
 ;
"RTN","LRAPF",73,0)
 ;
"RTN","LRAPF",74,0)
W ;
"RTN","LRAPF",75,0)
 W !,LR("%")
"RTN","LRAPF",76,0)
 Q
"RTN","LRAPFICH")
0^176^B11962057
"RTN","LRAPFICH",1,0)
LRAPFICH ;DALOI/STAFF - MICROFICH PATH REPORTS ;04/10/12  11:58
"RTN","LRAPFICH",2,0)
 ;;5.2;LAB SERVICE;**72,173,248,259,350**;Sep 27, 1994;Build 230
"RTN","LRAPFICH",3,0)
 ;
"RTN","LRAPFICH",4,0)
 ; Final path reports by accession number
"RTN","LRAPFICH",5,0)
 D END
"RTN","LRAPFICH",6,0)
 N LRQUIT
"RTN","LRAPFICH",7,0)
 W ! S LRDICS="SPCYEM" D ^LRAP G:'$D(Y) END
"RTN","LRAPFICH",8,0)
 ;KLL - Final Office Copy prints SNOMED codes on a separate page
"RTN","LRAPFICH",9,0)
 D FOC
"RTN","LRAPFICH",10,0)
 ;Variable LR("DVD") is used to divide reports displayed in the browser
"RTN","LRAPFICH",11,0)
 K LR("DVD")
"RTN","LRAPFICH",12,0)
 S $P(LR("DVD"),"|",IOM)=""
"RTN","LRAPFICH",13,0)
 S %DT("A")="Select Accession YEAR: ",%DT="AEQ" D ^%DT K %DT G:Y<1 END S LR("Y")=$E(Y,1,3)
"RTN","LRAPFICH",14,0)
 ;
"RTN","LRAPFICH",15,0)
A ;
"RTN","LRAPFICH",16,0)
 R !,"Start with accession #: ",X:DTIME G:X[U!(X="") END I X'?1N.N W $C(7),!,"Enter a number." G A
"RTN","LRAPFICH",17,0)
 S LR("B")=X
"RTN","LRAPFICH",18,0)
 ;
"RTN","LRAPFICH",19,0)
B ;
"RTN","LRAPFICH",20,0)
 R !,"Go      to accession #: ",X:DTIME G:X[U!(X="") END I X'?1N.N W $C(7),!,"Enter a number." G B
"RTN","LRAPFICH",21,0)
 S LR("E")=X I LR("E")<LR("B") S X=LR("B"),LR("B")=LR("E"),LR("E")=X
"RTN","LRAPFICH",22,0)
 S LR("B")=LR("B")-1
"RTN","LRAPFICH",23,0)
SETUP ;
"RTN","LRAPFICH",24,0)
 W !
"RTN","LRAPFICH",25,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRAPFICH",26,0)
 I POP W ! D END Q
"RTN","LRAPFICH",27,0)
 I $D(IO("Q")) D  Q
"RTN","LRAPFICH",28,0)
 . S ZTDESC="Final path reports by accession #"
"RTN","LRAPFICH",29,0)
 . S ZTSAVE("LR*")="",ZTRTN="QUE^LRAPFICH",ZTREQ="@",ZTIO=ION
"RTN","LRAPFICH",30,0)
 . D ^%ZTLOAD
"RTN","LRAPFICH",31,0)
 . W:$D(ZTSK) !,"Report Queued to device ",ION
"RTN","LRAPFICH",32,0)
 . K ZTIO,ZTSK,IO("Q"),ZTREQ
"RTN","LRAPFICH",33,0)
 . D HOME^%ZIS
"RTN","LRAPFICH",34,0)
 ;
"RTN","LRAPFICH",35,0)
QUE ;
"RTN","LRAPFICH",36,0)
 U IO S LR("DIWF")="W",(LR,LR("A"),LR(1),LR(2),LR(3))=0
"RTN","LRAPFICH",37,0)
 S (LRA,LRQ(3))=1
"RTN","LRAPFICH",38,0)
 D L^LRU,S^LRU,XR^LRU,L1^LRU,EN2^LRUA,SET^LRUA
"RTN","LRAPFICH",39,0)
 S LRAN=LR("B")
"RTN","LRAPFICH",40,0)
 F  S LRAN=$O(^LR(LRXREF,LR("Y"),LRABV,LRAN)) Q:'LRAN!(LRAN>LR("E"))!(LR("Q"))  D
"RTN","LRAPFICH",41,0)
 . S LRDFN=$O(^LR(LRXREF,LR("Y"),LRABV,LRAN,0)),LRI=$O(^(LRDFN,0))
"RTN","LRAPFICH",42,0)
 . S LRSF515=1,LRQUIT=0
"RTN","LRAPFICH",43,0)
 . K LR("F")
"RTN","LRAPFICH",44,0)
 . D TIUCHK^LRAPUTL(.LRPTR,LRDFN,LRSS,LRI)
"RTN","LRAPFICH",45,0)
 . I +$G(LRPTR) D  Q
"RTN","LRAPFICH",46,0)
 . . D MAIN^LRAPTIUP(LRPTR,0)
"RTN","LRAPFICH",47,0)
 . . W:IOST["BROWSER" !!,LR("DVD")
"RTN","LRAPFICH",48,0)
 . . K LRPTR
"RTN","LRAPFICH",49,0)
 . . ;KLL-Print SNOMED Codes if Final Office Copy selected
"RTN","LRAPFICH",50,0)
 . . I LRFOC D FOC^LRSPRPT
"RTN","LRAPFICH",51,0)
 . . I LRQUIT S LR("Q")=1 Q
"RTN","LRAPFICH",52,0)
 . . S LR("F")=1
"RTN","LRAPFICH",53,0)
 . . I 'LR("Q"),$D(LR("F")),IOST?1"C-".E D CONT
"RTN","LRAPFICH",54,0)
 . . ;Check for and print unreleased supplementary reports
"RTN","LRAPFICH",55,0)
 . . D UNRLSUP
"RTN","LRAPFICH",56,0)
 . . I LRFND D WRUNSUP
"RTN","LRAPFICH",57,0)
 . W:IOST?1"C-".E @IOF
"RTN","LRAPFICH",58,0)
 . D EN^LRSPRPT
"RTN","LRAPFICH",59,0)
 . W:IOST?1"P-".E @IOF
"RTN","LRAPFICH",60,0)
 . W:IOST["BROWSER" !!,LR("DVD")
"RTN","LRAPFICH",61,0)
 . I LRFOC D FOC^LRSPRPT
"RTN","LRAPFICH",62,0)
 . I 'LR("Q"),$D(LR("F")),IOST?1"C-".E D CONT
"RTN","LRAPFICH",63,0)
 D ^%ZISC
"RTN","LRAPFICH",64,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRAPFICH",65,0)
 K %,DIR,DTOUT,DUOUT,DIRUT,X,Y
"RTN","LRAPFICH",66,0)
 D END
"RTN","LRAPFICH",67,0)
 Q
"RTN","LRAPFICH",68,0)
 ;
"RTN","LRAPFICH",69,0)
 ;
"RTN","LRAPFICH",70,0)
FOC ;Final Office Copy
"RTN","LRAPFICH",71,0)
 W !
"RTN","LRAPFICH",72,0)
 K DIR
"RTN","LRAPFICH",73,0)
 S LRFOC=0
"RTN","LRAPFICH",74,0)
 S DIR(0)="Y",DIR("A")="Is this a final office copy"
"RTN","LRAPFICH",75,0)
 S DIR("B")="YES"
"RTN","LRAPFICH",76,0)
 S DIR("?",1)="SNOMED codes no longer appear on the report.  The final"
"RTN","LRAPFICH",77,0)
 S DIR("?",1)=DIR("?",1)_" office copy prints"
"RTN","LRAPFICH",78,0)
 S DIR("?")="these codes on a separate page.  Enter 'Yes' to include "
"RTN","LRAPFICH",79,0)
 S DIR("?")=DIR("?")_"this page."
"RTN","LRAPFICH",80,0)
 D ^DIR
"RTN","LRAPFICH",81,0)
 I Y S LRFOC=1
"RTN","LRAPFICH",82,0)
 Q
"RTN","LRAPFICH",83,0)
 ;
"RTN","LRAPFICH",84,0)
 ;
"RTN","LRAPFICH",85,0)
UNRLSUP ;Check for unreleased supp reports and print them
"RTN","LRAPFICH",86,0)
 S LRFND=0
"RTN","LRAPFICH",87,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.2,0)) D
"RTN","LRAPFICH",88,0)
 .S LRV=0 F  S LRV=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV)) Q:'LRV!(LRFND)  D
"RTN","LRAPFICH",89,0)
 ..I $P(^LR(LRDFN,LRSS,LRI,1.2,LRV,0),"^",2)="" S LRFND=1
"RTN","LRAPFICH",90,0)
 Q
"RTN","LRAPFICH",91,0)
 ;
"RTN","LRAPFICH",92,0)
 ;
"RTN","LRAPFICH",93,0)
WRUNSUP ;W:IOST?1"C-".E @IOF
"RTN","LRAPFICH",94,0)
 D EN^LRSPRPT
"RTN","LRAPFICH",95,0)
 ;W:IOST?1"P-".E @IOF
"RTN","LRAPFICH",96,0)
 W:IOST["BROWSER" !!,LR("DVD")
"RTN","LRAPFICH",97,0)
 ;I LRFOC D FOC^LRSPRPT
"RTN","LRAPFICH",98,0)
 I 'LR("Q"),$D(LR("F")),IOST?1"C-".E D CONT
"RTN","LRAPFICH",99,0)
 Q
"RTN","LRAPFICH",100,0)
 ;
"RTN","LRAPFICH",101,0)
 ;
"RTN","LRAPFICH",102,0)
CONT ;
"RTN","LRAPFICH",103,0)
 K DIR S DIR(0)="E"
"RTN","LRAPFICH",104,0)
 D ^DIR W !
"RTN","LRAPFICH",105,0)
 S:$D(DTOUT)!(X[U) LR("Q")=1
"RTN","LRAPFICH",106,0)
 Q
"RTN","LRAPFICH",107,0)
 ;
"RTN","LRAPFICH",108,0)
 ;
"RTN","LRAPFICH",109,0)
END ;
"RTN","LRAPFICH",110,0)
 D V^LRU
"RTN","LRAPFICH",111,0)
 K LRSF515
"RTN","LRAPFICH",112,0)
 Q
"RTN","LRAPLG1")
0^56^B161872680
"RTN","LRAPLG1",1,0)
LRAPLG1 ;DALOI/CKA/JMC - LOG-IN CONT. ;07/16/12  11:11
"RTN","LRAPLG1",2,0)
 ;;5.2;LAB SERVICE;**72,121,248,308,350**;Sep 27, 1994;Build 230
"RTN","LRAPLG1",3,0)
 ;
"RTN","LRAPLG1",4,0)
 ; Reference to DISP^SROSPLG supported by IA #893
"RTN","LRAPLG1",5,0)
 ;
"RTN","LRAPLG1",6,0)
START ; Start logging in the specimens.
"RTN","LRAPLG1",7,0)
 N LRFND,LRMSG,LRXX
"RTN","LRAPLG1",8,0)
 ;
"RTN","LRAPLG1",9,0)
 ; Lock ^LR( and ^LRO
"RTN","LRAPLG1",10,0)
 D LOCK^DILF("^LR(LRDFN,LRSS)")
"RTN","LRAPLG1",11,0)
 I '$T D  Q
"RTN","LRAPLG1",12,0)
 . S LRMSG="This record is locked by another user. Please try later."
"RTN","LRAPLG1",13,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPLG1",14,0)
 ;
"RTN","LRAPLG1",15,0)
 D LOCK^DILF("^LRO(68,LRAA,1,LRAD,1,0)")
"RTN","LRAPLG1",16,0)
 I '$T D  Q
"RTN","LRAPLG1",17,0)
 . L -^LR(LRDFN,LRSS)
"RTN","LRAPLG1",18,0)
 . S LRMSG="Someone else is logging in specimens.  Please wait and try again."
"RTN","LRAPLG1",19,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPLG1",20,0)
 ;
"RTN","LRAPLG1",21,0)
 ; Check that accession date exists first
"RTN","LRAPLG1",22,0)
 D CHECK68^LRWLST1(LRAA,LRAD)
"RTN","LRAPLG1",23,0)
 ;
"RTN","LRAPLG1",24,0)
EN ;
"RTN","LRAPLG1",25,0)
 S LRAN=+$P(^LRO(68,LRAA,1,LRAD,1,0),U,3),(LRI,LRIDT)=""
"RTN","LRAPLG1",26,0)
 F  Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN))  S LRAN=LRAN+1
"RTN","LRAPLG1",27,0)
 W !!,"Assign ",LRO(68)," (",LRABV,") accession #: ",LRAN S %=1 D YN^LRU
"RTN","LRAPLG1",28,0)
 I %<1 L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",29,0)
 ;
"RTN","LRAPLG1",30,0)
 I %=1,$D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN)) D  Q:$D(LRFND)
"RTN","LRAPLG1",31,0)
 . I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),$P(^(0),U) S X=LRAN D ^LRUTELL S LRFND=1
"RTN","LRAPLG1",32,0)
 . I '$D(LRFND) D ^LRAPLG2
"RTN","LRAPLG1",33,0)
 . I $D(LRFND) L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",34,0)
 . S %=0
"RTN","LRAPLG1",35,0)
 ;
"RTN","LRAPLG1",36,0)
 I %=1 D CRE868 I $D(LRMSG) G EN
"RTN","LRAPLG1",37,0)
 ;
"RTN","LRAPLG1",38,0)
 I %=2 D OS I $D(LRFND) K LRFND L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",39,0)
 ;
"RTN","LRAPLG1",40,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPLG1",41,0)
 ;
"RTN","LRAPLG1",42,0)
 S LRAC=$P(^LRO(68,LRAA,0),U,11)_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","LRAPLG1",43,0)
 ;
"RTN","LRAPLG1",44,0)
AU ; Autopsy Specific
"RTN","LRAPLG1",45,0)
 I LRSS="AU" D ^LRAUAW Q
"RTN","LRAPLG1",46,0)
 S:'$D(^LR(LRDFN,LRSS,0)) ^(0)="^"_LRSF_"DA^0^0"
"RTN","LRAPLG1",47,0)
 ;
"RTN","LRAPLG1",48,0)
 ; If orginal login then create entry in file #63
"RTN","LRAPLG1",49,0)
LR7OFA0 ;
"RTN","LRAPLG1",50,0)
 I LRIDT="" D CRE863
"RTN","LRAPLG1",51,0)
 I LRI="" Q
"RTN","LRAPLG1",52,0)
 ;
"RTN","LRAPLG1",53,0)
 K DA,DTOUT,DIWESUB
"RTN","LRAPLG1",54,0)
 ;S DIWESUB=$E(PNM,1,27-$L(LRACC))_" ["_LRACC_"]"
"RTN","LRAPLG1",55,0)
 S LR(.07)=$S($D(SRDOC):SRDOC,1:"") K SRDOC
"RTN","LRAPLG1",56,0)
 S:LR(.07) LR(.07)=$P($G(^VA(200,LR(.07),0)),"^")
"RTN","LRAPLG1",57,0)
 S DA=LRI,DA(1)=LRDFN
"RTN","LRAPLG1",58,0)
 S DIC(0)="EQLMF",DLAYGO=63,DIE="^LR(LRDFN,LRSS,"
"RTN","LRAPLG1",59,0)
 D @LR("L")
"RTN","LRAPLG1",60,0)
 D ^DIE K DLAYGO
"RTN","LRAPLG1",61,0)
 S:'$D(LRRC) LRRC=LRNT
"RTN","LRAPLG1",62,0)
 ;
"RTN","LRAPLG1",63,0)
 ; Check if topography and collection sample entered on each specimen.
"RTN","LRAPLG1",64,0)
 ; If not entered then define Y to cause entry to be deleted.
"RTN","LRAPLG1",65,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRAPLG1",66,0)
 . N I,LRJ,X
"RTN","LRAPLG1",67,0)
 . S LRJ=0
"RTN","LRAPLG1",68,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRI,.1,LRJ)) Q:LRJ<1  D  Q:$D(Y)
"RTN","LRAPLG1",69,0)
 . . S X=$G(^LR(LRDFN,LRSS,LRI,.1,LRJ,0))
"RTN","LRAPLG1",70,0)
 . . F I=6,7 I $P(X,"^",I)="" S Y="" Q
"RTN","LRAPLG1",71,0)
 ;
"RTN","LRAPLG1",72,0)
 ; Delete entry if prompts not answered unless report has been released.
"RTN","LRAPLG1",73,0)
 I $D(DTOUT)!$D(Y) D  Q
"RTN","LRAPLG1",74,0)
 . N DA,DIK
"RTN","LRAPLG1",75,0)
 . I LRSS?1(1"SP",1"CY",1"EM"),($P(^LR(LRDFN,LRSS,LRI,0),"^",11)!$P(^LR(LRDFN,LRSS,LRI,0),"^",15)) Q
"RTN","LRAPLG1",76,0)
 . W $C(7),!!,"All Prompts not answered - <ENTRY DELETED>"
"RTN","LRAPLG1",77,0)
 . S DA(1)=LRDFN,DA=LRI
"RTN","LRAPLG1",78,0)
 . S DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",79,0)
 . D ^DIK,X,END
"RTN","LRAPLG1",80,0)
 ;
"RTN","LRAPLG1",81,0)
 D GETSTCS ; Store specimen topography, coll sample in temp array
"RTN","LRAPLG1",82,0)
 ;
"RTN","LRAPLG1",83,0)
TST ; Get the ordered test and store in temp array
"RTN","LRAPLG1",84,0)
 N II
"RTN","LRAPLG1",85,0)
 D ORDTST
"RTN","LRAPLG1",86,0)
 ; Delete entry if no ordered tests unless report has been released.
"RTN","LRAPLG1",87,0)
 I II=2 D  Q
"RTN","LRAPLG1",88,0)
 . I LRSS?1(1"SP",1"CY",1"EM"),($P(^LR(LRDFN,LRSS,LRI,0),"^",11)!$P(^LR(LRDFN,LRSS,LRI,0),"^",15)) Q
"RTN","LRAPLG1",89,0)
 . N DA,DIK
"RTN","LRAPLG1",90,0)
 . W $C(7),!!,"No ordered test selected - <ENTRY DELETED>"
"RTN","LRAPLG1",91,0)
 . S DA(1)=LRDFN,DA=LRI,DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",92,0)
 . D ^DIK,X,END
"RTN","LRAPLG1",93,0)
 ;
"RTN","LRAPLG1",94,0)
 I LRSS="CY",LRCAPA D CK^LRAPCWK
"RTN","LRAPLG1",95,0)
 ;
"RTN","LRAPLG1",96,0)
 ; Check for surgery case references and move info if user wants surgical case info copied to Lab.
"RTN","LRAPLG1",97,0)
 I LRSS="SP" D SPMOVE
"RTN","LRAPLG1",98,0)
 ;
"RTN","LRAPLG1",99,0)
 ; Fill out the stub accession with related info
"RTN","LRAPLG1",100,0)
 I '$D(LRC(5)) S LRC(5)=""
"RTN","LRAPLG1",101,0)
 D ^LRUWLF
"RTN","LRAPLG1",102,0)
 ;
"RTN","LRAPLG1",103,0)
 I LRCAPA D
"RTN","LRAPLG1",104,0)
 . I LRSS="CY" D ^LRAPCWK
"RTN","LRAPLG1",105,0)
 . I LRSS?1(1"SP",1"EM") D ^LRAPSWK
"RTN","LRAPLG1",106,0)
 ;
"RTN","LRAPLG1",107,0)
 I LRSS?1(1"SP",1"CY",1"EM") D ^LRSPGD
"RTN","LRAPLG1",108,0)
 ;
"RTN","LRAPLG1",109,0)
 D OERR^LR7OB63D,LDSI
"RTN","LRAPLG1",110,0)
 ;
"RTN","LRAPLG1",111,0)
 Q
"RTN","LRAPLG1",112,0)
 ;
"RTN","LRAPLG1",113,0)
 ;
"RTN","LRAPLG1",114,0)
LDSI ; LDSI tasks
"RTN","LRAPLG1",115,0)
 ;
"RTN","LRAPLG1",116,0)
 N LRLLOC,LRALOC,LRPRAC,LROUTINE,LROPL,LRODT,LRNT,LRFILE,LRIENS,LRORD,LRSRDT,LRTST
"RTN","LRAPLG1",117,0)
 ;
"RTN","LRAPLG1",118,0)
 ; Get variables for ORUT node
"RTN","LRAPLG1",119,0)
 S LROUTINE=$P($G(^LAB(69.9,1,3)),"^",2)    ;default urgency
"RTN","LRAPLG1",120,0)
 S LRPROVL=LRMD(1)    ;Ordering provider-CKA
"RTN","LRAPLG1",121,0)
 ; Get ORDER TYPE
"RTN","LRAPLG1",122,0)
 ;S LROT=??
"RTN","LRAPLG1",123,0)
 S LRORDR="SP" ;Default to 'Send Patient' for now
"RTN","LRAPLG1",124,0)
 S LRNT=$$NOW^XLFDT() ;Date ordered = current date/time
"RTN","LRAPLG1",125,0)
 S LRODT=$P(LRNT,".")
"RTN","LRAPLG1",126,0)
 ; Get Provider, Location abbrev, Collection date/time
"RTN","LRAPLG1",127,0)
 S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPLG1",128,0)
 S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPLG1",129,0)
 S LRPRAC=+$$GET1^DIQ(LRFILE,LRIENS,.07,"I")
"RTN","LRAPLG1",130,0)
 S LRLLOC=$$GET1^DIQ(LRFILE,LRIENS,.08,"I")
"RTN","LRAPLG1",131,0)
 I LRLLOC="" S LRLLOC="NO ABRV"
"RTN","LRAPLG1",132,0)
 S LRSDT=+$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPLG1",133,0)
 S LRSRDT=$$GET1^DIQ(LRFILE,LRIENS,.1,"I") ; Specimen received date/time
"RTN","LRAPLG1",134,0)
 ; Get CPRS Order #
"RTN","LRAPLG1",135,0)
 S ORIFN="" ; Default to blank for now
"RTN","LRAPLG1",136,0)
 ;
"RTN","LRAPLG1",137,0)
 ; Get Lab Order #, update file #69 and #68
"RTN","LRAPLG1",138,0)
 S (LRORD,LRSPEC,LRTST,LRSAMP,LRADD,LROT)="",LRCNT=1
"RTN","LRAPLG1",139,0)
 F  S LRSPEC=$O(LRXX(LRSPEC)) Q:'LRSPEC  D
"RTN","LRAPLG1",140,0)
 . N LRRECINF
"RTN","LRAPLG1",141,0)
 . S LRSAMP=$P(LRXX(LRSPEC),"^",1),LRNLT=$P(LRXX(LRSPEC),"^",2),LRTST=$P(LRXX(LRSPEC),"^",3)
"RTN","LRAPLG1",142,0)
 . Q:'LRTST
"RTN","LRAPLG1",143,0)
 . ; Add entry in #69 for each specimen
"RTN","LRAPLG1",144,0)
 . I LRORD S LRADD=1 D ZSN^LR7OFAO("",.LRRECINF)
"RTN","LRAPLG1",145,0)
 . ; Get Lab Order # first time thru
"RTN","LRAPLG1",146,0)
 . D:'LRORD EN^LR7OFAO(LRODT,LRDFN,LRSAMP,LRORDR,LRNT,LRPRAC,LRLLOC,LRSDT,ORIFN,LRSPEC,LRSS,LRTST,LRUID,.LRRECINF)
"RTN","LRAPLG1",147,0)
 . S LRSN=+$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,5),LRCDT=0,LREAL=""
"RTN","LRAPLG1",148,0)
 . I LRSN>0 S LRCDT=$P($G(^LRO(69,LRODT,1,LRSN,1)),"^",1,2),LREAL=$P(LRCDT,"^",2),LRCDT=+LRCDT
"RTN","LRAPLG1",149,0)
 . D UPD68,UPD63
"RTN","LRAPLG1",150,0)
 . S LRCNT=LRCNT+1
"RTN","LRAPLG1",151,0)
 ;
"RTN","LRAPLG1",152,0)
 Q
"RTN","LRAPLG1",153,0)
 ;
"RTN","LRAPLG1",154,0)
 ;
"RTN","LRAPLG1",155,0)
UPD68 ; Update #68 with required test data
"RTN","LRAPLG1",156,0)
 N LRFILE,LRERR,IEN,LRIEN
"RTN","LRAPLG1",157,0)
 S LRFILE=68.04,IEN(1)=LRTST
"RTN","LRAPLG1",158,0)
 S LRIEN="?+1,"_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPLG1",159,0)
 S FDA(3,LRFILE,LRIEN,.01)=LRTST
"RTN","LRAPLG1",160,0)
 S FDA(3,LRFILE,LRIEN,1)=LROUTINE
"RTN","LRAPLG1",161,0)
 D UPDATE^DIE("","FDA(3)","IEN","LRERR(3)")
"RTN","LRAPLG1",162,0)
 I $D(LRERR(3)) D LRMSG("UPD68-3~LRAPLG1",.LRERR)
"RTN","LRAPLG1",163,0)
 ;. S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTST,0)=LRTST_"^"_LROUTINE
"RTN","LRAPLG1",164,0)
 ;
"RTN","LRAPLG1",165,0)
 ; Update #68 with specimen data
"RTN","LRAPLG1",166,0)
 K LRFILE,FDAIEN,IEN
"RTN","LRAPLG1",167,0)
 S LRFILE=68.05
"RTN","LRAPLG1",168,0)
 ; Check or Set top node for 68.05
"RTN","LRAPLG1",169,0)
 S FDAIEN="?+"_LRCNT_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPLG1",170,0)
 S FDA(31,LRFILE,FDAIEN,.01)=LRSPEC
"RTN","LRAPLG1",171,0)
 S FDA(31,LRFILE,FDAIEN,1)=LRSAMP
"RTN","LRAPLG1",172,0)
 D UPDATE^DIE("","FDA(31)","IEN","LRERR(31)")
"RTN","LRAPLG1",173,0)
 I $D(LRERR(31)) D LRMSG("UPD68-31~LRAPLG1",.LRERR)
"RTN","LRAPLG1",174,0)
 ;
"RTN","LRAPLG1",175,0)
 Q
"RTN","LRAPLG1",176,0)
 ;
"RTN","LRAPLG1",177,0)
 ;
"RTN","LRAPLG1",178,0)
UPD63 ; Update ORUT Node in #63
"RTN","LRAPLG1",179,0)
 S LRTSORU=LRTST,LRURG=9,LRI=LRIDT
"RTN","LRAPLG1",180,0)
 D SLRSS^LRWLST11
"RTN","LRAPLG1",181,0)
 D ORUT^LRWLST11
"RTN","LRAPLG1",182,0)
 ;. S ^LR(LRDFN,LRSS,LRI,"ORUT",LRCNT,0)=LRNLT_"^"_LROUTINE_"^"_ORIFN_"^"_LRORD_"^"_LROT_"^"_LRPRAC_"^^"_LRSPEC_"^"_LRSAMP
"RTN","LRAPLG1",183,0)
 ;
"RTN","LRAPLG1",184,0)
 Q
"RTN","LRAPLG1",185,0)
 ;
"RTN","LRAPLG1",186,0)
 ;
"RTN","LRAPLG1",187,0)
X ; from LRAUAW
"RTN","LRAPLG1",188,0)
 I "CYEMSP"[LRSS K ^LR(LRXREF,LRH(2),LRABV,LRAN)
"RTN","LRAPLG1",189,0)
 I LRSS="AU" D
"RTN","LRAPLG1",190,0)
 . I $D(^LR(LRDFN,"AV")) K ^LR(LRDFN,"AV")
"RTN","LRAPLG1",191,0)
 . I $D(^LR(LRDFN,"AW")) K ^LR(LRDFN,"AW")
"RTN","LRAPLG1",192,0)
 . I $D(^LR(LRDFN,"AWI")) K ^LR(LRDFN,"AWI")
"RTN","LRAPLG1",193,0)
 . I $D(LRRC) K ^LR("AAUA",+$E(LRRC,1,3),LRABV,LRAN),^LR("AAU",+LRRC,LRDFN)
"RTN","LRAPLG1",194,0)
 I $G(LRRC)>1 K:LRSS?1(1"SP",1"CY",1"EM") ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRAPLG1",195,0)
 K LRRC
"RTN","LRAPLG1",196,0)
 Q
"RTN","LRAPLG1",197,0)
 ;
"RTN","LRAPLG1",198,0)
 ;
"RTN","LRAPLG1",199,0)
OS ; User choosing accession number
"RTN","LRAPLG1",200,0)
 N DIR,DIROUT,DIRUT,DTOUT,LRSPEC,X,Y
"RTN","LRAPLG1",201,0)
 S DIR(0)="N^1:999999:0^D OSDIR^LRAPLG1"
"RTN","LRAPLG1",202,0)
 S DIR("A")="Enter Accession #"
"RTN","LRAPLG1",203,0)
 D ^DIR
"RTN","LRAPLG1",204,0)
 I $D(DIRUT) S LRFND=1 Q
"RTN","LRAPLG1",205,0)
 S LRAN=Y
"RTN","LRAPLG1",206,0)
 ;
"RTN","LRAPLG1",207,0)
 I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPLG1",208,0)
 . I $D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN)) D
"RTN","LRAPLG1",209,0)
 . . S (LRI,LRIDT)=$O(^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN,0))
"RTN","LRAPLG1",210,0)
 . . I LRIDT S LRSD=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^")
"RTN","LRAPLG1",211,0)
 ;
"RTN","LRAPLG1",212,0)
 I $D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN)) D ^LRAPLG2 Q
"RTN","LRAPLG1",213,0)
 ;
"RTN","LRAPLG1",214,0)
 D CRE868
"RTN","LRAPLG1",215,0)
 I $D(LRMSG) S LRFND=1
"RTN","LRAPLG1",216,0)
 Q
"RTN","LRAPLG1",217,0)
 ;
"RTN","LRAPLG1",218,0)
 ;R !!,"Enter Accession #: ",X:DTIME I X=""!(X[U) S LRFND=1 Q
"RTN","LRAPLG1",219,0)
 ;I X'?1N.N!(X<1)!(X>99999) W $C(7),!!,"ENTER A WHOLE NUMBER FROM 1 TO 99999",! G OS
"RTN","LRAPLG1",220,0)
 ;I $D(^LRO(68,LRAA,1,LRAD,1,X,0)),$P(^(0),U) D ^LRUTELL G OS
"RTN","LRAPLG1",221,0)
 ;S LRAN=X
"RTN","LRAPLG1",222,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,X,0)=LRDFN
"RTN","LRAPLG1",223,0)
 ;I $D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,X)) D
"RTN","LRAPLG1",224,0)
 ;. D ^LRAPLG2 S LRFND=1
"RTN","LRAPLG1",225,0)
 ;L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPLG1",226,0)
 ;
"RTN","LRAPLG1",227,0)
 ;
"RTN","LRAPLG1",228,0)
OSDIR ; Called from DIR call in OS above
"RTN","LRAPLG1",229,0)
 ;
"RTN","LRAPLG1",230,0)
 ;ZEXCEPT: LRAA,LRAD,LRDFN,X
"RTN","LRAPLG1",231,0)
 ;
"RTN","LRAPLG1",232,0)
 ; Accession number doesn't exist in file #68 - quit, OK to use this number
"RTN","LRAPLG1",233,0)
 I $O(^LRO(68,LRAA,1,LRAD,1,+X,""))="" Q
"RTN","LRAPLG1",234,0)
 ;
"RTN","LRAPLG1",235,0)
 N LRX
"RTN","LRAPLG1",236,0)
 S LRX=$G(^LRO(68,LRAA,1,LRAD,1,+X,0))
"RTN","LRAPLG1",237,0)
 I LRX<1 K X Q
"RTN","LRAPLG1",238,0)
 ;
"RTN","LRAPLG1",239,0)
 ; Stub entry which matches on LRDFN
"RTN","LRAPLG1",240,0)
 I LRX=LRDFN Q
"RTN","LRAPLG1",241,0)
 ;
"RTN","LRAPLG1",242,0)
 I $P(LRX,U)'=LRDFN S X=+X D ^LRUTELL K X
"RTN","LRAPLG1",243,0)
 ;
"RTN","LRAPLG1",244,0)
 Q
"RTN","LRAPLG1",245,0)
 ;
"RTN","LRAPLG1",246,0)
 ;
"RTN","LRAPLG1",247,0)
ORDTST ; Prompt for ordered test(s); translate to NLT code for storage in ORUT
"RTN","LRAPLG1",248,0)
 ; Add NLT code to temp array LRXX (This code currently assumes one ordered test per accession)
"RTN","LRAPLG1",249,0)
 ;
"RTN","LRAPLG1",250,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRNLT,LRWKCD,XX
"RTN","LRAPLG1",251,0)
 S (LRNLT,LRWKCD)="",II=0
"RTN","LRAPLG1",252,0)
 S DIR(0)="P^LAB(60,:AEMOQ",DIR("B")=$G(LRTST(0))
"RTN","LRAPLG1",253,0)
 S DIR("S")="I $P(^LAB(60,Y,0),""^"",4)=LRSS,""IBO""[$P(^LAB(60,Y,0),""^"",3),$P($G(^LAB(60,Y,64)),""^"")"
"RTN","LRAPLG1",254,0)
 D ^DIR
"RTN","LRAPLG1",255,0)
 I $D(DIRUT) S II=2 Q
"RTN","LRAPLG1",256,0)
 S LRWKCD=+$G(^LAB(60,+Y,64)),LRNLT=$P($G(^LAM(LRWKCD,0)),"^",2),II=1
"RTN","LRAPLG1",257,0)
 S XX=0
"RTN","LRAPLG1",258,0)
 F  S XX=$O(LRXX(XX)) Q:'XX  S $P(LRXX(XX),"^",2)=LRNLT_"^"_+Y
"RTN","LRAPLG1",259,0)
 ;
"RTN","LRAPLG1",260,0)
 Q
"RTN","LRAPLG1",261,0)
 ;
"RTN","LRAPLG1",262,0)
 ;
"RTN","LRAPLG1",263,0)
GETSTCS ;Get spec top and coll samp
"RTN","LRAPLG1",264,0)
 N LRI
"RTN","LRAPLG1",265,0)
 K LRXX
"RTN","LRAPLG1",266,0)
 S LRI=0,(LRXX,X)=""
"RTN","LRAPLG1",267,0)
 F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,.1,LRI)) Q:'LRI  D
"RTN","LRAPLG1",268,0)
 . S X=$G(^LR(LRDFN,LRSS,LRIDT,.1,LRI,0))
"RTN","LRAPLG1",269,0)
 . I $P(X,"^",6)'="" S LRXX($P(X,"^",6))=$P(X,"^",7)_"^"
"RTN","LRAPLG1",270,0)
 Q
"RTN","LRAPLG1",271,0)
 ;
"RTN","LRAPLG1",272,0)
 ;
"RTN","LRAPLG1",273,0)
CRE868 ; Create accession number in file 68
"RTN","LRAPLG1",274,0)
 N LRFDA,LRFDAIEN,LRIEN
"RTN","LRAPLG1",275,0)
 K LRMSG
"RTN","LRAPLG1",276,0)
 S LRIEN="+1,"_LRAD_","_LRAA_","
"RTN","LRAPLG1",277,0)
 S LRFDAIEN(1)=LRAN
"RTN","LRAPLG1",278,0)
 S LRFDA(1,68.02,LRIEN,.01)=LRDFN
"RTN","LRAPLG1",279,0)
 D UPDATE^DIE("S","LRFDA(1)","LRFDAIEN","LRMSG")
"RTN","LRAPLG1",280,0)
 I $D(LRMSG) S LRSD=LRAD D LRMSG("EN~LRAPGL1",.LRMSG) Q
"RTN","LRAPLG1",281,0)
 S X=LRAN
"RTN","LRAPLG1",282,0)
 Q
"RTN","LRAPLG1",283,0)
 ;
"RTN","LRAPLG1",284,0)
 ;
"RTN","LRAPLG1",285,0)
CRE863 ; Create entry in file #63
"RTN","LRAPLG1",286,0)
 ;
"RTN","LRAPLG1",287,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPLG1",288,0)
 S DIR(0)="DO^:NOW:ET"
"RTN","LRAPLG1",289,0)
 S DIR("A")="Date/time Specimen taken",DIR("B")="NOW"
"RTN","LRAPLG1",290,0)
 D ^DIR K DIR
"RTN","LRAPLG1",291,0)
 I Y<1 D END Q
"RTN","LRAPLG1",292,0)
 S (LRY,LRSD)=Y,LRI=9999999-LRY
"RTN","LRAPLG1",293,0)
 ;
"RTN","LRAPLG1",294,0)
 ; Process and get unique LRI
"RTN","LRAPLG1",295,0)
 F  Q:'$D(^LR(LRDFN,LRSS,LRI,0))  D
"RTN","LRAPLG1",296,0)
 . S (LRSD,LRY)=$$FMADD^XLFDT(LRY,,,,1)
"RTN","LRAPLG1",297,0)
 . S LRI=9999999-LRY
"RTN","LRAPLG1",298,0)
 ;
"RTN","LRAPLG1",299,0)
 N LRFDA,LRIEN,LRFILE,LRFDAIEN
"RTN","LRAPLG1",300,0)
 K DIERR,LRMSG
"RTN","LRAPLG1",301,0)
 S LRACC=LRAC,LRNT=$$NOW^XLFDT()
"RTN","LRAPLG1",302,0)
 S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:63.08)
"RTN","LRAPLG1",303,0)
 S LRFDAIEN(1)=LRI
"RTN","LRAPLG1",304,0)
 S LRIEN="+1,"_LRDFN_","
"RTN","LRAPLG1",305,0)
 S LRFDA(2,LRFILE,LRIEN,.01)=LRSD
"RTN","LRAPLG1",306,0)
 S LRFDA(2,LRFILE,LRIEN,.06)=LRACC
"RTN","LRAPLG1",307,0)
 ;
"RTN","LRAPLG1",308,0)
 D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRMSG")
"RTN","LRAPLG1",309,0)
 L -^LR(LRDFN,LRSS)
"RTN","LRAPLG1",310,0)
 I $D(LRMSG) D LRMSG("F~LRAPLG1",.LRMSG) Q
"RTN","LRAPLG1",311,0)
 ;
"RTN","LRAPLG1",312,0)
 S (LRI,LRIDT)=LRFDAIEN(1)
"RTN","LRAPLG1",313,0)
 ;
"RTN","LRAPLG1",314,0)
 Q
"RTN","LRAPLG1",315,0)
 ;
"RTN","LRAPLG1",316,0)
 ;
"RTN","LRAPLG1",317,0)
SPMOVE ; Copy surgery information into lab package
"RTN","LRAPLG1",318,0)
 ;  - store surgery package reference to retrieve surgeon/attending.
"RTN","LRAPLG1",319,0)
 ;  - LRFLAG used to determine if data copied from Surgery packge and moved to Lab and generate notice.
"RTN","LRAPLG1",320,0)
 ;         if no data before and data after call to SROSPLG then add disclaimer.
"RTN","LRAPLG1",321,0)
 ;
"RTN","LRAPLG1",322,0)
 S X="SROSPLG" X ^%ZOSF("TEST")
"RTN","LRAPLG1",323,0)
 I '$T Q
"RTN","LRAPLG1",324,0)
 ;
"RTN","LRAPLG1",325,0)
 N I,LRFIELD,LRFLAG,LRJ,LRSREF,LRSRTN,LRWP
"RTN","LRAPLG1",326,0)
 S LRFLAG="",LRSRTN=$G(SRTN)
"RTN","LRAPLG1",327,0)
 I LRSRTN D
"RTN","LRAPLG1",328,0)
 . N LRDATA,LRDIE
"RTN","LRAPLG1",329,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRI_",0"
"RTN","LRAPLG1",330,0)
 . S LRDATA(.02)=1
"RTN","LRAPLG1",331,0)
 . S LRDATA(1)=LRSRTN_";SRF("
"RTN","LRAPLG1",332,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRAPLG1",333,0)
 . F I=.2,.3,.4,.5 I '$O(^LR(LRDFN,LRSS,LRI,I,0)) S $P(LRFLAG,"^",I*10)=1
"RTN","LRAPLG1",334,0)
 ;
"RTN","LRAPLG1",335,0)
 D DISP^SROSPLG
"RTN","LRAPLG1",336,0)
 ;
"RTN","LRAPLG1",337,0)
 ; Create notation on where info came from if site wants reference.
"RTN","LRAPLG1",338,0)
 ;  also store referece as external package reference.
"RTN","LRAPLG1",339,0)
 S LRSREF=$$GET^XPAR("DIV^PKG","LR AP SURGERY REFERENCE",1,"Q")
"RTN","LRAPLG1",340,0)
 S LRFIELD(.013)="(#60) BRIEF CLIN HISTORY"
"RTN","LRAPLG1",341,0)
 S LRFIELD(.014)="(#32) PRINCIPAL PRE-OP DIAGNOSIS, (#.72) OTHER PREOP DIAGNOSIS"
"RTN","LRAPLG1",342,0)
 S LRFIELD(.015)="(#59) OPERATIVE FINDINGS"
"RTN","LRAPLG1",343,0)
 S LRFIELD(.016)="(#34) PRINCIPAL POST-OP DIAG, (#.74) OTHER POSTOP DIAGS"
"RTN","LRAPLG1",344,0)
 S LRWP(1)=" "
"RTN","LRAPLG1",345,0)
 F LRJ=.2,.3,.4,.5 I $P(LRFLAG,"^",LRJ*10),$O(^LR(LRDFN,LRSS,LRI,LRJ,0)) D
"RTN","LRAPLG1",346,0)
 . N LRDATA,LRDIE
"RTN","LRAPLG1",347,0)
 . S LRFIELD=$P("^.013^.014^.015^.016","^",LRJ*10)
"RTN","LRAPLG1",348,0)
 . S LRWP(2)="Information automatically documented from SURGERY package case #"_LRSRTN_" Field "_LRFIELD(LRFIELD)
"RTN","LRAPLG1",349,0)
 . I LRSREF=1 D WP^DIE(63.08,LRI_","_LRDFN_",",LRFIELD,"A","LRWP","LRDIE(LRFIELD)")
"RTN","LRAPLG1",350,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRI_","_LRJ_",0"
"RTN","LRAPLG1",351,0)
 . S LRDATA(.02)=1
"RTN","LRAPLG1",352,0)
 . S LRDATA(1)=LRSRTN_";SRF(;"_LRWP(2)
"RTN","LRAPLG1",353,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRAPLG1",354,0)
 ;
"RTN","LRAPLG1",355,0)
 Q
"RTN","LRAPLG1",356,0)
 ;
"RTN","LRAPLG1",357,0)
 ;
"RTN","LRAPLG1",358,0)
LRMSG(LRRNAME,LRFMERR) ;
"RTN","LRAPLG1",359,0)
 ; Filing error notification
"RTN","LRAPLG1",360,0)
 ; Inputs
"RTN","LRAPLG1",361,0)
 ;  LRRNAME: Routine name  (TAG~RTN)
"RTN","LRAPLG1",362,0)
 ;  LRFMERR:<byref> FileMan error local array
"RTN","LRAPLG1",363,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRDIE
"RTN","LRAPLG1",364,0)
 S LRRNAME=$TR($G(LRRNAME),"^","~")
"RTN","LRAPLG1",365,0)
 M LRDIE=LRFMERR
"RTN","LRAPLG1",366,0)
 D MAILALRT^LRWLST12(LRRNAME,.LRFMERR)
"RTN","LRAPLG1",367,0)
 S DIR(0)="EA"
"RTN","LRAPLG1",368,0)
 S DIR("A",1)="Filing error in "_LRRNAME_" for this accession/specimen"
"RTN","LRAPLG1",369,0)
 S DIR("A")="Press the return key to continue"
"RTN","LRAPLG1",370,0)
 D ^DIR
"RTN","LRAPLG1",371,0)
 Q
"RTN","LRAPLG1",372,0)
 ;
"RTN","LRAPLG1",373,0)
 ;
"RTN","LRAPLG1",374,0)
OUT ;
"RTN","LRAPLG1",375,0)
 ; Exit point
"RTN","LRAPLG1",376,0)
 Q
"RTN","LRAPLG1",377,0)
 ;
"RTN","LRAPLG1",378,0)
 ;
"RTN","LRAPLG1",379,0)
END ; from LRAUAW, LRAPLG2
"RTN","LRAPLG1",380,0)
 ; Lock Accession file
"RTN","LRAPLG1",381,0)
 D LOCK^DILF("^LRO(68,LRAA,1,LRAD,1,0)")
"RTN","LRAPLG1",382,0)
 I '$T D EN^DDIOL("Someone else is logging in specimens.  Please wait and try again.","","!!") Q
"RTN","LRAPLG1",383,0)
 ;
"RTN","LRAPLG1",384,0)
 N DIK,DA
"RTN","LRAPLG1",385,0)
 S DA=LRAN,DA(1)=LRAD,DA(2)=LRAA
"RTN","LRAPLG1",386,0)
 S DIK="^LRO(68,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","LRAPLG1",387,0)
 D ^DIK
"RTN","LRAPLG1",388,0)
 ;
"RTN","LRAPLG1",389,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPLG1",390,0)
 Q
"RTN","LRAPLG1",391,0)
 ;
"RTN","LRAPLG1",392,0)
 ;
"RTN","LRAPLG1",393,0)
FIX ; Entry point to delete an orphan AP entry in file #63
"RTN","LRAPLG1",394,0)
 ;
"RTN","LRAPLG1",395,0)
 N DA,DFN,DIC,DIK,DIR,DIROUT,DIRUT,DIQ,DR,DTOUT
"RTN","LRAPLG1",396,0)
 N LRAA,LRABV,LRAC,LRAD,LRAN,LRDFN,LRDPA,LRDPF,LRH,LRI,LRRC,LRSS,LRWHN,LRXR,LRXREF
"RTN","LRAPLG1",397,0)
 N AGE,PNM,SEX,X,Y
"RTN","LRAPLG1",398,0)
 ;
"RTN","LRAPLG1",399,0)
 D ^LRAP Q:'$D(Y)
"RTN","LRAPLG1",400,0)
 D XR^LRU
"RTN","LRAPLG1",401,0)
 ;
"RTN","LRAPLG1",402,0)
 I LRSS'?1(1"SP",1"CY",1"EM") W !,"This program only supports SP, CY and EM subscripts",! Q
"RTN","LRAPLG1",403,0)
 ;
"RTN","LRAPLG1",404,0)
 S LRH(2)=$E(LRAD,1,3),LRWHN=$E(LRAD,2,3)
"RTN","LRAPLG1",405,0)
 ;
"RTN","LRAPLG1",406,0)
 D EN1^LRUPS Q:LRAN=-1
"RTN","LRAPLG1",407,0)
 I $P(^LR(LRDFN,LRSS,LRI,0),"^",11)'="" W !,"Report has been released!",! Q
"RTN","LRAPLG1",408,0)
 I $D(^LR(LRDFN,LRSS,LRI,2005)) D  Q
"RTN","LRAPLG1",409,0)
 . W !,"Report has associated images in IMAGING package!"
"RTN","LRAPLG1",410,0)
 . W !,"Disposition these images before deleting this entry!",!
"RTN","LRAPLG1",411,0)
 ;
"RTN","LRAPLG1",412,0)
 K DR
"RTN","LRAPLG1",413,0)
 S DIC="^LR("_LRDFN_","""_LRSS_""",",DA(1)=LRDFN,DA=LRI,DIQ(0)="ACR"
"RTN","LRAPLG1",414,0)
 D EN^DIQ
"RTN","LRAPLG1",415,0)
 ;
"RTN","LRAPLG1",416,0)
 S DIR(0)="Y",DIR("A")="DELETE this entry",DIR("B")="NO"
"RTN","LRAPLG1",417,0)
 D ^DIR
"RTN","LRAPLG1",418,0)
 I Y<1 Q
"RTN","LRAPLG1",419,0)
 ;
"RTN","LRAPLG1",420,0)
 K DIR
"RTN","LRAPLG1",421,0)
 S DIR(0)="Y",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LRAPLG1",422,0)
 D ^DIR
"RTN","LRAPLG1",423,0)
 I Y<1 Q
"RTN","LRAPLG1",424,0)
 ;
"RTN","LRAPLG1",425,0)
 ; Lock record
"RTN","LRAPLG1",426,0)
 D LOCK^DILF("^LR(LRDFN,LRSS,LRI)")
"RTN","LRAPLG1",427,0)
 I '$T D  Q
"RTN","LRAPLG1",428,0)
 . D EN^DDIOL("Someone else is accessing this record.  Please wait and try again.","","!!")
"RTN","LRAPLG1",429,0)
 . D KVA^VADPT,V^LRU
"RTN","LRAPLG1",430,0)
 ;
"RTN","LRAPLG1",431,0)
 K DA,DIK
"RTN","LRAPLG1",432,0)
 S DA=LRI,DA(1)=LRDFN,DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",433,0)
 D ^DIK
"RTN","LRAPLG1",434,0)
 ;
"RTN","LRAPLG1",435,0)
 ; Cleanup some cross-references.
"RTN","LRAPLG1",436,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRAPLG1",437,0)
 . K ^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN,LRI)
"RTN","LRAPLG1",438,0)
 . I $G(LRRC)>1 K ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRAPLG1",439,0)
 ;
"RTN","LRAPLG1",440,0)
 I LRSS="AU" D
"RTN","LRAPLG1",441,0)
 . I $D(^LR(LRDFN,"AV")) K ^LR(LRDFN,"AV")
"RTN","LRAPLG1",442,0)
 . I $D(^LR(LRDFN,"AW")) K ^LR(LRDFN,"AW")
"RTN","LRAPLG1",443,0)
 . I $D(^LR(LRDFN,"AWI")) K ^LR(LRDFN,"AWI")
"RTN","LRAPLG1",444,0)
 . I $D(LRRC) K ^LR("AAUA",+$E(LRRC,1,3),LRABV,LRAN),^LR("AAU",+LRRC,LRDFN)
"RTN","LRAPLG1",445,0)
 ;
"RTN","LRAPLG1",446,0)
 ; Release lock
"RTN","LRAPLG1",447,0)
 L -^LR(LRDFN,LRSS,LRI)
"RTN","LRAPLG1",448,0)
 ;
"RTN","LRAPLG1",449,0)
 W !!,"Entry deleted",!
"RTN","LRAPLG1",450,0)
 D KVA^VADPT,V^LRU
"RTN","LRAPLG1",451,0)
 ;
"RTN","LRAPLG1",452,0)
 Q
"RTN","LRAPLG2")
0^191^B4901786
"RTN","LRAPLG2",1,0)
LRAPLG2 ;DALOI/STAFF - LOG-IN DATA FROM FILE #63 ;05/30/12  16:50
"RTN","LRAPLG2",2,0)
 ;;5.2;LAB SERVICE;**72,115,350**;Sep 27, 1994;Build 230
"RTN","LRAPLG2",3,0)
 ;
"RTN","LRAPLG2",4,0)
 ;
"RTN","LRAPLG2",5,0)
EN ;
"RTN","LRAPLG2",6,0)
 N X
"RTN","LRAPLG2",7,0)
 ;
"RTN","LRAPLG2",8,0)
 S LRDFN=$O(^LR(LRXREF,LRH(2),LRABV,LRAN,0))
"RTN","LRAPLG2",9,0)
 I 'LRDFN G END
"RTN","LRAPLG2",10,0)
 ;
"RTN","LRAPLG2",11,0)
 S LRI=$O(^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN,0))
"RTN","LRAPLG2",12,0)
 I '$D(^LR(LRDFN,0))!('LRI&(LRSS'="AU")) G END
"RTN","LRAPLG2",13,0)
 ;
"RTN","LRAPLG2",14,0)
 S X=^LR(LRDFN,0),(LRDPF,LRPFN)=$P(X,U,2),DFN=$P(X,U,3)
"RTN","LRAPLG2",15,0)
 I 'LRPFN!('DFN) G END
"RTN","LRAPLG2",16,0)
 ;
"RTN","LRAPLG2",17,0)
 S LRPF=$$GET1^DID(LRPFN,"","","GLOBAL NAME"),LRP=@(LRPF_DFN_",0)"),SSN=$P(LRP,U,9),LRP=$P(LRP,U)
"RTN","LRAPLG2",18,0)
 D SSN^LRU
"RTN","LRAPLG2",19,0)
 ;
"RTN","LRAPLG2",20,0)
 I LRSS'="AU" D  Q
"RTN","LRAPLG2",21,0)
 . I '$D(^LR(LRDFN,LRSS,LRI,0)) D END Q
"RTN","LRAPLG2",22,0)
 . S X=^LR(LRDFN,LRSS,LRI,0),LRIDT=LRI,LRCAPLOC=""
"RTN","LRAPLG2",23,0)
 . S LRSD=$P(X,U),LRRC=$P(X,U,10),LRACC=$P(X,U,6),LRMD(1)=$P(X,U,7),LRSIT=$P(X,U,5),LRCS=$P(X,U,11),LRLLOC=$P(X,U,8),LRC(5)=""
"RTN","LRAPLG2",24,0)
 . D SETUP
"RTN","LRAPLG2",25,0)
 ;
"RTN","LRAPLG2",26,0)
 I LRSS="AU" D  Q
"RTN","LRAPLG2",27,0)
 . I '$D(^LR(LRDFN,"AU")) D END Q
"RTN","LRAPLG2",28,0)
 . S X=^LR(LRDFN,"AU"),LRCAPLOC=""
"RTN","LRAPLG2",29,0)
 . S LRRC=$P(X,U),LRLLOC=$P(X,U,5),LRACC=$P(X,U,6),LRMD(1)=$P(X,U,12),LRSVC=$P(X,U,14),(LRCS,LRIDT,LRSIT,LRC(5))="",DA=LRDFN
"RTN","LRAPLG2",30,0)
 . D D^LRAUAW
"RTN","LRAPLG2",31,0)
 . S LRSD=LR(63,12)
"RTN","LRAPLG2",32,0)
 . D SETUP
"RTN","LRAPLG2",33,0)
 ;
"RTN","LRAPLG2",34,0)
 Q
"RTN","LRAPLG2",35,0)
 ;
"RTN","LRAPLG2",36,0)
 ;
"RTN","LRAPLG2",37,0)
SETUP ; Setup accession
"RTN","LRAPLG2",38,0)
 ;
"RTN","LRAPLG2",39,0)
 S Y=LRRC D D^LRU
"RTN","LRAPLG2",40,0)
 W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)
"RTN","LRAPLG2",41,0)
 W !,"In ",LRAA(1)," file but not in Accession file."
"RTN","LRAPLG2",42,0)
 W !,"Entry: ",LRP," ID: ",SSN,"  Dated: ",Y
"RTN","LRAPLG2",43,0)
 W !,"Enter in Accession file "
"RTN","LRAPLG2",44,0)
 S %=2 D YN^LRU
"RTN","LRAPLG2",45,0)
 I %'=1 D END^LRAPLG1 S LRFND=1 Q
"RTN","LRAPLG2",46,0)
 ;
"RTN","LRAPLG2",47,0)
 I '$D(LRTS) S LRTS=""
"RTN","LRAPLG2",48,0)
 ;
"RTN","LRAPLG2",49,0)
 D CRE868^LRAPLG1
"RTN","LRAPLG2",50,0)
 I $D(LRMSG) D END^LRAPLG1 S LRFND=1 Q
"RTN","LRAPLG2",51,0)
 ;
"RTN","LRAPLG2",52,0)
 D EN^LRUWLF
"RTN","LRAPLG2",53,0)
 ;
"RTN","LRAPLG2",54,0)
 ;L +^LRO(68,LRAA)
"RTN","LRAPLG2",55,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,LRAN,0)=LRDFN_"^^"_LRRC_"^^^^"_LRLLOC_"^"_LRMD(1)_"^"_LRSVC_"^"_DUZ
"RTN","LRAPLG2",56,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,LRAN,3)=LRSD_"^^^^"_LRI_"^"_LRC(5)
"RTN","LRAPLG2",57,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,0)=$P(^LRO(68,LRAA,1,LRAD,1,0),"^",1,2)_"^"_LRAN_"^"_($P(^(0),"^",4)+1)
"RTN","LRAPLG2",58,0)
 ;S ^LRO(68,LRAA,1,"AC",DUZ(2),LRAD,LRAN)=""
"RTN","LRAPLG2",59,0)
 ;L -^LRO(68,LRAA)
"RTN","LRAPLG2",60,0)
 ;K LRSD
"RTN","LRAPLG2",61,0)
 ;
"RTN","LRAPLG2",62,0)
 ;S:LRRC ^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)=""
"RTN","LRAPLG2",63,0)
 ;
"RTN","LRAPLG2",64,0)
 ;I "AUCYEMSP"'[LRSS D
"RTN","LRAPLG2",65,0)
 ;. S ^LRO(68,LRAA,1,LRAD,1,LRAN,5,0)="^68.05PA^1^1"
"RTN","LRAPLG2",66,0)
 ;. S ^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)=LRSIT_"^"_LRCS
"RTN","LRAPLG2",67,0)
 S LRIDT=LRI
"RTN","LRAPLG2",68,0)
 ;
"RTN","LRAPLG2",69,0)
 Q
"RTN","LRAPLG2",70,0)
 ;
"RTN","LRAPLG2",71,0)
 ;
"RTN","LRAPLG2",72,0)
END ;
"RTN","LRAPLG2",73,0)
 ;
"RTN","LRAPLG2",74,0)
 K ^LR(LRXREF,LRH(2),LRABV,LRAN)
"RTN","LRAPLG2",75,0)
 W $C(7),!!,"Sorry, try again",!!
"RTN","LRAPLG2",76,0)
 D END^LRAPLG1
"RTN","LRAPLG2",77,0)
 S LRFND=1
"RTN","LRAPLG2",78,0)
 ;
"RTN","LRAPLG2",79,0)
 Q
"RTN","LRAPM")
0^99^B22300887
"RTN","LRAPM",1,0)
LRAPM ;AVAMC/REG/WTY - ANATOMIC PATH MODIFY MICRO/DX ;03/07/12  16:17
"RTN","LRAPM",2,0)
 ;;5.2;LAB SERVICE;**72,91,130,231,248,295,350**;Sep 27, 1994;Build 230
"RTN","LRAPM",3,0)
 ;
"RTN","LRAPM",4,0)
 ;Reference to ^%DT supported by IA #10003
"RTN","LRAPM",5,0)
 ;Reference to %XY^%RCR supported by IA #10022
"RTN","LRAPM",6,0)
 ;Reference to ^DIE supported by IA #10018
"RTN","LRAPM",7,0)
 ;Reference to EN^DDIOL supported by IA #10142
"RTN","LRAPM",8,0)
 ;
"RTN","LRAPM",9,0)
 D A^LRAPD Q:'$D(Y)
"RTN","LRAPM",10,0)
 I LRCAPA D @(LRSS_"^LRAPSWK")
"RTN","LRAPM",11,0)
 D @LRSS
"RTN","LRAPM",12,0)
 S LRB(1)="GROSS DESCRIPTION",LRB(2)="MICROSCOPIC DESCRIPTION"
"RTN","LRAPM",13,0)
 S LRB(3)="DIAGNOSIS",LRB(4)="FROZEN SECTION"
"RTN","LRAPM",14,0)
 S:'$D(^LRO(69.2,LRAA,2,0)) ^(0)="^69.23A^^"
"RTN","LRAPM",15,0)
AK W !!,"Modify data for ",LRH(0)," "
"RTN","LRAPM",16,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPM",17,0)
 I %=2 S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT G:Y<1 END S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPM",18,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) W $C(7),!!,"NO ",LRAA(1)," ACCESSIONS IN FILE FOR ",LRH(0),!! G END
"RTN","LRAPM",19,0)
W K X,Y R !!,"Select Accession Number/Pt name: ",LRAN:DTIME
"RTN","LRAPM",20,0)
 G:LRAN=""!(LRAN[U) END
"RTN","LRAPM",21,0)
 I LRAN'?1N.N D PNAME^LRAPDA G:LRAN<1 W D DIE G W
"RTN","LRAPM",22,0)
 D REST G W
"RTN","LRAPM",23,0)
REST W "  for ",LRH(0) I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)," not in ACCESSION file",!! Q
"RTN","LRAPM",24,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X
"RTN","LRAPM",25,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPM",26,0)
 W !,LRP,"  ID: ",SSN
"RTN","LRAPM",27,0)
 S LRI=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRAPM",28,0)
 W:$O(^LR(LRDFN,LRSS,LRI,.1,0)) !,"Specimen(s):" F X=0:0 S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  W !,$P($G(^(X,0)),U)
"RTN","LRAPM",29,0)
DIE S X=^LR(LRDFN,LRSS,LRI,0)
"RTN","LRAPM",30,0)
 I '$P(X,"^",11),'$P(X,"^",15) W $C(7),!!,"Report not verified.  Do not need to use this option !" Q
"RTN","LRAPM",31,0)
ASK D:LRCAPA C^LRAPSWK
"RTN","LRAPM",32,0)
 W !?14,"1. MODIFY GROSS DESCRIPTION",!?14,"2. MODIFY MICROSCOPIC DESCRIPTION",!?14,"3. MODIFY DIAGNOSIS" S LRB=3 I LRSS="SP" W !?14,"4. MODIFY FROZEN SECTION" S LRB=4
"RTN","LRAPM",33,0)
 W !,"CHOOSE (1-",LRB,"): " R X:DTIME Q:X[U!(X="")
"RTN","LRAPM",34,0)
 I X'=+X!(X<1)!(X>LRB) W $C(7),!,"Choose from 1 to ",LRB G ASK
"RTN","LRAPM",35,0)
 S LRB=X,LRF=$S(X=1:"1^7",X=2:"1.1^4",X=3:"1.4^5",1:"1.3^6"),LRE=$P(LRF,U,2),LRF=$P(LRF,U)
"RTN","LRAPM",36,0)
 I '$D(^LR(LRDFN,LRSS,LRI,LRF)) W $C(7),!!,"There is no ",LRB(LRB)," text to modify !",!,"The report was released before entering text.",!,"Do you still want to continue " S %=2 D YN^LRU Q:%'=1  G A
"RTN","LRAPM",37,0)
 W !!,"Are you sure you want to modify ",LRB(LRB)," text " S %=2 D YN^LRU Q:%'=1
"RTN","LRAPM",38,0)
A S:'$D(^LR(LRDFN,LRSS,LRI,LRE,0)) ^(0)=LRQ(LRB) S LRT(1)=^(0),(B,C)=0
"RTN","LRAPM",39,0)
 F A=0:1 S B=$O(^LR(LRDFN,LRSS,LRI,LRE,B)) Q:'B  S C=B
"RTN","LRAPM",40,0)
 S C=C+1
"RTN","LRAPM",41,0)
 S ^LR(LRDFN,LRSS,LRI,LRE,0)=$P(LRT(1),"^",1,2)_"^"_C_"^"_($P(LRT(1),"^",4)+1),LRDTMOD=C
"RTN","LRAPM",42,0)
 S X="N",%DT="T" D ^%DT
"RTN","LRAPM",43,0)
 S ^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,0)=Y_"^"_DUZ
"RTN","LRAPM",44,0)
 S %X="^LR(LRDFN,LRSS,LRI,LRF,",%Y="^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,"
"RTN","LRAPM",45,0)
 D %XY^%RCR
"RTN","LRAPM",46,0)
 W ! S DR=LRF,DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPM",47,0)
 I LRF=1 D
"RTN","LRAPM",48,0)
 .S DR=".012;1"
"RTN","LRAPM",49,0)
 .S:LRSS="SP" DR(2,63.812)=".01;.06R;.07R"
"RTN","LRAPM",50,0)
 .S:LRSS="CY" DR(2,63.902)=".01;.02;.06R;.07R"
"RTN","LRAPM",51,0)
 .S:LRSS="EM" DR(2,63.202)=".01;.06R;.07R"
"RTN","LRAPM",52,0)
 L +^LR(LRDFN,LRSS,DA):5 I '$T D  Q
"RTN","LRAPM",53,0)
 .S MSG="This record is locked by another user.  "
"RTN","LRAPM",54,0)
 .S MSG=MSG_"Please try again later."
"RTN","LRAPM",55,0)
 .D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPM",56,0)
 D ^DIE S X=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(X,"^",10) K X
"RTN","LRAPM",57,0)
 L -^LR(LRDFN,LRSS,DA)
"RTN","LRAPM",58,0)
 D:LRCAPA C1^LRAPSWK
"RTN","LRAPM",59,0)
 S LRC=1 F A=0:0 S A=$O(^LR(LRDFN,LRSS,LRI,LRF,A)) Q:'A  S X=^(A,0) S:'$D(^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,A,0)) LRC=0 Q:'LRC  I X'=^(0) S LRC=0 Q
"RTN","LRAPM",60,0)
 I LRC F A=0:0 S A=$O(^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,A)) Q:'A  S X=^(A,0) I '$D(^LR(LRDFN,LRSS,LRI,LRF,A,0)) S LRC=0 Q
"RTN","LRAPM",61,0)
 I LRC D  Q
"RTN","LRAPM",62,0)
 . W $C(7),!!,"No changes were made to ",LRB(LRB)
"RTN","LRAPM",63,0)
 . K ^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD)
"RTN","LRAPM",64,0)
 . S X=^LR(LRDFN,LRSS,LRI,LRE,0),A=$P(X,"^",4),Y=$O(^(0))
"RTN","LRAPM",65,0)
 . S ^LR(LRDFN,LRSS,LRI,LRE,0)=$P(X,"^",1,2)_"^"_Y_"^"_$S(A:A-1,1:0)
"RTN","LRAPM",66,0)
 S X=^LR(LRDFN,LRSS,LRI,0),Y=$P(X,"^",15),$P(^(0),"^",11)="" S:'Y $P(^(0),"^",15)=$P(X,"^",11)
"RTN","LRAPM",67,0)
 I $G(SEX)["F","SPCY"[LRSS D DEL^LRWOMEN ;This sends notification to WHP
"RTN","LRAPM",68,0)
 ;that a previously verified report has been modified.
"RTN","LRAPM",69,0)
 ;cym 2/20/1999
"RTN","LRAPM",70,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRI)
"RTN","LRAPM",71,0)
 I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPM",72,0)
 .L +^LRO(69.2,LRAA,2):5 I '$T D  Q
"RTN","LRAPM",73,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPM",74,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPM",75,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPM",76,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPM",77,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPM",78,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPM",79,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPM",80,0)
 Q
"RTN","LRAPM",81,0)
SP S LRQ(1)="^63.087DA^^",LRQ(2)="^63.84DA^^",LRQ(3)="^63.085DA^^",LRQ(4)="^63.086DA^^" Q
"RTN","LRAPM",82,0)
CY S LRQ(1)="^63.097D^^",LRQ(2)="^63.94DA^^",LRQ(3)="^63.095DA^^" Q
"RTN","LRAPM",83,0)
EM S LRQ(1)="^63.0272DA^^",LRQ(2)="^63.242DA^^",LRQ(3)="^63.025DA^^" Q
"RTN","LRAPM",84,0)
 ;
"RTN","LRAPM",85,0)
END D V^LRU K LRDTMOD Q
"RTN","LRAPMRL")
0^100^B67731027
"RTN","LRAPMRL",1,0)
LRAPMRL ;DALOI/STAFF - AP MODIFY RELEASED REPORT;02/28/12  20:38
"RTN","LRAPMRL",2,0)
 ;;5.2;LAB SERVICE;**259,295,317,368,397,350**;Sep 27, 1994;Build 230
"RTN","LRAPMRL",3,0)
 ;
"RTN","LRAPMRL",4,0)
MAIN ;
"RTN","LRAPMRL",5,0)
 N LRQUIT,LRMSG,LREND,LRDATA,LRREL,LRAU,LREFPD,LRWM,LRCT,LRTMP,LRGMDF
"RTN","LRAPMRL",6,0)
 N LRFLD,LRDSC,LRCHG,LRXTMP,LRYTMP,LRIENS1,LRFILE,LRFLDA,LRAD1,LRIENS
"RTN","LRAPMRL",7,0)
 N LRORIEN,LRWPROOT,LRFDA,LRDA,LRFIELD,LRFILE1,LRIENS2,LRDT0,LRESCPT
"RTN","LRAPMRL",8,0)
 N LRQUIT1,LREDIAG,LRLOCK,LRNOTXT,LRORIEN,LRSEL
"RTN","LRAPMRL",9,0)
 S LRESCPT=0
"RTN","LRAPMRL",10,0)
 D TITLE
"RTN","LRAPMRL",11,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",12,0)
 D NOTICE
"RTN","LRAPMRL",13,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",14,0)
 D SECTION
"RTN","LRAPMRL",15,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",16,0)
 D WHAT
"RTN","LRAPMRL",17,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",18,0)
 D CPTCHK
"RTN","LRAPMRL",19,0)
 ;D SECTION
"RTN","LRAPMRL",20,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",21,0)
 D ASK
"RTN","LRAPMRL",22,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",23,0)
 D SETDR^LRAPMRL1
"RTN","LRAPMRL",24,0)
 D ACCYR
"RTN","LRAPMRL",25,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",26,0)
 D ACCPN
"RTN","LRAPMRL",27,0)
 D END
"RTN","LRAPMRL",28,0)
 D V^LRU
"RTN","LRAPMRL",29,0)
 Q
"RTN","LRAPMRL",30,0)
 ;
"RTN","LRAPMRL",31,0)
 ;
"RTN","LRAPMRL",32,0)
ACCPN ; Prompt for accession number or patient name or UID
"RTN","LRAPMRL",33,0)
 F  D  Q:LREND
"RTN","LRAPMRL",34,0)
 . S (LRQUIT,LREND)=0
"RTN","LRAPMRL",35,0)
 . D CPTCHK
"RTN","LRAPMRL",36,0)
 . D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPMRL",37,0)
 . I LRSEL=3,$D(X) I X=""!(X[U) S LREND=1 Q
"RTN","LRAPMRL",38,0)
 . I '$D(LRSEL)!(LRDATA<1)!('$G(LRAN))!($G(LRAN)=-1) S LREND=1 Q
"RTN","LRAPMRL",39,0)
 . I 'LRSEL S LREND=1 Q
"RTN","LRAPMRL",40,0)
 . S LRDFN=LRDATA,LRI=LRDATA(1)
"RTN","LRAPMRL",41,0)
 . S LRLOCK="^LR(LRDFN"_$S(LRAU:")",1:",LRSS,LRI)")
"RTN","LRAPMRL",42,0)
 . L +@(LRLOCK):DILOCKTM I '$T D  Q
"RTN","LRAPMRL",43,0)
 . . S LRMSG="This record is locked by another user.  "
"RTN","LRAPMRL",44,0)
 . . S LRMSG=LRMSG_"Please try again later."
"RTN","LRAPMRL",45,0)
 . . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPMRL",46,0)
 . S LRIENS=$S('LRAU:LRI_",",1:"")_LRDFN_","
"RTN","LRAPMRL",47,0)
 . D RELCHK^LRAPMRL1
"RTN","LRAPMRL",48,0)
 . I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",49,0)
 . D RELEASE^LRAPMRL1
"RTN","LRAPMRL",50,0)
 . D QUEUPD^LRAPMRL1
"RTN","LRAPMRL",51,0)
 . D:LRCAPA C^LRAPSWK
"RTN","LRAPMRL",52,0)
 . D:'LREDIAG SETDR^LRAPMRL1,EDIT^LRAPMRL1
"RTN","LRAPMRL",53,0)
 . I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",54,0)
 . I 'LRAU D
"RTN","LRAPMRL",55,0)
 . . F LRFLD=1,1.1,1.4,1.3 D  Q:LRQUIT
"RTN","LRAPMRL",56,0)
 . . . Q:LREDIAG&(LRFLD'=1.4)
"RTN","LRAPMRL",57,0)
 . . . Q:'LREDIAG&(LRFLD=1.4)
"RTN","LRAPMRL",58,0)
 . . . Q:LRFLD=1.3&(LRSS'="SP")
"RTN","LRAPMRL",59,0)
 . . . D ASK2 Q:LRQUIT!('LRGMDF)
"RTN","LRAPMRL",60,0)
 . . . D SAVTXT
"RTN","LRAPMRL",61,0)
 . . . K DR S DR=LRFLD
"RTN","LRAPMRL",62,0)
 . . . D EDIT^LRAPMRL1
"RTN","LRAPMRL",63,0)
 . . . D COMPARE Q:LRQUIT
"RTN","LRAPMRL",64,0)
 . . . D AUDIT Q:LRQUIT
"RTN","LRAPMRL",65,0)
 . . . D STORE
"RTN","LRAPMRL",66,0)
 . I LRAU,LREDIAG D
"RTN","LRAPMRL",67,0)
 . . S LRDSC="PATHOLOGICAL DIAGNOSIS"
"RTN","LRAPMRL",68,0)
 . . S LRFLD=32.3
"RTN","LRAPMRL",69,0)
 . . D SAVTXT
"RTN","LRAPMRL",70,0)
 . . K DR S DR=LRFLD
"RTN","LRAPMRL",71,0)
 . . D EDIT^LRAPMRL1
"RTN","LRAPMRL",72,0)
 . . D COMPARE
"RTN","LRAPMRL",73,0)
 . I $G(SEX)["F","SPCY"[LRSS D DEL^LRWOMEN
"RTN","LRAPMRL",74,0)
 . I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",75,0)
 . I LREDIAG D UNLOCK Q
"RTN","LRAPMRL",76,0)
 . D:LRESCPT CPTCODE^LRAPMRL1
"RTN","LRAPMRL",77,0)
 . D UNLOCK
"RTN","LRAPMRL",78,0)
 Q
"RTN","LRAPMRL",79,0)
 ;
"RTN","LRAPMRL",80,0)
 ;
"RTN","LRAPMRL",81,0)
TITLE ; Title
"RTN","LRAPMRL",82,0)
 S (LRQUIT,LRQUIT1)=0
"RTN","LRAPMRL",83,0)
 D CK^LRAP
"RTN","LRAPMRL",84,0)
 I Y=-1 S LRQUIT=1 Q
"RTN","LRAPMRL",85,0)
 W @IOF
"RTN","LRAPMRL",86,0)
 S LRMSG="Modify Released Pathology Reports"
"RTN","LRAPMRL",87,0)
 S LRMSG(1)=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPMRL",88,0)
 S LRMSG(1,"F")="!!"
"RTN","LRAPMRL",89,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPMRL",90,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPMRL",91,0)
 Q
"RTN","LRAPMRL",92,0)
 ;
"RTN","LRAPMRL",93,0)
 ;
"RTN","LRAPMRL",94,0)
NOTICE ; Warn the user and allow an exit
"RTN","LRAPMRL",95,0)
 N LRMSG
"RTN","LRAPMRL",96,0)
 S LRMSG(1)=$$CJ^XLFSTR("NOTICE",IOM),LRMSG(1,"F")="!!"
"RTN","LRAPMRL",97,0)
 S LRMSG(2)=" ",LRMSG(2,"F")="!"
"RTN","LRAPMRL",98,0)
 S LRMSG(3)=$C(7)_"This option allows modification of a verified/released pathology report.",LRMSG(3,"F")="!?3"
"RTN","LRAPMRL",99,0)
 S LRMSG(4)="Continuing with this option will unrelease the report and flag the report",LRMSG(4,"F")="!?3"
"RTN","LRAPMRL",100,0)
 S LRMSG(5)="as modified even if the data is unchanged.  It will also be queued to the",LRMSG(5,"F")="!?3"
"RTN","LRAPMRL",101,0)
 S LRMSG(6)="final report queue so that it may be verified/released again.",LRMSG(6,"F")="!?3"
"RTN","LRAPMRL",102,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPMRL",103,0)
 W !!
"RTN","LRAPMRL",104,0)
 S DIR(0)="Y",DIR("A")="Do you wish to continue",DIR("B")="NO"
"RTN","LRAPMRL",105,0)
 D ^DIR
"RTN","LRAPMRL",106,0)
 S:Y<1 LRQUIT=1
"RTN","LRAPMRL",107,0)
 Q
"RTN","LRAPMRL",108,0)
 ;
"RTN","LRAPMRL",109,0)
 ;
"RTN","LRAPMRL",110,0)
WHAT ; What is to be edited
"RTN","LRAPMRL",111,0)
 N XASK
"RTN","LRAPMRL",112,0)
 W !
"RTN","LRAPMRL",113,0)
 K DIR
"RTN","LRAPMRL",114,0)
 ; Don't ask to Edit Diagnosis if initial entry of diagnosis is turned off at data entry for SP, CY, EM's
"RTN","LRAPMRL",115,0)
 S LRASK=1,XASK=""
"RTN","LRAPMRL",116,0)
 I 'LRAU D
"RTN","LRAPMRL",117,0)
 . S XASK=$S(LRSS="SP":11.2,LRSS="CY":11.3,1:"")
"RTN","LRAPMRL",118,0)
 . S:XASK="" XASK=$S(LRSS="EM":11.4,1:"")
"RTN","LRAPMRL",119,0)
 . S LRASK=$$GET1^DIQ(69.9,"1,",XASK,"I")
"RTN","LRAPMRL",120,0)
 S:LRASK DIR(0)="S^1:Edit Report;2:Edit Diagnosis"
"RTN","LRAPMRL",121,0)
 S:LRASK DIR("A")="Enter selection",DIR("B")=1
"RTN","LRAPMRL",122,0)
 S:'LRASK DIR(0)="Y",DIR("B")="YES",DIR("A")="Edit Report?"
"RTN","LRAPMRL",123,0)
 D ^DIR
"RTN","LRAPMRL",124,0)
 I $D(DIRUT) S LRQUIT=1 Q
"RTN","LRAPMRL",125,0)
 S LREDIAG=$S(Y=2:1,1:0)
"RTN","LRAPMRL",126,0)
 Q
"RTN","LRAPMRL",127,0)
 ;
"RTN","LRAPMRL",128,0)
 ;
"RTN","LRAPMRL",129,0)
CPTCHK ; Determine if CPT is activated
"RTN","LRAPMRL",130,0)
 Q:$T(ES^LRCAPES)=""
"RTN","LRAPMRL",131,0)
 S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPMRL",132,0)
 Q
"RTN","LRAPMRL",133,0)
 ;
"RTN","LRAPMRL",134,0)
 ;
"RTN","LRAPMRL",135,0)
SECTION ; Choose Anatomic Pathology section (AU,SP,CY,EM)
"RTN","LRAPMRL",136,0)
 W !
"RTN","LRAPMRL",137,0)
 D ^LRAP
"RTN","LRAPMRL",138,0)
 I '$D(Y)!('$D(LRSS)) S LRQUIT=1 Q
"RTN","LRAPMRL",139,0)
 S:LRO(68)="EM" LRO(68)="ELECTRON MICROSCOPY"
"RTN","LRAPMRL",140,0)
 S LRAU=0            ; LRAU = 0 - Not Autopsy
"RTN","LRAPMRL",141,0)
 S:LRSS="AU" LRAU=1  ;      = 1 - Autopsy
"RTN","LRAPMRL",142,0)
 I LRCAPA D @(LRSS_"^LRAPSWK")
"RTN","LRAPMRL",143,0)
 S LRMSG(1)=LRO(68)_" ("_LRABV_")",LRMSG(1,"F")="!?20"
"RTN","LRAPMRL",144,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPMRL",145,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPMRL",146,0)
 Q
"RTN","LRAPMRL",147,0)
 ;
"RTN","LRAPMRL",148,0)
 ;
"RTN","LRAPMRL",149,0)
ASK ; Ask etiology,function,procedure,disease,weights,measures
"RTN","LRAPMRL",150,0)
 I LREDIAG D  Q
"RTN","LRAPMRL",151,0)
 . S:'LRAU LREFPD=0
"RTN","LRAPMRL",152,0)
 . S:LRAU LRWM=0
"RTN","LRAPMRL",153,0)
 W !
"RTN","LRAPMRL",154,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",155,0)
 S DIR("A")="Edit etiology, function, procedure & disease"
"RTN","LRAPMRL",156,0)
 D ^DIR
"RTN","LRAPMRL",157,0)
 I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",158,0)
 S LREFPD=$S(+Y:1,1:0)
"RTN","LRAPMRL",159,0)
 I LRAU D
"RTN","LRAPMRL",160,0)
 . W !
"RTN","LRAPMRL",161,0)
 . S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",162,0)
 . S DIR("A")="Edit weights and measures"
"RTN","LRAPMRL",163,0)
 . D ^DIR
"RTN","LRAPMRL",164,0)
 . I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",165,0)
 . S LRWM=$S(+Y:1,1:0)
"RTN","LRAPMRL",166,0)
 Q
"RTN","LRAPMRL",167,0)
 ;
"RTN","LRAPMRL",168,0)
 ;
"RTN","LRAPMRL",169,0)
ACCYR ; Determine Accession Year
"RTN","LRAPMRL",170,0)
 D ACCYR^LRAPUTL(.LRAD1,LRH(0),LRAA,LRO(68))
"RTN","LRAPMRL",171,0)
 I LRAD1=-1 S LRQUIT=1 Q
"RTN","LRAPMRL",172,0)
 I LRAD1 S LRAD=$P(LRAD1,U),LRH(0)=$P(LRAD1,U,2)
"RTN","LRAPMRL",173,0)
 Q
"RTN","LRAPMRL",174,0)
 ;
"RTN","LRAPMRL",175,0)
 ;
"RTN","LRAPMRL",176,0)
ASK2 ; Ask about other fields
"RTN","LRAPMRL",177,0)
 S LRGMDF=0
"RTN","LRAPMRL",178,0)
 K LRDSC
"RTN","LRAPMRL",179,0)
 I LRFLD=1!(LRFLD=1.1) D
"RTN","LRAPMRL",180,0)
 . S:LRFLD=1 LRFLDA=7
"RTN","LRAPMRL",181,0)
 . S:LRFLD=1.1 LRFLDA=4
"RTN","LRAPMRL",182,0)
 . S LRDSC=$S(LRFLD=1:"GROSS",LRFLD=1.1:"MICROSCOPIC",1:"")
"RTN","LRAPMRL",183,0)
 . S LRDSC=LRDSC_" DESCRIPTION"
"RTN","LRAPMRL",184,0)
 S:LRFLD=1.4 LRDSC="DIAGNOSIS",LRFLDA=5
"RTN","LRAPMRL",185,0)
 S:LRFLD=1.3 LRDSC="FROZEN SECTION",LRFLDA=6
"RTN","LRAPMRL",186,0)
 I 'LREDIAG D
"RTN","LRAPMRL",187,0)
 . S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",188,0)
 . S DIR("A")="Edit "_LRDSC
"RTN","LRAPMRL",189,0)
 . D ^DIR
"RTN","LRAPMRL",190,0)
 . I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",191,0)
 . S LRGMDF=$S(+Y:1,1:0)
"RTN","LRAPMRL",192,0)
 S:LREDIAG LRGMDF=1
"RTN","LRAPMRL",193,0)
 Q
"RTN","LRAPMRL",194,0)
 ;
"RTN","LRAPMRL",195,0)
 ;
"RTN","LRAPMRL",196,0)
SAVTXT ; Save word processing field text.
"RTN","LRAPMRL",197,0)
 S LRNOTXT=0
"RTN","LRAPMRL",198,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPMRL",199,0)
 S:'LRAU LRIENS=LRI_","_LRDFN_",",LRFILE=LRSF
"RTN","LRAPMRL",200,0)
 S:LRAU LRIENS=LRDFN_",",LRFILE=63
"RTN","LRAPMRL",201,0)
 Q:LRFLD=""
"RTN","LRAPMRL",202,0)
 S LRTMP=$$GET1^DIQ(LRFILE,LRIENS,LRFLD,"","^TMP(""DIQ1"",$J)")
"RTN","LRAPMRL",203,0)
 I LRTMP="" D
"RTN","LRAPMRL",204,0)
 . N LRMSG
"RTN","LRAPMRL",205,0)
 . S LRMSG(1)="There is no "_LRDSC_" text to modify.",LRMSG(1,"F")="!!"
"RTN","LRAPMRL",206,0)
 . S LRMSG(2)="Report was released before entering text.",LRMSG(2,"F")="!"
"RTN","LRAPMRL",207,0)
 . D EN^DDIOL(.LRMSG)
"RTN","LRAPMRL",208,0)
 . S LRNOTXT=1
"RTN","LRAPMRL",209,0)
 Q
"RTN","LRAPMRL",210,0)
 ;
"RTN","LRAPMRL",211,0)
 ;
"RTN","LRAPMRL",212,0)
COMPARE ; Compare report text
"RTN","LRAPMRL",213,0)
 S (LRCHG,LRQUIT,LRCT)=0
"RTN","LRAPMRL",214,0)
 S:'LRAU LRFILE="^LR(LRDFN,LRSS,LRI,LRFLD,"
"RTN","LRAPMRL",215,0)
 S:LRAU LRFILE="^LR(LRDFN,82,"
"RTN","LRAPMRL",216,0)
 I '$D(@(LRFILE_"0)")) D  Q
"RTN","LRAPMRL",217,0)
 . Q:LRNOTXT
"RTN","LRAPMRL",218,0)
 . S LRQUIT=1
"RTN","LRAPMRL",219,0)
 F  S LRCT=$O(@(LRFILE_"LRCT)")) Q:'LRCT  D
"RTN","LRAPMRL",220,0)
 . S LRXTMP=@(LRFILE_"LRCT,0)")
"RTN","LRAPMRL",221,0)
 . I '$D(^TMP("DIQ1",$J,LRCT)) S LRCHG=1 Q
"RTN","LRAPMRL",222,0)
 . S LRYTMP=^TMP("DIQ1",$J,LRCT)
"RTN","LRAPMRL",223,0)
 . I LRXTMP'=LRYTMP S LRCHG=1
"RTN","LRAPMRL",224,0)
 ;
"RTN","LRAPMRL",225,0)
 I 'LRCHG D
"RTN","LRAPMRL",226,0)
 . S LRCT=0 F  S LRCT=$O(^TMP("DIQ1",$J,LRCT)) Q:'LRCT  D
"RTN","LRAPMRL",227,0)
 . . I '$D(@(LRFILE_"LRCT,0)")) S LRCHG=1
"RTN","LRAPMRL",228,0)
 ;
"RTN","LRAPMRL",229,0)
 I 'LRCHG D  Q
"RTN","LRAPMRL",230,0)
 . D EN^DDIOL("No changes made to "_LRDSC_".","","!!")
"RTN","LRAPMRL",231,0)
 . W !
"RTN","LRAPMRL",232,0)
 . K ^TMP("DIQ1",$J)
"RTN","LRAPMRL",233,0)
 ;
"RTN","LRAPMRL",234,0)
 ; Indicate that the diagnosis has been modified.
"RTN","LRAPMRL",235,0)
 I LRCHG&(LRFLD=1.4!(LRFLD=32.3)) D
"RTN","LRAPMRL",236,0)
 . K LRFDA
"RTN","LRAPMRL",237,0)
 . S:'LRAU LRFDA(LRSF,LRIENS,.172)=1
"RTN","LRAPMRL",238,0)
 . ;KLL-CORRECT BUG WHERE LRSF IS NULL, REPLACE LRSF WITH 63
"RTN","LRAPMRL",239,0)
 . S:LRAU LRFDA(63,LRIENS,102.2)=1
"RTN","LRAPMRL",240,0)
 . ;S:LRAU LRFDA(LRSF,LRIENS,102.2)=1
"RTN","LRAPMRL",241,0)
 . D FILE^DIE("","LRFDA")
"RTN","LRAPMRL",242,0)
 ;
"RTN","LRAPMRL",243,0)
 Q
"RTN","LRAPMRL",244,0)
 ;
"RTN","LRAPMRL",245,0)
 ;
"RTN","LRAPMRL",246,0)
AUDIT ;
"RTN","LRAPMRL",247,0)
 N LRNTIME
"RTN","LRAPMRL",248,0)
 K LRFDA
"RTN","LRAPMRL",249,0)
 D NOW^%DTC S LRNTIME=%
"RTN","LRAPMRL",250,0)
 S LRIENS1="+1,"_LRIENS
"RTN","LRAPMRL",251,0)
 S LRFILE=+$$GET1^DID(LRSF,LRFLDA,"","SPECIFIER")
"RTN","LRAPMRL",252,0)
 I LRFILE="" S LRQUIT=1 Q
"RTN","LRAPMRL",253,0)
 S LRFDA(1,LRFILE,LRIENS1,.01)=LRNTIME
"RTN","LRAPMRL",254,0)
 S LRFDA(1,LRFILE,LRIENS1,.02)=DUZ
"RTN","LRAPMRL",255,0)
 D UPDATE^DIE("","LRFDA(1)","LRORIEN")
"RTN","LRAPMRL",256,0)
 Q
"RTN","LRAPMRL",257,0)
 ;
"RTN","LRAPMRL",258,0)
 ;
"RTN","LRAPMRL",259,0)
STORE ;
"RTN","LRAPMRL",260,0)
 K LRIENS1
"RTN","LRAPMRL",261,0)
 S LRIENS1=LRORIEN(1)_","_LRIENS
"RTN","LRAPMRL",262,0)
 S LRWPROOT="^TMP(""DIQ1"",$J)"
"RTN","LRAPMRL",263,0)
 D WP^DIE(LRFILE,LRIENS1,1,"",LRWPROOT)
"RTN","LRAPMRL",264,0)
 K ^TMP("DIQ1",$J),LRORIEN
"RTN","LRAPMRL",265,0)
 Q
"RTN","LRAPMRL",266,0)
 ;
"RTN","LRAPMRL",267,0)
 ;
"RTN","LRAPMRL",268,0)
SUPRPT ; Supplementary Report
"RTN","LRAPMRL",269,0)
 K DIR
"RTN","LRAPMRL",270,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",271,0)
 S DIR("A")="Edit SUPPLEMENTARY REPORTS"
"RTN","LRAPMRL",272,0)
 D ^DIR
"RTN","LRAPMRL",273,0)
 I Y="^" S LRQUIT1=1 Q
"RTN","LRAPMRL",274,0)
 Q:Y<1
"RTN","LRAPMRL",275,0)
 N LRX,LRRLS,LRA,LRFLG,LRNOW
"RTN","LRAPMRL",276,0)
 D GETRPT^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",277,0)
 S LRRLS=1,LRRLS1=0
"RTN","LRAPMRL",278,0)
 D COPY^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",279,0)
 D RPT^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",280,0)
 S Y=LRDA
"RTN","LRAPMRL",281,0)
 D RELEAS2^LRAPDSR
"RTN","LRAPMRL",282,0)
 D COMPARE^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",283,0)
 D UNRELEAS^LRAPDSR
"RTN","LRAPMRL",284,0)
 D UPDATE^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",285,0)
 D STORE^LRAPDSR
"RTN","LRAPMRL",286,0)
 Q
"RTN","LRAPMRL",287,0)
 ;
"RTN","LRAPMRL",288,0)
 ;
"RTN","LRAPMRL",289,0)
UNLOCK ; Unlock the record
"RTN","LRAPMRL",290,0)
 D UPDATE^LRPXRM(LRDFN,$G(LRSS,"AU"),$G(LRI))
"RTN","LRAPMRL",291,0)
 L -@(LRLOCK)
"RTN","LRAPMRL",292,0)
 Q
"RTN","LRAPMRL",293,0)
 ;
"RTN","LRAPMRL",294,0)
 ;
"RTN","LRAPMRL",295,0)
END ; Clean-up variables and quit
"RTN","LRAPMRL",296,0)
 K ^TMP("LRAPBR",$J),^TMP("TIUP",$J)
"RTN","LRAPMRL",297,0)
 D CLEAN^DILF
"RTN","LRAPMRL",298,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPMRL",299,0)
 D V^LRU
"RTN","LRAPMRL",300,0)
 Q
"RTN","LRAPMRL1")
0^101^B23860987
"RTN","LRAPMRL1",1,0)
LRAPMRL1 ;DALOI/STAFF - AP MODIFY RELEASED REPORT CONT'D ;11/04/11  10:47
"RTN","LRAPMRL1",2,0)
 ;;5.2;LAB SERVICE;**259,317,397,350**;Sep 27, 1994;Build 230
"RTN","LRAPMRL1",3,0)
 ;
"RTN","LRAPMRL1",4,0)
 Q
"RTN","LRAPMRL1",5,0)
RELCHK ; Perform series of checks
"RTN","LRAPMRL1",6,0)
 N RPCOMDT
"RTN","LRAPMRL1",7,0)
 S LRQUIT=0
"RTN","LRAPMRL1",8,0)
 I LRAU,$G(^LR(LRDFN,"AU"))="" D  Q
"RTN","LRAPMRL1",9,0)
 . S LRMSG="No information found for this accession in the "
"RTN","LRAPMRL1",10,0)
 . S LRMSG=LRMSG_"LAB DATA file (#63)."
"RTN","LRAPMRL1",11,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPMRL1",12,0)
 . S LRQUIT=1
"RTN","LRAPMRL1",13,0)
 Q:LRQUIT
"RTN","LRAPMRL1",14,0)
 K LRREL
"RTN","LRAPMRL1",15,0)
 D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,$G(LRI))
"RTN","LRAPMRL1",16,0)
 I 'LRREL(1) D
"RTN","LRAPMRL1",17,0)
 . Q:'LRAU&($G(LRREL(3)))
"RTN","LRAPMRL1",18,0)
 . ;KLL-SKIP THIS MSG IF AU RPT COMP DATE IS SET
"RTN","LRAPMRL1",19,0)
 . S RPCOMDT=$$GET1^DIQ(63,LRDFN,13,"I")
"RTN","LRAPMRL1",20,0)
 . Q:LRAU&($G(RPCOMDT))
"RTN","LRAPMRL1",21,0)
 . S LRMSG=$C(7)_"Report has not been released.  Do not use this "
"RTN","LRAPMRL1",22,0)
 . S LRMSG=LRMSG_"option."
"RTN","LRAPMRL1",23,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPMRL1",24,0)
 . S LRQUIT=1
"RTN","LRAPMRL1",25,0)
 ; Has a supplemental rept been entered, but not yet released? Don't allow modifications until supplemental rept. is released.
"RTN","LRAPMRL1",26,0)
 N LRSR,LRSR1,LRSR2
"RTN","LRAPMRL1",27,0)
 S LRSR=0,LRSR1=1
"RTN","LRAPMRL1",28,0)
 I LRREL(1),'LRAU D 
"RTN","LRAPMRL1",29,0)
 . Q:'+$P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4)
"RTN","LRAPMRL1",30,0)
 . F  S LRSR=$O(^LR(LRDFN,LRSS,LRI,1.2,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPMRL1",31,0)
 . . S LRSR1=+$P(^LR(LRDFN,LRSS,LRI,1.2,LRSR,0),U,2)
"RTN","LRAPMRL1",32,0)
 . . I 'LRSR1 D
"RTN","LRAPMRL1",33,0)
 . . . S Y=+$P(^LR(LRDFN,LRSS,LRI,1.2,LRSR,0),U)
"RTN","LRAPMRL1",34,0)
 . . . D DD^%DT S LRSR2=Y
"RTN","LRAPMRL1",35,0)
 I LRREL(1),LRAU D
"RTN","LRAPMRL1",36,0)
 . S RPCOMDT=$$GET1^DIQ(63,LRDFN,13,"I")
"RTN","LRAPMRL1",37,0)
 . Q:'RPCOMDT
"RTN","LRAPMRL1",38,0)
 . Q:'+$P($G(^LR(LRDFN,84,0)),U,4)
"RTN","LRAPMRL1",39,0)
 . F  S LRSR=$O(^LR(LRDFN,84,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPMRL1",40,0)
 . . S LRSR1=+$P(^LR(LRDFN,84,LRSR,0),U,2)
"RTN","LRAPMRL1",41,0)
 . . I 'LRSR1 D
"RTN","LRAPMRL1",42,0)
 . . . S Y=+$P(^LR(LRDFN,84,LRSR,0),U)
"RTN","LRAPMRL1",43,0)
 . . . D DD^%DT S LRSR2=Y
"RTN","LRAPMRL1",44,0)
 I 'LRSR1 D
"RTN","LRAPMRL1",45,0)
 . S LRQUIT=1
"RTN","LRAPMRL1",46,0)
 . W $C(7),!,"Supplementary report "_LRSR2_" has not been released.  "
"RTN","LRAPMRL1",47,0)
 . W !,"Cannot modify the report."
"RTN","LRAPMRL1",48,0)
 . S Y=0
"RTN","LRAPMRL1",49,0)
 Q
"RTN","LRAPMRL1",50,0)
 ;
"RTN","LRAPMRL1",51,0)
 ;
"RTN","LRAPMRL1",52,0)
RELEASE ; Unrelease report
"RTN","LRAPMRL1",53,0)
 N LRNTIME,RPCOMDT
"RTN","LRAPMRL1",54,0)
 D NOW^%DTC S LRNTIME=%
"RTN","LRAPMRL1",55,0)
 K LRFDA
"RTN","LRAPMRL1",56,0)
 I 'LRAU D
"RTN","LRAPMRL1",57,0)
 . I '$G(LRREL(3)) S LRFDA(LRSF,LRIENS,.15)=LRREL(1)
"RTN","LRAPMRL1",58,0)
 . S LRFDA(LRSF,LRIENS,.11)="@"
"RTN","LRAPMRL1",59,0)
 . S LRFDA(LRSF,LRIENS,.13)="@"
"RTN","LRAPMRL1",60,0)
 . S LRFDA(LRSF,LRIENS,.17)=LRNTIME
"RTN","LRAPMRL1",61,0)
 . S LRFDA(LRSF,LRIENS,.171)=DUZ
"RTN","LRAPMRL1",62,0)
 I LRAU D
"RTN","LRAPMRL1",63,0)
 . S LRFDA(63,LRIENS,14.7)="@"
"RTN","LRAPMRL1",64,0)
 . S LRFDA(63,LRIENS,14.8)="@"
"RTN","LRAPMRL1",65,0)
 . ;KLL-ONLY IF REPT COMP DATE IS SET,OK TO MARK AS MODIFIED
"RTN","LRAPMRL1",66,0)
 . S RPCOMDT=$$GET1^DIQ(63,LRIENS,13,"I")
"RTN","LRAPMRL1",67,0)
 . I RPCOMDT D
"RTN","LRAPMRL1",68,0)
 . . S LRFDA(63,LRIENS,102)=LRNTIME
"RTN","LRAPMRL1",69,0)
 . . S LRFDA(63,LRIENS,102.1)=DUZ
"RTN","LRAPMRL1",70,0)
 D FILE^DIE("","LRFDA")
"RTN","LRAPMRL1",71,0)
 Q
"RTN","LRAPMRL1",72,0)
 ;
"RTN","LRAPMRL1",73,0)
 ;
"RTN","LRAPMRL1",74,0)
QUEUPD ;Update the final report print queue
"RTN","LRAPMRL1",75,0)
 I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPMRL1",76,0)
 . K LRFDA
"RTN","LRAPMRL1",77,0)
 . L +^LRO(69.2,LRAA,2):DILOCKTM I '$T D  Q
"RTN","LRAPMRL1",78,0)
 . . S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPMRL1",79,0)
 . . S MSG(1,"F")="!!"
"RTN","LRAPMRL1",80,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPMRL1",81,0)
 . . D EN^DDIOL(.MSG) K MSG
"RTN","LRAPMRL1",82,0)
 . S LRIENS="+1,"_LRAA_","
"RTN","LRAPMRL1",83,0)
 . S LRFDA(69.23,LRIENS,.01)=LRDFN
"RTN","LRAPMRL1",84,0)
 . S LRFDA(69.23,LRIENS,1)=LRI
"RTN","LRAPMRL1",85,0)
 . S LRFDA(69.23,LRIENS,2)=LRH(0)
"RTN","LRAPMRL1",86,0)
 . S LRORIEN(1)=LRAN
"RTN","LRAPMRL1",87,0)
 . D UPDATE^DIE("","LRFDA","LRORIEN") K LRORIEN
"RTN","LRAPMRL1",88,0)
 . L -^LRO(69.2,LRAA,2)
"RTN","LRAPMRL1",89,0)
 Q
"RTN","LRAPMRL1",90,0)
 ;
"RTN","LRAPMRL1",91,0)
 ;
"RTN","LRAPMRL1",92,0)
EDIT ;
"RTN","LRAPMRL1",93,0)
 W !
"RTN","LRAPMRL1",94,0)
 I 'LRAU S DA=LRI,DA(1)=LRDFN,DIE="^LR("_LRDFN_","""_LRSS_""","
"RTN","LRAPMRL1",95,0)
 S:LRAU DIE="^LR(",DA=LRDFN
"RTN","LRAPMRL1",96,0)
 D ^DIE
"RTN","LRAPMRL1",97,0)
 S:$D(Y) LRQUIT=1
"RTN","LRAPMRL1",98,0)
 S:$G(DTOUT) LRQUIT=1
"RTN","LRAPMRL1",99,0)
 Q
"RTN","LRAPMRL1",100,0)
 ;
"RTN","LRAPMRL1",101,0)
 ;
"RTN","LRAPMRL1",102,0)
SETDR ; Set the DR string
"RTN","LRAPMRL1",103,0)
 I LRAU D
"RTN","LRAPMRL1",104,0)
 . K DR
"RTN","LRAPMRL1",105,0)
 . S DR="13;13.01///^S X=LRWHO;32.1;99;11;14.1;14.5;14.6;12.1;"
"RTN","LRAPMRL1",106,0)
 . S DR=DR_"13.5;13.6;13.8;32;80;"
"RTN","LRAPMRL1",107,0)
 . S:LRWM DR=DR_"16:24;26:31;25;31.1;31.4;25.1;25.9"
"RTN","LRAPMRL1",108,0)
 . S DR(2,63.2)=".01;I 'LREFPD S Y=4;1;1.5;3;4;5"
"RTN","LRAPMRL1",109,0)
 . S DR(3,63.21)=".01",DR(3,63.22)=".01;I 'LREFPD S Y=0;1"
"RTN","LRAPMRL1",110,0)
 . S DR(3,63.24)=".01;S:'$P(^LAB(61.5,X,0),U,3) Y=0;.02"
"RTN","LRAPMRL1",111,0)
 . S DR(4,63.23)=".01"
"RTN","LRAPMRL1",112,0)
 I 'LRAU D
"RTN","LRAPMRL1",113,0)
 . S LRV=+$P($G(^LRO(69.2,LRAA,0)),U,10)  ;Ask TC codes?
"RTN","LRAPMRL1",114,0)
 . K DR
"RTN","LRAPMRL1",115,0)
 . S DR=".08;.07;.011;.012;.013;.014;.015;.016;.1;.02;.021;.99;.97;"
"RTN","LRAPMRL1",116,0)
 . S DR=DR_"10;80;.09///^S X=LRWHO;.03"
"RTN","LRAPMRL1",117,0)
 . I LRSS="SP" D
"RTN","LRAPMRL1",118,0)
 . . S DR(2,63.12)=".01;S LR(8)=$P(^LAB(61,X,0),U,4);S:'LR(8) Y=4;2;4;"
"RTN","LRAPMRL1",119,0)
 . . S DR(2,63.12)=DR(2,63.12)_"I 'LREFPD S Y=5;1;1.5;3;5"
"RTN","LRAPMRL1",120,0)
 . .S DR(2,63.812)=".01;.06R;.07R"
"RTN","LRAPMRL1",121,0)
 . . S DR(3,63.16)=".01;I 'LREFPD S Y=0;1"
"RTN","LRAPMRL1",122,0)
 . . S DR(3,63.82)=".01;D R^LRAPD;.02"
"RTN","LRAPMRL1",123,0)
 . I LRSS="CY" D
"RTN","LRAPMRL1",124,0)
 . . S DR(2,63.902)=".01;.02;.06R;.07R"
"RTN","LRAPMRL1",125,0)
 . . S DR(2,63.912)=".01;S LR(8)=$P(^LAB(61,X,0),U,4);S:'LR(8) Y=4;2;4;"
"RTN","LRAPMRL1",126,0)
 . . S DR(2,63.912)=DR(2,63.912)_"I 'LREFPD S Y=5;1;1.5;3;5"
"RTN","LRAPMRL1",127,0)
 . . S DR(3,63.916)=".01;I 'LREFPD S Y=0;1"
"RTN","LRAPMRL1",128,0)
 . . S DR(3,63.982)=".01;D R^LRAPD;.02"
"RTN","LRAPMRL1",129,0)
 . I LRSS="EM" D
"RTN","LRAPMRL1",130,0)
 . . S DR(2,63.202)=".01;.06R;.07R"
"RTN","LRAPMRL1",131,0)
 . . S DR(2,63.212)=".01;S LR(8)=$P(^LAB(61,X,0),U,4);S:'LR(8) Y=4;2;4;"
"RTN","LRAPMRL1",132,0)
 . . S DR(2,63.212)=DR(2,63.212)_"I 'LREFPD S Y=5;1;1.5;3;5"
"RTN","LRAPMRL1",133,0)
 . . S DR(3,63.216)=".01;I 'LREFPD S Y=0;1"
"RTN","LRAPMRL1",134,0)
 . . S DR(3,63.282)=".01;S:'$P(^LAB(61.5,X,0),U,3) Y=0;.02"
"RTN","LRAPMRL1",135,0)
 Q
"RTN","LRAPMRL1",136,0)
 ;
"RTN","LRAPMRL1",137,0)
 ;
"RTN","LRAPMRL1",138,0)
CPTCODE ; Enter CPT codes
"RTN","LRAPMRL1",139,0)
 K DIR
"RTN","LRAPMRL1",140,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL1",141,0)
 S DIR("A")="Enter CPT CODING"
"RTN","LRAPMRL1",142,0)
 D ^DIR
"RTN","LRAPMRL1",143,0)
 I Y="^"!(Y<1) S LRQUIT=1 Q
"RTN","LRAPMRL1",144,0)
 N LRPRO
"RTN","LRAPMRL1",145,0)
 ; SET PROVIDER=CURRENT USER, ALLOW UPDATES
"RTN","LRAPMRL1",146,0)
 S LRPRO=DUZ
"RTN","LRAPMRL1",147,0)
 D PROVIDR^LRAPUTL
"RTN","LRAPMRL1",148,0)
 Q:LRQUIT
"RTN","LRAPMRL1",149,0)
 D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPMRL1",150,0)
 Q
"RTN","LRAPP")
0^121^B7507591
"RTN","LRAPP",1,0)
LRAPP ;DALOI/STAFF - AP PRINT ;05/29/09  12:47
"RTN","LRAPP",2,0)
 ;;5.2;LAB SERVICE;**72,259,350**;Sep 27, 1994;Build 230
"RTN","LRAPP",3,0)
 ;
"RTN","LRAPP",4,0)
 N LRSF515
"RTN","LRAPP",5,0)
 S LRSF515=1
"RTN","LRAPP",6,0)
 D @LRAPX(0),END
"RTN","LRAPP",7,0)
 Q
"RTN","LRAPP",8,0)
 ;
"RTN","LRAPP",9,0)
 ;
"RTN","LRAPP",10,0)
P ; Print All On Queue
"RTN","LRAPP",11,0)
 N LRFOC S LRFOC=0
"RTN","LRAPP",12,0)
 D A G:'$D(Y) END
"RTN","LRAPP",13,0)
 S LRAPX=4
"RTN","LRAPP",14,0)
 I LRSS'="AU",X=2 D FOC
"RTN","LRAPP",15,0)
 I LRSS="AU",X=1 D FOC
"RTN","LRAPP",16,0)
 G LRAPP
"RTN","LRAPP",17,0)
 ;
"RTN","LRAPP",18,0)
 ;
"RTN","LRAPP",19,0)
D ; Delete Print Queue
"RTN","LRAPP",20,0)
 D A G:'$D(Y) END
"RTN","LRAPP",21,0)
 S LRAPX=2
"RTN","LRAPP",22,0)
 G LRAPP
"RTN","LRAPP",23,0)
 ;
"RTN","LRAPP",24,0)
 ;
"RTN","LRAPP",25,0)
S ; Print Single Report
"RTN","LRAPP",26,0)
 N LRFOC S LRFOC=0
"RTN","LRAPP",27,0)
 D A G:'$D(Y) END
"RTN","LRAPP",28,0)
 S LRAPX=3
"RTN","LRAPP",29,0)
 I LRSS'="AU",X=2 D FOC
"RTN","LRAPP",30,0)
 I LRSS="AU",X=1 D FOC
"RTN","LRAPP",31,0)
 S:'$D(LRABV) LRABV=0
"RTN","LRAPP",32,0)
 G LRAPP
"RTN","LRAPP",33,0)
 ;
"RTN","LRAPP",34,0)
 ;
"RTN","LRAPP",35,0)
N ; Add Pt To Print Queue
"RTN","LRAPP",36,0)
 D A G:'$D(Y) END
"RTN","LRAPP",37,0)
 S LRAPX=1
"RTN","LRAPP",38,0)
 G LRAPP
"RTN","LRAPP",39,0)
 ;
"RTN","LRAPP",40,0)
 ;
"RTN","LRAPP",41,0)
T ; AP Accessions By Date
"RTN","LRAPP",42,0)
 D ^LRAP G:'$D(Y) END
"RTN","LRAPP",43,0)
 D ^LRUPAD,END
"RTN","LRAPP",44,0)
 Q
"RTN","LRAPP",45,0)
 ;
"RTN","LRAPP",46,0)
 ;
"RTN","LRAPP",47,0)
B ; AP Accessions By Number
"RTN","LRAPP",48,0)
 D ^LRAP G:'$D(Y) END
"RTN","LRAPP",49,0)
 D ^LRUPA,END
"RTN","LRAPP",50,0)
 Q
"RTN","LRAPP",51,0)
 ;
"RTN","LRAPP",52,0)
 ;
"RTN","LRAPP",53,0)
A ;
"RTN","LRAPP",54,0)
 W ! D ^LRAP
"RTN","LRAPP",55,0)
 G:'$D(Y) END
"RTN","LRAPP",56,0)
 I LRSS="AU" D PS Q
"RTN","LRAPP",57,0)
 ;
"RTN","LRAPP",58,0)
C ; Path Reports (SP,CY,EM)
"RTN","LRAPP",59,0)
 W !!?16,"1. Preliminary reports",!?16,"2. Final",?31,"reports"
"RTN","LRAPP",60,0)
 R !,"Select 1 or 2 : ",X:DTIME
"RTN","LRAPP",61,0)
 G:X=""!(X[U) END
"RTN","LRAPP",62,0)
 I X<1!(X>2) D  G C
"RTN","LRAPP",63,0)
 . W $C(7),!!,"Enter '1' for preliminary reports or '2' for final "
"RTN","LRAPP",64,0)
 . W "reports"
"RTN","LRAPP",65,0)
 S LRAPX(0)=$S(X=1:"^LRSPT",1:"^LRSPRPT")
"RTN","LRAPP",66,0)
 Q
"RTN","LRAPP",67,0)
 ;
"RTN","LRAPP",68,0)
 ;
"RTN","LRAPP",69,0)
PS ; Autopsy Reports
"RTN","LRAPP",70,0)
 W !!?15,"1. Autopsy protocols"
"RTN","LRAPP",71,0)
 W !?15,"2. Autopsy supplementary reports",!,"Select 1 or 2: "
"RTN","LRAPP",72,0)
 R X:DTIME G:X=""!(X[U) END
"RTN","LRAPP",73,0)
 I X<1!(X>2) D  G PS
"RTN","LRAPP",74,0)
 . W $C(7),!!,"Enter '1' for autopsy protocols or '2' for autopsy "
"RTN","LRAPP",75,0)
 . W "supplementary reports"
"RTN","LRAPP",76,0)
 S LRAPX(0)=$S(X=1:"^LRAURPT",1:"^LRAPAUSR")
"RTN","LRAPP",77,0)
 Q
"RTN","LRAPP",78,0)
 ;
"RTN","LRAPP",79,0)
 ;
"RTN","LRAPP",80,0)
FOC ; Final Office Copy
"RTN","LRAPP",81,0)
 ;
"RTN","LRAPP",82,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPP",83,0)
 ;
"RTN","LRAPP",84,0)
 W !
"RTN","LRAPP",85,0)
 S DIR(0)="Y",DIR("A")="Is this a final office copy",DIR("B")="YES"
"RTN","LRAPP",86,0)
 S DIR("?",1)="SNOMED codes no longer appear on the report.  The final office copy prints"
"RTN","LRAPP",87,0)
 S DIR("?")="these codes on a separate page.  Enter 'Yes' to include this page."
"RTN","LRAPP",88,0)
 D ^DIR
"RTN","LRAPP",89,0)
 I Y S LRFOC=1
"RTN","LRAPP",90,0)
 Q
"RTN","LRAPP",91,0)
 ;
"RTN","LRAPP",92,0)
 ;
"RTN","LRAPP",93,0)
END ;
"RTN","LRAPP",94,0)
 D V^LRU
"RTN","LRAPP",95,0)
 Q
"RTN","LRAPPF1")
0^129^B32286245
"RTN","LRAPPF1",1,0)
LRAPPF1 ;DALOI/STAFF - ANAT PATH FILE PRINT BY PT ;11/17/11  10:59
"RTN","LRAPPF1",2,0)
 ;;5.2;LAB SERVICE;**72,173,201,259,362,392,350**;Sep 27, 1994;Build 230
"RTN","LRAPPF1",3,0)
 ;
"RTN","LRAPPF1",4,0)
 ;Reference to ^DIC supported by IA #916
"RTN","LRAPPF1",5,0)
 ;
"RTN","LRAPPF1",6,0)
 I $G(LRSF515)="" N LRSF515 S LRSF515=0
"RTN","LRAPPF1",7,0)
 ;
"RTN","LRAPPF1",8,0)
 S F=0
"RTN","LRAPPF1",9,0)
 F  S F=$O(^TMP($J,F)) Q:'F!(LR("Q"))  D
"RTN","LRAPPF1",10,0)
 . S F(1)=$P(^DIC(F,0),"^"),F(2)=^DIC(F,0,"GL")
"RTN","LRAPPF1",11,0)
 . K LR("F") D H S LR("F")=1 D W
"RTN","LRAPPF1",12,0)
 Q:LR("Q")
"RTN","LRAPPF1",13,0)
 D ^LRAPPF2
"RTN","LRAPPF1",14,0)
 Q
"RTN","LRAPPF1",15,0)
 ;
"RTN","LRAPPF1",16,0)
 ;
"RTN","LRAPPF1",17,0)
W ;
"RTN","LRAPPF1",18,0)
 S W=0
"RTN","LRAPPF1",19,0)
 F LRB=0:0 S W=$O(^TMP($J,F,W)) Q:W=""!(LR("Q"))  D LR
"RTN","LRAPPF1",20,0)
 Q
"RTN","LRAPPF1",21,0)
 ;
"RTN","LRAPPF1",22,0)
 ;
"RTN","LRAPPF1",23,0)
LR ;
"RTN","LRAPPF1",24,0)
 S LRDFN=0
"RTN","LRAPPF1",25,0)
 F  S LRDFN=$O(^TMP($J,F,W,LRDFN)) Q:'LRDFN!(LR("Q"))  D NM
"RTN","LRAPPF1",26,0)
 Q
"RTN","LRAPPF1",27,0)
 ;
"RTN","LRAPPF1",28,0)
 ;
"RTN","LRAPPF1",29,0)
NM ;
"RTN","LRAPPF1",30,0)
 S X=^LR(LRDFN,0),LRDPF=$P(X,U,2),N=$P(X,"^",3),N=@(F(2)_N_",0)")
"RTN","LRAPPF1",31,0)
 S LRP=$P(N,"^"),SSN=$P(N,"^",9),Y=$P(N,"^",3)
"RTN","LRAPPF1",32,0)
 D D^LRU,SSN^LRU S DOB=$S(Y'[1700:Y,1:"")
"RTN","LRAPPF1",33,0)
 ;
"RTN","LRAPPF1",34,0)
 I $Y>(IOSL-4) D H Q:LR("Q")
"RTN","LRAPPF1",35,0)
 ;
"RTN","LRAPPF1",36,0)
 W !!,LRP,?31,SSN W:DOB'="" ?51,"BORN: ",DOB
"RTN","LRAPPF1",37,0)
 S LRI=0
"RTN","LRAPPF1",38,0)
 F  S LRI=$O(^TMP($J,F,W,LRDFN,LRI)) Q:'LRI!(LR("Q"))  D
"RTN","LRAPPF1",39,0)
 . D @($S("CYEMSP"[LRSS:"EN",1:"AUT"))
"RTN","LRAPPF1",40,0)
 Q
"RTN","LRAPPF1",41,0)
 ;
"RTN","LRAPPF1",42,0)
 ;
"RTN","LRAPPF1",43,0)
AUT S LRSF515=+$G(LRSF515)
"RTN","LRAPPF1",44,0)
 D:$Y>(IOSL-12) H1 Q:LR("Q")
"RTN","LRAPPF1",45,0)
 S X=^LR(LRDFN,"AU"),N=$P(X,"^",6),Y=+X D D^LRU S LRH(3)=Y,DA=LRDFN
"RTN","LRAPPF1",46,0)
 D D^LRAUAW S Y=LR(63,12) D D^LRU S E=Y,H(2)=$E(H(1),1,3)
"RTN","LRAPPF1",47,0)
 W !,"AUTOPSY #: ",N," AUTOPSY DATE: ",LRH(3),?51,"DIED: ",E
"RTN","LRAPPF1",48,0)
 D EN^LRAPT2
"RTN","LRAPPF1",49,0)
 S X=0 F  S X=$O(^LR(LRDFN,"AY",X)) Q:'X!(LR("Q"))  D
"RTN","LRAPPF1",50,0)
 . S Y=+^LR(LRDFN,"AY",X,0),Y=$S($D(^LAB(61,Y,0)):$P(^(0),"^"),1:Y)
"RTN","LRAPPF1",51,0)
 . W !,Y D AM
"RTN","LRAPPF1",52,0)
 Q
"RTN","LRAPPF1",53,0)
 ;
"RTN","LRAPPF1",54,0)
 ;
"RTN","LRAPPF1",55,0)
AM S M=0 F  S M=$O(^LR(LRDFN,"AY",X,2,M)) Q:'M!(LR("Q"))  D
"RTN","LRAPPF1",56,0)
 . S Y=+^LR(LRDFN,"AY",X,2,M,0)
"RTN","LRAPPF1",57,0)
 . S Y=$S($D(^LAB(61.1,Y,0)):$P(^(0),"^"),1:Y)
"RTN","LRAPPF1",58,0)
 . W !?5,Y
"RTN","LRAPPF1",59,0)
 Q
"RTN","LRAPPF1",60,0)
 ;
"RTN","LRAPPF1",61,0)
 ;
"RTN","LRAPPF1",62,0)
EN ; from LRAPT1,LRAPQACN
"RTN","LRAPPF1",63,0)
 S LRSF515=+$G(LRSF515)  ;Indicates that this is generating an SF515
"RTN","LRAPPF1",64,0)
 S X=$G(^LR(LRDFN,S,LRI,0)) Q:X=""  S LR("PATH")=$P(X,U,2),N=$P(X,U,6)
"RTN","LRAPPF1",65,0)
 S N(11)=$P(X,U,11),X=$P(X,U,10),X=$P(X,"."),LRH(3)=$$Y2K^LRX(X)
"RTN","LRAPPF1",66,0)
 S H(2)=$E(X,1,3)
"RTN","LRAPPF1",67,0)
 I LR("PATH")]"" S LR("PATH")=$$EXTERNAL^DILFD(LRSF,.02,"",LR("PATH"),LR("PATH"))
"RTN","LRAPPF1",68,0)
 S:N="" N="?" S:'H(2) H(2)="?"
"RTN","LRAPPF1",69,0)
 I LRSF515,($Y>(IOSL-11)) D H1 Q:LR("Q")
"RTN","LRAPPF1",70,0)
 I 'LRSF515,($Y>(IOSL-4)) D H1 Q:LR("Q")
"RTN","LRAPPF1",71,0)
 ;
"RTN","LRAPPF1",72,0)
 W !?2,"Organ/tissue:",?17,"Date rec'd: ",LRH(3),?43,"Acc #:",N
"RTN","LRAPPF1",73,0)
 W ?64,$E(LR("PATH"),1,12)
"RTN","LRAPPF1",74,0)
 I 'N(11) W !?5,"Report not verified." Q
"RTN","LRAPPF1",75,0)
 ; SNOMED codes
"RTN","LRAPPF1",76,0)
 I '+$G(LR("SPSM")) D  Q:LR("Q")
"RTN","LRAPPF1",77,0)
 . S O=0
"RTN","LRAPPF1",78,0)
 . F  S O=$O(^LR(LRDFN,S,LRI,2,O)) Q:'O!(LR("Q"))  D
"RTN","LRAPPF1",79,0)
 . . I LRSF515,($Y>(IOSL-11)) D H2 Q:LR("Q")
"RTN","LRAPPF1",80,0)
 . . I 'LRSF515,($Y>(IOSL-4)) D H2 Q:LR("Q")
"RTN","LRAPPF1",81,0)
 . . S X=^LR(LRDFN,S,LRI,2,O,0),W(3)=$P(X,"^",3)
"RTN","LRAPPF1",82,0)
 . . S O(6)=$P(^LAB(61,+X,0),"^")
"RTN","LRAPPF1",83,0)
 . . W !?5,O(6) W:W(3) " ",W(3)," gm"
"RTN","LRAPPF1",84,0)
 . . D L
"RTN","LRAPPF1",85,0)
 ; Comments
"RTN","LRAPPF1",86,0)
 I $D(LRQ(3)) D
"RTN","LRAPPF1",87,0)
 . S B=0 F  S B=$O(^LR(LRDFN,S,LRI,99,B)) Q:'B!(LR("Q"))  D
"RTN","LRAPPF1",88,0)
 . . W !?5,$E(^LR(LRDFN,S,LRI,99,B,0),1,74)
"RTN","LRAPPF1",89,0)
 . . I LRSF515,($Y>(IOSL-11)) D H2 Q:LR("Q")
"RTN","LRAPPF1",90,0)
 . . I 'LRSF515,($Y>(IOSL-4)) D H2 Q:LR("Q")
"RTN","LRAPPF1",91,0)
 Q
"RTN","LRAPPF1",92,0)
 ;
"RTN","LRAPPF1",93,0)
 ;
"RTN","LRAPPF1",94,0)
DES ; Print Microscopic Description
"RTN","LRAPPF1",95,0)
 Q:$G(LR("Q"))
"RTN","LRAPPF1",96,0)
 ; If printing SF515 then only print main entry (LRAP="LRDFN^LRIDT") or entry on print queue
"RTN","LRAPPF1",97,0)
 I $G(LRSF515),LRAPX=3,$G(LRAP),(LRSS'=S!(LRI'=$P(LRAP,"^",2))) Q
"RTN","LRAPPF1",98,0)
 I $G(LRSF515),LRAPX=4,$G(LRPRE),(LRSS'=S!(LRI'=$P(^LRO(69.2,LRAA,1,LRAN,0),"^",2))) Q
"RTN","LRAPPF1",99,0)
 Q:'$O(^LR(LRDFN,S,LRI,1.1,0))
"RTN","LRAPPF1",100,0)
 W !!,"Microscopic Description/Diagnosis:"
"RTN","LRAPPF1",101,0)
 N X,LRL,LRVAL
"RTN","LRAPPF1",102,0)
 S LRL=0
"RTN","LRAPPF1",103,0)
 F  S LRL=$O(^LR(LRDFN,S,LRI,1.1,LRL)) Q:LRL<1!$G(LR("Q"))  I ($D(^(LRL,0))#2) S LRVAL=$G(^(0)) D
"RTN","LRAPPF1",104,0)
 . I $Y>(IOSL-13) D H2 Q:$G(LR("Q"))  W !!,"Microscopic Description/Diagnosis:"
"RTN","LRAPPF1",105,0)
 . W !?5,LRVAL
"RTN","LRAPPF1",106,0)
 W !
"RTN","LRAPPF1",107,0)
 Q
"RTN","LRAPPF1",108,0)
 ;
"RTN","LRAPPF1",109,0)
 ;
"RTN","LRAPPF1",110,0)
L ;
"RTN","LRAPPF1",111,0)
 S B=0
"RTN","LRAPPF1",112,0)
 F  S B=$O(^LR(LRDFN,S,LRI,2,O,3,B)) Q:'B!(LR("Q"))  D
"RTN","LRAPPF1",113,0)
 . S B(1)=+^LR(LRDFN,S,LRI,2,O,3,B,0)
"RTN","LRAPPF1",114,0)
 . I LRSF515,($Y>(IOSL-11)) D H3 Q:LR("Q")
"RTN","LRAPPF1",115,0)
 . I 'LRSF515,($Y>(IOSL-4)) D H3 Q:LR("Q")
"RTN","LRAPPF1",116,0)
 . W !?10,$P(^LAB(61.3,B(1),0),"^")
"RTN","LRAPPF1",117,0)
 S B=0
"RTN","LRAPPF1",118,0)
 F  S B=$O(^LR(LRDFN,S,LRI,2,O,4,B)) Q:'B!(LR("Q"))  D
"RTN","LRAPPF1",119,0)
 . S X=^LR(LRDFN,S,LRI,2,O,4,B,0),B(1)=+X,B(2)=$P(X,"^",2)
"RTN","LRAPPF1",120,0)
 . I LRSF515,($Y>(IOSL-11)) D H3 Q:LR("Q")
"RTN","LRAPPF1",121,0)
 . I 'LRSF515,($Y>(IOSL-4)) D H3 Q:LR("Q")
"RTN","LRAPPF1",122,0)
 . W !?10,$P(^LAB(61.5,B(1),0),"^")
"RTN","LRAPPF1",123,0)
 . W:B(2)]"" " (",$S(B(2)=0:"Negative",B(2)=1:"Positive",1:"?"),")"
"RTN","LRAPPF1",124,0)
 S B=0
"RTN","LRAPPF1",125,0)
 F  S B=$O(^LR(LRDFN,S,LRI,2,O,1,B)) Q:'B!(LR("Q"))  D
"RTN","LRAPPF1",126,0)
 . S B(1)=+^LR(LRDFN,S,LRI,2,O,1,B,0)
"RTN","LRAPPF1",127,0)
 . I LRSF515,($Y>(IOSL-11)) D H3 Q:LR("Q")
"RTN","LRAPPF1",128,0)
 . I 'LRSF515,($Y>(IOSL-4)) D H3 Q:LR("Q")
"RTN","LRAPPF1",129,0)
 . W !?10,$P(^LAB(61.4,B(1),0),"^")
"RTN","LRAPPF1",130,0)
 S M=0
"RTN","LRAPPF1",131,0)
 F  S M=$O(^LR(LRDFN,S,LRI,2,O,2,M)) Q:'M!(LR("Q"))  D
"RTN","LRAPPF1",132,0)
 . S M(1)=+^LR(LRDFN,S,LRI,2,O,2,M,0)
"RTN","LRAPPF1",133,0)
 . I LRSF515,($Y>(IOSL-11)) D H3 Q:LR("Q")
"RTN","LRAPPF1",134,0)
 . I 'LRSF515,($Y>(IOSL-4)) D H3 Q:LR("Q")
"RTN","LRAPPF1",135,0)
 . W !?10,$P(^LAB(61.1,M(1),0),"^") D E
"RTN","LRAPPF1",136,0)
 S E=0
"RTN","LRAPPF1",137,0)
 F  S E=$O(^LR(LRDFN,S,LRI,2,O,5,E)) Q:'E!(LR("Q"))  D
"RTN","LRAPPF1",138,0)
 . S E(1)=^LR(LRDFN,S,LRI,2,O,5,E,0) D A
"RTN","LRAPPF1",139,0)
 Q
"RTN","LRAPPF1",140,0)
 ;
"RTN","LRAPPF1",141,0)
 ;
"RTN","LRAPPF1",142,0)
A ;
"RTN","LRAPPF1",143,0)
 S Y=$P(E(1),"^",2),E(3)=$P(E(1),"^",3),E(4)=$P(E(1),"^")_":"
"RTN","LRAPPF1",144,0)
 S E(4)=$P($P(LR(S),E(4),2),";") D D^LRU S E(2)=Y D D^LRU
"RTN","LRAPPF1",145,0)
 I LRSF515,($Y>(IOSL-11)) D H3 Q:LR("Q")
"RTN","LRAPPF1",146,0)
 I 'LRSF515,($Y>(IOSL-4)) D H3 Q:LR("Q")
"RTN","LRAPPF1",147,0)
 W !?5,E(4)," ",E(3)," Date: ",E(2)
"RTN","LRAPPF1",148,0)
 Q
"RTN","LRAPPF1",149,0)
 ;
"RTN","LRAPPF1",150,0)
 ;
"RTN","LRAPPF1",151,0)
E ;
"RTN","LRAPPF1",152,0)
 S E=0
"RTN","LRAPPF1",153,0)
 F  S E=$O(^LR(LRDFN,S,LRI,2,O,2,M,1,E)) Q:'E!(LR("Q"))  W !?12,$P(^LAB(61.2,+^LR(LRDFN,S,LRI,2,O,2,M,1,E,0),0),"^")
"RTN","LRAPPF1",154,0)
 Q
"RTN","LRAPPF1",155,0)
 ;
"RTN","LRAPPF1",156,0)
 ;
"RTN","LRAPPF1",157,0)
H ;
"RTN","LRAPPF1",158,0)
 ;
"RTN","LRAPPF1",159,0)
 I LRSF515 D F^LRAPF,^LRAPF Q
"RTN","LRAPPF1",160,0)
 I $D(LR("F")),IOST?1"C".E D M^LRU Q:LR("Q")
"RTN","LRAPPF1",161,0)
 I $D(LRQ(2)) D H^LRSPT Q
"RTN","LRAPPF1",162,0)
 I $D(LRQ(9)) D H^LRAPT1 Q
"RTN","LRAPPF1",163,0)
 D F^LRU W !,LRO(68)," "
"RTN","LRAPPF1",164,0)
 W:F(2)'="^DPT(" !,"Demographic data in ",F(1)," file."
"RTN","LRAPPF1",165,0)
 W !,"Entries listed by PATIENT (From: ",LRSTR," to: ",LRLST,")"
"RTN","LRAPPF1",166,0)
 W !,"Name",?31,"Identifier"
"RTN","LRAPPF1",167,0)
 W !,LR("%")
"RTN","LRAPPF1",168,0)
 Q
"RTN","LRAPPF1",169,0)
 ;
"RTN","LRAPPF1",170,0)
 ;
"RTN","LRAPPF1",171,0)
H1 ;
"RTN","LRAPPF1",172,0)
 D H
"RTN","LRAPPF1",173,0)
 I '$D(LRQ(9)) W !,LRP,?30,SSN,?42,DOB
"RTN","LRAPPF1",174,0)
 Q
"RTN","LRAPPF1",175,0)
 ;
"RTN","LRAPPF1",176,0)
 ;
"RTN","LRAPPF1",177,0)
H2 ;
"RTN","LRAPPF1",178,0)
 D H1
"RTN","LRAPPF1",179,0)
 W !?5,"Organ/tissue:",?25,"Date received: ",LRH(3),?51,"Acc #:",N
"RTN","LRAPPF1",180,0)
 Q
"RTN","LRAPPF1",181,0)
 ;
"RTN","LRAPPF1",182,0)
 ;
"RTN","LRAPPF1",183,0)
H3 ;
"RTN","LRAPPF1",184,0)
 D H2
"RTN","LRAPPF1",185,0)
 W !?5,O(6) W:W(3) " ",W(3)," gm"
"RTN","LRAPPF1",186,0)
 Q
"RTN","LRAPQAR")
0^177^B18456988
"RTN","LRAPQAR",1,0)
LRAPQAR ;DALOI/STAFF - 10% SURG PATH REVIEW ;02/24/11  15:45
"RTN","LRAPQAR",2,0)
 ;;5.2;LAB SERVICE;**72,173,350**;Sep 27, 1994;Build 230
"RTN","LRAPQAR",3,0)
 ;
"RTN","LRAPQAR",4,0)
EN ;
"RTN","LRAPQAR",5,0)
 N LRDICS
"RTN","LRAPQAR",6,0)
 S LRDICS="SPCYEM" D ^LRAP G:'$D(Y) END
"RTN","LRAPQAR",7,0)
 W !!?25,"10% ",LRO(68),"  Review"
"RTN","LRAPQAR",8,0)
 D ASK^LRAPQAFS G:%<1 END
"RTN","LRAPQAR",9,0)
 W ! D B^LRU G:Y<0 END S LRSDT=LRSDT-.01,LRLDT=LRLDT+.99
"RTN","LRAPQAR",10,0)
 S ZTRTN="QUE^LRAPQAR" D BEG^LRUTL G:POP!($D(ZTSK)) END
"RTN","LRAPQAR",11,0)
 ;
"RTN","LRAPQAR",12,0)
QUE ;
"RTN","LRAPQAR",13,0)
 U IO
"RTN","LRAPQAR",14,0)
 K ^TMP($J),^TMP("LRAP",$J)
"RTN","LRAPQAR",15,0)
 S LRN="ALL",(LRQ(9),LRS(5),LRS(99))=1,LR("DIWF")="W",(LR,LR("A"),LR(1),LR(2),LR(3),LRQ(2),LRG,LRJ)=0
"RTN","LRAPQAR",16,0)
 D L^LRU,S^LRU,L1^LRU,XR^LRU,H S LR("F")=1 W !,LR("%")
"RTN","LRAPQAR",17,0)
 F  S LRSDT=$O(^LR(LRXR,LRSDT)) Q:'LRSDT!(LRSDT>LRLDT)  D
"RTN","LRAPQAR",18,0)
 . S LRDFN=0
"RTN","LRAPQAR",19,0)
 . F  S LRDFN=$O(^LR(LRXR,LRSDT,LRDFN)) Q:'LRDFN  D
"RTN","LRAPQAR",20,0)
 . . S LRI=0
"RTN","LRAPQAR",21,0)
 . . F  S LRI=$O(^LR(LRXR,LRSDT,LRDFN,LRI)) Q:'LRI  D T
"RTN","LRAPQAR",22,0)
 ;
"RTN","LRAPQAR",23,0)
 W !,"Total accessions:",?23,$J(LRG,5),!
"RTN","LRAPQAR",24,0)
 D A,EN2^LRUA,SET^LRUA
"RTN","LRAPQAR",25,0)
 S LRQ=0,LRA=1
"RTN","LRAPQAR",26,0)
 D W
"RTN","LRAPQAR",27,0)
 K ^TMP("LRAP",$J)
"RTN","LRAPQAR",28,0)
 D END^LRUTL,END
"RTN","LRAPQAR",29,0)
 Q
"RTN","LRAPQAR",30,0)
 ;
"RTN","LRAPQAR",31,0)
 ;
"RTN","LRAPQAR",32,0)
T ;
"RTN","LRAPQAR",33,0)
 I $P($P($G(^LR(LRDFN,LRSS,LRI,0)),U,6)," ")=LRABV S X=^(0),Z=$E($P(X,U,10),1,3),A=+$P($P(X,U,6)," ",3) D T1
"RTN","LRAPQAR",34,0)
 Q
"RTN","LRAPQAR",35,0)
 ;
"RTN","LRAPQAR",36,0)
 ;
"RTN","LRAPQAR",37,0)
T1 ; Parse topographies by first digit of SNOMED I code if no SNOMED I code then use first digit of SNOMED CT code if mapped.
"RTN","LRAPQAR",38,0)
 S X=0
"RTN","LRAPQAR",39,0)
 F  S X=$O(^LR(LRDFN,LRSS,LRI,2,X)) Q:'X  D
"RTN","LRAPQAR",40,0)
 . S Y=+^LR(LRDFN,LRSS,LRI,2,X,0)
"RTN","LRAPQAR",41,0)
 . I Y,$D(^LAB(61,Y,0)) D
"RTN","LRAPQAR",42,0)
 . . N LRSNMD
"RTN","LRAPQAR",43,0)
 . . S LRSNMD=$E($P(^LAB(61,Y,0),U,2))
"RTN","LRAPQAR",44,0)
 . . I LRSNMD="" S LRSNMD=$E($G(^LAB(61,Y,"SCT")))
"RTN","LRAPQAR",45,0)
 . . I LRSNMD'="",Z S ^TMP($J,"B",LRSNMD,Z,A)="",LRG=LRG+1
"RTN","LRAPQAR",46,0)
 Q
"RTN","LRAPQAR",47,0)
 ;
"RTN","LRAPQAR",48,0)
 ;
"RTN","LRAPQAR",49,0)
A ;
"RTN","LRAPQAR",50,0)
 F X=0,1,2,3,4,5,6,7,8,9,0,"X","Y" I $D(^TMP($J,"B",X)) D C
"RTN","LRAPQAR",51,0)
 K ^TMP($J,"B")
"RTN","LRAPQAR",52,0)
 S X=-1 F  S X=$O(^TMP($J,X)) Q:X=""  W !?3,"Topography ",X,": ",$J(^(X),4)
"RTN","LRAPQAR",53,0)
 F X=0,1,2,3,4,5,6,7,8,9,"X","Y" I $D(^TMP($J,X)) S T=^(X),C=0 D S
"RTN","LRAPQAR",54,0)
 Q
"RTN","LRAPQAR",55,0)
 ;
"RTN","LRAPQAR",56,0)
 ;
"RTN","LRAPQAR",57,0)
W W !!,"Accessions for review: ",$J(LRJ,5) W:LRG&(LRJ) " (",$J(LRJ/LRG*100,5,2),"%)" I 'LRQA D H1 Q:LR("Q")
"RTN","LRAPQAR",58,0)
 S LRY=0
"RTN","LRAPQAR",59,0)
 F  S LRY=$O(^TMP("LRAP",$J,LRY)) Q:'LRY!(LR("Q"))  D
"RTN","LRAPQAR",60,0)
 . S LRAN=0
"RTN","LRAPQAR",61,0)
 . F  S LRAN=$O(^TMP("LRAP",$J,LRY,LRAN)) Q:'LRAN!(LR("Q"))  D D
"RTN","LRAPQAR",62,0)
 ;
"RTN","LRAPQAR",63,0)
 S:LRQA LRQ=0
"RTN","LRAPQAR",64,0)
 S LRY=0
"RTN","LRAPQAR",65,0)
 F  S LRY=$O(^TMP("LRAP",$J,LRY)) Q:'LRY!(LR("Q"))  D B
"RTN","LRAPQAR",66,0)
 Q
"RTN","LRAPQAR",67,0)
 ;
"RTN","LRAPQAR",68,0)
 ;
"RTN","LRAPQAR",69,0)
D ;
"RTN","LRAPQAR",70,0)
 S LRDFN=$O(^LR(LRXREF,LRY,LRABV,LRAN,0)),LRI=$O(^(LRDFN,0)),LRAC=$P($G(^LR(LRDFN,LRSS,LRI,0)),U,6)
"RTN","LRAPQAR",71,0)
 D:LRQA EN^LRSPRPT
"RTN","LRAPQAR",72,0)
 D:'LRQA ^LRUA
"RTN","LRAPQAR",73,0)
 S ^TMP("LRAP",$J,LRY,LRAN)=LRP_U_SSN_U_LRI_U_LRDFN_U_LRAC
"RTN","LRAPQAR",74,0)
 D:LRC L^LRAPQAMR
"RTN","LRAPQAR",75,0)
 Q
"RTN","LRAPQAR",76,0)
 ;
"RTN","LRAPQAR",77,0)
 ;
"RTN","LRAPQAR",78,0)
B ;
"RTN","LRAPQAR",79,0)
 S LRAN=0
"RTN","LRAPQAR",80,0)
 F  S LRAN=$O(^TMP("LRAP",$J,LRY,LRAN)) Q:'LRAN!(LR("Q"))  S X=^(LRAN),LRP=$P(X,"^"),SSN=$P(X,"^",2),LRI=$P(X,"^",3),LRDFN=$P(X,"^",4),LRAC=$P(X,U,5) D:$Y>(IOSL-6) H1 Q:LR("Q")  D R
"RTN","LRAPQAR",81,0)
 Q
"RTN","LRAPQAR",82,0)
 ;
"RTN","LRAPQAR",83,0)
 ;
"RTN","LRAPQAR",84,0)
R W !,LRAC,?18,LRP,?50,SSN
"RTN","LRAPQAR",85,0)
 I LRI F LRT=0:0 S LRT=$O(^LR(LRDFN,LRSS,LRI,2,LRT)) Q:'LRT!(LR("Q"))  S X=+^(LRT,0),LRX=$P(^LAB(61,X,0),"^") D:$Y>(IOSL-6) H2 Q:LR("Q")  W !?5,LRX D M
"RTN","LRAPQAR",86,0)
 W !,LR("%")
"RTN","LRAPQAR",87,0)
 Q
"RTN","LRAPQAR",88,0)
 ;
"RTN","LRAPQAR",89,0)
 ;
"RTN","LRAPQAR",90,0)
M ;
"RTN","LRAPQAR",91,0)
 S LRM=0
"RTN","LRAPQAR",92,0)
 F  S LRM=$O(^LR(LRDFN,LRSS,LRI,2,LRT,2,LRM)) Q:'LRM!(LR("Q"))  S X=+^(LRM,0),M=$P(^LAB(61.1,X,0),"^") D:$Y>(IOSL-6) H3 Q:LR("Q")  W !?10,M
"RTN","LRAPQAR",93,0)
 Q
"RTN","LRAPQAR",94,0)
 ;
"RTN","LRAPQAR",95,0)
 ;
"RTN","LRAPQAR",96,0)
C ;
"RTN","LRAPQAR",97,0)
 S (A,C)=0
"RTN","LRAPQAR",98,0)
 F  S A=$O(^TMP($J,"B",X,A)) Q:'A  D
"RTN","LRAPQAR",99,0)
 . S B=0
"RTN","LRAPQAR",100,0)
 . F  S B=$O(^TMP($J,"B",X,A,B)) Q:'B  S C=C+1,^TMP($J,X,C)=A_"^"_B
"RTN","LRAPQAR",101,0)
 S ^TMP($J,X)=C
"RTN","LRAPQAR",102,0)
 Q
"RTN","LRAPQAR",103,0)
 ;
"RTN","LRAPQAR",104,0)
 ;
"RTN","LRAPQAR",105,0)
S S N=T*.1 S:N<1 N=1 I N["." S N=N_"00",A=$E($P(N,".",2),1,3),B=$P(N,"."),N=$S(A>499:B+1,1:B)
"RTN","LRAPQAR",106,0)
 I T=1 S F=^TMP($J,X,1),^TMP("LRAP",$J,$P(F,"^"),$P(F,"^",2))="",LRJ=LRJ+1 K ^TMP($J,X,1) Q
"RTN","LRAPQAR",107,0)
 F  Q:C=N  S E=$R(T)+1 I $D(^TMP($J,X,E)) S F=^(E),^TMP("LRAP",$J,$P(F,"^"),$P(F,"^",2))="",C=C+1,LRJ=LRJ+1 K ^TMP($J,X,E)
"RTN","LRAPQAR",108,0)
 Q
"RTN","LRAPQAR",109,0)
 ;
"RTN","LRAPQAR",110,0)
 ;
"RTN","LRAPQAR",111,0)
H ;
"RTN","LRAPQAR",112,0)
 I $D(LR("F")),$E(IOST,1,2)="C-" D M^LRU Q:LR("Q")
"RTN","LRAPQAR",113,0)
 D F^LRU W !,"10% ",LRAA(1)," Review from ",LRSTR," to ",LRLST
"RTN","LRAPQAR",114,0)
 Q
"RTN","LRAPQAR",115,0)
 ;
"RTN","LRAPQAR",116,0)
 ;
"RTN","LRAPQAR",117,0)
H1 D H Q:LR("Q")  W !,"ACC #",?20,"NAME",?55,"SSN",!,LR("%") Q
"RTN","LRAPQAR",118,0)
 ;
"RTN","LRAPQAR",119,0)
 ;
"RTN","LRAPQAR",120,0)
H2 D H1 Q:LR("Q")  W !,LRAC,?18,LRP,?50,SSN Q
"RTN","LRAPQAR",121,0)
 ;
"RTN","LRAPQAR",122,0)
 ;
"RTN","LRAPQAR",123,0)
H3 D H2 Q:LR("Q")  W !?5,LRX Q
"RTN","LRAPQAR",124,0)
 ;
"RTN","LRAPQAR",125,0)
 ;
"RTN","LRAPQAR",126,0)
END ;
"RTN","LRAPQAR",127,0)
 D V^LRU
"RTN","LRAPQAR",128,0)
 Q
"RTN","LRAPR")
0^73^B102075847
"RTN","LRAPR",1,0)
LRAPR ;DALOI/STAFF - ANAT RELEASE REPORTS ;12/09/11  10:20
"RTN","LRAPR",2,0)
 ;;5.2;LAB SERVICE;**72,248,259,317,365,350**;Sep 27, 1994;Build 230
"RTN","LRAPR",3,0)
 ;
"RTN","LRAPR",4,0)
 N LRESSW,LRX,%,X,Y
"RTN","LRAPR",5,0)
 D SWITCH
"RTN","LRAPR",6,0)
 I +LRESSW D  Q
"RTN","LRAPR",7,0)
 . D ^LRAPRES
"RTN","LRAPR",8,0)
 . D END
"RTN","LRAPR",9,0)
 W !!?27,"Release Pathology Reports",!!
"RTN","LRAPR",10,0)
 D A
"RTN","LRAPR",11,0)
 I '$D(LRSS) D END Q
"RTN","LRAPR",12,0)
 I LRCAPA D  G:'$D(X) END
"RTN","LRAPR",13,0)
 . S X=$S(LRSS="CY":"CYTOLOGY REPORTING",LRSS="SP":"SURGICAL PATH REPORTING",1:"")
"RTN","LRAPR",14,0)
 . D:X]"" X^LRUWK
"RTN","LRAPR",15,0)
 I LRSS="AU" D B Q
"RTN","LRAPR",16,0)
 ;
"RTN","LRAPR",17,0)
 S LRSOP="Z"
"RTN","LRAPR",18,0)
 S DR="S LRX=^LR(LRDFN,LRSS,LRI,0),LRZ=$P(LRX,U,3),LRZ(1)=$P(LRX,U,13),"
"RTN","LRAPR",19,0)
 S DR=DR_"LRZ(2)=$P(LRX,U,11),LRZ(3)=$P(LRX,U,2);"
"RTN","LRAPR",20,0)
 S DR=DR_"I 'LRZ W $C(7),!,""No date report completed.   "
"RTN","LRAPR",21,0)
 S DR=DR_"Cannot release."" S Y=0;"
"RTN","LRAPR",22,0)
 S DR=DR_"I 'LRZ(2) D NMPATH^LRAPR;"
"RTN","LRAPR",23,0)
 S DR=DR_"I LRZ(2) D RINFO^LRAPR S Y=0;"
"RTN","LRAPR",24,0)
 ;
"RTN","LRAPR",25,0)
 ; Perform supp edit regardless if date rept released since supp rpt is added to released report
"RTN","LRAPR",26,0)
 S DR=DR_"D SUPCHK^LRAPR;"
"RTN","LRAPR",27,0)
 S DR=DR_"S DIR(0)=""YA"",DIR(""A"")=""Release report? """
"RTN","LRAPR",28,0)
 S DR=DR_",DIR(""B"")=""NO"" D ^DIR K:Y Y S:$D(Y) Y=0;"
"RTN","LRAPR",29,0)
 S DR=DR_".11////^S X=$$NOW^XLFDT;.13////^S X=DUZ;"
"RTN","LRAPR",30,0)
 S DR=DR_"S LRELSD=1 W !!,""Report released..."""
"RTN","LRAPR",31,0)
 D ^LRAPDA
"RTN","LRAPR",32,0)
 D END
"RTN","LRAPR",33,0)
 Q
"RTN","LRAPR",34,0)
 ;
"RTN","LRAPR",35,0)
 ;
"RTN","LRAPR",36,0)
B ; Autopsy
"RTN","LRAPR",37,0)
 S LRSOP="Z"
"RTN","LRAPR",38,0)
 S DR="S LRX=$G(^LR(LRDFN,""AU"")) I LRX="""" S Y=0;"
"RTN","LRAPR",39,0)
 S DR=DR_"S LRZ=$P(LRX,U,3),LRZ(1)=$P(LRX,U,16),LRZ(2)=$P(LRX,U,15),"
"RTN","LRAPR",40,0)
 ;
"RTN","LRAPR",41,0)
 ; KLL-LRZ(3)=SR PATHOLOGIST,LRZ(4)=PROVISIONAL DATE
"RTN","LRAPR",42,0)
 S DR=DR_"LRZ(3)=$P(LRX,U,10),LRZ(4)=$P(LRX,U,17);"
"RTN","LRAPR",43,0)
 ;
"RTN","LRAPR",44,0)
 ; KLL-PROVISIONAL OR DATE REPORT COMPLETED IS REQUIRED
"RTN","LRAPR",45,0)
 S DR=DR_"I 'LRZ(4),'LRZ W $C(7),!,""Provisional date or date report completed required.   "
"RTN","LRAPR",46,0)
 S DR=DR_"Cannot release."" S Y=0;"
"RTN","LRAPR",47,0)
 S DR=DR_"I 'LRZ(2) D NMPATH^LRAPR;"
"RTN","LRAPR",48,0)
 S DR=DR_"I LRZ(2) D RINFO^LRAPR S Y=0;"
"RTN","LRAPR",49,0)
 ; Perform supp edit regardless if date rept released since supp rpt is added to released report
"RTN","LRAPR",50,0)
 S DR=DR_"D SUPCHK^LRAPR;"
"RTN","LRAPR",51,0)
 S DR=DR_"D RELEASE^LRAPR;"
"RTN","LRAPR",52,0)
 S DR=DR_"S LRDTE=$$NOW^XLFDT;"
"RTN","LRAPR",53,0)
 S DR=DR_"14.7////^S X=$S(LRZ(2):""@"",1:LRDTE);"
"RTN","LRAPR",54,0)
 S DR=DR_"14.8////^S X=$S(LRZ(2):""@"",1:DUZ);"
"RTN","LRAPR",55,0)
 S DR=DR_"S:'LRZ(2) LRELSD=1 "
"RTN","LRAPR",56,0)
 S DR=DR_"W !!,""Report "" W:LRZ(2) ""un"" W ""released..."";K LRDTE"
"RTN","LRAPR",57,0)
 D ^LRAPDA
"RTN","LRAPR",58,0)
 D END
"RTN","LRAPR",59,0)
 Q
"RTN","LRAPR",60,0)
 ;
"RTN","LRAPR",61,0)
 ;
"RTN","LRAPR",62,0)
EN ; Supplementary Report Entry Point
"RTN","LRAPR",63,0)
 N LRESSW
"RTN","LRAPR",64,0)
 D SWITCH
"RTN","LRAPR",65,0)
 W !!?20,"Release Supplementary Pathology Reports",!
"RTN","LRAPR",66,0)
 ;D A
"RTN","LRAPR",67,0)
 ; Section prompt replaces the line above
"RTN","LRAPR",68,0)
 S LRQUIT=0,LRDATA=0
"RTN","LRAPR",69,0)
 D SECTION^LRAPRES
"RTN","LRAPR",70,0)
 I '$D(LRSS) D END Q
"RTN","LRAPR",71,0)
 ; Verify User ID has access to release supp. reports
"RTN","LRAPR",72,0)
 S LREND=0
"RTN","LRAPR",73,0)
 I LRESSW D CLSSCHK^LRAPRES1(DUZ,.LREND)
"RTN","LRAPR",74,0)
 Q:LREND
"RTN","LRAPR",75,0)
 ;
"RTN","LRAPR",76,0)
 N DIR,DIRUT,Y
"RTN","LRAPR",77,0)
 W !!
"RTN","LRAPR",78,0)
 S DIR(0)="Y",DIR("A")="Data entry for "_LRH(0)_" "
"RTN","LRAPR",79,0)
 S DIR("B")="Yes"
"RTN","LRAPR",80,0)
 D ^DIR K DIR
"RTN","LRAPR",81,0)
 G:$G(DIRUT) END
"RTN","LRAPR",82,0)
 I Y=0 D  G:Y<1 END
"RTN","LRAPR",83,0)
 . N DIR
"RTN","LRAPR",84,0)
 . S DIR(0)="D0^:DT:E"
"RTN","LRAPR",85,0)
 . D ^DIR
"RTN","LRAPR",86,0)
 . Q:Y<1
"RTN","LRAPR",87,0)
 . S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPR",88,0)
 ;
"RTN","LRAPR",89,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) D  Q
"RTN","LRAPR",90,0)
 . W $C(7),!!,"NO ",LRAA(1)," ACCESSIONS IN FILE FOR ",LRH(0),!!
"RTN","LRAPR",91,0)
 ;
"RTN","LRAPR",92,0)
W K X,Y,LR("CK")
"RTN","LRAPR",93,0)
 D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPR",94,0)
 I LRDATA=-1!('$G(LRSEL))!('$D(LRI)) S LREND=1 G END
"RTN","LRAPR",95,0)
 S LRIDT=LRI
"RTN","LRAPR",96,0)
 I LRSEL=3 D DIE
"RTN","LRAPR",97,0)
 D REST
"RTN","LRAPR",98,0)
 G W
"RTN","LRAPR",99,0)
 ;
"RTN","LRAPR",100,0)
 ;
"RTN","LRAPR",101,0)
REST W "  for ",LRH(0)
"RTN","LRAPR",102,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPR",103,0)
 . W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)
"RTN","LRAPR",104,0)
 . W " not in ACCESSION file",!!
"RTN","LRAPR",105,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X,LRODT=$P(X,"^",4),LRSN=$P(X,"^",5)
"RTN","LRAPR",106,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPR",107,0)
 ;W !,LRP,"  ID: ",SSN
"RTN","LRAPR",108,0)
 ;I LRSS'="AU" D
"RTN","LRAPR",109,0)
 ;.S LRI=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRAPR",110,0)
 ;.W !,"Specimen(s):"
"RTN","LRAPR",111,0)
 ;.S X=0 F  S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  D
"RTN","LRAPR",112,0)
 ;..I $D(^LR(LRDFN,LRSS,LRI,.1,X,0)),$L(^(0)) W !,^(0)
"RTN","LRAPR",113,0)
 ;
"RTN","LRAPR",114,0)
 ;
"RTN","LRAPR",115,0)
DIE ; Define default supplementary report
"RTN","LRAPR",116,0)
 N LRFILE,LRIENS,LRIENS1,LRX,LRRLS,LRFDA,LRLKFL,LRDA,LRQUIT,LRNOSP
"RTN","LRAPR",117,0)
 N LRMSG,LRSRFL,LRFDA2,LRSRMD,LRRLM
"RTN","LRAPR",118,0)
 S DIC("B")="",LRNOSP=0
"RTN","LRAPR",119,0)
 I LRSS'="AU" D
"RTN","LRAPR",120,0)
 . S LRFILE=+$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","LRAPR",121,0)
 . S LRIENS1=LRI_","_LRDFN_","
"RTN","LRAPR",122,0)
 . I '+$P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),"^",4) S LRNOSP=1 Q
"RTN","LRAPR",123,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,LRSS,LRI,1.2,LRX)) Q:'LRX  D
"RTN","LRAPR",124,0)
 . . S LRIENS=LRX_","_LRIENS1
"RTN","LRAPR",125,0)
 . . S LRSRFL=$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR",126,0)
 . . ; LRSRMD-set to 1 if supp rpt modified and requires release
"RTN","LRAPR",127,0)
 . . S LRSRMD=$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR",128,0)
 . . Q:LRSRFL&('LRSRMD)
"RTN","LRAPR",129,0)
 . . S DIC("B")=$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPR",130,0)
 I LRSS="AU" D
"RTN","LRAPR",131,0)
 . S LRFILE=63.324,LRIENS1=LRDFN_","
"RTN","LRAPR",132,0)
 . I '+$P($G(^LR(LRDFN,84,0)),"^",4) S LRNOSP=1 Q
"RTN","LRAPR",133,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,84,LRX)) Q:'LRX  D
"RTN","LRAPR",134,0)
 . . S LRIENS=LRX_","_LRIENS1
"RTN","LRAPR",135,0)
 . . S LRSRFL=$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR",136,0)
 . . ; LRSRMD-set to 1 if supp rpt modified and requires release
"RTN","LRAPR",137,0)
 . . S LRSRMD=$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR",138,0)
 . . Q:LRSRFL&('LRSRMD)
"RTN","LRAPR",139,0)
 . . S DIC("B")=$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPR",140,0)
 I LRNOSP D  Q
"RTN","LRAPR",141,0)
 . K LRMSG
"RTN","LRAPR",142,0)
 . S LRMSG=$C(7)_"No supplementary reports exist for this accession."
"RTN","LRAPR",143,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPR",144,0)
 I '$G(DIC("B")) D  Q
"RTN","LRAPR",145,0)
 . K LRMSG
"RTN","LRAPR",146,0)
 . S LRMSG=$C(7)_"All supplementary reports have been released."
"RTN","LRAPR",147,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPR",148,0)
 ;
"RTN","LRAPR",149,0)
DIE1 ;
"RTN","LRAPR",150,0)
 S (LRQUIT,LRRLM)=0
"RTN","LRAPR",151,0)
 F  D  Q:LRQUIT
"RTN","LRAPR",152,0)
 . W !
"RTN","LRAPR",153,0)
 . N DIC,DIR,DIRUT,DIROUT,DTOUT,X,Y
"RTN","LRAPR",154,0)
 . S:LRSS="AU" (LRLKFL,DIC)="^LR(LRDFN,84,"
"RTN","LRAPR",155,0)
 . S:LRSS'="AU" (LRLKFL,DIC)="^LR(LRDFN,LRSS,LRI,1.2,"
"RTN","LRAPR",156,0)
 . S DIC("A")="Select SUPPLEMENTARY REPORT DATE: "
"RTN","LRAPR",157,0)
 . S DIC(0)="AEQM"
"RTN","LRAPR",158,0)
 . D ^DIC K DIC
"RTN","LRAPR",159,0)
 . I Y<1 S LRQUIT=1 Q
"RTN","LRAPR",160,0)
 . S LRDA=+Y
"RTN","LRAPR",161,0)
 . S LRIENS=LRDA_","_LRIENS1
"RTN","LRAPR",162,0)
 . S LRRLS=+$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR",163,0)
 . ; If E-Sign OFF, must check LRRLM.  LRRLM=1 if supp rpt has been modified and requires release
"RTN","LRAPR",164,0)
 . S LRRLM=+$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR",165,0)
 . I LRESSW,LRRLS D  Q
"RTN","LRAPR",166,0)
 . . W !!,"This supplementary report has already been released.",!
"RTN","LRAPR",167,0)
 . I 'LRESSW,LRRLS D  Q:'LRRLM
"RTN","LRAPR",168,0)
 . . I 'LRRLM W !!,"This supplementary report has already been released.",!
"RTN","LRAPR",169,0)
 . W !
"RTN","LRAPR",170,0)
 . I LRESSW D  Q
"RTN","LRAPR",171,0)
 . . N DIR,DIRUT,DIROUT,DTOUT,X,Y
"RTN","LRAPR",172,0)
 . . D ESIG Q:LRQUIT
"RTN","LRAPR",173,0)
 . . D UPDATE
"RTN","LRAPR",174,0)
 . S DIR("A")="Release supplementary report",DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPR",175,0)
 . D ^DIR K DIR
"RTN","LRAPR",176,0)
 . I $D(DIRUT) S LRQUIT=1 Q
"RTN","LRAPR",177,0)
 . I Y'=1 Q
"RTN","LRAPR",178,0)
 . D UPDATE
"RTN","LRAPR",179,0)
 . ; If E-sign switch OFF and orig report released, must verify all supp reports released before release main report.
"RTN","LRAPR",180,0)
 . I LRCKREL,'LRESSW D CHKSUP^LRAPR1
"RTN","LRAPR",181,0)
 Q
"RTN","LRAPR",182,0)
 ;
"RTN","LRAPR",183,0)
 ;
"RTN","LRAPR",184,0)
A D ^LRAP G:'$D(Y) END
"RTN","LRAPR",185,0)
 Q
"RTN","LRAPR",186,0)
 ;
"RTN","LRAPR",187,0)
 ;
"RTN","LRAPR",188,0)
C ;
"RTN","LRAPR",189,0)
 S LRDICS="SPCYEM" D ^LRAP
"RTN","LRAPR",190,0)
 G:'$D(Y) END
"RTN","LRAPR",191,0)
 Q
"RTN","LRAPR",192,0)
 ;
"RTN","LRAPR",193,0)
 ;
"RTN","LRAPR",194,0)
S ; from LRAPDA
"RTN","LRAPR",195,0)
 S LRK=$P(^LR(LRDFN,LRSS,LRI,0),"^",11) Q:'LRK  S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) ^(0)="^68.04PA^^"
"RTN","LRAPR",196,0)
 Q:$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0))
"RTN","LRAPR",197,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0)=LRT_"^50^^"_DUZ_"^"_LRK
"RTN","LRAPR",198,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),^(0)=$P(X,"^",1,2)_"^"_LRT_"^"_($P(X,"^",4)+1)
"RTN","LRAPR",199,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,1,0)) ^(0)="^68.14P^^"
"RTN","LRAPR",200,0)
 S C=0 F  S C=$O(LRT(C)) Q:'C  D CAP
"RTN","LRAPR",201,0)
 S ^LRO(68,"AA",LRAA_"|"_LRAD_"|"_LRAN_"|"_LRT)=""
"RTN","LRAPR",202,0)
 Q
"RTN","LRAPR",203,0)
 ;
"RTN","LRAPR",204,0)
 ;
"RTN","LRAPR",205,0)
CAP ; Store workload
"RTN","LRAPR",206,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,1,C,0)=C_"^1^0^0^^"_LRK_"^"_DUZ_"^"_DUZ(2)_"^"_LRAA_"^"_LRAA_"^"_LRAA
"RTN","LRAPR",207,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,1,0),^(0)=$P(X,"^",1,2)_"^"_C_"^"_($P(X,"^",4)+1)
"RTN","LRAPR",208,0)
 Q
"RTN","LRAPR",209,0)
 ;
"RTN","LRAPR",210,0)
 ;
"RTN","LRAPR",211,0)
SWITCH ; Check to see if electronic signature is enabled
"RTN","LRAPR",212,0)
 D GETDATA^LRAPESON(.LRESSW)
"RTN","LRAPR",213,0)
 Q
"RTN","LRAPR",214,0)
 ;
"RTN","LRAPR",215,0)
 ;
"RTN","LRAPR",216,0)
ESIG ; Prompt for electronic signature
"RTN","LRAPR",217,0)
 S LRQUIT=0
"RTN","LRAPR",218,0)
 D SIG^XUSESIG
"RTN","LRAPR",219,0)
 I X1="" D
"RTN","LRAPR",220,0)
 . W "  SIGNATURE NOT VERIFIED"
"RTN","LRAPR",221,0)
 . S LRQUIT=1
"RTN","LRAPR",222,0)
 Q
"RTN","LRAPR",223,0)
 ;
"RTN","LRAPR",224,0)
 ;
"RTN","LRAPR",225,0)
UPDATE ;
"RTN","LRAPR",226,0)
 S LRLKFL=LRLKFL_LRDA_",0)"
"RTN","LRAPR",227,0)
 L +@(LRLKFL):DILOCKTM I '$T D  Q
"RTN","LRAPR",228,0)
 . S LRMSG="This record is locked by another user.  Please wait and try again."
"RTN","LRAPR",229,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPR",230,0)
 S LRFDA(LRFILE,LRIENS,.02)=1
"RTN","LRAPR",231,0)
 S LRFDA2(LRFILE,LRIENS,.02)="@" ;Set but don't file unless unrel needed
"RTN","LRAPR",232,0)
 ;
"RTN","LRAPR",233,0)
 ; File signer ID and Date/time of released supp report
"RTN","LRAPR",234,0)
 D CKSIGNR^LRAPR1
"RTN","LRAPR",235,0)
 D FILE^DIE("","LRFDA")
"RTN","LRAPR",236,0)
 W "...Released"
"RTN","LRAPR",237,0)
 L -@(LRLKFL)
"RTN","LRAPR",238,0)
 ;
"RTN","LRAPR",239,0)
 I LRSS="AU" S LRA=^LR(LRDFN,"AU"),LRAC=$$GET1^DIQ(63,LRDFN_",",14,"I"),LRI=$P(LRA,U)
"RTN","LRAPR",240,0)
 ;
"RTN","LRAPR",241,0)
 I LRSS'="AU" S LRA=^LR(LRDFN,LRSS,LRI,0),LRAC=$$GET1^DIQ(LRSF,LRIENS,.06,"I")
"RTN","LRAPR",242,0)
 ;
"RTN","LRAPR",243,0)
 D MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,LRAC)
"RTN","LRAPR",244,0)
 ;
"RTN","LRAPR",245,0)
 ; If all supp reports released, and E-Sign switch is ON, proceed to release main report
"RTN","LRAPR",246,0)
 S LRCKREL=0
"RTN","LRAPR",247,0)
 S:LRSS'="AU" LRCKREL=$P(^LR(LRDFN,LRSS,LRI,0),"^",11)
"RTN","LRAPR",248,0)
 S:LRSS="AU" LRCKREL=$P(^LR(LRDFN,LRSS),"^",15)
"RTN","LRAPR",249,0)
 ;
"RTN","LRAPR",250,0)
 I LRCKREL,LRESSW D RELMN Q
"RTN","LRAPR",251,0)
 ;
"RTN","LRAPR",252,0)
 ; Check and send LEDI report back to submitting (collecting) site.
"RTN","LRAPR",253,0)
 ; If RELMN called above then LEDI checked performed during that call, calls RELEASE^LRAPRES.
"RTN","LRAPR",254,0)
 I LRSS'="AU" D LEDI^LRVR0
"RTN","LRAPR",255,0)
 ;
"RTN","LRAPR",256,0)
 Q
"RTN","LRAPR",257,0)
 ;
"RTN","LRAPR",258,0)
 ;
"RTN","LRAPR",259,0)
SUPCHK ; Check for unreleased supplementary reports
"RTN","LRAPR",260,0)
 N LRSR,LRSR1,LRSR2
"RTN","LRAPR",261,0)
 S LRSR=0,LRSR1=1
"RTN","LRAPR",262,0)
 I LRSS'="AU" D
"RTN","LRAPR",263,0)
 . Q:'+$P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4)
"RTN","LRAPR",264,0)
 . F  S LRSR=$O(^LR(LRDFN,LRSS,LRI,1.2,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPR",265,0)
 . . S LRSR1=+$P(^LR(LRDFN,LRSS,LRI,1.2,LRSR,0),U,2)
"RTN","LRAPR",266,0)
 . . I 'LRSR1 D
"RTN","LRAPR",267,0)
 . . . S Y=+$P(^LR(LRDFN,LRSS,LRI,1.2,LRSR,0),U)
"RTN","LRAPR",268,0)
 . . . S LRSR2=$$FMTE^XLFDT(Y,1)
"RTN","LRAPR",269,0)
 I LRSS="AU" D
"RTN","LRAPR",270,0)
 . Q:'+$P($G(^LR(LRDFN,84,0)),U,4)
"RTN","LRAPR",271,0)
 . F  S LRSR=$O(^LR(LRDFN,84,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPR",272,0)
 . . S LRSR1=+$P(^LR(LRDFN,84,LRSR,0),U,2)
"RTN","LRAPR",273,0)
 . . I 'LRSR1 D
"RTN","LRAPR",274,0)
 . . . S Y=+$P(^LR(LRDFN,84,LRSR,0),U)
"RTN","LRAPR",275,0)
 . . . S LRSR2=$$FMTE^XLFDT(Y,1)
"RTN","LRAPR",276,0)
 I 'LRSR1 D
"RTN","LRAPR",277,0)
 . W $C(7),!,"Supplementary report "_LRSR2_" has not been released.  "
"RTN","LRAPR",278,0)
 . W "Cannot release."
"RTN","LRAPR",279,0)
 . S Y=0
"RTN","LRAPR",280,0)
 Q
"RTN","LRAPR",281,0)
 ;
"RTN","LRAPR",282,0)
 ;
"RTN","LRAPR",283,0)
RINFO ; Display release information
"RTN","LRAPR",284,0)
 W $C(7),!,"Report "
"RTN","LRAPR",285,0)
 W:LRZ(2)=1 "has already been "
"RTN","LRAPR",286,0)
 W "released "
"RTN","LRAPR",287,0)
 W:LRZ(2)>1 $$FMTE^XLFDT(LRZ(2),1)
"RTN","LRAPR",288,0)
 W:LRZ(1)'="" " by "_$P($G(^VA(200,LRZ(1),0)),U)
"RTN","LRAPR",289,0)
 Q
"RTN","LRAPR",290,0)
 ;
"RTN","LRAPR",291,0)
 ;
"RTN","LRAPR",292,0)
NMPATH ; Check for missing pathologist name
"RTN","LRAPR",293,0)
 I 'LRZ(3) D
"RTN","LRAPR",294,0)
 . W $C(7),!,"Pathologist name missing.  Cannot release."
"RTN","LRAPR",295,0)
 . S Y=0
"RTN","LRAPR",296,0)
 Q
"RTN","LRAPR",297,0)
 ;
"RTN","LRAPR",298,0)
 ;
"RTN","LRAPR",299,0)
RELEASE ; Prompt for release/unrelease
"RTN","LRAPR",300,0)
 N DIR
"RTN","LRAPR",301,0)
 W ! S DIR(0)="YA",DIR("B")="NO"
"RTN","LRAPR",302,0)
 S:LRZ(2) DIR("A")="Unrelease report? "
"RTN","LRAPR",303,0)
 S:'LRZ(2) DIR("A")="Release report? "
"RTN","LRAPR",304,0)
 D ^DIR
"RTN","LRAPR",305,0)
 K:Y Y
"RTN","LRAPR",306,0)
 I $D(Y) S Y=0
"RTN","LRAPR",307,0)
 Q
"RTN","LRAPR",308,0)
 ;
"RTN","LRAPR",309,0)
 ;
"RTN","LRAPR",310,0)
RELMN ; Allow release of main report as long as all supp reports are released, and signer is same person for main and supp report(s)
"RTN","LRAPR",311,0)
 ; Make sure all supp reports signed out
"RTN","LRAPR",312,0)
 S LRQT=0
"RTN","LRAPR",313,0)
 D RELCHK^LRAPR1
"RTN","LRAPR",314,0)
 Q:LRQT
"RTN","LRAPR",315,0)
 ;
"RTN","LRAPR",316,0)
 ; Continue with electronic signature and storage in TIU
"RTN","LRAPR",317,0)
 S LRAU=$S(LRSS="AU":1,1:0)
"RTN","LRAPR",318,0)
 I 'LRAU D
"RTN","LRAPR",319,0)
 . S LRPAT=+$$GET1^DIQ(LRSF,LRIENS1,.02,"I")
"RTN","LRAPR",320,0)
 . S LRZ=$$GET1^DIQ(LRSF,LRIENS1,.03,"I")
"RTN","LRAPR",321,0)
 . S LRZ(1)=$$GET1^DIQ(LRSF,LRIENS1,.13,"I")
"RTN","LRAPR",322,0)
 . S LRZ(1.1)=$$GET1^DIQ(LRSF,LRIENS1,.13)
"RTN","LRAPR",323,0)
 . S LRZ(2)=$$GET1^DIQ(LRSF,LRIENS1,.11,"I")
"RTN","LRAPR",324,0)
 I LRAU D
"RTN","LRAPR",325,0)
 . S LRPAT=+$$GET1^DIQ(63,LRDFN_",",13.6,"I")
"RTN","LRAPR",326,0)
 . S LRZ=$$GET1^DIQ(63,LRDFN_",",13,"I")
"RTN","LRAPR",327,0)
 . S LRZ(1)=$$GET1^DIQ(63,LRDFN_",",14.8,"I")
"RTN","LRAPR",328,0)
 . S LRZ(1.1)=$$GET1^DIQ(63,LRDFN_",",14.8)
"RTN","LRAPR",329,0)
 . S LRZ(2)=$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPR",330,0)
 . S LRI=""
"RTN","LRAPR",331,0)
 W !!,?25,"*** Main Report Release ***",!
"RTN","LRAPR",332,0)
 S LRNTIME=$$NOW^XLFDT
"RTN","LRAPR",333,0)
 D TIUPREP^LRAPRES
"RTN","LRAPR",334,0)
 D STORE^LRAPRES
"RTN","LRAPR",335,0)
 I LRQUIT D FILE^DIE("","LRFDA2") Q
"RTN","LRAPR",336,0)
 D UNRLSE^LRAPR1
"RTN","LRAPR",337,0)
 D RELEASE^LRAPRES
"RTN","LRAPR",338,0)
 I LRQUIT D FILE^DIE("","LRFDA2") Q
"RTN","LRAPR",339,0)
 D OERR^LR7OB63D
"RTN","LRAPR",340,0)
 S LRQUIT=1
"RTN","LRAPR",341,0)
 Q
"RTN","LRAPR",342,0)
 ;
"RTN","LRAPR",343,0)
 ;
"RTN","LRAPR",344,0)
END ;
"RTN","LRAPR",345,0)
 D V^LRU
"RTN","LRAPR",346,0)
 Q
"RTN","LRAPR1")
0^93^B20852920
"RTN","LRAPR1",1,0)
LRAPR1 ;DALOI/STAFF - ANAT RELEASE REPORTS CONT'D ;12/16/09  11:42
"RTN","LRAPR1",2,0)
 ;;5.2;LAB SERVICE;**317,350**;Sep 27, 1994;Build 230
"RTN","LRAPR1",3,0)
 ;
"RTN","LRAPR1",4,0)
RELCHK ; Check to make sure all supp reports are released
"RTN","LRAPR1",5,0)
 N LRFILE,LRIENS,LRIENS1,LRX,LRRLS,LRFDA,LRLKFL,LRDA,LRNOSP
"RTN","LRAPR1",6,0)
 N LRMSG,LRSRFL,LRSRMD
"RTN","LRAPR1",7,0)
 S DIC("B")=""
"RTN","LRAPR1",8,0)
 I LRSS'="AU" D
"RTN","LRAPR1",9,0)
 . S LRFILE=+$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","LRAPR1",10,0)
 . S LRIENS1=LRI_","_LRDFN_","
"RTN","LRAPR1",11,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,LRSS,LRI,1.2,LRX)) Q:'LRX  D
"RTN","LRAPR1",12,0)
 . . S LRIENS=LRX_","_LRIENS1
"RTN","LRAPR1",13,0)
 . . S LRSRFL=$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR1",14,0)
 . . ;LRSRMD- if flag is true, supp rpt has been modified, needs release
"RTN","LRAPR1",15,0)
 . . S LRSRMD=$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR1",16,0)
 . . Q:LRSRFL&('LRSRMD)
"RTN","LRAPR1",17,0)
 . . S DIC("B")=$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPR1",18,0)
 I LRSS="AU" D
"RTN","LRAPR1",19,0)
 . S LRFILE=63.324
"RTN","LRAPR1",20,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,84,LRX)) Q:'LRX  D
"RTN","LRAPR1",21,0)
 . . S LRIENS=LRX_","_LRDFN_","
"RTN","LRAPR1",22,0)
 . . S LRSRFL=$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR1",23,0)
 . . ;LRSRMD- if flag is true, supp rpt has been modified, needs release
"RTN","LRAPR1",24,0)
 . . S LRSRMD=$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR1",25,0)
 . . Q:LRSRFL&('LRSRMD)
"RTN","LRAPR1",26,0)
 . . S DIC("B")=$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPR1",27,0)
 I $G(DIC("B")) S LRQT=1
"RTN","LRAPR1",28,0)
 Q
"RTN","LRAPR1",29,0)
 ;
"RTN","LRAPR1",30,0)
 ;
"RTN","LRAPR1",31,0)
CHKSUP ; Check for unreleased supp reports for E-sign switch OFF
"RTN","LRAPR1",32,0)
 N LRQT,LRZ11,LRZ15,LRIENS3
"RTN","LRAPR1",33,0)
 S (LRQT,LRZ11,LRZ15)=0
"RTN","LRAPR1",34,0)
 D RELCHK
"RTN","LRAPR1",35,0)
 I LRQT D  Q
"RTN","LRAPR1",36,0)
 . W !!,"All supp repts must be released before main report can be released."
"RTN","LRAPR1",37,0)
 I 'LRQT D
"RTN","LRAPR1",38,0)
 . K LRFDA
"RTN","LRAPR1",39,0)
 . S LRNTIME=$$NOW^XLFDT
"RTN","LRAPR1",40,0)
 . I 'LRAU D
"RTN","LRAPR1",41,0)
 . . S LRZ15=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",15)
"RTN","LRAPR1",42,0)
 . . S LRZ11=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",11)
"RTN","LRAPR1",43,0)
 . . S LRIENS3=LRI_","_LRDFN_","
"RTN","LRAPR1",44,0)
 . . S LRFDA(LRSF,LRIENS3,.11)=LRNTIME
"RTN","LRAPR1",45,0)
 . . S LRFDA(LRSF,LRIENS3,.13)=DUZ
"RTN","LRAPR1",46,0)
 . . I 'LRZ15 S LRFDA(LRSF,LRIENS3,.15)=LRZ11
"RTN","LRAPR1",47,0)
 . I LRAU D
"RTN","LRAPR1",48,0)
 . . S LRIENS3=LRDFN_","
"RTN","LRAPR1",49,0)
 . . S LRFDA(63,LRIENS3,14.7)=LRNTIME
"RTN","LRAPR1",50,0)
 . . S LRFDA(63,LRIENS3,14.8)=DUZ
"RTN","LRAPR1",51,0)
 . ;S LRSRMD=$$GET1^DIQ(LRFILE,LRIENS,.03,"I")
"RTN","LRAPR1",52,0)
 . ;If MODIFY SUPP REPORT flag is set, remove it at this point
"RTN","LRAPR1",53,0)
 . ;I LRSRMD S LRFDA(LRSF,LRIENS,.03)="@"
"RTN","LRAPR1",54,0)
 . D FILE^DIE("","LRFDA")
"RTN","LRAPR1",55,0)
 . W !!,"*** Main Report Has Been Released ***",!
"RTN","LRAPR1",56,0)
 ;
"RTN","LRAPR1",57,0)
 ; Check and send LEDI report back to submitting (collecting) site.
"RTN","LRAPR1",58,0)
 I $D(LRSS),LRSS'="AU" D LEDI^LRVR0
"RTN","LRAPR1",59,0)
 ;
"RTN","LRAPR1",60,0)
 Q
"RTN","LRAPR1",61,0)
 ;
"RTN","LRAPR1",62,0)
 ;
"RTN","LRAPR1",63,0)
UNRLSE ; Must unrelease at this point in order to successfully release below
"RTN","LRAPR1",64,0)
 K LRFDA
"RTN","LRAPR1",65,0)
 N LRREL,LRIENS3
"RTN","LRAPR1",66,0)
 D RELEASE^LRAPUTL(.LRREL,LRDFN,LRSS,$G(LRI))
"RTN","LRAPR1",67,0)
 I 'LRAU D
"RTN","LRAPR1",68,0)
 . S LRIENS3=LRI_","_LRDFN_","
"RTN","LRAPR1",69,0)
 . I '$G(LRREL(3)) S LRFDA(LRSF,LRIENS3,.15)=LRREL(1)
"RTN","LRAPR1",70,0)
 . S LRFDA(LRSF,LRIENS3,.11)="@"
"RTN","LRAPR1",71,0)
 . S LRFDA(LRSF,LRIENS3,.13)="@"
"RTN","LRAPR1",72,0)
 I LRAU D
"RTN","LRAPR1",73,0)
 . S LRZ(2)="" ;Must null this in order to prevent unrelease
"RTN","LRAPR1",74,0)
 . S LRFDA(63,LRDFN,14.7)="@"
"RTN","LRAPR1",75,0)
 . S LRFDA(63,LRDFN,14.8)="@"
"RTN","LRAPR1",76,0)
 D FILE^DIE("","LRFDA")
"RTN","LRAPR1",77,0)
 Q
"RTN","LRAPR1",78,0)
 ;
"RTN","LRAPR1",79,0)
 ;
"RTN","LRAPR1",80,0)
SUPCHK ; Check Supplementary Reports
"RTN","LRAPR1",81,0)
 N LRSR,LRSR1,LRSR2,LRFILE,LRIENS,LRIENS1
"RTN","LRAPR1",82,0)
 S LRSR=0,LRSR1=1
"RTN","LRAPR1",83,0)
 I LRSS'="AU" D
"RTN","LRAPR1",84,0)
 . Q:'+$P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4)
"RTN","LRAPR1",85,0)
 . S LRFILE=+$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","LRAPR1",86,0)
 . S LRIENS1=LRI_","_LRDFN_","
"RTN","LRAPR1",87,0)
 . F  S LRSR=$O(^LR(LRDFN,LRSS,LRI,1.2,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPR1",88,0)
 . . S LRIENS=LRSR_","_LRIENS1
"RTN","LRAPR1",89,0)
 . . S LRSR1=+$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR1",90,0)
 . . I 'LRSR1 S LRSR2=$$GET1^DIQ(LRFILE,LRIENS,.01)
"RTN","LRAPR1",91,0)
 I LRSS="AU" D
"RTN","LRAPR1",92,0)
 . Q:'+$P($G(^LR(LRDFN,84,0)),U,4)
"RTN","LRAPR1",93,0)
 . S LRFILE=63.324,LRIENS1=LRDFN_","
"RTN","LRAPR1",94,0)
 . F  S LRSR=$O(^LR(LRDFN,84,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPR1",95,0)
 . . S LRIENS=LRSR_","_LRIENS1
"RTN","LRAPR1",96,0)
 . . S LRSR1=+$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPR1",97,0)
 . . I 'LRSR1 S LRSR2=$$GET1^DIQ(LRFILE,LRIENS,.01)
"RTN","LRAPR1",98,0)
 I 'LRSR1 D
"RTN","LRAPR1",99,0)
 . S LRMSG="Supplementary report "_LRSR2_" has not been released.  "
"RTN","LRAPR1",100,0)
 . S LRMSG=LRMSG_"Cannot release."
"RTN","LRAPR1",101,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPR1",102,0)
 . S LRQUIT=1
"RTN","LRAPR1",103,0)
 Q
"RTN","LRAPR1",104,0)
 ;
"RTN","LRAPR1",105,0)
 ;
"RTN","LRAPR1",106,0)
CKSIGNR ; Update supp report with Releaser ID and Date/time
"RTN","LRAPR1",107,0)
 N LRIEN2,LRFLE,LRFL3
"RTN","LRAPR1",108,0)
 S LRQT2=0
"RTN","LRAPR1",109,0)
 I LRSS'="AU" D
"RTN","LRAPR1",110,0)
 . S (A,B)=0 F  S A=$O(^LR(LRDFN,LRSS,LRI,1.2,LRDA,2,A)) Q:'A  S B=A
"RTN","LRAPR1",111,0)
 . I '$D(^LR(LRDFN,LRSS,LRI,1.2,LRDA,2,B,0)) S LRQT2=1 Q
"RTN","LRAPR1",112,0)
 . S LRIEN2=B_","_LRDA_","_LRI_","_LRDFN_","
"RTN","LRAPR1",113,0)
 . S LRFLE=$S(LRSS="SP":63.8172,LRSS="CY":63.9072,LRSS="EM":63.2072,1:"")
"RTN","LRAPR1",114,0)
 . S LRFL3=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:"")
"RTN","LRAPR1",115,0)
 I LRSS="AU" D
"RTN","LRAPR1",116,0)
 . S (A,B)=0 F  S A=$O(^LR(LRDFN,84,LRDA,2,A)) Q:'A  S B=A
"RTN","LRAPR1",117,0)
 . I '$D(^LR(LRDFN,84,LRDA,2,B,0)) S LRQT2=1 Q
"RTN","LRAPR1",118,0)
 . S LRIEN2=B_","_LRDA_","_LRDFN_","
"RTN","LRAPR1",119,0)
 . S LRFLE=$S(LRSS="AU":63.3242,1:"")
"RTN","LRAPR1",120,0)
 . S LRFL3=$S(LRSS="AU":63.324,1:"")
"RTN","LRAPR1",121,0)
 Q:LRQT2
"RTN","LRAPR1",122,0)
 S LRFDA(LRFLE,LRIEN2,.03)=DUZ
"RTN","LRAPR1",123,0)
 S LRFDA(LRFLE,LRIEN2,.04)=$$NOW^XLFDT
"RTN","LRAPR1",124,0)
 ; Must remove supp report modified flag once supp rpt is released
"RTN","LRAPR1",125,0)
 S LRFDA(LRFL3,LRIENS,.03)="@"
"RTN","LRAPR1",126,0)
 ; Set, but don't file unless unrelease required
"RTN","LRAPR1",127,0)
 S LRFDA2(LRFLE,LRIEN2,.03)="@"
"RTN","LRAPR1",128,0)
 S LRFDA2(LRFLE,LRIEN2,.04)="@"
"RTN","LRAPR1",129,0)
 Q
"RTN","LRAPRES")
0^118^B184355664
"RTN","LRAPRES",1,0)
LRAPRES ;DALOI/STAFF - AP ESIG RELEASE REPORT ;11/20/09  12:40
"RTN","LRAPRES",2,0)
 ;;5.2;LAB SERVICE;**259,295,317,315,350**;Sep 27, 1994;Build 230
"RTN","LRAPRES",3,0)
 ;
"RTN","LRAPRES",4,0)
 ;
"RTN","LRAPRES",5,0)
 ; Reference to NEW^TIUPNAPI supported by IA #1911
"RTN","LRAPRES",6,0)
 ; Reference to SETPARM^TIULE supported by IA #2863
"RTN","LRAPRES",7,0)
 ; Reference to File #8925.1 supported by IA #5033
"RTN","LRAPRES",8,0)
 ; Reference to TGET^TIUSRVR1 supported by IA #2944
"RTN","LRAPRES",9,0)
 ; Reference to $$DDEFIEN^TIUFLF7 supported by IA #5352
"RTN","LRAPRES",10,0)
 ; Reference to EXTRACT^TIULQ supported by IA #2693
"RTN","LRAPRES",11,0)
 ;
"RTN","LRAPRES",12,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRAPRES",13,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRAPRES",14,0)
 ;
"RTN","LRAPRES",15,0)
MAIN ;
"RTN","LRAPRES",16,0)
 N LRMSG,LRDEM,LREND,LRQUIT,LRNTIME,LRPRCLSS,LRVCDE,LRMTCH
"RTN","LRAPRES",17,0)
 N LRPCEXP,LRESCPT,LRPCSTR,USRSEL
"RTN","LRAPRES",18,0)
 S LRESCPT=0
"RTN","LRAPRES",19,0)
 D TITLE
"RTN","LRAPRES",20,0)
 I LRQUIT D END Q
"RTN","LRAPRES",21,0)
 D CPTCHK
"RTN","LRAPRES",22,0)
 F  D  Q:LRQUIT
"RTN","LRAPRES",23,0)
 . S LRQUIT=0
"RTN","LRAPRES",24,0)
 . D MENU
"RTN","LRAPRES",25,0)
 . Q:LRQUIT
"RTN","LRAPRES",26,0)
 . S USRSEL=$G(LRSEL)
"RTN","LRAPRES",27,0)
 . D  ; Protect USRSEL var
"RTN","LRAPRES",28,0)
 . . N USRSEL
"RTN","LRAPRES",29,0)
 . . D SECTION
"RTN","LRAPRES",30,0)
 . Q:LRQUIT
"RTN","LRAPRES",31,0)
 . S LREND=0
"RTN","LRAPRES",32,0)
 . I USRSEL="E" S LREND=0 D CLSSCHK^LRAPRES1(DUZ,.LREND)
"RTN","LRAPRES",33,0)
 . Q:LREND
"RTN","LRAPRES",34,0)
 . D ACCYR
"RTN","LRAPRES",35,0)
 . Q:LRQUIT
"RTN","LRAPRES",36,0)
 . D ACCPN
"RTN","LRAPRES",37,0)
 D END
"RTN","LRAPRES",38,0)
 Q
"RTN","LRAPRES",39,0)
 ;
"RTN","LRAPRES",40,0)
 ;
"RTN","LRAPRES",41,0)
ACCPN ; Prompt for accession number or patient name
"RTN","LRAPRES",42,0)
 N USRSEL1
"RTN","LRAPRES",43,0)
 S USRSEL1=$G(USRSEL) ;from MAIN
"RTN","LRAPRES",44,0)
 F  D  Q:LREND
"RTN","LRAPRES",45,0)
 . S (LRQUIT,LREND)=0
"RTN","LRAPRES",46,0)
 . D CPTCHK
"RTN","LRAPRES",47,0)
 . D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPRES",48,0)
 . Q:'LRDATA
"RTN","LRAPRES",49,0)
 . I LRDATA=-1 S LREND=1 Q
"RTN","LRAPRES",50,0)
 . S LRDFN=LRDATA,LRI=LRDATA(1)
"RTN","LRAPRES",51,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPRES",52,0)
 . I USRSEL1="E" D  Q:LRQUIT
"RTN","LRAPRES",53,0)
 . . D RELCHK
"RTN","LRAPRES",54,0)
 . . Q:LRQUIT
"RTN","LRAPRES",55,0)
 . . D SETRL^LRVERA(LRDFN,LRSS,$S('LRAU:LRI,1:0),DUZ(2))
"RTN","LRAPRES",56,0)
 . . D:'LRZ(2) BROWSE
"RTN","LRAPRES",57,0)
 . . D ESIG
"RTN","LRAPRES",58,0)
 . . Q:LRQUIT
"RTN","LRAPRES",59,0)
 . . S LRNTIME=$$NOW^XLFDT
"RTN","LRAPRES",60,0)
 . . I 'LRZ(2) D TIUPREP,STORE
"RTN","LRAPRES",61,0)
 . . Q:LRQUIT
"RTN","LRAPRES",62,0)
 . . D RELEASE
"RTN","LRAPRES",63,0)
 . . Q:LRQUIT
"RTN","LRAPRES",64,0)
 . . D:'LRZ(2) MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,LRAC)
"RTN","LRAPRES",65,0)
 . . D OERR^LR7OB63D
"RTN","LRAPRES",66,0)
 . I USRSEL1="C" D
"RTN","LRAPRES",67,0)
 . . Q:$T(CPT^LRCAPES)=""
"RTN","LRAPRES",68,0)
 . . S LRPRO=DUZ
"RTN","LRAPRES",69,0)
 . . D PROVIDR^LRAPUTL
"RTN","LRAPRES",70,0)
 . . Q:LRQUIT
"RTN","LRAPRES",71,0)
 . . D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPRES",72,0)
 . I USRSEL1="V" D
"RTN","LRAPRES",73,0)
 . . D DEMARR
"RTN","LRAPRES",74,0)
 . . D INIT^LRAPSNMD(LRDFN,LRSS,LRI,LRSF,LRAA,LRAN,LRAD,.LRDEM,1)
"RTN","LRAPRES",75,0)
 Q
"RTN","LRAPRES",76,0)
 ;
"RTN","LRAPRES",77,0)
 ;
"RTN","LRAPRES",78,0)
TITLE ; Title
"RTN","LRAPRES",79,0)
 S LRQUIT=0
"RTN","LRAPRES",80,0)
 D CK^LRAP
"RTN","LRAPRES",81,0)
 I Y=-1 S LRQUIT=1 Q
"RTN","LRAPRES",82,0)
 W @IOF
"RTN","LRAPRES",83,0)
 S LRTEXT="Release/Electronically Sign Pathology Reports"
"RTN","LRAPRES",84,0)
 S LRMSG(1)=$$CJ^XLFSTR(LRTEXT,IOM)
"RTN","LRAPRES",85,0)
 S LRMSG(1,"F")="!!"
"RTN","LRAPRES",86,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPRES",87,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPRES",88,0)
 Q
"RTN","LRAPRES",89,0)
 ;
"RTN","LRAPRES",90,0)
 ;
"RTN","LRAPRES",91,0)
CPTCHK ; Determine if CPT is activated
"RTN","LRAPRES",92,0)
 Q:$T(ES^LRCAPES)=""
"RTN","LRAPRES",93,0)
 S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPRES",94,0)
 Q
"RTN","LRAPRES",95,0)
 ;
"RTN","LRAPRES",96,0)
 ;
"RTN","LRAPRES",97,0)
DEMARR ;
"RTN","LRAPRES",98,0)
 I LRAU D
"RTN","LRAPRES",99,0)
 . S LRPRO=$$GET1^DIQ(63,LRDFN_",",13.5,"I")
"RTN","LRAPRES",100,0)
 . S LRPRO(1)=$$GET1^DIQ(63,LRDFN_",",13.5)
"RTN","LRAPRES",101,0)
 I 'LRAU D
"RTN","LRAPRES",102,0)
 . S LRPRO=$$GET1^DIQ(LRSF,LRI_","_LRDFN_",",.07,"I")
"RTN","LRAPRES",103,0)
 . S LRPRO(1)=$$GET1^DIQ(LRSF,LRI_","_LRDFN_",",.07)
"RTN","LRAPRES",104,0)
 S LRDEM("SEX")=SEX,LRDEM("DOB")=DOB
"RTN","LRAPRES",105,0)
 S LRDEM("AGE")=AGE
"RTN","LRAPRES",106,0)
 S LRDEM("SEC")=LRAA(1),LRDEM("PNM")=PNM
"RTN","LRAPRES",107,0)
 S LRDEM("SSN")=SSN,LRDEM("PRO")=LRPRO(1)
"RTN","LRAPRES",108,0)
 I LRAU D
"RTN","LRAPRES",109,0)
 . S LRDEM("DTH")=$P(VADM(6),"^",2)
"RTN","LRAPRES",110,0)
 . S LRDEM("AUDT")=$$GET1^DIQ(63,LRDFN_",",11)
"RTN","LRAPRES",111,0)
 . S LRDEM("AUTYP")=$$GET1^DIQ(63,LRDFN_",",13.7)
"RTN","LRAPRES",112,0)
 Q
"RTN","LRAPRES",113,0)
 ;
"RTN","LRAPRES",114,0)
 ;
"RTN","LRAPRES",115,0)
MENU ;
"RTN","LRAPRES",116,0)
 N DIR,X,Y
"RTN","LRAPRES",117,0)
 S DIR(0)="SO^"
"RTN","LRAPRES",118,0)
 S:LRESCPT DIR(0)=DIR(0)_"C:CPT Coding;"
"RTN","LRAPRES",119,0)
 S DIR(0)=DIR(0)_"E:Electronically Sign Reports;V:View SNOMED Codes"
"RTN","LRAPRES",120,0)
 S DIR("A")="Selection"
"RTN","LRAPRES",121,0)
 D ^DIR
"RTN","LRAPRES",122,0)
 I $D(DIRUT) S LRQUIT=1 Q
"RTN","LRAPRES",123,0)
 S LRSEL=Y
"RTN","LRAPRES",124,0)
 Q
"RTN","LRAPRES",125,0)
 ;
"RTN","LRAPRES",126,0)
 ;
"RTN","LRAPRES",127,0)
SECTION ; Choose Anatomic Pathology section (AU,SP,CY,EM)
"RTN","LRAPRES",128,0)
 N LRMSG
"RTN","LRAPRES",129,0)
 W !
"RTN","LRAPRES",130,0)
 D ^LRAP
"RTN","LRAPRES",131,0)
 I '$D(Y)!('$D(LRSS)) S LRQUIT=1 Q
"RTN","LRAPRES",132,0)
 S:LRO(68)="EM" LRO(68)="ELECTRON MICROSCOPY"
"RTN","LRAPRES",133,0)
 S LRAU=0            ; LRAU = 0 - Not Autopsy
"RTN","LRAPRES",134,0)
 S:LRSS="AU" LRAU=1  ;      = 1 - Autopsy
"RTN","LRAPRES",135,0)
 I LRCAPA D  Q:LRQUIT
"RTN","LRAPRES",136,0)
 . S X=""
"RTN","LRAPRES",137,0)
 . S:LRSS="CY" X="CYTOLOGY REPORTING"
"RTN","LRAPRES",138,0)
 . S:LRSS="SP" X="SURGICAL PATH REPORTING"
"RTN","LRAPRES",139,0)
 . D:X'="" X^LRUWK
"RTN","LRAPRES",140,0)
 . S:'$D(X) LRQUIT=1
"RTN","LRAPRES",141,0)
 ;
"RTN","LRAPRES",142,0)
 S LRSOP="Z"
"RTN","LRAPRES",143,0)
 S LRMSG(1)=LRO(68)_" ("_LRABV_")",LRMSG(1,"F")="!?20"
"RTN","LRAPRES",144,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPRES",145,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPRES",146,0)
 Q
"RTN","LRAPRES",147,0)
 ;
"RTN","LRAPRES",148,0)
 ;
"RTN","LRAPRES",149,0)
ACCYR ; Determine Accession Year
"RTN","LRAPRES",150,0)
 D ACCYR^LRAPUTL(.LRAD1,LRH(0),LRAA,LRO(68))
"RTN","LRAPRES",151,0)
 I LRAD1=-1 S LRQUIT=1 Q
"RTN","LRAPRES",152,0)
 I LRAD1 S LRAD=$P(LRAD1,U),LRH(0)=$P(LRAD1,U,2)
"RTN","LRAPRES",153,0)
 Q
"RTN","LRAPRES",154,0)
 ;
"RTN","LRAPRES",155,0)
 ;
"RTN","LRAPRES",156,0)
RELCHK ; Perform series of checks
"RTN","LRAPRES",157,0)
 N LRPAT,LRSRLST,LRSRREL
"RTN","LRAPRES",158,0)
 S LRQUIT=0
"RTN","LRAPRES",159,0)
 I 'LRAU D  Q:LRQUIT
"RTN","LRAPRES",160,0)
 . S LRPAT=+$$GET1^DIQ(LRSF,LRIENS,.02,"I")
"RTN","LRAPRES",161,0)
 . S LRZ=$$GET1^DIQ(LRSF,LRIENS,.03,"I")
"RTN","LRAPRES",162,0)
 . S LRZ(1)=$$GET1^DIQ(LRSF,LRIENS,.13,"I")
"RTN","LRAPRES",163,0)
 . S LRZ(1.1)=$$GET1^DIQ(LRSF,LRIENS,.13)
"RTN","LRAPRES",164,0)
 . S LRZ(2)=$$GET1^DIQ(LRSF,LRIENS,.11,"I")
"RTN","LRAPRES",165,0)
 . I 'LRZ,'LRZ(2) D
"RTN","LRAPRES",166,0)
 . . W $C(7)
"RTN","LRAPRES",167,0)
 . . S LRMSG="No date report completed.  Cannot release."
"RTN","LRAPRES",168,0)
 . . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",169,0)
 . . S LRQUIT=1
"RTN","LRAPRES",170,0)
 ;
"RTN","LRAPRES",171,0)
 I LRAU D  Q:LRQUIT
"RTN","LRAPRES",172,0)
 . I $G(^LR(LRDFN,"AU"))="" D  Q
"RTN","LRAPRES",173,0)
 . . S LRMSG="No information found for this accession in the "
"RTN","LRAPRES",174,0)
 . . S LRMSG=LRMSG_"LAB DATA file (#63)."
"RTN","LRAPRES",175,0)
 . . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",176,0)
 . . S LRQUIT=1
"RTN","LRAPRES",177,0)
 . S LRPAT=+$$GET1^DIQ(63,LRDFN_",",13.6,"I")
"RTN","LRAPRES",178,0)
 . S LRZ=$$GET1^DIQ(63,LRDFN_",",13,"I")
"RTN","LRAPRES",179,0)
 . S LRZ(1)=$$GET1^DIQ(63,LRDFN_",",14.8,"I")
"RTN","LRAPRES",180,0)
 . S LRZ(1.1)=$$GET1^DIQ(63,LRDFN_",",14.8)
"RTN","LRAPRES",181,0)
 . S LRZ(2)=$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPRES",182,0)
 . ; KLL-CHECK FOR PROVISIONAL DATE OR DATE REPORT COMPLETED
"RTN","LRAPRES",183,0)
 . S LRZ(3)=$$GET1^DIQ(63,LRDFN_",",14.9,"I")
"RTN","LRAPRES",184,0)
 . I 'LRZ,'LRZ(3) D
"RTN","LRAPRES",185,0)
 . . W $C(7)
"RTN","LRAPRES",186,0)
 . . S LRMSG="Provisional or date report completed required.  Cannot release."
"RTN","LRAPRES",187,0)
 . . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",188,0)
 . . S LRQUIT=1
"RTN","LRAPRES",189,0)
 I 'LRPAT,'LRZ(2) D
"RTN","LRAPRES",190,0)
 . W $C(7)
"RTN","LRAPRES",191,0)
 . S LRMSG="Pathologist or Cytotechnologist entry missing. Cannot release."
"RTN","LRAPRES",192,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",193,0)
 . S LRQUIT=1
"RTN","LRAPRES",194,0)
 D:'LRZ(2) SUPCHK^LRAPR1
"RTN","LRAPRES",195,0)
 Q:LRQUIT
"RTN","LRAPRES",196,0)
 I LRZ(2) D  Q:LRQUIT
"RTN","LRAPRES",197,0)
 . W $C(7)
"RTN","LRAPRES",198,0)
 . S LRMSG="Report " S:LRZ(2)=1 LRMSG=LRMSG_"has already been "
"RTN","LRAPRES",199,0)
 . S LRMSG=LRMSG_"released "
"RTN","LRAPRES",200,0)
 . S Y=LRZ(2) D DD^%DT S:LRZ(2)>1 LRMSG=LRMSG_Y
"RTN","LRAPRES",201,0)
 . S:LRZ(1)'="" LRMSG=LRMSG_" by "_LRZ(1.1)
"RTN","LRAPRES",202,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",203,0)
 . S:'LRAU LRQUIT=1
"RTN","LRAPRES",204,0)
 ; KLL-DON'T ALLOW UNRELEASE IF REPT COMPLETED DATE EXISTS FOR AU
"RTN","LRAPRES",205,0)
 I LRZ(2),LRZ S LRQUIT=1
"RTN","LRAPRES",206,0)
 S LRMSG="" D EN^DDIOL(LRMSG,"","!") K LRMSG
"RTN","LRAPRES",207,0)
 ; Don't allow unrelease if supp report not released for AU
"RTN","LRAPRES",208,0)
 I LRZ(2),'LRZ D
"RTN","LRAPRES",209,0)
 . S LRSRLST=$P($G(^LR(LRDFN,84,0)),"^",4)
"RTN","LRAPRES",210,0)
 . Q:'LRSRLST
"RTN","LRAPRES",211,0)
 . S LRSRREL=$P($G(^LR(LRDFN,84,LRSRLST,0)),"^",2)
"RTN","LRAPRES",212,0)
 . I 'LRSRREL D
"RTN","LRAPRES",213,0)
 . . N LRMSG
"RTN","LRAPRES",214,0)
 . . S LRMSG=$C(7)_"Supplementary report has not been released. Cannot use this option."
"RTN","LRAPRES",215,0)
 . . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",216,0)
 . . S LRQUIT=1
"RTN","LRAPRES",217,0)
 Q:LRQUIT
"RTN","LRAPRES",218,0)
 I LRZ(2),'LRZ D
"RTN","LRAPRES",219,0)
 . S DIR(0)="YA",DIR("B")="NO"
"RTN","LRAPRES",220,0)
 . S DIR("A")="Unrelease report? "
"RTN","LRAPRES",221,0)
 . D ^DIR
"RTN","LRAPRES",222,0)
 . I 'Y S LRQUIT=1
"RTN","LRAPRES",223,0)
 Q
"RTN","LRAPRES",224,0)
 ;
"RTN","LRAPRES",225,0)
 ;
"RTN","LRAPRES",226,0)
BROWSE ; Display the report in the browser
"RTN","LRAPRES",227,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPRES",228,0)
 ;
"RTN","LRAPRES",229,0)
 ; Check if user's terminal supports browser functionality
"RTN","LRAPRES",230,0)
 I '$$TEST^DDBRT D  Q
"RTN","LRAPRES",231,0)
 . S DIR("A",1)="This terminal does not support the needed functionality to use the Browser!"
"RTN","LRAPRES",232,0)
 . S DIR("A",2)="Unable to display report on terminal."
"RTN","LRAPRES",233,0)
 . S DIR("A")="Press any key to continue."
"RTN","LRAPRES",234,0)
 . S DIR(0)="EA" D ^DIR
"RTN","LRAPRES",235,0)
 ;
"RTN","LRAPRES",236,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","LRAPRES",237,0)
 S DIR("A")="View the report before signing? "
"RTN","LRAPRES",238,0)
 D ^DIR
"RTN","LRAPRES",239,0)
 I Y<1 Q
"RTN","LRAPRES",240,0)
 ;
"RTN","LRAPRES",241,0)
 K ^TMP("LRAPBR",$J)
"RTN","LRAPRES",242,0)
 S LRMSG=$$CJ^XLFSTR("*** Report is being processed.  One moment please. ***",IOM)
"RTN","LRAPRES",243,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",244,0)
 D INIT^LRAPBR(LRAA,LRSS,LRI,LRDFN,LRO(68),LRAU,0)
"RTN","LRAPRES",245,0)
 Q
"RTN","LRAPRES",246,0)
 ;
"RTN","LRAPRES",247,0)
 ;
"RTN","LRAPRES",248,0)
ESIG ; Prompt for electronic signature
"RTN","LRAPRES",249,0)
 S LRQUIT=0
"RTN","LRAPRES",250,0)
 D SIG^XUSESIG
"RTN","LRAPRES",251,0)
 I X1="" D  Q
"RTN","LRAPRES",252,0)
 . W "  SIGNATURE NOT VERIFIED"
"RTN","LRAPRES",253,0)
 . S LRQUIT=1
"RTN","LRAPRES",254,0)
 Q
"RTN","LRAPRES",255,0)
 ;
"RTN","LRAPRES",256,0)
 ;
"RTN","LRAPRES",257,0)
TIUPREP ;
"RTN","LRAPRES",258,0)
 K ^TMP("TIUP",$J)
"RTN","LRAPRES",259,0)
 S LRMSG="*** Report is being processed"
"RTN","LRAPRES",260,0)
 ; Exclude patient files 67, 67.1, 67.2, 67.3, 62.3 from TIU storage
"RTN","LRAPRES",261,0)
 ;
"RTN","LRAPRES",262,0)
 I LRDPF'=62.3,LRDPF'[67 S LRMSG=LRMSG_" for storage in TIU"
"RTN","LRAPRES",263,0)
 S LRMSG=LRMSG_".  One moment please. ***"
"RTN","LRAPRES",264,0)
 S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",265,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",266,0)
 ;
"RTN","LRAPRES",267,0)
 D INIT^LRAPBR(LRAA,LRSS,LRI,LRDFN,LRO(68),LRAU,1,LRNTIME)
"RTN","LRAPRES",268,0)
 Q
"RTN","LRAPRES",269,0)
 ;
"RTN","LRAPRES",270,0)
 ;
"RTN","LRAPRES",271,0)
RELEASE ; Release the report
"RTN","LRAPRES",272,0)
 N LRMSG
"RTN","LRAPRES",273,0)
 ;
"RTN","LRAPRES",274,0)
 ; Store REPORT RELEASE DATE/TIME and RELEASED BY
"RTN","LRAPRES",275,0)
 I 'LRAU D
"RTN","LRAPRES",276,0)
 . S LRRC=$$GET1^DIQ(LRSF,LRIENS,.1,"I")
"RTN","LRAPRES",277,0)
 . I LRCAPA D C^LRAPSWK
"RTN","LRAPRES",278,0)
 . S DR=".11////^S X=LRNTIME;.13////^S X=DUZ"
"RTN","LRAPRES",279,0)
 . S DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPRES",280,0)
 . S LRA=^LR(LRDFN,LRSS,LRI,0) ; Set LRA for xref call to LRWOMEN
"RTN","LRAPRES",281,0)
 ;
"RTN","LRAPRES",282,0)
 ; Store AUTOPSY RELEASE DATE/TIME and AUTOPSY RELEASED BY
"RTN","LRAPRES",283,0)
 I LRAU D
"RTN","LRAPRES",284,0)
 . S DR="14.7////^S X=$S(LRZ(2):""@"",1:LRNTIME);"
"RTN","LRAPRES",285,0)
 . S DR=DR_"14.8////^S X=$S(LRZ(2):""@"",1:DUZ);"
"RTN","LRAPRES",286,0)
 . S DIE="^LR(",DA=LRDFN
"RTN","LRAPRES",287,0)
 ;
"RTN","LRAPRES",288,0)
 D CK^LRU
"RTN","LRAPRES",289,0)
 Q:$D(LR("CK"))
"RTN","LRAPRES",290,0)
 D ^DIE
"RTN","LRAPRES",291,0)
 ;
"RTN","LRAPRES",292,0)
 ; Update accession with completion status
"RTN","LRAPRES",293,0)
 D ACCCOMP
"RTN","LRAPRES",294,0)
 ;
"RTN","LRAPRES",295,0)
 ; Update clinical reminders
"RTN","LRAPRES",296,0)
 D UPDATE^LRPXRM(LRDFN,$G(LRSS,"AU"),$G(LRI))
"RTN","LRAPRES",297,0)
 ;
"RTN","LRAPRES",298,0)
 D FRE^LRU
"RTN","LRAPRES",299,0)
 S LRMSG="*** Report "
"RTN","LRAPRES",300,0)
 I LRZ(2),LRAU S LRMSG=LRMSG_"un"
"RTN","LRAPRES",301,0)
 S LRMSG=LRMSG_"released. ***"
"RTN","LRAPRES",302,0)
 D EN^DDIOL($$CJ^XLFSTR(LRMSG,IOM),"","!!")
"RTN","LRAPRES",303,0)
 ;
"RTN","LRAPRES",304,0)
 ; Record workload
"RTN","LRAPRES",305,0)
 I "CYSP"[LRSS,LRCAPA D WKLD
"RTN","LRAPRES",306,0)
 ;
"RTN","LRAPRES",307,0)
 ; Check if supported subscript, released and LEDI accession and send results back to submitting facility.
"RTN","LRAPRES",308,0)
 I LRSS?1(1"SP",1"CY",1"EM"),$$GET1^DIQ(LRSF,LRIENS,.11,"I") D LEDI^LRVR0
"RTN","LRAPRES",309,0)
 ;
"RTN","LRAPRES",310,0)
 ;I LRCAPA,"SPCYEM"[LRSS,LRD(1)'="","MBA"[LRD(1) D C1^LRAPSWK
"RTN","LRAPRES",311,0)
 Q
"RTN","LRAPRES",312,0)
 ;
"RTN","LRAPRES",313,0)
 ;
"RTN","LRAPRES",314,0)
STORE ; Store report in TIU
"RTN","LRAPRES",315,0)
 N LRTITLE,LRIENS,LRFILE,LRFDA,LRTIUPTR,LRMSG
"RTN","LRAPRES",316,0)
 I LRDPF=62.3!(LRDPF[67) D REFRRL^LRAPUTL Q
"RTN","LRAPRES",317,0)
 S:LRSS="SP" LRO68="SURGICAL PATHOLOGY"
"RTN","LRAPRES",318,0)
 S:LRSS="CY" LRO68="CYTOPATHOLOGY"
"RTN","LRAPRES",319,0)
 S:LRSS="EM" LRO68="ELECTRON MICROSCOPY"
"RTN","LRAPRES",320,0)
 S:LRSS="AU" LRO68="AUTOPSY"
"RTN","LRAPRES",321,0)
 D SETPARM^TIULE
"RTN","LRAPRES",322,0)
 S LRTITLE=$$DDEFIEN^TIUFLF7("LR "_LRO68_" REPORT","TL")
"RTN","LRAPRES",323,0)
 I 'LRTITLE D
"RTN","LRAPRES",324,0)
 . W $C(7)
"RTN","LRAPRES",325,0)
 . S LRMSG="No TIU title for this lab report.  Cannot release."
"RTN","LRAPRES",326,0)
 . D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",327,0)
 . S LRQUIT=1
"RTN","LRAPRES",328,0)
 Q:LRQUIT
"RTN","LRAPRES",329,0)
 ; Set parameter to 1 for e-sig verification in TIU; if e-sig fails,
"RTN","LRAPRES",330,0)
 ;      TIU will abort creation of doc in ^TIU(8925, and return
"RTN","LRAPRES",331,0)
 ;      an error, tiufn=-1,-1.
"RTN","LRAPRES",332,0)
 D NEW^TIUPNAPI(.LRTIUPTR,DFN,DUZ,LRNTIME,LRTITLE,,,,DUZ,,1)
"RTN","LRAPRES",333,0)
 I LRTIUPTR="-1^-1" D  Q
"RTN","LRAPRES",334,0)
 .S LRMSG(1)="     *** Signature in TIU failed. ***"
"RTN","LRAPRES",335,0)
 .S LRMSG(2,"F")="!!!"
"RTN","LRAPRES",336,0)
 .S LRMSG(2)="Possible causes:"
"RTN","LRAPRES",337,0)
 .S LRMSG(3,"F")="!!"
"RTN","LRAPRES",338,0)
 .S LRMSG(3)="1. Report contains 3 sequential characters matching those defined"
"RTN","LRAPRES",339,0)
 .S LRMSG(4)="in the BLANK CHARACTER STRING field (#1.06), TIU PARAMETERS file (#8925.99)"
"RTN","LRAPRES",340,0)
 .S LRMSG(5)="which are "_$P(TIUPRM1,U,6)_"."
"RTN","LRAPRES",341,0)
 .S LRMSG(6,"F")="!!"
"RTN","LRAPRES",342,0)
 .S LRMSG(6)="To correct this situation use a data entry option to remove"
"RTN","LRAPRES",343,0)
 .S LRMSG(7)="these characters from this report."
"RTN","LRAPRES",344,0)
 .S LRMSG(8,"F")="!!"
"RTN","LRAPRES",345,0)
 .S LRMSG(8)="2.  There is some other TIU document setup problem."
"RTN","LRAPRES",346,0)
 .S LRMSG(9,"F")="!!"
"RTN","LRAPRES",347,0)
 .S LRMSG(9)="Report this situation to the Laboratory ADP Coordinator."
"RTN","LRAPRES",348,0)
 .S LRMSG(10)="     *** Report storage in TIU failed. ***"
"RTN","LRAPRES",349,0)
 .S LRMSG(10,"F")="!!!"
"RTN","LRAPRES",350,0)
 .D EN^DDIOL(.LRMSG,"","!!")
"RTN","LRAPRES",351,0)
 .S LRQUIT=1
"RTN","LRAPRES",352,0)
 I +LRTIUPTR=-1 D  Q
"RTN","LRAPRES",353,0)
 . S LRMSG="*** Report storage in TIU failed. ***"
"RTN","LRAPRES",354,0)
 . S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",355,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",356,0)
 . S LRQUIT=1
"RTN","LRAPRES",357,0)
 S LRMSG="*** Report storage in TIU is complete. ***"
"RTN","LRAPRES",358,0)
 S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",359,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",360,0)
 ;CKA-Calculate checksum of TIU report text
"RTN","LRAPRES",361,0)
 D EXTRACT^TIULQ(+LRTIUPTR,"LRTIU",,,,1,,1)
"RTN","LRAPRES",362,0)
 S $P(LRTIU(+LRTIUPTR,"TEXT",0),U,5)=$P(LRTIU(+LRTIUPTR,1201,"I"),".")
"RTN","LRAPRES",363,0)
 S LRCHKSUM=$$CHKSUM^XUSESIG1("LRTIU("_+LRTIUPTR_",""TEXT"")")
"RTN","LRAPRES",364,0)
 K LRTIU
"RTN","LRAPRES",365,0)
 ;
"RTN","LRAPRES",366,0)
 ; Store pointer & checksum information in the LAB DATA (#63) file
"RTN","LRAPRES",367,0)
 S LRIENS="+1,"_$S('LRAU:LRI_",",1:"")_LRDFN_","
"RTN","LRAPRES",368,0)
 S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPRES",369,0)
 S:LRFILE="" LRFILE=$S(LRSS="AU":63.101,1:"")
"RTN","LRAPRES",370,0)
 S LRFDA(1,LRFILE,LRIENS,.01)=LRNTIME
"RTN","LRAPRES",371,0)
 S LRFDA(1,LRFILE,LRIENS,1)=+LRTIUPTR
"RTN","LRAPRES",372,0)
 S LRFDA(1,LRFILE,LRIENS,2)=LRCHKSUM
"RTN","LRAPRES",373,0)
 D UPDATE^DIE("","LRFDA(1)")
"RTN","LRAPRES",374,0)
 D RETRACT^LRAPRES1(LRDFN,LRSS,LRI,+LRTIUPTR)
"RTN","LRAPRES",375,0)
 Q
"RTN","LRAPRES",376,0)
 ;
"RTN","LRAPRES",377,0)
 ;
"RTN","LRAPRES",378,0)
WKLD ; Capture workload
"RTN","LRAPRES",379,0)
 N ERR,FILE,FILE1,IENS,IENS1,LRIEN,LRFDA,LROUT,RNUM
"RTN","LRAPRES",380,0)
 S LRK=$P(^LR(LRDFN,LRSS,LRI,0),"^",11) Q:'LRK
"RTN","LRAPRES",381,0)
 Q:$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0))
"RTN","LRAPRES",382,0)
 S RNUM=1,IENS="+"_RNUM_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPRES",383,0)
 S FILE=68.04,LRIEN(1)=LRT
"RTN","LRAPRES",384,0)
 S LRFDA(1,FILE,IENS,.01)=LRT
"RTN","LRAPRES",385,0)
 S LRFDA(1,FILE,IENS,1)=50
"RTN","LRAPRES",386,0)
 S LRFDA(1,FILE,IENS,3)=DUZ
"RTN","LRAPRES",387,0)
 S LRFDA(1,FILE,IENS,4)=LRK
"RTN","LRAPRES",388,0)
 S C=0,FILE1=68.14
"RTN","LRAPRES",389,0)
 F  S C=$O(LRT(C)) Q:'C  D
"RTN","LRAPRES",390,0)
 . S RNUM=RNUM+1,LRIEN(RNUM)=C
"RTN","LRAPRES",391,0)
 . S IENS1="+"_RNUM_","_IENS
"RTN","LRAPRES",392,0)
 . S LRFDA(1,FILE1,IENS1,.01)=C
"RTN","LRAPRES",393,0)
 . S LRFDA(1,FILE1,IENS1,.02)=1
"RTN","LRAPRES",394,0)
 . S LRFDA(1,FILE1,IENS1,.03)=0
"RTN","LRAPRES",395,0)
 . S LRFDA(1,FILE1,IENS1,.04)=0
"RTN","LRAPRES",396,0)
 . S LRFDA(1,FILE1,IENS1,1)=LRK
"RTN","LRAPRES",397,0)
 . S LRFDA(1,FILE1,IENS1,2)=DUZ
"RTN","LRAPRES",398,0)
 . S LRFDA(1,FILE1,IENS1,3)=DUZ(2)
"RTN","LRAPRES",399,0)
 . S LRFDA(1,FILE1,IENS1,4)=LRAA
"RTN","LRAPRES",400,0)
 . S LRFDA(1,FILE1,IENS1,5)=LRAA
"RTN","LRAPRES",401,0)
 . S LRFDA(1,FILE1,IENS1,6)=LRAA
"RTN","LRAPRES",402,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LROUT")
"RTN","LRAPRES",403,0)
 Q
"RTN","LRAPRES",404,0)
 ;
"RTN","LRAPRES",405,0)
 ;
"RTN","LRAPRES",406,0)
ACCCOMP ; Complete tests on accession
"RTN","LRAPRES",407,0)
 ;
"RTN","LRAPRES",408,0)
 N LRERR,LRFDA,LRFILE,LRIENS,LRK,LRORDT,LRSN,LRSRDT,LRT,LRX
"RTN","LRAPRES",409,0)
 ;
"RTN","LRAPRES",410,0)
 ;ZEXCEPT: LRAA,LRAD,LRAN,LRDFN,LRDUZ,LRI,LRSS
"RTN","LRAPRES",411,0)
 ;
"RTN","LRAPRES",412,0)
 ; Retrieve d/t released
"RTN","LRAPRES",413,0)
 I LRSS="AU" S LRK=$P(^LR(LRDFN,LRSS),"^",15)
"RTN","LRAPRES",414,0)
 E  S LRK=$P(^LR(LRDFN,LRSS,LRI,0),"^",11)
"RTN","LRAPRES",415,0)
 I LRK="" Q
"RTN","LRAPRES",416,0)
 ;
"RTN","LRAPRES",417,0)
 ; Lab Arrival d/t
"RTN","LRAPRES",418,0)
 I LRSS="AU" S LRSRDT=$P(^LR(LRDFN,LRSS),"^",1)
"RTN","LRAPRES",419,0)
 E  S LRSRDT=$P(^LR(LRDFN,LRSS,LRI,0),"^",10)
"RTN","LRAPRES",420,0)
 ;
"RTN","LRAPRES",421,0)
 ; Don't update workload tests (urgency>49)
"RTN","LRAPRES",422,0)
 S LRT=0,LRFILE=68.04
"RTN","LRAPRES",423,0)
 F  S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT)) Q:LRT<.5  D
"RTN","LRAPRES",424,0)
 . I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0),"^",2)>49 Q
"RTN","LRAPRES",425,0)
 . K LRIENS,LRFDA,LRERR(1)
"RTN","LRAPRES",426,0)
 . S LRIENS=LRT_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPRES",427,0)
 . S LRFDA(1,LRFILE,LRIENS,3)=$S($G(LRDUZ):LRDUZ,$G(DUZ):DUZ,1:"")
"RTN","LRAPRES",428,0)
 . S LRFDA(1,LRFILE,LRIENS,4)=LRK
"RTN","LRAPRES",429,0)
 . D UPDATE^DIE("","LRFDA(1)","","LRERR(1)")
"RTN","LRAPRES",430,0)
 ;
"RTN","LRAPRES",431,0)
 ; Update order with release date/time if available.
"RTN","LRAPRES",432,0)
 ;  - check for lab arrival time and update if missing
"RTN","LRAPRES",433,0)
 S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))
"RTN","LRAPRES",434,0)
 S LRORDT=$P(LRX,"^",4),LRSN=$P(LRX,"^",5)
"RTN","LRAPRES",435,0)
 I LRORDT>0,LRSN>0,$D(^LRO(69,LRORDT,1,LRSN,0)) D
"RTN","LRAPRES",436,0)
 . K LRFILE,LRIENS
"RTN","LRAPRES",437,0)
 . S LRIENS=LRSN_","_LRORDT_",",LRFILE=69.01
"RTN","LRAPRES",438,0)
 . I $P($G(^LRO(69,LRORDT,1,LRSN,3)),"^")="",LRSRDT S LRFDA(2,LRFILE,LRIENS,20)=LRSRDT
"RTN","LRAPRES",439,0)
 . S LRFDA(2,LRFILE,LRIENS,21)=LRK
"RTN","LRAPRES",440,0)
 . D UPDATE^DIE("","LRFDA(2)","","LRERR(2)")
"RTN","LRAPRES",441,0)
 ;
"RTN","LRAPRES",442,0)
 Q
"RTN","LRAPRES",443,0)
 ;
"RTN","LRAPRES",444,0)
 ;
"RTN","LRAPRES",445,0)
END ; Clean-up variables and quit
"RTN","LRAPRES",446,0)
 K LRAD1,LRDATA,LRAU,LRRDTE,LRTEXT,LRSEL,LRFILE,LRIENS,LRIENS1
"RTN","LRAPRES",447,0)
 K LRFDA,ERR,IENS,LROUT,LRIEN,LRTMP
"RTN","LRAPRES",448,0)
 K ^TMP("LRAPBR",$J),^TMP("TIUP",$J)
"RTN","LRAPRES",449,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPRES",450,0)
 D V^LRU
"RTN","LRAPRES",451,0)
 Q
"RTN","LRAPRES1")
0^131^B66194684
"RTN","LRAPRES1",1,0)
LRAPRES1 ;DALOI/STAFF - AP ESIG RELEASE REPORT/ALERT ;02/08/12  15:31
"RTN","LRAPRES1",2,0)
 ;;5.2;LAB SERVICE;**259,336,369,365,397,413,350**;Sep 27, 1994;Build 230
"RTN","LRAPRES1",3,0)
 ;
"RTN","LRAPRES1",4,0)
 ; Reference to FILE^TIUSRVP supported by ICR #3540
"RTN","LRAPRES1",5,0)
 ; Reference to ^TIULQ supported by ICR #2693
"RTN","LRAPRES1",6,0)
 ; Reference to LAB^ORB3LAB supported by ICR #4287
"RTN","LRAPRES1",7,0)
 ;
"RTN","LRAPRES1",8,0)
MAIN(LRDFN,LRSS,LRI,LRSF,LRP,LRAC) ;Main subroutine
"RTN","LRAPRES1",9,0)
 Q:'$D(LRDFN)!('$D(LRSS))!('$D(LRP))!('$D(LRAC))
"RTN","LRAPRES1",10,0)
 ;
"RTN","LRAPRES1",11,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRDOCS,LRMSG,LRC,LRNUM,LRADL,LRMORE,LRQUIT,LRXQA,X,Y,DIC,XQA,XQAMSG
"RTN","LRAPRES1",12,0)
 ;
"RTN","LRAPRES1",13,0)
 S LRQUIT=0
"RTN","LRAPRES1",14,0)
 ;
"RTN","LRAPRES1",15,0)
 ; CPRS alerts only sent for "patients" related to PATIENT file (#2)
"RTN","LRAPRES1",16,0)
 I $P($G(^LR(LRDFN,0)),"^",2)'=2 Q
"RTN","LRAPRES1",17,0)
 ;
"RTN","LRAPRES1",18,0)
 D DOCS,MORE
"RTN","LRAPRES1",19,0)
 I LRMORE D LOOKUP
"RTN","LRAPRES1",20,0)
 D ALERT
"RTN","LRAPRES1",21,0)
 Q
"RTN","LRAPRES1",22,0)
 ;
"RTN","LRAPRES1",23,0)
 ;
"RTN","LRAPRES1",24,0)
DOCS ; Get ordering provider and PCP/attending to send alert
"RTN","LRAPRES1",25,0)
 N LRNUM,LRMSG
"RTN","LRAPRES1",26,0)
 S:$G(LRSF)="" LRSF=63
"RTN","LRAPRES1",27,0)
 D GETDOCS^LRAPUTL(.LRDOCS,LRDFN,LRSS,$G(LRI),LRSF)
"RTN","LRAPRES1",28,0)
 S (LRNUM,LRQUIT)=1,LRC=0
"RTN","LRAPRES1",29,0)
 F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  D
"RTN","LRAPRES1",30,0)
 . I $D(LRXQA(+LRDOCS(LRC))) S LRXQA(+LRDOCS(LRC))=LRXQA(+LRDOCS(LRC))_"/"_$P(LRDOCS(LRC),"^",3) Q
"RTN","LRAPRES1",31,0)
 . S LRXQA(+LRDOCS(LRC))=$P(LRDOCS(LRC),"^",3),LRQUIT=0
"RTN","LRAPRES1",32,0)
 ;
"RTN","LRAPRES1",33,0)
 I 'LRQUIT D
"RTN","LRAPRES1",34,0)
 . S LRC=0,LRMSG(LRNUM)="Mandatory Alert will be sent to: ",LRMSG(LRNUM,"F")="!!"
"RTN","LRAPRES1",35,0)
 . F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  D
"RTN","LRAPRES1",36,0)
 . . S LRNUM=LRNUM+1,LRMSG(LRNUM)=$P(LRDOCS(LRC),"^",2)_"  ["_$P(LRDOCS(LRC),"^",3)_"]"
"RTN","LRAPRES1",37,0)
 . . S LRMSG(LRNUM,"F")=$S(LRNUM>2:"!",1:"")_"?33"
"RTN","LRAPRES1",38,0)
 I LRQUIT S LRMSG(LRNUM)="No Ordering Provider or PCP selected for alert",LRMSG(LRNUM,"F")="!!",LRQUIT=0
"RTN","LRAPRES1",39,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",40,0)
 Q
"RTN","LRAPRES1",41,0)
 ;
"RTN","LRAPRES1",42,0)
 ;
"RTN","LRAPRES1",43,0)
MORE ; Add names or mail groups to the lookup list?
"RTN","LRAPRES1",44,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPRES1",45,0)
 W !
"RTN","LRAPRES1",46,0)
 S LRMORE=1
"RTN","LRAPRES1",47,0)
 S DIR(0)="Y"
"RTN","LRAPRES1",48,0)
 S DIR("A")="Send the alert to additional recipients and/or mail groups"
"RTN","LRAPRES1",49,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LRAPRES1 AP ALERT",1,"Q")
"RTN","LRAPRES1",50,0)
 S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LRAPRES1",51,0)
 S DIR("?")="^D AHELP^LRAPRES1"
"RTN","LRAPRES1",52,0)
 D ^DIR
"RTN","LRAPRES1",53,0)
 I Y=0 S LRMORE=0 Q
"RTN","LRAPRES1",54,0)
 I $D(DUOUT)!($D(DTOUT)) S LRQUIT=1
"RTN","LRAPRES1",55,0)
 Q
"RTN","LRAPRES1",56,0)
 ;
"RTN","LRAPRES1",57,0)
 ;
"RTN","LRAPRES1",58,0)
LOOKUP ; Add additional names or mail groups to alert list.
"RTN","LRAPRES1",59,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,LRADL,LRDELETE,X,Y
"RTN","LRAPRES1",60,0)
 S LRQUIT=0
"RTN","LRAPRES1",61,0)
 F  D  Q:LRQUIT
"RTN","LRAPRES1",62,0)
 . W !
"RTN","LRAPRES1",63,0)
 . K DIR
"RTN","LRAPRES1",64,0)
 . S LRDELETE=0
"RTN","LRAPRES1",65,0)
 . S DIR(0)="FO^3:30^I X["".""&(X'?1""G."".E) K X"
"RTN","LRAPRES1",66,0)
 . S DIR("A")="Enter name or mail group"
"RTN","LRAPRES1",67,0)
 . S DIR("?",1)="Prefix selection with '-' to delete a recipient"
"RTN","LRAPRES1",68,0)
 . S DIR("?",2)="Enter lastname,firstname OR G.mailgroup OR ^ to exit"
"RTN","LRAPRES1",69,0)
 . S DIR("?")="Enter '??' for additional help and listing of currently selected recipients."
"RTN","LRAPRES1",70,0)
 . S DIR("??")="^D AHELP2^LRAPRES1"
"RTN","LRAPRES1",71,0)
 . S DIR("PRE")="I '$D(DTOUT),$E(X)=""-"" S X=$E(X,2,9999),LRDELETE=1"
"RTN","LRAPRES1",72,0)
 . D ^DIR
"RTN","LRAPRES1",73,0)
 . I $D(DIRUT) S LRQUIT=1 Q
"RTN","LRAPRES1",74,0)
 . S LRADL="",Y=$$UP^XLFSTR(Y)
"RTN","LRAPRES1",75,0)
 . I Y["." S LRADL=$P(Y,"."),X=$P(Y,".",2)
"RTN","LRAPRES1",76,0)
 . K DIC
"RTN","LRAPRES1",77,0)
 . S DIC(0)="QEZ"
"RTN","LRAPRES1",78,0)
 . S DIC=$S(LRADL="G":3.8,1:200)
"RTN","LRAPRES1",79,0)
 . D ^DIC
"RTN","LRAPRES1",80,0)
 . Q:Y=-1
"RTN","LRAPRES1",81,0)
 . I LRDELETE D
"RTN","LRAPRES1",82,0)
 . . I LRADL="" K XQA($P(Y,"^")) Q
"RTN","LRAPRES1",83,0)
 . . I LRADL="G" K XQA("G."_$P(Y,"^",2))
"RTN","LRAPRES1",84,0)
 . E  D
"RTN","LRAPRES1",85,0)
 . . I LRADL="",'$D(XQA($P(Y,"^"))) S XQA($P(Y,"^"))="Additional User" Q
"RTN","LRAPRES1",86,0)
 . . I LRADL="G" S XQA("G."_$P(Y,"^",2))="Additional Mail Group"
"RTN","LRAPRES1",87,0)
 . K LRMSG
"RTN","LRAPRES1",88,0)
 . S LRMSG=$S(LRADL="G":"Mail group ",1:"User ")_$P(Y,"^",2)_$S(LRDELETE:" deleted from",1:" added to")_" alert list."
"RTN","LRAPRES1",89,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES1",90,0)
 Q
"RTN","LRAPRES1",91,0)
 ;
"RTN","LRAPRES1",92,0)
 ;
"RTN","LRAPRES1",93,0)
ALERT ; Send the alert
"RTN","LRAPRES1",94,0)
 ;
"RTN","LRAPRES1",95,0)
 M XQA=LRXQA
"RTN","LRAPRES1",96,0)
 I '$D(XQA) D EN^DDIOL("Alerts NOT sent - no alert recipients identified!","","!!") Q
"RTN","LRAPRES1",97,0)
 ;
"RTN","LRAPRES1",98,0)
 D LAB^ORB3LAB(DFN,LRDFN,LRI,$G(LRA),LRSS,.XQA)
"RTN","LRAPRES1",99,0)
 ;
"RTN","LRAPRES1",100,0)
 D EN^DDIOL("Alerts have been sent.","","!!")
"RTN","LRAPRES1",101,0)
 Q
"RTN","LRAPRES1",102,0)
 ;
"RTN","LRAPRES1",103,0)
 ;
"RTN","LRAPRES1",104,0)
AHELP ; Help Frame
"RTN","LRAPRES1",105,0)
 N LRI,LRJ,LRMSG
"RTN","LRAPRES1",106,0)
 S LRMSG(1)="Enter either 'Y' or 'N'."
"RTN","LRAPRES1",107,0)
 S LRMSG(2)="If answered 'Yes', you will also have the opportunity to send alerts",LRMSG(2,"F")="!!"
"RTN","LRAPRES1",108,0)
 S LRMSG(3)="to additional recipients and/or mail groups."
"RTN","LRAPRES1",109,0)
 S LRMSG(4)="A mandatory alert is sent to the ordering provider/surgeon and the primary care",LRMSG(4,"F")="!!"
"RTN","LRAPRES1",110,0)
 S LRMSG(5)="provider/attending that this report has been electronically signed and is now"
"RTN","LRAPRES1",111,0)
 S LRMSG(6)="available for viewing."
"RTN","LRAPRES1",112,0)
 S LRJ=6
"RTN","LRAPRES1",113,0)
 D CHELP
"RTN","LRAPRES1",114,0)
 Q
"RTN","LRAPRES1",115,0)
 ;
"RTN","LRAPRES1",116,0)
AHELP2 ; Help frame entry point for additional recipients selection
"RTN","LRAPRES1",117,0)
 ;
"RTN","LRAPRES1",118,0)
 N LRI,LRJ,LRMSG
"RTN","LRAPRES1",119,0)
 S LRMSG(1)="A mandatory alert is sent to the ordering provider/surgeon and the primary care",LRMSG(4,"F")="!!"
"RTN","LRAPRES1",120,0)
 S LRMSG(2)="provider/attending that this report has been electronically signed and is now"
"RTN","LRAPRES1",121,0)
 S LRMSG(3)="available for viewing."
"RTN","LRAPRES1",122,0)
 S LRJ=3
"RTN","LRAPRES1",123,0)
 D CHELP
"RTN","LRAPRES1",124,0)
 Q
"RTN","LRAPRES1",125,0)
 ;
"RTN","LRAPRES1",126,0)
 ;
"RTN","LRAPRES1",127,0)
CHELP ; Display common help
"RTN","LRAPRES1",128,0)
 ;
"RTN","LRAPRES1",129,0)
 I '$D(LRXQA) S LRJ=LRJ+1,LRMSG(LRJ)="No mandatory recipients listed",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",130,0)
 E  D
"RTN","LRAPRES1",131,0)
 . S LRI=0,LRJ=LRJ+1,LRMSG(LRJ)="The current mandatory recipients will be:",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",132,0)
 . F  S LRI=$O(LRXQA(LRI)) Q:LRI<1  S LRJ=LRJ+1,LRMSG(LRJ)=$$NAME^XUSER(LRI,"F")_"  ["_LRXQA(LRI)_"]"
"RTN","LRAPRES1",133,0)
 ;
"RTN","LRAPRES1",134,0)
 I '$D(XQA) S LRJ=LRJ+1,LRMSG(LRJ)="No additional recipients listed",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",135,0)
 E  D
"RTN","LRAPRES1",136,0)
 . S LRI="",LRJ=LRJ+1,LRMSG(LRJ)="The current additional recipients will be:",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",137,0)
 . F  S LRI=$O(XQA(LRI)) Q:LRI=""  S LRJ=LRJ+1,LRMSG(LRJ)=$S(LRI:$$NAME^XUSER(LRI,"F"),1:LRI)_"  ["_XQA(LRI)_"]"
"RTN","LRAPRES1",138,0)
 ;
"RTN","LRAPRES1",139,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",140,0)
 Q
"RTN","LRAPRES1",141,0)
 ;
"RTN","LRAPRES1",142,0)
 ;
"RTN","LRAPRES1",143,0)
RETRACT(LRDFN,LRSS,LRI,LRTIUPTR) ;
"RTN","LRAPRES1",144,0)
 ; Change prior TIU versions of report to RETRACTED status
"RTN","LRAPRES1",145,0)
 N LRROOT,LRIENS,LRFILE,LRTIUP,LRTIUAR,LRERR,LRSTAT,LRTIUX,LREXRR
"RTN","LRAPRES1",146,0)
 I LRSS=""!("AUSPEMCY"'[LRSS) S LRPTR=0 Q
"RTN","LRAPRES1",147,0)
 I LRSS="AU" D
"RTN","LRAPRES1",148,0)
 . S LRROOT="^LR(LRDFN,101,""C""",LRIENS=LRDFN_","
"RTN","LRAPRES1",149,0)
 . S LRFILE=63.101
"RTN","LRAPRES1",150,0)
 I LRSS'="AU" D
"RTN","LRAPRES1",151,0)
 . S LRROOT="^LR(LRDFN,LRSS,LRI,.05,""C"""
"RTN","LRAPRES1",152,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPRES1",153,0)
 . S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPRES1",154,0)
 Q:'$D(@(LRROOT_")"))
"RTN","LRAPRES1",155,0)
 S LRTIUP=0,LRTIUX(.05)=15
"RTN","LRAPRES1",156,0)
 F  S LRTIUP=$O(@(LRROOT_",LRTIUP)"))  Q:LRTIUP'>0!(LRTIUP=LRTIUPTR)  D
"RTN","LRAPRES1",157,0)
 . K LRTIUAR S (LRSTAT,LRERR)=0
"RTN","LRAPRES1",158,0)
 . D EXTRACT^TIULQ(LRTIUP,"LRTIUAR",.LRERR,".05",,,"I")
"RTN","LRAPRES1",159,0)
 . Q:+LRERR
"RTN","LRAPRES1",160,0)
 . M LRSTAT=LRTIUAR(LRTIUP,.05,"I")
"RTN","LRAPRES1",161,0)
 . Q:LRSTAT'=7  ;Quit if current status is not COMPLETED
"RTN","LRAPRES1",162,0)
 . D FILE^TIUSRVP(.LREXRR,LRTIUP,.LRTIUX)
"RTN","LRAPRES1",163,0)
 . ; Update new TIU version of report with previous TIU pointer value
"RTN","LRAPRES1",164,0)
 . N LREXRR,LRTIUX
"RTN","LRAPRES1",165,0)
 . S LRTIUX(1406)=LRTIUP
"RTN","LRAPRES1",166,0)
 . D FILE^TIUSRVP(.LREXRR,LRTIUPTR,.LRTIUX)
"RTN","LRAPRES1",167,0)
 Q
"RTN","LRAPRES1",168,0)
 ;
"RTN","LRAPRES1",169,0)
 ;
"RTN","LRAPRES1",170,0)
CLSSCHK(DUZ,LREND) ; Determine if user has the proper class settings and PROVIDER key
"RTN","LRAPRES1",171,0)
 ;
"RTN","LRAPRES1",172,0)
 N LRMSG,LRPRCLSS,LRPCEXP,LRVCDE,LRPCSTR,LRMTCH
"RTN","LRAPRES1",173,0)
 ; First, check for PROVIDER key
"RTN","LRAPRES1",174,0)
 I '$D(^XUSEC("PROVIDER",DUZ)) D  Q
"RTN","LRAPRES1",175,0)
 . D EN^DDIOL($C(7)_"Electronic signature not authorized.  Missing PROVIDER key.","","!!")
"RTN","LRAPRES1",176,0)
 . S LREND=1
"RTN","LRAPRES1",177,0)
 ; Next, check the provider class
"RTN","LRAPRES1",178,0)
 ; PROVIDER CL must contain PHYSICIAN, or CYTOTECH only for CY section
"RTN","LRAPRES1",179,0)
 ; or DENTIST for ORAL AND MAXILLOFACIAL PATHOLOGY
"RTN","LRAPRES1",180,0)
 S LRPRCLSS=$$GET1^DIQ(200,DUZ_",",53.5)
"RTN","LRAPRES1",181,0)
 S LRMTCH=0
"RTN","LRAPRES1",182,0)
 I LRPRCLSS'["PHYSICIAN",LRPRCLSS'["DENTIST" D
"RTN","LRAPRES1",183,0)
 . I LRPRCLSS'["CYTOTECH" S LRMTCH=1
"RTN","LRAPRES1",184,0)
 . I LRSS'="CY" S LRMTCH=1
"RTN","LRAPRES1",185,0)
 I LRMTCH=1 D  Q
"RTN","LRAPRES1",186,0)
 . N LRMSG
"RTN","LRAPRES1",187,0)
 . S LRMSG(1)=$C(7)_"You are not authorized to electronically sign reports.",LRMSG(1,"F")="!!"
"RTN","LRAPRES1",188,0)
 . S LRMSG(2)="PROVIDER CLASS must include PHYSICIAN,"
"RTN","LRAPRES1",189,0)
 . S LRMSG(3)=" or CYTOTECHNOLOGIST for CY SECTIONS ONLY,"
"RTN","LRAPRES1",190,0)
 . S LRMSG(4)=" or DENTIST for ORAL AND MAXILLOFACIAL PATHOLOGY."
"RTN","LRAPRES1",191,0)
 . D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",192,0)
 . S LREND=1
"RTN","LRAPRES1",193,0)
 ;
"RTN","LRAPRES1",194,0)
 ; Finally, check the person class
"RTN","LRAPRES1",195,0)
 S LRPCSTR=$$GET^XUA4A72(DUZ)
"RTN","LRAPRES1",196,0)
 I LRPCSTR<0 D  Q
"RTN","LRAPRES1",197,0)
 . D EN^DDIOL("PERSON CLASS is inactive or undefined.  Electronic signature is not authorized.","","!!")
"RTN","LRAPRES1",198,0)
 . S LREND=1
"RTN","LRAPRES1",199,0)
 S LRPCEXP=+$P(LRPCSTR,"^",6)
"RTN","LRAPRES1",200,0)
 I LRPCEXP,LRPCEXP<DT D  Q
"RTN","LRAPRES1",201,0)
 . D EN^DDIOL("PERSON CLASS has expired.  Electronic signature is not authorized.","","!!")
"RTN","LRAPRES1",202,0)
 . S LREND=1
"RTN","LRAPRES1",203,0)
 S LRVCDE=$P(LRPCSTR,"^",7),LRMTCH=0
"RTN","LRAPRES1",204,0)
 ;
"RTN","LRAPRES1",205,0)
 ; Correct PERSON Class should match PROVIDER Class
"RTN","LRAPRES1",206,0)
 I LRPRCLSS["PHYSICIAN" D
"RTN","LRAPRES1",207,0)
 . I $E(LRVCDE,1,6)="V11370","123568"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",208,0)
 . I $E(LRVCDE,1,6)="V11371","03"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",209,0)
 . I $E(LRVCDE,1,6)="V18240","124579"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",210,0)
 . I LRVCDE="V182413" S LRMTCH=1
"RTN","LRAPRES1",211,0)
 ;
"RTN","LRAPRES1",212,0)
 I LRPRCLSS["CYTOTECH",LRVCDE="V150113" S LRMTCH=1
"RTN","LRAPRES1",213,0)
 I LRPRCLSS["DENTIST",LRVCDE="V030503" S LRMTCH=1
"RTN","LRAPRES1",214,0)
 ;
"RTN","LRAPRES1",215,0)
 I 'LRMTCH D
"RTN","LRAPRES1",216,0)
 . D EN^DDIOL("Invalid PERSON CLASS.  Electronic Signature is not authorized.","","!!")
"RTN","LRAPRES1",217,0)
 . S LREND=1
"RTN","LRAPRES1",218,0)
 Q
"RTN","LRAPRES2")
1^198
"RTN","LRAPSNMD")
0^175^B37542341
"RTN","LRAPSNMD",1,0)
LRAPSNMD ;DALOI/STAFF - Display/print SNOMED codes;Feb 27, 2009
"RTN","LRAPSNMD",2,0)
 ;;5.2;LAB SERVICE;**259,350**;Sep 27, 1994;Build 230
"RTN","LRAPSNMD",3,0)
 ;
"RTN","LRAPSNMD",4,0)
 Q
"RTN","LRAPSNMD",5,0)
 ;
"RTN","LRAPSNMD",6,0)
 ;
"RTN","LRAPSNMD",7,0)
INIT(LRDFN,LRSS,LRI,LRSF,LRAA,LRAN,LRAD,LRDEM,LRDEV) ;
"RTN","LRAPSNMD",8,0)
 ; This routine displays SNOMED codes and their description for the
"RTN","LRAPSNMD",9,0)
 ; given record in the LAB DATA (#63) file.
"RTN","LRAPSNMD",10,0)
 ;
"RTN","LRAPSNMD",11,0)
 ; LRDFN - IEN of the patient's record in the LAB DATA file (#63)
"RTN","LRAPSNMD",12,0)
 ;  LRSS - Anatomic Pathology section (i.e. "SP" for Surgical Pathology)
"RTN","LRAPSNMD",13,0)
 ;   LRI - Inverse date/time specimen taken
"RTN","LRAPSNMD",14,0)
 ;  LRSF - Anatomic Pathology sub-file number (i.e. 63.08 for Surg Path)
"RTN","LRAPSNMD",15,0)
 ;  LRAA - IEN of the accession area in the ACCESSION (#68) file
"RTN","LRAPSNMD",16,0)
 ;  LRAN - Accession Number
"RTN","LRAPSNMD",17,0)
 ;  LRAD - Accession Date
"RTN","LRAPSNMD",18,0)
 ; LRDEM - Demographics Array.  The following are used in the header 
"RTN","LRAPSNMD",19,0)
 ;         code but are not required:
"RTN","LRAPSNMD",20,0)
 ;         LRDEM("PNM") - Patient Name
"RTN","LRAPSNMD",21,0)
 ;         LRDEM("PRO") - Provider
"RTN","LRAPSNMD",22,0)
 ;         LRDEM("AUDT") - Autopsy Date
"RTN","LRAPSNMD",23,0)
 ;         LRDEM("AUTYP") - Autopsy Type
"RTN","LRAPSNMD",24,0)
 ;         LRDEM("DTH") - Date of Death
"RTN","LRAPSNMD",25,0)
 ;         LRDEM("SSN") - Social Security Number
"RTN","LRAPSNMD",26,0)
 ;         LRDEM("SEX") - Sex
"RTN","LRAPSNMD",27,0)
 ;         LRDEM("AGE") - Age (or Age at Death for AU)
"RTN","LRAPSNMD",28,0)
 ;         LRDEM("DOB") - Date of Birth
"RTN","LRAPSNMD",29,0)
 ; LRDEV - 1 indicates use device handling in this routine
"RTN","LRAPSNMD",30,0)
 ;         0 indicates use device handling of calling application
"RTN","LRAPSNMD",31,0)
 ;
"RTN","LRAPSNMD",32,0)
 N LRAU,LRQUIT,LRL
"RTN","LRAPSNMD",33,0)
 Q:'$D(LRSS)!('$D(LRDFN))!('$D(LRSF))!('$D(LRAA))!('+$G(LRAN))
"RTN","LRAPSNMD",34,0)
 Q:'+$G(LRAD)
"RTN","LRAPSNMD",35,0)
 S $P(LRL,"-",79)=""
"RTN","LRAPSNMD",36,0)
 S LRAU=$S(LRSS'="AU":0,1:1)
"RTN","LRAPSNMD",37,0)
 Q:'LRAU&('$D(LRI))
"RTN","LRAPSNMD",38,0)
 ;
"RTN","LRAPSNMD",39,0)
MAIN ;
"RTN","LRAPSNMD",40,0)
 S LRQUIT=0,LRDEV=+$G(LRDEV)
"RTN","LRAPSNMD",41,0)
 D:LRDEV ASKDEV
"RTN","LRAPSNMD",42,0)
 I $G(POP)!(LRQUIT) D END Q
"RTN","LRAPSNMD",43,0)
 D REPORT
"RTN","LRAPSNMD",44,0)
 D END
"RTN","LRAPSNMD",45,0)
 Q
"RTN","LRAPSNMD",46,0)
 ;
"RTN","LRAPSNMD",47,0)
 ;
"RTN","LRAPSNMD",48,0)
CHECK ;
"RTN","LRAPSNMD",49,0)
 N LRSB
"RTN","LRAPSNMD",50,0)
 I LRAU D  Q
"RTN","LRAPSNMD",51,0)
 . S LRSB=$Q(^LR(LRDFN,"AY",0))
"RTN","LRAPSNMD",52,0)
 . I $QS(LRSB,2)'="AY" D
"RTN","LRAPSNMD",53,0)
 . . W !!,"No SNOMED codes found."
"RTN","LRAPSNMD",54,0)
 . . S LRQUIT=1
"RTN","LRAPSNMD",55,0)
 S LRSB=$Q(^LR(LRDFN,LRSS,LRI,2,0))
"RTN","LRAPSNMD",56,0)
 I $QS(LRSB,4)'=2 D
"RTN","LRAPSNMD",57,0)
 . W !!,"No SNOMED codes found."
"RTN","LRAPSNMD",58,0)
 . S LRQUIT=1
"RTN","LRAPSNMD",59,0)
 Q
"RTN","LRAPSNMD",60,0)
 ;
"RTN","LRAPSNMD",61,0)
 ;
"RTN","LRAPSNMD",62,0)
ASKDEV ;
"RTN","LRAPSNMD",63,0)
 W !
"RTN","LRAPSNMD",64,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRAPSNMD",65,0)
 I POP W ! S LRQUIT=1 Q
"RTN","LRAPSNMD",66,0)
 I $D(IO("Q")) D
"RTN","LRAPSNMD",67,0)
 . S ZTDESC="LIST OF SNOMED CODES FOR AN ACCESSION"
"RTN","LRAPSNMD",68,0)
 . S ZTSAVE("LR*")="",ZTRTN="REPORT^LRAPSNMD"
"RTN","LRAPSNMD",69,0)
 . D ^%ZTLOAD W:$D(ZTSK) !,"Request Queued, #",ZTSK W !
"RTN","LRAPSNMD",70,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","LRAPSNMD",71,0)
 . S LRQUIT=1
"RTN","LRAPSNMD",72,0)
 Q
"RTN","LRAPSNMD",73,0)
 ;
"RTN","LRAPSNMD",74,0)
 ;
"RTN","LRAPSNMD",75,0)
REPORT ;
"RTN","LRAPSNMD",76,0)
 U IO W:IOST["C-" @IOF
"RTN","LRAPSNMD",77,0)
 N LRFILE,LRFILE1,LRFILE2,LRFILE3,LRCASE,LRX
"RTN","LRAPSNMD",78,0)
 N LRA,LRA1,LRA2,LRIENS,LRIENS1,LRIENS2,LRIENS3
"RTN","LRAPSNMD",79,0)
 N LRP1,LRP2,LRP3,LRP4,LRP5,LRDFP,LRPRFX,LRPG,LRPSNM,LRACC,LRSEC
"RTN","LRAPSNMD",80,0)
 ;
"RTN","LRAPSNMD",81,0)
 S LRIENS=LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPSNMD",82,0)
 S LRACC=$$GET1^DIQ(68.02,LRIENS,15,"E")
"RTN","LRAPSNMD",83,0)
 S LRSEC=$$GET1^DIQ(68,LRAA_",",.01)
"RTN","LRAPSNMD",84,0)
 S (LRQUIT,LRPG)=0
"RTN","LRAPSNMD",85,0)
 S LRPSNM=$$GET^XPAR("DIV^PKG","LR AP SNOMED SYSTEM PRINT",1,"Q")
"RTN","LRAPSNMD",86,0)
 I LRPSNM<1 S LRPSNM=2
"RTN","LRAPSNMD",87,0)
 ;
"RTN","LRAPSNMD",88,0)
 D HDR
"RTN","LRAPSNMD",89,0)
 ; Print Specimens
"RTN","LRAPSNMD",90,0)
 I 'LRAU D  Q:LRQUIT
"RTN","LRAPSNMD",91,0)
 . W !,"Tissue Specimen(s): ",!
"RTN","LRAPSNMD",92,0)
 . S LRX=0
"RTN","LRAPSNMD",93,0)
 . F  S LRX=$O(^LR(LRDFN,LRSS,LRI,.1,LRX)) Q:LRX'>0!(LRQUIT)  D
"RTN","LRAPSNMD",94,0)
 . . I $Y>(IOSL-5) D HDR Q:LRQUIT
"RTN","LRAPSNMD",95,0)
 . . W ?5,$P($G(^LR(LRDFN,LRSS,LRI,.1,LRX,0)),U),!
"RTN","LRAPSNMD",96,0)
 D CHECK
"RTN","LRAPSNMD",97,0)
 Q:LRQUIT
"RTN","LRAPSNMD",98,0)
 I LRAU D
"RTN","LRAPSNMD",99,0)
 . S LRFILE="^LR(LRDFN,""AY"",",LRFILE1=63.2,LRIENS=LRDFN_",",LRCASE=1
"RTN","LRAPSNMD",100,0)
 I 'LRAU D
"RTN","LRAPSNMD",101,0)
 . S LRFILE="^LR(LRDFN,LRSS,LRI,2,"
"RTN","LRAPSNMD",102,0)
 . S LRFILE1=+$$GET1^DID(LRSF,10,"","SPECIFIER")
"RTN","LRAPSNMD",103,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPSNMD",104,0)
 . S LRCASE=+$$GET1^DIQ(69.2,LRAA_",",.05,"I")
"RTN","LRAPSNMD",105,0)
 S LRA=0
"RTN","LRAPSNMD",106,0)
 F  S LRA=$O(@(LRFILE_"LRA)")) Q:LRA'>0!(LRQUIT)  D
"RTN","LRAPSNMD",107,0)
 . ; Topography
"RTN","LRAPSNMD",108,0)
 . S LRIENS1=LRA_","_LRIENS
"RTN","LRAPSNMD",109,0)
 . D WRITE(LRFILE1,LRIENS1,LRCASE,"T",0)
"RTN","LRAPSNMD",110,0)
 . ; Morphology
"RTN","LRAPSNMD",111,0)
 . S LRA1=0
"RTN","LRAPSNMD",112,0)
 . F  S LRA1=$O(@(LRFILE_"LRA,2,LRA1)")) Q:LRA1'>0!(LRQUIT)  D
"RTN","LRAPSNMD",113,0)
 . . S LRFILE2=+$$GET1^DID(LRFILE1,4,"","SPECIFIER")
"RTN","LRAPSNMD",114,0)
 . . S LRIENS2=LRA1_","_LRIENS1
"RTN","LRAPSNMD",115,0)
 . . D WRITE(LRFILE2,LRIENS2,LRCASE,"M",5)
"RTN","LRAPSNMD",116,0)
 . . ; Etiology
"RTN","LRAPSNMD",117,0)
 . . S LRA2=0
"RTN","LRAPSNMD",118,0)
 . . F  S LRA2=$O(@(LRFILE_"LRA,2,LRA1,1,LRA2)")) Q:LRA2'>0!(LRQUIT)  D
"RTN","LRAPSNMD",119,0)
 . . . S LRFILE3=+$$GET1^DID(LRFILE2,1,"","SPECIFIER")
"RTN","LRAPSNMD",120,0)
 . . . S LRIENS3=LRA2_","_LRIENS2
"RTN","LRAPSNMD",121,0)
 . . . D WRITE(LRFILE3,LRIENS3,LRCASE,"E",10)
"RTN","LRAPSNMD",122,0)
 . ; Disease,Function,Procedure
"RTN","LRAPSNMD",123,0)
 . F LRDFP="1;3","3;1","4;1.5" D
"RTN","LRAPSNMD",124,0)
 . . S LRDFP(1)=$P(LRDFP,";"),LRDFP(2)=$P(LRDFP,";",2),LRA1=0
"RTN","LRAPSNMD",125,0)
 . . F  S LRA1=$O(@(LRFILE_"LRA,LRDFP(1),LRA1)")) Q:LRA1'>0!(LRQUIT)  D
"RTN","LRAPSNMD",126,0)
 . . . S LRFILE2=+$$GET1^DID(LRFILE1,LRDFP(2),"","SPECIFIER")
"RTN","LRAPSNMD",127,0)
 . . . S LRIENS2=LRA1_","_LRIENS1
"RTN","LRAPSNMD",128,0)
 . . . S LRPRFX=$S(LRDFP(1)=1:"D",LRDFP(1)=3:"F",1:"P")
"RTN","LRAPSNMD",129,0)
 . . . D WRITE(LRFILE2,LRIENS2,LRCASE,LRPRFX,5)
"RTN","LRAPSNMD",130,0)
 Q:LRQUIT
"RTN","LRAPSNMD",131,0)
 W !!,$$CJ^XLFSTR("(End of Report)",IOM)
"RTN","LRAPSNMD",132,0)
 Q
"RTN","LRAPSNMD",133,0)
 ;
"RTN","LRAPSNMD",134,0)
 ;
"RTN","LRAPSNMD",135,0)
WRITE(LRP1,LRP2,LRP3,LRP4,LRP5) ;
"RTN","LRAPSNMD",136,0)
 ; LRP1=File number
"RTN","LRAPSNMD",137,0)
 ; LRP2=IEN string
"RTN","LRAPSNMD",138,0)
 ; LRP3=Case (Upper or Lower)
"RTN","LRAPSNMD",139,0)
 ; LRP4=Prefix
"RTN","LRAPSNMD",140,0)
 ; LRP5=Tab position
"RTN","LRAPSNMD",141,0)
 N LRSCT,LRSM
"RTN","LRAPSNMD",142,0)
 ;
"RTN","LRAPSNMD",143,0)
 S LRSM(1)=$$GET1^DIQ(LRP1,LRP2,.01)
"RTN","LRAPSNMD",144,0)
 I LRP3 S LRSM(1)=$$LOW^XLFSTR(LRSM(1))
"RTN","LRAPSNMD",145,0)
 S LRSM(2)=LRP4_"-"_$$GET1^DIQ(LRP1,LRP2,".01:2")
"RTN","LRAPSNMD",146,0)
 ;
"RTN","LRAPSNMD",147,0)
 I LRP4?1(1"T",1"E"),LRPSNM?1(1"1",1"3") D WSNM
"RTN","LRAPSNMD",148,0)
 I LRP4'="T",LRP4'="E" D WSNM
"RTN","LRAPSNMD",149,0)
 ;
"RTN","LRAPSNMD",150,0)
 I LRP4?1(1"T",1"E"),LRPSNM>1 D WSCT
"RTN","LRAPSNMD",151,0)
 ;
"RTN","LRAPSNMD",152,0)
 I $Y>(IOSL-5) D HDR
"RTN","LRAPSNMD",153,0)
 ;
"RTN","LRAPSNMD",154,0)
 Q
"RTN","LRAPSNMD",155,0)
 ;
"RTN","LRAPSNMD",156,0)
 ;
"RTN","LRAPSNMD",157,0)
WSNM ; Write SNOMED I codes
"RTN","LRAPSNMD",158,0)
 ;
"RTN","LRAPSNMD",159,0)
 W !?LRP5,LRSM(2)_": "_LRSM(1)
"RTN","LRAPSNMD",160,0)
 I LRP4="P" D
"RTN","LRAPSNMD",161,0)
 . S LRSM(3)=$$GET1^DIQ(LRP1,LRP2,.02,"I")
"RTN","LRAPSNMD",162,0)
 . I LRSM(3)'="" W " (",$S('LRSM(3):"negative",LRSM(3)=1:"positive",1:"?"),")"
"RTN","LRAPSNMD",163,0)
 ;
"RTN","LRAPSNMD",164,0)
 Q
"RTN","LRAPSNMD",165,0)
 ;
"RTN","LRAPSNMD",166,0)
 ;
"RTN","LRAPSNMD",167,0)
WSCT ; Write SCT codes
"RTN","LRAPSNMD",168,0)
 ;
"RTN","LRAPSNMD",169,0)
 N LRX
"RTN","LRAPSNMD",170,0)
 S LRX=$$GET1^DIQ(LRP1,LRP2,.01,"I")
"RTN","LRAPSNMD",171,0)
 S LRSCT=$$IEN2SCT^LA7VHLU6($S(LRP4="T":61,LRP4="E":61.2,1:""),LRX,DT,"")
"RTN","LRAPSNMD",172,0)
 I LRSCT="" Q
"RTN","LRAPSNMD",173,0)
 W !,?LRP5
"RTN","LRAPSNMD",174,0)
 I LRPSNM=2 W $S(LRP4="T":"Topography: ",LRP4="E":"Etiology: ",1:"")
"RTN","LRAPSNMD",175,0)
 W $P(LRSCT,"^")," (",$P(LRSCT,"^",3),")  ",$P(LRSCT,"^",2)
"RTN","LRAPSNMD",176,0)
 ;
"RTN","LRAPSNMD",177,0)
 Q
"RTN","LRAPSNMD",178,0)
 ;
"RTN","LRAPSNMD",179,0)
 ;
"RTN","LRAPSNMD",180,0)
HDR ;
"RTN","LRAPSNMD",181,0)
 I LRPG>0,IOST?1"C-".E D  Q:LRQUIT
"RTN","LRAPSNMD",182,0)
 . K DIR S DIR(0)="E"
"RTN","LRAPSNMD",183,0)
 . D ^DIR W !
"RTN","LRAPSNMD",184,0)
 . S:$D(DTOUT)!(X[U) LRQUIT=1
"RTN","LRAPSNMD",185,0)
 W:LRPG>0 @IOF S LRPG=LRPG+1
"RTN","LRAPSNMD",186,0)
 W !,LRSEC,?24,"SNOMED CODE LISTING",?49,"Acc: ",LRACC
"RTN","LRAPSNMD",187,0)
 W:IOST'["BROWSE" ?71,"Pg: ",$J(LRPG,3)
"RTN","LRAPSNMD",188,0)
 W !,"Patient: ",$G(LRDEM("PNM"))
"RTN","LRAPSNMD",189,0)
 W ?49,$S(LRAU:"Resident: ",1:"Physician: ")
"RTN","LRAPSNMD",190,0)
 W $E($G(LRDEM("PRO")),1,18)
"RTN","LRAPSNMD",191,0)
 I LRAU D
"RTN","LRAPSNMD",192,0)
 . W !,"Autopsy Date: ",$G(LRDEM("AUDT")),?35,$E($G(LRDEM("AUTYP")),1,12)
"RTN","LRAPSNMD",193,0)
 . W ?49,"Date Died: ",$G(LRDEM("DTH"))
"RTN","LRAPSNMD",194,0)
 W !,"ID: ",$G(LRDEM("SSN"))
"RTN","LRAPSNMD",195,0)
 I 'LRAU D
"RTN","LRAPSNMD",196,0)
 . W ?24,"Sex: ",$G(LRDEM("SEX")),?49,"DOB: ",$G(LRDEM("DOB"))
"RTN","LRAPSNMD",197,0)
 . W ?71,"Age:",$J($G(LRDEM("AGE")),3)
"RTN","LRAPSNMD",198,0)
 I LRAU D
"RTN","LRAPSNMD",199,0)
 . W ?24,"DOB: ",$G(LRDEM("DOB")),?49,"Age At Death: ",$G(LRDEM("AGE"))
"RTN","LRAPSNMD",200,0)
 . W ?72,"Sex: ",$G(LRDEM("SEX"))
"RTN","LRAPSNMD",201,0)
 W !,LRL
"RTN","LRAPSNMD",202,0)
 Q
"RTN","LRAPSNMD",203,0)
 ;
"RTN","LRAPSNMD",204,0)
 ;
"RTN","LRAPSNMD",205,0)
END ;
"RTN","LRAPSNMD",206,0)
 W:IOST?1"P-".E @IOF
"RTN","LRAPSNMD",207,0)
 I LRDEV D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRAPSNMD",208,0)
 K %,DIR,DTOUT,DUOUT,DIRUT,X,Y
"RTN","LRAPSNMD",209,0)
 Q
"RTN","LRAPTIUP")
0^207^B34578178
"RTN","LRAPTIUP",1,0)
LRAPTIUP ;DALOI/STAFF - API Print AP Reports from TIU ;11/05/10  17:30
"RTN","LRAPTIUP",2,0)
 ;;5.2;LAB SERVICE;**259,315,350**;Sep 27, 1994;Build 230
"RTN","LRAPTIUP",3,0)
 ;
"RTN","LRAPTIUP",4,0)
 ; This API is used to extract Anatomic Pathology reports that have
"RTN","LRAPTIUP",5,0)
 ; been stored in TIU and print them.
"RTN","LRAPTIUP",6,0)
 ;
"RTN","LRAPTIUP",7,0)
 ; Reference to TGET^TIUSRVR1 supported by IA #2944
"RTN","LRAPTIUP",8,0)
 ; Reference to EXTRACT^TIULQ supported by IA #2693
"RTN","LRAPTIUP",9,0)
 ;
"RTN","LRAPTIUP",10,0)
MAIN(LRTIUDA,LRDEV) ; Control Branching
"RTN","LRAPTIUP",11,0)
 ;
"RTN","LRAPTIUP",12,0)
 ; LRTIUDA - IEN of document from TIU DOCUMENT (#8925) file
"RTN","LRAPTIUP",13,0)
 ; LRDEV - 1 indicates use device handling in this routine
"RTN","LRAPTIUP",14,0)
 ;         0 indicates use device handling of calling application
"RTN","LRAPTIUP",15,0)
 ;
"RTN","LRAPTIUP",16,0)
 N LRCNT,LRCNTT,LRCNTF,LRFLG,LRHFLG,LROR,LRPTR,LRTXT,LRVAL
"RTN","LRAPTIUP",17,0)
 ;
"RTN","LRAPTIUP",18,0)
 K ^TMP("LRTIU",$J),^TMP("LRTIUTXT",$J)
"RTN","LRAPTIUP",19,0)
 ;
"RTN","LRAPTIUP",20,0)
 S LRDEV=+$G(LRDEV)
"RTN","LRAPTIUP",21,0)
 S LRPTR=LRTIUDA ; Used below in checking the checksum on document.
"RTN","LRAPTIUP",22,0)
 S LRQUIT=0
"RTN","LRAPTIUP",23,0)
 I '$G(LRTIUDA) D  Q
"RTN","LRAPTIUP",24,0)
 . W $C(7),!,"The IEN from the TIU DOCUMENT (#8925) file is undefined.",!
"RTN","LRAPTIUP",25,0)
 D EXTRACT
"RTN","LRAPTIUP",26,0)
 I LRQUIT D END Q
"RTN","LRAPTIUP",27,0)
 D DISSECT
"RTN","LRAPTIUP",28,0)
 I LRQUIT D END Q
"RTN","LRAPTIUP",29,0)
 D:LRDEV ASKDEV
"RTN","LRAPTIUP",30,0)
 I $G(POP)!LRQUIT D END Q
"RTN","LRAPTIUP",31,0)
 D REPORT
"RTN","LRAPTIUP",32,0)
 D END
"RTN","LRAPTIUP",33,0)
 Q
"RTN","LRAPTIUP",34,0)
 ;
"RTN","LRAPTIUP",35,0)
 ;
"RTN","LRAPTIUP",36,0)
EXTRACT ; Extract the report from TIU
"RTN","LRAPTIUP",37,0)
 D EXTRACT^TIULQ(LRTIUDA,"^TMP(""LRTIU"",$J)",,,,1,,1)
"RTN","LRAPTIUP",38,0)
 I '+$P($G(^TMP("LRTIU",$J,LRTIUDA,"TEXT",0)),"^",3) D  Q
"RTN","LRAPTIUP",39,0)
 . W $C(7),!!,"Document not found.",!
"RTN","LRAPTIUP",40,0)
 . S LRQUIT=1
"RTN","LRAPTIUP",41,0)
 M ^TMP("LRTIUTXT",$J)=^TMP("LRTIU",$J,LRTIUDA,"TEXT")
"RTN","LRAPTIUP",42,0)
 Q
"RTN","LRAPTIUP",43,0)
 ;
"RTN","LRAPTIUP",44,0)
 ;
"RTN","LRAPTIUP",45,0)
DISSECT ; Dissect the report into header, body, and footer
"RTN","LRAPTIUP",46,0)
 S (LROR,LRCNT,LRCNTT,LRHFLG)=0,LRFLG="H"
"RTN","LRAPTIUP",47,0)
 F  S LROR=$O(^TMP("LRTIUTXT",$J,LROR)) Q:LROR'>0!(LRQUIT)  D
"RTN","LRAPTIUP",48,0)
 . S LRTXT=$G(^TMP("LRTIUTXT",$J,LROR,0))
"RTN","LRAPTIUP",49,0)
 . I 'LRHFLG,LRTXT'="$APHDR" D  Q
"RTN","LRAPTIUP",50,0)
 . . W $C(7),!!,"Document is not an Anatomic Pathology report.",!
"RTN","LRAPTIUP",51,0)
 . . S LRQUIT=1
"RTN","LRAPTIUP",52,0)
 . I LRTXT="$APHDR" D  Q
"RTN","LRAPTIUP",53,0)
 . . S LRHFLG=1
"RTN","LRAPTIUP",54,0)
 . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",55,0)
 . I LRFLG="H" D  Q:LRFLG="T"
"RTN","LRAPTIUP",56,0)
 . . I LRTXT="$TEXT" D  Q
"RTN","LRAPTIUP",57,0)
 . . . S ^TMP("LRTIUTXT",$J,"HDR")=LRCNT,LRCNT=0
"RTN","LRAPTIUP",58,0)
 . . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",59,0)
 . . . S LRFLG="T",LRCNT=0
"RTN","LRAPTIUP",60,0)
 . . Q:LRFLG="T"
"RTN","LRAPTIUP",61,0)
 . . S LRCNT=LRCNT+1,LRCNTT=LRCNTT+1
"RTN","LRAPTIUP",62,0)
 . . S ^TMP("LRTIUTXT",$J,"HDR",LRCNT)=LRTXT
"RTN","LRAPTIUP",63,0)
 . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",64,0)
 . I LRFLG="T" D  Q:LRFLG="F"
"RTN","LRAPTIUP",65,0)
 . . I LRTXT="$FTR" D  Q:LRFLG="F"
"RTN","LRAPTIUP",66,0)
 . . . S ^TMP("LRTIUTXT",$J,"TEXT")=LRCNT,LRCNT=0
"RTN","LRAPTIUP",67,0)
 . . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",68,0)
 . . . S LRFLG="F"
"RTN","LRAPTIUP",69,0)
 . . Q:LRFLG="F"
"RTN","LRAPTIUP",70,0)
 . . S LRCNT=LRCNT+1,LRCNTT=LRCNTT+1
"RTN","LRAPTIUP",71,0)
 . . S ^TMP("LRTIUTXT",$J,"TEXT",LRCNT)=LRTXT
"RTN","LRAPTIUP",72,0)
 . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",73,0)
 . I LRFLG="F" D
"RTN","LRAPTIUP",74,0)
 . . S LRCNT=LRCNT+1,LRCNTT=LRCNTT+1
"RTN","LRAPTIUP",75,0)
 . . S ^TMP("LRTIUTXT",$J,"FTR",LRCNT)=LRTXT
"RTN","LRAPTIUP",76,0)
 . . K ^TMP("LRTIUTXT",$J,LROR)
"RTN","LRAPTIUP",77,0)
 S ^TMP("LRTIUTXT",$J,"FTR")=LRCNT
"RTN","LRAPTIUP",78,0)
 S ^TMP("LRTIUTXT",$J,0)=LRCNTT
"RTN","LRAPTIUP",79,0)
 Q
"RTN","LRAPTIUP",80,0)
 ;
"RTN","LRAPTIUP",81,0)
 ;
"RTN","LRAPTIUP",82,0)
ASKDEV ;
"RTN","LRAPTIUP",83,0)
 W !
"RTN","LRAPTIUP",84,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRAPTIUP",85,0)
 I POP W ! S LRQUIT=1 Q
"RTN","LRAPTIUP",86,0)
 I $D(IO("Q")) D
"RTN","LRAPTIUP",87,0)
 .S ZTDESC="Print Anat Path Reports"
"RTN","LRAPTIUP",88,0)
 .S ZTRTN="REPORT^LRAPTIUP"
"RTN","LRAPTIUP",89,0)
 .D ^%ZTLOAD W:$D(ZTSK) !,"Request Queued, #",ZTSK W !
"RTN","LRAPTIUP",90,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","LRAPTIUP",91,0)
 .S LRQUIT=1
"RTN","LRAPTIUP",92,0)
 Q
"RTN","LRAPTIUP",93,0)
 ;
"RTN","LRAPTIUP",94,0)
 ;
"RTN","LRAPTIUP",95,0)
REPORT ;
"RTN","LRAPTIUP",96,0)
 U IO
"RTN","LRAPTIUP",97,0)
 W:IOST?1"C-".E @IOF
"RTN","LRAPTIUP",98,0)
 N LRPG,LRHDC,LRFTC,LRTXC,LRTOTPGS,LROR1,LROR2,LREND
"RTN","LRAPTIUP",99,0)
 S (LRQUIT,LRPG,LREND)=0
"RTN","LRAPTIUP",100,0)
 S LRHDC=+$G(^TMP("LRTIUTXT",$J,"HDR"))
"RTN","LRAPTIUP",101,0)
 S LRFTC=+$G(^TMP("LRTIUTXT",$J,"FTR"))
"RTN","LRAPTIUP",102,0)
 S LRTXC=+$G(^TMP("LRTIUTXT",$J,"TEXT"))
"RTN","LRAPTIUP",103,0)
 ;
"RTN","LRAPTIUP",104,0)
 I (IOSL-LRHDC-LRFTC-4)<1 S LRTOTPGS=LRTXC
"RTN","LRAPTIUP",105,0)
 E  S LRTOTPGS=LRTXC\(IOSL-LRHDC-LRFTC-4) S:LRTXC#(IOSL-LRHDC-LRFTC-4) LRTOTPGS=LRTOTPGS+1
"RTN","LRAPTIUP",106,0)
 ;
"RTN","LRAPTIUP",107,0)
 D HEADER
"RTN","LRAPTIUP",108,0)
 Q:LRQUIT
"RTN","LRAPTIUP",109,0)
 ;
"RTN","LRAPTIUP",110,0)
 ; Calculate LR and TIU checksums, if they don't match, set flag to scramble signature on the report.
"RTN","LRAPTIUP",111,0)
 D CHKSUM
"RTN","LRAPTIUP",112,0)
 I LRCKSUM'=0,LRCKSUM'=TIUCKSUM S LRENCRYP=1
"RTN","LRAPTIUP",113,0)
 ;
"RTN","LRAPTIUP",114,0)
 D BODY
"RTN","LRAPTIUP",115,0)
 Q:LRQUIT
"RTN","LRAPTIUP",116,0)
 S LREND=1
"RTN","LRAPTIUP",117,0)
 D FOOTER
"RTN","LRAPTIUP",118,0)
 Q
"RTN","LRAPTIUP",119,0)
 ;
"RTN","LRAPTIUP",120,0)
 ;
"RTN","LRAPTIUP",121,0)
HEADER ;Report Header
"RTN","LRAPTIUP",122,0)
 I LRPG>0,IOST?1"C-".E D  Q:LRQUIT
"RTN","LRAPTIUP",123,0)
 . K DIR S DIR(0)="E"
"RTN","LRAPTIUP",124,0)
 . D ^DIR W !
"RTN","LRAPTIUP",125,0)
 . S:$D(DTOUT)!(X[U) LRQUIT=1
"RTN","LRAPTIUP",126,0)
 W:LRPG>0 @IOF S LRPG=LRPG+1
"RTN","LRAPTIUP",127,0)
 S LROR=0
"RTN","LRAPTIUP",128,0)
 F  S LROR=$O(^TMP("LRTIUTXT",$J,"HDR",LROR)) Q:LROR'>0  D
"RTN","LRAPTIUP",129,0)
 . S LRTXT=$G(^TMP("LRTIUTXT",$J,"HDR",LROR))
"RTN","LRAPTIUP",130,0)
 . W LRTXT
"RTN","LRAPTIUP",131,0)
 . I LRTXT["MEDICAL RECORD"!(LRTXT["AUTOPSY PROTOCOL"),$E(IOST,1,2)'="C-" W ?68,"Pg",$J(LRPG,3)," of ",LRTOTPGS
"RTN","LRAPTIUP",132,0)
 . W !
"RTN","LRAPTIUP",133,0)
 Q
"RTN","LRAPTIUP",134,0)
 ;
"RTN","LRAPTIUP",135,0)
 ;
"RTN","LRAPTIUP",136,0)
BODY ; Body of Report
"RTN","LRAPTIUP",137,0)
 S LROR1=0
"RTN","LRAPTIUP",138,0)
 F  S LROR1=$O(^TMP("LRTIUTXT",$J,"TEXT",LROR1)) Q:LROR1'>0!(LRQUIT)  D
"RTN","LRAPTIUP",139,0)
 . I $Y>(IOSL-LRFTC-5),$E(IOST,1,2)'="C-" D FOOTER,HEADER Q:LRQUIT
"RTN","LRAPTIUP",140,0)
 . S LRTXT=$G(^TMP("LRTIUTXT",$J,"TEXT",LROR1))
"RTN","LRAPTIUP",141,0)
 . I LRTXT["/es/",+$G(LRENCRYP) S LRTXT=$$ENCRYP^XUSRB1(LRTXT)
"RTN","LRAPTIUP",142,0)
 . W LRTXT,!
"RTN","LRAPTIUP",143,0)
 Q
"RTN","LRAPTIUP",144,0)
 ;
"RTN","LRAPTIUP",145,0)
 ;
"RTN","LRAPTIUP",146,0)
FOOTER ;Report Footer
"RTN","LRAPTIUP",147,0)
 S (LROR2,LRCNTF)=0
"RTN","LRAPTIUP",148,0)
 I IOSL'>66 F  Q:$Y>(IOSL-LRFTC-5)  W !
"RTN","LRAPTIUP",149,0)
 F  S LROR2=$O(^TMP("LRTIUTXT",$J,"FTR",LROR2)) Q:LROR2'>0  D
"RTN","LRAPTIUP",150,0)
 . S LRCNTF=LRCNTF+1
"RTN","LRAPTIUP",151,0)
 . S LRTXT=$G(^TMP("LRTIUTXT",$J,"FTR",LROR2))
"RTN","LRAPTIUP",152,0)
 . I LRCNTF=2 D  Q
"RTN","LRAPTIUP",153,0)
 . . I LRTXT'=""&(LRTXT'["(End") W LRTXT,! Q
"RTN","LRAPTIUP",154,0)
 . . I 'LREND W ?57,"(See next page)",! Q
"RTN","LRAPTIUP",155,0)
 . . W ?57,"(End of report)",!
"RTN","LRAPTIUP",156,0)
 . W LRTXT,!
"RTN","LRAPTIUP",157,0)
 Q
"RTN","LRAPTIUP",158,0)
 ;
"RTN","LRAPTIUP",159,0)
 ;
"RTN","LRAPTIUP",160,0)
CHKSUM ;Compare LR and TIU checksums
"RTN","LRAPTIUP",161,0)
 ; Get original checksum value from file 63
"RTN","LRAPTIUP",162,0)
 N LRTREC,LRROOT,LRFILE,LRIENS,LRFLD,LRREL
"RTN","LRAPTIUP",163,0)
 S (LRENCRYP,LRTREC)=0
"RTN","LRAPTIUP",164,0)
 I LRSS="AU" D
"RTN","LRAPTIUP",165,0)
 . S LRTREC=$O(^LR(LRDFN,101,"C",LRPTR,LRTREC))
"RTN","LRAPTIUP",166,0)
 . S LRIENS=LRDFN_","
"RTN","LRAPTIUP",167,0)
 . S LRFILE=63.101
"RTN","LRAPTIUP",168,0)
 I LRSS'="AU" D
"RTN","LRAPTIUP",169,0)
 . S LRTREC=$O(^LR(LRDFN,LRSS,LRI,.05,"C",LRPTR,LRTREC))
"RTN","LRAPTIUP",170,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPTIUP",171,0)
 . S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPTIUP",172,0)
 I LRFILE=""!(LRTREC=0) S LRCKSUM=0 Q
"RTN","LRAPTIUP",173,0)
 ; Retrieve LR checksum
"RTN","LRAPTIUP",174,0)
 S LRIENS=LRTREC_","_LRIENS
"RTN","LRAPTIUP",175,0)
 S LRCKSUM=$$GET1^DIQ(LRFILE,LRIENS,2)
"RTN","LRAPTIUP",176,0)
 I LRCKSUM="" S LRCKSUM=0
"RTN","LRAPTIUP",177,0)
 ;CKA-Calculate checksum of TIU report
"RTN","LRAPTIUP",178,0)
 S $P(^TMP("LRTIU",$J,LRTIUDA,"TEXT",0),U,5)=$P(^TMP("LRTIU",$J,LRTIUDA,1201,"I"),".")
"RTN","LRAPTIUP",179,0)
 S LRVAL="^TMP(""LRTIU"","_$J_","_LRTIUDA_",""TEXT"")"
"RTN","LRAPTIUP",180,0)
 S TIUCKSUM=$$CHKSUM^XUSESIG1(LRVAL)
"RTN","LRAPTIUP",181,0)
 Q
"RTN","LRAPTIUP",182,0)
 ;
"RTN","LRAPTIUP",183,0)
 ;
"RTN","LRAPTIUP",184,0)
END ;
"RTN","LRAPTIUP",185,0)
 W:IOST?1"P-".E @IOF
"RTN","LRAPTIUP",186,0)
 I LRDEV D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRAPTIUP",187,0)
 K ^TMP("LRTIU",$J),^TMP("LRTIUTXT",$J)
"RTN","LRAPTIUP",188,0)
 K %,DIR,DTOUT,DUOUT,DIRUT,X,Y
"RTN","LRAPTIUP",189,0)
 K %ZIS,LRCKSUM,LRENCRYP,LRPTR,POP,TIUCKSUM
"RTN","LRAPTIUP",190,0)
 K ZTDESC,ZTQUEUED,ZTREQ,ZTRTN
"RTN","LRAPTIUP",191,0)
 Q
"RTN","LRAPTT")
0^178^B118014265
"RTN","LRAPTT",1,0)
LRAPTT ;DALOI/STAFF - TURNAROUND TIME PATH ;09/09/11  11:39
"RTN","LRAPTT",2,0)
 ;;5.2;LAB SERVICE;**1,72,201,397,350**;Sep 27, 1994;Build 230
"RTN","LRAPTT",3,0)
 ;
"RTN","LRAPTT",4,0)
EN ; Entry point for TAT report setup
"RTN","LRAPTT",5,0)
 ;
"RTN","LRAPTT",6,0)
 D ^LRAP Q:'$D(Y)
"RTN","LRAPTT",7,0)
 ;
"RTN","LRAPTT",8,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRPROC,LRSPEC
"RTN","LRAPTT",9,0)
 I LRSS="AU" D  Q:'$G(LR("AU"))
"RTN","LRAPTT",10,0)
 . S DIR(0)="S^1:Turnaround time for PAD;2:Turnaround time for FAD"
"RTN","LRAPTT",11,0)
 . S DIR("?",1)="Enter 1 for Provisional Anatomic Diagnoses (PAD)"
"RTN","LRAPTT",12,0)
 . S DIR("?")="Enter 2 for Final Anatomic Diagnoses (FAD)"
"RTN","LRAPTT",13,0)
 . D ^DIR
"RTN","LRAPTT",14,0)
 . I $D(DIRUT) D END Q
"RTN","LRAPTT",15,0)
 . S LR("AU")=+Y
"RTN","LRAPTT",16,0)
 ;
"RTN","LRAPTT",17,0)
 D B^LRU
"RTN","LRAPTT",18,0)
 G:Y<0 END
"RTN","LRAPTT",19,0)
 S LRSDT=LRSDT-.01,LRLDT=LRLDT+.99,LRL=0
"RTN","LRAPTT",20,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRAPTT",21,0)
 S DIR(0)="Y",DIR("A")="Identify cases exceeding turnaround time limit",DIR("B")="NO"
"RTN","LRAPTT",22,0)
 D ^DIR
"RTN","LRAPTT",23,0)
 I $D(DIRUT) D END Q
"RTN","LRAPTT",24,0)
 I Y=1 D  Q:'$G(LRB)
"RTN","LRAPTT",25,0)
 . K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRAPTT",26,0)
 . S DIR(0)="N^1:120:0",DIR("A")="Enter limit in days"
"RTN","LRAPTT",27,0)
 . D ^DIR
"RTN","LRAPTT",28,0)
 . I $D(DIRUT) D END Q
"RTN","LRAPTT",29,0)
 . S LRB=+Y,LRL=LRB+1
"RTN","LRAPTT",30,0)
 ;
"RTN","LRAPTT",31,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRAPTT",32,0)
 S DIR(0)="S^0:Include All;1:Include Selected;2:Exclude Selected",DIR("A")="Include/Exclude Specimens",DIR("B")=0
"RTN","LRAPTT",33,0)
 D ^DIR
"RTN","LRAPTT",34,0)
 I $D(DIRUT) D END Q
"RTN","LRAPTT",35,0)
 S LRSPEC=+Y
"RTN","LRAPTT",36,0)
 I LRSPEC>0 D
"RTN","LRAPTT",37,0)
 . N DIC
"RTN","LRAPTT",38,0)
 . S DIC="^LAB(61,",DIC(0)="AEQM",DIC("A")="Select SPECIMEN: ",LRSPEC=+Y
"RTN","LRAPTT",39,0)
 . F  D ^DIC Q:Y<1  S LRSPEC(+Y)=""
"RTN","LRAPTT",40,0)
 ;
"RTN","LRAPTT",41,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPTT",42,0)
 S DIR(0)="S^0:Include All;1:Include Selected;2:Exclude Selected",DIR("A")="Include/Exclude Procedures",DIR("B")=0
"RTN","LRAPTT",43,0)
 D ^DIR
"RTN","LRAPTT",44,0)
 I $D(DIRUT) D END Q
"RTN","LRAPTT",45,0)
 S LRPROC=+Y
"RTN","LRAPTT",46,0)
 I LRPROC>0 D
"RTN","LRAPTT",47,0)
 . N DIC
"RTN","LRAPTT",48,0)
 . S DIC="^LAB(61.5,",DIC(0)="AEQM",DIC("A")="Select PROCEDURE: ",LRPROC=+Y
"RTN","LRAPTT",49,0)
 . F  D ^DIC Q:Y<1  S LRPROC(+Y)=""
"RTN","LRAPTT",50,0)
 ;
"RTN","LRAPTT",51,0)
 I LRPROC>0 D  I $D(DIRUT) D END Q
"RTN","LRAPTT",52,0)
 . K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPTT",53,0)
 . S DIR(0)="Y",DIR("A")="Count multiple procedure occurrence/case",DIR("B")="NO"
"RTN","LRAPTT",54,0)
 . S DIR("?",1)="Answer 'yes' if you want to count each occurrence of the same procedure/case."
"RTN","LRAPTT",55,0)
 . S DIR("?",2)="Answer 'no' if you want a procedure counted only once per case."
"RTN","LRAPTT",56,0)
 . S DIR("?",3)="This applies when a given accession (case) has the same procedure"
"RTN","LRAPTT",57,0)
 . S DIR("?")="specified for multiple topographies."
"RTN","LRAPTT",58,0)
 . D ^DIR
"RTN","LRAPTT",59,0)
 . I $D(DIRUT) Q
"RTN","LRAPTT",60,0)
 . S $P(LRPROC,"^",2)=+Y
"RTN","LRAPTT",61,0)
 ;
"RTN","LRAPTT",62,0)
 S ZTRTN="QUE^LRAPTT" D BEG^LRUTL
"RTN","LRAPTT",63,0)
 G:POP!($D(ZTSK)) END
"RTN","LRAPTT",64,0)
 ;
"RTN","LRAPTT",65,0)
 ;
"RTN","LRAPTT",66,0)
QUE ;
"RTN","LRAPTT",67,0)
 N LRPROCI,LRSPECI
"RTN","LRAPTT",68,0)
 U IO K ^TMP($J)
"RTN","LRAPTT",69,0)
 S LRD="",(LRE,LRF,LRA,LRM)=0
"RTN","LRAPTT",70,0)
 D XR^LRU,L^LRU,S^LRU,^LRAPTT1
"RTN","LRAPTT",71,0)
 S LR("F")=1 F A=0:0 S A=$O(^DIC("AC","LR",A)) Q:'A  S (LRE(A),LRF(A),LRM(A),LRA(A))=0
"RTN","LRAPTT",72,0)
 F  S LRSDT=$O(^LR(LRXR,LRSDT)) Q:'LRSDT!(LRSDT>LRLDT)  D I
"RTN","LRAPTT",73,0)
 F LRH=0:0 S LRH=$O(^TMP($J,LRH)) Q:'LRH!(LR("Q"))  D N
"RTN","LRAPTT",74,0)
 G:LR("Q") OUT S B=0 F A=0:0 S A=$O(LRM(A)) Q:'A  I A'=2,LRM(A) S B=1 Q
"RTN","LRAPTT",75,0)
 ;
"RTN","LRAPTT",76,0)
 I B D:$Y>(IOSL-8) ^LRAPTT1 Q:LR("Q")  W !!,"If '#', '*' or '?' is after Acc # then demographic data is in file indicated:",!?7,"# = Referral file  * = Research file  ? = Other file listed below"
"RTN","LRAPTT",77,0)
 ;
"RTN","LRAPTT",78,0)
 I LRSS="AU" W !?6,"F= FULL AUTOPSY  H= HEAD ONLY T= TRUNK ONLY  O=OTHER LIMITATION"
"RTN","LRAPTT",79,0)
 D:$Y>(IOSL-8) ^LRAPTT1 Q:LR("Q")
"RTN","LRAPTT",80,0)
 S X=LRM-LRF W !!,"Total cases:",$J(LRM,4) W:X !?3,"Incomplete cases:",$J(X,4) W !?3,"Complete   cases:",$J(LRF,4)
"RTN","LRAPTT",81,0)
 W:LRF !?5,"Average turnaround time (days): ",$J(LRE/LRF,2,2)
"RTN","LRAPTT",82,0)
 W:LRL&(LRF) ?44,"Cases exceeding limit: ",LRA," (",$J(LRA/LRF*100,2,2),"%)"
"RTN","LRAPTT",83,0)
 D F^LRAPTT1
"RTN","LRAPTT",84,0)
 I LRSPEC>0 D SPECTOT
"RTN","LRAPTT",85,0)
 ;
"RTN","LRAPTT",86,0)
 I LRPROC>0 D PROCTOT
"RTN","LRAPTT",87,0)
 ;
"RTN","LRAPTT",88,0)
OUT ;
"RTN","LRAPTT",89,0)
 K ^TMP($J)
"RTN","LRAPTT",90,0)
 W:IOST'?1"C".E @IOF
"RTN","LRAPTT",91,0)
 K LRSPEC
"RTN","LRAPTT",92,0)
 D END^LRUTL,V^LRU
"RTN","LRAPTT",93,0)
 Q
"RTN","LRAPTT",94,0)
 ;
"RTN","LRAPTT",95,0)
 ;
"RTN","LRAPTT",96,0)
N ;
"RTN","LRAPTT",97,0)
 S LRZ=0 F  S LRZ=$O(^TMP($J,LRH,LRZ)) Q:LRZ=""!(LR("Q"))  D:$Y>(IOSL-6) ^LRAPTT1 Q:LR("Q")  S Y=^TMP($J,LRH,LRZ) D B
"RTN","LRAPTT",98,0)
 Q
"RTN","LRAPTT",99,0)
 ;
"RTN","LRAPTT",100,0)
 ;
"RTN","LRAPTT",101,0)
B ;
"RTN","LRAPTT",102,0)
 W !,$J(LRZ,5),?5,$P(Y,U,8),?6,$P(Y,U,9),?8,$P(Y,U),?19,$E($P(Y,U,2),1,20),?40,$P(Y,U,3),?46,$P(Y,U,5),?51,$P(Y,U,4),?62,$J($P(Y,U,6),3),?66,$E($P(Y,U,7),1,13)
"RTN","LRAPTT",103,0)
 Q
"RTN","LRAPTT",104,0)
 ;
"RTN","LRAPTT",105,0)
 ;
"RTN","LRAPTT",106,0)
I ;
"RTN","LRAPTT",107,0)
 S LRDFN=0
"RTN","LRAPTT",108,0)
 F  S LRDFN=$O(^LR(LRXR,LRSDT,LRDFN)) Q:'LRDFN  S M(2)="" D @($S("CYEMSP"[LRSS:"L",1:"A"))
"RTN","LRAPTT",109,0)
 Q
"RTN","LRAPTT",110,0)
 ;
"RTN","LRAPTT",111,0)
 ;
"RTN","LRAPTT",112,0)
L ;
"RTN","LRAPTT",113,0)
 Q:'$D(^LR(LRDFN,0))
"RTN","LRAPTT",114,0)
 S LRI=0
"RTN","LRAPTT",115,0)
 F  S LRI=$O(^LR(LRXR,LRSDT,LRDFN,LRI)) Q:'LRI  I $D(^LR(LRDFN,LRSS,LRI,0)) S X=^(0) D G:$P($P(X,"^",6)," ")=LRABV
"RTN","LRAPTT",116,0)
 S LREND=0
"RTN","LRAPTT",117,0)
 Q
"RTN","LRAPTT",118,0)
 ;
"RTN","LRAPTT",119,0)
 ;
"RTN","LRAPTT",120,0)
G ;
"RTN","LRAPTT",121,0)
 N LR61,LR615,LROK,LRJ,LRK
"RTN","LRAPTT",122,0)
 ;
"RTN","LRAPTT",123,0)
 ; Check if include/exclude specific specimens
"RTN","LRAPTT",124,0)
 I LRSPEC>0 D  Q:'LROK
"RTN","LRAPTT",125,0)
 . S LRJ=0,LROK=$S(LRSPEC=1:0,1:1)
"RTN","LRAPTT",126,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRI,.1,LRJ)) Q:'LRJ  D
"RTN","LRAPTT",127,0)
 . . S LR61=+$P(^LR(LRDFN,LRSS,LRI,.1,LRJ,0),"^",6)
"RTN","LRAPTT",128,0)
 . . I LR61<1 S:LRSPEC=2 LRSPECI(LR61)=$G(LRSPECI(LR61))+1
"RTN","LRAPTT",129,0)
 . . I $D(LRSPEC(LR61)) S LRSPEC(LR61)=LRSPEC(LR61)+1
"RTN","LRAPTT",130,0)
 . . I LRSPEC=1,'LROK S LROK=$S($D(LRSPEC(LR61)):1,1:0) Q
"RTN","LRAPTT",131,0)
 . . I LRSPEC=2,LROK S LROK=$S($D(LRSPEC(LR61)):0,1:1) S:LROK LRSPECI(LR61)=$G(LRSPECI(LR61))+1
"RTN","LRAPTT",132,0)
 ;
"RTN","LRAPTT",133,0)
 ; Check if include/exclude specific procedures
"RTN","LRAPTT",134,0)
 I LRPROC>0 D  Q:'LROK
"RTN","LRAPTT",135,0)
 . N LRDUP
"RTN","LRAPTT",136,0)
 . S LRJ=0,LROK=$S($P(LRPROC,"^")=1:0,1:1)
"RTN","LRAPTT",137,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRI,2,LRJ)) Q:'LRJ  D
"RTN","LRAPTT",138,0)
 . . S LRK=0
"RTN","LRAPTT",139,0)
 . . F  S LRK=$O(^LR(LRDFN,LRSS,LRI,2,LRJ,4,LRK)) Q:'LRK  D
"RTN","LRAPTT",140,0)
 . . . S LR615=+^LR(LRDFN,LRSS,LRI,2,LRJ,4,LRK,0)
"RTN","LRAPTT",141,0)
 . . . I '$P(LRPROC,"^",2),$D(LRDUP(LR615)) Q  ; Already counted one and no duplicates
"RTN","LRAPTT",142,0)
 . . . S LRDUP(LR615)=""
"RTN","LRAPTT",143,0)
 . . . I $D(LRPROC(LR615)) S LRPROC(LR615)=LRPROC(LR615)+1
"RTN","LRAPTT",144,0)
 . . . I $P(LRPROC,"^")=1,'LROK S LROK=$S($D(LRPROC(LR615)):1,1:0) Q
"RTN","LRAPTT",145,0)
 . . . I $P(LRPROC,"^")=2,LROK S LROK=$S($D(LRPROC(LR615)):0,1:1) S:LROK LRPROCI(LR615)=$G(LRPROCI(LR615))+1
"RTN","LRAPTT",146,0)
 ;
"RTN","LRAPTT",147,0)
 S Y=$P(X,U,11),Z=+$P($P(X,U,6)," ",3),W=$P(X,U,15),LRC=$S(W>1:W,Y>1:Y,Y=1:$P(X,U,3),1:""),H(4)=$P(X,U,2),LRR=$P(X,U,10),H(9)=$P(X,U,9),X=^LR(LRDFN,0) S:Z="" Z="??"
"RTN","LRAPTT",148,0)
 D S
"RTN","LRAPTT",149,0)
 Q
"RTN","LRAPTT",150,0)
 ;
"RTN","LRAPTT",151,0)
 ;
"RTN","LRAPTT",152,0)
S ;
"RTN","LRAPTT",153,0)
 D ^LRUP Q:$G(LREND)  S LRX=P("F") S:'$D(LRF(LRX))#2 LRF(LRX)=0
"RTN","LRAPTT",154,0)
 S:LRC LRF=LRF+1,LRF(LRX)=LRF(LRX)+1
"RTN","LRAPTT",155,0)
 S LRM=LRM+1,LRM(LRX)=LRM(LRX)+1
"RTN","LRAPTT",156,0)
 S X1=LRC,X2=LRR D ^%DTC S:X=0 X="<1" S LRT=X
"RTN","LRAPTT",157,0)
 I X>1 S LRY=X-1,Y=0,X=$P(LRR,".") D D
"RTN","LRAPTT",158,0)
 S LRE=LRE+LRT,LRE(LRX)=LRE(LRX)+LRT
"RTN","LRAPTT",159,0)
 I LRC,LRL,LRT<LRL Q
"RTN","LRAPTT",160,0)
 ;
"RTN","LRAPTT",161,0)
 I H(4),$D(^VA(200,H(4),0)) S X=$P(^(0),U),H(4)=$S(X[",":$E($P(X,","),1,16),1:$E(X,1,16))
"RTN","LRAPTT",162,0)
 S H(5)=$$Y2K^LRX(LRR,"5D"),H("F")=$S(+LRC:$$Y2K^LRX(LRC,"5D"),1:""),X=$S(LRX=2:"",LRX=67:"#",LRX=67.1:"*",1:"?")
"RTN","LRAPTT",163,0)
 S:'LRR LRR="?"
"RTN","LRAPTT",164,0)
 I $D(^TMP($J,$E(LRR,1,3),Z))!(LRR="?") D
"RTN","LRAPTT",165,0)
 .S LRM=LRM-1,LRM(LRX)=LRM(LRX)-1
"RTN","LRAPTT",166,0)
 S ^TMP($J,$E(LRR,1,3),Z)=H(5)_U_LRP_U_SSN(1)_U_H("F")_U_H(9)_U_LRT_U_H(4)_U_X_U_LRD
"RTN","LRAPTT",167,0)
 S:LRC LRA=LRA+1,LRA(LRX)=LRA(LRX)+1
"RTN","LRAPTT",168,0)
 Q
"RTN","LRAPTT",169,0)
 ;
"RTN","LRAPTT",170,0)
 ;
"RTN","LRAPTT",171,0)
A ;
"RTN","LRAPTT",172,0)
 S X=$G(^LR(LRDFN,"AU")) Q:$P($P(X,U,6)," ")'=LRABV
"RTN","LRAPTT",173,0)
 S LRR=$P(X,U),Z=$P($P(X,U,6)," ",3),LRC=$S(LR("AU")=1:$P(X,U,17),1:$P(X,U,3)),LRD=$P(X,U,11),H(4)=$P(X,U,10),H(9)=$P(X,U,13),X=^LR(LRDFN,0)
"RTN","LRAPTT",174,0)
 D S
"RTN","LRAPTT",175,0)
 Q
"RTN","LRAPTT",176,0)
 ;
"RTN","LRAPTT",177,0)
 ;
"RTN","LRAPTT",178,0)
D ;
"RTN","LRAPTT",179,0)
 N K
"RTN","LRAPTT",180,0)
 F K=1:1:LRY S X1=X,X2=1 D C^%DTC,H^%DTC S K(X)=%Y
"RTN","LRAPTT",181,0)
 S K=0
"RTN","LRAPTT",182,0)
 F  S K=$O(K(K)) Q:'K  D
"RTN","LRAPTT",183,0)
 . I "06"[K(K) S Y=Y+1 Q
"RTN","LRAPTT",184,0)
 . S:$D(^HOLIDAY(K)) Y=Y+1
"RTN","LRAPTT",185,0)
 S LRT=LRT-Y
"RTN","LRAPTT",186,0)
 Q
"RTN","LRAPTT",187,0)
 ;
"RTN","LRAPTT",188,0)
 ;
"RTN","LRAPTT",189,0)
SPECTOT ; Print specimen totals section
"RTN","LRAPTT",190,0)
 N LR61,LRCNT,LRHLEN,LRPSNM,LRSHDR
"RTN","LRAPTT",191,0)
 ;
"RTN","LRAPTT",192,0)
 S LRPSNM=$$GET^XPAR("DIV^PKG","LR AP SNOMED SYSTEM PRINT",1,"Q")
"RTN","LRAPTT",193,0)
 I LRPSNM<1 S LRPSNM=2
"RTN","LRAPTT",194,0)
 I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")
"RTN","LRAPTT",195,0)
 S (LRCNT,LRJ)=0
"RTN","LRAPTT",196,0)
 F  S LRJ=$O(LRSPEC(LRJ)) Q:LRJ=""  S LRCNT=LRCNT+LRSPEC(LRJ)
"RTN","LRAPTT",197,0)
 S LRSHDR="Specimens "_$S(LRSPEC=1:"included on",1:"excluded from")_" report",LRHLEN=40
"RTN","LRAPTT",198,0)
 W !!,$$LJ^XLFSTR(LRSHDR,LRHLEN,"."),": ",$J(LRCNT,5)
"RTN","LRAPTT",199,0)
 ;
"RTN","LRAPTT",200,0)
 S LR61=""
"RTN","LRAPTT",201,0)
 F  S LR61=$O(LRSPEC(LR61)) Q:LR61=""  D  Q:LR("Q")
"RTN","LRAPTT",202,0)
 . I $Y>(IOSL-3) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",203,0)
 . I LR61 S LR61(0)=^LAB(61,LR61,0),LRX=$P(LR61(0),"^")
"RTN","LRAPTT",204,0)
 . E  S LRX="Specimen not specified"
"RTN","LRAPTT",205,0)
 . I $L(LRX)>(LRHLEN) D
"RTN","LRAPTT",206,0)
 . . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",207,0)
 . . F  W !,$E(LRX,1,(LRHLEN)) S LRX=$E(LRX,LRHLEN+1,999) Q:$L(LRX)<(LRHLEN)
"RTN","LRAPTT",208,0)
 . W !,$$LJ^XLFSTR(LRX,LRHLEN,"."),": ",$J(LRSPEC(LR61),5)
"RTN","LRAPTT",209,0)
 . I LR61,LRPSNM D
"RTN","LRAPTT",210,0)
 . . I LRPSNM?1(1"1",1"3") W !,"T-",$P(LR61(0),"^",2)," (SNM)"
"RTN","LRAPTT",211,0)
 . . I LRPSNM>1,$D(^LAB(61,LR61,"SCT")) W:LRPSNM=2 ! W:LRPSNM=3 " / " W $P(^LAB(61,LR61,"SCT"),"^")," (SCT)"
"RTN","LRAPTT",212,0)
 . . W !
"RTN","LRAPTT",213,0)
 ;
"RTN","LRAPTT",214,0)
 I LRSPEC=2,$D(LRSPECI) D
"RTN","LRAPTT",215,0)
 . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")
"RTN","LRAPTT",216,0)
 . S LRCNT=0,LR61=""
"RTN","LRAPTT",217,0)
 . F  S LR61=$O(LRSPECI(LR61)) Q:LR61=""  S LRCNT=LRCNT+LRSPECI(LR61)
"RTN","LRAPTT",218,0)
 . S LRSHDR="Specimens included on report"
"RTN","LRAPTT",219,0)
 . W !!,$$LJ^XLFSTR(LRSHDR,LRHLEN,"."),": ",$J(LRCNT,5)
"RTN","LRAPTT",220,0)
 . S LR61=""
"RTN","LRAPTT",221,0)
 . F  S LR61=$O(LRSPECI(LR61)) Q:LR61=""  D  Q:LR("Q")
"RTN","LRAPTT",222,0)
 . . I $Y>(IOSL-3) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",223,0)
 . . I LR61 S LR61(0)=^LAB(61,LR61,0),LRX=$P(LR61(0),"^")
"RTN","LRAPTT",224,0)
 . . E  S LRX="Specimen not specified"
"RTN","LRAPTT",225,0)
 . . I $L(LRX)>(LRHLEN) D
"RTN","LRAPTT",226,0)
 . . . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",227,0)
 . . . F  W !,$E(LRX,1,(LRHLEN)) S LRX=$E(LRX,LRHLEN+1,999) Q:$L(LRX)<(LRHLEN)
"RTN","LRAPTT",228,0)
 . . W !,$$LJ^XLFSTR(LRX,LRHLEN,"."),": ",$J(LRSPECI(LR61),5)
"RTN","LRAPTT",229,0)
 . . I LR61,LRPSNM D
"RTN","LRAPTT",230,0)
 . . . I LRPSNM?1(1"1",1"3") W !,"T-",$P(LR61(0),"^",2)," (SNM)"
"RTN","LRAPTT",231,0)
 . . . I LRPSNM>1,$D(^LAB(61,LR61,"SCT")) W:LRPSNM=2 ! W:LRPSNM=3 " / " W $P(^LAB(61,LR61,"SCT"),"^")," (SCT)"
"RTN","LRAPTT",232,0)
 . . . W !
"RTN","LRAPTT",233,0)
 Q
"RTN","LRAPTT",234,0)
 ;
"RTN","LRAPTT",235,0)
 ;
"RTN","LRAPTT",236,0)
PROCTOT ; Print procedure totals section
"RTN","LRAPTT",237,0)
 N LR61,LRCNT,LRHLEN,LRPSNM,LRSHDR
"RTN","LRAPTT",238,0)
 ;
"RTN","LRAPTT",239,0)
 S LRPSNM=$$GET^XPAR("DIV^PKG","LR AP SNOMED SYSTEM PRINT",1,"Q")
"RTN","LRAPTT",240,0)
 I LRPSNM<1 S LRPSNM=2
"RTN","LRAPTT",241,0)
 I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")
"RTN","LRAPTT",242,0)
 S (LRCNT,LRJ)=0
"RTN","LRAPTT",243,0)
 F  S LRJ=$O(LRPROC(LRJ)) Q:LRJ=""  S LRCNT=LRCNT+LRPROC(LRJ)
"RTN","LRAPTT",244,0)
 S LRSHDR="Procedures "_$S($P(LRPROC,"^")=1:"included on",1:"excluded from")_" report",LRHLEN=40
"RTN","LRAPTT",245,0)
 W !!,$$LJ^XLFSTR(LRSHDR,LRHLEN,"."),": ",$J(LRCNT,5)
"RTN","LRAPTT",246,0)
 ;
"RTN","LRAPTT",247,0)
 S LR615=""
"RTN","LRAPTT",248,0)
 F  S LR615=$O(LRPROC(LR615)) Q:LR615=""  D  Q:LR("Q")
"RTN","LRAPTT",249,0)
 . I $Y>(IOSL-3) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",250,0)
 . I LR615 S LR615(0)=^LAB(61.5,LR615,0),LRX=$P(LR615(0),"^")
"RTN","LRAPTT",251,0)
 . E  S LRX="Procedure not specified"
"RTN","LRAPTT",252,0)
 . I $L(LRX)>(LRHLEN) D
"RTN","LRAPTT",253,0)
 . . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",254,0)
 . . F  W !,$E(LRX,1,(LRHLEN)) S LRX=$E(LRX,LRHLEN+1,999) Q:$L(LRX)<(LRHLEN)
"RTN","LRAPTT",255,0)
 . W !,$$LJ^XLFSTR(LRX,LRHLEN,"."),": ",$J(LRPROC(LR615),5)
"RTN","LRAPTT",256,0)
 . I LR615,LRPSNM D
"RTN","LRAPTT",257,0)
 . . I LRPSNM?1(1"1",1"3") W !,"P-",$P(LR615(0),"^",2)," (SNM)"
"RTN","LRAPTT",258,0)
 . . I LRPSNM>1,$D(^LAB(61.5,LR615,"SCT")) W:LRPSNM=2 ! W:LRPSNM=3 " / " W $P(^LAB(61.5,LR615,"SCT"),"^")," (SCT)"
"RTN","LRAPTT",259,0)
 . . W !
"RTN","LRAPTT",260,0)
 ;
"RTN","LRAPTT",261,0)
 I $P(LRPROC,"^")=2,$D(LRPROCI) D
"RTN","LRAPTT",262,0)
 . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")
"RTN","LRAPTT",263,0)
 . S LRCNT=0,LR615=""
"RTN","LRAPTT",264,0)
 . F  S LR615=$O(LRPROCI(LR615)) Q:LR615=""  S LRCNT=LRCNT+LRPROCI(LR615)
"RTN","LRAPTT",265,0)
 . S LRSHDR="Procedures included on report"
"RTN","LRAPTT",266,0)
 . W !!,$$LJ^XLFSTR(LRSHDR,LRHLEN,"."),": ",$J(LRCNT,5)
"RTN","LRAPTT",267,0)
 . S LR615=""
"RTN","LRAPTT",268,0)
 . F  S LR615=$O(LRPROCI(LR615)) Q:LR615=""  D  Q:LR("Q")
"RTN","LRAPTT",269,0)
 . . I $Y>(IOSL-3) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",270,0)
 . . I LR615 S LR615(0)=^LAB(61.5,LR615,0),LRX=$P(LR615(0),"^")
"RTN","LRAPTT",271,0)
 . . E  S LRX="Procedure not specified"
"RTN","LRAPTT",272,0)
 . . I $L(LRX)>(LRHLEN) D
"RTN","LRAPTT",273,0)
 . . . I $Y>(IOSL-6) D ^LRAPTT1 Q:LR("Q")  W !,$$LJ^XLFSTR(LRSHDR,LRHLEN,".")," (cont'd)"
"RTN","LRAPTT",274,0)
 . . . F  W !,$E(LRX,1,(LRHLEN)) S LRX=$E(LRX,LRHLEN+1,999) Q:$L(LRX)<(LRHLEN)
"RTN","LRAPTT",275,0)
 . . W !,$$LJ^XLFSTR(LRX,LRHLEN,"."),": ",$J(LRPROCI(LR615),5)
"RTN","LRAPTT",276,0)
 . . I LR615,LRPSNM D
"RTN","LRAPTT",277,0)
 . . . I LRPSNM?1(1"1",1"3") W !,"P-",$P(LR615(0),"^",2)," (SNM)"
"RTN","LRAPTT",278,0)
 . . . I LRPSNM>1,$D(^LAB(61.5,LR615,"SCT")) W:LRPSNM=2 ! W:LRPSNM=3 " / " W $P(^LAB(61.5,LR615,"SCT"),"^")," (SCT)"
"RTN","LRAPTT",279,0)
 . . . W !
"RTN","LRAPTT",280,0)
 ;
"RTN","LRAPTT",281,0)
 W !!,"Count multiple procedure occurrence/case.: ",$S($P(LRPROC,"^",2):"YES",1:"NO")
"RTN","LRAPTT",282,0)
 ;
"RTN","LRAPTT",283,0)
 Q
"RTN","LRAPTT",284,0)
 ;
"RTN","LRAPTT",285,0)
 ;
"RTN","LRAPTT",286,0)
END ;
"RTN","LRAPTT",287,0)
 D V^LRU
"RTN","LRAPTT",288,0)
 Q
"RTN","LRAPUTL")
0^58^B143796070
"RTN","LRAPUTL",1,0)
LRAPUTL ;DALOI/STAFF - AP UTILITIES ;06/21/12  12:06
"RTN","LRAPUTL",2,0)
 ;;5.2;LAB SERVICE;**259,308,350**;Sep 27, 1994;Build 230
"RTN","LRAPUTL",3,0)
 ;
"RTN","LRAPUTL",4,0)
 ; Reference to EXTRACT^TIULQ supported by IA #2693
"RTN","LRAPUTL",5,0)
 ; Reference to ADM^VADPT2 supported by DBIA #325
"RTN","LRAPUTL",6,0)
 ;
"RTN","LRAPUTL",7,0)
 Q
"RTN","LRAPUTL",8,0)
 ;
"RTN","LRAPUTL",9,0)
 ;
"RTN","LRAPUTL",10,0)
ACCYR(LRYROUT,LRYRIN,LRAREA,LRAANM) ;
"RTN","LRAPUTL",11,0)
 ; Return variable (passed by reference):
"RTN","LRAPUTL",12,0)
 ;      LRYROUT = Accession Year LRAD^LRH(0)
"RTN","LRAPUTL",13,0)
 ;                 where LRAD is format 3010000
"RTN","LRAPUTL",14,0)
 ;                       LRH(0) is format 2001
"RTN","LRAPUTL",15,0)
 ;              = -1 - Error Condition
"RTN","LRAPUTL",16,0)
 ;              =  0 - No change from default value (LRYRIN)
"RTN","LRAPUTL",17,0)
 ;
"RTN","LRAPUTL",18,0)
 ; Input parameters:
"RTN","LRAPUTL",19,0)
 ;      LRYRIN  = Default accession year in yyyy format
"RTN","LRAPUTL",20,0)
 ;      LRAREA  = Accession Area Mnemonic (ex. AU,CY,EM,SP)
"RTN","LRAPUTL",21,0)
 ;      LRAANM  = Accession Area Name (ex. SURGICAL PATHOLOGY)
"RTN","LRAPUTL",22,0)
 ;
"RTN","LRAPUTL",23,0)
 S LRYROUT=-1
"RTN","LRAPUTL",24,0)
 Q:LRAREA=""!(LRYRIN="")!(LRAANM="")
"RTN","LRAPUTL",25,0)
 N LRYR1,LRYR2,%DT
"RTN","LRAPUTL",26,0)
 W !!,"Data entry for ",LRYRIN," "
"RTN","LRAPUTL",27,0)
 S %=1 D YN^LRU
"RTN","LRAPUTL",28,0)
 I %<1 D END Q
"RTN","LRAPUTL",29,0)
 I %=1 S LRYROUT=0 K LRYRIN,LRAREA,LRAANM Q
"RTN","LRAPUTL",30,0)
 I %=2 D  I Y<1 D END Q
"RTN","LRAPUTL",31,0)
 . S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT
"RTN","LRAPUTL",32,0)
 . Q:Y<1
"RTN","LRAPUTL",33,0)
 . S LRYR1=$E(Y,1,3)_"0000",LRYR2=$E(Y,1,3)+1700
"RTN","LRAPUTL",34,0)
 I '$O(^LRO(68,LRAREA,1,LRYR1,1,0)) D  Q
"RTN","LRAPUTL",35,0)
 . W $C(7),!!,"NO ",LRAANM," ACCESSIONS IN FILE FOR ",LRYR2,!!
"RTN","LRAPUTL",36,0)
 . S LRYROUT=-1
"RTN","LRAPUTL",37,0)
 . D END
"RTN","LRAPUTL",38,0)
 S LRYROUT=LRYR1_U_LRYR2
"RTN","LRAPUTL",39,0)
 Q
"RTN","LRAPUTL",40,0)
 ;
"RTN","LRAPUTL",41,0)
 ;
"RTN","LRAPUTL",42,0)
LOOKUP(LRDATA,LRYR1,LRAANM,LRAREA,LRYR2,LRAAN) ;
"RTN","LRAPUTL",43,0)
 ; Call with LRDATA = array to return data (pass by reference)
"RTN","LRAPUTL",44,0)
 ;            LRYR1 = Year portion of accession date , i.e. 2009
"RTN","LRAPUTL",45,0)
 ;           LRAANM = Accession area name
"RTN","LRAPUTL",46,0)
 ;           LRAREA = File #63 subscript
"RTN","LRAPUTL",47,0)
 ;            LRYR2 = FileMan accession date
"RTN","LRAPUTL",48,0)
 ;            LRAAN = Accession number
"RTN","LRAPUTL",49,0)
 ; Lookup by accession number or patient name or UID
"RTN","LRAPUTL",50,0)
 N STOP,X,Y,DIR
"RTN","LRAPUTL",51,0)
 ; preserve if caller sets LRSEL, some expect LRSEL back
"RTN","LRAPUTL",52,0)
 I $D(LRSEL) N LRSEL
"RTN","LRAPUTL",53,0)
 K LR("CK"),LRIDT
"RTN","LRAPUTL",54,0)
 S (STOP,LREND)=0
"RTN","LRAPUTL",55,0)
 S LRDATA=0 W !
"RTN","LRAPUTL",56,0)
 S LRSEL=$$SELBY("Select one")
"RTN","LRAPUTL",57,0)
 I 'LRSEL S LRDATA=-1 S LREND=1 D END Q
"RTN","LRAPUTL",58,0)
 ;
"RTN","LRAPUTL",59,0)
 ; Select by accession number
"RTN","LRAPUTL",60,0)
 I LRSEL=1 D  I STOP D END Q
"RTN","LRAPUTL",61,0)
 . S DIR(0)="NO",DIR("A")="Enter Accession Number"
"RTN","LRAPUTL",62,0)
 . S DIR("?")="Enter the year "_LRYR1_" "_LRAANM_" accession number to be updated"
"RTN","LRAPUTL",63,0)
 . D ^DIR S LRAN=Y K DIR
"RTN","LRAPUTL",64,0)
 . I LRAN=""!(LRAN[U) S LRDATA=-1 S STOP=1 S LREND=1
"RTN","LRAPUTL",65,0)
 ;
"RTN","LRAPUTL",66,0)
 ; Select by patient name
"RTN","LRAPUTL",67,0)
 I LRSEL=3 D  I STOP D END Q
"RTN","LRAPUTL",68,0)
 . S DIR(0)="FO",DIR("A")="Enter Patient Name"
"RTN","LRAPUTL",69,0)
 . S DIR("?")="Locate the accession by entering the patient name."
"RTN","LRAPUTL",70,0)
 . D ^DIR S LRPNM=Y K DIR
"RTN","LRAPUTL",71,0)
 . I LRPNM=""!(LRPNM[U) S LRDATA=-1 S STOP=1 S LREND=1 Q
"RTN","LRAPUTL",72,0)
 . D PNAME^LRAPDA
"RTN","LRAPUTL",73,0)
 . I LRAN<1 S STOP=1 Q
"RTN","LRAPUTL",74,0)
 . S LRDATA=LRDFN,LRDATA(1)=$S('LRAU:LRI,1:"")
"RTN","LRAPUTL",75,0)
 ;
"RTN","LRAPUTL",76,0)
 ; Select by UID
"RTN","LRAPUTL",77,0)
 I LRSEL=2 D  Q:LRUID=""
"RTN","LRAPUTL",78,0)
 . N LRQUIT
"RTN","LRAPUTL",79,0)
 . S LRQUIT=0
"RTN","LRAPUTL",80,0)
 . F  D  Q:LRQUIT
"RTN","LRAPUTL",81,0)
 . . S LRUID="" D UID^LRVERA
"RTN","LRAPUTL",82,0)
 . . I LRUID="" S LRQUIT=1 Q
"RTN","LRAPUTL",83,0)
 . . I LRAA=LRAAN,LRAD=LRYR2 S LRQUIT=1 Q
"RTN","LRAPUTL",84,0)
 . . W !!,$C(7),"UID: ",LRUID," not associated with Accession Area: ",LRAANM,!,?32,"and Accession Year: ",LRYR1,!
"RTN","LRAPUTL",85,0)
 ;
"RTN","LRAPUTL",86,0)
 D OE1^LR7OB63D
"RTN","LRAPUTL",87,0)
 W "  for "_LRYR1
"RTN","LRAPUTL",88,0)
 I '$D(^LRO(68,LRAAN,1,LRYR2,1,LRAN,0)) D  Q
"RTN","LRAPUTL",89,0)
 . S MSG="Accession # "_LRAN_" for "_LRYR1_" not in "_LRAANM
"RTN","LRAPUTL",90,0)
 . D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPUTL",91,0)
 . S LRDATA=-1
"RTN","LRAPUTL",92,0)
 ;
"RTN","LRAPUTL",93,0)
 S LRAA=LRAAN,LRAD=LRYR2
"RTN","LRAPUTL",94,0)
 S X=^LRO(68,LRAAN,1,LRYR2,1,LRAN,0),LRDFN=+X
"RTN","LRAPUTL",95,0)
 S LRODT=$P(X,U,4)
"RTN","LRAPUTL",96,0)
 Q:'$D(^LR(LRDFN,0))  S X=^LR(LRDFN,0) D ^LRUP
"RTN","LRAPUTL",97,0)
 W @IOF
"RTN","LRAPUTL",98,0)
 W !?3,PNM,?35,SSN,?55,"DOB: ",$$FMTE^XLFDT(DOB,1)
"RTN","LRAPUTL",99,0)
 S (LRIDT,LRI)=+$P($G(^LRO(68,LRAAN,1,LRYR2,1,LRAN,3)),"^",5)
"RTN","LRAPUTL",100,0)
 S LRORU3=$G(^LRO(68,LRAAN,1,LRYR2,1,LRAN,.3))
"RTN","LRAPUTL",101,0)
 I LRAREA'="AU",'$D(^LR(LRDFN,LRAREA,LRI,0)) D  Q
"RTN","LRAPUTL",102,0)
 . W $C(7)
"RTN","LRAPUTL",103,0)
 . S MSG(1)="Inverse date missing or incorrect in Accession Area file for"
"RTN","LRAPUTL",104,0)
 . S MSG(1,"F")="!"
"RTN","LRAPUTL",105,0)
 . S MSG(2)=LRAANM_"  Year: "_$E(LRYR2,2,3)_"  Accession: "_LRAN
"RTN","LRAPUTL",106,0)
 . S MSG(2,"F")="!"
"RTN","LRAPUTL",107,0)
 . D EN^DDIOL(.MSG) K MSG
"RTN","LRAPUTL",108,0)
 . S LRDATA=-1
"RTN","LRAPUTL",109,0)
 D DEMGRPH(LRAN,LRAD,LRAA)
"RTN","LRAPUTL",110,0)
 S LRDATA=LRDFN,LRDATA(1)=LRI
"RTN","LRAPUTL",111,0)
 Q
"RTN","LRAPUTL",112,0)
 ;
"RTN","LRAPUTL",113,0)
 ;
"RTN","LRAPUTL",114,0)
DEMGRPH(LRAN,LRAD,LRAA) ; Demographics
"RTN","LRAPUTL",115,0)
 N LRIENS,DA,LRIDT,LRQUIT,LRSPECID,LREDT,LRB
"RTN","LRAPUTL",116,0)
 S LRQUIT=0
"RTN","LRAPUTL",117,0)
 S LRIENS=LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPUTL",118,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRIENS,15,"E")
"RTN","LRAPUTL",119,0)
 S LRSPECID=LRSPECID_" ["_$$GET1^DIQ(68.02,LRIENS,16)_"]"
"RTN","LRAPUTL",120,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRAPUTL",121,0)
 S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRAPUTL",122,0)
 W !?5,"Collection Date: "_$S(LREDT:$$FMTE^XLFDT(LREDT,1),1:"<None on file>")
"RTN","LRAPUTL",123,0)
 W !?10,LRSPECID,!
"RTN","LRAPUTL",124,0)
 I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) W !?15,"PCE ENC # "_^("PCE")
"RTN","LRAPUTL",125,0)
 I $G(LRSS)'="",$O(^LR(LRDFN,LRSS,LRIDT,.1,0)) D
"RTN","LRAPUTL",126,0)
 . N LRX
"RTN","LRAPUTL",127,0)
 . W !?5,"Tissue Specimen(s): ",!
"RTN","LRAPUTL",128,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,LRSS,LRIDT,.1,LRX)) Q:LRX<1!(LRQUIT)  D
"RTN","LRAPUTL",129,0)
 . . I $Y>(IOSL-10) D PG Q:$G(LRQUIT)  D
"RTN","LRAPUTL",130,0)
 . . . W @IOF,!?3,PNM,?35,SSN,?55,"DOB: ",$$FMTE^XLFDT(DOB,1),!
"RTN","LRAPUTL",131,0)
 . . W ?15,$P($G(^LR(LRDFN,LRSS,LRIDT,.1,LRX,0)),U),!
"RTN","LRAPUTL",132,0)
 I $O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) D
"RTN","LRAPUTL",133,0)
 . W ?5,"Test(s): "
"RTN","LRAPUTL",134,0)
 . S LRX=0
"RTN","LRAPUTL",135,0)
 . F  S LRX=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRX)) Q:LRX<1!($G(LRQUIT))  D
"RTN","LRAPUTL",136,0)
 . . I $Y>(IOSL-10) D PG Q:$G(LRQUIT)  W @IOF
"RTN","LRAPUTL",137,0)
 . . W ?15,$P($G(^LAB(60,+LRX,0)),U)," ",$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRX,0),U,6),!
"RTN","LRAPUTL",138,0)
 S LRB=0
"RTN","LRAPUTL",139,0)
 F  S LRB=$O(^LR(LRDFN,LRSS,LRIDT,99,LRB)) Q:'LRB  D
"RTN","LRAPUTL",140,0)
 . W !,"COMMENTS:",^LR(LRDFN,LRSS,LRIDT,99,LRB,0)
"RTN","LRAPUTL",141,0)
 ;
"RTN","LRAPUTL",142,0)
 Q
"RTN","LRAPUTL",143,0)
 ;
"RTN","LRAPUTL",144,0)
 ;
"RTN","LRAPUTL",145,0)
GETDOCS(LRDOCS,LRDFN,LRSS,LRI,LRSF) ; Return PCP(inpatient PC/attending/outpt PC/outpt assoc PC/outpt attending) and ordering provider
"RTN","LRAPUTL",146,0)
 N DFN,LRDPF,LRIENS,LRFLD,LRPROVIDER,LRX,X
"RTN","LRAPUTL",147,0)
 S:LRSS="AU" LRSF=63
"RTN","LRAPUTL",148,0)
 S LRDOCS=0
"RTN","LRAPUTL",149,0)
 I '+$G(LRDFN)!($G(LRSS)="")!('+$G(LRSF)) Q
"RTN","LRAPUTL",150,0)
 I "AUSPCYEM"'[LRSS Q
"RTN","LRAPUTL",151,0)
 ;
"RTN","LRAPUTL",152,0)
 I LRSS'="AU" S LRIENS=LRI_","_LRDFN,LRFLD=.07
"RTN","LRAPUTL",153,0)
 E  S LRIENS=LRDFN_",",LRFLD=12.1
"RTN","LRAPUTL",154,0)
 S LRPROVIDER=$$GET1^DIQ(LRSF,LRIENS,LRFLD,"I")
"RTN","LRAPUTL",155,0)
 I LRPROVIDER>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=LRPROVIDER_"^"_$$NAME^XUSER(LRPROVIDER,"F")_"^Ordering Provider"
"RTN","LRAPUTL",156,0)
 ;
"RTN","LRAPUTL",157,0)
 S LRDPF=$P($G(^LR(LRDFN,0)),"^",2),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","LRAPUTL",158,0)
 I LRDPF'=2 Q
"RTN","LRAPUTL",159,0)
 ;
"RTN","LRAPUTL",160,0)
 N LRDT,VADMVT,VAINDT
"RTN","LRAPUTL",161,0)
 I LRSS="AU" S LRDT=$P($G(^LR(LRDFN,"AU")),"^")
"RTN","LRAPUTL",162,0)
 E  S LRDT=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^")
"RTN","LRAPUTL",163,0)
 I LRDT<1 S LRDT=DT
"RTN","LRAPUTL",164,0)
 S VAINDT=LRDT D ADM^VADPT2
"RTN","LRAPUTL",165,0)
 I VADMVT D
"RTN","LRAPUTL",166,0)
 . N VAHOW,VAIN,VAROOT
"RTN","LRAPUTL",167,0)
 . D INP^VADPT
"RTN","LRAPUTL",168,0)
 . I VAIN(2) S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=+VAIN(2)_"^"_$$NAME^XUSER(+VAIN(2),"F")_"^Inpatient Primary Care Provider"
"RTN","LRAPUTL",169,0)
 . I VAIN(11) S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=+VAIN(11)_"^"_$$NAME^XUSER(+VAIN(11),"F")_"^Inpatient Attending Provider"
"RTN","LRAPUTL",170,0)
 S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,1)
"RTN","LRAPUTL",171,0)
 I LRX>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=+LRX_"^"_$$NAME^XUSER(+LRX,"F")_"^Outpatient Primary Care Provider"
"RTN","LRAPUTL",172,0)
 S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,2)
"RTN","LRAPUTL",173,0)
 I LRX>0 S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=+LRX_"^"_$$NAME^XUSER(+LRX,"F")_"^Outpatient Attending Provider"
"RTN","LRAPUTL",174,0)
 ;
"RTN","LRAPUTL",175,0)
 ; Check for surgery case reference and retrieve surgeon and attending
"RTN","LRAPUTL",176,0)
 K LRIENS
"RTN","LRAPUTL",177,0)
 S LRIENS=LRDFN_","_LRSS_","_LRI_",0"
"RTN","LRAPUTL",178,0)
 S LRX=$O(^LR(LRDFN,"EPR","AD",LRIENS,1,0))
"RTN","LRAPUTL",179,0)
 I LRX>0 D
"RTN","LRAPUTL",180,0)
 . N LRDATA,LRJ,LRREF,LRSRDATA,LRSRTN,LRTITLE
"RTN","LRAPUTL",181,0)
 . S LRREF=LRX_","_LRDFN_","
"RTN","LRAPUTL",182,0)
 . D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRAPUTL",183,0)
 . S LRSRTN=LRDATA(63.00013,LRREF,1,"I")
"RTN","LRAPUTL",184,0)
 . I $P(LRSRTN,";",2)'="SRF(" Q
"RTN","LRAPUTL",185,0)
 . D SRCASE^LRUEPR(.LRSRDATA,+LRSRTN)
"RTN","LRAPUTL",186,0)
 . I $G(LRSRDATA("ERR")) D  Q
"RTN","LRAPUTL",187,0)
 . . S LRMD("ERR")=LRSRDATA("ERR")
"RTN","LRAPUTL",188,0)
 . . D SRCASERR^LRUEPR(LRREF,LRSRTN,LRSRDATA("ERR"))
"RTN","LRAPUTL",189,0)
 . F LRJ=.14,.164,123,124 D
"RTN","LRAPUTL",190,0)
 . . S LRX=LRSRDATA(130,+LRSRTN_",",LRJ,"I")
"RTN","LRAPUTL",191,0)
 . . I LRX="" Q
"RTN","LRAPUTL",192,0)
 . . S LRTITLE=$S(LRJ=.14:"Surgeon",LRJ=.164:"Attending Surgeon",LRJ=123:"Provider",LRJ=124:"Attending Provider",1:"")
"RTN","LRAPUTL",193,0)
 . . I LRPROVIDER,LRX=LRPROVIDER S LRDOCS(1)=LRDOCS(1)_"/"_LRTITLE Q
"RTN","LRAPUTL",194,0)
 . . S LRDOCS=LRDOCS+1,LRDOCS(LRDOCS)=LRX_"^"_$$NAME^XUSER(LRX,"F")_"^"_LRTITLE
"RTN","LRAPUTL",195,0)
 Q
"RTN","LRAPUTL",196,0)
 ;
"RTN","LRAPUTL",197,0)
 ;
"RTN","LRAPUTL",198,0)
RELEASE(LRRELEAS,LRDFN,LRSS,LRI) ;
"RTN","LRAPUTL",199,0)
 ; Determine if report has been released
"RTN","LRAPUTL",200,0)
 N LRFILE,LRFLDS,LRIENS,LRRELAR,LRCT
"RTN","LRAPUTL",201,0)
 I '+$G(LRDFN) S LRRELEAS=0 Q
"RTN","LRAPUTL",202,0)
 I $G(LRSS)=""!("AUSPEMCY"'[LRSS) S LRRELEAS=0 Q
"RTN","LRAPUTL",203,0)
 I LRSS'="AU",'+$G(LRI) S LRRELEAS=0 Q
"RTN","LRAPUTL",204,0)
 I LRSS="AU" D
"RTN","LRAPUTL",205,0)
 . S LRFILE=63,LRFLDS="14.7;14.8",LRIENS=LRDFN_","
"RTN","LRAPUTL",206,0)
 I LRSS'="AU" D
"RTN","LRAPUTL",207,0)
 . S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPUTL",208,0)
 . S LRFLDS=".11;.13;.15"
"RTN","LRAPUTL",209,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPUTL",210,0)
 Q:LRFILE=""
"RTN","LRAPUTL",211,0)
 D GETS^DIQ(LRFILE,LRIENS,LRFLDS,"I","LRRELAR")
"RTN","LRAPUTL",212,0)
 F LRCT=1:1:$S(LRSS="AU":2,1:3) D
"RTN","LRAPUTL",213,0)
 . S LRRELEAS(LRCT)=+$G(LRRELAR(LRFILE,LRIENS,$P(LRFLDS,";",LRCT),"I"))
"RTN","LRAPUTL",214,0)
 Q
"RTN","LRAPUTL",215,0)
 ;
"RTN","LRAPUTL",216,0)
 ;
"RTN","LRAPUTL",217,0)
TIUCHK(LRPTR,LRDFN,LRSS,LRI) ;
"RTN","LRAPUTL",218,0)
 ; Check to see if report is in TIU
"RTN","LRAPUTL",219,0)
 N LRTREC,LRROOT,LRFILE,LRIENS,LRFLD,LRREL
"RTN","LRAPUTL",220,0)
 I LRSS=""!("AUSPEMCY"'[LRSS) S LRPTR=0 Q
"RTN","LRAPUTL",221,0)
 I LRSS="AU" D
"RTN","LRAPUTL",222,0)
 . S LRROOT="^LR(LRDFN,101,""A"")",LRIENS=LRDFN_","
"RTN","LRAPUTL",223,0)
 . S LRFILE=63.101
"RTN","LRAPUTL",224,0)
 I LRSS'="AU" D
"RTN","LRAPUTL",225,0)
 . S LRROOT="^LR(LRDFN,LRSS,LRI,.05,""A"")"
"RTN","LRAPUTL",226,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPUTL",227,0)
 . S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPUTL",228,0)
 S LRTREC=$O(@(LRROOT),-1)
"RTN","LRAPUTL",229,0)
 I LRFILE=""!(LRTREC="") S LRPTR=0 Q
"RTN","LRAPUTL",230,0)
 S LRIENS=LRTREC_","_LRIENS
"RTN","LRAPUTL",231,0)
 S LRPTR=+$$GET1^DIQ(LRFILE,LRIENS,1,"I")
"RTN","LRAPUTL",232,0)
 S:LRPTR LRPTR("D")=+$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPUTL",233,0)
 I LRSS="AU" D
"RTN","LRAPUTL",234,0)
 . S LRFILE=63,LRIENS=LRDFN_",",LRFLD=14.7
"RTN","LRAPUTL",235,0)
 I LRSS'="AU" D
"RTN","LRAPUTL",236,0)
 . S LRFLD=$S(LRSS="CY":9,LRSS="SP":8,LRSS="EM":2,1:"")
"RTN","LRAPUTL",237,0)
 . Q:LRFLD=""
"RTN","LRAPUTL",238,0)
 . S LRFILE=+$$GET1^DID(63,LRFLD,"","SPECIFIER"),LRFLD=.11
"RTN","LRAPUTL",239,0)
 . Q:LRFILE=""
"RTN","LRAPUTL",240,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPUTL",241,0)
 S LRREL=+$$GET1^DIQ(LRFILE,LRIENS,LRFLD,"I")
"RTN","LRAPUTL",242,0)
 I 'LRREL K LRPTR S LRPTR=0 Q
"RTN","LRAPUTL",243,0)
 I LRREL'=+$G(LRPTR("D")) K LRPTR S LRPTR=0
"RTN","LRAPUTL",244,0)
 Q
"RTN","LRAPUTL",245,0)
 ;
"RTN","LRAPUTL",246,0)
 ;
"RTN","LRAPUTL",247,0)
ESIGINF(LRESINF,LRDFN,LRSS,LRI) ;Return Esig Info
"RTN","LRAPUTL",248,0)
 N LRTIUDA,LRESINF1
"RTN","LRAPUTL",249,0)
 Q:'$D(LRDFN)!('$D(LRSS))
"RTN","LRAPUTL",250,0)
 Q:LRSS=""!("AUSPEMCY"'[LRSS)
"RTN","LRAPUTL",251,0)
 D TIUCHK(.LRTIUDA,LRDFN,LRSS,$G(LRI))
"RTN","LRAPUTL",252,0)
 Q:'+$G(LRTIUDA)
"RTN","LRAPUTL",253,0)
 D EXTRACT^TIULQ(LRTIUDA,"LRESINF1(""ESIG"")",,,,,,1)
"RTN","LRAPUTL",254,0)
 Q:'$D(LRESINF1("ESIG",LRTIUDA))
"RTN","LRAPUTL",255,0)
 S LRESINF(1)=$G(LRESINF1("ESIG",LRTIUDA,1501,"E"))
"RTN","LRAPUTL",256,0)
 S LRESINF(2)=$G(LRESINF1("ESIG",LRTIUDA,1503,"E"))
"RTN","LRAPUTL",257,0)
 Q
"RTN","LRAPUTL",258,0)
 ;
"RTN","LRAPUTL",259,0)
 ;
"RTN","LRAPUTL",260,0)
NEWLN(LRTEXT,TAB) ;
"RTN","LRAPUTL",261,0)
 S LCT=$G(LCT)+1,BTAB=0
"RTN","LRAPUTL",262,0)
 S TAB=+TAB
"RTN","LRAPUTL",263,0)
 D GLBWRT(LRTEXT,TAB)
"RTN","LRAPUTL",264,0)
 Q
"RTN","LRAPUTL",265,0)
 ;
"RTN","LRAPUTL",266,0)
 ;
"RTN","LRAPUTL",267,0)
GLBWRT(LRTEXT,TAB) ;Write to global
"RTN","LRAPUTL",268,0)
 D GLB(LCT,TAB,BTAB,LRTEXT,GROOT,.ATAB)
"RTN","LRAPUTL",269,0)
 S BTAB=ATAB
"RTN","LRAPUTL",270,0)
 Q
"RTN","LRAPUTL",271,0)
 ;
"RTN","LRAPUTL",272,0)
 ;
"RTN","LRAPUTL",273,0)
GLB(LINE,TAB,BTAB,TEXT,ROOT,ATAB) ;
"RTN","LRAPUTL",274,0)
 ; This subroutine is used to store report text to a global.
"RTN","LRAPUTL",275,0)
 ; Input variables:
"RTN","LRAPUTL",276,0)
 ; LINE = Current line number
"RTN","LRAPUTL",277,0)
 ; TAB  = Desired tab position (not required)
"RTN","LRAPUTL",278,0)
 ; BTAB = Current tab position BEFORE text is stored
"RTN","LRAPUTL",279,0)
 ; TEXT = Text string to be stored
"RTN","LRAPUTL",280,0)
 ; ROOT = Global root
"RTN","LRAPUTL",281,0)
 ;
"RTN","LRAPUTL",282,0)
 ; Output variables:
"RTN","LRAPUTL",283,0)
 ; ATAB = Current tab position after text storage
"RTN","LRAPUTL",284,0)
 ;
"RTN","LRAPUTL",285,0)
 N LRSPC,LRINC,FTEXT,LRLINE
"RTN","LRAPUTL",286,0)
 S LRSPC="" F LRINC=1:1:80 S LRSPC=LRSPC_" "
"RTN","LRAPUTL",287,0)
 S:BTAB="" BTAB=0
"RTN","LRAPUTL",288,0)
 S:+TAB=0 TAB=BTAB
"RTN","LRAPUTL",289,0)
 S FTEXT=TEXT
"RTN","LRAPUTL",290,0)
 I TAB,TAB>BTAB S FTEXT=$E(LRSPC,1,TAB-BTAB)_TEXT
"RTN","LRAPUTL",291,0)
 S:'$D(@(ROOT_"0)")) @(ROOT_"0)")="^^^^"_DT_"^"
"RTN","LRAPUTL",292,0)
 S LRLINE=LINE,LINE=LINE_",0"
"RTN","LRAPUTL",293,0)
 S:'$D(@(ROOT_LINE_")")) @(ROOT_LINE_")")=""
"RTN","LRAPUTL",294,0)
 S @(ROOT_LINE_")")=@(ROOT_LINE_")")_FTEXT
"RTN","LRAPUTL",295,0)
 S $P(@(ROOT_"0)"),"^",3,4)=LRLINE_"^"_LRLINE
"RTN","LRAPUTL",296,0)
 S ATAB=TAB+$L(TEXT)
"RTN","LRAPUTL",297,0)
 Q
"RTN","LRAPUTL",298,0)
 ;
"RTN","LRAPUTL",299,0)
 ;
"RTN","LRAPUTL",300,0)
PROVIDR ; Entry of provider taken from PRO^LRCAPES
"RTN","LRAPUTL",301,0)
 S LREND=0
"RTN","LRAPUTL",302,0)
 D
"RTN","LRAPUTL",303,0)
 . N LRPRONM,DIR,DIRUT,DUOUT,X,Y
"RTN","LRAPUTL",304,0)
 . S LRPRONM=$$GET1^DIQ(200,+$G(LRPRO),.01,"I")
"RTN","LRAPUTL",305,0)
 . I $L(LRPRONM),$D(^VA(200,"AK.PROVIDER",LRPRONM,+$G(LRPRO)))#2,$$GET^XUA4A72(+$G(LRPRO),DT)>0 S DIR("B")=LRPRONM
"RTN","LRAPUTL",306,0)
 . S DIR("A")="Provider"
"RTN","LRAPUTL",307,0)
 . S LRPRO=0,DIR(0)="PO^200:ENMZ"
"RTN","LRAPUTL",308,0)
 . S DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$$GET^XUA4A72(+Y,DT)>0"
"RTN","LRAPUTL",309,0)
 . D ^DIR
"RTN","LRAPUTL",310,0)
 . I Y>1 S LRPRO=+Y
"RTN","LRAPUTL",311,0)
 I '$G(LRPRO) D  D END^LRCAPES Q
"RTN","LRAPUTL",312,0)
 . W !?5,"No Active Provider Selected",!
"RTN","LRAPUTL",313,0)
 . S LRNOP=1
"RTN","LRAPUTL",314,0)
 . S LRQUIT=1
"RTN","LRAPUTL",315,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 D  D END^LRCAPES
"RTN","LRAPUTL",316,0)
 . W !?5,"The accession is corrupt - missing zero node",!
"RTN","LRAPUTL",317,0)
 . S LRNOP="7^Corrupt Accession"
"RTN","LRAPUTL",318,0)
 . S LRQUIT=1
"RTN","LRAPUTL",319,0)
 Q
"RTN","LRAPUTL",320,0)
 ;
"RTN","LRAPUTL",321,0)
 ;
"RTN","LRAPUTL",322,0)
REFRRL ; Display informational message on referrals
"RTN","LRAPUTL",323,0)
 N LRMSG
"RTN","LRAPUTL",324,0)
 S LRMSG(1)=$$CJ^XLFSTR("*** NOTE: This "_$P(^DIC(LRDPF,0),"^")_" report will not be stored in TIU",IOM),LRMSG(1,"F")="!!"
"RTN","LRAPUTL",325,0)
 S LRMSG(2)=$$CJ^XLFSTR("and therefore does not have an electronic signature.",IOM)
"RTN","LRAPUTL",326,0)
 S LRMSG(3)=$$CJ^XLFSTR("A hardcopy signature will be required for this report.",IOM)
"RTN","LRAPUTL",327,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPUTL",328,0)
 Q
"RTN","LRAPUTL",329,0)
 ;
"RTN","LRAPUTL",330,0)
 ;
"RTN","LRAPUTL",331,0)
PG ; Page break
"RTN","LRAPUTL",332,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","LRAPUTL",333,0)
 S DIR(0)="E" D ^DIR
"RTN","LRAPUTL",334,0)
 I $G(DIRUT) S LRQUIT=1
"RTN","LRAPUTL",335,0)
 Q
"RTN","LRAPUTL",336,0)
 ;
"RTN","LRAPUTL",337,0)
 ;
"RTN","LRAPUTL",338,0)
END ;
"RTN","LRAPUTL",339,0)
 K LRYRIN,LRAREA,LRAANM
"RTN","LRAPUTL",340,0)
 Q
"RTN","LRAPUTL",341,0)
 ;
"RTN","LRAPUTL",342,0)
 ;
"RTN","LRAPUTL",343,0)
SELBY(X1) ; Select by accession number or unique identifier(UID) or patient name
"RTN","LRAPUTL",344,0)
 ; Call with X1= message prompt
"RTN","LRAPUTL",345,0)
 ; Returns Y=0 (abort)
"RTN","LRAPUTL",346,0)
 ;          =1 (accession number)
"RTN","LRAPUTL",347,0)
 ;          =2 (unique identifier)
"RTN","LRAPUTL",348,0)
 ;          =3 (patient name)
"RTN","LRAPUTL",349,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPUTL",350,0)
 S DIR(0)="SO^1:Accession number;2:Unique Identifier (UID);3:Patient Name",DIR("A")=X1
"RTN","LRAPUTL",351,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR AP REPORT SELECTION",1,"Q")
"RTN","LRAPUTL",352,0)
 S DIR("B")=$S(X:X,1:1)
"RTN","LRAPUTL",353,0)
 D ^DIR
"RTN","LRAPUTL",354,0)
 I $D(DIRUT) S Y=0
"RTN","LRAPUTL",355,0)
 Q Y
"RTN","LRAPUTL",356,0)
 ;
"RTN","LRAPUTL",357,0)
 ;
"RTN","LRAPUTL",358,0)
GETPCP(LRPCP,LRDFN,LRSS,LRIDT) ; Return PCP(inpatient PC/attending/outpt PC)
"RTN","LRAPUTL",359,0)
 ;
"RTN","LRAPUTL",360,0)
 ; Call with LRPCP = primary care provider array (pass by reference)
"RTN","LRAPUTL",361,0)
 ;           LRDFN = internal entry in file #63
"RTN","LRAPUTL",362,0)
 ;            LRSS = file #63 subscript
"RTN","LRAPUTL",363,0)
 ;           LRIDT = file #63 specimen inverse date/time
"RTN","LRAPUTL",364,0)
 ;
"RTN","LRAPUTL",365,0)
 ; Returns   LRPCP    = IEN of provider in file #200 (0 if none)
"RTN","LRAPUTL",366,0)
 ;           LRPCP(1) = standardized formatted name (null if none)
"RTN","LRAPUTL",367,0)
 ;
"RTN","LRAPUTL",368,0)
 N DFN,LRDPF,LRDT,LRX,VADMVT,VAINDT
"RTN","LRAPUTL",369,0)
 ;
"RTN","LRAPUTL",370,0)
 S LRPCP=0,LRPCP(1)=""
"RTN","LRAPUTL",371,0)
 I +$G(LRDFN)<0 Q
"RTN","LRAPUTL",372,0)
 ;
"RTN","LRAPUTL",373,0)
 I LRSS'?1(1"SP",1"CY",1"EM",1"AU") Q
"RTN","LRAPUTL",374,0)
 ;
"RTN","LRAPUTL",375,0)
 S LRDPF=$P($G(^LR(LRDFN,0)),"^",2),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","LRAPUTL",376,0)
 I LRDPF'=2 Q
"RTN","LRAPUTL",377,0)
 ;
"RTN","LRAPUTL",378,0)
 ; Retreive specimen collection date/time otherwise default to today
"RTN","LRAPUTL",379,0)
 I LRSS="AU" S LRDT=$P($G(^LR(LRDFN,"AU")),"^")
"RTN","LRAPUTL",380,0)
 E  S LRDT=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^")
"RTN","LRAPUTL",381,0)
 I LRDT<1 S LRDT=DT
"RTN","LRAPUTL",382,0)
 ;
"RTN","LRAPUTL",383,0)
 ; Check if patient was inpatient on specimen date/time
"RTN","LRAPUTL",384,0)
 ;  and retrieve inpatient primary care provider (VAIN(2)) or attending (VAIN(11))
"RTN","LRAPUTL",385,0)
 S VAINDT=LRDT D ADM^VADPT2
"RTN","LRAPUTL",386,0)
 I VADMVT D
"RTN","LRAPUTL",387,0)
 . N VAHOW,VAIN,VAROOT
"RTN","LRAPUTL",388,0)
 . D INP^VADPT
"RTN","LRAPUTL",389,0)
 . I VAIN(2) S LRPCP=+VAIN(2) Q
"RTN","LRAPUTL",390,0)
 . I VAIN(11) S LRPCP=+VAIN(11)
"RTN","LRAPUTL",391,0)
 ;
"RTN","LRAPUTL",392,0)
 ; If no inpatient primary care/attending then check for outpatient PCP
"RTN","LRAPUTL",393,0)
 ;    1 - PC Practitioner
"RTN","LRAPUTL",394,0)
 ;      then   2 - Attending
"RTN","LRAPUTL",395,0)
 I LRPCP<1 D
"RTN","LRAPUTL",396,0)
 . S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,1)
"RTN","LRAPUTL",397,0)
 . I LRX>0 S LRPCP=+LRX Q
"RTN","LRAPUTL",398,0)
 . S LRX=$$OUTPTPR^SDUTL3(DFN,LRDT,2)
"RTN","LRAPUTL",399,0)
 . I LRX>0 S LRPCP=+LRX Q
"RTN","LRAPUTL",400,0)
 ;
"RTN","LRAPUTL",401,0)
 ; If primary care provider then return formatted name
"RTN","LRAPUTL",402,0)
 I LRPCP D
"RTN","LRAPUTL",403,0)
 . N LRNAME
"RTN","LRAPUTL",404,0)
 . S LRNAME("FILE")=200,LRNAME("FIELD")=.01,LRNAME("IENS")=LRPCP_","
"RTN","LRAPUTL",405,0)
 . S LRPCP(1)=$$NAMEFMT^XLFNAME(.LRNAME,"G","DcMP")
"RTN","LRAPUTL",406,0)
 ;
"RTN","LRAPUTL",407,0)
 Q
"RTN","LRBEBA3")
0^215^B65375352
"RTN","LRBEBA3",1,0)
LRBEBA3 ;DALOI/JAH/FHS - ORDERING AND RESULTING OUTPATIENT ;10/04/11
"RTN","LRBEBA3",2,0)
 ;;5.2;LAB SERVICE;**291,359,352,350**;Sep 27, 1994;Build 230
"RTN","LRBEBA3",3,0)
 ;
"RTN","LRBEBA3",4,0)
BLDAR(LRBEDFN,LRODT,LRSN,LRBEAR,LRBEY,LRBETEST,LRBEPAN,LRBEDEL) ; Build LRBEAR array with
"RTN","LRBEBA3",5,0)
 ; CIDC information
"RTN","LRBEBA3",6,0)
 N LRBEODT,LRBEIEN,LRBETST,LRBETS,LRJ,N,NX,P,X,XX,REQX,OK
"RTN","LRBEBA3",7,0)
 S LRBEAR(LRBEDFN,"DSS ID")=LROOS
"RTN","LRBEBA3",8,0)
 S LRBEAR(LRBEDFN,"ORDGX")="O"
"RTN","LRBEBA3",9,0)
 S LRBEAR(LRBEDFN,"DOS")=LRBECDT
"RTN","LRBEBA3",10,0)
 S LRBEAR(LRBEDFN,"PAT")=$G(LRBEDFN)
"RTN","LRBEBA3",11,0)
 S LRBEAR(LRBEDFN,"POS")=LROOS
"RTN","LRBEBA3",12,0)
 S LRBEAR(LRBEDFN,"DEL")=LRBEDEL
"RTN","LRBEBA3",13,0)
 S LRBEAR(LRBEDFN,"USR")=DUZ
"RTN","LRBEBA3",14,0)
 S LRBEIEN=LRSN_","_LRODT_","
"RTN","LRBEBA3",15,0)
 S LRBEAR(LRBEDFN,"ORDPRO")=$$GET1^DIQ(69.01,LRBEIEN,7,"I")
"RTN","LRBEBA3",16,0)
 S:'+$G(LRSAMP) LRSAMP=$$GET1^DIQ(69.01,LRBEIEN,3,"I")
"RTN","LRBEBA3",17,0)
 ;reset LRBETEST, LRBEY for panel tests
"RTN","LRBEBA3",18,0)
 S LRBETS="" F  S LRBETS=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETS)) Q:'LRBETS  D
"RTN","LRBEBA3",19,0)
 .S LRJ=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETS,0))
"RTN","LRBEBA3",20,0)
 .Q:($P(^LRO(69,LRODT,1,LRSN,2,LRJ,0),U,9)="CA")
"RTN","LRBEBA3",21,0)
 .I $G(ORIEN),$P(^LRO(69,LRODT,1,LRSN,2,LRJ,0),U,7)'=ORIEN Q
"RTN","LRBEBA3",22,0)
 .I ($G(^LAB(60,LRBETS,12))),($D(^LAB(60,LRBETS,0))#2),'$L($P($G(^LAB(60,LRBETS,0)),U,5)) S LRBEPAN(LRBETS)=""
"RTN","LRBEBA3",23,0)
 .S OK=0,N=0 F  S N=$O(LRBETEST(N)) Q:'N  I LRBETS=+LRBETEST(N) S OK=1
"RTN","LRBEBA3",24,0)
 .I 'OK S N=$O(LRBETEST(""),-1),N=N+1,LRBETEST(N)=LRBETS_U_^LAB(60,LRBETS,0),LRBETEST(N,"P")=LRBETS_U_$$NLT^LRVER1(LRBETS)
"RTN","LRBEBA3",25,0)
 .S NX=0 F  S NX=$O(^LAB(60,LRBETS,2,NX)) Q:'NX  D
"RTN","LRBEBA3",26,0)
 ..S X=+^LAB(60,LRBETS,2,NX,0)
"RTN","LRBEBA3",27,0)
 ..S XX=$P($P(^LAB(60,X,0),U,5),";",2),REQX=$P(^(0),U,17)
"RTN","LRBEBA3",28,0)
 ..I XX,$D(LRBESB(XX)) S P(LRBETS,XX,X)=""
"RTN","LRBEBA3",29,0)
 ..I XX,$D(LRBEPAN(LRBETS)),REQX S P(LRBETS,XX,X)="R"
"RTN","LRBEBA3",30,0)
 ..;if XX null, then possibly another panel
"RTN","LRBEBA3",31,0)
 ..I 'XX D PARRAY(X,LRBETS,.P)
"RTN","LRBEBA3",32,0)
 .;reset LRBEY array;
"RTN","LRBEBA3",33,0)
 .;1st subscript is panel test; 2nd subscript is data identifier of atomic test
"RTN","LRBEBA3",34,0)
 .I $D(P(LRBETS)) D
"RTN","LRBEBA3",35,0)
 ..;retain original LRBEY array node if atomic test exists as a separate accession
"RTN","LRBEBA3",36,0)
 ..I '$D(^LRO(68,$G(LRAA),1,$G(LRAD),1,$G(LRAN),4,LRBETS,0)) K LRBEY(LRBETS)
"RTN","LRBEBA3",37,0)
 ..S XX=0 F  S XX=$O(P(LRBETS,XX)) Q:'XX  D
"RTN","LRBEBA3",38,0)
 ...S LRBEY(LRBETS,XX)=""
"RTN","LRBEBA3",39,0)
 ...S X=$O(P(LRBETS,XX,0))
"RTN","LRBEBA3",40,0)
 ...I P(LRBETS,XX,X)="R" S LRBEY(LRBETS,XX,"R")=X
"RTN","LRBEBA3",41,0)
 ;continue
"RTN","LRBEBA3",42,0)
 S LRBETS="" F  S LRBETS=$O(LRBETEST(LRBETS)) Q:LRBETS=""  D
"RTN","LRBEBA3",43,0)
 .S LRBETST=$P(LRBETEST(LRBETS),U,1)
"RTN","LRBEBA3",44,0)
 .D BLDAR^LRBEBA2(LRBEDFN,LRODT,LRSN,LRBETS,LRSAMP,LRSPEC,LRBETST,.LRBEAR)
"RTN","LRBEBA3",45,0)
 Q
"RTN","LRBEBA3",46,0)
 ;
"RTN","LRBEBA3",47,0)
PARRAY(XTEST,PTEST,P) ;
"RTN","LRBEBA3",48,0)
 N NX,X,XX,REQX
"RTN","LRBEBA3",49,0)
 S NX=0 F  S NX=$O(^LAB(60,XTEST,2,NX)) Q:'NX  D
"RTN","LRBEBA3",50,0)
 .S X=+^LAB(60,XTEST,2,NX,0)
"RTN","LRBEBA3",51,0)
 .S XX=$P($P(^LAB(60,X,0),U,5),";",2),REQX=$P(^(0),U,17)
"RTN","LRBEBA3",52,0)
 .I XX,$D(LRBESB(XX)) S P(PTEST,XX,X)=""
"RTN","LRBEBA3",53,0)
 .I XX,$D(LRBEPAN(PTEST)),REQX S P(PTEST,XX,X)="R"
"RTN","LRBEBA3",54,0)
 Q
"RTN","LRBEBA3",55,0)
 ;
"RTN","LRBEBA3",56,0)
QRYADD(LRODT,LRSN,LRTS,LRBEDFN,LRBESMP,LRBESPC,LRBETS,LRBEX,LRBEXD) ; Query #69 for
"RTN","LRBEBA3",57,0)
 ; default LRBEDGX and SC/EI
"RTN","LRBEBA3",58,0)
 N LRBEA,LRDGX,LRDX,LRDGXD
"RTN","LRBEBA3",59,0)
 S LRDGX=0
"RTN","LRBEBA3",60,0)
 F  S LRDGX=$O(^LRO(69,LRODT,1,LRSN,2,LRTS,2,LRDGX)) Q:LRDGX<1  D
"RTN","LRBEBA3",61,0)
 .S LRDGXD=2
"RTN","LRBEBA3",62,0)
 .S LRBEPTDT=$G(^LRO(69,LRODT,1,LRSN,2,LRTS,2,LRDGX,0)) Q:'LRBEPTDT
"RTN","LRBEBA3",63,0)
 .S LRBEA=$P(LRBEPTDT,U,1)_"^^^"_$P(LRBEPTDT,U,4)_U_$P(LRBEPTDT,U,5)
"RTN","LRBEBA3",64,0)
 .S LRBEA=LRBEA_U_$P(LRBEPTDT,U,2)_U_$P(LRBEPTDT,U,6)_U_$P(LRBEPTDT,U,8)
"RTN","LRBEBA3",65,0)
 .S LRBEA=LRBEA_U_$P(LRBEPTDT,U,7)_U_$P(LRBEPTDT,U,3)_U_$P(LRBEPTDT,U,10)
"RTN","LRBEBA3",66,0)
 .I $P(LRBEPTDT,U,9)=1 S LRBEA=LRBEA_U_$P(LRBEPTDT,U,9),LRDGXD=1
"RTN","LRBEBA3",67,0)
 .S LRBEX(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS,$P(LRBEA,U))=LRBEA
"RTN","LRBEBA3",68,0)
 .S LRBEXD(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS,LRDGXD,$P(LRBEA,U))=LRBEA
"RTN","LRBEBA3",69,0)
 Q
"RTN","LRBEBA3",70,0)
 ;
"RTN","LRBEBA3",71,0)
ELIG(DFN) ; Display eligibility and disabilities
"RTN","LRBEBA3",72,0)
 D ELIG^VADPT W !," Eligibility: "_$P(VAEL(1),"^",2)_$S(+VAEL(3):"    SC%: "_$P(VAEL(3),"^",2),1:"")
"RTN","LRBEBA3",73,0)
 W !," Disabilities: " F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  S I1=$S($D(^DPT(DFN,.372,I,0)):^(0),1:"") D:+I1
"RTN","LRBEBA3",74,0)
 .S LRDIS=$S($P($G(^DIC(31,+I1,0)),"^")]""&($P($G(^(0)),"^",4)']""):$P(^(0),"^"),$P($G(^DIC(31,+I1,0)),"^",4)]"":$P(^(0),"^",4),1:""),LRCNT=$P(I1,"^",2)
"RTN","LRBEBA3",75,0)
 .S LRDIS=$E(LRDIS,1,55)
"RTN","LRBEBA3",76,0)
 .I LRDIS]"" W ?15,LRDIS_" - "_LRCNT_"%("_$S($P(I1,"^",3):"SC",1:"NSC")_")",!
"RTN","LRBEBA3",77,0)
 K LRDIS,LRCNT,I,I1,VAEL
"RTN","LRBEBA3",78,0)
 Q
"RTN","LRBEBA3",79,0)
 ;
"RTN","LRBEBA3",80,0)
BALROW(LRODT,LRSN,LRTEST) ; CIDC LROW
"RTN","LRBEBA3",81,0)
 N LRBEA,LRBEB,LRBEAT,LRBET,LRBESN,LRBETS,LRBETST,LRBEQT,LRBEOT,LRBEVAL
"RTN","LRBEBA3",82,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",83,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",84,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA3",85,0)
 S:$G(LRSN)="" LRSN=1
"RTN","LRBEBA3",86,0)
 D SLROT^LRBEBA3(.LRXST,.LRTEST,.LRBEOT) S:$G(LRSS)="" LRSS="CH"
"RTN","LRBEBA3",87,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LRBEOT)
"RTN","LRBEBA3",88,0)
 Q
"RTN","LRBEBA3",89,0)
 ;
"RTN","LRBEBA3",90,0)
AQ1 ; Ask question from LRORD1
"RTN","LRBEBA3",91,0)
 N LRBEVAL
"RTN","LRBEBA3",92,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",93,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",94,0)
 K LRBEODT D DT^LRX S LRBEODT=%
"RTN","LRBEBA3",95,0)
 S:$G(LRSS)="" LRSS="CH"
"RTN","LRBEBA3",96,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LROT)
"RTN","LRBEBA3",97,0)
 Q
"RTN","LRBEBA3",98,0)
 ;
"RTN","LRBEBA3",99,0)
AQ2 ; from LROW2A
"RTN","LRBEBA3",100,0)
 N LRBEVAL
"RTN","LRBEBA3",101,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",102,0)
 D SACC^LRBEBA2(LRODT,LRSN,LRTN,LRSSP,LRSPEC,$P(LRTEST(LRI),U,1),.LRBEX)
"RTN","LRBEBA3",103,0)
 Q
"RTN","LRBEBA3",104,0)
 ;
"RTN","LRBEBA3",105,0)
SVST(ENUM,ETYP,LRODT,LRSN) ; Set the Encounter # in #69
"RTN","LRBEBA3",106,0)
 S ^LRO(69,LRODT,1,LRSN,ETYP)=ENUM
"RTN","LRBEBA3",107,0)
 Q
"RTN","LRBEBA3",108,0)
 ;
"RTN","LRBEBA3",109,0)
BALROR(LRORD) ; CIDC LRORD
"RTN","LRBEBA3",110,0)
 N LRBEA,LRBEAT,LRBEB,LRBET,LRBESN,LRBETS,LRBETST,LRBEQT,LRBEODT
"RTN","LRBEBA3",111,0)
 N LRBEOT,LRBEVAL,LRBEZ,LRBETN
"RTN","LRBEBA3",112,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",113,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",114,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA3",115,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LROT)
"RTN","LRBEBA3",116,0)
 Q
"RTN","LRBEBA3",117,0)
 ;
"RTN","LRBEBA3",118,0)
SLROT(LRXST,LRTEST,LRBEOT) ;LROT array
"RTN","LRBEBA3",119,0)
 N LRBEA,LRBESMP,LRBESPC
"RTN","LRBEBA3",120,0)
 S LRBESMP="" F  S LRBESMP=$O(LRXST(LRBESMP)) Q:LRBESMP=""  D
"RTN","LRBEBA3",121,0)
 .S LRBEA="" F  S LRBEA=$O(LRXST(LRBESMP,LRBEA)) Q:LRBEA=""  D
"RTN","LRBEBA3",122,0)
 ..S LRBESPC=$P(LRXST(LRBESMP,LRBEA),U,1)
"RTN","LRBEBA3",123,0)
 ..S LRBEOT(LRBESMP,LRBESPC,LRBEA)=$P(LRTEST(LRBEA),U,1)
"RTN","LRBEBA3",124,0)
 Q
"RTN","LRBEBA3",125,0)
 ;
"RTN","LRBEBA3",126,0)
MICRO1(LRODT,LRSN,LRTST,LRCNT) ;get CIDC data for microbiology
"RTN","LRBEBA3",127,0)
 ;called from LRCAPPH1
"RTN","LRBEBA3",128,0)
 N LRBETM
"RTN","LRBEBA3",129,0)
 N AA,DX,DXCNT,FINAL,GOPRO,GEPRO,MOD,ORD,N,X
"RTN","LRBEBA3",130,0)
 S FINAL=$$FINAL^LRBEBA3(LRODT,LRSN,LRTST)
"RTN","LRBEBA3",131,0)
 I $P(FINAL,U)=0 K ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT) Q
"RTN","LRBEBA3",132,0)
 ;continue if micro test completed
"RTN","LRBEBA3",133,0)
 S DXCNT=+$O(^TMP("LRBEDX",$J,999),-1)
"RTN","LRBEBA3",134,0)
 S LRBETM=$P($G(^LRO(69,LRODT,1,LRSN,3)),U) I 'LRBETM S LRBETM=LRODT
"RTN","LRBEBA3",135,0)
 S LRBETM=$$PCETM^LRBEBAO(LRBETM)
"RTN","LRBEBA3",136,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"EVENT D/T")=LRBETM
"RTN","LRBEBA3",137,0)
 S AA=$P($P(FINAL,";",2),U,4)
"RTN","LRBEBA3",138,0)
 S GOPRO=$$GOPRO^LRBEBA4(LRODT,LRSN)
"RTN","LRBEBA3",139,0)
 S GEPRO=$$GEPRO^LRBEBA4(AA)
"RTN","LRBEBA3",140,0)
 S ^TMP("LRPXAPI",$J,"PROVIDER",1,"NAME")=GOPRO
"RTN","LRBEBA3",141,0)
 S ^TMP("LRPXAPI",$J,"PROVIDER",1,"PRIMARY")=1
"RTN","LRBEBA3",142,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ORD PROVIDER")=GOPRO
"RTN","LRBEBA3",143,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ENC PROVIDER")=GEPRO
"RTN","LRBEBA3",144,0)
 S ORD=$P($P(FINAL,";",2),U,7)
"RTN","LRBEBA3",145,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ORD REFERENCE")=ORD
"RTN","LRBEBA3",146,0)
 S ^TMP("LRBEDX",$J,"ID")=LRODT_U_LRSN
"RTN","LRBEBA3",147,0)
 S N=0 F  S N=$O(^LRO(69,LRODT,1,LRSN,2,LRTST,2,N)) Q:'N  Q:N>4  D
"RTN","LRBEBA3",148,0)
 .S X=^LRO(69,LRODT,1,LRSN,2,LRTST,2,N,0)
"RTN","LRBEBA3",149,0)
 .S DXCNT=DXCNT+1,^TMP("LRBEDX",$J,DXCNT)=X
"RTN","LRBEBA3",150,0)
 .I N=1 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"DIAGNOSIS")=$P(X,U,1)
"RTN","LRBEBA3",151,0)
 .I N>1 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"DIAGNOSIS "_N)=$P(X,U,1)
"RTN","LRBEBA3",152,0)
 Q
"RTN","LRBEBA3",153,0)
 ;
"RTN","LRBEBA3",154,0)
MICRO2(LRODT,LRSN) ;setup more CIDC data for microbiology
"RTN","LRBEBA3",155,0)
 ;called from LRCAPPH1
"RTN","LRBEBA3",156,0)
 N DXCNT,EI,EIX,X
"RTN","LRBEBA3",157,0)
 S X=$G(^TMP("LRBEDX",$J,"ID"))
"RTN","LRBEBA3",158,0)
 I ($P(X,U)'=LRODT)!($P(X,U,2)'=LRSN) Q
"RTN","LRBEBA3",159,0)
 S DXCNT=+$O(^TMP("LRBEDX",$J,999),-1)
"RTN","LRBEBA3",160,0)
 Q:'DXCNT
"RTN","LRBEBA3",161,0)
 S DXCNT=0 F  S DXCNT=$O(^TMP("LRBEDX",$J,DXCNT)) Q:'DXCNT  D
"RTN","LRBEBA3",162,0)
 .S X=^TMP("LRBEDX",$J,DXCNT)
"RTN","LRBEBA3",163,0)
 .S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"DIAGNOSIS")=$P(X,U,1)
"RTN","LRBEBA3",164,0)
 .I $P(X,U,2)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL SC")=$P(X,U,2),EIX("SC")=$G(EIX("SC"))+$P(X,U,2)
"RTN","LRBEBA3",165,0)
 .I $P(X,U,3)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL CV")=$P(X,U,3),EIX("CV")=$G(EIX("CV"))+$P(X,U,3)
"RTN","LRBEBA3",166,0)
 .I $P(X,U,4)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL AO")=$P(X,U,4),EIX("AO")=$G(EIX("AO"))+$P(X,U,4)
"RTN","LRBEBA3",167,0)
 .I $P(X,U,5)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL IR")=$P(X,U,5),EIX("IR")=$G(EIX("IR"))+$P(X,U,5)
"RTN","LRBEBA3",168,0)
 .I $P(X,U,6)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL EC")=$P(X,U,6),EIX("EC")=$G(EIX("EC"))+$P(X,U,6)
"RTN","LRBEBA3",169,0)
 .I $P(X,U,7)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL MST")=$P(X,U,7),EIX("MST")=$G(EIX("MST"))+$P(X,U,7)
"RTN","LRBEBA3",170,0)
 .I $P(X,U,8)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL HNC")=$P(X,U,8),EIX("HNC")=$G(EIX("HNC"))+$P(X,U,8)
"RTN","LRBEBA3",171,0)
 .I $P(X,U,10)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL SHAD")=$P(X,U,10),EIX("SHAD")=$G(EIX("SHAD"))+$P(X,U,10)
"RTN","LRBEBA3",172,0)
 .I $P(X,U,9) S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PRIMARY")=$P(X,U,9)
"RTN","LRBEBA3",173,0)
 F EI="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","LRBEBA3",174,0)
 .I $G(EIX(EI))>1 S EIX(EI)=1
"RTN","LRBEBA3",175,0)
 .I $G(EIX(EI))'="" S ^TMP("LRPXAPI",$J,"ENCOUNTER",1,EI)=EIX(EI)
"RTN","LRBEBA3",176,0)
 Q
"RTN","LRBEBA3",177,0)
 ;
"RTN","LRBEBA3",178,0)
FINAL(LRODT,LRSN,LRTST) ;is microbiology test complete/final?
"RTN","LRBEBA3",179,0)
 ;called from MICRO1 only
"RTN","LRBEBA3",180,0)
 ;returns 1_";"_<0-node of order>, if test completed
"RTN","LRBEBA3",181,0)
 ;        otherwise returns 0
"RTN","LRBEBA3",182,0)
 N AA,AI,AY,NODEO,NODEA,NOKILL,RETURN,TST,TT,X,LRCEX,LROA
"RTN","LRBEBA3",183,0)
 S LRCEX=$P($G(^LRO(69,LRODT,1,LRSN,.1)),U)
"RTN","LRBEBA3",184,0)
 S LROA=LRODT_"|"_LRSN
"RTN","LRBEBA3",185,0)
 S RETURN=0,NODEA=""
"RTN","LRBEBA3",186,0)
 S NODEO=$G(^LRO(69,LRODT,1,LRSN,2,LRTST,0))
"RTN","LRBEBA3",187,0)
 S TST=$P(NODEO,U),AY=$P(NODEO,U,3),AA=$P(NODEO,U,4),AI=$P(NODEO,U,5)
"RTN","LRBEBA3",188,0)
 I TST,AA,AI,AY S NODEA=$G(^LRO(68,AA,1,AY,1,AI,4,TST,0))
"RTN","LRBEBA3",189,0)
 ;does complete date exist?
"RTN","LRBEBA3",190,0)
 I $P(NODEA,U,5) S RETURN=1_";"_NODEO
"RTN","LRBEBA3",191,0)
 I RETURN'=0 D
"RTN","LRBEBA3",192,0)
 .S $P(^LRO(69,LRODT,1,LRSN,2,LRTST,0),U,12)=1
"RTN","LRBEBA3",193,0)
 .S NOKILL=0
"RTN","LRBEBA3",194,0)
 .S TT=0 F  S TT=$O(^LRO(69,LRODT,1,LRSN,2,TT)) Q:'TT  D
"RTN","LRBEBA3",195,0)
 ..S NODEO=^LRO(69,LRODT,1,LRSN,2,TT,0),AA=$P(NODEO,U,4)
"RTN","LRBEBA3",196,0)
 ..I AA,$P(NODEO,U,12)'=1,$P($G(^LRO(68,AA,0)),U,2)="MI" S NOKILL=1
"RTN","LRBEBA3",197,0)
 .I NOKILL=0 S ^LRO(69,"AA",LRCEX,LROA)=""
"RTN","LRBEBA3",198,0)
 Q RETURN
"RTN","LRCAPES")
0^216^B86635853
"RTN","LRCAPES",1,0)
LRCAPES ;DALOI/FHS/KLL -MANUAL PCE CPT WORKLOAD CAPTURE ;11/18/11  15:21
"RTN","LRCAPES",2,0)
 ;;5.2;LAB SERVICE;**274,259,349,308,350**;Sep 27, 1994;Build 230
"RTN","LRCAPES",3,0)
 ;
"RTN","LRCAPES",4,0)
 ;Reference to $$GET^XUA4A72 - Supported by DBIA #1625
"RTN","LRCAPES",5,0)
EN ;
"RTN","LRCAPES",6,0)
 D EN^LRCAPES1
"RTN","LRCAPES",7,0)
 Q
"RTN","LRCAPES",8,0)
EX1 ;Parse the read entry
"RTN","LRCAPES",9,0)
 N LRXY,LRACTV,LRXY1,LRXY2,LRD2,LRNR,LRWL2,LRINA2,LRREL2,LRQ
"RTN","LRCAPES",10,0)
 Q:'$L($G(LRX))
"RTN","LRCAPES",11,0)
 ;Edit on 5-digit code entry
"RTN","LRCAPES",12,0)
 I LRX?5N,'$D(^TMP("LR",$J,"AK",LRX))#2 D  Q
"RTN","LRCAPES",13,0)
 .S LRXY=$$CPT^ICPTCOD(LRX,DT)
"RTN","LRCAPES",14,0)
 .D CHKCPT^LRCAPES1
"RTN","LRCAPES",15,0)
 .;Don't pass to PCE if CPT is missing or inactive in #81 or #64
"RTN","LRCAPES",16,0)
 .Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",17,0)
 .;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",18,0)
 .;      the inactive with the active CPT
"RTN","LRCAPES",19,0)
 .I LRACTV D  Q
"RTN","LRCAPES",20,0)
 ..S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",21,0)
 ..S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",22,0)
 ..S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",23,0)
 ..S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",24,0)
 ..;If CPT passes edits, continue
"RTN","LRCAPES",25,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",26,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_"^^"_$P(LRXY,U,3)_U
"RTN","LRCAPES",27,0)
 ;Edit on ES Display Order # entry
"RTN","LRCAPES",28,0)
 S LRQ="^TMP(""LR"","_$J_",""AK"","_LRX_")"
"RTN","LRCAPES",29,0)
 S LRQ=$Q(@LRQ)
"RTN","LRCAPES",30,0)
 S LRXY=$$CPT^ICPTCOD($QS(LRQ,6),DT)
"RTN","LRCAPES",31,0)
 D CHKCPT^LRCAPES1
"RTN","LRCAPES",32,0)
 Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",33,0)
 ;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",34,0)
 ;      the inactive with the active CPT
"RTN","LRCAPES",35,0)
 I LRACTV D  Q
"RTN","LRCAPES",36,0)
 .S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",37,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",38,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",39,0)
 .S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",40,0)
 .;I CPT passes edits, continue
"RTN","LRCAPES",41,0)
 S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",42,0)
 S ^TMP("LR",$J,"LRLST",LRCNT)=$QS(LRQ,6)_U_@LRQ
"RTN","LRCAPES",43,0)
 Q
"RTN","LRCAPES",44,0)
END1 ;
"RTN","LRCAPES",45,0)
 D END S LREND=1
"RTN","LRCAPES",46,0)
 Q
"RTN","LRCAPES",47,0)
END ;
"RTN","LRCAPES",48,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",49,0)
 K:'$G(LRESCPT) ^TMP("LR",$J,"AK")
"RTN","LRCAPES",50,0)
 I $G(LRDEBUG) W !,"END ",! Q
"RTN","LRCAPES",51,0)
 Q
"RTN","LRCAPES",52,0)
WLN ;Interactive entry point
"RTN","LRCAPES",53,0)
 D KVA^VADPT
"RTN","LRCAPES",54,0)
 K DIC,DIR
"RTN","LRCAPES",55,0)
 K LREND,LRUID,DIC,DIR,LRVBY
"RTN","LRCAPES",56,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",57,0)
 K LRAA,LRACC,LRAD,LRAN,LRDFN,LRDPF,LRIDT
"RTN","LRCAPES",58,0)
 K LRRB,LRSS,LRTIME,LRTREA,LRUID,LRWRD,PNM,SEX,SSN,AGE
"RTN","LRCAPES",59,0)
 S (LRAA,LRACC,LRAD,LRNOP,LRAN,LREND)=0,LRVBY=1,LRUID=""
"RTN","LRCAPES",60,0)
 S:'$G(LRPRO) LRPRO=DUZ
"RTN","LRCAPES",61,0)
 I '$G(LRESCPT) S LRVBY=$$SELBY^LRWU4("Select Accession By")
"RTN","LRCAPES",62,0)
 D:LRVBY=1 ^LRVERA D:LRVBY=2 UID^LRVERA
"RTN","LRCAPES",63,0)
 I 'LRVBY!(LRAA<1) D END S LREND=1 Q
"RTN","LRCAPES",64,0)
 S LRDFN=+$$GET1^DIQ(68.02,+$G(LRAN)_","_+$G(LRAD)_","_+$G(LRAA)_",",.01)
"RTN","LRCAPES",65,0)
 I 'LRDFN D END S LRNOP=1 D  Q
"RTN","LRCAPES",66,0)
 . W !?5,"This accession is corrupt",!
"RTN","LRCAPES",67,0)
LCK ;
"RTN","LRCAPES",68,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):10 I '$T D  Q
"RTN","LRCAPES",69,0)
 . W !?5,"Someone else is editing this accession",!
"RTN","LRCAPES",70,0)
 . S LRNOP=1
"RTN","LRCAPES",71,0)
 D PT^LRX
"RTN","LRCAPES",72,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",73,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",74,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",75,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",76,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",77,0)
 I LREDT'?7N.E D  Q
"RTN","LRCAPES",78,0)
 . W !?5,"This accession does not have a Collection Date/Time",!
"RTN","LRCAPES",79,0)
 . W !?10,"CAN NOT PROCEED",!
"RTN","LRCAPES",80,0)
 . S LRNOP="6^Not Accessioned"
"RTN","LRCAPES",81,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",82,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",83,0)
 I '$L($G(LRSS)) S LRSS=$$GET1^DIQ(68,LRAA_",",.02,"I")
"RTN","LRCAPES",84,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",85,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:LRDLOC)
"RTN","LRCAPES",86,0)
 D DEM^LRCAPES1
"RTN","LRCAPES",87,0)
PRO ;Get provider,patient/location information
"RTN","LRCAPES",88,0)
 S LREND=0
"RTN","LRCAPES",89,0)
 D
"RTN","LRCAPES",90,0)
 . N LRPRONM,DIR,DIRUT,DUOUT,X,Y
"RTN","LRCAPES",91,0)
 . S LRPRONM=$$GET1^DIQ(200,+$G(LRPRO),.01,"I")
"RTN","LRCAPES",92,0)
 . I $L(LRPRONM),$D(^VA(200,"AK.PROVIDER",LRPRONM,+$G(LRPRO)))#2,$$GET^XUA4A72(+$G(LRPRO),DT)>0 S DIR("B")=LRPRONM
"RTN","LRCAPES",93,0)
 . ;S DIR("A")="Releasing Pathologist"
"RTN","LRCAPES",94,0)
 . S DIR("A")="Provider"
"RTN","LRCAPES",95,0)
 . S LRPRO=0,DIR(0)="PO^200:ENMZ"
"RTN","LRCAPES",96,0)
 . S DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$$GET^XUA4A72(+Y,DT)>0"
"RTN","LRCAPES",97,0)
 . D ^DIR
"RTN","LRCAPES",98,0)
 . I Y>1 S LRPRO=+Y
"RTN","LRCAPES",99,0)
 I '$G(LRPRO) D  D END1 Q
"RTN","LRCAPES",100,0)
 . W !?5,"No Active Provider Selected",!
"RTN","LRCAPES",101,0)
 . S LRNOP=1
"RTN","LRCAPES",102,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 D  D END1 G WLN
"RTN","LRCAPES",103,0)
 . W !?5,"The accession is corrupt - missing zero node",!
"RTN","LRCAPES",104,0)
 . S LRNOP="7^Corrupt Accession"
"RTN","LRCAPES",105,0)
LOC ;Reporting Location
"RTN","LRCAPES",106,0)
 S LRNODE0=^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRCAPES",107,0)
 S LRNOP=0
"RTN","LRCAPES",108,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",109,0)
 I $L(LRLLOC) S LRLLOC=+$$FIND1^DIC(44,"","OM",LRLLOC)
"RTN","LRCAPES",110,0)
ASKLOC ;Check to see if outpatient location
"RTN","LRCAPES",111,0)
 I '$D(^SC(+$G(LRLLOC),0))#2 D
"RTN","LRCAPES",112,0)
 . N DIR,X,Y
"RTN","LRCAPES",113,0)
 . S LRLLOC=""
"RTN","LRCAPES",114,0)
 . S DIR(0)="PO^44:AEZNMO",DIR("A")=" Ordering Location "
"RTN","LRCAPES",115,0)
 . D ^DIR
"RTN","LRCAPES",116,0)
 . I +Y<1 Q
"RTN","LRCAPES",117,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",118,0)
 I '$G(LRLLOC) D END1 Q
"RTN","LRCAPES",119,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I") ;I 'LRDSSID S LRNOP="2^No Stop Code Number" Q
"RTN","LRCAPES",120,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",121,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",122,0)
 Q
"RTN","LRCAPES",123,0)
ES() ;Entry point for front end application.
"RTN","LRCAPES",124,0)
 N DFN,LRESCPT,LRDFN,LRLLOC,LRLLOCX,LRNINS,LRTST,LRENCDT,LRDUZ
"RTN","LRCAPES",125,0)
 K LRES,LRESCPT
"RTN","LRCAPES",126,0)
 S LRES=1
"RTN","LRCAPES",127,0)
ASK ; Option entry point - Check and setup PCE reporting variables
"RTN","LRCAPES",128,0)
 D EN^LRCAPES1
"RTN","LRCAPES",129,0)
 N X,Y,T1
"RTN","LRCAPES",130,0)
 S LREND=0
"RTN","LRCAPES",131,0)
 D ^LRPARAM Q:$G(LREND)
"RTN","LRCAPES",132,0)
 K ^TMP("LRPXAPI",$J),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",133,0)
 S ^TMP("LR",$J,"LRLST")=$$FMADD^XLFDT(DT,2)_U_DT_U_"LAB ES CPT"
"RTN","LRCAPES",134,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LR",0))
"RTN","LRCAPES",135,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LAB SERVICE",0))
"RTN","LRCAPES",136,0)
PKG ;Check to see if Lab Package is installed
"RTN","LRCAPES",137,0)
 I '$G(LRPKG) D  D WKL Q
"RTN","LRCAPES",138,0)
 . W !?5,"LAB SERVICE PACKAGE is not loaded",!
"RTN","LRCAPES",139,0)
PCE ;Check to see if PCE is turned on
"RTN","LRCAPES",140,0)
 S X="PXAI" X ^%ZOSF("TEST") I '$T D:'$G(LRES)  D WKL Q
"RTN","LRCAPES",141,0)
 . W !?5,"PCE Is not installed",!
"RTN","LRCAPES",142,0)
 S LRPCEON=$$PKGON^VSIT("PX")
"RTN","LRCAPES",143,0)
 I '$G(LRES),'LRPCEON D  D WKL Q
"RTN","LRCAPES",144,0)
 . W !?5,"PCE is not turned on",!
"RTN","LRCAPES",145,0)
 S LRDLOC=+$$GET1^DIQ(69.9,"1,",.8,"I")
"RTN","LRCAPES",146,0)
OOS ;Check to see if the LRDLOC is an OOS location
"RTN","LRCAPES",147,0)
 I $G(LRES),$P($G(^SC(LRDLOC,0)),U)'["LAB DIV " D  D WKL Q
"RTN","LRCAPES",148,0)
 . W !?5,"DEFAULT LAB OOS LOCATION is not defined correctly",!
"RTN","LRCAPES",149,0)
 S LRESCPT=1
"RTN","LRCAPES",150,0)
 D:'$G(^TMP("LR",$J,"AK",0,1))'=DUZ_U_DT EN
"RTN","LRCAPES",151,0)
 I $G(LRES) Q $G(LRESCPT)
"RTN","LRCAPES",152,0)
LOOP ;
"RTN","LRCAPES",153,0)
 Q:$G(LREND)
"RTN","LRCAPES",154,0)
 F  D WLN Q:$G(LREND)  I '$G(LRNOP) D CPTEN Q:$G(LREND)
"RTN","LRCAPES",155,0)
 D CLEAN Q
"RTN","LRCAPES",156,0)
CPTEN ;Entry point from CPT API call
"RTN","LRCAPES",157,0)
WKL S (LRNOP,LREND)=0 D READ^LRCAPES1
"RTN","LRCAPES",158,0)
 D DIS^LRCAPES1
"RTN","LRCAPES",159,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) D END Q
"RTN","LRCAPES",160,0)
LOAD ;Setup ^TMP("LRPXAPI" to load CPT workload
"RTN","LRCAPES",161,0)
 K LRXCPT,LRXTST,^TMP("LRPXAPI",$J)
"RTN","LRCAPES",162,0)
 S LRDUZ=LRPRO
"RTN","LRCAPES",163,0)
 I '$D(LRSN),'$D(LRSVDCDT) D
"RTN","LRCAPES",164,0)
 .S LRSN=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",4,"I")
"RTN","LRCAPES",165,0)
 .S LRSVDCDT=LRCDT
"RTN","LRCAPES",166,0)
 .S LRCDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",3,"I")
"RTN","LRCAPES",167,0)
 I '$G(LRESCPT) S LRNOP="3^PCE Workload Capture Not Setup"
"RTN","LRCAPES",168,0)
 I $G(LRNOP) D  D SENDWKL Q
"RTN","LRCAPES",169,0)
 . I '$D(LRQUIET) W !,$$CJ^XLFSTR("PCE Wkld Abort "_$P(LRNOP,U,2),IOM)
"RTN","LRCAPES",170,0)
 I $G(LRESCPT),'$G(LRNOP) D
"RTN","LRCAPES",171,0)
 . N AFTER812,D,D0,DDER,DI,DIC,DIG,DIH,DISL,DIV
"RTN","LRCAPES",172,0)
 . N I,LRACC,LRCNT,LRI,LRPCEN,PXALOOK,PXASUB,PXJ,PXJJ,LRCCT
"RTN","LRCAPES",173,0)
 . N SDT1,SPEL,SUBL,TYPEI,X,XPARSYS
"RTN","LRCAPES",174,0)
 . S LRTST=0
"RTN","LRCAPES",175,0)
 . F  S LRTST=$O(^TMP("LR",$J,"LRLST",LRTST)) Q:LRTST<1  D
"RTN","LRCAPES",176,0)
 . . S (LRNLTN,CPT)=+$G(^TMP("LR",$J,"LRLST",LRTST)),LRTSTP=$P(^(LRTST),U,2,99)
"RTN","LRCAPES",177,0)
 . . D SET^LRCAPPH1
"RTN","LRCAPES",178,0)
 . D ADDPREV
"RTN","LRCAPES",179,0)
SENDWKL ; Store LMIP workload
"RTN","LRCAPES",180,0)
 D SEND^LRCAPES1
"RTN","LRCAPES",181,0)
 L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",182,0)
 S LRNOP=0
"RTN","LRCAPES",183,0)
 I $D(LRSVDCDT) S LRCDT=LRSVDCDT K LRSN,LRSVDCDT
"RTN","LRCAPES",184,0)
 Q
"RTN","LRCAPES",185,0)
ADDPREV ;Add CPT quantities from PCE to current totals
"RTN","LRCAPES",186,0)
 N LRSTR2,LRIEN2,LRPX,LRCPT,LRXX,LRCPT2,LRCPT1,LRX1,LRQ1,LRQ2,LRQT,LRCT
"RTN","LRCAPES",187,0)
 S LRSTR2=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE"))
"RTN","LRCAPES",188,0)
 Q:'LRSTR2
"RTN","LRCAPES",189,0)
 K LRVIS S LRVIS=""
"RTN","LRCAPES",190,0)
 S LRCT=$L(LRSTR2,";")-1,LRVIS=$P(LRSTR2,";",LRCT)
"RTN","LRCAPES",191,0)
 F LRPX=1:1 S LRIEN2=$P(LRSTR2,";",LRPX) Q:LRIEN2=""  D
"RTN","LRCAPES",192,0)
 .D GETCPT^PXAPIOE(LRIEN2,"LRCPT","ERR")
"RTN","LRCAPES",193,0)
 S LRXX=""
"RTN","LRCAPES",194,0)
 F  S LRXX=$O(LRCPT(LRXX)) Q:LRXX=""  D
"RTN","LRCAPES",195,0)
 .Q:$P(LRCPT(LRXX),"^",3)'=LRVIS
"RTN","LRCAPES",196,0)
 .S LRCPT2=""
"RTN","LRCAPES",197,0)
 .S LRCPT2=+$G(LRCPT(LRXX))
"RTN","LRCAPES",198,0)
 .D:LRCPT2
"RTN","LRCAPES",199,0)
 ..S (LRX1,LRQT)=0
"RTN","LRCAPES",200,0)
 ..F  S LRX1=$O(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1)) Q:LRX1=""!(LRQT)  D
"RTN","LRCAPES",201,0)
 ...S LRCPT1=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"PROCEDURE"))
"RTN","LRCAPES",202,0)
 ...I LRCPT1=LRCPT2 D
"RTN","LRCAPES",203,0)
 ....S LRQ1=$P(LRCPT(LRXX),"^",16)
"RTN","LRCAPES",204,0)
 ....S LRQ2=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY"))
"RTN","LRCAPES",205,0)
 ....S ^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY")=LRQ1+LRQ2
"RTN","LRCAPES",206,0)
 ....S LRQT=1
"RTN","LRCAPES",207,0)
 Q
"RTN","LRCAPES",208,0)
CLEAN ;Final Cleanup
"RTN","LRCAPES",209,0)
 K AFTER812,AGE,CPT,D,D0,DOB,DDER,DFN,DI,DIC,DIG,DIH,DIR,DIRUT
"RTN","LRCAPES",210,0)
 K DISL,DIRUT,DIU,DUOUT,DIV,DQ
"RTN","LRCAPES",211,0)
 K I,J,LRACC,LRCNT,LRI,POP,PXALOOK,PXASUB,PXJ,PXJJ
"RTN","LRCAPES",212,0)
 K SDT1,SPEL,SUBL,T1,TYPEI,X,XPARSYS
"RTN","LRCAPES",213,0)
 K ANS,CLN,CNT,FPRI,LRAA,LRAD,LRAN,LRANSX,LRANSY,LRCDT,LRCNT
"RTN","LRCAPES",214,0)
 K LRDFN,LRDPF,LRDLOC,LRDSSID,LRDSSLOC,LRDUZ,LREDT,LREND,LRES,LRESCPT
"RTN","LRCAPES",215,0)
 K LRIDT,LRIDIV,LRLLOC,LRLLOCX,LRLST,LRNINS,LRNLT,LRNLTN,LRNODE0,LRNOP,LROK
"RTN","LRCAPES",216,0)
 K LRPCEN,LRPCENON,LRPCEVSO,LRPKG,LRPRAC,LRPRO,LRRB,LRQ,LRSS,LRTREA,LRTST,LRURG
"RTN","LRCAPES",217,0)
 K LRSPECID,LRTSTP,LRUID,LRVBY
"RTN","LRCAPES",218,0)
 K LRVSITN,LRWRD,LRX,LRXCPT,LRXTST
"RTN","LRCAPES",219,0)
 K NODE,NODE0,PNM,SEX,SDFLAG,SSN,VA,X1,X2,X3
"RTN","LRCAPES",220,0)
 K ^TMP("LRMOD",$J)
"RTN","LRCAPES",221,0)
 K ^TMP("LR",$J,"AK"),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",222,0)
 K ^TMP("LRPXAPI",$J)
"RTN","LRCAPES",223,0)
 D KVAR^VADPT
"RTN","LRCAPES",224,0)
 Q
"RTN","LRCAPES",225,0)
CPT(LRAA,LRAD,LRAN,LRPRO) ;AP Release entry point
"RTN","LRCAPES",226,0)
 ;LRAA=accession area, LRAD=accession date, LRAN=accession number
"RTN","LRCAPES",227,0)
 ;LRPRO=provider
"RTN","LRCAPES",228,0)
 N X,Y,I,LRI,LREDT,LRCDT,LRIDT,LRLLOCX,LRSPECID,DIC,LRNOP,LREND,LRES
"RTN","LRCAPES",229,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",230,0)
 S DIC=44,DIC(0)="ONM",X=LRLLOC D ^DIC
"RTN","LRCAPES",231,0)
 I Y>1 S LRLLOC=+Y
"RTN","LRCAPES",232,0)
 I Y<1 D  Q:$G(LREND)
"RTN","LRCAPES",233,0)
 . S DIC(0)="AEZNM" D ^DIC
"RTN","LRCAPES",234,0)
 . I Y<1 S LRNOP="4^Not an outpatient location",LREND=1 Q
"RTN","LRCAPES",235,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",236,0)
 ;KLL - set LRDSSLOC to LRDLOC, instead of LRLLOC to resolve location
"RTN","LRCAPES",237,0)
 ;      problem occurring in PCE
"RTN","LRCAPES",238,0)
 ;TAC - use accession area OOS location if one exists
"RTN","LRCAPES",239,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",240,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:+$G(LRDLOC))
"RTN","LRCAPES",241,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I")
"RTN","LRCAPES",242,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",243,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",244,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",245,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",246,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",247,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",248,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",249,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",250,0)
 I 'LREDT S LREDT=$$NOW^XLFDT
"RTN","LRCAPES",251,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",252,0)
 I '$G(LRESCPT) D  Q
"RTN","LRCAPES",253,0)
 . D EN^DDIOL("CPT workload is not activated","","!?20")
"RTN","LRCAPES",254,0)
 I $S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,'$G(LRPRO):1,1:0) Q
"RTN","LRCAPES",255,0)
 I +$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))'=LRDFN Q
"RTN","LRCAPES",256,0)
 D CPTEN
"RTN","LRCAPES",257,0)
 Q
"RTN","LRCAPES1")
0^67^B78998804
"RTN","LRCAPES1",1,0)
LRCAPES1 ;DALOI/FHS/KLL - CONT MANUAL PCE CPT WORKLOAD CAPTURE ;02/28/12  20:29
"RTN","LRCAPES1",2,0)
 ;;5.2;LAB SERVICE;**274,308,350**;Sep 27, 1994;Build 230
"RTN","LRCAPES1",3,0)
 ;
"RTN","LRCAPES1",4,0)
 ;Continuation of LRCAPES
"RTN","LRCAPES1",5,0)
 ;
"RTN","LRCAPES1",6,0)
 ;
"RTN","LRCAPES1",7,0)
EN ; Setup the order of defined NLT codes
"RTN","LRCAPES1",8,0)
 ;
"RTN","LRCAPES1",9,0)
 Q:$G(^TMP("LR",$J,"AK",0,1))=DUZ_U_DT
"RTN","LRCAPES1",10,0)
 N LRI,LRY,LRX,LRX2,LRX3,LRDES,LRCNT
"RTN","LRCAPES1",11,0)
 K ^TMP("LR",$J,"AK")
"RTN","LRCAPES1",12,0)
 S LRCNT=0
"RTN","LRCAPES1",13,0)
 S ^TMP("LR",$J,"AK",0)=$$FMADD^XLFDT(DT,2)_U_DT_U_"ES CPT code list"
"RTN","LRCAPES1",14,0)
 S ^TMP("LR",$J,"AK",0,1)=DUZ_U_DT
"RTN","LRCAPES1",15,0)
 S LRY="^LAM(""AK"")" F  S LRY=$Q(@LRY) Q:$QS(LRY,1)'="AK"  D
"RTN","LRCAPES1",16,0)
 . N LRDES
"RTN","LRCAPES1",17,0)
 . S LRX2=$QS(LRY,2),LRX3=$QS(LRY,3)
"RTN","LRCAPES1",18,0)
 . Q:'$G(LRX2)!('$G(LRX3))
"RTN","LRCAPES1",19,0)
 . S LRI=0 F  S LRI=$O(^LAM(LRX3,4,"AC","CPT",LRI)) Q:LRI<1  D
"RTN","LRCAPES1",20,0)
 . . S LRX=+$G(^LAM(LRX3,4,LRI,0)),LRX=$$CPT^ICPTCOD(LRX,DT)
"RTN","LRCAPES1",21,0)
 . . Q:'$P(LRX,U,7)
"RTN","LRCAPES1",22,0)
 . . K LRDES S LRDES=$$CPTD^ICPTCOD(+LRX,"LRDES")
"RTN","LRCAPES1",23,0)
 . . S LRCNT=LRCNT+1
"RTN","LRCAPES1",24,0)
 . . I $L(LRDES(1)) S ^TMP("LR",$J,"AK",LRX2,LRI,+LRX)=LRX3_U_$E(LRDES(1),1,55)_U_$$GET1^DIQ(64,LRX3_",",.01,"E")_U_$$GET1^DIQ(64,LRX3_",",1,"E") Q
"RTN","LRCAPES1",25,0)
 . . S ^TMP("LR",$J,"AK",LRX2,LRI,+LRX)=LRX3_U_$P(LRX,U,3)_U_$$GET1^DIQ(64,LRX3_",",.01,"E")_U_$$GET1^DIQ(64,LRX3_",",1,"E")
"RTN","LRCAPES1",26,0)
 Q
"RTN","LRCAPES1",27,0)
 ;
"RTN","LRCAPES1",28,0)
 ;
"RTN","LRCAPES1",29,0)
SET(DFN,LRPRO,LREDT,LRLOC,LRINS,LRCPT,LRAA,LRAD,LRAN) ; Call to check variable
"RTN","LRCAPES1",30,0)
 S (LREND,LROK)=0,LRAA=+$G(LRAA),LRAD=+$G(LRAD),LRAN=+$G(LRAN)
"RTN","LRCAPES1",31,0)
 I '$D(^DPT(DFN,0))#2 S LROK="1^Error Patient" Q LROK
"RTN","LRCAPES1",32,0)
 I $$GET^XUA4A72(LRPRO,DT)<1 S LROK="2^Inactive Provider" Q LROK
"RTN","LRCAPES1",33,0)
 I LREDT'?7N.E S LROK="3^Date Format" Q LROK
"RTN","LRCAPES1",34,0)
 I '$D(^SC(LRLOC,0))#2 S LROK="4^Location Error" Q LROK
"RTN","LRCAPES1",35,0)
 I "CMZ"'[$P($G(^SC(LRLOC,0)),U,3) S LROK="4.2^Not Inpatient Location" Q LROK
"RTN","LRCAPES1",36,0)
 I '$G(LRDSSID) S LROK="4.2^Not Inpatient Location" Q LROK
"RTN","LRCAPES1",37,0)
 I '$D(^DIC(4,LRINS,0))#2 S LROK="5^Institution Error" Q LROK
"RTN","LRCAPES1",38,0)
 I '$O(LRCPT(0)) S LROK="6^No CPT Codes Passed" Q LROK
"RTN","LRCAPES1",39,0)
 D EN^LRCAPES,READ^LRCAPES1
"RTN","LRCAPES1",40,0)
 D DIS I '$O(^TMP("LR",$J,"LRLST",0)) S LROK="-1" Q LROK
"RTN","LRCAPES1",41,0)
 D LOAD^LRCAPES,CLEAN^LRCAPES
"RTN","LRCAPES1",42,0)
 Q LROK
"RTN","LRCAPES1",43,0)
 ;
"RTN","LRCAPES1",44,0)
 ;
"RTN","LRCAPES1",45,0)
SEND ; Send data to PCE via DATA2PCE^PXAPI API
"RTN","LRCAPES1",46,0)
 I $$GET1^DIQ(63,+$G(LRDFN),.02,"I")=2,$G(LRDSSID),$O(^TMP("LRPXAPI",$J,"PROCEDURE",0)) D
"RTN","LRCAPES1",47,0)
 . I '$D(LRQUIET) W !,$$CJ^XLFSTR("Sending PCE Workload",IOM)
"RTN","LRCAPES1",48,0)
 . S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) ^("PCE")="" S LRPCEN=^("PCE")
"RTN","LRCAPES1",49,0)
 . S LREDT=$S($G(LREDT):LREDT,1:$$NOW^XLFDT)
"RTN","LRCAPES1",50,0)
 . S:'$P(LREDT,".",2) $P(LREDT,".",2)="1201"
"RTN","LRCAPES1",51,0)
 . D SEND^LRCAPPH1
"RTN","LRCAPES1",52,0)
 . I '$D(LRQUIET),'$G(LRVSITN) Q
"RTN","LRCAPES1",53,0)
 . I '$D(LRQUIET) W $$CJ^XLFSTR("Visit # "_LRVSITN,80)
"RTN","LRCAPES1",54,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")=$E(LRPCEN_LRVSITN_";",1,80)
"RTN","LRCAPES1",55,0)
 D SETWKL(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",56,0)
 Q
"RTN","LRCAPES1",57,0)
 ;
"RTN","LRCAPES1",58,0)
 ;
"RTN","LRCAPES1",59,0)
SETWKL(LRAA,LRAD,LRAN) ; Set workload into 68 from CPT coding
"RTN","LRCAPES1",60,0)
 Q:'$P(LRPARAM,U,14)!('$P($G(^LRO(68,+$G(LRAA),0)),U,16))
"RTN","LRCAPES1",61,0)
 I '$G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0)) Q
"RTN","LRCAPES1",62,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) K ^TMP("LR",$J,"LRLST") Q
"RTN","LRCAPES1",63,0)
 I '$D(LRQUIET) W !,$$CJ^XLFSTR("Storing LMIP Workload",IOM)
"RTN","LRCAPES1",64,0)
 N LRCNT,LRT,LRP,LRTIME,LRCDEF,LRURGW,LRI,LRADD
"RTN","LRCAPES1",65,0)
 S:'$G(LRURG) LRURG=9
"RTN","LRCAPES1",66,0)
 S (LRADD,LRCNT)=1,LRCDEF="3000",LRURGW=+$G(LRURG)
"RTN","LRCAPES1",67,0)
 S LRT("P")=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))
"RTN","LRCAPES1",68,0)
 S LRI=0 F  S LRI=$O(^TMP("LR",$J,"LRLST",LRI)) Q:LRI<1  D
"RTN","LRCAPES1",69,0)
 . S LRP=$P(^TMP("LR",$J,"LRLST",LRI),U,2)
"RTN","LRCAPES1",70,0)
 . I 'LRP D  Q:'LRP
"RTN","LRCAPES1",71,0)
 . . S LRP=+$O(^LAM("AB",$P(^TMP("LR",$J,"LRLST",LRI),U)_";ICPT(",0))
"RTN","LRCAPES1",72,0)
 . Q:'($D(^LAM(LRP,0))#2)
"RTN","LRCAPES1",73,0)
 . S LRT=+$O(^LAM(LRP,7,"B",0))
"RTN","LRCAPES1",74,0)
 . I 'LRT S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))
"RTN","LRCAPES1",75,0)
 . Q:'LRT
"RTN","LRCAPES1",76,0)
 . D SET^LRCAPV1S,STUFI^LRCAPV1
"RTN","LRCAPES1",77,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",78,0)
 Q
"RTN","LRCAPES1",79,0)
 ;
"RTN","LRCAPES1",80,0)
 ;
"RTN","LRCAPES1",81,0)
DIS ;
"RTN","LRCAPES1",82,0)
 N LRNOTFD,LRNOLK,LRIA81,LRIA64,LRRF64,X9
"RTN","LRCAPES1",83,0)
 K X,LRLST,LRCNT,LRI,LRX,LRXY,LRXTST
"RTN","LRCAPES1",84,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",85,0)
 I $G(LRANSX) D
"RTN","LRCAPES1",86,0)
 . S X=LRANSX D RANGE^LRWU2
"RTN","LRCAPES1",87,0)
 . X (X9_"S LRX=T1 D EX1^LRCAPES")
"RTN","LRCAPES1",88,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) D  Q
"RTN","LRCAPES1",89,0)
 . I $G(LRNOTFD)!$G(LRIA81)!$G(LRIA64)!$G(LRNOLK)!$G(LRRF64) D
"RTN","LRCAPES1",90,0)
 . . W !,?5,"The following CPT Code(s) are not selected:"
"RTN","LRCAPES1",91,0)
 . . W:$G(LRNOTFD) !?8,"Not found in #81: ",LRNOTFD
"RTN","LRCAPES1",92,0)
 . . W:$G(LRIA81) !?8,"Inactive in #81: ",LRIA81
"RTN","LRCAPES1",93,0)
 . . W:$G(LRIA64) !?8,"Inactive in #64: ",LRIA64
"RTN","LRCAPES1",94,0)
 . . W:$G(LRNOLK) !?8,"Not linked to workload: ",LRNOLK
"RTN","LRCAPES1",95,0)
 . W !
"RTN","LRCAPES1",96,0)
 . S LRANSY=0
"RTN","LRCAPES1",97,0)
 D DEM
"RTN","LRCAPES1",98,0)
 ;
"RTN","LRCAPES1",99,0)
CHK ; User accepts CPT list
"RTN","LRCAPES1",100,0)
 N DIR
"RTN","LRCAPES1",101,0)
 S DIR("A")="Is this correct "
"RTN","LRCAPES1",102,0)
 S DIR(0)="Y",DIR("B")="Yes" D RD
"RTN","LRCAPES1",103,0)
 I $G(LRANSY)'=1 D
"RTN","LRCAPES1",104,0)
 .K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",105,0)
 .S ^TMP("LR",$J,"LRLST")=$$FMADD^XLFDT(DT,2)_U_DT_U_"LAB ES CPT"
"RTN","LRCAPES1",106,0)
 Q
"RTN","LRCAPES1",107,0)
 ;
"RTN","LRCAPES1",108,0)
 ;
"RTN","LRCAPES1",109,0)
PG ; Page break
"RTN","LRCAPES1",110,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","LRCAPES1",111,0)
 S DIR(0)="E" D ^DIR
"RTN","LRCAPES1",112,0)
 I $G(DIRUT) S LREND=1 Q
"RTN","LRCAPES1",113,0)
 W @IOF
"RTN","LRCAPES1",114,0)
 Q
"RTN","LRCAPES1",115,0)
 ;
"RTN","LRCAPES1",116,0)
 ;
"RTN","LRCAPES1",117,0)
RD ; DIR read
"RTN","LRCAPES1",118,0)
 N Y,X,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LRCAPES1",119,0)
 S (LRANSY,LRANSX)=0
"RTN","LRCAPES1",120,0)
 S LREND=0 W !
"RTN","LRCAPES1",121,0)
 D ^DIR I $D(DIRUT) S LREND=1 Q
"RTN","LRCAPES1",122,0)
 S LRANSY=$G(Y),LRANSX=$G(X)
"RTN","LRCAPES1",123,0)
 Q
"RTN","LRCAPES1",124,0)
 ;
"RTN","LRCAPES1",125,0)
 ;
"RTN","LRCAPES1",126,0)
READ ; Select CPT codes for accession
"RTN","LRCAPES1",127,0)
 ; Ask if want to see previously loaded CPT codes
"RTN","LRCAPES1",128,0)
 D LSTCPT(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",129,0)
 N DIR,LREND
"RTN","LRCAPES1",130,0)
 S DIR(0)="LO",LREND=0
"RTN","LRCAPES1",131,0)
 S DIR("A")="Select CPT codes",DIR("A",1)="Enter ? for list"
"RTN","LRCAPES1",132,0)
 S DIR("?")="^D HLP^LRCAPES1"
"RTN","LRCAPES1",133,0)
 S DIR("??")="^D HLP^LRCAPES1"
"RTN","LRCAPES1",134,0)
 D RD
"RTN","LRCAPES1",135,0)
 Q
"RTN","LRCAPES1",136,0)
 ;
"RTN","LRCAPES1",137,0)
 ;
"RTN","LRCAPES1",138,0)
DEM ;
"RTN","LRCAPES1",139,0)
 I $S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,$G(LRCDT)="":1,1:0) Q
"RTN","LRCAPES1",140,0)
 N LRIENS,DA
"RTN","LRCAPES1",141,0)
 S LRIENS=LRAN_","_LRAD_","_LRAA_","
"RTN","LRCAPES1",142,0)
 W @IOF
"RTN","LRCAPES1",143,0)
 W !?3,PNM,?35,SSN,?55,"DOB: ",$$FMTE^XLFDT(DOB,1)
"RTN","LRCAPES1",144,0)
 W !?5,LRCDT
"RTN","LRCAPES1",145,0)
 W !?10,LRSPECID,?60,"Loc: ",$G(LRLLOCX)
"RTN","LRCAPES1",146,0)
 I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) W !?15,"PCE ENC # "_^("PCE")
"RTN","LRCAPES1",147,0)
 W !?15,"Specimen: ",$$GET1^DIQ(68.05,"1,"_LRIENS,.01,"E")
"RTN","LRCAPES1",148,0)
 I $G(LRSS)'="",$O(^LR(LRDFN,LRSS,LRIDT,.1,0)) D
"RTN","LRCAPES1",149,0)
 . N LRX
"RTN","LRCAPES1",150,0)
 . W !?5,"Tissue Specimens: "
"RTN","LRCAPES1",151,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,LRSS,LRIDT,.1,LRX)) Q:LRX<1  W !,?15,$P($G(^(LRX,0)),U)
"RTN","LRCAPES1",152,0)
 W !?5,"Test(s); "
"RTN","LRCAPES1",153,0)
 S (LREND,LRX)=0 D
"RTN","LRCAPES1",154,0)
 . N LREND
"RTN","LRCAPES1",155,0)
 . F  S LRX=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRX)) Q:LRX<1!($G(LREND))  D
"RTN","LRCAPES1",156,0)
 . . I $Y>(IOSL-5) D PG Q:$G(LREND)
"RTN","LRCAPES1",157,0)
 . . W ?15,$P($G(^LAB(60,+LRX,0)),U)_"/ "
"RTN","LRCAPES1",158,0)
 ;
"RTN","LRCAPES1",159,0)
 ; Display pathologist's name
"RTN","LRCAPES1",160,0)
 N LRPATH,LRIENS,LRFL
"RTN","LRCAPES1",161,0)
 S:LRSS="AU" LRPATH=$$GET1^DIQ(63,LRDFN,13.6,"I")
"RTN","LRCAPES1",162,0)
 I LRSS'="AU" D
"RTN","LRCAPES1",163,0)
 . S LRFL=$S(LRSS="EM":63.02,LRSS="CY":63.09,LRSS="SP":63.08,1:0)
"RTN","LRCAPES1",164,0)
 . S LRIENS=LRIDT_","_LRDFN_","
"RTN","LRCAPES1",165,0)
 . S LRPATH=$$GET1^DIQ(LRFL,LRIENS,.02,"I")
"RTN","LRCAPES1",166,0)
 S LRPATH=$$GET1^DIQ(200,+$G(LRPATH),.01,"I")
"RTN","LRCAPES1",167,0)
 W:LRSS="CY" !?5,"Pathologist/Cytotechnologist: ",LRPATH,!
"RTN","LRCAPES1",168,0)
 W:LRSS'="CY" !?5,"Pathologist: ",LRPATH,!
"RTN","LRCAPES1",169,0)
 ;
"RTN","LRCAPES1",170,0)
 Q:'$O(^TMP("LR",$J,"LRLST",0))
"RTN","LRCAPES1",171,0)
 W !!,$$CJ^XLFSTR("Selected CPT Codes",IOM)
"RTN","LRCAPES1",172,0)
 W ! S (LREND,LRX)=0
"RTN","LRCAPES1",173,0)
 D
"RTN","LRCAPES1",174,0)
 . N LREND,LRTMP
"RTN","LRCAPES1",175,0)
 . S LRTMP=0
"RTN","LRCAPES1",176,0)
 . F  S LRX=+$O(^TMP("LR",$J,"LRLST",LRX)) Q:LRX<1!($G(LREND))  D
"RTN","LRCAPES1",177,0)
 . . I $Y>(IOSL-5) D PG Q:$G(LREND)
"RTN","LRCAPES1",178,0)
 . . S LRTMP=$G(^TMP("LR",$J,"LRLST",LRX))
"RTN","LRCAPES1",179,0)
 . . W !?5,"("_LRX_")  "_$P(LRTMP,U)_" "_$E($P(LRTMP,U,3),1,50),!
"RTN","LRCAPES1",180,0)
 . . W:$P(LRTMP,U,5) ?10,$E($P(LRTMP,U,4),1,50)_"  {"_$P(LRTMP,U,5)_"}"
"RTN","LRCAPES1",181,0)
 ;
"RTN","LRCAPES1",182,0)
 I $G(LRNOTFD)!$G(LRIA81)!$G(LRIA64)!$G(LRNOLK)!$G(LRRF64) D
"RTN","LRCAPES1",183,0)
 . W !!!?5,"The following CPT Codes are NOT Selected"
"RTN","LRCAPES1",184,0)
 . W:$G(LRNOTFD) !?8,"Not found in #81: ",LRNOTFD
"RTN","LRCAPES1",185,0)
 . W:$G(LRIA81) !?8,"Inactive in #81: ",LRIA81
"RTN","LRCAPES1",186,0)
 . W:$G(LRIA64) !?8,"Inactive in #64: ",LRIA64
"RTN","LRCAPES1",187,0)
 . W:$G(LRNOLK) !?8,"Not Linked to Workload: ",LRNOLK
"RTN","LRCAPES1",188,0)
 . W:$G(LRRF64) !?8,"Inactive in #64\Active Replacement Found: ",LRRF64
"RTN","LRCAPES1",189,0)
 Q
"RTN","LRCAPES1",190,0)
 ;
"RTN","LRCAPES1",191,0)
 ;
"RTN","LRCAPES1",192,0)
CHKCPT ; Edit CPT code - does it exist,active in 81 or 64, linked to workload?
"RTN","LRCAPES1",193,0)
 N LRINACT,LRII,LRXY1,LRXY2
"RTN","LRCAPES1",194,0)
 S (LRNR,LRACTV,LRXY2,LRWL2,LRD2)=0,LRXY1=$P(LRXY,U)
"RTN","LRCAPES1",195,0)
 I LRXY1=-1 S LRNOTFD=$S($G(LRNOTFD):LRNOTFD_LRX_",",1:LRX_",") Q
"RTN","LRCAPES1",196,0)
 I '$P(LRXY,U,7) S LRIA81=$S($G(LRIA81):LRIA81_LRXY1_",",1:LRXY1_",") Q
"RTN","LRCAPES1",197,0)
 I '$O(^LAM("AB",LRXY1_";ICPT(",0)) D  Q
"RTN","LRCAPES1",198,0)
 . S LRNOLK=$S($G(LRNOLK):LRNOLK_LRXY1_",",1:LRXY1_","),LRNR=1
"RTN","LRCAPES1",199,0)
 ;If CPT is not active in 64, look for alternative active CPT
"RTN","LRCAPES1",200,0)
 S LRWL2=+$O(^LAM("AB",LRXY1_";ICPT(",0))
"RTN","LRCAPES1",201,0)
 S:$G(LRQ)'="" LRWL2=$P(@LRQ,"^") ;For ES Display CPTs
"RTN","LRCAPES1",202,0)
 Q:'LRWL2
"RTN","LRCAPES1",203,0)
 S LRD2=+$O(^LAM("AB",LRXY1_";ICPT(",LRWL2,LRD2))
"RTN","LRCAPES1",204,0)
 S LRREL2=$P(^LAM(LRWL2,4,LRD2,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",205,0)
 Q:LRREL2&(LRINA2="")
"RTN","LRCAPES1",206,0)
 Q:LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2=""))
"RTN","LRCAPES1",207,0)
 ; CPT is inactive, search for another linked, active CPT to replace it
"RTN","LRCAPES1",208,0)
 S LRD2="A",LRD2=$O(^LAM(LRWL2,4,LRD2),-1)
"RTN","LRCAPES1",209,0)
 I LRD2>1 D
"RTN","LRCAPES1",210,0)
 . S LRII=0,(LRREL2,LRINA2)=""
"RTN","LRCAPES1",211,0)
 . F  S LRII=$O(^LAM(LRWL2,4,LRII)) Q:'LRII!(LRACTV)  D
"RTN","LRCAPES1",212,0)
 . . S LRXY2=+$P(^LAM(LRWL2,4,LRII,0),U)
"RTN","LRCAPES1",213,0)
 . . Q:LRXY2=LRXY1
"RTN","LRCAPES1",214,0)
 . . S LRREL2=$P(^LAM(LRWL2,4,LRII,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",215,0)
 . . I LRREL2&(LRINA2="") S LRACTV=1  Q
"RTN","LRCAPES1",216,0)
 . . I LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2="")) S LRACTV=1  Q
"RTN","LRCAPES1",217,0)
 ; No replacement active CPT found, 
"RTN","LRCAPES1",218,0)
 I 'LRACTV S LRIA64=$S($G(LRIA64):LRIA64_LRXY1_",",1:LRXY1_","),LRNR=1 Q
"RTN","LRCAPES1",219,0)
 Q
"RTN","LRCAPES1",220,0)
 ;
"RTN","LRCAPES1",221,0)
 ;
"RTN","LRCAPES1",222,0)
LSTCPT(LRAA,LRAD,LRAN)  ; Show loaded CPT codes if any
"RTN","LRCAPES1",223,0)
 Q:$S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,1:0)
"RTN","LRCAPES1",224,0)
 N LRSTR
"RTN","LRCAPES1",225,0)
 S LRSTR=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) Q:'LRSTR
"RTN","LRCAPES1",226,0)
 N DA,DIC,DIR,DIRUT,DIR,DR,ERR,DUOUT,IEN,LRDA,LRENC,LREND,LRP,S,X,Y
"RTN","LRCAPES1",227,0)
 S DIR(0)="Y",DIR("A")=" Would you like to see PCE CPT Information"
"RTN","LRCAPES1",228,0)
 S DIR("B")="No" D ^DIR
"RTN","LRCAPES1",229,0)
 I Y'=1 Q
"RTN","LRCAPES1",230,0)
 ;
"RTN","LRCAPES1",231,0)
 ; List filed CPT CODES
"RTN","LRCAPES1",232,0)
 W @IOF
"RTN","LRCAPES1",233,0)
 F LRP=1:1 S IEN=$P(LRSTR,";",LRP) Q:IEN=""  D GETCPT^PXAPIOE(IEN,"LRENC","ERR")
"RTN","LRCAPES1",234,0)
 ;
"RTN","LRCAPES1",235,0)
 S (LRDA,LREND)=0
"RTN","LRCAPES1",236,0)
 F  S LRDA=$O(LRENC(LRDA)) Q:'LRDA!($G(LREND))  D
"RTN","LRCAPES1",237,0)
 . I $Y>(IOSL-6) D PG W @IOF Q:$G(LREND)
"RTN","LRCAPES1",238,0)
 . S S=0,DA=LRDA,DR="0:99",DIC="^AUPNVCPT(" D EN^DIQ
"RTN","LRCAPES1",239,0)
 Q
"RTN","LRCAPES1",240,0)
 ;
"RTN","LRCAPES1",241,0)
 ;
"RTN","LRCAPES1",242,0)
HLP ; Help display for CPT selection
"RTN","LRCAPES1",243,0)
 N DIR,DIRUT,DUOUT,DTOUT,LREND,LRX,LRY
"RTN","LRCAPES1",244,0)
 W @IOF
"RTN","LRCAPES1",245,0)
 S LRX="^TMP(""LR"","_$J_",""AK"",0,1)"
"RTN","LRCAPES1",246,0)
 W $$CJ^XLFSTR("List or range e.g, 1,3,5-7,88300.",IOM)
"RTN","LRCAPES1",247,0)
 W $$CJ^XLFSTR("Select from the following or enter CPT separated by a comma",IOM),!
"RTN","LRCAPES1",248,0)
 F  S LRX=$Q(@LRX) Q:$QS(LRX,2)'=$J!($G(LREND))!($QS(LRX,1)'="LR")  D
"RTN","LRCAPES1",249,0)
 . S LRY=@LRX
"RTN","LRCAPES1",250,0)
 . W !?3,$QS(LRX,4),?6," = "_$QS(LRX,6)_"  "_$E($P(LRY,U,2),1,60),!
"RTN","LRCAPES1",251,0)
 . W:$P(LRY,U,4) ?8,$P(LRY,U,3)_" { NLT = "_$P(LRY,U,4)_" }",!
"RTN","LRCAPES1",252,0)
 . I $Y>(IOSL-6) S DIR(0)="E" D RD I '$G(LREND)  W @IOF
"RTN","LRCAPES1",253,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) D LSTCPT^LRCAPES1(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",254,0)
 Q
"RTN","LRCAPFF")
0^125^B27176612
"RTN","LRCAPFF",1,0)
LRCAPFF ;DALOI/PDL - Lab Mapping Set Up Utility ;04/30/12  08:51
"RTN","LRCAPFF",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRCAPFF",3,0)
 ;
"RTN","LRCAPFF",4,0)
 ; SetUp File 64 Mapping for MI,SP,CY, EM
"RTN","LRCAPFF",5,0)
 ; Called from option [LRCAPFF]
"RTN","LRCAPFF",6,0)
 Q
"RTN","LRCAPFF",7,0)
 ;
"RTN","LRCAPFF",8,0)
START ;
"RTN","LRCAPFF",9,0)
 ; Main entry point that loops until user aborts
"RTN","LRCAPFF",10,0)
 N LRSS,LRABORT
"RTN","LRCAPFF",11,0)
 S LRABORT=0
"RTN","LRCAPFF",12,0)
 F  D ASK(.LRSS,.LRABORT) Q:LRABORT
"RTN","LRCAPFF",13,0)
 Q
"RTN","LRCAPFF",14,0)
 ;
"RTN","LRCAPFF",15,0)
ASK(LRSS,LRABORT) ;
"RTN","LRCAPFF",16,0)
 ; Select #60 test, check associated file #64 field #63 record.
"RTN","LRCAPFF",17,0)
 ; Inputs
"RTN","LRCAPFF",18,0)
 ;     LRSS: <byref> Subscript area (MI,SP,CY) (See outputs)
"RTN","LRCAPFF",19,0)
 ;  LRABORT: <byref> See outputs
"RTN","LRCAPFF",20,0)
 ; Outputs
"RTN","LRCAPFF",21,0)
 ;     LRSS: Initially set by ASK and passed back to START
"RTN","LRCAPFF",22,0)
 ;         : Passed in to set the DIC("B") in ASK
"RTN","LRCAPFF",23,0)
 ;  LRABORT: If user wants to abort LRABORT=1
"RTN","LRCAPFF",24,0)
 ;
"RTN","LRCAPFF",25,0)
 N DA,DIC,DIE,DIERR,DIR,DIRUT,DIROUT,DR,DTOUT,DUOUT
"RTN","LRCAPFF",26,0)
 N ACTION,DATA,DBCERR,LRLCK1,LRLCK2,LRMSG,NLT,REC,X,Y
"RTN","LRCAPFF",27,0)
 N R60,R63,R64,R64061,IEN,LRFDA,STOP,TEST,WKLD,WKLDCOD
"RTN","LRCAPFF",28,0)
 S STOP=0
"RTN","LRCAPFF",29,0)
 S DIR(0)="SO^MI:Microbiology;SP:Surgical Pathology;CY:Cytopathology;EM:Electron Microscopy"
"RTN","LRCAPFF",30,0)
 S DIR("A")="Choose Lab Area Subscript"
"RTN","LRCAPFF",31,0)
 I $G(LRSS)'="" S DIR("B")=LRSS
"RTN","LRCAPFF",32,0)
 D ^DIR
"RTN","LRCAPFF",33,0)
 I $D(DIRUT) S LRABORT=1 Q
"RTN","LRCAPFF",34,0)
 S LRSS=Y
"RTN","LRCAPFF",35,0)
 ; Get lab test
"RTN","LRCAPFF",36,0)
 S R60=0
"RTN","LRCAPFF",37,0)
 S DIC="^LAB(60,"
"RTN","LRCAPFF",38,0)
 S DIC(0)="AEMNQ"
"RTN","LRCAPFF",39,0)
 S DIC("A")="Enter Laboratory Test Name: "
"RTN","LRCAPFF",40,0)
 S DIC("S")="I $P(^LAB(60,Y,0),""^"",4)=LRSS"
"RTN","LRCAPFF",41,0)
 D ^DIC
"RTN","LRCAPFF",42,0)
 K DIC
"RTN","LRCAPFF",43,0)
 I $D(DUOUT) S LRABORT=1 Q
"RTN","LRCAPFF",44,0)
 I $D(DTOUT)!(Y=-1) Q
"RTN","LRCAPFF",45,0)
 I Y>0 S R60=+Y
"RTN","LRCAPFF",46,0)
 I 'R60 Q
"RTN","LRCAPFF",47,0)
 ; lock #60
"RTN","LRCAPFF",48,0)
 S LRLCK1=$NA(^LAB(60,R60))
"RTN","LRCAPFF",49,0)
 S X=$$GETLOCK^LRUTIL(LRLCK1,15)
"RTN","LRCAPFF",50,0)
 I 'X D  Q  ;
"RTN","LRCAPFF",51,0)
 . W !,"Could not lock file #60"
"RTN","LRCAPFF",52,0)
 ;
"RTN","LRCAPFF",53,0)
 ; Get National VA Lab Code (R64)
"RTN","LRCAPFF",54,0)
 S R64=0
"RTN","LRCAPFF",55,0)
 K DIE,DA,DR,Y
"RTN","LRCAPFF",56,0)
 S DIE="^LAB(60,"
"RTN","LRCAPFF",57,0)
 S DIE("NO^")="OUTOK"
"RTN","LRCAPFF",58,0)
 S DA=R60
"RTN","LRCAPFF",59,0)
 S DR="W !,""Editing LABORATORY TEST file (#60)"";64"
"RTN","LRCAPFF",60,0)
 D ^DIE
"RTN","LRCAPFF",61,0)
 I $D(DTOUT)!$D(Y) D  Q
"RTN","LRCAPFF",62,0)
 . L -@LRLCK1
"RTN","LRCAPFF",63,0)
 ;
"RTN","LRCAPFF",64,0)
 S R64=$P($G(^LAB(60,R60,64)),U,1)
"RTN","LRCAPFF",65,0)
 I 'R64 D  Q
"RTN","LRCAPFF",66,0)
 . L -@LRLCK1
"RTN","LRCAPFF",67,0)
 . W $C(7),!!,"  No National VA Lab Code associated with this test.",!
"RTN","LRCAPFF",68,0)
 ;
"RTN","LRCAPFF",69,0)
 S TEST=$P(^LAB(60,R60,0),U,1)
"RTN","LRCAPFF",70,0)
 ; lock #64
"RTN","LRCAPFF",71,0)
 S LRLCK2=$NA(^LAM(R64))
"RTN","LRCAPFF",72,0)
 S X=$$GETLOCK^LRUTIL(LRLCK2,15)
"RTN","LRCAPFF",73,0)
 I 'X D  Q  ;
"RTN","LRCAPFF",74,0)
 . W !,"Could not lock file #64"
"RTN","LRCAPFF",75,0)
 . L -@LRLCK1 ;unlock 63
"RTN","LRCAPFF",76,0)
 ;
"RTN","LRCAPFF",77,0)
 S DATA=^LAM(R64,0)
"RTN","LRCAPFF",78,0)
 S WKLD=$P(DATA,U,1)
"RTN","LRCAPFF",79,0)
 S WKLDCOD=$P(DATA,U,2)
"RTN","LRCAPFF",80,0)
 W !,"60 = ",TEST,"  [",R60,"]"
"RTN","LRCAPFF",81,0)
 W !,"64 = ",WKLD," (",WKLDCOD,")  [",R64,"]"
"RTN","LRCAPFF",82,0)
 D  ;
"RTN","LRCAPFF",83,0)
 . N END,LRDATA
"RTN","LRCAPFF",84,0)
 . D LINK^LR7OU4(R60,R64,0)
"RTN","LRCAPFF",85,0)
 . ;need to handle ^
"RTN","LRCAPFF",86,0)
 . I $G(END) S STOP=1
"RTN","LRCAPFF",87,0)
 ;
"RTN","LRCAPFF",88,0)
 I STOP D  Q  ;
"RTN","LRCAPFF",89,0)
 . L -@LRLCK2
"RTN","LRCAPFF",90,0)
 . L -@LRLCK1
"RTN","LRCAPFF",91,0)
 ;
"RTN","LRCAPFF",92,0)
 ; Check LEC (#64.061) entry
"RTN","LRCAPFF",93,0)
 S DBCERR=0 ;database code error
"RTN","LRCAPFF",94,0)
 S DATA=$G(^LAM(R64,63))
"RTN","LRCAPFF",95,0)
 S R64061=$P(DATA,U,1)
"RTN","LRCAPFF",96,0)
 I 'R64061 D  ;
"RTN","LRCAPFF",97,0)
 . W !!,?10,"No Database Code on file for this NLT code.",!
"RTN","LRCAPFF",98,0)
 ;
"RTN","LRCAPFF",99,0)
 I R64061 D  ;
"RTN","LRCAPFF",100,0)
 . S DATA=^LAB(64.061,R64061,0)
"RTN","LRCAPFF",101,0)
 . S X=$P(DATA,U,1)
"RTN","LRCAPFF",102,0)
 . W !!!,?10,"Current Database Code for this NLT code is "
"RTN","LRCAPFF",103,0)
 . W !,?15,X," [",R64061,"]"
"RTN","LRCAPFF",104,0)
 . S Y="I X?1"""_LRSS_"""1.E1""Rpt Date"""
"RTN","LRCAPFF",105,0)
 . X Y
"RTN","LRCAPFF",106,0)
 . Q:$T
"RTN","LRCAPFF",107,0)
 . S DBCERR=1
"RTN","LRCAPFF",108,0)
 . W !!,$C(7),?7,"** Invalid Database Code for ",LRSS," **"
"RTN","LRCAPFF",109,0)
 . W !,?10,WKLD," (",WKLDCOD,") needs to be corrected."
"RTN","LRCAPFF",110,0)
 . W !
"RTN","LRCAPFF",111,0)
 . K DIR,DIROUT,DIRUT
"RTN","LRCAPFF",112,0)
 . S DIR("A")="Do you want to fix it now"
"RTN","LRCAPFF",113,0)
 . S DIR(0)="Y"
"RTN","LRCAPFF",114,0)
 . D ^DIR
"RTN","LRCAPFF",115,0)
 . I $D(DIRUT)!(Y=0) S STOP=1
"RTN","LRCAPFF",116,0)
 ;
"RTN","LRCAPFF",117,0)
 I STOP D  Q  ;
"RTN","LRCAPFF",118,0)
 . L -@LRLCK2
"RTN","LRCAPFF",119,0)
 . L -@LRLCK1
"RTN","LRCAPFF",120,0)
 ;
"RTN","LRCAPFF",121,0)
 I R64061 I 'DBCERR D  ;
"RTN","LRCAPFF",122,0)
 . K DIR,DIROUT,DIRUT
"RTN","LRCAPFF",123,0)
 . S DIR("A")="Do you want to keep this mapping"
"RTN","LRCAPFF",124,0)
 . S DIR(0)="Y"
"RTN","LRCAPFF",125,0)
 . S DIR("B")="Y"
"RTN","LRCAPFF",126,0)
 . W !
"RTN","LRCAPFF",127,0)
 . D ^DIR
"RTN","LRCAPFF",128,0)
 . I $D(DIRUT)!(Y=1) S STOP=1
"RTN","LRCAPFF",129,0)
 ;
"RTN","LRCAPFF",130,0)
 I STOP D  Q  ;
"RTN","LRCAPFF",131,0)
 . L -@LRLCK2
"RTN","LRCAPFF",132,0)
 . L -@LRLCK1
"RTN","LRCAPFF",133,0)
 ;
"RTN","LRCAPFF",134,0)
 K DIR
"RTN","LRCAPFF",135,0)
 S ACTION=""
"RTN","LRCAPFF",136,0)
 I R64061 D  ;
"RTN","LRCAPFF",137,0)
 . S DIR(0)="SO^M:Map Database Code;U:Unmap this code"
"RTN","LRCAPFF",138,0)
 . D ^DIR
"RTN","LRCAPFF",139,0)
 . S ACTION=Y
"RTN","LRCAPFF",140,0)
 ;
"RTN","LRCAPFF",141,0)
 I $D(DIRUT) D  Q
"RTN","LRCAPFF",142,0)
 . L -@LRLCK2
"RTN","LRCAPFF",143,0)
 . L -@LRLCK1
"RTN","LRCAPFF",144,0)
 ;
"RTN","LRCAPFF",145,0)
 I 'R64061 S ACTION="M"
"RTN","LRCAPFF",146,0)
 ;
"RTN","LRCAPFF",147,0)
 I ACTION="M" F  D  Q:R64061!(ACTION=-1)  ;
"RTN","LRCAPFF",148,0)
 . K DIC,REC
"RTN","LRCAPFF",149,0)
 . S REC=0
"RTN","LRCAPFF",150,0)
 . S DIC=64.061
"RTN","LRCAPFF",151,0)
 . S DIC(0)="AEMNQ"
"RTN","LRCAPFF",152,0)
 . S DIC("A")="Select an "_LRSS_" Database Code: "
"RTN","LRCAPFF",153,0)
 . S DIC("S")="I $P(^(0),U,1)?1"""_LRSS_""".E1""Rpt Date"""
"RTN","LRCAPFF",154,0)
 . D ^DIC
"RTN","LRCAPFF",155,0)
 . K DIC
"RTN","LRCAPFF",156,0)
 . I $D(DTOUT)!$D(DUOUT) S ACTION=-1 Q
"RTN","LRCAPFF",157,0)
 . I Y'>0 I R64061 W "<no change>",! Q
"RTN","LRCAPFF",158,0)
 . I Y>0 S REC=+Y
"RTN","LRCAPFF",159,0)
 . I REC I REC'=R64061 D  Q  ;
"RTN","LRCAPFF",160,0)
 . . K IEN,LRFDA,LRMSG,DIERR
"RTN","LRCAPFF",161,0)
 . . S IEN=R64_","
"RTN","LRCAPFF",162,0)
 . . S LRFDA(1,64,IEN,63)=REC
"RTN","LRCAPFF",163,0)
 . . S R64061=REC
"RTN","LRCAPFF",164,0)
 . . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRCAPFF",165,0)
 . . I '$D(LRMSG) W !!,"Update complete."
"RTN","LRCAPFF",166,0)
 . ;
"RTN","LRCAPFF",167,0)
 . I 'REC I 'R64061 D  ;
"RTN","LRCAPFF",168,0)
 . . N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRCAPFF",169,0)
 . . W !!,?15,"An MI/AP Database Code must be selected"
"RTN","LRCAPFF",170,0)
 . . W !,?15,"for this test to be used with LEDI results"
"RTN","LRCAPFF",171,0)
 . . S DIR("A")="Sure you want to exit"
"RTN","LRCAPFF",172,0)
 . . S DIR(0)="Y"
"RTN","LRCAPFF",173,0)
 . . S DIR("B")="N"
"RTN","LRCAPFF",174,0)
 . . D ^DIR
"RTN","LRCAPFF",175,0)
 . . W !
"RTN","LRCAPFF",176,0)
 . . I Y=1!$D(DIRUT) S ACTION=-1 Q
"RTN","LRCAPFF",177,0)
 . ;
"RTN","LRCAPFF",178,0)
 ;
"RTN","LRCAPFF",179,0)
 I ACTION="U" D  ;
"RTN","LRCAPFF",180,0)
 . K IEN,LRFDA,LRMSG,DIERR
"RTN","LRCAPFF",181,0)
 . S IEN=R64_","
"RTN","LRCAPFF",182,0)
 . S LRFDA(1,64,IEN,63)="@"
"RTN","LRCAPFF",183,0)
 . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRCAPFF",184,0)
 . I '$D(LRMSG) W !,"      Mapping removed."
"RTN","LRCAPFF",185,0)
 ;
"RTN","LRCAPFF",186,0)
 L -@LRLCK2
"RTN","LRCAPFF",187,0)
 L -@LRLCK1
"RTN","LRCAPFF",188,0)
 ;
"RTN","LRCAPFF",189,0)
 Q
"RTN","LRCE")
0^188^B66243304
"RTN","LRCE",1,0)
LRCE ;DALOI/JMC - LOOK-UP ON CENTRAL ENTRY # ;03/24/11  17:32
"RTN","LRCE",2,0)
 ;;5.2;LAB SERVICE;**28,76,103,121,153,210,202,263,350**;Sep 27, 1994;Build 230
"RTN","LRCE",3,0)
 ;
"RTN","LRCE",4,0)
EN ;
"RTN","LRCE",5,0)
 S (LRSTOP,LRFLAG1,LRFLG,LRSN1,LRNOP)=0
"RTN","LRCE",6,0)
 K DIRUT,SSN,LRORD
"RTN","LRCE",7,0)
 W !!
"RTN","LRCE",8,0)
 S DIR("A")="Order Number or UID: ",DIR(0)="FOA"
"RTN","LRCE",9,0)
 S DIR("?",1)="Enter a whole number for the order number, enter the universal identifier"
"RTN","LRCE",10,0)
 S DIR("?",2)="(UID), or press Return to find the order number by Patient.",DIR("?")="Enter '^' to Exit."
"RTN","LRCE",11,0)
 D ^DIR
"RTN","LRCE",12,0)
 I $G(SSN)&(Y="") G END
"RTN","LRCE",13,0)
 I Y="" D ^LROS G:'$G(SSN) END G EN
"RTN","LRCE",14,0)
NEXT I $D(DIRUT) G END
"RTN","LRCE",15,0)
 D UNIV
"RTN","LRCE",16,0)
 S LRORD=+Y
"RTN","LRCE",17,0)
 I LRORD?.AP!(LRORD<1) D  G EN
"RTN","LRCE",18,0)
 . W !,"Enter a whole number for the order number."
"RTN","LRCE",19,0)
 S LRORD=+LRORD
"RTN","LRCE",20,0)
 K DIR,X,Y,DIRUT
"RTN","LRCE",21,0)
 IF $O(^LRO(69,"C",LRORD,0))<1 W "  NUMBER NOT FOUND" G LRCE
"RTN","LRCE",22,0)
DIS ;
"RTN","LRCE",23,0)
 W @IOF
"RTN","LRCE",24,0)
 I $D(LRADDTST) D
"RTN","LRCE",25,0)
 . W !!?15,"LISTING OF DATES "
"RTN","LRCE",26,0)
 . S (CNT,LRODT)=0
"RTN","LRCE",27,0)
 . F A=0:0 S LRODT=$O(^LRO(69,"C",LRORD,LRODT)) Q:LRODT=""  D
"RTN","LRCE",28,0)
 .. D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",29,0)
 .. S CNT=CNT+1
"RTN","LRCE",30,0)
 .. W !?5,CNT,?10,$$FMTE^XLFDT(LRODT,"5FM")
"RTN","LRCE",31,0)
 Q:$G(LRSTOP)  K CNT,A
"RTN","LRCE",32,0)
 S LRODT=0
"RTN","LRCE",33,0)
 F  S LRODT=$O(^LRO(69,"C",LRORD,LRODT)) Q:LRODT<1!($G(LRSTOP))  D  I $D(LRADDTST),+LRADDTST Q
"RTN","LRCE",34,0)
 . D LR2
"RTN","LRCE",35,0)
 I $D(LRADDTST) G LRCE:LRADDTST="" G END
"RTN","LRCE",36,0)
 I '$D(LRADDTST) G EN
"RTN","LRCE",37,0)
 Q
"RTN","LRCE",38,0)
 ;
"RTN","LRCE",39,0)
 ;
"RTN","LRCE",40,0)
ADDTST ;
"RTN","LRCE",41,0)
 S LRADDTST="" D EN
"RTN","LRCE",42,0)
 S LRRSTAT=160
"RTN","LRCE",43,0)
 I LRADDTST  D ^LRORD
"RTN","LRCE",44,0)
 D END,ADDEND
"RTN","LRCE",45,0)
 Q
"RTN","LRCE",46,0)
 ;
"RTN","LRCE",47,0)
 ;
"RTN","LRCE",48,0)
ADDEND ;
"RTN","LRCE",49,0)
 K LRCLCTR,LRCLST,LRDFN,LRDPF,LRDRWTM,LRFLAG1,LRFLG
"RTN","LRCE",50,0)
 K LRLLOC,LRLOC,LRODT,LROLLOC,LRORDRR,LRPRAC,LRRB
"RTN","LRCE",51,0)
 K LRRSITE,LRSD,LRDN,LRSTOP,LRTREA,LRSN,LRTSN,LRTSP,PNM,SSN,DOB,SEX
"RTN","LRCE",52,0)
 K TYPE,LRRSTAT,LRNOP,LRSN1
"RTN","LRCE",53,0)
 K X,Y,I
"RTN","LRCE",54,0)
 Q
"RTN","LRCE",55,0)
 ;
"RTN","LRCE",56,0)
 ;
"RTN","LRCE",57,0)
LR2 ;
"RTN","LRCE",58,0)
 Q:$G(LRSTOP)
"RTN","LRCE",59,0)
 D CHKPAGE
"RTN","LRCE",60,0)
 Q:$G(LRSTOP)
"RTN","LRCE",61,0)
 S LRSN=0
"RTN","LRCE",62,0)
 F  S LRSN=+$O(^LRO(69,"C",+$G(LRORD),+$G(LRODT),LRSN)) Q:LRSN<1!($G(LRSTOP))  D PT I $D(LRADDTST),+LRADDTST Q
"RTN","LRCE",63,0)
 Q
"RTN","LRCE",64,0)
 ;
"RTN","LRCE",65,0)
 ;
"RTN","LRCE",66,0)
UNIV ; see if entry is UID
"RTN","LRCE",67,0)
 N LRAA,LRAD,LRAN I $D(^LRO(68,"C",X)) S LRAA=$O(^LRO(68,"C",X,0)) I LRAA S LRAD=$O(^LRO(68,"C",X,LRAA,0)) I LRAD S LRAN=$O(^LRO(68,"C",X,LRAA,LRAD,0)) I LRAN S Y=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.1)),"^")
"RTN","LRCE",68,0)
 Q
"RTN","LRCE",69,0)
 ;
"RTN","LRCE",70,0)
 ;
"RTN","LRCE",71,0)
CHKPAGE ;
"RTN","LRCE",72,0)
 Q:$G(LRSTOP)
"RTN","LRCE",73,0)
 Q:$Y<(IOSL-2)
"RTN","LRCE",74,0)
 K DIR
"RTN","LRCE",75,0)
 S DIR(0)="E"
"RTN","LRCE",76,0)
 D ^DIR
"RTN","LRCE",77,0)
 I $D(DUOUT)!($D(DIRUT)) S LRSTOP=1 Q
"RTN","LRCE",78,0)
 W @IOF
"RTN","LRCE",79,0)
 W !
"RTN","LRCE",80,0)
 Q
"RTN","LRCE",81,0)
 ;
"RTN","LRCE",82,0)
 ;
"RTN","LRCE",83,0)
PT ;
"RTN","LRCE",84,0)
 D CHKPAGE
"RTN","LRCE",85,0)
 Q:$G(LRSTOP)!($G(LRFLG))
"RTN","LRCE",86,0)
 S LROR=$S($D(^LRO(69,LRODT,1,LRSN,0)):^(0),1:-1)
"RTN","LRCE",87,0)
 S LRDFN=+LROR
"RTN","LRCE",88,0)
 I LRDFN<1 W "  NO PATIENT" Q
"RTN","LRCE",89,0)
 S LRWHOE=+$P(LROR,U,2)
"RTN","LRCE",90,0)
 S LRWHOE=$S($D(^VA(200,LRWHOE,0)):$P(^(0),U),1:"")
"RTN","LRCE",91,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRCE",92,0)
 D PT^LRX
"RTN","LRCE",93,0)
 H 1
"RTN","LRCE",94,0)
HEAD ;
"RTN","LRCE",95,0)
 D CHKPAGE
"RTN","LRCE",96,0)
 Q:$G(LRSTOP)
"RTN","LRCE",97,0)
 W !!,"ORDER #: ",LRORD,?20,"PAT: ",PNM,"    SSN: ",SSN,!
"RTN","LRCE",98,0)
 D CHKPAGE
"RTN","LRCE",99,0)
 Q:$G(LRSTOP)
"RTN","LRCE",100,0)
 D LRGLIN^LRX
"RTN","LRCE",101,0)
 W !
"RTN","LRCE",102,0)
 S LRCTYP=$P(LROR,U,4)
"RTN","LRCE",103,0)
 I (LRWHOE'="")!(LRCTYP'="") D
"RTN","LRCE",104,0)
 . I LRWHOE'="" W "WHO ENTERED: ",$E(LRWHOE,1,25) K LRWHOE
"RTN","LRCE",105,0)
 . W:LRCTYP'="" ?40,"TYPE OF COLLECTION: ",LRCTYP
"RTN","LRCE",106,0)
 I $D(^LRO(69,LRODT,1,LRSN,1)) D
"RTN","LRCE",107,0)
 . S LRCLCTR=$P(^LRO(69,LRODT,1,LRSN,1),U,3),LRCLST=$P(^(1),U,4)
"RTN","LRCE",108,0)
 . S:LRCLCTR'="" LRCLCTR=$P($G(^VA(200,+LRCLCTR,0)),U)
"RTN","LRCE",109,0)
 . W ! D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",110,0)
 . W:LRCLCTR'="" "  COLLECTOR : ",$E(LRCLCTR,1,25)
"RTN","LRCE",111,0)
 . W:LRCLST'="" ?40,"COLLECTION STATUS: ",LRCLST
"RTN","LRCE",112,0)
 Q:$G(LRSTOP)
"RTN","LRCE",113,0)
 ;
"RTN","LRCE",114,0)
 S LRDRWTM=$S($D(^LRO(69,LRODT,1,LRSN,1)):+^(1),1:"")
"RTN","LRCE",115,0)
 S:LRDRWTM LRDRWTM=$$FMTE^XLFDT(LRDRWTM,"ZM")
"RTN","LRCE",116,0)
 S LRLOC=+$P(LROR,U,9),LRLOC=$P($G(^SC(LRLOC,0)),U)
"RTN","LRCE",117,0)
 I (LRDRWTM'="")!(LRLOC'="") D
"RTN","LRCE",118,0)
 . W ! D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",119,0)
 . W:LRDRWTM'="" "  DRAW TIME:   ",LRDRWTM
"RTN","LRCE",120,0)
 . I LRDRWTM="",$P(LROR,"^",8) W "TO BE DRAWN:   ",$$FMTE^XLFDT($P(LROR,U,8),"ZM")
"RTN","LRCE",121,0)
 . W:LRLOC'="" ?40,"ORDERING LOCATION: ",$E(LRLOC,1,20)
"RTN","LRCE",122,0)
 Q:$G(LRSTOP)
"RTN","LRCE",123,0)
 ;
"RTN","LRCE",124,0)
 W ! D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",125,0)
 I $G(^LRO(69,LRODT,1,LRSN,3)) W "  LAB ARRIVAL: ",$$FMTE^XLFDT(+$G(^(3)),"ZM")
"RTN","LRCE",126,0)
 I LRDPF=2 W:LRWRD'="" ?40,"WARD: ",LRWRD
"RTN","LRCE",127,0)
 W:$P(LROR,U,3) !,"  SPECIMEN: " D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",128,0)
 W:$P(LROR,U,3) $S($D(^LAB(62,$P(LROR,U,3),0)):$P(^(0),U),1:"??")
"RTN","LRCE",129,0)
 S L=+$P(^LRO(69,LRODT,1,LRSN,0),U,6) I L D
"RTN","LRCE",130,0)
 . S LRMD=$S($D(^VA(200,L,0)):$P(^(0),U),1:L)
"RTN","LRCE",131,0)
 . W ?40,"PROVIDER: ",$E(LRMD,1,30)
"RTN","LRCE",132,0)
 W:$G(^LRO(69,LRODT,1,LRSN,"PCE")) !,?5,"Visit Number(s): ",$G(^("PCE"))
"RTN","LRCE",133,0)
 ;
"RTN","LRCE",134,0)
 S I=0
"RTN","LRCE",135,0)
TST D CHKPAGE
"RTN","LRCE",136,0)
 Q:$G(LRSTOP)
"RTN","LRCE",137,0)
 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,I)) Q:I<1  D
"RTN","LRCE",138,0)
 . D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",139,0)
 . D TEST D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",140,0)
 D CHKPAGE
"RTN","LRCE",141,0)
 Q:$G(LRSTOP)
"RTN","LRCE",142,0)
 I $D(^LRO(69,LRODT,1,LRSN,1)),$L($P(^(1),U,6)) D
"RTN","LRCE",143,0)
 . W !,"COMMENT: ",$P(^LRO(69,LRODT,1,LRSN,1),U,6) D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",144,0)
 S I=0
"RTN","LRCE",145,0)
 F  S I=$O(^LRO(69,LRODT,1,LRSN,6,I)) Q:I<1  W !,?3,^(I,0) D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",146,0)
 Q:$G(LRSTOP)
"RTN","LRCE",147,0)
NXT S X=$P($G(^LRO(69,LRODT,1,LRSN,1)),U,4)
"RTN","LRCE",148,0)
 I X="C"!($G(LRNOP)) W !,"Order has already been accessioned."
"RTN","LRCE",149,0)
 I LRNOP,'$D(LRLABKY) W !,"Tests have been accessioned, call the lab to add tests to the same order." Q
"RTN","LRCE",150,0)
 I '$D(LRADDTST) Q
"RTN","LRCE",151,0)
 I X="M" W !?5,"This Order was Merged " Q
"RTN","LRCE",152,0)
 I '$G(LRRSTAT) S LRRSTAT=160
"RTN","LRCE",153,0)
SEL W !,"Is this the one"
"RTN","LRCE",154,0)
 S %=1,LRNOP=0 K LRORDRR,LRRSITE,LRSD,LRTSP
"RTN","LRCE",155,0)
 D YN^DICN
"RTN","LRCE",156,0)
 I %'=1 S (LRFLG1,LRNOP)=0 Q
"RTN","LRCE",157,0)
 S LRADDTST=$S(%=1:LRORD,1:"")
"RTN","LRCE",158,0)
 Q:$G(LRSTOP)!('$G(LRADDTST))
"RTN","LRCE",159,0)
 I %=1 D
"RTN","LRCE",160,0)
 . N X,X0,I,DIC,DA
"RTN","LRCE",161,0)
 . S X0=^LRO(69,LRODT,1,LRSN,0),LRLWC=$P(X0,"^",4)
"RTN","LRCE",162,0)
 . S LRFLG=1
"RTN","LRCE",163,0)
 . S LRPRAC=$P(X0,"^",6),LRLLOC=$P(X0,"^",7),LROLLOC=$P(X0,U,9)
"RTN","LRCE",164,0)
 . Q:LRLWC'="R"  S LRRSITE("SDT")=$P(X0,U,5)
"RTN","LRCE",165,0)
 . S DIC("A")="*Select Original Ordered Test "
"RTN","LRCE",166,0)
 . S DA=LRSN,DA(1)=LRODT,DIC("S")="I $G(^(.3))"
"RTN","LRCE",167,0)
 . S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,",DIC(0)="AQEZNM"
"RTN","LRCE",168,0)
 . D ^DIC I Y<1  S LRADDTST="" Q
"RTN","LRCE",169,0)
 . S LRTSP=$P(Y,U,2),X=$G(^LRO(69,LRODT,1,LRSN,2,+Y,.3))
"RTN","LRCE",170,0)
 . Q:'$P(X,U,2)  S (LRSD("RPSITE"),LRRSITE("RSITE"))=$P(X,U,2)_U_$P(^LRO(69,LRODT,1,LRSN,0),U,7)
"RTN","LRCE",171,0)
 . S LRRSITE("RPSITE")=$P(X,U,3)
"RTN","LRCE",172,0)
 . S LRSD("RUID")=$P(X,U,5)
"RTN","LRCE",173,0)
 . S LRORDRR="R"
"RTN","LRCE",174,0)
 Q
"RTN","LRCE",175,0)
 ;
"RTN","LRCE",176,0)
 ;
"RTN","LRCE",177,0)
LUPT ;
"RTN","LRCE",178,0)
 K DFN,DIC S DIC(0)="EMQ"
"RTN","LRCE",179,0)
 D ^LRDPA
"RTN","LRCE",180,0)
 Q:DFN<1!$D(DUOUT)
"RTN","LRCE",181,0)
 ;
"RTN","LRCE",182,0)
LU1 ;
"RTN","LRCE",183,0)
 W !,"Order date to start from: T//" R X:DTIME
"RTN","LRCE",184,0)
 I '$T!(X["^") QUIT
"RTN","LRCE",185,0)
 S %DT="E",X=$S(X="":"T",1:X)
"RTN","LRCE",186,0)
 D ^%DT
"RTN","LRCE",187,0)
 G:Y<1 LU1 S Y=Y-1
"RTN","LRCE",188,0)
 S LRODT=Y F  S LRODT=$O(^LRO(69,LRODT)) Q:LRODT<1  D FSN
"RTN","LRCE",189,0)
 Q
"RTN","LRCE",190,0)
 ;
"RTN","LRCE",191,0)
 ;
"RTN","LRCE",192,0)
FSN ;
"RTN","LRCE",193,0)
 S LRSN=0
"RTN","LRCE",194,0)
 F  S LRSN=$O(^LRO(69,LRODT,1,"AA",LRDFN,LRSN)) Q:LRSN<1  D
"RTN","LRCE",195,0)
 . Q:'$D(^LRO(69,LRODT,1,LRSN,.1))  S LRORD=+^(.1) D PT
"RTN","LRCE",196,0)
 Q
"RTN","LRCE",197,0)
 ;
"RTN","LRCE",198,0)
 ;
"RTN","LRCE",199,0)
TEST ;
"RTN","LRCE",200,0)
 D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",201,0)
 S X=^LRO(69,LRODT,1,LRSN,2,I,0) S:$P(^(0),U,3) LRNOP=1
"RTN","LRCE",202,0)
 W !,"  TEST: ",$S($D(^LAB(60,+X,0)):$P(^(0),"^"),1:"UNKNOWN"),?28,"  "
"RTN","LRCE",203,0)
 S LRURG=+$P(X,U,2)
"RTN","LRCE",204,0)
 W $E($S($D(^LAB(62.05,LRURG,0)):$P(^(0),U),1:"ROUTINE"),1,15)
"RTN","LRCE",205,0)
 W ?38,"  ",$S($D(^LRO(68,+$P(X,"^",4),0)):$P(^(0),"^"),1:""),?50,"  ",$P(X,"^",5),?55
"RTN","LRCE",206,0)
 ;
"RTN","LRCE",207,0)
 D REF
"RTN","LRCE",208,0)
 I $P(X,"^",11) D
"RTN","LRCE",209,0)
 . W !?3,"Canceled by: "_$P(^VA(200,$P(X,"^",11),0),"^") S I(2)=0
"RTN","LRCE",210,0)
 . F  S I(2)=$O(^LRO(69,LRODT,1,LRSN,2,I,1.1,I(2))) Q:I(2)<1  I $D(^(I(2),0)) W !?5,^(0) D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",211,0)
 D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",212,0)
 ;
"RTN","LRCE",213,0)
 S I(2)=0
"RTN","LRCE",214,0)
 F  S I(2)=$O(^LRO(69,LRODT,1,LRSN,2,I,1,I(2))) Q:I(2)<1  I $D(^(I(2),0)) W !?5,^(0) D CHKPAGE Q:$G(LRSTOP)
"RTN","LRCE",215,0)
 Q
"RTN","LRCE",216,0)
 ;
"RTN","LRCE",217,0)
 ;
"RTN","LRCE",218,0)
REF ; If referred test, display status and manifest
"RTN","LRCE",219,0)
 N LREVNT,LRSCFG,LRUID
"RTN","LRCE",220,0)
 ;
"RTN","LRCE",221,0)
 S LRUID=$P($G(^LRO(69,LRODT,1,LRSN,2,I,.3)),"^")
"RTN","LRCE",222,0)
 I LRUID="" Q
"RTN","LRCE",223,0)
 ;
"RTN","LRCE",224,0)
 W "  <"_LRUID_">"
"RTN","LRCE",225,0)
 ;
"RTN","LRCE",226,0)
 S LREVNT=$$STATUS^LREVENT(LRUID,+X,""),LRSCFG=""
"RTN","LRCE",227,0)
 I LREVNT="" Q
"RTN","LRCE",228,0)
 I $P(LREVNT,"^",3)'="" D
"RTN","LRCE",229,0)
 . N LR628
"RTN","LRCE",230,0)
 . S LR628=$O(^LAHM(62.8,"B",$P(LREVNT,"^",3),0))
"RTN","LRCE",231,0)
 . S LRSCFG=$P($G(^LAHM(62.8,LR628,0)),"^",2)
"RTN","LRCE",232,0)
 . I LRSCFG S LRSCFG(0)=$P($G(^LAHM(62.9,LRSCFG,0),"Unknown/deleted"),"^")
"RTN","LRCE",233,0)
 W !,?4,"REFERRAL STATUS: "_$P(LREVNT,"^")_" ("_$P(LREVNT,"^",2)_")"
"RTN","LRCE",234,0)
 W !,?4,"SHIPPING MANIFEST: "_$P(LREVNT,"^",3)
"RTN","LRCE",235,0)
 I LRSCFG W " using shipping config "_LRSCFG(0)
"RTN","LRCE",236,0)
 ;
"RTN","LRCE",237,0)
 Q
"RTN","LRCE",238,0)
 ;
"RTN","LRCE",239,0)
 ;
"RTN","LRCE",240,0)
END ;
"RTN","LRCE",241,0)
 K %,%DT,A,DFN,DIC,DIR,DIRUT,DTOUT,DUOUT,I,II,K,L,LRARIV,LRCLCTR,LRCLST
"RTN","LRCE",242,0)
 K LRCTYP,LRDRWTM,LRFLAG1,LRFLG,LRLOC,LRMD,LRODT,LROR,LRORD
"RTN","LRCE",243,0)
 K LRPRAC,LRSN,LRSN1,LRSTOP,LRURG,LRW,LRWHOE,LRWRD,VA("BID"),VA("PID")
"RTN","LRCE",244,0)
 K VAIN,VADM,VAERR,X,X1,X2,Y,Z
"RTN","LRCE",245,0)
 Q:$G(LR2ORD)
"RTN","LRCE",246,0)
 K LRNOP
"RTN","LRCE",247,0)
 Q
"RTN","LRCENDEL")
0^210^B45893338
"RTN","LRCENDEL",1,0)
LRCENDEL ;SLC/CJS/DALOI/FHS - ORDER CANCELING NO TEST DELETE ;04/12/12  13:14
"RTN","LRCENDEL",2,0)
 ;;5.2;LAB SERVICE;**100,121,202,221,263,350**;Sep 27, 1994;Build 230
"RTN","LRCENDEL",3,0)
 ;
"RTN","LRCENDEL",4,0)
 W @IOF N LRCANK,LRTN
"RTN","LRCENDEL",5,0)
FIND S LREND=0 D ^LRPARAM I $G(LREND) G END
"RTN","LRCENDEL",6,0)
 K LRDFN,LRONE,LRNATURE
"RTN","LRCENDEL",7,0)
 I '$D(LRLABKY) W !?3,"If lab has received the sample (i.e. the test has an accession),",!,"you can't change this order.  If so, call the lab to change the test."
"RTN","LRCENDEL",8,0)
 D
"RTN","LRCENDEL",9,0)
 . N DIR
"RTN","LRCENDEL",10,0)
 . S DIR("A")="ENTER ORDER NUMBER: "
"RTN","LRCENDEL",11,0)
 . S DIR(0)="LO^1:9999999999"
"RTN","LRCENDEL",12,0)
 . S DIR("?")="Enter the number associated with the order. "
"RTN","LRCENDEL",13,0)
 . S DIR("??")="^D ^LROS"
"RTN","LRCENDEL",14,0)
 . S DIR("S")="I $O(^LRO(69,""C"",X,0))"
"RTN","LRCENDEL",15,0)
 . D ^DIR
"RTN","LRCENDEL",16,0)
 G END:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))
"RTN","LRCENDEL",17,0)
 S LRORD=X
"RTN","LRCENDEL",18,0)
 W @IOF D LOOK G FIND
"RTN","LRCENDEL",19,0)
 Q
"RTN","LRCENDEL",20,0)
LOOK ;
"RTN","LRCENDEL",21,0)
 S LRCNT=0,LRODT=$O(^LRO(69,"C",LRORD,0)) I LRODT<1 W !,"Not found." Q
"RTN","LRCENDEL",22,0)
 S (LRCANK,LROV,LRSN,LRCOL)=0
"RTN","LRCENDEL",23,0)
 F  S LRSN=$O(^LRO(69,"C",+LRORD,LRODT,LRSN)) Q:LRSN<1!($G(LREND))  D:'$G(LREND) SHOW^LROS S LRCNT=1 S:$S($D(^LRO(69,LRODT,1,LRSN,3)):$P(^(3),U,2),1:0) LROV=1 D
"RTN","LRCENDEL",24,0)
 . I $L($P($G(^LRO(69,LRODT,1,LRSN,1)),U,4)),'$D(LRLABKY) S LRCOL=1
"RTN","LRCENDEL",25,0)
 . L +^LRO(69,"C",+LRORD):1 I '$T W !?5,"Someone Else is Editing this order, try later",! S LREND=1 Q
"RTN","LRCENDEL",26,0)
 . S LRTN=0 F  S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,LRTN)) Q:LRTN<1  S X=^(LRTN,0) I '$P(X,"^",11) S LRCANK=1 Q
"RTN","LRCENDEL",27,0)
 I $G(LREND) D UNL69,END Q
"RTN","LRCENDEL",28,0)
 I LRCNT<1 W !,"No order found with that number." D UNL69,END Q
"RTN","LRCENDEL",29,0)
 I 'LRCANK W !!,"[ * All tests on this order # have already been dispositioned. * ]" D NAME Q
"RTN","LRCENDEL",30,0)
 I $G(LRCOL) D  D UNL69,END Q
"RTN","LRCENDEL",31,0)
 . W !!?5," You CAN NOT change the status of test(s) on this order."
"RTN","LRCENDEL",32,0)
 . W !,"Test sample(s) have already been received into the laboratory."
"RTN","LRCENDEL",33,0)
 . W !,"You must CONTACT the Laboratory to have test(s) status changed.",$C(7)
"RTN","LRCENDEL",34,0)
 D NAME
"RTN","LRCENDEL",35,0)
 S LRNOP=0 I 'LROV F I=0:0 W !,"Change entire order" S %=2 D YN^DICN Q:%  W "Answer 'Y'es or 'N'o."
"RTN","LRCENDEL",36,0)
 I 'LROV G END:%=-1,OUT:%=1
"RTN","LRCENDEL",37,0)
 S LRT=0,J=0 F  S J=$O(LRT(J)) Q:J<1  S LRT=J
"RTN","LRCENDEL",38,0)
 I LRT<1 W !,$$CJ^XLFSTR(" Can't change status of test(s) on this order.",IOM),! D UNL69 Q
"RTN","LRCENDEL",39,0)
MORE W !,?8,"entry",?15,"test",?40,"sample"
"RTN","LRCENDEL",40,0)
 S LRT=0,J=0 F  S J=$O(LRT(J)) Q:J<1  S LRT=J W !,?10,J,?15,$P(^LAB(60,$P(LRT(J),U,3),0),U),?40,$P(LRT(J),U,4)
"RTN","LRCENDEL",41,0)
 I LRT=0 W !,"All have been dispositioned from that order." Q
"RTN","LRCENDEL",42,0)
ONE R !,"Change status of which entry: ",LRJ:DTIME W:LRJ["?" !,"Pick one of the following entries:" G MORE:LRJ["?" Q:LRJ["^"!(LRJ="")
"RTN","LRCENDEL",43,0)
 I LRJ'=+LRJ!(LRJ<1)!(LRJ>LRT) W !,"Enter a number between 1 and ",LRT,! G ONE
"RTN","LRCENDEL",44,0)
 I '$D(LRT(LRJ)) W !,"You've already dispositioned that one.",! G MORE
"RTN","LRCENDEL",45,0)
 K LRNATURE
"RTN","LRCENDEL",46,0)
 D FX2^LRTSTOUT I $G(LREND) D UNL69,END Q
"RTN","LRCENDEL",47,0)
 K LRTSTI,LRMSTATI,LROTA
"RTN","LRCENDEL",48,0)
 D EN1
"RTN","LRCENDEL",49,0)
 I $D(LROTA) D LEDISET^LRTSTOUT(.LROTA) ;ccr_6164n
"RTN","LRCENDEL",50,0)
 D UNL69
"RTN","LRCENDEL",51,0)
 G LOOK
"RTN","LRCENDEL",52,0)
 Q
"RTN","LRCENDEL",53,0)
EN1 S LREND=0,LRSN=+LRT(LRJ),LRTSTI=+$P(LRT(LRJ),U,2),LRTSTS=+$P(LRT(LRJ),U,3)
"RTN","LRCENDEL",54,0)
 I '$D(^LRO(69,LRODT,1,LRSN,2,LRTSTI,0))#2 W !,"Does not exist ",! Q
"RTN","LRCENDEL",55,0)
 S LRX=^LRO(69,LRODT,1,LRSN,2,LRTSTI,0),LRAD=+$P(LRX,U,3),LRAA=+$P(LRX,U,4),LRAN=+$P(LRX,U,5),LRNOP=0,LRONE="",LRACC=0,ORIFN=$P(LRX,U,7)
"RTN","LRCENDEL",56,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),U,2)
"RTN","LRCENDEL",57,0)
 S LRTNM=$P($G(^LAB(60,LRTSTS,0)),U)
"RTN","LRCENDEL",58,0)
 I '$L($G(LRNATURE)) D DC^LROR6() I $G(LRNATURE)=-1 W !!,$C(7),"NOTHING CHANGED" Q
"RTN","LRCENDEL",59,0)
 S LRIDT=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRCENDEL",60,0)
 I LRIDT L +^LR(LRDFN,LRSS,LRIDT):1 I '$T W !?5,"Someone else is editing this entry",! S LREND=1 Q
"RTN","LRCENDEL",61,0)
 D SET^LRTSTOUT I LRIDT L -^LR(LRDFN,LRSS,LRIDT)
"RTN","LRCENDEL",62,0)
 D LEDICHK^LRTSTOUT ; If LEDI test, add test to LROTA array - ccr_6164n
"RTN","LRCENDEL",63,0)
 D UNL69
"RTN","LRCENDEL",64,0)
 Q
"RTN","LRCENDEL",65,0)
 D CEN1^LRCENDE1 K LRONE Q:LRACC&'$D(^XUSEC("LRLAB",DUZ))
"RTN","LRCENDEL",66,0)
 I LRTSTI,'$G(LRNOP) D
"RTN","LRCENDEL",67,0)
 . N LRI S LRI(LRTSN)=""
"RTN","LRCENDEL",68,0)
 . D NEW^LR7OB1(LRODT,LRSN,$S($G(LRMSTATI)=""!($G(LRMSTATI)=1):"OC",1:"SC"),$G(LRNATURE),.LRI,$G(LRMSTATI))
"RTN","LRCENDEL",69,0)
 . S $P(^LRO(69,LRODT,1,LRSN,2,LRTSTI,0),"^",3,6)="^^^",$P(^(0),"^",9,11)="CA^L^"_DUZ K T(LRJ)
"RTN","LRCENDEL",70,0)
 . S DIE="^LRO(69,LRODT,1,LRSN,2,",DA=LRTSTI,DA(1)=LRODT,DR=99 D ^DIE
"RTN","LRCENDEL",71,0)
 K LRI
"RTN","LRCENDEL",72,0)
 S X=DUZ D DUZ^LRX
"RTN","LRCENDEL",73,0)
 ;I 'LRNOP S DIE="^LRO(69,LRODT,1,",DA=LRSN,DR="16" D ^DIE
"RTN","LRCENDEL",74,0)
 W:'LRNOP !!,"Status changed to Not Performed" G FIND:$O(LRT(0))<1,ONE
"RTN","LRCENDEL",75,0)
OUT Q:$G(LRNOP)  S LRJ=0
"RTN","LRCENDEL",76,0)
 D FX2^LRTSTOUT I $G(LREND) D UNL69,END Q
"RTN","LRCENDEL",77,0)
 S LRCCOMX=LRCCOM
"RTN","LRCENDEL",78,0)
 K LROTA ;ccr_6164n
"RTN","LRCENDEL",79,0)
 S LRJ=0 F  S LRJ=$O(LRT(LRJ)) Q:LRJ<1  S LRCCOM=LRCCOMX D EN1
"RTN","LRCENDEL",80,0)
 I $D(LROTA) D LEDISET^LRTSTOUT(.LROTA) ;ccr_6164n
"RTN","LRCENDEL",81,0)
 K LRCCOMX D UNL69
"RTN","LRCENDEL",82,0)
 Q
"RTN","LRCENDEL",83,0)
 S LRSN=0 F  S LRSN=$O(^LRO(69,"C",+LRORD,LRODT,LRSN)) Q:LRSN<1  D
"RTN","LRCENDEL",84,0)
 . S LRX=^LRO(69,LRODT,1,LRSN,2,LRTSTI,0),LRAD=$P(LRX,U,3),LRAA=+$P(LRX,U,4),LRAN=+$P(LRX,U,5),LRNOP=0,LRONE="",LRACC=0,ORIFN=$P(LRX,U,7)
"RTN","LRCENDEL",85,0)
 K LRNATURE G FIND
"RTN","LRCENDEL",86,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRCENDEL",87,0)
 Q
"RTN","LRCENDEL",88,0)
UNL69 ;
"RTN","LRCENDEL",89,0)
 L -^LRO(69,"C",+LRORD)
"RTN","LRCENDEL",90,0)
 Q
"RTN","LRCENDEL",91,0)
NAME S LRDFN=+^LRO(69,LRODT,1,$O(^LRO(69,"C",+LRORD,LRODT,0)),0),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,?30,SSN
"RTN","LRCENDEL",92,0)
EN ;from LRPHITE3
"RTN","LRCENDEL",93,0)
 K LRT S (J,LRSN,LRNOP)=0 F  S LRSN=$O(^LRO(69,"C",+LRORD,LRODT,LRSN)) Q:LRSN<1!($G(LRNOP))  D TSET
"RTN","LRCENDEL",94,0)
 Q
"RTN","LRCENDEL",95,0)
TSET I $D(^LRO(69,LRODT,1,LRSN,3)),$P(^(3),"^",2) D  Q
"RTN","LRCENDEL",96,0)
 . W !,$$CJ^XLFSTR("Test(s) already verified for this order, cannot change ENTIRE order",IOM)
"RTN","LRCENDEL",97,0)
 . W !,$$CJ^XLFSTR(" You must select individual test using the 'Delete Test from Accession' option.",IOM),!!
"RTN","LRCENDEL",98,0)
 . D UNL69 S LRNOP=1
"RTN","LRCENDEL",99,0)
 S I=0 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,I)) Q:I<1!($G(LRNOP))  S X=^(I,0) D
"RTN","LRCENDEL",100,0)
 . Q:$P(X,"^",11)
"RTN","LRCENDEL",101,0)
 . I $P(X,U,3),'$D(LRLABKY) Q
"RTN","LRCENDEL",102,0)
 . ;
"RTN","LRCENDEL",103,0)
 . ; ccr_5538n - Prevent user from being able to cancel tests that have results
"RTN","LRCENDEL",104,0)
 . N LRX
"RTN","LRCENDEL",105,0)
 . S LRX=$$CHK63(LRDFN,LRODT,LRSN,I)
"RTN","LRCENDEL",106,0)
 . I LRX>0 D  Q
"RTN","LRCENDEL",107,0)
 . . W !!,$$CJ^XLFSTR("Test result(s) already entered for this order; cannot change order.",IOM)
"RTN","LRCENDEL",108,0)
 . . W !,$$CJ^XLFSTR("You must select individual test using the 'Delete test from accession' option.",IOM),!!
"RTN","LRCENDEL",109,0)
 . . D UNL69
"RTN","LRCENDEL",110,0)
 . . S LRNOP=1
"RTN","LRCENDEL",111,0)
 . . S LROV=1
"RTN","LRCENDEL",112,0)
 . . K LRT
"RTN","LRCENDEL",113,0)
 . ;
"RTN","LRCENDEL",114,0)
 . S J=J+1,LRSPEC=$S($D(^LRO(69,LRODT,1,LRSN,4,1,0)):+^(0),1:""),LRT(J)=LRSN_U_I_U_+X_U_$S(LRSPEC:$P(^LAB(61,+LRSPEC,0),U),1:"")_U_$P(X,U,2,99)
"RTN","LRCENDEL",115,0)
 Q
"RTN","LRCENDEL",116,0)
 ;
"RTN","LRCENDEL",117,0)
 ;
"RTN","LRCENDEL",118,0)
CHK63(LRDFN,LRODT,LRSN,LRTSTI) ; ccr_5538n - Check if tests being NP already have results in file #63.
"RTN","LRCENDEL",119,0)
 ;
"RTN","LRCENDEL",120,0)
 N LR60,LRAA,LRAD,LRAN,LRIDT,LRNOP,LRSS,LRX
"RTN","LRCENDEL",121,0)
 S LRNOP=0
"RTN","LRCENDEL",122,0)
 I '($D(^LRO(69,LRODT,1,LRSN,2,LRTSTI,0))#2) Q LRNOP
"RTN","LRCENDEL",123,0)
 S LRX=$G(^LRO(69,LRODT,1,LRSN,2,LRTSTI,0))
"RTN","LRCENDEL",124,0)
 S LR60=+$P(LRX,U,1)
"RTN","LRCENDEL",125,0)
 S LRAD=+$P(LRX,U,3)
"RTN","LRCENDEL",126,0)
 S LRAA=+$P(LRX,U,4)
"RTN","LRCENDEL",127,0)
 S LRAN=+$P(LRX,U,5)
"RTN","LRCENDEL",128,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),U,2)
"RTN","LRCENDEL",129,0)
 I 'LR60!('LRAD)!('LRAA)!('LRAN)!(LRSS="") Q LRNOP
"RTN","LRCENDEL",130,0)
 S LRIDT=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRCENDEL",131,0)
 S LRX=$$CHK63^LRTSTOUT(LR60,LRDFN,LRSS,LRIDT)
"RTN","LRCENDEL",132,0)
 I LRX>0 S LRNOP=1
"RTN","LRCENDEL",133,0)
 Q LRNOP
"RTN","LRCENDEL",134,0)
 ;
"RTN","LRCENDEL",135,0)
 ;
"RTN","LRCENDEL",136,0)
END K %,A,AGE,DFN,DIC,DIE,DOB,DQ,DR,DWLW,I,J,K,LRAA,LRACC,LRACN0,LRAD,LRAN,LRCL,LRCNT,LRCOL,LRDOC,LRDPF,LRDTM,LREND,LRIDT
"RTN","LRCENDEL",137,0)
 K LRNOW,LRLL,LRLLOC,LRNOP,LROD0,LROD1,LROD3,LRODT,LROOS,LRORD,LROS,LROSD,LROT,LROV,LRROD
"RTN","LRCENDEL",138,0)
 K LRSCNXB,LRSN,LRSPEC,LRSS,LRTC,LRTP,LRTSTS,LRT,LRTT,LRURG,LRUSI,LRUSNM,LRWRD,PNM,SEX,SSN,T,X,X1,X2,X3,X4,Y,Z,LRNATURE,ORIFN
"RTN","LRCENDEL",139,0)
 K LRCANK,LRTN,LRCCOM,LRCCOM1 D END^LRTSTOUT
"RTN","LRCENDEL",140,0)
 K LRACN,LRJ,LRTSTI,LROTA
"RTN","LRCENDEL",141,0)
 Q
"RTN","LREGFR")
0^149^B30928139
"RTN","LREGFR",1,0)
LREGFR ;DALOI/STAFF - Calculate Creatinine-eGFR ;02/28/12  20:15
"RTN","LREGFR",2,0)
 ;;5.2;LAB SERVICE;**289,313,350**;Sep 27, 1994;Build 230
"RTN","LREGFR",3,0)
 ;
"RTN","LREGFR",4,0)
 ; Reference to EN^DDIOL supported by IA #10142
"RTN","LREGFR",5,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","LREGFR",6,0)
 ; Reference to DEM^VADPT supported by IA # 10061
"RTN","LREGFR",7,0)
 ;
"RTN","LREGFR",8,0)
 ; This routine is a delta check for the lab test eGFR called by delta
"RTN","LREGFR",9,0)
 ; check CREATININE-EGFR. The eGFR test is calculated.
"RTN","LREGFR",10,0)
 ;
"RTN","LREGFR",11,0)
 ; Provided Data
"RTN","LREGFR",12,0)
 ;   DOB - Patient's date of birth
"RTN","LREGFR",13,0)
 ; LRDFN - entry in LAB DATA file
"RTN","LREGFR",14,0)
 ; LRIDT - inverse date/time of entry in LAB DATA file
"RTN","LREGFR",15,0)
 ;  LRNG - variable containing normals/units and delta check
"RTN","LREGFR",16,0)
 ;  LRSB - dataname for creatinine result
"RTN","LREGFR",17,0)
 ;
"RTN","LREGFR",18,0)
STRT(DFN,LRTR) ; Start Processing the Routine
"RTN","LREGFR",19,0)
 ; Call with DFN = parent file ien
"RTN","LREGFR",20,0)
 ;          LRTR = serum creatinine value as mg/dl
"RTN","LREGFR",21,0)
 ;
"RTN","LREGFR",22,0)
 ; Do not calculate eGFR if called from group data review.
"RTN","LREGFR",23,0)
 I $D(LRGVP) Q
"RTN","LREGFR",24,0)
 ;
"RTN","LREGFR",25,0)
 N AGE,LRFLG,LRTN,LRDC,LRRC,LRX,LRY,SEX,X,Y
"RTN","LREGFR",26,0)
 ;
"RTN","LREGFR",27,0)
 ; Determine test to store eFGR
"RTN","LREGFR",28,0)
 S LRDC=$P(LRNG,"^",8),LRY=""
"RTN","LREGFR",29,0)
 S LRX=$$GET1^DIQ(62.1,LRDC_",",61.1,"I")
"RTN","LREGFR",30,0)
 I LRX S LRY=$$GET1^DIQ(60,LRX_",",5,"I")
"RTN","LREGFR",31,0)
 S LRTN=$P(LRY,";",2)
"RTN","LREGFR",32,0)
 I LRTN="" D  Q
"RTN","LREGFR",33,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Delta check not configured**") Q
"RTN","LREGFR",34,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Delta check not configured**")
"RTN","LREGFR",35,0)
 ;
"RTN","LREGFR",36,0)
 ; Quit if creatinine unchanged and eGFR already calculated and not 'pending'.
"RTN","LREGFR",37,0)
 I $P($G(LRSB(LRSB)),"^")=LRTR,$P($G(LRSB(LRTN)),"^")'="",$P(LRSB(LRTN),"^")'="pending" Q
"RTN","LREGFR",38,0)
 ;
"RTN","LREGFR",39,0)
 ; Check for eGFR dataname in test editing profile.
"RTN","LREGFR",40,0)
 ; If creatinine changed and eGFR previously calculated then warn.
"RTN","LREGFR",41,0)
 I '$D(^TMP("LR",$J,"TMP",LRTN)) D  Q
"RTN","LREGFR",42,0)
 . I $P($G(LRSB(LRSB)),"^")=LRTR Q
"RTN","LREGFR",43,0)
 . I $P($G(^LR(LRDFN,"CH",LRIDT,LRTN)),"^")'="" D
"RTN","LREGFR",44,0)
 . . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not in test editing profile - Creatinine Changed**") Q
"RTN","LREGFR",45,0)
 . . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not in test editing profile - Creatinine Changed**")
"RTN","LREGFR",46,0)
 ;
"RTN","LREGFR",47,0)
 ; Calculate age based on specimen date/time
"RTN","LREGFR",48,0)
 S AGE=""
"RTN","LREGFR",49,0)
 ; If no collection date/time then set from specimen LRIDT.
"RTN","LREGFR",50,0)
 I $G(LRCDT)="" N LRCDT S LRCDT=$P(^LR(LRDFN,"CH",LRIDT,0),"^")
"RTN","LREGFR",51,0)
 I LRCDT,DOB S AGE=($$FMDIFF^XLFDT(LRCDT,DOB,1))\365.25
"RTN","LREGFR",52,0)
 I 'AGE D  Q
"RTN","LREGFR",53,0)
 . S $P(LRSB(LRTN),"^")="canc"
"RTN","LREGFR",54,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - No Age Recorded**") Q
"RTN","LREGFR",55,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - No Age Recorded**")
"RTN","LREGFR",56,0)
 ;
"RTN","LREGFR",57,0)
 S LRFLG=0
"RTN","LREGFR",58,0)
 I AGE<18!(AGE>70) S LRFLG=$$GET^XPAR("DIV^PKG","LR EGFR AGE CUTOFF",1,"Q")
"RTN","LREGFR",59,0)
 I AGE<18,LRFLG?1(1"1",1"3") D  Q
"RTN","LREGFR",60,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Age <18**") Q
"RTN","LREGFR",61,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Age <18**")
"RTN","LREGFR",62,0)
 . S $P(LRSB(LRTN),"^")="canc"
"RTN","LREGFR",63,0)
 I AGE>70,LRFLG>1 D  Q
"RTN","LREGFR",64,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Age >70**") Q
"RTN","LREGFR",65,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Age >70**")
"RTN","LREGFR",66,0)
 . S $P(LRSB(LRTN),"^")="canc"
"RTN","LREGFR",67,0)
 ;
"RTN","LREGFR",68,0)
 S SEX=""
"RTN","LREGFR",69,0)
 I LRDPF=2 S SEX=$P(VADM(5),U)
"RTN","LREGFR",70,0)
 I LRDPF=67 S SEX=$$GET1^DIQ(67,DFN_",",.02,"I")
"RTN","LREGFR",71,0)
 I SEX=""!("MF"'[SEX) D  Q
"RTN","LREGFR",72,0)
 . S $P(LRSB(LRTN),"^")="canc"
"RTN","LREGFR",73,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - No Sex Recorded**") Q
"RTN","LREGFR",74,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - No Sex Recorded**")
"RTN","LREGFR",75,0)
 ;
"RTN","LREGFR",76,0)
 ; Determine race
"RTN","LREGFR",77,0)
 S LRRC=$$RACE(DFN)
"RTN","LREGFR",78,0)
 ;
"RTN","LREGFR",79,0)
 I LRTR'>0 D  Q
"RTN","LREGFR",80,0)
 . S $P(LRSB(LRTN),"^")="canc"
"RTN","LREGFR",81,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Creatinine <=0**") Q
"RTN","LREGFR",82,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: **eGFR not Calculated - Creatinine <=0**")
"RTN","LREGFR",83,0)
 ;
"RTN","LREGFR",84,0)
 ; Compute eGFR return-value
"RTN","LREGFR",85,0)
 ; Set user(DUZ) and site(DUZ(2) in case delta check calculated during entry of reference lab results.
"RTN","LREGFR",86,0)
 N LRCMETH,LREGFR,LRFACTOR,LRX
"RTN","LREGFR",87,0)
 S LRCMETH=+$$GET^XPAR("DIV^PKG","LR EGFR METHOD",1,"Q")
"RTN","LREGFR",88,0)
 S LRFACTOR=$S(LRCMETH=0:186,LRCMETH=1:175,1:186)
"RTN","LREGFR",89,0)
 S LREGFR=LRFACTOR*(LRTR**-1.154)*(AGE**-.203)
"RTN","LREGFR",90,0)
 I SEX="F" S LREGFR=LREGFR*.742
"RTN","LREGFR",91,0)
 I LRRC=1 S LREGFR=LREGFR*1.21
"RTN","LREGFR",92,0)
 ;
"RTN","LREGFR",93,0)
 I 'LREGFR Q
"RTN","LREGFR",94,0)
 ;
"RTN","LREGFR",95,0)
 I LREGFR>60,$$GET^XPAR("DIV^PKG","LR EGFR RESULT SUPPRESS",1,"Q") S LREGFR=">60"
"RTN","LREGFR",96,0)
 E  S LRX=+$$GET1^DID(63.04,LRTN,"","DECIMAL DEFAULT"),LREGFR=$FN(LREGFR,"",LRX)
"RTN","LREGFR",97,0)
 ;
"RTN","LREGFR",98,0)
 S $P(LRSB(LRTN),"^")=LREGFR
"RTN","LREGFR",99,0)
 S $P(LRSB(LRTN),"^",4)=$G(DUZ),$P(LRSB(LRTN),"^",9)=$G(DUZ(2))
"RTN","LREGFR",100,0)
 ;
"RTN","LREGFR",101,0)
 I LRRC="U" D
"RTN","LREGFR",102,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: Race unknown, if African American multiply result by 1.210") Q
"RTN","LREGFR",103,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: Race unknown, if African American multiply result by 1.210")
"RTN","LREGFR",104,0)
 ;
"RTN","LREGFR",105,0)
 I LREGFR=">60" D
"RTN","LREGFR",106,0)
 . I $$CHKDUP(LRDFN,LRIDT,"For eGFR: eGFR results >60 are imprecise. Many variables affect the") Q
"RTN","LREGFR",107,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"For eGFR: eGFR results >60 are imprecise. Many variables affect the")
"RTN","LREGFR",108,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"calculated result. Interpretation of eGFR results >60 must be")
"RTN","LREGFR",109,0)
 . D FILECOM^LRVR4(LRDFN,LRIDT,"monitored over time.")
"RTN","LREGFR",110,0)
 ;
"RTN","LREGFR",111,0)
 Q
"RTN","LREGFR",112,0)
 ;
"RTN","LREGFR",113,0)
 ;
"RTN","LREGFR",114,0)
RACE(DFN) ; Get Race
"RTN","LREGFR",115,0)
 ;  Call with DFN = ien of PATIENT file (#2)
"RTN","LREGFR",116,0)
 ;  Returns   XRC = 1 (African American)
"RTN","LREGFR",117,0)
 ;                  0 (non African American)
"RTN","LREGFR",118,0)
 ;                  U (unknown)
"RTN","LREGFR",119,0)
 ;
"RTN","LREGFR",120,0)
 N XA,XB,XC,XD,XE,XRC
"RTN","LREGFR",121,0)
 S XA="BLACK",XB="AFRICAN",XC="HISPANIC,",XD="UNKNOWN",XE="DECLINED"
"RTN","LREGFR",122,0)
 S XRC=""
"RTN","LREGFR",123,0)
 ;
"RTN","LREGFR",124,0)
 ; If patient from PATIENT file (#2).
"RTN","LREGFR",125,0)
 I LRDPF=2 D
"RTN","LREGFR",126,0)
 . N VADM
"RTN","LREGFR",127,0)
 . D DEM^VADPT
"RTN","LREGFR",128,0)
 . S XRC=$P($G(VADM(12,1)),U,2)
"RTN","LREGFR",129,0)
 . S:XRC="" XRC=$P($G(VADM(8)),U,2)
"RTN","LREGFR",130,0)
 ;
"RTN","LREGFR",131,0)
 ; If patient from REFERRAL file (#67).
"RTN","LREGFR",132,0)
 I LRDPF=67 S XRC=$$GET1^DIQ(67,DFN_",",.06)
"RTN","LREGFR",133,0)
 ;
"RTN","LREGFR",134,0)
 ; If race not defined then set to unknown.
"RTN","LREGFR",135,0)
 I XRC="" S XRC="U"
"RTN","LREGFR",136,0)
 ;
"RTN","LREGFR",137,0)
 ; If race contains "BLACK" or "AFRICAN" but not HISPANIC then return "1"
"RTN","LREGFR",138,0)
 I XRC[XA!(XRC[XB) I XRC'[XC S XRC=1
"RTN","LREGFR",139,0)
 ;
"RTN","LREGFR",140,0)
 ; If unknown or declined then return "U"
"RTN","LREGFR",141,0)
 I XRC[XD!(XRC[XE) S XRC="U"
"RTN","LREGFR",142,0)
 ; If not unknown or African-American then return "0"
"RTN","LREGFR",143,0)
 I XRC'=1,XRC'="U" S XRC=0
"RTN","LREGFR",144,0)
 Q XRC
"RTN","LREGFR",145,0)
 ;
"RTN","LREGFR",146,0)
 ;
"RTN","LREGFR",147,0)
CHKDUP(LRDFN,LRIDT,LRSBCOM) ; Check for duplicate comment
"RTN","LREGFR",148,0)
 ; Call with  LRDFN = File #63 internal entry number
"RTN","LREGFR",149,0)
 ;            LRIDT = inverse date/time
"RTN","LREGFR",150,0)
 ;          LRSBCOM = comment to check if duplicate
"RTN","LREGFR",151,0)
 ;
"RTN","LREGFR",152,0)
 ; Returns    LRDUP = 0 (not a duplicate), 1 (comment exists - duplicate)
"RTN","LREGFR",153,0)
 ;
"RTN","LREGFR",154,0)
 N LRDUP,LRI,LRY,LRX
"RTN","LREGFR",155,0)
 S (LRDUP,LRI)=0,LRY=$TR(LRSBCOM," ",""),LRY=$$UP^XLFSTR(LRY)
"RTN","LREGFR",156,0)
 F  S LRI=$O(^LR(LRDFN,"CH",LRIDT,1,LRI)) Q:'LRI  D  Q:LRDUP
"RTN","LREGFR",157,0)
 . S LRX=$P($G(^LR(LRDFN,"CH",LRIDT,1,LRI,0)),"^")
"RTN","LREGFR",158,0)
 . S LRX=$TR(LRX," ",""),LRX=$$UP^XLFSTR(LRX)
"RTN","LREGFR",159,0)
 . I LRX=LRY S LRDUP=1
"RTN","LREGFR",160,0)
 Q LRDUP
"RTN","LREGFR",161,0)
 ;
"RTN","LREGFR",162,0)
 ;*************************************************************
"RTN","LREGFR",163,0)
 ;LR(E)stimated(G)lomerular(F)iltration(R)ate: LREGFR
"RTN","LREGFR",164,0)
 ;LR(T)est(N)ame:            LRTN
"RTN","LREGFR",165,0)
 ;        (R)esults:         LRTR
"RTN","LREGFR",166,0)
 ;LR(R)ace:                  LRRC
"RTN","LREGFR",167,0)
 ;
"RTN","LREGFR",168,0)
 ;*************************************************************
"RTN","LREGFR",169,0)
 ;*                      end of routine                       *
"RTN","LREGFR",170,0)
 ;*************************************************************
"RTN","LRERT")
0^133^B38702192
"RTN","LRERT",1,0)
LRERT ;DALOI/JDB - STS TEAM UTILITIES ;06/10/09  14:44
"RTN","LRERT",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRERT",3,0)
 ;
"RTN","LRERT",4,0)
 Q
"RTN","LRERT",5,0)
 ;
"RTN","LRERT",6,0)
BLDERTX(LRFILE,LRFIEN,LRDELIM,LRERT,LRTYPE,LRFLAGS) ;
"RTN","LRERT",7,0)
 ; Constructs a string or array used for the ERT data extract
"RTN","LRERT",8,0)
 ; FileMan safe
"RTN","LRERT",9,0)
 ; Called by NOTIFY^LRSCTX1
"RTN","LRERT",10,0)
 ; Inputs
"RTN","LRERT",11,0)
 ;   LRFILE: File #
"RTN","LRERT",12,0)
 ;   LRFIEN: Entry's IEN
"RTN","LRERT",13,0)
 ;  LRDELIM: Delimiter to use <dflt=|>
"RTN","LRERT",14,0)
 ;    LRERT:<byref>  See Outputs
"RTN","LRERT",15,0)
 ;   LRTYPE: Return the string or the array elements
"RTN","LRERT",16,0)
 ;         :  1=String  2=Array <dflt=2>
"RTN","LRERT",17,0)
 ;         : Return data can be big so need to limit in order
"RTN","LRERT",18,0)
 ;         : to watch symbol table use.
"RTN","LRERT",19,0)
 ;  LRFLAGS: Controls behavior of the API
"RTN","LRERT",20,0)
 ;         : S=Populate SCT text with text from Lexicon
"RTN","LRERT",21,0)
 ; Outputs
"RTN","LRERT",22,0)
 ;   The ERT extract string.
"RTN","LRERT",23,0)
 ;   The ERT array:  ERT(1)=id  ERT(2)=Entry name, etc..
"RTN","LRERT",24,0)
 ; ERT extract format (from ^LRSRVR6)
"RTN","LRERT",25,0)
 ; Station #-File #-IEN|Entry Name|SNOMED I|VUID|SNOMED CT|SNOMED CT TERM|Mapping Exception|Related Specimen|Related Specimen ID|Extract Ver|Term Status|
"RTN","LRERT",26,0)
 ;
"RTN","LRERT",27,0)
 N LRCNT,LRDATA,LRDATA2,LRDSUB,LRI,LRMSG,LRSCT,LRSITE,LRT,LRX,LRY
"RTN","LRERT",28,0)
 N DA,DIC,DIE,DIERR,DIR,DR,X,X1,X2,Y
"RTN","LRERT",29,0)
 S LRT=$T ;preserve $T
"RTN","LRERT",30,0)
 S LRDELIM=$G(LRDELIM),LRTYPE=$G(LRTYPE,2)
"RTN","LRERT",31,0)
 S LRFLAGS=$G(LRFLAGS)_" " ;so LRFLAGS'="" for [ operations
"RTN","LRERT",32,0)
 I LRDELIM="" S LRDELIM="|"
"RTN","LRERT",33,0)
 S LRDSUB=LRDELIM
"RTN","LRERT",34,0)
 I LRDELIM="|" S LRDSUB="!" ;used for DELIM $TR
"RTN","LRERT",35,0)
 I LRDELIM="^" S LRDSUB="~"
"RTN","LRERT",36,0)
 ;
"RTN","LRERT",37,0)
 ; Initialize LRERT array. STS expects all elements to be defined or null
"RTN","LRERT",38,0)
 K LRERT
"RTN","LRERT",39,0)
 F LRI=1:1:11 S LRERT(LRI)=""
"RTN","LRERT",40,0)
 ;
"RTN","LRERT",41,0)
 S LRX=$$KSP^XUPARAM("INST")
"RTN","LRERT",42,0)
 S LRX=$$NS^XUAF4(LRX)
"RTN","LRERT",43,0)
 S LRSITE=$P(LRX,"^",2)
"RTN","LRERT",44,0)
 S LRX=LRSITE_"-"_LRFILE_"-"_LRFIEN
"RTN","LRERT",45,0)
 S LRERT(1)=LRX
"RTN","LRERT",46,0)
 D GETS^DIQ(LRFILE,LRFIEN_",","@;.01;2;20;21","EI","LRDATA","LRMSG")
"RTN","LRERT",47,0)
 M LRDATA2=LRDATA(LRFILE,LRFIEN_",")
"RTN","LRERT",48,0)
 K LRDATA
"RTN","LRERT",49,0)
 S LRCNT=1
"RTN","LRERT",50,0)
 F LRI=.01,2,0,20 D  ;  0=dummy placeholder for unused VUID field
"RTN","LRERT",51,0)
 . S LRCNT=LRCNT+1
"RTN","LRERT",52,0)
 . I LRI=0 Q
"RTN","LRERT",53,0)
 . S LRX=$G(LRDATA2(LRI,"E"))
"RTN","LRERT",54,0)
 . I LRI=2,LRX'="" D
"RTN","LRERT",55,0)
 . . I LRFILE=62 S LRX="" Q  ;fld #2 not used in #62
"RTN","LRERT",56,0)
 . . I LRFILE>60.9,LRFILE<61.61 S LRY=((LRFILE*10)#610)+1,LRX=$E("TMEFDPJ",LRY)_"-"_LRX
"RTN","LRERT",57,0)
 . I LRX'="" S LRERT(LRCNT)=$TR(LRX,LRDELIM,LRDSUB)
"RTN","LRERT",58,0)
 ;
"RTN","LRERT",59,0)
 ; Send SCT term name if code and flag to send
"RTN","LRERT",60,0)
 S LRSCT=$G(LRDATA2(20,"E"))
"RTN","LRERT",61,0)
 I LRSCT'="",LRFLAGS["S" D
"RTN","LRERT",62,0)
 . K LRDATA
"RTN","LRERT",63,0)
 . S LRX=$$CODE^LRSCT(LRSCT,"SCT",,"LRDATA")
"RTN","LRERT",64,0)
 . Q:LRX<1
"RTN","LRERT",65,0)
 . S LRX=$G(LRDATA("F"))
"RTN","LRERT",66,0)
 . I LRX="" S LRX=$G(LRDATA("P"))
"RTN","LRERT",67,0)
 . I LRX'="" S LRERT(6)=$TR(LRX,LRDELIM,LRDSUB)
"RTN","LRERT",68,0)
 ;
"RTN","LRERT",69,0)
 ; If COLLECTION SAMPLE (#62) then send related specimen and specimen id
"RTN","LRERT",70,0)
 I LRFILE=62 D
"RTN","LRERT",71,0)
 . N LR61
"RTN","LRERT",72,0)
 . S LR61=$P($G(^LAB(LRFILE,LRFIEN,0)),"^",2) Q:LR61<1
"RTN","LRERT",73,0)
 . S LRERT(8)=$P($G(^LAB(61,LR61,0)),"^")
"RTN","LRERT",74,0)
 . S LRERT(9)=LRSITE_"-61-"_LR61
"RTN","LRERT",75,0)
 ;
"RTN","LRERT",76,0)
 S LRERT(10)=$$VER^LRSRVR6
"RTN","LRERT",77,0)
 S LRERT(11)=$G(LRDATA2(21,"I"))
"RTN","LRERT",78,0)
 ;
"RTN","LRERT",79,0)
 I LRTYPE=1 D
"RTN","LRERT",80,0)
 . S LRI=0
"RTN","LRERT",81,0)
 . F  S LRI=$O(LRERT(LRI)) Q:LRI<1  S $P(LRERT,LRDELIM,LRI)=LRERT(LRI) K LRERT(LRI)
"RTN","LRERT",82,0)
 ;
"RTN","LRERT",83,0)
 I LRT ;restore $T
"RTN","LRERT",84,0)
 Q $S(LRTYPE=1:LRERT,1:"")
"RTN","LRERT",85,0)
 ;
"RTN","LRERT",86,0)
 ;
"RTN","LRERT",87,0)
TNUM(FILE,IEN,NOW,EXCTYP) ;
"RTN","LRERT",88,0)
 ; Construct transaction number
"RTN","LRERT",89,0)
 ; Inputs
"RTN","LRERT",90,0)
 ;   FILE: File #
"RTN","LRERT",91,0)
 ;    IEN: IEN of entry
"RTN","LRERT",92,0)
 ;    NOW: Date/Time of process <dflt=Now>
"RTN","LRERT",93,0)
 ; EXCTYP: ERT Exception Type (1=load, 2=ref lab, 3=local edit)
"RTN","LRERT",94,0)
 ; Returns Transaction number string
"RTN","LRERT",95,0)
 N TNUM,X
"RTN","LRERT",96,0)
 S FILE=$G(FILE)
"RTN","LRERT",97,0)
 S IEN=$G(IEN)
"RTN","LRERT",98,0)
 S NOW=$G(NOW)
"RTN","LRERT",99,0)
 S EXCTYP=$G(EXCTYP)
"RTN","LRERT",100,0)
 I NOW="" S NOW=$$NOW^XLFDT()
"RTN","LRERT",101,0)
 I EXCTYP'>0 Q ""
"RTN","LRERT",102,0)
 S X=$$KSP^XUPARAM("INST")
"RTN","LRERT",103,0)
 S X=$$NS^XUAF4(X)
"RTN","LRERT",104,0)
 S X=$P(X,"^",2)
"RTN","LRERT",105,0)
 ; transaction #: Site-Exc Type-NOW-File#:IEN
"RTN","LRERT",106,0)
 S TNUM=X_"-"_EXCTYP_"-"_NOW_"-"_FILE_":"_IEN ;transaction #
"RTN","LRERT",107,0)
 S TNUM=$$UP^XLFSTR(TNUM)
"RTN","LRERT",108,0)
 Q TNUM
"RTN","LRERT",109,0)
 ;
"RTN","LRERT",110,0)
 ;
"RTN","LRERT",111,0)
LOGIT(TEXT,IN,TMPNM) ;
"RTN","LRERT",112,0)
 ; FileMan safe
"RTN","LRERT",113,0)
 ; Adds data to the ^XTMP gobal.
"RTN","LRERT",114,0)
 ; Inputs
"RTN","LRERT",115,0)
 ;  TEXT:<byref> Save symtbl space (dont manipulate)
"RTN","LRERT",116,0)
 ;  IN: <byref>
"RTN","LRERT",117,0)
 ;           IN("TNUM") - Transaction Number <req>
"RTN","LRERT",118,0)
 ;           IN("TDT") - Transaction date/time <opt>
"RTN","LRERT",119,0)
 ;           IN("FILE") targ file <req>
"RTN","LRERT",120,0)
 ;           IN("FIEN") ;targ file IEN <req>
"RTN","LRERT",121,0)
 ;           IN("SCT") ;SCT code <opt>
"RTN","LRERT",122,0)
 ;           IN("R6247") ;#62.49 IEN <opt>
"RTN","LRERT",123,0)
 ;           IN("STSEXC") ;STS exception type <req>
"RTN","LRERT",124,0)
 ;           IN("HDIERR") ;STS error flag <opt> 0 or 1
"RTN","LRERT",125,0)
 ;           IN("PREV","SCT")
"RTN","LRERT",126,0)
 ;           IN("PREV","TEXT")
"RTN","LRERT",127,0)
 ; TMPNM:<opt> XTMP subscript <dflt=LRSCTX-STS>
"RTN","LRERT",128,0)
 ; Outputs
"RTN","LRERT",129,0)
 ;  Record # or "0^err #^err msg"
"RTN","LRERT",130,0)
 N FILE,FIEN,LRLCK,REC,TEXT2,SCTCHNG,STR,STSEXC,TDT,TNUM,X
"RTN","LRERT",131,0)
 ;
"RTN","LRERT",132,0)
 S TMPNM=$G(TMPNM)
"RTN","LRERT",133,0)
 I TMPNM="" S TMPNM="LRSCTX-STS"
"RTN","LRERT",134,0)
 ;
"RTN","LRERT",135,0)
 ; Update ^XTMP
"RTN","LRERT",136,0)
 S ^XTMP(TMPNM,0)=$$FMADD^XLFDT(DT,365)_U_$$NOW^XLFDT()_U_"STS Term/SCT Alerts"
"RTN","LRERT",137,0)
 S STR=$$TRIM^XLFSTR(TEXT)
"RTN","LRERT",138,0)
 S LRLCK=$NA(^XTMP(TMPNM))
"RTN","LRERT",139,0)
 S X=$$GETLOCK^LRUTIL(LRLCK,60)
"RTN","LRERT",140,0)
 I 'X Q "0^1^Failed to acquire lock."
"RTN","LRERT",141,0)
 S FILE=+$G(IN("FILE")),FIEN=+$G(IN("FIEN")),TNUM=$G(IN("TNUM"))
"RTN","LRERT",142,0)
 S TDT=$G(IN("TDT"))
"RTN","LRERT",143,0)
 I TDT="" S TDT=$$NOW^XLFDT()
"RTN","LRERT",144,0)
 S STSEXC=$G(IN("STSEXC"))
"RTN","LRERT",145,0)
 S:STSEXC="" STSEXC=0
"RTN","LRERT",146,0)
 I TNUM="" S TNUM=$$TNUM(FILE,FIEN,TDT,STSEXC) S LRERT("TNUM")=TNUM
"RTN","LRERT",147,0)
 ;
"RTN","LRERT",148,0)
 S REC=+$O(^XTMP(TMPNM,"A"),-1)+1
"RTN","LRERT",149,0)
 S ^XTMP(TMPNM,REC,0)=$E(STR,1,200)
"RTN","LRERT",150,0)
 S ^XTMP(TMPNM,REC,1)=$E(STR,201,$L(STR))
"RTN","LRERT",151,0)
 S $P(^XTMP(TMPNM,REC,2),U,1)=TNUM ;transaction #
"RTN","LRERT",152,0)
 S $P(^XTMP(TMPNM,REC,2),U,2)=TDT ;transaction date/time
"RTN","LRERT",153,0)
 S $P(^XTMP(TMPNM,REC,2),U,3)=FILE ;targ file
"RTN","LRERT",154,0)
 S $P(^XTMP(TMPNM,REC,2),U,4)=FIEN ;targ file IEN
"RTN","LRERT",155,0)
 S $P(^XTMP(TMPNM,REC,2),U,5)=$G(IN("SCT")) ;SCT code
"RTN","LRERT",156,0)
 S $P(^XTMP(TMPNM,REC,2),U,6)=$G(IN("R6247")) ;#62.49 IEN
"RTN","LRERT",157,0)
 S $P(^XTMP(TMPNM,REC,2),U,7)=DUZ
"RTN","LRERT",158,0)
 S $P(^XTMP(TMPNM,REC,2),U,8)=STSEXC ;STS exception type
"RTN","LRERT",159,0)
 S X=""
"RTN","LRERT",160,0)
 I $G(IN("HDIERR"))'="" S X=IN("HDIERR")
"RTN","LRERT",161,0)
 I X="" I $D(IN("HDIERR")) S X=$S($D(IN("HDIERR")):1,1:0)
"RTN","LRERT",162,0)
 S $P(^XTMP(TMPNM,REC,2),U,9)=X ;STS error
"RTN","LRERT",163,0)
 S ^XTMP(TMPNM,REC,10)=$G(IN("PREV","SCT")) ;previous SCT code
"RTN","LRERT",164,0)
 S ^XTMP(TMPNM,REC,20)=$E($G(IN("PREV","TEXT")),1,200)
"RTN","LRERT",165,0)
 S ^XTMP(TMPNM,REC,21)=$E($G(IN("PREV","TEXT")),201,400)
"RTN","LRERT",166,0)
 S ^XTMP(TMPNM,REC,22)="" ;previous SCT FSN text
"RTN","LRERT",167,0)
 S ^XTMP(TMPNM,REC,23)="" ;SCT FSN text overflow
"RTN","LRERT",168,0)
 S ^XTMP(TMPNM,"B",$$UP^XLFSTR($E(STR,1,200)),REC)=""
"RTN","LRERT",169,0)
 S ^XTMP(TMPNM,"C",TNUM,REC)=""
"RTN","LRERT",170,0)
 S ^XTMP(TMPNM,"D",TDT,REC)=""
"RTN","LRERT",171,0)
 S ^XTMP(TMPNM,"E",+FILE,+FIEN,REC)=""
"RTN","LRERT",172,0)
 S ^XTMP(TMPNM,"F",STSEXC,REC)="" ;exception type xref
"RTN","LRERT",173,0)
 L -@LRLCK
"RTN","LRERT",174,0)
 Q REC
"RTN","LRERT",175,0)
 ;
"RTN","LRERT",176,0)
 ;
"RTN","LRERT",177,0)
OK2LOG(TEXT,IN,TMPNM) ;
"RTN","LRERT",178,0)
 ; FileMan safe
"RTN","LRERT",179,0)
 ; Checks if this change needs to be logged.
"RTN","LRERT",180,0)
 ; Inputs
"RTN","LRERT",181,0)
 ;   TEXT:<byref> Not manipulated (minimize symtbl use)
"RTN","LRERT",182,0)
 ;     IN:<byref>
"RTN","LRERT",183,0)
 ;            IN("FILE") <req>
"RTN","LRERT",184,0)
 ;            IN("SCT") <opt>
"RTN","LRERT",185,0)
 ;            IN("PREV","SCT") <opt>
"RTN","LRERT",186,0)
 ; Outputs
"RTN","LRERT",187,0)
 ;  1=OK to log  or 0 with error code^error msg
"RTN","LRERT",188,0)
 ;  If "0^2^SCT changed"  then this should still generate an alert
"RTN","LRERT",189,0)
 N X,I,STOP,STR,REC,TEXT2,STATUS,FILE
"RTN","LRERT",190,0)
 S TMPNM=$G(TMPNM)
"RTN","LRERT",191,0)
 I TMPNM="" S TMPNM="LRSCTX-STS"
"RTN","LRERT",192,0)
 S TEXT=$G(TEXT),FILE=$G(IN("FILE")),STATUS=1
"RTN","LRERT",193,0)
 S TEXT2=$$TRIM^XLFSTR(TEXT),TEXT2=$$UP^XLFSTR(TEXT2)
"RTN","LRERT",194,0)
 S STR=$E(TEXT2,1,200) ;some terms can be long and wont fit in a node
"RTN","LRERT",195,0)
 ; check if this term has been sent already.
"RTN","LRERT",196,0)
 S I=0,STOP=0
"RTN","LRERT",197,0)
 F  S I=$O(^XTMP(TMPNM,"B",STR,I)) Q:'I  D  Q:STOP
"RTN","LRERT",198,0)
 . I STR_$$UP^XLFSTR($G(^XTMP(TMPNM,I,1)))'=TEXT2 Q
"RTN","LRERT",199,0)
 . S DATA=$G(^XTMP(TMPNM,I,2))
"RTN","LRERT",200,0)
 . I $P(DATA,U,3)'=FILE Q
"RTN","LRERT",201,0)
 . S STOP=1
"RTN","LRERT",202,0)
 ;
"RTN","LRERT",203,0)
 I STOP S STATUS="0^1^Alert already sent."
"RTN","LRERT",204,0)
 ; did SCT change?
"RTN","LRERT",205,0)
 I STOP,$G(IN("PREV","SCT"))'=$G(IN("SCT")) S STATUS="0^2^SCT changed.",STOP=0
"RTN","LRERT",206,0)
 Q STATUS
"RTN","LRERT1")
0^134^B37373031
"RTN","LRERT1",1,0)
LRERT1 ;DALOI/JDB - STS TEAM UTILITIES ;04/10/12  15:38
"RTN","LRERT1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRERT1",3,0)
 ;
"RTN","LRERT1",4,0)
 ; Reference to LABXCPT^HDISVAP1 supported by DBIA #5026
"RTN","LRERT1",5,0)
 ;
"RTN","LRERT1",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRERT1",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRERT1",8,0)
 ;
"RTN","LRERT1",9,0)
 Q
"RTN","LRERT1",10,0)
 ;
"RTN","LRERT1",11,0)
TASK(LRFN,LRIEN) ;
"RTN","LRERT1",12,0)
 ; Tasks the STS/HDI alert process to ensure FileMan safety.
"RTN","LRERT1",13,0)
 ; Expects X1 and X2 FileMan arrays from Record based xref.
"RTN","LRERT1",14,0)
 ; Inputs
"RTN","LRERT1",15,0)
 ;   LRFN: File number
"RTN","LRERT1",16,0)
 ;  LRIEN: IEN
"RTN","LRERT1",17,0)
 ;
"RTN","LRERT1",18,0)
 ;ZEXCEPT: X1,X2
"RTN","LRERT1",19,0)
 ;
"RTN","LRERT1",20,0)
 N LRTN,LRVARS,LRX,LRVARS,LRX1,LRX2
"RTN","LRERT1",21,0)
 M LRX1=X1
"RTN","LRERT1",22,0)
 M LRX2=X2
"RTN","LRERT1",23,0)
 S LRTN="AERT^LRERT1("_LRFN_","_LRIEN_")"
"RTN","LRERT1",24,0)
 S LRVARS("LRX1(")="" ;Old values
"RTN","LRERT1",25,0)
 S LRVARS("LRX2(")="" ;New values
"RTN","LRERT1",26,0)
 S LRX=$$TASK^LRUTIL(LRTN,"Generate STS alert from xref",.LRVARS,1,$H,"")
"RTN","LRERT1",27,0)
 Q
"RTN","LRERT1",28,0)
 ;
"RTN","LRERT1",29,0)
 ;
"RTN","LRERT1",30,0)
AERT(LRFN,LRIEN) ;
"RTN","LRERT1",31,0)
 ; "AERT" new style xref handler (file #61, 61.2, 62)
"RTN","LRERT1",32,0)
 ; FileMan safe
"RTN","LRERT1",33,0)
 ; New style, MUMPS Action, Activity:null, Execution:Record
"RTN","LRERT1",34,0)
 ; Sequence 1 = .01  Sequence 2 = SNOMED CT
"RTN","LRERT1",35,0)
 ;PATCH^XPDUTL/10141
"RTN","LRERT1",36,0)
 ; Inputs
"RTN","LRERT1",37,0)
 ;   LRFN: File number
"RTN","LRERT1",38,0)
 ;  LRIEN: IEN
"RTN","LRERT1",39,0)
 ; To be 100% FileMan safe, this process should be queued.
"RTN","LRERT1",40,0)
 ; If this term is already in the alert file ^XTMP("LRSCTX-STS" and the SCT code has not changed, no alert is sent.
"RTN","LRERT1",41,0)
 ;
"RTN","LRERT1",42,0)
 ;ZEXCEPT: LRX1,LRX2,ZTQUEUED,ZTREQ
"RTN","LRERT1",43,0)
 ;
"RTN","LRERT1",44,0)
 ; Not being added/changed by user so quit
"RTN","LRERT1",45,0)
 Q:$D(LRFMERTS)
"RTN","LRERT1",46,0)
 ;
"RTN","LRERT1",47,0)
 N LRERT,LRNOW,LRTXT
"RTN","LRERT1",48,0)
 S LRFN=$G(LRFN),LRIEN=$G(LRIEN)
"RTN","LRERT1",49,0)
 I 'LRFN!('LRIEN) Q
"RTN","LRERT1",50,0)
 S LRTXT=$G(LRX2(1))
"RTN","LRERT1",51,0)
 S LRNOW=$$NOW^XLFDT()
"RTN","LRERT1",52,0)
 S LRERT("FILE")=LRFN
"RTN","LRERT1",53,0)
 S LRERT("FIEN")=LRIEN
"RTN","LRERT1",54,0)
 S LRERT("TNUM")=$$TNUM^LRERT(LRFN,LRIEN,LRNOW,3) ;3=local change
"RTN","LRERT1",55,0)
 S LRERT("SCT")=$G(LRX2(2))
"RTN","LRERT1",56,0)
 S LRERT("TDT")=LRNOW
"RTN","LRERT1",57,0)
 S LRERT("STSEXC")=3 ;local change
"RTN","LRERT1",58,0)
 S LRERT("PREV","TEXT")=$G(LRX1(1))
"RTN","LRERT1",59,0)
 S LRERT("PREV","SCT")=$G(LRX1(2))
"RTN","LRERT1",60,0)
 D  ;
"RTN","LRERT1",61,0)
 . N X,X1,X2,Y,DA,DIE,DIC,DIR,D0,DIU,LRX
"RTN","LRERT1",62,0)
 . S LRX=$$OK2LOG^LRERT(.LRTXT,.LRERT,"LRSCTX-ERT")
"RTN","LRERT1",63,0)
 . I 'LRX I $P(LRX,"^",2)'=2 Q  ;continue if SCT changed
"RTN","LRERT1",64,0)
 . S LRX=$$LOGIT^LRERT(.LRTXT,.LRERT,"LRSCTX-STS")
"RTN","LRERT1",65,0)
 . S LRX=$$NOTIFY(.LRTXT,.LRERT)
"RTN","LRERT1",66,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRERT1",67,0)
 Q
"RTN","LRERT1",68,0)
 ;
"RTN","LRERT1",69,0)
 ;
"RTN","LRERT1",70,0)
NOTIFY(LRTXT,LRERT) ;
"RTN","LRERT1",71,0)
 ;
"RTN","LRERT1",72,0)
 ; Private helper method
"RTN","LRERT1",73,0)
 ; FileMan safe
"RTN","LRERT1",74,0)
 ; Handles STS/Local notification for "local edit" new terms.
"RTN","LRERT1",75,0)
 ; If a new term has been added and not in ^XTMP:
"RTN","LRERT1",76,0)
 ;  1) alert STS  2) Add entry to ^XTMP  3) Email LAB MAPPING group
"RTN","LRERT1",77,0)
 ; Inputs
"RTN","LRERT1",78,0)
 ;   LRTXT: Term
"RTN","LRERT1",79,0)
 ;   LRERT:<byref>
"RTN","LRERT1",80,0)
 ; Outputs
"RTN","LRERT1",81,0)
 ;  String indicating success or error: Status^Error code^text
"RTN","LRERT1",82,0)
 ;     Status: 1=success  0=error
"RTN","LRERT1",83,0)
 ;  ie  "0^1^Term is null"  "0^4^"STS & MailMan error"
"RTN","LRERT1",84,0)
 ;
"RTN","LRERT1",85,0)
 ;ZEXCEPT: LRFIEN,LRFILE,LRSCT,NODE
"RTN","LRERT1",86,0)
 ;
"RTN","LRERT1",87,0)
 N DATA,DATA2,LRLCK,STOP,STR,STR2,NOTIFY,SITE
"RTN","LRERT1",88,0)
 N TNUM,TMPNM,TEXT,I,II,X,Y,LRHDI,LRHDIERR,TSTAT,TDT
"RTN","LRERT1",89,0)
 N DA,DR,DIE,DIR,DIC,X,X1,X2,Y,DIERR
"RTN","LRERT1",90,0)
 S LRTXT=$G(LRTXT)
"RTN","LRERT1",91,0)
 I $TR(LRTXT," ","")="" Q "0^1^Term is null"
"RTN","LRERT1",92,0)
 S LRFILE=$G(LRERT("FILE")),LRFIEN=$G(LRERT("FIEN")),LRSCT=$G(LRERT("SCT"))
"RTN","LRERT1",93,0)
 S NOTIFY=1 ;status of this process
"RTN","LRERT1",94,0)
 S TMPNM="LRSCTX-STS"
"RTN","LRERT1",95,0)
 S TDT=$G(LRERT("TDT"))
"RTN","LRERT1",96,0)
 I TDT="" S TDT=$$NOW^XLFDT() S LRERT("TDT")=TDT
"RTN","LRERT1",97,0)
 ; TSTAT  0=New record  1=Text changed  2=Text same
"RTN","LRERT1",98,0)
 S TSTAT=$G(LRERT("PREV","TEXT"))'=""
"RTN","LRERT1",99,0)
 I TSTAT I $G(LRERT("PREV","TEXT"))=LRTXT S TSTAT=2
"RTN","LRERT1",100,0)
 S TNUM=$G(LRERT("TNUM"))
"RTN","LRERT1",101,0)
 ;
"RTN","LRERT1",102,0)
 ; STS Reporting Array
"RTN","LRERT1",103,0)
 K DATA,LRHDI
"RTN","LRERT1",104,0)
 S LRHDI(3,1)=TNUM_"^"_TDT
"RTN","LRERT1",105,0)
 S X=$$BLDERTX^LRERT(LRFILE,LRFIEN,"|",.DATA,2,"S") ;new data
"RTN","LRERT1",106,0)
 M LRHDI(3,1,"SA")=DATA
"RTN","LRERT1",107,0)
 ;
"RTN","LRERT1",108,0)
 ; build a pseudo "before" data
"RTN","LRERT1",109,0)
 I TSTAT D
"RTN","LRERT1",110,0)
 . M LRHDI(3,1,"SB")=DATA
"RTN","LRERT1",111,0)
 . S LRHDI(3,1,"SB",2)=$G(LRERT("PREV","TEXT"))
"RTN","LRERT1",112,0)
 . S LRHDI(3,1,"SB",5)=$G(LRERT("PREV","SCT"))
"RTN","LRERT1",113,0)
 . S LRHDI(3,1,"SB",6)="" ;SCT text
"RTN","LRERT1",114,0)
 . S X=$G(LRERT("PREV","SCT"))
"RTN","LRERT1",115,0)
 . I X'="" D  ;
"RTN","LRERT1",116,0)
 . . K DATA
"RTN","LRERT1",117,0)
 . . S X=$$CODE^LRSCT(X,"SCT","","DATA")
"RTN","LRERT1",118,0)
 . . S LRHDI(3,1,"SB",6)=$G(DATA("F"))
"RTN","LRERT1",119,0)
 ;
"RTN","LRERT1",120,0)
 K DATA
"RTN","LRERT1",121,0)
 ;
"RTN","LRERT1",122,0)
 S X=$S(TSTAT:"modified in",1:"added to")
"RTN","LRERT1",123,0)
 S LRHDI(3,1,"TXT")="Term "_X_" file #"_LRFILE_" (entry #"_LRFIEN_")"
"RTN","LRERT1",124,0)
 ;
"RTN","LRERT1",125,0)
 D LABXCPT^HDISVAP1("LRHDI")
"RTN","LRERT1",126,0)
 ; check LRHDI("ERROR") and add error to local email
"RTN","LRERT1",127,0)
 K LRHDIERR
"RTN","LRERT1",128,0)
 M LRHDIERR("ERROR")=LRHDI("ERROR")
"RTN","LRERT1",129,0)
 K LRHDI
"RTN","LRERT1",130,0)
 I $D(LRHDIERR) S NOTIFY="0^2^HDI error"
"RTN","LRERT1",131,0)
 ;
"RTN","LRERT1",132,0)
 ; Update ^XTMP
"RTN","LRERT1",133,0)
 S LRERT("HDIERR")=$S($D(LRHDIERR):1,1:0)
"RTN","LRERT1",134,0)
 S X=$$LOGIT^LRERT(LRTXT,.LRERT)
"RTN","LRERT1",135,0)
 ;
"RTN","LRERT1",136,0)
 ; Notify local staff of event (G.LAB MAPPING)
"RTN","LRERT1",137,0)
 N DA,DIE,DIC,DIR,D0,DIFROM,LRMTXT,X,X1,X2,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,XMMG
"RTN","LRERT1",138,0)
 ;
"RTN","LRERT1",139,0)
 S XMSUB="Local modification to file (#"_LRFILE_":"_LRFIEN_")"
"RTN","LRERT1",140,0)
 S X=$S(TSTAT:"modified in",1:"added to")
"RTN","LRERT1",141,0)
 S LRMTXT(1,0)="Term "_X_" file #"_LRFILE_" (entry #"_LRFIEN_")"
"RTN","LRERT1",142,0)
 S LRMTXT(2,0)=" "
"RTN","LRERT1",143,0)
 I TSTAT=1 S LRMTXT(3,0)="Previous Text: "_$G(LRERT("PREV","TEXT"))
"RTN","LRERT1",144,0)
 S LRMTXT(4,0)=$S('TSTAT:"New Text",1:"Term")_": "_LRTXT
"RTN","LRERT1",145,0)
 S X=$S(TSTAT:"Modified",1:"Added")
"RTN","LRERT1",146,0)
 S LRMTXT(5,0)=X_" by: "_$$UP^XLFSTR($$NAME^XUSER(DUZ,"F"))
"RTN","LRERT1",147,0)
 S LRMTXT(6,0)=" "
"RTN","LRERT1",148,0)
 S LRMTXT(7,0)="Tracking information below:"
"RTN","LRERT1",149,0)
 S LRMTXT(8,0)="Transaction date: "_$$FMTE^XLFDT(TDT)
"RTN","LRERT1",150,0)
 S LRMTXT(9,0)="Transaction number: "_TNUM
"RTN","LRERT1",151,0)
 S LRMTXT(10,0)="SNOMED CT code: "_$S(LRSCT'="":LRSCT,1:"n/a")
"RTN","LRERT1",152,0)
 I $G(LRERT("PREV","SCT"))'="" D  ;
"RTN","LRERT1",153,0)
 . S X=LRERT("PREV","SCT")
"RTN","LRERT1",154,0)
 . I X'=$G(LRERT("SCT")) S LRMTXT(11,0)="Previous SNOMED CT code: "_X
"RTN","LRERT1",155,0)
 ;
"RTN","LRERT1",156,0)
 I $D(LRHDIERR) D  ;
"RTN","LRERT1",157,0)
 . S LRMTXT(20,0)=" "
"RTN","LRERT1",158,0)
 . S LRMTXT(21,0)="An error occurred when notifying STS:"
"RTN","LRERT1",159,0)
 . S NODE="LRHDIERR(0)"
"RTN","LRERT1",160,0)
 . S I=$O(LRMTXT("A"),-1)
"RTN","LRERT1",161,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  S I=I+1,LRMTXT(I,0)="    "_NODE
"RTN","LRERT1",162,0)
 ;
"RTN","LRERT1",163,0)
 I $$GOTLOCAL^XMXAPIG("LAB MAPPING") S XMY("I:G.LAB MAPPING")=""
"RTN","LRERT1",164,0)
 E  S XMY("I:G.LMI")=""
"RTN","LRERT1",165,0)
 ;
"RTN","LRERT1",166,0)
 S XMTEXT="LRMTXT("
"RTN","LRERT1",167,0)
 D ^XMD
"RTN","LRERT1",168,0)
 I $D(XMMG)!'$G(XMZ) D  ;
"RTN","LRERT1",169,0)
 . I $D(LRHDIERR) S NOTIFY="0^4^STS & Mailman error" Q
"RTN","LRERT1",170,0)
 . S NOTIFY="0^3^MailMan error"
"RTN","LRERT1",171,0)
 ;
"RTN","LRERT1",172,0)
 ; Update and store this transaction info in the target file.
"RTN","LRERT1",173,0)
 D SCTUPD
"RTN","LRERT1",174,0)
 ;
"RTN","LRERT1",175,0)
 Q NOTIFY
"RTN","LRERT1",176,0)
 ;
"RTN","LRERT1",177,0)
 ;
"RTN","LRERT1",178,0)
SCTUPD ; Update SCT STATUS DATE multiple
"RTN","LRERT1",179,0)
 ;
"RTN","LRERT1",180,0)
 ;ZEXCEPT: LRDUZ,LRFILE,LRFIEN,TDT,TNUM
"RTN","LRERT1",181,0)
 ;.
"RTN","LRERT1",182,0)
 N LRERR,LRFDA,LRFLD,LRSUBFILE,LRSTATUS
"RTN","LRERT1",183,0)
 ;
"RTN","LRERT1",184,0)
 S LRSUBFILE=$S(LRFILE=61:61.023,LRFILE=61.2:61.223,LRFILE=62:62.023,1:"")
"RTN","LRERT1",185,0)
 I LRSUBFILE="" Q
"RTN","LRERT1",186,0)
 ;
"RTN","LRERT1",187,0)
 ; Store date/time, user and new status
"RTN","LRERT1",188,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",.01)=TDT
"RTN","LRERT1",189,0)
 S LRSTATUS=$$GET1^DIQ(LRFILE,LRFIEN_",",21,"I")
"RTN","LRERT1",190,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",1)=$S(LRSTATUS'="":LRSTATUS,1:"R")
"RTN","LRERT1",191,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",3)=$S($G(LRDUZ):LRDUZ,1:DUZ)
"RTN","LRERT1",192,0)
 ;
"RTN","LRERT1",193,0)
 ; Store transaction number
"RTN","LRERT1",194,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",2)=TNUM
"RTN","LRERT1",195,0)
 ;
"RTN","LRERT1",196,0)
 D UPDATE^DIE("","LRFDA(2)","LRFIEN","LRERR(2)")
"RTN","LRERT1",197,0)
 ;
"RTN","LRERT1",198,0)
 ; Store execption text in WP field
"RTN","LRERT1",199,0)
 D WP^DIE(LRSUBFILE,LRFIEN(2)_","_LRFIEN_",",4,"A","LRMTXT","LRERR(3)")
"RTN","LRERT1",200,0)
 ;
"RTN","LRERT1",201,0)
 Q
"RTN","LRGP2")
0^92^B20133526
"RTN","LRGP2",1,0)
LRGP2 ;DALOI/STAFF - COMMON PARTS TO INSTRUMENT GROUP VERIFY/CHECK ;11/18/11  15:52
"RTN","LRGP2",2,0)
 ;;5.2;LAB SERVICE;**153,221,263,290,350**;Sep 27, 1994;Build 230
"RTN","LRGP2",3,0)
 ;
"RTN","LRGP2",4,0)
 Q
"RTN","LRGP2",5,0)
 ;
"RTN","LRGP2",6,0)
 ;
"RTN","LRGP2",7,0)
EXPLODE ; from LRGP1, LRVR
"RTN","LRGP2",8,0)
 N %,C,DIC,DIR,DIROUT,DIRUT,DUOUT,LREND,LRI,LRTEST,LRX,I,X,X1,Y
"RTN","LRGP2",9,0)
 I $G(LRORDR)'="P" K ^TMP("LR",$J)
"RTN","LRGP2",10,0)
 S LRCFL="",LRI=0 S:'$D(LRNX) LRNX=0
"RTN","LRGP2",11,0)
 F  S LRI=$O(^LRO(68.2,LRLL,10,LRPROF,1,LRI)) Q:LRI<1  I $D(^(LRI,0))#2 D
"RTN","LRGP2",12,0)
 . S LRI(0)=$G(^LRO(68.2,LRLL,10,LRPROF,1,LRI,0))
"RTN","LRGP2",13,0)
 . S LRX=$P(LRI(0),"^") K LRTEST
"RTN","LRGP2",14,0)
 . I '$P(LRI(0),U,3) D EX6(LRX)
"RTN","LRGP2",15,0)
 . S:'$D(^TMP("LR",$J,"VTO",LRX))#2 ^(LRX)=""
"RTN","LRGP2",16,0)
 K LRVTS S LRVTS=11,LRI=0
"RTN","LRGP2",17,0)
 F  S LRI=+$O(^TMP("LR",$J,"T",LRI)) Q:LRI<1  D
"RTN","LRGP2",18,0)
 . S X=$P(^TMP("LR",$J,"T",LRI),"^",5)
"RTN","LRGP2",19,0)
 . I $P(X,";",2)<1 Q  ; Invalid data name number
"RTN","LRGP2",20,0)
 . S LRVTS($P(X,";",2))=LRI,LRVTS=LRVTS+1
"RTN","LRGP2",21,0)
 . S ^TMP("LR",$J,"VTO",LRI)=$P(X,";",2)
"RTN","LRGP2",22,0)
 Q:$G(LRORDR)="P"
"RTN","LRGP2",23,0)
EX3 ;
"RTN","LRGP2",24,0)
 G:$G(LREND) STOP
"RTN","LRGP2",25,0)
 ;
"RTN","LRGP2",26,0)
 K DIR,DIROUT,DIRUT,DUOUT,X,Y
"RTN","LRGP2",27,0)
 S DIR(0)="YO",DIR("A")="Would you like to see the test list",DIR("B")="No"
"RTN","LRGP2",28,0)
 D ^DIR
"RTN","LRGP2",29,0)
 I $S($G(DIRUT):1,$G(LREND):1,1:0) K ^TMP("LR",$J),LRVTS Q
"RTN","LRGP2",30,0)
 I Y=1 D
"RTN","LRGP2",31,0)
 . W @IOF,!,"The ("_$P(^LRO(68.2,LRLL,0),U)_") ["_$P(^LRO(68.2,LRLL,10,LRPROF,0),U)_"] Profile has"
"RTN","LRGP2",32,0)
 . D LIST
"RTN","LRGP2",33,0)
 ;
"RTN","LRGP2",34,0)
 K DIR,DIROUT,DIRUT,DUOUT,X,Y
"RTN","LRGP2",35,0)
 S DIR("A",1)=" "
"RTN","LRGP2",36,0)
 S DIR("A")="Do you wish to modify the test list"
"RTN","LRGP2",37,0)
 S DIR("?")="i.e. would you like to add or subtract ATOMIC tests?"
"RTN","LRGP2",38,0)
 S DIR("B")="NO"
"RTN","LRGP2",39,0)
 S DIR(0)="Y" D ^DIR
"RTN","LRGP2",40,0)
 I $D(DIRUT) S LREND=1 G STOP
"RTN","LRGP2",41,0)
 I Y=1 D EX1 G:'$G(LREND) EX3
"RTN","LRGP2",42,0)
 ;
"RTN","LRGP2",43,0)
STOP ;
"RTN","LRGP2",44,0)
 I $G(LREND) K ^TMP("LR",$J),LRVTS S LREND=0 Q
"RTN","LRGP2",45,0)
 ;
"RTN","LRGP2",46,0)
EX2 ;
"RTN","LRGP2",47,0)
 K LRVTS,DIC
"RTN","LRGP2",48,0)
 S LRVTS=11,LRI=0,C=0
"RTN","LRGP2",49,0)
 F  S LRI=$O(^TMP("LR",$J,"T",LRI)) Q:LRI<1  D
"RTN","LRGP2",50,0)
 . S X=^TMP("LR",$J,"T",LRI),LRVTS($P(X,";",2))=LRI
"RTN","LRGP2",51,0)
 . S LRVTS=LRVTS+1
"RTN","LRGP2",52,0)
 . S ^TMP("LR",$J,"VTO",LRI)=$P(X,";",2)
"RTN","LRGP2",53,0)
 . S C=C+1
"RTN","LRGP2",54,0)
 . I $P($G(^LAB(60,LRI,4)),U,2) S LRCFL=LRCFL_$P(^(4),U,2)_U
"RTN","LRGP2",55,0)
 S (X,X1)=0 F  S X=$O(^TMP("LR",$J,"VTO",X)) Q:X<1  S X1=X1+1
"RTN","LRGP2",56,0)
 I C>0 W !,"You have selected ",X1," tests to work with."
"RTN","LRGP2",57,0)
 I C<1 D
"RTN","LRGP2",58,0)
 . W !,$C(7),">> Please check the PROFILE you have selected."
"RTN","LRGP2",59,0)
 . W !,">> At least one should be build name only = no "
"RTN","LRGP2",60,0)
 K ^TMP("LR",$J,"T")
"RTN","LRGP2",61,0)
 Q
"RTN","LRGP2",62,0)
 ;
"RTN","LRGP2",63,0)
 ;
"RTN","LRGP2",64,0)
EX1 ;
"RTN","LRGP2",65,0)
 N DIC,DIR,DIRUT,DIROUT,DTOUT,X,X1,Y
"RTN","LRGP2",66,0)
 ;
"RTN","LRGP2",67,0)
 S DIR("A")="Do you want to add ATOMIC test(s) to this panel",DIR("B")="NO",DIR(0)="YO"
"RTN","LRGP2",68,0)
 D ^DIR
"RTN","LRGP2",69,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRGP2",70,0)
 I Y=1 D
"RTN","LRGP2",71,0)
 . K LRVTS,DIC
"RTN","LRGP2",72,0)
 . S DIC("A")="Select ATOMIC test(s) you wish to add: ",DIC="^LAB(60,",DIC(0)="AEMOQZ" ; ,DIC("S")="I $G(^(.2))"
"RTN","LRGP2",73,0)
 . F  D ^DIC Q:Y<1  K LRTEST D EX6(+Y)
"RTN","LRGP2",74,0)
 . W @IOF,!?5,"The List now has" D LIST
"RTN","LRGP2",75,0)
 ;
"RTN","LRGP2",76,0)
EX4 ;
"RTN","LRGP2",77,0)
 K DIR
"RTN","LRGP2",78,0)
 S DIR("A",1)=" "
"RTN","LRGP2",79,0)
 S DIR("A")="Do you wish to exclude ATOMIC tests in this panel"
"RTN","LRGP2",80,0)
 S DIR("B")="NO",DIR(0)="YO"
"RTN","LRGP2",81,0)
 D ^DIR
"RTN","LRGP2",82,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRGP2",83,0)
 I Y=1 D
"RTN","LRGP2",84,0)
 . N LREXCL,%
"RTN","LRGP2",85,0)
 . W !!,$$CJ^XLFSTR("Tests removed from this panel will not be included for review or editing.",IOM),!!
"RTN","LRGP2",86,0)
 . K DIC
"RTN","LRGP2",87,0)
 . S LREXCL="",DIC("A")="Select ATOMIC test(s) you wish to exclude: ",DIC="^LAB(60,",DIC(0)="AEMOQ"
"RTN","LRGP2",88,0)
 . S DIC("S")="I $D(^TMP(""LR"",$J,""T"",Y))"
"RTN","LRGP2",89,0)
 . F  D ^DIC Q:Y<1  D
"RTN","LRGP2",90,0)
 . . S X1=$P(^TMP("LR",$J,"T",+Y),";",2)
"RTN","LRGP2",91,0)
 . . I X1 K LRVTS(X1)
"RTN","LRGP2",92,0)
 . . K ^TMP("LR",$J,"VTO",+Y),^TMP("LR",$J,"T",+Y) S LREXCL(+Y)=$P(Y,U,2) D
"RTN","LRGP2",93,0)
 . . .N I,X
"RTN","LRGP2",94,0)
 . . .S I=0 F  S I=$O(^LAB(60,+Y,2,0)) Q:I<1  I $D(^(I,0)) S X=+^(0) D
"RTN","LRGP2",95,0)
 . . . . I X K ^TMP("LR",$J,"VTO",X),^TMP("LR",$J,"T",X) S LREXCL(X)=$P($G(^LAB(60,X,0)),U)
"RTN","LRGP2",96,0)
 . I $O(LREXCL(0)) D
"RTN","LRGP2",97,0)
 . . N I
"RTN","LRGP2",98,0)
 . . W @IOF,!,"Excluding" S I=0 F  S I=$O(LREXCL(I)) Q:I<1  W !,LREXCL(I) K LRVTS(I) H 2
"RTN","LRGP2",99,0)
 Q
"RTN","LRGP2",100,0)
 ;
"RTN","LRGP2",101,0)
 ;
"RTN","LRGP2",102,0)
LIST ;
"RTN","LRGP2",103,0)
 N LRI,DIR,DIRUT,DTOUT,DUOUT,X
"RTN","LRGP2",104,0)
 W " the following tests: "
"RTN","LRGP2",105,0)
 S LRI=0,DIR(0)="E"
"RTN","LRGP2",106,0)
 F  S LRI=$O(^TMP("LR",$J,"VTO",LRI)) Q:LRI<1!($D(DUOUT))  D
"RTN","LRGP2",107,0)
 . W !,?10,$P($G(^LAB(60,LRI,0)),U)
"RTN","LRGP2",108,0)
 . I $Y>(IOSL-4) W ! D ^DIR W @IOF I $D(DIRUT) S LREND=1
"RTN","LRGP2",109,0)
 Q
"RTN","LRGP2",110,0)
 ;
"RTN","LRGP2",111,0)
 ;
"RTN","LRGP2",112,0)
YESNO ;
"RTN","LRGP2",113,0)
 W !
"RTN","LRGP2",114,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRGP2",115,0)
 S DIR("B")=$S($G(%)=1:"Yes",$G(%)=2:"No",1:"")
"RTN","LRGP2",116,0)
 S DIR(0)="Y" D ^DIR S %=Y
"RTN","LRGP2",117,0)
 Q
"RTN","LRGP2",118,0)
 ;
"RTN","LRGP2",119,0)
 ;
"RTN","LRGP2",120,0)
EX6(LRX) ; Expand test list
"RTN","LRGP2",121,0)
 ;
"RTN","LRGP2",122,0)
 N T1
"RTN","LRGP2",123,0)
 ;
"RTN","LRGP2",124,0)
 S (T1,LRTEST)=LRX,LRTEST(T1)=LRX_U_$G(^LAB(60,T1,0))
"RTN","LRGP2",125,0)
 S LRTEST(T1,"P")=LRTEST
"RTN","LRGP2",126,0)
 D ^LREXPD
"RTN","LRGP2",127,0)
 S:'$D(^TMP("LR",$J,"VTO",LRX))#2 ^(LRX)=""
"RTN","LRGP2",128,0)
 Q
"RTN","LRGV2")
0^200^B9894517
"RTN","LRGV2",1,0)
LRGV2 ;DALOI/STAFF - PART2 OF INSTRUMENT GROUP VERIFY DATA ;02/11/11  12:21
"RTN","LRGV2",2,0)
 ;;5.2;LAB SERVICE;**121,153,269,350**;Sep 27, 1994;Build 230
"RTN","LRGV2",3,0)
 ;
"RTN","LRGV2",4,0)
 N LRGVP,LRSB,LRX
"RTN","LRGV2",5,0)
 ;
"RTN","LRGV2",6,0)
 I $P(LR0,U,8)'[LRMETH S $P(^LR(LRDFN,"CH",LRIDT,0),U,8)=LRMETH_";"_$P(LR0,U,8)
"RTN","LRGV2",7,0)
 S LRLDT=LRIDT
"RTN","LRGV2",8,0)
 D FINDPS
"RTN","LRGV2",9,0)
 I LRLDT="" W !,"NO DELTA SAMPLE",!
"RTN","LRGV2",10,0)
 ;
"RTN","LRGV2",11,0)
 ; If results exist in ^LR then delete results from LAH.
"RTN","LRGV2",12,0)
 I LRVF D
"RTN","LRGV2",13,0)
 . S LRX=1
"RTN","LRGV2",14,0)
 . F  S LRX=$O(^LR(LRDFN,"CH",LRIDT,LRX)) Q:LRX'>0  I ^(LRX)'["pending" K ^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRGV2",15,0)
 ;
"RTN","LRGV2",16,0)
 S LRX=1
"RTN","LRGV2",17,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX'>0  S LRSB(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRGV2",18,0)
 ;
"RTN","LRGV2",19,0)
 S LRVRM=1,(LRDELTA,LRCRIT,LRCNT,LRNX)=0
"RTN","LRGV2",20,0)
 F  S LRNX=$O(LRORD(LRNX)) Q:LRNX'>0  D DC
"RTN","LRGV2",21,0)
 ;
"RTN","LRGV2",22,0)
 I 'LRVRFYAL,(LRDELTA!LRCRIT) D NOP Q
"RTN","LRGV2",23,0)
 ;
"RTN","LRGV2",24,0)
 S LREXEC=LRCFL D ^LREXEC:LRCFL]""
"RTN","LRGV2",25,0)
 ;
"RTN","LRGV2",26,0)
 S:'$P(^LR(LRDFN,"CH",LRIDT,0),U,5) $P(^LR(LRDFN,"CH",LRIDT,0),U,5)=LRSPEC
"RTN","LRGV2",27,0)
 ;
"RTN","LRGV2",28,0)
 ; Move comments from LAH to LR
"RTN","LRGV2",29,0)
 I $O(^LAH(LRLL,1,LRSQ,1,0)) D LRSBCOM^LRVR4
"RTN","LRGV2",30,0)
 ;
"RTN","LRGV2",31,0)
 ; Verify results and update files.
"RTN","LRGV2",32,0)
 K LRPRGSQ
"RTN","LRGV2",33,0)
 D V11^LRVR3
"RTN","LRGV2",34,0)
 W !!,">> Accession #: ",LRAN," VERIFIED <<"
"RTN","LRGV2",35,0)
 ;
"RTN","LRGV2",36,0)
 ; Display results which were not verified.
"RTN","LRGV2",37,0)
 I $O(^LAH(LRLL,1,LRSQ,1))>1 D
"RTN","LRGV2",38,0)
 . W !,"  STILL TO BE VERIFIED:"
"RTN","LRGV2",39,0)
 . S LRX=1
"RTN","LRGV2",40,0)
 . F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX<1  W ?25,$$GET1^DID(63.04,LRX,"","LABEL"),!
"RTN","LRGV2",41,0)
 ;
"RTN","LRGV2",42,0)
 D DASH^LRX
"RTN","LRGV2",43,0)
 ;
"RTN","LRGV2",44,0)
 K LRSB
"RTN","LRGV2",45,0)
 Q
"RTN","LRGV2",46,0)
 ;
"RTN","LRGV2",47,0)
 ;
"RTN","LRGV2",48,0)
DC ; Perform range and delta checks
"RTN","LRGV2",49,0)
 ;
"RTN","LRGV2",50,0)
 N LRCW,LRQ,X,Y
"RTN","LRGV2",51,0)
 ;
"RTN","LRGV2",52,0)
 S LRSB=+LRORD(LRNX),LRTS=$S($D(^TMP("LR",$J,"TMP",LRSB)):^(LRSB),1:0) Q:'LRTS
"RTN","LRGV2",53,0)
 S X=$P($G(LRSB(LRSB)),U),X1="",LRFLG=""
"RTN","LRGV2",54,0)
 I X=""!(X["pending") Q
"RTN","LRGV2",55,0)
 I LRLDT'="" S X1=$G(^LR(LRDFN,"CH",LRLDT,LRSB))
"RTN","LRGV2",56,0)
 ;
"RTN","LRGV2",57,0)
 ; Setup variable for range and delta checking
"RTN","LRGV2",58,0)
 D V25^LRVER5
"RTN","LRGV2",59,0)
 ;
"RTN","LRGV2",60,0)
 ; Display test name, results
"RTN","LRGV2",61,0)
 S X=$P(LRSB(LRSB),"^"),LRCW=8
"RTN","LRGV2",62,0)
 W !,$P(^LAB(60,+LRTS,0),"^"),?31,@LRFP," "
"RTN","LRGV2",63,0)
 ;
"RTN","LRGV2",64,0)
 ; Do delta checking
"RTN","LRGV2",65,0)
 S X=$P(LRSB(LRSB),"^"),Y=0,LRQ=""
"RTN","LRGV2",66,0)
 I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA S:Y LRDELTA=Y
"RTN","LRGV2",67,0)
 ;
"RTN","LRGV2",68,0)
 ; Do range checking
"RTN","LRGV2",69,0)
 D RANGE^LRVR4
"RTN","LRGV2",70,0)
 I LRFLG["*" S LRCRIT=1
"RTN","LRGV2",71,0)
 ;
"RTN","LRGV2",72,0)
 ; Display test flags and units
"RTN","LRGV2",73,0)
 W $$LJ^XLFSTR(LRFLG,2),?56," ",$P(LRNGS,"^",7)
"RTN","LRGV2",74,0)
 I LRFLG["*" D DISPFLG^LRVER4
"RTN","LRGV2",75,0)
 ;
"RTN","LRGV2",76,0)
 Q
"RTN","LRGV2",77,0)
 ;
"RTN","LRGV2",78,0)
 ;
"RTN","LRGV2",79,0)
NOP ;
"RTN","LRGV2",80,0)
 W !,">> Accession #: ",LRAN," NOT VERIFIED"
"RTN","LRGV2",81,0)
 I LRDELTA W " - DELTA check flag"
"RTN","LRGV2",82,0)
 I LRCRIT W " - CRITICAL range flag"
"RTN","LRGV2",83,0)
 W " <<"
"RTN","LRGV2",84,0)
 I $E(IOST,1,2)="C-" W $C(7)
"RTN","LRGV2",85,0)
 Q
"RTN","LRGV2",86,0)
 ;
"RTN","LRGV2",87,0)
 ;
"RTN","LRGV2",88,0)
INFO ;
"RTN","LRGV2",89,0)
 W !,"Sequence #: ",LRSQ
"RTN","LRGV2",90,0)
 S X=$P(^LAH(LRLL,1,LRSQ,0),"^",1),Y=$P(^(0),"^",2)
"RTN","LRGV2",91,0)
 W:$L(X)!$L(Y) ?20,"TRAY: ",X,?33,"CUP: ",Y,?45,"DUPLICATE "
"RTN","LRGV2",92,0)
 Q
"RTN","LRGV2",93,0)
 ;
"RTN","LRGV2",94,0)
 ;
"RTN","LRGV2",95,0)
FINDPS ; Find previous specimen to use for delta check
"RTN","LRGV2",96,0)
 ; Specimen needs to be within "days back (LRTM60)" parameter and have
"RTN","LRGV2",97,0)
 ; a dataname in common with a dataname on the sequence entry in LAH.
"RTN","LRGV2",98,0)
 ;
"RTN","LRGV2",99,0)
 N LRQUIT,LRX
"RTN","LRGV2",100,0)
 ;
"RTN","LRGV2",101,0)
 S LRQUIT=0
"RTN","LRGV2",102,0)
 F  S LRLDT=$O(^LR(LRDFN,"CH",LRLDT)) Q:'LRLDT  D  Q:LRQUIT
"RTN","LRGV2",103,0)
 . I LRLDT>LRTM60 S LRLDT="",LRQUIT=1 Q
"RTN","LRGV2",104,0)
 . S LRX=$G(^LR(LRDFN,"CH",LRLDT,0))
"RTN","LRGV2",105,0)
 . I $P(LRX,U,5)'=LRSPEC!('$P(LRX,U,3)) Q
"RTN","LRGV2",106,0)
 . S LRX=1
"RTN","LRGV2",107,0)
 . F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX'>0  I $D(^LR(LRDFN,"CH",LRLDT,LRX)) S LRQUIT=1 Q
"RTN","LRGV2",108,0)
 ;
"RTN","LRGV2",109,0)
 Q
"RTN","LRLABLIO")
0^128^B15144930
"RTN","LRLABLIO",1,0)
LRLABLIO ;DALOI/TGA/JMC - TESTS LABEL PRINTER ;May 21, 2007
"RTN","LRLABLIO",2,0)
 ;;5.2;LAB SERVICE;**107,161,218,350**;Sep 27, 1994;Build 230
"RTN","LRLABLIO",3,0)
 ;
"RTN","LRLABLIO",4,0)
 ; Reference to File #3.5 supported by DBIA #2469
"RTN","LRLABLIO",5,0)
 ;
"RTN","LRLABLIO",6,0)
1 ;
"RTN","LRLABLIO",7,0)
 S U="^" Q:$D(LRLABLIO)
"RTN","LRLABLIO",8,0)
 ;
"RTN","LRLABLIO",9,0)
 N %ZIS,DIR,DIRUT,DTOUT,DUOUT,IOP,LRLABEL,POP,X,Y
"RTN","LRLABLIO",10,0)
 ;
"RTN","LRLABLIO",11,0)
 ; Setup handle for user's "HOME" device.
"RTN","LRLABLIO",12,0)
 D OPEN^%ZISUTL("LRHOME","HOME")
"RTN","LRLABLIO",13,0)
 ;
"RTN","LRLABLIO",14,0)
 S %ZIS("B")=$$GET^XPAR("USR","LR LABEL PRINTER DEFAULT","`"_DUZ(2),"E")
"RTN","LRLABLIO",15,0)
 I %ZIS("B")="" S %ZIS("B")="LABLABEL"
"RTN","LRLABLIO",16,0)
 ;
"RTN","LRLABLIO",17,0)
 ; Check if label device assigned to this user's HOME Device file entry.
"RTN","LRLABLIO",18,0)
 I $G(IOS) D
"RTN","LRLABLIO",19,0)
 . S X=$$GET1^DIQ(3.5,IOS_",",101,"E")
"RTN","LRLABLIO",20,0)
 . I X'="" S %ZIS("B")=X
"RTN","LRLABLIO",21,0)
 ;
"RTN","LRLABLIO",22,0)
 ; Get this division's default printer
"RTN","LRLABLIO",23,0)
 I %ZIS("B")="LABLABEL",$D(^LAB(69.9,1,3.5,+$G(DUZ(2)),0)) S %ZIS("B")=$P($G(^LAB(69.9,1,3.5,+DUZ(2),0)),U,3)
"RTN","LRLABLIO",24,0)
 ;
"RTN","LRLABLIO",25,0)
 I %ZIS("B")="" S %ZIS("B")="LABLABEL"
"RTN","LRLABLIO",26,0)
 S %ZIS("A")="Print labels on: ",%ZIS="NQ"
"RTN","LRLABLIO",27,0)
 ; Setup handle for user's LABEL device.
"RTN","LRLABLIO",28,0)
2 D OPEN^%ZISUTL("LRLABEL",,.%ZIS)
"RTN","LRLABLIO",29,0)
 I POP!(IO=IO(0)) D BD Q
"RTN","LRLABLIO",30,0)
 S LRLABLIO=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","LRLABLIO",31,0)
 I $D(IO("Q")) S LRLABLIO("Q")=1
"RTN","LRLABLIO",32,0)
 I $E(IOST,1)'="P" D  G:Y'=1 2
"RTN","LRLABLIO",33,0)
 . N DIR,DIRUT,DTOUT,DUOUT
"RTN","LRLABLIO",34,0)
 . D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",35,0)
 . S DIR(0)="YAO",DIR("A",1)="NOT printing on a printer.",DIR("A")="Are you sure"
"RTN","LRLABLIO",36,0)
 . D ^DIR
"RTN","LRLABLIO",37,0)
 ; Device on another cpu, can't test.
"RTN","LRLABLIO",38,0)
 I $D(IOCPU) D  Q
"RTN","LRLABLIO",39,0)
 . N MSG
"RTN","LRLABLIO",40,0)
 . S MSG="Device "_ION_" is on CPU '"_IOCPU_"' - Unable to test"
"RTN","LRLABLIO",41,0)
 . D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",42,0)
 . D EN^DDIOL(MSG,"","!?5")
"RTN","LRLABLIO",43,0)
 . D K
"RTN","LRLABLIO",44,0)
 ;
"RTN","LRLABLIO",45,0)
3 I $D(LRLABLIO("Q")) D K Q
"RTN","LRLABLIO",46,0)
 D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",47,0)
 W !
"RTN","LRLABLIO",48,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRLABLIO",49,0)
 S DIR(0)="YAO",DIR("A")="Do you wish to test the label printer: ",DIR("B")="NO"
"RTN","LRLABLIO",50,0)
 S DIR("?")="Enter 'YES' if you want to test the printer, 'NO' if you do not."
"RTN","LRLABLIO",51,0)
 D ^DIR
"RTN","LRLABLIO",52,0)
 I $D(DIRUT) D BD Q
"RTN","LRLABLIO",53,0)
 I Y<1 G K ; Don't want to test
"RTN","LRLABLIO",54,0)
 D OPEN^%ZISUTL("LRLABEL",LRLABLIO)
"RTN","LRLABLIO",55,0)
 I POP D  G 1
"RTN","LRLABLIO",56,0)
 . D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",57,0)
 . D EN^DDIOL("Device in use - try later","","!")
"RTN","LRLABLIO",58,0)
 . K LRLABLIO
"RTN","LRLABLIO",59,0)
 N LRAA
"RTN","LRLABLIO",60,0)
 S LRAA=0
"RTN","LRLABLIO",61,0)
 D LBLTYP^LRLABLD
"RTN","LRLABLIO",62,0)
 ;
"RTN","LRLABLIO",63,0)
T ; Print test label
"RTN","LRLABLIO",64,0)
 D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",65,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRLABLIO",66,0)
 W !!,"Using label routine: ",LRLABEL,!
"RTN","LRLABLIO",67,0)
 S DIR(0)="E"
"RTN","LRLABLIO",68,0)
 S DIR("A",1)="Load and position label stock as appropriate for this printer."
"RTN","LRLABLIO",69,0)
 S DIR("A")="Press return when ready"
"RTN","LRLABLIO",70,0)
 D ^DIR
"RTN","LRLABLIO",71,0)
 I Y'=1 D BD Q
"RTN","LRLABLIO",72,0)
 ;
"RTN","LRLABLIO",73,0)
 N I,N,PNM,SSN
"RTN","LRLABLIO",74,0)
 N LRACC,LRBAR,LRBARID,LRCE,LRDAT,LRINFW,LRLLOC,LRPREF,LRAN,LRRB,LRTOP,LRTS,LRUID,LRURG,LRURG0,LRURGA,LRXL
"RTN","LRLABLIO",75,0)
 ;
"RTN","LRLABLIO",76,0)
 ; Set up variables for test label
"RTN","LRLABLIO",77,0)
 S PNM="TEST-LABEL-DO-NOT-USE",SSN="000-00-0000P",LRDAT="XX/XX/XX",LRLLOC="LAB",LRRB=1
"RTN","LRLABLIO",78,0)
 S LRACC="SITE-TEST-LABEL",LRCE="9999999",LRPREF="SMALL "
"RTN","LRLABLIO",79,0)
 S LRTOP="TEST-TUBE",LRTS(1)="Don't-use",LRTS(2)="this-label"
"RTN","LRLABLIO",80,0)
 S LRINFW="Patient  info  field",(LRBARID,LRUID)="0000000000",LRAN="000",I=1,N=1,LRXL=0
"RTN","LRLABLIO",81,0)
 S (LRURG,LRURG0)=1
"RTN","LRLABLIO",82,0)
 S LRURGA=$$URGA^LRLABLD(LRURG0)
"RTN","LRLABLIO",83,0)
 ;
"RTN","LRLABLIO",84,0)
 D LRBAR^LRLABLD
"RTN","LRLABLIO",85,0)
 D USE^%ZISUTL("LRLABEL"),@LRLABEL
"RTN","LRLABLIO",86,0)
 D USE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",87,0)
 ;
"RTN","LRLABLIO",88,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRLABLIO",89,0)
 W !
"RTN","LRLABLIO",90,0)
 S DIR(0)="YAO",DIR("A")="Label OK: ",DIR("B")="YES"
"RTN","LRLABLIO",91,0)
 S DIR("?")="Enter 'YES' if label printed correctly, 'NO' if it did not."
"RTN","LRLABLIO",92,0)
 D ^DIR
"RTN","LRLABLIO",93,0)
 I $D(DIRUT) G BD
"RTN","LRLABLIO",94,0)
 I Y=1 G K
"RTN","LRLABLIO",95,0)
 ;
"RTN","LRLABLIO",96,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRLABLIO",97,0)
 W !
"RTN","LRLABLIO",98,0)
 S DIR(0)="YAO",DIR("A")="Test printer again: ",DIR("B")="YES"
"RTN","LRLABLIO",99,0)
 S DIR("?")="Enter 'YES' to test label printing, 'NO' to quit testing."
"RTN","LRLABLIO",100,0)
 D ^DIR
"RTN","LRLABLIO",101,0)
 I $D(DIRUT) G BD
"RTN","LRLABLIO",102,0)
 I Y=1 G T
"RTN","LRLABLIO",103,0)
 G K
"RTN","LRLABLIO",104,0)
 ;
"RTN","LRLABLIO",105,0)
BD ; Bad device - abort, timeout, unsuccessful selection
"RTN","LRLABLIO",106,0)
 K LRLABLIO
"RTN","LRLABLIO",107,0)
K ; Close devices
"RTN","LRLABLIO",108,0)
 D CLOSE^%ZISUTL("LRLABEL")
"RTN","LRLABLIO",109,0)
 D CLOSE^%ZISUTL("LRHOME")
"RTN","LRLABLIO",110,0)
 Q
"RTN","LRMIAU1")
0^23^B2029471
"RTN","LRMIAU1",1,0)
LRMIAU1 ;DALISC/RBN - Microbiology Audit PREPROCESSOR ;July 22, 2008
"RTN","LRMIAU1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIAU1",3,0)
 ;
"RTN","LRMIAU1",4,0)
 ; This routine is a shell so it will fit back into the proposed framework for LR*5.2*216
"RTN","LRMIAU1",5,0)
 Q
"RTN","LRMIAU1",6,0)
 ;
"RTN","LRMIAU1",7,0)
 ;
"RTN","LRMIAU1",8,0)
FILEAUD(DATA) ;
"RTN","LRMIAU1",9,0)
 ; Replacement for FILEIT^LRMIAU1
"RTN","LRMIAU1",10,0)
 ; Expects LRDFN,LRIDT,LREDT,LRSB
"RTN","LRMIAU1",11,0)
 ; Inputs
"RTN","LRMIAU1",12,0)
 ;   DATA : <byref>  (File#,field)=value
"RTN","LRMIAU1",13,0)
 ; Outputs
"RTN","LRMIAU1",14,0)
 ;   Returns #63.539 IEN or 0 if record not created
"RTN","LRMIAU1",15,0)
 ;
"RTN","LRMIAU1",16,0)
 N X,LRIEN,LRIENS,LRFDA,LRMSG,DIERR
"RTN","LRMIAU1",17,0)
 S LRIEN="+1"_","_LRIDT_","_LRDFN_","
"RTN","LRMIAU1",18,0)
 I $G(LREDT)="" N LREDT S LREDT=$$NOW^XLFDT
"RTN","LRMIAU1",19,0)
 S LRFDA(1,63.539,LRIEN,.01)=LREDT
"RTN","LRMIAU1",20,0)
 S LRFDA(1,63.539,LRIEN,1)=LREDT
"RTN","LRMIAU1",21,0)
 S LRFDA(1,63.539,LRIEN,2)=DUZ
"RTN","LRMIAU1",22,0)
 I $G(DATA(63.539,3))'="" S LRFDA(1,63.539,LRIEN,3)=DATA(63.539,3)
"RTN","LRMIAU1",23,0)
 I $G(DATA(63.539,4))'="" S LRFDA(1,63.539,LRIEN,4)=DATA(63.539,4)
"RTN","LRMIAU1",24,0)
 I $G(LRSB),$$DATAOK(63.539,6,LRSB) S LRFDA(1,63.539,LRIEN,6)=$G(LRSB)
"RTN","LRMIAU1",25,0)
 S LRFDA(1,63.539,LRIEN,7)=DUZ(2)
"RTN","LRMIAU1",26,0)
 D UPDATE^DIE("","LRFDA(1)","LRIENS","LRMSG")
"RTN","LRMIAU1",27,0)
 ;
"RTN","LRMIAU1",28,0)
 Q $G(LRIENS(1))
"RTN","LRMIAU1",29,0)
 ;
"RTN","LRMIAU1",30,0)
 ;
"RTN","LRMIAU1",31,0)
DATAOK(LRFILE,LRFLD,LRVAL) ;
"RTN","LRMIAU1",32,0)
 ; Checks if a value is appropriate for storing in the field
"RTN","LRMIAU1",33,0)
 ; Inputs
"RTN","LRMIAU1",34,0)
 ;  LRFILE : File #
"RTN","LRMIAU1",35,0)
 ;  LR FLD : Field #
"RTN","LRMIAU1",36,0)
 ;   LRVAL : Value of the field
"RTN","LRMIAU1",37,0)
 ;
"RTN","LRMIAU1",38,0)
 ; Returns 0 (invalid) or 1 (valid)
"RTN","LRMIAU1",39,0)
 ;
"RTN","LRMIAU1",40,0)
 N STATUS,LROUT,LRMSG
"RTN","LRMIAU1",41,0)
 S STATUS=0
"RTN","LRMIAU1",42,0)
 D CHK^DIE(LRFILE,LRFLD,"",LRVAL,.LROUT,"LRMSG")
"RTN","LRMIAU1",43,0)
 I $G(LROUT)'="^" S STATUS=1
"RTN","LRMIAU1",44,0)
 I $D(LRMSG) S STATUS=0
"RTN","LRMIAU1",45,0)
 Q STATUS
"RTN","LRMIAU2")
0^126^B8206786
"RTN","LRMIAU2",1,0)
LRMIAU2 ;DALISC/RBN - AUDIT/ALERT BANNER GENERATOR ;03/07/12  16:25
"RTN","LRMIAU2",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIAU2",3,0)
 ;
"RTN","LRMIAU2",4,0)
 Q
"RTN","LRMIAU2",5,0)
 ;
"RTN","LRMIAU2",6,0)
BANNER(LRABORT,LRPGDATA) ;
"RTN","LRMIAU2",7,0)
 ; Displays the MI Audit Trail edit banner history
"RTN","LRMIAU2",8,0)
 N LR63539,X,HDRSHO
"RTN","LRMIAU2",9,0)
 N LRIEN,LRIENS,LRMSG,DIERR
"RTN","LRMIAU2",10,0)
 S LRABORT=$G(LRABORT)
"RTN","LRMIAU2",11,0)
 S HDRSHO=0
"RTN","LRMIAU2",12,0)
 ;
"RTN","LRMIAU2",13,0)
 S LR63539=0
"RTN","LRMIAU2",14,0)
 F  S LR63539=$O(^LR(LRDFN,"MI",LRIDT,32,LR63539)) Q:'LR63539  D  Q:LRABORT  ;
"RTN","LRMIAU2",15,0)
 . ; first record?
"RTN","LRMIAU2",16,0)
 . I $$WILLSHO(LRDFN,LRIDT,LR63539) D  ;
"RTN","LRMIAU2",17,0)
 . . I 'HDRSHO D  ;
"RTN","LRMIAU2",18,0)
 . . . S X="*  *  *  Start Audit Log  *  *  *"
"RTN","LRMIAU2",19,0)
 . . . W !,$$CJ^XLFSTR(X,IOM)
"RTN","LRMIAU2",20,0)
 . . . S HDRSHO=1
"RTN","LRMIAU2",21,0)
 . . ;
"RTN","LRMIAU2",22,0)
 . . D NP Q:LRABORT
"RTN","LRMIAU2",23,0)
 . . D SHOW(LRDFN,LRIDT,LR63539,.LRPGDATA,.LRABORT)
"RTN","LRMIAU2",24,0)
 . Q:LRABORT
"RTN","LRMIAU2",25,0)
 . ;
"RTN","LRMIAU2",26,0)
 . ; last record?
"RTN","LRMIAU2",27,0)
 . I LR63539=$O(^LR(LRDFN,"MI",LRIDT,32," "),-1) D  ;
"RTN","LRMIAU2",28,0)
 . . Q:'HDRSHO
"RTN","LRMIAU2",29,0)
 . . D NP Q:LRABORT
"RTN","LRMIAU2",30,0)
 . . S X="*  *  *  End Audit Log  *  *  *"
"RTN","LRMIAU2",31,0)
 . . W !,$$CJ^XLFSTR(X,IOM)
"RTN","LRMIAU2",32,0)
 . . D NP
"RTN","LRMIAU2",33,0)
 . ;
"RTN","LRMIAU2",34,0)
 Q
"RTN","LRMIAU2",35,0)
 ;
"RTN","LRMIAU2",36,0)
WILLSHO(LRDFN,LRIDT,R32) ;
"RTN","LRMIAU2",37,0)
 ; Does this record qualify?
"RTN","LRMIAU2",38,0)
 N STATUS,DATA
"RTN","LRMIAU2",39,0)
 S STATUS=1
"RTN","LRMIAU2",40,0)
 S DATA=^LR(LRDFN,"MI",LRIDT,32,R32,0)
"RTN","LRMIAU2",41,0)
 I $P(DATA,U,4)=1 S STATUS=0 ;TYPE=ROUTINE EDIT
"RTN","LRMIAU2",42,0)
 Q STATUS
"RTN","LRMIAU2",43,0)
 ;
"RTN","LRMIAU2",44,0)
SHOW(LRDFN,LRIDT,LR63539,LRPGDATA,LRABORT) ;
"RTN","LRMIAU2",45,0)
 ; Displays a particular audit trail entry
"RTN","LRMIAU2",46,0)
 ;
"RTN","LRMIAU2",47,0)
 N DATE,TECH,JUST,FAC,TEST,TYPE,SUBSCR,APPROV
"RTN","LRMIAU2",48,0)
 N LRIEN,DIERR,LRDATA,LRMSG,D63539
"RTN","LRMIAU2",49,0)
 S LR63539=$G(LR63539)
"RTN","LRMIAU2",50,0)
 S LRABORT=$G(LRABORT)
"RTN","LRMIAU2",51,0)
 S LRIEN=LR63539_","_LRIDT_","_LRDFN_","
"RTN","LRMIAU2",52,0)
 S ACCN=$P(^LR(LRDFN,"MI",LRIDT,0),U,6)
"RTN","LRMIAU2",53,0)
 D GETS^DIQ(63.539,LRIEN,".01;1;2;3;4;6;7;14;","EI","LRDATA","LRMSG")
"RTN","LRMIAU2",54,0)
 M D63539=LRDATA(63.539,LRIEN)
"RTN","LRMIAU2",55,0)
 K LRDATA
"RTN","LRMIAU2",56,0)
 S DATE=$G(D63539(1,"E"))
"RTN","LRMIAU2",57,0)
 S TECH=$G(D63539(2,"E"))
"RTN","LRMIAU2",58,0)
 S JUST=$G(D63539(4,"E"))
"RTN","LRMIAU2",59,0)
 S FAC=$G(D63539(7,"E"))
"RTN","LRMIAU2",60,0)
 S TEST=$G(D63539(14,"E"))
"RTN","LRMIAU2",61,0)
 S TYPE=$G(D63539(3,"E"))
"RTN","LRMIAU2",62,0)
 S SUBSCR=$G(D63539(6,"I"))
"RTN","LRMIAU2",63,0)
 I TYPE="" S TYPE="TEST NOT COMPLETED"
"RTN","LRMIAU2",64,0)
 I $$UP^XLFSTR(TYPE)["ROUTINE" Q
"RTN","LRMIAU2",65,0)
 S APPROV=1
"RTN","LRMIAU2",66,0)
 I "^1^5^8^11^16^"[("^"_SUBSCR_"^") D  ;
"RTN","LRMIAU2",67,0)
 . S X=$G(^LR(LRDFN,"MI",LRIDT,SUBSCR))
"RTN","LRMIAU2",68,0)
 . I '$P(X,U,1) S APPROV=0
"RTN","LRMIAU2",69,0)
 ;
"RTN","LRMIAU2",70,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",71,0)
 S X="  This report has been revised  "
"RTN","LRMIAU2",72,0)
 S X=$$CJ^XLFSTR(X,IOM,"*")
"RTN","LRMIAU2",73,0)
 W !,X
"RTN","LRMIAU2",74,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",75,0)
 W !,"           Test: "_TEST_"           "_ACCN
"RTN","LRMIAU2",76,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",77,0)
 W !,"     Revised by: "_TECH_" on "_DATE_" at "_FAC
"RTN","LRMIAU2",78,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",79,0)
 W !,"  Revision type: "_TYPE
"RTN","LRMIAU2",80,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",81,0)
 W !,"  Justification: "_JUST
"RTN","LRMIAU2",82,0)
 D NP Q:LRABORT
"RTN","LRMIAU2",83,0)
 ;
"RTN","LRMIAU2",84,0)
 I 'APPROV D  Q:LRABORT  ;
"RTN","LRMIAU2",85,0)
 . W !,"     **** THIS REPORT HAS NOT BEEN REAPPROVED/REVALIDATED ****"
"RTN","LRMIAU2",86,0)
 . D NP Q:LRABORT
"RTN","LRMIAU2",87,0)
 ;
"RTN","LRMIAU2",88,0)
 Q
"RTN","LRMIAU2",89,0)
 ;
"RTN","LRMIAU2",90,0)
NP ;
"RTN","LRMIAU2",91,0)
 ; Convenience method
"RTN","LRMIAU2",92,0)
 D NP^LRMIPSZ1
"RTN","LRMIAU2",93,0)
 Q
"RTN","LRMIAUD")
0^22^B1362054
"RTN","LRMIAUD",1,0)
LRMIAUD ;DALISC/RBN - Micro Audit/Alert System ;July 22, 2008
"RTN","LRMIAUD",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIAUD",3,0)
 ;
"RTN","LRMIAUD",4,0)
 ; This routine is a shell to fit into the
"RTN","LRMIAUD",5,0)
 ; proposed framework for LR*5.2*216
"RTN","LRMIAUD",6,0)
 ;
"RTN","LRMIAUD",7,0)
 ; NOTE: All Auditing routines assume that the caller already has the appropriate global lock(s) before entry.
"RTN","LRMIAUD",8,0)
 ;        L +^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIAUD",9,0)
 ; 
"RTN","LRMIAUD",10,0)
 ; ^LR data that is temporarily changed should all be changed in one spot.  Also an error trap should be setup
"RTN","LRMIAUD",11,0)
 ; so the changed data can be restored if an error happens between changing the data and restoring the data
"RTN","LRMIAUD",12,0)
 ;
"RTN","LRMIAUD",13,0)
 Q
"RTN","LRMIAUD",14,0)
 ;
"RTN","LRMIAUD",15,0)
 ;
"RTN","LRMIAUD",16,0)
LEDI(IN) ;
"RTN","LRMIAUD",17,0)
 ; This entry point is specifically for using the audit log with LDSI/LEDI lab results received via HL7 from a host lab.
"RTN","LRMIAUD",18,0)
 ; 
"RTN","LRMIAUD",19,0)
 ; Input
"RTN","LRMIAUD",20,0)
 ;   IN : <byref><opt>  Pass info to Audit trail
"RTN","LRMIAUD",21,0)
 ;      : IN(63.539,3) = #63.539 field #3 (dflt=1)
"RTN","LRMIAUD",22,0)
 ;      : IN(63.539,4) = #63.539 field #4 (dflt=UPDATED BY HOST)
"RTN","LRMIAUD",23,0)
 ; Output : Returns the IEN of the new #63.539 entry
"RTN","LRMIAUD",24,0)
 ;
"RTN","LRMIAUD",25,0)
 N X,LRNOW,LRAUDTMP,LREDT,LR63539,DATA,ZDUZP
"RTN","LRMIAUD",26,0)
 ;
"RTN","LRMIAUD",27,0)
 Q:$G(LRSB)'>0 0
"RTN","LRMIAUD",28,0)
 I LRSB'=.99,'$D(^LR(LRDFN,"MI",LRIDT,LRSB)) Q 0
"RTN","LRMIAUD",29,0)
 ;
"RTN","LRMIAUD",30,0)
 S ZDUZP=$S(LRSB=1:4,LRSB=5:3,LRSB=8:4,LRSB=11:5,1:"")
"RTN","LRMIAUD",31,0)
 I LRSB'=.99 Q:'ZDUZP 0
"RTN","LRMIAUD",32,0)
 S (LREDT,LRNOW)=$$NOW^XLFDT
"RTN","LRMIAUD",33,0)
 ; logic from proposed MI audit trail should audit trail really be setting these fields since
"RTN","LRMIAUD",34,0)
 ; audit trail gets triggered even when data doesnt change?
"RTN","LRMIAUD",35,0)
 ;I ZDUZP D  ;
"RTN","LRMIAUD",36,0)
 ;. N LRDFA,LRIEN,LRMSG,DIERR,FLD,FLDS
"RTN","LRMIAUD",37,0)
 ;. I LRSB=1 S FLDS(11)=LRNOW S FLDS(11.55)=DUZ
"RTN","LRMIAUD",38,0)
 ;. I LRSB=5 S FLDS(14)=LRNOW S FLDS(15.5)=DUZ
"RTN","LRMIAUD",39,0)
 ;. I LRSB=8 S FLDS(18)=LRNOW S FLDS(19.5)=DUZ
"RTN","LRMIAUD",40,0)
 ;. I LRSB=11 S FLDS(22)=LRNOW S FLDS(25.5)=DUZ
"RTN","LRMIAUD",41,0)
 ;. Q:'$D(FLDS)
"RTN","LRMIAUD",42,0)
 ;. S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRMIAUD",43,0)
 ;. S FLD=""
"RTN","LRMIAUD",44,0)
 ;. F  S FLD=$O(FLDS(FLD)) Q:FLD=""  D  ;
"RTN","LRMIAUD",45,0)
 ;. . S LRFDA(1,63.05,LRIEN,FLD)=FLDS(FLD)
"RTN","LRMIAUD",46,0)
 ;. Q:'$D(LRFDA)
"RTN","LRMIAUD",47,0)
 ;. D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRMIAUD",48,0)
 ;. ;original LR*216 proposed code was setting these
"RTN","LRMIAUD",49,0)
 ;. ;S $P(^LR(LRDFN,"MI",LRIDT,LRSB),U,1)=LRNOW
"RTN","LRMIAUD",50,0)
 ;. ;S $P(^LR(LRDFN,"MI",LRIDT,LRSB),U,ZDUZP)=DUZ
"RTN","LRMIAUD",51,0)
 ;
"RTN","LRMIAUD",52,0)
 K DATA
"RTN","LRMIAUD",53,0)
 S DATA(63.539,3)=$G(IN(63.539,3),1)
"RTN","LRMIAUD",54,0)
 S DATA(63.539,4)=$G(IN(63.539,4),"UPDATED BY HOST LAB VIA HL7")
"RTN","LRMIAUD",55,0)
 S LR63539=$$FILEAUD^LRMIAU1(.DATA)
"RTN","LRMIAUD",56,0)
 Q LR63539
"RTN","LRMIBUG")
0^106^B9500545
"RTN","LRMIBUG",1,0)
LRMIBUG ;DALOI/JMC- DISPLAY ORGANISMS ;07/15/09  10:38
"RTN","LRMIBUG",2,0)
 ;;5.2;LAB SERVICE;**318,321,339,350**;Sep 27, 1994;Build 230
"RTN","LRMIBUG",3,0)
 ;
"RTN","LRMIBUG",4,0)
 ; Reference to ^DIE global supported by ICR #5002
"RTN","LRMIBUG",5,0)
 ;
"RTN","LRMIBUG",6,0)
BUGS ;
"RTN","LRMIBUG",7,0)
 Q:$G(LREND)
"RTN","LRMIBUG",8,0)
 N LR1PASS,LRBG,LRBI,LRBG1
"RTN","LRMIBUG",9,0)
 D KVAR^VADPT
"RTN","LRMIBUG",10,0)
 S LR1PASS=1
"RTN","LRMIBUG",11,0)
 I '$D(^LR(LRDFN,"MI",LRIDT,3,"B")) D SETBINDX^LRMIBUG(LRDFN,LRIDT,3)
"RTN","LRMIBUG",12,0)
 F  D BUGIN Q:Y<1  S LRBG1=Y(0) D:$P(Y,U,3)&($P(LRPARAM,U,14))&($P($G(^LRO(68,LRAA,0)),U,16)) ETIO^LRCAPV1 D BUGGER,BUGOUT
"RTN","LRMIBUG",13,0)
 D BUGOUT
"RTN","LRMIBUG",14,0)
 ;
"RTN","LRMIBUG",15,0)
 Q
"RTN","LRMIBUG",16,0)
 ;
"RTN","LRMIBUG",17,0)
 ;
"RTN","LRMIBUG",18,0)
BUGIN ;
"RTN","LRMIBUG",19,0)
 S DIC=DIE_DA_",3,",LRODA=DA,LRODIE=DIE,DA(1)=DA,DA(2)=LRDFN
"RTN","LRMIBUG",20,0)
 S DIC(0)="AEFLMOQZ"
"RTN","LRMIBUG",21,0)
 S DIC("S")="I 1 Q:$D(^LR(DA(2),""MI"",DA(1),3,+X))  Q:'$D(^LAB(61.2,+X,0))  I $L($P(^(0),U,5)),""PVRBFM""[$P(^(0),U,5)"
"RTN","LRMIBUG",22,0)
 S:'$D(@(DIC_"0)")) ^(0)="^63.3PA" S LRSPEC=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)
"RTN","LRMIBUG",23,0)
 W ! S LRBG=0
"RTN","LRMIBUG",24,0)
 F  S LRBG=$O(^LR(LRDFN,"MI",DA,3,LRBG)) Q:LRBG<1  S LRBUG=+^(LRBG,0) K DIC("B") S:LRBG=1&LR1PASS DIC("B")=$P(^LAB(61.2,+^LR(LRDFN,"MI",DA,3,1,0),0),U) W !?2,LRBG,?5,$P(^LAB(61.2,LRBUG,0),U)
"RTN","LRMIBUG",25,0)
 S DLAYGO=63 D ^DIC
"RTN","LRMIBUG",26,0)
 K DIC("B"),DIC("S"),DLAYGO
"RTN","LRMIBUG",27,0)
 S LR1PASS=0
"RTN","LRMIBUG",28,0)
 Q
"RTN","LRMIBUG",29,0)
 ;
"RTN","LRMIBUG",30,0)
 ;
"RTN","LRMIBUG",31,0)
BUGGER ;
"RTN","LRMIBUG",32,0)
 S LRNB=$S($L($P(^LAB(61.2,+LRBG1,0),U,4)):$P(^(0),U,4),1:LRMIDEF),LRBI=$P(^(0),U,5)
"RTN","LRMIBUG",33,0)
 N LRTHISDA
"RTN","LRMIBUG",34,0)
 S DIE=DIC,DA=+Y,LRTHISDA=DA D TEMP,^DIE,DELINT I '$D(Y) Q
"RTN","LRMIBUG",35,0)
 W !,"Any other antibiotics" S %=2 D YN^DICN I %'=1 Q
"RTN","LRMIBUG",36,0)
 I '$L(LRMIOTH) S DR="S Y=200;2.0000001:200",DR(2,63.32)=.01 D ^DIE Q
"RTN","LRMIBUG",37,0)
 K DR
"RTN","LRMIBUG",38,0)
 S LRNB=LRMIOTH D TEMP F J=1:1 S K=$P(DR,";",J) Q:+K'=K!(K>2)!'$L(K)
"RTN","LRMIBUG",39,0)
 S (DR,DR(1,63.3))=$P(DR,";",J,245)
"RTN","LRMIBUG",40,0)
 D ^DIE
"RTN","LRMIBUG",41,0)
 Q
"RTN","LRMIBUG",42,0)
 ;
"RTN","LRMIBUG",43,0)
 ;
"RTN","LRMIBUG",44,0)
TEMP ;
"RTN","LRMIBUG",45,0)
 S LRNB=+$O(^DIE("B",$S($L(LRNB):LRNB,1:0),0))
"RTN","LRMIBUG",46,0)
 I LRNB,$D(^DIE(LRNB,"DR",3,63.3)) S (DR,DR(1,63.3))=^(63.3),J=0 F I=0:0 S J=$O(^DIE(LRNB,"DR",3,63.3,J)) Q:J<1  S DR(1,63.3,J)=^(J)
"RTN","LRMIBUG",47,0)
 I 'LRNB!('$D(^DIE(LRNB,"DR",3,63.3))) S DR=$S(($L(LRBI)&("MFBVRP"[LRBI)):".01;1;2",1:".01;1;2:195")
"RTN","LRMIBUG",48,0)
 Q
"RTN","LRMIBUG",49,0)
 ;
"RTN","LRMIBUG",50,0)
 ;
"RTN","LRMIBUG",51,0)
BUGOUT ;
"RTN","LRMIBUG",52,0)
 S (DIE,DIC)=LRODIE,DA=LRODA,DA(1)=LRDFN K DR(1,63.3)
"RTN","LRMIBUG",53,0)
 Q
"RTN","LRMIBUG",54,0)
 ;
"RTN","LRMIBUG",55,0)
 ;
"RTN","LRMIBUG",56,0)
DELINT ; If a Result is (1st piece) deleted in ^LR(LRDFN,"MI",LRIDT,3
"RTN","LRMIBUG",57,0)
 ; the associated Interpretation (2nd piece) should be deleted
"RTN","LRMIBUG",58,0)
 ; as well. If S^S^ exists, and the Result is deleted, ^S^ Interpretation remains.
"RTN","LRMIBUG",59,0)
 ; This process will clean up the remaining Interpretation
"RTN","LRMIBUG",60,0)
 Q:'LRDFN!('LRIDT)!('LRTHISDA)
"RTN","LRMIBUG",61,0)
 N LRXX
"RTN","LRMIBUG",62,0)
 S LRXX=2 ;This node bumps in fractions exp. 2.001 2.00234
"RTN","LRMIBUG",63,0)
 F  S LRXX=$O(^LR(LRDFN,"MI",LRIDT,3,LRTHISDA,LRXX)) Q:'LRXX!(LRXX'<3)  D
"RTN","LRMIBUG",64,0)
 . I $P(^LR(LRDFN,"MI",LRIDT,3,LRTHISDA,LRXX),U)="" S $P(^LR(LRDFN,"MI",LRIDT,3,LRTHISDA,LRXX),U,2)=""
"RTN","LRMIBUG",65,0)
 Q
"RTN","LRMIBUG",66,0)
 ;
"RTN","LRMIBUG",67,0)
 ;
"RTN","LRMIBUG",68,0)
SETBINDX(LRDFN,LRIDT,LRNODE) ; Set "B" x-ref if "B" x-ref doesn't exist on #.01 field.
"RTN","LRMIBUG",69,0)
 N DA,DIC,DIE,DIK,DLAYGO,DR,X,Y
"RTN","LRMIBUG",70,0)
 S DA(1)=LRIDT,DA(2)=LRDFN
"RTN","LRMIBUG",71,0)
 S DIK="^LR("_LRDFN_",""MI"","_LRIDT_","_LRNODE_","
"RTN","LRMIBUG",72,0)
 S DIK(1)=".01^B"
"RTN","LRMIBUG",73,0)
 D ENALL^DIK
"RTN","LRMIBUG",74,0)
 Q
"RTN","LRMIEDZ")
0^17^B6581426
"RTN","LRMIEDZ",1,0)
LRMIEDZ ;DALOI/STAFF - MICROBIOLOGY EDIT ROUTINE ;05/11/09  10:44
"RTN","LRMIEDZ",2,0)
 ;;5.2;LAB SERVICE;**295,350**;Sep 27, 1994;Build 230
"RTN","LRMIEDZ",3,0)
 ;
"RTN","LRMIEDZ",4,0)
 ; from LRVR and option LRMIEDZ
"RTN","LRMIEDZ",5,0)
 ;
"RTN","LRMIEDZ",6,0)
BEGIN ;
"RTN","LRMIEDZ",7,0)
 S LREND=0,LRACC="",LRSS="MI",LRVT="RE"
"RTN","LRMIEDZ",8,0)
 K ^TMP("LA7HDR",$J)
"RTN","LRMIEDZ",9,0)
 D EN^LRPARAM,DATE
"RTN","LRMIEDZ",10,0)
 ;
"RTN","LRMIEDZ",11,0)
 ;
"RTN","LRMIEDZ",12,0)
END ; from LRFAST,LRVER
"RTN","LRMIEDZ",13,0)
 ;
"RTN","LRMIEDZ",14,0)
 I $G(LRCSQ)'="",$O(^XTMP("LRCAP",LRCSQ,DUZ,0)) D STD^LRCAPV
"RTN","LRMIEDZ",15,0)
 ;
"RTN","LRMIEDZ",16,0)
 ;
"RTN","LRMIEDZ",17,0)
ANN ;
"RTN","LRMIEDZ",18,0)
 ;
"RTN","LRMIEDZ",19,0)
 D:$P(LRPARAM,U,14) ANN^LRCAPV ; Force workload program
"RTN","LRMIEDZ",20,0)
 K DD,DR,GLB,LRCAPMS,LRCDEF,LRCDEF0,LRCNT,LRCODE,LRCODEN,LRCSQ,LRCY,LRP,LRPN,LRQC,LRSSC,LRSSCX,LRSTD,LRT,LRTIME,NODE,NODE0,ZTSK
"RTN","LRMIEDZ",21,0)
 K %,A6,AGE,C,D,D0,D1,DA,DFN,DIC,DIE,DLAYGO,DOB,DTOUT,DUOUT,DX,I,II,J,K,LRAA,LRACC,LRAD,LRANOK,LRBG0,LRBUG,LRCAPOK,LRCDT,LRDFN,LRDPF,LREAL,LREND,LRFIFO,LRI,LRIDT,LRLLOC,LRMIDEF,LRMIOTH,LRNB,LRODA,LRODIE,LRVT
"RTN","LRMIEDZ",22,0)
 K LRODT,LRPTP,LRSAME,LRSB,LRSCREEN,LRSN,LRSPEC,LRSS,LRTEC,LRTS,LRTX,LRUNDO,LRWRD,N,PNM,POP,S,SEX,SSN,X,Y,Z
"RTN","LRMIEDZ",23,0)
 K ^TMP("LA7HDR",$J)
"RTN","LRMIEDZ",24,0)
 Q
"RTN","LRMIEDZ",25,0)
 ;
"RTN","LRMIEDZ",26,0)
 ;
"RTN","LRMIEDZ",27,0)
DATE ;
"RTN","LRMIEDZ",28,0)
 ;
"RTN","LRMIEDZ",29,0)
 D ENA^LRWU4("MI") Q:LRAA<1  D:$P(LRPARAM,U,14) ^LRCAPV G:LREND ANN
"RTN","LRMIEDZ",30,0)
 K DIC
"RTN","LRMIEDZ",31,0)
 S DIC=60,DIC("S")="I $P(^(0),U,4)=""MI""",DIC(0)="AEMOQ",DIC("A")="Select TEST/PROCEDURE: "
"RTN","LRMIEDZ",32,0)
 D ^DIC K DIC Q:$D(DUOUT)  S LRPTP=+Y
"RTN","LRMIEDZ",33,0)
 I Y<1 W !,"None Preselected",!,"Accession # ",LRAN
"RTN","LRMIEDZ",34,0)
 S LRMIDEF=$P(^LAB(69.9,1,1),U,10),LRMIOTH=$P(^(1),U,11)
"RTN","LRMIEDZ",35,0)
 D ^LRMIEDZ2
"RTN","LRMIEDZ",36,0)
 Q
"RTN","LRMIEDZ",37,0)
 ;
"RTN","LRMIEDZ",38,0)
 ;
"RTN","LRMIEDZ",39,0)
UNDO ; from LRMIEDZ2
"RTN","LRMIEDZ",40,0)
 ;
"RTN","LRMIEDZ",41,0)
 S $P(^LR(LRDFN,"MI",LRIDT,0),U,9)=1,$P(^(0),U,3,4)=U,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=""
"RTN","LRMIEDZ",42,0)
 S $P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS,0),U,4,5)=DUZ_U_DT,^LRO(68,LRAA,1,LRAD,1,"AD",DT,+LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",DT,+LRAN)=""
"RTN","LRMIEDZ",43,0)
 ;
"RTN","LRMIEDZ",44,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIEDZ",45,0)
 ;
"RTN","LRMIEDZ",46,0)
 Q
"RTN","LRMIEDZ2")
0^18^B43535275
"RTN","LRMIEDZ2",1,0)
LRMIEDZ2 ;DALIO/JMC - MICROBIOLOGY EDIT ROUTINE ;05/01/12  09:16
"RTN","LRMIEDZ2",2,0)
 ;;5.2;LAB SERVICE;**23,104,242,295,350**;Sep 27, 1994;Build 230
"RTN","LRMIEDZ2",3,0)
 ;
"RTN","LRMIEDZ2",4,0)
 ; from LRFAST,LRMIEDZ,LRVER
"RTN","LRMIEDZ2",5,0)
 ;
"RTN","LRMIEDZ2",6,0)
 ; Reference to ^DIE global supported by ICR #5002
"RTN","LRMIEDZ2",7,0)
 ;
"RTN","LRMIEDZ2",8,0)
PAT ;
"RTN","LRMIEDZ2",9,0)
 N LRUID
"RTN","LRMIEDZ2",10,0)
 S X=LRAN
"RTN","LRMIEDZ2",11,0)
 F  R:'$D(LRAN) !!,"Accession #: ",X:DTIME Q:X=""!(X[U)  D
"RTN","LRMIEDZ2",12,0)
 . S LRANOK=1,LRCAPOK=1 D LRANX^LRMIU4
"RTN","LRMIEDZ2",13,0)
 . I $G(LRANOK) D PAT1 L -^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIEDZ2",14,0)
 . I $G(LRANOK) D LEDI^LRVR0
"RTN","LRMIEDZ2",15,0)
 . K LRTS I $G(LRANOK) D:LRCAPOK&($P(LRPARAM,U,14)) ^LRCAPV1
"RTN","LRMIEDZ2",16,0)
 . K:$G(LRANOK) LRAN
"RTN","LRMIEDZ2",17,0)
 . I '$G(LRANOK) W !,"Enter the accession number" K LRAN
"RTN","LRMIEDZ2",18,0)
 Q
"RTN","LRMIEDZ2",19,0)
 ;
"RTN","LRMIEDZ2",20,0)
 ;
"RTN","LRMIEDZ2",21,0)
PAT1 ; Called from above and LRFAST
"RTN","LRMIEDZ2",22,0)
 ;
"RTN","LRMIEDZ2",23,0)
 ; Set LRANOK if called from LRFAST and not set
"RTN","LRMIEDZ2",24,0)
 I $G(LRANOK)="" N LRANOK S LRANOK=1
"RTN","LRMIEDZ2",25,0)
 ;
"RTN","LRMIEDZ2",26,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRMIEDZ2",27,0)
 S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRMIEDZ2",28,0)
 S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5),LRCDT=+^(3),LREAL=$P(^(3),U,2),LRI=+$O(^(5,0)),LRSPEC=$S($D(^(LRI,0)):+^(0),1:"")
"RTN","LRMIEDZ2",29,0)
 ;
"RTN","LRMIEDZ2",30,0)
 I '$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) D  Q
"RTN","LRMIEDZ2",31,0)
 . W !,"No tests associated with this accession" S LRANOK=0
"RTN","LRMIEDZ2",32,0)
 . Q:$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))," ")=$P(^LRO(68,LRAA,0),U,11)
"RTN","LRMIEDZ2",33,0)
 . W !,"Verify with accession #: ",$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))
"RTN","LRMIEDZ2",34,0)
 ;
"RTN","LRMIEDZ2",35,0)
 ; Insure DILOCKTM is defined
"RTN","LRMIEDZ2",36,0)
 I $G(DILOCKTM)="" D
"RTN","LRMIEDZ2",37,0)
 . N DIQUIET
"RTN","LRMIEDZ2",38,0)
 . S DIQUIET=1 D DT^DICRW
"RTN","LRMIEDZ2",39,0)
 ;
"RTN","LRMIEDZ2",40,0)
 L +^LR(LRDFN,"MI",LRIDT):DILOCKTM
"RTN","LRMIEDZ2",41,0)
 I '$T W !!?10,"Someone else is editing this accession ",!,$C(7) S LRANOK=0 Q
"RTN","LRMIEDZ2",42,0)
 I '$D(^LR(LRDFN,"MI",LRIDT,0)) D BB S (LRCAPOK,LRANOK)=0 Q
"RTN","LRMIEDZ2",43,0)
 S (LRBG0,Y(0))=^LR(LRDFN,"MI",LRIDT,0)
"RTN","LRMIEDZ2",44,0)
 ;
"RTN","LRMIEDZ2",45,0)
 D PATINFO
"RTN","LRMIEDZ2",46,0)
 ;
"RTN","LRMIEDZ2",47,0)
 I $$GET^XPAR("USR^DIV^PKG","LR MI VERIFY DISPLAY PROVIDER",1,"Q") D PROV
"RTN","LRMIEDZ2",48,0)
 ;
"RTN","LRMIEDZ2",49,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRMIEDZ2",50,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3) D
"RTN","LRMIEDZ2",51,0)
 . S DIR("A",1)="Final report has been verified by microbiology supervisor."
"RTN","LRMIEDZ2",52,0)
 . S DIR("A",2)="If you proceed in editing, this report will need to be reverified."
"RTN","LRMIEDZ2",53,0)
 . S DIR("B")="NO"
"RTN","LRMIEDZ2",54,0)
 E  S DIR("B")="YES"
"RTN","LRMIEDZ2",55,0)
 S DIR(0)="YO",DIR("A")="Edit this accession"
"RTN","LRMIEDZ2",56,0)
 D ^DIR
"RTN","LRMIEDZ2",57,0)
 I Y<1 S (LRCAPOK,LRANOK)=0 D ASKXQA W ! Q
"RTN","LRMIEDZ2",58,0)
 ;
"RTN","LRMIEDZ2",59,0)
 ;
"RTN","LRMIEDZ2",60,0)
AUDRTN ;
"RTN","LRMIEDZ2",61,0)
 ;
"RTN","LRMIEDZ2",62,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3)!$P(^LR(LRDFN,"MI",LRIDT,0),U,9) S LRUNDO=1
"RTN","LRMIEDZ2",63,0)
 ;
"RTN","LRMIEDZ2",64,0)
 D EC^LRMIEDZ4
"RTN","LRMIEDZ2",65,0)
 I N=0 W !,"No Tests on Accession" S (LRCAPOK,LRANOK)=0 Q
"RTN","LRMIEDZ2",66,0)
 I '$D(LRNPTP) D
"RTN","LRMIEDZ2",67,0)
 . I N=1 S LRI=1 Q
"RTN","LRMIEDZ2",68,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRMIEDZ2",69,0)
 . S DIR(0)="NO^1:"_N_":0",DIR("A")="Select Test",DIR("B")=1
"RTN","LRMIEDZ2",70,0)
 . D ^DIR
"RTN","LRMIEDZ2",71,0)
 . I Y<1 S (LRCAPOK,LRANOK)=0 Q
"RTN","LRMIEDZ2",72,0)
 . S LRI=Y
"RTN","LRMIEDZ2",73,0)
 I LRANOK=0 Q
"RTN","LRMIEDZ2",74,0)
 I LRTX(LRI)="" W !,"EDIT CODE IN FILE 60 NOT DEFINED.",! S (LRCAPOK,LRANOK)=0 Q
"RTN","LRMIEDZ2",75,0)
 ;
"RTN","LRMIEDZ2",76,0)
 S LRTS=LRTS(LRI) D:LRUNDO UNDO^LRMIEDZ
"RTN","LRMIEDZ2",77,0)
 K DR
"RTN","LRMIEDZ2",78,0)
 S DA=LRIDT,DA(1)=LRDFN,DIE="^LR(LRDFN,""MI"","
"RTN","LRMIEDZ2",79,0)
 ;
"RTN","LRMIEDZ2",80,0)
 S LRSB=$S(LRTX(LRI)["11.5":1,LRTX(LRI)["23":11,LRTX(LRI)["19":8,LRTX(LRI)["15":5,LRTX(LRI)["34":16,1:"")
"RTN","LRMIEDZ2",81,0)
 S LRFIFO=LRTX(LRI)["FIFO",(LREND,LRSAME)=0 D:'LRFIFO TIME^LRMIEDZ3 I LREND K DR Q
"RTN","LRMIEDZ2",82,0)
 ;
"RTN","LRMIEDZ2",83,0)
 S LRSSC=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11)
"RTN","LRMIEDZ2",84,0)
 ;
"RTN","LRMIEDZ2",85,0)
 ;
"RTN","LRMIEDZ2",86,0)
AUDPT ;
"RTN","LRMIEDZ2",87,0)
 ; Check for "B" x-ref on #.01 field.
"RTN","LRMIEDZ2",88,0)
 F I=3,6,9,12,17 I $D(^LR(LRDFN,"MI",LRIDT,I)),'$D(^LR(LRDFN,"MI",LRIDT,I,"B")) D SETBINDX^LRMIBUG(LRDFN,LRIDT,I)
"RTN","LRMIEDZ2",89,0)
 ;
"RTN","LRMIEDZ2",90,0)
 I $D(LRLEDI) Q
"RTN","LRMIEDZ2",91,0)
 ;
"RTN","LRMIEDZ2",92,0)
 ; Set Y(0) for backward compatibility
"RTN","LRMIEDZ2",93,0)
 S Y(0)=LRBG0
"RTN","LRMIEDZ2",94,0)
 ;
"RTN","LRMIEDZ2",95,0)
 ; Execute code does not contain an edit template but fields/code
"RTN","LRMIEDZ2",96,0)
 I LRTX(LRI)'["S DR=""[",LRSB D  Q
"RTN","LRMIEDZ2",97,0)
 . X LRTX(LRI)
"RTN","LRMIEDZ2",98,0)
 . D EDIT^LRRPLU(LRDFN,LRSS,LRIDT) ; performing lab
"RTN","LRMIEDZ2",99,0)
 . D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) ; clinical reminders
"RTN","LRMIEDZ2",100,0)
 . D:'LREND EC3 K DR
"RTN","LRMIEDZ2",101,0)
 . D:LRUNDO&$P($G(^LR(LRDFN,"MI",LRIDT,LRSB)),U)'="" VT^LRMIUT1
"RTN","LRMIEDZ2",102,0)
 . D ASKXQA ; ask CPRS alerts
"RTN","LRMIEDZ2",103,0)
 ;
"RTN","LRMIEDZ2",104,0)
 ; Execute code contains an edit template name
"RTN","LRMIEDZ2",105,0)
 S (X,DR)=$P($P(LRTX(LRI),"[",2),"]",1) S:X'="" X=+$O(^DIE("B",X,0)) I X<1,'$D(^DIE(+X,"DR",2,63.05)) W !,DR," template doesn't exist for Microbiology." K DR  Q
"RTN","LRMIEDZ2",106,0)
 S J=1 F  S J=+$O(^DIE(X,"DR",J)) Q:J<1  S K=+$O(^DIE(X,"DR",J,0)),DR(J-1,K)=^DIE(X,"DR",J,K)
"RTN","LRMIEDZ2",107,0)
 S DR=DR(1,63.05)
"RTN","LRMIEDZ2",108,0)
 D ^DIE
"RTN","LRMIEDZ2",109,0)
 ;
"RTN","LRMIEDZ2",110,0)
 ; Ask for performing laboratory assignment
"RTN","LRMIEDZ2",111,0)
 D EDIT^LRRPLU(LRDFN,LRSS,LRIDT)
"RTN","LRMIEDZ2",112,0)
 ;
"RTN","LRMIEDZ2",113,0)
 ; Call clincial reminders
"RTN","LRMIEDZ2",114,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIEDZ2",115,0)
 ;
"RTN","LRMIEDZ2",116,0)
 D EC3
"RTN","LRMIEDZ2",117,0)
 ;
"RTN","LRMIEDZ2",118,0)
 ; Ask to send CPRS alert
"RTN","LRMIEDZ2",119,0)
 D ASKXQA
"RTN","LRMIEDZ2",120,0)
 ;
"RTN","LRMIEDZ2",121,0)
 K DR
"RTN","LRMIEDZ2",122,0)
 Q
"RTN","LRMIEDZ2",123,0)
 ;
"RTN","LRMIEDZ2",124,0)
 ;
"RTN","LRMIEDZ2",125,0)
BB ;
"RTN","LRMIEDZ2",126,0)
 W !,">>>>ERROR - NO ENTRY IN FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<^ <<<",!
"RTN","LRMIEDZ2",127,0)
 Q
"RTN","LRMIEDZ2",128,0)
 ;
"RTN","LRMIEDZ2",129,0)
 ;
"RTN","LRMIEDZ2",130,0)
EC3 ;
"RTN","LRMIEDZ2",131,0)
 S LRSSCN=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11)
"RTN","LRMIEDZ2",132,0)
 D:LRSSCN'=LRSSC UPDATE
"RTN","LRMIEDZ2",133,0)
 K LRSSCN,LRSSC S LRSAME=1
"RTN","LRMIEDZ2",134,0)
 D TIME^LRMIEDZ3 D:'LREND STF^LRMIUT
"RTN","LRMIEDZ2",135,0)
 Q
"RTN","LRMIEDZ2",136,0)
 ;
"RTN","LRMIEDZ2",137,0)
 ;
"RTN","LRMIEDZ2",138,0)
UPDATE ;
"RTN","LRMIEDZ2",139,0)
 D CHECK
"RTN","LRMIEDZ2",140,0)
 K LRSSCOM,LRSSCOM1,LRSSCA,LRSSCAA,LRSSCAY,LRSSCAN,LRSSCOD,LRSSCON
"RTN","LRMIEDZ2",141,0)
 Q
"RTN","LRMIEDZ2",142,0)
 ;
"RTN","LRMIEDZ2",143,0)
 ;
"RTN","LRMIEDZ2",144,0)
CHECK ;
"RTN","LRMIEDZ2",145,0)
 S LRSSCA=$P(^LR(LRDFN,"MI",LRIDT,0),U,6),LRSSCAA=+$O(^LRO(68,"B",$P(LRSSCA," "),0))
"RTN","LRMIEDZ2",146,0)
 S X=$P(LRSSCA," ",2) D ^%DT S LRSSCAY=Y,LRSSCAN=$P(LRSSCA," ",3)
"RTN","LRMIEDZ2",147,0)
 S J=0 F  S J=+$O(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,5,J)) Q:J<1  I ^(J,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIEDZ2",148,0)
 I J<1 Q
"RTN","LRMIEDZ2",149,0)
 S LRSSCOD=$P(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,0),U,4),LRSSCON=^(.1)
"RTN","LRMIEDZ2",150,0)
 S J=0 F  S J=+$O(^LRO(69,LRSSCOD,1,J)) Q:J<1  I $D(^(J,.1)),^(.1)=LRSSCON D ORDER Q
"RTN","LRMIEDZ2",151,0)
 Q
"RTN","LRMIEDZ2",152,0)
 ;
"RTN","LRMIEDZ2",153,0)
 ;
"RTN","LRMIEDZ2",154,0)
ORDER ;
"RTN","LRMIEDZ2",155,0)
 S $P(^LRO(69,LRSSCOD,1,J,0),U,3)=$P(LRSSCN,U,2)
"RTN","LRMIEDZ2",156,0)
 S K=0 F  S K=+$O(^LRO(69,LRSSCOD,1,J,4,K)) Q:K<1  I ^(K,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIEDZ2",157,0)
 Q
"RTN","LRMIEDZ2",158,0)
 ;
"RTN","LRMIEDZ2",159,0)
 ;
"RTN","LRMIEDZ2",160,0)
PATINFO ; Display patient information
"RTN","LRMIEDZ2",161,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRUNDO=0
"RTN","LRMIEDZ2",162,0)
 D PT^LRX
"RTN","LRMIEDZ2",163,0)
 W !!,?5,PNM,"   SSN: ",SSN
"RTN","LRMIEDZ2",164,0)
 I LRDPF=2 W "   LOC: ",$S(LRWRD'="":LRWRD,1:$S($D(^LR(LRDFN,.1)):^(.1),1:"??")),!
"RTN","LRMIEDZ2",165,0)
 ;
"RTN","LRMIEDZ2",166,0)
 I LRDPF?1(1"62.3",1"67.2",1"67.3",1"67.4") Q
"RTN","LRMIEDZ2",167,0)
 ;
"RTN","LRMIEDZ2",168,0)
 W !,"Pat Info: ",$P($G(^LR(LRDFN,.091)),U)
"RTN","LRMIEDZ2",169,0)
 W ?34," Sex: ",$S(SEX="M":"MALE",SEX="F":"FEMALE",1:SEX)
"RTN","LRMIEDZ2",170,0)
 W ?48," Age: ",$$CALCAGE^LRRPU(DOB,LRCDT)," as of ",$$FMTE^XLFDT(LRCDT,"1D")
"RTN","LRMIEDZ2",171,0)
 Q
"RTN","LRMIEDZ2",172,0)
 ;
"RTN","LRMIEDZ2",173,0)
 ;
"RTN","LRMIEDZ2",174,0)
PROV ; Display provider and contact numbers.
"RTN","LRMIEDZ2",175,0)
 N LRPRAC,LRX
"RTN","LRMIEDZ2",176,0)
 S LRPRAC=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,8)
"RTN","LRMIEDZ2",177,0)
 I LRPRAC>0,LRPRAC=+LRPRAC D GETS^DIQ(200,LRPRAC_",",".01;.132;.137;.138","E","LRPRAC(LRPRAC)","LRERR")
"RTN","LRMIEDZ2",178,0)
 ;
"RTN","LRMIEDZ2",179,0)
 W !,"Provider: "
"RTN","LRMIEDZ2",180,0)
 ;
"RTN","LRMIEDZ2",181,0)
 I LRPRAC,$D(LRPRAC(LRPRAC,200)) D  Q
"RTN","LRMIEDZ2",182,0)
 . W LRPRAC(LRPRAC,200,LRPRAC_",",.01,"E"),?40," Voice pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.137,"E")
"RTN","LRMIEDZ2",183,0)
 . W !,"   Phone: ",LRPRAC(LRPRAC,200,LRPRAC_",",.132,"E"),?38," Digital pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.138,"E")
"RTN","LRMIEDZ2",184,0)
 ;
"RTN","LRMIEDZ2",185,0)
 S LRX=""
"RTN","LRMIEDZ2",186,0)
 I LRPRAC?1"REF:"1.AN!(LRDPF=67) S LRX=$$REFDOC^LRRP1(LRDFN,LRSS,LRIDT)
"RTN","LRMIEDZ2",187,0)
 I LRX'="" W LRX
"RTN","LRMIEDZ2",188,0)
 E  W LRPRAC
"RTN","LRMIEDZ2",189,0)
 ;
"RTN","LRMIEDZ2",190,0)
 Q
"RTN","LRMIEDZ2",191,0)
 ;
"RTN","LRMIEDZ2",192,0)
 ;
"RTN","LRMIEDZ2",193,0)
ASKXQA ; Determine if user should be ask to send CPRS Alert
"RTN","LRMIEDZ2",194,0)
 ;
"RTN","LRMIEDZ2",195,0)
 N LRDEFAULT
"RTN","LRMIEDZ2",196,0)
 ;
"RTN","LRMIEDZ2",197,0)
 ; No CPRS alert for non-PATIENT file (#2) patients
"RTN","LRMIEDZ2",198,0)
 I +LRDPF'=2 Q
"RTN","LRMIEDZ2",199,0)
 ;
"RTN","LRMIEDZ2",200,0)
 S LRDEFAULT=$$GET^XPAR("USR^DIV^PKG","LR MI VERIFY CPRS ALERT",1,"Q")
"RTN","LRMIEDZ2",201,0)
 I LRDEFAULT>0 D ASKXQA^LR7ORB3(LRDFN,"MI",LRIDT,LRUID,LRDEFAULT)
"RTN","LRMIEDZ2",202,0)
 ;
"RTN","LRMIEDZ2",203,0)
 Q
"RTN","LRMIEDZ4")
0^70^B2660171
"RTN","LRMIEDZ4",1,0)
LRMIEDZ4 ;DALOI/FHS/RBN - CONTINUE MICROBIOLOGY EDIT ;11/18/11  16:04
"RTN","LRMIEDZ4",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIEDZ4",3,0)
 ;
"RTN","LRMIEDZ4",4,0)
 ; Formerly a part of LRMIEDZ2
"RTN","LRMIEDZ4",5,0)
 ;
"RTN","LRMIEDZ4",6,0)
EC ;
"RTN","LRMIEDZ4",7,0)
 ;
"RTN","LRMIEDZ4",8,0)
 K LRTX
"RTN","LRMIEDZ4",9,0)
 ;
"RTN","LRMIEDZ4",10,0)
 S LRAN=$P($P(LRBG0,U,6)," ",3),LRLLOC=$P(LRBG0,U,8),LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,4),LRSN=$P(^(0),U,5)
"RTN","LRMIEDZ4",11,0)
 I $D(^LRO(69,+LRODT,1,+LRSN,0)) D
"RTN","LRMIEDZ4",12,0)
 . S DIC="^LRO(69,"_LRODT_",1,",DA=LRSN,DR=6
"RTN","LRMIEDZ4",13,0)
 . I DA>0 D EN^DIQ
"RTN","LRMIEDZ4",14,0)
 ;
"RTN","LRMIEDZ4",15,0)
 I $D(DTOUT)!($D(DUOUT)) S LREND=1 Q
"RTN","LRMIEDZ4",16,0)
 ;
"RTN","LRMIEDZ4",17,0)
 K LRNPTP
"RTN","LRMIEDZ4",18,0)
 ;
"RTN","LRMIEDZ4",19,0)
 S (LRI,N)=0
"RTN","LRMIEDZ4",20,0)
 F  S LRI=+$O(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI)) Q:LRI<.5  D
"RTN","LRMIEDZ4",21,0)
 . I $P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI,0),U,2)>49 Q
"RTN","LRMIEDZ4",22,0)
 . S N=N+1,LRTS(N)=+^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI,0)
"RTN","LRMIEDZ4",23,0)
 . S LRTX(N)=$S($P(^LAB(60,LRTS(N),0),U,14):^LAB(62.07,$P(^(0),U,14),.1),1:"")
"RTN","LRMIEDZ4",24,0)
 . I LRTS(N)=LRPTP S LRNPTP=N Q
"RTN","LRMIEDZ4",25,0)
 ;
"RTN","LRMIEDZ4",26,0)
 I '$D(LRNPTP),LRPTP>0 W !,"Nothing matches with the test you preselected." Q
"RTN","LRMIEDZ4",27,0)
 I $D(LRNPTP) S LRI=LRNPTP
"RTN","LRMIEDZ4",28,0)
 ;
"RTN","LRMIEDZ4",29,0)
 I '$D(LRNPTP),N>0 F J=1:1:N D
"RTN","LRMIEDZ4",30,0)
 . W !,?3,J,?8,$P(^LAB(60,LRTS(J),0),U)
"RTN","LRMIEDZ4",31,0)
 . S Y=$P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS(J),0),U,5)
"RTN","LRMIEDZ4",32,0)
 . I Y>0 W " Completed ",$$FMTE^XLFDT(Y,"1M")
"RTN","LRMIEDZ4",33,0)
 W !
"RTN","LRMIEDZ4",34,0)
 ;
"RTN","LRMIEDZ4",35,0)
 Q
"RTN","LRMINEW1")
0^115^B8153364
"RTN","LRMINEW1",1,0)
LRMINEW1 ;DALOI/STAFF - NEW DATA TO BE REVIEWED/VERIFIED ;May 14, 2008
"RTN","LRMINEW1",2,0)
 ;;5.2;LAB SERVICE;**295,350**;Sep 27, 1994;Build 230
"RTN","LRMINEW1",3,0)
 ;
"RTN","LRMINEW1",4,0)
 ;
"RTN","LRMINEW1",5,0)
VER ;
"RTN","LRMINEW1",6,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","LRMINEW1",7,0)
 ;
"RTN","LRMINEW1",8,0)
 W !!,"Indicate those you wish to exclude from verification."
"RTN","LRMINEW1",9,0)
 D CHECK
"RTN","LRMINEW1",10,0)
 ;
"RTN","LRMINEW1",11,0)
 I $O(LRAN(0))>0 D
"RTN","LRMINEW1",12,0)
 . W !,"Verifying all but the following:"
"RTN","LRMINEW1",13,0)
 . S LRAN=0
"RTN","LRMINEW1",14,0)
 . F  S LRAN=$O(LRAN(LRAN)) Q:LRAN=""  W !,LRAN
"RTN","LRMINEW1",15,0)
 ;
"RTN","LRMINEW1",16,0)
 S DIR(0)="YO"
"RTN","LRMINEW1",17,0)
 S DIR("A")="Want the approved reports to be printed at the requesting locations"
"RTN","LRMINEW1",18,0)
 S DIR("B")="NO"
"RTN","LRMINEW1",19,0)
 D ^DIR
"RTN","LRMINEW1",20,0)
 I $D(DIRUT) Q
"RTN","LRMINEW1",21,0)
 S LRMIQUE=+Y
"RTN","LRMINEW1",22,0)
 ;
"RTN","LRMINEW1",23,0)
 K DIR
"RTN","LRMINEW1",24,0)
 S DIR(0)="YO"
"RTN","LRMINEW1",25,0)
 S DIR("A")="Are you ready to verify",DIR("B")="NO"
"RTN","LRMINEW1",26,0)
 S DIR("?",1)="If you're not sure, it's not too late to quit."
"RTN","LRMINEW1",27,0)
 S DIR("?")="Enter either 'Y' or 'N'."
"RTN","LRMINEW1",28,0)
 D ^DIR
"RTN","LRMINEW1",29,0)
 I Y'=1 Q
"RTN","LRMINEW1",30,0)
 ;
"RTN","LRMINEW1",31,0)
 S LRAN=0 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  K ^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)
"RTN","LRMINEW1",32,0)
 S LRAN=0 F  S LRAN=+$O(^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)) Q:LRAN<1  I +^(LRAN)=LRDXZ!(LRDXZ=0) D STUFF
"RTN","LRMINEW1",33,0)
 W !,"ALL DONE"
"RTN","LRMINEW1",34,0)
 ;
"RTN","LRMINEW1",35,0)
 Q
"RTN","LRMINEW1",36,0)
 ;
"RTN","LRMINEW1",37,0)
 ;
"RTN","LRMINEW1",38,0)
STUFF ;
"RTN","LRMINEW1",39,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  Q:'$D(^(3))
"RTN","LRMINEW1",40,0)
 ;
"RTN","LRMINEW1",41,0)
 S Y=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRDFN=+Y,LRLLOC=$P(Y,U,7),LRODT=$S($P(Y,U,4):$P(Y,U,4),1:$P(Y,U,3)),LRSN=$P(Y,U,5)
"RTN","LRMINEW1",42,0)
 S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRMINEW1",43,0)
 I LRIDT="" S LRIDT=9999999-^LRO(68,LRAA,1,LRAD,1,LRAN,3)
"RTN","LRMINEW1",44,0)
 ;
"RTN","LRMINEW1",45,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRMINEW1",46,0)
 D PT^LRX
"RTN","LRMINEW1",47,0)
 ;
"RTN","LRMINEW1",48,0)
 S DT=$$DT^XLFDT
"RTN","LRMINEW1",49,0)
 S $P(^LR(LRDFN,"MI",LRIDT,LRSB),U)=DT,$P(^(LRSB),U,$S(LRSB=11:5,1:3))=DUZ
"RTN","LRMINEW1",50,0)
 ;
"RTN","LRMINEW1",51,0)
 I LRDPF=2 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMINEW1",52,0)
 I $G(LRSS)="" S LRSS="MI"
"RTN","LRMINEW1",53,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRMINEW1",54,0)
 I LRDPF=67 D SETTMP^LRVRMI5
"RTN","LRMINEW1",55,0)
 ;
"RTN","LRMINEW1",56,0)
 S LRCDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^")
"RTN","LRMINEW1",57,0)
 S Y=DT D VT^LRMIUT1
"RTN","LRMINEW1",58,0)
 K ^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)
"RTN","LRMINEW1",59,0)
 D:LRMIQUE TSKM^LRMIUT
"RTN","LRMINEW1",60,0)
 Q
"RTN","LRMINEW1",61,0)
 ;
"RTN","LRMINEW1",62,0)
 ;
"RTN","LRMINEW1",63,0)
CHECK ;from LRMINEW
"RTN","LRMINEW1",64,0)
 D LRAN^LRMIUT
"RTN","LRMINEW1",65,0)
 S LRAN=0
"RTN","LRMINEW1",66,0)
 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  S LROK=1 D CHECK1 I 'LROK K LRAN(LRAN)
"RTN","LRMINEW1",67,0)
 Q
"RTN","LRMINEW1",68,0)
 ;
"RTN","LRMINEW1",69,0)
 ;
"RTN","LRMINEW1",70,0)
CHECK1 ;
"RTN","LRMINEW1",71,0)
 I '$D(^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)) W !,LRAN," is not defined." S LROK=0 Q
"RTN","LRMINEW1",72,0)
 I LRDXZ'=0,+^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)'=LRDXZ W !,LRAN," is not your accession." S LROK=0
"RTN","LRMINEW1",73,0)
 Q
"RTN","LRMINEW2")
0^184^B3998581
"RTN","LRMINEW2",1,0)
LRMINEW2 ;DALOI/STAFF - NEW DATA TO BE REVIEWED/VERIFIED ;Nov 10, 2008
"RTN","LRMINEW2",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMINEW2",3,0)
 ;
"RTN","LRMINEW2",4,0)
Q2 ;
"RTN","LRMINEW2",5,0)
 ;
"RTN","LRMINEW2",6,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRMINEW2",7,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","LRMINEW2",8,0)
 S DIR("?")="Answer ""NO"" if  you want to look at it now!"
"RTN","LRMINEW2",9,0)
 S DIR("?",1)="Answer ""YES"" to queue printing"
"RTN","LRMINEW2",10,0)
 S DIR("A")="Do you want to queue the data to print and review/approve it later"
"RTN","LRMINEW2",11,0)
 D ^DIR
"RTN","LRMINEW2",12,0)
 I $D(DIRUT) Q
"RTN","LRMINEW2",13,0)
 I Y=1 S %ZIS="MQ",%ZIS("B")="",IOP="Q"
"RTN","LRMINEW2",14,0)
 W ! S ZTRTN="DQ^LRMINEW2" D IO^LRWU
"RTN","LRMINEW2",15,0)
 Q
"RTN","LRMINEW2",16,0)
 ;
"RTN","LRMINEW2",17,0)
 ;
"RTN","LRMINEW2",18,0)
DQ ;
"RTN","LRMINEW2",19,0)
 ;
"RTN","LRMINEW2",20,0)
 N LRAN,LRLOCA,LRPG
"RTN","LRMINEW2",21,0)
 U IO K ^TMP($J) S LREND=0,LRONETST="",LRONESPC=""
"RTN","LRMINEW2",22,0)
 S LRAN=0
"RTN","LRMINEW2",23,0)
 F  S LRAN=+$O(^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)) Q:LRAN<1!($G(LREND))  D:+^(LRAN)=LRDXZ!(LRDXZ=0) SORT
"RTN","LRMINEW2",24,0)
 S LRLOCA="",LRPG=1
"RTN","LRMINEW2",25,0)
 F  S LRLOCA=$O(^TMP($J,LRLOCA)) Q:LRLOCA=""!($G(LREND))  D
"RTN","LRMINEW2",26,0)
 . S LRLTR=$E(LRLOCA,1,4),LRPG=1
"RTN","LRMINEW2",27,0)
 . W @IOF I $E(IOST,1,2)'="C-" D ^LRLTR
"RTN","LRMINEW2",28,0)
 . S LRAN=0
"RTN","LRMINEW2",29,0)
 . F  S LRAN=+$O(^TMP($J,LRLOCA,LRAN)) Q:LRAN<1!($G(LREND))  D SENDUP Q:LREND
"RTN","LRMINEW2",30,0)
 ;
"RTN","LRMINEW2",31,0)
 K ^TMP($J),LRWRDVEW
"RTN","LRMINEW2",32,0)
 ;
"RTN","LRMINEW2",33,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMINEW2",34,0)
 Q
"RTN","LRMINEW2",35,0)
 ;
"RTN","LRMINEW2",36,0)
 ;
"RTN","LRMINEW2",37,0)
SORT ;
"RTN","LRMINEW2",38,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S LRLOCA=$P(^(0),U,7)
"RTN","LRMINEW2",39,0)
 I LRLOCA'="" S ^TMP($J,LRLOCA,LRAN)=""
"RTN","LRMINEW2",40,0)
 Q
"RTN","LRMINEW2",41,0)
 ;
"RTN","LRMINEW2",42,0)
 ;
"RTN","LRMINEW2",43,0)
SENDUP ;
"RTN","LRMINEW2",44,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))!($G(LREND))  S LRIDT=9999999-^(3),LRDFN=+^(0)
"RTN","LRMINEW2",45,0)
 S LRLLT=^LR(LRDFN,"MI",LRIDT,0),LRACC=$P(LRLLT,U,6),LRCMNT=$S($D(^(99)):^(99),1:"")
"RTN","LRMINEW2",46,0)
 D EN^LRMIPSZ1
"RTN","LRMINEW2",47,0)
 I $E(IOST,1,2)'="C-" W @IOF
"RTN","LRMINEW2",48,0)
 Q
"RTN","LRMIPSU")
0^66^B70736403
"RTN","LRMIPSU",1,0)
LRMIPSU ;DALOI/RBN - MICRO PATIENT REPORT ;05/09/12  17:03
"RTN","LRMIPSU",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIPSU",3,0)
 ;
"RTN","LRMIPSU",4,0)
 Q
"RTN","LRMIPSU",5,0)
 ;
"RTN","LRMIPSU",6,0)
 ;
"RTN","LRMIPSU",7,0)
HDR ;
"RTN","LRMIPSU",8,0)
 ; Handle different callers
"RTN","LRMIPSU",9,0)
 N X
"RTN","LRMIPSU",10,0)
 I $D(LRPGDATA) D  Q  ;
"RTN","LRMIPSU",11,0)
 . S X=$G(LRPGDATA("HDR"))
"RTN","LRMIPSU",12,0)
 . I X'="" X X
"RTN","LRMIPSU",13,0)
 D HDR1
"RTN","LRMIPSU",14,0)
 Q
"RTN","LRMIPSU",15,0)
 ;
"RTN","LRMIPSU",16,0)
 ;
"RTN","LRMIPSU",17,0)
FOOT ;
"RTN","LRMIPSU",18,0)
 ; Handle different callers
"RTN","LRMIPSU",19,0)
 N X
"RTN","LRMIPSU",20,0)
 I $D(LRPGDATA) D  Q  ;
"RTN","LRMIPSU",21,0)
 . S X=$G(LRPGDATA("FTR"))
"RTN","LRMIPSU",22,0)
 . I X'="" X X
"RTN","LRMIPSU",23,0)
 D FOOT1
"RTN","LRMIPSU",24,0)
 Q
"RTN","LRMIPSU",25,0)
 ;
"RTN","LRMIPSU",26,0)
 ;
"RTN","LRMIPSU",27,0)
FH ;
"RTN","LRMIPSU",28,0)
 ; from LRMIPSZ1, LRMIPSZ2, LRMIPSZ5. Also called from LROR4
"RTN","LRMIPSU",29,0)
 ; Handle different callers
"RTN","LRMIPSU",30,0)
 I $D(LRPGDATA) D  Q  ;
"RTN","LRMIPSU",31,0)
 . D NP
"RTN","LRMIPSU",32,0)
 . I LRABORT S LREND=1
"RTN","LRMIPSU",33,0)
 D:$Y>(IOSL-LRFLIP) FOOT,HDR
"RTN","LRMIPSU",34,0)
 Q
"RTN","LRMIPSU",35,0)
 ;
"RTN","LRMIPSU",36,0)
 ;
"RTN","LRMIPSU",37,0)
FHR ; from LRMIPSZ1, LRMIPSZ2
"RTN","LRMIPSU",38,0)
 D:$Y>(IOSL-LRFLIP) FOOT,HDR Q:LREND  D REFS
"RTN","LRMIPSU",39,0)
 Q
"RTN","LRMIPSU",40,0)
 ;
"RTN","LRMIPSU",41,0)
 ;
"RTN","LRMIPSU",42,0)
REFS ; from LRMIPSZ1
"RTN","LRMIPSU",43,0)
 S B=1,LREF=0
"RTN","LRMIPSU",44,0)
 F  S LREF=$O(LRBUG(LREF)) Q:LREF=""  S LRIFN=LRBUG(LREF) D LIST Q:LREND
"RTN","LRMIPSU",45,0)
 K LRBUG
"RTN","LRMIPSU",46,0)
 Q
"RTN","LRMIPSU",47,0)
 ;
"RTN","LRMIPSU",48,0)
 ;
"RTN","LRMIPSU",49,0)
LIST ;
"RTN","LRMIPSU",50,0)
 Q:'$D(^LAB(61.2,LRIFN,"JR",0))
"RTN","LRMIPSU",51,0)
 S LRNUM=0
"RTN","LRMIPSU",52,0)
 F  S LRNUM=$O(^LAB(61.2,LRIFN,"JR",LRNUM)) Q:LRNUM=""  D WR Q:LREND
"RTN","LRMIPSU",53,0)
 Q
"RTN","LRMIPSU",54,0)
 ;
"RTN","LRMIPSU",55,0)
WR ;
"RTN","LRMIPSU",56,0)
 ; Handle different callers
"RTN","LRMIPSU",57,0)
 I $D(LRPGDATA) D  Q  ;
"RTN","LRMIPSU",58,0)
 . D WR2
"RTN","LRMIPSU",59,0)
 D WR1
"RTN","LRMIPSU",60,0)
 Q
"RTN","LRMIPSU",61,0)
 ;
"RTN","LRMIPSU",62,0)
 ;
"RTN","LRMIPSU",63,0)
WR1 ;
"RTN","LRMIPSU",64,0)
 ;
"RTN","LRMIPSU",65,0)
 S X1=^LAB(61.2,LRIFN,"JR",LRNUM,0) Q:$P(X1,U,7)'=1
"RTN","LRMIPSU",66,0)
 D:$Y>(IOSL-LRFLIP-2) FOOT,HDR Q:LREND
"RTN","LRMIPSU",67,0)
 W:B=1 !!,"Reference(s): " S B=0
"RTN","LRMIPSU",68,0)
 W !!,$J(LREF,2),". ",$P(X1,U,2),!,$P(X1,U)
"RTN","LRMIPSU",69,0)
 W ! W:$L($P(X1,U,3)) $P(^LAB(95,$P(X1,U,3),0),U)," ",$P(X1,U,4),":"
"RTN","LRMIPSU",70,0)
 W $P(X1,U,5) W:$L($P(X1,U,6)) ",",$E($P(X1,U,6),1,3)+1700
"RTN","LRMIPSU",71,0)
 Q
"RTN","LRMIPSU",72,0)
 ;
"RTN","LRMIPSU",73,0)
 ;
"RTN","LRMIPSU",74,0)
WR2 ;
"RTN","LRMIPSU",75,0)
 ;
"RTN","LRMIPSU",76,0)
 S X1=^LAB(61.2,LRIFN,"JR",LRNUM,0) Q:$P(X1,U,7)'=1
"RTN","LRMIPSU",77,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",78,0)
 I B=1 W !!,"Reference(s): "
"RTN","LRMIPSU",79,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",80,0)
 S B=0
"RTN","LRMIPSU",81,0)
 W !!,$J(LREF,2),". ",$P(X1,U,2)
"RTN","LRMIPSU",82,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",83,0)
 W !,$P(X1,U)
"RTN","LRMIPSU",84,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",85,0)
 W !
"RTN","LRMIPSU",86,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",87,0)
 I $P(X1,U,3)'="" W $P(^LAB(95,$P(X1,U,3),0),U)," ",$P(X1,U,4),":"
"RTN","LRMIPSU",88,0)
 W $P(X1,U,5)
"RTN","LRMIPSU",89,0)
 W:$L($P(X1,U,6)) ",",$E($P(X1,U,6),1,3)+1700
"RTN","LRMIPSU",90,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",91,0)
 Q
"RTN","LRMIPSU",92,0)
 ;
"RTN","LRMIPSU",93,0)
 ;
"RTN","LRMIPSU",94,0)
FOOT1 ;
"RTN","LRMIPSU",95,0)
 ; Backward compatibility for pre NP^LRUTIL displays
"RTN","LRMIPSU",96,0)
 ; from LRMIPSZ1
"RTN","LRMIPSU",97,0)
 N LRX
"RTN","LRMIPSU",98,0)
 F  W ! Q:$Y>(IOSL-LRFLIP)
"RTN","LRMIPSU",99,0)
 Q:'LRHC
"RTN","LRMIPSU",100,0)
 W !,"Collection sample: ",LRCS,?40,"Collection date: ",LRTK
"RTN","LRMIPSU",101,0)
 W:LRCS'=LRST !,"Site/Specimen: ",LRST W !!
"RTN","LRMIPSU",102,0)
 W !!,PNM,?$X+3,SSN,?$X+3 W:$D(IA) IA W ?60,"  ROUTING: ",LRPATLOC,!
"RTN","LRMIPSU",103,0)
 S LRX=+$G(^LR(LRDFN,LRSS,LRIDT,"RF"))
"RTN","LRMIPSU",104,0)
 I LRX>0 W $$NAME^XUAF4(LRX)
"RTN","LRMIPSU",105,0)
 I LRX<1 W $$INS^LRU
"RTN","LRMIPSU",106,0)
 W " LABORATORY ",?62,LRACC,!,"MICROBIOLOGY",?62,"page ",LRPG,!
"RTN","LRMIPSU",107,0)
 Q
"RTN","LRMIPSU",108,0)
 ;
"RTN","LRMIPSU",109,0)
 ;
"RTN","LRMIPSU",110,0)
FOOT2 ;
"RTN","LRMIPSU",111,0)
 ; for use with NP^LRUTIL displays
"RTN","LRMIPSU",112,0)
 ; from LRMIPSZ1
"RTN","LRMIPSU",113,0)
 N LRX
"RTN","LRMIPSU",114,0)
 I '$D(LRSS) N LRSS S LRSS="MI"
"RTN","LRMIPSU",115,0)
 S LRX="=--"
"RTN","LRMIPSU",116,0)
 W !,$$REPEAT^XLFSTR(LRX,IOM/$L(LRX))
"RTN","LRMIPSU",117,0)
 W !,"Collection sample: ",LRCS,?40,"Collection date: ",LRTK
"RTN","LRMIPSU",118,0)
 W:LRCS'=LRST !,"Site/Specimen: ",LRST
"RTN","LRMIPSU",119,0)
 W !
"RTN","LRMIPSU",120,0)
 S LRX=$$PNMSSN(PNM,SSN)
"RTN","LRMIPSU",121,0)
 W !,LRX
"RTN","LRMIPSU",122,0)
 W:$G(IA)'="" IA
"RTN","LRMIPSU",123,0)
 W ?60,"  ROUTING: ",LRPATLOC
"RTN","LRMIPSU",124,0)
 W !
"RTN","LRMIPSU",125,0)
 S LRX=+$G(^LR(LRDFN,LRSS,LRIDT,"RF"))
"RTN","LRMIPSU",126,0)
 I LRX>0 W $$NAME^XUAF4(LRX)
"RTN","LRMIPSU",127,0)
 I LRX<1 W $$INS^LRU
"RTN","LRMIPSU",128,0)
 W " LABORATORY ",?62,LRACC
"RTN","LRMIPSU",129,0)
 W !,"MICROBIOLOGY",?62,"page ",LRPG
"RTN","LRMIPSU",130,0)
 W !
"RTN","LRMIPSU",131,0)
 Q
"RTN","LRMIPSU",132,0)
 ;
"RTN","LRMIPSU",133,0)
 ;
"RTN","LRMIPSU",134,0)
HDR1 ;
"RTN","LRMIPSU",135,0)
 ; Backward compatible for pre NP^LRUTIL displays
"RTN","LRMIPSU",136,0)
 ; from LRMIPSZ1
"RTN","LRMIPSU",137,0)
 N LRX,X
"RTN","LRMIPSU",138,0)
 S LRPG=LRPG+1 D:LRPG>1 WAIT Q:LREND
"RTN","LRMIPSU",139,0)
 ;
"RTN","LRMIPSU",140,0)
 W:($G(LRJ02))!($G(LRJ0))!($E(IOST,1,2)="C-") @IOF S LRJ02=1
"RTN","LRMIPSU",141,0)
 W !,PNM,?20," ",SSN,?35," AGE: ",AGE W:LRWRD'="" ?45," LOC: ",$E(LRWRD,1,(IOM-70))," "
"RTN","LRMIPSU",142,0)
 ;
"RTN","LRMIPSU",143,0)
 S X=$$HTE^XLFDT($H,"1M")
"RTN","LRMIPSU",144,0)
 W ?IOM-($L(X)+1),X
"RTN","LRMIPSU",145,0)
 ;
"RTN","LRMIPSU",146,0)
 I LRPG=1 W !?27,"----MICROBIOLOGY----",?70
"RTN","LRMIPSU",147,0)
 I '$D(LRH),LRHC W !?32,$S($D(^XUSEC("LRLAB",DUZ))&'$D(LRWRDVEW):"LAB",1:"CHART")," COPY"
"RTN","LRMIPSU",148,0)
 W !
"RTN","LRMIPSU",149,0)
 S LRSS="MI"
"RTN","LRMIPSU",150,0)
 ;
"RTN","LRMIPSU",151,0)
 ; Display printing facility
"RTN","LRMIPSU",152,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC^LRRP1(DUZ(2),$G(LRPG))
"RTN","LRMIPSU",153,0)
 ;
"RTN","LRMIPSU",154,0)
 ; Display reporting lab
"RTN","LRMIPSU",155,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LRMIPSU",156,0)
 . S LRX=+$G(^LR(LRDFN,LRSS,LRIDT,"RF"))
"RTN","LRMIPSU",157,0)
 . I LRX D RL^LRRP1(LRX) W !
"RTN","LRMIPSU",158,0)
 ;
"RTN","LRMIPSU",159,0)
 ; LR*5.2*216 Modification - RBN
"RTN","LRMIPSU",160,0)
 ;  Add banner to audit reports
"RTN","LRMIPSU",161,0)
 ;
"RTN","LRMIPSU",162,0)
 I $D(^LR(LRDFN,"MI",LRIDT,LRSB)),(LRPG=1) D:LRPG=1 BANNER^LRMIAU2()
"RTN","LRMIPSU",163,0)
 N LRBANIEN,LRBANFLG
"RTN","LRMIPSU",164,0)
 S LRBANFLG=0
"RTN","LRMIPSU",165,0)
 F LRBANIEN=1,5,8,11,16 I $D(^LR(LRDFN,"MI",LRIDT,LRBANIEN)) S LRBANFLG=1 Q
"RTN","LRMIPSU",166,0)
 I LRPG=1 D
"RTN","LRMIPSU",167,0)
 . D ORU^LRRP1
"RTN","LRMIPSU",168,0)
 . S LRX=^LR(LRDFN,"MI",LRIDT,0)
"RTN","LRMIPSU",169,0)
 . I $P(LRX,"^",3) W !,"Report Completed: ",$$FMTE^XLFDT($P(LRX,"^",3),"M")
"RTN","LRMIPSU",170,0)
 ;
"RTN","LRMIPSU",171,0)
 I LRPG>1 W !?20,">> CONTINUATION OF ",LRACC," <<"
"RTN","LRMIPSU",172,0)
 W !!,"Collection sample: ",LRCS,?40,"Collection date: ",LRTK
"RTN","LRMIPSU",173,0)
 ;
"RTN","LRMIPSU",174,0)
 I LRPG=1 D
"RTN","LRMIPSU",175,0)
 . I LRDOC?1"REF:"1.AN D
"RTN","LRMIPSU",176,0)
 . . N LRX
"RTN","LRMIPSU",177,0)
 . . S LRX=$$REFDOC^LRRP1(LRDFN,LRSS,LRIDT)
"RTN","LRMIPSU",178,0)
 . . I LRX'="" S LRDOC=LRX
"RTN","LRMIPSU",179,0)
 . W !,"Provider: ",LRDOC
"RTN","LRMIPSU",180,0)
 . W !
"RTN","LRMIPSU",181,0)
 . I LRCMNT'="" W "Comment on specimen: ",LRCMNT,!
"RTN","LRMIPSU",182,0)
 Q
"RTN","LRMIPSU",183,0)
 ;
"RTN","LRMIPSU",184,0)
 ;
"RTN","LRMIPSU",185,0)
HDR2(LRPRNTED,LRABORT,LRPGDATA) ;
"RTN","LRMIPSU",186,0)
 ;
"RTN","LRMIPSU",187,0)
 ; Called from NP^LRUTIL via the LRPGDATA array setup in RPT^LRMIPSZ1
"RTN","LRMIPSU",188,0)
 ; Inputs
"RTN","LRMIPSU",189,0)
 ;  LRPRNTED: <byref> Tracks when certain sections are printed
"RTN","LRMIPSU",190,0)
 ;   LRABORT: <byref> Tracks if user entered "^" to stop
"RTN","LRMIPSU",191,0)
 ;  LRPGDATA: <byref> Used by NP^LRUTIL
"RTN","LRMIPSU",192,0)
 ; Outputs
"RTN","LRMIPSU",193,0)
 ;  LRPRNTED: "PFAC" -- Printing Facility address
"RTN","LRMIPSU",194,0)
 ;          :   "RF" -- Reporting Facility address
"RTN","LRMIPSU",195,0)
 ;          :  "ORU" -- Remote ordering info
"RTN","LRMIPSU",196,0)
 ;   LRABORT: 1 if user aborts, 0 if not (set by NP^LRUTIL)
"RTN","LRMIPSU",197,0)
 ;
"RTN","LRMIPSU",198,0)
 N I,ISCONS,LRX,LRY,X,WPGNM
"RTN","LRMIPSU",199,0)
 S LRABORT=$G(LRABORT)
"RTN","LRMIPSU",200,0)
 S LRPG=$G(LRPGDATA("PGNUM"))
"RTN","LRMIPSU",201,0)
 S:LRPG<1 LRPG=1
"RTN","LRMIPSU",202,0)
 S WPGNM=0 ; Page Number written?
"RTN","LRMIPSU",203,0)
 S ISCONS=0
"RTN","LRMIPSU",204,0)
 I '$D(LRSS) N LRSS S LRSS="MI"
"RTN","LRMIPSU",205,0)
 I $E($G(IOST),1,2)="C-" S ISCONS=1 ;is console device
"RTN","LRMIPSU",206,0)
 ;
"RTN","LRMIPSU",207,0)
 I LRPG=1,ISCONS,$G(IOF)'="" W @IOF
"RTN","LRMIPSU",208,0)
 S LRX=$$PNMSSN(PNM,SSN)
"RTN","LRMIPSU",209,0)
 W !,LRX,?39," AGE: ",AGE
"RTN","LRMIPSU",210,0)
 I LRWRD'="",LRWRD'=0 W ?47," LOC: ",$E(LRWRD,1,(IOM-70))," "
"RTN","LRMIPSU",211,0)
 ;
"RTN","LRMIPSU",212,0)
 S X=$$HTE^XLFDT($H,"1M")
"RTN","LRMIPSU",213,0)
 W ?IOM-($L(X)+1),X
"RTN","LRMIPSU",214,0)
 ;
"RTN","LRMIPSU",215,0)
 I LRPG=1 D
"RTN","LRMIPSU",216,0)
 . W !?27,"----MICROBIOLOGY----"
"RTN","LRMIPSU",217,0)
 . I 'WPGNM W ?IOM-5-4,"page ",LRPG S WPGNM=1
"RTN","LRMIPSU",218,0)
 ;
"RTN","LRMIPSU",219,0)
 I '$D(LRH),'ISCONS W !?32,$S($D(^XUSEC("LRLAB",DUZ))&'$D(LRWRDVEW):"LAB",1:"CHART")," COPY"
"RTN","LRMIPSU",220,0)
 ;
"RTN","LRMIPSU",221,0)
 ; Display printing facility
"RTN","LRMIPSU",222,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1,'$D(LRPRNTED("PFAC")) D
"RTN","LRMIPSU",223,0)
 . S LRPRNTED("PFAC")=1
"RTN","LRMIPSU",224,0)
 . K LRX
"RTN","LRMIPSU",225,0)
 . D PFAC^LRRP1(DUZ(2),,1,.LRX)
"RTN","LRMIPSU",226,0)
 . Q:'$D(LRX)
"RTN","LRMIPSU",227,0)
 . S I=0
"RTN","LRMIPSU",228,0)
 . F  S I=$O(LRX(I)) Q:'I  W !,LRX(I)
"RTN","LRMIPSU",229,0)
 ;
"RTN","LRMIPSU",230,0)
 ; Display reporting lab
"RTN","LRMIPSU",231,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2,'$D(LRPRNTED("RF")) D
"RTN","LRMIPSU",232,0)
 . S LRPRNTED("RF")=1
"RTN","LRMIPSU",233,0)
 . S LRX=+$G(^LR(LRDFN,"MI",LRIDT,"RF"))
"RTN","LRMIPSU",234,0)
 . W !
"RTN","LRMIPSU",235,0)
 . Q:'LRX
"RTN","LRMIPSU",236,0)
 . K LRY
"RTN","LRMIPSU",237,0)
 . D RL^LRRP1(LRX,1,.LRY)
"RTN","LRMIPSU",238,0)
 . Q:'$D(LRY)
"RTN","LRMIPSU",239,0)
 . S I=0
"RTN","LRMIPSU",240,0)
 . F  S I=$O(LRY(I)) Q:'I  W !,LRY(I)
"RTN","LRMIPSU",241,0)
 . W !
"RTN","LRMIPSU",242,0)
 ;
"RTN","LRMIPSU",243,0)
 I '$D(LRPRNTED("ORU")) D
"RTN","LRMIPSU",244,0)
 . S LRPRNTED("ORU")=1
"RTN","LRMIPSU",245,0)
 . D ORU^LRRP1
"RTN","LRMIPSU",246,0)
 . S LRX=^LR(LRDFN,"MI",LRIDT,0)
"RTN","LRMIPSU",247,0)
 . I $P(LRX,"^",3) W !,"Report Completed: ",$$FMTE^XLFDT($P(LRX,"^",3),"M")
"RTN","LRMIPSU",248,0)
 ;
"RTN","LRMIPSU",249,0)
 I LRPG>1 D
"RTN","LRMIPSU",250,0)
 . W !?20,">> CONTINUATION OF ",LRACC," <<"
"RTN","LRMIPSU",251,0)
 . I 'WPGNM W ?IOM-5-4,"page ",LRPG S WPGNM=1
"RTN","LRMIPSU",252,0)
 ;
"RTN","LRMIPSU",253,0)
 W !,"Collection sample: ",LRCS,?40,"Collection date: ",LRTK
"RTN","LRMIPSU",254,0)
 ;
"RTN","LRMIPSU",255,0)
 I '$D(LRPRNTED("REF")) D
"RTN","LRMIPSU",256,0)
 . N LRX,LRDOCZ
"RTN","LRMIPSU",257,0)
 . S LRPRNTED("REF")=1
"RTN","LRMIPSU",258,0)
 . I LRDOC?1"REF:"1.AN D
"RTN","LRMIPSU",259,0)
 . . S LRX=$$REFDOC^LRRP1(LRDFN,LRSS,LRIDT)
"RTN","LRMIPSU",260,0)
 . . I LRX'="" S LRDOCZ=LRX
"RTN","LRMIPSU",261,0)
 . W !,"Provider: ",$S($D(LRDOCZ):LRDOCZ,1:LRDOC)
"RTN","LRMIPSU",262,0)
 . I LRCMNT'="" W !,"Comment on specimen: ",LRCMNT
"RTN","LRMIPSU",263,0)
 ;
"RTN","LRMIPSU",264,0)
 S LRX="=--"
"RTN","LRMIPSU",265,0)
 W !,$$REPEAT^XLFSTR(LRX,IOM/$L(LRX)),!
"RTN","LRMIPSU",266,0)
 ;
"RTN","LRMIPSU",267,0)
 Q
"RTN","LRMIPSU",268,0)
 ;
"RTN","LRMIPSU",269,0)
 ;
"RTN","LRMIPSU",270,0)
WAIT ;
"RTN","LRMIPSU",271,0)
 ; from LRMIPSZ1, LRMIPSZ2
"RTN","LRMIPSU",272,0)
 F I=$Y:1:IOSL-3 W !
"RTN","LRMIPSU",273,0)
 I 'LRHC W !,PNM,?25,"  ",SSN,"   ROUTING: ",LRPATLOC,?59," PRESS '^' TO STOP " R X:DTIME S:X="" X=1 S:(".^"[X)!('$T) LREND=1
"RTN","LRMIPSU",274,0)
 Q
"RTN","LRMIPSU",275,0)
 ;
"RTN","LRMIPSU",276,0)
 ;
"RTN","LRMIPSU",277,0)
PRE ;
"RTN","LRMIPSU",278,0)
 ; from LRMIPSZ2, LRMIPSZ3, LRMIPSZ4
"RTN","LRMIPSU",279,0)
 ; also indirectly from RPT^LROR4
"RTN","LRMIPSU",280,0)
 N J
"RTN","LRMIPSU",281,0)
 I LRTUS'["F"!($D(^XUSEC("LRLAB",DUZ))&'$D(LRWRDVEW)) D  ;
"RTN","LRMIPSU",282,0)
 . W:+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRPRE,0)) !,"Preliminary Comments: "
"RTN","LRMIPSU",283,0)
 . D NP Q:LRABORT
"RTN","LRMIPSU",284,0)
 . S J=0
"RTN","LRMIPSU",285,0)
 . F  S J=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRPRE,J)) Q:J<1  W !?3,^(J,0) D NP Q:LRABORT
"RTN","LRMIPSU",286,0)
 ;
"RTN","LRMIPSU",287,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",288,0)
 W !
"RTN","LRMIPSU",289,0)
 D NP Q:LRABORT
"RTN","LRMIPSU",290,0)
 Q
"RTN","LRMIPSU",291,0)
 ;
"RTN","LRMIPSU",292,0)
 ;
"RTN","LRMIPSU",293,0)
PROMPT() ;
"RTN","LRMIPSU",294,0)
 ; Creates the "more" prompt for display
"RTN","LRMIPSU",295,0)
 ; Expects PNM,SSN,LRPATLOC
"RTN","LRMIPSU",296,0)
 ; Outputs
"RTN","LRMIPSU",297,0)
 ;   The prompt for display
"RTN","LRMIPSU",298,0)
 N X,PNMX,PLOCX,STR
"RTN","LRMIPSU",299,0)
 S STR=$$PNMSSN(PNM,SSN)
"RTN","LRMIPSU",300,0)
 S PLOCX=$G(LRPATLOC)
"RTN","LRMIPSU",301,0)
 S:$L(PLOCX)>14 PLOCX=$E(PLOCX,1,11)_"..."
"RTN","LRMIPSU",302,0)
 I PLOCX'="" S STR=STR_"   ROUTING: "_PLOCX
"RTN","LRMIPSU",303,0)
 S X="'^' TO STOP"
"RTN","LRMIPSU",304,0)
 S $E(STR,IOM-$L(X),IOM)=X
"RTN","LRMIPSU",305,0)
 Q STR
"RTN","LRMIPSU",306,0)
 ;
"RTN","LRMIPSU",307,0)
 ;
"RTN","LRMIPSU",308,0)
PNMSSN(PNM,SSN) ;
"RTN","LRMIPSU",309,0)
 ; Creates the Patient Name/SSN banner
"RTN","LRMIPSU",310,0)
 ; Inputs
"RTN","LRMIPSU",311,0)
 ;   PNM : Patient's Name
"RTN","LRMIPSU",312,0)
 ;   SSN : SSN
"RTN","LRMIPSU",313,0)
 ; Outputs
"RTN","LRMIPSU",314,0)
 ;   The formatted string for the patient name and SSN
"RTN","LRMIPSU",315,0)
 N X,PNMX,STR
"RTN","LRMIPSU",316,0)
 S PNM=$G(PNM)
"RTN","LRMIPSU",317,0)
 S SSN=$G(SSN)
"RTN","LRMIPSU",318,0)
 S PNMX=PNM
"RTN","LRMIPSU",319,0)
 S:$L(PNMX)>25 PNMX=$E(PNMX,1,22)_"..."
"RTN","LRMIPSU",320,0)
 S STR=PNMX
"RTN","LRMIPSU",321,0)
 S $E(STR,27,27)=" "
"RTN","LRMIPSU",322,0)
 S STR=STR_SSN
"RTN","LRMIPSU",323,0)
 Q STR
"RTN","LRMIPSU",324,0)
 ;
"RTN","LRMIPSU",325,0)
 ;
"RTN","LRMIPSU",326,0)
NP ;
"RTN","LRMIPSU",327,0)
 ; Convenience method
"RTN","LRMIPSU",328,0)
 D NP^LRMIPSZ1
"RTN","LRMIPSU",329,0)
 Q
"RTN","LRMIPSZ")
0^6^B11196257
"RTN","LRMIPSZ",1,0)
LRMIPSZ ;DALIO/STAFF - MICRO PRINT/SINGLE SPECIMEN REPORT ;08/26/10  14:16
"RTN","LRMIPSZ",2,0)
 ;;5.2;LAB SERVICE;**104,350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ",3,0)
 ;
"RTN","LRMIPSZ",4,0)
 ;from option LRMIPSZ
"RTN","LRMIPSZ",5,0)
BEGIN ;
"RTN","LRMIPSZ",6,0)
 N LRACC
"RTN","LRMIPSZ",7,0)
 S LRACC=""
"RTN","LRMIPSZ",8,0)
 D EN^LRPARAM
"RTN","LRMIPSZ",9,0)
 W !!?23,"MICROBIOLOGY SINGLE SPECIMEN REPORT"
"RTN","LRMIPSZ",10,0)
 S LREND=0,LRNL=1,LRPG=0
"RTN","LRMIPSZ",11,0)
 D CHOOSE
"RTN","LRMIPSZ",12,0)
 ;
"RTN","LRMIPSZ",13,0)
END ;
"RTN","LRMIPSZ",14,0)
 K ^TMP("LR",$J)
"RTN","LRMIPSZ",15,0)
 K %,AGE,DFN,DIC,DOB,I,J,K,PNM,SSN,X,Y
"RTN","LRMIPSZ",16,0)
 K LRAA,LRACC,LRAD,LRAN,LRANOK,LRCMNT,LRCNT,LRDFN,LRDPF,LREND,LREP,LRIDT,LRLIDT,LRLLT,LRNL,LRONESPC,LRONETST,LRPG,LRPRAC,LRRB,LRSB,LRSMP,LRSTOP,LRUID
"RTN","LRMIPSZ",17,0)
 Q
"RTN","LRMIPSZ",18,0)
 ;
"RTN","LRMIPSZ",19,0)
 ;
"RTN","LRMIPSZ",20,0)
CHOOSE ; Choose the method of selecting the report to print.
"RTN","LRMIPSZ",21,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRMIPSZ",22,0)
 S DIR(0)="SO^1:Accession Number or UID;2:Name/SSN"
"RTN","LRMIPSZ",23,0)
 S DIR("A")="Look-up by"
"RTN","LRMIPSZ",24,0)
 S DIR("B")=1
"RTN","LRMIPSZ",25,0)
 D ^DIR
"RTN","LRMIPSZ",26,0)
 I $D(DIRUT) Q
"RTN","LRMIPSZ",27,0)
 S LREP=+Y
"RTN","LRMIPSZ",28,0)
 F  K LRAN,DIC D @$S(LREP=1:"ACC",1:"PAT") Q:LREND  I LRANOK S ZTRTN="DQ^LRMIPSZ",%ZIS="MQ" D IO^LRWU Q:LREND
"RTN","LRMIPSZ",29,0)
 Q
"RTN","LRMIPSZ",30,0)
 ;
"RTN","LRMIPSZ",31,0)
 ;
"RTN","LRMIPSZ",32,0)
DQ ;dequeued
"RTN","LRMIPSZ",33,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","LRMIPSZ",34,0)
 S LRONETST="",LRONESPC="" D EN^LRMIPSZ1 K LRONETST,LRONESPC
"RTN","LRMIPSZ",35,0)
 Q
"RTN","LRMIPSZ",36,0)
 ;
"RTN","LRMIPSZ",37,0)
 ;
"RTN","LRMIPSZ",38,0)
ACC ; Lookup by accession number/UID
"RTN","LRMIPSZ",39,0)
 ;
"RTN","LRMIPSZ",40,0)
 D ENA^LRWU4("MI")
"RTN","LRMIPSZ",41,0)
 I LRAN<1 S LREND=1 Q
"RTN","LRMIPSZ",42,0)
 S LRANOK=1,LRPG=0 D ACC1
"RTN","LRMIPSZ",43,0)
 Q
"RTN","LRMIPSZ",44,0)
 ;
"RTN","LRMIPSZ",45,0)
 ;
"RTN","LRMIPSZ",46,0)
ACC1 ;
"RTN","LRMIPSZ",47,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRIDT=$P(^(3),U,5)
"RTN","LRMIPSZ",48,0)
 S LRLLT=^LR(LRDFN,"MI",LRIDT,0),LRACC=$P(LRLLT,U,6),LRCMNT=$G(^LR(LRDFN,"MI",LRIDT,99))
"RTN","LRMIPSZ",49,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRMIPSZ",50,0)
 D PT^LRX
"RTN","LRMIPSZ",51,0)
 W !?20,PNM,?40,SSN
"RTN","LRMIPSZ",52,0)
 F  W !,?20,"OK" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMIPSZ",53,0)
 S:%=-1 LREND=1 S:%=2 LRANOK=0
"RTN","LRMIPSZ",54,0)
 Q
"RTN","LRMIPSZ",55,0)
 ;
"RTN","LRMIPSZ",56,0)
 ;
"RTN","LRMIPSZ",57,0)
 ;
"RTN","LRMIPSZ",58,0)
PAT ;
"RTN","LRMIPSZ",59,0)
 S LRANOK=1
"RTN","LRMIPSZ",60,0)
 D ^LRDPA
"RTN","LRMIPSZ",61,0)
 I LRDFN=-1 S LREND=1,LRANOK=0 Q
"RTN","LRMIPSZ",62,0)
 D PAST
"RTN","LRMIPSZ",63,0)
 I '$D(LRLLT) S LREND=1,LRANOK=0 Q
"RTN","LRMIPSZ",64,0)
 S LRAN=^LR(LRDFN,"MI",LRIDT,0),LRACC=$P(LRAN,U,6),LRAD=$E(LRAN)_$P(LRACC," ",2)_"0000",LRAN=+$P(LRACC," ",3)
"RTN","LRMIPSZ",65,0)
 S X=$P(LRACC," "),DIC=68,DIC(0)="M"
"RTN","LRMIPSZ",66,0)
 D ^DIC
"RTN","LRMIPSZ",67,0)
 I Y<1 S LREND=1,LRANOK=0 Q
"RTN","LRMIPSZ",68,0)
 S LRAA=+Y
"RTN","LRMIPSZ",69,0)
 Q
"RTN","LRMIPSZ",70,0)
 ;
"RTN","LRMIPSZ",71,0)
 ;
"RTN","LRMIPSZ",72,0)
PAST ;
"RTN","LRMIPSZ",73,0)
 W ! K LRAN
"RTN","LRMIPSZ",74,0)
 S (LRSTOP,LRIDT)=0 F LRCNT=1:1 S LRIDT=+$O(^LR(LRDFN,"MI",LRIDT)) Q:LRIDT<1  D:'(LRCNT#5) WAIT Q:LRSTOP  D PAST1
"RTN","LRMIPSZ",75,0)
 I LRCNT=1 W !,"Nothing accessioned" K LRLLT Q
"RTN","LRMIPSZ",76,0)
 S:LRCNT=2 LRIDT=LRLIDT I LRCNT'=2 D SELECT Q:X=""!(X[U)
"RTN","LRMIPSZ",77,0)
 S LRLLT=^LR(LRDFN,"MI",LRIDT,0),LRCMNT=$S($D(^(99)):^(99),1:"")
"RTN","LRMIPSZ",78,0)
 Q
"RTN","LRMIPSZ",79,0)
 ;
"RTN","LRMIPSZ",80,0)
 ;
"RTN","LRMIPSZ",81,0)
WAIT ;
"RTN","LRMIPSZ",82,0)
 R !,"PRESS '^' TO STOP ",X:DTIME S:X="" X=1 S LRSTOP=".^"[X
"RTN","LRMIPSZ",83,0)
 Q
"RTN","LRMIPSZ",84,0)
 ;
"RTN","LRMIPSZ",85,0)
 ;
"RTN","LRMIPSZ",86,0)
PAST1 ;
"RTN","LRMIPSZ",87,0)
 S LRAN=$P(^LR(LRDFN,"MI",LRIDT,0),U,6),LRAN(LRCNT)=LRIDT,LRLIDT=LRIDT
"RTN","LRMIPSZ",88,0)
 W !?13,LRCNT S Y=$P(^(0),U),LRSMP=$P(^(0),U,5)
"RTN","LRMIPSZ",89,0)
 D D^LRU W ?20,Y,"  "
"RTN","LRMIPSZ",90,0)
 W:LRSMP ?41,$P(^LAB(61,LRSMP,0),U),?60,"Acc ",LRAN
"RTN","LRMIPSZ",91,0)
 Q
"RTN","LRMIPSZ",92,0)
 ;
"RTN","LRMIPSZ",93,0)
 ;
"RTN","LRMIPSZ",94,0)
SELECT ;
"RTN","LRMIPSZ",95,0)
 K LRLLT S LRSTOP=0
"RTN","LRMIPSZ",96,0)
 F  R !!,"Select #: ",X:DTIME Q:X=""!(X[U)  Q:$D(LRAN(X))  W !,"Doesn't exist."
"RTN","LRMIPSZ",97,0)
 I X'="",X'[U S LRIDT=LRAN(X)
"RTN","LRMIPSZ",98,0)
 Q
"RTN","LRMIPSZ1")
0^7^B49126027
"RTN","LRMIPSZ1",1,0)
LRMIPSZ1 ;DALOI/STAFF - MICRO PATIENT REPORT ;09/02/10  22:20
"RTN","LRMIPSZ1",2,0)
 ;;5.2;LAB SERVICE;**283,350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ1",3,0)
 ;
"RTN","LRMIPSZ1",4,0)
 ;
"RTN","LRMIPSZ1",5,0)
DQ ;tasked from LRTASK from IMMEDIATE INTERIM REPORTING thru LRTP
"RTN","LRMIPSZ1",6,0)
 ;
"RTN","LRMIPSZ1",7,0)
 S LRPATLOC=$G(LRLLOC),LRIDT=$G(LRIDT,0),LRSS="MI",LRONETST="",LRONESPC="",LREND=0
"RTN","LRMIPSZ1",8,0)
 D EN^LRPARAM
"RTN","LRMIPSZ1",9,0)
 S LRLLT=^LR(LRDFN,"MI",LRIDT,0),LRACC=$P(LRLLT,U,6),LRAD=$E(LRLLT)_$P(LRACC," ",2)_"0000"
"RTN","LRMIPSZ1",10,0)
 S X=$P(LRACC," "),DIC=68,DIC(0)="M"
"RTN","LRMIPSZ1",11,0)
 I X'="" D ^DIC S LRAA=+Y,LRAN=+$P(LRACC," ",3)
"RTN","LRMIPSZ1",12,0)
 ;
"RTN","LRMIPSZ1",13,0)
 ; ^TMP("LRMI",$J,LRDFN,"MI",LRIDT) will already exist if this is a LEDI result being processed (rtn LRVRMI1)
"RTN","LRMIPSZ1",14,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D
"RTN","LRMIPSZ1",15,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ1",16,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ1",17,0)
 ;
"RTN","LRMIPSZ1",18,0)
 S LRCMNT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,99))
"RTN","LRMIPSZ1",19,0)
 S LRPG=0
"RTN","LRMIPSZ1",20,0)
 D EN
"RTN","LRMIPSZ1",21,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMIPSZ1",22,0)
 Q
"RTN","LRMIPSZ1",23,0)
 ;
"RTN","LRMIPSZ1",24,0)
 ;
"RTN","LRMIPSZ1",25,0)
EN ;
"RTN","LRMIPSZ1",26,0)
 ; from LRMINEW2, LRMIPC, LRMIPLOG, LRMIPSZ, LRMIVER1
"RTN","LRMIPSZ1",27,0)
 ; ^TMP("LRMI",$J,LRDFN,"MI",LRIDT) will already exist if this is a LEDI result being processed (rtn LRVRMI1)
"RTN","LRMIPSZ1",28,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D  ;
"RTN","LRMIPSZ1",29,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ1",30,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ1",31,0)
 ;
"RTN","LRMIPSZ1",32,0)
 S LRUID=$P($G(^LR(LRDFN,"MI",LRIDT,"ORU")),U)
"RTN","LRMIPSZ1",33,0)
 I '$D(LRONESPC) S LRONESPC="",DIC="^LAB(61,",DIC("A")="Select SPECIMEN/SOURCE: ANY//",DIC(0)="AEMOQ" D ^DIC S:Y>0 LRONESPC=+Y K DIC("A")
"RTN","LRMIPSZ1",34,0)
 I '$D(LRONETST) S LRONETST="",DIC="^LAB(60,",DIC(0)="AEOQ",DIC("S")="I $P(^(0),U,4)=""MI"")"_$S('$D(LRLABKY):",""BO""[$P(^(0),U,3)",1:""),D="E" D IX^DIC Q:Y<1  I Y>0 S LRONETST=+Y
"RTN","LRMIPSZ1",35,0)
 S LRSPEC=$P(LRLLT,U,5) I LRONESPC'="",LRSPEC'=LRONESPC Q
"RTN","LRMIPSZ1",36,0)
 D RPT
"RTN","LRMIPSZ1",37,0)
 I '$G(EAMODE) K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ1",38,0)
 K %,A8,A,AB,B,B1,B2,B3,C,IA,LR1PASS,LR2ORMOR,LRABCNT,LRACNT,LRADM,LRADX,LRAFS,LRAMT,LRAX,LRBN,LRBRR,LRBUG,LRCOMTAB,LRCS,LRDCOM,LRDOC,LRDRTM1,LRDRTM2,LREF,LRFLIP,LRFMT,LRGRM,LRHC,LRIFN,LRINT,LRPATLOC,LRMYC,LRNS,LRNUM
"RTN","LRMIPSZ1",39,0)
 K LRORG,LRPAR,LRPC,LRPRE,LRPRINT,LRQU,LRRC,LRRES,LRSBC1,LRSBC2,LRSET,LRSIC1,LRSIC2,LRSPEC,LRSSD,LRST,LRTA,LRTB,LRTBA,LRTBC,LRTBS,LRTK,LRTS,LRTSTS,LRTUS,LRUS,LRWRD,N
"RTN","LRMIPSZ1",40,0)
 Q
"RTN","LRMIPSZ1",41,0)
 ;
"RTN","LRMIPSZ1",42,0)
 ;
"RTN","LRMIPSZ1",43,0)
RPT ;
"RTN","LRMIPSZ1",44,0)
 ;
"RTN","LRMIPSZ1",45,0)
 N LRABORT,LRPGDATA,LRPRNTED
"RTN","LRMIPSZ1",46,0)
 ;
"RTN","LRMIPSZ1",47,0)
 ; If called by another process, i.e. interim reports, then don't reset current page number
"RTN","LRMIPSZ1",48,0)
 S LRPG=$G(LRPG,0)
"RTN","LRMIPSZ1",49,0)
 ;
"RTN","LRMIPSZ1",50,0)
 S LRPGDATA("HDR")="D HDR2^LRMIPSU(.LRPRNTED,.LRABORT,.LRPGDATA)"
"RTN","LRMIPSZ1",51,0)
 S LRPGDATA("BM")=8
"RTN","LRMIPSZ1",52,0)
 S LRPGDATA("FTR")="D FOOT2^LRMIPSU"
"RTN","LRMIPSZ1",53,0)
 ; Dont print the footer when console device
"RTN","LRMIPSZ1",54,0)
 I $E($G(IOST),1,2)="C-" D  ;
"RTN","LRMIPSZ1",55,0)
 . S LRPGDATA("BM")=0
"RTN","LRMIPSZ1",56,0)
 . S LRPGDATA("FTR")=""
"RTN","LRMIPSZ1",57,0)
 S LRPGDATA("PROMPTX")="S X=$$PROMPT^LRMIPSU()"
"RTN","LRMIPSZ1",58,0)
 S LRPGDATA("ERASE")=1
"RTN","LRMIPSZ1",59,0)
 S LRPGDATA("PGNUM")=0
"RTN","LRMIPSZ1",60,0)
 S LRABORT=0
"RTN","LRMIPSZ1",61,0)
 ;
"RTN","LRMIPSZ1",62,0)
 S:'$D(LRSB) LRSB=0
"RTN","LRMIPSZ1",63,0)
 S LRPRINT=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,4)):"",1:1),LRHC=$S($E(IOST,1,2)'="C-":1,1:0),LRFLIP=$S(LRHC:11,1:6)
"RTN","LRMIPSZ1",64,0)
 ;
"RTN","LRMIPSZ1",65,0)
 K DIC
"RTN","LRMIPSZ1",66,0)
 D DT^LRX
"RTN","LRMIPSZ1",67,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRMIPSZ1",68,0)
 D PT^LRX
"RTN","LRMIPSZ1",69,0)
 S:$G(VAIN(3)) DOB=$P(VADM(3),U) S LRPATLOC=$P(LRLLT,U,8)
"RTN","LRMIPSZ1",70,0)
 S (LRADM,LRADX)=""
"RTN","LRMIPSZ1",71,0)
 I +$G(LRDPF)=2,'$G(VAERR) S LRADM=$P(VAIN(7),U,2),LRADX=VAIN(9)
"RTN","LRMIPSZ1",72,0)
 S LRCS=$S($D(^LAB(62,+$P(LRLLT,U,11),0)):$P(^(0),U),1:"")
"RTN","LRMIPSZ1",73,0)
 S LRTK=$P(LRLLT,U),LRRC=$P(LRLLT,U,10),LRST=$S(LRSPEC:$P(^LAB(61,LRSPEC,0),U),1:"")
"RTN","LRMIPSZ1",74,0)
 S Y=LRTK D D^LRU S LRTK=Y
"RTN","LRMIPSZ1",75,0)
 S Y=LRRC D D^LRU S LRRC=Y
"RTN","LRMIPSZ1",76,0)
 S X=$P(LRLLT,U,7) D DOC^LRX
"RTN","LRMIPSZ1",77,0)
 ;
"RTN","LRMIPSZ1",78,0)
 K ^TMP("LR",$J,"T"),LRTSTS
"RTN","LRMIPSZ1",79,0)
 ;
"RTN","LRMIPSZ1",80,0)
 S (LRBRR,LRTESTCOMPLE)=0
"RTN","LRMIPSZ1",81,0)
 F  S LRBRR=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRBRR)) Q:LRBRR<1  D EN1
"RTN","LRMIPSZ1",82,0)
 I 'LRPRINT,LRONETST Q
"RTN","LRMIPSZ1",83,0)
 ;
"RTN","LRMIPSZ1",84,0)
 ;
"RTN","LRMIPSZ1",85,0)
 D HDR2^LRMIPSU(.LRPRNTED,.LRABORT,.LRPGDATA)
"RTN","LRMIPSZ1",86,0)
 S LREND=LRABORT
"RTN","LRMIPSZ1",87,0)
 Q:LRABORT
"RTN","LRMIPSZ1",88,0)
 ; display audit log
"RTN","LRMIPSZ1",89,0)
 D BANNER^LRMIAU2(.LRABORT,.LRPGDATA)
"RTN","LRMIPSZ1",90,0)
 S LREND=LRABORT
"RTN","LRMIPSZ1",91,0)
 Q:LRABORT
"RTN","LRMIPSZ1",92,0)
 ;
"RTN","LRMIPSZ1",93,0)
 I $D(^TMP("LR",$J,"T")) D  Q:LRABORT
"RTN","LRMIPSZ1",94,0)
 . N J,LRX,LRY,X,Y
"RTN","LRMIPSZ1",95,0)
 . W !?2,"Test(s) ordered:"
"RTN","LRMIPSZ1",96,0)
 . S J=0
"RTN","LRMIPSZ1",97,0)
 . F  S J=$O(^TMP("LR",$J,"T",J)) Q:J=""  D  Q:LRABORT
"RTN","LRMIPSZ1",98,0)
 . . S X=^TMP("LR",$J,"T",J)
"RTN","LRMIPSZ1",99,0)
 . . S LRX=$P(X,"^")
"RTN","LRMIPSZ1",100,0)
 . . I LRTESTCOMPLE S LRX=$$LJ^XLFSTR(LRX,30,".")
"RTN","LRMIPSZ1",101,0)
 . . W ?19,LRX
"RTN","LRMIPSZ1",102,0)
 . . I '$P(X,U,2) W ! D NP Q
"RTN","LRMIPSZ1",103,0)
 . . S Y=$P(X,U,2)
"RTN","LRMIPSZ1",104,0)
 . . D D^LRU S LRY="completed: "_Y
"RTN","LRMIPSZ1",105,0)
 . . I (19+$L(LRX)+$L(LRY))>IOM W !
"RTN","LRMIPSZ1",106,0)
 . . W ?50,LRY,! D NP
"RTN","LRMIPSZ1",107,0)
 ;
"RTN","LRMIPSZ1",108,0)
 K ^TMP("LR",$J,"T"),LRTSTS W:LRHC !
"RTN","LRMIPSZ1",109,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,14)) D  Q:LRABORT  ;
"RTN","LRMIPSZ1",110,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",111,0)
 . D ANTI^LRMIPSZ2
"RTN","LRMIPSZ1",112,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",113,0)
 ;
"RTN","LRMIPSZ1",114,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,1)) D  Q:LRABORT  ;
"RTN","LRMIPSZ1",115,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",116,0)
 . D BACT^LRMIPSZ2 Q:LREND
"RTN","LRMIPSZ1",117,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",118,0)
 . D REFS^LRMIPSU Q:LREND
"RTN","LRMIPSZ1",119,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",120,0)
 ;
"RTN","LRMIPSZ1",121,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,31)) D  Q:LRABORT  ;
"RTN","LRMIPSZ1",122,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",123,0)
 . D STER^LRMIPSZ3
"RTN","LRMIPSZ1",124,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",125,0)
 ;
"RTN","LRMIPSZ1",126,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,5)) D  Q:LRABORT  Q:LREND  ;
"RTN","LRMIPSZ1",127,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",128,0)
 . D PARA^LRMIPSZ3
"RTN","LRMIPSZ1",129,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",130,0)
 . D REFS^LRMIPSU
"RTN","LRMIPSZ1",131,0)
 . Q:LREND
"RTN","LRMIPSZ1",132,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",133,0)
 ;
"RTN","LRMIPSZ1",134,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,16)) D  Q:LREND  Q:LRABORT  ;
"RTN","LRMIPSZ1",135,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",136,0)
 . D VIR^LRMIPSZ3
"RTN","LRMIPSZ1",137,0)
 . D REFS^LRMIPSU Q:LREND  Q:LRABORT  ;
"RTN","LRMIPSZ1",138,0)
 ;
"RTN","LRMIPSZ1",139,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11)) D  Q:LREND  Q:LRABORT  ;
"RTN","LRMIPSZ1",140,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",141,0)
 . D TB^LRMIPSZ4
"RTN","LRMIPSZ1",142,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",143,0)
 . D REFS^LRMIPSU
"RTN","LRMIPSZ1",144,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",145,0)
 ;
"RTN","LRMIPSZ1",146,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,8)) D  Q:LREND  Q:LRABORT  ;
"RTN","LRMIPSZ1",147,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",148,0)
 . D FUNG^LRMIPSZ4
"RTN","LRMIPSZ1",149,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ1",150,0)
 . D REFS^LRMIPSU
"RTN","LRMIPSZ1",151,0)
 . Q:LREND  Q:LRABORT
"RTN","LRMIPSZ1",152,0)
 ;
"RTN","LRMIPSZ1",153,0)
 Q:LRABORT
"RTN","LRMIPSZ1",154,0)
 ;
"RTN","LRMIPSZ1",155,0)
 ; Print any performing labs listing
"RTN","LRMIPSZ1",156,0)
 I $G(LRMODE)'="LDSI" D PPL
"RTN","LRMIPSZ1",157,0)
 ;
"RTN","LRMIPSZ1",158,0)
 ; Write last footer if needed
"RTN","LRMIPSZ1",159,0)
 I 'LRABORT,'$G(LRPGDATA("WFTR")) D  ;
"RTN","LRMIPSZ1",160,0)
 . I $G(LRPGDATA("FTR"))="" Q
"RTN","LRMIPSZ1",161,0)
 . I $E($G(IOST),1,2)'="C-" D  ;
"RTN","LRMIPSZ1",162,0)
 . . N I,BM
"RTN","LRMIPSZ1",163,0)
 . . S BM=$G(LRPGDATA("BM"))
"RTN","LRMIPSZ1",164,0)
 . . F I=$Y+1:1:($G(IOSL,60)-BM-1) W !
"RTN","LRMIPSZ1",165,0)
 . X LRPGDATA("FTR")
"RTN","LRMIPSZ1",166,0)
 ;
"RTN","LRMIPSZ1",167,0)
 I 'LRABORT D  ;
"RTN","LRMIPSZ1",168,0)
 . N PAD,STR,I,II
"RTN","LRMIPSZ1",169,0)
 . S X="  End of Report  ",PAD="+ ",STR=""
"RTN","LRMIPSZ1",170,0)
 . S I=IOM-($L(X)*3),I=I/4/$L(PAD)
"RTN","LRMIPSZ1",171,0)
 . F II=1:1:3 S STR=STR_$$REPEAT^XLFSTR(PAD,I)_X
"RTN","LRMIPSZ1",172,0)
 . S STR=STR_$$REPEAT^XLFSTR(PAD,I)
"RTN","LRMIPSZ1",173,0)
 . W !,$$CJ^XLFSTR(STR,IOM)
"RTN","LRMIPSZ1",174,0)
 . F I=$Y+1:1:($G(IOSL,60)-$G(LRPGDATA("BM"))-1) W !
"RTN","LRMIPSZ1",175,0)
 . S (LRABORT,LREND)=$$MORE^LRUTIL($$PROMPT^LRMIPSU(),0)
"RTN","LRMIPSZ1",176,0)
 . ; LRMLTRPT indicates multi report (set in SENDUP^LRMIPLOG)
"RTN","LRMIPSZ1",177,0)
 . I $G(LRMLTRPT),$E($G(IOST),1,2)="P-",$G(IOF)'="" W @IOF
"RTN","LRMIPSZ1",178,0)
 ;
"RTN","LRMIPSZ1",179,0)
 Q
"RTN","LRMIPSZ1",180,0)
 ;
"RTN","LRMIPSZ1",181,0)
 ;
"RTN","LRMIPSZ1",182,0)
EN1 ;
"RTN","LRMIPSZ1",183,0)
 S LRTS=+^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRBRR,0),LRTS(1)=$P(^(0),U,5)
"RTN","LRMIPSZ1",184,0)
 Q:'$L($P($G(^LAB(60,LRTS,0)),U,3))
"RTN","LRMIPSZ1",185,0)
 I '$D(LRLABKY),"BO"'[$P($G(^LAB(60,LRTS,0)),U,3) Q
"RTN","LRMIPSZ1",186,0)
 ;
"RTN","LRMIPSZ1",187,0)
 ; Set flag that at least one test is completed
"RTN","LRMIPSZ1",188,0)
 I LRTS(1) S LRTESTCOMPLE=1
"RTN","LRMIPSZ1",189,0)
 ;
"RTN","LRMIPSZ1",190,0)
 S:LRTS=LRONETST LRPRINT=1
"RTN","LRMIPSZ1",191,0)
 S LRTSTS=$S($D(^LAB(60,LRTS,0)):$P(^(0),U),1:"deleted test"),^TMP("LR",$J,"T",$S($D(^LAB(60,LRTS,.1)):$P(^(.1),U,6),1:"")_","_LRBRR)=LRTSTS_U_LRTS(1)
"RTN","LRMIPSZ1",192,0)
 Q
"RTN","LRMIPSZ1",193,0)
 ;
"RTN","LRMIPSZ1",194,0)
 ;
"RTN","LRMIPSZ1",195,0)
NP ;
"RTN","LRMIPSZ1",196,0)
 ; Convenience method
"RTN","LRMIPSZ1",197,0)
 ; Some methods in these report routines may be called by a different parent so need to handle this if needed.
"RTN","LRMIPSZ1",198,0)
 I '$D(LRABORT) S LRABORT=0
"RTN","LRMIPSZ1",199,0)
 Q:'$D(LRPGDATA)
"RTN","LRMIPSZ1",200,0)
 D NP^LRUTIL(.LRABORT,.LRPGDATA)
"RTN","LRMIPSZ1",201,0)
 S LRPG=$G(LRPGDATA("PGNUM"),1)
"RTN","LRMIPSZ1",202,0)
 ;
"RTN","LRMIPSZ1",203,0)
 ; backward compatability (for SENDUP^LRMIPLOG)
"RTN","LRMIPSZ1",204,0)
 S LREND=LRABORT
"RTN","LRMIPSZ1",205,0)
 Q
"RTN","LRMIPSZ1",206,0)
 ;
"RTN","LRMIPSZ1",207,0)
 ;
"RTN","LRMIPSZ1",208,0)
PPL ; Print any performing laboratories
"RTN","LRMIPSZ1",209,0)
 ;
"RTN","LRMIPSZ1",210,0)
 N LRPL,LRI,LRX,LRY
"RTN","LRMIPSZ1",211,0)
 ;
"RTN","LRMIPSZ1",212,0)
 D RETLST^LRRPL(.LRPL,LRDFN,"MI",LRIDT,0)
"RTN","LRMIPSZ1",213,0)
 I $G(LRPL)<1 Q
"RTN","LRMIPSZ1",214,0)
 ;
"RTN","LRMIPSZ1",215,0)
 ; Start new page if space on existing page too small to display a significant portion of labs
"RTN","LRMIPSZ1",216,0)
 S LRY=IOSL-$Y S:LRY<1 LRY=1
"RTN","LRMIPSZ1",217,0)
 I (LRPL/LRY)>1 D
"RTN","LRMIPSZ1",218,0)
 . F LRI=$Y+1:1:($G(IOSL,60)-$G(LRPGDATA("BM"))-1) W !
"RTN","LRMIPSZ1",219,0)
 . D NP
"RTN","LRMIPSZ1",220,0)
 E  S LRX="=--" W !!,$$REPEAT^XLFSTR(LRX,IOM/$L(LRX))
"RTN","LRMIPSZ1",221,0)
 ;
"RTN","LRMIPSZ1",222,0)
 W !,"Performing Laboratory:",!
"RTN","LRMIPSZ1",223,0)
 S LRI=0
"RTN","LRMIPSZ1",224,0)
 F  S LRI=$O(LRPL(LRI)) Q:'LRI  D  Q:LRABORT
"RTN","LRMIPSZ1",225,0)
 . W !,LRPL(LRI)
"RTN","LRMIPSZ1",226,0)
 . D NP
"RTN","LRMIPSZ1",227,0)
 . I 'LRABORT,LRPGDATA("NP") W !,"Performing Laboratory (cont'd):",!
"RTN","LRMIPSZ1",228,0)
 ;
"RTN","LRMIPSZ1",229,0)
 I 'LRABORT W !
"RTN","LRMIPSZ1",230,0)
 ;
"RTN","LRMIPSZ1",231,0)
 Q
"RTN","LRMIPSZ2")
0^8^B34660166
"RTN","LRMIPSZ2",1,0)
LRMIPSZ2 ;DALOI/STAFF - MICRO PATIENT REPORT - BACTERIA, SIC/SBC, MIC ;03/18/11  11:41
"RTN","LRMIPSZ2",2,0)
 ;;5.2;LAB SERVICE;**388,350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ2",3,0)
 ;
"RTN","LRMIPSZ2",4,0)
 ;
"RTN","LRMIPSZ2",5,0)
 Q
"RTN","LRMIPSZ2",6,0)
 ;
"RTN","LRMIPSZ2",7,0)
ANTI ;
"RTN","LRMIPSZ2",8,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ2",9,0)
 N B,I
"RTN","LRMIPSZ2",10,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,14,0)) D
"RTN","LRMIPSZ2",11,0)
 . W !!,?28,"Antibiotic Level(s):"
"RTN","LRMIPSZ2",12,0)
 . W !,"ANTIBIOTIC",?20,"CONC RANGE (ug/ml)",?42,"DRAW TIME"
"RTN","LRMIPSZ2",13,0)
 . S B=0
"RTN","LRMIPSZ2",14,0)
 . F  S B=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,14,B)) Q:B<1  D
"RTN","LRMIPSZ2",15,0)
 . . W !,$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,14,B,0),U),?20,$P(^(0),U,3),?42,$$EXTERNAL^DILFD(63.42,1,"",$P(^(0),U,2))
"RTN","LRMIPSZ2",16,0)
 Q
"RTN","LRMIPSZ2",17,0)
 ;
"RTN","LRMIPSZ2",18,0)
 ;
"RTN","LRMIPSZ2",19,0)
BACT ;
"RTN","LRMIPSZ2",20,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ2",21,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,1),U)="",'$G(LRLABKY) Q:'$D(LRWRDVEW)  Q:LRSB'=1
"RTN","LRMIPSZ2",22,0)
 D BUG
"RTN","LRMIPSZ2",23,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2)) D  Q:LRABORT  ;
"RTN","LRMIPSZ2",24,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",25,0)
 . D GRAM
"RTN","LRMIPSZ2",26,0)
 . D NP
"RTN","LRMIPSZ2",27,0)
 Q:LRABORT
"RTN","LRMIPSZ2",28,0)
 ;
"RTN","LRMIPSZ2",29,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,25)) D  Q:LRABORT  ;
"RTN","LRMIPSZ2",30,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",31,0)
 . D BSMEAR
"RTN","LRMIPSZ2",32,0)
 . D NP
"RTN","LRMIPSZ2",33,0)
 ;
"RTN","LRMIPSZ2",34,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3)) D  Q:LRABORT  ;
"RTN","LRMIPSZ2",35,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",36,0)
 . D BRMK Q:LREND
"RTN","LRMIPSZ2",37,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",38,0)
 . D BACT^LRMIPSZ5
"RTN","LRMIPSZ2",39,0)
 . D NP
"RTN","LRMIPSZ2",40,0)
 ;
"RTN","LRMIPSZ2",41,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4)) D  Q:LRABORT  ;
"RTN","LRMIPSZ2",42,0)
 . N B,I
"RTN","LRMIPSZ2",43,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",44,0)
 . I LRHC W ! D NP Q:LRABORT
"RTN","LRMIPSZ2",45,0)
 . W !,"Bacteriology Remark(s):"
"RTN","LRMIPSZ2",46,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",47,0)
 . S B=0
"RTN","LRMIPSZ2",48,0)
 . F I=0:0 S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,B)) Q:B<1  W !,?3,^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,B,0) D NP Q:LRABORT
"RTN","LRMIPSZ2",49,0)
 ;
"RTN","LRMIPSZ2",50,0)
 Q
"RTN","LRMIPSZ2",51,0)
 ;
"RTN","LRMIPSZ2",52,0)
 ;
"RTN","LRMIPSZ2",53,0)
BUG ;
"RTN","LRMIPSZ2",54,0)
 N LRNS,LRTUS,LRUS,X
"RTN","LRMIPSZ2",55,0)
 ;
"RTN","LRMIPSZ2",56,0)
 S X=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,1),LRTUS=$P(X,U,2),DZ=$P(X,U,3),LRUS=$P(X,U,6),LRNS=$P(X,U,5),Y=$P(X,U)
"RTN","LRMIPSZ2",57,0)
 ;
"RTN","LRMIPSZ2",58,0)
 D D^LRU
"RTN","LRMIPSZ2",59,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",60,0)
 W:LRHC !
"RTN","LRMIPSZ2",61,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",62,0)
 W !,"* BACTERIOLOGY ",$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")," REPORT => "_Y_"   TECH CODE: "_DZ
"RTN","LRMIPSZ2",63,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",64,0)
 S LRPRE=19
"RTN","LRMIPSZ2",65,0)
 D PRE^LRMIPSU
"RTN","LRMIPSZ2",66,0)
 I LRUS'="" D NP Q:LRABORT  W !,"URINE SCREEN: "_$S(LRUS="N":"Negative",LRUS="P":"Positive",1:LRUS) D NP Q:LRABORT  W:LRHC ! D NP Q:LRABORT
"RTN","LRMIPSZ2",67,0)
 I LRNS'="" D NP Q:LRABORT  W !,"SPUTUM SCREEN:  ",LRNS D NP Q:LRABORT  W:LRHC ! D NP Q:LRABORT
"RTN","LRMIPSZ2",68,0)
 Q
"RTN","LRMIPSZ2",69,0)
 ;
"RTN","LRMIPSZ2",70,0)
 ;
"RTN","LRMIPSZ2",71,0)
GRAM ;
"RTN","LRMIPSZ2",72,0)
 N CNT
"RTN","LRMIPSZ2",73,0)
 ;
"RTN","LRMIPSZ2",74,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",75,0)
 W !,"GRAM STAIN:"
"RTN","LRMIPSZ2",76,0)
 S (CNT,LRGRM)=0
"RTN","LRMIPSZ2",77,0)
 F  S LRGRM=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2,LRGRM)) Q:LRGRM<1  S CNT=CNT+1 W:CNT>1 ! W ?12,^(LRGRM,0) D NP Q:LRABORT
"RTN","LRMIPSZ2",78,0)
 I LRHC W !
"RTN","LRMIPSZ2",79,0)
 D NP
"RTN","LRMIPSZ2",80,0)
 Q
"RTN","LRMIPSZ2",81,0)
 ;
"RTN","LRMIPSZ2",82,0)
 ;
"RTN","LRMIPSZ2",83,0)
BSMEAR ;
"RTN","LRMIPSZ2",84,0)
 W !,"BACTERIOLOGY SMEAR/PREP:",!
"RTN","LRMIPSZ2",85,0)
 S LRMYC=0
"RTN","LRMIPSZ2",86,0)
 F  S LRMYC=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,25,LRMYC)) Q:LRMYC<1  W ?5,^(LRMYC,0),!
"RTN","LRMIPSZ2",87,0)
 Q
"RTN","LRMIPSZ2",88,0)
 ;
"RTN","LRMIPSZ2",89,0)
 ;
"RTN","LRMIPSZ2",90,0)
BRMK ;
"RTN","LRMIPSZ2",91,0)
 ; also called from T51^LRMIV1
"RTN","LRMIPSZ2",92,0)
 N LRBLDTMP
"RTN","LRMIPSZ2",93,0)
 S LRBLDTMP=0
"RTN","LRMIPSZ2",94,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3)) D  ;
"RTN","LRMIPSZ2",95,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ2",96,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3)=^LR(LRDFN,"MI",LRIDT,3)
"RTN","LRMIPSZ2",97,0)
 ;
"RTN","LRMIPSZ2",98,0)
 S (LRBUG,LR2ORMOR)=0
"RTN","LRMIPSZ2",99,0)
 F LRAX=1,2 S LRBUG=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  S:LRAX=2 LR2ORMOR=1
"RTN","LRMIPSZ2",100,0)
 I LRAX'=1 S (LRBUG,LRTSTS)=0 F LRAX=1:1 S LRBUG=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D LST
"RTN","LRMIPSZ2",101,0)
 ; delete ^TMP if built just for this entrypoint
"RTN","LRMIPSZ2",102,0)
 I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3)
"RTN","LRMIPSZ2",103,0)
 Q
"RTN","LRMIPSZ2",104,0)
 ;
"RTN","LRMIPSZ2",105,0)
 ;
"RTN","LRMIPSZ2",106,0)
LST ;
"RTN","LRMIPSZ2",107,0)
 ;
"RTN","LRMIPSZ2",108,0)
 N LRX
"RTN","LRMIPSZ2",109,0)
 S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,0)
"RTN","LRMIPSZ2",110,0)
 S (LRBUG(LRAX),LRORG)=$P(LRX,U),LRQU=$P(LRX,U,2),LRSSD=$P(LRX,U,3,8),LRORG=$P(^LAB(61.2,LRORG,0),U)
"RTN","LRMIPSZ2",111,0)
 ;
"RTN","LRMIPSZ2",112,0)
 I LRSSD'?."^" S LRSIC1=$P(LRSSD,U),LRSBC1=$P(LRSSD,U,2),LRDRTM1=$P(LRSSD,U,3),LRSIC2=$P(LRSSD,U,4),LRSBC2=$P(LRSSD,U,5),LRDRTM2=$P(LRSSD,U,6),LRSSD=1
"RTN","LRMIPSZ2",113,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",114,0)
 W:LRHC !
"RTN","LRMIPSZ2",115,0)
 I LRAX=1 W !,"CULTURE RESULTS:"
"RTN","LRMIPSZ2",116,0)
 E  W !
"RTN","LRMIPSZ2",117,0)
 W ?17,$S(LR2ORMOR:$J(LRBUG,2)_". ",1:" "),LRORG
"RTN","LRMIPSZ2",118,0)
 ;
"RTN","LRMIPSZ2",119,0)
 ; Display quantity/colony count
"RTN","LRMIPSZ2",120,0)
 I LRQU'="" D
"RTN","LRMIPSZ2",121,0)
 . S LRX=" - Quantity: "_LRQU
"RTN","LRMIPSZ2",122,0)
 . I (IOM-$X-1)<$L(LRX) W !,?21
"RTN","LRMIPSZ2",123,0)
 . W LRX
"RTN","LRMIPSZ2",124,0)
 ;
"RTN","LRMIPSZ2",125,0)
 I LRSSD D FH^LRMIPSU Q:LREND  D SSD W:LRHC !
"RTN","LRMIPSZ2",126,0)
 S:$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,2)) LRTSTS=LRTSTS+1
"RTN","LRMIPSZ2",127,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,3,0)) D MIC
"RTN","LRMIPSZ2",128,0)
 D CMNT
"RTN","LRMIPSZ2",129,0)
 Q
"RTN","LRMIPSZ2",130,0)
 ;
"RTN","LRMIPSZ2",131,0)
 ;
"RTN","LRMIPSZ2",132,0)
SSD ;
"RTN","LRMIPSZ2",133,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",134,0)
 W !
"RTN","LRMIPSZ2",135,0)
 ;
"RTN","LRMIPSZ2",136,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ2",137,0)
 S LRDRTM1=$S(LRDRTM1="P":"PEAK",LRDRTM1="T":"TROUGH",1:LRDRTM1),LRDRTM2=$S(LRDRTM2="P":"PEAK",LRDRTM2="T":"TROUGH",1:LRDRTM2)
"RTN","LRMIPSZ2",138,0)
 ;
"RTN","LRMIPSZ2",139,0)
 I LRSIC1'="" D
"RTN","LRMIPSZ2",140,0)
 . W !,?20,"SIT " W:LRDRTM1'="" "(",LRDRTM1,")" W ": ",LRSIC1
"RTN","LRMIPSZ2",141,0)
 . D NP
"RTN","LRMIPSZ2",142,0)
 Q:LRABORT
"RTN","LRMIPSZ2",143,0)
 ;
"RTN","LRMIPSZ2",144,0)
 I LRSBC1'="" D
"RTN","LRMIPSZ2",145,0)
 . W !,?20,"SBT " W:LRDRTM1'="" "(",LRDRTM1,")" W ": ",LRSBC1
"RTN","LRMIPSZ2",146,0)
 . D NP
"RTN","LRMIPSZ2",147,0)
 Q:LRABORT
"RTN","LRMIPSZ2",148,0)
 ;
"RTN","LRMIPSZ2",149,0)
 I LRSIC2'="" D
"RTN","LRMIPSZ2",150,0)
 . W !,?20,"SIT " W:LRDRTM2'="" "(",LRDRTM2,")" W ": ",LRSIC2
"RTN","LRMIPSZ2",151,0)
 . D NP
"RTN","LRMIPSZ2",152,0)
 Q:LRABORT
"RTN","LRMIPSZ2",153,0)
 ;
"RTN","LRMIPSZ2",154,0)
 I LRSBC2'="" D
"RTN","LRMIPSZ2",155,0)
 . W !,?20,"SBT " W:LRDRTM2'="" "(",LRDRTM2,")" W ": ",LRSBC2
"RTN","LRMIPSZ2",156,0)
 . D NP
"RTN","LRMIPSZ2",157,0)
 ;
"RTN","LRMIPSZ2",158,0)
 Q
"RTN","LRMIPSZ2",159,0)
 ;
"RTN","LRMIPSZ2",160,0)
 ;
"RTN","LRMIPSZ2",161,0)
MIC ;
"RTN","LRMIPSZ2",162,0)
 ;
"RTN","LRMIPSZ2",163,0)
 N B
"RTN","LRMIPSZ2",164,0)
 W !,?21,"Antibiotic"
"RTN","LRMIPSZ2",165,0)
 ;
"RTN","LRMIPSZ2",166,0)
 ; If data in 2/3rd pieces then print header
"RTN","LRMIPSZ2",167,0)
 S B=0
"RTN","LRMIPSZ2",168,0)
 F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,3,B)) Q:B<1  I $P(^(B,0),U,2,3)'="" W ?38,"MIC (ug/ml)",?53,"MBC (ug/ml)" Q
"RTN","LRMIPSZ2",169,0)
 ;
"RTN","LRMIPSZ2",170,0)
 ; Print results
"RTN","LRMIPSZ2",171,0)
 S B=0
"RTN","LRMIPSZ2",172,0)
 F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,3,B)) Q:B<1  W !,?21,$P(^(B,0),U),?38,$J($P(^(0),U,2),7),?53,$J($P(^(0),U,3),7)
"RTN","LRMIPSZ2",173,0)
 Q
"RTN","LRMIPSZ2",174,0)
 ;
"RTN","LRMIPSZ2",175,0)
 ;
"RTN","LRMIPSZ2",176,0)
CMNT ;
"RTN","LRMIPSZ2",177,0)
 N A,LRX
"RTN","LRMIPSZ2",178,0)
 ;
"RTN","LRMIPSZ2",179,0)
 S LRPC=0
"RTN","LRMIPSZ2",180,0)
 F A=0:1 S LRPC=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,1,LRPC)) Q:LRPC<1  D  Q:LRABORT
"RTN","LRMIPSZ2",181,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,1,LRPC,0)
"RTN","LRMIPSZ2",182,0)
 . I A=0 S LRX="Comment: "_LRX
"RTN","LRMIPSZ2",183,0)
 . E  S LRX="         "_LRX
"RTN","LRMIPSZ2",184,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ2",185,0)
 . I $L(LRX)>(IOM-22) D
"RTN","LRMIPSZ2",186,0)
 . . W !,?21,$E(LRX,1,(IOM-22))
"RTN","LRMIPSZ2",187,0)
 . . S LRX="         "_$E(LRX,(IOM-21),$L(LRX))
"RTN","LRMIPSZ2",188,0)
 . W !,?21,LRX
"RTN","LRMIPSZ2",189,0)
 . D NP
"RTN","LRMIPSZ2",190,0)
 Q
"RTN","LRMIPSZ2",191,0)
 ;
"RTN","LRMIPSZ2",192,0)
 ;
"RTN","LRMIPSZ2",193,0)
NP ;
"RTN","LRMIPSZ2",194,0)
 ; Convenience method
"RTN","LRMIPSZ2",195,0)
 D NP^LRMIPSZ1
"RTN","LRMIPSZ2",196,0)
 Q
"RTN","LRMIPSZ3")
0^9^B28861527
"RTN","LRMIPSZ3",1,0)
LRMIPSZ3 ;DALOI/STAFF - MICRO PATIENT REPORT - STERILITY, PARASITES, VIRUS ;Nov 21, 2008
"RTN","LRMIPSZ3",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ3",3,0)
 ;
"RTN","LRMIPSZ3",4,0)
 ; Reference for DD global supported by ICR #999
"RTN","LRMIPSZ3",5,0)
 Q
"RTN","LRMIPSZ3",6,0)
 ;
"RTN","LRMIPSZ3",7,0)
 ;
"RTN","LRMIPSZ3",8,0)
STER ;
"RTN","LRMIPSZ3",9,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ3",10,0)
 ; also called from RPT^LROR4
"RTN","LRMIPSZ3",11,0)
 N I,LRBLDTMP,LRERR,LRFLAG,LRX,X
"RTN","LRMIPSZ3",12,0)
 S LRBLDTMP=0
"RTN","LRMIPSZ3",13,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D
"RTN","LRMIPSZ3",14,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ3",15,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",16,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ3",17,0)
 ;
"RTN","LRMIPSZ3",18,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,1),U,7)'="" D  Q:LRABORT
"RTN","LRMIPSZ3",19,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",20,0)
 . S LRX=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,1),U,7)
"RTN","LRMIPSZ3",21,0)
 . S LRX(0)=$$EXTERNAL^DILFD(63.05,11.51,"",LRX,"LRERR")
"RTN","LRMIPSZ3",22,0)
 . I $D(LRERR) S LRX(0)=LRX K LRERR
"RTN","LRMIPSZ3",23,0)
 . W !,"STERILITY CONTROL: ",LRX(0)
"RTN","LRMIPSZ3",24,0)
 ;
"RTN","LRMIPSZ3",25,0)
 S LRFLAG=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,31,0))
"RTN","LRMIPSZ3",26,0)
 I LRFLAG W !
"RTN","LRMIPSZ3",27,0)
 S I=0
"RTN","LRMIPSZ3",28,0)
 F  S I=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,31,I)) Q:I<1  D  Q:LRABORT
"RTN","LRMIPSZ3",29,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",30,0)
 . S LRX=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,31,I,0),"^")
"RTN","LRMIPSZ3",31,0)
 . S LRX(0)=$$EXTERNAL^DILFD(63.292,.01,"",LRX,"LRERR")
"RTN","LRMIPSZ3",32,0)
 . I $D(LRERR) S LRX(0)=LRX K LRERR
"RTN","LRMIPSZ3",33,0)
 . W !,"NUMBER: ",I,?20,"STERILITY RESULTS: ",LRX(0)
"RTN","LRMIPSZ3",34,0)
 I LRFLAG W !
"RTN","LRMIPSZ3",35,0)
 ;
"RTN","LRMIPSZ3",36,0)
 I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",37,0)
 Q
"RTN","LRMIPSZ3",38,0)
 ;
"RTN","LRMIPSZ3",39,0)
 ;
"RTN","LRMIPSZ3",40,0)
PARA ;
"RTN","LRMIPSZ3",41,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ3",42,0)
 ; also called from RPT^LROR4
"RTN","LRMIPSZ3",43,0)
 N LRBLDTMP,LRQUIT
"RTN","LRMIPSZ3",44,0)
 S (LRBLDTMP,LRQUIT)=0
"RTN","LRMIPSZ3",45,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D  ;
"RTN","LRMIPSZ3",46,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ3",47,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",48,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ3",49,0)
 ;
"RTN","LRMIPSZ3",50,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,5),U)="",'$G(LRLABKY) S:'$D(LRWRDVEW) LRQUIT=1 S:LRSB'=5 LRQUIT=1
"RTN","LRMIPSZ3",51,0)
 ;
"RTN","LRMIPSZ3",52,0)
 I LRQUIT D  Q
"RTN","LRMIPSZ3",53,0)
 . I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",54,0)
 ;
"RTN","LRMIPSZ3",55,0)
 S LRTUS=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,5),U,2)
"RTN","LRMIPSZ3",56,0)
 S DZ=$P(^(5),U,3),Y=$P(^(5),U)
"RTN","LRMIPSZ3",57,0)
 D D^LRU
"RTN","LRMIPSZ3",58,0)
 I LRHC W ! D NP Q:LRABORT
"RTN","LRMIPSZ3",59,0)
 W !,"* PARASITOLOGY ",$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")," REPORT => ",Y,"   TECH CODE: ",DZ
"RTN","LRMIPSZ3",60,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ3",61,0)
 S LRPRE=21 D PRE^LRMIPSU
"RTN","LRMIPSZ3",62,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ3",63,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,24)) D  ;
"RTN","LRMIPSZ3",64,0)
 . I LRHC W ! D NP Q:LRABORT
"RTN","LRMIPSZ3",65,0)
 . W !,"PARASITOLOGY SMEAR/PREP:"
"RTN","LRMIPSZ3",66,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",67,0)
 . S LRMYC=0
"RTN","LRMIPSZ3",68,0)
 . F I=0:0 S LRMYC=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,24,LRMYC)) Q:LRMYC<1  W !?5,^(LRMYC,0) D NP Q:LRABORT
"RTN","LRMIPSZ3",69,0)
 ;
"RTN","LRMIPSZ3",70,0)
 S LRPAR=0
"RTN","LRMIPSZ3",71,0)
 F  S LRPAR=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,LRPAR)) Q:LRPAR<1  Q:LRABORT  W:LRHC ! D NP Q:LRABORT  W !,"Parasite: ",$E($P(^LAB(61.2,^(LRPAR,0),0),U),1,25),?30," " D STG D NP Q:LRABORT
"RTN","LRMIPSZ3",72,0)
 ;
"RTN","LRMIPSZ3",73,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7)) D  ;
"RTN","LRMIPSZ3",74,0)
 . W:LRHC ! D NP Q:LRABORT
"RTN","LRMIPSZ3",75,0)
 . W !,"Parasitology Remark(s):"
"RTN","LRMIPSZ3",76,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",77,0)
 . S LRPAR=0
"RTN","LRMIPSZ3",78,0)
 . F  S LRPAR=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7,LRPAR)) Q:LRPAR<1  Q:LRABORT  W !,?3,^(LRPAR,0) D NP Q:LRABORT  ;
"RTN","LRMIPSZ3",79,0)
 ;
"RTN","LRMIPSZ3",80,0)
 I LRBLDTMP D  ;
"RTN","LRMIPSZ3",81,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",82,0)
 ;
"RTN","LRMIPSZ3",83,0)
 Q
"RTN","LRMIPSZ3",84,0)
 ;
"RTN","LRMIPSZ3",85,0)
 ;
"RTN","LRMIPSZ3",86,0)
STG ;
"RTN","LRMIPSZ3",87,0)
 N B
"RTN","LRMIPSZ3",88,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ3",89,0)
 S LRBUG(LRPAR)=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,LRPAR,0)
"RTN","LRMIPSZ3",90,0)
 S S1=6,LRTA=LRPAR
"RTN","LRMIPSZ3",91,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,S1,LRTA,1)) D  ;
"RTN","LRMIPSZ3",92,0)
 . S B=0
"RTN","LRMIPSZ3",93,0)
 . F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,S1,LRTA,1,B)) Q:B<1  Q:LRABORT  S Y=^(B,0),Y1=$P(Y,U,2) W !,"   Stage: " D SET D NP Q:LRABORT  W:$L(Y1) !,"   Quantity: ",Y1 D LIST1 D NP Q:LRABORT
"RTN","LRMIPSZ3",94,0)
 ;
"RTN","LRMIPSZ3",95,0)
 Q
"RTN","LRMIPSZ3",96,0)
 ;
"RTN","LRMIPSZ3",97,0)
 ;
"RTN","LRMIPSZ3",98,0)
SET ;
"RTN","LRMIPSZ3",99,0)
 ; File DD/999
"RTN","LRMIPSZ3",100,0)
 S LRSET=$P(^DD(63.35,.01,0),U,3),%=$P($P(";"_LRSET,";"_$P(Y,U)_":",2),";") W:%]"" %
"RTN","LRMIPSZ3",101,0)
 Q
"RTN","LRMIPSZ3",102,0)
 ;
"RTN","LRMIPSZ3",103,0)
 ;
"RTN","LRMIPSZ3",104,0)
LIST1 ;
"RTN","LRMIPSZ3",105,0)
 N C
"RTN","LRMIPSZ3",106,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ3",107,0)
 W !,"   Comment: "
"RTN","LRMIPSZ3",108,0)
 S C=0
"RTN","LRMIPSZ3",109,0)
 F  S C=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,S1,LRTA,1,B,1,C)) Q:C<1  W ?13,^(C,0),! D NP Q:LRABORT
"RTN","LRMIPSZ3",110,0)
 Q
"RTN","LRMIPSZ3",111,0)
 ;
"RTN","LRMIPSZ3",112,0)
 ;
"RTN","LRMIPSZ3",113,0)
VIR ;
"RTN","LRMIPSZ3",114,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ3",115,0)
 ; also called from RPT^LROR4
"RTN","LRMIPSZ3",116,0)
 N LRBLDTMP,LRQUIT
"RTN","LRMIPSZ3",117,0)
 S (LRQUIT,LRBLDTMP)=0
"RTN","LRMIPSZ3",118,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D  ;
"RTN","LRMIPSZ3",119,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ3",120,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",121,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ3",122,0)
 ;
"RTN","LRMIPSZ3",123,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,16),U)="",'$G(LRLABKY) S:'$D(LRWRDVEW) LRQUIT=1 S:LRSB'=16 LRQUIT=1
"RTN","LRMIPSZ3",124,0)
 ;
"RTN","LRMIPSZ3",125,0)
 I LRQUIT D  Q
"RTN","LRMIPSZ3",126,0)
 . I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",127,0)
 ;
"RTN","LRMIPSZ3",128,0)
 S LRTUS=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,16),U,2)
"RTN","LRMIPSZ3",129,0)
 S DZ=$P(^(16),U,3),Y=$P(^(16),U)
"RTN","LRMIPSZ3",130,0)
 D D^LRU
"RTN","LRMIPSZ3",131,0)
 I LRHC W ! D NP Q:LRABORT
"RTN","LRMIPSZ3",132,0)
 W !,"* VIROLOGY ",$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")," REPORT => ",Y,"   TECH CODE: ",DZ
"RTN","LRMIPSZ3",133,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ3",134,0)
 S LRPRE=20
"RTN","LRMIPSZ3",135,0)
 D PRE^LRMIPSU
"RTN","LRMIPSZ3",136,0)
 S LRPAR=0
"RTN","LRMIPSZ3",137,0)
 F  S LRPAR=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,LRPAR)) Q:LRPAR<1  D  Q:LRABORT  ;
"RTN","LRMIPSZ3",138,0)
 . I LRHC W !
"RTN","LRMIPSZ3",139,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",140,0)
 . W !,"Virus: ",$P(^LAB(61.2,$P(^(LRPAR,0),U),0),U)
"RTN","LRMIPSZ3",141,0)
 . S LRBUG(LRPAR)=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,LRPAR,0)
"RTN","LRMIPSZ3",142,0)
 ;
"RTN","LRMIPSZ3",143,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18)) D  ;
"RTN","LRMIPSZ3",144,0)
 . W:LRHC !
"RTN","LRMIPSZ3",145,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",146,0)
 . W !,"Virology Remark(s):"
"RTN","LRMIPSZ3",147,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ3",148,0)
 . S LRPAR=0
"RTN","LRMIPSZ3",149,0)
 . F  S LRPAR=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,LRPAR)) Q:LRPAR<1  W !,?3,^(LRPAR,0) D NP Q:LRABORT  ;
"RTN","LRMIPSZ3",150,0)
 ;
"RTN","LRMIPSZ3",151,0)
 I LRBLDTMP D  ;
"RTN","LRMIPSZ3",152,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ3",153,0)
 Q
"RTN","LRMIPSZ3",154,0)
 ;
"RTN","LRMIPSZ3",155,0)
 ;
"RTN","LRMIPSZ3",156,0)
NP ;
"RTN","LRMIPSZ3",157,0)
 ; Convenience method
"RTN","LRMIPSZ3",158,0)
 D NP^LRMIPSZ1
"RTN","LRMIPSZ3",159,0)
 Q
"RTN","LRMIPSZ4")
0^10^B32976079
"RTN","LRMIPSZ4",1,0)
LRMIPSZ4 ;DALOI/RBN - MICRO PATIENT REPORT - AFB, FUNGUS ;09/02/10  15:21
"RTN","LRMIPSZ4",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ4",3,0)
 ;
"RTN","LRMIPSZ4",4,0)
 ;Reference to ^DD supported by ICR #999
"RTN","LRMIPSZ4",5,0)
 ;
"RTN","LRMIPSZ4",6,0)
 Q
"RTN","LRMIPSZ4",7,0)
 ;
"RTN","LRMIPSZ4",8,0)
TB ;
"RTN","LRMIPSZ4",9,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ4",10,0)
 ; also called from RPT^LROR4
"RTN","LRMIPSZ4",11,0)
 N B,LRBLDTMP,LRQUIT,LRTA,LRX
"RTN","LRMIPSZ4",12,0)
 S (LRBLDTMP,LRQUIT)=0
"RTN","LRMIPSZ4",13,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D  ;
"RTN","LRMIPSZ4",14,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ4",15,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",16,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ4",17,0)
 ;
"RTN","LRMIPSZ4",18,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11),U)="",'$G(LRLABKY) S:'$D(LRWRDVEW) LRQUIT=1 S:LRSB'=11 LRQUIT=1
"RTN","LRMIPSZ4",19,0)
 ;
"RTN","LRMIPSZ4",20,0)
 I LRQUIT D  Q
"RTN","LRMIPSZ4",21,0)
 . I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",22,0)
 ;
"RTN","LRMIPSZ4",23,0)
 S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11)
"RTN","LRMIPSZ4",24,0)
 S LRTUS=$P(LRX,U,2),DZ=$P(LRX,U,5),LRAFS=$P(LRX,U,3),LRAMT=$P(LRX,U,4),Y=$P(LRX,U)
"RTN","LRMIPSZ4",25,0)
 D D^LRU
"RTN","LRMIPSZ4",26,0)
 W:LRHC !
"RTN","LRMIPSZ4",27,0)
 W !,"* MYCOBACTERIOLOGY ",$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")," REPORT => "_Y_"   TECH CODE: "_DZ
"RTN","LRMIPSZ4",28,0)
 S LRPRE=23
"RTN","LRMIPSZ4",29,0)
 D PRE^LRMIPSU
"RTN","LRMIPSZ4",30,0)
 ;
"RTN","LRMIPSZ4",31,0)
 S LRTA=""
"RTN","LRMIPSZ4",32,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,0)) S LRTA=0
"RTN","LRMIPSZ4",33,0)
 D:LRAFS'=""!(LRTA=0) AFS
"RTN","LRMIPSZ4",34,0)
 ;
"RTN","LRMIPSZ4",35,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13)) D  ;
"RTN","LRMIPSZ4",36,0)
 . W:LRHC !
"RTN","LRMIPSZ4",37,0)
 . W !,"Mycobacteriology Remark(s):"
"RTN","LRMIPSZ4",38,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",39,0)
 . S B=0
"RTN","LRMIPSZ4",40,0)
 . F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13,B)) Q:B<1  W !,?3,^(B,0) D NP Q:LRABORT
"RTN","LRMIPSZ4",41,0)
 ;
"RTN","LRMIPSZ4",42,0)
 I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",43,0)
 Q
"RTN","LRMIPSZ4",44,0)
 ;
"RTN","LRMIPSZ4",45,0)
 ;
"RTN","LRMIPSZ4",46,0)
AFS ; Acid Fast Stain results
"RTN","LRMIPSZ4",47,0)
 ;
"RTN","LRMIPSZ4",48,0)
 N LRX,X
"RTN","LRMIPSZ4",49,0)
 ;
"RTN","LRMIPSZ4",50,0)
 I LRAFS'="" D
"RTN","LRMIPSZ4",51,0)
 . S LRX="Acid Fast Stain:  "
"RTN","LRMIPSZ4",52,0)
 . I LRAFS?1(1"DP",1"DN",1"CP",1"CN") D
"RTN","LRMIPSZ4",53,0)
 . . S LRX=$S($E(LRAFS)="D":"Direct ",$E(LRAFS)="C":"Concentrate ",1:"")_LRX
"RTN","LRMIPSZ4",54,0)
 . . S LRX=LRX_$S($E(LRAFS,2)="P":"Positive",$E(LRAFS,2)="N":"Negative",1:LRAFS)
"RTN","LRMIPSZ4",55,0)
 . E  D
"RTN","LRMIPSZ4",56,0)
 . . S X=$$GET1^DIQ(63.05,LRIDT_","_LRDFN_",",24)
"RTN","LRMIPSZ4",57,0)
 . . I X'="" S LRX=LRX_X Q
"RTN","LRMIPSZ4",58,0)
 . . S LRX=LRX_LRAFS
"RTN","LRMIPSZ4",59,0)
 . W:LRHC ! W !,LRX
"RTN","LRMIPSZ4",60,0)
 . I LRAMT'="" W !,?3,"Quantity: ",LRAMT
"RTN","LRMIPSZ4",61,0)
 ;
"RTN","LRMIPSZ4",62,0)
 K ^TMP("LR",$J,"T"),LRTSTS
"RTN","LRMIPSZ4",63,0)
 ;
"RTN","LRMIPSZ4",64,0)
 I LRTA=0 D
"RTN","LRMIPSZ4",65,0)
 . S LRTSTS=0
"RTN","LRMIPSZ4",66,0)
 . F  S LRTA=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA)) Q:LRTA<1  D
"RTN","LRMIPSZ4",67,0)
 . . S (LRBUG(LRTA),LRTBC)=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,0),U)
"RTN","LRMIPSZ4",68,0)
 . . S LRQU=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,0),U,2)
"RTN","LRMIPSZ4",69,0)
 . . S LRTBC=$P(^LAB(61.2,LRTBC,0),U)
"RTN","LRMIPSZ4",70,0)
 . . D LIST
"RTN","LRMIPSZ4",71,0)
 ;
"RTN","LRMIPSZ4",72,0)
 Q
"RTN","LRMIPSZ4",73,0)
 ;
"RTN","LRMIPSZ4",74,0)
 ;
"RTN","LRMIPSZ4",75,0)
LIST ; List organisms
"RTN","LRMIPSZ4",76,0)
 ;
"RTN","LRMIPSZ4",77,0)
 N B,LRTB,LRTBA,LRTBS,LRX
"RTN","LRMIPSZ4",78,0)
 W:LRHC !
"RTN","LRMIPSZ4",79,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",80,0)
 W !,"Mycobacterium: ",LRTBC
"RTN","LRMIPSZ4",81,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",82,0)
 I LRQU'="" W !,?3,"Quantity: ",LRQU D NP Q:LRABORT
"RTN","LRMIPSZ4",83,0)
 S:$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,2)) LRTSTS=LRTSTS+1
"RTN","LRMIPSZ4",84,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA)) D  Q:LRABORT  ;
"RTN","LRMIPSZ4",85,0)
 . W !,"   Comment: "
"RTN","LRMIPSZ4",86,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",87,0)
 . S B=0
"RTN","LRMIPSZ4",88,0)
 . F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,1,B)) Q:B<1  W ?13,^(B,0),! D NP Q:LRABORT
"RTN","LRMIPSZ4",89,0)
 ;
"RTN","LRMIPSZ4",90,0)
 ;
"RTN","LRMIPSZ4",91,0)
SEN ; Display AFB sensitivities.
"RTN","LRMIPSZ4",92,0)
 ;
"RTN","LRMIPSZ4",93,0)
 S LRTB=2
"RTN","LRMIPSZ4",94,0)
 F  S LRTB=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,LRTB)) Q:LRTB'["2."!(LRTB="")  D  ;
"RTN","LRMIPSZ4",95,0)
 . S LRTBS=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRTA,LRTB)
"RTN","LRMIPSZ4",96,0)
 . I LRTBS="" Q
"RTN","LRMIPSZ4",97,0)
 . S LRTBA=""
"RTN","LRMIPSZ4",98,0)
 . I $D(^LAB(62.06,"AD1",LRTB)) D
"RTN","LRMIPSZ4",99,0)
 . . S LRX=$O(^LAB(62.06,"AD1",LRTB,0)),LRX(0)=""
"RTN","LRMIPSZ4",100,0)
 . . I LRX S LRX(0)=$G(^LAB(62.06,LRX,0))
"RTN","LRMIPSZ4",101,0)
 . . S LRTBA=$P(LRX(0),"^")
"RTN","LRMIPSZ4",102,0)
 . I LRTBA="" D
"RTN","LRMIPSZ4",103,0)
 . . S LRTBA=$O(^DD(63.39,"GL",LRTB,1,0))
"RTN","LRMIPSZ4",104,0)
 . . S LRTBA=$P(^DD(63.39,LRTBA,0),U)
"RTN","LRMIPSZ4",105,0)
 . W !,?3,$$LJ^XLFSTR(LRTBA,30,"."),?34,LRTBS
"RTN","LRMIPSZ4",106,0)
 Q
"RTN","LRMIPSZ4",107,0)
 ;
"RTN","LRMIPSZ4",108,0)
 ;
"RTN","LRMIPSZ4",109,0)
FUNG ;
"RTN","LRMIPSZ4",110,0)
 ; from LRMIPSZ1
"RTN","LRMIPSZ4",111,0)
 ; also called from RPT^LROR4
"RTN","LRMIPSZ4",112,0)
 N LRBLDTMP,LRQUIT
"RTN","LRMIPSZ4",113,0)
 S (LRBLDTMP,LRQUIT)=0
"RTN","LRMIPSZ4",114,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT)) D  ;
"RTN","LRMIPSZ4",115,0)
 . S LRBLDTMP=1
"RTN","LRMIPSZ4",116,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)=^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",117,0)
 . K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,32)
"RTN","LRMIPSZ4",118,0)
 ;
"RTN","LRMIPSZ4",119,0)
 I $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,8),U)="",'$G(LRLABKY) S:'$D(LRWRDVEW) LRQUIT=1 S:LRSB'=8 LRQUIT=1
"RTN","LRMIPSZ4",120,0)
 ;
"RTN","LRMIPSZ4",121,0)
 I LRQUIT D  Q
"RTN","LRMIPSZ4",122,0)
 . I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",123,0)
 ;
"RTN","LRMIPSZ4",124,0)
 S LRTUS=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,8),U,2)
"RTN","LRMIPSZ4",125,0)
 S DZ=$P(^(8),U,3),Y=$P(^(8),U)
"RTN","LRMIPSZ4",126,0)
 D D^LRU
"RTN","LRMIPSZ4",127,0)
 W:LRHC !
"RTN","LRMIPSZ4",128,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",129,0)
 W !,"* MYCOLOGY ",$S(LRTUS="F":"FINAL",LRTUS="P":"PRELIMINARY",1:"")," REPORT => ",Y,"   TECH CODE: ",DZ
"RTN","LRMIPSZ4",130,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",131,0)
 S LRPRE=22 D PRE^LRMIPSU
"RTN","LRMIPSZ4",132,0)
 D QA
"RTN","LRMIPSZ4",133,0)
 ;
"RTN","LRMIPSZ4",134,0)
 I LRBLDTMP K ^TMP("LRMI",$J,LRDFN,"MI",LRIDT)
"RTN","LRMIPSZ4",135,0)
 Q
"RTN","LRMIPSZ4",136,0)
 ;
"RTN","LRMIPSZ4",137,0)
 ;
"RTN","LRMIPSZ4",138,0)
QA ;
"RTN","LRMIPSZ4",139,0)
 ;
"RTN","LRMIPSZ4",140,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15)) D  ;
"RTN","LRMIPSZ4",141,0)
 . W:LRHC !
"RTN","LRMIPSZ4",142,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",143,0)
 . W !,"MYCOLOGY SMEAR/PREP:"
"RTN","LRMIPSZ4",144,0)
 . S LRMYC=0
"RTN","LRMIPSZ4",145,0)
 . F  S LRMYC=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15,LRMYC)) Q:LRMYC<1  W !?5,^(LRMYC,0) D NP Q:LRABORT
"RTN","LRMIPSZ4",146,0)
 ;
"RTN","LRMIPSZ4",147,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9)) D  ;
"RTN","LRMIPSZ4",148,0)
 . W:LRHC !
"RTN","LRMIPSZ4",149,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",150,0)
 . W !,"Fungus/Yeast: "
"RTN","LRMIPSZ4",151,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",152,0)
 . D SHOW
"RTN","LRMIPSZ4",153,0)
 ;
"RTN","LRMIPSZ4",154,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10)) D  ;
"RTN","LRMIPSZ4",155,0)
 . W:LRHC !
"RTN","LRMIPSZ4",156,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",157,0)
 . W !,"Mycology Remark(s):"
"RTN","LRMIPSZ4",158,0)
 . D NP Q:LRABORT
"RTN","LRMIPSZ4",159,0)
 . S LRMYC=0
"RTN","LRMIPSZ4",160,0)
 . F  S LRMYC=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10,LRMYC)) Q:LRMYC<1  W !,?3,^(LRMYC,0) D NP Q:LRABORT
"RTN","LRMIPSZ4",161,0)
 ;
"RTN","LRMIPSZ4",162,0)
 Q
"RTN","LRMIPSZ4",163,0)
 ;
"RTN","LRMIPSZ4",164,0)
 ;
"RTN","LRMIPSZ4",165,0)
SHOW ;
"RTN","LRMIPSZ4",166,0)
 ;
"RTN","LRMIPSZ4",167,0)
 S LRTA=0
"RTN","LRMIPSZ4",168,0)
 F  S LRTA=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,LRTA)) Q:LRTA?.N2A.E!(LRTA<1)  D
"RTN","LRMIPSZ4",169,0)
 . S LRTA=+LRTA
"RTN","LRMIPSZ4",170,0)
 . S (LRBUG(LRTA),LRTBC)=$P(^(LRTA,0),U)
"RTN","LRMIPSZ4",171,0)
 . S LRQU=$P(^(0),U,2)
"RTN","LRMIPSZ4",172,0)
 . S LRTBC=$P(^LAB(61.2,LRTBC,0),U)
"RTN","LRMIPSZ4",173,0)
 . D LIST1
"RTN","LRMIPSZ4",174,0)
 ;
"RTN","LRMIPSZ4",175,0)
 Q
"RTN","LRMIPSZ4",176,0)
 ;
"RTN","LRMIPSZ4",177,0)
 ;
"RTN","LRMIPSZ4",178,0)
LIST1 ;
"RTN","LRMIPSZ4",179,0)
 ;
"RTN","LRMIPSZ4",180,0)
 N B
"RTN","LRMIPSZ4",181,0)
 W !,LRTBC
"RTN","LRMIPSZ4",182,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",183,0)
 I LRQU'="" W !,?3,"Quantity: ",LRQU
"RTN","LRMIPSZ4",184,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ4",185,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,LRTA,1,0)) D  ;
"RTN","LRMIPSZ4",186,0)
 . W !,?3,"Comment:"
"RTN","LRMIPSZ4",187,0)
 . S B=0
"RTN","LRMIPSZ4",188,0)
 . F  S B=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,LRTA,1,B)) Q:B<1  W ?13,^(B,0),! D NP Q:LRABORT
"RTN","LRMIPSZ4",189,0)
 Q
"RTN","LRMIPSZ4",190,0)
 ;
"RTN","LRMIPSZ4",191,0)
 ;
"RTN","LRMIPSZ4",192,0)
NP ;
"RTN","LRMIPSZ4",193,0)
 ; Convenience method
"RTN","LRMIPSZ4",194,0)
 D NP^LRMIPSZ1
"RTN","LRMIPSZ4",195,0)
 Q
"RTN","LRMIPSZ5")
0^11^B61501584
"RTN","LRMIPSZ5",1,0)
LRMIPSZ5 ;DALOI/STAFF - MICRO PATIENT REPORT - BACTERIA, ANTIBIOTICS ;05/24/11  14:37
"RTN","LRMIPSZ5",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMIPSZ5",3,0)
 ;
"RTN","LRMIPSZ5",4,0)
 Q
"RTN","LRMIPSZ5",5,0)
 ;
"RTN","LRMIPSZ5",6,0)
BACT ;
"RTN","LRMIPSZ5",7,0)
 ; from LRMIPSZ2
"RTN","LRMIPSZ5",8,0)
 N A,I,J,K,L,LRABCNT,LRCOMMAX,LRCOMTAB,LRBUG,LRDCOM,LRFMT,LR1PASS,LRBN,LRI,LRINT,LRMAX,LRORG,LRRES,LRSECT,LRTAB,LRWIDTH,LRX,LRY,X,Y
"RTN","LRMIPSZ5",9,0)
 Q:+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,0))<1
"RTN","LRMIPSZ5",10,0)
 S LRFMT=$P(^LAB(69.9,1,0),U,11),LRFMT=$S(LRFMT="":"I",1:LRFMT)
"RTN","LRMIPSZ5",11,0)
 ;
"RTN","LRMIPSZ5",12,0)
 ; Check each organism identified on the specimen.
"RTN","LRMIPSZ5",13,0)
 ;         A = number of organisms on report that have susceptibilities
"RTN","LRMIPSZ5",14,0)
 S (A,LRBUG)=0
"RTN","LRMIPSZ5",15,0)
 F  S LRBUG=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D
"RTN","LRMIPSZ5",16,0)
 . I +$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,2))'["2." Q
"RTN","LRMIPSZ5",17,0)
 . S A=A+1 D CHECK
"RTN","LRMIPSZ5",18,0)
 ;
"RTN","LRMIPSZ5",19,0)
 S (LRBN,LRABCNT)=0
"RTN","LRMIPSZ5",20,0)
 F  S LRBN=+$O(LRRES(LRBN)) Q:LRBN<1  S LRABCNT=LRABCNT+1
"RTN","LRMIPSZ5",21,0)
 Q:'LRABCNT!($G(LREND))
"RTN","LRMIPSZ5",22,0)
 ;
"RTN","LRMIPSZ5",23,0)
 ; Scan result to find longest value, set mininium field width = 4
"RTN","LRMIPSZ5",24,0)
 S (LRI,LRMAX(1))=0
"RTN","LRMIPSZ5",25,0)
 F  S LRI=$O(LRRES(LRI)) Q:'LRI  D
"RTN","LRMIPSZ5",26,0)
 . F I=1:1:A D
"RTN","LRMIPSZ5",27,0)
 . . S X=$L($P(LRRES(LRI),"^",I))
"RTN","LRMIPSZ5",28,0)
 . . I X<4 S X=4
"RTN","LRMIPSZ5",29,0)
 . . I X>$G(LRWIDTH(I,1)) S LRWIDTH(I,1)=X
"RTN","LRMIPSZ5",30,0)
 . . I X>LRMAX(1) S LRMAX(1)=X
"RTN","LRMIPSZ5",31,0)
 ;
"RTN","LRMIPSZ5",32,0)
 ; Scan interpretations to find longest value
"RTN","LRMIPSZ5",33,0)
 S (LRI,LRMAX(2))=0
"RTN","LRMIPSZ5",34,0)
 F  S LRI=$O(LRINT(LRI)) Q:'LRI  D
"RTN","LRMIPSZ5",35,0)
 . F I=1:1:A D
"RTN","LRMIPSZ5",36,0)
 . . S X=$L($P(LRINT(LRI),"^",I))
"RTN","LRMIPSZ5",37,0)
 . . I X<4 S X=4
"RTN","LRMIPSZ5",38,0)
 . . I X>$G(LRWIDTH(I,2)) S LRWIDTH(I,2)=X
"RTN","LRMIPSZ5",39,0)
 . . I X>LRMAX(2) S LRMAX(2)=X
"RTN","LRMIPSZ5",40,0)
 ;
"RTN","LRMIPSZ5",41,0)
 ; Find longest antibiotic display comment to display on report
"RTN","LRMIPSZ5",42,0)
 S (LRCOMMAX,LRI)=0
"RTN","LRMIPSZ5",43,0)
 F  S LRI=$O(^LAB(62.06,LRI)) Q:'LRI  D
"RTN","LRMIPSZ5",44,0)
 . S LRX=$G(^LAB(62.06,LRI,0)) Q:$P(LRX,"^",3)=""
"RTN","LRMIPSZ5",45,0)
 . I '$P(LRX,"^",2) Q
"RTN","LRMIPSZ5",46,0)
 . S LRY=0
"RTN","LRMIPSZ5",47,0)
 . F  S LRY=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRY)) Q:'LRY  D
"RTN","LRMIPSZ5",48,0)
 . . I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRY,$P(LRX,"^",2))) S X=$L($P(LRX,"^",3)) S:X>LRCOMMAX LRCOMMAX=X
"RTN","LRMIPSZ5",49,0)
 ;
"RTN","LRMIPSZ5",50,0)
 ; Check display width so that at least one organsism's values will display when display width is limited
"RTN","LRMIPSZ5",51,0)
 ; 31 character for antibiotic name, possibly 40 character display comments does not leave much space for actual results.
"RTN","LRMIPSZ5",52,0)
 I LRCOMMAX>10,IOM'>80 D
"RTN","LRMIPSZ5",53,0)
 . I LRFMT="B" S X=LRMAX(1)+LRMAX(2)+4
"RTN","LRMIPSZ5",54,0)
 . I LRFMT="R" S X=LRMAX(1)+2
"RTN","LRMIPSZ5",55,0)
 . I LRFMT="I" S X=LRMAX(2)+2
"RTN","LRMIPSZ5",56,0)
 . S X=X+31
"RTN","LRMIPSZ5",57,0)
 . I (X+LRCOMMAX)>IOM S LRCOMMAX=IOM-X
"RTN","LRMIPSZ5",58,0)
 ;
"RTN","LRMIPSZ5",59,0)
 ; Determine tab position (column) of each organism and associated results
"RTN","LRMIPSZ5",60,0)
 ;  LRSECT will indicate if multiple sections needed when number of organisms, results and display comments exceed right margin.
"RTN","LRMIPSZ5",61,0)
 S (LRI,LRWIDTH(0,1),LRWIDTH(0,2))=0,LRSECT=1,LRTAB(LRSECT,0)=29
"RTN","LRMIPSZ5",62,0)
 F  S LRI=$O(LRWIDTH(LRI)) Q:'LRI  D
"RTN","LRMIPSZ5",63,0)
 . S LRX=LRTAB(LRSECT,LRI-1)
"RTN","LRMIPSZ5",64,0)
 . I LRFMT="B" D  Q
"RTN","LRMIPSZ5",65,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,1)+LRWIDTH(LRI-1,2)+4
"RTN","LRMIPSZ5",66,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,1)+LRWIDTH(LRI,2))>IOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LRMIPSZ5",67,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LRMIPSZ5",68,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LRMIPSZ5",69,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+2
"RTN","LRMIPSZ5",70,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LRMIPSZ5",71,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+LRWIDTH(LRI,2)+4
"RTN","LRMIPSZ5",72,0)
 . I LRFMT="I" D  Q
"RTN","LRMIPSZ5",73,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,2)+4
"RTN","LRMIPSZ5",74,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,2))>IOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LRMIPSZ5",75,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LRMIPSZ5",76,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LRMIPSZ5",77,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)
"RTN","LRMIPSZ5",78,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LRMIPSZ5",79,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,2)+2
"RTN","LRMIPSZ5",80,0)
 . I LRFMT="R" D  Q
"RTN","LRMIPSZ5",81,0)
 . . S LRY=LRX+LRWIDTH(LRI-1,1)+4
"RTN","LRMIPSZ5",82,0)
 . . I (LRY+LRCOMMAX+LRWIDTH(LRI,1))>IOM S LRCOMTAB(LRSECT)=LRY,LRY=LRTAB(1,0)+4,LRSECT=LRSECT+1
"RTN","LRMIPSZ5",83,0)
 . . S LRTAB(LRSECT,LRI)=LRY
"RTN","LRMIPSZ5",84,0)
 . . S LRTAB(LRSECT,LRI,1)=LRTAB(LRSECT,LRI)
"RTN","LRMIPSZ5",85,0)
 . . S LRTAB(LRSECT,LRI,2)=LRTAB(LRSECT,LRI)
"RTN","LRMIPSZ5",86,0)
 . . S LRSECT(LRSECT)=$G(LRSECT(LRSECT))_LRI_"^"
"RTN","LRMIPSZ5",87,0)
 . . S LRCOMTAB(LRSECT)=LRTAB(LRSECT,LRI)+LRWIDTH(LRI,1)+2
"RTN","LRMIPSZ5",88,0)
 ;
"RTN","LRMIPSZ5",89,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",90,0)
 W ! D NP Q:LRABORT
"RTN","LRMIPSZ5",91,0)
 ;
"RTN","LRMIPSZ5",92,0)
 W !,"ANTIBIOTIC SUSCEPTIBILITY TEST RESULTS:"
"RTN","LRMIPSZ5",93,0)
 I $D(^XUSEC("LRLAB",DUZ))&'$D(LRWRDVEW) W "  ('*' indicates display is suppressed)"
"RTN","LRMIPSZ5",94,0)
 ;
"RTN","LRMIPSZ5",95,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",96,0)
 ;
"RTN","LRMIPSZ5",97,0)
 ; If hard copy (LRHC=1)
"RTN","LRMIPSZ5",98,0)
 I LRHC W ! D NP Q:LRABORT
"RTN","LRMIPSZ5",99,0)
 ;
"RTN","LRMIPSZ5",100,0)
 S LRSECT=0
"RTN","LRMIPSZ5",101,0)
 F  S LRSECT=$O(LRTAB(LRSECT)) Q:'LRSECT  D SECT
"RTN","LRMIPSZ5",102,0)
 ;
"RTN","LRMIPSZ5",103,0)
 Q
"RTN","LRMIPSZ5",104,0)
 ;
"RTN","LRMIPSZ5",105,0)
 ;
"RTN","LRMIPSZ5",106,0)
SECT ; Print antibiotic susceptibility for each section
"RTN","LRMIPSZ5",107,0)
 ;
"RTN","LRMIPSZ5",108,0)
 N LRAO
"RTN","LRMIPSZ5",109,0)
 ;
"RTN","LRMIPSZ5",110,0)
 D BUGHDR Q:LRABORT
"RTN","LRMIPSZ5",111,0)
 ;
"RTN","LRMIPSZ5",112,0)
 ; Display antibiotics by print order
"RTN","LRMIPSZ5",113,0)
 S LRAO=0
"RTN","LRMIPSZ5",114,0)
 F  S LRAO=$O(^LAB(62.06,"AO",LRAO)) Q:LRAO<.001!($G(LREND))  D  Q:LRABORT
"RTN","LRMIPSZ5",115,0)
 . S B=$O(^LAB(62.06,"AO",LRAO,0))
"RTN","LRMIPSZ5",116,0)
 . I B>0,$D(^LAB(62.06,B,0)) D AB
"RTN","LRMIPSZ5",117,0)
 ;
"RTN","LRMIPSZ5",118,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",119,0)
 W !
"RTN","LRMIPSZ5",120,0)
 D NP
"RTN","LRMIPSZ5",121,0)
 ;
"RTN","LRMIPSZ5",122,0)
 Q
"RTN","LRMIPSZ5",123,0)
 ;
"RTN","LRMIPSZ5",124,0)
 ;
"RTN","LRMIPSZ5",125,0)
CHECK ;
"RTN","LRMIPSZ5",126,0)
 ;
"RTN","LRMIPSZ5",127,0)
 N B,B1,B2,B3,LRBN,LRFLAG,LR1PASS
"RTN","LRMIPSZ5",128,0)
 ;
"RTN","LRMIPSZ5",129,0)
 S LRFLAG=0,LRBN=2
"RTN","LRMIPSZ5",130,0)
 F  S LRBN=+$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,LRBN)) Q:LRBN'["2."!($G(LREND))  D
"RTN","LRMIPSZ5",131,0)
 . S B=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,LRBN),B1=$P(B,U),B2=$P(B,U,2)
"RTN","LRMIPSZ5",132,0)
 . I B1'="" D FIRST
"RTN","LRMIPSZ5",133,0)
 ;
"RTN","LRMIPSZ5",134,0)
 S LRBN=2
"RTN","LRMIPSZ5",135,0)
 F  S LRBN=+$O(LR1PASS(LRBN)) Q:LRBN<1!($G(LREND))  D
"RTN","LRMIPSZ5",136,0)
 . S B=LR1PASS(LRBN),B1=$P(B,U),B2=$P(B,U,2),B3=$P(B,U,3)
"RTN","LRMIPSZ5",137,0)
 . D LAB
"RTN","LRMIPSZ5",138,0)
 ;
"RTN","LRMIPSZ5",139,0)
 S LRBUG(A)=LRBUG
"RTN","LRMIPSZ5",140,0)
 ;
"RTN","LRMIPSZ5",141,0)
 Q
"RTN","LRMIPSZ5",142,0)
 ;
"RTN","LRMIPSZ5",143,0)
 ;
"RTN","LRMIPSZ5",144,0)
FIRST ;
"RTN","LRMIPSZ5",145,0)
 ;
"RTN","LRMIPSZ5",146,0)
 ; If format is 'interpretation only' and no interpretation for this sensitivity then display sensitivity result in it's place.
"RTN","LRMIPSZ5",147,0)
 I B2="" S B2=$S(LRFMT="I":B1,1:" ")
"RTN","LRMIPSZ5",148,0)
 ;
"RTN","LRMIPSZ5",149,0)
 S B3=$P(B,U,3)
"RTN","LRMIPSZ5",150,0)
 I B2'=" ",$E(B2)'="R","A"[B3 S LRFLAG=1
"RTN","LRMIPSZ5",151,0)
 S LR1PASS(LRBN)=B1_U_B2_U_B3
"RTN","LRMIPSZ5",152,0)
 S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG,LRBN),U,1,3)=LR1PASS(LRBN)
"RTN","LRMIPSZ5",153,0)
 Q
"RTN","LRMIPSZ5",154,0)
 ;
"RTN","LRMIPSZ5",155,0)
 ;
"RTN","LRMIPSZ5",156,0)
LAB ;
"RTN","LRMIPSZ5",157,0)
 I $D(^XUSEC("LRLAB",DUZ)),'$D(LRWRDVEW) D  Q
"RTN","LRMIPSZ5",158,0)
 . S $P(LRRES(LRBN),U,A)=$S(B3="N"!(B3="R"&LRFLAG):B1_"*",1:B1)
"RTN","LRMIPSZ5",159,0)
 . S $P(LRINT(LRBN),U,A)=$S(B3="N"!(B3="R"&LRFLAG):B2_"*",1:B2)
"RTN","LRMIPSZ5",160,0)
 ;
"RTN","LRMIPSZ5",161,0)
 I B3=""!(B3="A")!(B3="R"&'LRFLAG) S $P(LRRES(LRBN),U,A)=B1,$P(LRINT(LRBN),U,A)=B2
"RTN","LRMIPSZ5",162,0)
 Q
"RTN","LRMIPSZ5",163,0)
 ;
"RTN","LRMIPSZ5",164,0)
 ;
"RTN","LRMIPSZ5",165,0)
AB ;
"RTN","LRMIPSZ5",166,0)
 N PGNUM,LRX
"RTN","LRMIPSZ5",167,0)
 Q:$G(LREND)
"RTN","LRMIPSZ5",168,0)
 S LRX=$G(^LAB(62.06,B,0)),J=$P(LRX,"^",2)
"RTN","LRMIPSZ5",169,0)
 I J<1 Q
"RTN","LRMIPSZ5",170,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",171,0)
 I '$D(LRINT(J)) Q
"RTN","LRMIPSZ5",172,0)
 I LRINT(J)'="",LRINT(J)?."^" Q
"RTN","LRMIPSZ5",173,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",174,0)
 ;
"RTN","LRMIPSZ5",175,0)
 ; Write name of antibiotic
"RTN","LRMIPSZ5",176,0)
 W !,$$LJ^XLFSTR($P(LRX,U),30,".")
"RTN","LRMIPSZ5",177,0)
 ;
"RTN","LRMIPSZ5",178,0)
 ; Antibiotic display comment from file #62.06
"RTN","LRMIPSZ5",179,0)
 K LRDCOM(0)
"RTN","LRMIPSZ5",180,0)
 S LRDCOM=$P(LRX,U,3)
"RTN","LRMIPSZ5",181,0)
 ; If longer than comment window (IOM-LRCOMTAB) then format to fit within window.
"RTN","LRMIPSZ5",182,0)
 I $L(LRDCOM)>(IOM-LRCOMTAB(LRSECT)) D
"RTN","LRMIPSZ5",183,0)
 . N J,K,L
"RTN","LRMIPSZ5",184,0)
 . S J=$L(LRDCOM),K=0,L=IOM-LRCOMTAB(LRSECT)-1
"RTN","LRMIPSZ5",185,0)
 . F  Q:LRDCOM=""  S K=K+1,LRDCOM(0,K)=$E(LRDCOM,1,L),LRDCOM=$E(LRDCOM,L+1,J)
"RTN","LRMIPSZ5",186,0)
 ;
"RTN","LRMIPSZ5",187,0)
 D SIR
"RTN","LRMIPSZ5",188,0)
 ;
"RTN","LRMIPSZ5",189,0)
 S PGNUM=LRPG
"RTN","LRMIPSZ5",190,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",191,0)
 I LRPG>PGNUM D BUGHDR D NP
"RTN","LRMIPSZ5",192,0)
 Q
"RTN","LRMIPSZ5",193,0)
 ;
"RTN","LRMIPSZ5",194,0)
 ;
"RTN","LRMIPSZ5",195,0)
BUGHDR ;
"RTN","LRMIPSZ5",196,0)
 ;
"RTN","LRMIPSZ5",197,0)
 N A,J
"RTN","LRMIPSZ5",198,0)
 F J=1:1 S LRBUG=$P(LRSECT(LRSECT),"^",J) Q:LRBUG=""!($G(LREND))  D
"RTN","LRMIPSZ5",199,0)
 . S LRORG=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG(LRBUG),0),U),LRORG=$P(^LAB(61.2,LRORG,0),U)
"RTN","LRMIPSZ5",200,0)
 . I +$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,LRBUG(LRBUG),2))'["2." Q
"RTN","LRMIPSZ5",201,0)
 . D ORG
"RTN","LRMIPSZ5",202,0)
 ;
"RTN","LRMIPSZ5",203,0)
 I LRFMT="B" D
"RTN","LRMIPSZ5",204,0)
 . W !
"RTN","LRMIPSZ5",205,0)
 . F J=1:1 S A=$P(LRSECT(LRSECT),"^",J) Q:A=""  W ?LRTAB(LRSECT,A),":"
"RTN","LRMIPSZ5",206,0)
 ;
"RTN","LRMIPSZ5",207,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",208,0)
 W !
"RTN","LRMIPSZ5",209,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",210,0)
 ;
"RTN","LRMIPSZ5",211,0)
 F J=1:1 S A=$P(LRSECT(LRSECT),"^",J) Q:A=""  D
"RTN","LRMIPSZ5",212,0)
 . I LRFMT'="B" W ?LRTAB(LRSECT,A),":"
"RTN","LRMIPSZ5",213,0)
 . I LRFMT="B" W ?LRTAB(LRSECT,A,1),"SUSC",?LRTAB(LRSECT,A,2),"INTP"
"RTN","LRMIPSZ5",214,0)
 ;
"RTN","LRMIPSZ5",215,0)
 D NP
"RTN","LRMIPSZ5",216,0)
 Q
"RTN","LRMIPSZ5",217,0)
 ;
"RTN","LRMIPSZ5",218,0)
 ;
"RTN","LRMIPSZ5",219,0)
ORG ;
"RTN","LRMIPSZ5",220,0)
 ;
"RTN","LRMIPSZ5",221,0)
 ; LR2ORMOR flag indicating 2 or more organsims on report - set in LRMIPSZ2.
"RTN","LRMIPSZ5",222,0)
 ;
"RTN","LRMIPSZ5",223,0)
 N J
"RTN","LRMIPSZ5",224,0)
 W !
"RTN","LRMIPSZ5",225,0)
 D NP Q:LRABORT
"RTN","LRMIPSZ5",226,0)
 ;
"RTN","LRMIPSZ5",227,0)
 I LRBUG>$P(LRSECT(LRSECT),"^") F J=1:1 Q:$P(LRSECT(LRSECT),"^",J)=LRBUG  W ?LRTAB(LRSECT,$P(LRSECT(LRSECT),"^",J)),":"
"RTN","LRMIPSZ5",228,0)
 ;
"RTN","LRMIPSZ5",229,0)
 W ?LRTAB(LRSECT,LRBUG),$S(LR2ORMOR:LRBUG(LRBUG)_". ",1:""),LRORG
"RTN","LRMIPSZ5",230,0)
 D NP
"RTN","LRMIPSZ5",231,0)
 Q
"RTN","LRMIPSZ5",232,0)
 ;
"RTN","LRMIPSZ5",233,0)
 ;
"RTN","LRMIPSZ5",234,0)
SIR ; Display the susceptibility results/interpretations
"RTN","LRMIPSZ5",235,0)
 ;
"RTN","LRMIPSZ5",236,0)
 N II,K
"RTN","LRMIPSZ5",237,0)
 ;
"RTN","LRMIPSZ5",238,0)
 F K=1:1 S II=$P(LRSECT(LRSECT),"^",K) Q:II=""  D
"RTN","LRMIPSZ5",239,0)
 . I LRFMT="B" D  Q
"RTN","LRMIPSZ5",240,0)
 . . W ?LRTAB(LRSECT,II,1),$P($G(LRRES(J)),U,II)
"RTN","LRMIPSZ5",241,0)
 . . W ?LRTAB(LRSECT,II,2),$P(LRINT(J),U,II),"  "
"RTN","LRMIPSZ5",242,0)
 . I LRFMT="I" W ?LRTAB(LRSECT,II,2),$P(LRINT(J),U,II)," " Q
"RTN","LRMIPSZ5",243,0)
 . I LRFMT="R" W ?LRTAB(LRSECT,II,1),$P(LRRES(J),U,II)," " Q
"RTN","LRMIPSZ5",244,0)
 ;
"RTN","LRMIPSZ5",245,0)
 D DCOM
"RTN","LRMIPSZ5",246,0)
 Q
"RTN","LRMIPSZ5",247,0)
 ;
"RTN","LRMIPSZ5",248,0)
 ;
"RTN","LRMIPSZ5",249,0)
DCOM ;
"RTN","LRMIPSZ5",250,0)
 N A,K
"RTN","LRMIPSZ5",251,0)
 ;
"RTN","LRMIPSZ5",252,0)
 I LRDCOM'="" D
"RTN","LRMIPSZ5",253,0)
 . I LRCOMTAB(LRSECT)<$X,$L(LRDCOM)>(IOM-$X) W !
"RTN","LRMIPSZ5",254,0)
 . W ?LRCOMTAB(LRSECT),LRDCOM
"RTN","LRMIPSZ5",255,0)
 ;
"RTN","LRMIPSZ5",256,0)
 I $D(LRDCOM(0)) D
"RTN","LRMIPSZ5",257,0)
 . N J
"RTN","LRMIPSZ5",258,0)
 . S J=0
"RTN","LRMIPSZ5",259,0)
 . F  S J=$O(LRDCOM(0,J)) Q:'J  W:J'=1 ! W ?LRCOMTAB(LRSECT),LRDCOM(0,J)
"RTN","LRMIPSZ5",260,0)
 ;
"RTN","LRMIPSZ5",261,0)
 I $D(LRDCOM(J)) D
"RTN","LRMIPSZ5",262,0)
 . S K=0,A=0
"RTN","LRMIPSZ5",263,0)
 . F  S A=+$O(LRDCOM(J,A)) Q:A<1  D
"RTN","LRMIPSZ5",264,0)
 . . I '('K&(LRDCOM="")) W !
"RTN","LRMIPSZ5",265,0)
 . . W ?LRCOMTAB(LRSECT),LRDCOM(J,A) S K=1
"RTN","LRMIPSZ5",266,0)
 Q
"RTN","LRMIPSZ5",267,0)
 ;
"RTN","LRMIPSZ5",268,0)
 ;
"RTN","LRMIPSZ5",269,0)
NHDR ;
"RTN","LRMIPSZ5",270,0)
 F X=1:1 W ! Q:$Y>(IOSL-LRFLIP)
"RTN","LRMIPSZ5",271,0)
 Q:$G(LREND)  I 'LRHC D FH^LRMIPSU Q
"RTN","LRMIPSZ5",272,0)
 W ! F X=1:1:IOM W "-"
"RTN","LRMIPSZ5",273,0)
 W !,"PATIENT'S IDENTIFICATION",?60,"MICROBIOLOGY REPORT"
"RTN","LRMIPSZ5",274,0)
 W !!,PNM,?$X+3,SSN,?$X+3,SEX,?$X+3,"DOB: ",DOB,"  WARD: ",LRWRD,!,"ADM: ",LRADM,"   ADM DX: ",LRADX
"RTN","LRMIPSZ5",275,0)
 S LRPG=LRPG+1
"RTN","LRMIPSZ5",276,0)
 W @IOF,!,?18,"MICROBIOLOGY LAB ",$$INS^LRU
"RTN","LRMIPSZ5",277,0)
 W ?$X+10,$$HTE^XLFDT($H,"D"),!
"RTN","LRMIPSZ5",278,0)
 F X=1:1:IOM W "-"
"RTN","LRMIPSZ5",279,0)
 W !,"ACCESSION: ",LRACC,?25,"TAKEN:",LRTK,?52,"RECEIVED:",LRRC
"RTN","LRMIPSZ5",280,0)
 Q
"RTN","LRMIPSZ5",281,0)
 ;
"RTN","LRMIPSZ5",282,0)
 ;
"RTN","LRMIPSZ5",283,0)
NP ;
"RTN","LRMIPSZ5",284,0)
 ; Convenience method
"RTN","LRMIPSZ5",285,0)
 D NP^LRMIPSZ1
"RTN","LRMIPSZ5",286,0)
 Q
"RTN","LRMISEZ")
0^109^B11672648
"RTN","LRMISEZ",1,0)
LRMISEZ ;DALOI/REG/SLC/BA - MICROBIOLOGY INFECTION CONTROL DATA ;11/18/11  16:08
"RTN","LRMISEZ",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMISEZ",3,0)
 ;
"RTN","LRMISEZ",4,0)
 ;from option LRMISEZ
"RTN","LRMISEZ",5,0)
BEGIN ;
"RTN","LRMISEZ",6,0)
 S U="^",LRLOS=0 S:'$D(DTIME) DTIME=999 K ^TMP($J)
"RTN","LRMISEZ",7,0)
 S IOP="HOME" D ^%ZIS,SURVEY
"RTN","LRMISEZ",8,0)
 W !
"RTN","LRMISEZ",9,0)
 D ^%ZISC
"RTN","LRMISEZ",10,0)
 ;
"RTN","LRMISEZ",11,0)
END ;
"RTN","LRMISEZ",12,0)
 K ^TMP($J)
"RTN","LRMISEZ",13,0)
 K %,%DT,A1,B,DFN,DIC,DTOUT,DUOUT,I,J,K,LAST,LRAA,LRAAN,LRAC,LRAD,LRADMD,LRADMS,LRAP,LRAO,LRASK,LRBG,LRBN,LRBO,LRBUG,LRDAT,LRDCHD,LRDFN
"RTN","LRMISEZ",14,0)
 K LRDOC,LRDPF,LRDRUG,LREND,LRESULT,LRIDT,LRLLOC,LRLOS,LRLST,LRM,LRMY,LRNAME,LRND,LRNLOC,LROK,LROR,LRPAT,LRPF,LRPG,LRPNM,LRPPT,LRPROMPT,LRQUANT,LRSGL,LRSIT,LRST,LRSTAR,LRSUM,LRTK
"RTN","LRMISEZ",15,0)
 K LRYA,LRYRL,M,O,PNM,POP,R,S,SSN,X,Y,Z,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,LRZ,LRLIN
"RTN","LRMISEZ",16,0)
 Q
"RTN","LRMISEZ",17,0)
 ;
"RTN","LRMISEZ",18,0)
 ;
"RTN","LRMISEZ",19,0)
SURVEY ;
"RTN","LRMISEZ",20,0)
 W @IOF,?19,"INFECTION CONTROL SURVEY DATA",!!
"RTN","LRMISEZ",21,0)
 D LRAA^LRMIUT Q:LRAA<1
"RTN","LRMISEZ",22,0)
 S LRAAN=$P(^LRO(68,LRAA,0),U,11)
"RTN","LRMISEZ",23,0)
 ;
"RTN","LRMISEZ",24,0)
 F I=0:0 S %=1 W !!,"Use default reports" D YN^DICN Q:%'=0  D INFO
"RTN","LRMISEZ",25,0)
 Q:%<0
"RTN","LRMISEZ",26,0)
 S (LRM("L","S"),LRM("O","S"),LRM("D","S"),LRM("P","S"))="Unknown"
"RTN","LRMISEZ",27,0)
 S LRSIT(1)=$S($D(^LAB(69.9,1,"MIS","B","C")):"C",1:"S")
"RTN","LRMISEZ",28,0)
 F I="L","P","D","O" S LRM(I)=$S($D(^LAB(69.9,1,"MIS","B",I)):"A",1:"N")
"RTN","LRMISEZ",29,0)
 I %=2 S LREND=0 D ^LRMISEZA Q:LREND
"RTN","LRMISEZ",30,0)
 I LRM("L")="N",LRM("O")="N",LRM("D")="N",LRM("P")="N" W !,"No reports were selected!" Q
"RTN","LRMISEZ",31,0)
 S %DT="AEQ",%DT("A")="Start  Date: " D ^%DT K %DT Q:Y<0  S LRSTAR=Y D D^LRU S LRST=Y I $E(LRSTAR,6,7)="00" S LRSTAR=$S($E(LRSTAR,4,7)="0000":LRSTAR+10000,$E(LRSTAR,4,5)="12":LRSTAR+10100,1:LRSTAR+100)
"RTN","LRMISEZ",32,0)
 S %DT="AEQ",%DT("A")="End    Date: " D ^%DT K %DT Q:Y<0  S LAST=Y D D^LRU S LRLST=Y Q:Y<0  I LRSTAR>LAST S X=LRSTAR,LRSTAR=LAST,LAST=X,X=LRST,LRST=LRLST,LRLST=X
"RTN","LRMISEZ",33,0)
 S Y=LRSTAR D D^LRU S LRST=Y,Y=LAST D D^LRU S LRLST=Y,LRAD=$E(LRSTAR,1,3)-1_"0000",LRYRL=$E(LAST,1,3)_"0000",LAST=LAST\1+.99
"RTN","LRMISEZ",34,0)
 ;
"RTN","LRMISEZ",35,0)
DEVICE ;
"RTN","LRMISEZ",36,0)
 S %ZIS="NMQ",%ZIS("B")=""
"RTN","LRMISEZ",37,0)
 W ! D ^%ZIS K %ZIS Q:POP
"RTN","LRMISEZ",38,0)
 ;S %DT="AET",%DT("A")="TIME TO RUN: T+1@1AM//" D ^%DT S:Y>0 ZTDTH=Y I Y'>0 S %DT="T",X="T+1@1AM" D ^%DT S ZTDTH=Y
"RTN","LRMISEZ",39,0)
 I '$D(IO("Q")) D DQ^LRMISEZ1 Q
"RTN","LRMISEZ",40,0)
 S ZTRTN="DQ^LRMISEZ1",ZTSAVE("L*")="" D ^%ZTLOAD K IO("Q"),ZTSK,ZTRTN,ZTIO,ZTSAVE
"RTN","LRMISEZ",41,0)
 Q
"RTN","LRMISEZ",42,0)
 ;
"RTN","LRMISEZ",43,0)
 ;
"RTN","LRMISEZ",44,0)
INFO ;
"RTN","LRMISEZ",45,0)
 W !,"Default reports are setup in the Laboratory Site file, 69.9."
"RTN","LRMISEZ",46,0)
 W !,"If you answer 'NO', you can select individual surveys grouped by:"
"RTN","LRMISEZ",47,0)
 W !,"organism, location, patient, and/or physician.  You can select all items"
"RTN","LRMISEZ",48,0)
 W !,"or a single item for each group.  You can also select to have all groups"
"RTN","LRMISEZ",49,0)
 W !,"contain a survey of a single organism.  Surveys can be reported by"
"RTN","LRMISEZ",50,0)
 W !,"Site/Specimen or Collection sample."
"RTN","LRMISEZ",51,0)
 Q
"RTN","LRMISEZB")
0^110^B12235566
"RTN","LRMISEZB",1,0)
LRMISEZB ;DALOI/REG/SLC/BA - MICROBIOLOGY INFECTION CONTROL DATA ;11/18/11  16:13
"RTN","LRMISEZB",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMISEZB",3,0)
 ;
"RTN","LRMISEZB",4,0)
 ;from LRMISEZ1
"RTN","LRMISEZB",5,0)
 ;
"RTN","LRMISEZB",6,0)
START I $D(LRAP) D AP Q
"RTN","LRMISEZB",7,0)
 S LROR=0 F I=0:0 S LROR=$O(^LR(LRDFN,"MI",LRIDT,3,LROR)) Q:LROR<1  S LRBUG=+^(LROR,0),LRQUANT=$P(^(0),U,2),LRBUG=$S('$D(LRSGL):LRBUG,LRSGL=LRBUG:LRBUG,1:0) D:LRBUG SETUP
"RTN","LRMISEZB",8,0)
 Q
"RTN","LRMISEZB",9,0)
 ;
"RTN","LRMISEZB",10,0)
 ;
"RTN","LRMISEZB",11,0)
AP S LROR=0 F I=0:0 S LROR=$O(^LR(LRDFN,"MI",LRIDT,3,LROR)) Q:LROR<1  S LROK=1 D APCHK I LROK S LRBUG=+^LR(LRDFN,"MI",LRIDT,3,LROR,0),LRQUANT=$P(^(0),U,2),LRBUG=$S('$D(LRSGL):LRBUG,LRSGL=LRBUG:LRBUG,1:0) D:LRBUG SETUP
"RTN","LRMISEZB",12,0)
 Q
"RTN","LRMISEZB",13,0)
 ;
"RTN","LRMISEZB",14,0)
 ;
"RTN","LRMISEZB",15,0)
APCHK S LRBN=0 F I=0:0 S LRBN=$O(LRAP(LRBN)) Q:LRBN=""  S:'$D(^LR(LRDFN,"MI",LRIDT,3,LROR,LRBN)) LROK=0 Q:'LROK  I $L(^(LRBN)) S LROK=$S($L($P(^(LRBN),U,2)):$P(^(LRBN),U,2)=LRAP(LRBN),1:$P(^(LRBN),U)=LRAP(LRBN)) Q
"RTN","LRMISEZB",16,0)
 Q
"RTN","LRMISEZB",17,0)
 ;
"RTN","LRMISEZB",18,0)
 ;
"RTN","LRMISEZB",19,0)
SETUP S X=$P(^LAB(61.2,LRBUG,0),U,3),LRBUG=$S($L(X):$E(X,1),1:" ")_$E(^(0),1,2)_LRBUG,LRESULT=LRDAT_U_SSN_U_LRQUANT
"RTN","LRMISEZB",20,0)
 S:LRM("L")="A"!(LRM("L")="S"&(LRM("L","S")=LRLLOC)) ^TMP($J,"LOC",LRMY,LRLLOC,LRNAME,LRSIT,LRAC,LROR,LRBUG)=LRESULT
"RTN","LRMISEZB",21,0)
 I LRM("L")'="A"!(LRM("O")'="A") S:LRM("O")="A"!(LRM("O")="S"&(LRM("O","S")=+$E(LRBUG,4,25))) ^TMP($J,"ORG",LRMY,LRLLOC,LRNAME,LRSIT,LRAC,LROR,LRBUG)=LRESULT
"RTN","LRMISEZB",22,0)
 S:LRM("D")="A"!(LRM("D")="S"&(LRM("D","S")=LRDOC)) ^TMP($J,"DOC",LRMY,LRDOC,LRNAME,LRSIT,LRAC,LROR,LRBUG)=LRESULT
"RTN","LRMISEZB",23,0)
 S:LRM("P")="A"!(LRM("P")="S"&(LRM("P","S")=LRDFN)) ^TMP($J,"PAT",LRMY,LRNAME,LRNAME,LRSIT,LRAC,LROR,LRBUG)=LRESULT
"RTN","LRMISEZB",24,0)
 F S=2:0 S S=$O(^LR(LRDFN,"MI",LRIDT,3,LROR,S)) Q:S=""!(S'<3)  I $D(^LAB(62.06,"AI",S)),$L($P(^(S),U,2)) D BUG2A
"RTN","LRMISEZB",25,0)
 Q
"RTN","LRMISEZB",26,0)
 ;
"RTN","LRMISEZB",27,0)
 ;
"RTN","LRMISEZB",28,0)
BUG2A S R=^LR(LRDFN,"MI",LRIDT,3,LROR,S) Q:'$L($P(R,U))
"RTN","LRMISEZB",29,0)
 S LRESULT=$S($L($P(R,U,2)):$E($P(R,U,2)),1:$P(R,U)),LRDRUG=$P(^LAB(62.06,"AI",S),U)
"RTN","LRMISEZB",30,0)
 S:LRM("L")="A"!(LRM("L")="S"&(LRM("L","S")=LRLLOC)) ^TMP($J,"LOC",LRMY,LRLLOC,LRNAME,LRSIT,LRAC,LROR,LRBUG,LRDRUG)=LRESULT
"RTN","LRMISEZB",31,0)
 I LRM("L")'="A"!(LRM("O")'="A") S:LRM("O")="A"!(LRM("O")="S"&(LRM("O","S")=+$E(LRBUG,4,25))) ^TMP($J,"ORG",LRMY,LRLLOC,LRNAME,LRSIT,LRAC,LROR,LRBUG,LRDRUG)=LRESULT
"RTN","LRMISEZB",32,0)
 S:LRM("D")="A"!(LRM("D")="S"&(LRM("D","S")=LRDOC)) ^TMP($J,"DOC",LRMY,LRDOC,LRNAME,LRSIT,LRAC,LROR,LRBUG,LRDRUG)=LRESULT
"RTN","LRMISEZB",33,0)
 S:LRM("P")="A"!(LRM("P")="S"&(LRM("P","S")=LRDFN)) ^TMP($J,"PAT",LRMY,LRNAME,LRNAME,LRSIT,LRAC,LROR,LRBUG,LRDRUG)=LRESULT
"RTN","LRMISEZB",34,0)
 Q
"RTN","LRMISR1")
0^180^B5768153
"RTN","LRMISR1",1,0)
LRMISR1 ;DALOI/STAFF - INPUT TRANSFORM FOR ANTIBIOTIC SENSITIVITIES ;Sep 23, 2008
"RTN","LRMISR1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRMISR1",3,0)
 ;
"RTN","LRMISR1",4,0)
STAR ; from LRMISR
"RTN","LRMISR1",5,0)
 I $P(X,"*",3,4)["*" K X Q
"RTN","LRMISR1",6,0)
 S LRSCREEN=$P(X,"*",3),LRISR=$P(X,"*",2),X=$P(X,"*") I '$L(X) K X Q
"RTN","LRMISR1",7,0)
 I '$D(^LAB(62.06,C6,1,"B",X))!(LRSCREEN=""&LRISR="") K X Q
"RTN","LRMISR1",8,0)
 S LRBN=+$P(DQ(DQ),U,4) Q:'LRBN
"RTN","LRMISR1",9,0)
 I LRISR'="",'$D(^LAB(62.06,"AJ",$P($P(DQ(DQ),U,4),";"),LRISR)) K X Q
"RTN","LRMISR1",10,0)
 I LRSCREEN'="",LRSCREEN'?1(1"A",1"R",1"N") K X Q
"RTN","LRMISR1",11,0)
 I LRISR="" S LRR=X D INTRP
"RTN","LRMISR1",12,0)
 I LRSCREEN="" D SCREEN
"RTN","LRMISR1",13,0)
 Q
"RTN","LRMISR1",14,0)
 ;
"RTN","LRMISR1",15,0)
 ;
"RTN","LRMISR1",16,0)
IS ; from LRMISR
"RTN","LRMISR1",17,0)
 D INTRP,SCREEN
"RTN","LRMISR1",18,0)
 Q
"RTN","LRMISR1",19,0)
 ;
"RTN","LRMISR1",20,0)
 ;
"RTN","LRMISR1",21,0)
INTRP ; from LRMISR
"RTN","LRMISR1",22,0)
 S LRISR=$G(^LAB(62.06,"AI",LRBN,LRR)) Q:'$D(LRBG1)!'$D(LRSPEC)!('$L(LRISR))
"RTN","LRMISR1",23,0)
 I $O(^LAB(62.06,"AI",LRBN,LRR,0))="" Q
"RTN","LRMISR1",24,0)
 I $D(^LAB(62.06,"AI",LRBN,LRR,+LRBG1)) S C2=+LRBG1 D SPEC Q
"RTN","LRMISR1",25,0)
 I $P(^LAB(61.2,+LRBG1,0),U,3)="P",$D(^LAB(62.06,"AI",LRBN,LRR,"GRAM POS")) S C2="GRAM POS" D SPEC Q
"RTN","LRMISR1",26,0)
 I $P(^LAB(61.2,+LRBG1,0),U,3)="N",$D(^LAB(62.06,"AI",LRBN,LRR,"GRAM NEG")) S C2="GRAM NEG" D SPEC Q
"RTN","LRMISR1",27,0)
 I $D(^LAB(62.06,"AI",LRBN,LRR,"ANY")) S C2="ANY" D SPEC
"RTN","LRMISR1",28,0)
 Q
"RTN","LRMISR1",29,0)
 ;
"RTN","LRMISR1",30,0)
 ;
"RTN","LRMISR1",31,0)
SPEC ;
"RTN","LRMISR1",32,0)
 I $D(^LAB(62.06,"AI",LRBN,LRR,C2,LRSPEC)) S C4=LRSPEC D ALT Q
"RTN","LRMISR1",33,0)
 I $D(^LAB(62.06,"AI",LRBN,LRR,C2,"ANY")) S C4="ANY" D ALT
"RTN","LRMISR1",34,0)
 Q
"RTN","LRMISR1",35,0)
 ;
"RTN","LRMISR1",36,0)
 ;
"RTN","LRMISR1",37,0)
ALT ;
"RTN","LRMISR1",38,0)
 S LRISR=$P(^LAB(62.06,"AI",LRBN,LRR,C2,C4),U)
"RTN","LRMISR1",39,0)
 Q
"RTN","LRMISR1",40,0)
 ;
"RTN","LRMISR1",41,0)
 ;
"RTN","LRMISR1",42,0)
SCREEN ;
"RTN","LRMISR1",43,0)
 S LRSCREEN=^LAB(62.06,"AS",LRBN) Q:'$D(LRBG1)!'$D(LRSPEC)
"RTN","LRMISR1",44,0)
 I $O(^LAB(62.06,"AS",LRBN,0))="" Q
"RTN","LRMISR1",45,0)
 I $D(^LAB(62.06,"AS",LRBN,+LRBG1)) S C2=+LRBG1 D SSPEC Q
"RTN","LRMISR1",46,0)
 I $P(^LAB(61.2,+LRBG1,0),U,3)="P",$D(^LAB(62.06,"AS",LRBN,"GRAM POS")) S C2="GRAM POS" D SSPEC Q
"RTN","LRMISR1",47,0)
 I $P(^LAB(61.2,+LRBG1,0),U,3)="N",$D(^LAB(62.06,"AS",LRBN,"GRAM NEG")) S C2="GRAM NEG" D SSPEC Q
"RTN","LRMISR1",48,0)
 I $D(^LAB(62.06,"AS",LRBN,"ANY")) S C2="ANY" D SSPEC
"RTN","LRMISR1",49,0)
 Q
"RTN","LRMISR1",50,0)
 ;
"RTN","LRMISR1",51,0)
 ;
"RTN","LRMISR1",52,0)
SSPEC ;
"RTN","LRMISR1",53,0)
 I $D(^LAB(62.06,"AS",LRBN,C2,LRSPEC)) S C4=LRSPEC D SALT Q
"RTN","LRMISR1",54,0)
 I $D(^LAB(62.06,"AS",LRBN,C2,"ANY")) S C4="ANY" D SALT
"RTN","LRMISR1",55,0)
 Q
"RTN","LRMISR1",56,0)
 ;
"RTN","LRMISR1",57,0)
 ;
"RTN","LRMISR1",58,0)
SALT ;
"RTN","LRMISR1",59,0)
 S LRSCREEN=^LAB(62.06,"AS",LRBN,C2,C4)
"RTN","LRMISR1",60,0)
 Q
"RTN","LRMISTF1")
0^117^B39570376
"RTN","LRMISTF1",1,0)
LRMISTF1 ;DALOI/STAFF - MASS DATA ENTRY INTO FILE 63.05 ;Jan 15, 2009
"RTN","LRMISTF1",2,0)
 ;;5.2;LAB SERVICE;**121,128,202,263,264,295,350**;Sep 27, 1994;Build 230
"RTN","LRMISTF1",3,0)
 ;
"RTN","LRMISTF1",4,0)
 ; from LRMISTF
"RTN","LRMISTF1",5,0)
 ;
"RTN","LRMISTF1",6,0)
ASK ;
"RTN","LRMISTF1",7,0)
 N LRAUTO,LRDUZ,LRIEN,LRPLREF
"RTN","LRMISTF1",8,0)
 ;
"RTN","LRMISTF1",9,0)
 F  D GET Q:LREND=99  D:'LREND ACC S:LREND LREND=0 D MORE Q:LREND  K LRAUTO
"RTN","LRMISTF1",10,0)
 Q
"RTN","LRMISTF1",11,0)
 ;
"RTN","LRMISTF1",12,0)
 ;
"RTN","LRMISTF1",13,0)
GET ;
"RTN","LRMISTF1",14,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRSTUFF,X,Y
"RTN","LRMISTF1",15,0)
 ;
"RTN","LRMISTF1",16,0)
 S X1="",LREND=0
"RTN","LRMISTF1",17,0)
 I LRMODE<3 D
"RTN","LRMISTF1",18,0)
 . F  R !,"What do you want entered?: ",X1:DTIME Q:'$T!(X1[U)!(X1="")  D  I $L(X1),$E(X1)'="?" S LREND=0 Q
"RTN","LRMISTF1",19,0)
 . . I $S(X1[":":1,X1[";":1,1:0) S X1="?" D INFO Q
"RTN","LRMISTF1",20,0)
 . . S X=X1 S:X[";" X="?" D @$S($G(H9)=11.57:"PN^LRNUM",$G(H9)=24:"AFS^LRNUM",1:"^LRMIXPD") S:'$D(X) X1="?" Q:X1'="?"  D INFO
"RTN","LRMISTF1",21,0)
 I X1[U S LREND=99 Q
"RTN","LRMISTF1",22,0)
 ;
"RTN","LRMISTF1",23,0)
 S:LRMODE<3 LRSTUFF=X1
"RTN","LRMISTF1",24,0)
 W !,"I will ",$S(LRMODE=1:"automatically stuff ",1:"prompt "),LRMF W:$D(LRSTUFF) !,"with ",LRSTUFF
"RTN","LRMISTF1",25,0)
 F  W !,"   ...OK" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",26,0)
 I %'=1 S LREND=1 Q
"RTN","LRMISTF1",27,0)
 ;
"RTN","LRMISTF1",28,0)
 I LRPF="P" S DR="S:$S($D(^LR(LRDFN,""MI"",LRIDT,"_LRSB_")):$P(^("_LRSB_"),U,2),1:"""")=""F"" Y="_$S(LRSB=1:11.55,LRSB=5:15.5,LRSB=8:19.5,LRSB=11:25.5,LRSB=16:35)_";"
"RTN","LRMISTF1",29,0)
 I LRPF="F" S DR=""
"RTN","LRMISTF1",30,0)
 S DR=DR_$S(LRSB=1:"11.5///"_LRPF_";11.55",LRSB=5:"15///"_LRPF_";15.5",LRSB=8:"19///"_LRPF_";19.5",LRSB=11:"23///"_LRPF_";25.5",1:"34///"_LRPF_";35")
"RTN","LRMISTF1",31,0)
 S DR=DR_"////"_DUZ_";"_H9_$S(LRMODE=1:"///"_LRSTUFF,LRMODE=2:"//"_LRSTUFF,1:"")
"RTN","LRMISTF1",32,0)
 ;
"RTN","LRMISTF1",33,0)
 K DIR
"RTN","LRMISTF1",34,0)
 S DIR(0)="YO",DIR("A")="Verify all work automatically",DIR("B")="Yes"
"RTN","LRMISTF1",35,0)
 D ^DIR
"RTN","LRMISTF1",36,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRMISTF1",37,0)
 I Y=1 S DR=DR_";"_$S(LRSB=1:11,LRSB=5:14,LRSB=8:18,LRSB=11:22,1:33)_"///NOW",LRAUTO=""
"RTN","LRMISTF1",38,0)
 ;
"RTN","LRMISTF1",39,0)
 ;
"RTN","LRMISTF1",40,0)
 K DIR
"RTN","LRMISTF1",41,0)
 S DIR(0)="YO",DIR("A")="Designate the individual test as complete",DIR("B")="No"
"RTN","LRMISTF1",42,0)
 D ^DIR
"RTN","LRMISTF1",43,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRMISTF1",44,0)
 S LRCO=+Y
"RTN","LRMISTF1",45,0)
 ;
"RTN","LRMISTF1",46,0)
 ;
"RTN","LRMISTF1",47,0)
 ; Ask for performing lab if automatically verifying.
"RTN","LRMISTF1",48,0)
 ; Setup array of fields to performing lab reference
"RTN","LRMISTF1",49,0)
 K LRDUZ,LRPLREF
"RTN","LRMISTF1",50,0)
 ;
"RTN","LRMISTF1",51,0)
 S LRPLREF(11.57)="1:6"
"RTN","LRMISTF1",52,0)
 S LRPLREF(11.58)="1;5"
"RTN","LRMISTF1",53,0)
 S LRPLREF(11.6)="2,0"
"RTN","LRMISTF1",54,0)
 S LRPLREF(13)="4,0"
"RTN","LRMISTF1",55,0)
 S LRPLREF(15.51)="24,0"
"RTN","LRMISTF1",56,0)
 S LRPLREF(17)="7,0"
"RTN","LRMISTF1",57,0)
 S LRPLREF(19.6)="15,0"
"RTN","LRMISTF1",58,0)
 S LRPLREF(21)="10,0"
"RTN","LRMISTF1",59,0)
 S LRPLREF(24)="11;3"
"RTN","LRMISTF1",60,0)
 S LRPLREF(27)="13,0"
"RTN","LRMISTF1",61,0)
 S LRPLREF(37)="18,0"
"RTN","LRMISTF1",62,0)
 ;
"RTN","LRMISTF1",63,0)
 I $D(LRAUTO) D
"RTN","LRMISTF1",64,0)
 . N DIR,DIRUT,DTOUT,DUOUT,LRDPL,X,Y
"RTN","LRMISTF1",65,0)
 . S LRDPL=$$GET^XPAR("USR","LR VER DEFAULT PERFORMING LAB",1,"Q")
"RTN","LRMISTF1",66,0)
 . I LRDPL<1 S LRDPL=DUZ(2)
"RTN","LRMISTF1",67,0)
 . S X=$$SELPL^LRVERA(LRDPL)
"RTN","LRMISTF1",68,0)
 . I X<1 S LREND=1 Q
"RTN","LRMISTF1",69,0)
 . I X'=DUZ(2) S LRDUZ(2)=X
"RTN","LRMISTF1",70,0)
 . S DIR(0)="S^1:Entire report;2:"_LRMF_" section of report"
"RTN","LRMISTF1",71,0)
 . S DIR("A")="Designate performing laboratory for"
"RTN","LRMISTF1",72,0)
 . S DIR("?")="Enter a code from the list or '^' to exit."
"RTN","LRMISTF1",73,0)
 . D ^DIR
"RTN","LRMISTF1",74,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRMISTF1",75,0)
 . I Y=1 S $P(LRPLREF(H9),"^")="0"
"RTN","LRMISTF1",76,0)
 Q
"RTN","LRMISTF1",77,0)
 ;
"RTN","LRMISTF1",78,0)
 ;
"RTN","LRMISTF1",79,0)
INFO ;
"RTN","LRMISTF1",80,0)
 W !,$$CJ^XLFSTR("What you enter will go through the input transform to be stored in the.",IOM)
"RTN","LRMISTF1",81,0)
 W !,$$CJ^XLFSTR("Result field of the test",IOM)
"RTN","LRMISTF1",82,0)
 W !,$$CJ^XLFSTR("The punctuations of ';' or ':'  are not allowed in Batch Data Entry.",IOM),!
"RTN","LRMISTF1",83,0)
 Q
"RTN","LRMISTF1",84,0)
 ;
"RTN","LRMISTF1",85,0)
 ;
"RTN","LRMISTF1",86,0)
ACC ;
"RTN","LRMISTF1",87,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT
"RTN","LRMISTF1",88,0)
 W !,"Enter the accessions you wish to edit." D LRAN^LRMIUT
"RTN","LRMISTF1",89,0)
 I +$O(LRAN(0))>0 W !,"Editing the following:" S (J,LRAN)=0 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  W !,LRAN S J=J+1 I J#(IOSL-2)=0 R !,"Press return to continue or '^' to escape ",X:DTIME I X[U S LREND=1 Q
"RTN","LRMISTF1",90,0)
 Q:LREND
"RTN","LRMISTF1",91,0)
 ;
"RTN","LRMISTF1",92,0)
 S DIR(0)="YO",DIR("A")="Everything OK",DIR("B")="NO"
"RTN","LRMISTF1",93,0)
 D ^DIR
"RTN","LRMISTF1",94,0)
 I Y<1 Q
"RTN","LRMISTF1",95,0)
 ;
"RTN","LRMISTF1",96,0)
 S LRAN=0
"RTN","LRMISTF1",97,0)
 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  D STUFF Q:LREND
"RTN","LRMISTF1",98,0)
 Q
"RTN","LRMISTF1",99,0)
 ;
"RTN","LRMISTF1",100,0)
 ;
"RTN","LRMISTF1",101,0)
STUFF ;
"RTN","LRMISTF1",102,0)
 N LREND
"RTN","LRMISTF1",103,0)
 ;
"RTN","LRMISTF1",104,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))!'$D(^(3)) W !,"Acc: ",LRAN," not set up." Q
"RTN","LRMISTF1",105,0)
 I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4) W !,"Acc: ",LRAN," has been previously verified by a microbiology supervisor." Q
"RTN","LRMISTF1",106,0)
 ;
"RTN","LRMISTF1",107,0)
 S LRNOP=1,J=0 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,J)) Q:J<1  I LRTEST=+^(J,0) S LRNOP=$P(^(0),U,5) Q
"RTN","LRMISTF1",108,0)
 I LRNOP=1 W !,"Acc: ",LRAN," doesn't have the test required." Q
"RTN","LRMISTF1",109,0)
 I LRNOP>1 W !,"Acc: ",LRAN," has been completed for the selected test." Q
"RTN","LRMISTF1",110,0)
 ;
"RTN","LRMISTF1",111,0)
 I H9=11.57!(H9=11.58) S LROK=0 D @$S(H9=11.57:"UR",1:"SPUT") I 'LROK W !,"Acc: ",LRAN," doesn't have the specimen required." Q
"RTN","LRMISTF1",112,0)
 ;
"RTN","LRMISTF1",113,0)
 W !,"Acc: ",LRAN
"RTN","LRMISTF1",114,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(^(0),U,7),LRODT=$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=$P(^(0),U,5)
"RTN","LRMISTF1",115,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRMISTF1",116,0)
 D PT^LRX
"RTN","LRMISTF1",117,0)
 W ?15,PNM,?45,SSN,?65,LRWRD,!
"RTN","LRMISTF1",118,0)
 ;
"RTN","LRMISTF1",119,0)
 S LRCDT=+^LRO(68,LRAA,1,LRAD,1,LRAN,3),LRIDT=+$P(^(3),U,5),DIE="^LR("_LRDFN_",""MI"",",DA=LRIDT
"RTN","LRMISTF1",120,0)
 D ^DIE,UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMISTF1",121,0)
 I $D(Y) S LREND=1 Q
"RTN","LRMISTF1",122,0)
 ;
"RTN","LRMISTF1",123,0)
 I LRCO D
"RTN","LRMISTF1",124,0)
 . S X=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,5)
"RTN","LRMISTF1",125,0)
 . I X K ^LRO(68,LRAA,1,LRAD,1,"AD",$P(X,"."),LRAN),^LRO(68,LRAA,1,LRAD,1,"AC",X,LRAN)
"RTN","LRMISTF1",126,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,4)=DUZ,$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRMISTF1",127,0)
 . S Y=$$NOW^XLFDT
"RTN","LRMISTF1",128,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,5)=Y
"RTN","LRMISTF1",129,0)
 . S ^LRO(68,LRAA,1,LRAD,1,"AD",$P(Y,"."),LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",Y,LRAN)=""
"RTN","LRMISTF1",130,0)
 . N CORRECT S:$G(LRCORECT) CORRECT=1 D NEW^LR7OB1(LRODT,LRSN,"RE")
"RTN","LRMISTF1",131,0)
 ;
"RTN","LRMISTF1",132,0)
 I $D(LRAUTO) D PL,STF^LRMIUT,LEDI^LRVR0
"RTN","LRMISTF1",133,0)
 ;
"RTN","LRMISTF1",134,0)
 Q
"RTN","LRMISTF1",135,0)
 ;
"RTN","LRMISTF1",136,0)
 ;
"RTN","LRMISTF1",137,0)
MORE ;
"RTN","LRMISTF1",138,0)
 S LREND=1
"RTN","LRMISTF1",139,0)
 F  W !,"Do you wish to make a new entry for the ",LRMF," field" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",140,0)
 I %=1 S LREND=0
"RTN","LRMISTF1",141,0)
 Q
"RTN","LRMISTF1",142,0)
 ;
"RTN","LRMISTF1",143,0)
 ;
"RTN","LRMISTF1",144,0)
UR ;
"RTN","LRMISTF1",145,0)
 S J=0
"RTN","LRMISTF1",146,0)
 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,J)) Q:J<1  I LRURINE=+^(J,0) S LROK=1 Q
"RTN","LRMISTF1",147,0)
 Q
"RTN","LRMISTF1",148,0)
 ;
"RTN","LRMISTF1",149,0)
 ;
"RTN","LRMISTF1",150,0)
SPUT ;
"RTN","LRMISTF1",151,0)
 S J=0
"RTN","LRMISTF1",152,0)
 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,J)) Q:J<1  I 360=+^(J,0) S LROK=1 Q
"RTN","LRMISTF1",153,0)
 Q
"RTN","LRMISTF1",154,0)
 ;
"RTN","LRMISTF1",155,0)
 ;
"RTN","LRMISTF1",156,0)
PL ; Store performing lab on automatic verification
"RTN","LRMISTF1",157,0)
 ;
"RTN","LRMISTF1",158,0)
 N LRPL,LRREF,LRX,LRY
"RTN","LRMISTF1",159,0)
 ;
"RTN","LRMISTF1",160,0)
 S LRY=$G(LRPLREF(H9))
"RTN","LRMISTF1",161,0)
 I LRY="" Q
"RTN","LRMISTF1",162,0)
 S LRREF=LRDFN_",MI,"_LRIDT_","_LRY
"RTN","LRMISTF1",163,0)
 S LRPL=$S($G(LRDUZ(2)):LRDUZ(2),1:DUZ(2))
"RTN","LRMISTF1",164,0)
 ;
"RTN","LRMISTF1",165,0)
 S LRX=$O(^LR(LRDFN,"PL","B",LRREF,0))
"RTN","LRMISTF1",166,0)
 I 'LRX D CNE^LRRPLU(LRDFN,LRREF,LRPL) Q
"RTN","LRMISTF1",167,0)
 I $P(^LR(LRDFN,"PL",LRX,0),"^",2)'=LRPL D UEE^LRRPLU(LRDFN,LRREF,LRPL)
"RTN","LRMISTF1",168,0)
 ;
"RTN","LRMISTF1",169,0)
 Q
"RTN","LRMITSPO")
0^187^B11792474
"RTN","LRMITSPO",1,0)
LRMITSPO ;DALOI/STAFF - MICRO TREND PROCESS ORGANISMS ;Dec 20, 2008
"RTN","LRMITSPO",2,0)
 ;;5.2;LAB SERVICE;**96,116,350**;Sep 27, 1994;Build 230
"RTN","LRMITSPO",3,0)
 ;
"RTN","LRMITSPO",4,0)
 ; from LRMITSPE
"RTN","LRMITSPO",5,0)
 ;
"RTN","LRMITSPO",6,0)
 ; bacteria
"RTN","LRMITSPO",7,0)
 I $D(LROTYPE("B")),+$G(^LR(LRDFN,"MI",LRIDT,1)),$O(^(3,0)) D
"RTN","LRMITSPO",8,0)
 . S LROTYPE="B",LRSUBN=0
"RTN","LRMITSPO",9,0)
 . F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,3,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D
"RTN","LRMITSPO",10,0)
 . . ; if specific organisms required and not valid quit
"RTN","LRMITSPO",11,0)
 . . I $D(LRSORG),'$D(LRSORG(LROTYPE,LRORGN)) Q
"RTN","LRMITSPO",12,0)
 . . S LRORGNM=$E($P($G(^LAB(61.2,+LRORGN,0)),U),1,30)
"RTN","LRMITSPO",13,0)
 . . I LRORGNM="" S LRORGNM=LRUNK
"RTN","LRMITSPO",14,0)
 . . ; if antibiotic pattern required and not valid quit
"RTN","LRMITSPO",15,0)
 . . I $D(LRAP) D  Q:'LROK
"RTN","LRMITSPO",16,0)
 . . . S LROK=1,LRDN=0
"RTN","LRMITSPO",17,0)
 . . . F  S LRDN=$O(LRAP(LRDN)) Q:LRDN=""  S LRX=$G(^LR(LRDFN,"MI",LRIDT,3,LRSUBN,LRDN)) D  Q:'LROK
"RTN","LRMITSPO",18,0)
 . . . . S LRX=$$SENS(LRDN,LRX)
"RTN","LRMITSPO",19,0)
 . . . . I LRX="" S LROK=0 Q
"RTN","LRMITSPO",20,0)
 . . . . I LRX'=LRAP(LRDN) S LROK=0
"RTN","LRMITSPO",21,0)
 . . K LRANTIM
"RTN","LRMITSPO",22,0)
 . . S LRDN=2
"RTN","LRMITSPO",23,0)
 . . F  S LRDN=$O(^LR(LRDFN,"MI",LRIDT,3,LRSUBN,LRDN)) Q:LRDN<2!(LRDN=3)  S LRX=$G(^(LRDN)) I LRX'="" D
"RTN","LRMITSPO",24,0)
 . . . S LRINTERP=$$SENS(LRDN,LRX)
"RTN","LRMITSPO",25,0)
 . . . I LRINTERP'="" S LRANTIM(LRDN)=LRINTERP_U_LRX
"RTN","LRMITSPO",26,0)
 . . S LRORGNM="("_LROTYPE_") "_LRORGNM
"RTN","LRMITSPO",27,0)
 . . D ^LRMITSPS
"RTN","LRMITSPO",28,0)
 K LRANTIM
"RTN","LRMITSPO",29,0)
 ;
"RTN","LRMITSPO",30,0)
 ; fungus
"RTN","LRMITSPO",31,0)
 I $D(LROTYPE("F")),+$G(^LR(LRDFN,"MI",LRIDT,8)),$O(^(9,0)) D
"RTN","LRMITSPO",32,0)
 . S LROTYPE="F",LRSUBN=0
"RTN","LRMITSPO",33,0)
 . F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,9,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D SETUP
"RTN","LRMITSPO",34,0)
 ;
"RTN","LRMITSPO",35,0)
 ; mycobacteria
"RTN","LRMITSPO",36,0)
 I $D(LROTYPE("M")),+$G(^LR(LRDFN,"MI",LRIDT,11)),$O(^(12,0)) D
"RTN","LRMITSPO",37,0)
 . S LROTYPE="M",LRSUBN=0
"RTN","LRMITSPO",38,0)
 .  F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,12,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D
"RTN","LRMITSPO",39,0)
 . . K LRTB
"RTN","LRMITSPO",40,0)
 . . S LRDN=2
"RTN","LRMITSPO",41,0)
 . . F  S LRDN=$O(^LR(LRDFN,"MI",LRIDT,12,LRSUBN,LRDN)) Q:LRDN=""  S LRTB(LRDN)=$P(^(LRDN),U)
"RTN","LRMITSPO",42,0)
 . . D SETUP
"RTN","LRMITSPO",43,0)
 K LRTB
"RTN","LRMITSPO",44,0)
 ;
"RTN","LRMITSPO",45,0)
 ; parasite
"RTN","LRMITSPO",46,0)
 I $D(LROTYPE("P")),+$G(^LR(LRDFN,"MI",LRIDT,5)),$O(^(6,0)) D
"RTN","LRMITSPO",47,0)
 . S LROTYPE="P",LRSUBN=0
"RTN","LRMITSPO",48,0)
 . F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,6,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D SETUP
"RTN","LRMITSPO",49,0)
 ;
"RTN","LRMITSPO",50,0)
 ; virus
"RTN","LRMITSPO",51,0)
 I $D(LROTYPE("V")),+$G(^LR(LRDFN,"MI",LRIDT,16)),$O(^(17,0)) D
"RTN","LRMITSPO",52,0)
 . S LROTYPE="V",LRSUBN=0
"RTN","LRMITSPO",53,0)
 . F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,17,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D SETUP
"RTN","LRMITSPO",54,0)
 ;
"RTN","LRMITSPO",55,0)
 ; Expanded Search
"RTN","LRMITSPO",56,0)
 I '$D(LROTYPE("B")),+$G(^LR(LRDFN,"MI",LRIDT,0)),$O(^(3,0)) D
"RTN","LRMITSPO",57,0)
 . S LROTYPE=$S($D(LROTYPE("V")):"V",$D(LROTYPE("P")):"P",$D(LROTYPE("F")):"F",$D(LROTYPE("M")):"M",1:"")
"RTN","LRMITSPO",58,0)
 . Q:LROTYPE=""
"RTN","LRMITSPO",59,0)
 . S LRSUBN=0
"RTN","LRMITSPO",60,0)
 . F  S LRSUBN=$O(^LR(LRDFN,"MI",LRIDT,3,LRSUBN)) Q:LRSUBN<1  S LRORGN=+^(LRSUBN,0) D:LROTYPE=$P(^LAB(61.2,+LRORGN,0),U,5) SETUP
"RTN","LRMITSPO",61,0)
 Q
"RTN","LRMITSPO",62,0)
 ;
"RTN","LRMITSPO",63,0)
 ;
"RTN","LRMITSPO",64,0)
SETUP ; if specific organisms are required, do not setup unless valid organism
"RTN","LRMITSPO",65,0)
 I $D(LRSORG),'$D(LRSORG(LROTYPE,LRORGN)) Q
"RTN","LRMITSPO",66,0)
 S LRORGNM=$E($P($G(^LAB(61.2,+LRORGN,0)),U),1,30) I LRORGNM="" S LRORGNM=LRUNK
"RTN","LRMITSPO",67,0)
 S LRORGNM="("_LROTYPE_") "_LRORGNM
"RTN","LRMITSPO",68,0)
 ; setup data on isolate
"RTN","LRMITSPO",69,0)
 D ^LRMITSPS
"RTN","LRMITSPO",70,0)
 Q
"RTN","LRMITSPO",71,0)
 ;
"RTN","LRMITSPO",72,0)
 ;
"RTN","LRMITSPO",73,0)
SENS(DRUGNODE,VALUES) ; $$(antibiotic,susceptibility) -> "S","R" or ""
"RTN","LRMITSPO",74,0)
 N INTERP,RESULT
"RTN","LRMITSPO",75,0)
 S INTERP=$P(VALUES,U,2),RESULT=$P(VALUES,U)
"RTN","LRMITSPO",76,0)
 I INTERP="",RESULT'="" S INTERP=$G(^LAB(62.06,"AI",DRUGNODE,RESULT))
"RTN","LRMITSPO",77,0)
 I INTERP="" S INTERP=RESULT
"RTN","LRMITSPO",78,0)
 I INTERP="" Q ""
"RTN","LRMITSPO",79,0)
 I $D(LRSUSS(INTERP)) Q "S"
"RTN","LRMITSPO",80,0)
 I $D(LRSUSR(INTERP)) Q "R"
"RTN","LRMITSPO",81,0)
 I INTERP["S" Q "S"
"RTN","LRMITSPO",82,0)
 Q ""
"RTN","LRMIUT")
0^71^B4291793
"RTN","LRMIUT",1,0)
LRMIUT ;DALOI/STAFF - MICROBIOLOGY UTILITIES ;Sep 29, 2008
"RTN","LRMIUT",2,0)
 ;;5.2;LAB SERVICE;**254,266,350**;Sep 27, 1994;Build 230
"RTN","LRMIUT",3,0)
 ;
"RTN","LRMIUT",4,0)
 ; File 42/10039
"RTN","LRMIUT",5,0)
 ; Reference to ^%ZTLOAD supported by DBIA #10063
"RTN","LRMIUT",6,0)
 ; Reference to ^DIC supported by DBIA #10006
"RTN","LRMIUT",7,0)
 ; Reference to IN5^VADPT supported by DBIA #10061
"RTN","LRMIUT",8,0)
 ;
"RTN","LRMIUT",9,0)
STF ;from LRMIEDZ2, LRMISTF1
"RTN","LRMIUT",10,0)
 ;
"RTN","LRMIUT",11,0)
 N D
"RTN","LRMIUT",12,0)
 S D=0
"RTN","LRMIUT",13,0)
 I $G(LRSB)'="",$D(^LR(LRDFN,"MI",LRIDT,LRSB)) S D=$P(^(LRSB),U),^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)=DUZ_U_D
"RTN","LRMIUT",14,0)
 I $P(LRPARAM,U,5),D D TSKM
"RTN","LRMIUT",15,0)
 ;
"RTN","LRMIUT",16,0)
 ; CareVue supported ward - now tasking routine for CareVue-PWC-10/00
"RTN","LRMIUT",17,0)
 I D>0 D
"RTN","LRMIUT",18,0)
 . N LR7DLOC
"RTN","LRMIUT",19,0)
 . D IN5^VADPT S LR7DLOC=$G(^DIC(42,+$P($G(VAIP(5)),"^"),44))
"RTN","LRMIUT",20,0)
 . I LR7DLOC>0,$D(^LAB(62.487,"C",LR7DLOC)) D  ; good ward location
"RTN","LRMIUT",21,0)
 . . N LRH,LRSS,ZTRTN,ZTDTH,ZTSAVE,ZTIO,ZTSK,ZTDESC,ZTQUEUED,ZTREQ
"RTN","LRMIUT",22,0)
 . . S LRH="",LRSS="MI",ZTRTN="^LA7DLOC",ZTIO="",ZTDTH=$H,ZTSAVE("L*")="",ZTDESC="LAB AUTOMATION CAREVUE SUPPORTED WARDS"
"RTN","LRMIUT",23,0)
 . . D ^%ZTLOAD
"RTN","LRMIUT",24,0)
 Q
"RTN","LRMIUT",25,0)
 ;
"RTN","LRMIUT",26,0)
 ;
"RTN","LRMIUT",27,0)
TSKM ; from LRMINEW1
"RTN","LRMIUT",28,0)
 N LRH,LRWRDVEW,ZTSK,ZTRTN,ZTIO,ZTDTH,ZTSAVE
"RTN","LRMIUT",29,0)
 S LRH="",LRSS="MI",LRWRDVEW="",ZTRTN="DQ^LRTP",ZTIO="",ZTDTH=$H,ZTSAVE("L*")=""
"RTN","LRMIUT",30,0)
 D ^%ZTLOAD
"RTN","LRMIUT",31,0)
 Q
"RTN","LRMIUT",32,0)
 ;
"RTN","LRMIUT",33,0)
 ;
"RTN","LRMIUT",34,0)
LRAA ; from LRMINEW, LRMIPLOG, LRMISEZ, LRMISTF, LRMIVER
"RTN","LRMIUT",35,0)
 N DIC
"RTN","LRMIUT",36,0)
 S DIC=68,DIC(0)="AEMOQ",DIC("S")="I $P(^(0),U,2)=""MI""" D ^DIC
"RTN","LRMIUT",37,0)
 S LRAA=+Y
"RTN","LRMIUT",38,0)
 Q
"RTN","LRMIUT",39,0)
 ;
"RTN","LRMIUT",40,0)
 ;
"RTN","LRMIUT",41,0)
LRAN ; from LRMINEW1, LRMIPLOG, LRMISTF1, LRMIVER1
"RTN","LRMIUT",42,0)
 ;
"RTN","LRMIUT",43,0)
 N DIR,DIRUT,DTOUT,DUOUT,J,K,X,Y
"RTN","LRMIUT",44,0)
 K LRAN
"RTN","LRMIUT",45,0)
 ;
"RTN","LRMIUT",46,0)
 S DIR(0)="LOA^1:99999:0",DIR("A")="Enter #'s: "
"RTN","LRMIUT",47,0)
 F  D  Q:$D(DIRUT)
"RTN","LRMIUT",48,0)
 . K Y
"RTN","LRMIUT",49,0)
 . D ^DIR
"RTN","LRMIUT",50,0)
 . I $D(DIRUT) Q
"RTN","LRMIUT",51,0)
 . I $O(Y(""),-1)>50 W !,"Too many numbers selected, choose a smaller group" Q
"RTN","LRMIUT",52,0)
 . S J=""
"RTN","LRMIUT",53,0)
 . F  S J=$O(Y(J)) Q:J=""  D
"RTN","LRMIUT",54,0)
 . . F K=1:1  Q:$P(Y(J),",",K)=""  S LRAN($P(Y(J),",",K))=""
"RTN","LRMIUT",55,0)
 Q
"RTN","LRMIUT1")
0^86^B6708446
"RTN","LRMIUT1",1,0)
LRMIUT1 ;DALOI/STAFF - INPUT TRANSFORMS FOR MICRO ;Jun 20, 2008
"RTN","LRMIUT1",2,0)
 ;;5.2;LAB SERVICE;**100,121,323,350**;Sep 27, 1994;Build 230
"RTN","LRMIUT1",3,0)
 ;
"RTN","LRMIUT1",4,0)
RPT ; from input transform on RPT DATE APPROVED
"RTN","LRMIUT1",5,0)
 N %DT,Y
"RTN","LRMIUT1",6,0)
 I $G(DIUTIL)'="VERIFY FIELDS" D  ;
"RTN","LRMIUT1",7,0)
 . I '$D(^XUSEC("LRVERIFY",DUZ)) K X D EN^DDIOL("*** You do not have the proper access to approve these results ***","","!,$C(7)")
"RTN","LRMIUT1",8,0)
 Q:'$D(X)
"RTN","LRMIUT1",9,0)
 S %DT="EXR"
"RTN","LRMIUT1",10,0)
 I $G(DIUTIL)="VERIFY FIELDS" S %DT="EXT" ;old rptdt only has date
"RTN","LRMIUT1",11,0)
 D ^%DT S X=Y I Y<1 K X Q
"RTN","LRMIUT1",12,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","LRMIUT1",13,0)
 N X,DA,DIERR,DIE,DIC,DR ;protect FM vars from subsequent calls
"RTN","LRMIUT1",14,0)
 D VT1
"RTN","LRMIUT1",15,0)
 Q
"RTN","LRMIUT1",16,0)
 ;
"RTN","LRMIUT1",17,0)
 ;
"RTN","LRMIUT1",18,0)
VT ; from LRMINEW1, LRMIVER1
"RTN","LRMIUT1",19,0)
 D VT1
"RTN","LRMIUT1",20,0)
 K ^TMP("LA7HDR",$J)
"RTN","LRMIUT1",21,0)
 Q
"RTN","LRMIUT1",22,0)
 ;
"RTN","LRMIUT1",23,0)
 ;
"RTN","LRMIUT1",24,0)
VT1 ; from above
"RTN","LRMIUT1",25,0)
 I $G(LRLLOC)'="",$G(PNM)'="",$G(LRDFN),$G(LRIDT) S LRVTP=$P(^LAB(64.5,1,0),U,10),LRVT=$G(LRVT) D APP
"RTN","LRMIUT1",26,0)
 ;
"RTN","LRMIUT1",27,0)
 ; Set reporting facility
"RTN","LRMIUT1",28,0)
 I $G(LRDFN),$G(LRIDT) D SETRL^LRVERA(LRDFN,"MI",LRIDT,DUZ(2))
"RTN","LRMIUT1",29,0)
 Q
"RTN","LRMIUT1",30,0)
 ;
"RTN","LRMIUT1",31,0)
 ;
"RTN","LRMIUT1",32,0)
APP ;
"RTN","LRMIUT1",33,0)
 N Q9,X,I
"RTN","LRMIUT1",34,0)
 S DT=$$DT^XLFDT
"RTN","LRMIUT1",35,0)
 S ^LRO(69,"AN",$E(LRLLOC,1,20),LRDFN,LRIDT)="",^LRO(69,LRCDT\1,1,"AL",$E(LRLLOC,1,20),$E(PNM,1,30),LRDFN)=""
"RTN","LRMIUT1",36,0)
 S ^LRO(69,DT,1,"AN",$E(LRLLOC,1,20),LRDFN,LRIDT)=""
"RTN","LRMIUT1",37,0)
 ;
"RTN","LRMIUT1",38,0)
 I LRVT["RE"!(LRVT["VT") S:LRVT=LRVTP ^LRO(69,DT,1,"AR",$E(LRLLOC,1,20),$E(PNM,1,30),LRDFN)="",^LRO(68,"MI",LRDFN,LRIDT,LRSB)=""
"RTN","LRMIUT1",39,0)
 ;
"RTN","LRMIUT1",40,0)
 I LRVT["VS",LRVT=LRVTP D
"RTN","LRMIUT1",41,0)
 . S ^LRO(69,Y,1,"AR",$E(LRLLOC,1,20),$E(PNM,1,30),LRDFN)=""
"RTN","LRMIUT1",42,0)
 . F LRSB=1,5,8,11,16 I $P($G(^LR(LRDFN,"MI",LRIDT,LRSB)),U,1) S ^LRO(68,"MI",LRDFN,LRIDT,LRSB)=""
"RTN","LRMIUT1",43,0)
 ;
"RTN","LRMIUT1",44,0)
 S Q9=+$P(^LR(LRDFN,"MI",LRIDT,0),U,7),^LRO(69,LRCDT\1,1,"AP",$S($D(^VA(200,Q9,0)):$E($P(^VA(200,Q9,0),U),1,20),1:"UNK"),$E(PNM,1,30),LRDFN)=""
"RTN","LRMIUT1",45,0)
 K ^LAC("LRKILL",LRDFN,"MI",LRIDT)
"RTN","LRMIUT1",46,0)
 ;
"RTN","LRMIUT1",47,0)
 I $D(^LRO(69,LRODT,1,LRSN,3)),'$P(^(3),U,2) S $P(^LRO(69,LRODT,1,LRSN,3),U,2)=$$NOW^XLFDT
"RTN","LRMIUT1",48,0)
 ;
"RTN","LRMIUT1",49,0)
 I $D(^LRO(69,LRODT,1,LRSN,3)) D
"RTN","LRMIUT1",50,0)
 . N X,Y,CORRECT
"RTN","LRMIUT1",51,0)
 . S:$G(LRCORECT) CORRECT=1
"RTN","LRMIUT1",52,0)
 . D NEW^LR7OB1(LRODT,LRSN,"RE")
"RTN","LRMIUT1",53,0)
 K LRVTP
"RTN","LRMIUT1",54,0)
 Q
"RTN","LRMIVER1")
0^50^B15048312
"RTN","LRMIVER1",1,0)
LRMIVER1 ;DALOI/STAFF - MICRO CHART COPY APPROVAL CONT. ;03/07/12  16:31
"RTN","LRMIVER1",2,0)
 ;;5.2;LAB SERVICE;**295,350**;Sep 27, 1994;Build 230
"RTN","LRMIVER1",3,0)
 ;
"RTN","LRMIVER1",4,0)
 ;from LRMIVER
"RTN","LRMIVER1",5,0)
 ;
"RTN","LRMIVER1",6,0)
APPROVE I '$O(^LRO(68,"AVS",LRAA,0)) W !,"No data." Q
"RTN","LRMIVER1",7,0)
 F I=0:0 W !!,"Do you wish to review the data as the (W)ards will see it, as the (L)ab",!,"will see it, or (N)ot review the data?  N// " R X:DTIME S:'$T X=U S:'$L(X) X="N" Q:X[U!("WLN"[X&($L(X)=1))  D INFO^LRMINEW
"RTN","LRMIVER1",8,0)
 Q:X[U  I X="N" D ACCEPT Q
"RTN","LRMIVER1",9,0)
 S:X="W" LRWRDVEW="" F I=0:0 W !,"Do you want to queue the data to print and approve it later" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMIVER1",10,0)
 Q:%<1  S ZTRTN="DQ^LRMIVER1" I %=1 S %ZIS="QM",%ZIS("B")="",IOP="Q"
"RTN","LRMIVER1",11,0)
 D IO^LRWU
"RTN","LRMIVER1",12,0)
 Q
"RTN","LRMIVER1",13,0)
 ;
"RTN","LRMIVER1",14,0)
DQ S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","LRMIVER1",15,0)
 S LREND=0,LRSB=0 K ^TMP($J) S LRAD=0 F I=0:0 S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  D SORT Q:LREND
"RTN","LRMIVER1",16,0)
 S LRONESPC="",LRONETST="" D PRINT
"RTN","LRMIVER1",17,0)
 Q
"RTN","LRMIVER1",18,0)
 ;
"RTN","LRMIVER1",19,0)
SORT S LRAN=0 F  S LRAN=+$O(^LRO(68,"AVS",LRAA,LRAD,LRAN)) Q:LRAN<1  D S1
"RTN","LRMIVER1",20,0)
 Q
"RTN","LRMIVER1",21,0)
 ;
"RTN","LRMIVER1",22,0)
S1 S LRDFN=+^LRO(68,"AVS",LRAA,LRAD,LRAN),LRIDT=$P(^(LRAN),U,2)
"RTN","LRMIVER1",23,0)
 I $D(^LR(LRDFN,"MI",LRIDT,0)) S LRVLOC=$S($L($P(^(0),U,8)):$P(^(0),U,8),1:0),^TMP($J,LRVLOC,LRDFN,LRIDT)=^(0)
"RTN","LRMIVER1",24,0)
 S ^TMP($J,LRVLOC,LRDFN,LRIDT,1)=LRAD
"RTN","LRMIVER1",25,0)
 Q
"RTN","LRMIVER1",26,0)
 ;
"RTN","LRMIVER1",27,0)
PRINT S LRVLOC="" F LRLCNT=0:0 S LRVLOC=$O(^TMP($J,LRVLOC)) Q:LRVLOC=""  S LRLTR=$E(LRVLOC,1,4) W @IOF D ^LRLTR:$E(IOST,1,2)'="C-",P1 Q:LREND
"RTN","LRMIVER1",28,0)
 Q
"RTN","LRMIVER1",29,0)
 ;
"RTN","LRMIVER1",30,0)
P1 S LRDFN=0 F  S LRDFN=+$O(^TMP($J,LRVLOC,LRDFN)) Q:LRDFN<1  D P2 Q:LREND
"RTN","LRMIVER1",31,0)
 Q
"RTN","LRMIVER1",32,0)
 ;
"RTN","LRMIVER1",33,0)
P2 S LRIDT=0 F  S LRIDT=+$O(^TMP($J,LRVLOC,LRDFN,LRIDT)) Q:LRIDT<1  D P3 Q:LREND
"RTN","LRMIVER1",34,0)
 Q
"RTN","LRMIVER1",35,0)
 ;
"RTN","LRMIVER1",36,0)
P3 S LRWLSAVE=LRAA,LRLLT=^TMP($J,LRVLOC,LRDFN,LRIDT),LRACC=$P(LRLLT,U,6),LRAD=$E(LRLLT)_$P(LRACC," ",2)_"0000",X=$P(LRACC," "),DIC=68,DIC(0)="M"
"RTN","LRMIVER1",37,0)
 D ^DIC S LRAA=+Y,LRAN=$P(LRACC," ",3),LRCMNT=$S($D(^LR(LRDFN,"MI",LRIDT,99)):^(99),1:""),LRPG=0 D EN^LRMIPSZ1 S LRAA=LRWLSAVE Q:LREND
"RTN","LRMIVER1",38,0)
 Q
"RTN","LRMIVER1",39,0)
 ;
"RTN","LRMIVER1",40,0)
ACCEPT W !!,"Indicate those you wish to exclude from verification." D LRAN^LRMIUT
"RTN","LRMIVER1",41,0)
 S LRAN=0 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  S LRAD=0 F  S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  K ^LRO(68,"AVS",LRAA,LRAD,LRAN)
"RTN","LRMIVER1",42,0)
 F  W !,"Ready to approve" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMIVER1",43,0)
 Q:%'=1  W !
"RTN","LRMIVER1",44,0)
 S LRAD=0 F  S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  D LRAD
"RTN","LRMIVER1",45,0)
 K LRWRDVEW,LRAD,LRAN,LRTK,Z
"RTN","LRMIVER1",46,0)
 Q
"RTN","LRMIVER1",47,0)
 ;
"RTN","LRMIVER1",48,0)
LRAD S LRAN=0 F  S LRAN=+$O(^LRO(68,"AVS",LRAA,LRAD,LRAN)) Q:LRAN<1  D STUFF
"RTN","LRMIVER1",49,0)
 Q
"RTN","LRMIVER1",50,0)
 ;
"RTN","LRMIVER1",51,0)
STUFF ;
"RTN","LRMIVER1",52,0)
 S LRDFN=+^LRO(68,"AVS",LRAA,LRAD,LRAN),LRIDT=$P(^(LRAN),U,2)
"RTN","LRMIVER1",53,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIVER1",54,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D
"RTN","LRMIVER1",55,0)
 . S LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,4),LRSN=$P(^(0),U,5),LRLLOC=$P(^(0),U,7)
"RTN","LRMIVER1",56,0)
 . S DFN=$P(^LR(LRDFN,0),U,3),LRDPF=$P(^(0),U,2),LRCDT=9999999-LRIDT
"RTN","LRMIVER1",57,0)
 . D PT^LRX S Y=DT D VT^LRMIUT1
"RTN","LRMIVER1",58,0)
 S ^LR(LRDFN,"MI",LRIDT,0)=$P(^LR(LRDFN,"MI",LRIDT,0),U,1,2)_U_LRNT_U_DUZ_U_$P(^(0),U,5,99)
"RTN","LRMIVER1",59,0)
 S LRSET=1,II=0
"RTN","LRMIVER1",60,0)
 F  S II=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,II)) Q:'II  I $P(^(II,0),U,5)="" S LRSET=0,LRTS=II
"RTN","LRMIVER1",61,0)
 ;F  S II=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,II)) Q:I<1  I '$L($P(^(II,0),U,5)) S LRSET=0,LRTS=II
"RTN","LRMIVER1",62,0)
 S:LRSET $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=LRNT W "."
"RTN","LRMIVER1",63,0)
 F II=1,5,8,11,16 I $D(^LR(LRDFN,"MI",LRIDT,II)),$P(^(II),U) D 
"RTN","LRMIVER1",64,0)
 . K ^LRO(68,LRAA,1,LRAD,"AC",II,LRAN)
"RTN","LRMIVER1",65,0)
 . S LRSB=II
"RTN","LRMIVER1",66,0)
 ;
"RTN","LRMIVER1",67,0)
 I $G(LRSS)="" S LRSS="MI"
"RTN","LRMIVER1",68,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRMIVER1",69,0)
 ;
"RTN","LRMIVER1",70,0)
 ; If this accession originated via a LEDI order then return results to the collecting site.
"RTN","LRMIVER1",71,0)
 D LEDI^LRVR0
"RTN","LRMIVER1",72,0)
 Q
"RTN","LRNIGHT")
0^209^B6404812
"RTN","LRNIGHT",1,0)
LRNIGHT ;SLC/CJS/AVAMC/REG - NIGHTLY LAB CLEANUP ;05/07/12  10:20
"RTN","LRNIGHT",2,0)
 ;;5.2;LAB SERVICE;**291,350**;Sep 27, 1994;Build 230
"RTN","LRNIGHT",3,0)
 ;
"RTN","LRNIGHT",4,0)
 ;D REQUE ;REQUED BY TASKMAN
"RTN","LRNIGHT",5,0)
 Q:'$D(^LAB(69.9,1,0))  S:$D(ZTQUEUED) DUZ(0)="@",ZTREQ="@" K ^LRO(69,"AN") K ^LRO(69,DT-1,1,"AD") I $P(^LAB(69.9,1,0),U,14) D MANUAL
"RTN","LRNIGHT",6,0)
 S %DT="",X="T-"_$S($P(^LAB(69.9,1,0),"^",9):$P(^(0),"^",9),1:7) D ^%DT S LRSAVE=Y
"RTN","LRNIGHT",7,0)
 F L=0:0 S L=$O(^LRO(69,"AT",L)) Q:L'>0  F T=0:0 S T=$O(^LRO(69,"AT",L,T)) Q:T'>0  F S=0:0 S S=$O(^LRO(69,"AT",L,T,S)) Q:S'>0  S X=-LRSAVE,X1=LRSAVE F X=X:0 S X=$O(^LRO(69,"AT",L,T,S,X)) Q:X=""!(X'<X1)  K ^LRO(69,"AT",L,T,S,X)
"RTN","LRNIGHT",8,0)
 K %,%H,%X,%Y,L,LRIOZERO,LRSAVE,POP,S,T,X,X1,Z,Y
"RTN","LRNIGHT",9,0)
STDQC ;
"RTN","LRNIGHT",10,0)
 ;
"RTN","LRNIGHT",11,0)
 D SUBTASKS
"RTN","LRNIGHT",12,0)
 ;
"RTN","LRNIGHT",13,0)
 ;Cleanup the XTMP("LRCAP" global
"RTN","LRNIGHT",14,0)
 D XTMP^LRCAPPH
"RTN","LRNIGHT",15,0)
 ;
"RTN","LRNIGHT",16,0)
 ;Check roll-up date; process pending panels if appropriate date
"RTN","LRNIGHT",17,0)
 S X=$T(EN^LRBEBA5) I X'="" D EN^LRBEBA5
"RTN","LRNIGHT",18,0)
 ;
"RTN","LRNIGHT",19,0)
 Q
"RTN","LRNIGHT",20,0)
 ;
"RTN","LRNIGHT",21,0)
REQUE S ZTDTH=$H+1_",1",ZTIO="",ZTRTN="^LRNIGHT" D ^%ZTLOAD K ZTDTH,ZTIO,ZTRTN,ZTSK Q
"RTN","LRNIGHT",22,0)
END K DUOUT,DTOUT,%DT,LRW,D,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,LRDFN,DFN,LRCD
"RTN","LRNIGHT",23,0)
 Q
"RTN","LRNIGHT",24,0)
MANUAL ;
"RTN","LRNIGHT",25,0)
RANGE ;
"RTN","LRNIGHT",26,0)
 S ZTRTN="LRCAPV2",ZTIO="",ZTDTH=$H,ZTDESC="TALLY CAP WORKLOAD"
"RTN","LRNIGHT",27,0)
 D ^%ZTLOAD
"RTN","LRNIGHT",28,0)
 Q
"RTN","LRNIGHT",29,0)
 ;
"RTN","LRNIGHT",30,0)
SUBTASKS ; Task off other jobs that are initiated by LRNIGHT
"RTN","LRNIGHT",31,0)
 ;
"RTN","LRNIGHT",32,0)
 ; Protect TaskMan variables of calling tasked job
"RTN","LRNIGHT",33,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",34,0)
 ;
"RTN","LRNIGHT",35,0)
 ;--------------------------------------------
"RTN","LRNIGHT",36,0)
 ; Analyze File 63: Organism sub-file and data.
"RTN","LRNIGHT",37,0)
 I $T(LRNIGHT^LRWU8)'="",$E($$DT^XLFDT,6,7)="01" D
"RTN","LRNIGHT",38,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",39,0)
 . S ZTRTN="LRNIGHT^LRWU8",ZTDESC="FILE 63 ORGANISM CLEANUP"
"RTN","LRNIGHT",40,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",41,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",42,0)
 ;
"RTN","LRNIGHT",43,0)
 ;--------------------------------------------
"RTN","LRNIGHT",44,0)
 ; Analyze File 63: For bad data names.
"RTN","LRNIGHT",45,0)
 I $T(LRNIGHT^LRWU9)'="",$E($$DT^XLFDT,6,7)="01" D
"RTN","LRNIGHT",46,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",47,0)
 . S ZTRTN="LRNIGHT^LRWU9",ZTDESC="FILE 63 BAD DATA NAMES CLEANUP"
"RTN","LRNIGHT",48,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",49,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",50,0)
 ;
"RTN","LRNIGHT",51,0)
 ;--------------------------------------------
"RTN","LRNIGHT",52,0)
 ; Purge eligible entries in file 95.4
"RTN","LRNIGHT",53,0)
 I $T(PRGNIGHT^LRSRVR5)'="" D
"RTN","LRNIGHT",54,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",55,0)
 . S ZTRTN="PRGNIGHT^LRSRVR5",ZTDESC="Lab file #95.4 purge/cleanup"
"RTN","LRNIGHT",56,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",57,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",58,0)
 ;
"RTN","LRNIGHT",59,0)
 Q
"RTN","LRORD")
0^45^B27336248
"RTN","LRORD",1,0)
LRORD ;DALOI/CJS - LAZY ACCESSION LOGGING ;05/29/12  10:25
"RTN","LRORD",2,0)
 ;;5.2;LAB SERVICE;**100,121,153,286,350**;Sep 27, 1994;Build 230
"RTN","LRORD",3,0)
 ;
"RTN","LRORD",4,0)
EN ;;
"RTN","LRORD",5,0)
 I $D(^LAB(69.9,1,"RO")),+$H'=+^("RO") W $C(7),!,"ROLLOVER ",$S($P(^("RO"),U,2):"IS RUNNING.",1:"HAS NOT RUN.")," ACCESSIONING SHOULDN'T BE DONE NOW.",$C(7),!,"  Are you sure you want to continue"
"RTN","LRORD",6,0)
 I $T S %=2 D YN^DICN W:%=0 !,"If you continue to accession, you may block accessions from yesterday from",!,"rolling over." G LRORD:%=0 I %'=1 W !,"OK, try later." Q
"RTN","LRORD",7,0)
EN1 ;;from LROR4
"RTN","LRORD",8,0)
 D EN^LRPARAM
"RTN","LRORD",9,0)
 K ^TMP("LRSTIK",$J),DIC,LRURG,LRSAME,LRCOM,LRNATURE,LRTCOM
"RTN","LRORD",10,0)
 S LRORDTIM="" S:'$D(LRORDR) LRORDR="" D DT^LRX
"RTN","LRORD",11,0)
 I $D(LRADDTST) Q:LRADDTST=""
"RTN","LRORD",12,0)
 S LRFIRST=1,LRODT=DT,U="^",LRECT=0,LROUTINE=$P(^LAB(69.9,1,3),U,2)
"RTN","LRORD",13,0)
 S:$G(LRORDRR)="R" LRECT=1,LRFIRST=0
"RTN","LRORD",14,0)
 I '$G(LRECT),LRORDR="" W !!,"WANT TO ENTER COLLECTION TIMES? Y//" D % S LRECT='(%["N") G KILL:$E(%)="^"
"RTN","LRORD",15,0)
 I LRORDR="LC" W !!," Ordering for ROUTINE LAB COLLECT ONLY",$C(7),! S LRLWC="LC",LRLLOC=".",LREND=0 D NEXTCOL^LROW5 G KILL:LREND
"RTN","LRORD",16,0)
 I LRORDR="SP" W !!," Ordering for SEND PATIENT ONLY",$C(7),! S LRLWC="SP"
"RTN","LRORD",17,0)
 I LRORDR="WC" W !!,"Ordering for WARD COLLECT & DELIVER ONLY",$C(7),! S LRLWC="WC"
"RTN","LRORD",18,0)
 I LRORDR="I" D ^LRORDIM G KILL:'$D(LRCDT)
"RTN","LRORD",19,0)
L5 I LRORDR]"",LRORDR'="LC",LRORDR'="I" S %DT="AET",%DT("A")=$S(LRORDR="WC":"COLLECTION",LRORDR="SP":"PATIENT VISIT",1:"")_" DATE: "
"RTN","LRORD",20,0)
 I $T D DATE^LRWU G KILL:Y<1 S LRORDTIM=$P(Y,".",2),LRODT=$P(Y,".",1),X1=Y,X2=DT D ^%DTC IF X>370 W !,"Can't order more than 12 months ahead!!" G L5
"RTN","LRORD",21,0)
 I $D(LRODT),$P(LRODT,".")?7N,'+$E($P(LRODT,"."),6,7) W !!?7,$C(7),"Please enter a date, ie. 4/1/90",!! G L5
"RTN","LRORD",22,0)
 I $D(LRODT),$P(LRODT,".")<DT W !,$C(7),"Cannot order in the Past.",! G L5
"RTN","LRORD",23,0)
 I $D(LRFLOG) S Y=LRFLOG G G0:LRFLOG>0
"RTN","LRORD",24,0)
 S DIC="^LAB(62.6,",DIC(0)="AEQMZ"
"RTN","LRORD",25,0)
 S DIC("S")=$S($D(LRLABKY):"I '(LRORDR=""LC""&'$P(^(0),U,4))",1:"I '(LRORDR=""LC""&'$P(^(0),U,4))&'$P(^(0),U,3)")
"RTN","LRORD",26,0)
 D ^DIC K DIC G KILL:$D(DUOUT)!$D(DTOUT),G1:Y<1 S LRFLOG=Y
"RTN","LRORD",27,0)
G0 S $P(LRFLOG,U,3)=$P(^LAB(62.2,+$P(^LAB(62.6,+LRFLOG,0),U,2),0),U,2)
"RTN","LRORD",28,0)
 S LRFLOG(0)=^LAB(62.6,+LRFLOG,0)
"RTN","LRORD",29,0)
 S (LRWP,I)=0
"RTN","LRORD",30,0)
 F  S I=$O(^LAB(62.6,+Y,1,I)) Q:I<1  D
"RTN","LRORD",31,0)
 . S Y(0)=$G(^LAB(62.6,+Y,1,I,0)),LRWP=LRWP+1
"RTN","LRORD",32,0)
 . S ^TMP("LRSTIK",$J,$S($P(LRFLOG(0),"^",5):I,1:LRWP))=Y(0)
"RTN","LRORD",33,0)
 . ; Lookup by number user enters.
"RTN","LRORD",34,0)
 . S ^TMP("LRSTIK",$J,"B",LRWP)=$S($P(LRFLOG(0),"^",5):I,1:LRWP)
"RTN","LRORD",35,0)
 . ; Lookup by test - used by LEDI (LRORDB) when user creates list "on-the-fly"
"RTN","LRORD",36,0)
 . S ^TMP("LRSTIK",$J,"C",+Y(0),$S($P(LRFLOG(0),"^",5):I,1:LRWP))=""
"RTN","LRORD",37,0)
 I LRWP>40 S LRFIRST=0 ; Don't automatically display "long" test lists.
"RTN","LRORD",38,0)
 G G5
"RTN","LRORD",39,0)
G1 S LRWP=0 W !,"Select one or more tests from which you will be generating your entries."
"RTN","LRORD",40,0)
GET D Q15^LRORD2
"RTN","LRORD",41,0)
 D ^DIC K DIC("S") G:Y<1 G5
"RTN","LRORD",42,0)
 S LRWP=LRWP+1,LRY=Y
"RTN","LRORD",43,0)
 S ^TMP("LRSTIK",$J,LRWP)=$P(LRY,U,1,2)
"RTN","LRORD",44,0)
 ; "B" Used to lookup by number user enters.
"RTN","LRORD",45,0)
 S ^TMP("LRSTIK",$J,"B",LRWP)=LRWP
"RTN","LRORD",46,0)
 ; "C" Used by LEDI (LRORDB)
"RTN","LRORD",47,0)
 S ^TMP("LRSTIK",$J,"C",+LRY,LRWP)=""
"RTN","LRORD",48,0)
 S LRTSTS=+^TMP("LRSTIK",$J,LRWP) D GS^LRORD3
"RTN","LRORD",49,0)
 S:+LRSAMP=-1&(LRSPEC=-1) LRWP=LRWP-1
"RTN","LRORD",50,0)
 G GET:+LRSAMP=-1&(LRSPEC=-1)
"RTN","LRORD",51,0)
 S ^TMP("LRSTIK",$J,LRWP)=^TMP("LRSTIK",$J,LRWP)_U_LRSAMP_U_U_LRSPEC
"RTN","LRORD",52,0)
 G GET
"RTN","LRORD",53,0)
 ;
"RTN","LRORD",54,0)
G5 G KILL:LRWP<1
"RTN","LRORD",55,0)
 S:'$D(^LRO(69,LRODT,0)) ^(0)=$P(^LRO(69,0),U,1,2)_U_LRODT_U_(1+$P(^(0),U,4)),^LRO(69,LRODT,0)=LRODT,^LRO(69,"B",LRODT,LRODT)=""
"RTN","LRORD",56,0)
 S LRURG="",LRAD=DT,LRWPD=LRWP\2+(LRWP#2) D ^LRORD1
"RTN","LRORD",57,0)
KILL D ^LRORDK,HOME^%ZIS Q
"RTN","LRORD",58,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")!($E(%)="^")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRORD",59,0)
EN01 ;LAB COLLECT ORDER ENTRY
"RTN","LRORD",60,0)
ORDER S %=2 W !,"Do you want copies of the orders" D YN^DICN Q:%=-1  S:%=1 LRSLIP="" I %=0 D QUIZ G ORDER
"RTN","LRORD",61,0)
 S LRORDR="LC",LRLWCURG=$S($P(^LAB(69.9,1,3),U,2)'="":$P(^(3),U,2),1:9) G LRORD
"RTN","LRORD",62,0)
EN02 ;SEND PATIENT ORDER ENTRY
"RTN","LRORD",63,0)
SENDPAT S %=2 W !,"Do you want copies of the orders" D YN^DICN Q:%=-1  S:%=1 LRSLIP="" I %=0 D QUIZ G SENDPAT
"RTN","LRORD",64,0)
 S LRORDR="SP" G LRORD
"RTN","LRORD",65,0)
IMMCOL ;IMMEDIATE LAB COLLECTION
"RTN","LRORD",66,0)
 I '$P($G(^LAB(69.9,1,7,DUZ(2),0)),U,6) W !!?5," This option is not available at the time ",!!,$C(7) Q
"RTN","LRORD",67,0)
 S LRORDR="I" K LRODT G LRORD
"RTN","LRORD",68,0)
 ;
"RTN","LRORD",69,0)
EN03 ;WARD COLLECT ORDER ENTRY
"RTN","LRORD",70,0)
WARDCOL ;
"RTN","LRORD",71,0)
 S %=2
"RTN","LRORD",72,0)
 W !,"Do you want copies of the orders" D YN^DICN Q:%=-1  S:%=1 LRSLIP="" I %=0 D QUIZ G WARDCOL
"RTN","LRORD",73,0)
 S LRORDR="WC" D LRORD
"RTN","LRORD",74,0)
 Q
"RTN","LRORD",75,0)
 ;
"RTN","LRORD",76,0)
 ;
"RTN","LRORD",77,0)
LEDI ; Laboratory Electronic Data Exchange
"RTN","LRORD",78,0)
 ; This entry point is used to select patients from ^LRT(67, file
"RTN","LRORD",79,0)
 ; Routine LRDPAREF controls patient selection, patients must already
"RTN","LRORD",80,0)
 ; exist in ^DPT in order to be selected.
"RTN","LRORD",81,0)
 D ^LRPARAM
"RTN","LRORD",82,0)
 I $G(LREND) D ^LRORDK Q
"RTN","LRORD",83,0)
 N CONTROL,LA7,LA7SCFG,LA7X,LA7Y,LR64,LR696,LRLABLIO,LRRSTAT,LRRSITE,LRSD,LRTSN
"RTN","LRORD",84,0)
 S LRREFBAR=$$BAR^LA7SBCR
"RTN","LRORD",85,0)
 I LRREFBAR<0 D ^LRORDK Q
"RTN","LRORD",86,0)
 S LRRSTAT="I"
"RTN","LRORD",87,0)
 S LRRSTAT(0)=$$FIND1^DIC(64.061,"","OMX","Specimen in process","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LRORD",88,0)
 D SITE^LA7SBCR2(.LRRSITE,"Scan Remote Site Barcode (SM)",LRREFBAR)
"RTN","LRORD",89,0)
 I LRRSITE("ERROR") D  Q
"RTN","LRORD",90,0)
 . W !!,$C(7),"ERROR -- ",$P(LRRSITE("ERROR"),"^",2),!
"RTN","LRORD",91,0)
 . D ^LRORDK
"RTN","LRORD",92,0)
 ;
"RTN","LRORD",93,0)
 ; Handle inter-divisional manifests
"RTN","LRORD",94,0)
 I DUZ(2)=$P(LRRSITE("HSITE"),"^"),$$KSP^XUPARAM("INST")=$P(LRRSITE("RPSITE"),"^") D INTERDIV^LA7SMA(.LRRSITE),^LRORDK Q
"RTN","LRORD",95,0)
 ;
"RTN","LRORD",96,0)
 ; Get shipping manifest ID manual input
"RTN","LRORD",97,0)
 I $G(LRRSITE("SMID"))="" D
"RTN","LRORD",98,0)
 . F  D SMID^LRORDB Q:LREND!($G(LRRSITE("SMID"))'="")
"RTN","LRORD",99,0)
 I $G(LREND) D ^LRORDK Q
"RTN","LRORD",100,0)
 ;
"RTN","LRORD",101,0)
 ; LRORDRR="R" variable indicates host accessioning of remote orders
"RTN","LRORD",102,0)
 S LRORDRR="R",LRORDR="" K LRODT
"RTN","LRORD",103,0)
 D LRORD,^LRORDK
"RTN","LRORD",104,0)
 Q
"RTN","LRORD",105,0)
 ;
"RTN","LRORD",106,0)
 ;
"RTN","LRORD",107,0)
 ; LRORDRR =TYPE OF ORDER, LRECT =ASK COLECTION TIME
"RTN","LRORD",108,0)
 ; LRFLOG =ACCESSION TEST GROUP, IF DEFINED ON ENTRY, PRESELECTS GROUP
"RTN","LRORD",109,0)
 ;
"RTN","LRORD",110,0)
QUIZ W !,"The order copy is automatically sent to the CLOSEST PRINTER,"
"RTN","LRORD",111,0)
 W !,"if a closest printer is defined for the device you are using."
"RTN","LRORD",112,0)
 W !,"Otherwise, you will be prompted with ORDER COPY DEVICE.",!
"RTN","LRORD",113,0)
 Q
"RTN","LRORD1")
0^72^B23742203
"RTN","LRORD1",1,0)
LRORD1 ;DALOI/STAFF - LAZY ACCESSION LOGGING ;03/07/12  16:38
"RTN","LRORD1",2,0)
 ;;5.2;LAB SERVICE;**1,8,121,153,201,286,291,350**;Sep 27, 1994;Build 230
"RTN","LRORD1",3,0)
 ;
"RTN","LRORD1",4,0)
L2 Q:$G(LREND)
"RTN","LRORD1",5,0)
 N LRBEQT,LRBEVT,LRBETS,LRBEX,LRBEY,LRBEZ,LRBETYP    ; CIDC
"RTN","LRORD1",6,0)
 K LROT,LRSAME,LRKIL,LRGCOM,LRCCOM,LR696IEN,LRNATURE
"RTN","LRORD1",7,0)
 S LRWPC=LRWP G:$D(LROR) LRFIRST
"RTN","LRORD1",8,0)
 I '$D(LRADDTST) K DFN,DIC S PNM="",DIC(0)="EMQ"_$S($P(LRPARAM,U,6)&$D(LRLABKY):"L",1:"") W ! D ^LRDPA I (LRDFN=-1)!$D(DUOUT)!$D(DTOUT) Q
"RTN","LRORD1",9,0)
 I $D(LRADDTST),LRADDTST="" Q
"RTN","LRORD1",10,0)
 S:'$D(LREND) LREND=0 I LRORDR="" D COLTY^LRWU G DROP:LREND
"RTN","LRORD1",11,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRORD1",12,0)
 ;
"RTN","LRORD1",13,0)
Q12 D LOC^LRWU G DROP:LREND
"RTN","LRORD1",14,0)
 ;
"RTN","LRORD1",15,0)
Q11 D PRAC^LRWU1 G DROP:LREND
"RTN","LRORD1",16,0)
 K T,TT,LRDMAX,LRDTST,LRTMAX
"RTN","LRORD1",17,0)
 S DA=0
"RTN","LRORD1",18,0)
 F  S DA=$O(^LRO(69,LRODT,1,"AA",LRDFN,DA)) Q:DA<1  I $S($D(^LRO(69,LRODT,1,DA,1)):$P(^(1),U,4)'="U",1:1) S S=$S($D(^LRO(69,LRODT,1,DA,4,1,0)):+^(0),1:0) D
"RTN","LRORD1",19,0)
 . S I=0 F  S I=$O(^LRO(69,LRODT,1,DA,2,I)) Q:I<1  I $D(^(I,0)) S T(+^(0),DA)=S,X=+^(0) S:'$D(TT(X,S)) TT(X,S)=0 S TT(X,S)=TT(X,S)+1
"RTN","LRORD1",20,0)
 K DIC
"RTN","LRORD1",21,0)
 I $D(LRADDTST) S LRORD=+LRADDTST,LRADDTST="" G LRFIRST
"RTN","LRORD1",22,0)
 D ORDER^LROW2
"RTN","LRORD1",23,0)
 I $D(LRFLOG),$P(LRFLOG,U,3)="MI",$G(LRORDRR)'="R" K DUOUT D MICRO G L2:$D(DUOUT)!$D(DTOUT)
"RTN","LRORD1",24,0)
 ;
"RTN","LRORD1",25,0)
LRFIRST S LRSX=1 G Q13:'LRFIRST!(LRWP<2)
"RTN","LRORD1",26,0)
 W !,"Choose one (or more, separated by commas)  ('*' AFTER NUMBER TO CHANGE URGENCY) "
"RTN","LRORD1",27,0)
 F I=1:1:LRWPD D
"RTN","LRORD1",28,0)
 . N X
"RTN","LRORD1",29,0)
 . S X=^TMP("LRSTIK",$J,"B",I)
"RTN","LRORD1",30,0)
 . W !,X,?4,$P(^TMP("LRSTIK",$J,X),U,2)
"RTN","LRORD1",31,0)
 . S X=$G(^TMP("LRSTIK",$J,"B",I+LRWPD))
"RTN","LRORD1",32,0)
 . I X W ?39," ",X,?44,$P(^TMP("LRSTIK",$J,X),U,2)
"RTN","LRORD1",33,0)
Q13 S LREDO=0
"RTN","LRORD1",34,0)
 ;
"RTN","LRORD1",35,0)
LEDI ;
"RTN","LRORD1",36,0)
 ;
"RTN","LRORD1",37,0)
 ; If LEDI accessioning then check for pending orders in file #69.6
"RTN","LRORD1",38,0)
 I $G(LRRSTAT)="I",$G(LRRSITE("SMID"))'="",$G(LRSD("RUID"))'="" D  I $O(LROT(0)) G BAR
"RTN","LRORD1",39,0)
 . D EN^LRORDB(LRSD("RUID"),LRRSITE("SMID"))
"RTN","LRORD1",40,0)
 G:LRWP'>1 Q13A
"RTN","LRORD1",41,0)
 W ! W:'LRFIRST "'?' for list,  " S LRFIRST=0
"RTN","LRORD1",42,0)
 R "TEST number(s): ",LRSX:DTIME S:LRSX["?" LRFIRST=1 G LRFIRST:LRFIRST
"RTN","LRORD1",43,0)
 I LRSX=""!(LRSX["^") G BAR
"RTN","LRORD1",44,0)
 F I=1:1:$L(LRSX,",") D  Q:LREDO
"RTN","LRORD1",45,0)
 . S LRSSX=$P(LRSX,",",I)
"RTN","LRORD1",46,0)
 . I LRSSX'?1.3N.1"*" S LREDO=1 Q
"RTN","LRORD1",47,0)
 . S LRSSX=$P(LRSSX,"*")
"RTN","LRORD1",48,0)
 . I '$D(^TMP("LRSTIK",$J,LRSSX)) S LREDO=1
"RTN","LRORD1",49,0)
Q13A I LREDO W !,"Something was mistyped, try again." G Q13
"RTN","LRORD1",50,0)
 F LRK=1:1 S LRSSX=$P(LRSX,",",LRK) Q:LRSSX=""  D
"RTN","LRORD1",51,0)
 . N X
"RTN","LRORD1",52,0)
 . S LRST=$S(LRSSX["*":1,1:0),LRSSX=+LRSSX
"RTN","LRORD1",53,0)
 . S X=^TMP("LRSTIK",$J,LRSSX)
"RTN","LRORD1",54,0)
 . S LRSAMP=$P(X,U,3),LRSPEC=$P(X,U,5),LRTSTS=+X
"RTN","LRORD1",55,0)
 . D Q20^LRORDD
"RTN","LRORD1",56,0)
BAR S LRM=LRWPC+1,K=0 G:$G(LRORDRR)="R" Q14 W !,"Other tests? N//" D % G Q14:'(%["Y")
"RTN","LRORD1",57,0)
LRM D MORE^LRORD2
"RTN","LRORD1",58,0)
Q14 D:$P(LRPARAM,U,17) ^LRORDD D ^LRORD2A D ENSTIK^LROW3 G LRM:'$D(%)&($D(LROT)'=11),DROP:$O(LROT(-1))="",LRM:'$D(%),DROP:%[U K DIC G DROP:'$D(LROT)!(%["N")
"RTN","LRORD1",59,0)
 S LRBEY=1 I $G(LRORDRR)'="R",+LRDPF=2&($G(LRSS)'="BB")&('$$CHKINP^LRBEBA4(LRDFN,LRODT)) D  G DROP:'LRBEY
"RTN","LRORD1",60,0)
 .D BALROR^LRBEBA3(.LRORD)  ; CIDC
"RTN","LRORD1",61,0)
 I ($D(LRBEY)<1)!$D(DUOUT)!$D(DTOUT) Q
"RTN","LRORD1",62,0)
 W !!,"LAB Order number: ",LRORD,!!
"RTN","LRORD1",63,0)
 I LRECT D  G DROP:LRCDT<1
"RTN","LRORD1",64,0)
 . I $G(LRORDRR)="R",$G(LRSD("CDT")) D  Q
"RTN","LRORD1",65,0)
 . . S LRCDT=LRSD("CDT")_"^"
"RTN","LRORD1",66,0)
 . . S LRORDTIM=$P(LRSD("CDT"),".",2)
"RTN","LRORD1",67,0)
 . . I 'LRORDTIM S $P(LRCDT,"^",2)=1
"RTN","LRORD1",68,0)
 . D TIME^LROE
"RTN","LRORD1",69,0)
 . I $G(LRCDT)<1 Q
"RTN","LRORD1",70,0)
 . S LRORDTIM=$P($P(LRCDT,U),".",2)
"RTN","LRORD1",71,0)
 D NOW^%DTC S LRNT=% S:'LRECT LRCDT=LRNT_"^1"
"RTN","LRORD1",72,0)
 S LRIDT=9999999-LRCDT
"RTN","LRORD1",73,0)
 D ^LRORDST Q:$D(LROR)
"RTN","LRORD1",74,0)
 I $D(LRFASTS) D LRWU4^LRFASTS
"RTN","LRORD1",75,0)
 Q:$G(LRKIL)  G L2
"RTN","LRORD1",76,0)
 ;
"RTN","LRORD1",77,0)
 ;
"RTN","LRORD1",78,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRORD1",79,0)
 ;
"RTN","LRORD1",80,0)
 ;
"RTN","LRORD1",81,0)
Q20A ;from LRORD2
"RTN","LRORD1",82,0)
MAX ; CHECK FOR MAXIUM ORDER FREQUENCY
"RTN","LRORD1",83,0)
 N I7,I9,LRSN
"RTN","LRORD1",84,0)
 I $D(TT(LRTSTS,LRSPEC)),$D(^LAB(60,LRTSTS,3,"B",LRCS(LRCSN))) D EN2^LRORDD I %'["Y" Q
"RTN","LRORD1",85,0)
 S (I7,I9)=0
"RTN","LRORD1",86,0)
 F  S I9=$O(T(LRTSTS,I9)) Q:I9=""  I $D(^LAB(60,LRTSTS,3,+$O(^LAB(60,LRTSTS,3,"B",LRSAMP,0)),0)),+$P(^(0),U,5),LRSPEC=T(LRTSTS,I9) S I7=1
"RTN","LRORD1",87,0)
 I I7 D
"RTN","LRORD1",88,0)
 . W $C(7),!!,"You have a duplicate: "
"RTN","LRORD1",89,0)
 . S LRSN=0
"RTN","LRORD1",90,0)
 . F  S LRSN=$O(T(LRTSTS,LRSN)) Q:LRSN<1  D
"RTN","LRORD1",91,0)
 . . W "  for ",$P(^LAB(60,LRTSTS,0),U)
"RTN","LRORD1",92,0)
 . . N LRTSTS D ORDER^LROS
"RTN","LRORD1",93,0)
 . W !,"You already have that test, do you really want another? N//" D %
"RTN","LRORD1",94,0)
 Q
"RTN","LRORD1",95,0)
 ;
"RTN","LRORD1",96,0)
 ;
"RTN","LRORD1",97,0)
URGG W !,"For ",$P(^TMP("LRSTIK",$J,LRSSX),U,2)
"RTN","LRORD1",98,0)
 D URG^LRORD2
"RTN","LRORD1",99,0)
 Q
"RTN","LRORD1",100,0)
 ;
"RTN","LRORD1",101,0)
 ;
"RTN","LRORD1",102,0)
DROP W !!,"ORDER CANCELED",$C(7),!! Q:$D(LROR)  G L2 ; !($G(LREND))  G L2
"RTN","LRORD1",103,0)
 ;
"RTN","LRORD1",104,0)
 ;
"RTN","LRORD1",105,0)
MICRO W !,"Is there one sample for this patient's order"
"RTN","LRORD1",106,0)
 S %=1 D YN^DICN
"RTN","LRORD1",107,0)
 I %=2!(%=-1) S:%=-1 DUOUT=1 Q
"RTN","LRORD1",108,0)
 I %=0 W !,"The collection sample and site/specimen will be used for all tests ordered",!,"at this time for this patient." G MICRO
"RTN","LRORD1",109,0)
 D GSNO^LRORD3 Q:$D(DUOUT)!$D(DTOUT)
"RTN","LRORD1",110,0)
 I +LRSAMP=-1&(LRSPEC=-1) W !,"Incompletely defined." G MICRO
"RTN","LRORD1",111,0)
 S LRSAME=LRSAMP_U_LRSPEC
"RTN","LRORD1",112,0)
 S LRECOM=0 D GCOM^LRORD2
"RTN","LRORD1",113,0)
 Q
"RTN","LRORD1",114,0)
 ;
"RTN","LRORD1",115,0)
 ;
"RTN","LRORD1",116,0)
PRAC ;from LRFAST
"RTN","LRORD1",117,0)
 S X=$S(+DIC("B"):$P(^VA(200,+DIC("B"),0),U),1:"")
"RTN","LRORD1",118,0)
 W !,"PRACTITIONER: ",X,$S($L(X):"//",1:"")
"RTN","LRORD1",119,0)
 R X:DTIME
"RTN","LRORD1",120,0)
 I DIC("B"),X="" S Y=DIC("B") Q
"RTN","LRORD1",121,0)
 D ^DIC K DIC
"RTN","LRORD1",122,0)
 Q
"RTN","LRORDB")
0^88^B46918556
"RTN","LRORDB",1,0)
LRORDB ;DALOI/STAFF - ORDER LEDI TEST USING BARCODE FROM 69.6 ;06/22/11  12:38
"RTN","LRORDB",2,0)
 ;;5.2;LAB SERVICE;**153,222,286,350**;Sep 27, 1994;Build 230
"RTN","LRORDB",3,0)
 ;
"RTN","LRORDB",4,0)
EN(LRRUID,LRSSMP) ;
"RTN","LRORDB",5,0)
 ;
"RTN","LRORDB",6,0)
 N I,LRDIR,LRSTATUS,LRX,X
"RTN","LRORDB",7,0)
 ;
"RTN","LRORDB",8,0)
 K LROT
"RTN","LRORDB",9,0)
 ;
"RTN","LRORDB",10,0)
 S (LROT,LRSTATUS)=""
"RTN","LRORDB",11,0)
 ;
"RTN","LRORDB",12,0)
 Q:($G(LRRUID)="")!($G(LRSSMP)="")
"RTN","LRORDB",13,0)
 S LR696=$O(^LRO(69.6,"AD",LRSSMP,LRRUID,0)) Q:'LR696
"RTN","LRORDB",14,0)
 Q:'($D(^LRO(69.6,LR696,0))#2)
"RTN","LRORDB",15,0)
 ;
"RTN","LRORDB",16,0)
 S LRDIR("A",2)=" "
"RTN","LRORDB",17,0)
 S LRDIR("A",2.001)="Collecting Site UID: "_LRRUID
"RTN","LRORDB",18,0)
 ;S LRDIR("A",2.002)="Current Tests on Order:"
"RTN","LRORDB",19,0)
 S LRDIR("A",2.003)="Collecting Site Test           Host UID        Host Site Test"
"RTN","LRORDB",20,0)
 S LRDIR("A",2.004)="--------------------           --------        --------------"
"RTN","LRORDB",21,0)
 S I=0
"RTN","LRORDB",22,0)
 F  S I=$O(^LRO(69.6,LR696,2,I)) Q:'I  D
"RTN","LRORDB",23,0)
 . S I(0)=$G(^LRO(69.6,LR696,2,I,0))
"RTN","LRORDB",24,0)
 . S X=$P(I(0),"^",3)
"RTN","LRORDB",25,0)
 . I X="" S X=$P(I(0),"^",1) ; If no remote test name then display NLT Test field value.
"RTN","LRORDB",26,0)
 . S LRDIR("A","2."_I)=$$LJ^XLFSTR($E(X,1,30),31)_$$LJ^XLFSTR($P(I(0),"^",9),15)_" "_$E($P($G(^LAB(60,+$P(I(0),"^",11),0)),"^"),1,30)
"RTN","LRORDB",27,0)
 K I
"RTN","LRORDB",28,0)
 ;
"RTN","LRORDB",29,0)
 S LRX=+$P(^LRO(69.6,LR696,0),U,10)
"RTN","LRORDB",30,0)
 I LRX S LRSTATUS=$$GET1^DIQ(64.061,LRX_",",.01)
"RTN","LRORDB",31,0)
 I LRSTATUS'="",LRSTATUS'="In-Transit" D
"RTN","LRORDB",32,0)
 . S I=0
"RTN","LRORDB",33,0)
 . F  S I=$O(^LRO(69.6,LR696,2,I)) Q:'I  D  Q:LRSTATUS="In-Transit"
"RTN","LRORDB",34,0)
 . . S X=$P(^LRO(69.6,LR696,2,I,0),"^",6) Q:'X
"RTN","LRORDB",35,0)
 . . I $$GET1^DIQ(64.061,X_",",.01)="In-Transit" S LRSTATUS="In-Transit"
"RTN","LRORDB",36,0)
 ;
"RTN","LRORDB",37,0)
 I LRSTATUS'="",LRSTATUS'="In-Transit" D  Q
"RTN","LRORDB",38,0)
 . S LRDIR("A",1)="This order has a status of ["_LRSTATUS_"]"
"RTN","LRORDB",39,0)
 . S LRDIR("A",1.1)="No test selected."
"RTN","LRORDB",40,0)
 . D DISPLO(.LRDIR)
"RTN","LRORDB",41,0)
 ;
"RTN","LRORDB",42,0)
 ; Display any comments that accompanied order
"RTN","LRORDB",43,0)
 I $D(^LRO(69.6,LR696,99)) D
"RTN","LRORDB",44,0)
 . N LRWP
"RTN","LRORDB",45,0)
 . S LRWP=$$GET1^DIQ(69.6,LR696_",",99,"","LRWP")
"RTN","LRORDB",46,0)
 . S LRWP(.5)="Collecting site order comments:",LRWP(.5,"F")="!!"
"RTN","LRORDB",47,0)
 . D EN^DDIOL(.LRWP)
"RTN","LRORDB",48,0)
 ;
"RTN","LRORDB",49,0)
 D LROT(LR696)
"RTN","LRORDB",50,0)
 ;
"RTN","LRORDB",51,0)
 ;I $O(LROT(0)) D LL3^LROW3
"RTN","LRORDB",52,0)
 I '$O(LROT(0)) D  Q
"RTN","LRORDB",53,0)
 . S LRDIR("A",2)="NO tests found on Shipping Manifest "_$G(LRRSITE("SMID"))
"RTN","LRORDB",54,0)
 . S LRDIR("A",2.1)="For UID "_$G(LRRUID)
"RTN","LRORDB",55,0)
 . D DISPLO(.LRDIR)
"RTN","LRORDB",56,0)
 ;
"RTN","LRORDB",57,0)
 S $P(^LRO(69.6,LR696,0),U,11)=$G(LRSD("RIEN"))
"RTN","LRORDB",58,0)
 Q
"RTN","LRORDB",59,0)
 ;
"RTN","LRORDB",60,0)
 ;
"RTN","LRORDB",61,0)
LROT(LR696) ;
"RTN","LRORDB",62,0)
 ;
"RTN","LRORDB",63,0)
 N LR60,LR6205,LR6964,LRATG,LRMICHK,LRNLT,LRX,LRY,X
"RTN","LRORDB",64,0)
 ;
"RTN","LRORDB",65,0)
 K LROT
"RTN","LRORDB",66,0)
 ;
"RTN","LRORDB",67,0)
 S LR696(0)=$G(^LRO(69.6,LR696,0))
"RTN","LRORDB",68,0)
 S LRSPEC=+$P(LR696(0),U,7),LRSAMP=+$P(LR696(0),U,8)
"RTN","LRORDB",69,0)
 ;Q:'LRSPEC!('$D(^LAB(61,LRSPEC,0)))
"RTN","LRORDB",70,0)
 S (LR6964,LRMICHK)=0
"RTN","LRORDB",71,0)
 F  S LR6964=+$O(^LRO(69.6,LR696,2,LR6964)) Q:LR6964<1  D
"RTN","LRORDB",72,0)
 . S LR6964(0)=$G(^LRO(69.6,LR696,2,LR6964,0))
"RTN","LRORDB",73,0)
 . I LR6964(0)="" Q
"RTN","LRORDB",74,0)
 . I $P(LR6964(0),"^",6),$$GET1^DIQ(64.061,$P(LR6964(0),"^",6)_",",.01)'="In-Transit" Q
"RTN","LRORDB",75,0)
 . S LR60=$P(LR6964(0),U,11) ; Lab test to order
"RTN","LRORDB",76,0)
 . S LR6205=$P(LR6964(0),U,12) ; Urgency
"RTN","LRORDB",77,0)
 . I 'LRMICHK,LR60>0,"MISPCYEM"[$P(^LAB(60,LR60,0),U,4) D MICHECK
"RTN","LRORDB",78,0)
 . S LRATG=0
"RTN","LRORDB",79,0)
 . ; If have everything, then don't check accession test group.
"RTN","LRORDB",80,0)
 . I LR60,LRSPEC,LRSAMP,LR6205 D  Q:LRATG
"RTN","LRORDB",81,0)
 . . S LR64=+$G(^LAB(60,LR60,64))
"RTN","LRORDB",82,0)
 . . I 'LR64 Q
"RTN","LRORDB",83,0)
 . . S LRNLT=$P($G(^LAM(LR64,0)),U,2),LRNLT(2)=$P($G(^LAM(LR64,0)),U)
"RTN","LRORDB",84,0)
 . . ; Find available spot.
"RTN","LRORDB",85,0)
 . . F LRATG=LRWPC+1:1 I '$D(LROT(LRSAMP,LRSPEC,LRATG)) S LRWPC=LRATG Q
"RTN","LRORDB",86,0)
 . . D CHKURG,SETLROT
"RTN","LRORDB",87,0)
 . S LRNLT=$P(LR6964(0),U,2) Q:'LRNLT
"RTN","LRORDB",88,0)
 . S LRNLT(1)=+$O(^LAM("C",LRNLT_" ",0))
"RTN","LRORDB",89,0)
 . I 'LRNLT(1)!('$D(^LAM(LRNLT(1),0))) Q
"RTN","LRORDB",90,0)
 . S LRNLT(2)=$P(^LAM(LRNLT(1),0),U),LR60=0
"RTN","LRORDB",91,0)
 . F  S LR60=+$O(^LAB(60,"AC",LRNLT(1),LR60)) Q:'LR60  D
"RTN","LRORDB",92,0)
 . . S LRATG=+$O(^TMP("LRSTIK",$J,"C",LR60,0)) Q:LRATG<1
"RTN","LRORDB",93,0)
 . . S LRATG(1)=$G(^TMP("LRSTIK",$J,LRATG)) Q:'LRATG(1)!('$P(LRATG(1),U,3))
"RTN","LRORDB",94,0)
 . . S:'$G(LRSAMP) LRSAMP=$P(LRATG(1),U,3)
"RTN","LRORDB",95,0)
 . . D CHKURG
"RTN","LRORDB",96,0)
 . . I LR60,LRSPEC,LRSAMP,LR6205 D SETLROT
"RTN","LRORDB",97,0)
 Q
"RTN","LRORDB",98,0)
 ;
"RTN","LRORDB",99,0)
 ;
"RTN","LRORDB",100,0)
SETLROT ; Setup LROT array
"RTN","LRORDB",101,0)
 ;
"RTN","LRORDB",102,0)
 S LROT(LRSAMP,LRSPEC,LRATG)=LR60
"RTN","LRORDB",103,0)
 S LROT(LRSAMP,LRSPEC,LRATG,1)=LR6205
"RTN","LRORDB",104,0)
 S LROT(LRSAMP,LRSPEC,LRATG,"B",LR60)=LR6964_U_LRNLT_U_LRNLT(2)
"RTN","LRORDB",105,0)
 ;
"RTN","LRORDB",106,0)
 ; Required comment
"RTN","LRORDB",107,0)
 S:$P($G(^LAB(60,LR60,0)),U,19) LROT(LRSAMP,LRSPEC,LRATG,2)=$P(^(0),U,19)
"RTN","LRORDB",108,0)
 ;
"RTN","LRORDB",109,0)
 Q
"RTN","LRORDB",110,0)
 ;
"RTN","LRORDB",111,0)
 ;
"RTN","LRORDB",112,0)
CHKURG ; Check for forced, highest allowed and missing urgency on this test
"RTN","LRORDB",113,0)
 ;
"RTN","LRORDB",114,0)
 N X
"RTN","LRORDB",115,0)
 ;
"RTN","LRORDB",116,0)
 ; Forced urgency
"RTN","LRORDB",117,0)
 I +$P(^LAB(60,LR60,0),U,18) S LR6205=+$P(^LAB(60,LR60,0),U,18)
"RTN","LRORDB",118,0)
 ;
"RTN","LRORDB",119,0)
 ; If missing urgency then look above workload urgencies for last urgency
"RTN","LRORDB",120,0)
 ; that matches on HL7 urgency otherwise use site's default for routine.
"RTN","LRORDB",121,0)
 I 'LR6205 D
"RTN","LRORDB",122,0)
 . S X=$P(LR6964(0),U,5)
"RTN","LRORDB",123,0)
 . I X'="" S LR6205=+$O(^LAB(62.05,"HL7",X,50),-1)
"RTN","LRORDB",124,0)
 . S LR6205=$S(LR6205>0:LR6205,1:LROUTINE)
"RTN","LRORDB",125,0)
 ;
"RTN","LRORDB",126,0)
 ; Highest urgency allowed, reset if higher than highest allowed.
"RTN","LRORDB",127,0)
 S X=+$P(^LAB(60,LR60,0),U,16)
"RTN","LRORDB",128,0)
 I LR6205<X S LR6205=X
"RTN","LRORDB",129,0)
 ;
"RTN","LRORDB",130,0)
 Q
"RTN","LRORDB",131,0)
 ;
"RTN","LRORDB",132,0)
 ;
"RTN","LRORDB",133,0)
MICHECK ; Check "MI" subscript test for missing topography and collection sample
"RTN","LRORDB",134,0)
 ;
"RTN","LRORDB",135,0)
 N DA,DIE,DR,X,Y
"RTN","LRORDB",136,0)
 S DA=LR696,DIE=69.6,DR="",LRMICHK=1
"RTN","LRORDB",137,0)
 I LRSPEC'>0 S DR=4_";"
"RTN","LRORDB",138,0)
 I LRSAMP'>0 S DR=DR_5
"RTN","LRORDB",139,0)
 I LRSPEC D
"RTN","LRORDB",140,0)
 . I $P(^LAB(60,LR60,0),U,4)'="MI" Q
"RTN","LRORDB",141,0)
 . S LRX=$$GET1^DIQ(61,LRSPEC_",",".09:2")
"RTN","LRORDB",142,0)
 . I LRX="XXX"!(LRX="ORH") S DR="4;5"
"RTN","LRORDB",143,0)
 I DR="" Q
"RTN","LRORDB",144,0)
 D EN^DDIOL("Update missing order information for:",,"!!")
"RTN","LRORDB",145,0)
 D EN^DDIOL("",,"!")
"RTN","LRORDB",146,0)
 D ^DIE
"RTN","LRORDB",147,0)
 S LR696(0)=$G(^LRO(69.6,LR696,0))
"RTN","LRORDB",148,0)
 S LRSPEC=+$P(LR696(0),U,7),LRSAMP=+$P(LR696(0),U,8)
"RTN","LRORDB",149,0)
 ;
"RTN","LRORDB",150,0)
 Q
"RTN","LRORDB",151,0)
 ;
"RTN","LRORDB",152,0)
 ;
"RTN","LRORDB",153,0)
SMID ; Call to get shipping manifest ID (manual selection)
"RTN","LRORDB",154,0)
 N CNT,DA,DIR,LRSMID,LRY,X,Y
"RTN","LRORDB",155,0)
 S LREND=0,LRSMID=""
"RTN","LRORDB",156,0)
 S DIR(0)="69.6,18" D ^DIR
"RTN","LRORDB",157,0)
 I $D(DTOUT)!($D(DUOUT)) S LREND=1 Q
"RTN","LRORDB",158,0)
 I $D(DIRUT) Q
"RTN","LRORDB",159,0)
 S LRY=Y
"RTN","LRORDB",160,0)
 I LRY'="",$D(^LRO(69.6,"D",LRY)) D
"RTN","LRORDB",161,0)
 . N LR696
"RTN","LRORDB",162,0)
 . S LR696=$O(^LRO(69.6,"D",LRY,0))
"RTN","LRORDB",163,0)
 . I $P($G(^LRO(69.6,+LR696,0)),"^",5)=+$G(LRRSITE("RSITE")) S LRSMID=LRY
"RTN","LRORDB",164,0)
 I LRSMID="" D
"RTN","LRORDB",165,0)
 . D SHOW
"RTN","LRORDB",166,0)
 . K ^TMP("LR",$J,"SMID")
"RTN","LRORDB",167,0)
 ;
"RTN","LRORDB",168,0)
 I LRSMID="" D  Q
"RTN","LRORDB",169,0)
 . N DIR
"RTN","LRORDB",170,0)
 . S DIR(0)="YO",DIR("A")="Use manifest '"_LRY_"' anyway",DIR("B")="NO"
"RTN","LRORDB",171,0)
 . W ! D ^DIR
"RTN","LRORDB",172,0)
 . I Y S LRRSITE("SMID")=LRY
"RTN","LRORDB",173,0)
 ;
"RTN","LRORDB",174,0)
 S LRRSITE("SMID")=LRSMID
"RTN","LRORDB",175,0)
 S LRY=$O(^LRO(69.6,"D",LRSMID,0))
"RTN","LRORDB",176,0)
 I LRY S LRRSITE("SDT")=$$GET1^DIQ(69.6,LRY_",",14,"I")
"RTN","LRORDB",177,0)
 K DIR
"RTN","LRORDB",178,0)
 ;
"RTN","LRORDB",179,0)
 ; Flag to determine if this shipping manifest should be used to
"RTN","LRORDB",180,0)
 ; look up orders when manually accessioning.
"RTN","LRORDB",181,0)
 S DIR(0)="YO",DIR("A")="Lookup orders using this manifest",DIR("B")="YES"
"RTN","LRORDB",182,0)
 D ^DIR
"RTN","LRORDB",183,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRORDB",184,0)
 S LRRSITE("SMID-OK")=Y
"RTN","LRORDB",185,0)
 Q
"RTN","LRORDB",186,0)
 ;
"RTN","LRORDB",187,0)
 ;
"RTN","LRORDB",188,0)
SHOW ; Gather a list of possible SMID to select from
"RTN","LRORDB",189,0)
 N CNT,DIR,IEN,LEN,SMID,VAL
"RTN","LRORDB",190,0)
 K ^TMP("LR",$J,"SMID")
"RTN","LRORDB",191,0)
 S SMID=LRY,LEN=$L(LRY),CNT=0
"RTN","LRORDB",192,0)
 I SMID?1.N S SMID=SMID_" "
"RTN","LRORDB",193,0)
 F  S SMID=$O(^LRO(69.6,"D",SMID)) Q:$E(SMID,1,LEN)'=LRY  D
"RTN","LRORDB",194,0)
 . S IEN=+$O(^LRO(69.6,"D",SMID,0))
"RTN","LRORDB",195,0)
 . I $P($G(^LRO(69.6,IEN,0)),"^",5)'=+$G(LRRSITE("RSITE")) Q
"RTN","LRORDB",196,0)
 . S CNT=CNT+1
"RTN","LRORDB",197,0)
 . S ^TMP("LR",$J,"SMID",CNT)=SMID
"RTN","LRORDB",198,0)
 I 'CNT W !,"No manifest '",LRY,"' found on file." Q
"RTN","LRORDB",199,0)
 I CNT=1 S LRSMID=^TMP("LR",$J,"SMID",CNT) Q
"RTN","LRORDB",200,0)
 ;
"RTN","LRORDB",201,0)
 ; Select SMID from List
"RTN","LRORDB",202,0)
 D DISPL
"RTN","LRORDB",203,0)
 S DIR(0)="NO^1:"_CNT,DIR("A")="Select Manifest Number"
"RTN","LRORDB",204,0)
 D ^DIR
"RTN","LRORDB",205,0)
 I $D(DIRUT) W !,"No manifest selected." Q
"RTN","LRORDB",206,0)
 S LRSMID=$G(^TMP("LR",$J,"SMID",Y))
"RTN","LRORDB",207,0)
 Q
"RTN","LRORDB",208,0)
 ;
"RTN","LRORDB",209,0)
 ;
"RTN","LRORDB",210,0)
DISPL ;
"RTN","LRORDB",211,0)
 N CNT,DIR,DIRUT
"RTN","LRORDB",212,0)
 W @IOF
"RTN","LRORDB",213,0)
 S CNT=0
"RTN","LRORDB",214,0)
 F  S CNT=$O(^TMP("LR",$J,"SMID",CNT)) Q:'CNT  D  Q:$D(DIRUT)
"RTN","LRORDB",215,0)
 . I CNT#3=1 D  Q:$D(DIRUT)
"RTN","LRORDB",216,0)
 . . I '(CNT#(IOSL-3)) S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","LRORDB",217,0)
 . . W !
"RTN","LRORDB",218,0)
 . W $$LJ^XLFSTR(CNT_". "_^TMP("LR",$J,"SMID",CNT),26)
"RTN","LRORDB",219,0)
 Q
"RTN","LRORDB",220,0)
 ;
"RTN","LRORDB",221,0)
 ;
"RTN","LRORDB",222,0)
DISPLO(LRDIR) ; Display the order from #69.6
"RTN","LRORDB",223,0)
 ; Call with LRDIR = array of additonal prompts to display, pass by reference
"RTN","LRORDB",224,0)
 ;
"RTN","LRORDB",225,0)
 N DA,DIC,DIR,DIRUT,DTOUT,DUOUT,DX,S,X,Y
"RTN","LRORDB",226,0)
 ;
"RTN","LRORDB",227,0)
 M DIR=LRDIR
"RTN","LRORDB",228,0)
 S DIR("A")="Would you like a display of the Order",DIR("B")="NO"
"RTN","LRORDB",229,0)
 S DIR(0)="Y" D ^DIR K DIR
"RTN","LRORDB",230,0)
 I $D(DIRUT)!(Y'=1) W ! Q
"RTN","LRORDB",231,0)
 S DA=LR696,DIC="^LRO(69.6,",S=0 W @IOF D EN^DIQ W !
"RTN","LRORDB",232,0)
 Q
"RTN","LROW3")
0^75^B12501822
"RTN","LROW3",1,0)
LROW3 ;DALOI/STAFF - LIST THE TESTS ORDERED AND ALLOW EDITING ;11/18/11  16:29
"RTN","LROW3",2,0)
 ;;5.2;LAB SERVICE;**33,121,286,350**;Sep 27, 1994;Build 230
"RTN","LROW3",3,0)
 ;
"RTN","LROW3",4,0)
L ;
"RTN","LROW3",5,0)
 ; Only ask nature of order for CPRS - file #2 patients.
"RTN","LROW3",6,0)
 I $G(LRDPF,2)=2 D  Q:'$D(LRNATURE)
"RTN","LROW3",7,0)
 . D NATURE
"RTN","LROW3",8,0)
 . I $G(LRNATURE)=-1 W !!,$C(7),"...process aborted" S %="^" K LRNATURE
"RTN","LROW3",9,0)
 D L3
"RTN","LROW3",10,0)
 W !!,"All satisfactory" S %=1 D YN^DICN D:%=0 HELP G:%=0 L Q:%'=2
"RTN","LROW3",11,0)
L1 W !,"Delete test entry no.: " R X:DTIME W:X["?" !,"Select entry number to be deleted." W:X'?.N !,"Select one entry at a time." D L3:X["?" G L1:X["?"!(X'?.N)
"RTN","LROW3",12,0)
 I X'="",'$D(J(+X)) W !!?5,$C(7),"( "_X_" ) Is not a valid entry number " G LROW3
"RTN","LROW3",13,0)
 I X'="" S X=+X S LRSAMP=$P(J(X),U),LRTEST=$P(J(X),U,2) D X3 G L1
"RTN","LROW3",14,0)
L1A W !!,"Add more tests" S %=2 D YN^DICN D:%=0 HELP G:%=0 L1A I %=1 D L2^LROW1
"RTN","LROW3",15,0)
 G LROW3
"RTN","LROW3",16,0)
 ;
"RTN","LROW3",17,0)
 ;
"RTN","LROW3",18,0)
L2 S LRSAMP=$S($D(^LAB(62,I,0)):$P(^(0),U),1:"")
"RTN","LROW3",19,0)
 S K=0
"RTN","LROW3",20,0)
 F  S K=$O(LRXST(I,K)) Q:K<1  S J=K,J(K)=I_U_K D L4 W !,?5,K,?15,$P(^LAB(60,+LRTEST(K),0),U)," ",?45,LRSAMP W:LRSAMP'=LRSPEC "  ",LRSPEC
"RTN","LROW3",21,0)
 Q
"RTN","LROW3",22,0)
 ;
"RTN","LROW3",23,0)
 ;
"RTN","LROW3",24,0)
L3 ;
"RTN","LROW3",25,0)
 K J S J=0,I=0
"RTN","LROW3",26,0)
 W !!,"You have just selected the following tests for ",PNM,"  ",SSN
"RTN","LROW3",27,0)
 I $G(LRLWC)="LC" W:$G(LRORDTIM) !," for Collection on: ",$$FMTE^XLFDT(LRODT_"."_LRORDTIM,"M")
"RTN","LROW3",28,0)
 W !,?5,"entry no.",?15,"Test",?45,"Sample"
"RTN","LROW3",29,0)
 S I=0 F  S I=$O(LRXST(I)) Q:I<1  D L2
"RTN","LROW3",30,0)
 Q
"RTN","LROW3",31,0)
 ;
"RTN","LROW3",32,0)
 ;
"RTN","LROW3",33,0)
L4 S LRSPEC=$S(I>0:$S($D(^LAB(61,LRXST(I,K),0)):$P(^(0),U),1:""),1:$P(^LAB(61,$P(LRXST(0,K),U,2),0),U))
"RTN","LROW3",34,0)
 Q
"RTN","LROW3",35,0)
 ;
"RTN","LROW3",36,0)
 ;
"RTN","LROW3",37,0)
ENSTIK ;from LRMIBL, LRORD1
"RTN","LROW3",38,0)
 ; Only ask nature of order for CPRS - file #2 patients.
"RTN","LROW3",39,0)
 I $G(LRDPF,2)=2 D  Q:'$D(LRNATURE)
"RTN","LROW3",40,0)
 . D NATURE
"RTN","LROW3",41,0)
 . I $G(LRNATURE)=-1 W !!,$C(7),"...process aborted" S %="^" K LRNATURE
"RTN","LROW3",42,0)
 ;
"RTN","LROW3",43,0)
 D LL3
"RTN","LROW3",44,0)
LL W !!,"All satisfactory" S %=1 D YN^DICN D:%=0 HELP G:%=0 LL Q:%'=2
"RTN","LROW3",45,0)
 ;
"RTN","LROW3",46,0)
LL1 W !,"Delete test entry no.: " R X:DTIME
"RTN","LROW3",47,0)
 W:X["?" !,"Select entry number to be deleted."
"RTN","LROW3",48,0)
 W:X'?.N !,"Select one entry at a time."
"RTN","LROW3",49,0)
 D LL3:X["?" G LL1:X["?"!(X'?.N)
"RTN","LROW3",50,0)
 I X I +X=X I '$D(J(+X)) W !!?5,$C(7),"( "_X_" ) is not a valid entry.",! H 2 G LL1
"RTN","LROW3",51,0)
 I '(+X'=X!(X>J)!(X<1)) S LRSAMP=$P(J(X),U),LRSPEC=$P(J(X),U,2),LRTEST=$P(J(X),U,3) K LROT(LRSAMP,LRSPEC,LRTEST) G LL1
"RTN","LROW3",52,0)
 ;
"RTN","LROW3",53,0)
LL1A W !!,"Add more tests" S %=2 D YN^DICN D:%=0 HELP G:%=0 LL1A G ENSTIK:%'=1
"RTN","LROW3",54,0)
 K %
"RTN","LROW3",55,0)
 Q
"RTN","LROW3",56,0)
 ;
"RTN","LROW3",57,0)
 ;
"RTN","LROW3",58,0)
LL2 ;
"RTN","LROW3",59,0)
 S LRSAMP=$P($G(^LAB(62,+I,0)),U)
"RTN","LROW3",60,0)
 S LRSPEC=$P($G(^LAB(61,+L,0)),U)
"RTN","LROW3",61,0)
 S K=0
"RTN","LROW3",62,0)
 F  S K=$O(LROT(I,L,K)) Q:K<1  D
"RTN","LROW3",63,0)
 . S J=J+1,J(J)=I_U_L_U_K
"RTN","LROW3",64,0)
 . W !,?5,J,?15,$P(^LAB(60,+LROT(I,L,K),0),U)," ",?45,LRSAMP
"RTN","LROW3",65,0)
 . W:LRSAMP'=LRSPEC "  ",LRSPEC
"RTN","LROW3",66,0)
 Q
"RTN","LROW3",67,0)
 ;
"RTN","LROW3",68,0)
 ;
"RTN","LROW3",69,0)
LL3 ;
"RTN","LROW3",70,0)
 K J
"RTN","LROW3",71,0)
 S J=0 W !!,"You have just selected the following tests for ",PNM,"  ",SSN
"RTN","LROW3",72,0)
 I LRORDR="LC" W !," for Collection on: ",$$FMTE^XLFDT(LRODT_"."_LRORDTIM,"M")
"RTN","LROW3",73,0)
 W !,?5,"entry no.",?15,"Test",?45,"Sample"
"RTN","LROW3",74,0)
 F I=-1:0 S I=$O(LROT(I)) Q:I=""  D
"RTN","LROW3",75,0)
 . F L=-1:0 S L=$O(LROT(I,L)) Q:L=""  D LL2
"RTN","LROW3",76,0)
 Q
"RTN","LROW3",77,0)
 ;
"RTN","LROW3",78,0)
 ;
"RTN","LROW3",79,0)
HELP W !!,"Answer 'Yes' or 'No' ('^' to cancel)"
"RTN","LROW3",80,0)
 Q
"RTN","LROW3",81,0)
 ;
"RTN","LROW3",82,0)
 ;
"RTN","LROW3",83,0)
X3 K X3(+LRTEST(X),+LRSAMP,+LRXST(LRSAMP,X))
"RTN","LROW3",84,0)
 K LRTEST(X),J(X),LRXST(LRSAMP,X),LRSAMP(X)
"RTN","LROW3",85,0)
 Q
"RTN","LROW3",86,0)
 ;
"RTN","LROW3",87,0)
 ;
"RTN","LROW3",88,0)
NATURE ;Get Nature of order
"RTN","LROW3",89,0)
 I '$D(LRPHSET) D NEW^LROR6()
"RTN","LROW3",90,0)
 Q
"RTN","LRPHSET2")
0^158^B27648184
"RTN","LRPHSET2",1,0)
LRPHSET2 ;DALOI/STAFF - COLLECTION LIST TO ACCESSIONS CONT;May 28, 2008
"RTN","LRPHSET2",2,0)
 ;;5.2;LAB SERVICE;**121,202,350**;Sep 27, 1994;Build 230
"RTN","LRPHSET2",3,0)
 ;
"RTN","LRPHSET2",4,0)
REUP ;FROM LRPHSET1 - ADD TO OR REBUILD TO COLLECTION LIST
"RTN","LRPHSET2",5,0)
 N LRORDTYP
"RTN","LRPHSET2",6,0)
 S $P(LRORDTYP,"^",2)=$$FIND1^DIC(64.061,"","OX","L","D","I $P(^(0),U,5)=""0065""")
"RTN","LRPHSET2",7,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRPHSET2",8,0)
 S LRRB=0
"RTN","LRPHSET2",9,0)
 I LRDPF=2 S LRRB=$$GET1^DIQ(2,DFN_",",.101),LRRB=$S(LRRB'="":LRRB,1:0)
"RTN","LRPHSET2",10,0)
 ;
"RTN","LRPHSET2",11,0)
 S I=0
"RTN","LRPHSET2",12,0)
 F  S I=$O(^LRO(69,DT,1,LRSN,2,I)) Q:I<1  S X=^(I,0) I $P(X,U,3)'="" S LRAA($P(X,U,4))=$P(X,U,3)_"^"_$P(X,U,4)_"^"_$P(X,U,5)
"RTN","LRPHSET2",13,0)
 ;
"RTN","LRPHSET2",14,0)
 S LRK=0
"RTN","LRPHSET2",15,0)
 F  S LRK=$O(^LRO(69,DT,1,LRSN,2,LRK)) Q:LRK<1  S X=^(LRK,0) I $P(X,U,3)="",'$P(X,"^",11) D
"RTN","LRPHSET2",16,0)
 . S LRTS=+X,LRAA=$S($D(^LAB(60,LRTS,8,DUZ(2),0)):$P(^(0),U,2),1:"")
"RTN","LRPHSET2",17,0)
 . I LRAA'="",$D(LRAA(LRAA)),$P(^LAB(60,LRTS,0),U,7)'=1 D JAM
"RTN","LRPHSET2",18,0)
 ;
"RTN","LRPHSET2",19,0)
 S LRI=0
"RTN","LRPHSET2",20,0)
 F  S LRI=$O(^LRO(69,DT,1,LRSN,2,LRI)) Q:LRI<1  S X=^(LRI,0) I '$P(X,U,6),$P(X,U,3) D
"RTN","LRPHSET2",21,0)
 . S LRTSTN=+X,LRAD=$P(X,U,3),LRAA=$P(X,U,4),LRAN=$P(X,U,5)
"RTN","LRPHSET2",22,0)
 . I '$D(^LRO(69.1,LRTE,"LRPH",LRLLOC,LRRB,LRDFN,LRSN,LRAA,LRAN,+LRTSTN)) D REUP1
"RTN","LRPHSET2",23,0)
 I $D(REUP) S LRCOUNT=LRCOUNT+1,^LRO(69,DT,1,LRSN,3)=LRDTI
"RTN","LRPHSET2",24,0)
 I '$D(REUP) S $P(^LRO(69,DT,1,LRSN,1),U)=$P(^LRO(69,DT,1,LRSN,3),U)
"RTN","LRPHSET2",25,0)
 K LRAD,LRI,LRAN,LRAA,LRDPF,DFN,LRZ3,LRZB,LRZ1,LRTSTN,LRRB,LRURG,REUP,I,J,LRK,F,LRAODT,LRWRD
"RTN","LRPHSET2",26,0)
 Q
"RTN","LRPHSET2",27,0)
 ;
"RTN","LRPHSET2",28,0)
REUP1 L +^LRO(69.1,LRTE):90 I '$T G REUP1
"RTN","LRPHSET2",29,0)
 S LRZ3=$S($D(^LRO(69.1,LRTE,1,0)):$P(^(0),U,3),1:0)
"RTN","LRPHSET2",30,0)
 I '$D(^LRO(69.1,LRTE,"LRPH",LRLLOC,LRRB,LRDFN,LRSN,LRAA,LRAN)) S REUP=1
"RTN","LRPHSET2",31,0)
 ;
"RTN","LRPHSET2",32,0)
REUP2 S LRZ3=LRZ3+1
"RTN","LRPHSET2",33,0)
 G:$D(^LRO(69.1,LRTE,1,LRZ3)) REUP2
"RTN","LRPHSET2",34,0)
 S LRZO="^LRO(69.1,"_LRTE_",1,",LRZ1="69.11P",LRZB=+LRTSTN,LRIFN=LRZ3
"RTN","LRPHSET2",35,0)
 D Z^LRWU
"RTN","LRPHSET2",36,0)
 L -^LRO(69.1,LRTE)
"RTN","LRPHSET2",37,0)
 S ^LRO(69.1,LRTE,1,LRIFN,0)=+LRTSTN_"^"_LRLLOC_"^"_LRRB_"^"_LRDFN_"^"_LRSN_"^"_LRTJ_"^"_LRAD_"^"_LRAA_"^"_LRAN_"^"_LROLLOC,^LRO(69.1,LRTE,"LRPH",LRLLOC,LRRB,LRDFN,LRSN)=LRTJ_"^"_LRAD_"^"_LRIFN,^(LRSN,LRAA,LRAN,+LRTSTN)=+LRTSTN
"RTN","LRPHSET2",38,0)
 Q
"RTN","LRPHSET2",39,0)
 ;
"RTN","LRPHSET2",40,0)
JAM ;
"RTN","LRPHSET2",41,0)
 S LRAA=$P(LRAA(LRAA),U,2),LRAD=$P(LRAA(LRAA),U),LRAODT=LRAD,LRAN=$P(LRAA(LRAA),U,3),(LRURG,Y)=$P(X,U,2)
"RTN","LRPHSET2",42,0)
 D EN^LRTSTSET
"RTN","LRPHSET2",43,0)
 Q
"RTN","LRPHSET2",44,0)
 ;
"RTN","LRPHSET2",45,0)
S7 ;FROM LRPHSET1 - COMBINE OR MERGE TESTS ON ORDERS
"RTN","LRPHSET2",46,0)
 S T=0 F  S T=$O(T(LRSAMP,T)) Q:T<1  D S7A
"RTN","LRPHSET2",47,0)
 Q
"RTN","LRPHSET2",48,0)
S7A S LRPSN=0 F  S LRPSN=$O(T(LRSAMP,T,LRPSN)) Q:LRPSN<1  D @$S(LRSTEP=0:"S8",1:"S9")
"RTN","LRPHSET2",49,0)
 Q
"RTN","LRPHSET2",50,0)
S8 S J=T
"RTN","LRPHSET2",51,0)
 D COMBINE
"RTN","LRPHSET2",52,0)
 S J=0 F  S J=$O(T(LRSAMP,J)) Q:J<1  D SCAN60
"RTN","LRPHSET2",53,0)
 Q
"RTN","LRPHSET2",54,0)
S9 S J=0 F  S J=$O(T(LRSAMP,J)) Q:J<1  D MERG
"RTN","LRPHSET2",55,0)
 Q
"RTN","LRPHSET2",56,0)
SCAN60 S K=0 F  S K=$O(^LAB(60,T,2,K)) Q:K<1  I +^(K,0)=J S LRSN=0,LRSN=$O(T(LRSAMP,J,LRSN)) D @$S(LRPSN>LRSN:"MERG",1:"COMBINE")
"RTN","LRPHSET2",57,0)
 Q
"RTN","LRPHSET2",58,0)
COMBINE S LRSN=0 F  S LRSN=$O(T(LRSAMP,J,LRSN)) Q:LRSN<1  D:LRPSN>LRSN SWAP I LRSN'=LRPSN D CB2
"RTN","LRPHSET2",59,0)
 Q
"RTN","LRPHSET2",60,0)
CB2 I $P(^LRO(69,DT,1,LRSN,2,+T(LRSAMP,J,LRSN),0),U,6)'="",$D(^LRO(69,DT,1,LRSN,.1)),$D(^LRO(69,DT,1,+$O(^LRO(69,"C",+^(.1),DT,0)),1)),$P(^(1),U,4)'="" Q
"RTN","LRPHSET2",61,0)
 I $P(T(LRSAMP,T,LRPSN),U,2)'=$P(T(LRSAMP,J,LRSN),U,2) D URGENCY S $P(^LRO(69,DT,1,LRPSN,2,+T(LRSAMP,T,LRPSN),0),U,2)=LRURG
"RTN","LRPHSET2",62,0)
 S $P(^LRO(69,DT,1,LRPSN,2,+T(LRSAMP,T,LRPSN),0),"^",14)=DT_";"_LRSN_";"_+T(LRSAMP,J,LRSN)
"RTN","LRPHSET2",63,0)
 N X,XI,X1,I,TST
"RTN","LRPHSET2",64,0)
 S X1=^LRO(69,DT,1,LRPSN,.1),TST=^LRO(69,DT,1,LRSN,2,+T(LRSAMP,J,LRSN),0),$P(^(0),U,6)=X1,$P(^LRO(69,DT,1,LRSN,1),U,4)="M",XI=$P(^(1),U,7),XI=XI_X1_"/",$P(^(1),U,7)=XI
"RTN","LRPHSET2",65,0)
 D OERR(TST)
"RTN","LRPHSET2",66,0)
 K T(LRSAMP,J,LRSN)
"RTN","LRPHSET2",67,0)
 Q
"RTN","LRPHSET2",68,0)
 ;
"RTN","LRPHSET2",69,0)
MERG S LRSN=0 F  S LRSN=$O(T(LRSAMP,J,LRSN)) Q:LRSN<1  D:LRPSN>LRSN SWAP,SWAP1 I LRSN'=LRPSN D M1
"RTN","LRPHSET2",70,0)
 Q
"RTN","LRPHSET2",71,0)
 ;
"RTN","LRPHSET2",72,0)
M1 Q:$P(^LRO(69,DT,1,LRSN,2,+T(LRSAMP,J,LRSN),0),U,6)'=""
"RTN","LRPHSET2",73,0)
 S X=$P(^LRO(69,DT,1,LRPSN,2,0),"^",3)
"RTN","LRPHSET2",74,0)
LP S X=X+1
"RTN","LRPHSET2",75,0)
 I $D(^LRO(69,DT,1,LRPSN,2,X)) G LP
"RTN","LRPHSET2",76,0)
 S ^LRO(69,DT,1,LRPSN,2,X,0)=^LRO(69,DT,1,LRSN,2,+T(LRSAMP,J,LRSN),0),$P(^(0),"^",14)=DT_";"_LRSN_";"_+T(LRSAMP,J,LRSN),^LRO(69,DT,1,LRPSN,2,"B",J,X)="",$P(^LRO(69,DT,1,LRPSN,2,0),"^",3,4)=X_"^"_X
"RTN","LRPHSET2",77,0)
 N I,XI,X1,TST
"RTN","LRPHSET2",78,0)
 S X1=^LRO(69,DT,1,LRPSN,.1),$P(^LRO(69,DT,1,LRSN,2,+T(LRSAMP,J,LRSN),0),"^",6)=X1
"RTN","LRPHSET2",79,0)
 S TST=^LRO(69,DT,1,LRPSN,2,X,0),LRURG=$P(TST,"^",2),T(LRSAMP,J,LRPSN)=T(LRSAMP,J,LRSN),$P(T(LRSAMP,J,LRPSN),"^")=X
"RTN","LRPHSET2",80,0)
 S $P(^LRO(69,DT,1,LRSN,1),U,4)="M",XI=$P(^(1),U,7),XI=XI_X1_"/",$P(^LRO(69,DT,1,LRSN,1),U,7)=XI
"RTN","LRPHSET2",81,0)
 D OERR(TST)
"RTN","LRPHSET2",82,0)
 K T(LRSAMP,J,LRSN)
"RTN","LRPHSET2",83,0)
 Q
"RTN","LRPHSET2",84,0)
 ;
"RTN","LRPHSET2",85,0)
SWAP S LRSWAP=LRSN,LRSN=LRPSN,LRPSN=LRSWAP K LRSWAP
"RTN","LRPHSET2",86,0)
 Q
"RTN","LRPHSET2",87,0)
 ;
"RTN","LRPHSET2",88,0)
SWAP1 S LRSWAP=J,J=T,T=LRSWAP
"RTN","LRPHSET2",89,0)
 Q
"RTN","LRPHSET2",90,0)
 ;
"RTN","LRPHSET2",91,0)
URGENCY S LRURG1=$P(T(LRSAMP,T,LRPSN),U,2),LRURG2=$P(T(LRSAMP,J,LRSN),U,2),LRURG=$S(LRURG1<LRURG2:LRURG1,1:LRURG2)
"RTN","LRPHSET2",92,0)
 K LRURG1,LRURG2
"RTN","LRPHSET2",93,0)
 Q
"RTN","LRPHSET2",94,0)
 ;
"RTN","LRPHSET2",95,0)
OERR(TSTNODE) ;OE/RR - CPRS calls
"RTN","LRPHSET2",96,0)
 N X,TTT,LRNATURE,LRSJ ;OE/RR 3.0
"RTN","LRPHSET2",97,0)
 S LRSJ=J,X=$O(^ORD(100.03,"C","LRDUP",0)),LRNATURE=$$DC1^LROR6(X,"Combined with LB #"_X1)
"RTN","LRPHSET2",98,0)
 S TTT(+TSTNODE)="",DIE="^LRO(69,DT,1,LRSN,2,",DA=+T(LRSAMP,LRSJ,LRSN),DA(1)=LRSN,DA(2)=DT,DR="99.1///DUPLICATE TEST: "_$S($P($G(LRNATURE),"^",5)'="":$P(LRNATURE,"^",5),1:"")
"RTN","LRPHSET2",99,0)
 D ^DIE
"RTN","LRPHSET2",100,0)
 D NEW^LR7OB1(DT,LRSN,"OC",$G(LRNATURE),.TTT)
"RTN","LRPHSET2",101,0)
 S $P(^LRO(69,DT,1,LRSN,2,+T(LRSAMP,LRSJ,LRSN),0),"^",3,5)="^^",$P(^(0),"^",9,11)="CA^L^"_DUZ,J=LRSJ
"RTN","LRPHSET2",102,0)
 Q
"RTN","LRRP")
0^143^B28641479
"RTN","LRRP",1,0)
LRRP ;DALOI/STAFF - PROCESS DATA FOR INTERIM REPORTS ;04/21/10  15:32
"RTN","LRRP",2,0)
 ;;5.2;LAB SERVICE;**195,221,283,286,350**;Sep 27, 1994;Build 230
"RTN","LRRP",3,0)
 ;
"RTN","LRRP",4,0)
SET ;from LRRSP, LRRS, LRRD - call with LRORDER=ORDERS, LRODT=DATE, LRDFN
"RTN","LRRP",5,0)
 K ^TMP("LR",$J,"TP"),LRORD
"RTN","LRRP",6,0)
 S:'$D(LRTSCRN) LRTSCRN=0
"RTN","LRRP",7,0)
 S LRLAB=$S($D(LRLABKY):1,1:0),LRHF=1,LRFOOT=0,LRCW=8 Q:'$D(LRODT)
"RTN","LRRP",8,0)
 F LROP=1:1 S LRORD(1)=$P(LRORDER,U,LROP) D TEST Q:LRSTOP!LREND!(LRORD(1)="")
"RTN","LRRP",9,0)
 I 'LREND,'LRSTOP,LRFOOT D FOOT^LRRP1
"RTN","LRRP",10,0)
 K ^TMP("LR",$J,"TP"),LRORD
"RTN","LRRP",11,0)
 Q
"RTN","LRRP",12,0)
 ;
"RTN","LRRP",13,0)
 ;
"RTN","LRRP",14,0)
TEST ;
"RTN","LRRP",15,0)
 I LRORD(1)="" K ^TMP("LR",$J,"TP") Q
"RTN","LRRP",16,0)
 S LRFOUND=1,LRORD=$S($D(^LRO(69,LRODT,1,LRORD(1),0))#2:^(0),1:"") Q:LRORD=""!(+LRORD'=LRDFN)
"RTN","LRRP",17,0)
 K S,LRAAO
"RTN","LRRP",18,0)
 S LRTEST=0
"RTN","LRRP",19,0)
 F  S LRTEST=+$O(^LRO(69,LRODT,1,LRORD(1),2,LRTEST)) Q:LRTEST<1  S X=^(LRTEST,0) I LRTSCRN=0!(LRTSCRN=+X) D DATA K S
"RTN","LRRP",20,0)
 K S Q:'$D(LRAAO)  Q:LRAAO<.1
"RTN","LRRP",21,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRRP",22,0)
 S LROC=$S($D(^LR(LRDFN,.1)):^(.1),LRDPF=2&$D(^DPT(DFN,.1)):^(.1),1:"FILE ROOM")
"RTN","LRRP",23,0)
 D ^LRRP1
"RTN","LRRP",24,0)
 Q
"RTN","LRRP",25,0)
 ;
"RTN","LRRP",26,0)
 ;
"RTN","LRRP",27,0)
DATA ;
"RTN","LRRP",28,0)
 S LRTSTS=+X,LRAD=$P(X,U,3),LRAA=+$P(X,U,4),LRAN=$P(X,U,5)
"RTN","LRRP",29,0)
 S LRAAO=$S($D(^LRO(68,LRAA,0)):$P(^(0),U,8),1:0)
"RTN","LRRP",30,0)
 I LRAAO<.1 Q:'LRAA  D  Q
"RTN","LRRP",31,0)
 . W !?2,$C(7),$P(^LRO(68,LRAA,0),"^")_" accession area is missing a print order!"
"RTN","LRRP",32,0)
 . W !?2,$P(^LAB(60,LRTSTS,0),"^")_" results will not be displayed until this is corrected."
"RTN","LRRP",33,0)
 . W !?2,"Please contact IRM or the Lab ADPAC."
"RTN","LRRP",34,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRRP",35,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  Q:'$D(^(3))
"RTN","LRRP",36,0)
 S ^TMP("LR",$J,"TP",LRAAO)=LRAA_U_LRSS
"RTN","LRRP",37,0)
 S LRCDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U)
"RTN","LRRP",38,0)
 S LRIDT=+$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
"RTN","LRRP",39,0)
 I 'LRIDT S LRIDT=9999999-LRCDT
"RTN","LRRP",40,0)
 S ^TMP("LR",$J,"TP",LRAAO,LRCDT,-1)=$S($D(^TMP("LR",$J,"TP",LRAAO,-1)):^(-1),1:"")_LRTSTS_U
"RTN","LRRP",41,0)
 S ^TMP("LR",$J,"TP",LRAAO,LRCDT,-2)=LRIDT
"RTN","LRRP",42,0)
 Q:LRSS="MI"
"RTN","LRRP",43,0)
 S (S,J)=0
"RTN","LRRP",44,0)
 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,J)) Q:J<1  S:^(J,0)>0 S=S+1,S(S)=+^(0)
"RTN","LRRP",45,0)
 S LR0=$S($D(^LR(LRDFN,LRSS,LRIDT,0)):^(0),1:""),LRSPEC=+$P(LR0,U,5),(LRTC,LRLLT)=0
"RTN","LRRP",46,0)
 F  S LRLLT=+$O(S(LRLLT)) Q:LRLLT<1  S LRTSTS=+S(LRLLT) D XPND
"RTN","LRRP",47,0)
 D CMNT
"RTN","LRRP",48,0)
 Q
"RTN","LRRP",49,0)
 ;
"RTN","LRRP",50,0)
 ;
"RTN","LRRP",51,0)
XPND ;
"RTN","LRRP",52,0)
 Q:'$D(^LAB(60,LRTSTS,.1))  S LRDN=$P($P(^(0),U,5),";",2)
"RTN","LRRP",53,0)
 I LRDN="" S LRJJ=0 F  S LRJJ=+$O(^LAB(60,LRTSTS,2,LRJJ)) Q:LRJJ<1  S S=S+1,S(S)=+^(LRJJ,0)
"RTN","LRRP",54,0)
 D:$L(LRDN) SETUP
"RTN","LRRP",55,0)
 Q
"RTN","LRRP",56,0)
 ;
"RTN","LRRP",57,0)
 ;
"RTN","LRRP",58,0)
SETUP Q:'LRTSTS
"RTN","LRRP",59,0)
 S X=$G(^LAB(60,LRTSTS,.1))
"RTN","LRRP",60,0)
 I 'LRLAB,"BO"'[$P(^LAB(60,LRTSTS,0),U,3) Q
"RTN","LRRP",61,0)
 Q:'$D(^LR(LRDFN,LRSS,LRIDT,LRDN))  Q:'$L($P(^(LRDN),U))
"RTN","LRRP",62,0)
 S LRPO=$P(X,U,6),LRPO=$S(LRPO:LRPO,1:LRDN/1000000)
"RTN","LRRP",63,0)
 F  Q:'$D(^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO))  Q:LRTSTS=+^(LRPO)  S LRPO=LRPO+1
"RTN","LRRP",64,0)
 Q:$D(^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO))
"RTN","LRRP",65,0)
 S ^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO)=LRTSTS_U_$P(^LAB(60,LRTSTS,0),U)_U_$P(X,U)_U_$P(X,U,2)_U_$P(X,U,3)_U_$P(^(0),U,5)_U_$P(^LR(LRDFN,LRSS,LRIDT,LRDN),U)_U_$P(^(LRDN),U,2)_U_$P(^(LRDN),U,9)_U_LRDN,LRTC=LRTC+1
"RTN","LRRP",66,0)
 ;
"RTN","LRRP",67,0)
 I $D(^LAB(60,LRTSTS,1,LRSPEC,1,0)) D
"RTN","LRRP",68,0)
 . S LRINTP=0
"RTN","LRRP",69,0)
 . F  S LRINTP=+$O(^LAB(60,LRTSTS,1,LRSPEC,1,LRINTP)) Q:LRINTP<1  S ^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO,LRINTP)=^(LRINTP,0) S LRTC=LRTC+1
"RTN","LRRP",70,0)
 Q
"RTN","LRRP",71,0)
 ;
"RTN","LRRP",72,0)
 ;
"RTN","LRRP",73,0)
CMNT ;
"RTN","LRRP",74,0)
 S ^TMP("LR",$J,"TP",LRAAO)=LRAA_U_LRSS,^(LRAAO,LRCDT)=LR0,^(LRCDT,-1)=""
"RTN","LRRP",75,0)
 S ^TMP("LR",$J,"TP",LRAAO,LRCDT,-2)=LRIDT
"RTN","LRRP",76,0)
 ;
"RTN","LRRP",77,0)
 S LRCMNT=0 F I=0:0 S LRCMNT=+$O(^LR(LRDFN,LRSS,LRIDT,1,LRCMNT)) Q:LRCMNT<1  S ^TMP("LR",$J,"TP",LRAAO,LRCDT,"C",LRCMNT)=^(LRCMNT,0) S LRTC=LRTC+1
"RTN","LRRP",78,0)
 S $P(^TMP("LR",$J,"TP",LRAAO,LRCDT),U,12)=LRTC
"RTN","LRRP",79,0)
 Q
"RTN","LRRP",80,0)
 ;
"RTN","LRRP",81,0)
 ;
"RTN","LRRP",82,0)
CH ;from LRRP2
"RTN","LRRP",83,0)
 S LRDN=1
"RTN","LRRP",84,0)
 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  S LRTSTS=$O(^LAB(60,"C","CH;"_LRDN_";1",0)) D SETUP
"RTN","LRRP",85,0)
 D CMNT,^LRRP1
"RTN","LRRP",86,0)
 Q
"RTN","LRRP",87,0)
 ;
"RTN","LRRP",88,0)
 ;
"RTN","LRRP",89,0)
GO ;from LRRP3
"RTN","LRRP",90,0)
 S LRLAB=$S($D(LRLABKY):1,1:0),LRDN=1
"RTN","LRRP",91,0)
 F  S LRDN=$O(^TMP("LR",$J,"TMP",LRDN)) Q:LRDN<1  S LRTSTS=+^(LRDN) D SETUP
"RTN","LRRP",92,0)
 D CMNT,^LRRP1
"RTN","LRRP",93,0)
 Q
"RTN","LRRP",94,0)
 ;
"RTN","LRRP",95,0)
 ;
"RTN","LRRP",96,0)
LOOKUP ; Lookup results by accession
"RTN","LRRP",97,0)
 ;
"RTN","LRRP",98,0)
 N %ZIS,DIR,DIROUT,DIRUT,LRAA,LRACC,LRAD,LRAN,LRDFN,LRDPF,LREND,LRIDT,LRLAB,LRPRTPG,LRSS,LRSTOP,LRVBY,X,Y,ZTDESC,ZTRTN,ZTSAVE
"RTN","LRRP",99,0)
 ;
"RTN","LRRP",100,0)
 ;ZEXCEPT: CH,MI
"RTN","LRRP",101,0)
 ;
"RTN","LRRP",102,0)
 ; Ask if printing address page
"RTN","LRRP",103,0)
 S DIR(0)="Y",DIR("A")="Print address page",DIR("B")="NO",LRPRTPG=0
"RTN","LRRP",104,0)
 D ^DIR K DIR
"RTN","LRRP",105,0)
 I $D(DIRUT) Q
"RTN","LRRP",106,0)
 I Y S LRPRTPG=1
"RTN","LRRP",107,0)
 ;
"RTN","LRRP",108,0)
 F  D  Q:LREND!LRSTOP
"RTN","LRRP",109,0)
 . S (LREND,LRSTOP,LRVBY)=0
"RTN","LRRP",110,0)
 . S LRACC="" D ^LRWU4
"RTN","LRRP",111,0)
 . I LRAN<1 S LREND=1 Q
"RTN","LRRP",112,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"Doesn't exist." Q
"RTN","LRRP",113,0)
 . K LRDFN,LRDPF,LRIDT,LRSS
"RTN","LRRP",114,0)
 . S LRSS=$P(^LRO(68,LRAA,0),"^",2),LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^"),LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRRP",115,0)
 . I LRSS=""!(LRIDT<1)!(LRDFN<1) W !,"Incomplete accession - unable to identify results." Q
"RTN","LRRP",116,0)
 . I LRSS'?1(1"CH",1"MI") W !,"This option only supports CH and MI subscripted accessions." Q
"RTN","LRRP",117,0)
 . S %ZIS="Q",ZTSAVE("DFN")="",ZTSAVE("LR*")="",ZTRTN="ADQ^LRRP",ZTDESC="Interim Report for an Accession"
"RTN","LRRP",118,0)
 . D IO^LRWU
"RTN","LRRP",119,0)
 . W !!
"RTN","LRRP",120,0)
 ;
"RTN","LRRP",121,0)
 Q
"RTN","LRRP",122,0)
 ;
"RTN","LRRP",123,0)
 ;
"RTN","LRRP",124,0)
ADQ ; Tasked entry point to print interim report for an accession
"RTN","LRRP",125,0)
 ;
"RTN","LRRP",126,0)
 ;
"RTN","LRRP",127,0)
 U IO
"RTN","LRRP",128,0)
 N LREND,LRLAB,LRSTOP
"RTN","LRRP",129,0)
 D INIT^LRRP2,PT^LRX
"RTN","LRRP",130,0)
 S LRLAB=$S($D(LRLABKY):1,1:0)
"RTN","LRRP",131,0)
 I LRSS="CH" D CH^LRRP2
"RTN","LRRP",132,0)
 I LRSS="MI" D MI^LRRP2
"RTN","LRRP",133,0)
 D FOOT^LRRP1
"RTN","LRRP",134,0)
 I $G(LRPRTPG),$D(LRPLS) D PLSPG^LRRP2
"RTN","LRRP",135,0)
 D QUIT^LRRP2
"RTN","LRRP",136,0)
 Q
"RTN","LRRP1")
0^81^B56529861
"RTN","LRRP1",1,0)
LRRP1 ;DALOI/STAFF - PRINT THE DATA FOR INTERIM REPORTS ;11/18/11  16:33
"RTN","LRRP1",2,0)
 ;;5.2;LAB SERVICE;**153,221,283,286,356,372,350**;Sep 27, 1994;Build 230
"RTN","LRRP1",3,0)
 ;
"RTN","LRRP1",4,0)
 ; from LRRP, LRRP2, LRRP3, LRMIPSU
"RTN","LRRP1",5,0)
 ;
"RTN","LRRP1",6,0)
PRINT ;
"RTN","LRRP1",7,0)
 S:$G(SEX)="" SEX="M" S:$G(DOB)="" DOB="UNKNOWN"
"RTN","LRRP1",8,0)
 S LRAAO=0 F  S LRAAO=$O(^TMP("LR",$J,"TP",LRAAO)) Q:LRAAO<1  D ORDER Q:LRSTOP
"RTN","LRRP1",9,0)
 K ^TMP("LR",$J,"TP")
"RTN","LRRP1",10,0)
 Q
"RTN","LRRP1",11,0)
 ;
"RTN","LRRP1",12,0)
 ;
"RTN","LRRP1",13,0)
ORDER ;
"RTN","LRRP1",14,0)
 N LRCAN
"RTN","LRRP1",15,0)
 S LRCDT=0
"RTN","LRRP1",16,0)
 F  S LRCDT=$O(^TMP("LR",$J,"TP",LRAAO,LRCDT)) Q:LRCDT<1  D
"RTN","LRRP1",17,0)
 . S LRCAN=0
"RTN","LRRP1",18,0)
 . I LRSS="CH" D
"RTN","LRRP1",19,0)
 . . S LRIDT=+^TMP("LR",$J,"TP",LRAAO,LRCDT,-2)
"RTN","LRRP1",20,0)
 . . F  S LRCAN=+$O(^LR(LRDFN,"CH",LRIDT,1,LRCAN)) Q:LRCAN<1  Q:$E($G(^(LRCAN,0)))="*"
"RTN","LRRP1",21,0)
 . D TEST Q:LRSTOP
"RTN","LRRP1",22,0)
 Q
"RTN","LRRP1",23,0)
 ;
"RTN","LRRP1",24,0)
 ;
"RTN","LRRP1",25,0)
TEST ;
"RTN","LRRP1",26,0)
 N LRRELDT,LRX
"RTN","LRRP1",27,0)
 S LRIDT=+^TMP("LR",$J,"TP",LRAAO,LRCDT,-2)
"RTN","LRRP1",28,0)
 S LRSS=$P(^TMP("LR",$J,"TP",LRAAO),U,2)
"RTN","LRRP1",29,0)
 S LR0=$S($D(^(LRAAO,LRCDT))#2:^(LRCDT),1:""),LRTC=$P(LR0,U,12)
"RTN","LRRP1",30,0)
 I LRSS="MI" D  Q
"RTN","LRRP1",31,0)
 . S LRH=1 D:LRFOOT FOOT Q:LRSTOP
"RTN","LRRP1",32,0)
 . D EN1^LRMIPC
"RTN","LRRP1",33,0)
 . S LRHF=1,LRFOOT=0
"RTN","LRRP1",34,0)
 . K A,Z,LRH
"RTN","LRRP1",35,0)
 . S:LREND LREND=0,LRSTOP=1
"RTN","LRRP1",36,0)
 ;
"RTN","LRRP1",37,0)
 ; Protect against results for AP subscripts being processed from file #69 orders.
"RTN","LRRP1",38,0)
 I LRSS'="CH" Q
"RTN","LRRP1",39,0)
 ;
"RTN","LRRP1",40,0)
 Q:'$G(LRCAN)&('$P(LR0,U,3))  D @$S(LRHF:"HDR",1:"CHECK") Q:LRSTOP
"RTN","LRRP1",41,0)
 S LRSPEC=+$P(LR0,U,5),X=$P(LR0,U,10) D DOC^LRX
"RTN","LRRP1",42,0)
 ;
"RTN","LRRP1",43,0)
 ; Display reporting lab
"RTN","LRRP1",44,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LRRP1",45,0)
 . S LRX=+$G(^LR(LRDFN,LRSS,LRIDT,"RF"))
"RTN","LRRP1",46,0)
 . I LRX D RL(LRX)
"RTN","LRRP1",47,0)
 ;
"RTN","LRRP1",48,0)
 I LRDOC?1"REF:"1.AN D
"RTN","LRRP1",49,0)
 . S LRX=$$REFDOC^LRRP1(LRDFN,LRSS,LRIDT)
"RTN","LRRP1",50,0)
 . I LRX'="" S LRDOC=LRX
"RTN","LRRP1",51,0)
 W !!,?7,"Provider: ",LRDOC
"RTN","LRRP1",52,0)
 W !,?7,"Specimen: ",$P($G(^LAB(61,LRSPEC,0),"<no specimen on file>"),U)
"RTN","LRRP1",53,0)
 D ORU
"RTN","LRRP1",54,0)
 S LRRELDT=$P(^TMP("LR",$J,"TP",LRAAO,LRCDT),U,3)
"RTN","LRRP1",55,0)
 W !,"Report Released: ",$$FMTE^XLFDT(LRRELDT,"M")
"RTN","LRRP1",56,0)
 W !!,?30,"Specimen Collection Date: ",$$FMTE^XLFDT(LRCDT,"M")
"RTN","LRRP1",57,0)
 W !?5,"Test name",?30,"Result    units",?51,"Ref.   range",?66,"Site Code"
"RTN","LRRP1",58,0)
 S LRPO=0
"RTN","LRRP1",59,0)
 F  S LRPO=$O(^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO)) Q:LRPO'>0  S LRDATA=^(LRPO) D DATA Q:LRSTOP
"RTN","LRRP1",60,0)
 Q:LRSTOP
"RTN","LRRP1",61,0)
 ;
"RTN","LRRP1",62,0)
 I $D(^TMP("LR",$J,"TP",LRAAO,LRCDT,"C")) D
"RTN","LRRP1",63,0)
 . W !,"Comment: " S LRCMNT=0
"RTN","LRRP1",64,0)
 . F  S LRCMNT=+$O(^TMP("LR",$J,"TP",LRAAO,LRCDT,"C",LRCMNT)) Q:LRCMNT<1  D  Q:LRSTOP
"RTN","LRRP1",65,0)
 . . W ^TMP("LR",$J,"TP",LRAAO,LRCDT,"C",LRCMNT)
"RTN","LRRP1",66,0)
 . . D CONT Q:LRSTOP
"RTN","LRRP1",67,0)
 . . W:$O(^TMP("LR",$J,"TP",LRAAO,LRCDT,"C",LRCMNT)) !?9
"RTN","LRRP1",68,0)
 Q:LRSTOP  D EQUALS^LRX
"RTN","LRRP1",69,0)
 W !?7,"KEY: ""L""=Abnormal low, ""H""=Abnormal high, ""*""=Critical value"
"RTN","LRRP1",70,0)
 S LRFOOT=1
"RTN","LRRP1",71,0)
 Q
"RTN","LRRP1",72,0)
 ;
"RTN","LRRP1",73,0)
 ;
"RTN","LRRP1",74,0)
DATA ;
"RTN","LRRP1",75,0)
 N LR63DATA,LRREFS,LRX
"RTN","LRRP1",76,0)
 ;
"RTN","LRRP1",77,0)
 S LRTSTS=+LRDATA,LRPC=$P(LRDATA,U,5),LRSUB=$P(LRDATA,U,6)
"RTN","LRRP1",78,0)
 S X=$P(LRDATA,U,7) Q:X=""
"RTN","LRRP1",79,0)
 S LR63DATA=$$TSTRES^LRRPU(LRDFN,LRSS,LRIDT,$P(LRDATA,U,10),LRTSTS)
"RTN","LRRP1",80,0)
 S LRLO=$P(LR63DATA,"^",3),LRHI=$P(LR63DATA,"^",4),LRREFS=$$EN^LRLRRVF(LRLO,LRHI),LRPLS=$P(LR63DATA,"^",6),LRTHER=$P(LR63DATA,"^",7)
"RTN","LRRP1",81,0)
 I LRPLS S LRPLS(LRPLS)=LRPLS
"RTN","LRRP1",82,0)
 ;
"RTN","LRRP1",83,0)
 ; Find reference lab filler order number
"RTN","LRRP1",84,0)
 S LREPR=LRDFN_","_LRSS_","_LRIDT_","_$P(LRDATA,"^",10)
"RTN","LRRP1",85,0)
 S LRX=$O(^LR(LRDFN,"EPR","AD",LREPR,4,""))
"RTN","LRRP1",86,0)
 I LRX S LREPR(4,LREPR,LRX)=""
"RTN","LRRP1",87,0)
 ;
"RTN","LRRP1",88,0)
 ;W !?5,$S($L($P(LRDATA,U,2))>20:$P(LRDATA,U,3),1:$P(LRDATA,U,2))
"RTN","LRRP1",89,0)
 ; Insure something is printed as test name - either print name or #.01 field
"RTN","LRRP1",90,0)
 I $L($P(LRDATA,U,2))>25,$P(LRDATA,U,3)'="" W !,$P(LRDATA,U,3)
"RTN","LRRP1",91,0)
 E  W !,$E($P(LRDATA,U,2),1,25)
"RTN","LRRP1",92,0)
 S X=$P(LR63DATA,"^")
"RTN","LRRP1",93,0)
 W ?27,@$S(LRPC="":"$J(X,LRCW)",1:LRPC)," ",$P(LR63DATA,"^",2)
"RTN","LRRP1",94,0)
 I $X>39 W !
"RTN","LRRP1",95,0)
 W ?40,$P(LR63DATA,U,5)
"RTN","LRRP1",96,0)
 I $X>50 W !
"RTN","LRRP1",97,0)
 W ?51,LRREFS
"RTN","LRRP1",98,0)
 ;
"RTN","LRRP1",99,0)
 I LRPLS'="" D
"RTN","LRRP1",100,0)
 . I $X>67 W !
"RTN","LRRP1",101,0)
 . W ?68,"[",LRPLS,"]"
"RTN","LRRP1",102,0)
 D CONT Q:LRSTOP
"RTN","LRRP1",103,0)
 ;
"RTN","LRRP1",104,0)
 I $O(^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO,0))>0 D  Q:LRSTOP
"RTN","LRRP1",105,0)
 . S LRINTP=0
"RTN","LRRP1",106,0)
 . F  S LRINTP=+$O(^TMP("LR",$J,"TP",LRAAO,LRCDT,LRPO,LRINTP)) Q:LRINTP<1  W !?7,"Eval: ",^(LRINTP) D CONT Q:LRSTOP
"RTN","LRRP1",107,0)
 ;
"RTN","LRRP1",108,0)
 Q
"RTN","LRRP1",109,0)
 ;
"RTN","LRRP1",110,0)
 ;
"RTN","LRRP1",111,0)
CHECK I LRTC+11>(IOSL-$Y) D FOOT Q:LRSTOP  D HDR
"RTN","LRRP1",112,0)
 Q
"RTN","LRRP1",113,0)
 ;
"RTN","LRRP1",114,0)
 ;
"RTN","LRRP1",115,0)
CONT I $Y+5>IOSL D FOOT Q:LRSTOP  D HDR W !?20,">> CONTINUATION OF ",$P(LR0,U,6)," <<",!
"RTN","LRRP1",116,0)
 Q
"RTN","LRRP1",117,0)
 ;
"RTN","LRRP1",118,0)
 ;
"RTN","LRRP1",119,0)
FOOT ; from LRRP, LRRP2, LRRP3
"RTN","LRRP1",120,0)
 ;
"RTN","LRRP1",121,0)
 N I
"RTN","LRRP1",122,0)
 Q:LRSTOP
"RTN","LRRP1",123,0)
 F I=$Y:1:IOSL-4 W !
"RTN","LRRP1",124,0)
 ;
"RTN","LRRP1",125,0)
 I $E(IOST,1,2)'="C-" D  Q
"RTN","LRRP1",126,0)
 . W !,PNM,?40,"  ",SSN,"  ",$$HTE^XLFDT($H,"1M"),!
"RTN","LRRP1",127,0)
 ;
"RTN","LRRP1",128,0)
 W !,PNM,?25,"  ",SSN,"  ",$$HTE^XLFDT($H,"1M"),?59," PRESS '^' TO STOP "
"RTN","LRRP1",129,0)
 R X:DTIME S:X="" X=1 S:(".^"[X)!('$T) LRSTOP=1
"RTN","LRRP1",130,0)
 Q
"RTN","LRRP1",131,0)
 ;
"RTN","LRRP1",132,0)
 ;
"RTN","LRRP1",133,0)
HDR ; Add Printed at, page #, change age to dob 7/2002 cka
"RTN","LRRP1",134,0)
 W:($G(LRJ02))!($G(LRJ0))!($E(IOST,1,2)="C-") @IOF
"RTN","LRRP1",135,0)
 S LRHF=0,LRJ02=1,LRPG=$G(LRPG)+1
"RTN","LRRP1",136,0)
 I $E(IOST,1)="P" W !!,$$CJ^XLFSTR("CLINICAL LABORATORY REPORT",IOM),!
"RTN","LRRP1",137,0)
 ;
"RTN","LRRP1",138,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")>1 D PFAC(DUZ(2),LRPG)
"RTN","LRRP1",139,0)
 ;
"RTN","LRRP1",140,0)
 W !!,PNM,?44,"Report date: ",$$HTE^XLFDT($H,"M")
"RTN","LRRP1",141,0)
 W !?1,"Pat ID: ",SSN,"    SEX: ",SEX,"    DOB: ",$$FMTE^XLFDT(DOB),"    LOC: ",LROC
"RTN","LRRP1",142,0)
 Q
"RTN","LRRP1",143,0)
 ;
"RTN","LRRP1",144,0)
 ;
"RTN","LRRP1",145,0)
ORU ; Display remote ordering info if available
"RTN","LRRP1",146,0)
 ; Handle calls that don't pass parameters.
"RTN","LRRP1",147,0)
 D ORUA("",LRDFN,LRSS,LRIDT,0)
"RTN","LRRP1",148,0)
 Q
"RTN","LRRP1",149,0)
 ;
"RTN","LRRP1",150,0)
 ;
"RTN","LRRP1",151,0)
ORUA(LRARRAY,LRDFN,LRSS,LRIDT,LRFLAG) ; Display remote ordering info if available
"RTN","LRRP1",152,0)
 ; Call with LRARRAY = array with name/address info
"RTN","LRRP1",153,0)
 ;             LRDFN = file #63 ien
"RTN","LRRP1",154,0)
 ;              LRSS = file #63 subscript
"RTN","LRRP1",155,0)
 ;             LRIDT = file #63 internal data/time of specimen
"RTN","LRRP1",156,0)
 ;            LRFLAG = 0 (print facility info)
"RTN","LRRP1",157,0)
 ;                     1 (return facility info in LRARRAY)
"RTN","LRRP1",158,0)
 ;
"RTN","LRRP1",159,0)
 N A,IENS,LRFILE,LRX,LRY
"RTN","LRRP1",160,0)
 ;
"RTN","LRRP1",161,0)
 S LRFLAG=$G(LRFLAG,0)
"RTN","LRRP1",162,0)
 S LRFILE=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,LRSS="BB":63.01,1:0)
"RTN","LRRP1",163,0)
 S LRX(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LRRP1",164,0)
 S LRX("ORU")=$G(^LR(LRDFN,LRSS,LRIDT,"ORU")),IENS=LRIDT_","_LRDFN_","
"RTN","LRRP1",165,0)
 ;
"RTN","LRRP1",166,0)
 S LRY="Accession [UID]: "_$P(LRX(0),"^",6)_" ["_$P(LRX("ORU"),"^")_"]"
"RTN","LRRP1",167,0)
 I LRSS="MI",$P(LRX(0),"^",10) S LRY=$$LJ^XLFSTR(LRY,43," ")_" Received: "_$$FMTE^XLFDT($P(LRX(0),"^",10),"M")
"RTN","LRRP1",168,0)
 I LRFLAG S A(1)=LRY
"RTN","LRRP1",169,0)
 E  D EN^DDIOL(LRY,"","!")
"RTN","LRRP1",170,0)
 ;
"RTN","LRRP1",171,0)
 I $P(LRX("ORU"),"^",3) D
"RTN","LRRP1",172,0)
 . S LRY=$$LJ^XLFSTR("Ordering Site: "_$$GET1^DIQ(LRFILE,IENS,.33,""),43," ")_" Ordering Site UID: "_$P(LRX("ORU"),"^",5)
"RTN","LRRP1",173,0)
 . I LRFLAG S A(2)=LRY
"RTN","LRRP1",174,0)
 . E  D EN^DDIOL(LRY,"","!?2")
"RTN","LRRP1",175,0)
 ;
"RTN","LRRP1",176,0)
 I $P(LRX("ORU"),"^",2) D
"RTN","LRRP1",177,0)
 . S LRY="Collecting Site: "_$$GET1^DIQ(LRFILE,IENS,.32,"")
"RTN","LRRP1",178,0)
 . I LRFLAG=1 S A(3)=LRY
"RTN","LRRP1",179,0)
 . E  D EN^DDIOL(LRY,"","!")
"RTN","LRRP1",180,0)
 ;
"RTN","LRRP1",181,0)
 I LRFLAG M LRARRAY=A
"RTN","LRRP1",182,0)
 ;
"RTN","LRRP1",183,0)
 Q
"RTN","LRRP1",184,0)
 ;
"RTN","LRRP1",185,0)
 ;
"RTN","LRRP1",186,0)
PFAC(LR4,LRPG,LRFLAG,LRARRAY) ; Display name/address of printing facility
"RTN","LRRP1",187,0)
 ; Call with LR4 = File #4 IEN
"RTN","LRRP1",188,0)
 ;          LRPG = current page number to print
"RTN","LRRP1",189,0)
 ;        LRFLAG = 0 (print facility info)
"RTN","LRRP1",190,0)
 ;                 1 (return facility info in LRARRAY)
"RTN","LRRP1",191,0)
 ;       LRARRAY = array with name/address info
"RTN","LRRP1",192,0)
 ;
"RTN","LRRP1",193,0)
 N A,CLIA,LRX,X
"RTN","LRRP1",194,0)
 S LRX=$$NAME^XUAF4(LR4),CLIA=$$ID^XUAF4("CLIA",LR4),LRFLAG=$G(LRFLAG,0)
"RTN","LRRP1",195,0)
 S A(1)="Printed at:"
"RTN","LRRP1",196,0)
 I $G(LRPG) S A(1)=$$LJ^XLFSTR(A(1),$G(IOM,80)-15)_"page "_LRPG
"RTN","LRRP1",197,0)
 S A(2)=LRX
"RTN","LRRP1",198,0)
 I CLIA'="" D
"RTN","LRRP1",199,0)
 . S X="[CLIA# "_CLIA_"]"
"RTN","LRRP1",200,0)
 . I $L(A(2))+$L(X)+1>$G(IOM,80) S A(2.5)=X
"RTN","LRRP1",201,0)
 . E  S A(2)=A(2)_" "_X
"RTN","LRRP1",202,0)
 S LRX=$$PADD^XUAF4(LR4),LRX(1)=$$WHAT^XUAF4(LR4,1.02)
"RTN","LRRP1",203,0)
 S A(3)=$P(LRX,U)_" "_$S(LRX(1)'="":LRX(1)_" ",1:"")_$P(LRX,U,2)_$S($P(LRX,U,3)'="":", ",1:"")_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LRRP1",204,0)
 I 'LRFLAG D
"RTN","LRRP1",205,0)
 . S A(4)=" "
"RTN","LRRP1",206,0)
 . S A(1,"F")="?2",A(2,"F")="!?2",A(3,"F")="!?2",A(4,"F")="!"
"RTN","LRRP1",207,0)
 . I $D(A(2.5)) S A(2.5,"F")="!?2"
"RTN","LRRP1",208,0)
 . D EN^DDIOL(.A)
"RTN","LRRP1",209,0)
 I LRFLAG M LRARRAY=A
"RTN","LRRP1",210,0)
 ;
"RTN","LRRP1",211,0)
 Q
"RTN","LRRP1",212,0)
 ;
"RTN","LRRP1",213,0)
 ;
"RTN","LRRP1",214,0)
RL(LR4,LRFLAG,OUT) ; Display name/address of reporting laboratory
"RTN","LRRP1",215,0)
 ; Call with LR4: File #4 IEN
"RTN","LRRP1",216,0)
 ;        LRFLAG: <opt> 1=save to OUT array
"RTN","LRRP1",217,0)
 ;           OUT: <byref><opt>
"RTN","LRRP1",218,0)
 ;
"RTN","LRRP1",219,0)
 N A,CLIA,LRX,X,I
"RTN","LRRP1",220,0)
 S LRFLAG=$G(LRFLAG)
"RTN","LRRP1",221,0)
 K OUT
"RTN","LRRP1",222,0)
 S LRX=$$NAME^XUAF4(LR4),CLIA=$$ID^XUAF4("CLIA",LR4)
"RTN","LRRP1",223,0)
 S A(1)="Reporting Lab:" ;_LRX
"RTN","LRRP1",224,0)
 S A(2)=LRX
"RTN","LRRP1",225,0)
 I 'LRFLAG S A(1,"F")="!!?2",A(2,"F")="!?2"
"RTN","LRRP1",226,0)
 I CLIA'="" D
"RTN","LRRP1",227,0)
 . S X="[CLIA# "_CLIA_"]"
"RTN","LRRP1",228,0)
 . I $L(A(2))+$L(X)+1>$G(IOM,80) S A(2.5)=X S:'LRFLAG A(2.5,"F")="!?17"
"RTN","LRRP1",229,0)
 . E  S A(2)=A(2)_" "_X
"RTN","LRRP1",230,0)
 S LRX=$$PADD^XUAF4(LR4),LRX(1)=$$WHAT^XUAF4(LR4,1.02)
"RTN","LRRP1",231,0)
 S A(3)=$P(LRX,U)_" "_$P(LRX,U,2)_", "_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LRRP1",232,0)
 S A(3)=$P(LRX,U)_" "_$S(LRX(1)'="":LRX(1)_" ",1:"")_$P(LRX,U,2)_$S($P(LRX,U,3)'="":", ",1:"")_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LRRP1",233,0)
 I 'LRFLAG D
"RTN","LRRP1",234,0)
 . S A(4)=" ",A(3,"F")="!?2",A(4,"F")="!"
"RTN","LRRP1",235,0)
 . I $D(A(2.5)) S A(2.5,"F")="!?2"
"RTN","LRRP1",236,0)
 . D EN^DDIOL(.A)
"RTN","LRRP1",237,0)
 I LRFLAG M OUT=A
"RTN","LRRP1",238,0)
 ;
"RTN","LRRP1",239,0)
 Q
"RTN","LRRP1",240,0)
 ;
"RTN","LRRP1",241,0)
 ;
"RTN","LRRP1",242,0)
REFDOC(LRDFN,LRSS,LRIDT) ; Lookup LEDI referral free text provider name in file #63 on "ORUT" subscript
"RTN","LRRP1",243,0)
 ; Call with LRDFN = ien on entry in file #63
"RTN","LRRP1",244,0)
 ;            LRSS = file #63 subscript
"RTN","LRRP1",245,0)
 ;           LRIDT = inverse specimen date/time
"RTN","LRRP1",246,0)
 ;
"RTN","LRRP1",247,0)
 ; Returns     LRY = free text provider found on first test in file #63
"RTN","LRRP1",248,0)
 ;
"RTN","LRRP1",249,0)
 N LRI,LRX,LRY
"RTN","LRRP1",250,0)
 S LRI=0,(LRX,LRY)=""
"RTN","LRRP1",251,0)
 F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT",LRI)) Q:'LRI  S LRX=$P(^(LRI,0),"^",7) Q:LRX'=""
"RTN","LRRP1",252,0)
 I LRX'="" S LRY=LRX
"RTN","LRRP1",253,0)
 Q LRY
"RTN","LRRP2")
0^82^B61115638
"RTN","LRRP2",1,0)
LRRP2 ;DALOI/STAFF - INTERIM REPORT ;02/28/12  20:08
"RTN","LRRP2",2,0)
 ;;5.2;LAB SERVICE;**106,121,221,283,300,350**;Sep 27, 1994;Build 230
"RTN","LRRP2",3,0)
 ;
"RTN","LRRP2",4,0)
 ; from option LRRP2
"RTN","LRRP2",5,0)
BEGIN ;
"RTN","LRRP2",6,0)
 D INIT K DIC S LRPRTPG=0
"RTN","LRRP2",7,0)
 D ^LRDPA D:LRDFN>0 START G:LRDFN<0 END G BEGIN
"RTN","LRRP2",8,0)
END ;
"RTN","LRRP2",9,0)
 D ^LRRK
"RTN","LRRP2",10,0)
 Q
"RTN","LRRP2",11,0)
 ;
"RTN","LRRP2",12,0)
 ;
"RTN","LRRP2",13,0)
CUM ;ENTRY POINT FOR CUMULATIVE OPTIONS- LRAC PT,LRAC 1 PAGE, LRAC MANUAL
"RTN","LRRP2",14,0)
 S LRPRTPG=1
"RTN","LRRP2",15,0)
 ;
"RTN","LRRP2",16,0)
SUM ;ENTRY POINT FROM SUM^LRACM2- PRINT A FULL PATIENT SUMMARY
"RTN","LRRP2",17,0)
 D INIT K DIC D ^LRDPA D:LRDFN>0 START G:LRDFN<0 END
"RTN","LRRP2",18,0)
 Q
"RTN","LRRP2",19,0)
 ;
"RTN","LRRP2",20,0)
 ;
"RTN","LRRP2",21,0)
START ;
"RTN","LRRP2",22,0)
 I $O(^LR(LRDFN,0))="" W !,"NO LAB DATA ON THIS PATIENT!",$C(7) Q
"RTN","LRRP2",23,0)
 S LRLAB=$S($D(LRLABKY):1,1:0)
"RTN","LRRP2",24,0)
 I $D(LRCUM) S LRIDT=0,LREDT=9999999
"RTN","LRRP2",25,0)
 E  D
"RTN","LRRP2",26,0)
 . S LREDT="T-7" D ^LRWU3 Q:LREND
"RTN","LRRP2",27,0)
 . S LRIDT=9999999-LRSDT,LREDT=9999999-LREDT
"RTN","LRRP2",28,0)
 I LREND Q
"RTN","LRRP2",29,0)
 ;
"RTN","LRRP2",30,0)
 ;
"RTN","LRRP2",31,0)
ASKPG ;
"RTN","LRRP2",32,0)
 I '$G(LRPRTPG) D
"RTN","LRRP2",33,0)
 . N DIR,DIROUT,DIRUT,X,Y
"RTN","LRRP2",34,0)
 . S DIR(0)="Y",DIR("A")="Print address page",DIR("B")="NO",LRPRTPG=0
"RTN","LRRP2",35,0)
 . D ^DIR K DIR
"RTN","LRRP2",36,0)
 . I Y S LRPRTPG=1
"RTN","LRRP2",37,0)
 S %ZIS="Q",ZTSAVE("DFN")="",ZTSAVE("LR*")="",ZTRTN="SDQ^LRRP2"
"RTN","LRRP2",38,0)
 D IO^LRWU
"RTN","LRRP2",39,0)
 Q
"RTN","LRRP2",40,0)
 ;
"RTN","LRRP2",41,0)
 ;
"RTN","LRRP2",42,0)
SDQ ; dequeued
"RTN","LRRP2",43,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO D PT^LRX
"RTN","LRRP2",44,0)
 F  S LRCNIDT=+$O(^LR(LRDFN,"CH",LRIDT)),LRMNIDT=+$O(^LR(LRDFN,"MI",LRIDT)) Q:'LRCNIDT&'LRMNIDT  D SWITCH Q:LREND!LRSTOP!(LRIDT>LREDT)
"RTN","LRRP2",45,0)
 D FOOT^LRRP1
"RTN","LRRP2",46,0)
 D:$G(LRPRTPG) PLSPG
"RTN","LRRP2",47,0)
 Q
"RTN","LRRP2",48,0)
 ;
"RTN","LRRP2",49,0)
 ;
"RTN","LRRP2",50,0)
SWITCH I LRCNIDT=LRMNIDT S LRIDT=LRCNIDT Q:LRIDT>LREDT  D CH,MI Q
"RTN","LRRP2",51,0)
 I 'LRMNIDT S LRIDT=LRCNIDT Q:LRIDT>LREDT  D CH Q
"RTN","LRRP2",52,0)
 I 'LRCNIDT S LRIDT=LRMNIDT Q:LRIDT>LREDT  D MI Q
"RTN","LRRP2",53,0)
 I LRCNIDT<LRMNIDT S LRIDT=LRCNIDT Q:LRIDT>LREDT  D CH Q
"RTN","LRRP2",54,0)
 S LRIDT=LRMNIDT Q:LRIDT>LREDT  D MI
"RTN","LRRP2",55,0)
 Q
"RTN","LRRP2",56,0)
 ;
"RTN","LRRP2",57,0)
GENP ;
"RTN","LRRP2",58,0)
 W !!,"Too many tests!  Will use alternate format.  May show extra tests.",!
"RTN","LRRP2",59,0)
 S LREDT="T-7" D ^LRWU3 Q:LREND
"RTN","LRRP2",60,0)
 S LRSDT=9999999-LRSDT,LREDT=9999999-LREDT
"RTN","LRRP2",61,0)
 K ^TMP("LR",$J,"T"),LRORD,LRTSTS
"RTN","LRRP2",62,0)
 S ZTSAVE("^TMP(""LR"",$J,")="",ZTSAVE("DFN")="",ZTRTN="GDQ^LRRP2" D IO^LRWU
"RTN","LRRP2",63,0)
 Q
"RTN","LRRP2",64,0)
 ;
"RTN","LRRP2",65,0)
 ;
"RTN","LRRP2",66,0)
GDQ ;dequeued
"RTN","LRRP2",67,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO D PT^LRX
"RTN","LRRP2",68,0)
 S LRSUB="" F  S LRSUB=$O(^TMP("LR",$J,"TMP",LRSUB)) Q:LRSUB=""  S X=+$P(LRSUB,";",2),^TMP("LR",$J,"T",X)=""
"RTN","LRRP2",69,0)
 S LRIDT=LRSDT F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1!(LRIDT>LREDT)  D GEN2 Q:LREND!LRSTOP
"RTN","LRRP2",70,0)
 K ^TMP("LR",$J,"T"),^TMP("LR",$J,"TMP"),LRSDT,LREDT,LRTSTS,LRSUB,LRIDT
"RTN","LRRP2",71,0)
 Q
"RTN","LRRP2",72,0)
 ;
"RTN","LRRP2",73,0)
 ;
"RTN","LRRP2",74,0)
GEN2 ;
"RTN","LRRP2",75,0)
 S LRTN=0 F  S LRTN=$O(^LR(LRDFN,"CH",LRIDT,LRTN)) Q:LRTN<1  I $D(^TMP("LR",$J,"T",LRTN)) D CH Q
"RTN","LRRP2",76,0)
 I '$P($G(^LR(LRDFN,"CH",LRIDT,0)),U,3),$O(^LR(LRDFN,"CH",LRIDT,1,0)) D  Q:'$G(LRCAN)  D CH
"RTN","LRRP2",77,0)
 . S LRCAN=0 F  S LRCAN=+$O(^LR(LRDFN,"CH",LRIDT,1,LRCAN)) Q:LRCAN<1  Q:$E($G(^(LRCAN,0)))="*"
"RTN","LRRP2",78,0)
 Q
"RTN","LRRP2",79,0)
 ;
"RTN","LRRP2",80,0)
 ;
"RTN","LRRP2",81,0)
AIDQUE ;
"RTN","LRRP2",82,0)
 D INIT
"RTN","LRRP2",83,0)
 S LRLAB=$S($D(LRLABKY):1,1:0)
"RTN","LRRP2",84,0)
 K ^TMP($J)
"RTN","LRRP2",85,0)
 S LROCE=$S($D(LROC):LROC,1:""),LROC=$S(LROCE="":$O(^LAB(64.6,"AI","")),1:LROC)
"RTN","LRRP2",86,0)
 D:LROC'="" AI2
"RTN","LRRP2",87,0)
 F  S LROC=$O(^LAB(64.6,"AI",LROC)) Q:LROC=""!($L(LROCE)&(LROC'=LROCE))  D AI2
"RTN","LRRP2",88,0)
 S LROC="UNKNOWN" D AI2
"RTN","LRRP2",89,0)
 ;
"RTN","LRRP2",90,0)
 ;
"RTN","LRRP2",91,0)
PRT ; Print sorted data
"RTN","LRRP2",92,0)
 U IO K VA D KVAR^VADPT S LREND=0
"RTN","LRRP2",93,0)
 I $O(^TMP($J,0))="" D  Q
"RTN","LRRP2",94,0)
 . W !!?10,"No Interim report Patients to Print "
"RTN","LRRP2",95,0)
 . W !?20,$$HTE^XLFDT($H),!!
"RTN","LRRP2",96,0)
 . D QUIT
"RTN","LRRP2",97,0)
 S LROC=""
"RTN","LRRP2",98,0)
 F  S LROC=$O(^TMP($J,LROC)) Q:LROC=""!($G(LREND))  D
"RTN","LRRP2",99,0)
 . S LRPHY=""
"RTN","LRRP2",100,0)
 . F  S LRPHY=$O(^TMP($J,LROC,LRPHY)) Q:LRPHY=""!($G(LREND))  D
"RTN","LRRP2",101,0)
 . . S LRSSN=""
"RTN","LRRP2",102,0)
 . . F  S LRSSN=$O(^TMP($J,LROC,LRPHY,LRSSN)) Q:LRSSN=""!($G(LREND))  D
"RTN","LRRP2",103,0)
 . . . S LRDFN=0
"RTN","LRRP2",104,0)
 . . . F  S LRHF=1,LRDFN=$O(^TMP($J,LROC,LRPHY,LRSSN,LRDFN)) Q:LRDFN<1!($G(LREND))  D
"RTN","LRRP2",105,0)
 . . . . S LRIDT=0
"RTN","LRRP2",106,0)
 . . . . F  S LRIDT=$O(^TMP($J,LROC,LRPHY,LRSSN,LRDFN,LRIDT)) Q:LRIDT<1!($G(LREND))  D
"RTN","LRRP2",107,0)
 . . . . . S LRSS="",PNM=^(LRIDT),SSN=$P(PNM,U,2),AGE=$P(PNM,U,3),SEX=$P(PNM,U,4),PNM=$P(PNM,U),LRFOOT=0
"RTN","LRRP2",108,0)
 . . . . . D:$D(^LR(LRDFN,"CH",LRIDT,0))#2 CH
"RTN","LRRP2",109,0)
 . . . . . S LRFOOT=0
"RTN","LRRP2",110,0)
 . . . . . I $D(^LR(LRDFN,"MI",LRIDT,0))#2 D
"RTN","LRRP2",111,0)
 . . . . . . I $G(LRSS)="CH" D FOOT^LRRP1 D:$G(LRPRTPG) PLSPG
"RTN","LRRP2",112,0)
 . . . . . . D MI
"RTN","LRRP2",113,0)
 . . . . . I $G(LRSS)="CH" D FOOT^LRRP1 D:$G(LRPRTPG) PLSPG
"RTN","LRRP2",114,0)
 D QUIT
"RTN","LRRP2",115,0)
 Q
"RTN","LRRP2",116,0)
 ;
"RTN","LRRP2",117,0)
 ;
"RTN","LRRP2",118,0)
QUIT ;
"RTN","LRRP2",119,0)
 K LR0
"RTN","LRRP2",120,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRRP2",121,0)
 D ^%ZISC,^LRRK
"RTN","LRRP2",122,0)
 Q
"RTN","LRRP2",123,0)
 ;
"RTN","LRRP2",124,0)
 ;
"RTN","LRRP2",125,0)
AI2 ;
"RTN","LRRP2",126,0)
 Q:'$L($G(LROC))
"RTN","LRRP2",127,0)
 F LRDFN=0:0 S LRDFN=$O(^LRO(69,"AN",LROC,LRDFN)) Q:LRDFN<1  I $D(^LR(LRDFN,0))#2 D
"RTN","LRRP2",128,0)
 . S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX Q:LREND
"RTN","LRRP2",129,0)
 . I '$G(VAERR) D AI3
"RTN","LRRP2",130,0)
 Q
"RTN","LRRP2",131,0)
 ;
"RTN","LRRP2",132,0)
 ;
"RTN","LRRP2",133,0)
AI3 ;
"RTN","LRRP2",134,0)
 Q:$G(LREND)  N LRCAN
"RTN","LRRP2",135,0)
 S LRSSN=$P(PNM,",")_SSN(1)
"RTN","LRRP2",136,0)
 F LRIDT=0:0 S LRIDT=$O(^LRO(69,"AN",LROC,LRDFN,LRIDT)) Q:LRIDT<1  D
"RTN","LRRP2",137,0)
 . S LRND=$S($G(^LR(LRDFN,"CH",LRIDT,0)):^(0),$G(^LR(LRDFN,"MI",LRIDT,0)):^(0),1:"") D
"RTN","LRRP2",138,0)
 . . I $G(^LR(LRDFN,"CH",LRIDT,0)) D
"RTN","LRRP2",139,0)
 . . . I $O(^LR(LRDFN,"CH",LRIDT,1)),$P(LRND,U,3) D AI3SET Q  ; Print verified results.
"RTN","LRRP2",140,0)
 . . . I $O(^LR(LRDFN,"CH",LRIDT,1)) Q  ; Don't print unverified results.
"RTN","LRRP2",141,0)
 . . . S LRCAN=0 F  S LRCAN=+$O(^LR(LRDFN,"CH",LRIDT,1,LRCAN)) Q:LRCAN<1  Q:($E(^(LRCAN,0))="*")
"RTN","LRRP2",142,0)
 . . . I $G(LRCAN) D AI3SET ; Print if cancel comment and no unverified results.
"RTN","LRRP2",143,0)
 . . I $P($G(^LR(LRDFN,"MI",LRIDT,0)),U,3) D
"RTN","LRRP2",144,0)
 . . . S I=$O(^LR(LRDFN,"MI",LRIDT,0)) Q:I'=99  D AI3SET
"RTN","LRRP2",145,0)
 Q
"RTN","LRRP2",146,0)
 ;
"RTN","LRRP2",147,0)
 ;
"RTN","LRRP2",148,0)
AI3SET ;
"RTN","LRRP2",149,0)
 S LRPHY=$P($G(^VA(200,+$P(LRND,U,10),0)),U) S:LRPHY="" LRPHY="UNKNOWN"
"RTN","LRRP2",150,0)
 S ^TMP($J,LROC,LRPHY,LRSSN,LRDFN,LRIDT)=PNM_U_SSN_U_AGE_U_SEX
"RTN","LRRP2",151,0)
 Q
"RTN","LRRP2",152,0)
 ;
"RTN","LRRP2",153,0)
 ;
"RTN","LRRP2",154,0)
CH ;Also used by DVBC Package
"RTN","LRRP2",155,0)
 Q:'$G(^LR(LRDFN,"CH",LRIDT,0))
"RTN","LRRP2",156,0)
 N LROC,LRCAN
"RTN","LRRP2",157,0)
 K ^TMP("LR",$J,"TP"),LRTP S LR0=^LR(LRDFN,"CH",LRIDT,0)
"RTN","LRRP2",158,0)
 Q:$O(^LR(LRDFN,"CH",LRIDT,1))&('$P(LR0,U,3))
"RTN","LRRP2",159,0)
 I '$P(LR0,U,3),$O(^LR(LRDFN,"CH",LRIDT,1,0)) D  Q:'$G(LRCAN)
"RTN","LRRP2",160,0)
 . S LRCAN=0 F  S LRCAN=+$O(^LR(LRDFN,"CH",LRIDT,1,LRCAN)) Q:LRCAN<1  Q:$E($G(^(LRCAN,0)))="*"
"RTN","LRRP2",161,0)
 S LRCDT=+LR0,LRSS="CH",LROC=$P(LR0,U,11),LRAA="",LRAAO=1,LRTC=0,LRSPEC=$P(LR0,U,5)
"RTN","LRRP2",162,0)
 D CH^LRRP
"RTN","LRRP2",163,0)
 Q
"RTN","LRRP2",164,0)
 ;
"RTN","LRRP2",165,0)
 ;
"RTN","LRRP2",166,0)
MI ;Also used by DVBC package
"RTN","LRRP2",167,0)
 S LRCDT=9999999-LRIDT,^TMP("LR",$J,"TP",1)="^MI",^(1,LRCDT)="",^(LRCDT,-1)="",LRSS="MI",LRH=1
"RTN","LRRP2",168,0)
 I LRFOOT D FOOT^LRRP1 Q:LRSTOP
"RTN","LRRP2",169,0)
 D EN1^LRMIPC
"RTN","LRRP2",170,0)
 S LRHF=1,LRFOOT=0
"RTN","LRRP2",171,0)
 K A,Z,LRH
"RTN","LRRP2",172,0)
 S:LREND LREND=0,LRSTOP=1
"RTN","LRRP2",173,0)
 Q
"RTN","LRRP2",174,0)
 ;
"RTN","LRRP2",175,0)
 ;
"RTN","LRRP2",176,0)
INIT ;
"RTN","LRRP2",177,0)
 D EN^LRPARAM
"RTN","LRRP2",178,0)
 S (LREND,LRSTOP,LRPG,LRFOOT)=0,LRCW=8,LRHF=1,(LRONESPC,LRONETST)=""
"RTN","LRRP2",179,0)
 K LREPR,LRPLS
"RTN","LRRP2",180,0)
 Q
"RTN","LRRP2",181,0)
 ;
"RTN","LRRP2",182,0)
 ;
"RTN","LRRP2",183,0)
EN69 ;entry point for surgery pkg
"RTN","LRRP2",184,0)
 D START,^LRRK
"RTN","LRRP2",185,0)
 Q
"RTN","LRRP2",186,0)
 ;
"RTN","LRRP2",187,0)
 ;
"RTN","LRRP2",188,0)
GEN ;from LRGEN test overflow
"RTN","LRRP2",189,0)
 S LRLAB=$S($D(LRLABKY):1,1:0) D INIT,GENP,^LRRK
"RTN","LRRP2",190,0)
 Q
"RTN","LRRP2",191,0)
 ;
"RTN","LRRP2",192,0)
DS ;from LRRD, LRRS
"RTN","LRRP2",193,0)
 D INIT S DFN=$P(^LR(LRDFN,0),U,3),LRDPF=$P(^(0),U,2) D SDQ
"RTN","LRRP2",194,0)
 Q
"RTN","LRRP2",195,0)
 ;
"RTN","LRRP2",196,0)
 ;
"RTN","LRRP2",197,0)
AIDQ ;tasked from LRTASK DAILY INTERIM,LRTASK CUM
"RTN","LRRP2",198,0)
 N LRLAB,LRH,LRWRDVEW,LRPRTPG
"RTN","LRRP2",199,0)
 S (LRH,LRWRDVEW)="",LRPRTPG=1
"RTN","LRRP2",200,0)
 D AIDQUE
"RTN","LRRP2",201,0)
 K ^TMP($J)
"RTN","LRRP2",202,0)
 Q
"RTN","LRRP2",203,0)
 ;
"RTN","LRRP2",204,0)
 ;
"RTN","LRRP2",205,0)
DQ ;tasked from LRVER3 thru LRTP for IMMEDIATE INTERIM REPORTING
"RTN","LRRP2",206,0)
 ;
"RTN","LRRP2",207,0)
 D INIT
"RTN","LRRP2",208,0)
 S LRLAB=0,LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRRP2",209,0)
 D PT^LRX
"RTN","LRRP2",210,0)
 D CH,FOOT^LRRP1,^%ZISC
"RTN","LRRP2",211,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRRP2",212,0)
 Q
"RTN","LRRP2",213,0)
 ;
"RTN","LRRP2",214,0)
 ;
"RTN","LRRP2",215,0)
OR ;OE/RR entry point
"RTN","LRRP2",216,0)
 Q:'$D(ORVP)  S KILL=1 I '$D(LRPARAM) D EN^LRPARAM S KILL=0
"RTN","LRRP2",217,0)
 S (LREND,LRSTOP)=0,LRCW=8,LRHF=1,LRFOOT=0,(LRONESPC,LRONETST)=""
"RTN","LRRP2",218,0)
 D DT^LRX K DIC,LRTP S LRTP=0,DFN=+ORVP,LRDPF=+$P(@("^"_$P(ORVP,";",2)_"0)"),"^",2)_"^"_$P(ORVP,";",2) D END^LRDPA Q:LRDFN<1
"RTN","LRRP2",219,0)
 D START,^LRRK
"RTN","LRRP2",220,0)
 I 'KILL K LRBLOOD,LRDT0,LRPARAM,LRPLASMA,LRSERUM,LRSB,LRTP,LRUNKNOW,LRURINE
"RTN","LRRP2",221,0)
 K KILL
"RTN","LRRP2",222,0)
 Q
"RTN","LRRP2",223,0)
 ;
"RTN","LRRP2",224,0)
 ;
"RTN","LRRP2",225,0)
PLSPG ;Print last page with performing lab site names and addresses
"RTN","LRRP2",226,0)
 ;
"RTN","LRRP2",227,0)
 N A,CLIA,LR4,LRJ,LRX,LRY
"RTN","LRRP2",228,0)
 W @IOF
"RTN","LRRP2",229,0)
 I $D(LRPG) S LRPG=LRPG+1,A(1)="page "_LRPG,A(1,"F")="!?65"
"RTN","LRRP2",230,0)
 S A(2)=$$LJ^XLFSTR(PNM,30)_$$LJ^XLFSTR(SSN,20)_$$HTE^XLFDT($H,"M")
"RTN","LRRP2",231,0)
 S A(3)="Performing Lab Sites:",A(3,"F")="!!"
"RTN","LRRP2",232,0)
 S LR4=0,LRJ=$O(A(""),-1)+1
"RTN","LRRP2",233,0)
 F  S LR4=$O(LRPLS(LR4)) Q:LR4=""  D
"RTN","LRRP2",234,0)
 . S LRX=$$NAME^XUAF4(LR4),CLIA=$$ID^XUAF4("CLIA",LR4),LRY="["_LR4_"]  "
"RTN","LRRP2",235,0)
 . S A(LRJ)=LRY_LRX,A(LRJ,"F")="!!"
"RTN","LRRP2",236,0)
 . I CLIA'="" D
"RTN","LRRP2",237,0)
 . . I $L(A(LRJ))<60 S A(LRJ)=A(LRJ)_" [CLIA# "_CLIA_"]"
"RTN","LRRP2",238,0)
 . . E  S A(LRJ+.5)="CLIA# "_CLIA,A(LRJ+.5,"F")="!?"_$L(LRY)
"RTN","LRRP2",239,0)
 . S LRX=$$PADD^XUAF4(LR4)
"RTN","LRRP2",240,0)
 . S A(LRJ+1)=$P(LRX,U)_" "_$P(LRX,U,2)_", "_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LRRP2",241,0)
 . S A(LRJ+1,"F")="!?"_$L(LRY),LRJ=LRJ+2
"RTN","LRRP2",242,0)
 D EN^DDIOL(.A)
"RTN","LRRP2",243,0)
 Q
"RTN","LRRPL")
0^165^B138917268
"RTN","LRRPL",1,0)
LRRPL ;DALOI/JMC - Interim Report Performing Lab Utility ;04/30/12  09:46
"RTN","LRRPL",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRRPL",3,0)
 ;
"RTN","LRRPL",4,0)
 ;
"RTN","LRRPL",5,0)
RETLST(LRPL,LRDFN,LRSS,LRIDT,LROPT) ; Retreive list of Report sections and related performing labs.
"RTN","LRRPL",6,0)
 ; Call with LRPL = array listing section and related performing lab name/address/CLIA (by reference)
"RTN","LRRPL",7,0)
 ;          LRDFN = File #63 IEN
"RTN","LRRPL",8,0)
 ;           LRSS = File #63 subscript
"RTN","LRRPL",9,0)
 ;          LRIDT = File #63 inverse date/time of specimen
"RTN","LRRPL",10,0)
 ;          LROPT = 0 (addresses); 1 (no addresses); 2 (list/iens)
"RTN","LRRPL",11,0)
 ;           
"RTN","LRRPL",12,0)
 ; Returns   LRPL = array listing section and related performing lab name/address/CLIA
"RTN","LRRPL",13,0)
 ; 
"RTN","LRRPL",14,0)
 N LRPLIEN,LRQUIT,LRREC,LRX
"RTN","LRRPL",15,0)
 S (LRPL,LRQUIT)=0
"RTN","LRRPL",16,0)
 S (LRX,LRREC)=LRDFN_","_LRSS_","_LRIDT_","
"RTN","LRRPL",17,0)
 F  S LRX=$O(^LR(LRDFN,"PL","B",LRX)) Q:LRX=""  D  Q:LRQUIT
"RTN","LRRPL",18,0)
 . I $P(LRX,",",1,3)'=$P(LRREC,",",1,3) S LRQUIT=1 Q
"RTN","LRRPL",19,0)
 . S LRPLIEN=$O(^LR(LRDFN,"PL","B",LRX,0))
"RTN","LRRPL",20,0)
 . D RETSEC(.LRPL,LRDFN,LRPLIEN,LROPT)
"RTN","LRRPL",21,0)
 ; 
"RTN","LRRPL",22,0)
 Q
"RTN","LRRPL",23,0)
 ;
"RTN","LRRPL",24,0)
 ;
"RTN","LRRPL",25,0)
RETSEC(LRREC,LRDFN,LRPLIEN,LROPT) ; Retrieve Report section and related performing lab.
"RTN","LRRPL",26,0)
 ; Call with LRREC = array listing section and related performing lab name/address/CLIA (by reference)
"RTN","LRRPL",27,0)
 ;           LRDFN = File #63 IEN
"RTN","LRRPL",28,0)
 ;         LRPLIEN = Reference to entry in "PL" subscript
"RTN","LRRPL",29,0)
 ;           LROPT = 0 (addresses); 1 (no addresses); 2 (list/iens)
"RTN","LRRPL",30,0)
 ;
"RTN","LRRPL",31,0)
 ; Returns   LRREC = array listing section and related performing lab name/address/CLIA
"RTN","LRRPL",32,0)
 ;
"RTN","LRRPL",33,0)
 N CLIA,LR4,LRREF,LRX
"RTN","LRRPL",34,0)
 S LRX=^LR(LRDFN,"PL",LRPLIEN,0),LRREF=$P(LRX,"^"),LR4=$P(LRX,"^",2)
"RTN","LRRPL",35,0)
 ;
"RTN","LRRPL",36,0)
 ; Check reference to determine what component of report it's associated with.
"RTN","LRRPL",37,0)
 ;  and construct the performing laboratory statement.
"RTN","LRRPL",38,0)
 S LRREC=$O(LRREC(""),-1)
"RTN","LRRPL",39,0)
 I LRREC>1 S LRREC=LRREC+1,LRREC(LRREC)=" "
"RTN","LRRPL",40,0)
 S LRREC=LRREC+1,LRREC(LRREC)=""
"RTN","LRRPL",41,0)
 I $P(LRREF,",",2)?1(1"CH",1"MI") D @($P(LRREF,",",2)_"CHK")
"RTN","LRRPL",42,0)
 I $P(LRREF,",",2)?1(1"SP",1"CY",1"EM") D APCHK
"RTN","LRRPL",43,0)
 I $P(LRREF,",",2)="AU" D AUCHK
"RTN","LRRPL",44,0)
 ;
"RTN","LRRPL",45,0)
 I LROPT=2 S LRX=$O(LRREC(0,""),-1)+1,LRREC(0,LRX)=LRREF_"^"_LRPLIEN_"^"_LRREC(LRREC)
"RTN","LRRPL",46,0)
 ;
"RTN","LRRPL",47,0)
 S LRREC(LRREC)=LRREC(LRREC)_" Performed By: "
"RTN","LRRPL",48,0)
 S LRREC=LRREC+1,LRREC(LRREC)=$$NAME^XUAF4(LR4)
"RTN","LRRPL",49,0)
 ;
"RTN","LRRPL",50,0)
 S CLIA=$$ID^XUAF4("CLIA",LR4)
"RTN","LRRPL",51,0)
 I CLIA'="" D
"RTN","LRRPL",52,0)
 . I $L(LRREC(LRREC))<(IOM-20) S LRREC(LRREC)=LRREC(LRREC)_" [CLIA# "_CLIA_"]"
"RTN","LRRPL",53,0)
 . E  S LRREC=LRREC+1,LRREC(LRREC)="CLIA# "_CLIA
"RTN","LRRPL",54,0)
 ;
"RTN","LRRPL",55,0)
 I LROPT>1 Q
"RTN","LRRPL",56,0)
 S LRX=$$PADD^XUAF4(LR4),LRX(1)=$$WHAT^XUAF4(LR4,1.02)
"RTN","LRRPL",57,0)
 I LRX="" Q
"RTN","LRRPL",58,0)
 S LRREC=LRREC+1
"RTN","LRRPL",59,0)
 S LRREC(LRREC)=$P(LRX,U)_" "_$S(LRX(1)'="":LRX(1)_" ",1:"")_$P(LRX,U,2)_$S($P(LRX,U,3)'="":", ",1:"")_$P(LRX,U,3)_" "_$P(LRX,U,4)
"RTN","LRRPL",60,0)
 ;
"RTN","LRRPL",61,0)
 Q
"RTN","LRRPL",62,0)
 ;
"RTN","LRRPL",63,0)
 ;
"RTN","LRRPL",64,0)
CHCHK ; Check and resolve CH subscript
"RTN","LRRPL",65,0)
 ;
"RTN","LRRPL",66,0)
 Q
"RTN","LRRPL",67,0)
 ;
"RTN","LRRPL",68,0)
 ;
"RTN","LRRPL",69,0)
MICHK ; Check and resolve MI subscript
"RTN","LRRPL",70,0)
 ;
"RTN","LRRPL",71,0)
 ; If entire report flagged then check if only one section and report that section
"RTN","LRRPL",72,0)
 ;   otherwise report as "microbiology report" when multiple sections.
"RTN","LRRPL",73,0)
 I $P(LRREF,",",4)=0 D  Q
"RTN","LRRPL",74,0)
 . N LRSECT,X,Y
"RTN","LRRPL",75,0)
 . S LRREC(LRREC)="Microbiology Report",LRSECT=0
"RTN","LRRPL",76,0)
 . F X=1,5,8,11,16 D  Q:LRSECT=""
"RTN","LRRPL",77,0)
 . . I '$D(^LR(LRDFN,"MI",$P(LRREF,",",3),X)) Q
"RTN","LRRPL",78,0)
 . . I LRSECT=0 S LRSECT=X
"RTN","LRRPL",79,0)
 . . E  S LRSECT=""
"RTN","LRRPL",80,0)
 . I LRSECT<1 Q
"RTN","LRRPL",81,0)
 . S X="Bacteriology^^^^Parasite^^^Mycology^^^Mycobacterium^^^^^Virology"
"RTN","LRRPL",82,0)
 . S Y=$P(X,"^",LRSECT)
"RTN","LRRPL",83,0)
 . I Y'="" S LRREC(LRREC)=Y_" Report"
"RTN","LRRPL",84,0)
 ;
"RTN","LRRPL",85,0)
 I $P($P(LRREF,";"),",",4)=1 D  Q
"RTN","LRRPL",86,0)
 . I $P(LRREF,";",2)=5 S LRREC(LRREC)="Sputum Screen" Q
"RTN","LRRPL",87,0)
 . I $P(LRREF,";",2)=6 S LRREC(LRREC)="Urine Screen" Q
"RTN","LRRPL",88,0)
 . S LRREC(LRREC)="Bacteriology Report"
"RTN","LRRPL",89,0)
 ;
"RTN","LRRPL",90,0)
 I $P(LRREF,",",4)=2 D  Q
"RTN","LRRPL",91,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Gram Stain" Q
"RTN","LRRPL",92,0)
 . S LRREC(LRREC)="Gram Stain Comment #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",93,0)
 ;
"RTN","LRRPL",94,0)
 I $P(LRREF,",",4)=3 D  Q
"RTN","LRRPL",95,0)
 . N LRORG
"RTN","LRRPL",96,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Organism Identification" Q
"RTN","LRRPL",97,0)
 . S LRORG=$$GETORG(LRREF)
"RTN","LRRPL",98,0)
 . I $P(LRREF,",",6)=1 D  Q
"RTN","LRRPL",99,0)
 . . I $P(LRREF,",",7)>0 S LRREC(LRREC)=LRORG_" Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",100,0)
 . . S LRREC(LRREC)=LRORG_" Comment"
"RTN","LRRPL",101,0)
 . I ($P(LRREF,",",6)\1)=2 S LRREC(LRREC)=LRORG_" "_$$GETDRUG(3,$P(LRREF,",",6))_" Susceptibility" Q
"RTN","LRRPL",102,0)
 . I $P(LRREF,",",6)=3,$P(LRREF,",",7)>0 S LRREC(LRREC)=LRORG_" "_$$GETDRUG2(LRREF)_" Susceptibility" Q
"RTN","LRRPL",103,0)
 . S LRREC(LRREC)=LRORG
"RTN","LRRPL",104,0)
 ;
"RTN","LRRPL",105,0)
 I $P(LRREF,",",4)=4 D  Q
"RTN","LRRPL",106,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Bact Report Remark" Q
"RTN","LRRPL",107,0)
 . S LRREC(LRREC)="Bact Report Remark #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",108,0)
 ;
"RTN","LRRPL",109,0)
 I $P(LRREF,",",4)=5 S LRREC(LRREC)="Parasite Report" Q
"RTN","LRRPL",110,0)
 ;
"RTN","LRRPL",111,0)
 I $P(LRREF,",",4)=6 D  Q
"RTN","LRRPL",112,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Parasite Identification" Q
"RTN","LRRPL",113,0)
 . S LRORG=$$GETORG(LRREF)
"RTN","LRRPL",114,0)
 . I $P(LRREF,",",8)=1 D  Q
"RTN","LRRPL",115,0)
 . . I $P(LRREF,",",9)>0 S LRREC(LRREC)=LRORG_" Stage Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",116,0)
 . . S LRREC(LRREC)=LRORG_" Stage Comment"
"RTN","LRRPL",117,0)
 . I $P(LRREF,",",7)>0 S LRREC(LRREC)=LRORG_" Parasite Stage" Q
"RTN","LRRPL",118,0)
 . S LRREC(LRREC)=LRORG
"RTN","LRRPL",119,0)
 ;
"RTN","LRRPL",120,0)
 I $P(LRREF,",",4)=7 D  Q
"RTN","LRRPL",121,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Parasite Report Remark" Q
"RTN","LRRPL",122,0)
 . S LRREC(LRREC)="Parasite Report Remark #"_$P(LRREF,",",5)
"RTN","LRRPL",123,0)
 ;
"RTN","LRRPL",124,0)
 I $P(LRREF,",",4)=8 S LRREC(LRREC)="Mycology Report" Q
"RTN","LRRPL",125,0)
 ;
"RTN","LRRPL",126,0)
 I $P(LRREF,",",4)=9 D  Q
"RTN","LRRPL",127,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Mycology Identification" Q
"RTN","LRRPL",128,0)
 . S LRORG=$$GETORG(LRREF)
"RTN","LRRPL",129,0)
 . I $P(LRREF,",",6)=1 D  Q
"RTN","LRRPL",130,0)
 . . I $P(LRREF,",",7)>0 S LRREC(LRREC)=LRORG_" Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",131,0)
 . . S LRREC(LRREC)=LRORG_" Comment"
"RTN","LRRPL",132,0)
 . S LRREC(LRREC)=LRORG
"RTN","LRRPL",133,0)
 ;
"RTN","LRRPL",134,0)
 I $P(LRREF,",",4)=10 D  Q
"RTN","LRRPL",135,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Mycology Report Remark" Q
"RTN","LRRPL",136,0)
 . S LRREC(LRREC)="Mycology Report Remark #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",137,0)
 ;
"RTN","LRRPL",138,0)
 I $P($P(LRREF,";"),",",4)=11 D  Q
"RTN","LRRPL",139,0)
 . I $P(LRREF,";",2)=3 S LRREC(LRREC)="Acid Fast Stain" Q
"RTN","LRRPL",140,0)
 . S LRREC(LRREC)="Mycobacterium Report"
"RTN","LRRPL",141,0)
 ;
"RTN","LRRPL",142,0)
 I $P(LRREF,",",4)=12 D
"RTN","LRRPL",143,0)
 . N LRORG
"RTN","LRRPL",144,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Mycobacterium Identification" Q
"RTN","LRRPL",145,0)
 . S LRORG=$$GETORG(LRREF)
"RTN","LRRPL",146,0)
 . I $P(LRREF,",",6)=1 D  Q
"RTN","LRRPL",147,0)
 . . I $P(LRREF,",",7)>0 S LRREC(LRREC)=LRORG_" Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",148,0)
 . . S LRREC(LRREC)=LRORG_" Comment"
"RTN","LRRPL",149,0)
 . I $P(LRREF,",",6)>1 S LRREC(LRREC)=LRORG_" "_$$GETDRUG(12,$P(LRREF,",",6))_" Susceptibility" Q
"RTN","LRRPL",150,0)
 . S LRREC(LRREC)=LRORG
"RTN","LRRPL",151,0)
 ;
"RTN","LRRPL",152,0)
 I $P(LRREF,",",4)=13 D  Q
"RTN","LRRPL",153,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Mycobacterium Report Remark" Q
"RTN","LRRPL",154,0)
 . S LRREC(LRREC)="Mycobacterium Report Remark #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",155,0)
 ;
"RTN","LRRPL",156,0)
 I $P(LRREF,",",4)=14 D  Q
"RTN","LRRPL",157,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Antibiotic Serum Level" Q
"RTN","LRRPL",158,0)
 . S LRREC(LRREC)="Antibiotic Serum Level "_$$GETDRUG2(LRREF)
"RTN","LRRPL",159,0)
 ;
"RTN","LRRPL",160,0)
 I $P(LRREF,",",4)=15 D  Q
"RTN","LRRPL",161,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Mycology Smear/Prep" Q
"RTN","LRRPL",162,0)
 . S LRREC(LRREC)="Mycology smear/prep Remark #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",163,0)
 ;
"RTN","LRRPL",164,0)
 I $P(LRREF,",",4)=16 S LRREC(LRREC)="Virology Report" Q
"RTN","LRRPL",165,0)
 ;
"RTN","LRRPL",166,0)
 I $P(LRREF,",",4)=17 D  Q
"RTN","LRRPL",167,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Virus Identification" Q
"RTN","LRRPL",168,0)
 . S LRORG=$$GETORG(LRREF)
"RTN","LRRPL",169,0)
 . S LRREC(LRREC)=LRORG
"RTN","LRRPL",170,0)
 ;
"RTN","LRRPL",171,0)
 I $P(LRREF,",",4)=18 D  Q
"RTN","LRRPL",172,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Virology Report Remark" Q
"RTN","LRRPL",173,0)
 . S LRREC(LRREC)="Virology Report Remark #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",174,0)
 ;
"RTN","LRRPL",175,0)
 I $P(LRREF,",",4)>18,$P(LRREF,",",4)<31 D  Q
"RTN","LRRPL",176,0)
 . N LRI,LRX
"RTN","LRRPL",177,0)
 . S LRI=$P(LRREF,",",4)
"RTN","LRRPL",178,0)
 . I LRI>18,LRI<24 S LRX="Preliminary "_$S(LRI=19:"BACT",LRI=20:"VIROLOGY",LRI=21:"PARASITE",LRI=22:"MYCOLOGY",1:"TB")_" Comment"
"RTN","LRRPL",179,0)
 . I LRI>23,LRI<26 S LRX=$S(LRI=24:"PARASITOLOGY",1:"BACTERIOLOGY")_" SMEAR/PREP"
"RTN","LRRPL",180,0)
 . I LRI>25,LRI<31 S LRX=$S(LRI=26:"BACTERIOLOGY",LRI=27:"PARASITE",LRI=28:"MYCOLOGY",LRI=29:"TB",1:"VIROLOGY")_" TESTS"
"RTN","LRRPL",181,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)=LRX Q
"RTN","LRRPL",182,0)
 . S LRREC(LRREC)=LRX_" #"_$$CMTSEQ(LRREF)
"RTN","LRRPL",183,0)
 ;
"RTN","LRRPL",184,0)
 ; Sterility Results
"RTN","LRRPL",185,0)
 I $P(LRREF,",",4)=31 S LRREC(LRREC)="Sterility Results" Q
"RTN","LRRPL",186,0)
 ;
"RTN","LRRPL",187,0)
 ; Comment on specimen
"RTN","LRRPL",188,0)
 I $P(LRREF,",",4)=99 S LRREC(LRREC)="Comment On Specimen" Q
"RTN","LRRPL",189,0)
 ;
"RTN","LRRPL",190,0)
 Q
"RTN","LRRPL",191,0)
 ;
"RTN","LRRPL",192,0)
 ;
"RTN","LRRPL",193,0)
APCHK ; Check and resolve SP, CY and EM subscript
"RTN","LRRPL",194,0)
 ;
"RTN","LRRPL",195,0)
 N LRSS
"RTN","LRRPL",196,0)
 S LRSS=$P(LRREF,",",2)
"RTN","LRRPL",197,0)
 ;
"RTN","LRRPL",198,0)
 ; Type of report
"RTN","LRRPL",199,0)
 I $P(LRREF,",",4)=0 S LRREC(LRREC)=$S(LRSS="SP":"Surgical Pathology",LRSS="CY":"Cytology",LRSS="EM":"Electron Microscopy",1:"")_" Report" Q
"RTN","LRRPL",200,0)
 ;
"RTN","LRRPL",201,0)
 ; Frozen section
"RTN","LRRPL",202,0)
 I LRSS="SP",$P(LRREF,",",4)=1.3 S LRREC(LRREC)="Frozen Section" Q
"RTN","LRRPL",203,0)
 ;
"RTN","LRRPL",204,0)
 ; Info accompanying request
"RTN","LRRPL",205,0)
 I $P(LRREF,",",4)=.2 S LRREC(LRREC)="Brief Clinical History" Q
"RTN","LRRPL",206,0)
 I $P(LRREF,",",4)=.3 S LRREC(LRREC)="Preoperative Diagnosis" Q
"RTN","LRRPL",207,0)
 I $P(LRREF,",",4)=.4 S LRREC(LRREC)="Operative Findings" Q
"RTN","LRRPL",208,0)
 I $P(LRREF,",",4)=.5 S LRREC(LRREC)="Post-Operative Diagnosis" Q
"RTN","LRRPL",209,0)
 ;
"RTN","LRRPL",210,0)
 ; Descriptions
"RTN","LRRPL",211,0)
 I $P(LRREF,",",4)=1 S LRREC(LRREC)="Gross Description" Q
"RTN","LRRPL",212,0)
 I $P(LRREF,",",4)=1.1 S LRREC(LRREC)="Microscopic Description" Q
"RTN","LRRPL",213,0)
 ;
"RTN","LRRPL",214,0)
 ; Surgical Path Diagnois
"RTN","LRRPL",215,0)
 I $P(LRREF,",",4)=1.4 S LRREC(LRREC)="Surgical Path Diagnosis" Q
"RTN","LRRPL",216,0)
 ;
"RTN","LRRPL",217,0)
 ; Supplementary Reports
"RTN","LRRPL",218,0)
 I $P(LRREF,",",4)=1.2 D  Q
"RTN","LRRPL",219,0)
 . N LRI,LRX
"RTN","LRRPL",220,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Supplementary Report" Q
"RTN","LRRPL",221,0)
 . S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),0))
"RTN","LRRPL",222,0)
 . S LRX=$$FMTE^XLFDT(+LRI,"1MZ")
"RTN","LRRPL",223,0)
 . S LRREC(LRREC)="Supplementary Report for "_LRX
"RTN","LRRPL",224,0)
 ;
"RTN","LRRPL",225,0)
 ; Special Studies
"RTN","LRRPL",226,0)
 I $P(LRREF,",",4)=2 D  Q
"RTN","LRRPL",227,0)
 . N LRI,LRX,LRSST
"RTN","LRRPL",228,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Special Studies" Q
"RTN","LRRPL",229,0)
 . S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),0))
"RTN","LRRPL",230,0)
 . S LRX=$P(^LAB(61,+LRI,0),"^")
"RTN","LRRPL",231,0)
 . I $P(LRREF,",",7) D  Q
"RTN","LRRPL",232,0)
 . . S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),5,$P(LRREF,",",7),0))
"RTN","LRRPL",233,0)
 . . S LRSST=$$EXTERNAL^DILFD(63.819,.01,"",$P(LRI,"^"),"")
"RTN","LRRPL",234,0)
 . . S LRREC(LRREC)="Special Studies on "_LRX_" "_LRSST
"RTN","LRRPL",235,0)
 . S LRREC(LRREC)="Special Studies on "_LRX
"RTN","LRRPL",236,0)
 ;
"RTN","LRRPL",237,0)
 ; Delayed report comment
"RTN","LRRPL",238,0)
 I $P(LRREF,",",4)=97 D  Q
"RTN","LRRPL",239,0)
 . I $P(LRREF,",",5)>0 S LRREC(LRREC)="Delayed Report Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",240,0)
 . S LRREC(LRREC)="Delayed Report Comment"
"RTN","LRRPL",241,0)
 ;
"RTN","LRRPL",242,0)
 I $P(LRREF,",",4)=99 D  Q
"RTN","LRRPL",243,0)
 . I $P(LRREF,",",5)>0 S LRREC(LRREC)="Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",244,0)
 . S LRREC(LRREC)="Comment"
"RTN","LRRPL",245,0)
 Q
"RTN","LRRPL",246,0)
 ;
"RTN","LRRPL",247,0)
 ;
"RTN","LRRPL",248,0)
AUCHK ; Check and resolve AU subscript
"RTN","LRRPL",249,0)
 ;
"RTN","LRRPL",250,0)
 ; Type of report
"RTN","LRRPL",251,0)
 I $P(LRREF,",",4)="AU",$P(LRREF,",",5)=0 S LRREC(LRREC)="Autospy" Q
"RTN","LRRPL",252,0)
 ;
"RTN","LRRPL",253,0)
 I $P(LRREF,",",4)="AZC" D
"RTN","LRRPL",254,0)
 . I $P(LRREF,",",5)>0 S LRREC(LRREC)="Autopsy Comment #"_$$CMTSEQ(LRREF) Q
"RTN","LRRPL",255,0)
 . S LRREC(LRREC)="Autopsy Comment"
"RTN","LRRPL",256,0)
 ;
"RTN","LRRPL",257,0)
 ; Descriptions
"RTN","LRRPL",258,0)
 I $P(LRREF,",",4)=81 S LRREC(LRREC)="Clinical Diagnoses" Q
"RTN","LRRPL",259,0)
 I $P(LRREF,",",4)=82 S LRREC(LRREC)="Pathological Diagnoses" Q
"RTN","LRRPL",260,0)
 ;
"RTN","LRRPL",261,0)
 ; Special Studies
"RTN","LRRPL",262,0)
 I $P(LRREF,",",4)="AY" D  Q
"RTN","LRRPL",263,0)
 . N LRI,LRX,LRSST
"RTN","LRRPL",264,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Special Studies" Q
"RTN","LRRPL",265,0)
 . S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",4),$P(LRREF,",",5),0))
"RTN","LRRPL",266,0)
 . S LRX=$P(^LAB(61,+LRI,0),"^")
"RTN","LRRPL",267,0)
 . I $P(LRREF,",",5) D  Q
"RTN","LRRPL",268,0)
 . . S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",4),$P(LRREF,",",5),$P(LRREF,",",6),$P(LRREF,",",7),0))
"RTN","LRRPL",269,0)
 . . S LRSST=$$EXTERNAL^DILFD(63.26,.01,"",$P(LRI,"^"),"")
"RTN","LRRPL",270,0)
 . . S LRREC(LRREC)="Special Studies on "_LRX_" "_LRSST
"RTN","LRRPL",271,0)
 . S LRREC(LRREC)="Special Studies on "_LRX
"RTN","LRRPL",272,0)
 ;
"RTN","LRRPL",273,0)
 ; Supplementary Reports
"RTN","LRRPL",274,0)
 I $P(LRREF,",",4)=84 D  Q
"RTN","LRRPL",275,0)
 . N LRI,LRX
"RTN","LRRPL",276,0)
 . I $P(LRREF,",",5)=0 S LRREC(LRREC)="Supplementary Report" Q
"RTN","LRRPL",277,0)
 . S LRI=$G(^LR($P(LRREF,","),84,$P(LRREF,",",3),0))
"RTN","LRRPL",278,0)
 . S LRX=$$FMTE^XLFDT(+LRI,"1MZ")
"RTN","LRRPL",279,0)
 . S LRREC(LRREC)="Supplementary Report for "_LRX
"RTN","LRRPL",280,0)
 ;
"RTN","LRRPL",281,0)
 Q
"RTN","LRRPL",282,0)
 ;
"RTN","LRRPL",283,0)
 ;
"RTN","LRRPL",284,0)
GETORG(LRREF) ; Retrieve name of organism from file #61.2
"RTN","LRRPL",285,0)
 ; Call with LRREF = reference to entry in file #63
"RTN","LRRPL",286,0)
 ;
"RTN","LRRPL",287,0)
 N LRI,LRX
"RTN","LRRPL",288,0)
 S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),0))
"RTN","LRRPL",289,0)
 S LRX=$$TITLE^XLFSTR($P($G(^LAB(61.2,+LRI,0)),"^"))
"RTN","LRRPL",290,0)
 ;
"RTN","LRRPL",291,0)
 Q LRX
"RTN","LRRPL",292,0)
 ;
"RTN","LRRPL",293,0)
 ;
"RTN","LRRPL",294,0)
GETDRUG(LRSECT,LRJ) ; Retreive name of drug in file #62.06 from drug data name
"RTN","LRRPL",295,0)
 ; Call with LRSECT = drug section in MI subscript (3=bacteria/12-TB)
"RTN","LRRPL",296,0)
 ;              LRJ = drug node
"RTN","LRRPL",297,0)
 ;
"RTN","LRRPL",298,0)
 ;     Returns LRDN = name of drug
"RTN","LRRPL",299,0)
 ;
"RTN","LRRPL",300,0)
 N LRDN
"RTN","LRRPL",301,0)
 S LRDN=$O(^LAB(62.06,$S(LRSECT=3:"AD",1:"AD1"),LRJ,0))
"RTN","LRRPL",302,0)
 I LRDN S LRDN=$$TITLE^XLFSTR($P($G(^LAB(62.06,LRDN,0)),"^"))
"RTN","LRRPL",303,0)
 ;
"RTN","LRRPL",304,0)
 Q LRDN
"RTN","LRRPL",305,0)
 ;
"RTN","LRRPL",306,0)
 ;
"RTN","LRRPL",307,0)
GETDRUG2(LRREF) ; Retreive name of drug in file 63.32 (#200) ANTIBIOTIC or file 63.42A (#28) ANTIBIOTIC LEVEL
"RTN","LRRPL",308,0)
 ; Call with LRREF = reference to entry in file #63
"RTN","LRRPL",309,0)
 ;
"RTN","LRRPL",310,0)
 ;    Returns LRDN = name of drug
"RTN","LRRPL",311,0)
 ;
"RTN","LRRPL",312,0)
 N LRDN,LRI
"RTN","LRRPL",313,0)
 I $P(LRREF,",",7)="" S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),$P(LRREF,",",6)))
"RTN","LRRPL",314,0)
 E  S LRI=$G(^LR($P(LRREF,","),$P(LRREF,",",2),$P(LRREF,",",3),$P(LRREF,",",4),$P(LRREF,",",5),$P(LRREF,",",6),$P(LRREF,",",7),$P(LRREF,",",8)))
"RTN","LRRPL",315,0)
 S LRDN=$P(LRI,"^")
"RTN","LRRPL",316,0)
 ;
"RTN","LRRPL",317,0)
 Q LRDN
"RTN","LRRPL",318,0)
 ;
"RTN","LRRPL",319,0)
 ;
"RTN","LRRPL",320,0)
CMTSEQ(LRREF) ; Determine the sequence # for a comment line
"RTN","LRRPL",321,0)
 ; Deal with intervening comments being deleted during edits resulting in the comment IEN being
"RTN","LRRPL",322,0)
 ; different than the display sequence #.
"RTN","LRRPL",323,0)
 ;
"RTN","LRRPL",324,0)
 ; Call with LRREF = id reference of specific comment
"RTN","LRRPL",325,0)
 ;
"RTN","LRRPL",326,0)
 ; Returns     LRY = display sequence #
"RTN","LRRPL",327,0)
 ;
"RTN","LRRPL",328,0)
 N LRDFN,LRI,LRIDT,LRSECT,LRSS,LRX,LRY
"RTN","LRRPL",329,0)
 S (LRY,LRI)=0
"RTN","LRRPL",330,0)
 S LRDFN=$P(LRREF,",")
"RTN","LRRPL",331,0)
 I $P(LRREF,",",2)?1(1"CH",1"MI",1"SP",1"CY",1"EM") S LRSS=$P(LRREF,",",2),LRIDT=$P(LRREF,",",3),LRSECT=$P(LRREF,",",4)
"RTN","LRRPL",332,0)
 E  S LRSS="AU",LRSECT=$P(LRREF,",",2)
"RTN","LRRPL",333,0)
 ;
"RTN","LRRPL",334,0)
 I LRSS="MI" D MISEQ
"RTN","LRRPL",335,0)
 ;
"RTN","LRRPL",336,0)
 ; Check AP comments
"RTN","LRRPL",337,0)
 I LRSS?1(1"SP",1"CY",1"EM"),(LRSECT=97!(LRSECT=99)) D
"RTN","LRRPL",338,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  S LRY=LRY+1 I LRI=$P(LRREF,"^",5) Q
"RTN","LRRPL",339,0)
 ;
"RTN","LRRPL",340,0)
 I LRSS="AU" D
"RTN","LRRPL",341,0)
 . F  S LRI=$O(^LR(LRDFN,LRSECT,LRI)) Q:'LRI  S LRY=LRY+1 I LRI=$P(LRREF,"^",4) Q
"RTN","LRRPL",342,0)
 ;
"RTN","LRRPL",343,0)
 Q LRY
"RTN","LRRPL",344,0)
 ;
"RTN","LRRPL",345,0)
 ;
"RTN","LRRPL",346,0)
MISEQ ; Check for comment seq on MI subscript
"RTN","LRRPL",347,0)
 ;
"RTN","LRRPL",348,0)
 ; Sections 2,4,7,10,13,14,15,18-30
"RTN","LRRPL",349,0)
 S LRX="^1^^1^^^1^^^1^^^1^1^1^^^1^1^1^1^1^1^1^1^1^1^1^1^1^"
"RTN","LRRPL",350,0)
 I $P(LRX,"^",LRSECT) D  Q
"RTN","LRRPL",351,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  S LRY=LRY+1 I LRI=$P(LRREF,",",5) Q
"RTN","LRRPL",352,0)
 ;
"RTN","LRRPL",353,0)
 ; Sections 3,9,12
"RTN","LRRPL",354,0)
 S LRX="^^1^^^^^^1^^^1^"
"RTN","LRRPL",355,0)
 I $P(LRX,"^",LRSECT) D  Q
"RTN","LRRPL",356,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,$P(LRREF,",",5),1,LRI)) Q:'LRI  S LRY=LRY+1 I LRI=$P(LRREF,",",7) Q
"RTN","LRRPL",357,0)
 ;
"RTN","LRRPL",358,0)
 ; Section 6 - Parasite Stage Comment (multiple 3 levels down)
"RTN","LRRPL",359,0)
 I LRSECT=6 D  Q
"RTN","LRRPL",360,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,$P(LRREF,",",5),1,$P(LRREF,",",6),1,LRI)) Q:'LRI  S LRY=LRY+1 I LRI=$P(LRREF,",",9) Q
"RTN","LRRPL",361,0)
 ;
"RTN","LRRPL",362,0)
 Q
"RTN","LRRPLU")
0^166^B286239164
"RTN","LRRPLU",1,0)
LRRPLU ;DALOI/JMC - Lab Report Performing Lab Utility ;10/28/11  14:29
"RTN","LRRPLU",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRRPLU",3,0)
 ;
"RTN","LRRPLU",4,0)
 Q
"RTN","LRRPLU",5,0)
 ;
"RTN","LRRPLU",6,0)
 ;
"RTN","LRRPLU",7,0)
EDIT(LRDFN,LRSS,LRIDT) ; Add/edit performing lab for a section of a report
"RTN","LRRPLU",8,0)
 ; Call with LRDFN = File #63 IEN
"RTN","LRRPLU",9,0)
 ;            LRSS = File #63 subscript
"RTN","LRRPLU",10,0)
 ;           LRIDT = File #63 inverse date/time of specimen
"RTN","LRRPLU",11,0)
 ;
"RTN","LRRPLU",12,0)
 ;
"RTN","LRRPLU",13,0)
 N DIR,DIROUT,DIRUT,DUOUT,LRHLP,LRLST,LRPL,LRX,LRY,X,Y
"RTN","LRRPLU",14,0)
 ; Autospy does not have an inverse date/time
"RTN","LRRPLU",15,0)
 I LRSS="AU" S LRIDT=0
"RTN","LRRPLU",16,0)
 I LRSS="MI",'($$GET^XPAR("ALL","LR ASK PERFORMING LAB MICRO",1,"Q")) D NOASK^LRRPLUA Q
"RTN","LRRPLU",17,0)
 I LRSS?1(1"SP",1"CY",1"EM"),'($$GET^XPAR("ALL","LR ASK PERFORMING LAB AP",1,"Q")) D NOASK^LRRPLUA Q
"RTN","LRRPLU",18,0)
 F  D  Q:$D(DIRUT)
"RTN","LRRPLU",19,0)
 . K LRPL,LRLST
"RTN","LRRPLU",20,0)
 . D RETLST^LRRPL(.LRPL,LRDFN,LRSS,LRIDT,2)
"RTN","LRRPLU",21,0)
 . ;
"RTN","LRRPLU",22,0)
 . I $D(LRPL(0)) D
"RTN","LRRPLU",23,0)
 . . M LRLST=LRPL(0) K LRPL(0)
"RTN","LRRPLU",24,0)
 . . S LRPL(.5)="Current performing lab assignments:",LRPL(.6)=" "
"RTN","LRRPLU",25,0)
 . E  S LRPL(.5)="Current performing lab assignments: None Listed"
"RTN","LRRPLU",26,0)
 . D EN^DDIOL(.LRPL)
"RTN","LRRPLU",27,0)
 . ;
"RTN","LRRPLU",28,0)
 . K DIR,LRHLP
"RTN","LRRPLU",29,0)
 . S DIR(0)="SO^1:Entire report;2:Specific sections of report"
"RTN","LRRPLU",30,0)
 . I $D(LRLST) S DIR(0)=DIR(0)_";3:Delete performing laboratory"
"RTN","LRRPLU",31,0)
 . E  S DIR("B")=1
"RTN","LRRPLU",32,0)
 . S DIR("A")="Designate performing laboratory for"
"RTN","LRRPLU",33,0)
 . I $G(DIR("B"))'="" S DIR("?")="Enter a code from the list or '^' to exit."
"RTN","LRRPLU",34,0)
 . E  S DIR("?")="Enter a code from the list or <ENTER> to exit."
"RTN","LRRPLU",35,0)
 . M LRHLP=LRPL
"RTN","LRRPLU",36,0)
 . S X=$G(LRPL),LRHLP(X+1)=" ",LRHLP(X+2)=DIR("?")
"RTN","LRRPLU",37,0)
 . S DIR("??")="^D EN^DDIOL(.LRHLP)"
"RTN","LRRPLU",38,0)
 . D ^DIR
"RTN","LRRPLU",39,0)
 . I $D(DIRUT) Q
"RTN","LRRPLU",40,0)
 . I Y=1 D SET1(0) Q
"RTN","LRRPLU",41,0)
 . I Y=2 D SET2 Q
"RTN","LRRPLU",42,0)
 . I Y=3 D DEL Q
"RTN","LRRPLU",43,0)
 ;
"RTN","LRRPLU",44,0)
 Q
"RTN","LRRPLU",45,0)
 ;
"RTN","LRRPLU",46,0)
 ;
"RTN","LRRPLU",47,0)
SET1(LRSECT) ; Set performing lab for entire or major section of report.
"RTN","LRRPLU",48,0)
 ; Update if already set otherwise create a new record.
"RTN","LRRPLU",49,0)
 ; Call with LRSECT = section of report
"RTN","LRRPLU",50,0)
 ;
"RTN","LRRPLU",51,0)
 N DIR,DIROUT,DIRUT,DUOUT,LRDIE,LRDPL,LRFDA,LRFLAG,LRIEN,LRREF,LRPLAB
"RTN","LRRPLU",52,0)
 S LRFLAG=0
"RTN","LRRPLU",53,0)
 I LRSS?1(1"MI",1"SP",1"CY",1"EM") S LRFLAG=1
"RTN","LRRPLU",54,0)
 S LRDPL=$$GET^XPAR("USR","LR VER DEFAULT PERFORMING LAB",1,"Q")
"RTN","LRRPLU",55,0)
 I LRDPL<1 S LRDPL=DUZ(2)
"RTN","LRRPLU",56,0)
 S LRPLAB=$$SELPL^LRVERA(LRDPL,LRFLAG)
"RTN","LRRPLU",57,0)
 I LRPLAB<1 Q
"RTN","LRRPLU",58,0)
 S LRREF=LRDFN_","_LRSS_","_LRIDT_","_LRSECT
"RTN","LRRPLU",59,0)
 ;
"RTN","LRRPLU",60,0)
 ; Confirm that user wants to add/update record.
"RTN","LRRPLU",61,0)
 W !
"RTN","LRRPLU",62,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRRPLU",63,0)
 S DIR("A")="Sure you want to "_$S($D(^LR(LRDFN,"PL","B",LRREF)):"update",1:"add")_" this record"
"RTN","LRRPLU",64,0)
 D ^DIR
"RTN","LRRPLU",65,0)
 I Y'=1 Q
"RTN","LRRPLU",66,0)
 ;
"RTN","LRRPLU",67,0)
 ; Update existing entry
"RTN","LRRPLU",68,0)
 I $D(^LR(LRDFN,"PL","B",LRREF)) D  Q
"RTN","LRRPLU",69,0)
 . D UEE(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLU",70,0)
 . W !,"... assignment updated.",!
"RTN","LRRPLU",71,0)
 ;
"RTN","LRRPLU",72,0)
 ; Create new entry
"RTN","LRRPLU",73,0)
 D CNE(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLU",74,0)
 W !,"... assignment created.",!
"RTN","LRRPLU",75,0)
 ;
"RTN","LRRPLU",76,0)
 Q
"RTN","LRRPLU",77,0)
 ;
"RTN","LRRPLU",78,0)
 ;
"RTN","LRRPLU",79,0)
SET2 ; Set performing lab for specific section of report
"RTN","LRRPLU",80,0)
 ;
"RTN","LRRPLU",81,0)
 N DIR,DIROUT,DIRUT,DUOUT,I,LRCNT,LRI,LRPLIEN,LRQUIT,LRREC,LRREF,LRROOT,LRSEC,LRSECT,LRX,LRY
"RTN","LRRPLU",82,0)
 ; Find the current existing sections of the report
"RTN","LRRPLU",83,0)
 S LRREF="",(LRI,LRQUIT,LRREC)=0
"RTN","LRRPLU",84,0)
 S (LRROOT,LRX)=LRDFN_","_LRSS_","_LRIDT_","
"RTN","LRRPLU",85,0)
 F  S LRX=$O(^LR(LRDFN,"PL","B",LRX)) Q:LRX=""  D  Q:LRQUIT
"RTN","LRRPLU",86,0)
 . I $P(LRROOT,",",1,3)'=$P(LRX,",",1,3) S LRQUIT=1 Q
"RTN","LRRPLU",87,0)
 . S LRPLIEN=$O(^LR(LRDFN,"PL","B",LRX,0))
"RTN","LRRPLU",88,0)
 . S LRI=$P(LRX,",",4,99),LRY="LRSEC("_LRDFN_",LRSS,"_LRIDT_",LRI)"
"RTN","LRRPLU",89,0)
 . S @LRY=LRX_"^"_LRPLIEN
"RTN","LRRPLU",90,0)
 ;
"RTN","LRRPLU",91,0)
 I LRSS="MI" D MICHK
"RTN","LRRPLU",92,0)
 I LRSS?1(1"SP",1"CY",1"EM") D APCHK
"RTN","LRRPLU",93,0)
 I LRSS="AU" D AUCHK
"RTN","LRRPLU",94,0)
 ;
"RTN","LRRPLU",95,0)
 W !
"RTN","LRRPLU",96,0)
 I $G(LRREC)<1 D  Q
"RTN","LRRPLU",97,0)
 . S DIR(0)="E",DIR("A",1)="NO sections to designate.",DIR("A")="Press any key to continue"
"RTN","LRRPLU",98,0)
 . D ^DIR
"RTN","LRRPLU",99,0)
 ;
"RTN","LRRPLU",100,0)
 S LRCNT=$O(LRREC(""),-1)
"RTN","LRRPLU",101,0)
 F I=1:1:LRCNT S DIR("A",I)=$J(I,11)_"   -   "_$P(LRREC(I),"^")
"RTN","LRRPLU",102,0)
 S DIR("A")="Select the section to designate (1-"_LRCNT_"): "
"RTN","LRRPLU",103,0)
 S DIR(0)="NOA^1:"_LRCNT_":0"
"RTN","LRRPLU",104,0)
 S DIR("??")="^D EN^DDIOL(.LRPL)"
"RTN","LRRPLU",105,0)
 D ^DIR
"RTN","LRRPLU",106,0)
 I $D(DIRUT) Q
"RTN","LRRPLU",107,0)
 ;
"RTN","LRRPLU",108,0)
 S LRSECT=$P(LRREC(Y),"^",2)
"RTN","LRRPLU",109,0)
 ;
"RTN","LRRPLU",110,0)
 I LRSS="MI" D
"RTN","LRRPLU",111,0)
 . S LRX="1^^^^1^^^1^^^1^^^^^1^^^^^^^^^^^^^^^1^"
"RTN","LRRPLU",112,0)
 . I $P(LRX,"^",LRSECT)!(LRSECT=99) D SET1(LRSECT) Q
"RTN","LRRPLU",113,0)
 . ;
"RTN","LRRPLU",114,0)
 . S LRX="^1^1^1^^1^1^^1^1^^1^1^1^1^^1^1^1^1^1^1^1^1^1^1^1^1^1^1^"
"RTN","LRRPLU",115,0)
 . I $P(LRX,"^",LRSECT) D
"RTN","LRRPLU",116,0)
 . . N LRY
"RTN","LRRPLU",117,0)
 . . D GETMULTI
"RTN","LRRPLU",118,0)
 . . W ! S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",119,0)
 . . I LRX#1=.1 W ! K LRY D MIAB(.LRY,$P(LRX,",",5)) S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",120,0)
 . . S LRREF=$P(LRX,"^",3)
"RTN","LRRPLU",121,0)
 . . I LRREF'="" D SETREF
"RTN","LRRPLU",122,0)
 ;
"RTN","LRRPLU",123,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRRPLU",124,0)
 . I LRSECT=1.2!(LRSECT=97)!(LRSECT=99) D  Q
"RTN","LRRPLU",125,0)
 . . N LRY
"RTN","LRRPLU",126,0)
 . . D GETMULTI
"RTN","LRRPLU",127,0)
 . . W ! S LRX=$$SELMULTI(.LRY),LRREF=$P(LRX,"^",3)
"RTN","LRRPLU",128,0)
 . . I LRREF'="" D SETREF
"RTN","LRRPLU",129,0)
 . I LRSECT=2 D  Q
"RTN","LRRPLU",130,0)
 . . N LRY
"RTN","LRRPLU",131,0)
 . . D GETMULTI
"RTN","LRRPLU",132,0)
 . . W ! S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",133,0)
 . . I LRX#1=.1 W ! K LRY D APSS(.LRY,$P(LRX,",",5)) S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",134,0)
 . . S LRREF=$P(LRX,"^",3)
"RTN","LRRPLU",135,0)
 . . I LRREF'="" D SETREF
"RTN","LRRPLU",136,0)
 . D SET1(LRSECT)
"RTN","LRRPLU",137,0)
 ;
"RTN","LRRPLU",138,0)
 I LRSS="AU" D
"RTN","LRRPLU",139,0)
 . I LRSECT=84!(LRSECT="AZC") D  Q
"RTN","LRRPLU",140,0)
 . . N LRY
"RTN","LRRPLU",141,0)
 . . D GETMULTI
"RTN","LRRPLU",142,0)
 . . W ! S LRX=$$SELMULTI(.LRY),LRREF=$P(LRX,"^",3)
"RTN","LRRPLU",143,0)
 . . I LRREF'="" D SETREF
"RTN","LRRPLU",144,0)
 . I LRSECT="AY" D  Q
"RTN","LRRPLU",145,0)
 . . N LRY
"RTN","LRRPLU",146,0)
 . . D GETMULTI
"RTN","LRRPLU",147,0)
 . . W ! S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",148,0)
 . . I LRX#1=.1 W ! K LRY D APSS(.LRY,$P(LRX,",",3)) S LRX=$$SELMULTI(.LRY)
"RTN","LRRPLU",149,0)
 . . S LRREF=$P(LRX,"^",3)
"RTN","LRRPLU",150,0)
 . . I LRREF'="" D SETREF
"RTN","LRRPLU",151,0)
 . D SET1(LRSECT)
"RTN","LRRPLU",152,0)
 ;
"RTN","LRRPLU",153,0)
 Q
"RTN","LRRPLU",154,0)
 ;
"RTN","LRRPLU",155,0)
 ;
"RTN","LRRPLU",156,0)
SETREF ; Set reference to performing lab in file #63
"RTN","LRRPLU",157,0)
 ; Update if already set otherwise create a new record.
"RTN","LRRPLU",158,0)
 ;
"RTN","LRRPLU",159,0)
 ; Confirm that user wants to add/update record.
"RTN","LRRPLU",160,0)
 N DIR,DIROUT,DIRUT,DUOUT,LRDIE,LRDPL,LRFDA,LRFLAG,LRIEN,LRPLAB
"RTN","LRRPLU",161,0)
 ;
"RTN","LRRPLU",162,0)
 S LRFLAG=0
"RTN","LRRPLU",163,0)
 I LRSS?1(1"MI",1"SP",1"CY",1"EM",1"AU") S LRFLAG=1
"RTN","LRRPLU",164,0)
 S LRDPL=$$GET^XPAR("USR","LR VER DEFAULT PERFORMING LAB",1,"Q")
"RTN","LRRPLU",165,0)
 I LRDPL<1 S LRDPL=DUZ(2)
"RTN","LRRPLU",166,0)
 S LRPLAB=$$SELPL^LRVERA(LRDPL,LRFLAG)
"RTN","LRRPLU",167,0)
 I LRPLAB<1 Q
"RTN","LRRPLU",168,0)
 ;
"RTN","LRRPLU",169,0)
 W !
"RTN","LRRPLU",170,0)
 K DIR
"RTN","LRRPLU",171,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRRPLU",172,0)
 S DIR("A")="Sure you want to "_$S($D(^LR(LRDFN,"PL","B",LRREF)):"update",1:"add")_" this record"
"RTN","LRRPLU",173,0)
 D ^DIR
"RTN","LRRPLU",174,0)
 I Y'=1 Q
"RTN","LRRPLU",175,0)
 ;
"RTN","LRRPLU",176,0)
 ; Update existing entry
"RTN","LRRPLU",177,0)
 I $D(^LR(LRDFN,"PL","B",LRREF)) D  Q
"RTN","LRRPLU",178,0)
 . D UEE(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLU",179,0)
 . W !,"... assignment updated.",!
"RTN","LRRPLU",180,0)
 ;
"RTN","LRRPLU",181,0)
 ; Create new entry
"RTN","LRRPLU",182,0)
 D CNE(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLU",183,0)
 W !,"... assignment created.",!
"RTN","LRRPLU",184,0)
 ;
"RTN","LRRPLU",185,0)
 Q
"RTN","LRRPLU",186,0)
 ;
"RTN","LRRPLU",187,0)
 ;
"RTN","LRRPLU",188,0)
DEL ; Delete existing performing laboratory designations.
"RTN","LRRPLU",189,0)
 ;
"RTN","LRRPLU",190,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRCNT,LRFDA,LRIEN,X,Y
"RTN","LRRPLU",191,0)
 S LRCNT=$O(LRLST(""),-1)
"RTN","LRRPLU",192,0)
 ;
"RTN","LRRPLU",193,0)
 W !
"RTN","LRRPLU",194,0)
 I LRCNT=1 S Y=1
"RTN","LRRPLU",195,0)
 I LRCNT>1 D  Q:$D(DIRUT)
"RTN","LRRPLU",196,0)
 . S DIR("A")="Select the section to delete (1-"_LRCNT_"): "
"RTN","LRRPLU",197,0)
 . F I=1:1:LRCNT S DIR("A",I)=$J(I,11)_"   -   "_$P(LRLST(I),"^",3)
"RTN","LRRPLU",198,0)
 . S DIR(0)="NOA^1:"_LRCNT_":0"
"RTN","LRRPLU",199,0)
 . D ^DIR
"RTN","LRRPLU",200,0)
 ;
"RTN","LRRPLU",201,0)
 S LRIEN=$P(LRLST(Y),"^",2)
"RTN","LRRPLU",202,0)
 ;
"RTN","LRRPLU",203,0)
 ; Confirm that user wants to delete record.
"RTN","LRRPLU",204,0)
 K DIR
"RTN","LRRPLU",205,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRRPLU",206,0)
 S DIR("A")="Sure you want to delete this performing lab assignment"
"RTN","LRRPLU",207,0)
 D ^DIR
"RTN","LRRPLU",208,0)
 I Y'=1 W !,"... deletion cancelled.",! Q
"RTN","LRRPLU",209,0)
 ;
"RTN","LRRPLU",210,0)
 ; Delete existing entry
"RTN","LRRPLU",211,0)
 D DEE(LRIEN_","_LRDFN_",")
"RTN","LRRPLU",212,0)
 ;
"RTN","LRRPLU",213,0)
 I '$D(^LR(LRDFN,"PL",LRIEN)) W !,"... assignment deleted.",!
"RTN","LRRPLU",214,0)
 E  W "... assignment NOT deleted.",!
"RTN","LRRPLU",215,0)
 ;
"RTN","LRRPLU",216,0)
 Q
"RTN","LRRPLU",217,0)
 ;
"RTN","LRRPLU",218,0)
 ;
"RTN","LRRPLU",219,0)
UEE(LRDFN,LRREF,LRPLAB) ; Update existing entry
"RTN","LRRPLU",220,0)
 ; Call with LRDFN = File #63 IEN
"RTN","LRRPLU",221,0)
 ;           LRREF = File #63 subscript reference
"RTN","LRRPLU",222,0)
 ;           LRPLAB = Performing lab as IEN in file #4
"RTN","LRRPLU",223,0)
 ;
"RTN","LRRPLU",224,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRRPLU",225,0)
 S LRIEN=$O(^LR(LRDFN,"PL","B",LRREF,0))
"RTN","LRRPLU",226,0)
 S LRFDA(1,63.00012,LRIEN_","_LRDFN_",",.02)=LRPLAB
"RTN","LRRPLU",227,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRRPLU",228,0)
 Q
"RTN","LRRPLU",229,0)
 ;
"RTN","LRRPLU",230,0)
 ;
"RTN","LRRPLU",231,0)
CNE(LRDFN,LRREF,LRPLAB) ; Create new entry
"RTN","LRRPLU",232,0)
 ; Call with LRDFN = File #63 IEN
"RTN","LRRPLU",233,0)
 ;           LRREF = File #63 subscript reference
"RTN","LRRPLU",234,0)
 ;           LRPLAB = Performing lab as IEN in file #4
"RTN","LRRPLU",235,0)
 ;
"RTN","LRRPLU",236,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRRPLU",237,0)
 S LRFDA(1,63.00012,"+1,"_LRDFN_",",.01)=LRREF
"RTN","LRRPLU",238,0)
 S LRFDA(1,63.00012,"+1,"_LRDFN_",",.02)=LRPLAB
"RTN","LRRPLU",239,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LRDIE(1)")
"RTN","LRRPLU",240,0)
 Q
"RTN","LRRPLU",241,0)
 ;
"RTN","LRRPLU",242,0)
 ;
"RTN","LRRPLU",243,0)
DEE(LRIENS) ; Delete existing entry
"RTN","LRRPLU",244,0)
 ; Call with LRRIENS = File #63 performing lab reference IENS
"RTN","LRRPLU",245,0)
 ;
"RTN","LRRPLU",246,0)
 N LRDIE,LRFDA
"RTN","LRRPLU",247,0)
 S LRFDA(1,63.00012,LRIENS,.01)="@"
"RTN","LRRPLU",248,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRRPLU",249,0)
 Q
"RTN","LRRPLU",250,0)
 ;
"RTN","LRRPLU",251,0)
 ;
"RTN","LRRPLU",252,0)
MICHK ; Check MI for sections to link to a performing lab
"RTN","LRRPLU",253,0)
 ;
"RTN","LRRPLU",254,0)
 N I,LRI
"RTN","LRRPLU",255,0)
 ;
"RTN","LRRPLU",256,0)
 ; Bacteriology section
"RTN","LRRPLU",257,0)
 S LRI=1
"RTN","LRRPLU",258,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D
"RTN","LRRPLU",259,0)
 . D MICHK1
"RTN","LRRPLU",260,0)
 . N LRJ
"RTN","LRRPLU",261,0)
 . F LRJ=5,6 I $P(^LR(LRDFN,LRSS,LRIDT,LRI),"^",LRJ)'="" D
"RTN","LRRPLU",262,0)
 . . S LRREF=LRROOT_LRI_";"_LRJ,LRREC=LRREC+1 D MICHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI_";"_LRJ
"RTN","LRRPLU",263,0)
 . . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI_";"_LRJ))
"RTN","LRRPLU",264,0)
 ;
"RTN","LRRPLU",265,0)
 ; Gram stain/Organism/Susceptibility/Remark section
"RTN","LRRPLU",266,0)
 F LRI=2,3,4 I $O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) D
"RTN","LRRPLU",267,0)
 . D MICHK2
"RTN","LRRPLU",268,0)
 . I LRI=3 D BUGCHK
"RTN","LRRPLU",269,0)
 ;
"RTN","LRRPLU",270,0)
 ; Parasite section - check for parasite and stage info
"RTN","LRRPLU",271,0)
 S LRI=5
"RTN","LRRPLU",272,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D MICHK1
"RTN","LRRPLU",273,0)
 ;
"RTN","LRRPLU",274,0)
 F LRI=6,7 I $O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) D
"RTN","LRRPLU",275,0)
 . D MICHK2
"RTN","LRRPLU",276,0)
 . I LRI=6 D BUGCHK
"RTN","LRRPLU",277,0)
 ;
"RTN","LRRPLU",278,0)
 ; Mycology section
"RTN","LRRPLU",279,0)
 S LRI=8
"RTN","LRRPLU",280,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D MICHK1
"RTN","LRRPLU",281,0)
 ;
"RTN","LRRPLU",282,0)
 F LRI=9,10,15 I $O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) D
"RTN","LRRPLU",283,0)
 . D MICHK2
"RTN","LRRPLU",284,0)
 . I LRI=9 D BUGCHK
"RTN","LRRPLU",285,0)
 ;
"RTN","LRRPLU",286,0)
 ; Mycobacteria section - also check for AFB stain
"RTN","LRRPLU",287,0)
 S LRI=11
"RTN","LRRPLU",288,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D
"RTN","LRRPLU",289,0)
 . D MICHK1
"RTN","LRRPLU",290,0)
 . I $P(^LR(LRDFN,LRSS,LRIDT,LRI),"^",3)'="" D
"RTN","LRRPLU",291,0)
 . . S LRREF=LRROOT_LRI_";3",LRREC=LRREC+1 D MICHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI_";3"
"RTN","LRRPLU",292,0)
 . . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI_";3"))
"RTN","LRRPLU",293,0)
 ;
"RTN","LRRPLU",294,0)
 ; TB/Organism/Susceptibilityr/Remark section
"RTN","LRRPLU",295,0)
 F LRI=12,13,14 I $O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) D
"RTN","LRRPLU",296,0)
 . D MICHK2
"RTN","LRRPLU",297,0)
 . I LRI=12 D BUGCHK
"RTN","LRRPLU",298,0)
 ;
"RTN","LRRPLU",299,0)
 ; Virology section
"RTN","LRRPLU",300,0)
 S LRI=16
"RTN","LRRPLU",301,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D MICHK1
"RTN","LRRPLU",302,0)
 ;
"RTN","LRRPLU",303,0)
 F LRI=17,18 I $O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) D
"RTN","LRRPLU",304,0)
 . D MICHK2
"RTN","LRRPLU",305,0)
 . I LRI=17 D BUGCHK
"RTN","LRRPLU",306,0)
 ;
"RTN","LRRPLU",307,0)
 ; Various preliminary comment sections
"RTN","LRRPLU",308,0)
 F LRI=19:1:30 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) S LRREF=LRROOT_LRI,LRREC=LRREC+1 D MICHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",309,0)
 ;
"RTN","LRRPLU",310,0)
 ; Sterility Results
"RTN","LRRPLU",311,0)
 S LRI=31
"RTN","LRRPLU",312,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D MICHK1
"RTN","LRRPLU",313,0)
 ;
"RTN","LRRPLU",314,0)
 ; Comment on Specimen
"RTN","LRRPLU",315,0)
 S LRI=99
"RTN","LRRPLU",316,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D MICHK1
"RTN","LRRPLU",317,0)
 ;
"RTN","LRRPLU",318,0)
 Q
"RTN","LRRPLU",319,0)
 ;
"RTN","LRRPLU",320,0)
 ;
"RTN","LRRPLU",321,0)
MICHK1 ; Common MI checking logic
"RTN","LRRPLU",322,0)
 ;
"RTN","LRRPLU",323,0)
 S LRREF=LRROOT_LRI,LRREC=LRREC+1 D MICHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",324,0)
 S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI))
"RTN","LRRPLU",325,0)
 Q
"RTN","LRRPLU",326,0)
 ;
"RTN","LRRPLU",327,0)
 ;
"RTN","LRRPLU",328,0)
MICHK2 ; Common MI checking logic
"RTN","LRRPLU",329,0)
 ;
"RTN","LRRPLU",330,0)
 S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D MICHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",331,0)
 S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI,0))
"RTN","LRRPLU",332,0)
 Q
"RTN","LRRPLU",333,0)
 ;
"RTN","LRRPLU",334,0)
 ;
"RTN","LRRPLU",335,0)
APCHK ; Check AP for sections to link to a performing lab
"RTN","LRRPLU",336,0)
 ;
"RTN","LRRPLU",337,0)
 N LRI
"RTN","LRRPLU",338,0)
 ;
"RTN","LRRPLU",339,0)
 F LRI=.2,.3,.4,.5,1,1.1,1.3,1.4 D
"RTN","LRRPLU",340,0)
 . I LRI=1.3,LRSS'="SP" Q
"RTN","LRRPLU",341,0)
 . I '$O(^LR(LRDFN,LRSS,LRIDT,LRI,0)) Q
"RTN","LRRPLU",342,0)
 . S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D APCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",343,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI))
"RTN","LRRPLU",344,0)
 ;
"RTN","LRRPLU",345,0)
 ; Supplementary Report section (1.2)
"RTN","LRRPLU",346,0)
 S LRI=1.2
"RTN","LRRPLU",347,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D
"RTN","LRRPLU",348,0)
 . S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D APCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",349,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI))
"RTN","LRRPLU",350,0)
 ;
"RTN","LRRPLU",351,0)
 ; Special studies (2)
"RTN","LRRPLU",352,0)
 S LRI=2
"RTN","LRRPLU",353,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D
"RTN","LRRPLU",354,0)
 . N LRJ
"RTN","LRRPLU",355,0)
 . S LRJ=0
"RTN","LRRPLU",356,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRIDT,LRI,LRJ)) Q:'LRJ  I $O(^LR(LRDFN,LRSS,LRIDT,LRI,LRJ,5,0)) D  Q
"RTN","LRRPLU",357,0)
 . . S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D APCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",358,0)
 . . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI))
"RTN","LRRPLU",359,0)
 ;
"RTN","LRRPLU",360,0)
 ; Delayed Report Comment (97) / Comment on Specimen (99)
"RTN","LRRPLU",361,0)
 F LRI=97,99 I $D(^LR(LRDFN,LRSS,LRIDT,LRI)) D
"RTN","LRRPLU",362,0)
 . S LRREF=LRROOT_LRI,LRREC=LRREC+1 D APCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",363,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI))
"RTN","LRRPLU",364,0)
 ;
"RTN","LRRPLU",365,0)
 Q
"RTN","LRRPLU",366,0)
 ;
"RTN","LRRPLU",367,0)
 ;
"RTN","LRRPLU",368,0)
AUCHK ; Check AU for sections to link to a performing lab
"RTN","LRRPLU",369,0)
 ;
"RTN","LRRPLU",370,0)
 N LRI
"RTN","LRRPLU",371,0)
 ;
"RTN","LRRPLU",372,0)
 ; Clinical Diagnoses (81) / Pathological Diagnoses (82)
"RTN","LRRPLU",373,0)
 F LRI=81,82 D
"RTN","LRRPLU",374,0)
 . I '$O(^LR(LRDFN,LRI,0)) Q
"RTN","LRRPLU",375,0)
 . S LRREF=LRROOT_LRI,LRREC=LRREC+1 D AUCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",376,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRI))
"RTN","LRRPLU",377,0)
 ;
"RTN","LRRPLU",378,0)
 ; Supplementary Report section (84)
"RTN","LRRPLU",379,0)
 S LRI=84
"RTN","LRRPLU",380,0)
 I $D(^LR(LRDFN,LRI)) D
"RTN","LRRPLU",381,0)
 . S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D AUCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",382,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,LRI))
"RTN","LRRPLU",383,0)
 .
"RTN","LRRPLU",384,0)
 ; Special studies (AY)
"RTN","LRRPLU",385,0)
 S LRI="AY"
"RTN","LRRPLU",386,0)
 I $D(^LR(LRDFN,LRI)) D
"RTN","LRRPLU",387,0)
 . N LRJ
"RTN","LRRPLU",388,0)
 . S LRJ=0
"RTN","LRRPLU",389,0)
 . F  S LRJ=$O(^LR(LRDFN,LRI,LRJ)) Q:'LRJ  I $O(^LR(LRDFN,LRI,LRJ,5,0)) D  Q
"RTN","LRRPLU",390,0)
 . . S LRREF=LRROOT_LRI_",0",LRREC=LRREC+1 D AUCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",391,0)
 . . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,"AY"))
"RTN","LRRPLU",392,0)
 ;
"RTN","LRRPLU",393,0)
 ; Autospy comments (AZC)
"RTN","LRRPLU",394,0)
 S LRI="AZC"
"RTN","LRRPLU",395,0)
 I $D(^LR(LRDFN,LRI)) D
"RTN","LRRPLU",396,0)
 . S LRREF=LRROOT_LRI,LRREC=LRREC+1 D AUCHK^LRRPL S $P(LRREC(LRREC),"^",2)=LRI
"RTN","LRRPLU",397,0)
 . S LRREC(LRREC,0)=$G(LRSEC(LRDFN,"AZC"))
"RTN","LRRPLU",398,0)
 ;
"RTN","LRRPLU",399,0)
 Q
"RTN","LRRPLU",400,0)
 ;
"RTN","LRRPLU",401,0)
 ;
"RTN","LRRPLU",402,0)
BUGCHK ; Check for organism/susceptibility
"RTN","LRRPLU",403,0)
 ; Only check for susceptibilities on bacteria (3) or TB (12).
"RTN","LRRPLU",404,0)
 ;
"RTN","LRRPLU",405,0)
 N LRJ,LRK
"RTN","LRRPLU",406,0)
 S LRJ=0
"RTN","LRRPLU",407,0)
 F  S LRJ=$O(^LR(LRDFN,LRSS,LRIDT,LRI,LRJ)) Q:'LRJ  D
"RTN","LRRPLU",408,0)
 . S LRREC(LRREC,LRJ)=$P(^LAB(61.2,+^(LRJ,0),0),"^")
"RTN","LRRPLU",409,0)
 . S LRREC(LRREC,LRJ,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI,LRJ))
"RTN","LRRPLU",410,0)
 . I LRI'=3,LRI'=12 Q
"RTN","LRRPLU",411,0)
 . S LRK=2
"RTN","LRRPLU",412,0)
 . F  S LRK=$O(^LR(LRDFN,LRSS,LRIDT,LRI,LRJ,LRK)) Q:'LRK!(LRK'<3)  D
"RTN","LRRPLU",413,0)
 . . S LRREC(LRREC,LRJ,LRK)=$$GETDRUG^LRRPL(LRI,LRK)
"RTN","LRRPLU",414,0)
 . . S LRREC(LRREC,LRJ,LRK,0)=$G(LRSEC(LRDFN,LRSS,LRIDT,LRI,LRJ,LRK))
"RTN","LRRPLU",415,0)
 Q
"RTN","LRRPLU",416,0)
 ;
"RTN","LRRPLU",417,0)
 ;
"RTN","LRRPLU",418,0)
SELMULTI(LRY) ; Handle multiple items type selection
"RTN","LRRPLU",419,0)
 ; Flag whole section or indivudual items with performing lab.
"RTN","LRRPLU",420,0)
 ; Present list of items and allow all or selected items to be designated
"RTN","LRRPLU",421,0)
 ;
"RTN","LRRPLU",422,0)
 ; Call with LRY = array of items to select/designate
"RTN","LRRPLU",423,0)
 ;   Returns LRX = item selected
"RTN","LRRPLU",424,0)
 ;
"RTN","LRRPLU",425,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,LRCNT,LRDEC,LRX
"RTN","LRRPLU",426,0)
 ;
"RTN","LRRPLU",427,0)
 S (I,LRDEC)=0,LRCNT=$O(LRY(""),-1)
"RTN","LRRPLU",428,0)
 F  S I=$O(LRY(I)) Q:'I  S DIR("A",I+1)=$J($$LJ^XLFSTR(I,4),13)_" -   "_$P(LRY(I),"^") S:I#1=.1 LRDEC=1
"RTN","LRRPLU",429,0)
 S DIR("A")="Select the item to designate (1-"_LRCNT_"): "
"RTN","LRRPLU",430,0)
 S DIR(0)="NAO^1:"_LRCNT_":"_LRDEC,DIR("PRE")="I X'="""",'$D(DTOUT),'$D(LRY(X)) K X"
"RTN","LRRPLU",431,0)
 S DIR("??")="^D EN^DDIOL(.LRPL)"
"RTN","LRRPLU",432,0)
 D ^DIR
"RTN","LRRPLU",433,0)
 I $D(DIRUT) S LRX=-1
"RTN","LRRPLU",434,0)
 E  S LRX=Y_"^"_LRY(Y)
"RTN","LRRPLU",435,0)
 ;
"RTN","LRRPLU",436,0)
 Q LRX
"RTN","LRRPLU",437,0)
 ;
"RTN","LRRPLU",438,0)
 ;
"RTN","LRRPLU",439,0)
GETMULTI ; Build array of existing items in multiple
"RTN","LRRPLU",440,0)
 N LRI
"RTN","LRRPLU",441,0)
 K LRY
"RTN","LRRPLU",442,0)
 S LRI=0
"RTN","LRRPLU",443,0)
 ;
"RTN","LRRPLU",444,0)
 I LRSS="MI" D MIMULTI Q
"RTN","LRRPLU",445,0)
 I LRSS?1(1"SP",1"CY",1"EM",1"AU") D APMULTI Q
"RTN","LRRPLU",446,0)
 ;
"RTN","LRRPLU",447,0)
 Q
"RTN","LRRPLU",448,0)
 ;
"RTN","LRRPLU",449,0)
 ;
"RTN","LRRPLU",450,0)
MIMULTI ; Build array for MI subscript results.
"RTN","LRRPLU",451,0)
 ;
"RTN","LRRPLU",452,0)
 N LRX,X
"RTN","LRRPLU",453,0)
 S LRX="^1^^1^^^1^^^1^^^^1^1^^^^1^"
"RTN","LRRPLU",454,0)
 I $P(LRX,"^",LRSECT) D  Q
"RTN","LRRPLU",455,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  D
"RTN","LRRPLU",456,0)
 . . S X=^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI,0)
"RTN","LRRPLU",457,0)
 . . I LRSECT=14 S X=$P(X,"^")
"RTN","LRRPLU",458,0)
 . . S LRY(LRI)=X_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",459,0)
 . S LRI=$O(LRY(""),-1)+1
"RTN","LRRPLU",460,0)
 . S LRY(LRI)="ALL "_$S(LRSECT=14:"ANTIBIOTIC(for SERUM LEVEL)",1:"comments")_"^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",461,0)
 ;
"RTN","LRRPLU",462,0)
 S LRX="^^1^^^1^^^1^^^1^^^^^1^"
"RTN","LRRPLU",463,0)
 I $P(LRX,"^",LRSECT) D  Q
"RTN","LRRPLU",464,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  D
"RTN","LRRPLU",465,0)
 . . S LRY(LRI)=$P(^LAB(61.2,+^(LRI,0),0),"^")_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",466,0)
 . . I LRSECT=3!(LRSECT=12) D
"RTN","LRRPLU",467,0)
 . . . N LRFLAG
"RTN","LRRPLU",468,0)
 . . . S X=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI,2)),LRFLAG=0
"RTN","LRRPLU",469,0)
 . . . I X\1=2 S LRFLAG=1
"RTN","LRRPLU",470,0)
 . . . I LRSECT=3,$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI,3,0)) S LRFLAG=1
"RTN","LRRPLU",471,0)
 . . . I LRFLAG<1 Q
"RTN","LRRPLU",472,0)
 . . . S LRY(LRI+.1)=$P(LRY(LRI),"^")_" Specific Susceptibilities"_"^"_LRROOT_LRSECT_","_LRI_","
"RTN","LRRPLU",473,0)
 . . . S $P(LRY(LRI),"^")=$P(LRY(LRI),"^")_" including All Susceptibilities"
"RTN","LRRPLU",474,0)
 . S LRI=$O(LRY(""),-1)+1\1,LRY(LRI)="ALL items^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",475,0)
 ;
"RTN","LRRPLU",476,0)
 Q
"RTN","LRRPLU",477,0)
 ;
"RTN","LRRPLU",478,0)
 ;
"RTN","LRRPLU",479,0)
MIAB(LRY,LRORG) ; Build array for MI susceptbility results.
"RTN","LRRPLU",480,0)
 ; Call with LRY = array to return selections
"RTN","LRRPLU",481,0)
 ;         LRORG = organism subscript
"RTN","LRRPLU",482,0)
 ;
"RTN","LRRPLU",483,0)
 N LRDN,LRI,LRJ
"RTN","LRRPLU",484,0)
 ;
"RTN","LRRPLU",485,0)
 S LRI=0,LRJ=2
"RTN","LRRPLU",486,0)
 F  S LRJ=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORG,LRJ)) Q:'LRJ!(LRJ'<3)  D
"RTN","LRRPLU",487,0)
 . S LRDN=$$GETDRUG^LRRPL(LRSECT,LRJ)
"RTN","LRRPLU",488,0)
 . S LRI=LRI+1,LRY(LRI)=LRDN_"^"_LRROOT_LRSECT_","_LRORG_","_LRJ
"RTN","LRRPLU",489,0)
 ;
"RTN","LRRPLU",490,0)
 ; Collect free text antibiotics (#200)
"RTN","LRRPLU",491,0)
 I LRSECT=3,$D(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORG,3,0)) D
"RTN","LRRPLU",492,0)
 . S LRJ=0
"RTN","LRRPLU",493,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORG,3,LRJ)) Q:'LRJ  D
"RTN","LRRPLU",494,0)
 . . S LRDN=$P(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORG,3,LRJ,0),"^")
"RTN","LRRPLU",495,0)
 . . S LRI=LRI+1,LRY(LRI)=LRDN_"^"_LRROOT_LRSECT_","_LRORG_",3,"_LRJ_",0"
"RTN","LRRPLU",496,0)
 Q
"RTN","LRRPLU",497,0)
 ;
"RTN","LRRPLU",498,0)
 ;
"RTN","LRRPLU",499,0)
APMULTI ; Build array for AP subscript results.
"RTN","LRRPLU",500,0)
 ;
"RTN","LRRPLU",501,0)
 ; Autopsy comments (AZC)
"RTN","LRRPLU",502,0)
 I LRSS="AU",LRSECT="AZC" D  Q
"RTN","LRRPLU",503,0)
 . F  S LRI=$O(^LR(LRDFN,LRSECT,LRI)) Q:'LRI  S LRY(LRI)=^(LRI,0)_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",504,0)
 . S LRI=$O(LRY(""),-1)+1,LRY(LRI)="ALL comments^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",505,0)
 ;
"RTN","LRRPLU",506,0)
 ; Autopsy Supplementary reports (84)
"RTN","LRRPLU",507,0)
 I LRSS="AU",LRSECT=84 D  Q
"RTN","LRRPLU",508,0)
 . F  S LRI=$O(^LR(LRDFN,LRSECT,LRI)) Q:'LRI  S LRX=$$FMTE^XLFDT(+^(LRI,0),"1MZ"),LRY(LRI)=LRX_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",509,0)
 . S LRI=$O(LRY(""),-1)+1,LRY(LRI)="ALL Supplementary Reports^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",510,0)
 ;
"RTN","LRRPLU",511,0)
 ; Autopsy Special Studies (AY)
"RTN","LRRPLU",512,0)
 I LRSS="AU",LRSECT="AY" D  Q
"RTN","LRRPLU",513,0)
 . F  S LRI=$O(^LR(LRDFN,LRSECT,LRI)) Q:'LRI  D
"RTN","LRRPLU",514,0)
 . . S LRX=$P(^LAB(61,+^(LRI,0),0),"^"),LRY(LRI)=LRX_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",515,0)
 . . S LRY(LRI+.1)=$P(LRY(LRI),"^")_" Specific Special Studies"_"^"_LRROOT_LRSECT_","_LRI_","
"RTN","LRRPLU",516,0)
 . . S $P(LRY(LRI),"^")=$P(LRY(LRI),"^")_" including All Special Studies"
"RTN","LRRPLU",517,0)
 . S LRI=$O(LRY(""),-1)+1\1,LRY(LRI)="ALL Special Studies Reports^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",518,0)
 ;
"RTN","LRRPLU",519,0)
 ; Comment fields #97 and #99
"RTN","LRRPLU",520,0)
 I LRSECT=97!(LRSECT=99) D  Q
"RTN","LRRPLU",521,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  S LRY(LRI)=^(LRI,0)_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",522,0)
 . S LRI=$O(LRY(""),-1)+1,LRY(LRI)="ALL comments^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",523,0)
 ;
"RTN","LRRPLU",524,0)
 ; Supplementary Reports
"RTN","LRRPLU",525,0)
 I LRSECT=1.2 D  Q
"RTN","LRRPLU",526,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  S LRX=$$FMTE^XLFDT(+^(LRI,0),"1MZ"),LRY(LRI)=LRX_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",527,0)
 . S LRI=$O(LRY(""),-1)+1,LRY(LRI)="ALL Supplementary Reports^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",528,0)
 ;
"RTN","LRRPLU",529,0)
 ; Special Studies
"RTN","LRRPLU",530,0)
 I LRSECT=2 D  Q
"RTN","LRRPLU",531,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRI)) Q:'LRI  D
"RTN","LRRPLU",532,0)
 . . S LRX=$P(^LAB(61,+^(LRI,0),0),"^"),LRY(LRI)=LRX_"^"_LRROOT_LRSECT_","_LRI_",0"
"RTN","LRRPLU",533,0)
 . . S LRY(LRI+.1)=$P(LRY(LRI),"^")_" Specific Special Studies"_"^"_LRROOT_LRSECT_","_LRI_","
"RTN","LRRPLU",534,0)
 . . S $P(LRY(LRI),"^")=$P(LRY(LRI),"^")_" including All Special Studies"
"RTN","LRRPLU",535,0)
 . S LRI=$O(LRY(""),-1)+1\1,LRY(LRI)="ALL Special Studies Reports^"_LRROOT_LRSECT_",0"
"RTN","LRRPLU",536,0)
 ;
"RTN","LRRPLU",537,0)
 Q
"RTN","LRRPLU",538,0)
 ;
"RTN","LRRPLU",539,0)
 ;
"RTN","LRRPLU",540,0)
APSS(LRY,LRORGT) ; Build array for AP special studies.
"RTN","LRRPLU",541,0)
 ; Call with LRY = array to return selections
"RTN","LRRPLU",542,0)
 ;        LRORGT = organ/tissue ien
"RTN","LRRPLU",543,0)
 ;
"RTN","LRRPLU",544,0)
 N LRI,LRJ,LRS,LRSST,LRSUB
"RTN","LRRPLU",545,0)
 ;
"RTN","LRRPLU",546,0)
 S (LRI,LRJ)=0
"RTN","LRRPLU",547,0)
 ; Autopsy Special Studies (AY)
"RTN","LRRPLU",548,0)
 I LRSS="AU",LRSECT="AY" D  Q
"RTN","LRRPLU",549,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSECT,LRORGT,5,LRJ)) Q:'LRJ  D
"RTN","LRRPLU",550,0)
 . . S LRS=^LR(LRDFN,LRSECT,LRORGT,5,LRJ,0),LRSST=$$EXTERNAL^DILFD(63.26,.01,"",$P(LRS,"^"),"")
"RTN","LRRPLU",551,0)
 . . S LRI=LRI+1,LRY(LRI)=LRSST_"^"_LRROOT_LRSECT_","_LRORGT_",5,"_LRJ
"RTN","LRRPLU",552,0)
 ;
"RTN","LRRPLU",553,0)
 S LRSUB=$S(LRSS="SP":63.819,LRSS="CY":63.919,1:63.219)
"RTN","LRRPLU",554,0)
 F  S LRJ=$O(^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORGT,5,LRJ)) Q:'LRJ  D
"RTN","LRRPLU",555,0)
 . S LRS=^LR(LRDFN,LRSS,LRIDT,LRSECT,LRORGT,5,LRJ,0),LRSST=$$EXTERNAL^DILFD(LRSUB,.01,"",$P(LRS,"^"),"")
"RTN","LRRPLU",556,0)
 . S LRI=LRI+1,LRY(LRI)=LRSST_"^"_LRROOT_LRSECT_","_LRORGT_",5,"_LRJ
"RTN","LRRPLU",557,0)
 Q
"RTN","LRRPLUA")
0^172^B24542488
"RTN","LRRPLUA",1,0)
LRRPLUA ;DALOI/JMC - Lab Report Performing Lab Utility ;10/28/11  16:33
"RTN","LRRPLUA",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRRPLUA",3,0)
 ;
"RTN","LRRPLUA",4,0)
 Q
"RTN","LRRPLUA",5,0)
 ;
"RTN","LRRPLUA",6,0)
 ;
"RTN","LRRPLUA",7,0)
SETPL(LRREF,LR4) ; Set performing lab reference into workbench
"RTN","LRRPLUA",8,0)
 ; Call with LRREF = performing lab reference
"RTN","LRRPLUA",9,0)
 ;             LR4 = performing lab IEN in file #4
"RTN","LRRPLUA",10,0)
 ;
"RTN","LRRPLUA",11,0)
 S ^TMP("LRPL",$J,1,LRREF)=LR4
"RTN","LRRPLUA",12,0)
 S ^TMP("LRPL",$J,2,LR4,LRREF)=""
"RTN","LRRPLUA",13,0)
 ;
"RTN","LRRPLUA",14,0)
 Q
"RTN","LRRPLUA",15,0)
 ;
"RTN","LRRPLUA",16,0)
 ;
"RTN","LRRPLUA",17,0)
ROLLUPPL(LRDFN,LRSS,LRIDT) ; Roll up performing labs and store in file #63
"RTN","LRRPLUA",18,0)
 ; Call with LRDFN = File #63 internal entry number
"RTN","LRRPLUA",19,0)
 ;            LRSS = File #63 subscript
"RTN","LRRPLUA",20,0)
 ;           LRIDT = inverse date/time of entry in file #63
"RTN","LRRPLUA",21,0)
 ;
"RTN","LRRPLUA",22,0)
 N LRPLAB,LRREF,LRX
"RTN","LRRPLUA",23,0)
 ;
"RTN","LRRPLUA",24,0)
 ; Merge/consolidate workbench entries for same basic reference.
"RTN","LRRPLUA",25,0)
 ; Check and merge TMP entries to create list and elimiate unnecessary multiples.
"RTN","LRRPLUA",26,0)
 D MERGE
"RTN","LRRPLUA",27,0)
 ;
"RTN","LRRPLUA",28,0)
 ; Update existing entry/create new entry
"RTN","LRRPLUA",29,0)
 S LRREF=""
"RTN","LRRPLUA",30,0)
 F  S LRREF=$O(^TMP("LRPL",$J,1,LRREF)) Q:LRREF=""  D
"RTN","LRRPLUA",31,0)
 . S LRPLAB=$P(^TMP("LRPL",$J,1,LRREF),"^")
"RTN","LRRPLUA",32,0)
 . S LRX=$O(^LR(LRDFN,"PL","B",LRREF,0))
"RTN","LRRPLUA",33,0)
 . I 'LRX D CNE^LRRPLU(LRDFN,LRREF,LRPLAB) Q
"RTN","LRRPLUA",34,0)
 . I $P(^LR(LRDFN,"PL",LRX,0),"^",2)'=LRPLAB D UEE^LRRPLU(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLUA",35,0)
 ;
"RTN","LRRPLUA",36,0)
 K ^TMP("LRPL",$J)
"RTN","LRRPLUA",37,0)
 Q
"RTN","LRRPLUA",38,0)
 ;
"RTN","LRRPLUA",39,0)
 ;
"RTN","LRRPLUA",40,0)
MERGE ; Check and merge entries where appropriate.
"RTN","LRRPLUA",41,0)
 ;
"RTN","LRRPLUA",42,0)
 N I,LRJ,LRK,LRONELAB,LRREF,LRX,LRY,LRZ
"RTN","LRRPLUA",43,0)
 ;
"RTN","LRRPLUA",44,0)
 S LRONELAB("ON FILE")="" ; Initialize to no lab (null) on file.
"RTN","LRRPLUA",45,0)
 S LRONELAB("INCOMING")=0 ; Intialize to no lab on incoming report.
"RTN","LRRPLUA",46,0)
 ;
"RTN","LRRPLUA",47,0)
 ; If only one lab listed in incoming report then set flag to that lab.
"RTN","LRRPLUA",48,0)
 S LRX=$O(^TMP("LRPL",$J,2,0))
"RTN","LRRPLUA",49,0)
 I '$O(^TMP("LRPL",$J,2,LRX)) S LRONELAB("INCOMING")=LRX
"RTN","LRRPLUA",50,0)
 ;
"RTN","LRRPLUA",51,0)
 ; Find out if existing report has performing lab and if more then one.
"RTN","LRRPLUA",52,0)
 ;  If more then one then set flag to 0 (zero).
"RTN","LRRPLUA",53,0)
 S LRX=0,LRY=""
"RTN","LRRPLUA",54,0)
 F  S LRX=$O(^LR(LRDFN,"PL","AC",LRSS,LRIDT,LRX)) Q:'LRX  D  Q:LRY=0
"RTN","LRRPLUA",55,0)
 . I LRY,LRY'=$P(^LR(LRDFN,"PL",LRX,0),"^",2) S LRY=0 Q
"RTN","LRRPLUA",56,0)
 . I LRY="" S LRY=$P(^LR(LRDFN,"PL",LRX,0),"^",2)
"RTN","LRRPLUA",57,0)
 ;
"RTN","LRRPLUA",58,0)
 S LRONELAB("ON FILE")=LRY
"RTN","LRRPLUA",59,0)
 ;
"RTN","LRRPLUA",60,0)
 ; If all "on file" sections and all "incoming" sections have the same performing lab
"RTN","LRRPLUA",61,0)
 ;  then mark the entire report as being performed by that lab.
"RTN","LRRPLUA",62,0)
 I LRONELAB("ON FILE")=LRONELAB("INCOMING") D  Q
"RTN","LRRPLUA",63,0)
 . K ^TMP("LRPL",$J)
"RTN","LRRPLUA",64,0)
 . S LRREF=LRDFN_","_LRSS_","_LRIDT_",0"
"RTN","LRRPLUA",65,0)
 . S ^TMP("LRPL",$J,1,LRREF)=LRONELAB("INCOMING")
"RTN","LRRPLUA",66,0)
 ;
"RTN","LRRPLUA",67,0)
 ; If no "on file" lab and one "incoming" lab
"RTN","LRRPLUA",68,0)
 ;  then mark entire report as being performed by the "incoming" lab.
"RTN","LRRPLUA",69,0)
 I LRONELAB("ON FILE")="",LRONELAB("INCOMING") D  Q
"RTN","LRRPLUA",70,0)
 . K ^TMP("LRPL",$J)
"RTN","LRRPLUA",71,0)
 . S LRREF=LRDFN_","_LRSS_","_LRIDT_",0"
"RTN","LRRPLUA",72,0)
 . S ^TMP("LRPL",$J,1,LRREF)=LRONELAB("INCOMING")
"RTN","LRRPLUA",73,0)
 ;
"RTN","LRRPLUA",74,0)
 ; Walk up tree to find parent reference that may cover this reference at a higher level
"RTN","LRRPLUA",75,0)
 S LRREF=""
"RTN","LRRPLUA",76,0)
 F  S LRREF=$O(^TMP("LRPL",$J,1,LRREF)) Q:LRREF=""  D
"RTN","LRRPLUA",77,0)
 . S LRPLAB=$P(^TMP("LRPL",$J,1,LRREF),"^")
"RTN","LRRPLUA",78,0)
 . I LRSS="CH" D CHCHK Q
"RTN","LRRPLUA",79,0)
 . I LRSS?1(1"MI",1"SP",1"CY",1"EM",1"AU") D MIAPCHK
"RTN","LRRPLUA",80,0)
 ;
"RTN","LRRPLUA",81,0)
 Q
"RTN","LRRPLUA",82,0)
 ;
"RTN","LRRPLUA",83,0)
 ;
"RTN","LRRPLUA",84,0)
CHCHK ; Find "on file" performing lab for a "CH" test result.
"RTN","LRRPLUA",85,0)
 ;
"RTN","LRRPLUA",86,0)
 S LRZ=LRREF D CHKNODE
"RTN","LRRPLUA",87,0)
 Q
"RTN","LRRPLUA",88,0)
 ;
"RTN","LRRPLUA",89,0)
 ;
"RTN","LRRPLUA",90,0)
MIAPCHK ; Find performing lab for a MI or AP subscript reference
"RTN","LRRPLUA",91,0)
 ;
"RTN","LRRPLUA",92,0)
 S LRZ=LRREF D CHKNODE Q:LRY
"RTN","LRRPLUA",93,0)
 I $P(LRREF,";",2)'="" S LRZ=$P(LRREF,";") D CHKNODE Q:LRY
"RTN","LRRPLUA",94,0)
 ;
"RTN","LRRPLUA",95,0)
 S LRJ=$L(LRZ,",")
"RTN","LRRPLUA",96,0)
 F LRK=LRJ:-1:4 D  Q:LRY
"RTN","LRRPLUA",97,0)
 . S LRZ=$P(LRZ,",",1,LRK) D CHKNODE Q:LRY
"RTN","LRRPLUA",98,0)
 . I $P(LRZ,",",LRK)>0 S $P(LRZ,",",LRK)=0 D CHKNODE
"RTN","LRRPLUA",99,0)
 ;
"RTN","LRRPLUA",100,0)
 I LRSS="MI",LRY="",$P(LRX,",",4)=99 F I=1,5,8,11,16 S $P(LRZ,",",4)=I D CHKNODE Q:LRY
"RTN","LRRPLUA",101,0)
 ;
"RTN","LRRPLUA",102,0)
 Q
"RTN","LRRPLUA",103,0)
 ;
"RTN","LRRPLUA",104,0)
 ;
"RTN","LRRPLUA",105,0)
CHKNODE ; Check if "on file" node or parent exists and delete "incoming" if it matches "on file" lab
"RTN","LRRPLUA",106,0)
 ;
"RTN","LRRPLUA",107,0)
 N LRI
"RTN","LRRPLUA",108,0)
 S LRY="",LRI=$O(^LR(LRDFN,"PL","B",LRZ,0))
"RTN","LRRPLUA",109,0)
 I LRI S LRY=$P(^LR(LRDFN,"PL",LRI,0),"^",2)
"RTN","LRRPLUA",110,0)
 I LRY,LRY=LRPLAB K ^TMP("LRPL",$J,1,LRREF) Q
"RTN","LRRPLUA",111,0)
 ;
"RTN","LRRPLUA",112,0)
 ; Check if "incoming" has a higher parent for the same lab.
"RTN","LRRPLUA",113,0)
 I LRREF'=LRZ D
"RTN","LRRPLUA",114,0)
 . S LRY=+$G(^TMP("LRPL",$J,1,LRZ))
"RTN","LRRPLUA",115,0)
 . I LRY,LRY=LRPLAB K ^TMP("LRPL",$J,1,LRREF)
"RTN","LRRPLUA",116,0)
 Q
"RTN","LRRPLUA",117,0)
 ;
"RTN","LRRPLUA",118,0)
 ;
"RTN","LRRPLUA",119,0)
TEST ; Entry point to test/debug
"RTN","LRRPLUA",120,0)
 ;
"RTN","LRRPLUA",121,0)
 N LRAA,LRAD,LRAN,LRACC,LRDFN,LRIDT,LRSS
"RTN","LRRPLUA",122,0)
 S LRACC=1
"RTN","LRRPLUA",123,0)
 F  D  Q:LRAA<1
"RTN","LRRPLUA",124,0)
 . W !
"RTN","LRRPLUA",125,0)
 . D EN^LRWU4
"RTN","LRRPLUA",126,0)
 . I LRAA<1 Q
"RTN","LRRPLUA",127,0)
 . S LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^"),LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LRRPLUA",128,0)
 . I LRSS'="AU" S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRRPLUA",129,0)
 . E  S LRIDT=""
"RTN","LRRPLUA",130,0)
 . I LRSS="BB" W !,"Blood Bank not supported" Q
"RTN","LRRPLUA",131,0)
 . D EDIT^LRRPLU(LRDFN,LRSS,LRIDT)
"RTN","LRRPLUA",132,0)
 . W !!
"RTN","LRRPLUA",133,0)
 ;
"RTN","LRRPLUA",134,0)
 Q
"RTN","LRRPLUA",135,0)
 ;
"RTN","LRRPLUA",136,0)
 ;
"RTN","LRRPLUA",137,0)
TEST2 ; Entry point test printing performing lab for an accession
"RTN","LRRPLUA",138,0)
 ;
"RTN","LRRPLUA",139,0)
 N LRAA,LRAD,LRAN,LRACC,LRDFN,LRIDT,LRPL,LRSS
"RTN","LRRPLUA",140,0)
 S LRACC=1
"RTN","LRRPLUA",141,0)
 F  D  Q:LRAA<1
"RTN","LRRPLUA",142,0)
 . W !
"RTN","LRRPLUA",143,0)
 . D EN^LRWU4
"RTN","LRRPLUA",144,0)
 . I LRAA<1 Q
"RTN","LRRPLUA",145,0)
 . S LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^"),LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LRRPLUA",146,0)
 . I LRSS'="AU" S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRRPLUA",147,0)
 . E  S LRIDT=0
"RTN","LRRPLUA",148,0)
 . I LRSS="BB" W !,"Blood Bank not supported" Q
"RTN","LRRPLUA",149,0)
 . K LRPL
"RTN","LRRPLUA",150,0)
 . D RETLST^LRRPL(.LRPL,LRDFN,LRSS,LRIDT,0)
"RTN","LRRPLUA",151,0)
 . I '$O(LRPL(0)) K LRPL S LRPL(1)="Performing Lab Sites: None Listed"
"RTN","LRRPLUA",152,0)
 . E  S LRPL(.5)="Performing Lab Sites:",LRPL(.6)=" "
"RTN","LRRPLUA",153,0)
 . W !! D EN^DDIOL(.LRPL)
"RTN","LRRPLUA",154,0)
 Q
"RTN","LRRPLUA",155,0)
NOASK ; Set reference to performing lab in file #63 If ASK PERFORMING LAB =NO
"RTN","LRRPLUA",156,0)
 ; Update if already set otherwise create a new record.
"RTN","LRRPLUA",157,0)
 ;
"RTN","LRRPLUA",158,0)
 N LRDPL,LRFLAG,LRREF,LRPLAB,LRSECT
"RTN","LRRPLUA",159,0)
 S LRFLAG=0,LRSECT=0
"RTN","LRRPLUA",160,0)
 I LRSS?1(1"MI",1"SP",1"CY",1"EM") S LRFLAG=1
"RTN","LRRPLUA",161,0)
 S LRDPL=$$GET^XPAR("USR","LR VER DEFAULT PERFORMING LAB",1,"Q")
"RTN","LRRPLUA",162,0)
 I LRDPL<1 S LRDPL=DUZ(2)
"RTN","LRRPLUA",163,0)
 S LRPLAB=LRDPL
"RTN","LRRPLUA",164,0)
 S LRREF=LRDFN_","_LRSS_","_LRIDT_","_LRSECT
"RTN","LRRPLUA",165,0)
 ;
"RTN","LRRPLUA",166,0)
 W !
"RTN","LRRPLUA",167,0)
 ; Update existing entry
"RTN","LRRPLUA",168,0)
 I $D(^LR(LRDFN,"PL","B",LRREF)) D  Q
"RTN","LRRPLUA",169,0)
 . D UEE^LRRPLU(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLUA",170,0)
 ;
"RTN","LRRPLUA",171,0)
 ; Create new entry
"RTN","LRRPLUA",172,0)
 D CNE^LRRPLU(LRDFN,LRREF,LRPLAB)
"RTN","LRRPLUA",173,0)
 Q
"RTN","LRRSP")
0^111^B5673218
"RTN","LRRSP",1,0)
LRRSP ;DALOI/RWF/BA - INTERIM REPORT FOR SELECTED TESTS AS ORDERED ;11/18/11  16:42
"RTN","LRRSP",2,0)
 ;;5.2;LAB SERVICE;**121,283,350**;Sep 27, 1994;Build 230
"RTN","LRRSP",3,0)
 ;
"RTN","LRRSP",4,0)
 ; from option LRRSP
"RTN","LRRSP",5,0)
 ;
"RTN","LRRSP",6,0)
BEGIN D:'$D(LRPARAM) ^LRPARAM S LREND=0 F  S LRSTOP=0 K DFN,DIC D PAT Q:LREND
"RTN","LRRSP",7,0)
END D ^LRRK
"RTN","LRRSP",8,0)
 Q
"RTN","LRRSP",9,0)
 ;
"RTN","LRRSP",10,0)
 ;
"RTN","LRRSP",11,0)
PAT S (LRPG,LRPRTPG)=0 D ^LRDPA I LRDFN=-1 S LREND=1 Q
"RTN","LRRSP",12,0)
 I $O(^LR(LRDFN,0))="" W !,"NO LAB DATA ON THIS PATIENT!",$C(7) Q
"RTN","LRRSP",13,0)
 S LRTSCRN=0,LRONETST="",LRONESPC="",DIC="^LAB(60,",DIC(0)="AEMOQ",DIC("S")="I ""BO""[$P(^(0),U,3)",DIC("A")="Select ORDERED TEST: ANY//" D ^DIC S:Y>0 LRTSCRN=+Y,LRONETST=LRTSCRN S:$D(DUOUT)!$D(DTOUT) LREND=1 Q:LREND
"RTN","LRRSP",14,0)
 K DIC,LRCW S LREDT="T-7" D ^LRWU3 Q:LREND  S LRSDT=LRSDT\1
"RTN","LRRSP",15,0)
 ;
"RTN","LRRSP",16,0)
ASKPG S DIR(0)="Y",DIR("A")="Print address page",DIR("B")="NO"
"RTN","LRRSP",17,0)
 D ^DIR K DIR
"RTN","LRRSP",18,0)
 I Y S LRPRTPG=1
"RTN","LRRSP",19,0)
 S ZTRTN="DQ^LRRSP",%ZIS="MQ" D IO^LRWU
"RTN","LRRSP",20,0)
 Q
"RTN","LRRSP",21,0)
 ;
"RTN","LRRSP",22,0)
 ;
"RTN","LRRSP",23,0)
DQ ;dequeued
"RTN","LRRSP",24,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","LRRSP",25,0)
 S LRFOUND=0,LRODT=LRSDT F  D ORDER Q:LREND!LRSTOP  S X1=LRODT,X2=-1 D C^%DTC S LRODT=X Q:LRODT<LREDT
"RTN","LRRSP",26,0)
 I 'LRFOUND W !,"No data found to print for - " S Y=LRSDT D DD^LRX W Y_" TO " S Y=LREDT D DD^LRX W $S($E(Y)'[9:Y,1:"END OF ON LINE RECORDS")
"RTN","LRRSP",27,0)
 I LRFOUND,LRPRTPG D PLSPG^LRRP2
"RTN","LRRSP",28,0)
 W @IOF
"RTN","LRRSP",29,0)
 Q
"RTN","LRRSP",30,0)
 ;
"RTN","LRRSP",31,0)
 ;
"RTN","LRRSP",32,0)
ORDER ;
"RTN","LRRSP",33,0)
 S LRORDER="",LRSN=0 F  S LRSN=+$O(^LRO(69,LRODT,1,"AA",LRDFN,LRSN)) Q:LRSN<1  D SCREEN S:X LRORDER=LRORDER_LRSN_U
"RTN","LRRSP",34,0)
 D SET^LRRP
"RTN","LRRSP",35,0)
 Q
"RTN","LRRSP",36,0)
 ;
"RTN","LRRSP",37,0)
 ;
"RTN","LRRSP",38,0)
SCREEN ;
"RTN","LRRSP",39,0)
 S X=0 I 'LRTSCRN S X=1 Q
"RTN","LRRSP",40,0)
 S T=0 F  S T=$O(^LRO(69,LRODT,1,LRSN,2,T)) Q:T<1  I +^(T,0)=LRTSCRN,'$P(^(0),"^",11) S X=1 Q
"RTN","LRRSP",41,0)
 Q
"RTN","LRSCT")
0^2^B28378651
"RTN","LRSCT",1,0)
LRSCT ;DALOI/STAFF - SNOMED SCT UTILITIES ;01/10/11  10:46
"RTN","LRSCT",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSCT",3,0)
 ;
"RTN","LRSCT",4,0)
 ;
"RTN","LRSCT",5,0)
 Q
"RTN","LRSCT",6,0)
 ;
"RTN","LRSCT",7,0)
CODE(LRCODE,LRSRC,LRDT,LRARR) ;
"RTN","LRSCT",8,0)
 ;
"RTN","LRSCT",9,0)
 ; Wrapper for LEX CODE API
"RTN","LRSCT",10,0)
 ; If LRARR not specified, the default LEX array is killed on exit
"RTN","LRSCT",11,0)
 ; Inputs
"RTN","LRSCT",12,0)
 ;  LRCODE : The SCT code
"RTN","LRSCT",13,0)
 ;   LRSRC : The code source
"RTN","LRSCT",14,0)
 ;    LRDT : <opt> The effective date
"RTN","LRSCT",15,0)
 ;   LRARR : <opt><byname> The output array (not byref)
"RTN","LRSCT",16,0)
 ; Outputs
"RTN","LRSCT",17,0)
 ;   The modified CODE^LEXTRAN return string:
"RTN","LRSCT",18,0)
 ;     1=valid  -1=not found  -2=inactive  -99=API error
"RTN","LRSCT",19,0)
 ;   The CODE^LEXTRAN output array (in LRARR)
"RTN","LRSCT",20,0)
 ;
"RTN","LRSCT",21,0)
 N STATUS,LRX,STOP,X
"RTN","LRSCT",22,0)
 N DIERR,LEX ; New LEX which is used/returned by Lexicon when return array not defined.
"RTN","LRSCT",23,0)
 S LRARR=$G(LRARR)
"RTN","LRSCT",24,0)
 I LRARR'="" K @LRARR
"RTN","LRSCT",25,0)
 I $G(LRDT)="" S LRDT=$$DT^XLFDT()
"RTN","LRSCT",26,0)
 S STOP=0
"RTN","LRSCT",27,0)
 S STATUS=$$CODE^LEXTRAN($G(LRCODE),$G(LRSRC),$G(LRDT),LRARR)
"RTN","LRSCT",28,0)
 ;
"RTN","LRSCT",29,0)
 I +STATUS=-2 D
"RTN","LRSCT",30,0)
 . S STOP=1
"RTN","LRSCT",31,0)
 . S $P(STATUS,"^",1)=-1
"RTN","LRSCT",32,0)
 ;
"RTN","LRSCT",33,0)
 I +STATUS=-4 D
"RTN","LRSCT",34,0)
 . S STOP=1,$P(STATUS,"^",1)=-2
"RTN","LRSCT",35,0)
 . S X=$P(STATUS,"not active for ",2)
"RTN","LRSCT",36,0)
 . I X?1(7N,7N1"."1.N) S $P(STATUS,"not active for ",2)=$$FMTE^XLFDT(X,"MZ")
"RTN","LRSCT",37,0)
 ;
"RTN","LRSCT",38,0)
 I +STATUS=-8 D
"RTN","LRSCT",39,0)
 . S STOP=1,$P(STATUS,"^",1)=-2
"RTN","LRSCT",40,0)
 . S X=+$P(STATUS," ",2)
"RTN","LRSCT",41,0)
 . I X?1(7N,7N1"."1.N) S $P(STATUS," ",2)=$$FMTE^XLFDT(X,"MZ")
"RTN","LRSCT",42,0)
 . I LRDT=DT Q
"RTN","LRSCT",43,0)
 . K:LRARR'="" @LRARR
"RTN","LRSCT",44,0)
 . S LRX=$$CODE^LEXTRAN(LRCODE,LRSRC,DT,LRARR)
"RTN","LRSCT",45,0)
 ;
"RTN","LRSCT",46,0)
 I 'STOP,+STATUS=-1 S $P(STATUS,"^",1)=-99
"RTN","LRSCT",47,0)
 ;
"RTN","LRSCT",48,0)
 Q STATUS
"RTN","LRSCT",49,0)
 ;
"RTN","LRSCT",50,0)
 ;
"RTN","LRSCT",51,0)
SCTOK(SCT,DATE,LROUT) ;
"RTN","LRSCT",52,0)
 ; Is this SCT code valid?
"RTN","LRSCT",53,0)
 ; Inputs
"RTN","LRSCT",54,0)
 ;  SCT  :  The SCT Code
"RTN","LRSCT",55,0)
 ; DATE  :<opt> The date to use for the lookup (defaults to today)
"RTN","LRSCT",56,0)
 ; LROUT :<opt><byref> Holds the SCT code info.  See Outputs.
"RTN","LRSCT",57,0)
 ;
"RTN","LRSCT",58,0)
 ; Outputs
"RTN","LRSCT",59,0)
 ;   Returns 0 if invalid or 1 if valid
"RTN","LRSCT",60,0)
 ;   Returns SCT info in the LROUT array
"RTN","LRSCT",61,0)
 ;
"RTN","LRSCT",62,0)
 N LRZ,STATUS
"RTN","LRSCT",63,0)
 N DIERR
"RTN","LRSCT",64,0)
 S SCT=$G(SCT)
"RTN","LRSCT",65,0)
 S DATE=$G(DATE)
"RTN","LRSCT",66,0)
 S LROUT=$G(LROUT)
"RTN","LRSCT",67,0)
 I 'DATE S DATE=$$DT^XLFDT()
"RTN","LRSCT",68,0)
 S STATUS=0
"RTN","LRSCT",69,0)
 S STATUS=+$$CODE(SCT,"SCT",DATE,"LRZ")
"RTN","LRSCT",70,0)
 M LROUT=LRZ
"RTN","LRSCT",71,0)
 I +STATUS'=1 S STATUS=0
"RTN","LRSCT",72,0)
 Q STATUS
"RTN","LRSCT",73,0)
 ;
"RTN","LRSCT",74,0)
 ;
"RTN","LRSCT",75,0)
GETSCT(LRFILE,LRIEN) ;
"RTN","LRSCT",76,0)
 ; Returns the SCT code for the File/record specified
"RTN","LRSCT",77,0)
 ;  Inputs
"RTN","LRSCT",78,0)
 ;   LRFILE: File # (61, 62, 61.2)
"RTN","LRSCT",79,0)
 ;    LRIEN: IEN of file entry
"RTN","LRSCT",80,0)
 N LRFLD
"RTN","LRSCT",81,0)
 N DIERR,LRTARG,LRMSG
"RTN","LRSCT",82,0)
 S LRFLD=""
"RTN","LRSCT",83,0)
 I LRFILE=61 S LRFLD=20
"RTN","LRSCT",84,0)
 I LRFILE=62 S LRFLD=20
"RTN","LRSCT",85,0)
 I LRFILE=61.2 S LRFLD=20
"RTN","LRSCT",86,0)
 I 'LRFLD Q 0
"RTN","LRSCT",87,0)
 Q $$GET1^DIQ(LRFILE,LRIEN_",",LRFLD,"I","LRTARG","LRMSG")
"RTN","LRSCT",88,0)
 ;
"RTN","LRSCT",89,0)
 ;
"RTN","LRSCT",90,0)
FINDSCT(LRFILE,LRSCT) ;
"RTN","LRSCT",91,0)
 ; Finds an SCT code in the specified file.
"RTN","LRSCT",92,0)
 ; Inputs
"RTN","LRSCT",93,0)
 ;  LRFILE: File number
"RTN","LRSCT",94,0)
 ;   LRSCT: The SCT code
"RTN","LRSCT",95,0)
 ; Outputs
"RTN","LRSCT",96,0)
 ;  "IEN^external value" of the entry from the specified file.
"RTN","LRSCT",97,0)
 ;
"RTN","LRSCT",98,0)
 N LRIEN,NAME,DATA
"RTN","LRSCT",99,0)
 S LRFILE=$G(LRFILE)
"RTN","LRSCT",100,0)
 S LRSCT=$G(LRSCT)
"RTN","LRSCT",101,0)
 I 'LRFILE Q 0
"RTN","LRSCT",102,0)
 I LRSCT="" Q 0
"RTN","LRSCT",103,0)
 S LRIEN=0
"RTN","LRSCT",104,0)
 S DATA=""
"RTN","LRSCT",105,0)
 I LRFILE=61 D  ;
"RTN","LRSCT",106,0)
 . S LRIEN=+$O(^LAB(61,"F",LRSCT,0))
"RTN","LRSCT",107,0)
 . I LRIEN S DATA=$G(^LAB(61,LRIEN,0))
"RTN","LRSCT",108,0)
 ;
"RTN","LRSCT",109,0)
 I LRFILE=61.2 D  ;
"RTN","LRSCT",110,0)
 . S LRIEN=+$O(^LAB(61.2,"F",LRSCT,0))
"RTN","LRSCT",111,0)
 . I LRIEN S DATA=$G(^LAB(61.2,LRIEN,0))
"RTN","LRSCT",112,0)
 ;
"RTN","LRSCT",113,0)
 I LRFILE=62 D  ;
"RTN","LRSCT",114,0)
 . S LRIEN=+$O(^LAB(62,"F",LRSCT,0))
"RTN","LRSCT",115,0)
 . I LRIEN S DATA=$G(^LAB(62,LRIEN,0))
"RTN","LRSCT",116,0)
 ;
"RTN","LRSCT",117,0)
 S NAME=$P(DATA,U,1)
"RTN","LRSCT",118,0)
 I LRIEN S LRIEN=LRIEN_"^"_NAME
"RTN","LRSCT",119,0)
 Q LRIEN
"RTN","LRSCT",120,0)
 ;
"RTN","LRSCT",121,0)
 ;
"RTN","LRSCT",122,0)
GETPREF(SCT) ;
"RTN","LRSCT",123,0)
 ; Returns the Preferred Name for an SCT code
"RTN","LRSCT",124,0)
 N PREF,DATA,X
"RTN","LRSCT",125,0)
 S PREF=""
"RTN","LRSCT",126,0)
 S X=$$CODE(SCT,"SCT",,"DATA")
"RTN","LRSCT",127,0)
 S PREF=$G(DATA("P"))
"RTN","LRSCT",128,0)
 Q PREF
"RTN","LRSCT",129,0)
 ;
"RTN","LRSCT",130,0)
 ;
"RTN","LRSCT",131,0)
 ;
"RTN","LRSCT",132,0)
GETFSN(SCT) ;
"RTN","LRSCT",133,0)
 ; Returns fully specified SCT term
"RTN","LRSCT",134,0)
 N FSN,DATA,X
"RTN","LRSCT",135,0)
 S FSN=""
"RTN","LRSCT",136,0)
 S X=$$CODE(SCT,"SCT",,"DATA")
"RTN","LRSCT",137,0)
 S FSN=$G(DATA("F"))
"RTN","LRSCT",138,0)
 Q FSN
"RTN","LRSCT",139,0)
 ;
"RTN","LRSCT",140,0)
 ;
"RTN","LRSCT",141,0)
TXT4CS(LRTXT,LRCS,LRARR,LRHIER) ;
"RTN","LRSCT",142,0)
 ;
"RTN","LRSCT",143,0)
 ; Inputs
"RTN","LRSCT",144,0)
 ;   LRTXT: Text to find in SCT codeset
"RTN","LRSCT",145,0)
 ;    LRCS: Codeset to search (dflt=SCT)
"RTN","LRSCT",146,0)
 ;   LRARR:<byref> See Outputs
"RTN","LRSCT",147,0)
 ;  LRHIER:<opt>
"RTN","LRSCT",148,0)
 ; Outputs
"RTN","LRSCT",149,0)
 ;   Returns # of matches"  or  "0^error message"
"RTN","LRSCT",150,0)
 ;   LRARR array will contain info about matches
"RTN","LRSCT",151,0)
 ;             LRARR(code)=hierarchy
"RTN","LRSCT",152,0)
 ;
"RTN","LRSCT",153,0)
 N X,LEX,DIERR
"RTN","LRSCT",154,0)
 S LRTXT=$G(LRTXT)
"RTN","LRSCT",155,0)
 S LRCS=$G(LRCS,"SCT")
"RTN","LRSCT",156,0)
 S LRHIER=$G(LRHIER)
"RTN","LRSCT",157,0)
 K LRARR
"RTN","LRSCT",158,0)
 S X=$$TXT4CS^LEXTRAN(LRTXT,LRCS,"",LRHIER)
"RTN","LRSCT",159,0)
 I X>0 S X=$P(X,"^",2)
"RTN","LRSCT",160,0)
 I X<0 S $P(X,"^",1)=0
"RTN","LRSCT",161,0)
 M LRARR=LEX
"RTN","LRSCT",162,0)
 Q X
"RTN","LRSCT",163,0)
 ;
"RTN","LRSCT",164,0)
 ;
"RTN","LRSCT",165,0)
DELHIER(TEXT) ;
"RTN","LRSCT",166,0)
 ; Removes any SCT Hierachy text from TEXT
"RTN","LRSCT",167,0)
 ; Inputs
"RTN","LRSCT",168,0)
 ;   TEXT:  The text to check
"RTN","LRSCT",169,0)
 ; Outputs -- The text less the SCT Hierarchy (if applicable)
"RTN","LRSCT",170,0)
 N STR,X
"RTN","LRSCT",171,0)
 S TEXT=$G(TEXT)
"RTN","LRSCT",172,0)
 S STR=TEXT
"RTN","LRSCT",173,0)
 S STR=$$TRIM^XLFSTR(STR)
"RTN","LRSCT",174,0)
 ; last char = ) and also contains a (
"RTN","LRSCT",175,0)
 I $E(STR,$L(STR),$L(STR))=")" I STR["(" D  ;
"RTN","LRSCT",176,0)
 . N TXT2,TXT3,STOP
"RTN","LRSCT",177,0)
 . S STOP=0
"RTN","LRSCT",178,0)
 . ; Text to use -- ie: this is the text
"RTN","LRSCT",179,0)
 . S TXT2=$RE(TEXT) S TXT2=$P(TXT2,"(",2,$L(TXT2)) S TXT2=$RE(TXT2)
"RTN","LRSCT",180,0)
 . S TXT2=$$TRIM^XLFSTR(TXT2)
"RTN","LRSCT",181,0)
 . ; get last ( piece  -- ie: (body structure)
"RTN","LRSCT",182,0)
 . S TXT3=$RE(TEXT) S TXT3=$P(TXT3,"(",1) S TXT3=$RE(TXT3) S TXT3=$P(TXT3,")",1)
"RTN","LRSCT",183,0)
 . S TXT3=$$TRIM^XLFSTR(TXT3)
"RTN","LRSCT",184,0)
 . Q:TXT3=""
"RTN","LRSCT",185,0)
 . S X="SCT "_TXT3
"RTN","LRSCT",186,0)
 . S STOP=1
"RTN","LRSCT",187,0)
 . ; dont remove non-SCT hierarchy phrases in paranthesis
"RTN","LRSCT",188,0)
 . I $D(^LAB(64.061,"B",X)) S STOP=0  ;valid SCT Hierachy?
"RTN","LRSCT",189,0)
 . I $D(^LAB(64.061,"C",$$UP^XLFSTR(X))) S STOP=0
"RTN","LRSCT",190,0)
 . Q:STOP
"RTN","LRSCT",191,0)
 . S STR=TXT2
"RTN","LRSCT",192,0)
 Q STR
"RTN","LRSCT",193,0)
 ;
"RTN","LRSCT",194,0)
 ;
"RTN","LRSCT",195,0)
LEX6247(R6247,LROUT) ;
"RTN","LRSCT",196,0)
 ; Gets SCT/LEX info for a File #62.47 entry
"RTN","LRSCT",197,0)
 ; Inputs
"RTN","LRSCT",198,0)
 ;   R6247: File #62.47 IEN
"RTN","LRSCT",199,0)
 ;   LROUT:<byref><opt>
"RTN","LRSCT",200,0)
 ; Outputs
"RTN","LRSCT",201,0)
 ;   Returns the #64.061 IEN of the #62.47 entry queried.
"RTN","LRSCT",202,0)
 ;   Also returns aditional info in the LROUT array:
"RTN","LRSCT",203,0)
 ;         LROUT("SCTIEN")
"RTN","LRSCT",204,0)
 ;         LROUT("SCTTOP")
"RTN","LRSCT",205,0)
 ;         LROUT("LEXABRV")
"RTN","LRSCT",206,0)
 ;
"RTN","LRSCT",207,0)
 N R64061,SCTIEN,DATA,X
"RTN","LRSCT",208,0)
 S R6247=+$G(R6247)
"RTN","LRSCT",209,0)
 K LROUT
"RTN","LRSCT",210,0)
 S LROUT("SCTIEN")=""
"RTN","LRSCT",211,0)
 S LROUT("SCTTOP")=""
"RTN","LRSCT",212,0)
 S LROUT("LEXABRV")=""
"RTN","LRSCT",213,0)
 I 'R6247 Q 0
"RTN","LRSCT",214,0)
 S DATA=$G(^LAB(62.47,R6247,0))
"RTN","LRSCT",215,0)
 S R64061=$P(DATA,U,3) ;fld .03
"RTN","LRSCT",216,0)
 I 'R64061 Q 0
"RTN","LRSCT",217,0)
 S DATA=$G(^LAB(64.061,R64061,63))
"RTN","LRSCT",218,0)
 S SCTIEN=$P(DATA,U,4) ;fld 63.3
"RTN","LRSCT",219,0)
 S LROUT("SCTIEN")=SCTIEN ;IEN
"RTN","LRSCT",220,0)
 S DATA=$G(^LAB(64.061,+SCTIEN,0))
"RTN","LRSCT",221,0)
 S X=$P(DATA,U,1)
"RTN","LRSCT",222,0)
 S LROUT("SCTTOP")=X
"RTN","LRSCT",223,0)
 ;S DATA=$G(^LAB(64.061,+SCTIEN,0))
"RTN","LRSCT",224,0)
 ;S X=$P(DATA,U,1)
"RTN","LRSCT",225,0)
 ;S LROUT("SCTHIER")=X
"RTN","LRSCT",226,0)
 S DATA=$G(^LAB(64.061,+SCTIEN,1))
"RTN","LRSCT",227,0)
 S X=$P(DATA,U,1) ;fld 12
"RTN","LRSCT",228,0)
 S LROUT("LEXABRV")=X
"RTN","LRSCT",229,0)
 Q R64061
"RTN","LRSCTF")
0^105^B91859854
"RTN","LRSCTF",1,0)
LRSCTF ;DAL01/JMC - STORE STS MAPPING IN PARENT FILE ;02/08/12  15:25
"RTN","LRSCTF",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSCTF",3,0)
 ;
"RTN","LRSCTF",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRSCTF",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRSCTF",6,0)
 ;
"RTN","LRSCTF",7,0)
 Q
"RTN","LRSCTF",8,0)
 ;
"RTN","LRSCTF",9,0)
LD(LRINST,LROVER) ;  Load STS mapping into SCT encoded files
"RTN","LRSCTF",10,0)
 ; Call with LRINST = #4 IEN
"RTN","LRSCTF",11,0)
 ;           LROVER<opt> Its a do-over
"RTN","LRSCTF",12,0)
 ;
"RTN","LRSCTF",13,0)
 N LRABORT,LRCNT,LRFDA,LRFIEN,LRFILE,LRFLD,LRHIER,LRHIERX,LRI,LRIEN,LRJ,LRNOW,LRNODE,LROK,LRRECORDFORMAT,LRQUIET,LRSCT,LRSFILE,LRSN,LRSTATUS,LRSTR,LRSTRF,LRTX,LRTXT,LRTXTY,LRX,LRY
"RTN","LRSCTF",14,0)
 N CNT,DIQUIET,I,TMPNM,X,Y
"RTN","LRSCTF",15,0)
 ;
"RTN","LRSCTF",16,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LRSCTF",17,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LRSCTF",18,0)
 ; Insure DT and DILOCKTM is defined
"RTN","LRSCTF",19,0)
 D DT^DICRW
"RTN","LRSCTF",20,0)
 ;
"RTN","LRSCTF",21,0)
 I $G(LRINST)<1 Q
"RTN","LRSCTF",22,0)
 ;
"RTN","LRSCTF",23,0)
 S X=$$NS^XUAF4(LRINST),LRINST(1)=$P(X,"^",1),LRINST(2)=$P(X,"^",2)
"RTN","LRSCTF",24,0)
 S LROVER=+$G(LROVER)
"RTN","LRSCTF",25,0)
 S LRNOW=$$HTFM^XLFDT($H),LRABORT=0
"RTN","LRSCTF",26,0)
 ;
"RTN","LRSCTF",27,0)
 D BMES($S($G(LROVER):"RELOADING",1:"Loading")_" files with National SNOMED CT Codes")
"RTN","LRSCTF",28,0)
 ;
"RTN","LRSCTF",29,0)
 S TMPNM="LRSCTF-ERR"
"RTN","LRSCTF",30,0)
 K ^XTMP(TMPNM)
"RTN","LRSCTF",31,0)
 S ^XTMP(TMPNM,0)=$$HTFM^XLFDT($H+180,1)_U_DT_U_$S(LROVER:"OVERLAY ",1:"")_"LAB SCT MAPPING ERRORS"_U_$$FMTE^XLFDT($$NOW^XLFDT(),"1Z")
"RTN","LRSCTF",32,0)
 ;
"RTN","LRSCTF",33,0)
 I '$D(^LAHM(95.4,"AC",LRINST)) D  Q
"RTN","LRSCTF",34,0)
 . S X="No data for "_LRINST(1)_" found in transport file"
"RTN","LRSCTF",35,0)
 . W ! D BMES(X)
"RTN","LRSCTF",36,0)
 . S ^XTMP(TMPNM,1)=X
"RTN","LRSCTF",37,0)
 ;
"RTN","LRSCTF",38,0)
 D GET954
"RTN","LRSCTF",39,0)
 I LRABORT Q
"RTN","LRSCTF",40,0)
 ;
"RTN","LRSCTF",41,0)
 ; Purge those entries that were successfully processed.
"RTN","LRSCTF",42,0)
 D PURGE^LRSRVR5(1)
"RTN","LRSCTF",43,0)
 ;
"RTN","LRSCTF",44,0)
 Q
"RTN","LRSCTF",45,0)
 ;
"RTN","LRSCTF",46,0)
 ;
"RTN","LRSCTF",47,0)
GET954 ; Search cross reference of institution entries
"RTN","LRSCTF",48,0)
 ;
"RTN","LRSCTF",49,0)
 ;ZEXCEPT: LRABORT,LRCNT,LRIEN,LRINST,LRNODE,LROK,LROVER,LRSFILE,ZTQUEUED
"RTN","LRSCTF",50,0)
 ;
"RTN","LRSCTF",51,0)
 ; Get and lock file while processing.
"RTN","LRSCTF",52,0)
 L +^LAHM(95.4,0):DILOCKTM+15
"RTN","LRSCTF",53,0)
 I '$T S LRABORT=1 Q
"RTN","LRSCTF",54,0)
 ;
"RTN","LRSCTF",55,0)
 S (LRCNT,LRIEN)=0,LRSFILE=""
"RTN","LRSCTF",56,0)
 F  S LRIEN=$O(^LAHM(95.4,"AF","SCT",LRIEN)) Q:LRIEN<1  D
"RTN","LRSCTF",57,0)
 . S LRCNT=LRCNT+1
"RTN","LRSCTF",58,0)
 . I '(LRCNT#100) H 1 ; take a "rest" - allow OS to swap out process
"RTN","LRSCTF",59,0)
 . I '$D(ZTQUEUED) W:'(LRCNT#50) "."
"RTN","LRSCTF",60,0)
 . K LRNODE
"RTN","LRSCTF",61,0)
 . S LRNODE(0)=$G(^LAHM(95.4,LRIEN,0))
"RTN","LRSCTF",62,0)
 . I LRNODE(0)="" Q
"RTN","LRSCTF",63,0)
 . I '$G(LROVER),$P(LRNODE(0),"^",4)>0 Q
"RTN","LRSCTF",64,0)
 . I DUZ("AG")="V",$P(LRNODE(0),"-",1)'=LRINST(2) Q
"RTN","LRSCTF",65,0)
 . D LDPARS
"RTN","LRSCTF",66,0)
 . I $G(LROK) D LEX
"RTN","LRSCTF",67,0)
 ;
"RTN","LRSCTF",68,0)
 ; Unlock transport global.
"RTN","LRSCTF",69,0)
 L -^LAHM(95.4,0)
"RTN","LRSCTF",70,0)
 Q
"RTN","LRSCTF",71,0)
 ;
"RTN","LRSCTF",72,0)
 ;
"RTN","LRSCTF",73,0)
LDPARS ;
"RTN","LRSCTF",74,0)
 ; Parse the data
"RTN","LRSCTF",75,0)
 ;
"RTN","LRSCTF",76,0)
 ;ZEXCEPT: LRFIEN,LRFILE,LRFLD,LRNODE,LROK,LRRECORDFORMAT,LRSCT,LRSFILE,LRSN,LRTXTY
"RTN","LRSCTF",77,0)
 ;
"RTN","LRSCTF",78,0)
 N LRFNAME,LRMSG
"RTN","LRSCTF",79,0)
 S LROK=0
"RTN","LRSCTF",80,0)
 S LRFILE=$P($P(LRNODE(0),U),"-",2) ;^LAB(FILE
"RTN","LRSCTF",81,0)
 S LRFNAME=$$GET1^DID(LRFILE,"","","NAME","","LRMSG")
"RTN","LRSCTF",82,0)
 I LRFILE'=LRSFILE D
"RTN","LRSCTF",83,0)
 . D BMES(" "),BMES("*************************************************")
"RTN","LRSCTF",84,0)
 . D BMES("Loading file #"_LRFILE_" [ "_LRFNAME_" ]")
"RTN","LRSCTF",85,0)
 . D BMES("*************************************************")
"RTN","LRSCTF",86,0)
 . S LRSFILE=LRFILE
"RTN","LRSCTF",87,0)
 K LRFIEN
"RTN","LRSCTF",88,0)
 S LRFIEN=$P($P(LRNODE(0),U),"-",3) ; IEN
"RTN","LRSCTF",89,0)
 D RETRIEVE
"RTN","LRSCTF",90,0)
 ; Entry name
"RTN","LRSCTF",91,0)
 S LRTXTY=LRFLD(2)
"RTN","LRSCTF",92,0)
 ;
"RTN","LRSCTF",93,0)
 ; Legacy SNOMED I Code
"RTN","LRSCTF",94,0)
 I LRFLD(3)?1U1"-"1.AN S LRSN=$P(LRFLD(3),"-",2)
"RTN","LRSCTF",95,0)
 E  S LRSN=LRFLD(3)
"RTN","LRSCTF",96,0)
 ;
"RTN","LRSCTF",97,0)
 ; SNOMED CT code
"RTN","LRSCTF",98,0)
 S LRSCT=""
"RTN","LRSCTF",99,0)
 I LRRECORDFORMAT=1 S LRSCT=LRFLD(5)
"RTN","LRSCTF",100,0)
 I LRRECORDFORMAT=2 S LRSCT=LRFLD(4)
"RTN","LRSCTF",101,0)
 ;
"RTN","LRSCTF",102,0)
 I LRFILE,LRFIEN,LRTXTY'="" S LROK=1
"RTN","LRSCTF",103,0)
 Q
"RTN","LRSCTF",104,0)
 ;
"RTN","LRSCTF",105,0)
 ;
"RTN","LRSCTF",106,0)
LEX ; Validate SCT code, get concept and term
"RTN","LRSCTF",107,0)
 ; Only check those SCT codes if STS has mapped the term to SCT
"RTN","LRSCTF",108,0)
 ;
"RTN","LRSCTF",109,0)
 ;ZEXCEPT: LRFIEN,LRFILE,LRHIER,LRHIERX,LRSCT,LRSTATUS,LRTXTY
"RTN","LRSCTF",110,0)
 ;
"RTN","LRSCTF",111,0)
 N LRFS,LRERR,LRSTRF,LRY,LRX
"RTN","LRSCTF",112,0)
 K LRSTATUS
"RTN","LRSCTF",113,0)
 S (LRSTATUS,LRHIERX)=""
"RTN","LRSCTF",114,0)
 S LRFS=3,LRX=0
"RTN","LRSCTF",115,0)
 ;
"RTN","LRSCTF",116,0)
 S LRSTRF=$G(^LAB(LRFILE,LRFIEN,0)),LRSTRF("SCT")=$G(^LAB(LRFILE,LRFIEN,"SCT"))
"RTN","LRSCTF",117,0)
 I LRSTRF="" D  Q
"RTN","LRSCTF",118,0)
 . D LDERR("No such entry: File #"_LRFILE_" IEN:"_LRFIEN)
"RTN","LRSCTF",119,0)
 . D LD954
"RTN","LRSCTF",120,0)
 ;
"RTN","LRSCTF",121,0)
 I LRSCT S LRX=$$CODE^LRSCT(LRSCT,"SCT",DT,"LRY")
"RTN","LRSCTF",122,0)
 ; If new term store SCT code only and change status to new code awaiting Lexcion update
"RTN","LRSCTF",123,0)
 ; Otherwise if not new term then log error.
"RTN","LRSCTF",124,0)
 I LRSCT,LRX<0 D
"RTN","LRSCTF",125,0)
 . S LRSTATUS("ERR")=$P(LRX,"^",2),LRFS=2
"RTN","LRSCTF",126,0)
 . N LRZ
"RTN","LRSCTF",127,0)
 . S LRZ="SNOMED CT code "_LRSCT_" not on file"
"RTN","LRSCTF",128,0)
 . I LRSTATUS("ERR")=LRZ S LRSTATUS="LN" Q
"RTN","LRSCTF",129,0)
 . D LD954,LDERR("Lexicon SCT lookup error") S LRSTATUS="E"
"RTN","LRSCTF",130,0)
 ;
"RTN","LRSCTF",131,0)
 I LRSCT,LRX>0 D
"RTN","LRSCTF",132,0)
 . S LRHIER="SCT "_$$UP^XLFSTR($P(LRY(0),U,2))
"RTN","LRSCTF",133,0)
 . S LRHIERX=$$FIND1^DIC(64.061,,"X",LRHIER,"C",,"LRERR")
"RTN","LRSCTF",134,0)
 . S LRSTATUS="L" ; Default [L] = The spelling is not standard
"RTN","LRSCTF",135,0)
 . I LRTXTY=$$UP^XLFSTR($G(LRY("P"))) S LRSTATUS="P" ; preferred term
"RTN","LRSCTF",136,0)
 . I LRSTATUS'="P",$O(LRY("S",0)) D  ; Check to see if term in a synonym
"RTN","LRSCTF",137,0)
 . . N I
"RTN","LRSCTF",138,0)
 . . S I=0
"RTN","LRSCTF",139,0)
 . . F  S I=$O(LRY("S",I)) Q:I<1  I LRTXTY=$$UP^XLFSTR(LRY("S",I)) S LRSTATUS="S" Q
"RTN","LRSCTF",140,0)
 ;
"RTN","LRSCTF",141,0)
 D LDCK
"RTN","LRSCTF",142,0)
 Q
"RTN","LRSCTF",143,0)
 ;
"RTN","LRSCTF",144,0)
 ;
"RTN","LRSCTF",145,0)
LDCK ; Check target file to determine if mapping is correct
"RTN","LRSCTF",146,0)
 ;
"RTN","LRSCTF",147,0)
 ;ZEXCEPT: LRFS,LRSN,LRSTRF,LRTX,LRTXTY
"RTN","LRSCTF",148,0)
 ;
"RTN","LRSCTF",149,0)
 N LRMAPERR
"RTN","LRSCTF",150,0)
 ;
"RTN","LRSCTF",151,0)
 I LRSN'="",$P(LRSTRF,"^",2)'=LRSN S LRMAPERR="SNOMED I code does not match"
"RTN","LRSCTF",152,0)
 ;
"RTN","LRSCTF",153,0)
 S LRTX=$$TRIM^XLFSTR($P(LRSTRF,"^"),"LR"," ")
"RTN","LRSCTF",154,0)
 I $$UP^XLFSTR(LRTXTY)'=$$UP^XLFSTR(LRTX) S LRMAPERR="Names do not match: ["_LRTX_" < - > "_LRTXTY_"]"
"RTN","LRSCTF",155,0)
 ;
"RTN","LRSCTF",156,0)
 I $G(LRMAPERR)'="" D  Q
"RTN","LRSCTF",157,0)
 . S LRFS=3
"RTN","LRSCTF",158,0)
 . D LDERR(LRMAPERR)
"RTN","LRSCTF",159,0)
 . D SCTUPD ; ccr_7218n - Update SCT STATUS DATE multiple
"RTN","LRSCTF",160,0)
 . D LD954
"RTN","LRSCTF",161,0)
 ;
"RTN","LRSCTF",162,0)
 ; Do file update
"RTN","LRSCTF",163,0)
 D LDFILE
"RTN","LRSCTF",164,0)
 Q
"RTN","LRSCTF",165,0)
 ;
"RTN","LRSCTF",166,0)
 ;
"RTN","LRSCTF",167,0)
LDERR(LRERR) ;
"RTN","LRSCTF",168,0)
 ; Populate error message text file ^XTMP("LRSCT-ERR"
"RTN","LRSCTF",169,0)
 ; Send STS alert if needed.
"RTN","LRSCTF",170,0)
 ;
"RTN","LRSCTF",171,0)
 ;ZEXCEPT: LRFIEN,LRFILE,LRFLD,LRFS,LRIEN,LRSCT,LRTXTY,TMPNM
"RTN","LRSCTF",172,0)
 ;
"RTN","LRSCTF",173,0)
 N DATA,ERCNT,EXCDATA,I,LRX,TNUM,X
"RTN","LRSCTF",174,0)
 D BMES(" "),BMES(LRERR)
"RTN","LRSCTF",175,0)
 S ERCNT=$O(^XTMP(TMPNM,"A"),-1)+1
"RTN","LRSCTF",176,0)
 S ^XTMP(TMPNM,ERCNT,0)=LRIEN_U_LRERR_U_LRFS
"RTN","LRSCTF",177,0)
 S ^XTMP(TMPNM,ERCNT,1)=$G(^LAHM(95.4,LRIEN,0))
"RTN","LRSCTF",178,0)
 S ^XTMP(TMPNM,ERCNT,2)=LRFLD(1)_"^"_LRFLD(2)_"^"_LRFLD(3)_"^"_LRFLD(4)_"^"_LRFLD(5)
"RTN","LRSCTF",179,0)
 ; LRFILE -- File #
"RTN","LRSCTF",180,0)
 ; LRFIEN -- Entry IEN
"RTN","LRSCTF",181,0)
 ;
"RTN","LRSCTF",182,0)
 S I=0
"RTN","LRSCTF",183,0)
 F  S I=$O(LRFLD(I)) Q:I<1  S EXCDATA("RD",I)=$G(LRFLD(I))
"RTN","LRSCTF",184,0)
 ;
"RTN","LRSCTF",185,0)
 ; Existing entry extract record
"RTN","LRSCTF",186,0)
 S X=$$BLDERTX^LRERT(LRFILE,LRFIEN,"|",.DATA,2,"S")
"RTN","LRSCTF",187,0)
 M EXCDATA("SA")=DATA
"RTN","LRSCTF",188,0)
 ;
"RTN","LRSCTF",189,0)
 ; Lab mapping exception
"RTN","LRSCTF",190,0)
 S EXCDATA("TXT")=LRERR
"RTN","LRSCTF",191,0)
 ;
"RTN","LRSCTF",192,0)
 S X=$$NOTIFY^LRSCTF1(LRTXTY,LRFILE,LRFIEN,LRSCT,.EXCDATA)
"RTN","LRSCTF",193,0)
 S TNUM=$G(EXCDATA("TNUM"))
"RTN","LRSCTF",194,0)
 S ^XTMP(TMPNM,ERCNT,10)=TNUM
"RTN","LRSCTF",195,0)
 I X D BMES("STS alert sent.")
"RTN","LRSCTF",196,0)
 I 'X  D
"RTN","LRSCTF",197,0)
 . S X=$P(X,"^",3)
"RTN","LRSCTF",198,0)
 . D BMES("STS failure: "_X)
"RTN","LRSCTF",199,0)
 . S ^XTMP(TMPNM,ERCNT,10,1)=X
"RTN","LRSCTF",200,0)
 ;
"RTN","LRSCTF",201,0)
 Q
"RTN","LRSCTF",202,0)
 ;
"RTN","LRSCTF",203,0)
 ;
"RTN","LRSCTF",204,0)
BMES(MSG) ; Display message on screen and if during KIDS install store with install
"RTN","LRSCTF",205,0)
 ;
"RTN","LRSCTF",206,0)
 ;ZEXCEPT: XPDA,ZTQUEUED
"RTN","LRSCTF",207,0)
 ;
"RTN","LRSCTF",208,0)
 I $G(XPDA)>0 D BMES^XPDUTL($$CJ^XLFSTR(MSG,IOM)) Q
"RTN","LRSCTF",209,0)
 I '$D(ZTQUEUED) W !,MSG
"RTN","LRSCTF",210,0)
 Q
"RTN","LRSCTF",211,0)
 ;
"RTN","LRSCTF",212,0)
 ;
"RTN","LRSCTF",213,0)
LDFILE ; Update target file
"RTN","LRSCTF",214,0)
 ;
"RTN","LRSCTF",215,0)
 ;ZEXCEPT: LRFIEN,LRFILE,LRFLD,LRFS,LRHIERX,LRNOW,LRRECORDFORMAT,LRSCT,LRSTATUS
"RTN","LRSCTF",216,0)
 ;
"RTN","LRSCTF",217,0)
 N LRFDA,LRERR,LRFMERTS,LRMAPERR,LRSUBFILE,LRX
"RTN","LRSCTF",218,0)
 ;
"RTN","LRSCTF",219,0)
 ; Lock file entry prior to updating
"RTN","LRSCTF",220,0)
 F  L +^LAB(LRFILE,LRFIEN):DILOCKTM+15 Q:$T
"RTN","LRSCTF",221,0)
 ;
"RTN","LRSCTF",222,0)
 ; Stop AERT xref from triggering alert (from ^LRERT1)
"RTN","LRSCTF",223,0)
 S LRFMERTS=1
"RTN","LRSCTF",224,0)
 S LRFMERTS("STS","STAT")="OK"
"RTN","LRSCTF",225,0)
 S LRFMERTS("STS","PROC")="LOAD"
"RTN","LRSCTF",226,0)
 ;
"RTN","LRSCTF",227,0)
 ; Check status if returned from STS and store in target file.
"RTN","LRSCTF",228,0)
 I LRSTATUS="" D
"RTN","LRSCTF",229,0)
 . I LRRECORDFORMAT=2 S LRSTATUS=$G(LRFLD(5)) Q
"RTN","LRSCTF",230,0)
 . I LRRECORDFORMAT=1 S LRSTATUS=$G(LRFLD(4))
"RTN","LRSCTF",231,0)
 ;
"RTN","LRSCTF",232,0)
 ; Load new mapping/purge previous data
"RTN","LRSCTF",233,0)
 S LRFDA(1,LRFILE,LRFIEN_",",20)=LRSCT
"RTN","LRSCTF",234,0)
 S LRFDA(1,LRFILE,LRFIEN_",",21)=LRSTATUS
"RTN","LRSCTF",235,0)
 S LRFDA(1,LRFILE,LRFIEN_",",22)=LRHIERX
"RTN","LRSCTF",236,0)
 D FILE^DIE("","LRFDA(1)","LRERR(1)")
"RTN","LRSCTF",237,0)
 I $D(LRERR(1)) D
"RTN","LRSCTF",238,0)
 . D LDERR("Unable to file entry")
"RTN","LRSCTF",239,0)
 . S LRMAPERR="FileMan FILE~DIE call failed: "_$G(LRERR(1,"DIERR",1))
"RTN","LRSCTF",240,0)
 S LRFS=$S($D(LRERR):3,1:1)
"RTN","LRSCTF",241,0)
 ;
"RTN","LRSCTF",242,0)
 ; Update SCT STATUS DATE multiple
"RTN","LRSCTF",243,0)
 D SCTUPD
"RTN","LRSCTF",244,0)
 ;
"RTN","LRSCTF",245,0)
 L -^LAB(LRFILE,LRFIEN)
"RTN","LRSCTF",246,0)
 ;
"RTN","LRSCTF",247,0)
 D LD954
"RTN","LRSCTF",248,0)
 ;
"RTN","LRSCTF",249,0)
 Q
"RTN","LRSCTF",250,0)
 ;
"RTN","LRSCTF",251,0)
 ;
"RTN","LRSCTF",252,0)
RETRIEVE ; Retrieve mapping data from file #95.4
"RTN","LRSCTF",253,0)
 ;
"RTN","LRSCTF",254,0)
 ;ZEXCEPT: LRFLD,LRI,LRIEN,LRJ,LRNODE,LRRECORDFORMAT
"RTN","LRSCTF",255,0)
 ;
"RTN","LRSCTF",256,0)
 ; Record format 1
"RTN","LRSCTF",257,0)
 ; Station #-File #-IEN|Entry Name|SNOMED I|STS_FURTHER_ACTION|STS_SCT_ID|STS_TYPE_OF_MATCH
"RTN","LRSCTF",258,0)
 ; LRFIELDLABEL(1)="1:IDENTIFIER"
"RTN","LRSCTF",259,0)
 ; LRFIELDLABEL(2)="2:ENTRY NAME"
"RTN","LRSCTF",260,0)
 ; LRFIELDLABEL(3)="3:SNOMED I"
"RTN","LRSCTF",261,0)
 ; LRFIELDLABEL(4)="4:STS_FURTHER_ACTION"
"RTN","LRSCTF",262,0)
 ; LRFIELDLABEL(5)="5:STS_SCT_CODE"
"RTN","LRSCTF",263,0)
 ; LRFIELDLABEL(6)="6:STS_TYPE_OF_MATCH"
"RTN","LRSCTF",264,0)
 ;
"RTN","LRSCTF",265,0)
 ; Record format 2
"RTN","LRSCTF",266,0)
 ; Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER
"RTN","LRSCTF",267,0)
 ; LRFIELDLABEL(1)="1:IDENTIFIER"
"RTN","LRSCTF",268,0)
 ; LRFIELDLABEL(2)="2:ENTRY NAME"
"RTN","LRSCTF",269,0)
 ; LRFIELDLABEL(3)="3:SNOMED I"
"RTN","LRSCTF",270,0)
 ; LRFIELDLABEL(4)="4:SNOMED CT"
"RTN","LRSCTF",271,0)
 ; LRFIELDLABEL(5)="5:STS_EXCEPTION"
"RTN","LRSCTF",272,0)
 ; LRFIELDLABEL(6)="6:STS_EXCEPTION_REASON"
"RTN","LRSCTF",273,0)
 ; LRFIELDLABEL(7)="7:TRANSACTION NUMBER"
"RTN","LRSCTF",274,0)
 ;
"RTN","LRSCTF",275,0)
 N LRFIELDLABEL,LRX
"RTN","LRSCTF",276,0)
 ;
"RTN","LRSCTF",277,0)
 K LRFLD,LRI,LRJ
"RTN","LRSCTF",278,0)
 S LRFLD(1)=$P(LRNODE(0),"^")
"RTN","LRSCTF",279,0)
 F LRI=2:1:7 S LRFLD(LRI)="",LRFIELDLABEL(LRI)=""
"RTN","LRSCTF",280,0)
 ;
"RTN","LRSCTF",281,0)
 S LRI=0
"RTN","LRSCTF",282,0)
 F  S LRI=$O(^LAHM(95.4,LRIEN,100,LRI)) Q:'LRI  D
"RTN","LRSCTF",283,0)
 . S LRX=^LAHM(95.4,LRIEN,100,LRI,0)
"RTN","LRSCTF",284,0)
 . S LRJ=$P($P(LRX,"^"),":")
"RTN","LRSCTF",285,0)
 . S LRFIELDLABEL(LRJ)=$P(LRX,"^")
"RTN","LRSCTF",286,0)
 . S LRFLD(LRJ)=^LAHM(95.4,LRIEN,100,LRI,100,1,0)
"RTN","LRSCTF",287,0)
 ;
"RTN","LRSCTF",288,0)
 ; Determine SCT record format
"RTN","LRSCTF",289,0)
 ;    - check various fields since any one may not be sent.
"RTN","LRSCTF",290,0)
 S LRRECORDFORMAT=2
"RTN","LRSCTF",291,0)
 I LRFIELDLABEL(4)="4:SNOMED CT" Q
"RTN","LRSCTF",292,0)
 I LRFIELDLABEL(5)="5:STS_EXCEPTION" Q
"RTN","LRSCTF",293,0)
 I LRFIELDLABEL(6)="6:STS_EXCEPTION_REASON" Q
"RTN","LRSCTF",294,0)
 I LRFIELDLABEL(7)="7:TRANSACTION NUMBER" Q
"RTN","LRSCTF",295,0)
 ;
"RTN","LRSCTF",296,0)
 ; Othewise set to old orignal format
"RTN","LRSCTF",297,0)
 S LRRECORDFORMAT=1
"RTN","LRSCTF",298,0)
 I LRFIELDLABEL(4)="4:STS_FURTHER_ACTION" Q
"RTN","LRSCTF",299,0)
 I LRFIELDLABEL(5)="5:STS_SCT_CODE" Q
"RTN","LRSCTF",300,0)
 I LRFIELDLABEL(6)="6:STS_TYPE_OF_MATCH" Q
"RTN","LRSCTF",301,0)
 ;
"RTN","LRSCTF",302,0)
 S LRRECORDFORMAT=0
"RTN","LRSCTF",303,0)
 ;
"RTN","LRSCTF",304,0)
 Q
"RTN","LRSCTF",305,0)
 ;
"RTN","LRSCTF",306,0)
 ;
"RTN","LRSCTF",307,0)
LD954 ;
"RTN","LRSCTF",308,0)
 ; Update transport file with status
"RTN","LRSCTF",309,0)
 ;
"RTN","LRSCTF",310,0)
 ;ZEXCEPT: LRFS,LRIEN,LRNOW
"RTN","LRSCTF",311,0)
 ;
"RTN","LRSCTF",312,0)
 N LRERR,LRFDA
"RTN","LRSCTF",313,0)
 S LRFDA(2,95.4,LRIEN_",",4)=$S(LRFS=1:1,1:.7)
"RTN","LRSCTF",314,0)
 S LRFDA(2,95.4,LRIEN_",",5)=$S(LRFS=0:"NOT LOADED",LRFS=1:"LOADED",LRFS=2:"LEXICON ERROR",LRFS=3:"MAPPING ERROR",1:"")
"RTN","LRSCTF",315,0)
 S LRFDA(2,95.4,LRIEN_",",6)=LRNOW
"RTN","LRSCTF",316,0)
 D FILE^DIE("","LRFDA(2)","LRERR")
"RTN","LRSCTF",317,0)
 Q
"RTN","LRSCTF",318,0)
 ;
"RTN","LRSCTF",319,0)
 ;
"RTN","LRSCTF",320,0)
SCTUPD ; Update SCT STATUS DATE multiple
"RTN","LRSCTF",321,0)
 ;
"RTN","LRSCTF",322,0)
 ;ZEXCEPT: LRDUZ,LRFILE,LRFIEN,LRFLD,LRMAPERR,LRNOW,LRRECORDFORMAT,LRSTATUS
"RTN","LRSCTF",323,0)
 ;
"RTN","LRSCTF",324,0)
 N LRERR,LRFDA,LRSUBFILE,LRWP
"RTN","LRSCTF",325,0)
 ;
"RTN","LRSCTF",326,0)
 S LRSUBFILE=$S(LRFILE=61:61.023,LRFILE=61.2:61.223,LRFILE=62:62.023,1:"")
"RTN","LRSCTF",327,0)
 I LRSUBFILE="" Q
"RTN","LRSCTF",328,0)
 ;
"RTN","LRSCTF",329,0)
 ; Store date/time, user and new status
"RTN","LRSCTF",330,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",.01)=LRNOW
"RTN","LRSCTF",331,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",1)=LRSTATUS
"RTN","LRSCTF",332,0)
 S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",3)=$S($G(LRDUZ):LRDUZ,1:DUZ)
"RTN","LRSCTF",333,0)
 ;
"RTN","LRSCTF",334,0)
 ; Store transaction number if any
"RTN","LRSCTF",335,0)
 I LRRECORDFORMAT=2,$G(LRFLD(7))'="" S LRFDA(2,LRSUBFILE,"+2,"_LRFIEN_",",2)=LRFLD(7)
"RTN","LRSCTF",336,0)
 ;
"RTN","LRSCTF",337,0)
 D UPDATE^DIE("","LRFDA(2)","LRFIEN","LRERR(2)")
"RTN","LRSCTF",338,0)
 ;
"RTN","LRSCTF",339,0)
 ; Store execption text in WP field
"RTN","LRSCTF",340,0)
 I LRRECORDFORMAT=1,$G(LRFLD(4))'="" S LRWP(1)="STS Exception: "_LRFLD(4)
"RTN","LRSCTF",341,0)
 I LRRECORDFORMAT=2,$G(LRFLD(6))'="" S LRWP(1)="STS Exception: "_LRFLD(6)
"RTN","LRSCTF",342,0)
 ;
"RTN","LRSCTF",343,0)
 ; Record any reported Lexicon API error
"RTN","LRSCTF",344,0)
 I $G(LRSTATUS("ERR"))'="" D
"RTN","LRSCTF",345,0)
 . N LRCNT
"RTN","LRSCTF",346,0)
 . S LRCNT=$O(LRWP(""),-1)+1
"RTN","LRSCTF",347,0)
 . I LRCNT>1 S LRWP(LRCNT)=" ",LRCNT=LRCNT+1
"RTN","LRSCTF",348,0)
 . S LRWP(LRCNT)="Lexicon API: "_LRSTATUS("ERR")
"RTN","LRSCTF",349,0)
 ;
"RTN","LRSCTF",350,0)
 I $G(LRMAPERR)'="" D  ; ccr_7218n
"RTN","LRSCTF",351,0)
 . N LRCNT
"RTN","LRSCTF",352,0)
 . S LRCNT=$O(LRWP(""),-1)+1
"RTN","LRSCTF",353,0)
 . I LRCNT>1 S LRWP(LRCNT)=" ",LRCNT=LRCNT+1
"RTN","LRSCTF",354,0)
 . S LRWP(LRCNT)="Mapping was not applied: "_LRMAPERR
"RTN","LRSCTF",355,0)
 ;
"RTN","LRSCTF",356,0)
 I $G(LRFLD(10000))'="" D
"RTN","LRSCTF",357,0)
 . N LRCNT
"RTN","LRSCTF",358,0)
 . S LRCNT=$O(LRWP(""),-1)+1
"RTN","LRSCTF",359,0)
 . I LRCNT>1 S LRWP(LRCNT)=" ",LRCNT=LRCNT+1
"RTN","LRSCTF",360,0)
 . S LRWP(LRCNT)="File used to apply mapping and/or disposition: "_LRFLD(10000)
"RTN","LRSCTF",361,0)
 ;
"RTN","LRSCTF",362,0)
 I $D(LRWP) D WP^DIE(LRSUBFILE,LRFIEN(2)_","_LRFIEN_",",4,"A","LRWP","LRERR(3)")
"RTN","LRSCTF",363,0)
 ;
"RTN","LRSCTF",364,0)
 Q
"RTN","LRSCTF1")
0^148^B8364733
"RTN","LRSCTF1",1,0)
LRSCTF1 ;DAL01/JDB - SCT POPULATION/ERT ALERT ;12/22/10  16:08
"RTN","LRSCTF1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSCTF1",3,0)
 ;
"RTN","LRSCTF1",4,0)
 ; Reference to LABXCPT^HDISVAP1 supported by DBIA #5026
"RTN","LRSCTF1",5,0)
 Q
"RTN","LRSCTF1",6,0)
 ;
"RTN","LRSCTF1",7,0)
 ;
"RTN","LRSCTF1",8,0)
NOTIFY(LRTXT,LRFILE,LRFIEN,LRSCT,EXCDATA) ;
"RTN","LRSCTF1",9,0)
 ;LABXCPT^HDISVAP1/5026
"RTN","LRSCTF1",10,0)
 ; Private helper method
"RTN","LRSCTF1",11,0)
 ; Handles ERT/Local notification for "Load Exception" errors.
"RTN","LRSCTF1",12,0)
 ; If an SCT load exception occurs and not in ^XTMP alert ERT.
"RTN","LRSCTF1",13,0)
 ; Inputs
"RTN","LRSCTF1",14,0)
 ;   LRTXT: Code text
"RTN","LRSCTF1",15,0)
 ;  LRFILE: Target file #
"RTN","LRSCTF1",16,0)
 ;  LRFIEN: Target file # IEN
"RTN","LRSCTF1",17,0)
 ;   LRSCT: SCT Code <opt>
"RTN","LRSCTF1",18,0)
 ; EXCDATA:<byref>
"RTN","LRSCTF1",19,0)
 ; Outputs
"RTN","LRSCTF1",20,0)
 ;  String indicating success or error.
"RTN","LRSCTF1",21,0)
 ;     On success returns the new ^XTMP IEN
"RTN","LRSCTF1",22,0)
 ;     On failure returns "0^num^msg"
"RTN","LRSCTF1",23,0)
 ;         ie  "0^1^Term is null"
"RTN","LRSCTF1",24,0)
 ;  Returns transaction # in EXCDATA("TNUM")
"RTN","LRSCTF1",25,0)
 ;
"RTN","LRSCTF1",26,0)
 N DATA,LRIN,NOW,STR,STR2,NOTIFY,SITE
"RTN","LRSCTF1",27,0)
 N TNUM,TMPNM,TEXT,I,II,X,Y,LRHDI,LRHDIERR
"RTN","LRSCTF1",28,0)
 S LRTXT=$G(LRTXT)
"RTN","LRSCTF1",29,0)
 I $TR(LRTXT," ","")="" Q "0^1^Term is null"
"RTN","LRSCTF1",30,0)
 S LRFILE=$G(LRFILE),LRFIEN=$G(LRFIEN),LRSCT=$G(LRSCT)
"RTN","LRSCTF1",31,0)
 S NOTIFY=1 ;status of this process
"RTN","LRSCTF1",32,0)
 S TMPNM="LRSCTF-STS"
"RTN","LRSCTF1",33,0)
 S NOW=$$NOW^XLFDT()
"RTN","LRSCTF1",34,0)
 S TEXT=$$TRIM^XLFSTR(LRTXT),TEXT=$$UP^XLFSTR(TEXT)
"RTN","LRSCTF1",35,0)
 S STR=$E(TEXT,1,200) ;some terms can be long and wont fit in a node
"RTN","LRSCTF1",36,0)
 ; check if this term has been sent already.
"RTN","LRSCTF1",37,0)
 K LRIN
"RTN","LRSCTF1",38,0)
 S LRIN("FILE")=LRFILE,LRIN("SCT")=LRSCT,LRIN("PREV","SCT")=""
"RTN","LRSCTF1",39,0)
 S X=$$OK2LOG^LRERT(.LRTXT,.LRIN,TMPNM)
"RTN","LRSCTF1",40,0)
 I 'X Q "0^2^Notification already sent."
"RTN","LRSCTF1",41,0)
 K DATA,LRHDI,TEXT,STR
"RTN","LRSCTF1",42,0)
 ;
"RTN","LRSCTF1",43,0)
 S TNUM=$$TNUM^LRERT(LRFILE,LRFIEN,NOW,1)
"RTN","LRSCTF1",44,0)
 S EXCDATA("TNUM")=TNUM
"RTN","LRSCTF1",45,0)
 S LRHDI(1,1)=TNUM_"^"_NOW
"RTN","LRSCTF1",46,0)
 S X=$$BLDERTX^LRERT(LRFILE,LRFIEN,"|",.DATA,2,"S")
"RTN","LRSCTF1",47,0)
 S I=0
"RTN","LRSCTF1",48,0)
 F  S I=$O(DATA(I)) Q:'I  S LRHDI(1,1,"SA",I)=DATA(I)
"RTN","LRSCTF1",49,0)
 ; see patch HDI*1.0*7 for array details
"RTN","LRSCTF1",50,0)
 F I=7:1:11  I $G(EXCDATA("SA",I))'="" S LRHDI(1,1,"SA",I)=EXCDATA("SA",I)
"RTN","LRSCTF1",51,0)
 ;
"RTN","LRSCTF1",52,0)
 S LRHDI(1,1,"RD",5)=1
"RTN","LRSCTF1",53,0)
 F I=1:1:6  I $G(EXCDATA("RD",I))'="" S LRHDI(1,1,"RD",I)=EXCDATA("RD",I)
"RTN","LRSCTF1",54,0)
 ;
"RTN","LRSCTF1",55,0)
 S LRHDI(1,1,"TXT")=$G(EXCDATA("TXT"))
"RTN","LRSCTF1",56,0)
 ;
"RTN","LRSCTF1",57,0)
 D LABXCPT^HDISVAP1("LRHDI")
"RTN","LRSCTF1",58,0)
 ; check LRHDI("ERROR")
"RTN","LRSCTF1",59,0)
 K LRHDIERR
"RTN","LRSCTF1",60,0)
 M LRHDIERR("ERROR")=LRHDI("ERROR")
"RTN","LRSCTF1",61,0)
 K LRHDI
"RTN","LRSCTF1",62,0)
 ;
"RTN","LRSCTF1",63,0)
 ; Update ^XTMP
"RTN","LRSCTF1",64,0)
 K LRIN
"RTN","LRSCTF1",65,0)
 S LRIN("TNUM")=TNUM ;trans #
"RTN","LRSCTF1",66,0)
 S LRIN("TDT")=NOW ;trans date/time
"RTN","LRSCTF1",67,0)
 S LRIN("FILE")=LRFILE ; targ file
"RTN","LRSCTF1",68,0)
 S LRIN("FIEN")=LRFIEN ;targ file IEN
"RTN","LRSCTF1",69,0)
 S LRIN("SCT")=LRSCT ;SCT code
"RTN","LRSCTF1",70,0)
 S LRIN("STSEXC")=1 ;STS exception type
"RTN","LRSCTF1",71,0)
 S LRIN("HDIERR")=$S($D(LRHDIERR):1,1:0) ;STS error flag (0 or 1)
"RTN","LRSCTF1",72,0)
 S LRIN("PREV","SCT")=""
"RTN","LRSCTF1",73,0)
 S LRIN("PREV","TEXT")=""
"RTN","LRSCTF1",74,0)
 S X=$$LOGIT^LRERT(.LRTXT,.LRIN,TMPNM)
"RTN","LRSCTF1",75,0)
 I X S EXCDATA("IEN")=X
"RTN","LRSCTF1",76,0)
 I 'X D  ;
"RTN","LRSCTF1",77,0)
 . S Y=$P(X,"^",2)
"RTN","LRSCTF1",78,0)
 . S Y=Y+10 ;new error code group
"RTN","LRSCTF1",79,0)
 . S NOTIFY="0^"_Y_"^$$LOGIT failed: "_$P(X,"^",3)
"RTN","LRSCTF1",80,0)
 I $G(LRHDIERR("ERROR"))'="" S NOTIFY="0^5^LABXCPT failed: "_LRHDIERR("ERROR")
"RTN","LRSCTF1",81,0)
 Q NOTIFY
"RTN","LRSCTX")
0^53^B51489941
"RTN","LRSCTX",1,0)
LRSCTX ;DALOI/FHS/JDB - FIND TERM OR ADD TO FILE ;04/10/12  15:41
"RTN","LRSCTX",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSCTX",3,0)
 ;
"RTN","LRSCTX",4,0)
 Q
"RTN","LRSCTX",5,0)
 ;
"RTN","LRSCTX",6,0)
 ;
"RTN","LRSCTX",7,0)
EN(LRFILE,LRTXT,LRSCT,LRHL7,LRERROR,CHECK) ;
"RTN","LRSCTX",8,0)
 ; Main entry point for LRSCTX.
"RTN","LRSCTX",9,0)
 ; Returns a matching entry for LRTXT in LRFILE or creates a new entry in LRFILE for LRTXT.
"RTN","LRSCTX",10,0)
 ; Called by OBX^LA7VIN7
"RTN","LRSCTX",11,0)
 ;
"RTN","LRSCTX",12,0)
 ; Inputs
"RTN","LRSCTX",13,0)
 ;   LRFILE: File # to search (61, 61.2, 62)
"RTN","LRSCTX",14,0)
 ;    LRTXT: Text to find
"RTN","LRSCTX",15,0)
 ;    LRSCT: <opt> SNOMED CT code
"RTN","LRSCTX",16,0)
 ;    LRHL7: <byref><opt> HL7 info array
"RTN","LRSCTX",17,0)
 ;           ("R4")=File #4 IEN
"RTN","LRSCTX",18,0)
 ;           ("R6247")=File #62.47 IEN
"RTN","LRSCTX",19,0)
 ;           ("FSEC")=HL7 Field separator and Encoding characters
"RTN","LRSCTX",20,0)
 ;           ("MSH",3)=Sending Application
"RTN","LRSCTX",21,0)
 ;           ("MSH",4)=Sending Facility
"RTN","LRSCTX",22,0)
 ;           ("MSH",5)=Receiving Application
"RTN","LRSCTX",23,0)
 ;           ("MSH",6)=Receiving Facility
"RTN","LRSCTX",24,0)
 ;           ("MSH",11)=Message ID
"RTN","LRSCTX",25,0)
 ;           ("OBX",3)=OBX-3 (raw)
"RTN","LRSCTX",26,0)
 ;           ("OBX",5)=OBX-5 (raw)
"RTN","LRSCTX",27,0)
 ;  LRERROR:<byref>  See Outputs
"RTN","LRSCTX",28,0)
 ;    CHECK:<opt> 1=Check for match, dont add
"RTN","LRSCTX",29,0)
 ;
"RTN","LRSCTX",30,0)
 ; Outputs  (record # plus info)
"RTN","LRSCTX",31,0)
 ;    problem: 0^error msg  -OR-  IEN or "IEN^1" (^1=new entry flag)
"RTN","LRSCTX",32,0)
 ;  LRERROR array contains any error message associated.
"RTN","LRSCTX",33,0)
 ;
"RTN","LRSCTX",34,0)
 N DATA,DIERR,I,LR6247,LRDATA,LRFIEN,LRFSEC,LRLEXSCT,LRMSG,LRX,SCTP,NTEXT,X,Y
"RTN","LRSCTX",35,0)
 N NODE,DIERR
"RTN","LRSCTX",36,0)
 S LRFILE=$G(LRFILE)
"RTN","LRSCTX",37,0)
 S LRTXT=$G(LRTXT)
"RTN","LRSCTX",38,0)
 S LRSCT=$G(LRSCT)
"RTN","LRSCTX",39,0)
 S CHECK=$G(CHECK)
"RTN","LRSCTX",40,0)
 S LRFSEC=$G(LRHL7("FSEC"))
"RTN","LRSCTX",41,0)
 S LR6247=$G(LRHL7("R6247"))
"RTN","LRSCTX",42,0)
 I LRFILE'?1(1"61",1"61.2",1"62") Q "0^Unknown file #"_LRFILE
"RTN","LRSCTX",43,0)
 ;
"RTN","LRSCTX",44,0)
 S LRFIEN=0 ;IEN of matching/new file's entry
"RTN","LRSCTX",45,0)
 ;
"RTN","LRSCTX",46,0)
 ; If SCT code, use LEX data if valid SCT code
"RTN","LRSCTX",47,0)
 I LRSCT'="" S LRFIEN=$$CHKSCT(LRFILE,LRSCT,.LRHL7,1)
"RTN","LRSCTX",48,0)
 ;
"RTN","LRSCTX",49,0)
 I LRFIEN Q LRFIEN
"RTN","LRSCTX",50,0)
 I $TR(LRTXT," ","")="" Q "0^Text is empty"
"RTN","LRSCTX",51,0)
 ;
"RTN","LRSCTX",52,0)
 ; Didnt find a valid SCT code/text match so keep searching
"RTN","LRSCTX",53,0)
 ; Search for the text passed in
"RTN","LRSCTX",54,0)
 K NTEXT
"RTN","LRSCTX",55,0)
 S LRFIEN=$$FIND(LRTXT,LRFILE,.NTEXT)
"RTN","LRSCTX",56,0)
 I LRFIEN Q LRFIEN
"RTN","LRSCTX",57,0)
 ;
"RTN","LRSCTX",58,0)
 ; Check SCT database for a text match
"RTN","LRSCTX",59,0)
 S LRX=$$TXT4CS^LRSCT($$TRIM^XLFSTR(LRTXT),"SCT",.DATA)
"RTN","LRSCTX",60,0)
 ; Use SCT code from synonym only if just one SCT matches
"RTN","LRSCTX",61,0)
 I LRX="1" D
"RTN","LRSCTX",62,0)
 . N SCT
"RTN","LRSCTX",63,0)
 . S SCT=$O(DATA(0))
"RTN","LRSCTX",64,0)
 . Q:SCT=""
"RTN","LRSCTX",65,0)
 . S X=$$CODE^LRSCT(SCT,"SCT")
"RTN","LRSCTX",66,0)
 . Q:X'>0  ;valid SCT?
"RTN","LRSCTX",67,0)
 . ; find IEN of associated SCT code in target file
"RTN","LRSCTX",68,0)
 . S LRFIEN=$$SCT2IEN^LA7VHLU6(SCT,LRTXT,"",LRFILE,"","")
"RTN","LRSCTX",69,0)
 . Q:LRFIEN
"RTN","LRSCTX",70,0)
 . ; do a file search for this SCT
"RTN","LRSCTX",71,0)
 . S LRFIEN=$$CHKSCT(LRFILE,SCT,.LRHL7,1)
"RTN","LRSCTX",72,0)
 . Q:LRFIEN
"RTN","LRSCTX",73,0)
 . ; file error
"RTN","LRSCTX",74,0)
 . I 'LRFIEN S X=$P(LRFIEN,"^",2) I X'="" S LRFIEN="O^"_X Q
"RTN","LRSCTX",75,0)
 . K NTEXT
"RTN","LRSCTX",76,0)
 . ; Search for the text passed in (trimmed)
"RTN","LRSCTX",77,0)
 . S LRFIEN=$$FIND($$TRIM^XLFSTR(LRTXT),LRFILE,.NTEXT)
"RTN","LRSCTX",78,0)
 ;
"RTN","LRSCTX",79,0)
 ; No matches so need to add new entry
"RTN","LRSCTX",80,0)
 I 'LRFIEN,'CHECK D
"RTN","LRSCTX",81,0)
 . N LRIN
"RTN","LRSCTX",82,0)
 . K LRERROR
"RTN","LRSCTX",83,0)
 . S LRIN(.01)=$$TRIM^XLFSTR(LRTXT)
"RTN","LRSCTX",84,0)
 . ; new term so set as "refer to ETS"
"RTN","LRSCTX",85,0)
 . S LRIN(21)="REFERRED"
"RTN","LRSCTX",86,0)
 . S LRFIEN=$$FILE^LRSCTX1(LRFILE,.LRIN,.LRERROR,.LRHL7)
"RTN","LRSCTX",87,0)
 . I LRFIEN S LRFIEN=LRFIEN_"^1" ;new entry created
"RTN","LRSCTX",88,0)
 . I 'LRFIEN S X=$P($G(LRERROR),"^",2) I X'="" S LRFIEN="0^"_X
"RTN","LRSCTX",89,0)
 ;
"RTN","LRSCTX",90,0)
 Q LRFIEN
"RTN","LRSCTX",91,0)
 ;
"RTN","LRSCTX",92,0)
 ;
"RTN","LRSCTX",93,0)
CHKSCT(LRFILE,LRSCT,HLINFO,ADD,INACTIVE) ;
"RTN","LRSCTX",94,0)
 ; Private helper method
"RTN","LRSCTX",95,0)
 ; Checks for an SCT match.  If no existing LRFILE entry is found using the LEX data, a new entry in LRFILE will be created automatically.
"RTN","LRSCTX",96,0)
 ; Inputs
"RTN","LRSCTX",97,0)
 ;    LRFILE: File number to search/add entry to (61, 61.2, 62)
"RTN","LRSCTX",98,0)
 ;     LRSCT: SCT Code to use for search
"RTN","LRSCTX",99,0)
 ;    HLINFO:<byref> (from EN^LRSCTX)
"RTN","LRSCTX",100,0)
 ;       ADD:<opt> dflt=0  0=dont add new entry  1=add new entry
"RTN","LRSCTX",101,0)
 ;  INACTIVE: <opt>0 or 1 <dflt=0>  1=use SCT even if inactive
"RTN","LRSCTX",102,0)
 ; Outputs
"RTN","LRSCTX",103,0)
 ;  The IEN of the entry found or created.
"RTN","LRSCTX",104,0)
 ;  If a file error occurred, output=0 and the second "^" piece  contains error info.  ie  "0^Unknown file #"
"RTN","LRSCTX",105,0)
 ;
"RTN","LRSCTX",106,0)
 N DATA,I,LRERROR,LRFIEN,LRLEXSCT,LRIN,NODE,NTEXT,SCTP,X,Y
"RTN","LRSCTX",107,0)
 S LRFILE=$G(LRFILE),LRSCT=$G(LRSCT),INACTIVE=$G(INACTIVE,0),ADD=$G(ADD,0)
"RTN","LRSCTX",108,0)
 S LRFIEN=0
"RTN","LRSCTX",109,0)
 ;
"RTN","LRSCTX",110,0)
 ; SCT code in target file?
"RTN","LRSCTX",111,0)
 I LRFILE,LRSCT'="" S LRFIEN=$$SCT2IEN^LA7VHLU6(LRSCT,"","",LRFILE,"","")
"RTN","LRSCTX",112,0)
 ;
"RTN","LRSCTX",113,0)
 ; Get SCT info from LEX
"RTN","LRSCTX",114,0)
 I 'LRFIEN D
"RTN","LRSCTX",115,0)
 . N DATA,LR6247,SCTHIER
"RTN","LRSCTX",116,0)
 . S LRLEXSCT=$$CODE^LRSCT(LRSCT,"SCT","","DATA")
"RTN","LRSCTX",117,0)
 . Q:LRLEXSCT=-1
"RTN","LRSCTX",118,0)
 . I 'INACTIVE Q:LRLEXSCT'>0  ; dont use if invalid SCT code
"RTN","LRSCTX",119,0)
 . I INACTIVE I LRLEXSCT'>0!(LRLEXSCT'=-2) Q
"RTN","LRSCTX",120,0)
 . S SCTHIER=$P($G(DATA(0)),"^",2)
"RTN","LRSCTX",121,0)
 . ; check for targ file matches on SCT main, preferred, & synonyms
"RTN","LRSCTX",122,0)
 . S X=$G(DATA("F"))
"RTN","LRSCTX",123,0)
 . I X'="" S LRFIEN=$$FIND(X,LRFILE,.NTEXT)
"RTN","LRSCTX",124,0)
 . Q:LRFIEN
"RTN","LRSCTX",125,0)
 . S (X,SCTP)=$G(DATA("P"))
"RTN","LRSCTX",126,0)
 . S:SCTP="" SCTP=DATA("F")
"RTN","LRSCTX",127,0)
 . I X'="" S LRFIEN=$$FIND(X,LRFILE,.NTEXT)
"RTN","LRSCTX",128,0)
 . Q:LRFIEN
"RTN","LRSCTX",129,0)
 . ; re-sort "S"YNonym array from longest $L to shortest this results in using abbreviations as last resort
"RTN","LRSCTX",130,0)
 . K Y
"RTN","LRSCTX",131,0)
 . S I=0
"RTN","LRSCTX",132,0)
 . F  S I=$O(DATA("S",I)) Q:'I  D  ;
"RTN","LRSCTX",133,0)
 . . S X=DATA("S",I)
"RTN","LRSCTX",134,0)
 . . S Y(65536-$L(X),I)=X
"RTN","LRSCTX",135,0)
 . I $D(Y) K DATA("S") M DATA("S")=Y K Y
"RTN","LRSCTX",136,0)
 . ;
"RTN","LRSCTX",137,0)
 . S NODE="DATA(""S"")"
"RTN","LRSCTX",138,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,1)'="S"  D  Q:LRFIEN  ;
"RTN","LRSCTX",139,0)
 . . S X=@NODE
"RTN","LRSCTX",140,0)
 . . I X'="" S LRFIEN=$$FIND(X,LRFILE,.NTEXT)
"RTN","LRSCTX",141,0)
 . ;
"RTN","LRSCTX",142,0)
 . Q:LRFIEN
"RTN","LRSCTX",143,0)
 . I 'ADD S LRFIEN="0^Function CHKSCT auto-add disabled" Q
"RTN","LRSCTX",144,0)
 . ;
"RTN","LRSCTX",145,0)
 . ; add new entry into target file using LEX info and stop
"RTN","LRSCTX",146,0)
 . K LRIN
"RTN","LRSCTX",147,0)
 . S LRIN(.01)=$$DELHIER^LRSCT(SCTP) ; SCT Preferred term
"RTN","LRSCTX",148,0)
 . I LRLEXSCT D  ; only set SCT info if valid SCT code
"RTN","LRSCTX",149,0)
 . . S LRIN(20)=LRSCT
"RTN","LRSCTX",150,0)
 . . S LRIN(21)="PREFERRED TERM"
"RTN","LRSCTX",151,0)
 . . S X=SCTHIER
"RTN","LRSCTX",152,0)
 . . I X'="" S X="SCT "_X
"RTN","LRSCTX",153,0)
 . . I $D(^LAB(64.061,"C",$$UP^XLFSTR(X))) D  ;
"RTN","LRSCTX",154,0)
 . . . S LRIN(22)=X
"RTN","LRSCTX",155,0)
 . . ;
"RTN","LRSCTX",156,0)
 . ;
"RTN","LRSCTX",157,0)
 . S LR6247=$G(HLINFO("R6247"))
"RTN","LRSCTX",158,0)
 . S LRFIEN=$$FILE^LRSCTX1(LRFILE,.LRIN,.LRERROR,.HLINFO)
"RTN","LRSCTX",159,0)
 . I LRFIEN S LRFIEN=LRFIEN_"^1" ; indicates new entry
"RTN","LRSCTX",160,0)
 . I 'LRFIEN S LRFIEN="0^"_$P($G(LRERROR),"^",2)
"RTN","LRSCTX",161,0)
 ;
"RTN","LRSCTX",162,0)
 Q LRFIEN
"RTN","LRSCTX",163,0)
 ;
"RTN","LRSCTX",164,0)
 ;
"RTN","LRSCTX",165,0)
FIND(LRTXT,LRFILE,NTEXT) ;
"RTN","LRSCTX",166,0)
 ; Private helper method
"RTN","LRSCTX",167,0)
 ; Tries to find a matching text entry in the file specified.
"RTN","LRSCTX",168,0)
 ; Inputs
"RTN","LRSCTX",169,0)
 ;   LRTXT: Text of term
"RTN","LRSCTX",170,0)
 ;  LRFILE: File # to use
"RTN","LRSCTX",171,0)
 ;   NTEXT:<byref> See Outputs
"RTN","LRSCTX",172,0)
 ; Outputs
"RTN","LRSCTX",173,0)
 ;   0 if no match, else the IEN of the matching record.
"RTN","LRSCTX",174,0)
 ;   NTEXT: New text to use for .01 field
"RTN","LRSCTX",175,0)
 ;
"RTN","LRSCTX",176,0)
 ; Converts  ^  to  ~
"RTN","LRSCTX",177,0)
 ; Looks for exact match in LRFILE on B & C xrefs.
"RTN","LRSCTX",178,0)
 ; $$TRIMs LRTXT then looks for any match in xref B & xref C
"RTN","LRSCTX",179,0)
 ; Passes an array of possible matches to $$FIND
"RTN","LRSCTX",180,0)
 ; Strips off any SCT hierarchy text and tries again
"RTN","LRSCTX",181,0)
 ; If no match returns 0
"RTN","LRSCTX",182,0)
 ;
"RTN","LRSCTX",183,0)
 N LRNIEN,DIERR,LRDATA,LRMSG,TXT2,X
"RTN","LRSCTX",184,0)
 S LRTXT=$G(LRTXT)
"RTN","LRSCTX",185,0)
 S LRFILE=$G(LRFILE)
"RTN","LRSCTX",186,0)
 S LRNIEN=0
"RTN","LRSCTX",187,0)
 S LRTXT=$TR(LRTXT,"^","~") ;also in FILE method
"RTN","LRSCTX",188,0)
 ;exact text match?
"RTN","LRSCTX",189,0)
 S LRNIEN=$$FIND1^DIC(LRFILE,,"OX",LRTXT,"B^C",,"LRMSG")
"RTN","LRSCTX",190,0)
 I LRNIEN Q LRNIEN
"RTN","LRSCTX",191,0)
 ;
"RTN","LRSCTX",192,0)
 ; check B index first
"RTN","LRSCTX",193,0)
 K LRDATA,LRMSG,DIERR
"RTN","LRSCTX",194,0)
 D FIND^DIC(LRFILE,,"@;.01;20","M",$$TRIM^XLFSTR(LRTXT),,"B",,,"LRDATA","LRMSG")
"RTN","LRSCTX",195,0)
 S LRNIEN=$$MATCH(LRTXT,.LRDATA)
"RTN","LRSCTX",196,0)
 ;
"RTN","LRSCTX",197,0)
 ; check C index (synonym)
"RTN","LRSCTX",198,0)
 I 'LRNIEN D  ;
"RTN","LRSCTX",199,0)
 . K LRDATA,LRMSG,DIERR
"RTN","LRSCTX",200,0)
 . D FIND^DIC(LRFILE,,"@;.01;20","M",$$TRIM^XLFSTR(LRTXT),,"C",,,"LRDATA","LRMSG")
"RTN","LRSCTX",201,0)
 . Q:'$D(LRDATA("DILIST",2))
"RTN","LRSCTX",202,0)
 . S LRNIEN=$$MATCH(LRTXT,.LRDATA)
"RTN","LRSCTX",203,0)
 ;
"RTN","LRSCTX",204,0)
 ; strip SCT top level name off and try again ie: this is text (body structure)
"RTN","LRSCTX",205,0)
 S X=$$TRIM^XLFSTR(LRTXT)
"RTN","LRSCTX",206,0)
 ; last char = ) and also contains a (
"RTN","LRSCTX",207,0)
 I 'LRNIEN I $E(X,$L(X),$L(X))=")" I X["(" D  ;
"RTN","LRSCTX",208,0)
 . S TXT2=$$DELHIER^LRSCT(X)
"RTN","LRSCTX",209,0)
 . Q:X=TXT2
"RTN","LRSCTX",210,0)
 . K LRDATA,LRMSG,DIERR
"RTN","LRSCTX",211,0)
 . D FIND^DIC(LRFILE,,"@;.01;20","M",TXT2,,"B",,,"LRDATA","LRMSG")
"RTN","LRSCTX",212,0)
 . S LRNIEN=$$MATCH(TXT2,.LRDATA)
"RTN","LRSCTX",213,0)
 . I LRNIEN D  Q  ;
"RTN","LRSCTX",214,0)
 . . S NTEXT=TXT2
"RTN","LRSCTX",215,0)
 . ;
"RTN","LRSCTX",216,0)
 . Q:LRNIEN
"RTN","LRSCTX",217,0)
 . ; check C index (synonym)
"RTN","LRSCTX",218,0)
 . K LRDATA,LRMSG,DIERR
"RTN","LRSCTX",219,0)
 . D FIND^DIC(LRFILE,,"@;.01;20","M",TXT2,,"C",,,"LRDATA","LRMSG")
"RTN","LRSCTX",220,0)
 . I $D(LRDATA("DILIST",2)) D  ;
"RTN","LRSCTX",221,0)
 . . S LRNIEN=$$MATCH(TXT2,.LRDATA)
"RTN","LRSCTX",222,0)
 . . I LRNIEN S NTEXT=TXT2
"RTN","LRSCTX",223,0)
 . ;
"RTN","LRSCTX",224,0)
 ;
"RTN","LRSCTX",225,0)
 Q LRNIEN
"RTN","LRSCTX",226,0)
 ;
"RTN","LRSCTX",227,0)
 ;
"RTN","LRSCTX",228,0)
MATCH(TEXT,DATA) ;
"RTN","LRSCTX",229,0)
 ; Private helper method
"RTN","LRSCTX",230,0)
 ; Scan the DATA array for an entry that matches TEXT.
"RTN","LRSCTX",231,0)
 ; Inputs
"RTN","LRSCTX",232,0)
 ;  TEXT: The .01 text to match on
"RTN","LRSCTX",233,0)
 ;  DATA: <byref> a DILIST array from FIND^DIC
"RTN","LRSCTX",234,0)
 ; Outputs
"RTN","LRSCTX",235,0)
 ;  0 = no match  or  the IEN of the matching record.
"RTN","LRSCTX",236,0)
 ;
"RTN","LRSCTX",237,0)
 ; Note: $$TRIMS and $$UPs for text comparisons.
"RTN","LRSCTX",238,0)
 ; 1) Looks for entries in DATA that have an SCT code. If TEXT matches .01 text use that entry.
"RTN","LRSCTX",239,0)
 ; 2) If no entries with SCT code match, check rest of DATA array.
"RTN","LRSCTX",240,0)
 ;
"RTN","LRSCTX",241,0)
 N I,LRIEN,REC,NM,SCT,TXT2
"RTN","LRSCTX",242,0)
 S TEXT=$G(TEXT)
"RTN","LRSCTX",243,0)
 S TXT2=$$TRIM^XLFSTR($$UP^XLFSTR(TEXT))
"RTN","LRSCTX",244,0)
 S LRIEN=0
"RTN","LRSCTX",245,0)
 ; find one with an SCT code first
"RTN","LRSCTX",246,0)
 S I=0
"RTN","LRSCTX",247,0)
 F  S I=$O(DATA("DILIST","ID",I)) Q:'I  D  Q:LRIEN  ;
"RTN","LRSCTX",248,0)
 . S SCT=DATA("DILIST","ID",I,20)
"RTN","LRSCTX",249,0)
 . Q:SCT=""
"RTN","LRSCTX",250,0)
 . ; Should it only be a valid SCT code? does name match?
"RTN","LRSCTX",251,0)
 . S REC=DATA("DILIST",2,I)
"RTN","LRSCTX",252,0)
 . S NM=DATA("DILIST","ID",I,.01)
"RTN","LRSCTX",253,0)
 . Q:$$TRIM^XLFSTR($$UP^XLFSTR(NM))'=TXT2
"RTN","LRSCTX",254,0)
 . S LRIEN=REC
"RTN","LRSCTX",255,0)
 ;
"RTN","LRSCTX",256,0)
 I LRIEN Q LRIEN
"RTN","LRSCTX",257,0)
 S I=0
"RTN","LRSCTX",258,0)
 F  S I=$O(DATA("DILIST",2,I)) Q:'I  D  Q:LRIEN  ;
"RTN","LRSCTX",259,0)
 . S REC=DATA("DILIST",2,I)
"RTN","LRSCTX",260,0)
 . S NM=DATA("DILIST","ID",I,.01)
"RTN","LRSCTX",261,0)
 . Q:$$TRIM^XLFSTR($$UP^XLFSTR(NM))'=TXT2
"RTN","LRSCTX",262,0)
 . S LRIEN=REC
"RTN","LRSCTX",263,0)
 Q LRIEN
"RTN","LRSCTX1")
0^132^B48804373
"RTN","LRSCTX1",1,0)
LRSCTX1 ;DALOI/JDB - LRSCTX CONTINUED ;04/16/12  10:07
"RTN","LRSCTX1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSCTX1",3,0)
 ;
"RTN","LRSCTX1",4,0)
 ; Reference to LABXCPT^HDISVAP1 supported by DBIA #5026
"RTN","LRSCTX1",5,0)
 ;
"RTN","LRSCTX1",6,0)
 Q
"RTN","LRSCTX1",7,0)
 ;
"RTN","LRSCTX1",8,0)
 ;
"RTN","LRSCTX1",9,0)
FILE(LRFILE,LRIN,LRERROR,HLINFO) ;
"RTN","LRSCTX1",10,0)
 ; Private helper method
"RTN","LRSCTX1",11,0)
 ; Set the new term into the target file
"RTN","LRSCTX1",12,0)
 ; Inputs
"RTN","LRSCTX1",13,0)
 ;   LRFILE: Target File # (61, 61.2, 62)
"RTN","LRSCTX1",14,0)
 ;     LRIN:<byref><opt> Array holding field values.
"RTN","LRSCTX1",15,0)
 ;         :  .01=New entry's .01 field value
"RTN","LRSCTX1",16,0)
 ;         :   20=SCT Code
"RTN","LRSCTX1",17,0)
 ;         :   21=SCT Status code
"RTN","LRSCTX1",18,0)
 ;         :   22=SCT Hierarchy text
"RTN","LRSCTX1",19,0)
 ;  LRERROR:<byref>  See Outputs
"RTN","LRSCTX1",20,0)
 ;   HLINFO:<byref> HL7 info array (from EN^LRSCTX)
"RTN","LRSCTX1",21,0)
 ; Outputs
"RTN","LRSCTX1",22,0)
 ;   The IEN of the entry to use
"RTN","LRSCTX1",23,0)
 ;   LRERROR: Error message for the process.
"RTN","LRSCTX1",24,0)
 ;
"RTN","LRSCTX1",25,0)
 ; $$TRIMS, $$UPs, Removes SCT hierarchy, converts ^ to ~
"RTN","LRSCTX1",26,0)
 N DIERR,LRLCK,LRNIEN,LRFDAIEN,LRMSG,X,Y,LRFMERTS
"RTN","LRSCTX1",27,0)
 N LRFDA,LRFDAIEN,LRMSG,LRIEN,DIERR
"RTN","LRSCTX1",28,0)
 S LRFILE=$G(LRFILE)
"RTN","LRSCTX1",29,0)
 S LRNIEN=0
"RTN","LRSCTX1",30,0)
 K LRERROR
"RTN","LRSCTX1",31,0)
 S LRERROR=""
"RTN","LRSCTX1",32,0)
 S LRLCK=""
"RTN","LRSCTX1",33,0)
 I LRFILE=61 S LRLCK="^LAB(61,0)"
"RTN","LRSCTX1",34,0)
 I LRFILE=61.2 S LRLCK="^LAB(61.2,0)"
"RTN","LRSCTX1",35,0)
 I LRFILE=62 S LRLCK="^LAB(62,0)"
"RTN","LRSCTX1",36,0)
 I LRLCK="" D  Q 0  ;
"RTN","LRSCTX1",37,0)
 . S LRERROR="1^Unknown file # "_LRFILE
"RTN","LRSCTX1",38,0)
 ;
"RTN","LRSCTX1",39,0)
 I $TR($G(LRIN(.01))," ","")="" D  Q 0  ;
"RTN","LRSCTX1",40,0)
 . S LRERROR="1^Term is null"
"RTN","LRSCTX1",41,0)
 ;
"RTN","LRSCTX1",42,0)
 I 'LRERROR D  ;
"RTN","LRSCTX1",43,0)
 . S X=$$GETLOCK^LRUTIL(LRLCK,30)
"RTN","LRSCTX1",44,0)
 . I 'X D  Q  ;
"RTN","LRSCTX1",45,0)
 . . S LRERROR="1^Could not lock file # "_LRFILE
"RTN","LRSCTX1",46,0)
 . ;
"RTN","LRSCTX1",47,0)
 . ; Only set the .01 field first to ensure record creation
"RTN","LRSCTX1",48,0)
 . K LRFDA,LRFDAIEN,LRMSG,LRIEN,DIERR
"RTN","LRSCTX1",49,0)
 . S LRIEN="+1,"
"RTN","LRSCTX1",50,0)
 . S X=$G(LRIN(.01))
"RTN","LRSCTX1",51,0)
 . S X=$$DELHIER^LRSCT(X) ;remove SCT hierarchy if present
"RTN","LRSCTX1",52,0)
 . S X=$$TRIM^XLFSTR(X)
"RTN","LRSCTX1",53,0)
 . S X=$$UP^XLFSTR(X)
"RTN","LRSCTX1",54,0)
 . S X=$TR(X,"^","~")
"RTN","LRSCTX1",55,0)
 . ; LRFMERTS provides info to FileMan during db updates.
"RTN","LRSCTX1",56,0)
 . ; STS team tracks changes for ref lab, local mods, and db loads.
"RTN","LRSCTX1",57,0)
 . ; Must know what triggered FM so correct STS notice is sent.
"RTN","LRSCTX1",58,0)
 . ; LRFMERTS referenced in FM xrefs for creation/change events
"RTN","LRSCTX1",59,0)
 . ; If '$G(LRFMERTS) then must be user/local change
"RTN","LRSCTX1",60,0)
 . S LRFMERTS=1
"RTN","LRSCTX1",61,0)
 . S LRFMERTS("STS","STAT")="NEW" ;new term
"RTN","LRSCTX1",62,0)
 . S LRFMERTS("STS","PROC")="REFLAB" ;from reference lab
"RTN","LRSCTX1",63,0)
 . S LRFDA(1,LRFILE,LRIEN,.01)=X
"RTN","LRSCTX1",64,0)
 . D UPDATE^DIE("","LRFDA(1)","LRFDAIEN","LRMSG")
"RTN","LRSCTX1",65,0)
 . S LRNIEN=$G(LRFDAIEN(1))
"RTN","LRSCTX1",66,0)
 . I $D(LRMSG)!'LRNIEN D  Q  ;
"RTN","LRSCTX1",67,0)
 . . S LRERROR="1^Failed to add new entry to file #"_LRFILE
"RTN","LRSCTX1",68,0)
 . ;
"RTN","LRSCTX1",69,0)
 . Q:'LRNIEN
"RTN","LRSCTX1",70,0)
 . K LRFDA,LRFDAIEN,LRMSG,LRIEN,DIERR
"RTN","LRSCTX1",71,0)
 . S LRIEN=LRNIEN_","
"RTN","LRSCTX1",72,0)
 . S LRFDA(1,LRFILE,LRIEN,21)=$G(LRIN(21)) ;status
"RTN","LRSCTX1",73,0)
 . I $G(LRIN(20))'="" D  ;
"RTN","LRSCTX1",74,0)
 . . S LRFDA(1,LRFILE,LRIEN,20)=$G(LRIN(20))
"RTN","LRSCTX1",75,0)
 . . S LRFDA(1,LRFILE,LRIEN,22)=$G(LRIN(22))
"RTN","LRSCTX1",76,0)
 . D FILE^DIE("E","LRFDA(1)","LRMSG")
"RTN","LRSCTX1",77,0)
 ;
"RTN","LRSCTX1",78,0)
 ; Release lock
"RTN","LRSCTX1",79,0)
 I LRLCK'="" L -@LRLCK
"RTN","LRSCTX1",80,0)
 ;
"RTN","LRSCTX1",81,0)
 ; Notify STS and locals that term has been added.
"RTN","LRSCTX1",82,0)
 I 'LRERROR,LRNIEN D
"RTN","LRSCTX1",83,0)
 . S X=$$NOTIFY(LRIN(.01),LRFILE,LRNIEN,$G(LRIN(20)),.HLINFO)
"RTN","LRSCTX1",84,0)
 ;
"RTN","LRSCTX1",85,0)
 Q LRNIEN
"RTN","LRSCTX1",86,0)
 ;
"RTN","LRSCTX1",87,0)
 ;
"RTN","LRSCTX1",88,0)
NOTIFY(LRTXT,LRFILE,LRFIEN,LRSCT,HLINFO) ;
"RTN","LRSCTX1",89,0)
 ;LABXCPT^HDISVAP1/5026
"RTN","LRSCTX1",90,0)
 ; Private helper method
"RTN","LRSCTX1",91,0)
 ; Handles STS/Local notification for "Reference lab" new terms.
"RTN","LRSCTX1",92,0)
 ; If a new term has been added and not in ^XTMP:
"RTN","LRSCTX1",93,0)
 ;  1) alert STS  2) Add entry to ^XTMP  3) Email LAB MAPPING group
"RTN","LRSCTX1",94,0)
 ; Inputs
"RTN","LRSCTX1",95,0)
 ;   LRTXT:
"RTN","LRSCTX1",96,0)
 ;  HLINFO:<byref>
"RTN","LRSCTX1",97,0)
 ; Outputs
"RTN","LRSCTX1",98,0)
 ;  String indicating success or error: Status^Error code^text
"RTN","LRSCTX1",99,0)
 ;     Status: 1=success  0=error
"RTN","LRSCTX1",100,0)
 ;  ie  "0^1^Term is null"  "0^4^"STS & MailMan error"
"RTN","LRSCTX1",101,0)
 ;
"RTN","LRSCTX1",102,0)
 N DATA,SFNM,LR4,LRIN,NOW,SFAC,STR,STR2,NOTIFY,SITE
"RTN","LRSCTX1",103,0)
 N TNUM,TMPNM,TEXT,TYPE,VAF,I,II,X,Y,LRHDI,LRHDIERR
"RTN","LRSCTX1",104,0)
 S LRTXT=$G(LRTXT)
"RTN","LRSCTX1",105,0)
 I $TR(LRTXT," ","")="" Q "0^1^Term is null"
"RTN","LRSCTX1",106,0)
 S LRFILE=$G(LRFILE)
"RTN","LRSCTX1",107,0)
 S LRFIEN=$G(LRFIEN)
"RTN","LRSCTX1",108,0)
 S LRSCT=$G(LRSCT)
"RTN","LRSCTX1",109,0)
 S LR6247=$G(LR6247)
"RTN","LRSCTX1",110,0)
 S NOTIFY=1 ;status of this process
"RTN","LRSCTX1",111,0)
 S TMPNM="LRSCTX-STS"
"RTN","LRSCTX1",112,0)
 S NOW=$$NOW^XLFDT()
"RTN","LRSCTX1",113,0)
 S TEXT=$$TRIM^XLFSTR(LRTXT)
"RTN","LRSCTX1",114,0)
 S TEXT=$$UP^XLFSTR(TEXT)
"RTN","LRSCTX1",115,0)
 S STR=$E(TEXT,1,200) ;some terms can be long and wont fit in a node
"RTN","LRSCTX1",116,0)
 ; check if this term has been sent already.
"RTN","LRSCTX1",117,0)
 K LRIN
"RTN","LRSCTX1",118,0)
 S LRIN("FILE")=LRFILE
"RTN","LRSCTX1",119,0)
 S LRIN("SCT")=LRSCT
"RTN","LRSCTX1",120,0)
 S LRIN("PREV","SCT")=""
"RTN","LRSCTX1",121,0)
 S X=$$OK2LOG^LRERT(.LRTXT,.LRIN)
"RTN","LRSCTX1",122,0)
 I 'X Q "0^2^Notification already sent."
"RTN","LRSCTX1",123,0)
 K TEXT,STR
"RTN","LRSCTX1",124,0)
 S TYPE=0
"RTN","LRSCTX1",125,0)
 S SFNM="" ; Institution Name
"RTN","LRSCTX1",126,0)
 S LR4=$G(HLINFO("R4"))
"RTN","LRSCTX1",127,0)
 S SFAC=$G(HLINFO("MSH",4)) ; sending facility
"RTN","LRSCTX1",128,0)
 I LR4 D
"RTN","LRSCTX1",129,0)
 . S SFNM=$$NAME^XUAF4(LR4) ; sending facility's name
"RTN","LRSCTX1",130,0)
 . S VAF=$$NVAF^LA7VHLU2(LR4) ; 0=VA 1=DOD, 2=Indian Health 3=Other
"RTN","LRSCTX1",131,0)
 . S TYPE=$S(VAF=0:2,VAF=1:1,VAF=2:4,VAF=3:5,1:6)
"RTN","LRSCTX1",132,0)
 ;
"RTN","LRSCTX1",133,0)
 S TNUM=$$TNUM^LRERT(LRFILE,LRFIEN,NOW,2)
"RTN","LRSCTX1",134,0)
 K LRHDI
"RTN","LRSCTX1",135,0)
 S LRHDI(2,1)=TNUM_"^"_NOW
"RTN","LRSCTX1",136,0)
 S LRHDI(2,1,"TXT")="Term added to file #"_LRFILE_" (entry #"_LRFIEN_")"
"RTN","LRSCTX1",137,0)
 S LRHDI(2,1,"EC")=$G(HLINFO("FSEC"))
"RTN","LRSCTX1",138,0)
 K DATA
"RTN","LRSCTX1",139,0)
 S X=$$BLDERTX^LRERT(LRFILE,LRFIEN,"|",.DATA,2,"S")
"RTN","LRSCTX1",140,0)
 ;
"RTN","LRSCTX1",141,0)
 S I=0
"RTN","LRSCTX1",142,0)
 F  S I=$O(DATA(I)) Q:'I  S LRHDI(2,1,"SA",I)=DATA(I)
"RTN","LRSCTX1",143,0)
 ;
"RTN","LRSCTX1",144,0)
 S LRHDI(2,1,"RL",1)=TYPE
"RTN","LRSCTX1",145,0)
 S LRHDI(2,1,"RL",2)=SFAC
"RTN","LRSCTX1",146,0)
 S LRHDI(2,1,"RL",3)=SFNM
"RTN","LRSCTX1",147,0)
 S LRHDI(2,1,"OBX",3)=$G(HLINFO("OBX",3))
"RTN","LRSCTX1",148,0)
 S LRHDI(2,1,"OBX",5)=$G(HLINFO("OBX",5))
"RTN","LRSCTX1",149,0)
 ;
"RTN","LRSCTX1",150,0)
 D LABXCPT^HDISVAP1("LRHDI")
"RTN","LRSCTX1",151,0)
 ; check LRHDI("ERROR") and add error to local email
"RTN","LRSCTX1",152,0)
 K LRHDIERR
"RTN","LRSCTX1",153,0)
 M LRHDIERR("ERROR")=LRHDI("ERROR")
"RTN","LRSCTX1",154,0)
 K LRHDI
"RTN","LRSCTX1",155,0)
 ;
"RTN","LRSCTX1",156,0)
 ; Update ^XTMP
"RTN","LRSCTX1",157,0)
 K LRIN
"RTN","LRSCTX1",158,0)
 S LRIN("TNUM")=TNUM ;trans #
"RTN","LRSCTX1",159,0)
 S LRIN("TDT")=NOW ;trans date/time
"RTN","LRSCTX1",160,0)
 S LRIN("FILE")=LRFILE ; targ file
"RTN","LRSCTX1",161,0)
 S LRIN("FIEN")=LRFIEN ;targ file IEN
"RTN","LRSCTX1",162,0)
 S LRIN("SCT")=LRSCT ;SCT code
"RTN","LRSCTX1",163,0)
 S LRIN("R6247")=LR6247 ;#62.49 IEN
"RTN","LRSCTX1",164,0)
 S LRIN("STSEXC")=2 ;STS exception type
"RTN","LRSCTX1",165,0)
 S LRIN("HDIERR")=$S($D(LRHDIERR):1,1:0) ;STS error flag (0 or 1)
"RTN","LRSCTX1",166,0)
 S LRIN("PREV","SCT")=""
"RTN","LRSCTX1",167,0)
 S LRIN("PREV","TEXT")=""
"RTN","LRSCTX1",168,0)
 S X=$$LOGIT^LRERT(.LRTXT,.LRIN)
"RTN","LRSCTX1",169,0)
 K LRIN
"RTN","LRSCTX1",170,0)
 ;
"RTN","LRSCTX1",171,0)
 ; Notify local staff of event (G.LAB MAPPING)
"RTN","LRSCTX1",172,0)
 N LRFILENAME,LRMTXT,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,XMMG
"RTN","LRSCTX1",173,0)
 S LRFILENAME=$$GET1^DID(LRFILE,"","","NAME")
"RTN","LRSCTX1",174,0)
 ;
"RTN","LRSCTX1",175,0)
 S XMSUB="Term added to file "_LRFILENAME_" (#"_LRFILE_":"_LRFIEN_")"
"RTN","LRSCTX1",176,0)
 I $L(XMSUB)>65 S XMSUB=$E(XMSUB,1,65)
"RTN","LRSCTX1",177,0)
 ;
"RTN","LRSCTX1",178,0)
 S LRMTXT(1,0)="New term added to file "_LRFILENAME_" #"_LRFILE_" (entry #"_LRFIEN_")"
"RTN","LRSCTX1",179,0)
 S LRMTXT(2,0)=" "
"RTN","LRSCTX1",180,0)
 S LRMTXT(3,0)="New Term: "_LRTXT
"RTN","LRSCTX1",181,0)
 S LRMTXT(4,0)=" "
"RTN","LRSCTX1",182,0)
 S LRMTXT(5,0)="Tracking information below:"
"RTN","LRSCTX1",183,0)
 S LRMTXT(6,0)="Transaction date: "_$$FMTE^XLFDT(NOW)
"RTN","LRSCTX1",184,0)
 S LRMTXT(7,0)="Transaction number: "_TNUM
"RTN","LRSCTX1",185,0)
 S LRMTXT(8,0)="Sending facility: "_SFAC_"  "_SFNM
"RTN","LRSCTX1",186,0)
 S LRMTXT(9,0)="HL7 message ID: "_$G(HLINFO("MSH",11))
"RTN","LRSCTX1",187,0)
 S LRMTXT(10,0)="SNOMED CT code: "_$S(LRSCT'="":LRSCT,1:"n/a")
"RTN","LRSCTX1",188,0)
 S LRMTXT(11,0)=" "
"RTN","LRSCTX1",189,0)
 S LRMTXT(12,0)="HL7 separators: "_$G(HLINFO("FSEC"))
"RTN","LRSCTX1",190,0)
 S LRMTXT(13,0)="OBX-3: "_$G(HLINFO("OBX",3))
"RTN","LRSCTX1",191,0)
 S LRMTXT(14,0)="OBX-5: "_$G(HLINFO("OBX",5))
"RTN","LRSCTX1",192,0)
 ;
"RTN","LRSCTX1",193,0)
 I $D(LRHDIERR) D
"RTN","LRSCTX1",194,0)
 . N NODE
"RTN","LRSCTX1",195,0)
 . S LRMTXT(15,0)=" "
"RTN","LRSCTX1",196,0)
 . S LRMTXT(16,0)="An error occurred when notifying STS:"
"RTN","LRSCTX1",197,0)
 . S NODE="LRHDIERR(0)"
"RTN","LRSCTX1",198,0)
 . S I=$O(LRMTXT("A"),-1)
"RTN","LRSCTX1",199,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  S I=I+1,LRMTXT(I,0)="    "_NODE
"RTN","LRSCTX1",200,0)
 ;
"RTN","LRSCTX1",201,0)
 ;
"RTN","LRSCTX1",202,0)
 S X=$$UP^XLFSTR($$NAME^XUSER(DUZ,"F"))
"RTN","LRSCTX1",203,0)
 ; If not a Lab app proxy name, use LRLAB,HL as sender
"RTN","LRSCTX1",204,0)
 ; Extra space in "LRLAB, HL" is a workaround for MailMan's "may not be a real user" error when App Proxy user in XMDUZ
"RTN","LRSCTX1",205,0)
 I X=""!(X'?1"LRLAB,"1.E) S XMDUZ="LRLAB, HL"
"RTN","LRSCTX1",206,0)
 ;
"RTN","LRSCTX1",207,0)
 I $$GOTLOCAL^XMXAPIG("LAB MAPPING") S XMY("G.LAB MAPPING")=""
"RTN","LRSCTX1",208,0)
 E  S XMY("G.LMI")=""
"RTN","LRSCTX1",209,0)
 ;
"RTN","LRSCTX1",210,0)
 S XMTEXT="LRMTXT("
"RTN","LRSCTX1",211,0)
 D ^XMD
"RTN","LRSCTX1",212,0)
 I $D(XMMG)!'$G(XMZ) D  ;
"RTN","LRSCTX1",213,0)
 . I $D(LRHDIERR) S NOTIFY="0^3^STS & Mailman error" Q
"RTN","LRSCTX1",214,0)
 . S NOTIFY="0^4^MailMan error"
"RTN","LRSCTX1",215,0)
 ;
"RTN","LRSCTX1",216,0)
 ; Update and store this transaction info in the target file.
"RTN","LRSCTX1",217,0)
 N TDT
"RTN","LRSCTX1",218,0)
 S TDT=NOW
"RTN","LRSCTX1",219,0)
 D SCTUPD^LRERT1
"RTN","LRSCTX1",220,0)
 ;
"RTN","LRSCTX1",221,0)
 Q NOTIFY
"RTN","LRSPRPT")
0^116^B65444483
"RTN","LRSPRPT",1,0)
LRSPRPT ;DALOI/STAFF - CY/EM/SP PATIENT RPT ;11/14/11  13:03
"RTN","LRSPRPT",2,0)
 ;;5.2;LAB SERVICE;**1,72,248,259,317,350**;Sep 27, 1994;Build 230
"RTN","LRSPRPT",3,0)
 ;
"RTN","LRSPRPT",4,0)
 W !!?20,LRO(68)," FINAL PATIENT REPORTS"
"RTN","LRSPRPT",5,0)
 K LRSAV,LRAP,LRS(99)
"RTN","LRSPRPT",6,0)
 D EN2^LRUA
"RTN","LRSPRPT",7,0)
 G END^LRSPRPT1:LRAPX=2,SGL:LRAPX=3,CH:LRAPX=4
"RTN","LRSPRPT",8,0)
GETP ;
"RTN","LRSPRPT",9,0)
 D EN1^LRUPS Q:LRAN=-1
"RTN","LRSPRPT",10,0)
 G:$D(^LRO(69.2,LRAA,2,LRAN,0)) GETP
"RTN","LRSPRPT",11,0)
 D LOCK^DILF("^LRO(69.2,LRAA,2)")
"RTN","LRSPRPT",12,0)
 I '$T D  G GETP
"RTN","LRSPRPT",13,0)
 . N MSG
"RTN","LRSPRPT",14,0)
 . S MSG(1)="The final reports queue is in use by another person.",MSG(1,"F")="!!"
"RTN","LRSPRPT",15,0)
 . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRSPRPT",16,0)
 . D EN^DDIOL(.MSG)
"RTN","LRSPRPT",17,0)
 S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI
"RTN","LRSPRPT",18,0)
 S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRSPRPT",19,0)
 L -^LRO(69.2,LRAA,2)
"RTN","LRSPRPT",20,0)
 G GETP
"RTN","LRSPRPT",21,0)
 ;
"RTN","LRSPRPT",22,0)
 ;
"RTN","LRSPRPT",23,0)
CH ;
"RTN","LRSPRPT",24,0)
 S LRAPX(1)=2 D EN^LRSPRPT2 Q:$G(%)<1
"RTN","LRSPRPT",25,0)
 W !!,"Save final report list for reprinting "
"RTN","LRSPRPT",26,0)
 S %=2 D YN^LRU S:%=1 LRSAV=1
"RTN","LRSPRPT",27,0)
 ; Variable LR("DVD") is used to divide reports displayed in the browser
"RTN","LRSPRPT",28,0)
 K LR("DVD")
"RTN","LRSPRPT",29,0)
 S $P(LR("DVD"),"|",IOM)=""
"RTN","LRSPRPT",30,0)
DEV ; from LRAPMOD
"RTN","LRSPRPT",31,0)
 W !
"RTN","LRSPRPT",32,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRSPRPT",33,0)
 I POP W ! D END Q
"RTN","LRSPRPT",34,0)
 I $D(IO("Q")) D  Q
"RTN","LRSPRPT",35,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","LRSPRPT",36,0)
 . S ZTDESC="ANAT PATH FINAL REPORT"
"RTN","LRSPRPT",37,0)
 . S ZTSAVE("LR*")="",ZTRTN="QUE^LRSPRPT"
"RTN","LRSPRPT",38,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","LRSPRPT",39,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LRSPRPT",40,0)
 . D END
"RTN","LRSPRPT",41,0)
 ;
"RTN","LRSPRPT",42,0)
QUE ;
"RTN","LRSPRPT",43,0)
 U IO
"RTN","LRSPRPT",44,0)
 N LRFFF
"RTN","LRSPRPT",45,0)
 ; LRSF515=1 means generating an SF515
"RTN","LRSPRPT",46,0)
 S:'$D(LRSF515) LRSF515=0
"RTN","LRSPRPT",47,0)
 S:'$D(LRFOC) LRFOC=0
"RTN","LRSPRPT",48,0)
 S:'$D(LRQUIT) LRQUIT=0
"RTN","LRSPRPT",49,0)
 S LRFFF=1  ;Flag to perform final form feed
"RTN","LRSPRPT",50,0)
 I LRFOC S LRFFF=0  ;If final office copy, don't perform final form feed
"RTN","LRSPRPT",51,0)
 S LR(.21)=+$G(^LRO(69.2,LRAA,.2)),LR("DIWF")="W"
"RTN","LRSPRPT",52,0)
 S LRA=$S($D(^LRO(69.2,LRAA,0)):$P(^(0),U,9),1:1) S:LRA="" LRA=1
"RTN","LRSPRPT",53,0)
 D L^LRU,S^LRU,L1^LRU,SET^LRUA
"RTN","LRSPRPT",54,0)
 ;
"RTN","LRSPRPT",55,0)
PSGL ; Single Report
"RTN","LRSPRPT",56,0)
 I $D(LRAP) D  G LST
"RTN","LRSPRPT",57,0)
 . S LRDFN=$P(LRAP,"^"),LRI=$P(LRAP,"^",2)
"RTN","LRSPRPT",58,0)
 . I +$G(LRPTR) D  Q
"RTN","LRSPRPT",59,0)
 . . D MAIN^LRAPTIUP(LRPTR,0)
"RTN","LRSPRPT",60,0)
 . . S LRFFF=0 ;Don't do final form feed.  It's done by LRAPTIUP.
"RTN","LRSPRPT",61,0)
 . . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",62,0)
 . . K LRAP S LR("F")=1
"RTN","LRSPRPT",63,0)
 . . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",64,0)
 . . Q:LR("Q")
"RTN","LRSPRPT",65,0)
 . . I 'LRFOC S LR("Q")=1 Q
"RTN","LRSPRPT",66,0)
 . . D FOC
"RTN","LRSPRPT",67,0)
 . . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",68,0)
 . . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",69,0)
 . W:IOST?1"C-".E @IOF
"RTN","LRSPRPT",70,0)
 . D EN
"RTN","LRSPRPT",71,0)
 . K LRAP
"RTN","LRSPRPT",72,0)
 . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",73,0)
 . Q:LR("Q")
"RTN","LRSPRPT",74,0)
 . I 'LRFOC S LR("Q")=1 Q
"RTN","LRSPRPT",75,0)
 . W !
"RTN","LRSPRPT",76,0)
 . W:IOST?1"P-".E @IOF
"RTN","LRSPRPT",77,0)
 . D FOC
"RTN","LRSPRPT",78,0)
 . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",79,0)
 . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",80,0)
 ;
"RTN","LRSPRPT",81,0)
PQUE ;Report from queue
"RTN","LRSPRPT",82,0)
 S LRAN=0
"RTN","LRSPRPT",83,0)
 F  S LRAN=$O(^LRO(69.2,LRAA,2,LRAN)) Q:'LRAN!(LR("Q"))  D
"RTN","LRSPRPT",84,0)
 . S LRQUIT=0
"RTN","LRSPRPT",85,0)
 . I 'LRFOC S LRFFF=1
"RTN","LRSPRPT",86,0)
 . K LR("F")
"RTN","LRSPRPT",87,0)
 . S X=^LRO(69.2,LRAA,2,LRAN,0),LRDFN=+X,LRI=$P(X,"^",2)
"RTN","LRSPRPT",88,0)
 . D TIUCHK^LRAPUTL(.LRPTR,LRDFN,LRSS,LRI)
"RTN","LRSPRPT",89,0)
 . I +$G(LRPTR) D  Q
"RTN","LRSPRPT",90,0)
 . . D MAIN^LRAPTIUP(LRPTR,0)
"RTN","LRSPRPT",91,0)
 . . S LRFFF=0
"RTN","LRSPRPT",92,0)
 . . W:IOST["BROWSER"&('LRFOC) !!,LR("DVD")
"RTN","LRSPRPT",93,0)
 . . K LRPTR
"RTN","LRSPRPT",94,0)
 . . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",95,0)
 . . S LR("F")=1
"RTN","LRSPRPT",96,0)
 . . I 'LR("Q"),$D(LR("F")),IOST?1"C-".E D CONT
"RTN","LRSPRPT",97,0)
 . . Q:LR("Q")!('LRFOC)
"RTN","LRSPRPT",98,0)
 . . D FOC
"RTN","LRSPRPT",99,0)
 . . W:IOST["BROWSER" !!,LR("DVD")
"RTN","LRSPRPT",100,0)
 . . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",101,0)
 . . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",102,0)
 . W:IOST?1"C-".E @IOF
"RTN","LRSPRPT",103,0)
 . D EN
"RTN","LRSPRPT",104,0)
 . W:IOST?1"P-".E @IOF
"RTN","LRSPRPT",105,0)
 . W:IOST["BROWSER"&('LRFOC) !!,LR("DVD")
"RTN","LRSPRPT",106,0)
 . I 'LR("Q"),$D(LR("F")),IOST?1"C-".E D CONT
"RTN","LRSPRPT",107,0)
 . Q:LR("Q")
"RTN","LRSPRPT",108,0)
 . Q:'LRFOC
"RTN","LRSPRPT",109,0)
 . W !
"RTN","LRSPRPT",110,0)
 . D FOC
"RTN","LRSPRPT",111,0)
 . W:IOST["BROWSER" !!,LR("DVD")
"RTN","LRSPRPT",112,0)
 . I LRQUIT S LR("Q")=1 Q
"RTN","LRSPRPT",113,0)
 . I 'LR("Q"),$D(LR("F")),IOST?1"C".E D CONT
"RTN","LRSPRPT",114,0)
 S LRFFF=0
"RTN","LRSPRPT",115,0)
 ;
"RTN","LRSPRPT",116,0)
LST ;
"RTN","LRSPRPT",117,0)
 K LRRMD,LRPMD,LRAP
"RTN","LRSPRPT",118,0)
 K:'$D(LRSAV) ^LRO(69.2,LRAA,2)
"RTN","LRSPRPT",119,0)
 S ^LRO(69.2,LRAA,2,0)="^69.23A^^0"
"RTN","LRSPRPT",120,0)
 K LRSAV,LRV,LRW,LRZ
"RTN","LRSPRPT",121,0)
 I IOST?1"P-".E W:LRFFF @IOF
"RTN","LRSPRPT",122,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRSPRPT",123,0)
 K %,DIR,DTOUT,DUOUT,DIRUT,X,Y
"RTN","LRSPRPT",124,0)
 D END
"RTN","LRSPRPT",125,0)
 Q
"RTN","LRSPRPT",126,0)
 ;
"RTN","LRSPRPT",127,0)
 ;
"RTN","LRSPRPT",128,0)
W ;
"RTN","LRSPRPT",129,0)
 W !,LR("%")
"RTN","LRSPRPT",130,0)
 Q
"RTN","LRSPRPT",131,0)
 ;
"RTN","LRSPRPT",132,0)
 ;
"RTN","LRSPRPT",133,0)
F ;
"RTN","LRSPRPT",134,0)
 ; N A,DIWF,DIWL,DIWR
"RTN","LRSPRPT",135,0)
 D E
"RTN","LRSPRPT",136,0)
 S A=0,DIWF=$TR(DIWF,"W","")
"RTN","LRSPRPT",137,0)
 F  S A=$O(^LR(LRDFN,LRSS,LRI,LRV,A)) Q:'A  S X=^LR(LRDFN,LRSS,LRI,LRV,A,0) D:X["|TOP|" TOP D ^DIWP
"RTN","LRSPRPT",138,0)
 S A=0
"RTN","LRSPRPT",139,0)
 F  S A=$O(^UTILITY($J,"W",DIWL,A)) Q:'A  D:$Y>(IOSL-11) F^LRAPF,^LRAPF Q:LR("Q")  W !,^UTILITY($J,"W",DIWL,A,0)
"RTN","LRSPRPT",140,0)
 I $Y<(IOSL-11) W !
"RTN","LRSPRPT",141,0)
 K ^UTILITY($J,"W")
"RTN","LRSPRPT",142,0)
 Q
"RTN","LRSPRPT",143,0)
 ;
"RTN","LRSPRPT",144,0)
 ;
"RTN","LRSPRPT",145,0)
E ;
"RTN","LRSPRPT",146,0)
 K ^UTILITY($J,"W")
"RTN","LRSPRPT",147,0)
 S DIWR=IOM-5,DIWL=5,DIWF=""
"RTN","LRSPRPT",148,0)
 ;
"RTN","LRSPRPT",149,0)
 ; Set gross description field to value from file #69.2
"RTN","LRSPRPT",150,0)
 ;I LRV=1 S DIWF=LR("DIWF")
"RTN","LRSPRPT",151,0)
 S DIWF=LR("DIWF")
"RTN","LRSPRPT",152,0)
 ;
"RTN","LRSPRPT",153,0)
 Q
"RTN","LRSPRPT",154,0)
 ;
"RTN","LRSPRPT",155,0)
 ;
"RTN","LRSPRPT",156,0)
EN ; from LRSPT
"RTN","LRSPRPT",157,0)
 ; Moved to LRSPRPTA due to size limits on routine
"RTN","LRSPRPT",158,0)
 D EN^LRSPRPTA
"RTN","LRSPRPT",159,0)
 Q
"RTN","LRSPRPT",160,0)
 ;
"RTN","LRSPRPT",161,0)
 ;
"RTN","LRSPRPT",162,0)
S ;
"RTN","LRSPRPT",163,0)
 S Y=+X,X=$P(X,U,2) D D^LRU
"RTN","LRSPRPT",164,0)
 W !?3,"Date: ",Y
"RTN","LRSPRPT",165,0)
 I $D(LR("R")),'X W " not verified" Q
"RTN","LRSPRPT",166,0)
 D:$Y>(IOSL-13) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPT",167,0)
 D:$P($G(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,0)),U,4) SUPA
"RTN","LRSPRPT",168,0)
 D E S B=0
"RTN","LRSPRPT",169,0)
 F LRZ=0:1 S B=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV,1,B)) Q:'B!(LR("Q"))  D
"RTN","LRSPRPT",170,0)
 . D:$Y>(IOSL-14) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPT",171,0)
 . S DIWF="W"
"RTN","LRSPRPT",172,0)
 . S X=^LR(LRDFN,LRSS,LRI,1.2,LRV,1,B,0) D ^DIWP Q:LR("Q")
"RTN","LRSPRPT",173,0)
 Q:LR("Q")
"RTN","LRSPRPT",174,0)
 D:LRZ ^DIWW
"RTN","LRSPRPT",175,0)
 Q
"RTN","LRSPRPT",176,0)
 ;
"RTN","LRSPRPT",177,0)
 ;
"RTN","LRSPRPT",178,0)
SGL ; Print Single Report
"RTN","LRSPRPT",179,0)
 N LRPTR
"RTN","LRSPRPT",180,0)
 S LRAPX(1)=""
"RTN","LRSPRPT",181,0)
 D EN1^LRUPS Q:LRAN=-1
"RTN","LRSPRPT",182,0)
 I '$P(^LR(LRDFN,LRSS,LRI,0),"^",11) D  G SGL
"RTN","LRSPRPT",183,0)
 . W $C(7)," Sorry, report not verified.",!
"RTN","LRSPRPT",184,0)
 D TIUCHK^LRAPUTL(.LRPTR,LRDFN,LRSS,LRI)
"RTN","LRSPRPT",185,0)
 S LRAP=LRDFN_"^"_LRI,LRSAV=1
"RTN","LRSPRPT",186,0)
 D EN2^LRUA
"RTN","LRSPRPT",187,0)
 G DEV
"RTN","LRSPRPT",188,0)
 ;
"RTN","LRSPRPT",189,0)
 ;
"RTN","LRSPRPT",190,0)
A ;
"RTN","LRSPRPT",191,0)
 S A=0 F  S A=$O(^LR(LRDFN,LRSS,LRI,LRV,A)) Q:'A!(LR("Q"))  D
"RTN","LRSPRPT",192,0)
 . D:$Y>(IOSL-13) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPT",193,0)
 . W !,$P(^LR(LRDFN,LRSS,LRI,LRV,A,0),"^")
"RTN","LRSPRPT",194,0)
 Q
"RTN","LRSPRPT",195,0)
 ;
"RTN","LRSPRPT",196,0)
 ;
"RTN","LRSPRPT",197,0)
TOP ;
"RTN","LRSPRPT",198,0)
 S Z=$P(X,"|TOP|",1)_$P(X,"|TOP|",2) D F^LRAPF,^LRAPF S X=Z
"RTN","LRSPRPT",199,0)
 Q
"RTN","LRSPRPT",200,0)
 ;
"RTN","LRSPRPT",201,0)
 ;
"RTN","LRSPRPT",202,0)
SUPA ; Print supplementary report audit information
"RTN","LRSPRPT",203,0)
 W !?14,"*+* SUPPLEMENTARY REPORT HAS BEEN ADDED/MODIFIED *+*"
"RTN","LRSPRPT",204,0)
 W !,"(Added/Last modified: "
"RTN","LRSPRPT",205,0)
 S (A,B)=0 F  S A=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,A)) Q:'A!(LR("Q"))  D
"RTN","LRSPRPT",206,0)
 . S B=A
"RTN","LRSPRPT",207,0)
 Q:LR("Q")
"RTN","LRSPRPT",208,0)
 Q:'$D(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,B,0))
"RTN","LRSPRPT",209,0)
 S A=^(0),Y=+A,LRSGN=" typed by ",A=$P(A,"^",2)
"RTN","LRSPRPT",210,0)
 I $P(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,B,0),"^",3) D
"RTN","LRSPRPT",211,0)
 . S A=^(0),LRSGN=" signed by ",A2=$P(A,"^",3),Y=$P(A,"^",4)
"RTN","LRSPRPT",212,0)
 . S A=A2
"RTN","LRSPRPT",213,0)
 S A=$S($D(^VA(200,A,0)):$P(^(0),"^"),1:A)
"RTN","LRSPRPT",214,0)
 ; If supp rpt is released, display 'signed by' instead of 'typed by'
"RTN","LRSPRPT",215,0)
 D D^LRU W Y,LRSGN,A,")"
"RTN","LRSPRPT",216,0)
 ; If RELEASE SUPP REPORT MODIFIED set to 1, display "NOT VERIFIED"
"RTN","LRSPRPT",217,0)
 I $P(^LR(LRDFN,LRSS,LRI,1.2,LRV,0),"^",3) W !,?25,"**-* NOT VERIFIED *-**"
"RTN","LRSPRPT",218,0)
 D:$D(LRQ(9)) SUPM
"RTN","LRSPRPT",219,0)
 Q
"RTN","LRSPRPT",220,0)
 ;
"RTN","LRSPRPT",221,0)
 ;
"RTN","LRSPRPT",222,0)
SUPM ; Print previous versions of supplementary reports
"RTN","LRSPRPT",223,0)
 ; This is used by menu option 'Print path modifications [LRAPMOD]'
"RTN","LRSPRPT",224,0)
 ;
"RTN","LRSPRPT",225,0)
 S A=0 F  S A=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,A)) Q:'A!(LR("Q"))  D
"RTN","LRSPRPT",226,0)
 . S LRT=^LR(LRDFN,LRSS,LRI,1.2,LRV,2,A,0)
"RTN","LRSPRPT",227,0)
 . D:$Y>(IOSL-13) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPT",228,0)
 . S Y=+LRT,Y2=" modified: ",X=$P(LRT,"^",2),LRSGN="  typed by "
"RTN","LRSPRPT",229,0)
 . ; If supp rpt is released, display 'signed by' instead of 'typed by'
"RTN","LRSPRPT",230,0)
 . I $P(LRT,"^",3) S LRSGN=" signed by ",X=$P(LRT,"^",3),Y=$P(LRT,"^",4),Y2=" released: "
"RTN","LRSPRPT",231,0)
 . S X=$S($D(^VA(200,X,0)):$P(^(0),"^"),1:X)
"RTN","LRSPRPT",232,0)
 . D D^LRU W !,"Date ",Y2,Y,LRSGN,X
"RTN","LRSPRPT",233,0)
 . K ^UTILITY($J)
"RTN","LRSPRPT",234,0)
 . S DIWR=IOM-5,DIWL=5,DIWF="W"
"RTN","LRSPRPT",235,0)
 . S B=0
"RTN","LRSPRPT",236,0)
 . F LRZ=0:1 S B=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV,2,A,1,B)) Q:'B!(LR("Q"))  D
"RTN","LRSPRPT",237,0)
 . . S LRT=^LR(LRDFN,LRSS,LRI,1.2,LRV,2,A,1,B,0)
"RTN","LRSPRPT",238,0)
 . . D:$Y>(IOSL-13) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPT",239,0)
 . . S X=LRT D ^DIWP
"RTN","LRSPRPT",240,0)
 . Q:LR("Q")  D:LRZ ^DIWW
"RTN","LRSPRPT",241,0)
 Q:LR("Q")
"RTN","LRSPRPT",242,0)
 W !?13,"==========Text below appears on final report=========="
"RTN","LRSPRPT",243,0)
 Q
"RTN","LRSPRPT",244,0)
 ;
"RTN","LRSPRPT",245,0)
 ;
"RTN","LRSPRPT",246,0)
CONT ;
"RTN","LRSPRPT",247,0)
 K DIR S DIR(0)="E"
"RTN","LRSPRPT",248,0)
 D ^DIR W !
"RTN","LRSPRPT",249,0)
 S:$D(DTOUT)!(X[U) LR("Q")=1
"RTN","LRSPRPT",250,0)
 Q
"RTN","LRSPRPT",251,0)
 ;
"RTN","LRSPRPT",252,0)
 ;
"RTN","LRSPRPT",253,0)
FOC ; Print final office copy page (SNOMEDS)
"RTN","LRSPRPT",254,0)
 N LRADC,LRCTR
"RTN","LRSPRPT",255,0)
 I '$D(LRAP) D
"RTN","LRSPRPT",256,0)
 . D:LRSS'="AU" ^LRUA
"RTN","LRSPRPT",257,0)
 . I LRSS="AU" S X=^LR(LRDFN,0) D ^LRUP
"RTN","LRSPRPT",258,0)
 I LRSS="AU" D
"RTN","LRSPRPT",259,0)
 . S LRADC=$E($P(^LR(LRDFN,LRSS),"^"),1,3)_"0000"
"RTN","LRSPRPT",260,0)
 . S:+$G(LRDPF)=2 LRDEM("DTH")=$P(VADM(6),"^",2)
"RTN","LRSPRPT",261,0)
 . ; Get DATE DIED from Referral File for Referral Patients
"RTN","LRSPRPT",262,0)
 . S:+$G(LRDPF)'=2 LRDEM("DTH")=$$GET1^DIQ(67,DFN_",",.351)
"RTN","LRSPRPT",263,0)
 . S LRDEM("AUDT")=$$GET1^DIQ(63,LRDFN_",",11)
"RTN","LRSPRPT",264,0)
 . S LRDEM("AUTYP")=$$GET1^DIQ(63,LRDFN_",",13.7)
"RTN","LRSPRPT",265,0)
 . S LRDEM("PRO")=$$GET1^DIQ(63,LRDFN_",",13.5)
"RTN","LRSPRPT",266,0)
 I LRSS'="AU" D
"RTN","LRSPRPT",267,0)
 . S LRADC=$E($P(^LR(LRDFN,LRSS,LRI,0),"^"),1,3)_"0000"
"RTN","LRSPRPT",268,0)
 . S LRDEM("PRO")=LRMD
"RTN","LRSPRPT",269,0)
 S LRDEM("PNM")=LRP,LRDEM("SSN")=SSN
"RTN","LRSPRPT",270,0)
 S LRDEM("SEX")=SEX,LRDEM("AGE")=AGE,LRDEM("DOB")=DOB
"RTN","LRSPRPT",271,0)
 D INIT^LRAPSNMD(LRDFN,LRSS,$G(LRI),LRSF,LRAA,LRAN,LRADC,.LRDEM,0)
"RTN","LRSPRPT",272,0)
 Q
"RTN","LRSPRPT",273,0)
 ;
"RTN","LRSPRPT",274,0)
 ;
"RTN","LRSPRPT",275,0)
END ;
"RTN","LRSPRPT",276,0)
 D V^LRU
"RTN","LRSPRPT",277,0)
 K LRSF515
"RTN","LRSPRPT",278,0)
 Q
"RTN","LRSPRPTA")
0^152^B15274783
"RTN","LRSPRPTA",1,0)
LRSPRPTA ;DALOI/STAFF - CY/EM/SP PATIENT RPT (cont'd) ;11/14/11  13:00
"RTN","LRSPRPTA",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSPRPTA",3,0)
 ;
"RTN","LRSPRPTA",4,0)
 ; Continuation of LRSPRPT.
"RTN","LRSPRPTA",5,0)
 ;
"RTN","LRSPRPTA",6,0)
EN ; from LRSPRPT
"RTN","LRSPRPTA",7,0)
 ; Suppress SNOMED codes except on Preliminary
"RTN","LRSPRPTA",8,0)
 S LR("SPSM")=$S($G(LRPRE):0,1:1)
"RTN","LRSPRPTA",9,0)
 S LR(.21)=+$G(^LRO(69.2,+$G(LRAA),.2))
"RTN","LRSPRPTA",10,0)
 K LRO Q:'$D(^LR(LRDFN,LRSS,LRI,0))
"RTN","LRSPRPTA",11,0)
 S LRQ=0
"RTN","LRSPRPTA",12,0)
 D ^LRUA
"RTN","LRSPRPTA",13,0)
 ;
"RTN","LRSPRPTA",14,0)
 D GETPCP^LRAPUTL(.LRPRAC,LRDFN,LRSS,LRI)
"RTN","LRSPRPTA",15,0)
 ;
"RTN","LRSPRPTA",16,0)
 D ^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",17,0)
 S LR("F")=1 W !,"Submitted by: ",LRW(5),?44,"Date obtained: ",LRTK
"RTN","LRSPRPTA",18,0)
 D:LRA W^LRSPRPT
"RTN","LRSPRPTA",19,0)
 W !,"Specimen (Received ",LRTK(1),"):" S LRV=.1 D A^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",20,0)
 I $P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),"^",4) D
"RTN","LRSPRPTA",21,0)
 . W !?14,"*+* SUPPLEMENTARY REPORT HAS BEEN ADDED *+*"
"RTN","LRSPRPTA",22,0)
 . W !?19,"*+* REFER TO BOTTOM OF REPORT *+*",!
"RTN","LRSPRPTA",23,0)
 ;
"RTN","LRSPRPTA",24,0)
 I $O(^LR(LRDFN,LRSS,LRI,99,0)) W !,"Comment:"
"RTN","LRSPRPTA",25,0)
 S LRB=0
"RTN","LRSPRPTA",26,0)
 F  S LRB=$O(^LR(LRDFN,LRSS,LRI,99,LRB)) Q:'LRB!(LR("Q"))  D
"RTN","LRSPRPTA",27,0)
 . W !,^LR(LRDFN,LRSS,LRI,99,LRB,0)
"RTN","LRSPRPTA",28,0)
 . I $G(LRSF515),$Y>(IOSL-11) D F^LRAPF,^LRAPF
"RTN","LRSPRPTA",29,0)
 ;
"RTN","LRSPRPTA",30,0)
 D:LRA W^LRSPRPT W !,"Brief Clinical History:" S LRV=.2 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",31,0)
 D:LRA W^LRSPRPT W !,"Preoperative Diagnosis:" S LRV=.3 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",32,0)
 D:LRA W^LRSPRPT W !,"Operative Findings:" S LRV=.4 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",33,0)
 D:LRA W^LRSPRPT W !,"Postoperative Diagnosis:" S LRV=.5 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",34,0)
 ;
"RTN","LRSPRPTA",35,0)
 ;
"RTN","LRSPRPTA",36,0)
 ; Retrieve surgeon/attending
"RTN","LRSPRPTA",37,0)
 D ATTEND^LRAPBR1(.LRMD)
"RTN","LRSPRPTA",38,0)
 I LRMD'="" W !?27,"Surgeon/physician: ",LRMD
"RTN","LRSPRPTA",39,0)
 I LRMD("SR-SURGEON")'="" w !,?28,LRMD("SR-SURGEON")
"RTN","LRSPRPTA",40,0)
 I LRMD("SR-ATTEND")'="" W !,?26,LRMD("SR-ATTEND")
"RTN","LRSPRPTA",41,0)
 ;I +$G(LRMD("ERR"))=601 W !,?26,$P(LRMD("ERR"),"^",2)
"RTN","LRSPRPTA",42,0)
 ;
"RTN","LRSPRPTA",43,0)
 I LRA W !,LR("%1")
"RTN","LRSPRPTA",44,0)
 ;
"RTN","LRSPRPTA",45,0)
 I $Y>(IOSL-14) D  Q:LR("Q")
"RTN","LRSPRPTA",46,0)
 . D F^LRAPF,^LRAPF
"RTN","LRSPRPTA",47,0)
 E  D P^LRAPF
"RTN","LRSPRPTA",48,0)
 ;I $Y>(IOSL-8) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",49,0)
 D:LRA W^LRSPRPT
"RTN","LRSPRPTA",50,0)
 W:LRRC="" !?20,"+*+* REPORT INCOMPLETE *+*+",!
"RTN","LRSPRPTA",51,0)
 I $Y>(IOSL-11) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",52,0)
 ;
"RTN","LRSPRPTA",53,0)
 W !
"RTN","LRSPRPTA",54,0)
 I LRRMD'="" W ?31,$S(LRSS="SP":"Pathology Resident: ",LRSS="CY":"Screened by: ",LRSS="EM":"Prepared by: ",1:" "),LRRMD
"RTN","LRSPRPTA",55,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.3,0)) D  Q:LR("Q")
"RTN","LRSPRPTA",56,0)
 . I $Y>(IOSL-11) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",57,0)
 . W !,LR(69.2,.13)
"RTN","LRSPRPTA",58,0)
 . I $P($G(^LR(LRDFN,LRSS,LRI,6,0)),U,4) S LR(0)=6 D ^LRSPRPTM
"RTN","LRSPRPTA",59,0)
 ;
"RTN","LRSPRPTA",60,0)
 S LRV=1.3 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",61,0)
 I $O(^LR(LRDFN,LRSS,LRI,1,0)) D  Q:LR("Q")
"RTN","LRSPRPTA",62,0)
 . I $Y>(IOSL-11) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",63,0)
 . W !,LR(69.2,.03)
"RTN","LRSPRPTA",64,0)
 . I $P($G(^LR(LRDFN,LRSS,LRI,7,0)),U,4) S LR(0)=7 D ^LRSPRPTM
"RTN","LRSPRPTA",65,0)
 ;
"RTN","LRSPRPTA",66,0)
 S LRV=1 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",67,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.1,0)) D  Q:LR("Q")
"RTN","LRSPRPTA",68,0)
 . I $Y>(IOSL-11) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",69,0)
 . W !,LR(69.2,.04)
"RTN","LRSPRPTA",70,0)
 . I $P($G(^LR(LRDFN,LRSS,LRI,4,0)),"^",4) S LR(0)=4 D ^LRSPRPTM
"RTN","LRSPRPTA",71,0)
 ;
"RTN","LRSPRPTA",72,0)
 S LRV=1.1 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",73,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.4,0)) D  Q:LR("Q")
"RTN","LRSPRPTA",74,0)
 . I $Y>(IOSL-11) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",75,0)
 . W !,LR(69.2,.14)
"RTN","LRSPRPTA",76,0)
 . I $P($G(^LR(LRDFN,LRSS,LRI,5,0)),U,4) S LR(0)=5 D ^LRSPRPTM
"RTN","LRSPRPTA",77,0)
 ;
"RTN","LRSPRPTA",78,0)
 S LRV=1.4 D F^LRSPRPT Q:LR("Q")
"RTN","LRSPRPTA",79,0)
 ;
"RTN","LRSPRPTA",80,0)
 ; Supplementary Report
"RTN","LRSPRPTA",81,0)
 I $O(^LR(LRDFN,LRSS,LRI,1.2,0)) D:LR(.21) F^LRAPF,^LRAPF Q:LR("Q")  D
"RTN","LRSPRPTA",82,0)
 . D:$Y>(IOSL-13) F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",83,0)
 . W !,"Supplementary Report:"
"RTN","LRSPRPTA",84,0)
 . S LRV=0 F  S LRV=$O(^LR(LRDFN,LRSS,LRI,1.2,LRV)) Q:'LRV!(LR("Q"))  D
"RTN","LRSPRPTA",85,0)
 . . S X=^LR(LRDFN,LRSS,LRI,1.2,LRV,0) D S^LRSPRPT
"RTN","LRSPRPTA",86,0)
 D ^LRSPRPT1 Q:LR("Q")
"RTN","LRSPRPTA",87,0)
 ;
"RTN","LRSPRPTA",88,0)
 ; Print performing laboratory if designated
"RTN","LRSPRPTA",89,0)
 D PPL
"RTN","LRSPRPTA",90,0)
 ;
"RTN","LRSPRPTA",91,0)
 ; Don't set the final flag and print the footer if prelim
"RTN","LRSPRPTA",92,0)
 Q:+$G(LRPRE)
"RTN","LRSPRPTA",93,0)
 S LRO=1 D F^LRAPF
"RTN","LRSPRPTA",94,0)
 Q
"RTN","LRSPRPTA",95,0)
 ;
"RTN","LRSPRPTA",96,0)
 ;
"RTN","LRSPRPTA",97,0)
PPL ; Print any performing laboratories
"RTN","LRSPRPTA",98,0)
 ;
"RTN","LRSPRPTA",99,0)
 N LRPL,LRJ,LRX
"RTN","LRSPRPTA",100,0)
 ;
"RTN","LRSPRPTA",101,0)
 D RETLST^LRRPL(.LRPL,LRDFN,LRSS,LRI,0)
"RTN","LRSPRPTA",102,0)
 I $G(LRPL)<1 Q
"RTN","LRSPRPTA",103,0)
 ;
"RTN","LRSPRPTA",104,0)
 ; Start new page if space on existing page too small to display a significant portion of labs
"RTN","LRSPRPTA",105,0)
 I $Y>(IOSL-15) D F^LRAPF,^LRAPF Q:LR("Q")
"RTN","LRSPRPTA",106,0)
 ;
"RTN","LRSPRPTA",107,0)
 W !!,$$REPEAT^XLFSTR("=",IOM)
"RTN","LRSPRPTA",108,0)
 W !,"Performing Laboratory:",!
"RTN","LRSPRPTA",109,0)
 S LRJ=0
"RTN","LRSPRPTA",110,0)
 F  S LRJ=$O(LRPL(LRJ)) Q:'LRJ  D  Q:LR("Q")
"RTN","LRSPRPTA",111,0)
 . I $Y>(IOSL-12) D F^LRAPF,^LRAPF Q:LR("Q")  W !,"Performing Laboratory (cont'd):",!
"RTN","LRSPRPTA",112,0)
 . W !,LRPL(LRJ)
"RTN","LRSPRPTA",113,0)
 ;
"RTN","LRSPRPTA",114,0)
 Q
"RTN","LRSRVR")
0^164^B18215977
"RTN","LRSRVR",1,0)
LRSRVR ;DALOI/RLM/JMC - LAB DATA SERVER ;11/18/11  16:47
"RTN","LRSRVR",2,0)
 ;;5.2;LAB SERVICE;**232,303,346,350**;Sep 27, 1994;Build 230
"RTN","LRSRVR",3,0)
 ;
"RTN","LRSRVR",4,0)
 ; Reference to ^%ZOSF supported by IA #10096
"RTN","LRSRVR",5,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","LRSRVR",6,0)
 ;
"RTN","LRSRVR",7,0)
START ;
"RTN","LRSRVR",8,0)
 N LRSITE,LRST,LRSUB,LRXMZ
"RTN","LRSRVR",9,0)
 ;
"RTN","LRSRVR",10,0)
 ; Save incoming server message id for cleanup
"RTN","LRSRVR",11,0)
 S LRXMZ=XMZ
"RTN","LRSRVR",12,0)
 ;
"RTN","LRSRVR",13,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",14,0)
 ; Determine station name and number
"RTN","LRSRVR",15,0)
 S LRSITE=$$SITE^VASITE,LRSTN=$P(LRSITE,"^",2),LRST=$P(LRSITE,"^",3)
"RTN","LRSRVR",16,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR",17,0)
 ;
"RTN","LRSRVR",18,0)
 S LRSUB=$$UP^XLFSTR(XQSUB)
"RTN","LRSRVR",19,0)
 ;
"RTN","LRSRVR",20,0)
 ; The first line of the message tells who requested the action and when
"RTN","LRSRVR",21,0)
 ; The second line tells when the server is activated and no data can be
"RTN","LRSRVR",22,0)
 ; gathered from the MailMan message.  This line gets replaced if the
"RTN","LRSRVR",23,0)
 ; server finds something to do.
"RTN","LRSRVR",24,0)
 S ^TMP($J,"LRDATA",1)=LRSUB_" triggered at "_LRSTN_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",25,0)
 S LRACTION=$S(LRSUB["CHECKSUM":"Checksums Generated",1:LRSUB)
"RTN","LRSRVR",26,0)
 S ^TMP($J,"LRDATA",2)="I don't know how to "_LRACTION_" at "_LRSTN
"RTN","LRSRVR",27,0)
 ;
"RTN","LRSRVR",28,0)
 ;
"RTN","LRSRVR",29,0)
 ; If the subject contains "CHECKSUM" send a report of the current checksums to the LABTEAM group on RDMAIL
"RTN","LRSRVR",30,0)
 I LRSUB["CHECKSUM" D CSUM Q
"RTN","LRSRVR",31,0)
 ;
"RTN","LRSRVR",32,0)
 ; If the subject contains "LIST" send a report based on the list of routines in the body of the message back to the original sender.
"RTN","LRSRVR",33,0)
 I LRSUB["LIST" D SUMLST Q
"RTN","LRSRVR",34,0)
 ;
"RTN","LRSRVR",35,0)
 ; If the subject equals "LOINC" send the local LOINC data to the national list.
"RTN","LRSRVR",36,0)
 I LRSUB="LOINC" D LOINC^LRSRVR1 Q
"RTN","LRSRVR",37,0)
 ;
"RTN","LRSRVR",38,0)
 ; If the subject contains "LOCAL REPORT" send the local LOINC data to the sender.
"RTN","LRSRVR",39,0)
 I LRSUB="LOCAL REPORT" D LOINCL^LRSRVR1 Q
"RTN","LRSRVR",40,0)
 I LRSUB="LOCAL REPORT DELIMIT" D LOINCLD^LRSRVR3 Q
"RTN","LRSRVR",41,0)
 ;
"RTN","LRSRVR",42,0)
 ; Send RELMA mapper formatted message
"RTN","LRSRVR",43,0)
 I LRSUB="RELMA" D SERVER^LRSRVR2 Q
"RTN","LRSRVR",44,0)
 ; Process RELMA mapper Packman global message
"RTN","LRSRVR",45,0)
 I LRSUB="RELMA MAPPING" D RMAP^LRSRVR5 Q
"RTN","LRSRVR",46,0)
 ;
"RTN","LRSRVR",47,0)
 ; Send SNOMED mapping formatted message
"RTN","LRSRVR",48,0)
 I LRSUB="SNOMED" D SERVER^LRSRVR6 Q
"RTN","LRSRVR",49,0)
 I LRSUB="SNOMED MAPPING" D CTMAP^LRSRVR5 Q
"RTN","LRSRVR",50,0)
 ;
"RTN","LRSRVR",51,0)
 ; Send NLT/CPT mapping formatted message
"RTN","LRSRVR",52,0)
 I LRSUB="NLT/CPT" D SERVER^LRSRVR7 Q
"RTN","LRSRVR",53,0)
 ;
"RTN","LRSRVR",54,0)
 ; If subject not understood by server, send a message to the sender
"RTN","LRSRVR",55,0)
 ;  that the server can't understand their instructions.
"RTN","LRSRVR",56,0)
 K XMY
"RTN","LRSRVR",57,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",58,0)
 ;
"RTN","LRSRVR",59,0)
EXIT ; If all went well, report that too.
"RTN","LRSRVR",60,0)
 ; Mail the errors and successes back to the Roll-Up group at Forum.
"RTN","LRSRVR",61,0)
 N LRNOW
"RTN","LRSRVR",62,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRSRVR",63,0)
 S XMDUN="Lab Server",XMDUZ=".5",XMSUB=LRSTN_" LAB SERVER ("_LRNOW_")"
"RTN","LRSRVR",64,0)
 S XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR",65,0)
 I '$D(XMY) S XMY("G.LABTEAM@ISC-DOMAIN.EXT")=""
"RTN","LRSRVR",66,0)
 D ^XMD
"RTN","LRSRVR",67,0)
 ;
"RTN","LRSRVR",68,0)
CLEAN ; Cleanup and exit
"RTN","LRSRVR",69,0)
 I $D(^TMP($J,"LRDTERR")) D
"RTN","LRSRVR",70,0)
 . S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR",71,0)
 . S XMSUB=LRSTN_" LAB SERVER ERROR ("_LRNOW_")"
"RTN","LRSRVR",72,0)
 . S XMTEXT="^TMP($J,""LRDTERR"","
"RTN","LRSRVR",73,0)
 . S XMY("G.LABTEAM@ISC-DOMAIN.EXT")="",XMY(XQSND)=""
"RTN","LRSRVR",74,0)
 . D ^XMD
"RTN","LRSRVR",75,0)
 ;
"RTN","LRSRVR",76,0)
 ; Clean up server message in MailMan
"RTN","LRSRVR",77,0)
 I $G(LRXMZ)>0 D ZAPSERV^XMXAPI("S.LRLABSERVER",LRXMZ)
"RTN","LRSRVR",78,0)
 ;
"RTN","LRSRVR",79,0)
 K %,%DT,%H,D,DD,DIC,DIERR,ERROR,FILL,LINE,LOINCDTA,LOINCDTB,LOINCTAS
"RTN","LRSRVR",80,0)
 K LRA,LRAA,LRACTION,LRB,LRCLST,LRDA,LRERR,LRFOUND,LRFOUND1,LRI,LRLINE
"RTN","LRSRVR",81,0)
 K LRNDE,LROUT,LRPNT,LRPNTA,LRPNTB,LRRDT,LRRN,LRROOT,LRST,LRSTN,LRSUB
"RTN","LRSRVR",82,0)
 K X,XMDUN,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSUB,XMTEXT,XMY,XMZ,XQDATE
"RTN","LRSRVR",83,0)
 K XQSND,XQSUB,Y,ZTQUEUED,ZTSK
"RTN","LRSRVR",84,0)
 ;
"RTN","LRSRVR",85,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",86,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRSRVR",87,0)
 Q
"RTN","LRSRVR",88,0)
 ;
"RTN","LRSRVR",89,0)
 ;
"RTN","LRSRVR",90,0)
CSUM ;Calculate checksum for routines and transmit errors to LABTEAM group
"RTN","LRSRVR",91,0)
 S X=$T(+0) X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",2)=X_" at "_LRSTN_" = "_Y
"RTN","LRSRVR",92,0)
 S LRI=0
"RTN","LRSRVR",93,0)
 F  S LRI=$O(^LAB(69.91,1,"ROU",LRI)) Q:'LRI  D
"RTN","LRSRVR",94,0)
 . S X=$P(^LAB(69.91,1,"ROU",LRI,0),"^")
"RTN","LRSRVR",95,0)
 . S LRA=$P(^LAB(69.91,1,"ROU",LRI,0),"^",4)
"RTN","LRSRVR",96,0)
 . X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LRI+3)=X_" is missing." Q
"RTN","LRSRVR",97,0)
 . X ^%ZOSF("RSUM") I +$G(Y)'=LRA S ^TMP($J,"LRDATA",LRI+3)=X_" should be "_LRA_" is "_+$G(Y)
"RTN","LRSRVR",98,0)
 S XMSUB="Lab Checksum data at "_LRSTN_" run on "_XQDATE
"RTN","LRSRVR",99,0)
 D EXIT
"RTN","LRSRVR",100,0)
 Q
"RTN","LRSRVR",101,0)
 ;
"RTN","LRSRVR",102,0)
 ;
"RTN","LRSRVR",103,0)
SUMLST ;Calculate checksum for routines and transmit to requestor
"RTN","LRSRVR",104,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",105,0)
 S LRCLST=$P($$SITE^VASITE,"^",2),LINE=2,$P(FILL," ",8)=""
"RTN","LRSRVR",106,0)
 S ^TMP($J,"LRDATA",1)="Lab Server triggered at "_LRCLST_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",107,0)
 ;
"RTN","LRSRVR",108,0)
 ; Check for a plus sign in front of the routine name.  Bypass the
"RTN","LRSRVR",109,0)
 ; Test to see if the routine exists if it's there.
"RTN","LRSRVR",110,0)
 ; DSM won't check %routines to make sure they exist, Cache will.
"RTN","LRSRVR",111,0)
 F  X XMREC Q:XMER<0  S X=XMRG D
"RTN","LRSRVR",112,0)
  . I X'?1"+".E X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is missing.",LINE=LINE+1 Q
"RTN","LRSRVR",113,0)
  . ;Strip off the plus sign so that the checksum routine can find it.
"RTN","LRSRVR",114,0)
  . S X=$TR(X,"+","")
"RTN","LRSRVR",115,0)
  . X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is "_Y,LINE=LINE+1
"RTN","LRSRVR",116,0)
 S XMSUB="Checksum data at "_LRCLST_" run on "_XQDATE
"RTN","LRSRVR",117,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",118,0)
 D EXIT
"RTN","LRSRVR",119,0)
 Q
"RTN","LRSRVR5")
0^162^B45171198
"RTN","LRSRVR5",1,0)
LRSRVR5 ;DALOI/JMC - LAB DATA SERVER - Load standardized code mappings ;01/13/11  09:16
"RTN","LRSRVR5",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSRVR5",3,0)
 ;
"RTN","LRSRVR5",4,0)
 Q
"RTN","LRSRVR5",5,0)
 ;
"RTN","LRSRVR5",6,0)
 ;
"RTN","LRSRVR5",7,0)
RMAP ; Load RELMA mapping into site's system
"RTN","LRSRVR5",8,0)
 ;
"RTN","LRSRVR5",9,0)
 ;ZEXCEPT: XMZ
"RTN","LRSRVR5",10,0)
 ;
"RTN","LRSRVR5",11,0)
 N LRNAME,LRNODE,LRTYPE
"RTN","LRSRVR5",12,0)
 S LRNODE="LRSRVR-RELMA-"_XMZ,LRNAME="Lab RELMA Mapping Update"
"RTN","LRSRVR5",13,0)
 S LRTYPE=1,LRTYPE(0)="LN"
"RTN","LRSRVR5",14,0)
 D PROCESS
"RTN","LRSRVR5",15,0)
 Q
"RTN","LRSRVR5",16,0)
 ;
"RTN","LRSRVR5",17,0)
 ;
"RTN","LRSRVR5",18,0)
CTMAP ; Load SNOMED CT mapping into site's system
"RTN","LRSRVR5",19,0)
 ;
"RTN","LRSRVR5",20,0)
 ;
"RTN","LRSRVR5",21,0)
 ;ZEXCEPT: XMZ
"RTN","LRSRVR5",22,0)
 ;
"RTN","LRSRVR5",23,0)
 N LRNAME,LRNODE,LRTYPE
"RTN","LRSRVR5",24,0)
 S LRNODE="LRSRVR-SNOMED CT-"_XMZ,LRNAME="Lab SNOMED CT Mapping Update"
"RTN","LRSRVR5",25,0)
 S LRTYPE=2,LRTYPE(0)="SCT"
"RTN","LRSRVR5",26,0)
 D PROCESS
"RTN","LRSRVR5",27,0)
 Q
"RTN","LRSRVR5",28,0)
 ;
"RTN","LRSRVR5",29,0)
 ;
"RTN","LRSRVR5",30,0)
PROCESS ; Process the message and load file
"RTN","LRSRVR5",31,0)
 ;
"RTN","LRSRVR5",32,0)
 N DIC,DINUM,DO,LRCNT,LRDT,LRFILE,LRI,LRIEN,LRMAILGROUP,LRNOW,LRST,LRSTN,LRVAL,X
"RTN","LRSRVR5",33,0)
 ;
"RTN","LRSRVR5",34,0)
 ;ZEXCEPT: LRHDL,LRNAME,LRTYPE,XMZ
"RTN","LRSRVR5",35,0)
 ;
"RTN","LRSRVR5",36,0)
 S X=$$HTFM^XLFDT($H),LRDT=X\1,LRNOW=X
"RTN","LRSRVR5",37,0)
 S LRFILE=95.4,LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2)
"RTN","LRSRVR5",38,0)
 S $P(LRVAL,"^",4)=$P($$NNT^XUAF4($P(LRVAL,"^")),"^",3)
"RTN","LRSRVR5",39,0)
 ;
"RTN","LRSRVR5",40,0)
 ; Check that mail group has members
"RTN","LRSRVR5",41,0)
 S LRMAILGROUP="LAB MAPPING"
"RTN","LRSRVR5",42,0)
 I '$$GOTLOCAL^XMXAPIG(LRMAILGROUP) D
"RTN","LRSRVR5",43,0)
 . N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR5",44,0)
 . S LRMAILGROUP="LMI"
"RTN","LRSRVR5",45,0)
 . S XQAMSG="Lab "_LRTYPE(0)_" mapping process: No local members in mail group LAB MAPPING"
"RTN","LRSRVR5",46,0)
 . S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_$H
"RTN","LRSRVR5",47,0)
 . D SETUP^XQALERT
"RTN","LRSRVR5",48,0)
 ;
"RTN","LRSRVR5",49,0)
 ; Set lock so only one process runs at a time.
"RTN","LRSRVR5",50,0)
 ; If unable to obtain lock send Kernel alert to notify site that mapping processing unable to start.
"RTN","LRSRVR5",51,0)
 F LRI=1:1:10 L +^XTMP("LABSERVER LOADING"):999 Q:$T
"RTN","LRSRVR5",52,0)
 I '$T D  Q
"RTN","LRSRVR5",53,0)
 . N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR5",54,0)
 . S XQAMSG="Unable to obtain lock to process "_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_" mapping from STS"
"RTN","LRSRVR5",55,0)
 . S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_XMZ
"RTN","LRSRVR5",56,0)
 . D SETUP^XQALERT
"RTN","LRSRVR5",57,0)
 ;
"RTN","LRSRVR5",58,0)
 D EXTRACT
"RTN","LRSRVR5",59,0)
 ;
"RTN","LRSRVR5",60,0)
 ; Set lock so only one process updates file #95.4 at a time.
"RTN","LRSRVR5",61,0)
 ; If unable to obtain lock send Kernel alert to notify site that mapping processing unable to start.
"RTN","LRSRVR5",62,0)
 F LRI=1:1:10 L +^LAHM(LRFILE,0):999 Q:$T
"RTN","LRSRVR5",63,0)
 I '$T D  Q
"RTN","LRSRVR5",64,0)
 . N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR5",65,0)
 . S XQAMSG="Unable to obtain lock on file #"_LRFILE_" to process "_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_" mapping from STS"
"RTN","LRSRVR5",66,0)
 . S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_XMZ
"RTN","LRSRVR5",67,0)
 . D SETUP^XQALERT
"RTN","LRSRVR5",68,0)
 ;
"RTN","LRSRVR5",69,0)
 S (LRCNT,LRI)=0
"RTN","LRSRVR5",70,0)
 F  S LRI=$O(^TMP($J,"LRMAP",LRI)) Q:'LRI  D
"RTN","LRSRVR5",71,0)
 . S LRCNT=LRCNT+1
"RTN","LRSRVR5",72,0)
 . I '(LRCNT#100) H 1 ; take a "rest" - allow OS to swap out process
"RTN","LRSRVR5",73,0)
 . D LDFILE
"RTN","LRSRVR5",74,0)
 ;
"RTN","LRSRVR5",75,0)
 ; Release lock
"RTN","LRSRVR5",76,0)
 L -^LAHM(LRFILE,0)
"RTN","LRSRVR5",77,0)
 ;
"RTN","LRSRVR5",78,0)
 ; Save master list of message handles when it arrives in 'last' message
"RTN","LRSRVR5",79,0)
 I $D(^TMP($J,"LRMAP-HDL")) D
"RTN","LRSRVR5",80,0)
 . S ^XTMP("LRMAP-HDL-"_LRTYPE(0),0)=$$HTFM^XLFDT($H+1,1)_"^"_LRDT_"^"_LRNAME
"RTN","LRSRVR5",81,0)
 . M ^XTMP("LRMAP-HDL-"_LRTYPE(0),1)=^TMP($J,"LRMAP-HDL")
"RTN","LRSRVR5",82,0)
 ;
"RTN","LRSRVR5",83,0)
 ; Save this message's handle
"RTN","LRSRVR5",84,0)
 I LRHDL'="" D
"RTN","LRSRVR5",85,0)
 . S ^XTMP("LRMAP-HDL-"_LRTYPE(0),0)=$$HTFM^XLFDT($H+1,1)_"^"_LRDT_"^"_LRNAME
"RTN","LRSRVR5",86,0)
 . S ^XTMP("LRMAP-HDL-"_LRTYPE(0),2,LRHDL)=XMZ
"RTN","LRSRVR5",87,0)
 ;
"RTN","LRSRVR5",88,0)
 ; Check to see if all the messages have arrived and start loading mapping
"RTN","LRSRVR5",89,0)
 I $D(^XTMP("LRMAP-HDL-"_LRTYPE(0),1)),$D(^XTMP("LRMAP-HDL-"_LRTYPE(0),2)) D
"RTN","LRSRVR5",90,0)
 . N I,LROK
"RTN","LRSRVR5",91,0)
 . S I=0,LROK=1
"RTN","LRSRVR5",92,0)
 . F  S I=$O(^XTMP("LRMAP-HDL-"_LRTYPE(0),1,I)) Q:I=""  S I(0)=^XTMP("LRMAP-HDL-"_LRTYPE(0),1,I,0) I '$D(^XTMP("LRMAP-HDL-"_LRTYPE(0),2,I(0))) S LROK=0
"RTN","LRSRVR5",93,0)
 . I LROK D TASKMAP
"RTN","LRSRVR5",94,0)
 ;
"RTN","LRSRVR5",95,0)
 ; Release lock
"RTN","LRSRVR5",96,0)
 L -^XTMP("LABSERVER LOADING")
"RTN","LRSRVR5",97,0)
 ;
"RTN","LRSRVR5",98,0)
 ; Cleanup mail message after serving
"RTN","LRSRVR5",99,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR5",100,0)
 ;
"RTN","LRSRVR5",101,0)
 Q
"RTN","LRSRVR5",102,0)
 ;
"RTN","LRSRVR5",103,0)
 ;
"RTN","LRSRVR5",104,0)
EXTRACT ; Extract data from PackMan global format in MailMan message.
"RTN","LRSRVR5",105,0)
 ;
"RTN","LRSRVR5",106,0)
 N LRDATA,LRGLO,LRSTART,LRTEXT
"RTN","LRSRVR5",107,0)
 ;
"RTN","LRSRVR5",108,0)
 ;ZEXCEPT: LRDT,LRHDL,LRNAME,LRNODE,LRST,XMFROM,XMREC,XMRG,XMZ
"RTN","LRSRVR5",109,0)
 ;
"RTN","LRSRVR5",110,0)
 ; Check if PackMan message.
"RTN","LRSRVR5",111,0)
 I '$$PAKMAN^XMXSEC1(XMZ,"") Q
"RTN","LRSRVR5",112,0)
 ;
"RTN","LRSRVR5",113,0)
 I $D(^XTMP(LRNODE)) K ^XTMP(LRNODE)
"RTN","LRSRVR5",114,0)
 ;
"RTN","LRSRVR5",115,0)
 S ^XTMP(LRNODE,0)=$$HTFM^XLFDT($H+90,1)_"^"_LRDT_"^"_LRNAME
"RTN","LRSRVR5",116,0)
 S ^XTMP(LRNODE,0,1)="Lab Server triggered at "_LRST_" by "_XMFROM_" on "_$$HTE^XLFDT($H)
"RTN","LRSRVR5",117,0)
 ;
"RTN","LRSRVR5",118,0)
 ; Process message looking for global nodes to load.
"RTN","LRSRVR5",119,0)
 S (LRSTART,LRTEXT)=0,LRHDL=""
"RTN","LRSRVR5",120,0)
 F  X XMREC Q:XMER<0  D
"RTN","LRSRVR5",121,0)
 . I $E(XMRG,1,4)="$TXT" S LRTEXT=1 Q
"RTN","LRSRVR5",122,0)
 . I $E(XMRG,1,8)="END $TXT" S LRTEXT=0 Q
"RTN","LRSRVR5",123,0)
 . I $E(XMRG,1,4)="$GLO" S (LRSTART,LRDATA)=1,LRTEXT=0 Q
"RTN","LRSRVR5",124,0)
 . I $E(XMRG,1,8)="END $GLO" S LRSTART=0 Q
"RTN","LRSRVR5",125,0)
 . I LRTEXT D  Q
"RTN","LRSRVR5",126,0)
 . . I $E(XMRG,1,7)="LR-MAP-" S LRHDL=XMRG Q
"RTN","LRSRVR5",127,0)
 . I 'LRSTART Q
"RTN","LRSRVR5",128,0)
 . I LRDATA S LRDATA=0,LRGLO=XMRG Q
"RTN","LRSRVR5",129,0)
 . S LRDATA=1,@LRGLO=XMRG
"RTN","LRSRVR5",130,0)
 ;
"RTN","LRSRVR5",131,0)
 I LRHDL'="" S ^XTMP(LRNODE,0,2)=LRHDL
"RTN","LRSRVR5",132,0)
 ;
"RTN","LRSRVR5",133,0)
 Q
"RTN","LRSRVR5",134,0)
 ;
"RTN","LRSRVR5",135,0)
 ;
"RTN","LRSRVR5",136,0)
LDFILE ; Load/store entries in mapping transport file.
"RTN","LRSRVR5",137,0)
 ;
"RTN","LRSRVR5",138,0)
 ;ZEXCEPT: DA,DIC,DIK,DINUM,DO,LR4,LRFILE,LRI,LRIEN,LRNOW,LRVAL,LRX,X,Y
"RTN","LRSRVR5",139,0)
 ;
"RTN","LRSRVR5",140,0)
 K DIC,DINUM,DO,LRIEN
"RTN","LRSRVR5",141,0)
 S LRI(0)=^TMP($J,"LRMAP",LRI,0)
"RTN","LRSRVR5",142,0)
 S LRX=$P(LRI(0),"^")
"RTN","LRSRVR5",143,0)
 S LR4=$$IEN^XUAF4($P(LRX,"-"))
"RTN","LRSRVR5",144,0)
 I $P(LRVAL,"^",4)="VAMC",LR4'=$P(LRVAL,"^") Q
"RTN","LRSRVR5",145,0)
 ;
"RTN","LRSRVR5",146,0)
 S X=LRX,DIC="^LAHM(LRFILE,",DIC(0)="F"
"RTN","LRSRVR5",147,0)
 D FILE^DICN
"RTN","LRSRVR5",148,0)
 I Y<1 Q
"RTN","LRSRVR5",149,0)
 S LRIEN=+Y
"RTN","LRSRVR5",150,0)
 ;
"RTN","LRSRVR5",151,0)
 ; Merge rest of entry from TMP global
"RTN","LRSRVR5",152,0)
 M ^LAHM(LRFILE,LRIEN,100)=^TMP($J,"LRMAP",LRI,100)
"RTN","LRSRVR5",153,0)
 ;
"RTN","LRSRVR5",154,0)
 S $P(^LAHM(LRFILE,LRIEN,0),"^",2)=LR4
"RTN","LRSRVR5",155,0)
 S $P(^LAHM(LRFILE,LRIEN,0),"^",3)=$P(LRI(0),"^",3)
"RTN","LRSRVR5",156,0)
 S $P(^LAHM(LRFILE,LRIEN,0),"^",4)=0
"RTN","LRSRVR5",157,0)
 S $P(^LAHM(LRFILE,LRIEN,0),"^",6)=LRNOW
"RTN","LRSRVR5",158,0)
 ;
"RTN","LRSRVR5",159,0)
 ; Index entry
"RTN","LRSRVR5",160,0)
 K DA,DIK
"RTN","LRSRVR5",161,0)
 S DIK="^LAHM(LRFILE,",DA=LRIEN
"RTN","LRSRVR5",162,0)
 D IX1^DIK
"RTN","LRSRVR5",163,0)
 ;
"RTN","LRSRVR5",164,0)
 Q
"RTN","LRSRVR5",165,0)
 ;
"RTN","LRSRVR5",166,0)
 ;
"RTN","LRSRVR5",167,0)
TASKMAP ; Task/run applying the mapping to site's lab files
"RTN","LRSRVR5",168,0)
 ;
"RTN","LRSRVR5",169,0)
 N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR5",170,0)
 ;
"RTN","LRSRVR5",171,0)
 ;ZEXCEPT: LRABORT,LRMAILGROUP,LRTYPE,XMZ
"RTN","LRSRVR5",172,0)
 ;
"RTN","LRSRVR5",173,0)
 ;
"RTN","LRSRVR5",174,0)
 ; Send Kernel alert to notify site that mapping has been triggered.
"RTN","LRSRVR5",175,0)
 S XQAMSG=$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_" mapping has been triggered from STS on "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR5",176,0)
 S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_+$G(XMZ)
"RTN","LRSRVR5",177,0)
 D SETUP^XQALERT
"RTN","LRSRVR5",178,0)
 ;
"RTN","LRSRVR5",179,0)
 I LRTYPE=1 Q
"RTN","LRSRVR5",180,0)
 ;
"RTN","LRSRVR5",181,0)
 ; Load SNOMED CT codes into lab files
"RTN","LRSRVR5",182,0)
 I LRTYPE=2 D
"RTN","LRSRVR5",183,0)
 . D LD^LRSCTF(+$$SITE^VASITE,0)
"RTN","LRSRVR5",184,0)
 . K ^XTMP("LRMAP-HDL-SCT")
"RTN","LRSRVR5",185,0)
 ;
"RTN","LRSRVR5",186,0)
 ; Send Kernel alert to notify site that mapping has ended.
"RTN","LRSRVR5",187,0)
 K XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR5",188,0)
 S XQAMSG=$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_" mapping has "_$S($G(LRABORT):"ABORTED",1:"completed")_" on "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR5",189,0)
 S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_+$G(XMZ)
"RTN","LRSRVR5",190,0)
 D SETUP^XQALERT
"RTN","LRSRVR5",191,0)
 ;
"RTN","LRSRVR5",192,0)
 Q
"RTN","LRSRVR5",193,0)
 ;
"RTN","LRSRVR5",194,0)
 ;
"RTN","LRSRVR5",195,0)
PURGE(LRSTAT,LRDATE) ; Purge entries matching status selected.
"RTN","LRSRVR5",196,0)
 ; Call with:
"RTN","LRSRVR5",197,0)
 ;   LRSTAT = record status to purge
"RTN","LRSRVR5",198,0)
 ;   LRDATE = (optional) only purge records with a Status Date <= LRDATE
"RTN","LRSRVR5",199,0)
 ;
"RTN","LRSRVR5",200,0)
 N DA,DIK,LRQUIT,LRROOT,LRSTATDT
"RTN","LRSRVR5",201,0)
 S LRQUIT=0,LRROOT="^LAHM(95.4,""AE"",LRSTAT)",DIK="^LAHM(95.4,"
"RTN","LRSRVR5",202,0)
 F  S LRROOT=$Q(@LRROOT) D  Q:LRQUIT
"RTN","LRSRVR5",203,0)
 . I LRROOT="" S LRQUIT=1 Q
"RTN","LRSRVR5",204,0)
 . I $QS(LRROOT,2)'="AE" S LRQUIT=1 Q
"RTN","LRSRVR5",205,0)
 . I $QS(LRROOT,3)'=LRSTAT S LRQUIT=1 Q
"RTN","LRSRVR5",206,0)
 . S DA=$QS(LRROOT,4)
"RTN","LRSRVR5",207,0)
 . S LRSTATDT=$P($G(^LAHM(95.4,+DA,0)),U,6)
"RTN","LRSRVR5",208,0)
 . I $G(LRDATE),LRSTATDT>$G(LRDATE) Q
"RTN","LRSRVR5",209,0)
 . D ^DIK
"RTN","LRSRVR5",210,0)
 Q
"RTN","LRSRVR5",211,0)
 ;
"RTN","LRSRVR5",212,0)
 ;
"RTN","LRSRVR5",213,0)
PRGNIGHT ; Called from LRNIGHT to purge eligible entries in file 95.4
"RTN","LRSRVR5",214,0)
 ;
"RTN","LRSRVR5",215,0)
 N LRDAYS,LRDATE,LRSTAT
"RTN","LRSRVR5",216,0)
 ;
"RTN","LRSRVR5",217,0)
 S LRDAYS=$$GET^XPAR("SYS^PKG","LR MAPPING PURGE DAYS",1,"Q")
"RTN","LRSRVR5",218,0)
 S LRDATE=$$FMADD^XLFDT(DT,-LRDAYS,0,0,0)
"RTN","LRSRVR5",219,0)
 F LRSTAT=0,.5,.7,1,2 D PURGE(LRSTAT,LRDATE)
"RTN","LRSRVR5",220,0)
 ;
"RTN","LRSRVR5",221,0)
 Q
"RTN","LRSRVR6")
0^161^B34119485
"RTN","LRSRVR6",1,0)
LRSRVR6 ;DALOI/JMC - LAB DATA SERVER CONT'D SNOMED EXTRACT ;11/18/11  16:52
"RTN","LRSRVR6",2,0)
 ;;5.2;LAB SERVICE;**346,378,350**;Sep 27, 1994;Build 230
"RTN","LRSRVR6",3,0)
 ;
"RTN","LRSRVR6",4,0)
 ; Produces SNOMED extract via LRLABSERVER option
"RTN","LRSRVR6",5,0)
 ;
"RTN","LRSRVR6",6,0)
 ; **** NOTE: if record format is changed then update corresponding extract record building in LRERT ***
"RTN","LRSRVR6",7,0)
 Q
"RTN","LRSRVR6",8,0)
 ;
"RTN","LRSRVR6",9,0)
 ;
"RTN","LRSRVR6",10,0)
SERVER ; Server entry Point
"RTN","LRSRVR6",11,0)
 N I,LRCNT,LREND,LRL,LRMSUBJ,LRST,LRSTN,LRTXT,LRX,LRY
"RTN","LRSRVR6",12,0)
 D BUILD
"RTN","LRSRVR6",13,0)
 S LRMSUBJ=LRST_" "_LRSTN_" SNOMED EXTRACT "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR6",14,0)
 D MAILSEND(LRMSUBJ)
"RTN","LRSRVR6",15,0)
 D CLEAN
"RTN","LRSRVR6",16,0)
 Q
"RTN","LRSRVR6",17,0)
 ;
"RTN","LRSRVR6",18,0)
 ;
"RTN","LRSRVR6",19,0)
BUILD ; Build extract
"RTN","LRSRVR6",20,0)
 ;
"RTN","LRSRVR6",21,0)
 N I,J,LRCNT,LRCRLF,LRETIME,LRFN,LRLEX,LRNAME,LRNODE,LRQUIT,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSPEC,LRSTIME,LRSTR,LRVAL,LRVUID,LRX,LRY,X,Y
"RTN","LRSRVR6",22,0)
 ;
"RTN","LRSRVR6",23,0)
 ;ZEXCEPT: LRST,LRSTN
"RTN","LRSRVR6",24,0)
 ;
"RTN","LRSRVR6",25,0)
 S LRSTIME=$$NOW^XLFDT,LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2),LRSCTVER=""
"RTN","LRSRVR6",26,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR6",27,0)
 K ^TMP($J,"LRDATA")
"RTN","LRSRVR6",28,0)
 S (LRCNT,LRCNT("SCT"),LRCNT("SCT","EC"))=0,LRCRLF=$C(13,10),LRSTR=""
"RTN","LRSRVR6",29,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 S (LRCNT(I),LRCNT(I,"SCT"),LRCNT(I,"SCT","EC"))=0
"RTN","LRSRVR6",30,0)
 D HDR
"RTN","LRSRVR6",31,0)
 ;
"RTN","LRSRVR6",32,0)
 ; Flag to indicate if SNOMED CT is available from LEXICON.
"RTN","LRSRVR6",33,0)
 S LRLEX=0
"RTN","LRSRVR6",34,0)
 I $T(CODE^LEXTRAN)'="" S LRLEX=1
"RTN","LRSRVR6",35,0)
 ;
"RTN","LRSRVR6",36,0)
 F LRFN=61,61.1,61.2,61.3,61.4,61.5,61.6,62  D
"RTN","LRSRVR6",37,0)
 . S LRROOT="^LAB("_LRFN_",""B"")"
"RTN","LRSRVR6",38,0)
 . D FILE
"RTN","LRSRVR6",39,0)
 ;
"RTN","LRSRVR6",40,0)
 S LRETIME=$$NOW^XLFDT
"RTN","LRSRVR6",41,0)
 ; Set the final info into the ^TMP message global
"RTN","LRSRVR6",42,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",43,0)
 I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR4(LRSTR)
"RTN","LRSRVR6",44,0)
 S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR6",45,0)
 S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR6",46,0)
 ;
"RTN","LRSRVR6",47,0)
 S ^TMP($J,"LRDATA",1)=^TMP($J,"LRDATA",1)_" (Run time:"_$$FMDIFF^XLFDT(LRETIME,LRSTIME,3)_")"
"RTN","LRSRVR6",48,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",49,0)
 S J=6
"RTN","LRSRVR6",50,0)
 S ^TMP($J,"LRDATA",J)="Number of records per file:"
"RTN","LRSRVR6",51,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 D
"RTN","LRSRVR6",52,0)
 . S J=J+1
"RTN","LRSRVR6",53,0)
 . S ^TMP($J,"LRDATA",J)=" "_$$LJ^XLFSTR($$GET1^DID(I,"","","NAME")_" File (#"_I_")",32,".")_": "_$J(LRCNT(I),5)_"  ("_LRCNT(I,"SCT")_" mapped)"
"RTN","LRSRVR6",54,0)
 . I LRCNT(I,"SCT","EC") S ^TMP($J,"LRDATA",J)=^TMP($J,"LRDATA",J)_" ("_LRCNT(I,"SCT","EC")_" exceptions)"
"RTN","LRSRVR6",55,0)
 S ^TMP($J,"LRDATA",J+1)=$$LJ^XLFSTR("Total number of records",33,".")_": "_$J(LRCNT,5)_"  ("_LRCNT("SCT")_" mapped)"
"RTN","LRSRVR6",56,0)
 I LRCNT("SCT","EC") S ^TMP($J,"LRDATA",J+1)=^TMP($J,"LRDATA",J+1)_" ("_LRCNT("SCT","EC")_" exceptions)"
"RTN","LRSRVR6",57,0)
 ;
"RTN","LRSRVR6",58,0)
 Q
"RTN","LRSRVR6",59,0)
 ;
"RTN","LRSRVR6",60,0)
 ;
"RTN","LRSRVR6",61,0)
CLEAN ;
"RTN","LRSRVR6",62,0)
 ;
"RTN","LRSRVR6",63,0)
 ;ZEXCEPT: LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",64,0)
 ;
"RTN","LRSRVR6",65,0)
 K ^TMP($J,"LR61")
"RTN","LRSRVR6",66,0)
 K LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",67,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR6",68,0)
 D ^%ZISC
"RTN","LRSRVR6",69,0)
 Q
"RTN","LRSRVR6",70,0)
 ;
"RTN","LRSRVR6",71,0)
 ;
"RTN","LRSRVR6",72,0)
FILE ; Search file entry and build record.
"RTN","LRSRVR6",73,0)
 ;
"RTN","LRSRVR6",74,0)
 N LRNAME,LRVFLD,X
"RTN","LRSRVR6",75,0)
 ;
"RTN","LRSRVR6",76,0)
 ;ZEXCEPT: LRCNT,LRFN,LRIEN,LRLEX,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSNM,LRSPEC,LRSPECN,LRST,LRSTR,LRVUID,LRX
"RTN","LRSRVR6",77,0)
 ;
"RTN","LRSRVR6",78,0)
 ;
"RTN","LRSRVR6",79,0)
 S LRVFLD(21)=$$VFIELD^DILFD(LRFN,21)
"RTN","LRSRVR6",80,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LRSRVR6",81,0)
 . Q:$G(@LRROOT)
"RTN","LRSRVR6",82,0)
 . S LRIEN=$QS(LRROOT,4),LRSPEC=""
"RTN","LRSRVR6",83,0)
 . S LRNAME=$P($G(^LAB(LRFN,LRIEN,0)),"^") ;,LRNAME=$$TRIM^XLFSTR(LRNAME,"RL"," ")
"RTN","LRSRVR6",84,0)
 . S X=$P($G(^LAB(LRFN,LRIEN,0)),"^",2)
"RTN","LRSRVR6",85,0)
 . S LRSNM=$S(LRFN'=62:X,1:"")
"RTN","LRSRVR6",86,0)
 . I LRFN=62 S LRSPEC=X
"RTN","LRSRVR6",87,0)
 . I LRSNM'="",LRFN>60.9,LRFN<61.61 S LRX=((LRFN*10)#610)+1,LRSNM=$E("TMEFDPJ",LRX)_"-"_LRSNM
"RTN","LRSRVR6",88,0)
 . S LRSCT=$P($G(^LAB(LRFN,LRIEN,"SCT")),"^"),(LRSCTEC,LRSCTX,LRVUID)=""
"RTN","LRSRVR6",89,0)
 . I LRLEX,LRSCT'="" D
"RTN","LRSRVR6",90,0)
 . . K LRX
"RTN","LRSRVR6",91,0)
 . . S LRX=$$CODE^LEXTRAN(LRSCT,"SCT",DT,"LRX")
"RTN","LRSRVR6",92,0)
 . . S LRSCTX=$G(LRX("F")),LRSCTEC=$S(LRX<1:$P(LRX,"^",2),1:"")
"RTN","LRSRVR6",93,0)
 . . I LRSCTVER="",LRX>0 S LRSCTVER=$P($G(LRX(0)),"^",3)
"RTN","LRSRVR6",94,0)
 . S LRSTR=LRSTR_LRST_"-"_LRFN_"-"_LRIEN_"|"_LRNAME_"|"_LRSNM_"|"_LRVUID_"|"_LRSCT_"|"_LRSCTX_"|"_LRSCTEC_"|"
"RTN","LRSRVR6",95,0)
 . S LRSPECN="|"
"RTN","LRSRVR6",96,0)
 . I LRFN=62,LRSPEC D
"RTN","LRSRVR6",97,0)
 . . S LRSPECN=$P($G(^LAB(61,LRSPEC,0)),"^")
"RTN","LRSRVR6",98,0)
 . . S LRSPECN=LRSPECN_"|"_LRST_"-61-"_LRSPEC
"RTN","LRSRVR6",99,0)
 . S LRSTR=LRSTR_LRSPECN_"|1.2|"
"RTN","LRSRVR6",100,0)
 . I LRVFLD(21) S LRSTR=LRSTR_$$GET1^DIQ(LRFN,LRIEN_",",21,"I")
"RTN","LRSRVR6",101,0)
 . S LRSTR=LRSTR_"|"
"RTN","LRSRVR6",102,0)
 . S LRCNT=LRCNT+1,LRCNT(LRFN)=LRCNT(LRFN)+1
"RTN","LRSRVR6",103,0)
 . I LRSCT D
"RTN","LRSRVR6",104,0)
 . . S LRCNT("SCT")=LRCNT("SCT")+1,LRCNT(LRFN,"SCT")=LRCNT(LRFN,"SCT")+1
"RTN","LRSRVR6",105,0)
 . . I LRSCTEC'="" S LRCNT("SCT","EC")=LRCNT("SCT","EC")+1,LRCNT(LRFN,"SCT","EC")=LRCNT(LRFN,"SCT","EC")+1
"RTN","LRSRVR6",106,0)
 . D SETDATA
"RTN","LRSRVR6",107,0)
 Q
"RTN","LRSRVR6",108,0)
 ;
"RTN","LRSRVR6",109,0)
 ;
"RTN","LRSRVR6",110,0)
SETDATA ; Set data into report structure
"RTN","LRSRVR6",111,0)
 ;
"RTN","LRSRVR6",112,0)
 ;ZEXCEPT: LRCRLF,LRNODE,LRSTR
"RTN","LRSRVR6",113,0)
 ;
"RTN","LRSRVR6",114,0)
 S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR6",115,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",116,0)
 D ENCODE^LRSRVR4(.LRSTR)
"RTN","LRSRVR6",117,0)
 Q
"RTN","LRSRVR6",118,0)
 ;
"RTN","LRSRVR6",119,0)
 ;
"RTN","LRSRVR6",120,0)
HDR ; Set the header information
"RTN","LRSRVR6",121,0)
 N I,LRFILENM,X
"RTN","LRSRVR6",122,0)
 ;
"RTN","LRSRVR6",123,0)
 ;ZEXCEPT: LRSCTVER,LRSTIME,LRSTN,LRSUB
"RTN","LRSRVR6",124,0)
 ;
"RTN","LRSRVR6",125,0)
 S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT(LRSTIME),"-")_".TXT"
"RTN","LRSRVR6",126,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT(LRSTIME)_" at "_LRSTN
"RTN","LRSRVR6",127,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR6",128,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",129,0)
 S ^TMP($J,"LRDATA",4)="Extract version........: "_$$VER()
"RTN","LRSRVR6",130,0)
 F I=5,15,16,18,23 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR6",131,0)
 S ^TMP($J,"LRDATA",17)="Attached file..........: "_LRFILENM
"RTN","LRSRVR6",132,0)
 S ^TMP($J,"LRDATA",19)="Legend:"
"RTN","LRSRVR6",133,0)
 S X="Station #-File #-IEN|Entry Name|SNOMED I|VUID|SNOMED CT|SNOMED CT TERM|Mapping Exception|Related Specimen|Related Specimen ID|Extract Ver|Term Status|"
"RTN","LRSRVR6",134,0)
 S ^TMP($J,"LRDATA",20)=X
"RTN","LRSRVR6",135,0)
 S X="           1        |     2    |   3    |  4 |    5    |       6      |        7        |        8       |        9          |    10     |     11    |"
"RTN","LRSRVR6",136,0)
 S ^TMP($J,"LRDATA",21)=X
"RTN","LRSRVR6",137,0)
 S ^TMP($J,"LRDATA",22)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR6",138,0)
 S ^TMP($J,"LRDATA",24)=$$UUBEGFN^LRSRVR2A(LRFILENM)
"RTN","LRSRVR6",139,0)
 Q
"RTN","LRSRVR6",140,0)
 ;
"RTN","LRSRVR6",141,0)
 ;
"RTN","LRSRVR6",142,0)
VER() ; Extract version
"RTN","LRSRVR6",143,0)
 Q "1.2"
"RTN","LRSRVR6",144,0)
 ;
"RTN","LRSRVR6",145,0)
 ;
"RTN","LRSRVR6",146,0)
MAILSEND(LRMSUBJ) ; Send extract back to requestor.
"RTN","LRSRVR6",147,0)
 ;
"RTN","LRSRVR6",148,0)
 N LRINSTR,LRTASK,LRTO,XMERR,XMZ
"RTN","LRSRVR6",149,0)
 ;
"RTN","LRSRVR6",150,0)
 ;ZEXCEPT: XQSND
"RTN","LRSRVR6",151,0)
 ;
"RTN","LRSRVR6",152,0)
 S LRTO(XQSND)=""
"RTN","LRSRVR6",153,0)
 S LRINSTR("ADDR FLAGS")="R"
"RTN","LRSRVR6",154,0)
 S LRINSTR("FROM")="LAB_PACKAGE"
"RTN","LRSRVR6",155,0)
 S LRMSUBJ=$E(LRMSUBJ,1,65)
"RTN","LRSRVR6",156,0)
 D SENDMSG^XMXAPI(.5,LRMSUBJ,"^TMP($J,""LRDATA"")",.LRTO,.LRINSTR,.LRTASK)
"RTN","LRSRVR6",157,0)
 Q
"RTN","LRSRVR8")
0^163^B248084471
"RTN","LRSRVR8",1,0)
LRSRVR8 ; DALOI/JMC - LAB DATA SERVER - Utilities ;03/22/11  15:23
"RTN","LRSRVR8",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRSRVR8",3,0)
 ;
"RTN","LRSRVR8",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRSRVR8",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRSRVR8",6,0)
 ;
"RTN","LRSRVR8",7,0)
LOAD ; Load mapping file into VistA as file server for distribution to other sites.
"RTN","LRSRVR8",8,0)
 ;
"RTN","LRSRVR8",9,0)
 N LRFILE,LRRECORDFORMAT,LRMAILGROUP,LRMAILGROUPXQA,LRMAPPINGFILE,LRTYPE,PWD
"RTN","LRSRVR8",10,0)
 K ^TMP($J)
"RTN","LRSRVR8",11,0)
 ;
"RTN","LRSRVR8",12,0)
 D TYPE(1)
"RTN","LRSRVR8",13,0)
 I LRTYPE<1 Q
"RTN","LRSRVR8",14,0)
 ;
"RTN","LRSRVR8",15,0)
 ; Select/get mapping file
"RTN","LRSRVR8",16,0)
 D GETFILE
"RTN","LRSRVR8",17,0)
 I LRFILE="" Q
"RTN","LRSRVR8",18,0)
 ;
"RTN","LRSRVR8",19,0)
 ; Load file into TMP global
"RTN","LRSRVR8",20,0)
 D LOADFILE
"RTN","LRSRVR8",21,0)
 ;
"RTN","LRSRVR8",22,0)
 ; Process file from TMP global into file #95.4
"RTN","LRSRVR8",23,0)
 I $D(^TMP($J,"LRMAP")) D IMPORT(LRTYPE)
"RTN","LRSRVR8",24,0)
 Q
"RTN","LRSRVR8",25,0)
 ;
"RTN","LRSRVR8",26,0)
 ;
"RTN","LRSRVR8",27,0)
LOADSCT ; Load SCT mapping file into VistA and apply mapping.
"RTN","LRSRVR8",28,0)
 ; Called by option LA7S LOAD MAPPING SCT to load and apply mapping directly at the site.
"RTN","LRSRVR8",29,0)
 ;
"RTN","LRSRVR8",30,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,LRACTION,LRFILE,LRMAILGROUP,LRMAPPINGFILE,LRRECORDFORMAT,LRTYPE,PWD,X,Y
"RTN","LRSRVR8",31,0)
 K ^TMP($J)
"RTN","LRSRVR8",32,0)
 S LRTYPE=2,LRTYPE(0)="SCT",LRACTION=1
"RTN","LRSRVR8",33,0)
 ;
"RTN","LRSRVR8",34,0)
 ; Ask if just processing exiting entries and/or load a file.
"RTN","LRSRVR8",35,0)
 I $D(^LAHM(95.4,"AF","SCT")) D
"RTN","LRSRVR8",36,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",37,0)
 . S DIR(0)="SO^1:Load file;2:Process previous loaded file",DIR("B")="2"
"RTN","LRSRVR8",38,0)
 . D ^DIR
"RTN","LRSRVR8",39,0)
 . I Y<1 S LRACTION=0 Q
"RTN","LRSRVR8",40,0)
 . S LRACTION=+Y
"RTN","LRSRVR8",41,0)
 ;
"RTN","LRSRVR8",42,0)
 I LRACTION<1 Q
"RTN","LRSRVR8",43,0)
 ;
"RTN","LRSRVR8",44,0)
 I LRACTION=1 D
"RTN","LRSRVR8",45,0)
 . D GETFILE ; Select/get mapping file
"RTN","LRSRVR8",46,0)
 . I LRFILE="" Q
"RTN","LRSRVR8",47,0)
 . ;
"RTN","LRSRVR8",48,0)
 . D LOADFILE ; Load file into TMP global
"RTN","LRSRVR8",49,0)
 . I '$D(^TMP($J,"LRMAP")) Q
"RTN","LRSRVR8",50,0)
 . ;
"RTN","LRSRVR8",51,0)
 . D IMPORT(LRTYPE) ; Process file from TMP global into file #95.4
"RTN","LRSRVR8",52,0)
 ;
"RTN","LRSRVR8",53,0)
 ; Process entries in file #95.4 and apply to target files.
"RTN","LRSRVR8",54,0)
 I '$D(^LAHM(95.4,"AF","SCT")) D  Q
"RTN","LRSRVR8",55,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",56,0)
 . S DIR(0)="E",DIR("A",1)="No SNOMED CT codes loaded in LAB MAPPING file",DIR("A")="Press any key to continue"
"RTN","LRSRVR8",57,0)
 . D ^DIR
"RTN","LRSRVR8",58,0)
 ;
"RTN","LRSRVR8",59,0)
 K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",60,0)
 S DIR(0)="SO^0:Quit - no action;1:Process SNOMED CT mappings directly;2:Task processing SNOMED CT mappings"
"RTN","LRSRVR8",61,0)
 S DIR("A")="Processing Action",DIR("B")="0"
"RTN","LRSRVR8",62,0)
 D ^DIR
"RTN","LRSRVR8",63,0)
 I Y<1 Q
"RTN","LRSRVR8",64,0)
 ;
"RTN","LRSRVR8",65,0)
 ; Check that mail group has members
"RTN","LRSRVR8",66,0)
 S LRMAILGROUP="LAB MAPPING"
"RTN","LRSRVR8",67,0)
 I '$$GOTLOCAL^XMXAPIG(LRMAILGROUP) D  Q
"RTN","LRSRVR8",68,0)
 . N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR8",69,0)
 . S LRMAILGROUP="LMI"
"RTN","LRSRVR8",70,0)
 . S XQAMSG="Lab "_LRTYPE(0)_" mapping process: No local members in mail group LAB MAPPING"
"RTN","LRSRVR8",71,0)
 . S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_$H
"RTN","LRSRVR8",72,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",73,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",74,0)
 . S DIR(0)="E"
"RTN","LRSRVR8",75,0)
 . S DIR("A",1)="No local active members in mail group LAB MAPPING."
"RTN","LRSRVR8",76,0)
 . S DIR("A",2)="Loading will be aborted until mail group corrected."
"RTN","LRSRVR8",77,0)
 . S DIR("A")="Press any key to continue"
"RTN","LRSRVR8",78,0)
 . D ^DIR
"RTN","LRSRVR8",79,0)
 ;
"RTN","LRSRVR8",80,0)
 ; Task loading of SCT mapping on lab files
"RTN","LRSRVR8",81,0)
 I Y=2 D  Q
"RTN","LRSRVR8",82,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LRSRVR8",83,0)
 . S ZTRTN="TASKSCT^LRSRVR8",ZTDESC="Tasked Loading of SNOMED CT codes mappings on Lab files"
"RTN","LRSRVR8",84,0)
 . S ZTSAVE("LRTYPE*")="",ZTSAVE("LRMAILGROUP")=""
"RTN","LRSRVR8",85,0)
 . S ZTIO=""
"RTN","LRSRVR8",86,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LRSRVR8",87,0)
 . W !,"Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued")
"RTN","LRSRVR8",88,0)
 ;
"RTN","LRSRVR8",89,0)
 ; Load SCT mappings interactively.
"RTN","LRSRVR8",90,0)
 D TASKSCT
"RTN","LRSRVR8",91,0)
 ;
"RTN","LRSRVR8",92,0)
 Q
"RTN","LRSRVR8",93,0)
 ;
"RTN","LRSRVR8",94,0)
 ;
"RTN","LRSRVR8",95,0)
TASKSCT ; Processing applying SCT mappings to local site.
"RTN","LRSRVR8",96,0)
 ;
"RTN","LRSRVR8",97,0)
 ; Load SNOMED CT codes into lab files
"RTN","LRSRVR8",98,0)
 D TASKMAP^LRSRVR5
"RTN","LRSRVR8",99,0)
 ;
"RTN","LRSRVR8",100,0)
 Q
"RTN","LRSRVR8",101,0)
 ;
"RTN","LRSRVR8",102,0)
 ;
"RTN","LRSRVR8",103,0)
SEND ; Send file to LRLABSERVER at specified site.
"RTN","LRSRVR8",104,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,LRASKDOM,LRCNT,LRFILE,LRI,LRPURGE,LRSITE,LRTYPE,X,Y
"RTN","LRSRVR8",105,0)
 ;
"RTN","LRSRVR8",106,0)
 D TYPE(2)
"RTN","LRSRVR8",107,0)
 I LRTYPE<1 Q
"RTN","LRSRVR8",108,0)
 ;
"RTN","LRSRVR8",109,0)
 K DIC,LRSITE
"RTN","LRSRVR8",110,0)
 S DIC="^DIC(4,",DIC(0)="EMOQ",DIC("S")="I $D(^LAHM(95.4,""AC"",+Y))"
"RTN","LRSRVR8",111,0)
 S X=$$SELECT^LRUTIL(.DIC,.LRSITE,"Institution",10,0,0,0)
"RTN","LRSRVR8",112,0)
 I X=0 Q
"RTN","LRSRVR8",113,0)
 I X="*" S LRSITE=1
"RTN","LRSRVR8",114,0)
 ;
"RTN","LRSRVR8",115,0)
 K DIR
"RTN","LRSRVR8",116,0)
 S DIR(0)="Y",DIR("A")="Purge mapping for site after transmitting",DIR("B")="NO"
"RTN","LRSRVR8",117,0)
 D ^DIR
"RTN","LRSRVR8",118,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",119,0)
 S LRPURGE=+Y
"RTN","LRSRVR8",120,0)
 ;
"RTN","LRSRVR8",121,0)
 S X=$$GET^XPAR("USR^PKG^SYS","LR MAPPING ASK DOMAIN",1,"Q")
"RTN","LRSRVR8",122,0)
 W !
"RTN","LRSRVR8",123,0)
 K DIR
"RTN","LRSRVR8",124,0)
 S DIR(0)="YO",DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LRSRVR8",125,0)
 S DIR("A",1)="Answer 'YES' if sending to a test system or a different domain"
"RTN","LRSRVR8",126,0)
 S DIR("A",2)="and specify that system's mail domain when prompted."
"RTN","LRSRVR8",127,0)
 S DIR("A")="Prompt/confirm MailMan Domain for each site"
"RTN","LRSRVR8",128,0)
 D ^DIR
"RTN","LRSRVR8",129,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",130,0)
 S LRASKDOM=Y
"RTN","LRSRVR8",131,0)
 ;
"RTN","LRSRVR8",132,0)
 K DIR
"RTN","LRSRVR8",133,0)
 S DIR(0)="YO",DIR("A")="Ready to send mappings to site(s)",DIR("B")="NO"
"RTN","LRSRVR8",134,0)
 D ^DIR
"RTN","LRSRVR8",135,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",136,0)
 I Y'=1 Q
"RTN","LRSRVR8",137,0)
 ;
"RTN","LRSRVR8",138,0)
 S LRFILE=95.4
"RTN","LRSRVR8",139,0)
 ; Do all sites in file
"RTN","LRSRVR8",140,0)
 I LRSITE=1 D  Q
"RTN","LRSRVR8",141,0)
 . S LRSITE=0
"RTN","LRSRVR8",142,0)
 . F  S LRSITE=$O(^LAHM(LRFILE,"AC",LRSITE)) Q:'LRSITE  D
"RTN","LRSRVR8",143,0)
 . . S LRSITE(LRSITE)=$$NAME^XUAF4(LRSITE)
"RTN","LRSRVR8",144,0)
 . . D BLDMSG
"RTN","LRSRVR8",145,0)
 ;
"RTN","LRSRVR8",146,0)
 ; Do selected sites
"RTN","LRSRVR8",147,0)
 S LRSITE=0
"RTN","LRSRVR8",148,0)
 F  S LRSITE=$O(LRSITE(LRSITE)) Q:'LRSITE  D BLDMSG
"RTN","LRSRVR8",149,0)
 Q
"RTN","LRSRVR8",150,0)
 ;
"RTN","LRSRVR8",151,0)
 ;
"RTN","LRSRVR8",152,0)
IMPORT(LRTYPE) ;
"RTN","LRSRVR8",153,0)
 ; Call with LRTYPE = type of data (1=LOINC, 2=SNOMED, 3=LOINC Database)
"RTN","LRSRVR8",154,0)
 ;
"RTN","LRSRVR8",155,0)
 N LRFILE,LRMAP
"RTN","LRSRVR8",156,0)
 ;
"RTN","LRSRVR8",157,0)
 ;ZEXCEPT: ZTQUEUED
"RTN","LRSRVR8",158,0)
 ;
"RTN","LRSRVR8",159,0)
 ; Check if file exists.
"RTN","LRSRVR8",160,0)
 S LRFILE=95.4
"RTN","LRSRVR8",161,0)
 I '$$VFILE^DILFD(LRFILE) D  Q
"RTN","LRSRVR8",162,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Lab Mapping Transport File (#"_LRFILE_") does NOT exist","","!") Q
"RTN","LRSRVR8",163,0)
 ;
"RTN","LRSRVR8",164,0)
 S LRTYPE(0)=$S(LRTYPE=1:"LN",LRTYPE=2:"SCT",LRTYPE=3:"LNDB",1:"UNK")
"RTN","LRSRVR8",165,0)
 I '$D(ZTQUEUED) W !,"Processing file data and storing in file #",LRFILE D WAIT^DICD
"RTN","LRSRVR8",166,0)
 D BUILD
"RTN","LRSRVR8",167,0)
 ;
"RTN","LRSRVR8",168,0)
 K ^TMP($J,"LRMAP")
"RTN","LRSRVR8",169,0)
 Q
"RTN","LRSRVR8",170,0)
 ;
"RTN","LRSRVR8",171,0)
 ;
"RTN","LRSRVR8",172,0)
BUILD ; Load Records into file
"RTN","LRSRVR8",173,0)
 ;
"RTN","LRSRVR8",174,0)
 N LRCNT,LREND,LRFLD,LRI,LRID,LRLNDBSTART,LRLOINCVERSION,LRNOW,LRQUIT,LRSITE,LRX
"RTN","LRSRVR8",175,0)
 ;
"RTN","LRSRVR8",176,0)
 ;ZEXCEPT: LRTYPE,ZTQUEUED
"RTN","LRSRVR8",177,0)
 ;
"RTN","LRSRVR8",178,0)
 ;
"RTN","LRSRVR8",179,0)
 I '$D(ZTQUEUED) W !
"RTN","LRSRVR8",180,0)
 S LRNOW=$$HTFM^XLFDT($H)
"RTN","LRSRVR8",181,0)
 ; Read and check headers
"RTN","LRSRVR8",182,0)
 S (LRCNT,LREND,LRI,LRQUIT)=0
"RTN","LRSRVR8",183,0)
 I LRTYPE(0)="LNDB" S LRLNDBSTART=0,LRLOINCVERSION=""
"RTN","LRSRVR8",184,0)
 F  S LRI=$O(^TMP($J,"LRMAP",LRI)) Q:LRI<1  D  Q:LREND
"RTN","LRSRVR8",185,0)
 . I '$D(ZTQUEUED),'(LRI#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",186,0)
 . K LRFLD,LRX
"RTN","LRSRVR8",187,0)
 . S LRX=^TMP($J,"LRMAP",LRI,0)
"RTN","LRSRVR8",188,0)
 . I LRTYPE(0)="LN" D  Q
"RTN","LRSRVR8",189,0)
 . . I LRI=1 D  Q
"RTN","LRSRVR8",190,0)
 . . . I LRX'="Station #-File #-IEN|Entry Name" S LREND=1
"RTN","LRSRVR8",191,0)
 . . D PARSELN,FILE
"RTN","LRSRVR8",192,0)
 . I LRTYPE(0)="SCT" D  Q
"RTN","LRSRVR8",193,0)
 . . I LRI=1 D  Q
"RTN","LRSRVR8",194,0)
 . . . D CKSCTHDR Q:LREND
"RTN","LRSRVR8",195,0)
 . . . D BUILDMAP
"RTN","LRSRVR8",196,0)
 . . D PARSESCT,FILE
"RTN","LRSRVR8",197,0)
 . I LRTYPE(0)="LNDB" D  Q
"RTN","LRSRVR8",198,0)
 . . M LRX=^TMP($J,"LRMAP",LRI,"OVF")
"RTN","LRSRVR8",199,0)
 . . I 'LRLNDBSTART D  Q
"RTN","LRSRVR8",200,0)
 . . . D CKLNDBHR
"RTN","LRSRVR8",201,0)
 . . . I LRLNDBSTART D BUILDMLN
"RTN","LRSRVR8",202,0)
 . . D PARSELND,FILE
"RTN","LRSRVR8",203,0)
 ;
"RTN","LRSRVR8",204,0)
 I '$D(ZTQUEUED) W !,"Records added: ",LRCNT
"RTN","LRSRVR8",205,0)
 ;
"RTN","LRSRVR8",206,0)
 Q
"RTN","LRSRVR8",207,0)
 ;
"RTN","LRSRVR8",208,0)
 ;
"RTN","LRSRVR8",209,0)
PARSELN ; Parse record from TMP global for LOINC mapping
"RTN","LRSRVR8",210,0)
 Q
"RTN","LRSRVR8",211,0)
 ;
"RTN","LRSRVR8",212,0)
 ;
"RTN","LRSRVR8",213,0)
PARSELND ; Parse record from TMP global for LOINC Databsae loading
"RTN","LRSRVR8",214,0)
 ;
"RTN","LRSRVR8",215,0)
 ;ZEXCEPT: LRFLD,LRID,LRMAP,LRMAPPINGFILE,LRLOINCVERSION,LRSITE,LRX
"RTN","LRSRVR8",216,0)
 ;
"RTN","LRSRVR8",217,0)
 N LRI,LRLAST
"RTN","LRSRVR8",218,0)
 ;
"RTN","LRSRVR8",219,0)
 S LRI=0
"RTN","LRSRVR8",220,0)
 F  S LRI=$O(LRX(LRI)) Q:'LRI  S LRX=LRX_LRX(LRI)
"RTN","LRSRVR8",221,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",222,0)
 S LRID=$P(LRX,$C(9)),LRSITE=""
"RTN","LRSRVR8",223,0)
 ;
"RTN","LRSRVR8",224,0)
 S LRLAST=$L(LRX,$C(9))
"RTN","LRSRVR8",225,0)
 I $P(LRX,$C(9),LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",226,0)
 F LRI=2:1:LRLAST I $P(LRX,$C(9),LRI)'="" S LRFLD(LRI,0)=LRMAP(LRI),LRFLD(LRI,100,1,0)=$P(LRX,$C(9),LRI)
"RTN","LRSRVR8",227,0)
 ;
"RTN","LRSRVR8",228,0)
 ; Also store name of source file used for these entries.
"RTN","LRSRVR8",229,0)
 S LRFLD(10000,0)=LRMAP(10000),LRFLD(10000,100,1,0)=$G(LRMAPPINGFILE)
"RTN","LRSRVR8",230,0)
 S LRFLD(10001,0)=LRMAP(10001),LRFLD(10001,100,1,0)=$G(LRLOINCVERSION)
"RTN","LRSRVR8",231,0)
 ;
"RTN","LRSRVR8",232,0)
 Q
"RTN","LRSRVR8",233,0)
 ;
"RTN","LRSRVR8",234,0)
 ;
"RTN","LRSRVR8",235,0)
PARSESCT ; Parse record from TMP global for SCT mapping
"RTN","LRSRVR8",236,0)
 ;
"RTN","LRSRVR8",237,0)
 N LRI
"RTN","LRSRVR8",238,0)
 ;
"RTN","LRSRVR8",239,0)
 ;ZEXCEPT: LRFLD,LRID,LRMAP,LRMAPPINGFILE,LRSITE,LRX
"RTN","LRSRVR8",240,0)
 ;
"RTN","LRSRVR8",241,0)
 S LRID=$P(LRX,"|")
"RTN","LRSRVR8",242,0)
 S LRSITE=$$IEN^XUAF4($P(LRID,"-"))
"RTN","LRSRVR8",243,0)
 F LRI=2:1:7 I $P(LRX,"|",LRI)'="" S LRFLD(LRI,0)=LRMAP(LRI),LRFLD(LRI,100,1,0)=$P(LRX,"|",LRI)
"RTN","LRSRVR8",244,0)
 ;
"RTN","LRSRVR8",245,0)
 ; Also store name of source file used to map these entries.
"RTN","LRSRVR8",246,0)
 S LRFLD(10000,0)=LRMAP(10000),LRFLD(10000,100,1,0)=$G(LRMAPPINGFILE)
"RTN","LRSRVR8",247,0)
 ;
"RTN","LRSRVR8",248,0)
 Q
"RTN","LRSRVR8",249,0)
 ;
"RTN","LRSRVR8",250,0)
 ;
"RTN","LRSRVR8",251,0)
FILE ; File the data in file
"RTN","LRSRVR8",252,0)
 ;
"RTN","LRSRVR8",253,0)
 N LRFDA,LRI,LRIEN,LRERR,LRY
"RTN","LRSRVR8",254,0)
 ;
"RTN","LRSRVR8",255,0)
 ;ZEXCEPT: LRCNT,LRFILE,LRFLD,LRID,LRNOW,LRSITE,LRTYPE,ZTQUEUED
"RTN","LRSRVR8",256,0)
 ;
"RTN","LRSRVR8",257,0)
 ; Get and lock file while processing.
"RTN","LRSRVR8",258,0)
 F  L +^LAHM(95.4,0):999 Q:$T
"RTN","LRSRVR8",259,0)
 ;
"RTN","LRSRVR8",260,0)
 ; Build FDA array and merge in data.
"RTN","LRSRVR8",261,0)
 S LRFDA(1,LRFILE,"?+1,",.01)=LRID
"RTN","LRSRVR8",262,0)
 S LRFDA(1,LRFILE,"?+1,",2)=LRSITE
"RTN","LRSRVR8",263,0)
 S LRFDA(1,LRFILE,"?+1,",3)=LRTYPE(0)
"RTN","LRSRVR8",264,0)
 S LRFDA(1,LRFILE,"?+1,",4)=0
"RTN","LRSRVR8",265,0)
 S LRFDA(1,LRFILE,"?+1,",6)=LRNOW
"RTN","LRSRVR8",266,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LRERR")
"RTN","LRSRVR8",267,0)
 I $D(LRERR) D  Q
"RTN","LRSRVR8",268,0)
 . I $D(ZTQUEUED) Q
"RTN","LRSRVR8",269,0)
 . K LRY
"RTN","LRSRVR8",270,0)
 . S LRY(1)="WARNING: Update failed for ID# "_LRID
"RTN","LRSRVR8",271,0)
 . S LRY(2)=$G(LRERR("DIERR","1","TEXT",1))
"RTN","LRSRVR8",272,0)
 . D EN^DDIOL(.LRY,"","!!?2")
"RTN","LRSRVR8",273,0)
 S LRCNT=LRCNT+1
"RTN","LRSRVR8",274,0)
 ;
"RTN","LRSRVR8",275,0)
 ; Store data
"RTN","LRSRVR8",276,0)
 S LRI=0
"RTN","LRSRVR8",277,0)
 F  S LRI=$O(LRFLD(LRI)) Q:'LRI  D
"RTN","LRSRVR8",278,0)
 . S ^LAHM(LRFILE,LRIEN(1),100,LRI,0)=LRFLD(LRI,0)
"RTN","LRSRVR8",279,0)
 . S ^LAHM(LRFILE,LRIEN(1),100,LRI,100,0)="^94.5011^^"
"RTN","LRSRVR8",280,0)
 . M ^LAHM(LRFILE,LRIEN(1),100,LRI,100)=LRFLD(LRI,100)
"RTN","LRSRVR8",281,0)
 ;
"RTN","LRSRVR8",282,0)
 ; Unlock transport global.
"RTN","LRSRVR8",283,0)
 L -^LAHM(95.4,0)
"RTN","LRSRVR8",284,0)
 ;
"RTN","LRSRVR8",285,0)
 Q
"RTN","LRSRVR8",286,0)
 ;
"RTN","LRSRVR8",287,0)
 ;
"RTN","LRSRVR8",288,0)
BLDMSG ; Build and send message for a specific site.
"RTN","LRSRVR8",289,0)
 ;
"RTN","LRSRVR8",290,0)
 N LRDOMAIN,LRENDMSG,LRHDL,LRMAXREC,LRMSG,LRXMZ
"RTN","LRSRVR8",291,0)
 ;
"RTN","LRSRVR8",292,0)
 ;ZEXCEPT: LRASKDOM,LRCNT,LRFILE,LRI,LRPURGE,LRSITE,LRTYPE,ZTQUEUED
"RTN","LRSRVR8",293,0)
 ;
"RTN","LRSRVR8",294,0)
 ;
"RTN","LRSRVR8",295,0)
 S LRDOMAIN=$$WHAT^XUAF4(LRSITE,60)
"RTN","LRSRVR8",296,0)
 I LRASKDOM D
"RTN","LRSRVR8",297,0)
 . N DIC,X,Y
"RTN","LRSRVR8",298,0)
 . W !!,"For ",LRSITE(LRSITE)
"RTN","LRSRVR8",299,0)
 . I LRDOMAIN'="" S DIC("B")=LRDOMAIN
"RTN","LRSRVR8",300,0)
 . S DIC=4.2,DIC(0)="AEMQ",DIC("A")="Send to MailMan DOMAIN: " D ^DIC
"RTN","LRSRVR8",301,0)
 . I Y<1 S LRDOMAIN="" Q
"RTN","LRSRVR8",302,0)
 . S LRDOMAIN=$P(Y,"^",2)
"RTN","LRSRVR8",303,0)
 I LRDOMAIN="" D  Q
"RTN","LRSRVR8",304,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("No MailMan DOMAIN specified for this facility","","!?2") Q
"RTN","LRSRVR8",305,0)
 ;
"RTN","LRSRVR8",306,0)
 K ^TMP($J,"LRMAP"),^TMP($J,"LRMSG"),^TMP($J,"LRMAP-HDL")
"RTN","LRSRVR8",307,0)
 ;
"RTN","LRSRVR8",308,0)
 ; Move entries related to this institution to TMP global.
"RTN","LRSRVR8",309,0)
 ; Clear file #4 pointer in 2nd piece, resolve institution at target site based on .01 field
"RTN","LRSRVR8",310,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",311,0)
 . D WAIT^DICD
"RTN","LRSRVR8",312,0)
 . W !,"Processing facility ",LRSITE(LRSITE),!,"Collecting records to build into mail message "
"RTN","LRSRVR8",313,0)
 S (LRCNT,LRI,LRMSG)=0
"RTN","LRSRVR8",314,0)
 S LRMAXREC=$$GET^XPAR("USR^PKG^SYS","LR MAPPING MESSAGE MAX RECORDS",1,"Q")
"RTN","LRSRVR8",315,0)
 I LRMAXREC<1 S LRMAXREC=3000
"RTN","LRSRVR8",316,0)
 F  S LRI=$O(^LAHM(LRFILE,"AC",LRSITE,LRI)) Q:'LRI  D
"RTN","LRSRVR8",317,0)
 . I $P(^LAHM(LRFILE,LRI,0),"^",3)'=LRTYPE(0) Q
"RTN","LRSRVR8",318,0)
 . S LRCNT=LRCNT+1
"RTN","LRSRVR8",319,0)
 . I '(LRCNT#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",320,0)
 . I LRCNT#LRMAXREC=1 S LRMSG=LRMSG+1
"RTN","LRSRVR8",321,0)
 . M ^TMP($J,"LRMSG",LRMSG,LRI)=^LAHM(LRFILE,LRI)
"RTN","LRSRVR8",322,0)
 . S $P(^TMP($J,"LRMSG",LRMSG,LRI,0),"^",2)=""
"RTN","LRSRVR8",323,0)
 ;
"RTN","LRSRVR8",324,0)
 I '$D(^TMP($J,"LRMSG")) D  Q
"RTN","LRSRVR8",325,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("NO data to transport","","!?2") Q
"RTN","LRSRVR8",326,0)
 ;
"RTN","LRSRVR8",327,0)
 I '$D(ZTQUEUED) W !,"Building records into mail message"
"RTN","LRSRVR8",328,0)
 S (LRI,LRENDMSG)=0
"RTN","LRSRVR8",329,0)
 F  S LRI=$O(^TMP($J,"LRMSG",LRI)) Q:'LRI  D
"RTN","LRSRVR8",330,0)
 . K ^TMP($J,"LRMAP")
"RTN","LRSRVR8",331,0)
 . M ^TMP($J,"LRMAP")=^TMP($J,"LRMSG",LRI)
"RTN","LRSRVR8",332,0)
 . I LRI=LRMSG S LRENDMSG=1
"RTN","LRSRVR8",333,0)
 . S X=$$HANDLE^XUSRB4("LR-MAP-"_LRTYPE(0)_"-",0)
"RTN","LRSRVR8",334,0)
 . S LRHDL=X,^TMP($J,"LRMAP-HDL",LRI,0)=X
"RTN","LRSRVR8",335,0)
 . D BUILDMSG
"RTN","LRSRVR8",336,0)
 ;
"RTN","LRSRVR8",337,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",338,0)
 . W !,"Number of records transported: "_LRCNT
"RTN","LRSRVR8",339,0)
 . W !,"MailMan Message ID's: "
"RTN","LRSRVR8",340,0)
 . S LRI=""
"RTN","LRSRVR8",341,0)
 . F  S LRI=$O(LRXMZ(LRI)) Q:LRI=""  W ?23,LRI,!
"RTN","LRSRVR8",342,0)
 ;
"RTN","LRSRVR8",343,0)
 K ^TMP($J,"LRMAP"),^TMP($J,"LRMSG")
"RTN","LRSRVR8",344,0)
 ;
"RTN","LRSRVR8",345,0)
 I LRPURGE D PURGE
"RTN","LRSRVR8",346,0)
 ;
"RTN","LRSRVR8",347,0)
 Q
"RTN","LRSRVR8",348,0)
 ;
"RTN","LRSRVR8",349,0)
 ;
"RTN","LRSRVR8",350,0)
PURGE ; Purge related entries from file #95.4 for this site.
"RTN","LRSRVR8",351,0)
 N DIK,LRCNT,LRI
"RTN","LRSRVR8",352,0)
 ;
"RTN","LRSRVR8",353,0)
 ;ZEXCEPT: DA,LRFILE,LRSITE,ZTQUEUED
"RTN","LRSRVR8",354,0)
 ;
"RTN","LRSRVR8",355,0)
 W !,"Purging related entries from file #",LRFILE
"RTN","LRSRVR8",356,0)
 I '$D(ZTQUEUED) D WAIT^DICD
"RTN","LRSRVR8",357,0)
 ;
"RTN","LRSRVR8",358,0)
 S (LRCNT,LRI)=0,DIK="^LAHM(LRFILE,"
"RTN","LRSRVR8",359,0)
 F  S LRI=$O(^LAHM(LRFILE,"AC",LRSITE,LRI)) Q:'LRI  D
"RTN","LRSRVR8",360,0)
 . S LRCNT=LRCNT+1,DA=LRI D ^DIK
"RTN","LRSRVR8",361,0)
 . I '$D(ZTQUEUED),'(LRCNT#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",362,0)
 Q
"RTN","LRSRVR8",363,0)
 ;
"RTN","LRSRVR8",364,0)
 ;
"RTN","LRSRVR8",365,0)
GETFILE ; Select the file to process
"RTN","LRSRVR8",366,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILE,FILESPEC,LRFSPEC,LRHELP,LRNUM,X,Y
"RTN","LRSRVR8",367,0)
 ;
"RTN","LRSRVR8",368,0)
 ;ZEXCEPT: LRFILE,LRMAPPINGFILE,PWD
"RTN","LRSRVR8",369,0)
 ;
"RTN","LRSRVR8",370,0)
 K ^TMP($J),LRFILE
"RTN","LRSRVR8",371,0)
 S PWD=$$PWD^%ZISH()
"RTN","LRSRVR8",372,0)
 S X=$$GET^XPAR("USR^PKG^SYS","LR MAPPING DEFAULT DIRECTORY",1,"Q")
"RTN","LRSRVR8",373,0)
 I X'="" S PWD=X
"RTN","LRSRVR8",374,0)
 S LRFILE=""
"RTN","LRSRVR8",375,0)
 ;
"RTN","LRSRVR8",376,0)
 S DIR(0)="FO^1:245",DIR("A")="Host File Directory",DIR("B")=PWD
"RTN","LRSRVR8",377,0)
 F  D  Q:$D(DIRUT)!(PWD'="")
"RTN","LRSRVR8",378,0)
 . D ^DIR
"RTN","LRSRVR8",379,0)
 . I $D(DIRUT) Q
"RTN","LRSRVR8",380,0)
 . S PWD=$$DEFDIR^%ZISH(Y)
"RTN","LRSRVR8",381,0)
 . I PWD="" W !,"Invalid directory syntax",!
"RTN","LRSRVR8",382,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",383,0)
 D EN^XPAR("USR","LR MAPPING DEFAULT DIRECTORY",1,PWD)
"RTN","LRSRVR8",384,0)
 ;
"RTN","LRSRVR8",385,0)
 S LRFSPEC=$$GET^XPAR("USR^PKG^SYS","LR MAPPING DEFAULT FILESPEC",1,"Q")
"RTN","LRSRVR8",386,0)
 I LRFSPEC'="" S FILESPEC(LRFSPEC)="" W !,"Using filespec ",LRFSPEC
"RTN","LRSRVR8",387,0)
 S Y=$$LIST^%ZISH(PWD,"FILESPEC","LRFILE")
"RTN","LRSRVR8",388,0)
 I $O(LRFILE(""))="" W !,"No "_$S(LRFSPEC="":"",1:LRFSPEC_" ")_"files found in directory ",PWD,! Q
"RTN","LRSRVR8",389,0)
 ;
"RTN","LRSRVR8",390,0)
 S LRNUM=0,FILE=""
"RTN","LRSRVR8",391,0)
 F  S FILE=$O(LRFILE(FILE)) Q:FILE=""  S LRNUM=LRNUM+1,LRNUM(LRNUM)=FILE,LRHELP(LRNUM)=LRNUM_"  "_FILE
"RTN","LRSRVR8",392,0)
 K DIR
"RTN","LRSRVR8",393,0)
 S DIR(0)="NAO^1:"_LRNUM,DIR("A")="Select FILE: ",DIR("B")=$O(LRNUM(0))
"RTN","LRSRVR8",394,0)
 S DIR("?")="Select a file by number from the list" M DIR("?")=LRHELP
"RTN","LRSRVR8",395,0)
 D ^DIR
"RTN","LRSRVR8",396,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",397,0)
 S (LRFILE,LRMAPPINGFILE)=LRNUM(Y)
"RTN","LRSRVR8",398,0)
 Q
"RTN","LRSRVR8",399,0)
 ;
"RTN","LRSRVR8",400,0)
 ;
"RTN","LRSRVR8",401,0)
LOADFILE ; Load selected file into TMP global.
"RTN","LRSRVR8",402,0)
 ;
"RTN","LRSRVR8",403,0)
 N LRBACKUPDIR
"RTN","LRSRVR8",404,0)
 ;
"RTN","LRSRVR8",405,0)
 ;ZEXCEPT: LRFILE,LRMAILGROUPXQA,PWD,XQA,XQAMSG,Y,ZTQUEUED
"RTN","LRSRVR8",406,0)
 ;
"RTN","LRSRVR8",407,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",408,0)
 . W !,"Directory: "_PWD
"RTN","LRSRVR8",409,0)
 . W !,"File.....: "_LRFILE
"RTN","LRSRVR8",410,0)
 . W !,"Loading file into TMP global"
"RTN","LRSRVR8",411,0)
 . D WAIT^DICD
"RTN","LRSRVR8",412,0)
 ;
"RTN","LRSRVR8",413,0)
 S Y=$$FTG^%ZISH(PWD,LRFILE,$NA(^TMP($J,"LRMAP",1,0)),3,"OVF")
"RTN","LRSRVR8",414,0)
 I Y<1 D
"RTN","LRSRVR8",415,0)
 . I '$D(ZTQUEUED) W !!,*7,"File failed to load into TMP global",!! Q
"RTN","LRSRVR8",416,0)
 . S XQAMSG="Lab Mapping: Unable to load "_LRFILE_" into TMP global"
"RTN","LRSRVR8",417,0)
 . S XQA(LRMAILGROUPXQA)=""
"RTN","LRSRVR8",418,0)
 . S XQA(DUZ)=""
"RTN","LRSRVR8",419,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",420,0)
 ;
"RTN","LRSRVR8",421,0)
 ;
"RTN","LRSRVR8",422,0)
 ; If processed directory specified then move file to that directory
"RTN","LRSRVR8",423,0)
 S LRBACKUPDIR=$$GET^XPAR("USR^PKG^SYS","LR MAPPING PROCESSED DIRECTORY",1,"Q")
"RTN","LRSRVR8",424,0)
 I LRBACKUPDIR="" Q
"RTN","LRSRVR8",425,0)
 S Y=$$MV^%ZISH(PWD,LRFILE,LRBACKUPDIR,LRFILE)
"RTN","LRSRVR8",426,0)
 I Y<1 D
"RTN","LRSRVR8",427,0)
 . I '$D(ZTQUEUED) W !!,*7,"Failed to move file from directory "_PWD_" to directory "_LRBACKUPDIR,!! Q
"RTN","LRSRVR8",428,0)
 . S XQAMSG="Lab Mapping: Unable to move "_LRFILE_" to "_LRBACKUPDIR
"RTN","LRSRVR8",429,0)
 . S XQA(LRMAILGROUPXQA)=""
"RTN","LRSRVR8",430,0)
 . S XQA(DUZ)=""
"RTN","LRSRVR8",431,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",432,0)
 ;
"RTN","LRSRVR8",433,0)
 Q
"RTN","LRSRVR8",434,0)
 ;
"RTN","LRSRVR8",435,0)
 ;
"RTN","LRSRVR8",436,0)
BUILDMAP ; Build map of field names related to field # in record
"RTN","LRSRVR8",437,0)
 N I,LRLAST,LRY
"RTN","LRSRVR8",438,0)
 ;
"RTN","LRSRVR8",439,0)
 ;ZEXCEPT: LRMAP,LRX
"RTN","LRSRVR8",440,0)
 ;
"RTN","LRSRVR8",441,0)
 K LRMAP
"RTN","LRSRVR8",442,0)
 ;
"RTN","LRSRVR8",443,0)
 ; SNOMED CT format 1:  Station #-File #-IEN|Entry Name|SNOMED I|STS_FURTHER_ACTION|STS_SCT_ID|STS_TYPE_OF_MATCH|
"RTN","LRSRVR8",444,0)
 ; SNOMED CT format 2:  Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|
"RTN","LRSRVR8",445,0)
 ; SNOMED CT format 2:  Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|
"RTN","LRSRVR8",446,0)
 ;
"RTN","LRSRVR8",447,0)
 ;       LOINC format: TBD
"RTN","LRSRVR8",448,0)
 ;
"RTN","LRSRVR8",449,0)
 ; Handle if last character a delimiter or part of field name
"RTN","LRSRVR8",450,0)
 S LRLAST=$L(LRX,"|")
"RTN","LRSRVR8",451,0)
 I $P(LRX,"|",LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",452,0)
 F I=1:1:LRLAST S LRY=$S($P(LRX,"|",I)'="":$P(LRX,"|",I),1:"BLANK"),LRMAP(I)=I_":"_LRY
"RTN","LRSRVR8",453,0)
 ;
"RTN","LRSRVR8",454,0)
 S LRMAP(10000)="10000:MAPPING SOURCE FILE"
"RTN","LRSRVR8",455,0)
 ;
"RTN","LRSRVR8",456,0)
 Q
"RTN","LRSRVR8",457,0)
 ;
"RTN","LRSRVR8",458,0)
 ;
"RTN","LRSRVR8",459,0)
BUILDMLN ; Build map of field names related to field # in record for LOINC database file
"RTN","LRSRVR8",460,0)
 N I,LRLAST,LRY
"RTN","LRSRVR8",461,0)
 ;
"RTN","LRSRVR8",462,0)
 ;ZEXCEPT: LRMAP,LRX
"RTN","LRSRVR8",463,0)
 ;
"RTN","LRSRVR8",464,0)
 K LRMAP
"RTN","LRSRVR8",465,0)
 ;
"RTN","LRSRVR8",466,0)
 ;       LOINC format: TBD
"RTN","LRSRVR8",467,0)
 ;
"RTN","LRSRVR8",468,0)
 ; Handle if last character a delimiter or part of field name
"RTN","LRSRVR8",469,0)
 S I=0
"RTN","LRSRVR8",470,0)
 F  S I=$O(LRX(I)) Q:'I  S LRX=LRX_LRX(I)
"RTN","LRSRVR8",471,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",472,0)
 ;
"RTN","LRSRVR8",473,0)
 S LRLAST=$L(LRX,$C(9))
"RTN","LRSRVR8",474,0)
 I $P(LRX,$C(9),LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",475,0)
 F I=1:1:LRLAST S LRY=$S($P(LRX,$C(9),I)'="":$P(LRX,$C(9),I),1:"BLANK-"_I),LRMAP(I)=I_":"_LRY
"RTN","LRSRVR8",476,0)
 ;
"RTN","LRSRVR8",477,0)
 S LRMAP(10000)="10000:MAPPING SOURCE FILE"
"RTN","LRSRVR8",478,0)
 S LRMAP(10001)="10001:LOINC VERSION"
"RTN","LRSRVR8",479,0)
 ;
"RTN","LRSRVR8",480,0)
 Q
"RTN","LRSRVR8",481,0)
 ;
"RTN","LRSRVR8",482,0)
 ;
"RTN","LRSRVR8",483,0)
TYPE(LRFUNC) ; Ask what code set
"RTN","LRSRVR8",484,0)
 ; Call with function to perform: 1-load mapping file, 2-transport mapping to site
"RTN","LRSRVR8",485,0)
 ;
"RTN","LRSRVR8",486,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRSRVR8",487,0)
 ;
"RTN","LRSRVR8",488,0)
 ;ZEXCEPT: LRTYPE
"RTN","LRSRVR8",489,0)
 ;
"RTN","LRSRVR8",490,0)
 ;
"RTN","LRSRVR8",491,0)
 S DIR(0)="SO^1:LOINC;2:SNOMED CT;3:LOINC Database",DIR("A")="Type of mapping to "_$S(LRFUNC=1:"load",LRFUNC=2:"transport",1:"")
"RTN","LRSRVR8",492,0)
 D ^DIR
"RTN","LRSRVR8",493,0)
 I $D(DIRUT) S LRTYPE=0 Q
"RTN","LRSRVR8",494,0)
 S LRTYPE=Y,LRTYPE(0)=$S(Y=1:"LN",Y=2:"SCT",Y=3:"LNDB",1:"")
"RTN","LRSRVR8",495,0)
 Q
"RTN","LRSRVR8",496,0)
 ;
"RTN","LRSRVR8",497,0)
 ;
"RTN","LRSRVR8",498,0)
BUILDMSG ; Build the MailMan PackMan message
"RTN","LRSRVR8",499,0)
 ;
"RTN","LRSRVR8",500,0)
 N LRI,MSG,XMDUN,XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,X,Y
"RTN","LRSRVR8",501,0)
 ;
"RTN","LRSRVR8",502,0)
 ;ZEXCEPT: LRDOMAIN,LRENDMSG,LRHDL,LRTYPE,LRXMZ
"RTN","LRSRVR8",503,0)
 ;
"RTN","LRSRVR8",504,0)
 K ^TMP("XMP",$J)
"RTN","LRSRVR8",505,0)
 S ^TMP("XMP",$J,1,0)=LRHDL
"RTN","LRSRVR8",506,0)
 ;
"RTN","LRSRVR8",507,0)
 S XMSUB=$S(LRTYPE=1:"RELMA",LRTYPE=2:"SNOMED",1:"")_" MAPPING",XMY("S.LRLABSERVER@"_LRDOMAIN)="",XMTEXT="^TMP($J,""LRMAP"",;"
"RTN","LRSRVR8",508,0)
 I LRENDMSG S XMTEXT=XMTEXT_"^TMP($J,""LRMAP-HDL"",;"
"RTN","LRSRVR8",509,0)
 S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR8",510,0)
 D ENT^XMPG
"RTN","LRSRVR8",511,0)
 ;
"RTN","LRSRVR8",512,0)
 ; Inform sender of action status
"RTN","LRSRVR8",513,0)
 S MSG=""
"RTN","LRSRVR8",514,0)
 I $G(XMZ)>0 D
"RTN","LRSRVR8",515,0)
 . S LRXMZ(XMZ)=""
"RTN","LRSRVR8",516,0)
 . S MSG(1)="MailMan message #"_XMZ_" queued for transmission to:",MSG(1,"F")="!!"
"RTN","LRSRVR8",517,0)
 . S MSG(2)="S.LRLABSERVER@"_LRDOMAIN,MSG(2,"F")="!?3"
"RTN","LRSRVR8",518,0)
 E  S MSG(1)="MailMan message generation failed with error: ",MSG(1,"F")="!!",MSG(2)=XMMG,MSG(2,"F")="!?3"
"RTN","LRSRVR8",519,0)
 D EN^DDIOL(.MSG,"","")
"RTN","LRSRVR8",520,0)
 Q
"RTN","LRSRVR8",521,0)
 ;
"RTN","LRSRVR8",522,0)
 ;
"RTN","LRSRVR8",523,0)
INIT ; Initialize variables used by process.
"RTN","LRSRVR8",524,0)
 ;
"RTN","LRSRVR8",525,0)
 ;ZEXCEPT: LRMAILGROUP,LRMAILGROUPXQA
"RTN","LRSRVR8",526,0)
 ;
"RTN","LRSRVR8",527,0)
 S (LRMAILGROUP,LRMAILGROUPXQA)="G.LAB MAPPING"
"RTN","LRSRVR8",528,0)
 ; If no local members then use LMI group
"RTN","LRSRVR8",529,0)
 I '$$GOTLOCAL^XMXAPIG("LAB MAPPING") S (LRMAILGROUP,LRMAILGROUPXQA)="G.LMI"
"RTN","LRSRVR8",530,0)
 ;
"RTN","LRSRVR8",531,0)
 Q
"RTN","LRSRVR8",532,0)
 ;
"RTN","LRSRVR8",533,0)
 ;
"RTN","LRSRVR8",534,0)
CKSCTHDR ; Check the header of the file to determine if it's
"RTN","LRSRVR8",535,0)
 ;  - the right type of file
"RTN","LRSRVR8",536,0)
 ;  - the record format
"RTN","LRSRVR8",537,0)
 ;
"RTN","LRSRVR8",538,0)
 ;ZEXCEPT: LREND,LRQUIT,LRRECORDFORMAT,LRX
"RTN","LRSRVR8",539,0)
 ;
"RTN","LRSRVR8",540,0)
 N LRY
"RTN","LRSRVR8",541,0)
 ;
"RTN","LRSRVR8",542,0)
 S (LRQUIT,LREND)=1,LRRECORDFORMAT=0
"RTN","LRSRVR8",543,0)
 ;
"RTN","LRSRVR8",544,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|STS_FURTHER_ACTION|STS_SCT_ID|STS_TYPE_OF_MATCH|"
"RTN","LRSRVR8",545,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=1 Q
"RTN","LRSRVR8",546,0)
 ;
"RTN","LRSRVR8",547,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|"
"RTN","LRSRVR8",548,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=2 Q
"RTN","LRSRVR8",549,0)
 ;
"RTN","LRSRVR8",550,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|"
"RTN","LRSRVR8",551,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=2 Q
"RTN","LRSRVR8",552,0)
 ;
"RTN","LRSRVR8",553,0)
 Q
"RTN","LRSRVR8",554,0)
 ;
"RTN","LRSRVR8",555,0)
 ;
"RTN","LRSRVR8",556,0)
CKLNDBHR ; Check the header of the file to determine if it's
"RTN","LRSRVR8",557,0)
 ;  - the right type of file
"RTN","LRSRVR8",558,0)
 ;  - the record format
"RTN","LRSRVR8",559,0)
 ;
"RTN","LRSRVR8",560,0)
 ;ZEXCEPT: LREND,LRQUIT,LRLNDBSTART,LRLOINCVERSION,LRX
"RTN","LRSRVR8",561,0)
 ;
"RTN","LRSRVR8",562,0)
 N LRY
"RTN","LRSRVR8",563,0)
 ;
"RTN","LRSRVR8",564,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",565,0)
 ;
"RTN","LRSRVR8",566,0)
 S LRY="LOINC(R) Database Version"
"RTN","LRSRVR8",567,0)
 I $E(LRX,1,$L(LRY))=LRY S LRLOINCVERSION=$$TRIM^XLFSTR($E(LRX,$L(LRY)+1,$L(LRX)),"LR"," ") Q
"RTN","LRSRVR8",568,0)
 ;
"RTN","LRSRVR8",569,0)
 S LRY="LOINC_NUM"
"RTN","LRSRVR8",570,0)
 I $$UP^XLFSTR($E(LRX,1,$L(LRY)))=LRY S (LRQUIT,LREND)=0,LRLNDBSTART=1
"RTN","LRSRVR8",571,0)
 ;
"RTN","LRSRVR8",572,0)
 Q
"RTN","LRSTUF2")
0^127^B21119353
"RTN","LRSTUF2",1,0)
LRSTUF2 ;DALOI/STAFF - MASS DATA ENTRY INTO FILE 63.04 ;07/12/12  17:03
"RTN","LRSTUF2",2,0)
 ;;5.2;LAB SERVICE;**121,153,263,347,350**;Sep 27, 1994;Build 230
"RTN","LRSTUF2",3,0)
 ;
"RTN","LRSTUF2",4,0)
LRSTUFF ;
"RTN","LRSTUF2",5,0)
 N LRCDT
"RTN","LRSTUF2",6,0)
 W !,"Acc #: ",LRAN
"RTN","LRSTUF2",7,0)
 ;
"RTN","LRSTUF2",8,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))!'$D(^(3)) W !," not set up." Q
"RTN","LRSTUF2",9,0)
 ;
"RTN","LRSTUF2",10,0)
 S LRNOP=1,I=0
"RTN","LRSTUF2",11,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<1  I $D(^(I,0)),LRTESTSV=+^(0) S LRNOP=0
"RTN","LRSTUF2",12,0)
 I LRNOP W " doesn't have the selected test." Q
"RTN","LRSTUF2",13,0)
 ;
"RTN","LRSTUF2",14,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRODT=$P(^(0),U,4),LRSN=$P(^(0),U,5)
"RTN","LRSTUF2",15,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRSTUF2",16,0)
 W ?15,PNM,?45,SSN
"RTN","LRSTUF2",17,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))
"RTN","LRSTUF2",18,0)
 ;
"RTN","LRSTUF2",19,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U),LRIDT=$P(^(3),U,5),LRMETH="(BD)"_DUZ_"/"_DUZ(2)
"RTN","LRSTUF2",20,0)
 I LRDPF'=62.3 S LRLLOC=$P(^(0),U,7) S:LRLLOC="" LRLLOC="UNKNOWN" W ?65,LRLLOC
"RTN","LRSTUF2",21,0)
 ;
"RTN","LRSTUF2",22,0)
 L +^LR(LRDFN,"CH",LRIDT):DILOCKTM
"RTN","LRSTUF2",23,0)
 I '$T W !!,"Someone else is editing this entry ",!,$C(7) Q
"RTN","LRSTUF2",24,0)
 ;
"RTN","LRSTUF2",25,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),U,3),("pending"'[$S($D(^(LRFLD)):$P(^(LRFLD),U,1),1:"pending")) W !?25,"VERIFIED DATA, CAN'T CHANGE" L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",26,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),U,3) W !?5,"Some Data Already Verified"
"RTN","LRSTUF2",27,0)
 I '$T,$O(^LR(LRDFN,LRSS,LRIDT,1))>1 W !?5,"Some Unverified Data Already Entered." L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",28,0)
 ;
"RTN","LRSTUF2",29,0)
 S I=0 F  S I=$O(^TMP("LR",$J,"VTO",I)) Q:I<1  S ^TMP("LR",$J,"VTO",I,"P")=I_U_$$NLT^LRVER1(I)
"RTN","LRSTUF2",30,0)
 ;
"RTN","LRSTUF2",31,0)
 W ! S DIE="^LR("_LRDFN_",""CH"",",DA=LRIDT D ^DIE
"RTN","LRSTUF2",32,0)
 I LRA'=1,$D(Y) D  Q:LREND
"RTN","LRSTUF2",33,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRSTUF2",34,0)
 . S DIR(0)="Y",DIR("A")="Do you wish to stop",DIR("B")="Y"
"RTN","LRSTUF2",35,0)
 . D ^DIR
"RTN","LRSTUF2",36,0)
 . I Y=0 Q
"RTN","LRSTUF2",37,0)
 . S LREND=1
"RTN","LRSTUF2",38,0)
 . L -^LR(LRDFN,"CH",LRIDT)
"RTN","LRSTUF2",39,0)
 ;
"RTN","LRSTUF2",40,0)
 I $G(LRVX)'="" D
"RTN","LRSTUF2",41,0)
 . S X=LRVX,LRFLG="",LRSPEC=+$P(^LR(LRDFN,LRSS,LRIDT,0),U,5)
"RTN","LRSTUF2",42,0)
 . I $G(M(LRFLD)) S LRTS=M(LRFLD)
"RTN","LRSTUF2",43,0)
 . E  S LRTS=$O(^LAB(60,"C",LRSS_";"_LRFLD_";1",0))
"RTN","LRSTUF2",44,0)
 . K LRSB S LRSB=LRFLD
"RTN","LRSTUF2",45,0)
 . D V25^LRVER5
"RTN","LRSTUF2",46,0)
 ;
"RTN","LRSTUF2",47,0)
STOR ; Store other info with results
"RTN","LRSTUF2",48,0)
 I '$G(LRNOW) S LRNOW=$$NOW^XLFDT
"RTN","LRSTUF2",49,0)
 I $P($G(^LR(LRDFN,LRSS,LRIDT,LRFLD)),U)'="" D
"RTN","LRSTUF2",50,0)
 . N LRX,LRXX,LRP,X
"RTN","LRSTUF2",51,0)
 . S (LRSB(LRFLD),X)=^LR(LRDFN,LRSS,LRIDT,LRFLD),X=$P(LRSB(LRFLD),U)
"RTN","LRSTUF2",52,0)
 . I $G(LRDEL)'="" D DELTA
"RTN","LRSTUF2",53,0)
 . D RANGE^LRVER5
"RTN","LRSTUF2",54,0)
 . S LRXX=LRSB(LRFLD),$P(LRXX,U)=X
"RTN","LRSTUF2",55,0)
 . S $P(LRXX,U,2)=LRFLG,$P(LRXX,U,4)=DUZ,$P(LRXX,U,9)=$G(DUZ(2))
"RTN","LRSTUF2",56,0)
 . S $P(LRXX,U,5)=$TR(LRNG,U,"!")
"RTN","LRSTUF2",57,0)
 . S $P(LRXX,U,6)=LRNOW
"RTN","LRSTUF2",58,0)
 . K ^TMP("LR",$J,"TMP")
"RTN","LRSTUF2",59,0)
 . S LRP=$O(^LAB(60,"C",LRSS_";"_LRFLD_";1",0))
"RTN","LRSTUF2",60,0)
 . S ^TMP("LR",$J,"TMP",LRFLD)=LRP
"RTN","LRSTUF2",61,0)
 . S LRX=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTESTSV,0)),U,9)
"RTN","LRSTUF2",62,0)
 . I LRX,LRP D
"RTN","LRSTUF2",63,0)
 . . S ^TMP("LR",$J,"TMP",LRFLD,"P")=LRX_U_$$NLT^LRVER1(LRX)_"!"_$$RNLT^LRVER1(LRP)
"RTN","LRSTUF2",64,0)
 . . S $P(LRXX,U,3)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U,2)
"RTN","LRSTUF2",65,0)
 . S ^LR(LRDFN,LRSS,LRIDT,LRFLD)=LRXX,LRSB(LRFLD)=LRXX
"RTN","LRSTUF2",66,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT,0)),$P(^(0),U,8)'[LRMETH S $P(^(0),U,8)=LRMETH_";"_$P(^(0),U,8)
"RTN","LRSTUF2",67,0)
 ;
"RTN","LRSTUF2",68,0)
 I '$D(LRSB(LRFLD)) W ?39,"**NOT STUFFED**",$C(7) L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",69,0)
 ;
"RTN","LRSTUF2",70,0)
 ; Set reporting site in file #63.
"RTN","LRSTUF2",71,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRSTUF2",72,0)
 ;
"RTN","LRSTUF2",73,0)
 N LRCORECT S LRCORECT=0
"RTN","LRSTUF2",74,0)
 D VER^LRVER3A,REQ W ?45,"STUFFED"
"RTN","LRSTUF2",75,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D LOOK^LRCAPV1
"RTN","LRSTUF2",76,0)
 S ^LRO(68,"AC",LRDFN,LRIDT,LRFLD)=""
"RTN","LRSTUF2",77,0)
 ;
"RTN","LRSTUF2",78,0)
 L -^LR(LRDFN,"CH",LRIDT)
"RTN","LRSTUF2",79,0)
 ;
"RTN","LRSTUF2",80,0)
 ; Check if LEDI specimen and trigger sending results
"RTN","LRSTUF2",81,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3^LRVER3
"RTN","LRSTUF2",82,0)
 ;
"RTN","LRSTUF2",83,0)
 Q
"RTN","LRSTUF2",84,0)
 ;
"RTN","LRSTUF2",85,0)
 ;
"RTN","LRSTUF2",86,0)
RANGE ; Called from LRSTUF1
"RTN","LRSTUF2",87,0)
 F R=$P(LRAC,"-",1):1:$P(LRAC,"-",2) S LRAC(R)=""
"RTN","LRSTUF2",88,0)
 Q
"RTN","LRSTUF2",89,0)
 ;
"RTN","LRSTUF2",90,0)
 ;
"RTN","LRSTUF2",91,0)
REQ ; Called from above - handle pending required tests.
"RTN","LRSTUF2",92,0)
 N LRX,X
"RTN","LRSTUF2",93,0)
 S X=0
"RTN","LRSTUF2",94,0)
 F  S X=$O(M(X)) Q:X<1  S I=M(X) I $P($G(^LR(LRDFN,"CH",LRIDT,X)),U)="" D
"RTN","LRSTUF2",95,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0)=I_U_LROUTINE,$P(^(0),U,9)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U)
"RTN","LRSTUF2",96,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",I,I)=""
"RTN","LRSTUF2",97,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=""
"RTN","LRSTUF2",98,0)
 . S LRX=$G(^LR(LRDFN,"CH",LRIDT,X))
"RTN","LRSTUF2",99,0)
 . S $P(LRX,"^")="pending"
"RTN","LRSTUF2",100,0)
 . I $P(LRX,"^",3)="" S $P(LRX,U,3)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U,2)
"RTN","LRSTUF2",101,0)
 . S $P(LRX,"^",4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRSTUF2",102,0)
 . S $P(LRX,"^",9)=$S($G(DUZ(2)):DUZ(2),1:"")
"RTN","LRSTUF2",103,0)
 . S ^LR(LRDFN,"CH",LRIDT,X)=LRX
"RTN","LRSTUF2",104,0)
 Q
"RTN","LRSTUF2",105,0)
 ;
"RTN","LRSTUF2",106,0)
 ;
"RTN","LRSTUF2",107,0)
DELTA ; Execute delta check
"RTN","LRSTUF2",108,0)
 ; Setup expected variables for delta check - LRLDT, X, X1
"RTN","LRSTUF2",109,0)
 ; X2 (delta value) set in V25^LRVER5 call above
"RTN","LRSTUF2",110,0)
 ;
"RTN","LRSTUF2",111,0)
 N LRLDT,LROK,LRTM60,LRQ,LRX,X1
"RTN","LRSTUF2",112,0)
 ;
"RTN","LRSTUF2",113,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRSTUF2",114,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRSTUF2",115,0)
 ;
"RTN","LRSTUF2",116,0)
 S LRLDT=LRIDT,LROK=0,X1=""
"RTN","LRSTUF2",117,0)
 F  S LRLDT=$O(^LR(LRDFN,LRSS,LRLDT)) Q:LRLDT<1  D  Q:LRLDT<1!(LROK)
"RTN","LRSTUF2",118,0)
 . I LRLDT>LRTM60 S LRLDT=-1 Q
"RTN","LRSTUF2",119,0)
 . I $P(^LR(LRDFN,LRSS,LRLDT,0),U,5)'=LRSPEC!'$P(^(0),U,3) Q
"RTN","LRSTUF2",120,0)
 . I $D(^LR(LRDFN,LRSS,LRLDT,LRFLD)) S X1=$P(^LR(LRDFN,LRSS,LRLDT,LRFLD),U),LROK=1
"RTN","LRSTUF2",121,0)
 S X=$P(^LR(LRDFN,LRSS,LRIDT,LRFLD),U)
"RTN","LRSTUF2",122,0)
 S LRQ=1 D XDELTACK^LRVERA
"RTN","LRSTUF2",123,0)
 ;
"RTN","LRSTUF2",124,0)
 Q
"RTN","LRTSTJAM")
0^154^B30520985
"RTN","LRTSTJAM",1,0)
LRTSTJAM ;DALOI/STAFF - JAM TESTS ONTO (OR OFF) ACCESSIONS ;10/25/11  12:29
"RTN","LRTSTJAM",2,0)
 ;;5.2;LAB SERVICE;**121,153,291,350**;Sep 27, 1994;Build 230
"RTN","LRTSTJAM",3,0)
 ;
"RTN","LRTSTJAM",4,0)
EN ;
"RTN","LRTSTJAM",5,0)
ADD ; I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTJAM",6,0)
 N LRACC,LRADL,LRADD1,LRADDTST,LREXTFLG,LRTSAD,LRNATURE,LRORDTYP
"RTN","LRTSTJAM",7,0)
 K LRPARAM D EN^LRPARAM
"RTN","LRTSTJAM",8,0)
 I '$D(LRPARAM) D END Q
"RTN","LRTSTJAM",9,0)
 ; Initialize flag for test added for auto download
"RTN","LRTSTJAM",10,0)
 S LRADL=0
"RTN","LRTSTJAM",11,0)
 ;
"RTN","LRTSTJAM",12,0)
 ;    LRADD1: Set flag to loop back to ADD1 tag
"RTN","LRTSTJAM",13,0)
 ;  LRADDTST: Set flag to loop back to ADDTST tag
"RTN","LRTSTJAM",14,0)
 ;  LREXTFLG: Set flag to exit
"RTN","LRTSTJAM",15,0)
 ;
"RTN","LRTSTJAM",16,0)
 D ADD1
"RTN","LRTSTJAM",17,0)
 ;
"RTN","LRTSTJAM",18,0)
 F  Q:$D(LREXTFLG)!(('$D(LRADD1))&('$D(LRADDTST)))  D
"RTN","LRTSTJAM",19,0)
 . I $D(LRADD1) K LRADD1,LRADDTST D UNLOCK,ADD1 Q
"RTN","LRTSTJAM",20,0)
 . I $D(LRADDTST) K LRADD1,LRADDTST D ADDTST Q
"RTN","LRTSTJAM",21,0)
 ;
"RTN","LRTSTJAM",22,0)
 D END
"RTN","LRTSTJAM",23,0)
 ;
"RTN","LRTSTJAM",24,0)
 Q
"RTN","LRTSTJAM",25,0)
 ;
"RTN","LRTSTJAM",26,0)
 ;
"RTN","LRTSTJAM",27,0)
ADD1 ;
"RTN","LRTSTJAM",28,0)
 ; If test added then check for automatic downloading
"RTN","LRTSTJAM",29,0)
 I LRADL D EN^LA7ADL($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),0),"^")) S LRADL=0
"RTN","LRTSTJAM",30,0)
 ;
"RTN","LRTSTJAM",31,0)
 S LRACC=1 D LRACC^LRTSTOUT
"RTN","LRTSTJAM",32,0)
 K LRACC,LRTSAD,LRNATURE
"RTN","LRTSTJAM",33,0)
 I LRAN<1 S LREXTFLG=1 Q
"RTN","LRTSTJAM",34,0)
 ;
"RTN","LRTSTJAM",35,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),U,2) W !?5,"This is not a valid Accession number ",!,$C(7) S LRADD1=1 Q
"RTN","LRTSTJAM",36,0)
 ;
"RTN","LRTSTJAM",37,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):DILOCKTM
"RTN","LRTSTJAM",38,0)
 I '$T W !?5,"Someone else is editing this entry ",!,$C(7) S LRADD1=1 Q
"RTN","LRTSTJAM",39,0)
 ;
"RTN","LRTSTJAM",40,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRDFN=$P(X,U),LRAODT=$P(X,U,3),LRODT=$P(X,U,4),LRSN=$P(X,U,5),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,?30,SSN
"RTN","LRTSTJAM",41,0)
 ;
"RTN","LRTSTJAM",42,0)
 ; Only ask nature of order on file #2 patients.
"RTN","LRTSTJAM",43,0)
 I LRDPF=2,'$D(LRNATURE) D NEW^LROR6() I $G(LRNATURE)=-1 W !!,"...process aborted",$C(7) K LRNATURE S LRADD1=1 Q
"RTN","LRTSTJAM",44,0)
 ;
"RTN","LRTSTJAM",45,0)
 W !,"TESTS ALREADY ON THE ACCESSION: "
"RTN","LRTSTJAM",46,0)
 S I=0
"RTN","LRTSTJAM",47,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<1  W !,?5,$P(^LAB(60,I,0),U,1) S LRTSAD(1,I)=""
"RTN","LRTSTJAM",48,0)
 ;
"RTN","LRTSTJAM",49,0)
LRTSP ;
"RTN","LRTSTJAM",50,0)
 W ! K DIC,DA S DIC("A")="Select Original Ordered Test: ",DA=LRSN,DA(1)=LRODT
"RTN","LRTSTJAM",51,0)
 I $P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),U,2) S DIC("S")="I $L($P($G(^(.3)),U))"
"RTN","LRTSTJAM",52,0)
 S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,",DIC(0)="AQEZNM"
"RTN","LRTSTJAM",53,0)
 W ! D ^DIC K DIC,DA
"RTN","LRTSTJAM",54,0)
 I Y<1 S LRADD1=1 Q
"RTN","LRTSTJAM",55,0)
 S LRTSP=$P(Y,U,2) W !
"RTN","LRTSTJAM",56,0)
 ;
"RTN","LRTSTJAM",57,0)
ADDTST ;
"RTN","LRTSTJAM",58,0)
 S DIC("A")="Add LABORATORY TEST: ",DIC=60,DIC(0)="AEMOQ"
"RTN","LRTSTJAM",59,0)
 S DIC("S")="I $P(^(0),U,4)'="""""_$S('$D(^XUSEC("LRSUPER",DUZ)):",""N""'[$P(^(0),U,3)",1:"")
"RTN","LRTSTJAM",60,0)
 D ^DIC
"RTN","LRTSTJAM",61,0)
 K DIC("A"),DIC("S")
"RTN","LRTSTJAM",62,0)
 I Y<1 S LRADD1=1 Q
"RTN","LRTSTJAM",63,0)
 W !,"  ...OK" S %=1 D YN^DICN
"RTN","LRTSTJAM",64,0)
 ;
"RTN","LRTSTJAM",65,0)
 I %=2 S LRADDTST=1 Q
"RTN","LRTSTJAM",66,0)
 I %'=1 S LRADD1=1 Q
"RTN","LRTSTJAM",67,0)
 ;
"RTN","LRTSTJAM",68,0)
 S (LRTS,I)=+Y I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0)) W !,"The accession already has this test." S LRADDTST=1 Q
"RTN","LRTSTJAM",69,0)
 S LRTSUB=1 D EXPLD^LRTSTJM1 I $D(LRTSAD(1,LRTS)) W !,"The accession already has this test." S LRADDTST=1 Q
"RTN","LRTSTJAM",70,0)
 I $D(^LAB(60,I,8,+DUZ(2),0)) D  Q:$D(LRADD1)
"RTN","LRTSTJAM",71,0)
 . S J=$P(^LAB(60,I,8,+DUZ(2),0),U,2)
"RTN","LRTSTJAM",72,0)
 . I J,J'=LRAA D
"RTN","LRTSTJAM",73,0)
 . . W !,"That test normally belongs to accession area ",$P(^LRO(68,J,0),U),",",!,"are you sure"
"RTN","LRTSTJAM",74,0)
 . . S %=2 D YN^DICN
"RTN","LRTSTJAM",75,0)
 . . I %'=1 S LRADD1=1 Q
"RTN","LRTSTJAM",76,0)
 I $O(^LAB(60,LRTS,2,0)) D  Q:$D(LRADDTST)
"RTN","LRTSTJAM",77,0)
 . S LRTSURG=$P(^LAB(60,LRTS,0),U,18)
"RTN","LRTSTJAM",78,0)
 . K LRTSAD(2)
"RTN","LRTSTJAM",79,0)
 . S LRTSAD(2,LRTS)=""
"RTN","LRTSTJAM",80,0)
 . S LRTSUB=2
"RTN","LRTSTJAM",81,0)
 . D EXPLD^LRTSTJM1
"RTN","LRTSTJAM",82,0)
 . D COMPTST^LRTSTJM1
"RTN","LRTSTJAM",83,0)
 . I 'LRTSUB S LRADDTST=1 Q
"RTN","LRTSTJAM",84,0)
 S LRFLG=1 S (LRURG,Y)=$P(^LAB(60,I,0),U,18)
"RTN","LRTSTJAM",85,0)
 I LRURG'="" D SETTST Q
"RTN","LRTSTJAM",86,0)
 ;
"RTN","LRTSTJAM",87,0)
ADDURG ;
"RTN","LRTSTJAM",88,0)
 S DIC=62.05,DIC("B")="ROUTINE"
"RTN","LRTSTJAM",89,0)
 D ^DIC K DIC("B")
"RTN","LRTSTJAM",90,0)
 I Y<1 W !,"URGENCY must be defined.  Test not added." S LRADDTST=1 Q
"RTN","LRTSTJAM",91,0)
 W !,"  ...OK" S %=1 D YN^DICN
"RTN","LRTSTJAM",92,0)
 G ADDURG:%=2
"RTN","LRTSTJAM",93,0)
 I %<1 S LRADD1=1 Q
"RTN","LRTSTJAM",94,0)
 S LRURG=+Y,LRFLG=""
"RTN","LRTSTJAM",95,0)
 ;
"RTN","LRTSTJAM",96,0)
SETTST ;
"RTN","LRTSTJAM",97,0)
 ; LRORDTYP=1(add)/2(reflex)^file #64.061 ien for code^if reflex parent test^if reflex parent NLT^
"RTN","LRTSTJAM",98,0)
 S LRORDTYP=$$ORDTYP^LRTSTJM1()
"RTN","LRTSTJAM",99,0)
 I LRORDTYP<1 S LRADD1=1 Q
"RTN","LRTSTJAM",100,0)
 I $P(LRORDTYP,"^")=2 D
"RTN","LRTSTJAM",101,0)
 . N LRORDTST
"RTN","LRTSTJAM",102,0)
 . S LRORDTST=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSP,0)),U,9)
"RTN","LRTSTJAM",103,0)
 . I LRORDTST="" S LRORDTST=LRTSP
"RTN","LRTSTJAM",104,0)
 . S $P(LRORDTYP,"^",3)=LRORDTST,$P(LRORDTYP,"^",4)=$$NLT^LRVER1(LRORDTST)
"RTN","LRTSTJAM",105,0)
 I +LRDPF=2,$G(LRSS)'="BB",'$$CHKINP^LRBEBA4(LRDFN,LRODT) S LRBERF=$S(LRORDTYP>0:LRORDTYP-1,1:-1) ;CIDC
"RTN","LRTSTJAM",106,0)
 D EN^LRTSTSET
"RTN","LRTSTJAM",107,0)
 K DIC("B")
"RTN","LRTSTJAM",108,0)
 Q:$D(LRTSAD(2))
"RTN","LRTSTJAM",109,0)
 S LRADDTST=1
"RTN","LRTSTJAM",110,0)
 Q
"RTN","LRTSTJAM",111,0)
 ;
"RTN","LRTSTJAM",112,0)
 ;
"RTN","LRTSTJAM",113,0)
IDENT ;D LRACC^LRTSTOUT Q:LREND
"RTN","LRTSTJAM",114,0)
FXID ;
"RTN","LRTSTJAM",115,0)
 S LRACC=1 D LRACC^LRTSTOUT K LRACC Q:LRAN<1
"RTN","LRTSTJAM",116,0)
 S LRWDT1=DA(1) D:$D(^LRO(68,LRAA,.3))#2 ^LRWLST2 G FXID
"RTN","LRTSTJAM",117,0)
 ;
"RTN","LRTSTJAM",118,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRTSTJAM",119,0)
 Q
"RTN","LRTSTJAM",120,0)
 ;
"RTN","LRTSTJAM",121,0)
 ;
"RTN","LRTSTJAM",122,0)
END ;
"RTN","LRTSTJAM",123,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTJAM",124,0)
 K %,A,AGE,DD,DFN,DIC,DIE,DO,DOB,DR,I,K,LRAA,LRAD,LRACD,LRAN,LRCCOM,LRDFN,LRDPF,LREND,LRIDT,LRODT,LRSN,LRSS,LRTNM,LRTS,LRWRD,PNM,SEX,SSN,X,Y,Z,LRUSNM
"RTN","LRTSTJAM",125,0)
 K %DT,%H,%X,%Y,DA,J,LRBED,LRCS,LRCSS,LRDTM,LRDTO,LRGVP,LRIDENT,LRIOZERO,LRLLOC,LRLWC,LRNOP,LRONE,LRORD,LRORDTIM,LROWLE,LRPR,LRTP,LRTSN,LRUR,LRUSNM,LRWDT1,LRXD,POP,T
"RTN","LRTSTJAM",126,0)
 K LRTSAD,LRTSUB,LRDATE,D,D0,D1,DN,LRAODT,LRFLG,LRRB,LRSAMP,LRTREA,LRTSP
"RTN","LRTSTJAM",127,0)
 K LRURG,VA,LRX,LRBERF,LRBETN
"RTN","LRTSTJAM",128,0)
 Q
"RTN","LRTSTJAM",129,0)
 ;
"RTN","LRTSTJAM",130,0)
 ;
"RTN","LRTSTJAM",131,0)
CHK ; from LRTSTJAN
"RTN","LRTSTJAM",132,0)
 D CHK1 I LREND W !,$C(7),"CAN'T DO IT.  The data has been approved for that log number."
"RTN","LRTSTJAM",133,0)
 Q
"RTN","LRTSTJAM",134,0)
 ;
"RTN","LRTSTJAM",135,0)
 ;
"RTN","LRTSTJAM",136,0)
CHK1 ;
"RTN","LRTSTJAM",137,0)
 I $D(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,3)),$P(^(3),U,4) S LREND=1 Q
"RTN","LRTSTJAM",138,0)
 I $D(^LRO(69,LRODT,1,LRSN,3)),$P(^(3),U,2) S LREND=1 Q
"RTN","LRTSTJAM",139,0)
 S LRTST=0 F  S LRTST=$O(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,4,LRTST)) Q:LRTST<1  I $D(^(LRTST,0)),$P(^(0),U,5) S LREND=1 Q
"RTN","LRTSTJAM",140,0)
 Q
"RTN","LRTSTJAM",141,0)
UNLOCK ;
"RTN","LRTSTJAM",142,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTJAM",143,0)
 Q
"RTN","LRTSTJAN")
0^157^B15648125
"RTN","LRTSTJAN",1,0)
LRTSTJAN ;SLC/RWF/DCN - JAM TESTS ONTO (OR OFF) ACCESSIONS PART2 ;02/28/12  19:53
"RTN","LRTSTJAN",2,0)
 ;;5.2;LAB SERVICE;**67,100,121,128,202,221,337,350**;Sep 27, 1994;Build 230
"RTN","LRTSTJAN",3,0)
 ;
"RTN","LRTSTJAN",4,0)
DELOG ;This tag is no longer available - Routine LRTSTOUT replaces this call.
"RTN","LRTSTJAN",5,0)
 W @IOF,!,$$CJ^XLFSTR(" The ability to DELETE an entire ORDER/ACCESSION ",IOM)
"RTN","LRTSTJAN",6,0)
 W !,$$CJ^XLFSTR("has been REPLACED. The test(s) will now be marked",IOM)
"RTN","LRTSTJAN",7,0)
 W !,$$CJ^XLFSTR("as Not Performed and a reason for 'NP' will be stored",IOM)
"RTN","LRTSTJAN",8,0)
 W !,$$CJ^XLFSTR("with each test. Accession numbers can't be reused",IOM)
"RTN","LRTSTJAN",9,0)
 W !,$$CJ^XLFSTR("after it has been assigned to a specimen.",IOM)
"RTN","LRTSTJAN",10,0)
 ;
"RTN","LRTSTJAN",11,0)
EN ;
"RTN","LRTSTJAN",12,0)
 D ^LRPARAM G:$G(LREND) END
"RTN","LRTSTJAN",13,0)
 I '$D(LRLABKY) W !?5,"You are not authorized to change test status.",! G END
"RTN","LRTSTJAN",14,0)
 K LRSCNXB
"RTN","LRTSTJAN",15,0)
 ;
"RTN","LRTSTJAN",16,0)
EN1 ;
"RTN","LRTSTJAN",17,0)
 N LRTOTL,LRIFN
"RTN","LRTSTJAN",18,0)
 S (LREND,LRNOP)=0 K LRNATURE
"RTN","LRTSTJAN",19,0)
 D FIX^LRTSTOUT G END:$G(LREND) I $G(LRNOP) D END G EN1
"RTN","LRTSTJAN",20,0)
 W ! K DIR S DIR(0)="Y",DIR("A")="  Change Entire accession to Not Performed",DIR("B")="NO" D ^DIR K DIR
"RTN","LRTSTJAN",21,0)
 I $D(DIRUT) G EN1
"RTN","LRTSTJAN",22,0)
 S LRTOTL=Y,LRIFN=0
"RTN","LRTSTJAN",23,0)
 I LRTOTL>0 D
"RTN","LRTSTJAN",24,0)
 .F  S LRIFN=$O(^LR(LRDFN,LRSS,LRIDT,LRIFN)) Q:LRIFN=""  S:$P($G(^LR(LRDFN,LRSS,LRIDT,LRIFN)),U)="pending" $P(^LR(LRDFN,LRSS,LRIDT,LRIFN),U)=""
"RTN","LRTSTJAN",25,0)
 ;I Y=0 D CHG^LRTSTOUT W !!! G EN1
"RTN","LRTSTJAN",26,0)
 I LRTOTL=0 D CHG^LRTSTOUT W !!! G EN1
"RTN","LRTSTJAN",27,0)
 D FX2^LRTSTOUT I $G(LREND) D END W @IOF G EN1
"RTN","LRTSTJAN",28,0)
 D
"RTN","LRTSTJAN",29,0)
 . N LROTA,LRTSTS
"RTN","LRTSTJAN",30,0)
 . S LRTSTS=0,LRNOW=$$NOW^XLFDT F  S LRTSTS=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS)) Q:LRTSTS<1  I $D(^(LRTSTS,0))#2,'$P(^(0),U,5) D
"RTN","LRTSTJAN",31,0)
 . . I $D(^LAB(60,LRTSTS,0)) S LRTNM=$P(^(0),U) D
"RTN","LRTSTJAN",32,0)
 . . . D SET^LRTSTOUT
"RTN","LRTSTJAN",33,0)
 . . . D LEDICHK^LRTSTOUT ; If LEDI test, add test to LROTA array - ccr_6164n
"RTN","LRTSTJAN",34,0)
 . I $D(LROTA) D LEDISET^LRTSTOUT(.LROTA) ; ccr_6164n
"RTN","LRTSTJAN",35,0)
 L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTJAN",36,0)
 I $G(LRSS)'="" L -^LR(+$G(LRDFN),LRSS,+$G(LRIDT))
"RTN","LRTSTJAN",37,0)
 W @IOF,!!,"All accessioned test(s) changed",!!
"RTN","LRTSTJAN",38,0)
 D END G EN1
"RTN","LRTSTJAN",39,0)
 Q
"RTN","LRTSTJAN",40,0)
 ;
"RTN","LRTSTJAN",41,0)
 ;
"RTN","LRTSTJAN",42,0)
END K LRWRD,LRWDT1,LRTREA,LRRB,LRPRAC,LREND,LRAA,LRAD,LRAN,LRACC,LRTEST,LRTSTN,LRNATURE,LRX,LRIDIV,LRSAMP,LRGCOM,LRCOM,LRTCOM,LRDFN,LRDPF,LRACD,LRACN,LRACN0,LRDOC,LRLL,LROD0,LROD1,LROD3,LRODT,LROOS,LROS,LROSD,LROT,LRROD,LRSN,LRTSTS,LRTT,LRWL1
"RTN","LRTSTJAN",43,0)
 K LRF,LRI,LRJ,LRMSTATI
"RTN","LRTSTJAN",44,0)
 K I,X,X1,X2,X3,X4,DA,DR,DIC,DFN,AGE,DOB,PNM,SSN,VAIN,VADM,VAERR,VA,VA200,SSN,SEX
"RTN","LRTSTJAN",45,0)
 D END^LRTSTOUT
"RTN","LRTSTJAN",46,0)
 Q
"RTN","LRTSTJAN",47,0)
 ;
"RTN","LRTSTJAN",48,0)
 ;
"RTN","LRTSTJAN",49,0)
ULK ;Unlock ^LRO(68,
"RTN","LRTSTJAN",50,0)
 I ($G(LRAA)&($G(LRAD))&($G(LRAN))) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTJAN",51,0)
 Q
"RTN","LRTSTJAN",52,0)
 ;
"RTN","LRTSTJAN",53,0)
 ;
"RTN","LRTSTJAN",54,0)
NEWSTART ;Set new starting accession #
"RTN","LRTSTJAN",55,0)
 N LRAA,LRAD,LRAN,LRIDIV,LRX,LRACC,LREND,LRNEW
"RTN","LRTSTJAN",56,0)
 S LREND=0
"RTN","LRTSTJAN",57,0)
 D ^LRWU4 Q:LRAD<1
"RTN","LRTSTJAN",58,0)
 ;
"RTN","LRTSTJAN",59,0)
N1 G NEWSTART:'$D(^LRO(68,LRAA,1,LRAD,1,0))
"RTN","LRTSTJAN",60,0)
 R !,"""Next"" accession number: ",LRNEW:DTIME
"RTN","LRTSTJAN",61,0)
 G NEWSTART:LRNEW="^"!(LRNEW="")
"RTN","LRTSTJAN",62,0)
 K:(LRNEW<1)!(LRNEW>999999)!(LRNEW'=+LRNEW) LRNEW S:$D(LRNEW) LRNEW=LRNEW-1
"RTN","LRTSTJAN",63,0)
 I '$D(LRNEW) W !,"Must be whole number between 1 and 999999, accession remains unchanged." G N1
"RTN","LRTSTJAN",64,0)
 S $P(^LRO(68,LRAA,1,LRAD,1,0),U,3)=LRNEW
"RTN","LRTSTJAN",65,0)
 G NEWSTART
"RTN","LRTSTJAN",66,0)
 ;
"RTN","LRTSTJAN",67,0)
 ;;
"RTN","LRTSTJAN",68,0)
US ;ck if units selected
"RTN","LRTSTJAN",69,0)
 S A=0 F  S A=$O(^LR(LRDFN,1.8,A)) Q:A<1!($D(C))  S B=0 F  S B=$O(^LR(LRDFN,1.8,A,1,B)) Q:B<1!($D(C))  I $P(^(B,0),"^",2)=LRIDT S C=1 Q
"RTN","LRTSTJAN",70,0)
 Q
"RTN","LRTSTJAN",71,0)
 ;
"RTN","LRTSTJAN",72,0)
 ;
"RTN","LRTSTJAN",73,0)
OE ;
"RTN","LRTSTJAN",74,0)
 I $G(LRGCOM)'="",$P($G(LRNATURE),"^",5)'="",$P(LRNATURE,"^",5)'["=>" S $P(LRNATURE,"^",5)=LRCM
"RTN","LRTSTJAN",75,0)
 N I S:$G(LRTS) I(+LRTS)="" D NEW^LR7OB1(LRODT,LRSN,$S($G(LRMSTATI)=""!($G(LRMSTATI)=1):"OC",1:"SC"),$G(LRNATURE),.I,$G(LRMSTATI))
"RTN","LRTSTJAN",76,0)
 Q
"RTN","LRTSTJAN",77,0)
 ;
"RTN","LRTSTJAN",78,0)
 ;
"RTN","LRTSTJAN",79,0)
LRACC S LREND=0 D ^LRWU4 S DA(2)=LRAA,DA(1)=LRAD
"RTN","LRTSTJAN",80,0)
 Q
"RTN","LRTSTJM1")
0^155^B28238574
"RTN","LRTSTJM1",1,0)
LRTSTJM1 ;DALOI/STAFF- JAM TESTS ONTO (OR OFF) ACCESSIONS (cont.) ;10/25/11  12:14
"RTN","LRTSTJM1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRTSTJM1",3,0)
 ;
"RTN","LRTSTJM1",4,0)
EXPLD ;
"RTN","LRTSTJM1",5,0)
 S LRTSAD1=0
"RTN","LRTSTJM1",6,0)
 F  S LRTSAD1=$O(LRTSAD(LRTSUB,LRTSAD1)) Q:'LRTSAD1  D EXPLD1
"RTN","LRTSTJM1",7,0)
 K LRTSAD1,LRTSAD2,LRTSAD3,LRTSAD4
"RTN","LRTSTJM1",8,0)
 Q
"RTN","LRTSTJM1",9,0)
 ;
"RTN","LRTSTJM1",10,0)
 ;
"RTN","LRTSTJM1",11,0)
EXPLD1 ;
"RTN","LRTSTJM1",12,0)
 Q:'$O(^LAB(60,LRTSAD1,2,0))  S LRTSAD4=LRTSAD1 N LRTSAD1,LRTSAD2,LRTSAD3 S LRTSAD2=LRTSAD4,LRTSAD3=0 K LRTSAD4
"RTN","LRTSTJM1",13,0)
 F  S LRTSAD3=$O(^LAB(60,LRTSAD2,2,LRTSAD3)) Q:'LRTSAD3  I $D(^(LRTSAD3,0)),'$D(LRTSAD(LRTSUB,+^(0))) S LRTSAD1=+^(0),LRTSAD(LRTSUB,LRTSAD1)="" D EXPLD1
"RTN","LRTSTJM1",14,0)
 Q
"RTN","LRTSTJM1",15,0)
 ;
"RTN","LRTSTJM1",16,0)
 ;
"RTN","LRTSTJM1",17,0)
COMPTST ;
"RTN","LRTSTJM1",18,0)
 ;
"RTN","LRTSTJM1",19,0)
 D SCAN
"RTN","LRTSTJM1",20,0)
 ;
"RTN","LRTSTJM1",21,0)
 ; After call to SCAN:
"RTN","LRTSTJM1",22,0)
 ;  I LRTSUB=0, then some overlap was found between test being added and the tests already on this accession.
"RTN","LRTSTJM1",23,0)
 ;  I LRTSUB=2, then no overlap was found
"RTN","LRTSTJM1",24,0)
 ;
"RTN","LRTSTJM1",25,0)
 I LRTSUB K LRTSAD(2) Q  ;no overlap found
"RTN","LRTSTJM1",26,0)
 ;
"RTN","LRTSTJM1",27,0)
 ; If LRTSUB=0, then only add those atomic tests that are not already on this accession.
"RTN","LRTSTJM1",28,0)
 ;
"RTN","LRTSTJM1",29,0)
 I '$L(LRTSURG) D COMTST2 S LRTSURG=LRURG I 'LRURG S LRTSUB=0 Q
"RTN","LRTSTJM1",30,0)
 ;
"RTN","LRTSTJM1",31,0)
 N LRBORTYP,LRBBERF
"RTN","LRTSTJM1",32,0)
 ; LRBORTYP and LRBBERF are used to backup and restore LRORTYP and LRBERF (respectively)
"RTN","LRTSTJM1",33,0)
 ; so that user is only prompted for first atomic test in the panel if it's add-on/reflex,
"RTN","LRTSTJM1",34,0)
 ; and isn't prompted for every subsequent atomic test in the panel.
"RTN","LRTSTJM1",35,0)
 ;
"RTN","LRTSTJM1",36,0)
 S (LRTSAD,LRTS)=0 F  S LRTS=$O(LRTSAD(2,LRTS)) Q:'LRTS!($D(LRADDTST))  I '$D(LRTSAD(1,LRTS)) D COMTST1
"RTN","LRTSTJM1",37,0)
 W:'LRTSAD !,"All the individual tests for this panel",!,"are already included on this accession."
"RTN","LRTSTJM1",38,0)
 K LRTSAD(2),LRTSURG
"RTN","LRTSTJM1",39,0)
 Q
"RTN","LRTSTJM1",40,0)
 ;
"RTN","LRTSTJM1",41,0)
 ;
"RTN","LRTSTJM1",42,0)
COMTST1 ;
"RTN","LRTSTJM1",43,0)
 Q:$O(^LAB(60,LRTS,2,0))
"RTN","LRTSTJM1",44,0)
 S LRTSAD=1,(Y,LRURG)=$S($L(LRTSURG):LRTSURG,1:$P(^LAB(60,LRTS,0),U,18)) W:'$L(Y) !,$P(^LAB(60,LRTS,0),U,1)
"RTN","LRTSTJM1",45,0)
 D COMTST2:'$L(Y) S LRFLG=1
"RTN","LRTSTJM1",46,0)
 I LRURG D
"RTN","LRTSTJM1",47,0)
 . I $D(LRBORTYP) S LRORDTYP=LRBORTYP I $D(LRBBERF) S LRBERF=LRBBERF
"RTN","LRTSTJM1",48,0)
 . I '$D(LRBORTYP) D  Q:$D(LRADDTST)
"RTN","LRTSTJM1",49,0)
 . . S LRORDTYP=$$ORDTYP()
"RTN","LRTSTJM1",50,0)
 . . I LRORDTYP<1 S LRADDTST=1 Q
"RTN","LRTSTJM1",51,0)
 . . I $P(LRORDTYP,"^")=2 D
"RTN","LRTSTJM1",52,0)
 . . . N LRORDTST
"RTN","LRTSTJM1",53,0)
 . . . S LRORDTST=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSP,0)),U,9)
"RTN","LRTSTJM1",54,0)
 . . . I LRORDTST="" S LRORDTST=LRTSP
"RTN","LRTSTJM1",55,0)
 . . . S $P(LRORDTYP,"^",3)=LRORDTST,$P(LRORDTYP,"^",4)=$$NLT^LRVER1(LRORDTST)
"RTN","LRTSTJM1",56,0)
 . . I +LRDPF=2,$G(LRSS)'="BB",'$$CHKINP^LRBEBA4(LRDFN,LRODT) S LRBERF=$S(LRORDTYP>0:LRORDTYP-1,1:-1) ;CIDC
"RTN","LRTSTJM1",57,0)
 . . S LRBORTYP=LRORDTYP
"RTN","LRTSTJM1",58,0)
 . . I $D(LRBERF) S LRBBERF=LRBERF
"RTN","LRTSTJM1",59,0)
 . D EN^LRTSTSET
"RTN","LRTSTJM1",60,0)
 Q
"RTN","LRTSTJM1",61,0)
 ;
"RTN","LRTSTJM1",62,0)
 ;
"RTN","LRTSTJM1",63,0)
COMTST2 ;
"RTN","LRTSTJM1",64,0)
 S DIC=62.05,DIC("B")="ROUTINE",DIC(0)="AEMOQ" D ^DIC K DIC("B") I Y<1 W !,"URGENCY must be defined.  Test not added." S LRURG=0 Q
"RTN","LRTSTJM1",65,0)
 W !,"  ...OK" S %=1 D YN^DICN G COMTST2:%=2 S LRURG=$S((%<1):0,1:+Y)
"RTN","LRTSTJM1",66,0)
 Q
"RTN","LRTSTJM1",67,0)
 ;
"RTN","LRTSTJM1",68,0)
 ;
"RTN","LRTSTJM1",69,0)
SCAN ;
"RTN","LRTSTJM1",70,0)
 N LRTS S LRTS=0 F  S LRTS=$O(LRTSAD(2,LRTS)) Q:'LRTS  I $D(LRTSAD(1,LRTS)) S LRTSUB=0
"RTN","LRTSTJM1",71,0)
 Q
"RTN","LRTSTJM1",72,0)
 ;
"RTN","LRTSTJM1",73,0)
 ;
"RTN","LRTSTJM1",74,0)
ORDTYP() ; Ask if test is "add on" or "reflex"
"RTN","LRTSTJM1",75,0)
 N DIR,DUOUT,DTOUT,DIRUT,LRX,LRY,X,Y
"RTN","LRTSTJM1",76,0)
 S DIR(0)="S^1:Add On;2:Reflex",DIR("A")="Type of test order being added"
"RTN","LRTSTJM1",77,0)
 D ^DIR
"RTN","LRTSTJM1",78,0)
 I $D(DIRUT) S LRY=-1
"RTN","LRTSTJM1",79,0)
 E  S LRY=+Y
"RTN","LRTSTJM1",80,0)
 I LRY>0 D
"RTN","LRTSTJM1",81,0)
 . S LRX=$S(LRY=1:"A",LRY=2:"G",1:"A")
"RTN","LRTSTJM1",82,0)
 . S $P(LRY,"^",2)=$$FIND1^DIC(64.061,"","OX",LRX,"D","I $P(^(0),U,5)=""0065""")
"RTN","LRTSTJM1",83,0)
 Q LRY
"RTN","LRTSTJM1",84,0)
 ;
"RTN","LRTSTJM1",85,0)
 ;
"RTN","LRTSTJM1",86,0)
ORUT(LRDFN,LRAA,LRAD,LRAN,LR60,LRORDTYP,LRURG,LRODT,LRSN) ; Setup ORUT node in file #63 for test just added.
"RTN","LRTSTJM1",87,0)
 ; Call with LRDFN = file #63 IEN
"RTN","LRTSTJM1",88,0)
 ;            LRAA = file #68 IEN
"RTN","LRTSTJM1",89,0)
 ;            LRAD = accession date
"RTN","LRTSTJM1",90,0)
 ;            LRAN = accession number
"RTN","LRTSTJM1",91,0)
 ;            LR60 = file #60 IEN
"RTN","LRTSTJM1",92,0)
 ;        LRORDTYP = 1(add)/2(reflex)^file #64.061 ien for code^if reflex parent test^if reflex parent NLT^
"RTN","LRTSTJM1",93,0)
 ;           LRURG = file #62.05 urgency ien
"RTN","LRTSTJM1",94,0)
 ;          LRORDT = file #69 order date
"RTN","LRTSTJM1",95,0)
 ;            LRSN = file #69 order ien
"RTN","LRTSTJM1",96,0)
 ;
"RTN","LRTSTJM1",97,0)
 ; Called by LRTSTJAM
"RTN","LRTSTJM1",98,0)
 ;
"RTN","LRTSTJM1",99,0)
 N LR68,LRFDA,LRFILE,LRIDT,LRIENS,LRJUL,LRNLT,LRORD,LRORIFN,LRORNUM,LRPROV,LRSAMP,LRSPEC,LRSS,LRX,LRY,X,Y
"RTN","LRTSTJM1",100,0)
 ;
"RTN","LRTSTJM1",101,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LRTSTJM1",102,0)
 S LRFILE=$S(LRSS="CH":63.07,LRSS="MI":63.5,LRSS="SP":63.53,LRSS="CY":63.51,LRSS="EM":63.52,1:"")
"RTN","LRTSTJM1",103,0)
 Q:'LRFILE
"RTN","LRTSTJM1",104,0)
 ;
"RTN","LRTSTJM1",105,0)
 S LR68(0)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))
"RTN","LRTSTJM1",106,0)
 S X=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,0))
"RTN","LRTSTJM1",107,0)
 S LR68(5)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,X,0))
"RTN","LRTSTJM1",108,0)
 S LRORD=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.1)),"^")
"RTN","LRTSTJM1",109,0)
 S LRSPEC=$P(LR68(5),"^"),LRSAMP=$P(LR68(5),"^",2)
"RTN","LRTSTJM1",110,0)
 S LRNLT=$$NLT^LRVER1(LR60) Q:+LRNLT<1
"RTN","LRTSTJM1",111,0)
 S LRPROV=$P(LR68(0),"^",8),LRORNUM=""
"RTN","LRTSTJM1",112,0)
 I LRORD D
"RTN","LRTSTJM1",113,0)
 . S LRX=$$FMDIFF^XLFDT(DT,$E(DT,1,3)_"0101",1)
"RTN","LRTSTJM1",114,0)
 . S LRX=LRX+1,LRJUL=$E("000",1,3-$L(LRX))_LRX
"RTN","LRTSTJM1",115,0)
 . S LRORNUM="LR-"_LRORD_"-"_$E(DT,1,3)_LRJUL
"RTN","LRTSTJM1",116,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRTSTJM1",117,0)
 S LRORIFN=$P($G(^LRO(69,LRODT,1,LRSN,0)),"^",11)
"RTN","LRTSTJM1",118,0)
 ;
"RTN","LRTSTJM1",119,0)
 S LRIENS="?+1"_","_LRIDT_","_LRDFN_","
"RTN","LRTSTJM1",120,0)
 S LRFDA(5,LRFILE,LRIENS,.01)=LRNLT
"RTN","LRTSTJM1",121,0)
 S LRFDA(5,LRFILE,LRIENS,2)=LRURG
"RTN","LRTSTJM1",122,0)
 I LRORIFN S LRFDA(5,LRFILE,LRIENS,3)=LRORIFN
"RTN","LRTSTJM1",123,0)
 I LRORNUM'="" S LRFDA(5,LRFILE,LRIENS,4)=LRORNUM
"RTN","LRTSTJM1",124,0)
 I $P(LRORDTYP,"^",2) S LRFDA(5,LRFILE,LRIENS,5)=$P(LRORDTYP,"^",2)
"RTN","LRTSTJM1",125,0)
 ;
"RTN","LRTSTJM1",126,0)
 ; Check for regular or LEDI provider
"RTN","LRTSTJM1",127,0)
 I LRPROV'="" D
"RTN","LRTSTJM1",128,0)
 . I LRPROV?1.N S LRFDA(5,LRFILE,LRIENS,6)=LRPROV Q
"RTN","LRTSTJM1",129,0)
 . I $E(LRPROV,1,4)="REF:" D  ; If LEDI find LEDI provider info on exisitng test.
"RTN","LRTSTJM1",130,0)
 . . S X=0,LRX=""
"RTN","LRTSTJM1",131,0)
 . . F  S X=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT",X)) Q:X<1  D  Q:LRX'=""
"RTN","LRTSTJM1",132,0)
 . . . S X(0)=$G(^LR(LRDFN,LRSS,LRIDT,X,0))
"RTN","LRTSTJM1",133,0)
 . . . I $P(X(0),"^",7)'="" S LRX=$P(X(0),"^",7)
"RTN","LRTSTJM1",134,0)
 . . I LRX'="" S LRPROV=LRX
"RTN","LRTSTJM1",135,0)
 . S LRFDA(5,LRFILE,LRIENS,7)=LRPROV
"RTN","LRTSTJM1",136,0)
 ;
"RTN","LRTSTJM1",137,0)
 I LRSPEC S LRFDA(5,LRFILE,LRIENS,8)=LRSPEC
"RTN","LRTSTJM1",138,0)
 I LRSAMP S LRFDA(5,LRFILE,LRIENS,9)=LRSAMP
"RTN","LRTSTJM1",139,0)
 I LR60 S LRFDA(5,LRFILE,LRIENS,13)=LR60
"RTN","LRTSTJM1",140,0)
 I $P(LRORDTYP,"^",3) D
"RTN","LRTSTJM1",141,0)
 . S LRFDA(5,LRFILE,LRIENS,14)=$P(LRORDTYP,"^",3)
"RTN","LRTSTJM1",142,0)
 . S LRFDA(5,LRFILE,LRIENS,15)=$P(LRORDTYP,"^",4)
"RTN","LRTSTJM1",143,0)
 D UPDATE^DIE("","LRFDA(5)","LRIENS","")
"RTN","LRTSTJM1",144,0)
 ;
"RTN","LRTSTJM1",145,0)
 Q
"RTN","LRTSTOUT")
0^122^B163383366
"RTN","LRTSTOUT",1,0)
LRTSTOUT ;DALOI/STAFF - JAM TESTS OFF ACCESSIONS ;10/12/11  11:54
"RTN","LRTSTOUT",2,0)
 ;;5.2;LAB SERVICE;**100,121,153,202,221,337,350**;Sep 27, 1994;Build 230
"RTN","LRTSTOUT",3,0)
 ;
"RTN","LRTSTOUT",4,0)
 ; Cancel tests - Test are no longer deleted, instead the status is changed to Not Performed.
"RTN","LRTSTOUT",5,0)
 ;
"RTN","LRTSTOUT",6,0)
EN ;
"RTN","LRTSTOUT",7,0)
 N LREND
"RTN","LRTSTOUT",8,0)
 D EN^LRPARAM Q:$G(LREND)
"RTN","LRTSTOUT",9,0)
 I '$D(LRLABKY) W !?5,"You are not authorized to change test status.",!,$C(7) S LREND=1 Q
"RTN","LRTSTOUT",10,0)
 N LRXX W @IOF
"RTN","LRTSTOUT",11,0)
 F  D  Q:$G(LREND)
"RTN","LRTSTOUT",12,0)
 . D END
"RTN","LRTSTOUT",13,0)
 . S (LREND,LRNOP)=0
"RTN","LRTSTOUT",14,0)
 . D FIX
"RTN","LRTSTOUT",15,0)
 . I $G(LREND) D UNLOCK Q
"RTN","LRTSTOUT",16,0)
 . I '$G(LRNOP) D CHG
"RTN","LRTSTOUT",17,0)
 . D UNLOCK
"RTN","LRTSTOUT",18,0)
 D EXIT
"RTN","LRTSTOUT",19,0)
 Q
"RTN","LRTSTOUT",20,0)
 ;
"RTN","LRTSTOUT",21,0)
 ;
"RTN","LRTSTOUT",22,0)
FIX ;
"RTN","LRTSTOUT",23,0)
 N LRACC,LRNATURE
"RTN","LRTSTOUT",24,0)
 S (LREND,LRNOP)=0,LRNOW=$$NOW^XLFDT
"RTN","LRTSTOUT",25,0)
 W ! S LRACC=1 D LRACC Q:$G(LRNOP)
"RTN","LRTSTOUT",26,0)
 I $G(LRAN)<1 S LREND=1 Q
"RTN","LRTSTOUT",27,0)
 I '$P($G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0)),U,2) W !?5,"Accession has no Test ",! S LRNOP=1 Q
"RTN","LRTSTOUT",28,0)
 D LOCK^DILF("^LRO(68,LRAA,1,LRAD,1,LRAN)")
"RTN","LRTSTOUT",29,0)
 I '$T W !,"Someone else is working on this accession",! S LRNOP=1 Q
"RTN","LRTSTOUT",30,0)
 ;
"RTN","LRTSTOUT",31,0)
 S LRX=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRACN=$P(^(.2),U),LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),U)
"RTN","LRTSTOUT",32,0)
 S LRDFN=+LRX,LRSN=+$P(LRX,U,5),LRODT=+$P(LRX,U,4)
"RTN","LRTSTOUT",33,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRTSTOUT",34,0)
 D PT^LRX
"RTN","LRTSTOUT",35,0)
 W !,PNM,?30,SSN
"RTN","LRTSTOUT",36,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRTSTOUT",37,0)
 D LOCK^DILF("^LR(LRDFN,LRSS,LRIDT)")
"RTN","LRTSTOUT",38,0)
 I '$T W !,"Someone else is working on this data." S LRNOP=1 Q
"RTN","LRTSTOUT",39,0)
 ;
"RTN","LRTSTOUT",40,0)
 I '$G(^LR(LRDFN,LRSS,LRIDT,0)) W !?5," Can't find Lab Data for this accession",! D UNLOCK S LRNOP=1 Q
"RTN","LRTSTOUT",41,0)
 ;
"RTN","LRTSTOUT",42,0)
 I LRODT,LRSN,$D(^LRO(69,LRODT,1,LRSN,0))#2 D
"RTN","LRTSTOUT",43,0)
 . N LRACN,LRAA,LRAD
"RTN","LRTSTOUT",44,0)
 . D SHOW^LROS
"RTN","LRTSTOUT",45,0)
 ;
"RTN","LRTSTOUT",46,0)
 K DIR
"RTN","LRTSTOUT",47,0)
 S DIR(0)="E" D ^DIR
"RTN","LRTSTOUT",48,0)
 I $D(DIRUT) S LRNOP=1 Q
"RTN","LRTSTOUT",49,0)
 ;
"RTN","LRTSTOUT",50,0)
FX1 ;
"RTN","LRTSTOUT",51,0)
 D SHOWTST
"RTN","LRTSTOUT",52,0)
 Q
"RTN","LRTSTOUT",53,0)
 ;
"RTN","LRTSTOUT",54,0)
 ;
"RTN","LRTSTOUT",55,0)
CHG ;
"RTN","LRTSTOUT",56,0)
 N DIC,I,LRCOMM,LRCTST,LROTA,LRXX
"RTN","LRTSTOUT",57,0)
 W !
"RTN","LRTSTOUT",58,0)
 S:'$D(DIC("A")) DIC("A")="Change which LABORATORY TEST: "
"RTN","LRTSTOUT",59,0)
 S DIC="^LRO(68,"_LRAA_",1,"_LRAD_",1,"_LRAN_",4,",DIC("S")="I '$L($P(^(0),U,5))",DIC(0)="AEMOQ"
"RTN","LRTSTOUT",60,0)
 F  D ^DIC Q:Y<1  S LRCTST(+Y)=$P(^LAB(60,+Y,0),U),DIC("A")="Select another test: "
"RTN","LRTSTOUT",61,0)
 I '$O(LRCTST(0)) D  Q
"RTN","LRTSTOUT",62,0)
 . D UNLOCK
"RTN","LRTSTOUT",63,0)
 . W !?5,"No Test Selected",!
"RTN","LRTSTOUT",64,0)
 I LRODT=""!(LRSN="") W !,"NO CHANGE" D UNLOCK,END Q
"RTN","LRTSTOUT",65,0)
 S LRCCOM="",LREND=0
"RTN","LRTSTOUT",66,0)
 I '($D(^LRO(69,LRODT,1,LRSN,0))#2) W !?5,"There is no Order for this Accession",! D UNLOCK,END Q
"RTN","LRTSTOUT",67,0)
 W @IOF,!!?5,"Change Accession : ",LRACN,?40,"UID: ",LRUID
"RTN","LRTSTOUT",68,0)
 ;
"RTN","LRTSTOUT",69,0)
 ; Check if tests selected have results stored in file #63.
"RTN","LRTSTOUT",70,0)
 S I=0
"RTN","LRTSTOUT",71,0)
 F  S I=$O(LRCTST(I)) Q:I<1  D
"RTN","LRTSTOUT",72,0)
 . N LRX
"RTN","LRTSTOUT",73,0)
 . W !?10,LRCTST(I)
"RTN","LRTSTOUT",74,0)
 . S LRX=$$CHK63(I,LRDFN,LRSS,LRIDT)
"RTN","LRTSTOUT",75,0)
 . I LRX>0 S LRNOP=1
"RTN","LRTSTOUT",76,0)
 . I LRX=1 W ?40," Results entered for this test, cannot NP until removed."
"RTN","LRTSTOUT",77,0)
 . I LRX=2 W ?40," Results entered for this test, cannot NP this test."
"RTN","LRTSTOUT",78,0)
 . I LRX=3 W ?40," Results verified for this test, cannot NP this test."
"RTN","LRTSTOUT",79,0)
 I LRNOP Q
"RTN","LRTSTOUT",80,0)
 ;
"RTN","LRTSTOUT",81,0)
 D FX2 Q:$G(LREND)
"RTN","LRTSTOUT",82,0)
 ;
"RTN","LRTSTOUT",83,0)
 S LRTSTS=0
"RTN","LRTSTOUT",84,0)
 F  S LRTSTS=$O(LRCTST(LRTSTS)) Q:LRTSTS<1  D
"RTN","LRTSTOUT",85,0)
 . Q:'($D(^LAB(60,LRTSTS,0))#2)  S LRTNM=$P(^(0),U)
"RTN","LRTSTOUT",86,0)
 . S LRORDTST=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS,0),U,9) D SET,CLNPENDG
"RTN","LRTSTOUT",87,0)
 . D LEDICHK  ; ccr_6164n
"RTN","LRTSTOUT",88,0)
 . W:'$G(LREND) !?5,"[ "_LRTNM_" ] ",$S('$D(LRLABKY):" Marked Canceled by Floor",1:" Marked Not Performed"),!
"RTN","LRTSTOUT",89,0)
 ;
"RTN","LRTSTOUT",90,0)
 I $D(LROTA) D LEDISET(.LROTA) ; ccr_6164n
"RTN","LRTSTOUT",91,0)
 ;
"RTN","LRTSTOUT",92,0)
 S LREND=0
"RTN","LRTSTOUT",93,0)
 ;
"RTN","LRTSTOUT",94,0)
 Q
"RTN","LRTSTOUT",95,0)
 ;
"RTN","LRTSTOUT",96,0)
 ;
"RTN","LRTSTOUT",97,0)
SHOWTST ;
"RTN","LRTSTOUT",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRI,LRN,LRY,LRIC,X
"RTN","LRTSTOUT",99,0)
 S DIR(0)="E"
"RTN","LRTSTOUT",100,0)
 D DEMO
"RTN","LRTSTOUT",101,0)
 S (LRN,LRI)=0
"RTN","LRTSTOUT",102,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:LRI<1!($G(LRY))  D
"RTN","LRTSTOUT",103,0)
 . S LRIC=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI,0)),U,4,6) Q:'($D(^LAB(60,+LRI,0))#2)
"RTN","LRTSTOUT",104,0)
 . W !,?5,$P(^(0),U) S LRN=LRN+1
"RTN","LRTSTOUT",105,0)
 . I LRIC W ?35,"  "_$S($L($P(LRIC,U,3)):$P(LRIC,U,3),1:"Completed")_"  "_$$FMTE^XLFDT($P(LRIC,U,2),"1FMZ")_" by "_$P(LRIC,U)
"RTN","LRTSTOUT",106,0)
 . I LRN>18 D ^DIR S:$D(DIRUT) LRY=1 Q:$G(LRY)  D DEMO S LRN=0
"RTN","LRTSTOUT",107,0)
 ;
"RTN","LRTSTOUT",108,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRODT=$P(X,U,4),LRSN=$P(X,U,5)
"RTN","LRTSTOUT",109,0)
 ;
"RTN","LRTSTOUT",110,0)
 Q
"RTN","LRTSTOUT",111,0)
 ;
"RTN","LRTSTOUT",112,0)
 ;
"RTN","LRTSTOUT",113,0)
DEMO W !,PNM,?50,SSN
"RTN","LRTSTOUT",114,0)
 W !,"TESTS ON ACCESSION: ",LRACN,?40,"UID: ",LRUID
"RTN","LRTSTOUT",115,0)
 Q
"RTN","LRTSTOUT",116,0)
 ;
"RTN","LRTSTOUT",117,0)
 ;
"RTN","LRTSTOUT",118,0)
SET ;
"RTN","LRTSTOUT",119,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRTSTOUT",120,0)
 S LRLLOC=$P(^LRO(69,LRODT,1,LRSN,0),U,7)
"RTN","LRTSTOUT",121,0)
 ;
"RTN","LRTSTOUT",122,0)
 N II,X,LRI,LRSTATUS,OCXTRACE,ORIFN,ORSTS
"RTN","LRTSTOUT",123,0)
 S:$G(LRDBUG) OCXTRACE=1
"RTN","LRTSTOUT",124,0)
 S LRI=0
"RTN","LRTSTOUT",125,0)
 F  S LRI=$O(^LRO(69,LRODT,1,LRSN,2,LRI)) Q:LRI<1  I $D(^(LRI,0))#2,LRTSTS=+^(0) D
"RTN","LRTSTOUT",126,0)
 . Q:$P(^LRO(69,LRODT,1,LRSN,2,LRI,0),U,11)  S ORIFN=$P(^(0),U,7)
"RTN","LRTSTOUT",127,0)
 . S (LRSTATUS,II(LRTSTS))=""
"RTN","LRTSTOUT",128,0)
 . S X=1+$O(^LRO(69,LRODT,1,LRSN,2,LRI,1.1,"A"),-1),X(1)=$P($G(^(0)),U,4)
"RTN","LRTSTOUT",129,0)
 . S ^LRO(69,LRODT,1,LRSN,2,LRI,1.1,X,0)=$P($G(LRNATURE),U,5)_": "_LRCCOM,X=X+1,X(1)=X(1)+1
"RTN","LRTSTOUT",130,0)
 . S ^LRO(69,LRODT,1,LRSN,2,LRI,1.1,X,0)=$S($G(LRMERG):"*Merged:",'$D(LRLABKY):"*Cancel by Floor: ",1:"*NP Action: ")_$$FMTE^XLFDT(LRNOW,"1FMZ")
"RTN","LRTSTOUT",131,0)
 . S ^LRO(69,LRODT,1,LRSN,2,LRI,1.1,0)="^^"_X_"^"_X(1)_"^"_DT
"RTN","LRTSTOUT",132,0)
 . I $G(ORIFN),$D(II) D NEW^LR7OB1(LRODT,LRSN,$S($G(LRMSTATI)=""!($G(LRMSTATI)=1):"OC",1:"SC"),$G(LRNATURE),.II,LRSTATUS)
"RTN","LRTSTOUT",133,0)
 . S $P(^LRO(69,LRODT,1,LRSN,2,LRI,0),"^",9)="CA",$P(^(0),U,10)="L",$P(^(0),U,11)=DUZ
"RTN","LRTSTOUT",134,0)
 . S:$D(^LRO(69,LRODT,1,LRSN,"PCE")) ^LRO(69,"AE",DUZ,LRODT,LRSN,LRI)=""
"RTN","LRTSTOUT",135,0)
 . K II
"RTN","LRTSTOUT",136,0)
 ;
"RTN","LRTSTOUT",137,0)
 K ORIFN,ORSTS
"RTN","LRTSTOUT",138,0)
 ;
"RTN","LRTSTOUT",139,0)
 I $D(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0))#2,$D(^(4,$G(LRTSTS),0))#2 S $P(^(0),U,4,6)=DUZ_U_LRNOW_U_$S($G(LRMERG):"*Merged",1:"*Not Performed") D
"RTN","LRTSTOUT",140,0)
 . S LROWDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),U,3) I LROWDT,LROWDT'=LRAD D ROL Q
"RTN","LRTSTOUT",141,0)
 . S LROWDT=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,9)) I LROWDT D ROL
"RTN","LRTSTOUT",142,0)
 ;
"RTN","LRTSTOUT",143,0)
 I $G(LRIDT),$G(LRSS)'="",LRCCOM'="",$G(^LR(LRDFN,LRSS,LRIDT,0)) D
"RTN","LRTSTOUT",144,0)
 . D UPD63(LRDFN,LRSS,LRIDT,LRTNM,LRCCOM)
"RTN","LRTSTOUT",145,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)) D XREF^LRVER3A
"RTN","LRTSTOUT",146,0)
 ;
"RTN","LRTSTOUT",147,0)
 ; Update status of test in file #63 ORUT node.
"RTN","LRTSTOUT",148,0)
 ; Set reporting site in file #63.
"RTN","LRTSTOUT",149,0)
 I $G(LRIDT),$G(LRSS)'="" D
"RTN","LRTSTOUT",150,0)
 . D ORUT
"RTN","LRTSTOUT",151,0)
 . D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRTSTOUT",152,0)
 ;
"RTN","LRTSTOUT",153,0)
 ; Put in list to check for auto download.
"RTN","LRTSTOUT",154,0)
 ; Check if LEDI specimen and notify collecting facility
"RTN","LRTSTOUT",155,0)
 I $G(LRAA),$G(LRAD),$G(LRAN),$D(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)) D
"RTN","LRTSTOUT",156,0)
 . D EN^LA7ADL($P(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),"^"))
"RTN","LRTSTOUT",157,0)
 . ;I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),"^",3) D LEDI ;ccr_6164n
"RTN","LRTSTOUT",158,0)
 ;
"RTN","LRTSTOUT",159,0)
 Q
"RTN","LRTSTOUT",160,0)
 ;
"RTN","LRTSTOUT",161,0)
 ;
"RTN","LRTSTOUT",162,0)
ROL ;
"RTN","LRTSTOUT",163,0)
 Q:+$G(^LRO(68,LRAA,1,LROWDT,1,LRAN,0))'=LRDFN  Q:'($D(^(4,LRTSTS,0))#2)
"RTN","LRTSTOUT",164,0)
 S $P(^LRO(68,LRAA,1,LROWDT,1,LRAN,4,LRTSTS,0),U,4,6)=DUZ_U_LRNOW_U_"*Not performed"
"RTN","LRTSTOUT",165,0)
 Q
"RTN","LRTSTOUT",166,0)
 ;
"RTN","LRTSTOUT",167,0)
 ;
"RTN","LRTSTOUT",168,0)
LRACC ;
"RTN","LRTSTOUT",169,0)
 K LRAN
"RTN","LRTSTOUT",170,0)
 S LREND=0,LREXMPT=1 D ^LRWU4 K LREXMPT
"RTN","LRTSTOUT",171,0)
 Q:'$G(LRAA)!('$G(LRAN))!('($D(^LRO(68,LRAA,0))#2))
"RTN","LRTSTOUT",172,0)
 S DA(2)=LRAA,DA(1)=LRAD,LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRTSTOUT",173,0)
 I LRSS="" S LRAN=0,LRNOP=1 W !?5,"No Subscript for this Accession Area ",!!
"RTN","LRTSTOUT",174,0)
 Q
"RTN","LRTSTOUT",175,0)
 ;
"RTN","LRTSTOUT",176,0)
 ;
"RTN","LRTSTOUT",177,0)
LREND ;
"RTN","LRTSTOUT",178,0)
 S LREND=1
"RTN","LRTSTOUT",179,0)
 Q
"RTN","LRTSTOUT",180,0)
 ;
"RTN","LRTSTOUT",181,0)
 ;
"RTN","LRTSTOUT",182,0)
UNLOCK ;
"RTN","LRTSTOUT",183,0)
 I +$G(LRDFN),$G(LRSS)'="",+$G(LRIDT) L -^LR(LRDFN,LRSS,LRIDT)
"RTN","LRTSTOUT",184,0)
 I +$G(LRAA),+$G(LRAD),+$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRTSTOUT",185,0)
 ;
"RTN","LRTSTOUT",186,0)
 Q
"RTN","LRTSTOUT",187,0)
 ;
"RTN","LRTSTOUT",188,0)
 ;
"RTN","LRTSTOUT",189,0)
EXIT ;
"RTN","LRTSTOUT",190,0)
 K LRSCNX,LREND,LRNOECHO,LRACN,LRLABRV,LRNOW
"RTN","LRTSTOUT",191,0)
 ;
"RTN","LRTSTOUT",192,0)
END ;
"RTN","LRTSTOUT",193,0)
 K LRCCOM0,LRCCOM1,LRCCOMX,LRI,LRL,LRNATURE,LRNOP,LRSCN,LRMSTATI,LRORDTST,LROWDT,LRPRAC,LRTSTS,LRUID
"RTN","LRTSTOUT",194,0)
 K Q9,LRXX,DIR,LRCOM,LRAGE,DI,LRCTST,LRACN,LRACN0,LRDOC,LRLL,LRNOW
"RTN","LRTSTOUT",195,0)
 K LROD0,LROD1,LROD3,LROOS,LROS,LROSD,LROT,LRROD,LRTT,X4
"RTN","LRTSTOUT",196,0)
 D KVA^VADPT,END^LRTSTJAM,V^LRU
"RTN","LRTSTOUT",197,0)
 Q
"RTN","LRTSTOUT",198,0)
 ;
"RTN","LRTSTOUT",199,0)
 ;
"RTN","LRTSTOUT",200,0)
FX2 ;
"RTN","LRTSTOUT",201,0)
 S LREND=0,(LRCOM,LRCCOM1)=""
"RTN","LRTSTOUT",202,0)
 I LRDPF=2,$G(LRNATURE)="" D DC^LROR6() I $G(LRNATURE)="-1" W !!,$C(7),"Nothing Changed",! S LREND=1 Q
"RTN","LRTSTOUT",203,0)
 I '$D(LRLABKY) D FX3 Q
"RTN","LRTSTOUT",204,0)
 ;
"RTN","LRTSTOUT",205,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRTSTOUT",206,0)
 S DIR(0)="62.5,5",DIR("A")="Select NP comment Lab Description screen"
"RTN","LRTSTOUT",207,0)
 S DIR("?",1)="The default expansion screens are GENERAL, ORDER and LAB"
"RTN","LRTSTOUT",208,0)
 S DIR("?",2)="You may select an additional lab description expansion screen"
"RTN","LRTSTOUT",209,0)
 S DIR("?",3)="which will be used to expand your NP reason."
"RTN","LRTSTOUT",210,0)
 S DIR("?")="Press return to only use these default screens"
"RTN","LRTSTOUT",211,0)
 ;
"RTN","LRTSTOUT",212,0)
 K LRNOECHO
"RTN","LRTSTOUT",213,0)
 S:$G(LRSCN)="" LRSCN="AKL"
"RTN","LRTSTOUT",214,0)
 W !
"RTN","LRTSTOUT",215,0)
 D ^DIR
"RTN","LRTSTOUT",216,0)
 I $D(DUOUT)!($D(DTOUT)) S LREND=1 Q
"RTN","LRTSTOUT",217,0)
 I Y'="" S LRSCN=LRSCN_Y
"RTN","LRTSTOUT",218,0)
 K X,Y
"RTN","LRTSTOUT",219,0)
 ;
"RTN","LRTSTOUT",220,0)
 F  D FX3 Q:LREND!($G(LRCCOM)'="")
"RTN","LRTSTOUT",221,0)
 Q
"RTN","LRTSTOUT",222,0)
 ;
"RTN","LRTSTOUT",223,0)
 ;
"RTN","LRTSTOUT",224,0)
FX3 ;
"RTN","LRTSTOUT",225,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRL,LRY
"RTN","LRTSTOUT",226,0)
 S LRL=52,LREND=0
"RTN","LRTSTOUT",227,0)
 S DIR("A")=$S('$D(LRLABKY):"Reason for Cancel",1:"Not Perform Reason")
"RTN","LRTSTOUT",228,0)
 I $G(LRXX)'="" S DIR("B")=$G(LRXX)
"RTN","LRTSTOUT",229,0)
 S DIR(0)="F^1:"_LRL_"^"
"RTN","LRTSTOUT",230,0)
 W !
"RTN","LRTSTOUT",231,0)
 D ^DIR
"RTN","LRTSTOUT",232,0)
 I $D(DUOUT)!($D(DTOUT)) S LREND=1 Q
"RTN","LRTSTOUT",233,0)
 S LRY=Y
"RTN","LRTSTOUT",234,0)
 ;
"RTN","LRTSTOUT",235,0)
 I LREND Q
"RTN","LRTSTOUT",236,0)
 I $D(LRLABKY) D
"RTN","LRTSTOUT",237,0)
 . N LRSAV S LRSAV=LRSCN
"RTN","LRTSTOUT",238,0)
 . S (LRXX,X)=LRY,Q9="1,"_LRL_","_LRSCN D COM^LRNUM S LRSCN=LRSAV
"RTN","LRTSTOUT",239,0)
 . I $G(X)="" Q
"RTN","LRTSTOUT",240,0)
 . I $E(X,$L(X))=" " S X=$E(X,1,($L(X)-1))
"RTN","LRTSTOUT",241,0)
 . S LRY=X
"RTN","LRTSTOUT",242,0)
 S (LRCCOM,LRCCOMX)=LRY
"RTN","LRTSTOUT",243,0)
 I '$D(LRLABKY) W !,"("_LRCCOM_")"
"RTN","LRTSTOUT",244,0)
 K DIR
"RTN","LRTSTOUT",245,0)
 S DIR(0)="Y",DIR("A")="Satisfactory Comment",DIR("B")="Yes"
"RTN","LRTSTOUT",246,0)
 D ^DIR
"RTN","LRTSTOUT",247,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRTSTOUT",248,0)
 I Y=1 S LRCCOM=$E($S('$D(LRLABKY):"*Floor Cancel Reason: ",1:"*NP Reason: ")_LRCCOM,1,68)
"RTN","LRTSTOUT",249,0)
 E  S (LRCCOM,LRCCOMX)=""
"RTN","LRTSTOUT",250,0)
 Q
"RTN","LRTSTOUT",251,0)
 ;
"RTN","LRTSTOUT",252,0)
 ;
"RTN","LRTSTOUT",253,0)
UPD63(LRDFN,LRSS,LRIDT,LRTNM,LRCCOM) ; Update file #63 with comment reflecting dispostion.
"RTN","LRTSTOUT",254,0)
 ;
"RTN","LRTSTOUT",255,0)
 N FDA,LRCCOMO,LRDIE,LRFN,LRNOECHO,LRY
"RTN","LRTSTOUT",256,0)
 ;
"RTN","LRTSTOUT",257,0)
 S:'$G(LRNOW) LRNOW=$$NOW^XLFDT
"RTN","LRTSTOUT",258,0)
 S LRNOECHO=1
"RTN","LRTSTOUT",259,0)
 S LRCCOMO=$E("*"_LRTNM_$S($G(LRMERG):" Merged: ",'$D(LRLABKY):" Floor Canceled: ",1:" Not Performed: ")_$$FMTE^XLFDT(LRNOW,"1FMZ")_" by "_DUZ,1,68)
"RTN","LRTSTOUT",260,0)
  ;
"RTN","LRTSTOUT",261,0)
 S LRFN=$S(LRSS="CH":63.041,LRSS="MI":63.05,LRSS="SP":63.98,LRSS="CY":63.908,LRSS="EM":63.208,LRSS="BB":63.199,1:"")
"RTN","LRTSTOUT",262,0)
 I LRSS="MI" D  Q
"RTN","LRTSTOUT",263,0)
 . S FDA(1,LRFN,LRIDT_","_LRDFN_",",.99)=LRCCOMO
"RTN","LRTSTOUT",264,0)
 . D FILE^DIE("","FDA(1)","LRDIE(1)")
"RTN","LRTSTOUT",265,0)
 . K FDA(1),LRDIE(1)
"RTN","LRTSTOUT",266,0)
 ;
"RTN","LRTSTOUT",267,0)
 F LRY=LRCCOMO,LRCCOM D
"RTN","LRTSTOUT",268,0)
 . S FDA(1,LRFN,"+1,"_LRIDT_","_LRDFN_",",.01)=LRY
"RTN","LRTSTOUT",269,0)
 . I $D(FDA(1)) D UPDATE^DIE("","FDA(1)","","LRDIE(1)")
"RTN","LRTSTOUT",270,0)
 . K FDA(1),LRDIE(1)
"RTN","LRTSTOUT",271,0)
 D CLEAN^DILF
"RTN","LRTSTOUT",272,0)
 Q
"RTN","LRTSTOUT",273,0)
 ;
"RTN","LRTSTOUT",274,0)
 ;
"RTN","LRTSTOUT",275,0)
CLNPENDG ; Remove pending and other info from Lab test when set to not performed
"RTN","LRTSTOUT",276,0)
 N LRIFN
"RTN","LRTSTOUT",277,0)
 S LRIFN=$P($G(^LAB(60,LRTSTS,.2)),U)
"RTN","LRTSTOUT",278,0)
 I LRIFN'="",LRSS="CH" D
"RTN","LRTSTOUT",279,0)
 . I $P($G(^LR(LRDFN,LRSS,LRIDT,LRIFN)),U)="pending" K ^LR(LRDFN,LRSS,LRIDT,LRIFN) Q
"RTN","LRTSTOUT",280,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT,LRIFN)),$P(^LR(LRDFN,LRSS,LRIDT,LRIFN),U)="" K ^LR(LRDFN,LRSS,LRIDT,LRIFN) Q
"RTN","LRTSTOUT",281,0)
 Q
"RTN","LRTSTOUT",282,0)
 ;
"RTN","LRTSTOUT",283,0)
 ;
"RTN","LRTSTOUT",284,0)
ORUT ; Update ORUT node in file #63 with this disposition
"RTN","LRTSTOUT",285,0)
 N DIERR,LRDIE,LRFDA,LR60,LR60P,LR64,LR64P,LRDISPO,LRFN,LRIEN
"RTN","LRTSTOUT",286,0)
 ;
"RTN","LRTSTOUT",287,0)
 S LRDISPO="",LR60=LRTSTS,(LR64,LR64P,LRIEN)=0
"RTN","LRTSTOUT",288,0)
 S LR64=$P($G(^LAB(60,LR60,64)),"^")
"RTN","LRTSTOUT",289,0)
 ;
"RTN","LRTSTOUT",290,0)
 S LR60P=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LR60,0)),"^",9)
"RTN","LRTSTOUT",291,0)
 I LR60P S LR64P=$P($G(^LAB(60,LR60P,64)),"^")
"RTN","LRTSTOUT",292,0)
 I LR64<1,LR64P<1 Q
"RTN","LRTSTOUT",293,0)
 ;
"RTN","LRTSTOUT",294,0)
 ; Check to see if NLT in ordered test multiple, check test or parent
"RTN","LRTSTOUT",295,0)
 S LR64(0)=$$GET1^DIQ(64,LR64_",",1),LRIEN=0
"RTN","LRTSTOUT",296,0)
 I LR64(0) S LRIEN=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT","B",LR64(0),0))
"RTN","LRTSTOUT",297,0)
 I LRIEN S LRDISPO=$$FIND1^DIC(64.061,"","OQX","X","D","I $P(^(0),U,5)=""0123""")
"RTN","LRTSTOUT",298,0)
 I 'LRIEN,LR64P D
"RTN","LRTSTOUT",299,0)
 . S LR64P(0)=$$GET1^DIQ(64,LR64P_",",1)
"RTN","LRTSTOUT",300,0)
 . I LR64P(0) S LRIEN=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT","B",LR64P(0),0))
"RTN","LRTSTOUT",301,0)
 . I LRIEN S LRDISPO=$$FIND1^DIC(64.061,"","OQX","A","D","I $P(^(0),U,5)=""0123""")
"RTN","LRTSTOUT",302,0)
 I LRDISPO<1 Q
"RTN","LRTSTOUT",303,0)
 ;
"RTN","LRTSTOUT",304,0)
 S LRFN=$S(LRSS="CH":63.07,LRSS="MI":63.5,LRSS="SP":63.53,LRSS="CY":63.51,LRSS="EM":63.52,1:"")
"RTN","LRTSTOUT",305,0)
 I LRFN<1 Q
"RTN","LRTSTOUT",306,0)
 S LRIEN=LRIEN_","_LRIDT_","_LRDFN_","
"RTN","LRTSTOUT",307,0)
 S LRFDA(63,LRFN,LRIEN,10)=LRDISPO
"RTN","LRTSTOUT",308,0)
 S LRFDA(63,LRFN,LRIEN,11)=LRNOW
"RTN","LRTSTOUT",309,0)
 S LRFDA(63,LRFN,LRIEN,12)=DUZ
"RTN","LRTSTOUT",310,0)
 D FILE^DIE("","LRFDA(63)","LRDIE(63)")
"RTN","LRTSTOUT",311,0)
 D CLEAN^DILF
"RTN","LRTSTOUT",312,0)
 Q
"RTN","LRTSTOUT",313,0)
 ;
"RTN","LRTSTOUT",314,0)
 ;
"RTN","LRTSTOUT",315,0)
LEDICHK ; Add test to LROTA array if it is a LEDI accesison - added with ccr_6164n
"RTN","LRTSTOUT",316,0)
 ;
"RTN","LRTSTOUT",317,0)
 ; - When tests from an exploded panel are NP'ed, only send back one OBR with the ordered test,
"RTN","LRTSTOUT",318,0)
 ;   instead of one OBR for each individual test on a panel that was NP'ed.
"RTN","LRTSTOUT",319,0)
 ; - When tests from an exploded panel are NP'ed, send back an OBX for each individual test
"RTN","LRTSTOUT",320,0)
 ;   that were NP'ed so the receiving system can determine which tests from the panel were NP'ed.
"RTN","LRTSTOUT",321,0)
 ;
"RTN","LRTSTOUT",322,0)
 ; Process flow:
"RTN","LRTSTOUT",323,0)
 ;  - After NP'ing a test (via SET^LRTSTOUT), calling routine should call LEDICHK^LRTSTOUT.
"RTN","LRTSTOUT",324,0)
 ;  - If it is a LEDI test, LEDICHK will add the NP'ed test to the LROTA array.
"RTN","LRTSTOUT",325,0)
 ;  - After all tests are finished being NP'ed, calling process will then call LEDISET^LRTSTOUT.
"RTN","LRTSTOUT",326,0)
 ;  - LEDISET will process LROTA array to send the LEDI messages.
"RTN","LRTSTOUT",327,0)
 ;
"RTN","LRTSTOUT",328,0)
 ;
"RTN","LRTSTOUT",329,0)
 N LRORDTST,LRUID
"RTN","LRTSTOUT",330,0)
 ;
"RTN","LRTSTOUT",331,0)
 I '$P($G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),.3)),"^",3) Q  ;Not a LEDI accession
"RTN","LRTSTOUT",332,0)
 ;
"RTN","LRTSTOUT",333,0)
 S LRUID=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),"^")
"RTN","LRTSTOUT",334,0)
 I LRUID="" Q
"RTN","LRTSTOUT",335,0)
 S LRORDTST=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTSTS,0),U,9)
"RTN","LRTSTOUT",336,0)
 I 'LRORDTST S LRORDTST=LRTSTS
"RTN","LRTSTOUT",337,0)
 S LROTA(LRUID,LRORDTST)=LRAA_U_LRAD_U_LRAN_U_LRDFN_U_LRSS_U_LRIDT_U_LRODT
"RTN","LRTSTOUT",338,0)
 I LRORDTST'=LRTSTS D  ;Send back OBX for this test, as it is part of panel
"RTN","LRTSTOUT",339,0)
 . S LROTA(LRUID,LRORDTST,LRTSTS)=""
"RTN","LRTSTOUT",340,0)
 ;
"RTN","LRTSTOUT",341,0)
 ;
"RTN","LRTSTOUT",342,0)
 Q
"RTN","LRTSTOUT",343,0)
 ;
"RTN","LRTSTOUT",344,0)
 ;
"RTN","LRTSTOUT",345,0)
LEDISET(LROTA) ; added with ccr_6164n
"RTN","LRTSTOUT",346,0)
 ;
"RTN","LRTSTOUT",347,0)
 ; Called with: LROTA = array with LEDI tests (passed by reference)
"RTN","LRTSTOUT",348,0)
 ;                 LROTA(UID,ORDERED TEST IEN)=LRAA_U_LRAD_U_LRAN_U_LRDFN_U_LRSS_U_LRIDT_U_LRODT
"RTN","LRTSTOUT",349,0)
 ;                 LROTA(LRUID,ORDERED TEST IEN,TEST BEING NP'ED)=""
"RTN","LRTSTOUT",350,0)
 ;
"RTN","LRTSTOUT",351,0)
 N LRORDTST,LRUID,LRX
"RTN","LRTSTOUT",352,0)
 ;
"RTN","LRTSTOUT",353,0)
 Q:'$D(LROTA)
"RTN","LRTSTOUT",354,0)
 ;
"RTN","LRTSTOUT",355,0)
 S LRUID=""
"RTN","LRTSTOUT",356,0)
 F  S LRUID=$O(LROTA(LRUID)) Q:LRUID=""  D
"RTN","LRTSTOUT",357,0)
 . S LRORDTST=0
"RTN","LRTSTOUT",358,0)
 . F  S LRORDTST=$O(LROTA(LRUID,LRORDTST)) Q:'LRORDTST  D
"RTN","LRTSTOUT",359,0)
 . . N LA7VDB,LRTSTS,LRX
"RTN","LRTSTOUT",360,0)
 . . S LRX=$G(LROTA(LRUID,LRORDTST))
"RTN","LRTSTOUT",361,0)
 . . S LA7VDB=""
"RTN","LRTSTOUT",362,0)
 . . S LRTSTS=0
"RTN","LRTSTOUT",363,0)
 . . F  S LRTSTS=$O(LROTA(LRUID,LRORDTST,LRTSTS)) Q:'LRTSTS  D
"RTN","LRTSTOUT",364,0)
 . . . N LA7TREE,LRSB,LRY
"RTN","LRTSTOUT",365,0)
 . . . D UNWIND^LA7ADL1(LRTSTS,9,LRTSTS)
"RTN","LRTSTOUT",366,0)
 . . . S LRY=0
"RTN","LRTSTOUT",367,0)
 . . . F  S LRY=$O(LA7TREE(LRY)) Q:'LRY  D
"RTN","LRTSTOUT",368,0)
 . . . . S LRSB=$P($G(^LAB(60,LRY,.2)),U)
"RTN","LRTSTOUT",369,0)
 . . . . I LRSB="" Q
"RTN","LRTSTOUT",370,0)
 . . . . I $P(LRX,U,5)="CH" S LA7VDB(LRSB)=LRSB
"RTN","LRTSTOUT",371,0)
 . . D LEDI($P(LRX,U,1),$P(LRX,U,2),$P(LRX,U,3),$P(LRX,U,4),$P(LRX,U,5),$P(LRX,U,6),$P(LRX,U,7),LRORDTST,.LA7VDB)
"RTN","LRTSTOUT",372,0)
 ;
"RTN","LRTSTOUT",373,0)
 Q
"RTN","LRTSTOUT",374,0)
 ;
"RTN","LRTSTOUT",375,0)
 ;
"RTN","LRTSTOUT",376,0)
LEDI(LRAA,LRAD,LRAN,LRDFN,LRSS,LRIDT,LRODT,LRORDTST,LA7VDB) ; Put accession in queue to send message back to collecting site.
"RTN","LRTSTOUT",377,0)
 ;
"RTN","LRTSTOUT",378,0)
 ; Made the following changes - ccr_6164n:
"RTN","LRTSTOUT",379,0)
 ;  - Added formal paramater list
"RTN","LRTSTOUT",380,0)
 ;  - Use parent test instead of individual NP'ed test (LRORDTST instead of LRTSTS)
"RTN","LRTSTOUT",381,0)
 ;  - Pass in LA7VDB array to SET^LA7VMSG call (so that an OBX can be generated when individual tests from a panel are NP'ed).
"RTN","LRTSTOUT",382,0)
 ;
"RTN","LRTSTOUT",383,0)
 ; Handle CH subscript tests
"RTN","LRTSTOUT",384,0)
 I LRSS="CH" D  Q
"RTN","LRTSTOUT",385,0)
 . N LR64,LRORU3,LRTPN,LRTPNN
"RTN","LRTSTOUT",386,0)
 . S LRORU3=^LRO(68,LRAA,1,LRAD,1,LRAN,.3),LR64=$P($G(^LAB(60,LRORDTST,64)),"^") Q:'LR64
"RTN","LRTSTOUT",387,0)
 . S LRTPN=$$GET1^DIQ(64,LR64_",",.01),LRTPNN=$$GET1^DIQ(64,LR64_",",1)
"RTN","LRTSTOUT",388,0)
 . D SET^LA7VMSG($P(LRORU3,U,4),$P(LRORU3,U,2),$P(LRORU3,U,5),$P(LRORU3,U,3),LRTPN,LRTPNN,LRIDT,LRSS,LRDFN,LRODT,.LA7VDB,"ORU")
"RTN","LRTSTOUT",389,0)
 ;
"RTN","LRTSTOUT",390,0)
 ; Handle the other subscripts - MI, SP, CY , EM.
"RTN","LRTSTOUT",391,0)
 I LRSS?1(1"MI",1"SP",1"CY",1"EM") D MIAP^LA7VMSG(LRAA,LRAD,LRAN,LRORDTST,LRDFN,LRSS,LRIDT,LRODT)
"RTN","LRTSTOUT",392,0)
 Q
"RTN","LRTSTOUT",393,0)
 ;
"RTN","LRTSTOUT",394,0)
 ;
"RTN","LRTSTOUT",395,0)
CHK63(LR60,LRDFN,LRSS,LRIDT) ;  Check if tests being NP already have resuls in file #63.
"RTN","LRTSTOUT",396,0)
 ; Call with LR60 = ien of entry in file #60
"RTN","LRTSTOUT",397,0)
 ;          LRDFN = ien of entry in file #63
"RTN","LRTSTOUT",398,0)
 ;           LRSS = file #63 subscript
"RTN","LRTSTOUT",399,0)
 ;          LRIDT = file #63 inverse date/time of specimen
"RTN","LRTSTOUT",400,0)
 ;
"RTN","LRTSTOUT",401,0)
 ; Returns LRFLAG = flag indicating if results exist in file #63 for this test either verified or unverified.
"RTN","LRTSTOUT",402,0)
 ;                  0 = no existing result in file #63
"RTN","LRTSTOUT",403,0)
 ;                  1 = existing node, no result value
"RTN","LRTSTOUT",404,0)
 ;                  2 = existing node, result value exists
"RTN","LRTSTOUT",405,0)
 ;                  3 = result exists and accession verified
"RTN","LRTSTOUT",406,0)
 ;
"RTN","LRTSTOUT",407,0)
 N LA7TREE,LRFLAG,LRSB,LRX
"RTN","LRTSTOUT",408,0)
 ;
"RTN","LRTSTOUT",409,0)
 D UNWIND^LA7ADL1(LR60,9,LR60)
"RTN","LRTSTOUT",410,0)
 S (LRFLAG,LRX)=0
"RTN","LRTSTOUT",411,0)
 F  S LRX=$O(LA7TREE(LRX)) Q:'LRX  D
"RTN","LRTSTOUT",412,0)
 . S LRSB=$P($P(^LAB(60,LRX,0),"^",5),";",2)
"RTN","LRTSTOUT",413,0)
 . I LRSB="" Q
"RTN","LRTSTOUT",414,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q
"RTN","LRTSTOUT",415,0)
 . I $P(^LR(LRDFN,LRSS,LRIDT,LRSB),"^")'="" D  Q
"RTN","LRTSTOUT",416,0)
 . . I $P(^LR(LRDFN,LRSS,LRIDT,LRSB),"^")="pending" Q
"RTN","LRTSTOUT",417,0)
 . . I $P(^LR(LRDFN,LRSS,LRIDT,0),"^",3) S LRFLAG=3
"RTN","LRTSTOUT",418,0)
 . . E  S LRFLAG=2
"RTN","LRTSTOUT",419,0)
 . S LRFLAG=1
"RTN","LRTSTOUT",420,0)
 ;
"RTN","LRTSTOUT",421,0)
 Q LRFLAG
"RTN","LRTSTSET")
0^156^B10120516
"RTN","LRTSTSET",1,0)
LRTSTSET ;DALOI/STAFF - JAM TESTS ONTO (OR OFF) ACCESSIONS ;11/18/11  16:59
"RTN","LRTSTSET",2,0)
 ;;5.2;LAB SERVICE;**65,100,121,153,201,202,263,291,350**;Sep 27, 1994;Build 230
"RTN","LRTSTSET",3,0)
 ;
"RTN","LRTSTSET",4,0)
 ;Formerly apart of LRTSTJAM
"RTN","LRTSTSET",5,0)
 ;
"RTN","LRTSTSET",6,0)
EN ;
"RTN","LRTSTSET",7,0)
 ; Called from LRTSTJAM, LRPHSET2
"RTN","LRTSTSET",8,0)
 I '($D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2) D  Q
"RTN","LRTSTSET",9,0)
 . W !?10,"Sorry  This accession "_LRAN_" No longer exist"
"RTN","LRTSTSET",10,0)
 . W !?10," Accession may have been deleted.",!,$C(7)
"RTN","LRTSTSET",11,0)
 ;
"RTN","LRTSTSET",12,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTS,0)=LRTS_"^"_LRURG,$P(^(0),U,9)=+LRTS
"RTN","LRTSTSET",13,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",LRTS,LRTS)="",$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=""
"RTN","LRTSTSET",14,0)
 S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,3)=LRTS,$P(^(0),U,4)=$P(^(0),U,4)+1
"RTN","LRTSTSET",15,0)
 ;
"RTN","LRTSTSET",16,0)
 I $P(LRPARAM,U,14),$P(^LRO(68,LRAA,0),U,16) D CAP^LRWLST12
"RTN","LRTSTSET",17,0)
 ;
"RTN","LRTSTSET",18,0)
 S LRACD=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^",3),LRTSAD(1,LRTS)=""
"RTN","LRTSTSET",19,0)
 I LRACD,LRACD'=LRAD D
"RTN","LRTSTSET",20,0)
 . S ^LRO(68,LRAA,1,LRACD,1,LRAN,4,LRTS,0)=LRTS_"^"_LRURG,$P(^(0),U,9)=+LRTS
"RTN","LRTSTSET",21,0)
 . S ^LRO(68,LRAA,1,LRACD,1,LRAN,4,"B",LRTS,LRTS)="",$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",4)=""
"RTN","LRTSTSET",22,0)
 . I $P(LRPARAM,U,14),$P(^LRO(68,LRAA,0),U,16) D CAP^LRWLST12
"RTN","LRTSTSET",23,0)
 ;
"RTN","LRTSTSET",24,0)
 D ORUT^LRTSTJM1(LRDFN,LRAA,LRAD,LRAN,LRTS,LRORDTYP,LRURG,LRODT,LRSN)
"RTN","LRTSTSET",25,0)
 ;
"RTN","LRTSTSET",26,0)
 S LRADL=1
"RTN","LRTSTSET",27,0)
 ;
"RTN","LRTSTSET",28,0)
 F  L +^LRO(69,LRODT,1,LRSN):DILOCKTM Q:$T  W !?7,"Someone else is editing this order",!,$C(7) H 20
"RTN","LRTSTSET",29,0)
 ;
"RTN","LRTSTSET",30,0)
 ; Add stub entry for new test.
"RTN","LRTSTSET",31,0)
 K DA,DIC,DIE,DINUM,DO,DR
"RTN","LRTSTSET",32,0)
 S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,",DA(2)=LRODT,DA(1)=LRSN
"RTN","LRTSTSET",33,0)
 S DIC(0)="F",X=+LRTS
"RTN","LRTSTSET",34,0)
 D FILE^DICN
"RTN","LRTSTSET",35,0)
 ;
"RTN","LRTSTSET",36,0)
69 ; Called by LR7OMERG
"RTN","LRTSTSET",37,0)
 I Y>0 D
"RTN","LRTSTSET",38,0)
 . N LRDIE,LRFDA,LRIENS,I
"RTN","LRTSTSET",39,0)
 . S LRXDA=+Y,LRIENS=LRXDA_","_LRSN_","_LRODT_","
"RTN","LRTSTSET",40,0)
 . S LRXDA(3)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRTSTSET",41,0)
 . S LRFDA(1,69.03,LRIENS,1)=LRURG
"RTN","LRTSTSET",42,0)
 . S LRFDA(1,69.03,LRIENS,2)=LRAODT
"RTN","LRTSTSET",43,0)
 . S LRFDA(1,69.03,LRIENS,3)=LRAA
"RTN","LRTSTSET",44,0)
 . S LRFDA(1,69.03,LRIENS,4)=LRAN
"RTN","LRTSTSET",45,0)
 . S LRFDA(1,69.03,LRIENS,8)="IP"
"RTN","LRTSTSET",46,0)
 . S LRFDA(1,69.03,LRIENS,9)="L"
"RTN","LRTSTSET",47,0)
 . I $P(LRXDA(3),"^")'="" D
"RTN","LRTSTSET",48,0)
 . . S LRFDA(1,69.03,LRIENS,13)=$P(LRXDA(3),"^")
"RTN","LRTSTSET",49,0)
 . . I $P(LRXDA(3),"^",2) F I=2:1:5 S LRFDA(1,69.03,LRIENS,I+12)=$P(LRXDA(3),"^",I)
"RTN","LRTSTSET",50,0)
 . D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRTSTSET",51,0)
 . D:$G(LRTSP)
"RTN","LRTSTSET",52,0)
 . . S LRBETN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRTSP,""))
"RTN","LRTSTSET",53,0)
 . . I LRBETN D DADD^LRBEBA31(LRODT,LRSN,LRBETN,LRXDA,LRTS,$G(LRBERF))
"RTN","LRTSTSET",54,0)
 . K LRBETN,LRBERF
"RTN","LRTSTSET",55,0)
 ;
"RTN","LRTSTSET",56,0)
 I $G(LRXDA) D
"RTN","LRTSTSET",57,0)
 . N X
"RTN","LRTSTSET",58,0)
 . S X=1+$S($D(^LRO(69,LRODT,1,LRSN,2,LRXDA,1,0)):$P(^(0),"^",3),1:0),^(0)="^^"_X_"^"_DT,^(X,0)=" Added by "_$G(DUZ)_" on "_$$HTE^XLFDT($H,"M")
"RTN","LRTSTSET",59,0)
 . S ^LRO(69,"AA",+$G(^LRO(69,LRODT,1,LRSN,.1)),LRODT_"|"_LRSN)=""
"RTN","LRTSTSET",60,0)
 ;
"RTN","LRTSTSET",61,0)
 I '$D(LRFLG) K DLAYGO,DA,DIC,DIE,DR,LRXDA L -^LRO(69,LRODT,1,LRSN) Q
"RTN","LRTSTSET",62,0)
 ;
"RTN","LRTSTSET",63,0)
SETOR ;
"RTN","LRTSTSET",64,0)
 N LTS S LTS(LRTS)=""
"RTN","LRTSTSET",65,0)
 D NEW^LR7OB1(LRODT,LRSN,"SN",$G(LRNATURE),.LTS,6)
"RTN","LRTSTSET",66,0)
 K DLAYGO,DA,DIC,DIE,DR,LRBERF,LRBEFN,LRBEX
"RTN","LRTSTSET",67,0)
 L -^LRO(69,LRODT,1,LRSN)
"RTN","LRTSTSET",68,0)
 ;
"RTN","LRTSTSET",69,0)
B Q:$D(LRPHSET)
"RTN","LRTSTSET",70,0)
 W !?5,$P(^LAB(60,LRTS,0),U,1)," ADDED" ;K DIC("B") Q:$D(LRTSAD(2))  G ADDTST^LRTSTJAM
"RTN","LRTSTSET",71,0)
 Q
"RTN","LRTT5P1")
0^170^B25453515
"RTN","LRTT5P1",1,0)
LRTT5P1 ;DALOI/FHS - LAB URGENCY TURNAROUND TIMES PROCESSOR ;02/28/12  19:45
"RTN","LRTT5P1",2,0)
 ;;5.2;LAB SERVICE;**153,221,263,274,358,350**;Sep 27, 1994;Build 230
"RTN","LRTT5P1",3,0)
 ;
"RTN","LRTT5P1",4,0)
ONE ; from LRTT5
"RTN","LRTT5P1",5,0)
 ; return for reg & irreg: # tests, total time, bad turnaround time
"RTN","LRTT5P1",6,0)
 ; input:
"RTN","LRTT5P1",7,0)
 ; ^TMP("LRTT5",$J,"TESTS",tests)=test names
"RTN","LRTT5P1",8,0)
 ; LRPQ("URGENCY",urgencies)=urgency names
"RTN","LRTT5P1",9,0)
 ; LRSDT, LREDT, LRPDET
"RTN","LRTT5P1",10,0)
 ; output:
"RTN","LRTT5P1",11,0)
 ; ^TMP("LR",$J,"REG")=#tests^total time
"RTN","LRTT5P1",12,0)
 ; ^TMP("LR",$J,"REG",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",13,0)
 ; ^TMP("LR",$J,"REGT",test)=#tests^total time
"RTN","LRTT5P1",14,0)
 ; ^TMP("LR",$J,"IRREG")=#tests^total time
"RTN","LRTT5P1",15,0)
 ; ^TMP("LR",$J,"IRREG",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",16,0)
 ; ^TMP("LR",$J,"IRREGT",test)=#tests^total time
"RTN","LRTT5P1",17,0)
 ; ^TMP("LR",$J,"BAD",TAT,#)=acc^test^in^out
"RTN","LRTT5P1",18,0)
 ;
"RTN","LRTT5P1",19,0)
START ; go thru tests
"RTN","LRTT5P1",20,0)
 S LRSDT=$P(LRSDT,"."),LREDT=$P(LREDT,".")
"RTN","LRTT5P1",21,0)
 I LRSDT>LREDT S X=LRSDT,LRSDT=LREDT,LREDT=X
"RTN","LRTT5P1",22,0)
 S LRPSDT=LRSDT,LRPEDT=LREDT
"RTN","LRTT5P1",23,0)
 S LRTEST=0 F  S LRTEST=$O(^TMP("LRTT5",$J,"TESTS",LRTEST)) Q:LRTEST<1  D
"RTN","LRTT5P1",24,0)
 .; get acc areas for tests
"RTN","LRTT5P1",25,0)
 . S LRPN=0 F  S LRPN=$O(^LAB(60,LRTEST,8,LRPN)) Q:LRPN<1  I $D(^(LRPN,0)) S LRAA=+$P(^(0),U,2) I $D(^LRO(68,LRAA,0)) S LRAA(LRAA)=""
"RTN","LRTT5P1",26,0)
 ; go thru valid accession areas, get accession type - daily, yearly, etc
"RTN","LRTT5P1",27,0)
 S (LRPN,LRAA)=0 F  S LRAA=$O(LRAA(LRAA)) Q:LRAA<1  I $D(^LRO(68,LRAA,0)) S LRAAT=$P(^(0),U,3) D
"RTN","LRTT5P1",28,0)
 . ; go thru accession dates, start using appropriate acc type
"RTN","LRTT5P1",29,0)
 . S LRSDT=LRPSDT,LREDT=$P(LRPEDT,".")_".24"
"RTN","LRTT5P1",30,0)
 . S LRAD=$S(LRAAT="D":LRSDT,LRAAT="M":LRSDT\100*100,1:LRSDT\10000*10000)-.000001
"RTN","LRTT5P1",31,0)
 . F  S LRAD=$O(^LRO(68,LRAA,1,LRAD)) Q:LRAD<1!(LRAD>(LREDT))  D
"RTN","LRTT5P1",32,0)
 . . ; go thru accession #s
"RTN","LRTT5P1",33,0)
 . . S LRAN=0 F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:LRAN<1  S LRDPF=$P($G(^(LRAN,0)),U,2) D
"RTN","LRTT5P1",34,0)
 . . . Q:$S('LRDPF:1,LRDPF=2:0,LRDPF=67:0,1:1)
"RTN","LRTT5P1",35,0)
 . . . ; check lab arrival time, must be >= begin time and <= end time
"RTN","LRTT5P1",36,0)
 . . . Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))  S LRPLRRX1=$P(^(3),U,3) Q:LRPLRRX1<LRSDT  Q:LRPLRRX1>(LREDT)
"RTN","LRTT5P1",37,0)
 . . . I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,.4)),$O(LRLLOC(0)),'$D(LRLLOC(+$G(^(.4)))) Q
"RTN","LRTT5P1",38,0)
 . . . ; go thru tests on accession, if valid urgency get date reported
"RTN","LRTT5P1",39,0)
 . . . S LRTEST=0 F  S LRTEST=$O(^TMP("LRTT5",$J,"TESTS",LRTEST)) Q:LRTEST<1  I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0)),$D(LRPQ("URGENCY",+$P(^(0),U,2))) S LRPLRRX2=+$P(^(0),U,5) D
"RTN","LRTT5P1",40,0)
 . . . . Q:'$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,4)  ;Must be verified and have suffix code.
"RTN","LRTT5P1",41,0)
 . . . . ; increment sequence number
"RTN","LRTT5P1",42,0)
 . . . . S LRPN=LRPN+1
"RTN","LRTT5P1",43,0)
 . . . . ; no report date, set to zero TAT save as bad and quit
"RTN","LRTT5P1",44,0)
 . . . . I 'LRPLRRX2 S LRPLRRX2=LRPLRRX1 D SAVE("BAD") Q
"RTN","LRTT5P1",45,0)
 . . . . ; if negative times save as bad and quit
"RTN","LRTT5P1",46,0)
 . . . . I LRPLRRX1>LRPLRRX2 D SAVE("BAD") Q
"RTN","LRTT5P1",47,0)
 . . . . ; if time is not regular (7am-5pm) then save as irregular and quit
"RTN","LRTT5P1",48,0)
 . . . . S LRPRX1T="."_$P(LRPLRRX1,".",2) I LRPRX1T<.07!(LRPRX1T>.17) D SAVE("IRREG") Q
"RTN","LRTT5P1",49,0)
 . . . . ; if Sunday or Saturday save as irregular and quit
"RTN","LRTT5P1",50,0)
 . . . . S (LRPRX1D,X)=LRPLRRX1\1 D H^%DTC I %Y=0!(%Y=6) D SAVE("IRREG") Q
"RTN","LRTT5P1",51,0)
 . . . . ; if holiday save as irregular and quit
"RTN","LRTT5P1",52,0)
 . . . . I $D(^HOLIDAY("B",LRPRX1D)) D SAVE("IRREG") Q
"RTN","LRTT5P1",53,0)
 . . . . ; otherwise save as regular and quit
"RTN","LRTT5P1",54,0)
 . . . . D SAVE("REG")
"RTN","LRTT5P1",55,0)
 ; go thru reg & irreg
"RTN","LRTT5P1",56,0)
 F LRPTYPE="REG","IRREG" D
"RTN","LRTT5P1",57,0)
 . ; go thru TATs
"RTN","LRTT5P1",58,0)
 . S (LRPNN,LRPNT)=0,LRPDIFF="" F  S LRPDIFF=$O(^TMP("LR",$J,LRPTYPE,LRPDIFF)) Q:LRPDIFF=""  D
"RTN","LRTT5P1",59,0)
 . . ; go thru each reg & irreg TAT, count # and total
"RTN","LRTT5P1",60,0)
 . . S LRPN="" F  S LRPN=$O(^TMP("LR",$J,LRPTYPE,LRPDIFF,LRPN)) Q:LRPN=""  S LRPNN=LRPNN+1,LRPNT=LRPNT+LRPDIFF
"RTN","LRTT5P1",61,0)
 . ; store reg data
"RTN","LRTT5P1",62,0)
 . S ^TMP("LR",$J,LRPTYPE)=LRPNN_U_LRPNT
"RTN","LRTT5P1",63,0)
CLEAN K %Y,LRAA,LRAAT,LRAN,LRPDIFF,LRAD,LRPLRRX1,LRPLRRX2,LRPN,LRPNN,LRPNT,LRPRX1D,LRPRX1T,LRTEST,LRTESTN,LRPTYPE,X
"RTN","LRTT5P1",64,0)
 Q
"RTN","LRTT5P1",65,0)
SAVE(LRPUTYPE) ; collect reg, irreg, and bad
"RTN","LRTT5P1",66,0)
 N LRUID
"RTN","LRTT5P1",67,0)
 S LRUID=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRTT5P1",68,0)
 S LRPDIFF=$$DIFF(LRPLRRX2,LRPLRRX1),LRTESTN=$P(^LAB(60,LRTEST,0),U)
"RTN","LRTT5P1",69,0)
 I LRPUTYPE="BAD"!('$L(LRUID)) S ^TMP("LR",$J,"BAD",-LRPDIFF,LRPN)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))_U_LRTESTN_U_LRPLRRX1_U_$S(LRPLRRX2=LRPLRRX1:"",1:LRPLRRX2) Q
"RTN","LRTT5P1",70,0)
 Q:$D(^TMP("LR",$J,LRPUTYPE,+LRPDIFF,LRTESTN_LRUID))#2
"RTN","LRTT5P1",71,0)
 S ^TMP("LR",$J,LRPUTYPE,+LRPDIFF,LRTESTN_LRUID)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))_U_LRTESTN_U_LRPLRRX1_U_LRPLRRX2
"RTN","LRTT5P1",72,0)
 S $P(^(LRTESTN),U)=$P($G(^TMP("LR",$J,LRPUTYPE_"T",LRTESTN)),U)+1,$P(^(LRTESTN),U,2)=$P($G(^(LRTESTN)),U,2)+LRPDIFF
"RTN","LRTT5P1",73,0)
 Q
"RTN","LRTT5P1",74,0)
DIFF(LRPUT1,LRPUT2) ; $$(time1,time2) -> difference in min
"RTN","LRTT5P1",75,0)
 N LRPUDIFF,X1,X2,LRPUX1M,LRPUX2M,LRPUX1H,LRPUX2H,LRPUX1TH,LRPUX2TH,LRPUX1TM,LRPUX2TM,LRPUXMI
"RTN","LRTT5P1",76,0)
 S X1=$P(LRPUT1,"."),X2=$P(LRPUT2,"."),LRPUX1TH=$E(LRPUT1,9),LRPUX2TH=$E(LRPUT2,9),LRPUX1H=$E(LRPUT1,10),LRPUX2H=$E(LRPUT2,10),LRPUX1TM=$E(LRPUT1,11),LRPUX2TM=$E(LRPUT2,11),LRPUX1M=$E(LRPUT1,12),LRPUX2M=$E(LRPUT2,12)
"RTN","LRTT5P1",77,0)
 D ^%DTC S LRPUXMI=X*1440+(LRPUX1M+(LRPUX1TM*10)+(LRPUX1TH*600)+(LRPUX1H*60))-(LRPUX2M+(LRPUX2TM*10)+(LRPUX2TH*600)+(LRPUX2H*60)),LRPUDIFF=LRPUXMI S:LRPUXMI<0 LRPUDIFF=-LRPUXMI
"RTN","LRTT5P1",78,0)
 Q LRPUDIFF
"RTN","LRU")
0^59^B44711331
"RTN","LRU",1,0)
LRU ;DALOI/STAFF - LAB UTILITY ;05/11/10  15:14
"RTN","LRU",2,0)
 ;;5.2;LAB SERVICE;**1,72,201,248,350**;Sep 27, 1994;Build 230
"RTN","LRU",3,0)
 ;
"RTN","LRU",4,0)
 ;Reference to ^DIC(4 supported by IA #10090
"RTN","LRU",5,0)
 ;Reference to ^XMB(1 supported by IA #10091
"RTN","LRU",6,0)
 ;Reference to ^VA(200 supported by IA #10060
"RTN","LRU",7,0)
 ;Reference to ^%DT supported by IA #10003
"RTN","LRU",8,0)
 ;Reference to ^%ZIS supported by IA #10086
"RTN","LRU",9,0)
 ;Reference to ^DIC supported by IA #10006
"RTN","LRU",10,0)
 ;Reference to ^DIE supported by IA #10018
"RTN","LRU",11,0)
 ;Reference to PID^VADPT6 supported by IA #10062
"RTN","LRU",12,0)
 ;Reference to $$FMTE^XLFDT supported by IA #10103
"RTN","LRU",13,0)
 ;
"RTN","LRU",14,0)
 S X="T",%DT="" D ^%DT,D S H(10)=Y
"RTN","LRU",15,0)
 Q
"RTN","LRU",16,0)
 ;
"RTN","LRU",17,0)
 ;
"RTN","LRU",18,0)
LOCK ;Set and kill lock for ^DIE call. If lock fails LR("CK")=1 is set.
"RTN","LRU",19,0)
 N LRLOKVAR
"RTN","LRU",20,0)
 I '$D(DIE) S LR("CK")=1 Q
"RTN","LRU",21,0)
 D CK I '$G(LR("CK")) D ^DIE K LR("CK") D FRE
"RTN","LRU",22,0)
 Q
"RTN","LRU",23,0)
 ;
"RTN","LRU",24,0)
 ;
"RTN","LRU",25,0)
CK ;
"RTN","LRU",26,0)
 D:$D(LRLOKVAR)#2 FRE
"RTN","LRU",27,0)
 S LRLOKVAR=DIE_DA_")" L +@(LRLOKVAR):DILOCKTM
"RTN","LRU",28,0)
 I '$T D
"RTN","LRU",29,0)
 . W !,$C(7),"ANOTHER TERMINAL IS EDITING THIS ENTRY!" S LR("CK")=1
"RTN","LRU",30,0)
 . K LRLOKVAR
"RTN","LRU",31,0)
 Q
"RTN","LRU",32,0)
 ;
"RTN","LRU",33,0)
 ;
"RTN","LRU",34,0)
FRE I $D(LRLOKVAR) L -@(LRLOKVAR) K LRLOKVAR
"RTN","LRU",35,0)
 Q
"RTN","LRU",36,0)
 ;
"RTN","LRU",37,0)
F ;
"RTN","LRU",38,0)
 S LRQ=LRQ+1,X="N",%DT="T" D ^%DT,D^LRU
"RTN","LRU",39,0)
 ;Suppress unnecessary form feeds
"RTN","LRU",40,0)
 I $G(LRSS)'="BB" W:IOST?1"C".E!($D(LR("F"))) @IOF
"RTN","LRU",41,0)
 W:$G(LRSS)="BB" @IOF
"RTN","LRU",42,0)
 W !,Y,?22,LRQ(1),?(IOM-10),"Pg: ",LRQ
"RTN","LRU",43,0)
 Q
"RTN","LRU",44,0)
 ;
"RTN","LRU",45,0)
 ;
"RTN","LRU",46,0)
M R !,"'^' TO STOP: ",X:DTIME S:'$T!(X["^") LR("Q")=1
"RTN","LRU",47,0)
 W $C(13),$J("",15),$C(13)
"RTN","LRU",48,0)
 Q
"RTN","LRU",49,0)
 ;
"RTN","LRU",50,0)
 ;
"RTN","LRU",51,0)
T ; Returns the Month/Day
"RTN","LRU",52,0)
 Q:'Y  S Y=Y_"000",Y=$E(Y,4,5)_"/"_$E(Y,6,7)_$S(Y[".":" "_$E(Y,9,10)_":"_$E(Y,11,12),1:"")
"RTN","LRU",53,0)
 Q
"RTN","LRU",54,0)
 ;
"RTN","LRU",55,0)
 ;
"RTN","LRU",56,0)
A ; Returns Date in format mm/dd/yyyy with time if a time is passed.
"RTN","LRU",57,0)
 Q:'Y  S Y=$$FMTE^XLFDT(Y,"5M")
"RTN","LRU",58,0)
 I $L($P(Y,"/"))=1 S $P(Y,"/")="0"_$P(Y,"/") ;--> pad for 2 digit day
"RTN","LRU",59,0)
 I $L($P(Y,"/",2))=1 S $P(Y,"/",2)="0"_$P(Y,"/",2) ;--> pad for 2 digit month
"RTN","LRU",60,0)
 Q
"RTN","LRU",61,0)
 ;
"RTN","LRU",62,0)
 ;
"RTN","LRU",63,0)
D ; Returns date in eye-readable month format
"RTN","LRU",64,0)
 S Y=$TR($$FMTE^XLFDT(Y,"M"),"@"," ")
"RTN","LRU",65,0)
 Q
"RTN","LRU",66,0)
 ;
"RTN","LRU",67,0)
 ;
"RTN","LRU",68,0)
DA ; Returns date in eye-readable month format
"RTN","LRU",69,0)
 S Y=$$FMTE^XLFDT(Y,"M")
"RTN","LRU",70,0)
 Q
"RTN","LRU",71,0)
 ;
"RTN","LRU",72,0)
 ;
"RTN","LRU",73,0)
DT ; If Blood Bank maintain existing display, else display 4 digit year.
"RTN","LRU",74,0)
 I $G(LRSS)="BB" S Y=Y_"000",Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_" "_$S(Y[".":$E(Y,9,10)_":"_$E(Y,11,12),1:"") Q
"RTN","LRU",75,0)
 D A
"RTN","LRU",76,0)
 Q
"RTN","LRU",77,0)
 ;
"RTN","LRU",78,0)
 ;
"RTN","LRU",79,0)
SSN ;
"RTN","LRU",80,0)
 S (SSN,SSN(1),SSN(2))=$G(SSN)
"RTN","LRU",81,0)
 I '$G(LRDPF),$G(LRDFN) S:$P($G(^LR(+LRDFN,0)),U,2) LRDPF=+$P(^(0),U,2)
"RTN","LRU",82,0)
 S (VA("BID"),VA("PID"))="" G:'$G(LRDPF)!(+$G(LRDPF)'=2) SSNFM
"RTN","LRU",83,0)
 N I,X,Y,N
"RTN","LRU",84,0)
 I $D(DFN) D PID^VADPT6 S (SSN,SSN(2))=VA("PID"),SSN(1)=VA("BID")
"RTN","LRU",85,0)
 ;
"RTN","LRU",86,0)
SSNFM ;
"RTN","LRU",87,0)
 S SSN(2)=$TR(SSN,"-","")
"RTN","LRU",88,0)
 ;I $G(DUZ("AG"))'="","NAFARMY"[DUZ("AG") D  Q
"RTN","LRU",89,0)
 ;. S SSN=$S($L(SSN)<11:$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10),1:$E(SSN,10,11)_"/"_$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9))
"RTN","LRU",90,0)
 ;. S SSN(1)=$S($P(SSN,"-",3):$P(SSN,"-",3),1:$E(SSN,9,12))
"RTN","LRU",91,0)
 ;
"RTN","LRU",92,0)
 ; Setup identifier for PATIENT (#2) file related entry
"RTN","LRU",93,0)
 I $G(LRDPF)=2,$G(DFN)="" D
"RTN","LRU",94,0)
 . S:$L(SSN)>8 SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,99)
"RTN","LRU",95,0)
 . S SSN(1)=$S($P(SSN,"-",3):$P(SSN,"-",3),$L($E(SSN,($L(SSN)-3),$L(SSN))):$E(SSN,($L(SSN)-3),$L(SSN)),1:"????")
"RTN","LRU",96,0)
 . S:'$L(SSN) SSN="?"
"RTN","LRU",97,0)
 ;
"RTN","LRU",98,0)
 ; Setup identifier for non-PATIENT (#2) file related entry
"RTN","LRU",99,0)
 I $G(LRDPF)'=2 D
"RTN","LRU",100,0)
 . I SSN?9N.1A S SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,99)
"RTN","LRU",101,0)
 . S SSN(1)=$S($P(SSN,"-",3):$P(SSN,"-",3),$L($E(SSN,($L(SSN)-3),$L(SSN))):$E(SSN,($L(SSN)-3),$L(SSN)),1:"????")
"RTN","LRU",102,0)
 ;
"RTN","LRU",103,0)
 I SSN="" S SSN="?"
"RTN","LRU",104,0)
 ;
"RTN","LRU",105,0)
 Q
"RTN","LRU",106,0)
 ;
"RTN","LRU",107,0)
 ;
"RTN","LRU",108,0)
B D LRU S %DT="AEX",%DT(0)="-N",%DT("A")="Start with Date TODAY// " D ^%DT K %DT I X="" S Y=DT W H(10)
"RTN","LRU",109,0)
 Q:Y<1  S LRSDT=Y
"RTN","LRU",110,0)
 S %DT="AEX",%DT("A")="Go    to   Date TODAY// " D ^%DT K %DT I X="" S Y=DT W H(10)
"RTN","LRU",111,0)
 Q:Y<1  S LRLDT=Y I LRSDT>LRLDT S X=LRSDT,LRSDT=LRLDT,LRLDT=X
"RTN","LRU",112,0)
 S Y=LRSDT D D^LRU S LRSTR=Y,Y=LRLDT D D^LRU S LRLST=Y
"RTN","LRU",113,0)
 Q
"RTN","LRU",114,0)
 ;
"RTN","LRU",115,0)
 ;
"RTN","LRU",116,0)
YN W "? ",$P("YES// ^NO// ","^",%) S LR("%1")=%
"RTN","LRU",117,0)
RX R %Y:$S($D(DTIME):DTIME,1:99999) E  S DTOUT=1,%Y="^" W $C(7)
"RTN","LRU",118,0)
 S:%Y]""!'% %=$A(%Y),%=$S(%=89:1,%=121:1,%=78:2,%=110:2,%=94:-1,1:0)
"RTN","LRU",119,0)
 I %Y="@"!(%Y="S") S %=-1 Q
"RTN","LRU",120,0)
 I '%,%Y]"" W $C(7),!?4,"ANSWER 'YES', 'NO', '^', '@'",!?4,"or press RETURN key to accept default response (if one)" S:$D(LR("%1")) %=LR("%1") W !! G YN
"RTN","LRU",121,0)
 W:$X>73 ! W $P("  (YES)^  (NO)","^",%) K LR("%1")
"RTN","LRU",122,0)
 Q
"RTN","LRU",123,0)
 ;
"RTN","LRU",124,0)
 ;
"RTN","LRU",125,0)
XR Q:'$D(LRSS)  S LRXR="A"_LRSS,LRXREF=LRXR_"A"
"RTN","LRU",126,0)
 Q
"RTN","LRU",127,0)
 ;
"RTN","LRU",128,0)
 ;
"RTN","LRU",129,0)
WAIT W !!,"..."
"RTN","LRU",130,0)
 W $P("HMMM^EXCUSE ME ^SORRY","^",$R(3)+1),", ",$P("THIS MAY TAKE A WHILE^LET ME PUT YOU ON 'HOLD' ^HOLD ON^JUST A MOMENT PLEASE^I'M WORKING AS FAST AS I CAN^LET ME THINK ABOUT THAT ","^",$R(6)+1)_"..."
"RTN","LRU",131,0)
 H 1
"RTN","LRU",132,0)
 Q
"RTN","LRU",133,0)
 ;
"RTN","LRU",134,0)
 ;
"RTN","LRU",135,0)
K K A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,V,W,X,Y,Z
"RTN","LRU",136,0)
 Q
"RTN","LRU",137,0)
 ;
"RTN","LRU",138,0)
 ;
"RTN","LRU",139,0)
V ; Cleanup variables
"RTN","LRU",140,0)
 ;
"RTN","LRU",141,0)
 ; Task background job to create messages
"RTN","LRU",142,0)
 I $D(^LAHM(62.49,"AC")) D
"RTN","LRU",143,0)
 . N ZTIO,ZTRTN,ZTSAVE,ZTDTH,ZTDESC,ZTSK
"RTN","LRU",144,0)
 . S ZTIO="",ZTRTN="ORU^LA7VMSG",ZTDTH=$H,ZTDESC="Send Lab LEDI HL7 Result Message to collecting site"
"RTN","LRU",145,0)
 . D ^%ZTLOAD
"RTN","LRU",146,0)
 ;
"RTN","LRU",147,0)
 D K
"RTN","LRU",148,0)
 K %,%DT,%X,%Y,A,AGE,DO,D1,DA,DE,DFN,DG,DI,DIC,DIE,DIR,DIRUT
"RTN","LRU",149,0)
 K DIWF,DIWL,DLAYGO,DOB,DR,DTOUT,DX,LR,LRA,LRAA,LRABO,LRABV
"RTN","LRU",150,0)
 K LRAC,LRAD,LRADM,LRADX,LRAN,LRAP,LRAPX,LRAU,LRAWRD,LRAX,LRB,LRBL
"RTN","LRU",151,0)
 K LRBLT,LRC,LRCAP,LRCAPA,LRCAPLOC,LRCPT,LRCS,LRD,LRDATA
"RTN","LRU",152,0)
 K LRDATE,LRDFN,LRDPAF,LRDPF,LRDTI,LRE,LREND,LREP,LREXP
"RTN","LRU",153,0)
 K LRF,LRFLN,LRFNAM,LRFND,LRG,LRH,LRI,LRIDT,LRIFN,LRJ
"RTN","LRU",154,0)
 K LRK,LRL,LRLDT,LRLIDT,LRLLOC,LRLOKVAR,LRLST,LRM
"RTN","LRU",155,0)
 K LRMD,LRN,LRND,LRNO,LRNOP,LRO,LRODT,LROLLOC,LROPT,LRORU3
"RTN","LRU",156,0)
 K LRP,LRPABO,LRPF,LRPFN,LRPMOD,LRPNM,LRPPT,LRPRAC
"RTN","LRU",157,0)
 K LRPRH,LRPTF,LRQ,LRQA,LRR,LRRB,LRRC,LRRMD,LRS,LRSA,LRSAV
"RTN","LRU",158,0)
 K LRSD,LRSDT,LRSEL,LRSET,LRSF,LRSIT,LRSN,LRSOP,LRSS,LRST
"RTN","LRU",159,0)
 K LRSTR,LRSVC,LRT,LRTK,LRTOD,LRTREA,LRTS,LRU,LRV,LRW
"RTN","LRU",160,0)
 K LRWARD,LRWD,LRWHN,LRWHO,LRWRD,LRWW,LRX,LRXR,LRXREF
"RTN","LRU",161,0)
 K LRY,LRZ,PNM,POP,SEX,SSN,VA,VADM,VAIN
"RTN","LRU",162,0)
 K ZTDESC,ZTDTH,ZTIO,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","LRU",163,0)
 K ^UTILITY($J),^TMP($J),^TMP("LRBL",$J),^TMP("LR",$J)
"RTN","LRU",164,0)
 Q
"RTN","LRU",165,0)
 ;
"RTN","LRU",166,0)
 ;
"RTN","LRU",167,0)
LRAD ;
"RTN","LRU",168,0)
 S X=$P(^LRO(68,LRAA,0),"^",3),(Y,LRAD)=$S(X="Y":$E(Y,1,3)_"0000","M"[X:$E(Y,1,5)_"00","Q"[X:$E(Y,1,3)_"0000"+(($E(Y,4,5)-1)\3*300+100),1:Y)
"RTN","LRU",169,0)
 D D^LRU S LRH(0)=Y
"RTN","LRU",170,0)
 Q
"RTN","LRU",171,0)
 ;
"RTN","LRU",172,0)
 ;
"RTN","LRU",173,0)
H W !,$C(7),"TO SORT IN SEQUENCE, STARTING FROM A CERTAIN NAME,",!?7,"TYPE THAT NAME"
"RTN","LRU",174,0)
 Q
"RTN","LRU",175,0)
 ;
"RTN","LRU",176,0)
 ;
"RTN","LRU",177,0)
H1 W !,$C(7),"TO SORT ONLY UP TO A CERTAIN NAME,",!?7,"TYPE THAT NAME"
"RTN","LRU",178,0)
 Q
"RTN","LRU",179,0)
 ;
"RTN","LRU",180,0)
 ;
"RTN","LRU",181,0)
L ;
"RTN","LRU",182,0)
 D:'$D(IOM) I
"RTN","LRU",183,0)
 K LR("%")
"RTN","LRU",184,0)
 S LR("%")="-",$P(LR("%"),"-",IOM-1)="-"
"RTN","LRU",185,0)
 Q
"RTN","LRU",186,0)
 ;
"RTN","LRU",187,0)
 ;
"RTN","LRU",188,0)
L1 ;
"RTN","LRU",189,0)
 D:'$D(IOM) I
"RTN","LRU",190,0)
 K LR("%1")
"RTN","LRU",191,0)
 S LR("%1")="=",$P(LR("%1"),"=",IOM-1)="="
"RTN","LRU",192,0)
 Q
"RTN","LRU",193,0)
 ;
"RTN","LRU",194,0)
 ;
"RTN","LRU",195,0)
I ;
"RTN","LRU",196,0)
 S IOP="HOME" D ^%ZIS
"RTN","LRU",197,0)
 Q
"RTN","LRU",198,0)
 ;
"RTN","LRU",199,0)
 ;
"RTN","LRU",200,0)
S S (LR("Q"),LRQ)=0,LRQ(1)=$$INS
"RTN","LRU",201,0)
 Q
"RTN","LRU",202,0)
 ;
"RTN","LRU",203,0)
 ;
"RTN","LRU",204,0)
INS() ;Set institution Name from ^XMB
"RTN","LRU",205,0)
 N Y
"RTN","LRU",206,0)
 S Y=$P($G(^DIC(4,+$P($G(^XMB(1,1,"XUS")),U,17),0)),U)
"RTN","LRU",207,0)
 Q Y
"RTN","LRU",208,0)
 ;
"RTN","LRU",209,0)
 ;
"RTN","LRU",210,0)
INSN() ;Set primary institution number from ^XMB
"RTN","LRU",211,0)
 N Y
"RTN","LRU",212,0)
 S Y=+$P($G(^XMB(1,1,"XUS")),U,17)
"RTN","LRU",213,0)
 Q Y
"RTN","LRU",214,0)
 ;
"RTN","LRU",215,0)
 ;
"RTN","LRU",216,0)
DUZ2 ;Allow user to change Division [DUZ(2)] value
"RTN","LRU",217,0)
 N A
"RTN","LRU",218,0)
 S A(1)="*** THIS OPTION IS NO LONGER AVAILABLE ***",A(1,"F")="!?18"
"RTN","LRU",219,0)
 S A(2)="Use Kernel option 'Change my Division' [XUSER DIV CHG]",A(2,"F")="!?18"
"RTN","LRU",220,0)
 D EN^DDIOL(.A)
"RTN","LRU",221,0)
 Q
"RTN","LRUCSR")
0^199^B10392354
"RTN","LRUCSR",1,0)
LRUCSR ;DALOI/JMC - Code System Reference Utility ;11/24/09  15:21
"RTN","LRUCSR",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUCSR",3,0)
 ;
"RTN","LRUCSR",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRUCSR",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRUCSR",6,0)
 ;
"RTN","LRUCSR",7,0)
 Q
"RTN","LRUCSR",8,0)
 ;
"RTN","LRUCSR",9,0)
 ;
"RTN","LRUCSR",10,0)
SETREF(LRDFN,LRREF,LRDATA,LRACTION) ; Set reference to code system in file #63
"RTN","LRUCSR",11,0)
 ; Call with LRDFN = File #63 IEN
"RTN","LRUCSR",12,0)
 ;           LRREF = value of #.01 field in format LRDFN,LRSS,LRIDT,0 or other ending reference
"RTN","LRUCSR",13,0)
 ;                   e.g. "123,SP,6919594.8946,0"
"RTN","LRUCSR",14,0)
 ;                   e.g. "123,SP,6919594.8946,1;5" - 5th piece of 1 node
"RTN","LRUCSR",15,0)
 ;                   if reference to other file then use format LRDFN,file #,other ending reference.
"RTN","LRUCSR",16,0)
 ;                   e.g. "123,69,LRODT,LRSN,0"
"RTN","LRUCSR",17,0)
 ;                   e.g. "123,68,LRAA,LRAD,LRAN,0"
"RTN","LRUCSR",18,0)
 ;          LRDATA = array with data to store i.e LRDATA(field #)=value
"RTN","LRUCSR",19,0)
 ;        LRACTION = 1-update if exists otherwise add
"RTN","LRUCSR",20,0)
 ;                   2-always add
"RTN","LRUCSR",21,0)
 ;
"RTN","LRUCSR",22,0)
 N LRROLE,LRCODEID,LRCODESYSTEM
"RTN","LRUCSR",23,0)
 ;
"RTN","LRUCSR",24,0)
 I $G(LRREF)="" Q
"RTN","LRUCSR",25,0)
 ;
"RTN","LRUCSR",26,0)
 ; Determine role for this code.
"RTN","LRUCSR",27,0)
 S LRROLE=$G(LRDATA(.02))
"RTN","LRUCSR",28,0)
 I LRROLE<1 Q
"RTN","LRUCSR",29,0)
 ;
"RTN","LRUCSR",30,0)
 ; Determine what code system this code id is from.
"RTN","LRUCSR",31,0)
 S LRCODESYSTEM=$G(LRDATA(.04))
"RTN","LRUCSR",32,0)
 I LRCODESYSTEM="" Q
"RTN","LRUCSR",33,0)
 ;
"RTN","LRUCSR",34,0)
 S LRACTION=$G(LRACTION)
"RTN","LRUCSR",35,0)
 I LRACTION<1 S LRACTION=1
"RTN","LRUCSR",36,0)
 ;
"RTN","LRUCSR",37,0)
 S LRCODEID=$G(LRDATA(.03))
"RTN","LRUCSR",38,0)
 I LRCODEID="" Q
"RTN","LRUCSR",39,0)
 ;
"RTN","LRUCSR",40,0)
 ; Update existing entry for this role and code system
"RTN","LRUCSR",41,0)
 I LRACTION=1,$D(^LR(LRDFN,"CSR","AE",LRREF,LRROLE,LRCODESYSTEM)) D UEE Q
"RTN","LRUCSR",42,0)
 ;
"RTN","LRUCSR",43,0)
 ; Create new entry
"RTN","LRUCSR",44,0)
 D CNE
"RTN","LRUCSR",45,0)
 ;
"RTN","LRUCSR",46,0)
 Q
"RTN","LRUCSR",47,0)
 ;
"RTN","LRUCSR",48,0)
 ;
"RTN","LRUCSR",49,0)
UEE ; Update existing entry
"RTN","LRUCSR",50,0)
 ;
"RTN","LRUCSR",51,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRUCSR",52,0)
 ;
"RTN","LRUCSR",53,0)
 ;ZEXCEPT: LRCODEID,LRCODESYSTEM,LRDATA,LRDFN,LRREF,LRROLE
"RTN","LRUCSR",54,0)
 ;
"RTN","LRUCSR",55,0)
 S LRIEN=$O(^LR(LRDFN,"CSR","AE",LRREF,LRROLE,LRCODESYSTEM,LRCODEID,0))
"RTN","LRUCSR",56,0)
 ;
"RTN","LRUCSR",57,0)
 I LRDATA(.01)'="",LRDATA(.01)'=LRREF S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.01)=LRDATA(.01)
"RTN","LRUCSR",58,0)
 ;
"RTN","LRUCSR",59,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.02)=LRDATA(.02)
"RTN","LRUCSR",60,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.03)=LRDATA(.03)
"RTN","LRUCSR",61,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.035)=$G(LRDATA(.035))
"RTN","LRUCSR",62,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.04)=LRDATA(.04)
"RTN","LRUCSR",63,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.05)=$G(LRDATA(.05))
"RTN","LRUCSR",64,0)
 S LRFDA(1,63.00014,LRIEN_","_LRDFN_",",.06)=$G(LRDATA(.06))
"RTN","LRUCSR",65,0)
 ;
"RTN","LRUCSR",66,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRUCSR",67,0)
 Q
"RTN","LRUCSR",68,0)
 ;
"RTN","LRUCSR",69,0)
 ;
"RTN","LRUCSR",70,0)
CNE ; Create new entry
"RTN","LRUCSR",71,0)
 ;
"RTN","LRUCSR",72,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRUCSR",73,0)
 ;
"RTN","LRUCSR",74,0)
 ;ZEXCEPT: LRDATA,LRDFN
"RTN","LRUCSR",75,0)
 ;
"RTN","LRUCSR",76,0)
 S LRFDA(1,63.00014,"+1,"_LRDFN_",",.01)=LRDATA(.01)
"RTN","LRUCSR",77,0)
 S LRFDA(1,63.00014,"+1,"_LRDFN_",",.02)=LRDATA(.02)
"RTN","LRUCSR",78,0)
 S LRFDA(1,63.00014,"+1,"_LRDFN_",",.03)=LRDATA(.03)
"RTN","LRUCSR",79,0)
 I $G(LRDATA(.035))'="" S LRFDA(1,63.00014,"+1,"_LRDFN_",",.035)=LRDATA(.035)
"RTN","LRUCSR",80,0)
 S LRFDA(1,63.00014,"+1,"_LRDFN_",",.04)=LRDATA(.04)
"RTN","LRUCSR",81,0)
 I $G(LRDATA(.05))'="" S LRFDA(1,63.00014,"+1,"_LRDFN_",",.05)=LRDATA(.05)
"RTN","LRUCSR",82,0)
 I $G(LRDATA(.06))'="" S LRFDA(1,63.00014,"+1,"_LRDFN_",",.06)=LRDATA(.06)
"RTN","LRUCSR",83,0)
 ;
"RTN","LRUCSR",84,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LRDIE(1)")
"RTN","LRUCSR",85,0)
 Q
"RTN","LRUCSR",86,0)
 ;
"RTN","LRUCSR",87,0)
 ;
"RTN","LRUCSR",88,0)
DEE(LRIENS) ; Delete existing entry
"RTN","LRUCSR",89,0)
 ; Call with LRIENS = File #63 code system reference IENS
"RTN","LRUCSR",90,0)
 ;
"RTN","LRUCSR",91,0)
 N LRDIE,LRFDA
"RTN","LRUCSR",92,0)
 ;
"RTN","LRUCSR",93,0)
 S LRFDA(1,63.00014,LRIENS,.01)="@"
"RTN","LRUCSR",94,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRUCSR",95,0)
 Q
"RTN","LRUCSR",96,0)
 ;
"RTN","LRUCSR",97,0)
 ;
"RTN","LRUCSR",98,0)
GETDATA(LRDATA,LRIENS) ; Retrieve information for a specific entry
"RTN","LRUCSR",99,0)
 ; Call with LRDATA = array to return data, pass by reference
"RTN","LRUCSR",100,0)
 ;          LRRIENS = File #63 code system reference IENS
"RTN","LRUCSR",101,0)
 ;
"RTN","LRUCSR",102,0)
 ; Returns data in standard FileMan DBS structure - See FileMan DBS documentation
"RTN","LRUCSR",103,0)
 ;
"RTN","LRUCSR",104,0)
 D GETS^DIQ(63.00014,LRIENS,"**","I","LRDATA")
"RTN","LRUCSR",105,0)
 Q
"RTN","LRUCSR",106,0)
 ;
"RTN","LRUCSR",107,0)
 ;
"RTN","LRUCSR",108,0)
GETALL(LRDATA,LRDFN,LRREF,LRROLE) ; Retrieve information for all entries related to a specific reference/role
"RTN","LRUCSR",109,0)
 ; Call with LRDATA = array to return data, pass by reference
"RTN","LRUCSR",110,0)
 ;            LRDFN = File #63 IEN
"RTN","LRUCSR",111,0)
 ;            LRREF = value of #.01 field in format LRDFN,LRSS,LRIDT,0 or other ending reference
"RTN","LRUCSR",112,0)
 ;                    e.g. "123,SP,6919594.8946,0"
"RTN","LRUCSR",113,0)
 ;                    if reference to other file then use format LRDFN,file #,other ending reference.
"RTN","LRUCSR",114,0)
 ;                    e.g. "123,69,LRODT,LRSN,0"
"RTN","LRUCSR",115,0)
 ;                    e.g. "123,68,LRAA,LRAD,LRAN,0"
"RTN","LRUCSR",116,0)
 ;           LRROLE = code system role
"RTN","LRUCSR",117,0)
 ;
"RTN","LRUCSR",118,0)
 ; Returns data in standard FileMan DBS structure - See FileMan DBS documentation
"RTN","LRUCSR",119,0)
 ;
"RTN","LRUCSR",120,0)
 N LRIEN,LRIENS
"RTN","LRUCSR",121,0)
 ;
"RTN","LRUCSR",122,0)
 S LRIEN=0
"RTN","LRUCSR",123,0)
 F  S LRIEN=$O(^LR(LRDFN,"CSR","AD",LRREF,LRROLE,LRIEN)) Q:'LRIEN  D
"RTN","LRUCSR",124,0)
 . S LRIENS=LRIEN_","_LRDFN_","
"RTN","LRUCSR",125,0)
 . D GETS^DIQ(63.00014,LRIENS,"**","I","LRDATA")
"RTN","LRUCSR",126,0)
 Q
"RTN","LRUDEL")
0^202^B17685487
"RTN","LRUDEL",1,0)
LRUDEL ;DALOI/REG/CYM - DELETE AN AP ACCESSION NUMBER ;05/30/12  17:05
"RTN","LRUDEL",2,0)
 ;;5.2;LAB SERVICE;**1,72,121,201,350**;Sep 27, 1994;Build 230
"RTN","LRUDEL",3,0)
 ;
"RTN","LRUDEL",4,0)
 D END,^LRAP G:'$D(Y) END D XR^LRU
"RTN","LRUDEL",5,0)
 W !?22,"Delete an Accession Number",!!
"RTN","LRUDEL",6,0)
 ;
"RTN","LRUDEL",7,0)
D S %DT("A")="Accession number date: ",%DT="AQE" D ^%DT K %DT Q:Y<1  S (Y,LRAD)=$E(Y,1,3)_"0000" D DATE S LRH(0)=Y
"RTN","LRUDEL",8,0)
 ;
"RTN","LRUDEL",9,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) W $C(7),!!,"No accession numbers for ",LRH(0),! G D
"RTN","LRUDEL",10,0)
 S H(2)=$E(LRAD,1,3)
"RTN","LRUDEL",11,0)
N1 K LRNO
"RTN","LRUDEL",12,0)
 R !!,"Select Accession # : ",LRAN:DTIME Q:LRAN=""!(LRAN["^")
"RTN","LRUDEL",13,0)
 D REST
"RTN","LRUDEL",14,0)
 L -^LRO(69.2,LRAA)
"RTN","LRUDEL",15,0)
 I $G(LRDFN),$G(LRSS)'="" L -^LR(LRDFN,LRSS)
"RTN","LRUDEL",16,0)
 G N1
"RTN","LRUDEL",17,0)
 ;
"RTN","LRUDEL",18,0)
 ;
"RTN","LRUDEL",19,0)
REST ;
"RTN","LRUDEL",20,0)
 ;
"RTN","LRUDEL",21,0)
 N LRDIV
"RTN","LRUDEL",22,0)
 ;
"RTN","LRUDEL",23,0)
 I LRAN'?1N.N W $C(7),!!,"Enter NUMBERS only" Q
"RTN","LRUDEL",24,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W $C(7),!!,"Accession number ",LRAN," for ",LRH(0)," not in ACCESSION file",!! Q
"RTN","LRUDEL",25,0)
 ;
"RTN","LRUDEL",26,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):DILOCKTM
"RTN","LRUDEL",27,0)
 I '$T W !!?10,$C(7),"Someone else is editing this entry ",! Q
"RTN","LRUDEL",28,0)
 ;
"RTN","LRUDEL",29,0)
 L +^LRO(69.2,LRAA):DILOCKTM
"RTN","LRUDEL",30,0)
 I '$T W !!?10,$C(7),"Someone else is editing this entry ",! Q
"RTN","LRUDEL",31,0)
 ;
"RTN","LRUDEL",32,0)
 S LRND=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRDFN=+LRND
"RTN","LRUDEL",33,0)
 S LRDIV=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.4)),U,1)
"RTN","LRUDEL",34,0)
 I '$D(^LR(LRDFN,0)) D BAD Q
"RTN","LRUDEL",35,0)
 ;
"RTN","LRUDEL",36,0)
 S Y=^LR(LRDFN,0),LRPFN=$P(Y,U,2),LRFNAM=$P(^DIC(LRPFN,0),U),LRPF=^(0,"GL"),Y=$P(Y,U,3),LRP=@(LRPF_Y_",0)")
"RTN","LRUDEL",37,0)
 W !,$P(LRP,U)," ID: ",$P(LRP,U,9) S Y=$P(LRP,U,3) D DATE W:Y'[1700 " DOB: ",Y
"RTN","LRUDEL",38,0)
 W !!,"ACC # ",LRAN
"RTN","LRUDEL",39,0)
 ;
"RTN","LRUDEL",40,0)
 I LRSS="AU" D  Q
"RTN","LRUDEL",41,0)
 . S LRRC=$P($G(^LR(LRDFN,"AU")),U)
"RTN","LRUDEL",42,0)
 . S Y=$$GET1^DIQ(63,LRDFN_",",12) ;Date of Death
"RTN","LRUDEL",43,0)
 . D DEL^LRAUAW
"RTN","LRUDEL",44,0)
 ;
"RTN","LRUDEL",45,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) D
"RTN","LRUDEL",46,0)
 . S LRI=$O(^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,0))
"RTN","LRUDEL",47,0)
 . I LRI S LRSD=$P($G(^LR(LRDFN,LRSS,LRI,0)),U,1)
"RTN","LRUDEL",48,0)
 ;
"RTN","LRUDEL",49,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) D
"RTN","LRUDEL",50,0)
 . S X=^LRO(68,LRAA,1,LRAD,1,LRAN,3)
"RTN","LRUDEL",51,0)
 . S LRSD=+X
"RTN","LRUDEL",52,0)
 . S LRI=$P(X,"^",5)
"RTN","LRUDEL",53,0)
 . I 'LRI S LRI=$O(^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,0))
"RTN","LRUDEL",54,0)
 ;
"RTN","LRUDEL",55,0)
 I '$G(LRI) D  Q  ;No data in #63 for this accession; only delete from #68
"RTN","LRUDEL",56,0)
 . W "  OK to DELETE "
"RTN","LRUDEL",57,0)
 . S %=2 D YN^LRU
"RTN","LRUDEL",58,0)
 . I %'=1 W $C(7),!?4,"NOT DELETED",!! Q
"RTN","LRUDEL",59,0)
 . K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LRO(68,LRAA,1,"AC",LRDIV,LRAD,LRAN)
"RTN","LRUDEL",60,0)
 . D T
"RTN","LRUDEL",61,0)
 . W !,LRAN," Deleted"
"RTN","LRUDEL",62,0)
  ;
"RTN","LRUDEL",63,0)
 S X=$G(^LR(LRDFN,LRSS,LRI,0))
"RTN","LRUDEL",64,0)
 S LRRC=$P(X,U,10)
"RTN","LRUDEL",65,0)
 I $P(X,"^",3)!($P(X,"^",11))!($P(X,"^",15)) W $C(7),!,"Report completed &/or released, deletion not allowed." Q
"RTN","LRUDEL",66,0)
 ;
"RTN","LRUDEL",67,0)
 L +^LR(LRDFN,LRSS,LRI):DILOCKTM
"RTN","LRUDEL",68,0)
 I '$T W !!?10,"Someone else is editing this entry ",!,$C(7) Q
"RTN","LRUDEL",69,0)
 ;
"RTN","LRUDEL",70,0)
 S Y=LRRC
"RTN","LRUDEL",71,0)
 D DATE
"RTN","LRUDEL",72,0)
 W "  DATE RECEIVED: ",Y,"  OK to DELETE "
"RTN","LRUDEL",73,0)
 S %=2 D YN^LRU
"RTN","LRUDEL",74,0)
 I %'=1 W $C(7),!?4,"NOT DELETED",!! Q
"RTN","LRUDEL",75,0)
 ;
"RTN","LRUDEL",76,0)
 D ACC^LR7OB1(LRAA,LRAD,LRAN,"OC") ; Cancel order
"RTN","LRUDEL",77,0)
 ;
"RTN","LRUDEL",78,0)
 I $D(^LR(LRDFN,LRSS,LRI)) D
"RTN","LRUDEL",79,0)
 . K ^LR(LRDFN,LRSS,LRI)
"RTN","LRUDEL",80,0)
 . I $D(^LR(LRDFN,LRSS,0)) S X=^LR(LRDFN,LRSS,0),X(1)=$O(^(0)),X(2)=$P(X,"^",4)-1,^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_X(2)
"RTN","LRUDEL",81,0)
 ;
"RTN","LRUDEL",82,0)
 K:LRRC ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRUDEL",83,0)
 K ^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,LRI)
"RTN","LRUDEL",84,0)
 D K
"RTN","LRUDEL",85,0)
 K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LRO(68,LRAA,1,"AC",LRDIV,LRAD,LRAN)
"RTN","LRUDEL",86,0)
 K:LRRC ^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)
"RTN","LRUDEL",87,0)
 ;
"RTN","LRUDEL",88,0)
 L +^LRO(68,LRAA,1,LRAD,1,0):DILOCKTM
"RTN","LRUDEL",89,0)
 I $T D
"RTN","LRUDEL",90,0)
 . S X=^LRO(68,LRAA,1,LRAD,1,0),X(1)=$O(^(0)),X(2)=$P(X,"^",4)-1
"RTN","LRUDEL",91,0)
 . S:X(2)<1 X(2)=0 S ^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_X(2)
"RTN","LRUDEL",92,0)
 . L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRUDEL",93,0)
 ;
"RTN","LRUDEL",94,0)
 D T
"RTN","LRUDEL",95,0)
 Q
"RTN","LRUDEL",96,0)
 ;
"RTN","LRUDEL",97,0)
 ;
"RTN","LRUDEL",98,0)
BAD W $C(7),!!,"Entry not in file",!!
"RTN","LRUDEL",99,0)
 Q
"RTN","LRUDEL",100,0)
 ;
"RTN","LRUDEL",101,0)
 ;
"RTN","LRUDEL",102,0)
T ;
"RTN","LRUDEL",103,0)
 N A
"RTN","LRUDEL",104,0)
 F A=1,2,3,4 I $D(^LRO(69.2,LRAA,A,LRAN)) D
"RTN","LRUDEL",105,0)
 . K ^LRO(69.2,LRAA,A,LRAN)
"RTN","LRUDEL",106,0)
 . S X(1)=$O(^LRO(69.2,LRAA,A,0))
"RTN","LRUDEL",107,0)
 . S:'X(1) X(1)=0
"RTN","LRUDEL",108,0)
 . I $D(^LRO(69.2,LRAA,A,0)) S X=^(0),^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_$S(X(1)=0:X(1),1:($P(X,"^",4)-1))
"RTN","LRUDEL",109,0)
 Q
"RTN","LRUDEL",110,0)
 ;
"RTN","LRUDEL",111,0)
 ;
"RTN","LRUDEL",112,0)
DATE ; Returns the date in eye-readable month format
"RTN","LRUDEL",113,0)
 S Y=$TR($$FMTE^XLFDT(Y,"M"),"@"," ")
"RTN","LRUDEL",114,0)
 Q
"RTN","LRUDEL",115,0)
 ;
"RTN","LRUDEL",116,0)
 ;
"RTN","LRUDEL",117,0)
K ; also from LRAPED
"RTN","LRUDEL",118,0)
 N A
"RTN","LRUDEL",119,0)
 S A=0
"RTN","LRUDEL",120,0)
 F  S A=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,A)) Q:'A  K ^LRO(68,"AA",LRAA_"|"_LRAD_"|"_LRAN_"|"_A)
"RTN","LRUDEL",121,0)
 Q
"RTN","LRUDEL",122,0)
 ;
"RTN","LRUDEL",123,0)
 ;
"RTN","LRUDEL",124,0)
END D V^LRU
"RTN","LRUDEL",125,0)
 Q
"RTN","LRUEPR")
0^181^B9595740
"RTN","LRUEPR",1,0)
LRUEPR ;DALOI/JMC - External Package Reference Utility ;10/18/10  16:43
"RTN","LRUEPR",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUEPR",3,0)
 ;
"RTN","LRUEPR",4,0)
 ; Reference to SURGERY file (#130) supported by ICR #5268
"RTN","LRUEPR",5,0)
 ;
"RTN","LRUEPR",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRUEPR",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRUEPR",8,0)
 ;
"RTN","LRUEPR",9,0)
 Q
"RTN","LRUEPR",10,0)
 ;
"RTN","LRUEPR",11,0)
 ;
"RTN","LRUEPR",12,0)
SETREF(LRDFN,LRREF,LRDATA,LRACTION) ; Set reference to external package in file #63
"RTN","LRUEPR",13,0)
 ; Call with LRDFN = File #63 IEN
"RTN","LRUEPR",14,0)
 ;           LRREF = value of #.01 field in format LRDFN,LRSS,LRIDT,0 or other ending reference
"RTN","LRUEPR",15,0)
 ;                   e.g. "123,SP,6919594.8946,0"
"RTN","LRUEPR",16,0)
 ;                   if reference to other file then use format LRDFN,file #,other ending reference.
"RTN","LRUEPR",17,0)
 ;                   e.g. "123,69,LRODT,LRSN,0"
"RTN","LRUEPR",18,0)
 ;                   e.g. "123,68,LRAA,LRAD,LRAN,0"
"RTN","LRUEPR",19,0)
 ;          LRDATA = array with data to store
"RTN","LRUEPR",20,0)
 ;        LRACTION = 1-update if exists otherwise add
"RTN","LRUEPR",21,0)
 ;                   2-always add
"RTN","LRUEPR",22,0)
 ;
"RTN","LRUEPR",23,0)
 N LRTYPE
"RTN","LRUEPR",24,0)
 ;
"RTN","LRUEPR",25,0)
 I $G(LRREF)="" Q
"RTN","LRUEPR",26,0)
 ;
"RTN","LRUEPR",27,0)
 S LRTYPE=$G(LRDATA(.02))
"RTN","LRUEPR",28,0)
 I LRTYPE<1 Q
"RTN","LRUEPR",29,0)
 ;
"RTN","LRUEPR",30,0)
 S LRACTION=$G(LRACTION)
"RTN","LRUEPR",31,0)
 I LRACTION<1 S LRACTION=1
"RTN","LRUEPR",32,0)
 ;
"RTN","LRUEPR",33,0)
 ; Update existing entry for this type
"RTN","LRUEPR",34,0)
 I LRACTION=1,$D(^LR(LRDFN,"EPR","AD",LRREF,LRTYPE)) D UEE Q
"RTN","LRUEPR",35,0)
 ;
"RTN","LRUEPR",36,0)
 ; Create new entry
"RTN","LRUEPR",37,0)
 D CNE
"RTN","LRUEPR",38,0)
 ;
"RTN","LRUEPR",39,0)
 Q
"RTN","LRUEPR",40,0)
 ;
"RTN","LRUEPR",41,0)
 ;
"RTN","LRUEPR",42,0)
UEE ; Update existing entry
"RTN","LRUEPR",43,0)
 ;
"RTN","LRUEPR",44,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRUEPR",45,0)
 ;
"RTN","LRUEPR",46,0)
 ;ZEXCEPT: LRDATA,LRDFN,LRREF,LRTYPE
"RTN","LRUEPR",47,0)
 ;
"RTN","LRUEPR",48,0)
 S LRIEN=$O(^LR(LRDFN,"EPR","AD",LRREF,LRTYPE,0))
"RTN","LRUEPR",49,0)
 I LRDATA(.01)'="",LRDATA(.01)'=LRREF S LRFDA(1,63.00013,LRIEN_","_LRDFN_",",.01)=LRDATA(.01)
"RTN","LRUEPR",50,0)
 S LRFDA(1,63.00013,LRIEN_","_LRDFN_",",.02)=LRDATA(.02)
"RTN","LRUEPR",51,0)
 I $G(LRDATA(.03)) S LRFDA(1,63.00013,LRIEN_","_LRDFN_",",.03)=LRDATA(.03)
"RTN","LRUEPR",52,0)
 I $G(LRDATA(1))'="" S LRFDA(1,63.00013,LRIEN_","_LRDFN_",",1)=LRDATA(1)
"RTN","LRUEPR",53,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRUEPR",54,0)
 Q
"RTN","LRUEPR",55,0)
 ;
"RTN","LRUEPR",56,0)
 ;
"RTN","LRUEPR",57,0)
CNE ; Create new entry
"RTN","LRUEPR",58,0)
 ;
"RTN","LRUEPR",59,0)
 N LRDIE,LRFDA,LRIEN
"RTN","LRUEPR",60,0)
 ;
"RTN","LRUEPR",61,0)
 ;ZEXCEPT: LRDATA,LRDFN
"RTN","LRUEPR",62,0)
 ;
"RTN","LRUEPR",63,0)
 S LRFDA(1,63.00013,"+1,"_LRDFN_",",.01)=LRDATA(.01)
"RTN","LRUEPR",64,0)
 S LRFDA(1,63.00013,"+1,"_LRDFN_",",.02)=LRDATA(.02)
"RTN","LRUEPR",65,0)
 I $G(LRDATA(.03)) S LRFDA(1,63.00013,"+1,"_LRDFN_",",.03)=LRDATA(.03)
"RTN","LRUEPR",66,0)
 I $G(LRDATA(1))'="" S LRFDA(1,63.00013,"+1,"_LRDFN_",",1)=LRDATA(1)
"RTN","LRUEPR",67,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LRDIE(1)")
"RTN","LRUEPR",68,0)
 Q
"RTN","LRUEPR",69,0)
 ;
"RTN","LRUEPR",70,0)
 ;
"RTN","LRUEPR",71,0)
DEE(LRIENS) ; Delete existing entry
"RTN","LRUEPR",72,0)
 ; Call with LRRIENS = File #63 external package reference IENS
"RTN","LRUEPR",73,0)
 ;
"RTN","LRUEPR",74,0)
 N LRDIE,LRFDA
"RTN","LRUEPR",75,0)
 S LRFDA(1,63.00013,LRIENS,.01)="@"
"RTN","LRUEPR",76,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRUEPR",77,0)
 Q
"RTN","LRUEPR",78,0)
 ;
"RTN","LRUEPR",79,0)
 ;
"RTN","LRUEPR",80,0)
GETDATA(LRDATA,LRIENS) ; Retrieve information for a specific entry
"RTN","LRUEPR",81,0)
 ; Call with LRDATA = array to return data, pass by reference
"RTN","LRUEPR",82,0)
 ;          LRRIENS = File #63 external package reference IENS
"RTN","LRUEPR",83,0)
 ;
"RTN","LRUEPR",84,0)
 D GETS^DIQ(63.00013,LRIENS,"**","I","LRDATA")
"RTN","LRUEPR",85,0)
 Q
"RTN","LRUEPR",86,0)
 ;
"RTN","LRUEPR",87,0)
 ;
"RTN","LRUEPR",88,0)
SRCASE(LRDATA,LRSRTN) ; Retrieve related surgeon/attending for a surgical case
"RTN","LRUEPR",89,0)
 ; Call with LRDATA = array to return data, pass by reference
"RTN","LRUEPR",90,0)
 ;           LRSTRN = ien of case in SURGERY file #130
"RTN","LRUEPR",91,0)
 ;
"RTN","LRUEPR",92,0)
 N LRERR
"RTN","LRUEPR",93,0)
 D GETS^DIQ(130,LRSRTN_",",".14;.164;123;124","I","LRDATA","LRERR")
"RTN","LRUEPR",94,0)
 ;
"RTN","LRUEPR",95,0)
 I $D(LRERR) D
"RTN","LRUEPR",96,0)
 . I $G(LRERR("DIERR",1))=601 S LRDATA("ERR")="601^Related Surgical Case #"_LRSRTN_" has been removed from SURGERY package"
"RTN","LRUEPR",97,0)
 . E  S LRDATA("ERR")=LRERR("DIERR",1)_"^"_LRERR("DIERR",1,"TEXT",1)
"RTN","LRUEPR",98,0)
 ;
"RTN","LRUEPR",99,0)
 Q
"RTN","LRUEPR",100,0)
 ;
"RTN","LRUEPR",101,0)
 ;
"RTN","LRUEPR",102,0)
SRCASERR(LRREF,LRCDATA,LRERRMSG) ; Log/update surgical case ref when error occurs on retrieval.
"RTN","LRUEPR",103,0)
 ; Call with LRREF = value of #.01 field in format LRDFN,LRSS,LRIDT,0 or other ending reference
"RTN","LRUEPR",104,0)
 ;                   e.g. "123,SP,6919594.8946,0"
"RTN","LRUEPR",105,0)
 ;
"RTN","LRUEPR",106,0)
 ;         LRCDATA = current data on file
"RTN","LRUEPR",107,0)
 ;        LRERRMSG = error message to add to current data
"RTN","LRUEPR",108,0)
 ;
"RTN","LRUEPR",109,0)
 N LRDATA
"RTN","LRUEPR",110,0)
 ;
"RTN","LRUEPR",111,0)
 ; If current data already contains error message then quit.
"RTN","LRUEPR",112,0)
 I LRCDATA[LRERRMSG Q
"RTN","LRUEPR",113,0)
 ;
"RTN","LRUEPR",114,0)
 S LRDATA(.01)=LRREF
"RTN","LRUEPR",115,0)
 S LRDATA(.02)=1
"RTN","LRUEPR",116,0)
 S LRDATA(1)=LRCDATA_";"_LRERRMSG
"RTN","LRUEPR",117,0)
 D SETREF^LRUEPR($P(LRREF,","),LRREF,.LRDATA,1)
"RTN","LRUEPR",118,0)
 ;
"RTN","LRUEPR",119,0)
 Q
"RTN","LRUTELL")
0^201^B1166200
"RTN","LRUTELL",1,0)
LRUTELL ;DALOI/REG - FIND EXISTING ACCESSION NUMBER ;04/23/10  12:55
"RTN","LRUTELL",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUTELL",3,0)
 ;
"RTN","LRUTELL",4,0)
 N LRSPEC,Y
"RTN","LRUTELL",5,0)
 ;
"RTN","LRUTELL",6,0)
 S Y=+^LRO(68,LRAA,1,LRAD,1,X,0),LRSPEC=$S($D(^(5,1,0)):+^(0),1:LRU)
"RTN","LRUTELL",7,0)
 I 'Y K ^LRO(68,LRAA,LRAD,1,X),Y Q
"RTN","LRUTELL",8,0)
 ;
"RTN","LRUTELL",9,0)
 S Y(1)=$$GET1^DID($P(^LR(Y,0),"^",2),"","","GLOBAL NAME")
"RTN","LRUTELL",10,0)
 S Y=$P(^LR(Y,0),"^",3)
"RTN","LRUTELL",11,0)
 W $C(7),!!,"Sorry, Accession # ",X," assigned to ",$P(@(Y(1)_Y_",0)"),"^")
"RTN","LRUTELL",12,0)
 ;
"RTN","LRUTELL",13,0)
 I "CYEMSPAU"'[LRSS W " Specimen type: ",$S(LRSPEC'=0:$P(^LAB(61,LRSPEC,0),"^"),1:"NOT ENTERED")
"RTN","LRUTELL",14,0)
 ;
"RTN","LRUTELL",15,0)
 W !,"Specimen(s) Taken "
"RTN","LRUTELL",16,0)
 S Y=$P(^LRO(68,LRAA,1,LRAD,1,X,0),U,3) D D^LRU
"RTN","LRUTELL",17,0)
 W Y,!!
"RTN","LRUTELL",18,0)
 Q
"RTN","LRUTIL")
0^74^B42182036
"RTN","LRUTIL",1,0)
LRUTIL ;DALOI/JDB -- Lab Utilities ;Aug 15, 2008
"RTN","LRUTIL",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUTIL",3,0)
 ;
"RTN","LRUTIL",4,0)
 ;File ^XUSEC/10076
"RTN","LRUTIL",5,0)
 Q
"RTN","LRUTIL",6,0)
 ;
"RTN","LRUTIL",7,0)
SELECT(DIC,OUT,FNAME,SELS,SORT,NOALL,MODE) ;
"RTN","LRUTIL",8,0)
 ; convenience method
"RTN","LRUTIL",9,0)
 ; Package replacement for FIRST^VAUTOMA
"RTN","LRUTIL",10,0)
 ; Allows user to select multiple entries from a file.
"RTN","LRUTIL",11,0)
 Q $$SELECT^LRUTIL1(.DIC,.OUT,FNAME,SELS,SORT,NOALL,MODE)
"RTN","LRUTIL",12,0)
 ;
"RTN","LRUTIL",13,0)
 ;
"RTN","LRUTIL",14,0)
GETLOCK(ZZZZTARG,ZZZZSECS,ZZZZSHOW) ;
"RTN","LRUTIL",15,0)
 ; Acquire a Lock on the specified resource.
"RTN","LRUTIL",16,0)
 ; Note: "ZZZ*" variable names used to avoid possible variable
"RTN","LRUTIL",17,0)
 ;  name clashes with @TARG -- "^GBL(1,X)" N X then @TARG would
"RTN","LRUTIL",18,0)
 ;  change the intended resource for lock since X would be different.
"RTN","LRUTIL",19,0)
 ; Inputs
"RTN","LRUTIL",20,0)
 ;   TARG : The Resource to Lock (ie "^GBL(1)")
"RTN","LRUTIL",21,0)
 ;   SECS : Total # of seconds to wait for the lock
"RTN","LRUTIL",22,0)
 ;        :  (Minimum value is 5 seconds)
"RTN","LRUTIL",23,0)
 ;        : Negative value means one solid wait (no breaks)
"RTN","LRUTIL",24,0)
 ;   SHOW : >0:show progress, 0:dont show progress
"RTN","LRUTIL",25,0)
 ;        :    1:dots  2:countdown  3: timeleft+dots
"RTN","LRUTIL",26,0)
 ; Output
"RTN","LRUTIL",27,0)
 ;         1 if lock obtained, 0 if not.
"RTN","LRUTIL",28,0)
 ;         If SHOW>0 API outputs progress info
"RTN","LRUTIL",29,0)
 ;
"RTN","LRUTIL",30,0)
 N ZZZZZZZI,ZZZZLOCK,ZZZTRIES,ZZZZZZTO
"RTN","LRUTIL",31,0)
 S ZZZZLOCK=0
"RTN","LRUTIL",32,0)
 S ZZZZTARG=$G(ZZZZTARG)
"RTN","LRUTIL",33,0)
 S ZZZZSECS=+$G(ZZZZSECS)
"RTN","LRUTIL",34,0)
 S ZZZZSHOW=+$G(ZZZZSHOW)
"RTN","LRUTIL",35,0)
 S ZZZZZZTO=$G(DILOCKTM,5) ;timeout
"RTN","LRUTIL",36,0)
 S:ZZZZZZTO<5 ZZZZZZTO=5
"RTN","LRUTIL",37,0)
 I ZZZZSECS'<0 I ZZZZSECS<5 S ZZZZSECS=5
"RTN","LRUTIL",38,0)
 S ZZZTRIES=ZZZZSECS/ZZZZZZTO
"RTN","LRUTIL",39,0)
 S:ZZZTRIES["." ZZZTRIES=$P(ZZZTRIES,".",1)+1
"RTN","LRUTIL",40,0)
 ;
"RTN","LRUTIL",41,0)
 I ZZZZSECS>0 F ZZZZZZZI=1:1:ZZZTRIES L +(@ZZZZTARG):ZZZZZZTO S:$T ZZZZLOCK=1 Q:ZZZZLOCK  D  ;
"RTN","LRUTIL",42,0)
 . I ZZZTRIES>1 I ZZZZSHOW D  ;
"RTN","LRUTIL",43,0)
 . . Q:$$ISQUIET()
"RTN","LRUTIL",44,0)
 . . I ZZZZSHOW=3 W:ZZZZZZZI=1 " ",ZZZTRIES-1*ZZZZZZTO W "."
"RTN","LRUTIL",45,0)
 . . I ZZZZSHOW=2 W " ",(ZZZTRIES-ZZZZZZZI)*ZZZZZZTO
"RTN","LRUTIL",46,0)
 . . I ZZZZSHOW=1 W "."
"RTN","LRUTIL",47,0)
 ;
"RTN","LRUTIL",48,0)
 I ZZZZSECS<0 D  ;
"RTN","LRUTIL",49,0)
 . S ZZZZSECS=-ZZZZSECS
"RTN","LRUTIL",50,0)
 . S:ZZZZSECS<ZZZZZZTO ZZZZSECS=ZZZZZZTO
"RTN","LRUTIL",51,0)
 . L +(@ZZZZTARG):ZZZZSECS
"RTN","LRUTIL",52,0)
 . S:$T ZZZZLOCK=1
"RTN","LRUTIL",53,0)
 ;
"RTN","LRUTIL",54,0)
 Q ZZZZLOCK
"RTN","LRUTIL",55,0)
 ;
"RTN","LRUTIL",56,0)
 ;
"RTN","LRUTIL",57,0)
QUE(ZTRTN,ZTDESC,ZTSAVE,NOQUE,QUIET) ;
"RTN","LRUTIL",58,0)
 ; Prompts for Device and allows queueing a routine
"RTN","LRUTIL",59,0)
 ; Inputs
"RTN","LRUTIL",60,0)
 ;   ZTRTN :
"RTN","LRUTIL",61,0)
 ;  ZTDESC :
"RTN","LRUTIL",62,0)
 ;  ZTSAVE : <byref>
"RTN","LRUTIL",63,0)
 ;   NOQUE : 1=no queue  0=allow queue
"RTN","LRUTIL",64,0)
 ; Outputs
"RTN","LRUTIL",65,0)
 ; Returns -1 if POP=1, 0 if not queued, or the QUEUED task #
"RTN","LRUTIL",66,0)
 N %ZIS,POP,QUEUED,Y,X,%X,%Y
"RTN","LRUTIL",67,0)
 ; New variables for protection from %ZIS and DIR collision
"RTN","LRUTIL",68,0)
 N %,%A,%B,%B1,%B2,%B3,%BA,%C,%E,%G,%H,%I,%J,%N,%P,%S,%T,%W,%X,%Y
"RTN","LRUTIL",69,0)
 N A0,C,D,DD,DDH,DDQ,DDSV,DG,DH,DIC,DIFLD,DIRO,DO,DP,DQ,DU,DZ,X1
"RTN","LRUTIL",70,0)
 N XQH,DIX,DIY,DISYS,%BU,%J1,%A0,%W0,%D1,%D2,%DT,%K,%M
"RTN","LRUTIL",71,0)
 ;
"RTN","LRUTIL",72,0)
 S NOQUE=$G(NOQUE)
"RTN","LRUTIL",73,0)
 S QUIET=$G(QUIET)
"RTN","LRUTIL",74,0)
 S QUEUED=0
"RTN","LRUTIL",75,0)
 S %ZIS="M"
"RTN","LRUTIL",76,0)
 I 'NOQUE S %ZIS=%ZIS_"Q"
"RTN","LRUTIL",77,0)
 D ^%ZIS
"RTN","LRUTIL",78,0)
 I POP D HOME^%ZIS Q -1
"RTN","LRUTIL",79,0)
 I $D(IO("Q")) D  ;
"RTN","LRUTIL",80,0)
 . S QUEUED=$$TASK(ZTRTN,ZTDESC,.ZTSAVE,QUIET)
"RTN","LRUTIL",81,0)
 . D HOME^%ZIS
"RTN","LRUTIL",82,0)
 . K IO("Q")
"RTN","LRUTIL",83,0)
 Q QUEUED
"RTN","LRUTIL",84,0)
 ;
"RTN","LRUTIL",85,0)
 ;
"RTN","LRUTIL",86,0)
TASK(ZTRTN,ZTDESC,ZTSAVE,QUIET,ZTDTH,ZTIO) ;
"RTN","LRUTIL",87,0)
 ; Tasks the specified routine
"RTN","LRUTIL",88,0)
 ; Returns the task # or 0
"RTN","LRUTIL",89,0)
 ;  ZTSAVE:<byref>
"RTN","LRUTIL",90,0)
 N ZTSK,X,X1,X2,DIE,DIR,DIC,DA
"RTN","LRUTIL",91,0)
 S QUIET=$G(QUIET)
"RTN","LRUTIL",92,0)
 D ^%ZTLOAD
"RTN","LRUTIL",93,0)
 I 'QUIET I '$$ISQUIET W !,"Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued")
"RTN","LRUTIL",94,0)
 Q +$G(ZTSK)
"RTN","LRUTIL",95,0)
 ;
"RTN","LRUTIL",96,0)
 ;
"RTN","LRUTIL",97,0)
ISQUIET() ;
"RTN","LRUTIL",98,0)
 ; Is "Quiet" or not (Should we Write output?)
"RTN","LRUTIL",99,0)
 N QUIET
"RTN","LRUTIL",100,0)
 S QUIET=0
"RTN","LRUTIL",101,0)
 S:$G(LRQUIET) QUIET=1
"RTN","LRUTIL",102,0)
 S:$G(DIQUIET) QUIET=1
"RTN","LRUTIL",103,0)
 Q QUIET
"RTN","LRUTIL",104,0)
 ;
"RTN","LRUTIL",105,0)
 ;
"RTN","LRUTIL",106,0)
RDELTSK(LRDELRTN,ZTDESC,ZTDTH) ;
"RTN","LRUTIL",107,0)
 ; Delete routines via a tasked job it creates
"RTN","LRUTIL",108,0)
 ; Inputs
"RTN","LRUTIL",109,0)
 ;  LRDELRTN: <byref> Array that holds the routines to delete
"RTN","LRUTIL",110,0)
 ;    ZTDESC: <opt> Description to use for tasked job
"RTN","LRUTIL",111,0)
 ;     ZTDTH: <opt> Date/Time (in $H) for job to run
"RTN","LRUTIL",112,0)
 ; Outputs
"RTN","LRUTIL",113,0)
 ;   The task number
"RTN","LRUTIL",114,0)
 N QUE,ZTSAVE
"RTN","LRUTIL",115,0)
 S ZTDESC=$G(ZTDESC)
"RTN","LRUTIL",116,0)
 I ZTDESC="" S ZTDESC="Delete routines via tasked job"
"RTN","LRUTIL",117,0)
 S ZTSAVE("LRDELRTN")=""
"RTN","LRUTIL",118,0)
 S ZTSAVE("LRDELRTN(")=""
"RTN","LRUTIL",119,0)
 S ZTSAVE("XPD*")="" ;called from a patch install?
"RTN","LRUTIL",120,0)
 S QUE=$$TASK("DELRTNS^LRUTIL(,1)",ZTDESC,.ZTSAVE,"",$G(ZTDTH),"")
"RTN","LRUTIL",121,0)
 Q QUE
"RTN","LRUTIL",122,0)
 ;
"RTN","LRUTIL",123,0)
 ;
"RTN","LRUTIL",124,0)
DELRTNS(RTNS,USELRDEL) ;
"RTN","LRUTIL",125,0)
 ; Delete routines
"RTN","LRUTIL",126,0)
 ; Useful for deleting routines via TaskMan
"RTN","LRUTIL",127,0)
 ; For easier use with TaskMan, the LRDELRTN array can also be
"RTN","LRUTIL",128,0)
 ; setup prior to calling with TaskMan to delete multiple routines.
"RTN","LRUTIL",129,0)
 ;  Inputs
"RTN","LRUTIL",130,0)
 ;      RTNS : <byref> The routine(s) to delete
"RTN","LRUTIL",131,0)
 ;           :  RTNS="rtn" or  RTNS("rtn")="" or RTNS(#)=rtn
"RTN","LRUTIL",132,0)
 ;  USELRDEL : 1=use LRDELRTN array 0=dont use 
"RTN","LRUTIL",133,0)
 ;           : Setup array LRDELRTN(rtn) or LRDELRTN(#)=rtn
"RTN","LRUTIL",134,0)
 ;           : and then call.
"RTN","LRUTIL",135,0)
 ;  LRDELRTN : <symtbl><opt> Array of routines to delete
"RTN","LRUTIL",136,0)
 N X,I,DEL,RTN
"RTN","LRUTIL",137,0)
 S RTNS=$G(RTNS)
"RTN","LRUTIL",138,0)
 S USELRDEL=$G(USELRDEL)
"RTN","LRUTIL",139,0)
 ; Honor KIDS "No Delete" setting if called from a KIDS install.
"RTN","LRUTIL",140,0)
 I $G(XPDNM)'="" I $$GET^XUPARAM("XPD NO_EPP_DELETE") D  Q  ;
"RTN","LRUTIL",141,0)
 . I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRUTIL",142,0)
 ;
"RTN","LRUTIL",143,0)
 I RTNS'="" S DEL=RTNS
"RTN","LRUTIL",144,0)
 S I=""
"RTN","LRUTIL",145,0)
 F  S I=$O(RTNS(I)) Q:I=""  D  ;
"RTN","LRUTIL",146,0)
 . I RTNS(I)="" S DEL(I)=""
"RTN","LRUTIL",147,0)
 . I RTNS(I)'="" S DEL(RTNS(I))=""
"RTN","LRUTIL",148,0)
 ;
"RTN","LRUTIL",149,0)
 S I=""
"RTN","LRUTIL",150,0)
 I USELRDEL I $D(LRDELRTN) F  S I=$O(LRDELRTN(I)) Q:I=""  D  ;
"RTN","LRUTIL",151,0)
 . I LRDELRTN(I)="" S DEL(I)=""
"RTN","LRUTIL",152,0)
 . I LRDELRTN(I)'="" S DEL(LRDELRTN(I))=""
"RTN","LRUTIL",153,0)
 ; now delete
"RTN","LRUTIL",154,0)
 S RTN=""
"RTN","LRUTIL",155,0)
 F  S RTN=$O(DEL(RTN)) Q:RTN=""  D  ;
"RTN","LRUTIL",156,0)
 . Q:"^LR^LA^"'[("^"_$E(RTN,1,2)_"^")
"RTN","LRUTIL",157,0)
 . S X=RTN
"RTN","LRUTIL",158,0)
 . X ^%ZOSF("TEST")
"RTN","LRUTIL",159,0)
 . Q:'$T
"RTN","LRUTIL",160,0)
 . X ^%ZOSF("DEL")
"RTN","LRUTIL",161,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRUTIL",162,0)
 Q
"RTN","LRUTIL",163,0)
 ;
"RTN","LRUTIL",164,0)
 ;
"RTN","LRUTIL",165,0)
NP(ABORT,PGDATA) ;
"RTN","LRUTIL",166,0)
 ; Next Page Handler
"RTN","LRUTIL",167,0)
 ; Generic display utility.  Prints HDR and FTR when needed.
"RTN","LRUTIL",168,0)
 ; Caller should check ABORT and terminate when 1.
"RTN","LRUTIL",169,0)
 ; Caller needs to make initial call to their HDR code
"RTN","LRUTIL",170,0)
 ; and to call their FTR code at end if needed.
"RTN","LRUTIL",171,0)
 ; Note: Header code should place cursor on start
"RTN","LRUTIL",172,0)
 ; of newline when done.
"RTN","LRUTIL",173,0)
 ; Inputs
"RTN","LRUTIL",174,0)
 ;  ABORT : <byref> Equals 1 if user enters "^" at "MORE" prompt
"RTN","LRUTIL",175,0)
 ; PGDATA : <byref> Page Data array
"RTN","LRUTIL",176,0)
 ;        :  "PGNUM": current page number
"RTN","LRUTIL",177,0)
 ;        :  "BM": Bottom Margin (# of lines in footer)
"RTN","LRUTIL",178,0)
 ;        :  "HDR": Executable M code for header
"RTN","LRUTIL",179,0)
 ;        :  "FTR": Executable M code for footer
"RTN","LRUTIL",180,0)
 ;        : "NOPROMPT": Dont show "more" prompt (0 or 1) <dflt=0>
"RTN","LRUTIL",181,0)
 ;        :  "PROMPT": (string) Replacement for "More" prompt
"RTN","LRUTIL",182,0)
 ;        :  "PROMPTX": Executable M code to run for "More" prompt
"RTN","LRUTIL",183,0)
 ;        :    The M Code must set var X equal to the prompt to use.
"RTN","LRUTIL",184,0)
 ;        :  "WFTR": the footer was written (=1)
"RTN","LRUTIL",185,0)
 ;        :  "ERASE": Erase MORE prompt (1=Erase 0=Dont erase dflt=1)
"RTN","LRUTIL",186,0)
 ;        :  "IOF": <opt>IOF control.
"RTN","LRUTIL",187,0)
 ;        :   IOF=0: IOF not issued for non "C-" type devices.
"RTN","LRUTIL",188,0)
 ;        :   IOF=1: IOF issued for "C-" type devices.
"RTN","LRUTIL",189,0)
 ;Outputs
"RTN","LRUTIL",190,0)
 ;  ABORT : 0 or 1 if user wants to quit display
"RTN","LRUTIL",191,0)
 ; PGDATA : "PGNUM" incremented as needed
"RTN","LRUTIL",192,0)
 ;        : "WFTR" = 1 if footer was written
"RTN","LRUTIL",193,0)
 ;        : "NP": Is it a "New Page"? (Was "MORE" prompt displayed)
"RTN","LRUTIL",194,0)
 ;
"RTN","LRUTIL",195,0)
 ;
"RTN","LRUTIL",196,0)
 ; Example code to write last footer if needed
"RTN","LRUTIL",197,0)
 ; I 'STOP I '$G(PGDATA("WFTR")) D  ;
"RTN","LRUTIL",198,0)
 ; . I $G(PGDATA("FTR"))="" Q
"RTN","LRUTIL",199,0)
 ; . I $E($G(IOST),1,2)'="C-" D  ;
"RTN","LRUTIL",200,0)
 ; . . N I,BM
"RTN","LRUTIL",201,0)
 ; . . S BM=$G(PGDATA("BM"))
"RTN","LRUTIL",202,0)
 ; . . F I=$Y+1:1:($G(IOSL,60)-BM-1) W !
"RTN","LRUTIL",203,0)
 ; . X PGDATA("FTR")
"RTN","LRUTIL",204,0)
 ;
"RTN","LRUTIL",205,0)
 N X,PGNUM,BM,HDR,FTR,INHDR,INFTR,ERASE
"RTN","LRUTIL",206,0)
 S ABORT=$G(ABORT)
"RTN","LRUTIL",207,0)
 S PGNUM=$G(PGDATA("PGNUM"))
"RTN","LRUTIL",208,0)
 S BM=$G(PGDATA("BM"))
"RTN","LRUTIL",209,0)
 S PGDATA("WFTR")=0
"RTN","LRUTIL",210,0)
 S PGDATA("NP")=0
"RTN","LRUTIL",211,0)
 I PGNUM<1 S PGNUM=1 S PGDATA("PGNUM")=PGNUM
"RTN","LRUTIL",212,0)
 Q:ABORT
"RTN","LRUTIL",213,0)
 I BM<0 S BM=0
"RTN","LRUTIL",214,0)
 I $Y+1<($G(IOSL,24)-BM) Q
"RTN","LRUTIL",215,0)
 ;
"RTN","LRUTIL",216,0)
 S HDR=$G(PGDATA("HDR"))
"RTN","LRUTIL",217,0)
 S FTR=$G(PGDATA("FTR"))
"RTN","LRUTIL",218,0)
 S ERASE=$G(PGDATA("ERASE"),1)
"RTN","LRUTIL",219,0)
 S (INHDR,INFTR)=0
"RTN","LRUTIL",220,0)
 S PGDATA("NP")=1
"RTN","LRUTIL",221,0)
 ;
"RTN","LRUTIL",222,0)
 I FTR'="" I 'INFTR D  ;
"RTN","LRUTIL",223,0)
 . N POSY
"RTN","LRUTIL",224,0)
 . S POSY=$Y
"RTN","LRUTIL",225,0)
 . S INFTR=1
"RTN","LRUTIL",226,0)
 . X FTR
"RTN","LRUTIL",227,0)
 . S PGDATA("WFTR")=1
"RTN","LRUTIL",228,0)
 . S INFTR=0
"RTN","LRUTIL",229,0)
 . ;handle form feed
"RTN","LRUTIL",230,0)
 . I $G(IOF)'="",POSY<$Y D
"RTN","LRUTIL",231,0)
 . . I $E(IOST,1,2)="C-",$G(PGDATA("IOF"))="1" W @IOF
"RTN","LRUTIL",232,0)
 . . ;
"RTN","LRUTIL",233,0)
 . . I $E($G(IOST),1,2)'="C-",$G(PGDATA("IOF"))'="0" W @IOF
"RTN","LRUTIL",234,0)
 ;
"RTN","LRUTIL",235,0)
 ; do "MORE" prompting
"RTN","LRUTIL",236,0)
 I $E($G(IOST),1,2)="C-" D  Q:ABORT  ;
"RTN","LRUTIL",237,0)
 . Q:$G(PGDATA("NOPROMPT"))
"RTN","LRUTIL",238,0)
 . S X=0
"RTN","LRUTIL",239,0)
 . Q:$D(ZTQUEUED)
"RTN","LRUTIL",240,0)
 . I $G(PGDATA("PROMPTX"))'="" D  ;
"RTN","LRUTIL",241,0)
 . . K X
"RTN","LRUTIL",242,0)
 . . X PGDATA("PROMPTX")
"RTN","LRUTIL",243,0)
 . . S X=$G(X)
"RTN","LRUTIL",244,0)
 . . S ABORT=$$MORE(X,ERASE)
"RTN","LRUTIL",245,0)
 . ;
"RTN","LRUTIL",246,0)
 . I $G(PGDATA("PROMPTX"))="" S ABORT=$$MORE($G(PGDATA("PROMPT")),ERASE)
"RTN","LRUTIL",247,0)
 . ;
"RTN","LRUTIL",248,0)
 ;
"RTN","LRUTIL",249,0)
 S $Y=0
"RTN","LRUTIL",250,0)
 S PGNUM=PGNUM+1
"RTN","LRUTIL",251,0)
 S PGDATA("PGNUM")=PGNUM
"RTN","LRUTIL",252,0)
 I HDR'="",'INHDR D  ;
"RTN","LRUTIL",253,0)
 . S INHDR=1
"RTN","LRUTIL",254,0)
 . X HDR
"RTN","LRUTIL",255,0)
 . S INHDR=0
"RTN","LRUTIL",256,0)
 Q
"RTN","LRUTIL",257,0)
 ;
"RTN","LRUTIL",258,0)
 ;
"RTN","LRUTIL",259,0)
MORE(PROMPT,ERASE) ;
"RTN","LRUTIL",260,0)
 ; Prompts user to hit ENTER to continue
"RTN","LRUTIL",261,0)
 ; Returns 1 if user enters "^" else returns 0
"RTN","LRUTIL",262,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRUTIL",263,0)
 S PROMPT=$G(PROMPT)
"RTN","LRUTIL",264,0)
 S ERASE=$G(ERASE,1)
"RTN","LRUTIL",265,0)
 I '$D(ZTQUEUED) D  ;
"RTN","LRUTIL",266,0)
 . I $E($G(IOST),1,2)'="C-" Q
"RTN","LRUTIL",267,0)
 . S DIR(0)="E"
"RTN","LRUTIL",268,0)
 . I PROMPT'="" S DIR("A")=PROMPT S DIR(0)="EA"
"RTN","LRUTIL",269,0)
 . D ^DIR
"RTN","LRUTIL",270,0)
 . I ERASE W $C(13)_$J("",$G(IOM,80))_$C(13)
"RTN","LRUTIL",271,0)
 I $Q Q $D(DIRUT)
"RTN","LRUTIL",272,0)
 Q
"RTN","LRUTIL",273,0)
 ;
"RTN","LRUTIL",274,0)
 ;
"RTN","LRUTIL",275,0)
DATAOK(LRFILE,LRFLD,LRVAL) ;
"RTN","LRUTIL",276,0)
 ; Checks if a value is appropriate for storing in the field
"RTN","LRUTIL",277,0)
 ; Inputs
"RTN","LRUTIL",278,0)
 ;  LRFILE : File #
"RTN","LRUTIL",279,0)
 ;   LRFLD : Field #
"RTN","LRUTIL",280,0)
 ;   LRVAL : Value of the field
"RTN","LRUTIL",281,0)
 ;
"RTN","LRUTIL",282,0)
 ; Returns 0 (invalid) or 1 (valid)
"RTN","LRUTIL",283,0)
 ;
"RTN","LRUTIL",284,0)
 N STATUS,LROUT,LRMSG,DIERR
"RTN","LRUTIL",285,0)
 S STATUS=0
"RTN","LRUTIL",286,0)
 D CHK^DIE(LRFILE,LRFLD,"",LRVAL,.LROUT,"LRMSG")
"RTN","LRUTIL",287,0)
 I $G(LROUT)'="^" S STATUS=1
"RTN","LRUTIL",288,0)
 I $D(LRMSG) S STATUS=0
"RTN","LRUTIL",289,0)
 Q STATUS
"RTN","LRUTIL",290,0)
 ;
"RTN","LRUTIL",291,0)
 ;
"RTN","LRUTIL",292,0)
OWNSKEY(KEY,IEN) ;
"RTN","LRUTIL",293,0)
 ;File ^XUSEC/10076
"RTN","LRUTIL",294,0)
 ; Does user own specific key?
"RTN","LRUTIL",295,0)
 ; Inputs
"RTN","LRUTIL",296,0)
 ;   KEY:  The Key's NAME
"RTN","LRUTIL",297,0)
 ;   IEN:  User's IEN <dflt=DUZ>
"RTN","LRUTIL",298,0)
 ; Outputs
"RTN","LRUTIL",299,0)
 ;   Returns 1 if user owns key, 0 otherwise.
"RTN","LRUTIL",300,0)
 ;
"RTN","LRUTIL",301,0)
 N LRLIST,LROWNS
"RTN","LRUTIL",302,0)
 S LRLIST(1)=KEY,IEN=$G(IEN,$G(DUZ))
"RTN","LRUTIL",303,0)
 D OWNSKEY^XUSRB(.LROWNS,.LRLIST,IEN)
"RTN","LRUTIL",304,0)
 ;
"RTN","LRUTIL",305,0)
 Q +$G(LROWNS(1))
"RTN","LRUTIL1")
0^123^B18356877
"RTN","LRUTIL1",1,0)
LRUTIL1 ;DALOI/JDB -- Lab Utilities ;06/12/09  15:31
"RTN","LRUTIL1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUTIL1",3,0)
 ;
"RTN","LRUTIL1",4,0)
 Q
"RTN","LRUTIL1",5,0)
 ;
"RTN","LRUTIL1",6,0)
SELECT(DIC,OUT,FNAME,SELS,SORT,NOALL,MODE) ;
"RTN","LRUTIL1",7,0)
 ; Package replacement for FIRST^VAUTOMA
"RTN","LRUTIL1",8,0)
 ; Allows user to select multiple entries from a file.
"RTN","LRUTIL1",9,0)
 ; Inputs
"RTN","LRUTIL1",10,0)
 ;    DIC :<byref> Standard DIC array
"RTN","LRUTIL1",11,0)
 ;    OUT :<byref> See Outputs below
"RTN","LRUTIL1",12,0)
 ;  FNAME :<opt> Filename to use for "Select " prompt
"RTN","LRUTIL1",13,0)
 ;         : FNAME="" and DIC=# then uses File's Name
"RTN","LRUTIL1",14,0)
 ;   SELS :<opt> How many selections user may make. dflt=20
"RTN","LRUTIL1",15,0)
 ;   SORT :<opt> Numeric or Alpha sort? N or A -or- 0 or 1
"RTN","LRUTIL1",16,0)
 ;  NOALL ;<opt> If 1 then user cannot select "ALL"
"RTN","LRUTIL1",17,0)
 ;   MODE :<opt> Behave like FIRST^VAUTOMA or not (1 or 0)
"RTN","LRUTIL1",18,0)
 ;        : dflt=0 (not) (see Outputs below for info)
"RTN","LRUTIL1",19,0)
 ; Outputs
"RTN","LRUTIL1",20,0)
 ;    Returns the # of records selected
"RTN","LRUTIL1",21,0)
 ;    OUT : Array that holds the records selected
"RTN","LRUTIL1",22,0)
 ;        : MODE=0   OUT=total selected  or  OUT="*" (ALL)
"RTN","LRUTIL1",23,0)
 ;        :  SORT=0 -> OUT(select seq)=IEN
"RTN","LRUTIL1",24,0)
 ;        :  SORT=1 -> OUT(alpha seq)=IEN
"RTN","LRUTIL1",25,0)
 ;        :
"RTN","LRUTIL1",26,0)
 ;        : MODE=1 (VAUTOMA mode) OUT=""  or  OUT=1 (ALL)
"RTN","LRUTIL1",27,0)
 ;        :  SORT=0 -> OUT(IEN)=.01 field
"RTN","LRUTIL1",28,0)
 ;        :  SORT=1 -> OUT(.01 field)=IEN
"RTN","LRUTIL1",29,0)
 ;
"RTN","LRUTIL1",30,0)
 N X,Y,CNT,STOP,DIR,DELSEL,NODE,I,TMPNM,LRDIC
"RTN","LRUTIL1",31,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,DIERR
"RTN","LRUTIL1",32,0)
 ;
"RTN","LRUTIL1",33,0)
 S FNAME=$G(FNAME)
"RTN","LRUTIL1",34,0)
 S SELS=$G(SELS,20)
"RTN","LRUTIL1",35,0)
 S NOALL=$G(NOALL)
"RTN","LRUTIL1",36,0)
 S SORT=$G(SORT)
"RTN","LRUTIL1",37,0)
 S MODE=$G(MODE)
"RTN","LRUTIL1",38,0)
 I SORT="A" S SORT=1
"RTN","LRUTIL1",39,0)
 I SORT="N" S SORT=0
"RTN","LRUTIL1",40,0)
 K OUT
"RTN","LRUTIL1",41,0)
 K DIC("B")
"RTN","LRUTIL1",42,0)
 S (STOP,CNT)=0
"RTN","LRUTIL1",43,0)
 S TMPNM="LRUTIL1"
"RTN","LRUTIL1",44,0)
 I FNAME="" I DIC D  ;
"RTN","LRUTIL1",45,0)
 . K DATA,DIERR
"RTN","LRUTIL1",46,0)
 . D FILE^DID(DIC,"","NAME","DATA","ERR")
"RTN","LRUTIL1",47,0)
 . Q:'$D(DATA)
"RTN","LRUTIL1",48,0)
 . S FNAME=DATA("NAME")
"RTN","LRUTIL1",49,0)
 . K DATA,DIERR
"RTN","LRUTIL1",50,0)
 ;
"RTN","LRUTIL1",51,0)
 K ^TMP(TMPNM,$J)
"RTN","LRUTIL1",52,0)
 I 'NOALL S DIC("B")="ALL" S DIR("B")=DIC("B")
"RTN","LRUTIL1",53,0)
 I $G(DIC(0))="" S DIC(0)="EQMZ"
"RTN","LRUTIL1",54,0)
 F  D  Q:STOP  Q:CNT'<SELS  ;
"RTN","LRUTIL1",55,0)
 . I 'CNT D  ;
"RTN","LRUTIL1",56,0)
 . . S X=$G(DIC("A"))
"RTN","LRUTIL1",57,0)
 . . I X="" S X="Select "_FNAME
"RTN","LRUTIL1",58,0)
 . . S DIR("A")=X
"RTN","LRUTIL1",59,0)
 . . S DIR(0)="FO"
"RTN","LRUTIL1",60,0)
 . . S DIR("?")="^D HELP^LRUTIL1"
"RTN","LRUTIL1",61,0)
 . ;
"RTN","LRUTIL1",62,0)
 . I CNT=1 D  ;
"RTN","LRUTIL1",63,0)
 . . K DIR("B")
"RTN","LRUTIL1",64,0)
 . . S DIR(0)="FAO"
"RTN","LRUTIL1",65,0)
 . . S X=$G(DIC("A"))
"RTN","LRUTIL1",66,0)
 . . I X="" S X=FNAME
"RTN","LRUTIL1",67,0)
 . . Q:X?1"Select another "0.E
"RTN","LRUTIL1",68,0)
 . . S DIR("A")="Select another "_X_": "
"RTN","LRUTIL1",69,0)
 . ;
"RTN","LRUTIL1",70,0)
 . K LRDIC M LRDIC=DIC ;save DIC for ^DIR's help processor
"RTN","LRUTIL1",71,0)
 . D ^DIR
"RTN","LRUTIL1",72,0)
 . I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) K OUT S CNT=0 S STOP=1 Q
"RTN","LRUTIL1",73,0)
 . I 'NOALL I Y="ALL" K OUT S CNT="*" S STOP=1 Q
"RTN","LRUTIL1",74,0)
 . S DELSEL=0
"RTN","LRUTIL1",75,0)
 . I $E(Y)="-" D  ;
"RTN","LRUTIL1",76,0)
 . . S DELSEL=1
"RTN","LRUTIL1",77,0)
 . . S Y=$E(X,2,$L(Y))
"RTN","LRUTIL1",78,0)
 . I Y="" S STOP=1 Q
"RTN","LRUTIL1",79,0)
 . S X=Y
"RTN","LRUTIL1",80,0)
 . D ^DIC
"RTN","LRUTIL1",81,0)
 . I $D(LRDIC("W")) S DIC("W")=LRDIC("W") ; restore DIC("W") - it's killed in DIC calls.
"RTN","LRUTIL1",82,0)
 . I $D(DTOUT)!$D(DUOUT) K OUT S CNT=0 S STOP=1 Q
"RTN","LRUTIL1",83,0)
 . I Y>0 D  ;
"RTN","LRUTIL1",84,0)
 . . S NODE="^TMP(TMPNM,$J,1,0,+Y)"
"RTN","LRUTIL1",85,0)
 . . I SORT=1 S NODE="^TMP(TMPNM,$J,1,$P(Y,""^"",2),+Y)"
"RTN","LRUTIL1",86,0)
 . . I 'DELSEL I '$D(@NODE) D  ;
"RTN","LRUTIL1",87,0)
 . . . S CNT=CNT+1
"RTN","LRUTIL1",88,0)
 . . . S @NODE=CNT
"RTN","LRUTIL1",89,0)
 . . . S ^TMP(TMPNM,$J,2,"B",$P(Y,"^",2),+Y)=""
"RTN","LRUTIL1",90,0)
 . . . S ^TMP(TMPNM,$J,2,"C",+Y)=$P(Y,"^",2)
"RTN","LRUTIL1",91,0)
 . . I DELSEL D  ;
"RTN","LRUTIL1",92,0)
 . . . I $D(@NODE) S CNT=CNT-1 S:CNT<0 CNT=0
"RTN","LRUTIL1",93,0)
 . . . K @NODE
"RTN","LRUTIL1",94,0)
 . . . K ^TMP(TMPNM,$J,2,"B",$P(Y,"^",2),+Y)
"RTN","LRUTIL1",95,0)
 . . . K ^TMP(TMPNM,$J,2,"C",+Y)
"RTN","LRUTIL1",96,0)
 . . ;
"RTN","LRUTIL1",97,0)
 . ;
"RTN","LRUTIL1",98,0)
 ;
"RTN","LRUTIL1",99,0)
 I $D(^TMP(TMPNM,$J,1)) D  ;
"RTN","LRUTIL1",100,0)
 . S NODE="^TMP(TMPNM,$J,1)"
"RTN","LRUTIL1",101,0)
 . S I=0
"RTN","LRUTIL1",102,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=1  Q:$QS(NODE,2)'=$J  Q:$QS(NODE,1)'=TMPNM  D  ;
"RTN","LRUTIL1",103,0)
 . . S I=I+1
"RTN","LRUTIL1",104,0)
 . . I 'MODE I SORT S OUT(I)=$QS(NODE,5) Q
"RTN","LRUTIL1",105,0)
 . . I MODE I SORT S OUT($QS(NODE,4))=$QS(NODE,5) Q
"RTN","LRUTIL1",106,0)
 . . I 'SORT S OUT(0,@NODE)=$QS(NODE,5)
"RTN","LRUTIL1",107,0)
 . ;
"RTN","LRUTIL1",108,0)
 ;
"RTN","LRUTIL1",109,0)
 I $D(OUT(0)) D  ;
"RTN","LRUTIL1",110,0)
 . S I=0
"RTN","LRUTIL1",111,0)
 . F  S I=$O(OUT(0,I)) Q:'I  D  ; I=CNT
"RTN","LRUTIL1",112,0)
 . . S X=OUT(0,I) ;IEN
"RTN","LRUTIL1",113,0)
 . . I 'MODE S OUT(I)=X
"RTN","LRUTIL1",114,0)
 . . I MODE S OUT(X)=^TMP(TMPNM,$J,2,"C",X)
"RTN","LRUTIL1",115,0)
 . ;
"RTN","LRUTIL1",116,0)
 ;
"RTN","LRUTIL1",117,0)
 K OUT(0)
"RTN","LRUTIL1",118,0)
 K ^TMP(TMPNM,$J)
"RTN","LRUTIL1",119,0)
 ;
"RTN","LRUTIL1",120,0)
 ; Update OUT with status based on value of MODE.
"RTN","LRUTIL1",121,0)
 I MODE D  ;
"RTN","LRUTIL1",122,0)
 . I CNT=0 K OUT S OUT=""
"RTN","LRUTIL1",123,0)
 . I CNT>0 S OUT=""
"RTN","LRUTIL1",124,0)
 . I CNT="*" K OUT S OUT=1
"RTN","LRUTIL1",125,0)
 ;
"RTN","LRUTIL1",126,0)
 I 'MODE D
"RTN","LRUTIL1",127,0)
 . I CNT=0 K OUT S OUT=""
"RTN","LRUTIL1",128,0)
 . I CNT>0 S OUT=CNT
"RTN","LRUTIL1",129,0)
 . I CNT="*" K OUT S OUT=CNT
"RTN","LRUTIL1",130,0)
 ;
"RTN","LRUTIL1",131,0)
 Q CNT
"RTN","LRUTIL1",132,0)
 ;
"RTN","LRUTIL1",133,0)
 ;
"RTN","LRUTIL1",134,0)
HELP ;
"RTN","LRUTIL1",135,0)
 ; Displays "?" help info. For use with above.
"RTN","LRUTIL1",136,0)
 ; Expects SELS,NOALL,FNAME,CNT,TMPNM,LRDIC
"RTN","LRUTIL1",137,0)
 N LRX,DIC
"RTN","LRUTIL1",138,0)
 W !,"ENTER up to ",SELS,":"
"RTN","LRUTIL1",139,0)
 I 'CNT&'NOALL W !?5,"- <return> for all ",FNAME,"s, or"
"RTN","LRUTIL1",140,0)
 W !?5,"- a ",FNAME," or <return> after all selections made."
"RTN","LRUTIL1",141,0)
 I CNT D  ;
"RTN","LRUTIL1",142,0)
 . W !?5,"- An entry preceded by a minus [-] sign to remove entry from list."
"RTN","LRUTIL1",143,0)
 . W !,"NOTE, you have already selected:"
"RTN","LRUTIL1",144,0)
 . S LRX=""
"RTN","LRUTIL1",145,0)
 . F  S LRX=$O(^TMP(TMPNM,$J,2,"B",LRX)) Q:LRX=""  D  ;
"RTN","LRUTIL1",146,0)
 . . W !?8,LRX
"RTN","LRUTIL1",147,0)
 . W !
"RTN","LRUTIL1",148,0)
 . ;
"RTN","LRUTIL1",149,0)
 ; now show selectable entries
"RTN","LRUTIL1",150,0)
 ; X is from the ^DIR call ($E(X)="?")
"RTN","LRUTIL1",151,0)
 ; DIC isnt avail here because ^DIR News it.
"RTN","LRUTIL1",152,0)
 I $D(LRDIC) M DIC=LRDIC
"RTN","LRUTIL1",153,0)
 D ^DIC
"RTN","LRUTIL1",154,0)
 Q
"RTN","LRUTIL2")
0^137^B20508256
"RTN","LRUTIL2",1,0)
LRUTIL2 ;DALOI/JDB -- Lab KIDS Utilities ;04/30/12  10:04
"RTN","LRUTIL2",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUTIL2",3,0)
 ;
"RTN","LRUTIL2",4,0)
 ;File 19/10156
"RTN","LRUTIL2",5,0)
 ;
"RTN","LRUTIL2",6,0)
 Q
"RTN","LRUTIL2",7,0)
 ;
"RTN","LRUTIL2",8,0)
ENVCHK(CJ,LM,POS,QUIET) ;
"RTN","LRUTIL2",9,0)
 ; Perform basic environment checks
"RTN","LRUTIL2",10,0)
 N ERR
"RTN","LRUTIL2",11,0)
 S CJ=$G(CJ)
"RTN","LRUTIL2",12,0)
 S LM=$G(LM)
"RTN","LRUTIL2",13,0)
 S POS=$G(POS)
"RTN","LRUTIL2",14,0)
 S QUIET=$G(QUIET)
"RTN","LRUTIL2",15,0)
 S ERR=0
"RTN","LRUTIL2",16,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D  ;
"RTN","LRUTIL2",17,0)
 . I 'QUIET D BMES("Terminal Device is not defined.")
"RTN","LRUTIL2",18,0)
 . S ERR="1^1"
"RTN","LRUTIL2",19,0)
 ;
"RTN","LRUTIL2",20,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  ;
"RTN","LRUTIL2",21,0)
 . I 'QUIET D BMES("Please login to set local DUZ variables.")
"RTN","LRUTIL2",22,0)
 . S $P(ERR,"^",1)=1 S $P(ERR,"^",3)=1
"RTN","LRUTIL2",23,0)
 ;
"RTN","LRUTIL2",24,0)
 I $G(DUZ) I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D  ;
"RTN","LRUTIL2",25,0)
 . I 'QUIET D BMES("You are not a valid user on this system.")
"RTN","LRUTIL2",26,0)
 . S $P(ERR,"^",1)=1 S $P(ERR,"^",4)=1
"RTN","LRUTIL2",27,0)
 Q ERR
"RTN","LRUTIL2",28,0)
 ;
"RTN","LRUTIL2",29,0)
BMES(STR,CJ,LM,POS) ;
"RTN","LRUTIL2",30,0)
 ; Display messages using BMES^XPDUTL or MES^XPDUTL
"RTN","LRUTIL2",31,0)
 ; Accepts single string or string array
"RTN","LRUTIL2",32,0)
 ; Inputs
"RTN","LRUTIL2",33,0)
 ;  STR:<byref><byval> The string to display.
"RTN","LRUTIL2",34,0)
 ;   CJ:<opt> Center text?  1=yes  0=no  <dflt=1>
"RTN","LRUTIL2",35,0)
 ;   LM:<opt> Left Margin (padding)  <dflt=0>
"RTN","LRUTIL2",36,0)
 ;  POS <opt> value for $$CJ^XLFSTR (80=default)
"RTN","LRUTIL2",37,0)
 ;
"RTN","LRUTIL2",38,0)
 N I,X
"RTN","LRUTIL2",39,0)
 S CJ=$G(CJ,1)
"RTN","LRUTIL2",40,0)
 S LM=$G(LM)
"RTN","LRUTIL2",41,0)
 S:LM<0 LM=0
"RTN","LRUTIL2",42,0)
 S POS=$G(POS)
"RTN","LRUTIL2",43,0)
 I POS'>1 S POS=$G(IOM,80)
"RTN","LRUTIL2",44,0)
 ; If an array, step through it and pass each node to MES
"RTN","LRUTIL2",45,0)
 ; since $$CJ^XLFSTR can't handle arrays
"RTN","LRUTIL2",46,0)
 I $D(STR)>9 D  ;
"RTN","LRUTIL2",47,0)
 . S I=0
"RTN","LRUTIL2",48,0)
 . F  S I=$O(STR(I)) Q:'I  D  ;
"RTN","LRUTIL2",49,0)
 . . D MES(STR(I),CJ,LM,POS)
"RTN","LRUTIL2",50,0)
 . ;
"RTN","LRUTIL2",51,0)
 ;
"RTN","LRUTIL2",52,0)
 I $D(STR)=1 D MES(STR,CJ,LM,POS)
"RTN","LRUTIL2",53,0)
 Q
"RTN","LRUTIL2",54,0)
 ;
"RTN","LRUTIL2",55,0)
MES(STR,CJ,LM,POS) ;
"RTN","LRUTIL2",56,0)
 ; Display a string using MES^XPDUTL
"RTN","LRUTIL2",57,0)
 ;  Inputs
"RTN","LRUTIL2",58,0)
 ;  STR:<byref>or<byval> String to display
"RTN","LRUTIL2",59,0)
 ;   CJ:<opt> Center text?  1=yes 0=1 <dflt=1>
"RTN","LRUTIL2",60,0)
 ;   LM:<opt> Left Margin (padding) dflt=0
"RTN","LRUTIL2",61,0)
 ;  POS:<opt> <dflt=IOM,80>
"RTN","LRUTIL2",62,0)
 N X,I,LRSTR2
"RTN","LRUTIL2",63,0)
 S CJ=$G(CJ,1)
"RTN","LRUTIL2",64,0)
 S LM=$G(LM)
"RTN","LRUTIL2",65,0)
 S POS=$G(POS)
"RTN","LRUTIL2",66,0)
 I LM<0 S LM=0
"RTN","LRUTIL2",67,0)
 I POS'>1 S POS=$G(IOM,80)
"RTN","LRUTIL2",68,0)
 I $G(STR)'="" S STR(.00001)=STR
"RTN","LRUTIL2",69,0)
 S I=0
"RTN","LRUTIL2",70,0)
 F  S I=$O(STR(I)) Q:'I  D  ;
"RTN","LRUTIL2",71,0)
 . S LRSTR2=STR(I)
"RTN","LRUTIL2",72,0)
 . I CJ S LRSTR2=$$TRIM^XLFSTR($$CJ^XLFSTR(LRSTR2,POS),"R"," ")
"RTN","LRUTIL2",73,0)
 . I 'CJ I LM S X="" S $P(X," ",LM)=" " S LRSTR2=X_LRSTR2
"RTN","LRUTIL2",74,0)
 . D MES^XPDUTL(LRSTR2)
"RTN","LRUTIL2",75,0)
 Q
"RTN","LRUTIL2",76,0)
 ;
"RTN","LRUTIL2",77,0)
ALERT(MSG,RECIPS) ;
"RTN","LRUTIL2",78,0)
 ; Send an Alert message.
"RTN","LRUTIL2",79,0)
 ; Inputs
"RTN","LRUTIL2",80,0)
 ;     MSG: Message text
"RTN","LRUTIL2",81,0)
 ;  RECIPS:<byref><opt> Array of Recipients <dflt=G.LMI>
"RTN","LRUTIL2",82,0)
 ;        : Set RECIPS("-G.LMI") to exclude LMI group.
"RTN","LRUTIL2",83,0)
 ;
"RTN","LRUTIL2",84,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LRUTIL2",85,0)
 S XQAMSG=$G(MSG)
"RTN","LRUTIL2",86,0)
 S XQA("G.LMI")=""
"RTN","LRUTIL2",87,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LRUTIL2",88,0)
 I $D(XQA("-G.LMI")) K XQA("G.LMI"),XQA("-G.LMI")
"RTN","LRUTIL2",89,0)
 Q:$D(XQA)'>9
"RTN","LRUTIL2",90,0)
 D SETUP^XQALERT
"RTN","LRUTIL2",91,0)
 Q
"RTN","LRUTIL2",92,0)
 ;
"RTN","LRUTIL2",93,0)
OPTOOO(LROPT,MODE) ;
"RTN","LRUTIL2",94,0)
 ;File 19/10156
"RTN","LRUTIL2",95,0)
 ; Mark Option Out of Order (OOO) or clear OOO.
"RTN","LRUTIL2",96,0)
 ; If the Option is already marked OOO, no action taken.
"RTN","LRUTIL2",97,0)
 ; If the Option was not marked OOO by this API, it will
"RTN","LRUTIL2",98,0)
 ; not be re-enabled by this API.
"RTN","LRUTIL2",99,0)
 ; Note: OPTDE^XPDUTL API doesnt work in ENV check.
"RTN","LRUTIL2",100,0)
 ; Inputs
"RTN","LRUTIL2",101,0)
 ;   LROPT: The OPTION name to act on.
"RTN","LRUTIL2",102,0)
 ;    MODE: 0 or 1 (0=disable  1=enable)
"RTN","LRUTIL2",103,0)
 ; Outputs
"RTN","LRUTIL2",104,0)
 ;   Mode=0
"RTN","LRUTIL2",105,0)
 ;     1 if the option was disabled, 0 if not (or already disabled)
"RTN","LRUTIL2",106,0)
 ;   Mode=1
"RTN","LRUTIL2",107,0)
 ;     1 if option enabled, 0 if not (or disabled previously)
"RTN","LRUTIL2",108,0)
 N R19,STATUS,LROOO,LRFDA,LRMSG,DIERR,OOM
"RTN","LRUTIL2",109,0)
 S LROPT=$G(LROPT)
"RTN","LRUTIL2",110,0)
 S MODE=$G(MODE)
"RTN","LRUTIL2",111,0)
 S STATUS=0
"RTN","LRUTIL2",112,0)
 S R19=$$FIND1^DIC(19,"","OX",LROPT,"B")
"RTN","LRUTIL2",113,0)
 I 'R19 Q "0^1^Option not found"
"RTN","LRUTIL2",114,0)
 K DIERR
"RTN","LRUTIL2",115,0)
 S OOM=$$GET1^DIQ(19,R19_",",2,"","","LRMSG")
"RTN","LRUTIL2",116,0)
 S LROOO=""
"RTN","LRUTIL2",117,0)
 I OOM="" I 'MODE D  ;
"RTN","LRUTIL2",118,0)
 . I $G(XPDNM)'="" S LROOO="OOO VIA "_$TR(XPDNM,"^","~")
"RTN","LRUTIL2",119,0)
 . I $G(XPDNM)="" S LROOO="OOO VIA OPTOOO~LRUTIL2"
"RTN","LRUTIL2",120,0)
 ;
"RTN","LRUTIL2",121,0)
 I OOM="" I MODE D  ;
"RTN","LRUTIL2",122,0)
 . S LROOO="@"
"RTN","LRUTIL2",123,0)
 ;
"RTN","LRUTIL2",124,0)
 ; pre-existing OOO message
"RTN","LRUTIL2",125,0)
 I OOM'="" I $G(XPDNM)'="" D  ;
"RTN","LRUTIL2",126,0)
 . I OOM'="OOO VIA "_$TR(XPDNM,"^","~") Q
"RTN","LRUTIL2",127,0)
 . I MODE S LROOO="@"
"RTN","LRUTIL2",128,0)
 I OOM'="" I $G(XPDNM)="" D  ;
"RTN","LRUTIL2",129,0)
 . I OOM'="OOO VIA OPTOOO~LRUTIL2" Q
"RTN","LRUTIL2",130,0)
 . I MODE S LROOO="@"
"RTN","LRUTIL2",131,0)
 ;
"RTN","LRUTIL2",132,0)
 I LROOO="" D  ;
"RTN","LRUTIL2",133,0)
 . I 'MODE S STATUS="0^2^Already OOO"
"RTN","LRUTIL2",134,0)
 . I MODE S STATUS="0^3^Can't re-enable"
"RTN","LRUTIL2",135,0)
 ;
"RTN","LRUTIL2",136,0)
 K DIERR,LRFDA
"RTN","LRUTIL2",137,0)
 I LROOO'="" D  ;
"RTN","LRUTIL2",138,0)
 . S LRFDA(1,19,R19_",",2)=$TR(LROOO,"^","~")
"RTN","LRUTIL2",139,0)
 . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRUTIL2",140,0)
 . S STATUS=1
"RTN","LRUTIL2",141,0)
 Q STATUS
"RTN","LRUTIL2",142,0)
 ;
"RTN","LRUTIL2",143,0)
ENDDIOL(TXT,GBL,FMT,USENP,CHKABORT,ABORT,PGDATA) ;
"RTN","LRUTIL2",144,0)
 ; Substitute for EN^DDIOL API.
"RTN","LRUTIL2",145,0)
 ; Enhanced for pagination control.
"RTN","LRUTIL2",146,0)
 ; Inputs
"RTN","LRUTIL2",147,0)
 ;      TXT:<byval><byref> Text to display
"RTN","LRUTIL2",148,0)
 ;      GBL:<byval><opt> Global reference of text. (See EN^DDIOL)
"RTN","LRUTIL2",149,0)
 ;      FMT:<opt> Format array. (See EN^DDIOL)
"RTN","LRUTIL2",150,0)
 ;    USENP:<opt> Use NP (use pagination) 1=yes  0=no <dflt=0>
"RTN","LRUTIL2",151,0)
 ; CHKABORT:<opt> Check for user abort 1=check 0=dont  <dflt=0>
"RTN","LRUTIL2",152,0)
 ;    ABORT:<byref><opt> User abort status (output)
"RTN","LRUTIL2",153,0)
 ;   PGDATA:<byref><opt> Page Data array (see NP^LRUTIL)
"RTN","LRUTIL2",154,0)
 ; Outputs
"RTN","LRUTIL2",155,0)
 ;    Displays the text.
"RTN","LRUTIL2",156,0)
 ;   ABORT:
"RTN","LRUTIL2",157,0)
 ;  PGDATA:
"RTN","LRUTIL2",158,0)
 ;
"RTN","LRUTIL2",159,0)
 N NODE,ADDPRMPT
"RTN","LRUTIL2",160,0)
 S GBL=$G(GBL)
"RTN","LRUTIL2",161,0)
 S FMT=$G(FMT)
"RTN","LRUTIL2",162,0)
 S USENP=$G(USENP)
"RTN","LRUTIL2",163,0)
 S CHKABORT=$G(CHKABORT)
"RTN","LRUTIL2",164,0)
 ;
"RTN","LRUTIL2",165,0)
 I '$D(PGDATA) D  ;
"RTN","LRUTIL2",166,0)
 . Q:CHKABORT
"RTN","LRUTIL2",167,0)
 . S ADDPRMPT=1
"RTN","LRUTIL2",168,0)
 . S PGDATA("PROMPT")=$$TRIM^XLFSTR($$CJ^XLFSTR("'ENTER' to continue",$G(IOM,80)," "),"R"," ")
"RTN","LRUTIL2",169,0)
 I 'USENP D  ;
"RTN","LRUTIL2",170,0)
 . I $D(TXT) D  ;
"RTN","LRUTIL2",171,0)
 . . I $D(TXT)=1 D EN^DDIOL(TXT,"",FMT) Q
"RTN","LRUTIL2",172,0)
 . . D EN^DDIOL(.TXT)
"RTN","LRUTIL2",173,0)
 . I GBL'="" D EN^DDIOL("",GBL,FMT) Q
"RTN","LRUTIL2",174,0)
 Q:'USENP
"RTN","LRUTIL2",175,0)
 ;
"RTN","LRUTIL2",176,0)
 I $D(TXT) D  Q:CHKABORT&ABORT  ;
"RTN","LRUTIL2",177,0)
 . I $D(TXT)=1 S TXT(.0000001)=TXT
"RTN","LRUTIL2",178,0)
 . S NODE="TXT(0)"
"RTN","LRUTIL2",179,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  D  Q:CHKABORT&ABORT  ;
"RTN","LRUTIL2",180,0)
 . . D EN^DDIOL(@NODE,"",$S($D(TXT)=1:FMT,1:""))
"RTN","LRUTIL2",181,0)
 . . D NP^LRUTIL(.ABORT,.PGDATA)
"RTN","LRUTIL2",182,0)
 . . I CHKABORT Q:ABORT
"RTN","LRUTIL2",183,0)
 . K TXT(.0000001)
"RTN","LRUTIL2",184,0)
 ;
"RTN","LRUTIL2",185,0)
 I $G(ADDPRMPT) K PGDATA("PROMPT")
"RTN","LRUTIL2",186,0)
 Q
"RTN","LRUTIL3")
0^138^B21135813
"RTN","LRUTIL3",1,0)
LRUTIL3 ;DALOI/JDB - Lab Utilities ;11/04/11  11:07
"RTN","LRUTIL3",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRUTIL3",3,0)
 ;
"RTN","LRUTIL3",4,0)
 ;CREATE^XUSAP/4677
"RTN","LRUTIL3",5,0)
 Q
"RTN","LRUTIL3",6,0)
 ;
"RTN","LRUTIL3",7,0)
FMERR(ERR,RTN,FDA,TXT,CONFIG,QUIET,MORE,HOOK) ;
"RTN","LRUTIL3",8,0)
 ; Process a FileMan filing error.
"RTN","LRUTIL3",9,0)
 ; Stores info into ^TMP(TMPNM,$J,timestamp:seq)
"RTN","LRUTIL3",10,0)
 ; Purges existing ^TMP entries as needed.
"RTN","LRUTIL3",11,0)
 ; Displays FM error text and additional text.
"RTN","LRUTIL3",12,0)
 ; Inputs
"RTN","LRUTIL3",13,0)
 ;    ERR: Name of FileMan error array.
"RTN","LRUTIL3",14,0)
 ;    RTN:<opt> Routine info (ie TAG^RTN).
"RTN","LRUTIL3",15,0)
 ;    FDA:<opt> Name of FileMan FDA array.
"RTN","LRUTIL3",16,0)
 ;    TXT:<byref><opt> Additional error message text.
"RTN","LRUTIL3",17,0)
 ;       :  TXT(0) used to indicate if text should be placed above
"RTN","LRUTIL3",18,0)
 ;       :  or below the FileMan error text. (0=above<dflt>  1=below)
"RTN","LRUTIL3",19,0)
 ; CONFIG:<byref><opt> Array for additional config info.
"RTN","LRUTIL3",20,0)
 ;       :  CONFIG("CJ"):<opt> Center Justify? 1=yes  0=no <dflt=0>
"RTN","LRUTIL3",21,0)
 ;       :  CONFIG("LM"):<opt> Left Margin <dflt=1>
"RTN","LRUTIL3",22,0)
 ;  QUIET:<opt> 1=no screen display  0=Display  <dflt=0>
"RTN","LRUTIL3",23,0)
 ;  MORE:<opt> Display "MORE" prompt  0=no  1=yes  <dflt=0>
"RTN","LRUTIL3",24,0)
 ;  HOOK:<opt> Executable code to add custom functionality.
"RTN","LRUTIL3",25,0)
 ;
"RTN","LRUTIL3",26,0)
 N NOW,ERRNUM,ZZZFMERR,ZZZMSG,TXTPOS,X,I,FMT,DIERR,TMPNM
"RTN","LRUTIL3",27,0)
 S ERR=$G(ERR)
"RTN","LRUTIL3",28,0)
 S RTN=$G(RTN)
"RTN","LRUTIL3",29,0)
 S FDA=$G(FDA)
"RTN","LRUTIL3",30,0)
 S QUIET=$G(QUIET)
"RTN","LRUTIL3",31,0)
 S MORE=$G(MORE)
"RTN","LRUTIL3",32,0)
 S HOOK=$G(HOOK)
"RTN","LRUTIL3",33,0)
 Q:ERR=""
"RTN","LRUTIL3",34,0)
 Q:'$D(@ERR) 0
"RTN","LRUTIL3",35,0)
 S TMPNM="LRUTIL3-FMERR"
"RTN","LRUTIL3",36,0)
 S NOW=$$NOW^XLFDT()
"RTN","LRUTIL3",37,0)
 ; remove entries older than 1 day
"RTN","LRUTIL3",38,0)
 S I=""
"RTN","LRUTIL3",39,0)
 F  S I=$O(^TMP(TMPNM,$J,I)) Q:'I  D  ;
"RTN","LRUTIL3",40,0)
 . S X=$P(I,":",1)
"RTN","LRUTIL3",41,0)
 . I $$FMDIFF^XLFDT(X,NOW,1)'>1 Q
"RTN","LRUTIL3",42,0)
 . K ^TMP(TMPNM,$J,I)
"RTN","LRUTIL3",43,0)
 ;
"RTN","LRUTIL3",44,0)
 ; add sequence # to end of timestamp
"RTN","LRUTIL3",45,0)
 S ERRNUM=$$NOW^XLFDT()_":0"
"RTN","LRUTIL3",46,0)
 ; increment sequence # if needed
"RTN","LRUTIL3",47,0)
 I $D(^TMP(TMPNM,$J,ERRNUM)) D  ;
"RTN","LRUTIL3",48,0)
 . S X=$P(ERRNUM,":",2)
"RTN","LRUTIL3",49,0)
 . S X=X+1
"RTN","LRUTIL3",50,0)
 . S ERRNUM=$P(ERRNUM,":",1)_":"_X
"RTN","LRUTIL3",51,0)
 ;
"RTN","LRUTIL3",52,0)
 D MSG^DIALOG("AEHMS",.ZZZFMERR,"","",ERR)
"RTN","LRUTIL3",53,0)
 Q:'$D(ZZZFMERR) 0
"RTN","LRUTIL3",54,0)
 S ^TMP(TMPNM,$J,ERRNUM,0)=NOW_"^"_DUZ
"RTN","LRUTIL3",55,0)
 I RTN'="" S ^TMP(TMPNM,$J,ERRNUM,1)=RTN
"RTN","LRUTIL3",56,0)
 M ^TMP(TMPNM,$J,ERRNUM,"FDA")=@FDA
"RTN","LRUTIL3",57,0)
 M ^TMP(TMPNM,$J,ERRNUM,"ERR")=@ERR
"RTN","LRUTIL3",58,0)
 S X=RTN
"RTN","LRUTIL3",59,0)
 D ADDNODE(.ZZZMSG,"A FileMan error occurred"_$S(X'="":" in "_X,1:"")_":")
"RTN","LRUTIL3",60,0)
 S TXTPOS=$G(TXT(0))
"RTN","LRUTIL3",61,0)
 S TXTPOS=$S(TXTPOS=1:1,1:0)
"RTN","LRUTIL3",62,0)
 I 'TXTPOS D ADDNODE(.ZZZMSG,.TXT) S ZZZMSG(1,"F")="$C(7),!!"
"RTN","LRUTIL3",63,0)
 K FMT S FMT(1)="!,$C(32,32,32,32)"
"RTN","LRUTIL3",64,0)
 D ADDNODE(.ZZZMSG,.ZZZFMERR,.FMT)
"RTN","LRUTIL3",65,0)
 K FMT S FMT(0)="!!"
"RTN","LRUTIL3",66,0)
 D ADDNODE(.ZZZMSG,"More info available in ^TMP("""_TMPNM_""","_$J_")",.FMT)
"RTN","LRUTIL3",67,0)
 I TXTPOS D ADDNODE(.ZZZMSG,.TXT) S ZZZMSG(1,"F")="$C(7),!!"
"RTN","LRUTIL3",68,0)
 I '$D(XPDNM) I 'QUIET D EN^DDIOL(.ZZZMSG)
"RTN","LRUTIL3",69,0)
 I $D(XPDNM) I 'QUIET D
"RTN","LRUTIL3",70,0)
 . D BMES^XPDUTL(" ")
"RTN","LRUTIL3",71,0)
 . D MES^LRUTIL2(.ZZZMSG,$G(CONFIG("CJ")),$G(CONFIG("LM")))
"RTN","LRUTIL3",72,0)
 ;
"RTN","LRUTIL3",73,0)
 K ZZZMSG,TXT
"RTN","LRUTIL3",74,0)
 I HOOK'="" X HOOK
"RTN","LRUTIL3",75,0)
 ; Display any text added by external call
"RTN","LRUTIL3",76,0)
 I $D(ZZZMSG) D  ;
"RTN","LRUTIL3",77,0)
 . Q:QUIET
"RTN","LRUTIL3",78,0)
 . I '$D(XPDNM) D EN^DDIOL(.ZZZMSG)
"RTN","LRUTIL3",79,0)
 . I $D(XPDNM) D MES^LRUTIL2(.ZZZMSG,$G(CONFIG("CJ")),$G(CONFIG("LM")))
"RTN","LRUTIL3",80,0)
 ;
"RTN","LRUTIL3",81,0)
 I 'QUIET I MORE D MORE^LRUTIL($$TRIM^XLFSTR($$CJ^XLFSTR("Press 'ENTER' to continue",$G(IOM,80)," "),"R"," "),1)
"RTN","LRUTIL3",82,0)
 Q ERRNUM
"RTN","LRUTIL3",83,0)
 ;
"RTN","LRUTIL3",84,0)
ADDNODE(ARR,TXT,FMT) ;
"RTN","LRUTIL3",85,0)
 ; Private helper method for FMERR above.
"RTN","LRUTIL3",86,0)
 ; Kills the FMT array when done.
"RTN","LRUTIL3",87,0)
 ; Inputs
"RTN","LRUTIL3",88,0)
 ;  ARR:<byref> Target array (See Outputs)
"RTN","LRUTIL3",89,0)
 ;  TXT:<byval><byref> Text to add to target array.
"RTN","LRUTIL3",90,0)
 ;  FMT:<byref><opt> Format array
"RTN","LRUTIL3",91,0)
 ;     :  FMT(1)="!!"
"RTN","LRUTIL3",92,0)
 ; Outputs
"RTN","LRUTIL3",93,0)
 ;  ARR: The modified array.
"RTN","LRUTIL3",94,0)
 N I,J
"RTN","LRUTIL3",95,0)
 I $G(TXT)'="" D  ;
"RTN","LRUTIL3",96,0)
 . S J=$O(ARR("A"),-1)+1
"RTN","LRUTIL3",97,0)
 . S ARR(J)=TXT
"RTN","LRUTIL3",98,0)
 . I $D(FMT(0)) S ARR(J,"F")=FMT(0)
"RTN","LRUTIL3",99,0)
 ;
"RTN","LRUTIL3",100,0)
 S I=0
"RTN","LRUTIL3",101,0)
 F  S I=$O(TXT(I)) Q:'I  D  ;
"RTN","LRUTIL3",102,0)
 . S J=$O(ARR("A"),-1)+1
"RTN","LRUTIL3",103,0)
 . S ARR(J)=TXT(I)
"RTN","LRUTIL3",104,0)
 . I $D(FMT(I)) S ARR(J,"F")=FMT(I)
"RTN","LRUTIL3",105,0)
 K FMT
"RTN","LRUTIL3",106,0)
 Q
"RTN","LRUTIL3",107,0)
 ;
"RTN","LRUTIL3",108,0)
PRXYUSR(SUFFIX,CREATE) ;
"RTN","LRUTIL3",109,0)
 ;CREATE^XUSAP/4677
"RTN","LRUTIL3",110,0)
 ; Returns IEN of Lab Application Proxy (HL7, POC, TASKMAN) user.
"RTN","LRUTIL3",111,0)
 ; If Proxy user doesnt exist, will create.
"RTN","LRUTIL3",112,0)
 ; Inputs
"RTN","LRUTIL3",113,0)
 ;   SUFFIX:"LRLAB," suffix  ie HL7, POC, TASKMAN
"RTN","LRUTIL3",114,0)
 ;   CREATE:<opt> Create user when needed? 0=no 1=yes <dflt>=no
"RTN","LRUTIL3",115,0)
 ; Outputs
"RTN","LRUTIL3",116,0)
 ;  Returns the IEN of the proxy user or 0 with error code+message
"RTN","LRUTIL3",117,0)
 ;
"RTN","LRUTIL3",118,0)
 N IEN,DIC,DA,DIE,SUB,X,I,NAME,ISPRXY,R200
"RTN","LRUTIL3",119,0)
 N LRFDA,LRIEN,LRIENS,LRMSG,LRTARG,DIERR
"RTN","LRUTIL3",120,0)
 S SUFFIX=$G(SUFFIX)
"RTN","LRUTIL3",121,0)
 S CREATE=$G(CREATE)
"RTN","LRUTIL3",122,0)
 I "^HL^POC^TASKMAN^"'[("^"_SUFFIX_"^") Q "0^1^Invalid suffix."
"RTN","LRUTIL3",123,0)
 S NAME="LRLAB,"_SUFFIX
"RTN","LRUTIL3",124,0)
 ; Use FIND instead of FIND1 in case there's more than one entry
"RTN","LRUTIL3",125,0)
 ; so we avoid creating duplicate entries.
"RTN","LRUTIL3",126,0)
 K LRTARG,LRMSG,DIERR
"RTN","LRUTIL3",127,0)
 D FIND^DIC(200,"","@","X",NAME,"B",,,,"LRTARG","LRMSG")
"RTN","LRUTIL3",128,0)
 S X=$G(LRTARG("DILIST",0))
"RTN","LRUTIL3",129,0)
 S X=$P(X,"^",1) ;# of matches
"RTN","LRUTIL3",130,0)
 I 'X D  Q IEN
"RTN","LRUTIL3",131,0)
 . I 'CREATE S IEN="0^3^Create not enabled." Q
"RTN","LRUTIL3",132,0)
 . I "^LRLAB,HL^LRLAB,POC^LRLAB,TASKMAN^"'[("^"_NAME_"^") S IEN="0^4^Invalid proxy user" Q
"RTN","LRUTIL3",133,0)
 . S X=$$CREATE^XUSAP(NAME,"@",)
"RTN","LRUTIL3",134,0)
 . I X>0 S IEN=X Q
"RTN","LRUTIL3",135,0)
 . S IEN="0^5^$$CREATE error"
"RTN","LRUTIL3",136,0)
 ;
"RTN","LRUTIL3",137,0)
 ; Are any of the #200 matches set to "APP PROXY"
"RTN","LRUTIL3",138,0)
 S (I,IEN,ISPRXY)=0
"RTN","LRUTIL3",139,0)
 F  S I=$O(LRTARG("DILIST",2,I)) Q:'I  D  Q:ISPRXY  ;
"RTN","LRUTIL3",140,0)
 . N LRTARG2
"RTN","LRUTIL3",141,0)
 . S R200=LRTARG("DILIST",2,I)
"RTN","LRUTIL3",142,0)
 . K LRMSG,DIERR,LRTARG2
"RTN","LRUTIL3",143,0)
 . S X=","_R200_","
"RTN","LRUTIL3",144,0)
 . D FIND^DIC(200.07,X,"@","X","APPLICATION PROXY","B",,,,"LRTARG2","LRMSG")
"RTN","LRUTIL3",145,0)
 . S X=$G(LRTARG2("DILIST",0))
"RTN","LRUTIL3",146,0)
 . S X=$P(X,"^",1) ;# of matches
"RTN","LRUTIL3",147,0)
 . Q:'X
"RTN","LRUTIL3",148,0)
 . S (IEN,ISPRXY)=R200
"RTN","LRUTIL3",149,0)
 ;
"RTN","LRUTIL3",150,0)
 ; Sets #200 entry's field USER CLASS to "APPLICATION PROXY"
"RTN","LRUTIL3",151,0)
 ; File #200 update approved by Wally Fort (email 03/27/2006)
"RTN","LRUTIL3",152,0)
 I 'ISPRXY D  ;
"RTN","LRUTIL3",153,0)
 . K DIERR
"RTN","LRUTIL3",154,0)
 . S SUB="?+1,"_R200_","
"RTN","LRUTIL3",155,0)
 . S LRFDA(200.07,SUB,.01)="APPLICATION PROXY"
"RTN","LRUTIL3",156,0)
 . S LRFDA(200.07,SUB,2)=1
"RTN","LRUTIL3",157,0)
 . D UPDATE^DIE("E","LRFDA","LRIENS","LRMSG")
"RTN","LRUTIL3",158,0)
 . I $D(LRMSG) S IEN="0^2^Error while updating entry"
"RTN","LRUTIL3",159,0)
 Q IEN
"RTN","LRUWLF")
0^190^B10175468
"RTN","LRUWLF",1,0)
LRUWLF ;DALOI/STAFF - FILE #68 UTILITY ;12/03/09  18:16
"RTN","LRUWLF",2,0)
 ;;5.2;LAB SERVICE;**72,350**;Sep 27, 1994;Build 230
"RTN","LRUWLF",3,0)
 ;
"RTN","LRUWLF",4,0)
 ;
"RTN","LRUWLF",5,0)
EN ;
"RTN","LRUWLF",6,0)
 ;
"RTN","LRUWLF",7,0)
 S:'$D(LRCS) LRCS=""
"RTN","LRUWLF",8,0)
 ;
"RTN","LRUWLF",9,0)
STF ;
"RTN","LRUWLF",10,0)
 S:'$D(LRSIT) LRSIT=LRU S:'$D(LRSVC) LRSVC=""
"RTN","LRUWLF",11,0)
 ;
"RTN","LRUWLF",12,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,LRAN,0)=LRDFN_"^"_+LRDPF_"^"_LRRC_"^^^^"_LRLLOC_"^"_LRMD(1)_"^"_LRSVC_"^"_DUZ_"^"_LRCAPLOC
"RTN","LRUWLF",13,0)
 ;S ^(3)=LRSD_"^^"_LRRC_"^^"_LRI_"^"_LRC(5)
"RTN","LRUWLF",14,0)
 ;S ^(.2)=LRABV_" "_LRWHN_" "_LRAN
"RTN","LRUWLF",15,0)
 ;S ^(.4)=DUZ(2)
"RTN","LRUWLF",16,0)
 ;K LRSD
"RTN","LRUWLF",17,0)
 ;S ^LRO(68,LRAA,1,"AC",DUZ(2),LRAD,LRAN)=""
"RTN","LRUWLF",18,0)
 ;S ^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)=""
"RTN","LRUWLF",19,0)
 ;
"RTN","LRUWLF",20,0)
 S LRACC=LRABV_" "_LRWHN_" "_LRAN
"RTN","LRUWLF",21,0)
 ;
"RTN","LRUWLF",22,0)
 ; File information in file #68 for this accession
"RTN","LRUWLF",23,0)
 N LRFDA,LR6802,LRDIE
"RTN","LRUWLF",24,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRUWLF",25,0)
 S LRFDA(1,68.02,LR6802,.01)=LRDFN
"RTN","LRUWLF",26,0)
 S LRFDA(1,68.02,LR6802,1)=+LRDPF
"RTN","LRUWLF",27,0)
 S LRFDA(1,68.02,LR6802,2)=LRAD
"RTN","LRUWLF",28,0)
 S LRFDA(1,68.02,LR6802,6)=LRLLOC
"RTN","LRUWLF",29,0)
 ;
"RTN","LRUWLF",30,0)
 ; No ordering provider/location on controls
"RTN","LRUWLF",31,0)
 I LRDPF'=62.3 D
"RTN","LRUWLF",32,0)
 . S LRFDA(1,68.02,LR6802,6.5)=LRMD(1)
"RTN","LRUWLF",33,0)
 . ;S LRFDA(1,68.02,LR6802,94)=LROLLOC
"RTN","LRUWLF",34,0)
 ;
"RTN","LRUWLF",35,0)
 ; Only store treating specialty on file #2 patients
"RTN","LRUWLF",36,0)
 ; If no treating specialty then use specialty from file #44 location
"RTN","LRUWLF",37,0)
 I LRDPF=2 D
"RTN","LRUWLF",38,0)
 . N LRTREA
"RTN","LRUWLF",39,0)
 . S LRTREA=$P($G(^DPT(DFN,.103)),U)
"RTN","LRUWLF",40,0)
 . I 'LRTREA S LRTREA=$P($G(^SC(+LRLLOC,0)),U,20)
"RTN","LRUWLF",41,0)
 . I LRTREA S LRFDA(1,68.02,LR6802,6.6)=LRTREA
"RTN","LRUWLF",42,0)
 ;
"RTN","LRUWLF",43,0)
 S LRFDA(1,68.02,LR6802,6.7)=DUZ
"RTN","LRUWLF",44,0)
 S LRFDA(1,68.02,LR6802,9)=LRSD
"RTN","LRUWLF",45,0)
 S LRFDA(1,68.02,LR6802,12)=LRRC
"RTN","LRUWLF",46,0)
 S LRFDA(1,68.02,LR6802,13.5)=LRI
"RTN","LRUWLF",47,0)
 I LRC(5)'="" S LRFDA(1,68.02,LR6802,13.6)=LRC(5)
"RTN","LRUWLF",48,0)
 S LRFDA(1,68.02,LR6802,15)=LRACC
"RTN","LRUWLF",49,0)
 S LRFDA(1,68.02,LR6802,26)=DUZ(2)
"RTN","LRUWLF",50,0)
 S LRFDA(1,68.02,LR6802,92)=LRCAPLOC
"RTN","LRUWLF",51,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRUWLF",52,0)
 I $D(LRDIE(1)) D MAILALRT^LRWLST12("STF~LRUWLF")
"RTN","LRUWLF",53,0)
 ;
"RTN","LRUWLF",54,0)
 ; Create and store UID on accession.
"RTN","LRUWLF",55,0)
 S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","LRUWLF",56,0)
 ;
"RTN","LRUWLF",57,0)
 I LRSS="CY" D
"RTN","LRUWLF",58,0)
 . S ^LRO(69.2,LRAA,1,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRUWLF",59,0)
 . L +^LRO(69.2,LRAA,1):DILOCKTM
"RTN","LRUWLF",60,0)
 . S X=^LRO(69.2,LRAA,1,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRUWLF",61,0)
 . L -^LRO(69.2,LRAA,1)
"RTN","LRUWLF",62,0)
 Q
"RTN","LRUWLF",63,0)
 ;
"RTN","LRUWLF",64,0)
 ;
"RTN","LRUWLF",65,0)
EN1 ; add more tests ;used by LRUTAD
"RTN","LRUWLF",66,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) ^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)="^68.04PA^^"
"RTN","LRUWLF",67,0)
 W !
"RTN","LRUWLF",68,0)
 ;
"RTN","LRUWLF",69,0)
TST ;
"RTN","LRUWLF",70,0)
 K LRTEST
"RTN","LRUWLF",71,0)
 S DIC=60,DIC("A")="   Add Test/Procedure: ",DIC(0)="AEMOQZ",DIC("S")="I $P(^(0),U,4)=LRAA(2),$A($P(^(0),U,3))<78"
"RTN","LRUWLF",72,0)
 D ^DIC K DIC
"RTN","LRUWLF",73,0)
 I Y<1 S LRSIT="" Q
"RTN","LRUWLF",74,0)
 ;
"RTN","LRUWLF",75,0)
 S (LRTEST,Y)=+Y,LRTNAM=$P(Y,U,2)
"RTN","LRUWLF",76,0)
 S N=0
"RTN","LRUWLF",77,0)
 F  S N=$O(^LAB(60,LRTEST,1,N)) Q:'N  S LRTEST(1)=$S($D(^LAB(60,LRTEST,1,N,0)):+^LAB(60,LRTEST,1,N,0),1:"") Q:LRTEST(1)=LRSIT
"RTN","LRUWLF",78,0)
 I LRSS="CH",N<1 W $C(7),!!,"CANNOT ORDER ",LRTNAM," FOR ",$P(^LAB(61,LRSIT,0),U) G TST
"RTN","LRUWLF",79,0)
 D SUM
"RTN","LRUWLF",80,0)
 K LRRP
"RTN","LRUWLF",81,0)
 G TST
"RTN","LRUWLF",82,0)
 ;
"RTN","LRUWLF",83,0)
 ;
"RTN","LRUWLF",84,0)
SUM ;
"RTN","LRUWLF",85,0)
 ;
"RTN","LRUWLF",86,0)
 S N=0
"RTN","LRUWLF",87,0)
 F X=0:1 S N=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,N)) Q:'N  S:Y=N LRRP=1
"RTN","LRUWLF",88,0)
 Q:$D(LRRP)
"RTN","LRUWLF",89,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,Y,0)=LRTEST_"^^"
"RTN","LRUWLF",90,0)
 I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),"^",4)<1 S ^(0)="^68.04PA^"_Y_"^"_1 Q
"RTN","LRUWLF",91,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)="^68.04PA^"_Y_"^"_($P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),"^",4)+1)
"RTN","LRUWLF",92,0)
 ;
"RTN","LRUWLF",93,0)
 Q
"RTN","LRVER")
0^12^B43503691
"RTN","LRVER",1,0)
LRVER ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;11/23/11  12:08
"RTN","LRVER",2,0)
 ;;5.2;LAB SERVICE;**153,286,350**;Sep 27, 1994;Build 230
"RTN","LRVER",3,0)
 ;
"RTN","LRVER",4,0)
 D ^LRPARAM
"RTN","LRVER",5,0)
 S LRCW=8,LREND=0,LRPANEL=0,LRUID=""
"RTN","LRVER",6,0)
 K DIC,LRPER,DUOUT
"RTN","LRVER",7,0)
 D REV
"RTN","LRVER",8,0)
 I LREND D QUIT Q
"RTN","LRVER",9,0)
 D VERDIS
"RTN","LRVER",10,0)
 I LREND D QUIT Q
"RTN","LRVER",11,0)
 D CMTDSP^LRVERA
"RTN","LRVER",12,0)
 S (LRAA,LRAD,LRAN)=0
"RTN","LRVER",13,0)
 N LRVBY
"RTN","LRVER",14,0)
 S LRVBY=$$GET^XPAR("USR^DIV^PKG","LR VER EM VERIFY BY UID",1,"Q")
"RTN","LRVER",15,0)
 I LRVBY<2 S LRVBY=$$SELBY^LRWU4("Verify by",LRVBY+1)
"RTN","LRVER",16,0)
 D:LRVBY=1 ^LRVERA D:LRVBY=2 UID^LRVERA
"RTN","LRVER",17,0)
 I 'LRVBY!(LRAA<1) D QUIT Q
"RTN","LRVER",18,0)
 S X=$$SELPL^LRVERA(DUZ(2))
"RTN","LRVER",19,0)
 I X<1 D QUIT Q
"RTN","LRVER",20,0)
 I X'=DUZ(2) N LRDUZ S LRDUZ(2)=X
"RTN","LRVER",21,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D ^LRCAPV G QUIT:$G(LREND)
"RTN","LRVER",22,0)
SLOW S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVER",23,0)
 ;
"RTN","LRVER",24,0)
 I LRSS="MI" D  Q
"RTN","LRVER",25,0)
 . S X=DUZ D DUZ^LRX S LRTEC=LRUSI
"RTN","LRVER",26,0)
 . S LRPTP=-1,LRMIDEF=$P(^LAB(69.9,1,1),U,10),LRMIOTH=$P(^(1),U,11)
"RTN","LRVER",27,0)
 . D ^LRMIEDZ2,END^LRMIEDZ,QUIT
"RTN","LRVER",28,0)
 ;
"RTN","LRVER",29,0)
 ;
"RTN","LRVER",30,0)
 I LRSS'="CH" D QUIT Q
"RTN","LRVER",31,0)
 ;
"RTN","LRVER",32,0)
 ; The rest of the code only works on the "CH" area.
"RTN","LRVER",33,0)
DAT I LRAD<1 D ADATE^LRWU
"RTN","LRVER",34,0)
 Q:LRAD<1
"RTN","LRVER",35,0)
 S %H=$H-$P(^LAB(69.9,1,0),U,7) D YMD^%DTC S LRTM60=9999999-X
"RTN","LRVER",36,0)
 I LRAN>0 D WLN1 G QUIT:$G(LREND) G L11
"RTN","LRVER",37,0)
 I $P(^LRO(68,LRAA,0),U,3)="D" S I=0 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,I)) Q:I<1  I $D(^LRO(68,LRAA,1,LRAD,1,I,3)),'$P(^(3),U,4) S LRAN=I Q
"RTN","LRVER",38,0)
 S:$D(^LRO(68,LRAA,1,LRAD,2))&(LRAN<1) LRAN=$P(^(2),U,4)
"RTN","LRVER",39,0)
 ;
"RTN","LRVER",40,0)
L10 K LRTEST,LRSET,LRLDT,DIC,LRNAME,LRNG,LRDEL,T,LRTX,LRFP,LRAB,LRVERVER,Y,Z
"RTN","LRVER",41,0)
 G QUIT:$G(LREND) D WLN G QUIT:$G(LREND)
"RTN","LRVER",42,0)
 ;
"RTN","LRVER",43,0)
L11 I $D(LRFASTS) D ^LRVER1,SLOWK^LRFASTS Q
"RTN","LRVER",44,0)
 D ^LRVER1,NEXT
"RTN","LRVER",45,0)
 G L10
"RTN","LRVER",46,0)
 ;
"RTN","LRVER",47,0)
YN S DUOUT=0 S:'$D(%) %=1 D YN^DICN S:%<0 DUOUT=1 W:%=0 !,"Answer with a YES or NO or '^' to exit" Q:%  G YN
"RTN","LRVER",48,0)
 ;
"RTN","LRVER",49,0)
WLN I LRVBY=2 S:LRAN<1 LRUID="" S:$L(LRAN) LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^") D UID^LRVERA G LREND:LRUID="" G WLN1
"RTN","LRVER",50,0)
 ;
"RTN","LRVER",51,0)
 S:LRAN<1 LRAN=""
"RTN","LRVER",52,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","LRVER",53,0)
 S DIR(0)="NAO^1:999999:0"
"RTN","LRVER",54,0)
 S DIR("A")="Accession NUMBER: ",DIR("?")="^D LW^LRVR"
"RTN","LRVER",55,0)
 I LRAN'="" S DIR("B")=LRAN
"RTN","LRVER",56,0)
 D ^DIR K DIR
"RTN","LRVER",57,0)
 I $D(DIRUT) G LREND
"RTN","LRVER",58,0)
 S LRAN=Y
"RTN","LRVER",59,0)
 G WLN:LRAN=""
"RTN","LRVER",60,0)
WLN1 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"Accession does not exist." D NEXT G WLN
"RTN","LRVER",61,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRORD=$S($D(^(.1)):^(.1),1:0),LRODT=+$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=+$P(^(0),U,5)
"RTN","LRVER",62,0)
 S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVER",63,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRVER",64,0)
 W !,PNM,?30,SSN
"RTN","LRVER",65,0)
 W:LRDPF=2 "   LOC:",$S($L(LRWRD):LRWRD,1:$S($L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,7)):$P(^(0),U,7),1:"??"))
"RTN","LRVER",66,0)
 W !
"RTN","LRVER",67,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVER",68,0)
 ; If no lab arrival time then have user update order/accession
"RTN","LRVER",69,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) D
"RTN","LRVER",70,0)
 . N %DT,LRA1,LRA2,LRA3
"RTN","LRVER",71,0)
 . S %DT("B")=$$FMTE^XLFDT(LRCDT,"1")
"RTN","LRVER",72,0)
 . S LRSTATUS="C",LRA1=LRAA,LRA2=LRAD,LRA3=LRAN
"RTN","LRVER",73,0)
 . D P15^LROE1
"RTN","LRVER",74,0)
 . S LRAA=LRA1,LRAD=LRA2,LRAN=LRA3
"RTN","LRVER",75,0)
 . Q:LRCDT<1
"RTN","LRVER",76,0)
 . I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) S $P(^(3),U,3)=$$NOW^XLFDT
"RTN","LRVER",77,0)
 ; If user did not update then go to next accession
"RTN","LRVER",78,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) D NEXT G WLN
"RTN","LRVER",79,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVER",80,0)
 I $G(LRCDT)<1 S LRCDT=1 D NEXT G WLN
"RTN","LRVER",81,0)
 ; Check for valid pointer to file #63 and entry in file #63.
"RTN","LRVER",82,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRVER",83,0)
 I LRIDT<1 D  G WLN
"RTN","LRVER",84,0)
 . W !,">>>>ERROR - NO POINTER TO FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<<<<",!
"RTN","LRVER",85,0)
 . D NEXT
"RTN","LRVER",86,0)
 I '$D(^LR(LRDFN,"CH",LRIDT,0)) D  G WLN
"RTN","LRVER",87,0)
 . W !,">>>>ERROR - NO ENTRY IN FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<<<<",!
"RTN","LRVER",88,0)
 . D NEXT
"RTN","LRVER",89,0)
 I $D(^LRO(69,LRODT,1,LRSN)),'$D(^(LRSN,1)) W !,"This Order # has not been collected",$C(7) D NEXT G WLN
"RTN","LRVER",90,0)
 I $D(^LRO(69,LRODT,1,LRSN,1)),$P(^LRO(69,LRODT,1,LRSN,1),U,4)'="C" W !,"You cannot verify an accession which has not been collected.",$C(7) D NEXT G WLN
"RTN","LRVER",91,0)
 Q
"RTN","LRVER",92,0)
 ;
"RTN","LRVER",93,0)
 ;
"RTN","LRVER",94,0)
LREND I $D(^LRO(68,LRAA,1,LRAD,0)) S:'$D(^(2)) ^(2)="^^" S ^(2)=$P(^(2),U,1,3)_U_LRAN_U_$P(^(2),U,5,99)
"RTN","LRVER",95,0)
 S LREND=1 K ^TMP("LR",$J,"TMP"),LRORD,LRM
"RTN","LRVER",96,0)
 Q
"RTN","LRVER",97,0)
 ;
"RTN","LRVER",98,0)
 ;
"RTN","LRVER",99,0)
NEXT ;
"RTN","LRVER",100,0)
 S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN))
"RTN","LRVER",101,0)
 I LRAN<1 W !,"LAST IN WORK LIST" S LRAN="",LREND=1
"RTN","LRVER",102,0)
 Q
"RTN","LRVER",103,0)
 ;
"RTN","LRVER",104,0)
 ;
"RTN","LRVER",105,0)
QUIT ;
"RTN","LRVER",106,0)
 I $D(LRCSQ),'$O(^XTMP("LRCAP",LRCSQ,DUZ,0)) K ^XTMP("LRCAP",LRCSQ,DUZ),LRCSQ
"RTN","LRVER",107,0)
 I $D(LRCSQ),$D(LRAA),$P($G(^LRO(68,+LRAA,0)),U,16) D STD^LRCAPV
"RTN","LRVER",108,0)
 ;
"RTN","LRVER",109,0)
SLOQ ;
"RTN","LRVER",110,0)
 D STOP^LRCAPV,^LRCAPV2
"RTN","LRVER",111,0)
 K %,A,AGE,D1,DFN,DIC,DIE,DIR,DL,DLAYGO,DOB,DQ,DR,DX,I,J,LRACC,LRVF,LRCDT,LRCW,LRDAT,LRDFN,LRDPF,LRDV,LRDVF,LREAL,LREDIT,LREND,LRFLG,LRIDT,LRINI,LRLCT,LRLLOC,LRMETH,LRNG2,LRNG3,LRAD,LRAN,LRSPEC,LRPER,LRALL
"RTN","LRVER",112,0)
 K LRNG4,LRNG5,LRNT,LRNTN,LRNX,LRODT,LROUTINE,LROWLE,LRSAMP,LRSN,LRSS,LRSSP,LRSUB,LRTEC,LRTN,LRTS,LRUSI,LRUSNM,LRWRD,LRXD,LRXDP,PNM,S,SEX,SSN,X,X1,X2,X3,Y,Z
"RTN","LRVER",113,0)
 K %DT,%H,%X,%Y,B,C,D,DA,DR,G,G1,G2,G4,LRACD,LRAOD,LREDT,LREXEC,LRGVP,LRIOZERO,LRM,LRMA,LRNAME,LRORD,LRPLOC,LRSA,LRSB,LRSDT,LRSSQ,LRTK,LRTX,LRURG,LRVOL,LRVRM,LRWDTL,LRXDH,N,POP,T1,X9,Z1,Z2,^TMP("LR",$J)
"RTN","LRVER",114,0)
 K LRT,LRCFL,D0,GLB,LRAA,LRCNT,LRCODE,LRCODEN,LRCMTDSP,LRCWT,LRI,LRNOW,LRP,LRPN,LRQC,LRSSC,LRSSCX,LRSTD,NODE,NODE0,NOW,S2,ZTSK,Y,LRTIME,LRMAX2,LRMAXX,LRMX,LRODTSV,LRSNSV,LRSPN,LRTNSV,LRTY
"RTN","LRVER",115,0)
 K W,Y,Z,Z1,Z2,I1,LRALERT,LRDIYCNT,LRNOCODE,LRREP,LRSTATUS,LRUN,LRX,LRTIM,LRAL,LRPANEL,LRTM60,LRNDISP
"RTN","LRVER",116,0)
 D KVA^VADPT K LRIDIV,LROLLOC,LRORIFN,LRPRAC,LRRB,LRSD,LRTREA,LRTT,LRUID
"RTN","LRVER",117,0)
 K NAME,LRSUFO,LRCSQQ
"RTN","LRVER",118,0)
 Q
"RTN","LRVER",119,0)
 ;
"RTN","LRVER",120,0)
 ;
"RTN","LRVER",121,0)
REV ; Ask if user wants to review data before and after editing
"RTN","LRVER",122,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVER",123,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","LRVER",124,0)
 S DIR("A")="Do you want to review the data before and after you edit"
"RTN","LRVER",125,0)
 S DIR("?",1)="Answer YES, and the data will be displayed in its entirety as a panel before"
"RTN","LRVER",126,0)
 S DIR("?",2)="you edit if data already exists, and will be displayed after you edit."
"RTN","LRVER",127,0)
 S DIR("?")="NO, will skip the extra displays."
"RTN","LRVER",128,0)
 D ^DIR
"RTN","LRVER",129,0)
 I $D(DIRUT) S LREND=1
"RTN","LRVER",130,0)
 I Y=0 S LRPER=""
"RTN","LRVER",131,0)
 Q
"RTN","LRVER",132,0)
 ;
"RTN","LRVER",133,0)
 ;
"RTN","LRVER",134,0)
VERDIS ; Prevent test not selected by the user with verified data
"RTN","LRVER",135,0)
 ; entered from being displayed on the editing screens.
"RTN","LRVER",136,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVER",137,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRVER",138,0)
 S DIR("A")="Do you wish to see all previously verified results"
"RTN","LRVER",139,0)
 S DIR("?",1)="Do you want to see every test that has results entered"
"RTN","LRVER",140,0)
 S DIR("?",2)="or only the test(s) you select to edit "
"RTN","LRVER",141,0)
 S DIR("?")="Answer with YES or NO"
"RTN","LRVER",142,0)
 D ^DIR
"RTN","LRVER",143,0)
 I $D(DIRUT) S LREND=1
"RTN","LRVER",144,0)
 I Y=0 S LRNDISP=1
"RTN","LRVER",145,0)
 Q
"RTN","LRVER1")
0^160^B33061562
"RTN","LRVER1",1,0)
LRVER1 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;01/20/11  18:00
"RTN","LRVER1",2,0)
 ;;5.2;LAB SERVICE;**42,153,201,215,239,240,263,232,286,291,350**;Sep 27, 1994;Build 230
"RTN","LRVER1",3,0)
 ;
"RTN","LRVER1",4,0)
VER ; from LRGVP
"RTN","LRVER1",5,0)
 N LRBEY
"RTN","LRVER1",6,0)
 S LRLLOC=0,LRCW=8,LROUTINE=$P(^LAB(69.9,1,3),U,2) I $D(^LRO(69,LRODT,1,LRSN,0)) S LRLLOC=$P(^(0),U,7) S:'$L(LRLLOC) LRLLOC=0 W !,$P(^LRO(69,LRODT,1,LRSN,1),U,6)
"RTN","LRVER1",7,0)
 S LRCDT=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)):$P(^(3),U,1,2),1:$P(^(0),U,3)_U),LREAL=$P(LRCDT,U,2)
"RTN","LRVER1",8,0)
 S LRCDT=+LRCDT,LRSAMP=$S($D(^LRO(69,LRODT,1,LRSN,0)):$P(^(0),U,3),1:"")
"RTN","LRVER1",9,0)
 S LRIDT=$S($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5):$P(^(3),U,5),1:"")
"RTN","LRVER1",10,0)
 S:'LRIDT LRIDT=9999999-LRCDT
"RTN","LRVER1",11,0)
 ;
"RTN","LRVER1",12,0)
 ; Setup LRUID when called from LRGVP (group data review)
"RTN","LRVER1",13,0)
 I $G(LRUID)="" N LRUID S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVER1",14,0)
 ;
"RTN","LRVER1",15,0)
 D EXP
"RTN","LRVER1",16,0)
LD S LRSS="CH" ;ONLY WORKS FOR 'CH'
"RTN","LRVER1",17,0)
 S LRMETH=LRSS IF $D(^LR(LRDFN,LRSS,LRIDT,0)) S LRMETH=$P($P(^(0),U,8),";",1)
"RTN","LRVER1",18,0)
 W:$D(^LAB(62,+LRSAMP,0)) !,"Sample: ",$P(^(0),U)
"RTN","LRVER1",19,0)
 K ^TMP("LR",$J,"TMP"),LRORD,LRM
"RTN","LRVER1",20,0)
 D ^LRVER2
"RTN","LRVER1",21,0)
 K LRDL
"RTN","LRVER1",22,0)
 Q
"RTN","LRVER1",23,0)
 ;
"RTN","LRVER1",24,0)
 ;
"RTN","LRVER1",25,0)
EXP ; Get the list of tests for this ACC. from LRGVG1
"RTN","LRVER1",26,0)
 ; Do not process tests which have been "NP" (not performed).
"RTN","LRVER1",27,0)
 N I,N,IX,LRNLT,T1,X
"RTN","LRVER1",28,0)
 K LRTEST,LRNAME,LRSM60
"RTN","LRVER1",29,0)
 S LRALERT=LROUTINE,N=0,I=0,IX=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0))
"RTN","LRVER1",30,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  D
"RTN","LRVER1",31,0)
 . S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0))
"RTN","LRVER1",32,0)
 . I 'X Q
"RTN","LRVER1",33,0)
 . I $P(X,"^",6)="*Not Performed" Q
"RTN","LRVER1",34,0)
 . S N=N+1,LRTEST(N)=I,LRNLT=$S($P(X,"^",2)>50:$P(X,U,9),1:$P(X,"^"))
"RTN","LRVER1",35,0)
 . I $P(X,"^",9),$P(X,"^")'=$P(X,"^",9),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$P(X,"^",9))) S LRNLT=$P(X,"^",9)
"RTN","LRVER1",36,0)
 . S LRTEST(N,"P")=LRNLT_U_$$NLT(LRNLT)
"RTN","LRVER1",37,0)
 . S LRAL=$P(X,U,2)#50
"RTN","LRVER1",38,0)
 . I LRAL S LRALERT=$S(LRAL<LRALERT:LRAL,1:LRALERT)
"RTN","LRVER1",39,0)
 ;
"RTN","LRVER1",40,0)
 S LRNTN=N
"RTN","LRVER1",41,0)
 F T1=1:1:N I $D(^LAB(60,+LRTEST(T1),0)) D
"RTN","LRVER1",42,0)
 . S LRTEST(T1)=LRTEST(T1)_U_^(0)
"RTN","LRVER1",43,0)
 . S LRNAME(T1)=$P(LRTEST(T1),U,2),LRNAME(T1,+LRTEST(T1))=""
"RTN","LRVER1",44,0)
 . S:$G(^(1,IX,3)) LRSM60(+$P(LRTEST(T1),";",2))=^(3)
"RTN","LRVER1",45,0)
 . D EX1
"RTN","LRVER1",46,0)
 K IX
"RTN","LRVER1",47,0)
 N X1,X
"RTN","LRVER1",48,0)
 S X=$P($H,","),X(1)=$P($H,",",2),I=0
"RTN","LRVER1",49,0)
 F  S I=$O(LRSM60(I)) Q:'I  S X1=X-LRSM60(I)_","_X(1),LRSM60(I)=9999999-$$HTFM^XLFDT(X1)
"RTN","LRVER1",50,0)
 Q
"RTN","LRVER1",51,0)
 ;
"RTN","LRVER1",52,0)
 ;
"RTN","LRVER1",53,0)
EX1 ; Expand the list of tests to edit.
"RTN","LRVER1",54,0)
 Q:'$D(LRTEST(T1))
"RTN","LRVER1",55,0)
 S X=LRTEST(T1),^TMP("LR",$J,"VTO",+X)=$P($P(X,U,6),";",2)
"RTN","LRVER1",56,0)
 S ^TMP("LR",$J,"VTO",+X,"P")=LRTEST(T1,"P"),S1=0,J=0
"RTN","LRVER1",57,0)
 D EX2
"RTN","LRVER1",58,0)
 K S1,J
"RTN","LRVER1",59,0)
 Q
"RTN","LRVER1",60,0)
 ;
"RTN","LRVER1",61,0)
EX2 ;
"RTN","LRVER1",62,0)
 S:'$D(LRCFL) LRCFL=""
"RTN","LRVER1",63,0)
 S LRSUB=$P(X,U,6)
"RTN","LRVER1",64,0)
 I $D(^LAB(60,+X,4)),$P(^(4),"^",2) S LRCFL=LRCFL_$P(^(4),"^",2)_U
"RTN","LRVER1",65,0)
 ;
"RTN","LRVER1",66,0)
 ; If atomic test then setup and quit
"RTN","LRVER1",67,0)
 I LRSUB'="" D  Q
"RTN","LRVER1",68,0)
 . S S2=$P(LRSUB,";",2)
"RTN","LRVER1",69,0)
 . D:'$D(^TMP("LR",$J,"TMP",S2)) ORD
"RTN","LRVER1",70,0)
 ;
"RTN","LRVER1",71,0)
 ; Explode panel tests
"RTN","LRVER1",72,0)
 ; Do not process tests which have been "NP" (not performed).
"RTN","LRVER1",73,0)
 S S1=S1+1,S1(S1)=X,S1(S1,1)=J
"RTN","LRVER1",74,0)
 S J=0
"RTN","LRVER1",75,0)
 F  S J=$O(^LAB(60,+S1(S1),2,J)) Q:J<1  D
"RTN","LRVER1",76,0)
 . S Y=+^(J,0),X=Y_U_^LAB(60,Y,0)
"RTN","LRVER1",77,0)
 . I $P($G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),4,Y,0)),"^",6)="*Not Performed" Q
"RTN","LRVER1",78,0)
 . D EX2
"RTN","LRVER1",79,0)
 S X=S1(S1),J=S1(S1,1),S1=S1-1
"RTN","LRVER1",80,0)
 Q
"RTN","LRVER1",81,0)
 ;
"RTN","LRVER1",82,0)
 ;
"RTN","LRVER1",83,0)
ORD ;
"RTN","LRVER1",84,0)
 ; LRNX is set by caller
"RTN","LRVER1",85,0)
 S LRNX=+$G(LRNX)+1,LRORD(LRNX)=S2
"RTN","LRVER1",86,0)
 S LRBEY($P(LRTEST(T1),U,1),S2)=""   ; CIDC
"RTN","LRVER1",87,0)
 S ^TMP("LR",$J,"TMP",S2)=+X
"RTN","LRVER1",88,0)
 ; If panel being exploded then set parent("P" node)
"RTN","LRVER1",89,0)
 ;  to file #60 test being exploded
"RTN","LRVER1",90,0)
 I $G(LRTEST(T1,"P")) D
"RTN","LRVER1",91,0)
 . I +LRTEST(T1)'=+LRTEST(T1,"P") S ^TMP("LR",$J,"TMP",S2,"P")=LRTEST(T1,"P")_"!"_$$RNLT(+X)
"RTN","LRVER1",92,0)
 . E  S ^TMP("LR",$J,"TMP",S2,"P")=+LRTEST(T1)_U_$$NLT(+LRTEST(T1))_"!"_$$RNLT(+X)
"RTN","LRVER1",93,0)
 ;
"RTN","LRVER1",94,0)
 I $P(X,U,18) D
"RTN","LRVER1",95,0)
 . S LRM(S2)=+X
"RTN","LRVER1",96,0)
 . S LRM(S2,"P")=$G(^TMP("LR",$J,"TMP",S2,"P"))
"RTN","LRVER1",97,0)
 . S LRMX(+X)=""
"RTN","LRVER1",98,0)
 Q
"RTN","LRVER1",99,0)
 ;
"RTN","LRVER1",100,0)
 ;
"RTN","LRVER1",101,0)
NLT(X) ;
"RTN","LRVER1",102,0)
 N Y
"RTN","LRVER1",103,0)
 S Y=$S($P($G(^LAM(+$G(^LAB(60,+X,64)),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",104,0)
 Q Y
"RTN","LRVER1",105,0)
 ;
"RTN","LRVER1",106,0)
 ;
"RTN","LRVER1",107,0)
RNLT(X) ;
"RTN","LRVER1",108,0)
 I 'X Q ""
"RTN","LRVER1",109,0)
 N Y
"RTN","LRVER1",110,0)
 S Y(1)=+$P($G(^LAB(60,X,64)),U,2)
"RTN","LRVER1",111,0)
 S Y=$S($P($G(^LAM(Y(1),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",112,0)
 I Y S $P(Y,"!",2)=$$LNC(Y,$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",113,0)
 S $P(Y,"!",3)=$G(LRCDEF),$P(Y,"!",6)=X
"RTN","LRVER1",114,0)
 Q Y
"RTN","LRVER1",115,0)
 ;
"RTN","LRVER1",116,0)
 ;
"RTN","LRVER1",117,0)
LNC(LRNLT,LRCDEF,LRSPEC) ;reture the LOINC code for WKLD Code/Specimen
"RTN","LRVER1",118,0)
 ; Call with (nlt code,method suffix,test specimen)
"RTN","LRVER1",119,0)
 ; TA = Time Aspect
"RTN","LRVER1",120,0)
 N X,N,Y,LRSPECN,VAL,ERR,TA S X=""
"RTN","LRVER1",121,0)
 Q:'LRNLT X
"RTN","LRVER1",122,0)
 K LRMSGM
"RTN","LRVER1",123,0)
 S:$G(LRCDEF)="" LRCDEF="0000"
"RTN","LRVER1",124,0)
 I $P(LRCDEF,".",2) S LRCDEF=$P(LRCDEF,".",2)
"RTN","LRVER1",125,0)
 S LRCDEF=$S($P(LRNLT,".",2):$P(LRNLT,".",2),1:LRCDEF)
"RTN","LRVER1",126,0)
 I $L(LRCDEF)'=4 S LRCDEF=LRCDEF_$E("0000",$L(LRCDEF),($L(LRCDEF-4)))
"RTN","LRVER1",127,0)
 S LRCDEF=LRCDEF_" "
"RTN","LRVER1",128,0)
 S LRSPEC=+LRSPEC
"RTN","LRVER1",129,0)
 ;Get time aspect from 61
"RTN","LRVER1",130,0)
 S TA=$$GET1^DIQ(61,LRSPEC_",",.0961,"I")
"RTN","LRVER1",131,0)
 S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",132,0)
 S LRNLT=$P(LRNLT,".")_"."
"RTN","LRVER1",133,0)
 ;Check for WKLD CODE_LOAD/WORK LIST method suffix
"RTN","LRVER1",134,0)
 S VAL(1)=LRNLT_LRCDEF
"RTN","LRVER1",135,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",136,0)
 ;Looking for specimen specific LOINC
"RTN","LRVER1",137,0)
 I N,LRSPEC D  I X D MSG(1) Q X
"RTN","LRVER1",138,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",139,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",140,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",141,0)
 ;Looking LOINC default
"RTN","LRVER1",142,0)
 I N S X=$$LDEF(N) I X D MSG(2) Q X
"RTN","LRVER1",143,0)
 I LRCDEF="0000 " Q ""
"RTN","LRVER1",144,0)
 ;Looking for WKLD CODE_GENERIC suffix
"RTN","LRVER1",145,0)
 K VAL
"RTN","LRVER1",146,0)
 S VAL(1)=LRNLT_"0000 "
"RTN","LRVER1",147,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",148,0)
 I 'N Q ""
"RTN","LRVER1",149,0)
 ;Looking for WKLD CODE_GENERIC specimen specific LOINC
"RTN","LRVER1",150,0)
 I LRSPEC D  I X D MSG(3) Q X
"RTN","LRVER1",151,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",152,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",153,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",154,0)
 ;Looking for WKLD CODE_GENERIC default LOINC
"RTN","LRVER1",155,0)
 I 'X,N S X=$$LDEF(N) I X D MSG(4)
"RTN","LRVER1",156,0)
 I 'X S X=""
"RTN","LRVER1",157,0)
 Q X
"RTN","LRVER1",158,0)
 ;
"RTN","LRVER1",159,0)
 ;
"RTN","LRVER1",160,0)
LDEF(Y) ;Find the default LOINC code for WKLD CODE
"RTN","LRVER1",161,0)
 I 'Y Q ""
"RTN","LRVER1",162,0)
 S X=$$GET1^DIQ(64,Y_",",25,"I")
"RTN","LRVER1",163,0)
 I 'X S X=""
"RTN","LRVER1",164,0)
 Q X
"RTN","LRVER1",165,0)
 ;
"RTN","LRVER1",166,0)
 ;
"RTN","LRVER1",167,0)
TMPSB(LRSB) ; Get LOINC code from ^TMP("LR",$J,"TMP",LRSB,"P")
"RTN","LRVER1",168,0)
 S NODE=$G(^TMP("LR",$J,"TMP",LRSB,"P"))
"RTN","LRVER1",169,0)
 I 'NODE Q ""
"RTN","LRVER1",170,0)
 S $P(NODE,"!",3)=$$LNC($P(NODE,"!",2),$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",171,0)
 S $P(NODE,"!",4)=$G(LRCDEF)
"RTN","LRVER1",172,0)
 Q $P(NODE,U,2)
"RTN","LRVER1",173,0)
 ;
"RTN","LRVER1",174,0)
 ;
"RTN","LRVER1",175,0)
MSG(VAL) ;Set output message
"RTN","LRVER1",176,0)
 Q:'$G(LRMSG)
"RTN","LRVER1",177,0)
 S LRMSGM="0-No LOINC Code Defined for "_LRNLT_LRCDEF
"RTN","LRVER1",178,0)
 N TANAME
"RTN","LRVER1",179,0)
 I $G(TA) S TANAME=$$GET1^DIQ(64.061,TA_",",.01,"E") ;TA Name
"RTN","LRVER1",180,0)
 I VAL=1 S LRMSGM="1-"_LRNLT_$E(LRCDEF,1,4)_" - "_LRSPECN
"RTN","LRVER1",181,0)
 I VAL=2 S LRMSGM="2-"_LRNLT_$E(LRCDEF,1,4)_" - Default LOINC"
"RTN","LRVER1",182,0)
 I VAL=3 S LRMSGM="3-"_LRNLT_"0000 - "_LRSPECN
"RTN","LRVER1",183,0)
 I VAL=4 S LRMSGM="4-"_LRNLT_"0000 - Default LOINC"
"RTN","LRVER1",184,0)
 I $G(TA) S LRMSGM=LRMSGM_" Time Aspect "_TANAME
"RTN","LRVER1",185,0)
 W:$G(LRDBUG) !,LRMSGM,!
"RTN","LRVER1",186,0)
 Q
"RTN","LRVER3")
0^77^B75732733
"RTN","LRVER3",1,0)
LRVER3 ;DALOI/STAFF - DATA VERIFICATION ;05/10/11  13:50
"RTN","LRVER3",2,0)
 ;;5.2;LAB SERVICE;**42,100,121,140,171,153,221,286,291,406,350**;Sep 27, 1994;Build 230
"RTN","LRVER3",3,0)
 ;
"RTN","LRVER3",4,0)
 D V1
"RTN","LRVER3",5,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER) K LRLOCKER
"RTN","LRVER3",6,0)
 Q
"RTN","LRVER3",7,0)
 ;
"RTN","LRVER3",8,0)
 ;
"RTN","LRVER3",9,0)
V1 ;
"RTN","LRVER3",10,0)
 ;
"RTN","LRVER3",11,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER)
"RTN","LRVER3",12,0)
 S LRLOCKER="^LR("_LRDFN_","""_LRSS_""","_LRIDT_")"
"RTN","LRVER3",13,0)
 D LOCK^DILF(LRLOCKER) ; L +@(LRLOCKER):DILOCKTM
"RTN","LRVER3",14,0)
 I '$T W !," This entry is being edited by someone else." Q
"RTN","LRVER3",15,0)
 ;
"RTN","LRVER3",16,0)
 I $D(LRGVP) S X="1-"_LRNTN D RANGE^LRWU2 G L10
"RTN","LRVER3",17,0)
 S LRALL="",LRALERT=LROUTINE,LRLCT=6
"RTN","LRVER3",18,0)
 ;
"RTN","LRVER3",19,0)
 ; List any not performed tests.
"RTN","LRVER3",20,0)
 S I=0
"RTN","LRVER3",21,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<1  D
"RTN","LRVER3",22,0)
 . S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0))
"RTN","LRVER3",23,0)
 . I $P(LRX,"^",6)'="*Not Performed" Q
"RTN","LRVER3",24,0)
 . W !,?3,$P(^LAB(60,I,0),"^"),?25," ",$P(LRX,"^",6)
"RTN","LRVER3",25,0)
 . S LRLCT=LRLCT+1 D:LRLCT>22 WT^LRVER4
"RTN","LRVER3",26,0)
 ;
"RTN","LRVER3",27,0)
 ; No tests to edit
"RTN","LRVER3",28,0)
 I LRNTN=0 D COM^LRVR4 G EXIT
"RTN","LRVER3",29,0)
 ;
"RTN","LRVER3",30,0)
 F I=1:1:LRNTN I $D(LRNAME(I)) D
"RTN","LRVER3",31,0)
 . S LRALL=LRALL_","_I W !,I,"  ",LRNAME(I)
"RTN","LRVER3",32,0)
 . I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$O(LRNAME(I,0)),0))#2 D
"RTN","LRVER3",33,0)
 . . S LRX=^LRO(68,LRAA,1,LRAD,1,LRAN,4,$O(LRNAME(I,0)),0)
"RTN","LRVER3",34,0)
 . . S LRAL=$P(LRX,U,2)#50
"RTN","LRVER3",35,0)
 . . I $P(LRX,U,5) W ?25,$S($P(LRX,U,6)'="":$P(LRX,U,6),1:" verified")
"RTN","LRVER3",36,0)
 . . I LRAL S LRALERT=$S(LRAL<LRALERT:LRAL,1:LRALERT)
"RTN","LRVER3",37,0)
 . S LRLCT=LRLCT+1 D:LRLCT>22 WT^LRVER4
"RTN","LRVER3",38,0)
 ;
"RTN","LRVER3",39,0)
 I $D(LRALERT),LRALERT<($P(LRPARAM,U,20)+1) D
"RTN","LRVER3",40,0)
 . W !?15 W:IOST["C-" @LRVIDO
"RTN","LRVER3",41,0)
 . W "Test ordered "_$P($G(^LAB(62.05,+LRALERT,0)),U)
"RTN","LRVER3",42,0)
 . W:IOST["C-" @LRVIDOF W !,$C(7)
"RTN","LRVER3",43,0)
 ;
"RTN","LRVER3",44,0)
 S X9="" I LRNTN=1 S T1=1 G L10
"RTN","LRVER3",45,0)
V9 S LRALL=$P(LRALL,",",2,99)
"RTN","LRVER3",46,0)
 R !!,"TEST #(s) (or ""ALL""): ",X:DTIME S:'$T X=U S:X["A" X=LRALL
"RTN","LRVER3",47,0)
 I X["?" W !,"Enter for example 1,2,5-9." G V9
"RTN","LRVER3",48,0)
 Q:X[U!(X="")  D RANGE^LRWU2 G EXIT:X9="" X (X9_"S:'$D(LRNAME(T1)) X=0") G EXIT:X=0
"RTN","LRVER3",49,0)
 ;
"RTN","LRVER3",50,0)
L10 ;
"RTN","LRVER3",51,0)
 N LRCORECT S LRCORECT=0
"RTN","LRVER3",52,0)
 S LRNX=0 X (X9_"D EX1^LRVER1")
"RTN","LRVER3",53,0)
 ;
"RTN","LRVER3",54,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRVER3",55,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVER3",56,0)
 D V7^LRVER2
"RTN","LRVER3",57,0)
 ;
"RTN","LRVER3",58,0)
 S LRCMTDSP=$$CHKCDSP^LRVERA
"RTN","LRVER3",59,0)
 K LRSA,LRSB,LRORU3
"RTN","LRVER3",60,0)
 F LRSB=1:0 S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:LRSB<1  D
"RTN","LRVER3",61,0)
 . S LRSB(LRSB)=^(LRSB),LRSB(LRSB,"P")=$P(LRSB(LRSB),U,3)
"RTN","LRVER3",62,0)
 . I $D(LRNOVER) S LRNOVER(LRSB)=""
"RTN","LRVER3",63,0)
 S LREDIT=1
"RTN","LRVER3",64,0)
 D ^LRVER4
"RTN","LRVER3",65,0)
 ;
"RTN","LRVER3",66,0)
 ; If group data review then quit before updating results
"RTN","LRVER3",67,0)
 I $D(LRGVP) G EXIT
"RTN","LRVER3",68,0)
 ;
"RTN","LRVER3",69,0)
 I '$O(LRORD(0)) G EXIT
"RTN","LRVER3",70,0)
 ;
"RTN","LRVER3",71,0)
 ; Set reporting site in file #63.
"RTN","LRVER3",72,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVER3",73,0)
 ;
"RTN","LRVER3",74,0)
 I '$G(LRCHG),'LRVF D
"RTN","LRVER3",75,0)
 . N LRNOW S LRNOW=$$NOW^XLFDT
"RTN","LRVER3",76,0)
 . F LRSB=1:0 S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  I $P(LRSB(LRSB),"^")'="" D
"RTN","LRVER3",77,0)
 . . S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVER3",78,0)
 . . S ^LR(LRDFN,LRSS,LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVER3",79,0)
 ;
"RTN","LRVER3",80,0)
 I $G(LRCHG) D CHG K LRCHG,LRUP I $G(LREND) S LREND=0 D ASKXQA,EXIT Q
"RTN","LRVER3",81,0)
 ;
"RTN","LRVER3",82,0)
 I $D(LRSA),$D(LRF) D  Q
"RTN","LRVER3",83,0)
 . K LRF
"RTN","LRVER3",84,0)
 . S X=$P(^LR(LRDFN,LRSS,LRIDT,0),U,9)
"RTN","LRVER3",85,0)
 . S:$L(X)&($E(X)'["-") $P(^(0),U,9)="-"_X
"RTN","LRVER3",86,0)
 . D V11,ASKXQA
"RTN","LRVER3",87,0)
 ;
"RTN","LRVER3",88,0)
 ;G EXIT:$D(LRGVP),V11:LRVF&$D(LRSA),V1:LRVF&(LRNTN>1),EXIT:LRVF
"RTN","LRVER3",89,0)
 I $D(LRGVP) D EXIT Q
"RTN","LRVER3",90,0)
 I LRVF,$D(LRSA) D V11,ASKXQA Q
"RTN","LRVER3",91,0)
 I LRVF,LRNTN>1 D V1 Q
"RTN","LRVER3",92,0)
 I LRVF D ASKXQA,EXIT Q
"RTN","LRVER3",93,0)
 ;
"RTN","LRVER3",94,0)
NOVER ;
"RTN","LRVER3",95,0)
 I $O(LRNOVER(0)) D  G EXIT
"RTN","LRVER3",96,0)
 . N LRI,LRX
"RTN","LRVER3",97,0)
 . S LRI=1
"RTN","LRVER3",98,0)
 . F  S LRI=+$O(LRNOVER(LRI)) Q:LRI<2  D
"RTN","LRVER3",99,0)
 . . N LRX,LRERR
"RTN","LRVER3",100,0)
 . . S LRX="Test Not Reviewed: "_$$GET1^DID(63.04,LRI,"","LABEL","","LRERR")
"RTN","LRVER3",101,0)
 . . I $G(LRERR("DIERR",1)) W !,"For DATANAME "_LRI_" - "_LRERR("DIERR",1,"TEXT",1) Q
"RTN","LRVER3",102,0)
 . . W !,LRX
"RTN","LRVER3",103,0)
 . . I $D(LRSB(LRI))#2 W " = "_$P(LRSB(LRI),U)_" "_$P(LRSB(LRI),U,2)
"RTN","LRVER3",104,0)
 . W !,$$CJ^XLFSTR("The above test(s) have results already entered,",IOM)
"RTN","LRVER3",105,0)
 . W !,$$CJ^XLFSTR("but you did not select them for review.",IOM)
"RTN","LRVER3",106,0)
 . W !,$$CJ^XLFSTR(" Accession NOT approved. ",IOM),$C(7)
"RTN","LRVER3",107,0)
 . W !,$$CJ^XLFSTR("You must review all results before ANY can be released.",IOM),!!
"RTN","LRVER3",108,0)
 . W:$E(IOST,1,2)="C-" @LRVIDO
"RTN","LRVER3",109,0)
 . W $$CJ^XLFSTR("Suggest you select 'ALL' tests for verification/review. ",IOM)
"RTN","LRVER3",110,0)
 . W:$E(IOST,1,2)="C-" @LRVIDOF W !,$C(7)
"RTN","LRVER3",111,0)
 I $O(LRNOVER(0)) W !,"Has not been reviewed and have data.  Not approved.",! G EXIT
"RTN","LRVER3",112,0)
 I '$P($G(LRLABKY),U) W !,$C(7),"ENTERED BUT NOT APPROVED",! G EXIT
"RTN","LRVER3",113,0)
 I '$O(LRSB(0)) W !?5,"Nothing verified ",$C(7),! G EXIT
"RTN","LRVER3",114,0)
 N CNT S CNT=1
"RTN","LRVER3",115,0)
 ;
"RTN","LRVER3",116,0)
AGAIN ;
"RTN","LRVER3",117,0)
 R !,"Approve for release by entering your initials: ",LRINI:DTIME
"RTN","LRVER3",118,0)
 I $E(LRINI)="^" W !!?5,$C(7),"Nothing verified!" D READ G EXIT
"RTN","LRVER3",119,0)
 I LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVER3",120,0)
 I $S($E(LRINI)="?":1,LRINI'=LRUSI&(CNT<2):1,1:0) W !,$C(7),"Please enter your correct initials" S:$E(LRINI)="?" CNT=0 S CNT=CNT+1 G AGAIN
"RTN","LRVER3",121,0)
 I LRINI'=LRUSI W !!?5,$C(7),"Nothing verified!" D READ G EXIT
"RTN","LRVER3",122,0)
 D V11
"RTN","LRVER3",123,0)
 D ASKXQA
"RTN","LRVER3",124,0)
 Q
"RTN","LRVER3",125,0)
 ;
"RTN","LRVER3",126,0)
 ;
"RTN","LRVER3",127,0)
V11 ;
"RTN","LRVER3",128,0)
 I $D(XRTL) D T0^%ZOSV ; START RESPONSE TIME LOGGING
"RTN","LRVER3",129,0)
 I +LRDPF=2&($G(LRSS)'="BB")&('$$CHKINP^LRBEBA4(LRDFN,LRODT)) D
"RTN","LRVER3",130,0)
 .D BAWRK^LRBEBA(LRODT,LRSN,1,.LRBEY,.LRTEST)
"RTN","LRVER3",131,0)
 D VER^LRVER3A
"RTN","LRVER3",132,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D LOOK^LRCAPV1
"RTN","LRVER3",133,0)
 N LRX
"RTN","LRVER3",134,0)
 S LRX=0
"RTN","LRVER3",135,0)
 F  S LRX=$O(^TMP("LR",$J,"TMP",LRX)) Q:LRX<1  S:'$D(^LRO(68,"AC",LRDFN,LRIDT,LRX)) ^(LRX)="" I LRVF S ^(LRX)=""
"RTN","LRVER3",136,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3
"RTN","LRVER3",137,0)
 I $D(XRT0) S XRTN="V11^LRVER3" D T1^%ZOSV ; STOP RESPONSE TIME LOGGING
"RTN","LRVER3",138,0)
 S LRVF=1
"RTN","LRVER3",139,0)
 Q
"RTN","LRVER3",140,0)
 ;
"RTN","LRVER3",141,0)
 ;
"RTN","LRVER3",142,0)
EXIT Q
"RTN","LRVER3",143,0)
 ;
"RTN","LRVER3",144,0)
 ;
"RTN","LRVER3",145,0)
READ ;
"RTN","LRVER3",146,0)
 N X W !!,"Press ENTER or RETURN to continue: " R X:DTIME
"RTN","LRVER3",147,0)
 Q
"RTN","LRVER3",148,0)
 ;
"RTN","LRVER3",149,0)
 ;
"RTN","LRVER3",150,0)
CHG ; Check for changes, save results and create audit trail
"RTN","LRVER3",151,0)
 N LRNOW
"RTN","LRVER3",152,0)
 S LRUP="",LRNOW=$$NOW^XLFDT
"RTN","LRVER3",153,0)
  F  S LRCHG=$O(LRSB(LRCHG)) Q:LRCHG<1  D
"RTN","LRVER3",154,0)
 . I '$D(LRSA(LRCHG)) S LRUP=1 Q
"RTN","LRVER3",155,0)
 . I $P(LRSA(LRCHG),"^")=""!($P(LRSA(LRCHG),"^")="pending") D  Q   ; Update user/release time/performing lab if results entered.
"RTN","LRVER3",156,0)
 . . S LRSA(LRCHG,3)=1
"RTN","LRVER3",157,0)
 . . S LRUP=1
"RTN","LRVER3",158,0)
 . . S $P(LRSB(LRCHG),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER3",159,0)
 . . S $P(LRSB(LRCHG),U,6)=LRNOW
"RTN","LRVER3",160,0)
 . . S $P(LRSB(LRCHG),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER3",161,0)
 . I $P(LRSA(LRCHG),"^")'=$P(LRSB(LRCHG),"^") S LRUP=1,$P(LRSA(LRCHG,2),"^")=1 ; results changed
"RTN","LRVER3",162,0)
 . I $P(LRSA(LRCHG),"^",2)'=$P(LRSB(LRCHG),"^",2) S LRUP=1,$P(LRSA(LRCHG,2),"^",2)=1 ; normalcy flag changed
"RTN","LRVER3",163,0)
 . I $P(LRSA(LRCHG),"^",5)'=$P(LRSB(LRCHG),"^",5) D  ; units/normals changed
"RTN","LRVER3",164,0)
 . . N LRX,LRY
"RTN","LRVER3",165,0)
 . . S LRX=$$UP^XLFSTR($P(LRSA(LRCHG),"^",5)),LRX=$TR(LRX,"""")
"RTN","LRVER3",166,0)
 . . S LRY=$$UP^XLFSTR($P(LRSB(LRCHG),"^",5)),LRY=$TR(LRY,"""")
"RTN","LRVER3",167,0)
 . . I LRX'=LRY S LRUP=1,$P(LRSA(LRCHG,2),"^",5)=1
"RTN","LRVER3",168,0)
 . I $D(LRSA(LRCHG,2)) D  ; Update user/release time/performing lab if results changed.
"RTN","LRVER3",169,0)
 . . S $P(LRSB(LRCHG),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER3",170,0)
 . . S $P(LRSB(LRCHG),U,6)=LRNOW
"RTN","LRVER3",171,0)
 . . S $P(LRSB(LRCHG),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER3",172,0)
 I 'LRUP S LREND=1 Q
"RTN","LRVER3",173,0)
 S LREND=0
"RTN","LRVER3",174,0)
 W !! W:IOST["C-" @LRVIDO W "Approve update of data by entering your initials: " W:IOST["C-" @LRVIDOF
"RTN","LRVER3",175,0)
 R LRINI:DTIME
"RTN","LRVER3",176,0)
 I '$T S LREND=1
"RTN","LRVER3",177,0)
 I 'LREND,LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVER3",178,0)
 I LRINI'=LRUSI S LREND=1
"RTN","LRVER3",179,0)
 I LREND W !,$C(7),"No updating occurred ",! Q
"RTN","LRVER3",180,0)
 ;
"RTN","LRVER3",181,0)
 F LRSB=1:0 S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D
"RTN","LRVER3",182,0)
 . K:'$D(^LR(LRDFN,LRSS,LRIDT,LRSB)) LRSA(LRSB)
"RTN","LRVER3",183,0)
 . I $P(LRSB(LRSB),"^")'="" S ^LR(LRDFN,LRSS,LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVER3",184,0)
 . I $D(LRSA(LRSB,1)),$D(LRSA(LRSB,2)) D DIDLE
"RTN","LRVER3",185,0)
 ;
"RTN","LRVER3",186,0)
 W !!
"RTN","LRVER3",187,0)
 Q
"RTN","LRVER3",188,0)
 ;
"RTN","LRVER3",189,0)
 ;
"RTN","LRVER3",190,0)
DIDLE ;
"RTN","LRVER3",191,0)
 ; Check if no previous result or pending result - no audit trail needed
"RTN","LRVER3",192,0)
 I $P(LRSA(LRSB),"^")=""!($P(LRSA(LRSB),"^")="pending") Q
"RTN","LRVER3",193,0)
 ;
"RTN","LRVER3",194,0)
 S LRF=1
"RTN","LRVER3",195,0)
 L +^LR(LRDFN,LRSS,LRIDT):DILOCKTM+999
"RTN","LRVER3",196,0)
NOW ;
"RTN","LRVER3",197,0)
 N LRNOW7
"RTN","LRVER3",198,0)
 S LRNOW7=$S($G(LRNOW):LRNOW,1:$$NOW^XLFDT)
"RTN","LRVER3",199,0)
 W !
"RTN","LRVER3",200,0)
 D ^LRDIDLE0
"RTN","LRVER3",201,0)
 I 'LROK K LRSA
"RTN","LRVER3",202,0)
 L -^LR(LRDFN,LRSS,LRIDT)
"RTN","LRVER3",203,0)
 S LRCORECT=1
"RTN","LRVER3",204,0)
 Q
"RTN","LRVER3",205,0)
 ;
"RTN","LRVER3",206,0)
 ;
"RTN","LRVER3",207,0)
RONLT ; (R)esolve (O)rder NLT code from file #68 original ordered test or
"RTN","LRVER3",208,0)
 ; use default when not specified for file #60 test.
"RTN","LRVER3",209,0)
 ;
"RTN","LRVER3",210,0)
 N LR60,LRX,LRY,X
"RTN","LRVER3",211,0)
 S LR60=+LRTS,LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVER3",212,0)
 ;
"RTN","LRVER3",213,0)
 ; Try to determine order NLT from original ordered test
"RTN","LRVER3",214,0)
 F  Q:'LR60  D
"RTN","LRVER3",215,0)
 . S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LR60,0)),LR60=+$P(LRX,"^",9)
"RTN","LRVER3",216,0)
 . I LR60,LR60'=$P(LRX,"^") D
"RTN","LRVER3",217,0)
 . . S X=$$NLT^LRVER1(LR60)
"RTN","LRVER3",218,0)
 . . I X'="" S $P(LRY,"!")=X
"RTN","LRVER3",219,0)
 . I LR60=$P(LRX,"^") S LR60=0
"RTN","LRVER3",220,0)
 ;
"RTN","LRVER3",221,0)
 ; Otherwise use default for lab package
"RTN","LRVER3",222,0)
 I $P(LRY,"!")="" S $P(LRY,"!")=$P($$DEFCODE^LA7VHLU5(LRSS,LRSB,LRY,+LRSPEC),"!")
"RTN","LRVER3",223,0)
 ;
"RTN","LRVER3",224,0)
 S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVER3",225,0)
 ;
"RTN","LRVER3",226,0)
 Q
"RTN","LRVER3",227,0)
 ;
"RTN","LRVER3",228,0)
 ;
"RTN","LRVER3",229,0)
LRORU3 ;
"RTN","LRVER3",230,0)
SET ;
"RTN","LRVER3",231,0)
 N LR64,LR7V,LRDN,LROTA,LRT,LRTPN,LRTPNN,LRTYPE,X
"RTN","LRVER3",232,0)
 ;
"RTN","LRVER3",233,0)
 ; Go through LRSB array and sort results by order NLT code
"RTN","LRVER3",234,0)
 ; and put into ordered test array (LROTA).
"RTN","LRVER3",235,0)
 S LRDN=0
"RTN","LRVER3",236,0)
 F  S LRDN=$O(LRSB(LRDN)) Q:'LRDN  D
"RTN","LRVER3",237,0)
 . I $P(LRSB(LRDN),"^")="" Q
"RTN","LRVER3",238,0)
 . S LRTPNN=$P($P(LRSB(LRDN),U,3),"!"),LRT=+$G(^TMP("LR",$J,"TMP",LRDN))
"RTN","LRVER3",239,0)
 . I LRTPNN="" Q
"RTN","LRVER3",240,0)
 . S LRTYPE=$P($G(^LAB(60,LRT,0)),U,3)
"RTN","LRVER3",241,0)
 . I LRTYPE=""!("OB"'[LRTYPE) Q
"RTN","LRVER3",242,0)
 . S LROTA(LRTPNN,LRDN)=LRT
"RTN","LRVER3",243,0)
 . I $D(LRSA(LRDN,2)) S LROTA(LRTPNN,LRDN,1)="C"
"RTN","LRVER3",244,0)
 ;
"RTN","LRVER3",245,0)
 ; For each order NLT code setup call to put results into #62.49 queue
"RTN","LRVER3",246,0)
 S LRTPNN=""
"RTN","LRVER3",247,0)
 F  S LRTPNN=$O(LROTA(LRTPNN)) Q:LRTPNN=""  D
"RTN","LRVER3",248,0)
 . S LR64=+$O(^LAM("C",LRTPNN_" ",0)),LRTPN=$$GET1^DIQ(64,LR64_",",.01)
"RTN","LRVER3",249,0)
 . K LR7V
"RTN","LRVER3",250,0)
 . M LR7V=LROTA(LRTPNN)
"RTN","LRVER3",251,0)
 . D SET^LA7VMSG($P(LRORU3,U,4),$P(LRORU3,U,2),$P(LRORU3,U,5),$P(LRORU3,U,3),LRTPN,LRTPNN,LRIDT,LRSS,LRDFN,LRODT,.LR7V,"ORU")
"RTN","LRVER3",252,0)
 Q
"RTN","LRVER3",253,0)
 ;
"RTN","LRVER3",254,0)
 ;
"RTN","LRVER3",255,0)
ASKXQA ; Determine if user should be asked to send CPRS Alert
"RTN","LRVER3",256,0)
 ;
"RTN","LRVER3",257,0)
 N LRDEFAULT
"RTN","LRVER3",258,0)
 ;
"RTN","LRVER3",259,0)
 ; No CPRS alert for non-PATIENT file (#2) patients
"RTN","LRVER3",260,0)
 I +LRDPF'=2 Q
"RTN","LRVER3",261,0)
 ;
"RTN","LRVER3",262,0)
 S LRDEFAULT=$$GET^XPAR("USR^DIV^PKG","LR CH VERIFY CPRS ALERT",1,"Q")
"RTN","LRVER3",263,0)
 I LRDEFAULT>0 D ASKXQA^LR7ORB3(LRDFN,"CH",LRIDT,LRUID,LRDEFAULT)
"RTN","LRVER3",264,0)
 ;
"RTN","LRVER3",265,0)
 Q
"RTN","LRVER3A")
0^87^B25488291
"RTN","LRVER3A",1,0)
LRVER3A ;DALOI/FHS - DATA VERIFICATION ;Jun 27, 2008
"RTN","LRVER3A",2,0)
 ;;5.2;LAB SERVICE;**1,5,42,100,121,153,190,221,254,263,266,274,295,373,350**;Sep 27, 1994;Build 230
"RTN","LRVER3A",3,0)
 ;
"RTN","LRVER3A",4,0)
 ; Also contains LRORFLG to restrict multiple OERR alerts (VER+2)
"RTN","LRVER3A",5,0)
 ; Reference to ^DIC(42 supported by IA #10039
"RTN","LRVER3A",6,0)
 ;
"RTN","LRVER3A",7,0)
VER ; Call with L ^LR(LRDFN,LRSS,LRIDT) from LRGV2, LRGVG1, LRSTUF1, LRSTUF2, LRVR3
"RTN","LRVER3A",8,0)
 Q:'$O(LRSB(0))
"RTN","LRVER3A",9,0)
 N LRVCHK,LRORTST,LRORFLG,LRT
"RTN","LRVER3A",10,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),(LRAOD,LRACD)=$P(^(0),U,3)
"RTN","LRVER3A",11,0)
 S LRACD=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,9)):^(9),1:LRACD)
"RTN","LRVER3A",12,0)
 S:'($D(^LRO(68,LRAA,1,LRACD,1,LRAN,0))#2) LRACD=LRAD
"RTN","LRVER3A",13,0)
 S LRAOD=$S($D(^LRO(68,LRAA,1,LRAOD,1,LRAN,0))#2:LRAOD,1:LRAD)
"RTN","LRVER3A",14,0)
 I '$G(LRFIX) S LRNOW=$$NOW^XLFDT,$P(^LR(LRDFN,LRSS,LRIDT,0),U,3,4)=LRNOW_U_$S($G(LRDUZ):LRDUZ,1:DUZ)
"RTN","LRVER3A",15,0)
 K A2
"RTN","LRVER3A",16,0)
 I '$D(PNM) S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX S:PNM="" PNM="NONAME"
"RTN","LRVER3A",17,0)
 N LRT
"RTN","LRVER3A",18,0)
 S LRT=0
"RTN","LRVER3A",19,0)
 F  S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT)) Q:LRT<.5  S:$P(^(LRT,0),U,5)="" A2(LRT)=1 I $D(^TMP("LR",$J,"VTO",LRT)) S LRVCHK=+^(LRT) D
"RTN","LRVER3A",20,0)
 . I $S(LRVCHK<1:1,$D(LRSB(LRVCHK))#2:1,1:0) D
"RTN","LRVER3A",21,0)
 . . I $D(LRSB(LRVCHK)) Q:$P(LRSB(LRVCHK),U)=""
"RTN","LRVER3A",22,0)
 . . I LRVCHK<1,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0),U,6)'="" Q
"RTN","LRVER3A",23,0)
 . . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,4)=$S($G(LRDUZ):LRDUZ,$G(DUZ):DUZ,1:"")
"RTN","LRVER3A",24,0)
 . . I '$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,5) S $P(^(0),U,5)=LRNOW
"RTN","LRVER3A",25,0)
 . . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,6)="",$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRVER3A",26,0)
 . . S LRORTST(LRT)=""
"RTN","LRVER3A",27,0)
 . . I LRACD'=LRAD,$D(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0)) D
"RTN","LRVER3A",28,0)
 . . . S $P(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0),U,4)=$S($G(LRDUZ):LRDUZ,$G(DUZ):DUZ,1:"")
"RTN","LRVER3A",29,0)
 . . . I '$P(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0),U,5) S $P(^(0),U,5)=LRNOW
"RTN","LRVER3A",30,0)
 . . . S $P(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0),U,6)="",$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRVER3A",31,0)
 . . I $P($G(LRPARAM),U,14),$P($G(^LRO(68,+LRAA,0)),U,16) S ^LRO(68,"AA",LRAA_"|"_LRAD_"|"_LRAN_"|"_LRT)=""
"RTN","LRVER3A",32,0)
 . . K A2(LRT)
"RTN","LRVER3A",33,0)
 ;
"RTN","LRVER3A",34,0)
 S D1=1,X=0
"RTN","LRVER3A",35,0)
 F  S X=$O(^TMP("LR",$J,"TMP",X)) Q:X<1  S LRT=+^(X) I $D(LRM(X)) D REQ
"RTN","LRVER3A",36,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S ^(3)=$S($D(^(3)):+^(3),1:LRNOW) S:'$P(^(3),U,2) $P(^(3),U,2)=LRNOW
"RTN","LRVER3A",37,0)
 I D1,'$D(A2) S:'$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4) $P(^(3),U,4)=LRNOW,^LRO(68,LRAA,1,LRAD,1,"AC",LRNOW,LRAN)=""
"RTN","LRVER3A",38,0)
 ; Class I CareVue routine TASKED if CareVue ward - pwc/10-2000
"RTN","LRVER3A",39,0)
 D
"RTN","LRVER3A",40,0)
 . N I,LR7DLOC D IN5^VADPT S LR7DLOC=$G(^DIC(42,+$P($G(VAIP(5)),"^"),44))
"RTN","LRVER3A",41,0)
 . Q:'LR7DLOC  D:$D(^LAB(62.487,"C",LR7DLOC))      ;good ward location
"RTN","LRVER3A",42,0)
 . . S ZTRTN="^LA7DLOC",ZTDESC="LAB AUTOMATION CAREVUE SUPPORTED WARDS"
"RTN","LRVER3A",43,0)
 . . S ZTIO="",ZTDTH=$H,ZTSAVE("L*")="" D ^%ZTLOAD
"RTN","LRVER3A",44,0)
 . . K ZTSAVE,ZTSK,ZTRTN,ZTIO,ZTDTH,ZTDESC,ZTREQ,ZTQUEUED
"RTN","LRVER3A",45,0)
 ;
"RTN","LRVER3A",46,0)
 I D1,'$D(A2),LRAD'=LRACD S:'$P(^LRO(68,LRAA,1,LRACD,1,LRAN,3),U,4) $P(^(3),U,4)=LRNOW,^LRO(68,LRAA,1,LRACD,1,"AC",LRNOW,LRAN)=""
"RTN","LRVER3A",47,0)
 D XREF I $D(^LRO(68,LRAA,.2))'[0 X ^(.2)
"RTN","LRVER3A",48,0)
 N CORRECT S:$G(LRCORECT) CORRECT=1 D NEW^LR7OB1(LRODT,LRSN,"RE",,.LRORTST)
"RTN","LRVER3A",49,0)
 L -^LR(LRDFN,LRSS,LRIDT) ; unlock
"RTN","LRVER3A",50,0)
 Q
"RTN","LRVER3A",51,0)
 ;
"RTN","LRVER3A",52,0)
 ;
"RTN","LRVER3A",53,0)
XREF ; from COM1^LRVER4, LRTSTOUT and VER^LRVER3A
"RTN","LRVER3A",54,0)
 I LRDPF=62.3 S ^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)="" Q
"RTN","LRVER3A",55,0)
 S LRPRAC=$$PRAC^LRX($P(^LR(LRDFN,LRSS,LRIDT,0),U,10)) ;get doc name
"RTN","LRVER3A",56,0)
 S ^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)=""
"RTN","LRVER3A",57,0)
 S ^LRO(69,9999999-LRIDT\1,1,"AP",LRPRAC,$E(PNM,1,30),LRDFN)=""
"RTN","LRVER3A",58,0)
 I $G(LRLLOC)'="" D
"RTN","LRVER3A",59,0)
 . S ^LRO(69,9999999-LRIDT\1,1,"AL",$E(LRLLOC,1,20),$E(PNM,1,30),LRDFN)=""
"RTN","LRVER3A",60,0)
 . S ^LRO(69,DT,1,"AN",$E(LRLLOC,1,20),LRDFN,LRIDT)=""
"RTN","LRVER3A",61,0)
 . S ^LRO(69,DT,1,"AR",$E(LRLLOC,1,20),$E(PNM,1,30),LRDFN)=""
"RTN","LRVER3A",62,0)
 . S ^LRO(69,"AN",$E(LRLLOC,1,20),LRDFN,LRIDT)=""
"RTN","LRVER3A",63,0)
 I LRDPF=2 D CHSET^LRPX(LRDFN,LRIDT)
"RTN","LRVER3A",64,0)
 Q:'$P(LRPARAM,U,3)
"RTN","LRVER3A",65,0)
 ;
"RTN","LRVER3A",66,0)
TSKM ;
"RTN","LRVER3A",67,0)
 N KK,ZTSK,ZTRTN,ZTDTH,ZTSAVE,ZTIO
"RTN","LRVER3A",68,0)
 F KK="LRDFN","LRAA","LRAOD","LRAD","LRAN","LRIDT","LRSS","LRLLOC","LRSN","LRODT" S ZTSAVE(KK)=""
"RTN","LRVER3A",69,0)
 S ZTRTN="DQ^LRTP",ZTIO="",ZTDTH=$H,ZTDESC="LAB INTERIM REPORTS" D ^%ZTLOAD
"RTN","LRVER3A",70,0)
 Q
"RTN","LRVER3A",71,0)
 ;
"RTN","LRVER3A",72,0)
 ;
"RTN","LRVER3A",73,0)
REQ ;
"RTN","LRVER3A",74,0)
 Q:$P($G(LRSB(X)),U)="comment"
"RTN","LRVER3A",75,0)
 I $D(LRSB(X)),$P(LRSB(X),U)="canc" Q
"RTN","LRVER3A",76,0)
 I $D(LRSB(X)),$P(LRSB(X),U)'["pending" Q
"RTN","LRVER3A",77,0)
 I $P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0)),U,6)'="" Q
"RTN","LRVER3A",78,0)
 S:'$G(LRALERT) LRALERT=$S($G(LROUTINE):LROUTINE,1:9)
"RTN","LRVER3A",79,0)
 S D1=0 N A,LRPPURG
"RTN","LRVER3A",80,0)
 I $D(LRSB(X)),LRSB(X)["pending",$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 D  Q
"RTN","LRVER3A",81,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,4)="",$P(^(0),U,5,6)="^",$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",82,0)
 . D REQ1
"RTN","LRVER3A",83,0)
 ;
"RTN","LRVER3A",84,0)
 ; If required test with no result then store 'pending' and related info (NLT/LOINC codes, user and division).
"RTN","LRVER3A",85,0)
 I '$D(LRSB(X)),$P($G(^LR(LRDFN,"CH",LRIDT,X)),U)="" D STOREP
"RTN","LRVER3A",86,0)
 ;
"RTN","LRVER3A",87,0)
 I '$D(LRSB(X)),$P($G(^LR(LRDFN,"CH",LRIDT,X)),U)'="pending" Q
"RTN","LRVER3A",88,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 S $P(^(0),U,4,5)="^",A=$P(^(0),U,2) I A>49 S $P(^(0),U,2)=$S(A=50:9,1:A-50)
"RTN","LRVER3A",89,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 D
"RTN","LRVER3A",90,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",+LRT,+LRT)=""
"RTN","LRVER3A",91,0)
 . S LRPPURG=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+$G(LRM(X,"P")),0)),U,2)
"RTN","LRVER3A",92,0)
 . S:'LRPPURG LRPPURG=$S($G(LRALERT):+LRALERT,1:9)
"RTN","LRVER3A",93,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0)=+LRT_U_LRPPURG,$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",94,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,3)=+LRT,$P(^(0),U,4)=$P(^(0),U,4)+1 Q
"RTN","LRVER3A",95,0)
 ;
"RTN","LRVER3A",96,0)
REQ1 ;
"RTN","LRVER3A",97,0)
 Q:LRACD=LRAD
"RTN","LRVER3A",98,0)
 I $D(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0))#2,'$L($P(^(0),U,6)) S ^(0)=$P(^(0),U,1,2),$P(^(0),U,7)=1,$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",99,0)
 K CNT,LRAMC
"RTN","LRVER3A",100,0)
 Q
"RTN","LRVER3A",101,0)
 ;
"RTN","LRVER3A",102,0)
 ;
"RTN","LRVER3A",103,0)
STOREP ; Store pending as a result
"RTN","LRVER3A",104,0)
 N LRX
"RTN","LRVER3A",105,0)
 S LRX=$G(^LR(LRDFN,"CH",LRIDT,X))
"RTN","LRVER3A",106,0)
 S $P(LRX,"^")="pending"
"RTN","LRVER3A",107,0)
 I $P(LRX,"^",3)="" S $P(LRX,"^",3)=$P($G(LRM(X,"P")),"^",2)
"RTN","LRVER3A",108,0)
 S $P(LRX,"^",4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER3A",109,0)
 S $P(LRX,"^",9)=$S($G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER3A",110,0)
 S ^LR(LRDFN,"CH",LRIDT,X)=LRX
"RTN","LRVER3A",111,0)
 Q
"RTN","LRVER4")
0^203^B82238256
"RTN","LRVER4",1,0)
LRVER4 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;07/06/10  14:08
"RTN","LRVER4",2,0)
 ;;5.2;LAB SERVICE;**14,42,112,121,140,171,153,188,279,283,286,350**;Sep 27, 1994;Build 230
"RTN","LRVER4",3,0)
 ;
"RTN","LRVER4",4,0)
 N LRAMEND,LRRFLAG
"RTN","LRVER4",5,0)
 ;
"RTN","LRVER4",6,0)
LOOP ;
"RTN","LRVER4",7,0)
 S LRLCT=0
"RTN","LRVER4",8,0)
 I '$D(LRGVP) D
"RTN","LRVER4",9,0)
 . S:$D(LRWRDS) LRWRD=LRWRDS
"RTN","LRVER4",10,0)
 . W !!,PNM,"  SSN: ",SSN,"   " S LRLCT=LRLCT+1
"RTN","LRVER4",11,0)
 . I LRDPF=2 W "   LOC: ",$S(LRWRD'="":LRWRD,1:$S($L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,7)):$P(^(0),U,7),1:"??"))
"RTN","LRVER4",12,0)
 ;
"RTN","LRVER4",13,0)
 W !,"Pat Info: ",$P($G(^LR(LRDFN,.091)),U)
"RTN","LRVER4",14,0)
 W ?34," Sex: ",$S(SEX="M":"MALE",SEX="F":"FEMALE",1:SEX)
"RTN","LRVER4",15,0)
 W ?48," Age: ",$$CALCAGE^LRRPU(DOB,LRCDT)," as of ",$$FMTE^XLFDT(LRCDT,"1D")
"RTN","LRVER4",16,0)
 S LRPRAC=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,8)
"RTN","LRVER4",17,0)
 I LRPRAC>0,LRPRAC=+LRPRAC D GETS^DIQ(200,LRPRAC_",",".01;.132;.137;.138","E","LRPRAC(LRPRAC)","LRERR")
"RTN","LRVER4",18,0)
 W !,"Provider: "
"RTN","LRVER4",19,0)
 S LRLCT=LRLCT+2
"RTN","LRVER4",20,0)
 I LRPRAC'="",'$D(LRPRAC(LRPRAC,200)) W LRPRAC
"RTN","LRVER4",21,0)
 I LRPRAC,$D(LRPRAC(LRPRAC,200)) D
"RTN","LRVER4",22,0)
 . W LRPRAC(LRPRAC,200,LRPRAC_",",.01,"E"),?40," Voice pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.137,"E")
"RTN","LRVER4",23,0)
 . W !,"   Phone: ",LRPRAC(LRPRAC,200,LRPRAC_",",.132,"E"),?38," Digital pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.138,"E")
"RTN","LRVER4",24,0)
 . S LRLCT=LRLCT+1
"RTN","LRVER4",25,0)
 ;
"RTN","LRVER4",26,0)
 N PRAC,PR
"RTN","LRVER4",27,0)
 D PRAC^LR7OMERG(LRAA,LRAD,LRAN,.PRAC)
"RTN","LRVER4",28,0)
 I $O(PRAC(0)) D
"RTN","LRVER4",29,0)
 . S PR=0
"RTN","LRVER4",30,0)
 . F  S PR=$O(PRAC(PR)) Q:PR<1  I $D(^VA(200,PR,0)) W !?14,$P(^(0),"^") S LRLCT=LRLCT+1
"RTN","LRVER4",31,0)
 W ! S LRLCT=LRLCT+1
"RTN","LRVER4",32,0)
 S LRNX=0,LRVRM=2,T=""
"RTN","LRVER4",33,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),U,7)'="" D
"RTN","LRVER4",34,0)
 . W !,"VOLUME: ",$P(^(0),U,7)
"RTN","LRVER4",35,0)
 . S LRLCT=LRLCT+1
"RTN","LRVER4",36,0)
 S LRACC=$P(Z1,U,6)
"RTN","LRVER4",37,0)
 W !,"ACCESSION:",?30,$P(Z2,U,6),?44," ",LRACC_" ["_LRUID,"]"
"RTN","LRVER4",38,0)
 W !,?30,LRDAT(2) W ?44," ",LRDAT
"RTN","LRVER4",39,0)
 S LRLCT=LRLCT+2
"RTN","LRVER4",40,0)
 I $D(LRALERT),LRALERT<($P(LRPARAM,U,20)+1) D
"RTN","LRVER4",41,0)
 . W !?15 W:$E(IOST,1,2)="C-" @LRVIDO
"RTN","LRVER4",42,0)
 . W "Test ordered "_$P($G(^LAB(62.05,+LRALERT,0)),U)
"RTN","LRVER4",43,0)
 . W:$E(IOST,1,2)="C-" @LRVIDOF,$C(7)
"RTN","LRVER4",44,0)
 . S LRLCT=LRLCT+1
"RTN","LRVER4",45,0)
 ;
"RTN","LRVER4",46,0)
 I '$O(LRORD(0)) W !!?7,$C(7),"This is not a verifiable test/accession ",! Q
"RTN","LRVER4",47,0)
V I $D(LRGVP) D V20 Q
"RTN","LRVER4",48,0)
 G EDIT:($O(^LR(LRDFN,LRSS,LRIDT,1))=""!('LRVF&$D(LRPER)))&'$D(LRNUF)
"RTN","LRVER4",49,0)
 K LRNUF
"RTN","LRVER4",50,0)
 D V20,ND G V37:LRVF&'$D(X)#2,EDIT:LREDIT
"RTN","LRVER4",51,0)
 S LRTEC=$S($D(^LRO(68,LRAA,1,LRAD,2)):$P(^(2),U),1:$S($D(LRUSI):LRUSI,1:"")),LREDIT=0
"RTN","LRVER4",52,0)
V36 ;
"RTN","LRVER4",53,0)
 Q:$D(LRGVP)
"RTN","LRVER4",54,0)
 K DIR
"RTN","LRVER4",55,0)
 S DIR(0)="SAO^E:Edit;C:Comments;W:Workload"
"RTN","LRVER4",56,0)
 S DIR("A")="SELECT ('E' to Edit, 'C' for Comments, 'W' Workload): "
"RTN","LRVER4",57,0)
 D ^DIR
"RTN","LRVER4",58,0)
 I $D(DIRUT) S X="^" G V37
"RTN","LRVER4",59,0)
 S X=Y
"RTN","LRVER4",60,0)
 S:$E(X)="E" LREDIT=1,X=""
"RTN","LRVER4",61,0)
 K LRNC
"RTN","LRVER4",62,0)
 I $E(X)="C" S LRNC=1 D COM K LRNC G V36
"RTN","LRVER4",63,0)
 I $E(X)="W" D  G LOOP
"RTN","LRVER4",64,0)
 . I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D STD^LRCAPV,EN^LRCAPV S LREND=0 Q
"RTN","LRVER4",65,0)
 . W !?10," Workload is not activated."
"RTN","LRVER4",66,0)
 S X=$S(X="@":"",X="":LRTEC,1:X),LRTEC=X
"RTN","LRVER4",67,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,2)) ^(2)="" S ^(2)=X_U_$P(^(2),U,2,99)
"RTN","LRVER4",68,0)
 G EDIT:LREDIT
"RTN","LRVER4",69,0)
V37 Q  ;LEAVE LRVER4, BACK TO LRVER3
"RTN","LRVER4",70,0)
 ;
"RTN","LRVER4",71,0)
 ;
"RTN","LRVER4",72,0)
V20 ;
"RTN","LRVER4",73,0)
 I $G(LRCHG) D V21,DCOM^LRVERA Q
"RTN","LRVER4",74,0)
 S LRNX=$O(LRORD(LRNX)) G V35:LRNX<1 D SUBS
"RTN","LRVER4",75,0)
 G:'$G(LRTS) V20
"RTN","LRVER4",76,0)
 I '$D(LRSB(LRSB)),'$D(^LR(LRDFN,LRSS,LRIDT,LRSB)) G V20
"RTN","LRVER4",77,0)
 D V25^LRVER5
"RTN","LRVER4",78,0)
 ;
"RTN","LRVER4",79,0)
 D:$D(LRGVP) PG Q:$D(LRGVP)&($D(DTOUT)!$D(DUOUT))
"RTN","LRVER4",80,0)
 ;
"RTN","LRVER4",81,0)
 W !,$P(^LAB(60,+LRTS,0),U)
"RTN","LRVER4",82,0)
 S X1=""
"RTN","LRVER4",83,0)
 I $D(^LR(LRDFN,LRSS,+LRLDT,LRSB)) D
"RTN","LRVER4",84,0)
 . S X1=$P(^(LRSB),U),X=X1
"RTN","LRVER4",85,0)
 . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVER4",86,0)
 . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",X1)
"RTN","LRVER4",87,0)
 . . I X="" S X=X1
"RTN","LRVER4",88,0)
 . W:X'="" ?30,@LRFP
"RTN","LRVER4",89,0)
 S (X,LRFLG)=""
"RTN","LRVER4",90,0)
 I $D(LRSB(LRSB)) D
"RTN","LRVER4",91,0)
 . N LRX
"RTN","LRVER4",92,0)
 . K LRNOVER(LRSB)
"RTN","LRVER4",93,0)
 . S (LRDL,LRX,X)=$P(LRSB(LRSB),U)
"RTN","LRVER4",94,0)
 . S LREDIT=0,LRFLG=$P(LRSB(LRSB),U,2)
"RTN","LRVER4",95,0)
 . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVER4",96,0)
 . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",LRX)
"RTN","LRVER4",97,0)
 . . I X="" S X=LRX
"RTN","LRVER4",98,0)
 . W ?44," ",@LRFP," ",LRFLG,?56," ",$P($P(LRSB(LRSB),U,5),"!",7) ;$P(LRNG,U,7)
"RTN","LRVER4",99,0)
 . S X=LRX
"RTN","LRVER4",100,0)
 . I X=""!(X="canc")!(X="comment")!(X="pending") Q
"RTN","LRVER4",101,0)
 . S Y=0
"RTN","LRVER4",102,0)
 . I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA K LRQ
"RTN","LRVER4",103,0)
 . W "  "
"RTN","LRVER4",104,0)
 . I '$D(LRQ),$E(LRFLG,2)="*" D DISPFLG^LRVER4
"RTN","LRVER4",105,0)
 ;
"RTN","LRVER4",106,0)
 S:$P(X,U)="" $P(LRSB(LRSB),U)=""
"RTN","LRVER4",107,0)
 I $P(X,U)'="" D
"RTN","LRVER4",108,0)
 . N I,LRX,LRY
"RTN","LRVER4",109,0)
 . S $P(LRSB(LRSB),U)=X,$P(LRSB(LRSB),U,2)=LRFLG
"RTN","LRVER4",110,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVER4",111,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVER4",112,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVER4",113,0)
 . I $P($P(LRSB(LRSB),U,3),"!")="" D RONLT^LRVER3
"RTN","LRVER4",114,0)
 . D
"RTN","LRVER4",115,0)
 . . I $P(LRSB(LRSB),U,4)!($P(LRSB(LRSB),U)="pending") Q
"RTN","LRVER4",116,0)
 . . I '$D(LRSA(LRSB))#2 S $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ)),$P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"") Q
"RTN","LRVER4",117,0)
 . . I $P(LRSB(LRSB),U)=$P(LRSA(LRSB),U) S:$P(LRSA(LRSB),U,4) $P(LRSB(LRSB),U,4)=$P(LRSA(LRSB),U,4) S $P(LRSA(LRSB),U,3)=$P(LRSB(LRSB),U,3) Q
"RTN","LRVER4",118,0)
 . . S:'$P(LRSB(LRSB),U,4) $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ)),$P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER4",119,0)
 . S $P(LRSB(LRSB),U,5)=$TR(LRNGS,U,"!")
"RTN","LRVER4",120,0)
 I '$D(LRNUF) S LRLCT=LRLCT+1 S:$X>80 LRLCT=LRLCT+1 D:LRLCT>22 WT G:$G(Y)'="^" V20
"RTN","LRVER4",121,0)
 ;
"RTN","LRVER4",122,0)
V35 ;
"RTN","LRVER4",123,0)
 D LRCFL:LRCFL]""
"RTN","LRVER4",124,0)
 D DCOM^LRVERA K LRNUF
"RTN","LRVER4",125,0)
 Q
"RTN","LRVER4",126,0)
 ;
"RTN","LRVER4",127,0)
 ;
"RTN","LRVER4",128,0)
LRCFL ;
"RTN","LRVER4",129,0)
 S LREXEC=LRCFL D ^LREXEC:LRCFL[""
"RTN","LRVER4",130,0)
 D:LRLCT>22 WT
"RTN","LRVER4",131,0)
 Q
"RTN","LRVER4",132,0)
 ;
"RTN","LRVER4",133,0)
 ;
"RTN","LRVER4",134,0)
EDIT ;
"RTN","LRVER4",135,0)
 K LROUT
"RTN","LRVER4",136,0)
 D ^LRVER5 S LRVRM=2 G:$G(LRCHG) LOOP G LRCFL:$D(LROUT)!$D(LRPER)
"RTN","LRVER4",137,0)
 G LOOP
"RTN","LRVER4",138,0)
 ;
"RTN","LRVER4",139,0)
 ;
"RTN","LRVER4",140,0)
RANGE ;
"RTN","LRVER4",141,0)
 N LRI,LRFIND
"RTN","LRVER4",142,0)
 S Y=X
"RTN","LRVER4",143,0)
 I X=""!(X="canc")!(X="comment")!(X="pending") Q
"RTN","LRVER4",144,0)
 W "  "
"RTN","LRVER4",145,0)
 F LRI=1:1:$L(X) S LRFIND=$E(X,LRI) Q:LRFIND?1(1N,1A,1".",1"-",1"<",1">")
"RTN","LRVER4",146,0)
 S X=$E(X,LRI,999)
"RTN","LRVER4",147,0)
 ;
"RTN","LRVER4",148,0)
 ; User has indicated specific normality to set - used when entering
"RTN","LRVER4",149,0)
 ; reference lab results and all the info to calculate is not available.
"RTN","LRVER4",150,0)
 I $G(LRRFLAG(LRSB)) S LRFLG=$P("L^L*^H^H*","^",LRRFLAG(LRSB))
"RTN","LRVER4",151,0)
 ;
"RTN","LRVER4",152,0)
 E  D RANGECHK
"RTN","LRVER4",153,0)
 I '$D(LRQ),$E(LRFLG,2)="*" D DISPFLG^LRVER4
"RTN","LRVER4",154,0)
RQ S X=Y
"RTN","LRVER4",155,0)
 Q
"RTN","LRVER4",156,0)
 ;
"RTN","LRVER4",157,0)
 ;
"RTN","LRVER4",158,0)
RANGECHK ; Check result against reference ranges and set flag
"RTN","LRVER4",159,0)
 ;
"RTN","LRVER4",160,0)
 ;
"RTN","LRVER4",161,0)
 ; Check for numeric abnormal results
"RTN","LRVER4",162,0)
 I X?.1"-".N.1".".N D  Q
"RTN","LRVER4",163,0)
 . I LRNG4'="",LRNG4?.1"-".N.1".".N,X<LRNG4 S LRFLG="L*" Q
"RTN","LRVER4",164,0)
 . I LRNG5'="",LRNG5?.1"-".N.1".".N,X>LRNG5 S LRFLG="H*" Q
"RTN","LRVER4",165,0)
 . I LRNG2'="",LRNG2?.1"-".N.1".".N,X<LRNG2 S LRFLG="L" Q
"RTN","LRVER4",166,0)
 . I LRNG3'="",LRNG3?.1"-".N.1".".N,X>LRNG3 S LRFLG="H" Q
"RTN","LRVER4",167,0)
 ;
"RTN","LRVER4",168,0)
 ; Check for <> abnormal results
"RTN","LRVER4",169,0)
 ; "<" results checked against low values
"RTN","LRVER4",170,0)
 ; ">" results checked against high values
"RTN","LRVER4",171,0)
 I X?1(1"<",1">").N.1".".N D  Q
"RTN","LRVER4",172,0)
 . N LRX
"RTN","LRVER4",173,0)
 . S LRX=$E(X,2,$L(X))
"RTN","LRVER4",174,0)
 . I $E(X)="<" D  Q
"RTN","LRVER4",175,0)
 . . I LRNG4'="",LRNG4?.N.1".".N,LRX<LRNG4 S LRFLG="L*" Q
"RTN","LRVER4",176,0)
 . . I LRNG4'="",LRNG4?.N.1".".N,LRX=LRNG4 S LRFLG="L*" Q
"RTN","LRVER4",177,0)
 . . I LRNG2'="",LRNG2?.N.1".".N,LRX<LRNG2 S LRFLG="L" Q
"RTN","LRVER4",178,0)
 . . I LRNG2'="",LRNG2?.N.1".".N,LRX=LRNG2 S LRFLG="L" Q
"RTN","LRVER4",179,0)
 . I $E(X)=">" D  Q
"RTN","LRVER4",180,0)
 . . I LRNG5'="",LRNG5?.N.1".".N,LRX>LRNG5 S LRFLG="H*" Q
"RTN","LRVER4",181,0)
 . . I LRNG5'="",LRNG5?.N.1".".N,LRX=LRNG5 S LRFLG="H*" Q
"RTN","LRVER4",182,0)
 . . I LRNG3'="",LRNG3?.N.1".".N,LRX>LRNG3 S LRFLG="H" Q
"RTN","LRVER4",183,0)
 . . I LRNG3'="",LRNG3?.N.1".".N,LRX=LRNG3 S LRFLG="H" Q
"RTN","LRVER4",184,0)
 ;
"RTN","LRVER4",185,0)
 ; Check for ranges, i.e. 0-5, 6-10.
"RTN","LRVER4",186,0)
 ; Compare first value to abnormal value
"RTN","LRVER4",187,0)
 I X?1.N1"-"1.N D  Q
"RTN","LRVER4",188,0)
 . I LRNG4'="",LRNG4?.N.1".".N,+X<LRNG4 S LRFLG="L*" Q
"RTN","LRVER4",189,0)
 . I LRNG5'="",LRNG5?.N.1".".N,+X>LRNG5 S LRFLG="H*" Q
"RTN","LRVER4",190,0)
 . I LRNG2'="",LRNG2?.N.1".".N,+X<LRNG2 S LRFLG="L" Q
"RTN","LRVER4",191,0)
 . I LRNG3'="",LRNG3?.N.1".".N,+X>LRNG3 S LRFLG="H" Q
"RTN","LRVER4",192,0)
 ;
"RTN","LRVER4",193,0)
 Q
"RTN","LRVER4",194,0)
 ;
"RTN","LRVER4",195,0)
 ;
"RTN","LRVER4",196,0)
DISPFLG ; Display critical flags
"RTN","LRVER4",197,0)
 ;
"RTN","LRVER4",198,0)
 I $E(IOST,1,2)="C-" W $C(7),@LRVIDO
"RTN","LRVER4",199,0)
 W "CRITICAL ",$S($E(LRFLG,1)="L":"LOW",$E(LRFLG,1)="H":"HIGH",1:""),"!!"
"RTN","LRVER4",200,0)
 I $E(IOST,1,2)="C-" W @LRVIDOF,$C(7),$C(7)
"RTN","LRVER4",201,0)
 Q
"RTN","LRVER4",202,0)
 ;
"RTN","LRVER4",203,0)
 ;
"RTN","LRVER4",204,0)
SUBS ;
"RTN","LRVER4",205,0)
 S LRSB=LRORD(LRNX),LRTS=$S($D(^TMP("LR",$J,"TMP",LRSB)):^(LRSB),1:0)
"RTN","LRVER4",206,0)
 Q
"RTN","LRVER4",207,0)
 ;
"RTN","LRVER4",208,0)
 ;
"RTN","LRVER4",209,0)
ND ;
"RTN","LRVER4",210,0)
 K X,DIR
"RTN","LRVER4",211,0)
 Q:'LRVF
"RTN","LRVER4",212,0)
 I '$P($G(LRLABKY),U) D  Q
"RTN","LRVER4",213,0)
 . W !,"You're not authorized to edit verified data."
"RTN","LRVER4",214,0)
 . S LREDIT=0
"RTN","LRVER4",215,0)
 S DIR(0)="FO"
"RTN","LRVER4",216,0)
 S DIR("A")="If you need to change something, enter your initials"
"RTN","LRVER4",217,0)
 S DIR("?")="To change verified results, enter your initials."
"RTN","LRVER4",218,0)
 D ^DIR
"RTN","LRVER4",219,0)
 S X=Y K DIR
"RTN","LRVER4",220,0)
 I $$UP^XLFSTR(X)'=$$UP^XLFSTR(LRUSI) S LREDIT=0 K X QUIT
"RTN","LRVER4",221,0)
 I $D(X)#2,'$G(LRCHG) W ! D  S LRCHG=1
"RTN","LRVER4",222,0)
 . K LRSA S LRSA=1
"RTN","LRVER4",223,0)
 . F  S LRSA=$O(^LR(LRDFN,"CH",LRIDT,LRSA)) Q:'LRSA  S LRSA(LRSA)=^(LRSA)
"RTN","LRVER4",224,0)
 Q
"RTN","LRVER4",225,0)
 ;
"RTN","LRVER4",226,0)
 ;
"RTN","LRVER4",227,0)
WT S LRLCT=0 Q:$D(LRGVP)
"RTN","LRVER4",228,0)
 W !,"PRESS ANY KEY TO CONTINUE, '^' TO STOP " R Y:DTIME S:'$T Y="^"
"RTN","LRVER4",229,0)
 Q
"RTN","LRVER4",230,0)
 ;
"RTN","LRVER4",231,0)
 ;
"RTN","LRVER4",232,0)
COM ;from LRVER5
"RTN","LRVER4",233,0)
 Q:$D(LRGVP)
"RTN","LRVER4",234,0)
 K DR
"RTN","LRVER4",235,0)
 S DIE="^LR("_LRDFN_",""CH"",",DA=LRIDT,DA(1)=LRDFN,DR=.99
"RTN","LRVER4",236,0)
 D ^DIE,COM1:$D(LRNC)
"RTN","LRVER4",237,0)
 L +^LR(LRDFN,LRSS,LRIDT):5
"RTN","LRVER4",238,0)
 I $O(^LR(LRDFN,"CH",LRIDT,1,0))="" K ^LR(LRDFN,"CH",LRIDT,1)
"RTN","LRVER4",239,0)
 L -^LR(LRDFN,LRSS,LRIDT)
"RTN","LRVER4",240,0)
 Q
"RTN","LRVER4",241,0)
 ;
"RTN","LRVER4",242,0)
 ;
"RTN","LRVER4",243,0)
VOL ;
"RTN","LRVER4",244,0)
 W !,"VOLUME: ",$P(^LR(LRDFN,LRSS,LRIDT,0),U,7),"//" R X:DTIME
"RTN","LRVER4",245,0)
 G VOL:X["?" S:X'=""&(X'[U) ^(0)=$P(^(0),U,1,6)_U_X_U_$P(^(0),U,8,10)
"RTN","LRVER4",246,0)
 G COM
"RTN","LRVER4",247,0)
 ;
"RTN","LRVER4",248,0)
 ;
"RTN","LRVER4",249,0)
COM1 ;
"RTN","LRVER4",250,0)
 N LRX Q:'$P(^LR(LRDFN,LRSS,LRIDT,0),U,3)
"RTN","LRVER4",251,0)
 D XREF^LRVER3A
"RTN","LRVER4",252,0)
 S LRX=0 F  S LRX=$O(^TMP("LR",$J,"TMP",LRX)) Q:LRX<1  S ^LRO(68,"AC",LRDFN,LRIDT,LRX)=""
"RTN","LRVER4",253,0)
 I $L($P(^LR(LRDFN,LRSS,LRIDT,0),U,9)),$E($P(^(0),U,9))'="-" S $P(^(0),U,9)="-"_$P(^(0),U,9)
"RTN","LRVER4",254,0)
 Q
"RTN","LRVER4",255,0)
 ;
"RTN","LRVER4",256,0)
 ;
"RTN","LRVER4",257,0)
PG Q:$Y<(IOSL+5)
"RTN","LRVER4",258,0)
 I $E(IOST,1,2)'="C-" W @IOF Q
"RTN","LRVER4",259,0)
 D PG^LRGVP
"RTN","LRVER4",260,0)
 Q
"RTN","LRVER4",261,0)
 ;
"RTN","LRVER4",262,0)
V21 ;
"RTN","LRVER4",263,0)
 N Y,LREND
"RTN","LRVER4",264,0)
 S LRSB=1,LRLCT=1
"RTN","LRVER4",265,0)
 F  S LRSB=+$O(LRSB(LRSB)) Q:'LRSB!($G(LREND))  D
"RTN","LRVER4",266,0)
 . N LRX
"RTN","LRVER4",267,0)
 . S LRTS=$O(^LAB(60,"C","CH;"_LRSB_";1",0)) Q:'LRTS
"RTN","LRVER4",268,0)
 . D V25^LRVER5
"RTN","LRVER4",269,0)
 . W !,$P(^LAB(60,LRTS,0),U) S X1=""
"RTN","LRVER4",270,0)
 . I $D(^LR(LRDFN,LRSS,+LRLDT,LRSB)) D
"RTN","LRVER4",271,0)
 . . S X1=$P(^(LRSB),U),(LRDL,X)=X1
"RTN","LRVER4",272,0)
 . . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVER4",273,0)
 . . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",X1)
"RTN","LRVER4",274,0)
 . . . I X="" S X=X1
"RTN","LRVER4",275,0)
 . . W:X'="" ?30,@LRFP
"RTN","LRVER4",276,0)
 . S (LRDL,LRX,X)=$P(LRSB(LRSB),U)
"RTN","LRVER4",277,0)
 . S LREDIT=0,LRFLG=$P(LRSB(LRSB),U,2)
"RTN","LRVER4",278,0)
 . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVER4",279,0)
 . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",LRX)
"RTN","LRVER4",280,0)
 . . I X="" S X=LRX
"RTN","LRVER4",281,0)
 . W ?44," ",@LRFP," ",LRFLG,?56," ",$P(LRNG,U,7)
"RTN","LRVER4",282,0)
 . S X=LRX
"RTN","LRVER4",283,0)
 . I X=""!(X="canc")!(X="comment")!(X="pending") Q
"RTN","LRVER4",284,0)
 . S Y=0
"RTN","LRVER4",285,0)
 . I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA K LRQ
"RTN","LRVER4",286,0)
 . W "  "
"RTN","LRVER4",287,0)
 . I '$D(LRQ),$E(LRFLG,2)="*" D DISPFLG^LRVER4
"RTN","LRVER4",288,0)
 . I '$D(LRNUF) S LRLCT=LRLCT+1 S:$X>80 LRLCT=LRLCT+1 D:LRLCT>15 WT S:$E($G(Y))="^" LREND=1
"RTN","LRVER4",289,0)
 Q
"RTN","LRVER5")
0^130^B147369024
"RTN","LRVER5",1,0)
LRVER5 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;05/17/12  15:37
"RTN","LRVER5",2,0)
 ;;5.2;LAB SERVICE;**42,153,283,286,350**;Sep 27, 1994;Build 230
"RTN","LRVER5",3,0)
 ;
"RTN","LRVER5",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRVER5",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRVER5",6,0)
 ;
"RTN","LRVER5",7,0)
 ;
"RTN","LRVER5",8,0)
 ;ZEXCEPT: LRD,LRDL,LRDUZ,LRDV,LRDVF,LREDIT,LRFP,LRNDISP,LRNG,LRNG2,LRNG3,LRNG4,LRNG5,LRNGS,LRNOVER,LRNX,LRORD,LRSA,LRSB,LRSPEC,LRTEST,LRTS,LRUID,LRVRM,SX,X
"RTN","LRVER5",9,0)
 ;
"RTN","LRVER5",10,0)
 I $G(LRNDISP) D
"RTN","LRVER5",11,0)
 . S LRNX=0
"RTN","LRVER5",12,0)
 . N LRX F  S LRNX=$O(LRORD(LRNX)) Q:LRNX<1  S LRX(LRORD(LRNX))=""
"RTN","LRVER5",13,0)
 . S LRX=0 F  S LRX=$O(LRSB(LRX)) Q:LRX<1  K:'$D(LRX(LRX)) LRSB(LRX),LRSA(LRX)
"RTN","LRVER5",14,0)
 ;
"RTN","LRVER5",15,0)
 ; Check for amended results that have arrived via an HL7 interface.
"RTN","LRVER5",16,0)
 ; Only allow amended results to be verified during this session.
"RTN","LRVER5",17,0)
 I $D(^LAH("LA7 AMENDED RESULTS",LRUID)) D
"RTN","LRVER5",18,0)
 . S LRNX=0
"RTN","LRVER5",19,0)
 . F  S LRNX=$O(LRORD(LRNX)) Q:'LRNX  I '$D(^LAH("LA7 AMENDED RESULTS",LRUID,LRORD(LRNX))) K LRORD(LRNX)
"RTN","LRVER5",20,0)
 . S LRNX=0
"RTN","LRVER5",21,0)
 . F  S LRNX=$O(LRSB(LRNX)) Q:'LRNX  I '$D(^LAH("LA7 AMENDED RESULTS",LRUID,LRNX)) K LRSB(LRNX),LRSA(LRNX)
"RTN","LRVER5",22,0)
 ;
"RTN","LRVER5",23,0)
 S LRNX=0,LRVRM=12
"RTN","LRVER5",24,0)
 ;
"RTN","LRVER5",25,0)
V40 S LRNX=$O(LRORD(LRNX)) G V44:LRNX<1 D LRSUBS
"RTN","LRVER5",26,0)
 ;
"RTN","LRVER5",27,0)
 ; Check if changing performing lab
"RTN","LRVER5",28,0)
 ;  and if not then restore LRSB(LRSB) from LRSA if previous verified to avoid triggering change prompt.
"RTN","LRVER5",29,0)
 ;I $P($G(LRSB(LRSB)),"^",9),'$$PLOK^LRVERA($P(LRSB(LRSB),"^",9),$G(LRDUZ(2)),DUZ(2),LRTS) G V40
"RTN","LRVER5",30,0)
 I $P($G(LRSB(LRSB)),"^",9),'$$PLOK^LRVERA($P(LRSB(LRSB),"^",9),$G(LRDUZ(2)),DUZ(2),LRTS) D  Q
"RTN","LRVER5",31,0)
 . I $D(LRSA(LRSB)) S LRSB(LRSB)=LRSA(LRSB)
"RTN","LRVER5",32,0)
 ;
"RTN","LRVER5",33,0)
 D V25
"RTN","LRVER5",34,0)
 ;
"RTN","LRVER5",35,0)
V42 ;
"RTN","LRVER5",36,0)
 ;
"RTN","LRVER5",37,0)
 S (LRDL,SX,X)=$P($G(LRSB(LRSB)),U),LRDVF=0,LREDIT=0
"RTN","LRVER5",38,0)
 S:X=""&(LRDV'="") X=LRDV,LRDVF=1 ; default value
"RTN","LRVER5",39,0)
 S LRTEST=$P(^LAB(60,LRTS,0),U)
"RTN","LRVER5",40,0)
 K LRNOVER(LRSB)
"RTN","LRVER5",41,0)
 ;
"RTN","LRVER5",42,0)
Q42 ;
"RTN","LRVER5",43,0)
 ;
"RTN","LRVER5",44,0)
 ; Check for amended results that have arrived via an HL7 interface.
"RTN","LRVER5",45,0)
 I $D(^LAH("LA7 AMENDED RESULTS",LRUID,LRSB)) D  G:SX'=X!($G(LRAMEND(LRSB))) V45
"RTN","LRVER5",46,0)
 . W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",47,0)
 . D AMEND Q:$G(LRAMEND(LRSB))
"RTN","LRVER5",48,0)
 . I SX=X W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",49,0)
 ;
"RTN","LRVER5",50,0)
 ; If entering results from a reference lab and not using normal/units
"RTN","LRVER5",51,0)
 ; from file #60 then ask user for these values otherwise display
"RTN","LRVER5",52,0)
 ; current file #60 values.
"RTN","LRVER5",53,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2) D
"RTN","LRVER5",54,0)
 . I $G(^LAB(60,+LRTS,1,+$G(LRSPEC),.1)) D  Q
"RTN","LRVER5",55,0)
 . . D V25
"RTN","LRVER5",56,0)
 . . W !!,"Current Ref Range: ",LRNG2,"-",LRNG3," Units: ",$P(LRNG,"^",7)
"RTN","LRVER5",57,0)
 . . I LRNG4="",LRNG5="" Q
"RTN","LRVER5",58,0)
 . . W !,"     Critical Low: ",LRNG4," Critical High: ",LRNG5
"RTN","LRVER5",59,0)
 . N LRX,LRY
"RTN","LRVER5",60,0)
 . D ASKPLNR,NORM2
"RTN","LRVER5",61,0)
 . S LRX=$P(LRNGS,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",62,0)
 . S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX
"RTN","LRVER5",63,0)
 . S $P(LRSB(LRSB),"^",5)=LRY
"RTN","LRVER5",64,0)
 ;
"RTN","LRVER5",65,0)
Q42A ;
"RTN","LRVER5",66,0)
 W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",67,0)
 R "//",X:DTIME
"RTN","LRVER5",68,0)
 I X'?.ANP W $C(7)," No Control Characters allowed." S X=SX G Q42A
"RTN","LRVER5",69,0)
 S:$L($G(SX))&(X="") X=SX,LRDVF=1
"RTN","LRVER5",70,0)
 S LRDL=X I X=""&LRDVF S (LRD,X)=LRDV G V45
"RTN","LRVER5",71,0)
Q43 G V40:X="",V45:X'["^",V44:X="^",LROUT:X="^^"
"RTN","LRVER5",72,0)
 ;
"RTN","LRVER5",73,0)
V43 ;
"RTN","LRVER5",74,0)
 ;ZEXCEPT: DIC,LRNUF,LRNX,LRORD,LRPLOC,LRSA,LRSB,LRSS,LRSSQ,LRTS,SX,X,Y
"RTN","LRVER5",75,0)
 ;
"RTN","LRVER5",76,0)
 S X=$P(X,U,2),DIC="^LAB(60,",DIC(0)="EOQZ" D ^DIC G:Y<1 Q42
"RTN","LRVER5",77,0)
 S LRPLOC=$P(Y(0),U,5),LRSSQ=$P(LRPLOC,";",1),LRSB=$P(LRPLOC,";",2),LRTS=+Y
"RTN","LRVER5",78,0)
 I LRSSQ="" W !,"Not in this group" G LROUT
"RTN","LRVER5",79,0)
 I LRSS'=LRSSQ!'$D(^TMP("LR",$J,"TMP",LRSB)) W !,"Not in this group" G LROUT
"RTN","LRVER5",80,0)
 S LRNX=0
"RTN","LRVER5",81,0)
 F  S LRNX=$O(LRORD(LRNX)) Q:LRNX<1  Q:LRSB=LRORD(LRNX)
"RTN","LRVER5",82,0)
 I LRNX,LRSB=LRORD(LRNX) D LRSUBS,V25 G V42
"RTN","LRVER5",83,0)
 ;
"RTN","LRVER5",84,0)
V44 K SX
"RTN","LRVER5",85,0)
 D COM^LRVER4
"RTN","LRVER5",86,0)
 S LRNUF=1 S:LRVF LRSA=1
"RTN","LRVER5",87,0)
 Q
"RTN","LRVER5",88,0)
 ;
"RTN","LRVER5",89,0)
V45 ;
"RTN","LRVER5",90,0)
 ;
"RTN","LRVER5",91,0)
 ;ZEXCEPT: LRDFN,LRIDT,LRM,LRSA,LRSB,LRSKIP,LRSS,LRTS,LRVF,LRXD,LRXDP,SX,X
"RTN","LRVER5",92,0)
 ;
"RTN","LRVER5",93,0)
 K LRSKIP
"RTN","LRVER5",94,0)
 I X="@" D  G V46
"RTN","LRVER5",95,0)
 . K:'$G(LRVF) ^LR(LRDFN,LRSS,LRIDT,LRSB)
"RTN","LRVER5",96,0)
 . S X=$S($G(LRVF)&($D(LRSB(LRSB)))&('$D(LRM(LRSB))):"comment",$D(LRM(LRSB)):"pending",$D(LRSA(LRSB)):"canc",1:"")
"RTN","LRVER5",97,0)
 . S $P(LRSB(LRSB),"^")=X,$P(LRSB(LRSB),"^",2)=""
"RTN","LRVER5",98,0)
 ;
"RTN","LRVER5",99,0)
 ; If user has LRDATA security and wants to edit units and reference ranges.
"RTN","LRVER5",100,0)
 I X="~" D  G Q42A
"RTN","LRVER5",101,0)
 . N LRKEY
"RTN","LRVER5",102,0)
 . D OWNSKEY^XUSRB(.LRKEY,"LRDATA")
"RTN","LRVER5",103,0)
 . I LRKEY(0)=1 D EDITUNR
"RTN","LRVER5",104,0)
 . S X=SX
"RTN","LRVER5",105,0)
 ;
"RTN","LRVER5",106,0)
 S LRXD=U_$P(^LAB(60,LRTS,0),U,12),LRXDP=LRXD_"0)",LRXDP=@LRXDP
"RTN","LRVER5",107,0)
 X:'(X="*"!($E(X)="?")!(X="C")!(X="#")!(X="canc")!(X="pending")) $P(LRXDP,U,5,99)
"RTN","LRVER5",108,0)
 I '$D(X)#2 D HELP G V42
"RTN","LRVER5",109,0)
 I $D(X)#2,X["?" D HELP G:'($P(LRXDP,U,2)["S") V42
"RTN","LRVER5",110,0)
 I $D(X)#2,$P(LRXDP,U,2)["S",X'="*",X'="#",X'="canc",X'="pending" D LRSET G:'$D(X)#2 V42
"RTN","LRVER5",111,0)
 I $D(X)#2,X="C",$P(LRXDP,U,2)'["S" D COMP G V42
"RTN","LRVER5",112,0)
 ;
"RTN","LRVER5",113,0)
V46 ;
"RTN","LRVER5",114,0)
 G V42:'$D(X)#2
"RTN","LRVER5",115,0)
 I LRVF,$D(LRSB(LRSB)),$D(LRSA(LRSB)) S LRSA(LRSB,1)=LRTEST
"RTN","LRVER5",116,0)
 S X1=$S($D(^LR(LRDFN,LRSS,+LRLDT,LRSB)):$P(^(LRSB),U),1:"")
"RTN","LRVER5",117,0)
 S:X="*" X="canc" S:X="#" X="comment"
"RTN","LRVER5",118,0)
 ;
"RTN","LRVER5",119,0)
 I '$G(LRAMEND(LRSB)) S LRFLG=""
"RTN","LRVER5",120,0)
 S Y=0
"RTN","LRVER5",121,0)
 I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA K LRQ
"RTN","LRVER5",122,0)
 I '$G(LRAMEND(LRSB)) D RANGE^LRVER4
"RTN","LRVER5",123,0)
 ;
"RTN","LRVER5",124,0)
 S:$P(X,U)="" $P(LRSB(LRSB),U)=""
"RTN","LRVER5",125,0)
 I $P(X,U)'="" D
"RTN","LRVER5",126,0)
 . S $P(LRSB(LRSB),U)=X,$P(LRSB(LRSB),U,2)=LRFLG
"RTN","LRVER5",127,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVER5",128,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVER5",129,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVER5",130,0)
 . I $P($P(LRSB(LRSB),U,3),"!")="" D RONLT^LRVER3
"RTN","LRVER5",131,0)
 . D
"RTN","LRVER5",132,0)
 . . I '$D(LRSA(LRSB))#2 D  Q
"RTN","LRVER5",133,0)
 . . . S $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER5",134,0)
 . . . S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVER5",135,0)
 . . S:'$P(LRSB(LRSB),U,4) $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER5",136,0)
 . S $P(LRSB(LRSB),U,5)=$TR(LRNGS,U,"!")
"RTN","LRVER5",137,0)
 . S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVER5",138,0)
 G:$D(LRNUF) V44 K LRNUF G V40:'$D(LRSKIP) S X=LRSKIP G Q43:X["^",V40
"RTN","LRVER5",139,0)
 ;
"RTN","LRVER5",140,0)
 ;
"RTN","LRVER5",141,0)
RANGE ;
"RTN","LRVER5",142,0)
 ;
"RTN","LRVER5",143,0)
 ;ZEXCEPT: LRDUZ,LRSB,X
"RTN","LRVER5",144,0)
 ;
"RTN","LRVER5",145,0)
 S $P(LRSB(LRSB),"^")=X
"RTN","LRVER5",146,0)
 ; If previous results from another laboratory then use normals and units
"RTN","LRVER5",147,0)
 ; associated with those results.
"RTN","LRVER5",148,0)
 D
"RTN","LRVER5",149,0)
 . I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) D PLNR^LRVR4 Q
"RTN","LRVER5",150,0)
 . I $P(LRSB(LRSB),"^",9),DUZ(2)'=$P(LRSB(LRSB),"^",9) D PLNR^LRVR4
"RTN","LRVER5",151,0)
 D RANGE^LRVER4
"RTN","LRVER5",152,0)
 Q
"RTN","LRVER5",153,0)
 ;
"RTN","LRVER5",154,0)
 ;
"RTN","LRVER5",155,0)
LRSUBS ; From LRVR5
"RTN","LRVER5",156,0)
 ;
"RTN","LRVER5",157,0)
 ;ZEXCEPT: LRNX,LRORD,LRSB,LRTS
"RTN","LRVER5",158,0)
 ;
"RTN","LRVER5",159,0)
 S LRSB=LRORD(LRNX),LRTS=$S($D(^TMP("LR",$J,"TMP",LRSB))#2:^(LRSB),1:0)
"RTN","LRVER5",160,0)
 Q
"RTN","LRVER5",161,0)
 ;
"RTN","LRVER5",162,0)
 ;
"RTN","LRVER5",163,0)
LRSET ; from above and LRVR5
"RTN","LRVER5",164,0)
 ; Also called from Input Transform of file #60.01 field #9
"RTN","LRVER5",165,0)
 ;
"RTN","LRVER5",166,0)
 ;ZEXCEPT: DA,X
"RTN","LRVER5",167,0)
 ;
"RTN","LRVER5",168,0)
 N DIERR,I,LRERR,LRESULT
"RTN","LRVER5",169,0)
 ;
"RTN","LRVER5",170,0)
 ; If called from EXECUTABLE HELP of file #60, field #9 then set LRSB from DD info.
"RTN","LRVER5",171,0)
 I $G(LRSB)<1 N LRSB S LRSB=+$G(^LAB(60,+$G(DA(1)),.2))
"RTN","LRVER5",172,0)
 ;
"RTN","LRVER5",173,0)
 D CHK^DIE(63.04,LRSB,"EH",X,.LRESULT,"LRERR")
"RTN","LRVER5",174,0)
 I LRESULT'="^" D  Q  ;
"RTN","LRVER5",175,0)
 . D EN^DDIOL(" "_LRESULT(0),"","$C(32)")
"RTN","LRVER5",176,0)
 . S X=LRESULT
"RTN","LRVER5",177,0)
 ;
"RTN","LRVER5",178,0)
 I LRESULT="^" D
"RTN","LRVER5",179,0)
 . D MSG^DIALOG("WHB","","","","LRERR")
"RTN","LRVER5",180,0)
 . K X
"RTN","LRVER5",181,0)
 ;
"RTN","LRVER5",182,0)
 Q
"RTN","LRVER5",183,0)
 ;
"RTN","LRVER5",184,0)
 ;
"RTN","LRVER5",185,0)
COMP ; from LRVR5
"RTN","LRVER5",186,0)
 ;
"RTN","LRVER5",187,0)
 ;ZEXCEPT: C,I,X
"RTN","LRVER5",188,0)
 ;
"RTN","LRVER5",189,0)
 S X="^%ET",@^%ZOSF("TRAP")
"RTN","LRVER5",190,0)
 R !,"Enter your computation: ",C:DTIME
"RTN","LRVER5",191,0)
 Q:"^"[C  G CH:C="?"!(C["""") S C=$P(C," ",1)
"RTN","LRVER5",192,0)
 S X="TRAP^LRVER5",@^%ZOSF("TRAP") D ^DIM S X="W "_C
"RTN","LRVER5",193,0)
 I '$D(X)#2 W !,"Something's wrong with the syntax." G CH
"RTN","LRVER5",194,0)
 F I=1:1:$L(C) I $E(C,I)?1A S I=.9 Q
"RTN","LRVER5",195,0)
 G CH:I=.9,CH:C["/0",CH:C["\0" W !," equals ",@C G COMP
"RTN","LRVER5",196,0)
 ;
"RTN","LRVER5",197,0)
TRAP ; Error trap for COMP subroutine above
"RTN","LRVER5",198,0)
 W !!,"Error in your mathematical formula ",!
"RTN","LRVER5",199,0)
CH W !,"Enter for example: 5*2/4+1 and 3.5 will be returned [i.e. ((5*2)/4)+1=3.5]"
"RTN","LRVER5",200,0)
 G COMP
"RTN","LRVER5",201,0)
 ;
"RTN","LRVER5",202,0)
 ;
"RTN","LRVER5",203,0)
V25 ; From LRVER4, LRSTUF2
"RTN","LRVER5",204,0)
 ;
"RTN","LRVER5",205,0)
 ;ZEXCEPT: AGE,LRDEL,LRDUZ,LRDV,LRFP,LRNG,LRNGS,LRSA,LRSB,LRSPEC,LRTS,N,SEX,X2
"RTN","LRVER5",206,0)
 ;
"RTN","LRVER5",207,0)
 N LRTX,LRX
"RTN","LRVER5",208,0)
 S (LRDV,LRNG,LRDEL,LRNGS)=""
"RTN","LRVER5",209,0)
 I '$D(^LAB(60,+LRTS,0))#2 Q
"RTN","LRVER5",210,0)
 S LRX=+$P($P(^LAB(60,+LRTS,0),U,5),";",2)
"RTN","LRVER5",211,0)
 S LRTX=$S($L($P(^LAB(60,+LRTS,0),U,5)):$O(^LAB(60,"C",$P(^LAB(60,+LRTS,0),U,5),0)),1:+LRTS)
"RTN","LRVER5",212,0)
 S LRFP=$P(^LAB(60,LRTX,.1),U,3)
"RTN","LRVER5",213,0)
 I LRFP="" S LRFP="$J(X,8)"
"RTN","LRVER5",214,0)
 ;
"RTN","LRVER5",215,0)
 ; Normal ranges, units, delta checks and default value
"RTN","LRVER5",216,0)
 I $D(^LAB(60,LRTX,1,+$G(LRSPEC),0)) D
"RTN","LRVER5",217,0)
 . S LRNG=^LAB(60,LRTX,1,+$G(LRSPEC),0)
"RTN","LRVER5",218,0)
 . S LRDEL=$G(^LAB(62.1,+$P(LRNG,U,8),1))
"RTN","LRVER5",219,0)
 . S LRDEL(1)=$G(^LAB(62.1,+$P(LRNG,U,8),2),"Q")
"RTN","LRVER5",220,0)
 . S X2=$P(LRNG,U,9)
"RTN","LRVER5",221,0)
 . S LRDV=$S('$D(LRSB(LRX)):$P(LRNG,U,10),1:"")
"RTN","LRVER5",222,0)
 ;
"RTN","LRVER5",223,0)
 ; When entering results from a reference lab check if flag to use normals/units from file 60.
"RTN","LRVER5",224,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),'$G(^LAB(60,LRTX,1,+$G(LRSPEC),.1)) D PLNR^LRVR4
"RTN","LRVER5",225,0)
 ;
"RTN","LRVER5",226,0)
NORM ;
"RTN","LRVER5",227,0)
 ;
"RTN","LRVER5",228,0)
 ; Use previously stored units/normals if editing previous results.
"RTN","LRVER5",229,0)
 I $G(LRSB),$D(LRSA(LRSB)) D
"RTN","LRVER5",230,0)
 . I $P(LRSA(LRSB),"^")?1(1"pending",1"comment",1"canc") Q
"RTN","LRVER5",231,0)
 . S LRNG=$P(LRSA(LRSB),"^",5),LRNG=$TR(LRNG,"!","^")
"RTN","LRVER5",232,0)
 ;
"RTN","LRVER5",233,0)
 D NORM2
"RTN","LRVER5",234,0)
 ;
"RTN","LRVER5",235,0)
 Q
"RTN","LRVER5",236,0)
 ;
"RTN","LRVER5",237,0)
NORM2 ;
"RTN","LRVER5",238,0)
 ;
"RTN","LRVER5",239,0)
 I $G(SEX)="" S SEX="M"
"RTN","LRVER5",240,0)
 I $G(AGE)="" S AGE=99
"RTN","LRVER5",241,0)
 ;
"RTN","LRVER5",242,0)
 S LRNGS=LRNG
"RTN","LRVER5",243,0)
 F LRX=2:1:5 D
"RTN","LRVER5",244,0)
 . N LRY
"RTN","LRVER5",245,0)
 . S LRY=$P(LRNG,"^",LRX)
"RTN","LRVER5",246,0)
 . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",247,0)
 . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",248,0)
 . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",249,0)
 . S $P(LRNG,"^",LRX)=LRY,$P(LRNGS,"^",LRX)=LRY,@("LRNG"_LRX)=LRY
"RTN","LRVER5",250,0)
 Q
"RTN","LRVER5",251,0)
 ;
"RTN","LRVER5",252,0)
 ;
"RTN","LRVER5",253,0)
LROUT ;
"RTN","LRVER5",254,0)
 ;
"RTN","LRVER5",255,0)
 ;ZEXCEPT: LROUT,SX
"RTN","LRVER5",256,0)
 ;
"RTN","LRVER5",257,0)
 K SX
"RTN","LRVER5",258,0)
 S LROUT=1
"RTN","LRVER5",259,0)
 Q
"RTN","LRVER5",260,0)
 ;
"RTN","LRVER5",261,0)
 ;
"RTN","LRVER5",262,0)
HELP ; Display help prompt from test result entry.
"RTN","LRVER5",263,0)
 ;
"RTN","LRVER5",264,0)
 ;ZEXCEPT: LRXD,LRXDH
"RTN","LRVER5",265,0)
 ;
"RTN","LRVER5",266,0)
 N LRKEY
"RTN","LRVER5",267,0)
 W !," ??",$C(7) S LRXDH=LRXD_"3)"
"RTN","LRVER5",268,0)
 W:$D(@LRXDH) " ",@LRXDH
"RTN","LRVER5",269,0)
 W !,"Enter * to report ""canc"" for canceled."
"RTN","LRVER5",270,0)
 W !,"Enter # to report ""comment""."
"RTN","LRVER5",271,0)
 W:'($P(LRXDP,U,2)["S") !,"Enter C to enter calculate mode."
"RTN","LRVER5",272,0)
 D OWNSKEY^XUSRB(.LRKEY,"LRDATA")
"RTN","LRVER5",273,0)
 I LRKEY(0)=1 W !,"Enter ~ to edit units/reference ranges."
"RTN","LRVER5",274,0)
 Q
"RTN","LRVER5",275,0)
 ;
"RTN","LRVER5",276,0)
 ;
"RTN","LRVER5",277,0)
EDITUNR ; Allow user to edit units and normal reference ranges.
"RTN","LRVER5",278,0)
 ;
"RTN","LRVER5",279,0)
 ;ZEXCEPT: LRNG,LRNGS,LRSB,LRSPEC,LRTS
"RTN","LRVER5",280,0)
 ;
"RTN","LRVER5",281,0)
 N LRX,LRY
"RTN","LRVER5",282,0)
 I $D(^LAB(60,+LRTS,1,+$G(LRSPEC),0)) D
"RTN","LRVER5",283,0)
 . N DIR,DIRUT,DTOUT,DUOUT,LRNNG,LRNNG2,LRNNG3,LRNNG4,LRNNG5,X,Y
"RTN","LRVER5",284,0)
 . S LRNNG=^LAB(60,+LRTS,1,+$G(LRSPEC),0)
"RTN","LRVER5",285,0)
 . F LRX=2:1:5 D
"RTN","LRVER5",286,0)
 . . S LRY=$P(LRNNG,"^",LRX)
"RTN","LRVER5",287,0)
 . . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",288,0)
 . . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",289,0)
 . . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",290,0)
 . . S $P(LRNNG,"^",LRX)=LRY,@("LRNNG"_LRX)=LRY
"RTN","LRVER5",291,0)
 . W !
"RTN","LRVER5",292,0)
 . S DIR("A",1)="Current Laboratory Test File Values"
"RTN","LRVER5",293,0)
 . S DIR("A",2)="Current Ref Range: "_LRNNG2_"-"_LRNNG3_" Units: "_$P(LRNNG,"^",7)
"RTN","LRVER5",294,0)
 . I LRNNG4="",LRNNG5=""
"RTN","LRVER5",295,0)
 . E  S DIR("A",3)="     Critical Low: "_LRNNG4_" Critical High: "_LRNNG5
"RTN","LRVER5",296,0)
 . S DIR(0)="YO",DIR("A")="Use these values",DIR("B")="NO"
"RTN","LRVER5",297,0)
 . D ^DIR
"RTN","LRVER5",298,0)
 . I Y'=1 Q
"RTN","LRVER5",299,0)
 . S LRX=$P(LRNNG,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",300,0)
 . S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX,$P(LRY,"!",7)=$P(LRNNG,"^",7)
"RTN","LRVER5",301,0)
 . S $P(LRSB(LRSB),"^",5)=LRY,(LRNG,LRNGS)=LRNNG
"RTN","LRVER5",302,0)
 ;
"RTN","LRVER5",303,0)
 D ASKPLNR
"RTN","LRVER5",304,0)
 ;
"RTN","LRVER5",305,0)
 F LRX=2:1:5 D
"RTN","LRVER5",306,0)
 . N LRY
"RTN","LRVER5",307,0)
 . S LRY=$P(LRNG,"^",LRX)
"RTN","LRVER5",308,0)
 . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",309,0)
 . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",310,0)
 . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",311,0)
 . S $P(LRNG,"^",LRX)=LRY,$P(LRNGS,"^",LRX)=LRY,@("LRNG"_LRX)=LRY
"RTN","LRVER5",312,0)
 ;
"RTN","LRVER5",313,0)
 S LRX=$P(LRNGS,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",314,0)
 S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX,$P(LRY,"!",7)=$P(LRNGS,"^",7)
"RTN","LRVER5",315,0)
 S $P(LRSB(LRSB),"^",5)=LRY
"RTN","LRVER5",316,0)
 ;
"RTN","LRVER5",317,0)
 Q
"RTN","LRVER5",318,0)
 ;
"RTN","LRVER5",319,0)
 ;
"RTN","LRVER5",320,0)
AMEND ; Process amended results and prompt user
"RTN","LRVER5",321,0)
 ;
"RTN","LRVER5",322,0)
 ;ZEXCEPT: LRAMEND,LRFLG,LRNG,LRNGS,LRSB,LRUID,X
"RTN","LRVER5",323,0)
 ;
"RTN","LRVER5",324,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRANS,LRI,LRJ,LRLL,LRROOT,LRSQ,LRX,LRY,Y
"RTN","LRVER5",325,0)
 ;
"RTN","LRVER5",326,0)
 ; flag to indicate if amended results have been extracted from LAH
"RTN","LRVER5",327,0)
 S LRAMEND=0
"RTN","LRVER5",328,0)
 ;
"RTN","LRVER5",329,0)
 ; save current value of X
"RTN","LRVER5",330,0)
 S LRX=X
"RTN","LRVER5",331,0)
 ;
"RTN","LRVER5",332,0)
 S LRROOT=$Q(^LAH("LA7 AMENDED RESULTS",LRUID,LRSB))
"RTN","LRVER5",333,0)
 I LRROOT="" Q
"RTN","LRVER5",334,0)
 I $QS(LRROOT,1)'="LA7 AMENDED RESULTS"!($QS(LRROOT,2)'=LRUID)!($QS(LRROOT,3)'=LRSB) Q
"RTN","LRVER5",335,0)
 S LRLL=$QS(LRROOT,4),LRSQ=$QS(LRROOT,5)
"RTN","LRVER5",336,0)
 ;
"RTN","LRVER5",337,0)
 ; If corresponding corrected value has been deleted from LAH global
"RTN","LRVER5",338,0)
 ; - then cleanup cross-reference and quit
"RTN","LRVER5",339,0)
 I '$D(^LAH(LRLL,1,LRSQ,LRSB)) D  Q
"RTN","LRVER5",340,0)
 . W !!,"The related amended result has been purged"
"RTN","LRVER5",341,0)
 . W !,"Unable to process this result."
"RTN","LRVER5",342,0)
 . K ^LAH("LA7 AMENDED RESULTS",LRUID,LRSB,LRLL,LRSQ)
"RTN","LRVER5",343,0)
 . S X=LRX
"RTN","LRVER5",344,0)
 ;
"RTN","LRVER5",345,0)
 S LRY=^LAH(LRLL,1,LRSQ,LRSB)
"RTN","LRVER5",346,0)
 S DIR(0)="SOA^0:No;1:Yes;2:Keep but do not process",DIR("B")="Yes"
"RTN","LRVER5",347,0)
 S DIR("A",1)=" ",DIR("A",2)="Amended result: "_$P(LRY,"^")
"RTN","LRVER5",348,0)
 S DIR("A",2)=DIR("A",2)_"    flag: "_$S($P(LRY,"^",2)'="":$P(LRY,"^",2),1:"None")
"RTN","LRVER5",349,0)
 S DIR("A",2)=DIR("A",2)_"    units: "_$P($P(LRY,"^",5),"!",7)
"RTN","LRVER5",350,0)
 S DIR("A")="Accept amended results: "
"RTN","LRVER5",351,0)
 S DIR("?",1)="Answer with"
"RTN","LRVER5",352,0)
 S DIR("?",2)="0 - No to not accept amended result and delete."
"RTN","LRVER5",353,0)
 S DIR("?",3)="1 - Yes to process amended result."
"RTN","LRVER5",354,0)
 S DIR("?")="or 2 - Keep which skips processing but leaves result for future processing."
"RTN","LRVER5",355,0)
 D ^DIR
"RTN","LRVER5",356,0)
 I $D(DIRUT) Q
"RTN","LRVER5",357,0)
 S LRANS=Y
"RTN","LRVER5",358,0)
 ;
"RTN","LRVER5",359,0)
 ; Process this amended result, set LRX to amended value
"RTN","LRVER5",360,0)
 I LRANS=1 D
"RTN","LRVER5",361,0)
 . S LRX=$P(LRY,"^"),LRFLG=$P(LRY,"^",2),LRSB(LRSB)=LRY,LRJ=$P(LRY,"^",5)
"RTN","LRVER5",362,0)
 . F LRI=1,2,3,4,5,7,11,12 S $P(LRNG,"^",LRI)=$P(LRJ,"!",LRI)
"RTN","LRVER5",363,0)
 . S LRNGS=LRNG,(LRAMEND,LRAMEND(LRSB))=1
"RTN","LRVER5",364,0)
 . D LRSBCOM^LRVR4 ; also process any comments
"RTN","LRVER5",365,0)
 ;
"RTN","LRVER5",366,0)
 ; Cleanup cross-reference unless user indicates they want to keep.
"RTN","LRVER5",367,0)
 I LRANS<2 D
"RTN","LRVER5",368,0)
 . K ^LAH(LRLL,1,LRSQ,LRSB)
"RTN","LRVER5",369,0)
 . K ^LAH("LA7 AMENDED RESULTS",LRUID,LRSB,LRLL,LRSQ)
"RTN","LRVER5",370,0)
 ;
"RTN","LRVER5",371,0)
 ; If no other results then cleanup entry in LAH.
"RTN","LRVER5",372,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))<1 D ZAPALL^LRVR3(LRLL,LRSQ)
"RTN","LRVER5",373,0)
 ;
"RTN","LRVER5",374,0)
 ; Restore X to either original value of X or new amended value
"RTN","LRVER5",375,0)
 S X=LRX
"RTN","LRVER5",376,0)
 Q
"RTN","LRVER5",377,0)
 ;
"RTN","LRVER5",378,0)
 ;
"RTN","LRVER5",379,0)
ASKPLNR ; Ask user for performing lab normal ranges and units when entering
"RTN","LRVER5",380,0)
 ; manually and not using values from file #60.
"RTN","LRVER5",381,0)
 ;
"RTN","LRVER5",382,0)
 ;ZEXCEPT: LRNG,LRNGS,LRRFLAG,LRSB,LRSPEC,LRTEST
"RTN","LRVER5",383,0)
 ;
"RTN","LRVER5",384,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRI,LRJ,LRX,LRY,Y,X,Y
"RTN","LRVER5",385,0)
 ;
"RTN","LRVER5",386,0)
 S LRX=$TR(LRNGS,"^","!")
"RTN","LRVER5",387,0)
 ;
"RTN","LRVER5",388,0)
 W !!,"For test ",LRTEST
"RTN","LRVER5",389,0)
 S DIR(0)="60.01,6"
"RTN","LRVER5",390,0)
 I $P(LRX,"!",7)'="" S DIR("B")=$P(LRX,"!",7)
"RTN","LRVER5",391,0)
 D ^DIR
"RTN","LRVER5",392,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","LRVER5",393,0)
 ; Set units into component 7 of piece 5
"RTN","LRVER5",394,0)
 S $P(LRX,"!",7)=Y,$P(LRSB(LRSB),"^",5)=LRX
"RTN","LRVER5",395,0)
 ;
"RTN","LRVER5",396,0)
 ; Ask normals - high/low and critical
"RTN","LRVER5",397,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVER5",398,0)
 F LRJ=1,2,3,4 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","LRVER5",399,0)
 . K DIR
"RTN","LRVER5",400,0)
 . S DIR(0)="60.01,"_LRJ,LRI=LRJ+1
"RTN","LRVER5",401,0)
 . I $P(LRX,"!",LRI)'="" D
"RTN","LRVER5",402,0)
 . . S DIR("B")=$P(LRX,"!",LRI)
"RTN","LRVER5",403,0)
 . . I $E(DIR("B"))=$C(34) Q
"RTN","LRVER5",404,0)
 . . I DIR("B")'?.N.1".".N S DIR("B")=$C(34)_DIR("B")_$C(34) ; enclose in quotes if text
"RTN","LRVER5",405,0)
 . D ^DIR
"RTN","LRVER5",406,0)
 . I $D(DTOUT)!($D(DUOUT)) Q
"RTN","LRVER5",407,0)
 . S $P(LRX,"!",LRI)=Y
"RTN","LRVER5",408,0)
 ;
"RTN","LRVER5",409,0)
 ; Ask user for normality in case user does not know high/low/critical.
"RTN","LRVER5",410,0)
 S LRRFLAG(LRSB)=$$RFLAG^LRVERA($P($G(LRSB(LRSB)),"^",2))
"RTN","LRVER5",411,0)
 ;
"RTN","LRVER5",412,0)
 ; Update normal variable LRNG
"RTN","LRVER5",413,0)
 I $P(LRX,"!")="" S $P(LRX,"!")=LRSPEC
"RTN","LRVER5",414,0)
 F LRI=1,2,3,4,5,7 S $P(LRNG,"^",LRI)=$P(LRX,"!",LRI)
"RTN","LRVER5",415,0)
 S LRNGS=LRNG
"RTN","LRVER5",416,0)
 ;
"RTN","LRVER5",417,0)
 Q
"RTN","LRVERA")
0^76^B50656389
"RTN","LRVERA",1,0)
LRVERA ;DALOI/JMC - READ ACCESSION/UID ;06/01/10  11:50
"RTN","LRVERA",2,0)
 ;;5.2;LAB SERVICE;**153,271,286,350**;Sep 27, 1994;Build 230
"RTN","LRVERA",3,0)
 ;
"RTN","LRVERA",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRVERA",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRVERA",6,0)
 ;
"RTN","LRVERA",7,0)
ACC ; Prompt for accession selection
"RTN","LRVERA",8,0)
 D EN^LRWU4
"RTN","LRVERA",9,0)
 Q
"RTN","LRVERA",10,0)
 ;
"RTN","LRVERA",11,0)
 ;
"RTN","LRVERA",12,0)
UID ; Prompt for UID selection
"RTN","LRVERA",13,0)
 ;
"RTN","LRVERA",14,0)
 ;ZEXCEPT: LRAA,LRAD,LRAN,LRUID
"RTN","LRVERA",15,0)
 ;
"RTN","LRVERA",16,0)
 N LRQUIT,LRX,LRY
"RTN","LRVERA",17,0)
 ;
"RTN","LRVERA",18,0)
 W !
"RTN","LRVERA",19,0)
 S (LRQUIT,LRY)=0
"RTN","LRVERA",20,0)
 F  D  Q:LRQUIT
"RTN","LRVERA",21,0)
 . S LRX=$$UID^LRWU4("Unique Identifier",$G(LRUID))
"RTN","LRVERA",22,0)
 . I LRX=0 S LRUID="",(LRAA,LRAD,LRAN)=-1,LRQUIT=1 Q
"RTN","LRVERA",23,0)
 . S LRY=$$CHECKUID^LRWU4(LRX,"")
"RTN","LRVERA",24,0)
 . I LRY S LRQUIT=1 Q
"RTN","LRVERA",25,0)
 . W !,"No accession on file for this UID."
"RTN","LRVERA",26,0)
 . S LRUID=""
"RTN","LRVERA",27,0)
 ;
"RTN","LRVERA",28,0)
 ; If good UID then update variables if user selected a different UID
"RTN","LRVERA",29,0)
 ; Display accession.
"RTN","LRVERA",30,0)
 I LRY D
"RTN","LRVERA",31,0)
 . I $G(LRUID)'=LRX S LRUID=LRX,LRAA=$P(LRY,"^",2),LRAD=$P(LRY,"^",3),LRAN=$P(LRY,"^",4)
"RTN","LRVERA",32,0)
 . W "   (",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^"),")"
"RTN","LRVERA",33,0)
 Q
"RTN","LRVERA",34,0)
 ;
"RTN","LRVERA",35,0)
 ;
"RTN","LRVERA",36,0)
SELPL(LR4,LRFLAG) ; Select the performing laboratory to store with test results.
"RTN","LRVERA",37,0)
 ; Call with LR4 = default institution, usually value of DUZ(2)
"RTN","LRVERA",38,0)
 ;        LRFLAG = 0 (host lab only) / 1 (allow selection of collecting or host lab)
"RTN","LRVERA",39,0)
 ;
"RTN","LRVERA",40,0)
 ; Returns LR4 = ien of file #4 institution selected
"RTN","LRVERA",41,0)
 ;
"RTN","LRVERA",42,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","LRVERA",43,0)
 S DIC="^DIC(4,",DIC(0)="AEMOQ",LRFLAG=+$G(LRFLAG)
"RTN","LRVERA",44,0)
 S DIC("A")="Select Performing Laboratory: "
"RTN","LRVERA",45,0)
 I $G(LR4)>0 S DIC("B")=$$GET1^DIQ(4,LR4_",",.01)
"RTN","LRVERA",46,0)
 S DIC("S")="I $$SCRNPL^LRVERA(LRFLAG)"
"RTN","LRVERA",47,0)
 D ^DIC
"RTN","LRVERA",48,0)
 I Y<1 S LR4=0
"RTN","LRVERA",49,0)
 E  S LR4=$P(Y,"^")
"RTN","LRVERA",50,0)
 ;
"RTN","LRVERA",51,0)
 Q LR4
"RTN","LRVERA",52,0)
 ;
"RTN","LRVERA",53,0)
 ;
"RTN","LRVERA",54,0)
SCRNPL(LRFLAG) ; Screen performing laboratory
"RTN","LRVERA",55,0)
 ; Called by DIC("S") lookup above when selecting performing laboratory
"RTN","LRVERA",56,0)
 ; Call with LRFLAG = allow selection of collecting or host lab
"RTN","LRVERA",57,0)
 ;
"RTN","LRVERA",58,0)
 ;ZEXCEPT: Y
"RTN","LRVERA",59,0)
 ;
"RTN","LRVERA",60,0)
 N OK
"RTN","LRVERA",61,0)
 S OK=0
"RTN","LRVERA",62,0)
 I Y=DUZ(2) S OK=1
"RTN","LRVERA",63,0)
 I 'OK D
"RTN","LRVERA",64,0)
 . I $D(^LAHM(62.9,"CH",DUZ(2),Y)) S OK=1 Q
"RTN","LRVERA",65,0)
 . I LRFLAG,$D(^LAHM(62.9,"CH",Y,DUZ(2))) S OK=1
"RTN","LRVERA",66,0)
 ;
"RTN","LRVERA",67,0)
 Q OK
"RTN","LRVERA",68,0)
 ;
"RTN","LRVERA",69,0)
 ;
"RTN","LRVERA",70,0)
PLOK(LRX,LRY,LRZ,LR60) ; Check if user is editing results that appear to have
"RTN","LRVERA",71,0)
 ; been performed by a lab different from the one they selected and.
"RTN","LRVERA",72,0)
 ; ask if changing performing lab is ok.
"RTN","LRVERA",73,0)
 ;
"RTN","LRVERA",74,0)
 ; Call with LRX = file #4 ien of performing lab on record
"RTN","LRVERA",75,0)
 ;           LRY = file #4 ien of performing lab user selected
"RTN","LRVERA",76,0)
 ;           LRZ = user's current division - DUZ(2)
"RTN","LRVERA",77,0)
 ;          LR60 = file #60 ien of test selected
"RTN","LRVERA",78,0)
 ;
"RTN","LRVERA",79,0)
 ; Returns 1=YES, 0=NO
"RTN","LRVERA",80,0)
 ;
"RTN","LRVERA",81,0)
 N DIR,DIRUT,DTOUT,DUOUT,OK,X,Y
"RTN","LRVERA",82,0)
 S OK=1
"RTN","LRVERA",83,0)
 I LRX D
"RTN","LRVERA",84,0)
 . I LRY,LRX=LRY Q
"RTN","LRVERA",85,0)
 . I LRX=LRZ Q
"RTN","LRVERA",86,0)
 . S DIR("A",1)="The performing lab recorded for test "_$$GET1^DIQ(60,LR60_",",.01)_" is: "_$$GET1^DIQ(4,LRX_",",.01)
"RTN","LRVERA",87,0)
 . S DIR("A",2)="You indicated the performing lab is: "_$$GET1^DIQ(4,$S(LRY:LRY,1:LRZ)_",",.01)
"RTN","LRVERA",88,0)
 . S DIR("A")="Do you want to continue",DIR("B")="NO"
"RTN","LRVERA",89,0)
 . S DIR(0)="YO",OK=0
"RTN","LRVERA",90,0)
 . W ! D ^DIR
"RTN","LRVERA",91,0)
 . I Y=1 S OK=1
"RTN","LRVERA",92,0)
 Q OK
"RTN","LRVERA",93,0)
 ;
"RTN","LRVERA",94,0)
 ;
"RTN","LRVERA",95,0)
SETRL(LRDFN,LRSS,LRIDT,LR4) ; Set reporting laboratory for entry in file #63
"RTN","LRVERA",96,0)
 ; Call with  LRDFN = File #63 IEN
"RTN","LRVERA",97,0)
 ;             LRSS = file #63 subscript
"RTN","LRVERA",98,0)
 ;            LRIDT = inverse date/time of specimen ("AU" should pass 0)
"RTN","LRVERA",99,0)
 ;              LR4 = file #4 IEN to store as reporting laboratory
"RTN","LRVERA",100,0)
 ;
"RTN","LRVERA",101,0)
 N FDA,LRDIE,LRFILE
"RTN","LRVERA",102,0)
 ;
"RTN","LRVERA",103,0)
 I LRSS'="AU",(LRDFN*LRIDT*LR4)<1 Q
"RTN","LRVERA",104,0)
 I LRSS'="AU",LR4=+$G(^LR(LRDFN,LRSS,LRIDT,"RF")) Q
"RTN","LRVERA",105,0)
 I LRSS="AU",LR4=$P($G(^LR(LRDFN,"AU")),"^",18) Q
"RTN","LRVERA",106,0)
 ;
"RTN","LRVERA",107,0)
 S LRFILE=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,LRSS="AU":63,1:0)
"RTN","LRVERA",108,0)
 I LRFILE<1 Q
"RTN","LRVERA",109,0)
 ;
"RTN","LRVERA",110,0)
 I LRSS'="AU" S FDA(1,LRFILE,LRIDT_","_LRDFN_",",.345)=LR4
"RTN","LRVERA",111,0)
 E  S FDA(1,LRFILE,LRDFN_",",14.91)=LR4
"RTN","LRVERA",112,0)
 D FILE^DIE("","FDA(1)","LRDIE(1)")
"RTN","LRVERA",113,0)
 ;
"RTN","LRVERA",114,0)
 Q
"RTN","LRVERA",115,0)
 ;
"RTN","LRVERA",116,0)
 ;
"RTN","LRVERA",117,0)
RFLAG(FLAG) ; Ask user for referral high/low/critical flag in case they
"RTN","LRVERA",118,0)
 ; don't have values to calculate.
"RTN","LRVERA",119,0)
 ; Call with FLAG = current abnormal flag if any
"RTN","LRVERA",120,0)
 ;
"RTN","LRVERA",121,0)
 ; Returns NULL=no selection  0=Calculate from entered values
"RTN","LRVERA",122,0)
 ;            1=Abnormal Low  2=Critical Low
"RTN","LRVERA",123,0)
 ;            3=Abnormal High 4=Critical High
"RTN","LRVERA",124,0)
 ;
"RTN","LRVERA",125,0)
 N DIR,DIROUT,DIRUT,DTOUT,X,Y
"RTN","LRVERA",126,0)
 S DIR(0)="SOA^0:Calculate from entered values;1:Abnormal Low;2:Critical Low;3:Abnormal High;4:Critical High"
"RTN","LRVERA",127,0)
 S DIR("A")="Result's Abnormality: "
"RTN","LRVERA",128,0)
 S DIR("B")="Calculate from entered values"
"RTN","LRVERA",129,0)
 I $G(FLAG)'="" S DIR("B")=$S(FLAG="L":"Abnormal Low",FLAG="L*":"Critical Low",FLAG="H":"Abnormal High",FLAG="H*":"Critical High",1:DIR("B"))
"RTN","LRVERA",130,0)
 S DIR("?")="Select the abnormality if it cannot be calculated from reference values."
"RTN","LRVERA",131,0)
 D ^DIR
"RTN","LRVERA",132,0)
 I $D(DIRUT) S Y=""
"RTN","LRVERA",133,0)
 Q Y
"RTN","LRVERA",134,0)
 ;
"RTN","LRVERA",135,0)
 ;
"RTN","LRVERA",136,0)
DCOM ; From above and LRVR4 - display comments
"RTN","LRVERA",137,0)
 ;
"RTN","LRVERA",138,0)
 ;ZEXCEPT: LRACC,LRCMTDSP,LRDFN,LRIDT,LRLCT,LRLDT,LRSS,Z2
"RTN","LRVERA",139,0)
 ;
"RTN","LRVERA",140,0)
 ; Quit if no current or previous comments
"RTN","LRVERA",141,0)
 I '$O(^LR(LRDFN,LRSS,LRIDT,1,0)),'$O(^LR(LRDFN,LRSS,+$G(LRLDT),1,0)) Q
"RTN","LRVERA",142,0)
 ;
"RTN","LRVERA",143,0)
 N DA
"RTN","LRVERA",144,0)
 ;
"RTN","LRVERA",145,0)
 ; Display previous comments.
"RTN","LRVERA",146,0)
 I $G(LRCMTDSP),$G(LRLDT)>0,$O(^LR(LRDFN,LRSS,LRLDT,1,0)) D
"RTN","LRVERA",147,0)
 . W !,"*** Comments for Previous Accession "_$P($G(Z2),"^",6)_" ***"
"RTN","LRVERA",148,0)
 . S DA=LRLDT D DSPCMT
"RTN","LRVERA",149,0)
 ;
"RTN","LRVERA",150,0)
 ; Display current comments
"RTN","LRVERA",151,0)
 I $O(^LR(LRDFN,LRSS,LRIDT,1,0)) D
"RTN","LRVERA",152,0)
 . I $G(LRCMTDSP),$G(LRLDT)>0,$O(^LR(LRDFN,LRSS,LRLDT,1,0)) D
"RTN","LRVERA",153,0)
 . . W !,"*** Comments for Current Accession "_$G(LRACC)_" ***"
"RTN","LRVERA",154,0)
 . . S LRLCT=LRLCT+1
"RTN","LRVERA",155,0)
 . S DA=LRIDT D DSPCMT
"RTN","LRVERA",156,0)
 Q
"RTN","LRVERA",157,0)
 ;
"RTN","LRVERA",158,0)
 ;
"RTN","LRVERA",159,0)
CMTDSP ; Determine if display of previous results should include associated comments.
"RTN","LRVERA",160,0)
 ;
"RTN","LRVERA",161,0)
 N ERR,I
"RTN","LRVERA",162,0)
 ;
"RTN","LRVERA",163,0)
 ; Get stored list of tests from parameter tool
"RTN","LRVERA",164,0)
 K ^TMP("LRXPAR",$J),^TMP("LR",$J,"DCMT")
"RTN","LRVERA",165,0)
 D GETLST^XPAR("^TMP(""LRXPAR"",$J)","USR","LR VER DISPLAY PREV COMMENT","Q",.ERR,1)
"RTN","LRVERA",166,0)
 I '$G(^TMP("LRXPAR",$J)) Q
"RTN","LRVERA",167,0)
 ; Create list based in file #60 ien - makes checking easier
"RTN","LRVERA",168,0)
 S I=0
"RTN","LRVERA",169,0)
 F  S I=$O(^TMP("LRXPAR",$J,I)) Q:'I  I $P(^(I),"^",2) S ^TMP("LR",$J,"DCMT",+^TMP("LRXPAR",$J,I))=""
"RTN","LRVERA",170,0)
 K ^TMP("LRXPAR",$J)
"RTN","LRVERA",171,0)
 Q
"RTN","LRVERA",172,0)
 ;
"RTN","LRVERA",173,0)
 ;
"RTN","LRVERA",174,0)
CHKCDSP() ; Check if previous comment should display when test on user's list
"RTN","LRVERA",175,0)
 ; is present on test profile selected for this accession.
"RTN","LRVERA",176,0)
 ;
"RTN","LRVERA",177,0)
 ;ZEXCEPT: LRLDT,LRM
"RTN","LRVERA",178,0)
 ;
"RTN","LRVERA",179,0)
 N I,OK
"RTN","LRVERA",180,0)
 S OK=0
"RTN","LRVERA",181,0)
 I $G(LRLDT)>0,$D(^TMP("LR",$J,"DCMT")) D
"RTN","LRVERA",182,0)
 . S I=0
"RTN","LRVERA",183,0)
 . F  S I=$O(LRM(I)) Q:'I  D  Q:OK
"RTN","LRVERA",184,0)
 . . I $D(^TMP("LR",$J,"DCMT",+LRM(I))) S OK=1 Q
"RTN","LRVERA",185,0)
 . . I $G(LRM(I,"P")),$D(^TMP("LR",$J,"DCMT",+LRM(I,"P"))) S OK=1 Q
"RTN","LRVERA",186,0)
 Q OK
"RTN","LRVERA",187,0)
 ;
"RTN","LRVERA",188,0)
 ;
"RTN","LRVERA",189,0)
DSPCMT ; Display comments stored in file #63
"RTN","LRVERA",190,0)
 ;
"RTN","LRVERA",191,0)
 ;ZEXCEPT: DA,IOST,LRDFN,LRLCT,LRSS
"RTN","LRVERA",192,0)
 ;
"RTN","LRVERA",193,0)
 N DIR,DIRUT,DTOUT,DUOUT,I,X,Y
"RTN","LRVERA",194,0)
 S I=0
"RTN","LRVERA",195,0)
 F  S I=$O(^LR(LRDFN,LRSS,DA,1,I)) Q:'I  D  Q:$D(DIRUT)
"RTN","LRVERA",196,0)
 . S LRLCT=LRLCT+1
"RTN","LRVERA",197,0)
 . W !,"COMMENTS: ",$P(^LR(LRDFN,LRSS,DA,1,I,0),"^")
"RTN","LRVERA",198,0)
 . I LRLCT>21,$E(IOST,1,2)="C-" D  Q:$D(DIRUT)
"RTN","LRVERA",199,0)
 . . S DIR(0)="E" D ^DIR
"RTN","LRVERA",200,0)
 . . S LRLCT=0
"RTN","LRVERA",201,0)
 W ! S LRLCT=LRLCT+1
"RTN","LRVERA",202,0)
 Q
"RTN","LRVERA",203,0)
 ;
"RTN","LRVERA",204,0)
 ;
"RTN","LRVERA",205,0)
DSPHW(LRDFN,LRY) ; Display patient's height and weight
"RTN","LRVERA",206,0)
 ; Call with LRDFN = file #63 ien
"RTN","LRVERA",207,0)
 ;             LRY = array to return values, pass by value
"RTN","LRVERA",208,0)
 ;
"RTN","LRVERA",209,0)
 ; Returns array LRY with height and weight
"RTN","LRVERA",210,0)
 ;
"RTN","LRVERA",211,0)
 N DFN,GMRVSTR,LRDPF,LREND,LRROOT,X
"RTN","LRVERA",212,0)
 S X=$G(^LR(+LRDFN,0)),LRDPF=$P(X,"^",2),DFN=$P(X,"^",3),LREND=0
"RTN","LRVERA",213,0)
 I LRDPF'=2 Q
"RTN","LRVERA",214,0)
 K ^UTILITY($J,"GMRVD")
"RTN","LRVERA",215,0)
 S GMRVSTR(0)="^^1^",GMRVSTR="HT;WT" D EN1^GMRVUT0
"RTN","LRVERA",216,0)
 ;
"RTN","LRVERA",217,0)
 ; -- Height = Ht.^value^in^metric^cm^^^[*]^Q1;..;Qn
"RTN","LRVERA",218,0)
 ; -- Weight = Wt.^value^lb^metric^kg^BodyMassIndex^^[*]^Q1;..;Qn
"RTN","LRVERA",219,0)
 ;
"RTN","LRVERA",220,0)
 S LRROOT="^UTILITY($J,""GMRVD"")"
"RTN","LRVERA",221,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  D  Q:LREND
"RTN","LRVERA",222,0)
 . I $QS(LRROOT,1)'=$J!($QS(LRROOT,2)'="GMRVD") S LREND=1 Q
"RTN","LRVERA",223,0)
 . S X=@LRROOT
"RTN","LRVERA",224,0)
 . I $QS(LRROOT,3)="HT" S LRY("HT")="Ht.^"_$P(X,"^",8)_"^in^"_$P(X,"^",13)_"^cm^^"_$P(X,"^")_"^"_$P(X,"^",12)_"^"_$P(X,"^",17)
"RTN","LRVERA",225,0)
 . I $QS(LRROOT,3)="WT" S LRY("WT")="Wt.^"_$P(X,"^",8)_"^lb^"_$P(X,"^",13)_"^kg^"_$P(X,"^",14)_"^"_$P(X,"^")_"^"_$P(X,U,12)_"^"_$P(X,"^",17)
"RTN","LRVERA",226,0)
 ;
"RTN","LRVERA",227,0)
 K ^UTILITY($J,"GMRVD")
"RTN","LRVERA",228,0)
 Q
"RTN","LRVERA",229,0)
 ;
"RTN","LRVERA",230,0)
 ;
"RTN","LRVERA",231,0)
XDELTACK ; Execute delta check in a controlled environment ("sand box")
"RTN","LRVERA",232,0)
 ;
"RTN","LRVERA",233,0)
 ;ZEXCEPT: LRDEL,LRDFN,LRIDT,LRLDT,LRSB,LRSPEC,LRSS
"RTN","LRVERA",234,0)
 ;
"RTN","LRVERA",235,0)
 N LR60,LRDB,LRI,LROK,LRSBSAV
"RTN","LRVERA",236,0)
 ;
"RTN","LRVERA",237,0)
 ; Check for "delta check days back" (LRDB) cutoff on test/specimen
"RTN","LRVERA",238,0)
 ; Don't execute delta check if past test/specimen's "days back".
"RTN","LRVERA",239,0)
 ; If no value for "days back" then execute delta check.
"RTN","LRVERA",240,0)
 ; ^TMP("LR",543187985,"TMP",291) = 901
"RTN","LRVERA",241,0)
 S LR60=+$G(^TMP("LR",$J,"TMP",LRSB)),LRDB=""
"RTN","LRVERA",242,0)
 I LR60,$G(LRSPEC) S LRDB=$P($G(^LAB(60,LR60,1,LRSPEC,.1)),"^",2)
"RTN","LRVERA",243,0)
 I LRDB'="" D  Q:LROK=0
"RTN","LRVERA",244,0)
 . I LRLDT<1 S LROK=0 Q
"RTN","LRVERA",245,0)
 . N LRDATE
"RTN","LRVERA",246,0)
 . S LROK=1,LRDATE(1)=$P(^LR(LRDFN,LRSS,LRIDT,0),"^"),LRDATE(2)=$P(^LR(LRDFN,LRSS,LRLDT,0),"^")
"RTN","LRVERA",247,0)
 . I $$FMDIFF^XLFDT(LRDATE(1),LRDATE(2),1)>LRDB S LROK=0
"RTN","LRVERA",248,0)
 ;
"RTN","LRVERA",249,0)
 ; Save LRSB array
"RTN","LRVERA",250,0)
 M LRSBSAV=LRSB
"RTN","LRVERA",251,0)
 ;
"RTN","LRVERA",252,0)
 ; Execute delta check, protect LRSBSAV array by NEWing
"RTN","LRVERA",253,0)
 D
"RTN","LRVERA",254,0)
 . N LRSBSAV
"RTN","LRVERA",255,0)
 . X LRDEL
"RTN","LRVERA",256,0)
 ;
"RTN","LRVERA",257,0)
 ; Compare/restore LRSB array with LRSBSAV array to protect data in LRSB that may
"RTN","LRVERA",258,0)
 ; have been altered inappropriately in the delta check.
"RTN","LRVERA",259,0)
 S LRI=0
"RTN","LRVERA",260,0)
 F  S LRI=$O(LRSBSAV(LRI)) Q:'LRI  D
"RTN","LRVERA",261,0)
 . I $D(LRSB(LRI)) S $P(LRSBSAV(LRI),"^")=$P(LRSB(LRI),"^")
"RTN","LRVERA",262,0)
 ;
"RTN","LRVERA",263,0)
 ; Merge LRSBSAV back into LRSB.
"RTN","LRVERA",264,0)
 ; Do not kill LRSB array in case new nodes created in LRSB by delta check
"RTN","LRVERA",265,0)
 M LRSB=LRSBSAV
"RTN","LRVERA",266,0)
 ;
"RTN","LRVERA",267,0)
 Q
"RTN","LRVR")
0^51^B31822971
"RTN","LRVR",1,0)
LRVR ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;06/05/10  00:33
"RTN","LRVR",2,0)
 ;;5.2;LAB SERVICE;**42,153,263,286,350**;Sep 27, 1994;Build 230
"RTN","LRVR",3,0)
 ;
"RTN","LRVR",4,0)
 N LRDUZ,LRVBY
"RTN","LRVR",5,0)
 D INIT G QUIT:$G(LREND)
"RTN","LRVR",6,0)
 S LRVBY=$$GET^XPAR("USR^PKG","LR VER EA VERIFY BY UID","`"_LRAA,"Q")
"RTN","LRVR",7,0)
 I LRVBY<2 S LRVBY=$$SELBY^LRWU4("Verify by",LRVBY+1)
"RTN","LRVR",8,0)
 I "MISPEMCY"[$P($G(^LRO(68,LRAA,0)),U,2) D EN^LRVR0,QUIT Q
"RTN","LRVR",9,0)
 I LRVBY=0 D QUIT Q
"RTN","LRVR",10,0)
 I LRVBY=2 D ^LRVRA,QUIT Q
"RTN","LRVR",11,0)
DAT D ADATE^LRWU G:LRAD<1 QUIT
"RTN","LRVR",12,0)
 I $P(^LRO(68,LRAA,0),U,3)="D" F I=0:0 S I=$O(^LRO(68,LRAA,1,LRAD,1,I)) Q:I<1  I $D(^LRO(68,LRAA,1,LRAD,1,I,3)),'$P(^(3),U,4) S LRAN=I Q
"RTN","LRVR",13,0)
 S:$D(^LRO(68,LRAA,1,LRAD,2))&'LRAN LRAN=$P(^(2),U,4)
"RTN","LRVR",14,0)
 ;
"RTN","LRVR",15,0)
L10 ;
"RTN","LRVR",16,0)
 S LRCFL="",EAMODE=1
"RTN","LRVR",17,0)
 K LRTEST,C5,LRSET,LRLDT,DIC,LRNM,LRNG,LRDL,LRDEL,T,LRFP,LRAB,LRVER,Y,Z
"RTN","LRVR",18,0)
 D WLN G QUIT:LREND
"RTN","LRVR",19,0)
 D ^LRVR1,NEXT
"RTN","LRVR",20,0)
 G L10
"RTN","LRVR",21,0)
 ;
"RTN","LRVR",22,0)
 ;
"RTN","LRVR",23,0)
YN R X:DTIME Q:X=""!(X["N")!(X["Y")  W !,"Answer 'Y' or 'N': " G YN
"RTN","LRVR",24,0)
 ;
"RTN","LRVR",25,0)
 ;
"RTN","LRVR",26,0)
WLN ;
"RTN","LRVR",27,0)
 S LRNOP=0
"RTN","LRVR",28,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","LRVR",29,0)
 S DIR(0)="NAO^1:999999:0"
"RTN","LRVR",30,0)
 S DIR("A")="Accession NUMBER: ",DIR("?")="^D LW^LRVR"
"RTN","LRVR",31,0)
 I LRAN'="" S DIR("B")=LRAN
"RTN","LRVR",32,0)
 D ^DIR K DIR
"RTN","LRVR",33,0)
 I $D(DIRUT) G STOP
"RTN","LRVR",34,0)
 S LRAN=Y
"RTN","LRVR",35,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"NOT ON FILE" S LRNOP=1
"RTN","LRVR",36,0)
WLN2 ;
"RTN","LRVR",37,0)
 I '$G(LRNOP) D
"RTN","LRVR",38,0)
 . S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRCEN=$S($D(^(.1)):^(.1),1:0),LRODT=$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=$P(^(0),U,5)
"RTN","LRVR",39,0)
 . S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRVR",40,0)
 I '$G(LRNOP),$P(LRORU3,U)="" W !?10,"No UID number for this accession",! S LRNOP=1
"RTN","LRVR",41,0)
 I '$G(LRNOP) S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,?30,SSN W:LRCEN !,"ORDER #: ",LRCEN
"RTN","LRVR",42,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR",43,0)
 I '$G(LRNOP),'$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",3) D
"RTN","LRVR",44,0)
 . N %DT,LRA1,LRA2,LRA3
"RTN","LRVR",45,0)
 . S %DT("B")=$$FMTE^XLFDT(LRCDT,"1")
"RTN","LRVR",46,0)
 . S LRSTATUS="C",LRA1=LRAA,LRA2=LRAD,LRA3=LRAN
"RTN","LRVR",47,0)
 . D P15^LROE1
"RTN","LRVR",48,0)
 . S LRAA=LRA1,LRAD=LRA2,LRAN=LRA3
"RTN","LRVR",49,0)
 . I LRCDT<1 S LRNOP=1 Q
"RTN","LRVR",50,0)
 . I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) S $P(^(3),U,3)=$$NOW^XLFDT
"RTN","LRVR",51,0)
 ; If user did not update then go to next accession
"RTN","LRVR",52,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) S LRNOP=1
"RTN","LRVR",53,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR",54,0)
 I $G(LRCDT)<1 S (LRCDT,LRNOP)=1
"RTN","LRVR",55,0)
 ;
"RTN","LRVR",56,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVR",57,0)
 I '$G(LRNOP),LRSS'="CH" S LRNOP=1
"RTN","LRVR",58,0)
 ; Check for valid pointer to file #63 and entry in file #63.
"RTN","LRVR",59,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRVR",60,0)
 I '$G(LRNOP),LRIDT<1 W !,">>>>ERROR - NO POINTER TO FILE #63 - PLEASE NOTIFY SYSTEM MANAGER^ <<<<<",! S LRNOP=1
"RTN","LRVR",61,0)
 I '$G(LRNOP),'$D(^LR(LRDFN,LRSS,LRIDT,0)) W !,">>>>ERROR - NO ENTRY IN FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<^ <<<",! S LRNOP=1
"RTN","LRVR",62,0)
 ;
"RTN","LRVR",63,0)
 I '$G(LRNOP),$D(^LRO(69,LRODT,1,LRSN)),'$D(^(LRSN,1)) W !,"This Order # has not been collected",$C(7) S LRNOP=1
"RTN","LRVR",64,0)
 I '$G(LRNOP),$D(^LRO(69,LRODT,1,LRSN,1)),$P(^LRO(69,LRODT,1,LRSN,1),U,4)'="C" W !,"You cannot verify an accession which has not been collected.",$C(7) S LRNOP=1
"RTN","LRVR",65,0)
 I $G(LRNOP) D NEXT G WLN
"RTN","LRVR",66,0)
 ;
"RTN","LRVR",67,0)
 Q
"RTN","LRVR",68,0)
 ;
"RTN","LRVR",69,0)
 ;
"RTN","LRVR",70,0)
LW ;
"RTN","LRVR",71,0)
 N S
"RTN","LRVR",72,0)
 W !,"Enter range of accession numbers which might apply."
"RTN","LRVR",73,0)
 D LRAN^LRWU3 Q:LREND
"RTN","LRVR",74,0)
 S LRDT=$$FMTE^XLFDT($$DT^XLFDT,"5F")
"RTN","LRVR",75,0)
 S S("LRAA")=LRAA,S("LRAD")=LRAD,S("LRAN")=LRAN
"RTN","LRVR",76,0)
 D W^LRWRKLST
"RTN","LRVR",77,0)
 S LREND=0,LRAA=S("LRAA"),LRAD=S("LRAD"),LRAN=S("LRAN")
"RTN","LRVR",78,0)
 Q
"RTN","LRVR",79,0)
 ;
"RTN","LRVR",80,0)
 ;
"RTN","LRVR",81,0)
QUIT I $G(LRAN),$G(LRAA),$G(LRAD) S LREND=1 I $D(^LRO(68,LRAA,1,LRAD,0)) S:'$D(^(2)) ^(2)="^^" S ^(2)=$P(^(2),U,1,3)_U_LRAN_U_$P(^(2),U,5,99),LREND=1
"RTN","LRVR",82,0)
 ;
"RTN","LRVR",83,0)
CLEAN ;
"RTN","LRVR",84,0)
 I $D(LRCSQ),'$O(^XTMP("LRCAP",LRCSQ,DUZ,0)) K ^XTMP("LRCAP",LRCSQ,DUZ)
"RTN","LRVR",85,0)
 E  I $D(LRAA) D:$P(LRPARAM,U,14)&($P($G(^LRO(68,+LRAA,0)),U,16)) STD^LRCAPV K LRIDIV
"RTN","LRVR",86,0)
 K DIR,LRCMTDSP,LRNOP,XP
"RTN","LRVR",87,0)
 D ^LRVRKIL
"RTN","LRVR",88,0)
 S ZTIO="",ZTRTN="LRCAPV2",ZTDTH=$H,ZTDESC="LAB LRCAPV2 ROUTINE"
"RTN","LRVR",89,0)
 D ^%ZTLOAD K ZTSK
"RTN","LRVR",90,0)
 Q
"RTN","LRVR",91,0)
 ;
"RTN","LRVR",92,0)
 ;
"RTN","LRVR",93,0)
NEXT S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) I LRAN'>0 W !,"LAST IN WORK LIST" S LRAN="^"
"RTN","LRVR",94,0)
 S LREND=0
"RTN","LRVR",95,0)
 Q
"RTN","LRVR",96,0)
 ;
"RTN","LRVR",97,0)
 ;
"RTN","LRVR",98,0)
LIST W " the following tests: " F I=0:0 S I=$O(LRTST(I)) Q:I<1  W !,?10,$P(LRTST(I),"^",1)
"RTN","LRVR",99,0)
 Q
"RTN","LRVR",100,0)
 ;
"RTN","LRVR",101,0)
 ;
"RTN","LRVR",102,0)
EXPAND D EXPLODE^LRGP2
"RTN","LRVR",103,0)
SKPEX Q:$O(LRVTS(0))  ; READY TO GO
"RTN","LRVR",104,0)
STOP S LREND=1
"RTN","LRVR",105,0)
 Q
"RTN","LRVR",106,0)
 ;
"RTN","LRVR",107,0)
 ;
"RTN","LRVR",108,0)
INIT ;from LRVRW
"RTN","LRVR",109,0)
 N DIC,LRX
"RTN","LRVR",110,0)
 D ^LRPARAM Q:$G(LREND)
"RTN","LRVR",111,0)
 S LREND=0,LRAN=0 K LRORD,LRDUZ
"RTN","LRVR",112,0)
 S DIC="^LRO(68.2,",DIC(0)="AEMZ",DIC("S")="S LRX=$P(^(0),U,12) Q:'$L(LRX)  I $D(^XUSEC($P($G(^DIC(19.1,LRX,0)),U),DUZ))"
"RTN","LRVR",113,0)
 D ^DIC K DIC("S") G STOP:Y<1 S LRLL=+Y,LRTYPE=$P(Y(0),U,3)
"RTN","LRVR",114,0)
 S LRPROF=$O(^LRO(68.2,LRLL,10,0))
"RTN","LRVR",115,0)
 I LRPROF<1 S LREND=1 W !,"No profile defined." Q
"RTN","LRVR",116,0)
 S B=$O(^LRO(68.2,LRLL,10,LRPROF))
"RTN","LRVR",117,0)
 I B>0 S DIC="^LRO(68.2,"_LRLL_",10," D ^DIC G STOP:Y<1 S LRPROF=+Y
"RTN","LRVR",118,0)
 S X=^LRO(68.2,LRLL,10,LRPROF,0),LRAA=$P(X,U,2),LRPANEL=$P(X,U) I '$D(^LRO(68,LRAA,0))#2 W !?10,$C(7),"Error in your DATABASE. There is not an accession area # ",LRAA,!! Q
"RTN","LRVR",119,0)
 ;
"RTN","LRVR",120,0)
 ; Select performing laboratory to use
"RTN","LRVR",121,0)
 S LRX=$$SELPL^LRVERA($S($P(X,"^",5):$P(X,"^",5),1:DUZ(2)))
"RTN","LRVR",122,0)
 I LRX<1 S LREND=1 Q
"RTN","LRVR",123,0)
 I LRX,LRX'=DUZ(2) S LRDUZ(2)=LRX
"RTN","LRVR",124,0)
 ;
"RTN","LRVR",125,0)
 D:$P(LRPARAM,U,14)&($P($G(^LRO(68,LRAA,0)),U,16)) AUTO^LRCAPV Q:LREND
"RTN","LRVR",126,0)
 ;
"RTN","LRVR",127,0)
 I "MISPCYEM"[$P(^LRO(68,LRAA,0),U,2) Q
"RTN","LRVR",128,0)
 ;
"RTN","LRVR",129,0)
 G STOP:$P(^LRO(68,LRAA,0),U,2)'="CH"
"RTN","LRVR",130,0)
 S LREND=0 D EXPAND G STOP:LREND!($O(LRVTS(0))<0)
"RTN","LRVR",131,0)
 ;
"RTN","LRVR",132,0)
CONT ;
"RTN","LRVR",133,0)
 F I=0:0 S I=$O(LRORD(I)) Q:I<1  S J=LRORD(I),X=$P(^LAB(60,J,0),U,5),LRORD(I)=$P(X,";",2)
"RTN","LRVR",134,0)
 S Y=^LRO(68,LRAA,0),LRTSE=-1
"RTN","LRVR",135,0)
 ;
"RTN","LRVR",136,0)
 D CMTDSP^LRVERA
"RTN","LRVR",137,0)
 ;
"RTN","LRVR",138,0)
REV ;
"RTN","LRVR",139,0)
 K LRPER
"RTN","LRVR",140,0)
 D REV^LRVER
"RTN","LRVR",141,0)
 Q
"RTN","LRVR",142,0)
 ;
"RTN","LRVR",143,0)
 ;
"RTN","LRVR",144,0)
LRTM60(LRX) ; Calculate days back for delta check based on specimen collection date/time
"RTN","LRVR",145,0)
 ;
"RTN","LRVR",146,0)
 ; Call with LRX = specimen collection date/time (FileMan D/T format)
"RTN","LRVR",147,0)
 ;
"RTN","LRVR",148,0)
 ; Return LRY = Inverse date/time value of delta days back
"RTN","LRVR",149,0)
 ;
"RTN","LRVR",150,0)
 N LRDB,LRY
"RTN","LRVR",151,0)
 S LRDB=$P($G(^LAB(69.9,1,0)),U,7)
"RTN","LRVR",152,0)
 I LRDB="" S LRDB=1
"RTN","LRVR",153,0)
 S LRY=9999999-$$FMADD^XLFDT(LRX,-LRDB)
"RTN","LRVR",154,0)
 Q LRY
"RTN","LRVR0")
0^69^B109458597
"RTN","LRVR0",1,0)
LRVR0 ;DALOI/STAFF - LEDI MI/AP Data Verification ;03/24/11  15:17
"RTN","LRVR0",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVR0",3,0)
 ;
"RTN","LRVR0",4,0)
 ; LEDI MI/AP Auto-instrument verification
"RTN","LRVR0",5,0)
 ; Called from LRVR
"RTN","LRVR0",6,0)
 Q
"RTN","LRVR0",7,0)
 ;
"RTN","LRVR0",8,0)
 ;
"RTN","LRVR0",9,0)
EN ;
"RTN","LRVR0",10,0)
 N EAMODE,LA7X,LRANYAA,LRAO,LRBG0,LRCFL,LRCMNT,LRDINST,LREND,LRFIFO,LRFLAG,LRINTYPE,LRLEDI,LRLLT,LRMIDEF,LRMIOTH
"RTN","LRVR0",11,0)
 N LRNOP,LRONESPC,LRONETST,LRPG,LRPTP,LRSAME,LRSB,LRSS,LRTM60,LRTX,LRUID,LRWRDVEW,LRX,X,Y
"RTN","LRVR0",12,0)
 ;
"RTN","LRVR0",13,0)
 S LRSS=$P($G(^LRO(68,+$G(LRAA),0)),U,2) Q:LRSS=""
"RTN","LRVR0",14,0)
 I LRSS'?1(1"MI",1"SP",1"CY",1"EM") Q
"RTN","LRVR0",15,0)
 ;
"RTN","LRVR0",16,0)
 S LRDINST=+$$KSP^XUPARAM("INST")
"RTN","LRVR0",17,0)
 S LRLEDI=1,LRCFL="",EAMODE=1,LRWRDVEW=1
"RTN","LRVR0",18,0)
 S LRX=$S(+$P($G(^LAB(69.9,1,0)),U,7):+$P(^(0),U,7),1:1)
"RTN","LRVR0",19,0)
 S LRANYAA=+$P($G(^LRO(68.2,LRLL,10,LRPROF,0)),"^",3)
"RTN","LRVR0",20,0)
 I $G(LRVBY)=1 D ACC
"RTN","LRVR0",21,0)
 I $G(LRVBY)=2 S LRUID="" D UID
"RTN","LRVR0",22,0)
 D CLEAN
"RTN","LRVR0",23,0)
 Q
"RTN","LRVR0",24,0)
 ;
"RTN","LRVR0",25,0)
 ;
"RTN","LRVR0",26,0)
UID ;UID driven look-up
"RTN","LRVR0",27,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVR0",28,0)
 F  D  Q:$G(LREND)
"RTN","LRVR0",29,0)
 . I $G(IOF)'="" W @IOF
"RTN","LRVR0",30,0)
 . K C5,DIC,DIR,DIRUT,DTOUT,DUOUT,LRAB,LRDEL,LRDL,LRFP,LRLDT,LRNG,LRNM,LRNOP,LRSET,LRTEST,LRVER,T,X,Y,Z
"RTN","LRVR0",31,0)
 . S X=DUZ D DUZ^LRX S LRTEC=LRUSI
"RTN","LRVR0",32,0)
 . D WLN^LRVRA I $G(LRNOP) D NEXT^LRVRA Q
"RTN","LRVR0",33,0)
 . S LRISQN=$O(^LAH(LRLL,1,"U",LRUID,0))
"RTN","LRVR0",34,0)
 . I 'LRISQN D NEXT^LRVRA Q
"RTN","LRVR0",35,0)
 . I '($D(^LAH(LRLL,1,LRISQN,0))#2) D ERR1,NEXT^LRVRA Q
"RTN","LRVR0",36,0)
 . S LRX=$G(^LAH(LRLL,1,LRISQN,0))
"RTN","LRVR0",37,0)
 . W !,?2,"Seq #: ",LRISQN,?13," Accession: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")
"RTN","LRVR0",38,0)
 . I $P(LRX,"^",10) W ?40," Results received: ",$$FMTE^XLFDT($P(LRX,"^",10),"1M")
"RTN","LRVR0",39,0)
 . W !,?20,"UID: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),"UNKNOWN"),"^")
"RTN","LRVR0",40,0)
 . I $P(LRX,"^",11) W ?44," Last updated: ",$$FMTE^XLFDT($P(LRX,"^",11),"1M")
"RTN","LRVR0",41,0)
 . D ACCSET
"RTN","LRVR0",42,0)
 . I $G(LRNOP) D UNLOCK Q
"RTN","LRVR0",43,0)
 . I "SPCYEM"[LRSS D ^LRVRAP4
"RTN","LRVR0",44,0)
 . I LRSS="MI" D PROC,ACCEPT
"RTN","LRVR0",45,0)
 . D UNLOCK,NEXT^LRVRA
"RTN","LRVR0",46,0)
 D CLEAN
"RTN","LRVR0",47,0)
 Q
"RTN","LRVR0",48,0)
 ;
"RTN","LRVR0",49,0)
 ;
"RTN","LRVR0",50,0)
ERR1 ;Look-up Error
"RTN","LRVR0",51,0)
 W !,"No data for "_LRUID_" in file"
"RTN","LRVR0",52,0)
 Q
"RTN","LRVR0",53,0)
 ;
"RTN","LRVR0",54,0)
 ;
"RTN","LRVR0",55,0)
CLEAN ;
"RTN","LRVR0",56,0)
 ;
"RTN","LRVR0",57,0)
 ; Task of background jobs for workload and HL7 message processing
"RTN","LRVR0",58,0)
 D ^LRCAPV2
"RTN","LRVR0",59,0)
 ;
"RTN","LRVR0",60,0)
 K ^TMP("LRMI",$J)
"RTN","LRVR0",61,0)
 K AGE,DFN,I,LRACC,LRCDT,DIRUT
"RTN","LRVR0",62,0)
 K LRCEN,LRDFN,LRDPF,LRNOP,LRLOCK,LRPUID,LRISQN,LRODT,LROU3,LRPROF
"RTN","LRVR0",63,0)
 K LRSN,LRSTATUS,LRTEC,LRUSI,LRVBY,PNM,SSN,X,Y
"RTN","LRVR0",64,0)
 K ZTRTN,ZTIO,ZTDTH,ZTDESC
"RTN","LRVR0",65,0)
 D ^LRVRKIL
"RTN","LRVR0",66,0)
 Q
"RTN","LRVR0",67,0)
 ;
"RTN","LRVR0",68,0)
 ;
"RTN","LRVR0",69,0)
ACC ; Accession number look-up
"RTN","LRVR0",70,0)
 D ADATE^LRWU
"RTN","LRVR0",71,0)
 I LRAD<1 S LRNOP=1 Q
"RTN","LRVR0",72,0)
 S LRAN=0
"RTN","LRVR0",73,0)
 F  D  Q:$G(LRDBUG,$G(LREND))
"RTN","LRVR0",74,0)
 . I $G(IOF)'="" W @IOF
"RTN","LRVR0",75,0)
 . K DIR,DIC,Y,LRNOP
"RTN","LRVR0",76,0)
 . S LRAN=$O(^LAH(LRLL,1,"C",LRAN)) I 'LRAN D ACCMSG Q
"RTN","LRVR0",77,0)
 . S Y=LRAN
"RTN","LRVR0",78,0)
 . S LRISQN=$O(^LAH(LRLL,1,"C",LRAN,0)) I 'LRISQN D ACCMSG Q
"RTN","LRVR0",79,0)
 . I '$O(^LAH(LRLL,1,LRISQN,0)) D ACCMSG Q
"RTN","LRVR0",80,0)
 . S DIR(0)="FO^1:10",DIR("A")="Enter Accession number part",DIR("?")="^D LW^LRVR"
"RTN","LRVR0",81,0)
 . S DIR("S")="I $O(^LAH(LRLL,1,""C"","_Y_",0)"
"RTN","LRVR0",82,0)
 . I $G(LRAN) S DIR("B")=LRAN
"RTN","LRVR0",83,0)
 . D ^DIR
"RTN","LRVR0",84,0)
 . I $D(DIRUT) D STOP^LRVR S LRNOP=1 Q
"RTN","LRVR0",85,0)
 . S LRAN=+Y I Y<1 D ACCMSG Q
"RTN","LRVR0",86,0)
 . D ISQN I $G(LRNOP) Q
"RTN","LRVR0",87,0)
 . D ACCSET
"RTN","LRVR0",88,0)
 . S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVR0",89,0)
 . I $G(LRNOP) D UNLOCK Q
"RTN","LRVR0",90,0)
 . I "SPCYEM"[LRSS D ^LRVRAP4
"RTN","LRVR0",91,0)
 . I LRSS="MI" D PROC,ACCEPT
"RTN","LRVR0",92,0)
 . D UNLOCK
"RTN","LRVR0",93,0)
 ;
"RTN","LRVR0",94,0)
 D CLEAN
"RTN","LRVR0",95,0)
 Q
"RTN","LRVR0",96,0)
 ;
"RTN","LRVR0",97,0)
 ;
"RTN","LRVR0",98,0)
ACCMSG ;
"RTN","LRVR0",99,0)
 W !,"  No accession available for this Load/Worklist",!
"RTN","LRVR0",100,0)
 D STOP^LRVR S LRNOP=1
"RTN","LRVR0",101,0)
 Q
"RTN","LRVR0",102,0)
 ;
"RTN","LRVR0",103,0)
 ;
"RTN","LRVR0",104,0)
PROC ;Process the entry from LAH(LRLL
"RTN","LRVR0",105,0)
 Q:$$LEDIERR^LRVRMI0(LRLL,LRISQN,0,1)
"RTN","LRVR0",106,0)
 ;
"RTN","LRVR0",107,0)
 ; Set MI specific variables
"RTN","LRVR0",108,0)
 S LRBG0=^LR(LRDFN,"MI",LRIDT,0),LRSSC=$P(LRBG0,U,5)_U_$P(LRBG0,U,11),LRFIFO=1
"RTN","LRVR0",109,0)
 ;
"RTN","LRVR0",110,0)
 D EN^LRVRMI1
"RTN","LRVR0",111,0)
 Q
"RTN","LRVR0",112,0)
 ;
"RTN","LRVR0",113,0)
 ;
"RTN","LRVR0",114,0)
ACCSET ;Set up accession variables
"RTN","LRVR0",115,0)
 N DA,DIC,DIR,DIRUT,DTOUT,DUOUT,LRCNT,LRLAHD,LRI,LRNODE
"RTN","LRVR0",116,0)
 K LRERR
"RTN","LRVR0",117,0)
 S (LRLOCK,LRNOP)=0,LRLAHD=$G(^LAH(LRLL,1,LRISQN,0))
"RTN","LRVR0",118,0)
 I LRLAHD="" D  Q
"RTN","LRVR0",119,0)
 . W !,"^LAH("_LRLL_",1,"_LRISQN_",0)  Global is corrupt"
"RTN","LRVR0",120,0)
 . D ZAP S LRNOP=1
"RTN","LRVR0",121,0)
 ;
"RTN","LRVR0",122,0)
 S LRAA=$P(LRLAHD,U,3)
"RTN","LRVR0",123,0)
 I $P(^LRO(68,LRAA,0),U,2)'=LRSS  W !,"Not a "_LRSS_" Area - Abort",! S LRNOP=1 Q
"RTN","LRVR0",124,0)
 S LRAN=$P(LRLAHD,U,5),LRAD=$P(LRLAHD,U,4)
"RTN","LRVR0",125,0)
 ;
"RTN","LRVR0",126,0)
 I LRAA=""!(LRAD="")!(LRAN="") D  Q
"RTN","LRVR0",127,0)
 . W !,"^LAH("_LRLL_",1,"_LRISQN_",0)  Global is corrupt"
"RTN","LRVR0",128,0)
 . D ZAP S LRNOP=1
"RTN","LRVR0",129,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRVR0",130,0)
 . W !,"Accession does not exist in ACCESSION file (#68)"
"RTN","LRVR0",131,0)
 . D ZAP S LRNOP=1
"RTN","LRVR0",132,0)
 ;
"RTN","LRVR0",133,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRCEN=$S($D(^(.1)):^(.1),1:0)
"RTN","LRVR0",134,0)
 S LRACC=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),LRCDT=$P($G(^(3)),U)
"RTN","LRVR0",135,0)
 S LRODT=$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=$P(^(0),U,5)
"RTN","LRVR0",136,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),LRIDT=$P(^(3),U,5)
"RTN","LRVR0",137,0)
 S LRUID=$P(LRORU3,U),LRTS=""
"RTN","LRVR0",138,0)
 ;
"RTN","LRVR0",139,0)
 S LRI=0
"RTN","LRVR0",140,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:LRI<1!$G(LRTS)  S LRNODE=^(LRI,0) I $P(LRNODE,U,2)<50 S LRTS=+LRNODE
"RTN","LRVR0",141,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRVR0",142,0)
 D PT^LRX
"RTN","LRVR0",143,0)
 ;
"RTN","LRVR0",144,0)
 ; Patient info displayed during UID lookup - display here when lookup by accession number
"RTN","LRVR0",145,0)
 I $G(LRVBY)'=2 D
"RTN","LRVR0",146,0)
 . W !,PNM,?30,SSN,"  Age: ",AGE(2)
"RTN","LRVR0",147,0)
 . W !,"ORDER #: ",LRCEN,"    ",LRACC,"    ["_LRUID,"]"
"RTN","LRVR0",148,0)
 ;
"RTN","LRVR0",149,0)
 I $$GET^XPAR("USR^DIV^PKG","LR MI VERIFY DISPLAY PROVIDER",1,"Q") D PROV^LRMIEDZ2
"RTN","LRVR0",150,0)
 ;
"RTN","LRVR0",151,0)
 S DIR(0)="E"
"RTN","LRVR0",152,0)
 D ^DIR
"RTN","LRVR0",153,0)
 I $D(DIRUT) S LRNOP=1 Q
"RTN","LRVR0",154,0)
 ;
"RTN","LRVR0",155,0)
 K LRERR
"RTN","LRVR0",156,0)
 S X=$$GETLOCK^LRUTIL("^LR(LRDFN,LRSS,LRIDT)",10,1)
"RTN","LRVR0",157,0)
 I 'X S LRERR=1 D NOLOCK Q
"RTN","LRVR0",158,0)
 S X=$$GETLOCK^LRUTIL("^LRO(68,LRAA,1,LRAD,1,LRAN)",10,1)
"RTN","LRVR0",159,0)
 I 'X S LRERR=2 D NOLOCK Q
"RTN","LRVR0",160,0)
 ;
"RTN","LRVR0",161,0)
 S LRLOCK=1
"RTN","LRVR0",162,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",3) D
"RTN","LRVR0",163,0)
 . N LRAA,LRAD,LRAN
"RTN","LRVR0",164,0)
 . S LRSTATUS="C" D P15^LROE1
"RTN","LRVR0",165,0)
 . I LRCDT<1 S LRNOP=1
"RTN","LRVR0",166,0)
 ;
"RTN","LRVR0",167,0)
 I '$G(LRNOP),$P($G(^LRO(69,LRODT,1,LRSN,1)),U,4)'="C" D
"RTN","LRVR0",168,0)
 . W !,"You cannot verify an accession which has not been collected.",$C(7)
"RTN","LRVR0",169,0)
 . S LRNOP=1
"RTN","LRVR0",170,0)
 ;
"RTN","LRVR0",171,0)
 ; Determine if one or more tests on accession.
"RTN","LRVR0",172,0)
 S (LRI,LRCNT,LRPTP)=0
"RTN","LRVR0",173,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:'LRI  D
"RTN","LRVR0",174,0)
 . I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI,0),"^",2)<50 S LRCNT=LRCNT+1,LRPTP=LRI
"RTN","LRVR0",175,0)
 ;
"RTN","LRVR0",176,0)
 ; If more than one test on accession then select the test to work with (URGENCY<50 - non-workload tests).
"RTN","LRVR0",177,0)
 I LRCNT>1 D
"RTN","LRVR0",178,0)
 . K DA,DIC
"RTN","LRVR0",179,0)
 . S DIC="^LRO(68,LRAA,1,LRAD,1,LRAN,4,",DIC(0)="AEMOQ",DIC("A")="Select TEST/PROCEDURE: ",DIC("S")="I $P(^(0),U,2)<50"
"RTN","LRVR0",180,0)
 . S DA(2)=LRAA,DA(1)=LRAD,DA=LRAN,LRPTP=0
"RTN","LRVR0",181,0)
 . D ^DIC
"RTN","LRVR0",182,0)
 . I Y<1 S LRNOP=1 Q
"RTN","LRVR0",183,0)
 . S LRPTP=+Y
"RTN","LRVR0",184,0)
 ;
"RTN","LRVR0",185,0)
 I $G(LRNOP) Q
"RTN","LRVR0",186,0)
 ;
"RTN","LRVR0",187,0)
 S LRMIDEF=$P(^LAB(69.9,1,1),U,10),LRMIOTH=$P(^(1),U,11)
"RTN","LRVR0",188,0)
 ;
"RTN","LRVR0",189,0)
 ; Set interface type
"RTN","LRVR0",190,0)
 S LRINTYPE=$P(^LAH(LRLL,1,LRISQN,0),"^",12)
"RTN","LRVR0",191,0)
 ;
"RTN","LRVR0",192,0)
 Q
"RTN","LRVR0",193,0)
 ;
"RTN","LRVR0",194,0)
 ;
"RTN","LRVR0",195,0)
NOLOCK ; Not able to lock message
"RTN","LRVR0",196,0)
 W !!,$S($G(LRERR)=1:" **Accession** ",$G(LRERR)=2:"**Patient's ^LR( file**",1:"Record")_" is locked by another user. " H 5
"RTN","LRVR0",197,0)
 S LRNOP=1
"RTN","LRVR0",198,0)
 Q
"RTN","LRVR0",199,0)
 ;
"RTN","LRVR0",200,0)
 ;
"RTN","LRVR0",201,0)
UNLOCK ; Unlock accession and ^LR( global
"RTN","LRVR0",202,0)
 Q:'$G(LRLOCK)
"RTN","LRVR0",203,0)
 L -^LRO(68,$G(LRAA),1,$G(LRAD),1,$G(LRAN))
"RTN","LRVR0",204,0)
 L -^LR($G(LRDFN),$G(LRSS),$G(LRIDT))
"RTN","LRVR0",205,0)
 Q
"RTN","LRVR0",206,0)
 ;
"RTN","LRVR0",207,0)
 ;
"RTN","LRVR0",208,0)
ACCEPT ;Display results and accept data
"RTN","LRVR0",209,0)
 N LRBATCH,LRMODE,LRNPTP
"RTN","LRVR0",210,0)
 I $G(LREND) S LREND=0 Q
"RTN","LRVR0",211,0)
 ;
"RTN","LRVR0",212,0)
 S LRMODE="LDSI",LRBATCH=1
"RTN","LRVR0",213,0)
 D DQ^LRMIPSZ1
"RTN","LRVR0",214,0)
 ;
"RTN","LRVR0",215,0)
 D EC^LRMIEDZ4
"RTN","LRVR0",216,0)
 S LRTS=LRTS(LRI)
"RTN","LRVR0",217,0)
 ;
"RTN","LRVR0",218,0)
 K DIR
"RTN","LRVR0",219,0)
 S DIR(0)="Y",DIR("A")="Do you want to APPROVE these results",DIR("B")="NO"
"RTN","LRVR0",220,0)
 S DIR("?")="Enter Y if you want to approve these results"
"RTN","LRVR0",221,0)
 S DIR("?",1)="Entering Y will store the results in the Lab System"
"RTN","LRVR0",222,0)
 D ^DIR
"RTN","LRVR0",223,0)
 I $D(DIRUT) S LRNOP=1 Q
"RTN","LRVR0",224,0)
 I Y=0 D PURG Q
"RTN","LRVR0",225,0)
 I Y<1 S LRNOP=1 Q
"RTN","LRVR0",226,0)
 ;
"RTN","LRVR0",227,0)
 D EN^LRVRMI4
"RTN","LRVR0",228,0)
 ;
"RTN","LRVR0",229,0)
 ; Store performing lab info
"RTN","LRVR0",230,0)
 I $D(^TMP("LRPL",$J)) D ROLLUPPL^LRRPLUA(LRDFN,LRSS,LRIDT)
"RTN","LRVR0",231,0)
 ;
"RTN","LRVR0",232,0)
 ; Ask for performing laboratory assignment
"RTN","LRVR0",233,0)
 W !! D EDIT^LRRPLU(LRDFN,"MI",LRIDT)
"RTN","LRVR0",234,0)
 ;
"RTN","LRVR0",235,0)
 ; Store reporting lab
"RTN","LRVR0",236,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVR0",237,0)
 ;
"RTN","LRVR0",238,0)
 ; Update clinical reminders
"RTN","LRVR0",239,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRVR0",240,0)
 ;
"RTN","LRVR0",241,0)
 ; Ask to send CPRS alert
"RTN","LRVR0",242,0)
 D ASKXQA^LRMIEDZ2
"RTN","LRVR0",243,0)
 ;
"RTN","LRVR0",244,0)
 ; Update accession and order
"RTN","LRVR0",245,0)
 D EC3^LRMIEDZ2
"RTN","LRVR0",246,0)
 ;
"RTN","LRVR0",247,0)
 ; Queue results if LEDI and cleanup
"RTN","LRVR0",248,0)
 D LEDI,ZAP
"RTN","LRVR0",249,0)
 K ^TMP("LRMI",$J)
"RTN","LRVR0",250,0)
 ;
"RTN","LRVR0",251,0)
 Q
"RTN","LRVR0",252,0)
 ;
"RTN","LRVR0",253,0)
 ;
"RTN","LRVR0",254,0)
PURG ; Ask if the entry should be purged from ^LAH(
"RTN","LRVR0",255,0)
 W !
"RTN","LRVR0",256,0)
 N DIR
"RTN","LRVR0",257,0)
 S DIR(0)="Y",DIR("A")="Do you want to PURGE these results",DIR("B")="NO"
"RTN","LRVR0",258,0)
 S DIR("?",1)="Enter NO if you want to process these results at a later time"
"RTN","LRVR0",259,0)
 S DIR("?")="Enter YES to remove these results from the list"
"RTN","LRVR0",260,0)
 D ^DIR
"RTN","LRVR0",261,0)
 I $D(DIRUT) S LRNOP=1 Q
"RTN","LRVR0",262,0)
 I Y=1 D ZAP S LRNOP=1
"RTN","LRVR0",263,0)
 Q
"RTN","LRVR0",264,0)
 ;
"RTN","LRVR0",265,0)
 ;
"RTN","LRVR0",266,0)
ZAP ; Remove entry from ^LAH( global
"RTN","LRVR0",267,0)
 N REC
"RTN","LRVR0",268,0)
 S REC=$S($G(ISQN):ISQN,1:$G(LRISQN))
"RTN","LRVR0",269,0)
 I LRLL,REC D ZAPALL^LRVR3(LRLL,REC)
"RTN","LRVR0",270,0)
 Q
"RTN","LRVR0",271,0)
 ;
"RTN","LRVR0",272,0)
 ;
"RTN","LRVR0",273,0)
SETACC ;
"RTN","LRVR0",274,0)
 N LRFILE,LRIENS,LRFDA,LRERR
"RTN","LRVR0",275,0)
 S LRFILE=68.04,LRERR=""
"RTN","LRVR0",276,0)
 S LRIENS=LRTS_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRVR0",277,0)
 S LRFDA(1,LRFILE,LRIENS,3)=DUZ
"RTN","LRVR0",278,0)
 S LRFDA(1,LRFILE,LRIENS,4)=$$NOW^XLFDT
"RTN","LRVR0",279,0)
 S LRFDA(1,LRFILE,LRIENS,8)=$G(LRCDEF)
"RTN","LRVR0",280,0)
 D FILE^DIE("KS","LRFDA(1)","LRERR")
"RTN","LRVR0",281,0)
 Q
"RTN","LRVR0",282,0)
 ;
"RTN","LRVR0",283,0)
 ;
"RTN","LRVR0",284,0)
LEDI ; If LEDI put results in queue to return to collecting lab
"RTN","LRVR0",285,0)
 ; Called from above, LRMIEDZ2, LRMISTF1 and LRVRAP4.
"RTN","LRVR0",286,0)
 N IEN,LRCDEFX,LRERR,LRIDT,LRORDT,LRORU3,LRSS,LRTSDEF
"RTN","LRVR0",287,0)
 Q:'$D(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0))
"RTN","LRVR0",288,0)
 ;
"RTN","LRVR0",289,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRVR0",290,0)
 Q:'$P(LRORU3,U,3)
"RTN","LRVR0",291,0)
 ;
"RTN","LRVR0",292,0)
 S LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,4)
"RTN","LRVR0",293,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVR0",294,0)
 S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
"RTN","LRVR0",295,0)
 I '$$OK2SEND^LA7SRR D LEDINO Q
"RTN","LRVR0",296,0)
 ;
"RTN","LRVR0",297,0)
 I '$G(LRCDEF) N LRCDEF I "SPEMCY"[LRSS S LRCDEF=3241,LRCDEFX=1
"RTN","LRVR0",298,0)
 I '$G(LRTS) N LRTS D
"RTN","LRVR0",299,0)
 . S IEN=0
"RTN","LRVR0",300,0)
 . F  S IEN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,IEN)) Q:IEN<1  D  Q:$G(LRTS)
"RTN","LRVR0",301,0)
 . . I $P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,IEN,0)),U,2)<50 S LRTS=IEN,LRTSDEF=1
"RTN","LRVR0",302,0)
 I $G(LRTS) D SETACC
"RTN","LRVR0",303,0)
 ;
"RTN","LRVR0",304,0)
 ; Comment out the following line after testing is complete
"RTN","LRVR0",305,0)
 W !!,$$CJ^XLFSTR("Sending report to LEDI collecting site",IOM)
"RTN","LRVR0",306,0)
 D MIAP^LA7VMSG(LRAA,LRAD,LRAN,+$G(LRTS),LRDFN,LRSS,LRIDT,LRODT)
"RTN","LRVR0",307,0)
 Q
"RTN","LRVR0",308,0)
 ;
"RTN","LRVR0",309,0)
 ;
"RTN","LRVR0",310,0)
LEDINO ; LEDI HL7 message sending error message
"RTN","LRVR0",311,0)
 W !!,$$CJ^XLFSTR("Unable to sent report to LEDI collecting site - no date report approved",IOM)
"RTN","LRVR0",312,0)
 Q
"RTN","LRVR0",313,0)
 ;
"RTN","LRVR0",314,0)
 ;
"RTN","LRVR0",315,0)
ISQN ; Find the entry associated with this accession area and accession number
"RTN","LRVR0",316,0)
 N LRI,LRN,LRSQ
"RTN","LRVR0",317,0)
 S (LRI,LRN)=0
"RTN","LRVR0",318,0)
 F  S LRI=$O(^LAH(LRLL,1,"C",LRAN,LRI)) Q:LRI<1  D
"RTN","LRVR0",319,0)
 . N LRX
"RTN","LRVR0",320,0)
 . S LRX=$G(^LAH(LRLL,1,LRI,0))
"RTN","LRVR0",321,0)
 . ; Quit if different accession area.
"RTN","LRVR0",322,0)
 . I $P(LRX,"^",3),$P(LRX,"^",3)'=LRAA Q
"RTN","LRVR0",323,0)
 . ; Quit if different accession date and not a rollover accession (same original accession date).
"RTN","LRVR0",324,0)
 . I $P(LRX,"^",4),$P(LRX,"^",4)'=LRAD,$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",3)'=$P($G(^LRO(68,LRAA,1,$P(LRX,"^",4),1,LRAN,0)),"^",3) Q
"RTN","LRVR0",325,0)
 . I LRN W !
"RTN","LRVR0",326,0)
 . S LRN=LRN+1,LRSQ(LRN)=LRI
"RTN","LRVR0",327,0)
 . W !,?2,"Seq #: ",LRI,?13," Accession: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")
"RTN","LRVR0",328,0)
 . I $P(LRX,"^",10) W ?40," Results received: ",$$FMTE^XLFDT($P(LRX,"^",10),"1M")
"RTN","LRVR0",329,0)
 . W !,?20,"UID: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),"UNKNOWN"),"^")
"RTN","LRVR0",330,0)
 . I $P(LRX,"^",11) W ?44," Last updated: ",$$FMTE^XLFDT($P(LRX,"^",11),"1M")
"RTN","LRVR0",331,0)
 ;
"RTN","LRVR0",332,0)
 I LRN=0 W !,"No data for that accession" S LRNOP=1 Q
"RTN","LRVR0",333,0)
 I LRN=1 S (ISQN,LRISQN)=LRSQ(LRN) Q
"RTN","LRVR0",334,0)
 ;
"RTN","LRVR0",335,0)
 ; If multiple entries (sequence - overlay data=no) then ask user which one to use.
"RTN","LRVR0",336,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRVR0",337,0)
 S DIR(0)=""
"RTN","LRVR0",338,0)
 F I=1:1:LRN S DIR(0)=DIR(0)_$S(I=1:"",1:";")_I_":Seq #"_LRSQ(I)
"RTN","LRVR0",339,0)
 S DIR(0)="SO^"_DIR(0),DIR("A")="Choose sequence number"
"RTN","LRVR0",340,0)
 D ^DIR
"RTN","LRVR0",341,0)
 I $D(DIRUT) S LRNOP=1 Q
"RTN","LRVR0",342,0)
 S (ISQN,LRISQN)=+Y Q
"RTN","LRVR0",343,0)
 Q
"RTN","LRVR1")
0^204^B56535395
"RTN","LRVR1",1,0)
LRVR1 ;DALOI/CJS/JAH - LAB ROUTINE DATA VERIFICATION ;11/23/11  12:11
"RTN","LRVR1",2,0)
 ;;5.2;LAB SERVICE;**42,153,221,286,291,350**;Sep 27, 1994;Build 230
"RTN","LRVR1",3,0)
 ;
"RTN","LRVR1",4,0)
 N LRBETST,LRBEY,LRI,LRN,LRPRGSQ
"RTN","LRVR1",5,0)
 S (LRI,LRN)=0
"RTN","LRVR1",6,0)
 F  S LRI=$O(^LAH(LRLL,1,"C",LRAN,LRI)) Q:LRI<1  D
"RTN","LRVR1",7,0)
 . N LRX
"RTN","LRVR1",8,0)
 . S LRX=$G(^LAH(LRLL,1,LRI,0))
"RTN","LRVR1",9,0)
 . ; Quit if different accession area.
"RTN","LRVR1",10,0)
 . I $P(LRX,"^",3),$P(LRX,"^",3)'=LRAA Q
"RTN","LRVR1",11,0)
 . ; Quit if different accession date and not a rollover accession (same original accession date).
"RTN","LRVR1",12,0)
 . I $P(LRX,"^",4),$P(LRX,"^",4)'=LRAD,$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",3)'=$P($G(^LRO(68,LRAA,1,$P(LRX,"^",4),1,LRAN,0)),"^",3) Q
"RTN","LRVR1",13,0)
 . I LRN W !
"RTN","LRVR1",14,0)
 . S LRN=LRN+1,LRSQ=LRI,LRPRGSQ(LRI)=""
"RTN","LRVR1",15,0)
 . W !,?2,"Seq #: ",LRI,?13," Accession: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")
"RTN","LRVR1",16,0)
 . I $P(LRX,"^",10) W ?40," Results received: ",$$FMTE^XLFDT($P(LRX,"^",10),"1M")
"RTN","LRVR1",17,0)
 . W !,?20,"UID: ",$P($G(^LAH(LRLL,1,LRI,.3),"UNKNOWN"),"^")
"RTN","LRVR1",18,0)
 . I $P(LRX,"^",11) W ?44," Last updated: ",$$FMTE^XLFDT($P(LRX,"^",11),"1M")
"RTN","LRVR1",19,0)
 ;
"RTN","LRVR1",20,0)
 ; If multiple sets of results then query user if they want to display a specific sequence
"RTN","LRVR1",21,0)
 I LRN>1 D
"RTN","LRVR1",22,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,X,Y
"RTN","LRVR1",23,0)
 . S DIR(0)="SO^0:Skip Display"
"RTN","LRVR1",24,0)
 . S I=0 F  S I=$O(LRPRGSQ(I)) Q:'I  S DIR(0)=DIR(0)_";"_I_":Seq # "_I
"RTN","LRVR1",25,0)
 . S DIR("A")="Display results associated with sequence #",DIR("B")="Skip Display"
"RTN","LRVR1",26,0)
 . D ^DIR
"RTN","LRVR1",27,0)
 . I Y<1 W ! Q
"RTN","LRVR1",28,0)
 . D SEQDISP(LRLL,Y)
"RTN","LRVR1",29,0)
 ;
"RTN","LRVR1",30,0)
 G VER:LRN=1,T3:LRN>1
"RTN","LRVR1",31,0)
 ;
"RTN","LRVR1",32,0)
 ; If attempting to verify reference lab results and no entry in LAH
"RTN","LRVR1",33,0)
 ; associated with this accession then quit - do not allow manual entry
"RTN","LRVR1",34,0)
 ; of ref lab results via this option. Will not store units/normals.
"RTN","LRVR1",35,0)
 I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) W !,"No data there" Q
"RTN","LRVR1",36,0)
 ;
"RTN","LRVR1",37,0)
T1 R !,"What tray: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T1
"RTN","LRVR1",38,0)
 I X'="" S LRTRAY=X G T2
"RTN","LRVR1",39,0)
 I $D(^LRO(68.2,"AS",LRLL)) W !,"Can't MANUALLY add to a SEQUENCE instrument data file." G QUIT
"RTN","LRVR1",40,0)
 W !,"Enter manually" S %=1 D YN^DICN G QUIT:%<1,T1:%=2 S LRSQ=-1 G VER
"RTN","LRVR1",41,0)
 G VER
"RTN","LRVR1",42,0)
 ;
"RTN","LRVR1",43,0)
T2 R !,"What cup: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T2
"RTN","LRVR1",44,0)
 Q:X=""
"RTN","LRVR1",45,0)
 S LRTRCP=LRTRAY_";"_X
"RTN","LRVR1",46,0)
 K LRPRGSQ
"RTN","LRVR1",47,0)
 S LRN=0
"RTN","LRVR1",48,0)
 F LRI=0:0 S LRI=$O(^LAH(LRLL,1,"B",LRTRCP,LRI)) Q:LRI<1  S LRN=LRN+1,LRSQ=LRI,LRPRGSQ(LRI)="" W !,?5,LRI
"RTN","LRVR1",49,0)
 ;
"RTN","LRVR1",50,0)
T3 I LRN=0 W !,"No data for that tray & cup" Q
"RTN","LRVR1",51,0)
 I LRN>1 R !,"Choose sequence number: ",X:DTIME Q:'$T  I X["?"!(X'?.N) W !,"Enter a number" G T3
"RTN","LRVR1",52,0)
 I X["^"!(X="") K LRPRGSQ Q
"RTN","LRVR1",53,0)
 S:LRN'=1 LRSQ=X
"RTN","LRVR1",54,0)
 I '$D(^LAH(LRLL,1,LRSQ,0)) W !,"No data there" G T3
"RTN","LRVR1",55,0)
 ;
"RTN","LRVR1",56,0)
VER ; from LRFLAG, LRGP, LRVRW
"RTN","LRVR1",57,0)
 N LRROOT
"RTN","LRVR1",58,0)
 K LRTEST,LRNM,^TMP("LR",$J,"TMP")
"RTN","LRVR1",59,0)
 S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVR1",60,0)
 ;
"RTN","LRVR1",61,0)
 ; Determine if there are amended results to process via "EM"
"RTN","LRVR1",62,0)
 S LRROOT=$Q(^LAH("LA7 AMENDED RESULTS",LRUID,1,LRLL))
"RTN","LRVR1",63,0)
 I LRROOT'="",$QS(LRROOT,1)="LA7 AMENDED RESULTS",$QS(LRROOT,2)=LRUID,$QS(LRROOT,4)=LRLL D  Q
"RTN","LRVR1",64,0)
 . W !!,"Amended results exist for this accession. Please process these"
"RTN","LRVR1",65,0)
 . W !,"first using option Enter/verify/modify data (manual) [LRENTER]"
"RTN","LRVR1",66,0)
 ;
"RTN","LRVR1",67,0)
 D TEST
"RTN","LRVR1",68,0)
 I $O(^TMP("LR",$J,"TMP",0))="" W !,"No tests in editing profile" Q
"RTN","LRVR1",69,0)
 S X=DUZ D DUZ^LRX
"RTN","LRVR1",70,0)
 G V2:LRSQ>0
"RTN","LRVR1",71,0)
 ;
"RTN","LRVR1",72,0)
 L +^LAH(LRLL):DILOCKTM
"RTN","LRVR1",73,0)
 I '$T Q
"RTN","LRVR1",74,0)
 ;
"RTN","LRVR1",75,0)
 S (^LAH(LRLL),LRSQ)=1+$G(^LAH(LRLL))
"RTN","LRVR1",76,0)
 S ^LAH(LRLL,1,LRSQ,0)="^^"_LRAA_"^"_LRAD_"^"_LRAN_"^^MANUAL"
"RTN","LRVR1",77,0)
 D UID^LAGEN(LRLL,LRSQ,LRUID)
"RTN","LRVR1",78,0)
 D UPDT^LAGEN(LRLL,LRSQ)
"RTN","LRVR1",79,0)
 S ^LAH(LRLL,1,"C",LRAN,LRSQ)=""
"RTN","LRVR1",80,0)
 L -^LAH(LRLL)
"RTN","LRVR1",81,0)
 ;
"RTN","LRVR1",82,0)
V2 K LRPRGSQ(LRSQ)
"RTN","LRVR1",83,0)
 S LRLLOC=0,LROUTINE=$P(^LAB(69.9,1,3),U,2)
"RTN","LRVR1",84,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRLLOC=$P(^(0),U,7) S:'$L(LRLLOC) LRLLOC=0 W !,$P(^LRO(69,LRODT,1,LRSN,1),U,6)
"RTN","LRVR1",85,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR1",86,0)
 I '$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",3) D
"RTN","LRVR1",87,0)
 . N %DT,LRA1,LRA2,LRA3
"RTN","LRVR1",88,0)
 . S %DT("B")=$$FMTE^XLFDT(LRCDT,"1")
"RTN","LRVR1",89,0)
 . S LRSTATUS="C",LRA1=LRAA,LRA2=LRAD,LRA3=LRAN
"RTN","LRVR1",90,0)
 . D P15^LROE1
"RTN","LRVR1",91,0)
 . S LRAA=LRA1,LRAD=LRA2,LRAN=LRA3
"RTN","LRVR1",92,0)
 . I LRCDT<1 Q
"RTN","LRVR1",93,0)
 . I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) S $P(^(3),U,3)=$$NOW^XLFDT
"RTN","LRVR1",94,0)
 ; If user did not update then go to next
"RTN","LRVR1",95,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) Q
"RTN","LRVR1",96,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR1",97,0)
 I LRCDT<1 Q
"RTN","LRVR1",98,0)
 S LREAL=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,2),LRALERT=LROUTINE
"RTN","LRVR1",99,0)
 S I=0
"RTN","LRVR1",100,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  I $G(^(I,0)) S LRAL=$P($G(^(0)),U,2) D
"RTN","LRVR1",101,0)
 . I $G(LRAL) S LRALERT=$S(LRAL<50&(LRAL<LRALERT):LRAL,LRAL>50&(LRAL-50<LRALERT):LRAL-50,1:LRALERT)
"RTN","LRVR1",102,0)
 S LRSAMP=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,3)
"RTN","LRVR1",103,0)
 ;
"RTN","LRVR1",104,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVR1",105,0)
 I LRSS'="CH" Q
"RTN","LRVR1",106,0)
 ; Check for valid pointer to file #63 and entry in file #63.
"RTN","LRVR1",107,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRVR1",108,0)
 I LRIDT<1 W !,">>>>ERROR - NO POINTER TO FILE #63 - PLEASE NOTIFY SYSTEM MANAGER^ <<<<<",! Q
"RTN","LRVR1",109,0)
 I '$D(^LR(LRDFN,LRSS,LRIDT,0)) W !,">>>>ERROR - NO ENTRY IN FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<^ <<<",! Q
"RTN","LRVR1",110,0)
 ;
"RTN","LRVR1",111,0)
 S LRCW=8
"RTN","LRVR1",112,0)
LD S LRSS="CH"
"RTN","LRVR1",113,0)
 ;
"RTN","LRVR1",114,0)
 ; If bad entry then cleanup as best as possible.
"RTN","LRVR1",115,0)
 I '($D(^LAH(LRLL,1,LRSQ,0))#2) D  Q
"RTN","LRVR1",116,0)
 . W !!?5,"No Data for this Accession ",!!
"RTN","LRVR1",117,0)
 . D ZAPALL^LRVR3(LRLL,LRSQ)
"RTN","LRVR1",118,0)
 . K LRPRGSQ
"RTN","LRVR1",119,0)
 ;
"RTN","LRVR1",120,0)
 ; Store any new methods with existing methods on file.
"RTN","LRVR1",121,0)
 S LRMETH=$P(^LAH(LRLL,1,LRSQ,0),U,7) S:$D(LRGVP) LRMETH=LRMETH_"(GV)"
"RTN","LRVR1",122,0)
 I $P($G(^LR(LRDFN,LRSS,LRIDT,0)),U,8)'="" D
"RTN","LRVR1",123,0)
 . N I,X
"RTN","LRVR1",124,0)
 . S X=$P(^LR(LRDFN,LRSS,LRIDT,0),U,8)
"RTN","LRVR1",125,0)
 . F I=1:1:$L(X,";") I $P(X,";",I)'="",LRMETH'[$P(X,";",I) S LRMETH=LRMETH_";"_$P(X,";",I)
"RTN","LRVR1",126,0)
 I LRMETH'="" S $P(^LR(LRDFN,LRSS,LRIDT,0),U,8)=LRMETH
"RTN","LRVR1",127,0)
 ;
"RTN","LRVR1",128,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVR1",129,0)
 ;
"RTN","LRVR1",130,0)
 W:$D(^LAB(62,+LRSAMP,0)) !,"Sample: ",$P(^(0),U)
"RTN","LRVR1",131,0)
 ;
"RTN","LRVR1",132,0)
 D ^LRVR2
"RTN","LRVR1",133,0)
 K LRDL,LRPRGSQ
"RTN","LRVR1",134,0)
 Q  ; leave LRVR1, back to LRVR
"RTN","LRVR1",135,0)
 ;
"RTN","LRVR1",136,0)
 ;
"RTN","LRVR1",137,0)
TEST ; from LRGV1
"RTN","LRVR1",138,0)
 N LRI,LRX
"RTN","LRVR1",139,0)
 S LRI=0
"RTN","LRVR1",140,0)
 F  S LRI=$O(^TMP("LR",$J,"VTO",LRI)) Q:LRI<1  K ^(LRI,"P")
"RTN","LRVR1",141,0)
 S (LRI,LRNT)=0
"RTN","LRVR1",142,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:LRI<.5  I $D(^(LRI,0)),'$L($P(^(0),U,6)) S X=^(0) I $D(^TMP("LR",$J,"VTO",+X)) D
"RTN","LRVR1",143,0)
 . S LRNT=LRNT+1,LRTEST(LRNT)=+X,LRX=$S($P(X,"^",2)>50:$P(X,"^",9),1:$P(X,"^"))
"RTN","LRVR1",144,0)
 . I $P(X,"^",9),$P(X,"^")'=$P(X,"^",9),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$P(X,"^",9))) S LRX=$P(X,"^",9)
"RTN","LRVR1",145,0)
 . S LRTEST(LRNT,"P")=LRX_U_$$NLT^LRVER1(LRX)_"!"
"RTN","LRVR1",146,0)
 . S ^TMP("LR",$J,"VTO",+X,"P")=$P(LRTEST(LRNT,"P"),"!")
"RTN","LRVR1",147,0)
 ;
"RTN","LRVR1",148,0)
TEST1 ; from LRFLAG
"RTN","LRVR1",149,0)
 ;
"RTN","LRVR1",150,0)
 N LRI
"RTN","LRVR1",151,0)
 F LRI=1:1:LRNT S:$D(^LAB(60,+LRTEST(LRI),0)) (LRTEST(LRI),LRBETST(LRI))=LRTEST(LRI)_U_^(0)
"RTN","LRVR1",152,0)
 I $G(LRORDR)'="P" K ^TMP("LR",$J,"TMP")
"RTN","LRVR1",153,0)
 S LRNX=0
"RTN","LRVR1",154,0)
 K LRM
"RTN","LRVR1",155,0)
 F I=1:1 Q:'$D(LRTEST(I))  D
"RTN","LRVR1",156,0)
 . S X=LRTEST(I),XP=$G(LRTEST(I,"P"))
"RTN","LRVR1",157,0)
 . K LRTEST(I)
"RTN","LRVR1",158,0)
 . D EX2
"RTN","LRVR1",159,0)
 K LRTEST
"RTN","LRVR1",160,0)
 Q
"RTN","LRVR1",161,0)
 ;
"RTN","LRVR1",162,0)
 ;
"RTN","LRVR1",163,0)
EX2 ;
"RTN","LRVR1",164,0)
 ; If dataname then process and quit
"RTN","LRVR1",165,0)
 S LRSUB=$P(X,U,6)
"RTN","LRVR1",166,0)
 I LRSUB'="" D  Q
"RTN","LRVR1",167,0)
 . S LRSB=$P(LRSUB,";",2)
"RTN","LRVR1",168,0)
 . Q:'$D(LRVTS(LRSB))
"RTN","LRVR1",169,0)
 . I $D(^TMP("LR",$J,"TMP",LRSB)) S ^(LRSB,"P")=XP
"RTN","LRVR1",170,0)
 . Q:$D(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVR1",171,0)
 . S ^TMP("LR",$J,"TMP",LRSB)=+X
"RTN","LRVR1",172,0)
 . S XP=XP_$$RNLT^LRVER1(+X)
"RTN","LRVR1",173,0)
 . S ^TMP("LR",$J,"TMP",LRSB,"P")=XP
"RTN","LRVR1",174,0)
 . S:$P(X,U,18) LRM(LRSB)=+X,LRM(LRSB,"P")=XP
"RTN","LRVR1",175,0)
 . S LRBEY(+XP,LRSB)=""     ; CIDC
"RTN","LRVR1",176,0)
 ;
"RTN","LRVR1",177,0)
 I $D(^LAB(60,+X,4)),$P(^(4),"^",2) S LRCFL=LRCFL_$P(^(4),"^",2)_U
"RTN","LRVR1",178,0)
 ;
"RTN","LRVR1",179,0)
 ; If panel then explode components of panel and
"RTN","LRVR1",180,0)
 ;  set parent("P" node) to file #60 test being exploded
"RTN","LRVR1",181,0)
 S J=0
"RTN","LRVR1",182,0)
 F  S J=$O(^LAB(60,+X,2,J)) Q:J<1  I $D(^(J,0))#2 D
"RTN","LRVR1",183,0)
 . S LRNT=LRNT+1,Y=^LAB(60,+X,2,J,0)
"RTN","LRVR1",184,0)
 . S LRTEST(LRNT)=+Y_U_^LAB(60,+Y,0)
"RTN","LRVR1",185,0)
 . S LRTEST(LRNT,"P")=+XP_U_$$NLT^LRVER1(+XP)_"!"
"RTN","LRVR1",186,0)
 Q
"RTN","LRVR1",187,0)
 ;
"RTN","LRVR1",188,0)
 ;
"RTN","LRVR1",189,0)
QUIT Q
"RTN","LRVR1",190,0)
 ;
"RTN","LRVR1",191,0)
 ;
"RTN","LRVR1",192,0)
WAIT W !,"Type ""^"" to skip "
"RTN","LRVR1",193,0)
WAIT1 R X:10
"RTN","LRVR1",194,0)
 G LRVR1:X[U,WAIT1:$O(^LAH(LRLL,1,"C",LRAN,0))<1
"RTN","LRVR1",195,0)
 G LRVR1
"RTN","LRVR1",196,0)
 ;
"RTN","LRVR1",197,0)
 ;
"RTN","LRVR1",198,0)
SEQDISP(LRLL,LRISQN) ; Display test results for a LAH entry.
"RTN","LRVR1",199,0)
 ; Call with LRLL = ien of enry in LAH
"RTN","LRVR1",200,0)
 ;         LRISQN = sequence ien of enry in LAH
"RTN","LRVR1",201,0)
 ;
"RTN","LRVR1",202,0)
 N LR60,LRI,LRJ,LRSB,LRX,LRY
"RTN","LRVR1",203,0)
 ;
"RTN","LRVR1",204,0)
 W !!,"Results for Sequence #"_LRISQN
"RTN","LRVR1",205,0)
 ;
"RTN","LRVR1",206,0)
 I $O(^LAH(LRLL,1,LRISQN,1)) D
"RTN","LRVR1",207,0)
 . W !,"Test",?25,"Value",?40,"Flag",?50,"Units"
"RTN","LRVR1",208,0)
 . W !,"----",?25,"-----",?40,"----",?50,"-----"
"RTN","LRVR1",209,0)
 ;
"RTN","LRVR1",210,0)
 ; Display CH subsript results.
"RTN","LRVR1",211,0)
 S LRSB=1
"RTN","LRVR1",212,0)
 F  S LRSB=$O(^LAH(LRLL,1,LRISQN,LRSB)) Q:LRSB<1  D
"RTN","LRVR1",213,0)
 . S LRX=^LAH(LRLL,1,LRISQN,LRSB)
"RTN","LRVR1",214,0)
 . S LR60=+$O(^LAB(60,"C","CH;"_LRSB_";1",0))
"RTN","LRVR1",215,0)
 . S LR60(0)=$G(^LAB(60,LR60,0))
"RTN","LRVR1",216,0)
 . W !,$E($P(LR60(0),"^"),1,24),?25," ",$P(LRX,"^"),?39," ",$P(LRX,"^",2),?49," ",$P($P(LRX,"^",5),"!",7)
"RTN","LRVR1",217,0)
 ;
"RTN","LRVR1",218,0)
 ; Display comments
"RTN","LRVR1",219,0)
 I $D(^LAH(LRLL,1,LRISQN,1)) D
"RTN","LRVR1",220,0)
 . W !,"Comments"
"RTN","LRVR1",221,0)
 . S (LRI,LRY)=0,LRJ=""
"RTN","LRVR1",222,0)
 . F  S LRY=$O(^LAH(LRLL,1,LRISQN,1,LRY)) Q:LRY<1  D
"RTN","LRVR1",223,0)
 . . S LRX=^LAH(LRLL,1,LRISQN,1,LRY),LRI=LRI+1
"RTN","LRVR1",224,0)
 . . W !,"#",LRI," ",$P(LRX,"^")
"RTN","LRVR1",225,0)
 . . I $P(LRX,"^",2) S LRJ=LRJ_$S(LRJ'="":",",1:"")_LRJ
"RTN","LRVR1",226,0)
 . W !,"Comments # ",LRJ," previously processed"
"RTN","LRVR1",227,0)
 ;
"RTN","LRVR1",228,0)
 W !
"RTN","LRVR1",229,0)
 ;
"RTN","LRVR1",230,0)
 Q
"RTN","LRVR3")
0^78^B71492279
"RTN","LRVR3",1,0)
LRVR3 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;5/31/12  9:39
"RTN","LRVR3",2,0)
 ;;5.2;LAB SERVICE;**42,121,153,286,291,350**;Sep 27, 1994;Build 230
"RTN","LRVR3",3,0)
 ;
"RTN","LRVR3",4,0)
 D V1
"RTN","LRVR3",5,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER) K LRLOCKER
"RTN","LRVR3",6,0)
 K LRSA,LRSB,LRNOVER,LRSBCOM,LRLKOK
"RTN","LRVR3",7,0)
 ; Leave LRVR3, back to LRVR2
"RTN","LRVR3",8,0)
 Q
"RTN","LRVR3",9,0)
 ;
"RTN","LRVR3",10,0)
 ;
"RTN","LRVR3",11,0)
V1 ;
"RTN","LRVR3",12,0)
 ;
"RTN","LRVR3",13,0)
 ; Warn and prompt if it appears user is entering reference lab result and message came from auto instrument (UI type=1)
"RTN","LRVR3",14,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),$P($G(^LAH(LRLL,1,LRSQ,0)),"^",12)=1,'$$UICHK Q
"RTN","LRVR3",15,0)
 ;
"RTN","LRVR3",16,0)
 ;
"RTN","LRVR3",17,0)
 S LRTN=1
"RTN","LRVR3",18,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER)
"RTN","LRVR3",19,0)
 S LRLOCKER="^LR("_LRDFN_","""_LRSS_""","_LRIDT_")"
"RTN","LRVR3",20,0)
 L +@(LRLOCKER):DILOCKTM
"RTN","LRVR3",21,0)
 I '$T W !," This entry is being edited by someone else." Q
"RTN","LRVR3",22,0)
 ; LRNOVER set in LRVR2
"RTN","LRVR3",23,0)
 K LRLKOK D LINK Q:'$D(LRLKOK)  K LRLKOK D LKCHK Q:'$D(LRLKOK)
"RTN","LRVR3",24,0)
 K LRSA,LRSB,LRSBCOM,LRSBEPR
"RTN","LRVR3",25,0)
 ;
"RTN","LRVR3",26,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRVR3",27,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVR3",28,0)
 ;
"RTN","LRVR3",29,0)
 S LRCMTDSP=$$CHKCDSP^LRVERA
"RTN","LRVR3",30,0)
 N LRX
"RTN","LRVR3",31,0)
 S LRX=1
"RTN","LRVR3",32,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX<1  D
"RTN","LRVR3",33,0)
 . S LRSB(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",34,0)
 . I $D(LRNOVER),$D(LRVTS(LRX)),$D(^TMP("LR",$J,"TMP",LRX)) S LRNOVER(LRX)=""
"RTN","LRVR3",35,0)
 ; Copy comments from LAH
"RTN","LRVR3",36,0)
 S LRX=0
"RTN","LRVR3",37,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,1,LRX)) Q:LRX=""  S LRSBCOM(LRX)=^(LRX)
"RTN","LRVR3",38,0)
 ;
"RTN","LRVR3",39,0)
 ; Copy filler id associated with each dataname from LAH.
"RTN","LRVR3",40,0)
 M LRSBEPR=^LAH(LRLL,1,LRSQ,.1,"OBR","FID")
"RTN","LRVR3",41,0)
 ;
"RTN","LRVR3",42,0)
 ;
"RTN","LRVR3",43,0)
EDIT ;
"RTN","LRVR3",44,0)
 I $D(^LAH(LRLL,1,LRSQ,0)) D
"RTN","LRVR3",45,0)
 . N X
"RTN","LRVR3",46,0)
 . S LREDIT=1
"RTN","LRVR3",47,0)
 . F LRX=0,.1,.3 M X(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",48,0)
 . K ^LAH(LRLL,1,LRSQ),LRNUF
"RTN","LRVR3",49,0)
 . F LRX=0,.1,.3 M ^LAH(LRLL,1,LRSQ,LRX)=X(LRX) K X(LRX)
"RTN","LRVR3",50,0)
 . D ^LRVR4
"RTN","LRVR3",51,0)
 . F LRX=1:0 S LRX=$O(LRSB(LRX)) Q:LRX<1  S ^LAH(LRLL,1,LRSQ,LRX)=LRSB(LRX)
"RTN","LRVR3",52,0)
 I $O(^LAH(LRLL,1,LRSQ,1))<1 W !,"NO DATA TO APPROVE" Q
"RTN","LRVR3",53,0)
 Q:$D(LRGVP)
"RTN","LRVR3",54,0)
 ;
"RTN","LRVR3",55,0)
 N LRI
"RTN","LRVR3",56,0)
 S LRI=1
"RTN","LRVR3",57,0)
 F  S LRI=$O(LRNOVER(LRI)) Q:LRI=""  D
"RTN","LRVR3",58,0)
 . N LRX,LRERR
"RTN","LRVR3",59,0)
 . S LRX="Test Not Reviewed: "_$$GET1^DID(63.04,LRI,"","LABEL","","LRERR")
"RTN","LRVR3",60,0)
 . I $G(LRERR("DIERR",1)) W !,"For DATANAME "_LRI_" - "_LRERR("DIERR",1,"TEXT",1) Q
"RTN","LRVR3",61,0)
 . W !,LRX
"RTN","LRVR3",62,0)
 . I $D(LRSB(LRI))#2 W " = "_$P(LRSB(LRI),U)_" "_$P(LRSB(LRI),U,2)
"RTN","LRVR3",63,0)
 I $O(LRNOVER(0)) W !,"Have not been reviewed and have data.  Not approved." QUIT
"RTN","LRVR3",64,0)
 ;
"RTN","LRVR3",65,0)
 I '$P($G(LRLABKY),U) W !,$C(7),"ENTERED BUT NOT APPROVED" QUIT
"RTN","LRVR3",66,0)
 ;
"RTN","LRVR3",67,0)
 N CNT S CNT=1
"RTN","LRVR3",68,0)
 ;
"RTN","LRVR3",69,0)
AGAIN ;
"RTN","LRVR3",70,0)
 R !,"Approve for release by entering your initials: ",LRINI:DTIME
"RTN","LRVR3",71,0)
 I $E(LRINI)="^" W !!?5,$C(7),"Nothing verified!" D READ Q
"RTN","LRVR3",72,0)
 I LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVR3",73,0)
 I $S($E(LRINI)="?":1,LRINI'=LRUSI&(CNT<2):1,1:0) W !,$C(7),"Please enter your correct initials" S:$E(LRINI)="?" CNT=0 S CNT=CNT+1 G AGAIN
"RTN","LRVR3",74,0)
 I LRINI'=LRUSI W !!?5,$C(7),"Nothing verified!" D READ Q
"RTN","LRVR3",75,0)
 ;
"RTN","LRVR3",76,0)
 D V11
"RTN","LRVR3",77,0)
 D ASKXQA^LRVER3
"RTN","LRVR3",78,0)
 Q
"RTN","LRVR3",79,0)
 ;
"RTN","LRVR3",80,0)
 ;
"RTN","LRVR3",81,0)
V11 ; Still locked from V1 L ^LR(LRDFN,LRSS,LRIDT)
"RTN","LRVR3",82,0)
 ;   Set filler id as external package reference for each data name
"RTN","LRVR3",83,0)
 N LRCORECT,LRNOW,LRX
"RTN","LRVR3",84,0)
 S (LRCORECT,LRX)=0,LRNOW=$$NOW^XLFDT
"RTN","LRVR3",85,0)
 F  S LRX=$O(^TMP("LR",$J,"TMP",LRX)) Q:LRX<1  I $D(LRVTS(LRX)),$D(LRSB(LRX)),$D(^(LRX)) D
"RTN","LRVR3",86,0)
 . K ^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",87,0)
 . I $P(LRSB(LRX),"^")="" Q
"RTN","LRVR3",88,0)
 . S $P(LRSB(LRX),U,6)=LRNOW
"RTN","LRVR3",89,0)
 . S ^LR(LRDFN,LRSS,LRIDT,LRX)=LRSB(LRX)
"RTN","LRVR3",90,0)
 . S:'$D(^LRO(68,"AC",LRDFN,LRIDT,LRX)) ^(LRX)="" I LRVF S ^(LRX)=""
"RTN","LRVR3",91,0)
 . I $G(LRSBEPR(LRX))="" Q
"RTN","LRVR3",92,0)
 . N LRDATA,LRSITE
"RTN","LRVR3",93,0)
 . S LRSITE=$G(LRDUZ(2))
"RTN","LRVR3",94,0)
 . I LRSITE="" S LRSITE=$P(LRSB(LRX),"^",9)
"RTN","LRVR3",95,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRIDT_","_LRX,LRDATA(.02)=4,LRDATA(1)=LRSBEPR(LRX)
"RTN","LRVR3",96,0)
 . I LRSITE'="" S LRDATA(.03)=LRSITE_";DIC(4,"
"RTN","LRVR3",97,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVR3",98,0)
 ;
"RTN","LRVR3",99,0)
A3 ; Called from LRVRPOC
"RTN","LRVR3",100,0)
 ;
"RTN","LRVR3",101,0)
 ; Set reporting site in file #63.
"RTN","LRVR3",102,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVR3",103,0)
 ;
"RTN","LRVR3",104,0)
 I +LRDPF=2&($G(LRSS)'="BB")&('$$CHKINP^LRBEBA4(LRDFN,LRODT)) D
"RTN","LRVR3",105,0)
 . D BAWRK^LRBEBA(LRODT,LRSN,1,.LRBEY,.LRBETST)
"RTN","LRVR3",106,0)
 ;
"RTN","LRVR3",107,0)
 D VER^LRVER3A ;unlocked in LRVER
"RTN","LRVR3",108,0)
 ;
"RTN","LRVR3",109,0)
 ; Check for LEDI and return results
"RTN","LRVR3",110,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3^LRVER3
"RTN","LRVR3",111,0)
 ;
"RTN","LRVR3",112,0)
 K LRSBCOM
"RTN","LRVR3",113,0)
 D:$P(LRPARAM,U,14)&($P($G(^LRO(68,LRAA,0)),U,16)) LOOK^LRCAPV1
"RTN","LRVR3",114,0)
 ;
"RTN","LRVR3",115,0)
 ; Check for LEDI tests not reviewed
"RTN","LRVR3",116,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),LRSS="CH",'$D(ZTQUEUED) D TNR
"RTN","LRVR3",117,0)
 ;
"RTN","LRVR3",118,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))<1 D ZAPALL(LRLL,LRSQ)
"RTN","LRVR3",119,0)
 I $D(LRPRGSQ),'$D(ZTQUEUED) D
"RTN","LRVR3",120,0)
 . W !,"Purge data from sequence number(s): "
"RTN","LRVR3",121,0)
 . F I=0:0 S I=$O(LRPRGSQ(I)) Q:I<1  W " ",I
"RTN","LRVR3",122,0)
 . S %=2 D YN^DICN Q:%'=1
"RTN","LRVR3",123,0)
 . N LAIEN
"RTN","LRVR3",124,0)
 . S LAIEN=0
"RTN","LRVR3",125,0)
 . F  S LAIEN=$O(LRPRGSQ(LAIEN)) Q:LAIEN<1  D ZAPALL(LRLL,LAIEN)
"RTN","LRVR3",126,0)
 Q
"RTN","LRVR3",127,0)
 ;
"RTN","LRVR3",128,0)
 ;
"RTN","LRVR3",129,0)
ZAP ; from LRLLS3
"RTN","LRVR3",130,0)
 D ZAPALL(LRLL,I)
"RTN","LRVR3",131,0)
 Q
"RTN","LRVR3",132,0)
 ;
"RTN","LRVR3",133,0)
 ;
"RTN","LRVR3",134,0)
LINK ; Check and save link
"RTN","LRVR3",135,0)
 D LKCHK Q:$D(LRLKOK)
"RTN","LRVR3",136,0)
 S X=$S($D(^LRO(68,+$P(LRLK,U,3),1,+$P(LRLK,U,4),1,+$P(LRLK,U,5),0)):+^(0),1:"") G LINKOK:+X=LRDFN
"RTN","LRVR3",137,0)
 S S1=PNM,S2=SSN,S3=LRDPF
"RTN","LRVR3",138,0)
 ;
"RTN","LRVR3",139,0)
 W !,$C(7),"WARNING - NO MATCHING ACCESSION WAS FOUND."
"RTN","LRVR3",140,0)
 W !,"You may need to Clear instrument/worklist data,"
"RTN","LRVR3",141,0)
 W !,"or correctly identify the sample to the system."
"RTN","LRVR3",142,0)
 ;
"RTN","LRVR3",143,0)
 I X S LRDPF=$P(^LR(X,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,?30,SSN,!,$C(7) S PNM=S1,SSN=S2,LRDPF=S3
"RTN","LRVR3",144,0)
 K S1,S2,S3
"RTN","LRVR3",145,0)
 Q:$D(LRGVP)
"RTN","LRVR3",146,0)
 W !,"ARE YOU SURE THIS IS THE CORRECT DATA" S %=2 D YN^DICN Q:%'=1
"RTN","LRVR3",147,0)
 ;
"RTN","LRVR3",148,0)
LINKOK ;
"RTN","LRVR3",149,0)
 K:$P(LRLK,U,5) ^LAH(LRLL,1,"C",+$P(LRLK,U,5),LRSQ)
"RTN","LRVR3",150,0)
 S ^LAH(LRLL,1,"C",LRAN,LRSQ)="",$P(^LAH(LRLL,1,LRSQ,0),U,3,5)=LRAA_U_LRAD_U_LRAN,LRLKOK=1
"RTN","LRVR3",151,0)
 Q
"RTN","LRVR3",152,0)
 ;
"RTN","LRVR3",153,0)
LKCHK S LRLK=$S($D(^LAH(LRLL,1,LRSQ,0)):^(0),1:"") I $P(LRLK,U,3)=LRAA&($P(LRLK,U,4)=LRAD)&($P(LRLK,U,5)=LRAN) S LRLKOK=1
"RTN","LRVR3",154,0)
 Q
"RTN","LRVR3",155,0)
 ;
"RTN","LRVR3",156,0)
 ;
"RTN","LRVR3",157,0)
ZAP2 ;Clear ^LAH(
"RTN","LRVR3",158,0)
 D ZAPALL(LRLL,I)
"RTN","LRVR3",159,0)
 Q
"RTN","LRVR3",160,0)
 ;
"RTN","LRVR3",161,0)
 ;
"RTN","LRVR3",162,0)
ZAPALL(LRLL,LAIEN) ;Clean up
"RTN","LRVR3",163,0)
 N I,NODE,SEG,SUB
"RTN","LRVR3",164,0)
 Q:'$G(LRLL)!('$G(LAIEN))
"RTN","LRVR3",165,0)
 ;
"RTN","LRVR3",166,0)
 S NODE=$G(^LAH(LRLL,1,LAIEN,0))
"RTN","LRVR3",167,0)
 K ^LAH(LRLL,1,"B",+$P(NODE,U)_";"_+$P(NODE,U,2),LAIEN)
"RTN","LRVR3",168,0)
 K ^LAH(LRLL,1,"C",+$P(NODE,U,5),LAIEN)
"RTN","LRVR3",169,0)
 K ^LAH(LRLL,1,"D",+$P(NODE,U,6),LAIEN)
"RTN","LRVR3",170,0)
 K ^LAH(LRLL,1,"E",+$P(NODE,U,8),LAIEN)
"RTN","LRVR3",171,0)
 ;
"RTN","LRVR3",172,0)
 S NODE("U")=$P($G(^LAH(LRLL,1,LAIEN,.3)),U)
"RTN","LRVR3",173,0)
 I NODE("U")'="" D
"RTN","LRVR3",174,0)
 . K ^LAH(LRLL,1,"U",NODE("U"),LAIEN)
"RTN","LRVR3",175,0)
 . S I=0
"RTN","LRVR3",176,0)
 . F  S I=$O(^LAH("LA7 AMENDED RESULTS",NODE("U"),I)) Q:'I  D
"RTN","LRVR3",177,0)
 . . K ^LAH("LA7 AMENDED RESULTS",NODE("U"),I,LRLL,LAIEN)
"RTN","LRVR3",178,0)
 ;
"RTN","LRVR3",179,0)
 S SEG=""
"RTN","LRVR3",180,0)
 F  S SEG=$O(^LAH(LRLL,1,LAIEN,.1,SEG)) Q:SEG=""  D
"RTN","LRVR3",181,0)
 . S SEGID=""
"RTN","LRVR3",182,0)
 . F  S SEGID=$O(^LAH(LRLL,1,LAIEN,.1,SEG,SEGID)) Q:SEGID=""  D
"RTN","LRVR3",183,0)
 . . S SUB=$P($G(^LAH(LRLL,1,LAIEN,.1,SEG,SEGID)),U)
"RTN","LRVR3",184,0)
 . . I SUB'="" K ^LAH(LRLL,1,"A"_SEGID,SUB,LAIEN)
"RTN","LRVR3",185,0)
 ;
"RTN","LRVR3",186,0)
 K ^LAH(LRLL,1,LAIEN)
"RTN","LRVR3",187,0)
 ;
"RTN","LRVR3",188,0)
 ; Reset counter if loadlist is clear.
"RTN","LRVR3",189,0)
 I '$O(^LAH(LRLL,1,0)) D
"RTN","LRVR3",190,0)
 . L +^LAH(LRLL):DILOCKTM Q:'$T
"RTN","LRVR3",191,0)
 . S ^LAH(LRLL)=0
"RTN","LRVR3",192,0)
 . L -^LAH(LRLL)
"RTN","LRVR3",193,0)
 ;
"RTN","LRVR3",194,0)
 Q
"RTN","LRVR3",195,0)
 ;
"RTN","LRVR3",196,0)
 ;
"RTN","LRVR3",197,0)
TNR ; List tests not reviewed and ask if user wants to delete.
"RTN","LRVR3",198,0)
 ;
"RTN","LRVR3",199,0)
 N DIR,DIROUT,DIRUT,DUOUT,LR60,I,X,Y
"RTN","LRVR3",200,0)
 ;
"RTN","LRVR3",201,0)
 ; Check if these results have already been verified
"RTN","LRVR3",202,0)
 S I=1
"RTN","LRVR3",203,0)
 F  S I=$O(^LAH(LRLL,1,LRSQ,I)) Q:'I  D
"RTN","LRVR3",204,0)
 . S X=^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",205,0)
 . I $P(X,"^")=$P($G(^LR(LRDFN,LRSS,LRIDT,I)),"^") K ^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",206,0)
 ;
"RTN","LRVR3",207,0)
 ; Quit if no unreviewed results
"RTN","LRVR3",208,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))'>1 Q
"RTN","LRVR3",209,0)
 ;
"RTN","LRVR3",210,0)
 W !,"Test(s) Not Reviewed:",!
"RTN","LRVR3",211,0)
 S I=1
"RTN","LRVR3",212,0)
 F  S I=$O(^LAH(LRLL,1,LRSQ,I)) Q:'I  D
"RTN","LRVR3",213,0)
 . S X=^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",214,0)
 . S LR60=+$O(^LAB(60,"C","CH;"_I_";1",0))
"RTN","LRVR3",215,0)
 . I LR60 W $$GET1^DIQ(60,LR60_",",.01)
"RTN","LRVR3",216,0)
 . E  W $$GET1^DID(63.04,I,"","LABEL")
"RTN","LRVR3",217,0)
 . W " = "_$P(X,"^")_" "_$P(X,"^",2)_"  "_$P($P(X,"^",5),"!",7),!
"RTN","LRVR3",218,0)
 ;
"RTN","LRVR3",219,0)
 S DIR(0)="Y",DIR("A")="Purge these test results",DIR("B")="NO"
"RTN","LRVR3",220,0)
 S DIR("?",1)="Answer 'NO' if you want to keep these results for later verification."
"RTN","LRVR3",221,0)
 S DIR("?",2)="You may need to add these tests to the loadlist profile you are using"
"RTN","LRVR3",222,0)
 S DIR("?")="and/or add these tests to the accession you are verifying."
"RTN","LRVR3",223,0)
 D ^DIR Q:$D(DIRUT)
"RTN","LRVR3",224,0)
 ;
"RTN","LRVR3",225,0)
 I Y=1 D ZAPALL(LRLL,LRSQ)
"RTN","LRVR3",226,0)
 Q
"RTN","LRVR3",227,0)
 ;
"RTN","LRVR3",228,0)
 ;
"RTN","LRVR3",229,0)
READ ;
"RTN","LRVR3",230,0)
 N X W !!,"Press ENTER or RETURN to continue: " R X:DTIME
"RTN","LRVR3",231,0)
 Q
"RTN","LRVR3",232,0)
 ;
"RTN","LRVR3",233,0)
 ;
"RTN","LRVR3",234,0)
UICHK() ; Confirm that user wants to process UI type results as reference lab results.
"RTN","LRVR3",235,0)
 ;
"RTN","LRVR3",236,0)
 N DIR,DIRUT,DTOUT,DUOUT,LROK,X,Y
"RTN","LRVR3",237,0)
 ;
"RTN","LRVR3",238,0)
 S LROK=0
"RTN","LRVR3",239,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRVR3",240,0)
 S DIR("A",1)="These results were received via an automated instrument interface and you've"
"RTN","LRVR3",241,0)
 S DIR("A",2)="indicated you're processing reference lab results. If you continue processing"
"RTN","LRVR3",242,0)
 S DIR("A",3)="then only units and reference ranges received from the instrument will be"
"RTN","LRVR3",243,0)
 S DIR("A",4)="stored. This could result in the report lacking units, reference ranges,"
"RTN","LRVR3",244,0)
 S DIR("A",5)="abnormality flags and designating an incorrect performing lab."
"RTN","LRVR3",245,0)
 S DIR("A",6)=" "
"RTN","LRVR3",246,0)
 S DIR("A",7)="Contact your local LIM or Lab ADPAC with any questions."
"RTN","LRVR3",247,0)
 S DIR("A",8)=" "
"RTN","LRVR3",248,0)
 S DIR("A")="Sure you want to continue"
"RTN","LRVR3",249,0)
 D ^DIR
"RTN","LRVR3",250,0)
 I Y=1 S LROK=1
"RTN","LRVR3",251,0)
 ;
"RTN","LRVR3",252,0)
 Q LROK
"RTN","LRVR4")
0^47^B53036474
"RTN","LRVR4",1,0)
LRVR4 ;DALOI/CJS/DALOI/FHS - LAB ROUTINE DATA VERIFICATION ;11/23/11  12:19
"RTN","LRVR4",2,0)
 ;;5.2;LAB SERVICE;**14,42,121,153,221,263,279,283,287,286,330,350**;Sep 27, 1994;Build 230
"RTN","LRVR4",3,0)
 ;
"RTN","LRVR4",4,0)
 I $D(LRSBCOM) D
"RTN","LRVR4",5,0)
 . N LRX
"RTN","LRVR4",6,0)
 . S LRX=0
"RTN","LRVR4",7,0)
 . F  S LRX=$O(LRSBCOM(LRX)) Q:LRX=""  S ^LAH(LRLL,1,LRSQ,1,LRX)=LRSBCOM(LRX)
"RTN","LRVR4",8,0)
 K %,LRSBCOM
"RTN","LRVR4",9,0)
 D LOOP
"RTN","LRVR4",10,0)
 Q
"RTN","LRVR4",11,0)
 ;
"RTN","LRVR4",12,0)
 ;
"RTN","LRVR4",13,0)
LOOP ;
"RTN","LRVR4",14,0)
 S LRLCT=0
"RTN","LRVR4",15,0)
 W !!,PNM,"   SSN: ",SSN,"   "
"RTN","LRVR4",16,0)
 I LRDPF=2 W "   LOC: ",$S(LRWRD'="":LRWRD,1:$S($L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,7)):$P(^(0),U,7),1:"??"))
"RTN","LRVR4",17,0)
 W !,"Pat Info: ",$P($G(^LR(LRDFN,.091)),U)
"RTN","LRVR4",18,0)
 W ?34," Sex: ",$S(SEX="M":"MALE",SEX="F":"FEMALE",1:SEX)
"RTN","LRVR4",19,0)
 W ?48," Age: ",$$CALCAGE^LRRPU(DOB,LRCDT)," as of ",$$FMTE^XLFDT(LRCDT,"1D")
"RTN","LRVR4",20,0)
 S LRPRAC=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,8)
"RTN","LRVR4",21,0)
 I LRPRAC>0,LRPRAC=+LRPRAC D GETS^DIQ(200,LRPRAC_",",".01;.132;.137;.138","E","LRPRAC(LRPRAC)","LRERR")
"RTN","LRVR4",22,0)
 W !,"Provider: "
"RTN","LRVR4",23,0)
 S LRLCT=LRLCT+3
"RTN","LRVR4",24,0)
 I LRPRAC'="",'$D(LRPRAC(LRPRAC,200)) W LRPRAC
"RTN","LRVR4",25,0)
 I LRPRAC,$D(LRPRAC(LRPRAC,200)) D
"RTN","LRVR4",26,0)
 . W LRPRAC(LRPRAC,200,LRPRAC_",",.01,"E"),?40," Voice pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.137,"E")
"RTN","LRVR4",27,0)
 . W !,"   Phone: ",LRPRAC(LRPRAC,200,LRPRAC_",",.132,"E"),?38," Digital pager: ",LRPRAC(LRPRAC,200,LRPRAC_",",.138,"E")
"RTN","LRVR4",28,0)
 . S LRLCT=LRLCT+1
"RTN","LRVR4",29,0)
 ;
"RTN","LRVR4",30,0)
 N PRAC,PR
"RTN","LRVR4",31,0)
 D PRAC^LR7OMERG(LRAA,LRAD,LRAN,.PRAC)
"RTN","LRVR4",32,0)
 I $O(PRAC(0)) D
"RTN","LRVR4",33,0)
 . S PR=0
"RTN","LRVR4",34,0)
 . F  S PR=$O(PRAC(PR)) Q:PR<1  I $D(^VA(200,PR,0)) W !?14,$P(^(0),"^") S LRLCT=LRLCT+1
"RTN","LRVR4",35,0)
 ;
"RTN","LRVR4",36,0)
 W ! S LRNX=0,LRVRM=1,Z=LRCDT,LRLCT=LRLCT+1
"RTN","LRVR4",37,0)
 I $P(Z1,U,7)'="" W !,"VOLUME: ",$P(Z1,U,7) S LRLCT=LRLCT+1
"RTN","LRVR4",38,0)
 S LRACC=$P(Z1,U,6)
"RTN","LRVR4",39,0)
 W !,"ACCESSION:",?30,$P(Z2,U,6),?44," ",LRACC_" ["_LRUID,"]"
"RTN","LRVR4",40,0)
 W !,LRPANEL,?30,LRDAT(2),?44," ",LRDAT
"RTN","LRVR4",41,0)
 S LRLCT=LRLCT+2
"RTN","LRVR4",42,0)
 I $D(LRALERT),LRALERT<($P(LRPARAM,U,20)+1) D
"RTN","LRVR4",43,0)
 . W !?15 W:$E(IOST,1,2)="C-" @LRVIDO
"RTN","LRVR4",44,0)
 . W "Test ordered "_$P($G(^LAB(62.05,+LRALERT,0)),U)
"RTN","LRVR4",45,0)
 . W:$E(IOST,1,2)="C-" @LRVIDOF,$C(7)
"RTN","LRVR4",46,0)
 . S LRLCT=LRLCT+1
"RTN","LRVR4",47,0)
 I $D(LRGVP) D V20 Q
"RTN","LRVR4",48,0)
 I ($O(LRSB(0))<1!$D(LRPER))&'$D(LRNUF) D LRSBCOM G EDIT
"RTN","LRVR4",49,0)
 K LRNUF
"RTN","LRVR4",50,0)
 D V20:'$D(LRPER) Q:$O(LRSB(1))<1  G:LREDIT EDIT
"RTN","LRVR4",51,0)
V36 ;
"RTN","LRVR4",52,0)
 S LRTEC=$S($D(^LRO(68,LRAA,1,LRAD,2)):$P(^(2),U),1:$S($D(LRUSI):LRUSI,1:"")),LREDIT=0
"RTN","LRVR4",53,0)
 ;
"RTN","LRVR4",54,0)
V3 ;
"RTN","LRVR4",55,0)
 D LRSBCOM,DCOM^LRVERA
"RTN","LRVR4",56,0)
 ;
"RTN","LRVR4",57,0)
 ; If entering reference lab results only allow editing comments/workload
"RTN","LRVR4",58,0)
 K DIR
"RTN","LRVR4",59,0)
 S LRLCT=0
"RTN","LRVR4",60,0)
 I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) D
"RTN","LRVR4",61,0)
 . S DIR(0)="SAO^C:Comments;W:Workload"
"RTN","LRVR4",62,0)
 . S DIR("A")="SELECT ('C' for Comments, 'W' Workload): "
"RTN","LRVR4",63,0)
 E  D
"RTN","LRVR4",64,0)
 . S DIR(0)="SAO^E:Edit;C:Comments;W:Workload"
"RTN","LRVR4",65,0)
 . S DIR("A")="SELECT ('E' to Edit, 'C' for Comments, 'W' Workload): "
"RTN","LRVR4",66,0)
 D ^DIR
"RTN","LRVR4",67,0)
 I $D(DIRUT) S X="^" G V37
"RTN","LRVR4",68,0)
 S X=Y
"RTN","LRVR4",69,0)
 S:$E(X)="E" LREDIT=1,X=""
"RTN","LRVR4",70,0)
 I X="C" D COM G LOOP
"RTN","LRVR4",71,0)
 ;
"RTN","LRVR4",72,0)
 I $E(X)="W" D  G LOOP
"RTN","LRVR4",73,0)
 . I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D STD^LRCAPV,EN^LRCAPV S LREND=0 Q
"RTN","LRVR4",74,0)
 . W !?10,"Workload is not activated. "
"RTN","LRVR4",75,0)
 ;
"RTN","LRVR4",76,0)
 S X=$S(X="@":"",X="":LRTEC,1:X),LRTEC=X
"RTN","LRVR4",77,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,2)) ^(2)="" S ^(2)=X_U_$P(^(2),U,2,99)
"RTN","LRVR4",78,0)
 G EDIT:LREDIT
"RTN","LRVR4",79,0)
V37 Q  ;LEAVE LRVR4, BACK TO LRVR3
"RTN","LRVR4",80,0)
 ;
"RTN","LRVR4",81,0)
 ;
"RTN","LRVR4",82,0)
V25 ;
"RTN","LRVR4",83,0)
 I LRVF K LRSB(LRSB),LRM(LRSB) Q
"RTN","LRVR4",84,0)
 I '$D(LRSB(LRSB)) S LRSB(LRSB)=^LR(LRDFN,LRSS,LRIDT,LRSB) Q
"RTN","LRVR4",85,0)
 Q
"RTN","LRVR4",86,0)
 ;
"RTN","LRVR4",87,0)
 ;
"RTN","LRVR4",88,0)
V20 S LRNX=$O(LRORD(LRNX)) G V35:LRNX<1 D SUBS G V20:'LRTS
"RTN","LRVR4",89,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,LRSB)),$P(^LR(LRDFN,LRSS,LRIDT,LRSB),"^")'="",^(LRSB)'["pending" D V25 G:LRVF V20
"RTN","LRVR4",90,0)
 I "CH"'=LRSS G V20
"RTN","LRVR4",91,0)
 D V25^LRVR5
"RTN","LRVR4",92,0)
 W !,$P(^LAB(60,+LRTS,0),U)
"RTN","LRVR4",93,0)
 S X1=""
"RTN","LRVR4",94,0)
 I $D(^LR(LRDFN,LRSS,LRLDT,LRSB)) D
"RTN","LRVR4",95,0)
 . S X1=$P(^(LRSB),U),(LRDL,X)=X1
"RTN","LRVR4",96,0)
 . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVR4",97,0)
 . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",X1)
"RTN","LRVR4",98,0)
 . . I X="" S X=X1
"RTN","LRVR4",99,0)
 . W:X'="" ?30,@LRFP
"RTN","LRVR4",100,0)
 S X="",LRFLG=""
"RTN","LRVR4",101,0)
 I $D(LRSB(LRSB)),$P(LRSB(LRSB),U)'="" D
"RTN","LRVR4",102,0)
 . N LRX
"RTN","LRVR4",103,0)
 . K LRNOVER(LRSB)
"RTN","LRVR4",104,0)
 . S (LRDL,LRX,X)=$P(LRSB(LRSB),U)
"RTN","LRVR4",105,0)
 . I $$GET1^DID(63.04,LRSB,"","TYPE","","LRERR")="SET" D
"RTN","LRVR4",106,0)
 . . S X=$$EXTERNAL^DILFD(63.04,LRSB,"",LRX)
"RTN","LRVR4",107,0)
 . . I X="" S X=LRX
"RTN","LRVR4",108,0)
 . W ?44," ",@LRFP," "
"RTN","LRVR4",109,0)
 . S X=LRX,Y=0
"RTN","LRVR4",110,0)
 . K LRQ
"RTN","LRVR4",111,0)
 . I X="" Q
"RTN","LRVR4",112,0)
 . I (X="canc")!(X="comment")!(X="pending") D  Q
"RTN","LRVR4",113,0)
 . . D NR
"RTN","LRVR4",114,0)
 . . W LRFLG,?56," ",$P(LRNG,U,7)
"RTN","LRVR4",115,0)
 . . S LREDIT=0
"RTN","LRVR4",116,0)
 . I LRDEL'="" S LRQ=1,LRVRM=11 D XDELTACK^LRVERA S LRVRM=1 K LRQ
"RTN","LRVR4",117,0)
 . D RANGE
"RTN","LRVR4",118,0)
 . W LRFLG,?56," ",$P(LRNG,U,7) S:X'="" LREDIT=0
"RTN","LRVR4",119,0)
 I '$D(LRNUF) S LRLCT=LRLCT+1 S:$X>80 LRLCT=LRLCT+1 D:LRLCT>22 WT G:$G(Y)'="^" V20
"RTN","LRVR4",120,0)
 ;
"RTN","LRVR4",121,0)
V35 ;
"RTN","LRVR4",122,0)
 D LRCFL:LRCFL]""
"RTN","LRVR4",123,0)
 K LRNUF
"RTN","LRVR4",124,0)
 Q
"RTN","LRVR4",125,0)
 ;
"RTN","LRVR4",126,0)
 ;
"RTN","LRVR4",127,0)
LRCFL ;
"RTN","LRVR4",128,0)
 S LREXEC=LRCFL D ^LREXEC:LRCFL[""
"RTN","LRVR4",129,0)
 D:LRLCT>22 WT
"RTN","LRVR4",130,0)
 Q
"RTN","LRVR4",131,0)
 ;
"RTN","LRVR4",132,0)
 ;
"RTN","LRVR4",133,0)
EDIT ;
"RTN","LRVR4",134,0)
 S LROUT=1 D ^LRVR5
"RTN","LRVR4",135,0)
 S LRVRM=1,LREDIT=0
"RTN","LRVR4",136,0)
 G LRCFL:LROUT!$D(LRPER),LOOP
"RTN","LRVR4",137,0)
 ;
"RTN","LRVR4",138,0)
 ;
"RTN","LRVR4",139,0)
RANGE ;
"RTN","LRVR4",140,0)
 ; If results from another system, use flags returned with results
"RTN","LRVR4",141,0)
 ; and set LRNG,LRNGS with normals from message.
"RTN","LRVR4",142,0)
 ; Check for LRDUZ(2) set for performing lab or performing lab set (piece 9) in LRSB(LRSB) array.
"RTN","LRVR4",143,0)
 I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) S Y=X D PLNR,CKPLNR,RQ Q
"RTN","LRVR4",144,0)
 I $P(LRSB(LRSB),"^",9),DUZ(2)'=$P(LRSB(LRSB),"^",9) S Y=X D PLNR,CKPLNR,RQ Q
"RTN","LRVR4",145,0)
 ;
"RTN","LRVR4",146,0)
 D RANGE^LRVER4,RQ
"RTN","LRVR4",147,0)
 Q
"RTN","LRVR4",148,0)
 ;
"RTN","LRVR4",149,0)
 ;
"RTN","LRVR4",150,0)
RQ S X=Y
"RTN","LRVR4",151,0)
NR I $D(LRSB(LRSB))#2 D
"RTN","LRVR4",152,0)
 . N I,LRX,LRY
"RTN","LRVR4",153,0)
 . I $P(X,U)="" S LRSB(LRSB)="" Q
"RTN","LRVR4",154,0)
 . S $P(LRSB(LRSB),U)=X
"RTN","LRVR4",155,0)
 . S $P(LRSB(LRSB),U,2)=LRFLG
"RTN","LRVR4",156,0)
 . S $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVR4",157,0)
 . I $P(LRSB(LRSB),U,9)="" S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVR4",158,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVR4",159,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVR4",160,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVR4",161,0)
 . I $P($P(LRSB(LRSB),U,3),"!")="" D RONLT^LRVER3
"RTN","LRVR4",162,0)
 . S LRX=LRNGS,LRY=$P(LRSB(LRSB),U,5)
"RTN","LRVR4",163,0)
 . F I=1:1:$L(LRX,U) I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,U,I)
"RTN","LRVR4",164,0)
 . S $P(LRSB(LRSB),U,5)=LRY
"RTN","LRVR4",165,0)
 ;
"RTN","LRVR4",166,0)
 Q
"RTN","LRVR4",167,0)
 ;
"RTN","LRVR4",168,0)
 ;
"RTN","LRVR4",169,0)
PLNR ; Performing lab normal ranges, use instead of current local ranges
"RTN","LRVR4",170,0)
 ; Retrieve from results when "NPC" node = 2 or greater
"RTN","LRVR4",171,0)
 ; and set LRNG and LRNGS with normals from HL7 message/interface.
"RTN","LRVR4",172,0)
 N I,LRY
"RTN","LRVR4",173,0)
 I +$G(^LR(LRDFN,LRSS,LRIDT,"NPC"))<2 Q
"RTN","LRVR4",174,0)
 S LRY=$P($G(LRSB(LRSB)),"^",5)
"RTN","LRVR4",175,0)
 S $P(LRNGS,"^")=$P(LRY,"!")
"RTN","LRVR4",176,0)
 F I=2:1:5,11,12 D
"RTN","LRVR4",177,0)
 . ; enclose in quotes if not numeric
"RTN","LRVR4",178,0)
 . I I<6,$P(LRY,"!",I)'?.N.1".".N S $P(LRY,"!",I)=$C(34)_$P(LRY,"!",I)_$C(34)
"RTN","LRVR4",179,0)
 . S $P(LRNGS,"^",I)=$P(LRY,"!",I),$P(LRNG,"^",I)=$P(LRY,"!",I),@("LRNG"_I)=$P(LRY,"!",I)
"RTN","LRVR4",180,0)
 S $P(LRNG,"^",7)=$P(LRY,"!",7),$P(LRNGS,"^",7)=$P(LRY,"!",7)
"RTN","LRVR4",181,0)
 Q
"RTN","LRVR4",182,0)
 ;
"RTN","LRVR4",183,0)
 ;
"RTN","LRVR4",184,0)
CKPLNR ; Check performing lab normal ranges and set abnormal flag
"RTN","LRVR4",185,0)
 ; based on HL7 messages/interface.
"RTN","LRVR4",186,0)
 S LRFLG=$P(LRSB(LRSB),"^",2)
"RTN","LRVR4",187,0)
 I '$D(LRQ),$E(LRFLG,2)="*" D DISPFLG^LRVER4
"RTN","LRVR4",188,0)
 Q
"RTN","LRVR4",189,0)
 ;
"RTN","LRVR4",190,0)
 ;
"RTN","LRVR4",191,0)
SUBS D SUBS^LRVER4
"RTN","LRVR4",192,0)
 Q
"RTN","LRVR4",193,0)
 ;
"RTN","LRVR4",194,0)
 ;
"RTN","LRVR4",195,0)
WT D WT^LRVER4
"RTN","LRVR4",196,0)
 Q
"RTN","LRVR4",197,0)
 ;
"RTN","LRVR4",198,0)
 ;
"RTN","LRVR4",199,0)
COM ;from LRVR5
"RTN","LRVR4",200,0)
 Q:$D(LRGVP)!('$D(LRLABKY))
"RTN","LRVR4",201,0)
 D DCOM^LRVERA
"RTN","LRVR4",202,0)
 K DR,DA,DIE
"RTN","LRVR4",203,0)
 S DIE="^LR("_LRDFN_",""CH"",",DA=LRIDT,DA(1)=LRDFN,DR=.99 D ^DIE
"RTN","LRVR4",204,0)
 Q
"RTN","LRVR4",205,0)
 ;
"RTN","LRVR4",206,0)
 ;
"RTN","LRVR4",207,0)
LRSBCOM ;Display/store comments from the instrument
"RTN","LRVR4",208,0)
 N LRSBCOM,LRI
"RTN","LRVR4",209,0)
 S LRI=0
"RTN","LRVR4",210,0)
 F  S LRI=$O(^LAH(LRLL,1,LRSQ,1,LRI)) Q:LRI=""  D
"RTN","LRVR4",211,0)
 . S LRSBCOM=^LAH(LRLL,1,LRSQ,1,LRI)
"RTN","LRVR4",212,0)
 . I $P(LRSBCOM,"^",2) Q  ; Already been processed
"RTN","LRVR4",213,0)
 . D LRSBCOM1
"RTN","LRVR4",214,0)
 . S $P(^LAH(LRLL,1,LRSQ,1,LRI),U,2)=1 ; Mark as processed
"RTN","LRVR4",215,0)
 I $G(LRQUIET) Q
"RTN","LRVR4",216,0)
 W !
"RTN","LRVR4",217,0)
 S LRLCT=$G(LRLCT)+1 D:LRLCT>22 WT
"RTN","LRVR4",218,0)
 Q
"RTN","LRVR4",219,0)
 ;
"RTN","LRVR4",220,0)
 ;
"RTN","LRVR4",221,0)
LRSBCOM1 ; Store instrument comments in file #63
"RTN","LRVR4",222,0)
 ; Check for duplicate comments in ^LAH and ^LR globals
"RTN","LRVR4",223,0)
 N LRDUP,LRERR,LRI,LRNOECHO,LRNOEXPD,LRX,LRY
"RTN","LRVR4",224,0)
 ;
"RTN","LRVR4",225,0)
 ; Don't echo comments/don't expand comment using lab description file.
"RTN","LRVR4",226,0)
 ; Used by LRNUM - called from input transform of #.01 field.
"RTN","LRVR4",227,0)
 S LRNOECHO=0,LRNOEXPD=1
"RTN","LRVR4",228,0)
 ;
"RTN","LRVR4",229,0)
 ; Check for duplicates - comment stripped if spaces, force to upper case unless
"RTN","LRVR4",230,0)
 ; flag set to store duplicates (Field #2.2 of PROFILE multiple in file #68.2)
"RTN","LRVR4",231,0)
 S LRDUP=0
"RTN","LRVR4",232,0)
 I '$P($G(^LRO(68.2,LRLL,10,+$G(LRPROF),0)),U,4) D
"RTN","LRVR4",233,0)
 . S LRI=0,LRY=$TR(LRSBCOM," ",""),LRY=$$UP^XLFSTR(LRY)
"RTN","LRVR4",234,0)
 . F  S LRI=$O(^LR(LRDFN,"CH",LRIDT,1,LRI)) Q:'LRI  D  Q:LRDUP
"RTN","LRVR4",235,0)
 . . S LRX=$P($G(^LR(LRDFN,"CH",LRIDT,1,LRI,0)),U)
"RTN","LRVR4",236,0)
 . . S LRX=$TR(LRX," ",""),LRX=$$UP^XLFSTR(LRX)
"RTN","LRVR4",237,0)
 . . I LRX=LRY S LRDUP=1
"RTN","LRVR4",238,0)
 I LRDUP=1 Q  ; Duplicate comment
"RTN","LRVR4",239,0)
 D FILECOM(LRDFN,LRIDT,LRSBCOM)
"RTN","LRVR4",240,0)
 I $G(LRQUIET) Q
"RTN","LRVR4",241,0)
 W !,"Inst Comments: "_LRSBCOM
"RTN","LRVR4",242,0)
 S LRLCT=$G(LRLCT)+1 D:LRLCT>10 WT
"RTN","LRVR4",243,0)
 Q
"RTN","LRVR4",244,0)
 ;
"RTN","LRVR4",245,0)
 ;
"RTN","LRVR4",246,0)
FILECOM(LRDFN,LRIDT,LRCMT) ; File comment in field #99
"RTN","LRVR4",247,0)
 ; Call with LRDFN = ien of patient in file #63
"RTN","LRVR4",248,0)
 ;           LRIDT = ien of specimen date/time
"RTN","LRVR4",249,0)
 ;           LRCMT = comment to store
"RTN","LRVR4",250,0)
 ;
"RTN","LRVR4",251,0)
 N LRFDA,LRERR
"RTN","LRVR4",252,0)
 S LRFDA(2,63.041,"+2,"_LRIDT_","_LRDFN_",",.01)=LRCMT
"RTN","LRVR4",253,0)
 D UPDATE^DIE("","LRFDA(2)","","LRERR(2)")
"RTN","LRVR4",254,0)
 Q
"RTN","LRVRA")
0^68^B28568230
"RTN","LRVRA",1,0)
LRVRA ;DALOI/JMC-Lab Routine Data Verification by UID ;06/04/10  19:12
"RTN","LRVRA",2,0)
 ;;5.2;LAB SERVICE;**153,221,263,350**;Sep 27, 1994;Build 230
"RTN","LRVRA",3,0)
 ;
"RTN","LRVRA",4,0)
 ;
"RTN","LRVRA",5,0)
 N LRANYAA,LRUID,LRNOP
"RTN","LRVRA",6,0)
 S LRANYAA=+$P($G(^LRO(68.2,LRLL,10,LRPROF,0)),"^",3)
"RTN","LRVRA",7,0)
 S LRUID="" D NEXT
"RTN","LRVRA",8,0)
 ;
"RTN","LRVRA",9,0)
 F  D  Q:LREND
"RTN","LRVRA",10,0)
 . K LRTEST,C5,LRSET,LRLDT,DIC,LRNM,LRNG,LRDL,LRDEL,T,LRFP,LRAB,LRVER,Y,Z
"RTN","LRVRA",11,0)
 . S LRCFL="",EAMODE=1
"RTN","LRVRA",12,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVRA",13,0)
 . D WLN I $G(LRNOP) D NEXT Q
"RTN","LRVRA",14,0)
 . D ^LRVR1,NEXT
"RTN","LRVRA",15,0)
 Q
"RTN","LRVRA",16,0)
 ;
"RTN","LRVRA",17,0)
 ;
"RTN","LRVRA",18,0)
WLN ; Select next accession (UID) to work with.
"RTN","LRVRA",19,0)
 W ! S LRNOP=0
"RTN","LRVRA",20,0)
 K DIR
"RTN","LRVRA",21,0)
 S DIR(0)="FO^1:10",DIR("A")="Unique Identifier",DIR("?")="^D LW^LRVRA"
"RTN","LRVRA",22,0)
 I LRUID'="" S DIR("B")=LRUID
"RTN","LRVRA",23,0)
 D ^DIR
"RTN","LRVRA",24,0)
 I $D(DIRUT) D STOP^LRVR S LRNOP=1 Q
"RTN","LRVRA",25,0)
 S LRUID=Y
"RTN","LRVRA",26,0)
 I LRUID'?1.10N S LRUID=$$UP^XLFSTR(LRUID)
"RTN","LRVRA",27,0)
 I $L(LRUID)<10 S LRUID=$$LWP(LRUID)
"RTN","LRVRA",28,0)
 I $L(LRUID)<10 S LRUID="" G WLN
"RTN","LRVRA",29,0)
 D UID
"RTN","LRVRA",30,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  G WLN
"RTN","LRVRA",31,0)
 . W !,"No accession on file for this UID."
"RTN","LRVRA",32,0)
 . D NEXT
"RTN","LRVRA",33,0)
 ;
"RTN","LRVRA",34,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRCEN=$S($D(^(.1)):^(.1),1:0),LRODT=$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=$P(^(0),U,5)
"RTN","LRVRA",35,0)
 S LRACC=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))
"RTN","LRVRA",36,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRVRA",37,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRVRA",38,0)
 D PT^LRX
"RTN","LRVRA",39,0)
 ;
"RTN","LRVRA",40,0)
 W !,PNM,?30,SSN_"  Age: "_AGE(2)
"RTN","LRVRA",41,0)
 W !,"ORDER #: ",LRCEN,"    "_LRACC,"    [",LRUID_"]"
"RTN","LRVRA",42,0)
 ;
"RTN","LRVRA",43,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",3) D
"RTN","LRVRA",44,0)
 . N LRAA,LRAD,LRAN
"RTN","LRVRA",45,0)
 . S LRSTATUS="C" D P15^LROE1
"RTN","LRVRA",46,0)
 . I LRCDT<1 S LRNOP=1
"RTN","LRVRA",47,0)
 I '$G(LRNOP),$P($G(^LRO(69,LRODT,1,LRSN,1)),U,4)'="C" D
"RTN","LRVRA",48,0)
 . W !,"You cannot verify an accession which has not been collected.",$C(7)
"RTN","LRVRA",49,0)
 . S LRNOP=1
"RTN","LRVRA",50,0)
 I $G(LRNOP) D NEXT
"RTN","LRVRA",51,0)
 ;
"RTN","LRVRA",52,0)
 Q
"RTN","LRVRA",53,0)
 ;
"RTN","LRVRA",54,0)
 ;
"RTN","LRVRA",55,0)
LW ; Display list of UID's available
"RTN","LRVRA",56,0)
 N DIR,DIRUT,DUOUT,DTOUT,I,J,K,L,LREND,X,Y
"RTN","LRVRA",57,0)
 S LREND=0
"RTN","LRVRA",58,0)
 S K=$$BLDHELP("",LRLL,LRPROF)
"RTN","LRVRA",59,0)
 I 'K W !,$C(7),"No results found in UID cross-reference." Q
"RTN","LRVRA",60,0)
 S J=IOSL-6,L=K\(J*2) S:'(K#(J*2)) L=L-1
"RTN","LRVRA",61,0)
 F I=0:1:L D  Q:LREND
"RTN","LRVRA",62,0)
 . W @IOF,$$CJ^XLFSTR("Current Unique Identifiers with Results Available",IOM)
"RTN","LRVRA",63,0)
 . W !,$$CJ^XLFSTR("Associated with "_$$GET1^DIQ(68,LRAA_",",.02)_" subscript",IOM),!!
"RTN","LRVRA",64,0)
 . F K=((J*2)*I)+1:1:((J*2)*I)+J D
"RTN","LRVRA",65,0)
 . . W ?3,$P($G(^TMP($J,"LR","UIDHELP",K)),"^",2)
"RTN","LRVRA",66,0)
 . . W ?43,$P($G(^TMP($J,"LR","UIDHELP",(K+J))),"^",2),!
"RTN","LRVRA",67,0)
 . W ! S DIR(0)="E" D ^DIR
"RTN","LRVRA",68,0)
 . I $D(DIRUT) D STOP^LRVR Q
"RTN","LRVRA",69,0)
 K ^TMP($J,"LR","UIDHELP")
"RTN","LRVRA",70,0)
 Q
"RTN","LRVRA",71,0)
 ;
"RTN","LRVRA",72,0)
 ;
"RTN","LRVRA",73,0)
LWP(LRSD) ; Display list of partial UID's available
"RTN","LRVRA",74,0)
 N DIR,DIRUT,DUOUT,DTOUT,I,J,K,L,LREND,LRUID,M,X,Y
"RTN","LRVRA",75,0)
 S LRSD=$G(LRSD),(LREND,M)=0,LRUID=""
"RTN","LRVRA",76,0)
 S K=$$BLDHELP(LRSD,LRLL,LRPROF)
"RTN","LRVRA",77,0)
 I 'K W !,$C(7),"No results found in UID cross-reference." Q LRUID
"RTN","LRVRA",78,0)
 S J=IOSL-6,L=K\(J*2) S:'(K#(J*2)) L=L-1
"RTN","LRVRA",79,0)
 F I=0:1:L D  Q:LREND
"RTN","LRVRA",80,0)
 . W @IOF,$$CJ^XLFSTR("Current Unique Identifiers with Results Available",IOM)
"RTN","LRVRA",81,0)
 . W !,$$CJ^XLFSTR("Associated with "_$$GET1^DIQ(68,LRAA_",",.02)_" subscript",IOM),!!
"RTN","LRVRA",82,0)
 . F K=((J*2)*I)+1:1:((J*2)*I)+J D
"RTN","LRVRA",83,0)
 . . I $D(^TMP($J,"LR","UIDHELP",K)) D
"RTN","LRVRA",84,0)
 . . . W ?3,$J(K,3),".  ",$P($G(^TMP($J,"LR","UIDHELP",K)),"^",2)
"RTN","LRVRA",85,0)
 . . . I K>M S M=K
"RTN","LRVRA",86,0)
 . . I $D(^TMP($J,"LR","UIDHELP",K+J)) D
"RTN","LRVRA",87,0)
 . . . W ?43,$J(K+J,3),".  ",$P($G(^TMP($J,"LR","UIDHELP",(K+J))),"^",2)
"RTN","LRVRA",88,0)
 . . . I (K+J)>M S M=K+J
"RTN","LRVRA",89,0)
 . . W !
"RTN","LRVRA",90,0)
 . W ! S DIR(0)="NO^1:"_$S(M>500:500,1:M),DIR("A")="Select UID"
"RTN","LRVRA",91,0)
 . D ^DIR
"RTN","LRVRA",92,0)
 . W @IOF
"RTN","LRVRA",93,0)
 . I $D(DUOUT) D STOP^LRVR Q
"RTN","LRVRA",94,0)
 . I '$D(DIRUT),Y D
"RTN","LRVRA",95,0)
 . . S LRUID=$P(^TMP($J,"LR","UIDHELP",Y),"^")
"RTN","LRVRA",96,0)
 . . D STOP^LRVR
"RTN","LRVRA",97,0)
 K ^TMP($J,"LR","UIDHELP")
"RTN","LRVRA",98,0)
 Q LRUID
"RTN","LRVRA",99,0)
 ;
"RTN","LRVRA",100,0)
 ;
"RTN","LRVRA",101,0)
NEXT ; Retrieve next UID in xref.
"RTN","LRVRA",102,0)
 N LRUIDX,LRQUIT
"RTN","LRVRA",103,0)
 S LRQUIT=0 ; Set flag
"RTN","LRVRA",104,0)
 S LRUIDX=$G(LRUID) ; Define if undefined
"RTN","LRVRA",105,0)
 F  S LRUIDX=$O(^LAH(LRLL,1,"U",LRUIDX)) Q:LRUIDX=""  D  Q:LRQUIT
"RTN","LRVRA",106,0)
 . N LRUID
"RTN","LRVRA",107,0)
 . S LRUID=LRUIDX
"RTN","LRVRA",108,0)
 . D UID
"RTN","LRVRA",109,0)
 . I LRUID'="" S LRQUIT=1 ; Found a UID from this accession area.
"RTN","LRVRA",110,0)
 S LRUID=LRUIDX
"RTN","LRVRA",111,0)
 Q
"RTN","LRVRA",112,0)
 ;
"RTN","LRVRA",113,0)
 ;
"RTN","LRVRA",114,0)
UID ; Setup accession variables for a given UID.
"RTN","LRVRA",115,0)
 ; UID selected must be from same subscript as profile accession area.
"RTN","LRVRA",116,0)
 N X
"RTN","LRVRA",117,0)
 S X=$Q(^LRO(68,"C",LRUID))
"RTN","LRVRA",118,0)
 I $QS(X,3)'=LRUID S (LRAD,LRAN)=0,LRUID="" Q
"RTN","LRVRA",119,0)
 I 'LRANYAA,$QS(X,4)'=LRAA S (LRAD,LRAN)=0,LRUID="" Q
"RTN","LRVRA",120,0)
 I $P($G(^LRO(68,LRAA,0)),"^",2)'=$P($G(^LRO(68,$QS(X,4),0)),"^",2) S (LRAD,LRAN)=0,LRUID="" Q
"RTN","LRVRA",121,0)
 S LRAA=$QS(X,4),LRAD=$QS(X,5),LRAN=$QS(X,6)
"RTN","LRVRA",122,0)
 Q
"RTN","LRVRA",123,0)
 ;
"RTN","LRVRA",124,0)
 ;
"RTN","LRVRA",125,0)
BLDHELP(LRSD,LRLL,LRPROF) ; Build list of UID's
"RTN","LRVRA",126,0)
 ; Input LRSD - seed value for partial lookups
"RTN","LRVRA",127,0)
 ;              if null or missing then return all UID's in xref.
"RTN","LRVRA",128,0)
 ;       LRLL - ien of loadlist.
"RTN","LRVRA",129,0)
 ;     LRPROF - ien of profile on loadlist.
"RTN","LRVRA",130,0)
 ; Only max of 500 allow to be displayed.
"RTN","LRVRA",131,0)
 N I,K,LRAA,LRAD,LRAN,LRSS,X,Y
"RTN","LRVRA",132,0)
 K ^TMP($J,"LR","UIDHELP")
"RTN","LRVRA",133,0)
 S LRSD=$G(LRSD),LRLL=+$G(LRLL),LRPROF=+$G(LRPROF)
"RTN","LRVRA",134,0)
 S LRAA=$P($G(^LRO(68.2,LRLL,10,LRPROF,0)),"^",2),LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LRVRA",135,0)
 S I="",K=0
"RTN","LRVRA",136,0)
 F  S I=$O(^LAH(LRLL,1,"U",I)) Q:I=""!(K>500)  D
"RTN","LRVRA",137,0)
 . I LRSD'="",LRSD'=$E(I,($L(I)-$L(LRSD))+1,$L(I)) Q  ; Is not a partial match
"RTN","LRVRA",138,0)
 . S Y=I
"RTN","LRVRA",139,0)
 . S X=$Q(^LRO(68,"C",I))
"RTN","LRVRA",140,0)
 . I $QS(X,3)'=I Q  ; UID not in "C" x-reference.
"RTN","LRVRA",141,0)
 . I 'LRANYAA,LRAA'=$QS(X,4) Q  ; Not in this accession area.
"RTN","LRVRA",142,0)
 . S LRAA=$QS(X,4),LRAD=$QS(X,5),LRAN=$QS(X,6)
"RTN","LRVRA",143,0)
 . I $P($G(^LRO(68,LRAA,0)),"^",2)'=LRSS Q  ; Not in subscript currently working with
"RTN","LRVRA",144,0)
 . I LRAA,LRAD,LRAN S Y=Y_"^"_Y_" ["_$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")_"]"
"RTN","LRVRA",145,0)
 . E  Q
"RTN","LRVRA",146,0)
 . I K=500 S Y="^Display abort - too many to list"
"RTN","LRVRA",147,0)
 . S K=K+1,^TMP($J,"LR","UIDHELP",K)=Y
"RTN","LRVRA",148,0)
 Q K
"RTN","LRVRAP4")
0^62^B33201794
"RTN","LRVRAP4",1,0)
LRVRAP4 ;DALOI/STAFF - LAB AP INTERFACE ;12/07/11  12:25
"RTN","LRVRAP4",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRAP4",3,0)
 ;
"RTN","LRVRAP4",4,0)
 ; Extracts the results information in the ^LAH(LWL,1,ISQN... global and stores it in the Lab Data AP subfile.
"RTN","LRVRAP4",5,0)
 ;
"RTN","LRVRAP4",6,0)
DISPLAY ; Display AP results
"RTN","LRVRAP4",7,0)
 ;
"RTN","LRVRAP4",8,0)
 I LRSS'?1(1"SP",1"CY",1"EM") W !,"Abort- Not an AP accession" Q
"RTN","LRVRAP4",9,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LRVRAP4",10,0)
 I POP D HOME^%ZIS Q
"RTN","LRVRAP4",11,0)
 I $D(IO("Q")) D  Q
"RTN","LRVRAP4",12,0)
 . S ZTRTN="DQ^LRVRAP4",ZTDESC="PRINT LEDI AP RESULTS",ZTSAVE("LR*")=""
"RTN","LRVRAP4",13,0)
 . D ^%ZTLOAD,HOME^%ZIS K IO("Q")
"RTN","LRVRAP4",14,0)
 ;
"RTN","LRVRAP4",15,0)
 ;
"RTN","LRVRAP4",16,0)
DQ ;
"RTN","LRVRAP4",17,0)
 U IO
"RTN","LRVRAP4",18,0)
 N LRLINE,LRI,LRPAGE
"RTN","LRVRAP4",19,0)
 S LRPAGE=1,LREND=0,$P(LRLINE,"-",IOM)=""
"RTN","LRVRAP4",20,0)
 W @IOF
"RTN","LRVRAP4",21,0)
 I $D(LRDFN) D PT^LRX
"RTN","LRVRAP4",22,0)
 D HDG,DATA
"RTN","LRVRAP4",23,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","LRVRAP4",24,0)
 D ACCEPT
"RTN","LRVRAP4",25,0)
 ;
"RTN","LRVRAP4",26,0)
EXIT ;
"RTN","LRVRAP4",27,0)
 Q
"RTN","LRVRAP4",28,0)
 ;
"RTN","LRVRAP4",29,0)
 ;
"RTN","LRVRAP4",30,0)
HDG ;
"RTN","LRVRAP4",31,0)
 ;
"RTN","LRVRAP4",32,0)
 W !,"Accession #: ",$G(LRACC)," UID: ",$G(LRUID)
"RTN","LRVRAP4",33,0)
 W !,"Name: ",$G(PNM)," SSN: ",$G(SSN)," DOB: ",$$FMTE^XLFDT($G(DOB),"1M")," Age: ",$G(AGE(2))
"RTN","LRVRAP4",34,0)
 W ?(IOM-10),"PAGE: ",LRPAGE
"RTN","LRVRAP4",35,0)
 W !,"Collection Date: ",$$FMTE^XLFDT($G(LRCDT))
"RTN","LRVRAP4",36,0)
 S LRPAGE=LRPAGE+1
"RTN","LRVRAP4",37,0)
 W !,LRLINE
"RTN","LRVRAP4",38,0)
 Q
"RTN","LRVRAP4",39,0)
 ;
"RTN","LRVRAP4",40,0)
 ;
"RTN","LRVRAP4",41,0)
DATA ;
"RTN","LRVRAP4",42,0)
 N FLDNM,LINE,LRI
"RTN","LRVRAP4",43,0)
 F LRI=99,.2,.3,.4,.5,1,1.1,1.2,1.3,1.4 I $D(^LAH(LRLL,1,LRISQN,LRSS,LRI))&('LREND) D
"RTN","LRVRAP4",44,0)
 . S FLDNM=$S(LRI=.2:"Brief Clinical History",LRI=.3:"Preoperative Diagnosis",LRI=.4:"Operative Findings",LRI=.5:"Postoperative Findings",LRI=99:"Report",1:0)
"RTN","LRVRAP4",45,0)
 . I FLDNM=0 S FLDNM=$S(LRI=1:"Gross Description",LRI=1.1:"Microscopic Description",LRI=1.2:"Supplementary Report",LRI=1.3:"Frozen Section",1:0)
"RTN","LRVRAP4",46,0)
 . I LRI=1.4 S FLDNM=$S(LRSS="EM":"EM",LRSS="SP":"Surgical Pathology",LRSS="CY":"Cytopathology",1:0)_"Diagnosis"
"RTN","LRVRAP4",47,0)
 . W !,LRLINE,!,FLDNM
"RTN","LRVRAP4",48,0)
 . K ^UTILITY($J)
"RTN","LRVRAP4",49,0)
 . S DIWR=IOM-5,DIWL=5,DIWF="W"
"RTN","LRVRAP4",50,0)
 . S:LRI=99 DIWR=IOM,DIWL=0
"RTN","LRVRAP4",51,0)
 . I LRI=1.2 D PRTSR Q
"RTN","LRVRAP4",52,0)
 . S LINE=0
"RTN","LRVRAP4",53,0)
 . F  S LINE=$O(^LAH(LRLL,1,LRISQN,LRSS,LRI,LINE)) Q:'LINE!LREND  D
"RTN","LRVRAP4",54,0)
 . . S X=^LAH(LRLL,1,LRISQN,LRSS,LRI,LINE,0) D ^DIWP
"RTN","LRVRAP4",55,0)
 . . D ^DIWW
"RTN","LRVRAP4",56,0)
 . . D PAUSE Q:LREND
"RTN","LRVRAP4",57,0)
 ;
"RTN","LRVRAP4",58,0)
 Q
"RTN","LRVRAP4",59,0)
 ;
"RTN","LRVRAP4",60,0)
 ;
"RTN","LRVRAP4",61,0)
PRTSR ; Print Supplemental Report
"RTN","LRVRAP4",62,0)
 N LINE,LRISQN2
"RTN","LRVRAP4",63,0)
 S LRISQN2=0
"RTN","LRVRAP4",64,0)
 F  S LRISQN2=$O(^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2)) Q:'LRISQN2!LREND  D
"RTN","LRVRAP4",65,0)
 .  S LINE=0
"RTN","LRVRAP4",66,0)
 . F  S LINE=$O(^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2,1,LINE)) Q:'LINE!LREND  D
"RTN","LRVRAP4",67,0)
 . . S X=^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2,1,LINE,0) D ^DIWP
"RTN","LRVRAP4",68,0)
 . . D ^DIWW
"RTN","LRVRAP4",69,0)
 . . D PAUSE Q:LREND
"RTN","LRVRAP4",70,0)
 Q
"RTN","LRVRAP4",71,0)
 ;
"RTN","LRVRAP4",72,0)
 ;
"RTN","LRVRAP4",73,0)
ACCEPT ; Ask if want to accept results
"RTN","LRVRAP4",74,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","LRVRAP4",75,0)
 S DIR(0)="Y",DIR("A")="Do you want to ACCEPT these results",DIR("B")="NO"
"RTN","LRVRAP4",76,0)
 S DIR("?")="Enter Y if you want to accept these results"
"RTN","LRVRAP4",77,0)
 S DIR("?",1)="Entering Y will store the results for this accession"
"RTN","LRVRAP4",78,0)
 D ^DIR
"RTN","LRVRAP4",79,0)
 I $D(DIRUT) Q
"RTN","LRVRAP4",80,0)
 I 'Y D PURG Q
"RTN","LRVRAP4",81,0)
 ;
"RTN","LRVRAP4",82,0)
STORE ;
"RTN","LRVRAP4",83,0)
 ; First, some setup stuff
"RTN","LRVRAP4",84,0)
 ;
"RTN","LRVRAP4",85,0)
 N FIELD,FILE,DIC,LRI
"RTN","LRVRAP4",86,0)
 ;
"RTN","LRVRAP4",87,0)
 S DIC(0)="LXZ"
"RTN","LRVRAP4",88,0)
 ; Begin actual processing of the data
"RTN","LRVRAP4",89,0)
 ;
"RTN","LRVRAP4",90,0)
 I LRSS="EM" S FILE=63.02
"RTN","LRVRAP4",91,0)
 I LRSS="CY" S FILE=63.09
"RTN","LRVRAP4",92,0)
 I LRSS="SP" S FILE=63.08
"RTN","LRVRAP4",93,0)
 ;
"RTN","LRVRAP4",94,0)
 ; Set DATE REPORT COMPLETED(.03), REPORT RELEASE DATE/TIME (.11) and RELEASED BY (.13) fields
"RTN","LRVRAP4",95,0)
 N FDA,FLDS,IEN,LRDATE,LRERR
"RTN","LRVRAP4",96,0)
 S LRI=LRIDT,LRDATE=$$NOW^XLFDT,IEN=LRIDT_","_LRDFN_","
"RTN","LRVRAP4",97,0)
 S FDA(1,FILE,IEN,.03)=LRDATE
"RTN","LRVRAP4",98,0)
 S FDA(1,FILE,IEN,.11)=LRDATE
"RTN","LRVRAP4",99,0)
 S FDA(1,FILE,IEN,.13)=DUZ(2)
"RTN","LRVRAP4",100,0)
 D FILE^DIE("","FDA(1)","LRERR")
"RTN","LRVRAP4",101,0)
 ;
"RTN","LRVRAP4",102,0)
 F LRI=99,.2,.3,.4,.5,1,1.1,1.2,1.3,1.4 I $D(^LAH(LRLL,1,LRISQN,LRSS,LRI)) D
"RTN","LRVRAP4",103,0)
 . S FIELD=$S(LRI=99:99,LRI=.2:.013,LRI=.3:.014,LRI=.4:.015,LRI=.5:.016,LRI=1:1,LRI=1.1:1.1,LRI=1.2:1.2,LRI=1.3:1.3,LRI=1.4:1.4,1:0)
"RTN","LRVRAP4",104,0)
 . I LRI=99 D COMMENT Q
"RTN","LRVRAP4",105,0)
 . I LRI=1.2 D SRPT Q  ; SUPPLEMENTARY REPORT
"RTN","LRVRAP4",106,0)
 . D WP^DIE(FILE,LRIDT_","_LRDFN_",",FIELD,"K","^LAH(LRLL,1,LRISQN,LRSS,LRI)","LRERR") ; WORD-PROCESSING FIELDS
"RTN","LRVRAP4",107,0)
 ;
"RTN","LRVRAP4",108,0)
 ; Store performing lab info
"RTN","LRVRAP4",109,0)
 I $D(^TMP("LRPL",$J)) D ROLLUPPL^LRRPLUA(LRDFN,LRSS,LRIDT)
"RTN","LRVRAP4",110,0)
 ;
"RTN","LRVRAP4",111,0)
 ; Ask for performing laboratory assignment
"RTN","LRVRAP4",112,0)
 W !! D EDIT^LRRPLU(LRDFN,LRSS,LRIDT)
"RTN","LRVRAP4",113,0)
 ;
"RTN","LRVRAP4",114,0)
 ; Store reporting lab
"RTN","LRVRAP4",115,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVRAP4",116,0)
 ;
"RTN","LRVRAP4",117,0)
 ; Update clinical reminders
"RTN","LRVRAP4",118,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRIDT)
"RTN","LRVRAP4",119,0)
 ;
"RTN","LRVRAP4",120,0)
 ; Queue results if LEDI and cleanup
"RTN","LRVRAP4",121,0)
 D LEDI^LRVR0,ZAP^LRVR0
"RTN","LRVRAP4",122,0)
 ;
"RTN","LRVRAP4",123,0)
 ;K ENTRY,I,SECTION,FDA,FILE,DIC,Y,BUG,IEN,M,F
"RTN","LRVRAP4",124,0)
 Q
"RTN","LRVRAP4",125,0)
 ;
"RTN","LRVRAP4",126,0)
 ;
"RTN","LRVRAP4",127,0)
COMMENT ;
"RTN","LRVRAP4",128,0)
 N CFILE,LRISQN2
"RTN","LRVRAP4",129,0)
 S LRISQN2=0
"RTN","LRVRAP4",130,0)
 I LRSS="SP" S CFILE=63.98
"RTN","LRVRAP4",131,0)
 I LRSS="CY" S CFILE=63.908
"RTN","LRVRAP4",132,0)
 I LRSS="EM" S CFILE=63.208
"RTN","LRVRAP4",133,0)
 F  S LRISQN2=$O(^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2)) Q:'LRISQN2  S LRLINE=^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2,0) D
"RTN","LRVRAP4",134,0)
 . K FDA,IEN,LRERR
"RTN","LRVRAP4",135,0)
 . S IEN="?+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRAP4",136,0)
 . S FDA(2,CFILE,IEN,.01)=LRLINE
"RTN","LRVRAP4",137,0)
 . D UPDATE^DIE("","FDA(2)","IEN","LRERR")
"RTN","LRVRAP4",138,0)
 Q
"RTN","LRVRAP4",139,0)
 ;
"RTN","LRVRAP4",140,0)
 ;
"RTN","LRVRAP4",141,0)
SRPT ; SUPPLEMENTARY REPORT
"RTN","LRVRAP4",142,0)
 N SRFILE,LRISQN2
"RTN","LRVRAP4",143,0)
 S LRISQN2=0
"RTN","LRVRAP4",144,0)
 I LRSS="SP" S SRFILE=63.817,FIELD=1
"RTN","LRVRAP4",145,0)
 I LRSS="CY" S SRFILE=63.907,FIELD=1
"RTN","LRVRAP4",146,0)
 I LRSS="EM" S SRFILE=63.207,FIELD=1
"RTN","LRVRAP4",147,0)
 F  S LRISQN2=$O(^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2)) Q:'LRISQN2  D
"RTN","LRVRAP4",148,0)
 . K FDA,IEN,LRERR,LRERR2
"RTN","LRVRAP4",149,0)
 . S IEN="?+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRAP4",150,0)
 . S FDA(1,SRFILE,IEN,.01)=$$NOW^XLFDT
"RTN","LRVRAP4",151,0)
 . S FDA(1,SRFILE,IEN,.02)=1
"RTN","LRVRAP4",152,0)
 . D UPDATE^DIE("","FDA(1)","IEN","LRERR2")
"RTN","LRVRAP4",153,0)
 . I $G(IEN(1)) D WP^DIE(SRFILE,IEN(1)_","_LRIDT_","_LRDFN_",",FIELD,"K","^LAH(LRLL,1,LRISQN,LRSS,LRI,LRISQN2,1)","LRERR")
"RTN","LRVRAP4",154,0)
 Q
"RTN","LRVRAP4",155,0)
 ;
"RTN","LRVRAP4",156,0)
 ;
"RTN","LRVRAP4",157,0)
PURG ; Ask if the entry should be purged from ^LAH(
"RTN","LRVRAP4",158,0)
 W !
"RTN","LRVRAP4",159,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","LRVRAP4",160,0)
 S DIR(0)="Y",DIR("A")="Do you want to purge this entry from ^LAH Global"
"RTN","LRVRAP4",161,0)
 S DIR("?")="Remove the entry from the list",DIR("B")="No"
"RTN","LRVRAP4",162,0)
 D ^DIR
"RTN","LRVRAP4",163,0)
 I $G(Y)=1 D ZAP^LRVR0 S LRNOP=1
"RTN","LRVRAP4",164,0)
 Q
"RTN","LRVRAP4",165,0)
 ;
"RTN","LRVRAP4",166,0)
 ;
"RTN","LRVRAP4",167,0)
PAUSE ; Check for end of page
"RTN","LRVRAP4",168,0)
 I $Y>(IOSL-6)&($E(IOST,1,2)="C-") D  Q:$G(LREND)
"RTN","LRVRAP4",169,0)
 . N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","LRVRAP4",170,0)
 . S DIR(0)="E"
"RTN","LRVRAP4",171,0)
 . D ^DIR S:'Y LREND=1
"RTN","LRVRAP4",172,0)
 I $Y>(IOSL-6) S $Y=0 W @IOF D HDG Q
"RTN","LRVRAP4",173,0)
 Q
"RTN","LRVRMI0")
0^65^B2697549
"RTN","LRVRMI0",1,0)
LRVRMI0 ;DALOI/FHS - MI SUB Lab Routine Data Verification ;02/28/12  19:32
"RTN","LRVRMI0",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI0",3,0)
 ;
"RTN","LRVRMI0",4,0)
 ; HL7 MI Auto-instrument verification
"RTN","LRVRMI0",5,0)
 Q
"RTN","LRVRMI0",6,0)
 ;
"RTN","LRVRMI0",7,0)
LEDIERR(LRLL,ISQN,QUIET,KILLAH) ;
"RTN","LRVRMI0",8,0)
 ; Check if this LAH entry has any errors that should prevent
"RTN","LRVRMI0",9,0)
 ; the user from processing the results.
"RTN","LRVRMI0",10,0)
 ; Inputs
"RTN","LRVRMI0",11,0)
 ;  LRLL : LL of ^LAH
"RTN","LRVRMI0",12,0)
 ;  ISQN : ISQN of ^LAH
"RTN","LRVRMI0",13,0)
 ;  QUIET <opt> : dflt=0 0=display info  1=dont display info
"RTN","LRVRMI0",14,0)
 ; KILLAH <opt> : dflt=0 1=delete LAH entry  0=dont delete LAH entry
"RTN","LRVRMI0",15,0)
 ;
"RTN","LRVRMI0",16,0)
 N X,Y,DIR,ERR,LSTERR,CNT
"RTN","LRVRMI0",17,0)
 S LRLL=$G(LRLL),ISQN=$G(ISQN),QUIET=+$G(QUIET),KILLAH=+$G(KILLAH)
"RTN","LRVRMI0",18,0)
 S X=$$LAHSTAT^LA7VHLU1(LRLL,ISQN,.5)
"RTN","LRVRMI0",19,0)
 I X'=2 Q 0
"RTN","LRVRMI0",20,0)
 ;
"RTN","LRVRMI0",21,0)
 S X=$$LAHSTAT^LA7VHLU1(LRLL,ISQN,1,.ERR)
"RTN","LRVRMI0",22,0)
 S (X,LSTERR)=$O(ERR(""),-1)
"RTN","LRVRMI0",23,0)
 ;
"RTN","LRVRMI0",24,0)
 S CNT=1
"RTN","LRVRMI0",25,0)
 F  S X=$O(ERR(X),-1) Q:$P(X,".",1)'=$P(LSTERR,".",1)  S CNT=CNT+1
"RTN","LRVRMI0",26,0)
 ;
"RTN","LRVRMI0",27,0)
 I $D(ERR),'QUIET D
"RTN","LRVRMI0",28,0)
 . D  ;
"RTN","LRVRMI0",29,0)
 . . N %ZIS,X
"RTN","LRVRMI0",30,0)
 . . S X="IORVON;IORVOFF"
"RTN","LRVRMI0",31,0)
 . . D ENDR^%ZISS
"RTN","LRVRMI0",32,0)
 . W $C(7),!!
"RTN","LRVRMI0",33,0)
 . I $G(IORVON)'="",$G(IORVOFF)'="" W IORVON
"RTN","LRVRMI0",34,0)
 . W "HL7 message processing error for this accession -- Processing aborted."
"RTN","LRVRMI0",35,0)
 . I $G(IORVOFF)'="" W IORVOFF
"RTN","LRVRMI0",36,0)
 . W !!,"Total errors: ",CNT,"   Last error: ",$$FMTE^XLFDT(LSTERR)
"RTN","LRVRMI0",37,0)
 . W !,ERR(LSTERR),!
"RTN","LRVRMI0",38,0)
 . I KILLAH W !,"     Entry deleted from ^LAH global."
"RTN","LRVRMI0",39,0)
 . S DIR(0)="E"
"RTN","LRVRMI0",40,0)
 . D ^DIR,KILL^%ZISS
"RTN","LRVRMI0",41,0)
 ;
"RTN","LRVRMI0",42,0)
 S LRNOP=1,LREND=1
"RTN","LRVRMI0",43,0)
 I KILLAH D ZAP^LRVR0
"RTN","LRVRMI0",44,0)
 Q 1
"RTN","LRVRMI1")
0^3^B34551287
"RTN","LRVRMI1",1,0)
LRVRMI1 ;DALOI/STAFF - LAB MICRO HL7 INTERFACE ;Oct 29, 2008
"RTN","LRVRMI1",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI1",3,0)
 ;
"RTN","LRVRMI1",4,0)
 ; Extraction routine for the HL7 to Micro interface.  It processes incoming HL7I data by extracting the results
"RTN","LRVRMI1",5,0)
 ; data from the ^LAH global and storing that data into a "workbench" (^TMP("LRMI").  The workbench has the same structure
"RTN","LRVRMI1",6,0)
 ; as the Lab Data micro file (#63.05).  The first step in the process copies the instance of the Lab Data file in question
"RTN","LRVRMI1",7,0)
 ; into the Workbench.
"RTN","LRVRMI1",8,0)
 ; 
"RTN","LRVRMI1",9,0)
 Q
"RTN","LRVRMI1",10,0)
 ;
"RTN","LRVRMI1",11,0)
EN ;
"RTN","LRVRMI1",12,0)
 ; First work through the LAH global to find entries to extract
"RTN","LRVRMI1",13,0)
 N PARA,PFLG,IEN,LROLD,LRNEW,LRSTATUS,LRSTORE,LWL,LRX
"RTN","LRVRMI1",14,0)
 ; Check to see if a lab area exists
"RTN","LRVRMI1",15,0)
 K ^TMP("LRMI",$J),^TMP("LRPL",$J)
"RTN","LRVRMI1",16,0)
 ;
"RTN","LRVRMI1",17,0)
 I '$G(LRLL) D  Q
"RTN","LRVRMI1",18,0)
 . W !,"No Load/Work List has been identified"
"RTN","LRVRMI1",19,0)
 . S LREND=1
"RTN","LRVRMI1",20,0)
 ;
"RTN","LRVRMI1",21,0)
 S LWL=LRLL
"RTN","LRVRMI1",22,0)
 ;
"RTN","LRVRMI1",23,0)
 D SRCHEN
"RTN","LRVRMI1",24,0)
 S IEN=$O(^LAH(LWL,1,ISQN,"MI",99,""),-1)
"RTN","LRVRMI1",25,0)
 I IEN S ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,99)=^LAH(LWL,1,ISQN,"MI",99,IEN,0)
"RTN","LRVRMI1",26,0)
 D SETSTATS(.LRSTATUS)
"RTN","LRVRMI1",27,0)
 Q
"RTN","LRVRMI1",28,0)
 ;
"RTN","LRVRMI1",29,0)
 ;
"RTN","LRVRMI1",30,0)
SRCHEN ; This begins the search of LAH for new data
"RTN","LRVRMI1",31,0)
 N EOL,FID,ICN,LRIEN,LRNOW,LRTDFN,LRUID,ORCDT,ORDNLT,ORDP,PEB,PVB,SID
"RTN","LRVRMI1",32,0)
 ;
"RTN","LRVRMI1",33,0)
 S ISQN=LRISQN,LRLEDI=1,LRNOW=$$NOW^XLFDT
"RTN","LRVRMI1",34,0)
 I $P(^LRO(68,$P(^LAH(LWL,1,ISQN,0),U,3),0),U,2)'="MI" Q
"RTN","LRVRMI1",35,0)
 D HEAD^LRVRMI2
"RTN","LRVRMI1",36,0)
 D ACCN
"RTN","LRVRMI1",37,0)
 K LRSTATUS
"RTN","LRVRMI1",38,0)
 S ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,0)=^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRVRMI1",39,0)
 ;
"RTN","LRVRMI1",40,0)
 ; gram stain
"RTN","LRVRMI1",41,0)
 I $D(^LAH(LWL,1,ISQN,"MI",2)) D
"RTN","LRVRMI1",42,0)
 . N IEN
"RTN","LRVRMI1",43,0)
 . S IEN=0
"RTN","LRVRMI1",44,0)
 . F  S IEN=$O(^LAH(LWL,1,ISQN,"MI",2,IEN)) Q:IEN<1  D
"RTN","LRVRMI1",45,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",2,IEN,0,0))
"RTN","LRVRMI1",46,0)
 . . I $P(LRX,"^",5)'="" D BLDSTAT(11.5,$P(LRX,"^",5))
"RTN","LRVRMI1",47,0)
 . D USERDT^LRVRMI1A(1,$G(LRSTATUS(63.05,11.5)))
"RTN","LRVRMI1",48,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2)=^LAH(LWL,1,ISQN,"MI",2)
"RTN","LRVRMI1",49,0)
 ;
"RTN","LRVRMI1",50,0)
 ; bacteria
"RTN","LRVRMI1",51,0)
 I $D(^LAH(LWL,1,ISQN,"MI",3)) D
"RTN","LRVRMI1",52,0)
 . N IEN
"RTN","LRVRMI1",53,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3)=^LAH(LWL,1,ISQN,"MI",3)
"RTN","LRVRMI1",54,0)
 . S IEN=0
"RTN","LRVRMI1",55,0)
 . F  S IEN=$O(^LAH(LWL,1,ISQN,"MI",3,IEN)) Q:IEN<1  D
"RTN","LRVRMI1",56,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",3,IEN,0,.01,0))
"RTN","LRVRMI1",57,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(11.5,$P(LRX,"^"))
"RTN","LRVRMI1",58,0)
 . D USERDT^LRVRMI1A(1,$G(LRSTATUS(63.05,11.5)))
"RTN","LRVRMI1",59,0)
 ;
"RTN","LRVRMI1",60,0)
 ; bacteria remark
"RTN","LRVRMI1",61,0)
 I $D(^LAH(LWL,1,ISQN,"MI",4)) D
"RTN","LRVRMI1",62,0)
 . S LRX=$G(^LAH(LWL,1,ISQN,"MI",4,0))
"RTN","LRVRMI1",63,0)
 . I $P(LRX,"^",4)'="" D BLDSTAT(11.5,$P(LRX,"^",4))
"RTN","LRVRMI1",64,0)
 . D USERDT^LRVRMI1A(1,$G(LRSTATUS(63.05,11.5)))
"RTN","LRVRMI1",65,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4)=^LAH(LWL,1,ISQN,"MI",4)
"RTN","LRVRMI1",66,0)
 ;
"RTN","LRVRMI1",67,0)
 ; parasite 
"RTN","LRVRMI1",68,0)
 I $D(^LAH(LWL,1,ISQN,"MI",6)) D
"RTN","LRVRMI1",69,0)
 . N IEN
"RTN","LRVRMI1",70,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6)=^LAH(LWL,1,ISQN,"MI",6)
"RTN","LRVRMI1",71,0)
 . S IEN=0
"RTN","LRVRMI1",72,0)
 . F  S IEN=$O(^LAH(LWL,1,ISQN,"MI",6,IEN)) Q:IEN<1  D
"RTN","LRVRMI1",73,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",6,IEN,0,.01,0))
"RTN","LRVRMI1",74,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(15,$P(LRX,"^"))
"RTN","LRVRMI1",75,0)
 . D USERDT^LRVRMI1A(5,$G(LRSTATUS(63.05,15)))
"RTN","LRVRMI1",76,0)
 ;
"RTN","LRVRMI1",77,0)
 ; parasite remark
"RTN","LRVRMI1",78,0)
 I $D(^LAH(LWL,1,ISQN,"MI",7)) D
"RTN","LRVRMI1",79,0)
 . S LRX=$G(^LAH(LWL,1,ISQN,"MI",7,0))
"RTN","LRVRMI1",80,0)
 . I $P(LRX,"^",4)'="" D BLDSTAT(15,$P(LRX,"^",4))
"RTN","LRVRMI1",81,0)
 . D USERDT^LRVRMI1A(5,$G(LRSTATUS(63.05,15)))
"RTN","LRVRMI1",82,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7)=^LAH(LWL,1,ISQN,"MI",7)
"RTN","LRVRMI1",83,0)
 ;
"RTN","LRVRMI1",84,0)
 ; mycology date approved
"RTN","LRVRMI1",85,0)
 I $D(^LAH(LWL,1,ISQN,"MI",8)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,8)=^LAH(LWL,1,ISQN,"MI",8)
"RTN","LRVRMI1",86,0)
 ;
"RTN","LRVRMI1",87,0)
 ; fungus/yeast
"RTN","LRVRMI1",88,0)
 I $D(^LAH(LWL,1,ISQN,"MI",9)) D
"RTN","LRVRMI1",89,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9)=^LAH(LWL,1,ISQN,"MI",9)
"RTN","LRVRMI1",90,0)
 . S IEN=0
"RTN","LRVRMI1",91,0)
 . F  S IEN=$O(^LAH(LWL,1,ISQN,"MI",9,IEN)) Q:'IEN  D
"RTN","LRVRMI1",92,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",9,IEN,0,.01,0))
"RTN","LRVRMI1",93,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(19,$P(LRX,"^"))
"RTN","LRVRMI1",94,0)
 . D USERDT^LRVRMI1A(8,$G(LRSTATUS(63.05,19)))
"RTN","LRVRMI1",95,0)
 ;
"RTN","LRVRMI1",96,0)
 ; mycology remarks
"RTN","LRVRMI1",97,0)
 I $D(^LAH(LWL,1,ISQN,"MI",10)) D
"RTN","LRVRMI1",98,0)
 . S LRX=$G(^LAH(LWL,1,ISQN,"MI",10,0))
"RTN","LRVRMI1",99,0)
 . I $P(LRX,"^",4)'="" D BLDSTAT(19,$P(LRX,"^",4))
"RTN","LRVRMI1",100,0)
 . D USERDT^LRVRMI1A(8,$G(LRSTATUS(63.05,19)))
"RTN","LRVRMI1",101,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10)=^LAH(LWL,1,ISQN,"MI",10)
"RTN","LRVRMI1",102,0)
 ;
"RTN","LRVRMI1",103,0)
 ; TB Date approved, etc.
"RTN","LRVRMI1",104,0)
 I $D(^LAH(LWL,1,ISQN,"MI",11)) D
"RTN","LRVRMI1",105,0)
 . N AFS,AFQ
"RTN","LRVRMI1",106,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11)=^LAH(LWL,1,ISQN,"MI",11)
"RTN","LRVRMI1",107,0)
 . S LRX=$G(^LAH(LWL,1,ISQN,"MI",11,0)),AFS=$P(LRX,"^",3),AFQ=$P(LRX,"^",4)
"RTN","LRVRMI1",108,0)
 . S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11),U,3)=AFS
"RTN","LRVRMI1",109,0)
 . S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11),U,4)=AFQ
"RTN","LRVRMI1",110,0)
 . I AFS'="" D
"RTN","LRVRMI1",111,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",11,0,.01,0))
"RTN","LRVRMI1",112,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(23,$P(LRX,"^"))
"RTN","LRVRMI1",113,0)
 . I AFQ'="" D
"RTN","LRVRMI1",114,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",11,0,.02,0))
"RTN","LRVRMI1",115,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(23,$P(LRX,"^"))
"RTN","LRVRMI1",116,0)
 . D USERDT^LRVRMI1A(11,$G(LRSTATUS(63.05,23)))
"RTN","LRVRMI1",117,0)
 ;
"RTN","LRVRMI1",118,0)
 ; mycobacteria organism
"RTN","LRVRMI1",119,0)
 I $D(^LAH(LWL,1,ISQN,"MI",12)) D
"RTN","LRVRMI1",120,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12)=^LAH(LWL,1,ISQN,"MI",12)
"RTN","LRVRMI1",121,0)
 . S LRIEN=0
"RTN","LRVRMI1",122,0)
 . F  S LRIEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRIEN)) Q:'LRIEN  D
"RTN","LRVRMI1",123,0)
 . . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,LRIEN,0,.01,0))
"RTN","LRVRMI1",124,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(23,$P(LRX,"^"))
"RTN","LRVRMI1",125,0)
 . D USERDT^LRVRMI1A(11,$G(LRSTATUS(63.05,23)))
"RTN","LRVRMI1",126,0)
 ;
"RTN","LRVRMI1",127,0)
 ; TB remark
"RTN","LRVRMI1",128,0)
 I $D(^LAH(LWL,1,ISQN,"MI",13)) D
"RTN","LRVRMI1",129,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13)=^LAH(LWL,1,ISQN,"MI",13)
"RTN","LRVRMI1",130,0)
 . S LRX=$G(^LAH(LWL,1,ISQN,"MI",13,0))
"RTN","LRVRMI1",131,0)
 . I $P(LRX,"^",4)'="" D BLDSTAT(23,$P(LRX,"^",4))
"RTN","LRVRMI1",132,0)
 . D USERDT^LRVRMI1A(11,$G(LRSTATUS(63.05,23)))
"RTN","LRVRMI1",133,0)
 ;
"RTN","LRVRMI1",134,0)
 D SRCHEN2^LRVRMI1A
"RTN","LRVRMI1",135,0)
 Q
"RTN","LRVRMI1",136,0)
 ;
"RTN","LRVRMI1",137,0)
 ;
"RTN","LRVRMI1",138,0)
ACCN ; Get the LRIDT
"RTN","LRVRMI1",139,0)
 S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
"RTN","LRVRMI1",140,0)
 Q
"RTN","LRVRMI1",141,0)
 ;
"RTN","LRVRMI1",142,0)
 ;
"RTN","LRVRMI1",143,0)
MAKEISO(LR4,ISOID) ;
"RTN","LRVRMI1",144,0)
 ; Creates the "unique id" portion for an isolate id
"RTN","LRVRMI1",145,0)
 ; Inputs
"RTN","LRVRMI1",146,0)
 ;    LR4 : File #4 IEN
"RTN","LRVRMI1",147,0)
 ;  ISOID : Isolate ID
"RTN","LRVRMI1",148,0)
 ; Output
"RTN","LRVRMI1",149,0)
 ;    "99VA4:"_#4 info_":"_ISOID
"RTN","LRVRMI1",150,0)
 ;
"RTN","LRVRMI1",151,0)
 N LRNVAF,LRY
"RTN","LRVRMI1",152,0)
 Q:$TR(ISOID," ","")="" ISOID
"RTN","LRVRMI1",153,0)
 I ISOID?1"99VA4:"0.E1":"0.E Q ISOID
"RTN","LRVRMI1",154,0)
 S LRNVAF=$$NVAF^LA7VHLU2(LR4)
"RTN","LRVRMI1",155,0)
 S LRY=$$ID^XUAF4($S(LRNVAF=1:"DMIS",LRNVAF=2:"ASUFAC",1:"VASTANUM"),LR4)
"RTN","LRVRMI1",156,0)
 I LRY="" D
"RTN","LRVRMI1",157,0)
 . S LRY=$$KSP^XUPARAM("INST") ;default institution IEN
"RTN","LRVRMI1",158,0)
 . S LRY=$$NS^XUAF4(LRY)
"RTN","LRVRMI1",159,0)
 . S LRY=$P(LRY,"^",2)
"RTN","LRVRMI1",160,0)
 . S LRY=LRY_"#"_LR4
"RTN","LRVRMI1",161,0)
 Q "99VA4:"_LRY_":"_ISOID
"RTN","LRVRMI1",162,0)
 ;
"RTN","LRVRMI1",163,0)
 ;
"RTN","LRVRMI1",164,0)
BLDSTAT(FLD,VAL) ;
"RTN","LRVRMI1",165,0)
 ; Convenience method
"RTN","LRVRMI1",166,0)
 D BLDSTAT^LRVRMI4A(63.05,FLD,VAL,.LRSTATUS)
"RTN","LRVRMI1",167,0)
 Q
"RTN","LRVRMI1",168,0)
 ;
"RTN","LRVRMI1",169,0)
 ;
"RTN","LRVRMI1",170,0)
SETSTATS(DATA) ;
"RTN","LRVRMI1",171,0)
 ; Goes thru DATA array and sets the status(es)
"RTN","LRVRMI1",172,0)
 ; Inputs
"RTN","LRVRMI1",173,0)
 ;   DATA <byref> : DATA(file#,field#)=status  ie DATA(63.05,19)="P"
"RTN","LRVRMI1",174,0)
 ;
"RTN","LRVRMI1",175,0)
 N NODE,FN,FLD,STAT,DATA2TMP,X,SUB,POS
"RTN","LRVRMI1",176,0)
 S DATA2TMP(63.05,11.5)="1^2" ;SUB^POS
"RTN","LRVRMI1",177,0)
 S DATA2TMP(63.05,15)="5^2"
"RTN","LRVRMI1",178,0)
 S DATA2TMP(63.05,19)="8^2"
"RTN","LRVRMI1",179,0)
 S DATA2TMP(63.05,23)="11^2"
"RTN","LRVRMI1",180,0)
 S DATA2TMP(63.05,34)="16^2"
"RTN","LRVRMI1",181,0)
 S NODE="DATA(0)"
"RTN","LRVRMI1",182,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D  ;
"RTN","LRVRMI1",183,0)
 . S FN=$QS(NODE,1)
"RTN","LRVRMI1",184,0)
 . S FLD=$QS(NODE,2)
"RTN","LRVRMI1",185,0)
 . S STAT=DATA(FN,FLD)
"RTN","LRVRMI1",186,0)
 . I STAT="C" S STAT="F"
"RTN","LRVRMI1",187,0)
 . S X=$G(DATA2TMP(63.05,FLD))
"RTN","LRVRMI1",188,0)
 . Q:X=""
"RTN","LRVRMI1",189,0)
 . S SUB=$P(X,"^",1),POS=$P(X,"^",2)
"RTN","LRVRMI1",190,0)
 . I SUB,POS S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,SUB),"^",POS)=STAT
"RTN","LRVRMI1",191,0)
 Q
"RTN","LRVRMI1A")
0^114^B13452364
"RTN","LRVRMI1A",1,0)
LRVRMI1A ;DALOI/STAFF - LAB MICRO HL7 INTERFACE ;05/12/09  18:26
"RTN","LRVRMI1A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI1A",3,0)
 ;
"RTN","LRVRMI1A",4,0)
 Q
"RTN","LRVRMI1A",5,0)
 ;
"RTN","LRVRMI1A",6,0)
SRCHEN2 ;
"RTN","LRVRMI1A",7,0)
 ; Continued from SRCHEN^LRVRMI1
"RTN","LRVRMI1A",8,0)
 N IEN,IEN2
"RTN","LRVRMI1A",9,0)
 ; mycology prep/smear
"RTN","LRVRMI1A",10,0)
 I $D(^LAH(LWL,1,ISQN,"MI",15)) D
"RTN","LRVRMI1A",11,0)
 . D USERDT(8)
"RTN","LRVRMI1A",12,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15)=^LAH(LWL,1,ISQN,"MI",15)
"RTN","LRVRMI1A",13,0)
 ;
"RTN","LRVRMI1A",14,0)
 ; virus
"RTN","LRVRMI1A",15,0)
 I $D(^LAH(LWL,1,ISQN,"MI",16)) D
"RTN","LRVRMI1A",16,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,16)=^LAH(LWL,1,ISQN,"MI",16)
"RTN","LRVRMI1A",17,0)
 ;
"RTN","LRVRMI1A",18,0)
 I $D(^LAH(LWL,1,ISQN,"MI",17)) D
"RTN","LRVRMI1A",19,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17)=^LAH(LWL,1,ISQN,"MI",17)
"RTN","LRVRMI1A",20,0)
 . S IEN=0
"RTN","LRVRMI1A",21,0)
 . F  S IEN=$O(^LAH(LWL,1,ISQN,"MI",17,IEN)) Q:'IEN  D
"RTN","LRVRMI1A",22,0)
 . . S LRX=$G(^LAH(LWL,1,ISQN,"MI",17,IEN,0,.01,0))
"RTN","LRVRMI1A",23,0)
 . . I $P(LRX,"^")'="" D BLDSTAT(34,$P(LRX,"^"))
"RTN","LRVRMI1A",24,0)
 . D USERDT(16,$G(LRSTATUS(63.05,34)))
"RTN","LRVRMI1A",25,0)
 ;
"RTN","LRVRMI1A",26,0)
 ; virus remark
"RTN","LRVRMI1A",27,0)
 I $D(^LAH(LWL,1,ISQN,"MI",18)) D
"RTN","LRVRMI1A",28,0)
 . N STAT
"RTN","LRVRMI1A",29,0)
 . M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18)=^LAH(LWL,1,ISQN,"MI",18)
"RTN","LRVRMI1A",30,0)
 . S STAT=$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,0),U,4)
"RTN","LRVRMI1A",31,0)
 . D BLDSTAT(34,STAT),USERDT(16,$G(LRSTATUS(63.05,34)))
"RTN","LRVRMI1A",32,0)
 ;
"RTN","LRVRMI1A",33,0)
 ; preliminary bacteria comment
"RTN","LRVRMI1A",34,0)
 I $D(^LAH(LWL,1,ISQN,"MI",19)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,19)=^LAH(LWL,1,ISQN,"MI",19)
"RTN","LRVRMI1A",35,0)
 ;
"RTN","LRVRMI1A",36,0)
 ; preliminary virus comment
"RTN","LRVRMI1A",37,0)
 I $D(^LAH(LWL,1,ISQN,"MI",20)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,20)=^LAH(LWL,1,ISQN,"MI",20)
"RTN","LRVRMI1A",38,0)
 ;
"RTN","LRVRMI1A",39,0)
 ; preliminary parasite comment
"RTN","LRVRMI1A",40,0)
 I $D(^LAH(LWL,1,ISQN,"MI",21)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,21)=^LAH(LWL,1,ISQN,"MI",21)
"RTN","LRVRMI1A",41,0)
 ;
"RTN","LRVRMI1A",42,0)
 ; preliminary mycology comment
"RTN","LRVRMI1A",43,0)
 I $D(^LAH(LWL,1,ISQN,"MI",22)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,22)=^LAH(LWL,1,ISQN,"MI",22)
"RTN","LRVRMI1A",44,0)
 ;
"RTN","LRVRMI1A",45,0)
 ; preliminary TB comment
"RTN","LRVRMI1A",46,0)
 I $D(^LAH(LWL,1,ISQN,"MI",23)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,23)=^LAH(LWL,1,ISQN,"MI",23)
"RTN","LRVRMI1A",47,0)
 ;
"RTN","LRVRMI1A",48,0)
 ; parasite prep/smear
"RTN","LRVRMI1A",49,0)
 I $D(^LAH(LWL,1,ISQN,"MI",24)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,24)=^LAH(LWL,1,ISQN,"MI",24)
"RTN","LRVRMI1A",50,0)
 ;
"RTN","LRVRMI1A",51,0)
 ; bacteriology prep/smear
"RTN","LRVRMI1A",52,0)
 I $D(^LAH(LWL,1,ISQN,"MI",25)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,25)=^LAH(LWL,1,ISQN,"MI",25)
"RTN","LRVRMI1A",53,0)
 ;
"RTN","LRVRMI1A",54,0)
 ; bacteria tests
"RTN","LRVRMI1A",55,0)
 I $D(^LAH(LWL,1,ISQN,"MI",26)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,26)=^LAH(LWL,1,ISQN,"MI",26)
"RTN","LRVRMI1A",56,0)
 ;
"RTN","LRVRMI1A",57,0)
 ; parasitology tests
"RTN","LRVRMI1A",58,0)
 I $D(^LAH(LWL,1,ISQN,"MI",27)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,27)=^LAH(LWL,1,ISQN,"MI",27)
"RTN","LRVRMI1A",59,0)
 ;
"RTN","LRVRMI1A",60,0)
 ; mycology tests
"RTN","LRVRMI1A",61,0)
 I $D(^LAH(LWL,1,ISQN,"MI",28)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,28)=^LAH(LWL,1,ISQN,"MI",28)
"RTN","LRVRMI1A",62,0)
 ;
"RTN","LRVRMI1A",63,0)
 ; TB tests
"RTN","LRVRMI1A",64,0)
 I $D(^LAH(LWL,1,ISQN,"MI",29)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,29)=^LAH(LWL,1,ISQN,"MI",29)
"RTN","LRVRMI1A",65,0)
 ;
"RTN","LRVRMI1A",66,0)
 ; virology tests
"RTN","LRVRMI1A",67,0)
 I $D(^LAH(LWL,1,ISQN,"MI",30)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,30)=^LAH(LWL,1,ISQN,"MI",30)
"RTN","LRVRMI1A",68,0)
 ;
"RTN","LRVRMI1A",69,0)
 ; sterility tests
"RTN","LRVRMI1A",70,0)
 I $D(^LAH(LWL,1,ISQN,"MI",31)) M ^TMP("LRMI",$J,LRDFN,"MI",LRIDT,31)=^LAH(LWL,1,ISQN,"MI",31)
"RTN","LRVRMI1A",71,0)
 Q
"RTN","LRVRMI1A",72,0)
 ;
"RTN","LRVRMI1A",73,0)
 ;
"RTN","LRVRMI1A",74,0)
BLDSTAT(FLD,VAL) ;
"RTN","LRVRMI1A",75,0)
 ; Convenience method
"RTN","LRVRMI1A",76,0)
 D BLDSTAT^LRVRMI4A(63.05,FLD,VAL,.LRSTATUS)
"RTN","LRVRMI1A",77,0)
 Q
"RTN","LRVRMI1A",78,0)
 ;
"RTN","LRVRMI1A",79,0)
 ;
"RTN","LRVRMI1A",80,0)
USERDT(LRNODE,LRSTAT) ; Set user and date/time in respective MI section
"RTN","LRVRMI1A",81,0)
 ; Call with LRNODE = MI node to set
"RTN","LRVRMI1A",82,0)
 ;           LRSTAT = status to set (optional)
"RTN","LRVRMI1A",83,0)
 ;
"RTN","LRVRMI1A",84,0)
 I '$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE)) S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE),U)=LRNOW
"RTN","LRVRMI1A",85,0)
 ;
"RTN","LRVRMI1A",86,0)
 ; Update status, don't change an existing "P" to a "F"
"RTN","LRVRMI1A",87,0)
 I $G(LRSTAT)'="" D
"RTN","LRVRMI1A",88,0)
 . I LRSTAT="F",$P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE),"^",2)="P" Q
"RTN","LRVRMI1A",89,0)
 . S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE),"^",2)=LRSTAT
"RTN","LRVRMI1A",90,0)
 ;
"RTN","LRVRMI1A",91,0)
 ; AFB (node=11) stores user in 5th piece instead of usual 3rd piece for other nodes.
"RTN","LRVRMI1A",92,0)
 I LRNODE'=11 S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE),U,3)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI1A",93,0)
 E  S $P(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE),U,5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI1A",94,0)
 ;
"RTN","LRVRMI1A",95,0)
 Q
"RTN","LRVRMI2")
0^4^B34553820
"RTN","LRVRMI2",1,0)
LRVRMI2 ;DALOI/STAFF - LAH/TMP TO FILE #63 ;03/24/11  17:09
"RTN","LRVRMI2",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI2",3,0)
 ;
"RTN","LRVRMI2",4,0)
 ; Continuation of LRVRMI4 and is used for extracting results from the LAH global and storing it into LAB DATA FILE (#63).
"RTN","LRVRMI2",5,0)
 ;
"RTN","LRVRMI2",6,0)
 Q
"RTN","LRVRMI2",7,0)
 ;
"RTN","LRVRMI2",8,0)
N7 ; Process Parasite Remarks
"RTN","LRVRMI2",9,0)
 N DIERR,IEN,LRCMT,LRFDA,LRFDAIEN,LRIEN,LRIENS,LRMSG,LRPL,LRX,X,STAT
"RTN","LRVRMI2",10,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7,0))
"RTN","LRVRMI2",11,0)
 S LRPL=$P(LRX,"^"),STAT=$P(LRX,"^",4)
"RTN","LRVRMI2",12,0)
 D BLDSTAT^LRVRMI4A(63.05,15,STAT,.LRSTATUS)
"RTN","LRVRMI2",13,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,7)
"RTN","LRVRMI2",14,0)
 ;
"RTN","LRVRMI2",15,0)
 S IEN=0
"RTN","LRVRMI2",16,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7,IEN)) Q:IEN<1  D  ;
"RTN","LRVRMI2",17,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2",18,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2",19,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2",20,0)
 . S LRFDA(7,63.36,LRIEN,.01)=LRX
"RTN","LRVRMI2",21,0)
 ;
"RTN","LRVRMI2",22,0)
 I $D(LRFDA) D
"RTN","LRVRMI2",23,0)
 . D UPDATE^DIE("","LRFDA(7)","LRFDAIEN","LRMSG")
"RTN","LRVRMI2",24,0)
 . S IEN=0
"RTN","LRVRMI2",25,0)
 . F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I $G(LRPL) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",7,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI2",26,0)
 ;
"RTN","LRVRMI2",27,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2",28,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2",29,0)
 S LRFDA(7,63.05,LRIEN,14)=LRNOW
"RTN","LRVRMI2",30,0)
 S LRFDA(7,63.05,LRIEN,15.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2",31,0)
 D FILE^DIE("","LRFDA(7)","LRMSG")
"RTN","LRVRMI2",32,0)
 Q
"RTN","LRVRMI2",33,0)
 ;
"RTN","LRVRMI2",34,0)
 ;
"RTN","LRVRMI2",35,0)
N10 ; Process Mycology Remarks
"RTN","LRVRMI2",36,0)
 N DIERR,IEN,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRPL,LRX,STAT
"RTN","LRVRMI2",37,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10,0))
"RTN","LRVRMI2",38,0)
 S LRPL=$P(LRX,"^"),STAT=$P(LRX,U,4)
"RTN","LRVRMI2",39,0)
 D BLDSTAT^LRVRMI4A(63.05,19,STAT,.LRSTATUS)
"RTN","LRVRMI2",40,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,10)
"RTN","LRVRMI2",41,0)
 ;
"RTN","LRVRMI2",42,0)
 S IEN=0
"RTN","LRVRMI2",43,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10,IEN)) Q:IEN<1  D
"RTN","LRVRMI2",44,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2",45,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2",46,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2",47,0)
 . S LRFDA(10,63.38,LRIEN,.01)=LRX
"RTN","LRVRMI2",48,0)
 I $D(LRFDA) D
"RTN","LRVRMI2",49,0)
 . D UPDATE^DIE("","LRFDA(10)","LRFDAIEN","LRMSG")
"RTN","LRVRMI2",50,0)
 . S IEN=0
"RTN","LRVRMI2",51,0)
 . F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I $G(LRPL) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",10,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI2",52,0)
 ;
"RTN","LRVRMI2",53,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2",54,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2",55,0)
 S LRFDA(10,63.05,LRIEN,18)=LRNOW
"RTN","LRVRMI2",56,0)
 S LRFDA(10,63.05,LRIEN,19.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2",57,0)
 D FILE^DIE("","LRFDA(10)","LRMSG")
"RTN","LRVRMI2",58,0)
 Q
"RTN","LRVRMI2",59,0)
 ;
"RTN","LRVRMI2",60,0)
 ;
"RTN","LRVRMI2",61,0)
N13 ; Process TB Rpt Remarks
"RTN","LRVRMI2",62,0)
 N DIERR,IEN,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRPL,LRX,STAT
"RTN","LRVRMI2",63,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13,0))
"RTN","LRVRMI2",64,0)
 S LRPL=$P(LRX,"^"),STAT=$P(LRX,U,4)
"RTN","LRVRMI2",65,0)
 D BLDSTAT^LRVRMI4A(63.05,23,STAT,.LRSTATUS)
"RTN","LRVRMI2",66,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,13)
"RTN","LRVRMI2",67,0)
 ;
"RTN","LRVRMI2",68,0)
 S IEN=0
"RTN","LRVRMI2",69,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13,IEN)) Q:IEN<1  D
"RTN","LRVRMI2",70,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2",71,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2",72,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2",73,0)
 . S LRFDA(13,63.41,LRIEN,.01)=LRX
"RTN","LRVRMI2",74,0)
 I $D(LRFDA) D
"RTN","LRVRMI2",75,0)
 . D UPDATE^DIE("","LRFDA(13)","LRFDAIEN","LRMSG")
"RTN","LRVRMI2",76,0)
 . S IEN=0
"RTN","LRVRMI2",77,0)
 . F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I $G(LRPL) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",13,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI2",78,0)
 ;
"RTN","LRVRMI2",79,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2",80,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2",81,0)
 S LRFDA(13,63.05,LRIEN,22)=LRNOW
"RTN","LRVRMI2",82,0)
 S LRFDA(13,63.05,LRIEN,25.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2",83,0)
 D FILE^DIE("","LRFDA(13)","LRMSG")
"RTN","LRVRMI2",84,0)
 Q
"RTN","LRVRMI2",85,0)
 ;
"RTN","LRVRMI2",86,0)
 ;
"RTN","LRVRMI2",87,0)
N15 ; Mycology smear/prep
"RTN","LRVRMI2",88,0)
 N DIERR,IEN,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRPL,LRX
"RTN","LRVRMI2",89,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15,0))
"RTN","LRVRMI2",90,0)
 S LRPL=$P(LRX,"^"),STAT=$P(LRX,U,4)
"RTN","LRVRMI2",91,0)
 D BLDSTAT^LRVRMI4A(63.05,19,STAT,.LRSTATUS)
"RTN","LRVRMI2",92,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,15)
"RTN","LRVRMI2",93,0)
 ;
"RTN","LRVRMI2",94,0)
 S IEN=0
"RTN","LRVRMI2",95,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15,IEN)) Q:IEN<1  D  ;
"RTN","LRVRMI2",96,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2",97,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2",98,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2",99,0)
 . S LRFDA(15,63.371,LRIEN,.01)=LRX
"RTN","LRVRMI2",100,0)
 ;
"RTN","LRVRMI2",101,0)
 I $D(LRFDA) D
"RTN","LRVRMI2",102,0)
 . D UPDATE^DIE("","LRFDA(15)","LRFDAIEN","LRMSG")
"RTN","LRVRMI2",103,0)
 . S IEN=0
"RTN","LRVRMI2",104,0)
 . F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I $G(LRPL) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",15,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI2",105,0)
 ;
"RTN","LRVRMI2",106,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2",107,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2",108,0)
 S LRFDA(15,63.05,LRIEN,18)=LRNOW
"RTN","LRVRMI2",109,0)
 S LRFDA(15,63.05,LRIEN,19.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2",110,0)
 D FILE^DIE("","LRFDA(15)","LRMSG")
"RTN","LRVRMI2",111,0)
 Q
"RTN","LRVRMI2",112,0)
 ;
"RTN","LRVRMI2",113,0)
 ;
"RTN","LRVRMI2",114,0)
N18 ; Process Virology Rpt Remarks
"RTN","LRVRMI2",115,0)
 N DIERR,IEN,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRPL,LRX,STAT
"RTN","LRVRMI2",116,0)
 ;
"RTN","LRVRMI2",117,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,0))
"RTN","LRVRMI2",118,0)
 S LRPL=$P(LRX,"^"),STAT=$P(LRX,U,4)
"RTN","LRVRMI2",119,0)
 D BLDSTAT^LRVRMI4A(63.05,34,STAT,.LRSTATUS)
"RTN","LRVRMI2",120,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,18)
"RTN","LRVRMI2",121,0)
 ;
"RTN","LRVRMI2",122,0)
 S IEN=0
"RTN","LRVRMI2",123,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,IEN)) Q:IEN<1  D  ;
"RTN","LRVRMI2",124,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2",125,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2",126,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2",127,0)
 . S LRFDA(18,63.44,LRIEN,.01)=LRX
"RTN","LRVRMI2",128,0)
 I $D(LRFDA) D
"RTN","LRVRMI2",129,0)
 . D UPDATE^DIE("","LRFDA(18)","LRFDAIEN","LRMSG")
"RTN","LRVRMI2",130,0)
 . S IEN=0
"RTN","LRVRMI2",131,0)
 . F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I $G(LRPL) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",18,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI2",132,0)
 ;
"RTN","LRVRMI2",133,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2",134,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2",135,0)
 S LRFDA(18,63.05,LRIEN,33)=LRNOW
"RTN","LRVRMI2",136,0)
 S LRFDA(18,63.05,LRIEN,35)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2",137,0)
 D FILE^DIE("","LRFDA(18)","LRMSG")
"RTN","LRVRMI2",138,0)
 Q
"RTN","LRVRMI2",139,0)
 ;
"RTN","LRVRMI2",140,0)
 ;
"RTN","LRVRMI2",141,0)
HEAD ;
"RTN","LRVRMI2",142,0)
 ; Start by getting the demographic data from LAH
"RTN","LRVRMI2",143,0)
 S EOL=$G(^LAH(LWL,1,ISQN,.1,"OBR","EOL"))
"RTN","LRVRMI2",144,0)
 S FID=$G(^LAH(LWL,1,ISQN,.1,"OBR","FID"))
"RTN","LRVRMI2",145,0)
 S ORCDT=$G(^LAH(LWL,1,ISQN,.1,"OBR","ORCDT"))
"RTN","LRVRMI2",146,0)
 S ORDNLT=$G(^LAH(LWL,1,ISQN,.1,"OBR","ORDNLT"))
"RTN","LRVRMI2",147,0)
 S ORDP=$G(^LAH(LWL,1,ISQN,.1,"OBR","ORDP"))
"RTN","LRVRMI2",148,0)
 S PEB=$G(^LAH(LWL,1,ISQN,.1,"OBR","PEB"))
"RTN","LRVRMI2",149,0)
 S PVB=$G(^LAH(LWL,1,ISQN,.1,"OBR","PVB"))
"RTN","LRVRMI2",150,0)
 S SID=$G(^LAH(LWL,1,ISQN,.1,"OBR","SID"))
"RTN","LRVRMI2",151,0)
 S DFN=$G(^LAH(LWL,1,ISQN,.1,"PID","DFN"))
"RTN","LRVRMI2",152,0)
 S DOB=$G(^LAH(LWL,1,ISQN,.1,"PID","DOB"))
"RTN","LRVRMI2",153,0)
 S ICN=$G(^LAH(LWL,1,ISQN,.1,"PID","ICN"))
"RTN","LRVRMI2",154,0)
 S LRTDFN=$G(^LAH(LWL,1,ISQN,.1,"PID","LRTDFN"))
"RTN","LRVRMI2",155,0)
 S PNM=$G(^LAH(LWL,1,ISQN,.1,"PID","PNM"))
"RTN","LRVRMI2",156,0)
 S SEX=$G(^LAH(LWL,1,ISQN,.1,"PID","SEX"))
"RTN","LRVRMI2",157,0)
 S SSN=$G(^LAH(LWL,1,ISQN,.1,"PID","SSN"))
"RTN","LRVRMI2",158,0)
 S LRUID=$G(^LAH(LWL,1,ISQN,.3))
"RTN","LRVRMI2",159,0)
 Q
"RTN","LRVRMI2A")
0^112^B77056025
"RTN","LRVRMI2A",1,0)
LRVRMI2A ;DALOI/STAFF - LAH/TMP TO FILE #63 ;03/24/11  17:12
"RTN","LRVRMI2A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI2A",3,0)
 ;
"RTN","LRVRMI2A",4,0)
 ; Continuation of LRVRMI4 and is used for extracting results from the LAH global and storing it into LAB DATA FILE (#63).
"RTN","LRVRMI2A",5,0)
 ;
"RTN","LRVRMI2A",6,0)
 Q
"RTN","LRVRMI2A",7,0)
 ;
"RTN","LRVRMI2A",8,0)
N9 ; Process Fungus/Yeast
"RTN","LRVRMI2A",9,0)
 N DATA,DIERR,IEN,IEN2,IEN3,ISOID,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRN9,LRX,R6337,STAT
"RTN","LRVRMI2A",10,0)
 ;
"RTN","LRVRMI2A",11,0)
 ;ZEXCEPT: LRDFN,LRDUZ,LRFDAIEN,LRIDT,LRLL,LRNOW,LRPROF,LRSTATUS
"RTN","LRVRMI2A",12,0)
 ;
"RTN","LRVRMI2A",13,0)
 S (IEN,IEN2,IEN3)=0
"RTN","LRVRMI2A",14,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN)) Q:IEN<1  D N9A
"RTN","LRVRMI2A",15,0)
 ;
"RTN","LRVRMI2A",16,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI2A",17,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",18,0)
 S LRFDA(9,63.05,LRIEN,18)=LRNOW
"RTN","LRVRMI2A",19,0)
 S LRFDA(9,63.05,LRIEN,19.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2A",20,0)
 D FILE^DIE("","LRFDA(9)","LRMSG")
"RTN","LRVRMI2A",21,0)
 Q
"RTN","LRVRMI2A",22,0)
 ;
"RTN","LRVRMI2A",23,0)
 ;
"RTN","LRVRMI2A",24,0)
N9A ; Process fungus yeast organism
"RTN","LRVRMI2A",25,0)
 ;
"RTN","LRVRMI2A",26,0)
 N DIERR,IEN2,ISOID,LRCMT,LRFDA,LRFDAIEN,LRI,LRIEN,LRIENS,LRMSG,LRN9,LRX,R6337,STAT
"RTN","LRVRMI2A",27,0)
 ;
"RTN","LRVRMI2A",28,0)
 S LRN9=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,0))
"RTN","LRVRMI2A",29,0)
 Q:LRN9=""
"RTN","LRVRMI2A",30,0)
 S ISOID=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,.1))
"RTN","LRVRMI2A",31,0)
 Q:ISOID=""
"RTN","LRVRMI2A",32,0)
 ; Delete ISOID if it exists
"RTN","LRVRMI2A",33,0)
 S R6337=$O(^LR(LRDFN,"MI",LRIDT,9,"C",ISOID,0))
"RTN","LRVRMI2A",34,0)
 I R6337 D
"RTN","LRVRMI2A",35,0)
 . K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI2A",36,0)
 . S LRIEN=R6337_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",37,0)
 . S LRFDA(9,63.37,LRIEN,.01)="@"
"RTN","LRVRMI2A",38,0)
 . D FILE^DIE("","LRFDA(9)","LRMSG")
"RTN","LRVRMI2A",39,0)
 ;
"RTN","LRVRMI2A",40,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI2A",41,0)
 S LRIEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",42,0)
 S LRFDA(9,63.37,LRIEN,.01)=$P(LRN9,"^") ; fungus/yeast
"RTN","LRVRMI2A",43,0)
 S LRFDA(9,63.37,LRIEN,1)=$P(LRN9,"^",2) ; quantity
"RTN","LRVRMI2A",44,0)
 S LRFDA(9,63.37,LRIEN,.1)=ISOID
"RTN","LRVRMI2A",45,0)
 D UPDATE^DIE("","LRFDA(9)","LRIENS","LRMSG")
"RTN","LRVRMI2A",46,0)
 S R6337=$G(LRIENS(1))
"RTN","LRVRMI2A",47,0)
 Q:'R6337
"RTN","LRVRMI2A",48,0)
 ;
"RTN","LRVRMI2A",49,0)
 ; Store code system references for fungus
"RTN","LRVRMI2A",50,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,0,.01))
"RTN","LRVRMI2A",51,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",52,0)
 . N LRDATA
"RTN","LRVRMI2A",53,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",9,"_R6337_",0;1"
"RTN","LRVRMI2A",54,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI2A",55,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",56,0)
 ;
"RTN","LRVRMI2A",57,0)
 ; Store code system references for yeast quantity
"RTN","LRVRMI2A",58,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,0,.02))
"RTN","LRVRMI2A",59,0)
 F LRI=1,2 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",60,0)
 . N LRDATA
"RTN","LRVRMI2A",61,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",9,"_R6337_"0;2"
"RTN","LRVRMI2A",62,0)
 . S LRDATA(.02)=2,LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT","^",LRI)
"RTN","LRVRMI2A",63,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",64,0)
 ;
"RTN","LRVRMI2A",65,0)
 ; Store performing lab
"RTN","LRVRMI2A",66,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,0,.01,1))
"RTN","LRVRMI2A",67,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",9,"_R6337_",0",$P(LRX,"^"))
"RTN","LRVRMI2A",68,0)
 ;
"RTN","LRVRMI2A",69,0)
 S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,0,.01,0))
"RTN","LRVRMI2A",70,0)
 D BLDSTAT^LRVRMI4A(63.05,19,STAT,.LRSTATUS)
"RTN","LRVRMI2A",71,0)
 ;
"RTN","LRVRMI2A",72,0)
 ; fungus/yeast comments - comments don't have status
"RTN","LRVRMI2A",73,0)
 K LRFDA,LRFDAIEN,LRMSG,LRIENS,DIERR
"RTN","LRVRMI2A",74,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,9,IEN,1)
"RTN","LRVRMI2A",75,0)
 S IEN2=0
"RTN","LRVRMI2A",76,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,1,IEN2)) Q:IEN2<1  D
"RTN","LRVRMI2A",77,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,IEN,1,IEN2,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2A",78,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2A",79,0)
 . S LRIEN="+"_IEN2_","_R6337_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",80,0)
 . S LRFDA(9,63.372,LRIEN,.01)=LRX
"RTN","LRVRMI2A",81,0)
 ;
"RTN","LRVRMI2A",82,0)
 I $D(LRFDA) D UPDATE^DIE("","LRFDA(9)","","LRMSG")
"RTN","LRVRMI2A",83,0)
 ;
"RTN","LRVRMI2A",84,0)
 Q
"RTN","LRVRMI2A",85,0)
 ;
"RTN","LRVRMI2A",86,0)
 ;
"RTN","LRVRMI2A",87,0)
N11 ; Process Acid Fast
"RTN","LRVRMI2A",88,0)
 N AFS,DIERR,LRFDA,LRIEN,LRIENS,LRMSG,LRX,QTY
"RTN","LRVRMI2A",89,0)
 ;
"RTN","LRVRMI2A",90,0)
 ;ZEXCEPT: LRDFN,LRDUZ,LRI,LRIDT,LRNOW
"RTN","LRVRMI2A",91,0)
 ;
"RTN","LRVRMI2A",92,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11))
"RTN","LRVRMI2A",93,0)
 D BLDSTAT^LRVRMI4A(63.05,23,$P(LRX,"^",2),.LRSTATUS)
"RTN","LRVRMI2A",94,0)
 ;
"RTN","LRVRMI2A",95,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",96,0)
 S LRFDA(11,63.05,LRIEN,22)=LRNOW
"RTN","LRVRMI2A",97,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11,0))
"RTN","LRVRMI2A",98,0)
 S AFS=$P(LRX,"^",3),QTY=$P(LRX,U,4)
"RTN","LRVRMI2A",99,0)
 S LRFDA(11,63.05,LRIEN,24)=AFS ; Acid Fast Stain
"RTN","LRVRMI2A",100,0)
 ;I $L(QTY)>68 S QTY=$E(QTY,1,65)_"..."
"RTN","LRVRMI2A",101,0)
 S LRFDA(11,63.05,LRIEN,25)=QTY ; Quantity
"RTN","LRVRMI2A",102,0)
 S LRFDA(11,63.05,LRIEN,25.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2A",103,0)
 ; derive status
"RTN","LRVRMI2A",104,0)
 I AFS'="" D
"RTN","LRVRMI2A",105,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11,0,.01,0))
"RTN","LRVRMI2A",106,0)
 . D BLDSTAT^LRVRMI4A(63.05,23,$P(LRX,"^"),.LRSTATUS)
"RTN","LRVRMI2A",107,0)
 I QTY'="" D
"RTN","LRVRMI2A",108,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11,0,.02,0))
"RTN","LRVRMI2A",109,0)
 . D BLDSTAT^LRVRMI4A(63.05,23,$P(LRX,"^"),.LRSTATUS)
"RTN","LRVRMI2A",110,0)
 ;
"RTN","LRVRMI2A",111,0)
 D FILE^DIE("","LRFDA(11)","LRMSG")
"RTN","LRVRMI2A",112,0)
 ;
"RTN","LRVRMI2A",113,0)
 ; Store code system references for AFB Stain
"RTN","LRVRMI2A",114,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11,0,.01))
"RTN","LRVRMI2A",115,0)
 F LRI=1,2 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",116,0)
 . N LRDATA
"RTN","LRVRMI2A",117,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",11,0;3"
"RTN","LRVRMI2A",118,0)
 . S LRDATA(.02)=2,LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT","^",LRI)
"RTN","LRVRMI2A",119,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",120,0)
 ;
"RTN","LRVRMI2A",121,0)
 ; Store code system references for AFB quantity
"RTN","LRVRMI2A",122,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11,0,.02))
"RTN","LRVRMI2A",123,0)
 F LRI=1,2 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",124,0)
 . N LRDATA
"RTN","LRVRMI2A",125,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",11,0;4"
"RTN","LRVRMI2A",126,0)
 . S LRDATA(.02)=2,LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT","^",LRI)
"RTN","LRVRMI2A",127,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",128,0)
 ;
"RTN","LRVRMI2A",129,0)
 Q
"RTN","LRVRMI2A",130,0)
 ;
"RTN","LRVRMI2A",131,0)
 ;
"RTN","LRVRMI2A",132,0)
N12 ; Process Mycobacteria
"RTN","LRVRMI2A",133,0)
 ;
"RTN","LRVRMI2A",134,0)
 N DATA,DIERR,DNFLDS,FLD,IEN,IEN2,ISOID,LRCMT,LRFDA,LRIEN,LRIENS,LRMSG,LRN12,LRX,R6339,STAT
"RTN","LRVRMI2A",135,0)
 ;
"RTN","LRVRMI2A",136,0)
 ;ZEXCEPT: LRDFN,LRIDT,LRLL,LRPROF,LRSTATUS
"RTN","LRVRMI2A",137,0)
 ;
"RTN","LRVRMI2A",138,0)
 S IEN=0
"RTN","LRVRMI2A",139,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN)) Q:IEN<1  D N12A
"RTN","LRVRMI2A",140,0)
 ;
"RTN","LRVRMI2A",141,0)
 Q
"RTN","LRVRMI2A",142,0)
 ;
"RTN","LRVRMI2A",143,0)
 ;
"RTN","LRVRMI2A",144,0)
N12A ; Process mycobacteria organism
"RTN","LRVRMI2A",145,0)
 ;
"RTN","LRVRMI2A",146,0)
 N DATA,DIERR,DNFLDS,FLD,I,IEN2,ISOID,LRCMT,LRCSR,LRFDA,LRI,LRIEN,LRIENS,LRMSG,LRN12,LRX,R6339,STAT
"RTN","LRVRMI2A",147,0)
 ;
"RTN","LRVRMI2A",148,0)
 ;ZEXCEPT: IEN,LRDFN,LRIDT,LRLL,LRPROF,LRSTATUS
"RTN","LRVRMI2A",149,0)
 ;
"RTN","LRVRMI2A",150,0)
 S LRN12=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,0))
"RTN","LRVRMI2A",151,0)
 Q:LRN12=""
"RTN","LRVRMI2A",152,0)
 S ISOID=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,.1))
"RTN","LRVRMI2A",153,0)
 Q:ISOID=""
"RTN","LRVRMI2A",154,0)
 ;
"RTN","LRVRMI2A",155,0)
 ; Delete ISOID entry if it exists
"RTN","LRVRMI2A",156,0)
 S R6339=$O(^LR(LRDFN,"MI",LRIDT,12,"C",ISOID,0))
"RTN","LRVRMI2A",157,0)
 I R6339 D
"RTN","LRVRMI2A",158,0)
 . K LRFDA,LRMSG,DIERR
"RTN","LRVRMI2A",159,0)
 . S LRIEN=R6339_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",160,0)
 . S LRFDA(12,63.39,LRIEN,.01)="@"
"RTN","LRVRMI2A",161,0)
 . D FILE^DIE("","LRFDA(12)","LRMSG")
"RTN","LRVRMI2A",162,0)
 ; existing ISOID was deleted so always add record
"RTN","LRVRMI2A",163,0)
 ;
"RTN","LRVRMI2A",164,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI2A",165,0)
 S LRIEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",166,0)
 S LRFDA(12,63.39,LRIEN,.01)=$P(LRN12,U)
"RTN","LRVRMI2A",167,0)
 S LRFDA(12,63.39,LRIEN,.1)=ISOID
"RTN","LRVRMI2A",168,0)
 S LRFDA(12,63.39,LRIEN,1)=$P(LRN12,U,2)
"RTN","LRVRMI2A",169,0)
 D UPDATE^DIE("","LRFDA(12)","LRIENS","LRMSG")
"RTN","LRVRMI2A",170,0)
 S R6339=$G(LRIENS(1))
"RTN","LRVRMI2A",171,0)
 Q:'R6339
"RTN","LRVRMI2A",172,0)
 ;
"RTN","LRVRMI2A",173,0)
 ; Store code system references
"RTN","LRVRMI2A",174,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,0,.01))
"RTN","LRVRMI2A",175,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",176,0)
 . N LRDATA
"RTN","LRVRMI2A",177,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",12,"_R6339_",0"
"RTN","LRVRMI2A",178,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI2A",179,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",180,0)
 ;
"RTN","LRVRMI2A",181,0)
 ; Store performing lab
"RTN","LRVRMI2A",182,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,0,.01,1))
"RTN","LRVRMI2A",183,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",12,"_R6339_",0",$P(LRX,"^"))
"RTN","LRVRMI2A",184,0)
 ;
"RTN","LRVRMI2A",185,0)
 S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,0,.01,0))
"RTN","LRVRMI2A",186,0)
 D BLDSTAT^LRVRMI4A(63.05,23,STAT,.LRSTATUS)
"RTN","LRVRMI2A",187,0)
 ;
"RTN","LRVRMI2A",188,0)
 ; Process comments
"RTN","LRVRMI2A",189,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI2A",190,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,12,IEN,1)
"RTN","LRVRMI2A",191,0)
 S IEN2=0
"RTN","LRVRMI2A",192,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,1,IEN2)) Q:'IEN2  D
"RTN","LRVRMI2A",193,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,1,IEN2,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI2A",194,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI2A",195,0)
 . S LRIEN="+"_IEN2_","_R6339_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",196,0)
 . S LRFDA(12,63.4,LRIEN,.01)=LRX
"RTN","LRVRMI2A",197,0)
 I $D(LRFDA) D UPDATE^DIE("","LRFDA(12)","","LRMSG")
"RTN","LRVRMI2A",198,0)
 ;
"RTN","LRVRMI2A",199,0)
 ; Add drug susceptibilities
"RTN","LRVRMI2A",200,0)
 S IEN2=1.999999999,IEN2=2
"RTN","LRVRMI2A",201,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI2A",202,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,IEN2)) Q:'IEN2  D  ;
"RTN","LRVRMI2A",203,0)
 . S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,IEN2,.01,0))
"RTN","LRVRMI2A",204,0)
 . D BLDSTAT^LRVRMI4A(63.05,23,STAT,.LRSTATUS)
"RTN","LRVRMI2A",205,0)
 . S LRIEN=R6339_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",206,0)
 . S DATA=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,IEN2)
"RTN","LRVRMI2A",207,0)
 . S DNFLDS=$$DN2FLDS^LRVRMI4A(IEN2,,12)
"RTN","LRVRMI2A",208,0)
 . S FLD=$P(DNFLDS,"^",1)
"RTN","LRVRMI2A",209,0)
 . I FLD S LRFDA(12,63.39,LRIEN,FLD)=DATA
"RTN","LRVRMI2A",210,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,IEN,IEN2,.01))
"RTN","LRVRMI2A",211,0)
 . F I=1:1:3 I $P(LRX,"^",I) S LRCSR(IEN2_";1",$S(I<3:2,1:3),$P("LN^NLT^SCT","^",I))=$P(LRX,"^",I)
"RTN","LRVRMI2A",212,0)
 ;
"RTN","LRVRMI2A",213,0)
 ; File susceptibilities
"RTN","LRVRMI2A",214,0)
 I $D(LRFDA) D FILE^DIE("","LRFDA(12)","LRMSG")
"RTN","LRVRMI2A",215,0)
 ;
"RTN","LRVRMI2A",216,0)
 ; Store code system references
"RTN","LRVRMI2A",217,0)
 I $D(LRCSR) D CSR^LRVRMI4A(.LRCSR,LRDFN_",MI,"_LRIDT_",12,"_IEN_",")
"RTN","LRVRMI2A",218,0)
 ;
"RTN","LRVRMI2A",219,0)
 Q
"RTN","LRVRMI2A",220,0)
 ;
"RTN","LRVRMI2A",221,0)
 ;
"RTN","LRVRMI2A",222,0)
N17 ; Process Virology
"RTN","LRVRMI2A",223,0)
 N DIERR,IEN,IEN2,IEN3,LRFDA,LRIEN,LRMSG
"RTN","LRVRMI2A",224,0)
 ;
"RTN","LRVRMI2A",225,0)
 ;ZEXCEPT: LRDFN,LRDUZ,LRIDT,LRNOW
"RTN","LRVRMI2A",226,0)
 ;
"RTN","LRVRMI2A",227,0)
 S (IEN,IEN2,IEN3)=0
"RTN","LRVRMI2A",228,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN)) Q:IEN<1  D N17A
"RTN","LRVRMI2A",229,0)
 ;
"RTN","LRVRMI2A",230,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",231,0)
 S LRFDA(17,63.05,LRIEN,33)=LRNOW
"RTN","LRVRMI2A",232,0)
 S LRFDA(17,63.05,LRIEN,35)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI2A",233,0)
 D FILE^DIE("","LRFDA(17)","LRMSG")
"RTN","LRVRMI2A",234,0)
 Q
"RTN","LRVRMI2A",235,0)
 ;
"RTN","LRVRMI2A",236,0)
 ;
"RTN","LRVRMI2A",237,0)
N17A ; Process virus
"RTN","LRVRMI2A",238,0)
 ;
"RTN","LRVRMI2A",239,0)
 N DIERR,ISOID,LRFDA,LRI,LRIEN,LRMSG,LRN17,LRX,R6343
"RTN","LRVRMI2A",240,0)
 ;
"RTN","LRVRMI2A",241,0)
 ;ZEXCEPT: IEN,LRDFN,LRIDT
"RTN","LRVRMI2A",242,0)
 ;
"RTN","LRVRMI2A",243,0)
 S LRN17=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN,0)
"RTN","LRVRMI2A",244,0)
 Q:LRN17=""
"RTN","LRVRMI2A",245,0)
 S ISOID=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN,.1))
"RTN","LRVRMI2A",246,0)
 Q:ISOID=""
"RTN","LRVRMI2A",247,0)
 ;
"RTN","LRVRMI2A",248,0)
 ; Delete ISOID if it exists
"RTN","LRVRMI2A",249,0)
 S R6343=$O(^LR(LRDFN,"MI",LRIDT,17,"C",ISOID,0))
"RTN","LRVRMI2A",250,0)
 I R6343 D
"RTN","LRVRMI2A",251,0)
 . K LRFDA,LRMSG,DIERR
"RTN","LRVRMI2A",252,0)
 . S LRIEN=R6343_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",253,0)
 . S LRFDA(17,63.43,LRIEN,.01)="@"
"RTN","LRVRMI2A",254,0)
 . D FILE^DIE("","LRFDA(17)","LRMSG")
"RTN","LRVRMI2A",255,0)
 ;
"RTN","LRVRMI2A",256,0)
 ; Store code system references
"RTN","LRVRMI2A",257,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN,0,.01))
"RTN","LRVRMI2A",258,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI2A",259,0)
 . N LRDATA
"RTN","LRVRMI2A",260,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",17,"_R6343_",0"
"RTN","LRVRMI2A",261,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI2A",262,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI2A",263,0)
 ;
"RTN","LRVRMI2A",264,0)
 ; Store performing lab
"RTN","LRVRMI2A",265,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN,0,.01,1))
"RTN","LRVRMI2A",266,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",17,"_R6343_",0",$P(LRX,"^"))
"RTN","LRVRMI2A",267,0)
 ;
"RTN","LRVRMI2A",268,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,IEN,0,.01,0))
"RTN","LRVRMI2A",269,0)
 D BLDSTAT^LRVRMI4A(63.05,34,$P(LRX,"^"),.LRSTATUS)
"RTN","LRVRMI2A",270,0)
 ;
"RTN","LRVRMI2A",271,0)
 K LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI2A",272,0)
 S LRIEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRMI2A",273,0)
 S LRFDA(17,63.43,LRIEN,.01)=LRN17
"RTN","LRVRMI2A",274,0)
 S LRFDA(17,63.43,LRIEN,.1)=ISOID
"RTN","LRVRMI2A",275,0)
 D UPDATE^DIE("","LRFDA(17)","","LRMSG")
"RTN","LRVRMI2A",276,0)
 ;
"RTN","LRVRMI2A",277,0)
 Q
"RTN","LRVRMI3")
0^5^B17349617
"RTN","LRVRMI3",1,0)
LRVRMI3 ;DALOI/STAFF - LAB MICRO LEDI INTERFACE ;11/23/11  12:25
"RTN","LRVRMI3",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI3",3,0)
 ;
"RTN","LRVRMI3",4,0)
 ; Part of Micro LEDI interface.  It is a continuation of ^LRVRMI4 and ^LRVRMI2. Processes data in the temp global ^TMP("LRMI")
"RTN","LRVRMI3",5,0)
 ; and stores it into the appropriate sections of the Lab Data Microbiology file (#63.05).
"RTN","LRVRMI3",6,0)
 ;
"RTN","LRVRMI3",7,0)
 ;
"RTN","LRVRMI3",8,0)
NODE(LRNODE) ;  Process similar multiples - nodes 15,19-31
"RTN","LRVRMI3",9,0)
 ; Call with LRNODE = node in MI subscript to process
"RTN","LRVRMI3",10,0)
 ;
"RTN","LRVRMI3",11,0)
 N DIERR,IEN,LRCMT,LRFDA,LRFDAIEN,LRFILE,LRERR,LRIEN,LRMSG,LRPL,LRX,X
"RTN","LRVRMI3",12,0)
 ; Mycology smear/prep^^^^Preliminary bacteriology comment^Preliminary virology comment^Preliminary parasite comment^Preliminary mycology comment^Preliminary TB comment^
"RTN","LRVRMI3",13,0)
 ; Parasitology smear/prep^Bacteriology smear/prep^Bacteriology test^Parasite test^Mycology test^TB test^Virology test^Sterility test
"RTN","LRVRMI3",14,0)
 ;
"RTN","LRVRMI3",15,0)
 S LRFILE=$P("63.371^^^^63.06^63.431^63.1^63.11^63.18^63.341^63.291^63.061^63.361^63.111^63.181^63.432^63.292^","^",LRNODE-14)
"RTN","LRVRMI3",16,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,LRNODE)
"RTN","LRVRMI3",17,0)
 ;
"RTN","LRVRMI3",18,0)
 S IEN=0
"RTN","LRVRMI3",19,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,IEN)) Q:IEN<1  D
"RTN","LRVRMI3",20,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,IEN,0)),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI3",21,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI3",22,0)
 . S LRFDA(1,LRFILE,"+"_IEN_","_LRIDT_","_LRDFN_",",.01)=LRX
"RTN","LRVRMI3",23,0)
 . S LRFDAIEN(IEN)=IEN
"RTN","LRVRMI3",24,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,0))
"RTN","LRVRMI3",25,0)
 . I $P(LRX,"^") S LRPL(IEN)=$P(LRX,"^") Q
"RTN","LRVRMI3",26,0)
 . ;
"RTN","LRVRMI3",27,0)
 . I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,IEN,0,0)) D  ;
"RTN","LRVRMI3",28,0)
 . . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,IEN,0,0))
"RTN","LRVRMI3",29,0)
 . . S X=$P(LRX,"^",4)
"RTN","LRVRMI3",30,0)
 . . D STAT4CMT(LRFILE,X,.LRSTATUS)
"RTN","LRVRMI3",31,0)
 . . I $P(LRX,"^") S LRPL(IEN)=$P(LRX,"^")
"RTN","LRVRMI3",32,0)
 . ;
"RTN","LRVRMI3",33,0)
 ;
"RTN","LRVRMI3",34,0)
 I '$D(LRFDA) Q
"RTN","LRVRMI3",35,0)
 ;
"RTN","LRVRMI3",36,0)
 D UPDATE^DIE("","LRFDA(1)","LRFDAIEN","LRERR")
"RTN","LRVRMI3",37,0)
 S IEN=0
"RTN","LRVRMI3",38,0)
 F  S IEN=$O(LRPL(IEN)) Q:'IEN  D
"RTN","LRVRMI3",39,0)
 . I $G(LRFDAIEN(IEN)) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_","_LRNODE_","_LRFDAIEN(IEN),LRPL(IEN))
"RTN","LRVRMI3",40,0)
 ;
"RTN","LRVRMI3",41,0)
 ;
"RTN","LRVRMI3",42,0)
 ; Update d/t approved and user approving
"RTN","LRVRMI3",43,0)
 S LRX=$$RPTDT(LRDFN,LRIDT,LRNODE,LRNOW,$S($G(LRDUZ):LRDUZ,1:$G(DUZ)))
"RTN","LRVRMI3",44,0)
 ;
"RTN","LRVRMI3",45,0)
 Q
"RTN","LRVRMI3",46,0)
 ;
"RTN","LRVRMI3",47,0)
 ;
"RTN","LRVRMI3",48,0)
SETPL(NODE) ; Setup LRPL array
"RTN","LRVRMI3",49,0)
 ; Call with NODE = node in MI subscript to retrieve the performing lab
"RTN","LRVRMI3",50,0)
 ;
"RTN","LRVRMI3",51,0)
 N LRX
"RTN","LRVRMI3",52,0)
 S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,NODE,IEN,0,0)
"RTN","LRVRMI3",53,0)
 I $P(LRX,"^") S LRPL(IEN)=$P(LRX,"^")
"RTN","LRVRMI3",54,0)
 Q
"RTN","LRVRMI3",55,0)
 ;
"RTN","LRVRMI3",56,0)
 ;
"RTN","LRVRMI3",57,0)
STOREPL(NODE) ; Set performing lab
"RTN","LRVRMI3",58,0)
 ; Call with NODE = node in MI subscript to retrieve the performing lab
"RTN","LRVRMI3",59,0)
 N IEN
"RTN","LRVRMI3",60,0)
 S IEN=0
"RTN","LRVRMI3",61,0)
 F  S IEN=$O(LRPL(IEN)) Q:'IEN  I $G(LRFDAIEN(IEN)) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_","_NODE_","_LRFDAIEN(IEN),LRPL(IEN))
"RTN","LRVRMI3",62,0)
 Q
"RTN","LRVRMI3",63,0)
 ;
"RTN","LRVRMI3",64,0)
 ;
"RTN","LRVRMI3",65,0)
DUPCHK(LRLL,LRPROF,LRCMT,LRCOM) ; Check for duplicates - comment stripped if spaces, force to upper case unless
"RTN","LRVRMI3",66,0)
 ; flag set to store duplicates (Field #2.2 of PROFILE multiple in file #68.2)
"RTN","LRVRMI3",67,0)
 ;
"RTN","LRVRMI3",68,0)
 ; Call with  LRLL = load/work list ien
"RTN","LRVRMI3",69,0)
 ;          LRPROF = profile ien in load/worklist
"RTN","LRVRMI3",70,0)
 ;           LRCMT = array containing current comments on file
"RTN","LRVRMI3",71,0)
 ;           LRCOM = new comment to check
"RTN","LRVRMI3",72,0)
 ;
"RTN","LRVRMI3",73,0)
 ; Returns LRDUP = 0 (no duplicate), 1 (duplicate)
"RTN","LRVRMI3",74,0)
 ;
"RTN","LRVRMI3",75,0)
 N LRDUP,LRI,LRX,LRY
"RTN","LRVRMI3",76,0)
 S LRDUP=0
"RTN","LRVRMI3",77,0)
 I '$P($G(^LRO(68.2,LRLL,10,+$G(LRPROF),0)),U,4) D
"RTN","LRVRMI3",78,0)
 . S LRI=0,LRY=$TR(LRCOM," ",""),LRY=$$UP^XLFSTR(LRY)
"RTN","LRVRMI3",79,0)
 . F  S LRI=$O(LRCMT(LRI)) Q:'LRI  D  Q:LRDUP
"RTN","LRVRMI3",80,0)
 . . S LRX=$P(LRCMT(LRI,0),U),LRX=$TR(LRX," ",""),LRX=$$UP^XLFSTR(LRX)
"RTN","LRVRMI3",81,0)
 . . I LRX=LRY S LRDUP=1
"RTN","LRVRMI3",82,0)
 Q LRDUP
"RTN","LRVRMI3",83,0)
 ;
"RTN","LRVRMI3",84,0)
 ;
"RTN","LRVRMI3",85,0)
STAT4CMT(FILE,STAT,LRSTATUS) ; Calculate status for comment nodes (eg BACT SMEAR)
"RTN","LRVRMI3",86,0)
 ; Inputs
"RTN","LRVRMI3",87,0)
 ;       FILE: The file # of the comment field in #63.
"RTN","LRVRMI3",88,0)
 ;       STAT: The status (eg F)
"RTN","LRVRMI3",89,0)
 ;   LRSTATUS:<byref>  Input and Output
"RTN","LRVRMI3",90,0)
 ; Outputs
"RTN","LRVRMI3",91,0)
 ;   LRSTATUS:
"RTN","LRVRMI3",92,0)
 N SUBF,FLD
"RTN","LRVRMI3",93,0)
 S (FLD,SUBF)=""
"RTN","LRVRMI3",94,0)
 ;
"RTN","LRVRMI3",95,0)
 I FILE=63.291 S SUBF=63.05,FLD=11.5 ; Bact Smear
"RTN","LRVRMI3",96,0)
 I FILE=63.341 S SUBF=63.05,FLD=15 ; Para Smear
"RTN","LRVRMI3",97,0)
 I FILE=63.371 S SUBF=63.05,FLD=19 ; Myco Smear
"RTN","LRVRMI3",98,0)
 ;
"RTN","LRVRMI3",99,0)
 I FLD,SUBF D BLDSTAT^LRVRMI4A(SUBF,FLD,STAT,.LRSTATUS)
"RTN","LRVRMI3",100,0)
 ;
"RTN","LRVRMI3",101,0)
 Q
"RTN","LRVRMI3",102,0)
 ;
"RTN","LRVRMI3",103,0)
 ;
"RTN","LRVRMI3",104,0)
RPTDT(LRDFN,LRIDT,SUBSCR,RPTDT,USER) ; File Report Approved Date and Person Reporting
"RTN","LRVRMI3",105,0)
 ; Inputs
"RTN","LRVRMI3",106,0)
 ;  LRDFN: LRDFN
"RTN","LRVRMI3",107,0)
 ;  LRIDT: LRIDT
"RTN","LRVRMI3",108,0)
 ; SUBSCR: MI Result Subscript (eg 19,21,23,24,25,26)
"RTN","LRVRMI3",109,0)
 ;  RPTDT: Report Approved Date/Time
"RTN","LRVRMI3",110,0)
 ;   USER: Person Reporting (#200)
"RTN","LRVRMI3",111,0)
 ; Outputs
"RTN","LRVRMI3",112,0)
 ;  Returns 0^ErrNum^ErrMsg on error, 1 on success
"RTN","LRVRMI3",113,0)
 N DIERR,FLDS,IEN,LRFDA,LRMSG,LRX
"RTN","LRVRMI3",114,0)
 ;
"RTN","LRVRMI3",115,0)
 S LRDFN=$G(LRDFN),LRIDT=$G(LRIDT),SUBSCR=$G(SUBSCR),(FLDS,LRX)=""
"RTN","LRVRMI3",116,0)
 ;
"RTN","LRVRMI3",117,0)
 I $G(RPTDT)'>0 S RPTDT=$$NOW^XLFDT()
"RTN","LRVRMI3",118,0)
 I $G(USER)="" S USER=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI3",119,0)
 I LRDFN,LRIDT,SUBSCR S FLDS=$$NODE2FLD(SUBSCR)
"RTN","LRVRMI3",120,0)
 ;
"RTN","LRVRMI3",121,0)
 I FLDS'="" D
"RTN","LRVRMI3",122,0)
 . S IEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI3",123,0)
 . S LRFDA(1,63.05,IEN,$P(FLDS,"^",1))=RPTDT
"RTN","LRVRMI3",124,0)
 . S LRFDA(1,63.05,IEN,$P(FLDS,"^",2))=USER
"RTN","LRVRMI3",125,0)
 . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRVRMI3",126,0)
 . I '$D(LRMSG) S LRX=1 Q
"RTN","LRVRMI3",127,0)
 . S LRX="0^2^FileMan error"
"RTN","LRVRMI3",128,0)
 E  S LRX="0^1^No Field #s found"
"RTN","LRVRMI3",129,0)
 ;
"RTN","LRVRMI3",130,0)
 Q LRX
"RTN","LRVRMI3",131,0)
 ;
"RTN","LRVRMI3",132,0)
 ;
"RTN","LRVRMI3",133,0)
NODE2FLD(NODE) ; Resolve the fields to update based on the node
"RTN","LRVRMI3",134,0)
 ; Call with NODE = node in MI subscript to process
"RTN","LRVRMI3",135,0)
 ;
"RTN","LRVRMI3",136,0)
 ; Returns FIELDS = Report Date Approved^Person Reporting field #s
"RTN","LRVRMI3",137,0)
 ;
"RTN","LRVRMI3",138,0)
 N FIELDS
"RTN","LRVRMI3",139,0)
 S NODE=$G(NODE),FIELDS=""
"RTN","LRVRMI3",140,0)
 ;
"RTN","LRVRMI3",141,0)
 I NODE'="" D
"RTN","LRVRMI3",142,0)
 . I NODE?1(1"19",1"25",1"26",1"31") S FIELDS="11^11.55" Q
"RTN","LRVRMI3",143,0)
 . I NODE?1(1"23",1"29") S FIELDS="22^25.5" Q
"RTN","LRVRMI3",144,0)
 . I NODE?1(1"21",1"24",1"27") S FIELDS="14^15.5" Q
"RTN","LRVRMI3",145,0)
 . I NODE?1(1"15",1"22",1"28") S FIELDS="18^19.5" Q
"RTN","LRVRMI3",146,0)
 . I NODE?1(1"20",1"30") S FIELDS="33^35" Q
"RTN","LRVRMI3",147,0)
 ;
"RTN","LRVRMI3",148,0)
 Q FIELDS
"RTN","LRVRMI4")
0^48^B37691501
"RTN","LRVRMI4",1,0)
LRVRMI4 ;DALOI/STAFF - LAH/TMP TO FILE 63 ;09/06/11  11:11
"RTN","LRVRMI4",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI4",3,0)
 ;
"RTN","LRVRMI4",4,0)
 ; Extracts the information in the ^TMP("LRMI",$J) global and stores it into the Lab Data micro subfile.
"RTN","LRVRMI4",5,0)
 ;
"RTN","LRVRMI4",6,0)
 Q
"RTN","LRVRMI4",7,0)
 ;
"RTN","LRVRMI4",8,0)
EN ;
"RTN","LRVRMI4",9,0)
 N LRNODE,LRNOW,LRSTATUS,LR63539,X,I
"RTN","LRVRMI4",10,0)
 Q:'$D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT))
"RTN","LRVRMI4",11,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRVRMI4",12,0)
 ; Get IEN of last Micro Audit on file
"RTN","LRVRMI4",13,0)
 S LR63539=0
"RTN","LRVRMI4",14,0)
 S X=$O(^LR(LRDFN,"MI",LRIDT,32,"B","A"),-1)
"RTN","LRVRMI4",15,0)
 I X S LR63539=$O(^LR(LRDFN,"MI",LRIDT,32,"B",X,0))
"RTN","LRVRMI4",16,0)
 ;
"RTN","LRVRMI4",17,0)
 ; If any of these nodes are defined then trigger the audit
"RTN","LRVRMI4",18,0)
 F I=1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,99 I $D(^LR(LRDFN,"MI",LRIDT,I)) D  Q
"RTN","LRVRMI4",19,0)
 . I $G(LRSB)'>0 N LRSB S LRSB=$S(I<5:1,I<8:5,I<11:8,I<14:11,I<19:16,I=99:.99,1:0)
"RTN","LRVRMI4",20,0)
 . I LRSB>0 D AUDTRG
"RTN","LRVRMI4",21,0)
 ;
"RTN","LRVRMI4",22,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2,0)) D N2
"RTN","LRVRMI4",23,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,0)) D N3^LRVRMI4A
"RTN","LRVRMI4",24,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,0)) D N4
"RTN","LRVRMI4",25,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,0)) D N6^LRVRMI4A
"RTN","LRVRMI4",26,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,7,0)) D N7^LRVRMI2
"RTN","LRVRMI4",27,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,9,0)) D N9^LRVRMI2A
"RTN","LRVRMI4",28,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,10,0)) D N10^LRVRMI2
"RTN","LRVRMI4",29,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,11)) D N11^LRVRMI2A
"RTN","LRVRMI4",30,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,12,0)) D N12^LRVRMI2A
"RTN","LRVRMI4",31,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,13,0)) D N13^LRVRMI2
"RTN","LRVRMI4",32,0)
 ;I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,15,0)) D N15^LRVRMI2
"RTN","LRVRMI4",33,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,17,0)) D N17^LRVRMI2A
"RTN","LRVRMI4",34,0)
 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,18,0)) D N18^LRVRMI2
"RTN","LRVRMI4",35,0)
 ;
"RTN","LRVRMI4",36,0)
 F LRNODE=15,19:1:31 I $O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,LRNODE,0)) D NODE^LRVRMI3(LRNODE)
"RTN","LRVRMI4",37,0)
 ;
"RTN","LRVRMI4",38,0)
 I $D(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,99)) D N99
"RTN","LRVRMI4",39,0)
 ;
"RTN","LRVRMI4",40,0)
 D SETSTAT^LRVRMI4A(.LRSTATUS)
"RTN","LRVRMI4",41,0)
 I (LRSTATUS(0)="C")!(LRSTATUS(0)="F") D FIN  ; ccr_5439n - Added IF statement to only Do FIN if overall status is final or corrected. LMT 9/6/11
"RTN","LRVRMI4",42,0)
 ;
"RTN","LRVRMI4",43,0)
 ; Update MICRO AUDIT to reflect corrected status
"RTN","LRVRMI4",44,0)
 ;  If audit doesn't exist then create instead of updating.
"RTN","LRVRMI4",45,0)
 I LRSTATUS(0)="C" D
"RTN","LRVRMI4",46,0)
 . I LR63539<1 D AUDTRG Q
"RTN","LRVRMI4",47,0)
 . N LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI4",48,0)
 . S LRIEN=LR63539_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4",49,0)
 . S LRFDA(1,63.539,LRIEN,3)=3 ; Edit Type
"RTN","LRVRMI4",50,0)
 . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRVRMI4",51,0)
 ;
"RTN","LRVRMI4",52,0)
 Q
"RTN","LRVRMI4",53,0)
 ;
"RTN","LRVRMI4",54,0)
 ;
"RTN","LRVRMI4",55,0)
FIN ; Release report
"RTN","LRVRMI4",56,0)
 N LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRVRMI4",57,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4",58,0)
 S LRFDA(1,63.05,LRIEN,.04)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI4",59,0)
 S LRFDA(1,63.05,LRIEN,.03)=LRNOW
"RTN","LRVRMI4",60,0)
 ;S LRFDA(1,63.05,LRIEN,.2)=LRNOW ; ccr_5439n - Commented this line out as there is no field .2 in subfile #63.05. LMT 9/6/11
"RTN","LRVRMI4",61,0)
 D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRVRMI4",62,0)
 Q
"RTN","LRVRMI4",63,0)
 ;
"RTN","LRVRMI4",64,0)
 ;
"RTN","LRVRMI4",65,0)
N2 ; Process gram stain comments
"RTN","LRVRMI4",66,0)
 N DIERR,IEN,LRCMT,LRCSR,LRDATA,LRFDA,LRFDAIEN,LRIEN,LRIENS,LRMSG,LRPL,LRX,STAT
"RTN","LRVRMI4",67,0)
 ;
"RTN","LRVRMI4",68,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,2)
"RTN","LRVRMI4",69,0)
 ;
"RTN","LRVRMI4",70,0)
 S IEN=0,STAT=""
"RTN","LRVRMI4",71,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2,IEN)) Q:IEN<1  D
"RTN","LRVRMI4",72,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI4",73,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI4",74,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4",75,0)
 . S LRFDA(2,63.29,LRIEN,.01)=LRX
"RTN","LRVRMI4",76,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,2,IEN,0,0)
"RTN","LRVRMI4",77,0)
 . I $P(LRX,"^") S LRPL(IEN)=$P(LRX,"^")
"RTN","LRVRMI4",78,0)
 . I $P(LRX,"^",3) S LRCSR(IEN,2,"LN")=$P(LRX,"^",3)
"RTN","LRVRMI4",79,0)
 . I $P(LRX,"^",4) S LRCSR(IEN,2,"NLT")=$P(LRX,"^",4)
"RTN","LRVRMI4",80,0)
 . I $P(LRX,"^",5)'="" D BLDSTAT^LRVRMI4A(63.05,11.5,$P(LRX,"^",5),.LRSTATUS)
"RTN","LRVRMI4",81,0)
 I '$D(LRFDA) Q
"RTN","LRVRMI4",82,0)
 ;
"RTN","LRVRMI4",83,0)
 D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRMSG")
"RTN","LRVRMI4",84,0)
 ; Store performing lab
"RTN","LRVRMI4",85,0)
 S IEN=0
"RTN","LRVRMI4",86,0)
 F  S IEN=$O(LRPL(IEN)) Q:'IEN  D
"RTN","LRVRMI4",87,0)
 . I $G(LRPL(IEN)),$G(LRFDAIEN(IEN)) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",2,"_LRFDAIEN(IEN),LRPL(IEN))
"RTN","LRVRMI4",88,0)
 ;
"RTN","LRVRMI4",89,0)
 ; Store code system references
"RTN","LRVRMI4",90,0)
 I $D(LRCSR) D CSR(.LRCSR,.LRFDAIEN,LRDFN_",MI,"_LRIDT_",2,")
"RTN","LRVRMI4",91,0)
 ;
"RTN","LRVRMI4",92,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI4",93,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4",94,0)
 S LRFDA(2,63.05,LRIEN,11)=LRNOW
"RTN","LRVRMI4",95,0)
 S LRFDA(2,63.05,LRIEN,11.55)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI4",96,0)
 D FILE^DIE("","LRFDA(2)","LRMSG")
"RTN","LRVRMI4",97,0)
 Q
"RTN","LRVRMI4",98,0)
 ;
"RTN","LRVRMI4",99,0)
 ;
"RTN","LRVRMI4",100,0)
N4 ; Bact report remarks
"RTN","LRVRMI4",101,0)
 N DIERR,IEN,LRCMT,LRCSR,LRFDA,LRFDAIEN,LRIEN,LRIENS,LRMSG,LRPL,LRX
"RTN","LRVRMI4",102,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,0))
"RTN","LRVRMI4",103,0)
 D BLDSTAT^LRVRMI4A(63.05,11.5,$P(LRX,"^",4),.LRSTATUS)
"RTN","LRVRMI4",104,0)
 S LRPL=$P(LRX,"^")
"RTN","LRVRMI4",105,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,4)
"RTN","LRVRMI4",106,0)
 ;
"RTN","LRVRMI4",107,0)
 S IEN=0
"RTN","LRVRMI4",108,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,IEN)) Q:IEN<1  D  ;
"RTN","LRVRMI4",109,0)
 . S LRX=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,IEN,0),LRX=$S(LRX'="":LRX,1:" ")
"RTN","LRVRMI4",110,0)
 . I LRX'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,LRX) Q
"RTN","LRVRMI4",111,0)
 . S LRIEN="+"_IEN_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4",112,0)
 . S LRFDA(4,63.33,LRIEN,.01)=LRX
"RTN","LRVRMI4",113,0)
 . I $P(LRX,"^",3) S LRCSR(IEN,2,"LN")=$P(LRX,"^",3)
"RTN","LRVRMI4",114,0)
 . I $P(LRX,"^",4) S LRCSR(IEN,2,"NLT")=$P(LRX,"^",4)
"RTN","LRVRMI4",115,0)
 I '$D(LRFDA) Q
"RTN","LRVRMI4",116,0)
 ;
"RTN","LRVRMI4",117,0)
 D UPDATE^DIE("","LRFDA(4)","LRFDAIEN","LRMSG")
"RTN","LRVRMI4",118,0)
 ;
"RTN","LRVRMI4",119,0)
 ; Store performing lab
"RTN","LRVRMI4",120,0)
 S IEN=0
"RTN","LRVRMI4",121,0)
 F  S IEN=$O(LRFDAIEN(IEN)) Q:'IEN  I LRPL D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",4,"_LRFDAIEN(IEN),LRPL)
"RTN","LRVRMI4",122,0)
 ;
"RTN","LRVRMI4",123,0)
 ; Store code system references
"RTN","LRVRMI4",124,0)
 I $D(LRCSR) D CSR(.LRCSR,.LRFDAIEN,LRDFN_",MI,"_LRIDT_",4,")
"RTN","LRVRMI4",125,0)
 ;
"RTN","LRVRMI4",126,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI4",127,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4",128,0)
 S LRFDA(4,63.05,LRIEN,11)=LRNOW
"RTN","LRVRMI4",129,0)
 S LRFDA(4,63.05,LRIEN,11.5)=$P($G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,4,0)),U,4)
"RTN","LRVRMI4",130,0)
 S LRFDA(4,63.05,LRIEN,11.55)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI4",131,0)
 D FILE^DIE("","LRFDA(4)","LRMSG")
"RTN","LRVRMI4",132,0)
 Q
"RTN","LRVRMI4",133,0)
 ;
"RTN","LRVRMI4",134,0)
 ;
"RTN","LRVRMI4",135,0)
N99 ; Comment on specimen
"RTN","LRVRMI4",136,0)
 N LRDATA,LRFDA,LRMSG,LRX
"RTN","LRVRMI4",137,0)
 S LRDATA=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,99))
"RTN","LRVRMI4",138,0)
 Q:$TR(LRDATA," ","")=""  ; don't file empty comments
"RTN","LRVRMI4",139,0)
 ; Don't file same comment
"RTN","LRVRMI4",140,0)
 I LRDATA=$G(^LR(LRDFN,"MI",LRIDT,99)) Q
"RTN","LRVRMI4",141,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4",142,0)
 S LRFDA(99,63.05,LRIEN,.99)=LRDATA
"RTN","LRVRMI4",143,0)
 D FILE^DIE("","LRFDA(99)","LRMSG")
"RTN","LRVRMI4",144,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,99,0))
"RTN","LRVRMI4",145,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",99",$P(LRX,"^"))
"RTN","LRVRMI4",146,0)
 Q
"RTN","LRVRMI4",147,0)
 ;
"RTN","LRVRMI4",148,0)
 ;
"RTN","LRVRMI4",149,0)
AUDTRG ; Trigger the audit trail
"RTN","LRVRMI4",150,0)
 N LRDATA,LRMODE,LRBATCH
"RTN","LRVRMI4",151,0)
 S LRMODE="LDSI",LRBATCH=1
"RTN","LRVRMI4",152,0)
 S LRDATA(63.539,1)=LRNOW
"RTN","LRVRMI4",153,0)
 S LRDATA(63.539,3)=$S($G(LRSTATUS(0))'="C":1,1:3)
"RTN","LRVRMI4",154,0)
 I LRINTYPE=1 S LRDATA(63.539,4)="Update from lab automated instrument via HL7"
"RTN","LRVRMI4",155,0)
 I LRINTYPE=10 S LRDATA(63.539,4)="Update from performing lab via HL7"
"RTN","LRVRMI4",156,0)
 D LEDI^LRMIAUD(.LRDATA)
"RTN","LRVRMI4",157,0)
 Q
"RTN","LRVRMI4",158,0)
 ;
"RTN","LRVRMI4",159,0)
 ;
"RTN","LRVRMI4",160,0)
CSR(LRCSR,LRFDAIEN,LRREF) ; Store code system references
"RTN","LRVRMI4",161,0)
 ; Call with LRCSR = array of ien/codes to store as references (pass by value)
"RTN","LRVRMI4",162,0)
 ;        LRFDAIEN = FileMan array of entries added by DBA call (pass by value)
"RTN","LRVRMI4",163,0)
 ;           LRREF = root of reference to build full reference to data
"RTN","LRVRMI4",164,0)
 ;
"RTN","LRVRMI4",165,0)
 N IEN,LRDATA,LRDATAREF,LRDFN,LRROOT,ROLE,TYPE
"RTN","LRVRMI4",166,0)
 ;
"RTN","LRVRMI4",167,0)
 S LRROOT="LRCSR",LRDFN=$P(LRREF,",")
"RTN","LRVRMI4",168,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  D
"RTN","LRVRMI4",169,0)
 . S IEN=$QS(LRROOT,1),ROLE=$QS(LRROOT,2),TYPE=$QS(LRROOT,3)
"RTN","LRVRMI4",170,0)
 . I '$G(LRFDAIEN(IEN)) Q
"RTN","LRVRMI4",171,0)
 . S LRDATAREF=LRREF_LRFDAIEN(IEN)
"RTN","LRVRMI4",172,0)
 . S LRDATA(.01)=LRDATAREF,LRDATA(.02)=ROLE,LRDATA(.03)=LRCSR(IEN,ROLE,TYPE),LRDATA(.04)=TYPE
"RTN","LRVRMI4",173,0)
 . D SETREF^LRUCSR(LRDFN,LRDATAREF,.LRDATA,1)
"RTN","LRVRMI4",174,0)
 Q
"RTN","LRVRMI4A")
0^113^B95345785
"RTN","LRVRMI4A",1,0)
LRVRMI4A ;DALOI/STAFF - LAH/TMP TO FILE 63 ;03/24/11  17:08
"RTN","LRVRMI4A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI4A",3,0)
 ;
"RTN","LRVRMI4A",4,0)
 ; Reference to global ^DD(filenumber,"GL") supported by ICR 999
"RTN","LRVRMI4A",5,0)
 ; Extracts the information in the ^TMP("LRMI",$J) global and stores it into the Lab Data micro subfile.
"RTN","LRVRMI4A",6,0)
 ;
"RTN","LRVRMI4A",7,0)
 Q
"RTN","LRVRMI4A",8,0)
 ;
"RTN","LRVRMI4A",9,0)
N3 ;Process Organism
"RTN","LRVRMI4A",10,0)
 ;
"RTN","LRVRMI4A",11,0)
 N DIERR,IEN,LRFDA,LRIEN,LRIENS,LRMSG
"RTN","LRVRMI4A",12,0)
 ;
"RTN","LRVRMI4A",13,0)
 ;ZEXCEPT: LRDFN,LRDUZ,LRIDT,LRNOW
"RTN","LRVRMI4A",14,0)
 ;
"RTN","LRVRMI4A",15,0)
 S IEN=0
"RTN","LRVRMI4A",16,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN)) Q:IEN<1  D N3A
"RTN","LRVRMI4A",17,0)
 ;
"RTN","LRVRMI4A",18,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI4A",19,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",20,0)
 S LRFDA(3,63.05,LRIEN,11)=LRNOW
"RTN","LRVRMI4A",21,0)
 S LRFDA(3,63.05,LRIEN,11.55)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI4A",22,0)
 D FILE^DIE("","LRFDA(3)","LRMSG")
"RTN","LRVRMI4A",23,0)
 Q
"RTN","LRVRMI4A",24,0)
 ;
"RTN","LRVRMI4A",25,0)
 ;
"RTN","LRVRMI4A",26,0)
N3A ; Process each organism
"RTN","LRVRMI4A",27,0)
 ;
"RTN","LRVRMI4A",28,0)
 N DATA,DIERR,DNFLDS,FLD,I,IEN2,ISOID
"RTN","LRVRMI4A",29,0)
 N LRCSR,LRCMT,LRDATA,LRFDA,LRI,LRIEN,LRIENS,LRMSG,LRN3,LRX,R633,STAT
"RTN","LRVRMI4A",30,0)
 ;
"RTN","LRVRMI4A",31,0)
 ; ZEXCEPT: IEN,LRDFN,LRIDT,LRLL,LRPROF,LRSTATUS
"RTN","LRVRMI4A",32,0)
 ;
"RTN","LRVRMI4A",33,0)
 S LRN3=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,0))
"RTN","LRVRMI4A",34,0)
 Q:LRN3=""
"RTN","LRVRMI4A",35,0)
 S ISOID=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,.1))
"RTN","LRVRMI4A",36,0)
 Q:ISOID=""
"RTN","LRVRMI4A",37,0)
 ;
"RTN","LRVRMI4A",38,0)
 ; Delete ISOID entry if it exists
"RTN","LRVRMI4A",39,0)
 S R633=$O(^LR(LRDFN,"MI",LRIDT,3,"C",ISOID,0))
"RTN","LRVRMI4A",40,0)
 I R633 D
"RTN","LRVRMI4A",41,0)
 . K LRFDA,LRMSG
"RTN","LRVRMI4A",42,0)
 . S LRIEN=R633_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",43,0)
 . S LRFDA(3,63.3,LRIEN,.01)="@"
"RTN","LRVRMI4A",44,0)
 . D FILE^DIE("","LRFDA(3)","LRMSG")
"RTN","LRVRMI4A",45,0)
 ; existing ISOID was deleted so always add record
"RTN","LRVRMI4A",46,0)
 ;
"RTN","LRVRMI4A",47,0)
 S LRIEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",48,0)
 S LRFDA(3,63.3,LRIEN,.01)=$P(LRN3,U)
"RTN","LRVRMI4A",49,0)
 S LRFDA(3,63.3,LRIEN,.1)=ISOID
"RTN","LRVRMI4A",50,0)
 S LRFDA(3,63.3,LRIEN,1)=$P(LRN3,U,2)
"RTN","LRVRMI4A",51,0)
 D UPDATE^DIE("","LRFDA(3)","LRIENS","LRMSG")
"RTN","LRVRMI4A",52,0)
 S R633=$G(LRIENS(1))
"RTN","LRVRMI4A",53,0)
 Q:'R633
"RTN","LRVRMI4A",54,0)
 ;
"RTN","LRVRMI4A",55,0)
 ; Store code system references
"RTN","LRVRMI4A",56,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,0,.01))
"RTN","LRVRMI4A",57,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI4A",58,0)
 . N LRDATA
"RTN","LRVRMI4A",59,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",3,"_R633_",0"
"RTN","LRVRMI4A",60,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI4A",61,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI4A",62,0)
 ;
"RTN","LRVRMI4A",63,0)
 ; Store performing lab
"RTN","LRVRMI4A",64,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,0,.01,1))
"RTN","LRVRMI4A",65,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",3,"_R633_",0",$P(LRX,"^"))
"RTN","LRVRMI4A",66,0)
 ;
"RTN","LRVRMI4A",67,0)
 S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,0,.01,0))
"RTN","LRVRMI4A",68,0)
 S STAT=$P(STAT,U,1)
"RTN","LRVRMI4A",69,0)
 D BLDSTAT(63.05,11.5,STAT,.LRSTATUS)
"RTN","LRVRMI4A",70,0)
 ;
"RTN","LRVRMI4A",71,0)
 ; Process organism comments
"RTN","LRVRMI4A",72,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI4A",73,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,3,IEN,1)
"RTN","LRVRMI4A",74,0)
 S IEN2=0
"RTN","LRVRMI4A",75,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,1,IEN2)) Q:'IEN2  D
"RTN","LRVRMI4A",76,0)
 . S DATA=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,1,IEN2,0),DATA=$S(DATA'="":DATA,1:" ")
"RTN","LRVRMI4A",77,0)
 . I DATA'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,DATA) Q
"RTN","LRVRMI4A",78,0)
 . S LRIEN="+"_IEN2_","_R633_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",79,0)
 . S LRFDA(3,63.31,LRIEN,.01)=DATA
"RTN","LRVRMI4A",80,0)
 I $D(LRFDA) D UPDATE^DIE("","LRFDA(3)","","LRMSG")
"RTN","LRVRMI4A",81,0)
 ;
"RTN","LRVRMI4A",82,0)
 ; Add drug susceptibilities
"RTN","LRVRMI4A",83,0)
 S IEN2=2
"RTN","LRVRMI4A",84,0)
 K LRFDA,LRIENS,LRMSG,DIERR
"RTN","LRVRMI4A",85,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,IEN2)) Q:'IEN2  D
"RTN","LRVRMI4A",86,0)
 . S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,IEN2,.01,0))
"RTN","LRVRMI4A",87,0)
 . S STAT=$P(STAT,U,1)
"RTN","LRVRMI4A",88,0)
 . D BLDSTAT(63.05,11.5,STAT,.LRSTATUS)
"RTN","LRVRMI4A",89,0)
 . S LRIEN=R633_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",90,0)
 . S DATA=^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,IEN2)
"RTN","LRVRMI4A",91,0)
 . S DNFLDS=$$DN2FLDS(IEN2,,3)
"RTN","LRVRMI4A",92,0)
 . F I=1:1:3 D  ;
"RTN","LRVRMI4A",93,0)
 . . S FLD=$P(DNFLDS,"^",I)
"RTN","LRVRMI4A",94,0)
 . . Q:'FLD
"RTN","LRVRMI4A",95,0)
 . . S LRFDA(3,63.3,LRIEN,FLD)=$P(DATA,U,I)
"RTN","LRVRMI4A",96,0)
 . S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,3,IEN,IEN2,.01))
"RTN","LRVRMI4A",97,0)
 . F I=1:1:3 I $P(LRX,"^",I) S LRCSR(IEN2_";1",$S(I<3:2,1:3),$P("LN^NLT^SCT","^",I))=$P(LRX,"^",I)
"RTN","LRVRMI4A",98,0)
 ; File susceptibilities
"RTN","LRVRMI4A",99,0)
 I $D(LRFDA) D FILE^DIE("","LRFDA(3)","LRMSG")
"RTN","LRVRMI4A",100,0)
 ;
"RTN","LRVRMI4A",101,0)
 ; Store code system references
"RTN","LRVRMI4A",102,0)
 I $D(LRCSR) D CSR(.LRCSR,LRDFN_",MI,"_LRIDT_",3,"_IEN_",")
"RTN","LRVRMI4A",103,0)
 ;
"RTN","LRVRMI4A",104,0)
 Q
"RTN","LRVRMI4A",105,0)
 ;
"RTN","LRVRMI4A",106,0)
 ;
"RTN","LRVRMI4A",107,0)
N6 ; Process Parasite
"RTN","LRVRMI4A",108,0)
 ;
"RTN","LRVRMI4A",109,0)
 N DIERR,IEN,LRFDA,LRIEN,LRIENS,LRMSG
"RTN","LRVRMI4A",110,0)
 ;
"RTN","LRVRMI4A",111,0)
 ;ZEXCEPT: LRDFN,LRDUZ,LRIDT,LRLL,LRNOW,LRPROF,LRSTATUS
"RTN","LRVRMI4A",112,0)
 ;
"RTN","LRVRMI4A",113,0)
 S IEN=0
"RTN","LRVRMI4A",114,0)
 F  S IEN=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN)) Q:IEN<1  D N6A
"RTN","LRVRMI4A",115,0)
 ;
"RTN","LRVRMI4A",116,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",117,0)
 S LRFDA(6,63.05,LRIEN,14)=LRNOW
"RTN","LRVRMI4A",118,0)
 S LRFDA(6,63.05,LRIEN,15.5)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVRMI4A",119,0)
 D FILE^DIE("","LRFDA(6)","LRMSG")
"RTN","LRVRMI4A",120,0)
 Q
"RTN","LRVRMI4A",121,0)
 ;
"RTN","LRVRMI4A",122,0)
 ;
"RTN","LRVRMI4A",123,0)
N6A ; Process individual parasite result
"RTN","LRVRMI4A",124,0)
 ;
"RTN","LRVRMI4A",125,0)
 N DIERR,IEN2,ISOID,LRFDA,LRI,LRIEN,LRIENS,LRMSG,LRN6,LRX,R6334,STAT
"RTN","LRVRMI4A",126,0)
 ;
"RTN","LRVRMI4A",127,0)
 ;ZEXCEPT: LRDFN,LRIDT,LRSTATUS,IEN
"RTN","LRVRMI4A",128,0)
 ;
"RTN","LRVRMI4A",129,0)
 S LRN6=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,0))
"RTN","LRVRMI4A",130,0)
 Q:LRN6=""
"RTN","LRVRMI4A",131,0)
 S ISOID=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,.1))
"RTN","LRVRMI4A",132,0)
 Q:ISOID=""
"RTN","LRVRMI4A",133,0)
 ; Delete ISOID if it exists
"RTN","LRVRMI4A",134,0)
 S R6334=$O(^LR(LRDFN,"MI",LRIDT,6,"C",ISOID,0))
"RTN","LRVRMI4A",135,0)
 I R6334 D
"RTN","LRVRMI4A",136,0)
 . K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",137,0)
 . S LRIEN=R6334_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",138,0)
 . S LRFDA(6,63.34,LRIEN,.01)="@"
"RTN","LRVRMI4A",139,0)
 . D FILE^DIE("","LRFDA(6)","LRMSG")
"RTN","LRVRMI4A",140,0)
 ;
"RTN","LRVRMI4A",141,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",142,0)
 S LRIEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",143,0)
 S LRFDA(6,63.34,LRIEN,.01)=LRN6
"RTN","LRVRMI4A",144,0)
 S LRFDA(6,63.34,LRIEN,.1)=ISOID
"RTN","LRVRMI4A",145,0)
 D UPDATE^DIE("","LRFDA(6)","LRIENS","LRMSG")
"RTN","LRVRMI4A",146,0)
 S R6334=$G(LRIENS(1))
"RTN","LRVRMI4A",147,0)
 Q:'R6334
"RTN","LRVRMI4A",148,0)
 ;
"RTN","LRVRMI4A",149,0)
 ; Store code system references
"RTN","LRVRMI4A",150,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,0,.01))
"RTN","LRVRMI4A",151,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI4A",152,0)
 . N LRDATA
"RTN","LRVRMI4A",153,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",6,"_IEN_",0"
"RTN","LRVRMI4A",154,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI4A",155,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI4A",156,0)
 ;
"RTN","LRVRMI4A",157,0)
 ; Store performing lab
"RTN","LRVRMI4A",158,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,0,.01,1))
"RTN","LRVRMI4A",159,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",6,"_R6334_",0",$P(LRX,"^"))
"RTN","LRVRMI4A",160,0)
 ;
"RTN","LRVRMI4A",161,0)
 S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,0,.01,0))
"RTN","LRVRMI4A",162,0)
 S STAT=$P(STAT,U,1)
"RTN","LRVRMI4A",163,0)
 D BLDSTAT(63.05,15,STAT,.LRSTATUS)
"RTN","LRVRMI4A",164,0)
 ;
"RTN","LRVRMI4A",165,0)
 ; Stage results
"RTN","LRVRMI4A",166,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",167,0)
 S IEN2=0
"RTN","LRVRMI4A",168,0)
 F  S IEN2=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2)) Q:'IEN2  D N6B
"RTN","LRVRMI4A",169,0)
 ;
"RTN","LRVRMI4A",170,0)
 Q
"RTN","LRVRMI4A",171,0)
 ;
"RTN","LRVRMI4A",172,0)
 ;
"RTN","LRVRMI4A",173,0)
N6B ; Process Parasite Stage results
"RTN","LRVRMI4A",174,0)
 ;
"RTN","LRVRMI4A",175,0)
 N DATA,DIERR,IEN3,LRCMT,LRCSR,LRFDA,LRI,LRIEN,LRIENS,LRMSG,LRPL,LRX,R6335,STAGE,STAT
"RTN","LRVRMI4A",176,0)
 ;
"RTN","LRVRMI4A",177,0)
 ;ZEXCEPT: ISOID,LRDFN,LRIDT,LRLL,LRPROF,IEN,IEN2,LRSTATUS,R6334
"RTN","LRVRMI4A",178,0)
 ;
"RTN","LRVRMI4A",179,0)
 ; Delete STAGE if it exists
"RTN","LRVRMI4A",180,0)
 S STAGE=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,0))
"RTN","LRVRMI4A",181,0)
 S STAGE=$P(STAGE,U,1)
"RTN","LRVRMI4A",182,0)
 S R6335=$O(^LR(LRDFN,"MI",LRIDT,6,IEN,1,"B",ISOID,0))
"RTN","LRVRMI4A",183,0)
 I R6335 D
"RTN","LRVRMI4A",184,0)
 . K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",185,0)
 . S LRIEN=R6335_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",186,0)
 . S LRFDA(6,63.35,LRIEN,.01)="@"
"RTN","LRVRMI4A",187,0)
 . D FILE^DIE("","LRFDA(6)","LRMSG")
"RTN","LRVRMI4A",188,0)
 ;
"RTN","LRVRMI4A",189,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",190,0)
 S LRIEN="+"_IEN2_","_R6334_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",191,0)
 S DATA=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,0))
"RTN","LRVRMI4A",192,0)
 S LRFDA(6,63.35,LRIEN,.01)=$P(DATA,U,1) ;stage
"RTN","LRVRMI4A",193,0)
 S LRFDA(6,63.35,LRIEN,1)=$P(DATA,U,2) ;qty
"RTN","LRVRMI4A",194,0)
 D UPDATE^DIE("","LRFDA(6)","LRIENS","LRMSG")
"RTN","LRVRMI4A",195,0)
 ;
"RTN","LRVRMI4A",196,0)
 S R6335=$G(LRIENS(IEN2))
"RTN","LRVRMI4A",197,0)
 Q:'R6335
"RTN","LRVRMI4A",198,0)
 S STAT=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,0,.01,0))
"RTN","LRVRMI4A",199,0)
 S STAT=$P(STAT,U,1)
"RTN","LRVRMI4A",200,0)
 ;
"RTN","LRVRMI4A",201,0)
 ; Store code system references for stage
"RTN","LRVRMI4A",202,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,.01))
"RTN","LRVRMI4A",203,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI4A",204,0)
 . N LRDATA
"RTN","LRVRMI4A",205,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",6,"_R6334_",1,"_R6335_",0;1"
"RTN","LRVRMI4A",206,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI4A",207,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI4A",208,0)
 ;
"RTN","LRVRMI4A",209,0)
 ; Store code system references for quantity
"RTN","LRVRMI4A",210,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,1))
"RTN","LRVRMI4A",211,0)
 F LRI=1:1:3 I $P(LRX,"^",LRI) D
"RTN","LRVRMI4A",212,0)
 . N LRDATA
"RTN","LRVRMI4A",213,0)
 . S LRDATA(.01)=LRDFN_",MI,"_LRIDT_",6,"_R6334_",1,"_R6335_",0;2"
"RTN","LRVRMI4A",214,0)
 . S LRDATA(.02)=$S(LRI<3:2,1:3),LRDATA(.03)=$P(LRX,"^",LRI),LRDATA(.04)=$P("LN^NLT^SCT","^",LRI)
"RTN","LRVRMI4A",215,0)
 . D SETREF^LRUCSR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVRMI4A",216,0)
 ;
"RTN","LRVRMI4A",217,0)
 ; Store performing lab
"RTN","LRVRMI4A",218,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",6,IEN,1,IEN2,0,.01,1))
"RTN","LRVRMI4A",219,0)
 I $P(LRX,"^") D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",6,"_R6334_",1,"_R6335_",0",$P(LRX,"^"))
"RTN","LRVRMI4A",220,0)
 ;
"RTN","LRVRMI4A",221,0)
 D BLDSTAT(63.05,15,STAT,.LRSTATUS)
"RTN","LRVRMI4A",222,0)
 ;
"RTN","LRVRMI4A",223,0)
 ; get stage comments
"RTN","LRVRMI4A",224,0)
 K LRFDA,LRMSG,LRIENS,DIERR
"RTN","LRVRMI4A",225,0)
 M LRCMT=^LR(LRDFN,"MI",LRIDT,6,IEN,1,IEN2,1)
"RTN","LRVRMI4A",226,0)
 S LRX=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,1,0))
"RTN","LRVRMI4A",227,0)
 S STAT=$P(LRX,U,4)
"RTN","LRVRMI4A",228,0)
 D BLDSTAT(63.05,15,STAT,.LRSTATUS)
"RTN","LRVRMI4A",229,0)
 S IEN3=0
"RTN","LRVRMI4A",230,0)
 F  S IEN3=$O(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,1,IEN3)) Q:IEN3<1  D
"RTN","LRVRMI4A",231,0)
 . S DATA=$G(^TMP("LRMI",$J,LRDFN,"MI",LRIDT,6,IEN,1,IEN2,1,IEN3,0)),DATA=$S(DATA'="":DATA,1:" ")
"RTN","LRVRMI4A",232,0)
 . I DATA'=" ",$$DUPCHK^LRVRMI3(LRLL,LRPROF,.LRCMT,DATA) Q
"RTN","LRVRMI4A",233,0)
 . S LRIEN="+"_IEN3_","_R6335_","_R6334_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI4A",234,0)
 . S LRFDA(6,63.351,LRIEN,.01)=DATA
"RTN","LRVRMI4A",235,0)
 . I $P(LRX,"^") S LRPL(IEN3)=$P(LRX,"^")
"RTN","LRVRMI4A",236,0)
 . I $P(LRX,"^",3) S LRCSR(IEN3,2,"LN")=$P(LRX,"^",3)
"RTN","LRVRMI4A",237,0)
 ;
"RTN","LRVRMI4A",238,0)
 I '$D(LRFDA) Q
"RTN","LRVRMI4A",239,0)
 ;
"RTN","LRVRMI4A",240,0)
 D UPDATE^DIE("","LRFDA(6)","LRIENS","LRMSG")
"RTN","LRVRMI4A",241,0)
 ;
"RTN","LRVRMI4A",242,0)
 ; Store performing lab
"RTN","LRVRMI4A",243,0)
 S IEN3=0
"RTN","LRVRMI4A",244,0)
 F  S IEN3=$O(LRPL(IEN3)) Q:'IEN3  I $G(LRIENS(IEN3)) D SETPL^LRRPLUA(LRDFN_",MI,"_LRIDT_",6,"_LRIENS(IEN3),LRPL(IEN3))
"RTN","LRVRMI4A",245,0)
 ;
"RTN","LRVRMI4A",246,0)
 ; Store code system references
"RTN","LRVRMI4A",247,0)
 I $D(LRCSR) D CSR^LRVRMI4(.LRCSR,.LRIENS,LRDFN_",MI,"_LRIDT_",6,")
"RTN","LRVRMI4A",248,0)
 Q
"RTN","LRVRMI4A",249,0)
 ;
"RTN","LRVRMI4A",250,0)
 ;
"RTN","LRVRMI4A",251,0)
DN2FLDS(DN,FN,SUB) ;
"RTN","LRVRMI4A",252,0)
 ; Convert a drug node to a field number
"RTN","LRVRMI4A",253,0)
 ;File ^DD(filenumber,"GL")/999
"RTN","LRVRMI4A",254,0)
 ; Inputs
"RTN","LRVRMI4A",255,0)
 ;   DN : Drug Node (ie 2.0003)
"RTN","LRVRMI4A",256,0)
 ;   FN : <opt> File Number (ie 63.3)
"RTN","LRVRMI4A",257,0)
 ;  SUB : <opt> Subscript (ie 3)
"RTN","LRVRMI4A",258,0)
 ;       : Note: either FN or SUB must be supplied
"RTN","LRVRMI4A",259,0)
 ; Output
"RTN","LRVRMI4A",260,0)
 ;   The three associated field numbers for the drug node
"RTN","LRVRMI4A",261,0)
 ;     ie 15^15.1^15.2
"RTN","LRVRMI4A",262,0)
 N FLDS,I,X
"RTN","LRVRMI4A",263,0)
 S DN=$G(DN),FN=$G(FN),SUB=$G(SUB)
"RTN","LRVRMI4A",264,0)
 S FLDS=""
"RTN","LRVRMI4A",265,0)
 I FN="" D  ;
"RTN","LRVRMI4A",266,0)
 . I SUB=3 S FN=63.3
"RTN","LRVRMI4A",267,0)
 . I SUB=6 S FN=63.34
"RTN","LRVRMI4A",268,0)
 . I SUB=9 S FN=63.37
"RTN","LRVRMI4A",269,0)
 . I SUB=12 S FN=63.39
"RTN","LRVRMI4A",270,0)
 . I SUB=17 S FN=63.43
"RTN","LRVRMI4A",271,0)
 I $D(^DD(FN,"GL",DN)) D  ;
"RTN","LRVRMI4A",272,0)
 . F I=1:1:3 S X=$O(^DD(FN,"GL",DN,I,0)) I X S $P(FLDS,"^",I)=X
"RTN","LRVRMI4A",273,0)
 Q FLDS
"RTN","LRVRMI4A",274,0)
 ;
"RTN","LRVRMI4A",275,0)
 ;
"RTN","LRVRMI4A",276,0)
BLDSTAT(FN,FLD,STAT,DATA) ;
"RTN","LRVRMI4A",277,0)
 ; Builds the DATA array used for setting status(es)
"RTN","LRVRMI4A",278,0)
 ; Inputs
"RTN","LRVRMI4A",279,0)
 ;   FN : File Number  (ie 63.5)
"RTN","LRVRMI4A",280,0)
 ;  FLD : Field Number  (ie 19)
"RTN","LRVRMI4A",281,0)
 ; STAT : Status  (ie "F")
"RTN","LRVRMI4A",282,0)
 ; DATA <byref> : See Outputs
"RTN","LRVRMI4A",283,0)
 ;
"RTN","LRVRMI4A",284,0)
 ; Outputs
"RTN","LRVRMI4A",285,0)
 ; DATA <byref> : DATA(file#,field#)=status  DATA(63.05,19)="P"
"RTN","LRVRMI4A",286,0)
 ;
"RTN","LRVRMI4A",287,0)
 N CURR
"RTN","LRVRMI4A",288,0)
 I $G(STAT)="" Q
"RTN","LRVRMI4A",289,0)
 I STAT'?1(1"P",1"F",1"C") S STAT="P"
"RTN","LRVRMI4A",290,0)
 S CURR=$G(DATA(FN,FLD))
"RTN","LRVRMI4A",291,0)
 I CURR="" S DATA(FN,FLD)=STAT Q
"RTN","LRVRMI4A",292,0)
 I CURR=STAT Q
"RTN","LRVRMI4A",293,0)
 I CURR="P" Q
"RTN","LRVRMI4A",294,0)
 I CURR="F" D
"RTN","LRVRMI4A",295,0)
 . I STAT="P" S DATA(FN,FLD)="P" Q
"RTN","LRVRMI4A",296,0)
 . I STAT="C" S DATA(FN,FLD)="C" Q
"RTN","LRVRMI4A",297,0)
 Q
"RTN","LRVRMI4A",298,0)
 ;
"RTN","LRVRMI4A",299,0)
 ;
"RTN","LRVRMI4A",300,0)
SETSTAT(DATA) ;
"RTN","LRVRMI4A",301,0)
 ; Goes thru DATA array and files the status(es)
"RTN","LRVRMI4A",302,0)
 ; Inputs
"RTN","LRVRMI4A",303,0)
 ;   DATA <byref> : DATA(file#,field#)=status  ie DATA(63.05,19)="P"
"RTN","LRVRMI4A",304,0)
 ; Outputs
"RTN","LRVRMI4A",305,0)
 ;   DATA <byref> : Sets DATA(0)=overall status (P,F,C)
"RTN","LRVRMI4A",306,0)
 ;
"RTN","LRVRMI4A",307,0)
 N FLD,FN,LRFDA,LRIEN,LRMSG,NODE,STAT,STAT2
"RTN","LRVRMI4A",308,0)
 ;
"RTN","LRVRMI4A",309,0)
 ;ZEXCEPT: LRDFN,LRIDT
"RTN","LRVRMI4A",310,0)
 ;
"RTN","LRVRMI4A",311,0)
 S LRIEN=LRIDT_","_LRDFN_",",STAT2=""
"RTN","LRVRMI4A",312,0)
 S NODE="DATA(0)"
"RTN","LRVRMI4A",313,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D
"RTN","LRVRMI4A",314,0)
 . S FN=$QS(NODE,1),FLD=$QS(NODE,2)
"RTN","LRVRMI4A",315,0)
 . I 'FN!('FLD) Q
"RTN","LRVRMI4A",316,0)
 . S STAT=DATA(FN,FLD)
"RTN","LRVRMI4A",317,0)
 . ; derive "overall" status
"RTN","LRVRMI4A",318,0)
 . ; P > C > F
"RTN","LRVRMI4A",319,0)
 . I STAT2="" S STAT2=STAT
"RTN","LRVRMI4A",320,0)
 . I STAT="P" S STAT2="P"
"RTN","LRVRMI4A",321,0)
 . I STAT="C",STAT2'="P" S STAT2="C"
"RTN","LRVRMI4A",322,0)
 . I STAT="F",STAT2'="C",STAT2'="P" S STAT2="F"
"RTN","LRVRMI4A",323,0)
 . ;
"RTN","LRVRMI4A",324,0)
 . ;convert "C" to "F"
"RTN","LRVRMI4A",325,0)
 . I STAT="C" S STAT="F"
"RTN","LRVRMI4A",326,0)
 . S LRFDA(1,FN,LRIEN,FLD)=STAT
"RTN","LRVRMI4A",327,0)
 I $D(LRFDA) D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRVRMI4A",328,0)
 S DATA(0)=STAT2
"RTN","LRVRMI4A",329,0)
 Q
"RTN","LRVRMI4A",330,0)
 ;
"RTN","LRVRMI4A",331,0)
 ;
"RTN","LRVRMI4A",332,0)
CSR(LRCSR,LRREF) ; Store code system references
"RTN","LRVRMI4A",333,0)
 ; Call with LRCSR = array of ien/codes to store as references (pass by value)
"RTN","LRVRMI4A",334,0)
 ;           LRREF = root of reference to build full reference to data
"RTN","LRVRMI4A",335,0)
 ;
"RTN","LRVRMI4A",336,0)
 N IEN,LRDATA,LRDATAREF,LRDFN,LRROOT,ROLE,TYPE
"RTN","LRVRMI4A",337,0)
 ;
"RTN","LRVRMI4A",338,0)
 S LRROOT="LRCSR",LRDFN=$P(LRREF,",")
"RTN","LRVRMI4A",339,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  D
"RTN","LRVRMI4A",340,0)
 . S IEN=$QS(LRROOT,1),ROLE=$QS(LRROOT,2),TYPE=$QS(LRROOT,3),LRDATAREF=LRREF_IEN
"RTN","LRVRMI4A",341,0)
 . S LRDATA(.01)=LRDATAREF,LRDATA(.02)=ROLE,LRDATA(.03)=LRCSR(IEN,ROLE,TYPE),LRDATA(.04)=TYPE
"RTN","LRVRMI4A",342,0)
 . D SETREF^LRUCSR(LRDFN,LRDATAREF,.LRDATA,1)
"RTN","LRVRMI4A",343,0)
 Q
"RTN","LRVRMI5")
0^49^B10998053
"RTN","LRVRMI5",1,0)
LRVRMI5 ;DALOI/STAFF - LAB MICRO LEDI INTERFACE ;Jun 26, 2008
"RTN","LRVRMI5",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRVRMI5",3,0)
 ;
"RTN","LRVRMI5",4,0)
SETTMP ; Setup TMP global with accession to resend.
"RTN","LRVRMI5",5,0)
 ;
"RTN","LRVRMI5",6,0)
 N LA763,LA764,LA768,LA7CNT,LA7I,LA7NLT,LA7NLTN,LA7UID,LA7VDB,LA7X,LA7Y,LR60,LR61,X,ZFIL,ZFLD,ZPTR,ZEDTYP
"RTN","LRVRMI5",7,0)
 ;
"RTN","LRVRMI5",8,0)
 S LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LRVRMI5",9,0)
 F LA7I=0,.2,.3,3 S LA768(LA7I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,LA7I))
"RTN","LRVRMI5",10,0)
 S LA7UID=$P(LA768(.3),"^")
"RTN","LRVRMI5",11,0)
 ;
"RTN","LRVRMI5",12,0)
 ; Not a LEDI specimen
"RTN","LRVRMI5",13,0)
 ; 
"RTN","LRVRMI5",14,0)
 I '$P($G(LA768(.3)),"^",3) Q
"RTN","LRVRMI5",15,0)
 ;
"RTN","LRVRMI5",16,0)
 ; Check file #63 for order codes and results
"RTN","LRVRMI5",17,0)
 ; If no order NLT code found then use default NLT
"RTN","LRVRMI5",18,0)
 ; Check if test has been added to order then report results using NLT code of the added test.
"RTN","LRVRMI5",19,0)
 ; 
"RTN","LRVRMI5",20,0)
 S LRDFN=$P(LA768(0),"^"),LRODT=$P(LA768(0),"^",4),LRIDT=$P(LA768(3),"^",5)
"RTN","LRVRMI5",21,0)
 ;
"RTN","LRVRMI5",22,0)
 ; Check for date report completed.
"RTN","LRVRMI5",23,0)
 ;
"RTN","LRVRMI5",24,0)
 I '$$OK2SEND^LA7SRR D  Q
"RTN","LRVRMI5",25,0)
 . Q
"RTN","LRVRMI5",26,0)
 . N LA7X
"RTN","LRVRMI5",27,0)
 . S LA7X="No date report completed - Accession "_$P(LA768(.2),"^")_" ("_LA7UID_") skipped"
"RTN","LRVRMI5",28,0)
 . D EN^DDIOL(LA7X,"","!")
"RTN","LRVRMI5",29,0)
 ;
"RTN","LRVRMI5",30,0)
 K ^TMP("LA7S-RTM",$J)
"RTN","LRVRMI5",31,0)
 ;
"RTN","LRVRMI5",32,0)
 I LRSS="MI" D
"RTN","LRVRMI5",33,0)
 . S LR60=0
"RTN","LRVRMI5",34,0)
 . F  S LR60=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LR60)) Q:'LR60  D
"RTN","LRVRMI5",35,0)
 . . S LA764=$P($G(^LAB(60,LR60,64)),"^")
"RTN","LRVRMI5",36,0)
 . . S LA7NLT=$$GET1^DIQ(64,LA764_",",1)
"RTN","LRVRMI5",37,0)
 . . S LRDB=$$GET1^DIQ(64,LA764_",",63)
"RTN","LRVRMI5",38,0)
 . . I LA7NLT'="" D
"RTN","LRVRMI5",39,0)
 . . . S LA7Y(LA7NLT)=""
"RTN","LRVRMI5",40,0)
 . . . I LRDB'="" S LA7Y(LA7NLT,LRDB)=""
"RTN","LRVRMI5",41,0)
 ;
"RTN","LRVRMI5",42,0)
 I LA7UID'="",$D(LA7Y) D
"RTN","LRVRMI5",43,0)
 . S LA7CNT=$G(LA7CNT)+1
"RTN","LRVRMI5",44,0)
 . S X=$P(LA768(.3),"^",1)_"^"_$P(LA768(.3),"^",2)_"^"_$P(LA768(.3),"^",5)_"^"_$P(LA768(.3),"^",3)_"^"_LRIDT_"^"_LRSS_"^"_LRDFN_"^"_LRODT
"RTN","LRVRMI5",45,0)
 . S ^TMP("LA7S-RTM",$J,LA7UID)=X
"RTN","LRVRMI5",46,0)
 . S LA7I=""
"RTN","LRVRMI5",47,0)
 . F  S LA7I=$O(LA7Y(LA7I)) Q:LA7I=""  M ^TMP("LA7S-RTM",$J,LA7UID,LA7I)=LA7Y(LA7I)
"RTN","LRVRMI5",48,0)
 S LA7CNT=0,LA7UID=""
"RTN","LRVRMI5",49,0)
 F  S LA7UID=$O(^TMP("LA7S-RTM",$J,LA7UID)) Q:LA7UID=""  D
"RTN","LRVRMI5",50,0)
 . K LA7X
"RTN","LRVRMI5",51,0)
 . S LA7X=^TMP("LA7S-RTM",$J,LA7UID)
"RTN","LRVRMI5",52,0)
 . S LA7NLT="",LA7CNT=LA7CNT+1
"RTN","LRVRMI5",53,0)
 . F  S LA7NLT=$O(^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)) Q:LA7NLT=""  D
"RTN","LRVRMI5",54,0)
 . . S LA764=$$FIND1^DIC(64,"","MX",LA7NLT,"C")
"RTN","LRVRMI5",55,0)
 . . I 'LA764 Q
"RTN","LRVRMI5",56,0)
 . . S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LRVRMI5",57,0)
 . . K LA7Y
"RTN","LRVRMI5",58,0)
 . . M LA7Y=^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)
"RTN","LRVRMI5",59,0)
 . . ;
"RTN","LRVRMI5",60,0)
 . . ; Now send the message to LEDI for transmission to remote site
"RTN","LRVRMI5",61,0)
 . . ;  
"RTN","LRVRMI5",62,0)
 . . S ZPTR=0
"RTN","LRVRMI5",63,0)
 . . ;
"RTN","LRVRMI5",64,0)
 . . ; this is the TYPE: 1=NORMAL, 2=SUPPLEMENTAL, 3=CORRECTED
"RTN","LRVRMI5",65,0)
 . . S ZEDTYP=""
"RTN","LRVRMI5",66,0)
 . . S ZEDTYP=$O(^LR(LRDFN,"MI",LRIDT,32,ZEDTYP))
"RTN","LRVRMI5",67,0)
 . . S:$G(ZEDTYP) ZEDTYP=$P($G(^LR(LRDFN,"MI",LRIDT,32,ZEDTYP)),"^",4)
"RTN","LRVRMI5",68,0)
 . . ;
"RTN","LRVRMI5",69,0)
 . . I ZEDTYP=3 S LA7VDB(LA7NLT,ZPTR)="C"
"RTN","LRVRMI5",70,0)
 . . I 'ZEDTYP S LA7VDB(LA7NLT,ZPTR)=""
"RTN","LRVRMI5",71,0)
 . . D SET^LA7VMSG($P(LA7X,"^"),$P(LA7X,"^",2),$P(LA7X,"^",3),$P(LA7X,"^",4),LA7NLTN,LA7NLT,$P(LA7X,"^",5),$P(LA7X,"^",6),$P(LA7X,"^",7),$P(LA7X,"^",8),.LA7VDB,"ORU")
"RTN","LRVRMI5",72,0)
 ;
"RTN","LRVRMI5",73,0)
 K ^TMP("LA7S-RTM",$J)
"RTN","LRVRMI5",74,0)
 ;
"RTN","LRVRMI5",75,0)
 Q
"RTN","LRVRMI5",76,0)
 ;
"RTN","LRVRMI5",77,0)
 ;
"RTN","LRVRMI5",78,0)
 ;============================================================
"RTN","LRVRMI5",79,0)
 ;
"RTN","LRVRMI5",80,0)
 ;    DELETE EXTANT COMMENTS FROM SUBFILE
"RTN","LRVRMI5",81,0)
 ;   
"RTN","LRVRMI5",82,0)
 ;============================================================   
"RTN","LRVRMI5",83,0)
 ;
"RTN","LRVRMI5",84,0)
CLRCMNT(LRNDE,LRFIL) ;
"RTN","LRVRMI5",85,0)
 N LRFDA,LRIED,LRMSG
"RTN","LRVRMI5",86,0)
 S LRIEN=LRNO_","_LRIDT_","_LRDFN_","
"RTN","LRVRMI5",87,0)
 S LRFDA(LRNODE,LRFILE,LRIEN,.01)="@"
"RTN","LRVRMI5",88,0)
 D FILE^DIE("","LRFDA(LRNODE)","LRMSG")
"RTN","LRVRMI5",89,0)
 Q
"RTN","LRVRPOC")
0^79^B82812080
"RTN","LRVRPOC",1,0)
LRVRPOC ;DALOI/JMC - POINT OF CARE VERIFICATION ;05/11/10  16:48
"RTN","LRVRPOC",2,0)
 ;;5.2;LAB SERVICE;**290,350**;Sep 27, 1994;Build 230
"RTN","LRVRPOC",3,0)
 ;
"RTN","LRVRPOC",4,0)
 ; Reference to DIVSET^XUSRB2 supported by DBIA #4055
"RTN","LRVRPOC",5,0)
 ; Reference to ADM^VADPT2 supported by DBIA #325
"RTN","LRVRPOC",6,0)
 ;
"RTN","LRVRPOC",7,0)
EN ; Entry Point Call with LRLL=Load/Worklist IEN
"RTN","LRVRPOC",8,0)
 ;
"RTN","LRVRPOC",9,0)
 N DIQUIET,LA76248,LA76249,LADFN,LAIEN,LAMSG,LASSN,LREND,LRERR
"RTN","LRVRPOC",10,0)
 ;
"RTN","LRVRPOC",11,0)
 S LRLL=+$G(LRLL)
"RTN","LRVRPOC",12,0)
 ;
"RTN","LRVRPOC",13,0)
 ; See if already running
"RTN","LRVRPOC",14,0)
 L +^LAH("Z",LRLL):10
"RTN","LRVRPOC",15,0)
 E  D END Q
"RTN","LRVRPOC",16,0)
 ;
"RTN","LRVRPOC",17,0)
 I '$D(^LRO(68.2,LRLL,0))#2 D END Q
"RTN","LRVRPOC",18,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",19,0)
 ;
"RTN","LRVRPOC",20,0)
 D INIT^LRVRPOCU
"RTN","LRVRPOC",21,0)
 I LREND D  Q
"RTN","LRVRPOC",22,0)
 . D XQA^LA7UXQA(2,0,0,0,"POC: "_LAMSG,"")
"RTN","LRVRPOC",23,0)
 . D END
"RTN","LRVRPOC",24,0)
 ;
"RTN","LRVRPOC",25,0)
 S LAIEN=0
"RTN","LRVRPOC",26,0)
 F  S LAIEN=$O(^LAH(LRLL,1,LAIEN)) Q:LAIEN<1  D
"RTN","LRVRPOC",27,0)
 . I $$S^%ZTLOAD("Processing loadlist "_$P(LRLL(0),"^")_", entry #"_LAIEN) S ZTSTOP=1 Q  ; Task has been requested to stop
"RTN","LRVRPOC",28,0)
 . K LRERR
"RTN","LRVRPOC",29,0)
 . S LASSN=$P($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")),"^")
"RTN","LRVRPOC",30,0)
 . ; Interface message number in ^LAHM(62.49
"RTN","LRVRPOC",31,0)
 . S LA76249=+$P($G(^LAH(LRLL,1,LAIEN,0)),U,13)
"RTN","LRVRPOC",32,0)
 . ; File #62.48 configuration link
"RTN","LRVRPOC",33,0)
 . S LA76248=""
"RTN","LRVRPOC",34,0)
 . I LA76249 S LA76248=$$GET1^DIQ(62.49,LA76249_",",.5,"I")
"RTN","LRVRPOC",35,0)
 . D LOOK,NEXT,ZAPALL^LRVR3(LRLL,LAIEN)
"RTN","LRVRPOC",36,0)
 D END
"RTN","LRVRPOC",37,0)
 Q
"RTN","LRVRPOC",38,0)
 ;
"RTN","LRVRPOC",39,0)
 ;
"RTN","LRVRPOC",40,0)
NEXT ; Clean up between entries
"RTN","LRVRPOC",41,0)
 D CLEAN^LRVRPOCU
"RTN","LRVRPOC",42,0)
 Q
"RTN","LRVRPOC",43,0)
 ;
"RTN","LRVRPOC",44,0)
 ;
"RTN","LRVRPOC",45,0)
END ; Clean up and quit
"RTN","LRVRPOC",46,0)
 ; Release lock
"RTN","LRVRPOC",47,0)
 L -^LAH("Z",LRLL)
"RTN","LRVRPOC",48,0)
 ;
"RTN","LRVRPOC",49,0)
 D SPALERT^LRVRPOCU,KVAR^VADPT,KILL^XUSCLEAN
"RTN","LRVRPOC",50,0)
 K ^TMP("LR",$J)
"RTN","LRVRPOC",51,0)
 I $D(ZTQUEUED),'$P($G(ZTREQ),"^") S ZTREQ="@"
"RTN","LRVRPOC",52,0)
 Q
"RTN","LRVRPOC",53,0)
 ;
"RTN","LRVRPOC",54,0)
 ;
"RTN","LRVRPOC",55,0)
LOOK ; Check for data
"RTN","LRVRPOC",56,0)
 K LRDFN,LRERR
"RTN","LRVRPOC",57,0)
 S LRODT=DT,(LREND,LRERR)=0
"RTN","LRVRPOC",58,0)
 S DFN=$$GETDFN^LRVRPOCU(LASSN)
"RTN","LRVRPOC",59,0)
 I 'DFN D  Q
"RTN","LRVRPOC",60,0)
 . S LRERR=$$CREATE^LA7LOG(101,1)
"RTN","LRVRPOC",61,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",62,0)
 S LADFN=DFN
"RTN","LRVRPOC",63,0)
 I '$D(^LAH(LRLL,1,LAIEN,0))#2 D  Q
"RTN","LRVRPOC",64,0)
 . S LRERR=$$CREATE^LA7LOG(105,1)
"RTN","LRVRPOC",65,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",66,0)
 S LRCDT=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORCDT")),"^")
"RTN","LRVRPOC",67,0)
 I LRCDT'?7N.E D  Q
"RTN","LRVRPOC",68,0)
 . S LRERR=$$CREATE^LA7LOG(104,1)
"RTN","LRVRPOC",69,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",70,0)
 S LRDFN=$$FNLRDFN(LADFN)
"RTN","LRVRPOC",71,0)
 I $S(LREND:1,LRDFN<1:1,1:0) Q
"RTN","LRVRPOC",72,0)
 S LRSSN=$S($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")):^("SSN"),1:"???")
"RTN","LRVRPOC",73,0)
 I LRSSN'=$G(SSN(2)) D  Q
"RTN","LRVRPOC",74,0)
 . S LRERR=$$CREATE^LA7LOG(106,1)
"RTN","LRVRPOC",75,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",76,0)
 S LRTJ=""
"RTN","LRVRPOC",77,0)
 D DATA(LRLL,LAIEN)
"RTN","LRVRPOC",78,0)
 Q
"RTN","LRVRPOC",79,0)
 ;
"RTN","LRVRPOC",80,0)
 ;
"RTN","LRVRPOC",81,0)
FNLRDFN(DFN) ;Lookup/set LRDFN and define patient variables
"RTN","LRVRPOC",82,0)
 D KVAR^VADPT
"RTN","LRVRPOC",83,0)
 K ANS,ERR,LRDPF,PNM,X
"RTN","LRVRPOC",84,0)
 I $S(+DFN'=DFN:1,'$G(DFN):1,'$D(^DPT(DFN,0))#2:1,1:0) D  Q 0
"RTN","LRVRPOC",85,0)
 . S LREND=1,LRERR=$$CREATE^LA7LOG(108,1)
"RTN","LRVRPOC",86,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",87,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",88,0)
 S PNM="Unknown"
"RTN","LRVRPOC",89,0)
 I LRDFN<1 S LRDFN=$$NEWPT(DFN)
"RTN","LRVRPOC",90,0)
 I LRDFN>0 D  Q LRDFN
"RTN","LRVRPOC",91,0)
 . D DEM^LRX
"RTN","LRVRPOC",92,0)
 . I $G(LREND) S LRDFN=0 Q
"RTN","LRVRPOC",93,0)
 . S VAINDT=LRCDT D ADM^VADPT2
"RTN","LRVRPOC",94,0)
 . S VAIP("D")=$S(VADMVT:LRCDT,1:LRCDT\1) D IN5PT^LRX
"RTN","LRVRPOC",95,0)
 . D DPT(DFN)
"RTN","LRVRPOC",96,0)
 . I LRERR S LREND=1,LRDFN=0
"RTN","LRVRPOC",97,0)
 Q 0
"RTN","LRVRPOC",98,0)
 ;
"RTN","LRVRPOC",99,0)
 ;
"RTN","LRVRPOC",100,0)
NEWPT(DFN) ;Set ^LR( root for patient
"RTN","LRVRPOC",101,0)
 S LRDPF="2^DPT(",X="^"_$P(LRDPF,"^",2)_DFN_",""LR"")"
"RTN","LRVRPOC",102,0)
 S LRDFN=$O(^LR("A"),-1) I 'LRDFN S LRDFN=1
"RTN","LRVRPOC",103,0)
 L +^LR(0):99
"RTN","LRVRPOC",104,0)
 D E2^LRDPA
"RTN","LRVRPOC",105,0)
 L -^LR(0)
"RTN","LRVRPOC",106,0)
 I $G(LRDFN)<1 S LREND=1,LRDFN=0
"RTN","LRVRPOC",107,0)
 Q LRDFN
"RTN","LRVRPOC",108,0)
 ;
"RTN","LRVRPOC",109,0)
 ;
"RTN","LRVRPOC",110,0)
DPT(DFN) ;
"RTN","LRVRPOC",111,0)
 N LRX,X,Y,DIC
"RTN","LRVRPOC",112,0)
 S (LRERR,LRDFN)=""
"RTN","LRVRPOC",113,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",114,0)
 I 'LRDFN D END^LRDPA Q:'$G(LRDFN)
"RTN","LRVRPOC",115,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","LRDFN"))
"RTN","LRVRPOC",116,0)
 I LRX,LRX'=LRDFN D  Q
"RTN","LRVRPOC",117,0)
 . S LRERR=$$CREATE^LA7LOG(103,1)
"RTN","LRVRPOC",118,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",119,0)
 ;
"RTN","LRVRPOC",120,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","DFN"))
"RTN","LRVRPOC",121,0)
 I LRX,LRX'=DFN D  Q
"RTN","LRVRPOC",122,0)
 . S LRERR=$$CREATE^LA7LOG(102,1)
"RTN","LRVRPOC",123,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",124,0)
 ;
"RTN","LRVRPOC",125,0)
 ; Determine ordering provider
"RTN","LRVRPOC",126,0)
 N LRX,LRY,X,Y
"RTN","LRVRPOC",127,0)
 S LRPRAC=""
"RTN","LRVRPOC",128,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDP"))
"RTN","LRVRPOC",129,0)
 I '$P(LRX,"^",2),$P(LRX,"^")'="" D  Q:LRERR
"RTN","LRVRPOC",130,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",131,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",132,0)
 ; Check if a valid provider
"RTN","LRVRPOC",133,0)
 I $P(LRX,"^",2) D  Q:LRERR
"RTN","LRVRPOC",134,0)
 . I $$PROVIDER^XUSER(+LRX) S LRPRAC=+LRX Q
"RTN","LRVRPOC",135,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",136,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",137,0)
 ;
"RTN","LRVRPOC",138,0)
 ; If no ordering provider in message then check for inpatient provider.
"RTN","LRVRPOC",139,0)
 I 'LRPRAC D
"RTN","LRVRPOC",140,0)
 . I $G(VAIP(7)) S LRPRAC=+VAIP(7) Q
"RTN","LRVRPOC",141,0)
 . I $G(VAIP(18)) S LRPRAC=+VAIP(18) Q
"RTN","LRVRPOC",142,0)
 ;
"RTN","LRVRPOC",143,0)
 ; Use VADPT for inpatients - clinic enrollment for outpatient
"RTN","LRVRPOC",144,0)
 ; Check if ordering location/division from message
"RTN","LRVRPOC",145,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","EOL"))
"RTN","LRVRPOC",146,0)
 S LROLLOC=+X,LROLDIV=$P(X,"^",3)
"RTN","LRVRPOC",147,0)
 ;
"RTN","LRVRPOC",148,0)
 ; Check for inpatient location if no location
"RTN","LRVRPOC",149,0)
 I 'LROLLOC,$G(VAIP(5)) D
"RTN","LRVRPOC",150,0)
 . S LROLLOC=$$GET1^DIQ(42,+VAIP(5)_",",44,"I")
"RTN","LRVRPOC",151,0)
 . I 'LROLDIV S LROLDIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",152,0)
 ;
"RTN","LRVRPOC",153,0)
 ; Check for outpatient appointments if no location
"RTN","LRVRPOC",154,0)
 I 'LROLLOC!('LRPRAC) D VASD^LRVRPOCU
"RTN","LRVRPOC",155,0)
 ;
"RTN","LRVRPOC",156,0)
 ; If no location then log error.
"RTN","LRVRPOC",157,0)
 I 'LROLLOC D  Q
"RTN","LRVRPOC",158,0)
 . S LRERR=$$CREATE^LA7LOG(107,1)
"RTN","LRVRPOC",159,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",160,0)
 ;
"RTN","LRVRPOC",161,0)
 ; If no in/outpatient provider then check for primary care provider
"RTN","LRVRPOC",162,0)
 I 'LRPRAC S LRPRAC=+$$OUTPTPR^SDUTL3(DFN,LRCDT)
"RTN","LRVRPOC",163,0)
 ;
"RTN","LRVRPOC",164,0)
 ; If no provider - none in message, no primary care and no provider on
"RTN","LRVRPOC",165,0)
 ; outpatient encounter then log error.
"RTN","LRVRPOC",166,0)
 I 'LRPRAC D  Q
"RTN","LRVRPOC",167,0)
 . S LRERR=$$CREATE^LA7LOG(110,1)
"RTN","LRVRPOC",168,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",169,0)
 ;
"RTN","LRVRPOC",170,0)
 ; If division in message does not match location's division then reject.
"RTN","LRVRPOC",171,0)
 ; Check if division not a VAMC and parent is a VAMC and division
"RTN","LRVRPOC",172,0)
 ;  matches parent - deal with multiple medical centers within an
"RTN","LRVRPOC",173,0)
 ;  integrated system.
"RTN","LRVRPOC",174,0)
 I LROLDIV D  Q:LRERR
"RTN","LRVRPOC",175,0)
 . N DIV,OK,LRX
"RTN","LRVRPOC",176,0)
 . S DIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",177,0)
 . I LROLDIV=DIV Q
"RTN","LRVRPOC",178,0)
 . S X=$$NNT^XUAF4(DIV),OK=0
"RTN","LRVRPOC",179,0)
 . I $P(X,"^",3)'="VAMC" D  Q:OK
"RTN","LRVRPOC",180,0)
 . . S Y=$P($$PRNT^XUAF4($P(X,"^")),"^"),X=$$NNT^XUAF4(Y)
"RTN","LRVRPOC",181,0)
 . . I $P(X,"^",3)="VAMC",$P(Y,"^")=LROLDIV S OK=1
"RTN","LRVRPOC",182,0)
 . S LRX=$$NNT^XUAF4(LROLDIV)
"RTN","LRVRPOC",183,0)
 . S LRERR=$$CREATE^LA7LOG(112,1)
"RTN","LRVRPOC",184,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",185,0)
 ;
"RTN","LRVRPOC",186,0)
 ; Get location abbreviation
"RTN","LRVRPOC",187,0)
 S LRLLOC=$$GET1^DIQ(44,LROLLOC_",",1,"I")
"RTN","LRVRPOC",188,0)
 I LRLLOC="" S LRLLOC="NO ABRV "_LROLLOC
"RTN","LRVRPOC",189,0)
 Q
"RTN","LRVRPOC",190,0)
 ;
"RTN","LRVRPOC",191,0)
 ;
"RTN","LRVRPOC",192,0)
DATA(LRLL,LAIEN) ;Extract results into LROT(
"RTN","LRVRPOC",193,0)
 ;
"RTN","LRVRPOC",194,0)
 K LR642,LRDATA,LRERR,LRSPECX,LRCNT,LRNOW,LROSPEC,LROT,LRSAMP,LRSB,LRSPEC,LRTRAY,LRCUP,LRSQ,LRTS,LRX,LRY,LRZ
"RTN","LRVRPOC",195,0)
 S LRSQ=LAIEN,LRDATA=1,(LR642,LRCNT,LRERR)=0,(LRDAA,LRSAMP,LRSPEC)=""
"RTN","LRVRPOC",196,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",197,0)
 S LROSPEC=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDSPEC")),"^")
"RTN","LRVRPOC",198,0)
 I LROSPEC="" D  Q
"RTN","LRVRPOC",199,0)
 . S LRERR=$$CREATE^LA7LOG(114,1)
"RTN","LRVRPOC",200,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",201,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDNLT"))
"RTN","LRVRPOC",202,0)
 ;
"RTN","LRVRPOC",203,0)
 ; Change division to ordering division
"RTN","LRVRPOC",204,0)
 S LRDUZ(2)=$S(LROLDIV:LROLDIV,1:LRDIV)
"RTN","LRVRPOC",205,0)
 I LRDUZ(2)'=DUZ(2) D  Q:LRERR
"RTN","LRVRPOC",206,0)
 . N LA7X,LRY
"RTN","LRVRPOC",207,0)
 . S LRY=0
"RTN","LRVRPOC",208,0)
 . D DIVSET^XUSRB2(.LRY,"`"_LRDUZ(2))
"RTN","LRVRPOC",209,0)
 . I LRY Q
"RTN","LRVRPOC",210,0)
 . S LA7X="Unable to set user 'LRLAB,POC' to division "_$$GET1^DIQ(4,LRDUZ(2)_",",.01)
"RTN","LRVRPOC",211,0)
 . S LRERR=$$CREATE^LA7LOG(37,1)
"RTN","LRVRPOC",212,0)
 ;
"RTN","LRVRPOC",213,0)
 ; Ordering based on NLT codes from loadlist profile and OBR segment
"RTN","LRVRPOC",214,0)
 F I=1:1:$L(LRX,"^") S LRY=$P(LRX,"^",I) Q:LRY=""  D  Q:LRERR
"RTN","LRVRPOC",215,0)
 . I '$D(LRORDNLT(LRY,LROSPEC)) S LRERR=$$CREATE^LA7LOG(120,1) Q
"RTN","LRVRPOC",216,0)
 . S LRZ=LRORDNLT(LRY,LROSPEC)
"RTN","LRVRPOC",217,0)
 . S LRTST=$P(LRZ,"^"),LRSPEC=$P(LRZ,"^",2),LRSAMP=$P(LRZ,"^",3)
"RTN","LRVRPOC",218,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",219,0)
 . I 'LRSPEC S LRERR=$$CREATE^LA7LOG(114,1) Q
"RTN","LRVRPOC",220,0)
 . I 'LRSAMP S LRERR=$$CREATE^LA7LOG(115,1) Q
"RTN","LRVRPOC",221,0)
 . S LRCNT=LRCNT+1,LROT(LRSAMP,LRSPEC,LRCNT)=LRTST
"RTN","LRVRPOC",222,0)
 . I $P(LRZ,"^",4) S LR642=$P(LRZ,"^",4)
"RTN","LRVRPOC",223,0)
 . I 'LRDAA,LROLDIV,$D(^LAB(60,LRTST,8,LROLDIV,0)) S LRDAA=$P(^(0),U,2)
"RTN","LRVRPOC",224,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",225,0)
 I LRDAA<1 S LRDAA=$P(^LRO(68.2,LRLL,10,LRPROF,0),"^",2)
"RTN","LRVRPOC",226,0)
 ;
"RTN","LRVRPOC",227,0)
 ; Check for results to process
"RTN","LRVRPOC",228,0)
 I '$O(LROT(0)) D  Q
"RTN","LRVRPOC",229,0)
 . S LRERR=$$CREATE^LA7LOG(113,1)
"RTN","LRVRPOC",230,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",231,0)
 ;
"RTN","LRVRPOC",232,0)
 ; Setup workload suffix
"RTN","LRVRPOC",233,0)
 I LR642<1 S LR642=LRDFWKLD
"RTN","LRVRPOC",234,0)
 D WKLD^LRVRPOCU(LR642)
"RTN","LRVRPOC",235,0)
 ;
"RTN","LRVRPOC",236,0)
 ; Check if results have datanames/tests on this profile.
"RTN","LRVRPOC",237,0)
 F  S LRDATA=$O(^LAH(LRLL,1,LAIEN,LRDATA)) Q:LRDATA<1  D  Q:LRERR
"RTN","LRVRPOC",238,0)
 . I $P($G(^LAH(LRLL,1,LAIEN,LRDATA)),U)="" Q
"RTN","LRVRPOC",239,0)
 . S LRDATA(LRDATA)=^LAH(LRLL,1,LAIEN,LRDATA)
"RTN","LRVRPOC",240,0)
 . I $P(LRDATA(LRDATA),"^",4)<1 S LRERR=$$CREATE^LA7LOG(111,1) Q
"RTN","LRVRPOC",241,0)
 . S LRTST=+$G(LRVTS(LRDATA))
"RTN","LRVRPOC",242,0)
 . I 'LRTST S LRERR=$$CREATE^LA7LOG(116,1) Q
"RTN","LRVRPOC",243,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",244,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",245,0)
 ;
"RTN","LRVRPOC",246,0)
 K LRCOM
"RTN","LRVRPOC",247,0)
 S LRNT=$$NOW^XLFDT,LRORDTIM=""
"RTN","LRVRPOC",248,0)
 ;
"RTN","LRVRPOC",249,0)
 ; Setup the order in LRO(69
"RTN","LRVRPOC",250,0)
 S LRNOLABL="" ; Suppress label printing
"RTN","LRVRPOC",251,0)
 D
"RTN","LRVRPOC",252,0)
 . N LRSPEC,LRSAMP,ZTQUEUED
"RTN","LRVRPOC",253,0)
 . S ZTQUEUED=1
"RTN","LRVRPOC",254,0)
 . D ORDER^LROW2,^LRORDST
"RTN","LRVRPOC",255,0)
 ;
"RTN","LRVRPOC",256,0)
 ; Setup LRO(68
"RTN","LRVRPOC",257,0)
 D
"RTN","LRVRPOC",258,0)
 . N LRSPEC,LRSAMP
"RTN","LRVRPOC",259,0)
 . D ^LRWLST
"RTN","LRVRPOC",260,0)
 I '$G(LRAA) D  Q
"RTN","LRVRPOC",261,0)
 . S LRERR=$$CREATE^LA7LOG(109,1)
"RTN","LRVRPOC",262,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",263,0)
 ;
"RTN","LRVRPOC",264,0)
 S LRMETH="POC DEVICE"
"RTN","LRVRPOC",265,0)
 I LA76248 S LRMETH=$E($$GET1^DIQ(62.48,LA76248_",",.01),1,10)
"RTN","LRVRPOC",266,0)
 I LRMETH="" S LRMETH=$E($P(LRLL(0),U),1,5)_"(POC)"
"RTN","LRVRPOC",267,0)
 ;
"RTN","LRVRPOC",268,0)
 ; Store POC specimen id in file #63 as ordering site UID.
"RTN","LRVRPOC",269,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","FID"))
"RTN","LRVRPOC",270,0)
 I $P(X,"^")'="" D
"RTN","LRVRPOC",271,0)
 . N FDA,LA7DIE
"RTN","LRVRPOC",272,0)
 . S FDA(1,63.04,LRIDT_","_LRDFN_",",.342)=$P(X,"^")
"RTN","LRVRPOC",273,0)
 . I $P(X,"^",2) S FDA(1,63.04,LRIDT_","_LRDFN_",",.32)=$P(X,"^",2)
"RTN","LRVRPOC",274,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LRVRPOC",275,0)
 ;
"RTN","LRVRPOC",276,0)
 ; Store ^LR( data [results]
"RTN","LRVRPOC",277,0)
 S LRVF=0,LRALERT=LROUTINE,LRUSI="POC.5",LRNOW=$$NOW^XLFDT
"RTN","LRVRPOC",278,0)
 M LRSB=LRDATA
"RTN","LRVRPOC",279,0)
 D TEST^LRVR1
"RTN","LRVRPOC",280,0)
 S LRSB=0
"RTN","LRVRPOC",281,0)
 F  S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D  Q:LRERR
"RTN","LRVRPOC",282,0)
 . I '$G(^TMP("LR",$J,"TMP",LRSB,"P")) S LRERR=$$CREATE^LA7LOG(117,1) Q
"RTN","LRVRPOC",283,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVRPOC",284,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVRPOC",285,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVRPOC",286,0)
 . S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRPOC",287,0)
 . D V25^LRVER5
"RTN","LRVRPOC",288,0)
 . S LRX=LRNGS,LRY=$P(LRSB(LRSB),U,5)
"RTN","LRVRPOC",289,0)
 . F I=1:1:$L(LRX,U) I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,U,I)
"RTN","LRVRPOC",290,0)
 . S $P(LRSB(LRSB),U,5)=LRY
"RTN","LRVRPOC",291,0)
 . S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVRPOC",292,0)
 . I $P(LRSB(LRSB),U,9)="" S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVRPOC",293,0)
 . S ^LR(LRDFN,"CH",LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVRPOC",294,0)
 ;
"RTN","LRVRPOC",295,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",296,0)
 ;
"RTN","LRVRPOC",297,0)
 ; Call to set data and comments
"RTN","LRVRPOC",298,0)
 I $O(LRSB(0)) D
"RTN","LRVRPOC",299,0)
 . D LRSBCOM^LRVR4,A3^LRVR3
"RTN","LRVRPOC",300,0)
 . S LRSTORE=LRSTORE+1
"RTN","LRVRPOC",301,0)
 . I $G(LA76248) S LRSTORE(LA76248)=$G(LRSTORE(LA76248))+1
"RTN","LRVRPOC",302,0)
 ;
"RTN","LRVRPOC",303,0)
 ; Send application ack back to POC interface
"RTN","LRVRPOC",304,0)
 D SENDACK^LRVRPOCU
"RTN","LRVRPOC",305,0)
 Q
"RTN","LRVRPOCU")
0^80^B51599484
"RTN","LRVRPOCU",1,0)
LRVRPOCU ;DALOI/JMC - POINT OF CARE UTILITY PROGRAM ;05/11/10  16:38
"RTN","LRVRPOCU",2,0)
 ;;5.2;LAB SERVICE;**290,350**;Sep 27, 1994;Build 230
"RTN","LRVRPOCU",3,0)
 ;
"RTN","LRVRPOCU",4,0)
 ; Reference to DUZ^XUP supported by DBIA #4129
"RTN","LRVRPOCU",5,0)
 ; Reference to DIVSET^XUSRB2 supported by DBIA #4055
"RTN","LRVRPOCU",6,0)
 ;
"RTN","LRVRPOCU",7,0)
 Q
"RTN","LRVRPOCU",8,0)
 ;
"RTN","LRVRPOCU",9,0)
 ;
"RTN","LRVRPOCU",10,0)
INIT ; Initialize user
"RTN","LRVRPOCU",11,0)
 ;
"RTN","LRVRPOCU",12,0)
 N I,LR60,LR61,LR62,LR64,LR0070,LRNLT,LRX,LRY
"RTN","LRVRPOCU",13,0)
 ;
"RTN","LRVRPOCU",14,0)
 ; If rollover has not completed then requeue task 1 hour in future and send alert.
"RTN","LRVRPOCU",15,0)
 I $G(^LAB(69.9,1,"RO"))'=+$H D  Q
"RTN","LRVRPOCU",16,0)
 . S ZTREQ=$$HADD^XLFDT($H,0,1,0,0)
"RTN","LRVRPOCU",17,0)
 . S LAMSG="POC: Lab Rollover has not completed as of "_$$HTE^XLFDT($H,"1M")
"RTN","LRVRPOCU",18,0)
 . S LREND=1
"RTN","LRVRPOCU",19,0)
 ;
"RTN","LRVRPOCU",20,0)
 ;
"RTN","LRVRPOCU",21,0)
 ; Must be POC Load/Work List
"RTN","LRVRPOCU",22,0)
 I $$GET1^DIQ(68.2,LRLL,.03,"I")'=2 D  Q
"RTN","LRVRPOCU",23,0)
 . S LAMSG="POC: Unable to process POC results using non-POC worklist "_$$GET1^DIQ(68.2,LRLL,.01)
"RTN","LRVRPOCU",24,0)
 . S LREND=1
"RTN","LRVRPOCU",25,0)
 ;
"RTN","LRVRPOCU",26,0)
 S (LRCNT,LREND,LRSTORE)=0,(DIQUIET,LRNOECHO,LRQUIET)=1,LAMSG=""
"RTN","LRVRPOCU",27,0)
 K LRDUZ,LRERR,LRIEN,LRORDNLT
"RTN","LRVRPOCU",28,0)
 D KVAR^VADPT
"RTN","LRVRPOCU",29,0)
 S LRX=$$FIND1^DIC(200,"","OX","LRLAB,POC","B","")
"RTN","LRVRPOCU",30,0)
 I LRX<1 D  Q
"RTN","LRVRPOCU",31,0)
 . S LREND=1
"RTN","LRVRPOCU",32,0)
 . S LAMSG="Unable to identify user 'LRLAB,POC' in NEW PERSON file"
"RTN","LRVRPOCU",33,0)
 D DUZ^XUP(LRX)
"RTN","LRVRPOCU",34,0)
 ;
"RTN","LRVRPOCU",35,0)
 D EN^LRPARAM
"RTN","LRVRPOCU",36,0)
 I $G(LREND) S LAMSG="LRPARAM Error for Load/Work List "_$P(LRLL(0),"^") Q
"RTN","LRVRPOCU",37,0)
 S $P(LRPARAM,U,3)="",$P(LRPARAM,U,4)=""
"RTN","LRVRPOCU",38,0)
 S LRLABKY="1^^^1" ;lab verification keys
"RTN","LRVRPOCU",39,0)
 ;
"RTN","LRVRPOCU",40,0)
 ; Get list of test and setup variables
"RTN","LRVRPOCU",41,0)
 S (LRORDR,LRLWC)="P" ; Order type POC
"RTN","LRVRPOCU",42,0)
 S LRTYPE=+$P($G(^LRO(68.2,LRLL,0)),U,3)
"RTN","LRVRPOCU",43,0)
 ;
"RTN","LRVRPOCU",44,0)
 S LRPROF=$O(^LRO(68.2,LRLL,10,0))
"RTN","LRVRPOCU",45,0)
 I 'LRPROF D  Q
"RTN","LRVRPOCU",46,0)
 . S LREND=1
"RTN","LRVRPOCU",47,0)
 . S LAMSG="No Profile for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRPOCU",48,0)
 ;
"RTN","LRVRPOCU",49,0)
 S LRPROF(0)=^LRO(68.2,LRLL,10,LRPROF,0)
"RTN","LRVRPOCU",50,0)
 S (LRDAA,LRAA)=$P(LRPROF(0),U,2)
"RTN","LRVRPOCU",51,0)
 I $S('$G(LRDAA):1,'$D(^LRO(68,LRDAA,0))#2:1,1:0) D  Q
"RTN","LRVRPOCU",52,0)
 . S LREND=1
"RTN","LRVRPOCU",53,0)
 . S LAMSG="No Default accession area for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRPOCU",54,0)
 I $P(^LRO(68,LRAA,0),U,2)'="CH" S LREND=1,LAMSG="No CH accession area for Load/Work List "_$P(LRLL(0),"^") Q
"RTN","LRVRPOCU",55,0)
 ;
"RTN","LRVRPOCU",56,0)
 I $$GET1^DIQ(68,LRDAA_",",.4)="" D  Q
"RTN","LRVRPOCU",57,0)
 . S LREND=1
"RTN","LRVRPOCU",58,0)
 . S LAMSG="No Numeric Identifier for Accession Area "_$$GET1^DIQ(68,LRDAA_",",.01)
"RTN","LRVRPOCU",59,0)
 ;
"RTN","LRVRPOCU",60,0)
 S LRX=$G(^LRO(68,LRAA,0))
"RTN","LRVRPOCU",61,0)
 S LRLD=$S($P(LRX,U,19)'="":$P(LRX,U,19),1:"CP")
"RTN","LRVRPOCU",62,0)
 ;
"RTN","LRVRPOCU",63,0)
 S LRDFWKLD=+$G(^LRO(68.2,LRLL,"SUF"))
"RTN","LRVRPOCU",64,0)
 D WKLD(LRDFWKLD)
"RTN","LRVRPOCU",65,0)
 I LRCDEF="" D  Q
"RTN","LRVRPOCU",66,0)
 . S LREND=1
"RTN","LRVRPOCU",67,0)
 . S LAMSG="No Default Suffix for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRPOCU",68,0)
 ;
"RTN","LRVRPOCU",69,0)
 ; Explode the test list
"RTN","LRVRPOCU",70,0)
 K ^TMP("LR",$J)
"RTN","LRVRPOCU",71,0)
 D EXPLODE^LRGP2
"RTN","LRVRPOCU",72,0)
 I '$O(^TMP("LR",$J,"VTO",0)) D  Q
"RTN","LRVRPOCU",73,0)
 . S LREND=1
"RTN","LRVRPOCU",74,0)
 . S LAMSG="No Test defined for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRPOCU",75,0)
 ;
"RTN","LRVRPOCU",76,0)
 ; Build array of order NLT codes and corresponding file #60 tests.
"RTN","LRVRPOCU",77,0)
 S I=0
"RTN","LRVRPOCU",78,0)
 F  S I=$O(^LRO(68.2,LRLL,10,LRPROF,1,I)) Q:'I  D
"RTN","LRVRPOCU",79,0)
 . S LRY=$G(^LRO(68.2,LRLL,10,LRPROF,1,I,0)),(LR0070,LR62)=""
"RTN","LRVRPOCU",80,0)
 . S LR60=+LRY,LR61=$P(LRY,"^",2),LR64=+$G(^LAB(60,LR60,64))
"RTN","LRVRPOCU",81,0)
 . I LR64 D
"RTN","LRVRPOCU",82,0)
 . . S LRNLT=$P($G(^LAM(LR64,0)),"^",2)
"RTN","LRVRPOCU",83,0)
 . . I LR61 D
"RTN","LRVRPOCU",84,0)
 . . . S LR0070=$$GET1^DIQ(61,LR61_",","LEDI HL7:HL7 ABBR")
"RTN","LRVRPOCU",85,0)
 . . . S LR62=$P(LRY,"^",5)
"RTN","LRVRPOCU",86,0)
 . . . I 'LR62 S LR62=$$GET1^DIQ(61,LR61_",",4.1,"I")
"RTN","LRVRPOCU",87,0)
 . . I LRNLT'="",LR0070'="" S LRORDNLT(LRNLT,LR0070)=LR60_"^"_LR61_"^"_LR62_"^"_$P(LRY,"^",4)
"RTN","LRVRPOCU",88,0)
 ;
"RTN","LRVRPOCU",89,0)
 K LRIEN,LRERR
"RTN","LRVRPOCU",90,0)
 S LRDPF="2^DPT(",(LRERR,VAERR)=0,(LRLBLBP,LREAL,LRASSN,VA200,COMB)=""
"RTN","LRVRPOCU",91,0)
 S LROUTINE=$$GET1^DIQ(69.9,"1,",301,"I","ANS","ERR") ;Routine urgency
"RTN","LRVRPOCU",92,0)
 S:'LROUTINE LROUTINE=9
"RTN","LRVRPOCU",93,0)
 S LRALERT=LROUTINE
"RTN","LRVRPOCU",94,0)
 ;
"RTN","LRVRPOCU",95,0)
 I $$GET1^DIQ(68.2,LRLL_",",.03,"I")'=2 D  Q
"RTN","LRVRPOCU",96,0)
 . S LREND=1
"RTN","LRVRPOCU",97,0)
 . S LAMSG="Load/Work List "_$P(LRLL(0),"^")_" not set to POC type."
"RTN","LRVRPOCU",98,0)
 ;
"RTN","LRVRPOCU",99,0)
 ; Determine division to set user LRLAB,POC.
"RTN","LRVRPOCU",100,0)
 S LRDIV=$O(^LRO(68,LRDAA,3,0))
"RTN","LRVRPOCU",101,0)
 I LRDIV<1 D  Q
"RTN","LRVRPOCU",102,0)
 . S LREND=1
"RTN","LRVRPOCU",103,0)
 . S LAMSG="No associated division for accession area "_$$GET1^DIQ(68,LRDAA_",",.01)
"RTN","LRVRPOCU",104,0)
 I LRDIV'=DUZ(2) D  Q:LREND
"RTN","LRVRPOCU",105,0)
 . S LRY=0
"RTN","LRVRPOCU",106,0)
 . D DIVSET^XUSRB2(.LRY,"`"_LRDIV)
"RTN","LRVRPOCU",107,0)
 . I LRY Q
"RTN","LRVRPOCU",108,0)
 . S LREND=1,LAMSG="Unable to set user 'LRLAB,POC' to division "_$$GET1^DIQ(4,LRDIV_",",.01)
"RTN","LRVRPOCU",109,0)
 ;
"RTN","LRVRPOCU",110,0)
 ; Set CPRS nature of order to 'AUTO'.
"RTN","LRVRPOCU",111,0)
 S LRNATURE=$P($$NEW1^LROR6(9),"^",4,6)
"RTN","LRVRPOCU",112,0)
 ;
"RTN","LRVRPOCU",113,0)
 S LRVBY=2
"RTN","LRVRPOCU",114,0)
 Q
"RTN","LRVRPOCU",115,0)
 ;
"RTN","LRVRPOCU",116,0)
 ;
"RTN","LRVRPOCU",117,0)
WKLD(LRP) ; Setup LRCDEF* variables for workload
"RTN","LRVRPOCU",118,0)
 ; Call with LRP = ien of WKLD suffix in file #64.2
"RTN","LRVRPOCU",119,0)
 S LRCDEF0=$G(^LAB(64.2,LRP,0)),LRCDEF0(1)=$P(LRCDEF0,"^",19)
"RTN","LRVRPOCU",120,0)
 S LRCDEF=$P($P(LRCDEF0,"^",2),".",2)
"RTN","LRVRPOCU",121,0)
 ;
"RTN","LRVRPOCU",122,0)
 Q
"RTN","LRVRPOCU",123,0)
 ;
"RTN","LRVRPOCU",124,0)
 ;
"RTN","LRVRPOCU",125,0)
SPALERT ; Send Processing Alert Message
"RTN","LRVRPOCU",126,0)
 ;
"RTN","LRVRPOCU",127,0)
 N LAMSG,LRTIME,LRX
"RTN","LRVRPOCU",128,0)
 S LRX=0,LRTIME=$$HTE^XLFDT($H,"1M")
"RTN","LRVRPOCU",129,0)
 F  S LRX=$O(LRSTORE(LRX)) Q:'LRX  D
"RTN","LRVRPOCU",130,0)
 . I '$D(^LAHM(62.48,LRX,20,"B",1)) Q  ; New result alerts not defined
"RTN","LRVRPOCU",131,0)
 . S LAMSG=$P(LRSTORE(LRX),"^")_" Patient(s) processed for POC: "_$$GET1^DIQ(62.48,LRX_",",.01)_" on "_LRTIME
"RTN","LRVRPOCU",132,0)
 . D XQA^LA7UXQA(1,LRX,"","",LAMSG,"",1)
"RTN","LRVRPOCU",133,0)
 Q
"RTN","LRVRPOCU",134,0)
 ;
"RTN","LRVRPOCU",135,0)
 ;
"RTN","LRVRPOCU",136,0)
CLEAN ;Clean-up point
"RTN","LRVRPOCU",137,0)
 D KVAR^VADPT
"RTN","LRVRPOCU",138,0)
 K AGE,COMB,CONTROL,DFN,DOB,DTS,H8,I5
"RTN","LRVRPOCU",139,0)
 K LRACC,LRACD,LRAD,LRAN,LRAOD
"RTN","LRVRPOCU",140,0)
 K LRASSN,LRCAPLOC,LRCDT,LRCDEF,LRCDEF0,LRCDEF0X,LRCODEN,LRCOM
"RTN","LRVRPOCU",141,0)
 K LRDATA,LRERR,LRNOCODE,LROLDIV
"RTN","LRVRPOCU",142,0)
 K LRPRAC,LRRB
"RTN","LRVRPOCU",143,0)
 K LRSB,LRSN,LRSQ,LRSSCX,LRSSN,LRSUB,LRSXN,LRST,LRSUB,LRSUM
"RTN","LRVRPOCU",144,0)
 K LRSXN,LRT,LRTN,LRTREA,LRTS,LRTSORU,LRTST,LRTT,LRUID
"RTN","LRVRPOCU",145,0)
 K LRUNQ,LRWRD,PNM,S5,SEGID,SEX,SSN
"RTN","LRVRPOCU",146,0)
 K LRIDT,LRIN,LRIX,LRBLBP,LRM,LRNLT,LRNOW,LRNT,LRNX,LRODT
"RTN","LRVRPOCU",147,0)
 K LROLLOC,LRORD,LRODTIM,LRORU3,LROT,OCXAP
"RTN","LRVRPOCU",148,0)
 K T1,VA,VADMVT,VAINDT,VAL,XP,Z
"RTN","LRVRPOCU",149,0)
 Q
"RTN","LRVRPOCU",150,0)
 ;
"RTN","LRVRPOCU",151,0)
 ;
"RTN","LRVRPOCU",152,0)
VASD ; Check for clinic appointment at same time as specimen
"RTN","LRVRPOCU",153,0)
 ; else for clinic appointment before specimen date/time on same date.
"RTN","LRVRPOCU",154,0)
 ;
"RTN","LRVRPOCU",155,0)
 ; If unable to find an appointment before the specimen date/time then
"RTN","LRVRPOCU",156,0)
 ; look for first appointment after specimen date/time.
"RTN","LRVRPOCU",157,0)
 ;
"RTN","LRVRPOCU",158,0)
 ; If ordering division in message then only check those clinic locations
"RTN","LRVRPOCU",159,0)
 ; that are in the same division.
"RTN","LRVRPOCU",160,0)
 ;
"RTN","LRVRPOCU",161,0)
 ; If collection date/time within 6 hours of start of day
"RTN","LRVRPOCU",162,0)
 ;  then start look back 6 hours previous to collection date/time
"RTN","LRVRPOCU",163,0)
 ;  Example: if 3 am then start 9pm previous day.
"RTN","LRVRPOCU",164,0)
 ;
"RTN","LRVRPOCU",165,0)
 N LRDATE,LRCLIEN,LRCOUNT,LRENC,LREXACT,LRP,LRX,LRY
"RTN","LRVRPOCU",166,0)
 S (LRDATE,LRENC,LREXACT,LRY)=0
"RTN","LRVRPOCU",167,0)
 S LRX=LRCDT#1
"RTN","LRVRPOCU",168,0)
 I LRX>.06 S LRP(1)=(LRCDT\1)_";"_(LRCDT\1)
"RTN","LRVRPOCU",169,0)
 E  S LRP(1)=$$FMADD^XLFDT(LRCDT,0,-6,0,0)_";"_(LRCDT\1)
"RTN","LRVRPOCU",170,0)
 S LRP(3)="R;I;NT"
"RTN","LRVRPOCU",171,0)
 S LRP(4)=DFN
"RTN","LRVRPOCU",172,0)
 S LRP("FLDS")="2;12"
"RTN","LRVRPOCU",173,0)
 S LRP("SORT")="P"
"RTN","LRVRPOCU",174,0)
 S LRCOUNT=$$SDAPI^SDAMA301(.LRP)
"RTN","LRVRPOCU",175,0)
 I LRCOUNT>0 D
"RTN","LRVRPOCU",176,0)
 . I 'LROLLOC D FINDAPPT Q
"RTN","LRVRPOCU",177,0)
 . I LROLLOC,'LRPRAC D CHKAPPT
"RTN","LRVRPOCU",178,0)
 ;
"RTN","LRVRPOCU",179,0)
 I LRCOUNT'=0 K ^TMP($J,"SDAMA301")
"RTN","LRVRPOCU",180,0)
 ;
"RTN","LRVRPOCU",181,0)
 ; If no provider then try provider from outpatient encounter.
"RTN","LRVRPOCU",182,0)
 I 'LRPRAC,LROLLOC,LRENC D OENC(LRENC)
"RTN","LRVRPOCU",183,0)
 Q
"RTN","LRVRPOCU",184,0)
 ;
"RTN","LRVRPOCU",185,0)
 ;
"RTN","LRVRPOCU",186,0)
FINDAPPT ; Find an appointment for the collection date/time
"RTN","LRVRPOCU",187,0)
 F  S LRDATE=$O(^TMP($J,"SDAMA301",DFN,LRDATE)) Q:LRDATE=""  D  Q:LREXACT
"RTN","LRVRPOCU",188,0)
 . S LRX=$G(^TMP($J,"SDAMA301",DFN,LRDATE))
"RTN","LRVRPOCU",189,0)
 . S LRCLIEN=$P($P(LRX,"^",2),";")
"RTN","LRVRPOCU",190,0)
 . I LROLDIV,LROLDIV'=$$GET1^DIQ(44,LRCLIEN_",",3,"I") Q
"RTN","LRVRPOCU",191,0)
 . I LRDATE=LRCDT S LROLLOC=LRCLIEN,LRENC=$P(LRX,"^",12),LREXACT=1 Q
"RTN","LRVRPOCU",192,0)
 . I 'LRY,LRDATE<LRCDT S LRY=LRX,LROLLOC=LRCLIEN,LRENC=$P(LRX,"^",12) Q
"RTN","LRVRPOCU",193,0)
 . I 'LRY,LRDATE>LRCDT S LRY=LRX,LROLLOC=LRCLIEN,LRENC=$P(LRX,"^",12) Q
"RTN","LRVRPOCU",194,0)
 . I LRDATE>LRY,LRDATE<LRCDT S LRY=LRX,LROLLOC=LRCLIEN,LRENC=$P(LRX,"^",12)
"RTN","LRVRPOCU",195,0)
 ;
"RTN","LRVRPOCU",196,0)
 I 'LROLDIV S LROLDIV=$$GET1^DIQ(44,LRCLIEN_",",3,"I")
"RTN","LRVRPOCU",197,0)
 Q
"RTN","LRVRPOCU",198,0)
 ;
"RTN","LRVRPOCU",199,0)
 ;
"RTN","LRVRPOCU",200,0)
CHKAPPT ; Check for an appointment that matches the ordering location
"RTN","LRVRPOCU",201,0)
 ; to find the provider on the encounter when no provider sent.
"RTN","LRVRPOCU",202,0)
 F  S LRDATE=$O(^TMP($J,"SDAMA301",DFN,LRDATE)) Q:LRDATE=""  D  Q:LRENC
"RTN","LRVRPOCU",203,0)
 . S LRX=$G(^TMP($J,"SDAMA301",DFN,LRDATE))
"RTN","LRVRPOCU",204,0)
 . S LRCLIEN=$P($P(LRX,"^",2),";")
"RTN","LRVRPOCU",205,0)
 . I LROLLOC=LRCLIEN S LRENC=$P(LRX,"^",12) Q
"RTN","LRVRPOCU",206,0)
 Q
"RTN","LRVRPOCU",207,0)
 ;
"RTN","LRVRPOCU",208,0)
 ;
"RTN","LRVRPOCU",209,0)
OENC(LRENC) ; Lookup provider on encounter
"RTN","LRVRPOCU",210,0)
 ; Use primary provider if possible otherwise use first provider listed.
"RTN","LRVRPOCU",211,0)
 ;
"RTN","LRVRPOCU",212,0)
 N LRI,LRPRVLST,LRERR
"RTN","LRVRPOCU",213,0)
 D GETPRV^SDOE(LRENC,"LRPRVLST","LRERR")
"RTN","LRVRPOCU",214,0)
 I $G(LRPRVLST)<1 Q
"RTN","LRVRPOCU",215,0)
 S LRI=0
"RTN","LRVRPOCU",216,0)
 F  S LRI=$O(LRPRVLST(LRI)) Q:'LRI  D  Q:LRPRAC
"RTN","LRVRPOCU",217,0)
 . I $P(LRPRVLST(LRI),"^",4)="P" S LRPRAC=+LRPRVLST(LRI) Q
"RTN","LRVRPOCU",218,0)
 I 'LRPRAC S LRI=$O(LRPRVLST(0)),LRPRAC=+LRPRVLST(LRI)
"RTN","LRVRPOCU",219,0)
 Q
"RTN","LRVRPOCU",220,0)
 ;
"RTN","LRVRPOCU",221,0)
 ;
"RTN","LRVRPOCU",222,0)
SENDACK ; Send HL7 ACKnowledgment message
"RTN","LRVRPOCU",223,0)
 ;
"RTN","LRVRPOCU",224,0)
 N LA
"RTN","LRVRPOCU",225,0)
 S LA(62.48)=LA76248,LA(62.49)=LA76249
"RTN","LRVRPOCU",226,0)
 S LA("ACK")=$S(+LRERR:"AE",1:"AA")
"RTN","LRVRPOCU",227,0)
 S LA("MSG")=$S($G(LRUID)'="":LRUID_"^",1:"")
"RTN","LRVRPOCU",228,0)
 S LA("MSG")=LA("MSG")_$P(LRERR,"^",2)
"RTN","LRVRPOCU",229,0)
 D ACK^LA7POC(.LA)
"RTN","LRVRPOCU",230,0)
 Q
"RTN","LRVRPOCU",231,0)
 ;
"RTN","LRVRPOCU",232,0)
 ;
"RTN","LRVRPOCU",233,0)
GETDFN(LAPID) ; Find patient in PATIENT (#2) file based on patient id
"RTN","LRVRPOCU",234,0)
 ; Call with LAPID = patient id to lookup
"RTN","LRVRPOCU",235,0)
 ;
"RTN","LRVRPOCU",236,0)
 ; Returns     DFN = ien of patient in PATIENT (#2) file
"RTN","LRVRPOCU",237,0)
 ;                   0^error encountered
"RTN","LRVRPOCU",238,0)
 ;
"RTN","LRVRPOCU",239,0)
 I DUZ("AG")="V" D
"RTN","LRVRPOCU",240,0)
 . S DFN=$$FIND1^DIC(2,"","X",LAPID,"SSN","","")
"RTN","LRVRPOCU",241,0)
 ;
"RTN","LRVRPOCU",242,0)
 Q DFN
"RTN","LRVRW")
0^135^B16901632
"RTN","LRVRW",1,0)
LRVRW ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION BY WORKLIST ;06/24/10  16:53
"RTN","LRVRW",2,0)
 ;;5.2;LAB SERVICE;**153,221,350**;Sep 27, 1994;Build 230
"RTN","LRVRW",3,0)
 ;
"RTN","LRVRW",4,0)
 ;
"RTN","LRVRW",5,0)
1 D INIT^LRVR
"RTN","LRVRW",6,0)
 N LRBETST,LRBEY
"RTN","LRVRW",7,0)
 I $G(LREND) D QUIT Q
"RTN","LRVRW",8,0)
 S LRTRAY=1,LRCUP=0
"RTN","LRVRW",9,0)
 D NEXT
"RTN","LRVRW",10,0)
 ;
"RTN","LRVRW",11,0)
L10 ;
"RTN","LRVRW",12,0)
 K LRTEST,C5,LRSET,LRLDT,DIC,LRNM,LRNG,LRDEL,T,LRFP,LRAB,LRVER,Y,Z
"RTN","LRVRW",13,0)
 D WLN
"RTN","LRVRW",14,0)
 I $G(LREND) D END Q
"RTN","LRVRW",15,0)
 S X=^LRO(68.2,LRLL,1,LRTRAY,1,LRCUP,0),LRAA=+X,LRAD=$P(X,U,2),LRAN=$P(X,U,3)
"RTN","LRVRW",16,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W "  ACCESSION MISSING" G L10
"RTN","LRVRW",17,0)
 D FIND I '$D(LRPRGSQ) D ISEQ
"RTN","LRVRW",18,0)
 I $D(^LAH(LRLL,1,LRSQ,0)),$P(^(0),U,3),($P(^(0),U,5)'=LRAN) W !!,"Can't use.  Entry has data from accession # ",$P(^(0),U,5),!,"Suggest you Clear instrument/worklist data." D NEXT G L10
"RTN","LRVRW",19,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRORU3=$G(^(.3))
"RTN","LRVRW",20,0)
 S LRODT=$P(X,U,4),LRSN=$P(X,U,5),LRDFN=+X,LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRVRW",21,0)
 I $G(LREND) S LREND=0 W !?5," Error in Patient Lookup",! D NEXT G L10
"RTN","LRVRW",22,0)
 W !,PNM,?40,SSN
"RTN","LRVRW",23,0)
 D VER^LRVR1 G END:$G(LREND) D NEXT
"RTN","LRVRW",24,0)
 G L10
"RTN","LRVRW",25,0)
 ;
"RTN","LRVRW",26,0)
 ;
"RTN","LRVRW",27,0)
YN R X:DTIME Q:X=""!(X["N")!(X["Y")  W !,"Answer 'Y' or 'N': " G YN
"RTN","LRVRW",28,0)
 ;
"RTN","LRVRW",29,0)
 ;
"RTN","LRVRW",30,0)
WLN ;
"RTN","LRVRW",31,0)
 G WLN2:LRTYPE
"RTN","LRVRW",32,0)
 S LRTRAY=1 W !!!,"SEQUENCE #: ",LRCUP,"//" R X3:DTIME S:X3="" X3=LRCUP S:X3[U LREND=1 Q:LREND
"RTN","LRVRW",33,0)
 I X3["?" W !,"ENTER A VALID SEQUENCE NUMBER" G WLN
"RTN","LRVRW",34,0)
 I '$D(^LRO(68.2,LRLL,1,LRTRAY,1,X3,0)) W !,"SEQUENCE NUMBER DOESN'T EXIST" G WLN
"RTN","LRVRW",35,0)
 S LRCUP=X3
"RTN","LRVRW",36,0)
 Q
"RTN","LRVRW",37,0)
 ;
"RTN","LRVRW",38,0)
WLN2 ;
"RTN","LRVRW",39,0)
 W !!!,"TRAY: ",LRTRAY,"//" R X2:DTIME S:X2="" X2=LRTRAY S:X2[U LREND=1 Q:LREND
"RTN","LRVRW",40,0)
 W "  CUP: ",LRCUP,"//" R X3:DTIME S:X3="" X3=LRCUP S:X3[U LREND=1 Q:LREND
"RTN","LRVRW",41,0)
 I X2_X3["?" W !,"ENTER A VALID TRAY, CUP FROM THE LOAD/WORK LIST" G WLN2
"RTN","LRVRW",42,0)
 I '$D(^LRO(68.2,LRLL,1,X2,1,X3,0)) W !,"TRAY, CUP DOESN'T EXIST" G WLN2
"RTN","LRVRW",43,0)
 S LRTRAY=X2,LRCUP=X3
"RTN","LRVRW",44,0)
 Q
"RTN","LRVRW",45,0)
 ;
"RTN","LRVRW",46,0)
 ;
"RTN","LRVRW",47,0)
END ;
"RTN","LRVRW",48,0)
 I $D(LRAN),$D(LRAD) S:'$D(^LRO(68,LRAA,1,LRAD,2)) ^(2)="^^" S ^(2)=$P(^(2),U,1,3)_U_LRAN_U_$P(^(2),U,5,99),LREND=1
"RTN","LRVRW",49,0)
 D QUIT
"RTN","LRVRW",50,0)
 Q
"RTN","LRVRW",51,0)
 ;
"RTN","LRVRW",52,0)
 ;
"RTN","LRVRW",53,0)
NEXT S X2=LRTRAY,X3=LRCUP
"RTN","LRVRW",54,0)
NX2 S X3=$O(^LRO(68.2,LRLL,1,X2,1,X3)) I X3<1 S X3=0,X2=$O(^LRO(68.2,LRLL,1,X2)) G:X2>0 NX2
"RTN","LRVRW",55,0)
 I X3<1&(X2<1) W !,"LAST IN LIST" S (LRTRAY,LRCUP)=U Q
"RTN","LRVRW",56,0)
 S:X2>0 LRTRAY=X2 S:X3>0 LRCUP=X3
"RTN","LRVRW",57,0)
 Q
"RTN","LRVRW",58,0)
 ;
"RTN","LRVRW",59,0)
 ;
"RTN","LRVRW",60,0)
LIST W " the following tests: " S I=0 F  S I=$O(LRTST(I)) Q:I<1  W !,?10,$P(LRTST(I),"^",1)
"RTN","LRVRW",61,0)
 Q
"RTN","LRVRW",62,0)
 ;
"RTN","LRVRW",63,0)
 ;
"RTN","LRVRW",64,0)
STOP ;
"RTN","LRVRW",65,0)
 S LREND=1
"RTN","LRVRW",66,0)
 Q
"RTN","LRVRW",67,0)
 ;
"RTN","LRVRW",68,0)
 ;
"RTN","LRVRW",69,0)
ISEQ ;
"RTN","LRVRW",70,0)
 L +^LAH(LRLL):99
"RTN","LRVRW",71,0)
 S (^LAH(LRLL),LRSQ)=1+$G(^LAH(LRLL))
"RTN","LRVRW",72,0)
 S ^LAH(LRLL,1,LRSQ,0)=LRTRAY_U_LRCUP_U_LRAA_U_LRAD_U_LRAN_"^^MANUAL"
"RTN","LRVRW",73,0)
 D UID^LAGEN(LRLL,LRSQ,$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^"))
"RTN","LRVRW",74,0)
 D UPDT^LAGEN(LRLL,LRSQ)
"RTN","LRVRW",75,0)
 S ^LAH(LRLL,1,"B",(+LRTRAY)_";"_(+LRCUP),LRSQ)=""
"RTN","LRVRW",76,0)
 S ^LAH(LRLL,1,"C",LRAN,LRSQ)=""
"RTN","LRVRW",77,0)
 L -^LAH(LRLL)
"RTN","LRVRW",78,0)
 S ^LRO(68.2,LRLL,1,LRTRAY,1,LRCUP,4,LRSQ)=""
"RTN","LRVRW",79,0)
 Q
"RTN","LRVRW",80,0)
 ;
"RTN","LRVRW",81,0)
 ;
"RTN","LRVRW",82,0)
FIND ;
"RTN","LRVRW",83,0)
 K LRPRGSQ
"RTN","LRVRW",84,0)
 S N=0,LRTRCP=LRTRAY_";"_LRCUP,I=0
"RTN","LRVRW",85,0)
 F  S I=$O(^LAH(LRLL,1,"B",LRTRCP,I)) Q:I=""  S N=N+1,LRSQ=I,LRPRGSQ(I)="" W !,?5,I
"RTN","LRVRW",86,0)
 S I=0
"RTN","LRVRW",87,0)
 F  S I=$O(^LRO(68.2,LRLL,1,LRTRAY,1,LRCUP,4,I)) Q:I=""  I $D(^LAH(LRLL,1,I,0)),'$D(LRPRGSQ(I)) S N=N+1,LRSQ=I,LRPRGSQ(I)=""
"RTN","LRVRW",88,0)
T3 S X=N I N=0 W !,"No data for that tray & cup" Q
"RTN","LRVRW",89,0)
 I N>1 R !,"Choose sequence number: ",X:DTIME Q:'$T  I X["?"!(X'?.N) W !,"Enter a number" G T3
"RTN","LRVRW",90,0)
 I X["^"!(X="") K LRPRGSQ Q
"RTN","LRVRW",91,0)
 S:N'=1 LRSQ=X I '$D(^LAH(LRLL,1,LRSQ,0)) K LRPRGSQ(LRSQ) W !,"No data there"
"RTN","LRVRW",92,0)
 Q
"RTN","LRVRW",93,0)
 ;
"RTN","LRVRW",94,0)
 ;
"RTN","LRVRW",95,0)
QUIT ;
"RTN","LRVRW",96,0)
 I $D(LRCSQ),'$O(^XTMP("LRCAP",LRCSQ,DUZ,0)) K ^XTMP("LRCAP",LRCSQ,DUZ)
"RTN","LRVRW",97,0)
 E  I $D(LRAA) D:$P(LRPARAM,U,14)&($P($G(^LRO(68,+LRAA,0)),U,16)) STD^LRCAPV
"RTN","LRVRW",98,0)
 K LRORU3
"RTN","LRVRW",99,0)
 D ^LRGVK,^LRCAPV2
"RTN","LRVRW",100,0)
 Q
"RTN","LRWLST1")
0^43^B81664062
"RTN","LRWLST1",1,0)
LRWLST1 ;DALOI/STAFF - ACCESSION SETUP ;06/12/12  14:16
"RTN","LRWLST1",2,0)
 ;;5.2;LAB SERVICE;**48,65,121,153,261,286,331,379,415,350**;Sep 27, 1994;Build 230
"RTN","LRWLST1",3,0)
 ;
"RTN","LRWLST1",4,0)
 S LRWLC=0
"RTN","LRWLST1",5,0)
 F  S LRWLC=$O(LRTSTS(LRWLC)) Q:LRWLC<1  S LRAD=DT D SPLIT
"RTN","LRWLST1",6,0)
 ;
"RTN","LRWLST1",7,0)
 ; If LEDI and comments came with order then copy to order in #69
"RTN","LRWLST1",8,0)
 I $G(LRORDRR)="R",$G(LR696),$D(^LRO(69.6,LR696,99)) D
"RTN","LRWLST1",9,0)
 . N LRDIE
"RTN","LRWLST1",10,0)
 . D WP^DIE(69.01,LRSN_","_LRODT_",",16,"A","^LRO(69.6,LR696,99)","LRDIE(16)")
"RTN","LRWLST1",11,0)
 ;
"RTN","LRWLST1",12,0)
 K DIC,DLAYGO,DR,DA,DIE,LRIXX
"RTN","LRWLST1",13,0)
 Q:$G(LRORDR)="P"
"RTN","LRWLST1",14,0)
 K LRNM,LRTSTS
"RTN","LRWLST1",15,0)
 K ^TMP("LR",$J,"TMP")
"RTN","LRWLST1",16,0)
 Q
"RTN","LRWLST1",17,0)
 ;
"RTN","LRWLST1",18,0)
SPLIT ;
"RTN","LRWLST1",19,0)
 N LRAA,LRX
"RTN","LRWLST1",20,0)
 ; Setup regular accessions (LRUNQ=0)
"RTN","LRWLST1",21,0)
 S LRUNQ=0,LREND=0
"RTN","LRWLST1",22,0)
 I $D(LRTSTS(LRWLC,0)) D
"RTN","LRWLST1",23,0)
 . S LRSS=$P(^LRO(68,LRWLC,0),"^",2)
"RTN","LRWLST1",24,0)
 . D GTWLN
"RTN","LRWLST1",25,0)
 . I LREND Q
"RTN","LRWLST1",26,0)
 . S LRAA=0
"RTN","LRWLST1",27,0)
 . F  S LRAA=$O(LRTSTS(LRWLC,0,LRAA)) Q:LRAA<1  D
"RTN","LRWLST1",28,0)
 . . S LRSS=LRTSTS(LRWLC,0,LRAA)
"RTN","LRWLST1",29,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRUID)
"RTN","LRWLST1",30,0)
 . D SICA^LRWLST11
"RTN","LRWLST1",31,0)
 ;
"RTN","LRWLST1",32,0)
 ; Setup accessions requiring 'unique' accession numbers (LRUNQ=1)
"RTN","LRWLST1",33,0)
 S LRUNQ=1,LRAA=0
"RTN","LRWLST1",34,0)
 F  S LRAA=$O(LRTSTS(LRWLC,1,LRAA)) Q:LRAA<1  D
"RTN","LRWLST1",35,0)
 . S LRSS=LRTSTS(LRWLC,1,LRAA)
"RTN","LRWLST1",36,0)
 . F  D GTWLN Q:LREND  D   Q:$O(LRTSTS(LRWLC,1,LRAA,0))<1
"RTN","LRWLST1",37,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRUID),SICA^LRWLST11
"RTN","LRWLST1",38,0)
 Q
"RTN","LRWLST1",39,0)
 ;
"RTN","LRWLST1",40,0)
 ;
"RTN","LRWLST1",41,0)
STWLN ; Set accession number
"RTN","LRWLST1",42,0)
 ;
"RTN","LRWLST1",43,0)
 D GETLOCK(LRAA,LRAD)
"RTN","LRWLST1",44,0)
 D CHECK68(LRAA,LRAD)
"RTN","LRWLST1",45,0)
 ;
"RTN","LRWLST1",46,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRWLST1",47,0)
 ;
"RTN","LRWLST1",48,0)
 ; Handle 'in common' area that was not setup in GTWLN call.
"RTN","LRWLST1",49,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN)) D SETAN(LRAA,LRAD,LRAN)
"RTN","LRWLST1",50,0)
 ;
"RTN","LRWLST1",51,0)
 S LREND=0,LRLBLBP=1-$P(LRSS,U,2),LRSS=$P(LRSS,U)
"RTN","LRWLST1",52,0)
 S LRACC=$P(^LRO(68,LRAA,0),U,11)_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","LRWLST1",53,0)
 S LRPRAC=""
"RTN","LRWLST1",54,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRPRAC=$P(^(0),U,6) S:$D(LRNT) ^(3)=LRNT
"RTN","LRWLST1",55,0)
 ;
"RTN","LRWLST1",56,0)
 ; Location type
"RTN","LRWLST1",57,0)
 S LRCAPLOC=$P($G(^SC(+LROLLOC,0)),U,3)
"RTN","LRWLST1",58,0)
 I LRCAPLOC="" S LRCAPLOC="Z"
"RTN","LRWLST1",59,0)
 ;
"RTN","LRWLST1",60,0)
 ; File information in file #68 for this accession
"RTN","LRWLST1",61,0)
 N LRFDA,LR6802,LRDIE
"RTN","LRWLST1",62,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST1",63,0)
 S LRFDA(1,68.02,LR6802,.01)=LRDFN
"RTN","LRWLST1",64,0)
 S LRFDA(1,68.02,LR6802,1)=LRDPF
"RTN","LRWLST1",65,0)
 S LRFDA(1,68.02,LR6802,2)=LRAD
"RTN","LRWLST1",66,0)
 S LRFDA(1,68.02,LR6802,3)=LRODT
"RTN","LRWLST1",67,0)
 S LRFDA(1,68.02,LR6802,4)=LRSN
"RTN","LRWLST1",68,0)
 S LRFDA(1,68.02,LR6802,6)=LRLLOC
"RTN","LRWLST1",69,0)
 S X=$G(^LRO(69,LRODT,1,LRSN,.1)) I X'="" S LRFDA(1,68.02,LR6802,14)=X
"RTN","LRWLST1",70,0)
 ;
"RTN","LRWLST1",71,0)
 ; No ordering provider/location on controls
"RTN","LRWLST1",72,0)
 I LRDPF'=62.3 D
"RTN","LRWLST1",73,0)
 . S LRFDA(1,68.02,LR6802,6.5)=LRPRAC
"RTN","LRWLST1",74,0)
 . S LRFDA(1,68.02,LR6802,94)=LROLLOC
"RTN","LRWLST1",75,0)
 ;
"RTN","LRWLST1",76,0)
 ; Only store treating specialty on file #2 patients
"RTN","LRWLST1",77,0)
 ; If no treating specialty then use specialty from file #44 location
"RTN","LRWLST1",78,0)
 I LRDPF=2 D
"RTN","LRWLST1",79,0)
 . S LRTREA=$P($G(^DPT(DFN,.103)),U)
"RTN","LRWLST1",80,0)
 . I 'LRTREA S LRTREA=$P($G(^SC(+LROLLOC,0)),U,20)
"RTN","LRWLST1",81,0)
 . I LRTREA S LRFDA(1,68.02,LR6802,6.6)=LRTREA
"RTN","LRWLST1",82,0)
 ;
"RTN","LRWLST1",83,0)
 S LRFDA(1,68.02,LR6802,6.7)=DUZ
"RTN","LRWLST1",84,0)
 S LRFDA(1,68.02,LR6802,15)=LRACC
"RTN","LRWLST1",85,0)
 S LRFDA(1,68.02,LR6802,26)=DUZ(2)
"RTN","LRWLST1",86,0)
 S LRFDA(1,68.02,LR6802,92)=LRCAPLOC
"RTN","LRWLST1",87,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRWLST1",88,0)
 I $D(LRDIE(1)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","LRWLST1",89,0)
 ;
"RTN","LRWLST1",90,0)
 ; If specimen defined then set nodes, force to ien=1 since many lab
"RTN","LRWLST1",91,0)
 ; routines expect the specimen to be record number 1.
"RTN","LRWLST1",92,0)
 I $G(LRSPEC),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)) D
"RTN","LRWLST1",93,0)
 . N LRFDAIEN,LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",94,0)
 . S LRFDAIEN(1)=1
"RTN","LRWLST1",95,0)
 . S LRFDA(2,68.05,"+1,"_LR6802,.01)=LRSPEC
"RTN","LRWLST1",96,0)
 . S LRFDA(2,68.05,"+1,"_LR6802,1)=$P(LRSAMP,";",1)
"RTN","LRWLST1",97,0)
 . ;
"RTN","LRWLST1",98,0)
 . ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","LRWLST1",99,0)
 . S LRLOCKOK=0
"RTN","LRWLST1",100,0)
 . F LRLOOPCT=1:1:10 D  Q:LRLOCKOK
"RTN","LRWLST1",101,0)
 . . D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRDIE(2)")
"RTN","LRWLST1",102,0)
 . . I $G(LRDIE(2,"DIERR")),LRDIE(2,"DIERR",1)<120  H 5 K:LRLOOPCT<10 LRDIE(2)
"RTN","LRWLST1",103,0)
 . . E  S LRLOCKOK=1
"RTN","LRWLST1",104,0)
 . ;
"RTN","LRWLST1",105,0)
 . I $D(LRDIE(2)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","LRWLST1",106,0)
 ;
"RTN","LRWLST1",107,0)
 ; If no specimen defined then use specimen values from file #69.
"RTN","LRWLST1",108,0)
 I $G(LRSPEC)="",$D(^LRO(69,LRODT,1,LRSN,4,0)) D
"RTN","LRWLST1",109,0)
 . N LRFDA,LRFDAIEN,LRI,LRX
"RTN","LRWLST1",110,0)
 . S LRI=0
"RTN","LRWLST1",111,0)
 . F  S LRI=$O(^LRO(69,LRODT,1,LRSN,4,LRI)) Q:'LRI  D
"RTN","LRWLST1",112,0)
 . . I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,5,LRI,0)) Q
"RTN","LRWLST1",113,0)
 . . S LRFDAIEN(1)=LRI,LRX=$G(^LRO(69,LRODT,1,LRSN,4,LRI,0))
"RTN","LRWLST1",114,0)
 . . S LRFDA(LRI,68.05,"+1,"_LR6802,.01)=$P(LRX,"^")
"RTN","LRWLST1",115,0)
 . . D UPDATE^DIE("","LRFDA(LRI)","LRFDAIEN","LRDIE(LRI)")
"RTN","LRWLST1",116,0)
 . . I $D(LRDIE(LRI)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","LRWLST1",117,0)
 ;
"RTN","LRWLST1",118,0)
 ; Create UID.
"RTN","LRWLST1",119,0)
 S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","LRWLST1",120,0)
 I '$D(LRPHSET),('$G(LRQUIET)) W !!,"ACCESSION:  ",LRACC,"  <",LRUID,">"
"RTN","LRWLST1",121,0)
 D UPD696
"RTN","LRWLST1",122,0)
 ;
"RTN","LRWLST1",123,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRWLST1",124,0)
 Q
"RTN","LRWLST1",125,0)
 ;
"RTN","LRWLST1",126,0)
 ;
"RTN","LRWLST1",127,0)
UPD696 ; Update file #69.6 if LEDI referral patient and no existing entry
"RTN","LRWLST1",128,0)
 K LR696IEN
"RTN","LRWLST1",129,0)
 I $G(LRORDRR)="R" D
"RTN","LRWLST1",130,0)
 . S LR696IEN=0
"RTN","LRWLST1",131,0)
 . I $G(LRRSITE("SMID"))'="",$G(LRSD("RUID"))'="" S LR696IEN=+$O(^LRO(69.6,"AD",LRRSITE("SMID"),LRSD("RUID"),0))
"RTN","LRWLST1",132,0)
 . I LR696IEN Q
"RTN","LRWLST1",133,0)
 . I '$G(LRRSTAT(0)) S LRRSTAT(0)=$$FIND1^DIC(64.061,"","OMX","Specimen in process","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LRWLST1",134,0)
 . D PSET^LRPEND(SSN(2),+LRRSITE("RSITE"),LRSD("RUID"),+LRSD("RPSITE"),LRSPEC,LRSAMP,LRRSTAT(0),LRODT,$P(LRCDT,U),LRRSITE("SDT"),LRNT,.LROT)
"RTN","LRWLST1",135,0)
 Q
"RTN","LRWLST1",136,0)
 ;
"RTN","LRWLST1",137,0)
 ;
"RTN","LRWLST1",138,0)
ST2 ; Find next available node in LR global
"RTN","LRWLST1",139,0)
 ;
"RTN","LRWLST1",140,0)
 N LRFDA,LRFDAIEN,LRDIE,LRX,LRXIDT
"RTN","LRWLST1",141,0)
 ; Autopsy ("AU") is not a multiple - do not attempt to set in ^LR global
"RTN","LRWLST1",142,0)
 I LRSS="AU" S LRIDT=0 Q
"RTN","LRWLST1",143,0)
 ;
"RTN","LRWLST1",144,0)
 S LRIDT=0
"RTN","LRWLST1",145,0)
 F  D  Q:LRIDT
"RTN","LRWLST1",146,0)
 . S LRXIDT=9999999-LRCDT
"RTN","LRWLST1",147,0)
 . L +^LR(LRDFN,LRSS,LRXIDT,0):5
"RTN","LRWLST1",148,0)
 . I '$T S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1) Q
"RTN","LRWLST1",149,0)
 . I '$D(^LR(LRDFN,LRSS,LRXIDT,0)) S LRIDT=LRXIDT Q
"RTN","LRWLST1",150,0)
 . L -^LR(LRDFN,LRSS,LRXIDT,0)
"RTN","LRWLST1",151,0)
 . S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1)
"RTN","LRWLST1",152,0)
 ;
"RTN","LRWLST1",153,0)
 ; Create entry in appropriate subscript in LAB DATA file (#63).
"RTN","LRWLST1",154,0)
 S LRX=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="BB":63.01,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:0)
"RTN","LRWLST1",155,0)
 S LRFDAIEN(1)=LRIDT
"RTN","LRWLST1",156,0)
 S LRFDA(63,LRX,"+1,"_LRDFN_",",.01)=LRCDT
"RTN","LRWLST1",157,0)
 S LRFDA(63,LRX,"+1,"_LRDFN_",",.06)=LRACC
"RTN","LRWLST1",158,0)
 I LRSS'="CH" D
"RTN","LRWLST1",159,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.1)=LRNT
"RTN","LRWLST1",160,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.08)=LRLLOC
"RTN","LRWLST1",161,0)
 I LRSS="CH" D
"RTN","LRWLST1",162,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.12)=3
"RTN","LRWLST1",163,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.11)=LRLLOC
"RTN","LRWLST1",164,0)
 I LRSS="MI" S LRFDA(63,LRX,"+1,"_LRDFN_",",38)=3
"RTN","LRWLST1",165,0)
 I "SPCYEM"[LRSS N LRABV S LRABV=$P(LRACC," ")
"RTN","LRWLST1",166,0)
 I LRX D UPDATE^DIE("","LRFDA(63)","LRFDAIEN","LRDIE(63)")
"RTN","LRWLST1",167,0)
 I $D(LRDIE(63)) D MAILALRT^LRWLST12("ST2~LRWLST1")
"RTN","LRWLST1",168,0)
 ;
"RTN","LRWLST1",169,0)
 ; Uncomment following code when new field .9 in"MI" subscript is released
"RTN","LRWLST1",170,0)
 ;I LRSS="MI" D
"RTN","LRWLST1",171,0)
 ;. N LRN,ERR,IENS
"RTN","LRWLST1",172,0)
 ;. S IENS=LRIDT_","_LRDFN_",",LRN=0
"RTN","LRWLST1",173,0)
 ;. F  S LRN=$O(^LRO(69,LRODT,1,LRSN,2,LRN)) Q:LRN<1  D
"RTN","LRWLST1",174,0)
 ;. . I '$D(^LRO(69,LRODT,1,LRSN,2,LRN,1,0)) Q
"RTN","LRWLST1",175,0)
 ;. . D WP^DIE(63.05,IENS,.9,"A","^LRO(69,"_LRODT_",1,"_LRSN_",2,"_LRN_",1)","ERR")
"RTN","LRWLST1",176,0)
 ;
"RTN","LRWLST1",177,0)
 L -^LR(LRDFN,LRSS,LRIDT,0)
"RTN","LRWLST1",178,0)
 ;
"RTN","LRWLST1",179,0)
 Q
"RTN","LRWLST1",180,0)
 ;
"RTN","LRWLST1",181,0)
 ;
"RTN","LRWLST1",182,0)
GTWLN ;
"RTN","LRWLST1",183,0)
 N LRABV,X
"RTN","LRWLST1",184,0)
 ;
"RTN","LRWLST1",185,0)
 ; Execute accession transform for this area.
"RTN","LRWLST1",186,0)
 S LRAN=0
"RTN","LRWLST1",187,0)
 S X=$G(^LRO(68,LRWLC,.1)) X:X'="" X
"RTN","LRWLST1",188,0)
 ;
"RTN","LRWLST1",189,0)
 D GETLOCK(LRWLC,LRAD)
"RTN","LRWLST1",190,0)
 D CHECK68(LRWLC,LRAD)
"RTN","LRWLST1",191,0)
 ;
"RTN","LRWLST1",192,0)
 ; note LRSS can at this point can contain two pieces in the variable.
"RTN","LRWLST1",193,0)
 S:'LRAN LRAN=1+$P($G(^LRO(68,LRWLC,1,LRAD,1,0)),U,3)
"RTN","LRWLST1",194,0)
 I $P(LRSS,"^")?1(1"CH",1"MI",1"BB") F  Q:('$D(^LRO(68,LRWLC,1,LRAD,1,LRAN)))&($$ORIGAAOK)  S LRAN=LRAN+1
"RTN","LRWLST1",195,0)
 ;
"RTN","LRWLST1",196,0)
 ; Check for AP Accessions
"RTN","LRWLST1",197,0)
 S LRABV=$P($G(^LRO(68,LRWLC,0)),U,11)
"RTN","LRWLST1",198,0)
 I $P(LRSS,"^")?1(1"SP",1"CY",1"EM",1"AU") F  Q:'$D(^LRO(68,LRWLC,1,LRAD,1,LRAN))&('$D(^LR("A"_$P(LRSS,"^")_"A",$E(LRAD,1,3),LRABV,LRAN)))&($$ORIGAAOK)  S LRAN=LRAN+1
"RTN","LRWLST1",199,0)
 ;
"RTN","LRWLST1",200,0)
 I '$D(LRPHSET),$D(LRNCWL)!$P(^LAB(69.9,1,0),U,8) D ASK Q:LREND
"RTN","LRWLST1",201,0)
 ;
"RTN","LRWLST1",202,0)
 I '$D(^LRO(68,LRWLC,1,LRAD,1,LRAN)) D SETAN(LRWLC,LRAD,LRAN)
"RTN","LRWLST1",203,0)
 L -^LRO(68,LRWLC,1,LRAD,1,0)
"RTN","LRWLST1",204,0)
 Q
"RTN","LRWLST1",205,0)
 ;
"RTN","LRWLST1",206,0)
 ;
"RTN","LRWLST1",207,0)
ORIGAAOK() ; function to determine if the accession number under consideration
"RTN","LRWLST1",208,0)
 ; is already in use in the originating accession area
"RTN","LRWLST1",209,0)
 ;
"RTN","LRWLST1",210,0)
 ; returns 0 -- accession number under consideration already in use
"RTN","LRWLST1",211,0)
 ;         1 -- accession number under consideration is ok to use
"RTN","LRWLST1",212,0)
 ;
"RTN","LRWLST1",213,0)
 N LRAAX,LRAAOK,LRABVX,LRAA0,LRSSX
"RTN","LRWLST1",214,0)
 S LRAAX=0,LRAAOK=1
"RTN","LRWLST1",215,0)
 ;
"RTN","LRWLST1",216,0)
 F  S LRAAX=$O(LRTSTS(LRWLC,LRUNQ,LRAAX)) Q:LRAAX<1  Q:'LRAAOK  D
"RTN","LRWLST1",217,0)
 . I $D(^LRO(68,LRAAX,1,LRAD,1,LRAN)) S LRAAOK=0 Q
"RTN","LRWLST1",218,0)
 . S LRAA0=^LRO(68,LRAAX,0),LRSSX=$P(LRAA0,"^",2)
"RTN","LRWLST1",219,0)
 . I "CYEMSP"[LRSSX D
"RTN","LRWLST1",220,0)
 . . S LRABVX=$P(LRAAX,"^",11)
"RTN","LRWLST1",221,0)
 . . I $D(^LR("A"_LRSSX_"A",$E(LRAD,1,3),LRABVX,LRAN)) S LRAAOK=0
"RTN","LRWLST1",222,0)
 ;
"RTN","LRWLST1",223,0)
 Q LRAAOK
"RTN","LRWLST1",224,0)
 ;
"RTN","LRWLST1",225,0)
 ;
"RTN","LRWLST1",226,0)
ASK ;
"RTN","LRWLST1",227,0)
 ; Don't ask if tasked or a "silent" call
"RTN","LRWLST1",228,0)
 I $D(ZTQUEUED)!($G(LRQUIET)) Q
"RTN","LRWLST1",229,0)
 ;
"RTN","LRWLST1",230,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LROK,LRANX,X,Y
"RTN","LRWLST1",231,0)
 S LROK=0
"RTN","LRWLST1",232,0)
 F  D  Q:LREND!(LROK)
"RTN","LRWLST1",233,0)
 . K DIR
"RTN","LRWLST1",234,0)
 . S DIR(0)="NO^1:"_$S($P(LRLABKY,U,2):999999,1:LRAN)_":0"
"RTN","LRWLST1",235,0)
 . S DIR("A")="Force to",DIR("B")=LRAN
"RTN","LRWLST1",236,0)
 . D ^DIR
"RTN","LRWLST1",237,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRWLST1",238,0)
 . S LRANX=Y
"RTN","LRWLST1",239,0)
 . I LRANX<+$P($G(^LRO(68,LRWLC,1,LRAD,1,0)),U,3) D
"RTN","LRWLST1",240,0)
 . . W !,"This accession number may be already assigned either in this "
"RTN","LRWLST1",241,0)
 . . W !,"area or a common accession area."
"RTN","LRWLST1",242,0)
 . I $D(^LRO(68,LRWLC,1,LRAD,1,LRANX,0)) D  Q:'LROK
"RTN","LRWLST1",243,0)
 . . N LRDFNX S LRDFNX=LRDFN
"RTN","LRWLST1",244,0)
 . . N DFN,LRDFN,LRDPF,PNM,SSN
"RTN","LRWLST1",245,0)
 . . S LRDFN=+^LRO(68,LRWLC,1,LRAD,1,LRANX,0),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^LR(LRDFN,0),U,3)
"RTN","LRWLST1",246,0)
 . . D PT^LRX
"RTN","LRWLST1",247,0)
 . . W !,"THIS NUMBER BELONGS TO ",!,PNM,"     SSN: ",SSN
"RTN","LRWLST1",248,0)
 . . D INF^LRX
"RTN","LRWLST1",249,0)
 . . I LRDFN=LRDFNX S LROK=1
"RTN","LRWLST1",250,0)
 . K DIR
"RTN","LRWLST1",251,0)
 . S DIR(0)="YO",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LRWLST1",252,0)
 . D ^DIR
"RTN","LRWLST1",253,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRWLST1",254,0)
 . I Y=1 S LRAN=LRANX,LROK=1
"RTN","LRWLST1",255,0)
 ;
"RTN","LRWLST1",256,0)
 ; Unlock if aborting.
"RTN","LRWLST1",257,0)
 I LREND L -^LRO(68,LRWLC,1,LRAD,1,0)
"RTN","LRWLST1",258,0)
 ;
"RTN","LRWLST1",259,0)
 Q
"RTN","LRWLST1",260,0)
 ;
"RTN","LRWLST1",261,0)
 ;
"RTN","LRWLST1",262,0)
CHECK68(LRAA,LRAD) ; Check for/set header node of ^LRO(68) 68.01 subfile.
"RTN","LRWLST1",263,0)
 ;
"RTN","LRWLST1",264,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",265,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",266,0)
 ;
"RTN","LRWLST1",267,0)
 ; Set accession date in file #68 for this accession.
"RTN","LRWLST1",268,0)
 ; Check for existence of accession number multiple but not accession date multiple,
"RTN","LRWLST1",269,0)
 ; FileMan DBS call fails when accession number multiple exists but accession date multiple does not.
"RTN","LRWLST1",270,0)
 ; If this condition found then set missing node directly and quit.
"RTN","LRWLST1",271,0)
 ;
"RTN","LRWLST1",272,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) D
"RTN","LRWLST1",273,0)
 . N LRFDA,LRFDAIEN,LRDIE,X
"RTN","LRWLST1",274,0)
 . S X=$Q(^LRO(68,LRAA,1,LRAD,0))
"RTN","LRWLST1",275,0)
 . I X'="",$QS(X,4)=LRAD S $P(^LRO(68,LRAA,1,LRAD,0),"^")=LRAD Q
"RTN","LRWLST1",276,0)
 . S (LRFDAIEN(1),LRFDA(1,68.01,"+1,"_LRAA_",",.01))=LRAD
"RTN","LRWLST1",277,0)
 . D UPDATE^DIE("","LRFDA(1)","LRFDAIEN","LRDIE(1)")
"RTN","LRWLST1",278,0)
 . I $D(LRDIE(1)) D MAILALRT^LRWLST12("CHECK~LRWLST1")
"RTN","LRWLST1",279,0)
 ;
"RTN","LRWLST1",280,0)
 Q
"RTN","LRWLST1",281,0)
 ;
"RTN","LRWLST1",282,0)
 ;
"RTN","LRWLST1",283,0)
GETLOCK(LRAA,LRAD) ; Obtain lock on zeroth node of this accession date
"RTN","LRWLST1",284,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",285,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",286,0)
 ;
"RTN","LRWLST1",287,0)
 F  L +^LRO(68,LRAA,1,LRAD,1,0):10 Q:$T  D
"RTN","LRWLST1",288,0)
 . I $D(ZTQUEUED)!($G(LRQUIET)) Q
"RTN","LRWLST1",289,0)
 . W !!?5,"Accession area ",$P(^LRO(68,LRAA,0),"^")," is locked by another user.",!,$C(7)
"RTN","LRWLST1",290,0)
 Q
"RTN","LRWLST1",291,0)
 ;
"RTN","LRWLST1",292,0)
 ;
"RTN","LRWLST1",293,0)
SETAN(LRAA,LRAD,LRAN) ; Create stub entry in file #68 for this accession.
"RTN","LRWLST1",294,0)
 ;
"RTN","LRWLST1",295,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","LRWLST1",296,0)
 ;           LRAD = accession date in fileman format
"RTN","LRWLST1",297,0)
 ;           LRAN = accession number
"RTN","LRWLST1",298,0)
 ;
"RTN","LRWLST1",299,0)
 N LR6802,LRFDA,LRFDAIEN,LRDIE,LRLOCKOK,LRLOOPCT
"RTN","LRWLST1",300,0)
 S LR6802=LRAD_","_LRAA_","
"RTN","LRWLST1",301,0)
 S LRFDAIEN(1)=LRAN
"RTN","LRWLST1",302,0)
 S LRFDA(2,68.02,"+1,"_LR6802,.01)=LRDFN
"RTN","LRWLST1",303,0)
 ;
"RTN","LRWLST1",304,0)
 ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","LRWLST1",305,0)
 S LRLOCKOK=0
"RTN","LRWLST1",306,0)
 F LRLOOPCT=1:1:10 D  Q:LRLOCKOK
"RTN","LRWLST1",307,0)
 . D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRDIE(2)")
"RTN","LRWLST1",308,0)
 . I $G(LRDIE(2,"DIERR")),LRDIE(2,"DIERR",1)<120  H 5 K:LRLOOPCT<10 LRDIE(2)
"RTN","LRWLST1",309,0)
 . E  S LRLOCKOK=1
"RTN","LRWLST1",310,0)
 ;
"RTN","LRWLST1",311,0)
 I $D(LRDIE(2)) D MAILALRT^LRWLST12("SET~LRWLST1")
"RTN","LRWLST1",312,0)
 Q
"RTN","LRWLST11")
0^44^B73046359
"RTN","LRWLST11",1,0)
LRWLST11 ;DALOI/STAFF - ACCESSION SETUP ;Mar 27, 2008
"RTN","LRWLST11",2,0)
 ;;5.2;LAB SERVICE;**121,128,153,202,286,331,375,350**;Sep 27, 1994;Build 230
"RTN","LRWLST11",3,0)
 ;
"RTN","LRWLST11",4,0)
ST21 ;
"RTN","LRWLST11",5,0)
 S LRTS="",LRIX=0
"RTN","LRWLST11",6,0)
 F  S LRIX=$O(LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)) Q:LRIX<1  D SET Q:LRUNQ
"RTN","LRWLST11",7,0)
 ;
"RTN","LRWLST11",8,0)
 S LRNT=$$NOW^XLFDT
"RTN","LRWLST11",9,0)
 D SCDT,SLRSS
"RTN","LRWLST11",10,0)
 ;
"RTN","LRWLST11",11,0)
COMMON ; Setup 'in common' accession if not already setup unless it will be 
"RTN","LRWLST11",12,0)
 ; when tests are accessioned to the 'in common' area.
"RTN","LRWLST11",13,0)
 I +LRWLC,+LRWLC'=+LRAA,$G(^LRO(68,LRWLC,1,LRAD,1,LRAN,0))=$G(LRDFN) D
"RTN","LRWLST11",14,0)
 . I 'LRUNQ,$D(LRTSTS(LRWLC,LRUNQ,LRWLC)) Q
"RTN","LRWLST11",15,0)
 . Q:$G(^LRO(68,LRWLC,1,LRAD,1,LRAN,.1))
"RTN","LRWLST11",16,0)
 . N LRAA,LRACC,LRCDTX,LRCOMMON,LREND,LRIDT,LRNODE3,LRORDRR,LRORU3,LRQUIET,LRTJ,LRUID,X,Y
"RTN","LRWLST11",17,0)
 . S (LRQUIET,LRCOMMON)=1,LRAA=+LRWLC,LRORDRR=""
"RTN","LRWLST11",18,0)
 . S X=LRSS,LRCDTX=LRCDT
"RTN","LRWLST11",19,0)
 . N LRCDT,LRSS
"RTN","LRWLST11",20,0)
 . S LRCDT=LRCDTX,LRSS=X_U_(1+$G(LRLBLBP))
"RTN","LRWLST11",21,0)
 . D STWLN^LRWLST1 Q:$G(LREND)
"RTN","LRWLST11",22,0)
 . D ST2^LRWLST1 Q:$G(LREND)
"RTN","LRWLST11",23,0)
 . D SCDT,SLRSS
"RTN","LRWLST11",24,0)
 ;
"RTN","LRWLST11",25,0)
 Q
"RTN","LRWLST11",26,0)
 ;
"RTN","LRWLST11",27,0)
 ;
"RTN","LRWLST11",28,0)
SCDT ; Set collection, inverse and lab arrival date/times on accession
"RTN","LRWLST11",29,0)
 N FDA,LR6802,LRDIE
"RTN","LRWLST11",30,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST11",31,0)
 S FDA(4,68.02,LR6802,9)=LRCDT
"RTN","LRWLST11",32,0)
 S FDA(4,68.02,LR6802,10)=LREAL
"RTN","LRWLST11",33,0)
 I '$D(LRPHSET) S FDA(4,68.02,LR6802,12)=LRNT
"RTN","LRWLST11",34,0)
 S FDA(4,68.02,LR6802,13.5)=LRIDT
"RTN","LRWLST11",35,0)
 D FILE^DIE("","FDA(4)","LRDIE(4)")
"RTN","LRWLST11",36,0)
 I $D(LRDIE(4)) D MAILALRT^LRWLST12("SCDT~LRWLST11")
"RTN","LRWLST11",37,0)
 Q
"RTN","LRWLST11",38,0)
 ;
"RTN","LRWLST11",39,0)
 ;
"RTN","LRWLST11",40,0)
SLRSS ;
"RTN","LRWLST11",41,0)
 ;
"RTN","LRWLST11",42,0)
 N FDA,FDAIEN,LRDIE,LRX
"RTN","LRWLST11",43,0)
 S LRX=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,LRSS="BB":63.01,1:0)
"RTN","LRWLST11",44,0)
 S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)) ; change for AP
"RTN","LRWLST11",45,0)
 S H8=$S($D(LRSPEC):LRSPEC,1:X)_U_$S("CYEMSPAU"[LRSS:LRACC,1:LRACC)_U_$S(LRSS="MI":LRPRAC,1:"")_U_$S(LRSS="MI":LRLLOC,1:"")_"^^"_$S(LRSS="CH":LRPRAC,1:LRNT)_"^"_$S(LRSS="MI":$P(LRSAMP,";",1),LRSS="CH":LRLLOC,1:"")
"RTN","LRWLST11",46,0)
 ;
"RTN","LRWLST11",47,0)
 I $S(LRSS="CH":1,LRSS="MI":1,1:0) D
"RTN","LRWLST11",48,0)
 . I $G(LRORDRR)="R",+$G(LRRSITE("RSITE")) S $P(H8,U,9)=+LRRSITE("RSITE")_";DIC(4,"
"RTN","LRWLST11",49,0)
 . I $G(LROLLOC),$G(LRORDRR)'="R" S $P(H8,U,9)=LROLLOC_";SC("
"RTN","LRWLST11",50,0)
 . S $P(H8,U,10)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRWLST11",51,0)
 ;
"RTN","LRWLST11",52,0)
 D SLRSS^LRWLST1A
"RTN","LRWLST11",53,0)
 Q:"SPEMCY"[LRSS
"RTN","LRWLST11",54,0)
 ;S ^LR(LRDFN,LRSS,LRIDT,0)=LRCDT_U_LREAL_"^^^"_H8
"RTN","LRWLST11",55,0)
 ;I $G(LRORU3)'="" S ^LR(LRDFN,LRSS,LRIDT,"ORU")=LRORU3
"RTN","LRWLST11",56,0)
 ;
"RTN","LRWLST11",57,0)
ST3 ;
"RTN","LRWLST11",58,0)
 I LRSS="MI" D ST4
"RTN","LRWLST11",59,0)
 D LRCCOM
"RTN","LRWLST11",60,0)
 ;
"RTN","LRWLST11",61,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRPR=1
"RTN","LRWLST11",62,0)
 S LRRB=0
"RTN","LRWLST11",63,0)
 I LRDPF=2 S LRRB=$$GET1^DIQ(2,DFN_",",.101),LRRB=$S(LRRB'="":LRRB,1:0)
"RTN","LRWLST11",64,0)
 ;
"RTN","LRWLST11",65,0)
 Q:$G(LRORDR)="P"
"RTN","LRWLST11",66,0)
 ;
"RTN","LRWLST11",67,0)
 I '$D(LRTJ) D  Q
"RTN","LRWLST11",68,0)
 . I $G(LRORDRR)="R",LRSS="CH",$G(LRORU3)'="",$P(LRORU3,"^")'=$P(LRORU3,"^",4) Q  ; Don't print, use label from sending facility.
"RTN","LRWLST11",69,0)
 . I LRLBLBP,'$G(LRCOMMON) S LRLBL(LRAA,LRAN)=LRSN_U_LRAD_U_LRODT_U_LRRB_U_LRLLOC_U_LRACC_U_$S($D(LRORD):LRORD,1:"")
"RTN","LRWLST11",70,0)
 ;
"RTN","LRWLST11",71,0)
 S I=0
"RTN","LRWLST11",72,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  S LRTS=^(I,0) D Z
"RTN","LRWLST11",73,0)
 ;
"RTN","LRWLST11",74,0)
 Q
"RTN","LRWLST11",75,0)
 ;
"RTN","LRWLST11",76,0)
 ;
"RTN","LRWLST11",77,0)
ST4 ;
"RTN","LRWLST11",78,0)
 ;S $P(^LR(LRDFN,LRSS,LRIDT,0),U,10)=$S($D(LRNT):LRNT,1:""),$P(^(0),U,8)=LRLLOC
"RTN","LRWLST11",79,0)
 ; Used to be LRSPCDSC,63.05,.9 (Word Processing field) replaces 63.05,.99
"RTN","LRWLST11",80,0)
 S:$D(LRCCOM) ^LR(LRDFN,LRSS,LRIDT,99)=LRCCOM
"RTN","LRWLST11",81,0)
 I '$D(LRPHSET) D
"RTN","LRWLST11",82,0)
 . N DA,DIE,DR
"RTN","LRWLST11",83,0)
 . S DIE="^LR("_LRDFN_",""MI"",",DA=LRIDT,DA(1)=LRDFN
"RTN","LRWLST11",84,0)
 . ;S DR=.9
"RTN","LRWLST11",85,0)
 . ;I '$G(LRQUIET) W:DR'=.9 !!,"Order comment:"
"RTN","LRWLST11",86,0)
 . S DR=.99_$S($L($G(LRGCOM)):"///"_LRGCOM,$L($G(LRCCOM)):"//"_LRCCOM,1:"")
"RTN","LRWLST11",87,0)
 . I '$G(LRQUIET) W:DR'=.99 !!,"Order comment:"
"RTN","LRWLST11",88,0)
 . D ^DIE
"RTN","LRWLST11",89,0)
 I '$G(LRQUIET),'$D(LRPHSET),'$D(LRGCOM) W !,"Description OK? Y//" D % G ST4:%["N"
"RTN","LRWLST11",90,0)
 K DR,DIC,DIE
"RTN","LRWLST11",91,0)
 Q
"RTN","LRWLST11",92,0)
 ;
"RTN","LRWLST11",93,0)
 ;
"RTN","LRWLST11",94,0)
ST5 S I("SUBSC")=$S(I("EDIT")[11.5:26,I("EDIT")[15:27,I("EDIT")[19:28,I("EDIT")[23:29,I("EDIT")[34:30,1:-1) Q:I("SUBSC")=-1
"RTN","LRWLST11",95,0)
 S I("PNTR")=$S(I("EDIT")[11.5:"^63.061A^",I("EDIT")[15:"^63.361A^",I("EDIT")[19:"^63.111A^",I("EDIT")[23:"^63.181A^",1:"^63.432A^")
"RTN","LRWLST11",96,0)
 S I("N")=1+$S($D(^LR(LRDFN,"MI",LRIDT,I("SUBSC"),0)):$P(^(0),U,4),1:0),^(0)=I("PNTR")_I("N")_U_I("N"),^(I("N"),0)=I("TEST")
"RTN","LRWLST11",97,0)
 Q
"RTN","LRWLST11",98,0)
 ;
"RTN","LRWLST11",99,0)
 ;
"RTN","LRWLST11",100,0)
SET ;
"RTN","LRWLST11",101,0)
 S LRTS=LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)
"RTN","LRWLST11",102,0)
 S LRIN=$P(LRTS,U,3),LRORIFN=$P(LRTS,U,4),LRTSORU=+$P(LRTS,U,6),LRTS=$P(LRTS,U,1,2),LRBACK=$P(LRTS,U,5)
"RTN","LRWLST11",103,0)
 ;
"RTN","LRWLST11",104,0)
 I '$G(LRQUIET),'$D(LRPHSET) D
"RTN","LRWLST11",105,0)
 . W !,$P(^LAB(60,+LRTS,0),U)
"RTN","LRWLST11",106,0)
 . I $D(LRSPEC),LRSPEC D
"RTN","LRWLST11",107,0)
 . . S I=$S($D(^LAB(61,+LRSPEC,0)):$P(^(0),U),1:""),J=$S($D(^LAB(62,+LRSAMP,0)):$P(^(0),U),1:"")
"RTN","LRWLST11",108,0)
 . . W ?30,J W:I'=J "  ",I
"RTN","LRWLST11",109,0)
 ;
"RTN","LRWLST11",110,0)
 I '$G(LRQUIET),'$D(LRPHSET),+LRTS,$O(^LAB(60,+LRTS,7,0))>0 D
"RTN","LRWLST11",111,0)
 . N S
"RTN","LRWLST11",112,0)
 . S DIC="^LAB(60,",DA=+LRTS,DR=7
"RTN","LRWLST11",113,0)
 . D EN^DIQ H 3
"RTN","LRWLST11",114,0)
 I '$G(LRQUIET),'$D(LRPHSET),+LRTS D
"RTN","LRWLST11",115,0)
 . N S
"RTN","LRWLST11",116,0)
 . S DIC="^LAB(60,"_(+LRTS)_",3,"
"RTN","LRWLST11",117,0)
 . S DA=+$O(^LAB(60,+LRTS,3,"B",+LRSAMP,0)),DR=2
"RTN","LRWLST11",118,0)
 . I DA>0,$O(^LAB(60,+LRTS,3,DA,2,0))>0 D EN^DIQ H 3
"RTN","LRWLST11",119,0)
 ;
"RTN","LRWLST11",120,0)
 D ORUT
"RTN","LRWLST11",121,0)
 ;
"RTN","LRWLST11",122,0)
 ; Check if LEDI specimen being accessioned then
"RTN","LRWLST11",123,0)
 ;  -  update test status of order in file #69.6
"RTN","LRWLST11",124,0)
 ;  -  if LEDI AP specimen copy data accompanying order from file #69.6 to file #63
"RTN","LRWLST11",125,0)
 ;  -  update remote ordering provider from file #69.6 to ordered test multiple (#.35)
"RTN","LRWLST11",126,0)
 I $G(LRORDRR)="R",$G(LR696)>0 D
"RTN","LRWLST11",127,0)
 . D ORUT2^LRWLST12
"RTN","LRWLST11",128,0)
 . D PROVCPY^LRWLST12
"RTN","LRWLST11",129,0)
 . I "SPCYEM"[LRSS D APMOVE^LRWLST12
"RTN","LRWLST11",130,0)
 ;
"RTN","LRWLST11",131,0)
 D CAP^LRWLST12
"RTN","LRWLST11",132,0)
 K LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)
"RTN","LRWLST11",133,0)
 ;
"RTN","LRWLST11",134,0)
 S ^LRO(69,LRODT,1,LRSN,2,LRIN,0)=LRTS_U_LRAD_U_LRAA_U_LRAN_"^^"_LRORIFN_"^^IP^L^^^^"_LRBACK
"RTN","LRWLST11",135,0)
 S ^LRO(69,LRODT,1,LRSN,2,"B",+LRTS,LRIN)=""
"RTN","LRWLST11",136,0)
 ;
"RTN","LRWLST11",137,0)
 ; When file 63 is enhanced to accept comments per test comments should
"RTN","LRWLST11",138,0)
 ; be put there instead of field 99.
"RTN","LRWLST11",139,0)
 I $O(^LRO(69,LRODT,1,LRSN,2,LRIN,1,0)) D
"RTN","LRWLST11",140,0)
 . I LRSS'="CH"!($D(^LR(LRDFN,LRSS,LRIDT,0))[0) Q
"RTN","LRWLST11",141,0)
 . S X=$S($D(^LR(LRDFN,LRSS,LRIDT,1,0)):$P(^(0),"^",3),1:0),I=0
"RTN","LRWLST11",142,0)
 . F  S I=$O(^LRO(69,LRODT,1,LRSN,2,LRIN,1,I)) Q:I<1  S II=^(I,0) S X=X+1,^LR(LRDFN,LRSS,LRIDT,1,X,0)=II
"RTN","LRWLST11",143,0)
 . S:X ^LR(LRDFN,LRSS,LRIDT,1,0)="^63.041^"_X_U_X
"RTN","LRWLST11",144,0)
 ;
"RTN","LRWLST11",145,0)
RUID I $G(LRORU3)'="" D
"RTN","LRWLST11",146,0)
 . N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LRWLST11",147,0)
 . S DLAYGO=69
"RTN","LRWLST11",148,0)
 . S DA=LRIN,DA(1)=LRSN,DA(2)=LRODT,DIC="^LRO(69,"_DA(2)_",1,"_DA(1)_",2,"
"RTN","LRWLST11",149,0)
 . S DIE=DIC,DR="13////"_$P(LRORU3,U)_";14////"_$P(LRORU3,U,2)_";15////"_$P(LRORU3,U,3)_";16////"_$P(LRORU3,U,4)_";17////"_$P(LRORU3,U,5)
"RTN","LRWLST11",150,0)
 . D ^DIE
"RTN","LRWLST11",151,0)
 Q
"RTN","LRWLST11",152,0)
 ;
"RTN","LRWLST11",153,0)
 ;
"RTN","LRWLST11",154,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRWLST11",155,0)
 ;
"RTN","LRWLST11",156,0)
 ;
"RTN","LRWLST11",157,0)
LRCCOM ; Copy comments from file #69 to file #63 comment multiple
"RTN","LRWLST11",158,0)
 N I,LRCCOM,LRTN,X
"RTN","LRWLST11",159,0)
 S (I,LRTN,LRCCOM)=0
"RTN","LRWLST11",160,0)
 ;
"RTN","LRWLST11",161,0)
 I LRSS'="CH"!($D(^LR(LRDFN,LRSS,LRIDT,0))[0) Q
"RTN","LRWLST11",162,0)
 ;
"RTN","LRWLST11",163,0)
 ; Copy (#16) WARD COMMENTS ON SPECIMEN to file #63 comment multiple
"RTN","LRWLST11",164,0)
 F  S I=$O(^LRO(69,LRODT,1,LRSN,6,I)) Q:I<1  I $D(^(I,0)) S X=^(0),LRCCOM=LRCCOM+1,^LR(LRDFN,LRSS,LRIDT,1,LRCCOM,0)=X
"RTN","LRWLST11",165,0)
 ;
"RTN","LRWLST11",166,0)
 ; Copy expanded panels (#99) TEST COMMENTS to file #63 comment multiple
"RTN","LRWLST11",167,0)
 F  S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,LRTN)) Q:'LRTN  I $D(^(LRTN,0)) S X=^(0) I $P(X,"^",8),'$P(X,"^",3),$O(^(1,0)) D
"RTN","LRWLST11",168,0)
 . S I=0
"RTN","LRWLST11",169,0)
 . F  S I=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,1,I)) Q:'I  I $D(^(I,0)) S X=^(0),LRCCOM=LRCCOM+1,^LR(LRDFN,LRSS,LRIDT,1,LRCCOM,0)=X
"RTN","LRWLST11",170,0)
 ;
"RTN","LRWLST11",171,0)
 S:LRCCOM ^LR(LRDFN,LRSS,LRIDT,1,0)="^63.041^"_LRCCOM_U_LRCCOM
"RTN","LRWLST11",172,0)
 ;
"RTN","LRWLST11",173,0)
 Q
"RTN","LRWLST11",174,0)
 ;
"RTN","LRWLST11",175,0)
 ;
"RTN","LRWLST11",176,0)
Z ; Update collection list (#69.1)
"RTN","LRWLST11",177,0)
 L +^LRO(69.1,LRTE):999
"RTN","LRWLST11",178,0)
 S LRZ3=$S($D(^LRO(69.1,LRTE,1,0)):$P(^(0),U,3),1:0)
"RTN","LRWLST11",179,0)
 ;
"RTN","LRWLST11",180,0)
Z1 S LRZ3=LRZ3+1 G:$D(^LRO(69.1,LRTE,1,LRZ3)) Z1
"RTN","LRWLST11",181,0)
 S LRZO="^LRO(69.1,"_LRTE_",1,",LRZ1="69.11P",LRZB=+LRTS,LRIFN=LRZ3
"RTN","LRWLST11",182,0)
 D Z^LRWU
"RTN","LRWLST11",183,0)
 S ^LRO(69.1,LRTE,1,LRIFN,0)=+LRTS_"^"_LRLLOC_"^"_LRRB_"^"_LRDFN_"^"_LRSN_"^"_LRTJ_"^"_LRAD_"^"_LRAA_"^"_LRAN_"^"_+LROLLOC
"RTN","LRWLST11",184,0)
 S ^LRO(69.1,"LRPH",LRTE,LRLLOC,LRRB,LRDFN,LRSN)=LRTJ_"^"_LRAD_"^"_LRIFN,^(LRSN,LRAA,LRAN,+LRTS)=+LRTS
"RTN","LRWLST11",185,0)
 L -^LRO(69.1,LRTE)
"RTN","LRWLST11",186,0)
 Q
"RTN","LRWLST11",187,0)
 ;
"RTN","LRWLST11",188,0)
 ;
"RTN","LRWLST11",189,0)
ORUT ;Set ORUT/ordered test node in file 63
"RTN","LRWLST11",190,0)
 ;LRSS=subscript-required
"RTN","LRWLST11",191,0)
 ;LRIDT=inverse date-required
"RTN","LRWLST11",192,0)
 ;LRDFN=IEN file 63-required
"RTN","LRWLST11",193,0)
 ;LRTSORU=ordered test (file #60 IEN)-required
"RTN","LRWLST11",194,0)
 ;LRURG=ordered urgency
"RTN","LRWLST11",195,0)
 ;LRORIFN=CPRS order #
"RTN","LRWLST11",196,0)
 ;LRORNUM=Lab order # LR_XXXX where XXXX is a julian date
"RTN","LRWLST11",197,0)
 ;LRORTYP=ordered type
"RTN","LRWLST11",198,0)
 ;LRPROVL=ordering provider local
"RTN","LRWLST11",199,0)
 ;LRSPEC=specimen topography
"RTN","LRWLST11",200,0)
 ;LRSAMP=Collection sample
"RTN","LRWLST11",201,0)
 ;
"RTN","LRWLST11",202,0)
 N LRFDA,LRFILE,LRIEN,LRIENS,LRJUL,LRMSG,LRNLT,LRORNUM,LRORTYP
"RTN","LRWLST11",203,0)
 N LRPROVL,LRX,LRY,DIERR
"RTN","LRWLST11",204,0)
 S LRFILE=$S(LRSS="CH":63.07,LRSS="MI":63.5,LRSS="SP":63.53,LRSS="CY":63.51,LRSS="EM":63.52,1:"")
"RTN","LRWLST11",205,0)
 Q:'LRFILE!('$G(LRTSORU))
"RTN","LRWLST11",206,0)
 ;
"RTN","LRWLST11",207,0)
 S LRNLT=$$NLT^LRVER1(+LRTSORU) Q:+LRNLT<1
"RTN","LRWLST11",208,0)
 S LRORTYP=""
"RTN","LRWLST11",209,0)
 I $P($G(LRORDTYP),"^",2) S LRORTYP=$P(LRORDTYP,"^",2)
"RTN","LRWLST11",210,0)
 I LRORTYP="" D
"RTN","LRWLST11",211,0)
 . I $G(LRORDR)'="" S LRX=$S($G(LRORDR)="WC":"O",1:"L")
"RTN","LRWLST11",212,0)
 . I $G(LRORDR)="" S LRX=$S($G(LRORDRR)="R":"O",$G(LRLWC)="WC":"O",1:"L")
"RTN","LRWLST11",213,0)
 . S LRORTYP=$$FIND1^DIC(64.061,"","OX",LRX,"D","I $P(^(0),U,5)=""0065""")
"RTN","LRWLST11",214,0)
 S LRPROVL=$S($G(LRPRAC)?1.N:LRPRAC,1:"")
"RTN","LRWLST11",215,0)
 I $G(LRORD) D
"RTN","LRWLST11",216,0)
 . S LRX=$$FMDIFF^XLFDT(DT,$E(DT,1,3)_"0101",1)
"RTN","LRWLST11",217,0)
 . S LRX=LRX+1,LRJUL=$E("000",1,3-$L(LRX))_LRX
"RTN","LRWLST11",218,0)
 . S LRORNUM="LR-"_LRORD_"-"_$E(DT,1,3)_LRJUL
"RTN","LRWLST11",219,0)
 ;
"RTN","LRWLST11",220,0)
 S LRIEN="?+1"_","_LRIDT_","_LRDFN_","
"RTN","LRWLST11",221,0)
 S LRFDA(5,LRFILE,LRIEN,.01)=LRNLT
"RTN","LRWLST11",222,0)
 I $G(LRURG) S LRFDA(5,LRFILE,LRIEN,2)=LRURG
"RTN","LRWLST11",223,0)
 I $G(LRORIFN) S LRFDA(5,LRFILE,LRIEN,3)=LRORIFN
"RTN","LRWLST11",224,0)
 I $G(LRORNUM)'="" S LRFDA(5,LRFILE,LRIEN,4)=LRORNUM
"RTN","LRWLST11",225,0)
 I LRORTYP'="" S LRFDA(5,LRFILE,LRIEN,5)=LRORTYP
"RTN","LRWLST11",226,0)
 I LRPROVL'="" S LRFDA(5,LRFILE,LRIEN,6)=LRPROVL
"RTN","LRWLST11",227,0)
 I $G(LRSPEC) S LRFDA(5,LRFILE,LRIEN,8)=LRSPEC
"RTN","LRWLST11",228,0)
 I $G(LRSAMP) S LRFDA(5,LRFILE,LRIEN,9)=LRSAMP
"RTN","LRWLST11",229,0)
 I +LRTSORU S LRFDA(5,LRFILE,LRIEN,13)=+LRTSORU
"RTN","LRWLST11",230,0)
 I $P($G(LRORDTYP),"^",3) D
"RTN","LRWLST11",231,0)
 . S LRFDA(5,LRFILE,LRIEN,14)=$P(LRORDTYP,"^",3)
"RTN","LRWLST11",232,0)
 . S LRFDA(5,LRFILE,LRIEN,15)=$P(LRORDTYP,"^",4)
"RTN","LRWLST11",233,0)
 D UPDATE^DIE("","LRFDA(5)","LRIENS","LRMSG")
"RTN","LRWLST11",234,0)
 D CLEAN^DILF
"RTN","LRWLST11",235,0)
 ;
"RTN","LRWLST11",236,0)
 Q
"RTN","LRWLST11",237,0)
 ;
"RTN","LRWLST11",238,0)
 ;
"RTN","LRWLST11",239,0)
SICA ; Check accessions 'in common' and setup reference to this accession
"RTN","LRWLST11",240,0)
 N FDA,LR6802,LRDIE,LRAA
"RTN","LRWLST11",241,0)
 S LRX=$P($G(^LRO(68,LRWLC,1,LRAD,1,LRAN,.2)),"^"),LRAA=0
"RTN","LRWLST11",242,0)
 F  S LRAA=$O(LRTSTS(LRWLC,LRUNQ,LRAA)) Q:LRAA<1  I LRWLC'=LRAA D
"RTN","LRWLST11",243,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) Q
"RTN","LRWLST11",244,0)
 . K FDA,LRDIE
"RTN","LRWLST11",245,0)
 . S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST11",246,0)
 . S FDA(5,68.02,LR6802,15.1)=LRX
"RTN","LRWLST11",247,0)
 . D FILE^DIE("","FDA(5)","LRDIE(5)")
"RTN","LRWLST11",248,0)
 . I $D(LRDIE(5)) D MAILALRT^LRWLST12("SICA~LRWLST11")
"RTN","LRWLST11",249,0)
 Q
"RTN","LRWLST12")
0^102^B55671661
"RTN","LRWLST12",1,0)
LRWLST12 ;DALOI/STAFF - ACCESSION SETUP ;Jan 5, 2009
"RTN","LRWLST12",2,0)
 ;;5.2;LAB SERVICE;**153,201,350**;Sep 27, 1994;Build 230
"RTN","LRWLST12",3,0)
 ;
"RTN","LRWLST12",4,0)
 ;
"RTN","LRWLST12",5,0)
CAP ; from LRWLST11,LRTSTJAM
"RTN","LRWLST12",6,0)
 N LRCNT
"RTN","LRWLST12",7,0)
 Q:'($D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2)
"RTN","LRWLST12",8,0)
 S:'($D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))#2) ^(0)="^68.04PA" S $P(^(0),U,3)=+LRTS,$P(^(0),U,4)=1+$P(^(0),U,4)
"RTN","LRWLST12",9,0)
 S:'($D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRTS,0))#2) ^(0)=LRTS,$P(^(0),U,9)=+$G(LRTSORU)
"RTN","LRWLST12",10,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",+LRTS,+LRTS)) ^(+LRTS)=""
"RTN","LRWLST12",11,0)
 ;
"RTN","LRWLST12",12,0)
 S:'$G(LRSAMP) LRSAMP=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)),U,2)
"RTN","LRWLST12",13,0)
 ;
"RTN","LRWLST12",14,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,+LRAA,0)),U,16) D
"RTN","LRWLST12",15,0)
 . S LRCI=0
"RTN","LRWLST12",16,0)
 . F  S LRCI=$O(^LAB(60,+LRTS,9.1,LRCI)) Q:LRCI<1  I $D(^(LRCI,0)) S X=^(0),LRCNT=$S(+$P(X,U,3):+$P(X,U,3),1:1) D CAP1
"RTN","LRWLST12",17,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D
"RTN","LRWLST12",18,0)
 . S LRCI=0
"RTN","LRWLST12",19,0)
 . F  S LRCI=$O(^LAB(62,+LRSAMP,9,LRAA,1,+LRTS,1,LRCI)) Q:LRCI<1  I $D(^(LRCI,0)) S X=^(0),LRCNT=$S(+$P(X,U,3):+$P(X,U,3),1:1) D CAP1
"RTN","LRWLST12",20,0)
 ;
"RTN","LRWLST12",21,0)
 K LRCI,LRCWT,X,C3,C4,C0,LRCI,LRCNT
"RTN","LRWLST12",22,0)
 Q
"RTN","LRWLST12",23,0)
 ;
"RTN","LRWLST12",24,0)
 ;
"RTN","LRWLST12",25,0)
CAP1 ;
"RTN","LRWLST12",26,0)
 S LRT=+LRTS D STUFI^LRCAPV1
"RTN","LRWLST12",27,0)
 K LRT
"RTN","LRWLST12",28,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRTS,1,0)) S ^(0)="^68.14P^^"
"RTN","LRWLST12",29,0)
 S C0=^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRTS,1,0),C4=$P(C0,U,4)+1,$P(C0,U,3)=LRCI,$P(C0,U,4)=C4,^(0)=C0
"RTN","LRWLST12",30,0)
 ;
"RTN","LRWLST12",31,0)
C3 ;
"RTN","LRWLST12",32,0)
 I '($D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRTS,1,LRCI,0))#2) D
"RTN","LRWLST12",33,0)
 . S:'$D(LRNT) LRNT=$$HTFM^XLFDT($H)
"RTN","LRWLST12",34,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRTS,1,LRCI,0)=LRCI_U_LRCNT_"^^^^"_LRNT_"^.5"_U_DUZ(2)_U_LRAA_U_LRAA_U
"RTN","LRWLST12",35,0)
 Q
"RTN","LRWLST12",36,0)
 ;
"RTN","LRWLST12",37,0)
 ;
"RTN","LRWLST12",38,0)
VMSG ;
"RTN","LRWLST12",39,0)
 N LA7V
"RTN","LRWLST12",40,0)
 S LA7V=""
"RTN","LRWLST12",41,0)
 I $G(LR696IEN),$D(^LRO(69.6,LR696IEN,0))#2 D
"RTN","LRWLST12",42,0)
 . S $P(^LRO(69.6,LR696IEN,0),U,10)=160,LRCNT=0
"RTN","LRWLST12",43,0)
 . F  S LRCNT=$O(LROT(LRSAMP,LRSPEC,LRCNT)) Q:LRCNT<1  I $D(LROT(LRSAMP,LRSPEC,LRCNT,"B",+LRTS))#2 D
"RTN","LRWLST12",44,0)
 . . S LRTSN=LROT(LRSAMP,LRSPEC,LRCNT,"B",+LRTS)
"RTN","LRWLST12",45,0)
 . . I $D(^LRO(69.6,LR696IEN,2,+LRTSN,0)) S $P(^(0),U,7)=LRNT,$P(^(0),U,9)=LRUID,$P(^(0),U,6)=160 D
"RTN","LRWLST12",46,0)
 . . . D SET^LA7VMSG($P(LRORU3,U,4),$P(LRORU3,U,2),$P(LRORU3,U,5),$P(LRORU3,U,3),$P(LRTSN,U,3),$P(LRTSN,U,2),LRIDT,LRSS,LRDFN,LRODT,,"ORR")
"RTN","LRWLST12",47,0)
 ;. D ORR^LA7VMSG ; Update status to in process - need to task this from another place (JMC/27NOV06)
"RTN","LRWLST12",48,0)
 ;
"RTN","LRWLST12",49,0)
 Q
"RTN","LRWLST12",50,0)
 ;
"RTN","LRWLST12",51,0)
 ;
"RTN","LRWLST12",52,0)
ORUT2 ; Update ordered test in file #69.6
"RTN","LRWLST12",53,0)
 ; Called by LRWLST11
"RTN","LRWLST12",54,0)
 N FDA,LRDIE,LRI,LRNLT,LROK,LRSTATUS,LRUPSTAT,LRTST,LRX
"RTN","LRWLST12",55,0)
 S LRNLT=$$NLT^LRVER1(+LRTSORU) Q:+LRNLT<1
"RTN","LRWLST12",56,0)
 S LRTST=$P($G(^LAM($O(^LAM("E",LRNLT,0)),0)),U) Q:LRTST=""!('$G(LR696IEN))
"RTN","LRWLST12",57,0)
 ;Q:'($D(^LRO(69.6,LR696IEN,0))#2)!($D(^LRO(69.6,LR696IEN,2,"C",LRNLT)))
"RTN","LRWLST12",58,0)
 I '$D(^LRO(69.6,LR696IEN,0)) Q
"RTN","LRWLST12",59,0)
 ;
"RTN","LRWLST12",60,0)
 S LRUPSTAT=$$FIND1^DIC(64.061,"","OX","Specimen in process","B","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LRWLST12",61,0)
 ; Update existing entry with current status
"RTN","LRWLST12",62,0)
 I $D(^LRO(69.6,LR696IEN,2,"C",LRNLT)) D
"RTN","LRWLST12",63,0)
 . S LRI=$O(^LRO(69.6,LR696IEN,2,"C",LRNLT,0))
"RTN","LRWLST12",64,0)
 . S FDA(1,69.64,LRI_","_LR696IEN_",",5)=LRUPSTAT
"RTN","LRWLST12",65,0)
 . S FDA(1,69.64,LRI_","_LR696IEN_",",8)=LRNT
"RTN","LRWLST12",66,0)
 . S FDA(1,69.64,LRI_","_LR696IEN_",",9)=LRUID
"RTN","LRWLST12",67,0)
 . S FDA(1,69.64,LRI_","_LR696IEN_",",12)=LRURG
"RTN","LRWLST12",68,0)
 . D FILE^DIE("","FDA(1)","LRDIE(1)")
"RTN","LRWLST12",69,0)
 . D CLEAN^DILF
"RTN","LRWLST12",70,0)
 ;
"RTN","LRWLST12",71,0)
 ; JMC/8 Feb 07 - need to rewrite to use FileMan DBS call
"RTN","LRWLST12",72,0)
 ; Create new entry with current status
"RTN","LRWLST12",73,0)
 I '$D(^LRO(69.6,LR696IEN,2,"C",LRNLT)) D
"RTN","LRWLST12",74,0)
 . S:'$D(^LRO(69.6,LR696IEN,2,0)) ^(0)="^69.64A^"
"RTN","LRWLST12",75,0)
 . N DA,DIC,DIE,DLAYGO,DR
"RTN","LRWLST12",76,0)
 . S DLAYGO=69.6,DA=LR696IEN
"RTN","LRWLST12",77,0)
 . S LRURG=$S($L($P($G(^LAB(62.05,+$P(LRTS,U,2),0)),U,4)):$P(^(0),U,4),1:"R")
"RTN","LRWLST12",78,0)
 . S (DIE,DIC)="^LRO(69.6,",DIC(0)="LM"
"RTN","LRWLST12",79,0)
 . S DR=20_"///"_LRTST_";",DR(1,69.6)="20///"_LRTST_";"
"RTN","LRWLST12",80,0)
 . S DR(2,69.64)=".01///"_LRTST_";1///"_LRNLT_";4///"_LRURG_";5////160;8///"_LRNT_";9///"_LRUID
"RTN","LRWLST12",81,0)
 . D ^DIE
"RTN","LRWLST12",82,0)
 ;
"RTN","LRWLST12",83,0)
 ; Check and update specimen status based on test order status
"RTN","LRWLST12",84,0)
 ;  - if specimen status is 'in-transit' then update if all tests have been processed.
"RTN","LRWLST12",85,0)
 S LRX=+$P(^LRO(69.6,LR696IEN,0),U,10),LROK=1,LRSTATUS=""
"RTN","LRWLST12",86,0)
 I LRX S LRSTATUS=$$GET1^DIQ(64.061,LRX_",",.01)
"RTN","LRWLST12",87,0)
 I LRSTATUS="In-Transit" D
"RTN","LRWLST12",88,0)
 . S LRI=0
"RTN","LRWLST12",89,0)
 . F  S LRI=$O(^LRO(69.6,LR696,2,LRI)) Q:'LRI  D  Q:'LROK
"RTN","LRWLST12",90,0)
 . . S X=$P(^LRO(69.6,LR696,2,LRI,0),"^",6) Q:'X
"RTN","LRWLST12",91,0)
 . . I $$GET1^DIQ(64.061,X_",",.01)="In-Transit" S LROK=0
"RTN","LRWLST12",92,0)
 . I 'LROK Q
"RTN","LRWLST12",93,0)
 . I LRSTATUS="" Q
"RTN","LRWLST12",94,0)
 . S FDA(3,69.6,LR696IEN_",",6)=LRUPSTAT
"RTN","LRWLST12",95,0)
 . D FILE^DIE("","FDA(3)","LRDIE(3)")
"RTN","LRWLST12",96,0)
 . D CLEAN^DILF
"RTN","LRWLST12",97,0)
 Q
"RTN","LRWLST12",98,0)
 ;
"RTN","LRWLST12",99,0)
 ;
"RTN","LRWLST12",100,0)
PROVCPY ; Copy remote ordering provider from file #69.6 to ordered test multiple (#.35)
"RTN","LRWLST12",101,0)
 ; Called from LRWLST11
"RTN","LRWLST12",102,0)
 N FDA,LRDIE,LRFILE,LRI,LRPROV,LRX,LRY,LRZ
"RTN","LRWLST12",103,0)
 ;
"RTN","LRWLST12",104,0)
 S LRFILE=$S(LRSS="CH":63.07,LRSS="MI":63.5,LRSS="SP":63.53,LRSS="CY":63.51,LRSS="EM":63.52,1:"")
"RTN","LRWLST12",105,0)
 I LRFILE="" Q
"RTN","LRWLST12",106,0)
 S LRI=0,LRPROV=""
"RTN","LRWLST12",107,0)
 F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT",LRI)) Q:'LRI  D
"RTN","LRWLST12",108,0)
 . S LRX=$P($G(^LR(LRDFN,LRSS,LRIDT,"ORUT",LRI,0)),"^")
"RTN","LRWLST12",109,0)
 . S LRY=$O(^LRO(69.6,LR696,2,"C",LRX,0))
"RTN","LRWLST12",110,0)
 . I LRY="" Q
"RTN","LRWLST12",111,0)
 . S LRZ=$P($G(^LRO(69.6,LR696,2,LRY,1)),"^")
"RTN","LRWLST12",112,0)
 . I LRZ="" Q
"RTN","LRWLST12",113,0)
 . S LRPROV=$E(LRZ,1,45)
"RTN","LRWLST12",114,0)
 . S FDA(1,LRFILE,LRI_","_LRIDT_","_LRDFN_",",7)=LRPROV
"RTN","LRWLST12",115,0)
 . D FILE^DIE("","FDA(1)","LRDIE(1)")
"RTN","LRWLST12",116,0)
 . K FDA(1),LRDIE(1)
"RTN","LRWLST12",117,0)
 ;
"RTN","LRWLST12",118,0)
 ; Copy ordering provider to file #63, AP field #.011 SPECIMEN SUBMITTED BY (free text field)
"RTN","LRWLST12",119,0)
 ;   - Copied from last or only test, only can store one.
"RTN","LRWLST12",120,0)
 I LRPROV'="","SPCYEM"[LRSS D
"RTN","LRWLST12",121,0)
 . S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRWLST12",122,0)
 . I LRFILE="" Q
"RTN","LRWLST12",123,0)
 . S FDA(2,LRFILE,LRIDT_","_LRDFN_",",.011)=LRPROV
"RTN","LRWLST12",124,0)
 . D FILE^DIE("","FDA(2)","LRDIE(2)")
"RTN","LRWLST12",125,0)
 . K FDA(2),LRDIE(2)
"RTN","LRWLST12",126,0)
 ;
"RTN","LRWLST12",127,0)
 D CLEAN^DILF
"RTN","LRWLST12",128,0)
 ;
"RTN","LRWLST12",129,0)
 Q
"RTN","LRWLST12",130,0)
 ;
"RTN","LRWLST12",131,0)
 ;
"RTN","LRWLST12",132,0)
APMOVE ; Copy anatomic pathology data from file #69.6 to corresponding fields in file #63 for this accession.
"RTN","LRWLST12",133,0)
 ; Called from LRWLST11
"RTN","LRWLST12",134,0)
 ;
"RTN","LRWLST12",135,0)
 ; Copy specimen multiple to file #63
"RTN","LRWLST12",136,0)
 N FDA,LRDIE,LRFILE,LRI,LRX,LRY
"RTN","LRWLST12",137,0)
 S LRFILE=$S(LRSS="SP":63.812,LRSS="CY":63.902,LRSS="EM":63.202,1:0)
"RTN","LRWLST12",138,0)
 I 'LRFILE Q
"RTN","LRWLST12",139,0)
 S LRI=0
"RTN","LRWLST12",140,0)
 F  S LRI=$O(^LRO(69.6,LR696,61,LRI)) Q:'LRI  D
"RTN","LRWLST12",141,0)
 . S LRY=$G(^LRO(69.6,LR696,61,LRI,0))
"RTN","LRWLST12",142,0)
 . I $P(LRY,"^")="" Q
"RTN","LRWLST12",143,0)
 . S FDA(1,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.01)=$P(LRY,"^")
"RTN","LRWLST12",144,0)
 . I $P(LRY,"^",2) S FDA(1,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.06)=$P(LRY,"^",2)
"RTN","LRWLST12",145,0)
 . I $P(LRY,"^",3) S FDA(1,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.07)=$P(LRY,"^",3)
"RTN","LRWLST12",146,0)
 . I $D(FDA(1)) D UPDATE^DIE("","FDA(1)","","LRDIE(1)")
"RTN","LRWLST12",147,0)
 . K FDA(1),LRDIE(1)
"RTN","LRWLST12",148,0)
 ;
"RTN","LRWLST12",149,0)
 ; If no free text specimen and topography then create from top-level topography
"RTN","LRWLST12",150,0)
 I '$D(^LRO(69.6,LR696,61)) D
"RTN","LRWLST12",151,0)
 . S LRX=$G(^LRO(69.6,LR696,0))
"RTN","LRWLST12",152,0)
 . I '$P(LRX,"^",7) Q
"RTN","LRWLST12",153,0)
 . S LRY=$$GET1^DIQ(61,$P(LRX,"^",7),.01),$P(LRY,"^",2,3)=$P(LRX,"^",7,8)
"RTN","LRWLST12",154,0)
 . S FDA(2,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.01)=$P(LRY,"^")
"RTN","LRWLST12",155,0)
 . I $P(LRY,"^",2) S FDA(2,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.06)=$P(LRY,"^",2)
"RTN","LRWLST12",156,0)
 . I $P(LRY,"^",3) S FDA(2,LRFILE,"+1,"_LRIDT_","_LRDFN_",",.07)=$P(LRY,"^",3)
"RTN","LRWLST12",157,0)
 . I $D(FDA(2)) D UPDATE^DIE("","FDA(2)","","LRDIE(2)")
"RTN","LRWLST12",158,0)
 . K FDA(2),LRDIE(2)
"RTN","LRWLST12",159,0)
 ;
"RTN","LRWLST12",160,0)
 ; Copy accompanying text to corresponding word-processing fields in file #63
"RTN","LRWLST12",161,0)
 ; If frozen section (1.3) and not SP subscript then store in microscopic description (1.1) - only SP supports frozen section.
"RTN","LRWLST12",162,0)
 S LRI=0,LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:0)
"RTN","LRWLST12",163,0)
 F  S LRI=$O(^LRO(69.6,LR696,63,LRI)) Q:'LRI  D
"RTN","LRWLST12",164,0)
 . S LRY=+$G(^LRO(69.6,LR696,63,LRI,0))
"RTN","LRWLST12",165,0)
 . I '$D(^LRO(69.6,LR696,63,LRI,1)) Q
"RTN","LRWLST12",166,0)
 . I LRI=1.3,LRSS'="SP" S LRI=1.1
"RTN","LRWLST12",167,0)
 . I LRFILE D WP^DIE(LRFILE,LRIDT_","_LRDFN_",",LRY,"A","^LRO(69.6,LR696,63,LRI,1)","LRDIE(LRFILE)")
"RTN","LRWLST12",168,0)
 ;
"RTN","LRWLST12",169,0)
 D CLEAN^DILF
"RTN","LRWLST12",170,0)
 Q
"RTN","LRWLST12",171,0)
 ;
"RTN","LRWLST12",172,0)
 ;
"RTN","LRWLST12",173,0)
MAILALRT(LRRNAME,LRFMERR) ;
"RTN","LRWLST12",174,0)
 ; Send mail message alert when FileMan DBS errors returned
"RTN","LRWLST12",175,0)
 ; Inputs
"RTN","LRWLST12",176,0)
 ;  LRRNAME: Routine name (TAG~RTN)
"RTN","LRWLST12",177,0)
 ;  LRFMERR:<byref><opt> FileMan error local array
"RTN","LRWLST12",178,0)
 ;
"RTN","LRWLST12",179,0)
 N J,LR68,LRCNT,LRMTXT,X,XMINSTR,XMSUB,XMTO,Y
"RTN","LRWLST12",180,0)
 ;
"RTN","LRWLST12",181,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN)) M LR68=^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRWLST12",182,0)
 ;
"RTN","LRWLST12",183,0)
 S LRMTXT(1)="The following debugging information is provided to assist"
"RTN","LRWLST12",184,0)
 S LRMTXT(2)="support staff in resolving error during accessioning."
"RTN","LRWLST12",185,0)
 S LRMTXT(3)=" ",LRCNT=3
"RTN","LRWLST12",186,0)
 ;
"RTN","LRWLST12",187,0)
 F J="DILOCKTM","DUZ","FDA","FDAIEN","LR68","LRAA","LRAD","LRAN","LRDFN","LRDIE","LRFDA","LRFDAIEN","LRFMERR","LRSAMP","LRSPEC","LRSS","LRTSTS","LRUNQ","LRWLC","XQY","XQY0" D
"RTN","LRWLST12",188,0)
 . S X=$G(@J)
"RTN","LRWLST12",189,0)
 . I X'="" S LRCNT=LRCNT+1,LRMTXT(LRCNT)=J_"="_X
"RTN","LRWLST12",190,0)
 . F  S J=$Q(@J) Q:J=""  S LRCNT=LRCNT+1,LRMTXT(LRCNT)=J_"="_@J
"RTN","LRWLST12",191,0)
 S LRCNT=LRCNT+1,LRMTXT(LRCNT)="Last Global Ref="_$$LGR^%ZOSV
"RTN","LRWLST12",192,0)
 S LRCNT=LRCNT+1,LRMTXT(LRCNT)="Version="_$$VERSION^%ZOSV(1)_" "_$$VERSION^%ZOSV
"RTN","LRWLST12",193,0)
 S LRCNT=LRCNT+1,LRMTXT(LRCNT)="Operating System="_$$OS^%ZOSV
"RTN","LRWLST12",194,0)
 D GETENV^%ZOSV
"RTN","LRWLST12",195,0)
 S LRCNT=LRCNT+1,LRMTXT(LRCNT)="Environment="_Y
"RTN","LRWLST12",196,0)
 ;
"RTN","LRWLST12",197,0)
 S XMSUB="FileMan DBS call failed during accessioning in routine "_$G(LRRNAME,"LRWLST1")
"RTN","LRWLST12",198,0)
 I $L(XMSUB)>65 S XMSUB="FileMan DBS failed during accessioning in "_$G(LRRNAME,"LRWLST1")
"RTN","LRWLST12",199,0)
 S XMTO("G.LMI")="",XMINSTR("FROM")=.5,XMINSTR("ADDR FLAGS")="R"
"RTN","LRWLST12",200,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"LRMTXT",.XMTO,.XMINSTR)
"RTN","LRWLST12",201,0)
 Q
"RTN","LRWLST1A")
0^119^B15060477
"RTN","LRWLST1A",1,0)
LRWLST1A ;DALOI/JDB - ACCESSION SETUP CONT ;03/07/12  16:44
"RTN","LRWLST1A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRWLST1A",3,0)
 ;
"RTN","LRWLST1A",4,0)
 Q
"RTN","LRWLST1A",5,0)
 ;
"RTN","LRWLST1A",6,0)
SLRSS ;
"RTN","LRWLST1A",7,0)
 ; 
"RTN","LRWLST1A",8,0)
 ; Originally in SLRSS^LRWLST11.
"RTN","LRWLST1A",9,0)
 ; Note: This subroutine gets called after AP Log-in (LRAP)
"RTN","LRWLST1A",10,0)
 ; as well as from other processes such as LEDI.
"RTN","LRWLST1A",11,0)
 ;
"RTN","LRWLST1A",12,0)
 ; Expects: LRAA,LRAD,LRAN,LRCDT,LRDFN,LREAL,LRIDT,LRLLOC,LRNT
"RTN","LRWLST1A",13,0)
 ; LRORU3,LRPRAC,LRSAMP,LRSPEC,LRSS,LRORDRR,LRRSITE,LROLLOC
"RTN","LRWLST1A",14,0)
 ;
"RTN","LRWLST1A",15,0)
 N FLD,FLDS,LRFILE,LRFLDS,LRDATA,DATA,X,I
"RTN","LRWLST1A",16,0)
 N LRFDA,LRIEN,LRMSG,DIERR
"RTN","LRWLST1A",17,0)
 S LRFILE=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,LRSS="BB":63.01,1:0)
"RTN","LRWLST1A",18,0)
 Q:'LRFILE
"RTN","LRWLST1A",19,0)
 ;
"RTN","LRWLST1A",20,0)
 ; Fields to use for each subfile
"RTN","LRWLST1A",21,0)
 S LRFLDS=""
"RTN","LRWLST1A",22,0)
 I LRSS="CH" D  ;
"RTN","LRWLST1A",23,0)
 . S LRFLDS=".01;.02;.05;.06;.09;.1;.11;.111;.112;.31;.32;.33;.34;.342"
"RTN","LRWLST1A",24,0)
 I LRSS="MI" D  ;
"RTN","LRWLST1A",25,0)
 . S LRFLDS=".01;.02;.05;.06;.07;.08;.09;.1;.055;.111;.112;.31;.32;.33;.34;.342"
"RTN","LRWLST1A",26,0)
 I LRSS="SP" D  ;
"RTN","LRWLST1A",27,0)
 . S LRFLDS=".01;.02;.06;.07;.08;.09;.1;.31;.32;.33;.34;.342"
"RTN","LRWLST1A",28,0)
 I LRSS="CY" D  ;
"RTN","LRWLST1A",29,0)
 . S LRFLDS=".01;.02;.06;.07;.08;.09;.1;.31;.32;.33;.34;.342"
"RTN","LRWLST1A",30,0)
 I LRSS="EM" D  ;
"RTN","LRWLST1A",31,0)
 . S LRFLDS=".01;.02;.06;.07;.08;.09;.1;.31;.32;.33;.34;.342"
"RTN","LRWLST1A",32,0)
 I LRSS="BB" D  ;
"RTN","LRWLST1A",33,0)
 . S LRFLDS=".01;.02;.05;.06;.07;.08;.09;.1;.055"
"RTN","LRWLST1A",34,0)
 Q:LRFLDS=""
"RTN","LRWLST1A",35,0)
 ;
"RTN","LRWLST1A",36,0)
 ; Get current values from database
"RTN","LRWLST1A",37,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRWLST1A",38,0)
 D GETS^DIQ(LRFILE,LRIEN,LRFLDS,"IN","LRDATA","LRMSG")
"RTN","LRWLST1A",39,0)
 M DATA=LRDATA(LRFILE,LRIEN)
"RTN","LRWLST1A",40,0)
 ; DATA(field#,"I")=value
"RTN","LRWLST1A",41,0)
 K LRDATA
"RTN","LRWLST1A",42,0)
 ;
"RTN","LRWLST1A",43,0)
 S FLD=""
"RTN","LRWLST1A",44,0)
 F I=1:1:$L(LRFLDS,";") S FLD=$P(LRFLDS,";",I) Q:'FLD  D  ;
"RTN","LRWLST1A",45,0)
 . ; skip if database already has a value
"RTN","LRWLST1A",46,0)
 . Q:$G(DATA(FLD,"I"))'=""
"RTN","LRWLST1A",47,0)
 . ;
"RTN","LRWLST1A",48,0)
 . ; dont process .01 field
"RTN","LRWLST1A",49,0)
 . I FLD=.01 Q
"RTN","LRWLST1A",50,0)
 . ;
"RTN","LRWLST1A",51,0)
 . I FLD=.02 I "CHMI"[LRSS D  Q  ;
"RTN","LRWLST1A",52,0)
 . . D MAKEFDA(.02,LREAL)
"RTN","LRWLST1A",53,0)
 . ;
"RTN","LRWLST1A",54,0)
 . ; Is there a pathologist variable available here?
"RTN","LRWLST1A",55,0)
 . ;I FLD=.02 I "^63.08^63.09^63.02^"[("^"_LRFILE_"^") D  Q  ;
"RTN","LRWLST1A",56,0)
 . ;I FLD=.02 I "SPCYEM"[LRSS D  Q  ;
"RTN","LRWLST1A",57,0)
 . ;. D MAKEFDA(.02,LREAL)
"RTN","LRWLST1A",58,0)
 . ;
"RTN","LRWLST1A",59,0)
 . I FLD=.05 I "CHMIBB"[LRSS D  Q  ;
"RTN","LRWLST1A",60,0)
 . . I LRSS="CH" D MAKEFDA(.05,LRSPEC)
"RTN","LRWLST1A",61,0)
 . . I LRSS'="CH" D  ;
"RTN","LRWLST1A",62,0)
 . . . S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0))
"RTN","LRWLST1A",63,0)
 . . . S X=$P(X,U,1)
"RTN","LRWLST1A",64,0)
 . . . D MAKEFDA(.05,X)
"RTN","LRWLST1A",65,0)
 . . ;
"RTN","LRWLST1A",66,0)
 . ;
"RTN","LRWLST1A",67,0)
 . I FLD=.055 I "MIBB"[LRSS D  Q  ;
"RTN","LRWLST1A",68,0)
 . . S X=$P(LRSAMP,";",1)
"RTN","LRWLST1A",69,0)
 . . D MAKEFDA(.055,X)
"RTN","LRWLST1A",70,0)
 . ;
"RTN","LRWLST1A",71,0)
 . I FLD=.06 D MAKEFDA(.06,LRACC) Q  ;
"RTN","LRWLST1A",72,0)
 . ;
"RTN","LRWLST1A",73,0)
 . ;FLD .07 handled below
"RTN","LRWLST1A",74,0)
 . ;FLD .08 handled below
"RTN","LRWLST1A",75,0)
 . ;
"RTN","LRWLST1A",76,0)
 . ;I FLD=.09 I "SPCYEMBB"[LRSS  D  Q  ;
"RTN","LRWLST1A",77,0)
 . ;. ;D MAKEFDA(.09,"????")  ; ???what goes here???
"RTN","LRWLST1A",78,0)
 . ;I FLD=.09 I LRSS="CH" D  Q  ;
"RTN","LRWLST1A",79,0)
 . ;. ;D MAKEFDA(.09,"????")  ;;???SUM REPROT NUM???
"RTN","LRWLST1A",80,0)
 . ;I FLD=.09 I LRSS="MI" D  Q  ;
"RTN","LRWLST1A",81,0)
 . ;. ;D MAKEFDA(.09,"????")  ;;???AMENDED REPORT???
"RTN","LRWLST1A",82,0)
 . ;
"RTN","LRWLST1A",83,0)
 . ; FLD .1 handled below
"RTN","LRWLST1A",84,0)
 . ; FLD .11 handled below
"RTN","LRWLST1A",85,0)
 . ;
"RTN","LRWLST1A",86,0)
 . I FLD=.111 I "CHMI"[LRSS  D  Q  ;
"RTN","LRWLST1A",87,0)
 . . S X=""
"RTN","LRWLST1A",88,0)
 . . I $G(LRORDRR)="R" I +$G(LRRSITE("RSITE")) D  ;
"RTN","LRWLST1A",89,0)
 . . . S X=+LRRSITE("RSITE")_";DIC(4,"
"RTN","LRWLST1A",90,0)
 . . I $G(LRORDRR)'="R" I $G(LROLLOC) D  ;
"RTN","LRWLST1A",91,0)
 . . . S X=LROLLOC_";SC("
"RTN","LRWLST1A",92,0)
 . . Q:X=""
"RTN","LRWLST1A",93,0)
 . . D MAKEFDA(.111,X)
"RTN","LRWLST1A",94,0)
 . ;
"RTN","LRWLST1A",95,0)
 . I FLD=.112 I "CHMI"[LRSS  D  Q  ;
"RTN","LRWLST1A",96,0)
 . . S X=$G(LRDUZ(2))
"RTN","LRWLST1A",97,0)
 . . I X="" S X=$G(DUZ(2))
"RTN","LRWLST1A",98,0)
 . . D MAKEFDA(.112,X)
"RTN","LRWLST1A",99,0)
 . ;
"RTN","LRWLST1A",100,0)
 . ;
"RTN","LRWLST1A",101,0)
 . I LRSS="CH" D  Q  ;
"RTN","LRWLST1A",102,0)
 . . I FLD=.07 Q 
"RTN","LRWLST1A",103,0)
 . . I FLD=.1 D MAKEFDA(.1,LRPRAC)
"RTN","LRWLST1A",104,0)
 . . I FLD=.11 D MAKEFDA(.11,LRLLOC)
"RTN","LRWLST1A",105,0)
 . ;
"RTN","LRWLST1A",106,0)
 . I "MICYSPEMBB"[LRSS D  Q  ;
"RTN","LRWLST1A",107,0)
 . . I FLD=.07 D MAKEFDA(.07,LRPRAC)
"RTN","LRWLST1A",108,0)
 . . I FLD=.08 D MAKEFDA(.08,LRLLOC)
"RTN","LRWLST1A",109,0)
 . . I FLD=.1 D MAKEFDA(.1,LRNT)
"RTN","LRWLST1A",110,0)
 . ;
"RTN","LRWLST1A",111,0)
 ;
"RTN","LRWLST1A",112,0)
 I $G(LRORU3)'="" I "CHMISPCYEM"[LRSS D  ;
"RTN","LRWLST1A",113,0)
 . D MAKEFDA(.31,$P(LRORU3,U))
"RTN","LRWLST1A",114,0)
 . D MAKEFDA(.32,$P(LRORU3,U,2))
"RTN","LRWLST1A",115,0)
 . D MAKEFDA(.33,$P(LRORU3,U,3))
"RTN","LRWLST1A",116,0)
 . D MAKEFDA(.34,$P(LRORU3,U,4))
"RTN","LRWLST1A",117,0)
 . D MAKEFDA(.342,$P(LRORU3,U,5))
"RTN","LRWLST1A",118,0)
 ;
"RTN","LRWLST1A",119,0)
 I $D(LRFDA(63)) D FILE^DIE("","LRFDA(63)","LRMSG")
"RTN","LRWLST1A",120,0)
 ;
"RTN","LRWLST1A",121,0)
 Q
"RTN","LRWLST1A",122,0)
 ;
"RTN","LRWLST1A",123,0)
MAKEFDA(FLD,VAL) ;
"RTN","LRWLST1A",124,0)
 ; Adds entries to the LRFDA array.
"RTN","LRWLST1A",125,0)
 ; Helper method for SLRSS method.
"RTN","LRWLST1A",126,0)
 ; (Private method)
"RTN","LRWLST1A",127,0)
 ; Requires LRFILE,LRIEN,DATA variables in symbol table
"RTN","LRWLST1A",128,0)
 ; Inputs
"RTN","LRWLST1A",129,0)
 ;   FLD : Field #
"RTN","LRWLST1A",130,0)
 ;   VAL : Value
"RTN","LRWLST1A",131,0)
 ;
"RTN","LRWLST1A",132,0)
 Q:$G(DATA(FLD,"I"))'=""
"RTN","LRWLST1A",133,0)
 Q:VAL=""
"RTN","LRWLST1A",134,0)
 S LRFDA(63,LRFILE,LRIEN,FLD)=VAL
"RTN","LRWLST1A",135,0)
 Q
"RTN","LRWLST1A",136,0)
 ;
"RTN","LRWLST1A",137,0)
SLRSSOLD ;
"RTN","LRWLST1A",138,0)
 Q
"RTN","LRWLST1A",139,0)
 ; For legacy documentation only
"RTN","LRWLST1A",140,0)
 ; This is the code that was in SLRSS^LRWLST11
"RTN","LRWLST1A",141,0)
 ;S FDAIEN(1)=LRIDT
"RTN","LRWLST1A",142,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.01)=LRCDT
"RTN","LRWLST1A",143,0)
 ;S:"CYSPEM"'[LRSS FDA(63,LRX,LRIDT_","_LRDFN_",",.02)=LREAL
"RTN","LRWLST1A",144,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.05)=$P(H8,U)
"RTN","LRWLST1A",145,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.06)=$P(H8,U,2)
"RTN","LRWLST1A",146,0)
 ;I "MICYSPEMBB"[LRSS S FDA(63,LRX,LRIDT_","_LRDFN_",",.07)=LRPRAC
"RTN","LRWLST1A",147,0)
 ;I LRSS="CH" S FDA(63,LRX,LRIDT_","_LRDFN_",",.07)=$P(H8,U,3)
"RTN","LRWLST1A",148,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.08)=$P(H8,U,4)
"RTN","LRWLST1A",149,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.09)=$P(H8,U,5)
"RTN","LRWLST1A",150,0)
 ;I LRSS="CH" S FDA(63,LRX,LRIDT_","_LRDFN_",",.1)=LRPRAC
"RTN","LRWLST1A",151,0)
 ;I "MICYSPEMBB"[LRSS S FDA(63,LRX,LRIDT_","_LRDFN_",",.1)=LRNT
"RTN","LRWLST1A",152,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.055)=$P(H8,U,7)
"RTN","LRWLST1A",153,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.2)=$P(H8,U,8)
"RTN","LRWLST1A",154,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.111)=$P(H8,U,9)
"RTN","LRWLST1A",155,0)
 ;S FDA(63,LRX,LRIDT_","_LRDFN_",",.112)=$P(H8,U,10)
"RTN","LRWLST1A",156,0)
 ;I $G(LRORU3)'="" D
"RTN","LRWLST1A",157,0)
 ;.S FDA(63,LRX,LRIDT_","_LRDFN_",",.31)=$P(LRORU3,U)
"RTN","LRWLST1A",158,0)
 ;.S FDA(63,LRX,LRIDT_","_LRDFN_",",.32)=$P(LRORU3,U,2)
"RTN","LRWLST1A",159,0)
 ;.S FDA(63,LRX,LRIDT_","_LRDFN_",",.33)=$P(LRORU3,U,3)
"RTN","LRWLST1A",160,0)
 ;.S FDA(63,LRX,LRIDT_","_LRDFN_",",.34)=$P(LRORU3,U,4)
"RTN","LRWLST1A",161,0)
 ;.S FDA(63,LRX,LRIDT_","_LRDFN_",",.342)=$P(LRORU3,U,5)
"RTN","LRWLST1A",162,0)
 ;I LRX D FILE^DIE("","FDA(63)","LRDIE(63)")
"RTN","LRWLST1A",163,0)
 Q
"RTN","LRWRKLS1")
0^189^B21972414
"RTN","LRWRKLS1",1,0)
LRWRKLS1 ;DALOI/STAFF - LRWRKLST, CONT. ;12/06/10  17:05
"RTN","LRWRKLS1",2,0)
 ;;5.2;LAB SERVICE;**121,153,185,268,350**;Sep 27, 1994;Build 230
"RTN","LRWRKLS1",3,0)
 ;
"RTN","LRWRKLS1",4,0)
LST1 ;from LRWRKLST
"RTN","LRWRKLS1",5,0)
 D CHKPAGE
"RTN","LRWRKLS1",6,0)
 Q:$G(LRSTOP)=1
"RTN","LRWRKLS1",7,0)
 S LRDX=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRCE=$S($D(^(.1)):^(.1),1:""),LRACC=$S($D(^(.2)):^(.2),1:"")
"RTN","LRWRKLS1",8,0)
 Q:'$D(^LR(+LRDX,0))#2
"RTN","LRWRKLS1",9,0)
 ;
"RTN","LRWRKLS1",10,0)
 S LRDPF=$P(^LR(+LRDX,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRWRKLS1",11,0)
 D PT^LRX
"RTN","LRWRKLS1",12,0)
 ;
"RTN","LRWRKLS1",13,0)
 S (LRDLA,LRDLC,LRACO)=""
"RTN","LRWRKLS1",14,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) D
"RTN","LRWRKLS1",15,0)
 . N LRY
"RTN","LRWRKLS1",16,0)
 . S LRY=^LRO(68,LRAA,1,LRAD,1,LRAN,3),LRACO=$P(LRY,U,6)
"RTN","LRWRKLS1",17,0)
 . S LRDLC=$$FMTE^XLFDT($P(LRY,"^"),"MZ")
"RTN","LRWRKLS1",18,0)
 . S LRDLA=$$FMTE^XLFDT($P(LRY,"^",3),"MZ")
"RTN","LRWRKLS1",19,0)
 S LRDTO=$$FMTE^XLFDT($P(LRDX,"^",4),"MZ")
"RTN","LRWRKLS1",20,0)
 ;
"RTN","LRWRKLS1",21,0)
 W ! D DASH^LRX
"RTN","LRWRKLS1",22,0)
 ;
"RTN","LRWRKLS1",23,0)
 S LN=$G(LN)+1
"RTN","LRWRKLS1",24,0)
 D CHKPAGE
"RTN","LRWRKLS1",25,0)
 Q:$G(LRSTOP)
"RTN","LRWRKLS1",26,0)
 ;
"RTN","LRWRKLS1",27,0)
 W !,"ACCESSION: ",LRACC,?40,"PATIENT: ",PNM
"RTN","LRWRKLS1",28,0)
 W !,"  ORDER #: ",LRCE,?41,"SSN/ID: ",SSN,!
"RTN","LRWRKLS1",29,0)
 S X=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRWRKLS1",30,0)
 W:X'="" ?6,"UID: ",X
"RTN","LRWRKLS1",31,0)
 W ?44,"DOB: ",$$FMTE^XLFDT(DOB,"MZ")
"RTN","LRWRKLS1",32,0)
 W !," LOCATION: ",$E($P(LRDX,"^",7),1,19)
"RTN","LRWRKLS1",33,0)
 W:LRDTO'="" ?35,"DATE ORDERED: ",LRDTO,!
"RTN","LRWRKLS1",34,0)
 W:$P(LRDX,U,6) "    IDENTITY: ",$P(LRDX,U,6)
"RTN","LRWRKLS1",35,0)
 W:LRDLC'="" ?38,"COLLECTED: ",LRDLC
"RTN","LRWRKLS1",36,0)
 ;
"RTN","LRWRKLS1",37,0)
 S (LRPRAC,LRX)=$P(LRDX,"^",8)
"RTN","LRWRKLS1",38,0)
 I LRPRAC S LRX=$$GET1^DIQ(200,LRPRAC_",",.01)
"RTN","LRWRKLS1",39,0)
 I LRX="" S LRX=$S(LRPRAC'="":LRPRAC,1:"UNKNOWN")
"RTN","LRWRKLS1",40,0)
 W !," PROVIDER: ",LRX
"RTN","LRWRKLS1",41,0)
 W:LRDLA'="" ?36,"LAB ARRIVAL: ",LRDLA
"RTN","LRWRKLS1",42,0)
 S LN=$G(LN)+6
"RTN","LRWRKLS1",43,0)
 ;
"RTN","LRWRKLS1",44,0)
 N PRAC,PR
"RTN","LRWRKLS1",45,0)
 D PRAC^LR7OMERG(LRAA,LRAD,LRAN,.PRAC)
"RTN","LRWRKLS1",46,0)
 S PR=0
"RTN","LRWRKLS1",47,0)
 F  S PR=$O(PRAC(PR)) Q:PR<1  W !?11,$$GET1^DIQ(200,PR_",",.01) S LN=LN+1
"RTN","LRWRKLS1",48,0)
 ;
"RTN","LRWRKLS1",49,0)
 D CHKPAGE
"RTN","LRWRKLS1",50,0)
 Q:$G(LRSTOP)=1
"RTN","LRWRKLS1",51,0)
 ;
"RTN","LRWRKLS1",52,0)
 ;
"RTN","LRWRKLS1",53,0)
 D LEDI
"RTN","LRWRKLS1",54,0)
 ;
"RTN","LRWRKLS1",55,0)
 ; Find and print order comments from file #69
"RTN","LRWRKLS1",56,0)
 S X1=+$P(LRDX,U,4),X2=+$P(LRDX,U,5)
"RTN","LRWRKLS1",57,0)
 I $D(^LRO(69,X1,1,X2,6)) D
"RTN","LRWRKLS1",58,0)
 . W !,"  Order Comment:" S LN=LN+1
"RTN","LRWRKLS1",59,0)
 . S I=0
"RTN","LRWRKLS1",60,0)
 . F  S I=$O(^LRO(69,X1,1,X2,6,I)) Q:I<1  W !?11,^(I,0) S LN=LN+1 D CHKPAGE Q:$G(LRSTOP)
"RTN","LRWRKLS1",61,0)
 ;
"RTN","LRWRKLS1",62,0)
 ;
"RTN","LRWRKLS1",63,0)
TSTCOM ; Display test comments
"RTN","LRWRKLS1",64,0)
 ;
"RTN","LRWRKLS1",65,0)
 N LRI,LRX,LRY
"RTN","LRWRKLS1",66,0)
 ;
"RTN","LRWRKLS1",67,0)
 Q:$G(LRSTOP)
"RTN","LRWRKLS1",68,0)
 ;
"RTN","LRWRKLS1",69,0)
 ; Check for canceled test and print test and cancel reason
"RTN","LRWRKLS1",70,0)
 S LRI=0
"RTN","LRWRKLS1",71,0)
 F  S LRI=$O(^LRO(69,X1,1,X2,2,LRI)) Q:LRI<1  D
"RTN","LRWRKLS1",72,0)
 . S LRX=$G(^LRO(69,X1,1,X2,2,LRI,0))
"RTN","LRWRKLS1",73,0)
 . I '$P(LRX,"^",11) Q
"RTN","LRWRKLS1",74,0)
 . W !,"  CANCELED TEST: ",$P($G(^LAB(60,+LRX,0),"UNKNOWN"),"^")
"RTN","LRWRKLS1",75,0)
 . W " "_$E($P($G(^LAB(62.05,+$P(LRX,"^",2),0),"ROUTINE"),"^"),1,15)
"RTN","LRWRKLS1",76,0)
 . W " by: "_$$GET1^DIQ(200,+$P(LRX,"^",11)_",",.01)
"RTN","LRWRKLS1",77,0)
 . S LN=LN+1,LRI(2)=0
"RTN","LRWRKLS1",78,0)
 . F  S LRI(2)=$O(^LRO(69,X1,1,X2,2,LRI,1.1,LRI(2))) Q:LRI(2)<1  D  Q:$G(LRSTOP)
"RTN","LRWRKLS1",79,0)
 . . S LRY=$G(^LRO(69,X1,1,X2,2,LRI,1.1,LRI(2),0))
"RTN","LRWRKLS1",80,0)
 . . W !?3,": "_LRY
"RTN","LRWRKLS1",81,0)
 . . S LN=LN+1 D CHKPAGE
"RTN","LRWRKLS1",82,0)
 ;
"RTN","LRWRKLS1",83,0)
 I LRACO'="" W !,"  Accession Comment: ",LRACO S LN=LN+1
"RTN","LRWRKLS1",84,0)
 ;
"RTN","LRWRKLS1",85,0)
 I $L($P(LRDX,U,6,7))>1 W ! S LN=LN+1
"RTN","LRWRKLS1",86,0)
 Q
"RTN","LRWRKLS1",87,0)
 ;
"RTN","LRWRKLS1",88,0)
 ;
"RTN","LRWRKLS1",89,0)
CHKPAGE ;
"RTN","LRWRKLS1",90,0)
 ;
"RTN","LRWRKLS1",91,0)
 ;ZEXCEPT: LN,LREND,LRSTOP,ZTQUEUED,ZTSTOP
"RTN","LRWRKLS1",92,0)
 ;
"RTN","LRWRKLS1",93,0)
 ; Check if task and user wants to stop task.
"RTN","LRWRKLS1",94,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","LRWRKLS1",95,0)
 . S (LRSTOP,ZTSTOP)=1
"RTN","LRWRKLS1",96,0)
 . W !!,"*** Report requested to stop by TaskMan ***"
"RTN","LRWRKLS1",97,0)
 . W !,"*** Task #",$G(ZTQUEUED,"UNKNOWN")," stopped at ",$$HTE^XLFDT($H)," ***"
"RTN","LRWRKLS1",98,0)
 ;
"RTN","LRWRKLS1",99,0)
 Q:$G(LRSTOP)!($D(ZTQUEUED))!($E(IOST,1,2)'="C-")
"RTN","LRWRKLS1",100,0)
 Q:$G(LN)<(IOSL-2)
"RTN","LRWRKLS1",101,0)
 ;
"RTN","LRWRKLS1",102,0)
 N DIR,DIRUT,DIROUT,DUOUT,X,Y
"RTN","LRWRKLS1",103,0)
 S DIR(0)="E"
"RTN","LRWRKLS1",104,0)
 D ^DIR
"RTN","LRWRKLS1",105,0)
 I $D(DIRUT) S (LREND,LRSTOP)=1
"RTN","LRWRKLS1",106,0)
 S LN=1
"RTN","LRWRKLS1",107,0)
 W !
"RTN","LRWRKLS1",108,0)
 Q
"RTN","LRWRKLS1",109,0)
 ;
"RTN","LRWRKLS1",110,0)
 ;
"RTN","LRWRKLS1",111,0)
LEDI ; print LEDI information
"RTN","LRWRKLS1",112,0)
 ;
"RTN","LRWRKLS1",113,0)
 ;ZEXCEPT: LRDX,LN,LRAA,LRAD,LRAN,LRDFN
"RTN","LRWRKLS1",114,0)
 ;
"RTN","LRWRKLS1",115,0)
 N LRDFN,LRIDT,LRIENS,LRSS,LRTYPE,LRUID,LRX,LRY
"RTN","LRWRKLS1",116,0)
 ;
"RTN","LRWRKLS1",117,0)
 S LRDFN=+LRDX
"RTN","LRWRKLS1",118,0)
 S LRY=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),LRIENS=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWRKLS1",119,0)
 ;
"RTN","LRWRKLS1",120,0)
 S LRX=$$GET1^DIQ(68.02,LRIENS,16.1),LRUID=$P(LRY,"^",5)
"RTN","LRWRKLS1",121,0)
 I LRX'=""!(LRUID'="") D
"RTN","LRWRKLS1",122,0)
 . W !!
"RTN","LRWRKLS1",123,0)
 . I LRX'="" W $J($$GET1^DID(68.02,16.2,"","LABEL")_": ",17),$E(LRX,1,20)
"RTN","LRWRKLS1",124,0)
 . I LRUID'="" W ?40,$$GET1^DID(68.02,16.4,"","LABEL"),": ",LRUID
"RTN","LRWRKLS1",125,0)
 . S LN=LN+2
"RTN","LRWRKLS1",126,0)
 ;
"RTN","LRWRKLS1",127,0)
 S LRX=$$GET1^DIQ(68.02,LRIENS,16.2)
"RTN","LRWRKLS1",128,0)
 I LRX'="" D
"RTN","LRWRKLS1",129,0)
 . W !,$J($$GET1^DID(68.02,16.1,"","LABEL")_": ",17),$E(LRX,1,20)
"RTN","LRWRKLS1",130,0)
 . S LN=LN+1
"RTN","LRWRKLS1",131,0)
 ;
"RTN","LRWRKLS1",132,0)
 S LRY=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,3))
"RTN","LRWRKLS1",133,0)
 S LRIDT=$P(LRY,"^",5),LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LRWRKLS1",134,0)
 I LRIDT<1 Q
"RTN","LRWRKLS1",135,0)
 S LRIENS=LRDFN_","_LRSS_","_LRIDT_",0"
"RTN","LRWRKLS1",136,0)
 ;
"RTN","LRWRKLS1",137,0)
 ; Display external order info (placer/filler) if any.
"RTN","LRWRKLS1",138,0)
 F LRTYPE=3,4 I $D(^LR(LRDFN,"EPR","AD",LRIENS,LRTYPE)) D
"RTN","LRWRKLS1",139,0)
 . N LRDATA,LRON,LRREF,LRJ
"RTN","LRWRKLS1",140,0)
 . S LRJ=$O(^LR(LRDFN,"EPR","AD",LRIENS,LRTYPE,0)),LRREF=LRJ_","_LRDFN_","
"RTN","LRWRKLS1",141,0)
 . D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRWRKLS1",142,0)
 . S LRON=$G(LRDATA(63.00013,LRREF,1,"I")),LRON(0)="Unknown"
"RTN","LRWRKLS1",143,0)
 . I LRON="" Q
"RTN","LRWRKLS1",144,0)
 . I $P($G(LRDATA(63.00013,LRREF,.03,"I")),";",2)="DIC(4," S LRON(0)=$P($$NS^XUAF4(+LRDATA(63.00013,LRREF,.03,"I")),"^")
"RTN","LRWRKLS1",145,0)
 . W !,?4,LRON(0)_$S(LRTYPE=3:" placer",1:" filler")_" order # "_LRON
"RTN","LRWRKLS1",146,0)
 ;
"RTN","LRWRKLS1",147,0)
 Q
"RTN","LRWRKLST")
0^103^B65810954
"RTN","LRWRKLST",1,0)
LRWRKLST ;DALOI/STAFF - LONG ACCESSION LIST ;02/28/12  19:21
"RTN","LRWRKLST",2,0)
 ;;5.2;LAB SERVICE;**1,17,38,153,185,221,268,362,350**;Sep 27, 1994;Build 230
"RTN","LRWRKLST",3,0)
 ;
"RTN","LRWRKLST",4,0)
 N LRDICS
"RTN","LRWRKLST",5,0)
 ;
"RTN","LRWRKLST",6,0)
 ; Save and restore DIC("S") if micro long form accession option (LRMIACC1).
"RTN","LRWRKLST",7,0)
 I $D(DIC("S")) S LRDICS=DIC("S")
"RTN","LRWRKLST",8,0)
 D LREND
"RTN","LRWRKLST",9,0)
 I $D(LRDICS) S DIC("S")=LRDICS
"RTN","LRWRKLST",10,0)
 ;
"RTN","LRWRKLST",11,0)
 S LRDT=$$FMTE^XLFDT($$NOW^XLFDT,"5MZ")
"RTN","LRWRKLST",12,0)
 ;
"RTN","LRWRKLST",13,0)
 S LREND=0
"RTN","LRWRKLST",14,0)
 S DIC="^LRO(68,",DIC(0)="AEMOQ"
"RTN","LRWRKLST",15,0)
 D ^DIC S LRAA=+Y,LRNAME=$P(Y,U,2)
"RTN","LRWRKLST",16,0)
 I LRAA<1 D LREND Q
"RTN","LRWRKLST",17,0)
 ;
"RTN","LRWRKLST",18,0)
 ; Ask if list by date rather than accession number
"RTN","LRWRKLST",19,0)
 I $P(^LRO(68,LRAA,0),U,3)="Y" D STAR^LRWU3 S LRLAST=$G(LAST)
"RTN","LRWRKLST",20,0)
 I LREND D LREND Q
"RTN","LRWRKLST",21,0)
 ; List by accession number
"RTN","LRWRKLST",22,0)
 I '$D(LRSTAR) D PHD
"RTN","LRWRKLST",23,0)
 I LREND D LREND Q
"RTN","LRWRKLST",24,0)
 ;
"RTN","LRWRKLST",25,0)
W ; from LRVER, LRVR
"RTN","LRWRKLST",26,0)
 ; Added to protect "%*" variables from %ZTLOAD corruption
"RTN","LRWRKLST",27,0)
 N %,%A,%A0,%B,%B1,%B2,%B3,%BA,%BU,%C,%D1,%D2,%DT,%E,%G,%H,%I,%J
"RTN","LRWRKLST",28,0)
 N %J1,%K,%M,%N,%P,%S,%T,%W,%W0,%X,%Y
"RTN","LRWRKLST",29,0)
 N A0,C,D,DD,DDH,DDQ,DDSV,DG,DH,DIC,DIFLD,DIR,DIRO,DIROUT,DIRUT
"RTN","LRWRKLST",30,0)
 N DIX,DIY,DISYS,DO,DP,DQ,DTOUT,DU,DZ,X1,XQH
"RTN","LRWRKLST",31,0)
 ;
"RTN","LRWRKLST",32,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,0)),'$D(LRSTAR) D LREND Q
"RTN","LRWRKLST",33,0)
 ;
"RTN","LRWRKLST",34,0)
 S (LRUNC,LRTSE)=0
"RTN","LRWRKLST",35,0)
 S:'$D(LRNAME) LRNAME=$P(^LRO(68,LRAA,0),U,1)
"RTN","LRWRKLST",36,0)
 ;
"RTN","LRWRKLST",37,0)
 S DIR(0)="YO",DIR("A")="Do you want a specific test",DIR("B")="NO"
"RTN","LRWRKLST",38,0)
 D ^DIR
"RTN","LRWRKLST",39,0)
 I $D(DIRUT) D LREND Q
"RTN","LRWRKLST",40,0)
 I Y=1 D
"RTN","LRWRKLST",41,0)
 . N DIC,X,Y
"RTN","LRWRKLST",42,0)
 . S DIC="^LAB(60,",DIC(0)="AEZOQ"
"RTN","LRWRKLST",43,0)
 . D ^DIC
"RTN","LRWRKLST",44,0)
 . I Y>0 S LRTSE=+Y
"RTN","LRWRKLST",45,0)
 ;
"RTN","LRWRKLST",46,0)
 K DIR
"RTN","LRWRKLST",47,0)
 S DIR(0)="YO",DIR("A")="Do you want only incomplete entries",DIR("B")="YES"
"RTN","LRWRKLST",48,0)
 D ^DIR
"RTN","LRWRKLST",49,0)
 I $D(DIRUT) D LREND Q
"RTN","LRWRKLST",50,0)
 S LRUNC=Y
"RTN","LRWRKLST",51,0)
 ;
"RTN","LRWRKLST",52,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRWRKLST",53,0)
 I POP D ^%ZISC,LREND Q
"RTN","LRWRKLST",54,0)
 ;
"RTN","LRWRKLST",55,0)
 ; Queue report via Taskman
"RTN","LRWRKLST",56,0)
 I $D(IO("Q")) D  Q
"RTN","LRWRKLST",57,0)
 . N ZTDESC,ZTSK,ZTRTN,ZTIO,ZTSAVE,%T
"RTN","LRWRKLST",58,0)
 . S ZTRTN="ENT^LRWRKLST",ZTDESC="Long form accession list",ZTSAVE("LR*")=""
"RTN","LRWRKLST",59,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LRWRKLST",60,0)
 . W !,"Task ",$S($G(ZTSK):ZTSK,1:"NOT")," Queued"
"RTN","LRWRKLST",61,0)
 . D LREND K IO("Q")
"RTN","LRWRKLST",62,0)
 ;
"RTN","LRWRKLST",63,0)
ENT ;
"RTN","LRWRKLST",64,0)
 ;
"RTN","LRWRKLST",65,0)
 N LRTST
"RTN","LRWRKLST",66,0)
 ;
"RTN","LRWRKLST",67,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRWRKLST",68,0)
 S (LREND,LRSTOP)=0
"RTN","LRWRKLST",69,0)
 ;
"RTN","LRWRKLST",70,0)
 ;
"RTN","LRWRKLST",71,0)
 U IO
"RTN","LRWRKLST",72,0)
 D HED,URG^LRX
"RTN","LRWRKLST",73,0)
 ;
"RTN","LRWRKLST",74,0)
 ; Process by accession date
"RTN","LRWRKLST",75,0)
 I '$D(LRSTAR) D
"RTN","LRWRKLST",76,0)
 . S LRAN=LRFAN-1
"RTN","LRWRKLST",77,0)
 . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:'LRAN!(LRAN>LRLAN)  D  Q:LRSTOP
"RTN","LRWRKLST",78,0)
 . . S LREND=0 D TD
"RTN","LRWRKLST",79,0)
 . . I LREND Q
"RTN","LRWRKLST",80,0)
 . . D LST,TESTS
"RTN","LRWRKLST",81,0)
 ;
"RTN","LRWRKLST",82,0)
 ; Process by date received in lab - yearly accession area
"RTN","LRWRKLST",83,0)
 I $D(LRSTAR) D
"RTN","LRWRKLST",84,0)
 . F  S LRAD=$O(^LRO(68,LRAA,1,LRAD)) Q:LRAD<1!(LRAD>LRWDTL)  D AC  Q:LRSTOP
"RTN","LRWRKLST",85,0)
 ;
"RTN","LRWRKLST",86,0)
 D ^%ZISC,LREND
"RTN","LRWRKLST",87,0)
 Q
"RTN","LRWRKLST",88,0)
 ;
"RTN","LRWRKLST",89,0)
 ;
"RTN","LRWRKLST",90,0)
TD ; Check tests on accession to determine if meets criteria to display.
"RTN","LRWRKLST",91,0)
 ; If incomplete only (LRUNC=1) and complete date then skip
"RTN","LRWRKLST",92,0)
 ; If not specific test selected (LRTSE=file #60 ien) then skip
"RTN","LRWRKLST",93,0)
 ; Otherwise set LRTST array with file #60 ien.
"RTN","LRWRKLST",94,0)
 ;
"RTN","LRWRKLST",95,0)
 K LRTST
"RTN","LRWRKLST",96,0)
 ;
"RTN","LRWRKLST",97,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) S LREND=1 Q
"RTN","LRWRKLST",98,0)
 S LRSN=+$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,5),LRDAT=+$P(^(0),U,4)
"RTN","LRWRKLST",99,0)
 S LRI=0
"RTN","LRWRKLST",100,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:LRI<.5  D
"RTN","LRWRKLST",101,0)
 . I LRTSE,LRTSE'=+^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI,0) Q
"RTN","LRWRKLST",102,0)
 . I LRUNC,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI,0),"^",5) Q
"RTN","LRWRKLST",103,0)
 . S LRTST(LRI)=""
"RTN","LRWRKLST",104,0)
 ;
"RTN","LRWRKLST",105,0)
 I '$D(LRTST) S LREND=1
"RTN","LRWRKLST",106,0)
 Q
"RTN","LRWRKLST",107,0)
 ;
"RTN","LRWRKLST",108,0)
 ;
"RTN","LRWRKLST",109,0)
TESTS ;
"RTN","LRWRKLST",110,0)
 N S1,S2
"RTN","LRWRKLST",111,0)
 ;
"RTN","LRWRKLST",112,0)
 D CHKPAGE^LRWRKLS1
"RTN","LRWRKLST",113,0)
 Q:LRSTOP!LREND
"RTN","LRWRKLST",114,0)
 ;
"RTN","LRWRKLST",115,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))
"RTN","LRWRKLST",116,0)
 ;
"RTN","LRWRKLST",117,0)
 S LRSPEC=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)),LRSAMP=$S(LRSPEC:$P(^(0),U,2),1:"")
"RTN","LRWRKLST",118,0)
 S S1=$P($G(^LAB(61,+LRSPEC,0)),U,1)
"RTN","LRWRKLST",119,0)
 S S2=$P($G(^LAB(62,+LRSAMP,0)),U,1)
"RTN","LRWRKLST",120,0)
 ;
"RTN","LRWRKLST",121,0)
 W !,"  SAMPLE: ",S1_$S(S1'=S2:"  "_S2,1:"")
"RTN","LRWRKLST",122,0)
 S LN=LN+1
"RTN","LRWRKLST",123,0)
 ;
"RTN","LRWRKLST",124,0)
 S LRLO69=$G(^LRO(69,LRDAT,1,LRSN,0))
"RTN","LRWRKLST",125,0)
 I LRLO69'="",$D(^LRO(69,LRDAT,1,LRSN,1)),$L($P(^(1),U,6)) W !,$P(^(1),U,6) S LN=LN+1
"RTN","LRWRKLST",126,0)
 ;
"RTN","LRWRKLST",127,0)
 K LRNAC
"RTN","LRWRKLST",128,0)
 S LRI=0
"RTN","LRWRKLST",129,0)
 F  S LRI=$O(LRTST(LRI)) Q:'LRI  D TS2
"RTN","LRWRKLST",130,0)
 ;
"RTN","LRWRKLST",131,0)
 I '$D(LRNAC),$L($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,4)) D
"RTN","LRWRKLST",132,0)
 . W !,"ALL COMPLETED",!!
"RTN","LRWRKLST",133,0)
 . S LN=LN+3
"RTN","LRWRKLST",134,0)
 Q
"RTN","LRWRKLST",135,0)
 ;
"RTN","LRWRKLST",136,0)
 ;
"RTN","LRWRKLST",137,0)
TS2 ;
"RTN","LRWRKLST",138,0)
 ;
"RTN","LRWRKLST",139,0)
 D CHKPAGE^LRWRKLS1
"RTN","LRWRKLST",140,0)
 Q:LRSTOP!LREND
"RTN","LRWRKLST",141,0)
 ;
"RTN","LRWRKLST",142,0)
 S LRXXX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI,0)),LRURG=+$P(LRXXX,U,2)
"RTN","LRWRKLST",143,0)
 W !,"  TEST: ",$P($G(^LAB(60,+LRXXX,0),"deleted test"),"^")
"RTN","LRWRKLST",144,0)
 S LN=LN+1
"RTN","LRWRKLST",145,0)
 ;
"RTN","LRWRKLST",146,0)
 W ?40,$S($D(LRURG(LRURG)):LRURG(LRURG),1:"")
"RTN","LRWRKLST",147,0)
 I $P(LRXXX,U,3)'="" W ?55," LIST: ",$P($G(^LRO(68.2,+$P(LRXXX,U,3),0)),U,1)," ",$P($P(LRXXX,U,3),";",2,3)
"RTN","LRWRKLST",148,0)
 ;
"RTN","LRWRKLST",149,0)
 I $D(^LRO(69,LRDAT,1,LRSN,2,"B",LRI)) D
"RTN","LRWRKLST",150,0)
 . N I,X
"RTN","LRWRKLST",151,0)
 . S X=$O(^LRO(69,LRDAT,1,LRSN,2,"B",LRI,0))
"RTN","LRWRKLST",152,0)
 . I X,$O(^LRO(69,LRDAT,1,LRSN,2,X,1,0)) D
"RTN","LRWRKLST",153,0)
 . . S I=0
"RTN","LRWRKLST",154,0)
 . . F  S I=$O(^LRO(69,LRDAT,1,LRSN,2,X,1,I)) Q:I<1  W !?3,": "_^(I,0)
"RTN","LRWRKLST",155,0)
 ;
"RTN","LRWRKLST",156,0)
 D REF
"RTN","LRWRKLST",157,0)
 ;
"RTN","LRWRKLST",158,0)
 I $P(LRXXX,U,5) W !,"  COMPLETED: ",$$FMTE^XLFDT($P(LRXXX,U,5),"MZ") S LN=LN+1
"RTN","LRWRKLST",159,0)
 E  S LRNAC=""
"RTN","LRWRKLST",160,0)
 Q
"RTN","LRWRKLST",161,0)
 ;
"RTN","LRWRKLST",162,0)
 ;
"RTN","LRWRKLST",163,0)
REF ; if referred test, display status and manifest
"RTN","LRWRKLST",164,0)
 ;
"RTN","LRWRKLST",165,0)
 N LRDFN,LRDN,LREVNT,LRIDT,LRIENS,LRMAN,LRSCFG,LRSS,LRUID,LRY
"RTN","LRWRKLST",166,0)
 ;
"RTN","LRWRKLST",167,0)
 S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")  Q:LRUID=""
"RTN","LRWRKLST",168,0)
 S LRMAN=$P(LRXXX,"^",10),LRSCFG=""
"RTN","LRWRKLST",169,0)
 I LRMAN D
"RTN","LRWRKLST",170,0)
 . S LRSCFG=$P($G(^LAHM(62.8,LRMAN,0)),"^",2)
"RTN","LRWRKLST",171,0)
 . I LRSCFG S LRSCFG(0)=$G(^LAHM(62.9,LRSCFG,0),"Unknown/deleted")
"RTN","LRWRKLST",172,0)
 . S LRMAN=$P($G(^LAHM(62.8,LRMAN,0)),"^")
"RTN","LRWRKLST",173,0)
 S LREVNT=$$STATUS^LREVENT(LRUID,+LRXXX,LRMAN)
"RTN","LRWRKLST",174,0)
 I LREVNT'="" D
"RTN","LRWRKLST",175,0)
 . W !,?4,"REFERRAL STATUS..: "_$P(LREVNT,"^")_" ("_$P(LREVNT,"^",2)_")"
"RTN","LRWRKLST",176,0)
 . W !,?4,"SHIPPING MANIFEST: "_$P(LREVNT,"^",3)
"RTN","LRWRKLST",177,0)
 . S LN=LN+2
"RTN","LRWRKLST",178,0)
 . I LRSCFG D
"RTN","LRWRKLST",179,0)
 . . W " using shipping config "_$P(LRSCFG(0),"^")
"RTN","LRWRKLST",180,0)
 . . W !,?4,"SHIPPED TO.......: "_$P($$NS^XUAF4($P(LRSCFG(0),"^",3)),"^")
"RTN","LRWRKLST",181,0)
 . . S LN=LN+1
"RTN","LRWRKLST",182,0)
 ;
"RTN","LRWRKLST",183,0)
 ; Display external order info (placer/filler) if any.
"RTN","LRWRKLST",184,0)
 S LRDFN=+LRDX
"RTN","LRWRKLST",185,0)
 S LRY=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,3))
"RTN","LRWRKLST",186,0)
 S LRIDT=$P(LRY,"^",5),LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LRWRKLST",187,0)
 S LRDN=0,LRTEST=+LRXXX
"RTN","LRWRKLST",188,0)
 I LRSS="CH" D LR60DN(.LRDN,LRTEST,.LRTST)
"RTN","LRWRKLST",189,0)
 ;
"RTN","LRWRKLST",190,0)
 S LRDN=0
"RTN","LRWRKLST",191,0)
 F  S LRDN=$O(LRDN(LRDN)) Q:LRDN<1  D
"RTN","LRWRKLST",192,0)
 . S LRIENS=LRDFN_","_LRSS_","_LRIDT_","_LRDN
"RTN","LRWRKLST",193,0)
 . F LRTYPE=3,4 I $D(^LR(LRDFN,"EPR","AD",LRIENS,LRTYPE)) D
"RTN","LRWRKLST",194,0)
 . . N LRDATA,LRON,LRREF,LRJ
"RTN","LRWRKLST",195,0)
 . . S LRJ=$O(^LR(LRDFN,"EPR","AD",LRIENS,LRTYPE,0)),LRREF=LRJ_","_LRDFN_","
"RTN","LRWRKLST",196,0)
 . . D GETDATA^LRUEPR(.LRDATA,LRREF)
"RTN","LRWRKLST",197,0)
 . . S LRON=$G(LRDATA(63.00013,LRREF,1,"I")),LRON(0)="Unknown"
"RTN","LRWRKLST",198,0)
 . . I LRON="" Q
"RTN","LRWRKLST",199,0)
 . . I $P($G(LRDATA(63.00013,LRREF,.03,"I")),";",2)="DIC(4," S LRON(0)=$P($$NS^XUAF4(+LRDATA(63.00013,LRREF,.03,"I")),"^")
"RTN","LRWRKLST",200,0)
 . . W !,?4,LRON(0)_$S(LRTYPE=3:" placer",1:" filler")_" order # "_LRON
"RTN","LRWRKLST",201,0)
 ;
"RTN","LRWRKLST",202,0)
 Q
"RTN","LRWRKLST",203,0)
 ;
"RTN","LRWRKLST",204,0)
 ;
"RTN","LRWRKLST",205,0)
PHD ;
"RTN","LRWRKLST",206,0)
 Q:LREND
"RTN","LRWRKLST",207,0)
 S LREND=0,U="^"
"RTN","LRWRKLST",208,0)
 D ADATE^LRWU Q:LREND
"RTN","LRWRKLST",209,0)
 D LRAN^LRWU3
"RTN","LRWRKLST",210,0)
 Q
"RTN","LRWRKLST",211,0)
 ;
"RTN","LRWRKLST",212,0)
LST ;
"RTN","LRWRKLST",213,0)
 D HED:($E(IOST)="P"&($Y+11>IOSL)),LST1^LRWRKLS1
"RTN","LRWRKLST",214,0)
 Q
"RTN","LRWRKLST",215,0)
 ;
"RTN","LRWRKLST",216,0)
HED ;
"RTN","LRWRKLST",217,0)
 W @IOF,!,"LONG FORM",?30,"NOT FOR WARD USE",!
"RTN","LRWRKLST",218,0)
 W "Accession Area: ",LRNAME,?40,LRDT,!!
"RTN","LRWRKLST",219,0)
 S LN=4
"RTN","LRWRKLST",220,0)
 Q
"RTN","LRWRKLST",221,0)
 ;
"RTN","LRWRKLST",222,0)
AC ;
"RTN","LRWRKLST",223,0)
 I LRSTOP!LREND Q
"RTN","LRWRKLST",224,0)
 ;
"RTN","LRWRKLST",225,0)
 S LRTK=LRSTAR-.00001
"RTN","LRWRKLST",226,0)
 F  S LRTK=$O(^LRO(68,LRAA,1,LRAD,1,"E",LRTK)) Q:LRTK<1!(LRTK\1>LRLAST)  D  Q:LRSTOP
"RTN","LRWRKLST",227,0)
 . S LRAN=0
"RTN","LRWRKLST",228,0)
 . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,"E",LRTK,LRAN)) Q:LRAN<1!(LRSTOP)  D
"RTN","LRWRKLST",229,0)
 . . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) Q
"RTN","LRWRKLST",230,0)
 . . S LREND=0 D TD
"RTN","LRWRKLST",231,0)
 . . I LREND Q
"RTN","LRWRKLST",232,0)
 . . D LST,TESTS
"RTN","LRWRKLST",233,0)
 Q
"RTN","LRWRKLST",234,0)
 ;
"RTN","LRWRKLST",235,0)
 ;
"RTN","LRWRKLST",236,0)
LREND ;
"RTN","LRWRKLST",237,0)
 D KVAR^VADPT
"RTN","LRWRKLST",238,0)
 K %,%DT,%ZIS
"RTN","LRWRKLST",239,0)
 K LN,LRA,AGE,DFN,DIC,DIR,DIRUT,DOB,DTOUT,DUOUT,K,LAST
"RTN","LRWRKLST",240,0)
 K LRACC,LRDLA,LRDLC,LRDX,LRI,LRLO69,LRSAMP,LRSPEC
"RTN","LRWRKLST",241,0)
 K LRURG,LRWRD,LRACO,DIC,LRUNC,LRDAT,LRAA,LRAD
"RTN","LRWRKLST",242,0)
 K LRNAC,LRAN,LRCE,LRDPF,LRSN,LRDTO,LRLAST,LRPRAC,LRSTAR,LRXXX
"RTN","LRWRKLST",243,0)
 K LRB,LRLAN,LRDT,LREND,LRFAN,LRIX,LRNAME,LRTSE,LRTST
"RTN","LRWRKLST",244,0)
 K LRDFN,LREDT,LRLLOC,LRSDT,LRTK,LRWDTL,POP,LRSTOP
"RTN","LRWRKLST",245,0)
 K PNM,SEX,SSN,X,X1,X2,Y,Z,ZTSK
"RTN","LRWRKLST",246,0)
 Q
"RTN","LRWRKLST",247,0)
 ;
"RTN","LRWRKLST",248,0)
 ;
"RTN","LRWRKLST",249,0)
EN ;
"RTN","LRWRKLST",250,0)
SINGLE ;
"RTN","LRWRKLST",251,0)
 ;
"RTN","LRWRKLST",252,0)
 N LRAA,LRACC,LRAD,LRAN,LREND,LRSTOP,LRTSE,LRUNC,LRURG
"RTN","LRWRKLST",253,0)
 ;
"RTN","LRWRKLST",254,0)
 D URG^LRX
"RTN","LRWRKLST",255,0)
 ;
"RTN","LRWRKLST",256,0)
 F  D  Q:LREND!LRSTOP
"RTN","LRWRKLST",257,0)
 . S (LREND,LRUNC,LRSTOP,LRTSE)=0
"RTN","LRWRKLST",258,0)
 . S LRACC="" D ^LRWU4
"RTN","LRWRKLST",259,0)
 . I LRAN<1 S LREND=1 Q
"RTN","LRWRKLST",260,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W !,"Doesn't exist." Q
"RTN","LRWRKLST",261,0)
 . D TD,LST1^LRWRKLS1,TESTS
"RTN","LRWRKLST",262,0)
 . W !
"RTN","LRWRKLST",263,0)
 ;
"RTN","LRWRKLST",264,0)
 D LREND
"RTN","LRWRKLST",265,0)
 Q
"RTN","LRWRKLST",266,0)
 ;
"RTN","LRWRKLST",267,0)
 ;
"RTN","LRWRKLST",268,0)
LR60DN(LRDN,LR60,LRTST) ; Retreive CH subscript dataname for a test
"RTN","LRWRKLST",269,0)
 N LRX,LRY
"RTN","LRWRKLST",270,0)
 ;
"RTN","LRWRKLST",271,0)
 S LRX=$P($G(^LAB(60,LR60,.2)),"^")
"RTN","LRWRKLST",272,0)
 I LRX>0 S LRDN(LRX)="" Q
"RTN","LRWRKLST",273,0)
 ;
"RTN","LRWRKLST",274,0)
 ; Expand and check panel tests
"RTN","LRWRKLST",275,0)
 S LRY=0
"RTN","LRWRKLST",276,0)
 F  S LRY=$O(^LAB(60,LR60,2,LRY)) Q:LRY<1  D
"RTN","LRWRKLST",277,0)
 . S LRY(0)=$P($G(^LAB(60,LR60,2,LRY,0)),"^")
"RTN","LRWRKLST",278,0)
 . I LRY(0)<1 Q
"RTN","LRWRKLST",279,0)
 . I $D(LRTST(LRY(0))) Q  ; test on panel also on accession as individual test
"RTN","LRWRKLST",280,0)
 . D LR60DN(.LRDN,LRY(0))
"RTN","LRWRKLST",281,0)
 ;
"RTN","LRWRKLST",282,0)
 Q
"RTN","LRWU4")
0^120^B32373640
"RTN","LRWU4",1,0)
LRWU4 ;DALOI/RWF - READ ACCESSION ;10/28/10  17:22
"RTN","LRWU4",2,0)
 ;;5.2;LAB SERVICE;**128,153,201,271,402,350**;Sep 27, 1994;Build 230
"RTN","LRWU4",3,0)
 ;
"RTN","LRWU4",4,0)
 ; Reference to ^DISV("LRACC") global supported by DBIA #510
"RTN","LRWU4",5,0)
 ;
"RTN","LRWU4",6,0)
 ; Variable LRVBY set/used by routine LRVER to determine if user
"RTN","LRWU4",7,0)
 ; verifying by accession or UID.
"RTN","LRWU4",8,0)
 ; If variable LRVBY evaluates to 1 then only select by accession.
"RTN","LRWU4",9,0)
 ; If LRVBY<1 or undefined then lookup also by UID.
"RTN","LRWU4",10,0)
 ;
"RTN","LRWU4",11,0)
 ; NOTE: variable LRACC if defined ($D(LRACC)) will require user to select accession area, date and number.
"RTN","LRWU4",12,0)
 ;       if not defined then user is allowed to select accession area and date - used by some verifying options
"RTN","LRWU4",13,0)
 ;       to select area and date then cycle through accession numbers for that area.
"RTN","LRWU4",14,0)
EN ;
"RTN","LRWU4",15,0)
 N LRSCR
"RTN","LRWU4",16,0)
 S LRSCR=""
"RTN","LRWU4",17,0)
 ;
"RTN","LRWU4",18,0)
 ;
"RTN","LRWU4",19,0)
SCR ; Screened entry point, called by ENA below
"RTN","LRWU4",20,0)
 ;
"RTN","LRWU4",21,0)
 N %,DIC,DIR,DIRUT,DUOUT,DTOUT,LRQUIT,LRX,X1,X2,X3
"RTN","LRWU4",22,0)
 K LRNATURE
"RTN","LRWU4",23,0)
 S U="^",DT=$$DT^XLFDT,LRQUIT=0
"RTN","LRWU4",24,0)
 F  D AA Q:LRQUIT
"RTN","LRWU4",25,0)
 Q
"RTN","LRWU4",26,0)
 ;
"RTN","LRWU4",27,0)
 ;
"RTN","LRWU4",28,0)
AA ;
"RTN","LRWU4",29,0)
 S DIR(0)="FO^1:30",DIR("A")="Select "_$S(LRSCR'="":LRSCR(0)_" ",1:"")_"Accession"_$S($G(LRVBY)=1:"",1:" or UID")
"RTN","LRWU4",30,0)
 S DIR("?")="^D QUES^LRWU4"
"RTN","LRWU4",31,0)
 D ^DIR
"RTN","LRWU4",32,0)
 I Y=""!$D(DIRUT) D QUIT Q
"RTN","LRWU4",33,0)
 S LRX=Y
"RTN","LRWU4",34,0)
 ;
"RTN","LRWU4",35,0)
 S:$L(LRX)>2 ^DISV(DUZ,"LRACC")=LRX
"RTN","LRWU4",36,0)
 S:LRX=" " LRX=$S($D(^DISV(DUZ,"LRACC")):^("LRACC"),1:"?")
"RTN","LRWU4",37,0)
 S (LRAA,LRAD,LRAN)=0
"RTN","LRWU4",38,0)
 ;
"RTN","LRWU4",39,0)
 ; see if entry is UID
"RTN","LRWU4",40,0)
 I $G(LRVBY)<1,$D(^LRO(68,"C",LRX)) D UNIV Q
"RTN","LRWU4",41,0)
 ;
"RTN","LRWU4",42,0)
 ; Parse and process user input.
"RTN","LRWU4",43,0)
 S (X1,X2,X3)="",X1=$P(LRX," ",1),X2=$P(LRX," ",2),X3=$P(LRX," ",3)
"RTN","LRWU4",44,0)
 S:X3=""&(+X2=X2) X3=X2,X2=""
"RTN","LRWU4",45,0)
 I X1'?1A.ANP D QUES Q
"RTN","LRWU4",46,0)
 S LRAA=$O(^LRO(68,"B",X1,0))
"RTN","LRWU4",47,0)
 I LRAA,LRSCR'="",$P(^LRO(68,LRAA,0),"^",2)'=LRSCR S LRAA=0
"RTN","LRWU4",48,0)
 I LRAA<1 D WLQUES Q:LRAA<1
"RTN","LRWU4",49,0)
 S %=$P(^LRO(68,LRAA,0),U,14)
"RTN","LRWU4",50,0)
 S %=$$LKUP^XPDKEY(%)
"RTN","LRWU4",51,0)
 I %'="",'$D(^XUSEC(%,DUZ)) D WLQUES Q:LRAA<1
"RTN","LRWU4",52,0)
 ;
"RTN","LRWU4",53,0)
 S LRX=$G(^LRO(68,LRAA,0)),LRIDIV=$S($P(LRX,U,19)'="":$P(LRX,U,19),1:"CP")
"RTN","LRWU4",54,0)
 W !,$P(LRX,U)
"RTN","LRWU4",55,0)
 ;
"RTN","LRWU4",56,0)
 ; User entered only accession area identifier, no date or number
"RTN","LRWU4",57,0)
 I X2="",X3="" D
"RTN","LRWU4",58,0)
 . N %DT
"RTN","LRWU4",59,0)
 . S %DT="AEP",%DT("A")="  Accession Date: ",%DT("B")="TODAY"
"RTN","LRWU4",60,0)
 . D DATE^LRWU
"RTN","LRWU4",61,0)
 . I $D(DUOUT) D QUIT Q
"RTN","LRWU4",62,0)
 . I Y<1 D QUES Q
"RTN","LRWU4",63,0)
 . S LRAD=Y
"RTN","LRWU4",64,0)
 I LRQUIT Q
"RTN","LRWU4",65,0)
 ;
"RTN","LRWU4",66,0)
 ; Convert middle value to FileMan date
"RTN","LRWU4",67,0)
 ; Adjust for monthly and quarterly formats (MM00) if user enters 4 digit
"RTN","LRWU4",68,0)
 ; number as middle part of accession then convert to appropriate date.
"RTN","LRWU4",69,0)
 I LRAD<1 D
"RTN","LRWU4",70,0)
 . N %DT
"RTN","LRWU4",71,0)
 . I X2="" S X2=DT
"RTN","LRWU4",72,0)
 . I X2?4N D
"RTN","LRWU4",73,0)
 . . S X2=$E(DT,1,3)_X2
"RTN","LRWU4",74,0)
 . . I X2>DT S X2=X2-10000
"RTN","LRWU4",75,0)
 . S %DT="EP",X=X2
"RTN","LRWU4",76,0)
 . D ^%DT
"RTN","LRWU4",77,0)
 . I Y>0 S LRAD=Y Q
"RTN","LRWU4",78,0)
 . D QUES
"RTN","LRWU4",79,0)
 I LRAD<1 Q
"RTN","LRWU4",80,0)
 ;
"RTN","LRWU4",81,0)
 ; Convert date entered to appropriate date for accession area transform
"RTN","LRWU4",82,0)
 S X=$P(^LRO(68,LRAA,0),U,3)
"RTN","LRWU4",83,0)
 S LRAD=$S("D"[X:LRAD,X="Y":$E(LRAD,1,3)_"0000","M"[X:$E(LRAD,1,5)_"00","Q"[X:$E(LRAD,1,3)_"0000"+(($E(LRAD,4,5)-1)\3*300+100),1:LRAD)
"RTN","LRWU4",84,0)
 W:X3>0 "  ",+X3
"RTN","LRWU4",85,0)
 ;
"RTN","LRWU4",86,0)
 I X3="",$D(LRACC) D
"RTN","LRWU4",87,0)
 . N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","LRWU4",88,0)
 . S DIR(0)="NO^1:999999",DIR("A")="  Number part of Accession"
"RTN","LRWU4",89,0)
 . D ^DIR
"RTN","LRWU4",90,0)
 . I Y=""!$D(DIRUT) Q
"RTN","LRWU4",91,0)
 . S X3=Y
"RTN","LRWU4",92,0)
 ;
"RTN","LRWU4",93,0)
 I X3="",$D(LRACC) D QUIT Q
"RTN","LRWU4",94,0)
 S LRAN=+X3
"RTN","LRWU4",95,0)
 I LRAN<1,$D(LRACC) D QUES Q
"RTN","LRWU4",96,0)
 I $D(LRACC),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRWU4",97,0)
 . W !,"ACCESSION: ",$P(^LRO(68,LRAA,0),U,11)," ",$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))," ",LRAN," DOES NOT EXIST!"
"RTN","LRWU4",98,0)
 ;
"RTN","LRWU4",99,0)
 S LRQUIT=1
"RTN","LRWU4",100,0)
 Q
"RTN","LRWU4",101,0)
 ;
"RTN","LRWU4",102,0)
 ;
"RTN","LRWU4",103,0)
QUIT ;
"RTN","LRWU4",104,0)
 S (LRAN,LRAA,LRAD)=-1
"RTN","LRWU4",105,0)
END ;
"RTN","LRWU4",106,0)
 K X1,X2,X3,%DT,DIC,LRIDIV
"RTN","LRWU4",107,0)
 S LRQUIT=1
"RTN","LRWU4",108,0)
 Q
"RTN","LRWU4",109,0)
 ;
"RTN","LRWU4",110,0)
 ;
"RTN","LRWU4",111,0)
ENA(LRSCR) ; Alternate entry to pass in file 63 subscript value to screen accession areas.
"RTN","LRWU4",112,0)
 ; Used for MI and AP accession lookup.
"RTN","LRWU4",113,0)
 ;
"RTN","LRWU4",114,0)
 S LRSCR(0)=$$EXTERNAL^DILFD(68,.02,"",LRSCR)
"RTN","LRWU4",115,0)
 D SCR
"RTN","LRWU4",116,0)
 Q
"RTN","LRWU4",117,0)
 ;
"RTN","LRWU4",118,0)
 ;
"RTN","LRWU4",119,0)
UNIV ; see if entry is UID
"RTN","LRWU4",120,0)
 N LRY
"RTN","LRWU4",121,0)
 S LRY=$$CHECKUID(LRX,LRSCR)
"RTN","LRWU4",122,0)
 I 'LRY S (LRAA,LRAD,LRAN)=0 D QUES Q
"RTN","LRWU4",123,0)
 S LRAA=$P(LRY,"^",2),LRAD=$P(LRY,"^",3),LRAN=$P(LRY,"^",4)
"RTN","LRWU4",124,0)
 S LRQUIT=1
"RTN","LRWU4",125,0)
 W "  (",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^"),")"
"RTN","LRWU4",126,0)
 Q
"RTN","LRWU4",127,0)
 ;
"RTN","LRWU4",128,0)
 ;
"RTN","LRWU4",129,0)
QUES ;
"RTN","LRWU4",130,0)
 W $C(7),!,"Enter the accession number",$S($G(LRVBY)<1:" or the unique identifier (UID)",1:""),"."
"RTN","LRWU4",131,0)
 W !,"If entering the accession number, enter in this format:"
"RTN","LRWU4",132,0)
 W !?5," <ACCESSION AREA> <DATE> <NUMBER>"
"RTN","LRWU4",133,0)
 W !?5," ie.  CH 0426 125 or CH 125 or CH T 125",!?5," or if it's a yearly accession area ie. MICRO 85 30173"
"RTN","LRWU4",134,0)
 I LRSCR'="" W !,?5," Only accessions from subscript ",LRSCR(0)," are selectable."
"RTN","LRWU4",135,0)
 W:'$D(LRACC) !?5," or just the Accession area, or area and date."
"RTN","LRWU4",136,0)
 W:$D(LRACC) !?5," Must include the Accession area and the final number part."
"RTN","LRWU4",137,0)
 I $G(LRVBY)<1 W !,"If entering the UID, enter the entire 10-15 characters."
"RTN","LRWU4",138,0)
 Q
"RTN","LRWU4",139,0)
 ;
"RTN","LRWU4",140,0)
 ;
"RTN","LRWU4",141,0)
WLQUES ; Ask user if accession area enter does not match any existing entries
"RTN","LRWU4",142,0)
 N DIC,X
"RTN","LRWU4",143,0)
 S X=X1,DIC="^LRO(68,",DIC(0)="EMOQ"
"RTN","LRWU4",144,0)
 S DIC("S")="Q:$D(LREXMPT)  S %=$P(^(0),U,14) X ""I '$L(%)"" Q:$T  S %=$$LKUP^XPDKEY(%) I $D(^XUSEC(%,DUZ))"
"RTN","LRWU4",145,0)
 I LRSCR'="" S DIC("S")="I $P(^(0),U,2)=LRSCR "_DIC("S")
"RTN","LRWU4",146,0)
 W !,X
"RTN","LRWU4",147,0)
 D ^DIC S LRAA=+Y
"RTN","LRWU4",148,0)
 Q
"RTN","LRWU4",149,0)
 ;
"RTN","LRWU4",150,0)
 ;
"RTN","LRWU4",151,0)
SELBY(LRX1,LRX2) ; Select by accession number or unique identifier (UID)
"RTN","LRWU4",152,0)
 ; Call with LRX1 = message prompt
"RTN","LRWU4",153,0)
 ;           LRX2 = default method
"RTN","LRWU4",154,0)
 ;  Returns     Y = 0 (abort), 1 (accession number),  2 (unique identifier)
"RTN","LRWU4",155,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRWU4",156,0)
 I $G(LRX1)="" S LRX1="Select UID"
"RTN","LRWU4",157,0)
 I $G(LRX2)<1 S LRX2=1
"RTN","LRWU4",158,0)
 S DIR(0)="SO^1:Accession Number;2:Unique Identifier (UID)",DIR("A")=LRX1,DIR("B")=LRX2
"RTN","LRWU4",159,0)
 D ^DIR
"RTN","LRWU4",160,0)
 I $D(DIRUT) S Y=0
"RTN","LRWU4",161,0)
 Q Y
"RTN","LRWU4",162,0)
 ;
"RTN","LRWU4",163,0)
 ;
"RTN","LRWU4",164,0)
UID(LRX,LRY) ; Lookup accession by UID
"RTN","LRWU4",165,0)
 ; Call with LRX = message prompt
"RTN","LRWU4",166,0)
 ;           LRY = default UID to display
"RTN","LRWU4",167,0)
 ;     Returns Y = 0 (abort)
"RTN","LRWU4",168,0)
 ;               = UID
"RTN","LRWU4",169,0)
 ;
"RTN","LRWU4",170,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRWU4",171,0)
 ;
"RTN","LRWU4",172,0)
 S LRX=$G(LRX,"Select UID")
"RTN","LRWU4",173,0)
 S DIR(0)="F^10:15^K:'$D(^LRO(68,""C"",X)) X"
"RTN","LRWU4",174,0)
 S DIR("A")=LRX,DIR("?")="Enter the full 10-15 character UID."
"RTN","LRWU4",175,0)
 I $G(LRY)'="" S DIR("B")=LRY
"RTN","LRWU4",176,0)
 D ^DIR
"RTN","LRWU4",177,0)
 I $D(DIRUT) S Y=0
"RTN","LRWU4",178,0)
 Q Y
"RTN","LRWU4",179,0)
 ;
"RTN","LRWU4",180,0)
 ;
"RTN","LRWU4",181,0)
CHECKUID(LRX,LRSCR) ; Check if UID is valid, accession exists.
"RTN","LRWU4",182,0)
 ; Call with LRX = UID to check
"RTN","LRWU4",183,0)
 ;         LRSCR = subscript screen
"RTN","LRWU4",184,0)
 ;     Returns Y = 0 (accession does not exist)
"RTN","LRWU4",185,0)
 ;               = 1 (accession exists)^area^date^number
"RTN","LRWU4",186,0)
 ;
"RTN","LRWU4",187,0)
 N LRY,Y
"RTN","LRWU4",188,0)
 ;
"RTN","LRWU4",189,0)
 S LRY=0,LRSCR=$G(LRSCR)
"RTN","LRWU4",190,0)
 S Y=$Q(^LRO(68,"C",LRX))
"RTN","LRWU4",191,0)
 I Y'="",$QS(Y,3)=LRX,+$QS(Y,4),+$QS(Y,5),+$QS(Y,6) D
"RTN","LRWU4",192,0)
 . I LRSCR'="",LRSCR'=$P(^LRO(68,$QS(Y,4),0),"^",2) Q
"RTN","LRWU4",193,0)
 . I '$D(^LRO(68,+$QS(Y,4),1,+$QS(Y,5),1,+$QS(Y,6),0)) Q
"RTN","LRWU4",194,0)
 . S LRY=1_"^"_$QS(Y,4)_"^"_$QS(Y,5)_"^"_+$QS(Y,6)
"RTN","LRWU4",195,0)
 Q LRY
"RTN","LRWU6")
0^214^B22920488
"RTN","LRWU6",1,0)
LRWU6 ;DALOI/STAFF - MODIFY AN EXISTING DATA NAME ;11/04/11  10:19
"RTN","LRWU6",2,0)
 ;;5.2;LAB SERVICE;**316,402,350**;Sep 27, 1994;Build 230
"RTN","LRWU6",3,0)
 ;
"RTN","LRWU6",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRWU6",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRWU6",6,0)
 ;
"RTN","LRWU6",7,0)
 ;
"RTN","LRWU6",8,0)
ACCESS ;
"RTN","LRWU6",9,0)
 N %,DA,DIC,DIK,I,LRDEC,LRFIX,LRHI,LRLO,LRMAX,LRMIN,LRNAME,LROK,LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y
"RTN","LRWU6",10,0)
 ;
"RTN","LRWU6",11,0)
 ;ZEXCEPT: DTIME
"RTN","LRWU6",12,0)
 ;
"RTN","LRWU6",13,0)
 I '$D(^XUSEC("LRLIASON",DUZ)) W $C(7),!,"You do not have access to this option" Q
"RTN","LRWU6",14,0)
 ;
"RTN","LRWU6",15,0)
BEGIN ;
"RTN","LRWU6",16,0)
 S U="^",DTIME=$$DTIME^XUP(DUZ)
"RTN","LRWU6",17,0)
 W !!,"This option allows modifying an existing data name."
"RTN","LRWU6",18,0)
 D DT^LRX,TEST
"RTN","LRWU6",19,0)
 ;
"RTN","LRWU6",20,0)
END K %,DA,DIC,DIK,I,LRDEC,LRHI,LRLO,LRMAX,LRMIN,LRNAME,LROK,LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y
"RTN","LRWU6",21,0)
 Q
"RTN","LRWU6",22,0)
 ;
"RTN","LRWU6",23,0)
 ;
"RTN","LRWU6",24,0)
TEST ;
"RTN","LRWU6",25,0)
 ;
"RTN","LRWU6",26,0)
 ;ZEXCEPT: %,DA,DIC,DIK,LRFIX,LRNAME,LROK,Q1,X,Y
"RTN","LRWU6",27,0)
 ;
"RTN","LRWU6",28,0)
 S LROK=1,DIC="^DD(63.04,",DIC(0)="AEM",DIC("S")="I Y>1.999999"
"RTN","LRWU6",29,0)
 D ^DIC Q:Y'>0
"RTN","LRWU6",30,0)
 S DA=+Y,LRNAME=$P(^DD(63.04,DA,0),U)
"RTN","LRWU6",31,0)
 ;
"RTN","LRWU6",32,0)
 D DISPLAY
"RTN","LRWU6",33,0)
 W !
"RTN","LRWU6",34,0)
 F  W !,"Do you wish to modify this data name" S %=2 D YN^DICN Q:%  W "Answer 'Y'es or 'N'o"
"RTN","LRWU6",35,0)
 Q:%'=1
"RTN","LRWU6",36,0)
 ;
"RTN","LRWU6",37,0)
 F  W !,"Enter data type for ",LRNAME,": (N)umeric, (S)et of Codes, or (F)ree text? " R X:DTIME Q:X[U!(X="")!(X="N")!(X="S")!(X="F")  W !,"Enter 'N', 'S', 'F', or '^'"
"RTN","LRWU6",38,0)
 I X=""!(X[U) Q
"RTN","LRWU6",39,0)
 ;
"RTN","LRWU6",40,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316;ADDED H 5 SO USER CAN SEE ERROR MSG
"RTN","LRWU6",41,0)
 S Q1=X D @$S(Q1="N":"NUM^LRWU5",Q1="S":"CODES^LRWU5",1:"FREE^LRWU5") I 'LROK W !,"Nothing has been changed." H 5 Q
"RTN","LRWU6",42,0)
 ;
"RTN","LRWU6",43,0)
DDFIX ;Called from LRWU9 to fix piece position of data name
"RTN","LRWU6",44,0)
 N LRSPACE
"RTN","LRWU6",45,0)
 S $P(LRSPACE," ",80)=""
"RTN","LRWU6",46,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX2^DIK
"RTN","LRWU6",47,0)
 I $G(LRFIX) S $P(^DD(63.04,DA,0),U,4)=DA_";1"
"RTN","LRWU6",48,0)
 ;
"RTN","LRWU6",49,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX1^DIK
"RTN","LRWU6",50,0)
 I $G(LRFIX) D
"RTN","LRWU6",51,0)
 .Q:+$G(INSTALL)
"RTN","LRWU6",52,0)
 .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",53,0)
 .D SAY^XGF(24,1,"'"_LRNAME_"' has been modified to:")
"RTN","LRWU6",54,0)
 E  W:'+$G(INSTALL) !!,"'",LRNAME,"' has been modified to:"
"RTN","LRWU6",55,0)
 D:'+$G(INSTALL) DISPLAY
"RTN","LRWU6",56,0)
 Q
"RTN","LRWU6",57,0)
 ;
"RTN","LRWU6",58,0)
 ;
"RTN","LRWU6",59,0)
DISPLAY ;
"RTN","LRWU6",60,0)
 ;
"RTN","LRWU6",61,0)
 ;ZEXCEPT: DA,LRTYPE
"RTN","LRWU6",62,0)
 ;
"RTN","LRWU6",63,0)
 S LRTYPE=$P(^DD(63.04,DA,0),U,2) D @$S(LRTYPE["N":"NUM",LRTYPE["S":"SET",1:"FREE")
"RTN","LRWU6",64,0)
 Q
"RTN","LRWU6",65,0)
 ;
"RTN","LRWU6",66,0)
 ;
"RTN","LRWU6",67,0)
NUM ; Numeric data type
"RTN","LRWU6",68,0)
 ;
"RTN","LRWU6",69,0)
 ;ZEXCEPT: DA,LRDEC,LRHI,LRLO,LRNAME,Q1,Q2
"RTN","LRWU6",70,0)
 ;
"RTN","LRWU6",71,0)
 S Q2=$P(^DD(63.04,DA,0),U,5,99)
"RTN","LRWU6",72,0)
 I $G(LRFIX) D
"RTN","LRWU6",73,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",74,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: NUMERIC  Input Transform: "_Q2)
"RTN","LRWU6",75,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: NUMERIC",!,"Input Transform: ",Q2
"RTN","LRWU6",76,0)
 I Q2["S Q9=" S Q1=$P($P(Q2,"S Q9=",2),"""",2),LRLO=$P(Q1,","),LRHI=$P(Q1,",",2),LRDEC=$P(Q1,",",3)
"RTN","LRWU6",77,0)
 I Q2'["S Q9=" S LRLO=$S(Q2["X<":+$P(Q2,"X<",2),1:""),LRHI=$S(Q2["X>":+$P(Q2,"X>",2),1:""),LRDEC=$S(Q2["X?.E1"".""":-1+$P(Q2,"X?.E1"".""",2),1:"")
"RTN","LRWU6",78,0)
 I $G(LRFIX) D
"RTN","LRWU6",79,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",80,0)
  .D SAY^XGF(24,1,"Minimum value: "_LRLO_"  Maximum value: "_LRHI_"  Maximum # decimal digits: "_LRDEC)
"RTN","LRWU6",81,0)
 E  W !,"Minimum value: ",LRLO,!,"Maximum value: ",LRHI,!,"Maximum # decimal digits: ",LRDEC
"RTN","LRWU6",82,0)
 Q
"RTN","LRWU6",83,0)
 ;
"RTN","LRWU6",84,0)
 ;
"RTN","LRWU6",85,0)
FREE ; Free Text datatype
"RTN","LRWU6",86,0)
 ;
"RTN","LRWU6",87,0)
 ;ZEXCEPT: DA,LRMAX,LRMIN,LRNAME,Q2
"RTN","LRWU6",88,0)
 ;
"RTN","LRWU6",89,0)
 S Q2=$P(^DD(63.04,DA,0),U,5,99)
"RTN","LRWU6",90,0)
 I $G(LRFIX) D
"RTN","LRWU6",91,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",92,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: FREE TEXT  Input Transform: "_Q2)
"RTN","LRWU6",93,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: FREE TEXT",!,"Input Transform: ",Q2
"RTN","LRWU6",94,0)
 S LRMIN=$S(Q2["$L(X)<":+$P(Q2,"$L(X)<",2),1:""),LRMAX=$S(Q2["$L(X)>":+$P(Q2,"$L(X)>",2),1:"")
"RTN","LRWU6",95,0)
 I $G(LRFIX) D
"RTN","LRWU6",96,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",97,0)
  .D SAY^XGF(24,1,"Minimum length: "_LRMIN_"  Maximum length: "_LRMAX)
"RTN","LRWU6",98,0)
 E  W !,"Minimum length: ",LRMIN,!,"Maximum length: ",LRMAX
"RTN","LRWU6",99,0)
 Q
"RTN","LRWU6",100,0)
 ;
"RTN","LRWU6",101,0)
 ;
"RTN","LRWU6",102,0)
SET ; Set of codes data type
"RTN","LRWU6",103,0)
 ;
"RTN","LRWU6",104,0)
 ;ZEXCEPT: DA,LRNAME,LRPIECE,LRSET,Q2
"RTN","LRWU6",105,0)
 ;
"RTN","LRWU6",106,0)
 S Q2=$P(^DD(63.04,DA,0),U,3)
"RTN","LRWU6",107,0)
 I $G(LRFIX) D
"RTN","LRWU6",108,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",109,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: SET OF CODES")
"RTN","LRWU6",110,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: SET OF CODES"
"RTN","LRWU6",111,0)
 F LRPIECE=1:1 S LRSET=$P(Q2,";",LRPIECE) Q:LRSET'[":"  D
"RTN","LRWU6",112,0)
  .I $G(LRFIX) D
"RTN","LRWU6",113,0)
   ..D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",114,0)
   ..D SAY^XGF(24,1,$P(LRSET,":")_" - "_$P(LRSET,":",2))
"RTN","LRWU6",115,0)
  .E  W !,$P(LRSET,":"),"  -  ",$P(LRSET,":",2)
"RTN","LRWU6",116,0)
 Q
"RTN","LRWU6",117,0)
 ;
"RTN","LRWU6",118,0)
 ;
"RTN","LRWU6",119,0)
FIX ;
"RTN","LRWU6",120,0)
 ;
"RTN","LRWU6",121,0)
 ;ZEXCEPT: I,N,O,P,T
"RTN","LRWU6",122,0)
 ;
"RTN","LRWU6",123,0)
 S P=0
"RTN","LRWU6",124,0)
 F  S P=$O(^LR(P)) Q:P<1  S T=0 F  S T=$O(^LR(P,"CH",T)) Q:T<1  I $D(^LR(P,"CH",T,O))&('$D(^(N))) S ^(N)=^(O) K ^(O) W "."
"RTN","LRWU6",125,0)
 K P,T,O,N,I
"RTN","LRWU6",126,0)
 Q
"RTN","LRWU7")
0^91^B33901774
"RTN","LRWU7",1,0)
LRWU7 ;DALOI/JMC - ADD A NEW ANTIBIOTIC TO FILE 63 ;04/02/09  09:59
"RTN","LRWU7",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRWU7",3,0)
 ;
"RTN","LRWU7",4,0)
 ; Reference to ^DD supported by ICR #29/999
"RTN","LRWU7",5,0)
 ;
"RTN","LRWU7",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRWU7",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRWU7",8,0)
 ;
"RTN","LRWU7",9,0)
ACCESS ;
"RTN","LRWU7",10,0)
 N LRX
"RTN","LRWU7",11,0)
 D OWNSKEY^XUSRB(.LRX,"LRLIASON",DUZ)
"RTN","LRWU7",12,0)
 I LRX(0)'=1 D  Q
"RTN","LRWU7",13,0)
 . D EN^DDIOL("You do not have proper access for using this option.","","!?2")
"RTN","LRWU7",14,0)
 ;
"RTN","LRWU7",15,0)
BEGIN ;
"RTN","LRWU7",16,0)
 ;
"RTN","LRWU7",17,0)
 ;ZEXCEPT: DTIME - Kernel variable which can be set by applications via API
"RTN","LRWU7",18,0)
 ;
"RTN","LRWU7",19,0)
 N %,I,DA,DIC,DIK,DIR,DIROUT,DIRUT,DTOUT,LR4,LRINC,LRNAME,LRNAME1,LRNAME2,LRNUM,LRNUM1,LRNUM2,LROK,LRSITE,LRSUBFIL,LRTYPE,LRY,X,Y
"RTN","LRWU7",20,0)
 S U="^",DTIME=$$DTIME^XUP(DUZ),DT=$$DT^XLFDT,LROK=1
"RTN","LRWU7",21,0)
 S LR4=$$KSP^XUPARAM("INST")
"RTN","LRWU7",22,0)
 S LRSITE=$$STA^XUAF4(LR4)
"RTN","LRWU7",23,0)
 I 'LRSITE D  Q
"RTN","LRWU7",24,0)
 . N A
"RTN","LRWU7",25,0)
 . S A(1)="Your site number is not defined, indicating that FileMan was not",A(1,"F")="!"
"RTN","LRWU7",26,0)
 . S A(2)="installed correctly.  Contact your site manager!",A(2,"F")="!"
"RTN","LRWU7",27,0)
 . D EN^DDIOL(.A)
"RTN","LRWU7",28,0)
 ;
"RTN","LRWU7",29,0)
 S DIR(0)="S^1:Bacterial Antibiotic;2:Mycobacterium Antibiotic"
"RTN","LRWU7",30,0)
 S DIR("A")="Select Antibiotic Type to Add",DIR("B")=1
"RTN","LRWU7",31,0)
 D ^DIR
"RTN","LRWU7",32,0)
 I $D(DIRUT) D END Q
"RTN","LRWU7",33,0)
 S LRTYPE=Y,LRSUBFIL=$S(LRTYPE=1:63.3,LRTYPE=2:63.39,1:"")
"RTN","LRWU7",34,0)
 ;
"RTN","LRWU7",35,0)
 D NAME
"RTN","LRWU7",36,0)
 I 'LROK D END Q
"RTN","LRWU7",37,0)
 D NUMBER,SETUP,END
"RTN","LRWU7",38,0)
 Q
"RTN","LRWU7",39,0)
 ;
"RTN","LRWU7",40,0)
 ;
"RTN","LRWU7",41,0)
END ; Cleanup before quiting
"RTN","LRWU7",42,0)
 ;
"RTN","LRWU7",43,0)
 ;ZEXCEPT: %,DA,DIC,DIK,I,LRINC,LRNAME,LRNAME1,LRNAME2,LRNUM,LRNUM1,LRNUM2,LROK,LRSITE,X
"RTN","LRWU7",44,0)
 ;
"RTN","LRWU7",45,0)
 K %,I,DA,DIC,DIK,LRINC,LRNAME,LRNAME1,LRNAME2,LRNUM,LRNUM1,LRNUM2,LROK,LRSITE,X
"RTN","LRWU7",46,0)
 Q
"RTN","LRWU7",47,0)
 ;
"RTN","LRWU7",48,0)
 ;
"RTN","LRWU7",49,0)
NAME ; Prompt user for the name of the new antibiotic to be added.
"RTN","LRWU7",50,0)
 ;
"RTN","LRWU7",51,0)
 ;ZEXCEPT: LRNAME,LRNAME1,LRNAME2,LROK - used by calling process
"RTN","LRWU7",52,0)
 ;
"RTN","LRWU7",53,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,Y
"RTN","LRWU7",54,0)
 S DIR(0)="FO^3:20^D CHECK^LRWU7"
"RTN","LRWU7",55,0)
 S DIR("A")="Enter the name of the new antibiotic you wish to create"
"RTN","LRWU7",56,0)
 D ^DIR
"RTN","LRWU7",57,0)
 I $D(DIRUT) S LROK=0 Q
"RTN","LRWU7",58,0)
 S LROK=1,LRNAME=Y,LRNAME1=LRNAME_" INTERP",LRNAME2=LRNAME_" SCREEN"
"RTN","LRWU7",59,0)
 Q
"RTN","LRWU7",60,0)
 ;
"RTN","LRWU7",61,0)
 ;
"RTN","LRWU7",62,0)
CHECK ; Check if field already exists for the same name.
"RTN","LRWU7",63,0)
 ;
"RTN","LRWU7",64,0)
 ;ZEXCEPT: LROK,LRSUBFIL,X - set by calling process
"RTN","LRWU7",65,0)
 ;
"RTN","LRWU7",66,0)
 D EN^DDIOL("Checking if field exists...","","!!")
"RTN","LRWU7",67,0)
 S X=$$UP^XLFSTR(X)
"RTN","LRWU7",68,0)
 I '$$FLDNUM^DILFD(LRSUBFIL,X) D EN^DDIOL("OK","","?1") Q
"RTN","LRWU7",69,0)
 D EN^DDIOL($C(7)_X_" already exists!","","?1")
"RTN","LRWU7",70,0)
 S LROK=0 K X
"RTN","LRWU7",71,0)
 Q
"RTN","LRWU7",72,0)
 ;
"RTN","LRWU7",73,0)
 ;
"RTN","LRWU7",74,0)
NUMBER ; Determine the next field number by checking existing fields.
"RTN","LRWU7",75,0)
 ;
"RTN","LRWU7",76,0)
 ;ZEXCEPT: LRINC,LRNUM,LRNUM1,LRNUM2,LRSITE,LRSUBFIL - set by calling process
"RTN","LRWU7",77,0)
 ;
"RTN","LRWU7",78,0)
 N LROK
"RTN","LRWU7",79,0)
 S LRNUM="2.00"_LRSITE,LRINC=$S($L(LRSITE)=3:.00000001,1:.000000001),LRNUM=LRNUM+LRINC,LROK=0
"RTN","LRWU7",80,0)
 ;
"RTN","LRWU7",81,0)
 F  D  Q:LROK
"RTN","LRWU7",82,0)
 . I '$$VFIELD^DILFD(LRSUBFIL,LRNUM),'$D(^DD(LRSUBFIL,"GL",LRNUM)) S LROK=1 Q
"RTN","LRWU7",83,0)
 . S LRNUM=LRNUM+LRINC
"RTN","LRWU7",84,0)
 ;
"RTN","LRWU7",85,0)
 S LRNUM1=+$S($L(LRSITE)=3:LRNUM+.000000001,1:LRNUM+.0000000001)
"RTN","LRWU7",86,0)
 S LRNUM2=+$S($L(LRSITE)=3:LRNUM+.000000002,1:LRNUM+.0000000002)
"RTN","LRWU7",87,0)
 S LRNUM=+LRNUM
"RTN","LRWU7",88,0)
 Q
"RTN","LRWU7",89,0)
 ;
"RTN","LRWU7",90,0)
 ;
"RTN","LRWU7",91,0)
SETUP ; Confirm creation of new antibiotic and setup corresponding fields in DD
"RTN","LRWU7",92,0)
 ;
"RTN","LRWU7",93,0)
 ;ZEXCEPT: LR6206,LRNAME,LRNUM,LRTYPE - set by calling process
"RTN","LRWU7",94,0)
 ;
"RTN","LRWU7",95,0)
 N A,DA,DIR,DIROUT,DIRUT,DTOUT,X,Y
"RTN","LRWU7",96,0)
 S DIR(0)="YO"
"RTN","LRWU7",97,0)
 S DIR("A")="Are you sure you wish to create "_LRNAME
"RTN","LRWU7",98,0)
 S DIR("A",1)=" (DRUG NODE will be "_LRNUM_")"
"RTN","LRWU7",99,0)
 S DIR("B")="NO"
"RTN","LRWU7",100,0)
 D ^DIR
"RTN","LRWU7",101,0)
 I $D(DIRUT) Q
"RTN","LRWU7",102,0)
 I Y<1 Q
"RTN","LRWU7",103,0)
 ;
"RTN","LRWU7",104,0)
 ; Create new field(s) in file #63 Data Dictionary
"RTN","LRWU7",105,0)
 D SETFLDS
"RTN","LRWU7",106,0)
 ;
"RTN","LRWU7",107,0)
 ; Ask if user wants to setupcorresponding entry in file #62.06
"RTN","LRWU7",108,0)
 S A(1)=LRNAME_" has now been created.",A(1,"F")="!!"
"RTN","LRWU7",109,0)
 S A(2)="You must now add a new antibiotic in the ANTIMICROBIAL SUSCEPTIBILITY file",A(2,"F")="!"
"RTN","LRWU7",110,0)
 S A(3)="and use "_LRNAME_" as the entry for the "_$S(LRTYPE=1:"",LRTYPE=2:"AFB ",1:"")_"INTERNAL NAME field.",A(3,"F")="!"
"RTN","LRWU7",111,0)
 D EN^DDIOL(.A)
"RTN","LRWU7",112,0)
 ;
"RTN","LRWU7",113,0)
 ;
"RTN","LRWU7",114,0)
 K DIR,DIROUT,DIRUT,DTOUT,X,Y
"RTN","LRWU7",115,0)
 S DIR(0)="YO"
"RTN","LRWU7",116,0)
 S DIR("A")="Do you want to setup "_LRNAME_" as a new "_$S(LRTYPE=1:"Bacterial",LRTYPE=2:"Mycobacterium",1:"")_" Antibiotic"
"RTN","LRWU7",117,0)
 S DIR("A",1)=" "
"RTN","LRWU7",118,0)
 S DIR("B")="NO"
"RTN","LRWU7",119,0)
 D ^DIR
"RTN","LRWU7",120,0)
 I $D(DIRUT) Q
"RTN","LRWU7",121,0)
 I Y<1 Q
"RTN","LRWU7",122,0)
 ;
"RTN","LRWU7",123,0)
 N FDA,LRDIE,LRIEN
"RTN","LRWU7",124,0)
 S FDA(1,62.06,"+1,",.01)=LRNAME
"RTN","LRWU7",125,0)
 D UPDATE^DIE("","FDA(1)","LRIEN","LRDIE(1)")
"RTN","LRWU7",126,0)
 S LR6206=LRIEN(1)
"RTN","LRWU7",127,0)
 I $D(LRDIE) D  Q
"RTN","LRWU7",128,0)
 . D EN^DDIOL("Encountered an error adding new antibiotic","","!?2")
"RTN","LRWU7",129,0)
 D DIE
"RTN","LRWU7",130,0)
 Q
"RTN","LRWU7",131,0)
 ;
"RTN","LRWU7",132,0)
 ;
"RTN","LRWU7",133,0)
SETFLDS ; Create the fields in the DD for bacterial and mycobacteria
"RTN","LRWU7",134,0)
 ;  LRSUBFIL = sub file # within MI subscript
"RTN","LRWU7",135,0)
 ;     LRNUM = field number of antibiotic field
"RTN","LRWU7",136,0)
 ;    LRNUM1 = field number of bacterial interpretation field
"RTN","LRWU7",137,0)
 ;    LRNUM2 = field number of bacterial screen field
"RTN","LRWU7",138,0)
 ;    LRNAME = field name for field LRNUM
"RTN","LRWU7",139,0)
 ;   LRNAME1 = field name for field LRNUM1
"RTN","LRWU7",140,0)
 ;   LRNAME2 = field name for field LRNUM2
"RTN","LRWU7",141,0)
 ;    LRTYPE = 1 (BACTERIAL) / 2 (MYCOBACTERIUM)
"RTN","LRWU7",142,0)
 ;
"RTN","LRWU7",143,0)
 ;
"RTN","LRWU7",144,0)
 ;ZEXCEPT: LRNAME,LRNAME1,LRNAME2,LRNUM,LRNUM1,LRNUM2,LRSUBFIL,LRTYPE - set by calling process
"RTN","LRWU7",145,0)
 ;
"RTN","LRWU7",146,0)
 N DA,DIK
"RTN","LRWU7",147,0)
 ; Setup antibiotic - bacterial and AFB.
"RTN","LRWU7",148,0)
 S ^DD(LRSUBFIL,LRNUM,0)=LRNAME_"^FX^^"_LRNUM_";1^"_$S(LRTYPE=1:"D ^LRMISR",LRTYPE=2:"D COM^LRMISR",1:"")
"RTN","LRWU7",149,0)
 S ^DD(LRSUBFIL,LRNUM,3)=""
"RTN","LRWU7",150,0)
 S ^DD(LRSUBFIL,LRNUM,4)=$S(LRTYPE=1:"D EN^LRMISR",LRTYPE=2:"D ZQ^LRMISR",1:"")
"RTN","LRWU7",151,0)
 S ^DD(LRSUBFIL,LRNUM,"DT")=DT
"RTN","LRWU7",152,0)
 ;
"RTN","LRWU7",153,0)
 ; Setup two additional fields used for bacterial antibiotics
"RTN","LRWU7",154,0)
 I LRTYPE=1 D
"RTN","LRWU7",155,0)
 . S ^DD(LRSUBFIL,LRNUM1,0)=LRNAME1_"^FX^^"_LRNUM_";2^D INT^LRMISR",^(3)="",^(4)="D HINT^LRMISR",^("DT")=DT
"RTN","LRWU7",156,0)
 . S ^DD(LRSUBFIL,LRNUM2,0)=LRNAME2_"^S^A:ALWAYS DISPLAY;N:NEVER DISPLAY;R:RESTRICT DISPLAY;^"_LRNUM_";3^Q",^("DT")=DT
"RTN","LRWU7",157,0)
 ;
"RTN","LRWU7",158,0)
 S $P(^DD(LRSUBFIL),U,4)=$P(^DD(LRSUBFIL,0),U,4)+3
"RTN","LRWU7",159,0)
 ;
"RTN","LRWU7",160,0)
 ; Call FileMan to reindex the new fields.
"RTN","LRWU7",161,0)
 S DIK="^DD(LRSUBFIL,",DA=LRNUM,DA(1)=LRSUBFIL
"RTN","LRWU7",162,0)
 D IX1^DIK
"RTN","LRWU7",163,0)
 I LRTYPE=1 F DA=LRNUM1,LRNUM2 D IX1^DIK
"RTN","LRWU7",164,0)
 Q
"RTN","LRWU7",165,0)
 ;
"RTN","LRWU7",166,0)
 ;
"RTN","LRWU7",167,0)
DIE ; Edit file #62.06
"RTN","LRWU7",168,0)
 ; LRTYPE = 1-BACTERIAL, 2-MYCOBACTERIUM
"RTN","LRWU7",169,0)
 ; LR6206 = ien of entry to edit
"RTN","LRWU7",170,0)
 ;  LRNUM = drug node
"RTN","LRWU7",171,0)
 ;
"RTN","LRWU7",172,0)
 ;ZEXCEPT: LR6206,LRNUM,LRTYPE - set by calling process
"RTN","LRWU7",173,0)
 ;
"RTN","LRWU7",174,0)
 N DA,DIE,DR
"RTN","LRWU7",175,0)
 ;
"RTN","LRWU7",176,0)
 S DA=LR6206,DIE="^LAB(62.06,"
"RTN","LRWU7",177,0)
 I LRTYPE=1 S DR=".01;5//"_LRNUM_";4;6;7;.5;2;64",DR(2,62.061)=".01;1"
"RTN","LRWU7",178,0)
 I LRTYPE=2 S DR=".01;5.1//"_LRNUM_";64"
"RTN","LRWU7",179,0)
 D ^DIE
"RTN","LRWU7",180,0)
 ;
"RTN","LRWU7",181,0)
 Q
"RTN","LRWU7",182,0)
 ;
"RTN","LRWU7",183,0)
 ;
"RTN","LRWU7",184,0)
EDIT ; Edit an existing entry in file #62.06
"RTN","LRWU7",185,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,LR6206,LRNUM,LRTYPE,X,Y
"RTN","LRWU7",186,0)
 ;
"RTN","LRWU7",187,0)
 S DIR(0)="S^1:Bacterial Antibiotic;2:Mycobacterium Antibiotic"
"RTN","LRWU7",188,0)
 S DIR("A")="Select Antibiotic Type to Edit",DIR("B")=1
"RTN","LRWU7",189,0)
 D ^DIR
"RTN","LRWU7",190,0)
 I $D(DIRUT) Q
"RTN","LRWU7",191,0)
 S LRTYPE=Y
"RTN","LRWU7",192,0)
 S DIC="^LAB(62.06,",DIC(0)="AELMOQZ",DIC("S")="I $P(^(0),U,$S(LRTYPE=1:8,1:4))="""""
"RTN","LRWU7",193,0)
 D ^DIC
"RTN","LRWU7",194,0)
 I Y<1 Q
"RTN","LRWU7",195,0)
 ;
"RTN","LRWU7",196,0)
 S LR6206=+Y,LRNUM=$P(Y(0),"^",$S(LRTYPE=1:4,1:8)) D DIE
"RTN","LRWU7",197,0)
 ;
"RTN","LRWU7",198,0)
 Q
"RTN","LRWU8")
0^211^B142893179
"RTN","LRWU8",1,0)
LRWU8 ;DALOI/WPW - TOOL TO FIX ORGANISM SUBFILE AND DATA ;06/06/12  16:06
"RTN","LRWU8",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRWU8",3,0)
 ;
"RTN","LRWU8",4,0)
 ;Reference to ^DD supported by ICR# 29 and 999
"RTN","LRWU8",5,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",6,0)
 ;
"RTN","LRWU8",7,0)
 ;Output:
"RTN","LRWU8",8,0)
 ;-------
"RTN","LRWU8",9,0)
 ; ^TMP("LR",$J,scenario  [for email/report]
"RTN","LRWU8",10,0)
 ;
"RTN","LRWU8",11,0)
 ; scenario  Description
"RTN","LRWU8",12,0)
 ; --------  -----------------------------------------------------
"RTN","LRWU8",13,0)
 ; S1........Bad Input Transform found.
"RTN","LRWU8",14,0)
 ; S2........Bad Help Text found.
"RTN","LRWU8",15,0)
 ; S3........Bad Key found.
"RTN","LRWU8",16,0)
 ; S4........Field number is good (ien) so build sensitivity,
"RTN","LRWU8",17,0)
 ;           interp & screen definition based on good field
"RTN","LRWU8",18,0)
 ;           number, no result data needs updating.
"RTN","LRWU8",19,0)
 ; S5........Field number is bad (ien) so delete bad  definitions,
"RTN","LRWU8",20,0)
 ;           build new sensitivity, interp & screen definitions
"RTN","LRWU8",21,0)
 ;           and update results data as needed.
"RTN","LRWU8",22,0)
 ; S6........Everything left over that could not be
"RTN","LRWU8",23,0)
 ;           programmatically corrected.
"RTN","LRWU8",24,0)
 ;
"RTN","LRWU8",25,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",26,0)
EN ; Interactive entry point.
"RTN","LRWU8",27,0)
 ;
"RTN","LRWU8",28,0)
 N FIX,INSTALL,LR,LRSITE,LRSUBFIL,LRTYPE,NBR,TSTR,XMDUZ,XMY
"RTN","LRWU8",29,0)
 ;
"RTN","LRWU8",30,0)
 I '$D(^XUSEC("LRLIASON",DUZ)) D  Q
"RTN","LRWU8",31,0)
 .W !,"You do not have the LRLIASON key which is required to"
"RTN","LRWU8",32,0)
 .W " run this tool.",*7
"RTN","LRWU8",33,0)
 ;
"RTN","LRWU8",34,0)
 S FIX=$$ASK^LRWU8A(),INSTALL=0
"RTN","LRWU8",35,0)
 ;
"RTN","LRWU8",36,0)
 I 'FIX Q
"RTN","LRWU8",37,0)
 ;
"RTN","LRWU8",38,0)
 S FIX=FIX-1   ;FIX=0: Analyze, FIX=1: Analyze and Fix.
"RTN","LRWU8",39,0)
 ;
"RTN","LRWU8",40,0)
 S XMDUZ=DUZ,XMY(DUZ)=""
"RTN","LRWU8",41,0)
 D DES^XMA21    ; call to get the email recipients list.
"RTN","LRWU8",42,0)
 ;
"RTN","LRWU8",43,0)
 D PREP^XGF     ; setup screen
"RTN","LRWU8",44,0)
 ;
"RTN","LRWU8",45,0)
 D INIT,SORT,DISCARD,ANALYZE,FIX0,FIX5,FIX1,FIX2,FIX3,FIX4
"RTN","LRWU8",46,0)
 D SEND^LRWU8A  ; send email/report
"RTN","LRWU8",47,0)
 D CLEAN^XGF    ; reset screen
"RTN","LRWU8",48,0)
 ;
"RTN","LRWU8",49,0)
 K ^TMP(LR,$J)
"RTN","LRWU8",50,0)
 ;
"RTN","LRWU8",51,0)
 Q
"RTN","LRWU8",52,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",53,0)
KIDS ; Entry point for post install run.
"RTN","LRWU8",54,0)
 ;
"RTN","LRWU8",55,0)
 N FIX,INSTALL,LR,LRSITE,LRSUBFIL,LRTYPE,NBR,XMY
"RTN","LRWU8",56,0)
 ;
"RTN","LRWU8",57,0)
 I $$PROD^XUPROD(),$G(^XMB("NETNAME"))["DOMAIN.EXT" S XMY("G.LAB DEV IRMFO@DOMAIN.EXT")="",XMY("G.CSCLIN4@DOMAIN.EXT")=""
"RTN","LRWU8",58,0)
 S XMY(DUZ)="",XMY("G.LMI")="",FIX=0,INSTALL=1   ;[ccr-8167]
"RTN","LRWU8",59,0)
 ;
"RTN","LRWU8",60,0)
 D INIT,SORT,DISCARD,ANALYZE,FIX0,FIX5,FIX1,FIX2,FIX3,FIX4
"RTN","LRWU8",61,0)
 D SEND^LRWU8A  ; send email/report
"RTN","LRWU8",62,0)
 ;
"RTN","LRWU8",63,0)
 K ^TMP(LR,$J)
"RTN","LRWU8",64,0)
 ;
"RTN","LRWU8",65,0)
 Q
"RTN","LRWU8",66,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",67,0)
LRNIGHT ; Entry point for ^LRNIGHT run.
"RTN","LRWU8",68,0)
 ;
"RTN","LRWU8",69,0)
 N FIX,INSTALL,LR,LRSITE,LRSUBFIL,LRTYPE,NBR,XMY
"RTN","LRWU8",70,0)
 ;
"RTN","LRWU8",71,0)
 I $$PROD^XUPROD(),$G(^XMB("NETNAME"))["DOMAIN.EXT" S XMY("G.LAB DEV IRMFO@DOMAIN.EXT")="",XMY("G.CSCLIN4@DOMAIN.EXT")=""
"RTN","LRWU8",72,0)
 S (XMY(DUZ),XMY("G.LMI"))="",FIX=0,INSTALL=1
"RTN","LRWU8",73,0)
 ;
"RTN","LRWU8",74,0)
 D INIT,SORT,DISCARD,ANALYZE,FIX0,FIX5,FIX1,FIX2,FIX3,FIX4
"RTN","LRWU8",75,0)
 I $D(^TMP(LR,$J)) D SEND^LRWU8A  ; send email/report
"RTN","LRWU8",76,0)
 ;
"RTN","LRWU8",77,0)
 K ^TMP(LR,$J)
"RTN","LRWU8",78,0)
 ;
"RTN","LRWU8",79,0)
 Q
"RTN","LRWU8",80,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",81,0)
INIT ; Initialize variables and such...
"RTN","LRWU8",82,0)
 ;
"RTN","LRWU8",83,0)
 D DT^DICRW   ; load fileman variables.
"RTN","LRWU8",84,0)
 ;
"RTN","LRWU8",85,0)
 S LRTYPE=1,LR="LR",LRSITE=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","LRWU8",86,0)
 S NBR="2.00"_LRSITE,LRSUBFIL=63.3,DT=$$DT^XLFDT
"RTN","LRWU8",87,0)
 ;
"RTN","LRWU8",88,0)
 ; Ignore fields inadvertently distributed by a previous Lab patch from
"RTN","LRWU8",89,0)
 ; a development account to some VA sites during patch testing.
"RTN","LRWU8",90,0)
 ; These fields were name spaced under site number 170 and 600.
"RTN","LRWU8",91,0)
 S TSTR=""
"RTN","LRWU8",92,0)
 I $E(LRSITE,1,3)'=170 S TSTR=TSTR_"|2.00170001|2.00170002|2.00170003|2.00170004|2.00170005"
"RTN","LRWU8",93,0)
 I $E(LRSITE,1,3)'=600 S TSTR=TSTR_"|2.00600001|2.00600002|2.00600003|2.00600004|2.00600005|2.00600006|2.00600007"
"RTN","LRWU8",94,0)
 S TSTR=TSTR_"|"
"RTN","LRWU8",95,0)
 ;
"RTN","LRWU8",96,0)
 K ^TMP(LR,$J)
"RTN","LRWU8",97,0)
 ;
"RTN","LRWU8",98,0)
 Q
"RTN","LRWU8",99,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",100,0)
SORT ; Sort Antibiotics fields: 1-Sensitivity, 2-Interp & 3-Screen.
"RTN","LRWU8",101,0)
 ;
"RTN","LRWU8",102,0)
 ; Input: None.
"RTN","LRWU8",103,0)
 ;
"RTN","LRWU8",104,0)
 ;Output: ^TMP(LR,$j,"SORT", = field number sort + 1, 2 and/or 3
"RTN","LRWU8",105,0)
 ;        ^TMP(LR,$j,"S1",ien) = bad input transform
"RTN","LRWU8",106,0)
 ;        ^TMP(LR,$j,"S2",ien) = bad help text
"RTN","LRWU8",107,0)
 ;        ^TMP(LR,$j,"S3",ien) = bad key
"RTN","LRWU8",108,0)
 ;-----
"RTN","LRWU8",109,0)
 N D0,DATA,HELP,IT,KEY,NKEY
"RTN","LRWU8",110,0)
 ;
"RTN","LRWU8",111,0)
 S NKEY="A:ALWAYS DISPLAY;N:NEVER DISPLAY;R:RESTRICT DISPLAY;"
"RTN","LRWU8",112,0)
 ;
"RTN","LRWU8",113,0)
 S D0=""
"RTN","LRWU8",114,0)
 F  S D0=$O(^DD(63.3,D0)) Q:D0=""  D:$D(^DD(63.3,D0,0))
"RTN","LRWU8",115,0)
 .S DATA=$G(^DD(63.3,D0,0)) Q:DATA=""
"RTN","LRWU8",116,0)
 .I +$P(DATA,U,4)<2 Q
"RTN","LRWU8",117,0)
 .I +$P(DATA,U,4)>2.99999999 Q
"RTN","LRWU8",118,0)
 .S IT=$P(DATA,U,5,99),HELP=$G(^DD(63.3,D0,4)),KEY=$P(DATA,U,3)
"RTN","LRWU8",119,0)
 .I $P($P(DATA,U,4),";",2)=1 D
"RTN","LRWU8",120,0)
 ..I IT'="D ^LRMISR" D
"RTN","LRWU8",121,0)
 ...S ^TMP(LR,$J,"S1",D0)=IT_"|D ^LRMISR"
"RTN","LRWU8",122,0)
 ..I HELP'="D EN^LRMISR" D
"RTN","LRWU8",123,0)
 ...S ^TMP(LR,$J,"S2",D0)=HELP_"|D EN^LRMISR"
"RTN","LRWU8",124,0)
 .I $P($P(DATA,U,4),";",2)=2 D
"RTN","LRWU8",125,0)
 ..I IT'="D INT^LRMISR" D
"RTN","LRWU8",126,0)
 ...S ^TMP(LR,$J,"S1",D0)=IT_"|D INT^LRMISR"
"RTN","LRWU8",127,0)
 ..I HELP'="D HINT^LRMISR" D
"RTN","LRWU8",128,0)
 ...S ^TMP(LR,$J,"S2",D0)=HELP_"|D HINT^LRMISR"
"RTN","LRWU8",129,0)
 .I $P($P(DATA,U,4),";",2)=3 D
"RTN","LRWU8",130,0)
 ..I IT'="Q" D
"RTN","LRWU8",131,0)
 ...S ^TMP(LR,$J,"S1",D0)=IT_"|Q"
"RTN","LRWU8",132,0)
 ..I KEY'=NKEY D
"RTN","LRWU8",133,0)
 ...S ^TMP(LR,$J,"S3",D0)=KEY_"|"_NKEY
"RTN","LRWU8",134,0)
 .S ^TMP(LR,$J,"SORT",+$P(DATA,U,4),$P($P(DATA,U,4),";",2))=D0
"RTN","LRWU8",135,0)
 ;
"RTN","LRWU8",136,0)
 Q
"RTN","LRWU8",137,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",138,0)
DISCARD ; Discard Antibiotic if all 3 tests are defined.
"RTN","LRWU8",139,0)
 ;
"RTN","LRWU8",140,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",141,0)
 ;
"RTN","LRWU8",142,0)
 ;Output: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",143,0)
 ;-----
"RTN","LRWU8",144,0)
 N CNT,DATA,LRX,LRFLD
"RTN","LRWU8",145,0)
 ;
"RTN","LRWU8",146,0)
 S (LRX,LRFLD)=""
"RTN","LRWU8",147,0)
 F  S LRFLD=$O(^TMP(LR,$J,"SORT",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",148,0)
 .F CNT=0:1 S LRX=$O(^TMP(LR,$J,"SORT",LRFLD,LRX)) Q:LRX=""  D
"RTN","LRWU8",149,0)
 ..S DATA=^TMP(LR,$J,"SORT",LRFLD,LRX)
"RTN","LRWU8",150,0)
 .;
"RTN","LRWU8",151,0)
 .; Ignore fields inadvertently distributed by a previous Lab patch from
"RTN","LRWU8",152,0)
 .; a development account to some VA sites during patch testing.
"RTN","LRWU8",153,0)
 .; These fields were name spaced under site number 170 and 600.
"RTN","LRWU8",154,0)
 .I CNT=3,TSTR'[("|"_LRFLD_"|") K ^TMP(LR,$J,"SORT",LRFLD) Q
"RTN","LRWU8",155,0)
 .S ^TMP(LR,$J,"SORT",LRFLD)=CNT_U_DATA
"RTN","LRWU8",156,0)
 ;
"RTN","LRWU8",157,0)
 Q
"RTN","LRWU8",158,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",159,0)
ANALYZE ; Check ^LR for entries after discard.
"RTN","LRWU8",160,0)
 ;
"RTN","LRWU8",161,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",162,0)
 ;
"RTN","LRWU8",163,0)
 ;Output: ^TMP(LR,$J,"CNT",LRFLD = total result entries for ien
"RTN","LRWU8",164,0)
 ;-----
"RTN","LRWU8",165,0)
 I '$D(^TMP(LR,$J,"SORT")) Q
"RTN","LRWU8",166,0)
 ;
"RTN","LRWU8",167,0)
 N CNT,D2,LRFLD,LRDFN,LRIDT
"RTN","LRWU8",168,0)
 ;
"RTN","LRWU8",169,0)
 S (LRDFN,LRIDT,D2,LRFLD)=""
"RTN","LRWU8",170,0)
 F CNT=1:1 S LRDFN=$O(^LR(LRDFN)) Q:LRDFN=""  D
"RTN","LRWU8",171,0)
 .I 'INSTALL D
"RTN","LRWU8",172,0)
 ..I (CNT#1000)=1 D SAY^XGF(24,1,"Analyzing LRDFN: "_LRDFN)
"RTN","LRWU8",173,0)
 .I '$D(^LR(LRDFN,"MI")) Q
"RTN","LRWU8",174,0)
 .F  S LRIDT=$O(^LR(LRDFN,"MI",LRIDT)) Q:LRIDT=""  D
"RTN","LRWU8",175,0)
 ..I '$D(^LR(LRDFN,"MI",LRIDT,3)) Q
"RTN","LRWU8",176,0)
 ..F  S D2=$O(^LR(LRDFN,"MI",LRIDT,3,D2)) Q:D2=""  D
"RTN","LRWU8",177,0)
 ...F  S LRFLD=$O(^TMP(LR,$J,"SORT",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",178,0)
 ....I '$D(^LR(LRDFN,"MI",LRIDT,3,D2,LRFLD)) Q
"RTN","LRWU8",179,0)
 ....S ^TMP(LR,$J,"CNT",LRFLD)=$G(^TMP(LR,$J,"CNT",LRFLD))+1
"RTN","LRWU8",180,0)
 ;
"RTN","LRWU8",181,0)
 Q
"RTN","LRWU8",182,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",183,0)
FIX0 ; Cleanup non data leftover fields from previous patches.
"RTN","LRWU8",184,0)
 ;
"RTN","LRWU8",185,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",186,0)
 ;
"RTN","LRWU8",187,0)
 ;Output: None
"RTN","LRWU8",188,0)
 ;-----
"RTN","LRWU8",189,0)
 I '$D(^TMP(LR,$J,"SORT")) Q
"RTN","LRWU8",190,0)
 ;
"RTN","LRWU8",191,0)
 N CNT,DA,DIK,LRFLD,LRTNODE,PCE
"RTN","LRWU8",192,0)
 ;
"RTN","LRWU8",193,0)
 F PCE=2:1 S LRFLD=$P(TSTR,"|",PCE) Q:LRFLD=""  D
"RTN","LRWU8",194,0)
 .I +$G(^TMP(LR,$J,"CNT",LRFLD)) D  Q
"RTN","LRWU8",195,0)
 ..I +$G(^TMP(LR,$J,"SORT",LRFLD))=3 D
"RTN","LRWU8",196,0)
 ...K ^TMP(LR,$J,"SORT",LRFLD),^TMP(LR,$J,"CNT",LRFLD)
"RTN","LRWU8",197,0)
 .;
"RTN","LRWU8",198,0)
 .F CNT=1:1:3 I $D(^TMP(LR,$J,"SORT",LRFLD,CNT)) D
"RTN","LRWU8",199,0)
 ..S DA=^TMP(LR,$J,"SORT",LRFLD,CNT)
"RTN","LRWU8",200,0)
 ..S DA(1)=LRSUBFIL,DIK="^DD("_DA(1)_","
"RTN","LRWU8",201,0)
 ..I FIX D ^DIK
"RTN","LRWU8",202,0)
 ..F LRTNODE="S1","S2","S3" K ^TMP(LR,$J,LRTNODE,DA)
"RTN","LRWU8",203,0)
 .;
"RTN","LRWU8",204,0)
 .K ^TMP(LR,$J,"SORT",LRFLD)
"RTN","LRWU8",205,0)
 ;
"RTN","LRWU8",206,0)
 Q
"RTN","LRWU8",207,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",208,0)
FIX1 ; Cleanup the bad Input Transforms, Help Text and Input Keys.
"RTN","LRWU8",209,0)
 ;
"RTN","LRWU8",210,0)
 ; Input: ^TMP(LR,$J,"S1"  <= input transforms
"RTN","LRWU8",211,0)
 ;        ^TMP(LR,$J,"S2"  <= help text
"RTN","LRWU8",212,0)
 ;        ^TMP(LR,$J,"S3"  <= input keys
"RTN","LRWU8",213,0)
 ;
"RTN","LRWU8",214,0)
 ;Output: None
"RTN","LRWU8",215,0)
 ;-----
"RTN","LRWU8",216,0)
 I 'FIX Q
"RTN","LRWU8",217,0)
 I '$D(^TMP(LR,$J,"S1")),'$D(^TMP(LR,$J,"S2")),'$D(^TMP(LR,$J,"S3")) Q
"RTN","LRWU8",218,0)
 ;
"RTN","LRWU8",219,0)
 N DATA,LRFLD,NEW
"RTN","LRWU8",220,0)
 ;
"RTN","LRWU8",221,0)
 S LRFLD=""
"RTN","LRWU8",222,0)
 F  S LRFLD=$O(^TMP(LR,$J,"S1",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",223,0)
 .S DATA=^DD(63.3,LRFLD,0),NEW=$P(^TMP(LR,$J,"S1",LRFLD),"|",2)
"RTN","LRWU8",224,0)
 .S ^DD(63.3,LRFLD,0)=$P(DATA,U,1,4)_U_NEW
"RTN","LRWU8",225,0)
 .S ^DD(63.3,LRFLD,"DT")=DT
"RTN","LRWU8",226,0)
 ;
"RTN","LRWU8",227,0)
 F  S LRFLD=$O(^TMP(LR,$J,"S2",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",228,0)
 .S ^DD(63.3,LRFLD,4)=$P(^TMP(LR,$J,"S2",LRFLD),"|",2)
"RTN","LRWU8",229,0)
 .S ^DD(63.3,LRFLD,"DT")=DT
"RTN","LRWU8",230,0)
 ;
"RTN","LRWU8",231,0)
 F  S LRFLD=$O(^TMP(LR,$J,"S3",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",232,0)
 .S DATA=^DD(63.3,LRFLD,0),NEW=$P(^TMP(LR,$J,"S3",LRFLD),"|",2)
"RTN","LRWU8",233,0)
 .S ^DD(63.3,LRFLD,0)=$P(DATA,U,1,2)_U_NEW_U_$P(DATA,U,4,99)
"RTN","LRWU8",234,0)
 .S ^DD(63.3,LRFLD,"DT")=DT
"RTN","LRWU8",235,0)
 ;
"RTN","LRWU8",236,0)
 Q
"RTN","LRWU8",237,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",238,0)
FIX2 ; If no ^LR data found kill any 2 & 3 positions from ^DD(63.3
"RTN","LRWU8",239,0)
 ;    (2=interp & 3=screen) based on the ANALYZE sub findings.
"RTN","LRWU8",240,0)
 ;
"RTN","LRWU8",241,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",242,0)
 ;
"RTN","LRWU8",243,0)
 ;Output: None
"RTN","LRWU8",244,0)
 ;
"RTN","LRWU8",245,0)
 ;-----
"RTN","LRWU8",246,0)
 I '$D(^TMP(LR,$J,"SORT")) Q
"RTN","LRWU8",247,0)
 ;
"RTN","LRWU8",248,0)
 N CNT,LRFLD,D1,DA,DIK,LRNUM,LRNAME,LR6206
"RTN","LRWU8",249,0)
 ;
"RTN","LRWU8",250,0)
 S (LRFLD,D1)=""
"RTN","LRWU8",251,0)
 F  S LRFLD=$O(^TMP(LR,$J,"SORT",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",252,0)
 .S LRNUM=$G(^TMP(LR,$J,"SORT",LRFLD,1))
"RTN","LRWU8",253,0)
 .S LRNAME=$P($G(^DD(63.3,+LRNUM,0)),U)
"RTN","LRWU8",254,0)
 .I $D(^TMP(LR,$J,"SORT",LRFLD,1)),LRNAME'[" INTERP",LRNAME'[" SCREEN" Q
"RTN","LRWU8",255,0)
 .S LR6206=$O(^LAB(62.06,"AD",LRFLD,""))
"RTN","LRWU8",256,0)
 .I LR6206 Q
"RTN","LRWU8",257,0)
 .I '$D(^TMP(LR,$J,"CNT",LRFLD)) D
"RTN","LRWU8",258,0)
 ..F CNT=1,2,3 I $D(^TMP(LR,$J,"SORT",LRFLD,CNT)) D
"RTN","LRWU8",259,0)
 ...S DA=^TMP(LR,$J,"SORT",LRFLD,CNT)
"RTN","LRWU8",260,0)
 ...S DA(1)=LRSUBFIL,DIK="^DD("_DA(1)_","
"RTN","LRWU8",261,0)
 ...I FIX D ^DIK
"RTN","LRWU8",262,0)
 ...K ^TMP(LR,$J,"SORT",LRFLD,CNT)
"RTN","LRWU8",263,0)
 ..F CNT=0:1 S D1=$O(^TMP(LR,$J,"SORT",LRFLD,D1)) Q:D1=""
"RTN","LRWU8",264,0)
 ..I 'CNT K ^TMP(LR,$J,"SORT",LRFLD)
"RTN","LRWU8",265,0)
 ..E  S $P(^TMP(LR,$J,"SORT",LRFLD),U)=CNT
"RTN","LRWU8",266,0)
 ;
"RTN","LRWU8",267,0)
 Q
"RTN","LRWU8",268,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",269,0)
FIX3 ; Fix 1 and 1,2 and 1,3 DD entries, leaving 2 and 3 and 2,3
"RTN","LRWU8",270,0)
 ;
"RTN","LRWU8",271,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",272,0)
 ;
"RTN","LRWU8",273,0)
 ;Output: ^TMP(LR,$J,"S4",ien1) = ien2 ^ ien3
"RTN","LRWU8",274,0)
 ;
"RTN","LRWU8",275,0)
 ;    [where: ien1 = ^DD(63.3,ien1 (for the sensitivity)
"RTN","LRWU8",276,0)
 ;            ien2 = ^DD(63.3,ien2 (for the interp)
"RTN","LRWU8",277,0)
 ;            ien3 = ^DD(63.3,ien3 (for the screen)]
"RTN","LRWU8",278,0)
 ;
"RTN","LRWU8",279,0)
 ;        ^TMP(LR,$J,"S5",ien) = ien1 ^ ien2 ^ ien3 ^ cnt
"RTN","LRWU8",280,0)
 ;
"RTN","LRWU8",281,0)
 ;    [where:  ien = old ^DD(63.3,ien (for old sensitivity)
"RTN","LRWU8",282,0)
 ;            ien1 = ^DD(63.3,ien1    (for the sensitivity)
"RTN","LRWU8",283,0)
 ;            ien2 = ^DD(63.3,ien2    (for the interp)
"RTN","LRWU8",284,0)
 ;            ien3 = ^DD(63.3,ien3    (for the screen)
"RTN","LRWU8",285,0)
 ;             cnt = total # of ^LR's that has been updated]
"RTN","LRWU8",286,0)
 ;-----
"RTN","LRWU8",287,0)
 I '$D(^TMP(LR,$J,"SORT")) Q
"RTN","LRWU8",288,0)
 ;
"RTN","LRWU8",289,0)
 N CNT,DATA,LRFLD,DA,DIK,LR6206,LRFDA,LRNAME,LRNAME1,LRNAME2
"RTN","LRWU8",290,0)
 N LRNUM,LRNUM1,LRNUM2
"RTN","LRWU8",291,0)
 ;
"RTN","LRWU8",292,0)
 S LRFLD=""
"RTN","LRWU8",293,0)
 F  S LRFLD=$O(^TMP(LR,$J,"SORT",LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",294,0)
 .S LR6206=$O(^LAB(62.06,"AD",LRFLD,""))
"RTN","LRWU8",295,0)
 .I $D(^TMP(LR,$J,"SORT",LRFLD,1)) D
"RTN","LRWU8",296,0)
 ..S LRNUM=^TMP(LR,$J,"SORT",LRFLD,1)
"RTN","LRWU8",297,0)
 ..;
"RTN","LRWU8",298,0)
 ..; index and field match & are correct format.
"RTN","LRWU8",299,0)
 ..;
"RTN","LRWU8",300,0)
 ..I LRFLD=LRNUM,$E(LRNUM,1,$L(NBR))=NBR D  Q
"RTN","LRWU8",301,0)
 ...S LRNUM1=LRNUM+.000000001,LRNUM2=LRNUM+.000000002
"RTN","LRWU8",302,0)
 ...S LRNAME=$P(^DD(63.3,LRNUM,0),U)
"RTN","LRWU8",303,0)
 ...I LRNAME[" INTERP"!(LRNAME[" SCREEN") Q
"RTN","LRWU8",304,0)
 ...S LRNAME1=LRNAME_" INTERP",LRNAME2=LRNAME_" SCREEN"
"RTN","LRWU8",305,0)
 ...I FIX D
"RTN","LRWU8",306,0)
 ....S DA(1)=LRSUBFIL,DIK="^DD("_DA(1)_","
"RTN","LRWU8",307,0)
 ....F DA=LRNUM,LRNUM1,LRNUM2 D ^DIK
"RTN","LRWU8",308,0)
 ....D SETFLDS^LRWU7
"RTN","LRWU8",309,0)
 ...S ^TMP(LR,$J,"S4",LRNUM)=LRNUM1_U_LRNUM2
"RTN","LRWU8",310,0)
 ...K ^TMP(LR,$J,"SORT",LRFLD)
"RTN","LRWU8",311,0)
 ..;
"RTN","LRWU8",312,0)
 ..; index and field don't match & are incorrect format.
"RTN","LRWU8",313,0)
 ..;
"RTN","LRWU8",314,0)
 ..I $E(LRNUM,1,$L(NBR))'=NBR D  Q
"RTN","LRWU8",315,0)
 ...S LRNAME=$P(^DD(63.3,LRNUM,0),U)
"RTN","LRWU8",316,0)
 ...I LRNAME[" INTERP"!(LRNAME[" SCREEN") Q
"RTN","LRWU8",317,0)
 ...S LRNAME1=LRNAME_" INTERP",LRNAME2=LRNAME_" SCREEN"
"RTN","LRWU8",318,0)
 ...D NUMBER^LRWU7
"RTN","LRWU8",319,0)
 ...S DA=^TMP(LR,$J,"SORT",LRFLD,1)
"RTN","LRWU8",320,0)
 ...S DA(1)=LRSUBFIL,DIK="^DD("_DA(1)_","
"RTN","LRWU8",321,0)
 ...I FIX D
"RTN","LRWU8",322,0)
 ....D SETFLDS^LRWU7
"RTN","LRWU8",323,0)
 ....I LR6206]"" D
"RTN","LRWU8",324,0)
 .....S LRFDA(62.06,LR6206_",",5)=LRNUM
"RTN","LRWU8",325,0)
 .....D FILE^DIE(,"LRFDA")
"RTN","LRWU8",326,0)
 .....;
"RTN","LRWU8",327,0)
 .....D UPD624(LR6206,LRNUM) ; Update Auto Instrument File with new Drug Node
"RTN","LRWU8",328,0)
 ....F CNT=3,2,1 I $D(^TMP(LR,$J,"SORT",LRFLD,CNT)) D
"RTN","LRWU8",329,0)
 .....S DA=^TMP(LR,$J,"SORT",LRFLD,CNT) D ^DIK
"RTN","LRWU8",330,0)
 ...S CNT=+$G(^TMP(LR,$J,"CNT",LRFLD))
"RTN","LRWU8",331,0)
 ...K ^TMP(LR,$J,"CNT",LRFLD)
"RTN","LRWU8",332,0)
 ...S ^TMP(LR,$J,"S5",DA)=LRNUM_U_LRNUM1_U_LRNUM2_U_CNT
"RTN","LRWU8",333,0)
 ...K ^TMP(LR,$J,"SORT",LRFLD)
"RTN","LRWU8",334,0)
 ...S ^TMP(LR,$J,"SORT",LRFLD,"NEW")=LRNUM
"RTN","LRWU8",335,0)
 ;
"RTN","LRWU8",336,0)
 Q
"RTN","LRWU8",337,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",338,0)
FIX4 ; Cleanup the ^LR entries for single DD's.
"RTN","LRWU8",339,0)
 ;
"RTN","LRWU8",340,0)
 ; Input: ^TMP(LR,$J,"SORT"
"RTN","LRWU8",341,0)
 ;
"RTN","LRWU8",342,0)
 ;Output: ^TMP(LR,$J,"S6",ien) = "" [where:  ien = ^DD(63.3,ien]
"RTN","LRWU8",343,0)
 ;-----
"RTN","LRWU8",344,0)
 I '$D(^TMP(LR,$J,"SORT")) Q
"RTN","LRWU8",345,0)
 ;
"RTN","LRWU8",346,0)
 N CNT,D2,LRFLD,DA,DIK,LRDFN,LRIDT,LRN,LRNUM
"RTN","LRWU8",347,0)
 ;
"RTN","LRWU8",348,0)
 S (LRDFN,LRIDT,D2)=""
"RTN","LRWU8",349,0)
 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN=""  D
"RTN","LRWU8",350,0)
 .I '$D(^LR(LRDFN,"MI")) Q
"RTN","LRWU8",351,0)
 .F  S LRIDT=$O(^LR(LRDFN,"MI",LRIDT)) Q:LRIDT=""  D
"RTN","LRWU8",352,0)
 ..S D2=""
"RTN","LRWU8",353,0)
 ..F  S D2=$O(^LR(LRDFN,"MI",LRIDT,3,D2)) Q:D2=""!(D2'?.N)  D
"RTN","LRWU8",354,0)
 ...S LRFLD=2
"RTN","LRWU8",355,0)
 ...F  S LRFLD=$O(^LR(LRDFN,"MI",LRIDT,3,D2,LRFLD)) Q:LRFLD=""!(LRFLD>3)  D
"RTN","LRWU8",356,0)
 ....I '$D(^TMP(LR,$J,"SORT",LRFLD,"NEW")) Q
"RTN","LRWU8",357,0)
 ....S LRN=^TMP(LR,$J,"SORT",LRFLD,"NEW")
"RTN","LRWU8",358,0)
 ....I FIX D
"RTN","LRWU8",359,0)
 .....I 'INSTALL D
"RTN","LRWU8",360,0)
 ......D SAY^XGF(24,1,"Repairing LRDFN: "_LRDFN_" LRIDT: "_LRIDT)
"RTN","LRWU8",361,0)
 .....M ^LR(LRDFN,"MI",LRIDT,3,D2,LRN)=^LR(LRDFN,"MI",LRIDT,3,D2,LRFLD)
"RTN","LRWU8",362,0)
 .....K ^LR(LRDFN,"MI",LRIDT,3,D2,LRFLD)
"RTN","LRWU8",363,0)
 .....D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) ;Update Clinical Reminders Index
"RTN","LRWU8",364,0)
 ;
"RTN","LRWU8",365,0)
 ; Move all non-programatically fixed data to Scenario 6 (S6).
"RTN","LRWU8",366,0)
 ;
"RTN","LRWU8",367,0)
 S (D2,LRFLD)=""
"RTN","LRWU8",368,0)
 F  S D2=$O(^TMP(LR,$J,"SORT",D2)) Q:D2=""  D
"RTN","LRWU8",369,0)
 .F  S LRFLD=$O(^TMP(LR,$J,"SORT",D2,LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",370,0)
 ..I LRFLD="NEW" K ^TMP(LR,$J,"SORT",D2,LRFLD) Q
"RTN","LRWU8",371,0)
 ..S DA=^TMP(LR,$J,"SORT",D2,LRFLD)
"RTN","LRWU8",372,0)
 ..S ^TMP(LR,$J,"S6",DA)=""
"RTN","LRWU8",373,0)
 .K ^TMP(LR,$J,"SORT",D2)
"RTN","LRWU8",374,0)
 ;
"RTN","LRWU8",375,0)
 ; Remove S1,S2 and/or S3 entries that do not have
"RTN","LRWU8",376,0)
 ; associated DD entries.
"RTN","LRWU8",377,0)
 ;
"RTN","LRWU8",378,0)
 S LRFLD=""
"RTN","LRWU8",379,0)
 F D2="S1","S2","S3" D:$D(^TMP(LR,$J,D2))
"RTN","LRWU8",380,0)
 .F  S LRFLD=$O(^TMP(LR,$J,D2,LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",381,0)
 ..I '$D(^DD(63.3,LRFLD)) K ^TMP(LR,$J,D2,LRFLD)
"RTN","LRWU8",382,0)
 ;
"RTN","LRWU8",383,0)
 Q
"RTN","LRWU8",384,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",385,0)
FIX5 ; Ensure that the fix entry is an ANTIBIOTIC NAME instead of an
"RTN","LRWU8",386,0)
 ; INTERP or SCREEN.
"RTN","LRWU8",387,0)
 ;
"RTN","LRWU8",388,0)
 ; Input: ^TMP(LR,$J,"S1"  <= input transforms
"RTN","LRWU8",389,0)
 ;        ^TMP(LR,$J,"S2"  <= help text
"RTN","LRWU8",390,0)
 ;        ^TMP(LR,$J,"S3"  <= input keys
"RTN","LRWU8",391,0)
 ;
"RTN","LRWU8",392,0)
 ;Output: None
"RTN","LRWU8",393,0)
 ;-----
"RTN","LRWU8",394,0)
 N TYPE,LRFLD,DATA,DA,DIK
"RTN","LRWU8",395,0)
 ;
"RTN","LRWU8",396,0)
 F TYPE="S1","S2","S3" D
"RTN","LRWU8",397,0)
 .S LRFLD=""
"RTN","LRWU8",398,0)
 .F  S LRFLD=$O(^TMP(LR,$J,TYPE,LRFLD)) Q:LRFLD=""  D
"RTN","LRWU8",399,0)
 ..S DATA=$G(^DD(63.3,LRFLD,0))
"RTN","LRWU8",400,0)
 ..I $P($P(DATA,U,4),";",2)=1 D
"RTN","LRWU8",401,0)
 ...I $P(DATA,U)[" INTERP"!($P(DATA,U)[" SCREEN") K ^TMP(LR,$J,TYPE,LRFLD)
"RTN","LRWU8",402,0)
 ..I $P($P(DATA,U,4),";",2)=2 D
"RTN","LRWU8",403,0)
 ...I $P(DATA,U)'[" INTERP" K ^TMP(LR,$J,TYPE,LRFLD)
"RTN","LRWU8",404,0)
 ..I $P($P(DATA,U,4),";",2)=3 D
"RTN","LRWU8",405,0)
 ...I $P(DATA,U)'[" SCREEN" K ^TMP(LR,$J,TYPE,LRFLD)
"RTN","LRWU8",406,0)
 Q
"RTN","LRWU8",407,0)
 ;
"RTN","LRWU8",408,0)
 ;---------------------------------------------------------------
"RTN","LRWU8",409,0)
 ;
"RTN","LRWU8",410,0)
UPD624(LR6206,LRNDRGND) ; Update Drug Node in Auto Instrument File
"RTN","LRWU8",411,0)
 ;
"RTN","LRWU8",412,0)
 ; Input:
"RTN","LRWU8",413,0)
 ;     LR6206 - IEN in Antimicrobial Susceptibility File (#62.06)
"RTN","LRWU8",414,0)
 ;   LRNDRGND - The new Drug Node
"RTN","LRWU8",415,0)
 ;
"RTN","LRWU8",416,0)
 ; Output: None
"RTN","LRWU8",417,0)
 ;
"RTN","LRWU8",418,0)
 N LR624,LR6243,LR6246,LRDRUG
"RTN","LRWU8",419,0)
 ;
"RTN","LRWU8",420,0)
 S LR624=0 F  S LR624=$O(^LAB(62.4,LR624)) Q:'LR624  D
"RTN","LRWU8",421,0)
 . ;
"RTN","LRWU8",422,0)
 . S LR6243=0 F  S LR6243=$O(^LAB(62.4,LR624,7,LR6243)) Q:'LR6243  D
"RTN","LRWU8",423,0)
 . . ;
"RTN","LRWU8",424,0)
 . . S LR6246=0 F  S LR6246=$O(^LAB(62.4,LR624,7,LR6243,2,LR6246)) Q:'LR6246  D
"RTN","LRWU8",425,0)
 . . . ;
"RTN","LRWU8",426,0)
 . . . S LRDRUG=$P($G(^LAB(62.4,LR624,7,LR6243,2,LR6246,0)),U,1)
"RTN","LRWU8",427,0)
 . . . ;
"RTN","LRWU8",428,0)
 . . . I LRDRUG'=LR6206 Q
"RTN","LRWU8",429,0)
 . . . ;
"RTN","LRWU8",430,0)
 . . . N LRFDA,LRIENS
"RTN","LRWU8",431,0)
 . . . S LRIENS=LR6246_","_LR6243_","_LR624_","
"RTN","LRWU8",432,0)
 . . . S LRFDA(62.46,LRIENS,1)=LRNDRGND
"RTN","LRWU8",433,0)
 . . . D FILE^DIE("","LRFDA")
"RTN","LRWU8",434,0)
 ;
"RTN","LRWU8",435,0)
 Q
"RTN","LRWU8A")
0^212^B118207612
"RTN","LRWU8A",1,0)
LRWU8A ;DALOI/TCK - TOOL TO FIX ORGANISM SUBFILE & DATA-PART 2 ;06/18/12  13:32
"RTN","LRWU8A",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRWU8A",3,0)
 ;
"RTN","LRWU8A",4,0)
 ;-----------------------------------------------------------
"RTN","LRWU8A",5,0)
ASK() ; Run analyze/repair query.
"RTN","LRWU8A",6,0)
 ;
"RTN","LRWU8A",7,0)
 N Y,DIRUT,DTOUT,DUOUT,FIX
"RTN","LRWU8A",8,0)
 ;
"RTN","LRWU8A",9,0)
 K DIR,Y
"RTN","LRWU8A",10,0)
 S FIX=0
"RTN","LRWU8A",11,0)
 ;
"RTN","LRWU8A",12,0)
 W !,"This process will check the Organism Sub-field (#63.3) of"
"RTN","LRWU8A",13,0)
 W !,"the LAB DATA file (#63) looking for possible discrepancies"
"RTN","LRWU8A",14,0)
 W !,"in the Data Dictionary. Once the process has completed, a"
"RTN","LRWU8A",15,0)
 W !,"MailMan message will be sent to the user that started this"
"RTN","LRWU8A",16,0)
 W !,"process and any other user selected."
"RTN","LRWU8A",17,0)
 W !!
"RTN","LRWU8A",18,0)
 W !,"The two modes in which this process can be run are ANALYZE"
"RTN","LRWU8A",19,0)
 W !,"and REPAIR. If the ANALYZE option is chosen, the process will"
"RTN","LRWU8A",20,0)
 W !,"only look for the discrepancies and report the findings via"
"RTN","LRWU8A",21,0)
 W !,"a MailMan message. If the ANALYZE/REPAIR option is chosen the"
"RTN","LRWU8A",22,0)
 W !,"process will ANALYZE and REPAIR any discrepancies found that"
"RTN","LRWU8A",23,0)
 W !,"can be fixed programmatically and list all those that could"
"RTN","LRWU8A",24,0)
 W !,"not be fixed but need attention."
"RTN","LRWU8A",25,0)
 W !!
"RTN","LRWU8A",26,0)
 ;
"RTN","LRWU8A",27,0)
 S DIR("A")="Do you want to continue with this process",DIR("B")="N"
"RTN","LRWU8A",28,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRWU8A",29,0)
 D ^DIR
"RTN","LRWU8A",30,0)
 I 'Y Q FIX
"RTN","LRWU8A",31,0)
 ;
"RTN","LRWU8A",32,0)
 K DIR,Y
"RTN","LRWU8A",33,0)
 ;
"RTN","LRWU8A",34,0)
 S DIR(0)="NAO^1:3",DIR("B")=3
"RTN","LRWU8A",35,0)
 S DIR("A",1)="Select the action you wish to take:"
"RTN","LRWU8A",36,0)
 S DIR("A",2)=""
"RTN","LRWU8A",37,0)
 S DIR("A",3)="1. Analyze and Report. "
"RTN","LRWU8A",38,0)
 S DIR("A",4)="2. Analyze, Repair and Report. "
"RTN","LRWU8A",39,0)
 S DIR("A",5)="3. Quit - No Action."
"RTN","LRWU8A",40,0)
 S DIR("A",6)=""
"RTN","LRWU8A",41,0)
 S DIR("A")="Enter a number 1 thru 3: "
"RTN","LRWU8A",42,0)
 S DIR("?")="Select a number from 1 thru 3 or press <Return> to exit"
"RTN","LRWU8A",43,0)
 ;
"RTN","LRWU8A",44,0)
 D ^DIR
"RTN","LRWU8A",45,0)
 I Y=1 S FIX=1
"RTN","LRWU8A",46,0)
 I Y=2 S FIX=2
"RTN","LRWU8A",47,0)
 I Y=3!(Y=-1) S FIX=0 Q FIX
"RTN","LRWU8A",48,0)
 ;
"RTN","LRWU8A",49,0)
 K DIR,Y
"RTN","LRWU8A",50,0)
 S DIR("A")="Are you sure you want to proceed",DIR("B")="N"
"RTN","LRWU8A",51,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRWU8A",52,0)
 ;
"RTN","LRWU8A",53,0)
 D ^DIR
"RTN","LRWU8A",54,0)
 I 'Y S FIX=0
"RTN","LRWU8A",55,0)
 ;-----
"RTN","LRWU8A",56,0)
 Q FIX
"RTN","LRWU8A",57,0)
 ;-----------------------------------------------------------
"RTN","LRWU8A",58,0)
SEND ; Send the report/email to all recipients selected.
"RTN","LRWU8A",59,0)
 ;
"RTN","LRWU8A",60,0)
 N DSH,ERROR,FLDN,HDR,INTERP,LN,LRSITE,MSG,NFLD,NFX,NINT
"RTN","LRWU8A",61,0)
 N NKEY,NSCR,NUM,OKEY,SCRN,SP,TMP,TOTAL,XMDUZ,XMSUB,DIFROM,XMINSTR
"RTN","LRWU8A",62,0)
 ;
"RTN","LRWU8A",63,0)
 S (XMSUB,XMDUZ,MSG,LN,ERROR,NUM)=""
"RTN","LRWU8A",64,0)
 S LRSITE=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","LRWU8A",65,0)
 ;
"RTN","LRWU8A",66,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LRWU8A",67,0)
 S XMSUB="LAB DATA file (#63) Microbiology Antibiotic Fields Cleanup"
"RTN","LRWU8A",68,0)
 S $P(SP," ",80)="",$P(DSH,"-",80)=""
"RTN","LRWU8A",69,0)
 ;
"RTN","LRWU8A",70,0)
 ; Not all errors were auto-repaired
"RTN","LRWU8A",71,0)
 I '+$G(FIX)!(+$G(FIX)&($D(^TMP("LR",$J,"S6")))) D
"RTN","LRWU8A",72,0)
 .S MSG($$LN)="Contact the National Service Desk to request assistance from the Clin 4"
"RTN","LRWU8A",73,0)
 .S MSG($$LN)="Product Support team in resolving the following errors identified in the"
"RTN","LRWU8A",74,0)
 .S MSG($$LN)="VistA Laboratory package:"
"RTN","LRWU8A",75,0)
 .S MSG($$LN)=""
"RTN","LRWU8A",76,0)
 ;
"RTN","LRWU8A",77,0)
 S MSG($$LN)="The LAB DATA file (#63) cleanup process has completed."
"RTN","LRWU8A",78,0)
 S MSG($$LN)=""
"RTN","LRWU8A",79,0)
 S TMP="Tool run in ANALYZE"_$S(FIX:"/REPAIR",1:"")_" MODE for: "
"RTN","LRWU8A",80,0)
 S MSG($$LN)=TMP_$$NAME^XUAF4($$KSP^XUPARAM("INST"))_" ("_$$KSP^XUPARAM("WHERE")_")."
"RTN","LRWU8A",81,0)
 S MSG($$LN)=""
"RTN","LRWU8A",82,0)
 S TMP="This process checked the Organism Sub-field (#63.3) of the "
"RTN","LRWU8A",83,0)
 S MSG($$LN)=TMP_"LAB DATA file (#63)"
"RTN","LRWU8A",84,0)
 S TMP="to locate potential Data Dictionary discrepancies related to "
"RTN","LRWU8A",85,0)
 S MSG($$LN)=TMP_"the definition and"
"RTN","LRWU8A",86,0)
 S MSG($$LN)="setup of fields for reporting antibiotic sensitivities."
"RTN","LRWU8A",87,0)
 S MSG($$LN)=""
"RTN","LRWU8A",88,0)
 S MSG($$LN)="The following report lists any discrepancies found:"
"RTN","LRWU8A",89,0)
 S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",90,0)
 S MSG($$LN)=""
"RTN","LRWU8A",91,0)
 I '$D(^TMP("LR",$J)) D  Q
"RTN","LRWU8A",92,0)
 .S MSG($$LN)="*** NO DISCREPANCIES WERE FOUND IN FILE (#63). ***"
"RTN","LRWU8A",93,0)
 .D SENDMSG^XMXAPI(DUZ,XMSUB,"MSG",.XMY,.XMINSTR)
"RTN","LRWU8A",94,0)
 F TYP="S1","S2","S3","S4","S5","S6"  D
"RTN","LRWU8A",95,0)
 .D BLDARY(TYP)
"RTN","LRWU8A",96,0)
 .I '$D(ARY(TYP)) Q
"RTN","LRWU8A",97,0)
 .S MSG($$LN)=HDR
"RTN","LRWU8A",98,0)
 .S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",99,0)
 .I TYP="S1" D
"RTN","LRWU8A",100,0)
 ..I 'FIX D
"RTN","LRWU8A",101,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",102,0)
 ...S TMP=TMP_$E("CURRENT INPUT"_SP,1,30)_"PROPOSED INPUT"
"RTN","LRWU8A",103,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",104,0)
 ..I FIX D
"RTN","LRWU8A",105,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",106,0)
 ...S TMP=TMP_$E("FORMER INPUT"_SP,1,30)_"NEW INPUT"
"RTN","LRWU8A",107,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",108,0)
 ..S TMP=$E(" (FIELD NUMBER)"_SP,1,33)
"RTN","LRWU8A",109,0)
 ..S TMP=TMP_$E("TRANSFORM"_SP,1,30)_"TRANSFORM"
"RTN","LRWU8A",110,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",111,0)
 ..S TMP=$E(DSH,1,31)_$E(SP,1,2)_$E(DSH,1,28)_$E(SP,1,2)
"RTN","LRWU8A",112,0)
 ..S MSG($$LN)=TMP_$E(DSH,1,15)
"RTN","LRWU8A",113,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D
"RTN","LRWU8A",114,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.OLDIT,.NEWIT,.IEN)
"RTN","LRWU8A",115,0)
 ...S MSG($$LN)=$E(ANTIB_SP,1,33)_$E(OLDIT_SP,1,30)_$E(NEWIT_SP,1,15)
"RTN","LRWU8A",116,0)
 ...S MSG($$LN)=$E(" ("_IEN_")"_SP,1,20)
"RTN","LRWU8A",117,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",118,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",119,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",120,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",121,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",122,0)
 .I TYP="S2" D
"RTN","LRWU8A",123,0)
 ..I 'FIX D
"RTN","LRWU8A",124,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",125,0)
 ...S TMP=TMP_$E("CURRENT"_SP,1,30)_"PROPOSED"
"RTN","LRWU8A",126,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",127,0)
 ..I FIX D
"RTN","LRWU8A",128,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",129,0)
 ...S MSG($$LN)=TMP_$E("FORMER"_SP,1,30)_"NEW"
"RTN","LRWU8A",130,0)
 ..S TMP=$E(" (FIELD NUMBER)"_SP,1,33)_$E("HELP"_SP,1,30)_"HELP"
"RTN","LRWU8A",131,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",132,0)
 ..S TMP=$E(DSH,1,31)_$E(SP,1,2)_$E(DSH,1,28)_$E(SP,1,2)_$E(DSH,1,15)
"RTN","LRWU8A",133,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",134,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D
"RTN","LRWU8A",135,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.OHLP,.NHLP,.IEN)
"RTN","LRWU8A",136,0)
 ...S MSG($$LN)=$E(ANTIB_SP,1,33)_$E(OHLP_SP,1,30)_$E(NHLP_SP,1,15)
"RTN","LRWU8A",137,0)
 ...S MSG($$LN)=$E(" ("_IEN_")"_SP,1,20)
"RTN","LRWU8A",138,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",139,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",140,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",141,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",142,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",143,0)
 .I TYP="S3" D
"RTN","LRWU8A",144,0)
 ..I 'FIX D
"RTN","LRWU8A",145,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",146,0)
 ...S MSG($$LN)=TMP_$E("CURRENT"_SP,1,20)_"PROPOSED"
"RTN","LRWU8A",147,0)
 ..I FIX D
"RTN","LRWU8A",148,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)
"RTN","LRWU8A",149,0)
 ...S MSG($$LN)=TMP_$E("FORMER"_SP,1,20)_"NEW"
"RTN","LRWU8A",150,0)
 ..S TMP=$E(" (FIELD NUMBER)"_SP,1,33)_$E("SET OF CODES"_SP,1,20)
"RTN","LRWU8A",151,0)
 ..S TMP=TMP_"SET OF CODES"
"RTN","LRWU8A",152,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",153,0)
 ..S TMP=$E(DSH,1,31)_$E(SP,1,2)_$E(DSH,1,18)_$E(SP,1,2)_$E(DSH,1,25)
"RTN","LRWU8A",154,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",155,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D 
"RTN","LRWU8A",156,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.OKEY,.NKEY,.IEN)
"RTN","LRWU8A",157,0)
 ...S MSG($$LN)=$E(ANTIB_SP,1,31)_"  "_$E(OKEY_SP,1,18)_"  "_$E(NKEY_SP,1,25)
"RTN","LRWU8A",158,0)
 ...S MSG($$LN)=$E(" ("_IEN_")"_SP,1,31)_"  "_$S($L(OKEY)>18:$E(OKEY_SP,19,36),1:$E(SP,19,36))_"  "_$E(NKEY,26,44)
"RTN","LRWU8A",159,0)
 ...S MSG($$LN)=$E(SP,1,33)_$S($L(OKEY)>36:$E(OKEY_SP,37,54),1:$E(SP,37,54))_"  "_$E(NKEY,45,53)
"RTN","LRWU8A",160,0)
 ...I $L(OKEY)>54 D
"RTN","LRWU8A",161,0)
 ....N LGOKEY,ADLOKEY,LLNOKEY,PADLOKEY
"RTN","LRWU8A",162,0)
 ....S LGOKEY=$L(OKEY)-54,ADLOKEY=LGOKEY\18,LLNOKEY=LGOKEY/18
"RTN","LRWU8A",163,0)
 ....S LLNOKEY=$S(LLNOKEY[".":1,1:0),PADLOKEY=0
"RTN","LRWU8A",164,0)
 ....I ADLOKEY>=1 D
"RTN","LRWU8A",165,0)
 .....F PADLOKEY=1:1:ADLOKEY D
"RTN","LRWU8A",166,0)
 ......S MSG($$LN)=$E(SP,1,33)_$E(OKEY_SP,(18*PADLOKEY)+37,(18*PADLOKEY)+54)
"RTN","LRWU8A",167,0)
 ....I LLNOKEY D
"RTN","LRWU8A",168,0)
 .....S MSG($$LN)=$E(SP,1,33)_$E(OKEY_SP,(18*(ADLOKEY+1))+37,(18*(PADLOKEY+1))+54)
"RTN","LRWU8A",169,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",170,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",171,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",172,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",173,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",174,0)
 .I TYP="S4" D
"RTN","LRWU8A",175,0)
 ..S TMP=$E("ANTIBIOTIC NAME"_SP,1,33)_$E("INTERP FIELD"_SP,1,30)
"RTN","LRWU8A",176,0)
 ..S TMP=TMP_"SCREEN FIELD"
"RTN","LRWU8A",177,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",178,0)
 ..S TMP=$E(" (FIELD NUMBER)"_SP,1,33)
"RTN","LRWU8A",179,0)
 ..S TMP=TMP_$E($S('FIX:"NEEDED",1:"ADDED")_SP,1,30)
"RTN","LRWU8A",180,0)
 ..S TMP=TMP_$S('FIX:"NEEDED",1:"ADDED")
"RTN","LRWU8A",181,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",182,0)
 ..S TMP=$E(DSH,1,31)_$E(SP,1,2)_$E(DSH,1,28)_$E(SP,1,2)_$E(DSH,1,15)
"RTN","LRWU8A",183,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",184,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D
"RTN","LRWU8A",185,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.INTERP,.SCRN,.IEN)
"RTN","LRWU8A",186,0)
 ...S MSG($$LN)=$E(ANTIB_SP,1,33)_$E(INTERP_SP,1,30)_$E(SCRN_SP,1,15)
"RTN","LRWU8A",187,0)
 ...S MSG($$LN)=$E(" ("_IEN_")"_SP,1,20)
"RTN","LRWU8A",188,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",189,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",190,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",191,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",192,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",193,0)
 .I TYP="S5" D
"RTN","LRWU8A",194,0)
 ..I 'FIX D
"RTN","LRWU8A",195,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,28)
"RTN","LRWU8A",196,0)
 ...S TMP=TMP_$E("NEW FIELD #"_SP,1,13)_$E("NEW INTERP"_SP,1,13)
"RTN","LRWU8A",197,0)
 ...S MSG($$LN)=TMP_$E("NEW SCREEN"_SP,1,13)_$E("OCCURRENCES"_SP,1,11)
"RTN","LRWU8A",198,0)
 ..I FIX D
"RTN","LRWU8A",199,0)
 ...S TMP=$E("ANTIBIOTIC NAME"_SP,1,28)
"RTN","LRWU8A",200,0)
 ...S TMP=TMP_$E("FIELD ADDED"_SP,1,13)_$E("INTERP ADDED"_SP,1,14)
"RTN","LRWU8A",201,0)
 ...S MSG($$LN)=TMP_$E("SCRN ADDED"_SP,1,12)_$E("OCCURRENCES"_SP,1,11)
"RTN","LRWU8A",202,0)
 ..S TMP=$E(" (FIELD NUMBER)"_SP,1,67)_"FOUND"
"RTN","LRWU8A",203,0)
 ..S MSG($$LN)=TMP
"RTN","LRWU8A",204,0)
 ..S TMP=$E(DSH,1,26)_$E(SP,1,2)_$E(DSH,1,11)_$E(SP,1,2)_$E(DSH,1,12)
"RTN","LRWU8A",205,0)
 ..S MSG($$LN)=TMP_$E(SP,1,2)_$E(DSH,1,11)_$E(SP)_$E(DSH,1,11)
"RTN","LRWU8A",206,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D
"RTN","LRWU8A",207,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.IEN,.NFLD,.NINT,.NSCR,.NFX)
"RTN","LRWU8A",208,0)
 ...S TMP=$E(ANTIB_SP,1,28)_$E(NFLD_SP,1,13)_$E(NINT_SP,1,14)
"RTN","LRWU8A",209,0)
 ...S MSG($$LN)=TMP_$E(NSCR_SP,1,13)_$E(NFX_SP,1,4)
"RTN","LRWU8A",210,0)
 ...S MSG($$LN)=$E(" ("_IEN_")"_SP,1,20)
"RTN","LRWU8A",211,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",212,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",213,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",214,0)
 ..I FIX D
"RTN","LRWU8A",215,0)
 ...S MSG($$LN)=""
"RTN","LRWU8A",216,0)
 ...S TMP="     Note: Due to the added antibiotics, updates may"
"RTN","LRWU8A",217,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",218,0)
 ...S TMP="           need to be made to input (edit) templates"
"RTN","LRWU8A",219,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",220,0)
 ...S TMP="           in the LAB DATA file that correspond to the"
"RTN","LRWU8A",221,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",222,0)
 ...S TMP="           old fields and update the new fields."
"RTN","LRWU8A",223,0)
 ...S MSG($$LN)=TMP
"RTN","LRWU8A",224,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",225,0)
 ..S MSG($$LN)=""
"RTN","LRWU8A",226,0)
 .I TYP="S6" D
"RTN","LRWU8A",227,0)
 ..S MSG($$LN)=$E("ANTIBIOTIC"_SP,1,33)_$E("FIELD NUMBER",1,20)
"RTN","LRWU8A",228,0)
 ..S MSG($$LN)=$E(DSH,1,31)_$E(SP,1,2)_$E(DSH,1,20)
"RTN","LRWU8A",229,0)
 ..S CNT="" F  S CNT=$O(ARY(TYP,CNT)) Q:CNT=""  D
"RTN","LRWU8A",230,0)
 ...D GETDATA(TYP,CNT,.ANTIB,.FLDN)
"RTN","LRWU8A",231,0)
 ...S MSG($$LN)=$E(ANTIB_SP,1,33)_$E(FLDN_SP,1,30)
"RTN","LRWU8A",232,0)
 ...S TOTAL=CNT
"RTN","LRWU8A",233,0)
 ..S MSG($$LN)=$TR(SP," ","-")
"RTN","LRWU8A",234,0)
 ..S MSG($$LN)=$E("TOTAL: "_SP,1,7)_$E(TOTAL_SP,1,10)
"RTN","LRWU8A",235,0)
 .S MSG($$LN)=""
"RTN","LRWU8A",236,0)
 .S MSG($$LN)=""
"RTN","LRWU8A",237,0)
 K ARY
"RTN","LRWU8A",238,0)
 S MSG($$LN)=$TR(SP," ","*")
"RTN","LRWU8A",239,0)
 S MSG($$LN)="*** END OF REPORT ***"
"RTN","LRWU8A",240,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"MSG",.XMY,.XMINSTR)
"RTN","LRWU8A",241,0)
 ;
"RTN","LRWU8A",242,0)
 Q
"RTN","LRWU8A",243,0)
 ;-----------------------------------------------------------
"RTN","LRWU8A",244,0)
LN() ; Increment the line couter.
"RTN","LRWU8A",245,0)
 ;
"RTN","LRWU8A",246,0)
 S LN=LN+1
"RTN","LRWU8A",247,0)
 ;
"RTN","LRWU8A",248,0)
 Q LN
"RTN","LRWU8A",249,0)
 ;-----------------------------------------------------------
"RTN","LRWU8A",250,0)
GETDATA(TYP,CNT,A1,A2,A3,A4,A5,A6) ; Set up variables for print.
"RTN","LRWU8A",251,0)
 ;
"RTN","LRWU8A",252,0)
 N I,NUM
"RTN","LRWU8A",253,0)
 ;
"RTN","LRWU8A",254,0)
 S NUM=$L(ARY(TYP,CNT),"|")
"RTN","LRWU8A",255,0)
 F I=1:1:NUM S @("A"_I)=$P(ARY(TYP,CNT),"|",I)
"RTN","LRWU8A",256,0)
 ;
"RTN","LRWU8A",257,0)
 Q
"RTN","LRWU8A",258,0)
 ;
"RTN","LRWU8A",259,0)
 ;-----------------------------------------------------------
"RTN","LRWU8A",260,0)
BLDARY(TYP) ; Build the array.
"RTN","LRWU8A",261,0)
 ;
"RTN","LRWU8A",262,0)
 N ANTIB,IEN,MDE,NEWIT,NFLDN,NHLP,OFLN,OLDIT,OHLP,TMP
"RTN","LRWU8A",263,0)
 ;
"RTN","LRWU8A",264,0)
 S (ANTIB,OLDIT)="",NEWIT="D ^LRMISR",CNT=0,IEN=""
"RTN","LRWU8A",265,0)
 I TYP="S1" S HDR="INCORRECT INPUT TRANSFORMS (IT)"
"RTN","LRWU8A",266,0)
 I TYP="S2" S HDR="INCORRECT HELP TEXT"
"RTN","LRWU8A",267,0)
 I TYP="S3" S HDR="INCORRECT SET OF CODES"
"RTN","LRWU8A",268,0)
 I TYP="S4" S HDR="MISSING INTERP and/or SCREEN"
"RTN","LRWU8A",269,0)
 I TYP="S5" D
"RTN","LRWU8A",270,0)
 . S HDR="BAD FIELD NUMBER and DEFINITION, LAB DATA "
"RTN","LRWU8A",271,0)
 . S HDR=HDR_$S('FIX:"NOT ",1:"")_"UPDATED"
"RTN","LRWU8A",272,0)
 I TYP="S6" S HDR="ANTIBIOTICS NEEDING MANUAL REVIEW/UPDATE"
"RTN","LRWU8A",273,0)
 I 'FIX S HDR="ANALYZE - "_HDR
"RTN","LRWU8A",274,0)
 I FIX S HDR="ANALYZE/REPAIR - "_HDR
"RTN","LRWU8A",275,0)
 F  S IEN=$O(^TMP("LR",$J,TYP,IEN)) Q:IEN=""  D
"RTN","LRWU8A",276,0)
 .I FIX,TYP="S5" D
"RTN","LRWU8A",277,0)
 ..S TMP=$P($G(^TMP("LR",$J,TYP,IEN)),U),ANTIB=$P(^DD(63.3,TMP,0),U)
"RTN","LRWU8A",278,0)
 .E  S ANTIB=$P(^DD(63.3,IEN,0),U)
"RTN","LRWU8A",279,0)
 .I TYP="S1" D
"RTN","LRWU8A",280,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",281,0)
 ..S OLDIT=$P($G(^TMP("LR",$J,TYP,IEN)),"|")
"RTN","LRWU8A",282,0)
 ..S NEWIT=$P($G(^TMP("LR",$J,TYP,IEN)),"|",2)
"RTN","LRWU8A",283,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_OLDIT_"|"_NEWIT_"|"_IEN
"RTN","LRWU8A",284,0)
 .I TYP="S2" D
"RTN","LRWU8A",285,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",286,0)
 ..S OHLP=$P($G(^TMP("LR",$J,TYP,IEN)),"|")
"RTN","LRWU8A",287,0)
 ..S NHLP=$P($G(^TMP("LR",$J,TYP,IEN)),"|",2)
"RTN","LRWU8A",288,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_OHLP_"|"_NHLP_"|"_IEN
"RTN","LRWU8A",289,0)
 .I TYP="S3" D
"RTN","LRWU8A",290,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",291,0)
 ..S OKEY=$P($G(^TMP("LR",$J,TYP,IEN)),"|")
"RTN","LRWU8A",292,0)
 ..S NKEY=$P($G(^TMP("LR",$J,TYP,IEN)),"|",2)
"RTN","LRWU8A",293,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_OKEY_"|"_NKEY_"|"_IEN
"RTN","LRWU8A",294,0)
 .I TYP="S4" D
"RTN","LRWU8A",295,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",296,0)
 ..S INTERP=$P($G(^TMP("LR",$J,TYP,IEN)),U)
"RTN","LRWU8A",297,0)
 ..S SCRN=$P($G(^TMP("LR",$J,TYP,IEN)),U,2)
"RTN","LRWU8A",298,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_INTERP_"|"_SCRN_"|"_IEN
"RTN","LRWU8A",299,0)
 .I TYP="S5" D
"RTN","LRWU8A",300,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",301,0)
 ..S OFLN=IEN
"RTN","LRWU8A",302,0)
 ..I 'FIX S (NFLDN,NINT,NSCR)="TBD"
"RTN","LRWU8A",303,0)
 ..I FIX D
"RTN","LRWU8A",304,0)
 ...S NFLDN=$P($G(^TMP("LR",$J,TYP,IEN)),U)
"RTN","LRWU8A",305,0)
 ...S NINT=$P($G(^TMP("LR",$J,TYP,IEN)),U,2)
"RTN","LRWU8A",306,0)
 ...S NSCR=$P($G(^TMP("LR",$J,TYP,IEN)),U,3)
"RTN","LRWU8A",307,0)
 ..S NFX=$P($G(^TMP("LR",$J,TYP,IEN)),U,4)
"RTN","LRWU8A",308,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_IEN_"|"_NFLDN_"|"_NINT_"|"_NSCR_"|"_NFX
"RTN","LRWU8A",309,0)
 .I TYP="S6" D
"RTN","LRWU8A",310,0)
 ..S CNT=CNT+1
"RTN","LRWU8A",311,0)
 ..S ARY(TYP,CNT)=ANTIB_"|"_IEN
"RTN","LRWU8A",312,0)
 ;
"RTN","LRWU8A",313,0)
 Q
"RTN","LRWU9")
0^213^B178029023
"RTN","LRWU9",1,0)
LRWU9 ;DALOI/CKA - TOOL TO DETECT, FIX, AND REPORT BAD DATA NAMES ;06/22/12  09:52
"RTN","LRWU9",2,0)
 ;;5.2;LAB SERVICE;**350**;Sep 27, 1994;Build 230
"RTN","LRWU9",3,0)
 ;
"RTN","LRWU9",4,0)
 ;Reference to ^PXRMINDX supported by ICR# 4290
"RTN","LRWU9",5,0)
 ;
"RTN","LRWU9",6,0)
EN ; Interactive entry point.
"RTN","LRWU9",7,0)
 ;
"RTN","LRWU9",8,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSPACE,LRSUPFLG,XMDUZ,XMY
"RTN","LRWU9",9,0)
 ;
"RTN","LRWU9",10,0)
 D INIT
"RTN","LRWU9",11,0)
 S LRFIX=$$ASK(),XMY(DUZ)="",XMDUZ=DUZ,INSTALL=0
"RTN","LRWU9",12,0)
 S $P(LRSPACE," ",80)=""
"RTN","LRWU9",13,0)
 I 'LRFIX Q
"RTN","LRWU9",14,0)
 S LRFIX=LRFIX-1
"RTN","LRWU9",15,0)
 D DES^XMA21    ; call to get the email recipients list.
"RTN","LRWU9",16,0)
 D PREP^XGF     ; setup screen
"RTN","LRWU9",17,0)
 D CHKDD
"RTN","LRWU9",18,0)
 D CHK63
"RTN","LRWU9",19,0)
 D SENDMM,CLEAN^XGF
"RTN","LRWU9",20,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",21,0)
 ;
"RTN","LRWU9",22,0)
 Q
"RTN","LRWU9",23,0)
 ;-------------------------------------------------------
"RTN","LRWU9",24,0)
KIDS ; Entry point for post install run.
"RTN","LRWU9",25,0)
 ;
"RTN","LRWU9",26,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSUPFLG,XMY
"RTN","LRWU9",27,0)
 ;
"RTN","LRWU9",28,0)
 I $G(^XMB("NETNAME"))["DOMAIN.EXT",$$PROD^XUPROD() S XMY("G.LAB DEV IRMFO@DOMAIN.EXT")="",XMY("G.CSCLIN4@DOMAIN.EXT")=""
"RTN","LRWU9",29,0)
 S XMY(DUZ)="",XMY("G.LMI")="",INSTALL=1
"RTN","LRWU9",30,0)
 D INIT
"RTN","LRWU9",31,0)
 ;S LRFIX=1   ; [ccr-8167] - LRFIX is set to 0 in INIT subroutine.
"RTN","LRWU9",32,0)
 D CHKDD,CHK63,SENDMM
"RTN","LRWU9",33,0)
 ;
"RTN","LRWU9",34,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",35,0)
 ;
"RTN","LRWU9",36,0)
 Q
"RTN","LRWU9",37,0)
 ;-------------------------------------------------------
"RTN","LRWU9",38,0)
LRNIGHT ; Entry point for ^LRNIGHT run.
"RTN","LRWU9",39,0)
 ;
"RTN","LRWU9",40,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSUPFLG,XMY
"RTN","LRWU9",41,0)
 ;
"RTN","LRWU9",42,0)
 S INSTALL=1
"RTN","LRWU9",43,0)
 D INIT,CHKDD,CHK63
"RTN","LRWU9",44,0)
 S (XMY(DUZ),XMY("G.LMI"))=""
"RTN","LRWU9",45,0)
 I $G(^XMB("NETNAME"))["DOMAIN.EXT",$$PROD^XUPROD() S XMY("G.LAB DEV IRMFO@DOMAIN.EXT")="",XMY("G.CSCLIN4@DOMAIN.EXT")=""
"RTN","LRWU9",46,0)
 I $O(^TMP("LR",$J,"DD63.04",5))]"" D SENDMM
"RTN","LRWU9",47,0)
 ;
"RTN","LRWU9",48,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",49,0)
 ;
"RTN","LRWU9",50,0)
 Q
"RTN","LRWU9",51,0)
 ;-------------------------------------------------------
"RTN","LRWU9",52,0)
INIT ; Initialize variables.
"RTN","LRWU9",53,0)
 ;
"RTN","LRWU9",54,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",55,0)
 D DT^DICRW
"RTN","LRWU9",56,0)
 S LRSITE=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","LRWU9",57,0)
 S LRFIX=0
"RTN","LRWU9",58,0)
 ;
"RTN","LRWU9",59,0)
 Q
"RTN","LRWU9",60,0)
 ;-------------------------------------------------------
"RTN","LRWU9",61,0)
CHKDD ; CHECK DD FOR BAD DATA NAMES.
"RTN","LRWU9",62,0)
 ;First check for DDs with the same subscript
"RTN","LRWU9",63,0)
 N CNT,DA,DIK,LR60CNT,LR60IEN,LRLOC,LRDATA,LRD0,LRPC,LRSUB,LRX,LRDD,LRDDA,LRNOTEST,LRNOFIX,LRSUBCNT
"RTN","LRWU9",64,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",65,0)
 S LRNUM=1
"RTN","LRWU9",66,0)
 ;
"RTN","LRWU9",67,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=$$NAME^XUAF4($$KSP^XUPARAM("INST"))_" ("_$$KSP^XUPARAM("WHERE")_")      "_$$FMTE^XLFDT(DT)
"RTN","LRWU9",68,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",69,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",70,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",71,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",72,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",73,0)
 ;
"RTN","LRWU9",74,0)
 S LRD0=1,LRDD=0,LRDDA=0
"RTN","LRWU9",75,0)
 F CNT=0:1 S LRD0=$O(^DD(63.04,LRD0)) Q:LRD0=""  D:$D(^DD(63.04,LRD0,0))
"RTN","LRWU9",76,0)
 . S LRDATA=$G(^DD(63.04,LRD0,0)) Q:LRDATA=""
"RTN","LRWU9",77,0)
 . S LRSUB=$P($P(LRDATA,U,4),";")
"RTN","LRWU9",78,0)
 . S LRPC=$P($P(LRDATA,U,4),";",2)
"RTN","LRWU9",79,0)
 . S LR60IEN="",LR60CNT=0
"RTN","LRWU9",80,0)
 . S LRX=0 F  S LRX=$O(^LAB(60,"C","CH;"_LRSUB_";"_LRPC,LRX)) Q:'LRX  D
"RTN","LRWU9",81,0)
 . . I $P($G(^LAB(60,LRX,.2)),U,1)=LRD0 D
"RTN","LRWU9",82,0)
 . . . S LR60IEN=LRX
"RTN","LRWU9",83,0)
 . . . S ^TMP("LR",$J,"SORT","LD",LRD0,LR60IEN)=""
"RTN","LRWU9",84,0)
 . . . S LR60CNT=LR60CNT+1
"RTN","LRWU9",85,0)
 . S LRSUBCNT=$G(^TMP("LR",$J,"SORT",1,LRSUB))+1
"RTN","LRWU9",86,0)
 . S ^TMP("LR",$J,"SORT",1,LRSUB)=LRSUBCNT
"RTN","LRWU9",87,0)
 . S ^TMP("LR",$J,"SORT",1,LRSUB,LRD0)=$P(LRDATA,U,1)_U_$P(LRDATA,U,4)_U_LR60IEN
"RTN","LRWU9",88,0)
 . I 'LR60IEN S ^TMP("LR",$J,"SORT","L",LRSUB,LRD0)=LRSUB ; L subscript used when Data name is not linked to a test
"RTN","LRWU9",89,0)
 . I LRPC'=1!(LRSUB'=LRD0) S ^TMP("LR",$J,"SORT","C",LRD0)=LRSUB ; C subscript used when Data name has wrong subscript location
"RTN","LRWU9",90,0)
 . I LRSUBCNT>1 S ^TMP("LR",$J,"SORT","D",LRSUB)="" ; D subscript used when more than one Data name has the same subscript
"RTN","LRWU9",91,0)
 . I LR60CNT=1 K ^TMP("LR",$J,"SORT","LD",LRD0) ; LD subscript used when there are multiple tests linked to a data name
"RTN","LRWU9",92,0)
 ;
"RTN","LRWU9",93,0)
 ; Report issues with duplicate subscript locations
"RTN","LRWU9",94,0)
 S LRSUB="" F  S LRSUB=$O(^TMP("LR",$J,"SORT","D",LRSUB)) Q:LRSUB=""  D
"RTN","LRWU9",95,0)
 . S LRSUPFLG=1
"RTN","LRWU9",96,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",97,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*WARNING* THE FOLLOWING DATA NAMES ARE ASSIGNED THE SAME SUBSCRIPT #"_LRSUB,LRNUM=LRNUM+1
"RTN","LRWU9",98,0)
 . S LRD0=0 F  S LRD0=$O(^TMP("LR",$J,"SORT",1,LRSUB,LRD0)) Q:LRD0=""  D
"RTN","LRWU9",99,0)
 . . S LRDATA=$G(^TMP("LR",$J,"SORT",1,LRSUB,LRD0))
"RTN","LRWU9",100,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="   - Data Name '"_$P(LRDATA,U,1)_"' (#"_LRD0_") is assigned location: "_$P(LRDATA,U,2),LRNUM=LRNUM+1
"RTN","LRWU9",101,0)
 . . I $P(LRDATA,U,3) D
"RTN","LRWU9",102,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     (This Data Name is linked to Lab test #"_$P(LRDATA,U,3)_" "_$P(^LAB(60,$P(LRDATA,U,3),0),U)_")",LRNUM=LRNUM+1
"RTN","LRWU9",103,0)
 . . I '$P(LRDATA,U,3) D
"RTN","LRWU9",104,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     (This Data Name is not linked to a Lab test)",LRNUM=LRNUM+1
"RTN","LRWU9",105,0)
 ;
"RTN","LRWU9",106,0)
 ; Report issues with multiple tests with the same data name
"RTN","LRWU9",107,0)
 S LRD0=0 F  S LRD0=$O(^TMP("LR",$J,"SORT","LD",LRD0)) Q:'LRD0  D
"RTN","LRWU9",108,0)
 . S LRSUPFLG=1
"RTN","LRWU9",109,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",110,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*WARNING* THE DATA NAME '"_$P(^DD(63.04,LRD0,0),U)_"' (#"_LRD0_") IS LINKED TO MORE THAN ONE LAB TEST:",LRNUM=LRNUM+1
"RTN","LRWU9",111,0)
 . N LRCNT
"RTN","LRWU9",112,0)
 . S LR60IEN=0 F  S LR60IEN=$O(^TMP("LR",$J,"SORT","LD",LRD0,LR60IEN)) Q:'LR60IEN  D
"RTN","LRWU9",113,0)
 . . S LRCNT=$G(LRCNT)+1
"RTN","LRWU9",114,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="   "_LRCNT_". "_$P($G(^LAB(60,LR60IEN,0)),U,1)_" (#"_LR60IEN_")"
"RTN","LRWU9",115,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",116,0)
 ;
"RTN","LRWU9",117,0)
 ;Check - SUBSCRIPT'=FIELD #
"RTN","LRWU9",118,0)
 ;        NOT IN FIRST PIECE
"RTN","LRWU9",119,0)
 ;        OR BOTH
"RTN","LRWU9",120,0)
 ;
"RTN","LRWU9",121,0)
 ;
"RTN","LRWU9",122,0)
 I 'INSTALL D SAY^XGF(24,1,LRSPACE),SAY^XGF(24,1,"LRD0=")
"RTN","LRWU9",123,0)
 S LRD0=1
"RTN","LRWU9",124,0)
 F CNT=0:1 S LRD0=$O(^TMP("LR",$J,"SORT","C",LRD0)) Q:LRD0=""  D
"RTN","LRWU9",125,0)
 . S LRDATA=$G(^DD(63.04,LRD0,0)) Q:LRDATA=""
"RTN","LRWU9",126,0)
 . S LRSUB=$P($P(LRDATA,U,4),";")
"RTN","LRWU9",127,0)
 . S LRPC=$P($P(LRDATA,U,4),";",2)
"RTN","LRWU9",128,0)
 . I $D(^TMP("LR",$J,"SORT","D",LRSUB)) Q
"RTN","LRWU9",129,0)
 . S LR60IEN=$P($G(^TMP("LR",$J,"SORT",1,LRSUB,LRD0)),U,3)
"RTN","LRWU9",130,0)
 . I 'INSTALL,'(CNT#100) D SAY^XGF(24,1,"LRD0="_LRD0)
"RTN","LRWU9",131,0)
 . I LRPC'=1!(LRSUB'=LRD0) D
"RTN","LRWU9",132,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",133,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name Location "_$P(^DD(63.04,LRD0,0),U)_" CH;"_LRSUB_";"_LRPC_" should be CH;"_LRD0_";1"
"RTN","LRWU9",134,0)
 . . I LRFIX,LR60IEN,'$D(^TMP("LR",$J,"SORT","LD",LRD0)) D FIXDD D
"RTN","LRWU9",135,0)
 . . . S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***FIXED***"
"RTN","LRWU9",136,0)
 . . I LRFIX,('LR60IEN!($D(^TMP("LR",$J,"SORT","LD",LRD0)))) D
"RTN","LRWU9",137,0)
 . . . S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***"
"RTN","LRWU9",138,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",139,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",140,0)
 . . I LR60IEN,$G(^TMP("LR",$J,"DDFIXED",LRSUB)) D
"RTN","LRWU9",141,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Lab test # "_LR60IEN_" "_$P(^LAB(60,LR60IEN,0),U)_" DATA NAME (LOCATION) SUBSCRIPT  **** FIXED ****"
"RTN","LRWU9",142,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",143,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="    OLD SUBSCRIPT="_LRSUB_" NEW SUBSCRIPT="_LRD0
"RTN","LRWU9",144,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",145,0)
 . . I 'LR60IEN D
"RTN","LRWU9",146,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name is not linked to a File #60 Laboratory Test"
"RTN","LRWU9",147,0)
 . . . I LRFIX S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***",LRSUPFLG=1
"RTN","LRWU9",148,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",149,0)
 . . I $D(^TMP("LR",$J,"SORT","LD",LRD0)) D
"RTN","LRWU9",150,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name is linked to more than one File #60 Laboratory Test"
"RTN","LRWU9",151,0)
 . . . I LRFIX S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***",LRSUPFLG=1
"RTN","LRWU9",152,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",153,0)
 ;
"RTN","LRWU9",154,0)
 Q
"RTN","LRWU9",155,0)
 ;-------------------------------------------------------
"RTN","LRWU9",156,0)
CHK63 ;CHECK FILE 63 FOR TEST DATA WITH NO DATA NAME
"RTN","LRWU9",157,0)
 ;
"RTN","LRWU9",158,0)
 N CNT,DATANUM,LRDFN,LRIDT,LRD0,LRNUM1,LRNUM2
"RTN","LRWU9",159,0)
 I 'INSTALL D SAY^XGF(24,1,LRSPACE),SAY^XGF(24,1,"LRDFN=")
"RTN","LRWU9",160,0)
 S (LRDFN,LRIDT,LRD0)=""
"RTN","LRWU9",161,0)
 S LRNUM1=1,LRNUM2=1
"RTN","LRWU9",162,0)
 F CNT=0:1 S LRDFN=$O(^LR(LRDFN)) Q:LRDFN=""  D
"RTN","LRWU9",163,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT=""  D
"RTN","LRWU9",164,0)
 . . N LRREPAIR
"RTN","LRWU9",165,0)
 . . S LRD0=1
"RTN","LRWU9",166,0)
 . . F  S LRD0=$O(^LR(LRDFN,"CH",LRIDT,LRD0)) Q:LRD0'>0  D
"RTN","LRWU9",167,0)
 . . . I $D(LRREPAIR(LRD0)) Q  ;Used to prevent issues when two Data Names use each others subscripts
"RTN","LRWU9",168,0)
 . . . I 'INSTALL,'(CNT#100) D SAY^XGF(24,1,"LRDFN="_LRDFN)
"RTN","LRWU9",169,0)
 . . . I '$D(^DD(63.04,LRD0,0)),'$D(^TMP("LR",$J,"SORT",1,LRD0)) D
"RTN","LRWU9",170,0)
 . . . . S ^TMP("LR",$J,"SORT","W",LRD0,LRNUM2)="^LR("_LRDFN_",""CH"","_LRIDT_","_LRD0_")"
"RTN","LRWU9",171,0)
 . . . . S LRNUM2=LRNUM2+1
"RTN","LRWU9",172,0)
 . . . ; Check if there are results that belong to a Data Name that is not linked to a test.
"RTN","LRWU9",173,0)
 . . . S DATANUM=$O(^TMP("LR",$J,"SORT","L",LRD0,0))
"RTN","LRWU9",174,0)
 . . . I DATANUM,'$D(^TMP("LR",$J,"SORT","D",LRD0)) D
"RTN","LRWU9",175,0)
 . . . . ;SORT BY DATA NAME
"RTN","LRWU9",176,0)
 . . . . S ^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)="^LR("_LRDFN_",""CH"","_LRIDT_","_LRD0_")"
"RTN","LRWU9",177,0)
 . . . . S LRNUM1=LRNUM1+1
"RTN","LRWU9",178,0)
 . . . I LRFIX D FIX63
"RTN","LRWU9",179,0)
 S LRNUM2=0,DATANUM=0
"RTN","LRWU9",180,0)
 I $D(^TMP("LR",$J,"SORT","W")) D
"RTN","LRWU9",181,0)
 . F  S DATANUM=$O(^TMP("LR",$J,"SORT","W",DATANUM)) Q:DATANUM'>0  D
"RTN","LRWU9",182,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",183,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Results in subscript '"_DATANUM_"' without a Data Name at: "
"RTN","LRWU9",184,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",185,0)
 . . F  S LRNUM2=$O(^TMP("LR",$J,"SORT","W",DATANUM,LRNUM2)) Q:LRNUM2'>0  D
"RTN","LRWU9",186,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     "_^TMP("LR",$J,"SORT","W",DATANUM,LRNUM2)
"RTN","LRWU9",187,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",188,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",189,0)
 S LRNUM1=0,DATANUM=0
"RTN","LRWU9",190,0)
 I $D(^TMP("LR",$J,"SORT","T")) D
"RTN","LRWU9",191,0)
 . F  S DATANUM=$O(^TMP("LR",$J,"SORT","T",DATANUM)) Q:DATANUM'>0  D
"RTN","LRWU9",192,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",193,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Results in Data Name "_$P(^DD(63.04,DATANUM,0),U,1)_" without a test in file 60 at: "
"RTN","LRWU9",194,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",195,0)
 . . F  S LRNUM1=$O(^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)) Q:LRNUM1'>0  D
"RTN","LRWU9",196,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     "_^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)
"RTN","LRWU9",197,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",198,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",199,0)
 ;
"RTN","LRWU9",200,0)
 Q
"RTN","LRWU9",201,0)
 ;-------------------------------------------------------
"RTN","LRWU9",202,0)
FIXDD ; FIX DD FOR BAD DATA NAMES.
"RTN","LRWU9",203,0)
 ;
"RTN","LRWU9",204,0)
 N DDFIELD,LRNAME,LRTYPE
"RTN","LRWU9",205,0)
 ;
"RTN","LRWU9",206,0)
 D FIELD^DID(63.04,LRD0,"","LABEL;TYPE","DDFIELD")
"RTN","LRWU9",207,0)
 S LRNAME=DDFIELD("LABEL")
"RTN","LRWU9",208,0)
 S LRTYPE=DDFIELD("TYPE")
"RTN","LRWU9",209,0)
 S DA=LRD0
"RTN","LRWU9",210,0)
 D DDFIX^LRWU6
"RTN","LRWU9",211,0)
 I LR60IEN D
"RTN","LRWU9",212,0)
 . I $P(^LAB(60,LR60IEN,0),U,5)'="CH;"_LRD0_";1"!($P(^LAB(60,LR60IEN,0),U,12)'="DD(63.04,"_LRD0_",")!(^LAB(60,LR60IEN,.2)'=LRD0) D
"RTN","LRWU9",213,0)
 . . N LRFDA,LRDIE
"RTN","LRWU9",214,0)
 . . S LRFDA(1,60,LR60IEN_",",400)=LRD0
"RTN","LRWU9",215,0)
 . . S LRFDA(1,60,LR60IEN_",",5)="CH;"_LRD0_";1"
"RTN","LRWU9",216,0)
 . . S LRFDA(1,60,LR60IEN_",",13)="DD(63.04,"_LRD0_","
"RTN","LRWU9",217,0)
 . . D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRWU9",218,0)
 . . S ^TMP("LR",$J,"DDFIXED",LRSUB)=LRD0_U_LRPC_U_LR60IEN
"RTN","LRWU9",219,0)
 ;
"RTN","LRWU9",220,0)
 Q
"RTN","LRWU9",221,0)
 ;-------------------------------------------------------
"RTN","LRWU9",222,0)
FIX63 ;FIX DATA NODES IN FILE 63
"RTN","LRWU9",223,0)
 ;
"RTN","LRWU9",224,0)
 Q:$D(^TMP("LR",$J,"SORT","D",LRD0))
"RTN","LRWU9",225,0)
 Q:'$D(^TMP("LR",$J,"DDFIXED",LRD0))
"RTN","LRWU9",226,0)
 Q:($P(^TMP("LR",$J,"DDFIXED",LRD0),U,2)'=1)
"RTN","LRWU9",227,0)
 S LRLOC=$P(^TMP("LR",$J,"DDFIXED",LRD0),U)
"RTN","LRWU9",228,0)
 I $D(^DD(63.04,LRD0,0))!($D(^TMP("LR",$J,"SORT",1,LRD0))) S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",229,0)
 I $D(^LR(LRDFN,"CH",LRIDT,LRLOC)) D  Q
"RTN","LRWU9",230,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*ERROR* MOVING OVER ^LR("_LRDFN_",CH,"_LRIDT_","_LRD0_") TO ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",231,0)
 . S LRNUM=LRNUM+1
"RTN","LRWU9",232,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data already exists in ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",233,0)
 . S LRNUM=LRNUM+1
"RTN","LRWU9",234,0)
 . S LRSUPFLG=1
"RTN","LRWU9",235,0)
 D CHKILLPX(LRDFN,LRIDT,LRD0) ;Kill Clinical Reminders Index
"RTN","LRWU9",236,0)
 S ^LR(LRDFN,"CH",LRIDT,LRLOC)=^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",237,0)
 K ^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",238,0)
 S LRREPAIR(LRLOC)=""
"RTN","LRWU9",239,0)
 D CHSET^LRPX(LRDFN,LRIDT) ;Set Clinical Reminders Index
"RTN","LRWU9",240,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="DATA LOCATION FIXED IN LAB DATA FILE ^LR"
"RTN","LRWU9",241,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",242,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="^LR("_LRDFN_",CH,"_LRIDT_","_LRD0_") NOW MOVED TO ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",243,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",244,0)
 ;
"RTN","LRWU9",245,0)
 Q
"RTN","LRWU9",246,0)
 ;-------------------------------------------------------
"RTN","LRWU9",247,0)
CHKILLPX(LRDFN,LRIDT,LRD0) ;Kill Clinical Reminders Index
"RTN","LRWU9",248,0)
 N LR60IEN,DFN,DATE,OK,DAS,LRDBLCHK
"RTN","LRWU9",249,0)
 S LR60IEN=$P(^TMP("LR",$J,"DDFIXED",LRD0),U,3)
"RTN","LRWU9",250,0)
 I 'LR60IEN D
"RTN","LRWU9",251,0)
 . N DATA
"RTN","LRWU9",252,0)
 . S DATA=^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",253,0)
 . S LR60IEN=+$P($P(DATA,U,3),"!",7)
"RTN","LRWU9",254,0)
 I 'LR60IEN Q
"RTN","LRWU9",255,0)
 I '$L($G(^LR(+$G(LRDFN),"CH",+$G(LRIDT),0))) Q
"RTN","LRWU9",256,0)
 D PATIENT^LRPX(LRDFN,.DFN,.OK) I 'OK Q
"RTN","LRWU9",257,0)
 S DATE=9999999-LRIDT
"RTN","LRWU9",258,0)
 S DAS=LRDFN_";CH;"_LRIDT_";"_LRD0
"RTN","LRWU9",259,0)
 S LRDBLCHK=0
"RTN","LRWU9",260,0)
 I '$D(^PXRMINDX(63,"PI",DFN,LR60IEN,DATE,DAS)) S LRDBLCHK=1
"RTN","LRWU9",261,0)
 D KLAB^LRPX(DFN,DATE,LR60IEN,DAS)
"RTN","LRWU9",262,0)
 ;
"RTN","LRWU9",263,0)
 I LRDBLCHK D
"RTN","LRWU9",264,0)
 . N ITEM,FLAG
"RTN","LRWU9",265,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:'ITEM!($D(FLAG))  D
"RTN","LRWU9",266,0)
 . . I $D(^PXRMINDX(63,"PI",DFN,ITEM,DATE,DAS)) D
"RTN","LRWU9",267,0)
 . . . D KLAB^LRPX(DFN,DATE,ITEM,DAS)
"RTN","LRWU9",268,0)
 . . . S FLAG=1
"RTN","LRWU9",269,0)
 Q
"RTN","LRWU9",270,0)
 ;-------------------------------------------------------
"RTN","LRWU9",271,0)
SENDMM ;SEND MAIL MESSAGE OF ERRORS FOUND AND/OR FIXED.
"RTN","LRWU9",272,0)
 ;
"RTN","LRWU9",273,0)
 N XMSUB,DIFROM,XMINSTR
"RTN","LRWU9",274,0)
 ;
"RTN","LRWU9",275,0)
 S LRNUM=3
"RTN","LRWU9",276,0)
 I $O(^TMP("LR",$J,"DD63.04",5)) D  ;Errors were found
"RTN","LRWU9",277,0)
 . ;
"RTN","LRWU9",278,0)
 . I 'LRFIX!(LRFIX&($G(LRSUPFLG))) D  ;not all errors were auto-repaired
"RTN","LRWU9",279,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Contact the National Service Desk to request assistance from the Clin 4",LRNUM=LRNUM+1
"RTN","LRWU9",280,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Product Support team in resolving the following errors identified in the",LRNUM=LRNUM+1
"RTN","LRWU9",281,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="VistA Laboratory package:",LRNUM=LRNUM+1
"RTN","LRWU9",282,0)
 . ;
"RTN","LRWU9",283,0)
 . I LRFIX,'$G(LRSUPFLG) D  ;all errors were auto-repaired
"RTN","LRWU9",284,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="The LAB DATA file (#63) cleanup process has found and repaired the",LRNUM=LRNUM+1
"RTN","LRWU9",285,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="following errors:",LRNUM=LRNUM+1
"RTN","LRWU9",286,0)
 ;
"RTN","LRWU9",287,0)
 I '$O(^TMP("LR",$J,"DD63.04",5)) D  ;No errors were found
"RTN","LRWU9",288,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=""
"RTN","LRWU9",289,0)
 . S ^TMP("LR",$J,"DD63.04",(LRNUM+1))="*** NO ERRORS FOUND ***"
"RTN","LRWU9",290,0)
 ;
"RTN","LRWU9",291,0)
 S XMSUB="DATA DICTIONARY ^DD(63.04 CHECK REPORT "
"RTN","LRWU9",292,0)
 S XMSUB=XMSUB_$$FMTE^XLFDT($$NOW^XLFDT,"1S")
"RTN","LRWU9",293,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LRWU9",294,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"^TMP(""LR"",$J,""DD63.04"")",.XMY,.XMINSTR)
"RTN","LRWU9",295,0)
 ;
"RTN","LRWU9",296,0)
 Q
"RTN","LRWU9",297,0)
 ;-------------------------------------------------------
"RTN","LRWU9",298,0)
ASK() ; Run analyze/repair query
"RTN","LRWU9",299,0)
 ;
"RTN","LRWU9",300,0)
 N Y,DIR,DIRUT,DTOUT,DUOUT,FIX
"RTN","LRWU9",301,0)
 ;
"RTN","LRWU9",302,0)
 S FIX=0
"RTN","LRWU9",303,0)
 ;
"RTN","LRWU9",304,0)
 W !,"This process will check the CHEM, HEM, TOX, RIA, SER, etc."
"RTN","LRWU9",305,0)
 W !,"Sub-file (#63.04) of the LAB DATA file (#63) looking for"
"RTN","LRWU9",306,0)
 W !,"possible discrepancies in the Data Dictionary.  Once the"
"RTN","LRWU9",307,0)
 W !,"process has completed, a MailMan message will be sent to the"
"RTN","LRWU9",308,0)
 W !,"user that started this process and any other user selected."
"RTN","LRWU9",309,0)
 W !!
"RTN","LRWU9",310,0)
 W !,"The two modes in which this process can be run are ANALYZE"
"RTN","LRWU9",311,0)
 W !,"and REPAIR.  If the ANALYZE option is chosen, the process will"
"RTN","LRWU9",312,0)
 W !,"only look for discrepancies and report the findings via a"
"RTN","LRWU9",313,0)
 W !,"MailMan message.  If the ANALYZE,REPAIR option is chosen the"
"RTN","LRWU9",314,0)
 W !,"process will ANALYZE and REPAIR any discrepancies found that"
"RTN","LRWU9",315,0)
 W !,"can be fixed programmatically and list all those that could"
"RTN","LRWU9",316,0)
 W !,"not be fixed but need attention."
"RTN","LRWU9",317,0)
 W !!
"RTN","LRWU9",318,0)
 ;
"RTN","LRWU9",319,0)
 S DIR("A")="Do you want to continue with this process",DIR("B")="NO"
"RTN","LRWU9",320,0)
 S DIR(0)="Y"
"RTN","LRWU9",321,0)
 D ^DIR
"RTN","LRWU9",322,0)
 I 'Y Q FIX
"RTN","LRWU9",323,0)
 ;
"RTN","LRWU9",324,0)
 K DIR,Y
"RTN","LRWU9",325,0)
 ;
"RTN","LRWU9",326,0)
 S DIR(0)="NAO^1:3",DIR("B")=3
"RTN","LRWU9",327,0)
 S DIR("A",1)="Select the action you wish to take:"
"RTN","LRWU9",328,0)
 S DIR("A",2)=""
"RTN","LRWU9",329,0)
 S DIR("A",3)="1. Analyze and Report."
"RTN","LRWU9",330,0)
 S DIR("A",4)="2. Analyze, Repair, and Report."
"RTN","LRWU9",331,0)
 S DIR("A",5)="3. Quit - No Action."
"RTN","LRWU9",332,0)
 S DIR("A",6)=""
"RTN","LRWU9",333,0)
 S DIR("A")="Enter a number 1 thru 3: "
"RTN","LRWU9",334,0)
 S DIR("?")="Select a number 1 thru 3 or press <Return> to exit"
"RTN","LRWU9",335,0)
 ;
"RTN","LRWU9",336,0)
 D ^DIR
"RTN","LRWU9",337,0)
 I Y=1 S FIX=1
"RTN","LRWU9",338,0)
 I Y=2 S FIX=2
"RTN","LRWU9",339,0)
 I Y=3!(Y=-1)!('Y) S FIX=0 Q FIX
"RTN","LRWU9",340,0)
 ;
"RTN","LRWU9",341,0)
 K DIR,Y
"RTN","LRWU9",342,0)
 S DIR("A")="Are you sure you want to proceed",DIR("B")="NO"
"RTN","LRWU9",343,0)
 S DIR(0)="Y"
"RTN","LRWU9",344,0)
 D ^DIR
"RTN","LRWU9",345,0)
 I 'Y S FIX=0
"RTN","LRWU9",346,0)
 ;
"RTN","LRWU9",347,0)
 Q FIX
"RTN","LRX")
0^108^B71828345
"RTN","LRX",1,0)
LRX ;DALOI/STAFF - UTILITY ROUTINES -- PREVIOUSLY ^LAB("X","...") ;03/31/09  11:39
"RTN","LRX",2,0)
 ;;5.2;LAB SERVICE;**65,153,201,217,290,360,350**;Sep 27, 1994;Build 230
"RTN","LRX",3,0)
 ;
"RTN","LRX",4,0)
 ;
"RTN","LRX",5,0)
PT ; Patient info
"RTN","LRX",6,0)
 ;
"RTN","LRX",7,0)
 N X,I,N,Y
"RTN","LRX",8,0)
 D KVAR^VADPT
"RTN","LRX",9,0)
 K LRTREA,LRWRD,AGE
"RTN","LRX",10,0)
 S (AGE,AGE(2),PNM,SEX,DOB,DOD,SSN,VA200,LRWRD,LRRB,LRTREA,VA("PID"),VA("BID"))=""
"RTN","LRX",11,0)
 I $G(LRDFN),'$G(LRDPF),$G(^LR(LRDFN,0)) S LRDPF=$P(^(0),U,2),DFN=$P(^(0),U,3)
"RTN","LRX",12,0)
 S LREND=0
"RTN","LRX",13,0)
 S:$G(DFN)<1!('$G(LRDPF)) LREND=1 Q:$G(LREND)
"RTN","LRX",14,0)
 ;
"RTN","LRX",15,0)
 I +$G(LRDPF)'=2 D
"RTN","LRX",16,0)
 . S X=$$GET1^DID(1,+LRDPF,"","GLOBAL NAME","ANS","ANS1")
"RTN","LRX",17,0)
 . S X=X_DFN_",0)",X=$S($D(@X):@X,1:""),LRWRD=$S($D(^(.1)):$P(^(.1),U),1:0),LRRB=$S($D(^(.101)):$P(^(.101),U),1:""),DOD=$S($D(^(.35)):$P(^(.35),U),1:"")
"RTN","LRX",18,0)
 . S PNM=$P(X,U),SSN=$P(X,U,9)
"RTN","LRX",19,0)
 . I +$G(LRDPF)=62.3 Q
"RTN","LRX",20,0)
 . S SEX=$P(X,U,2),SEX=$S(SEX="":"M",1:SEX)
"RTN","LRX",21,0)
 . S DOB=$P(X,U,3)
"RTN","LRX",22,0)
 . S AGE=$S($D(DT)&(DOB?1(7N,7N1".".6N)):DT-DOB\10000,1:"??")
"RTN","LRX",23,0)
 . S AGE(2)=$$AGE2(DOB,$G(LRCDT)) ;Age of the patient when the specimen was collected (default =99Yr if no valid DOB present)
"RTN","LRX",24,0)
 . ;Default for LRCDT (collection date) is DT
"RTN","LRX",25,0)
 ;
"RTN","LRX",26,0)
 I +$G(LRDPF)=2 D
"RTN","LRX",27,0)
 . N I,X,N,Y
"RTN","LRX",28,0)
 . D OERR^VADPT Q:VAERR
"RTN","LRX",29,0)
 . S PNM=VADM(1)
"RTN","LRX",30,0)
 . S SEX=$P(VADM(5),U),DOB=$P(VADM(3),U),DOD=$P(VADM(6),U)
"RTN","LRX",31,0)
 . S AGE=VADM(4),AGE(2)=$$AGE2(DOB,$G(LRCDT))
"RTN","LRX",32,0)
 . S SSN=VA("PID"),SSN(1)=VA("BID"),LRWRD=$P(VAIN(4),U,2)
"RTN","LRX",33,0)
 . S LRWRD(1)=+VAIN(4),LRRB=VAIN(5),LRPRAC=+VAIN(2)
"RTN","LRX",34,0)
 . S:VAIN(3) LRTREA=+VAIN(3)
"RTN","LRX",35,0)
 ;
"RTN","LRX",36,0)
 D SSNFM^LRU
"RTN","LRX",37,0)
 Q
"RTN","LRX",38,0)
 ;
"RTN","LRX",39,0)
 ;
"RTN","LRX",40,0)
DEM ; Call DEM^VADPT instead of OERR used above
"RTN","LRX",41,0)
 N X,I,N,Y
"RTN","LRX",42,0)
 D KVAR^VADPT
"RTN","LRX",43,0)
 K LRTREA,LRWRD,AGE
"RTN","LRX",44,0)
 S (AGE,AGE(2),PNM,SEX,DOB,DOD,SSN,VA200,LRWRD,LRRB,LRTREA,VA("PID"),VA("BID"))=""
"RTN","LRX",45,0)
 I $G(LRDFN),'$G(LRDPF),$G(^LR(LRDFN,0)) S LRDPF=$P(^(0),U,2),DFN=$P(^(0),U,3)
"RTN","LRX",46,0)
 S LREND=0 S:$G(DFN)<1!('$G(LRDPF)) LREND=1 Q:$G(LREND)
"RTN","LRX",47,0)
 ;
"RTN","LRX",48,0)
 I +$G(LRDPF)'=2 D
"RTN","LRX",49,0)
 . S X=^DIC(+LRDPF,0,"GL")_DFN_",0)",X=$S($D(@X):@X,1:""),LRWRD=$S($D(^(.1)):$P(^(.1),U),1:0),LRRB=$S($D(^(.101)):$P(^(.101),U),1:"")
"RTN","LRX",50,0)
 . S PNM=$P(X,U),SSN=$P(X,U,9)
"RTN","LRX",51,0)
 . I +$G(LRDPF)=62.3 Q
"RTN","LRX",52,0)
 . S SEX=$P(X,U,2),SEX=$S(SEX="":"M",1:SEX),DOB=$P(X,U,3)
"RTN","LRX",53,0)
 . S AGE=$S($D(DT)&(DOB?1(7N,7N1".".6N)):DT-DOB\10000,1:"??")
"RTN","LRX",54,0)
 . S AGE(2)=$$AGE2(DOB,$G(LRCDT))
"RTN","LRX",55,0)
 ;
"RTN","LRX",56,0)
 I +$G(LRDPF)=2 N I,X,N,Y D
"RTN","LRX",57,0)
 . D DEM^VADPT Q:VAERR
"RTN","LRX",58,0)
 . S PNM=VADM(1),SEX=$P(VADM(5),U),DOD=$P(VADM(6),U)
"RTN","LRX",59,0)
 . S DOB=$P(VADM(3),U),SSN=VA("PID"),SSN(1)=VA("BID")
"RTN","LRX",60,0)
 . S AGE=VADM(4),AGE(2)=$$AGE2(DOB,$G(LRCDT))
"RTN","LRX",61,0)
 ;
"RTN","LRX",62,0)
 D SSNFM^LRU
"RTN","LRX",63,0)
 Q
"RTN","LRX",64,0)
 ;
"RTN","LRX",65,0)
 ;
"RTN","LRX",66,0)
DD ;date/time format
"RTN","LRX",67,0)
 S Y=$$FMTE^XLFDT(Y,"5Z")
"RTN","LRX",68,0)
 S Y=$P(Y,"@")_" "_$P($P(Y,"@",2),":",1,2)
"RTN","LRX",69,0)
 Q
"RTN","LRX",70,0)
 ;
"RTN","LRX",71,0)
 ;
"RTN","LRX",72,0)
DDOLD ;OLD
"RTN","LRX",73,0)
 I $E(Y,4,7)="0000" S Y=$S($E(Y)=2:"19"_$E(Y,2,3),1:"20"_$E(Y,2,3)) Q
"RTN","LRX",74,0)
 S Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_$S(Y#1:" "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"")
"RTN","LRX",75,0)
 Q
"RTN","LRX",76,0)
 ;
"RTN","LRX",77,0)
 ;
"RTN","LRX",78,0)
DT ;current date format is LRDT0
"RTN","LRX",79,0)
 N X,DIK,DIC,%I,DICS,%DT
"RTN","LRX",80,0)
 D DT^DICRW
"RTN","LRX",81,0)
 S Y=$$FMTE^XLFDT(DT,"5D")
"RTN","LRX",82,0)
 S LRDT0=Y
"RTN","LRX",83,0)
 Q
"RTN","LRX",84,0)
 ;
"RTN","LRX",85,0)
 ;
"RTN","LRX",86,0)
DTOLD ;2-DIGIT
"RTN","LRX",87,0)
 ;current date format is LRDT0
"RTN","LRX",88,0)
 N X,DIK,DIC,%I,DICS,%DT
"RTN","LRX",89,0)
 D DT^DICRW
"RTN","LRX",90,0)
 S Y=$P(DT,".") D DDOLD S LRDTO=Y
"RTN","LRX",91,0)
 Q
"RTN","LRX",92,0)
 ;
"RTN","LRX",93,0)
 ;
"RTN","LRX",94,0)
DASH ;line of dashes
"RTN","LRX",95,0)
 W !,$E("--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",1,IOM-1)
"RTN","LRX",96,0)
 Q
"RTN","LRX",97,0)
 ;
"RTN","LRX",98,0)
 ;
"RTN","LRX",99,0)
EQUALS ;line of equals
"RTN","LRX",100,0)
 W !,$E("====================================================================================================================================================================================================================",1,IOM-1)
"RTN","LRX",101,0)
 Q
"RTN","LRX",102,0)
 ;
"RTN","LRX",103,0)
 ;
"RTN","LRX",104,0)
DUZ ;user info
"RTN","LRX",105,0)
 S (LRUSNM,LRUSI)="" Q:'$D(X)  Q:'$D(^VA(200,+X,0))  S LRUSNM=$P(^(0),"^"),LRUSI=$P(^(0),"^",2)
"RTN","LRX",106,0)
 Q
"RTN","LRX",107,0)
 ;
"RTN","LRX",108,0)
 ;
"RTN","LRX",109,0)
DOC ;provider info
"RTN","LRX",110,0)
 I $L(X),'X S LRDOC=X Q
"RTN","LRX",111,0)
 S LRDOC=$P($G(^VA(200,+X,0)),U)
"RTN","LRX",112,0)
 S:LRDOC="" LRDOC="Unknown"
"RTN","LRX",113,0)
 Q
"RTN","LRX",114,0)
 ;
"RTN","LRX",115,0)
 ;
"RTN","LRX",116,0)
PRAC(X) ;prac info
"RTN","LRX",117,0)
 N Y
"RTN","LRX",118,0)
 I $L(X),'X Q X
"RTN","LRX",119,0)
 S Y=$P($G(^VA(200,+X,0)),U)
"RTN","LRX",120,0)
 S:Y="" Y="Unknown"
"RTN","LRX",121,0)
 Q Y
"RTN","LRX",122,0)
 ;
"RTN","LRX",123,0)
 ;
"RTN","LRX",124,0)
YMD ;year/month/date
"RTN","LRX",125,0)
 S %=%H>21549+%H-.1,%Y=%\365.25+141,%=%#365.25\1,%D=%+306#(%Y#4=0+365)#153#61#31+1,%M=%-%D\29+1,X=%Y_"00"+%M_"00"+%D K %Y,%D,%M,%
"RTN","LRX",126,0)
 Q
"RTN","LRX",127,0)
 ;
"RTN","LRX",128,0)
 ;
"RTN","LRX",129,0)
STAMP ;time stamp
"RTN","LRX",130,0)
 S X="N",%DT="ET" D ^%DT
"RTN","LRX",131,0)
 Q
"RTN","LRX",132,0)
 ;
"RTN","LRX",133,0)
 ;
"RTN","LRX",134,0)
KEYCOM ;key to result flags
"RTN","LRX",135,0)
 D EQUALS W !!,"  ------------------------------  COMMENTS  ------------------------------",!,"  Key:  'L' = reference Low,  'H' = reference Hi, '*' = critical range"
"RTN","LRX",136,0)
 Q
"RTN","LRX",137,0)
 ;
"RTN","LRX",138,0)
 ;
"RTN","LRX",139,0)
URG ;urgencies
"RTN","LRX",140,0)
 K LRURG S LRURG(0)="ROUTINE" S I=0 F  S I=$O(^LAB(62.05,I)) Q:I<1  I $D(^(I,0)) S:'$P(^(0),U,3) LRURG(I)=$P(^(0),U)
"RTN","LRX",141,0)
 Q
"RTN","LRX",142,0)
 ;
"RTN","LRX",143,0)
 ;
"RTN","LRX",144,0)
ADD ;date format
"RTN","LRX",145,0)
 S Y=$E("JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC",$E(Y,4,5)*3-2,$E(Y,4,5)*3)_" "_$S(Y#100:$J(Y#100\1,2)_", ",1:"")_(Y\10000+1700)_$S(Y#1:"  "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"")
"RTN","LRX",146,0)
 Q
"RTN","LRX",147,0)
 ;
"RTN","LRX",148,0)
 ;
"RTN","LRX",149,0)
INF ;Display Infectious Warning
"RTN","LRX",150,0)
 I $L($G(IO)),$D(^LR(LRDFN,.091)),$L(^(.091)),'$G(LRQUIET) W !,$C(7)," Pat Info: ",^(.091) Q
"RTN","LRX",151,0)
 Q
"RTN","LRX",152,0)
 ;
"RTN","LRX",153,0)
 ;
"RTN","LRX",154,0)
LRGLIN ;
"RTN","LRX",155,0)
 N HZ
"RTN","LRX",156,0)
 D GSET^%ZISS W IOG1
"RTN","LRX",157,0)
 F HZ=1:1:79 W IOHL
"RTN","LRX",158,0)
 W IOG0 D GKILL^%ZISS
"RTN","LRX",159,0)
 W !
"RTN","LRX",160,0)
 Q
"RTN","LRX",161,0)
 ;
"RTN","LRX",162,0)
 ;
"RTN","LRX",163,0)
LRUID(LRAA,LRAD,LRAN) ;Extrinsic function call to create a unique
"RTN","LRX",164,0)
 ;accession identifier for an accession number.  See description
"RTN","LRX",165,0)
 ;of field .092 in file 68 for a full explanation of this number.
"RTN","LRX",166,0)
 ;This function returns a value equal to the unique ID generated.
"RTN","LRX",167,0)
 ;LRAA=ien in file 68, accession area
"RTN","LRX",168,0)
 ;LRAD=ien for accession date in field 68.01
"RTN","LRX",169,0)
 ;LRAN=ien for accession number in field 68.02
"RTN","LRX",170,0)
 Q:$S('$G(LRAA):1,'$D(^LRO(68,LRAA,.4)):1,1:0) 0
"RTN","LRX",171,0)
 N DA,DIE,DLAYGO,DR,LRMNTH,LRUID,LRQTR,LRTYPE,LRYR1,LRYR2,LRJUL
"RTN","LRX",172,0)
 S LRUID=$P($G(^LRO(68,LRAA,.4)),"^") ;start building LRUID
"RTN","LRX",173,0)
 S:$L(LRUID)'=2 LRUID="0"_LRUID
"RTN","LRX",174,0)
 S LRTYPE=$P($G(^LRO(68,LRAA,0)),"^",3)
"RTN","LRX",175,0)
 S LRYR1=$E(LRAD,3)
"RTN","LRX",176,0)
 S LRYR2=$E(LRAD,2,3)
"RTN","LRX",177,0)
 S LRMNTH=$E(LRAD,4,5)
"RTN","LRX",178,0)
 S LRQTR=0_(LRMNTH\3.1+1)
"RTN","LRX",179,0)
 I "DW"[LRTYPE D
"RTN","LRX",180,0)
 . S X1=LRAD,X2=$E(LRAD,1,3)_"0101" D ^%DTC
"RTN","LRX",181,0)
 . S X=X+1,LRJUL=$E("000",1,3-$L(X))_X
"RTN","LRX",182,0)
 . S LRUID=LRUID_LRYR1_LRJUL
"RTN","LRX",183,0)
 . S LRUID=LRUID_$E("0000",1,4-$L(LRAN))_LRAN
"RTN","LRX",184,0)
 I LRTYPE="Y" D
"RTN","LRX",185,0)
 . S LRUID=LRUID_LRYR2_$E("000000",1,6-$L(LRAN))_LRAN
"RTN","LRX",186,0)
 I LRTYPE="Q" D
"RTN","LRX",187,0)
 . S LRUID=LRUID_LRYR1_LRQTR
"RTN","LRX",188,0)
 . S LRUID=LRUID_$E("00000",1,5-$L(LRAN))_LRAN
"RTN","LRX",189,0)
 I LRTYPE="M" D
"RTN","LRX",190,0)
 . S LRUID=LRUID_LRYR1_LRMNTH_$E("00000",1,5-$L(LRAN))_LRAN
"RTN","LRX",191,0)
 L +^LRO(68,"C"):99999
"RTN","LRX",192,0)
 I $D(^LRO(68,"C",LRUID)),'$D(^LRO(68,"C",LRUID,LRAA,LRAD,LRAN)) D
"RTN","LRX",193,0)
 . N X
"RTN","LRX",194,0)
 . S X=$E(LRUID,3,10)
"RTN","LRX",195,0)
 . F  S LRUID="00"_X Q:'$D(^LRO(68,"C",LRUID))  S X=X+1 S:X>99999999 X=11111111
"RTN","LRX",196,0)
 I $G(LRORDRR)="NSR" Q LRUID ;Special trigger for NSR AP merge
"RTN","LRX",197,0)
 ;The following fields are also set in rtn LROLOVER
"RTN","LRX",198,0)
SET3 I $G(LRORDRR)'="R" S DR="16////"_LRUID
"RTN","LRX",199,0)
 I $G(LRORDRR)="R" D
"RTN","LRX",200,0)
 . S DR=";16.1////"_+$G(LRRSITE("RSITE"))_";16.2////"_+$G(LRRSITE("RPSITE"))_";16.3////"_LRUID_";16.4////"_LRSD("RUID")
"RTN","LRX",201,0)
 . I '$G(LRRSITE("IDTYPE")),'$D(^LRO(68,"C",LRSD("RUID"))) S LRUID=LRSD("RUID") ; Use sender's UID, unless previously used.
"RTN","LRX",202,0)
 . S DR="16////"_LRUID_DR
"RTN","LRX",203,0)
 S DA=LRAN,DA(1)=LRAD,DA(2)=LRAA,DIE="^LRO(68,"_DA(2)_",1,"_DA(1)_",1,",DLAYGO=68
"RTN","LRX",204,0)
 D ^DIE
"RTN","LRX",205,0)
 L -^LRO(68,"C")
"RTN","LRX",206,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRX",207,0)
 Q LRUID
"RTN","LRX",208,0)
 ;
"RTN","LRX",209,0)
KVAR ;Kill laboratory/VADPT patient demographics
"RTN","LRX",210,0)
 K LRTREA,LRWRD,PNM,SEX,DOB,DOD,SSN,LRWRD,LRRB,LRTREA,VA,LRDFN,LRDPF,LREND,VAERR
"RTN","LRX",211,0)
 D KVA^VADPT
"RTN","LRX",212,0)
 Q
"RTN","LRX",213,0)
ADDPT ;Returns VAPA( Patient data
"RTN","LRX",214,0)
 N X,I,N,Y D ADD^VADPT Q
"RTN","LRX",215,0)
OPDPT ;Returns VAPD( Patient data
"RTN","LRX",216,0)
 N X,I,N,Y D OPD^VADPT Q
"RTN","LRX",217,0)
SVCPT ;Returns VASV( Patient data
"RTN","LRX",218,0)
 N X,I,N,Y D SVC^VADPT Q
"RTN","LRX",219,0)
OADPT ;Returns VAOA( Patient data
"RTN","LRX",220,0)
 N X,I,N,Y D OAD^VADPT Q
"RTN","LRX",221,0)
INPPT ;Returns VAIN( Patient data
"RTN","LRX",222,0)
 N X,I,N,Y D INP^VADPT Q
"RTN","LRX",223,0)
IN5PT ;Returns VAIP( Patient data
"RTN","LRX",224,0)
 N X,I,N,Y D IN5^VADPT Q
"RTN","LRX",225,0)
PIDPT ;Returns VA("PID") and VA("BID") Patient Identifier
"RTN","LRX",226,0)
 N X,I,N,Y D PID^VADPT Q
"RTN","LRX",227,0)
 ;
"RTN","LRX",228,0)
 ;
"RTN","LRX",229,0)
 QUIT
"RTN","LRX",230,0)
Y2K(X,LRYR) ;   --> used to convert 2digit year to 4digit century and year
"RTN","LRX",231,0)
 ; 1/1/91 TO 1/1/1991
"RTN","LRX",232,0)
 ;
"RTN","LRX",233,0)
 ;S X=$P(X,".") ;--> Date only. Not time
"RTN","LRX",234,0)
 S LRYR=$G(LRYR,"5S")
"RTN","LRX",235,0)
 N YR
"RTN","LRX",236,0)
 S Y=$$FMTE^XLFDT(X,LRYR)
"RTN","LRX",237,0)
 I $L($P(Y,"/"))=1 S $P(Y,"/")="0"_$P(Y,"/") ;--> pad for 2digit day
"RTN","LRX",238,0)
 I $L($P(Y,"/",2))=1 S $P(Y,"/",2)="0"_$P(Y,"/",2) ;--> for 2digit month
"RTN","LRX",239,0)
 Q Y
"RTN","LRX",240,0)
 ;
"RTN","LRX",241,0)
 QUIT
"RTN","LRX",242,0)
RD ;DIR read
"RTN","LRX",243,0)
 N Y,X
"RTN","LRX",244,0)
 K LRANSY,LRANSX
"RTN","LRX",245,0)
 S LREND=0 W !
"RTN","LRX",246,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) S LREND=1
"RTN","LRX",247,0)
 S LRANSY=$G(Y),LRANSX=$G(X)
"RTN","LRX",248,0)
 Q
"RTN","LRX",249,0)
AGE2(DOB,LRCDT) ;Entry point if passing only a valid Date without patient
"RTN","LRX",250,0)
 ;   DOB, LRCDT must be defined in VA FileManager internal format
"RTN","LRX",251,0)
 ; Date error will return 99yr
"RTN","LRX",252,0)
 N X,Y,%DT
"RTN","LRX",253,0)
 I '$G(LRCDT) S LRCDT=$$DT^XLFDT
"RTN","LRX",254,0)
 I '$G(DOB) Q "99yr"  ;no DOB passed
"RTN","LRX",255,0)
 S DOB=$P(DOB,".")
"RTN","LRX",256,0)
 S X=DOB,LRCDT=$P(LRCDT,".")
"RTN","LRX",257,0)
 I $S(DOB'=+DOB:1,LRCDT'=+LRCDT:1,1:0) Q "99yr"
"RTN","LRX",258,0)
 I $S(DOB'?7N.NE:1,LRCDT'?7N.NE:1,1:0) Q "99yr"
"RTN","LRX",259,0)
 D ^%DT I Y'>0 Q "99yr"  ;invalid date
"RTN","LRX",260,0)
 S X=LRCDT
"RTN","LRX",261,0)
 K %DT D ^%DT I Y'>0 Q "99yr"  ;invalid date
"RTN","LRX",262,0)
 ;
"RTN","LRX",263,0)
CALC ;Calculate timeframe based on difference between DOB and collection
"RTN","LRX",264,0)
 ; date. Time is stripped off.
"RTN","LRX",265,0)
 ; .0001-24 hour = dy
"RTN","LRX",266,0)
 ; 0-29 days = dy
"RTN","LRX",267,0)
 ; 30-730 dy = mo
"RTN","LRX",268,0)
 ; >24 mo = yr
"RTN","LRX",269,0)
 ;
"RTN","LRX",270,0)
 I DOB>LRCDT Q "99yr"  ;DOB in future
"RTN","LRX",271,0)
 I DOB=LRCDT Q "1dy"  ;same dates---pass 1 day old
"RTN","LRX",272,0)
 S X=$E(LRCDT,1,3)-$E(DOB,1,3)-($E(LRCDT,4,7)<$E(DOB,4,7))
"RTN","LRX",273,0)
 I X>1 S X=+X_"yr" Q X   ;age 2 years or more---pass in years
"RTN","LRX",274,0)
 S X=$$FMDIFF^XLFDT(LRCDT,DOB,1)
"RTN","LRX",275,0)
 I X>30 S X=X\30_"mo" Q X  ;over 30 days---pass in months
"RTN","LRX",276,0)
 E  S X=X_"dy" Q X  ;under 31 days---pass in days
"RTN","LRX",277,0)
 Q "99yr"
"RTN","LRXREF")
0^1^B75229218
"RTN","LRXREF",1,0)
LRXREF ;DALOI/STAFF - BUILD CROSS-REFERENCES FOR RE-INDEX ;09/06/11  14:37
"RTN","LRXREF",2,0)
 ;;5.2;LAB SERVICE;**70,153,263,350**;Sep 27, 1994;Build 230
"RTN","LRXREF",3,0)
 ;
"RTN","LRXREF",4,0)
 ;
"RTN","LRXREF",5,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRXREF",6,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRXREF",7,0)
 ;
"RTN","LRXREF",8,0)
AVS1 ; Rebuild "AVS" cross-reference in file 68 for Re-index utility - DATE/TIME RESULTS AVAILABLE  (68.02,13)
"RTN","LRXREF",9,0)
 I $D(DIU(0)),$P(^LRO(68,DA(2),1,DA(1),1,DA,3),U,4)="" S ^LRO(68,"AVS",DA(2),DA(1),DA)=$P(^LRO(68,DA(2),1,DA(1),1,DA,0),U)_"^"_$P(^(3),U,5)
"RTN","LRXREF",10,0)
 Q
"RTN","LRXREF",11,0)
 ;
"RTN","LRXREF",12,0)
 ;
"RTN","LRXREF",13,0)
AVS2 ; Rebuild "AVS" cross-reference in file 68 for Re-index utility - DATE/TIME RESULTS AVAILABLE  (68.02,13)
"RTN","LRXREF",14,0)
 I $D(DIU(0)),$P(^LRO(68,DA(2),1,DA(1),1,DA,3),U,4)'="" K ^LRO(68,"AVS",DA(2),DA(1),DA)
"RTN","LRXREF",15,0)
 Q
"RTN","LRXREF",16,0)
 ;
"RTN","LRXREF",17,0)
 ;
"RTN","LRXREF",18,0)
AVS3 ; Rebuild "AVS" cross-reference in fie #68 for re-index utility - DATE/TIME RESULTS AVAILABLE  (68.02,13)
"RTN","LRXREF",19,0)
 I '$D(DIU(0)),$P(^LRO(68,DA(2),1,DA(1),1,DA,3),U,4)'="" K ^LRO(68,"AVS",DA(2),DA(1),DA)
"RTN","LRXREF",20,0)
 Q
"RTN","LRXREF",21,0)
 ;
"RTN","LRXREF",22,0)
 ;
"RTN","LRXREF",23,0)
AVS4 ; Rebuild "AVS" cross-reference in file 68 for Re-index utility - DATE/TIME RESULTS AVAILABLE  (68.02,13)
"RTN","LRXREF",24,0)
 I '$D(DIU(0)),$P(^LRO(68,DA(2),1,DA(1),1,DA,3),U,4)="" S ^LRO(68,"AVS",DA(2),DA(1),DA)=$P(^LRO(68,DA(2),1,DA(1),1,DA,0),U)_"^"_$P(^(3),U,5)
"RTN","LRXREF",25,0)
 Q
"RTN","LRXREF",26,0)
 ;
"RTN","LRXREF",27,0)
 ;
"RTN","LRXREF",28,0)
AC1 ; Build "AC" cross-reference when comment is deleted from a verified test in File 63. Audit trail only.
"RTN","LRXREF",29,0)
 I '$D(DIU(0)),$D(DUZ),$P(^LR(DA(2),"CH",DA(1),0),U,3) S ^LR(DA(2),"CH",DA(1),1,"AC",DUZ,$H)=$P(^LR(DA(2),"CH",DA(1),0),U,3,4)_"^"_X
"RTN","LRXREF",30,0)
 Q
"RTN","LRXREF",31,0)
 ;
"RTN","LRXREF",32,0)
 ;
"RTN","LRXREF",33,0)
AN1 ; Build logic "AN"" cross-reference in File 69, when results available
"RTN","LRXREF",34,0)
 S ^LRO(69,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U),9999999-$P(^LRO(69,DA(1),1,DA,1),U))=""
"RTN","LRXREF",35,0)
 Q
"RTN","LRXREF",36,0)
 ;
"RTN","LRXREF",37,0)
 ;
"RTN","LRXREF",38,0)
AN2 ; Kill logic for "AN"" cross-reference in File 69, when results available
"RTN","LRXREF",39,0)
 K ^LRO(69,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U),9999999-$P(^LRO(69,DA(1),1,DA,1),U))
"RTN","LRXREF",40,0)
 Q
"RTN","LRXREF",41,0)
 ;
"RTN","LRXREF",42,0)
 ;
"RTN","LRXREF",43,0)
AR1 ; Setup variables for set/kill "AR" cross-reference in File 69, when results available
"RTN","LRXREF",44,0)
 S LRDT=$E(X,1,7),LRLLOC=$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20)
"RTN","LRXREF",45,0)
 S LRDFN=$P(^(0),U),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRXREF",46,0)
 S LRGN=$$GET1^DID(+LRDPF,"","","GLOBAL NAME")_DFN_",0)"
"RTN","LRXREF",47,0)
 S LRGN=$S($D(@LRGN):@LRGN,1:"") S LRPNM=$P(LRGN,U)
"RTN","LRXREF",48,0)
 Q
"RTN","LRXREF",49,0)
 ;
"RTN","LRXREF",50,0)
 ;
"RTN","LRXREF",51,0)
AR2 ; Build "AR" cross-reference in File 69, when results available
"RTN","LRXREF",52,0)
 N LRDT,LRGN,LRDFN,LRLLOC,LRPNM
"RTN","LRXREF",53,0)
 D AR1
"RTN","LRXREF",54,0)
 S ^LRO(69,LRDT,1,"AR",LRLLOC,LRPNM,LRDFN)=""
"RTN","LRXREF",55,0)
 Q
"RTN","LRXREF",56,0)
 ;
"RTN","LRXREF",57,0)
 ;
"RTN","LRXREF",58,0)
AR3 ; Kill "AR" cross-reference in File 69, when results available
"RTN","LRXREF",59,0)
 N LRDT,LRGN,LRDFN,LRLLOC,LRPNM
"RTN","LRXREF",60,0)
 D AR1
"RTN","LRXREF",61,0)
 K ^LRO(69,LRDT,1,"AR",LRLLOC,LRPNM,LRDFN)
"RTN","LRXREF",62,0)
 Q
"RTN","LRXREF",63,0)
 ;
"RTN","LRXREF",64,0)
 ;
"RTN","LRXREF",65,0)
LRKILL ; This cross-reference will be reset when the cumulative runs.  Due to the complexity of the cumulative reporting it was felt that
"RTN","LRXREF",66,0)
 ; it was better to have reprinted data rather than possibly having some data not printed at all.
"RTN","LRXREF",67,0)
 K ^LAC("LRKILL")
"RTN","LRXREF",68,0)
 Q
"RTN","LRXREF",69,0)
 ;
"RTN","LRXREF",70,0)
 ;
"RTN","LRXREF",71,0)
AP ; Setup variables for set/kill "AP" cross-reference in File 69, when results available
"RTN","LRXREF",72,0)
 S LRDATE=$P($P(^LRO(69,DA(1),1,DA,3),U),".")
"RTN","LRXREF",73,0)
 S LRPHY=$P(^LRO(69,DA(1),1,DA,0),U,6),LRPHY=$S($D(^VA(200,LRPHY,0)):$E($P(^(0),U),1,20),1:"UNK")
"RTN","LRXREF",74,0)
 S LRDFN=$P(^LRO(69,DA(1),1,DA,0),U),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRXREF",75,0)
 S LRGN=$$GET1^DID(+LRDPF,"","","GLOBAL NAME")_DFN_",0)"
"RTN","LRXREF",76,0)
 S LRGN=$S($D(@LRGN):@LRGN,1:""),LRPNM=$P(LRGN,U)
"RTN","LRXREF",77,0)
 Q
"RTN","LRXREF",78,0)
 ;
"RTN","LRXREF",79,0)
 ;
"RTN","LRXREF",80,0)
AP1 ; Build "AP" cross-reference in File 69, when results available
"RTN","LRXREF",81,0)
 N LRDATE,LRPHY,LRPNM,LRDFN,LRGN,LRDPF,DFN
"RTN","LRXREF",82,0)
 D AP
"RTN","LRXREF",83,0)
 S ^LRO(69,LRDATE,1,"AP",LRPHY,LRPNM,LRDFN)=""
"RTN","LRXREF",84,0)
 Q
"RTN","LRXREF",85,0)
 ;
"RTN","LRXREF",86,0)
 ;
"RTN","LRXREF",87,0)
AP2 ; Kill "AP" cross-reference in File 69, when results available
"RTN","LRXREF",88,0)
 N LRDATE,LRPHY,LRPNM,LRDFN,LRGN,LRDPF,DFN
"RTN","LRXREF",89,0)
 D AP
"RTN","LRXREF",90,0)
 K ^LRO(69,LRDATE,1,"AP",LRPHY,LRPNM,LRDFN)
"RTN","LRXREF",91,0)
 Q
"RTN","LRXREF",92,0)
 ;
"RTN","LRXREF",93,0)
 ;
"RTN","LRXREF",94,0)
AL ; Setup variables for set/kill "AL" cross-reference in File 69, when results available
"RTN","LRXREF",95,0)
 S LRDATE=$P($P(^LRO(69,DA(1),1,DA,3),U),"."),LRDFN=$P(^LRO(69,DA(1),1,DA,0),U),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRXREF",96,0)
 S LRGN=$$GET1^DID(+LRDPF,"","","GLOBAL NAME")_DFN_",0)"
"RTN","LRXREF",97,0)
 S LRGN=$S($D(@LRGN):@LRGN,1:"") S LRPNM=$P(LRGN,U)
"RTN","LRXREF",98,0)
 S LRLLOC=$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20)
"RTN","LRXREF",99,0)
 Q
"RTN","LRXREF",100,0)
 ;
"RTN","LRXREF",101,0)
 ;
"RTN","LRXREF",102,0)
AL1 ; Build "AL" cross-reference in File 69, when results available
"RTN","LRXREF",103,0)
 N LRDATE,LRPNM,LRDFN,LRGN,LRDPF,DFN,LRLLOC
"RTN","LRXREF",104,0)
 D AL
"RTN","LRXREF",105,0)
 S ^LRO(69,LRDATE,1,"AL",LRLLOC,LRPNM,LRDFN)=""
"RTN","LRXREF",106,0)
 Q
"RTN","LRXREF",107,0)
 ;
"RTN","LRXREF",108,0)
 ;
"RTN","LRXREF",109,0)
AL2 ; Kill "AL" cross-reference in File 69, when results available
"RTN","LRXREF",110,0)
 N LRDATE,LRPNM,LRDFN,LRGN,LRDPF,DFN,LRLLOC
"RTN","LRXREF",111,0)
 D AL
"RTN","LRXREF",112,0)
 K ^LRO(69,LRDATE,1,"AL",LRLLOC,LRPNM,LRDFN)
"RTN","LRXREF",113,0)
 Q
"RTN","LRXREF",114,0)
 ;
"RTN","LRXREF",115,0)
 ;
"RTN","LRXREF",116,0)
UP ; Convert lower to upper case.
"RTN","LRXREF",117,0)
 S X=$$UP^XLFSTR(X)
"RTN","LRXREF",118,0)
 Q
"RTN","LRXREF",119,0)
 ;
"RTN","LRXREF",120,0)
 ;
"RTN","LRXREF",121,0)
TRIG ; Trigger LAB Workload
"RTN","LRXREF",122,0)
 ; Stuff the Cap Code Name into field .03 of field 4 of field 1 of field 1 of ^LRO(67.9 LAB MONTHLY WORKLOAD
"RTN","LRXREF",123,0)
 S X=$P($G(^LAM($O(^LAM("E",$P(^LRO(67.9,DA(3),1,DA(2),1,DA(1),1,DA,0),U),0)),0)),U)
"RTN","LRXREF",124,0)
 Q
"RTN","LRXREF",125,0)
 ;
"RTN","LRXREF",126,0)
 ;
"RTN","LRXREF",127,0)
TRIGTS ; Trigger to stuff treating specialty name into .03 field of ^DD(67.91148
"RTN","LRXREF",128,0)
 S X=$P($G(^DIC(42.4,+$P($G(^LRO(67.9,DA(4),1,DA(3),1,DA(2),1,DA(1),1,DA,0)),U),0)),U) S:'$L(X) X="AMBULATORY CARE"
"RTN","LRXREF",129,0)
 Q
"RTN","LRXREF",130,0)
 ;
"RTN","LRXREF",131,0)
 ;
"RTN","LRXREF",132,0)
TRIG9 ; Trigger for LAB Workload
"RTN","LRXREF",133,0)
 ; Stuff the Cap Code Name into field .03 of field 4 of field 1 of field 1 of ^LRO(67.99999 ARCHIVED LAB MONTHLY WORKLOAD
"RTN","LRXREF",134,0)
 S X=$P($G(^LAM($O(^LAM("E",$P(^LRO(67.99999,DA(3),1,DA(2),1,DA(1),1,DA,0),U),0)),0)),U)
"RTN","LRXREF",135,0)
 Q
"RTN","LRXREF",136,0)
 ;
"RTN","LRXREF",137,0)
 ;
"RTN","LRXREF",138,0)
TRIGTS9 ; Trigger to stuff treating specialty name into .03 field of ^DD(67.999991148
"RTN","LRXREF",139,0)
 S X=$P($G(^DIC(42.4,+$P($G(^LRO(67.99999,DA(4),1,DA(3),1,DA(2),1,DA(1),1,DA,0)),U),0)),U) S:'$L(X) X="AMBULATORY CARE"
"RTN","LRXREF",140,0)
 Q
"RTN","LRXREF",141,0)
 ;
"RTN","LRXREF",142,0)
 ;
"RTN","LRXREF",143,0)
LAM185 ; Trigger logic to set TYPE(#5) of CODE (#18) of WKLD CODE (#64)
"RTN","LRXREF",144,0)
 N %1
"RTN","LRXREF",145,0)
 S %1=$P(X,";",2),X=$S(%1="ICPT(":"CPT",%1="LAB(61.1,":"SNO",%1="ICD9(":"ICD",1:"NOS")
"RTN","LRXREF",146,0)
 Q
"RTN","LRXREF",147,0)
 ;
"RTN","LRXREF",148,0)
 ;
"RTN","LRXREF",149,0)
SCTCHK(LRSCT,LR612,LRSCT1) ;
"RTN","LRXREF",150,0)
 ; File #61.2 SNOMEDCT field check - Coded to work within FM DD calls
"RTN","LRXREF",151,0)
 ; Inputs
"RTN","LRXREF",152,0)
 ;   LRSCT : SNOMED CT code
"RTN","LRXREF",153,0)
 ;   LR612 : File #61.2 IEN
"RTN","LRXREF",154,0)
 ;  LRSCT1 : <opt>"old" value of SNOMED CT ID field
"RTN","LRXREF",155,0)
 ; Output
"RTN","LRXREF",156,0)
 ;    1 = OK to add code
"RTN","LRXREF",157,0)
 ;   -1 = SCT code not valid
"RTN","LRXREF",158,0)
 ;
"RTN","LRXREF",159,0)
 N LRSTAT,LRX,LRCNT,LRT
"RTN","LRXREF",160,0)
 S LRT=$T ;save $T
"RTN","LRXREF",161,0)
 S LRSCT=$G(LRSCT),LRSCT1=$G(LRSCT1),LR612=+$G(LR612),LRSTAT=1
"RTN","LRXREF",162,0)
 Q:LRSCT="" 1
"RTN","LRXREF",163,0)
 Q:$G(LR612F20)=1 1
"RTN","LRXREF",164,0)
 S LRX=$$CODE^LRSCT(LRSCT,"SCT")
"RTN","LRXREF",165,0)
 ; invalid SCT
"RTN","LRXREF",166,0)
 S:+LRX=-1 LRSTAT=-1
"RTN","LRXREF",167,0)
 ;
"RTN","LRXREF",168,0)
 I LRT ;reset $T
"RTN","LRXREF",169,0)
 Q LRSTAT
"RTN","LRXREF",170,0)
 ;
"RTN","LRXREF",171,0)
 ;
"RTN","LRXREF",172,0)
DELSCT(LR612) ;
"RTN","LRXREF",173,0)
 ; Delete File #61.2 field 20 (SNOMED CT ID) - For use within FM DD calls and SCTCHK API
"RTN","LRXREF",174,0)
 N DA,DI,DIC,DIERR,X,Y,LRFDA,LRMSG,LRT
"RTN","LRXREF",175,0)
 S LRT=$T
"RTN","LRXREF",176,0)
 S LR612=+$G(LR612)
"RTN","LRXREF",177,0)
 S LRFDA(1,61.2,LR612_",",20)="@"
"RTN","LRXREF",178,0)
 D FILE^DIE("I","LRFDA(1)","LRMSG")
"RTN","LRXREF",179,0)
 I LRT ;reset $T
"RTN","LRXREF",180,0)
 Q
"RTN","LRXREF",181,0)
 ;
"RTN","LRXREF",182,0)
 ;
"RTN","LRXREF",183,0)
IT61F20 ; Input transform for file #61, field 20
"RTN","LRXREF",184,0)
 ; $C(32) tricks EN^DDIOL to not insert a linefeed
"RTN","LRXREF",185,0)
 ;
"RTN","LRXREF",186,0)
 ;ZEXCEPT: DIUTIL,LRFMERTS,X
"RTN","LRXREF",187,0)
 ;
"RTN","LRXREF",188,0)
 N LROUT,LRSTATUS
"RTN","LRXREF",189,0)
 ;
"RTN","LRXREF",190,0)
 Q:$G(X)=""
"RTN","LRXREF",191,0)
 ;
"RTN","LRXREF",192,0)
 ; Check if SCT ID is valid
"RTN","LRXREF",193,0)
 S LRSTATUS=$$CODE^LEXTRAN(X,"SCT",DT,"LROUT")
"RTN","LRXREF",194,0)
 I LRSTATUS<1 K X
"RTN","LRXREF",195,0)
 ;
"RTN","LRXREF",196,0)
 ; Display term if not "quiet" or via FileMan Verify Fields option
"RTN","LRXREF",197,0)
 I '$$ISQUIET(),$G(DIUTIL)'="VERIFY FIELDS" D
"RTN","LRXREF",198,0)
 . I $G(LROUT("F"))'="" D EN^DDIOL(LROUT("F"),"","$C(32)")
"RTN","LRXREF",199,0)
 . I LRSTATUS<1 D EN^DDIOL("  "_$P(LRSTATUS,"^",2),"","$C(32)")
"RTN","LRXREF",200,0)
 ;
"RTN","LRXREF",201,0)
 ; If not FileMan Verify Fields and not editing via lab software then kill X to lock down local edits.
"RTN","LRXREF",202,0)
 I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"RTN","LRXREF",203,0)
 ;
"RTN","LRXREF",204,0)
 Q
"RTN","LRXREF",205,0)
 ;
"RTN","LRXREF",206,0)
 ;
"RTN","LRXREF",207,0)
IT612F20 ; Input Transform for File #61.2 field 20
"RTN","LRXREF",208,0)
 ; $C(32) tricks EN^DDIOL to not insert a linefeed
"RTN","LRXREF",209,0)
 ;
"RTN","LRXREF",210,0)
 ;ZEXCEPT: DA,DIUTIL,LRFMERTS,X,Y
"RTN","LRXREF",211,0)
 ;
"RTN","LRXREF",212,0)
 N LRX,LRT
"RTN","LRXREF",213,0)
 ;
"RTN","LRXREF",214,0)
 S LRT=$T ;save $T
"RTN","LRXREF",215,0)
 ;
"RTN","LRXREF",216,0)
 Q:$G(X)=""
"RTN","LRXREF",217,0)
 ;
"RTN","LRXREF",218,0)
 ; Y=Old Value
"RTN","LRXREF",219,0)
 ;  Is this SCT code used in #62.47?
"RTN","LRXREF",220,0)
 I $G(Y)'="",$D(^LAB(62.47,"AF","SCT",Y)) D  Q
"RTN","LRXREF",221,0)
 . K X
"RTN","LRXREF",222,0)
 . I '$$ISQUIET(),$G(DIUTIL)'="VERIFY FIELDS" D EN^DDIOL("**Mapped in File #62.47**",,"$C(32)")
"RTN","LRXREF",223,0)
 . I LRT ; reset $T
"RTN","LRXREF",224,0)
 ;
"RTN","LRXREF",225,0)
 Q:+$G(DA)<1
"RTN","LRXREF",226,0)
 S LRX=$$SCTCHK(X,DA,$G(Y))
"RTN","LRXREF",227,0)
 ;
"RTN","LRXREF",228,0)
 I +LRX=-1 D
"RTN","LRXREF",229,0)
 . K X
"RTN","LRXREF",230,0)
 . I '$$ISQUIET(),$G(DIUTIL)'="VERIFY FIELDS" D EN^DDIOL("**Invalid SCT code**",,"$C(32)")
"RTN","LRXREF",231,0)
 ;
"RTN","LRXREF",232,0)
 ; If not FileMan Verify Fields and not editing via lab software then kill X to lock down local edits.
"RTN","LRXREF",233,0)
 I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"RTN","LRXREF",234,0)
 ;
"RTN","LRXREF",235,0)
 I LRT ; reset $T
"RTN","LRXREF",236,0)
 Q
"RTN","LRXREF",237,0)
 ;
"RTN","LRXREF",238,0)
 ;
"RTN","LRXREF",239,0)
IT62F20 ; Input transform for file #62, field 20
"RTN","LRXREF",240,0)
 ; $C(32) tricks EN^DDIOL to not insert a linefeed
"RTN","LRXREF",241,0)
 ;
"RTN","LRXREF",242,0)
 ;ZEXCEPT: DIUTIL,LRFMERTS,X
"RTN","LRXREF",243,0)
 ;
"RTN","LRXREF",244,0)
 N LROUT,LRSTATUS
"RTN","LRXREF",245,0)
 ;
"RTN","LRXREF",246,0)
 Q:$G(X)=""
"RTN","LRXREF",247,0)
 ;
"RTN","LRXREF",248,0)
 ; Check if SCT ID is valid
"RTN","LRXREF",249,0)
 S LRSTATUS=$$CODE^LEXTRAN(X,"SCT",DT,"LROUT")
"RTN","LRXREF",250,0)
 I LRSTATUS<1 K X
"RTN","LRXREF",251,0)
 ;
"RTN","LRXREF",252,0)
 ; Display term if not "quiet" or via FileMan Verify Fields option
"RTN","LRXREF",253,0)
 I '$$ISQUIET(),$G(DIUTIL)'="VERIFY FIELDS" D
"RTN","LRXREF",254,0)
 . I $G(LROUT("F"))'="" D EN^DDIOL(LROUT("F"),"","$C(32)")
"RTN","LRXREF",255,0)
 . I LRSTATUS<1 D EN^DDIOL("  "_$P(LRSTATUS,"^",2),"","$C(32)")
"RTN","LRXREF",256,0)
 ;
"RTN","LRXREF",257,0)
 ; If not FileMan Verify Fields and not editing via lab software then kill X to lock down local edits.
"RTN","LRXREF",258,0)
 I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"RTN","LRXREF",259,0)
 ;
"RTN","LRXREF",260,0)
 Q
"RTN","LRXREF",261,0)
 ;
"RTN","LRXREF",262,0)
 ;
"RTN","LRXREF",263,0)
ISQUIET() ;
"RTN","LRXREF",264,0)
 ; Is "Quiet" or not (Should we Write output?)
"RTN","LRXREF",265,0)
 N QUIET
"RTN","LRXREF",266,0)
 S QUIET=0
"RTN","LRXREF",267,0)
 S:$G(LRQUIET) QUIET=1
"RTN","LRXREF",268,0)
 S:$G(DIQUIET) QUIET=1
"RTN","LRXREF",269,0)
 Q QUIET
"RTN","LRXREF",270,0)
 ;
"RTN","LRXREF",271,0)
 ;
"RTN","LRXREF",272,0)
SETISOID(LRSUB) ;
"RTN","LRXREF",273,0)
 ; Called from #63.05 fields Cross reference
"RTN","LRXREF",274,0)
 ; Create and stuff ISOLATE ID when .01 field entered
"RTN","LRXREF",275,0)
 ; Inputs
"RTN","LRXREF",276,0)
 ;  LRSUB : The global subscript for this isolate
"RTN","LRXREF",277,0)
 ;
"RTN","LRXREF",278,0)
 N LRFDA,LRMSG,LRIENS,LRX,LRSUBFL
"RTN","LRXREF",279,0)
 S LRSUB=$G(LRSUB)
"RTN","LRXREF",280,0)
 Q:'$G(DA)
"RTN","LRXREF",281,0)
 S LRSUBFL=0
"RTN","LRXREF",282,0)
 I LRSUB=3 S LRSUBFL=63.3
"RTN","LRXREF",283,0)
 I LRSUB=6 S LRSUBFL=63.34
"RTN","LRXREF",284,0)
 I LRSUB=9 S LRSUBFL=63.37
"RTN","LRXREF",285,0)
 I LRSUB=12 S LRSUBFL=63.39
"RTN","LRXREF",286,0)
 I LRSUB=17 S LRSUBFL=63.43
"RTN","LRXREF",287,0)
 Q:'LRSUBFL
"RTN","LRXREF",288,0)
 ;
"RTN","LRXREF",289,0)
 ; build IENS
"RTN","LRXREF",290,0)
 S LRIENS=$$IENS^DILF(.DA)
"RTN","LRXREF",291,0)
 S LRX=$$MAKEISO^LRVRMI1(+$$KSP^XUPARAM("INST"),LRSUB_"-"_DA)
"RTN","LRXREF",292,0)
 S LRFDA(1,LRSUBFL,LRIENS,.1)=LRX
"RTN","LRXREF",293,0)
 D  ;
"RTN","LRXREF",294,0)
 . N DA,X,Y,X1,X2,DIE,DIC,DIERR
"RTN","LRXREF",295,0)
 . D FILE^DIE("","LRFDA(1)","LRMSG")
"RTN","LRXREF",296,0)
 Q
"RTN","LRXREF",297,0)
 ;
"RTN","LRXREF",298,0)
 ;
"RTN","LRXREF",299,0)
IT600201 ;
"RTN","LRXREF",300,0)
 ; Input Transform for Sub-File #60.02 field #.01
"RTN","LRXREF",301,0)
 ; Expects X (#60 IEN of test being added to panel) and DA array -- DA(1)=^LAB(60,IEN)  DA=^LAB(60,DA(1),2,DA)
"RTN","LRXREF",302,0)
 I $P(^LAB(60,DA(1),0),U,5)'="" D  Q  ;
"RTN","LRXREF",303,0)
 . K X
"RTN","LRXREF",304,0)
 . D EN^DDIOL("NO CAN DO",,"!")
"RTN","LRXREF",305,0)
 ;
"RTN","LRXREF",306,0)
 Q:$G(DIUTIL)="VERIFY FIELDS"
"RTN","LRXREF",307,0)
 I X=DA(1) D  Q  ;
"RTN","LRXREF",308,0)
 . K X
"RTN","LRXREF",309,0)
 . D EN^DDIOL("CAN'T ADD TEST TO ITSELF",,"!,$C(7)")
"RTN","LRXREF",310,0)
 ;
"RTN","LRXREF",311,0)
 Q:'$D(X)
"RTN","LRXREF",312,0)
 ; Check for recursive panel entries
"RTN","LRXREF",313,0)
 N LRRECUR,LR60C,LR60P
"RTN","LRXREF",314,0)
 S LR60C=X ;child
"RTN","LRXREF",315,0)
 S LR60P=DA(1) ;parent
"RTN","LRXREF",316,0)
 ; If they're both panels then check for recursion
"RTN","LRXREF",317,0)
 I $O(^LAB(60,LR60C,2,0)) I $O(^LAB(60,LR60P,2,0)) D  ;
"RTN","LRXREF",318,0)
 . K ^TMP($J,"LRXREF-PANELCHK")
"RTN","LRXREF",319,0)
 . S ^TMP($J,"LRXREF-PANELCHK",LR60C)=""
"RTN","LRXREF",320,0)
 . S ^TMP($J,"LRXREF-PANELCHK",LR60P)=""
"RTN","LRXREF",321,0)
 . S LRRECUR=0
"RTN","LRXREF",322,0)
 . D PANELCHK(LR60P,.LRRECUR) ;check parent
"RTN","LRXREF",323,0)
 . I 'LRRECUR D PANELCHK(LR60C,.LRRECUR) ;check the one we're adding
"RTN","LRXREF",324,0)
 . K ^TMP($J,"LRXREF-PANELCHK")
"RTN","LRXREF",325,0)
 . I LRRECUR D  Q  ;
"RTN","LRXREF",326,0)
 . . K X
"RTN","LRXREF",327,0)
 . . D EN^DDIOL("RECURSION DETECTED -- TEST NOT ADDED",,"!,$C(7)")
"RTN","LRXREF",328,0)
 . ;
"RTN","LRXREF",329,0)
 Q
"RTN","LRXREF",330,0)
 ;
"RTN","LRXREF",331,0)
 ;
"RTN","LRXREF",332,0)
PANELCHK(LR60,LRRECUR) ;
"RTN","LRXREF",333,0)
 ; Private method for IT600201 above
"RTN","LRXREF",334,0)
 ; This is a recursive method.
"RTN","LRXREF",335,0)
 ; Called from DD (Input Transform). Must be FileMan safe.
"RTN","LRXREF",336,0)
 ; Caller must kill ^TMP($J,"LRXREF-PANELCHK") before
"RTN","LRXREF",337,0)
 ; first call and after last call.  Parent and Child panel tests
"RTN","LRXREF",338,0)
 ; should be added to ^TMP($J,"LRXREF-PANELCHK",IEN) before calling:
"RTN","LRXREF",339,0)
 ;  I $O(^LAB(60,IEN,2,0)) S ^TMP($J,"LRXREF-PANELCHK",IEN)=""
"RTN","LRXREF",340,0)
 ;
"RTN","LRXREF",341,0)
 ; Inputs
"RTN","LRXREF",342,0)
 ;     LR60: #60 IEN of panel
"RTN","LRXREF",343,0)
 ;  LRRECUR: <byref> See Outputs
"RTN","LRXREF",344,0)
 ;
"RTN","LRXREF",345,0)
 ; Outputs
"RTN","LRXREF",346,0)
 ;  LRRECUR: 1=recursion found   0=no recursion
"RTN","LRXREF",347,0)
 ;  LRRECUR(1): The parent #60 IEN and child #60 IEN that
"RTN","LRXREF",348,0)
 ;              caused the recursion.
"RTN","LRXREF",349,0)
 ;
"RTN","LRXREF",350,0)
 N LR60B,LR6002,LRDATA,DA,X
"RTN","LRXREF",351,0)
 S LR60=$G(LR60)
"RTN","LRXREF",352,0)
 S LRRECUR=$G(LRRECUR,0)
"RTN","LRXREF",353,0)
 Q:LRRECUR
"RTN","LRXREF",354,0)
 S LR6002=0
"RTN","LRXREF",355,0)
 F  S LR6002=$O(^LAB(60,LR60,2,LR6002)) Q:'LR6002  D  Q:LRRECUR  ;
"RTN","LRXREF",356,0)
 . S LR60B=LR60
"RTN","LRXREF",357,0)
 . S LRDATA=^LAB(60,LR60,2,LR6002,0)
"RTN","LRXREF",358,0)
 . N LR60
"RTN","LRXREF",359,0)
 . S LR60=$P(LRDATA,U,1)
"RTN","LRXREF",360,0)
 . Q:'LR60
"RTN","LRXREF",361,0)
 . Q:'$O(^LAB(60,LR60,2,0))  ;not a panel test
"RTN","LRXREF",362,0)
 . I $D(^TMP($J,"LRXREF-PANELCHK",LR60)) D  Q  ;
"RTN","LRXREF",363,0)
 . . S LRRECUR=1
"RTN","LRXREF",364,0)
 . . S LRRECUR(1)=LR60B_"^"_LR60
"RTN","LRXREF",365,0)
 . ;
"RTN","LRXREF",366,0)
 . S ^TMP($J,"LRXREF-PANELCHK",LR60)=""
"RTN","LRXREF",367,0)
 . D PANELCHK(LR60,.LRRECUR) ;recursive call
"RTN","LRXREF",368,0)
 ;
"RTN","LRXREF",369,0)
 Q
"SEC","^DIC",95.4,95.4,0,"AUDIT")

"SEC","^DIC",95.4,95.4,0,"DD")

"SEC","^DIC",95.4,95.4,0,"DEL")

"SEC","^DIC",95.4,95.4,0,"LAYGO")

"SEC","^DIC",95.4,95.4,0,"RD")

"SEC","^DIC",95.4,95.4,0,"WR")

"UP",60,60.01,-1)
60^1
"UP",60,60.01,0)
60.01
"UP",60,60.02,-1)
60^2
"UP",60,60.02,0)
60.02
"UP",60,60.03,-1)
60^3
"UP",60,60.03,0)
60.03
"UP",61,61.023,-1)
61^SCT1
"UP",61,61.023,0)
61.023
"UP",61,61.0231,-2)
61^SCT1
"UP",61,61.0231,-1)
61.023^1
"UP",61,61.0231,0)
61.0231
"UP",61.2,61.223,-1)
61.2^SCT1
"UP",61.2,61.223,0)
61.223
"UP",61.2,61.2231,-2)
61.2^SCT1
"UP",61.2,61.2231,-1)
61.223^1
"UP",61.2,61.2231,0)
61.2231
"UP",62,62.023,-1)
62^SCT1
"UP",62,62.023,0)
62.023
"UP",62,62.0231,-2)
62^SCT1
"UP",62,62.0231,-1)
62.023^1
"UP",62,62.0231,0)
62.0231
"UP",63,63.00012,-1)
63^PL
"UP",63,63.00012,0)
63.00012
"UP",63,63.00013,-1)
63^EPR
"UP",63,63.00013,0)
63.00013
"UP",63,63.00014,-1)
63^CSR
"UP",63,63.00014,0)
63.00014
"UP",63,63.02,-1)
63^EM
"UP",63,63.02,0)
63.02
"UP",63,63.04,-1)
63^CH
"UP",63,63.04,0)
63.04
"UP",63,63.05,-1)
63^MI
"UP",63,63.05,0)
63.05
"UP",63,63.07,-2)
63^CH
"UP",63,63.07,-1)
63.04^ORUT
"UP",63,63.07,0)
63.07
"UP",63,63.08,-1)
63^SP
"UP",63,63.08,0)
63.08
"UP",63,63.09,-1)
63^CY
"UP",63,63.09,0)
63.09
"UP",63,63.202,-2)
63^EM
"UP",63,63.202,-1)
63.02^.1
"UP",63,63.202,0)
63.202
"UP",63,63.3,-2)
63^MI
"UP",63,63.3,-1)
63.05^3
"UP",63,63.3,0)
63.3
"UP",63,63.34,-2)
63^MI
"UP",63,63.34,-1)
63.05^6
"UP",63,63.34,0)
63.34
"UP",63,63.37,-2)
63^MI
"UP",63,63.37,-1)
63.05^9
"UP",63,63.37,0)
63.37
"UP",63,63.39,-2)
63^MI
"UP",63,63.39,-1)
63.05^12
"UP",63,63.39,0)
63.39
"UP",63,63.43,-2)
63^MI
"UP",63,63.43,-1)
63.05^17
"UP",63,63.43,0)
63.43
"UP",63,63.5,-2)
63^MI
"UP",63,63.5,-1)
63.05^ORUT
"UP",63,63.5,0)
63.5
"UP",63,63.51,-2)
63^CY
"UP",63,63.51,-1)
63.09^ORUT
"UP",63,63.51,0)
63.51
"UP",63,63.52,-2)
63^EM
"UP",63,63.52,-1)
63.02^ORUT
"UP",63,63.52,0)
63.52
"UP",63,63.53,-2)
63^SP
"UP",63,63.53,-1)
63.08^ORUT
"UP",63,63.53,0)
63.53
"UP",63,63.539,-2)
63^MI
"UP",63,63.539,-1)
63.05^32
"UP",63,63.539,0)
63.539
"UP",63,63.812,-2)
63^SP
"UP",63,63.812,-1)
63.08^.1
"UP",63,63.812,0)
63.812
"UP",63,63.902,-2)
63^CY
"UP",63,63.902,-1)
63.09^.1
"UP",63,63.902,0)
63.902
"UP",64.5,64.53,-3)
64.5^1
"UP",64.5,64.53,-2)
64.51^1
"UP",64.5,64.53,-1)
64.52^1
"UP",64.5,64.53,0)
64.53
"UP",69,69.01,-1)
69^1
"UP",69,69.01,0)
69.01
"UP",69,69.03,-2)
69^1
"UP",69,69.03,-1)
69.01^2
"UP",69,69.03,0)
69.03
"VER")
8.0^22.0
"^DD",60,60,51,0)
PRINT NAME^RFX^^.1;1^K:X[""""!(X'?.ANP)!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X I $D(X),$D(^LAB(60,"D",X)),'$D(^LAB(60,"D",X,DA)) K X
"^DD",60,60,51,1,0)
^.1
"^DD",60,60,51,1,1,0)
60^D
"^DD",60,60,51,1,1,1)
S ^LAB(60,"D",$E(X,1,30),DA)=""
"^DD",60,60,51,1,1,2)
K ^LAB(60,"D",$E(X,1,30),DA)
"^DD",60,60,51,1,1,3)
Do not delete - used to insure unique print names
"^DD",60,60,51,1,1,"DT")
3071018
"^DD",60,60,51,3)
ANSWER MUST BE 1-20 CHARACTERS IN LENGTH
"^DD",60,60,51,21,0)
^.001^1^1^3071018^^^^
"^DD",60,60,51,21,1,0)
Default test heading for cumulative results reports.  (May be different in LAB REPORTS file 64.5.)
"^DD",60,60,51,21,2,0)
in LAB REPORTS file 64.5)
"^DD",60,60,51,"DT")
3071018
"^DD",60,60,100,0)
SITE/SPECIMEN^60.01P^^1;0
"^DD",60,60,100,21,0)
^.001^4^4^3040813^^^^
"^DD",60,60,100,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60,100,21,2,0)
Example:  Sodium can be determined on serum and urine.  Entries in 
"^DD",60,60,100,21,3,0)
this field are not appropriate (or even used) if the test is a panel of
"^DD",60,60,100,21,4,0)
 tests.
"^DD",60,60,200,0)
LAB TEST INCLUDED IN PANEL^60.02P^^2;0
"^DD",60,60,200,21,0)
3^^3^3^2851211^^^
"^DD",60,60,200,21,1,0)
Enter only if this is a panel of other tests, e.g. if the "Laboratory Test"
"^DD",60,60,200,21,2,0)
is ELECTROLYTES, the entries here might be, NA, CL, K, CO2.  If it's an
"^DD",60,60,200,21,3,0)
ADMIT PROFILE, they might be ELECTROLYTES, LIVER FUNCTION, CARDIAC ENZYMES.
"^DD",60,60,300,0)
COLLECTION SAMPLE^60.03IPA^^3;0
"^DD",60,60,300,21,0)
^.001^3^3^3080825^^^^
"^DD",60,60,300,21,1,0)
Enter the appropriate collection sample(s) for standard processing in the
"^DD",60,60,300,21,2,0)
lab.  These are the common names that the phlebotomists and ward personnel
"^DD",60,60,300,21,3,0)
would recognize.  The first entry is the "default" collection sample.
"^DD",60,60.01,0)
SITE/SPECIMEN SUB-FIELD^NL^7.1^18
"^DD",60,60.01,0,"NM","SITE/SPECIMEN")

"^DD",60,60.01,.01,0)
SITE/SPECIMEN^MP61'X^LAB(61,^0;1^N LRA S LRA=$P(^LAB(60,DA(1),0),U,5) K:LRA="" X I $D(X) S DINUM=X,LRA=$O(^LAB(60,"C",LRA,0)) I LRA'=DA(1) K X,DINUM D EN^DDIOL("Site/specimens may only be added for "_$P(^LAB(60,LRA,0),U,1),"","!")
"^DD",60,60.01,.01,1,0)
^.1
"^DD",60,60.01,.01,1,1,0)
60.01^B
"^DD",60,60.01,.01,1,1,1)
S ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",60,60.01,.01,1,1,2)
K ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)
"^DD",60,60.01,.01,3)
To enter a Site/specimen, a Data name must be entered.
"^DD",60,60.01,.01,21,0)
^^3^3^2850318^^^^
"^DD",60,60.01,.01,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60.01,.01,21,2,0)
Example:  Sodium can be determined on serum and urine.
"^DD",60,60.01,.01,21,3,0)
To enter a Site/specimen, a Data name must be entered.
"^DD",60,60.01,.01,"DT")
2850318
"^DD",60,60.01,9,0)
DEFAULT VALUE^FX^^0;10^N LRX S LRX=U_$P(^LAB(60,DA(1),0),U,12)_"0)" K:'$D(@LRX) X Q:'$D(X)  S LRX=@LRX X:$P(LRX,U,2)'["S" $P(LRX,U,5,99) Q:'$D(X)!($P(LRX,U,2)'["S")  S LRX=";"_$P(LRX,U,3) K:'(LRX[(";"_X_":")) X
"^DD",60,60.01,9,3)
ANSWER MUST MATCH APPROPRIATE INPUT IN 'LAB DATA' FILE
"^DD",60,60.01,9,4)
N LRXDP S LRXDP=$P(^LAB(60,D0,0),U,12) I LRXDP'="" S LRXDP=U_LRXDP_"0)" I $D(@LRXDP) S LRXDP=@LRXDP D:$D(^(3)) EN^DDIOL(^(3)) D:$P(LRXDP,U,2)["S" LRSET^LRVER5
"^DD",60,60.01,9,21,0)
^^2^2^2841031^^^^
"^DD",60,60.01,9,21,1,0)
Leave blank or enter the most common (say, >80% of the time) response for
"^DD",60,60.01,9,21,2,0)
the test.
"^DD",60,60.01,9,"DT")
2841207
"^DD",60,60.02,0)
LAB TEST INCLUDED IN PANEL SUB-FIELD^NL^.02^3
"^DD",60,60.02,0,"NM","LAB TEST INCLUDED IN PANEL")

"^DD",60,60.02,.01,0)
LAB TEST^MP60'X^LAB(60,^0;1^D IT600201^LRXREF
"^DD",60,60.02,.01,1,0)
^.1
"^DD",60,60.02,.01,1,1,0)
60^AB
"^DD",60,60.02,.01,1,1,1)
S ^LAB(60,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",60,60.02,.01,1,1,2)
K ^LAB(60,"AB",$E(X,1,30),DA(1),DA)
"^DD",60,60.02,.01,3)
Select only if the panel does not have a data name.
"^DD",60,60.02,.01,21,0)
^^3^3^2851211^^^
"^DD",60,60.02,.01,21,1,0)
If the entry is to be changed or the number sequence is to be changed, the
"^DD",60,60.02,.01,21,2,0)
entry must be first deleted to be moved to a different position in the
"^DD",60,60.02,.01,21,3,0)
panel.
"^DD",60,60.02,.01,"DT")
2880304
"^DD",60,60.03,0)
COLLECTION SAMPLE SUB-FIELD^NL^500^10
"^DD",60,60.03,0,"NM","COLLECTION SAMPLE")

"^DD",60,60.03,.01,0)
COLLECTION SAMPLE^P62'X^LAB(62,^0;1^I $P(^LAB(60,DA(1),0),U,8),$O(^(3,0))>0 D EN^DDIOL("ONLY ONE UNIQUE COLLECTION SAMPLE","","?0") K X
"^DD",60,60.03,.01,1,0)
^.1^^-1
"^DD",60,60.03,.01,1,1,0)
^^TRIGGER^60.03^2
"^DD",60,60.03,.01,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,3,D1,0)):^(0),1:"") S X=$P(Y(1),U,3) S DIU=X K Y X ^DD(60.03,.01,1,1,1.1) X ^DD(60.03,.01,1,1,1.4)
"^DD",60,60.03,.01,1,1,1.1)
S Y(1)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^LAB(62,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(62,D0,0)):^(0),1:"") S X=$P(Y(101),U,3) S D0=Y(1)
"^DD",60,60.03,.01,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,2,99))  S DIH=DIH_U" S %=$P(DIH,U,4,999),^(0)=$P(DIH,U,1,2)_U_DIV_$S(%]"":U_%,1:""),DIH=60.03,DIG=2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.03,.01,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,3,D1,0)):^(0),1:"") S X=$P(Y(1),U,3) S DIU=X K Y X ^DD(60.03,.01,1,1,2.1) X ^DD(60.03,.01,1,1,2.4)
"^DD",60,60.03,.01,1,1,2.1)
S Y(1)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^LAB(62,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(62,D0,0)):^(0),1:"") S X=$P(Y(101),U,3) S D0=Y(1)
"^DD",60,60.03,.01,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,2,99))  S DIH=DIH_U" S %=$P(DIH,U,4,999),^(0)=$P(DIH,U,1,2)_U_DIV_$S(%]"":U_%,1:""),DIH=60.03,DIG=2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.03,.01,1,1,"%D",0)
^^2^2^3080828^
"^DD",60,60.03,.01,1,1,"%D",1,0)
This cross reference uses the COLLECTION SAMPLE field to navigate to the COLLECTION SAMPLE file
"^DD",60,60.03,.01,1,1,"%D",2,0)
and retrieve the TUBE TOP COLOR field value and store in CONTAINER field (#2). 
"^DD",60,60.03,.01,1,1,"CREATE VALUE")
COLLECTION SAMPLE:TUBE TOP COLOR
"^DD",60,60.03,.01,1,1,"DELETE VALUE")
COLLECTION SAMPLE:TUBE TOP COLOR
"^DD",60,60.03,.01,1,1,"FIELD")
CONTAINER
"^DD",60,60.03,.01,1,3,0)
60.03^B
"^DD",60,60.03,.01,1,3,1)
S ^LAB(60,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",60,60.03,.01,1,3,2)
K ^LAB(60,DA(1),3,"B",$E(X,1,30),DA)
"^DD",60,60.03,.01,3)
Enter the appropriate collection sample for standard processing in the lab.
"^DD",60,60.03,.01,21,0)
^.001^2^2^3080825^^^^
"^DD",60,60.03,.01,21,1,0)
Enter the appropriate collection sample(s) for standard processing in the lab.  These are the common names the phlebotomists and ward personnel use and would recognize.  The first entry will be the "default
"^DD",60,60.03,.01,21,2,0)
" collection sample.  Points to the COLLECTION SAMPLE file.
"^DD",60,60.03,.01,"DT")
3080829
"^DD",61,61,.01,0)
NAME^RFXI^^0;1^K:$L(X)>80!($L(X)<2)!'(X'?1P.E)!(X'?.ANP) X I $D(X),X?1"T"1N.E!(X?1"T-".E) K X D EN^DDIOL("Enter SNOMED CODE without T or T-",,"$C(7),!") Q
"^DD",61,61,.01,1,0)
^.1
"^DD",61,61,.01,1,1,0)
61^B
"^DD",61,61,.01,1,1,1)
S ^LAB(61,"B",$E(X,1,80),DA)=""
"^DD",61,61,.01,1,1,2)
K ^LAB(61,"B",$E(X,1,80),DA)
"^DD",61,61,.01,3)
ANSWER MUST BE 2-80 CHARACTERS IN LENGTH
"^DD",61,61,.01,21,0)
^.001^1^1^3070828^^^^
"^DD",61,61,.01,21,1,0)
The name of the specimen or source.
"^DD",61,61,.01,23,0)
^^3^3^3070828^
"^DD",61,61,.01,23,1,0)
When this field is modified by non-interactive means, the variable 
"^DD",61,61,.01,23,2,0)
LRFMERTS should be defined.  LRFMERTS is used by the AERT xref to 
"^DD",61,61,.01,23,3,0)
determine if the field is being edited by a user or by a process.
"^DD",61,61,.01,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",61,61,.01,"DT")
3090603
"^DD",61,61,2,0)
SNOMED CODE^FX^^0;2^K:$L(X)>7!($L(X)<2)!'(X?.AN)!(X?1"T-"1N.E)!(X?1"T"1N.E) X I $D(X),'$D(DIU(0)) S Y=$O(^LAB(61,"C",X,0)) I Y>0 K:'$D(^LAB(61,Y,0)) ^LAB(61,"C",X,Y) I $D(^LAB(61,Y,0)) K X D EN^DDIOL("ALREADY AN ENTRY",,"$C(7),!") Q
"^DD",61,61,2,.1)
ENTER CHARACTERS FOLLOWING 'T-' IN SNOMED REFERENCE BOOK
"^DD",61,61,2,1,0)
^.1
"^DD",61,61,2,1,1,0)
61^C
"^DD",61,61,2,1,1,1)
S ^LAB(61,"C",$E(X,1,30),DA)=""
"^DD",61,61,2,1,1,2)
K ^LAB(61,"C",$E(X,1,30),DA)
"^DD",61,61,2,3)
ANSWER MUST BE 2-7 CHARACTERS IN LENGTH and NOT begin with T- or T
"^DD",61,61,2,21,0)
^^1^1^2930423^^^^
"^DD",61,61,2,21,1,0)
The code consists of the characters following "T-" in the SNOMED reference book.
"^DD",61,61,2,"DT")
3060409
"^DD",61,61,20,0)
SNOMED CT ID^FX^^SCT;1^K:$L(X)>18!($L(X)<6)!'(X?6.18N) X D:$D(X) IT61F20^LRXREF
"^DD",61,61,20,1,0)
^.1
"^DD",61,61,20,1,1,0)
61^F
"^DD",61,61,20,1,1,1)
S ^LAB(61,"F",$E(X,1,30),DA)=""
"^DD",61,61,20,1,1,2)
K ^LAB(61,"F",$E(X,1,30),DA)
"^DD",61,61,20,1,1,3)
Cross reference on the SNOMED CT code assigned to this entry
"^DD",61,61,20,1,1,"DT")
3060203
"^DD",61,61,20,3)
Enter a valid SNOMED CT Identifier (6-18 numeric).
"^DD",61,61,20,21,0)
^^5^5^3090605^
"^DD",61,61,20,21,1,0)
This is the SNOMED CT concept identifier for this entry. If this
"^DD",61,61,20,21,2,0)
entry is null then the entry is either unmapped or no valid SNOMED concept
"^DD",61,61,20,21,3,0)
term exists to map this term.
"^DD",61,61,20,21,4,0)
 
"^DD",61,61,20,21,5,0)
This field is not editable except by the Lab software.
"^DD",61,61,20,23,0)
^^34^34^3090605^
"^DD",61,61,20,23,1,0)
Field added via patch LR*5.2*350.     
"^DD",61,61,20,23,2,0)
-----------------------------
"^DD",61,61,20,23,3,0)
 
"^DD",61,61,20,23,4,0)
The SNOMED CT concept identifiers assigned by The International 
"^DD",61,61,20,23,5,0)
Health Terminology Standards Development Organisation has the following 
"^DD",61,61,20,23,6,0)
specifications.
"^DD",61,61,20,23,7,0)
 
"^DD",61,61,20,23,8,0)
The SCTID data type is a 64-bit integer, which is subject to the 
"^DD",61,61,20,23,9,0)
following constraints:
"^DD",61,61,20,23,10,0)
 Only positive integer values are permitted.
"^DD",61,61,20,23,11,0)
 The minimum permitted value is 100,000 (6 digits)
"^DD",61,61,20,23,12,0)
 The maximum permitted value is 999,999,999,999,999,999 (18-digits).
"^DD",61,61,20,23,13,0)
 As a result of rules for the partition-identifier and check-digit, many
"^DD",61,61,20,23,14,0)
 integers within this range are not valid SCTIDs.
"^DD",61,61,20,23,15,0)
 
"^DD",61,61,20,23,16,0)
Storage of these identifiers in this file is of data type free text
"^DD",61,61,20,23,17,0)
with a 6-18 character length and a numeric pattern match. This
"^DD",61,61,20,23,18,0)
conforms to The Department of Veterans Affairs M Programming Standards
"^DD",61,61,20,23,19,0)
and Conventions 2008. The VA SACC has reviewed and indicated this data 
"^DD",61,61,20,23,20,0)
storage is within standards and conventions.
"^DD",61,61,20,23,21,0)
 
"^DD",61,61,20,23,22,0)
-----------------------------
"^DD",61,61,20,23,23,0)
The SNOMED CT ID (SCTID) field needs to be a valid SNOMED CT concept.
"^DD",61,61,20,23,24,0)
 
"^DD",61,61,20,23,25,0)
The INPUT TRANSFORM checks if the SCT code is valid.  If not 
"^DD",61,61,20,23,26,0)
the INPUT TRANSFORM fails.
"^DD",61,61,20,23,27,0)
 
"^DD",61,61,20,23,28,0)
------------------------------
"^DD",61,61,20,23,29,0)
 
"^DD",61,61,20,23,30,0)
This field is modified only by non-interactive means via updates from the
"^DD",61,61,20,23,31,0)
VA Standard Terminology Services.
"^DD",61,61,20,23,32,0)
 
"^DD",61,61,20,23,33,0)
The variable LRFMERTS is used by the AERT xref to determine if the field
"^DD",61,61,20,23,34,0)
is being edited by a user or by a process.
"^DD",61,61,20,"DT")
3090605
"^DD",61,61,21,0)
SCT CODE STATUS^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^SCT;2^Q
"^DD",61,61,21,1,0)
^.1
"^DD",61,61,21,1,1,0)
61^AC
"^DD",61,61,21,1,1,1)
S ^LAB(61,"AC",$E(X,1,30),DA)=""
"^DD",61,61,21,1,1,2)
K ^LAB(61,"AC",$E(X,1,30),DA)
"^DD",61,61,21,1,1,"%D",0)
^^2^2^3090604^
"^DD",61,61,21,1,1,"%D",1,0)
This cross reference will sort the entries based on their mapping status 
"^DD",61,61,21,1,1,"%D",2,0)
or the SCT designation as to term type.
"^DD",61,61,21,1,1,"DT")
3090604
"^DD",61,61,21,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",61,61,21,12)
Locks field to prevent editing other than by Lab software.
"^DD",61,61,21,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61,61,21,21,0)
^^9^9^3090608^
"^DD",61,61,21,21,1,0)
This field indicate the status or disposition of this entry.
"^DD",61,61,21,21,2,0)
 P  = SNOMED Preferred term
"^DD",61,61,21,21,3,0)
 S  = SNOMED Synonym term
"^DD",61,61,21,21,4,0)
 L  = Local spelling of a SNOMED term (miss-spelled)
"^DD",61,61,21,21,5,0)
 R  = Referred to national coders to determine if acceptable
"^DD",61,61,21,21,6,0)
 X  = No applicable mapping
"^DD",61,61,21,21,7,0)
 LN = New term pending LEXICON release/update.
"^DD",61,61,21,21,8,0)
 RN = STS Request New Code
"^DD",61,61,21,21,9,0)
 E  = Error encountered when applying STS disposition to file entry. 
"^DD",61,61,21,"DT")
3090608
"^DD",61,61,22,0)
SCT TOP CONCEPT^*P64.061'^LAB(64.061,^SCT;3^S DIC("S")="I $P(^(0),U,11)=""SCT"",($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",61,61,22,3)
Select the SNOMED Hierarchy associated with this term.
"^DD",61,61,22,12)
Select only SCT Concept terms and locks field to prevent editing other than Lab software
"^DD",61,61,22,12.1)
S DIC("S")="I $P(^(0),U,11)=""SCT"",($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61,61,22,21,0)
^.001^3^3^3090522^^^^
"^DD",61,61,22,21,1,0)
This field Identifies the SNOMED CT top level concept for this SNOMED
"^DD",61,61,22,21,2,0)
code. This is useful to determine the proper code when the spelling of
"^DD",61,61,22,21,3,0)
the terms are identical but have different concept (meaning).
"^DD",61,61,22,"DT")
3090605
"^DD",61,61,23,0)
SCT STATUS DATE^61.023DA^^SCT1;0
"^DD",61,61,23,21,0)
^^3^3^3090611^
"^DD",61,61,23,21,1,0)
This multiple tracks the status of SNOMED SCT codes referred to STS to 
"^DD",61,61,23,21,2,0)
determine if the code is a valid VHA SCT term.  This field is not editable
"^DD",61,61,23,21,3,0)
except by Lab software.
"^DD",61,61.023,0)
SCT STATUS DATE SUB-FIELD^^3^5
"^DD",61,61.023,0,"DT")
3090612
"^DD",61,61.023,0,"IX","B",61.023,.01)

"^DD",61,61.023,0,"NM","SCT STATUS DATE")

"^DD",61,61.023,0,"UP")
61
"^DD",61,61.023,.01,0)
SCT STATUS DATE^DX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",61,61.023,.01,1,0)
^.1
"^DD",61,61.023,.01,1,1,0)
61.023^B
"^DD",61,61.023,.01,1,1,1)
S ^LAB(61,DA(1),"SCT1","B",$E(X,1,30),DA)=""
"^DD",61,61.023,.01,1,1,2)
K ^LAB(61,DA(1),"SCT1","B",$E(X,1,30),DA)
"^DD",61,61.023,.01,3)
Enter the date the status was changed.
"^DD",61,61.023,.01,21,0)
^^1^1^3090608^
"^DD",61,61.023,.01,21,1,0)
The date the status was changed.
"^DD",61,61.023,.01,"DT")
3090608
"^DD",61,61.023,1,0)
SCT STATUS CHANGE TO^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^0;2^Q
"^DD",61,61.023,1,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",61,61.023,1,12)
Locks field to prevent editing other than by Lab software.
"^DD",61,61.023,1,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61,61.023,1,21,0)
^.001^2^2^3070803^^
"^DD",61,61.023,1,21,1,0)
This field track the status of terms referred to the ERT team to 
"^DD",61,61.023,1,21,2,0)
determine if this code is a valid VHA SNOMED SCT term.
"^DD",61,61.023,1,"DT")
3090608
"^DD",61,61.023,2,0)
SCT TRANSACTION NUMBER^FX^^0;3^K:$L(X)>45!($L(X)<1) X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",61,61.023,2,3)
Answer must be 1-45 characters in length
"^DD",61,61.023,2,21,0)
^^2^2^3090608^
"^DD",61,61.023,2,21,1,0)
Transaction number generated by Laboratory software when referring a term
"^DD",61,61.023,2,21,2,0)
for mediation by STS and mapping to SNOMED CT.
"^DD",61,61.023,2,"DT")
3090610
"^DD",61,61.023,3,0)
SCT STATUS USER^P200'^VA(200,^0;4^Q
"^DD",61,61.023,3,3)
Enter the user who performed the SCT code resolution.
"^DD",61,61.023,3,21,0)
^^2^2^3090612^
"^DD",61,61.023,3,21,1,0)
Store the user who initiated the process to apply the STS SNOMED CT code 
"^DD",61,61.023,3,21,2,0)
resolution or the original mapping to this file entry.
"^DD",61,61.023,3,"DT")
3090612
"^DD",61,61.023,4,0)
SCT COMMENT TEXT^61.0231^^1;0
"^DD",61,61.023,4,21,0)
^^4^4^3090608^
"^DD",61,61.023,4,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",61,61.023,4,21,2,0)
The text can relate to information submitted to STS for the term to be 
"^DD",61,61.023,4,21,3,0)
mapped, the comments returned by STS related to the mapping and 
"^DD",61,61.023,4,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",61,61.023,4,"DT")
3090608
"^DD",61,61.0231,0)
SCT COMMENT TEXT SUB-FIELD^^.01^1
"^DD",61,61.0231,0,"DT")
3090608
"^DD",61,61.0231,0,"NM","SCT COMMENT TEXT")

"^DD",61,61.0231,0,"UP")
61.023
"^DD",61,61.0231,.01,0)
SCT COMMENT TEXT^WLx^^0;1
"^DD",61,61.0231,.01,3)
Enter the comment that accompanies this disposition.
"^DD",61,61.0231,.01,21,0)
^^4^4^3090608^
"^DD",61,61.0231,.01,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",61,61.0231,.01,21,2,0)
The text can relate to information submitted to STS for the term to be
"^DD",61,61.0231,.01,21,3,0)
mapped, the comments returned by STS related to the mapping and
"^DD",61,61.0231,.01,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",61,61.0231,.01,"DT")
3090608
"^DD",61.2,61.2,.01,0)
NAME^RFI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>80!($L(X)<2)!'(X'?1P.E)!(X'?.ANP) X
"^DD",61.2,61.2,.01,1,0)
^.1
"^DD",61.2,61.2,.01,1,1,0)
61.2^B
"^DD",61.2,61.2,.01,1,1,1)
S ^LAB(61.2,"B",$E(X,1,30),DA)=""
"^DD",61.2,61.2,.01,1,1,2)
K ^LAB(61.2,"B",$E(X,1,30),DA)
"^DD",61.2,61.2,.01,3)
ANSWER MUST BE 2-80 CHARACTERS IN LENGTH
"^DD",61.2,61.2,.01,21,0)
^.001^1^1^3070828^^^^
"^DD",61.2,61.2,.01,21,1,0)
The name of the etiologic (causative) agent.
"^DD",61.2,61.2,.01,23,0)
^^3^3^3070828^
"^DD",61.2,61.2,.01,23,1,0)
When this field is modified by non-interactive means, the variable 
"^DD",61.2,61.2,.01,23,2,0)
LRFMERTS should be defined.  LRFMERTS is used by the AERT xref to 
"^DD",61.2,61.2,.01,23,3,0)
determine if the field is being edited by a user or by a process.
"^DD",61.2,61.2,.01,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",61.2,61.2,.01,"DT")
3090514
"^DD",61.2,61.2,2,0)
SNOMED CODE^FX^^0;2^K:$L(X)>7!($L(X)<2)!'(X?.AN) X I '$D(DIU(0)),$D(X) S Y=$O(^LAB(61.2,"D",X,0)) I Y>0 K:'$D(^LAB(61.2,Y,0)) ^LAB(61.2,"D",X,Y) I $D(^LAB(61.2,Y,0)) K X D EN^DDIOL("ALREADY AN ENTRY",,"$C(7),!") Q
"^DD",61.2,61.2,2,.1)
ENTER CHARACTERS FOLLOWING 'E-' IN SNOMED REFERENCE BOOK
"^DD",61.2,61.2,2,1,0)
^.1
"^DD",61.2,61.2,2,1,1,0)
61.2^D
"^DD",61.2,61.2,2,1,1,1)
S ^LAB(61.2,"D",$E(X,1,30),DA)=""
"^DD",61.2,61.2,2,1,1,2)
K ^LAB(61.2,"D",$E(X,1,30),DA)
"^DD",61.2,61.2,2,3)
ANSWER MUST BE 2-7 CHARACTERS IN LENGTH
"^DD",61.2,61.2,2,21,0)
^^1^1^2841109^
"^DD",61.2,61.2,2,21,1,0)
The characters following "E-" in the SNOMED reference book.
"^DD",61.2,61.2,2,"DT")
2840911
"^DD",61.2,61.2,4,0)
IDENTIFIER^S^B:BACTERIUM;F:FUNGUS;P:PARASITE;M:MYCOBACTERIUM;V:VIRUS;C:CHEMICAL;D:DRUG;R:RICKETTSIAE;A:PHYSICAL AGENT;^0;5^Q
"^DD",61.2,61.2,4,21,0)
^.001^1^1^3060314^^
"^DD",61.2,61.2,4,21,1,0)
This field identifies the category into which this etiologic agent falls.
"^DD",61.2,61.2,4,"DT")
3060314
"^DD",61.2,61.2,20,0)
SNOMED CT ID^FX^^SCT;1^K:$L(X)>18!($L(X)<6)!'(X?6.18N) X D:$D(X) IT612F20^LRXREF
"^DD",61.2,61.2,20,1,0)
^.1
"^DD",61.2,61.2,20,1,1,0)
61.2^F
"^DD",61.2,61.2,20,1,1,1)
S ^LAB(61.2,"F",$E(X,1,30),DA)=""
"^DD",61.2,61.2,20,1,1,2)
K ^LAB(61.2,"F",$E(X,1,30),DA)
"^DD",61.2,61.2,20,1,1,"%D",0)
^^1^1^3060130^
"^DD",61.2,61.2,20,1,1,"%D",1,0)
Cross reference on the SNOMED CT code assigned to this entry.
"^DD",61.2,61.2,20,1,1,"DT")
3060130
"^DD",61.2,61.2,20,3)
Enter a valid SNOMED CT Identifier (6-18 numeric).
"^DD",61.2,61.2,20,21,0)
^^5^5^3090603^
"^DD",61.2,61.2,20,21,1,0)
This is the SNOMED CT concept id number for this entry. If this entry is 
"^DD",61.2,61.2,20,21,2,0)
null then the entry is either unmapped or no valid SNOMED concept term
"^DD",61.2,61.2,20,21,3,0)
exists to map this entry.
"^DD",61.2,61.2,20,21,4,0)
 
"^DD",61.2,61.2,20,21,5,0)
This field is not editable except by Lab software.
"^DD",61.2,61.2,20,23,0)
^^33^33^3090603^
"^DD",61.2,61.2,20,23,1,0)
Field added via patch LR*5.2*350.     
"^DD",61.2,61.2,20,23,2,0)
 
"^DD",61.2,61.2,20,23,3,0)
-----------------------------
"^DD",61.2,61.2,20,23,4,0)
The SNOMED CT concept identifiers assigned by The International
"^DD",61.2,61.2,20,23,5,0)
Health Terminology Standards Development Organisation has the following
"^DD",61.2,61.2,20,23,6,0)
specifications.
"^DD",61.2,61.2,20,23,7,0)
 
"^DD",61.2,61.2,20,23,8,0)
The SCTID data type is a 64-bit integer, which is subject to the
"^DD",61.2,61.2,20,23,9,0)
following constraints:
"^DD",61.2,61.2,20,23,10,0)
 Only positive integer values are permitted.
"^DD",61.2,61.2,20,23,11,0)
 The minimum permitted value is 100,000 (6 digits)
"^DD",61.2,61.2,20,23,12,0)
 The maximum permitted value is 999,999,999,999,999,999 (18-digits).
"^DD",61.2,61.2,20,23,13,0)
 As a result of rules for the partition-identifier and check-digit, many
"^DD",61.2,61.2,20,23,14,0)
 integers within this range are not valid SCTIDs.
"^DD",61.2,61.2,20,23,15,0)
 
"^DD",61.2,61.2,20,23,16,0)
Storage of these identifiers in this file is of data type free text
"^DD",61.2,61.2,20,23,17,0)
with a 6-18 character length and a numeric pattern match. This
"^DD",61.2,61.2,20,23,18,0)
conforms to the The Department of Veterans Affairs M Programming Standards
"^DD",61.2,61.2,20,23,19,0)
and Conventions 2008. The VA SACC has reviewed and indicated this data
"^DD",61.2,61.2,20,23,20,0)
storage is within standards and conventions.
"^DD",61.2,61.2,20,23,21,0)
 
"^DD",61.2,61.2,20,23,22,0)
------------------------------
"^DD",61.2,61.2,20,23,23,0)
The SNOMED CT ID (SCTID) field needs to be a valid SNOMED CT concept.
"^DD",61.2,61.2,20,23,24,0)
 
"^DD",61.2,61.2,20,23,25,0)
The INPUT TRANSFORM checks if the SCT code is valid.  If not
"^DD",61.2,61.2,20,23,26,0)
the INPUT TRANSFORM fails.
"^DD",61.2,61.2,20,23,27,0)
 
"^DD",61.2,61.2,20,23,28,0)
------------------------------
"^DD",61.2,61.2,20,23,29,0)
This field is modified only by non-interactive means via updates from the
"^DD",61.2,61.2,20,23,30,0)
VA Standard Terminology Services.
"^DD",61.2,61.2,20,23,31,0)
 
"^DD",61.2,61.2,20,23,32,0)
The variable LRFMERTS is used by the AERT xref to determine if the field
"^DD",61.2,61.2,20,23,33,0)
is being edited by a user or by a process.
"^DD",61.2,61.2,20,"DT")
3090603
"^DD",61.2,61.2,21,0)
SCT CODE STATUS^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^SCT;2^Q
"^DD",61.2,61.2,21,1,0)
^.1
"^DD",61.2,61.2,21,1,1,0)
61.2^AC
"^DD",61.2,61.2,21,1,1,1)
S ^LAB(61.2,"AC",$E(X,1,30),DA)=""
"^DD",61.2,61.2,21,1,1,2)
K ^LAB(61.2,"AC",$E(X,1,30),DA)
"^DD",61.2,61.2,21,1,1,"%D",0)
^^2^2^3060131^
"^DD",61.2,61.2,21,1,1,"%D",1,0)
This cross reference will sort the entries based on their mapping status 
"^DD",61.2,61.2,21,1,1,"%D",2,0)
or the SCT designation as to term type.
"^DD",61.2,61.2,21,1,1,"DT")
3060131
"^DD",61.2,61.2,21,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",61.2,61.2,21,12)
Locks field to prevent editing other than by Lab software.
"^DD",61.2,61.2,21,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61.2,61.2,21,21,0)
^^9^9^3090608^
"^DD",61.2,61.2,21,21,1,0)
This field indicate the status or disposition of this entry.
"^DD",61.2,61.2,21,21,2,0)
 P  = SNOMED Preferred term
"^DD",61.2,61.2,21,21,3,0)
 S  = SNOMED Synonym term
"^DD",61.2,61.2,21,21,4,0)
 L  = Local spelling of a SNOMED term (miss-spelled)
"^DD",61.2,61.2,21,21,5,0)
 R  = Referred to national coders to determine if acceptable
"^DD",61.2,61.2,21,21,6,0)
 X  = No applicable mapping
"^DD",61.2,61.2,21,21,7,0)
 LN = New term pending LEXICON release/update.
"^DD",61.2,61.2,21,21,8,0)
 RN = STS Request New Code
"^DD",61.2,61.2,21,21,9,0)
 E  = Error encountered when applying STS disposition to file entry. 
"^DD",61.2,61.2,21,"DT")
3090605
"^DD",61.2,61.2,22,0)
SCT TOP CONCEPT^*P64.061'^LAB(64.061,^SCT;3^S DIC("S")="I $P(^(0),U,11)=""SCT"",($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",61.2,61.2,22,3)
Select the SNOMED Hierarchy associated with this term.
"^DD",61.2,61.2,22,12)
Select only SCT Concept termsand prevents editing other than by Lab software
"^DD",61.2,61.2,22,12.1)
S DIC("S")="I $P(^(0),U,11)=""SCT"",($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61.2,61.2,22,21,0)
^.001^3^3^3090522^^^^
"^DD",61.2,61.2,22,21,1,0)
This field Identifies the SNOMED CT top level concept for this SNOMED 
"^DD",61.2,61.2,22,21,2,0)
code. This is useful to determine the proper code when the spelling of 
"^DD",61.2,61.2,22,21,3,0)
the terms are identical but have different concept (meaning).
"^DD",61.2,61.2,22,"DT")
3090605
"^DD",61.2,61.2,23,0)
SCT STATUS DATE^61.223DA^^SCT1;0
"^DD",61.2,61.2,23,21,0)
^^3^3^3090608^
"^DD",61.2,61.2,23,21,1,0)
This multiple tracks the status change of SNOMED SCT codes that have been 
"^DD",61.2,61.2,23,21,2,0)
referred to the STS team to determine if this SCT code is not a valid SCT
"^DD",61.2,61.2,23,21,3,0)
code or it is a valid SCT code pending release/update of the LEXICON file.
"^DD",61.2,61.2,23,"DT")
3060313
"^DD",61.2,61.223,0)
SCT STATUS DATE SUB-FIELD^^3^5
"^DD",61.2,61.223,0,"DT")
3090612
"^DD",61.2,61.223,0,"IX","B",61.223,.01)

"^DD",61.2,61.223,0,"NM","SCT STATUS DATE")

"^DD",61.2,61.223,0,"UP")
61.2
"^DD",61.2,61.223,.01,0)
SCT STATUS DATE^DX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",61.2,61.223,.01,1,0)
^.1
"^DD",61.2,61.223,.01,1,1,0)
61.223^B
"^DD",61.2,61.223,.01,1,1,1)
S ^LAB(61.2,DA(1),"SCT1","B",$E(X,1,30),DA)=""
"^DD",61.2,61.223,.01,1,1,2)
K ^LAB(61.2,DA(1),"SCT1","B",$E(X,1,30),DA)
"^DD",61.2,61.223,.01,3)
Enter the date the status was changed.
"^DD",61.2,61.223,.01,21,0)
^^1^1^3090608^
"^DD",61.2,61.223,.01,21,1,0)
The date the status was changed.
"^DD",61.2,61.223,.01,"DT")
3090608
"^DD",61.2,61.223,1,0)
SCT STATUS CHANGED TO^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^0;2^Q
"^DD",61.2,61.223,1,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",61.2,61.223,1,12)
Locks field to prevent editing other than by Lab software.
"^DD",61.2,61.223,1,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",61.2,61.223,1,21,0)
^^2^2^3090608^
"^DD",61.2,61.223,1,21,1,0)
This field track the status of terms referred to the STS team to determine
"^DD",61.2,61.223,1,21,2,0)
if this code is a valid VHA SNOMED SCT term.
"^DD",61.2,61.223,1,"DT")
3090608
"^DD",61.2,61.223,2,0)
SCT TRANSACTION NUMBER^FX^^0;3^K:$L(X)>45!($L(X)<1) X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",61.2,61.223,2,3)
Answer must be 1-45 characters in length
"^DD",61.2,61.223,2,21,0)
^^2^2^3090608^
"^DD",61.2,61.223,2,21,1,0)
Transaction number generated by Laboratory software when referring a term
"^DD",61.2,61.223,2,21,2,0)
for mediation by STS and mapping to SNOMED CT.
"^DD",61.2,61.223,2,"DT")
3090608
"^DD",61.2,61.223,3,0)
SCT STATUS USER^P200'^VA(200,^0;4^Q
"^DD",61.2,61.223,3,3)
Enter the user who performed the SCT code resolution.
"^DD",61.2,61.223,3,21,0)
^^2^2^3090612^
"^DD",61.2,61.223,3,21,1,0)
Store the user who initiated the process to apply the STS SNOMED CT code
"^DD",61.2,61.223,3,21,2,0)
resolution or the original mapping to this file entry.
"^DD",61.2,61.223,3,"DT")
3090612
"^DD",61.2,61.223,4,0)
SCT COMMENT TEXT^61.2231^^1;0
"^DD",61.2,61.223,4,21,0)
^^4^4^3090608^
"^DD",61.2,61.223,4,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",61.2,61.223,4,21,2,0)
The text can relate to information submitted to STS for the term to be
"^DD",61.2,61.223,4,21,3,0)
mapped, the comments returned by STS related to the mapping and
"^DD",61.2,61.223,4,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",61.2,61.223,4,"DT")
3090608
"^DD",61.2,61.2231,0)
SCT COMMENT TEXT SUB-FIELD^^.01^1
"^DD",61.2,61.2231,0,"DT")
3090608
"^DD",61.2,61.2231,0,"NM","SCT COMMENT TEXT")

"^DD",61.2,61.2231,0,"UP")
61.223
"^DD",61.2,61.2231,.01,0)
SCT COMMENT TEXT^WLx^^0;1
"^DD",61.2,61.2231,.01,3)
Enter the comment thatt accompanies the STS disposition.
"^DD",61.2,61.2231,.01,21,0)
^^4^4^3090608^
"^DD",61.2,61.2231,.01,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",61.2,61.2231,.01,21,2,0)
The text can relate to information submitted to STS for the term to be
"^DD",61.2,61.2231,.01,21,3,0)
mapped, the comments returned by STS related to the mapping and
"^DD",61.2,61.2231,.01,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",61.2,61.2231,.01,"DT")
3090608
"^DD",62,62,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",62,62,.01,1,0)
^.1
"^DD",62,62,.01,1,1,0)
62^B
"^DD",62,62,.01,1,1,1)
S ^LAB(62,"B",$E(X,1,30),DA)=""
"^DD",62,62,.01,1,1,2)
K ^LAB(62,"B",$E(X,1,30),DA)
"^DD",62,62,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",62,62,.01,21,0)
^.001^1^1^3070828^^
"^DD",62,62,.01,21,1,0)
The name of the collection sample.
"^DD",62,62,.01,23,0)
^^3^3^3070828^
"^DD",62,62,.01,23,1,0)
When this field is modified by non-interactive means, the variable 
"^DD",62,62,.01,23,2,0)
LRFMERTS should be defined.  LRFMERTS is used by the AERT xref to 
"^DD",62,62,.01,23,3,0)
determine if the field is being edited by a user or by a process.
"^DD",62,62,.01,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",62,62,.01,"DT")
3090603
"^DD",62,62,20,0)
SNOMED CT ID^FX^^SCT;1^K:$L(X)>18!($L(X)<6)!'(X?6.18N) X D:$D(X) IT62F20^LRXREF
"^DD",62,62,20,1,0)
^.1
"^DD",62,62,20,1,1,0)
62^F
"^DD",62,62,20,1,1,1)
S ^LAB(62,"F",$E(X,1,30),DA)=""
"^DD",62,62,20,1,1,2)
K ^LAB(62,"F",$E(X,1,30),DA)
"^DD",62,62,20,1,1,3)
Cross reference on the SNOMED CT code assigned to this entry
"^DD",62,62,20,1,1,"%D",0)
^^2^2^3060314^
"^DD",62,62,20,1,1,"%D",1,0)
This is the SNOMED CT concept id number for this entry. If this entry is 
"^DD",62,62,20,1,1,"%D",2,0)
null then the entry is either unmapped or not a valid SNOMED concept term.
"^DD",62,62,20,1,1,"DT")
3060314
"^DD",62,62,20,3)
Enter a valid SNOMED CT Identifier (6-18 numeric).
"^DD",62,62,20,21,0)
^^5^5^3090605^
"^DD",62,62,20,21,1,0)
This is the SNOMED CT concept identifier for this entry. If this entry is
"^DD",62,62,20,21,2,0)
null then the entry is either unmapped or no valid SNOMED concept
"^DD",62,62,20,21,3,0)
term exists to map this term.
"^DD",62,62,20,21,4,0)
 
"^DD",62,62,20,21,5,0)
This field is only editable by the Lab software.
"^DD",62,62,20,23,0)
^^34^34^3090605^
"^DD",62,62,20,23,1,0)
Field added via patch LR*5.2*350.     
"^DD",62,62,20,23,2,0)
 
"^DD",62,62,20,23,3,0)
-----------------------------
"^DD",62,62,20,23,4,0)
The SNOMED CT concept identifiers assigned by The International
"^DD",62,62,20,23,5,0)
Health Terminology Standards Development Organisation has the following
"^DD",62,62,20,23,6,0)
specifications.
"^DD",62,62,20,23,7,0)
 
"^DD",62,62,20,23,8,0)
The SCTID data type is a 64-bit integer, which is subject to the
"^DD",62,62,20,23,9,0)
following constraints:
"^DD",62,62,20,23,10,0)
 Only positive integer values are permitted.
"^DD",62,62,20,23,11,0)
 The minimum permitted value is 100,000 (6 digits)
"^DD",62,62,20,23,12,0)
 The maximum permitted value is 999,999,999,999,999,999 (18-digits).
"^DD",62,62,20,23,13,0)
 As a result of rules for the partition-identifier and check-digit, many
"^DD",62,62,20,23,14,0)
 integers within this range are not valid SCTIDs.
"^DD",62,62,20,23,15,0)
 
"^DD",62,62,20,23,16,0)
Storage of these identifiers in this file is of data type free text
"^DD",62,62,20,23,17,0)
with a 6-18 character length and a numeric pattern match. This
"^DD",62,62,20,23,18,0)
conforms to The Department of Veterans Affairs M Programming Standards
"^DD",62,62,20,23,19,0)
and Conventions 2008. The VA SACC has reviewed and indicated this data
"^DD",62,62,20,23,20,0)
storage is within standards and conventions.
"^DD",62,62,20,23,21,0)
 
"^DD",62,62,20,23,22,0)
-----------------------------
"^DD",62,62,20,23,23,0)
The SNOMED CT ID (SCTID) field needs to be a valid SNOMED CT concept.
"^DD",62,62,20,23,24,0)
 
"^DD",62,62,20,23,25,0)
The INPUT TRANSFORM checks if the SCT code is valid.  If not
"^DD",62,62,20,23,26,0)
the INPUT TRANSFORM fails.
"^DD",62,62,20,23,27,0)
 
"^DD",62,62,20,23,28,0)
------------------------------
"^DD",62,62,20,23,29,0)
 
"^DD",62,62,20,23,30,0)
This field is modified only by non-interactive means via updates from the
"^DD",62,62,20,23,31,0)
VA Standard Terminology Services.
"^DD",62,62,20,23,32,0)
 
"^DD",62,62,20,23,33,0)
The variable LRFMERTS is used by the AERT xref to determine if the field
"^DD",62,62,20,23,34,0)
is being edited by a user or by a process.
"^DD",62,62,20,"DT")
3090605
"^DD",62,62,21,0)
SCT CODE STATUS^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^SCT;2^Q
"^DD",62,62,21,1,0)
^.1
"^DD",62,62,21,1,1,0)
62^AC
"^DD",62,62,21,1,1,1)
S ^LAB(62,"AC",$E(X,1,30),DA)=""
"^DD",62,62,21,1,1,2)
K ^LAB(62,"AC",$E(X,1,30),DA)
"^DD",62,62,21,1,1,"%D",0)
^^2^2^3090604^
"^DD",62,62,21,1,1,"%D",1,0)
This cross reference will sort the entries based on their mapping status
"^DD",62,62,21,1,1,"%D",2,0)
or the SCT designation as to term type.
"^DD",62,62,21,1,1,"DT")
3090604
"^DD",62,62,21,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",62,62,21,12)
Locks field to prevent editing other than by Lab software.
"^DD",62,62,21,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",62,62,21,21,0)
^^9^9^3090608^
"^DD",62,62,21,21,1,0)
This field indicate the status or disposition of this entry.
"^DD",62,62,21,21,2,0)
 P  = SNOMED Preferred term
"^DD",62,62,21,21,3,0)
 S  = SNOMED Synonym term
"^DD",62,62,21,21,4,0)
 L  = Local spelling of a SNOMED term (miss-spelled)
"^DD",62,62,21,21,5,0)
 R  = Referred to national coders to determine if acceptable
"^DD",62,62,21,21,6,0)
 X  = No applicable mapping
"^DD",62,62,21,21,7,0)
 LN = New term pending LEXICON release/update.
"^DD",62,62,21,21,8,0)
 RN = STS Request New Code
"^DD",62,62,21,21,9,0)
 E  = Error encountered when applying STS disposition to file entry. 
"^DD",62,62,21,"DT")
3090605
"^DD",62,62,22,0)
SCT TOP CONCEPT^*P64.061'^LAB(64.061,^SCT;3^S DIC("S")="I $P(^(0),U,11)=""SCT"",$G(DIUTIL)=""VERIFY FIELDS""!$G(LRFMERTS)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",62,62,22,3)
Select the SNOMED Hierarchy associated with this term.
"^DD",62,62,22,12)
Select only SCT Concept terms and prevents editing other than by Lab software
"^DD",62,62,22,12.1)
S DIC("S")="I $P(^(0),U,11)=""SCT"",$G(DIUTIL)=""VERIFY FIELDS""!$G(LRFMERTS)"
"^DD",62,62,22,21,0)
^.001^3^3^3090522^^^^
"^DD",62,62,22,21,1,0)
This field Identifies the SNOMED CT top level concept for this SNOMED
"^DD",62,62,22,21,2,0)
code. This is useful to determine the proper code when the spelling of
"^DD",62,62,22,21,3,0)
the terms are identical but have different concept (meaning).
"^DD",62,62,22,"DT")
3090605
"^DD",62,62,23,0)
SCT STATUS DATE^62.023DA^^SCT1;0
"^DD",62,62,23,21,0)
^^2^2^3090608^
"^DD",62,62,23,21,1,0)
This field track the status of terms referred to the STS team to determine
"^DD",62,62,23,21,2,0)
if this code is a valid VHA SNOMED SCT term.
"^DD",62,62.023,0)
SCT STATUS DATE SUB-FIELD^^3^4
"^DD",62,62.023,0,"DT")
3090612
"^DD",62,62.023,0,"IX","B",62.023,.01)

"^DD",62,62.023,0,"NM","SCT STATUS DATE")

"^DD",62,62.023,0,"UP")
62
"^DD",62,62.023,.01,0)
SCT STATUS DATE^DX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",62,62.023,.01,1,0)
^.1
"^DD",62,62.023,.01,1,1,0)
62.023^B
"^DD",62,62.023,.01,1,1,1)
S ^LAB(62,DA(1),"SCT1","B",$E(X,1,30),DA)=""
"^DD",62,62.023,.01,1,1,2)
K ^LAB(62,DA(1),"SCT1","B",$E(X,1,30),DA)
"^DD",62,62.023,.01,3)
(No range limit on date)
"^DD",62,62.023,.01,21,0)
^.001^2^2^3090605^^^^
"^DD",62,62.023,.01,21,1,0)
This field is used to indicate the date the status was changed.
"^DD",62,62.023,.01,21,2,0)
This field is editable only by the Lab software.
"^DD",62,62.023,.01,"DT")
3090605
"^DD",62,62.023,1,0)
SCT STATUS CHANGED TO^*S^P:PREFERRED TERM;S:SYNONYM;L:LOCAL;R:REFERRED;X:NO APPLICABLE MAPPING;LN:NEW TERM PENDING LEXICON UPDATE;RN:STS REQUEST NEW CODE;E:ERROR;^0;2^Q
"^DD",62,62.023,1,3)
Enter the status of this term's mapping to SNOMED CT.
"^DD",62,62.023,1,12)
Locks field to prevent editing other than by Lab software.
"^DD",62,62.023,1,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFMERTS)"
"^DD",62,62.023,1,"DT")
3090608
"^DD",62,62.023,2,0)
SCT TRANSACTION NUMBER^FX^^0;3^K:$L(X)>45!($L(X)<1) X I $D(X),$G(DIUTIL)'="VERIFY FIELDS",'$G(LRFMERTS) K X
"^DD",62,62.023,2,3)
Answer must be 1-45 characters in length
"^DD",62,62.023,2,21,0)
^^2^2^3090608^
"^DD",62,62.023,2,21,1,0)
Transaction number generated by Laboratory software when referring a term
"^DD",62,62.023,2,21,2,0)
for mediation by STS and mapping to SNOMED CT.
"^DD",62,62.023,2,"DT")
3090608
"^DD",62,62.023,3,0)
SCT STATUS USER^P200'^VA(200,^0;4^Q
"^DD",62,62.023,3,3)
Enter the user who performed the SCT code resolution.
"^DD",62,62.023,3,21,0)
^^2^2^3090612^
"^DD",62,62.023,3,21,1,0)
Store the user who initiated the process to apply the STS SNOMED CT code
"^DD",62,62.023,3,21,2,0)
resolution or the original mapping to this file entry.
"^DD",62,62.023,3,"DT")
3090612
"^DD",62,62.023,4,0)
SCT COMMENT TEXT^62.0231^^1;0
"^DD",62,62.023,4,21,0)
^^4^4^3090608^
"^DD",62,62.023,4,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",62,62.023,4,21,2,0)
The text can relate to information submitted to STS for the term to be
"^DD",62,62.023,4,21,3,0)
mapped, the comments returned by STS related to the mapping and
"^DD",62,62.023,4,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",62,62.023,4,"DT")
3090608
"^DD",62,62.0231,0)
SCT COMMENT TEXT SUB-FIELD^ COMMENT TEXT SUB-FIELD^^.01^1
"^DD",62,62.0231,0,"DT")
3090605
"^DD",62,62.0231,0,"NM","SCT COMMENT TEXT")

"^DD",62,62.0231,0,"UP")
62.023
"^DD",62,62.0231,.01,0)
SCT COMMENT TEXT^WLx^^0;1
"^DD",62,62.0231,.01,3)
Enter the comment that accompanies the STS disposition.
"^DD",62,62.0231,.01,21,0)
^^4^4^3090608^
"^DD",62,62.0231,.01,21,1,0)
Contains text or comments related to the mapping of a term to SNOMED CT.
"^DD",62,62.0231,.01,21,2,0)
The text can relate to information submitted to STS for the term to be
"^DD",62,62.0231,.01,21,3,0)
mapped, the comments returned by STS related to the mapping and
"^DD",62,62.0231,.01,21,4,0)
any comments when attempting to apply the disposition from STS.
"^DD",62,62.0231,.01,"DT")
3090608
"^DD",62.06,62.06,1,0)
DRUG NODE^FX^^0;2^K:X[""""!($A(X)=45) X I $D(X) S X=$P($P(^DD(63.3,$P(^LAB(62.06,DA,0),U,4),0),U,4),";",1)
"^DD",62.06,62.06,1,1,0)
^.1
"^DD",62.06,62.06,1,1,1,0)
62.06^AJ^MUMPS
"^DD",62.06,62.06,1,1,1,1)
D BUGNODE^LRMIXR1
"^DD",62.06,62.06,1,1,1,2)
K ^LAB(62.06,"AJ",+X)
"^DD",62.06,62.06,1,1,2,0)
62.06^AS^MUMPS
"^DD",62.06,62.06,1,1,2,1)
D BUGNODE^LRMIXR2
"^DD",62.06,62.06,1,1,2,2)
K ^LAB(62.06,"AS",+X)
"^DD",62.06,62.06,1,1,3,0)
62.06^AI^MUMPS
"^DD",62.06,62.06,1,1,3,1)
D BUGNODE^LRMIXR3
"^DD",62.06,62.06,1,1,3,2)
K ^LAB(62.06,"AI",+X)
"^DD",62.06,62.06,1,1,4,0)
62.06^AD
"^DD",62.06,62.06,1,1,4,1)
S ^LAB(62.06,"AD",$E(X,1,30),DA)=""
"^DD",62.06,62.06,1,1,4,2)
K ^LAB(62.06,"AD",$E(X,1,30),DA)
"^DD",62.06,62.06,1,1,5,0)
62.06^AG^MUMPS
"^DD",62.06,62.06,1,1,5,1)
D ^LRMIXALL
"^DD",62.06,62.06,1,1,5,2)
D ^LRMIXALL
"^DD",62.06,62.06,1,1,5,"DT")
2940526
"^DD",62.06,62.06,1,3)
STUFFED AUTOMATICALLY
"^DD",62.06,62.06,1,5,1,0)
62.06^5^1
"^DD",62.06,62.06,1,9)
^
"^DD",62.06,62.06,1,21,0)
^^2^2^2870327^^^
"^DD",62.06,62.06,1,21,1,0)
Defines the position of the NAME in the database.
"^DD",62.06,62.06,1,21,2,0)
The subscript location of the antibiotic in the LAB DATA file.
"^DD",62.06,62.06,1,"DT")
2940526
"^DD",62.06,62.06,1.1,0)
AFB DRUG NODE^FX^^0;9^K:$L(X)>15!($L(X)<1) X
"^DD",62.06,62.06,1.1,3)
Answer must be 1-15 characters in length
"^DD",62.06,62.06,1.1,5,1,0)
62.06^5.1^1
"^DD",62.06,62.06,1.1,9)
^
"^DD",62.06,62.06,1.1,21,0)
^^4^4^3051122^
"^DD",62.06,62.06,1.1,21,1,0)
Defines the position of the NAME in the database.
"^DD",62.06,62.06,1.1,21,2,0)
The subscript location of the AFB antibiotic in
"^DD",62.06,62.06,1.1,21,3,0)
the LAB DATA file. 
"^DD",62.06,62.06,1.1,21,4,0)

"^DD",62.06,62.06,1.1,"DT")
3060322
"^DD",62.06,62.06,5,0)
INTERNAL NAME^*P63'XO^DD(63.3,^0;4^S DIC("S")="I Y>2,Y<200,X'[""INTERP"",X'[""SCREEN""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X K:$P(^LAB(62.06,DA,0),U,8) X
"^DD",62.06,62.06,5,1,0)
^.1
"^DD",62.06,62.06,5,1,1,0)
^^TRIGGER^62.06^1
"^DD",62.06,62.06,5,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(62.06,D0,0)):^(0),1:"") S X=$P(Y(1),U,2) S DIU=X K Y X ^DD(62.06,5,1,1,1.1) X ^DD(62.06,5,1,1,1.4)
"^DD",62.06,62.06,5,1,1,1.1)
S X=DIV X $P(^DD(62.06,1,0),U,5,99)
"^DD",62.06,62.06,5,1,1,1.4)
S DIH=$S($D(^LAB(62.06,DIV(0),0)):^(0),1:""),DIV=X S %=$P(DIH,U,3,999),^(0)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=62.06,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",62.06,62.06,5,1,1,2)
Q
"^DD",62.06,62.06,5,1,1,"CREATE VALUE")
X $P(^DD(62.06,1,0),U,5,99)
"^DD",62.06,62.06,5,1,1,"DELETE VALUE")
NO EFFECT
"^DD",62.06,62.06,5,1,1,"FIELD")
BUG PIECE
"^DD",62.06,62.06,5,1,2,0)
62.06^C^MUMPS
"^DD",62.06,62.06,5,1,2,1)
S ^LAB(62.06,"C",$P(^DD(63.3,X,0),U,1),DA)=""
"^DD",62.06,62.06,5,1,2,2)
K ^LAB(62.06,"C",$P(^DD(63.3,X,0),U,1),DA)
"^DD",62.06,62.06,5,2)
S Y(0)=Y S Y=$$GET1^DID(63.3,Y,"","LABEL")
"^DD",62.06,62.06,5,2.1)
S Y=$$GET1^DID(63.3,Y,"","LABEL")
"^DD",62.06,62.06,5,12)
Select on antibiotic names
"^DD",62.06,62.06,5,12.1)
S DIC("S")="I Y>2,Y<200,X'[""INTERP"",X'[""SCREEN"""
"^DD",62.06,62.06,5,21,0)
^^1^1^2870327^^^
"^DD",62.06,62.06,5,21,1,0)
The internally used name of the antibiotic, usually a shortened version.
"^DD",62.06,62.06,5,"DT")
3060322
"^DD",62.06,62.06,5.1,0)
AFB INTERNAL NAME^*P63'XO^DD(63.39,^0;8^S DIC("S")="I $$GET1^DID(63.39,Y,"""",""GLOBAL SUBSCRIPT LOCATION"")?1""2.""1.N1"";1""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X K:$P(^LAB(62.06,DA,0),U,4) X
"^DD",62.06,62.06,5.1,1,0)
^.1
"^DD",62.06,62.06,5.1,1,1,0)
^^TRIGGER^62.06^1.1
"^DD",62.06,62.06,5.1,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(62.06,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y X ^DD(62.06,5.1,1,1,1.1) S DIH=$G(^LAB(62.06,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=62.06,DIG=1.1 D ^DICR
"^DD",62.06,62.06,5.1,1,1,1.1)
S X=DIV S X=$P($$GET1^DID(63.39,$P(^LAB(62.06,DA,0),U,8),"","GLOBAL SUBSCRIPT LOCATION"),";")
"^DD",62.06,62.06,5.1,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(62.06,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(62.06,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=62.06,DIG=1.1 D ^DICR
"^DD",62.06,62.06,5.1,1,1,3)
DO NOT DELETE - used by Lab software to determine NLT/LOINC coding of AFB drugs.
"^DD",62.06,62.06,5.1,1,1,"CREATE VALUE")
S X=$P($$GET1^DID(63.39,$P(^LAB(62.06,DA,0),U,8),"","GLOBAL SUBSCRIPT LOCATION"),";")
"^DD",62.06,62.06,5.1,1,1,"DELETE VALUE")
@
"^DD",62.06,62.06,5.1,1,1,"DT")
3051122
"^DD",62.06,62.06,5.1,1,1,"FIELD")
AFB DRUG NODE
"^DD",62.06,62.06,5.1,2)
S Y(0)=Y S Y=$$GET1^DID(63.39,Y,"","LABEL")
"^DD",62.06,62.06,5.1,2.1)
S Y=$$GET1^DID(63.39,Y,"","LABEL")
"^DD",62.06,62.06,5.1,3)
The internally used name of the AFB antibiotic, usually a shortened version.
"^DD",62.06,62.06,5.1,12)
Select only AFB antibiotic names.
"^DD",62.06,62.06,5.1,12.1)
S DIC("S")="I $$GET1^DID(63.39,Y,"""",""GLOBAL SUBSCRIPT LOCATION"")?1""2.""1.N1"";1"""
"^DD",62.06,62.06,5.1,"DT")
3081010
"^DD",63,63,.01,0)
LRDFN^RNJ11,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",63,63,.01,1,0)
^.1^^-1
"^DD",63,63,.01,1,1,0)
63^B
"^DD",63,63,.01,1,1,1)
S ^LR("B",$E(X,1,30),DA)=""
"^DD",63,63,.01,1,1,2)
K ^LR("B",$E(X,1,30),DA)
"^DD",63,63,.01,1,1,"%D",0)
^^2^2^2930112^
"^DD",63,63,.01,1,1,"%D",1,0)
  The internal file number in the ^LR file. This is commonly known as
"^DD",63,63,.01,1,1,"%D",2,0)
LRDFN variable in LR* routines.
"^DD",63,63,.01,1,1,"DT")
2930112
"^DD",63,63,.01,3)
Enter the application entry number.
"^DD",63,63,.01,21,0)
^.001^1^1^3030904^^^
"^DD",63,63,.01,21,1,0)
The internal file number of the "patient" (or other entity)
"^DD",63,63,.01,"DEL",1,0)
I 1
"^DD",63,63,.01,"DT")
3060317
"^DD",63,63,.12,0)
PRODUCING LABORATORY^63.00012A^^PL;0
"^DD",63,63,.12,21,0)
^^6^6^3110209^
"^DD",63,63,.12,21,1,0)
Contains information related to laboratory results which document legal
"^DD",63,63,.12,21,2,0)
and accreditation required information. It documents the laboratory
"^DD",63,63,.12,21,3,0)
that produces the lab result value (performing laboratory) in 
"^DD",63,63,.12,21,4,0)
addition to other supporting information such as address of the
"^DD",63,63,.12,21,5,0)
performing laboratory and the name/title/identifier of the laboratory
"^DD",63,63,.12,21,6,0)
director of the performing laboratory when required.
"^DD",63,63,.13,0)
EXTERNAL PACKAGE REFERENCE^63.00013A^^EPR;0
"^DD",63,63,.13,21,0)
^^1^1^3081002^
"^DD",63,63,.13,21,1,0)
Stores information related to various external packages which are related to a laboratory specimen.
"^DD",63,63,.13,"DT")
3081002
"^DD",63,63,.14,0)
CODE SYSTEM REFERENCE^63.00014A^^CSR;0
"^DD",63,63,.14,21,0)
^^1^1^3091030^
"^DD",63,63,.14,21,1,0)
Contains codes from various code systems used to encode this data element.
"^DD",63,63,.14,"DT")
3091030
"^DD",63,63,14.91,0)
RELEASING SITE^P4'^DIC(4,^AU;18^Q
"^DD",63,63,14.91,3)
Enter the facility/site that is releasing this autopsy.
"^DD",63,63,14.91,21,0)
^^4^4^3090129^
"^DD",63,63,14.91,21,1,0)
This field indicates the site that released the clinical report. This 
"^DD",63,63,14.91,21,2,0)
field can be used to determine the information required to
"^DD",63,63,14.91,21,3,0)
correctly indicate the address/location of the laboratory
"^DD",63,63,14.91,21,4,0)
responsible for releasing the report.
"^DD",63,63,14.91,"DT")
3090129
"^DD",63,63.00012,0)
PRODUCING LABORATORY SUB-FIELD^^.02^2
"^DD",63,63.00012,0,"DT")
3080407
"^DD",63,63.00012,0,"NM","PRODUCING LABORATORY")

"^DD",63,63.00012,0,"UP")
63
"^DD",63,63.00012,.01,0)
LAB DATA REFERENCE^F^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",63,63.00012,.01,1,0)
^.1^^0
"^DD",63,63.00012,.01,3)
Answer must be 1-60 characters in length
"^DD",63,63.00012,.01,21,0)
^^27^27^3080512^^^
"^DD",63,63.00012,.01,21,1,0)
Contains the global reference in a format similar to a FileMan
"^DD",63,63.00012,.01,21,2,0)
DA array. It resolves to the section of this file which contains
"^DD",63,63.00012,.01,21,3,0)
the results that are related to this producing laboratory.
"^DD",63,63.00012,.01,21,4,0)
 
"^DD",63,63.00012,.01,21,5,0)
It constructed based on the entry's LRDFN, LRSS and LRIDT where
"^DD",63,63.00012,.01,21,6,0)
  LRDFN = internal enter number in file #63
"^DD",63,63.00012,.01,21,7,0)
   LRSS = related subscript
"^DD",63,63.00012,.01,21,8,0)
  LRIDT = inverse date/time of specimen
"^DD",63,63.00012,.01,21,9,0)
 
"^DD",63,63.00012,.01,21,10,0)
Autopsy results being one of a kind are created using a value
"^DD",63,63.00012,.01,21,11,0)
  LRSS="AU" 
"^DD",63,63.00012,.01,21,12,0)
  LRIDT=0
"^DD",63,63.00012,.01,21,13,0)
 to maintain the structure of the entries and related index.
"^DD",63,63.00012,.01,21,14,0)
 
"^DD",63,63.00012,.01,21,15,0)
The structure of the reference is
"^DD",63,63.00012,.01,21,16,0)
 LRDFN,LRSS,LRIDT,1...N related global nodes in the LR global.
"^DD",63,63.00012,.01,21,17,0)
 
"^DD",63,63.00012,.01,21,18,0)
When reference is to a specific field which shares other fields on the
"^DD",63,63.00012,.01,21,19,0)
same node then the format used to distinguish separate fields is 
"^DD",63,63.00012,.01,21,20,0)
node;piece position on node.
"^DD",63,63.00012,.01,21,21,0)

"^DD",63,63.00012,.01,21,22,0)
Example microbiology results within MI subscript
"^DD",63,63.00012,.01,21,23,0)
 - 173,MI,6959788.895648,3,1,0
"^DD",63,63.00012,.01,21,24,0)

"^DD",63,63.00012,.01,21,25,0)
Example microbiology results with MI subscript,
"^DD",63,63.00012,.01,21,26,0)
6th piece of 1 node - 356,MI,6919497.888687,1;6
"^DD",63,63.00012,.01,21,27,0)

"^DD",63,63.00012,.01,"DT")
3080512
"^DD",63,63.00012,.02,0)
INSTITUTION^P4'^DIC(4,^0;2^Q
"^DD",63,63.00012,.02,21,0)
^^3^3^3080407^
"^DD",63,63.00012,.02,21,1,0)
Contains the pointer to the entry in the INSTITUTION file which
"^DD",63,63.00012,.02,21,2,0)
is related to the laboratory which produced the related laboratory
"^DD",63,63.00012,.02,21,3,0)
results.
"^DD",63,63.00012,.02,"DT")
3080407
"^DD",63,63.00013,0)
EXTERNAL PACKAGE REFERENCE SUB-FIELD^^1^4
"^DD",63,63.00013,0,"DT")
3100412
"^DD",63,63.00013,0,"NM","EXTERNAL PACKAGE REFERENCE")

"^DD",63,63.00013,0,"UP")
63
"^DD",63,63.00013,.01,0)
LAB DATA REFERENCE^F^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",63,63.00013,.01,1,0)
^.1^^0
"^DD",63,63.00013,.01,3)
Answer must be 1-60 characters in length
"^DD",63,63.00013,.01,21,0)
^^15^15^3090402^
"^DD",63,63.00013,.01,21,1,0)
Contains the global reference in a format similar to a FileMan DA array. 
"^DD",63,63.00013,.01,21,2,0)
It resolves to the section of this file which contains the results that 
"^DD",63,63.00013,.01,21,3,0)
are related to this reference.
"^DD",63,63.00013,.01,21,4,0)
 
"^DD",63,63.00013,.01,21,5,0)
It constructed based on the entry's LRDFN, LRSS and LRIDT where   LRDFN = internal enter number in file #63    LRSS = related subscript   LRIDT = inverse date/time of specimen
"^DD",63,63.00013,.01,21,6,0)
 
"^DD",63,63.00013,.01,21,7,0)
Autopsy results being one of a kind are created using a value   LRSS="AU"   LRIDT=0  to maintain the structure of the entries and related index.
"^DD",63,63.00013,.01,21,8,0)
 
"^DD",63,63.00013,.01,21,9,0)
The structure of the reference is  LRDFN,LRSS,LRIDT,1...N related global nodes in the LR global.
"^DD",63,63.00013,.01,21,10,0)
 
"^DD",63,63.00013,.01,21,11,0)
When reference is to a specific field which shares other fields on the same node then the format used to distinguish separate fields is node;piece position on node.
"^DD",63,63.00013,.01,21,12,0)
 
"^DD",63,63.00013,.01,21,13,0)
Example microbiology results within MI subscript  - 173,MI,6959788.895648,3,1,0
"^DD",63,63.00013,.01,21,14,0)
 
"^DD",63,63.00013,.01,21,15,0)
Example microbiology results with MI subscript, 6th piece of 1 node - 356,MI,6919497.888687,1;6
"^DD",63,63.00013,.01,"DT")
3090402
"^DD",63,63.00013,.02,0)
TYPE OF REFERENCE^S^1:SURGICAL CASE;2:IMAGING RECORD;3:PLACER ORDER NUMBER;4:FILLER ORDER NUMBER;^0;2^Q
"^DD",63,63.00013,.02,3)
Enter the type of reference.
"^DD",63,63.00013,.02,21,0)
^^19^19^3100412^
"^DD",63,63.00013,.02,21,1,0)
Stores various references to external data that is related to this
"^DD",63,63.00013,.02,21,2,0)
laboratory specimen/order/result.
"^DD",63,63.00013,.02,21,3,0)
 
"^DD",63,63.00013,.02,21,4,0)
This field indicates the type/source of the package reference being stored
"^DD",63,63.00013,.02,21,5,0)
in the REFERENCE field (#1).
"^DD",63,63.00013,.02,21,6,0)
 
"^DD",63,63.00013,.02,21,7,0)
Examples can be:
"^DD",63,63.00013,.02,21,8,0)
 
"^DD",63,63.00013,.02,21,9,0)
1 - Imaging when there are associated images or other binary documents.
"^DD",63,63.00013,.02,21,10,0)
 
"^DD",63,63.00013,.02,21,11,0)
2 - Surgery when there is a related surgical case and a linkage needs to
"^DD",63,63.00013,.02,21,12,0)
    be recorded between the surgical operative report and the laboratory
"^DD",63,63.00013,.02,21,13,0)
    surgical pathology, cytology, or other laboratory report.
"^DD",63,63.00013,.02,21,14,0)
 
"^DD",63,63.00013,.02,21,15,0)
3 - Placer order number when the order was received from an external
"^DD",63,63.00013,.02,21,16,0)
    system and a reference/linkage needs to be maintained with the system.
"^DD",63,63.00013,.02,21,17,0)
 
"^DD",63,63.00013,.02,21,18,0)
4 - Filler order number when the order was fulfilled by an external
"^DD",63,63.00013,.02,21,19,0)
    system and a reference/linkage needs to be maintained to this system.
"^DD",63,63.00013,.02,"DT")
3100412
"^DD",63,63.00013,.03,0)
FILE REFERENCE^V^^0;3^
"^DD",63,63.00013,.03,3)
Enter the related file entry to this reference if any.
"^DD",63,63.00013,.03,21,0)
^^2^2^3100412^
"^DD",63,63.00013,.03,21,1,0)
If the type of external reference stored is one which the laboratory package can establish a pointed-to file relationship then the pointer to that file can be stored here. Examples are pointing to the IMAGING file (#2005) or INSTITUTION file
"^DD",63,63.00013,.03,21,2,0)
(#4). It can be used in conjunction with type #3/4 when storing an order number and in addition to the order number the institution related to the external order number can also be specified.
"^DD",63,63.00013,.03,"DT")
3100412
"^DD",63,63.00013,.03,"V",0)
^.12P^^1
"^DD",63,63.00013,.03,"V",1,0)
4^Select INSITUTION:^1^FAC:^n^n
"^DD",63,63.00013,1,0)
REFERENCE^F^^1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",63,63.00013,1,3)
Answer must be 1-245 characters in length
"^DD",63,63.00013,1,21,0)
^^14^14^3100412^
"^DD",63,63.00013,1,21,1,0)
Stores the actual reference related to the external system.  Format is
"^DD",63,63.00013,1,21,2,0)
based on the type and handled via software.
"^DD",63,63.00013,1,21,3,0)
 
"^DD",63,63.00013,1,21,4,0)
If type=imaging then the reference provided by the Imaging package will be
"^DD",63,63.00013,1,21,5,0)
recorded.
"^DD",63,63.00013,1,21,6,0)
 
"^DD",63,63.00013,1,21,7,0)
If type=surgery then the Surgical Case # or reference to the Surgery
"^DD",63,63.00013,1,21,8,0)
Package.
"^DD",63,63.00013,1,21,9,0)
 
"^DD",63,63.00013,1,21,10,0)
If type=placer order then the order identifier received from the placer of
"^DD",63,63.00013,1,21,11,0)
the order.
"^DD",63,63.00013,1,21,12,0)
 
"^DD",63,63.00013,1,21,13,0)
If type=filler order then the filler identifier received from the filler
"^DD",63,63.00013,1,21,14,0)
of the order.
"^DD",63,63.00013,1,23,0)
^^3^3^3100412^^
"^DD",63,63.00013,1,23,1,0)
Data in this field is stored by position, not piece, and therefore uses
"^DD",63,63.00013,1,23,2,0)
extract storage. This allows FileMan to support a reference which contains
"^DD",63,63.00013,1,23,3,0)
embedded caret characters and store in it's actual form.
"^DD",63,63.00013,1,"DT")
3100412
"^DD",63,63.00014,0)
CODE SYSTEM REFERENCE SUB-FIELD^^.035^7
"^DD",63,63.00014,0,"DT")
3091103
"^DD",63,63.00014,0,"NM","CODE SYSTEM REFERENCE")

"^DD",63,63.00014,0,"UP")
63
"^DD",63,63.00014,.01,0)
LAB DATA REFERENCE^F^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",63,63.00014,.01,1,0)
^.1^^0
"^DD",63,63.00014,.01,3)
Answer must be 1-60 characters in length
"^DD",63,63.00014,.01,21,0)
^^18^18^3091102^
"^DD",63,63.00014,.01,21,1,0)
Contains the global reference in a format similar to a FileMan DA array. 
"^DD",63,63.00014,.01,21,2,0)
It resolves to the section of this file which contains the results that are related to this reference.
"^DD",63,63.00014,.01,21,3,0)
 
"^DD",63,63.00014,.01,21,4,0)
It constructed based on the entry's LRDFN, LRSS and LRIDT where LRDFN = 
"^DD",63,63.00014,.01,21,5,0)
internal enter number in file #63 , LRSS = related subscript   LRIDT =
"^DD",63,63.00014,.01,21,6,0)
inverse date/time of specimen
"^DD",63,63.00014,.01,21,7,0)
 
"^DD",63,63.00014,.01,21,8,0)
Autopsy results being one of a kind are created using a value LRSS="AU"   LRIDT=0  to maintain the structure of the entries and
"^DD",63,63.00014,.01,21,9,0)
related index.
"^DD",63,63.00014,.01,21,10,0)
 
"^DD",63,63.00014,.01,21,11,0)
The structure of the reference is  LRDFN,LRSS,LRIDT,1...N related global nodes in the LR global.
"^DD",63,63.00014,.01,21,12,0)
 
"^DD",63,63.00014,.01,21,13,0)
When reference is to a specific field which shares other fields on the same node then the format used to distinguish separate
"^DD",63,63.00014,.01,21,14,0)
fields is node;piece position on node.
"^DD",63,63.00014,.01,21,15,0)
 
"^DD",63,63.00014,.01,21,16,0)
Example microbiology results within MI subscript  - 173,MI,6959788.895648,3,1,0
"^DD",63,63.00014,.01,21,17,0)
 
"^DD",63,63.00014,.01,21,18,0)
Example microbiology results with MI subscript, 6th piece of 1 node - 356,MI,6919497.888687,1;6
"^DD",63,63.00014,.01,"DT")
3091102
"^DD",63,63.00014,.02,0)
ROLE^S^1:ORDER;2:RESULT;3:ANSWER;4:METHODOLOGY;5:WORKLOAD;6:BILLING;^0;2^Q
"^DD",63,63.00014,.02,3)
Enter the role that this code is used to express.
"^DD",63,63.00014,.02,"DT")
3091102
"^DD",63,63.00014,.03,0)
CODE ID^F^^0;3^K:$L(X)>25!($L(X)<1) X
"^DD",63,63.00014,.03,3)
Answer must be 1-25 characters in length
"^DD",63,63.00014,.03,21,0)
^^1^1^3091102^
"^DD",63,63.00014,.03,21,1,0)
The code id value from the code system being stored.
"^DD",63,63.00014,.03,"DT")
3091102
"^DD",63,63.00014,.035,0)
CODE TEXT^F^^1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",63,63.00014,.035,3)
Answer must be 1-245 characters in length
"^DD",63,63.00014,.035,21,0)
^^1^1^3091103^
"^DD",63,63.00014,.035,21,1,0)
Contains the text associated with the CODE ID.
"^DD",63,63.00014,.035,23,0)
^^3^3^3091103^
"^DD",63,63.00014,.035,23,1,0)
Data in this field is stored by position, not piece, and therefore uses 
"^DD",63,63.00014,.035,23,2,0)
extract storage. This allows FileMan to support a code text which contains
"^DD",63,63.00014,.035,23,3,0)
embedded caret characters and store in it's actual form.
"^DD",63,63.00014,.035,"DT")
3091103
"^DD",63,63.00014,.04,0)
NAME OF CODE SYSTEM^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.00014,.04,3)
Answer must be 1-30 characters in length
"^DD",63,63.00014,.04,21,0)
^^2^2^3091102^
"^DD",63,63.00014,.04,21,1,0)
Contains the code system name or designated abbreviation used to identify 
"^DD",63,63.00014,.04,21,2,0)
the CODE ID.
"^DD",63,63.00014,.04,"DT")
3091102
"^DD",63,63.00014,.05,0)
CODE VERSION^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.00014,.05,3)
Answer must be 1-20 characters in length
"^DD",63,63.00014,.05,21,0)
^^1^1^3091102^
"^DD",63,63.00014,.05,21,1,0)
This is the version ID for the coding system identified by CODE ID.
"^DD",63,63.00014,.05,"DT")
3091102
"^DD",63,63.00014,.06,0)
RELATED ENTRY^V^^0;6^
"^DD",63,63.00014,.06,3)
Enter the related file entry to this reference if any.
"^DD",63,63.00014,.06,21,0)
^^4^4^3091102^
"^DD",63,63.00014,.06,21,1,0)
If the associated code exists in a VistA file then this field will 
"^DD",63,63.00014,.06,21,2,0)
contain a link to the related entry. This field can be blank if the code 
"^DD",63,63.00014,.06,21,3,0)
system does not exist in a related VistA file or the code is contained in 
"^DD",63,63.00014,.06,21,4,0)
a version not supported by a related VistA file.
"^DD",63,63.00014,.06,"DT")
3091102
"^DD",63,63.00014,.06,"V",0)
^.12P^^3
"^DD",63,63.00014,.06,"V",1,0)
95.3^Select LOINC code^1^LN^n^n
"^DD",63,63.00014,.06,"V",1,1)

"^DD",63,63.00014,.06,"V",1,2)

"^DD",63,63.00014,.06,"V",2,0)
64^Select NLT code^2^NLT^n^n
"^DD",63,63.00014,.06,"V",2,1)

"^DD",63,63.00014,.06,"V",2,2)

"^DD",63,63.00014,.06,"V",3,0)
81^Select CPT code^3^CPT^n^n
"^DD",63,63.00014,.06,"V",3,1)

"^DD",63,63.00014,.06,"V",3,2)

"^DD",63,63.02,.31,0)
UID^F^^ORU;1^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.02,.31,3)
Answer must be 10-20 characters in length
"^DD",63,63.02,.31,21,0)
^^3^3^3051122^
"^DD",63,63.02,.31,21,1,0)
This is the UID used by the HOST LEDI system for this order/accession.
"^DD",63,63.02,.31,21,2,0)
 
"^DD",63,63.02,.31,21,3,0)
This field is used by LEDI software.
"^DD",63,63.02,.31,"DT")
3051122
"^DD",63,63.02,.32,0)
ORDERING SITE^P4'^DIC(4,^ORU;2^Q
"^DD",63,63.02,.32,3)
Enter the site ordering the test.
"^DD",63,63.02,.32,21,0)
^^5^5^3051122^^
"^DD",63,63.02,.32,21,1,0)
This field contains the pointer to the INSTITUTION file for the MailMan domain location of the computer system.  All LEDI results are returned to the Ordering computer system.
"^DD",63,63.02,.32,21,2,0)
 
"^DD",63,63.02,.32,21,3,0)
Location to send LEDI HL7 result messages.
"^DD",63,63.02,.32,21,4,0)
 
"^DD",63,63.02,.32,21,5,0)
 This field is used by LEDI software.
"^DD",63,63.02,.32,"DT")
3051122
"^DD",63,63.02,.33,0)
COLLECTING SITE^P4'^DIC(4,^ORU;3^Q
"^DD",63,63.02,.33,21,0)
^^3^3^3051122^
"^DD",63,63.02,.33,21,1,0)
This field contains the pointer to the INSTITUTION file for the actual collection site.  The ordering site is the MailMan location of the computer system.  MailMan domain location and the collecting site may be different.
"^DD",63,63.02,.33,21,2,0)
 
"^DD",63,63.02,.33,21,3,0)
This field is used by LEDI software.
"^DD",63,63.02,.33,"DT")
3051122
"^DD",63,63.02,.34,0)
HOST UID^F^^ORU;4^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.02,.34,3)
Answer must be 10-20 characters in length
"^DD",63,63.02,.34,21,0)
^^4^4^3051122^
"^DD",63,63.02,.34,21,1,0)
Each Order/Accession is given a HOST UID.  The UID is stored in this location.  If LEDI software is used to accession specimens, usually the collecting site's UID is used to track specimens.  If the collecting UID conflicts with the HOST system
"^DD",63,63.02,.34,21,2,0)
number sequence, the HOST UID will be used instead of the collecting site's UID.
"^DD",63,63.02,.34,21,3,0)
 
"^DD",63,63.02,.34,21,4,0)
This field is used by LEDI software.
"^DD",63,63.02,.34,"DT")
3051122
"^DD",63,63.02,.342,0)
ORDERING SITE UID^F^^ORU;5^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.02,.342,3)
Answer must be 10-20 characters in length
"^DD",63,63.02,.342,21,0)
^^3^3^3051122^^
"^DD",63,63.02,.342,21,1,0)
This field contains the collecting site's UID for this specimen.
"^DD",63,63.02,.342,21,2,0)
 
"^DD",63,63.02,.342,21,3,0)
This field is used by LEDI software.
"^DD",63,63.02,.342,"DT")
3051122
"^DD",63,63.02,.345,0)
RELEASING SITE^P4'^DIC(4,^RF;1^Q
"^DD",63,63.02,.345,3)
Enter the facility/site that is releasing this report.
"^DD",63,63.02,.345,21,0)
^^4^4^3090129^^
"^DD",63,63.02,.345,21,1,0)
This field indicates the site that released the clinical report.  This
"^DD",63,63.02,.345,21,2,0)
field can be used to determine the information required to correctly
"^DD",63,63.02,.345,21,3,0)
indicate the address/location of the laboratory responsible for 
"^DD",63,63.02,.345,21,4,0)
releasing the report.
"^DD",63,63.02,.345,"DT")
3090129
"^DD",63,63.02,.35,0)
ORDERED TEST^63.52A^^ORUT;0
"^DD",63,63.02,.35,21,0)
^.001^5^5^3071005^^^^
"^DD",63,63.02,.35,21,1,0)
This subfile contains information about the ordered test(s) for this 
"^DD",63,63.02,.35,21,2,0)
accession.  The .01 field contains the ordered test NLT code
"^DD",63,63.02,.35,21,3,0)
requested by the clinical provider.  If this test is a panel, all
"^DD",63,63.02,.35,21,4,0)
atomic tests within the panel will be associated with the ordered
"^DD",63,63.02,.35,21,5,0)
test using this NLT code.
"^DD",63,63.04,.345,0)
RELEASING SITE^P4'^DIC(4,^RF;1^Q
"^DD",63,63.04,.345,3)
Enter the facility/site that is releasing this report.
"^DD",63,63.04,.345,21,0)
^^4^4^3090129^
"^DD",63,63.04,.345,21,1,0)
This field indicates the site that released the clinical report. This 
"^DD",63,63.04,.345,21,2,0)
field can be used to determine the information required to correctly 
"^DD",63,63.04,.345,21,3,0)
indicate the address/location of the laboratory responsible for releasing
"^DD",63,63.04,.345,21,4,0)
the report.
"^DD",63,63.04,.345,"DT")
3090129
"^DD",63,63.04,.35,0)
ORDERED TEST^63.07A^^ORUT;0
"^DD",63,63.04,.35,21,0)
^.001^5^5^3071005^^^^
"^DD",63,63.04,.35,21,1,0)
This subfile contains information about the ordered test(s) for this 
"^DD",63,63.04,.35,21,2,0)
accession. 
"^DD",63,63.04,.35,21,3,0)
 The .01 field contains the ordered test NLT code requested by the
"^DD",63,63.04,.35,21,4,0)
clinical provider. If this test is a panel, all atomic tests within the
"^DD",63,63.04,.35,21,5,0)
panel will be associated with the ordered test using this NLT code.
"^DD",63,63.05,.31,0)
UID^F^^ORU;1^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.05,.31,3)
Answer must be 10-20 characters in length.
"^DD",63,63.05,.31,21,0)
^.001^5^5^3051129^^^^
"^DD",63,63.05,.31,21,1,0)
This is the UID used by the HOST LEDI system for this order/accession.
"^DD",63,63.05,.31,21,2,0)

"^DD",63,63.05,.31,21,3,0)
This field is used by LEDI software.
"^DD",63,63.05,.31,21,4,0)

"^DD",63,63.05,.31,21,5,0)

"^DD",63,63.05,.31,"DT")
3051128
"^DD",63,63.05,.32,0)
ORDERING SITE^P4'^DIC(4,^ORU;2^Q
"^DD",63,63.05,.32,3)
Enter the site ordering the test.
"^DD",63,63.05,.32,21,0)
^.001^8^8^3051129^^^^
"^DD",63,63.05,.32,21,1,0)
This field contains the pointer to the INSTITUTION file for the Mailman
"^DD",63,63.05,.32,21,2,0)
domain location of the computer system. All LEDI results are returned to
"^DD",63,63.05,.32,21,3,0)
the Ordering computer system.
"^DD",63,63.05,.32,21,4,0)
 
"^DD",63,63.05,.32,21,5,0)
Location to send LEDI HL7 result messages.
"^DD",63,63.05,.32,21,6,0)
 
"^DD",63,63.05,.32,21,7,0)
This field is used by LEDI software.
"^DD",63,63.05,.32,21,8,0)

"^DD",63,63.05,.32,"DT")
3040820
"^DD",63,63.05,.33,0)
COLLECTING SITE^P4'^DIC(4,^ORU;3^Q
"^DD",63,63.05,.33,3)
Enter the collecting site.
"^DD",63,63.05,.33,21,0)
^.001^7^7^3051128^^
"^DD",63,63.05,.33,21,1,0)
This field contains the pointer to the INSTITUTION file for the actual
"^DD",63,63.05,.33,21,2,0)
collection site. The ordering site is the MailMan location for the
"^DD",63,63.05,.33,21,3,0)
computer system. MailMan domain location and the collecting site may be
"^DD",63,63.05,.33,21,4,0)
different.
"^DD",63,63.05,.33,21,5,0)
 
"^DD",63,63.05,.33,21,6,0)
This field is used by LEDI.
"^DD",63,63.05,.33,21,7,0)

"^DD",63,63.05,.33,"DT")
3051128
"^DD",63,63.05,.34,0)
HOST UID^F^^ORU;4^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.05,.34,3)
Answer must be 10-20 characters in length.
"^DD",63,63.05,.34,21,0)
^.001^8^8^3051128^^
"^DD",63,63.05,.34,21,1,0)
Each order/accession is given a HOST UID. The UID is stored in this
"^DD",63,63.05,.34,21,2,0)
location. If LEDI software is used to accession specimens, usually the
"^DD",63,63.05,.34,21,3,0)
collecting sites UID is used to track specimens. If the collecting UID
"^DD",63,63.05,.34,21,4,0)
conflicts with the HOST system number sequence, the HOST UID will be used
"^DD",63,63.05,.34,21,5,0)
instead of the collecting site's UID.
"^DD",63,63.05,.34,21,6,0)
 
"^DD",63,63.05,.34,21,7,0)
This field is used by LEDI software.
"^DD",63,63.05,.34,21,8,0)

"^DD",63,63.05,.34,"DT")
3051128
"^DD",63,63.05,.342,0)
ORDERING SITE UID^F^^ORU;5^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.05,.342,3)
Answer must be 10-20 characters in length.
"^DD",63,63.05,.342,21,0)
^.001^4^4^3051129^^^
"^DD",63,63.05,.342,21,1,0)
This field contains the collecting sites UID for this specimen.
"^DD",63,63.05,.342,21,2,0)
 
"^DD",63,63.05,.342,21,3,0)
This field is used by LEDI software.
"^DD",63,63.05,.342,21,4,0)

"^DD",63,63.05,.342,"DT")
3051128
"^DD",63,63.05,.345,0)
RELEASING SITE^P4'^DIC(4,^RF;1^Q
"^DD",63,63.05,.345,3)
Enter the facility/site that is releasing this report.
"^DD",63,63.05,.345,21,0)
^^3^3^3090129^
"^DD",63,63.05,.345,21,1,0)
This field indicates the site that released the clinical report.  This field
"^DD",63,63.05,.345,21,2,0)
can be used to determine the information required to correctly indicate the
"^DD",63,63.05,.345,21,3,0)
address/location of the laboratory responsible for releasing the report.
"^DD",63,63.05,.345,"DT")
3090129
"^DD",63,63.05,.35,0)
ORDERED TEST^63.5A^^ORUT;0
"^DD",63,63.05,.35,21,0)
^.001^6^6^3071005^^^^
"^DD",63,63.05,.35,21,1,0)
This subfile contains information about the ordered test(s) for this accession. 
"^DD",63,63.05,.35,21,2,0)
The .01  field contains the ordered test NLT code requested by the clinical
"^DD",63,63.05,.35,21,3,0)
provider.  If this test is a panel, all atomic tests within the panel will be
"^DD",63,63.05,.35,21,4,0)
associated with the ordered test using this NLT code.
"^DD",63,63.05,.35,21,5,0)

"^DD",63,63.05,.35,21,6,0)

"^DD",63,63.05,12,0)
ORGANISM^63.3PA^^3;0
"^DD",63,63.05,12,12)
DISPLAY ONLY BACTERIA, FUNGI, OR MYCOBACTERIA
"^DD",63,63.05,12,12.1)
S DIC("S")="I ""PVRBFM""[$P(^(0),U,5)"
"^DD",63,63.05,12,21,0)
^.001^1^1^3060928^^^^
"^DD",63,63.05,12,21,1,0)
These are the organisms reported on this specimen.
"^DD",63,63.05,12,"DT")
2911203
"^DD",63,63.05,16,0)
PARASITE^63.34PA^^6;0
"^DD",63,63.05,16,12)
ONLY ALLOW PARASITES TO BE SELECTED
"^DD",63,63.05,16,12.1)
S DIC("S")="I $P(^(0),U,5)=""P"""
"^DD",63,63.05,16,21,0)
^.001^1^1^3060928^^^^
"^DD",63,63.05,16,21,1,0)
These are the parasites reported on this specimen.
"^DD",63,63.05,20,0)
FUNGUS/YEAST^63.37PA^^9;0
"^DD",63,63.05,20,12)
ALLOW ONLY FUNGI TO BE EDITED
"^DD",63,63.05,20,12.1)
S DIC("S")="I $P(^(0),U,5)=""F"""
"^DD",63,63.05,20,21,0)
^.001^1^1^3070803^^^^
"^DD",63,63.05,20,21,1,0)
These are the fungus/yeast reported on this specimen.
"^DD",63,63.05,26,0)
MYCOBACTERIUM^63.39PA^^12;0
"^DD",63,63.05,26,12)
ALLOW ONLY MYCOBACTERIUM TO BE EDITED
"^DD",63,63.05,26,12.1)
S DIC("S")="I $P(^(0),U,5)=""M"""
"^DD",63,63.05,26,21,0)
2^.001^2^2^3060928^^^^
"^DD",63,63.05,26,21,1,0)
These are the mycobacterium identified with this
"^DD",63,63.05,26,21,2,0)
specimen.
"^DD",63,63.05,36,0)
VIRUS^63.43PA^^17;0
"^DD",63,63.05,36,12)
ALLOW ONLY VIRUS OR RICKETTSIAE
"^DD",63,63.05,36,12.1)
S DIC("S")="I $P(^(0),U,5)=""V""!($P(^(0),U,5)=""R"")"
"^DD",63,63.05,36,21,0)
^.001^1^1^3060928^^^^
"^DD",63,63.05,36,21,1,0)
These are the viruses reported on this specimen.
"^DD",63,63.05,39,0)
MICROBIOLOGY AUDIT^63.539DA^^32;0
"^DD",63,63.05,39,21,0)
^.001^2^2^3070910^^^^
"^DD",63,63.05,39,21,1,0)
The microbiology audit file contains audit data for a given test on an
"^DD",63,63.05,39,21,2,0)
accession.
"^DD",63,63.05,39,23,0)
^.001^22^22^3070910^^^^
"^DD",63,63.05,39,23,1,0)
Originally introduced by LR*5.2*216, which at this time is under 
"^DD",63,63.05,39,23,2,0)
development.  This field was added by LR*5.2*350 and only some of the 
"^DD",63,63.05,39,23,3,0)
initial LR*216 fields are populated by LR*350.
"^DD",63,63.05,39,23,4,0)
 
"^DD",63,63.05,39,23,5,0)
Original DD definition:
"^DD",63,63.05,39,23,6,0)
.01          MICROBIOLOGY AUDIT   [0;1] [D]
"^DD",63,63.05,39,23,7,0)
  1            LREDIT   [0;2] [RD]
"^DD",63,63.05,39,23,8,0)
  2            LAB TECH   [0;3] [RP200']
"^DD",63,63.05,39,23,9,0)
  3            EDIT TYPE   [0;4] [RS]
"^DD",63,63.05,39,23,10,0)
  4            EDIT JUSTIFICATION   [0;5] [RF]
"^DD",63,63.05,39,23,11,0)
  5            NP JUSTIFICATION   [6;0] [63.5395PA]  <-Mult
"^DD",63,63.05,39,23,12,0)
  6            LAB AREA   [1;2] [S]
"^DD",63,63.05,39,23,13,0)
  7            FACILITY   [1;3] [RP4']
"^DD",63,63.05,39,23,14,0)
  8            ALERT ID   [1;4] [F]
"^DD",63,63.05,39,23,15,0)
  9            ALERT EXPIRATION   [1;5] [NJ3,0]
"^DD",63,63.05,39,23,16,0)
  10           EDITS   [2;0] [63.549A]    <-Mult
"^DD",63,63.05,39,23,17,0)
  11           REPORT   [3;0] [63.53911]  <-Mult
"^DD",63,63.05,39,23,18,0)
  12           ALERT RECIPIENTS   [4;1] [F]
"^DD",63,63.05,39,23,19,0)
  13           VALIDATION DATE   [5;1] [D]
"^DD",63,63.05,39,23,20,0)
  14           TEST   [5;2] [P60']
"^DD",63,63.05,39,23,21,0)
  15           ALERT STATUS   [7;1] [S]
"^DD",63,63.05,39,23,22,0)
  16           ALERT MESSAGE   [7;2] [F]
"^DD",63,63.07,0)
ORDERED TEST SUB-FIELD^^15^15
"^DD",63,63.07,0,"DT")
3071005
"^DD",63,63.07,0,"IX","B",63.07,.01)

"^DD",63,63.07,0,"NM","ORDERED TEST")

"^DD",63,63.07,0,"UP")
63.04
"^DD",63,63.07,.01,0)
ORDERED TEST^FO^^0;1^K:$L(X)>15!($L(X)<5) X
"^DD",63,63.07,.01,1,0)
^.1
"^DD",63,63.07,.01,1,1,0)
63.07^B
"^DD",63,63.07,.01,1,1,1)
S ^LR(DA(2),"CH",DA(1),"ORUT","B",$E(X,1,30),DA)=""
"^DD",63,63.07,.01,1,1,2)
K ^LR(DA(2),"CH",DA(1),"ORUT","B",$E(X,1,30),DA)
"^DD",63,63.07,.01,2)
S Y(0)=Y N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.07,.01,2.1)
N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.07,.01,3)
Answer must be 5-15 characters in length.
"^DD",63,63.07,.01,21,0)
^^3^3^3070803^
"^DD",63,63.07,.01,21,1,0)
Contains the ordered test NLT code requested by the clinical provider. If
"^DD",63,63.07,.01,21,2,0)
this test is a panel, all atomic tests within the panel will be associated
"^DD",63,63.07,.01,21,3,0)
with the ordered test using this NLT code.
"^DD",63,63.07,.01,"DT")
3051110
"^DD",63,63.07,2,0)
ORDERED URGENCY^*P62.05'^LAB(62.05,^0;2^S DIC("S")="I +Y<50" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",63,63.07,2,3)
Select urgency for this test
"^DD",63,63.07,2,12)
Prevent selection of WKLD designated urgencies
"^DD",63,63.07,2,12.1)
S DIC("S")="I +Y<50"
"^DD",63,63.07,2,21,0)
^^1^1^3051108^
"^DD",63,63.07,2,21,1,0)
This field contains the urgency for this ordered test.
"^DD",63,63.07,2,"DT")
3051108
"^DD",63,63.07,3,0)
CPRS ORDER #^P100'^OR(100,^0;3^Q
"^DD",63,63.07,3,21,0)
^^2^2^3051108^
"^DD",63,63.07,3,21,1,0)
This field contains the pointer to CPRS ORDER (#100) file. This field is 
"^DD",63,63.07,3,21,2,0)
only populated when the original order is placed on the local system.
"^DD",63,63.07,3,"DT")
3051108
"^DD",63,63.07,4,0)
LAB ORDER #^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.07,4,3)
Answer must be 1-20 characters in length
"^DD",63,63.07,4,21,0)
^^3^3^3051108^
"^DD",63,63.07,4,21,1,0)
This field contains the LAB ORDER number for this test. The construct of 
"^DD",63,63.07,4,21,2,0)
this free text field is:
"^DD",63,63.07,4,21,3,0)
LR-Lab order number-XXXX - where XXXX is the Julian date.
"^DD",63,63.07,4,"DT")
3051108
"^DD",63,63.07,5,0)
ORDER TYPE^*P64.061'^LAB(64.061,^0;5^S DIC("S")="I $P(^(0),U,5)=""0065""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",63,63.07,5,3)
Select entry from HL7 table 0065
"^DD",63,63.07,5,12)
Select entries for the HL7 table 0065
"^DD",63,63.07,5,12.1)
S DIC("S")="I $P(^(0),U,5)=""0065"""
"^DD",63,63.07,5,21,0)
^^4^4^3051109^
"^DD",63,63.07,5,21,1,0)
This field contains information about how how the test order was 
"^DD",63,63.07,5,21,2,0)
generated. The selection must be made from HL7 Table 0065 entries.
"^DD",63,63.07,5,21,3,0)
This field indicates if the ordered test was part of the original order, 
"^DD",63,63.07,5,21,4,0)
an add-on or reflexed per clinical protocol.
"^DD",63,63.07,5,"DT")
3051109
"^DD",63,63.07,6,0)
ORDERING PROVIDER LOCAL^P200'^VA(200,^0;6^Q
"^DD",63,63.07,6,21,0)
^^2^2^3051108^
"^DD",63,63.07,6,21,1,0)
The pointer to the NEW PERSON file if the original order was placed on 
"^DD",63,63.07,6,21,2,0)
the local system. This field will be empty if order is placed via LEDI.
"^DD",63,63.07,6,"DT")
3051108
"^DD",63,63.07,7,0)
ORDERING PROVIDER REMOTE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",63,63.07,7,3)
Answer must be 1-80 characters in length
"^DD",63,63.07,7,21,0)
^^3^3^3051108^
"^DD",63,63.07,7,21,1,0)
If this test is ordered by a provider from a remote system (not local 
"^DD",63,63.07,7,21,2,0)
system); the names contained in the HL7 message will be stored in this 
"^DD",63,63.07,7,21,3,0)
field.
"^DD",63,63.07,7,"DT")
3051108
"^DD",63,63.07,8,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;8^Q
"^DD",63,63.07,8,21,0)
^^1^1^3051108^
"^DD",63,63.07,8,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.07,8,"DT")
3051108
"^DD",63,63.07,9,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",63,63.07,9,21,0)
^^1^1^3051108^
"^DD",63,63.07,9,21,1,0)
This field contains the collection sample for this test.
"^DD",63,63.07,9,"DT")
3051108
"^DD",63,63.07,10,0)
DISPOSITION^*P64.061'^LAB(64.061,^0;10^I $P(^(0),U,5)="0123" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.07,10,3)
Enter the disposition of this ordered test.
"^DD",63,63.07,10,12)
Select disposition based on HL7 Table 0123 status codes
"^DD",63,63.07,10,12.1)
I $P(^(0),U,5)="0123"
"^DD",63,63.07,10,21,0)
^.001^1^1^3071005^^^^
"^DD",63,63.07,10,21,1,0)
Maintains the disposition of the ordered test. It will be used to value the test disposition in HL7 messaging, specifically OBR-25.
"^DD",63,63.07,10,"DT")
3071005
"^DD",63,63.07,11,0)
DISPOSITION DATE/TIME^D^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.07,11,3)
Enter the date and time this test is dispositioned.
"^DD",63,63.07,11,21,0)
^.001^1^1^3071005^^^^
"^DD",63,63.07,11,21,1,0)
Stores the date and time that a lab user or the system dispositioned this test.
"^DD",63,63.07,11,"DT")
3071005
"^DD",63,63.07,12,0)
DISPOSITION BY^P200'^VA(200,^0;12^Q
"^DD",63,63.07,12,3)
User who dispositioned this test/
"^DD",63,63.07,12,21,0)
^.001^1^1^3071005^^^^
"^DD",63,63.07,12,21,1,0)
Store the user who entered the disposition of this test.
"^DD",63,63.07,12,"DT")
3070302
"^DD",63,63.07,13,0)
LAB TEST ORDERED^P60'^LAB(60,^0;13^Q
"^DD",63,63.07,13,3)
Enter the ordered laboratory test.
"^DD",63,63.07,13,21,0)
^.001^1^1^3071005^^^^
"^DD",63,63.07,13,21,1,0)
Contains the ordered laboratory test associated with the ordered NLT code.
"^DD",63,63.07,13,"DT")
3070913
"^DD",63,63.07,14,0)
PARENT TEST^P60'^LAB(60,^0;14^Q
"^DD",63,63.07,14,3)
Enter the parent ordered laboratory test if any.
"^DD",63,63.07,14,21,0)
^.001^2^2^3071005^^^
"^DD",63,63.07,14,21,1,0)
If this test is a reflex test this indicates the ordered test that is 
"^DD",63,63.07,14,21,2,0)
associated with the reflex test.
"^DD",63,63.07,14,"DT")
3070913
"^DD",63,63.07,15,0)
PARENT NLT^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",63,63.07,15,3)
Answer must be 1-11 characters in length
"^DD",63,63.07,15,21,0)
^.001^2^2^3071005^^^
"^DD",63,63.07,15,21,1,0)
Contains the order NLT code associated with the parent test when the 
"^DD",63,63.07,15,21,2,0)
ordered test is a reflex test.
"^DD",63,63.07,15,"DT")
3070913
"^DD",63,63.08,.31,0)
UID^F^^ORU;1^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.08,.31,3)
Answer must be 10-20 characters in length
"^DD",63,63.08,.31,21,0)
^^3^3^3051122^^^
"^DD",63,63.08,.31,21,1,0)
This is the UID used by the HOST LEDI system for this order/accession.
"^DD",63,63.08,.31,21,2,0)
 
"^DD",63,63.08,.31,21,3,0)
This field is used by LEDI software.
"^DD",63,63.08,.31,"DT")
3051122
"^DD",63,63.08,.32,0)
ORDERING SITE^P4'^DIC(4,^ORU;2^Q
"^DD",63,63.08,.32,3)
Enter the site ordering the test.
"^DD",63,63.08,.32,21,0)
^^5^5^3051122^
"^DD",63,63.08,.32,21,1,0)
This field contains the pointer to the INSTITUTION file for the MailMan domain location of the computer system.  All LEDI results are returned to the Ordering computer system.
"^DD",63,63.08,.32,21,2,0)
 
"^DD",63,63.08,.32,21,3,0)
Location to send LEDI HL7 result messages.
"^DD",63,63.08,.32,21,4,0)
 
"^DD",63,63.08,.32,21,5,0)
This field is used by LEDI software.
"^DD",63,63.08,.32,"DT")
3051122
"^DD",63,63.08,.33,0)
COLLECTING SITE^P4'^DIC(4,^ORU;3^Q
"^DD",63,63.08,.33,21,0)
^^3^3^3051122^
"^DD",63,63.08,.33,21,1,0)
This field contains the pointer to the INSTITUTION file for the actual collection site.  The ordering site is the MailMan location of the computer system.  MailMan domain location and the collecting site may be different.
"^DD",63,63.08,.33,21,2,0)
 
"^DD",63,63.08,.33,21,3,0)
This field is used by LEDI software.
"^DD",63,63.08,.33,"DT")
3051122
"^DD",63,63.08,.34,0)
HOST UID^F^^ORU;4^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.08,.34,3)
Answer must be 10-20 characters in length
"^DD",63,63.08,.34,21,0)
^^4^4^3051122^^
"^DD",63,63.08,.34,21,1,0)
Each Order/Accession is given a HOST UID.  The UID is stored in this location.  If LEDI software is used to accession specimens, usually the collecting sites UID is used to track specimens.  If the collecting UID conflicts with the HOST system
"^DD",63,63.08,.34,21,2,0)
number sequence, the HOST UID will be used instead of the collecting site's UID.
"^DD",63,63.08,.34,21,3,0)
 
"^DD",63,63.08,.34,21,4,0)
This field is used by LEDI software.
"^DD",63,63.08,.34,"DT")
3051122
"^DD",63,63.08,.342,0)
ORDERING SITE UID^F^^ORU;5^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.08,.342,3)
Answer must be 10-20 characters in length
"^DD",63,63.08,.342,21,0)
^^3^3^3051122^
"^DD",63,63.08,.342,21,1,0)
This field contains the collecting site's UID for this specimen.
"^DD",63,63.08,.342,21,2,0)
 
"^DD",63,63.08,.342,21,3,0)
this field is used by LEDI software.
"^DD",63,63.08,.342,"DT")
3051122
"^DD",63,63.08,.345,0)
RELEASING SITE^P4'^DIC(4,^RF;1^Q
"^DD",63,63.08,.345,3)
Enter the facility/site that is releasing this report.
"^DD",63,63.08,.345,21,0)
^^4^4^3051123^
"^DD",63,63.08,.345,21,1,0)
This field indicates the site that released the clinical report.
"^DD",63,63.08,.345,21,2,0)
This field can be used to determine the information required to
"^DD",63,63.08,.345,21,3,0)
correctly indicate the address/location of the laboratory
"^DD",63,63.08,.345,21,4,0)
responsible for releasing the report.
"^DD",63,63.08,.345,"DT")
3090129
"^DD",63,63.08,.35,0)
ORDERED TEST^63.53A^^ORUT;0
"^DD",63,63.08,.35,21,0)
^.001^7^7^3071005^^^^
"^DD",63,63.08,.35,21,1,0)
This subfile contains information about the
"^DD",63,63.08,.35,21,2,0)
ordered test(s) for this accession.  The .01
"^DD",63,63.08,.35,21,3,0)
field contains the ordered test NLT code 
"^DD",63,63.08,.35,21,4,0)
requested by the clinical provider.  If this
"^DD",63,63.08,.35,21,5,0)
test is a panel, all atomic tests within the
"^DD",63,63.08,.35,21,6,0)
panel will be associated with the ordered 
"^DD",63,63.08,.35,21,7,0)
test using this NLT code. 
"^DD",63,63.09,.31,0)
UID^F^^ORU;1^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.09,.31,3)
Answer must be 10-20 characters in length
"^DD",63,63.09,.31,21,0)
^^3^3^3051122^
"^DD",63,63.09,.31,21,1,0)
This is the UID used by the HOST LEDI system for this order/accession.
"^DD",63,63.09,.31,21,2,0)
 
"^DD",63,63.09,.31,21,3,0)
This field is used by LEDI software.
"^DD",63,63.09,.31,"DT")
3051122
"^DD",63,63.09,.32,0)
ORDERING SITE^P4'^DIC(4,^ORU;2^Q
"^DD",63,63.09,.32,3)
Enter the site ordering the test.
"^DD",63,63.09,.32,21,0)
^^5^5^3051122^
"^DD",63,63.09,.32,21,1,0)
This field contains the pointer to the INSTITUTION file for the Mailman domain location of the computer system.  All LEDI results are returned to the Ordering computer system.
"^DD",63,63.09,.32,21,2,0)
 
"^DD",63,63.09,.32,21,3,0)
Location to send LEDI HL7 result messages.
"^DD",63,63.09,.32,21,4,0)
 
"^DD",63,63.09,.32,21,5,0)
This field is used by LEDI software.
"^DD",63,63.09,.32,"DT")
3051122
"^DD",63,63.09,.33,0)
COLLECTING SITE^P4'^DIC(4,^ORU;3^Q
"^DD",63,63.09,.33,21,0)
^^3^3^3051122^
"^DD",63,63.09,.33,21,1,0)
This field contains the pointer to the INSTITUTION file for the actual collection site.  The ordering site is the MailMan location of the computer system.  MailMan domain location and the collecting site may be different.
"^DD",63,63.09,.33,21,2,0)
 
"^DD",63,63.09,.33,21,3,0)
This field is used by LEDI software.
"^DD",63,63.09,.33,"DT")
3051122
"^DD",63,63.09,.34,0)
HOST UID^F^^ORU;4^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.09,.34,3)
Answer must be 10-20 characters in length
"^DD",63,63.09,.34,21,0)
^^4^4^3051122^
"^DD",63,63.09,.34,21,1,0)
Each Order/Accession is given a HOST UID.  The UID is stored in this location.  If LEDI software is used to accession specimens, usually the collecting sites UID is used to track specimens.  If the collecting UID conflicts with the HOST system
"^DD",63,63.09,.34,21,2,0)
number sequence, the HOST UID will be used instead of the collecting site's UID.
"^DD",63,63.09,.34,21,3,0)
 
"^DD",63,63.09,.34,21,4,0)
This field is used by LEDI software.
"^DD",63,63.09,.34,"DT")
3051122
"^DD",63,63.09,.342,0)
ORDERING SITE UID^F^^ORU;5^K:$L(X)>20!($L(X)<10) X
"^DD",63,63.09,.342,3)
Answer must be 10-20 characters in length
"^DD",63,63.09,.342,21,0)
^^3^3^3051122^
"^DD",63,63.09,.342,21,1,0)
This field contains the collecting sites UID for this specimen.
"^DD",63,63.09,.342,21,2,0)
 
"^DD",63,63.09,.342,21,3,0)
This field is used by LEDI software.
"^DD",63,63.09,.342,"DT")
3051122
"^DD",63,63.09,.345,0)
RELEASING SITE^P4'^DIC(4,^RF;1^Q
"^DD",63,63.09,.345,3)
Enter the facility/site that is releasing this report.
"^DD",63,63.09,.345,21,0)
^^4^4^3051123^
"^DD",63,63.09,.345,21,1,0)
This field indicates the site that released the clinical report.  This
"^DD",63,63.09,.345,21,2,0)
field can be used to determine the information required to correctly
"^DD",63,63.09,.345,21,3,0)
indicate the address/location of the laboratory responsible for 
"^DD",63,63.09,.345,21,4,0)
releasing the report.
"^DD",63,63.09,.345,"DT")
3090129
"^DD",63,63.09,.35,0)
ORDERED TEST^63.51A^^ORUT;0
"^DD",63,63.09,.35,21,0)
^.001^5^5^3071005^^^^
"^DD",63,63.09,.35,21,1,0)
This subfile contains information about the ordered test(s) for this
"^DD",63,63.09,.35,21,2,0)
accession.  The .01 field contains the ordered test NLT code 
"^DD",63,63.09,.35,21,3,0)
requested by the clinical provider.  If this test is a panel, all 
"^DD",63,63.09,.35,21,4,0)
atomic tests within the panel will be associated with the ordered test
"^DD",63,63.09,.35,21,5,0)
using this NLT code.
"^DD",63,63.202,.06,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;6^Q
"^DD",63,63.202,.06,21,0)
^^1^1^3051125^
"^DD",63,63.202,.06,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.202,.06,"DT")
3051125
"^DD",63,63.202,.07,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;7^Q
"^DD",63,63.202,.07,21,0)
^^1^1^3051125^
"^DD",63,63.202,.07,21,1,0)
  This field contains the collection sample for this test.
"^DD",63,63.202,.07,"DT")
3051125
"^DD",63,63.3,0)
ORGANISM SUB-FIELD^NL^.1^135
"^DD",63,63.3,0,"NM","ORGANISM")

"^DD",63,63.3,.01,0)
ORGANISM^M*P61.2'X^LAB(61.2,^0;1^S DIC("S")="I ""PVRBFM""[$P(^(0),U,5)" D ^DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.3,.01,1,0)
^.1
"^DD",63,63.3,.01,1,1,0)
63.3^AC^MUMPS
"^DD",63,63.3,.01,1,1,1)
I $P(^LAB(61.2,X,0),"^",9) S ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")=DA(2)
"^DD",63,63.3,.01,1,1,2)
I $P(^LAB(61.2,X,0),"^",9) K ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")
"^DD",63,63.3,.01,1,2,0)
63.3^B
"^DD",63,63.3,.01,1,2,1)
S ^LR(DA(2),"MI",DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",63,63.3,.01,1,2,2)
K ^LR(DA(2),"MI",DA(1),3,"B",$E(X,1,30),DA)
"^DD",63,63.3,.01,1,2,3)
Regular cross-reference on organism field
"^DD",63,63.3,.01,1,2,"%D",0)
^^1^1^3061128^
"^DD",63,63.3,.01,1,2,"%D",1,0)
Regular "B" cross-reference on #.01 field.
"^DD",63,63.3,.01,1,2,"DT")
3061128
"^DD",63,63.3,.01,4)
Q
"^DD",63,63.3,.01,21,0)
^^1^1^2911203^
"^DD",63,63.3,.01,21,1,0)
This is an organism identified on this specimen.
"^DD",63,63.3,.01,"DT")
3061128
"^DD",63,63.3,.1,0)
ISOLATE ID^FI^^.1;1^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.3,.1,1,0)
^.1
"^DD",63,63.3,.1,1,1,0)
63.3^C
"^DD",63,63.3,.1,1,1,1)
S ^LR(DA(2),"MI",DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",63,63.3,.1,1,1,2)
K ^LR(DA(2),"MI",DA(1),3,"C",$E(X,1,30),DA)
"^DD",63,63.3,.1,1,1,"%D",0)
^^1^1^3060401^
"^DD",63,63.3,.1,1,1,"%D",1,0)
^LR(LRDFN,"MI",LRIDT,3,"C",ISOLATE ID,IEN)=""
"^DD",63,63.3,.1,1,1,"DT")
3060327
"^DD",63,63.3,.1,3)
Answer must be 1-30 characters in length.
"^DD",63,63.3,.1,21,0)
^.001^2^2^3060928^^^^
"^DD",63,63.3,.1,21,1,0)
The Isolate ID text.  Commonly used for HL7 messaging as OBX-4. This 
"^DD",63,63.3,.1,21,2,0)
should be in the form of 99VA4:x:y
"^DD",63,63.3,.1,23,0)
^^11^11^3060928^
"^DD",63,63.3,.1,23,1,0)
Created by patch LR*5.2*350.
"^DD",63,63.3,.1,23,2,0)
 
"^DD",63,63.3,.1,23,3,0)
No other fields should be added to this node so it can accept larger 
"^DD",63,63.3,.1,23,4,0)
Isolate IDs if needed in the future.
"^DD",63,63.3,.1,23,5,0)
 
"^DD",63,63.3,.1,23,6,0)
Isolate IDs inserted into this field should be transformed via the
"^DD",63,63.3,.1,23,7,0)
MAKEISO^LRVRMI1 API first.
"^DD",63,63.3,.1,23,8,0)
 
"^DD",63,63.3,.1,23,9,0)
This field is automatically populated by software via the "AD" xref on
"^DD",63,63.3,.1,23,10,0)
field #.01.  This field is uneditable by the user to prevent changes
"^DD",63,63.3,.1,23,11,0)
when/if the field is displayed via input templates.
"^DD",63,63.3,.1,"DT")
3060927
"^DD",63,63.34,0)
PARASITE SUB-FIELD^NL^.1^4
"^DD",63,63.34,0,"NM","PARASITE")

"^DD",63,63.34,.01,0)
PARASITE^M*P61.2'X^LAB(61.2,^0;1^S DIC("S")="I $P(^(0),U,5)=""P""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<1 X
"^DD",63,63.34,.01,1,0)
^.1
"^DD",63,63.34,.01,1,1,0)
63.34^B
"^DD",63,63.34,.01,1,1,1)
S ^LR(DA(2),"MI",DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",63,63.34,.01,1,1,2)
K ^LR(DA(2),"MI",DA(1),6,"B",$E(X,1,30),DA)
"^DD",63,63.34,.01,1,2,0)
63.34^AC^MUMPS
"^DD",63,63.34,.01,1,2,1)
I $P(^LAB(61.2,X,0),"^",9) S ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")=DA(2)
"^DD",63,63.34,.01,1,2,2)
I $P(^LAB(61.2,X,0),"^",9) K ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")
"^DD",63,63.34,.01,1,3,0)
63.05^AE^MUMPS
"^DD",63,63.34,.01,1,3,1)
D ENDIY^LRCAPV1
"^DD",63,63.34,.01,1,3,2)
Q
"^DD",63,63.34,.01,1,3,3)
Trigger workload collection routine.
"^DD",63,63.34,.01,1,3,"%D",0)
^^1^1^2930720^
"^DD",63,63.34,.01,1,3,"%D",1,0)
Look any WKLD associated with this organism and record.
"^DD",63,63.34,.01,1,3,"DT")
2930720
"^DD",63,63.34,.01,12.1)
S DIC("S")="I $P(^(0),U,5)=""P"""
"^DD",63,63.34,.01,21,0)
^^1^1^2911204^^
"^DD",63,63.34,.01,21,1,0)
This is the parasite identified on this specimen.
"^DD",63,63.34,.01,"DT")
3060927
"^DD",63,63.34,.1,0)
ISOLATE ID^FI^^.1;1^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.34,.1,1,0)
^.1
"^DD",63,63.34,.1,1,1,0)
63.34^C
"^DD",63,63.34,.1,1,1,1)
S ^LR(DA(2),"MI",DA(1),6,"C",$E(X,1,30),DA)=""
"^DD",63,63.34,.1,1,1,2)
K ^LR(DA(2),"MI",DA(1),6,"C",$E(X,1,30),DA)
"^DD",63,63.34,.1,1,1,"%D",0)
^^1^1^3060401^
"^DD",63,63.34,.1,1,1,"%D",1,0)
^LR(LRDFN,"MI",LRIDT,6,"C",ISOLATE ID,IEN)=""
"^DD",63,63.34,.1,1,1,"DT")
3060328
"^DD",63,63.34,.1,3)
Answer must be 1-30 characters in length.
"^DD",63,63.34,.1,21,0)
^.001^2^2^3060928^^^^
"^DD",63,63.34,.1,21,1,0)
The Isolate ID text.  Commonly used for HL7 messaging as OBX-4. This 
"^DD",63,63.34,.1,21,2,0)
should be in the form of 99VA4:x:y
"^DD",63,63.34,.1,23,0)
^^11^11^3060928^
"^DD",63,63.34,.1,23,1,0)
Created by patch LR*5.2*350.
"^DD",63,63.34,.1,23,2,0)
 
"^DD",63,63.34,.1,23,3,0)
No other fields should be added to this node so it can accept larger 
"^DD",63,63.34,.1,23,4,0)
Isolate IDs if needed in the future.
"^DD",63,63.34,.1,23,5,0)
 
"^DD",63,63.34,.1,23,6,0)
Isolate IDs inserted into this field should be transformed via the 
"^DD",63,63.34,.1,23,7,0)
MAKEISO^LRVRMI1 API first.
"^DD",63,63.34,.1,23,8,0)
 
"^DD",63,63.34,.1,23,9,0)
This field is automatically populated by software via the "AD" xref on  
"^DD",63,63.34,.1,23,10,0)
field #.01.  This field is uneditable by the user to prevent changes
"^DD",63,63.34,.1,23,11,0)
when/if the field is displayed via input templates.
"^DD",63,63.34,.1,"DT")
3060927
"^DD",63,63.37,0)
FUNGUS/YEAST SUB-FIELD^NL^.1^5
"^DD",63,63.37,0,"NM","FUNGUS/YEAST")

"^DD",63,63.37,.01,0)
FUNGUS/YEAST^MP61.2'^LAB(61.2,^0;1^Q
"^DD",63,63.37,.01,1,0)
^.1
"^DD",63,63.37,.01,1,1,0)
63.37^B
"^DD",63,63.37,.01,1,1,1)
S ^LR(DA(2),"MI",DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",63,63.37,.01,1,1,2)
K ^LR(DA(2),"MI",DA(1),9,"B",$E(X,1,30),DA)
"^DD",63,63.37,.01,1,2,0)
63.37^AC^MUMPS
"^DD",63,63.37,.01,1,2,1)
I $P($G(^LAB(61.2,+X,0)),"^",9) S ^LR("AD",DT,+X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")=DA(2)
"^DD",63,63.37,.01,1,2,2)
I $P($G(^LAB(61.2,+X,0)),"^",9) K ^LR("AD",DT,+X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")
"^DD",63,63.37,.01,1,3,0)
63.05^AD^MUMPS
"^DD",63,63.37,.01,1,3,1)
D ENDIY^LRCAPV1
"^DD",63,63.37,.01,1,3,2)
Q
"^DD",63,63.37,.01,1,3,3)
To trigger WKLD routine.
"^DD",63,63.37,.01,1,3,"%D",0)
^^1^1^2930720^
"^DD",63,63.37,.01,1,3,"%D",1,0)
Lookup any WKLD codes for this organism and record.
"^DD",63,63.37,.01,1,3,"DT")
2930720
"^DD",63,63.37,.01,21,0)
^^1^1^3070803^
"^DD",63,63.37,.01,21,1,0)
The entity indentified from the Etiology Field file (#61.2).
"^DD",63,63.37,.01,"DT")
3070803
"^DD",63,63.37,.1,0)
ISOLATE ID^FI^^.1;1^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.37,.1,1,0)
^.1
"^DD",63,63.37,.1,1,1,0)
63.37^C
"^DD",63,63.37,.1,1,1,1)
S ^LR(DA(2),"MI",DA(1),9,"C",$E(X,1,30),DA)=""
"^DD",63,63.37,.1,1,1,2)
K ^LR(DA(2),"MI",DA(1),9,"C",$E(X,1,30),DA)
"^DD",63,63.37,.1,1,1,"%D",0)
^^1^1^3060401^
"^DD",63,63.37,.1,1,1,"%D",1,0)
^LR(LRDFN,"MI",LRIDT,9,"C",ISOLATE ID,IEN)=""
"^DD",63,63.37,.1,1,1,"DT")
3060328
"^DD",63,63.37,.1,3)
Answer must be 1-30 characters in length.
"^DD",63,63.37,.1,21,0)
^.001^2^2^3060928^^^
"^DD",63,63.37,.1,21,1,0)
The Isolate ID text.  Commonly used for HL7 messaging as OBX-4. This 
"^DD",63,63.37,.1,21,2,0)
should be in the form of 99VA4:x:y
"^DD",63,63.37,.1,23,0)
^^9^9^3060928^
"^DD",63,63.37,.1,23,1,0)
No other fields should be added to this node so it can accept larger 
"^DD",63,63.37,.1,23,2,0)
Isolate IDs if needed in the future.
"^DD",63,63.37,.1,23,3,0)
 
"^DD",63,63.37,.1,23,4,0)
Isolate IDs inserted into this field should be transformed via the 
"^DD",63,63.37,.1,23,5,0)
MAKEISO^LRVRMI1 API first.
"^DD",63,63.37,.1,23,6,0)
 
"^DD",63,63.37,.1,23,7,0)
This field is automatically populated by software via the "AD" xref on  
"^DD",63,63.37,.1,23,8,0)
field #.01.  This field is uneditable by the user to prevent changes
"^DD",63,63.37,.1,23,9,0)
when/if the field is displayed via input templates.
"^DD",63,63.37,.1,"DT")
3060927
"^DD",63,63.39,0)
MYCOBACTERIUM SUB-FIELD^NL^.1^18
"^DD",63,63.39,0,"NM","MYCOBACTERIUM")

"^DD",63,63.39,.01,0)
MYCOBACTERIUM^M*P61.2'^LAB(61.2,^0;1^S DIC("S")="I $P(^(0),U,5)=""M""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.39,.01,1,0)
^.1
"^DD",63,63.39,.01,1,1,0)
63.39^B
"^DD",63,63.39,.01,1,1,1)
S ^LR(DA(2),"MI",DA(1),12,"B",$E(X,1,30),DA)=""
"^DD",63,63.39,.01,1,1,2)
K ^LR(DA(2),"MI",DA(1),12,"B",$E(X,1,30),DA)
"^DD",63,63.39,.01,1,2,0)
63.39^AF^MUMPS
"^DD",63,63.39,.01,1,2,1)
I $P(^LAB(61.2,X,0),"^",9) S ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")=DA(2)
"^DD",63,63.39,.01,1,2,2)
I $P(^LAB(61.2,X,0),"^",9) K ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")
"^DD",63,63.39,.01,1,3,0)
63.05^AC^MUMPS
"^DD",63,63.39,.01,1,3,1)
D ENDIY^LRCAPV1
"^DD",63,63.39,.01,1,3,2)
Q
"^DD",63,63.39,.01,1,3,3)
To trigger WKDL routine.
"^DD",63,63.39,.01,1,3,"%D",0)
^^1^1^2930720^
"^DD",63,63.39,.01,1,3,"%D",1,0)
 Look up any WKLD codes for this organism and record.
"^DD",63,63.39,.01,1,3,"DT")
2930720
"^DD",63,63.39,.01,21,0)
^^2^2^2911204^
"^DD",63,63.39,.01,21,1,0)
This is the mycobacterium identified with this
"^DD",63,63.39,.01,21,2,0)
specimen.
"^DD",63,63.39,.01,"DT")
3060927
"^DD",63,63.39,.1,0)
ISOLATE ID^FI^^.1;1^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.39,.1,1,0)
^.1
"^DD",63,63.39,.1,1,1,0)
63.39^C
"^DD",63,63.39,.1,1,1,1)
S ^LR(DA(2),"MI",DA(1),12,"C",$E(X,1,30),DA)=""
"^DD",63,63.39,.1,1,1,2)
K ^LR(DA(2),"MI",DA(1),12,"C",$E(X,1,30),DA)
"^DD",63,63.39,.1,1,1,"%D",0)
^^1^1^3060401^
"^DD",63,63.39,.1,1,1,"%D",1,0)
^LR(LRDFN,"MI",LRIDT,12,"C",ISOLATE ID,IEN)=""
"^DD",63,63.39,.1,1,1,"DT")
3060328
"^DD",63,63.39,.1,3)
Answer must be 1-30 characters in length.
"^DD",63,63.39,.1,21,0)
^.001^2^2^3060928^^^^
"^DD",63,63.39,.1,21,1,0)
The Isolate ID text.  Commonly used for HL7 messaging as OBX-4. This 
"^DD",63,63.39,.1,21,2,0)
should be in the form of 99VA4:x:y
"^DD",63,63.39,.1,23,0)
^^11^11^3060928^
"^DD",63,63.39,.1,23,1,0)
Created by patch LR*5.2*350.
"^DD",63,63.39,.1,23,2,0)
 
"^DD",63,63.39,.1,23,3,0)
No other fields should be added to this node so it can accept larger 
"^DD",63,63.39,.1,23,4,0)
Isolate IDs if needed in the future.
"^DD",63,63.39,.1,23,5,0)
 
"^DD",63,63.39,.1,23,6,0)
Isolate IDs inserted into this field should be transformed via the 
"^DD",63,63.39,.1,23,7,0)
MAKEISO^LRVRMI1 API first.
"^DD",63,63.39,.1,23,8,0)
 
"^DD",63,63.39,.1,23,9,0)
This field is automatically populated by software via the "AD" xref on  
"^DD",63,63.39,.1,23,10,0)
field #.01.  This field is uneditable by the user to prevent changes
"^DD",63,63.39,.1,23,11,0)
when/if the field is displayed via input templates.
"^DD",63,63.39,.1,"DT")
3060927
"^DD",63,63.43,0)
VIRUS SUB-FIELD^NL^.1^3
"^DD",63,63.43,0,"NM","VIRUS")

"^DD",63,63.43,.01,0)
VIRUS^M*P61.2'^LAB(61.2,^0;1^S DIC("S")="I $P(^(0),U,5)=""V""!($P(^(0),U,5)=""R"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.43,.01,1,0)
^.1
"^DD",63,63.43,.01,1,1,0)
63.43^AG^MUMPS
"^DD",63,63.43,.01,1,1,1)
I $P(^LAB(61.2,X,0),"^",9) S ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")=DA(2)
"^DD",63,63.43,.01,1,1,2)
I $P(^LAB(61.2,X,0),"^",9) K ^LR("AD",DT,X,$P(^LR(DA(2),"MI",DA(1),0),"^",6)_" ")
"^DD",63,63.43,.01,1,2,0)
63.05^AF^MUMPS
"^DD",63,63.43,.01,1,2,1)
D ENDIY^LRCAPV1
"^DD",63,63.43,.01,1,2,2)
Q
"^DD",63,63.43,.01,1,2,3)
Trigger WKLD routine.
"^DD",63,63.43,.01,1,2,"%D",0)
^^1^1^2930720^
"^DD",63,63.43,.01,1,2,"%D",1,0)
Look up any WKLD code for this organism and record.
"^DD",63,63.43,.01,1,2,"DT")
2930720
"^DD",63,63.43,.01,1,3,0)
63.43^B
"^DD",63,63.43,.01,1,3,1)
S ^LR(DA(2),"MI",DA(1),17,"B",$E(X,1,30),DA)=""
"^DD",63,63.43,.01,1,3,2)
K ^LR(DA(2),"MI",DA(1),17,"B",$E(X,1,30),DA)
"^DD",63,63.43,.01,1,3,"DT")
3061129
"^DD",63,63.43,.01,21,0)
^^1^1^2911204^
"^DD",63,63.43,.01,21,1,0)
This is the virus reported on this specimen.
"^DD",63,63.43,.01,"DT")
3061129
"^DD",63,63.43,.1,0)
ISOLATE ID^FI^^.1;1^K:$L(X)>30!($L(X)<1) X
"^DD",63,63.43,.1,1,0)
^.1
"^DD",63,63.43,.1,1,1,0)
63.43^C
"^DD",63,63.43,.1,1,1,1)
S ^LR(DA(2),"MI",DA(1),17,"C",$E(X,1,30),DA)=""
"^DD",63,63.43,.1,1,1,2)
K ^LR(DA(2),"MI",DA(1),17,"C",$E(X,1,30),DA)
"^DD",63,63.43,.1,1,1,"%D",0)
^^1^1^3060401^
"^DD",63,63.43,.1,1,1,"%D",1,0)
^LR(LRDFN,"MI",LRIDT,17,"C",ISOLATE ID,IEN)=""
"^DD",63,63.43,.1,1,1,"DT")
3060328
"^DD",63,63.43,.1,3)
Answer must be 1-30 characters in length.
"^DD",63,63.43,.1,21,0)
^.001^2^2^3060928^^^^
"^DD",63,63.43,.1,21,1,0)
The Isolate ID text.  Commonly used for HL7 messaging as OBX-4. This 
"^DD",63,63.43,.1,21,2,0)
should be in the form of 99VA4:x:y
"^DD",63,63.43,.1,23,0)
^^11^11^3060928^
"^DD",63,63.43,.1,23,1,0)
Created by patch LR*5.2*350.
"^DD",63,63.43,.1,23,2,0)
 
"^DD",63,63.43,.1,23,3,0)
No other fields should be added to this node so it can accept larger 
"^DD",63,63.43,.1,23,4,0)
Isolate IDs if needed in the future.
"^DD",63,63.43,.1,23,5,0)
 
"^DD",63,63.43,.1,23,6,0)
Isolate IDs inserted into this field should be transformed via the 
"^DD",63,63.43,.1,23,7,0)
MAKEISO^LRVRMI1 API first.
"^DD",63,63.43,.1,23,8,0)
 
"^DD",63,63.43,.1,23,9,0)
This field is automatically populated by software via the "AD" xref on  
"^DD",63,63.43,.1,23,10,0)
field #.01.  This field is uneditable by the user to prevent changes
"^DD",63,63.43,.1,23,11,0)
when/if the field is displayed via input templates.
"^DD",63,63.43,.1,"DT")
3060927
"^DD",63,63.5,0)
ORDERED TEST SUB-FIELD^^15^15
"^DD",63,63.5,0,"DT")
3071005
"^DD",63,63.5,0,"IX","B",63.5,.01)

"^DD",63,63.5,0,"NM","ORDERED TEST")

"^DD",63,63.5,0,"UP")
63.05
"^DD",63,63.5,.01,0)
ORDERED TEST^FO^^0;1^K:$L(X)>15!($L(X)<5) X
"^DD",63,63.5,.01,1,0)
^.1
"^DD",63,63.5,.01,1,1,0)
63.5^B
"^DD",63,63.5,.01,1,1,1)
S ^LR(DA(2),"MI",DA(1),"ORUT","B",$E(X,1,30),DA)=""
"^DD",63,63.5,.01,1,1,2)
K ^LR(DA(2),"MI",DA(1),"ORUT","B",$E(X,1,30),DA)
"^DD",63,63.5,.01,2)
S Y(0)=Y N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,$D(^LAM(ZZY,0))#2 S Y=$P(^(0),U)
"^DD",63,63.5,.01,2.1)
N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,$D(^LAM(ZZY,0))#2 S Y=$P(^(0),U)
"^DD",63,63.5,.01,3)
Answer must be 5-15 characters in length.
"^DD",63,63.5,.01,21,0)
^.001^4^4^3051129^^^^
"^DD",63,63.5,.01,21,1,0)
This field contains the ordered test NLT code requested by the clinical
"^DD",63,63.5,.01,21,2,0)
provider.  If this test is a panel, all atomic tests within the panel
"^DD",63,63.5,.01,21,3,0)
will be associated with the ordered test using this NLT code.
"^DD",63,63.5,.01,21,4,0)

"^DD",63,63.5,.01,"DT")
3051129
"^DD",63,63.5,2,0)
ORDERED URGENCY^*P62.05'^LAB(62.05,^0;2^S DIC("S")="I +Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.5,2,3)
Select urgency for this test.
"^DD",63,63.5,2,12)
Prevent selection of WKLD designated urgencies.
"^DD",63,63.5,2,12.1)
S DIC("S")="I +Y<50"
"^DD",63,63.5,2,21,0)
^^2^2^3051129^
"^DD",63,63.5,2,21,1,0)
This field contains the urgency for this ordered test.
"^DD",63,63.5,2,21,2,0)

"^DD",63,63.5,2,"DT")
3051129
"^DD",63,63.5,3,0)
CPRS ORDER #^P100'^OR(100,^0;3^Q
"^DD",63,63.5,3,21,0)
^.001^4^4^3051129^^
"^DD",63,63.5,3,21,1,0)
This field contains the pointer to CPRS ORDER(#100) file.  This field is only
"^DD",63,63.5,3,21,2,0)
populated when the original order is placed on the local system.
"^DD",63,63.5,3,21,3,0)

"^DD",63,63.5,3,21,4,0)

"^DD",63,63.5,3,"DT")
3051128
"^DD",63,63.5,4,0)
LAB ORDER #^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.5,4,3)
Answer must be 1-20 characters in length.
"^DD",63,63.5,4,21,0)
^^3^3^3051128^
"^DD",63,63.5,4,21,1,0)
This field contains the LAB ORDER number for this test.  The construct of this
"^DD",63,63.5,4,21,2,0)
free text field is: LR-Lab order number-XXXX- where XXXX is the Julian date.
"^DD",63,63.5,4,21,3,0)

"^DD",63,63.5,4,"DT")
3051128
"^DD",63,63.5,5,0)
ORDERED TYPE^*P64.061'^LAB(64.061,^0;5^S DIC("S")="I $P(^(0),U,5)=""0065""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.5,5,3)
Select entry from HL7 table 0065.
"^DD",63,63.5,5,12)
Select entries for the HL7 table 0065.
"^DD",63,63.5,5,12.1)
S DIC("S")="I $P(^(0),U,5)=""0065"""
"^DD",63,63.5,5,21,0)
^^5^5^3051129^
"^DD",63,63.5,5,21,1,0)
This field contains information about how the test order was generated.  The
"^DD",63,63.5,5,21,2,0)
selection must be made from HL7 0065 entries.  This field indicates if the
"^DD",63,63.5,5,21,3,0)
ordered test was part of the original order, an add-on or reflexed per clinical
"^DD",63,63.5,5,21,4,0)
protocol.
"^DD",63,63.5,5,21,5,0)

"^DD",63,63.5,5,"DT")
3051129
"^DD",63,63.5,6,0)
ORDERING PROVIDER LOCAL^P200'^VA(200,^0;6^Q
"^DD",63,63.5,6,21,0)
^^3^3^3051129^
"^DD",63,63.5,6,21,1,0)
The pointer to the NEW PERSON file if the original order was placed on the
"^DD",63,63.5,6,21,2,0)
local system.  This field will be empty if order is placed via LEDI.
"^DD",63,63.5,6,21,3,0)

"^DD",63,63.5,6,"DT")
3051129
"^DD",63,63.5,7,0)
ORDERING PROVIDER REMOTE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",63,63.5,7,3)
Answer must be 1-80 characters in length.
"^DD",63,63.5,7,21,0)
^^3^3^3051129^
"^DD",63,63.5,7,21,1,0)
If this test is ordered by a provider from a remote system (not local system),
"^DD",63,63.5,7,21,2,0)
the names contained in the HL7 message will be stored in this field.
"^DD",63,63.5,7,21,3,0)

"^DD",63,63.5,7,"DT")
3051129
"^DD",63,63.5,8,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;8^Q
"^DD",63,63.5,8,21,0)
^^2^2^3051129^
"^DD",63,63.5,8,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.5,8,21,2,0)

"^DD",63,63.5,8,"DT")
3051129
"^DD",63,63.5,9,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",63,63.5,9,21,0)
^^2^2^3051129^
"^DD",63,63.5,9,21,1,0)
This field contains the collection sample for this test.
"^DD",63,63.5,9,21,2,0)

"^DD",63,63.5,9,"DT")
3051129
"^DD",63,63.5,10,0)
DISPOSITION^*P64.061'^LAB(64.061,^0;10^S DIC("S")="I $P(^(0),U,5)=""0123""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.5,10,3)
Enter the disposition of this ordered test.
"^DD",63,63.5,10,12)
Select disposition based on HL7 Table 0123 status codes
"^DD",63,63.5,10,12.1)
S DIC("S")="I $P(^(0),U,5)=""0123"""
"^DD",63,63.5,10,21,0)
^.001^2^2^3071005^^
"^DD",63,63.5,10,21,1,0)
Maintains the disposition of the ordered test.  It will be used to value 
"^DD",63,63.5,10,21,2,0)
the test disposition in HL7 messaging, specifically OBR-25.
"^DD",63,63.5,10,"DT")
3071005
"^DD",63,63.5,11,0)
DISPOSITION DATE/TIME^D^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.5,11,3)
Enter the date and time this test is dispositioned.
"^DD",63,63.5,11,21,0)
^^2^2^3071005^
"^DD",63,63.5,11,21,1,0)
Stores the date and time that a lab user or the system dispositioned this 
"^DD",63,63.5,11,21,2,0)
test.
"^DD",63,63.5,11,"DT")
3071005
"^DD",63,63.5,12,0)
DISPOSITION BY^P200'^VA(200,^0;12^Q
"^DD",63,63.5,12,3)
User who dispositioned this test
"^DD",63,63.5,12,21,0)
^^1^1^3071005^
"^DD",63,63.5,12,21,1,0)
Store the user who entered the disposition of this test.
"^DD",63,63.5,12,"DT")
3071005
"^DD",63,63.5,13,0)
LAB TEST ORDERED^P60'^LAB(60,^0;13^Q
"^DD",63,63.5,13,3)
Enter the ordered laboratory test.
"^DD",63,63.5,13,21,0)
^^1^1^3071005^
"^DD",63,63.5,13,21,1,0)
Contains the ordered laboratory test associated with the ordered NLT code.
"^DD",63,63.5,13,"DT")
3071005
"^DD",63,63.5,14,0)
PARENT TEST^P60'^LAB(60,^0;14^Q
"^DD",63,63.5,14,3)
Enter the parent ordered laboratory test if any.
"^DD",63,63.5,14,21,0)
^^2^2^3071005^
"^DD",63,63.5,14,21,1,0)
If this test is a reflex test then indcates the ordered test that is 
"^DD",63,63.5,14,21,2,0)
associated with the reflex test.
"^DD",63,63.5,14,"DT")
3071005
"^DD",63,63.5,15,0)
PARENT NLT^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",63,63.5,15,3)
Answer must be 1-11 characters in length.
"^DD",63,63.5,15,21,0)
^^2^2^3071005^
"^DD",63,63.5,15,21,1,0)
Contains the order NLT code associated with the parent test when the 
"^DD",63,63.5,15,21,2,0)
ordered test is a reflex test.
"^DD",63,63.5,15,"DT")
3071005
"^DD",63,63.51,0)
ORDERED TEST SUB-FIELD^^15^15
"^DD",63,63.51,0,"DT")
3071005
"^DD",63,63.51,0,"IX","B",63.51,.01)

"^DD",63,63.51,0,"NM","ORDERED TEST")

"^DD",63,63.51,0,"UP")
63.09
"^DD",63,63.51,.01,0)
ORDERED TEST^FO^^0;1^K:$L(X)>15!($L(X)<5) X
"^DD",63,63.51,.01,1,0)
^.1
"^DD",63,63.51,.01,1,1,0)
63.51^B
"^DD",63,63.51,.01,1,1,1)
S ^LR(DA(2),"CY",DA(1),"ORUT","B",$E(X,1,30),DA)=""
"^DD",63,63.51,.01,1,1,2)
K ^LR(DA(2),"CY",DA(1),"ORUT","B",$E(X,1,30),DA)
"^DD",63,63.51,.01,2)
S Y(0)=Y N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.51,.01,2.1)
N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.51,.01,3)
Answer must be 5-15 characters in length.
"^DD",63,63.51,.01,21,0)
^^3^3^3070803^
"^DD",63,63.51,.01,21,1,0)
Contains the ordered test NLT code requested by the clinical provider.  
"^DD",63,63.51,.01,21,2,0)
If this test is a panel, all atomic tests within the panel will be 
"^DD",63,63.51,.01,21,3,0)
associated with the ordered test using this NLT code.
"^DD",63,63.51,.01,"DT")
3051122
"^DD",63,63.51,2,0)
ORDERED URGENCY^*P62.05'^LAB(62.05,^0;2^S DIC("S")="I +Y<50" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",63,63.51,2,3)
Select urgency for this test.
"^DD",63,63.51,2,12)
Prevent selection of WKLD designated urgencies.
"^DD",63,63.51,2,12.1)
S DIC("S")="I +Y<50"
"^DD",63,63.51,2,21,0)
^^1^1^3051122^
"^DD",63,63.51,2,21,1,0)
This field contains the urgency for this ordered test.
"^DD",63,63.51,2,"DT")
3051122
"^DD",63,63.51,3,0)
CPRS ORDER #^P100'^OR(100,^0;3^Q
"^DD",63,63.51,3,21,0)
^^1^1^3051122^
"^DD",63,63.51,3,21,1,0)
This field contains the pointer to CPRS ORDER (#100) file.  This field is only populated when the original order is placed on the local system.
"^DD",63,63.51,3,"DT")
3051122
"^DD",63,63.51,4,0)
LAB ORDER #^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.51,4,3)
Answer must be 1-20 characters in length
"^DD",63,63.51,4,21,0)
^^1^1^3051122^
"^DD",63,63.51,4,21,1,0)
This field contains the LAB ORDER number for this test.  The construct of this free text field is: LR-Lab order number-XXXX - where XXXX is the Julian date.
"^DD",63,63.51,4,"DT")
3051122
"^DD",63,63.51,5,0)
ORDER TYPE^*P64.061'^LAB(64.061,^0;5^S DIC("S")="I $P(^(0),U,5)=""0065""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.51,5,3)
Select entry from HL7 table 0065.
"^DD",63,63.51,5,12)
Select entries for the HL7 table 0065
"^DD",63,63.51,5,12.1)
S DIC("S")="I $P(^(0),U,5)=""0065"""
"^DD",63,63.51,5,21,0)
^^4^4^3051122^
"^DD",63,63.51,5,21,1,0)
This field contains information about how the test order was generated.
"^DD",63,63.51,5,21,2,0)
  The selection must be made from HL7 Table 0065 entries.  This field 
"^DD",63,63.51,5,21,3,0)
indicates if the ordered test was part of the original order, an
"^DD",63,63.51,5,21,4,0)
add-on or reflexed per clinical protocol.
"^DD",63,63.51,5,"DT")
3051122
"^DD",63,63.51,6,0)
ORDERING PROVIDER LOCAL^P200'^VA(200,^0;6^Q
"^DD",63,63.51,6,21,0)
^^3^3^3051122^
"^DD",63,63.51,6,21,1,0)
The pointer to the NEW PERSON file if the original order was placed
"^DD",63,63.51,6,21,2,0)
on the local system.  This field will be empty if order is placed
"^DD",63,63.51,6,21,3,0)
via LEDI.
"^DD",63,63.51,6,"DT")
3051122
"^DD",63,63.51,7,0)
ORDERING PROVIDER REMOTE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",63,63.51,7,3)
Answer must be 1-80 characters in length.
"^DD",63,63.51,7,21,0)
^^3^3^3051122^
"^DD",63,63.51,7,21,1,0)
If this test is ordered by a provider from a remote system (not
"^DD",63,63.51,7,21,2,0)
local system), the names contained in the HL7 message will be 
"^DD",63,63.51,7,21,3,0)
stored in this field.
"^DD",63,63.51,7,"DT")
3051122
"^DD",63,63.51,8,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;8^Q
"^DD",63,63.51,8,21,0)
^^1^1^3051122^
"^DD",63,63.51,8,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.51,8,"DT")
3051122
"^DD",63,63.51,9,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",63,63.51,9,21,0)
^^1^1^3051122^
"^DD",63,63.51,9,21,1,0)
This field contains the collection sample for this test.
"^DD",63,63.51,9,"DT")
3051122
"^DD",63,63.51,10,0)
DISPOSITION^*P64.061'^LAB(64.061,^0;10^S DIC("S")="I $P(^(0),U,5)=""0123""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.51,10,3)
Enter the disposition of this ordered test.
"^DD",63,63.51,10,12)
Select disposition based on HL7 Table 0123 status codes
"^DD",63,63.51,10,12.1)
S DIC("S")="I $P(^(0),U,5)=""0123"""
"^DD",63,63.51,10,21,0)
^^2^2^3071005^
"^DD",63,63.51,10,21,1,0)
Maintains the disposition of the ordered test. It will be used to value 
"^DD",63,63.51,10,21,2,0)
the test disposition in HL7 messaging, specifically OBR-25.
"^DD",63,63.51,10,"DT")
3071005
"^DD",63,63.51,11,0)
DISPOSITION DATE/TIME^D^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.51,11,3)
Enter the date and time this test is dispositioned.
"^DD",63,63.51,11,21,0)
^^2^2^3071005^
"^DD",63,63.51,11,21,1,0)
Stores the date and time that a lab user or the system dispositioned this 
"^DD",63,63.51,11,21,2,0)
test.
"^DD",63,63.51,11,"DT")
3071005
"^DD",63,63.51,12,0)
DISPOSITION BY^P200'^VA(200,^0;12^Q
"^DD",63,63.51,12,3)
User who dispositioned this test.
"^DD",63,63.51,12,21,0)
^^1^1^3071005^
"^DD",63,63.51,12,21,1,0)
Store the user who entered the disposition of this test.
"^DD",63,63.51,12,"DT")
3071005
"^DD",63,63.51,13,0)
LAB TEST ORDERED^P60'^LAB(60,^0;13^Q
"^DD",63,63.51,13,3)
Enter the ordered laboratory test.
"^DD",63,63.51,13,21,0)
^^1^1^3071005^
"^DD",63,63.51,13,21,1,0)
Contains the ordered laboratory test associated with the ordered NLT code.
"^DD",63,63.51,13,"DT")
3071005
"^DD",63,63.51,14,0)
PARENT TEST^P60'^LAB(60,^0;14^Q
"^DD",63,63.51,14,3)
Enter the parent ordered laboratory test if any.
"^DD",63,63.51,14,21,0)
^^2^2^3071005^
"^DD",63,63.51,14,21,1,0)
If this test is a reflex test this indicates the ordered test that is 
"^DD",63,63.51,14,21,2,0)
associated with the reflex test.
"^DD",63,63.51,14,"DT")
3071005
"^DD",63,63.51,15,0)
PARENT NLT^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",63,63.51,15,3)
Answer must be 1-11 characters in length.
"^DD",63,63.51,15,21,0)
^^2^2^3071005^
"^DD",63,63.51,15,21,1,0)
Contains the order NLT code associated with the parent test when the 
"^DD",63,63.51,15,21,2,0)
ordered test is a reflex test.
"^DD",63,63.51,15,"DT")
3071005
"^DD",63,63.52,0)
ORDERED TEST SUB-FIELD^^15^15
"^DD",63,63.52,0,"DT")
3071005
"^DD",63,63.52,0,"IX","B",63.52,.01)

"^DD",63,63.52,0,"NM","ORDERED TEST")

"^DD",63,63.52,0,"UP")
63.02
"^DD",63,63.52,.01,0)
ORDERED TEST^FO^^0;1^K:$L(X)>15!($L(X)<5) X
"^DD",63,63.52,.01,1,0)
^.1
"^DD",63,63.52,.01,1,1,0)
63.52^B
"^DD",63,63.52,.01,1,1,1)
S ^LR(DA(2),"EM",DA(1),"ORUT","B",$E(X,1,30),DA)=""
"^DD",63,63.52,.01,1,1,2)
K ^LR(DA(2),"EM",DA(1),"ORUT","B",$E(X,1,30),DA)
"^DD",63,63.52,.01,2)
S Y(0)=Y N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.52,.01,2.1)
N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.52,.01,3)
Answer must be 5-15 characters in length.
"^DD",63,63.52,.01,21,0)
^^3^3^3070803^
"^DD",63,63.52,.01,21,1,0)
The ordered test NLT code requested by the clinical provider.  If this
"^DD",63,63.52,.01,21,2,0)
test is a panel, all atomic tests within the panel will be associated with
"^DD",63,63.52,.01,21,3,0)
the ordered test using this NLT code.
"^DD",63,63.52,.01,"DT")
3051123
"^DD",63,63.52,2,0)
ORDERED URGENCY^*P62.05'^LAB(62.05,^0;2^S DIC("S")="I +Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.52,2,3)
Select urgency for this test.
"^DD",63,63.52,2,12)
Prevent selection of WKLD designated urgencies.
"^DD",63,63.52,2,12.1)
S DIC("S")="I +Y<50"
"^DD",63,63.52,2,21,0)
^^1^1^3051123^
"^DD",63,63.52,2,21,1,0)
This field contains the urgency for this ordered test.
"^DD",63,63.52,2,"DT")
3051123
"^DD",63,63.52,3,0)
CPRS ORDER #^P100'^OR(100,^0;3^Q
"^DD",63,63.52,3,21,0)
^^2^2^3051123^
"^DD",63,63.52,3,21,1,0)
This field contains the pointer to CPRS ORDER (#100) file.  This field
"^DD",63,63.52,3,21,2,0)
is only populated when the original order is placed on the local system.
"^DD",63,63.52,3,"DT")
3051123
"^DD",63,63.52,4,0)
LAB ORDER #^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.52,4,3)
Answer must be 1-20 characters in length.
"^DD",63,63.52,4,21,0)
^^3^3^3051123^
"^DD",63,63.52,4,21,1,0)
This field contains the LAB ORDER number for this test.  The construct
"^DD",63,63.52,4,21,2,0)
of this free text field is:  LR-Lab order number-XXXX - where XXXX
"^DD",63,63.52,4,21,3,0)
is the Julian date.
"^DD",63,63.52,4,"DT")
3051123
"^DD",63,63.52,5,0)
ORDER TYPE^*P64.061'^LAB(64.061,^0;5^S DIC("S")="I $P(^(0),U,5)=""0065""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.52,5,3)
Select entry from HL7 table 0065.
"^DD",63,63.52,5,12)
Select entries for the HL7 table 0065.
"^DD",63,63.52,5,12.1)
S DIC("S")="I $P(^(0),U,5)=""0065"""
"^DD",63,63.52,5,21,0)
^.001^3^3^3051123^^
"^DD",63,63.52,5,21,1,0)
This field contains information about how the test order was genera
"^DD",63,63.52,5,21,2,0)
selection must be made from HL7 Table 0065 entries.  This field indicates if the ordered test was part of the original order, an add-on, or reflexed per
"^DD",63,63.52,5,21,3,0)
clinical protocol.
"^DD",63,63.52,5,"DT")
3051123
"^DD",63,63.52,6,0)
ORDERING PROVIDER LOCAL^P200'^VA(200,^0;6^Q
"^DD",63,63.52,6,21,0)
^^2^2^3051123^
"^DD",63,63.52,6,21,1,0)
The pointer to the NEW PERSON file if the original order was placed on the 
"^DD",63,63.52,6,21,2,0)
local system.  This field will be empty if order is placed via LEDI.
"^DD",63,63.52,6,"DT")
3051123
"^DD",63,63.52,7,0)
ORDERING PROVIDER REMOTE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",63,63.52,7,3)
Answer must be 1-80 characters in length.
"^DD",63,63.52,7,21,0)
^^3^3^3051123^
"^DD",63,63.52,7,21,1,0)
If this test is ordered by a provider from a remote system (not local
"^DD",63,63.52,7,21,2,0)
system), the names containeed in the HL7 message will be stored in 
"^DD",63,63.52,7,21,3,0)
this field.
"^DD",63,63.52,7,"DT")
3051123
"^DD",63,63.52,8,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;8^Q
"^DD",63,63.52,8,21,0)
^^1^1^3051123^
"^DD",63,63.52,8,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.52,8,"DT")
3051123
"^DD",63,63.52,9,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",63,63.52,9,21,0)
^^1^1^3051123^
"^DD",63,63.52,9,21,1,0)
This field contains the collection sample for this test.
"^DD",63,63.52,9,"DT")
3051123
"^DD",63,63.52,10,0)
DISPOSITION^*P64.061'^LAB(64.061,^0;10^S DIC("S")="I $P(^(0),U,5)=""0123""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.52,10,3)
Enter the disposition of this ordered test.
"^DD",63,63.52,10,12)
Select disposition based on HL7 Table 0123 status codes
"^DD",63,63.52,10,12.1)
S DIC("S")="I $P(^(0),U,5)=""0123"""
"^DD",63,63.52,10,21,0)
^^2^2^3071005^
"^DD",63,63.52,10,21,1,0)
Maintains the disposition of the ordered test.  It will be used to value 
"^DD",63,63.52,10,21,2,0)
the test disposition in HL7 messaging, specifically OBR-25.
"^DD",63,63.52,10,"DT")
3071005
"^DD",63,63.52,11,0)
DISPOSITION DATE/TIME^D^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.52,11,3)
Enter the date and time this test is dispositioned.
"^DD",63,63.52,11,21,0)
^^2^2^3071005^
"^DD",63,63.52,11,21,1,0)
Stores the date and time that a lab user or the system dispositioned this 
"^DD",63,63.52,11,21,2,0)
test.
"^DD",63,63.52,11,"DT")
3071005
"^DD",63,63.52,12,0)
DISPOSITION BY^P200'^VA(200,^0;12^Q
"^DD",63,63.52,12,3)
User who dispositioned this test.
"^DD",63,63.52,12,21,0)
^^1^1^3071005^
"^DD",63,63.52,12,21,1,0)
Store the user who entered the disposition of this test.
"^DD",63,63.52,12,"DT")
3071005
"^DD",63,63.52,13,0)
LAB TEST ORDERED^P60'^LAB(60,^0;13^Q
"^DD",63,63.52,13,3)
Enter the ordered laboratory test.
"^DD",63,63.52,13,21,0)
^^1^1^3071005^
"^DD",63,63.52,13,21,1,0)
Contains the ordered laboratory test associated with the ordered NLT code.
"^DD",63,63.52,13,"DT")
3071005
"^DD",63,63.52,14,0)
PARENT TEST^P60'^LAB(60,^0;14^Q
"^DD",63,63.52,14,3)
Enter the parent ordered laboratory test if any.
"^DD",63,63.52,14,21,0)
^^2^2^3071005^
"^DD",63,63.52,14,21,1,0)
If this test is a reflex test this indicates the ordered test that is 
"^DD",63,63.52,14,21,2,0)
associated with the reflex test.
"^DD",63,63.52,14,"DT")
3071005
"^DD",63,63.52,15,0)
PARENT NLT^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",63,63.52,15,3)
Answer must be 1-11 characters in length.
"^DD",63,63.52,15,21,0)
^^2^2^3071005^
"^DD",63,63.52,15,21,1,0)
Contains the order NLT code associated with the parent test when the 
"^DD",63,63.52,15,21,2,0)
ordered test is a reflex test.
"^DD",63,63.52,15,"DT")
3071005
"^DD",63,63.53,0)
ORDERED TEST SUB-FIELD^^15^15
"^DD",63,63.53,0,"DT")
3071005
"^DD",63,63.53,0,"IX","B",63.53,.01)

"^DD",63,63.53,0,"NM","ORDERED TEST")

"^DD",63,63.53,0,"UP")
63.08
"^DD",63,63.53,.01,0)
ORDERED TEST^FO^^0;1^K:$L(X)>15!($L(X)<5) X
"^DD",63,63.53,.01,1,0)
^.1
"^DD",63,63.53,.01,1,1,0)
63.53^B
"^DD",63,63.53,.01,1,1,1)
S ^LR(DA(2),"SP",DA(1),"ORUT","B",$E(X,1,30),DA)=""
"^DD",63,63.53,.01,1,1,2)
K ^LR(DA(2),"SP",DA(1),"ORUT","B",$E(X,1,30),DA)
"^DD",63,63.53,.01,2)
S Y(0)=Y N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.53,.01,2.1)
N ZZY S ZZY=$O(^LAM("C",Y_" ",0)) I ZZY,($D(^LAM(ZZY,0))#2) S Y=$P(^(0),U)
"^DD",63,63.53,.01,3)
Answer must be 5-15 characters in length.
"^DD",63,63.53,.01,21,0)
^^3^3^3070803^
"^DD",63,63.53,.01,21,1,0)
Contains the ordered test NLT code requested by the clinical provider.  
"^DD",63,63.53,.01,21,2,0)
If this test is a panel, all atomic tests within the panel will be 
"^DD",63,63.53,.01,21,3,0)
associated with the ordered test using this NLT code.
"^DD",63,63.53,.01,"DT")
3051123
"^DD",63,63.53,2,0)
ORDERED URGENCY^*P62.05'^LAB(62.05,^0;2^S DIC("S")="I +Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.53,2,3)
Select urgency for this test.
"^DD",63,63.53,2,12)
Prevent selection of WKLD designated urgencies.
"^DD",63,63.53,2,12.1)
S DIC("S")="I +Y<50"
"^DD",63,63.53,2,21,0)
^^1^1^3051123^
"^DD",63,63.53,2,21,1,0)
This field contains the urgency for this ordered test.
"^DD",63,63.53,2,"DT")
3051123
"^DD",63,63.53,3,0)
CPRS ORDER #^P100'^OR(100,^0;3^Q
"^DD",63,63.53,3,21,0)
^^2^2^3051123^
"^DD",63,63.53,3,21,1,0)
This field contains the pointer to CPRS ORDER (#100) file.  This field
"^DD",63,63.53,3,21,2,0)
is only populated when the original order is placed on the local system.
"^DD",63,63.53,3,"DT")
3051123
"^DD",63,63.53,4,0)
LAB ORDER #^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",63,63.53,4,3)
Answer must be 1-20 characters in length.
"^DD",63,63.53,4,21,0)
^.001^3^3^3051123^^
"^DD",63,63.53,4,21,1,0)
This field contains the LAB ORDER number for this test.  The construct
"^DD",63,63.53,4,21,2,0)
of this free text field is:  LR-Lab order number-XXXX - where XXXX is 
"^DD",63,63.53,4,21,3,0)
the Julian date.
"^DD",63,63.53,4,"DT")
3051123
"^DD",63,63.53,5,0)
ORDER TYPE^*P64.061'^LAB(64.061,^0;5^S DIC("S")="I $P(^(0),U,5)=""0065""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.53,5,12)
Select entries for the HL7 table 0065.
"^DD",63,63.53,5,12.1)
S DIC("S")="I $P(^(0),U,5)=""0065"""
"^DD",63,63.53,5,21,0)
^.001^4^4^3051123^^
"^DD",63,63.53,5,21,1,0)
This field contains information about how the test order was generated.  The
"^DD",63,63.53,5,21,2,0)
selection must be made from HL7 Table 0065 entries.  This field indicates
"^DD",63,63.53,5,21,3,0)
if the ordered test was part of the original order, an add-on or reflexed
"^DD",63,63.53,5,21,4,0)
per clinical protocol.
"^DD",63,63.53,5,"DT")
3051123
"^DD",63,63.53,6,0)
ORDERING PROVIDER LOCAL^P200'^VA(200,^0;6^Q
"^DD",63,63.53,6,21,0)
^.001^3^3^3051123^^
"^DD",63,63.53,6,21,1,0)
The pointer to the NEW PERSON file if the original order was placed
"^DD",63,63.53,6,21,2,0)
on the local system.  This field will be empty if order is placed
"^DD",63,63.53,6,21,3,0)
via LEDI.
"^DD",63,63.53,6,"DT")
3051123
"^DD",63,63.53,7,0)
ORDERING PROVIDER REMOTE^F^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",63,63.53,7,3)
Answer must be 1-80 characters in length.
"^DD",63,63.53,7,21,0)
^^3^3^3051123^
"^DD",63,63.53,7,21,1,0)
If this test is ordered by a provider from a remote system (not
"^DD",63,63.53,7,21,2,0)
local sytem), the names contained in the HL7 message will be stored
"^DD",63,63.53,7,21,3,0)
in this field.
"^DD",63,63.53,7,"DT")
3051123
"^DD",63,63.53,8,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;8^Q
"^DD",63,63.53,8,21,0)
^^1^1^3051123^
"^DD",63,63.53,8,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.53,8,"DT")
3051123
"^DD",63,63.53,9,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",63,63.53,9,21,0)
^^1^1^3051123^
"^DD",63,63.53,9,21,1,0)
This field contains the collection sample for this test.
"^DD",63,63.53,9,"DT")
3051123
"^DD",63,63.53,10,0)
DISPOSITION^*P64.061'^LAB(64.061,^0;10^S DIC("S")="I $P(^(0),U,5)=""0123""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",63,63.53,10,3)
Enter the disposition of this ordered test.
"^DD",63,63.53,10,12)
Select disposition based on HL7 Table 0123 status codes
"^DD",63,63.53,10,12.1)
S DIC("S")="I $P(^(0),U,5)=""0123"""
"^DD",63,63.53,10,21,0)
^.001^2^2^3071005^^
"^DD",63,63.53,10,21,1,0)
Maintains the disposition of the ordered test.  It will be used to value 
"^DD",63,63.53,10,21,2,0)
the test disposition in HL7 messaging, specifically OBR-25.
"^DD",63,63.53,10,"DT")
3071005
"^DD",63,63.53,11,0)
DISPOSITION DATE/TIME^D^^0;11^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.53,11,3)
Enter the date and time this test is dispositioned.
"^DD",63,63.53,11,21,0)
^^2^2^3071005^
"^DD",63,63.53,11,21,1,0)
Stores the date and time that a lab user or the system dispositioned this 
"^DD",63,63.53,11,21,2,0)
test.
"^DD",63,63.53,11,"DT")
3071005
"^DD",63,63.53,12,0)
DISPOSITION BY^P200'^VA(200,^0;12^Q
"^DD",63,63.53,12,3)
User who dispositioned this test.
"^DD",63,63.53,12,21,0)
^^1^1^3071005^
"^DD",63,63.53,12,21,1,0)
Store the user who entered the disposition of this test.
"^DD",63,63.53,12,"DT")
3071005
"^DD",63,63.53,13,0)
LAB TEST ORDERED^P60'^LAB(60,^0;13^Q
"^DD",63,63.53,13,3)
Enter the ordered laboratory test.
"^DD",63,63.53,13,21,0)
^^1^1^3071005^
"^DD",63,63.53,13,21,1,0)
Contains the ordered laboratory test associated with the ordered NLT code.
"^DD",63,63.53,13,"DT")
3071005
"^DD",63,63.53,14,0)
PARENT TEST^P60'^LAB(60,^0;14^Q
"^DD",63,63.53,14,3)
Enter the parent ordered laboratory test if any.
"^DD",63,63.53,14,21,0)
^^2^2^3071005^
"^DD",63,63.53,14,21,1,0)
If this test is a reflex test this indicates the ordered test that is 
"^DD",63,63.53,14,21,2,0)
associated with the reflex test.
"^DD",63,63.53,14,"DT")
3071005
"^DD",63,63.53,15,0)
PARENT NLT^F^^0;15^K:$L(X)>11!($L(X)<1) X
"^DD",63,63.53,15,3)
Answer must be 1-11 characters in length.
"^DD",63,63.53,15,21,0)
^^2^2^3071005^
"^DD",63,63.53,15,21,1,0)
Contains the order NLT code associated with the parent test when the 
"^DD",63,63.53,15,21,2,0)
ordered test is a reflex test.
"^DD",63,63.53,15,"DT")
3071005
"^DD",63,63.539,0)
MICROBIOLOGY AUDIT SUB-FIELD^^7^7
"^DD",63,63.539,0,"DT")
3050421
"^DD",63,63.539,0,"IX","B",63.539,.01)

"^DD",63,63.539,0,"NM","MICROBIOLOGY AUDIT")

"^DD",63,63.539,0,"UP")
63.05
"^DD",63,63.539,.01,0)
MICROBIOLOGY AUDIT^D^^0;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.539,.01,1,0)
^.1
"^DD",63,63.539,.01,1,1,0)
63.539^B
"^DD",63,63.539,.01,1,1,1)
S ^LR(DA(2),"MI",DA(1),32,"B",$E(X,1,30),DA)=""
"^DD",63,63.539,.01,1,1,2)
K ^LR(DA(2),"MI",DA(1),32,"B",$E(X,1,30),DA)
"^DD",63,63.539,.01,21,0)
^.001^1^1^3070828^^
"^DD",63,63.539,.01,21,1,0)
The Date/Time the audit log added this entry.
"^DD",63,63.539,.01,23,0)
^^1^1^3070828^
"^DD",63,63.539,.01,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,.01,"DT")
3041019
"^DD",63,63.539,1,0)
LREDIT^RD^^0;2^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",63,63.539,1,3)
Enter the date the test is being edited
"^DD",63,63.539,1,21,0)
^.001^3^3^3070828^^
"^DD",63,63.539,1,21,1,0)
This field contains the date that the test was
"^DD",63,63.539,1,21,2,0)
edited.  This is the entry point for the audit
"^DD",63,63.539,1,21,3,0)
trail for this particular test.
"^DD",63,63.539,1,23,0)
^^1^1^3070828^
"^DD",63,63.539,1,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,1,"DT")
3041019
"^DD",63,63.539,2,0)
LAB TECH^RP200'^VA(200,^0;3^Q
"^DD",63,63.539,2,3)
ENTER THE NAME OF THE TECHNICIAN EDITING THE TEST RESULTS
"^DD",63,63.539,2,21,0)
^^2^2^3070828^
"^DD",63,63.539,2,21,1,0)
This field contains the ID of the lab technician who is editing the
"^DD",63,63.539,2,21,2,0)
results for this test.
"^DD",63,63.539,2,23,0)
^.001^1^1^3070828^^
"^DD",63,63.539,2,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,2,"DT")
3041019
"^DD",63,63.539,3,0)
EDIT TYPE^RS^1:ROUTINE EDIT;2:SUPPLEMENTAL;3:CORRECTION;^0;4^Q
"^DD",63,63.539,3,3)
ENTER TYPE OF EDIT
"^DD",63,63.539,3,21,0)
^^2^2^3070828^
"^DD",63,63.539,3,21,1,0)
The EDIT TYPE field is used to identify the type of revision being done to
"^DD",63,63.539,3,21,2,0)
the lab test results.
"^DD",63,63.539,3,23,0)
^^1^1^3070828^
"^DD",63,63.539,3,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,3,"DT")
3041019
"^DD",63,63.539,4,0)
EDIT JUSTIFICATION^RF^^0;5^K:$L(X)>120!($L(X)<1) X
"^DD",63,63.539,4,3)
Answer must be 1-120 characters in length.
"^DD",63,63.539,4,21,0)
^^2^2^3070828^
"^DD",63,63.539,4,21,1,0)
Used by the technician to record the reason the lab data is being revised
"^DD",63,63.539,4,21,2,0)
or modified.
"^DD",63,63.539,4,23,0)
^^1^1^3070828^
"^DD",63,63.539,4,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,4,"DT")
3041019
"^DD",63,63.539,6,0)
LAB AREA^S^1:BACTERIOLOGY;5:PARASITOLOGY;8:MYCOLOGY;11:MYCOBACTERIOLOGY;16:VIROLOGY;^1;2^Q
"^DD",63,63.539,6,3)
ENTER LAB AREA CODE
"^DD",63,63.539,6,21,0)
^^4^4^3070828^
"^DD",63,63.539,6,21,1,0)
Since the audit data is not being stored under each of the lab data file
"^DD",63,63.539,6,21,2,0)
sections, but rather with the individual test results, we want to be able
"^DD",63,63.539,6,21,3,0)
to identify the lab area of the test for reporting purposes without having
"^DD",63,63.539,6,21,4,0)
to do a look-up for that data.
"^DD",63,63.539,6,23,0)
^^1^1^3070828^
"^DD",63,63.539,6,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,6,"DT")
3041019
"^DD",63,63.539,7,0)
FACILITY^RP4'^DIC(4,^1;3^Q
"^DD",63,63.539,7,3)
ENTER THE ID OF THE FACILITY DOING THE EDITING.
"^DD",63,63.539,7,21,0)
^^2^2^3070828^
"^DD",63,63.539,7,21,1,0)
This field is used to record the facility at which this test is being
"^DD",63,63.539,7,21,2,0)
edited.
"^DD",63,63.539,7,23,0)
^^1^1^3070828^
"^DD",63,63.539,7,23,1,0)
Distributed by LR*5.2*350
"^DD",63,63.539,7,"DT")
3041019
"^DD",63,63.812,.06,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;6^Q
"^DD",63,63.812,.06,21,0)
^.001^1^1^3070208^^^
"^DD",63,63.812,.06,21,1,0)
This field contains the topography location for this test.
"^DD",63,63.812,.06,"DT")
3070208
"^DD",63,63.812,.07,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;7^Q
"^DD",63,63.812,.07,21,0)
^.001^1^1^3070208^^^
"^DD",63,63.812,.07,21,1,0)
This field contains the collection sample for this test. 
"^DD",63,63.812,.07,"DT")
3070208
"^DD",63,63.902,.06,0)
SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;6^Q
"^DD",63,63.902,.06,21,0)
^^1^1^3051125^
"^DD",63,63.902,.06,21,1,0)
This field contains the topography location for this test. 
"^DD",63,63.902,.06,"DT")
3051125
"^DD",63,63.902,.07,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;7^Q
"^DD",63,63.902,.07,21,0)
^^1^1^3051125^
"^DD",63,63.902,.07,21,1,0)
This field contains the collection sample for this test.  
"^DD",63,63.902,.07,"DT")
3051125
"^DD",64,64,63,0)
MI/AP DATABASE CODE^*P64.061'X^LAB(64.061,^63;1^N DIC,Y,LRX S LRX=X S:'$G(LRFPRIV) DIC("S")="I $P(^(0),U)[""Rpt Date""" S DIC=64.061,DIC(0)="NM" D ^DIC K:Y'>0 X I $D(X) S X=+Y
"^DD",64,64,63,3)
Select 'Rpt Date' for subscript of ordered test
"^DD",64,64,63,12)
Select only report complete date entries
"^DD",64,64,63,12.1)
S DIC("S")="I $P(^(0),U)[""Rpt Date""" S DIC=64.061,DIC(0)="NM"
"^DD",64,64,63,21,0)
^^3^3^3070228^
"^DD",64,64,63,21,1,0)
Used for Microbiology ("MI" subscript) and Anatomic Pathology ("SP", "EM",
"^DD",64,64,63,21,2,0)
"CY" subscripts) to link the reportable components of a report with its
"^DD",64,64,63,21,3,0)
corresponding orderable test.
"^DD",64,64,63,23,0)
^.001^45^45^3070228^^
"^DD",64,64,63,23,1,0)
Used by LDSI II message building software to determine which reports
"^DD",64,64,63,23,2,0)
should be contained out-going HL7 messages.
"^DD",64,64,63,23,3,0)
 
"^DD",64,64,63,23,4,0)
Example 1:
"^DD",64,64,63,23,5,0)
 
"^DD",64,64,63,23,6,0)
Select LABORATORY TEST NAME:    CULTURE & SUSCEPTIBILITY 
"^DD",64,64,63,23,7,0)
NATIONAL VA LAB CODE: Culture & Sensitivity// 
"^DD",64,64,63,23,8,0)
MI/AP DATABASE CODE: MI Bacteria Rpt Date//
"^DD",64,64,63,23,9,0)
 
"^DD",64,64,63,23,10,0)
Orderable test in LABORATORY TEST (#60) is "Culture and Sensitivity."
"^DD",64,64,63,23,11,0)
 
"^DD",64,64,63,23,12,0)
The "NATIONAL VA LAB CODE" (#64) field is linked to "Culture & 
"^DD",64,64,63,23,13,0)
Sensitivity".
"^DD",64,64,63,23,14,0)
 
"^DD",64,64,63,23,15,0)
Now the "Culture & Sensitivity" code in WKLD CODE (#64) field "MI/AP 
"^DD",64,64,63,23,16,0)
DATABASE CODE"  (#63) field would point to "MI Bacteriology Rpt Date"
"^DD",64,64,63,23,17,0)
 
"^DD",64,64,63,23,18,0)
 
"^DD",64,64,63,23,19,0)
Example 2:
"^DD",64,64,63,23,20,0)
 
"^DD",64,64,63,23,21,0)
Select LABORATORY TEST NAME:    VIRAL CULTURE
"^DD",64,64,63,23,22,0)
NATIONAL VA LAB CODE: Culture Viral// 
"^DD",64,64,63,23,23,0)
MI/AP DATABASE CODE: MI Virology Rpt Date//
"^DD",64,64,63,23,24,0)
 
"^DD",64,64,63,23,25,0)
Orderable test in LABORORATORY TEST (#60) is "VIRAL CULTURE."
"^DD",64,64,63,23,26,0)
 
"^DD",64,64,63,23,27,0)
The "NATIONAL VA LAB CODE" (#64) field is linked to "Culture Viral."
"^DD",64,64,63,23,28,0)
 
"^DD",64,64,63,23,29,0)
Now the "Culture Viral" code in WKLD CODE (#64) file field "MI/AP 
"^DD",64,64,63,23,30,0)
DATABASE" field (#63) is linked to "MI Virology Rpt Date"
"^DD",64,64,63,23,31,0)
 
"^DD",64,64,63,23,32,0)
 
"^DD",64,64,63,23,33,0)
Example 3:
"^DD",64,64,63,23,34,0)
 
"^DD",64,64,63,23,35,0)
Select LABORATORY TEST NAME: TISSUE EXAM
"^DD",64,64,63,23,36,0)
NATIONAL VA LAB CODE: Surgical Pathology Tissue Exam// 
"^DD",64,64,63,23,37,0)
  MI/AP DATABASE CODE: SP Complete Rpt Date//
"^DD",64,64,63,23,38,0)
 
"^DD",64,64,63,23,39,0)
Orderable test in LABORORATORY TEST (#60) is "TISSUE EXAM."
"^DD",64,64,63,23,40,0)
 
"^DD",64,64,63,23,41,0)
The "NATIONAL VA LAB CODE" (#64) field is linked to "Surgical Pathology 
"^DD",64,64,63,23,42,0)
Tissue Exam."
"^DD",64,64,63,23,43,0)
 
"^DD",64,64,63,23,44,0)
Now the "Culture Viral" code in WKLD CODE (#64) file field "MI/AP 
"^DD",64,64,63,23,45,0)
DATABASE" field (#63) is linked to "SP Complete Rpt Date"
"^DD",64,64,63,"DT")
3070227
"^DD",64.061,64.061,0)
FIELD^^.001^19
"^DD",64.061,64.061,0,"DDA")
N
"^DD",64.061,64.061,0,"DT")
3070920
"^DD",64.061,64.061,0,"ID",7)
W "   ",@("$P($P($C(59)_$S($D(^DD(64.061,7,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,7)_"":"",2),$C(59),1)")
"^DD",64.061,64.061,0,"ID",8)
W "   ",$P(^(0),U,8)
"^DD",64.061,64.061,0,"IX","AC",64.061,5)

"^DD",64.061,64.061,0,"IX","B",64.061,.01)

"^DD",64.061,64.061,0,"IX","C",64.061,.01)

"^DD",64.061,64.061,0,"IX","D",64.061,2)

"^DD",64.061,64.061,0,"IX","E",64.061,1)

"^DD",64.061,64.061,0,"IX","F",64.061,3)

"^DD",64.061,64.061,0,"IX","G",64.061,7)

"^DD",64.061,64.061,0,"IX","VR",64.061,.01)

"^DD",64.061,64.061,0,"NM","LAB ELECTRONIC CODES")

"^DD",64.061,64.061,0,"PT",61,.09)

"^DD",64.061,64.061,0,"PT",61,.0961)

"^DD",64.061,64.061,0,"PT",61,22)

"^DD",64.061,64.061,0,"PT",61.2,22)

"^DD",64.061,64.061,0,"PT",62,22)

"^DD",64.061,64.061,0,"PT",62.05,4)

"^DD",64.061,64.061,0,"PT",62.47,.03)

"^DD",64.061,64.061,0,"PT",62.801,1.13)

"^DD",64.061,64.061,0,"PT",62.801,1.23)

"^DD",64.061,64.061,0,"PT",62.801,2.13)

"^DD",64.061,64.061,0,"PT",62.801,2.23)

"^DD",64.061,64.061,0,"PT",62.801,2.33)

"^DD",64.061,64.061,0,"PT",62.85,.05)

"^DD",64.061,64.061,0,"PT",62.9001,1.15)

"^DD",64.061,64.061,0,"PT",62.9001,1.25)

"^DD",64.061,64.061,0,"PT",62.9001,2.15)

"^DD",64.061,64.061,0,"PT",62.9001,2.25)

"^DD",64.061,64.061,0,"PT",62.9001,2.35)

"^DD",64.061,64.061,0,"PT",63.07,5)

"^DD",64.061,64.061,0,"PT",63.07,10)

"^DD",64.061,64.061,0,"PT",63.5,5)

"^DD",64.061,64.061,0,"PT",63.5,10)

"^DD",64.061,64.061,0,"PT",63.51,5)

"^DD",64.061,64.061,0,"PT",63.51,10)

"^DD",64.061,64.061,0,"PT",63.52,5)

"^DD",64.061,64.061,0,"PT",63.52,10)

"^DD",64.061,64.061,0,"PT",63.53,5)

"^DD",64.061,64.061,0,"PT",63.53,10)

"^DD",64.061,64.061,0,"PT",64,25.2)

"^DD",64.061,64.061,0,"PT",64,25.3)

"^DD",64.061,64.061,0,"PT",64.02,.01)

"^DD",64.061,64.061,0,"PT",64.02,1)

"^DD",64.061,64.061,0,"PT",64.061,63.3)

"^DD",64.061,64.061,0,"PT",64.8117,64)

"^DD",64.061,64.061,0,"PT",69.6,6)

"^DD",64.061,64.061,0,"PT",69.64,5)

"^DD",64.061,64.061,0,"PT",95.3,1.5)

"^DD",64.061,64.061,0,"PT",95.3,1.6)

"^DD",64.061,64.061,0,"PT",95.3,1.7)

"^DD",64.061,64.061,0,"PT",95.3,2)

"^DD",64.061,64.061,0,"PT",95.3,3)

"^DD",64.061,64.061,0,"PT",95.3,3.1)

"^DD",64.061,64.061,0,"PT",95.3,4)

"^DD",64.061,64.061,0,"PT",95.3,5)

"^DD",64.061,64.061,0,"PT",95.3,7)

"^DD",64.061,64.061,0,"PT",95.3,10)

"^DD",64.061,64.061,0,"VRPK")
LR
"^DD",64.061,64.061,0,"VRRV")
2.14
"^DD",64.061,64.061,.001,0)
SEQUENCE^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",64.061,64.061,.001,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",64.061,64.061,.001,"DT")
3070920
"^DD",64.061,64.061,.01,0)
NAME^RF^^0;1^K:$L(X)>70!($L(X)<1) X
"^DD",64.061,64.061,.01,1,0)
^.1
"^DD",64.061,64.061,.01,1,1,0)
64.061^B^MUMPS
"^DD",64.061,64.061,.01,1,1,1)
S ^LAB(64.061,"B",$E(X,1,70),DA)=""
"^DD",64.061,64.061,.01,1,1,2)
K ^LAB(64.061,"B",$E(X,1,70),DA)
"^DD",64.061,64.061,.01,1,1,"DT")
2991228
"^DD",64.061,64.061,.01,1,2,0)
64.061^C^MUMPS
"^DD",64.061,64.061,.01,1,2,1)
D UP^LRXREF S ^LAB(64.061,"C",X,DA)=""
"^DD",64.061,64.061,.01,1,2,2)
D UP^LRXREF K ^LAB(64.061,"C",X,DA)
"^DD",64.061,64.061,.01,1,2,"%D",0)
^^5^5^2991228^^
"^DD",64.061,64.061,.01,1,2,"%D",1,0)
This MUMPS cross reference stores the electronic code name in upper case
"^DD",64.061,64.061,.01,1,2,"%D",2,0)
and is used for look-up and sorting purposes.  The format for the cross
"^DD",64.061,64.061,.01,1,2,"%D",3,0)
reference stored is below.
"^DD",64.061,64.061,.01,1,2,"%D",4,0)
 
"^DD",64.061,64.061,.01,1,2,"%D",5,0)
   ^LAB(64.061,"C",Code Name in Upper Case,IEN) = ""
"^DD",64.061,64.061,.01,1,2,"DT")
2961205
"^DD",64.061,64.061,.01,1,3,0)
64.061^VR^MUMPS
"^DD",64.061,64.061,.01,1,3,1)
S ^LAB(64.061,"VR")=$G(^LAB(64.061,"VR"))
"^DD",64.061,64.061,.01,1,3,2)
Q
"^DD",64.061,64.061,.01,1,3,3)
This cross reference tracks version numbers
"^DD",64.061,64.061,.01,1,3,"%D",0)
^^1^1^3010102^
"^DD",64.061,64.061,.01,1,3,"%D",1,0)
This cross reference is set during file installation or updates.
"^DD",64.061,64.061,.01,1,3,"DT")
3010102
"^DD",64.061,64.061,.01,3)
Answer must be 1-70 characters in length.
"^DD",64.061,64.061,.01,"DEL",1,0)
I 1
"^DD",64.061,64.061,.01,"DT")
3060315
"^DD",64.061,64.061,1,0)
LOINC ABBR^F^^0;2^K:$L(X)>70!($L(X)<1) X
"^DD",64.061,64.061,1,1,0)
^.1
"^DD",64.061,64.061,1,1,1,0)
64.061^E^MUMPS
"^DD",64.061,64.061,1,1,1,1)
S ^LAB(64.061,"E",X,DA)=""
"^DD",64.061,64.061,1,1,1,2)
K ^LAB(64.061,"E",X,DA)
"^DD",64.061,64.061,1,1,1,"DT")
2981009
"^DD",64.061,64.061,1,3)
Answer must be 1-70 characters in length.
"^DD",64.061,64.061,1,"DT")
3030911
"^DD",64.061,64.061,2,0)
HL7 ABBR^FI^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",64.061,64.061,2,1,0)
^.1
"^DD",64.061,64.061,2,1,1,0)
64.061^D
"^DD",64.061,64.061,2,1,1,1)
S ^LAB(64.061,"D",$E(X,1,30),DA)=""
"^DD",64.061,64.061,2,1,1,2)
K ^LAB(64.061,"D",$E(X,1,30),DA)
"^DD",64.061,64.061,2,1,1,"%D",0)
^^1^1^2970519^
"^DD",64.061,64.061,2,1,1,"%D",1,0)
Quick reference to find entry by the HL7 code
"^DD",64.061,64.061,2,1,1,"DT")
2970519
"^DD",64.061,64.061,2,3)
Answer must be 1-10 characters in length.
"^DD",64.061,64.061,2,"DT")
3010824
"^DD",64.061,64.061,3,0)
LAB ABBR^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",64.061,64.061,3,1,0)
^.1
"^DD",64.061,64.061,3,1,1,0)
64.061^F
"^DD",64.061,64.061,3,1,1,1)
S ^LAB(64.061,"F",$E(X,1,30),DA)=""
"^DD",64.061,64.061,3,1,1,2)
K ^LAB(64.061,"F",$E(X,1,30),DA)
"^DD",64.061,64.061,3,1,1,"%D",0)
^^1^1^2970616^
"^DD",64.061,64.061,3,1,1,"%D",1,0)
Quick reference to find entry by lab code.
"^DD",64.061,64.061,3,1,1,"DT")
2970616
"^DD",64.061,64.061,3,3)
Answer must be 1-10 characters in length.
"^DD",64.061,64.061,3,"DT")
2970708
"^DD",64.061,64.061,4,0)
ASSOCIATED FILES^64.614AV^^7;0
"^DD",64.061,64.061,5,0)
HL7 TABLE^F^^0;5^K:$L(X)>10!($L(X)<2) X
"^DD",64.061,64.061,5,1,0)
^.1
"^DD",64.061,64.061,5,1,1,0)
64.061^AC
"^DD",64.061,64.061,5,1,1,1)
S ^LAB(64.061,"AC",$E(X,1,30),DA)=""
"^DD",64.061,64.061,5,1,1,2)
K ^LAB(64.061,"AC",$E(X,1,30),DA)
"^DD",64.061,64.061,5,1,1,3)
HL7 table X-Ref
"^DD",64.061,64.061,5,1,1,"%D",0)
^^1^1^3051221^
"^DD",64.061,64.061,5,1,1,"%D",1,0)
This X-reference is used to determine the HL7 table source.
"^DD",64.061,64.061,5,1,1,"DT")
3051221
"^DD",64.061,64.061,5,3)
Answer must be 2-10 characters in length.
"^DD",64.061,64.061,5,"DT")
3051221
"^DD",64.061,64.061,6,0)
ATTRIBUTE^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",64.061,64.061,6,3)
Answer must be 1-30 characters in length.
"^DD",64.061,64.061,6,"DT")
3001113
"^DD",64.061,64.061,7,0)
TYPE^S^U:UPDATE/STATUS;S:SPECIMEN;P:PRIORITY;E:EVENT;M:MEASUREMENTS;G:GENERAL;C:CHALLENGE;PR:PROPERTY;A:ADJUSTMENT;CL:CLASS;^0;7^Q
"^DD",64.061,64.061,7,1,0)
^.1
"^DD",64.061,64.061,7,1,1,0)
64.061^G
"^DD",64.061,64.061,7,1,1,1)
S ^LAB(64.061,"G",$E(X,1,30),DA)=""
"^DD",64.061,64.061,7,1,1,2)
K ^LAB(64.061,"G",$E(X,1,30),DA)
"^DD",64.061,64.061,7,1,1,"%D",0)
^^1^1^2981008^
"^DD",64.061,64.061,7,1,1,"%D",1,0)
To check for correct entry according to type.
"^DD",64.061,64.061,7,1,1,"DT")
2981008
"^DD",64.061,64.061,7,"DT")
3030910
"^DD",64.061,64.061,8,0)
DESCRIPTION^F^^0;8^K:$L(X)>40!($L(X)<2) X
"^DD",64.061,64.061,8,3)
Answer must be 2-40 characters in length.
"^DD",64.061,64.061,8,"DT")
3030911
"^DD",64.061,64.061,9,0)
LOINC TABLE^NJ3,0^^0;9^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",64.061,64.061,9,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",64.061,64.061,9,21,0)
^^2^2^2990119^^
"^DD",64.061,64.061,9,21,1,0)
This field contains the number of the LOINC table from the
"^DD",64.061,64.061,9,21,2,0)
LOINC Users' Guide.
"^DD",64.061,64.061,9,"DT")
2980921
"^DD",64.061,64.061,10,0)
SUBTYPE^P64.062'^LAB(64.062,^0;10^Q
"^DD",64.061,64.061,10,1,0)
^.1
"^DD",64.061,64.061,10,1,1,0)
^^TRIGGER^64.061^11
"^DD",64.061,64.061,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(64.061,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y X ^DD(64.061,10,1,1,1.1) S DIH=$G(^LAB(64.061,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=64.061,DIG=11 D ^DICR
"^DD",64.061,64.061,10,1,1,1.1)
S X=DIV S I(0,0)=$G(D0),D0=DIV S:'D0!'$D(^LAB(64.062,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(64.062,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0)
"^DD",64.061,64.061,10,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(64.061,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(64.061,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=64.061,DIG=11 D ^DICR
"^DD",64.061,64.061,10,1,1,"CREATE VALUE")
SUBTYPE:ABBR
"^DD",64.061,64.061,10,1,1,"DELETE VALUE")
@
"^DD",64.061,64.061,10,1,1,"FIELD")
`11
"^DD",64.061,64.061,10,21,0)
^^1^1^3001109^
"^DD",64.061,64.061,10,21,1,0)
This field is used to further define properties. Can be used as screen element.
"^DD",64.061,64.061,10,"DT")
3001109
"^DD",64.061,64.061,11,0)
SCREEN^FI^^0;11^K:$L(X)>3!($L(X)<1) X
"^DD",64.061,64.061,11,3)
Answer must be 1-3 characters in length
"^DD",64.061,64.061,11,5,1,0)
64.061^10^1
"^DD",64.061,64.061,11,21,0)
^^3^3^3001109^
"^DD",64.061,64.061,11,21,1,0)
This field contains a screen value triggered by SUBTYPE (#10) field. Look
"^DD",64.061,64.061,11,21,2,0)
can be done on this file by indicating how the returned value should be
"^DD",64.061,64.061,11,21,3,0)
screened.
"^DD",64.061,64.061,11,"DT")
3060813
"^DD",64.061,64.061,12,0)
LEX ABBREV^F^^1;1^K:$L(X)>4!($L(X)<1) X
"^DD",64.061,64.061,12,3)
Answer must be 1-4 characters in length.
"^DD",64.061,64.061,12,21,0)
^^5^5^3060813^
"^DD",64.061,64.061,12,21,1,0)
If this entry is an SCT Hierarchical term, this field contains the 
"^DD",64.061,64.061,12,21,2,0)
Lexicon abbreviation for this concept. This abbreviation should be passed 
"^DD",64.061,64.061,12,21,3,0)
to the Lexicon (LEX API) for term look-up. This abbreviation is used by 
"^DD",64.061,64.061,12,21,4,0)
the LEX API to scope the returned values when a SCT text term's
"^DD",64.061,64.061,12,21,5,0)
SCT code is requested.
"^DD",64.061,64.061,12,"DT")
3060813
"^DD",64.061,64.061,63,0)
SUBSCRIPT^S^EM:EM;CH:CH;BB:BB;MI:MI;SP:SP;AU:AU;CY:CY;^63;1^Q
"^DD",64.061,64.061,63,1,0)
^.1^^0
"^DD",64.061,64.061,63,21,0)
^^4^4^3051214^
"^DD",64.061,64.061,63,21,1,0)
This field contains the LAB DATA (#63) file subscript. The entry 
"^DD",64.061,64.061,63,21,2,0)
indicates the subfile subscript where data should be stored.
"^DD",64.061,64.061,63,21,3,0)
 
"^DD",64.061,64.061,63,21,4,0)
When selecting database data storage location, screen on this field.
"^DD",64.061,64.061,63,"DT")
3070226
"^DD",64.061,64.061,63.1,0)
FILE/SUBFILE^F^^63;2^K:$L(X)>10!($L(X)<2) X
"^DD",64.061,64.061,63.1,3)
Answer must be 2-10 characters in length.
"^DD",64.061,64.061,63.1,21,0)
^^2^2^3051214^
"^DD",64.061,64.061,63.1,21,1,0)
This file contains the subfile where the data should be stored for this 
"^DD",64.061,64.061,63.1,21,2,0)
subscript.
"^DD",64.061,64.061,63.1,"DT")
3051214
"^DD",64.061,64.061,63.2,0)
FIELD NUMBER^F^^63;3^K:$L(X)>20!($L(X)<1) X
"^DD",64.061,64.061,63.2,3)
Answer must be 1-20 characters in length.
"^DD",64.061,64.061,63.2,21,0)
^^2^2^3051214^
"^DD",64.061,64.061,63.2,21,1,0)
This filed contains the field number of the subfile or the subscript; 
"^DD",64.061,64.061,63.2,21,2,0)
where results should be stored.
"^DD",64.061,64.061,63.2,"DT")
3051220
"^DD",64.061,64.061,63.3,0)
SCT TOP CONCEPT^*P64.061'^LAB(64.061,^63;4^S DIC("S")="I $P(^(0),U,11)=""SCT""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",64.061,64.061,63.3,12)
Select only SCT hierarchy/top concepts
"^DD",64.061,64.061,63.3,12.1)
S DIC("S")="I $P(^(0),U,11)=""SCT"""
"^DD",64.061,64.061,63.3,21,0)
^^3^3^3060131^
"^DD",64.061,64.061,63.3,21,1,0)
This field points to the SNOMED CT Top Level Concepts (hierarchy). Only 
"^DD",64.061,64.061,63.3,21,2,0)
those entries associated with SNOMED mapping may have this association 
"^DD",64.061,64.061,63.3,21,3,0)
established.
"^DD",64.061,64.061,63.3,"DT")
3060131
"^DD",64.061,64.061,63.5,0)
STORAGE FILE^NJ4,1X^^63;5^K:+X'=X!(X>62)!(X<61)!(X?.E1"."2N.N)!('$D(^DIC(X,0))) X
"^DD",64.061,64.061,63.5,3)
Type a Number between 61 and 62, 1 Decimal Digit
"^DD",64.061,64.061,63.5,21,0)
^^3^3^3060320^
"^DD",64.061,64.061,63.5,21,1,0)
This field contains the file that this SCT concept term is stored in the 
"^DD",64.061,64.061,63.5,21,2,0)
Laboratory Package number space. Enter a valid file number between 
"^DD",64.061,64.061,63.5,21,3,0)
60-69.9999.
"^DD",64.061,64.061,63.5,"DT")
3060320
"^DD",64.061,64.614,0)
ASSOCIATED FILES SUB-FIELD^^.01^1
"^DD",64.061,64.614,0,"DT")
2970108
"^DD",64.061,64.614,0,"IX","B",64.614,.01)

"^DD",64.061,64.614,0,"NM","ASSOCIATED FILES")

"^DD",64.061,64.614,0,"UP")
64.061
"^DD",64.061,64.614,.01,0)
ASSOCIATED FILES^V^^0;1^Q
"^DD",64.061,64.614,.01,1,0)
^.1
"^DD",64.061,64.614,.01,1,1,0)
64.614^B
"^DD",64.061,64.614,.01,1,1,1)
S ^LAB(64.061,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",64.061,64.614,.01,1,1,2)
K ^LAB(64.061,DA(1),7,"B",$E(X,1,30),DA)
"^DD",64.061,64.614,.01,1,1,3)
Required Index for Variable Pointer
"^DD",64.061,64.614,.01,"DT")
2970108
"^DD",64.061,64.614,.01,"V",0)
^.12P^2^2
"^DD",64.061,64.614,.01,"V",1,0)
61^Topography^1^LAB(61,^^n
"^DD",64.061,64.614,.01,"V",2,0)
62.05^Urgency^2^LAB(62.05,
"^DD",64.062,64.062,0)
FIELD^^.001^3
"^DD",64.062,64.062,0,"DDA")
N
"^DD",64.062,64.062,0,"DT")
3070920
"^DD",64.062,64.062,0,"IX","B",64.062,.01)

"^DD",64.062,64.062,0,"IX","C",64.062,.01)

"^DD",64.062,64.062,0,"NM","LAB ELECTRONIC SUBTYPES")

"^DD",64.062,64.062,0,"PT",64.061,10)

"^DD",64.062,64.062,0,"VRPK")
LR
"^DD",64.062,64.062,.001,0)
SEQUENCE^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"."1N.N) X
"^DD",64.062,64.062,.001,3)
Type a Number between .1 and 9999, 0 Decimal Digits
"^DD",64.062,64.062,.001,"DT")
3070920
"^DD",64.062,64.062,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",64.062,64.062,.01,1,0)
^.1
"^DD",64.062,64.062,.01,1,1,0)
64.062^B
"^DD",64.062,64.062,.01,1,1,1)
S ^LAB(64.062,"B",$E(X,1,30),DA)=""
"^DD",64.062,64.062,.01,1,1,2)
K ^LAB(64.062,"B",$E(X,1,30),DA)
"^DD",64.062,64.062,.01,1,2,0)
64.062^C^MUMPS
"^DD",64.062,64.062,.01,1,2,1)
S ^LAB(64.062,"C",$$UP^XLFSTR(X),DA)=""
"^DD",64.062,64.062,.01,1,2,2)
K ^LAB(64.062,"C",$$UP^XLFSTR(X),DA)
"^DD",64.062,64.062,.01,1,2,3)
Create upper case index
"^DD",64.062,64.062,.01,1,2,"%D",0)
^^1^1^3001109^
"^DD",64.062,64.062,.01,1,2,"%D",1,0)
This cross reference is used to provide an upper case lookup capability.
"^DD",64.062,64.062,.01,1,2,"DT")
3001109
"^DD",64.062,64.062,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",64.062,64.062,.01,21,0)
^^2^2^3001113^
"^DD",64.062,64.062,.01,21,1,0)
 This field contains the name or characteristic of the screen. Generally
"^DD",64.062,64.062,.01,21,2,0)
these name are related to LOINC terms describing units of measurement.
"^DD",64.062,64.062,.01,"DEL",1,0)
I 1
"^DD",64.062,64.062,.01,"DT")
3001109
"^DD",64.062,64.062,1,0)
ABBR^FI^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",64.062,64.062,1,3)
Answer must be 1-3 characters in length
"^DD",64.062,64.062,1,21,0)
^^3^3^3001113^
"^DD",64.062,64.062,1,21,1,0)
This field contains abbreviations of the subtype. Abbreviation of the
"^DD",64.062,64.062,1,21,2,0)
subtypes is also stored in LAB ELECTRONIC CODE (#64.061) file SCREEN
"^DD",64.062,64.062,1,21,3,0)
(#11) field triggered by the SUBTYPE (#10) field.
"^DD",64.062,64.062,1,"DT")
3001113
"^DD",64.5,64.53,2,0)
PRINT TEST NAME^RF^^0;3^K:$L(X)>40!($L(X)<2) X
"^DD",64.5,64.53,2,3)
Answer must be 2-40 characters in length
"^DD",64.5,64.53,2,5,1,0)
64.53^.01^2
"^DD",64.5,64.53,2,21,0)
^^1^1^2870106^^^
"^DD",64.5,64.53,2,21,1,0)
The actual name of the test to be printed on the page.
"^DD",64.5,64.53,2,"DT")
3071018
"^DD",69,69.01,21,0)
DATE/TIME RESULTS AVAILABLE^D^^3;2^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",69,69.01,21,1,0)
^.1
"^DD",69,69.01,21,1,1,0)
69.01^AR^MUMPS
"^DD",69,69.01,21,1,1,1)
D AR2^LRXREF
"^DD",69,69.01,21,1,1,2)
D AR3^LRXREF
"^DD",69,69.01,21,1,1,"%D",0)
^.101^2^2^3080626^^
"^DD",69,69.01,21,1,1,"%D",1,0)
Sets "AR" cross reference used to identify new lab results by date results available/location/patient
"^DD",69,69.01,21,1,1,"%D",2,0)
^LRO(69,'DATE RESULTS AVAILABLE',1,"AR",'LOCATION','PT. NAME',LRDFN)
"^DD",69,69.01,21,1,1,"DT")
3080623
"^DD",69,69.01,21,1,2,0)
69.01^AP^MUMPS
"^DD",69,69.01,21,1,2,1)
D AP1^LRXREF
"^DD",69,69.01,21,1,2,2)
D AP2^LRXREF
"^DD",69,69.01,21,1,2,"%D",0)
^^2^2^3080626^
"^DD",69,69.01,21,1,2,"%D",1,0)
Sets "AP" cross-reference used to identify new lab results by date results available/provider/patient
"^DD",69,69.01,21,1,2,"%D",2,0)
^LRO(69,'DRAW DATE',1,"AP",'DOC NAME',PNM,LRDFN) = ""
"^DD",69,69.01,21,1,2,"DT")
3080626
"^DD",69,69.01,21,1,3,0)
69.01^AL^MUMPS
"^DD",69,69.01,21,1,3,1)
D AL1^LRXREF
"^DD",69,69.01,21,1,3,2)
D AL2^LRXREF
"^DD",69,69.01,21,1,3,"%D",0)
^^2^2^3080626^
"^DD",69,69.01,21,1,3,"%D",1,0)
Sets "AL" cross-reference used to identify new lab results by date specimen collected/location/patient.
"^DD",69,69.01,21,1,3,"%D",2,0)
^LRO(69,'DRAW DATE',1,"AL",'LOCATION',PNM,LRDFN) = ""
"^DD",69,69.01,21,1,3,"DT")
3080626
"^DD",69,69.01,21,1,4,0)
69^AN^MUMPS
"^DD",69,69.01,21,1,4,1)
D AN1^LRXREF
"^DD",69,69.01,21,1,4,2)
D AN2^LRXREF
"^DD",69,69.01,21,1,4,"%D",0)
^.101^3^3^3080818^^^
"^DD",69,69.01,21,1,4,"%D",1,0)
Sets "AN" cross-reference used to identify new lab results by
"^DD",69,69.01,21,1,4,"%D",2,0)
location, patient and date.
"^DD",69,69.01,21,1,4,"%D",3,0)
LRO(69,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DD",69,69.01,21,1,5,0)
69.01^AN2^MUMPS
"^DD",69,69.01,21,1,5,1)
S ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))=""
"^DD",69,69.01,21,1,5,2)
K ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))
"^DD",69,69.01,21,1,5,"%D",0)
^.101^3^3^3110906^^
"^DD",69,69.01,21,1,5,"%D",1,0)
Sets "AN" cross reference within an order date
"^DD",69,69.01,21,1,5,"%D",2,0)
for location, patient and specimen date/time.
"^DD",69,69.01,21,1,5,"%D",3,0)
LRO(69,DT,1,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DD",69,69.01,21,1,5,"DT")
3110906
"^DD",69,69.01,21,3)
Enter the date/time the tests results were made available/released.
"^DD",69,69.01,21,21,0)
^^2^2^3080818^^
"^DD",69,69.01,21,21,1,0)
This is the date/time ALL results for this specimen are complete.
"^DD",69,69.01,21,21,2,0)
The field is set by the software when the results are released and reported outside the laboratory system.
"^DD",69,69.01,21,"DT")
3110906
"^DD",69,69.03,10,0)
CANCELED BY^P200'^VA(200,^0;11^Q
"^DD",69,69.03,10,1,0)
^.1
"^DD",69,69.03,10,1,1,0)
69^AE^MUMPS
"^DD",69,69.03,10,1,1,1)
S:'$D(^LRO(69,DA(2),1,DA(1),"PCE")) ^LRO(69,"AE",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,10,1,1,2)
K ^LRO(69,"AE",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,10,1,1,3)
This cross reference is used to update PCE of canceled test
"^DD",69,69.03,10,1,1,"%D",0)
^.101^6^6^3100423^^
"^DD",69,69.03,10,1,1,"%D",1,0)
 This cross reference is set when a test is canceled. The Lab PCE API uses
"^DD",69,69.03,10,1,1,"%D",2,0)
these entries to notify PCE that this test was not performed. After
"^DD",69,69.03,10,1,1,"%D",3,0)
notification of PCE the X-ref is removed.
"^DD",69,69.03,10,1,1,"%D",4,0)
 
"^DD",69,69.03,10,1,1,"%D",5,0)
This X-ref should not be set if no initial notification to PCE that this
"^DD",69,69.03,10,1,1,"%D",6,0)
test was done.
"^DD",69,69.03,10,1,1,"DT")
3100423
"^DD",69,69.03,10,3)
Enter the person who canceled the order.
"^DD",69,69.03,10,21,0)
^^1^1^2960409^
"^DD",69,69.03,10,21,1,0)
This is the person who canceled this test.
"^DD",69,69.03,10,"DT")
3100423
"^DD",69.6,69.6,0)
FIELD^^63^31
"^DD",69.6,69.6,0,"DDA")
N
"^DD",69.6,69.6,0,"DT")
3080429
"^DD",69.6,69.6,0,"ID","W1")
N LRX S LRX=^(0) D EN^DDIOL("Pat ID: "_$P(LRX,U,9)_"  DOB: "_$$FMTE^XLFDT($P(LRX,U,3),1)_"  Sex: "_$$EXTERNAL^DILFD(69.6,.02,"",$P(LRX,U,2)),,"!")
"^DD",69.6,69.6,0,"ID","W2")
N LRX S LRX=^(0) D EN^DDIOL("Spec ID: "_$P(LRX,U,6)_"  Manifest: "_$P(LRX,U,14)_"  Site: "_$$EXTERNAL^DILFD(69.6,1,"",$P(LRX,U,4)),,"!")
"^DD",69.6,69.6,0,"ID","W3")
N LRX S LRX=^(0),LRX(1)=^(1) D EN^DDIOL("Collected D/T: "_$$FMTE^XLFDT($P(LRX(1),U,2),"1M")_"  Specimen: "_$$EXTERNAL^DILFD(69.6,4,"",$P(LRX,U,7))_"  Spec. Status: "_$$EXTERNAL^DILFD(69.6,6,"",$P(LRX,U,10)),,"!")
"^DD",69.6,69.6,0,"IX","B",69.6,.01)

"^DD",69.6,69.6,0,"IX","C",69.6,.09)

"^DD",69.6,69.6,0,"IX","D",69.6,18)

"^DD",69.6,69.6,0,"IX","E",69.6,3)

"^DD",69.6,69.6,0,"NM","LAB PENDING ORDERS ENTRY")

"^DD",69.6,69.6,0,"VRPK")
LR
"^DD",69.6,69.6,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3)!(X?1P.E)!(X'?1U.ANP)!(X'[",") X I $D(X) S X=$$LRPNM^LRAFUNC(X) K:$L(X)>30!($L(X)>30) X
"^DD",69.6,69.6,.01,1,0)
^.1
"^DD",69.6,69.6,.01,1,1,0)
69.6^B
"^DD",69.6,69.6,.01,1,1,1)
S ^LRO(69.6,"B",$E(X,1,30),DA)=""
"^DD",69.6,69.6,.01,1,1,2)
K ^LRO(69.6,"B",$E(X,1,30),DA)
"^DD",69.6,69.6,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",69.6,69.6,.02,0)
SEX^S^M:MALE;F:FEMALE;U:UNKNOWN;^0;2^Q
"^DD",69.6,69.6,.02,3)

"^DD",69.6,69.6,.02,"DT")
2970209
"^DD",69.6,69.6,.03,0)
DOB^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,.03,"DT")
2961113
"^DD",69.6,69.6,.06,0)
RACE^F^^.1;1^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.6,.06,3)
Answer must be 1-60 characters in length.
"^DD",69.6,69.6,.06,21,0)
^^1^1^3040224^
"^DD",69.6,69.6,.06,21,1,0)
Stores the patient's race using HL7 code and text.
"^DD",69.6,69.6,.06,"DT")
3040224
"^DD",69.6,69.6,.09,0)
PAT ID^F^^0;9^K:$L(X)>30!($L(X)<5) X
"^DD",69.6,69.6,.09,1,0)
^.1
"^DD",69.6,69.6,.09,1,1,0)
69.6^C
"^DD",69.6,69.6,.09,1,1,1)
S ^LRO(69.6,"C",$E(X,1,30),DA)=""
"^DD",69.6,69.6,.09,1,1,2)
K ^LRO(69.6,"C",$E(X,1,30),DA)
"^DD",69.6,69.6,.09,1,1,"DT")
2961125
"^DD",69.6,69.6,.09,3)
Answer must be 5-30 characters in length.
"^DD",69.6,69.6,.09,"DT")
2991208
"^DD",69.6,69.6,1,0)
ORDERING SITE^P4'^DIC(4,^0;4^Q
"^DD",69.6,69.6,1,1,0)
^.1^^0
"^DD",69.6,69.6,1,"DT")
3070403
"^DD",69.6,69.6,2,0)
COLLECTING SITE^P4'^DIC(4,^0;5^Q
"^DD",69.6,69.6,2,1,0)
^.1^^0
"^DD",69.6,69.6,2,3)

"^DD",69.6,69.6,2,"DT")
3070403
"^DD",69.6,69.6,3,0)
ORDERING SITE UID^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",69.6,69.6,3,1,0)
^.1^^-1
"^DD",69.6,69.6,3,1,1,0)
69.6^E
"^DD",69.6,69.6,3,1,1,1)
S ^LRO(69.6,"E",$E(X,1,30),DA)=""
"^DD",69.6,69.6,3,1,1,2)
K ^LRO(69.6,"E",$E(X,1,30),DA)
"^DD",69.6,69.6,3,1,1,"DT")
3020412
"^DD",69.6,69.6,3,3)
Answer must be 1-30 characters in length.
"^DD",69.6,69.6,3,"DT")
3070403
"^DD",69.6,69.6,3.2,0)
ORDERING SITE ACC #^F^^0;12^K:$L(X)>20!($L(X)<1) X
"^DD",69.6,69.6,3.2,3)
Answer must be 1-20 characters in length.
"^DD",69.6,69.6,3.2,"DT")
2991208
"^DD",69.6,69.6,4,0)
SPECIMEN^P61'^LAB(61,^0;7^Q
"^DD",69.6,69.6,4,"DT")
2961113
"^DD",69.6,69.6,5,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;8^Q
"^DD",69.6,69.6,5,"DT")
2961113
"^DD",69.6,69.6,6,0)
SPECIMEN STATUS^*P64.061'^LAB(64.061,^0;10^S DIC("S")="I $P(^(0),U,7)=""U""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69.6,69.6,6,3)

"^DD",69.6,69.6,6,12)
ALLOWS ONLY THE SELECTION OF A STATUS
"^DD",69.6,69.6,6,12.1)
S DIC("S")="I $P(^(0),U,7)=""U"""
"^DD",69.6,69.6,6,"DT")
2970529
"^DD",69.6,69.6,7,0)
FILE REF^P67'^LRT(67,^0;11^Q
"^DD",69.6,69.6,7,"DT")
2970227
"^DD",69.6,69.6,9,0)
VISIT NUMBER^NJ8,0^^0;13^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69.6,69.6,9,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",69.6,69.6,9,"DT")
2961126
"^DD",69.6,69.6,10,0)
ORDERED DATE/TIME^D^^1;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,10,"DT")
2961114
"^DD",69.6,69.6,11,0)
COLLECTED DATE/TIME^D^^1;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,11,"DT")
2961114
"^DD",69.6,69.6,11.1,0)
COLLECTION END DATE/TIME^D^^1;9^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,11.1,3)
Enter the date/time that the specimen collection ended.
"^DD",69.6,69.6,11.1,21,0)
^^3^3^3010425^
"^DD",69.6,69.6,11.1,21,1,0)
Used to record the collection end date/time of specimen collection
"^DD",69.6,69.6,11.1,21,2,0)
when the specimen has a timed collection, i.e. 24 hour urine,
"^DD",69.6,69.6,11.1,21,3,0)
72 hour stool, etc.
"^DD",69.6,69.6,11.1,"DT")
3010425
"^DD",69.6,69.6,12,0)
SHIPPED DATE/TIME^D^^1;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,12,"DT")
2961114
"^DD",69.6,69.6,13,0)
RECD DATE/TIME^D^^1;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,13,"DT")
2961114
"^DD",69.6,69.6,14,0)
TRANS DATE/TIME^D^^1;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,14,"DT")
2961114
"^DD",69.6,69.6,15,0)
DATA ACCEPT DATE/TIME^D^^1;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,15,"DT")
2961114
"^DD",69.6,69.6,16,0)
COMPLETE DATE/TIME^D^^1;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.6,16,"DT")
2961114
"^DD",69.6,69.6,17,0)
INCOMING MESS #^F^^1;8^K:$L(X)>15!($L(X)<1) X
"^DD",69.6,69.6,17,3)
Answer must be 1-15 characters in length.
"^DD",69.6,69.6,17,"DT")
2961125
"^DD",69.6,69.6,18,0)
SHIPPING MANIFEST^F^^0;14^K:$L(X)>30!($L(X)<3) X
"^DD",69.6,69.6,18,1,0)
^.1^^-1
"^DD",69.6,69.6,18,1,2,0)
69.6^D
"^DD",69.6,69.6,18,1,2,1)
S ^LRO(69.6,"D",$E(X,1,30),DA)=""
"^DD",69.6,69.6,18,1,2,2)
K ^LRO(69.6,"D",$E(X,1,30),DA)
"^DD",69.6,69.6,18,1,2,"%D",0)
^^1^1^2970821^
"^DD",69.6,69.6,18,1,2,"%D",1,0)
 This X-Ref is used to allow FileMan lookup on shipping manifest numbers.
"^DD",69.6,69.6,18,1,2,"DT")
2970821
"^DD",69.6,69.6,18,3)
Enter in the 3-30 character invoice number of the shipped specimen.
"^DD",69.6,69.6,18,21,0)
^^2^2^2970502^
"^DD",69.6,69.6,18,21,1,0)
This field should contain the invoice number from the collection labs
"^DD",69.6,69.6,18,21,2,0)
SHIPPING MANIFEST file.
"^DD",69.6,69.6,18,"DT")
3070403
"^DD",69.6,69.6,20,0)
ORDERED TESTS^69.64A^^2;0
"^DD",69.6,69.6,61,0)
AP SPECIMENS^69.6061^^61;0
"^DD",69.6,69.6,61,21,0)
^.001^3^3^3070731^^^
"^DD",69.6,69.6,61,21,1,0)
Stores the specimens information that accompany an AP order.
"^DD",69.6,69.6,61,21,2,0)
Information is moved to corresponding fields in LAB DATA
"^DD",69.6,69.6,61,21,3,0)
file (#63) when order is accessioned.
"^DD",69.6,69.6,63,0)
AP INFO^69.6063S^^63;0
"^DD",69.6,69.6,63,21,0)
^^3^3^3080429^^
"^DD",69.6,69.6,63,21,1,0)
Stores the various textual information that accompanies AP orders
"^DD",69.6,69.6,63,21,2,0)
 - patient history, pre-op diagnosis, operative findings, gross
"^DD",69.6,69.6,63,21,3,0)
   description, frozen section , etc.
"^DD",69.6,69.6,99,0)
COMMENTS^69.699^^99;0
"^DD",69.6,69.6,700,0)
HL ENCODING CHARACTERS^F^^700;E1,5^K:$L(X)>5!($L(X)<1) X
"^DD",69.6,69.6,700,3)
Answer must be 1-5 characters in length
"^DD",69.6,69.6,700,10)
HL7 ORM order message
"^DD",69.6,69.6,700,21,0)
^^4^4^3010904^^^
"^DD",69.6,69.6,700,21,1,0)
Stores the HL7 field separator and encoding characters from the
"^DD",69.6,69.6,700,21,2,0)
HL7 message used to create this pending order entry. This allows
"^DD",69.6,69.6,700,21,3,0)
the HL7 data that is saved from the message to be processed and
"^DD",69.6,69.6,700,21,4,0)
returned to the placer.
"^DD",69.6,69.6,700,"DT")
3010904
"^DD",69.6,69.6,700.02,0)
HL PID-2^F^^700.02;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",69.6,69.6,700.02,3)
Answer must be 1-250 characters in length
"^DD",69.6,69.6,700.02,10)
HL7 ORM order message
"^DD",69.6,69.6,700.02,21,0)
^^2^2^3010904^^^
"^DD",69.6,69.6,700.02,21,1,0)
Stores the placer's patient identification information from PID-2
"^DD",69.6,69.6,700.02,21,2,0)
for transmittal back to the placer when the order is completed.
"^DD",69.6,69.6,700.02,"DT")
3030221
"^DD",69.6,69.6,700.04,0)
HL PID-4^F^^700.04;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",69.6,69.6,700.04,3)
Answer must be 1-250 characters in length
"^DD",69.6,69.6,700.04,10)
HL7 ORM order message
"^DD",69.6,69.6,700.04,21,0)
^^2^2^3010831^^
"^DD",69.6,69.6,700.04,21,1,0)
Stores the placer's patient identification information from PID-4
"^DD",69.6,69.6,700.04,21,2,0)
for transmittal back to the placer when the order is completed. 
"^DD",69.6,69.6,700.04,"DT")
3030221
"^DD",69.6,69.6061,0)
AP SPECIMENS SUB-FIELD^^.03^3
"^DD",69.6,69.6061,0,"DT")
3061121
"^DD",69.6,69.6061,0,"NM","AP SPECIMENS")

"^DD",69.6,69.6061,0,"UP")
69.6
"^DD",69.6,69.6061,.01,0)
AP SPECIMEN^MF^^0;1^K:$L(X)>75!($L(X)<2) X
"^DD",69.6,69.6061,.01,1,0)
^.1^^0
"^DD",69.6,69.6061,.01,3)
Answer must be 2-75 characters in length
"^DD",69.6,69.6061,.01,21,0)
^^3^3^3061121^^
"^DD",69.6,69.6061,.01,21,1,0)
Stores the free-text specimen that accompany an AP order.
"^DD",69.6,69.6061,.01,21,2,0)
Information is moved to corresponding fields in LAB DATA
"^DD",69.6,69.6061,.01,21,3,0)
file (#63) when order is accessioned. 
"^DD",69.6,69.6061,.01,"DT")
3070404
"^DD",69.6,69.6061,.02,0)
AP SPECIMEN TOPOGRAPHY^P61'^LAB(61,^0;2^Q
"^DD",69.6,69.6061,.02,3)
Enter the specimen's topography
"^DD",69.6,69.6061,.02,21,0)
^^3^3^3061121^
"^DD",69.6,69.6061,.02,21,1,0)
Stores the specimen's topography that accompany an AP order.
"^DD",69.6,69.6061,.02,21,2,0)
Information is moved to corresponding fields in LAB DATA
"^DD",69.6,69.6061,.02,21,3,0)
file (#63) when order is accessioned. 
"^DD",69.6,69.6061,.02,"DT")
3061121
"^DD",69.6,69.6061,.03,0)
AP COLLECTION SAMPLE^P62'^LAB(62,^0;3^Q
"^DD",69.6,69.6061,.03,3)
Enter the collection sample associated with this specimen.
"^DD",69.6,69.6061,.03,21,0)
^.001^3^3^3070731^^
"^DD",69.6,69.6061,.03,21,1,0)
Stores the collection sample that accompany an AP order.
"^DD",69.6,69.6061,.03,21,2,0)
Information is moved to corresponding fields in LAB DATA
"^DD",69.6,69.6061,.03,21,3,0)
file (#63) when order is accessioned. 
"^DD",69.6,69.6061,.03,"DT")
3070731
"^DD",69.6,69.6063,0)
AP INFO SUB-FIELD^^.02^3
"^DD",69.6,69.6063,0,"DT")
3080429
"^DD",69.6,69.6063,0,"IX","B",69.6063,.01)

"^DD",69.6,69.6063,0,"NM","AP INFO")

"^DD",69.6,69.6063,0,"UP")
69.6
"^DD",69.6,69.6063,.01,0)
AP INFO^MS^.013:BRIEF CLINICAL HISTORY;.014:PREOPERATIVE DIAGNOSIS;.015:OPERATIVE FINDINGS;.016:POSTOPERATIVE DIAGNOSIS;1:GROSS DESCRIPTION;1.1:MICROSCOPIC DESCRIPTION;1.2:SUPPLEMENTARY REPORT;1.3:FROZEN SECTION;1.4:SURGICAL PATH DIAGNOSIS;^0;1^Q
"^DD",69.6,69.6063,.01,1,0)
^.1
"^DD",69.6,69.6063,.01,1,1,0)
69.6063^B
"^DD",69.6,69.6063,.01,1,1,1)
S ^LRO(69.6,DA(1),63,"B",$E(X,1,30),DA)=""
"^DD",69.6,69.6063,.01,1,1,2)
K ^LRO(69.6,DA(1),63,"B",$E(X,1,30),DA)
"^DD",69.6,69.6063,.01,21,0)
^^1^1^3061121^
"^DD",69.6,69.6063,.01,21,1,0)
Type of textual data that accompanied the AP order.
"^DD",69.6,69.6063,.01,"DT")
3061121
"^DD",69.6,69.6063,.02,0)
PERFORMING LABORATORY^P4'^DIC(4,^0;2^Q
"^DD",69.6,69.6063,.02,3)
Name of laboratory reporting this component of the report
"^DD",69.6,69.6063,.02,21,0)
^^1^1^3080429^
"^DD",69.6,69.6063,.02,21,1,0)
Identifies the laboratory which is the source of this information which accompanies the request.
"^DD",69.6,69.6063,.02,"DT")
3080429
"^DD",69.6,69.6063,1,0)
TEXT^69.60631^^1;0
"^DD",69.6,69.6063,1,21,0)
^^1^1^3061121^
"^DD",69.6,69.6063,1,21,1,0)
Text that accompanied the AP order for the corresponding information type.
"^DD",69.6,69.60631,0)
TEXT SUB-FIELD^^.01^1
"^DD",69.6,69.60631,0,"DT")
3061121
"^DD",69.6,69.60631,0,"NM","TEXT")

"^DD",69.6,69.60631,0,"UP")
69.6063
"^DD",69.6,69.60631,.01,0)
TEXT^WL^^0;1
"^DD",69.6,69.60631,.01,21,0)
^^1^1^3061121^
"^DD",69.6,69.60631,.01,21,1,0)
The actual text that accompanied the corresponding information type.
"^DD",69.6,69.60631,.01,"DT")
3061121
"^DD",69.6,69.64,0)
ORDERED TESTS SUB-FIELD^^700.19^16
"^DD",69.6,69.64,0,"DT")
3020503
"^DD",69.6,69.64,0,"IX","B",69.64,.01)

"^DD",69.6,69.64,0,"IX","C",69.64,1)

"^DD",69.6,69.64,0,"NM","ORDERED TESTS")

"^DD",69.6,69.64,0,"UP")
69.6
"^DD",69.6,69.64,.01,0)
NLT TEST^F^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.64,.01,1,0)
^.1
"^DD",69.6,69.64,.01,1,1,0)
69.64^B
"^DD",69.6,69.64,.01,1,1,1)
S ^LRO(69.6,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",69.6,69.64,.01,1,1,2)
K ^LRO(69.6,DA(1),2,"B",$E(X,1,30),DA)
"^DD",69.6,69.64,.01,3)
Answer must be 1-60 characters in length.
"^DD",69.6,69.64,.01,"DT")
2970523
"^DD",69.6,69.64,1,0)
NLT CODE^F^^0;2^K:$L(X)>15!($L(X)<5) X
"^DD",69.6,69.64,1,1,0)
^.1
"^DD",69.6,69.64,1,1,1,0)
69.64^C
"^DD",69.6,69.64,1,1,1,1)
S ^LRO(69.6,DA(1),2,"C",$E(X,1,30),DA)=""
"^DD",69.6,69.64,1,1,1,2)
K ^LRO(69.6,DA(1),2,"C",$E(X,1,30),DA)
"^DD",69.6,69.64,1,1,1,"DT")
2970218
"^DD",69.6,69.64,1,3)
Answer must be 5-15 characters in length.
"^DD",69.6,69.64,1,"DT")
2970218
"^DD",69.6,69.64,2,0)
REMOTE TEST NAME^F^^0;3^K:$L(X)>50!($L(X)<2) X
"^DD",69.6,69.64,2,3)
Answer must be 2-50 characters in length.
"^DD",69.6,69.64,2,"DT")
2970218
"^DD",69.6,69.64,3,0)
REMOTE TEST #^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",69.6,69.64,3,3)
Answer must be 1-10 characters in length.
"^DD",69.6,69.64,3,"DT")
2970218
"^DD",69.6,69.64,4,0)
REMOTE URGENCY^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",69.6,69.64,4,3)
Answer must be 1-10 characters in length.
"^DD",69.6,69.64,4,10)
HL7 ORM order message
"^DD",69.6,69.64,4,21,0)
^^1^1^3010831^
"^DD",69.6,69.64,4,21,1,0)
Stores the HL7 test urgency from the placer's order message.
"^DD",69.6,69.64,4,"DT")
3010904
"^DD",69.6,69.64,5,0)
TEST STATUS^*P64.061'^LAB(64.061,^0;6^S DIC("S")="I $P(^(0),U,7)=""U""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69.6,69.64,5,3)

"^DD",69.6,69.64,5,12)
ALLOWS ONLY THE SELECTION OF STATUS
"^DD",69.6,69.64,5,12.1)
S DIC("S")="I $P(^(0),U,7)=""U"""
"^DD",69.6,69.64,5,"DT")
2970529
"^DD",69.6,69.64,7,0)
OUT GOING MESS #^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",69.6,69.64,7,3)
Answer must be 1-20 characters in length.
"^DD",69.6,69.64,7,"DT")
2970218
"^DD",69.6,69.64,8,0)
ACCESSION D/T^D^^0;7^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.64,8,"DT")
2970518
"^DD",69.6,69.64,9,0)
HOST UID^F^^0;9^K:$L(X)>15!($L(X)<5) X
"^DD",69.6,69.64,9,3)
Answer must be 5-15 characters in length.
"^DD",69.6,69.64,9,"DT")
2970518
"^DD",69.6,69.64,10,0)
COMPLETE D/T^D^^0;10^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",69.6,69.64,10,"DT")
2970519
"^DD",69.6,69.64,11,0)
HOST TEST^P60'^LAB(60,^0;11^Q
"^DD",69.6,69.64,11,3)
Enter the host's laboratory test which corresponds to the remote's ordered test.
"^DD",69.6,69.64,11,21,0)
^^6^6^3010904^^^
"^DD",69.6,69.64,11,21,1,0)
This field stores the host's file 60 test which should be ordered
"^DD",69.6,69.64,11,21,2,0)
when processing referral lab orders. It's built by the LEDI software
"^DD",69.6,69.64,11,21,3,0)
when processing the HL7 ORM order message. Based on the test code
"^DD",69.6,69.64,11,21,4,0)
from the message and the corresponding shipping configuration 
"^DD",69.6,69.64,11,21,5,0)
associated with the placer, the appropriate host test is selected
"^DD",69.6,69.64,11,21,6,0)
and stored in this field.
"^DD",69.6,69.64,11,"DT")
3010904
"^DD",69.6,69.64,12,0)
HOST URGENCY^*P62.05'^LAB(62.05,^0;12^S DIC("S")="I Y<50" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69.6,69.64,12,3)
Enter the urgency to order this test at the host site.
"^DD",69.6,69.64,12,12)
Only non-workload urgencies can be selected.
"^DD",69.6,69.64,12,12.1)
S DIC("S")="I Y<50"
"^DD",69.6,69.64,12,21,0)
^^5^5^3010904^^^^
"^DD",69.6,69.64,12,21,1,0)
This field stores the host's local urgency which should be used 
"^DD",69.6,69.64,12,21,2,0)
when processing referral lab orders. It's built by the LEDI software
"^DD",69.6,69.64,12,21,3,0)
when processing the HL7 ORM order message. Based on the HL7 urgency
"^DD",69.6,69.64,12,21,4,0)
from the message and the corresponding shipping configuration the
"^DD",69.6,69.64,12,21,5,0)
appropriate host urgency for the order is determined.
"^DD",69.6,69.64,12,"DT")
3010904
"^DD",69.6,69.64,13,0)
ORDERING PROVIDER^F^^1;1^K:$L(X)>40!($L(X)<1) X
"^DD",69.6,69.64,13,3)
Answer must be 1-40 characters in length.
"^DD",69.6,69.64,13,10)
HL7 ORM order message
"^DD",69.6,69.64,13,21,0)
^^3^3^3010904^^^
"^DD",69.6,69.64,13,21,1,0)
The name of the provider ordering this test. It is derived from
"^DD",69.6,69.64,13,21,2,0)
the HL7 ORM order message and contains the human readable name
"^DD",69.6,69.64,13,21,3,0)
of the ordering provider.
"^DD",69.6,69.64,13,"DT")
3010904
"^DD",69.6,69.64,700.04,0)
HL OBR-4^F^^700.04;E1,200^K:$L(X)>200!($L(X)<1) X
"^DD",69.6,69.64,700.04,.1)
UNIVERSAL SERVICE ID
"^DD",69.6,69.64,700.04,3)
Answer must be 1-200 characters in length
"^DD",69.6,69.64,700.04,10)
HL7 ORM order message
"^DD",69.6,69.64,700.04,21,0)
^^1^1^3010904^^^
"^DD",69.6,69.64,700.04,21,1,0)
The placer's specimen identifier from the HL7 ORM order message.
"^DD",69.6,69.64,700.04,"DT")
3010904
"^DD",69.6,69.64,700.18,0)
HL OBR-18^F^^700.18;E1,60^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.64,700.18,.1)
PLACER FIELD 1
"^DD",69.6,69.64,700.18,3)
Answer must be 1-60 characters in length
"^DD",69.6,69.64,700.18,10)
HL7 ORM order message
"^DD",69.6,69.64,700.18,21,0)
^^5^5^3010904^^
"^DD",69.6,69.64,700.18,21,1,0)
Stores the placer's field #1 from the OBR segment of the HL7
"^DD",69.6,69.64,700.18,21,2,0)
ORM order message. This field is returned to the placer when
"^DD",69.6,69.64,700.18,21,3,0)
the HL7 ORU result message is created and transmitted to
"^DD",69.6,69.64,700.18,21,4,0)
the placer. The HL7 standard requires that the filler of an
"^DD",69.6,69.64,700.18,21,5,0)
order return to the placer the value of this field.
"^DD",69.6,69.64,700.18,"DT")
3010904
"^DD",69.6,69.64,700.19,0)
HL OBR-19^F^^700.19;E1,60^K:$L(X)>60!($L(X)<1) X
"^DD",69.6,69.64,700.19,.1)
PLACER FIELD 2
"^DD",69.6,69.64,700.19,3)
Answer must be 1-60 characters in length
"^DD",69.6,69.64,700.19,10)
HL7 ORM order message
"^DD",69.6,69.64,700.19,21,0)
^^5^5^3010904^^
"^DD",69.6,69.64,700.19,21,1,0)
Stores the placer's field #2 from the OBR segment of the HL7
"^DD",69.6,69.64,700.19,21,2,0)
ORM order message. This field is returned to the placer when
"^DD",69.6,69.64,700.19,21,3,0)
the HL7 ORU result message is created and transmitted to
"^DD",69.6,69.64,700.19,21,4,0)
the placer. The HL7 standard requires that the filler of an
"^DD",69.6,69.64,700.19,21,5,0)
order return to the placer the value of this field.
"^DD",69.6,69.64,700.19,"DT")
3010904
"^DD",69.6,69.699,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",69.6,69.699,0,"NM","COMMENTS")

"^DD",69.6,69.699,0,"UP")
69.6
"^DD",69.6,69.699,.01,0)
COMMENTS^W^^0;1^Q
"^DD",69.6,69.699,.01,"DT")
2961125
"^DD",95.4,95.4,0)
FIELD^^6^7
"^DD",95.4,95.4,0,"DDA")
N
"^DD",95.4,95.4,0,"DT")
3090605
"^DD",95.4,95.4,0,"IX","B",95.4,.01)

"^DD",95.4,95.4,0,"NM","LAB MAPPING TRANSPORT")

"^DD",95.4,95.4,.01,0)
ENTRY IDENTIFIER^RF^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",95.4,95.4,.01,1,0)
^.1
"^DD",95.4,95.4,.01,1,1,0)
95.4^B
"^DD",95.4,95.4,.01,1,1,1)
S ^LAHM(95.4,"B",$E(X,1,30),DA)=""
"^DD",95.4,95.4,.01,1,1,2)
K ^LAHM(95.4,"B",$E(X,1,30),DA)
"^DD",95.4,95.4,.01,3)
Answer must be 1-30 characters in length
"^DD",95.4,95.4,.01,21,0)
^^2^2^3080208^
"^DD",95.4,95.4,.01,21,1,0)
This field contains the identifier used to uniquely identify
"^DD",95.4,95.4,.01,21,2,0)
the site/test/specimen combination.
"^DD",95.4,95.4,.01,"DT")
3080208
"^DD",95.4,95.4,2,0)
INSTITUTION^P4'^DIC(4,^0;2^Q
"^DD",95.4,95.4,2,3)
Enter the institution associated with the test/specimen combination.
"^DD",95.4,95.4,2,21,0)
^^2^2^3050327^
"^DD",95.4,95.4,2,21,1,0)
Pointer to the institution in the VistA INSITUTION file (#4)
"^DD",95.4,95.4,2,21,2,0)
which this test/specimen record is related to.
"^DD",95.4,95.4,2,"DT")
3050328
"^DD",95.4,95.4,3,0)
CODE SYSTEM^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",95.4,95.4,3,3)
Answer must be 1-20 characters in length
"^DD",95.4,95.4,3,21,0)
^^8^8^3080208^
"^DD",95.4,95.4,3,21,1,0)
Contains the name of the code system related to this record.
"^DD",95.4,95.4,3,21,2,0)
Code system is free text to support multiple code systems.
"^DD",95.4,95.4,3,21,3,0)
Generally the name of the code system is that used and/or
"^DD",95.4,95.4,3,21,4,0)
assigned by the HL7 standard to recognized code systems.
"^DD",95.4,95.4,3,21,5,0)
 
"^DD",95.4,95.4,3,21,6,0)
The software used to process entries from this file contain
"^DD",95.4,95.4,3,21,7,0)
the business rules and knowledge of the corresponding code
"^DD",95.4,95.4,3,21,8,0)
system.
"^DD",95.4,95.4,3,"DT")
3080208
"^DD",95.4,95.4,4,0)
STATUS^S^0:LOADED;.5:DEFER;.7:PROCESSING EXECPTION;1:PROCESSED;2:DISCARD;^0;4^Q
"^DD",95.4,95.4,4,3)
Enter the processing status of this record.
"^DD",95.4,95.4,4,21,0)
^^1^1^3080208^^^
"^DD",95.4,95.4,4,21,1,0)
Holds the status of this record as it's loaded, processed and dispositioned by the site.
"^DD",95.4,95.4,4,"DT")
3080208
"^DD",95.4,95.4,5,0)
MAPPING STATUS^F^^0;5^K:$L(X)>25!($L(X)<1) X
"^DD",95.4,95.4,5,3)
Answer must be 1-25 characters in length
"^DD",95.4,95.4,5,21,0)
^^1^1^3080204^
"^DD",95.4,95.4,5,21,1,0)
Stores the free text mapping status of this term when it's applied to it's related file entry.
"^DD",95.4,95.4,5,"DT")
3080204
"^DD",95.4,95.4,6,0)
STATUS DATE^D^^0;6^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",95.4,95.4,6,3)
Date/time the record's status was updated.
"^DD",95.4,95.4,6,21,0)
^^2^2^3080208^
"^DD",95.4,95.4,6,21,1,0)
Records the date/time that this entry is processed and
"^DD",95.4,95.4,6,21,2,0)
the data is applied to the target file. 
"^DD",95.4,95.4,6,"DT")
3080214
"^DD",95.4,95.4,100,0)
FIELD REFERENCE^95.401A^^100;0
"^DD",95.4,95.401,0)
FIELD REFERENCE SUB-FIELD^^10^2
"^DD",95.4,95.401,0,"DT")
3090605
"^DD",95.4,95.401,0,"IX","B",95.401,.01)

"^DD",95.4,95.401,0,"NM","FIELD REFERENCE")

"^DD",95.4,95.401,0,"UP")
95.4
"^DD",95.4,95.401,.01,0)
FIELD REFERENCE^F^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",95.4,95.401,.01,1,0)
^.1
"^DD",95.4,95.401,.01,1,1,0)
95.401^B
"^DD",95.4,95.401,.01,1,1,1)
S ^LAHM(95.4,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",95.4,95.401,.01,1,1,2)
K ^LAHM(95.4,DA(1),100,"B",$E(X,1,30),DA)
"^DD",95.4,95.401,.01,3)
Answer must be 1-100 characters in length.
"^DD",95.4,95.401,.01,21,0)
^^3^3^3070723^
"^DD",95.4,95.401,.01,21,1,0)
This is the field name in the target file that the mapping should be assigned.
"^DD",95.4,95.401,.01,21,2,0)
The file and entry IEN is represented in the 'ENTRY IDENTIFIER' field .01.
"^DD",95.4,95.401,.01,21,3,0)

"^DD",95.4,95.401,.01,"DT")
3070723
"^DD",95.4,95.401,10,0)
FIELD DATA^95.4011^^100;0
"^DD",95.4,95.401,10,21,0)
^^5^5^3080208^
"^DD",95.4,95.401,10,21,1,0)
This field holds the value that is to be associated with the 
"^DD",95.4,95.401,10,21,2,0)
corresponding field in the related file. The software which
"^DD",95.4,95.401,10,21,3,0)
is processing this data understands the data type, structure
"^DD",95.4,95.401,10,21,4,0)
and how to apply the information to the related files being
"^DD",95.4,95.401,10,21,5,0)
updated. 
"^DD",95.4,95.4011,0)
FIELD DATA SUB-FIELD^^.01^1
"^DD",95.4,95.4011,0,"DT")
3090605
"^DD",95.4,95.4011,0,"NM","FIELD DATA")

"^DD",95.4,95.4011,0,"UP")
95.401
"^DD",95.4,95.4011,.01,0)
FIELD DATA^WLx^^0;1^Q
"^DD",95.4,95.4011,.01,3)
Enter the data that is associated with this field data reference.
"^DD",95.4,95.4011,.01,"DT")
3090605
"^DIC",64.061,64.061,0)
LAB ELECTRONIC CODES^64.061
"^DIC",64.061,64.061,0,"GL")
^LAB(64.061,
"^DIC",64.061,64.061,"%",0)
^1.005^^0
"^DIC",64.061,64.061,"%D",0)
^1.001^7^7^3070226^^^
"^DIC",64.061,64.061,"%D",1,0)
Lab Electronic Codes file contains a collection of codes used in
"^DIC",64.061,64.061,"%D",2,0)
electronic messaging. Some of these codes originated in established
"^DIC",64.061,64.061,"%D",3,0)
recognized sources (i.e. HL7 tables). Other codes are unique to the
"^DIC",64.061,64.061,"%D",4,0)
laboratory package needs or requirements.
"^DIC",64.061,64.061,"%D",5,0)
 
"^DIC",64.061,64.061,"%D",6,0)
This file is a standard file for many types of terms used in electronic
"^DIC",64.061,64.061,"%D",7,0)
messaging.
"^DIC",64.061,"B","LAB ELECTRONIC CODES",64.061)

"^DIC",64.062,64.062,0)
LAB ELECTRONIC SUBTYPES^64.062
"^DIC",64.062,64.062,0,"GL")
^LAB(64.062,
"^DIC",64.062,64.062,"%",0)
^1.005^^0
"^DIC",64.062,64.062,"%D",0)
^^3^3^3001109^
"^DIC",64.062,64.062,"%D",1,0)
This file contain LAB ELECTRONIC CODE (#64.061) screen values. These
"^DIC",64.062,64.062,"%D",2,0)
entries provide methods to retrieve appropriate codes from 64.061 base on
"^DIC",64.062,64.062,"%D",3,0)
intended use.
"^DIC",64.062,"B","LAB ELECTRONIC SUBTYPES",64.062)

"^DIC",69.6,69.6,0)
LAB PENDING ORDERS ENTRY^69.6I
"^DIC",69.6,69.6,0,"GL")
^LRO(69.6,
"^DIC",69.6,69.6,"%D",0)
^1.001^15^15^3020514^^
"^DIC",69.6,69.6,"%D",1,0)
Lab Orders Pending file serves as a temporary storage locations for
"^DIC",69.6,69.6,"%D",2,0)
electronic laboratory test orders. LEDI software populates and manages the
"^DIC",69.6,69.6,"%D",3,0)
contents of this file.
"^DIC",69.6,69.6,"%D",4,0)
 
"^DIC",69.6,69.6,"%D",5,0)
Electronic test orders from VA collecting sites are stored in this file
"^DIC",69.6,69.6,"%D",6,0)
until ordered test results have been returned. Electronic orders are
"^DIC",69.6,69.6,"%D",7,0)
matched with physically shipped specimen during accessioning process.
"^DIC",69.6,69.6,"%D",8,0)
Specimen processing status update information is also stored in this file
"^DIC",69.6,69.6,"%D",9,0)
to assist in the management of workload.
"^DIC",69.6,69.6,"%D",10,0)
 
"^DIC",69.6,69.6,"%D",11,0)
When the results have been stored in the collecting site's patient
"^DIC",69.6,69.6,"%D",12,0)
clinical record, entries will be purged from this file.
"^DIC",69.6,69.6,"%D",13,0)
 
"^DIC",69.6,69.6,"%D",14,0)
NOTE: The user should not directly edit this file via FileMan. Appropriate
"^DIC",69.6,69.6,"%D",15,0)
options are provided to manage the data in this file.
"^DIC",69.6,"B","LAB PENDING ORDERS ENTRY",69.6)

"^DIC",95.4,95.4,0)
LAB MAPPING TRANSPORT^95.4
"^DIC",95.4,95.4,0,"GL")
^LAHM(95.4,
"^DIC",95.4,95.4,"%D",0)
^1.001^2^2^3100415^^^
"^DIC",95.4,95.4,"%D",1,0)
This file is used to transport STS mapping to target sites for 
"^DIC",95.4,95.4,"%D",2,0)
installation by the laboratory auto mapping software.
"^DIC",95.4,"B","LAB MAPPING TRANSPORT",95.4)

**INSTALL NAME**
LA*5.2*74
"BLD",6098,0)
LA*5.2*74^AUTOMATED LAB INSTRUMENTS^0^3120718^y
"BLD",6098,1,0)
^^1^1^3120221^
"BLD",6098,1,1,0)
Refer to National Patch Module.
"BLD",6098,4,0)
^9.64PA^62.4^7
"BLD",6098,4,62.4,0)
62.4
"BLD",6098,4,62.4,2,0)
^9.641^62.41^1
"BLD",6098,4,62.4,2,62.41,0)
CHEM TESTS  (sub-file)
"BLD",6098,4,62.4,2,62.41,1,0)
^9.6411^.001^1
"BLD",6098,4,62.4,2,62.41,1,.001,0)
NUMBER
"BLD",6098,4,62.4,222)
y^n^p^^^^n^^n
"BLD",6098,4,62.4,224)

"BLD",6098,4,62.47,0)
62.47
"BLD",6098,4,62.47,222)
y^n^f^^^^n^^
"BLD",6098,4,62.47,223)
I 1
"BLD",6098,4,62.47,224)

"BLD",6098,4,62.48,0)
62.48
"BLD",6098,4,62.48,2,0)
^9.641^62.482^1
"BLD",6098,4,62.48,2,62.482,0)
NON-VA ORDER SNOMED CODES  (sub-file)
"BLD",6098,4,62.48,2,62.482,1,0)
^9.6411^^
"BLD",6098,4,62.48,222)
y^n^p^^^^n^^n
"BLD",6098,4,62.48,224)

"BLD",6098,4,62.485,0)
62.485
"BLD",6098,4,62.485,222)
n^n^f^^y^^y^o^n
"BLD",6098,4,62.485,224)
I Y=49!(Y=122)!(Y>199&(Y<300))
"BLD",6098,4,62.49,0)
62.49
"BLD",6098,4,62.49,222)
y^n^f^^^^n^^n
"BLD",6098,4,62.49,224)

"BLD",6098,4,62.8,0)
62.8
"BLD",6098,4,62.8,2,0)
^9.641^62.801^1
"BLD",6098,4,62.8,2,62.801,0)
SPECIMENS  (sub-file)
"BLD",6098,4,62.8,2,62.801,1,0)
^9.6411^20.2^3
"BLD",6098,4,62.8,2,62.801,1,.08,0)
TEST STATUS
"BLD",6098,4,62.8,2,62.801,1,20.1,0)
NON-VA SPECIMEN SNOMED CT
"BLD",6098,4,62.8,2,62.801,1,20.2,0)
NON-VA SAMPLE SNOMED CT
"BLD",6098,4,62.8,222)
y^n^p^^^^n^^n
"BLD",6098,4,62.8,224)

"BLD",6098,4,62.9,0)
62.9
"BLD",6098,4,62.9,2,0)
^9.641^62.9003^3
"BLD",6098,4,62.9,2,62.9001,0)
TEST/PROFILE  (sub-file)
"BLD",6098,4,62.9,2,62.9001,1,0)
^9.6411^2.36^1
"BLD",6098,4,62.9,2,62.9001,1,2.36,0)
COLLECTION WEIGHT CODE
"BLD",6098,4,62.9,2,62.9002,0)
FEEDER SHIPPING CONFIGURATION  (sub-file)
"BLD",6098,4,62.9,2,62.9002,1,0)
^9.6411^^0
"BLD",6098,4,62.9,2,62.9003,0)
ORDERING LOCATION  (sub-file)
"BLD",6098,4,62.9,2,62.9003,1,0)
^9.6411^^
"BLD",6098,4,62.9,222)
y^n^p^^^^n^^n
"BLD",6098,4,62.9,224)

"BLD",6098,4,"APDD",62.4,62.41)

"BLD",6098,4,"APDD",62.4,62.41,.001)

"BLD",6098,4,"APDD",62.48,62.482)

"BLD",6098,4,"APDD",62.8,62.801)

"BLD",6098,4,"APDD",62.8,62.801,.08)

"BLD",6098,4,"APDD",62.8,62.801,20.1)

"BLD",6098,4,"APDD",62.8,62.801,20.2)

"BLD",6098,4,"APDD",62.9,62.9001)

"BLD",6098,4,"APDD",62.9,62.9001,2.36)

"BLD",6098,4,"APDD",62.9,62.9002)

"BLD",6098,4,"APDD",62.9,62.9003)

"BLD",6098,4,"B",62.4,62.4)

"BLD",6098,4,"B",62.47,62.47)

"BLD",6098,4,"B",62.48,62.48)

"BLD",6098,4,"B",62.485,62.485)

"BLD",6098,4,"B",62.49,62.49)

"BLD",6098,4,"B",62.8,62.8)

"BLD",6098,4,"B",62.9,62.9)

"BLD",6098,6.3)
229
"BLD",6098,"ABPKG")
n
"BLD",6098,"INI")
PRE^LA74
"BLD",6098,"INID")
y^y^y
"BLD",6098,"INIT")
POST^LA74
"BLD",6098,"KRN",0)
^9.67PA^8989.52^19
"BLD",6098,"KRN",.4,0)
.4
"BLD",6098,"KRN",.401,0)
.401
"BLD",6098,"KRN",.402,0)
.402
"BLD",6098,"KRN",.403,0)
.403
"BLD",6098,"KRN",.5,0)
.5
"BLD",6098,"KRN",.84,0)
.84
"BLD",6098,"KRN",3.6,0)
3.6
"BLD",6098,"KRN",3.8,0)
3.8
"BLD",6098,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",6098,"KRN",3.8,"NM",1,0)
LAB MESSAGING^^0
"BLD",6098,"KRN",3.8,"NM","B","LAB MESSAGING",1)

"BLD",6098,"KRN",9.2,0)
9.2
"BLD",6098,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",6098,"KRN",9.2,"NM",1,0)
LA7V 62.47 ERROR CODES^^0
"BLD",6098,"KRN",9.2,"NM","B","LA7V 62.47 ERROR CODES",1)

"BLD",6098,"KRN",9.8,0)
9.8
"BLD",6098,"KRN",9.8,"NM",0)
^9.68A^110^105
"BLD",6098,"KRN",9.8,"NM",1,0)
LA7VHLU5^^0^B59941403
"BLD",6098,"KRN",9.8,"NM",2,0)
LA7VOBRA^^0^B49742894
"BLD",6098,"KRN",9.8,"NM",3,0)
LA7VOBX2^^0^B34855807
"BLD",6098,"KRN",9.8,"NM",4,0)
LA7VOBX3^^0^B68636771
"BLD",6098,"KRN",9.8,"NM",5,0)
LA7VOBXA^^0^B54895883
"BLD",6098,"KRN",9.8,"NM",6,0)
LA7VORM3^^0^B30340071
"BLD",6098,"KRN",9.8,"NM",7,0)
LA7VORU^^0^B21144150
"BLD",6098,"KRN",9.8,"NM",8,0)
LA7VORU2^^0^B30157126
"BLD",6098,"KRN",9.8,"NM",9,0)
LA7VORUA^^0^B41751237
"BLD",6098,"KRN",9.8,"NM",10,0)
LA7VHLU2^^0^B50000516
"BLD",6098,"KRN",9.8,"NM",11,0)
LA7VHLU4^^0^B27335749
"BLD",6098,"KRN",9.8,"NM",12,0)
LA7VIN5^^0^B68402424
"BLD",6098,"KRN",9.8,"NM",13,0)
LA7VIN1^^0^B53484134
"BLD",6098,"KRN",9.8,"NM",14,0)
LA7VHLU6^^0^B56093217
"BLD",6098,"KRN",9.8,"NM",15,0)
LA7VHLU7^^0^B44598323
"BLD",6098,"KRN",9.8,"NM",16,0)
LA7VORU1^^0^B93159332
"BLD",6098,"KRN",9.8,"NM",17,0)
LA7SRR^^0^B41992274
"BLD",6098,"KRN",9.8,"NM",18,0)
LA7VMSG^^0^B31327904
"BLD",6098,"KRN",9.8,"NM",19,0)
LA7VORUB^^0^B55030598
"BLD",6098,"KRN",9.8,"NM",20,0)
LA7VOBR^^0^B25614862
"BLD",6098,"KRN",9.8,"NM",21,0)
LA7VIN4^^0^B77157230
"BLD",6098,"KRN",9.8,"NM",22,0)
LA7SMU2^^0^B28488734
"BLD",6098,"KRN",9.8,"NM",23,0)
LA7SCE^^0^B67468089
"BLD",6098,"KRN",9.8,"NM",24,0)
LA7VORM^^0^B73850639
"BLD",6098,"KRN",9.8,"NM",25,0)
LA7SMU2A^^0^B11988192
"BLD",6098,"KRN",9.8,"NM",26,0)
LA7SM^^0^B66694300
"BLD",6098,"KRN",9.8,"NM",27,0)
LA7SM1^^0^B56269979
"BLD",6098,"KRN",9.8,"NM",28,0)
LA7SMB^^0^B50425818
"BLD",6098,"KRN",9.8,"NM",29,0)
LA7SMP^^0^B84913875
"BLD",6098,"KRN",9.8,"NM",30,0)
LA7SMP0^^0^B70447945
"BLD",6098,"KRN",9.8,"NM",31,0)
LA7VORM1^^0^B84130620
"BLD",6098,"KRN",9.8,"NM",32,0)
LA7VIN7^^0^B81438195
"BLD",6098,"KRN",9.8,"NM",33,0)
LA7VIN6^^0^B18944829
"BLD",6098,"KRN",9.8,"NM",34,0)
LAGEN^^0^B50777837
"BLD",6098,"KRN",9.8,"NM",35,0)
LA7VIN2^^0^B44814406
"BLD",6098,"KRN",9.8,"NM",36,0)
LA7VIN2A^^0^B32994528
"BLD",6098,"KRN",9.8,"NM",37,0)
LA7VIN4A^^0^B16212997
"BLD",6098,"KRN",9.8,"NM",38,0)
LA7VIN1A^^0^B39196465
"BLD",6098,"KRN",9.8,"NM",39,0)
LA7VIN7A^^0^B55259468
"BLD",6098,"KRN",9.8,"NM",40,0)
LA7VHLU3^^0^B56049965
"BLD",6098,"KRN",9.8,"NM",41,0)
LA7VHLU1^^0^B37375744
"BLD",6098,"KRN",9.8,"NM",42,0)
LA7UTILB^^0^B12063183
"BLD",6098,"KRN",9.8,"NM",43,0)
LA7VPID^^0^B26321438
"BLD",6098,"KRN",9.8,"NM",44,0)
LA7VIN7B^^0^B59079752
"BLD",6098,"KRN",9.8,"NM",45,0)
LA7SMPXL^^0^B22838207
"BLD",6098,"KRN",9.8,"NM",46,0)
LA7VOBX^^0^B30185961
"BLD",6098,"KRN",9.8,"NM",47,0)
LA7VSET^^0^B99085612
"BLD",6098,"KRN",9.8,"NM",50,0)
LA7SBCR2^^0^B13756117
"BLD",6098,"KRN",9.8,"NM",51,0)
LA7SMA^^0^B50957198
"BLD",6098,"KRN",9.8,"NM",52,0)
LA7SMU1^^0^B47133373
"BLD",6098,"KRN",9.8,"NM",53,0)
LA7UTILA^^0^B34688936
"BLD",6098,"KRN",9.8,"NM",54,0)
LA7VIN7C^^0^B37686666
"BLD",6098,"KRN",9.8,"NM",55,0)
LA7SM2^^0^B54325058
"BLD",6098,"KRN",9.8,"NM",56,0)
LA7LOG^^0^B28186604
"BLD",6098,"KRN",9.8,"NM",57,0)
LA7VIN71^^0^B21329203
"BLD",6098,"KRN",9.8,"NM",59,0)
LA7UTILC^^0^B150916057
"BLD",6098,"KRN",9.8,"NM",60,0)
LA7XREF^^0^B4252557
"BLD",6098,"KRN",9.8,"NM",62,0)
LA7VIN5A^^0^B32697215
"BLD",6098,"KRN",9.8,"NM",63,0)
LA7VOBX4^^0^B56431898
"BLD",6098,"KRN",9.8,"NM",64,0)
LA7VIN^^0^B29668237
"BLD",6098,"KRN",9.8,"NM",65,0)
LA7VIN7D^^0^B43658444
"BLD",6098,"KRN",9.8,"NM",66,0)
LA7VMSG1^^0^B59398226
"BLD",6098,"KRN",9.8,"NM",67,0)
LA7VLCM^^0^B18946807
"BLD",6098,"KRN",9.8,"NM",68,0)
LA7VLCM1^^0^B43117815
"BLD",6098,"KRN",9.8,"NM",69,0)
LA7VLCM2^^0^B30898261
"BLD",6098,"KRN",9.8,"NM",70,0)
LA7VLCM3^^0^B23687797
"BLD",6098,"KRN",9.8,"NM",71,0)
LA7VHLU8^^0^B10483894
"BLD",6098,"KRN",9.8,"NM",73,0)
LA7SM2A^^0^B16317595
"BLD",6098,"KRN",9.8,"NM",74,0)
LA7UXQA^^0^B13015176
"BLD",6098,"KRN",9.8,"NM",75,0)
LA7VLCM4^^0^B20635804
"BLD",6098,"KRN",9.8,"NM",76,0)
LA74A^^0^B78776030
"BLD",6098,"KRN",9.8,"NM",77,0)
LA7VHLUA^^0^B4032160
"BLD",6098,"KRN",9.8,"NM",78,0)
LA7VLCM6^^0^B24210919
"BLD",6098,"KRN",9.8,"NM",79,0)
LA7VLCM5^^0^B43878567
"BLD",6098,"KRN",9.8,"NM",80,0)
LA7VIN5B^^0^B39713645
"BLD",6098,"KRN",9.8,"NM",81,0)
LA7SMU^^0^B44618035
"BLD",6098,"KRN",9.8,"NM",82,0)
LA7SMB1^^0^B8530586
"BLD",6098,"KRN",9.8,"NM",83,0)
LA7VLCM7^^0^B54459099
"BLD",6098,"KRN",9.8,"NM",84,0)
LA7VIN1B^^0^B33146599
"BLD",6098,"KRN",9.8,"NM",85,0)
LA7UTILD^^0^B1067797
"BLD",6098,"KRN",9.8,"NM",86,0)
LA7VPFL^^0^B35049121
"BLD",6098,"KRN",9.8,"NM",87,0)
LA7VIN3^^0^B9946828
"BLD",6098,"KRN",9.8,"NM",88,0)
LA7SRPT^^0^B91984
"BLD",6098,"KRN",9.8,"NM",89,0)
LA7SRPT1^^0^B69536146
"BLD",6098,"KRN",9.8,"NM",90,0)
LA7SRPT2^^0^B70233779
"BLD",6098,"KRN",9.8,"NM",91,0)
LA7SRPT3^^0^B48465055
"BLD",6098,"KRN",9.8,"NM",92,0)
LA7SRPT4^^0^B67490629
"BLD",6098,"KRN",9.8,"NM",93,0)
LA7VOBRB^^0^B28052109
"BLD",6098,"KRN",9.8,"NM",94,0)
LA7VSTP^^0^B33836613
"BLD",6098,"KRN",9.8,"NM",95,0)
LA7HDR^^0^B43741529
"BLD",6098,"KRN",9.8,"NM",96,0)
LA7UIO1^^0^B66837499
"BLD",6098,"KRN",9.8,"NM",97,0)
LA7CHKF^^0^B118760272
"BLD",6098,"KRN",9.8,"NM",98,0)
LA7CHKFP^^0^B16811133
"BLD",6098,"KRN",9.8,"NM",99,0)
LA7POC^^0^B14984889
"BLD",6098,"KRN",9.8,"NM",100,0)
LA7ADL^^0^B38927932
"BLD",6098,"KRN",9.8,"NM",101,0)
LA7ADL1^^0^B22761823
"BLD",6098,"KRN",9.8,"NM",102,0)
LAHWATCH^^0^B13257024
"BLD",6098,"KRN",9.8,"NM",103,0)
LAWATCH^^0^B14822305
"BLD",6098,"KRN",9.8,"NM",104,0)
LA7VHLU^^0^B47913954
"BLD",6098,"KRN",9.8,"NM",105,0)
LA7VHLU9^^0^B19044226
"BLD",6098,"KRN",9.8,"NM",106,0)
LAMIAUT3^^0^B16090565
"BLD",6098,"KRN",9.8,"NM",107,0)
LA7PURG^^0^B15027084
"BLD",6098,"KRN",9.8,"NM",108,0)
LA7VHL^^0^B32679919
"BLD",6098,"KRN",9.8,"NM",109,0)
LA7VHLUB^^0^B5119748
"BLD",6098,"KRN",9.8,"NM",110,0)
LA7VOBX1^^0^B29612848
"BLD",6098,"KRN",9.8,"NM","B","LA74A",76)

"BLD",6098,"KRN",9.8,"NM","B","LA7ADL",100)

"BLD",6098,"KRN",9.8,"NM","B","LA7ADL1",101)

"BLD",6098,"KRN",9.8,"NM","B","LA7CHKF",97)

"BLD",6098,"KRN",9.8,"NM","B","LA7CHKFP",98)

"BLD",6098,"KRN",9.8,"NM","B","LA7HDR",95)

"BLD",6098,"KRN",9.8,"NM","B","LA7LOG",56)

"BLD",6098,"KRN",9.8,"NM","B","LA7POC",99)

"BLD",6098,"KRN",9.8,"NM","B","LA7PURG",107)

"BLD",6098,"KRN",9.8,"NM","B","LA7SBCR2",50)

"BLD",6098,"KRN",9.8,"NM","B","LA7SCE",23)

"BLD",6098,"KRN",9.8,"NM","B","LA7SM",26)

"BLD",6098,"KRN",9.8,"NM","B","LA7SM1",27)

"BLD",6098,"KRN",9.8,"NM","B","LA7SM2",55)

"BLD",6098,"KRN",9.8,"NM","B","LA7SM2A",73)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMA",51)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMB",28)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMB1",82)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMP",29)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMP0",30)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMPXL",45)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMU",81)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMU1",52)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMU2",22)

"BLD",6098,"KRN",9.8,"NM","B","LA7SMU2A",25)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRPT",88)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRPT1",89)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRPT2",90)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRPT3",91)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRPT4",92)

"BLD",6098,"KRN",9.8,"NM","B","LA7SRR",17)

"BLD",6098,"KRN",9.8,"NM","B","LA7UIO1",96)

"BLD",6098,"KRN",9.8,"NM","B","LA7UTILA",53)

"BLD",6098,"KRN",9.8,"NM","B","LA7UTILB",42)

"BLD",6098,"KRN",9.8,"NM","B","LA7UTILC",59)

"BLD",6098,"KRN",9.8,"NM","B","LA7UTILD",85)

"BLD",6098,"KRN",9.8,"NM","B","LA7UXQA",74)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHL",108)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU",104)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU1",41)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU2",10)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU3",40)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU4",11)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU5",1)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU6",14)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU7",15)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU8",71)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLU9",105)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLUA",77)

"BLD",6098,"KRN",9.8,"NM","B","LA7VHLUB",109)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN",64)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN1",13)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN1A",38)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN1B",84)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN2",35)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN2A",36)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN3",87)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN4",21)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN4A",37)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN5",12)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN5A",62)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN5B",80)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN6",33)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN7",32)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN71",57)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN7A",39)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN7B",44)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN7C",54)

"BLD",6098,"KRN",9.8,"NM","B","LA7VIN7D",65)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM",67)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM1",68)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM2",69)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM3",70)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM4",75)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM5",79)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM6",78)

"BLD",6098,"KRN",9.8,"NM","B","LA7VLCM7",83)

"BLD",6098,"KRN",9.8,"NM","B","LA7VMSG",18)

"BLD",6098,"KRN",9.8,"NM","B","LA7VMSG1",66)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBR",20)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBRA",2)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBRB",93)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBX",46)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBX1",110)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBX2",3)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBX3",4)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBX4",63)

"BLD",6098,"KRN",9.8,"NM","B","LA7VOBXA",5)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORM",24)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORM1",31)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORM3",6)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORU",7)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORU1",16)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORU2",8)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORUA",9)

"BLD",6098,"KRN",9.8,"NM","B","LA7VORUB",19)

"BLD",6098,"KRN",9.8,"NM","B","LA7VPFL",86)

"BLD",6098,"KRN",9.8,"NM","B","LA7VPID",43)

"BLD",6098,"KRN",9.8,"NM","B","LA7VSET",47)

"BLD",6098,"KRN",9.8,"NM","B","LA7VSTP",94)

"BLD",6098,"KRN",9.8,"NM","B","LA7XREF",60)

"BLD",6098,"KRN",9.8,"NM","B","LAGEN",34)

"BLD",6098,"KRN",9.8,"NM","B","LAHWATCH",102)

"BLD",6098,"KRN",9.8,"NM","B","LAMIAUT3",106)

"BLD",6098,"KRN",9.8,"NM","B","LAWATCH",103)

"BLD",6098,"KRN",19,0)
19
"BLD",6098,"KRN",19,"NM",0)
^9.68A^28^22
"BLD",6098,"KRN",19,"NM",3,0)
LA7S MGR MENU^^3
"BLD",6098,"KRN",19,"NM",4,0)
LA7 MAIN MENU^^2
"BLD",6098,"KRN",19,"NM",6,0)
LA7V 62.47 EDIT SUSC^^0
"BLD",6098,"KRN",19,"NM",7,0)
LA7V 62.47 LOCAL IDENTIFIER^^0
"BLD",6098,"KRN",19,"NM",8,0)
LA7V 62.47 PRINT LOCAL^^0
"BLD",6098,"KRN",19,"NM",9,0)
LA7V 62.47 PRINT SUSC^^0
"BLD",6098,"KRN",19,"NM",10,0)
LA7V 62.47 MENU^^0
"BLD",6098,"KRN",19,"NM",11,0)
LA7V 62.47 PRINT BY MSG CONFIG^^0
"BLD",6098,"KRN",19,"NM",12,0)
LA7V 62.47 PRINT CS MISMATCHES^^0
"BLD",6098,"KRN",19,"NM",13,0)
LA7V 62.47 CLONE MSG CONFIG^^0
"BLD",6098,"KRN",19,"NM",14,0)
LA7V 62.47 FIND IDENTIFIER^^0
"BLD",6098,"KRN",19,"NM",15,0)
LA7 REPROCESS HL7 MESSAGES^^0
"BLD",6098,"KRN",19,"NM",16,0)
LA7V 62.47 ERROR CODE HELP^^0
"BLD",6098,"KRN",19,"NM",17,0)
LA7V 62.47 ADD DOD^^0
"BLD",6098,"KRN",19,"NM",18,0)
LA7V 62.47 MAP SUSCS^^0
"BLD",6098,"KRN",19,"NM",19,0)
LA7S MAP NON-VA SNOMED CODES^^0
"BLD",6098,"KRN",19,"NM",23,0)
LA7S CODE USAGE^^0
"BLD",6098,"KRN",19,"NM",24,0)
LA7S 62.9 PRINT^^0
"BLD",6098,"KRN",19,"NM",25,0)
LA7S 62.48 PRINT SCT OVERRIDE^^0
"BLD",6098,"KRN",19,"NM",26,0)
LA7VPFL^^0
"BLD",6098,"KRN",19,"NM",27,0)
LA7S LOAD MAPPING SCT^^0
"BLD",6098,"KRN",19,"NM",28,0)
LA7S MANIFEST TEST ADD/REMOVE^^0
"BLD",6098,"KRN",19,"NM","B","LA7 MAIN MENU",4)

"BLD",6098,"KRN",19,"NM","B","LA7 REPROCESS HL7 MESSAGES",15)

"BLD",6098,"KRN",19,"NM","B","LA7S 62.48 PRINT SCT OVERRIDE",25)

"BLD",6098,"KRN",19,"NM","B","LA7S 62.9 PRINT",24)

"BLD",6098,"KRN",19,"NM","B","LA7S CODE USAGE",23)

"BLD",6098,"KRN",19,"NM","B","LA7S LOAD MAPPING SCT",27)

"BLD",6098,"KRN",19,"NM","B","LA7S MANIFEST TEST ADD/REMOVE",28)

"BLD",6098,"KRN",19,"NM","B","LA7S MAP NON-VA SNOMED CODES",19)

"BLD",6098,"KRN",19,"NM","B","LA7S MGR MENU",3)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 ADD DOD",17)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 CLONE MSG CONFIG",13)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 EDIT SUSC",6)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 ERROR CODE HELP",16)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 FIND IDENTIFIER",14)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 LOCAL IDENTIFIER",7)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 MAP SUSCS",18)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 MENU",10)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 PRINT BY MSG CONFIG",11)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 PRINT CS MISMATCHES",12)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 PRINT LOCAL",8)

"BLD",6098,"KRN",19,"NM","B","LA7V 62.47 PRINT SUSC",9)

"BLD",6098,"KRN",19,"NM","B","LA7VPFL",26)

"BLD",6098,"KRN",19.1,0)
19.1
"BLD",6098,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6098,"KRN",101,0)
101
"BLD",6098,"KRN",409.61,0)
409.61
"BLD",6098,"KRN",771,0)
771
"BLD",6098,"KRN",870,0)
870
"BLD",6098,"KRN",8989.51,0)
8989.51
"BLD",6098,"KRN",8989.51,"NM",0)
^9.68A^13^11
"BLD",6098,"KRN",8989.51,"NM",1,0)
LA7UTILA PARSE^^0
"BLD",6098,"KRN",8989.51,"NM",2,0)
LA7UTILA USE BROWSER^^0
"BLD",6098,"KRN",8989.51,"NM",3,0)
LA7UTILA PARSE LAST^^0
"BLD",6098,"KRN",8989.51,"NM",4,0)
LA7UTILA USE BROWSER LAST^^0
"BLD",6098,"KRN",8989.51,"NM",5,0)
LA7UTILA SHOIDS^^0
"BLD",6098,"KRN",8989.51,"NM",6,0)
LA7UTILA SHOIDS LAST^^0
"BLD",6098,"KRN",8989.51,"NM",9,0)
LA LEDI HL7 STATUS^^1^
"BLD",6098,"KRN",8989.51,"NM",10,0)
LA7S MANIFEST DEFLT ACCESSION^^1^
"BLD",6098,"KRN",8989.51,"NM",11,0)
LA7S MANIFEST EXC PREV TEST^^1^
"BLD",6098,"KRN",8989.51,"NM",12,0)
LA LEDI ORU HL7 STATUS^^0
"BLD",6098,"KRN",8989.51,"NM",13,0)
LA LEDI ORM HL7 STATUS^^0
"BLD",6098,"KRN",8989.51,"NM","B","LA LEDI HL7 STATUS",9)

"BLD",6098,"KRN",8989.51,"NM","B","LA LEDI ORM HL7 STATUS",13)

"BLD",6098,"KRN",8989.51,"NM","B","LA LEDI ORU HL7 STATUS",12)

"BLD",6098,"KRN",8989.51,"NM","B","LA7S MANIFEST DEFLT ACCESSION",10)

"BLD",6098,"KRN",8989.51,"NM","B","LA7S MANIFEST EXC PREV TEST",11)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA PARSE",1)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA PARSE LAST",3)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA SHOIDS",5)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA SHOIDS LAST",6)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA USE BROWSER",2)

"BLD",6098,"KRN",8989.51,"NM","B","LA7UTILA USE BROWSER LAST",4)

"BLD",6098,"KRN",8989.52,0)
8989.52
"BLD",6098,"KRN",8989.52,"NM",0)
^9.68A^2^2
"BLD",6098,"KRN",8989.52,"NM",1,0)
LR USER^^0
"BLD",6098,"KRN",8989.52,"NM",2,0)
LR PKG^^0
"BLD",6098,"KRN",8989.52,"NM","B","LR PKG",2)

"BLD",6098,"KRN",8989.52,"NM","B","LR USER",1)

"BLD",6098,"KRN",8994,0)
8994
"BLD",6098,"KRN",8994,"NM",0)
^9.68A^^
"BLD",6098,"KRN","B",.4,.4)

"BLD",6098,"KRN","B",.401,.401)

"BLD",6098,"KRN","B",.402,.402)

"BLD",6098,"KRN","B",.403,.403)

"BLD",6098,"KRN","B",.5,.5)

"BLD",6098,"KRN","B",.84,.84)

"BLD",6098,"KRN","B",3.6,3.6)

"BLD",6098,"KRN","B",3.8,3.8)

"BLD",6098,"KRN","B",9.2,9.2)

"BLD",6098,"KRN","B",9.8,9.8)

"BLD",6098,"KRN","B",19,19)

"BLD",6098,"KRN","B",19.1,19.1)

"BLD",6098,"KRN","B",101,101)

"BLD",6098,"KRN","B",409.61,409.61)

"BLD",6098,"KRN","B",771,771)

"BLD",6098,"KRN","B",870,870)

"BLD",6098,"KRN","B",8989.51,8989.51)

"BLD",6098,"KRN","B",8989.52,8989.52)

"BLD",6098,"KRN","B",8994,8994)

"BLD",6098,"PRE")
LA74
"BLD",6098,"PRET")
PTG^LA74
"BLD",6098,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",6098,"QUES",0)
^9.62^^
"BLD",6098,"REQB",0)
^9.611^4^4
"BLD",6098,"REQB",1,0)
LA*5.2*68^2
"BLD",6098,"REQB",2,0)
XM*8.0*36^2
"BLD",6098,"REQB",3,0)
LR*5.2*350^2
"BLD",6098,"REQB",4,0)
LA*5.2*66^2
"BLD",6098,"REQB","B","LA*5.2*66",4)

"BLD",6098,"REQB","B","LA*5.2*68",1)

"BLD",6098,"REQB","B","LR*5.2*350",3)

"BLD",6098,"REQB","B","XM*8.0*36",2)

"DATA",62.485,49,0)
49^Msg # |1|, specimen source |2| in message does not match accession's |3| related topography code. See file #61, TOPOGRAPHY entry # |4|.^1
"DATA",62.485,49,1)
S LA7TXT(1)=LA76249,LA7TXT(2)=LA7MSG,LA7TXT(3)=$S($G(LA7UID)'="":"UID "_LA7UID,$G(LA7ACC)'="":LA7ACC,1:$G(LA7AA)_" "_$G(LA7AD)_" "_$G(LA7AN)),LA7TXT(4)=LA761
"DATA",62.485,122,0)
122^Accession not in a reportable status. Result transmission aborted.^1
"DATA",62.485,122,1)
Q
"DATA",62.485,200,0)
200^Msg #|1|: No File #62.47 mapping found for OBX-3: |2|^1
"DATA",62.485,200,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$E(LA7OBX3,1,225-$L(LA7TXT))
"DATA",62.485,201,0)
201^Msg #|1|: No File #63 field mapping found for OBX-3: |2|^1
"DATA",62.485,201,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$E(LA7OBX3,1,225-$L(LA7TXT))
"DATA",62.485,202,0)
202^Msg #|1|: No filing method for CONCEPT # |3| found for OBX-3:  |2|^1
"DATA",62.485,202,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$E(LA7VOBX3,1,245-$L(LA7TXT)) S LA7TXT(3)=$G(LA76247)
"DATA",62.485,203,0)
203^Msg #|1|: No Coding System found in OBX-5:  |2|^1
"DATA",62.485,203,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$E(LA7VOBX5,1,245-$L(LA7TXT))
"DATA",62.485,204,0)
204^Msg #|1|: Unknown entity in OBX-5: |2|^1
"DATA",62.485,204,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$E(LA7VOBX5,1,245-$L(LA7TXT))
"DATA",62.485,205,0)
205^Msg #|1|: Invalid SubId in OBX-4|2| for OBX-3: |3|^1
"DATA",62.485,205,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$S(LA7VOBX4'="":" ("_LA7VOBX4_")",1:"") S LA7TXT(3)=$E(LA7VOBX3,1,245-$L(LA7TXT))
"DATA",62.485,206,0)
206^Msg #|1|: Could not create new entry in file #|2| (|3|)^1
"DATA",62.485,206,1)
S LA7TXT(1)=$G(LA76249,"??") S LA7TXT(2)=$G(LRFILE) S LA7TXT(3)=LRINFO
"FIA",62.4)
AUTO INSTRUMENT
"FIA",62.4,0)
^LAB(62.4,
"FIA",62.4,0,0)
62.4
"FIA",62.4,0,1)
y^n^p^^^^n^^n
"FIA",62.4,0,10)

"FIA",62.4,0,11)

"FIA",62.4,0,"RLRO")

"FIA",62.4,0,"VR")
5.2^LA
"FIA",62.4,62.4)
1
"FIA",62.4,62.41)
1
"FIA",62.4,62.41,.001)

"FIA",62.47)
LAB CODE MAPPING
"FIA",62.47,0)
^LAB(62.47,
"FIA",62.47,0,0)
62.47
"FIA",62.47,0,1)
y^n^f^^^^n^^
"FIA",62.47,0,10)
I 1
"FIA",62.47,0,11)

"FIA",62.47,0,"RLRO")

"FIA",62.47,0,"VR")
5.2^LA
"FIA",62.47,62.47)
0
"FIA",62.47,62.4701)
0
"FIA",62.48)
LA7 MESSAGE PARAMETER
"FIA",62.48,0)
^LAHM(62.48,
"FIA",62.48,0,0)
62.48
"FIA",62.48,0,1)
y^n^p^^^^n^^n
"FIA",62.48,0,10)

"FIA",62.48,0,11)

"FIA",62.48,0,"RLRO")

"FIA",62.48,0,"VR")
5.2^LA
"FIA",62.48,62.48)
1
"FIA",62.48,62.48,30)

"FIA",62.48,62.482)
0
"FIA",62.485)
LA7 MESSAGE LOG BULLETINS
"FIA",62.485,0)
^LAHM(62.485,
"FIA",62.485,0,0)
62.485
"FIA",62.485,0,1)
n^n^f^^y^^y^o^n
"FIA",62.485,0,10)

"FIA",62.485,0,11)
I Y=49!(Y=122)!(Y>199&(Y<300))
"FIA",62.485,0,"RLRO")

"FIA",62.485,0,"VR")
5.2^LA
"FIA",62.485,62.485)
0
"FIA",62.49)
LA7 MESSAGE QUEUE
"FIA",62.49,0)
^LAHM(62.49,
"FIA",62.49,0,0)
62.49I
"FIA",62.49,0,1)
y^n^f^^^^n^^n
"FIA",62.49,0,10)

"FIA",62.49,0,11)

"FIA",62.49,0,"RLRO")

"FIA",62.49,0,"VR")
5.2^LA
"FIA",62.49,62.49)
0
"FIA",62.49,62.49002)
0
"FIA",62.49,62.49162)
0
"FIA",62.49,62.495)
0
"FIA",62.8)
LAB SHIPPING MANIFEST
"FIA",62.8,0)
^LAHM(62.8,
"FIA",62.8,0,0)
62.8A
"FIA",62.8,0,1)
y^n^p^^^^n^^n
"FIA",62.8,0,10)

"FIA",62.8,0,11)

"FIA",62.8,0,"RLRO")

"FIA",62.8,0,"VR")
5.2^LA
"FIA",62.8,62.8)
1
"FIA",62.8,62.801)
1
"FIA",62.8,62.801,.08)

"FIA",62.8,62.801,20.1)

"FIA",62.8,62.801,20.2)

"FIA",62.9)
LAB SHIPPING CONFIGURATION
"FIA",62.9,0)
^LAHM(62.9,
"FIA",62.9,0,0)
62.9
"FIA",62.9,0,1)
y^n^p^^^^n^^n
"FIA",62.9,0,10)

"FIA",62.9,0,11)

"FIA",62.9,0,"RLRO")

"FIA",62.9,0,"VR")
5.2^LA
"FIA",62.9,62.9)
1
"FIA",62.9,62.9,44)

"FIA",62.9,62.9001)
1
"FIA",62.9,62.9001,.026)

"FIA",62.9,62.9001,2.36)

"FIA",62.9,62.9002)
0
"FIA",62.9,62.9003)
0
"INI")
PRE^LA74
"INIT")
POST^LA74
"IX",62.47,62.47,"AC",0)
62.47^AC^Cross-reference used to lookup code/system for 'result' role.^MU^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AC",.1,0)
^^1^1^3060125^
"IX",62.47,62.47,"AC",.1,1,0)

"IX",62.47,62.47,"AC",1)
S ^LAB(62.47,"AC",X(1),X(2),X(3),DA(1),DA)=""
"IX",62.47,62.47,"AC",1.4)
S X=$S(X(4)=1:1,1:0)
"IX",62.47,62.47,"AC",2)
K ^LAB(62.47,"AC",X(1),X(2),X(3),DA(1),DA)
"IX",62.47,62.47,"AC",2.5)
K ^LAB(62.47,"AC")
"IX",62.47,62.47,"AC",11.1,0)
^.114IA^4^4
"IX",62.47,62.47,"AC",11.1,1,0)
1^F^62.4701^.02^^1^F
"IX",62.47,62.47,"AC",11.1,2,0)
2^F^62.4701^.01^^2^F
"IX",62.47,62.47,"AC",11.1,3,0)
3^C^^^^3
"IX",62.47,62.47,"AC",11.1,3,1.5)
S X=$P($G(^LAB(62.47,DA(1),0)),U,3)
"IX",62.47,62.47,"AC",11.1,4,0)
4^F^62.4701^.03^^^F
"IX",62.47,62.47,"AC1",0)
62.47^AC1^Cross-reference used to lookup local codes specific to a interface^MU^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AC1",.1,0)
^^2^2^3060207^^
"IX",62.47,62.47,"AC1",.1,1,0)

"IX",62.47,62.47,"AC1",.1,2,0)

"IX",62.47,62.47,"AC1",1)
S ^LAB(62.47,"AC1",X(1),X(2),X(3),X(4),DA(1),DA)=""
"IX",62.47,62.47,"AC1",1.4)
S X=$S((X(5)=1&(+X(6)=0)):1,1:0)
"IX",62.47,62.47,"AC1",2)
K ^LAB(62.47,"AC1",X(1),X(2),X(3),X(4),DA(1),DA)
"IX",62.47,62.47,"AC1",2.5)
K ^LAB(62.47,"AC1")
"IX",62.47,62.47,"AC1",11.1,0)
^.114IA^6^6
"IX",62.47,62.47,"AC1",11.1,1,0)
1^F^62.4701^2.2^^1^F
"IX",62.47,62.47,"AC1",11.1,2,0)
2^F^62.4701^.02^^2^F
"IX",62.47,62.47,"AC1",11.1,3,0)
3^F^62.4701^.01^^3^F
"IX",62.47,62.47,"AC1",11.1,4,0)
4^C^^^^4
"IX",62.47,62.47,"AC1",11.1,4,1.5)
S X=$P($G(^LAB(62.47,DA(1),0)),U,3)
"IX",62.47,62.47,"AC1",11.1,5,0)
5^F^62.4701^.03^^^F
"IX",62.47,62.47,"AC1",11.1,6,0)
6^F^62.4701^.05^^^F
"IX",62.47,62.47,"AC2",0)
62.47^AC2^Cross-reference used to lookup code/system for 'result' role.^MU^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AC2",1)
S ^LAB(62.47,"AC2",X(1),X(2),X(3),X(4),DA(1),DA)=""
"IX",62.47,62.47,"AC2",1.4)
S X=$S((X(5)=1&(X(6)=1)):1,1:0)
"IX",62.47,62.47,"AC2",2)
K ^LAB(62.47,"AC2",X(1),X(2),X(3),X(4),DA(1),DA)
"IX",62.47,62.47,"AC2",2.4)
Q
"IX",62.47,62.47,"AC2",2.5)
K ^LAB(62.47,"AC2")
"IX",62.47,62.47,"AC2",11.1,0)
^.114IA^6^6
"IX",62.47,62.47,"AC2",11.1,1,0)
1^C^^^^1^F
"IX",62.47,62.47,"AC2",11.1,1,1.5)
S X=$P($G(^LAB(62.47,DA(1),0)),U,2)
"IX",62.47,62.47,"AC2",11.1,2,0)
2^F^62.4701^.02^^2^F
"IX",62.47,62.47,"AC2",11.1,3,0)
3^F^62.4701^.01^^3^F
"IX",62.47,62.47,"AC2",11.1,4,0)
4^C^^^^4
"IX",62.47,62.47,"AC2",11.1,4,1.5)
S X=$P($G(^LAB(62.47,DA(1),0)),U,3)
"IX",62.47,62.47,"AC2",11.1,5,0)
5^F^62.4701^.03^^^F
"IX",62.47,62.47,"AC2",11.1,6,0)
6^F^62.4701^.05^^^F
"IX",62.47,62.47,"AD",0)
62.47^AD^Cross-reference to lookup codes used for 'answer' role.^MU^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AD",1)
S ^LAB(62.47,"AD",DA(1),X(1),X(2),X(3),DA)=""
"IX",62.47,62.47,"AD",1.4)
S X=$S(X(4)=2:1,1:0)
"IX",62.47,62.47,"AD",2)
K ^LAB(62.47,"AD",DA(1),X(1),X(2),X(3),DA)
"IX",62.47,62.47,"AD",2.5)
K ^LAB(62.47,"AD")
"IX",62.47,62.47,"AD",11.1,0)
^.114IA^4^4
"IX",62.47,62.47,"AD",11.1,1,0)
1^F^62.4701^.02^^1^F
"IX",62.47,62.47,"AD",11.1,2,0)
2^F^62.4701^.01^^2^F
"IX",62.47,62.47,"AD",11.1,3,0)
3^F^62.4701^.04^^3^F
"IX",62.47,62.47,"AD",11.1,4,0)
4^F^62.4701^.03^^^F
"IX",62.47,62.47,"AD1",0)
62.47^AD1^Cross-reference used to lookup local codes specific to an interface^MU^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AD1",.1,0)
^^1^1^3060207^
"IX",62.47,62.47,"AD1",.1,1,0)

"IX",62.47,62.47,"AD1",1)
S ^LAB(62.47,"AD1",DA(1),X(1),X(2),X(3),X(4),DA)=""
"IX",62.47,62.47,"AD1",1.4)
S X=$S((X(5)=2&(X(6)=0)):1,1:0)
"IX",62.47,62.47,"AD1",2)
K ^LAB(62.47,"AD1",DA(1),X(1),X(2),X(3),X(4),DA)
"IX",62.47,62.47,"AD1",2.5)
K ^LAB(62.47,"AD1")
"IX",62.47,62.47,"AD1",11.1,0)
^.114IA^6^6
"IX",62.47,62.47,"AD1",11.1,1,0)
1^F^62.4701^2.2^^1^F
"IX",62.47,62.47,"AD1",11.1,2,0)
2^F^62.4701^.02^^2^F
"IX",62.47,62.47,"AD1",11.1,3,0)
3^F^62.4701^.01^^3^F
"IX",62.47,62.47,"AD1",11.1,4,0)
4^C^^^^4
"IX",62.47,62.47,"AD1",11.1,4,1.5)
S X=$P($G(^LAB(62.47,DA(1),0)),U,3)
"IX",62.47,62.47,"AD1",11.1,5,0)
5^F^62.4701^.03^^^F
"IX",62.47,62.47,"AD1",11.1,6,0)
6^F^62.4701^.05^^^F
"IX",62.47,62.47,"AF",0)
62.47^AF^CODING SYSTEM used.^R^^R^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AF",.1,0)
^^6^6^3060429^
"IX",62.47,62.47,"AF",.1,1,0)
^LAB(62.47,"AF",CODING SYSTEM,IDENTIFIER,DA(1),DA)
"IX",62.47,62.47,"AF",.1,2,0)
 
"IX",62.47,62.47,"AF",.1,3,0)
All CODING SYSTEMs and IDENTIFIERs in the file.  This is used primarily to
"IX",62.47,62.47,"AF",.1,4,0)
flag entries in File #61.2 that have their SNOMED CT ID mapped in this
"IX",62.47,62.47,"AF",.1,5,0)
file.  This alerts the user that the #61.2 entry is in use for their LEDI
"IX",62.47,62.47,"AF",.1,6,0)
system and should not be changed without updating file #62.47.
"IX",62.47,62.47,"AF",1)
S ^LAB(62.47,"AF",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)=""
"IX",62.47,62.47,"AF",1.4)
S X=1
"IX",62.47,62.47,"AF",2)
K ^LAB(62.47,"AF",$E(X(1),1,30),$E(X(2),1,30),DA(1),DA)
"IX",62.47,62.47,"AF",2.4)

"IX",62.47,62.47,"AF",2.5)
K ^LAB(62.47,"AF")
"IX",62.47,62.47,"AF",11.1,0)
^.114IA^2^2
"IX",62.47,62.47,"AF",11.1,1,0)
1^F^62.4701^.02^30^1^F
"IX",62.47,62.47,"AF",11.1,2,0)
2^F^62.4701^.01^30^2^F
"IX",62.47,62.47,"AH",0)
62.47^AH^Whole file IDENTIFIER index^R^^F^IR^W^62.4701^^^^^S
"IX",62.47,62.47,"AH",.1,0)
^^2^2^3061011^
"IX",62.47,62.47,"AH",.1,1,0)
Used primarily with Option LA7V 62.47 FIND IDENTIFIER that allows the 
"IX",62.47,62.47,"AH",.1,2,0)
user to display all #62.47 entries for a specific Identifier.
"IX",62.47,62.47,"AH",1)
S ^LAB(62.47,"AH",$E(X,1,30),DA(1),DA)=""
"IX",62.47,62.47,"AH",2)
K ^LAB(62.47,"AH",$E(X,1,30),DA(1),DA)
"IX",62.47,62.47,"AH",2.5)
K ^LAB(62.47,"AH")
"IX",62.47,62.47,"AH",11.1,0)
^.114IA^1^1
"IX",62.47,62.47,"AH",11.1,1,0)
1^F^62.4701^.01^30^1^F
"IX",62.47,62.47,"C",0)
62.47^C^Cross-reference database code with mapping concept^R^^F^IR^I^62.47^^^^^LS
"IX",62.47,62.47,"C",.1,0)
^^10^10^3060206^^^^
"IX",62.47,62.47,"C",.1,1,0)
Establish relationship between concept and related database
"IX",62.47,62.47,"C",.1,2,0)
storage location. Used to allow the same 'answer' code to be
"IX",62.47,62.47,"C",.1,3,0)
associated with multiple concepts and determine which concept
"IX",62.47,62.47,"C",.1,4,0)
the 'answer' code is to be associated with for a specific instance.
"IX",62.47,62.47,"C",.1,5,0)
 
"IX",62.47,62.47,"C",.1,6,0)
Example is SNOMED CT code 23506009 is the term 'normal flora'.
"IX",62.47,62.47,"C",.1,7,0)
This term can be the 'answer' used in several places within the
"IX",62.47,62.47,"C",.1,8,0)
Lab DATA file (#63).
"IX",62.47,62.47,"C",.1,9,0)

"IX",62.47,62.47,"C",.1,10,0)

"IX",62.47,62.47,"C",1)
S ^LAB(62.47,"C",X,DA)=""
"IX",62.47,62.47,"C",2)
K ^LAB(62.47,"C",X,DA)
"IX",62.47,62.47,"C",2.5)
K ^LAB(62.47,"C")
"IX",62.47,62.47,"C",11.1,0)
^.114IA^1^1
"IX",62.47,62.47,"C",11.1,1,0)
1^F^62.47^.03^^1^F
"IX",62.48,62.482,"AC",0)
62.482^AC^Cross-reference by file type^R^^R^IR^I^62.482^^^^^S
"IX",62.48,62.482,"AC",1)
S ^LAHM(62.48,DA(1),"SCT","AC",X(1),X(2),DA)=""
"IX",62.48,62.482,"AC",2)
K ^LAHM(62.48,DA(1),"SCT","AC",X(1),X(2),DA)
"IX",62.48,62.482,"AC",2.5)
K ^LAHM(62.48,DA(1),"SCT","AC")
"IX",62.48,62.482,"AC",11.1,0)
^.114IA^2^2
"IX",62.48,62.482,"AC",11.1,1,0)
1^F^62.482^.01^^1^F
"IX",62.48,62.482,"AC",11.1,1,3)

"IX",62.48,62.482,"AC",11.1,2,0)
2^F^62.482^.02^^2^F
"IX",62.48,62.482,"AC",11.1,2,3)

"IX",62.48,62.482,"AD",0)
62.482^AD^Cross-reference by SNOMED CT ID^R^^R^IR^I^62.482^^^^^S
"IX",62.48,62.482,"AD",1)
S ^LAHM(62.48,DA(1),"SCT","AD",X(1),X(2),DA)=""
"IX",62.48,62.482,"AD",2)
K ^LAHM(62.48,DA(1),"SCT","AD",X(1),X(2),DA)
"IX",62.48,62.482,"AD",2.5)
K ^LAHM(62.48,DA(1),"SCT","AD")
"IX",62.48,62.482,"AD",11.1,0)
^.114IA^2^2
"IX",62.48,62.482,"AD",11.1,1,0)
1^F^62.482^.02^^1^F
"IX",62.48,62.482,"AD",11.1,1,3)

"IX",62.48,62.482,"AD",11.1,2,0)
2^F^62.482^.01^^2^F
"IX",62.48,62.482,"AD",11.1,2,3)

"IX",62.48,62.482,"AD1",0)
62.482^AD1^Cross-reference by SNOMED CT ID on file #61 entries^R^^R^IR^I^62.482^^^^^S
"IX",62.48,62.482,"AD1",1)
S ^LAHM(62.48,DA(1),"SCT","AD1",X(1),X(2),DA)=""
"IX",62.48,62.482,"AD1",1.4)
S X=$S($P(X(2),";",2)="LAB(61,":1,1:0)
"IX",62.48,62.482,"AD1",2)
K ^LAHM(62.48,DA(1),"SCT","AD1",X(1),X(2),DA)
"IX",62.48,62.482,"AD1",2.5)
K ^LAHM(62.48,DA(1),"SCT","AD1")
"IX",62.48,62.482,"AD1",11.1,0)
^.114IA^2^2
"IX",62.48,62.482,"AD1",11.1,1,0)
1^F^62.482^.02^^1^F
"IX",62.48,62.482,"AD1",11.1,2,0)
2^F^62.482^.01^^2^F
"IX",62.48,62.482,"AD2",0)
62.482^AD2^Cross-reference by SNOMED CT ID on file #62 entries^R^^R^IR^I^62.482^^^^^S
"IX",62.48,62.482,"AD2",1)
S ^LAHM(62.48,DA(1),"SCT","AD2",X(1),X(2),DA)=""
"IX",62.48,62.482,"AD2",1.4)
S X=$S($P(X(2),";",2)="LAB(62,":1,1:0)
"IX",62.48,62.482,"AD2",2)
K ^LAHM(62.48,DA(1),"SCT","AD2",X(1),X(2),DA)
"IX",62.48,62.482,"AD2",2.5)
K ^LAHM(62.48,DA(1),"SCT","AD2")
"IX",62.48,62.482,"AD2",11.1,0)
^.114IA^2^2
"IX",62.48,62.482,"AD2",11.1,1,0)
1^F^62.482^.02^^1^F
"IX",62.48,62.482,"AD2",11.1,1,3)

"IX",62.48,62.482,"AD2",11.1,2,0)
2^F^62.482^.01^^2^F
"IX",62.48,62.482,"AD2",11.1,2,3)

"IX",62.49,62.49,"AC",0)
62.49^AC^Used to process outgoing HL7 ORU and ORR messages.^R^^R^IR^I^62.49^^^^^S
"IX",62.49,62.49,"AC",.1,0)
^^5^5^3020319^
"IX",62.49,62.49,"AC",.1,1,0)
This cross reference is used to process outgoing HL7 ORU (Observation
"IX",62.49,62.49,"AC",.1,2,0)
Results Unsolicited) and ORR (Order Response) messages.
"IX",62.49,62.49,"AC",.1,3,0)
 
"IX",62.49,62.49,"AC",.1,4,0)
The format is as follows:
"IX",62.49,62.49,"AC",.1,5,0)
  ^LAHM(62.49,"AC",MESSAGE TYPE,"P",CONFIGURATION,DA)="" 
"IX",62.49,62.49,"AC",1)
S ^LAHM(62.49,"AC",$E(X(1),1,3),X(2),X(3),DA)=""
"IX",62.49,62.49,"AC",1.4)
S X=X(2)="P"&(X(4)="O")
"IX",62.49,62.49,"AC",2)
K ^LAHM(62.49,"AC",$E(X(1),1,3),X(2),X(3),DA)
"IX",62.49,62.49,"AC",2.4)
S X=X(2)="P"&(X(4)="O")
"IX",62.49,62.49,"AC",2.5)
K ^LAHM(62.49,"AC")
"IX",62.49,62.49,"AC",11.1,0)
^.114IA^4^4
"IX",62.49,62.49,"AC",11.1,1,0)
1^F^62.49^108^3^1^F
"IX",62.49,62.49,"AC",11.1,2,0)
2^F^62.49^2^^2^F
"IX",62.49,62.49,"AC",11.1,3,0)
3^F^62.49^.5^^3^F
"IX",62.49,62.49,"AC",11.1,4,0)
4^F^62.49^1^^^F
"IX",62.49,62.49,"AC",11.1,4,3)

"IX",62.49,62.49,"C",0)
62.49^C^Instrument name and related specimen id.^R^^F^IR^I^62.49^^^^^LS
"IX",62.49,62.49,"C",.1,0)
^^17^17^3071002^^
"IX",62.49,62.49,"C",.1,1,0)
This field contains the instrument name from the AUTO INSTRUMENT file (#62.4).
"IX",62.49,62.49,"C",.1,2,0)
This field is used for looking up messages by instrument name
"IX",62.49,62.49,"C",.1,3,0)

"IX",62.49,62.49,"C",.1,4,0)
The INSTRUMENT NAME field is constructed as follows:
"IX",62.49,62.49,"C",.1,5,0)
  1. Instrument name from the #.01 Name field of the Auto Instrument file #62.4
"IX",62.49,62.49,"C",.1,6,0)
  2. Message type - "I" for Incoming, "O" for Outgoing
"IX",62.49,62.49,"C",.1,7,0)
  3. Lab Unique Id or Accession number
"IX",62.49,62.49,"C",.1,8,0)
     - Outgoing messages always use the UID when building this name.
"IX",62.49,62.49,"C",.1,9,0)
     - Incoming messages are based on what is found in the message.
"IX",62.49,62.49,"C",.1,10,0)
 
"IX",62.49,62.49,"C",.1,11,0)
  Examples: CX7-I-2061020105
"IX",62.49,62.49,"C",.1,12,0)
            H747-O-3163120010
"IX",62.49,62.49,"C",.1,13,0)
            MLA-I-45
"IX",62.49,62.49,"C",.1,14,0)
 
"IX",62.49,62.49,"C",.1,15,0)
  Messages with no instrument name will use "UNKNOWN".
"IX",62.49,62.49,"C",.1,16,0)
  Messages with no/unknown UID/accession number will use 0 (zero).
"IX",62.49,62.49,"C",.1,17,0)
  Example: UNKNOWN-I-0
"IX",62.49,62.49,"C",1)
S ^LAHM(62.49,"C",$E(X,1,45),DA)=""
"IX",62.49,62.49,"C",2)
K ^LAHM(62.49,"C",$E(X,1,45),DA)
"IX",62.49,62.49,"C",2.5)
K ^LAHM(62.49,"C")
"IX",62.49,62.49,"C",11.1,0)
^.114IA^1^1
"IX",62.49,62.49,"C",11.1,1,0)
1^F^62.49^5^45^1^F
"IX",62.49,62.49,"D",0)
62.49^D^Whole file cross-reference on message identifiers^R^^F^IR^W^62.49002^^^^^LS
"IX",62.49,62.49,"D",.1,0)
^^2^2^3070217^
"IX",62.49,62.49,"D",.1,1,0)
Cross reference on message identifiers used to lookup messages using various 
"IX",62.49,62.49,"D",.1,2,0)
values.
"IX",62.49,62.49,"D",1)
S ^LAHM(62.49,"D",$E(X,1,80),DA(1),DA)=""
"IX",62.49,62.49,"D",2)
K ^LAHM(62.49,"D",$E(X,1,80),DA(1),DA)
"IX",62.49,62.49,"D",2.5)
K ^LAHM(62.49,"D")
"IX",62.49,62.49,"D",11.1,0)
^.114IA^1^1
"IX",62.49,62.49,"D",11.1,1,0)
1^F^62.49002^.01^80^1^F
"IX",62.49,62.49,"Q",0)
62.49^Q^Maintains a "Q"ueue of incoming and outgoing messages.^R^^R^IR^I^62.49^^^^^LS
"IX",62.49,62.49,"Q",.1,0)
^^9^9^3020319^^
"IX",62.49,62.49,"Q",.1,1,0)
The "Q" cross reference is used by the Universal Interface, LEDI and
"IX",62.49,62.49,"Q",.1,2,0)
other Laboratory routines that process and store HL7 messages in this
"IX",62.49,62.49,"Q",.1,3,0)
file.
"IX",62.49,62.49,"Q",.1,4,0)
 
"IX",62.49,62.49,"Q",.1,5,0)
The format is as follows:
"IX",62.49,62.49,"Q",.1,6,0)
  ^LAHM(62.49,"Q",CONFIGURATION,TYPE_STATUS,DA)=""
"IX",62.49,62.49,"Q",.1,7,0)
 
"IX",62.49,62.49,"Q",.1,8,0)
This allows each configuration in LA7 MESSAGE PARAMETER file (#62.48)
"IX",62.49,62.49,"Q",.1,9,0)
to have it's own incoming and outgoing message queue. 
"IX",62.49,62.49,"Q",1)
S ^LAHM(62.49,"Q",X(1),X(4),DA)=""
"IX",62.49,62.49,"Q",1.4)
S X=X(2)]""&(X(3)]"")
"IX",62.49,62.49,"Q",2)
K ^LAHM(62.49,"Q",X(1),X(4),DA)
"IX",62.49,62.49,"Q",2.4)
S X=X(2)]""&(X(3)]"")
"IX",62.49,62.49,"Q",2.5)
K ^LAHM(62.49,"Q")
"IX",62.49,62.49,"Q",11.1,0)
^.114IA^4^4
"IX",62.49,62.49,"Q",11.1,1,0)
1^F^62.49^.5^^1^F
"IX",62.49,62.49,"Q",11.1,2,0)
2^F^62.49^1^^^F
"IX",62.49,62.49,"Q",11.1,3,0)
3^F^62.49^2^^^F
"IX",62.49,62.49,"Q",11.1,4,0)
4^C^^^^2
"IX",62.49,62.49,"Q",11.1,4,1.5)
S X=X(2)_X(3)
"IX",62.49,62.49002,"B",0)
62.49002^B^Regular "B" cross-reference.^R^^F^IR^I^62.49002^^^^^LS
"IX",62.49,62.49002,"B",.1,0)
^^2^2^3070413^
"IX",62.49,62.49002,"B",.1,1,0)
Regular "B" cross-reference but modified to use full 80 characters
"IX",62.49,62.49002,"B",.1,2,0)
of the field.
"IX",62.49,62.49002,"B",1)
S ^LAHM(62.49,DA(1),.2,"B",$E(X,1,80),DA)=""
"IX",62.49,62.49002,"B",2)
K ^LAHM(62.49,DA(1),.2,"B",$E(X,1,80),DA)
"IX",62.49,62.49002,"B",2.5)
K ^LAHM(62.49,DA(1),.2,"B")
"IX",62.49,62.49002,"B",11.1,0)
^.114IA^1^1
"IX",62.49,62.49002,"B",11.1,1,0)
1^F^62.49002^.01^80^1^F
"IX",62.49,62.49002,"B",11.1,1,3)

"IX",62.9,62.9003,"AL",0)
62.9003^AL^Index of ordering locations used by this configuration.^R^^F^IR^I^62.9003^^^^^S
"IX",62.9,62.9003,"AL",.1,0)
^^4^4^3100325^
"IX",62.9,62.9003,"AL",.1,1,0)
Index to allow determining if an accession's ordering location is 
"IX",62.9,62.9003,"AL",.1,2,0)
specified for this configuration and that the accession can attempt 
"IX",62.9,62.9003,"AL",.1,3,0)
to build to a manifest related to this configuration if other shipping
"IX",62.9,62.9003,"AL",.1,4,0)
configuration criteria are met.
"IX",62.9,62.9003,"AL",1)
S ^LAHM(62.9,DA(1),44,"AL",X,DA)=""
"IX",62.9,62.9003,"AL",2)
K ^LAHM(62.9,DA(1),44,"AL",X,DA)
"IX",62.9,62.9003,"AL",2.5)
K ^LAHM(62.9,DA(1),44,"AL")
"IX",62.9,62.9003,"AL",11.1,0)
^.114IA^1^1
"IX",62.9,62.9003,"AL",11.1,1,0)
1^F^62.9003^.01^^1^F
"IX",62.9,62.9003,"AL",11.1,1,3)

"KEY",62.47,62.47,"A",0)
62.47^A^P^678
"KEY",62.47,62.47,"A",2,0)
^.312IA^1^1
"KEY",62.47,62.47,"A",2,1,0)
.03^62.47^1
"KEYPTR",62.47,62.47,"A")
62.47^C
"KRN",3.8,136,-1)
0^1
"KRN",3.8,136,0)
LAB MESSAGING^PU^y^^^^
"KRN",3.8,136,2,0)
^3.801^3^3^3110330^^^^
"KRN",3.8,136,2,1,0)
This mail group is used by the LAB MESSAGING package to notify appropiate Lab
"KRN",3.8,136,2,2,0)
and IRM staff of conditions affecting LAB MESSAGING that may need corrective
"KRN",3.8,136,2,3,0)
action.
"KRN",3.8,136,3)

"KRN",9.2,3377,-1)
0^1
"KRN",9.2,3377,0)
LA7V 62.47 ERROR CODES^LAB CODE MAPPING ERROR CODES^3070213.1512^^
"KRN",9.2,3377,1,0)
^^59^59^3070213^
"KRN",9.2,3377,1,1,0)
=========================================================================
"KRN",9.2,3377,1,2,0)
 
"KRN",9.2,3377,1,3,0)
Error #200
"KRN",9.2,3377,1,4,0)
  No File #62.47 mapping found for OBX-3
"KRN",9.2,3377,1,5,0)
 
"KRN",9.2,3377,1,6,0)
The code set in OBX-3 was not found in the LAB CODE MAPPING file (#62.47).
"KRN",9.2,3377,1,7,0)
 
"KRN",9.2,3377,1,8,0)
--------------------------------
"KRN",9.2,3377,1,9,0)
 
"KRN",9.2,3377,1,10,0)
Error #201
"KRN",9.2,3377,1,11,0)
  No File #63 field mapping found for OBX-3
"KRN",9.2,3377,1,12,0)
 
"KRN",9.2,3377,1,13,0)
Storage location unknown in LAB DATA file (#63).  An organism, 
"KRN",9.2,3377,1,14,0)
parasite, or susceptibility doesn't have a mapping to or 
"KRN",9.2,3377,1,15,0)
storage location in the LAB DATA file (#63).  This is usually 
"KRN",9.2,3377,1,16,0)
caused by an incorrect or missing RELATED ENTRY field (#2.1)
"KRN",9.2,3377,1,17,0)
for that code in the LAB CODE MAPPING file (#62.47).
"KRN",9.2,3377,1,18,0)
 
"KRN",9.2,3377,1,19,0)
---------------------------------
"KRN",9.2,3377,1,20,0)
 
"KRN",9.2,3377,1,21,0)
Error #202
"KRN",9.2,3377,1,22,0)
  No filing method for CONCEPT # n found for OBX-3
"KRN",9.2,3377,1,23,0)
 
"KRN",9.2,3377,1,24,0)
The Lab package does not have a routine to process the Concept.
"KRN",9.2,3377,1,25,0)
 
"KRN",9.2,3377,1,26,0)
---------------------------------
"KRN",9.2,3377,1,27,0)
 
"KRN",9.2,3377,1,28,0)
Error #203
"KRN",9.2,3377,1,29,0)
  No Coding System found in OBX-5
"KRN",9.2,3377,1,30,0)
 
"KRN",9.2,3377,1,31,0)
OBX-5 does not have a coding system specified.
"KRN",9.2,3377,1,32,0)
 
"KRN",9.2,3377,1,33,0)
---------------------------------
"KRN",9.2,3377,1,34,0)
 
"KRN",9.2,3377,1,35,0)
Error #204
"KRN",9.2,3377,1,36,0)
  Unknown entity in OBX-5
"KRN",9.2,3377,1,37,0)
 
"KRN",9.2,3377,1,38,0)
The organism, parasite, etc. being reported does not have 
"KRN",9.2,3377,1,39,0)
an entry in its associated file (ie ETIOLOGY FIELD file (#61.2)).
"KRN",9.2,3377,1,40,0)
 
"KRN",9.2,3377,1,41,0)
---------------------------------
"KRN",9.2,3377,1,42,0)
 
"KRN",9.2,3377,1,43,0)
Error #205
"KRN",9.2,3377,1,44,0)
  Invalid SubId in OBX-4
"KRN",9.2,3377,1,45,0)
 
"KRN",9.2,3377,1,46,0)
The SubId in OBX-4 is either empty or invalid.  The processing
"KRN",9.2,3377,1,47,0)
logic expected a valid SubId here and cannot continue processing.
"KRN",9.2,3377,1,48,0)
Action must be taken by the sender of the HL7 message to correct
"KRN",9.2,3377,1,49,0)
the invalid SubId.
"KRN",9.2,3377,1,50,0)
 
"KRN",9.2,3377,1,51,0)
---------------------------------
"KRN",9.2,3377,1,52,0)
 
"KRN",9.2,3377,1,53,0)
Error #206
"KRN",9.2,3377,1,54,0)
  Could not create new entry in file #X (text)
"KRN",9.2,3377,1,55,0)
 
"KRN",9.2,3377,1,56,0)
The system needed to add a new entry "on-the-fly" to
"KRN",9.2,3377,1,57,0)
the file specified to handle this incoming message but
"KRN",9.2,3377,1,58,0)
failed to create the new entry.  This may be a problem on
"KRN",9.2,3377,1,59,0)
the sender's or the receiver's side. 
"KRN",9.2,3377,2,0)
^9.22A^^0
"KRN",19,9405,-1)
2^4
"KRN",19,9405,0)
LA7 MAIN MENU^Lab Universal Interface Menu^^M^174^^^^^^^480
"KRN",19,9405,10,0)
^19.01IP^11^10
"KRN",19,9405,10,11,0)
14388^RLH^80
"KRN",19,9405,10,11,"^")
LA7 REPROCESS HL7 MESSAGES
"KRN",19,9405,"U")
LAB UNIVERSAL INTERFACE MENU
"KRN",19,11529,-1)
3^3
"KRN",19,11529,0)
LA7S MGR MENU^Lab Shipping Management Menu^^M^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,11529,1,0)
^^3^3^3100816^
"KRN",19,11529,1,1,0)
The Lab Shipping Management Menu contains the setup and maintenance
"KRN",19,11529,1,2,0)
options related to laboratory shipping and code sets involved in HL7
"KRN",19,11529,1,3,0)
interfaces.
"KRN",19,11529,10,0)
^19.01IP^13^13
"KRN",19,11529,10,7,0)
14444^LCM^80
"KRN",19,11529,10,7,"^")
LA7V 62.47 MENU
"KRN",19,11529,10,8,0)
14529^MSCT^55
"KRN",19,11529,10,8,"^")
LA7S MAP NON-VA SNOMED CODES
"KRN",19,11529,10,9,0)
14530^PTM^90
"KRN",19,11529,10,9,"^")
LA7VPFL
"KRN",19,11529,10,10,0)
14532^CU^95
"KRN",19,11529,10,10,"^")
LA7S CODE USAGE
"KRN",19,11529,10,11,0)
14533^DSC^96
"KRN",19,11529,10,11,"^")
LA7S 62.9 PRINT
"KRN",19,11529,10,12,0)
14584^DSO^97
"KRN",19,11529,10,12,"^")
LA7S 62.48 PRINT SCT OVERRIDE
"KRN",19,11529,10,13,0)
14813^LSCT^54
"KRN",19,11529,10,13,"^")
LA7S LOAD MAPPING SCT
"KRN",19,11529,99)
61535,61685
"KRN",19,11529,99.1)
62655,46201
"KRN",19,11529,"U")
LAB SHIPPING MANAGEMENT MENU
"KRN",19,11536,-1)
0^28
"KRN",19,11536,0)
LA7S MANIFEST TEST ADD/REMOVE^Add/Remove a Shipping Manifest Test^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,11536,1,0)
^^2^2^3120510^
"KRN",19,11536,1,1,0)
This option allows a test to be added or removed from an "Open" or 
"KRN",19,11536,1,2,0)
"Closed" shipping manifest.
"KRN",19,11536,25)
SMET^LA7SM
"KRN",19,11536,"U")
ADD/REMOVE A SHIPPING MANIFEST
"KRN",19,14388,-1)
0^15
"KRN",19,14388,0)
LA7 REPROCESS HL7 MESSAGES^Reprocess Lab HL7 Messages^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14388,1,0)
^19.06^10^10^3070810^^^^
"KRN",19,14388,1,1,0)
Option to allow reprocessing of selected incoming Lab HL7 messages.
"KRN",19,14388,1,2,0)

"KRN",19,14388,1,3,0)
Messages should be of type (I)ncoming, have a status of (X)purgable, (E)rror
"KRN",19,14388,1,4,0)
or (Q)ueued for processing and be related to a message configuration type:
"KRN",19,14388,1,5,0)
  1 - LAB UI
"KRN",19,14388,1,6,0)
 10 - LEDI
"KRN",19,14388,1,7,0)
 
"KRN",19,14388,1,8,0)
Messages for other configuration types should not be reprocessed at this time
"KRN",19,14388,1,9,0)

"KRN",19,14388,1,10,0)

"KRN",19,14388,25)
EN^LA7UTILB
"KRN",19,14388,"U")
REPROCESS LAB HL7 MESSAGES
"KRN",19,14444,-1)
0^10
"KRN",19,14444,0)
LA7V 62.47 MENU^Lab Code Mapping File^^M^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14444,1,0)
^19.06^1^1^3070125^^^^
"KRN",19,14444,1,1,0)
Main menu to allow access to the LAB CODE MAPPING (#62.47) file.
"KRN",19,14444,10,0)
^19.01IP^11^11
"KRN",19,14444,10,1,0)
14446^AEL
"KRN",19,14444,10,1,"^")
LA7V 62.47 LOCAL IDENTIFIER
"KRN",19,14444,10,2,0)
14445^ES
"KRN",19,14444,10,2,"^")
LA7V 62.47 EDIT SUSC
"KRN",19,14444,10,3,0)
14448^PL
"KRN",19,14444,10,3,"^")
LA7V 62.47 PRINT LOCAL
"KRN",19,14444,10,4,0)
14447^PS
"KRN",19,14444,10,4,"^")
LA7V 62.47 PRINT SUSC
"KRN",19,14444,10,5,0)
14481^PMC
"KRN",19,14444,10,5,"^")
LA7V 62.47 PRINT BY MSG CONFIG
"KRN",19,14444,10,6,0)
14483^CSM
"KRN",19,14444,10,6,"^")
LA7V 62.47 PRINT CS MISMATCHES
"KRN",19,14444,10,7,0)
14484^CMC
"KRN",19,14444,10,7,"^")
LA7V 62.47 CLONE MSG CONFIG
"KRN",19,14444,10,8,0)
14485^FI
"KRN",19,14444,10,8,"^")
LA7V 62.47 FIND IDENTIFIER
"KRN",19,14444,10,9,0)
14486^ECH
"KRN",19,14444,10,9,"^")
LA7V 62.47 ERROR CODE HELP
"KRN",19,14444,10,10,0)
14527^DOD
"KRN",19,14444,10,10,"^")
LA7V 62.47 ADD DOD
"KRN",19,14444,10,11,0)
14528^MAS
"KRN",19,14444,10,11,"^")
LA7V 62.47 MAP SUSCS
"KRN",19,14444,99)
61235,57733
"KRN",19,14444,"U")
LAB CODE MAPPING FILE
"KRN",19,14445,-1)
0^6
"KRN",19,14445,0)
LA7V 62.47 EDIT SUSC^Edit Susceptibility^^R^^LRLIASON^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14445,1,0)
^19.06^2^2^3080919^^^^
"KRN",19,14445,1,1,0)
This option allows you to link Bacteriology and Mycobacteria susceptibilities
"KRN",19,14445,1,2,0)
to existing codes.
"KRN",19,14445,25)
ES^LA7VLCM
"KRN",19,14445,"U")
EDIT SUSCEPTIBILITY
"KRN",19,14446,-1)
0^7
"KRN",19,14446,0)
LA7V 62.47 LOCAL IDENTIFIER^Add/Edit Local Identifier^^R^^LRLIASON^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14446,1,0)
^19.06^2^2^3080919^^^
"KRN",19,14446,1,1,0)
This option allows you to add or edit local identifiers in the
"KRN",19,14446,1,2,0)
LAB CODE MAPPING file (#62.47).
"KRN",19,14446,25)
AEL^LA7VLCM
"KRN",19,14446,"U")
ADD/EDIT LOCAL IDENTIFIER
"KRN",19,14447,-1)
0^9
"KRN",19,14447,0)
LA7V 62.47 PRINT SUSC^Print Susceptibilities^^R^^^^^^^^LAB MESSAGING
"KRN",19,14447,1,0)
^19.06^1^1^3080919^^
"KRN",19,14447,1,1,0)
Print LAB CODE MAPPING file (#62.47) Susceptibility codes.
"KRN",19,14447,25)
PS^LA7VLCM
"KRN",19,14447,"U")
PRINT SUSCEPTIBILITIES
"KRN",19,14448,-1)
0^8
"KRN",19,14448,0)
LA7V 62.47 PRINT LOCAL^Print Local Codes^^R^^^^^^^^LAB MESSAGING
"KRN",19,14448,1,0)
^19.06^1^1^3080919^^^
"KRN",19,14448,1,1,0)
Print local codes from File #62.47
"KRN",19,14448,25)
PL^LA7VLCM
"KRN",19,14448,"U")
PRINT LOCAL CODES
"KRN",19,14481,-1)
0^11
"KRN",19,14481,0)
LA7V 62.47 PRINT BY MSG CONFIG^Print by Message Configuration^^R^^^^^^^^
"KRN",19,14481,1,0)
^^2^2^3060917^
"KRN",19,14481,1,1,0)
Display entries in File #62.47 by CONCEPT, sorted by MESSAGE 
"KRN",19,14481,1,2,0)
CONFIGURATION field.
"KRN",19,14481,25)
PMC^LA7VLCM
"KRN",19,14481,"U")
PRINT BY MESSAGE CONFIGURATION
"KRN",19,14483,-1)
0^12
"KRN",19,14483,0)
LA7V 62.47 PRINT CS MISMATCHES^Code/Set Mismatches^^R^^^^^^^^
"KRN",19,14483,1,0)
^19.06^2^2^3061104^^
"KRN",19,14483,1,1,0)
Displays entries in File #62.47 whose IDENTIFIER/CODING SYSTEM pairs 
"KRN",19,14483,1,2,0)
appear to be mismatched.
"KRN",19,14483,25)
CSM^LA7VLCM
"KRN",19,14483,"U")
CODE/SET MISMATCHES
"KRN",19,14484,-1)
0^13
"KRN",19,14484,0)
LA7V 62.47 CLONE MSG CONFIG^Clone a Message Configuration^^R^^LRLIASON^^^^^^
"KRN",19,14484,1,0)
^19.06^2^2^3061019^^^
"KRN",19,14484,1,1,0)
Copies the entries of the source Message Configuration into entries for
"KRN",19,14484,1,2,0)
the destination message configuration.
"KRN",19,14484,25)
CMC^LA7VLCM
"KRN",19,14484,"U")
CLONE A MESSAGE CONFIGURATION
"KRN",19,14485,-1)
0^14
"KRN",19,14485,0)
LA7V 62.47 FIND IDENTIFIER^Find Identifier^^R^^^^^^^^
"KRN",19,14485,1,0)
^19.06^1^1^3061011^^
"KRN",19,14485,1,1,0)
Search the entire file for a particular Identifier.
"KRN",19,14485,25)
FI^LA7VLCM
"KRN",19,14485,"U")
FIND IDENTIFIER
"KRN",19,14486,-1)
0^16
"KRN",19,14486,0)
LA7V 62.47 ERROR CODE HELP^Error Code Help^^A^^^LA7V 62.47 ERROR CODES^^^^^LAB MESSAGING^^1^1
"KRN",19,14486,1,0)
^^1^1^3070801^
"KRN",19,14486,1,1,0)
Displays help text for working with Lab Messaging error codes.
"KRN",19,14486,3.91,0)
^19.391
"KRN",19,14486,15)
K XQH
"KRN",19,14486,20)
S XQH="LA7V 62.47 ERROR CODES" D EN^XQH
"KRN",19,14486,"U")
ERROR CODE HELP
"KRN",19,14527,-1)
0^17
"KRN",19,14527,0)
LA7V 62.47 ADD DOD^Initialize DOD Codes^^R^^LRLIASON^^^^^^
"KRN",19,14527,1,0)
^19.06^2^2^3061221^^
"KRN",19,14527,1,1,0)
Populates the Lab Code Mapping file with the standard DOD local codes for 
"KRN",19,14527,1,2,0)
the message configuration selected by the user.
"KRN",19,14527,25)
DOD6247^LA7VLCM
"KRN",19,14527,"U")
INITIALIZE DOD CODES
"KRN",19,14528,-1)
0^18
"KRN",19,14528,0)
LA7V 62.47 MAP SUSCS^Map All Susceptibilities^^R^^LRLIASON^^^^^^
"KRN",19,14528,1,0)
^^3^3^3061217^
"KRN",19,14528,1,1,0)
Displays the antibiotics from file #62.06 and suggests to the user which 
"KRN",19,14528,1,2,0)
entry from file #62.06 should be mapped to the LOINC code in the LAB CODE 
"KRN",19,14528,1,3,0)
MAPPING file (#62.47).
"KRN",19,14528,25)
MAPABS^LA7VLCM
"KRN",19,14528,"U")
MAP ALL SUSCEPTIBILITIES
"KRN",19,14529,-1)
0^19
"KRN",19,14529,0)
LA7S MAP NON-VA SNOMED CODES^Map Non-VA SNOMED CT codes^^E^^LRLIASON^^^^^^LAB SERVICE
"KRN",19,14529,1,0)
^^5^5^3061218^
"KRN",19,14529,1,1,0)
Use this option to map, for a specific HL7 interface, SNOMED CT codes
"KRN",19,14529,1,2,0)
required by an external system to VistA Laboratory files.
"KRN",19,14529,1,3,0)
Currently used to map VistA Laboratory files:
"KRN",19,14529,1,4,0)
 TOPOGRAPHY (#61)
"KRN",19,14529,1,5,0)
 COLLECTION SAMPLE (#62)
"KRN",19,14529,30)
LAHM(62.48,
"KRN",19,14529,31)
AEMNOQ
"KRN",19,14529,32)
Select MESSAGE CONFIGURATION:
"KRN",19,14529,34)
I $P(^(0),U,9)=10
"KRN",19,14529,50)
LAHM(62.48,
"KRN",19,14529,51)
30
"KRN",19,14529,"U")
MAP NON-VA SNOMED CT CODES
"KRN",19,14530,-1)
0^26
"KRN",19,14530,0)
LA7VPFL^Print MI/AP Test Mappings^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14530,1,0)
^19.06^4^4^3070717^^^^
"KRN",19,14530,1,1,0)
Check Lab Tests by subscript (MI, SP or CY) for their mapped NLT and
"KRN",19,14530,1,2,0)
Electronic Codes. These codes are required for LEDI transmission of
"KRN",19,14530,1,3,0)
orders and reports. Provides Lists for correctly mapped tests or
"KRN",19,14530,1,4,0)
tests that are not mapped correctly.
"KRN",19,14530,25)
START^LA7VPFL
"KRN",19,14530,"U")
PRINT MI/AP TEST MAPPINGS
"KRN",19,14532,-1)
0^23
"KRN",19,14532,0)
LA7S CODE USAGE^Code Usage^^R^^^^^^^^LAB MESSAGING^^^
"KRN",19,14532,1,0)
^19.06^2^2^3070227^^
"KRN",19,14532,1,1,0)
Searches the system for a particular code and code system pair and 
"KRN",19,14532,1,2,0)
reports which files this pair is used in.
"KRN",19,14532,15)

"KRN",19,14532,25)
CU^LA7SRPT
"KRN",19,14532,"U")
CODE USAGE
"KRN",19,14533,-1)
0^24
"KRN",19,14533,0)
LA7S 62.9 PRINT^Display a Shipping Configuration^^R^^^^^^^^LAB MESSAGING^^^
"KRN",19,14533,1,0)
^19.06^2^2^3070301^^^^
"KRN",19,14533,1,1,0)
Displays Shipping Configuration file information for a Shipping 
"KRN",19,14533,1,2,0)
Configuration (or a Message Parameter) file entry.
"KRN",19,14533,15)

"KRN",19,14533,25)
SHPCFG^LA7SRPT
"KRN",19,14533,"U")
DISPLAY A SHIPPING CONFIGURATI
"KRN",19,14584,-1)
0^25
"KRN",19,14584,0)
LA7S 62.48 PRINT SCT OVERRIDE^Display SCT Overrides^^R^^^^^^^^
"KRN",19,14584,1,0)
^^3^3^3070301^
"KRN",19,14584,1,1,0)
Displays the SCT Overrides on file for a Message Parameter (#62.48) file 
"KRN",19,14584,1,2,0)
entry.  It can also display all SCT Overrides on file for all Message 
"KRN",19,14584,1,3,0)
Parameter (#62.48) entries.
"KRN",19,14584,25)
SCTOVER^LA7SRPT
"KRN",19,14584,"U")
DISPLAY SCT OVERRIDES
"KRN",19,14813,-1)
0^27
"KRN",19,14813,0)
LA7S LOAD MAPPING SCT^Load SNOMED SCT Mapping^^R^^LRLIASON^^^^^^AUTOMATED LAB INSTRUMENTS
"KRN",19,14813,1,0)
^^13^13^3090623^
"KRN",19,14813,1,1,0)
This option allows the user to load SNOMED CT (SCT) mappings and term
"KRN",19,14813,1,2,0)
disposition into the target file entry. This mapping is usually provided 
"KRN",19,14813,1,3,0)
by STS after they have extracted and mapped the site's local terms to the 
"KRN",19,14813,1,4,0)
appropriate SCT code. If no mapping is provided then a disposition is 
"KRN",19,14813,1,5,0)
stored with the reason. A SCT mapping can also be provided as part of the 
"KRN",19,14813,1,6,0)
mediation process that occurs when a new term is added either by the site 
"KRN",19,14813,1,7,0)
or via an HL7 interface with the new term.
"KRN",19,14813,1,8,0)
 
"KRN",19,14813,1,9,0)
The SCT mapping file is a text file that is usually provided via an FTP 
"KRN",19,14813,1,10,0)
transfer. This option prompts the user to specify the location of the 
"KRN",19,14813,1,11,0)
file, loads the contents of the file into a temporary holding LAB MAPPING
"KRN",19,14813,1,12,0)
TRANSPORT file (#95.4) and then allows the user to apply the mappings to 
"KRN",19,14813,1,13,0)
the target entries.
"KRN",19,14813,25)
LOADSCT^LRSRVR8
"KRN",19,14813,"U")
LOAD SNOMED SCT MAPPING
"KRN",8989.5,3849,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^1
"KRN",8989.5,3849,1)
2
"KRN",8989.5,3850,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^2
"KRN",8989.5,3850,1)
2
"KRN",8989.5,3851,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^3
"KRN",8989.5,3851,1)
2
"KRN",8989.5,3852,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^4
"KRN",8989.5,3852,1)
2
"KRN",8989.5,3853,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^5
"KRN",8989.5,3853,1)
2
"KRN",8989.5,3854,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^6
"KRN",8989.5,3854,1)
2
"KRN",8989.5,3855,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^7
"KRN",8989.5,3855,1)
2
"KRN",8989.5,3856,0)
53;DIC(9.4,^LA LEDI ORU HL7 STATUS^8
"KRN",8989.5,3856,1)
2
"KRN",8989.5,3857,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^1
"KRN",8989.5,3857,1)
5
"KRN",8989.5,3858,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^2
"KRN",8989.5,3858,1)
5
"KRN",8989.5,3859,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^3
"KRN",8989.5,3859,1)
5
"KRN",8989.5,3860,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^4
"KRN",8989.5,3860,1)
5
"KRN",8989.5,3861,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^5
"KRN",8989.5,3861,1)
5
"KRN",8989.5,3862,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^6
"KRN",8989.5,3862,1)
5
"KRN",8989.5,3863,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^7
"KRN",8989.5,3863,1)
5
"KRN",8989.5,3864,0)
53;DIC(9.4,^LA LEDI ORM HL7 STATUS^8
"KRN",8989.5,3864,1)
5
"KRN",8989.51,19,0)
LR IGNORE HOLIDAYS^Lab Collects on Holidays^^^IGNORE HOLIDAYS
"KRN",8989.51,19,1)
Y^^Enter 'Yes' if full lab service operates on federal holidays.
"KRN",8989.51,19,20,0)
^^2^2^2950816^
"KRN",8989.51,19,20,1,0)
This indicates if this institution operates at full service during
"KRN",8989.51,19,20,2,0)
federal holidays.
"KRN",8989.51,19,30,0)
^8989.513I^2^2
"KRN",8989.51,19,30,1,0)
1^4.2
"KRN",8989.51,19,30,2,0)
2^9.4
"KRN",8989.51,20,0)
LR MAX DAYS CONTINUOUS^Maximum Days for Continuous Orders^^^MAXIMUM DAYS FOR CONTINUOUS ORDERS^0
"KRN",8989.51,20,1)
N^1:370^Enter the maximum number of days that multiple-continuous orders can be placed.
"KRN",8989.51,20,20,0)
^^2^2^3000211^^^^
"KRN",8989.51,20,20,1,0)
This is the maximum number of days that multiple-continuous orders may be
"KRN",8989.51,20,20,2,0)
placed.  The number may be specific to each hospital location.
"KRN",8989.51,20,30,0)
^8989.513I^3^3
"KRN",8989.51,20,30,1,0)
1^44
"KRN",8989.51,20,30,2,0)
2^4.2
"KRN",8989.51,20,30,3,0)
3^9.4
"KRN",8989.51,34,0)
LR LAB COLLECT FUTURE^Lab Collect Days Allowed in Future^^^LAB COLLECT DAYS ALLOWED IN FUTURE^0
"KRN",8989.51,34,1)
N^1:370^Enter the number of days allowed to collect 'Lab Collect' future orders.
"KRN",8989.51,34,20,0)
^^2^2^3000211^^^^
"KRN",8989.51,34,20,1,0)
This is the maximum number of days that 'Lab Collect' orders may be
"KRN",8989.51,34,20,2,0)
placed.  The number may be specific to each hospital location.
"KRN",8989.51,34,30,0)
^8989.513I^4^4
"KRN",8989.51,34,30,1,0)
1^44
"KRN",8989.51,34,30,2,0)
2^4
"KRN",8989.51,34,30,3,0)
3^4.2
"KRN",8989.51,34,30,4,0)
4^9.4
"KRN",8989.51,74,0)
LR COLLECT FRIDAY^Collect on Friday^^^COLLECT FRIDAY
"KRN",8989.51,74,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,74,20,0)
^^1^1^2951010^
"KRN",8989.51,74,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,74,30,0)
^8989.513I^2^2
"KRN",8989.51,74,30,1,0)
1^4.2
"KRN",8989.51,74,30,2,0)
2^9.4
"KRN",8989.51,75,0)
LR COLLECT THURSDAY^Collect on Thursday^^^COLLECT THURSDAY
"KRN",8989.51,75,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,75,20,0)
^^1^1^2951010^
"KRN",8989.51,75,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,75,30,0)
^8989.513I^2^2
"KRN",8989.51,75,30,1,0)
1^4.2
"KRN",8989.51,75,30,2,0)
2^9.4
"KRN",8989.51,76,0)
LR COLLECT WEDNESDAY^Collect on Wednesday^^^COLLECT WEDNESDAY
"KRN",8989.51,76,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,76,20,0)
^^1^1^2951010^
"KRN",8989.51,76,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,76,30,0)
^8989.513I^2^2
"KRN",8989.51,76,30,1,0)
1^4.2
"KRN",8989.51,76,30,2,0)
2^9.4
"KRN",8989.51,77,0)
LR COLLECT TUESDAY^Collect on Tuesday^^^COLLECT TUESDAY
"KRN",8989.51,77,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,77,20,0)
^^1^1^2951010^
"KRN",8989.51,77,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,77,30,0)
^8989.513I^2^2
"KRN",8989.51,77,30,1,0)
1^4.2
"KRN",8989.51,77,30,2,0)
2^9.4
"KRN",8989.51,78,0)
LR COLLECT MONDAY^Collect on Monday^^^COLLECT MONDAY
"KRN",8989.51,78,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,78,20,0)
^^1^1^2951010^
"KRN",8989.51,78,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,78,30,0)
^8989.513I^2^2
"KRN",8989.51,78,30,1,0)
1^4.2
"KRN",8989.51,78,30,2,0)
2^9.4
"KRN",8989.51,79,0)
LR COLLECT SUNDAY^Collect on Sunday^^^COLLECT SUNDAY
"KRN",8989.51,79,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,79,20,0)
^^1^1^2951010^
"KRN",8989.51,79,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,79,30,0)
^8989.513I^2^2
"KRN",8989.51,79,30,1,0)
1^4.2
"KRN",8989.51,79,30,2,0)
2^9.4
"KRN",8989.51,80,0)
LR COLLECT SATURDAY^Collect on Saturday^^^COLLECT SATURDAY
"KRN",8989.51,80,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,80,20,0)
^^1^1^2951010^
"KRN",8989.51,80,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,80,30,0)
^8989.513I^2^2
"KRN",8989.51,80,30,1,0)
1^4.2
"KRN",8989.51,80,30,2,0)
2^9.4
"KRN",8989.51,366,0)
LR VER DISPLAY PREV COMMENT^Display previous comments for test^1^Laboratory Test^Display previous result's comments^0
"KRN",8989.51,366,1)
Y^^Answer with yes/no to display previous result's comments during verification.
"KRN",8989.51,366,6)
P^60
"KRN",8989.51,366,8)
I $P(^(0),"^",4)="CH"
"KRN",8989.51,366,20,0)
^8989.512^2^2^3040707^^^^
"KRN",8989.51,366,20,1,0)
Select whether the user wants comments associated with previous results to
"KRN",8989.51,366,20,2,0)
display with those results during lab verification process.
"KRN",8989.51,366,30,0)
^8989.513I^1^1
"KRN",8989.51,366,30,1,0)
1^200
"KRN",8989.51,404,0)
LR VER EA VERIFY BY UID^Default load/work list verify method^1^Accession Area^Default load/work list verify method^0
"KRN",8989.51,404,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,404,4,0)
^8989.514^1^1
"KRN",8989.51,404,4,1,0)
UID
"KRN",8989.51,404,4,"B","UID",1)

"KRN",8989.51,404,6)
P^68
"KRN",8989.51,404,20,0)
^8989.512^9^9^3070911^^^^
"KRN",8989.51,404,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,404,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,404,20,3,0)
via options that use a load/work list. Parameter is associated
"KRN",8989.51,404,20,4,0)
with the accession area linked to the load/worklist profile
"KRN",8989.51,404,20,5,0)
selected by the user.
"KRN",8989.51,404,20,6,0)

"KRN",8989.51,404,20,7,0)
Parameter can be set at the package or user level. 
"KRN",8989.51,404,20,8,0)
User level takes precedence over division level.
"KRN",8989.51,404,20,9,0)
Site can also force verification by UID only.
"KRN",8989.51,404,30,0)
^8989.513I^2^2
"KRN",8989.51,404,30,1,0)
1^200
"KRN",8989.51,404,30,2,0)
2^9.4
"KRN",8989.51,436,-1)
0^1
"KRN",8989.51,436,0)
LA7UTILA PARSE^Lab Messaging - Parse HL7 Messages^0^^Lab Messaging - Parse HL7 Messages
"KRN",8989.51,436,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,436,2)

"KRN",8989.51,436,3)

"KRN",8989.51,436,20,0)
^8989.512^5^5^3090904^^^^
"KRN",8989.51,436,20,1,0)
Allows the User to select the default setting for "Parse HL7 Message
"KRN",8989.51,436,20,2,0)
" prompt when using OPTION [LA7 PRINT LAB UI MESSAGE].
"KRN",8989.51,436,20,3,0)
 
"KRN",8989.51,436,20,4,0)
"LAST" means the User wants the system to keep track of their last
"KRN",8989.51,436,20,5,0)
response to this prompt and use that as their default. 
"KRN",8989.51,436,30,0)
^8989.513I^2^2
"KRN",8989.51,436,30,1,0)
1^200
"KRN",8989.51,436,30,2,0)
2^4.2
"KRN",8989.51,437,-1)
0^2
"KRN",8989.51,437,0)
LA7UTILA USE BROWSER^Lab Messaging - Display using Browser^^^Lab Messaging - Use Browser to display
"KRN",8989.51,437,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,437,2)

"KRN",8989.51,437,3)

"KRN",8989.51,437,20,0)
^8989.512^5^5^3061208^^^
"KRN",8989.51,437,20,1,0)
Allows the User to select the default setting for "Use Browser to display 
"KRN",8989.51,437,20,2,0)
HL7 Message" prompt when using OPTION [LA7 PRINT LAB UI MESSAGE].
"KRN",8989.51,437,20,3,0)
 
"KRN",8989.51,437,20,4,0)
"LAST" means the User wants the system to keep track of their last
"KRN",8989.51,437,20,5,0)
response to this prompt and use that as their default.
"KRN",8989.51,437,30,0)
^8989.513I^2^2
"KRN",8989.51,437,30,1,0)
1^200
"KRN",8989.51,437,30,2,0)
2^4.2
"KRN",8989.51,438,-1)
0^3
"KRN",8989.51,438,0)
LA7UTILA PARSE LAST^^^^PARSE LAST^0
"KRN",8989.51,438,1)
Y
"KRN",8989.51,438,20,0)
^8989.512^2^2^3071021^^
"KRN",8989.51,438,20,1,0)
This data element is used when the User has selected "LAST".  This 
"KRN",8989.51,438,20,2,0)
setting keeps track of the User's last response to the prompt.
"KRN",8989.51,438,30,0)
^8989.513I^2^2
"KRN",8989.51,438,30,1,0)
1^200
"KRN",8989.51,438,30,2,0)
2^4.2
"KRN",8989.51,439,-1)
0^4
"KRN",8989.51,439,0)
LA7UTILA USE BROWSER LAST
"KRN",8989.51,439,1)
Y
"KRN",8989.51,439,20,0)
^^2^2^3061019^
"KRN",8989.51,439,20,1,0)
This data element is used when the User has selected "LAST".  This 
"KRN",8989.51,439,20,2,0)
setting keeps track of the User's last response to the prompt.
"KRN",8989.51,439,30,0)
^8989.513I^2^2
"KRN",8989.51,439,30,1,0)
1^200
"KRN",8989.51,439,30,2,0)
2^4.2
"KRN",8989.51,454,0)
LR LABEL PRINTER DEFAULT^Default lab label printer^1^Division^Lab Label Device^0
"KRN",8989.51,454,1)
P^3.5^Select the label printer to use as your default.
"KRN",8989.51,454,4,0)
^8989.514^1^1
"KRN",8989.51,454,4,1,0)
LABLABEL
"KRN",8989.51,454,4,"B","LABLABEL",1)

"KRN",8989.51,454,6)
P^4^Select the divisions which you log into.
"KRN",8989.51,454,7)

"KRN",8989.51,454,8)
N LRDIV S LRDIV=$$DIV4^XUSER(.LRDIV,DUZ) I $D(LRDIV(Y))
"KRN",8989.51,454,20,0)
^8989.512^3^3^3070831^^^^
"KRN",8989.51,454,20,1,0)
Allows selection of default lab label printer presented to the user when selecting
"KRN",8989.51,454,20,2,0)
the label device to use to print accession and order labels.
"KRN",8989.51,454,20,3,0)
User can specify default printer by division.
"KRN",8989.51,454,30,0)
^8989.513I^1^1
"KRN",8989.51,454,30,1,0)
1^200
"KRN",8989.51,461,0)
LR EGFR METHOD^EGFR Creatinine IDMS-traceable Method^0^IDMS-traceable^Creatinine IDMS-traceable Method^0
"KRN",8989.51,461,1)
Y^^Answer with yes/no if the Creatinine method is traceable to an IDMS method.
"KRN",8989.51,461,4,0)
^8989.514^2^2
"KRN",8989.51,461,4,1,0)
EGFR
"KRN",8989.51,461,4,2,0)
IDMS
"KRN",8989.51,461,4,"B","EGFR",1)

"KRN",8989.51,461,4,"B","IDMS",2)

"KRN",8989.51,461,6)
Y
"KRN",8989.51,461,20,0)
^8989.512^3^3^3111006^^^
"KRN",8989.51,461,20,1,0)
Used to designate if the EGFR calculation should calculate the
"KRN",8989.51,461,20,2,0)
EGFR based on a IDMS-traceable method. This parameter is configurable
"KRN",8989.51,461,20,3,0)
at both the package and division level.
"KRN",8989.51,461,30,0)
^8989.513I^2^2
"KRN",8989.51,461,30,1,0)
1^4
"KRN",8989.51,461,30,2,0)
2^9.4
"KRN",8989.51,462,0)
LR EGFR AGE CUTOFF^EGFR Patient's Age Cutoff^0^^Suppress EGFR When Patient's Age^0
"KRN",8989.51,462,1)
S^0:NEVER;1:<18 YEARS;2:>70 YEARS;3:BOTH^Select when the patient's age should suppress reporting of the patient's EGFR.
"KRN",8989.51,462,4,0)
^8989.514^1^1
"KRN",8989.51,462,4,1,0)
EGFR
"KRN",8989.51,462,4,"B","EGFR",1)

"KRN",8989.51,462,6)
^^
"KRN",8989.51,462,20,0)
^8989.512^5^5^3111006^^^^
"KRN",8989.51,462,20,1,0)
Used to designate if the EGFR calculation should not be performed 
"KRN",8989.51,462,20,2,0)
on creatinine when executing the delta check EGFR when the
"KRN",8989.51,462,20,3,0)
patient's age is <18 or >70. This parameter is configurable
"KRN",8989.51,462,20,4,0)
at both the package and division level and can be set for
"KRN",8989.51,462,20,5,0)
either or both age cutoffs.
"KRN",8989.51,462,30,0)
^8989.513I^2^2
"KRN",8989.51,462,30,1,0)
1^4
"KRN",8989.51,462,30,2,0)
2^9.4
"KRN",8989.51,463,0)
LR EGFR RESULT SUPPRESS^EGFR Result Cutoff^0^>60 Result Suppression^Report EGFR as >60^0
"KRN",8989.51,463,1)
Y^^Answer with yes/no if EGFR values >60 should be reported as ">60".
"KRN",8989.51,463,4,0)
^8989.514^1^1
"KRN",8989.51,463,4,1,0)
EGFR
"KRN",8989.51,463,4,"B","EGFR",1)

"KRN",8989.51,463,20,0)
^8989.512^4^4^3111006^^^
"KRN",8989.51,463,20,1,0)
Used to designate if the EGFR calculation should be suppressed
"KRN",8989.51,463,20,2,0)
when the value is >60. If enabled then ">60" is reported in
"KRN",8989.51,463,20,3,0)
lieu of the actual EGFR calculated value. This parameter is
"KRN",8989.51,463,20,4,0)
configurable at both the package and division level.
"KRN",8989.51,463,30,0)
^8989.513I^2^2
"KRN",8989.51,463,30,1,0)
1^4
"KRN",8989.51,463,30,2,0)
2^9.4
"KRN",8989.51,464,0)
LR VER EM VERIFY BY UID^Default manual verify method^0^^Default manual verify method^0
"KRN",8989.51,464,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,464,4,0)
^8989.514^1^1
"KRN",8989.51,464,4,1,0)
UID
"KRN",8989.51,464,4,"B","UID",1)

"KRN",8989.51,464,6)
^
"KRN",8989.51,464,20,0)
^8989.512^7^7^3070911^^^^
"KRN",8989.51,464,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,464,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,464,20,3,0)
via options that do not use a load/work list.
"KRN",8989.51,464,20,4,0)
Parameter can be set at the package, division or user
"KRN",8989.51,464,20,5,0)
level. Division level takes precedence over the package level.
"KRN",8989.51,464,20,6,0)
User level takes precedence over division level.
"KRN",8989.51,464,20,7,0)
Site can also force verification by UID only.
"KRN",8989.51,464,30,0)
^8989.513I^3^3
"KRN",8989.51,464,30,1,0)
1^200
"KRN",8989.51,464,30,2,0)
2^4
"KRN",8989.51,464,30,3,0)
3^9.4
"KRN",8989.51,465,-1)
0^5
"KRN",8989.51,465,0)
LA7UTILA SHOIDS^Lab Messaging - Show Identifiers^0^^Lab Messaging - Show Identifiers
"KRN",8989.51,465,1)
S^Y:YES;N:NO;L:LAST
"KRN",8989.51,465,20,0)
^8989.512^3^3^3071021^
"KRN",8989.51,465,20,1,0)
Allows the user to select the default setting for the "Display 
"KRN",8989.51,465,20,2,0)
identifiers during message selection?" prompt when using OPTION [LA7 
"KRN",8989.51,465,20,3,0)
PRINT LAB UI MESSAGE].
"KRN",8989.51,465,30,0)
^8989.513I^2^2
"KRN",8989.51,465,30,1,0)
1^200
"KRN",8989.51,465,30,2,0)
2^4.2
"KRN",8989.51,466,-1)
0^6
"KRN",8989.51,466,0)
LA7UTILA SHOIDS LAST^^^^SHOIDS LAST^0
"KRN",8989.51,466,1)
Y
"KRN",8989.51,466,20,0)
^^2^2^3071021^
"KRN",8989.51,466,20,1,0)
Used when the user has selected "LAST".  This setting keeps track of the 
"KRN",8989.51,466,20,2,0)
user's last response to the prompt.
"KRN",8989.51,466,30,0)
^8989.513I^2^2
"KRN",8989.51,466,30,1,0)
1^200
"KRN",8989.51,466,30,2,0)
2^4.2
"KRN",8989.51,467,0)
LRAPRES1 AP ALERT^Send an alert after AP release^0^^Send alert for released AP^0
"KRN",8989.51,467,1)
Y
"KRN",8989.51,467,20,0)
^8989.512^2^2^3071116^^^^
"KRN",8989.51,467,20,1,0)
After Anatomic Pathology report is released, this will be the default 
"KRN",8989.51,467,20,2,0)
answer to the "Send an alert" message.
"KRN",8989.51,467,30,0)
^8989.513I^3^3
"KRN",8989.51,467,30,1,0)
1^200
"KRN",8989.51,467,30,2,0)
5^4
"KRN",8989.51,467,30,3,0)
10^9.4
"KRN",8989.51,471,0)
LR AP REPORT SELECTION^Default AP Report Selection Prompt^0^^AP Report Selection Default^0
"KRN",8989.51,471,1)
S^1:Accession Number;2:Unique Identifier (UID);3:Patient Name^Specify the default report selection method presented to user.
"KRN",8989.51,471,4,0)
^8989.514
"KRN",8989.51,471,30,0)
^8989.513I^3^3
"KRN",8989.51,471,30,1,0)
1^200
"KRN",8989.51,471,30,2,0)
2^4
"KRN",8989.51,471,30,3,0)
3^9.4
"KRN",8989.51,472,0)
LR AP SNOMED SYSTEM PRINT^Print SNOMED Code System^0^^Print SNOMED Version
"KRN",8989.51,472,1)
S^1:SNOMED I;2:SNOMED CT;3:BOTH^Select which version of SNOMED to print on AP reports
"KRN",8989.51,472,20,0)
^^2^2^3090227^
"KRN",8989.51,472,20,1,0)
Parameter to allow the site/division to indicate which version of SNOMED
"KRN",8989.51,472,20,2,0)
to print or display on Anatomic Pathology reports.
"KRN",8989.51,472,30,0)
^8989.513I^2^2
"KRN",8989.51,472,30,1,0)
1^4
"KRN",8989.51,472,30,2,0)
2^9.4
"KRN",8989.51,474,0)
LR MAPPING DEFAULT DIRECTORY^Lab STS Default Mapping Files Directory^0^^Default Directory^0
"KRN",8989.51,474,1)
F^3:245^The directory that contains the STS mapping files
"KRN",8989.51,474,4,0)
^8989.514^2^2
"KRN",8989.51,474,4,1,0)
MAPPING
"KRN",8989.51,474,4,2,0)
STANDARDIZATION
"KRN",8989.51,474,4,"B","MAPPING",1)

"KRN",8989.51,474,4,"B","STANDARDIZATION",2)

"KRN",8989.51,474,20,0)
^8989.512^5^5^3110105^^^^
"KRN",8989.51,474,20,1,0)
This parameter holds the name of the default directory
"KRN",8989.51,474,20,2,0)
which contains the STS mapping of standard code sets to VistA
"KRN",8989.51,474,20,3,0)
Laboratory system files.
"KRN",8989.51,474,20,4,0)
 
"KRN",8989.51,474,20,5,0)
Should be expressed as a full directory specification.
"KRN",8989.51,474,30,0)
^8989.513I^3^3
"KRN",8989.51,474,30,1,0)
1^200
"KRN",8989.51,474,30,2,0)
2^9.4
"KRN",8989.51,474,30,3,0)
3^4.2
"KRN",8989.51,476,0)
LR MAPPING DEFAULT FILESPEC^Lab STS Default Mapping Filespec^0^^Default FileSpec^0
"KRN",8989.51,476,1)
F^3:70^The filespec to screen the display of files
"KRN",8989.51,476,4,0)
^8989.514^2^2
"KRN",8989.51,476,4,1,0)
MAPPING
"KRN",8989.51,476,4,2,0)
STANDARDIZATION
"KRN",8989.51,476,4,"B","MAPPING",1)

"KRN",8989.51,476,4,"B","STANDARDIZATION",2)

"KRN",8989.51,476,20,0)
^8989.512^5^5^3110105^^^
"KRN",8989.51,476,20,1,0)
This parameter holds the file specification used to screen which
"KRN",8989.51,476,20,2,0)
files is a given directory are presented to the user for loading.
"KRN",8989.51,476,20,3,0)
These files contain the STS mapping of standard code sets to VistA
"KRN",8989.51,476,20,4,0)
Laboratory system files.
"KRN",8989.51,476,20,5,0)

"KRN",8989.51,476,30,0)
^8989.513I^3^3
"KRN",8989.51,476,30,1,0)
1^200
"KRN",8989.51,476,30,2,0)
2^9.4
"KRN",8989.51,476,30,3,0)
3^4.2
"KRN",8989.51,479,0)
LR CH GUI REPORT RIGHT MARGIN^Chemistry GUI Report Right Margin^0^^Chemistry GUI Report Right Margin^0
"KRN",8989.51,479,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,479,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,479,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,479,20,2,0)
chemistry/hematology type laboratory reports within a GUI display/client.
"KRN",8989.51,479,20,3,0)

"KRN",8989.51,479,30,0)
^8989.513I^3^3
"KRN",8989.51,479,30,1,0)
1^200
"KRN",8989.51,479,30,2,0)
2^4
"KRN",8989.51,479,30,3,0)
3^9.4
"KRN",8989.51,480,0)
LR MI GUI REPORT RIGHT MARGIN^Microbiology GUI Report Right Margin^0^^Microbiology GUI Report Right Margin^0
"KRN",8989.51,480,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,480,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,480,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,480,20,2,0)
microbiology type laboratory reports within a GUI display/client.
"KRN",8989.51,480,20,3,0)

"KRN",8989.51,480,30,0)
^8989.513I^3^3
"KRN",8989.51,480,30,1,0)
1^200
"KRN",8989.51,480,30,2,0)
2^4
"KRN",8989.51,480,30,3,0)
3^9.4
"KRN",8989.51,481,0)
LR AP GUI REPORT RIGHT MARGIN^AP GUI Report Right Margin^0^^AP GUI Report Right Margin^0
"KRN",8989.51,481,1)
N^80:240:0^Enter the value to be used for the right margin when foramtting lab reports
"KRN",8989.51,481,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,481,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,481,20,2,0)
anatomic pathology type laboratory reports within a GUI display/client.
"KRN",8989.51,481,20,3,0)

"KRN",8989.51,481,30,0)
^8989.513I^3^3
"KRN",8989.51,481,30,1,0)
1^200
"KRN",8989.51,481,30,2,0)
2^4
"KRN",8989.51,481,30,3,0)
3^9.4
"KRN",8989.51,482,0)
LR MI VERIFY DISPLAY PROVIDER^Display Provider in Micro Result Entry^0^^Display Provider in Micro Result Entry^0
"KRN",8989.51,482,1)
Y^^Enter yes/no to display ordering provider information during micro result entry
"KRN",8989.51,482,20,0)
^8989.512^3^3^3111006^^^^
"KRN",8989.51,482,20,1,0)
This parameter allows the site/division/user to indicate if the ordering
"KRN",8989.51,482,20,2,0)
provider information should be displayed to the user during microbiology
"KRN",8989.51,482,20,3,0)
result data entry.
"KRN",8989.51,482,30,0)
^8989.513I^3^3
"KRN",8989.51,482,30,1,0)
1^200
"KRN",8989.51,482,30,2,0)
2^4
"KRN",8989.51,482,30,3,0)
3^9.4
"KRN",8989.51,496,0)
LR ACCESSION DEFAULT SPECIMEN^Default Accessioning Specimen^1^Lab Section^Default Specimen
"KRN",8989.51,496,1)
P^61^Select the Lab Section for this default specimen
"KRN",8989.51,496,4,0)
^8989.514^1^1
"KRN",8989.51,496,4,1,0)
AP DEFAULTS
"KRN",8989.51,496,4,"B","AP DEFAULTS",1)

"KRN",8989.51,496,6)
P^68
"KRN",8989.51,496,7)

"KRN",8989.51,496,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,496,20,0)
^8989.512^2^2^3081007^^^^
"KRN",8989.51,496,20,1,0)
Allows the package/facility/user to set a default topography presented
"KRN",8989.51,496,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,496,30,0)
^8989.513I^3^3
"KRN",8989.51,496,30,1,0)
1^200
"KRN",8989.51,496,30,2,0)
2^4
"KRN",8989.51,496,30,3,0)
3^9.4
"KRN",8989.51,497,0)
LR ACCESSION DEFAULT COL SAMP^Default Accessioning Collection Sample^1^Lab Section^Default Collection Sample
"KRN",8989.51,497,1)
P^62^Select the Lab Section for this default collection sample
"KRN",8989.51,497,4,0)
^8989.514^1^1
"KRN",8989.51,497,4,1,0)
AP DEFAULTS
"KRN",8989.51,497,4,"B","AP DEFAULTS",1)

"KRN",8989.51,497,6)
P^68
"KRN",8989.51,497,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,497,20,0)
^8989.512^4^4^3111216^^^^
"KRN",8989.51,497,20,1,0)
Allows the package/facility/user to set a default collection sample
"KRN",8989.51,497,20,2,0)
presented to the user when accessioning specimens into the Laboratory
"KRN",8989.51,497,20,3,0)
system.
"KRN",8989.51,497,20,4,0)

"KRN",8989.51,497,30,0)
^8989.513I^3^3
"KRN",8989.51,497,30,1,0)
1^200
"KRN",8989.51,497,30,2,0)
2^4
"KRN",8989.51,497,30,3,0)
3^9.4
"KRN",8989.51,498,0)
LR ACCESSION DEFAULT LAB TEST^Default Accessioning Lab Test^1^Lab Section^Default Laboratory Test
"KRN",8989.51,498,1)
P^60^Select the Lab Section for this default lab test
"KRN",8989.51,498,4,0)
^8989.514^1^1
"KRN",8989.51,498,4,1,0)
AP DEFAULTS
"KRN",8989.51,498,4,"B","AP DEFAULTS",1)

"KRN",8989.51,498,6)
P^68
"KRN",8989.51,498,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,498,20,0)
^8989.512^3^3^3081007^^^^
"KRN",8989.51,498,20,1,0)
Allows the package/facility/user to set a default laboratory test presented
"KRN",8989.51,498,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,498,20,3,0)

"KRN",8989.51,498,30,0)
^8989.513I^3^3
"KRN",8989.51,498,30,1,0)
1^200
"KRN",8989.51,498,30,2,0)
2^4
"KRN",8989.51,498,30,3,0)
3^9.4
"KRN",8989.51,499,0)
LR MANIFEST EXC PREV TEST^Exclude removed tests from building^1^Shipping Configuration^Exclude removed tests default^0
"KRN",8989.51,499,1)
Y^^Answer with yes/no to exclude previously removed tests building on manifest
"KRN",8989.51,499,6)
P^62.9
"KRN",8989.51,499,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,499,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,499,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,499,20,2,0)
when building a shipping configuration to the prompt "Exclude previously
"KRN",8989.51,499,20,3,0)
removed tests from building?"
"KRN",8989.51,499,30,0)
^8989.513I^2^2
"KRN",8989.51,499,30,1,0)
1^200
"KRN",8989.51,499,30,2,0)
10^9.4
"KRN",8989.51,500,0)
LR VER DEFAULT PERFORMING LAB^Default Performing Laboratory^0^Institution^Default Performing Laboratory
"KRN",8989.51,500,1)
P^4^Choose the institution that you want presented as the default performing lab.
"KRN",8989.51,500,2)

"KRN",8989.51,500,3)
I $$SCRNPL^LRVERA(1)
"KRN",8989.51,500,20,0)
^8989.512^4^4^3081103^^
"KRN",8989.51,500,20,1,0)
Allows the user to designate a default performing lab that is
"KRN",8989.51,500,20,2,0)
presented to the user when specifying the performing lab. 
"KRN",8989.51,500,20,3,0)
Normally the lab software defaults to the user's institution.
"KRN",8989.51,500,20,4,0)
This parameter allows the user to specify a different institution.
"KRN",8989.51,500,30,0)
^8989.513I^1^1
"KRN",8989.51,500,30,1,0)
1^200
"KRN",8989.51,505,0)
LR AP SURGERY REFERENCE^Document Surgery Package Case Info^0^^Document Surgery Case Info^0
"KRN",8989.51,505,1)
Y^^Answer YES/NO if a source statement is included when copying surgical case info.
"KRN",8989.51,505,20,0)
^8989.512^3^3^3081126^
"KRN",8989.51,505,20,1,0)
Allows site/division to indicate when copying surgical case information from
"KRN",8989.51,505,20,2,0)
the Surgery package during surgical pathology login if a statement is also
"KRN",8989.51,505,20,3,0)
added to the copied information documenting the source of the copied information.
"KRN",8989.51,505,30,0)
^8989.513I^2^2
"KRN",8989.51,505,30,1,0)
1^4
"KRN",8989.51,505,30,2,0)
2^9.4
"KRN",8989.51,506,0)
LR MI VERIFY CPRS ALERT^Prompt CPRS Alert in Micro Result Entry^0^^Send CPRS Alert in Micro Result Entry^0
"KRN",8989.51,506,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,506,4,0)
^8989.514^1^1
"KRN",8989.51,506,4,1,0)
MICRO
"KRN",8989.51,506,4,"B","MICRO",1)

"KRN",8989.51,506,20,0)
^8989.512^6^6^3090508^^
"KRN",8989.51,506,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,506,20,2,0)
to send a CPRS alert after editing a microbiology accession.
"KRN",8989.51,506,20,3,0)
 
"KRN",8989.51,506,20,4,0)
The user can indicate:
"KRN",8989.51,506,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,506,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,506,30,0)
^8989.513I^3^3
"KRN",8989.51,506,30,1,0)
1^200
"KRN",8989.51,506,30,2,0)
2^4
"KRN",8989.51,506,30,3,0)
3^9.4
"KRN",8989.51,508,0)
LR CH VERIFY CPRS ALERT^Prompt CPRS Alert in CH Result Entry^0^^Send CPRS Alert in CH Result Entry^0
"KRN",8989.51,508,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,508,4,0)
^8989.514^1^1
"KRN",8989.51,508,4,1,0)
CHEM/HEME
"KRN",8989.51,508,4,"B","CHEM/HEME",1)

"KRN",8989.51,508,20,0)
^^6^6^3090629^
"KRN",8989.51,508,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,508,20,2,0)
to send a CPRS alert after editing a Chem/Heme accession.
"KRN",8989.51,508,20,3,0)
 
"KRN",8989.51,508,20,4,0)
The user can indicate:
"KRN",8989.51,508,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,508,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,508,30,0)
^8989.513I^3^3
"KRN",8989.51,508,30,1,0)
1^200
"KRN",8989.51,508,30,2,0)
2^4
"KRN",8989.51,508,30,3,0)
3^9.4
"KRN",8989.51,525,0)
LR REPORTS FACILITY PRINT^Print Reporting/Printing Facility^0^^Print Reporting/Printing Facility^0
"KRN",8989.51,525,1)
S^0:None;1:Reporting Facility;2:Printing Facility;3:Both^Should name of reporting and/or printing facility appear on Lab reports.
"KRN",8989.51,525,4,0)
^8989.514^1^1
"KRN",8989.51,525,4,1,0)
REPORTS
"KRN",8989.51,525,4,"B","REPORTS",1)

"KRN",8989.51,525,20,0)
^^6^6^3091110^
"KRN",8989.51,525,20,1,0)
 
"KRN",8989.51,525,20,2,0)
Determines if the name and address of the:
"KRN",8989.51,525,20,3,0)
 1. Laboratory that is responsible for the report display on the Laboratory report.
"KRN",8989.51,525,20,4,0)
 2. Facility where the report is printed display on the Laboratory report.
"KRN",8989.51,525,20,5,0)
 3. Both names display on the Laboratory report.
"KRN",8989.51,525,20,6,0)

"KRN",8989.51,525,30,0)
^8989.513I^3^2
"KRN",8989.51,525,30,2,0)
1^4
"KRN",8989.51,525,30,3,0)
2^9.4
"KRN",8989.51,526,0)
LR MANIFEST DEFLT ACCESSION^Use default accession dates^1^Shipping Configuration^Use default accession dates default^0
"KRN",8989.51,526,1)
Y^^Answer with yes/no to Use default accession dates prompt
"KRN",8989.51,526,6)
P^62.9
"KRN",8989.51,526,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,526,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,526,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,526,20,2,0)
when building a shipping configuration to the prompt "Use default 
"KRN",8989.51,526,20,3,0)
accession dates?"
"KRN",8989.51,526,30,0)
^8989.513I^2^2
"KRN",8989.51,526,30,1,0)
1^200
"KRN",8989.51,526,30,2,0)
10^9.4
"KRN",8989.51,529,0)
LR ASK PERFORMING LAB MICRO^Ask Performing Lab Micro^0^^Ask Performing Lab for MICRO^0
"KRN",8989.51,529,1)
Y^^Enter yes to be prompted for Performing Lab for Microbiology tests.
"KRN",8989.51,529,4,0)
^8989.514^1^1
"KRN",8989.51,529,4,1,0)
PERFORMING LAB
"KRN",8989.51,529,4,"B","PERFORMING LAB",1)

"KRN",8989.51,529,6)

"KRN",8989.51,529,20,0)
^8989.512^5^5^3111028^^^^
"KRN",8989.51,529,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,529,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,529,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,529,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,529,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,529,30,0)
^8989.513I^3^3
"KRN",8989.51,529,30,1,0)
1^200
"KRN",8989.51,529,30,2,0)
2^4
"KRN",8989.51,529,30,3,0)
3^9.4
"KRN",8989.51,530,0)
LR ASK PERFORMING LAB AP^Ask Performing Lab AP^0^^Ask Performing Lab AP^0
"KRN",8989.51,530,1)
Y^^Enter yes to be prompted for Performing Lab for Anatomic Pathology tests.
"KRN",8989.51,530,4,0)
^8989.514^1^1
"KRN",8989.51,530,4,1,0)
PERFORMING LAB
"KRN",8989.51,530,4,"B","PERFORMING LAB",1)

"KRN",8989.51,530,6)

"KRN",8989.51,530,20,0)
^8989.512^5^5^3111205^^^^
"KRN",8989.51,530,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,530,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,530,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,530,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,530,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,530,30,0)
^8989.513I^3^3
"KRN",8989.51,530,30,1,0)
1^200
"KRN",8989.51,530,30,2,0)
2^4
"KRN",8989.51,530,30,3,0)
3^9.4
"KRN",8989.51,533,-1)
0^12
"KRN",8989.51,533,0)
LA LEDI ORU HL7 STATUS^LEDI HL7 Result Messaging Status^1^LEDI Result Messaging Status For Agency^Interface Status^1
"KRN",8989.51,533,1)
S^0:Disabled;1:Enabled;2:CH Only;3:MI Only;4:AP Only;5:CH/MI;6:CH/AP;7:MI/AP^Specify the areas of Laboratory which LEDI supports.
"KRN",8989.51,533,4,0)
^8989.514^1^1
"KRN",8989.51,533,4,1,0)
LEDI
"KRN",8989.51,533,4,"B","LEDI",1)

"KRN",8989.51,533,6)
P^4.11
"KRN",8989.51,533,20,0)
^^17^17^3120622^
"KRN",8989.51,533,20,1,0)
This parameter is used to control the building of LEDI HL7 result messages
"KRN",8989.51,533,20,2,0)
on an interface basis for specific messaging partners based on the AGENCY
"KRN",8989.51,533,20,3,0)
associated with the interface. It allows for the selective
"KRN",8989.51,533,20,4,0)
enabling/disabling of either all result messaging or just result messaging
"KRN",8989.51,533,20,5,0)
in support of specific areas of VistA Laboratory.
"KRN",8989.51,533,20,6,0)
 
"KRN",8989.51,533,20,7,0)
It currently allows for control of the main laboratory areas, also 
"KRN",8989.51,533,20,8,0)
referred to as subscripts or a combination.
"KRN",8989.51,533,20,9,0)
 
"KRN",8989.51,533,20,10,0)
The areas are:
"KRN",8989.51,533,20,11,0)
 'CH' = laboratory tests within the "CH" subscript of LAB DATA file (#63).
"KRN",8989.51,533,20,12,0)
 'MI' = laboratory tests within the "MI" subscript of LAB DATA file (#63).
"KRN",8989.51,533,20,13,0)
 'AP' = laboratory tests within the "SP", "CY", and "EM" subscript of LAB
"KRN",8989.51,533,20,14,0)
        DATA file (#63).
"KRN",8989.51,533,20,15,0)
 
"KRN",8989.51,533,20,16,0)
Selecting "Disabled" disables all sections of laboratory.
"KRN",8989.51,533,20,17,0)
Selecting "Enabled" enables all three main sections ("CH", "MI", and "AP")
"KRN",8989.51,533,30,0)
^8989.513I^1^1
"KRN",8989.51,533,30,1,0)
1^9.4
"KRN",8989.51,534,-1)
0^13
"KRN",8989.51,534,0)
LA LEDI ORM HL7 STATUS^LEDI HL7 Order Messaging Status^1^LEDI Order Messaging Status For Agency^Interface Status^1
"KRN",8989.51,534,1)
S^0:Disabled;1:Enabled;2:CH Only;3:MI Only;4:AP Only;5:CH/MI;6:CH/AP;7:MI/AP^Specify the areas of Laboratory which LEDI supports.
"KRN",8989.51,534,4,0)
^8989.514^1^1
"KRN",8989.51,534,4,1,0)
LEDI
"KRN",8989.51,534,4,"B","LEDI",1)

"KRN",8989.51,534,6)
P^4.11
"KRN",8989.51,534,20,0)
^^17^17^3120622^
"KRN",8989.51,534,20,1,0)
This parameter is used to control the building of LEDI HL7 order messages
"KRN",8989.51,534,20,2,0)
on an interface basis for specific messaging partners based on the AGENCY
"KRN",8989.51,534,20,3,0)
associated with the interface. It allows for the selective
"KRN",8989.51,534,20,4,0)
enabling/disabling of either all order messaging or just order messaging
"KRN",8989.51,534,20,5,0)
in support of specific areas of VistA Laboratory.
"KRN",8989.51,534,20,6,0)
 
"KRN",8989.51,534,20,7,0)
It currently allows for control of the main laboratory areas, also 
"KRN",8989.51,534,20,8,0)
referred to as subscripts or a combination.
"KRN",8989.51,534,20,9,0)
 
"KRN",8989.51,534,20,10,0)
The areas are:
"KRN",8989.51,534,20,11,0)
 'CH' = laboratory tests within the "CH" subscript of LAB DATA file (#63).
"KRN",8989.51,534,20,12,0)
 'MI' = laboratory tests within the "MI" subscript of LAB DATA file (#63).
"KRN",8989.51,534,20,13,0)
 'AP' = laboratory tests within the "SP", "CY", and "EM" subscript of LAB
"KRN",8989.51,534,20,14,0)
        DATA file (#63).
"KRN",8989.51,534,20,15,0)
 
"KRN",8989.51,534,20,16,0)
Selecting "Disabled" disables all sections of laboratory.
"KRN",8989.51,534,20,17,0)
Selecting "Enabled" enables all three main sections ("CH", "MI", and "AP")
"KRN",8989.51,534,30,0)
^8989.513I^1^1
"KRN",8989.51,534,30,1,0)
1^9.4
"KRN",8989.51,4762,-1)
1^9
"KRN",8989.51,4762,0)
LA LEDI HL7 STATUS
"KRN",8989.51,4763,-1)
1^10
"KRN",8989.51,4763,0)
LA7S MANIFEST DEFLT ACCESSION
"KRN",8989.51,4764,-1)
1^11
"KRN",8989.51,4764,0)
LA7S MANIFEST EXC PREV TEST
"KRN",8989.52,10,-1)
0^2
"KRN",8989.52,10,0)
LR PKG^Lab Package Level Parameters^9.4
"KRN",8989.52,10,10,0)
^8989.521IA^38^35
"KRN",8989.52,10,10,1,0)
1^LR COLLECT MONDAY
"KRN",8989.52,10,10,2,0)
2^LR COLLECT TUESDAY
"KRN",8989.52,10,10,3,0)
3^LR COLLECT WEDNESDAY
"KRN",8989.52,10,10,4,0)
4^LR COLLECT THURSDAY
"KRN",8989.52,10,10,5,0)
5^LR COLLECT FRIDAY
"KRN",8989.52,10,10,6,0)
6^LR COLLECT SATURDAY
"KRN",8989.52,10,10,7,0)
7^LR COLLECT SUNDAY
"KRN",8989.52,10,10,8,0)
8^LR IGNORE HOLIDAYS
"KRN",8989.52,10,10,10,0)
11^LR EGFR METHOD
"KRN",8989.52,10,10,11,0)
12^LR EGFR AGE CUTOFF
"KRN",8989.52,10,10,12,0)
13^LR EGFR RESULT SUPPRESS
"KRN",8989.52,10,10,13,0)
9.2^LR VER EA VERIFY BY UID
"KRN",8989.52,10,10,14,0)
9.1^LR VER EM VERIFY BY UID
"KRN",8989.52,10,10,15,0)
20^LRAPRES1 AP ALERT
"KRN",8989.52,10,10,16,0)
21^LR AP REPORT SELECTION
"KRN",8989.52,10,10,17,0)
24^LR AP SNOMED SYSTEM PRINT
"KRN",8989.52,10,10,18,0)
50^LR CH GUI REPORT RIGHT MARGIN
"KRN",8989.52,10,10,19,0)
52^LR MI GUI REPORT RIGHT MARGIN
"KRN",8989.52,10,10,20,0)
54^LR AP GUI REPORT RIGHT MARGIN
"KRN",8989.52,10,10,21,0)
9.3^LR MI VERIFY DISPLAY PROVIDER
"KRN",8989.52,10,10,22,0)
130.1^LR ACCESSION DEFAULT SPECIMEN
"KRN",8989.52,10,10,23,0)
130.2^LR ACCESSION DEFAULT COL SAMP
"KRN",8989.52,10,10,24,0)
130.3^LR ACCESSION DEFAULT LAB TEST
"KRN",8989.52,10,10,26,0)
25^LR AP SURGERY REFERENCE
"KRN",8989.52,10,10,27,0)
9.35^LR MI VERIFY CPRS ALERT
"KRN",8989.52,10,10,28,0)
9.36^LR CH VERIFY CPRS ALERT
"KRN",8989.52,10,10,29,0)
8.1^LR LAB COLLECT FUTURE
"KRN",8989.52,10,10,30,0)
8.11^LR MAX DAYS CONTINUOUS
"KRN",8989.52,10,10,31,0)
200^LR REPORTS FACILITY PRINT
"KRN",8989.52,10,10,33,0)
900^LR MAPPING DEFAULT DIRECTORY
"KRN",8989.52,10,10,34,0)
900.1^LR MAPPING DEFAULT FILESPEC
"KRN",8989.52,10,10,35,0)
22^LR ASK PERFORMING LAB AP
"KRN",8989.52,10,10,36,0)
23^LR ASK PERFORMING LAB MICRO
"KRN",8989.52,10,10,37,0)
150.1^LR MANIFEST EXC PREV TEST
"KRN",8989.52,10,10,38,0)
150.2^LR MANIFEST DEFLT ACCESSION
"KRN",8989.52,90,-1)
0^1
"KRN",8989.52,90,0)
LR USER^Lab User Level Parameters^200
"KRN",8989.52,90,10,0)
^8989.521IA^23^23
"KRN",8989.52,90,10,1,0)
100^LR VER DISPLAY PREV COMMENT
"KRN",8989.52,90,10,2,0)
200^LA7UTILA PARSE
"KRN",8989.52,90,10,3,0)
210^LA7UTILA USE BROWSER
"KRN",8989.52,90,10,4,0)
50^LR LABEL PRINTER DEFAULT
"KRN",8989.52,90,10,5,0)
220^LA7UTILA SHOIDS
"KRN",8989.52,90,10,6,0)
125^LRAPRES1 AP ALERT
"KRN",8989.52,90,10,7,0)
120^LR AP REPORT SELECTION
"KRN",8989.52,90,10,8,0)
300^LR CH GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,9,0)
305^LR MI GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,10,0)
310^LR AP GUI REPORT RIGHT MARGIN
"KRN",8989.52,90,10,11,0)
110^LR MI VERIFY DISPLAY PROVIDER
"KRN",8989.52,90,10,12,0)
130.1^LR ACCESSION DEFAULT SPECIMEN
"KRN",8989.52,90,10,13,0)
130.2^LR ACCESSION DEFAULT COL SAMP
"KRN",8989.52,90,10,14,0)
130.3^LR ACCESSION DEFAULT LAB TEST
"KRN",8989.52,90,10,15,0)
150.1^LR MANIFEST EXC PREV TEST
"KRN",8989.52,90,10,16,0)
102^LR VER DEFAULT PERFORMING LAB
"KRN",8989.52,90,10,17,0)
112.6^LR MI VERIFY CPRS ALERT
"KRN",8989.52,90,10,18,0)
112.3^LR CH VERIFY CPRS ALERT
"KRN",8989.52,90,10,19,0)
150.2^LR MANIFEST DEFLT ACCESSION
"KRN",8989.52,90,10,20,0)
900^LR MAPPING DEFAULT DIRECTORY
"KRN",8989.52,90,10,21,0)
900.1^LR MAPPING DEFAULT FILESPEC
"KRN",8989.52,90,10,22,0)
104^LR ASK PERFORMING LAB AP
"KRN",8989.52,90,10,23,0)
105^LR ASK PERFORMING LAB MICRO
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"PKG",53,-1)
1^1
"PKG",53,0)
AUTOMATED LAB INSTRUMENTS^LA^Lab Auto-Instrument Package
"PKG",53,20,0)
^9.402P^^
"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
5.2^2940927^2950125
"PKG",53,22,1,"PAH",1,0)
74^3120718
"PKG",53,22,1,"PAH",1,1,0)
^^1^1^3120718
"PKG",53,22,1,"PAH",1,1,1,0)
Refer to National Patch Module.
"PRE")
LA74
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
106
"RTN","LA74")
0^^B46832584
"RTN","LA74",1,0)
LA74 ;DALOI/JMC - LA*5.2*74 KIDS ROUTINE ;12/27/11  09:32
"RTN","LA74",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA74",3,0)
 ;
"RTN","LA74",4,0)
EN ; Does not prevent loading of the transport global.
"RTN","LA74",5,0)
 N STR,BAD,POS,X
"RTN","LA74",6,0)
 S XPDNOQUE=1 ;no queuing
"RTN","LA74",7,0)
 S POS=$G(IOM,80) S:POS<1 POS=80
"RTN","LA74",8,0)
 I '$G(XPDENV) D  ;
"RTN","LA74",9,0)
 . S STR="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LA74",10,0)
 . D ALERT(STR)
"RTN","LA74",11,0)
 . W !,$$CJ^XLFSTR("Sending transport global loaded alert to mail group G.LMI",POS)
"RTN","LA74",12,0)
 ;
"RTN","LA74",13,0)
 I $G(XPDENV) D  ;
"RTN","LA74",14,0)
 . W !,$$CJ^XLFSTR("Sending install started alert to mail group G.LMI",POS)
"RTN","LA74",15,0)
 . S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LA74",16,0)
 . D ALERT(STR)
"RTN","LA74",17,0)
 ;
"RTN","LA74",18,0)
 S BAD=0
"RTN","LA74",19,0)
 I '$G(IOM) S BAD=1
"RTN","LA74",20,0)
 I '$G(IOSL) S BAD=1
"RTN","LA74",21,0)
 I $G(U)'="^" S BAD=1
"RTN","LA74",22,0)
 I BAD D  ;
"RTN","LA74",23,0)
 . W !,$$CJ^XLFSTR("Terminal Device is not defined.",POS)
"RTN","LA74",24,0)
 . S XPDABORT=2
"RTN","LA74",25,0)
 ;
"RTN","LA74",26,0)
 S BAD=0
"RTN","LA74",27,0)
 I '$G(DUZ) S BAD=1
"RTN","LA74",28,0)
 I $D(DUZ)[0 S BAD=1
"RTN","LA74",29,0)
 I $D(DUZ(0))[0 S BAD=1
"RTN","LA74",30,0)
 I BAD D  ;
"RTN","LA74",31,0)
 . W !,$$CJ^XLFSTR("Please login to set DUZ variables.",POS)
"RTN","LA74",32,0)
 . S XPDABORT=2
"RTN","LA74",33,0)
 ;
"RTN","LA74",34,0)
 I $G(DUZ) I '$$ACTIVE^XUSER(DUZ) D  ;
"RTN","LA74",35,0)
 . W !,$$CJ^XLFSTR("Not a valid user on this system.",POS)
"RTN","LA74",36,0)
 . S XPDABORT=2
"RTN","LA74",37,0)
 ;
"RTN","LA74",38,0)
 S BAD=0
"RTN","LA74",39,0)
 I $G(XPDABORT)!$G(XPDQUIT) S BAD=1
"RTN","LA74",40,0)
 S X="LR350"
"RTN","LA74",41,0)
 X ^%ZOSF("TEST")
"RTN","LA74",42,0)
 I '$T D  ;
"RTN","LA74",43,0)
 . S BAD=1
"RTN","LA74",44,0)
 . S BAD(1)="Routine LR350 is missing."
"RTN","LA74",45,0)
 . S XPDABORT=2
"RTN","LA74",46,0)
 ;
"RTN","LA74",47,0)
 I BAD!($G(XPDABORT)) D  ;
"RTN","LA74",48,0)
 . S XPDABORT=2
"RTN","LA74",49,0)
 . W !!,$C(7),$$CJ^XLFSTR("* * *  Environment Check FAILED  * * *",POS)
"RTN","LA74",50,0)
 . I $G(BAD(1))'="" W !,$$CJ^XLFSTR(BAD(1),POS)
"RTN","LA74",51,0)
 . I XPDENV=1 W !!,$C(7),$$CJ^XLFSTR("Installation aborted.",POS),!
"RTN","LA74",52,0)
 ;
"RTN","LA74",53,0)
 I 'BAD&'$G(XPDABORT) D  ;
"RTN","LA74",54,0)
 . W !,$$CJ^XLFSTR("--- Environment okay ---",POS)
"RTN","LA74",55,0)
 ;
"RTN","LA74",56,0)
 ; Disable options, protocols, scheduled options
"RTN","LA74",57,0)
 I XPDENV=1 S XPDDIQ("XPZ1","B")="YES"
"RTN","LA74",58,0)
 Q
"RTN","LA74",59,0)
 ;
"RTN","LA74",60,0)
 ;
"RTN","LA74",61,0)
PRE ;
"RTN","LA74",62,0)
 ; KIDS Pre install for LA*5.2*74
"RTN","LA74",63,0)
 N LADATA,LAMSG,LAACTN,LAX,X
"RTN","LA74",64,0)
 D BMES("*** Pre install started ***")
"RTN","LA74",65,0)
 ; System ready from LR350?
"RTN","LA74",66,0)
 S X=$G(^TMP("LR350",$J,1))
"RTN","LA74",67,0)
 I 'X D  Q  ;
"RTN","LA74",68,0)
 . S XPDABORT=1
"RTN","LA74",69,0)
 . W $C(7)
"RTN","LA74",70,0)
 . D BMES(" ")
"RTN","LA74",71,0)
 . D BMES("Install aborted -- System not ready.")
"RTN","LA74",72,0)
 . D MES("Refer to the Install Guide for more information.")
"RTN","LA74",73,0)
 . D BMES(" ")
"RTN","LA74",74,0)
 . H 5
"RTN","LA74",75,0)
 . D RESTORE^LR350
"RTN","LA74",76,0)
 ;
"RTN","LA74",77,0)
 ; Save off any local entries in File #62.47
"RTN","LA74",78,0)
 K ^TMP("LA74-LOCAL",$J)
"RTN","LA74",79,0)
 ; Is this the LDSI development acount?
"RTN","LA74",80,0)
 ;S LAACTN(2)=($G(^%ZOSF("VOL"))="MHCVSS")
"RTN","LA74",81,0)
 ;I LAACTN(2)=0  D  ;
"RTN","LA74",82,0)
 I 1 D  ;
"RTN","LA74",83,0)
 . D BMES("Checking for local codes in #62.47")
"RTN","LA74",84,0)
 . D GETLOCAL
"RTN","LA74",85,0)
 . S LAX=+$G(^TMP("LA74-LOCAL",$J,"6247",0))
"RTN","LA74",86,0)
 . D BMES(LAX_" local code"_$S(LAX=1:"",1:"s")_" found in #62.47")
"RTN","LA74",87,0)
 K LAACTN(2)
"RTN","LA74",88,0)
 ;
"RTN","LA74",89,0)
 ; delete #62.47 data and DD
"RTN","LA74",90,0)
 D BMES("Deleting File #62.47 data and DD")
"RTN","LA74",91,0)
 D  ;
"RTN","LA74",92,0)
 . N DIU
"RTN","LA74",93,0)
 . S LADATA=$$VFILE^DILFD(62.47)
"RTN","LA74",94,0)
 . ; handle remnant #62.47 (sub-file of 62.4) VFILE=0 for this
"RTN","LA74",95,0)
 . I 'LADATA D  ;
"RTN","LA74",96,0)
 . . S DIU(0)="S"
"RTN","LA74",97,0)
 . . S DIU=62.47
"RTN","LA74",98,0)
 . ;
"RTN","LA74",99,0)
 . I LADATA D  ;
"RTN","LA74",100,0)
 . . S DIU(0)="DS"
"RTN","LA74",101,0)
 . . S DIU="^LAB(62.47,"
"RTN","LA74",102,0)
 . D EN^DIU2
"RTN","LA74",103,0)
 ; take care of orphaned DD if not deleted from above
"RTN","LA74",104,0)
 ; This happened in San Antonio initial install
"RTN","LA74",105,0)
 I $D(^DD(62.47)) D  ;
"RTN","LA74",106,0)
 . D BMES("#62.47 DD still exists.  KILLing the DD now")
"RTN","LA74",107,0)
 . I $D(^LAB(62.47)) D  ;
"RTN","LA74",108,0)
 . . N DIERR,LAMSG,LAFDA
"RTN","LA74",109,0)
 . . S R6247=0
"RTN","LA74",110,0)
 . . F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA74",111,0)
 . . . K LRFDA,LAMSG
"RTN","LA74",112,0)
 . . . S LAFDA(1,62.47,R6247_",",.01)="@"
"RTN","LA74",113,0)
 . . . D FILE^DIE("E","LAFDA(1)","LAMSG")
"RTN","LA74",114,0)
 . . ;
"RTN","LA74",115,0)
 . K ^DD(62.47) ;(okay by Skip Ormsby)
"RTN","LA74",116,0)
 ;
"RTN","LA74",117,0)
 ; Delete DD for file #62.49
"RTN","LA74",118,0)
 I $$VFILE^DILFD(62.49) D
"RTN","LA74",119,0)
 . N DIU
"RTN","LA74",120,0)
 . D BMES("Purging DD for file #62.49")
"RTN","LA74",121,0)
 . S DIU="^LAHM(62.49,",DIU(0)="" D EN^DIU2
"RTN","LA74",122,0)
 ;
"RTN","LA74",123,0)
 ;I '$D(LAACTN) D BMES("--- No action required for pre-install ---")
"RTN","LA74",124,0)
 D BMES("*** Pre install completed ***")
"RTN","LA74",125,0)
 ;
"RTN","LA74",126,0)
 Q
"RTN","LA74",127,0)
 ;
"RTN","LA74",128,0)
 ;
"RTN","LA74",129,0)
POST ;
"RTN","LA74",130,0)
 ; KIDS Post install for LA*5.2*74
"RTN","LA74",131,0)
 N X
"RTN","LA74",132,0)
 D POST^LA74A
"RTN","LA74",133,0)
 ; Delete extra routines here
"RTN","LA74",134,0)
 I '$$GET^XUPARAM("XPD NO_EPP_DELETE") D  ;
"RTN","LA74",135,0)
 . S X="LA74A" X ^%ZOSF("TEST") Q:'$T  X ^%ZOSF("DEL")
"RTN","LA74",136,0)
 D RESTORE^LR350
"RTN","LA74",137,0)
 Q
"RTN","LA74",138,0)
 ;
"RTN","LA74",139,0)
 ;
"RTN","LA74",140,0)
ALERT(MSG,RECIPS) ;
"RTN","LA74",141,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LA74",142,0)
 S XQAMSG=$G(MSG)
"RTN","LA74",143,0)
 I '$$GOTLOCAL^XMXAPIG("LMI") S XQA("G.LMI")=""
"RTN","LA74",144,0)
 E  S XQA(DUZ)=""
"RTN","LA74",145,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LA74",146,0)
 D SETUP^XQALERT
"RTN","LA74",147,0)
 Q
"RTN","LA74",148,0)
 ;
"RTN","LA74",149,0)
 ;
"RTN","LA74",150,0)
BMES(STR) ;
"RTN","LA74",151,0)
 ; Write string
"RTN","LA74",152,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LA74",153,0)
 Q
"RTN","LA74",154,0)
 ;
"RTN","LA74",155,0)
PROGRESS(LAST) ;
"RTN","LA74",156,0)
 ; Prints a "." when NOW > LAST + INT
"RTN","LA74",157,0)
 ; Input
"RTN","LA74",158,0)
 ;   LAST : <byref> The last $H when "." was shown
"RTN","LA74",159,0)
 N INT
"RTN","LA74",160,0)
 S INT=1 ;interval in seconds
"RTN","LA74",161,0)
 I $P($H,",",2)>(+$P(LAST,",",2)+INT) S LAST=$H W "."
"RTN","LA74",162,0)
 Q
"RTN","LA74",163,0)
 ;
"RTN","LA74",164,0)
 ;
"RTN","LA74",165,0)
PTG ;
"RTN","LA74",166,0)
 ; Pre-Transport Global routine
"RTN","LA74",167,0)
 ; Populate pre-transport global with #62.47 data
"RTN","LA74",168,0)
 ; Only files the 0 nodes (2 node is for local data)
"RTN","LA74",169,0)
 N R6247,R624701,DATA,X,MSG,IENS2,P2FILE,SUB,CNT,DIERR
"RTN","LA74",170,0)
 S (R6247,CNT)=0
"RTN","LA74",171,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA74",172,0)
 . S DATA=$G(^LAB(62.47,R6247,0))
"RTN","LA74",173,0)
 . D SETTG(R6247,0,0,DATA)
"RTN","LA74",174,0)
 . S R624701=0
"RTN","LA74",175,0)
 . F  S R624701=$O(^LAB(62.47,R6247,1,R624701)) Q:'R624701  D  ;
"RTN","LA74",176,0)
 . . S DATA=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA74",177,0)
 . . I $P(DATA,"^",5)'=1 Q  ; only send national standard
"RTN","LA74",178,0)
 . . I $P(DATA,"^",2)="L" Q  ; don't send local codes
"RTN","LA74",179,0)
 . . S CNT=CNT+1
"RTN","LA74",180,0)
 . . D SETTG(0,0,0,CNT)
"RTN","LA74",181,0)
 . . D SETTG(R6247,R624701,0,DATA)
"RTN","LA74",182,0)
 Q
"RTN","LA74",183,0)
 ;
"RTN","LA74",184,0)
SETTG(R1,R2,SUB,VAL) ;
"RTN","LA74",185,0)
 ; Adds the Pre-Transport data node
"RTN","LA74",186,0)
 ; ^XTMP("XPDI",DA,"TEMP","LA6247",R6247,0)=0 node data
"RTN","LA74",187,0)
 ;                                ,R6247,1,R624701,0)=0 node data
"RTN","LA74",188,0)
 N NMSPC,CNT,NODE
"RTN","LA74",189,0)
 S SUB=+$G(SUB,0)
"RTN","LA74",190,0)
 S NMSPC="LA6247"
"RTN","LA74",191,0)
 Q:'$D(XPDGREF)
"RTN","LA74",192,0)
 S NODE=XPDGREF
"RTN","LA74",193,0)
 S NODE=$$TRIM^XLFSTR(NODE,"R",")")
"RTN","LA74",194,0)
 S NODE=NODE_","""_NMSPC_""","_R1
"RTN","LA74",195,0)
 I 'R1 S NODE=NODE_")"
"RTN","LA74",196,0)
 I R1 I 'R2 S NODE=NODE_",0)"
"RTN","LA74",197,0)
 I R2 S NODE=NODE_",1,"_R2_","_SUB_")"
"RTN","LA74",198,0)
 S @NODE=VAL
"RTN","LA74",199,0)
 Q
"RTN","LA74",200,0)
 ;
"RTN","LA74",201,0)
 ;
"RTN","LA74",202,0)
GETLOCAL ;
"RTN","LA74",203,0)
 ; Called from Pre-Install
"RTN","LA74",204,0)
 ; Gets all Local and non-National codes from File #62.47 and saves them to TMP for restore in Post
"RTN","LA74",205,0)
 ; Also saves site's mapping of national entries to local files for antibiotics (#62.06)
"RTN","LA74",206,0)
 N CNT,DATA,DIERR,FDA,FLDIENS,LA72,MSG,R6247,R624701,X,X2
"RTN","LA74",207,0)
 ;
"RTN","LA74",208,0)
 K ^TMP("LA74-LOCAL",$J),^TMP("LA74-LOCAL-MAPPING",$J)
"RTN","LA74",209,0)
 ;
"RTN","LA74",210,0)
 S (CNT,CNT(1),R6247)=0
"RTN","LA74",211,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA74",212,0)
 . S R624701=0
"RTN","LA74",213,0)
 . F  S R624701=$O(^LAB(62.47,R6247,1,R624701)) Q:'R624701  D  ;
"RTN","LA74",214,0)
 . . S DATA=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA74",215,0)
 . . S LA72=$G(^LAB(62.47,R6247,1,R624701,2))
"RTN","LA74",216,0)
 . . ; don't process if a Local or non-national code, just save field 2.1 mapping
"RTN","LA74",217,0)
 . . I +$P(DATA,"^",5)=1 D  Q
"RTN","LA74",218,0)
 . . . I $P(LA72,"^")'=""  S ^TMP("LA74-LOCAL-MAPPING",$J,"6247",R6247,1,R624701,2.1)=$P(LA72,"^"),CNT(1)=CNT(1)+1
"RTN","LA74",219,0)
 . . S ^TMP("LA74-LOCAL",$J,"6247",R6247,0)=$G(^LAB(62.47,R6247,0))
"RTN","LA74",220,0)
 . . K DATA,DIERR
"RTN","LA74",221,0)
 . . S IENS=R624701_","_R6247_","
"RTN","LA74",222,0)
 . . D GETS^DIQ(62.4701,IENS,"*","I","DATA","MSG")
"RTN","LA74",223,0)
 . . I '$D(DATA) Q
"RTN","LA74",224,0)
 . . S FLD=.001,CNT=CNT+1
"RTN","LA74",225,0)
 . . F  S FLD=$O(DATA(62.4701,IENS,FLD)) Q:FLD=""  D  ;
"RTN","LA74",226,0)
 . . . S X=$G(DATA(62.4701,IENS,FLD,"I"))
"RTN","LA74",227,0)
 . . . I X'="" S ^TMP("LA74-LOCAL",$J,"6247",R6247,1,R624701,FLD)=X
"RTN","LA74",228,0)
 ;
"RTN","LA74",229,0)
 S ^TMP("LA74-LOCAL",$J,"6247",0)=CNT
"RTN","LA74",230,0)
 S ^TMP("LA74-LOCAL-MAPPING",$J,"6247",0)=CNT(1)
"RTN","LA74",231,0)
 ;
"RTN","LA74",232,0)
 Q
"RTN","LA74",233,0)
 ;
"RTN","LA74",234,0)
 ;
"RTN","LA74",235,0)
MES(STR,CJ,LM) ;
"RTN","LA74",236,0)
 ; Display a string using MES^XPDUTL
"RTN","LA74",237,0)
 ;  Inputs
"RTN","LA74",238,0)
 ;  STR: String to display
"RTN","LA74",239,0)
 ;   CJ: Center text?  1=yes 0=1 <dflt=1>
"RTN","LA74",240,0)
 ;   LM: Left Margin (padding)
"RTN","LA74",241,0)
 N X
"RTN","LA74",242,0)
 S STR=$G(STR)
"RTN","LA74",243,0)
 S CJ=$G(CJ,1)
"RTN","LA74",244,0)
 S LM=$G(LM)
"RTN","LA74",245,0)
 I CJ S STR=$$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," ")
"RTN","LA74",246,0)
 I 'CJ I LM S X="" S $P(X," ",LM)=" " S STR=X_STR
"RTN","LA74",247,0)
 D MES^XPDUTL(STR)
"RTN","LA74",248,0)
 Q
"RTN","LA74A")
0^76^B78776030
"RTN","LA74A",1,0)
LA74A ;DALOI/JDB - LA*5.2*74 KIDS ROUTINE ;12/27/11  09:33
"RTN","LA74A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA74A",3,0)
 ;
"RTN","LA74A",4,0)
 ;CREATE^XUSAP/4677 (pending)
"RTN","LA74A",5,0)
 ;File 101/872
"RTN","LA74A",6,0)
 ;
"RTN","LA74A",7,0)
 Q
"RTN","LA74A",8,0)
 ;
"RTN","LA74A",9,0)
POST ;
"RTN","LA74A",10,0)
 ; KIDS Post install for LA*5.2*74
"RTN","LA74A",11,0)
 N STR,LAACTN,LAX,LAMSG,X,I,Y,LAUSR,LARECS,LACNT
"RTN","LA74A",12,0)
 N LA101,LANODE,LAFDA,LAIEN,DIERR
"RTN","LA74A",13,0)
 K ^TMP("LA74-FMERR",$J)
"RTN","LA74A",14,0)
 D BMES("*** Post install started ***")
"RTN","LA74A",15,0)
 ;
"RTN","LA74A",16,0)
 ; Is subfile #200.07 available
"RTN","LA74A",17,0)
 K LAMSG,LAACTN
"RTN","LA74A",18,0)
 S LAX=$$ROOT^DILFD(200.07,",1,",1,"LAMSG")
"RTN","LA74A",19,0)
 I LAX="" D  ;
"RTN","LA74A",20,0)
 . D BMES("Could not update special Lab Users (File #200.07 not defined).")
"RTN","LA74A",21,0)
 ; Set File #200 USER CLASS to APP PROXY for these users
"RTN","LA74A",22,0)
 I LAX'="" D  ;
"RTN","LA74A",23,0)
 . D BMES("USER CLASS update for Lab application proxy user:")
"RTN","LA74A",24,0)
 . F LAUSR="LRLAB,HL","LRLAB,POC","LRLAB,TASKMAN" D  ;
"RTN","LA74A",25,0)
 . . S X=$$APROXY(LAUSR)
"RTN","LA74A",26,0)
 . . K STR
"RTN","LA74A",27,0)
 . . S STR="    User "_LAUSR_" "_$S(X>0:"okay",1:" ** FAILED **")
"RTN","LA74A",28,0)
 . . I X=-1 S STR=STR_" (not in File #200)"
"RTN","LA74A",29,0)
 . . I X=-2 S STR=STR_" (db update failed)."
"RTN","LA74A",30,0)
 . . S STR=STR_"."
"RTN","LA74A",31,0)
 . . I $D(STR) D MES^XPDUTL($$CJ^XLFSTR(STR,$G(IOM,80)))
"RTN","LA74A",32,0)
 . ;
"RTN","LA74A",33,0)
 ;
"RTN","LA74A",34,0)
 ; Insert #62.47 records from transport global
"RTN","LA74A",35,0)
 S LAX=+$G(@XPDGREF@("LA6247",0))
"RTN","LA74A",36,0)
 S LARECS(1)=LAX ;national
"RTN","LA74A",37,0)
 S LARECS(2)=+$G(^TMP("LA74-LOCAL",$J,"6247",0)) ; local
"RTN","LA74A",38,0)
 S LARECS(3)=+$G(^TMP("LA74-LOCAL-MAPPING",$J,"6247",0)) ; local mappings
"RTN","LA74A",39,0)
 S LACNT=0
"RTN","LA74A",40,0)
 S XPDIDTOT=LARECS(1)+LARECS(2)+LARECS(3)
"RTN","LA74A",41,0)
 D BMES("Adding "_LAX_" record"_$S(LAX=1:"",1:"s")_" to File #62.47")
"RTN","LA74A",42,0)
 D POP6247
"RTN","LA74A",43,0)
 ;
"RTN","LA74A",44,0)
 ; Reload any local entries for File #62.47
"RTN","LA74A",45,0)
 ; Is this the patch's development account?
"RTN","LA74A",46,0)
 S LAACTN(2)=($G(^%ZOSF("VOL"))="MHCVSS")
"RTN","LA74A",47,0)
 I 1 D  ;
"RTN","LA74A",48,0)
 . S LAX=+$G(^TMP("LA74-LOCAL",$J,"6247",0))
"RTN","LA74A",49,0)
 . D BMES("Restoring "_LAX_" local code"_$S(LAX=1:"",1:"s")_" to #62.47")
"RTN","LA74A",50,0)
 . D SETLOCAL
"RTN","LA74A",51,0)
 K LAACTN(2)
"RTN","LA74A",52,0)
 ;
"RTN","LA74A",53,0)
 ; Check and add write identifier to 2nd piece of file header.
"RTN","LA74A",54,0)
 S LAX=$P(^LAHM(62.49,0),"^",2)
"RTN","LA74A",55,0)
 I LAX'="",LAX'["I" D
"RTN","LA74A",56,0)
 . S LAX=LAX_"I"
"RTN","LA74A",57,0)
 . S $P(^LAHM(62.49,0),"^",2)=LAX
"RTN","LA74A",58,0)
 . D BMES("Setting write identifier to LA7 MESSAGE QUEUE (#62.49) file header")
"RTN","LA74A",59,0)
 ;
"RTN","LA74A",60,0)
 ; Re-index #62.49 field #5 "C" xref.
"RTN","LA74A",61,0)
 D QC6249
"RTN","LA74A",62,0)
 ;
"RTN","LA74A",63,0)
 ; Check LA7V protocols and set commit and app ACKs to AL
"RTN","LA74A",64,0)
 S LANODE="^ORD(101,""B"",""LA7V "")"
"RTN","LA74A",65,0)
 F  S LANODE=$Q(@LANODE) Q:LANODE=""  Q:$QS(LANODE,2)'="B"  Q:$QS(LANODE,3)'?1"LA7V "0.E  D  ;
"RTN","LA74A",66,0)
 . S LAX=$QS(LANODE,3)
"RTN","LA74A",67,0)
 . S X=$P(LAX," ",2,$L(LAX," ")-1)
"RTN","LA74A",68,0)
 . I "^Order to^Results Reporting to^"'[("^"_X_"^") Q
"RTN","LA74A",69,0)
 . S LA101=$QS(LANODE,4)
"RTN","LA74A",70,0)
 . Q:'LA101
"RTN","LA74A",71,0)
 . K LAFDA,LAIEN,DIERR,LAMSG
"RTN","LA74A",72,0)
 . S LAIEN=LA101_","
"RTN","LA74A",73,0)
 . S LAFDA(1,101,LAIEN,770.8)="AL"
"RTN","LA74A",74,0)
 . S LAFDA(1,101,LAIEN,770.9)="AL"
"RTN","LA74A",75,0)
 . D FILE^DIE("E","LAFDA(1)","LAMSG")
"RTN","LA74A",76,0)
 ;
"RTN","LA74A",77,0)
 ; Check "LA7V Receive" protocols and set commit ACKs to AL
"RTN","LA74A",78,0)
 S LANODE="^ORD(101,""B"",""LA7V Receive"")"
"RTN","LA74A",79,0)
 F  S LANODE=$Q(@LANODE) Q:LANODE=""  Q:$QS(LANODE,2)'="B"  Q:$QS(LANODE,3)'?1"LA7V Receive"0.E  D  ;
"RTN","LA74A",80,0)
 . S LAX=$QS(LANODE,3)
"RTN","LA74A",81,0)
 . S X=$P(LAX," ",2,$L(LAX," ")-1)
"RTN","LA74A",82,0)
 . I "^Receive Order from^Receive Results from^"'[("^"_X_"^") Q
"RTN","LA74A",83,0)
 . S LA101=$QS(LANODE,4)
"RTN","LA74A",84,0)
 . Q:'LA101
"RTN","LA74A",85,0)
 . K LAFDA,LAIEN,DIERR,LAMSG
"RTN","LA74A",86,0)
 . S LAIEN=LA101_","
"RTN","LA74A",87,0)
 . S LAFDA(1,101,LAIEN,770.8)="AL"
"RTN","LA74A",88,0)
 . D FILE^DIE("E","LAFDA(1)","LAMSG")
"RTN","LA74A",89,0)
 ;
"RTN","LA74A",90,0)
 D BMES("*** Post install completed ***")
"RTN","LA74A",91,0)
 D BMES("Sending install completion alert to mail group G.LMI")
"RTN","LA74A",92,0)
 S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LA74A",93,0)
 D ALERT^LA74(STR)
"RTN","LA74A",94,0)
 K ^TMP("LA74-LOCAL",$J),^TMP("LA74-LOCAL-MAPPING",$J)
"RTN","LA74A",95,0)
 Q
"RTN","LA74A",96,0)
 ;
"RTN","LA74A",97,0)
 ;
"RTN","LA74A",98,0)
POP6247 ;
"RTN","LA74A",99,0)
 ; Populate File #62.47 from Transport Global
"RTN","LA74A",100,0)
 N NODE,R6247,R624701,R1,R2,SUB,IEN,IENS,LAFDA,DIERR,MSG
"RTN","LA74A",101,0)
 N DATA,ERRCNT,LADOT,X,LRFPRIV,LAFMERR
"RTN","LA74A",102,0)
 K ^TMP("LA74-FMERR",$J)
"RTN","LA74A",103,0)
 S LRFPRIV=1 ;File #62.47 override variable
"RTN","LA74A",104,0)
 S LADOT=$H
"RTN","LA74A",105,0)
 ;S CNT=+$G(@XPDGREF@("LA6247",0))
"RTN","LA74A",106,0)
 S ERRCNT=0
"RTN","LA74A",107,0)
 S NODE=$$TRIM^XLFSTR(XPDGREF,"R",")")
"RTN","LA74A",108,0)
 S NODE=NODE_",""LA6247"",1)"
"RTN","LA74A",109,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,4)'="LA6247"  D  ;
"RTN","LA74A",110,0)
 . S LACNT=LACNT+1
"RTN","LA74A",111,0)
 . I LACNT#100=0 D UPDATE^XPDID(LACNT)
"RTN","LA74A",112,0)
 . D PROGRESS^LA74(.LADOT)
"RTN","LA74A",113,0)
 . S R1=$QS(NODE,5)
"RTN","LA74A",114,0)
 . S R2=$QS(NODE,7)
"RTN","LA74A",115,0)
 . S SUB=$QS(NODE,8)
"RTN","LA74A",116,0)
 . S DATA=@NODE
"RTN","LA74A",117,0)
 . I 'R2 D  ; Add top level data
"RTN","LA74A",118,0)
 . . K LAFDA,MSG,IENS,R6247,R624701,DIERR
"RTN","LA74A",119,0)
 . . S IENS(1)=R1
"RTN","LA74A",120,0)
 . . S LAFDA(1,62.47,"+1,",.01)=$P(DATA,"^",1)
"RTN","LA74A",121,0)
 . . S LAFDA(1,62.47,"+1,",.02)=$P(DATA,"^",2)
"RTN","LA74A",122,0)
 . . S LAFDA(1,62.47,"+1,",.03)=$P(DATA,"^",3)
"RTN","LA74A",123,0)
 . . S LAFDA(1,62.47,"+1,",.04)=$P(DATA,"^",4)
"RTN","LA74A",124,0)
 . . D UPDATE^DIE("S","LAFDA(1)","IENS","MSG")
"RTN","LA74A",125,0)
 . . S R6247=IENS(1)
"RTN","LA74A",126,0)
 . . I $D(MSG) D  ;
"RTN","LA74A",127,0)
 . . . K LAFMERR
"RTN","LA74A",128,0)
 . . . D MSG^DIALOG("AEHM",.LAFMERR,"","","MSG(""DIERR"")")
"RTN","LA74A",129,0)
 . . . D FMERR(.LAFMERR)
"RTN","LA74A",130,0)
 . . . S ERRCNT=$O(^TMP("LA74-FMERR",$J,"A"),-1)+1
"RTN","LA74A",131,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,0)=R1_"^"_R2_"^"_62.47
"RTN","LA74A",132,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,1,.01)=$P(DATA,"^",1)
"RTN","LA74A",133,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"DIERR")=MSG("DIERR")
"RTN","LA74A",134,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"LAFDA")=LAFDA(1,62.47,"+1")
"RTN","LA74A",135,0)
 . . ;
"RTN","LA74A",136,0)
 . ;
"RTN","LA74A",137,0)
 . I R2 I SUB=0 D  ; Add second level data
"RTN","LA74A",138,0)
 . . K LAFDA,MSG,IEN,IENS,R624701,DIERR
"RTN","LA74A",139,0)
 . . S IENS(1)=R2
"RTN","LA74A",140,0)
 . . S IEN="+1,"_R6247_","
"RTN","LA74A",141,0)
 . . S LAFDA(1,62.4701,IEN,.01)=$P(DATA,"^",1)
"RTN","LA74A",142,0)
 . . S LAFDA(1,62.4701,IEN,.02)=$P(DATA,"^",2)
"RTN","LA74A",143,0)
 . . S LAFDA(1,62.4701,IEN,.03)=$P(DATA,"^",3)
"RTN","LA74A",144,0)
 . . S LAFDA(1,62.4701,IEN,.04)=$P(DATA,"^",4)
"RTN","LA74A",145,0)
 . . S LAFDA(1,62.4701,IEN,.05)=$P(DATA,"^",5)
"RTN","LA74A",146,0)
 . . D UPDATE^DIE("S","LAFDA(1)","IENS","MSG")
"RTN","LA74A",147,0)
 . . S R624701=IENS(1)
"RTN","LA74A",148,0)
 . . I $D(MSG) D  ;
"RTN","LA74A",149,0)
 . . . K LAFMERR
"RTN","LA74A",150,0)
 . . . D MSG^DIALOG("AEHM",.LAFMERR,"","","MSG(""DIERR"")")
"RTN","LA74A",151,0)
 . . . D FMERR(.LAFMERR)
"RTN","LA74A",152,0)
 . . . S ERRCNT=$O(^TMP("LA74-FMERR",$J,"A"),-1)+1
"RTN","LA74A",153,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,0)=R1_"^"_R2_"^"_62.4701
"RTN","LA74A",154,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,1,.01)=$P(DATA,"^",1)
"RTN","LA74A",155,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"DIERR")=MSG("DIERR")
"RTN","LA74A",156,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"LAFDA")=LAFDA(1,62.4701,IEN)
"RTN","LA74A",157,0)
 . . ;
"RTN","LA74A",158,0)
 . ;
"RTN","LA74A",159,0)
 . I R2 I $G(R624701) I SUB>2 D  ;
"RTN","LA74A",160,0)
 . . K LAFDA,MSG,IEN,IENS,DIERR
"RTN","LA74A",161,0)
 . . S IEN=R624701_","_R6247_","
"RTN","LA74A",162,0)
 . . S X=DATA
"RTN","LA74A",163,0)
 . . I SUB=2.1 D  ;
"RTN","LA74A",164,0)
 . . . S X=$P(DATA,";",2)
"RTN","LA74A",165,0)
 . . . I $P(DATA,";",1)="61.2" S X="ET."_X
"RTN","LA74A",166,0)
 . . . I $P(DATA,";",1)="62.06" S X="AB."_X
"RTN","LA74A",167,0)
 . . I X'="" S LAFDA(1,62.4701,IEN,SUB)=X
"RTN","LA74A",168,0)
 . . D FILE^DIE("ES","LAFDA(1)","MSG")
"RTN","LA74A",169,0)
 . . I $D(MSG) D  ;
"RTN","LA74A",170,0)
 . . . K LAFMERR
"RTN","LA74A",171,0)
 . . . D MSG^DIALOG("AEHM",.LAFMERR,"","","MSG(""DIERR"")")
"RTN","LA74A",172,0)
 . . . D FMERR(.LAFMERR)
"RTN","LA74A",173,0)
 . . . S ERRCNT=$O(^TMP("LA74-FMERR",$J,"A"),-1)+1
"RTN","LA74A",174,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,0)=R1_"^"_R2_"^"_62.4701
"RTN","LA74A",175,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,1,SUB)=$P(DATA,"^",1)
"RTN","LA74A",176,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"DIERR")=MSG("DIERR")
"RTN","LA74A",177,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"LAFDA")=LAFDA(1,62.4701,IEN)
"RTN","LA74A",178,0)
 . . ;
"RTN","LA74A",179,0)
 . ;
"RTN","LA74A",180,0)
 Q
"RTN","LA74A",181,0)
 ;
"RTN","LA74A",182,0)
 ;
"RTN","LA74A",183,0)
SETLOCAL ;
"RTN","LA74A",184,0)
 ; Insert any local codes into File #62.47
"RTN","LA74A",185,0)
 N R6247,R624701,FLD,IEN,IENS,MSG,X,LAFDA,LA7IENS,LRFPRIV,ERRCNT,DIERR
"RTN","LA74A",186,0)
 N LAFMERR
"RTN","LA74A",187,0)
 K ^TMP("LA74-FMERR",$J)
"RTN","LA74A",188,0)
 S LRFPRIV=1 ;File #62.47 override variable
"RTN","LA74A",189,0)
 S (ERRCNT,R6247)=0
"RTN","LA74A",190,0)
 F  S R6247=$O(^TMP("LA74-LOCAL",$J,"6247",R6247)) Q:'R6247  D  ;
"RTN","LA74A",191,0)
 . S R624701=0
"RTN","LA74A",192,0)
 . F  S R624701=$O(^TMP("LA74-LOCAL",$J,"6247",R6247,1,R624701)) Q:'R624701  D  ;
"RTN","LA74A",193,0)
 . . S LACNT=$G(LACNT)+1
"RTN","LA74A",194,0)
 . . I LACNT#100=0 D UPDATE^XPDID(LACNT)
"RTN","LA74A",195,0)
 . . K IENS,IEN,LAFDA
"RTN","LA74A",196,0)
 . . S FLD=.001,IEN="+1,"_R6247_","
"RTN","LA74A",197,0)
 . . F  S FLD=$O(^TMP("LA74-LOCAL",$J,"6247",R6247,1,R624701,FLD)) Q:FLD=""  D  ;
"RTN","LA74A",198,0)
 . . . S X=^TMP("LA74-LOCAL",$J,"6247",R6247,1,R624701,FLD)
"RTN","LA74A",199,0)
 . . . I X'="" S LAFDA(1,62.4701,IEN,FLD)=X
"RTN","LA74A",200,0)
 . . Q:'$D(LAFDA)
"RTN","LA74A",201,0)
 . . K MSG,DIERR
"RTN","LA74A",202,0)
 . . D UPDATE^DIE("S","LAFDA(1)","IENS","MSG")
"RTN","LA74A",203,0)
 . . I $D(MSG) D  ;
"RTN","LA74A",204,0)
 . . . K LAFMERR
"RTN","LA74A",205,0)
 . . . D MSG^DIALOG("AEHM",.LAFMERR,"","","MSG(""DIERR"")")
"RTN","LA74A",206,0)
 . . . D FMERR(.LAFMERR)
"RTN","LA74A",207,0)
 . . . S ERRCNT=$O(^TMP("LA74-FMERR",$J,"A"),-1)+1
"RTN","LA74A",208,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,0)=R6247_"^"_R624701_"^"_62.4701
"RTN","LA74A",209,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,1,.01)=$G(LAFDA(1,62.4701,IEN,.01))
"RTN","LA74A",210,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"DIERR")=MSG("DIERR")
"RTN","LA74A",211,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"LAFDA")=LAFDA(1,62.4701,IEN)
"RTN","LA74A",212,0)
 ;
"RTN","LA74A",213,0)
 ; Restore local mappings to national terms
"RTN","LA74A",214,0)
 S (ERRCNT,R6247)=0
"RTN","LA74A",215,0)
 F  S R6247=$O(^TMP("LA74-LOCAL-MAPPING",$J,"6247",R6247)) Q:'R6247  D  ;
"RTN","LA74A",216,0)
 . S R624701=0
"RTN","LA74A",217,0)
 . F  S R624701=$O(^TMP("LA74-LOCAL-MAPPING",$J,"6247",R6247,1,R624701)) Q:'R624701  D
"RTN","LA74A",218,0)
 . . S LACNT=$G(LACNT)+1
"RTN","LA74A",219,0)
 . . I LACNT#100=0 D UPDATE^XPDID(LACNT)
"RTN","LA74A",220,0)
 . . K DIERR,LAFDA,IENS,IEN,MSG
"RTN","LA74A",221,0)
 . . S LA7IENS=R624701_","_R6247_","
"RTN","LA74A",222,0)
 . . S LAFDA(1,62.4701,LA7IENS,2.1)=^TMP("LA74-LOCAL-MAPPING",$J,"6247",R6247,1,R624701,2.1)
"RTN","LA74A",223,0)
 . . D FILE^DIE("","LAFDA(1)","MSG")
"RTN","LA74A",224,0)
 . . I $D(MSG) D  ;
"RTN","LA74A",225,0)
 . . . K LAFMERR
"RTN","LA74A",226,0)
 . . . D MSG^DIALOG("AEHM",.LAFMERR,"","","MSG(""DIERR"")")
"RTN","LA74A",227,0)
 . . . D FMERR(.LAFMERR)
"RTN","LA74A",228,0)
 . . . S ERRCNT=$O(^TMP("LA74-FMERR",$J,"A"),-1)+1
"RTN","LA74A",229,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,0)=R6247_"^"_R624701_"^"_62.4701
"RTN","LA74A",230,0)
 . . . S ^TMP("LA74-FMERR",$J,ERRCNT,1,.01)=$G(LAFDA(1,62.4701,LA7IENS,2.1))
"RTN","LA74A",231,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"DIERR")=MSG("DIERR")
"RTN","LA74A",232,0)
 . . . M ^TMP("LA74-FMERR",$J,ERRCNT,"LAFDA")=LAFDA(1,62.4701,LA7IENS)
"RTN","LA74A",233,0)
 . . D CLEAN^DILF
"RTN","LA74A",234,0)
 ;
"RTN","LA74A",235,0)
 Q
"RTN","LA74A",236,0)
 ;
"RTN","LA74A",237,0)
 ;
"RTN","LA74A",238,0)
APROXY(NAME) ;
"RTN","LA74A",239,0)
 ; re: XU*8*361 and XM*8*36
"RTN","LA74A",240,0)
 ; Sets File #200 entry's field USER CLASS to "APPLICATION PROXY"
"RTN","LA74A",241,0)
 ; File #200 update approved by Wally Fort (email 03/27/2006)
"RTN","LA74A",242,0)
 ; CREATE^XUSAP/4677 (pending)
"RTN","LA74A",243,0)
 N IEN,LAIENS,LAFDA,DIC,IX,LAMSG,SUB,XUNOTRIG,X,DIERR
"RTN","LA74A",244,0)
 S IEN=$$FIND1^DIC(200,,"M",NAME)
"RTN","LA74A",245,0)
 I 'IEN D  Q IEN
"RTN","LA74A",246,0)
 . S IEN=$$CREATE^XUSAP(NAME,"@",)
"RTN","LA74A",247,0)
 K DIERR
"RTN","LA74A",248,0)
 S SUB="?+1,"_IEN_","
"RTN","LA74A",249,0)
 S LAFDA(200.07,SUB,.01)="APPLICATION PROXY"
"RTN","LA74A",250,0)
 S LAFDA(200.07,SUB,2)=1
"RTN","LA74A",251,0)
 D UPDATE^DIE("E","LAFDA","LAIENS","LAMSG")
"RTN","LA74A",252,0)
 I $D(LAMSG) Q -2
"RTN","LA74A",253,0)
 Q IEN
"RTN","LA74A",254,0)
 ;
"RTN","LA74A",255,0)
 ;
"RTN","LA74A",256,0)
BMES(STR) ;
"RTN","LA74A",257,0)
 ; Convenience method
"RTN","LA74A",258,0)
 D BMES^LA74(STR)
"RTN","LA74A",259,0)
 Q
"RTN","LA74A",260,0)
 ;
"RTN","LA74A",261,0)
 ;
"RTN","LA74A",262,0)
FMERR(IN) ;
"RTN","LA74A",263,0)
 ; Goes thru an MSG^DIALOG output array for display
"RTN","LA74A",264,0)
 ; Inputs
"RTN","LA74A",265,0)
 ;   IN <byref>  The output array created by MSG^DIALOG
"RTN","LA74A",266,0)
 ;
"RTN","LA74A",267,0)
 N I
"RTN","LA74A",268,0)
 S I=0
"RTN","LA74A",269,0)
 F  S I=$O(IN(I)) Q:'I  D  ;
"RTN","LA74A",270,0)
 . D BMES(IN(I))
"RTN","LA74A",271,0)
 Q
"RTN","LA74A",272,0)
 ;
"RTN","LA74A",273,0)
 ;
"RTN","LA74A",274,0)
QC6249 ; Queue reindexing of "C" cross-refernce of file #62.49
"RTN","LA74A",275,0)
 ;
"RTN","LA74A",276,0)
 N DIK,DA,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA74A",277,0)
 ;
"RTN","LA74A",278,0)
 K ^LAHM(62.49,"C")
"RTN","LA74A",279,0)
 S DIK="^LAHM(62.49,",DIK(1)="5^C"
"RTN","LA74A",280,0)
 S ZTDTH=$H,ZTIO="",ZTDESC="Re-index C x-ref of file #62.49"
"RTN","LA74A",281,0)
 S ZTSAVE("DI*")="",ZTRTN="ENALL^DIK"
"RTN","LA74A",282,0)
 D ^%ZTLOAD
"RTN","LA74A",283,0)
 ;
"RTN","LA74A",284,0)
 Q
"RTN","LA7ADL")
0^100^B38927932
"RTN","LA7ADL",1,0)
LA7ADL ;DALOI/JMC - Automatic Download of Test Orders ;11/23/10  12:04
"RTN","LA7ADL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**17,25,23,57,66,74**;Sep 27, 1994;Build 229
"RTN","LA7ADL",3,0)
 ;
"RTN","LA7ADL",4,0)
 ; This routine will monitor the ^LA("ADL") node to check for accessions which are to have test orders automatically
"RTN","LA7ADL",5,0)
 ; downloaded to another computer system. All entries in the auto instrument file which are flagged for automatic downloading
"RTN","LA7ADL",6,0)
 ; will be checked to see if they contain any tests on the accession. If tests are found then the appropiate download message
"RTN","LA7ADL",7,0)
 ; is constructed and sent.
"RTN","LA7ADL",8,0)
 ;
"RTN","LA7ADL",9,0)
 ;
"RTN","LA7ADL",10,0)
EN(LA7UID) ; Set flag to check accession for downloading, start background job if needed.
"RTN","LA7ADL",11,0)
 ; Called by LR7OMERG, LRCONJAM, LRTSTSET, LRWLST1.
"RTN","LA7ADL",12,0)
 ;
"RTN","LA7ADL",13,0)
 ; No UID passed to routine.
"RTN","LA7ADL",14,0)
 I $G(LA7UID)="" Q
"RTN","LA7ADL",15,0)
 ;
"RTN","LA7ADL",16,0)
 ; No instrument flagged for auto downloading.
"RTN","LA7ADL",17,0)
 I '$D(^LAB(62.4,"AE")) Q
"RTN","LA7ADL",18,0)
 ;
"RTN","LA7ADL",19,0)
 ; Quit if "Don't Start/Collect" flag set.
"RTN","LA7ADL",20,0)
 I +$G(^LA("ADL","STOP"),0)=3 Q
"RTN","LA7ADL",21,0)
 ;
"RTN","LA7ADL",22,0)
 ; Lock node in case already downloading this accession, wait until downloading finished.
"RTN","LA7ADL",23,0)
 L +^LA("ADL","Q",LA7UID):60
"RTN","LA7ADL",24,0)
 ;
"RTN","LA7ADL",25,0)
 ; Set flag to check this accession for auto downloading.
"RTN","LA7ADL",26,0)
 S ^LA("ADL","Q",LA7UID)=""
"RTN","LA7ADL",27,0)
 ;
"RTN","LA7ADL",28,0)
 ; Release lock.
"RTN","LA7ADL",29,0)
 L -^LA("ADL","Q",LA7UID)
"RTN","LA7ADL",30,0)
 ;
"RTN","LA7ADL",31,0)
 ; Quit if "Don't Start" flag set.
"RTN","LA7ADL",32,0)
 I +$G(^LA("ADL","STOP"),0)=2 Q
"RTN","LA7ADL",33,0)
 ;
"RTN","LA7ADL",34,0)
 ; Task background job to run.
"RTN","LA7ADL",35,0)
 D CHKTSK
"RTN","LA7ADL",36,0)
 ;
"RTN","LA7ADL",37,0)
 ; Unlock node.
"RTN","LA7ADL",38,0)
 L -^LA("ADL",0)
"RTN","LA7ADL",39,0)
 ;
"RTN","LA7ADL",40,0)
 Q
"RTN","LA7ADL",41,0)
 ;
"RTN","LA7ADL",42,0)
 ;
"RTN","LA7ADL",43,0)
DQ ; Entry point from Taskman.
"RTN","LA7ADL",44,0)
 ;
"RTN","LA7ADL",45,0)
 ; Wait for a little while in case another job checking for background job has lock.
"RTN","LA7ADL",46,0)
 L +^LA("ADL",0):10
"RTN","LA7ADL",47,0)
 ; Another process has lock, only want one at a time.
"RTN","LA7ADL",48,0)
 I '$T S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LA7ADL",49,0)
 ;
"RTN","LA7ADL",50,0)
 ; No instrument flagged for auto downloading.
"RTN","LA7ADL",51,0)
 I '$D(^LAB(62.4,"AE")) D EXIT Q
"RTN","LA7ADL",52,0)
 ;
"RTN","LA7ADL",53,0)
 ; Quit if "Don't Start/Collect" flags set.
"RTN","LA7ADL",54,0)
 I +$G(^LA("ADL","STOP"),0)>1 Q
"RTN","LA7ADL",55,0)
 ;
"RTN","LA7ADL",56,0)
 ; Update XTMP entry to let auto download know we're running for this process
"RTN","LA7ADL",57,0)
 ;  and build table of tests to check for downloading}
"RTN","LA7ADL",58,0)
 D XTMP,BUILD
"RTN","LA7ADL",59,0)
 ;
"RTN","LA7ADL",60,0)
 F  D UID Q:TOUT>60
"RTN","LA7ADL",61,0)
 D EXIT
"RTN","LA7ADL",62,0)
 Q
"RTN","LA7ADL",63,0)
 ;
"RTN","LA7ADL",64,0)
 ;
"RTN","LA7ADL",65,0)
UID ; Start loop to monitor for accessions to download.
"RTN","LA7ADL",66,0)
 ;
"RTN","LA7ADL",67,0)
 N LA761,LRCOLLECT,LRDPF
"RTN","LA7ADL",68,0)
 ;
"RTN","LA7ADL",69,0)
 S LA7UID="",(TOUT,ZTSTOP)=0
"RTN","LA7ADL",70,0)
 ;
"RTN","LA7ADL",71,0)
 ; Flag set to "Rebuild".
"RTN","LA7ADL",72,0)
 I +$G(^LA("ADL","STOP"))=1,'ZTSTOP D BUILD
"RTN","LA7ADL",73,0)
 ;
"RTN","LA7ADL",74,0)
 F  S LA7UID=$O(^LA("ADL","Q",LA7UID)) Q:LA7UID=""!(ZTSTOP)!(TOUT)  D
"RTN","LA7ADL",75,0)
 . I +$G(^LA("ADL","STOP"))>0 S TOUT=61 Q
"RTN","LA7ADL",76,0)
 . I $$S^%ZTLOAD("Processing Lab UID "_LA7UID) S ZTSTOP=1,TOUT=61 Q
"RTN","LA7ADL",77,0)
 . ; Lock this UID, synch setting/deleting when another job is attempting to set node.
"RTN","LA7ADL",78,0)
 . D LOCK^DILF("^LA(""ADL"",""Q"",LA7UID)")
"RTN","LA7ADL",79,0)
 . ; Unable to get lock, go on to next UID, check again on next go around.
"RTN","LA7ADL",80,0)
 . I '$T Q
"RTN","LA7ADL",81,0)
 . ; Get accession info from ^LRO(68,"C").
"RTN","LA7ADL",82,0)
 . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7ADL",83,0)
 . ; Quit - UID does not match.
"RTN","LA7ADL",84,0)
 . I $QS(X,3)'=LA7UID D CLEANUP Q
"RTN","LA7ADL",85,0)
 . ;
"RTN","LA7ADL",86,0)
 . ; Setup accession variables for auto downloading.
"RTN","LA7ADL",87,0)
 . S LRAA=+$QS(X,4),LRAD=+$QS(X,5),LRAN=+$QS(X,6)
"RTN","LA7ADL",88,0)
 . S LRDPF=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",2)
"RTN","LA7ADL",89,0)
 . S LRCOLLECT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",3)
"RTN","LA7ADL",90,0)
 . S X=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,0)),LA761=0
"RTN","LA7ADL",91,0)
 . I X>0 S LA761=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,X,0)),"^")
"RTN","LA7ADL",92,0)
 . ;
"RTN","LA7ADL",93,0)
 . D BLDTST
"RTN","LA7ADL",94,0)
 . S LA7INST=0
"RTN","LA7ADL",95,0)
 . F  S LA7INST=$O(LA7AUTO(LA7INST)) Q:'LA7INST  D
"RTN","LA7ADL",96,0)
 . . D CHKTEST
"RTN","LA7ADL",97,0)
 . . ; No tests on instrument list for this accession.
"RTN","LA7ADL",98,0)
 . . I '$D(LA7ACC) Q
"RTN","LA7ADL",99,0)
 . . S LRINST=LA7INST,LRAUTO=LA7AUTO(LA7INST)
"RTN","LA7ADL",100,0)
 . . N LA7UID,LRDPF
"RTN","LA7ADL",101,0)
 . . ; File build (entry^routine) from fields #93 and #94 in file #62.4.
"RTN","LA7ADL",102,0)
 . . D @$P(LA7AUTO(LA7INST,9),"^",3,4)
"RTN","LA7ADL",103,0)
 . D CLEANUP,XTMP
"RTN","LA7ADL",104,0)
 ;
"RTN","LA7ADL",105,0)
 F  D  Q:$O(^LA("ADL","Q",""))'=""  Q:TOUT>60
"RTN","LA7ADL",106,0)
 . I $G(^LA("ADL","STOP"))>1 S TOUT=61 Q
"RTN","LA7ADL",107,0)
 . ; Task has been requested to stop.
"RTN","LA7ADL",108,0)
 . I $$S^%ZTLOAD("Idle - waiting for new accessions to process") S TOUT=61,ZTSTOP=1 Q
"RTN","LA7ADL",109,0)
 . S TOUT=TOUT+1 H 5 D XTMP
"RTN","LA7ADL",110,0)
 ;
"RTN","LA7ADL",111,0)
 Q
"RTN","LA7ADL",112,0)
 ;
"RTN","LA7ADL",113,0)
 ;
"RTN","LA7ADL",114,0)
BLDTST ; Build array of tests on accession to check for downloading
"RTN","LA7ADL",115,0)
 ;
"RTN","LA7ADL",116,0)
 N X,LA760,LA7PCNT
"RTN","LA7ADL",117,0)
 ;
"RTN","LA7ADL",118,0)
 K LA7TREE
"RTN","LA7ADL",119,0)
 S LA760=0
"RTN","LA7ADL",120,0)
 F  S LA760=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LA760)) Q:'LA760  D
"RTN","LA7ADL",121,0)
 . ; Quit if test has been removed from accession.
"RTN","LA7ADL",122,0)
 . S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LA760,0),0) Q:'X
"RTN","LA7ADL",123,0)
 . ; If test completed (#4, COMPLETE DATE entered), don't download.
"RTN","LA7ADL",124,0)
 . I $P(X,"^",5) Q
"RTN","LA7ADL",125,0)
 . ; Build array of atomic tests on accession with urgency.
"RTN","LA7ADL",126,0)
 . S LA7PCNT=0
"RTN","LA7ADL",127,0)
 . D UNWIND^LA7ADL1(LA760,$P(X,"^",2),LA760)
"RTN","LA7ADL",128,0)
 ;
"RTN","LA7ADL",129,0)
 Q
"RTN","LA7ADL",130,0)
 ;
"RTN","LA7ADL",131,0)
 ;
"RTN","LA7ADL",132,0)
CHKTEST ; Check tests to determine if they should build in message.
"RTN","LA7ADL",133,0)
 ; Array LA7ACC returned with tests to send in message
"RTN","LA7ADL",134,0)
 ;
"RTN","LA7ADL",135,0)
 N LA760,LA76205,LA768,LA7I
"RTN","LA7ADL",136,0)
 ;
"RTN","LA7ADL",137,0)
 K LA7ACC
"RTN","LA7ADL",138,0)
 ;
"RTN","LA7ADL",139,0)
 ; Quit - specimen uncollected & don't download uncollected flag set.
"RTN","LA7ADL",140,0)
 ;        controls exempted.
"RTN","LA7ADL",141,0)
 ;        check not performed if variables not defined - using download a load list process
"RTN","LA7ADL",142,0)
 I $D(LRDPF),$D(LRCOLLECT),+LRDPF'=62.3,'LRCOLLECT,'$P(^TMP("LA7-INST",$J,LA7INST),"^") Q
"RTN","LA7ADL",143,0)
 ;
"RTN","LA7ADL",144,0)
 S LA760=0
"RTN","LA7ADL",145,0)
 F  S LA760=$O(LA7TREE(LA760)) Q:'LA760  D
"RTN","LA7ADL",146,0)
 . I '$D(^TMP("LA7-INST",$J,LA7INST,LA760)) Q
"RTN","LA7ADL",147,0)
 . S LA7I=0
"RTN","LA7ADL",148,0)
 . F  S LA7I=$O(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I)) Q:'LA7I  D
"RTN","LA7ADL",149,0)
 . . S LA76205=+$P(LA7TREE(LA760),"^")
"RTN","LA7ADL",150,0)
 . . D CHKMASK
"RTN","LA7ADL",151,0)
 ;
"RTN","LA7ADL",152,0)
 Q
"RTN","LA7ADL",153,0)
 ;
"RTN","LA7ADL",154,0)
CHKMASK ; Check pattern mask for tests that match download pattern mask
"RTN","LA7ADL",155,0)
 ;
"RTN","LA7ADL",156,0)
 ; Any accession area, specimen, urgency
"RTN","LA7ADL",157,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,0,0,0)) D ADD Q
"RTN","LA7ADL",158,0)
 ;
"RTN","LA7ADL",159,0)
 ; Specific accession area, any specimen/urgency
"RTN","LA7ADL",160,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,LRAA,0,0)) D ADD Q
"RTN","LA7ADL",161,0)
 ;
"RTN","LA7ADL",162,0)
 ; Specific specimen, any accession area/urgency
"RTN","LA7ADL",163,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,0,LA761,0)) D ADD Q
"RTN","LA7ADL",164,0)
 ;
"RTN","LA7ADL",165,0)
 ; Specific urgency, any accession area/specimen
"RTN","LA7ADL",166,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,0,0,LA76205)) D ADD Q
"RTN","LA7ADL",167,0)
 ;
"RTN","LA7ADL",168,0)
 ; Specific accession/specimen, any urgency
"RTN","LA7ADL",169,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,LRAA,LA761,0)) D ADD Q
"RTN","LA7ADL",170,0)
 ;
"RTN","LA7ADL",171,0)
 ; Specific accession/urgency, any specimen
"RTN","LA7ADL",172,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,LRAA,0,LA76205)) D ADD Q
"RTN","LA7ADL",173,0)
 ;
"RTN","LA7ADL",174,0)
 ; Specific specimen/urgency, any accession area
"RTN","LA7ADL",175,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,0,LA761,LA76205)) D ADD Q
"RTN","LA7ADL",176,0)
 ;
"RTN","LA7ADL",177,0)
 ; Specific accession/specimen/urgency
"RTN","LA7ADL",178,0)
 I $D(^TMP("LA7-INST",$J,LA7INST,LA760,LA7I,LRAA,LA761,LA76205)) D ADD Q
"RTN","LA7ADL",179,0)
 ;
"RTN","LA7ADL",180,0)
 Q
"RTN","LA7ADL",181,0)
 ;
"RTN","LA7ADL",182,0)
 ;
"RTN","LA7ADL",183,0)
ADD ; Add to list of tests to download
"RTN","LA7ADL",184,0)
 ;
"RTN","LA7ADL",185,0)
 S LA7ACC(LA7I)=LA760_"^"_LA7TREE(LA760)
"RTN","LA7ADL",186,0)
 Q
"RTN","LA7ADL",187,0)
 ;
"RTN","LA7ADL",188,0)
 ;
"RTN","LA7ADL",189,0)
CLEANUP ; Delete flag after accession has been checked.
"RTN","LA7ADL",190,0)
 ; NOTE: Lock previously set above.
"RTN","LA7ADL",191,0)
 ;
"RTN","LA7ADL",192,0)
 K ^LA("ADL","Q",LA7UID)
"RTN","LA7ADL",193,0)
 ;
"RTN","LA7ADL",194,0)
 ; Release lock on this UID.
"RTN","LA7ADL",195,0)
 L -^LA("ADL","Q",LA7UID)
"RTN","LA7ADL",196,0)
 ;
"RTN","LA7ADL",197,0)
 Q
"RTN","LA7ADL",198,0)
 ;
"RTN","LA7ADL",199,0)
 ;
"RTN","LA7ADL",200,0)
CHKTSK ; Check if we shoud task the auto download processing routine.
"RTN","LA7ADL",201,0)
 ; Check if we recently tasked the processing routine for this process by compaing values in the XTMP global.
"RTN","LA7ADL",202,0)
 ; Done to avoid repetitive locking attempts on each new accessione since the FileMan locking API uses a site-defined timeout which is usually 3 seconds
"RTN","LA7ADL",203,0)
 ; but can be more. Slows down the interface if on each accession we are waiting 3 or more seconds for the lock to find out if the processing routine
"RTN","LA7ADL",204,0)
 ; is already running.
"RTN","LA7ADL",205,0)
 ;
"RTN","LA7ADL",206,0)
 N LA7X,LA7Y
"RTN","LA7ADL",207,0)
 S LA7X=$H,LA7Y=$G(^XTMP("LA7ADL",1))
"RTN","LA7ADL",208,0)
 I $P(LA7X,",")=$P(LA7Y,","),($P(LA7X,",",2)-$P(LA7Y,",",2))<240 Q
"RTN","LA7ADL",209,0)
 ;
"RTN","LA7ADL",210,0)
 ; Lock zeroth node.
"RTN","LA7ADL",211,0)
 ; Quit if another process has lock - either another job setting node or the background job.
"RTN","LA7ADL",212,0)
 D LOCK^DILF("^LA(""ADL"",0)")
"RTN","LA7ADL",213,0)
 I '$T Q
"RTN","LA7ADL",214,0)
 ;
"RTN","LA7ADL",215,0)
 ;
"RTN","LA7ADL",216,0)
ZTSK ; Task background job to run.
"RTN","LA7ADL",217,0)
 ;
"RTN","LA7ADL",218,0)
 ; Call here to queue this processing routine to run in the background.
"RTN","LA7ADL",219,0)
 ;
"RTN","LA7ADL",220,0)
 ; Task background job if not running.
"RTN","LA7ADL",221,0)
 N ZTDESC,ZTSAVE,ZTDTH,ZTIO,ZTRTN
"RTN","LA7ADL",222,0)
 S ZTRTN="DQ^LA7ADL",ZTDESC="Lab Auto Download",ZTIO="",ZTDTH=$H
"RTN","LA7ADL",223,0)
 D ^%ZTLOAD
"RTN","LA7ADL",224,0)
 ;
"RTN","LA7ADL",225,0)
 Q
"RTN","LA7ADL",226,0)
 ;
"RTN","LA7ADL",227,0)
 ;
"RTN","LA7ADL",228,0)
BUILD ; Build TMP global with list of tests for instruments flagged for auto download.
"RTN","LA7ADL",229,0)
 ;
"RTN","LA7ADL",230,0)
 D BUILD^LA7ADL1
"RTN","LA7ADL",231,0)
 ;
"RTN","LA7ADL",232,0)
 ; Set flag to "Running".
"RTN","LA7ADL",233,0)
 D SETSTOP^LA7ADL1(0,$G(DUZ))
"RTN","LA7ADL",234,0)
 ;
"RTN","LA7ADL",235,0)
 Q
"RTN","LA7ADL",236,0)
 ;
"RTN","LA7ADL",237,0)
 ;
"RTN","LA7ADL",238,0)
XTMP ; Set/update XTMP with current run time of this processing routine
"RTN","LA7ADL",239,0)
 ;
"RTN","LA7ADL",240,0)
 S DT=$$DT^XLFDT
"RTN","LA7ADL",241,0)
 S ^XTMP("LA7ADL",0)=DT_"^"_DT_"^LAB AUTO DOWNLOAD PROCESS TASKING"
"RTN","LA7ADL",242,0)
 S ^XTMP("LA7ADL",1)=$H
"RTN","LA7ADL",243,0)
 Q
"RTN","LA7ADL",244,0)
 ;
"RTN","LA7ADL",245,0)
 ;
"RTN","LA7ADL",246,0)
EXIT ; Exit and cleanup.
"RTN","LA7ADL",247,0)
 ;
"RTN","LA7ADL",248,0)
 ; Release lock on LA("ADL") global.
"RTN","LA7ADL",249,0)
 L -^LA("ADL",0)
"RTN","LA7ADL",250,0)
 ;
"RTN","LA7ADL",251,0)
 K ^TMP("LA7",$J),^TMP($J),^XTMP("LA7ADL",1)
"RTN","LA7ADL",252,0)
 K LA7ADL,LA7AUTO,LA7NVAF,LRAA,LRAD,LRAN,TOUT
"RTN","LA7ADL",253,0)
 ;
"RTN","LA7ADL",254,0)
 ; Clear flag if normal shutdown, no new accessions.
"RTN","LA7ADL",255,0)
 I +$G(^LA("ADL","STOP"))<2 K ^LA("ADL","STOP")
"RTN","LA7ADL",256,0)
 ;
"RTN","LA7ADL",257,0)
 ; Set flag for taskman to cleanup task.
"RTN","LA7ADL",258,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7ADL",259,0)
 Q
"RTN","LA7ADL1")
0^101^B22761823
"RTN","LA7ADL1",1,0)
LA7ADL1 ;DALOI/JMC - Automatic Download of Test Orders (Cont'd) ;Aug 14, 2008
"RTN","LA7ADL1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**17,23,57,74**;Sep 27, 1994;Build 229
"RTN","LA7ADL1",3,0)
 ;
"RTN","LA7ADL1",4,0)
 ;
"RTN","LA7ADL1",5,0)
BUILD ; Build test listing for all instruments designated for auto download.
"RTN","LA7ADL1",6,0)
 ;
"RTN","LA7ADL1",7,0)
 N LA7I,LA7INST,LA7WL
"RTN","LA7ADL1",8,0)
 ;
"RTN","LA7ADL1",9,0)
 K ^TMP("LA7-INST",$J)
"RTN","LA7ADL1",10,0)
 K LA7AUTO
"RTN","LA7ADL1",11,0)
 ;
"RTN","LA7ADL1",12,0)
 ; Flag used to notify download routines of automatic download (no worklist).
"RTN","LA7ADL1",13,0)
 S LA7ADL=1
"RTN","LA7ADL1",14,0)
 ;
"RTN","LA7ADL1",15,0)
 S LA7INST=0
"RTN","LA7ADL1",16,0)
 F  S LA7INST=$O(^LAB(62.4,"AE",LA7INST)) Q:'LA7INST  D BLDINST(LA7INST,0)
"RTN","LA7ADL1",17,0)
 Q
"RTN","LA7ADL1",18,0)
 ;
"RTN","LA7ADL1",19,0)
 ;
"RTN","LA7ADL1",20,0)
BLDINST(LA7INST,LA7WL) ; Build list of instrument tests
"RTN","LA7ADL1",21,0)
 ; Call with LA7INST = ien of entry in file #62.4
"RTN","LA7ADL1",22,0)
 ;             LA7WL = ien of entry in file #62.8 (optional)
"RTN","LA7ADL1",23,0)
 ;                     will default to list associated with #62.4 entry.
"RTN","LA7ADL1",24,0)
 ;
"RTN","LA7ADL1",25,0)
 K ^TMP("LA7-INST",$J,LA7INST)
"RTN","LA7ADL1",26,0)
 ;
"RTN","LA7ADL1",27,0)
 S LA7AUTO(LA7INST)=$G(^LAB(62.4,LA7INST,0))
"RTN","LA7ADL1",28,0)
 ; Quit - no zero node in 62.4.
"RTN","LA7ADL1",29,0)
 I LA7AUTO(LA7INST)="" K LA7AUTO(LA7INST) Q
"RTN","LA7ADL1",30,0)
 ;
"RTN","LA7ADL1",31,0)
 S LA7AUTO(LA7INST,9)=$G(^LAB(62.4,LA7INST,9))
"RTN","LA7ADL1",32,0)
 ; Quit - no/invalid download routine specified.
"RTN","LA7ADL1",33,0)
 I $$CHKRTN Q
"RTN","LA7ADL1",34,0)
 ;
"RTN","LA7ADL1",35,0)
 ; Worklist pointer
"RTN","LA7ADL1",36,0)
 I 'LA7WL S LA7WL=$P(LA7AUTO(LA7INST),"^",4)
"RTN","LA7ADL1",37,0)
 ;
"RTN","LA7ADL1",38,0)
 ; Store "include uncollected accessions" flag, defaults to 0 (NO)
"RTN","LA7ADL1",39,0)
 S ^TMP("LA7-INST",$J,LA7INST)=+$P($G(^LRO(68.2,LA7WL,0)),"^",10)
"RTN","LA7ADL1",40,0)
 ;
"RTN","LA7ADL1",41,0)
 S LA7I=0
"RTN","LA7ADL1",42,0)
 F  S LA7I=$O(^LAB(62.4,LA7INST,3,LA7I)) Q:'LA7I  D BLDTST
"RTN","LA7ADL1",43,0)
 ;
"RTN","LA7ADL1",44,0)
 ; No download tests found for this instrument.
"RTN","LA7ADL1",45,0)
 I '$O(^TMP("LA7-INST",$J,LA7INST,0)) D
"RTN","LA7ADL1",46,0)
 . K LA7AUTO(LA7INST)
"RTN","LA7ADL1",47,0)
 . K ^TMP("LA7-INST",$J,LA7INST)
"RTN","LA7ADL1",48,0)
 Q
"RTN","LA7ADL1",49,0)
 ;
"RTN","LA7ADL1",50,0)
 ;
"RTN","LA7ADL1",51,0)
BLDTST ; Build list of test that can be downloaded.
"RTN","LA7ADL1",52,0)
 ;
"RTN","LA7ADL1",53,0)
 N X,Y
"RTN","LA7ADL1",54,0)
 ; Don't download this test.
"RTN","LA7ADL1",55,0)
 I $P($G(^LAB(62.4,LA7INST,3,LA7I,2)),"^",4)=0 Q
"RTN","LA7ADL1",56,0)
 ;
"RTN","LA7ADL1",57,0)
 ; X = Zeroth node of test multiple
"RTN","LA7ADL1",58,0)
 ; Y = Screening criteria - accession area, specimen type, urgency
"RTN","LA7ADL1",59,0)
 S X=$G(^LAB(62.4,LA7INST,3,LA7I,0))
"RTN","LA7ADL1",60,0)
 S Y=$G(^LAB(62.4,LA7INST,3,LA7I,2))
"RTN","LA7ADL1",61,0)
 ;
"RTN","LA7ADL1",62,0)
 ; Build pattern mask based on file #60, #62.41, #68, #61, #62.05 iens
"RTN","LA7ADL1",63,0)
 S ^TMP("LA7-INST",$J,LA7INST,+X,LA7I,+$P(Y,"^",12),+$P(Y,"^",13),+$P(Y,"^",14))=""
"RTN","LA7ADL1",64,0)
 ;
"RTN","LA7ADL1",65,0)
 ; Build test info
"RTN","LA7ADL1",66,0)
 S ^TMP("LA7",$J,LA7INST,LA7I)=X
"RTN","LA7ADL1",67,0)
 S $P(^TMP("LA7",$J,LA7INST,LA7I),"^",7)=$P($G(^LAB(60,+X,.2)),"^")
"RTN","LA7ADL1",68,0)
 ;
"RTN","LA7ADL1",69,0)
 Q
"RTN","LA7ADL1",70,0)
 ;
"RTN","LA7ADL1",71,0)
 ;
"RTN","LA7ADL1",72,0)
CHKRTN() ; Check if download routine defined and valid
"RTN","LA7ADL1",73,0)
 ;
"RTN","LA7ADL1",74,0)
 N LA7ERR,X,XQA,XQAMSG
"RTN","LA7ADL1",75,0)
 ;
"RTN","LA7ADL1",76,0)
 S LA7ERR=0,XQAMSG=""
"RTN","LA7ADL1",77,0)
 ;
"RTN","LA7ADL1",78,0)
 ; Check if download routine specified
"RTN","LA7ADL1",79,0)
 I $P(LA7AUTO(LA7INST,9),"^",4)="" D
"RTN","LA7ADL1",80,0)
 . S LA7ERR=1
"RTN","LA7ADL1",81,0)
 . S XQAMSG="No download routine (field #94)"
"RTN","LA7ADL1",82,0)
 ;
"RTN","LA7ADL1",83,0)
 ; Check if download routine valid
"RTN","LA7ADL1",84,0)
 I $P(LA7AUTO(LA7INST,9),"^",4)'="" D
"RTN","LA7ADL1",85,0)
 . S X=$P(LA7AUTO(LA7INST,9),"^",4) X ^%ZOSF("TEST") Q:$T
"RTN","LA7ADL1",86,0)
 . S LA7ERR=1
"RTN","LA7ADL1",87,0)
 . S XQAMSG="Invalid download routine (field #94)"
"RTN","LA7ADL1",88,0)
 ;
"RTN","LA7ADL1",89,0)
 ; Check if routine label valid
"RTN","LA7ADL1",90,0)
 I 'LA7ERR,$L($P(LA7AUTO(LA7INST,9),"^",3)) D
"RTN","LA7ADL1",91,0)
 . I $L($T(@$P(LA7AUTO(LA7INST,9),"^",3,4))) Q
"RTN","LA7ADL1",92,0)
 . S LA7ERR=1
"RTN","LA7ADL1",93,0)
 . S XQAMSG="Invalid download routine label (field #93)"
"RTN","LA7ADL1",94,0)
 ;
"RTN","LA7ADL1",95,0)
 ; If problem send alert and kill array entry
"RTN","LA7ADL1",96,0)
 I LA7ERR D
"RTN","LA7ADL1",97,0)
 . S XQAMSG=XQAMSG_" specified for AUTO INSTRUMENT: "_$P(LA7AUTO(LA7INST),"^")
"RTN","LA7ADL1",98,0)
 . D ERROR^LA7UID
"RTN","LA7ADL1",99,0)
 . K LA7AUTO(LA7INST)
"RTN","LA7ADL1",100,0)
 ;
"RTN","LA7ADL1",101,0)
 Q LA7ERR
"RTN","LA7ADL1",102,0)
 ;
"RTN","LA7ADL1",103,0)
 ;
"RTN","LA7ADL1",104,0)
UNWIND(LA760,LA7URG,LA7PARNT) ; Unwind profile - set tests into array LA7TREE with urgency.
"RTN","LA7ADL1",105,0)
 ;
"RTN","LA7ADL1",106,0)
 ; Call with  LA760 = file #60 ien
"RTN","LA7ADL1",107,0)
 ;           LA7URG = file #62.05 ien
"RTN","LA7ADL1",108,0)
 ;         LA7PARNT = file #60 ien -  ordered parent (panel)
"RTN","LA7ADL1",109,0)
 ;
"RTN","LA7ADL1",110,0)
 ; Recursive panel, caught in a loop.
"RTN","LA7ADL1",111,0)
 I $G(LA7PCNT)>50 Q
"RTN","LA7ADL1",112,0)
 ;
"RTN","LA7ADL1",113,0)
 ; If no urgency, set to routine (9), default value.
"RTN","LA7ADL1",114,0)
 I 'LA7URG S LA7URG=9
"RTN","LA7ADL1",115,0)
 ;
"RTN","LA7ADL1",116,0)
 ; Test does not exist in file 60.
"RTN","LA7ADL1",117,0)
 I '$D(^LAB(60,LA760,0)) Q
"RTN","LA7ADL1",118,0)
 ;
"RTN","LA7ADL1",119,0)
 ; Bypass "workload" type tests.
"RTN","LA7ADL1",120,0)
 I $P(^LAB(60,LA760,0),"^",4)="WK" Q
"RTN","LA7ADL1",121,0)
 ;
"RTN","LA7ADL1",122,0)
 ; Test already listed, check if urgency different.
"RTN","LA7ADL1",123,0)
 I $D(LA7TREE(LA760)) D  Q
"RTN","LA7ADL1",124,0)
 . S LA7PCNT=0
"RTN","LA7ADL1",125,0)
 . ; Convert expanded panel test urgency to regular urgency
"RTN","LA7ADL1",126,0)
 . I LA7URG>50 S LA7URG=LA7URG-50
"RTN","LA7ADL1",127,0)
 . ; Found test with higher urgency, save new urgency.
"RTN","LA7ADL1",128,0)
 . I LA7URG<LA7TREE(LA760) S $P(LA7TREE(LA760),"^")=LA7URG
"RTN","LA7ADL1",129,0)
 ;
"RTN","LA7ADL1",130,0)
 ; Not a panel, list test with urgency.
"RTN","LA7ADL1",131,0)
 I '$O(^LAB(60,LA760,2,0)) S LA7TREE(LA760)=LA7URG_"^"_LA7PARNT,LA7PCNT=0 Q
"RTN","LA7ADL1",132,0)
 ;
"RTN","LA7ADL1",133,0)
 N I
"RTN","LA7ADL1",134,0)
 ;
"RTN","LA7ADL1",135,0)
 ; Increment panel and test loop counter.
"RTN","LA7ADL1",136,0)
 S LA7PCNT=$G(LA7PCNT)+1,I=0
"RTN","LA7ADL1",137,0)
 ;
"RTN","LA7ADL1",138,0)
 ; Expand test on panel.
"RTN","LA7ADL1",139,0)
 F  S I=$O(^LAB(60,LA760,2,I)) Q:'I  D
"RTN","LA7ADL1",140,0)
 . N II
"RTN","LA7ADL1",141,0)
 . ; IEN of test on panel.
"RTN","LA7ADL1",142,0)
 . S II=+$G(^LAB(60,LA760,2,I,0))
"RTN","LA7ADL1",143,0)
 . ; Recursive panel, panel calls itself.
"RTN","LA7ADL1",144,0)
 . I II,II=LA760 Q
"RTN","LA7ADL1",145,0)
 . I II D UNWIND(II,LA7URG,LA7PARNT)
"RTN","LA7ADL1",146,0)
 ;
"RTN","LA7ADL1",147,0)
 Q
"RTN","LA7ADL1",148,0)
 ;
"RTN","LA7ADL1",149,0)
 ;
"RTN","LA7ADL1",150,0)
SETSTOP(FLAG,USER) ; Set "STOP" node in ^LA("ADL") global..
"RTN","LA7ADL1",151,0)
 ; Required parameters
"RTN","LA7ADL1",152,0)
 ; FLAG - Values passed can be:
"RTN","LA7ADL1",153,0)
 ;        0 = Auto download background task running.
"RTN","LA7ADL1",154,0)
 ;        1 = Start/Restart background task.
"RTN","LA7ADL1",155,0)
 ;        2 = Shutdown auto download background task, don't restart.
"RTN","LA7ADL1",156,0)
 ;        3 = Shutdown, don't start auto download task and don't collect accessions for downloading.
"RTN","LA7ADL1",157,0)
 ; USER - DUZ of user.
"RTN","LA7ADL1",158,0)
 ;
"RTN","LA7ADL1",159,0)
 ; Value passed out of range.
"RTN","LA7ADL1",160,0)
 I FLAG<0!(FLAG>3) Q
"RTN","LA7ADL1",161,0)
 ;
"RTN","LA7ADL1",162,0)
 I $G(USER)'>0 S USER="UNKNOWN"
"RTN","LA7ADL1",163,0)
 ;
"RTN","LA7ADL1",164,0)
 ; Set flag to value passed, user and current time.
"RTN","LA7ADL1",165,0)
 S ^LA("ADL","STOP")=FLAG_"^"_$$HTFM^XLFDT($H)_"^"_USER
"RTN","LA7ADL1",166,0)
 ;
"RTN","LA7ADL1",167,0)
 Q
"RTN","LA7ADL1",168,0)
 ;
"RTN","LA7ADL1",169,0)
 ;
"RTN","LA7ADL1",170,0)
SHOWST() ; Show status
"RTN","LA7ADL1",171,0)
 ;
"RTN","LA7ADL1",172,0)
 N X,Y
"RTN","LA7ADL1",173,0)
 ;
"RTN","LA7ADL1",174,0)
 S X=$G(^LA("ADL","STOP"),-1)
"RTN","LA7ADL1",175,0)
 S Y=$P("Not Running^Running^Start/Restart Auto Download Job^Shutdown Auto Download Job^Shutdown Auto Download Job and Stop Collecting Accessions","^",$P(X,"^")+2)
"RTN","LA7ADL1",176,0)
 ;
"RTN","LA7ADL1",177,0)
 I +X'<0 D
"RTN","LA7ADL1",178,0)
 . S $P(Y,"^",2)=$$FMTE^XLFDT($P(X,"^",2))
"RTN","LA7ADL1",179,0)
 . I $P(X,"^",3) S $P(Y,"^",3)=$$GET1^DIQ(200,$P(X,"^",3)_",",.01)
"RTN","LA7ADL1",180,0)
 . I $P(X,"^",3)="UNKNOWN"!($P(Y,"^",3)="") S $P(Y,"^",3)="UNKNOWN"
"RTN","LA7ADL1",181,0)
 ;
"RTN","LA7ADL1",182,0)
 Q Y
"RTN","LA7CHKF")
0^97^B118760272
"RTN","LA7CHKF",1,0)
LA7CHKF ;DALOI/JMC - Check Lab Messaging File Integrity ;11/16/11  10:49
"RTN","LA7CHKF",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,74**;Sep 27, 1994;Build 229
"RTN","LA7CHKF",3,0)
 ;
"RTN","LA7CHKF",4,0)
 ;This routine checks file integrity for Lab Messaging.
"RTN","LA7CHKF",5,0)
EN ; Run an integrity check
"RTN","LA7CHKF",6,0)
 ;
"RTN","LA7CHKF",7,0)
 ;ZEXCEPT: ION,POP
"RTN","LA7CHKF",8,0)
 ;
"RTN","LA7CHKF",9,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7CHKF",10,0)
 N LA7CHKBX,LA7FIX,LA7ION,LA7LOG,LA7QUIT
"RTN","LA7CHKF",11,0)
 ;
"RTN","LA7CHKF",12,0)
 S (LA7CHKBX,LA7LOG)=1
"RTN","LA7CHKF",13,0)
 S DIR(0)="SO^1:Check File Integrity;2:Fix File Entries"
"RTN","LA7CHKF",14,0)
 S DIR("A")="Select Option",DIR("B")=1
"RTN","LA7CHKF",15,0)
 D ^DIR
"RTN","LA7CHKF",16,0)
 I $D(DIRUT) Q
"RTN","LA7CHKF",17,0)
 I Y=1 S LA7FIX=0
"RTN","LA7CHKF",18,0)
 I Y=2 S LA7FIX=1
"RTN","LA7CHKF",19,0)
 ;
"RTN","LA7CHKF",20,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7CHKF",21,0)
 S DIR(0)="YO",DIR("A")="Print Report",DIR("B")="YES",DIR("?")="Enter 'YES' to print the integrity report."
"RTN","LA7CHKF",22,0)
 D ^DIR
"RTN","LA7CHKF",23,0)
 I $D(DIRUT) Q
"RTN","LA7CHKF",24,0)
 I Y=1 D
"RTN","LA7CHKF",25,0)
 . N %ZIS
"RTN","LA7CHKF",26,0)
 . S %ZIS="NQ0",%ZIS("A")="Select Device: ",%ZIS("B")=""
"RTN","LA7CHKF",27,0)
 . D ^%ZIS
"RTN","LA7CHKF",28,0)
 . I POP S LA7QUIT=1
"RTN","LA7CHKF",29,0)
 . S LA7ION=ION
"RTN","LA7CHKF",30,0)
 I $G(LA7QUIT) D HOME^%ZIS Q
"RTN","LA7CHKF",31,0)
 ;
"RTN","LA7CHKF",32,0)
 S ZTRTN="DQ^LA7CHKF",ZTDESC="Lab Messaging File Integrity Checker"
"RTN","LA7CHKF",33,0)
 S ZTSAVE("LA7*")="",ZTIO=""
"RTN","LA7CHKF",34,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LA7CHKF",35,0)
 W !,"Request ",$S($G(ZTSK):"",1:"NOT "),"Queued"
"RTN","LA7CHKF",36,0)
 Q
"RTN","LA7CHKF",37,0)
 ;
"RTN","LA7CHKF",38,0)
 ;
"RTN","LA7CHKF",39,0)
DQ ; Entry point from taskman
"RTN","LA7CHKF",40,0)
 ;
"RTN","LA7CHKF",41,0)
 ;ZEXCEPT: LA7CHKBX,LA7FIX,LA7ION,LA7LOG,ZTQUEUED,ZTREQ
"RTN","LA7CHKF",42,0)
 ;
"RTN","LA7CHKF",43,0)
 N LA7ECNT,LA7IC,LA7XQA
"RTN","LA7CHKF",44,0)
 ;
"RTN","LA7CHKF",45,0)
 D INIT,IC,CHECKMG
"RTN","LA7CHKF",46,0)
 ;
"RTN","LA7CHKF",47,0)
 I LA7LOG D
"RTN","LA7CHKF",48,0)
 . S $P(^XTMP(LA7IC,0),"^",5)=$$NOW^XLFDT ; End date/time
"RTN","LA7CHKF",49,0)
 . L -^XTMP(LA7IC) ; Release lock
"RTN","LA7CHKF",50,0)
 ;
"RTN","LA7CHKF",51,0)
 I LA7ECNT D
"RTN","LA7CHKF",52,0)
 . N XQA,XQAID,XQADATA,XQAMSG,XQAOPT,XQAROU
"RTN","LA7CHKF",53,0)
 . S XQAMSG="Lab Messaging -Warning- "_LA7ECNT_" errors found in File #62.49, LA7 MESSAGE QUEUE."
"RTN","LA7CHKF",54,0)
 . I LA7LOG S XQADATA=LA7IC,XQAROU="DISIC^LA7UXQA"
"RTN","LA7CHKF",55,0)
 . S XQAID="LA7ERR-"_$TR(LA7IC,"^",":")
"RTN","LA7CHKF",56,0)
 . I $G(DUZ)>.9 S XQA(DUZ)=""
"RTN","LA7CHKF",57,0)
 . M XQA=LA7XQA
"RTN","LA7CHKF",58,0)
 . D SETUP^XQALERT
"RTN","LA7CHKF",59,0)
 ;
"RTN","LA7CHKF",60,0)
 ; Run check on certain files "B" index if first of the month or tasked by user.
"RTN","LA7CHKF",61,0)
 I $G(LA7CHKBX)="" S LA7CHKBX=$S($E(DT,6,7)="01":1,1:0)
"RTN","LA7CHKF",62,0)
 I LA7CHKBX D CHKBX
"RTN","LA7CHKF",63,0)
 K LA7CHKBX
"RTN","LA7CHKF",64,0)
 ;
"RTN","LA7CHKF",65,0)
 ; Task print of integrity report
"RTN","LA7CHKF",66,0)
 I $G(LA7ION)'="" D
"RTN","LA7CHKF",67,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7CHKF",68,0)
 . S ZTRTN="DQ^LA7CHKFP",ZTDTH=$H,ZTSAVE("LA7IC")="",ZTIO=LA7ION
"RTN","LA7CHKF",69,0)
 . S ZTDESC="Print LA7 File Integrity Report"
"RTN","LA7CHKF",70,0)
 . D ^%ZTLOAD
"RTN","LA7CHKF",71,0)
 ;
"RTN","LA7CHKF",72,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7CHKF",73,0)
 Q
"RTN","LA7CHKF",74,0)
 ;
"RTN","LA7CHKF",75,0)
 ;
"RTN","LA7CHKF",76,0)
IC ; File 62.49 Integrity checker and fix-er-upper.
"RTN","LA7CHKF",77,0)
 ;
"RTN","LA7CHKF",78,0)
 ; Check that all the cross-references have entries
"RTN","LA7CHKF",79,0)
 ;
"RTN","LA7CHKF",80,0)
 ;ZEXCEPT: LA7ECNT,LA7FIX,LA7IC,LA7LOG,LA7TCNT
"RTN","LA7CHKF",81,0)
 ;
"RTN","LA7CHKF",82,0)
 N LA7CFG,LA7DA,LA7DAT,LA7INAME,LA7Q,LA7ROOT,X,Y
"RTN","LA7CHKF",83,0)
 ;
"RTN","LA7CHKF",84,0)
 ; Check the "AD" cross-reference
"RTN","LA7CHKF",85,0)
 S LA7ROOT="^LAHM(62.49,""AD"")"
"RTN","LA7CHKF",86,0)
 F  S LA7ROOT=$Q(LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="AD")  D
"RTN","LA7CHKF",87,0)
 . S LA7DAT=$QS(LA7ROOT,3),LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",88,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",89,0)
 . I LA7DAT'=$P($P($G(^LAHM(62.49,LA7DA,0)),"^",5),".") D
"RTN","LA7CHKF",90,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",91,0)
 . . I LA7LOG D LOG("Bad ""AD"" cross-reference of "_LA7ROOT_" for entry "_LA7DA)
"RTN","LA7CHKF",92,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",93,0)
 ;
"RTN","LA7CHKF",94,0)
 ; Check the "B" cross-reference
"RTN","LA7CHKF",95,0)
 S LA7ROOT="^LAHM(62.49,""B"")"
"RTN","LA7CHKF",96,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="B")  D
"RTN","LA7CHKF",97,0)
 . S LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",98,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",99,0)
 . I LA7DA'=$QS(LA7ROOT,3) D
"RTN","LA7CHKF",100,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",101,0)
 . . I LA7LOG D LOG("""B"" cross-reference "_LA7ROOT_" points to incorrect entry "_$QS(LA7ROOT,4))
"RTN","LA7CHKF",102,0)
 . I '$D(^LAHM(62.49,LA7DA,0)) D
"RTN","LA7CHKF",103,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",104,0)
 . . I LA7LOG D LOG("""B"" cross-reference "_LA7ROOT_" points to missing entry "_LA7DA)
"RTN","LA7CHKF",105,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",106,0)
 ;
"RTN","LA7CHKF",107,0)
 ; Check the "C" cross-reference
"RTN","LA7CHKF",108,0)
 S LA7ROOT="^LAHM(62.49,""C"")"
"RTN","LA7CHKF",109,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="C")  D
"RTN","LA7CHKF",110,0)
 . S LA7INAME=$QS(LA7ROOT,3),LA7DA=$QS(LA7ROOT,4)
"RTN","LA7CHKF",111,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",112,0)
 . I LA7INAME=$P($G(^LAHM(62.49,LA7DA,0)),"^",6) D UNLOCK(LA7DA) Q
"RTN","LA7CHKF",113,0)
 . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",114,0)
 . I LA7LOG D LOG("Bad ""C"" cross-reference of "_LA7ROOT_" on entry "_LA7DA)
"RTN","LA7CHKF",115,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",116,0)
 ;
"RTN","LA7CHKF",117,0)
 ; Check the "Q" cross-reference
"RTN","LA7CHKF",118,0)
 S LA7ROOT="^LAHM(62.49,""Q"")"
"RTN","LA7CHKF",119,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'=62.49!($QS(LA7ROOT,2)'="Q")  D
"RTN","LA7CHKF",120,0)
 . S LA7CFG=$QS(LA7ROOT,3)
"RTN","LA7CHKF",121,0)
 . S LA7Q=$QS(LA7ROOT,4)
"RTN","LA7CHKF",122,0)
 . S LA7DA=$QS(LA7ROOT,5)
"RTN","LA7CHKF",123,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",124,0)
 . S X(0)=$G(^LAHM(62.49,LA7DA,0))
"RTN","LA7CHKF",125,0)
 . S X(.5)=$G(^LAHM(62.49,LA7DA,.5))
"RTN","LA7CHKF",126,0)
 . I LA7CFG'=$P(X(.5),"^")!(LA7Q'=($P(X(0),"^",2)_$P(X(0),"^",3))) D
"RTN","LA7CHKF",127,0)
 . . I LA7LOG D LOG("Bad ""Q"" cross-reference of "_LA7ROOT_" for entry: "_LA7DA)
"RTN","LA7CHKF",128,0)
 . . I LA7FIX K @LA7ROOT
"RTN","LA7CHKF",129,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",130,0)
 ;
"RTN","LA7CHKF",131,0)
 ; Check that all entries have "AD" cross-reference set.
"RTN","LA7CHKF",132,0)
 ;                              "B" cross-reference set
"RTN","LA7CHKF",133,0)
 ;                              "C" cross-reference set
"RTN","LA7CHKF",134,0)
 ;                              "Q" cross-reference set
"RTN","LA7CHKF",135,0)
 S (LA7DA,LA7TCNT)=0
"RTN","LA7CHKF",136,0)
 F  S LA7DA=$O(^LAHM(62.49,LA7DA)) Q:'LA7DA  D
"RTN","LA7CHKF",137,0)
 . I '$$LOCK(LA7DA) Q
"RTN","LA7CHKF",138,0)
 . S LA7TCNT=LA7TCNT+1 ; Count of entries in file.
"RTN","LA7CHKF",139,0)
 . S X(0)=$G(^LAHM(62.49,LA7DA,0))
"RTN","LA7CHKF",140,0)
 . S X(.5)=$G(^LAHM(62.49,LA7DA,.5))
"RTN","LA7CHKF",141,0)
 . S Y=$P(X(0),"^") ; Message number (.01 field)
"RTN","LA7CHKF",142,0)
 . I 'Y D
"RTN","LA7CHKF",143,0)
 . . I LA7FIX K ^LAHM(62.49,LA7DA)
"RTN","LA7CHKF",144,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing .01 field")
"RTN","LA7CHKF",145,0)
 . S Y=$P(X(0),"^",5) ; date/time entered
"RTN","LA7CHKF",146,0)
 . I Y,'$D(^LAHM(62.49,"AD",$P(Y,"."),LA7DA)) D
"RTN","LA7CHKF",147,0)
 . . I LA7FIX S ^LAHM(62.49,"AD",$P(Y,"."),LA7DA)=""
"RTN","LA7CHKF",148,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""AD"" cross-reference "_$P(Y,"."))
"RTN","LA7CHKF",149,0)
 . S Y=$P(X(0),"^")
"RTN","LA7CHKF",150,0)
 . I Y,'$D(^LAHM(62.49,"B",Y,LA7DA)) D
"RTN","LA7CHKF",151,0)
 . . I LA7FIX S ^LAHM(62.49,"B",Y,LA7DA)=""
"RTN","LA7CHKF",152,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""B"" cross-reference")
"RTN","LA7CHKF",153,0)
 . S Y=$P(X(0),"^",6) ; instrument name
"RTN","LA7CHKF",154,0)
 . I Y'="",'$D(^LAHM(62.49,"C",$E(Y,1,45),LA7DA)) D
"RTN","LA7CHKF",155,0)
 . . I LA7FIX S ^LAHM(62.49,"C",$E(Y,1,45),LA7DA)=""
"RTN","LA7CHKF",156,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ""C"" cross-reference "_Y)
"RTN","LA7CHKF",157,0)
 . S Y=$P(X(0),"^",2)_$P(X(0),"^",3) ; concatentate configuration_status
"RTN","LA7CHKF",158,0)
 . I +X(.5),Y'="",'$D(^LAHM(62.49,"Q",+X(.5),Y,LA7DA)) D
"RTN","LA7CHKF",159,0)
 . . I LA7FIX S ^LAHM(62.49,"Q",+X(.5),Y,LA7DA)=""
"RTN","LA7CHKF",160,0)
 . . I LA7LOG D LOG("Entry "_LA7DA_" missing ^LAHM(62.49,""Q"","_+X(.5)_","""_Y_""","_LA7DA_") cross-reference")
"RTN","LA7CHKF",161,0)
 . D UNLOCK(LA7DA)
"RTN","LA7CHKF",162,0)
 ;
"RTN","LA7CHKF",163,0)
 I LA7LOG D
"RTN","LA7CHKF",164,0)
 . S $P(^XTMP(LA7IC,0),"^",6,7)=LA7TCNT_"^"_LA7ECNT ; Total^Error count
"RTN","LA7CHKF",165,0)
 . S $P(^XTMP(LA7IC,0),"^",8)=LA7FIX
"RTN","LA7CHKF",166,0)
 ;
"RTN","LA7CHKF",167,0)
 Q
"RTN","LA7CHKF",168,0)
 ;
"RTN","LA7CHKF",169,0)
 ;
"RTN","LA7CHKF",170,0)
CHKBX ; Check "B" index on selected Lab files
"RTN","LA7CHKF",171,0)
 ;
"RTN","LA7CHKF",172,0)
 N LRFN,LRROOT
"RTN","LA7CHKF",173,0)
 F LRFN=61,61.1,61.2,61.3,61.4,61.5,61.6,62  D
"RTN","LA7CHKF",174,0)
 . S LRROOT="^LAB("_LRFN_",""B"")"
"RTN","LA7CHKF",175,0)
 . D FILE
"RTN","LA7CHKF",176,0)
 ;
"RTN","LA7CHKF",177,0)
 Q
"RTN","LA7CHKF",178,0)
 ;
"RTN","LA7CHKF",179,0)
 ;
"RTN","LA7CHKF",180,0)
FILE ; Check "B" index on this file
"RTN","LA7CHKF",181,0)
 ;
"RTN","LA7CHKF",182,0)
 ;ZEXCEPT: LRFN,LRROOT
"RTN","LA7CHKF",183,0)
 ;
"RTN","LA7CHKF",184,0)
 N DIK,LRIEN,LRNAME
"RTN","LA7CHKF",185,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LA7CHKF",186,0)
 . S LRIEN=$QS(LRROOT,4)
"RTN","LA7CHKF",187,0)
 . I LRFN<62,$G(@LRROOT) S LRNAME=$P($G(^LAB(LRFN,LRIEN,0)),"^",$S(((LRFN>61)&(LRFN<61.4)):7,1:5))
"RTN","LA7CHKF",188,0)
 . E  S LRNAME=$P($G(^LAB(LRFN,LRIEN,0)),"^")
"RTN","LA7CHKF",189,0)
 . I $QS(LRROOT,3)'=$E(LRNAME,1,30) K @LRROOT
"RTN","LA7CHKF",190,0)
 ;
"RTN","LA7CHKF",191,0)
 ; Reindex the "B" x-index on this file for fields #.01 and #6 (abbreviation)
"RTN","LA7CHKF",192,0)
 S DIK="^LAB("_LRFN_",",DIK(1)=".01^B" D ENALL^DIK
"RTN","LA7CHKF",193,0)
 K DIK
"RTN","LA7CHKF",194,0)
 I LRFN<62 S DIK="^LAB("_LRFN_",",DIK(1)="6^B" D ENALL^DIK
"RTN","LA7CHKF",195,0)
 Q
"RTN","LA7CHKF",196,0)
 ;
"RTN","LA7CHKF",197,0)
 ;
"RTN","LA7CHKF",198,0)
LOG(X) ; Log error in XTMP global.
"RTN","LA7CHKF",199,0)
 ; Call with X = error message to store.
"RTN","LA7CHKF",200,0)
 ;
"RTN","LA7CHKF",201,0)
 ;ZEXCEPT: LA7ECNT,LA7FIX,LA7IC
"RTN","LA7CHKF",202,0)
 ;
"RTN","LA7CHKF",203,0)
 S LA7ECNT=$G(LA7ECNT)+1
"RTN","LA7CHKF",204,0)
 I LA7FIX S X=X_" **Fix attempted**"
"RTN","LA7CHKF",205,0)
 S ^XTMP(LA7IC,LA7ECNT)=X
"RTN","LA7CHKF",206,0)
 Q
"RTN","LA7CHKF",207,0)
 ;
"RTN","LA7CHKF",208,0)
 ;
"RTN","LA7CHKF",209,0)
LOCK(LA7DA) ; Lock entry in #62.49
"RTN","LA7CHKF",210,0)
 ; Call with LA7DA = entry to lock
"RTN","LA7CHKF",211,0)
 ; Returns       0 = failure to obtain lock
"RTN","LA7CHKF",212,0)
 ;               1 = lock obtained
"RTN","LA7CHKF",213,0)
 ;
"RTN","LA7CHKF",214,0)
 ;ZEXCEPT: LA7LOG
"RTN","LA7CHKF",215,0)
 ;
"RTN","LA7CHKF",216,0)
 N LA7Y
"RTN","LA7CHKF",217,0)
 S LA7Y=0,LA7DA=+$G(LA7DA)
"RTN","LA7CHKF",218,0)
 L +^LAHM(62.49,LA7DA):10
"RTN","LA7CHKF",219,0)
 I $T S LA7Y=1
"RTN","LA7CHKF",220,0)
 I 'LA7Y,$G(LA7LOG) D LOG("Unable to obtain lock on entry "_LA7DA_" in file #62.49")
"RTN","LA7CHKF",221,0)
 Q LA7Y
"RTN","LA7CHKF",222,0)
 ;
"RTN","LA7CHKF",223,0)
UNLOCK(LA7DA) ; Unlock entry in #62.49
"RTN","LA7CHKF",224,0)
 ; Call with LA7DA = entry to lock
"RTN","LA7CHKF",225,0)
 ;
"RTN","LA7CHKF",226,0)
 S LA7DA=+$G(LA7DA)
"RTN","LA7CHKF",227,0)
 L -^LAHM(62.49,LA7DA)
"RTN","LA7CHKF",228,0)
 Q
"RTN","LA7CHKF",229,0)
 ;
"RTN","LA7CHKF",230,0)
LACHK() ; Check ^LA("ADL","Q") for build up of entries.
"RTN","LA7CHKF",231,0)
 ; Send alert to mail group LAB MESSAGING warning about large # of entries.
"RTN","LA7CHKF",232,0)
 N LA7CNT,LA7DA,X,Y
"RTN","LA7CHKF",233,0)
 S LA7DA="",LA7CNT=0
"RTN","LA7CHKF",234,0)
 F  S LA7DA=$O(^LA("ADL","Q",LA7DA)) Q:LA7DA=""  S LA7CNT=LA7CNT+1
"RTN","LA7CHKF",235,0)
 I LA7CNT>500 D
"RTN","LA7CHKF",236,0)
 . N XQA,XQAID,XQADATA,XQAMSG,XQAOPT,XQAROU
"RTN","LA7CHKF",237,0)
 . S XQAMSG="Lab Messaging -Warning- "_LA7CNT_" entries in LA(""ADL"",""Q"") global - please check."
"RTN","LA7CHKF",238,0)
 . S XQAID="LA7ADL-"_$H
"RTN","LA7CHKF",239,0)
 . I $G(DUZ)>.9 S XQA(DUZ)=""
"RTN","LA7CHKF",240,0)
 . S XQA("G.LAB MESSAGING")=""
"RTN","LA7CHKF",241,0)
 . D SETUP^XQALERT
"RTN","LA7CHKF",242,0)
 Q LA7CNT
"RTN","LA7CHKF",243,0)
 ;
"RTN","LA7CHKF",244,0)
 ;
"RTN","LA7CHKF",245,0)
CHECKMG ; Check if LAB MESSAGING and LMI mail groups has active members.
"RTN","LA7CHKF",246,0)
 ; Check mail groups specified for alerts in file #62.48 are valid and have active members.
"RTN","LA7CHKF",247,0)
 ;
"RTN","LA7CHKF",248,0)
 ;ZEXCEPT: LA7ECNT,LA7IC,LA7LOG,LA7XQA
"RTN","LA7CHKF",249,0)
 ;
"RTN","LA7CHKF",250,0)
 N LA76248,LA7FIX,LA7I,LA7MGERRORS,LA7X,LA7Y,XMERR,XQA,XQAID,XQAMSG
"RTN","LA7CHKF",251,0)
 ;
"RTN","LA7CHKF",252,0)
 ; Set flag that we've check the membership today.
"RTN","LA7CHKF",253,0)
 S ^XTMP("LA7CHECKMG",0)=DT_"^"_DT_"^LAB HL7 CHECK LAB MESSAGING MAIL GROUP MEMBERS"
"RTN","LA7CHKF",254,0)
 ;
"RTN","LA7CHKF",255,0)
 K ^TMP("XMERR",$J)
"RTN","LA7CHKF",256,0)
 S XQAMSG="",LA7FIX=0,LA7MGERRORS=LA7ECNT
"RTN","LA7CHKF",257,0)
 ;
"RTN","LA7CHKF",258,0)
 ; Doucment error message returned by GOTLOCAL API when mail group does not exist.
"RTN","LA7CHKF",259,0)
 ;^TMP("XMERR",555809209,1)=39501
"RTN","LA7CHKF",260,0)
 ;^TMP("XMERR",555809209,1,"TEXT",1)=Mail group 'LMI' not found.
"RTN","LA7CHKF",261,0)
 ;^TMP("XMERR",555809209,"E",39501,1)=
"RTN","LA7CHKF",262,0)
 ;
"RTN","LA7CHKF",263,0)
 ; Mail group LAB MESSAGING has no active members
"RTN","LA7CHKF",264,0)
 I '$$GOTLOCAL^XMXAPIG("LAB MESSAGING") D
"RTN","LA7CHKF",265,0)
 . S LA7MGERRORS("LAB MESSAGING")=""
"RTN","LA7CHKF",266,0)
 . S XQAMSG="Lab Messaging - Mail group LAB MESSAGING has no active members"
"RTN","LA7CHKF",267,0)
 . I $D(^TMP("XMERR",$J,"E",39501)) S XQAMSG="Lab Messaging - Mail group LAB MESSAGING not found"
"RTN","LA7CHKF",268,0)
 . S LA7XQA("G.LMI")=""
"RTN","LA7CHKF",269,0)
 . I LA7LOG D
"RTN","LA7CHKF",270,0)
 . . I $D(^TMP("XMERR",$J,"E",39501)) D  Q
"RTN","LA7CHKF",271,0)
 . . . S XQAMSG="Lab Messaging - Mail group LAB MESSAGING not found"
"RTN","LA7CHKF",272,0)
 . . . D LOG("Mail group LAB MESSAGING not found")
"RTN","LA7CHKF",273,0)
 . . D LOG("Mail group LAB MESSAGING has no active members")
"RTN","LA7CHKF",274,0)
 . K ^TMP("XMERR",$J)
"RTN","LA7CHKF",275,0)
 E  S LA7XQA("G.LAB MESSAGING")=""
"RTN","LA7CHKF",276,0)
 ;
"RTN","LA7CHKF",277,0)
 ; Send alert to holders of mail group LMI
"RTN","LA7CHKF",278,0)
 I '$$GOTLOCAL^XMXAPIG("LMI") D
"RTN","LA7CHKF",279,0)
 . S LA7MGERRORS("LMI")=""
"RTN","LA7CHKF",280,0)
 . I XQAMSG="" S XQAMSG="Lab Messaging - Mail group LMI has no active members"
"RTN","LA7CHKF",281,0)
 . E  S XQAMSG="Lab Messaging - Mail groups LAB MESSAGING and LMI have no active members"
"RTN","LA7CHKF",282,0)
 . I LA7LOG D
"RTN","LA7CHKF",283,0)
 . . I $D(^TMP("XMERR",$J,"E",39501)) D LOG("Mail group LMI not found") Q
"RTN","LA7CHKF",284,0)
 . . D LOG("Mail group LMI has no active members")
"RTN","LA7CHKF",285,0)
 . K LA7XQA("G.LMI"),^TMP("XMERR",$J)
"RTN","LA7CHKF",286,0)
 E  S LA7XQA("G.LMI")=""
"RTN","LA7CHKF",287,0)
 ;
"RTN","LA7CHKF",288,0)
 ; Neither LAB MESSAGING or LMI mail groups have active members - send alert to holders of LRLIASON security key
"RTN","LA7CHKF",289,0)
 ; Delete previous alerts
"RTN","LA7CHKF",290,0)
 I XQAMSG'="" D
"RTN","LA7CHKF",291,0)
 . S XQAID="LA7-MESSAGE-CHECKMG"
"RTN","LA7CHKF",292,0)
 . D DEL^LA7UXQA(XQAID)
"RTN","LA7CHKF",293,0)
 . I $O(LA7XQA(""))="" M LA7XQA=^XUSEC("LRLIASON")
"RTN","LA7CHKF",294,0)
 . M XQA=LA7XQA
"RTN","LA7CHKF",295,0)
 . D SETUP^XQALERT
"RTN","LA7CHKF",296,0)
 ;
"RTN","LA7CHKF",297,0)
 S LA76248=0
"RTN","LA7CHKF",298,0)
 F  S LA76248=$O(^LAHM(62.48,LA76248)) Q:LA76248<1  D
"RTN","LA7CHKF",299,0)
 . S LA7I=0
"RTN","LA7CHKF",300,0)
 . F LA7I=$O(^LAHM(62.48,LA76248,20,LA7I)) Q:LA7I<1  D
"RTN","LA7CHKF",301,0)
 . . S LA7I(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7CHKF",302,0)
 . . S LA7Y=$G(^LAHM(62.48,LA76248,20,LA7I,0))
"RTN","LA7CHKF",303,0)
 . . I $P(LA7Y,"^",2)="" Q
"RTN","LA7CHKF",304,0)
 . . K ^TMP("XMERR",$J)
"RTN","LA7CHKF",305,0)
 . . I $$GOTLOCAL^XMXAPIG($P(LA7Y,"^",2)) Q
"RTN","LA7CHKF",306,0)
 . . I '$D(LA7MGERRORS($P(LA7Y,"^",2))) D
"RTN","LA7CHKF",307,0)
 . . . S XQAID="LA7-MESSAGE-CHECKMG-"_$P(LA7Y,"^",2)
"RTN","LA7CHKF",308,0)
 .. .  D DEL^LA7UXQA(XQAID)
"RTN","LA7CHKF",309,0)
 . . . S XQAMSG="Lab Messaging - Mail group "_$P(LA7Y,"^",2)_" has no active members"
"RTN","LA7CHKF",310,0)
 . . . I $D(^TMP("XMERR",$J,"E",39501)) S XQAMSG="Lab Messaging - Mail group "_$P(LA7Y,"^",2)_" not found"
"RTN","LA7CHKF",311,0)
 . . . K XQA
"RTN","LA7CHKF",312,0)
 . . . M XQA=LA7XQA
"RTN","LA7CHKF",313,0)
 . . . D SETUP^XQALERT
"RTN","LA7CHKF",314,0)
 . . . S LA7MGERRORS($P(LA7Y,"^",2))=""
"RTN","LA7CHKF",315,0)
 . . I LA7LOG D
"RTN","LA7CHKF",316,0)
 . . . I $D(^TMP("XMERR",$J,"E",39501)) D LOG("Configuration "_$P(LA7I(0),"^")_" alert mail group "_$P(LA7Y,"^",2)_" not found") Q
"RTN","LA7CHKF",317,0)
 . . . D LOG("Configuration "_$P(LA7I(0),"^")_" alert mail group "_$P(LA7Y,"^",2)_" has no active members")
"RTN","LA7CHKF",318,0)
 ;
"RTN","LA7CHKF",319,0)
 I LA7LOG D
"RTN","LA7CHKF",320,0)
 . S LA7MGERRORS=LA7ECNT-LA7MGERRORS
"RTN","LA7CHKF",321,0)
 . S $P(^XTMP(LA7IC,0),"^",9)=LA7MGERRORS ; Total error count
"RTN","LA7CHKF",322,0)
 ;
"RTN","LA7CHKF",323,0)
 K ^TMP("XMERR",$J)
"RTN","LA7CHKF",324,0)
 ;
"RTN","LA7CHKF",325,0)
 Q
"RTN","LA7CHKF",326,0)
 ;
"RTN","LA7CHKF",327,0)
 ;
"RTN","LA7CHKF",328,0)
INIT ; Initialize variables
"RTN","LA7CHKF",329,0)
 ;
"RTN","LA7CHKF",330,0)
 ;ZEXCEPT: LA7ECNT,LA7FIX,LA7IC,LA7LOG
"RTN","LA7CHKF",331,0)
 ;
"RTN","LA7CHKF",332,0)
 S LA7FIX=$G(LA7FIX,0) ; Set flag to fix problems 1=yes, 0=just check (default)
"RTN","LA7CHKF",333,0)
 S LA7LOG=$G(LA7LOG,0) ; Set flag to report problems, 1=yes, 0=no (default)
"RTN","LA7CHKF",334,0)
 I LA7LOG D
"RTN","LA7CHKF",335,0)
 . F  S LA7IC="LA7IC^"_$$NOW^XLFDT L +^XTMP(LA7IC):9999 Q:'$D(^XTMP(LA7IC))  L -^XTMP(LA7IC) H 1
"RTN","LA7CHKF",336,0)
 . S DT=$$DT^XLFDT
"RTN","LA7CHKF",337,0)
 . S ^XTMP(LA7IC,0)=$$FMADD^XLFDT(DT,7)_"^"_DT_"^Lab Messaging Integrity Checker"_"^"_$$NOW^XLFDT
"RTN","LA7CHKF",338,0)
 ;
"RTN","LA7CHKF",339,0)
 ; Count of number of errors
"RTN","LA7CHKF",340,0)
 S LA7ECNT=0
"RTN","LA7CHKF",341,0)
 ;
"RTN","LA7CHKF",342,0)
 Q
"RTN","LA7CHKFP")
0^98^B16811133
"RTN","LA7CHKFP",1,0)
LA7CHKFP ;DALOI/JMC - Print Lab Messaging File Integrity Report ;11/16/11  10:54
"RTN","LA7CHKFP",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,74**;Sep 27, 1994;Build 229
"RTN","LA7CHKFP",3,0)
 ;
"RTN","LA7CHKFP",4,0)
 ;This routine prints file integrity report for Lab Messaging.
"RTN","LA7CHKFP",5,0)
 ;
"RTN","LA7CHKFP",6,0)
EN ; Select report to print
"RTN","LA7CHKFP",7,0)
 ;
"RTN","LA7CHKFP",8,0)
 ;ZEXCEPT: IOF,IOM,IOSL,IOST,ZTQUEUED,ZTREQ
"RTN","LA7CHKFP",9,0)
 ;
"RTN","LA7CHKFP",10,0)
 N %ZIS,LA7CNT,LA7DA,LA7DT,LA7ECNT,LA7EXIT,LA7IC,LA7NOW,LA7QUIT,LA7TCNT,POP
"RTN","LA7CHKFP",11,0)
 ;
"RTN","LA7CHKFP",12,0)
 K ^TMP($J,"LA7ICLIST")
"RTN","LA7CHKFP",13,0)
 D HED1
"RTN","LA7CHKFP",14,0)
 S LA7IC="LA7IC",(LA7CNT,LA7DA,LA7QUIT)=0
"RTN","LA7CHKFP",15,0)
 F  S LA7IC=$O(^XTMP(LA7IC)) Q:LA7IC=""!($P(LA7IC,"^")'="LA7IC")  D  Q:LA7QUIT!(LA7DA)
"RTN","LA7CHKFP",16,0)
 . N LA7X
"RTN","LA7CHKFP",17,0)
 . S LA7DT=$$FMTE^XLFDT($P(LA7IC,"^",2))
"RTN","LA7CHKFP",18,0)
 . S LA7CNT=LA7CNT+1,^TMP($J,"LA7ICLIST",LA7CNT)=LA7DT_"^"_LA7IC
"RTN","LA7CHKFP",19,0)
 . S LA7X=^XTMP(LA7IC,0)
"RTN","LA7CHKFP",20,0)
 . S LA7ECNT=$S($P(LA7X,"^",7):$P(LA7X,"^",7),1:"NO")_" file errors"
"RTN","LA7CHKFP",21,0)
 . S LA7ECNT=LA7ECNT_" / "_$S($P(LA7X,"^",9):$P(LA7X,"^",9),1:"NO")_" mail group errors"
"RTN","LA7CHKFP",22,0)
 . I '$P(LA7X,"^",5) D
"RTN","LA7CHKFP",23,0)
 . . L +^XTMP(LA7IC,0):1
"RTN","LA7CHKFP",24,0)
 . . I $T L -^XTMP(LA7IC,0) S LA7ECNT=LA7ECNT_" - Did NOT finish" Q
"RTN","LA7CHKFP",25,0)
 . . S LA7ECNT=LA7ECNT_" - Still running"
"RTN","LA7CHKFP",26,0)
 . W !,$J(LA7CNT,3),"  ",LA7DT,"  [",LA7ECNT,"]"
"RTN","LA7CHKFP",27,0)
 . I $Y+4>IOSL D
"RTN","LA7CHKFP",28,0)
 . . D ASK
"RTN","LA7CHKFP",29,0)
 . . I LA7QUIT Q
"RTN","LA7CHKFP",30,0)
 . . D HED1
"RTN","LA7CHKFP",31,0)
 I LA7QUIT Q
"RTN","LA7CHKFP",32,0)
 I 'LA7CNT D EN^DDIOL("No reports on file!","","!?5")
"RTN","LA7CHKFP",33,0)
 I 'LA7DA D ASK
"RTN","LA7CHKFP",34,0)
 I 'LA7DA Q
"RTN","LA7CHKFP",35,0)
 S LA7IC=$P($G(^TMP($J,"LA7ICLIST",LA7DA)),"^",2,3)
"RTN","LA7CHKFP",36,0)
 ;
"RTN","LA7CHKFP",37,0)
DEV ; Ask device to print report.
"RTN","LA7CHKFP",38,0)
 K %ZIS
"RTN","LA7CHKFP",39,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LA7CHKFP",40,0)
 I POP D HOME^%ZIS Q
"RTN","LA7CHKFP",41,0)
 I $D(IO("Q")) D  Q
"RTN","LA7CHKFP",42,0)
 . N MSG,ZTDESC,ZTDTH,ZTIO,ZTSK,ZTRTN,ZTSAVE
"RTN","LA7CHKFP",43,0)
 . S ZTRTN="DQ^LA7CHKFP",ZTDESC="Print LA7 Messaging Integrity Check"
"RTN","LA7CHKFP",44,0)
 . S ZTSAVE("LA7IC")=""
"RTN","LA7CHKFP",45,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LA7CHKFP",46,0)
 . S MSG="Task "_$S($G(ZTSK):"",1:"NOT ")_"Queued"
"RTN","LA7CHKFP",47,0)
 . D EN^DDIOL(MSG,"","!")
"RTN","LA7CHKFP",48,0)
 ;
"RTN","LA7CHKFP",49,0)
 ;
"RTN","LA7CHKFP",50,0)
DQ ; Entry point from taskman
"RTN","LA7CHKFP",51,0)
 N LA7ECNT,LA7EDT,LA7FIX,LA7I,LA7LINE,LA7PAGE,LA7RDT,LA7SDT,LA7X,X,Y
"RTN","LA7CHKFP",52,0)
 U IO
"RTN","LA7CHKFP",53,0)
 S $P(LA7LINE,"-",IOM)=""
"RTN","LA7CHKFP",54,0)
 S (LA7EXIT,LA7PAGE)=0
"RTN","LA7CHKFP",55,0)
 S LA7X=$G(^XTMP(LA7IC,0))
"RTN","LA7CHKFP",56,0)
 S LA7RDT=$$FMTE^XLFDT($P(LA7IC,"^",2))
"RTN","LA7CHKFP",57,0)
 S LA7SDT=$P(LA7X,"^",4)_"^"_$$FMTE^XLFDT($P(LA7X,"^",4))
"RTN","LA7CHKFP",58,0)
 S LA7EDT=$P(LA7X,"^",5)_"^"_$$FMTE^XLFDT($P(LA7X,"^",5))
"RTN","LA7CHKFP",59,0)
 S LA7TCNT=+$P(LA7X,"^",6) ; Count of # of entries checked
"RTN","LA7CHKFP",60,0)
 S LA7ECNT=+$P(LA7X,"^",7) ; Count of number of errors
"RTN","LA7CHKFP",61,0)
 S LA7FIX=$P(LA7X,"^",8) ; Flag if fix option was run
"RTN","LA7CHKFP",62,0)
 S LA7NOW=$$NOW^XLFDT
"RTN","LA7CHKFP",63,0)
 S $P(LA7NOW,"^",2)=$$FMTE^XLFDT(LA7NOW)
"RTN","LA7CHKFP",64,0)
 D HED Q:$G(LA7EXIT)
"RTN","LA7CHKFP",65,0)
 I '$O(^XTMP(LA7IC,0)) W !,"    NO entries to print"
"RTN","LA7CHKFP",66,0)
 S LA7I=0
"RTN","LA7CHKFP",67,0)
 F  S LA7I=$O(^XTMP(LA7IC,LA7I)) Q:'LA7I  D  Q:$G(LA7EXIT)
"RTN","LA7CHKFP",68,0)
 . I $Y+5>IOSL D HED Q:$G(LA7EXIT)
"RTN","LA7CHKFP",69,0)
 . W !,^XTMP(LA7IC,LA7I)
"RTN","LA7CHKFP",70,0)
 I '$G(LA7EXIT) D
"RTN","LA7CHKFP",71,0)
 . I $Y+5>IOSL D HED Q:$G(LA7EXIT)
"RTN","LA7CHKFP",72,0)
 . W !!,"   Total number of entries: ",LA7TCNT
"RTN","LA7CHKFP",73,0)
 . W !,"    Total number of errors: ",LA7ECNT
"RTN","LA7CHKFP",74,0)
 . W !," Integrity Checker Started: ",$P(LA7SDT,"^",2)
"RTN","LA7CHKFP",75,0)
 . W !,"Integrity Checker Finished: ",$P(LA7EDT,"^",2)
"RTN","LA7CHKFP",76,0)
 . I LA7FIX>0,LA7ECNT>0 D
"RTN","LA7CHKFP",77,0)
 . . W !!,"***Integrity Checker (IC) ran with fix option***"
"RTN","LA7CHKFP",78,0)
 . . W !,"***Recommend that IC be re-run to verify fixes***"
"RTN","LA7CHKFP",79,0)
 I '$G(LA7EXIT),$E(IOST,1,2)="C-" D TERM
"RTN","LA7CHKFP",80,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7CHKFP",81,0)
 E  W:$E(IOST,1,2)="P-" @IOF D ^%ZISC
"RTN","LA7CHKFP",82,0)
 Q
"RTN","LA7CHKFP",83,0)
 ;
"RTN","LA7CHKFP",84,0)
 ;
"RTN","LA7CHKFP",85,0)
TERM ;
"RTN","LA7CHKFP",86,0)
 ;
"RTN","LA7CHKFP",87,0)
 ;ZEXCEPT: IOF,LA7EXIT,LA7PAGE
"RTN","LA7CHKFP",88,0)
 ;
"RTN","LA7CHKFP",89,0)
 I 'LA7PAGE W @IOF Q
"RTN","LA7CHKFP",90,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7CHKFP",91,0)
 W !
"RTN","LA7CHKFP",92,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT) LA7EXIT=1
"RTN","LA7CHKFP",93,0)
 Q
"RTN","LA7CHKFP",94,0)
 ;
"RTN","LA7CHKFP",95,0)
 ;
"RTN","LA7CHKFP",96,0)
ASK ; Ask for report to print
"RTN","LA7CHKFP",97,0)
 ;
"RTN","LA7CHKFP",98,0)
 ;ZEXCEPT: LA7CNT,LA7DA,LA7QUIT
"RTN","LA7CHKFP",99,0)
 ;
"RTN","LA7CHKFP",100,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7CHKFP",101,0)
 W !
"RTN","LA7CHKFP",102,0)
 S DIR(0)="NO^1:"_LA7CNT_":0",DIR("A")="Select Report"
"RTN","LA7CHKFP",103,0)
 D ^DIR
"RTN","LA7CHKFP",104,0)
 I $D(DIROUT) S LA7QUIT=1 Q
"RTN","LA7CHKFP",105,0)
 I Y S LA7DA=Y
"RTN","LA7CHKFP",106,0)
 Q
"RTN","LA7CHKFP",107,0)
 ;
"RTN","LA7CHKFP",108,0)
 ;
"RTN","LA7CHKFP",109,0)
HED1 ; Print selection header
"RTN","LA7CHKFP",110,0)
 ;
"RTN","LA7CHKFP",111,0)
 ;ZEXCEPT: IOF,IOM
"RTN","LA7CHKFP",112,0)
 ;
"RTN","LA7CHKFP",113,0)
 W @IOF,$$CJ^XLFSTR("--- Lab Messaging Integrity Checker Report ---",IOM),!
"RTN","LA7CHKFP",114,0)
 Q
"RTN","LA7CHKFP",115,0)
 ;
"RTN","LA7CHKFP",116,0)
 ;
"RTN","LA7CHKFP",117,0)
HED ; Print header
"RTN","LA7CHKFP",118,0)
 ;
"RTN","LA7CHKFP",119,0)
 ;ZEXCEPT: IOF,IOM,IOST,LA7LINE,LA7NOW,LA7PAGE,LA7RDT
"RTN","LA7CHKFP",120,0)
 ;
"RTN","LA7CHKFP",121,0)
 I $E(IOST,1,2)="C-" D TERM Q:$G(LA7EXIT)
"RTN","LA7CHKFP",122,0)
 I LA7PAGE W @IOF
"RTN","LA7CHKFP",123,0)
 S LA7PAGE=LA7PAGE+1
"RTN","LA7CHKFP",124,0)
 W !,"Lab Messaging File Integrity Checker Report",?IOM-30,"Printed: ",$P(LA7NOW,"^",2)
"RTN","LA7CHKFP",125,0)
 W !,"For Date: ",LA7RDT,?IOM-27,"Page: ",LA7PAGE
"RTN","LA7CHKFP",126,0)
 W !,LA7LINE,!
"RTN","LA7CHKFP",127,0)
 Q
"RTN","LA7HDR")
0^95^B43741529
"RTN","LA7HDR",1,0)
LA7HDR ;DALOI/JMC - LAB HDR ORU (Observation Result) message builder ;12/08/09  16:39
"RTN","LA7HDR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74**;Sep 27, 1994;Build 229
"RTN","LA7HDR",3,0)
 ;
"RTN","LA7HDR",4,0)
 ; Reference to variable DIQUIET supported by DBIA #2098
"RTN","LA7HDR",5,0)
 ;
"RTN","LA7HDR",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7HDR",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7HDR",8,0)
 Q
"RTN","LA7HDR",9,0)
 ;
"RTN","LA7HDR",10,0)
 ;
"RTN","LA7HDR",11,0)
QUEUE ;
"RTN","LA7HDR",12,0)
 ; Called by protocol LA7 LAB RESULTS ACTION
"RTN","LA7HDR",13,0)
 ; and below (APQ) for AP subscripts
"RTN","LA7HDR",14,0)
 ; Call with:
"RTN","LA7HDR",15,0)
 ;  LRAA   - accession area (CH,MI subscript)
"RTN","LA7HDR",16,0)
 ;  LRAD   - accession date (CH,MI subscript)
"RTN","LA7HDR",17,0)
 ;  LRAN   - accession number (CH,MI subscript)
"RTN","LA7HDR",18,0)
 ;  LRIDT  - inverse date/time (collection date/time)
"RTN","LA7HDR",19,0)
 ;  LRSS   - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7HDR",20,0)
 ;  LRDFN  - IEN in LAB DATA file (#63)
"RTN","LA7HDR",21,0)
 ;  LRSPEC - specimen
"RTN","LA7HDR",22,0)
 ;  LRSB (Optional) - array of Chemistry results
"RTN","LA7HDR",23,0)
 ;                      ex. glucose LRSB(2)=LR NODE
"RTN","LA7HDR",24,0)
 ;
"RTN","LA7HDR",25,0)
 ;ZEXCEPT: LRAA,LRAD,LRAN,LRDFN,LRNIFN,LRSA,LRSB,LRTMPO
"RTN","LA7HDR",26,0)
 ;
"RTN","LA7HDR",27,0)
 N I,LA76248,LA7V,LA7VCH,LASTYP,LAVERR,X,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7HDR",28,0)
 ;
"RTN","LA7HDR",29,0)
 ; If no accession area then quit - not much we can do.
"RTN","LA7HDR",30,0)
 I $G(LRAA)="" Q
"RTN","LA7HDR",31,0)
 ;
"RTN","LA7HDR",32,0)
 ; If LRSS not defined then set from file #68
"RTN","LA7HDR",33,0)
 I $G(LRSS)="" N LRSS S LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LA7HDR",34,0)
 ;
"RTN","LA7HDR",35,0)
 ; Not supporting AU and BB at this time (or if LRSS is null).
"RTN","LA7HDR",36,0)
 I "AUBB"[LRSS Q
"RTN","LA7HDR",37,0)
 ;
"RTN","LA7HDR",38,0)
 ; Check if CPRS has called us more than once for this accession.
"RTN","LA7HDR",39,0)
 ; Results are processed on first call.
"RTN","LA7HDR",40,0)
 I $D(LRTMPO("LRIFN")),$G(LRNIFN)>1 Q
"RTN","LA7HDR",41,0)
 I LRSS="MI",$D(LRTMPO("LRIFN")),$G(^TMP("LA7HDR",$J))=(LRAA_"^"_LRAD_"^"_LRAN) K ^TMP("LA7HDR",$J) Q
"RTN","LA7HDR",42,0)
 ;
"RTN","LA7HDR",43,0)
 ; Quit if test patient on a production account.
"RTN","LA7HDR",44,0)
 I $$TESTPAT^VADPT($P($G(^LR(LRDFN,0)),"^",3)),$$PROD^XUPROD(0) Q
"RTN","LA7HDR",45,0)
 ;
"RTN","LA7HDR",46,0)
 ; Check for configuration LA7HDR in 62.48 to see if turned on and site wants subscribers to receive HL7 messages for this event.
"RTN","LA7HDR",47,0)
 ; Task HL7 message building and transmission.
"RTN","LA7HDR",48,0)
 ; HDR-2 will be using HL7 messaging, no call to VDEF API.
"RTN","LA7HDR",49,0)
 S LA76248=$O(^LAHM(62.48,"B","LA7HDR",0))
"RTN","LA7HDR",50,0)
 I 'LA76248 Q
"RTN","LA7HDR",51,0)
 I '$P(^LAHM(62.48,LA76248,0),"^",3) Q  ; not active
"RTN","LA7HDR",52,0)
 ;
"RTN","LA7HDR",53,0)
 S ZTRTN="BUILD^LA7HDR",ZTDTH=$H,ZTIO="",ZTDESC="Tasked Lab HL7 HDR ORU Build"
"RTN","LA7HDR",54,0)
 F I="LRAA","LRAD","LRAN","LRIDT","LRSS","LRDFN" S ZTSAVE(I)=""
"RTN","LA7HDR",55,0)
 I LRSS="CH" D
"RTN","LA7HDR",56,0)
 . S LA7V=0
"RTN","LA7HDR",57,0)
 . F  S LA7V=$O(LRSB(LA7V)) Q:'LA7V  D
"RTN","LA7HDR",58,0)
 . . I $P(LRSB(LA7V),"^")="" Q
"RTN","LA7HDR",59,0)
 . . S LA7VCH(LA7V)=LRSB(LA7V)
"RTN","LA7HDR",60,0)
 . . I $D(LRSA(LA7V,2)) S LA7VCH(LA7V,1)="C"
"RTN","LA7HDR",61,0)
 . S ZTSAVE("LA7VCH*")="",ZTSAVE("LRSPEC")=""
"RTN","LA7HDR",62,0)
 I LRSS="CH",'$D(LA7VCH) Q
"RTN","LA7HDR",63,0)
 S ZTSAVE("LA7MTYP")="ORU"
"RTN","LA7HDR",64,0)
 D ^%ZTLOAD
"RTN","LA7HDR",65,0)
 I $G(ZTSK)'>0 Q
"RTN","LA7HDR",66,0)
 ;
"RTN","LA7HDR",67,0)
 ; Set flag to handle CPRS calling us multiple times during verifying session for each ordered test.
"RTN","LA7HDR",68,0)
 S ^TMP("LA7HDR",$J)=LRAA_"^"_LRAD_"^"_LRAN
"RTN","LA7HDR",69,0)
 ;
"RTN","LA7HDR",70,0)
 Q
"RTN","LA7HDR",71,0)
 ;
"RTN","LA7HDR",72,0)
 ;
"RTN","LA7HDR",73,0)
APQ(LRDFN,LRSS,LRIDT) ; Anatomic Pathology (CY,EM,SP) subscript entry point from FileMan cross-reference on specific fields.
"RTN","LA7HDR",74,0)
 ; Called by field #.11 in sub-files #63.02, 63.08, 63.09 - AP does not work through CPRS extended action protocols
"RTN","LA7HDR",75,0)
 ;
"RTN","LA7HDR",76,0)
 ; Only send file #2 patients to HDR
"RTN","LA7HDR",77,0)
 I $P($G(^LR(LRDFN,0)),"^",2)'=2 Q
"RTN","LA7HDR",78,0)
 ;
"RTN","LA7HDR",79,0)
 D QUEUE
"RTN","LA7HDR",80,0)
 Q
"RTN","LA7HDR",81,0)
 ;
"RTN","LA7HDR",82,0)
 ;
"RTN","LA7HDR",83,0)
BUILD ; Tasked entry point to build HL7 message to VA's HDR
"RTN","LA7HDR",84,0)
 ; Tasked from above.
"RTN","LA7HDR",85,0)
 ;
"RTN","LA7HDR",86,0)
 ;ZEXCEPT: LA7MTYP,LA7VCH,LRAA,LRAD,LRAN,LRDFN,LRIDT,LRSPEC,LRSS
"RTN","LA7HDR",87,0)
 ;
"RTN","LA7HDR",88,0)
 N DIQUIET,FDA,GBL,HL,HLQ,PNM,RUID,SITE
"RTN","LA7HDR",89,0)
 N LA76248,LA76249,LA76249P,LA7CODE,LA7DT,LA7ERR,LA7EVNT,LA7ID,LA7INTYP,LA7LNCVR,LA7LOAD,LA7ND,LA7NOMSG,LA7NVAF,LA7RSITE,LA7X,LA7Y,LRQUIET,LRNLT,LRUID
"RTN","LA7HDR",90,0)
 ;
"RTN","LA7HDR",91,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7HDR",92,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LA7HDR",93,0)
 ; Insure DILOCKTM is defined
"RTN","LA7HDR",94,0)
 D DT^DICRW
"RTN","LA7HDR",95,0)
 ;
"RTN","LA7HDR",96,0)
 S (LA7ERR,LA7NVAF)=0,LA7EVNT="LA7 LAB RESULTS AVAILABLE (EVN)"
"RTN","LA7HDR",97,0)
 ; Create 62.49 entry but don't store message text.
"RTN","LA7HDR",98,0)
 S LA7NOMSG=2
"RTN","LA7HDR",99,0)
 ;
"RTN","LA7HDR",100,0)
 I $G(LA7MTYP)="" S LA7MTYP="ORU"
"RTN","LA7HDR",101,0)
 ;
"RTN","LA7HDR",102,0)
 S LA7X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LA7HDR",103,0)
 S LRUID=$P(LA7X,"^"),RUID=$P(LA7X,"^",5)
"RTN","LA7HDR",104,0)
 I LRUID="" S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","LA7HDR",105,0)
 ;
"RTN","LA7HDR",106,0)
 S (LA7RSITE,SITE)="LA7HDR",LA7ID=LA7RSITE_"-O-",LA76248=$O(^LAHM(62.48,"B",LA7RSITE,0))
"RTN","LA7HDR",107,0)
 ; No entry in 62.48 - *** Need to add error logging ****
"RTN","LA7HDR",108,0)
 I 'LA76248 Q
"RTN","LA7HDR",109,0)
 I '$P(^LAHM(62.48,LA76248,0),"^",3) Q  ; not active
"RTN","LA7HDR",110,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7HDR",111,0)
 ;
"RTN","LA7HDR",112,0)
 ; Determine if patient needs to have initial load sent to HDR.
"RTN","LA7HDR",113,0)
 ; *** need to establish location of HDR flag in 63***
"RTN","LA7HDR",114,0)
 S LA7LOAD=0
"RTN","LA7HDR",115,0)
 ;
"RTN","LA7HDR",116,0)
 ; Create new outgoing entry in 62.49
"RTN","LA7HDR",117,0)
 S (LA76249,LA76249P)=$$INIT6249^LA7VHLU
"RTN","LA7HDR",118,0)
 I LA76249<1 D  Q
"RTN","LA7HDR",119,0)
 . ; Log entry creation error
"RTN","LA7HDR",120,0)
 ;
"RTN","LA7HDR",121,0)
 ; Lock record while building message.
"RTN","LA7HDR",122,0)
 F  L +^LR(LRDFN,LRSS,LRIDT,0):DILOCKTM Q:$T  H 5
"RTN","LA7HDR",123,0)
 ;
"RTN","LA7HDR",124,0)
 K ^TMP("LA7-QRY",$J)
"RTN","LA7HDR",125,0)
 ;
"RTN","LA7HDR",126,0)
 ; Check "CH" test results for ordered tests.
"RTN","LA7HDR",127,0)
 ; Per Change Control Board decision to perform lab test's result aggregation on VistA -
"RTN","LA7HDR",128,0)
 ;   - besides test verified during this session include all other test results stored with this specimen.
"RTN","LA7HDR",129,0)
 I LRSS="CH" D
"RTN","LA7HDR",130,0)
 . N FDA,FDAIEN,LA7ER,LA7VT,LRSB
"RTN","LA7HDR",131,0)
 . S LA7Y=1
"RTN","LA7HDR",132,0)
 . F  S LA7Y=$O(^LR(LRDFN,LRSS,LRIDT,LA7Y)) Q:'LA7Y  D
"RTN","LA7HDR",133,0)
 . . I '$D(LA7VCH(LA7Y)) S LA7VCH(LA7Y)=^LR(LRDFN,LRSS,LRIDT,LA7Y)
"RTN","LA7HDR",134,0)
 . . I $P(LA7VCH(LA7Y),"^")="" Q
"RTN","LA7HDR",135,0)
 . . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LA7Y,$P(LA7VCH(LA7Y),"^",3),LRSPEC)
"RTN","LA7HDR",136,0)
 . . S LRSB=LA7Y S:$G(LA7VCH(LA7Y,1))="C" $P(LRSB,"^",2)="C"
"RTN","LA7HDR",137,0)
 . . D STORE^LA7QRY2
"RTN","LA7HDR",138,0)
 . . K FDA,FDAIEN,LA7ER
"RTN","LA7HDR",139,0)
 . . S FDA(2,62.49162,"+2,"_LA76249_",",.01)=LRSB
"RTN","LA7HDR",140,0)
 . . I $G(LA7VCH(LA7Y,1))="C" S FDA(2,62.49162,"+2,"_LA76249_",",.02)="C"
"RTN","LA7HDR",141,0)
 . . S FDAIEN(1)=LA76249
"RTN","LA7HDR",142,0)
 . . D UPDATE^DIE("","FDA(2)","FDAIEN","LA7ER(2)")
"RTN","LA7HDR",143,0)
 . . D CLEAN^DILF
"RTN","LA7HDR",144,0)
 ;
"RTN","LA7HDR",145,0)
 I "CYEMSP"[LRSS D
"RTN","LA7HDR",146,0)
 . S LRSB=.012,LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"","")
"RTN","LA7HDR",147,0)
 . D STORE^LA7QRY2
"RTN","LA7HDR",148,0)
 ;
"RTN","LA7HDR",149,0)
 I LRSS="MI" D
"RTN","LA7HDR",150,0)
 . S LRSPEC=$P(^LR(LRDFN,LRSS,LRIDT,0),"^",5)
"RTN","LA7HDR",151,0)
 . S LA7ND=0
"RTN","LA7HDR",152,0)
 . F LA7ND=1,5,8,11,16 I $D(^LR(LRDFN,LRSS,LRIDT,LA7ND)) D
"RTN","LA7HDR",153,0)
 . . I $P(^LR(LRDFN,LRSS,LRIDT,LA7ND),"^",2)="" Q  ; If no status -  skip
"RTN","LA7HDR",154,0)
 . . I $D(^TMP("LA7-QRY",$J,LRDFN,LRIDT,LRSS)) Q  ; Already marked this report to send
"RTN","LA7HDR",155,0)
 . . S LRSB=$S(LA7ND=1:11,LA7ND=5:14,LA7ND=8:18,LA7ND=11:22,LA7ND=16:33,1:11)
"RTN","LA7HDR",156,0)
 . . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"",LRSPEC)
"RTN","LA7HDR",157,0)
 . . D STORE^LA7QRY2
"RTN","LA7HDR",158,0)
 ;
"RTN","LA7HDR",159,0)
 S GBL="^TMP(""HLS"","_$J_")"
"RTN","LA7HDR",160,0)
 D STARTMSG^LA7VHLU(LA7EVNT,.LA76249,LA7NOMSG)
"RTN","LA7HDR",161,0)
 I $G(HL) S LA7ERR=$TR(HL,"^","-")
"RTN","LA7HDR",162,0)
 S (HLQ,HL("Q"))=""
"RTN","LA7HDR",163,0)
 D CHKACC^LA7VMSG
"RTN","LA7HDR",164,0)
 I 'LA7ERR D
"RTN","LA7HDR",165,0)
 . I LA7LOAD D
"RTN","LA7HDR",166,0)
 . . N LA7EDT,LA7SC,LA7SDT,LA7SPEC,LRIDT,LRSS,LRUID
"RTN","LA7HDR",167,0)
 . . S (LA7SC,LA7SPEC)="*",LA7SDT=$$FMADD^XLFDT(DT,-730,0,0,0),LA7EDT=DT
"RTN","LA7HDR",168,0)
 . . D BCD^LA7QRY2
"RTN","LA7HDR",169,0)
 . D BUILDMSG^LA7QRY1
"RTN","LA7HDR",170,0)
 . D SENDMSG^LA7VMSG1
"RTN","LA7HDR",171,0)
 S LA7ID=LA7RSITE_"-O-"
"RTN","LA7HDR",172,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,LRUID,1)
"RTN","LA7HDR",173,0)
 D SETID^LA7VHLU1(LA76249,"",LRUID,0)
"RTN","LA7HDR",174,0)
 I $G(PNM)="" D DEM^LRX
"RTN","LA7HDR",175,0)
 I PNM'="" D
"RTN","LA7HDR",176,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,PNM,0)
"RTN","LA7HDR",177,0)
 . D SETID^LA7VHLU1(LA76249,"",PNM,0)
"RTN","LA7HDR",178,0)
 D UPDT6249^LA7VORM1
"RTN","LA7HDR",179,0)
 ;
"RTN","LA7HDR",180,0)
 ; File additional data
"RTN","LA7HDR",181,0)
 S FDA(1,62.49,LA76249_",",151)=LRUID
"RTN","LA7HDR",182,0)
 S FDA(1,62.49,LA76249_",",156)=LRIDT
"RTN","LA7HDR",183,0)
 S FDA(1,62.49,LA76249_",",157)=LRSS
"RTN","LA7HDR",184,0)
 S FDA(1,62.49,LA76249_",",158)=LRDFN
"RTN","LA7HDR",185,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7HDR",186,0)
 D CLEAN^DILF
"RTN","LA7HDR",187,0)
 ;
"RTN","LA7HDR",188,0)
 ; Release locks on entries.
"RTN","LA7HDR",189,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7HDR",190,0)
 L -^LR(LRDFN,LRSS,LRIDT,0)
"RTN","LA7HDR",191,0)
 ;
"RTN","LA7HDR",192,0)
 ; Cleanup
"RTN","LA7HDR",193,0)
 K LA7ND,LRUID,LRNLT,LRIDT,LRSS,LRDFN,LA7VCH,LA7MTYP
"RTN","LA7HDR",194,0)
 D EXIT^LA7HDR1
"RTN","LA7HDR",195,0)
 Q
"RTN","LA7HDR",196,0)
 ;
"RTN","LA7HDR",197,0)
 ;
"RTN","LA7HDR",198,0)
RTR(LA7SS) ;
"RTN","LA7HDR",199,0)
 ; Call with LA7SS = list of subscripts that HDR wants separated by ";"
"RTN","LA7HDR",200,0)
 ;                   (LA7SS="CH;MI;EM")
"RTN","LA7HDR",201,0)
 ;
"RTN","LA7HDR",202,0)
 ; Setup link and subscriber array for HL7 HDR message generation
"RTN","LA7HDR",203,0)
 ; Determine if HDR wants to receive lab results for this subscript
"RTN","LA7HDR",204,0)
 ; Called by subscriber router protocol LA7 LAB RESULTS TO HDR (SUB)
"RTN","LA7HDR",205,0)
 ; Check outgoing message and find OBR segment to determine Laboratory
"RTN","LA7HDR",206,0)
 ;  subscript this result is associated with and if it's contained in
"RTN","LA7HDR",207,0)
 ;  the LA7SS subscript list.
"RTN","LA7HDR",208,0)
 ;
"RTN","LA7HDR",209,0)
 ;ZEXCEPT: HL,HLL,HLNEXT,HLNODE
"RTN","LA7HDR",210,0)
 ;
"RTN","LA7HDR",211,0)
 N LA7I,LA7SEG,LA7VI,LA7VJ,LA7X,LRSS,LRX
"RTN","LA7HDR",212,0)
 ;
"RTN","LA7HDR",213,0)
 S LRSS=""
"RTN","LA7HDR",214,0)
 F LA7VI=1:1 X HLNEXT Q:HLQUIT'>0  D  Q:LRSS'=""
"RTN","LA7HDR",215,0)
 . I $E(HLNODE,1,3)'="OBR" Q
"RTN","LA7HDR",216,0)
 . S LA7SEG(0)=HLNODE
"RTN","LA7HDR",217,0)
 . S LA7VJ=0
"RTN","LA7HDR",218,0)
 . F  S LA7VJ=$O(HLNODE(LA7VJ)) Q:'LA7VJ  S LA7SEG(LA7VJ)=HLNODE(LA7VJ)
"RTN","LA7HDR",219,0)
 . S LRX=$$P^LA7VHLU(.LA7SEG,21,HL("FS")),LRX=$$UNESC^LA7VHLU3(LRX,HL("FS")_HL("ECH"))
"RTN","LA7HDR",220,0)
 . S LRSS=$P(LRX,"^",2)
"RTN","LA7HDR",221,0)
 ;
"RTN","LA7HDR",222,0)
 F LA7I=1:1 S LA7X=$P(LA7SS,";",LA7I) Q:LA7X=""  D  Q:LA7X=""
"RTN","LA7HDR",223,0)
 . I LA7X=LRSS S HLL("LINKS",1)="LA7 LAB RESULTS TO HDR (SUB)^VDEFVIE4",LA7X=""
"RTN","LA7HDR",224,0)
 Q
"RTN","LA7HDR",225,0)
 ;
"RTN","LA7HDR",226,0)
 ;
"RTN","LA7HDR",227,0)
HDRLOAD(LA7SDT,LA7EDT,LA7LIMIT,LA7EVENT) ; Load patient's historical lab results to HDR (Health Data Repository).
"RTN","LA7HDR",228,0)
 ; Call with LA7SDT = start date of data extraction in FileMan format
"RTN","LA7HDR",229,0)
 ;           LA7EDT = end date of data extraction in FileMan format
"RTN","LA7HDR",230,0)
 ;         LA7LIMIT = # of messages to create this session (default =1000)
"RTN","LA7HDR",231,0)
 ;         LA7EVENT = name of HL7 event protocol to transmit messages
"RTN","LA7HDR",232,0)
 ;
"RTN","LA7HDR",233,0)
 D HDRLOAD^LA7HDR1
"RTN","LA7HDR",234,0)
 Q
"RTN","LA7HDR",235,0)
 ;
"RTN","LA7HDR",236,0)
 ;
"RTN","LA7HDR",237,0)
RECOVER ; Recover failed transmissions or message building
"RTN","LA7HDR",238,0)
 ; Called by option Recover/Transmit Lab HDR Result Messages [LA7 HDR RECOVER]
"RTN","LA7HDR",239,0)
 ;
"RTN","LA7HDR",240,0)
 D RECOVER^LA7HDR1
"RTN","LA7HDR",241,0)
 Q
"RTN","LA7LOG")
0^56^B28186604
"RTN","LA7LOG",1,0)
LA7LOG ;DALOI/STAFF - Log events and errors from Lab Messaging ;11/16/11  12:14
"RTN","LA7LOG",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**17,27,67,74**;Sep 27, 1994;Build 229
"RTN","LA7LOG",3,0)
 ;
"RTN","LA7LOG",4,0)
 QUIT
"RTN","LA7LOG",5,0)
 ;
"RTN","LA7LOG",6,0)
CREATE(LA762485,LA7FLAG) ;
"RTN","LA7LOG",7,0)
 ; Creates an entry in the log file to record events or errors
"RTN","LA7LOG",8,0)
 ; while processing messages.  The calling routine passes the 
"RTN","LA7LOG",9,0)
 ; ien for a bulletin in file 62.485.
"RTN","LA7LOG",10,0)
 ; Requires the variables:
"RTN","LA7LOG",11,0)
 ; LA762485 = 'ien of bulletin in 62.485'
"RTN","LA7LOG",12,0)
 ; LA76248  = 'ien of config in 62.48 or null if none is defined'
"RTN","LA7LOG",13,0)
 ; LA7FLAG  = 1 (return error msg text)
"RTN","LA7LOG",14,0)
 ;
"RTN","LA7LOG",15,0)
 ; logging turned off
"RTN","LA7LOG",16,0)
 ;I $G(LA7FLAG),'$P($G(^LAHM(62.48,+LA76248,0)),U,4) Q ""
"RTN","LA7LOG",17,0)
 ;I '$P($G(^LAHM(62.48,+LA76248,0)),U,4) Q
"RTN","LA7LOG",18,0)
 ;
"RTN","LA7LOG",19,0)
 N DA,DIE,DR,X,Y,DIERR
"RTN","LA7LOG",20,0)
 N LA7,LA7DT,LA7NOW,LA7TIM,LA7TXT,LOGIT
"RTN","LA7LOG",21,0)
 S LOGIT=$P($G(^LAHM(62.48,+LA76248,0)),U,4)
"RTN","LA7LOG",22,0)
 ;
"RTN","LA7LOG",23,0)
 ; change status to error.
"RTN","LA7LOG",24,0)
 I $G(LA76249)>0 D
"RTN","LA7LOG",25,0)
 . N LAFDA,LA7DIE
"RTN","LA7LOG",26,0)
 . S LAFDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7LOG",27,0)
 . D FILE^DIE("","LAFDA(1)","LA7DIE(1)")
"RTN","LA7LOG",28,0)
 ;
"RTN","LA7LOG",29,0)
 I 'LOGIT Q:$Q!($G(LA7FLAG)) ""  Q  ;
"RTN","LA7LOG",30,0)
 ;
"RTN","LA7LOG",31,0)
 S LA7TXT=$P($G(^LAHM(62.485,LA762485,0)),"^",1,2)
"RTN","LA7LOG",32,0)
 S:LA7TXT="" LA7TXT="Log routine was called with a non-existent code number ("_LA762485_")."
"RTN","LA7LOG",33,0)
 I $G(^LAHM(62.485,LA762485,1))'="" X ^(1)
"RTN","LA7LOG",34,0)
 I $O(LA7TXT("")) D
"RTN","LA7LOG",35,0)
 . S LA7=""
"RTN","LA7LOG",36,0)
 . F  S LA7=$O(LA7TXT(LA7)) Q:LA7=""  D
"RTN","LA7LOG",37,0)
 . . S LA7TXT=$P(LA7TXT,"|"_LA7_"|")_LA7TXT(LA7)_$P(LA7TXT,"|"_LA7_"|",2)
"RTN","LA7LOG",38,0)
 ; Set current date/time.
"RTN","LA7LOG",39,0)
 S LA7NOW=$$HTFM^XLFDT($H),LA7DT=LA7NOW\1,LA7TM=LA7NOW#1
"RTN","LA7LOG",40,0)
 ;
"RTN","LA7LOG",41,0)
 ; Set lock on XTMP global.
"RTN","LA7LOG",42,0)
 L +^XTMP("LA7ERR^"_LA7DT,0):99
"RTN","LA7LOG",43,0)
 I '$D(^XTMP("LA7ERR^"_LA7DT,0)) S ^XTMP("LA7ERR^"_LA7DT,0)=$$HTFM^XLFDT($H+7,1)_"^"_LA7DT_"^"_"Lab Messaging Error Log"
"RTN","LA7LOG",44,0)
 F  Q:'$D(^XTMP("LA7ERR^"_LA7DT,LA7TM))  S LA7TM=LA7TM+.0000001
"RTN","LA7LOG",45,0)
 S ^XTMP("LA7ERR^"_LA7DT,LA7TM)=$G(LA76248)_"^"_$G(LA76249)_"^"_$P(LA7TXT,"^")_"^"_$$ENCODEUP^XMCU1($P(LA7TXT,"^",2,99))
"RTN","LA7LOG",46,0)
 ; Release lock on XTMP global.
"RTN","LA7LOG",47,0)
 L -^XTMP("LA7ERR^"_LA7DT,0)
"RTN","LA7LOG",48,0)
 ;
"RTN","LA7LOG",49,0)
 ;; change status to error.
"RTN","LA7LOG",50,0)
 ;I $G(LA76249) D
"RTN","LA7LOG",51,0)
 ;. N LAFDA,LA7DIE
"RTN","LA7LOG",52,0)
 ;. S LAFDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7LOG",53,0)
 ;. D FILE^DIE("","LAFDA(1)","LA7DIE(1)")
"RTN","LA7LOG",54,0)
 ;
"RTN","LA7LOG",55,0)
 ; Send alert
"RTN","LA7LOG",56,0)
 I $P($G(^LAHM(62.485,LA762485,0)),"^",3),$D(^LAHM(62.48,+$G(LA76248),20,"B",2)) D XQA^LA7UXQA(2,$G(LA76248),$G(LA762485),$G(LA76249),$G(LA7AMSG))
"RTN","LA7LOG",57,0)
 ;
"RTN","LA7LOG",58,0)
 I $G(LA7FLAG) Q LA7TXT
"RTN","LA7LOG",59,0)
 I $Q Q LA7TXT
"RTN","LA7LOG",60,0)
 Q
"RTN","LA7LOG",61,0)
 ;
"RTN","LA7LOG",62,0)
 ;
"RTN","LA7LOG",63,0)
PRINT ;Print the error log which is stored in ^XTMP.  Errors are
"RTN","LA7LOG",64,0)
 ;logged only if the Debug Log field is turned on in 62.48
"RTN","LA7LOG",65,0)
 N DIR,LA7,LA76248,LA76249,LA7DT,LA7ETXT,LA7TM,LA7TXT,LA7XTMP
"RTN","LA7LOG",66,0)
 S DT=$$DT^XLFDT,LA7XTMP="LA7ERR^"_DT
"RTN","LA7LOG",67,0)
 I '$O(^XTMP(LA7XTMP,0)) W !!,?5,"Nothing logged for Today!"
"RTN","LA7LOG",68,0)
 E  S DIR("B")="TODAY"
"RTN","LA7LOG",69,0)
 S DIR("A")="Look at log for what date? "
"RTN","LA7LOG",70,0)
 S DIR("?")="^D HELP^%DTC"
"RTN","LA7LOG",71,0)
 S DIR(0)="DAO^:DT:EX"
"RTN","LA7LOG",72,0)
 D ^DIR K DIR
"RTN","LA7LOG",73,0)
 Q:$D(DIRUT)
"RTN","LA7LOG",74,0)
 S LA7XTMP="LA7ERR^"_Y
"RTN","LA7LOG",75,0)
 I '$O(^XTMP(LA7XTMP,0)) D  G PRINT
"RTN","LA7LOG",76,0)
 . W !!,?5,"Nothing logged for ",$$FMTE^XLFDT(Y)
"RTN","LA7LOG",77,0)
 S (LA76248,X,Y)=0 ; Find out if running multiple configurations.
"RTN","LA7LOG",78,0)
 F  S X=$O(^LAHM(62.48,X)) Q:'X  I $P($G(^LAHM(62.48,X,0)),"^",3) S Y=Y+1
"RTN","LA7LOG",79,0)
 I Y>1 D  Q:'LA76248
"RTN","LA7LOG",80,0)
 . N DIC,X,Y
"RTN","LA7LOG",81,0)
 . S DIC="^LAHM(62.48,",DIC(0)="AEMQ",DIC("A")="Select CONFIGURATION: " D ^DIC
"RTN","LA7LOG",82,0)
 . I Y>0 S LA76248=+Y
"RTN","LA7LOG",83,0)
 S DIR(0)="Y",DIR("A")="Print message text with error",DIR("B")="YES",DIR("?",1)="Do you want the text of the message also printed with the error",DIR("?")="Answer 'Y' or 'N'" D ^DIR K DIR Q:$D(DIRUT)
"RTN","LA7LOG",84,0)
 S LA7ETXT=Y ; Flag to print message text with error.
"RTN","LA7LOG",85,0)
 S %ZIS="Q"
"RTN","LA7LOG",86,0)
 D ^%ZIS
"RTN","LA7LOG",87,0)
 I POP D HOME^%ZIS K DIR,%ZIS,DIRUT,LA7XTMP QUIT
"RTN","LA7LOG",88,0)
 K ZTSK
"RTN","LA7LOG",89,0)
 I $D(IO("Q")) D  QUIT
"RTN","LA7LOG",90,0)
 . S ZTDESC="Lab Interface Error Log",ZTRTN="START^LA7LOG"
"RTN","LA7LOG",91,0)
 . S ZTSAVE("LA7XTMP")=LA7XTMP
"RTN","LA7LOG",92,0)
 . S ZTSAVE("LA76248")=LA76248
"RTN","LA7LOG",93,0)
 . S ZTSAVE("LA7ETXT")=LA7ETXT
"RTN","LA7LOG",94,0)
 . D ^%ZTLOAD
"RTN","LA7LOG",95,0)
 . I $D(ZTSK) U IO(0) W !?5,"Report queued...",!!
"RTN","LA7LOG",96,0)
 . D ^%ZISC K ZTDESC,ZTDTH,ZTSAVE,ZTRTN,ZTSK
"RTN","LA7LOG",97,0)
 U IO
"RTN","LA7LOG",98,0)
START ;
"RTN","LA7LOG",99,0)
 N LA76249,LA7FS,LA7QUIT,LA7SEG,LA7TM
"RTN","LA7LOG",100,0)
 S LA7TM=""
"RTN","LA7LOG",101,0)
 W:$Y @IOF
"RTN","LA7LOG",102,0)
 F  S LA7TM=$O(^XTMP(LA7XTMP,LA7TM),-1) Q:LA7TM=0  D  Q:LA7QUIT
"RTN","LA7LOG",103,0)
 . S LA7QUIT=0
"RTN","LA7LOG",104,0)
 . I LA76248,+^XTMP(LA7XTMP,LA7TM),+^XTMP(LA7XTMP,LA7TM)'=LA76248 Q  ; Error message not for requested configuration.
"RTN","LA7LOG",105,0)
 . S LA76249=+$P(^XTMP(LA7XTMP,LA7TM),"^",2)
"RTN","LA7LOG",106,0)
 . I $Y>(IOSL-5) D  Q:LA7QUIT
"RTN","LA7LOG",107,0)
 . . I '$D(ZTQUEUED),"Pp"'[$E(IOST) K DIR S DIR(0)="E" D ^DIR I 'Y S LA7QUIT=1 Q
"RTN","LA7LOG",108,0)
 . . W @IOF
"RTN","LA7LOG",109,0)
 . W:$X !! W $$FMTE^XLFDT($P(LA7XTMP,"^",2)+LA7TM)," "
"RTN","LA7LOG",110,0)
 . W $P(^XTMP(LA7XTMP,LA7TM),"^",3)," " S X=$$DECODEUP^XMCU1($P(^(LA7TM),"^",4,99))
"RTN","LA7LOG",111,0)
 . F LA7=1:1:$L(X," ") S Y=$P(X," ",LA7) W:($L(Y)+$X+1)>IOM ! W Y," "
"RTN","LA7LOG",112,0)
 . I 'LA76249!('LA7ETXT) Q  ; Don't print message if no text or not requested.
"RTN","LA7LOG",113,0)
 . Q:'$O(^LAHM(62.49,LA76249,150,0))
"RTN","LA7LOG",114,0)
 . S LA7=0,LA7FS=" "
"RTN","LA7LOG",115,0)
 . F  S LA7=$O(^LAHM(62.49,LA76249,150,LA7)) Q:'LA7  D  Q:LA7QUIT
"RTN","LA7LOG",116,0)
 . . S LA7SEG=$G(^LAHM(62.49,LA76249,150,LA7,0))
"RTN","LA7LOG",117,0)
 . . I LA7SEG="" W ! Q
"RTN","LA7LOG",118,0)
 . . S LA7QUIT=0
"RTN","LA7LOG",119,0)
 . . I $Y>(IOSL-5) D  Q:LA7QUIT
"RTN","LA7LOG",120,0)
 . . . I '$D(ZTQUEUED),"Pp"'[$E(IOST) K DIR S DIR(0)="E" D ^DIR I 'Y S LA7QUIT=1 Q
"RTN","LA7LOG",121,0)
 . . . W @IOF
"RTN","LA7LOG",122,0)
 . . I LA7FS=" ",$E(LA7SEG,1,3)?1(1"MSH",1"FSH",1"BSH") S LA7FS=$E(LA7SEG,4)
"RTN","LA7LOG",123,0)
 . . W !
"RTN","LA7LOG",124,0)
 . . F I=1:1:$L(LA7SEG,LA7FS) S Y=$P(LA7SEG,LA7FS,I) W:($L(Y)+$X+1)>IOM ! W ?2,Y,LA7FS
"RTN","LA7LOG",125,0)
 . W !
"RTN","LA7LOG",126,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7LOG",127,0)
 E  D ^%ZISC
"RTN","LA7LOG",128,0)
 K LA7,LA76248,LA76249,LA7FS,LA7QUIT,LA7SEG,LA7TM,LA7XTMP
"RTN","LA7LOG",129,0)
 K DIR,DIRUT,DTOUT,X,Y
"RTN","LA7LOG",130,0)
 Q
"RTN","LA7POC")
0^99^B14984889
"RTN","LA7POC",1,0)
LA7POC ;DALOI/JMC - Lab HL7 Point of Care ;05/04/10  16:13
"RTN","LA7POC",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**67,74**;Sep 27, 1994;Build 229
"RTN","LA7POC",3,0)
 ;
"RTN","LA7POC",4,0)
 ; Reference to HLL("SET FOR APP ACK") supported by patch HL*1.6*117
"RTN","LA7POC",5,0)
 Q
"RTN","LA7POC",6,0)
 ;
"RTN","LA7POC",7,0)
RTRA ; Setup links and subscriber array for HL7 ADT message generation
"RTN","LA7POC",8,0)
 ; for those LA7POC* entries in file #62.48 which indicate they want to
"RTN","LA7POC",9,0)
 ; subscribe to ADT messages. Interface types POCA in file #62.48
"RTN","LA7POC",10,0)
 ; will be subscribers to VistA HL7 ADT messages.
"RTN","LA7POC",11,0)
 ;
"RTN","LA7POC",12,0)
 ; Called by subscriber protocol LA7POC ADT RTR which functions as a
"RTN","LA7POC",13,0)
 ; router.
"RTN","LA7POC",14,0)
 ;
"RTN","LA7POC",15,0)
 N LA76248,LA7Y
"RTN","LA7POC",16,0)
 ;
"RTN","LA7POC",17,0)
 ; Check entries with root 'LA7POC" as name and interface type POCA (21)
"RTN","LA7POC",18,0)
 ; to subscribe to ADT message feed from VistA.
"RTN","LA7POC",19,0)
 S LA76248=0
"RTN","LA7POC",20,0)
 F  S LA76248=$O(^LAHM(62.48,LA76248)) Q:'LA76248  D
"RTN","LA7POC",21,0)
 . S LA76248(0)=$G(^LAHM(62.48,LA76248,0)),LA7Y=$P(LA76248(0),"^")
"RTN","LA7POC",22,0)
 . I $E(LA7Y,1,6)'="LA7POC" Q
"RTN","LA7POC",23,0)
 . I $P(LA76248(0),"^",3)'=1 Q  ; Inactive status
"RTN","LA7POC",24,0)
 . I $P(LA76248(0),"^",9)'=21 Q
"RTN","LA7POC",25,0)
 . S HLL("LINKS",LA76248)=LA7Y_" ADT SUBS^"_LA7Y_"A"
"RTN","LA7POC",26,0)
 Q
"RTN","LA7POC",27,0)
 ;
"RTN","LA7POC",28,0)
 ;
"RTN","LA7POC",29,0)
ACK(LA7) ; Returns the application acknowledgement to the sending POC
"RTN","LA7POC",30,0)
 ; application. Indicates any error encountered in processing the POC
"RTN","LA7POC",31,0)
 ; results. Setup link for HL7 ACK message generation for LA7POC* entries
"RTN","LA7POC",32,0)
 ; in file #62.48 when POC ORU message has been processed in VistA.
"RTN","LA7POC",33,0)
 ;
"RTN","LA7POC",34,0)
 ; Called by routine LA7VPOC
"RTN","LA7POC",35,0)
 ;
"RTN","LA7POC",36,0)
 ; Call with LA7 array passed by reference
"RTN","LA7POC",37,0)
 ;      LA7(62.48)=ien of related configuration in file #62.48
"RTN","LA7POC",38,0)
 ;      LA7(62.49)=ien of message in file #62.49 being acknowledged
"RTN","LA7POC",39,0)
 ;      LA7("ACK")=acknowledgment status (AA, AE, AR)
"RTN","LA7POC",40,0)
 ;      LA7("MSG")=text of error message to be returned
"RTN","LA7POC",41,0)
 ;
"RTN","LA7POC",42,0)
 N HL,HLMTIENS,I,LA6249,LA76248,LA7X,LA7Y
"RTN","LA7POC",43,0)
 ;
"RTN","LA7POC",44,0)
 ; Check for entry in 62.48
"RTN","LA7POC",45,0)
 S LA76248=+$G(LA7(62.48))
"RTN","LA7POC",46,0)
 I '$G(LA76248)!('$D(^LAHM(62.48,LA76248,0))) Q
"RTN","LA7POC",47,0)
 S LA76248(0)=$G(^LAHM(62.48,LA7(62.48),0)),LA7X=$P(LA76248(0),"^")
"RTN","LA7POC",48,0)
 ;
"RTN","LA7POC",49,0)
 ; Check for entry in 62.49
"RTN","LA7POC",50,0)
 S LA6249=+$G(LA7(62.49))
"RTN","LA7POC",51,0)
 I '$G(LA6249)!('$D(^LAHM(62.49,LA6249,0))) Q
"RTN","LA7POC",52,0)
 F I=0,700 S LA6249(I)=$G(^LAHM(62.49,LA6249,I))
"RTN","LA7POC",53,0)
 ;
"RTN","LA7POC",54,0)
 ; Store Accession's UID on incoming message being processed
"RTN","LA7POC",55,0)
 I LA7("ACK")="AA",$P(LA7("MSG"),"^")'="" D
"RTN","LA7POC",56,0)
 . D SETID^LA7VHLU1(LA6249,"",$P(LA7("MSG"),"^"),0)
"RTN","LA7POC",57,0)
 . D UPID^LA7VHLU1(LA6249)
"RTN","LA7POC",58,0)
 ;
"RTN","LA7POC",59,0)
 ; Call reprocess message to build and send ACK and clear purge flag
"RTN","LA7POC",60,0)
 S LA7Y=$$REPROC^HLUTIL($P(LA6249(700),";",2),"D BLDACK^LA7POC")
"RTN","LA7POC",61,0)
 I LA7Y=0 S HLMTIENS=$P(LA6249(700),";",2),LA7X=$$TOPURG^HLUTIL()
"RTN","LA7POC",62,0)
 ;
"RTN","LA7POC",63,0)
 Q
"RTN","LA7POC",64,0)
 ;
"RTN","LA7POC",65,0)
 ;
"RTN","LA7POC",66,0)
BLDACK ; Create/initialize HL ACK message
"RTN","LA7POC",67,0)
 ;
"RTN","LA7POC",68,0)
 ;ZEXCEPT:LA7,LA76248
"RTN","LA7POC",69,0)
 ;
"RTN","LA7POC",70,0)
 N GBL,HLL,HLP,I,X
"RTN","LA7POC",71,0)
 N LA76249,LA7AERR,LA7DATA,LA7ECH,LA7FS,LA7ID,LA7MID,LA7MSA,LA7MSH,LA7X,LA7Y
"RTN","LA7POC",72,0)
 ;
"RTN","LA7POC",73,0)
 ; No application acknowledgement
"RTN","LA7POC",74,0)
 I HL("APAT")="NE" Q
"RTN","LA7POC",75,0)
 ;
"RTN","LA7POC",76,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7POC",77,0)
 I LA7("ACK")'="AA",HL("APAT")="SU" Q
"RTN","LA7POC",78,0)
 ;
"RTN","LA7POC",79,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7POC",80,0)
 I LA7("ACK")="AA",HL("APAT")="ER" Q
"RTN","LA7POC",81,0)
 ;
"RTN","LA7POC",82,0)
 S GBL="^TMP(""HLA"","_$J_")"
"RTN","LA7POC",83,0)
 K @GBL
"RTN","LA7POC",84,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7POC",85,0)
 D RSPINIT^HLFNC2(HL("EIDS"),.HL)
"RTN","LA7POC",86,0)
 S LA7FS=HL("RFS"),LA7ECH=HL("RECH")
"RTN","LA7POC",87,0)
 ;
"RTN","LA7POC",88,0)
 ; Build pseudo MSH for file #62.49 entry
"RTN","LA7POC",89,0)
 S LA7MSH(0)="MSH",LA7MSH(1)=LA7ECH,LA7MSH(2)=HL("RAN"),LA7MSH(3)=HL("RAF"),LA7MSH(4)=HL("SAN"),LA7MSH(5)=HL("SAF")
"RTN","LA7POC",90,0)
 S LA7MSH(9)=HL("RMTN")_$E(LA7ECH,1)_HL("RETN"),LA7MSH(11)=HL("PID"),LA7MSH(12)=HL("VER")
"RTN","LA7POC",91,0)
 S LA7MSH(15)="AL",LA7MSH(16)="NE"
"RTN","LA7POC",92,0)
 D BUILDSEG^LA7VHLU(.LA7MSH,.LA7DATA,LA7FS)
"RTN","LA7POC",93,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7POC",94,0)
 ;
"RTN","LA7POC",95,0)
 ; Build and file MSA segment
"RTN","LA7POC",96,0)
 K LA7DATA
"RTN","LA7POC",97,0)
 S LA7MSA(0)="MSA",LA7MSA(1)=LA7("ACK"),LA7MSA(2)=HL("MID")
"RTN","LA7POC",98,0)
 I $G(LA7("MSG"))'="" D
"RTN","LA7POC",99,0)
 . S LA7MSA(3)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^"),LA7FS_LA7ECH)
"RTN","LA7POC",100,0)
 . I LA7("ACK")="AA",$P(LA7("MSG"),"^")'="" D SETID^LA7VHLU1(LA76249,"",$P(LA7("MSG"),"^"),0)
"RTN","LA7POC",101,0)
 . I $P(LA7("MSG"),"^",2)="" Q
"RTN","LA7POC",102,0)
 . S $P(LA7MSA(3),$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^",2),LA7FS_LA7ECH)
"RTN","LA7POC",103,0)
 ;
"RTN","LA7POC",104,0)
 ; Save message ids in file #62.49
"RTN","LA7POC",105,0)
 S LA7ID=$P(LA76248(0),"^",1)_"-O-ACK-"_LA7MSA(2)
"RTN","LA7POC",106,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ID,1)
"RTN","LA7POC",107,0)
 D SETID^LA7VHLU1(LA76249,"",LA7MSA(2),0)
"RTN","LA7POC",108,0)
 ;
"RTN","LA7POC",109,0)
 D BUILDSEG^LA7VHLU(.LA7MSA,.LA7DATA,LA7FS)
"RTN","LA7POC",110,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7POC",111,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7POC",112,0)
 ;
"RTN","LA7POC",113,0)
 ; Send the HL7 message.
"RTN","LA7POC",114,0)
 S HLL("SET FOR APP ACK")=1
"RTN","LA7POC",115,0)
 S HLL("LINKS",1)=HL("EIDS")_"^"_$P(LA76248(0),"^")
"RTN","LA7POC",116,0)
 S HLP("NAMESPACE")="LA"
"RTN","LA7POC",117,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.LA7MID,"",.HLP)
"RTN","LA7POC",118,0)
 ;
"RTN","LA7POC",119,0)
 S HL("MTN")=HL("RMTN"),HL("SAN")=HL("RAN"),HL("SAF")=HL("RAF"),HL("APAT")=""
"RTN","LA7POC",120,0)
 D UPDT6249^LA7VORM1
"RTN","LA7POC",121,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7POC",122,0)
 Q
"RTN","LA7PURG")
0^107^B15027084
"RTN","LA7PURG",1,0)
LA7PURG ;DALOI/JMC - Purge Lab Messaging Interface Messages ;05/07/10  14:13
"RTN","LA7PURG",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,64,74**;Sep 27, 1994;Build 229
"RTN","LA7PURG",3,0)
 ;
"RTN","LA7PURG",4,0)
 ; This routine purges messages and checks file intregrity for Lab Messaging.
"RTN","LA7PURG",5,0)
 Q
"RTN","LA7PURG",6,0)
 ;
"RTN","LA7PURG",7,0)
 ;
"RTN","LA7PURG",8,0)
EN ; Entry point from taskman
"RTN","LA7PURG",9,0)
 D DQ^LA7CHKF
"RTN","LA7PURG",10,0)
 D PURGE,PSM,PLPO
"RTN","LA7PURG",11,0)
 S X=$$LACHK^LA7CHKF
"RTN","LA7PURG",12,0)
 Q
"RTN","LA7PURG",13,0)
 ;
"RTN","LA7PURG",14,0)
 ;
"RTN","LA7PURG",15,0)
PURGE ; purge messages previous to today
"RTN","LA7PURG",16,0)
 N DA,DIK,I,LA7CFG,LA7DA,LA7DAT,LA7ROOT,LA7Q,X,Y
"RTN","LA7PURG",17,0)
 ;
"RTN","LA7PURG",18,0)
 ; Get each configuration's grace period for messages.
"RTN","LA7PURG",19,0)
 ; Determine cut-off date for purging this configuration.
"RTN","LA7PURG",20,0)
 S I=0
"RTN","LA7PURG",21,0)
 F  S I=$O(^LAHM(62.48,I)) Q:'I  D
"RTN","LA7PURG",22,0)
 . S X=$P($G(^LAHM(62.48,I,0)),"^",6)
"RTN","LA7PURG",23,0)
 . I 'X S X=3 ; If missing, default to 3 days.
"RTN","LA7PURG",24,0)
 . S LA7DAT(I)=$$HTFM^XLFDT($$HADD^XLFDT($H,-X),1)
"RTN","LA7PURG",25,0)
 S LA7DAT=0
"RTN","LA7PURG",26,0)
 ;
"RTN","LA7PURG",27,0)
 F  S LA7DAT=$O(^LAHM(62.49,"AD",LA7DAT)) Q:'LA7DAT!(LA7DAT=DT)  D
"RTN","LA7PURG",28,0)
 . ; Set flag if "problem" messages for this date are purgeable --> have been removed from XTMP.
"RTN","LA7PURG",29,0)
 . S LA7DAT(0)=$G(^XTMP("LA7ERR^"_LA7DAT,0),0)
"RTN","LA7PURG",30,0)
 . S LA7DA=0
"RTN","LA7PURG",31,0)
 . F  S LA7DA=$O(^LAHM(62.49,"AD",LA7DAT,LA7DA)) Q:'LA7DA  D
"RTN","LA7PURG",32,0)
 . . L +^LAHM(62.49,LA7DA):1
"RTN","LA7PURG",33,0)
 . . I $T D
"RTN","LA7PURG",34,0)
 . . . I LA7DAT'=$P($P($G(^LAHM(62.49,LA7DA,0)),"^",5),".") D  Q
"RTN","LA7PURG",35,0)
 . . . . ; Date in cross-reference does not match field #4, remove x-ref.
"RTN","LA7PURG",36,0)
 . . . . K ^LAHM(62.49,"AD",LA7DAT,LA7DA)
"RTN","LA7PURG",37,0)
 . . . ; Don't purge if problem message and still in XTMP global.
"RTN","LA7PURG",38,0)
 . . . I LA7DAT(0),$P(^LAHM(62.49,LA7DA,0),"^",3)'="X" Q
"RTN","LA7PURG",39,0)
 . . . ; Get configuration for this message.
"RTN","LA7PURG",40,0)
 . . . S LA7CFG=+$G(^LAHM(62.49,LA7DA,.5))
"RTN","LA7PURG",41,0)
 . . . ; If message hasn't reached purge date --> skip.
"RTN","LA7PURG",42,0)
 . . . I LA7CFG,LA7DAT'<$G(LA7DAT(LA7CFG)) Q
"RTN","LA7PURG",43,0)
 . . . S DIK="^LAHM(62.49,",DA=LA7DA D ^DIK
"RTN","LA7PURG",44,0)
 . . L -^LAHM(62.49,LA7DA)
"RTN","LA7PURG",45,0)
 Q
"RTN","LA7PURG",46,0)
 ;
"RTN","LA7PURG",47,0)
 ;
"RTN","LA7PURG",48,0)
PSM ; Purge shipping manifests file (#62.8)
"RTN","LA7PURG",49,0)
 ;
"RTN","LA7PURG",50,0)
 ; Check each manifest to determine if accessions on manifest have all
"RTN","LA7PURG",51,0)
 ; been purged from file #68.
"RTN","LA7PURG",52,0)
 ;
"RTN","LA7PURG",53,0)
 ; If over 10000 entries purged from #62.85 then quit and pickup next
"RTN","LA7PURG",54,0)
 ; session. Avoid performance and journaling issues.
"RTN","LA7PURG",55,0)
 N DA,DIK,LA7628,LA7CNT
"RTN","LA7PURG",56,0)
 S (LA7628,LA7CNT)=0,DIK="^LAHM(62.8,"
"RTN","LA7PURG",57,0)
 F  S LA7628=$O(^LAHM(62.8,LA7628)) Q:'LA7628  D  Q:LA7CNT>10000
"RTN","LA7PURG",58,0)
 . I '$$CHK628(LA7628) Q
"RTN","LA7PURG",59,0)
 . D P6285
"RTN","LA7PURG",60,0)
 . S DA=LA7628 D ^DIK
"RTN","LA7PURG",61,0)
 Q
"RTN","LA7PURG",62,0)
 ;
"RTN","LA7PURG",63,0)
 ;
"RTN","LA7PURG",64,0)
PLPO ; Purge Lab Pending Orders file (#69.6)
"RTN","LA7PURG",65,0)
 ;
"RTN","LA7PURG",66,0)
 ; Check each order to determine if order can be purged.
"RTN","LA7PURG",67,0)
 ;
"RTN","LA7PURG",68,0)
 ; If over 5000 entries purged then quit and pickup next session.
"RTN","LA7PURG",69,0)
 ; Avoid performance and journaling issues.
"RTN","LA7PURG",70,0)
 ;
"RTN","LA7PURG",71,0)
 N DA,DIK,LA7696,LA7CNT,LA7COFF,LA7STAT
"RTN","LA7PURG",72,0)
 ;
"RTN","LA7PURG",73,0)
 S DIK="^LRO(69.6,",(LA7696,LA7CNT)=0
"RTN","LA7PURG",74,0)
 ; Cutoff dates
"RTN","LA7PURG",75,0)
 S LA7COFF(1)=$$FMADD^XLFDT(DT,-365),LA7COFF(2)=$$FMADD^XLFDT(DT,-730)
"RTN","LA7PURG",76,0)
 ; Results sent status ien
"RTN","LA7PURG",77,0)
 S LA7STAT=$$FIND1^DIC(64.061,"","OMX","Results/data Received","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LA7PURG",78,0)
 F  S LA7696=$O(^LRO(69.6,LA7696)) Q:'LA7696  D  Q:LA7CNT>5000
"RTN","LA7PURG",79,0)
 . I '$$CHK696(LA7696,.LA7COFF,LA7STAT) Q
"RTN","LA7PURG",80,0)
 . S LA7CNT=LA7CNT+1,DA=LA7696 D ^DIK
"RTN","LA7PURG",81,0)
 Q
"RTN","LA7PURG",82,0)
 ;
"RTN","LA7PURG",83,0)
 ;
"RTN","LA7PURG",84,0)
CHK628(LA7628) ; If all accessions have been purged then safe to purge manifest
"RTN","LA7PURG",85,0)
 ; and associated events (#62.85)
"RTN","LA7PURG",86,0)
 ;
"RTN","LA7PURG",87,0)
 ; Call with LA7628 = ien of manifest in #62.8
"RTN","LA7PURG",88,0)
 ;
"RTN","LA7PURG",89,0)
 ; Returns OK = 1(yes)/ 0(no) to purge
"RTN","LA7PURG",90,0)
 ;
"RTN","LA7PURG",91,0)
 N LRUID,OK
"RTN","LA7PURG",92,0)
 S OK=1,LRUID=""
"RTN","LA7PURG",93,0)
 F  S LRUID=$O(^LAHM(62.8,LA7628,10,"UID",LRUID)) Q:LRUID=""  I $$CHECKUID^LRWU4(LRUID) S OK=0 Q
"RTN","LA7PURG",94,0)
 Q OK
"RTN","LA7PURG",95,0)
 ;
"RTN","LA7PURG",96,0)
 ;
"RTN","LA7PURG",97,0)
P6285 ; Purge related entries in shipping activity log (#62.85)
"RTN","LA7PURG",98,0)
 ;
"RTN","LA7PURG",99,0)
 N DA,DIK,LA7SM,LRUID
"RTN","LA7PURG",100,0)
 S LA7SM=$P(^LAHM(62.8,LA7628,0),"^"),LRUID="",DIK="^LAHM(62.85,"
"RTN","LA7PURG",101,0)
 ;
"RTN","LA7PURG",102,0)
 ; Purge entries in 62.85 relating to accessions (UID) on manifest
"RTN","LA7PURG",103,0)
 F  S LRUID=$O(^LAHM(62.8,LA7628,10,"UID",LRUID)) Q:LRUID=""  D
"RTN","LA7PURG",104,0)
 . S DA=0
"RTN","LA7PURG",105,0)
 . F  S DA=$O(^LAHM(62.85,"AM",LRUID,LA7SM,DA)) Q:'DA  D ^DIK S LA7CNT=LA7CNT+1
"RTN","LA7PURG",106,0)
 ;
"RTN","LA7PURG",107,0)
 ; Purge entries in 62.85 relating to manifest
"RTN","LA7PURG",108,0)
 S DA=0
"RTN","LA7PURG",109,0)
 F  S DA=$O(^LAHM(62.85,"B",LA7SM,DA)) Q:'DA  D ^DIK S LA7CNT=LA7CNT+1
"RTN","LA7PURG",110,0)
 Q
"RTN","LA7PURG",111,0)
 ;
"RTN","LA7PURG",112,0)
 ;
"RTN","LA7PURG",113,0)
CHK696(LA7696,LA7COFF,LA7SPST) ; Check if order safe to purge
"RTN","LA7PURG",114,0)
 ;
"RTN","LA7PURG",115,0)
 ; Call with LA7696 = ien of order in #69.6
"RTN","LA7PURG",116,0)
 ;          LA7COFF = array of cutoff FileMan dates.
"RTN","LA7PURG",117,0)
 ;          LA7SPST = ien of specimen status Results/data Received
"RTN","LA7PURG",118,0)
 ;
"RTN","LA7PURG",119,0)
 ; Returns OK = 1(yes)/ 0(no) to purge
"RTN","LA7PURG",120,0)
 ;
"RTN","LA7PURG",121,0)
 N LAX,OK
"RTN","LA7PURG",122,0)
 S OK=0,LAX=$G(^LRO(69.6,LA7696,1))
"RTN","LA7PURG",123,0)
 ;
"RTN","LA7PURG",124,0)
 ; Check date order completed
"RTN","LA7PURG",125,0)
 I $P(LAX,"^",7),$P(LAX,"^",7)<LA7COFF(1) S OK=1
"RTN","LA7PURG",126,0)
 ;
"RTN","LA7PURG",127,0)
 ; Check date order received/tranmsitted
"RTN","LA7PURG",128,0)
 I 'OK D
"RTN","LA7PURG",129,0)
 . I $P(LAX,"^",4),$P(LAX,"^",4)<LA7COFF(2) S OK=1 Q
"RTN","LA7PURG",130,0)
 . I $P(LAX,"^",5),$P(LAX,"^",5)<LA7COFF(2) S OK=1 Q
"RTN","LA7PURG",131,0)
 ;
"RTN","LA7PURG",132,0)
 ; Check date order received and specimen status
"RTN","LA7PURG",133,0)
 I 'OK,$P(LAX,"^",5),$P(LAX,"^",5)<LA7COFF(1) D
"RTN","LA7PURG",134,0)
 . S X=$P($G(^LRO(69.6,LA7696,0)),"^",10) ; specimen status
"RTN","LA7PURG",135,0)
 . I LA7SPST,X=LA7SPST S OK=1
"RTN","LA7PURG",136,0)
 ;
"RTN","LA7PURG",137,0)
 Q OK
"RTN","LA7SBCR2")
0^50^B13756117
"RTN","LA7SBCR2",1,0)
LA7SBCR2 ;DALOI/JMC - Shipping Barcode Reader Utility ;05/29/12  10:28
"RTN","LA7SBCR2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SBCR2",3,0)
 ;
"RTN","LA7SBCR2",4,0)
 Q
"RTN","LA7SBCR2",5,0)
 ;
"RTN","LA7SBCR2",6,0)
SITE(LA7,LA7PROM,LA7BAR) ; Setup remote site info.
"RTN","LA7SBCR2",7,0)
 ; Input:
"RTN","LA7SBCR2",8,0)
 ;                  LA7=array to return values
"RTN","LA7SBCR2",9,0)
 ;              LA7PROM=prompt to display to user
"RTN","LA7SBCR2",10,0)
 ;               LA7BAR=0/1 using barcode reader
"RTN","LA7SBCR2",11,0)
 ; Screen: Second piece of bar-code must = SITE
"RTN","LA7SBCR2",12,0)
 ; Returns array LA7()
"RTN","LA7SBCR2",13,0)
 ;
"RTN","LA7SBCR2",14,0)
 ;  If successful ERROR=0
"RTN","LA7SBCR2",15,0)
 ;               IDTYPE=source of UID
"RTN","LA7SBCR2",16,0)
 ;                HSITE=host site ien^name^station number
"RTN","LA7SBCR2",17,0)
 ;                  LPC=longitudinal parity check of SM barcode info
"RTN","LA7SBCR2",18,0)
 ;               RPSITE=primary sending site ien^name^station number
"RTN","LA7SBCR2",19,0)
 ;                RSITE=sending site ien^name^station number
"RTN","LA7SBCR2",20,0)
 ;                 SCFG=pointer to shipping configuration (file #62.9)^name
"RTN","LA7SBCR2",21,0)
 ;                  SDT=Shipping date/time
"RTN","LA7SBCR2",22,0)
 ;                 SMID=shipping manifest id
"RTN","LA7SBCR2",23,0)
 ;
"RTN","LA7SBCR2",24,0)
 ;   unsuccessful ERROR=>0^error message
"RTN","LA7SBCR2",25,0)
 ;
"RTN","LA7SBCR2",26,0)
 N LA7X,X,Y
"RTN","LA7SBCR2",27,0)
 ; Initialize array.
"RTN","LA7SBCR2",28,0)
 F Y="ERROR","HSITE","IDTYPE","LPC","RPSITE","RSITE","SCFG","SDT","SMID" S LA7(Y)=""
"RTN","LA7SBCR2",29,0)
 S LA7PROM=$G(LA7PROM,"Site")
"RTN","LA7SBCR2",30,0)
 I LA7BAR D BAR
"RTN","LA7SBCR2",31,0)
 ;
"RTN","LA7SBCR2",32,0)
 I 'LA7BAR D
"RTN","LA7SBCR2",33,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SBCR2",34,0)
 . S DIR(0)="PO^62.9:EM",DIR("A")="Select Shipping Configuration"
"RTN","LA7SBCR2",35,0)
 . S DIR("S")="I $P(^LAHM(62.9,Y,0),U,3)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)"
"RTN","LA7SBCR2",36,0)
 . D ^DIR
"RTN","LA7SBCR2",37,0)
 . I Y<1 S LA7("ERROR")=1 Q
"RTN","LA7SBCR2",38,0)
 . S LA7("SCFG")=Y
"RTN","LA7SBCR2",39,0)
 ;
"RTN","LA7SBCR2",40,0)
 I 'LA7("ERROR") D
"RTN","LA7SBCR2",41,0)
 . I LA7("SCFG") D GETSITE Q
"RTN","LA7SBCR2",42,0)
 . I 'LA7("SCFG") S LA7("ERROR")=3 Q
"RTN","LA7SBCR2",43,0)
 ;
"RTN","LA7SBCR2",44,0)
 I LA7("ERROR") D
"RTN","LA7SBCR2",45,0)
 . S LA7("ERROR")=LA7("ERROR")_"^"_$P($T(ERROR+LA7("ERROR")),";;",2)
"RTN","LA7SBCR2",46,0)
 ;
"RTN","LA7SBCR2",47,0)
 Q
"RTN","LA7SBCR2",48,0)
 ;
"RTN","LA7SBCR2",49,0)
 ;
"RTN","LA7SBCR2",50,0)
GETSITE ; Retrieve site info from institution file for this shipping configuration.
"RTN","LA7SBCR2",51,0)
 ; Set ID type from shipping configuration.
"RTN","LA7SBCR2",52,0)
 N LRX,LRY,X,Y
"RTN","LA7SBCR2",53,0)
 S Y(0)=$G(^LAHM(62.9,+LA7("SCFG"),0))
"RTN","LA7SBCR2",54,0)
 S LA7("IDTYPE")=$P(Y(0),"^",5)
"RTN","LA7SBCR2",55,0)
 ;
"RTN","LA7SBCR2",56,0)
 ; Check if same system and idtype=3
"RTN","LA7SBCR2",57,0)
 I LA7("IDTYPE")>1 D
"RTN","LA7SBCR2",58,0)
 . I LA7("IDTYPE")=3,$P(Y(0),"^",6)=$P(Y(0),"^",11) Q
"RTN","LA7SBCR2",59,0)
 . S LA7("ERROR")=4
"RTN","LA7SBCR2",60,0)
 ;
"RTN","LA7SBCR2",61,0)
 S LRX=$P(Y(0),"^",2)
"RTN","LA7SBCR2",62,0)
 S LRY=$$GET1^DIQ(4,LRX_",",.01)
"RTN","LA7SBCR2",63,0)
 I LRX,LRY'="" D
"RTN","LA7SBCR2",64,0)
 . S LRY(99)=$$RETFACID^LA7VHLU2(LRX,2,1)
"RTN","LA7SBCR2",65,0)
 . S LA7("RSITE")=LRX_"^"_LRY_"^"_LRY(99)
"RTN","LA7SBCR2",66,0)
 E  S LA7("ERROR")=5
"RTN","LA7SBCR2",67,0)
 ;
"RTN","LA7SBCR2",68,0)
 S LRX=$P(Y(0),"^",6)
"RTN","LA7SBCR2",69,0)
 S LRY=$$GET1^DIQ(4,LRX_",",.01)
"RTN","LA7SBCR2",70,0)
 I LRX,LRY'="" D
"RTN","LA7SBCR2",71,0)
 . S LRY(99)=$$RETFACID^LA7VHLU2(LRX,2,1)
"RTN","LA7SBCR2",72,0)
 . S LA7("RPSITE")=LRX_"^"_LRY_"^"_LRY(99)
"RTN","LA7SBCR2",73,0)
 E  S LA7("ERROR")=5
"RTN","LA7SBCR2",74,0)
 ;
"RTN","LA7SBCR2",75,0)
 S LRX=$P(Y(0),"^",3)
"RTN","LA7SBCR2",76,0)
 S LRY=$$GET1^DIQ(4,LRX_",",.01)
"RTN","LA7SBCR2",77,0)
 I LRX,LRY'="" D
"RTN","LA7SBCR2",78,0)
 . S LRY(99)=$$RETFACID^LA7VHLU2(LRX,1,1)
"RTN","LA7SBCR2",79,0)
 . S LA7("HSITE")=LRX_"^"_LRY_"^"_LRY(99)
"RTN","LA7SBCR2",80,0)
 I 'LRX!(LRY="") S LA7("ERROR")=5
"RTN","LA7SBCR2",81,0)
 ;
"RTN","LA7SBCR2",82,0)
 Q
"RTN","LA7SBCR2",83,0)
 ;
"RTN","LA7SBCR2",84,0)
 ;
"RTN","LA7SBCR2",85,0)
BAR ; Read SM bar code
"RTN","LA7SBCR2",86,0)
 ;
"RTN","LA7SBCR2",87,0)
 N LA7BCS,Y
"RTN","LA7SBCR2",88,0)
 ;
"RTN","LA7SBCR2",89,0)
 S Y=$$RD^LA7SBCR(.LA7PROM,1),LA7=""
"RTN","LA7SBCR2",90,0)
 I Y=0 S LA7("ERROR")=1 Q
"RTN","LA7SBCR2",91,0)
 I Y<1 S LA7("ERROR")=2 Q
"RTN","LA7SBCR2",92,0)
 ;
"RTN","LA7SBCR2",93,0)
 ; barcode info & longitudinal parity check
"RTN","LA7SBCR2",94,0)
 ; original bar code style
"RTN","LA7SBCR2",95,0)
 I $E(Y,1,11)="1^STX^SITE^" D
"RTN","LA7SBCR2",96,0)
 . S LA7=$P(Y,"STX^SITE^",2)
"RTN","LA7SBCR2",97,0)
 . S LA7=$P(LA7,"^ETX",1)
"RTN","LA7SBCR2",98,0)
 . S LA7("LPC")=$P(Y,"^ETX",2)
"RTN","LA7SBCR2",99,0)
 ; new bar code style
"RTN","LA7SBCR2",100,0)
 I $E(Y,1,7)="1^SITE^" D
"RTN","LA7SBCR2",101,0)
 . S LA7=$P(Y,"^",3,5)
"RTN","LA7SBCR2",102,0)
 . S LA7("LPC")=$P(Y,"^",6)
"RTN","LA7SBCR2",103,0)
 . S LA7BCS=1
"RTN","LA7SBCR2",104,0)
 ;
"RTN","LA7SBCR2",105,0)
 I LA7="" S LA7("ERROR")=2 Q
"RTN","LA7SBCR2",106,0)
 ;
"RTN","LA7SBCR2",107,0)
 I $P(LA7,"^")'="" D
"RTN","LA7SBCR2",108,0)
 . N X,Y,Z
"RTN","LA7SBCR2",109,0)
 . S Z=$$FINDSITE^LA7VHLU2($P(LA7,"^"),2,1)
"RTN","LA7SBCR2",110,0)
 . I Z="" S LA7("ERROR")=5 Q
"RTN","LA7SBCR2",111,0)
 . S (X,Y)=0
"RTN","LA7SBCR2",112,0)
 . F  S X=$O(^LAHM(62.9,"C",Z,X)) Q:'X  D  Q:Y
"RTN","LA7SBCR2",113,0)
 . . S X(0)=$G(^LAHM(62.9,X,0))
"RTN","LA7SBCR2",114,0)
 . . I $P(X(0),"^",3)=DUZ(2),$P(X(0),"^",4) S LA7("SCFG")=X_"^"_$P(X(0),"^"),Y=1
"RTN","LA7SBCR2",115,0)
 ;
"RTN","LA7SBCR2",116,0)
 ; shipping date/time
"RTN","LA7SBCR2",117,0)
 I $P(LA7,"^",2) S LA7("SDT")=$$DT^LA7SBCR($P(LA7,"^",2))
"RTN","LA7SBCR2",118,0)
 ;
"RTN","LA7SBCR2",119,0)
 ; shipping manifest id
"RTN","LA7SBCR2",120,0)
 I $P(LA7,"^",3)'="" S LA7("SMID")=$P(LA7,"^",3)
"RTN","LA7SBCR2",121,0)
 ;
"RTN","LA7SBCR2",122,0)
 Q
"RTN","LA7SBCR2",123,0)
 ;
"RTN","LA7SBCR2",124,0)
 ;
"RTN","LA7SBCR2",125,0)
ERROR ;; Code/Text of error messages
"RTN","LA7SBCR2",126,0)
1 ;;User timeout/abort;;
"RTN","LA7SBCR2",127,0)
2 ;;Incorrect barcode format;;
"RTN","LA7SBCR2",128,0)
3 ;;No Shipping Configuration identified in file #62.9;;
"RTN","LA7SBCR2",129,0)
4 ;;Sender's Specimen ID source not presently supported;;
"RTN","LA7SBCR2",130,0)
5 ;;No entry in INSTITUTION file #4;;
"RTN","LA7SCE")
0^23^B67468089
"RTN","LA7SCE",1,0)
LA7SCE ;DALOI/JMC - Shipping Configuration Utility ;05/13/10  15:41
"RTN","LA7SCE",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,61,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SCE",3,0)
 ;
"RTN","LA7SCE",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7SCE",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7SCE",6,0)
 ;
"RTN","LA7SCE",7,0)
 Q
"RTN","LA7SCE",8,0)
 ;
"RTN","LA7SCE",9,0)
 ;
"RTN","LA7SCE",10,0)
SCFE ; Edit file #62.9, Shipping Configuration.
"RTN","LA7SCE",11,0)
 ;
"RTN","LA7SCE",12,0)
 N DA,DIE,DIC,DIR,DLAYGO,DIRUT,DR,DTOUT,DIROUT,X,Y
"RTN","LA7SCE",13,0)
 N LA7CHECK,LA7COPY,LA7NVAF,LA7SCFG,LA7SCFR,LA7TYPE,LA7VAF,LA7X,LR62,LRSS
"RTN","LA7SCE",14,0)
 ;
"RTN","LA7SCE",15,0)
 S DIC="^LAHM(62.9,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONFIGURATION: "
"RTN","LA7SCE",16,0)
 S DIC("DR")=".02;.03",DLAYGO=62.9
"RTN","LA7SCE",17,0)
 D ^DIC
"RTN","LA7SCE",18,0)
 K DA,DIC,DIE,DR
"RTN","LA7SCE",19,0)
 I Y<1 Q
"RTN","LA7SCE",20,0)
 ;
"RTN","LA7SCE",21,0)
 S LA7SCFG=+Y,LA7SCFG(0)=Y(0)
"RTN","LA7SCE",22,0)
 ;
"RTN","LA7SCE",23,0)
 D LOCK^DILF("^LAHM(62.9,LA7SCFG)")
"RTN","LA7SCE",24,0)
 I '$T D  Q
"RTN","LA7SCE",25,0)
 . D EN^DDIOL("Unable to obtain lock on entry "_$P(LA7SCFG(0),"^"),"","!?3")
"RTN","LA7SCE",26,0)
 ;
"RTN","LA7SCE",27,0)
 ; LA7TYPE=1 editing as collecting facility
"RTN","LA7SCE",28,0)
 ; LA7TYPE=2 editing as host facility
"RTN","LA7SCE",29,0)
 S DIR(0)="SO^1:Collecting facility;2:Host facility",DIR("A")="Are you editing this entry as the"
"RTN","LA7SCE",30,0)
 S DIR("?",1)="Is this entry used by the Collecting facility to ship specimens,"
"RTN","LA7SCE",31,0)
 S DIR("?",2)="or by the Host facility to accept a shipment."
"RTN","LA7SCE",32,0)
 S DIR("?")="This determines which fields are edited in the file."
"RTN","LA7SCE",33,0)
 D ^DIR
"RTN","LA7SCE",34,0)
 I $D(DIRUT) D UNL629 Q
"RTN","LA7SCE",35,0)
 S LA7TYPE=+Y
"RTN","LA7SCE",36,0)
 ;
"RTN","LA7SCE",37,0)
 ; Determine if other facility is non-VA.
"RTN","LA7SCE",38,0)
 ; When acting as collecting facility is host non-VA
"RTN","LA7SCE",39,0)
 ; When acting as host is collecting facility non-VA
"RTN","LA7SCE",40,0)
 S LA7VAF="",LA7VAF(1)=0,LA7NVAF=0
"RTN","LA7SCE",41,0)
 I $P(LA7SCFG(0),"^",2),$P(LA7SCFG(0),"^",3) D
"RTN","LA7SCE",42,0)
 . S LA7X=$S(LA7TYPE=1:$P(LA7SCFG(0),"^",3),1:$P(LA7SCFG(0),"^",2))
"RTN","LA7SCE",43,0)
 . S LA7VAF=$$GET1^DIQ(4,LA7X_",","AGENCY CODE","I")
"RTN","LA7SCE",44,0)
 . S LA7NVAF=$$NVAF^LA7VHLU2(LA7X)
"RTN","LA7SCE",45,0)
 . I LA7TYPE=1,$E($$ID^XUAF4("VASTANUM",$P(LA7SCFG(0),"^",3)),1,5)="200LR" S LA7VAF(1)=1
"RTN","LA7SCE",46,0)
 I LA7VAF="" D  Q
"RTN","LA7SCE",47,0)
 . N LA7ERR,LA7MSG,LA7X,LA7Y
"RTN","LA7SCE",48,0)
 . S LA7MSG="Unable to proceed - institution "
"RTN","LA7SCE",49,0)
 . S LA7Y=$S(LA7TYPE=1:$P(LA7SCFG(0),"^",3),1:$P(LA7SCFG(0),"^",2))
"RTN","LA7SCE",50,0)
 . S LA7X=$$GET1^DIQ(4,LA7Y_",",.01,"","","LA7ERR")
"RTN","LA7SCE",51,0)
 . I LA7X="" S LA7MSG=LA7MSG_"IEN #"_LA7Y_" - "_$G(LA7ERR("DIERR",1,"TEXT",1))
"RTN","LA7SCE",52,0)
 . E  S LA7MSG=LA7MSG_LA7X_" missing AGENCY CODE field in INSTITUTION file (#4)"
"RTN","LA7SCE",53,0)
 . D EN^DDIOL(LA7MSG,"","!!?3")
"RTN","LA7SCE",54,0)
 . D UNL629
"RTN","LA7SCE",55,0)
 ;
"RTN","LA7SCE",56,0)
 ; If acting as host ask if user wants to copy test config from another entry.
"RTN","LA7SCE",57,0)
 I LA7TYPE=2 D
"RTN","LA7SCE",58,0)
 . N DIC,Y
"RTN","LA7SCE",59,0)
 . S LA7COPY=$$ASKCOPY
"RTN","LA7SCE",60,0)
 . I LA7COPY<1 Q
"RTN","LA7SCE",61,0)
 . S LA7CHECK=$$CHECK(LA7SCFG)
"RTN","LA7SCE",62,0)
 . I LA7CHECK<1 S LA7COPY=LA7CHECK Q
"RTN","LA7SCE",63,0)
 . I LA7COPY<1 Q
"RTN","LA7SCE",64,0)
 . I LA7COPY=1 D  Q
"RTN","LA7SCE",65,0)
 . . S DIC="^LAHM(62.9,",DIC(0)="AEMQZ",DIC("A")="Select SHIPPING CONFIGURATION to COPY FROM: ",DIC("S")="I Y'=LA7SCFG"
"RTN","LA7SCE",66,0)
 . . D ^DIC K DIC("S")
"RTN","LA7SCE",67,0)
 . . I Y<1 Q
"RTN","LA7SCE",68,0)
 . . S LA7SCFR=+Y,LA7SCFR(0)=Y(0)
"RTN","LA7SCE",69,0)
 . . D CLRSCT(.LA7SCFG)
"RTN","LA7SCE",70,0)
 . . D COPYSC(.LA7SCFR,.LA7SCFG)
"RTN","LA7SCE",71,0)
 . I LA7COPY=2 D  Q
"RTN","LA7SCE",72,0)
 . . D CLRSCT(.LA7SCFG)
"RTN","LA7SCE",73,0)
 . . D COPY60(.LA7SCFG)
"RTN","LA7SCE",74,0)
 I LA7TYPE=2,LA7COPY<0 D UNL629 Q
"RTN","LA7SCE",75,0)
 K DA,DIE,DIC,DIR,DLAYGO,DIRUT,DR,DTOUT,DIROUT,X,Y
"RTN","LA7SCE",76,0)
 ;
"RTN","LA7SCE",77,0)
 ; Set up DR string when acting as collecting facility
"RTN","LA7SCE",78,0)
 I LA7TYPE=1 D
"RTN","LA7SCE",79,0)
 . S DR=".01;.02;.06;.03;.031;"
"RTN","LA7SCE",80,0)
 . I LA7NVAF>1 S DR=DR_".11;.12;.14;.15;"
"RTN","LA7SCE",81,0)
 . I LA7NVAF=1 S DR=DR_".14////1;.15////1;"
"RTN","LA7SCE",82,0)
 . I LA7VAF="V",LA7VAF(1)=1 S DR=DR_".14;"
"RTN","LA7SCE",83,0)
 . S DR=DR_".04;.07;.08;.09;.1;.13;44;60"
"RTN","LA7SCE",84,0)
 . S DR(2,62.9001)=".01;S LRSS=$P(^LAB(60,X,0),U,4);.02;.025;.026;.03;.04;.05;.06;.07"
"RTN","LA7SCE",85,0)
 ;
"RTN","LA7SCE",86,0)
 ; Set up DR string when acting as host facility
"RTN","LA7SCE",87,0)
 I LA7TYPE=2 D
"RTN","LA7SCE",88,0)
 . S DR=".01;.02;.06;.03;.031;"
"RTN","LA7SCE",89,0)
 . I LA7NVAF>1 S DR=DR_".11;.14;.15;"
"RTN","LA7SCE",90,0)
 . I LA7NVAF=1 S DR=DR_".14////0;.15////1;"
"RTN","LA7SCE",91,0)
 . S DR=DR_".04;.05;60"
"RTN","LA7SCE",92,0)
 . S DR(2,62.9001)=".01;S LRSS=$P(^LAB(60,X,0),U,4);.04;.09;S LR62=X D HLP62^LA7SMU1(LR62);.03;I LR62,$P(^LAB(62,LR62,0),U,2)'="""" S Y=""@2"";5.7;5.9"_$S(LA7NVAF=0:"////99VA62",1:"")_";@2"
"RTN","LA7SCE",93,0)
 ;
"RTN","LA7SCE",94,0)
 ; Determine if non-VA test codes/specimen fields should be asked
"RTN","LA7SCE",95,0)
 I LA7VAF'="V"!(LA7VAF="V"&(LA7VAF(1)=1)) D
"RTN","LA7SCE",96,0)
 . S DR(2,62.9001)=DR(2,62.9001)_";I $P(^LAHM(62.9,LA7SCFG,0),U,15)'=1 S Y=""@9"";5.1;5.2;5.5"
"RTN","LA7SCE",97,0)
 . I LA7TYPE=1,LA7NVAF=1 S DR(2,62.9001)=DR(2,62.9001)_"////99LST"
"RTN","LA7SCE",98,0)
 . I LA7TYPE=1,LA7VAF="V",LA7VAF(1)=1 S DR(2,62.9001)=DR(2,62.9001)_"//L"
"RTN","LA7SCE",99,0)
 . S DR(2,62.9001)=DR(2,62.9001)_";@9"
"RTN","LA7SCE",100,0)
 . I LA7TYPE=1 D
"RTN","LA7SCE",101,0)
 . . S DR(2,62.9001)=DR(2,62.9001)_";I $P(^LAHM(62.9,LA7SCFG,0),U,16)'=1 S Y=""@10"";5.3;5.4;5.6"
"RTN","LA7SCE",102,0)
 . . I LA7NVAF=1 S DR(2,62.9001)=DR(2,62.9001)_"////99LRP;5.7;5.8;5.9////99LRS"
"RTN","LA7SCE",103,0)
 . . S DR(2,62.9001)=DR(2,62.9001)_";@10"
"RTN","LA7SCE",104,0)
 . I LA7TYPE=2 D
"RTN","LA7SCE",105,0)
 . . S DR(2,62.9001)=DR(2,62.9001)_";I $P(^LAHM(62.9,LA7SCFG,0),U,16)'=1 S Y=""@10"";5.3;5.4;5.6"
"RTN","LA7SCE",106,0)
 . . I LA7NVAF=1 S DR(2,62.9001)=DR(2,62.9001)_"////99LRP"
"RTN","LA7SCE",107,0)
 . . S DR(2,62.9001)=DR(2,62.9001)_";@10"
"RTN","LA7SCE",108,0)
 ;
"RTN","LA7SCE",109,0)
 I LA7TYPE=1 D
"RTN","LA7SCE",110,0)
 . N J,K
"RTN","LA7SCE",111,0)
 . S DR(2,62.9001)=DR(2,62.9001)_";"
"RTN","LA7SCE",112,0)
 . S X="1.1;I 'X S Y=1.2;1.15;1.16;1.2;I 'X S Y=2.1;1.25;1.26;2.1;I '+X S Y=2.3;2.15;2.16;2.3;I '+X S Y=2.2;2.35;2.36;2.2;I '+X S Y=""@12"";2.25;2.26;@12"
"RTN","LA7SCE",113,0)
 . I ($L(DR(2,62.9001))+$L(X))<246 S DR(2,62.9001)=DR(2,62.9001)_X Q
"RTN","LA7SCE",114,0)
 . S K=$L(X,";")
"RTN","LA7SCE",115,0)
 . F J=1:1:K D
"RTN","LA7SCE",116,0)
 . . I ($L(DR(2,62.9001))+$L($P(X,";")))>244 S J=K Q
"RTN","LA7SCE",117,0)
 . . S DR(2,62.9001)=DR(2,62.9001)_$P(X,";")_";",X=$P(X,";",2,K)
"RTN","LA7SCE",118,0)
 . I X'="" S DR(2,62.9001,1)=X
"RTN","LA7SCE",119,0)
 ;
"RTN","LA7SCE",120,0)
 S DA=LA7SCFG,DIE="^LAHM(62.9,"
"RTN","LA7SCE",121,0)
 D ^DIE,UNL629
"RTN","LA7SCE",122,0)
 Q
"RTN","LA7SCE",123,0)
 ;
"RTN","LA7SCE",124,0)
 ;
"RTN","LA7SCE",125,0)
 ; Unlock entry in 62.9
"RTN","LA7SCE",126,0)
UNL629 ;
"RTN","LA7SCE",127,0)
 ;
"RTN","LA7SCE",128,0)
 ;ZEXCEPT: LA7SCFG
"RTN","LA7SCE",129,0)
 ;
"RTN","LA7SCE",130,0)
 L -^LAHM(62.9,LA7SCFG)
"RTN","LA7SCE",131,0)
 ;
"RTN","LA7SCE",132,0)
 Q
"RTN","LA7SCE",133,0)
 ;
"RTN","LA7SCE",134,0)
 ;
"RTN","LA7SCE",135,0)
SCTE ; Edit file #62.91, Shipping Container.
"RTN","LA7SCE",136,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",137,0)
 S DIC="^LAHM(62.91,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONTAINER: ",DLAYGO=62.91
"RTN","LA7SCE",138,0)
 D ^DIC
"RTN","LA7SCE",139,0)
 I Y<1 Q
"RTN","LA7SCE",140,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",141,0)
 D ^DIE
"RTN","LA7SCE",142,0)
 Q
"RTN","LA7SCE",143,0)
 ;
"RTN","LA7SCE",144,0)
 ;
"RTN","LA7SCE",145,0)
SCME ; Edit file #62.92, Shipping Method.
"RTN","LA7SCE",146,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",147,0)
 S DIC="^LAHM(62.92,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING METHOD: ",DLAYGO=62.92
"RTN","LA7SCE",148,0)
 D ^DIC
"RTN","LA7SCE",149,0)
 I Y<1 Q
"RTN","LA7SCE",150,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",151,0)
 D ^DIE
"RTN","LA7SCE",152,0)
 Q
"RTN","LA7SCE",153,0)
 ;
"RTN","LA7SCE",154,0)
 ;
"RTN","LA7SCE",155,0)
SCDE ; Edit file #62.93, Shipping Condition.
"RTN","LA7SCE",156,0)
 N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LA7SCE",157,0)
 S DIC="^LAHM(62.93,",DIC(0)="AELMQZ",DIC("A")="Select SHIPPING CONDITION: ",DLAYGO=62.93
"RTN","LA7SCE",158,0)
 D ^DIC
"RTN","LA7SCE",159,0)
 I Y<1 Q
"RTN","LA7SCE",160,0)
 S DA=+Y,DIE=DIC,DR=".01;.02"
"RTN","LA7SCE",161,0)
 D ^DIE
"RTN","LA7SCE",162,0)
 Q
"RTN","LA7SCE",163,0)
 ;
"RTN","LA7SCE",164,0)
 ;
"RTN","LA7SCE",165,0)
ASKCOPY() ; Ask if user want to copy tests from file #60 or another configuration in file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SCE",166,0)
 ;  Returns LA7COPY = -1 user quit/aborted
"RTN","LA7SCE",167,0)
 ;                  = 0 do not copy
"RTN","LA7SCE",168,0)
 ;                  = 1 use file #60
"RTN","LA7SCE",169,0)
 ;                  = 2 use another entry in #62.49
"RTN","LA7SCE",170,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SCE",171,0)
 S DIR(0)="SMO^0:Do NOT copy;1:Another Shipping Configuration;2:Test Catalog - LABORATORY TEST File #60"
"RTN","LA7SCE",172,0)
 S DIR("A")="Copy a test profile from",DIR("B")="Do NOT copy"
"RTN","LA7SCE",173,0)
 S DIR("?",1)="If you want to duplicate a shipping configuration using another configuration"
"RTN","LA7SCE",174,0)
 S DIR("?",2)="or build from the tests marked as catalog tests in the LABORATORY TEST file."
"RTN","LA7SCE",175,0)
 S DIR("?")="Select the appropriate option."
"RTN","LA7SCE",176,0)
 D ^DIR
"RTN","LA7SCE",177,0)
 I $D(DIRUT) S Y=-1
"RTN","LA7SCE",178,0)
 Q Y
"RTN","LA7SCE",179,0)
 ;
"RTN","LA7SCE",180,0)
 ;
"RTN","LA7SCE",181,0)
CHECK(LA7SCFG) ; Check if test exists for configuration and warn if overwriting
"RTN","LA7SCE",182,0)
 ; Call with LA7SCFG = shipping configuration ien
"RTN","LA7SCE",183,0)
 ;   Returns  -1 = user aborted/timeout
"RTN","LA7SCE",184,0)
 ;             0 = no - don't overwrite
"RTN","LA7SCE",185,0)
 ;             1 = yes - overwrite
"RTN","LA7SCE",186,0)
 I '$O(^LAHM(62.9,LA7SCFG,60,0)) Q 1
"RTN","LA7SCE",187,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SCE",188,0)
 S DIR(0)="SBO^0:NO;1:YES"
"RTN","LA7SCE",189,0)
 S DIR("A",1)="Tests already exist for this configuration!",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LA7SCE",190,0)
 D ^DIR
"RTN","LA7SCE",191,0)
 I $D(DIRUT) S Y=-1
"RTN","LA7SCE",192,0)
 Q Y
"RTN","LA7SCE",193,0)
 ;
"RTN","LA7SCE",194,0)
 ;
"RTN","LA7SCE",195,0)
COPYSC(LA7FR,LA7TO) ; Copy one shipping configuration to another
"RTN","LA7SCE",196,0)
 ; Call with LA7FR = shipping configuration to copy FROM.
"RTN","LA7SCE",197,0)
 ;           LA7TO = shipping configuration ien to copy TO.
"RTN","LA7SCE",198,0)
 ;
"RTN","LA7SCE",199,0)
 N LA760,LA762,LA76205,LA7X
"RTN","LA7SCE",200,0)
 ;
"RTN","LA7SCE",201,0)
 W !!,"Copying tests from configuration: ",$P(LA7FR(0),"^")," to ",$P(LA7TO(0),"^"),!
"RTN","LA7SCE",202,0)
 S LA7X=0
"RTN","LA7SCE",203,0)
 F  S LA7X=$O(^LAHM(62.9,LA7FR,60,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",204,0)
 . S LA760=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^") ; file #60 laboratory test ien.
"RTN","LA7SCE",205,0)
 . S LA76205=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^",4) ; file #62.05, urgency ien.
"RTN","LA7SCE",206,0)
 . S LA762=$P($G(^LAHM(62.9,LA7FR,60,LA7X,0)),"^",9) ; file #62, collection sample ien.
"RTN","LA7SCE",207,0)
 . I LA760 D FDA629(LA7TO,LA760,LA762,LA76205)
"RTN","LA7SCE",208,0)
 Q
"RTN","LA7SCE",209,0)
 ;
"RTN","LA7SCE",210,0)
 ;
"RTN","LA7SCE",211,0)
COPY60(LA7SCFG) ; Copy catalog tests from file #60 to shipping configuration.
"RTN","LA7SCE",212,0)
 ; Call with LA7SCFG = shipping configuration ien to add tests to from file #60
"RTN","LA7SCE",213,0)
 N LA760,LA762,LA7X
"RTN","LA7SCE",214,0)
 W !!,"Copying tests from file #60 LABORATORY TEST to ",$P(LA7SCFG(0),"^"),!
"RTN","LA7SCE",215,0)
 S LA760=0 ; file #60 pointer
"RTN","LA7SCE",216,0)
 I '$D(^LAHM(62.9,LA7SCFG,60,0)) S ^LAHM(62.9,LA7SCFG,60,0)="^62.9001P^0^0" ; set subfile zeroth node
"RTN","LA7SCE",217,0)
 F  S LA760=$O(^LAB(60,LA760)) Q:'LA760  D
"RTN","LA7SCE",218,0)
 . I '$P($G(^LAB(60,LA760,64)),"^",3) Q  ; Not a catalog item
"RTN","LA7SCE",219,0)
 . S LA7X=0
"RTN","LA7SCE",220,0)
 . F  S LA7X=$O(^LAB(60,LA760,3,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",221,0)
 . . S LA762=+$G(^LAB(60,LA760,3,LA7X,0)) ; file #62 pointer (collection sample)
"RTN","LA7SCE",222,0)
 . . I LA762 D FDA629(LA7SCFG,LA760,LA762,"")
"RTN","LA7SCE",223,0)
 Q
"RTN","LA7SCE",224,0)
 ;
"RTN","LA7SCE",225,0)
 ;
"RTN","LA7SCE",226,0)
FDA629(LA7SCFG,LA760,LA762,LA76205) ; Add entry to TEST/PROFILE multiple
"RTN","LA7SCE",227,0)
 ; Call with  LA7SCFG = file #62.9, shipping configuration ien
"RTN","LA7SCE",228,0)
 ;              LA760 = file #60, lab test ien
"RTN","LA7SCE",229,0)
 ;              LA762 = file #62, collection sample ien
"RTN","LA7SCE",230,0)
 ;            LA76205 = file #62.05 , urgency ien
"RTN","LA7SCE",231,0)
 N FDA,LA7DIE,LA7629
"RTN","LA7SCE",232,0)
 S LA7629(1)=LA7SCFG
"RTN","LA7SCE",233,0)
 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.01)=LA760
"RTN","LA7SCE",234,0)
 I LA76205 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.04)=LA76205
"RTN","LA7SCE",235,0)
 I LA762 S FDA(629,62.9001,"+2,"_+LA7SCFG_",",.09)=LA762
"RTN","LA7SCE",236,0)
 W:$X>(IOM-2) ! W "#"
"RTN","LA7SCE",237,0)
 D UPDATE^DIE("","FDA(629)","LA7629","LA7DIE(629)") ; Add test to shipping configuration.
"RTN","LA7SCE",238,0)
 Q
"RTN","LA7SCE",239,0)
 ;
"RTN","LA7SCE",240,0)
 ;
"RTN","LA7SCE",241,0)
CLRSCT(LA7SCFG) ; Clear shipping configuration tests.
"RTN","LA7SCE",242,0)
 ; Call with LA7SCFG = file #62.9, shipping configuration ien
"RTN","LA7SCE",243,0)
 N DA,DIK,LA7X
"RTN","LA7SCE",244,0)
 W !!,"Clearing existing tests from configuration: ",$P(LA7SCFG(0),"^"),!
"RTN","LA7SCE",245,0)
 S DA(1)=+LA7SCFG,DIK="^LAHM(62.9,"_DA(1)_",60,"
"RTN","LA7SCE",246,0)
 S LA7X=0
"RTN","LA7SCE",247,0)
 F  S LA7X=$O(^LAHM(62.9,LA7SCFG,60,LA7X)) Q:'LA7X  D
"RTN","LA7SCE",248,0)
 . W:$X>(IOM-2) ! W "*"
"RTN","LA7SCE",249,0)
 . S DA=LA7X D ^DIK
"RTN","LA7SCE",250,0)
 Q
"RTN","LA7SM")
0^26^B66694300
"RTN","LA7SM",1,0)
LA7SM ;DALOI/JMC - Shipping Manifest Options ;05/10/12  12:07
"RTN","LA7SM",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,74**;Sep 27, 1994;Build 229
"RTN","LA7SM",3,0)
 ;
"RTN","LA7SM",4,0)
CLSHIP ; Close/ship a shipping manifest
"RTN","LA7SM",5,0)
 D INIT
"RTN","LA7SM",6,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",7,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"1,3")
"RTN","LA7SM",8,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",9,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",10,0)
 . D CLEANUP
"RTN","LA7SM",11,0)
 D LOCKSM
"RTN","LA7SM",12,0)
 I LA7QUIT D  Q
"RTN","LA7SM",13,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",14,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",15,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM",16,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",17,0)
 I $P(LA7SM(0),"^",3)=1 D
"RTN","LA7SM",18,0)
 . S DIR(0)="SO^1:Close manifest;2:Ship manifest"
"RTN","LA7SM",19,0)
 . S DIR("A")="Select action to perform",DIR("B")=1
"RTN","LA7SM",20,0)
 I $P(LA7SM(0),"^",3)=3 D
"RTN","LA7SM",21,0)
 . S DIR(0)="YO"
"RTN","LA7SM",22,0)
 . S DIR("A")="Do you want to ship this manifest",DIR("B")="NO"
"RTN","LA7SM",23,0)
 D ^DIR
"RTN","LA7SM",24,0)
 I $D(DIRUT) D UNLOCKSM,CLEANUP Q
"RTN","LA7SM",25,0)
 S LA7ST=+Y
"RTN","LA7SM",26,0)
 I $P(LA7SM(0),"^",3)=3,LA7ST S LA7ST=2
"RTN","LA7SM",27,0)
 I $P(LA7SM(0),"^",3)=1 D SMSUP^LA7SMU(LA7SM,3,"SM04") ; Close manifest
"RTN","LA7SM",28,0)
 I LA7ST=2 D SHIP^LA7SM1 ; Ask for shipping date/time
"RTN","LA7SM",29,0)
 I 'LA7QUIT!$D(LA7ERR) S LA7CHK=0 D ASK^LA7SMP(LA7SM) ; Ask if want to print manifest.
"RTN","LA7SM",30,0)
 D UNLOCKSM,CLEANUP
"RTN","LA7SM",31,0)
 Q
"RTN","LA7SM",32,0)
 ;
"RTN","LA7SM",33,0)
 ;
"RTN","LA7SM",34,0)
SMET ; Edit a test on a shipping manifest
"RTN","LA7SM",35,0)
 ; Used to add/remove a test.
"RTN","LA7SM",36,0)
 D INIT
"RTN","LA7SM",37,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",38,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"1,3")
"RTN","LA7SM",39,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",40,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",41,0)
 . D CLEANUP
"RTN","LA7SM",42,0)
 D LOCKSM
"RTN","LA7SM",43,0)
 I LA7QUIT D  Q
"RTN","LA7SM",44,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",45,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",46,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SM",47,0)
 S DIR(0)="SO^1:Add test to manifest;2:Remove test from manifest"
"RTN","LA7SM",48,0)
 S DIR("A")="Select action to perform",DIR("B")=1
"RTN","LA7SM",49,0)
 D ^DIR
"RTN","LA7SM",50,0)
 I $D(DIRUT) D CLEANUP Q
"RTN","LA7SM",51,0)
 S LA7ACTON=+Y
"RTN","LA7SM",52,0)
 I LA7ACTON=1 F  D ADDTEST Q:LA7QUIT>.9  I $P(LA7QUIT,"^",2)'="" D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",53,0)
 I LA7ACTON=2 F  D REMVTST Q:LA7QUIT>.9  I $P(LA7QUIT,"^",2)'="" D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",54,0)
 I LA7QUIT>.9,$P(LA7QUIT,"^",2)'="" D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",55,0)
 E  D ASK^LA7SMP(LA7SM)
"RTN","LA7SM",56,0)
 D CLEANUP
"RTN","LA7SM",57,0)
 Q
"RTN","LA7SM",58,0)
 ;
"RTN","LA7SM",59,0)
 ;
"RTN","LA7SM",60,0)
ADDTEST ; Add individual test to an existing manifest
"RTN","LA7SM",61,0)
 ;
"RTN","LA7SM",62,0)
 N LA760,LA762,LA76805,LA7AA,LA7AD,LA7AN,LA7BY,LA7DIV,LA7I,LA7UID,LA7X
"RTN","LA7SM",63,0)
 ;
"RTN","LA7SM",64,0)
 S LA7QUIT=""
"RTN","LA7SM",65,0)
 D SEL
"RTN","LA7SM",66,0)
 I LA7QUIT Q
"RTN","LA7SM",67,0)
 ;
"RTN","LA7SM",68,0)
 S DIC="^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,",DIC(0)="AEMQ",DIC("A")="Select TEST to Add: "
"RTN","LA7SM",69,0)
 S DA=LA7AN,DA(1)=LA7AD,DA(2)=LA7AA
"RTN","LA7SM",70,0)
 D ^DIC
"RTN","LA7SM",71,0)
 I Y<1 D  Q
"RTN","LA7SM",72,0)
 . S LA7QUIT=1
"RTN","LA7SM",73,0)
 . I $D(DUOUT) S $P(LA7QUIT,"^",2)="User aborted"
"RTN","LA7SM",74,0)
 . I $D(DTOUT) S $P(LA7QUIT,"^",2)="User timeout"
"RTN","LA7SM",75,0)
 S LA760=+Y
"RTN","LA7SM",76,0)
 ;
"RTN","LA7SM",77,0)
 ; Test's zeroth node.
"RTN","LA7SM",78,0)
 S LA760(0)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0))
"RTN","LA7SM",79,0)
 ;
"RTN","LA7SM",80,0)
 ; Test completed - skip
"RTN","LA7SM",81,0)
 I $P(LA760(0),"^",5) S LA7QUIT=".5^Test already completed" Q
"RTN","LA7SM",82,0)
 ;
"RTN","LA7SM",83,0)
 ; Don't build if configuration has specific ordering locations and accession's ordering location is not on list.
"RTN","LA7SM",84,0)
 I $$CHKOLOC^LA7SM1(LA7AA,LA7AD,LA7AN,+LA7SCFG)<1 S LA7QUIT=".5^Accession's ordering location not on this configuration's list" Q
"RTN","LA7SM",85,0)
 ;
"RTN","LA7SM",86,0)
 ; Test urgency
"RTN","LA7SM",87,0)
 S LA76205=+$P(LA760(0),"^",2)
"RTN","LA7SM",88,0)
 I LA76205>49 S LA76205=$S(LA76205=50:9,1:LA76205-50)
"RTN","LA7SM",89,0)
 ;
"RTN","LA7SM",90,0)
 ; Don't build controls
"RTN","LA7SM",91,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)=62.3 S LA7QUIT=".5^Cannot select controls" Q
"RTN","LA7SM",92,0)
 ;
"RTN","LA7SM",93,0)
 S LA7I=0
"RTN","LA7SM",94,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D  Q:LA7QUIT
"RTN","LA7SM",95,0)
 . N X
"RTN","LA7SM",96,0)
 . S X(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",97,0)
 . I $P(X(0),"^",2)=LA760,$P(X(0),"^",8)'=0 S LA7QUIT=".5^Test already on this shipping manifest"
"RTN","LA7SM",98,0)
 I LA7QUIT Q
"RTN","LA7SM",99,0)
 ;
"RTN","LA7SM",100,0)
 ; Build TMP global with test profile
"RTN","LA7SM",101,0)
 D SCBLD^LA7SM1(+LA7SCFG)
"RTN","LA7SM",102,0)
 ;
"RTN","LA7SM",103,0)
 ; Test already on shipping manifest - skip
"RTN","LA7SM",104,0)
 I $$SHIPCK^LA7SMU1(LA7UID,LA7AA,LA760,$P(LA760(0),"^",10)) D  Q
"RTN","LA7SM",105,0)
 . S LA7QUIT=".5^Test already on manifest "_$P($G(^LAHM(62.8,+$P(LA760(0),"^",10),0)),"^")
"RTN","LA7SM",106,0)
 ;
"RTN","LA7SM",107,0)
 ; Accession's division
"RTN","LA7SM",108,0)
 S LA7DIV=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.4)),"^")
"RTN","LA7SM",109,0)
 ;
"RTN","LA7SM",110,0)
 ; Check if test eligible for manifest
"RTN","LA7SM",111,0)
 D SCHK^LA7SM1
"RTN","LA7SM",112,0)
 I 'LA7FLAG S LA7QUIT=".5^Test not selectable for this configuration" Q
"RTN","LA7SM",113,0)
 ;
"RTN","LA7SM",114,0)
 D LOCK68^LA7SMB
"RTN","LA7SM",115,0)
 I '$T D  Q
"RTN","LA7SM",116,0)
 . I $D(ZTQUEUED) Q
"RTN","LA7SM",117,0)
 . D EN^DDIOL("Unable to obtain lock for accession "_LA7UID_" test "_$$GET1^DIQ(60,LA760_",",.01),"","!?5")
"RTN","LA7SM",118,0)
 ;
"RTN","LA7SM",119,0)
 D ADD^LA7SMB1,EN^DDIOL("Test added to manifest","","!?5")
"RTN","LA7SM",120,0)
 D UNLOCK68^LA7SMB
"RTN","LA7SM",121,0)
 Q
"RTN","LA7SM",122,0)
 ;
"RTN","LA7SM",123,0)
 ;
"RTN","LA7SM",124,0)
REMVTST ; Remove a test from manifest - actually flags test as "removed".
"RTN","LA7SM",125,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA7I,LA7TCNT,LA7Y,LA760,X,Y
"RTN","LA7SM",126,0)
 S LA7QUIT=""
"RTN","LA7SM",127,0)
 D SEL
"RTN","LA7SM",128,0)
 I LA7QUIT Q
"RTN","LA7SM",129,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM",130,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SM",131,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",132,0)
 . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM",133,0)
 . I $P(LA7I(0),"^",8),$P(LA7I(0),"^",8)'=1 S LA7QUIT=".5^Accession not pending shipment" Q
"RTN","LA7SM",134,0)
 . S LA7TCNT=LA7TCNT+1,LA760(LA7TCNT)=LA7I_"^"_LA7I(0)
"RTN","LA7SM",135,0)
 I 'LA7TCNT,'LA7QUIT S LA7QUIT=".5^Accession is not on this shipping manifest"
"RTN","LA7SM",136,0)
 I LA7QUIT Q
"RTN","LA7SM",137,0)
 S LA7I=0
"RTN","LA7SM",138,0)
 F  S LA7I=$O(LA760(LA7I)) Q:'LA7I  D EN^DDIOL(LA7I_" "_$P($G(^LAB(60,+$P(LA760(LA7I),"^",3),0)),"^"),"","!?5")
"RTN","LA7SM",139,0)
 S DIR(0)="LO^1:"_LA7TCNT,DIR("A")="Select test(s) to remove"
"RTN","LA7SM",140,0)
 D ^DIR
"RTN","LA7SM",141,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SM",142,0)
 M LA7YARRY=Y
"RTN","LA7SM",143,0)
 S LA7Y=""
"RTN","LA7SM",144,0)
 F  S LA7Y=$O(LA7YARRY(LA7Y)) Q:LA7Y=""  D
"RTN","LA7SM",145,0)
 . F LA7I=1:1 Q:'$P(LA7YARRY(LA7Y),",",LA7I)  D
"RTN","LA7SM",146,0)
 . . S LA7X=$P(LA7YARRY(LA7Y),",",LA7I)
"RTN","LA7SM",147,0)
 . . N FDA,LA7628,LA768,LA7DATA
"RTN","LA7SM",148,0)
 . . S LA762801=+(LA760(LA7X))_","_+LA7SM_","
"RTN","LA7SM",149,0)
 . . S FDA(62.8,62.801,LA762801,.08)=0
"RTN","LA7SM",150,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)") ; "Remove" test from shipping manifest
"RTN","LA7SM",151,0)
 . . D EN^DDIOL($P($G(^LAB(60,+$P(LA760(LA7X),"^",3),0)),"^")_" removed from manifest...","","!?5")
"RTN","LA7SM",152,0)
 . . ; Update event file
"RTN","LA7SM",153,0)
 . . S LA7DATA="SM51^"_$$NOW^XLFDT_"^"_$P(LA760(LA7X),"^",3)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM",154,0)
 . . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SM",155,0)
 . . ; Update accession
"RTN","LA7SM",156,0)
 . . D ACCSUP^LA7SMU(LA7UID,$P(LA760(LA7X),"^",3),"@")
"RTN","LA7SM",157,0)
  Q
"RTN","LA7SM",158,0)
 ;
"RTN","LA7SM",159,0)
 ;
"RTN","LA7SM",160,0)
CANC ; Cancel a shipping manifest
"RTN","LA7SM",161,0)
 D INIT
"RTN","LA7SM",162,0)
 I LA7QUIT D CLEANUP Q
"RTN","LA7SM",163,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"1,3")
"RTN","LA7SM",164,0)
 I LA7SM<0 D  Q
"RTN","LA7SM",165,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM",166,0)
 . D CLEANUP
"RTN","LA7SM",167,0)
 D LOCKSM
"RTN","LA7SM",168,0)
 I LA7QUIT D  Q
"RTN","LA7SM",169,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM",170,0)
 . D UNLOCKSM,CLEANUP
"RTN","LA7SM",171,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SM",172,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",173,0)
 S DIR(0)="YO"
"RTN","LA7SM",174,0)
 S DIR("A")="Do you want to cancel this manifest",DIR("B")="NO"
"RTN","LA7SM",175,0)
 D ^DIR
"RTN","LA7SM",176,0)
 I $D(DIRUT) D UNLOCKSM,CLEANUP Q
"RTN","LA7SM",177,0)
 S LA7ST=+Y
"RTN","LA7SM",178,0)
 I LA7ST=1 D
"RTN","LA7SM",179,0)
 . S LA7I=0
"RTN","LA7SM",180,0)
 . F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM",181,0)
 . . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM",182,0)
 . . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM",183,0)
 . . ; "Remove" test from shipping manifest
"RTN","LA7SM",184,0)
 . . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM",185,0)
 . . S FDA(62.8,62.801,LA762801,.08)=0
"RTN","LA7SM",186,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)")
"RTN","LA7SM",187,0)
 . . ; Update event file
"RTN","LA7SM",188,0)
 . . S LA7DATA="SM51^"_$$NOW^XLFDT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM",189,0)
 . . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SM",190,0)
 . . ; Update accession
"RTN","LA7SM",191,0)
 . . D ACCSUP^LA7SMU($P(LA7I(0),"^",5),$P(LA7I(0),"^",2),"@")
"RTN","LA7SM",192,0)
 . D SMSUP^LA7SMU(LA7SM,0,"SM00") ; Cancel manifest
"RTN","LA7SM",193,0)
 D UNLOCKSM,CLEANUP
"RTN","LA7SM",194,0)
 Q
"RTN","LA7SM",195,0)
 ;
"RTN","LA7SM",196,0)
 ;
"RTN","LA7SM",197,0)
SEL ; Select accession
"RTN","LA7SM",198,0)
 ;
"RTN","LA7SM",199,0)
 N LRAA,LRACC,LRAD,LRAN,X
"RTN","LA7SM",200,0)
 ;
"RTN","LA7SM",201,0)
 ; Select by accession, ^LRWU4 needs variable LRACC.
"RTN","LA7SM",202,0)
 S LRACC=""
"RTN","LA7SM",203,0)
 D ^LRWU4
"RTN","LA7SM",204,0)
 I $D(DUOUT) S LA7QUIT="1^User aborted" Q
"RTN","LA7SM",205,0)
 I $D(DTOUT) S LA7QUIT="1^User timeout" Q
"RTN","LA7SM",206,0)
 I (LRAA*LRAD*LRAN)<1 S LA7QUIT="1" Q
"RTN","LA7SM",207,0)
 ;
"RTN","LA7SM",208,0)
 S LA7AA=LRAA,LA7AD=LRAD,LA7AN=LRAN
"RTN","LA7SM",209,0)
 ;
"RTN","LA7SM",210,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SM",211,0)
 I LA7UID="" S LA7QUIT="2^Database error - accession missing UID" Q
"RTN","LA7SM",212,0)
 ;
"RTN","LA7SM",213,0)
 ; Specimen type
"RTN","LA7SM",214,0)
 S (LA762,LA76805)=0
"RTN","LA7SM",215,0)
 S X=+$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0))
"RTN","LA7SM",216,0)
 I X D
"RTN","LA7SM",217,0)
 . S X=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,X,0))
"RTN","LA7SM",218,0)
 . S LA76805=+$P(X,"^"),LA762=+$P(X,"^",2)
"RTN","LA7SM",219,0)
 Q
"RTN","LA7SM",220,0)
 ;
"RTN","LA7SM",221,0)
 ;
"RTN","LA7SM",222,0)
INIT ; Initialize variables
"RTN","LA7SM",223,0)
 S DT=$$DT^XLFDT
"RTN","LA7SM",224,0)
 S LA7QUIT=0
"RTN","LA7SM",225,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(1) ; Select shipping configuration
"RTN","LA7SM",226,0)
 I LA7SCFG<1 S LA7QUIT=1 Q
"RTN","LA7SM",227,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SM",228,0)
 K ^TMP("LA7ERR",$J)
"RTN","LA7SM",229,0)
 Q
"RTN","LA7SM",230,0)
 ;
"RTN","LA7SM",231,0)
 ;
"RTN","LA7SM",232,0)
LOCKSM ; Lock entry in file 62.8
"RTN","LA7SM",233,0)
 ;L +^LAHM(62.8,+LA7SM):1 ; Set lock.
"RTN","LA7SM",234,0)
 D LOCK^DILF("^LAHM(62.8,+LA7SM)")
"RTN","LA7SM",235,0)
 I '$T S LA7QUIT="1^Someone else is editing this shipping manifest"
"RTN","LA7SM",236,0)
 Q
"RTN","LA7SM",237,0)
 ;
"RTN","LA7SM",238,0)
 ;
"RTN","LA7SM",239,0)
UNLOCKSM ; Unlock entry in file 62.8
"RTN","LA7SM",240,0)
 L -^LAHM(62.8,+LA7SM) ; Release lock.
"RTN","LA7SM",241,0)
 Q
"RTN","LA7SM",242,0)
 ;
"RTN","LA7SM",243,0)
 ;
"RTN","LA7SM",244,0)
CLEANUP ; Cleanup variables
"RTN","LA7SM",245,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SM",246,0)
 K DA,DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM",247,0)
 K LA7AA,LA7ACTON,LA7AD,LA7AN,LA7DATA,LA7EV,LA7FLAG,LA7I,LA7QUIT,LA7SCFG,LA7SDT,LA7SM,LA7SMCNT,LA7ST,LA7UID,LA7X,LA7YARRY
"RTN","LA7SM",248,0)
 K LA760,LA76205,LA762801,LA76805
"RTN","LA7SM",249,0)
 K ^TMP("LA7ERR",$J)
"RTN","LA7SM",250,0)
 D CLEANUP^LA7SMB
"RTN","LA7SM",251,0)
 Q
"RTN","LA7SM1")
0^27^B56269979
"RTN","LA7SM1",1,0)
LA7SM1 ;DALOI/JMC - Shipping Manifest Options ;04/13/10  15:00
"RTN","LA7SM1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,61,74**;Sep 27, 1994;Build 229
"RTN","LA7SM1",3,0)
 ;
"RTN","LA7SM1",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7SM1",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7SM1",6,0)
 ;
"RTN","LA7SM1",7,0)
RETRANS ; Retransmit a shipping manifest.
"RTN","LA7SM1",8,0)
 ;
"RTN","LA7SM1",9,0)
 ;ZEXCEPT: LA7QUIT,LA7SCFG,LA7SM
"RTN","LA7SM1",10,0)
 ;
"RTN","LA7SM1",11,0)
 D INIT^LA7SM
"RTN","LA7SM1",12,0)
 I LA7QUIT D CLEANUP^LA7SM Q
"RTN","LA7SM1",13,0)
 ;
"RTN","LA7SM1",14,0)
 I '$P($G(^LAHM(62.9,+LA7SCFG,0)),"^",7) D  Q
"RTN","LA7SM1",15,0)
 . N MSG
"RTN","LA7SM1",16,0)
 . S MSG="This shipping configuration "_$P(LA7SCFG,"^",2)_" is not setup for electronic transmission."
"RTN","LA7SM1",17,0)
 . D EN^DDIOL(MSG,"","!?5")
"RTN","LA7SM1",18,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",19,0)
 ;
"RTN","LA7SM1",20,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"4")
"RTN","LA7SM1",21,0)
 I LA7SM<0 D  Q
"RTN","LA7SM1",22,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM1",23,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",24,0)
 ;
"RTN","LA7SM1",25,0)
 I LA7QUIT D  Q
"RTN","LA7SM1",26,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM1",27,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM1",28,0)
 ;
"RTN","LA7SM1",29,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM1",30,0)
 ;
"RTN","LA7SM1",31,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SM1",32,0)
 ;
"RTN","LA7SM1",33,0)
 S DIR(0)="YO"
"RTN","LA7SM1",34,0)
 S DIR("A")="Sure you want to retransmit this manifest",DIR("B")="NO"
"RTN","LA7SM1",35,0)
 D ^DIR
"RTN","LA7SM1",36,0)
 I $D(DIRUT) D CLEANUP^LA7SM Q
"RTN","LA7SM1",37,0)
 ;
"RTN","LA7SM1",38,0)
 ; Do tasking of transmission
"RTN","LA7SM1",39,0)
 I Y D TASKSM
"RTN","LA7SM1",40,0)
 D CLEANUP^LA7SM
"RTN","LA7SM1",41,0)
 ;
"RTN","LA7SM1",42,0)
 Q
"RTN","LA7SM1",43,0)
 ;
"RTN","LA7SM1",44,0)
 ;
"RTN","LA7SM1",45,0)
SHIP ; Ship a manifest
"RTN","LA7SM1",46,0)
 ; Used to flag shipping manifest for shipping
"RTN","LA7SM1",47,0)
 ; If electronically connected -> transmit shipping manifest in HL7 message.
"RTN","LA7SM1",48,0)
 ;
"RTN","LA7SM1",49,0)
 ;ZEXCEPT: LA7QUIT,LA7SCFG,LA7SM
"RTN","LA7SM1",50,0)
 ;
"RTN","LA7SM1",51,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,LA762801,LA7DATA,LA7ERR,LA7FDA,LA7I,LA7SDT,LA7TCNT,LA7X,X,Y
"RTN","LA7SM1",52,0)
 ;
"RTN","LA7SM1",53,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM1",54,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM1",55,0)
 . I $$CHKTST^LA7SMU(+LA7SM,LA7I) Q
"RTN","LA7SM1",56,0)
 . I $P($G(^LAHM(62.8,+LA7SM,10,LA7I,0)),"^",8)'=1 Q
"RTN","LA7SM1",57,0)
 . S LA7TCNT=LA7TCNT+1 ; Test ready to ship.
"RTN","LA7SM1",58,0)
 . D CHKREQI^LA7SM2(+LA7SM,LA7I)
"RTN","LA7SM1",59,0)
 ;
"RTN","LA7SM1",60,0)
 I 'LA7TCNT D  Q
"RTN","LA7SM1",61,0)
 . S LA7QUIT=1
"RTN","LA7SM1",62,0)
 . D EN^DDIOL("No tests on shipping manifest - Shipping Aborted","","!?5")
"RTN","LA7SM1",63,0)
 ;
"RTN","LA7SM1",64,0)
 I $G(LA7ERR) D  Q
"RTN","LA7SM1",65,0)
 . S LA7QUIT=1
"RTN","LA7SM1",66,0)
 . D EN^DDIOL("Print shipping manifest for complete listing of errors","","!!?5")
"RTN","LA7SM1",67,0)
 . D EN^DDIOL("The following errors were found - Shipping Aborted","","!?5")
"RTN","LA7SM1",68,0)
 . S LA7X=""
"RTN","LA7SM1",69,0)
 . F  S LA7X=$O(LA7ERR(LA7X)) Q:LA7X=""  D EN^DDIOL(LA7ERR(LA7X),"","!?5")
"RTN","LA7SM1",70,0)
 . D EN^DDIOL("","","!")
"RTN","LA7SM1",71,0)
 ;
"RTN","LA7SM1",72,0)
 S DIR(0)="D^::EFRX",DIR("A")="Enter Manifest Shipping Date",DIR("B")="NOW"
"RTN","LA7SM1",73,0)
 D ^DIR
"RTN","LA7SM1",74,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SM1",75,0)
 S LA7SDT=Y
"RTN","LA7SM1",76,0)
 D SMSUP^LA7SMU(LA7SM,4,"SM05^"_LA7SDT)
"RTN","LA7SM1",77,0)
 ;
"RTN","LA7SM1",78,0)
 K LA7I
"RTN","LA7SM1",79,0)
 S LA7I=0
"RTN","LA7SM1",80,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,LA7I)) Q:'LA7I  D
"RTN","LA7SM1",81,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM1",82,0)
 . I $P(LA7I(0),"^",8)'=1 Q  ; Not "pending shipment".
"RTN","LA7SM1",83,0)
 . ; Change status to "shipped".
"RTN","LA7SM1",84,0)
 . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM1",85,0)
 . S LA7FDA(62.8,62.801,LA762801,.08)=2
"RTN","LA7SM1",86,0)
 . D FILE^DIE("","LA7FDA(62.8)","LA7DIE(2)")
"RTN","LA7SM1",87,0)
 . ; Update event file
"RTN","LA7SM1",88,0)
 . S LA7DATA="SM53^"_$$NOW^XLFDT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM1",89,0)
 . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SM1",90,0)
 ;
"RTN","LA7SM1",91,0)
 ; Do tasking of transmission
"RTN","LA7SM1",92,0)
 I $P($G(^LAHM(62.9,+LA7SCFG,0)),"^",7) D TASKSM
"RTN","LA7SM1",93,0)
 ;
"RTN","LA7SM1",94,0)
 Q
"RTN","LA7SM1",95,0)
 ;
"RTN","LA7SM1",96,0)
 ;
"RTN","LA7SM1",97,0)
SCBLD(LA7SCFG) ; Build test profile for a configuration
"RTN","LA7SM1",98,0)
 ; Call with LA7SCFG = ien of shipping configuration in file #62.9
"RTN","LA7SM1",99,0)
 N I,J,K,X
"RTN","LA7SM1",100,0)
 ;
"RTN","LA7SM1",101,0)
 K ^TMP("LA7SMB",$J),^TMP("LA7SMB-R",$J)
"RTN","LA7SM1",102,0)
 ;
"RTN","LA7SM1",103,0)
 ; ^TMP("LA7SMB",$J,accession area,file 60 test,specimen,urgency,division,node)
"RTN","LA7SM1",104,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",105,0)
 ;
"RTN","LA7SM1",106,0)
 ; When accession/test need to have been received via an inter-divisional manifest (feeder shipping configuration) before re-shipment
"RTN","LA7SM1",107,0)
 ; ^TMP("LA7SMB-R",$J,feeder shipping conf,accession area,file 60 test,specimen,urgency,division,node)
"RTN","LA7SM1",108,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",109,0)
 ;
"RTN","LA7SM1",110,0)
 ; If feeder configurations then build "LA7SMB-R" node.
"RTN","LA7SM1",111,0)
 ; If no feeder configurations then build "LA7SMB" node.
"RTN","LA7SM1",112,0)
 ;
"RTN","LA7SM1",113,0)
 S X=0
"RTN","LA7SM1",114,0)
 F  S X=$O(^LAHM(62.9,LA7SCFG,60,X)) Q:'X  D
"RTN","LA7SM1",115,0)
 . F I=0,1,2,5 S X(I)=$G(^LAHM(62.9,LA7SCFG,60,X,I))
"RTN","LA7SM1",116,0)
 . ; No accession area - skip
"RTN","LA7SM1",117,0)
 . I '$P(X(0),"^",2) Q
"RTN","LA7SM1",118,0)
 . S ^TMP("LA7SMB",$J,$P(X(0),"^",2),+X(0))=""
"RTN","LA7SM1",119,0)
 . I $O(^LAHM(62.9,LA7SCFG,60,X,6,0)) D  Q
"RTN","LA7SM1",120,0)
 . . S J=0
"RTN","LA7SM1",121,0)
 . . F  S J=$O(^LAHM(62.9,LA7SCFG,60,X,6,J)) Q:'J  D
"RTN","LA7SM1",122,0)
 . . . S K=+^LAHM(62.9,LA7SCFG,60,X,6,J,0)
"RTN","LA7SM1",123,0)
 . . . F I=0,1,2,5 S ^TMP("LA7SMB-R",$J,K,$P(X(0),"^",2),+X(0),+$P(X(0),"^",3),+$P(X(0),"^",4),+$P(X(0),"^",10),I)=X(I)
"RTN","LA7SM1",124,0)
 . F I=0,1,2,5 S ^TMP("LA7SMB",$J,$P(X(0),"^",2),+X(0),+$P(X(0),"^",3),+$P(X(0),"^",4),+$P(X(0),"^",10),I)=X(I)
"RTN","LA7SM1",125,0)
 Q
"RTN","LA7SM1",126,0)
 ;
"RTN","LA7SM1",127,0)
 ;
"RTN","LA7SM1",128,0)
SCHK ; Check shipping configuration for test eligible to add.
"RTN","LA7SM1",129,0)
 ; Called by LA7SM, LA7SMB
"RTN","LA7SM1",130,0)
 ;
"RTN","LA7SM1",131,0)
 ;ZEXCEPT: LA760,LA7629,LA7AA,LA7FLAG,LA7X
"RTN","LA7SM1",132,0)
 ;
"RTN","LA7SM1",133,0)
 N LA7J,LA7K,LA7L,LA7M
"RTN","LA7SM1",134,0)
 ;
"RTN","LA7SM1",135,0)
 K LA7X
"RTN","LA7SM1",136,0)
 ; Flag to determine if accession/test should be added to manifest
"RTN","LA7SM1",137,0)
 S LA7FLAG=0
"RTN","LA7SM1",138,0)
 ;
"RTN","LA7SM1",139,0)
 ; ^TMP("LA7SMB",$J,accession area,file 60 test,specimen,urgency,division, node)
"RTN","LA7SM1",140,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",141,0)
 ;  Quit if this accession area/test not defined for configuration.
"RTN","LA7SM1",142,0)
 I '$P(LA760(0),"^",10) D  Q
"RTN","LA7SM1",143,0)
 . I '$D(^TMP("LA7SMB",$J,LA7AA,LA760)) Q
"RTN","LA7SM1",144,0)
 . D CHKMASK
"RTN","LA7SM1",145,0)
 . I LA7FLAG F LA7J=0,1,2,5 S LA7X(LA7J)=$G(^TMP("LA7SMB",$J,LA7AA,LA760,LA7K,LA7L,LA7M,LA7J))
"RTN","LA7SM1",146,0)
 ;
"RTN","LA7SM1",147,0)
 ; ^TMP("LA7SMB-R",$J,feeder shipping conf,accession area,file 60 test,specimen,urgency,division,node)
"RTN","LA7SM1",148,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",149,0)
 ;  Quit if this accession area/test not defined for this and feeder configurations .
"RTN","LA7SM1",150,0)
 I $P(LA760(0),"^",10) D  Q
"RTN","LA7SM1",151,0)
 . S LA7629=$P($G(^LAHM(62.8,$P(LA760(0),"^",10),0)),"^",2)
"RTN","LA7SM1",152,0)
 . I '$D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760)) Q
"RTN","LA7SM1",153,0)
 . D CHKMASKR
"RTN","LA7SM1",154,0)
 . I LA7FLAG F LA7J=0,1,2,5 S LA7X(LA7J)=$G(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,LA7K,LA7L,LA7M,LA7J))
"RTN","LA7SM1",155,0)
 ;
"RTN","LA7SM1",156,0)
 Q
"RTN","LA7SM1",157,0)
 ;
"RTN","LA7SM1",158,0)
 ;
"RTN","LA7SM1",159,0)
CHKMASK ; Check pattern mask for tests that match on specimen, urgency and division.
"RTN","LA7SM1",160,0)
 ;
"RTN","LA7SM1",161,0)
 ; ^TMP("LA7SMB",$J,accession area,file 60 test,specimen,urgency,division, node)
"RTN","LA7SM1",162,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",163,0)
 ;
"RTN","LA7SM1",164,0)
 ;ZEXCEPT: LA760,LA76205,LA7629,LA76805,LA7AA,LA7DIV,LA7FLAG,LA7K,LA7L,LA7M
"RTN","LA7SM1",165,0)
 ;
"RTN","LA7SM1",166,0)
 ;
"RTN","LA7SM1",167,0)
 ; Specimen, urgency, and division match
"RTN","LA7SM1",168,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA76805,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",169,0)
 ;
"RTN","LA7SM1",170,0)
 ; Specimen and urgency match; any division
"RTN","LA7SM1",171,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA76805,LA76205,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",172,0)
 ;
"RTN","LA7SM1",173,0)
 ; Specimen and division match; any urgency
"RTN","LA7SM1",174,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA76805,0,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=LA7DIV Q
"RTN","LA7SM1",175,0)
 ;
"RTN","LA7SM1",176,0)
 ; Specimen match; any urgency/division
"RTN","LA7SM1",177,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,LA76805,0,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=0 Q
"RTN","LA7SM1",178,0)
 ;
"RTN","LA7SM1",179,0)
 ; Any specimen; urgency and division match
"RTN","LA7SM1",180,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,0,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",181,0)
 ;
"RTN","LA7SM1",182,0)
 ; Any specimen and division; urgency match
"RTN","LA7SM1",183,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,0,LA76205,0)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",184,0)
 ;
"RTN","LA7SM1",185,0)
 ; Any specimen and urgency; division match
"RTN","LA7SM1",186,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,0,0,LA7DIV)) S LA7FLAG=1,(LA7K,LA7L)=0,LA7M=LA7DIV Q
"RTN","LA7SM1",187,0)
 ;
"RTN","LA7SM1",188,0)
 ; Any specimen, urgency or division
"RTN","LA7SM1",189,0)
 I $D(^TMP("LA7SMB",$J,LA7AA,LA760,0,0,0)) S LA7FLAG=1,(LA7K,LA7L,LA7M)=0 Q
"RTN","LA7SM1",190,0)
 ;
"RTN","LA7SM1",191,0)
 Q
"RTN","LA7SM1",192,0)
 ;
"RTN","LA7SM1",193,0)
 ;
"RTN","LA7SM1",194,0)
CHKMASKR ; Check pattern mask for re-shipped tests that match on specimen, urgency and division.
"RTN","LA7SM1",195,0)
 ;
"RTN","LA7SM1",196,0)
 ; ^TMP("LA7SMB-R",$J,feeder shipping conf,accession area,file 60 test,specimen,urgency,division,node)
"RTN","LA7SM1",197,0)
 ;  specimen=0 if any specimen, urgency=0 if any urgency, division=0 if any division
"RTN","LA7SM1",198,0)
 ;
"RTN","LA7SM1",199,0)
 ;ZEXCEPT: LA760,LA76205,LA7629,LA76805,LA7AA,LA7DIV,LA7FLAG,LA7K,LA7L,LA7M
"RTN","LA7SM1",200,0)
 ;
"RTN","LA7SM1",201,0)
 ; Specimen, urgency, and division match
"RTN","LA7SM1",202,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,LA76805,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",203,0)
 ;
"RTN","LA7SM1",204,0)
 ; Specimen and urgency match; any division
"RTN","LA7SM1",205,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,LA76805,LA76205,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",206,0)
 ;
"RTN","LA7SM1",207,0)
 ; Specimen and division match; any urgency
"RTN","LA7SM1",208,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,LA76805,0,LA7DIV)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=LA7DIV Q
"RTN","LA7SM1",209,0)
 ;
"RTN","LA7SM1",210,0)
 ; Specimen match; any urgency/division
"RTN","LA7SM1",211,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,LA76805,0,0)) S LA7FLAG=1,LA7K=LA76805,LA7L=0,LA7M=0 Q
"RTN","LA7SM1",212,0)
 ;
"RTN","LA7SM1",213,0)
 ; Any specimen; urgency and division match
"RTN","LA7SM1",214,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,0,LA76205,LA7DIV)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=LA7DIV Q
"RTN","LA7SM1",215,0)
 ;
"RTN","LA7SM1",216,0)
 ; Any specimen and division; urgency match
"RTN","LA7SM1",217,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,0,LA76205,0)) S LA7FLAG=1,LA7K=0,LA7L=LA76205,LA7M=0 Q
"RTN","LA7SM1",218,0)
 ;
"RTN","LA7SM1",219,0)
 ; Any specimen and urgency; division match
"RTN","LA7SM1",220,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,0,0,LA7DIV)) S LA7FLAG=1,(LA7K,LA7L)=0,LA7M=LA7DIV Q
"RTN","LA7SM1",221,0)
 ;
"RTN","LA7SM1",222,0)
 ; Any specimen, urgency or division
"RTN","LA7SM1",223,0)
 I $D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760,0,0,0)) S LA7FLAG=1,(LA7K,LA7L,LA7M)=0 Q
"RTN","LA7SM1",224,0)
 ;
"RTN","LA7SM1",225,0)
 Q
"RTN","LA7SM1",226,0)
 ;
"RTN","LA7SM1",227,0)
 ;
"RTN","LA7SM1",228,0)
TASKSM ; Task electronic transmission of manifest
"RTN","LA7SM1",229,0)
 ;
"RTN","LA7SM1",230,0)
 ;ZEXCEPT: LA7SM
"RTN","LA7SM1",231,0)
 ;
"RTN","LA7SM1",232,0)
 N MSG,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7SM1",233,0)
 ;
"RTN","LA7SM1",234,0)
 S ZTRTN="BUILD^LA7VORM1("""_+$P(LA7SM,"^")_""")",ZTDESC="E-Transmission of Lab Shipping Manifest"
"RTN","LA7SM1",235,0)
 S ZTSAVE("LA7SM")="",ZTIO="",ZTDTH=$$NOW^XLFDT
"RTN","LA7SM1",236,0)
 D ^%ZTLOAD
"RTN","LA7SM1",237,0)
 ;
"RTN","LA7SM1",238,0)
 S MSG="Electronic Transmission of Shipping Manifest "_$S($G(ZTSK):"queued as task# "_ZTSK,1:"NOT queued!")
"RTN","LA7SM1",239,0)
 D EN^DDIOL(MSG,"","!?5")
"RTN","LA7SM1",240,0)
 ;
"RTN","LA7SM1",241,0)
 Q
"RTN","LA7SM1",242,0)
 ;
"RTN","LA7SM1",243,0)
 ;
"RTN","LA7SM1",244,0)
CHKOLOC(LA7AA,LA7AD,LA7AN,LA7SCFG) ; Check ordering location.
"RTN","LA7SM1",245,0)
 ; If shipping configuration has specific ordering locations then check accession to determine if it's one of them
"RTN","LA7SM1",246,0)
 ;
"RTN","LA7SM1",247,0)
 ; Call with LA7AA = ien of accession area.
"RTN","LA7SM1",248,0)
 ;           LA7AD = accession date
"RTN","LA7SM1",249,0)
 ;           LA7AN = accession number
"RTN","LA7SM1",250,0)
 ;         LA7SCFG = ien of shipping configuration (file #62.9)
"RTN","LA7SM1",251,0)
 ;
"RTN","LA7SM1",252,0)
 ; Returns LA7FLAG = 0 (accession's ordering location not on list)
"RTN","LA7SM1",253,0)
 ;                 = 1 (accession's ordering location on list)
"RTN","LA7SM1",254,0)
 ;                 = 2 (no ordering locations screen on this shipping configuration)
"RTN","LA7SM1",255,0)
 ;
"RTN","LA7SM1",256,0)
 N LA7FLAG,ORDERLOCATION
"RTN","LA7SM1",257,0)
 ;
"RTN","LA7SM1",258,0)
 S ORDERLOCATION=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",13)
"RTN","LA7SM1",259,0)
 S LA7FLAG=2
"RTN","LA7SM1",260,0)
 ;
"RTN","LA7SM1",261,0)
 ; Site has specified specific ordering locations for this shipping configuration
"RTN","LA7SM1",262,0)
 I $D(^LAHM(62.9,LA7SCFG,44,"AL")) D
"RTN","LA7SM1",263,0)
 . I ORDERLOCATION,$D(^LAHM(62.9,LA7SCFG,44,"AL",ORDERLOCATION)) S LA7FLAG=1
"RTN","LA7SM1",264,0)
 . E  S LA7FLAG=0
"RTN","LA7SM1",265,0)
 ;
"RTN","LA7SM1",266,0)
 Q LA7FLAG
"RTN","LA7SM2")
0^55^B54325058
"RTN","LA7SM2",1,0)
LA7SM2 ;DALOI/JMC - Shipping Manifest Options ;Oct 30, 2008
"RTN","LA7SM2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SM2",3,0)
 ;
"RTN","LA7SM2",4,0)
REQINFO ; Enter required information prior to shipping.
"RTN","LA7SM2",5,0)
 D INIT^LA7SM
"RTN","LA7SM2",6,0)
 I LA7QUIT D CLEANUP^LA7SM Q
"RTN","LA7SM2",7,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"0,1,3")
"RTN","LA7SM2",8,0)
 I LA7SM<0 D  Q
"RTN","LA7SM2",9,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM2",10,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM2",11,0)
 D LOCKSM^LA7SM
"RTN","LA7SM2",12,0)
 I LA7QUIT D  Q
"RTN","LA7SM2",13,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM2",14,0)
 . D UNLOCKSM^LA7SM,CLEANUP^LA7SM
"RTN","LA7SM2",15,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM2",16,0)
 F  D INFOEE^LA7SM2A Q:LA7QUIT
"RTN","LA7SM2",17,0)
 D UNLOCKSM^LA7SM
"RTN","LA7SM2",18,0)
 I LA7QUIT,$P(LA7QUIT,"^",2)'="" D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM2",19,0)
 E  D ASK^LA7SMP(LA7SM)
"RTN","LA7SM2",20,0)
 D CLEANUP^LA7SM
"RTN","LA7SM2",21,0)
 Q
"RTN","LA7SM2",22,0)
 ;
"RTN","LA7SM2",23,0)
 ;
"RTN","LA7SM2",24,0)
CHKREQI(LA7628,LA762801) ; Check for required info/incomplete setup
"RTN","LA7SM2",25,0)
 ; Call with LA7628 = ien of entry in file #62.8
"RTN","LA7SM2",26,0)
 ;         LA762801 = ien of entry in file #62.8, TEST subfile
"RTN","LA7SM2",27,0)
 ;
"RTN","LA7SM2",28,0)
 ; If errors sets LA7ERR array with error messages and TMP(LA7ERR",$J)
"RTN","LA7SM2",29,0)
 ;    with specific tests.
"RTN","LA7SM2",30,0)
 ;
"RTN","LA7SM2",31,0)
 N LA7ERMSG,LA7FILE,LA7FLD,LA7SCFG,LA7I,LA7J,LA7X,LA7Y,LRSS
"RTN","LA7SM2",32,0)
 ;
"RTN","LA7SM2",33,0)
 S LA7ERR=$G(LA7ERR,0),LA7ERMSG=""
"RTN","LA7SM2",34,0)
 S LA7628(0)=$G(^LAHM(62.8,LA7628,0))
"RTN","LA7SM2",35,0)
 S LA7SCFG=$P(LA7628(0),"^",2)
"RTN","LA7SM2",36,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SM2",37,0)
 ;
"RTN","LA7SM2",38,0)
 F LA7J=0,1,2,5 S LA7I(LA7J)=$G(^LAHM(62.8,LA7628,10,LA762801,LA7J))
"RTN","LA7SM2",39,0)
 ;
"RTN","LA7SM2",40,0)
 S LA7FILE=62.801
"RTN","LA7SM2",41,0)
 ;
"RTN","LA7SM2",42,0)
 I $P(LA7I(1),"^") D
"RTN","LA7SM2",43,0)
 . F LA7J=2,3,7 I $P(LA7I(1),"^",LA7J)="" S LA7FLD=$S(LA7J=2:1.11,LA7J=3:1.13,1:1.14) D SETERR
"RTN","LA7SM2",44,0)
 ;
"RTN","LA7SM2",45,0)
 I $P(LA7I(1),"^",4) D
"RTN","LA7SM2",46,0)
 . F LA7J=5,6,8 I $P(LA7I(1),"^",LA7J)="" S LA7FLD=$S(LA7J=5:1.21,LA7J=6:1.23,1:1.24) D SETERR
"RTN","LA7SM2",47,0)
 ;
"RTN","LA7SM2",48,0)
 I $P(LA7I(2),"^") D
"RTN","LA7SM2",49,0)
 . F LA7J=2,3,11 I $P(LA7I(2),"^",LA7J)="" S LA7FLD=$S(LA7J=2:2.11,LA7J=3:2.13,1:2.14) D SETERR
"RTN","LA7SM2",50,0)
 ;
"RTN","LA7SM2",51,0)
 I $P(LA7I(2),"^",4) D
"RTN","LA7SM2",52,0)
 . F LA7J=5,6,7,12 I $P(LA7I(2),"^",LA7J)="" S LA7FLD=$S(LA7J=5:2.21,LA7J=6:2.22,LA7J=7:2.23,1:2.24) D SETERR
"RTN","LA7SM2",53,0)
 ;
"RTN","LA7SM2",54,0)
 I $P(LA7I(2),"^",8) D
"RTN","LA7SM2",55,0)
 . F LA7J=9,10,13 I $P(LA7I(2),"^",LA7J)="" S LA7FLD=$S(LA7J=9:2.31,LA7J=10:2.33,1:2.34) D SETERR
"RTN","LA7SM2",56,0)
 ;
"RTN","LA7SM2",57,0)
 ; Check if using non-VA codes
"RTN","LA7SM2",58,0)
 I $P(LA7628(0),"^",5) D
"RTN","LA7SM2",59,0)
 . F LA7J=1,2 I $P(LA7I(5),"^",LA7J)="" S LA7FLD=$S(LA7J=1:5.1,1:5.2) D SETERR
"RTN","LA7SM2",60,0)
 I '$$GET1^DIQ(60,+$P(LA7I(0),"^",2)_",",64,"I") S LA7FILE=60,LA7FLD=64 D SETERR
"RTN","LA7SM2",61,0)
 I 'LA7ERR,$O(LA7ERR(""))'="" S LA7ERR=1
"RTN","LA7SM2",62,0)
 ;
"RTN","LA7SM2",63,0)
 ; Check if accession for "CH" or "MI" subscript test has specimen
"RTN","LA7SM2",64,0)
 ; Check if AP accessions have specimens specified in file #63
"RTN","LA7SM2",65,0)
 S LRSS=$P($G(^LAB(60,$P(LA7I(0),"^",2),0)),"^",4)
"RTN","LA7SM2",66,0)
 I LRSS?1(1"CH",1"MI"),'$P(LA7I(0),"^",3) S LA7FILE=62.801,LA7FLD=.03,LA7ERMSG="No specimen specified for accession" D SETERR
"RTN","LA7SM2",67,0)
 I LRSS?1(1"SP",1"CY",1"EM") D CHKAP
"RTN","LA7SM2",68,0)
 ;
"RTN","LA7SM2",69,0)
 ; Check specimen has SNOMED CT ID, HL7 code or non-HL7 specimen code.
"RTN","LA7SM2",70,0)
 I $P(LA7I(0),"^",3) D
"RTN","LA7SM2",71,0)
 . N LA761
"RTN","LA7SM2",72,0)
 . S LA761=$P(LA7I(0),"^",3)
"RTN","LA7SM2",73,0)
 . I $P($G(^LAB(61,LA761,"SCT")),"^")'="" Q
"RTN","LA7SM2",74,0)
 . I $P(LA7I(5),"^",3)'="" Q
"RTN","LA7SM2",75,0)
 . I $P($G(^LAB(61,LA761,0)),"^",9) Q
"RTN","LA7SM2",76,0)
 . S LA761(0)=$$GET1^DIQ(61,LA761,.01),LA7FILE=61
"RTN","LA7SM2",77,0)
 . I LRSS="CH",'$P($G(^LAB(61,LA761,0)),"^",9)  D
"RTN","LA7SM2",78,0)
 . . S LA7FLD=.09,LA7ERMSG="No LEDI HL7 code (field #.09) specified in TOPOGRAPHY file (#61) for entry "_LA761(0)_" (#"_LA761_")"
"RTN","LA7SM2",79,0)
 . . D SETERR
"RTN","LA7SM2",80,0)
 . S LA7FLD=20,LA7ERMSG="No SNOMED CT ID (field #20) specified in TOPOGRAPHY file (#61) for entry "_LA761(0)_" (#"_LA761_")"
"RTN","LA7SM2",81,0)
 . D SETERR
"RTN","LA7SM2",82,0)
 ;
"RTN","LA7SM2",83,0)
 Q
"RTN","LA7SM2",84,0)
 ;
"RTN","LA7SM2",85,0)
 ;
"RTN","LA7SM2",86,0)
SETERR ; Set error log for entries missing values in 62.8
"RTN","LA7SM2",87,0)
 ; Called from above.
"RTN","LA7SM2",88,0)
 ;
"RTN","LA7SM2",89,0)
 S LA7ERR(LA7FILE_":"_LA7FLD)="Missing Required Info - "_$$GET1^DID(LA7FILE,LA7FLD,"","LABEL")
"RTN","LA7SM2",90,0)
 I $G(LA7ERMSG)'="" S LA7ERR(LA7FILE_":"_LA7FLD,.1)=LA7ERMSG
"RTN","LA7SM2",91,0)
 S ^TMP("LA7ERR",$J,LA7FILE_":"_LA7FLD,LA7628,$P(LA7I(0),"^",5),$P(LA7I(0),"^",2))=""
"RTN","LA7SM2",92,0)
 S LA7ERMSG=""
"RTN","LA7SM2",93,0)
 Q
"RTN","LA7SM2",94,0)
 ;
"RTN","LA7SM2",95,0)
 ;
"RTN","LA7SM2",96,0)
CHKAP ; Check AP subscripts for specimen and associated topographies
"RTN","LA7SM2",97,0)
 N LA7ERMSG,LA7FILE,LA7FLD,LA7J,LA7OK,LRAA,LRAD,LRAN,LRDFN,LRIDT,LRUID,X
"RTN","LA7SM2",98,0)
 ;
"RTN","LA7SM2",99,0)
 S LRDFN=+LA7I(0),LRUID=$P(LA7I(0),"^",5),LA7OK=1
"RTN","LA7SM2",100,0)
 S X=$Q(^LRO(68,"C",LRUID)) Q:X=""
"RTN","LA7SM2",101,0)
 I LRUID'=$QS(X,3) Q  ; Skip - UID missing.
"RTN","LA7SM2",102,0)
 S LRAA=+$QS(X,4),LRAD=+$QS(X,5),LRAN=+$QS(X,6),LRIDT=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LA7SM2",103,0)
 S LA7FILE=$S(LRSS="SP":63.812,LRSS="CY":63.902,LRSS="EM":63.202,1:0)
"RTN","LA7SM2",104,0)
 ;
"RTN","LA7SM2",105,0)
 ; Check for missing specimen node (.1) 
"RTN","LA7SM2",106,0)
 I '$O(^LR(LRDFN,LRSS,LRIDT,.1,0)) D  Q
"RTN","LA7SM2",107,0)
 . S LA7OK=0,LA7FLD=.01,LA7ERMSG="No specimen entered for accession."  D SETERR
"RTN","LA7SM2",108,0)
 ;
"RTN","LA7SM2",109,0)
 ; Check for pointer to file #61 for each free text specimen.
"RTN","LA7SM2",110,0)
 S LA7J=0
"RTN","LA7SM2",111,0)
 F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,.1,LA7J)) Q:'LA7J  I '$P(^(LA7J,0),"^",6) D
"RTN","LA7SM2",112,0)
 . S LA7OK=0,LA7FLD=.06,LA7ERMSG="No topography specified for specimen on accession." D SETERR
"RTN","LA7SM2",113,0)
 ;
"RTN","LA7SM2",114,0)
 Q
"RTN","LA7SM2",115,0)
 ;
"RTN","LA7SM2",116,0)
 ;
"RTN","LA7SM2",117,0)
BUILDRI ; Build global with required info to print on manifest.
"RTN","LA7SM2",118,0)
 ; Called from LA7SMP
"RTN","LA7SM2",119,0)
 ;
"RTN","LA7SM2",120,0)
 N LA7I,LA7X
"RTN","LA7SM2",121,0)
 ;
"RTN","LA7SM2",122,0)
 ; No required info
"RTN","LA7SM2",123,0)
 I $G(LA762801(1))="",$G(LA762801(2))="" Q
"RTN","LA7SM2",124,0)
 ;
"RTN","LA7SM2",125,0)
 F LA7I=1,2 S LA7X(LA7I)=$G(^TMP("LA7SMRI",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA7I))
"RTN","LA7SM2",126,0)
 ;
"RTN","LA7SM2",127,0)
 ; Check for patient required info.
"RTN","LA7SM2",128,0)
 F LA7I=1,4 I $P($G(LA762801(1)),"^",LA7I) D
"RTN","LA7SM2",129,0)
 . S $P(LA7X(1),"^",LA7I)=$P(LA762801(1),"^",LA7I)
"RTN","LA7SM2",130,0)
 . I LA7I=1 S $P(LA7X(1),"^",2,3)=$P(LA762801(1),"^",2,3) Q
"RTN","LA7SM2",131,0)
 . I LA7I=4 S $P(LA7X(1),"^",5,6)=$P(LA762801(1),"^",5,6) Q
"RTN","LA7SM2",132,0)
 ;
"RTN","LA7SM2",133,0)
 ; Check for specimen required info.
"RTN","LA7SM2",134,0)
 F LA7I=1,4,8 I $P($G(LA762801(2)),"^",LA7I) D
"RTN","LA7SM2",135,0)
 . S $P(LA7X(2),"^",LA7I)=$P(LA762801(2),"^",LA7I)
"RTN","LA7SM2",136,0)
 . I LA7I=1 S $P(LA7X(2),"^",2,3)=$P(LA762801(2),"^",2,3) Q
"RTN","LA7SM2",137,0)
 . I LA7I=4 S $P(LA7X(2),"^",5,7)=$P(LA762801(2),"^",5,7) Q
"RTN","LA7SM2",138,0)
 . I LA7I=8 S $P(LA7X(2),"^",9,10)=$P(LA762801(2),"^",9,10) Q
"RTN","LA7SM2",139,0)
 ;
"RTN","LA7SM2",140,0)
 ; Store required info for printing
"RTN","LA7SM2",141,0)
 F LA7I=1,2 I $G(LA7X(LA7I))'="" S ^TMP("LA7SMRI",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA7I)=LA7X(LA7I)
"RTN","LA7SM2",142,0)
 ;
"RTN","LA7SM2",143,0)
 Q
"RTN","LA7SM2",144,0)
 ;
"RTN","LA7SM2",145,0)
 ;
"RTN","LA7SM2",146,0)
RCI ; Enter/edit relevant clinical information
"RTN","LA7SM2",147,0)
 N DA,FDA,LA7628,LA762801,LA7DIR,LA7QUIT,LA7TCNT,LA7Y
"RTN","LA7SM2",148,0)
 D INIT^LA7SM
"RTN","LA7SM2",149,0)
 I LA7QUIT D CLEANUP^LA7SM Q
"RTN","LA7SM2",150,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG,"0,1,3")
"RTN","LA7SM2",151,0)
 I LA7SM<0 D  Q
"RTN","LA7SM2",152,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SM2",153,0)
 . D CLEANUP^LA7SM
"RTN","LA7SM2",154,0)
 D LOCKSM^LA7SM
"RTN","LA7SM2",155,0)
 I LA7QUIT D  Q
"RTN","LA7SM2",156,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?5")
"RTN","LA7SM2",157,0)
 . D UNLOCKSM^LA7SM,CLEANUP^LA7SM
"RTN","LA7SM2",158,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SM2",159,0)
 D SEL^LA7SM
"RTN","LA7SM2",160,0)
 I LA7QUIT D UNLOCKSM^LA7SM,CLEANUP^LA7SM Q
"RTN","LA7SM2",161,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM2",162,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SM2",163,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SM2",164,0)
 . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM2",165,0)
 . I $P(LA7I(0),"^",8),$P(LA7I(0),"^",8)'=1 S LA7QUIT="1^Accession not pending shipment" Q
"RTN","LA7SM2",166,0)
 . S LA7TCNT=LA7TCNT+1,LA760(LA7TCNT)=LA7I_"^"_LA7I(0)
"RTN","LA7SM2",167,0)
 I 'LA7TCNT,'LA7QUIT S LA7QUIT="1^Accession is not on this shipping manifest"
"RTN","LA7SM2",168,0)
 I LA7QUIT D UNLOCKSM^LA7SM,CLEANUP^LA7SM Q
"RTN","LA7SM2",169,0)
 S LA7I=0
"RTN","LA7SM2",170,0)
 F  S LA7I=$O(LA760(LA7I)) Q:'LA7I  D EN^DDIOL(LA7I_" "_$P($G(^LAB(60,+$P(LA760(LA7I),"^",3),0)),"^"),"","!?5")
"RTN","LA7SM2",171,0)
 S DIR(0)="LO^1:"_LA7TCNT,DIR("A")="Select test(s) to edit clinical info"
"RTN","LA7SM2",172,0)
 D ^DIR
"RTN","LA7SM2",173,0)
 I $D(DIRUT) S LA7QUIT=1 D UNLOCKSM^LA7SM,CLEANUP^LA7SM Q
"RTN","LA7SM2",174,0)
 M LA7YARRY=Y
"RTN","LA7SM2",175,0)
 K DIR
"RTN","LA7SM2",176,0)
 D FIELD^DID(62.801,.1,,"DESCRIPTION;FIELD LENGTH;HELP-PROMPT","LA7DIR")
"RTN","LA7SM2",177,0)
 S LA7X=$P($G(^LAHM(62.9,+$P(LA7SM(0),"^",2),0)),"^",3)
"RTN","LA7SM2",178,0)
 I $$NVAF^LA7VHLU2(LA7X)=1 D
"RTN","LA7SM2",179,0)
 . S LA7DIR("FIELD LENGTH")=78
"RTN","LA7SM2",180,0)
 . S LA7DIR("HELP-PROMPT")="Answer must be 1-78 characters in length."
"RTN","LA7SM2",181,0)
 S DIR(0)="FAO^1:"_LA7DIR("FIELD LENGTH"),DIR("A")="Relevant clinical information: "
"RTN","LA7SM2",182,0)
 M DIR("?")=LA7DIR("DESCRIPTION"),DIR("?")=LA7DIR("HELP-PROMPT")
"RTN","LA7SM2",183,0)
 S LA7Y="",LA7628=+LA7SM,LA7QUIT=0
"RTN","LA7SM2",184,0)
 F  S LA7Y=$O(LA7YARRY(LA7Y)) Q:LA7Y=""  D  Q:LA7QUIT
"RTN","LA7SM2",185,0)
 . F LA7I=1:1 Q:'$P(LA7YARRY(LA7Y),",",LA7I)  D  Q:LA7QUIT
"RTN","LA7SM2",186,0)
 . . K DA,DIRUT,DUOUT,DTOUT,FDA,LA7DIE
"RTN","LA7SM2",187,0)
 . . S LA7X=$P(LA7YARRY(LA7Y),",",LA7I),DA=+LA760(LA7X)
"RTN","LA7SM2",188,0)
 . . S LA762801=DA_","_LA7628_","
"RTN","LA7SM2",189,0)
 . . W !,"For test: ",$$GET1^DIQ(62.801,LA762801,.02)
"RTN","LA7SM2",190,0)
 . . S DIR("B")=$$GET1^DIQ(62.801,LA762801,.1)
"RTN","LA7SM2",191,0)
 . . I DIR("B")="" K DIR("B")
"RTN","LA7SM2",192,0)
 . . D ^DIR
"RTN","LA7SM2",193,0)
 . . I $D(DIRUT),X'="@" S LA7QUIT=1 Q
"RTN","LA7SM2",194,0)
 . . I Y="",X="@" S Y="@"
"RTN","LA7SM2",195,0)
 . . S FDA(62.8,62.801,LA762801,.1)=Y
"RTN","LA7SM2",196,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(1)")
"RTN","LA7SM2",197,0)
 ;
"RTN","LA7SM2",198,0)
 D UNLOCKSM^LA7SM,CLEANUP^LA7SM
"RTN","LA7SM2",199,0)
 Q
"RTN","LA7SM2A")
0^73^B16317595
"RTN","LA7SM2A",1,0)
LA7SM2A ;DALOI/JMC - Shipping Manifest Options ;Oct 4, 2006
"RTN","LA7SM2A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SM2A",3,0)
 ;
"RTN","LA7SM2A",4,0)
 ; Continuation of LA7SM2
"RTN","LA7SM2A",5,0)
 ;
"RTN","LA7SM2A",6,0)
INFOEE ; Required Info Enter/Edit
"RTN","LA7SM2A",7,0)
 ;
"RTN","LA7SM2A",8,0)
 ; Called by LA7SM2
"RTN","LA7SM2A",9,0)
 ; 
"RTN","LA7SM2A",10,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA7CDT,LA7I,LA7INFO,LA7J,LA7RINFO,LA7TCNT,LA7X,LA7Y,X,Y
"RTN","LA7SM2A",11,0)
 ;
"RTN","LA7SM2A",12,0)
 D SEL^LA7SM
"RTN","LA7SM2A",13,0)
 I LA7QUIT Q
"RTN","LA7SM2A",14,0)
 ;
"RTN","LA7SM2A",15,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SM2A",16,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SM2A",17,0)
 . F LA7J=0,1,2 S LA7I(LA7J)=$G(^LAHM(62.8,+LA7SM,10,LA7I,LA7J))
"RTN","LA7SM2A",18,0)
 . I $P(LA7I(0),"^",8)=0 Q  ; Previously "removed".
"RTN","LA7SM2A",19,0)
 . I $P(LA7I(0),"^",8),$P(LA7I(0),"^",8)'=1 S LA7QUIT="1^Accession not pending shipment" Q  ; Not pending shipment
"RTN","LA7SM2A",20,0)
 . S LA7TCNT=LA7TCNT+1
"RTN","LA7SM2A",21,0)
 . F LA7J=1,4 I $P(LA7I(1),"^",LA7J) D
"RTN","LA7SM2A",22,0)
 . . I '$P(LA7I(1),"^",LA7J+2) Q  ; No units specified
"RTN","LA7SM2A",23,0)
 . . S LA7X=$S(LA7J=1:1.11,LA7J=4:1.21,1:0)
"RTN","LA7SM2A",24,0)
 . . S LA7RINFO(LA7X)=$P(LA7I(1),"^",LA7J+1) ; Value
"RTN","LA7SM2A",25,0)
 . . S $P(LA7RINFO(LA7X),"^",2)=$P(LA7I(1),"^",LA7J+2) ; Units
"RTN","LA7SM2A",26,0)
 . . S LA7RINFO(LA7X,LA7I)=LA7RINFO(LA7X)_"^"_$P(LA7I(0),"^",2)
"RTN","LA7SM2A",27,0)
 . F LA7J=1,4,8 I $P(LA7I(2),"^",LA7J) D
"RTN","LA7SM2A",28,0)
 . . I '($S(LA7J=4:$P(LA7I(2),"^",7),1:$P(LA7I(2),"^",LA7J+2))) Q  ; No units specified.
"RTN","LA7SM2A",29,0)
 . . S LA7X=$S(LA7J=1:2.11,LA7J=4:2.21,LA7J=8:2.31,1:0)
"RTN","LA7SM2A",30,0)
 . . S LA7RINFO(LA7X)=$P(LA7I(2),"^",LA7J+1) ; Value
"RTN","LA7SM2A",31,0)
 . . S $P(LA7RINFO(LA7X),"^",2)=$S(LA7J=4:$P(LA7I(2),"^",7),1:$P(LA7I(2),"^",LA7J+2)) ; Units
"RTN","LA7SM2A",32,0)
 . . S LA7RINFO(LA7X,LA7I)=LA7RINFO(LA7X)_"^"_$P(LA7I(0),"^",2)
"RTN","LA7SM2A",33,0)
 ;
"RTN","LA7SM2A",34,0)
 I 'LA7TCNT,'LA7QUIT S LA7QUIT="1^Accession is not on this shipping manifest"
"RTN","LA7SM2A",35,0)
 I '$O(LA7RINFO(0)),'LA7QUIT S LA7QUIT="1^No test needs required information for shipping"
"RTN","LA7SM2A",36,0)
 I LA7QUIT Q
"RTN","LA7SM2A",37,0)
 ;
"RTN","LA7SM2A",38,0)
 S LA7CDT=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^")
"RTN","LA7SM2A",39,0)
 S LA7Y=0
"RTN","LA7SM2A",40,0)
 F  S LA7Y=$O(LA7RINFO(LA7Y)) Q:'LA7Y  D  Q:LA7QUIT
"RTN","LA7SM2A",41,0)
 . N DA,DIR,DIRUT
"RTN","LA7SM2A",42,0)
 . S DIR(0)="62.801,"_LA7Y
"RTN","LA7SM2A",43,0)
 . S DIR("A")=$$GET1^DID(62.801,LA7Y,"","LABEL")
"RTN","LA7SM2A",44,0)
 . I LA7Y=2.21 D
"RTN","LA7SM2A",45,0)
 . . S DIR("A",1)=" "
"RTN","LA7SM2A",46,0)
 . . S DIR("A",2)="Specimen Collection Date/time: "_$$FMTE^XLFDT(LA7CDT,"M")
"RTN","LA7SM2A",47,0)
 . . S $P(DIR(0),"^",3)="I Y<LA7CDT!(Y>$$NOW^XLFDT) K X" ; d/t after specimen collect d/t
"RTN","LA7SM2A",48,0)
 . I LA7Y'=2.21 D
"RTN","LA7SM2A",49,0)
 . . N LA7X
"RTN","LA7SM2A",50,0)
 . . S LA7X=$$GET1^DIQ(64.061,$P(LA7RINFO(LA7Y),"^",2)_",",.01) ; Units
"RTN","LA7SM2A",51,0)
 . . S DIR("A")=DIR("A")_" (in "_LA7X_")"
"RTN","LA7SM2A",52,0)
 . I $P(LA7RINFO(LA7Y),"^")'="" D   ; Default value
"RTN","LA7SM2A",53,0)
 . . I LA7Y=2.21 S DIR("B")=$$FMTE^XLFDT($P(LA7RINFO(LA7Y),"^"))
"RTN","LA7SM2A",54,0)
 . . E  S DIR("B")=$P(LA7RINFO(LA7Y),"^")
"RTN","LA7SM2A",55,0)
 . D ^DIR
"RTN","LA7SM2A",56,0)
 . I $D(DTOUT)!$D(DUOUT) S LA7QUIT=1 Q
"RTN","LA7SM2A",57,0)
 . S $P(LA7INFO(LA7Y),"^")=$P(Y,"^") ; New value
"RTN","LA7SM2A",58,0)
 I LA7QUIT Q
"RTN","LA7SM2A",59,0)
 ;
"RTN","LA7SM2A",60,0)
 S LA7Y=0
"RTN","LA7SM2A",61,0)
 F  S LA7Y=$O(LA7RINFO(LA7Y)) Q:'LA7Y  D
"RTN","LA7SM2A",62,0)
 . S LA7I=0
"RTN","LA7SM2A",63,0)
 . F  S LA7I=$O(LA7RINFO(LA7Y,LA7I)) Q:'LA7I  D
"RTN","LA7SM2A",64,0)
 . . I $P(LA7INFO(LA7Y),"^")=$P(LA7RINFO(LA7Y,LA7I),"^") Q  ; Value unchanged
"RTN","LA7SM2A",65,0)
 . . N FDA,LA7628,LA768,LA7DATA
"RTN","LA7SM2A",66,0)
 . . S LA762801=LA7I_","_+LA7SM_","
"RTN","LA7SM2A",67,0)
 . . I LA7Y=2.21 D
"RTN","LA7SM2A",68,0)
 . . . N LA7DURT,LA7UID,LA7UNITS,LA7X
"RTN","LA7SM2A",69,0)
 . . . S LA7UNITS=$$GET1^DIQ(64.061,+$P(LA7RINFO(LA7Y,LA7I),"^",2)_",",.01,"E")
"RTN","LA7SM2A",70,0)
 . . . S LA7DURT=$$FMDIFF^XLFDT(LA7INFO(LA7Y),LA7CDT,2) ; Collection duration (in seconds)
"RTN","LA7SM2A",71,0)
 . . . I LA7UNITS="min" S LA7DURT=$FN(LA7DURT/60,"",0) ; Convert to minutes, rounded to nearest minute.
"RTN","LA7SM2A",72,0)
 . . . I LA7UNITS="hr" S LA7DURT=$FN(LA7DURT/3600,"",0) ; Convert to hours, rounded to nearest hour.
"RTN","LA7SM2A",73,0)
 . . . S FDA(62.8,62.801,LA762801,2.22)=LA7DURT
"RTN","LA7SM2A",74,0)
 . . S FDA(62.8,62.801,LA762801,LA7Y)=$P(LA7INFO(LA7Y),"^") ; New value
"RTN","LA7SM2A",75,0)
 . . D FILE^DIE("","FDA(62.8)","LA7DIE(2)") ; Update required info
"RTN","LA7SM2A",76,0)
 . . ; Update event file
"RTN","LA7SM2A",77,0)
 . . S LA7DATA="SM40^"_$$NOW^XLFDT_"^"_$P(LA7RINFO(LA7Y,LA7I),"^",3)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SM2A",78,0)
 . . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SM2A",79,0)
 Q
"RTN","LA7SMA")
0^51^B50957198
"RTN","LA7SMA",1,0)
LA7SMA ;DALOI/JMC - Inter-divisional Shipping Manifest Receipt ;Feb 6, 2008
"RTN","LA7SMA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SMA",3,0)
 ;
"RTN","LA7SMA",4,0)
 Q
"RTN","LA7SMA",5,0)
 ;
"RTN","LA7SMA",6,0)
 ;
"RTN","LA7SMA",7,0)
INTERDIV(LA7SITE) ; Process inter-divisional shipping manifest
"RTN","LA7SMA",8,0)
 ; Call with LA7SITE array by reference - see SITE^LA7SBCR2
"RTN","LA7SMA",9,0)
 ;
"RTN","LA7SMA",10,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA7628,LA7ANS,LA7I,LA7QUIT,LA7SM,LA7TCNT,X,Y
"RTN","LA7SMA",11,0)
 S LA7SM="",LA7QUIT=0
"RTN","LA7SMA",12,0)
 I LA7SITE("SMID")'="" D
"RTN","LA7SMA",13,0)
 . S X=$O(^LAHM(62.8,"B",LA7SITE("SMID"),0))
"RTN","LA7SMA",14,0)
 . I X S LA7SM=X_"^"_LA7SITE("SMID")
"RTN","LA7SMA",15,0)
 I LA7SITE("SMID")="" S LA7SM=$$SELSM^LA7SMU(+LA7SITE("SCFG"),"4,5")
"RTN","LA7SMA",16,0)
 ;
"RTN","LA7SMA",17,0)
 S LA7628=+LA7SM
"RTN","LA7SMA",18,0)
 I 'LA7628 D EN^DDIOL("No manifest found - Shipping Acceptance Aborted.","","!?2") Q
"RTN","LA7SMA",19,0)
 ;
"RTN","LA7SMA",20,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SMA",21,0)
 F  S LA7I=$O(^LAHM(62.8,LA7628,10,LA7I)) Q:'LA7I  D  Q:LA7TCNT
"RTN","LA7SMA",22,0)
 . I $P($G(^LAHM(62.8,LA7628,10,LA7I,0)),"^",8)'=2 Q
"RTN","LA7SMA",23,0)
 . S LA7TCNT=LA7TCNT+1 ; Test ready to accept.
"RTN","LA7SMA",24,0)
 ;
"RTN","LA7SMA",25,0)
 I 'LA7TCNT D EN^DDIOL("No tests in 'shipped' status on manifest - Shipping Acceptance Aborted.","","!?2") Q
"RTN","LA7SMA",26,0)
 ;
"RTN","LA7SMA",27,0)
 S DIR(0)="SO^0:Abort Manifest Acceptance;1:Accept Manifest;2:Accept Manifest with Exceptions;3:Accept Selected Accessions;4:Reject Manifest"
"RTN","LA7SMA",28,0)
 S DIR("A")="Manifest Acceptance Action"
"RTN","LA7SMA",29,0)
 D ^DIR
"RTN","LA7SMA",30,0)
 I $D(DIRUT) Q
"RTN","LA7SMA",31,0)
 S LA7ANS=+Y
"RTN","LA7SMA",32,0)
 ;
"RTN","LA7SMA",33,0)
 I LA7ANS=0 Q
"RTN","LA7SMA",34,0)
 ;
"RTN","LA7SMA",35,0)
 ; Accept the complete manifest - at least those tests that were shipped.
"RTN","LA7SMA",36,0)
 I LA7ANS=1 D ACCEPT(LA7SM) Q
"RTN","LA7SMA",37,0)
 ;
"RTN","LA7SMA",38,0)
 ; Accept manifest but handle exceptions first.
"RTN","LA7SMA",39,0)
 I LA7ANS=2 D  Q
"RTN","LA7SMA",40,0)
 . K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LA7SMA",41,0)
 . F  D EXCEPT(LA7SM,.LA7ANS) Q:LA7QUIT
"RTN","LA7SMA",42,0)
 . S DIR(0)="Y",DIR("A")="Ready to accept the rest of the manifest",DIR("B")="NO"
"RTN","LA7SMA",43,0)
 . D ^DIR
"RTN","LA7SMA",44,0)
 . I Y=1 D ACCEPT(LA7SM)
"RTN","LA7SMA",45,0)
 ;
"RTN","LA7SMA",46,0)
 ; Accept selected accessions.
"RTN","LA7SMA",47,0)
 I LA7ANS=3 D  Q
"RTN","LA7SMA",48,0)
 . K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LA7SMA",49,0)
 . F  D EXCEPT(LA7SM,.LA7ANS) Q:(+LA7QUIT=1)
"RTN","LA7SMA",50,0)
 . I $G(LA7ANS(1))<1 Q
"RTN","LA7SMA",51,0)
 . D SMSUP^LA7SMU(LA7SM,5,"SM07^"_$$NOW^XLFDT)
"RTN","LA7SMA",52,0)
 . D EN^DDIOL("Manifest "_$P(LA7SM,"^",2)_" status set to 'Manifest received by host facility'.","","!?2")
"RTN","LA7SMA",53,0)
 ;
"RTN","LA7SMA",54,0)
 ; Reject entire manifest
"RTN","LA7SMA",55,0)
 I LA7ANS=4 D  Q
"RTN","LA7SMA",56,0)
 . K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LA7SMA",57,0)
 . S DIR(0)="Y",DIR("A")="Confirm rejecting entire manifest",DIR("B")="NO"
"RTN","LA7SMA",58,0)
 . D ^DIR
"RTN","LA7SMA",59,0)
 . I Y=1 D REJECT(LA7SM)
"RTN","LA7SMA",60,0)
 ;
"RTN","LA7SMA",61,0)
 Q
"RTN","LA7SMA",62,0)
 ;
"RTN","LA7SMA",63,0)
 ;
"RTN","LA7SMA",64,0)
ACCEPT(LA7SM) ; Accept an intra-divisional shipping manifest
"RTN","LA7SMA",65,0)
 ; Used to update the manifest and accessions when shipping between facilities on same system.
"RTN","LA7SMA",66,0)
 ; Accessions already exist on system.
"RTN","LA7SMA",67,0)
 ;
"RTN","LA7SMA",68,0)
 ; Call with LA7SM = file #62.8 ien^manifest id
"RTN","LA7SMA",69,0)
 ;
"RTN","LA7SMA",70,0)
 N I,LA7628,LA7ADT,LA7DATA,LA7I,X,Y
"RTN","LA7SMA",71,0)
 ;
"RTN","LA7SMA",72,0)
 S LA7628=+LA7SM
"RTN","LA7SMA",73,0)
 ; Update manifest status to received.
"RTN","LA7SMA",74,0)
 S LA7ADT=$$NOW^XLFDT
"RTN","LA7SMA",75,0)
 D SMSUP^LA7SMU(LA7SM,5,"SM07^"_LA7ADT)
"RTN","LA7SMA",76,0)
 D EN^DDIOL("Manifest "_$P(LA7SM,"^",2)_" status set to 'Manifest received by host facility'.","","!?2")
"RTN","LA7SMA",77,0)
 ;
"RTN","LA7SMA",78,0)
 ; Update individual test's status
"RTN","LA7SMA",79,0)
 K LA7I
"RTN","LA7SMA",80,0)
 S LA7I=0
"RTN","LA7SMA",81,0)
 F  S LA7I=$O(^LAHM(62.8,LA7628,10,LA7I)) Q:'LA7I  D
"RTN","LA7SMA",82,0)
 . S LA7I(0)=$G(^LAHM(62.8,LA7628,10,LA7I,0))
"RTN","LA7SMA",83,0)
 . I $P(LA7I(0),"^",8)'=2 Q  ; Not shipped.
"RTN","LA7SMA",84,0)
 . ; Change status to "received".
"RTN","LA7SMA",85,0)
 . D STSUP^LA7SMU(LA7SM,LA7I,3)
"RTN","LA7SMA",86,0)
 . ; Update event file
"RTN","LA7SMA",87,0)
 . S LA7DATA="SM55^"_LA7ADT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SMA",88,0)
 . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SMA",89,0)
 D EN^DDIOL("Test(s) on manifest "_$P(LA7SM,"^",2)_" set to 'Test received' status.","","!?2")
"RTN","LA7SMA",90,0)
 Q
"RTN","LA7SMA",91,0)
 ;
"RTN","LA7SMA",92,0)
 ;
"RTN","LA7SMA",93,0)
REJECT(LA7SM) ; Reject an intra-divisional shipping manifest
"RTN","LA7SMA",94,0)
 ; Used to update the manifest and accessions when shipping between facilities on same system.
"RTN","LA7SMA",95,0)
 ; Accessions already exist on system.
"RTN","LA7SMA",96,0)
 ;
"RTN","LA7SMA",97,0)
 ; Call with LA7SM = file #62.8 ien^manifest id
"RTN","LA7SMA",98,0)
 ;
"RTN","LA7SMA",99,0)
 N I,LA7628,LA7ADT,LA7DATA,LA7ENVC,LA7I,X,Y
"RTN","LA7SMA",100,0)
 ;
"RTN","LA7SMA",101,0)
 ; Get exception reason (event code).
"RTN","LA7SMA",102,0)
 K DIC
"RTN","LA7SMA",103,0)
 S DIC="^LAB(64.061,",DIC("A")="Select Exception Reason: ",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,7)=""E"",""^SM52^SM54^SM57^SM58^SM59^SM60^SM61^""[(U_$P(^(0),U,4)_U)"
"RTN","LA7SMA",104,0)
 D ^DIC
"RTN","LA7SMA",105,0)
 I Y<1 S LA7QUIT=1 Q
"RTN","LA7SMA",106,0)
 S LA7EVNC=$P(Y(0),"^",4),LA7ENVC(0)=Y(0),LA7ADT=$$NOW^XLFDT
"RTN","LA7SMA",107,0)
 ;
"RTN","LA7SMA",108,0)
 S LA7628=+LA7SM
"RTN","LA7SMA",109,0)
 ; Update manifest status to received.
"RTN","LA7SMA",110,0)
 S LA7ADT=$$NOW^XLFDT
"RTN","LA7SMA",111,0)
 D SMSUP^LA7SMU(LA7SM,5,"SM08^"_LA7ADT)
"RTN","LA7SMA",112,0)
 D EN^DDIOL("Manifest "_$P(LA7SM,"^",2)_" status set to 'Manifest rejected by host facility'.","","!?2")
"RTN","LA7SMA",113,0)
 ;
"RTN","LA7SMA",114,0)
 ; Update individual test's status
"RTN","LA7SMA",115,0)
 K LA7I
"RTN","LA7SMA",116,0)
 S LA7I=0
"RTN","LA7SMA",117,0)
 F  S LA7I=$O(^LAHM(62.8,LA7628,10,LA7I)) Q:'LA7I  D
"RTN","LA7SMA",118,0)
 . S LA7I(0)=$G(^LAHM(62.8,LA7628,10,LA7I,0))
"RTN","LA7SMA",119,0)
 . I $P(LA7I(0),"^",8)'=2 Q  ; Not shipped.
"RTN","LA7SMA",120,0)
 . ; Change status to "rejected".
"RTN","LA7SMA",121,0)
 . D STSUP^LA7SMU(LA7SM,LA7I,6)
"RTN","LA7SMA",122,0)
 . ; Update event file
"RTN","LA7SMA",123,0)
 . S LA7DATA=LA7ENVC_"^"_LA7ADT_"^"_$P(LA7I(0),"^",2)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SMA",124,0)
 . D SEUP^LA7SMU($P(LA7I(0),"^",5),2,LA7DATA)
"RTN","LA7SMA",125,0)
 D EN^DDIOL("Test(s) on manifest "_$P(LA7SM,"^",2)_" set to '"_$P(LA7ENVC(0),"^")_"' status.","","!?2")
"RTN","LA7SMA",126,0)
 Q
"RTN","LA7SMA",127,0)
 ;
"RTN","LA7SMA",128,0)
 ;
"RTN","LA7SMA",129,0)
EXCEPT(LA7SM,LA7ANS) ; Handle exceptions on manifest acceptance.
"RTN","LA7SMA",130,0)
 ;
"RTN","LA7SMA",131,0)
 ; Call with LA7SM = file #62.8 ien^manifest id
"RTN","LA7SMA",132,0)
 ;           LA7ANS = function (2=reject accession, 3=accept accession
"RTN","LA7SMA",133,0)
 ; 
"RTN","LA7SMA",134,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LA760,LA7ADT,LA7EVNC,LA7I,LA7TCNT,LA7UID,LA7Y,X,Y
"RTN","LA7SMA",135,0)
 ;
"RTN","LA7SMA",136,0)
 D SEL
"RTN","LA7SMA",137,0)
 I LA7QUIT D  Q
"RTN","LA7SMA",138,0)
 . I LA7QUIT>1 D EN^DDIOL($P(LA7QUIT,"^",2),"","!?2")
"RTN","LA7SMA",139,0)
 ;
"RTN","LA7SMA",140,0)
 I '$D(^LAHM(62.8,+LA7SM,10,"UID",LA7UID)) D  Q
"RTN","LA7SMA",141,0)
 . S LA7QUIT="3^Accession is not on this shipping manifest"
"RTN","LA7SMA",142,0)
 . D EN^DDIOL($P(LA7QUIT,"^",2),"","!?2")
"RTN","LA7SMA",143,0)
 ;
"RTN","LA7SMA",144,0)
 S (LA7I,LA7TCNT)=0
"RTN","LA7SMA",145,0)
 F  S LA7I=$O(^LAHM(62.8,+LA7SM,10,"UID",LA7UID,LA7I)) Q:'LA7I  D
"RTN","LA7SMA",146,0)
 . S LA7I(0)=$G(^LAHM(62.8,+LA7SM,10,LA7I,0))
"RTN","LA7SMA",147,0)
 . I $P(LA7I(0),"^",8)'=2 Q  ; Not shipped
"RTN","LA7SMA",148,0)
 . S LA7TCNT=LA7TCNT+1,LA760(LA7TCNT)=LA7I_"^"_LA7I(0)
"RTN","LA7SMA",149,0)
 I 'LA7TCNT S LA7QUIT="4^No test is a 'shipped' status for this accession on this shipping manifest"
"RTN","LA7SMA",150,0)
 I LA7QUIT D EN^DDIOL($P(LA7QUIT,"^",2),"","!?2") Q
"RTN","LA7SMA",151,0)
 ;
"RTN","LA7SMA",152,0)
 S LA7I=0
"RTN","LA7SMA",153,0)
 F  S LA7I=$O(LA760(LA7I)) Q:'LA7I  D EN^DDIOL(LA7I_" "_$P($G(^LAB(60,+$P(LA760(LA7I),"^",3),0)),"^"),"","!?5")
"RTN","LA7SMA",154,0)
 S DIR(0)="LO^1:"_LA7TCNT,DIR("A")="Select test(s) to "_$S(LA7ANS=2:"disposition",LA7ANS=3:"accept",1:"")
"RTN","LA7SMA",155,0)
 D ^DIR
"RTN","LA7SMA",156,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SMA",157,0)
 M LA7YARRY=Y
"RTN","LA7SMA",158,0)
 ;
"RTN","LA7SMA",159,0)
 ; Get exception reason (event code).
"RTN","LA7SMA",160,0)
 I LA7ANS=2 D  Q:LA7QUIT
"RTN","LA7SMA",161,0)
 . K DIC
"RTN","LA7SMA",162,0)
 . S DIC="^LAB(64.061,",DIC("A")="Select Exception Reason: ",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),U,7)=""E"",""^SM52^SM54^SM57^SM58^SM59^SM60^SM61^""[(U_$P(^(0),U,4)_U)"
"RTN","LA7SMA",163,0)
 . D ^DIC
"RTN","LA7SMA",164,0)
 . I Y<1 S LA7QUIT=1 Q
"RTN","LA7SMA",165,0)
 . S LA7EVNC=$P(Y(0),"^",4)
"RTN","LA7SMA",166,0)
 ;
"RTN","LA7SMA",167,0)
 ; Change status to "received", update event file.
"RTN","LA7SMA",168,0)
 I LA7ANS=3 S LA7EVNC="SM55"
"RTN","LA7SMA",169,0)
 ;
"RTN","LA7SMA",170,0)
 S LA7ADT=$$NOW^XLFDT
"RTN","LA7SMA",171,0)
 D UPDTST
"RTN","LA7SMA",172,0)
 ;
"RTN","LA7SMA",173,0)
 I LA7ANS=3 D EN^DDIOL("Selected test(s) on manifest "_$P(LA7SM,"^",2)_" set to 'Test received' status.","","!?2")
"RTN","LA7SMA",174,0)
 Q
"RTN","LA7SMA",175,0)
 ;
"RTN","LA7SMA",176,0)
 ;
"RTN","LA7SMA",177,0)
UPDTST ; Update selected test
"RTN","LA7SMA",178,0)
 S LA7Y=""
"RTN","LA7SMA",179,0)
 F  S LA7Y=$O(LA7YARRY(LA7Y)) Q:LA7Y=""  D
"RTN","LA7SMA",180,0)
 . F LA7I=1:1 Q:'$P(LA7YARRY(LA7Y),",",LA7I)  D
"RTN","LA7SMA",181,0)
 . . S LA7X=$P(LA7YARRY(LA7Y),",",LA7I)
"RTN","LA7SMA",182,0)
 . . ; Change status to "accepted/rejected".
"RTN","LA7SMA",183,0)
 . . D STSUP^LA7SMU(LA7SM,$P(LA760(LA7X),"^"),$S(LA7ANS=2:6,LA7ANS=3:3,1:""))
"RTN","LA7SMA",184,0)
 . . ; Update event file with reason
"RTN","LA7SMA",185,0)
 . . S LA7DATA=LA7EVNC_"^"_LA7ADT_"^"_$P(LA760(LA7X),"^",3)_"^"_$P(LA7SM,"^",2)
"RTN","LA7SMA",186,0)
 . . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMA",187,0)
 . . S LA7ANS(1)=$G(LA7ANS(1))+1
"RTN","LA7SMA",188,0)
 Q
"RTN","LA7SMA",189,0)
 ;
"RTN","LA7SMA",190,0)
 ;
"RTN","LA7SMA",191,0)
SEL ; Select accession
"RTN","LA7SMA",192,0)
 ;
"RTN","LA7SMA",193,0)
 N LRAA,LRACC,LRAD,LRAN,X
"RTN","LA7SMA",194,0)
 ;
"RTN","LA7SMA",195,0)
 ; Select by accession, ^LRWU4 needs variable LRACC.
"RTN","LA7SMA",196,0)
 S (LRACC,LA7UID)="",LA7QUIT=0
"RTN","LA7SMA",197,0)
 D ^LRWU4
"RTN","LA7SMA",198,0)
 I $D(DUOUT) S LA7QUIT="1^User aborted" Q
"RTN","LA7SMA",199,0)
 I $D(DTOUT) S LA7QUIT="1^User timeout" Q
"RTN","LA7SMA",200,0)
 I (LRAA*LRAD*LRAN)<1 S LA7QUIT="1" Q
"RTN","LA7SMA",201,0)
 ;
"RTN","LA7SMA",202,0)
 S LA7AA=LRAA,LA7AD=LRAD,LA7AN=LRAN
"RTN","LA7SMA",203,0)
 ;
"RTN","LA7SMA",204,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SMA",205,0)
 I LA7UID="" S LA7QUIT="2^Database error - accession missing UID" Q
"RTN","LA7SMA",206,0)
 Q
"RTN","LA7SMB")
0^28^B50425818
"RTN","LA7SMB",1,0)
LA7SMB ;DALOI/JMC - Shipping Manifest Build ;11/16/11  13:08
"RTN","LA7SMB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMB",3,0)
 ;
"RTN","LA7SMB",4,0)
EN ;
"RTN","LA7SMB",5,0)
 ;
"RTN","LA7SMB",6,0)
 D CLEANUP
"RTN","LA7SMB",7,0)
 S LA7QUIT=0
"RTN","LA7SMB",8,0)
 ;
"RTN","LA7SMB",9,0)
 ; Select shipping configuration
"RTN","LA7SMB",10,0)
 I '$D(^LAHM(62.9,"C",DUZ(2))) D  Q  ;
"RTN","LA7SMB",11,0)
 . W !,$C(7),"No configurations for your current division."
"RTN","LA7SMB",12,0)
 . H 2
"RTN","LA7SMB",13,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(1)
"RTN","LA7SMB",14,0)
 I LA7SCFG<1 D CLEANUP Q
"RTN","LA7SMB",15,0)
 ;
"RTN","LA7SMB",16,0)
 ; Determine if there's an active manifest.
"RTN","LA7SMB",17,0)
 S LA7SM=$$CHKSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMB",18,0)
 I LA7SM<0 D  Q
"RTN","LA7SMB",19,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMB",20,0)
 . D CLEANUP
"RTN","LA7SMB",21,0)
 ;
"RTN","LA7SMB",22,0)
 I LA7SM=0 D
"RTN","LA7SMB",23,0)
 . N DIR,DIRUT,DTOUT,X,Y
"RTN","LA7SMB",24,0)
 . S DIR(0)="YO",DIR("A",1)="There's no open shipping manifest for "_$P(LA7SCFG,"^",2)
"RTN","LA7SMB",25,0)
 . S DIR("A")="Do you want to start one",DIR("B")="NO"
"RTN","LA7SMB",26,0)
 . D ^DIR
"RTN","LA7SMB",27,0)
 . I Y'=1 S LA7QUIT=1 Q
"RTN","LA7SMB",28,0)
 . S LA7SM=$$CSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMB",29,0)
 . I LA7SM<1 D EN^DDIOL($P(LA7SM,"^",2),"","!?5") S LA7QUIT=1
"RTN","LA7SMB",30,0)
 ;
"RTN","LA7SMB",31,0)
 ; Only starting a new manifest, no building
"RTN","LA7SMB",32,0)
 I $G(LA7SMON) Q
"RTN","LA7SMB",33,0)
 ;
"RTN","LA7SMB",34,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",35,0)
 ;
"RTN","LA7SMB",36,0)
 D ADATE^LA7SMU1
"RTN","LA7SMB",37,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",38,0)
 ;
"RTN","LA7SMB",39,0)
 ; Flag to exclude previously removed tests from building.
"RTN","LA7SMB",40,0)
 S LA7EXPRV=$$ASKPREV^LA7SMU1(+LA7SCFG)
"RTN","LA7SMB",41,0)
 I LA7EXPRV<0 S LA7QUIT=1
"RTN","LA7SMB",42,0)
 ;
"RTN","LA7SMB",43,0)
 I LA7QUIT=1 D CLEANUP Q
"RTN","LA7SMB",44,0)
 ;
"RTN","LA7SMB",45,0)
DQ ; Taskman entry point
"RTN","LA7SMB",46,0)
 ; Build list of tests and criteria for manifest.
"RTN","LA7SMB",47,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SMB",48,0)
 I '$D(ZTQUEUED) D EN^DDIOL("Using shipping manifest# "_$P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMB",49,0)
 ;
"RTN","LA7SMB",50,0)
 ; Lock this shipping manifest
"RTN","LA7SMB",51,0)
 D LOCK^DILF("^LAHM(62.8,+LA7SM,0)")
"RTN","LA7SMB",52,0)
 I '$T D  Q
"RTN","LA7SMB",53,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Unable to obtain lock for shipping manifest "_$P(LA7SCFG,"^",2),"","!?5")
"RTN","LA7SMB",54,0)
 . D CLEANUP
"RTN","LA7SMB",55,0)
 ;
"RTN","LA7SMB",56,0)
 ; Update status
"RTN","LA7SMB",57,0)
 D SMSUP^LA7SMU(LA7SM,2,"SM03")
"RTN","LA7SMB",58,0)
 S LA7SMCNT=0
"RTN","LA7SMB",59,0)
 ;
"RTN","LA7SMB",60,0)
 ; Build TMP global with test profiles
"RTN","LA7SMB",61,0)
 D SCBLD^LA7SM1(+LA7SCFG)
"RTN","LA7SMB",62,0)
 ;
"RTN","LA7SMB",63,0)
 S LA7AA=""
"RTN","LA7SMB",64,0)
 F  S LA7AA=$O(^TMP("LA7SMB",$J,LA7AA)) Q:LA7AA=""  D
"RTN","LA7SMB",65,0)
 . N LA7END,LRSS
"RTN","LA7SMB",66,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Searching accession area: "_$P($G(^LRO(68,LA7AA,0)),"^"),"","!?5")
"RTN","LA7SMB",67,0)
 . ; Use selected accession date else get current accession day for this accession area
"RTN","LA7SMB",68,0)
 . I $G(LA7AA(LA7AA)) S LA7AD=$P(LA7AA(LA7AA),"^")
"RTN","LA7SMB",69,0)
 . E  S LA7AD=$$AD^LA7SUTL(LA7AA)
"RTN","LA7SMB",70,0)
 . S LRSS=$P($G(^LRO(68,LA7AA,0)),"^",2)
"RTN","LA7SMB",71,0)
 . S LA7AN=+$P($G(LA7AA(LA7AA)),"^",2),LA7LAN=+$P($G(LA7AA(LA7AA)),"^",3),LA7END=0
"RTN","LA7SMB",72,0)
 . I LA7AN S LA7AN=LA7AN-1
"RTN","LA7SMB",73,0)
 . F  S LA7AN=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN)) Q:'LA7AN!(LA7END)  D SCAN
"RTN","LA7SMB",74,0)
 ;
"RTN","LA7SMB",75,0)
 ; Update status
"RTN","LA7SMB",76,0)
 D SMSUP^LA7SMU(LA7SM,1,"SM02")
"RTN","LA7SMB",77,0)
 ;
"RTN","LA7SMB",78,0)
 ; Release lock on this shipping manifest
"RTN","LA7SMB",79,0)
 L -^LAHM(62.8,+LA7SM,0)
"RTN","LA7SMB",80,0)
 ;
"RTN","LA7SMB",81,0)
 I '$D(ZTQUEUED) D
"RTN","LA7SMB",82,0)
 . N DIR,DIRUT,DIROUT,DTOUT,X,Y
"RTN","LA7SMB",83,0)
 . D EN^DDIOL("There were "_$S(LA7SMCNT:LA7SMCNT,1:"NO")_" specimens added","","!?5")
"RTN","LA7SMB",84,0)
 . D ASK^LA7SMP(LA7SM)
"RTN","LA7SMB",85,0)
 D CLEANUP
"RTN","LA7SMB",86,0)
 Q
"RTN","LA7SMB",87,0)
 ;
"RTN","LA7SMB",88,0)
SMONLY ; Start a shipping manifest only, no building
"RTN","LA7SMB",89,0)
 ;
"RTN","LA7SMB",90,0)
 N LA7SMON
"RTN","LA7SMB",91,0)
 S LA7SMON=1
"RTN","LA7SMB",92,0)
 D EN
"RTN","LA7SMB",93,0)
 I $G(LA7SCFG),$G(LA7SM)>0 D EN^DDIOL("Shipping manifest# "_$P(LA7SM,"^",2)_" is available","","!?5")
"RTN","LA7SMB",94,0)
 D CLEANUP
"RTN","LA7SMB",95,0)
 Q
"RTN","LA7SMB",96,0)
 ;
"RTN","LA7SMB",97,0)
 ;
"RTN","LA7SMB",98,0)
SCAN ; Scan accession for tests to build
"RTN","LA7SMB",99,0)
 ;
"RTN","LA7SMB",100,0)
 N LA762,LA76805,LA7DIV,LA7END,X
"RTN","LA7SMB",101,0)
 ;
"RTN","LA7SMB",102,0)
 I LA7LAN,LA7AN>LA7LAN S LA7END=1 Q
"RTN","LA7SMB",103,0)
 ;
"RTN","LA7SMB",104,0)
 ; Don't build controls
"RTN","LA7SMB",105,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)=62.3 Q
"RTN","LA7SMB",106,0)
 ;
"RTN","LA7SMB",107,0)
 ; Don't build uncollected specimens
"RTN","LA7SMB",108,0)
 I '$P(LA7SCFG(0),"^",14),'$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",3) Q
"RTN","LA7SMB",109,0)
 ;
"RTN","LA7SMB",110,0)
 ; Don't build if configuration has specific ordering locations and accession's ordering location is not on list.
"RTN","LA7SMB",111,0)
 I $$CHKOLOC^LA7SM1(LA7AA,LA7AD,LA7AN,+LA7SCFG)<1 Q
"RTN","LA7SMB",112,0)
 ;
"RTN","LA7SMB",113,0)
 ; Get Specimen type - if no specimen then quit
"RTN","LA7SMB",114,0)
 S (LA762,LA76805)=0
"RTN","LA7SMB",115,0)
 S X=+$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,0))
"RTN","LA7SMB",116,0)
 I X D
"RTN","LA7SMB",117,0)
 . S X=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,X,0))
"RTN","LA7SMB",118,0)
 . S LA76805=+$P(X,"^"),LA762=+$P(X,"^",2)
"RTN","LA7SMB",119,0)
 I LA76805<1 Q
"RTN","LA7SMB",120,0)
 ;
"RTN","LA7SMB",121,0)
 ; Accession's division
"RTN","LA7SMB",122,0)
 S LA7DIV=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.4)),"^")
"RTN","LA7SMB",123,0)
 ;
"RTN","LA7SMB",124,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SMB",125,0)
 I LA7UID="" S LA7UID=$$LRUID^LRX(LA7AA,LA7AD,LA7AN)
"RTN","LA7SMB",126,0)
 S LA760=0
"RTN","LA7SMB",127,0)
 F  S LA760=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q:'LA760  D
"RTN","LA7SMB",128,0)
 . ; Not looking for this test.
"RTN","LA7SMB",129,0)
 . I '$D(^TMP("LA7SMB",$J,LA7AA,LA760)) Q
"RTN","LA7SMB",130,0)
 . ; Set lock.
"RTN","LA7SMB",131,0)
 . D LOCK68
"RTN","LA7SMB",132,0)
 . I '$T D  Q
"RTN","LA7SMB",133,0)
 . . I $D(ZTQUEUED) Q
"RTN","LA7SMB",134,0)
 . . D EN^DDIOL("Unable to obtain lock for accession "_LA7UID_" test "_$$GET1^DIQ(60,LA760_",",.01),"","!?5")
"RTN","LA7SMB",135,0)
 . ; NOTE *** Do NOT add any "QUIT" after this point unless releasing LOCK set above ***.
"RTN","LA7SMB",136,0)
 . ; Test's zeroth node.
"RTN","LA7SMB",137,0)
 . S LA760(0)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0))
"RTN","LA7SMB",138,0)
 . ; Test completed - skip
"RTN","LA7SMB",139,0)
 . I "CY^EM^SP"'[LRSS,$P(LA760(0),"^",5) D UNLOCK68 Q
"RTN","LA7SMB",140,0)
 . ; Test already on shipping manifest - skip
"RTN","LA7SMB",141,0)
 . I $$SHIPCK^LA7SMU1(LA7UID,LA7AA,LA760,$P(LA760(0),"^",10)) D UNLOCK68 Q
"RTN","LA7SMB",142,0)
 . ; Previously removed - skip
"RTN","LA7SMB",143,0)
 . I LA7EXPRV,$$PREV^LA7SMU1(LA7UID,$P(LA760(0),"^")) D UNLOCK68 Q
"RTN","LA7SMB",144,0)
 . ; Test urgency
"RTN","LA7SMB",145,0)
 . S LA76205=+$P(LA760(0),"^",2)
"RTN","LA7SMB",146,0)
 . I LA76205>49 S LA76205=$S(LA76205=50:9,1:LA76205-50)
"RTN","LA7SMB",147,0)
 . ; Check if test is eligible for manifest
"RTN","LA7SMB",148,0)
 . D SCHK^LA7SM1
"RTN","LA7SMB",149,0)
 . I LA7FLAG S LA7FLAG=$$CKTEST(LA7AA,LA7AD,LA7AN,LA760)
"RTN","LA7SMB",150,0)
 . ; Add test to shipping manifest.
"RTN","LA7SMB",151,0)
 . I LA7FLAG D ADD^LA7SMB1
"RTN","LA7SMB",152,0)
 . ; Release lock.
"RTN","LA7SMB",153,0)
 . D UNLOCK68
"RTN","LA7SMB",154,0)
 Q
"RTN","LA7SMB",155,0)
 ;
"RTN","LA7SMB",156,0)
 ;
"RTN","LA7SMB",157,0)
CKTEST(LA7AA,LA7AD,LA7AN,LA760) ; Check other tests on accession if test is part of another panel that
"RTN","LA7SMB",158,0)
 ; has been flagged for shipping.
"RTN","LA7SMB",159,0)
 ; Call with LA7AA = ien of accession area.
"RTN","LA7SMB",160,0)
 ;           LA7AD = accession date
"RTN","LA7SMB",161,0)
 ;           LA7AN = accession number
"RTN","LA7SMB",162,0)
 ;           LA760 = ien of lab test
"RTN","LA7SMB",163,0)
 ; Returns   LA7FLAG = 0 (part of another panel)
"RTN","LA7SMB",164,0)
 ;                   = 1 (not part of another panel)
"RTN","LA7SMB",165,0)
 ;
"RTN","LA7SMB",166,0)
 N LA7FLAG,LA7PCNT,LA7K,LA7J,X
"RTN","LA7SMB",167,0)
 ;
"RTN","LA7SMB",168,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7SMB",169,0)
 ;
"RTN","LA7SMB",170,0)
 S LA7FLAG=1
"RTN","LA7SMB",171,0)
 S LA7AD(LA7AD)=""
"RTN","LA7SMB",172,0)
 S LA7K=+$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",3)
"RTN","LA7SMB",173,0)
 ;
"RTN","LA7SMB",174,0)
 I LA7K D
"RTN","LA7SMB",175,0)
 . ; Check original accession date.
"RTN","LA7SMB",176,0)
 . S LA7AD(LA7K)=""
"RTN","LA7SMB",177,0)
 . ; Check rollover accession
"RTN","LA7SMB",178,0)
 . I $P($G(^LRO(68,LA7AA,1,LA7K,1,LA7AN,9)),"^") S LA7AD($P($G(^LRO(68,LA7AA,1,LA7K,1,LA7AN,9)),"^"))=""
"RTN","LA7SMB",179,0)
 S LA7AD=0
"RTN","LA7SMB",180,0)
 F  S LA7AD=$O(LA7AD(LA7AD)) Q:'LA7AD  D
"RTN","LA7SMB",181,0)
 . S LA7J=0
"RTN","LA7SMB",182,0)
 . F  S LA7J=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7J)) Q:'LA7J  D
"RTN","LA7SMB",183,0)
 . . I LA7J=LA760 Q
"RTN","LA7SMB",184,0)
 . . ; Not on manifest
"RTN","LA7SMB",185,0)
 . . I '$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7J,0)),"^",10) Q
"RTN","LA7SMB",186,0)
 . . S LA7PCNT=0 D UNWIND(LA7J)
"RTN","LA7SMB",187,0)
 ;
"RTN","LA7SMB",188,0)
 ; Test is part of another test previously shipped.
"RTN","LA7SMB",189,0)
 I $D(^TMP("LA7TREE",$J,LA760)) S LA7FLAG=0
"RTN","LA7SMB",190,0)
 ;
"RTN","LA7SMB",191,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7SMB",192,0)
 ;
"RTN","LA7SMB",193,0)
 Q LA7FLAG
"RTN","LA7SMB",194,0)
 ;
"RTN","LA7SMB",195,0)
UNWIND(LA760) ; Unwind profile - set tests into global ^TMP("LA7TREE",$J).
"RTN","LA7SMB",196,0)
 ; Initialize variable LA7PCNT=0 before calling.
"RTN","LA7SMB",197,0)
 ; Kill ^TMP("LA7TREE",$J) before calling.
"RTN","LA7SMB",198,0)
 ;
"RTN","LA7SMB",199,0)
 N I,II
"RTN","LA7SMB",200,0)
 ;
"RTN","LA7SMB",201,0)
 ; Recursive panel, caught in a loop.
"RTN","LA7SMB",202,0)
 I $G(LA7PCNT)>50 Q
"RTN","LA7SMB",203,0)
 ; Test does not exist in file 60.
"RTN","LA7SMB",204,0)
 I '$D(^LAB(60,LA760,0)) Q
"RTN","LA7SMB",205,0)
 ; Bypass "workload" type tests.
"RTN","LA7SMB",206,0)
 I $P(^LAB(60,LA760,0),"^",4)="WK" Q
"RTN","LA7SMB",207,0)
 ; Atomic test
"RTN","LA7SMB",208,0)
 I $P(^LAB(60,LA760,0),"^",5)'="" S ^TMP("LA7TREE",$J,LA760)="" Q
"RTN","LA7SMB",209,0)
 ; Check panels
"RTN","LA7SMB",210,0)
 I $O(^LAB(60,LA760,2,0)) D
"RTN","LA7SMB",211,0)
 . ; Increment panel counter.
"RTN","LA7SMB",212,0)
 . S LA7PCNT=$G(LA7PCNT)+1
"RTN","LA7SMB",213,0)
 . S I=0
"RTN","LA7SMB",214,0)
 . ; Expand test on panel.
"RTN","LA7SMB",215,0)
 . F  S I=$O(^LAB(60,LA760,2,I)) Q:'I  D
"RTN","LA7SMB",216,0)
 . . ; IEN of test on panel.
"RTN","LA7SMB",217,0)
 . . S II=+$G(^LAB(60,LA760,2,I,0))
"RTN","LA7SMB",218,0)
 . . ; Recursive panel, panel calls itself.
"RTN","LA7SMB",219,0)
 . . I II,II=LA760 Q
"RTN","LA7SMB",220,0)
 . . I II S ^TMP("LA7TREE",$J,LA760)="" D UNWIND(II)
"RTN","LA7SMB",221,0)
 Q
"RTN","LA7SMB",222,0)
 ;
"RTN","LA7SMB",223,0)
LOCK68 ; Lock entry in file 68
"RTN","LA7SMB",224,0)
 ; Called from above, LA7SM
"RTN","LA7SMB",225,0)
 ;
"RTN","LA7SMB",226,0)
 D LOCK^DILF("^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)")
"RTN","LA7SMB",227,0)
 ;
"RTN","LA7SMB",228,0)
 Q
"RTN","LA7SMB",229,0)
 ;
"RTN","LA7SMB",230,0)
UNLOCK68 ; Unlock entry in file 68
"RTN","LA7SMB",231,0)
 ; Called from above, LA7SM
"RTN","LA7SMB",232,0)
 ;
"RTN","LA7SMB",233,0)
 L -^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760) ; Release lock.
"RTN","LA7SMB",234,0)
 ;
"RTN","LA7SMB",235,0)
 Q
"RTN","LA7SMB",236,0)
 ;
"RTN","LA7SMB",237,0)
CLEANUP ; Cleanup variables
"RTN","LA7SMB",238,0)
 ;
"RTN","LA7SMB",239,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SMB",240,0)
 ;
"RTN","LA7SMB",241,0)
 F LA7I="LA7SMB","LA7SMB-R","LA7SMADD","LA7TREE" K ^TMP(LA7I,$J)
"RTN","LA7SMB",242,0)
 ;
"RTN","LA7SMB",243,0)
 K LA760,LA76205,LA76805,LA7AA,LA7AD,LA7AN,LA7DATA,LA7EXPRV,LA7FLAG,LA7I,LA7LAN,LA7PCNT,LA7QUIT,LA7SCFG,LA7SM,LA7SMCNT,LA7UID,LA7X
"RTN","LA7SMB",244,0)
 K LRDFN
"RTN","LA7SMB",245,0)
 Q
"RTN","LA7SMB1")
0^82^B8530586
"RTN","LA7SMB1",1,0)
LA7SMB1 ;DALOI/JMC - Shipping Manifest Build ;03/07/12  08:31
"RTN","LA7SMB1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SMB1",3,0)
 ;
"RTN","LA7SMB1",4,0)
ADD ; Add test to shipping manifest
"RTN","LA7SMB1",5,0)
 ; Called from LA7SMB, LA7SM
"RTN","LA7SMB1",6,0)
 ; Lock on ^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760) should be set before entering here.
"RTN","LA7SMB1",7,0)
 ;
"RTN","LA7SMB1",8,0)
 N FDA,IENS,LA7628,LA768,LA7DATA,X,Y
"RTN","LA7SMB1",9,0)
 ;
"RTN","LA7SMB1",10,0)
 S LRDFN=+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0))
"RTN","LA7SMB1",11,0)
 S LA7UID=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")
"RTN","LA7SMB1",12,0)
 I LA7UID="" S LA7UID=$$LRUID^LRX(LA7AA,LA7AD,LA7AN)
"RTN","LA7SMB1",13,0)
 S LA7SMCNT=$G(LA7SMCNT)+1
"RTN","LA7SMB1",14,0)
 S ^TMP("LA7SMADD",$J,LA7SMCNT)=LRDFN_"^"_LA760_"^"_LA76805_"^"_LA76205_"^"_LA7UID
"RTN","LA7SMB1",15,0)
 S LA7628(1)=+LA7SM,IENS="+2,"_LA7628(1)_","
"RTN","LA7SMB1",16,0)
 S FDA(2,62.801,IENS,.01)=LRDFN
"RTN","LA7SMB1",17,0)
 S FDA(2,62.801,IENS,.02)=LA760
"RTN","LA7SMB1",18,0)
 I LA76805 S FDA(2,62.801,IENS,.03)=LA76805
"RTN","LA7SMB1",19,0)
 S FDA(2,62.801,IENS,.04)=LA76205
"RTN","LA7SMB1",20,0)
 S FDA(2,62.801,IENS,.05)=LA7UID
"RTN","LA7SMB1",21,0)
 S FDA(2,62.801,IENS,.08)=1
"RTN","LA7SMB1",22,0)
 I $D(LA7X(0)) D
"RTN","LA7SMB1",23,0)
 . I $P(LA7X(0),"^",5) S FDA(2,62.801,IENS,.06)=$P(LA7X(0),"^",5)
"RTN","LA7SMB1",24,0)
 . I $P(LA7X(0),"^",6) S FDA(2,62.801,IENS,.07)=$P(LA7X(0),"^",6)
"RTN","LA7SMB1",25,0)
 . I $P(LA7X(0),"^",7) S FDA(2,62.801,IENS,.09)=$P(LA7X(0),"^",7)
"RTN","LA7SMB1",26,0)
 I $D(LA7X(1)) D
"RTN","LA7SMB1",27,0)
 . I $P(LA7X(1),"^",1)]"" S FDA(2,62.801,IENS,1.1)=$P(LA7X(1),"^",1)
"RTN","LA7SMB1",28,0)
 . I $P(LA7X(1),"^",2)]"" S FDA(2,62.801,IENS,1.13)=$P(LA7X(1),"^",2)
"RTN","LA7SMB1",29,0)
 . I $P(LA7X(1),"^",5)]"" S FDA(2,62.801,IENS,1.14)=$P(LA7X(1),"^",5)
"RTN","LA7SMB1",30,0)
 . I $P(LA7X(1),"^",3)]"" S FDA(2,62.801,IENS,1.2)=$P(LA7X(1),"^",3)
"RTN","LA7SMB1",31,0)
 . I $P(LA7X(1),"^",4)]"" S FDA(2,62.801,IENS,1.23)=$P(LA7X(1),"^",4)
"RTN","LA7SMB1",32,0)
 . I $P(LA7X(1),"^",6)]"" S FDA(2,62.801,IENS,1.24)=$P(LA7X(1),"^",6)
"RTN","LA7SMB1",33,0)
 I $D(LA7X(2)) D
"RTN","LA7SMB1",34,0)
 . I $P(LA7X(2),"^",1)]"" S FDA(2,62.801,IENS,2.1)=$P(LA7X(2),"^",1)
"RTN","LA7SMB1",35,0)
 . I $P(LA7X(2),"^",2)]"" S FDA(2,62.801,IENS,2.13)=$P(LA7X(2),"^",2)
"RTN","LA7SMB1",36,0)
 . I $P(LA7X(2),"^",7)]"" S FDA(2,62.801,IENS,2.14)=$P(LA7X(2),"^",7)
"RTN","LA7SMB1",37,0)
 . I $P(LA7X(2),"^",3)]"" S FDA(2,62.801,IENS,2.2)=$P(LA7X(2),"^",3)
"RTN","LA7SMB1",38,0)
 . I $P(LA7X(2),"^",4)]"" S FDA(2,62.801,IENS,2.23)=$P(LA7X(2),"^",4)
"RTN","LA7SMB1",39,0)
 . I $P(LA7X(2),"^",8)]"" S FDA(2,62.801,IENS,2.24)=$P(LA7X(2),"^",8)
"RTN","LA7SMB1",40,0)
 . I $P(LA7X(2),"^",5)]"" S FDA(2,62.801,IENS,2.3)=$P(LA7X(2),"^",5)
"RTN","LA7SMB1",41,0)
 . I $P(LA7X(2),"^",6)]"" S FDA(2,62.801,IENS,2.33)=$P(LA7X(2),"^",6)
"RTN","LA7SMB1",42,0)
 . I $P(LA7X(2),"^",9)]"" S FDA(2,62.801,IENS,2.34)=$P(LA7X(2),"^",9)
"RTN","LA7SMB1",43,0)
 I $D(LA7X(5)) D
"RTN","LA7SMB1",44,0)
 . F I=1:1:9 I $P(LA7X(5),"^",I)]"" S FDA(2,62.801,IENS,"5."_I)=$P(LA7X(5),"^",I)
"RTN","LA7SMB1",45,0)
 ;
"RTN","LA7SMB1",46,0)
 ; Check for Non-VA SNOMED mapping on interface for specimen and/or collection sample.
"RTN","LA7SMB1",47,0)
 I $P(LA7SCFG(0),"^",7),$D(^LAHM(62.48,$P(LA7SCFG(0),"^",7),"SCT")) D
"RTN","LA7SMB1",48,0)
 . I LA76805 D
"RTN","LA7SMB1",49,0)
 . . S X=$O(^LAHM(62.48,$P(LA7SCFG(0),"^",7),"SCT","AC",LA76805_";LAB(61,",""))
"RTN","LA7SMB1",50,0)
 . . I X'="" S FDA(2,62.801,IENS,20.1)=X
"RTN","LA7SMB1",51,0)
 . I LA762 D
"RTN","LA7SMB1",52,0)
 . . S X=$O(^LAHM(62.48,$P(LA7SCFG(0),"^",7),"SCT","AC",LA762_";LAB(62,",""))
"RTN","LA7SMB1",53,0)
 . . I X'="" S FDA(2,62.801,IENS,20.2)=X
"RTN","LA7SMB1",54,0)
 ;
"RTN","LA7SMB1",55,0)
 D UPDATE^DIE("","FDA(2)","LA7628","LA7DIE(2)")
"RTN","LA7SMB1",56,0)
 ;
"RTN","LA7SMB1",57,0)
 ; Update event file
"RTN","LA7SMB1",58,0)
 S LA7DATA="SM50^"_$$NOW^XLFDT_"^"_LA760_"^"_$P(LA7SM,"^",2)
"RTN","LA7SMB1",59,0)
 D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMB1",60,0)
 ;
"RTN","LA7SMB1",61,0)
 ; Update accession
"RTN","LA7SMB1",62,0)
 D ACCSUP^LA7SMU(LA7UID,LA760,+LA7SM)
"RTN","LA7SMB1",63,0)
 Q
"RTN","LA7SMP")
0^29^B84913875
"RTN","LA7SMP",1,0)
LA7SMP ;DALOI/JMC - Shipping Manifest Print ;03/26/10  16:26
"RTN","LA7SMP",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,45,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMP",3,0)
 ;
"RTN","LA7SMP",4,0)
EN ; Entry point to print a shipping manifest
"RTN","LA7SMP",5,0)
 ;
"RTN","LA7SMP",6,0)
 N LA7CHK,LA7SCFG,LA7EXIT,LA7PAGE,LA7QUIT,LA7SBC,LA7SM
"RTN","LA7SMP",7,0)
 ;
"RTN","LA7SMP",8,0)
 D EN^DDIOL("Print Shipping Manifest","","!!")
"RTN","LA7SMP",9,0)
 D KILL^LA7SMP0
"RTN","LA7SMP",10,0)
 D INIT^LA7SMP0
"RTN","LA7SMP",11,0)
 I LA7QUIT D KILL^LA7SMP0 Q
"RTN","LA7SMP",12,0)
 S LA7SM=$$SELSM^LA7SMU(+LA7SCFG)
"RTN","LA7SMP",13,0)
 I LA7SM<0 D  Q
"RTN","LA7SMP",14,0)
 . D EN^DDIOL($P(LA7SM,"^",2),"","!?5")
"RTN","LA7SMP",15,0)
 . D KILL^LA7SMP0
"RTN","LA7SMP",16,0)
 ;
"RTN","LA7SMP",17,0)
 S LA7CHK=1 ; flag to check for missing info.
"RTN","LA7SMP",18,0)
 W !
"RTN","LA7SMP",19,0)
 D DEV
"RTN","LA7SMP",20,0)
 D END^LA7SMP0
"RTN","LA7SMP",21,0)
 Q
"RTN","LA7SMP",22,0)
 ;
"RTN","LA7SMP",23,0)
 ;
"RTN","LA7SMP",24,0)
DEV ; Alternate entry point when user has already selected a manifest.
"RTN","LA7SMP",25,0)
 ;
"RTN","LA7SMP",26,0)
 ;ZEXCEPT: %ZIS,IOM,IOSL,IOST,LA7CHK,LA7EXIT,LA7PAGE,LA7SBC,LA7SCFG,LA7SM,POP,ZTQUEUED
"RTN","LA7SMP",27,0)
 ;
"RTN","LA7SMP",28,0)
 ; Determine if bar codes on manifest
"RTN","LA7SMP",29,0)
 S LA7SBC=$$GET1^DIQ(62.9,+LA7SCFG_",",.09,"I")
"RTN","LA7SMP",30,0)
 ;
"RTN","LA7SMP",31,0)
 ; If not in shipping status then don't print, save paper
"RTN","LA7SMP",32,0)
 I $P($G(^LAHM(62.8,+LA7SM,0)),"^",3)<4 S LA7SBC=0
"RTN","LA7SMP",33,0)
 I LA7SBC,$P($G(^LAHM(62.8,+LA7SM,0)),"^",3)=4 D
"RTN","LA7SMP",34,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP",35,0)
 . S DIR(0)="YO",DIR("A")="Print barcodes on manifest",DIR("B")="YES"
"RTN","LA7SMP",36,0)
 . D ^DIR
"RTN","LA7SMP",37,0)
 . I $D(DIRUT) S LA7EXIT=1
"RTN","LA7SMP",38,0)
 . I Y'=1 S LA7SBC=0
"RTN","LA7SMP",39,0)
 I $G(LA7EXIT) Q
"RTN","LA7SMP",40,0)
 ;
"RTN","LA7SMP",41,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LA7SMP",42,0)
 I POP D  Q
"RTN","LA7SMP",43,0)
 . D HOME^%ZIS
"RTN","LA7SMP",44,0)
 . S LA7EXIT=1
"RTN","LA7SMP",45,0)
 I $D(IO("Q")) D  Q
"RTN","LA7SMP",46,0)
 . N ZTDESC,ZTDTH,ZTSK,ZTRTN,ZTIO,ZTSAVE
"RTN","LA7SMP",47,0)
 . S ZTRTN="DQ^LA7SMP",ZTSAVE("LA7*")="",ZTDESC="Lab Shipping Manifest Print"
"RTN","LA7SMP",48,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LA7SMP",49,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LA7SMP",50,0)
 . S LA7EXIT=1
"RTN","LA7SMP",51,0)
DQ ;
"RTN","LA7SMP",52,0)
 ;
"RTN","LA7SMP",53,0)
 U IO
"RTN","LA7SMP",54,0)
 ;
"RTN","LA7SMP",55,0)
 N I,LA760,LA762,LA762801,LA7AA,LA7ACC,LA7AD,LA7AN,LA7CDT,LA7DC,LA7ERR,LA7EXIT,LA7END,LA7FSITE
"RTN","LA7SMP",56,0)
 N LA7I,LA7ITEM,LA7ITMID,LA7LINE,LA7NLT,LA7NLTN,LA7NOW,LA7PROV,LA7QUIT,LA7ROOT
"RTN","LA7SMP",57,0)
 N LA7SCFG,LA7SCOND,LA7SCONT,LA7SDT,LA7SKIP,LA7SMR,LA7SMST,LA7SPEC,LA7SVIA,LA7TSITE,LA7UID
"RTN","LA7SMP",58,0)
 N LRDFN
"RTN","LA7SMP",59,0)
 ;
"RTN","LA7SMP",60,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMP",61,0)
 S LA7SCFG=+$P(LA7SM(0),"^",2),LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SMP",62,0)
 S (LA7DC,LA7EXIT,LA7END,LA7ITEM,LA7PAGE,LA7SMR,LA760,LA762801)=0
"RTN","LA7SMP",63,0)
 ;
"RTN","LA7SMP",64,0)
 ; Get collecting site's names and station numbers
"RTN","LA7SMP",65,0)
 D GETSITE^LA7SMP($P(LA7SCFG(0),"^",2),$P(LA7SCFG(0),"^",3),.LA7FSITE,.LA7TSITE)
"RTN","LA7SMP",66,0)
 ;
"RTN","LA7SMP",67,0)
 ; Flag - skip if accession deleted
"RTN","LA7SMP",68,0)
 S LA7SKIP=0
"RTN","LA7SMP",69,0)
 ; Check manifest for missing info.
"RTN","LA7SMP",70,0)
 I $G(LA7CHK)="" S LA7CHK=1
"RTN","LA7SMP",71,0)
 ;
"RTN","LA7SMP",72,0)
 S LA7NOW=$$HTE^XLFDT($H,"1M")
"RTN","LA7SMP",73,0)
 ; Manifest status
"RTN","LA7SMP",74,0)
 S LA7SMST=$P(LA7SM(0),"^",3)
"RTN","LA7SMP",75,0)
 I LA7SMST=4 D
"RTN","LA7SMP",76,0)
 . ; Get shipping date
"RTN","LA7SMP",77,0)
 . S LA7SDT=$$SMED^LA7SMU(LA7SM,"SM05")
"RTN","LA7SMP",78,0)
 . ; Flag to print receipt.
"RTN","LA7SMP",79,0)
 . I IOST["P-" S LA7SMR=$P(LA7SCFG(0),"^",10)
"RTN","LA7SMP",80,0)
 ;
"RTN","LA7SMP",81,0)
 ; Set barcode flag to "off"
"RTN","LA7SMP",82,0)
 I LA7SBC,IOST'["P-" S LA7SBC=0
"RTN","LA7SMP",83,0)
 ;
"RTN","LA7SMP",84,0)
 S $P(LA7SMST,"^",2)=$$EXTERNAL^DILFD(62.8,.03,"",LA7SMST)
"RTN","LA7SMP",85,0)
 S LA7LINE="",$P(LA7LINE,"-",IOM)=""
"RTN","LA7SMP",86,0)
 S LA7SVIA=$S($P(LA7SM(0),"^",4):$$GET1^DIQ(62.92,$P(LA7SM(0),"^",4)_",",.01),1:"None Specified")
"RTN","LA7SMP",87,0)
 ;
"RTN","LA7SMP",88,0)
 F  S LA762801=$O(^LAHM(62.8,+LA7SM,10,LA762801)) Q:'LA762801  D
"RTN","LA7SMP",89,0)
 . F I=0,1,2 S LA762801(I)=$G(^LAHM(62.8,+LA7SM,10,LA762801,I))
"RTN","LA7SMP",90,0)
 . I $P(LA762801(0),"^",8)=0 Q  ; Test previously "removed".
"RTN","LA7SMP",91,0)
 . S LA7SKIP=$$CHKTST^LA7SMU(+LA7SM,LA762801)
"RTN","LA7SMP",92,0)
 . I LA7SKIP,LA7SKIP<3 Q  ; Accession/test deleted
"RTN","LA7SMP",93,0)
 . I $G(LA7CHK) D CHKREQI^LA7SM2(+LA7SM,LA762801)
"RTN","LA7SMP",94,0)
 . S ^TMP("LA7SM",$J,+$P(LA762801(0),"^",7),+$P(LA762801(0),"^",9),$P(LA762801(0),"^",5),LA762801)=""
"RTN","LA7SMP",95,0)
 . D BUILDRI^LA7SM2
"RTN","LA7SMP",96,0)
 ;
"RTN","LA7SMP",97,0)
 ; Setup item identifiers for printed manifest
"RTN","LA7SMP",98,0)
 D ITEM^LA7SMP0
"RTN","LA7SMP",99,0)
 ;
"RTN","LA7SMP",100,0)
 S (LA7ITMID,LA7SCOND,LA7SCOND(0),LA7SCONT,LA7SCONT(0),LA7UID)=""
"RTN","LA7SMP",101,0)
 ;
"RTN","LA7SMP",102,0)
 I '$D(^TMP("LA7SM",$J)) D
"RTN","LA7SMP",103,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",104,0)
 . W !!,$$CJ^XLFSTR("No entries to print",IOM)
"RTN","LA7SMP",105,0)
 ;
"RTN","LA7SMP",106,0)
 S LA7ROOT="^TMP(""LA7SM"",$J)"
"RTN","LA7SMP",107,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7SM"!($QS(LA7ROOT,2)'=$J)  D  Q:LA7EXIT
"RTN","LA7SMP",108,0)
 . I LA7EXIT Q
"RTN","LA7SMP",109,0)
 . I LA7UID'="",LA7UID'=$QS(LA7ROOT,5) W !,LA7LINE
"RTN","LA7SMP",110,0)
 . I LA7SCOND'=$QS(LA7ROOT,3)!(LA7SCONT'=$QS(LA7ROOT,4)) D  Q:LA7EXIT
"RTN","LA7SMP",111,0)
 . . I LA7UID'="",LA7UID=$QS(LA7ROOT,5) W !,LA7LINE
"RTN","LA7SMP",112,0)
 . . I LA7PAGE,+LA7SMST'=4 W ! D WARN^LA7SMP0
"RTN","LA7SMP",113,0)
 . . S LA7SCOND=$QS(LA7ROOT,3),LA7SCONT=$QS(LA7ROOT,4)
"RTN","LA7SMP",114,0)
 . . S LA7SCOND(0)=$S(LA7SCOND:$$GET1^DIQ(62.93,LA7SCOND_",",.01),1:"None Specified")
"RTN","LA7SMP",115,0)
 . . S LA7SCONT(0)=$S(LA7SCONT:$$GET1^DIQ(62.91,LA7SCONT_",",.01),1:"None Specified")
"RTN","LA7SMP",116,0)
 . . D HED^LA7SMP0 S LA7UID=""
"RTN","LA7SMP",117,0)
 . S LA762801=$QS(LA7ROOT,6)
"RTN","LA7SMP",118,0)
 . F I=0,.1,2,5 S LA762801(I)=$G(^LAHM(62.8,+LA7SM,10,LA762801,I))
"RTN","LA7SMP",119,0)
 . S LA760=+$P(LA762801(0),"^",2) ; File #60 test ien
"RTN","LA7SMP",120,0)
 . I LA7UID'=$QS(LA7ROOT,5) D  Q:LA7EXIT
"RTN","LA7SMP",121,0)
 . . S LA7UID=$QS(LA7ROOT,5),LA7ITMID=$G(^TMP("LA7ITEM",$J,LA7UID,LA762801))
"RTN","LA7SMP",122,0)
 . . S LRDFN=+LA762801(0) D PTID^LA7SMP0
"RTN","LA7SMP",123,0)
 . . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMP",124,0)
 . . I X="" S LA7SKIP=1 Q  ; Skip - UID missing.
"RTN","LA7SMP",125,0)
 . . I LA7UID'=$QS(X,3) S LA7SKIP=1 ; Skip - UID missing.
"RTN","LA7SMP",126,0)
 . . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7SMP",127,0)
 . . S LA7SKIP=$$CHKTST^LA7SMU(+LA7SM,LA762801)
"RTN","LA7SMP",128,0)
 . . I LA7SKIP,LA7SKIP<3 Q  ; Skip - accession/test deleted.
"RTN","LA7SMP",129,0)
 . . S LA7ACC=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.2),"Accession not available"),"^")
"RTN","LA7SMP",130,0)
 . . S X=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0),"Not available"),U,8)
"RTN","LA7SMP",131,0)
 . . S LA7PROV=$S(X>0:X,1:"")_"^"_$S(X>0:$$PRAC^LRX(X),1:X)
"RTN","LA7SMP",132,0)
 . . S LA7CDT=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3),"Not available"),U,1)
"RTN","LA7SMP",133,0)
 . . I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),U,2) S LA7CDT=$P(LA7CDT,".")
"RTN","LA7SMP",134,0)
 . . S LA7SPEC=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,1,0),"Not available")
"RTN","LA7SMP",135,0)
 . . I LA7SPEC S LA7SPEC(0)=$G(^LAB(61,+LA7SPEC,0))
"RTN","LA7SMP",136,0)
 . . E  S LA7SPEC(0)="Specimen info not assigned"
"RTN","LA7SMP",137,0)
 . . S LA762=$P(LA7SPEC,"^",2)
"RTN","LA7SMP",138,0)
 . . I LA762 S LA762(0)=$G(^LAB(62,LA762,0))
"RTN","LA7SMP",139,0)
 . . E  S LA762(0)="Collection info not assigned"
"RTN","LA7SMP",140,0)
 . . S LA7ITEM=LA7ITEM+1,LA7ITEM(LA7SCOND(0))=$G(LA7ITEM(LA7SCOND(0)))+1
"RTN","LA7SMP",141,0)
 . . I ($Y+12)>IOSL D  Q:LA7EXIT
"RTN","LA7SMP",142,0)
 . . . W !
"RTN","LA7SMP",143,0)
 . . . I +LA7SMST'=4 D WARN^LA7SMP0
"RTN","LA7SMP",144,0)
 . . . D HED^LA7SMP0
"RTN","LA7SMP",145,0)
 . . D SH^LA7SMP0
"RTN","LA7SMP",146,0)
 . I LA7SKIP,LA7SKIP<3 Q  ; Skip - accession/test deleted.
"RTN","LA7SMP",147,0)
 . I ($Y+6)>IOSL D  Q:LA7EXIT
"RTN","LA7SMP",148,0)
 . . W !,LA7LINE
"RTN","LA7SMP",149,0)
 . . I +LA7SMST'=4 W ! D WARN^LA7SMP0
"RTN","LA7SMP",150,0)
 . . D HED^LA7SMP0 Q:LA7EXIT
"RTN","LA7SMP",151,0)
 . . S LA7DC=1 D SH^LA7SMP0
"RTN","LA7SMP",152,0)
 . W !,?11,$E(LA7LINE,1,41)
"RTN","LA7SMP",153,0)
 . W !,?11,$P(^LAB(60,LA760,0),"^",1),?43,$P(LA7SPEC(0),"^")
"RTN","LA7SMP",154,0)
 . I +LA7SMST'=4 D
"RTN","LA7SMP",155,0)
 . . N LA7TCOST
"RTN","LA7SMP",156,0)
 . . S LA7TCOST=$$GET1^DIQ(60,LA760_",",1,"E") Q:LA7TCOST=""
"RTN","LA7SMP",157,0)
 . . W:$X>(IOM-15) ! W ?(IOM-15)," Cost: $",$FN(LA7TCOST,",",2)
"RTN","LA7SMP",158,0)
 . I LA762801(.1)'="" D
"RTN","LA7SMP",159,0)
 . . N DIWF,DIWL,DIWR,LA7CMT
"RTN","LA7SMP",160,0)
 . . K ^UTILITY($J)
"RTN","LA7SMP",161,0)
 . . S DIWL=1,DIWR=IOM-13,DIWF=""
"RTN","LA7SMP",162,0)
 . . S X="Relevant clinical information: "_LA762801(.1) D ^DIWP
"RTN","LA7SMP",163,0)
 . . M LA7CMT=^UTILITY($J,"W",DIWL)
"RTN","LA7SMP",164,0)
 . . W ! D CMT^LA7SMP0 W !
"RTN","LA7SMP",165,0)
 . W !,?13,"VA NLT Code [Name]: "
"RTN","LA7SMP",166,0)
 . S LA7NLT=$$GET1^DIQ(64,+$$GET1^DIQ(60,LA760_",",64,"I")_",",1) ; NLT code.
"RTN","LA7SMP",167,0)
 . W $S(LA7NLT'="":LA7NLT,1:"*** None specified ***")
"RTN","LA7SMP",168,0)
 . S LA7NLTN=""
"RTN","LA7SMP",169,0)
 . I LA7NLT'="" S LA7NLTN=$$GET1^DIQ(64,+$$GET1^DIQ(60,LA760_",",64,"I")_",",.01) ; NLT code test name.
"RTN","LA7SMP",170,0)
 . I LA7NLTN'="" W:($X+$L(LA7NLTN)+3)>IOM !,?32 W " [",LA7NLTN,"]"
"RTN","LA7SMP",171,0)
 . I $P(LA7SM(0),"^",5) D  ; Print non-VA test code info
"RTN","LA7SMP",172,0)
 . . N LA7X,LA7Y,LA7Z
"RTN","LA7SMP",173,0)
 . . S LA7X=$P($G(^DIC(4,+$P(LA7SCFG(0),"^",3),0),"UNKNOWN"),"^",1)_" Order Code [Name]: "
"RTN","LA7SMP",174,0)
 . . W !,?11,LA7X,$S($P(LA762801(5),"^")'="":$P(LA762801(5),"^"),1:"*** None specified ***")," "
"RTN","LA7SMP",175,0)
 . . S LA7Y="["_$S($P(LA762801(5),"^",2)'="":$P(LA762801(5),"^",2),1:"*** None specified ***")_"]"
"RTN","LA7SMP",176,0)
 . . I $L(LA7Y)<(IOM-$X) W LA7Y Q
"RTN","LA7SMP",177,0)
 . . S LA7X=IOM-$X W $E(LA7Y,1,LA7X)
"RTN","LA7SMP",178,0)
 . . S LA7Y=$E(LA7Y,LA7X+1,$L(LA7Y)),LA7Z=IOM-11
"RTN","LA7SMP",179,0)
 . . F  S LA7X=$E(LA7Y,1,LA7Z) Q:LA7X=""  W !,?11,LA7X S LA7Y=$E(LA7Y,LA7Z+1,$L(LA7Y))
"RTN","LA7SMP",180,0)
 ;
"RTN","LA7SMP",181,0)
 I LA7EXIT Q
"RTN","LA7SMP",182,0)
 ;
"RTN","LA7SMP",183,0)
 W !,LA7LINE,!!,"End of Shipping Manifest"
"RTN","LA7SMP",184,0)
 ;
"RTN","LA7SMP",185,0)
 I +LA7SMST'=4 D
"RTN","LA7SMP",186,0)
 . I IOM<131 W !
"RTN","LA7SMP",187,0)
 . D WARN^LA7SMP0
"RTN","LA7SMP",188,0)
 ;
"RTN","LA7SMP",189,0)
 ; Print shipping manifest receipt.
"RTN","LA7SMP",190,0)
 I LA7SMR D
"RTN","LA7SMP",191,0)
 . S $P(LA7SMR,"^",2)=1 ; Flag that we're now printing receipt
"RTN","LA7SMP",192,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",193,0)
 . W !!,"Shipping condition and specimens shipped"
"RTN","LA7SMP",194,0)
 . S I=0 F  S I=$O(LA7ITEM(I)) Q:I=""  W !,?2,$$LJ^XLFSTR(I,30,"."),": ",$J(LA7ITEM(I),4,0)," specimens"
"RTN","LA7SMP",195,0)
 . W !,?34,$$REPEAT^XLFSTR("-",14)
"RTN","LA7SMP",196,0)
 . W !,?2,$$LJ^XLFSTR("Total number of specimens",30,"."),": ",$J(LA7ITEM,4,0)
"RTN","LA7SMP",197,0)
 . W !!,"Receipted by: ",$$REPEAT^XLFSTR("_",40)
"RTN","LA7SMP",198,0)
 . W !!,"   Date/time: ",$$REPEAT^XLFSTR("_",20)
"RTN","LA7SMP",199,0)
 ;
"RTN","LA7SMP",200,0)
 ; Print error listing if any.
"RTN","LA7SMP",201,0)
 I $O(LA7ERR(""))'="" D
"RTN","LA7SMP",202,0)
 . S $P(LA7SMR,"^",2)=2 ; Flag printing of error listing
"RTN","LA7SMP",203,0)
 . D HED^LA7SMP0
"RTN","LA7SMP",204,0)
 . S LA7I=0
"RTN","LA7SMP",205,0)
 . F  S LA7I=$O(LA7ERR(LA7I)) Q:LA7I=""  D  Q:LA7EXIT
"RTN","LA7SMP",206,0)
 . . I ($Y+6)>IOSL D HED^LA7SMP0 Q:LA7EXIT
"RTN","LA7SMP",207,0)
 . . W LA7ERR(LA7I)
"RTN","LA7SMP",208,0)
 . . I $D(LA7ERR(LA7I,.1)) W !,?5,LA7ERR(LA7I,.1)
"RTN","LA7SMP",209,0)
 . . S LA7ROOT="^TMP(""LA7ERR"",$J,LA7I,$P(LA7SM,""^""))"
"RTN","LA7SMP",210,0)
 . . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7ERR"!($QS(LA7ROOT,2)'=$J)!($QS(LA7ROOT,3)'=LA7I)!($QS(LA7ROOT,4)'=$P(LA7SM,"^"))  D  Q:LA7EXIT
"RTN","LA7SMP",211,0)
 . . . I ($Y+6)>IOSL D HED^LA7SMP0 Q:LA7EXIT  W LA7ERR(LA7I)," (Cont'd)"
"RTN","LA7SMP",212,0)
 . . . W !,?10,"UID: ",$QS(LA7ROOT,5),"  Test: ",$$GET1^DIQ(60,$QS(LA7ROOT,6)_",",.01)
"RTN","LA7SMP",213,0)
 . . W !!
"RTN","LA7SMP",214,0)
 ;
"RTN","LA7SMP",215,0)
 I $D(ZTQUEUED) D END^LA7SMP0
"RTN","LA7SMP",216,0)
 ;
"RTN","LA7SMP",217,0)
 Q
"RTN","LA7SMP",218,0)
 ;
"RTN","LA7SMP",219,0)
 ;
"RTN","LA7SMP",220,0)
GETSITE(LA7X,LA7Y,LA7FS,LA7TS) ; Setup variables for ordering and host sites
"RTN","LA7SMP",221,0)
 ;
"RTN","LA7SMP",222,0)
 ; Call with  LA7X = File #4 ordering site ien
"RTN","LA7SMP",223,0)
 ;            LA7Y = File #4 host site ien
"RTN","LA7SMP",224,0)
 ;           LA7FS = array to return collecting site info
"RTN","LA7SMP",225,0)
 ;           LA7TS = array to return host site info
"RTN","LA7SMP",226,0)
 ;
"RTN","LA7SMP",227,0)
 ; Get ordering site's names and station numbers
"RTN","LA7SMP",228,0)
 S LA7FS=$$GET1^DIQ(4,LA7X_",",.01)
"RTN","LA7SMP",229,0)
 I LA7FS="" S LA7FS="UNKNOWN:Entry #"_+LA7X
"RTN","LA7SMP",230,0)
 S LA7FS("NVAF")=$$NVAF^LA7VHLU2(LA7X)
"RTN","LA7SMP",231,0)
 S LA7FS(99)=$$RETFACID^LA7VHLU2(LA7X,2,1)
"RTN","LA7SMP",232,0)
 I LA7FS(99)="" S LA7FS(99)="UNK: #"_+LA7X
"RTN","LA7SMP",233,0)
 ;
"RTN","LA7SMP",234,0)
 ; Get host site's names and station numbers
"RTN","LA7SMP",235,0)
 S LA7TS=$$GET1^DIQ(4,LA7Y_",",.01)
"RTN","LA7SMP",236,0)
 I LA7TS="" S LA7TS="UNKNOWN:Entry #"_+LA7Y
"RTN","LA7SMP",237,0)
 S LA7TS("NVAF")=$$NVAF^LA7VHLU2(LA7Y)
"RTN","LA7SMP",238,0)
 S LA7TS(99)=$$RETFACID^LA7VHLU2(LA7Y,1,1)
"RTN","LA7SMP",239,0)
 I LA7TS(99)="" S LA7TS(99)="UNK: #"_+LA7Y
"RTN","LA7SMP",240,0)
 Q
"RTN","LA7SMP",241,0)
 ;
"RTN","LA7SMP",242,0)
 ;
"RTN","LA7SMP",243,0)
ASK(LA7SM) ; Ask it user wants to print manifest.
"RTN","LA7SMP",244,0)
 ;  Call with array LA7SM = ien of 62.8^.01 field of #62.8
"RTN","LA7SMP",245,0)
 ;
"RTN","LA7SMP",246,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP",247,0)
 ;
"RTN","LA7SMP",248,0)
 S DIR(0)="YO",DIR("A")="Print Shipping Manifest"
"RTN","LA7SMP",249,0)
 ;
"RTN","LA7SMP",250,0)
 S DIR("B")=""
"RTN","LA7SMP",251,0)
 I $G(LA7SM)>0 D
"RTN","LA7SMP",252,0)
 . N LA7629,X
"RTN","LA7SMP",253,0)
 . S LA7629=$P($G(^LAHM(62.8,+LA7SM,0)),"^",2)
"RTN","LA7SMP",254,0)
 . I LA7629<1 Q
"RTN","LA7SMP",255,0)
 . S X=$$GET^XPAR("USR^PKG","LA7S MANIFEST DEFLT PRINT","`"_LA7629,"Q")
"RTN","LA7SMP",256,0)
 . I X'="" S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LA7SMP",257,0)
 I DIR("B")="" S DIR("B")="NO"
"RTN","LA7SMP",258,0)
 ;
"RTN","LA7SMP",259,0)
 D ^DIR Q:$D(DIRUT)
"RTN","LA7SMP",260,0)
 I Y=1 D DEV,END^LA7SMP0
"RTN","LA7SMP",261,0)
 ;
"RTN","LA7SMP",262,0)
 Q
"RTN","LA7SMP0")
0^30^B70447945
"RTN","LA7SMP0",1,0)
LA7SMP0 ;DALOI/JMC - Shipping Manifest Print (Cont'd) ;12/03/09  11:21
"RTN","LA7SMP0",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMP0",3,0)
 ;
"RTN","LA7SMP0",4,0)
HED ; Header
"RTN","LA7SMP0",5,0)
 I $E(IOST,1,2)="C-" D TERM Q:$G(LA7EXIT)
"RTN","LA7SMP0",6,0)
 I LA7PAGE W @IOF S $X=0
"RTN","LA7SMP0",7,0)
 S LA7PAGE=LA7PAGE+1
"RTN","LA7SMP0",8,0)
 I +LA7SMST'=4,IOM<132 D WARN
"RTN","LA7SMP0",9,0)
 ;
"RTN","LA7SMP0",10,0)
 W !,?1,"Shipping Manifest: ",$P(LA7SM,"^",2)
"RTN","LA7SMP0",11,0)
 I +LA7SMST'=4,IOM'<132 D WARN
"RTN","LA7SMP0",12,0)
 ;
"RTN","LA7SMP0",13,0)
 W ?(IOM-$S(IOM>131:42,1:32))," Page: ",LA7PAGE
"RTN","LA7SMP0",14,0)
 W !,?11,"to Site: ",LA7TSITE
"RTN","LA7SMP0",15,0)
 ;
"RTN","LA7SMP0",16,0)
 W ?(IOM-$S(IOM>131:45,1:35))," Printed: ",LA7NOW
"RTN","LA7SMP0",17,0)
 W !,?9,"from Site: ",LA7FSITE
"RTN","LA7SMP0",18,0)
 ;
"RTN","LA7SMP0",19,0)
 I IOM>131 W ?(IOM-53),"Electronic Order: ",$S($P(LA7SCFG(0),"^",7):"YES",1:"NO")
"RTN","LA7SMP0",20,0)
 E  W ?(IOM-35)," E-Order: ",$S($P(LA7SCFG(0),"^",7):"YES",1:"NO")
"RTN","LA7SMP0",21,0)
 ;
"RTN","LA7SMP0",22,0)
 I +LA7SMST=4 W !,?6,"Date Shipped: ",$P(LA7SDT,"^",2)
"RTN","LA7SMP0",23,0)
 E  W !,?12,"Status: ",$P(LA7SMST,"^",2)
"RTN","LA7SMP0",24,0)
 W ?(IOM-$S(IOM>131:46,1:36))," Ship via: ",LA7SVIA
"RTN","LA7SMP0",25,0)
 ;
"RTN","LA7SMP0",26,0)
 ; Check if task has been asked to stop.
"RTN","LA7SMP0",27,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","LA7SMP0",28,0)
 . S (LA7EXIT,ZTSTOP)=1
"RTN","LA7SMP0",29,0)
 . W !!,"*** Report requested to stop by TaskMan ***"
"RTN","LA7SMP0",30,0)
 . W !,"*** Task #",$G(ZTQUEUED,"UNKNOWN")," stopped at ",$$HTE^XLFDT($H)," ***"
"RTN","LA7SMP0",31,0)
 ;
"RTN","LA7SMP0",32,0)
 ; Print shipping receipt
"RTN","LA7SMP0",33,0)
 I $P(LA7SMR,"^",2) D  Q
"RTN","LA7SMP0",34,0)
 . W !,LA7LINE
"RTN","LA7SMP0",35,0)
 . I $P(LA7SMR,"^",2)=2 W !!,"Following Required Information and/or Test Codes Missing",!!
"RTN","LA7SMP0",36,0)
 ;
"RTN","LA7SMP0",37,0)
 W !,"Shipping Condition: ",LA7SCOND(0)
"RTN","LA7SMP0",38,0)
 W ?(IOM-$S(IOM>131:47,1:37))," Container: ",LA7SCONT(0)
"RTN","LA7SMP0",39,0)
 ;
"RTN","LA7SMP0",40,0)
 I $P(LA7SCFG(0),"^",13)'="" W !,?4,"Account Number: ",$P(LA7SCFG(0),"^",13)
"RTN","LA7SMP0",41,0)
 ;
"RTN","LA7SMP0",42,0)
 I LA7SBC D SBC1
"RTN","LA7SMP0",43,0)
 ;
"RTN","LA7SMP0",44,0)
 W !!,"Item",?11,"Patient Name",?41,"Patient ID"
"RTN","LA7SMP0",45,0)
 ;
"RTN","LA7SMP0",46,0)
 I IOM>131 D
"RTN","LA7SMP0",47,0)
 . W ?64,"Accession",?86,"Requested By"
"RTN","LA7SMP0",48,0)
 . W !,?11,"Date of Birth",?30,"Sex",?41,"Patient ICN",?64,"Specimen UID",?86,"Collect Date/Time"
"RTN","LA7SMP0",49,0)
 ;
"RTN","LA7SMP0",50,0)
 I IOM'>131 D
"RTN","LA7SMP0",51,0)
 . W ?60,"Accession"
"RTN","LA7SMP0",52,0)
 . W !,?11,"Date of Birth",?41,"Patient ICN",?60,"Specimen UID"
"RTN","LA7SMP0",53,0)
 . W !,?11,"Requested By",?41,"Sex",?60,"Collect Date/Time"
"RTN","LA7SMP0",54,0)
 ;
"RTN","LA7SMP0",55,0)
 ; If COTS system then include site id and patient's DFN.
"RTN","LA7SMP0",56,0)
 I $E(LA7TSITE(99),1,5)="200LR" W !,?11,"Site ID:DFN:CRC16"
"RTN","LA7SMP0",57,0)
 ;
"RTN","LA7SMP0",58,0)
 W !,LA7LINE
"RTN","LA7SMP0",59,0)
 Q
"RTN","LA7SMP0",60,0)
 ;
"RTN","LA7SMP0",61,0)
 ;
"RTN","LA7SMP0",62,0)
SH ; Subheader
"RTN","LA7SMP0",63,0)
 W !,LA7ITMID,?11,PNM
"RTN","LA7SMP0",64,0)
 W ?41,$S(LRDPF=2:SSN,1:SSN(2))
"RTN","LA7SMP0",65,0)
 ;
"RTN","LA7SMP0",66,0)
 I IOM'>131 W ?60,LA7ACC
"RTN","LA7SMP0",67,0)
 ;
"RTN","LA7SMP0",68,0)
 I IOM>131 W ?64,LA7ACC,?86,$P(LA7PROV,"^",2)
"RTN","LA7SMP0",69,0)
 ;
"RTN","LA7SMP0",70,0)
 W !
"RTN","LA7SMP0",71,0)
 I LA7DC W "Cont'd"
"RTN","LA7SMP0",72,0)
 ;
"RTN","LA7SMP0",73,0)
 W ?11,$$FMTE^XLFDT(DOB)
"RTN","LA7SMP0",74,0)
 ;
"RTN","LA7SMP0",75,0)
 I IOM'>131 D
"RTN","LA7SMP0",76,0)
 . W ?41,LA7ICN,?60,LA7UID
"RTN","LA7SMP0",77,0)
 . W !,?11,$E($P(LA7PROV,"^",2),1,28)
"RTN","LA7SMP0",78,0)
 . W ?41,$S(SEX="M":"Male",SEX="F":"Female",SEX="":"Unknown",1:SEX)
"RTN","LA7SMP0",79,0)
 . W ?60,$S(LA7CDT:$$FMTE^XLFDT(LA7CDT,"1M"),1:LA7CDT)
"RTN","LA7SMP0",80,0)
 ;
"RTN","LA7SMP0",81,0)
 I IOM>131 D
"RTN","LA7SMP0",82,0)
 . W ?30,$S(SEX="M":"Male",SEX="F":"Female",SEX="":"Unknown",1:SEX)
"RTN","LA7SMP0",83,0)
 . W ?41,LA7ICN,?64,LA7UID,?86,$S(LA7CDT:$$FMTE^XLFDT(LA7CDT,"1M"),1:LA7CDT)
"RTN","LA7SMP0",84,0)
 ;
"RTN","LA7SMP0",85,0)
 ; If COTS system and file #2 patient then include site id and patient's DFN with a CRC.
"RTN","LA7SMP0",86,0)
 I $E(LA7TSITE(99),1,5)="200LR",LRDPF=2 D
"RTN","LA7SMP0",87,0)
 . N LA7X
"RTN","LA7SMP0",88,0)
 . S LA7X=$$CRC16^XLFCRC(LA7FSITE(99)_":"_DFN_":",0)
"RTN","LA7SMP0",89,0)
 . W !,?11,LA7FSITE(99)_":"_DFN_":"_LA7X
"RTN","LA7SMP0",90,0)
 ;
"RTN","LA7SMP0",91,0)
 W !
"RTN","LA7SMP0",92,0)
 ;
"RTN","LA7SMP0",93,0)
 I +LA7SMST'=4 D
"RTN","LA7SMP0",94,0)
 . D PROV(+LA7PROV)
"RTN","LA7SMP0",95,0)
 . I $P($G(LA762801(0)),"^",6) D
"RTN","LA7SMP0",96,0)
 . . S X=$$GET1^DIQ(62.91,$P(LA762801(0),"^",6),.01)
"RTN","LA7SMP0",97,0)
 . . W !,?11,"Specimen Container: ",X
"RTN","LA7SMP0",98,0)
 ;
"RTN","LA7SMP0",99,0)
 ; Print collection sample if micro
"RTN","LA7SMP0",100,0)
 I $G(LA7AA),$P($G(^LRO(68,LA7AA,0)),"^",2)="MI" W !,?11,"Collection sample: ",$P(LA762(0),"^")
"RTN","LA7SMP0",101,0)
 ;
"RTN","LA7SMP0",102,0)
 S LA7X=$G(^TMP("LA7SMRI",$J,LA7SCOND,LA7SCONT,LA7UID,1))
"RTN","LA7SMP0",103,0)
 I $P(LA7X,"^") D
"RTN","LA7SMP0",104,0)
 . W !,?11,"Patient Height: ",$P(LA7X,"^",2)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",3)_",",.01)
"RTN","LA7SMP0",105,0)
 I $P(LA7X,"^",4) D
"RTN","LA7SMP0",106,0)
 . I $P(LA7X,"^") W ?40
"RTN","LA7SMP0",107,0)
 . E  W !,?11
"RTN","LA7SMP0",108,0)
 . W "Patient Weight: ",$P(LA7X,"^",5)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",6)_",",.01)
"RTN","LA7SMP0",109,0)
 ;
"RTN","LA7SMP0",110,0)
 S LA7X=$G(^TMP("LA7SMRI",$J,LA7SCOND,LA7SCONT,LA7UID,2))
"RTN","LA7SMP0",111,0)
 I $P(LA7X,"^") D
"RTN","LA7SMP0",112,0)
 . W !,?11,"Collection Volume: ",$P(LA7X,"^",2)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",3)_",",.01)
"RTN","LA7SMP0",113,0)
 I $P(LA7X,"^",8) D
"RTN","LA7SMP0",114,0)
 . I $P(LA7X,"^") W ?40
"RTN","LA7SMP0",115,0)
 . E  W !,?11
"RTN","LA7SMP0",116,0)
 . W "Collection Weight: ",$P(LA7X,"^",9)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",10)_",",.01)
"RTN","LA7SMP0",117,0)
 I $P(LA7X,"^",4) D
"RTN","LA7SMP0",118,0)
 . W !,?11,"Collection End Date/Time: ",$$FMTE^XLFDT($P(LA7X,"^",5),"1M")
"RTN","LA7SMP0",119,0)
 . W "  (Duration: ",$P(LA7X,"^",6)," ",$$GET1^DIQ(64.061,+$P(LA7X,"^",7)_",",.01),")"
"RTN","LA7SMP0",120,0)
 ;
"RTN","LA7SMP0",121,0)
 I LA7SBC D SBC2
"RTN","LA7SMP0",122,0)
 S LA7DC=0
"RTN","LA7SMP0",123,0)
 Q
"RTN","LA7SMP0",124,0)
 ;
"RTN","LA7SMP0",125,0)
 ;
"RTN","LA7SMP0",126,0)
WARN ; Write warning for work copy.
"RTN","LA7SMP0",127,0)
 W ?$S(IOM<131:5,1:36)," *** DO NOT USE FOR SHIPPING DOCUMENT - WORK COPY ONLY *** "
"RTN","LA7SMP0",128,0)
 Q
"RTN","LA7SMP0",129,0)
 ;
"RTN","LA7SMP0",130,0)
 ;
"RTN","LA7SMP0",131,0)
SBC1 ; Site bar codes
"RTN","LA7SMP0",132,0)
 ;
"RTN","LA7SMP0",133,0)
 ; Print "SM" bar code
"RTN","LA7SMP0",134,0)
 ; Calculate/append LPC to barcode.
"RTN","LA7SMP0",135,0)
 I $G(LA7SM("BARCODE"))="" D
"RTN","LA7SMP0",136,0)
 . N LA7X,X,Y
"RTN","LA7SMP0",137,0)
 . I LA7SBC=1 D
"RTN","LA7SMP0",138,0)
 . . S LA7X="STX^SITE^"_LA7FSITE(99)_"^"_$P($G(LA7SDT),"^")_"^"_$P(LA7SM,"^",2)_"^ETX"
"RTN","LA7SMP0",139,0)
 . I LA7SBC=2 D
"RTN","LA7SMP0",140,0)
 . .S LA7X="SITE^"_LA7FSITE(99)_"^"_$P($G(LA7SDT),"^")_"^"_$P(LA7SM,"^",2)_"^"
"RTN","LA7SMP0",141,0)
 . S X=LA7X X ^%ZOSF("LPC") S LA7SM("LPC")=Y,LA7SM("BARCODE")=LA7X_Y
"RTN","LA7SMP0",142,0)
 ;
"RTN","LA7SMP0",143,0)
 W !,?18,"SM: ",$$BC128^LA7SBC(LA7SM("BARCODE"),1,60,"","",2),!
"RTN","LA7SMP0",144,0)
 ;
"RTN","LA7SMP0",145,0)
 Q
"RTN","LA7SMP0",146,0)
 ;
"RTN","LA7SMP0",147,0)
 ;
"RTN","LA7SMP0",148,0)
SBC2 ; Patient bar codes
"RTN","LA7SMP0",149,0)
 ;
"RTN","LA7SMP0",150,0)
 N LA7SDATA
"RTN","LA7SMP0",151,0)
 ;
"RTN","LA7SMP0",152,0)
 ; Print "PD" bar code
"RTN","LA7SMP0",153,0)
 I LA7SBC=1 D
"RTN","LA7SMP0",154,0)
 . S LA7SDATA="STX^PD^"_SSN(2)_"^"_LA7FSITE(99)_"^"_LA7UID_"^"_$G(SEX)_"^"_LA7CDT_"^ETX"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",155,0)
 ;
"RTN","LA7SMP0",156,0)
 I LA7SBC=2 D
"RTN","LA7SMP0",157,0)
 . S LA7SDATA="PD^"_SSN(2)_"^"_LA7FSITE(99)_"^"_LA7UID_"^"_LA7CDT_"^"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",158,0)
 ;
"RTN","LA7SMP0",159,0)
 W !!,?18,"PD: ",$$BC128^LA7SBC(LA7SDATA,1,60,"","",2),!
"RTN","LA7SMP0",160,0)
 W !,?11,$E(LA7LINE,1,69)
"RTN","LA7SMP0",161,0)
 ;
"RTN","LA7SMP0",162,0)
 ; Print "PD1" bar code
"RTN","LA7SMP0",163,0)
 I LA7SBC=1 D
"RTN","LA7SMP0",164,0)
 . S LA7SDATA="STX^PD1^"_SSN(2)_"^"_PNM_"^"_DOB_"^ETX"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",165,0)
 I LA7SBC=2 D
"RTN","LA7SMP0",166,0)
 . S LA7SDATA="PD1^"_SSN(2)_"^"_PNM_"^"_DOB_"^"_SEX_"^"_$G(LA7SM("LPC"))
"RTN","LA7SMP0",167,0)
 ;
"RTN","LA7SMP0",168,0)
 W !,?$S(IOM<131:18,1:50),"PD1: ",$$BC128^LA7SBC(LA7SDATA,1,60,"","",2),!
"RTN","LA7SMP0",169,0)
 ;
"RTN","LA7SMP0",170,0)
 Q
"RTN","LA7SMP0",171,0)
 ;
"RTN","LA7SMP0",172,0)
 ;
"RTN","LA7SMP0",173,0)
CMT ; Print comments on manifest
"RTN","LA7SMP0",174,0)
 ;
"RTN","LA7SMP0",175,0)
 N LA7I
"RTN","LA7SMP0",176,0)
 F LA7I=1:1:LA7CMT D  Q:LA7EXIT
"RTN","LA7SMP0",177,0)
 . I ($Y+4)>IOSL D  Q:LA7EXIT
"RTN","LA7SMP0",178,0)
 . . I LA7PAGE W ! D WARN
"RTN","LA7SMP0",179,0)
 . . D HED
"RTN","LA7SMP0",180,0)
 . W !,?11,LA7CMT(LA7I,0)
"RTN","LA7SMP0",181,0)
 Q
"RTN","LA7SMP0",182,0)
 ;
"RTN","LA7SMP0",183,0)
 ;
"RTN","LA7SMP0",184,0)
PTID ; Get/setup patient identifier information
"RTN","LA7SMP0",185,0)
 ;
"RTN","LA7SMP0",186,0)
 S DFN=+$P(^LR(LRDFN,0),U,3),LRDPF=+$P(^(0),U,2) D PT^LRX
"RTN","LA7SMP0",187,0)
 ;
"RTN","LA7SMP0",188,0)
 ; Integration control number (ICN) from MPI
"RTN","LA7SMP0",189,0)
 S LA7ICN=""
"RTN","LA7SMP0",190,0)
 I LRDPF=2 D
"RTN","LA7SMP0",191,0)
 . S LA7ICN=$$GETICN^MPIF001(DFN)
"RTN","LA7SMP0",192,0)
 . I LA7ICN<0 S LA7ICN=""
"RTN","LA7SMP0",193,0)
 ;
"RTN","LA7SMP0",194,0)
 Q
"RTN","LA7SMP0",195,0)
 ;
"RTN","LA7SMP0",196,0)
 ;
"RTN","LA7SMP0",197,0)
PROV(LA7OP) ; Print ordering provider contact on working copy
"RTN","LA7SMP0",198,0)
 ; Call with LA7OP = provider's file #200 ien
"RTN","LA7SMP0",199,0)
 ;
"RTN","LA7SMP0",200,0)
 N LRERR,X,Y
"RTN","LA7SMP0",201,0)
 I LA7OP D GETS^DIQ(200,LA7OP_",",".132;.137;.138","E","LA7OP(LA7OP)","LRERR")
"RTN","LA7SMP0",202,0)
 I '$D(LA7OP(LA7OP)) Q
"RTN","LA7SMP0",203,0)
 S X="Requestor's "
"RTN","LA7SMP0",204,0)
 I LA7OP(LA7OP,200,LA7OP_",",.132,"E")'="" D
"RTN","LA7SMP0",205,0)
 . W !,?11,X,"Phone: ",LA7OP(LA7OP,200,LA7OP_",",.132,"E")
"RTN","LA7SMP0",206,0)
 . S X=""
"RTN","LA7SMP0",207,0)
 I LA7OP(LA7OP,200,LA7OP_",",.137,"E")'="" D
"RTN","LA7SMP0",208,0)
 . S Y=0
"RTN","LA7SMP0",209,0)
 . I X="" S Y=$L(LA7OP(LA7OP,200,LA7OP_",",.137,"E"))+$X+16
"RTN","LA7SMP0",210,0)
 . I Y>IOM!(X'="") W !,?11
"RTN","LA7SMP0",211,0)
 . E  S X="  "_X
"RTN","LA7SMP0",212,0)
 . W X,"Voice Pager: ",LA7OP(LA7OP,200,LA7OP_",",.137,"E")
"RTN","LA7SMP0",213,0)
 . S X=""
"RTN","LA7SMP0",214,0)
 I LA7OP(LA7OP,200,LA7OP_",",.138,"E")'="" D
"RTN","LA7SMP0",215,0)
 . S Y=0
"RTN","LA7SMP0",216,0)
 . I X="" S Y=$L(LA7OP(LA7OP,200,LA7OP_",",.138,"E"))+$X+18
"RTN","LA7SMP0",217,0)
 . I Y>IOM!(X'="") W !,?11
"RTN","LA7SMP0",218,0)
 . E  S X="  "_X
"RTN","LA7SMP0",219,0)
 . W X,"Digital Pager: ",LA7OP(LA7OP,200,LA7OP_",",.138,"E")
"RTN","LA7SMP0",220,0)
 . S X=""
"RTN","LA7SMP0",221,0)
 ;
"RTN","LA7SMP0",222,0)
 I X="" W !
"RTN","LA7SMP0",223,0)
 Q
"RTN","LA7SMP0",224,0)
 ;
"RTN","LA7SMP0",225,0)
 ;
"RTN","LA7SMP0",226,0)
TERM ;
"RTN","LA7SMP0",227,0)
 I 'LA7PAGE W @IOF S $X=0 Q
"RTN","LA7SMP0",228,0)
 ;
"RTN","LA7SMP0",229,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMP0",230,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT) LA7EXIT=1
"RTN","LA7SMP0",231,0)
 Q
"RTN","LA7SMP0",232,0)
 ;
"RTN","LA7SMP0",233,0)
 ;
"RTN","LA7SMP0",234,0)
INIT ; Initialize variables
"RTN","LA7SMP0",235,0)
 ;
"RTN","LA7SMP0",236,0)
 S DT=$$DT^XLFDT
"RTN","LA7SMP0",237,0)
 S LA7QUIT=0
"RTN","LA7SMP0",238,0)
 ;
"RTN","LA7SMP0",239,0)
 ; Select shipping configuration
"RTN","LA7SMP0",240,0)
 S LA7SCFG=$$SSCFG^LA7SUTL(0)
"RTN","LA7SMP0",241,0)
 I LA7SCFG<1 S LA7QUIT=1 Q
"RTN","LA7SMP0",242,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,+LA7SCFG,0))
"RTN","LA7SMP0",243,0)
 Q
"RTN","LA7SMP0",244,0)
 ;
"RTN","LA7SMP0",245,0)
 ;
"RTN","LA7SMP0",246,0)
ITEM ; Setup item identifier to print on manifest.
"RTN","LA7SMP0",247,0)
 N LA7ITEM,LA7PC,LA7PREFX,LA7SC,LA7ROOT,LA7UID
"RTN","LA7SMP0",248,0)
 K ^TMP("LA7ITEM",$J)
"RTN","LA7SMP0",249,0)
 S LA7ROOT="^TMP(""LA7SM"",$J)",(LA7ITEM,LA7PC,LA7PREFX)=0,(LA7SC,LA7UID)=""
"RTN","LA7SMP0",250,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7SM"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7SMP0",251,0)
 . I LA7SC'=$QS(LA7ROOT,3) S LA7PREFX=LA7PREFX+1,LA7ITEM=0,LA7SC=$QS(LA7ROOT,3),LA7PC=$QS(LA7ROOT,4),LA7UID=""
"RTN","LA7SMP0",252,0)
 . I LA7PC'=$QS(LA7ROOT,4) S LA7PREFX=LA7PREFX+1,LA7ITEM=0,LA7PC=$QS(LA7ROOT,4),LA7UID=""
"RTN","LA7SMP0",253,0)
 . I LA7UID'=$QS(LA7ROOT,5) S LA7UID=$QS(LA7ROOT,5),LA7ITEM=LA7ITEM+1
"RTN","LA7SMP0",254,0)
 . S ^TMP("LA7ITEM",$J,LA7UID,$QS(LA7ROOT,6))=LA7PREFX_"-"_LA7ITEM
"RTN","LA7SMP0",255,0)
 Q
"RTN","LA7SMP0",256,0)
 ;
"RTN","LA7SMP0",257,0)
 ;
"RTN","LA7SMP0",258,0)
END ;
"RTN","LA7SMP0",259,0)
 I $E(IOST,1,2)="C-",'$G(LA7EXIT) D TERM
"RTN","LA7SMP0",260,0)
 I $E(IOST,1,2)="P-" W @IOF S IONOFF=""
"RTN","LA7SMP0",261,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","LA7SMP0",262,0)
 ;
"RTN","LA7SMP0",263,0)
KILL ; Cleanup variables
"RTN","LA7SMP0",264,0)
 K %,%DT,%ZIS,A,IO("Q"),AGE,DA,DFN,DIC,DIB,DIR,DIRUT,DTOUT,DUOUT,I,J,K,LAST,PNM,SEX,SSN,X,Y,Z
"RTN","LA7SMP0",265,0)
 K LA7AA,LA7ACC,LA7AD,LA7AN,LA7CDT,LA7CHK,LA7CMT,LA7DC,LA7END,LA7ERR,LA7EV,LA7EXIT,LA7FSITE,LA7I,LA7ICN,LA7LINE,LA7NLT,LA7NLTN,LA7NOW,LA7PAGE,LA7PROV
"RTN","LA7SMP0",266,0)
 K LA7QUIT,LA7ROOT,LA7SBC,LA7SCFG,LA7SCOND,LA7SCONT,LA7SDT,LA7SKIP,LA7SM,LA7SMR,LA7SMST,LA7SPEC,LA7SVIA,LA7TSITE,LA7UID,LA7X
"RTN","LA7SMP0",267,0)
 K LA760,LA762,LA762801
"RTN","LA7SMP0",268,0)
 K LRDFN,LRDPF,LRPRAC
"RTN","LA7SMP0",269,0)
 K ^TMP("LA7ERR",$J),^TMP("LA7ITEM",$J),^TMP("LA7SM",$J),^TMP("LA7SMRI",$J)
"RTN","LA7SMP0",270,0)
 D KVAR^LRX
"RTN","LA7SMP0",271,0)
 ;
"RTN","LA7SMP0",272,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SMP0",273,0)
 Q
"RTN","LA7SMPXL")
0^45^B22838207
"RTN","LA7SMPXL",1,0)
LA7SMPXL ;DALOI/JMC - PRINT SHIPPING MANIFEST FROM PENDING ORDERS FILE ;12/02/09  13:35
"RTN","LA7SMPXL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,42,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMPXL",3,0)
 ;
"RTN","LA7SMPXL",4,0)
 ;
"RTN","LA7SMPXL",5,0)
EN ; Entry point from menu option
"RTN","LA7SMPXL",6,0)
 ;
"RTN","LA7SMPXL",7,0)
 N D,DIC,LA7SM,X,Y,%ZIS
"RTN","LA7SMPXL",8,0)
 ;
"RTN","LA7SMPXL",9,0)
 S DIC=69.6,DIC(0)="AQEZNM",DIC("A")="Select Shipping Manifest: ",D="D^E^AE"
"RTN","LA7SMPXL",10,0)
 S DIC("S")="I $P(^(0),U,14)'="""""
"RTN","LA7SMPXL",11,0)
 D MIX^DIC1 K DIC("S")
"RTN","LA7SMPXL",12,0)
 I Y<1 D END Q
"RTN","LA7SMPXL",13,0)
 ;
"RTN","LA7SMPXL",14,0)
 S LA7SMAN=$P(Y(0),U,14)
"RTN","LA7SMPXL",15,0)
 ;
"RTN","LA7SMPXL",16,0)
 S %ZIS="MQ"
"RTN","LA7SMPXL",17,0)
 D ^%ZIS
"RTN","LA7SMPXL",18,0)
 I POP D  Q
"RTN","LA7SMPXL",19,0)
 . D HOME^%ZIS
"RTN","LA7SMPXL",20,0)
 . D END
"RTN","LA7SMPXL",21,0)
 ;
"RTN","LA7SMPXL",22,0)
 I $D(IO("Q")) D  Q
"RTN","LA7SMPXL",23,0)
 . S ZTRTN="DQ^LA7SMPXL",ZTDESC="Shipping Manifest Reprint",ZTSAVE("LA7*")=""
"RTN","LA7SMPXL",24,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","LA7SMPXL",25,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LA7SMPXL",26,0)
 . D END
"RTN","LA7SMPXL",27,0)
 ;
"RTN","LA7SMPXL",28,0)
DQ ; Tasked entry point
"RTN","LA7SMPXL",29,0)
 ;
"RTN","LA7SMPXL",30,0)
 U IO
"RTN","LA7SMPXL",31,0)
 ;
"RTN","LA7SMPXL",32,0)
 S DT=$$DT^XLFDT
"RTN","LA7SMPXL",33,0)
 S LRDPF=69.6,LA7NOW=$$HTE^XLFDT($H,"1M")
"RTN","LA7SMPXL",34,0)
 S (LA7DC,LA7EXIT,LA7PAGE,LA7SCOND,LA7SCONT)=0
"RTN","LA7SMPXL",35,0)
 S LA7SCFG=0,$P(LA7SCFG(0),"^",7)="-1"
"RTN","LA7SMPXL",36,0)
 S LA7LINE="",$P(LA7LINE,"-",IOM)="",LA7SVIA="Electronic manifest"
"RTN","LA7SMPXL",37,0)
 ;
"RTN","LA7SMPXL",38,0)
 ; Check manifest for missing info.
"RTN","LA7SMPXL",39,0)
 S LA7CHK=0
"RTN","LA7SMPXL",40,0)
 ; Flag to print receipt.
"RTN","LA7SMPXL",41,0)
 S LA7SMR="0^0"
"RTN","LA7SMPXL",42,0)
 ; Set barcode flag
"RTN","LA7SMPXL",43,0)
 S LA7SBC=0
"RTN","LA7SMPXL",44,0)
 I IOST["P-" S LA7SBC=2
"RTN","LA7SMPXL",45,0)
 ; Shipping status flag
"RTN","LA7SMPXL",46,0)
 S LA7SMST="0^Electronic Manifest"
"RTN","LA7SMPXL",47,0)
 ;
"RTN","LA7SMPXL",48,0)
 S (LA7696,LA7QUIT)=0,LA7UID=""
"RTN","LA7SMPXL",49,0)
 S LA7SM="^"_LA7SMAN
"RTN","LA7SMPXL",50,0)
 S LA7ROOT="^LRO(69.6,""AD"",LA7SMAN)"
"RTN","LA7SMPXL",51,0)
 F LA7ITEM=1:1 S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  D  Q:LA7EXIT
"RTN","LA7SMPXL",52,0)
 . I $QS(LA7ROOT,3)'=LA7SMAN S LA7EXIT=1 Q
"RTN","LA7SMPXL",53,0)
 . S LA7UID=$QS(LA7ROOT,4),LA7696=$QS(LA7ROOT,5),LA76964=0
"RTN","LA7SMPXL",54,0)
 . F  S LA76964=$O(^LRO(69.6,LA7696,2,LA76964)) Q:LA76964<1  D
"RTN","LA7SMPXL",55,0)
 . . S LA7ITMID=$P($G(^LRO(69.6,LA7696,2,LA76964,700.19)),"^",8)
"RTN","LA7SMPXL",56,0)
 . . I LA7ITMID="" S LA7ITMID=LA7ITEM
"RTN","LA7SMPXL",57,0)
 . . S ^TMP("LA7SM",$J,LA7ITMID,0,LA7UID,LA7696)=""
"RTN","LA7SMPXL",58,0)
 ;
"RTN","LA7SMPXL",59,0)
 S LA7ROOT="^TMP(""LA7SM"",$J)",LA7EXIT=0,LA7UID=""
"RTN","LA7SMPXL",60,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7SM"!($QS(LA7ROOT,2)'=$J)  D  Q:LA7EXIT
"RTN","LA7SMPXL",61,0)
 . I LA7UID'="",LA7UID'=$QS(LA7ROOT,5) W !,LA7LINE
"RTN","LA7SMPXL",62,0)
 . S LA7ITMID=$QS(LA7ROOT,3),LA7696=$QS(LA7ROOT,6)
"RTN","LA7SMPXL",63,0)
 . D SETUP
"RTN","LA7SMPXL",64,0)
 . I ($Y+12)>IOSL!('LA7PAGE) D  Q:LA7EXIT
"RTN","LA7SMPXL",65,0)
 . . I LA7PAGE W ! D WARN^LA7SMP0
"RTN","LA7SMPXL",66,0)
 . . D HED^LA7SMP0
"RTN","LA7SMPXL",67,0)
 . D SH^LA7SMP0
"RTN","LA7SMPXL",68,0)
 . I $D(LA7CMT) D CMT^LA7SMP0
"RTN","LA7SMPXL",69,0)
 . W !,?18,$E(LA7LINE,1,31)
"RTN","LA7SMPXL",70,0)
 . S LA76964=0
"RTN","LA7SMPXL",71,0)
 . F  S LA76964=$O(^LRO(69.6,LA7696,2,LA76964)) Q:LA76964<1  D
"RTN","LA7SMPXL",72,0)
 . . S X=$P($G(^LRO(69.6,LA7696,2,LA76964,700.19)),"^",8)
"RTN","LA7SMPXL",73,0)
 . . I X'="",X'=LA7ITMID Q
"RTN","LA7SMPXL",74,0)
 . . S LA76964(0)=$G(^LRO(69.6,LA7696,2,LA76964,0))
"RTN","LA7SMPXL",75,0)
 . . W !?18,$P(LA76964(0),"^",3),?50,$P(LA7SPEC(0),"^")
"RTN","LA7SMPXL",76,0)
 . . W !,?20,"VA NLT code [Name]: "
"RTN","LA7SMPXL",77,0)
 . . S LA7NLT=$P(LA76964(0),"^",2)
"RTN","LA7SMPXL",78,0)
 . . W $S(LA7NLT'="":LA7NLT,1:"*** None specified ***")
"RTN","LA7SMPXL",79,0)
 . . S LA7NLTN=$P(LA76964(0),"^")
"RTN","LA7SMPXL",80,0)
 . . I LA7NLTN'="" W:($X+$L($P(LA76964(0),"^",2))+3)>IOM !,?39 W " [",LA7NLTN,"]"
"RTN","LA7SMPXL",81,0)
 . . I $P(LA76964(0),"^",9)'="" W !,?20,"Host site UID: ",$P(LA76964(0),"^",9)
"RTN","LA7SMPXL",82,0)
 ;
"RTN","LA7SMPXL",83,0)
 D END
"RTN","LA7SMPXL",84,0)
 Q
"RTN","LA7SMPXL",85,0)
 ;
"RTN","LA7SMPXL",86,0)
 ;
"RTN","LA7SMPXL",87,0)
SETUP ; Setup variables for this order
"RTN","LA7SMPXL",88,0)
 ;
"RTN","LA7SMPXL",89,0)
 N I,X
"RTN","LA7SMPXL",90,0)
 ;
"RTN","LA7SMPXL",91,0)
 F I=0,1 S LA7696(I)=$G(^LRO(69.6,LA7696,I))
"RTN","LA7SMPXL",92,0)
 ;
"RTN","LA7SMPXL",93,0)
 S PNM=$P(LA7696(0),U),SEX=$P(LA7696(0),U,2),DOB=$P(LA7696(0),U,3),LA7ICN=""
"RTN","LA7SMPXL",94,0)
 S (SSN,SSN(2))=$P(LA7696(0),U,9)
"RTN","LA7SMPXL",95,0)
 ;
"RTN","LA7SMPXL",96,0)
 S LA7ACC=$P(LA7696(0),"^",12)
"RTN","LA7SMPXL",97,0)
 S LA7UID=$P(LA7696(0),"^",6)
"RTN","LA7SMPXL",98,0)
 S LA7SPEC=+$P(LA7696(0),"^",7),LA7SPEC(0)=$G(^LAB(61,LA7SPEC,0))
"RTN","LA7SMPXL",99,0)
 S LA7CDT=$P(LA7696(1),U,2)
"RTN","LA7SMPXL",100,0)
 S LA7SDT=$P(LA7696(1),U,5)
"RTN","LA7SMPXL",101,0)
 S LA7SCOND(0)="None Specified"
"RTN","LA7SMPXL",102,0)
 S LA7SCONT(0)="None Specified"
"RTN","LA7SMPXL",103,0)
 ;
"RTN","LA7SMPXL",104,0)
 ; Get collecting site and host site info
"RTN","LA7SMPXL",105,0)
 D GETSITE^LA7SMP($P(LA7696(0),U,5),DUZ(2),.LA7FSITE,.LA7TSITE)
"RTN","LA7SMPXL",106,0)
 ;
"RTN","LA7SMPXL",107,0)
 ; Ordering provider
"RTN","LA7SMPXL",108,0)
 S I=0,LA7PROV=""
"RTN","LA7SMPXL",109,0)
 F  S I=$O(^LRO(69.6,LA7696,2,I)) Q:'I  D  Q:LA7PROV'=""
"RTN","LA7SMPXL",110,0)
 . S X=$P($G(^LRO(69.6,LA7696,2,I,1)),"^")
"RTN","LA7SMPXL",111,0)
 . I X'="" S $P(LA7PROV,"^",2)=$P(X,"[")
"RTN","LA7SMPXL",112,0)
 I LA7PROV="" S LA7PROV="^REF:"_LA7FSITE(99)
"RTN","LA7SMPXL",113,0)
 ;
"RTN","LA7SMPXL",114,0)
 ; Get shipping date
"RTN","LA7SMPXL",115,0)
 S LA7SDT=$$FMTE^XLFDT($P(LA7696(1),"^",3),"")
"RTN","LA7SMPXL",116,0)
 ;
"RTN","LA7SMPXL",117,0)
 ; Check for comments
"RTN","LA7SMPXL",118,0)
 K LA7CMT
"RTN","LA7SMPXL",119,0)
 I $D(^LRO(69.6,LA7696,99,0)) D
"RTN","LA7SMPXL",120,0)
 . N DIWF,DIWL,DIWR,LA7ERR,X
"RTN","LA7SMPXL",121,0)
 . S LA7CMT=$$GET1^DIQ(69.6,LA7696_",",99,"","LA7CMT","LA7ERR(2)")
"RTN","LA7SMPXL",122,0)
 . K ^UTILITY($J,"W")
"RTN","LA7SMPXL",123,0)
 . S DIWL=1,DIWR=IOM-13,DIWF=""
"RTN","LA7SMPXL",124,0)
 . I $$GET1^DID(+$$GET1^DID(69.6,99,"","SPECIFIER","LA7ERR(1)"),.01,"","SPECIFIER","LA7ERR(3)")["L" S DIWF="N"
"RTN","LA7SMPXL",125,0)
 . S LA7I=$O(LA7CMT(0)),LA7CMT(LA7I)="COMMENTS: "_LA7CMT(LA7I),LA7I=0
"RTN","LA7SMPXL",126,0)
 . F  S LA7I=$O(LA7CMT(LA7I)) Q:'LA7I  S X=LA7CMT(LA7I) D ^DIWP
"RTN","LA7SMPXL",127,0)
 . K LA7CMT
"RTN","LA7SMPXL",128,0)
 . M LA7CMT=^UTILITY($J,"W",DIWL)
"RTN","LA7SMPXL",129,0)
 . K ^UTILITY($J,"W")
"RTN","LA7SMPXL",130,0)
 ;
"RTN","LA7SMPXL",131,0)
 ; Add local (host) status info
"RTN","LA7SMPXL",132,0)
 S LA7CMT=$G(LA7CMT)+1
"RTN","LA7SMPXL",133,0)
 I LA7CMT>1 S LA7CMT(LA7CMT,0)=" ",LA7CMT=LA7CMT+1
"RTN","LA7SMPXL",134,0)
 S LA7CMT(LA7CMT,0)="Host test status: "_$$GET1^DIQ(69.6,LA7696_",",6,"",,"LA7ERR(4)")
"RTN","LA7SMPXL",135,0)
 Q
"RTN","LA7SMPXL",136,0)
 ;
"RTN","LA7SMPXL",137,0)
 ;
"RTN","LA7SMPXL",138,0)
END ;
"RTN","LA7SMPXL",139,0)
 S LA7EXIT=1
"RTN","LA7SMPXL",140,0)
 D END^LA7SMP0
"RTN","LA7SMPXL",141,0)
 K LA7696,LA76964,LA7CMT,LA7ITEM,LA7ITMID,LA7SMAN
"RTN","LA7SMPXL",142,0)
 ;
"RTN","LA7SMPXL",143,0)
 Q
"RTN","LA7SMU")
0^81^B44618035
"RTN","LA7SMU",1,0)
LA7SMU ;DALOI/JMC - Shipping Manifest Utility ;11/16/11  15:10
"RTN","LA7SMU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMU",3,0)
 ;
"RTN","LA7SMU",4,0)
 Q
"RTN","LA7SMU",5,0)
 ;
"RTN","LA7SMU",6,0)
CHKSM(X) ; Shipping manifest status check
"RTN","LA7SMU",7,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",8,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",9,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",10,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",11,0)
 ;
"RTN","LA7SMU",12,0)
 ; No value passed
"RTN","LA7SMU",13,0)
 I '$G(X) Q "-1^No configuration passed"
"RTN","LA7SMU",14,0)
 ; Bad pointer passed
"RTN","LA7SMU",15,0)
 I '$D(^LAHM(62.9,X,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",16,0)
 ; Get ien of active shipping manifest.
"RTN","LA7SMU",17,0)
 S Y=+$O(^LAHM(62.8,"AC1",X,0))
"RTN","LA7SMU",18,0)
 I Y S Y=Y_"^"_$P(^LAHM(62.8,Y,0),"^")
"RTN","LA7SMU",19,0)
 Q Y
"RTN","LA7SMU",20,0)
 ;
"RTN","LA7SMU",21,0)
 ;
"RTN","LA7SMU",22,0)
CSM(LA7SCFG) ; Creates a new shipping manifest
"RTN","LA7SMU",23,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",24,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",25,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",26,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",27,0)
 ;
"RTN","LA7SMU",28,0)
 N DATA,FDA,I,LA7CF,LA7DIE,LA7DT,LA7IEN,LA7SM,X,X4
"RTN","LA7SMU",29,0)
 ;
"RTN","LA7SMU",30,0)
 ; No value passed
"RTN","LA7SMU",31,0)
 I '$G(LA7SCFG) Q "-1^No configuration passed"
"RTN","LA7SMU",32,0)
 ;
"RTN","LA7SMU",33,0)
 ; Bad pointer passed
"RTN","LA7SMU",34,0)
 I '$D(^LAHM(62.9,LA7SCFG,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",35,0)
 ;
"RTN","LA7SMU",36,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SMU",37,0)
 ; ien of collecting facility
"RTN","LA7SMU",38,0)
 S LA7CF=$P(LA7SCFG(0),"^",2)
"RTN","LA7SMU",39,0)
 ; file #4 INSTITUTION information
"RTN","LA7SMU",40,0)
 F I=.01,.05,99 S X4(I)=$$GET1^DIQ(4,LA7CF_",",I)
"RTN","LA7SMU",41,0)
 ;
"RTN","LA7SMU",42,0)
 ; Get station number else use short name
"RTN","LA7SMU",43,0)
 S LA7SM=""
"RTN","LA7SMU",44,0)
 I $L(X4(99)) S LA7SM=X4(99)
"RTN","LA7SMU",45,0)
 E  S LA7SM=X4(.05)
"RTN","LA7SMU",46,0)
 ; Failsafe value
"RTN","LA7SMU",47,0)
 I LA7SM="" S LA7SM="INST:"_LA7CF
"RTN","LA7SMU",48,0)
 S DT=$$DT^XLFDT,LA7DT=$E($$FMTHL7^XLFDT(DT),1,8)
"RTN","LA7SMU",49,0)
 S LA7SM=LA7SM_"-"_LA7DT_"-"
"RTN","LA7SMU",50,0)
 ;
"RTN","LA7SMU",51,0)
 ;L +^LAHM(62.8,0):5 ; Set lock
"RTN","LA7SMU",52,0)
 D LOCK^DILF("^LAHM(62.8,0)")
"RTN","LA7SMU",53,0)
 I '$T Q "-1^Unable to obtain lock on file LAB SHIPPING MANIFEST #62.8"
"RTN","LA7SMU",54,0)
 S X=0
"RTN","LA7SMU",55,0)
 F  S X=X+1 Q:'$D(^LAHM(62.8,"B",LA7SM_X))
"RTN","LA7SMU",56,0)
 S LA7SM=LA7SM_X
"RTN","LA7SMU",57,0)
 ;
"RTN","LA7SMU",58,0)
 S FDA(1,62.8,"+1,",.01)=LA7SM
"RTN","LA7SMU",59,0)
 S FDA(1,62.8,"+1,",.02)=LA7SCFG
"RTN","LA7SMU",60,0)
 S FDA(1,62.8,"+1,",.03)=1
"RTN","LA7SMU",61,0)
 I $P(LA7SCFG(0),"^",8) S FDA(1,62.8,"+1,",.04)=$P(LA7SCFG(0),"^",8)
"RTN","LA7SMU",62,0)
 S FDA(1,62.8,"+1,",.05)=+$P(LA7SCFG(0),"^",15)
"RTN","LA7SMU",63,0)
 S FDA(1,62.8,"+1,",.06)=+$P(LA7SCFG(0),"^",16)
"RTN","LA7SMU",64,0)
 D UPDATE^DIE("","FDA(1)","LA7IEN","LA7DIE(1)")
"RTN","LA7SMU",65,0)
 D RECALL^DILFD(62.8,LA7IEN(1)_",",DUZ)
"RTN","LA7SMU",66,0)
 ;
"RTN","LA7SMU",67,0)
 S DATA="SM01^"_$$NOW^XLFDT
"RTN","LA7SMU",68,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",69,0)
 ;
"RTN","LA7SMU",70,0)
 S DATA="SM02^"_$$NOW^XLFDT
"RTN","LA7SMU",71,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",72,0)
 ;
"RTN","LA7SMU",73,0)
 ; Release lock
"RTN","LA7SMU",74,0)
 L -^LAHM(62.8,0)
"RTN","LA7SMU",75,0)
 Q LA7IEN(1)_"^"_LA7SM
"RTN","LA7SMU",76,0)
 ;
"RTN","LA7SMU",77,0)
 ;
"RTN","LA7SMU",78,0)
SMSUP(LA7SM,LA7ST,LA7EVNC) ; Shipping manifest status update.
"RTN","LA7SMU",79,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MAINFEST^.01 field
"RTN","LA7SMU",80,0)
 ;           LA7ST = status to update
"RTN","LA7SMU",81,0)
 ;         LA7EVNC = event code^event date/time (default=NOW)
"RTN","LA7SMU",82,0)
 ;
"RTN","LA7SMU",83,0)
 N DATA,LA7DIE,LA7FDA,LA7IEN
"RTN","LA7SMU",84,0)
 ;
"RTN","LA7SMU",85,0)
 S LA7IEN(1)=+LA7SM
"RTN","LA7SMU",86,0)
 S LA7FDA(2,62.8,+LA7SM_",",.03)=LA7ST
"RTN","LA7SMU",87,0)
 D UPDATE^DIE("","LA7FDA(2)","LA7IEN","LA7DIE(2)")
"RTN","LA7SMU",88,0)
 S DATA=$P(LA7EVNC,"^")_"^"_$S($P(LA7EVNC,"^",2):$P(LA7EVNC,"^",2),1:$$NOW^XLFDT)
"RTN","LA7SMU",89,0)
 D SEUP($P(LA7SM,"^",2),1,DATA)
"RTN","LA7SMU",90,0)
 Q
"RTN","LA7SMU",91,0)
 ;
"RTN","LA7SMU",92,0)
 ;
"RTN","LA7SMU",93,0)
STSUP(LA7SM,LA762801,LA7DATA) ; Shipping test status update
"RTN","LA7SMU",94,0)
 ; Call with    LA7SM = ien of shipping manifest (#62.8)
"RTN","LA7SMU",95,0)
 ;           LA762801 = ien of test entry on shipping manifest
"RTN","LA7SMU",96,0)
 ;            LA7DATA = data to be filed
"RTN","LA7SMU",97,0)
 N LA7FDA,LA7DIE
"RTN","LA7SMU",98,0)
 S LA762801=LA762801_","_+LA7SM_","
"RTN","LA7SMU",99,0)
 S LA7FDA(62.8,62.801,LA762801,.08)=LA7DATA
"RTN","LA7SMU",100,0)
 D FILE^DIE("","LA7FDA(62.8)","LA7DIE(2)")
"RTN","LA7SMU",101,0)
 Q
"RTN","LA7SMU",102,0)
 ;
"RTN","LA7SMU",103,0)
 ;
"RTN","LA7SMU",104,0)
SEUP(LA7ID,LA7EVN,LA7DATA) ; Shipping event update
"RTN","LA7SMU",105,0)
 ; Call with LA7ID = shipping identifier (manifest invoice # or UID)
"RTN","LA7SMU",106,0)
 ;           LA7EVN = event type (1=shipping manifest/2=test)
"RTN","LA7SMU",107,0)
 ;           LA7DATA = data to be filed
"RTN","LA7SMU",108,0)
 N FDA,I,LA7IEN,X
"RTN","LA7SMU",109,0)
 ;L +^LAHM(62.85,0) ; Set lock
"RTN","LA7SMU",110,0)
 D LOCK^DILF("^LAHM(62.85,0)")
"RTN","LA7SMU",111,0)
 I '$T Q
"RTN","LA7SMU",112,0)
 S FDA(3,62.85,"+1,",.01)=LA7ID
"RTN","LA7SMU",113,0)
 S FDA(3,62.85,"+1,",.02)=$S($G(DUZ)>0:DUZ,1:.5)
"RTN","LA7SMU",114,0)
 S FDA(3,62.85,"+1,",.03)=$$NOW^XLFDT
"RTN","LA7SMU",115,0)
 S FDA(3,62.85,"+1,",.04)=LA7EVN
"RTN","LA7SMU",116,0)
 I $P(LA7DATA,"^")'="" D
"RTN","LA7SMU",117,0)
 . S X=$$EVNC($P(LA7DATA,"^"))
"RTN","LA7SMU",118,0)
 . I X S FDA(3,62.85,"+1,",.05)=+X
"RTN","LA7SMU",119,0)
 F I=2:1:4 I $P(LA7DATA,"^",I)'="" S FDA(3,62.85,"+1,",$P("^.07^.08^.09","^",I))=$P(LA7DATA,"^",I)
"RTN","LA7SMU",120,0)
 ;
"RTN","LA7SMU",121,0)
 ; Add event to lab shipping event.
"RTN","LA7SMU",122,0)
 D UPDATE^DIE("","FDA(3)","LA7IEN","LA7DIE(3)")
"RTN","LA7SMU",123,0)
 ; Release lock
"RTN","LA7SMU",124,0)
 L -^LAHM(62.85,0)
"RTN","LA7SMU",125,0)
 ;
"RTN","LA7SMU",126,0)
 Q
"RTN","LA7SMU",127,0)
 ;
"RTN","LA7SMU",128,0)
 ;
"RTN","LA7SMU",129,0)
ACCSUP(LA7UID,LA760,LA7DATA) ; Accession status update
"RTN","LA7SMU",130,0)
 ; Call with LA7UID = UID of accession to update
"RTN","LA7SMU",131,0)
 ;          LA7DATA = value to update (pointer to file #62.8, LAB SHIPPING MANIFEST or "@" to delete
"RTN","LA7SMU",132,0)
 ;
"RTN","LA7SMU",133,0)
 N FDA,LA7AA,LA7AD,LA7AN,LA7CAD,LA768,X
"RTN","LA7SMU",134,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",135,0)
 S LA7AA=$QS(X,4),LA7AD=$QS(X,5),LA7AN=$QS(X,6)
"RTN","LA7SMU",136,0)
 S LA7CAD=$$AD^LA7SUTL(LA7AA) ; Get current accession date for this accession area.
"RTN","LA7SMU",137,0)
 S LA7AD=LA7AD-.000000001
"RTN","LA7SMU",138,0)
 F  S LA7AD=$O(^LRO(68,LA7AA,1,LA7AD)) Q:'LA7AD!(LA7AD>LA7CAD)  D
"RTN","LA7SMU",139,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN)) Q
"RTN","LA7SMU",140,0)
 . I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")'=LA7UID Q
"RTN","LA7SMU",141,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q  ; Test not on accession.
"RTN","LA7SMU",142,0)
 . S LA768=LA760_","_LA7AN_","_LA7AD_","_LA7AA_","
"RTN","LA7SMU",143,0)
 . S FDA(68,68.04,LA768,9)=LA7DATA
"RTN","LA7SMU",144,0)
 . D FILE^DIE("","FDA(68)","LA7DIE(68)")
"RTN","LA7SMU",145,0)
 Q
"RTN","LA7SMU",146,0)
 ;
"RTN","LA7SMU",147,0)
 ;
"RTN","LA7SMU",148,0)
SELSM(LA7SCFG,LA7SCR) ; Select shipping manifest
"RTN","LA7SMU",149,0)
 ; Call with LA7SCFG = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",150,0)
 ;            LA7SCR = comma delimited list of status screen - only allow selection of manifests with matching status
"RTN","LA7SMU",151,0)
 ;      Returns LA7Y = pointer to shipping manifest or error
"RTN","LA7SMU",152,0)
 N D,DIC,DTOUT,DUOUT,LA7Y,X,Y
"RTN","LA7SMU",153,0)
 S DIC="^LAHM(62.8,",DIC(0)="AEQ",DIC("A")="Select Shipping Manifest: "
"RTN","LA7SMU",154,0)
 S DIC("S")="I $P(^LAHM(62.8,Y,0),U,2)=LA7SCFG"
"RTN","LA7SMU",155,0)
 S DIC("W")="D SMW^LA7SMU1(Y)"
"RTN","LA7SMU",156,0)
 I $G(LA7SCR)'="" S DIC("S")=DIC("S")_","""_LA7SCR_"""[$P(^LAHM(62.8,Y,0),U,3)"
"RTN","LA7SMU",157,0)
 S D="C"
"RTN","LA7SMU",158,0)
 D MIX^DIC1
"RTN","LA7SMU",159,0)
 I Y<1 S LA7Y="-1^"
"RTN","LA7SMU",160,0)
 E  S LA7Y=Y
"RTN","LA7SMU",161,0)
 Q LA7Y
"RTN","LA7SMU",162,0)
 ;
"RTN","LA7SMU",163,0)
 ;
"RTN","LA7SMU",164,0)
SMED(LA7SM,LA7EVC) ; Determine shipping manifest's event date
"RTN","LA7SMU",165,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MANIFEST
"RTN","LA7SMU",166,0)
 ;          LA7EVC = event type code
"RTN","LA7SMU",167,0)
 ;   Returns LA7Y = internal event date^external event date
"RTN","LA7SMU",168,0)
 N LA7I,LA7X,LA7Y
"RTN","LA7SMU",169,0)
 I '$G(LA7SM) Q "-1^No shipping manifest passed"
"RTN","LA7SMU",170,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",171,0)
 S LA7EV=+$$EVNC(LA7EVC)
"RTN","LA7SMU",172,0)
 I LA7EVC="SM05",$P(LA7SM(0),"^",3)'>2 Q "0^Shipping manifest has not been shipped"
"RTN","LA7SMU",173,0)
 S LA7I=0,LA7Y=""
"RTN","LA7SMU",174,0)
 F  S LA7I=$O(^LAHM(62.85,"B",$P(LA7SM(0),"^"),LA7I)) Q:'LA7I  D  Q:$L(LA7Y)
"RTN","LA7SMU",175,0)
 . I $P($G(^LAHM(62.85,LA7I,0)),"^",5)'=LA7EV Q
"RTN","LA7SMU",176,0)
 . S LA7Y=$P(^LAHM(62.85,LA7I,0),"^",7)_"^"_$$FMTE^XLFDT($P(^LAHM(62.85,LA7I,0),"^",7),"M") ; Event date/time
"RTN","LA7SMU",177,0)
 I $G(LA7Y)="" S LA7Y="-2^No event date found"
"RTN","LA7SMU",178,0)
 Q LA7Y
"RTN","LA7SMU",179,0)
 ;
"RTN","LA7SMU",180,0)
 ;
"RTN","LA7SMU",181,0)
EVNC(LA7EVC) ; Resolve an event code to it's pointer/text(.01) value
"RTN","LA7SMU",182,0)
 ; Call with LA7EVC = Code to lookup, i.e. SM01, SM50
"RTN","LA7SMU",183,0)
 ;        Returns Y = ien of code in file #64.061, LAB ELECTRONIC CODES.
"RTN","LA7SMU",184,0)
 N X,Y
"RTN","LA7SMU",185,0)
 S (X,Y)=0
"RTN","LA7SMU",186,0)
 F  S X=$O(^LAB(64.061,"F",LA7EVC,X)) Q:'X  D  Q:Y
"RTN","LA7SMU",187,0)
 . S X(0)=$G(^LAB(64.061,X,0))
"RTN","LA7SMU",188,0)
 . I $P(X(0),"^",7)="E" S Y=X_"^"_$P(X(0),"^")
"RTN","LA7SMU",189,0)
 I 'Y S Y="0^Code not on file"
"RTN","LA7SMU",190,0)
 Q Y
"RTN","LA7SMU",191,0)
 ;
"RTN","LA7SMU",192,0)
 ;
"RTN","LA7SMU",193,0)
CHKTST(LA7SM,LA762801) ; Check and update if test is still valid.
"RTN","LA7SMU",194,0)
 ; Call with LA7SM = ien of shipping manifest in file #62.8
"RTN","LA7SMU",195,0)
 ;        LA762801 = ien of entry on test multiple in file #62.8
"RTN","LA7SMU",196,0)
 ;
"RTN","LA7SMU",197,0)
 ; Returns LA7SKIP = 0 (Test still on accession).
"RTN","LA7SMU",198,0)
 ;                   1 (Test not on accession).
"RTN","LA7SMU",199,0)
 ;                   2 (Accession deleted/purged).
"RTN","LA7SMU",200,0)
 ;                   3 (Test not on accession - already shipped)
"RTN","LA7SMU",201,0)
 ;                   4 (Accession deleted/purged - already shipped)
"RTN","LA7SMU",202,0)
 ;
"RTN","LA7SMU",203,0)
 N LA7AA,LA7AD,LA7AN,LA7DATA,LA7SKIP,LA7UID,X,Y
"RTN","LA7SMU",204,0)
 S LA7SKIP=0
"RTN","LA7SMU",205,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",206,0)
 S LA762801(0)=$G(^LAHM(62.8,+LA7SM,10,+LA762801,0))
"RTN","LA7SMU",207,0)
 S LA7UID=$P(LA762801(0),"^",5)
"RTN","LA7SMU",208,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",209,0)
 S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7SMU",210,0)
 ;
"RTN","LA7SMU",211,0)
 ; Test found.
"RTN","LA7SMU",212,0)
 I $D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) Q LA7SKIP
"RTN","LA7SMU",213,0)
 ; Accession missing.
"RTN","LA7SMU",214,0)
 I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) D
"RTN","LA7SMU",215,0)
 . ; Already shipped
"RTN","LA7SMU",216,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=4 Q
"RTN","LA7SMU",217,0)
 . S LA7SKIP=2,LA7DATA="SM62"
"RTN","LA7SMU",218,0)
 ;
"RTN","LA7SMU",219,0)
 ; Test missing.
"RTN","LA7SMU",220,0)
 I 'LA7SKIP,'$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) D
"RTN","LA7SMU",221,0)
 . ; Already shipped
"RTN","LA7SMU",222,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=3 Q
"RTN","LA7SMU",223,0)
 . S LA7SKIP=1,LA7DATA="SM61"
"RTN","LA7SMU",224,0)
 ;
"RTN","LA7SMU",225,0)
 ; Update manifest/event file if test has not shipped.
"RTN","LA7SMU",226,0)
 I LA7SKIP,LA7SKIP<3 D
"RTN","LA7SMU",227,0)
 . ; Update test on manifest
"RTN","LA7SMU",228,0)
 . D STSUP^LA7SMU(+LA7SM,LA762801,0)
"RTN","LA7SMU",229,0)
 . ; Update event file
"RTN","LA7SMU",230,0)
 . S LA7DATA=LA7DATA_"^"_$$NOW^XLFDT_"^"_$P(LA762801(0),"^",2)_"^"_$P(LA7SM(0),"^")
"RTN","LA7SMU",231,0)
 . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMU",232,0)
 Q LA7SKIP
"RTN","LA7SMU1")
0^52^B47133373
"RTN","LA7SMU1",1,0)
LA7SMU1 ;DALOI/JMC - Shipping Manifest Utility (Cont'd) ;04/13/10  15:09
"RTN","LA7SMU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,65,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMU1",3,0)
 ;
"RTN","LA7SMU1",4,0)
 Q
"RTN","LA7SMU1",5,0)
 ;
"RTN","LA7SMU1",6,0)
SMW(LA7SM) ; "Write" additional information on DIC lookup of #62.8.
"RTN","LA7SMU1",7,0)
 ; Called by DIC("W")
"RTN","LA7SMU1",8,0)
 ; Call with LA7SM = ien of entry in file #62.8
"RTN","LA7SMU1",9,0)
 ;
"RTN","LA7SMU1",10,0)
 N LA7X,LA7Y,LA7EVC
"RTN","LA7SMU1",11,0)
 ;
"RTN","LA7SMU1",12,0)
 S LA7SM(0)=$G(^LAHM(62.8,LA7SM,0))
"RTN","LA7SMU1",13,0)
 ; Shipping configuration
"RTN","LA7SMU1",14,0)
 S LA7X=" "_$P($G(^LAHM(62.9,$P(LA7SM(0),"^",2),0)),"^")
"RTN","LA7SMU1",15,0)
 S LA7X=LA7X_" Status: "_$$EXTERNAL^DILFD(62.8,.03,"",$P(LA7SM(0),"^",3))
"RTN","LA7SMU1",16,0)
 S LA7EVC="SM"_$S($P(LA7SM(0),"^",3)=0:"00",1:$P("02^03^04^05^07","^",+$P(LA7SM(0),"^",3)))
"RTN","LA7SMU1",17,0)
 S LA7Y=$$SMED^LA7SMU(LA7SM,LA7EVC)
"RTN","LA7SMU1",18,0)
 S LA7X=LA7X_" as of "_$P(LA7Y,"^",2)
"RTN","LA7SMU1",19,0)
 D EN^DDIOL(LA7X,"","?18")
"RTN","LA7SMU1",20,0)
 Q
"RTN","LA7SMU1",21,0)
 ;
"RTN","LA7SMU1",22,0)
 ;
"RTN","LA7SMU1",23,0)
ADATE ; Select accession dates if specified
"RTN","LA7SMU1",24,0)
 ;
"RTN","LA7SMU1",25,0)
 ;ZEXCEPT: LA7629,LA7AA,LA7QUIT,LA7SCFG
"RTN","LA7SMU1",26,0)
 ;
"RTN","LA7SMU1",27,0)
 N DIR,DIRUT,DTOUT,LRAA,X,Y
"RTN","LA7SMU1",28,0)
 ;
"RTN","LA7SMU1",29,0)
 S DIR(0)="YO",DIR("A")="Use default accession dates"
"RTN","LA7SMU1",30,0)
 ;
"RTN","LA7SMU1",31,0)
 S DIR("B")=""
"RTN","LA7SMU1",32,0)
 I +$G(LA7SCFG)>0 D
"RTN","LA7SMU1",33,0)
 . N X
"RTN","LA7SMU1",34,0)
 . S X=$$GET^XPAR("USR^PKG","LR MANIFEST DEFLT ACCESSION","`"_+LA7SCFG,"Q")
"RTN","LA7SMU1",35,0)
 . I X'="" S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LA7SMU1",36,0)
 I DIR("B")="" S DIR("B")="YES"
"RTN","LA7SMU1",37,0)
 ;
"RTN","LA7SMU1",38,0)
 S DIR("?",1)="Enter ""YES"" to use the current accession date for each accession area utilized by this shipping configuration."
"RTN","LA7SMU1",39,0)
 S DIR("?",2)=" "
"RTN","LA7SMU1",40,0)
 S DIR("?")="If you select ""NO"" then you will be asked to specify a specific accession date and starting and ending accession numbers for each accession area."
"RTN","LA7SMU1",41,0)
 D ^DIR
"RTN","LA7SMU1",42,0)
 ; User aborted
"RTN","LA7SMU1",43,0)
 I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SMU1",44,0)
 ; Use default accession dates
"RTN","LA7SMU1",45,0)
 I Y=1 Q
"RTN","LA7SMU1",46,0)
 ;
"RTN","LA7SMU1",47,0)
 S X=0
"RTN","LA7SMU1",48,0)
 F  S X=$O(^LAHM(62.9,+LA7SCFG,60,X)) Q:'X  D
"RTN","LA7SMU1",49,0)
 . S X(0)=$G(^LAHM(62.9,+LA7SCFG,60,X,0))
"RTN","LA7SMU1",50,0)
 . I $P(X(0),"^",2),'$D(LA7AA($P(X(0),"^",2))) S LA7AA($P(X(0),"^",2))=""
"RTN","LA7SMU1",51,0)
 ;
"RTN","LA7SMU1",52,0)
 S LA7AA=0
"RTN","LA7SMU1",53,0)
 F  S LA7AA=$O(LA7AA(LA7AA)) Q:'LA7AA  D  Q:LA7QUIT
"RTN","LA7SMU1",54,0)
 . N %DT,DTOUT,LRAA,LRAD,LREND,LRFAN,LRLAN
"RTN","LA7SMU1",55,0)
 . D EN^DDIOL("For Accession Area: "_$P($G(^LRO(68,LA7AA,0)),"^"),"","!!?2")
"RTN","LA7SMU1",56,0)
 . S LRAA=LA7AA D ADATE^LRWU3
"RTN","LA7SMU1",57,0)
 . I Y<1!($G(DTOUT)) S LA7QUIT=1 Q
"RTN","LA7SMU1",58,0)
 . S LA7AA(LA7AA)=$G(LRAD)
"RTN","LA7SMU1",59,0)
 . D LRAN^LRWU3
"RTN","LA7SMU1",60,0)
 . I LREND S LA7QUIT=1 Q
"RTN","LA7SMU1",61,0)
 . S LA7AA(LA7AA)=$G(LRAD)_"^"_$G(LRFAN)_"^"_$G(LRLAN)
"RTN","LA7SMU1",62,0)
 Q
"RTN","LA7SMU1",63,0)
 ;
"RTN","LA7SMU1",64,0)
 ;
"RTN","LA7SMU1",65,0)
ASKPREV(LA7629) ; Ask if build should exclude tests from building that have previously
"RTN","LA7SMU1",66,0)
 ; been removed from a manifest. Allows user to control if tests rebuild
"RTN","LA7SMU1",67,0)
 ; onto the same or different manifest.
"RTN","LA7SMU1",68,0)
 ;
"RTN","LA7SMU1",69,0)
 ; Call with LA7629 = ien of shipping configuration in file #62.9
"RTN","LA7SMU1",70,0)
 ;
"RTN","LA7SMU1",71,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7SMU1",72,0)
 ;
"RTN","LA7SMU1",73,0)
 S DIR(0)="YO"
"RTN","LA7SMU1",74,0)
 S DIR("A")="Exclude previously removed tests from building"
"RTN","LA7SMU1",75,0)
 ;
"RTN","LA7SMU1",76,0)
 S DIR("B")=""
"RTN","LA7SMU1",77,0)
 I $G(LA7629)>0 D
"RTN","LA7SMU1",78,0)
 . N X
"RTN","LA7SMU1",79,0)
 . S X=$$GET^XPAR("USR^PKG","LR MANIFEST EXC PREV TEST","`"_LA7629,"Q")
"RTN","LA7SMU1",80,0)
 . I X'="" S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LA7SMU1",81,0)
 I DIR("B")="" S DIR("B")="YES"
"RTN","LA7SMU1",82,0)
 ;
"RTN","LA7SMU1",83,0)
 S DIR("?",1)="Answer 'YES' if you do NOT want tests previously removed"
"RTN","LA7SMU1",84,0)
 S DIR("?",2)="from a manifest to be added to this manifest."
"RTN","LA7SMU1",85,0)
 S DIR("?",3)=" "
"RTN","LA7SMU1",86,0)
 S DIR("?",4)="Answer 'NO' if you WANT tests to be added to this manifest"
"RTN","LA7SMU1",87,0)
 S DIR("?",5)="that were previously removed from a manifest and are"
"RTN","LA7SMU1",88,0)
 S DIR("?")="otherwise eligible to be added."
"RTN","LA7SMU1",89,0)
 D ^DIR
"RTN","LA7SMU1",90,0)
 Q $S($D(DIRUT):-1,1:+Y)
"RTN","LA7SMU1",91,0)
 ;
"RTN","LA7SMU1",92,0)
 ;
"RTN","LA7SMU1",93,0)
PREV(LA7UID,LA760) ; Determine if test previously removed from a manifest.
"RTN","LA7SMU1",94,0)
 ; Checks all manifests for accession/test combination.
"RTN","LA7SMU1",95,0)
 ; Call with LA7UID = accession's uid
"RTN","LA7SMU1",96,0)
 ;            LA760 = file #60 test ien
"RTN","LA7SMU1",97,0)
 ;
"RTN","LA7SMU1",98,0)
 ; Returns 0 = not previously removed from a manifest
"RTN","LA7SMU1",99,0)
 ;         1 = previously removed from a manifest
"RTN","LA7SMU1",100,0)
 ;
"RTN","LA7SMU1",101,0)
 ; Called by LA7SMB
"RTN","LA7SMU1",102,0)
 ;
"RTN","LA7SMU1",103,0)
 N LA7628,LA762801,LA7FLAG,LA7ROOT,LA7X
"RTN","LA7SMU1",104,0)
 ;
"RTN","LA7SMU1",105,0)
 S LA7FLAG=0
"RTN","LA7SMU1",106,0)
 I ($G(LA7UID)="")!'($G(LA760)) Q LA7FLAG
"RTN","LA7SMU1",107,0)
 S LA7ROOT="^LAHM(62.8,""UID"",LA7UID)"
"RTN","LA7SMU1",108,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:$QS(LA7ROOT,3)'=LA7UID  D  Q:LA7FLAG
"RTN","LA7SMU1",109,0)
 . ; Manifest and specimen ien
"RTN","LA7SMU1",110,0)
 . S LA7628=$QS(LA7ROOT,4),LA762801=$QS(LA7ROOT,5)
"RTN","LA7SMU1",111,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7SMU1",112,0)
 . ; Found previous test removal
"RTN","LA7SMU1",113,0)
 . I $P(LA7X,"^",2)=LA760,$P(LA7X,"^",8)=0 S LA7FLAG=1
"RTN","LA7SMU1",114,0)
 Q LA7FLAG
"RTN","LA7SMU1",115,0)
 ;
"RTN","LA7SMU1",116,0)
 ;
"RTN","LA7SMU1",117,0)
SHIPCK(LA7UID,LA7AA,LA760,LA7628) ; Determine if test previously shipped and still eligible for shipping on another manifest
"RTN","LA7SMU1",118,0)
 ; Call with LA7UID = accession's UID
"RTN","LA7SMU1",119,0)
 ;            LA7AA = accession's accession area
"RTN","LA7SMU1",120,0)
 ;            LA760 = accession's file #60 test ien
"RTN","LA7SMU1",121,0)
 ;           LA7628 = ien of previously shipped manifest (optional)
"RTN","LA7SMU1",122,0)
 ;
"RTN","LA7SMU1",123,0)
 ; Returns 0 = not previously shipped or eligible for reshipping on this manifest
"RTN","LA7SMU1",124,0)
 ;         1 = previously shipped
"RTN","LA7SMU1",125,0)
 ;
"RTN","LA7SMU1",126,0)
 N LA7629,LA7FLAG,LA7I,LA7X
"RTN","LA7SMU1",127,0)
 S LA7FLAG=0,LA7628=+$G(LA7628)
"RTN","LA7SMU1",128,0)
 ; Test already on another manifest
"RTN","LA7SMU1",129,0)
 I LA7628 S LA7FLAG=1
"RTN","LA7SMU1",130,0)
 ; If test on another manifest then check if manifest and test received and test eligible for another shipping configuration's manifest
"RTN","LA7SMU1",131,0)
 ;  Test must also be associated with a manifest from the specified shipping configuration.
"RTN","LA7SMU1",132,0)
 I LA7628,LA7UID'="" D
"RTN","LA7SMU1",133,0)
 . S LA7629=+$P($G(^LAHM(62.8,LA7628,0)),"^",2)
"RTN","LA7SMU1",134,0)
 . I '$D(^TMP("LA7SMB-R",$J,LA7629,LA7AA,LA760)) Q
"RTN","LA7SMU1",135,0)
 . I $P($G(^LAHM(62.8,LA7628,0)),"^",3)'=5 Q
"RTN","LA7SMU1",136,0)
 . S LA7I=0
"RTN","LA7SMU1",137,0)
 . F  S LA7I=$O(^LAHM(62.8,LA7628,10,"UID",LA7UID,LA7I)) Q:'LA7I  D  Q:LA7FLAG=0
"RTN","LA7SMU1",138,0)
 . . S LA7X=$G(^LAHM(62.8,LA7628,10,LA7I,0))
"RTN","LA7SMU1",139,0)
 . . I $P(LA7X,"^",2)=LA760,$P(LA7X,"^",8)=3 S LA7FLAG=0
"RTN","LA7SMU1",140,0)
 Q LA7FLAG
"RTN","LA7SMU1",141,0)
 ;
"RTN","LA7SMU1",142,0)
 ;
"RTN","LA7SMU1",143,0)
DOT(LA7CODE,LA7NCS,LA7UID,LA7628) ; Determine ordered tests
"RTN","LA7SMU1",144,0)
 ;
"RTN","LA7SMU1",145,0)
 ; Call with LA7CODE = Test code to look up
"RTN","LA7SMU1",146,0)
 ;            LA7NCS = name of coding system
"RTN","LA7SMU1",147,0)
 ;            LA7UID = accession's UID
"RTN","LA7SMU1",148,0)
 ;            LA7628 = ien of shipping manifest in #62.8
"RTN","LA7SMU1",149,0)
 ;
"RTN","LA7SMU1",150,0)
 ; Returns     LA760 = ien of test entry in file #60 if found
"RTN","LA7SMU1",151,0)
 ;
"RTN","LA7SMU1",152,0)
 ; Given a test code, accession and a shipping manifest finds the
"RTN","LA7SMU1",153,0)
 ; file #60 test which is associated with the test code on the manifest.
"RTN","LA7SMU1",154,0)
 ;
"RTN","LA7SMU1",155,0)
 ; Called from LA7VIN4 to determine ordered test and update shipping event.
"RTN","LA7SMU1",156,0)
 N LA760,LA764,LA7I,LA7X,LA7Y
"RTN","LA7SMU1",157,0)
 ;
"RTN","LA7SMU1",158,0)
 S (LA760,LA764)=0
"RTN","LA7SMU1",159,0)
 ; Quit if no code, UID or configuration passed.
"RTN","LA7SMU1",160,0)
 I $G(LA7CODE)=""!($G(LA7UID)="")!($G(LA7628)="") Q LA760
"RTN","LA7SMU1",161,0)
 ;
"RTN","LA7SMU1",162,0)
 ; Using NLT codes
"RTN","LA7SMU1",163,0)
 I $G(LA7NCS)="99VA64" S LA764=+$O(^LAM("E",LA7CODE,0))
"RTN","LA7SMU1",164,0)
 ;
"RTN","LA7SMU1",165,0)
 ; Try NLT in case other system is returning NLT codes but not saying so
"RTN","LA7SMU1",166,0)
 I 'LA764,$D(^LAM("E",LA7CODE)) S LA764=+$O(^LAM("E",LA7CODE,0))
"RTN","LA7SMU1",167,0)
 ;
"RTN","LA7SMU1",168,0)
 S LA7I=0
"RTN","LA7SMU1",169,0)
 F  S LA7I=$O(^LAHM(62.8,LA7628,10,"UID",LA7UID,LA7I)) Q:'LA7I  D  Q:LA760
"RTN","LA7SMU1",170,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA7I,0))
"RTN","LA7SMU1",171,0)
 . S LA7Y=$P(LA7X,"^",2)
"RTN","LA7SMU1",172,0)
 . ; Found match on NLT code
"RTN","LA7SMU1",173,0)
 . I LA7Y,+$P(^LAB(60,LA7Y,64),"^")=LA764 S LA760=LA7Y Q
"RTN","LA7SMU1",174,0)
 . ; Found match on non-VA code
"RTN","LA7SMU1",175,0)
 . I LA7CODE=$P($G(^LAHM(62.8,LA7628,10,LA7I,5)),"^") S LA760=LA7Y
"RTN","LA7SMU1",176,0)
 ;
"RTN","LA7SMU1",177,0)
 Q LA760
"RTN","LA7SMU1",178,0)
 ;
"RTN","LA7SMU1",179,0)
 ;
"RTN","LA7SMU1",180,0)
HLP62(LR62) ; Display help for collection sample/topography
"RTN","LA7SMU1",181,0)
 ;
"RTN","LA7SMU1",182,0)
 ; Call with LR62 = ien of collection sample
"RTN","LA7SMU1",183,0)
 ;
"RTN","LA7SMU1",184,0)
 ;ZEXCEPT: IOM
"RTN","LA7SMU1",185,0)
 ;
"RTN","LA7SMU1",186,0)
 I $G(LR62)<1 Q
"RTN","LA7SMU1",187,0)
 ;
"RTN","LA7SMU1",188,0)
 N DIWF,DIWL,DIWR,LR61,LRTXT,X
"RTN","LA7SMU1",189,0)
 ;
"RTN","LA7SMU1",190,0)
 S DIWF="",DIWL=5,DIWR=IOM
"RTN","LA7SMU1",191,0)
 K ^UTILITY($J,"W")
"RTN","LA7SMU1",192,0)
 S LR62(0)=$G(^LAB(62,LR62,0))
"RTN","LA7SMU1",193,0)
 I $P(LR62(0),"^",2) S LR61=$P(LR62(0),"^",2),LR61(0)=$G(^LAB(61,LR61,0))
"RTN","LA7SMU1",194,0)
 E  S (LR61,LR61(0))=""
"RTN","LA7SMU1",195,0)
 ;
"RTN","LA7SMU1",196,0)
 I LR61<1 D
"RTN","LA7SMU1",197,0)
 . S X="NOTE: The collection sample "_$P(LR62(0),"^")_" [IEN "_LR62_"] does NOT have a default specimen."
"RTN","LA7SMU1",198,0)
 . D ^DIWP
"RTN","LA7SMU1",199,0)
 . S X="Therefore at the SPECIMEN field prompt specify the specimen type to use to build pending orders from incoming order messages."
"RTN","LA7SMU1",200,0)
 . D ^DIWP
"RTN","LA7SMU1",201,0)
 ;
"RTN","LA7SMU1",202,0)
 I LR61>0 D
"RTN","LA7SMU1",203,0)
 . S X="NOTE: The collection sample "_$P(LR62(0),"^")_" [IEN "_LR62_"] has a default specimen of "_$P(LR61(0),"^")_" [IEN "_LR61_"]."
"RTN","LA7SMU1",204,0)
 . D ^DIWP
"RTN","LA7SMU1",205,0)
 . S X="If you want to use this specimen then leave the SPECIMEN field blank at the next prompt."
"RTN","LA7SMU1",206,0)
 . D ^DIWP
"RTN","LA7SMU1",207,0)
 . S X=" "
"RTN","LA7SMU1",208,0)
 . D ^DIWP
"RTN","LA7SMU1",209,0)
 . S X="If you want to use this collection sample with a different specimen type then at the SPECIMEN field prompt specify the specimen type to use"
"RTN","LA7SMU1",210,0)
 . D ^DIWP
"RTN","LA7SMU1",211,0)
 . S X="to build pending orders from incoming order messages."
"RTN","LA7SMU1",212,0)
 . D ^DIWP
"RTN","LA7SMU1",213,0)
 D ^DIWW
"RTN","LA7SMU1",214,0)
 K ^UTILITY($J,"W")
"RTN","LA7SMU1",215,0)
 Q
"RTN","LA7SMU2")
0^22^B28488734
"RTN","LA7SMU2",1,0)
LA7SMU2 ;DALOI/JMC - Shipping Manifest Utility (Cont'd) ;11/17/11  08:50
"RTN","LA7SMU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SMU2",3,0)
 ;
"RTN","LA7SMU2",4,0)
 Q
"RTN","LA7SMU2",5,0)
 ;
"RTN","LA7SMU2",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7SMU2",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7SMU2",8,0)
 ;
"RTN","LA7SMU2",9,0)
DTTO(LA7SCFG,LA7VNLT,LA7HLSC,LA7HLPRI,LA7HLCSC) ; Determine test to order
"RTN","LA7SMU2",10,0)
 ; Call with LA7SCFG = ien of Shipping Configuration file #62.9
"RTN","LA7SMU2",11,0)
 ;           LA7VNLT = NLT code or non-VA test code (pass by reference)
"RTN","LA7SMU2",12,0)
 ;           LA7HLSC = Specimen Code (pass by reference)
"RTN","LA7SMU2",13,0)
 ;          LA7HLPRI = HL7 Priority Code
"RTN","LA7SMU2",14,0)
 ;          LA7HLCSC = Collection sample (pass by reference)
"RTN","LA7SMU2",15,0)
 ;
"RTN","LA7SMU2",16,0)
 ; Returns      LA7X = 0^0^0^0^^^ (if unsuccessful)
"RTN","LA7SMU2",17,0)
 ;                     LABORATORY TEST (ien file #60)^TOPOGRAPHY (ien file #61)^COLLECTION SAMPLE (ien file #62)^URGENCY (ien file #62.05)^NLT TEST CODE^NLT TEST NAME
"RTN","LA7SMU2",18,0)
 ;
"RTN","LA7SMU2",19,0)
 N I,J,K,L,LA760,LA7X,X,Y,Z
"RTN","LA7SMU2",20,0)
 ;
"RTN","LA7SMU2",21,0)
 ; Make sure variables initialized.
"RTN","LA7SMU2",22,0)
 S LA7X="0^0^0^0^^^"
"RTN","LA7SMU2",23,0)
 I LA7VNLT="" Q LA7X
"RTN","LA7SMU2",24,0)
 S LA7SCFG=+$G(LA7SCFG)
"RTN","LA7SMU2",25,0)
 I LA7HLPRI="" S LA7HLPRI="R"
"RTN","LA7SMU2",26,0)
 ;
"RTN","LA7SMU2",27,0)
 ; If coding systems not defined then assume HL7 Table 0070 and VA NLT file
"RTN","LA7SMU2",28,0)
 F I=1,4 D
"RTN","LA7SMU2",29,0)
 . I $G(LA7HLSC(I))'="",$G(LA7HLSC(I+2))="" S LA7HLSC(I+2)="HL70070"
"RTN","LA7SMU2",30,0)
 . I $G(LA7VNLT(I))'="" D
"RTN","LA7SMU2",31,0)
 . . I $G(LA7VNLT(I+2))="" S LA7VNLT(I+2)="L"
"RTN","LA7SMU2",32,0)
 . . I $G(LA7VNLT(I+2))="L",$P(^LAHM(62.9,LA7SCFG,0),"^",15)=0 S LA7VNLT(I+2)="99VA64"
"RTN","LA7SMU2",33,0)
 . I $G(LA7HLCSC(I))'="",$G(LA7HLCSC(I+2))="" S LA7HLCSC(I+2)="L"
"RTN","LA7SMU2",34,0)
 ;
"RTN","LA7SMU2",35,0)
 ; Build index of tests if not previously done for this session.
"RTN","LA7SMU2",36,0)
 I '$D(^TMP("LA7TC",$J,LA7SCFG)) D BINDX^LA7SMU2A
"RTN","LA7SMU2",37,0)
 ;
"RTN","LA7SMU2",38,0)
 ; Lookup test/specimen/priority/collection sample mapping
"RTN","LA7SMU2",39,0)
 F I=1,4 D  Q:LA7X
"RTN","LA7SMU2",40,0)
 . I $G(LA7VNLT(I))="" Q
"RTN","LA7SMU2",41,0)
 . F J=1,4 D  Q:LA7X
"RTN","LA7SMU2",42,0)
 . . I $G(LA7HLSC(J))="" Q
"RTN","LA7SMU2",43,0)
 . . F K=1,4 D  Q:LA7X
"RTN","LA7SMU2",44,0)
 . . . F L=LA7HLPRI,0 D  Q:LA7X
"RTN","LA7SMU2",45,0)
 . . . . I $G(LA7HLCSC(K))="" Q
"RTN","LA7SMU2",46,0)
 . . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J),L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",47,0)
 . . . . I X S LA7X=X
"RTN","LA7SMU2",48,0)
 . . . I LA7X Q
"RTN","LA7SMU2",49,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J),LA7HLPRI))
"RTN","LA7SMU2",50,0)
 . . . I X S LA7X=X
"RTN","LA7SMU2",51,0)
 . . I LA7X Q
"RTN","LA7SMU2",52,0)
 . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J)))
"RTN","LA7SMU2",53,0)
 . . I X S LA7X=X
"RTN","LA7SMU2",54,0)
 . I LA7X Q
"RTN","LA7SMU2",55,0)
 . F K=1,4 D  Q:LA7X
"RTN","LA7SMU2",56,0)
 . . F L=LA7HLPRI,0 D  Q:LA7X
"RTN","LA7SMU2",57,0)
 . . . I $G(LA7HLCSC(K))="" Q
"RTN","LA7SMU2",58,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),0,0,L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",59,0)
 . . . I X,$P(^LAB(60,$P(X,"^"),0),"^",4)="MI" S LA7X=X Q
"RTN","LA7SMU2",60,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),"HL70070","XXX",L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",61,0)
 . . . I X,"SPCYEM"[$P(^LAB(60,$P(X,"^"),0),"^",4) S LA7X=X
"RTN","LA7SMU2",62,0)
 . I LA7X Q
"RTN","LA7SMU2",63,0)
 . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),0,0,0,0,0))
"RTN","LA7SMU2",64,0)
 . I X S LA7X=X
"RTN","LA7SMU2",65,0)
 ;
"RTN","LA7SMU2",66,0)
 ; If SCT specimen from message does not match SCT assigned to specimen from above
"RTN","LA7SMU2",67,0)
 ;  then use SCT specimen from message to insure correct specimen on order.
"RTN","LA7SMU2",68,0)
 I $P(LA7X,"^"),$P(LA7X,"^",2) D
"RTN","LA7SMU2",69,0)
 . F J=1,4 I $G(LA7HLSC(J+2))="SCT" D  Q
"RTN","LA7SMU2",70,0)
 . . I LA7HLSC(J)=$P($G(^LAB(61,$P(LA7X,"^",2),"SCT")),"^") Q
"RTN","LA7SMU2",71,0)
 . . S X=$O(^LAB(61,"F",LA7HLSC(J),""))
"RTN","LA7SMU2",72,0)
 . . I X<1 S X=+$$FINDSCT(61,LA7HLSC(J),LA7HLSC(J+1))
"RTN","LA7SMU2",73,0)
 . . I X>0 S $P(LA7X,"^",2)=X
"RTN","LA7SMU2",74,0)
 ;
"RTN","LA7SMU2",75,0)
 ; If SCT collection sample from message does not match SCT assigned to collection sample from above
"RTN","LA7SMU2",76,0)
 ;  then use SCT collection sample from message to insure correct collection sample on order.
"RTN","LA7SMU2",77,0)
 I $P(LA7X,"^"),$P(LA7X,"^",3) D
"RTN","LA7SMU2",78,0)
 . F J=1,4 I $G(LA7HLCSC(J+2))="SCT" D  Q
"RTN","LA7SMU2",79,0)
 . . I LA7HLCSC(J)=$P($G(^LAB(62,$P(LA7X,"^",3),"SCT")),"^") Q
"RTN","LA7SMU2",80,0)
 . . S X=$O(^LAB(62,"F",LA7HLCSC(J),""))
"RTN","LA7SMU2",81,0)
 . . I X<1 S X=+$$FINDSCT(62,LA7HLCSC(J),LA7HLCSC(J+1))
"RTN","LA7SMU2",82,0)
 . . I X>0 S $P(LA7X,"^",3)=X
"RTN","LA7SMU2",83,0)
 ;
"RTN","LA7SMU2",84,0)
 ; For MI, SP, CY and EM find first specimen when collection sample is not mapped to a specific topography.
"RTN","LA7SMU2",85,0)
 ; For SP, CY and EM if no specimen then find first specimen mapped to HL7 0070 "XXX".
"RTN","LA7SMU2",86,0)
 I $P(LA7X,"^"),'$P(LA7X,"^",2),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",87,0)
 . S X=""
"RTN","LA7SMU2",88,0)
 . F J=1,4 D  Q:$P(LA7X,"^",2)
"RTN","LA7SMU2",89,0)
 . . I $G(LA7HLSC(J+2))="SCT" D
"RTN","LA7SMU2",90,0)
 . . . S X=$O(^LAB(61,"F",LA7HLSC(J),""))
"RTN","LA7SMU2",91,0)
 . . . I 'X S X=+$$FINDSCT(61,LA7HLSC(J),LA7HLSC(J+1))
"RTN","LA7SMU2",92,0)
 . . I $G(LA7HLSC(J+2))="HL70070" S X=$O(^LAB(61,"HL7",LA7HLSC(J),0))
"RTN","LA7SMU2",93,0)
 . . I X>0 S $P(LA7X,"^",2)=X
"RTN","LA7SMU2",94,0)
 . I '$P(LA7X,"^",2),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",95,0)
 . . S X=$O(^LAB(61,"HL7","XXX",0))
"RTN","LA7SMU2",96,0)
 . . I X>0 S $P(LA7X,"^",2)=X
"RTN","LA7SMU2",97,0)
 ;
"RTN","LA7SMU2",98,0)
 ; For MI, SP, CY, and EM find first collection sample when no collection sample.
"RTN","LA7SMU2",99,0)
 I $P(LA7X,"^"),'$P(LA7X,"^",3),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",100,0)
 . S X=""
"RTN","LA7SMU2",101,0)
 . F J=1,4 D  Q:$P(LA7X,"^",3)
"RTN","LA7SMU2",102,0)
 . . I $G(LA7HLCSC(J+2))="SCT" D
"RTN","LA7SMU2",103,0)
 . . . S X=$O(^LAB(62,"F",LA7HLCSC(J),""))
"RTN","LA7SMU2",104,0)
 . . . I 'X S X=+$$FINDSCT(62,LA7HLCSC(J),LA7HLCSC(J+1))
"RTN","LA7SMU2",105,0)
 . . I X>0 S $P(LA7X,"^",3)=X
"RTN","LA7SMU2",106,0)
 ;
"RTN","LA7SMU2",107,0)
 ; No urgency mapping, get last using this HL7 code or site's default urgency from #69.9
"RTN","LA7SMU2",108,0)
 ; Find highest non-workload urgency using this priority code else use site's default
"RTN","LA7SMU2",109,0)
 I '$P(LA7X,"^",4) D
"RTN","LA7SMU2",110,0)
 . S X=$O(^LAB(62.05,"HL7",LA7HLPRI,50),-1)
"RTN","LA7SMU2",111,0)
 . I X S $P(LA7X,"^",4)=X
"RTN","LA7SMU2",112,0)
 . E  S $P(LA7X,"^",4)=+$P($G(^LAB(69.9,1,3)),"^",2)
"RTN","LA7SMU2",113,0)
 ;
"RTN","LA7SMU2",114,0)
 ; Check file #60 forced and highest urgency.
"RTN","LA7SMU2",115,0)
 I $P(LA7X,"^"),$P(LA7X,"^",4) D
"RTN","LA7SMU2",116,0)
 . S X=$G(^LAB(60,$P(LA7X,"^"),0))
"RTN","LA7SMU2",117,0)
 . I $P(X,"^",18) S $P(LA7X,"^",4)=$P(X,"^",18) Q
"RTN","LA7SMU2",118,0)
 . I $P(X,"^",16),$P(LA7X,"^",4)<$P(X,"^",16) S $P(LA7X,"^",4)=$P(X,"^",16)
"RTN","LA7SMU2",119,0)
 ;
"RTN","LA7SMU2",120,0)
 Q LA7X
"RTN","LA7SMU2",121,0)
 ;
"RTN","LA7SMU2",122,0)
 ;
"RTN","LA7SMU2",123,0)
CHKCDSYS(LA7SRC,LA7DEST,LA7CSET,LA7CS) ; Check coding system order on CE/CNE/CWE data types
"RTN","LA7SMU2",124,0)
 ; Call with LA7SRC = source array by reference
"RTN","LA7SMU2",125,0)
 ;          LA7DEST = destination array by reference
"RTN","LA7SMU2",126,0)
 ;          LA7CSET = code set to move to primary
"RTN","LA7SMU2",127,0)
 ;            LA7CS = component separator
"RTN","LA7SMU2",128,0)
 ;
"RTN","LA7SMU2",129,0)
 ; Returns by reference array LA7DEST
"RTN","LA7SMU2",130,0)
 ;
"RTN","LA7SMU2",131,0)
 ; If code set in alternate then switch primary and alternate
"RTN","LA7SMU2",132,0)
 ;
"RTN","LA7SMU2",133,0)
 K LA7DEST
"RTN","LA7SMU2",134,0)
 ;
"RTN","LA7SMU2",135,0)
 I $G(LA7SRC(6))'=LA7CSET M LA7DEST=LA7SRC Q
"RTN","LA7SMU2",136,0)
 ;
"RTN","LA7SMU2",137,0)
 N J
"RTN","LA7SMU2",138,0)
 F J=1,2,3 D
"RTN","LA7SMU2",139,0)
 . S LA7DEST(J)=$G(LA7SRC(J+3)),LA7DEST(J+3)=$G(LA7SRC(J))
"RTN","LA7SMU2",140,0)
 . I LA7SRC'="" S $P(LA7DEST,LA7CS,J)=$P(LA7SRC,LA7CS,J+3),$P(LA7DEST,LA7CS,J+3)=$P(LA7SRC,LA7CS,J)
"RTN","LA7SMU2",141,0)
 S LA7DEST(7)=$G(LA7SRC(8)),LA7DEST(8)=$G(LA7SRC(7)),LA7DEST(9)=$G(LA7SRC(9))
"RTN","LA7SMU2",142,0)
 I $G(LA7SRC)'="" S $P(LA7DEST,LA7CS,7)=$P(LA7SRC,LA7CS,8),$P(LA7DEST,LA7CS,8)=$P(LA7SRC,LA7CS,7),$P(LA7DEST,LA7CS,9)=$P(LA7SRC,LA7CS,9)
"RTN","LA7SMU2",143,0)
 ;
"RTN","LA7SMU2",144,0)
 Q
"RTN","LA7SMU2",145,0)
 ;
"RTN","LA7SMU2",146,0)
 ;
"RTN","LA7SMU2",147,0)
FINDSCT(LA7FILE,LA7CODE,LA7TXT) ; Lookup SCT term in Lexicon and if possible add to target file.
"RTN","LA7SMU2",148,0)
 ; Call with LA7FILE = file number of target file (61/62)
"RTN","LA7SMU2",149,0)
 ;           LA7CODE = SCT ID
"RTN","LA7SMU2",150,0)
 ;            LA7TXT = SCT text
"RTN","LA7SMU2",151,0)
 ;
"RTN","LA7SMU2",152,0)
 N LA74,LA7ERROR,LAHLSEGS,LA7IEN,X,Y
"RTN","LA7SMU2",153,0)
 ;
"RTN","LA7SMU2",154,0)
 ;ZEXCEPT: LA76247,LA7CS,LA7ECH,LA7FS,LA7MID,LA7RAP,LA7RFAC,LA7SAP,LA7SFAC
"RTN","LA7SMU2",155,0)
 ;
"RTN","LA7SMU2",156,0)
 ;
"RTN","LA7SMU2",157,0)
 S LA74=$$RESFID^LA7VHLU2(LA7SFAC,LA7SFAC,LA7CS)
"RTN","LA7SMU2",158,0)
 S LAHLSEGS("R4")=LA74
"RTN","LA7SMU2",159,0)
 S LAHLSEGS("R6247")=$G(LA76247)
"RTN","LA7SMU2",160,0)
 S LAHLSEGS("FSEC")=LA7FS_LA7ECH
"RTN","LA7SMU2",161,0)
 S LAHLSEGS("MSH",3)=LA7SAP
"RTN","LA7SMU2",162,0)
 S LAHLSEGS("MSH",4)=LA7SFAC
"RTN","LA7SMU2",163,0)
 S LAHLSEGS("MSH",5)=LA7RAP
"RTN","LA7SMU2",164,0)
 S LAHLSEGS("MSH",6)=LA7RFAC
"RTN","LA7SMU2",165,0)
 S LAHLSEGS("MSH",11)=$G(LA7MID)
"RTN","LA7SMU2",166,0)
 S LAHLSEGS("OBX",3)=LA7CODE_LA7CS_LA7TXT_LA7CS_"SCT"
"RTN","LA7SMU2",167,0)
 ;
"RTN","LA7SMU2",168,0)
 S LA7IEN=$$EN^LRSCTX(LA7FILE,LA7TXT,LA7CODE,.LAHLSEGS,.LA7ERROR,0)
"RTN","LA7SMU2",169,0)
 ;
"RTN","LA7SMU2",170,0)
 Q LA7IEN
"RTN","LA7SMU2A")
0^25^B11988192
"RTN","LA7SMU2A",1,0)
LA7SMU2A ;DALOI/JMC - Shipping Manifest Utility (Cont'd) ;11/17/11  09:07
"RTN","LA7SMU2A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;*74**;Sep 27, 1994;Build 229
"RTN","LA7SMU2A",3,0)
 ;
"RTN","LA7SMU2A",4,0)
 Q
"RTN","LA7SMU2A",5,0)
 ;
"RTN","LA7SMU2A",6,0)
 ;
"RTN","LA7SMU2A",7,0)
BINDX ; Build index of tests for a shipping configuration.
"RTN","LA7SMU2A",8,0)
 ; Called from LA7SMU2.
"RTN","LA7SMU2A",9,0)
 ;
"RTN","LA7SMU2A",10,0)
 N I,J,K,LA760,LA761,LA762,LA76205,LA764,LA7HL,LA7NLT,LA7NLTN,LA7TC,LA7X,LA7Y,LA7Z,LRSS
"RTN","LA7SMU2A",11,0)
 S LA7X=0
"RTN","LA7SMU2A",12,0)
 F  S LA7X=$O(^LAHM(62.9,LA7SCFG,60,LA7X)) Q:'LA7X  D BLD
"RTN","LA7SMU2A",13,0)
 Q
"RTN","LA7SMU2A",14,0)
 ;
"RTN","LA7SMU2A",15,0)
 ;
"RTN","LA7SMU2A",16,0)
BLD ; Build TMP global for a test
"RTN","LA7SMU2A",17,0)
 ; Called from above
"RTN","LA7SMU2A",18,0)
 ;
"RTN","LA7SMU2A",19,0)
 K LA761,LA762,LA76205,LA764,LA7NLT,LA7NLTN,LA7TC,LA7Y,LA7Z
"RTN","LA7SMU2A",20,0)
 ;
"RTN","LA7SMU2A",21,0)
 S LA7X(0)=$G(^LAHM(62.9,LA7SCFG,60,LA7X,0))
"RTN","LA7SMU2A",22,0)
 S LA7X(5)=$G(^LAHM(62.9,LA7SCFG,60,LA7X,5))
"RTN","LA7SMU2A",23,0)
 ;
"RTN","LA7SMU2A",24,0)
 ; Laboratory test/collection sample.
"RTN","LA7SMU2A",25,0)
 S LA760=$P(LA7X(0),"^"),LA761=+$P(LA7X(0),"^",3),LA762=+$P(LA7X(0),"^",9),LRSS=$P(^LAB(60,LA760,0),"^",4)
"RTN","LA7SMU2A",26,0)
 I 'LA761 S LA761=$$GET1^DIQ(62,LA762_",",2,"I")
"RTN","LA7SMU2A",27,0)
 I LA761,'LA762 S LA762=+$$GET1^DIQ(61,LA761_",",4.1,"I")
"RTN","LA7SMU2A",28,0)
 ; Incomplete entry if in CH or BB subscript.
"RTN","LA7SMU2A",29,0)
 I 'LA762,"BBCH"[LRSS Q
"RTN","LA7SMU2A",30,0)
 I 'LA761,"BBCH"[LRSS Q
"RTN","LA7SMU2A",31,0)
 ;
"RTN","LA7SMU2A",32,0)
 ; Test urgency/HL7 priority code.
"RTN","LA7SMU2A",33,0)
 S LA76205=$P(LA7X(0),"^",4),LA76205("HL")=""
"RTN","LA7SMU2A",34,0)
 I LA76205 S LA76205("HL")=$$GET1^DIQ(62.05,LA76205_",","LEDI HL7:HL7 ABBR")
"RTN","LA7SMU2A",35,0)
 ;
"RTN","LA7SMU2A",36,0)
 ; Use HL7 specimen code if using table 0070, SNOMED if SCT and mapping in 62.9 for local.
"RTN","LA7SMU2A",37,0)
 S LA761("HL70070")=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR")
"RTN","LA7SMU2A",38,0)
 S LA761("SCT")=$P($$IEN2SCT^LA7VHLU6(61,LA761,DT),"^")
"RTN","LA7SMU2A",39,0)
 I $P(LA7X(5),"^",3)'="" D
"RTN","LA7SMU2A",40,0)
 . I $P(LA7X(5),"^",6)="" S $P(LA7X(5),"^",6)="L"
"RTN","LA7SMU2A",41,0)
 . S LA761($P(LA7X(5),"^",6))=$P(LA7X(5),"^",3)
"RTN","LA7SMU2A",42,0)
 ;
"RTN","LA7SMU2A",43,0)
 ; Use SNOMED CT and local mapping in 62.9 for collection sample.
"RTN","LA7SMU2A",44,0)
 S LA762("SCT")=$P($$IEN2SCT^LA7VHLU6(62,LA762,DT),"^")
"RTN","LA7SMU2A",45,0)
 I $P(LA7X(5),"^",7)'="" D
"RTN","LA7SMU2A",46,0)
 . I $P(LA7X(5),"^",9)="" S $P(LA7X(5),"^",9)="L"
"RTN","LA7SMU2A",47,0)
 . S LA762($P(LA7X(5),"^",9))=$P(LA7X(5),"^",7)
"RTN","LA7SMU2A",48,0)
 ;
"RTN","LA7SMU2A",49,0)
 ; File #64 ien/NLT code/NLT code test name.
"RTN","LA7SMU2A",50,0)
 ; Use NLT code if using VA coding else use non-VA test order code.
"RTN","LA7SMU2A",51,0)
 S LA764=+$$GET1^DIQ(60,LA760_",",64,"I")
"RTN","LA7SMU2A",52,0)
 I 'LA764 Q
"RTN","LA7SMU2A",53,0)
 S LA7TC("99VA64")=$$GET1^DIQ(64,LA764_",",1,"I")
"RTN","LA7SMU2A",54,0)
 S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7SMU2A",55,0)
 I $P(LA7X(5),"^")'="" D
"RTN","LA7SMU2A",56,0)
 . I $P(LA7X(5),"^",5)="" S $P(LA7X(5),"^",5)="L"
"RTN","LA7SMU2A",57,0)
 . S LA7TC($P(LA7X(5),"^",5))=$P(LA7X(5),"^")
"RTN","LA7SMU2A",58,0)
 ;
"RTN","LA7SMU2A",59,0)
 ; Set TMP global with information
"RTN","LA7SMU2A",60,0)
 S LA7Y=LA760_"^"_LA761_"^"_LA762_"^"_LA76205_"^"_LA7TC("99VA64")_"^"_LA7NLTN
"RTN","LA7SMU2A",61,0)
 S I=""
"RTN","LA7SMU2A",62,0)
 F  S I=$O(LA7TC(I)) Q:I=""  D
"RTN","LA7SMU2A",63,0)
 . S K=""
"RTN","LA7SMU2A",64,0)
 . F  S K=$O(LA762(K)) Q:K=""  I LA762(K)'=""  D
"RTN","LA7SMU2A",65,0)
 . . S J=""
"RTN","LA7SMU2A",66,0)
 . . F  S J=$O(LA761(J)) Q:J=""  I LA761(J)'="" D
"RTN","LA7SMU2A",67,0)
 . . . S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),J,LA761(J),0,K,LA762(K))=LA7Y
"RTN","LA7SMU2A",68,0)
 . . . I LA76205("HL")'="" S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),J,LA761(J),LA76205("HL"),K,LA762(K))=LA7Y
"RTN","LA7SMU2A",69,0)
 . . I 'LA761,LRSS="MI" D  Q
"RTN","LA7SMU2A",70,0)
 . . . S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),0,0,0,K,LA762(K))=LA7Y
"RTN","LA7SMU2A",71,0)
 . . . I LA76205("HL")'="" S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),0,0,LA76205("HL"),K,LA762(K))=LA7Y
"RTN","LA7SMU2A",72,0)
 . . I 'LA761,"SPCYEM"[LRSS D
"RTN","LA7SMU2A",73,0)
 . . . S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),"HL70070","XXX",0,K,LA762(K))=LA7Y
"RTN","LA7SMU2A",74,0)
 . . . I LA76205("HL")'="" S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),"HL70070","XXX",LA76205("HL"),K,LA762(K))=LA7Y
"RTN","LA7SMU2A",75,0)
 . I LRSS="MI" S LA7Z=LA7Y,$P(LA7Z,"^",2,4)="^^",^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),0,0,0,0,0)=LA7Z
"RTN","LA7SMU2A",76,0)
 . S J=""
"RTN","LA7SMU2A",77,0)
 . F  S J=$O(LA761(J)) Q:J=""  I LA761(J)'="",LRSS?1(1"CH",1"MI") D
"RTN","LA7SMU2A",78,0)
 . . I LA76205("HL")'="" S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),J,LA761(J),LA76205("HL"))=LA7Y
"RTN","LA7SMU2A",79,0)
 . . E  S ^TMP("LA7TC",$J,LA7SCFG,I,LA7TC(I),J,LA761(J))=LA7Y
"RTN","LA7SMU2A",80,0)
 ;
"RTN","LA7SMU2A",81,0)
 Q
"RTN","LA7SRPT")
0^88^B91984
"RTN","LA7SRPT",1,0)
LA7SRPT ;DALOI/JDB - SHIPPING MGR REPORTS ;03/07/12  08:52
"RTN","LA7SRPT",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SRPT",3,0)
 ;
"RTN","LA7SRPT",4,0)
 ; Top Level routine for option calls
"RTN","LA7SRPT",5,0)
 Q
"RTN","LA7SRPT",6,0)
 ;
"RTN","LA7SRPT",7,0)
SHPCFG ;
"RTN","LA7SRPT",8,0)
 ; Display a Shipping Configuration (or MSG CFG)
"RTN","LA7SRPT",9,0)
 D EN^LA7SRPT1
"RTN","LA7SRPT",10,0)
 Q
"RTN","LA7SRPT",11,0)
 ;
"RTN","LA7SRPT",12,0)
CU ;
"RTN","LA7SRPT",13,0)
 ; Display Code Usage
"RTN","LA7SRPT",14,0)
 D ASK^LA7SRPT2
"RTN","LA7SRPT",15,0)
 Q
"RTN","LA7SRPT",16,0)
 ;
"RTN","LA7SRPT",17,0)
SCTOVER ;
"RTN","LA7SRPT",18,0)
 ; Display #62.48 SCT Override info
"RTN","LA7SRPT",19,0)
 D EN^LA7SRPT4
"RTN","LA7SRPT",20,0)
 Q
"RTN","LA7SRPT1")
0^89^B69536146
"RTN","LA7SRPT1",1,0)
LA7SRPT1 ;DALOI/JDB - SHIPPING MGR REPORTS (CONT) ; 3/13/07 3:00pm
"RTN","LA7SRPT1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SRPT1",3,0)
 ;
"RTN","LA7SRPT1",4,0)
 Q
"RTN","LA7SRPT1",5,0)
 ;
"RTN","LA7SRPT1",6,0)
EN ;
"RTN","LA7SRPT1",7,0)
 ; Displays data for a SHPCFG (#62.9) or a MSG PARAM (#62.48)
"RTN","LA7SRPT1",8,0)
 ; entry.  Displays all #62.9s for a #62.48 .
"RTN","LA7SRPT1",9,0)
 ; Prompts for #62.48 or #62.9, Only SCT overrides, then device.
"RTN","LA7SRPT1",10,0)
 N X,Y,%X,%Y,DIC,DIR,R6248,R629,POP,FLAGS,DTOUT,DUOUT,DIROUT,QUE,RTN
"RTN","LA7SRPT1",11,0)
 S (R629,R6248)=0
"RTN","LA7SRPT1",12,0)
 S FLAGS=""
"RTN","LA7SRPT1",13,0)
 S DIC=62.48
"RTN","LA7SRPT1",14,0)
 S DIC(0)="AENOQV"
"RTN","LA7SRPT1",15,0)
 D ^DIC
"RTN","LA7SRPT1",16,0)
 Q:$D(DTOUT)
"RTN","LA7SRPT1",17,0)
 Q:$D(DUOUT)
"RTN","LA7SRPT1",18,0)
 I Y>0 S R6248=+Y
"RTN","LA7SRPT1",19,0)
 I 'R6248 D  ;
"RTN","LA7SRPT1",20,0)
 . K DIC
"RTN","LA7SRPT1",21,0)
 . S DIC=62.9
"RTN","LA7SRPT1",22,0)
 . S DIC(0)="AENOQV"
"RTN","LA7SRPT1",23,0)
 . D ^DIC
"RTN","LA7SRPT1",24,0)
 . I Y>0 S R629=+Y
"RTN","LA7SRPT1",25,0)
 Q:$D(DTOUT)
"RTN","LA7SRPT1",26,0)
 Q:$D(DUOUT)
"RTN","LA7SRPT1",27,0)
 I 'R6248 I 'R629 Q
"RTN","LA7SRPT1",28,0)
 K DIR
"RTN","LA7SRPT1",29,0)
 S DIR(0)="YO"
"RTN","LA7SRPT1",30,0)
 S DIR("A")="Only show SCT overrides? "
"RTN","LA7SRPT1",31,0)
 S DIR("B")="N"
"RTN","LA7SRPT1",32,0)
 D ^DIR
"RTN","LA7SRPT1",33,0)
 I Y="^"!(Y="") Q
"RTN","LA7SRPT1",34,0)
 I Y S $P(FLAGS,"O",2)="" ;insert "O"
"RTN","LA7SRPT1",35,0)
 I 'Y S FLAGS=$TR(FLAGS,"O","") ;remove "O"
"RTN","LA7SRPT1",36,0)
 ;
"RTN","LA7SRPT1",37,0)
 S RTN="MAIN^LA7SRPT1("""_R629_""","""_R6248_""","""_FLAGS_""")"
"RTN","LA7SRPT1",38,0)
 S QUE=$$QUE^LRUTIL(RTN,"SHIPPING CONFIG PRINT")
"RTN","LA7SRPT1",39,0)
 Q:QUE=-1
"RTN","LA7SRPT1",40,0)
 Q:QUE>0
"RTN","LA7SRPT1",41,0)
 D MAIN(R629,R6248,FLAGS)
"RTN","LA7SRPT1",42,0)
 I $E(IOST,1,2)="C-" D MORE^LRUTIL()
"RTN","LA7SRPT1",43,0)
 D HOME^%ZIS
"RTN","LA7SRPT1",44,0)
 Q
"RTN","LA7SRPT1",45,0)
 ;
"RTN","LA7SRPT1",46,0)
MAIN(R629,R6248,FLAGS) ;
"RTN","LA7SRPT1",47,0)
 ; Setup variables and branch to proper display method.
"RTN","LA7SRPT1",48,0)
 ; private method
"RTN","LA7SRPT1",49,0)
 ; Inputs
"RTN","LA7SRPT1",50,0)
 ;   R629 : <opt> #62.9 IEN (need R629 or R6248)
"RTN","LA7SRPT1",51,0)
 ;  R6248 : <opt> #62.48 IEN
"RTN","LA7SRPT1",52,0)
 ;  FLAGS : <opt> Flags (O=Only print SCT Overrides)
"RTN","LA7SRPT1",53,0)
 ;
"RTN","LA7SRPT1",54,0)
 N STOP,PGDATA
"RTN","LA7SRPT1",55,0)
 S R629=$G(R629)
"RTN","LA7SRPT1",56,0)
 S R6248=$G(R6248)
"RTN","LA7SRPT1",57,0)
 S FLAGS=$G(FLAGS)
"RTN","LA7SRPT1",58,0)
 U IO
"RTN","LA7SRPT1",59,0)
 S STOP=0
"RTN","LA7SRPT1",60,0)
 S PGDATA("RPTDT")=$$NOW^XLFDT() ;Report Date
"RTN","LA7SRPT1",61,0)
 S PGDATA("PGNUM")=1 ;Page Number
"RTN","LA7SRPT1",62,0)
 S PGDATA("BM")=0 ;Bottom Margin (lines from bottom)
"RTN","LA7SRPT1",63,0)
 S PGDATA("HDR")="D HDR^LA7SRPT1" ;Header exec code
"RTN","LA7SRPT1",64,0)
 S PGDATA("FTR")="D FTR^LA7SRPT1" ; Footer exec code
"RTN","LA7SRPT1",65,0)
 D HDR^LA7SRPT1
"RTN","LA7SRPT1",66,0)
 I R629 D SHPCFG(R629,FLAGS,.STOP)
"RTN","LA7SRPT1",67,0)
 I R6248 D LOOP(R6248,FLAGS,.STOP)
"RTN","LA7SRPT1",68,0)
 ; Write last footer if needed
"RTN","LA7SRPT1",69,0)
 I 'STOP I '$G(PGDATA("WFTR")) D  ;
"RTN","LA7SRPT1",70,0)
 . I $G(PGDATA("FTR"))="" Q
"RTN","LA7SRPT1",71,0)
 . I $E($G(IOST),1,2)'="C-" D  ;
"RTN","LA7SRPT1",72,0)
 . . N I,BM
"RTN","LA7SRPT1",73,0)
 . . S BM=$G(PGDATA("BM"))
"RTN","LA7SRPT1",74,0)
 . . F I=$Y+1:1:($G(IOSL,60)-BM-1) W !
"RTN","LA7SRPT1",75,0)
 . X PGDATA("FTR")
"RTN","LA7SRPT1",76,0)
 ;
"RTN","LA7SRPT1",77,0)
 I $D(ZTQUEUED) D  ;
"RTN","LA7SRPT1",78,0)
 . S ZTREQ="@"
"RTN","LA7SRPT1",79,0)
 D ^%ZISC
"RTN","LA7SRPT1",80,0)
 Q
"RTN","LA7SRPT1",81,0)
 ;
"RTN","LA7SRPT1",82,0)
LOOP(R6248,FLAGS,STOP) ;
"RTN","LA7SRPT1",83,0)
 ; Displays all SHP CFGs (#62.9) for a MSG CFG (#62.48) entry
"RTN","LA7SRPT1",84,0)
 ; private method
"RTN","LA7SRPT1",85,0)
 ; Inputs
"RTN","LA7SRPT1",86,0)
 ; R6248 : #62.48 IEN
"RTN","LA7SRPT1",87,0)
 ; FLAGS : <opt> O=Only show tests with SCT override
"RTN","LA7SRPT1",88,0)
 ;  STOP : <byref> See Outputs
"RTN","LA7SRPT1",89,0)
 ; Outputs
"RTN","LA7SRPT1",90,0)
 ;  STOP : User wants to stop display -- 1=stop
"RTN","LA7SRPT1",91,0)
 ;
"RTN","LA7SRPT1",92,0)
 N R629
"RTN","LA7SRPT1",93,0)
 S R629=0
"RTN","LA7SRPT1",94,0)
 F  S R629=$O(^LAHM(62.9,"AC",R6248,R629)) Q:'R629  D  Q:STOP  ;
"RTN","LA7SRPT1",95,0)
 . D SHPCFG(R629,FLAGS,.STOP)
"RTN","LA7SRPT1",96,0)
 . Q:STOP
"RTN","LA7SRPT1",97,0)
 . I $O(^LAHM(62.9,"AC",R6248,R629)) W !!
"RTN","LA7SRPT1",98,0)
 Q
"RTN","LA7SRPT1",99,0)
 ;
"RTN","LA7SRPT1",100,0)
SHPCFG(R629,FLAGS,STOP) ;
"RTN","LA7SRPT1",101,0)
 ; Displays SHIPPING CONFIG (#62.9) entry info
"RTN","LA7SRPT1",102,0)
 ; private method
"RTN","LA7SRPT1",103,0)
 ; Inputs
"RTN","LA7SRPT1",104,0)
 ;  R629 : #62.9 IEN
"RTN","LA7SRPT1",105,0)
 ; FLAGS : <opt> O=Only show tests with SCT override
"RTN","LA7SRPT1",106,0)
 ;  STOP : <byref> See Outputs
"RTN","LA7SRPT1",107,0)
 ; Outputs
"RTN","LA7SRPT1",108,0)
 ;  STOP : User wants to stop display -- 1=stop
"RTN","LA7SRPT1",109,0)
 ;
"RTN","LA7SRPT1",110,0)
 N D629,D629001,D60,D64,R629001,R6248,R62482,R60,R64,X,Z,SCT,SPEC,SMPL
"RTN","LA7SRPT1",111,0)
 N CNT,WTEST,ISMAPPED,LAIEN,STR
"RTN","LA7SRPT1",112,0)
 S FLAGS=$G(FLAGS)
"RTN","LA7SRPT1",113,0)
 S STOP=$G(STOP)
"RTN","LA7SRPT1",114,0)
 S CNT=0
"RTN","LA7SRPT1",115,0)
 D GETFLDS(62.9,R629,".01;.07",.D629)
"RTN","LA7SRPT1",116,0)
 Q:'$D(D629)
"RTN","LA7SRPT1",117,0)
 S R6248=$G(D629(.07,"I"))
"RTN","LA7SRPT1",118,0)
 Q:'R6248
"RTN","LA7SRPT1",119,0)
 D NP Q:STOP
"RTN","LA7SRPT1",120,0)
 W !,"Shipping Configuration: ",D629(.01,"E")
"RTN","LA7SRPT1",121,0)
 D NP Q:STOP
"RTN","LA7SRPT1",122,0)
 I FLAGS["O" I '$D(^LAHM(62.48,R6248,"SCT","B")) D  Q  ;
"RTN","LA7SRPT1",123,0)
 . W !?5,"No SCT overrides in ",D629(.07,"E")
"RTN","LA7SRPT1",124,0)
 ;
"RTN","LA7SRPT1",125,0)
 D NP Q:STOP
"RTN","LA7SRPT1",126,0)
 S R629001=0
"RTN","LA7SRPT1",127,0)
 F  S R629001=$O(^LAHM(62.9,R629,60,R629001)) Q:'R629001  D  Q:STOP  ;
"RTN","LA7SRPT1",128,0)
 . S ISMAPPED=0
"RTN","LA7SRPT1",129,0)
 . S WTEST=0 ;wrote test's header
"RTN","LA7SRPT1",130,0)
 . K D629001
"RTN","LA7SRPT1",131,0)
 . S LAIEN=R629001_","_R629_","
"RTN","LA7SRPT1",132,0)
 . D GETFLDS(62.9001,LAIEN,".01;.03;.09;",.D629001)
"RTN","LA7SRPT1",133,0)
 . S LAIEN=R629001_","_R629_","
"RTN","LA7SRPT1",134,0)
 . D GETFLDS(62.9001,LAIEN,".01;.03;.09;5.3;5.4;5.6;5.7;5.8;5.9;5.1;5.2;5.5",.D629001)
"RTN","LA7SRPT1",135,0)
 . ;S D629001(.01,"E")=D629001(.01,"E")_"1234 56789 123 23345667533 123.2234 4567543 555 6675433 "
"RTN","LA7SRPT1",136,0)
 . D NP Q:STOP
"RTN","LA7SRPT1",137,0)
 . I '$D(D629001) D  Q  ;
"RTN","LA7SRPT1",138,0)
 . . W !?8,"No Tests for this configuration."
"RTN","LA7SRPT1",139,0)
 . S R60=D629001(.01,"I")
"RTN","LA7SRPT1",140,0)
 . K D60
"RTN","LA7SRPT1",141,0)
 . D GETFLDS(60,R60,".01;64",.D60)
"RTN","LA7SRPT1",142,0)
 . S R64=$G(D60(64,"I"))
"RTN","LA7SRPT1",143,0)
 . K D64
"RTN","LA7SRPT1",144,0)
 . I R64 D  ;
"RTN","LA7SRPT1",145,0)
 . . D GETFLDS(64,R64,".01;1",.D64)
"RTN","LA7SRPT1",146,0)
 . I FLAGS'["O" D  ;
"RTN","LA7SRPT1",147,0)
 . . I CNT>0 W !
"RTN","LA7SRPT1",148,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",149,0)
 . . D WTEST S WTEST=1
"RTN","LA7SRPT1",150,0)
 . ;
"RTN","LA7SRPT1",151,0)
 . D NP Q:STOP
"RTN","LA7SRPT1",152,0)
 . S SPEC=$G(D629001(.03,"I"))
"RTN","LA7SRPT1",153,0)
 . S SMPL=$G(D629001(.09,"I"))
"RTN","LA7SRPT1",154,0)
 . I SPEC D  ;
"RTN","LA7SRPT1",155,0)
 . . S X=SPEC_";LAB(61,"
"RTN","LA7SRPT1",156,0)
 . . S R62482=$$ISMAPPED(R6248,X)
"RTN","LA7SRPT1",157,0)
 . . I FLAGS["O" Q:'R62482
"RTN","LA7SRPT1",158,0)
 . . I R62482 S ISMAPPED=1
"RTN","LA7SRPT1",159,0)
 . . I 'WTEST D  ;
"RTN","LA7SRPT1",160,0)
 . . . D NP Q:STOP
"RTN","LA7SRPT1",161,0)
 . . . I CNT>0 W !
"RTN","LA7SRPT1",162,0)
 . . . D NP Q:STOP
"RTN","LA7SRPT1",163,0)
 . . . D WTEST S WTEST=1
"RTN","LA7SRPT1",164,0)
 . . ;
"RTN","LA7SRPT1",165,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",166,0)
 . . W !?4,"Specimen: " ;,D629001(.03,"E")
"RTN","LA7SRPT1",167,0)
 . . S STR=D629001(.03,"E")
"RTN","LA7SRPT1",168,0)
 . . S SCT=$$GETSCT^LRSCT(61,SPEC)
"RTN","LA7SRPT1",169,0)
 . . I SCT'="" S STR=STR_" ("_SCT_" "_$$GETPREF^LRSCT(SCT)_")"
"RTN","LA7SRPT1",170,0)
 . . D WRAP(STR,15)
"RTN","LA7SRPT1",171,0)
 . . S STR=$G(D629001(5.3,"E"),"")_" | "_$G(D629001(5.4,"E"),"")_" | "_$G(D629001(5.6,"E"),"")
"RTN","LA7SRPT1",172,0)
 . . I $TR(STR,"| ","")'="" W !?6,"HL7 Info: ",STR
"RTN","LA7SRPT1",173,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",174,0)
 . . Q:'R62482
"RTN","LA7SRPT1",175,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",176,0)
 . . S SCT=$$GETMAP(R6248,R62482)
"RTN","LA7SRPT1",177,0)
 . . S STR=SCT_" "_$$GETPREF^LRSCT(SCT)
"RTN","LA7SRPT1",178,0)
 . . W !?6,"SCT override: "
"RTN","LA7SRPT1",179,0)
 . . D WRAP(STR,21)
"RTN","LA7SRPT1",180,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",181,0)
 . ;
"RTN","LA7SRPT1",182,0)
 . D NP Q:STOP
"RTN","LA7SRPT1",183,0)
 . ;
"RTN","LA7SRPT1",184,0)
 . I SMPL D  ;
"RTN","LA7SRPT1",185,0)
 . . S X=SMPL_";LAB(62,"
"RTN","LA7SRPT1",186,0)
 . . S R62482=$$ISMAPPED(R6248,X)
"RTN","LA7SRPT1",187,0)
 . . I FLAGS["O" Q:'R62482
"RTN","LA7SRPT1",188,0)
 . . S ISMAPPED=1
"RTN","LA7SRPT1",189,0)
 . . I 'WTEST  D  ;
"RTN","LA7SRPT1",190,0)
 . . . W:CNT>0 !
"RTN","LA7SRPT1",191,0)
 . . . D NP Q:STOP
"RTN","LA7SRPT1",192,0)
 . . . D WTEST S WTEST=1
"RTN","LA7SRPT1",193,0)
 . . ;
"RTN","LA7SRPT1",194,0)
 . . W !?4,"Sample: ",D629001(.09,"E")
"RTN","LA7SRPT1",195,0)
 . . S SCT=$$GETSCT^LRSCT(62,SMPL)
"RTN","LA7SRPT1",196,0)
 . . I SCT'="" W " (",SCT," ",$$GETPREF^LRSCT(SCT),")"
"RTN","LA7SRPT1",197,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",198,0)
 . . S STR=$G(D629001(5.7,"E"),"")_" | "_$G(D629001(5.8,"E"),"")_" | "_$G(D629001(5.9,"E"),"")
"RTN","LA7SRPT1",199,0)
 . . I $TR(STR,"| ","")'="" W !?6,"HL7 Info: ",STR
"RTN","LA7SRPT1",200,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",201,0)
 . . Q:'R62482
"RTN","LA7SRPT1",202,0)
 . . S SCT=$$GETMAP(R6248,R62482)
"RTN","LA7SRPT1",203,0)
 . . W !?6,"SCT override: "
"RTN","LA7SRPT1",204,0)
 . . S STR=SCT_" "_$$GETPREF^LRSCT(SCT)
"RTN","LA7SRPT1",205,0)
 . . D WRAP(STR,21)
"RTN","LA7SRPT1",206,0)
 . . D NP Q:STOP
"RTN","LA7SRPT1",207,0)
 . ;
"RTN","LA7SRPT1",208,0)
 . D NP Q:STOP
"RTN","LA7SRPT1",209,0)
 . I FLAGS'["O" S CNT=CNT+1
"RTN","LA7SRPT1",210,0)
 . I FLAGS["O" I ISMAPPED S CNT=CNT+1
"RTN","LA7SRPT1",211,0)
 Q
"RTN","LA7SRPT1",212,0)
 ;
"RTN","LA7SRPT1",213,0)
WTEST ;
"RTN","LA7SRPT1",214,0)
 ; Displays the "top-level" test info
"RTN","LA7SRPT1",215,0)
 ; Expects the D64 and D629001 arrays
"RTN","LA7SRPT1",216,0)
 ; private method
"RTN","LA7SRPT1",217,0)
 N STR
"RTN","LA7SRPT1",218,0)
 D NP Q:STOP
"RTN","LA7SRPT1",219,0)
 W !?2,"Test: ",D629001(.01,"E")
"RTN","LA7SRPT1",220,0)
 D NP Q:STOP
"RTN","LA7SRPT1",221,0)
 I $D(D64) W !?2,D64(.01,"E")," (",D64(1,"E"),")"
"RTN","LA7SRPT1",222,0)
 D NP Q:STOP
"RTN","LA7SRPT1",223,0)
 ;test order code
"RTN","LA7SRPT1",224,0)
 S STR=$G(D629001(5.1,"E"))_" | "_$G(D629001(5.2,"E"))_" | "_$G(D629001(5.5,"E"))
"RTN","LA7SRPT1",225,0)
 I $TR(STR," |","")'="" W !,?2,"Order Code: ",STR
"RTN","LA7SRPT1",226,0)
 D NP Q:STOP
"RTN","LA7SRPT1",227,0)
 Q
"RTN","LA7SRPT1",228,0)
 ;
"RTN","LA7SRPT1",229,0)
GETFLDS(LAFILE,LAIEN,LAFLDS,DATA) ;
"RTN","LA7SRPT1",230,0)
 ; Fields retriever
"RTN","LA7SRPT1",231,0)
 ; Inputs
"RTN","LA7SRPT1",232,0)
 ;  LAFILE : File #
"RTN","LA7SRPT1",233,0)
 ;   LAIEN : IEN
"RTN","LA7SRPT1",234,0)
 ;  LAFLDS : Field #s to retrieve ie ".01;.02;1"
"RTN","LA7SRPT1",235,0)
 ;    DATA : <byref> See Outputs
"RTN","LA7SRPT1",236,0)
 ; Outputs
"RTN","LA7SRPT1",237,0)
 ;    DATA : Array that holds the internal and external field values
"RTN","LA7SRPT1",238,0)
 ;         :  ie  DATA(.01,"I")=1  DATA(.01,"E")="value"
"RTN","LA7SRPT1",239,0)
 N DIERR,LAMSG,LAFDA,LATARG
"RTN","LA7SRPT1",240,0)
 S LAFILE=$G(LAFILE)
"RTN","LA7SRPT1",241,0)
 S LAIEN=$G(LAIEN)
"RTN","LA7SRPT1",242,0)
 S:LAIEN'["," LAIEN=LAIEN_","
"RTN","LA7SRPT1",243,0)
 K DATA
"RTN","LA7SRPT1",244,0)
 D GETS^DIQ(LAFILE,LAIEN,LAFLDS,"EIN","LATARG","LAMSG")
"RTN","LA7SRPT1",245,0)
 I $D(LATARG) M DATA=LATARG(LAFILE,LAIEN)
"RTN","LA7SRPT1",246,0)
 Q
"RTN","LA7SRPT1",247,0)
 ;
"RTN","LA7SRPT1",248,0)
ISMAPPED(R6248,VARPTR) ;
"RTN","LA7SRPT1",249,0)
 ; Is this VARPTR (spec or sample) an entry in #62.482?
"RTN","LA7SRPT1",250,0)
 ; Inputs
"RTN","LA7SRPT1",251,0)
 ;  R6248 : #62.48 IEN
"RTN","LA7SRPT1",252,0)
 ; VARPTR : Pointer to file #61 or #62 -- ie "123;LAB(61,"
"RTN","LA7SRPT1",253,0)
 ; Output
"RTN","LA7SRPT1",254,0)
 ;  0 or the #62.482 IEN of the VARPTR
"RTN","LA7SRPT1",255,0)
 Q +$O(^LAHM(62.48,R6248,"SCT","B",VARPTR,0))
"RTN","LA7SRPT1",256,0)
 ;
"RTN","LA7SRPT1",257,0)
GETMAP(R6248,R62482) ;
"RTN","LA7SRPT1",258,0)
 ; Returns the SCT code in #62.482
"RTN","LA7SRPT1",259,0)
 N DIERR,LAMSG,LAIEN
"RTN","LA7SRPT1",260,0)
 S LAIEN=R62482_","_R6248_","
"RTN","LA7SRPT1",261,0)
 Q $$GET1^DIQ(62.482,LAIEN,.02,"LAMSG")
"RTN","LA7SRPT1",262,0)
 ;
"RTN","LA7SRPT1",263,0)
HDR ;
"RTN","LA7SRPT1",264,0)
 ; Header
"RTN","LA7SRPT1",265,0)
 ; Expects PGDATA array
"RTN","LA7SRPT1",266,0)
 ; private method
"RTN","LA7SRPT1",267,0)
 N STR,RPTDT,PGNUM
"RTN","LA7SRPT1",268,0)
 S RPTDT=$G(PGDATA("RPTDT"))
"RTN","LA7SRPT1",269,0)
 I RPTDT="" D  ;
"RTN","LA7SRPT1",270,0)
 . S RPTDT=$$NOW^XLFDT()
"RTN","LA7SRPT1",271,0)
 . S PGDATA("RPTDT")=RPTDT
"RTN","LA7SRPT1",272,0)
 S PGNUM=$G(PGDATA("PGNUM"))
"RTN","LA7SRPT1",273,0)
 I PGNUM<1 D  ;
"RTN","LA7SRPT1",274,0)
 . S PGNUM=1
"RTN","LA7SRPT1",275,0)
 . S PGDATA("PGNUM")=PGNUM
"RTN","LA7SRPT1",276,0)
 ;
"RTN","LA7SRPT1",277,0)
 W !,"SHIPPING CONFIGURATION DISPLAY  "
"RTN","LA7SRPT1",278,0)
 S STR="Printed "_$$FMTE^XLFDT(RPTDT,"M")
"RTN","LA7SRPT1",279,0)
 S STR=STR_"   Page "_$G(PGNUM,1)
"RTN","LA7SRPT1",280,0)
 W ?IOM-$L(STR)-2,STR
"RTN","LA7SRPT1",281,0)
 W !,$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7SRPT1",282,0)
 Q
"RTN","LA7SRPT1",283,0)
 ;
"RTN","LA7SRPT1",284,0)
FTR ;
"RTN","LA7SRPT1",285,0)
 ; Footer
"RTN","LA7SRPT1",286,0)
 ; private method
"RTN","LA7SRPT1",287,0)
 Q
"RTN","LA7SRPT1",288,0)
 ;
"RTN","LA7SRPT1",289,0)
NP ;
"RTN","LA7SRPT1",290,0)
 ; New Page handler
"RTN","LA7SRPT1",291,0)
 ; convenience method
"RTN","LA7SRPT1",292,0)
 D NP^LRUTIL(.STOP,.PGDATA)
"RTN","LA7SRPT1",293,0)
 Q
"RTN","LA7SRPT1",294,0)
 ;
"RTN","LA7SRPT1",295,0)
WRAP(STR,LM,NL,ABORT,PGDATA) ;
"RTN","LA7SRPT1",296,0)
 ; Formats (wraps) and prints a string
"RTN","LA7SRPT1",297,0)
 ; Depending on desired output, caller may need to position
"RTN","LA7SRPT1",298,0)
 ; the cursor at desired column (W ?X) before calling WRAP.
"RTN","LA7SRPT1",299,0)
 ; Inputs
"RTN","LA7SRPT1",300,0)
 ;  STR : The string to format
"RTN","LA7SRPT1",301,0)
 ;   LM : Left Margin (align to column X)
"RTN","LA7SRPT1",302,0)
 ;   NL : New Line?  0=no 1=yes (Write a new line first)
"RTN","LA7SRPT1",303,0)
 ;
"RTN","LA7SRPT1",304,0)
 N I,J,X,STR2,DIWL,DIWR,DIWF,SPLIT,CHARS,Z
"RTN","LA7SRPT1",305,0)
 S STR=$G(STR)
"RTN","LA7SRPT1",306,0)
 S LM=$G(LM,1)
"RTN","LA7SRPT1",307,0)
 S NL=$G(NL)
"RTN","LA7SRPT1",308,0)
 S ABORT=$G(ABORT)
"RTN","LA7SRPT1",309,0)
 K ^UTILITY($J,"W") ;per FM
"RTN","LA7SRPT1",310,0)
 S CHARS=" .-!+""" ; chars to split on
"RTN","LA7SRPT1",311,0)
 S X=STR
"RTN","LA7SRPT1",312,0)
 ; display 1st line manually since DIWW doesnt work well here
"RTN","LA7SRPT1",313,0)
 S STR2=$E(STR,1,IOM-$X)
"RTN","LA7SRPT1",314,0)
 S X=$E(STR,$L(STR2)+1,$L(STR2)+1) ;next char
"RTN","LA7SRPT1",315,0)
 I CHARS'[X D  ; chars to break on
"RTN","LA7SRPT1",316,0)
 . S SPLIT=0
"RTN","LA7SRPT1",317,0)
 . F I=$L(STR2):-1:1 S X=$E(STR2,I,I) I CHARS[X S SPLIT=1 Q
"RTN","LA7SRPT1",318,0)
 . I SPLIT S STR2=$E(STR2,1,I)
"RTN","LA7SRPT1",319,0)
 I NL W !
"RTN","LA7SRPT1",320,0)
 W STR2
"RTN","LA7SRPT1",321,0)
 S STR2=$E(STR,$L(STR2)+1,$L(STR))
"RTN","LA7SRPT1",322,0)
 S STR2=$$TRIM^XLFSTR(STR2,"LR"," ")
"RTN","LA7SRPT1",323,0)
 Q:STR2=""
"RTN","LA7SRPT1",324,0)
 S X=STR2
"RTN","LA7SRPT1",325,0)
 S DIWL=LM
"RTN","LA7SRPT1",326,0)
 S:DIWL<1 DIWL=1
"RTN","LA7SRPT1",327,0)
 S DIWR=IOM
"RTN","LA7SRPT1",328,0)
 S DIWF=""
"RTN","LA7SRPT1",329,0)
 D ^DIWP
"RTN","LA7SRPT1",330,0)
 ; DIWW forces an extra linefeed at end so printout manually
"RTN","LA7SRPT1",331,0)
 S I=$O(^UTILITY($J,"W",0))
"RTN","LA7SRPT1",332,0)
 S J=0
"RTN","LA7SRPT1",333,0)
 F  S J=$O(^UTILITY($J,"W",I,J)) Q:'J  D  Q:ABORT  ;
"RTN","LA7SRPT1",334,0)
 . S X=^UTILITY($J,"W",I,J,0)
"RTN","LA7SRPT1",335,0)
 . S X=$$TRIM^XLFSTR(X,"RL"," ")
"RTN","LA7SRPT1",336,0)
 . D NP^LRUTIL(.ABORT,.PGDATA) Q:ABORT
"RTN","LA7SRPT1",337,0)
 . W !,?LM-1,X
"RTN","LA7SRPT1",338,0)
 K ^UTILITY($J,"W")
"RTN","LA7SRPT1",339,0)
 Q
"RTN","LA7SRPT2")
0^90^B70233779
"RTN","LA7SRPT2",1,0)
LA7SRPT2 ;DALOI/JDB - CODE USAGE REPORT ;03/07/12  09:04
"RTN","LA7SRPT2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SRPT2",3,0)
 ;
"RTN","LA7SRPT2",4,0)
 Q
"RTN","LA7SRPT2",5,0)
 ;
"RTN","LA7SRPT2",6,0)
ASK ;
"RTN","LA7SRPT2",7,0)
 ; Prompts for Identifier and Coding System then performs search
"RTN","LA7SRPT2",8,0)
 N SYS,ID,DIR,DTOUT,DUOUT,DIRUT,DIROUT,QUE,POP,%ZIS,QUE,X,Y,RTN
"RTN","LA7SRPT2",9,0)
 S DIR(0)="FAO"
"RTN","LA7SRPT2",10,0)
 S DIR("A")="Enter IDENTIFIER: "
"RTN","LA7SRPT2",11,0)
 S DIR("?")="Enter an identifier (ie 123-4)"
"RTN","LA7SRPT2",12,0)
 D ^DIR
"RTN","LA7SRPT2",13,0)
 I $E(Y)="^" Q
"RTN","LA7SRPT2",14,0)
 I $TR(Y," ","")="" Q
"RTN","LA7SRPT2",15,0)
 S ID=Y
"RTN","LA7SRPT2",16,0)
 K DIR
"RTN","LA7SRPT2",17,0)
 S DIR(0)="FAO"
"RTN","LA7SRPT2",18,0)
 S DIR("A")="Enter CODING SYSTEM: "
"RTN","LA7SRPT2",19,0)
 S DIR("?")="Enter a coding system (ie LN)"
"RTN","LA7SRPT2",20,0)
 D ^DIR
"RTN","LA7SRPT2",21,0)
 I $E(Y)="^" Q
"RTN","LA7SRPT2",22,0)
 I $TR(Y," ","")="" Q
"RTN","LA7SRPT2",23,0)
 S SYS=Y
"RTN","LA7SRPT2",24,0)
 S RTN="MAIN^LA7VLCM8("""_ID_""","""_SYS_""")"
"RTN","LA7SRPT2",25,0)
 S QUE=$$QUE^LRUTIL(RTN,"PRINT CODE USAGE")
"RTN","LA7SRPT2",26,0)
 I QUE Q
"RTN","LA7SRPT2",27,0)
 ;
"RTN","LA7SRPT2",28,0)
 D MAIN(ID,SYS,"","")
"RTN","LA7SRPT2",29,0)
 I $E(IOST,1,2)="C-" D MORE^LRUTIL()
"RTN","LA7SRPT2",30,0)
 D HOME^%ZIS
"RTN","LA7SRPT2",31,0)
 Q
"RTN","LA7SRPT2",32,0)
 ;
"RTN","LA7SRPT2",33,0)
MAIN(CODE,SYS,MSGCFG,SHPCFG) ;
"RTN","LA7SRPT2",34,0)
 N STOP
"RTN","LA7SRPT2",35,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT2",36,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT2",37,0)
 S MSGCFG=$G(MSGCFG)
"RTN","LA7SRPT2",38,0)
 S SHPCFG=$G(SHPCFG)
"RTN","LA7SRPT2",39,0)
 U IO
"RTN","LA7SRPT2",40,0)
 S STOP=0
"RTN","LA7SRPT2",41,0)
 D FIND(CODE,SYS,MSGCFG,SHPCFG,.STOP)
"RTN","LA7SRPT2",42,0)
 I $D(ZTQUEUED) D  ;
"RTN","LA7SRPT2",43,0)
 . S ZTREQ="@"
"RTN","LA7SRPT2",44,0)
 D ^%ZISC
"RTN","LA7SRPT2",45,0)
 Q
"RTN","LA7SRPT2",46,0)
 ;
"RTN","LA7SRPT2",47,0)
FIND(CODE,SYS,MSGCFG,SHPCFG,STOP) ;
"RTN","LA7SRPT2",48,0)
 ; Searches and displays search results for the code/code system
"RTN","LA7SRPT2",49,0)
 ; in files #61,61.2,62,62.06,62.47,62.48,62.9
"RTN","LA7SRPT2",50,0)
 ; Inputs
"RTN","LA7SRPT2",51,0)
 ;    CODE : Code (or Identifier)
"RTN","LA7SRPT2",52,0)
 ;     SYS : Coding System (ie "SCT")
"RTN","LA7SRPT2",53,0)
 ;  MSGCFG : <opt> Message Config (#62.48)
"RTN","LA7SRPT2",54,0)
 ;  SHPCFG : <opt> Shipping Config (#62.9)
"RTN","LA7SRPT2",55,0)
 ;    STOP : <byref> See Outputs
"RTN","LA7SRPT2",56,0)
 ;
"RTN","LA7SRPT2",57,0)
 ; Outputs
"RTN","LA7SRPT2",58,0)
 ;    STOP : Has user selected to stop the display
"RTN","LA7SRPT2",59,0)
 ;
"RTN","LA7SRPT2",60,0)
 N STATUS,FOUND,DATA,X,Y,DIERR
"RTN","LA7SRPT2",61,0)
 N R61,R612,R62,R6206,R6247,R624701,R6248,R624802,R629,R629001
"RTN","LA7SRPT2",62,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT2",63,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT2",64,0)
 S MSGCFG=$G(MSGCFG)
"RTN","LA7SRPT2",65,0)
 S SHPCFG=$G(SHPCFG)
"RTN","LA7SRPT2",66,0)
 S STOP=0
"RTN","LA7SRPT2",67,0)
 S STATUS=0
"RTN","LA7SRPT2",68,0)
 I SYS="SCT" D  ;
"RTN","LA7SRPT2",69,0)
 . S X=$$CODE^LRSCT(CODE,"SCT",,"DATA")
"RTN","LA7SRPT2",70,0)
 . I X<1 W !,"Invalid SCT code"
"RTN","LA7SRPT2",71,0)
 . I X>0 W !,"SCT FSN: ",DATA("F")
"RTN","LA7SRPT2",72,0)
 ;
"RTN","LA7SRPT2",73,0)
 I SYS="LN" D  ;
"RTN","LA7SRPT2",74,0)
 . S X=$$LOINCFSN^LA7VLCM1(CODE)
"RTN","LA7SRPT2",75,0)
 . I X="" W !,"Invalid LOINC code"
"RTN","LA7SRPT2",76,0)
 . I X'="" W !,"LOINC FSN: ",X
"RTN","LA7SRPT2",77,0)
 ;
"RTN","LA7SRPT2",78,0)
 D NP(.STOP)
"RTN","LA7SRPT2",79,0)
 Q:STOP
"RTN","LA7SRPT2",80,0)
 W !!,"Checking TOPOGRAPHY file (#61)"
"RTN","LA7SRPT2",81,0)
 K FOUND
"RTN","LA7SRPT2",82,0)
 S X=$$F61^LA7SRPT3(CODE,SYS,.FOUND)
"RTN","LA7SRPT2",83,0)
 I 'X D  ;
"RTN","LA7SRPT2",84,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",85,0)
 I X D  ;
"RTN","LA7SRPT2",86,0)
 . S STATUS=1
"RTN","LA7SRPT2",87,0)
 . S R61=0
"RTN","LA7SRPT2",88,0)
 . F  S R61=$O(FOUND(1,R61)) Q:'R61  D  Q:STOP  ;
"RTN","LA7SRPT2",89,0)
 . . S DATA=$G(^LAB(61,R61,0))
"RTN","LA7SRPT2",90,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",91,0)
 . . W !,?2,"#",R61,": ",X
"RTN","LA7SRPT2",92,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",93,0)
 Q:STOP
"RTN","LA7SRPT2",94,0)
 D NP(.STOP)
"RTN","LA7SRPT2",95,0)
 Q:STOP
"RTN","LA7SRPT2",96,0)
 ;
"RTN","LA7SRPT2",97,0)
 W !!,"Checking ETIOLOGY FIELD (#61.2) file"
"RTN","LA7SRPT2",98,0)
 K FOUND
"RTN","LA7SRPT2",99,0)
 S X=$$F612^LA7SRPT3(CODE,SYS,.FOUND)
"RTN","LA7SRPT2",100,0)
 I 'X D  ;
"RTN","LA7SRPT2",101,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",102,0)
 I X D  ;
"RTN","LA7SRPT2",103,0)
 . S STATUS=1
"RTN","LA7SRPT2",104,0)
 . S R612=0
"RTN","LA7SRPT2",105,0)
 . F  S R612=$O(FOUND(1,R612)) Q:'R612  D  Q:STOP  ;
"RTN","LA7SRPT2",106,0)
 . . S DATA=$G(^LAB(61.2,R612,0))
"RTN","LA7SRPT2",107,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",108,0)
 . . W !,?2,"#",R612,": ",X
"RTN","LA7SRPT2",109,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",110,0)
 . ;
"RTN","LA7SRPT2",111,0)
 Q:STOP
"RTN","LA7SRPT2",112,0)
 D NP(.STOP)
"RTN","LA7SRPT2",113,0)
 Q:STOP
"RTN","LA7SRPT2",114,0)
 ;
"RTN","LA7SRPT2",115,0)
 W !!,"Checking COLLECTION SAMPLE (#62) file"
"RTN","LA7SRPT2",116,0)
 K FOUND
"RTN","LA7SRPT2",117,0)
 S X=$$F62^LA7SRPT3(CODE,SYS,.FOUND)
"RTN","LA7SRPT2",118,0)
 I 'X D  ;
"RTN","LA7SRPT2",119,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",120,0)
 I X D  ;
"RTN","LA7SRPT2",121,0)
 . S STATUS=1
"RTN","LA7SRPT2",122,0)
 . S R62=0
"RTN","LA7SRPT2",123,0)
 . F  S R62=$O(FOUND(1,R62)) Q:'R62  D  Q:STOP  ;
"RTN","LA7SRPT2",124,0)
 . . S DATA=$G(^LAB(62,R62,0))
"RTN","LA7SRPT2",125,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",126,0)
 . . W !,?2,"#",R62,": ",X
"RTN","LA7SRPT2",127,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",128,0)
 . ;
"RTN","LA7SRPT2",129,0)
 Q:STOP
"RTN","LA7SRPT2",130,0)
 D NP(.STOP)
"RTN","LA7SRPT2",131,0)
 Q:STOP
"RTN","LA7SRPT2",132,0)
 ;
"RTN","LA7SRPT2",133,0)
 W !!,"Checking ANTIMICROBIAL SUSCEPTIBILITY (#62.06) file"
"RTN","LA7SRPT2",134,0)
 K FOUND
"RTN","LA7SRPT2",135,0)
 S X=$$F6206^LA7SRPT3(CODE,SYS,.FOUND)
"RTN","LA7SRPT2",136,0)
 I 'X D  ;
"RTN","LA7SRPT2",137,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",138,0)
 I X D  ;
"RTN","LA7SRPT2",139,0)
 . S STATUS=1
"RTN","LA7SRPT2",140,0)
 . S R6206=0
"RTN","LA7SRPT2",141,0)
 . F  S R6206=$O(FOUND(1,R6206)) Q:'R6206  D  Q:STOP  ;
"RTN","LA7SRPT2",142,0)
 . . S DATA=$G(^LAB(62.06,R6206,0))
"RTN","LA7SRPT2",143,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",144,0)
 . . W !,?2,"#",R6206,": ",X
"RTN","LA7SRPT2",145,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",146,0)
 . ;
"RTN","LA7SRPT2",147,0)
 Q:STOP
"RTN","LA7SRPT2",148,0)
 D NP(.STOP)
"RTN","LA7SRPT2",149,0)
 Q:STOP
"RTN","LA7SRPT2",150,0)
 ;
"RTN","LA7SRPT2",151,0)
 W !!,"Checking LAB CODE MAPPING (#62.47) file"
"RTN","LA7SRPT2",152,0)
 K FOUND
"RTN","LA7SRPT2",153,0)
 S X=$$F6247^LA7SRPT3(CODE,SYS,.FOUND,MSGCFG)
"RTN","LA7SRPT2",154,0)
 I 'X D  ;
"RTN","LA7SRPT2",155,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",156,0)
 I X D  ;
"RTN","LA7SRPT2",157,0)
 . N CONCEPT,LAMSG,LATARG,DIERR
"RTN","LA7SRPT2",158,0)
 . N F01,F22
"RTN","LA7SRPT2",159,0)
 . S CONCEPT=""
"RTN","LA7SRPT2",160,0)
 . S STATUS=1
"RTN","LA7SRPT2",161,0)
 . S R6247=0
"RTN","LA7SRPT2",162,0)
 . F  S R6247=$O(FOUND(1,R6247)) Q:'R6247  D  Q:STOP  ;
"RTN","LA7SRPT2",163,0)
 . . S R624701=0
"RTN","LA7SRPT2",164,0)
 . . F  S R624701=$O(FOUND(1,R6247,R624701)) Q:'R624701  D  Q:STOP  ;
"RTN","LA7SRPT2",165,0)
 . . . S DATA=$G(^LAB(62.47,R6247,0))
"RTN","LA7SRPT2",166,0)
 . . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",167,0)
 . . . I CONCEPT'=X W:$O(FOUND(1,0))'=R6247 ! W !,?2,X," (#62.47:",R6247,")" S CONCEPT=X
"RTN","LA7SRPT2",168,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",169,0)
 . . . Q:STOP
"RTN","LA7SRPT2",170,0)
 . . . S DATA=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA7SRPT2",171,0)
 . . . S F01=$P(DATA,U,1)
"RTN","LA7SRPT2",172,0)
 . . . K LATARG,DIERR,LAMSG
"RTN","LA7SRPT2",173,0)
 . . . D GETS^DIQ(62.4701,R624701_","_R6247_",",2.2,"EI","LATARG","LAMSG")
"RTN","LA7SRPT2",174,0)
 . . . S R6248=$G(LATARG(62.4701,R624701_","_R6247_",",2.2,"I"))
"RTN","LA7SRPT2",175,0)
 . . . S F22=$G(LATARG(62.4701,R624701_","_R6247_",",2.2,"E"))
"RTN","LA7SRPT2",176,0)
 . . . I F22="" S F22="No Message Config"
"RTN","LA7SRPT2",177,0)
 . . . W !,?4,"#",R624701,": ",F01,"  (",F22,")"
"RTN","LA7SRPT2",178,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",179,0)
 . . . Q:STOP
"RTN","LA7SRPT2",180,0)
 . . . D  ;
"RTN","LA7SRPT2",181,0)
 . . . . I SYS'="SCT" D  ;
"RTN","LA7SRPT2",182,0)
 . . . . . S X=$$HL2LAH^LA7VHLU6(CODE,"",SYS,1,R6248)
"RTN","LA7SRPT2",183,0)
 . . . . . I X'="" W !,?6,"$$HL2LAH:",X
"RTN","LA7SRPT2",184,0)
 . . . . I SYS'="LN" D  ;
"RTN","LA7SRPT2",185,0)
 . . . . . S Y=$$HL2VA^LA7VHLU6(CODE,"",SYS,1,R6247,R6248)
"RTN","LA7SRPT2",186,0)
 . . . . . I Y'="" W:X="" !,?6 W:X'="" "  " W "$$HL2VA:",Y
"RTN","LA7SRPT2",187,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",188,0)
 . . . Q:STOP
"RTN","LA7SRPT2",189,0)
 . . . I $O(FOUND(1,R6247,R624701)) W !
"RTN","LA7SRPT2",190,0)
 . . . ;
"RTN","LA7SRPT2",191,0)
 . . ;
"RTN","LA7SRPT2",192,0)
 . ;
"RTN","LA7SRPT2",193,0)
 Q:STOP
"RTN","LA7SRPT2",194,0)
 D NP(.STOP)
"RTN","LA7SRPT2",195,0)
 Q:STOP
"RTN","LA7SRPT2",196,0)
 ;
"RTN","LA7SRPT2",197,0)
 W !!,"Checking LA7 MESSAGE PARAMETER (#62.48) file"
"RTN","LA7SRPT2",198,0)
 K FOUND
"RTN","LA7SRPT2",199,0)
 S X=$$F6248^LA7SRPT3(CODE,SYS,.FOUND,MSGCFG)
"RTN","LA7SRPT2",200,0)
 I 'X D  ;
"RTN","LA7SRPT2",201,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",202,0)
 I X D  ;
"RTN","LA7SRPT2",203,0)
 . N CONFIG,VAENTRY,NL
"RTN","LA7SRPT2",204,0)
 . S CONFIG=""
"RTN","LA7SRPT2",205,0)
 . S STATUS=1
"RTN","LA7SRPT2",206,0)
 . S R6248=0
"RTN","LA7SRPT2",207,0)
 . F  S R6248=$O(FOUND(1,R6248)) Q:'R6248  D  Q:STOP  ;
"RTN","LA7SRPT2",208,0)
 . . S DATA=$G(^LAHM(62.48,R6248,0))
"RTN","LA7SRPT2",209,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",210,0)
 . . I CONFIG'=X W !,?2,X," (#62.48:",R6248,")" S CONFIG=X W !,?2,"NON-VA ORDER SNOMED CODES sub-file"
"RTN","LA7SRPT2",211,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",212,0)
 . . Q:STOP
"RTN","LA7SRPT2",213,0)
 . . S R624802=0
"RTN","LA7SRPT2",214,0)
 . . F  S R624802=$O(FOUND(1,R6248,R624802)) Q:'R624802  D  Q:STOP  ;
"RTN","LA7SRPT2",215,0)
 . . . S DATA=$G(^LAHM(62.48,R6248,"SCT",R624802,0))
"RTN","LA7SRPT2",216,0)
 . . . S VAENTRY=$P(DATA,U,1)
"RTN","LA7SRPT2",217,0)
 . . . S X=$P(VAENTRY,";",2)_":"_$P(VAENTRY,";",1)
"RTN","LA7SRPT2",218,0)
 . . . S X=$P(X,"(",2)
"RTN","LA7SRPT2",219,0)
 . . . S X=$TR(X,",","")
"RTN","LA7SRPT2",220,0)
 . . . S NL=0
"RTN","LA7SRPT2",221,0)
 . . . W !,?4,"#",R624802,": ",$$VARPTR01^LA7XREF(VAENTRY)," (#",X,")"
"RTN","LA7SRPT2",222,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",223,0)
 . . . Q:STOP
"RTN","LA7SRPT2",224,0)
 . . . I $D(FOUND(2,R6248,R624802)) D  ;
"RTN","LA7SRPT2",225,0)
 . . . . W !,?6," .01 is mapped" S NL=1
"RTN","LA7SRPT2",226,0)
 . . . ;
"RTN","LA7SRPT2",227,0)
 . . . I $D(FOUND(3,R6248,R624802)) D  ;
"RTN","LA7SRPT2",228,0)
 . . . . W:'NL !,?6 W:NL ",  " W "Used as override"
"RTN","LA7SRPT2",229,0)
 . . . I $O(FOUND(1,R6248,R624802)) W !
"RTN","LA7SRPT2",230,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",231,0)
 . . ;
"RTN","LA7SRPT2",232,0)
 . ;
"RTN","LA7SRPT2",233,0)
 Q:STOP
"RTN","LA7SRPT2",234,0)
 D NP(.STOP)
"RTN","LA7SRPT2",235,0)
 Q:STOP
"RTN","LA7SRPT2",236,0)
 ;
"RTN","LA7SRPT2",237,0)
 W !!,"Checking LAB SHIPPING CONFIGURATION (#62.9) file"
"RTN","LA7SRPT2",238,0)
 K FOUND
"RTN","LA7SRPT2",239,0)
 S X=$$F629^LA7SRPT3(CODE,SYS,.FOUND,SHPCFG)
"RTN","LA7SRPT2",240,0)
 I 'X D  ;
"RTN","LA7SRPT2",241,0)
 . W !,?5,"No matches"
"RTN","LA7SRPT2",242,0)
 I X D  ;
"RTN","LA7SRPT2",243,0)
 . N CONFIG,TEST,F03,F09,F53,F57,DIERR,LAMSG,COMMA
"RTN","LA7SRPT2",244,0)
 . S (CONFIG,TEST)=""
"RTN","LA7SRPT2",245,0)
 . S (F03,F09,F53,F57)=0
"RTN","LA7SRPT2",246,0)
 . S STATUS=1
"RTN","LA7SRPT2",247,0)
 . S R629=0
"RTN","LA7SRPT2",248,0)
 . F  S R629=$O(FOUND(1,R629)) Q:'R629  D  Q:STOP  ;
"RTN","LA7SRPT2",249,0)
 . . S DATA=$G(^LAHM(62.9,R629,0))
"RTN","LA7SRPT2",250,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",251,0)
 . . I CONFIG'=X W !,?2,X," (#62.9:",R629,")" S CONFIG=X
"RTN","LA7SRPT2",252,0)
 . . D NP(.STOP)
"RTN","LA7SRPT2",253,0)
 . . Q:STOP
"RTN","LA7SRPT2",254,0)
 . . S R629001=0
"RTN","LA7SRPT2",255,0)
 . . S TEST=""
"RTN","LA7SRPT2",256,0)
 . . F  S R629001=$O(FOUND(1,R629,R629001)) Q:'R629001  D  Q:STOP  ;
"RTN","LA7SRPT2",257,0)
 . . . S DATA=$G(^LAHM(62.9,R629,60,R629001,0))
"RTN","LA7SRPT2",258,0)
 . . . S X=$P(DATA,U,1)
"RTN","LA7SRPT2",259,0)
 . . . K LAMSG,DIERR
"RTN","LA7SRPT2",260,0)
 . . . S X=$$GET1^DIQ(60,X_",",.01,"E","","LAMSG")
"RTN","LA7SRPT2",261,0)
 . . . I TEST'=X W !,?4,"Test Profile" W !,?4,"#",R629001,": ",X S TEST=X
"RTN","LA7SRPT2",262,0)
 . . . D NP(.STOP)
"RTN","LA7SRPT2",263,0)
 . . . Q:STOP
"RTN","LA7SRPT2",264,0)
 . . . S (F03,F09,F53,F57)=0
"RTN","LA7SRPT2",265,0)
 . . . I $D(FOUND(2,R629,R629001)) S F03=1
"RTN","LA7SRPT2",266,0)
 . . . I $D(FOUND(3,R629,R629001)) S F09=1
"RTN","LA7SRPT2",267,0)
 . . . I $D(FOUND(4,R629,R629001)) S F53=1
"RTN","LA7SRPT2",268,0)
 . . . I $D(FOUND(5,R629,R629001)) S F57=1
"RTN","LA7SRPT2",269,0)
 . . . Q:(F03+F09+F53+F57)<1
"RTN","LA7SRPT2",270,0)
 . . . W !,?6
"RTN","LA7SRPT2",271,0)
 . . . S COMMA=0
"RTN","LA7SRPT2",272,0)
 . . . I F03+F09+F53+F57>1 S COMMA=1
"RTN","LA7SRPT2",273,0)
 . . . I F03 W "Specimen" W:F09+F53+F57>0 ", "
"RTN","LA7SRPT2",274,0)
 . . . I F09 W "Sample" W:F53+F57>0 ", "
"RTN","LA7SRPT2",275,0)
 . . . I F53 W "Non-HL7 Specimen" W:F57 ", "
"RTN","LA7SRPT2",276,0)
 . . . I F57 W "Non-HL7 Sample"
"RTN","LA7SRPT2",277,0)
 . . I $D(FOUND(1,R629)) W !
"RTN","LA7SRPT2",278,0)
 . ;
"RTN","LA7SRPT2",279,0)
 Q:STOP
"RTN","LA7SRPT2",280,0)
 D NP(.STOP)
"RTN","LA7SRPT2",281,0)
 Q:STOP
"RTN","LA7SRPT2",282,0)
 ;
"RTN","LA7SRPT2",283,0)
 I 'STATUS W !!,"  N O   M A T C H E S"
"RTN","LA7SRPT2",284,0)
 Q
"RTN","LA7SRPT2",285,0)
 ;
"RTN","LA7SRPT2",286,0)
NP(ABORT,PGNUM,HDR,FTR,BM) ;
"RTN","LA7SRPT2",287,0)
 ; ABORT : <byref> Set if uses enters "^" at "MORE" prompt
"RTN","LA7SRPT2",288,0)
 ; PGNUM : <byref> Page Number Counter
"RTN","LA7SRPT2",289,0)
 ;   HDR : Executable code to write the header
"RTN","LA7SRPT2",290,0)
 ;   FTR : Executable code to write the footer
"RTN","LA7SRPT2",291,0)
 ;    BM : Bottom Margin
"RTN","LA7SRPT2",292,0)
 N X
"RTN","LA7SRPT2",293,0)
 S PGNUM=$G(PGNUM)
"RTN","LA7SRPT2",294,0)
 S HDR=$G(HDR)
"RTN","LA7SRPT2",295,0)
 S FTR=$G(FTR)
"RTN","LA7SRPT2",296,0)
 S BM=$G(BM)
"RTN","LA7SRPT2",297,0)
 S:PGNUM<1 PGNUM=1
"RTN","LA7SRPT2",298,0)
 I $Y+1<($G(IOSL,24)-BM) Q
"RTN","LA7SRPT2",299,0)
 I FTR'="" X FTR
"RTN","LA7SRPT2",300,0)
 I $E($G(IOST),1,2)="C-" D  Q:ABORT  ;
"RTN","LA7SRPT2",301,0)
 . S X=$$MORE^LA7VLCM1()
"RTN","LA7SRPT2",302,0)
 . I X S ABORT=1 Q
"RTN","LA7SRPT2",303,0)
 S $Y=0
"RTN","LA7SRPT2",304,0)
 S PGNUM=PGNUM+1
"RTN","LA7SRPT2",305,0)
 I HDR'="" X HDR
"RTN","LA7SRPT2",306,0)
 Q
"RTN","LA7SRPT3")
0^91^B48465055
"RTN","LA7SRPT3",1,0)
LA7SRPT3 ;DALOI/JDB - CODE USAGE REPORT (cont) ;03/07/12  09:21
"RTN","LA7SRPT3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SRPT3",3,0)
 ;
"RTN","LA7SRPT3",4,0)
 Q
"RTN","LA7SRPT3",5,0)
 ;
"RTN","LA7SRPT3",6,0)
F61(CODE,SYS,FOUND) ;
"RTN","LA7SRPT3",7,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",8,0)
 N NODE,NODE1,POS,R61,STATUS
"RTN","LA7SRPT3",9,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",10,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",11,0)
 K FOUND
"RTN","LA7SRPT3",12,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",13,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",14,0)
 S STATUS=0
"RTN","LA7SRPT3",15,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",16,0)
 I SYS="SCT" D  ;
"RTN","LA7SRPT3",17,0)
 . S (NODE,NODE1)="^LAB(61,""F"","_CODE_")"
"RTN","LA7SRPT3",18,0)
 . S POS("R61")=4
"RTN","LA7SRPT3",19,0)
 ;
"RTN","LA7SRPT3",20,0)
 I NODE="" Q 0
"RTN","LA7SRPT3",21,0)
 S NODE1=$$TRIM^XLFSTR(NODE1,"R",")")
"RTN","LA7SRPT3",22,0)
 S NODE1=$TR(NODE1,"""","")
"RTN","LA7SRPT3",23,0)
 F  S NODE=$Q(@NODE)  Q:$E($TR(NODE,"""",""),1,$L(NODE1))'=NODE1  D  ;
"RTN","LA7SRPT3",24,0)
 . S R61=$QS(NODE,POS("R61"))
"RTN","LA7SRPT3",25,0)
 . S FOUND(1,R61)=""
"RTN","LA7SRPT3",26,0)
 . S STATUS=1
"RTN","LA7SRPT3",27,0)
 Q STATUS
"RTN","LA7SRPT3",28,0)
 ;
"RTN","LA7SRPT3",29,0)
F612(CODE,SYS,FOUND) ;
"RTN","LA7SRPT3",30,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",31,0)
 N NODE,NODE1,POS,R612,STATUS
"RTN","LA7SRPT3",32,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",33,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",34,0)
 K FOUND
"RTN","LA7SRPT3",35,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",36,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",37,0)
 S STATUS=0
"RTN","LA7SRPT3",38,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",39,0)
 I SYS="SCT" D  ;
"RTN","LA7SRPT3",40,0)
 . S (NODE,NODE1)="^LAB(61.2,""F"","_CODE_")"
"RTN","LA7SRPT3",41,0)
 . S POS("R612")=4
"RTN","LA7SRPT3",42,0)
 ;
"RTN","LA7SRPT3",43,0)
 I NODE="" Q 0
"RTN","LA7SRPT3",44,0)
 S NODE1=$$TRIM^XLFSTR(NODE1,"R",")")
"RTN","LA7SRPT3",45,0)
 S NODE1=$TR(NODE1,"""","")
"RTN","LA7SRPT3",46,0)
 F  S NODE=$Q(@NODE)  Q:$E($TR(NODE,"""",""),1,$L(NODE1))'=NODE1  D  ;
"RTN","LA7SRPT3",47,0)
 . S R612=$QS(NODE,POS("R612"))
"RTN","LA7SRPT3",48,0)
 . S FOUND(1,R612)=""
"RTN","LA7SRPT3",49,0)
 . S STATUS=1
"RTN","LA7SRPT3",50,0)
 Q STATUS
"RTN","LA7SRPT3",51,0)
 ;
"RTN","LA7SRPT3",52,0)
F62(CODE,SYS,FOUND) ;
"RTN","LA7SRPT3",53,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",54,0)
 N NODE,NODE1,POS,R62,STATUS
"RTN","LA7SRPT3",55,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",56,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",57,0)
 K FOUND
"RTN","LA7SRPT3",58,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",59,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",60,0)
 S STATUS=0
"RTN","LA7SRPT3",61,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",62,0)
 I SYS="SCT" D  ;
"RTN","LA7SRPT3",63,0)
 . S (NODE,NODE1)="^LAB(62,""F"","_CODE_")"
"RTN","LA7SRPT3",64,0)
 . S POS("R62")=4
"RTN","LA7SRPT3",65,0)
 ;
"RTN","LA7SRPT3",66,0)
 I NODE="" Q 0
"RTN","LA7SRPT3",67,0)
 S NODE1=$$TRIM^XLFSTR(NODE1,"R",")")
"RTN","LA7SRPT3",68,0)
 S NODE1=$TR(NODE1,"""","")
"RTN","LA7SRPT3",69,0)
 F  S NODE=$Q(@NODE)  Q:$E($TR(NODE,"""",""),1,$L(NODE1))'=NODE1  D  ;
"RTN","LA7SRPT3",70,0)
 . S R62=$QS(NODE,POS("R62"))
"RTN","LA7SRPT3",71,0)
 . S FOUND(1,R62)=""
"RTN","LA7SRPT3",72,0)
 . S STATUS=1
"RTN","LA7SRPT3",73,0)
 Q STATUS
"RTN","LA7SRPT3",74,0)
 ;
"RTN","LA7SRPT3",75,0)
F6206(CODE,SYS,FOUND) ;
"RTN","LA7SRPT3",76,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",77,0)
 N NODE,NODE1,POS,R64,R953,R6206,STATUS,DATA,X
"RTN","LA7SRPT3",78,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",79,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",80,0)
 K FOUND
"RTN","LA7SRPT3",81,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",82,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",83,0)
 S STATUS=0
"RTN","LA7SRPT3",84,0)
 Q:SYS'="LN" 0
"RTN","LA7SRPT3",85,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",86,0)
 S R64=0
"RTN","LA7SRPT3",87,0)
 F  S R64=$O(^LAM("AH",$P(CODE,"-",1),R64)) Q:'R64  D  ;
"RTN","LA7SRPT3",88,0)
 . S DATA=$G(^LAM(R64,9))
"RTN","LA7SRPT3",89,0)
 . S X=$P(DATA,U,1)
"RTN","LA7SRPT3",90,0)
 . Q:X=""
"RTN","LA7SRPT3",91,0)
 . S R953=X
"RTN","LA7SRPT3",92,0)
 . S R6206=0
"RTN","LA7SRPT3",93,0)
 . F  S R6206=$O(^LAB(62.06,R6206)) Q:'R6206  D  ;
"RTN","LA7SRPT3",94,0)
 . . S DATA=$G(^LAB(62.06,R6206,64))
"RTN","LA7SRPT3",95,0)
 . . S X=$P(DATA,U,1) ;NATL VA CODE
"RTN","LA7SRPT3",96,0)
 . . Q:X'=R64
"RTN","LA7SRPT3",97,0)
 . . S STATUS=1
"RTN","LA7SRPT3",98,0)
 . . S FOUND(1,R6206)=""
"RTN","LA7SRPT3",99,0)
 . ;
"RTN","LA7SRPT3",100,0)
 Q STATUS
"RTN","LA7SRPT3",101,0)
 ;
"RTN","LA7SRPT3",102,0)
F6247(CODE,SYS,FOUND,MSGCFG) ;
"RTN","LA7SRPT3",103,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",104,0)
 N NODE,NODE1,POS,R6247,R624701,R6248,STATUS,DATA
"RTN","LA7SRPT3",105,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",106,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",107,0)
 S MSGCFG=+$G(MSGCFG)
"RTN","LA7SRPT3",108,0)
 K FOUND
"RTN","LA7SRPT3",109,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",110,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",111,0)
 S STATUS=0
"RTN","LA7SRPT3",112,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",113,0)
 S (NODE,NODE1)="^LAB(62.47,""AF"","""_SYS_""","""_CODE_""")"
"RTN","LA7SRPT3",114,0)
 S POS("R6247")=5
"RTN","LA7SRPT3",115,0)
 S POS("R624701")=6
"RTN","LA7SRPT3",116,0)
 ;
"RTN","LA7SRPT3",117,0)
 I NODE="" Q 0
"RTN","LA7SRPT3",118,0)
 S NODE1=$$TRIM^XLFSTR(NODE1,"R",")")
"RTN","LA7SRPT3",119,0)
 S NODE1=$TR(NODE1,"""","")
"RTN","LA7SRPT3",120,0)
 F  S NODE=$Q(@NODE)  Q:$E($TR(NODE,"""",""),1,$L(NODE1))'=NODE1  D  ;
"RTN","LA7SRPT3",121,0)
 . S R6247=$QS(NODE,POS("R6247"))
"RTN","LA7SRPT3",122,0)
 . S R624701=$QS(NODE,POS("R624701"))
"RTN","LA7SRPT3",123,0)
 . S DATA=$G(^LAB(62.47,R6247,1,R624701,2,0))
"RTN","LA7SRPT3",124,0)
 . S R6248=$P(DATA,U,2)
"RTN","LA7SRPT3",125,0)
 . I MSGCFG I R6248'=MSGCFG Q  ;
"RTN","LA7SRPT3",126,0)
 . S FOUND(1,R6247,R624701)=""
"RTN","LA7SRPT3",127,0)
 . S STATUS=1
"RTN","LA7SRPT3",128,0)
 Q STATUS
"RTN","LA7SRPT3",129,0)
 ;
"RTN","LA7SRPT3",130,0)
F6248(CODE,SYS,FOUND,MSGCFG) ;
"RTN","LA7SRPT3",131,0)
 ; Loop through all 
"RTN","LA7SRPT3",132,0)
 ; ^LAHM(62.48,DA(1),"SCT","AD",CODE,VARPTR,DA)
"RTN","LA7SRPT3",133,0)
 ; #62.48 only supports SCT code sets
"RTN","LA7SRPT3",134,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",135,0)
 N NODE,NODE1,POS,R6248,R624802,STATUS,D61,D62,X,DATA,REC,FILE
"RTN","LA7SRPT3",136,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",137,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",138,0)
 S MSGCFG=+$G(MSGCFG)
"RTN","LA7SRPT3",139,0)
 K FOUND
"RTN","LA7SRPT3",140,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",141,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",142,0)
 Q:SYS'="SCT" 0
"RTN","LA7SRPT3",143,0)
 S STATUS=0
"RTN","LA7SRPT3",144,0)
 S (NODE,NODE1)=""
"RTN","LA7SRPT3",145,0)
 S POS("R6248")=2
"RTN","LA7SRPT3",146,0)
 S POS("X")=6
"RTN","LA7SRPT3",147,0)
 S POS("R624802")=7
"RTN","LA7SRPT3",148,0)
 ;
"RTN","LA7SRPT3",149,0)
 ; Is SCT code in #61 or #62
"RTN","LA7SRPT3",150,0)
 S X=$$F61(CODE,"SCT",.D61)
"RTN","LA7SRPT3",151,0)
 S X=$$F62(CODE,"SCT",.D62)
"RTN","LA7SRPT3",152,0)
 ;
"RTN","LA7SRPT3",153,0)
 ; #62.482 fld #.01 (VA FILE ENTRY) point to entry with the SCT?
"RTN","LA7SRPT3",154,0)
 S R6248=0
"RTN","LA7SRPT3",155,0)
 I MSGCFG S R6248=MSGCFG-1
"RTN","LA7SRPT3",156,0)
 F  S R6248=$O(^LAHM(62.48,R6248)) Q:'R6248  Q:MSGCFG&(R6248'=MSGCFG)  D  ;
"RTN","LA7SRPT3",157,0)
 . S R624802=0
"RTN","LA7SRPT3",158,0)
 . F  S R624802=$O(^LAHM(62.48,R6248,"SCT",R624802)) Q:'R624802  D  ;
"RTN","LA7SRPT3",159,0)
 . . S DATA=$G(^LAHM(62.48,R6248,"SCT",R624802,0))
"RTN","LA7SRPT3",160,0)
 . . S X=$P(DATA,U,1)
"RTN","LA7SRPT3",161,0)
 . . S REC=$P(X,";",1)
"RTN","LA7SRPT3",162,0)
 . . S FILE=$P(X,";",2)
"RTN","LA7SRPT3",163,0)
 . . S FILE=$P(FILE,"(",2) S FILE=$P(FILE,",",1)
"RTN","LA7SRPT3",164,0)
 . . I FILE=61 D  ;
"RTN","LA7SRPT3",165,0)
 . . . Q:'$D(D61(1,REC))
"RTN","LA7SRPT3",166,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",167,0)
 . . . S FOUND(1,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",168,0)
 . . . S FOUND(2,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",169,0)
 . . . S FOUND(61,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",170,0)
 . . . S X=$$VARPTR01^LA7XREF($P(DATA,U,1))
"RTN","LA7SRPT3",171,0)
 . . ;
"RTN","LA7SRPT3",172,0)
 . . I FILE=62 D  ;
"RTN","LA7SRPT3",173,0)
 . . . Q:'$D(D62(1,REC))
"RTN","LA7SRPT3",174,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",175,0)
 . . . S FOUND(1,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",176,0)
 . . . S FOUND(2,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",177,0)
 . . . S FOUND(62,R6248,R624802)=$P(DATA,U,1)
"RTN","LA7SRPT3",178,0)
 . . . S X=$$VARPTR01^LA7XREF($P(DATA,U,1))
"RTN","LA7SRPT3",179,0)
 . . ;
"RTN","LA7SRPT3",180,0)
 . ;
"RTN","LA7SRPT3",181,0)
 ;
"RTN","LA7SRPT3",182,0)
 ; Does #62.4802 fld #.02 contain this SCT?
"RTN","LA7SRPT3",183,0)
 S R6248=0
"RTN","LA7SRPT3",184,0)
 I MSGCFG S R6248=MSGCFG-1
"RTN","LA7SRPT3",185,0)
 F  S R6248=$O(^LAHM(62.48,R6248)) Q:'R6248  Q:MSGCFG&(R6248'=MSGCFG)  D  ;
"RTN","LA7SRPT3",186,0)
 . S (NODE,NODE1)="^LAHM(62.48,"_R6248_",""SCT"",""AD"","""_CODE_""")"
"RTN","LA7SRPT3",187,0)
 . S NODE1=$$TRIM^XLFSTR(NODE1,"R",")")
"RTN","LA7SRPT3",188,0)
 . S NODE1=$TR(NODE1,"""","")
"RTN","LA7SRPT3",189,0)
 . F  S NODE=$Q(@NODE) Q:$E($TR(NODE,"""",""),1,$L(NODE1))'=NODE1  D  ;
"RTN","LA7SRPT3",190,0)
 . . S R624802=$QS(NODE,POS("R624802"))
"RTN","LA7SRPT3",191,0)
 . . S FOUND(1,R6248,R624802)=$QS(NODE,POS("X"))
"RTN","LA7SRPT3",192,0)
 . . S FOUND(3,R6248,R624802)=$QS(NODE,POS("X"))
"RTN","LA7SRPT3",193,0)
 . . S STATUS=1
"RTN","LA7SRPT3",194,0)
 . ;
"RTN","LA7SRPT3",195,0)
 Q STATUS
"RTN","LA7SRPT3",196,0)
 ;
"RTN","LA7SRPT3",197,0)
F629(CODE,SYS,FOUND,SHPCFG) ;
"RTN","LA7SRPT3",198,0)
 ; #62.9
"RTN","LA7SRPT3",199,0)
 ; check .03 data
"RTN","LA7SRPT3",200,0)
 ; check .09 data
"RTN","LA7SRPT3",201,0)
 ; check 5.1
"RTN","LA7SRPT3",202,0)
 ; check 5.3
"RTN","LA7SRPT3",203,0)
 ; check 5.7
"RTN","LA7SRPT3",204,0)
 ; (private method for LA7SRPT2)
"RTN","LA7SRPT3",205,0)
 N R629,R629001,STATUS,DIERR,DATA,X,LAMSG
"RTN","LA7SRPT3",206,0)
 N F03,F09,F51,F53,F55,F56,F57,F59
"RTN","LA7SRPT3",207,0)
 S CODE=$G(CODE)
"RTN","LA7SRPT3",208,0)
 S SYS=$G(SYS)
"RTN","LA7SRPT3",209,0)
 S SHPCFG=+$G(SHPCFG)
"RTN","LA7SRPT3",210,0)
 K FOUND
"RTN","LA7SRPT3",211,0)
 Q:CODE="" 0
"RTN","LA7SRPT3",212,0)
 Q:SYS="" 0
"RTN","LA7SRPT3",213,0)
 S STATUS=0
"RTN","LA7SRPT3",214,0)
 S R629=0
"RTN","LA7SRPT3",215,0)
 I SHPCFG S R629=SHPCFG-1
"RTN","LA7SRPT3",216,0)
 F  S R629=$O(^LAHM(62.9,R629)) Q:'R629  Q:SHPCFG&(R629'=SHPCFG)  D  ;
"RTN","LA7SRPT3",217,0)
 . S R629001=0
"RTN","LA7SRPT3",218,0)
 . F  S R629001=$O(^LAHM(62.9,R629,60,R629001)) Q:'R629001  D  ;
"RTN","LA7SRPT3",219,0)
 . . S DATA=$G(^LAHM(62.9,R629,60,R629001,0))
"RTN","LA7SRPT3",220,0)
 . . S F03=$P(DATA,U,3) ;#61
"RTN","LA7SRPT3",221,0)
 . . S F09=$P(DATA,U,9) ;#62
"RTN","LA7SRPT3",222,0)
 . . S DATA=$G(^LAHM(62.9,R629,60,R629001,5))
"RTN","LA7SRPT3",223,0)
 . . S F51=$P(DATA,U,1)
"RTN","LA7SRPT3",224,0)
 . . S F53=$P(DATA,U,3)
"RTN","LA7SRPT3",225,0)
 . . S F55=$P(DATA,U,5)
"RTN","LA7SRPT3",226,0)
 . . S F56=$P(DATA,U,6)
"RTN","LA7SRPT3",227,0)
 . . S F57=$P(DATA,U,7)
"RTN","LA7SRPT3",228,0)
 . . S F59=$P(DATA,U,9)
"RTN","LA7SRPT3",229,0)
 . . S X=$$GET1^DIQ(61,F03_",",20,"I","","LAMSG")
"RTN","LA7SRPT3",230,0)
 . . I SYS="SCT" I X=CODE D  ;
"RTN","LA7SRPT3",231,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",232,0)
 . . . S FOUND(1,R629,R629001)=""
"RTN","LA7SRPT3",233,0)
 . . . S FOUND(2,R629,R629001)=""
"RTN","LA7SRPT3",234,0)
 . . ;
"RTN","LA7SRPT3",235,0)
 . . S X=$$GET1^DIQ(62,F09_",",20,"I","","LAMSG")
"RTN","LA7SRPT3",236,0)
 . . I SYS="SCT" I X=CODE D  ;
"RTN","LA7SRPT3",237,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",238,0)
 . . . S FOUND(1,R629,R629001)=""
"RTN","LA7SRPT3",239,0)
 . . . S FOUND(3,R629,R629001)=""
"RTN","LA7SRPT3",240,0)
 . . ;
"RTN","LA7SRPT3",241,0)
 . . I F56=SYS I F53=CODE D  ;
"RTN","LA7SRPT3",242,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",243,0)
 . . . S FOUND(1,R629,R629001)=""
"RTN","LA7SRPT3",244,0)
 . . . S FOUND(4,R629,R629001)=""
"RTN","LA7SRPT3",245,0)
 . . ;
"RTN","LA7SRPT3",246,0)
 . . I F59=SYS I F57=CODE D  ;
"RTN","LA7SRPT3",247,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",248,0)
 . . . S FOUND(1,R629,R629001)=""
"RTN","LA7SRPT3",249,0)
 . . . S FOUND(5,R629,R629001)=""
"RTN","LA7SRPT3",250,0)
 . . ;
"RTN","LA7SRPT3",251,0)
 . . I F55=SYS I F51=CODE D  ;
"RTN","LA7SRPT3",252,0)
 . . . S STATUS=1
"RTN","LA7SRPT3",253,0)
 . . . S FOUND(1,R629,R629001)=""
"RTN","LA7SRPT3",254,0)
 . . . S FOUND(6,R629,R629001)=""
"RTN","LA7SRPT3",255,0)
 . ;
"RTN","LA7SRPT3",256,0)
 ;
"RTN","LA7SRPT3",257,0)
 Q STATUS
"RTN","LA7SRPT4")
0^92^B67490629
"RTN","LA7SRPT4",1,0)
LA7SRPT4 ;DALOI/JDB - SCT OVERRIDE REPORT ;03/07/12  09:38
"RTN","LA7SRPT4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7SRPT4",3,0)
 ;
"RTN","LA7SRPT4",4,0)
 Q
"RTN","LA7SRPT4",5,0)
 ;
"RTN","LA7SRPT4",6,0)
EN ;
"RTN","LA7SRPT4",7,0)
 ; Prompts for #62.48 entry, device, then branches
"RTN","LA7SRPT4",8,0)
 N QUE,RTN,R6248,DIC,DTOUT,DUOUT,POP,X,Y,HASSCT,LASEL,ZTSAVE
"RTN","LA7SRPT4",9,0)
 S HASSCT=0
"RTN","LA7SRPT4",10,0)
 D  Q:'HASSCT  ;
"RTN","LA7SRPT4",11,0)
 . ; any SCT Overrides on file?
"RTN","LA7SRPT4",12,0)
 . N R6248
"RTN","LA7SRPT4",13,0)
 . S R6248=0
"RTN","LA7SRPT4",14,0)
 . F  S R6248=$O(^LAHM(62.48,R6248)) Q:'R6248  D  Q:HASSCT  ;
"RTN","LA7SRPT4",15,0)
 . . Q:'$D(^LAHM(62.48,R6248,"SCT"))
"RTN","LA7SRPT4",16,0)
 . . S HASSCT=1
"RTN","LA7SRPT4",17,0)
 . Q:HASSCT
"RTN","LA7SRPT4",18,0)
 . W !,"  No SCT Overrides on file."
"RTN","LA7SRPT4",19,0)
 ;
"RTN","LA7SRPT4",20,0)
 S R6248=0
"RTN","LA7SRPT4",21,0)
 S DIC=62.48
"RTN","LA7SRPT4",22,0)
 S DIC("S")="I $D(^(""SCT""))"
"RTN","LA7SRPT4",23,0)
 S X=$$SELECT^LRUTIL(.DIC,.LASEL,"MESSAGE CONFIGURATION",10,0,0,1)
"RTN","LA7SRPT4",24,0)
 K DIC
"RTN","LA7SRPT4",25,0)
 ; If LASEL=1 then "ALL" was selected
"RTN","LA7SRPT4",26,0)
 I X<1 I X'="*" Q
"RTN","LA7SRPT4",27,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","LA7SRPT4",28,0)
 S RTN="MAIN^LA7SRPT4("_R6248_")"
"RTN","LA7SRPT4",29,0)
 I $D(LRSEL)>1 S ZTSAVE("LASEL")=""
"RTN","LA7SRPT4",30,0)
 S QUE=$$QUE^LRUTIL(RTN,"SCT OVERRIDE",.ZTSAVE)
"RTN","LA7SRPT4",31,0)
 I QUE Q
"RTN","LA7SRPT4",32,0)
 D MAIN(R6248)
"RTN","LA7SRPT4",33,0)
 D HOME^%ZIS
"RTN","LA7SRPT4",34,0)
 Q
"RTN","LA7SRPT4",35,0)
 ;
"RTN","LA7SRPT4",36,0)
MAIN(R6248) ;
"RTN","LA7SRPT4",37,0)
 ; Setup variables, branch, print footer, perform cleanup.
"RTN","LA7SRPT4",38,0)
 ; Expects LASEL array from EN (used with VAUTOMA) to pick
"RTN","LA7SRPT4",39,0)
 ; multiple #62.48s (passed in sym tbl for queuing)
"RTN","LA7SRPT4",40,0)
 ;
"RTN","LA7SRPT4",41,0)
 ; Inputs
"RTN","LA7SRPT4",42,0)
 ;  R6248 : #62.48 IEN
"RTN","LA7SRPT4",43,0)
 N STOP,PGDATA
"RTN","LA7SRPT4",44,0)
 S R6248=$G(R6248)
"RTN","LA7SRPT4",45,0)
 U IO
"RTN","LA7SRPT4",46,0)
 S STOP=0
"RTN","LA7SRPT4",47,0)
 S PGDATA("RPTDT")=$$NOW^XLFDT() ;Report Date
"RTN","LA7SRPT4",48,0)
 S PGDATA("PGNUM")=1 ;Page Number
"RTN","LA7SRPT4",49,0)
 S PGDATA("BM")=0 ;Bottom Margin (lines from bottom)
"RTN","LA7SRPT4",50,0)
 S PGDATA("HDR")="D HDR^LA7SRPT4" ;Header exec code
"RTN","LA7SRPT4",51,0)
 S PGDATA("FTR")="D FTR^LA7SRPT4" ; Footer exec code
"RTN","LA7SRPT4",52,0)
 D HDR^LA7SRPT4
"RTN","LA7SRPT4",53,0)
 I R6248 D SCTOVER(R6248,.STOP)
"RTN","LA7SRPT4",54,0)
 I 'R6248 D LOOP(.STOP,.LASEL)
"RTN","LA7SRPT4",55,0)
 ; Write last footer if needed
"RTN","LA7SRPT4",56,0)
 I 'STOP I '$G(PGDATA("WFTR")) D  ;
"RTN","LA7SRPT4",57,0)
 . I $G(PGDATA("FTR"))="" Q
"RTN","LA7SRPT4",58,0)
 . I $E($G(IOST),1,2)'="C-" D  ;
"RTN","LA7SRPT4",59,0)
 . . N I,BM
"RTN","LA7SRPT4",60,0)
 . . S BM=$G(PGDATA("BM"))
"RTN","LA7SRPT4",61,0)
 . . F I=$Y+1:1:($G(IOSL,60)-BM-1) W !
"RTN","LA7SRPT4",62,0)
 . X PGDATA("FTR")
"RTN","LA7SRPT4",63,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7SRPT4",64,0)
 I 'STOP I $E(IOST,1,2)="C-" D MORE^LRUTIL()
"RTN","LA7SRPT4",65,0)
 D ^%ZISC
"RTN","LA7SRPT4",66,0)
 Q
"RTN","LA7SRPT4",67,0)
 ;
"RTN","LA7SRPT4",68,0)
LOOP(STOP,SEL) ;
"RTN","LA7SRPT4",69,0)
 ; Inputs
"RTN","LA7SRPT4",70,0)
 ;  STOP : <byref> see Outputs below
"RTN","LA7SRPT4",71,0)
 ;   SEL : <byref> Array of #62.48s to display
"RTN","LA7SRPT4",72,0)
 ; Outputs
"RTN","LA7SRPT4",73,0)
 ;  STOP : Tracks if user has stopped display
"RTN","LA7SRPT4",74,0)
 N R6248,NODE
"RTN","LA7SRPT4",75,0)
 ;S R6248=0
"RTN","LA7SRPT4",76,0)
 S NODE="^LAHM(62.48,""B"")"
"RTN","LA7SRPT4",77,0)
 ;F  S R6248=$O(^LAHM(62.48,"B",R6248)) Q:'R6248  D  Q:STOP  ;
"RTN","LA7SRPT4",78,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="B"  D  Q:STOP  ;
"RTN","LA7SRPT4",79,0)
 . S R6248=$QS(NODE,4)
"RTN","LA7SRPT4",80,0)
 . Q:'$D(^LAHM(62.48,R6248,"SCT"))
"RTN","LA7SRPT4",81,0)
 . I $D(SEL)>1 I '$D(SEL(R6248)) Q
"RTN","LA7SRPT4",82,0)
 . D SCTOVER(R6248,.STOP)
"RTN","LA7SRPT4",83,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",84,0)
 . I $O(^LAHM(62.48,R6248)) W ! D NP(.STOP) Q:STOP  W !
"RTN","LA7SRPT4",85,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",86,0)
 Q
"RTN","LA7SRPT4",87,0)
 ;
"RTN","LA7SRPT4",88,0)
SCTOVER(R6248,STOP) ;
"RTN","LA7SRPT4",89,0)
 ; Displays SCT override info for a MSG CFG (#62.48)
"RTN","LA7SRPT4",90,0)
 ; Inputs
"RTN","LA7SRPT4",91,0)
 ;  R6248 : #62.48 IEN
"RTN","LA7SRPT4",92,0)
 ;  STOP : <byref> see Outputs below
"RTN","LA7SRPT4",93,0)
 ; Outputs
"RTN","LA7SRPT4",94,0)
 ;  STOP : Tracks if user has stopped display
"RTN","LA7SRPT4",95,0)
 N R62482,R61,R62,D62482,SPECS,SAMPS,TMPNM,SCT,SCT1,SCTOVR,SCTCODES
"RTN","LA7SRPT4",96,0)
 N FSIZE,NODE,I,X,REC,NM,DATA,MSIZE,POS
"RTN","LA7SRPT4",97,0)
 N DIERR,LAIEN,LAFLDS,POP
"RTN","LA7SRPT4",98,0)
 N IOUON,IOUOFF
"RTN","LA7SRPT4",99,0)
 S MSIZE(1)=IOM-42 ;max field length (2+2+SCT(18)+2+SCT(18))
"RTN","LA7SRPT4",100,0)
 S R6248=$G(R6248)
"RTN","LA7SRPT4",101,0)
 S STOP=$G(STOP)
"RTN","LA7SRPT4",102,0)
 S TMPNM="LA7SRPT4"
"RTN","LA7SRPT4",103,0)
 S X="IOUON;IOUOFF"
"RTN","LA7SRPT4",104,0)
 D  ;
"RTN","LA7SRPT4",105,0)
 . N %ZIS
"RTN","LA7SRPT4",106,0)
 . D ENDR^%ZISS
"RTN","LA7SRPT4",107,0)
 ;
"RTN","LA7SRPT4",108,0)
 D GETFLDS^LA7SRPT1(62.48,R6248_",",".01",.DATA)
"RTN","LA7SRPT4",109,0)
 D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",110,0)
 W !,"Message Configuration: ",DATA(.01,"E")
"RTN","LA7SRPT4",111,0)
 D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",112,0)
 I '$D(^LAHM(62.48,R6248,"SCT")) D  Q  ;
"RTN","LA7SRPT4",113,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",114,0)
 . W !?5,"No SCT Overrides on file."
"RTN","LA7SRPT4",115,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",116,0)
 ;
"RTN","LA7SRPT4",117,0)
 D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",118,0)
 W !
"RTN","LA7SRPT4",119,0)
 D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",120,0)
 S LAFLDS=".01;.02"
"RTN","LA7SRPT4",121,0)
 S R62482=0
"RTN","LA7SRPT4",122,0)
 F  S R62482=$O(^LAHM(62.48,R6248,"SCT",R62482)) Q:'R62482  D  ;
"RTN","LA7SRPT4",123,0)
 . K D62482
"RTN","LA7SRPT4",124,0)
 . S LAIEN=R62482_","_R6248_","
"RTN","LA7SRPT4",125,0)
 . D GETFLDS^LA7SRPT1(62.482,LAIEN,LAFLDS,.D62482)
"RTN","LA7SRPT4",126,0)
 . Q:'$D(D62482)
"RTN","LA7SRPT4",127,0)
 . S (R61,R62)=0
"RTN","LA7SRPT4",128,0)
 . S X=D62482(.01,"I")
"RTN","LA7SRPT4",129,0)
 . I X["LAB(61," D  ;
"RTN","LA7SRPT4",130,0)
 . . S R61=$P(X,";",1)
"RTN","LA7SRPT4",131,0)
 . I X["LAB(62," D  ;
"RTN","LA7SRPT4",132,0)
 . . S R62=$P(X,";",1)
"RTN","LA7SRPT4",133,0)
 . I 'R61 I 'R62 Q
"RTN","LA7SRPT4",134,0)
 . S X=$G(D62482(.02,"E"))
"RTN","LA7SRPT4",135,0)
 . I R61 S SPECS(R61)=X
"RTN","LA7SRPT4",136,0)
 . I R62 S SAMPS(R62)=X
"RTN","LA7SRPT4",137,0)
 . ;setup TMP
"RTN","LA7SRPT4",138,0)
 . K ^TMP($J,TMPNM)
"RTN","LA7SRPT4",139,0)
 . I $D(SPECS) D BLDTMP(61,.SPECS)
"RTN","LA7SRPT4",140,0)
 . I $D(SAMPS) D BLDTMP(62,.SAMPS)
"RTN","LA7SRPT4",141,0)
 I '$D(^TMP($J,TMPNM)) Q
"RTN","LA7SRPT4",142,0)
 ;
"RTN","LA7SRPT4",143,0)
 ; ^TMP($J,TMPNM,FILE#,.01,REC)=SCT Code
"RTN","LA7SRPT4",144,0)
 ; find max length in specimens
"RTN","LA7SRPT4",145,0)
 S FSIZE(1)=12 ;spec/sample
"RTN","LA7SRPT4",146,0)
 S FSIZE(1)=12+29
"RTN","LA7SRPT4",147,0)
 S FSIZE(2)=8 ;SCT code
"RTN","LA7SRPT4",148,0)
 S NODE="^TMP($J,TMPNM,61)"
"RTN","LA7SRPT4",149,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=61  Q:$QS(NODE,2)'=TMPNM  D  ;
"RTN","LA7SRPT4",150,0)
 . S NM=$QS(NODE,4) ;.01 field (sample or topog)
"RTN","LA7SRPT4",151,0)
 . S REC=$QS(NODE,5)
"RTN","LA7SRPT4",152,0)
 . S X=" ["_REC_"]"
"RTN","LA7SRPT4",153,0)
 . S I=$L(NM_X)
"RTN","LA7SRPT4",154,0)
 . I I>FSIZE(1) S FSIZE(1)=I
"RTN","LA7SRPT4",155,0)
 ;
"RTN","LA7SRPT4",156,0)
 ; find max length in samples
"RTN","LA7SRPT4",157,0)
 S NODE="^TMP($J,TMPNM,62)"
"RTN","LA7SRPT4",158,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=62  Q:$QS(NODE,2)'=TMPNM  D  ;
"RTN","LA7SRPT4",159,0)
 . S NM=$QS(NODE,4) ;.01 field (sample or topog)
"RTN","LA7SRPT4",160,0)
 . S REC=$QS(NODE,5)
"RTN","LA7SRPT4",161,0)
 . S X=" ["_REC_"]"
"RTN","LA7SRPT4",162,0)
 . S I=$L(NM_X)
"RTN","LA7SRPT4",163,0)
 . I I>FSIZE(1) S FSIZE(1)=I
"RTN","LA7SRPT4",164,0)
 ;
"RTN","LA7SRPT4",165,0)
 ; Print Specimens header
"RTN","LA7SRPT4",166,0)
 S NODE="^TMP($J,TMPNM,61)"
"RTN","LA7SRPT4",167,0)
 I $D(@NODE) D  ;
"RTN","LA7SRPT4",168,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",169,0)
 . W !?2 D UL(1)
"RTN","LA7SRPT4",170,0)
 . W "Specimen [Topography file #61]"
"RTN","LA7SRPT4",171,0)
 . S DISP(1)=FSIZE(1)
"RTN","LA7SRPT4",172,0)
 . I DISP(1)>MSIZE(1) S DISP(1)=MSIZE(1)
"RTN","LA7SRPT4",173,0)
 . W ?2+DISP(1)+2,"VA SCT",?2+DISP(1)+2+18+2,"Non-VA SCT"
"RTN","LA7SRPT4",174,0)
 . D UL(0)
"RTN","LA7SRPT4",175,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",176,0)
 ;
"RTN","LA7SRPT4",177,0)
 ; Print specimens
"RTN","LA7SRPT4",178,0)
 S NODE="^TMP($J,TMPNM,61)"
"RTN","LA7SRPT4",179,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=61  Q:$QS(NODE,2)'=TMPNM  D  Q:STOP  ;
"RTN","LA7SRPT4",180,0)
 . S NM=$QS(NODE,4)
"RTN","LA7SRPT4",181,0)
 . S REC=$QS(NODE,5)
"RTN","LA7SRPT4",182,0)
 . S SCT=@NODE
"RTN","LA7SRPT4",183,0)
 . I SCT'="" S SCTCODES(" "_SCT)=""
"RTN","LA7SRPT4",184,0)
 . S SCTOVR=SPECS(REC)
"RTN","LA7SRPT4",185,0)
 . I SCTOVR'="" S SCTCODES(" "_SCTOVR)=""
"RTN","LA7SRPT4",186,0)
 . S X=" ["_REC_"]"
"RTN","LA7SRPT4",187,0)
 . I $L(NM_X)>MSIZE(1) D  ;
"RTN","LA7SRPT4",188,0)
 . . S NM=$E(NM,1,MSIZE(1)-$L(X)-3)_"..."
"RTN","LA7SRPT4",189,0)
 . S NM=NM_X
"RTN","LA7SRPT4",190,0)
 . S DISP(1)=FSIZE(1)
"RTN","LA7SRPT4",191,0)
 . I DISP(1)>MSIZE(1) S DISP(1)=MSIZE(1)
"RTN","LA7SRPT4",192,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",193,0)
 . W !?2,NM
"RTN","LA7SRPT4",194,0)
 . W ?2+DISP(1)+2,SCT,?2+DISP(1)+2+18+2,SCTOVR
"RTN","LA7SRPT4",195,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",196,0)
 ;
"RTN","LA7SRPT4",197,0)
 ; Print samples header
"RTN","LA7SRPT4",198,0)
 S NODE="^TMP($J,TMPNM,62)"
"RTN","LA7SRPT4",199,0)
 I $D(@NODE) D  ;
"RTN","LA7SRPT4",200,0)
 . I $D(^TMP($J,TMPNM,61)) D NP(.STOP) Q:STOP  W !
"RTN","LA7SRPT4",201,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",202,0)
 . W !?2
"RTN","LA7SRPT4",203,0)
 . D UL(1)
"RTN","LA7SRPT4",204,0)
 . W "Sample [Collection Sample file #62]"
"RTN","LA7SRPT4",205,0)
 . S DISP(1)=FSIZE(1)
"RTN","LA7SRPT4",206,0)
 . I DISP(1)>MSIZE(1) S DISP(1)=MSIZE(1)
"RTN","LA7SRPT4",207,0)
 . W ?2+DISP(1)+2,"VA SCT",?2+DISP(1)+2+18+2,"Non-VA SCT"
"RTN","LA7SRPT4",208,0)
 . D UL(0)
"RTN","LA7SRPT4",209,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",210,0)
 ;
"RTN","LA7SRPT4",211,0)
 ; Print samples
"RTN","LA7SRPT4",212,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=62  Q:$QS(NODE,2)'=TMPNM  D  Q:STOP  ;
"RTN","LA7SRPT4",213,0)
 . S NM=$QS(NODE,4)
"RTN","LA7SRPT4",214,0)
 . S REC=$QS(NODE,5)
"RTN","LA7SRPT4",215,0)
 . S SCT=@NODE
"RTN","LA7SRPT4",216,0)
 . I SCT'="" S SCTCODES(" "_SCT)=""
"RTN","LA7SRPT4",217,0)
 . S SCTOVR=SAMPS(REC)
"RTN","LA7SRPT4",218,0)
 . I SCTOVR'="" S SCTCODES(" "_SCTOVR)=""
"RTN","LA7SRPT4",219,0)
 . S X=" ["_REC_"]"
"RTN","LA7SRPT4",220,0)
 . I $L(NM_X)>MSIZE(1) D  ;
"RTN","LA7SRPT4",221,0)
 . . S NM=$E(NM,1,MSIZE(1)-$L(X)-3)_"..."
"RTN","LA7SRPT4",222,0)
 . S NM=NM_X
"RTN","LA7SRPT4",223,0)
 . S DISP(1)=FSIZE(1)
"RTN","LA7SRPT4",224,0)
 . I DISP(1)>MSIZE(1) S DISP(1)=MSIZE(1)
"RTN","LA7SRPT4",225,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",226,0)
 . W !?2,NM
"RTN","LA7SRPT4",227,0)
 . W ?2+DISP(1)+2,SCT,?2+DISP(1)+2+18+2,SCTOVR
"RTN","LA7SRPT4",228,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",229,0)
 ;
"RTN","LA7SRPT4",230,0)
 ; Display SCT code legend
"RTN","LA7SRPT4",231,0)
 I 'STOP I $D(SCTCODES) D  ;
"RTN","LA7SRPT4",232,0)
 . S SCT=""
"RTN","LA7SRPT4",233,0)
 . F  S SCT=$O(SCTCODES(SCT)) Q:SCT=""  D  Q:STOP  ;
"RTN","LA7SRPT4",234,0)
 . . S X=$$TRIM^XLFSTR(SCT,"L"," ")
"RTN","LA7SRPT4",235,0)
 . . S I=$L(X)
"RTN","LA7SRPT4",236,0)
 . . I FSIZE(2)<I S FSIZE(2)=I
"RTN","LA7SRPT4",237,0)
 . ;
"RTN","LA7SRPT4",238,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",239,0)
 . W !
"RTN","LA7SRPT4",240,0)
 . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",241,0)
 . S POS=0
"RTN","LA7SRPT4",242,0)
 . W !?POS
"RTN","LA7SRPT4",243,0)
 . D UL(1)
"RTN","LA7SRPT4",244,0)
 . W "SCT Code"
"RTN","LA7SRPT4",245,0)
 . S POS=POS+FSIZE(2)+2
"RTN","LA7SRPT4",246,0)
 . W ?POS,"SCT Preferred Term"
"RTN","LA7SRPT4",247,0)
 . D UL(0)
"RTN","LA7SRPT4",248,0)
 . S SCT=""
"RTN","LA7SRPT4",249,0)
 . F  S SCT=$O(SCTCODES(SCT)) Q:SCT=""  D  Q:STOP  ;
"RTN","LA7SRPT4",250,0)
 . . S SCT1=$$TRIM^XLFSTR(SCT,"L"," ")
"RTN","LA7SRPT4",251,0)
 . . D NP(.STOP) Q:STOP
"RTN","LA7SRPT4",252,0)
 . . S POS=0
"RTN","LA7SRPT4",253,0)
 . . W !?POS,SCT1
"RTN","LA7SRPT4",254,0)
 . . S X=$$GETPREF^LRSCT(SCT1)
"RTN","LA7SRPT4",255,0)
 . . S POS=POS+FSIZE(2)+2
"RTN","LA7SRPT4",256,0)
 . . W ?POS
"RTN","LA7SRPT4",257,0)
 . . D WRAP^LA7SRPT1(X,POS+1,0,.STOP,.PGDATA)
"RTN","LA7SRPT4",258,0)
 . . D NP(.STOP)
"RTN","LA7SRPT4",259,0)
 . . Q:STOP
"RTN","LA7SRPT4",260,0)
 . ;
"RTN","LA7SRPT4",261,0)
 ;
"RTN","LA7SRPT4",262,0)
 K ^TMP($J,TMPNM)
"RTN","LA7SRPT4",263,0)
 D UL(0)
"RTN","LA7SRPT4",264,0)
 Q
"RTN","LA7SRPT4",265,0)
 ;
"RTN","LA7SRPT4",266,0)
HDR ;
"RTN","LA7SRPT4",267,0)
 ; Header
"RTN","LA7SRPT4",268,0)
 ; Expects PGDATA array
"RTN","LA7SRPT4",269,0)
 ; private method
"RTN","LA7SRPT4",270,0)
 N STR,RPTDT,PGNUM
"RTN","LA7SRPT4",271,0)
 S RPTDT=$G(PGDATA("RPTDT"))
"RTN","LA7SRPT4",272,0)
 I RPTDT="" D  ;
"RTN","LA7SRPT4",273,0)
 . S RPTDT=$$NOW^XLFDT()
"RTN","LA7SRPT4",274,0)
 . S PGDATA("RPTDT")=RPTDT
"RTN","LA7SRPT4",275,0)
 S PGNUM=$G(PGDATA("PGNUM"))
"RTN","LA7SRPT4",276,0)
 I PGNUM<1 D  ;
"RTN","LA7SRPT4",277,0)
 . S PGNUM=1
"RTN","LA7SRPT4",278,0)
 . S PGDATA("PGNUM")=PGNUM
"RTN","LA7SRPT4",279,0)
 ;
"RTN","LA7SRPT4",280,0)
 W !,"MESSAGE CONFIGURATION SCT OVERRIDES  "
"RTN","LA7SRPT4",281,0)
 S STR="Printed "_$$FMTE^XLFDT(RPTDT,"M")
"RTN","LA7SRPT4",282,0)
 S STR=STR_"   Page "_$G(PGNUM,1)
"RTN","LA7SRPT4",283,0)
 W ?IOM-$L(STR)-2,STR
"RTN","LA7SRPT4",284,0)
 W !,$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7SRPT4",285,0)
 Q
"RTN","LA7SRPT4",286,0)
 ;
"RTN","LA7SRPT4",287,0)
FTR ;
"RTN","LA7SRPT4",288,0)
 Q
"RTN","LA7SRPT4",289,0)
 ;
"RTN","LA7SRPT4",290,0)
NP(STOP) ;
"RTN","LA7SRPT4",291,0)
 ; Convenience method
"RTN","LA7SRPT4",292,0)
 D NP^LRUTIL(.STOP,.PGDATA)
"RTN","LA7SRPT4",293,0)
 Q
"RTN","LA7SRPT4",294,0)
 ;
"RTN","LA7SRPT4",295,0)
BLDTMP(FILE,IN) ;
"RTN","LA7SRPT4",296,0)
 ; Builds ^TMP($J,TMPNM,FILE,.01,IEN)=SCT Code 
"RTN","LA7SRPT4",297,0)
 ; private method
"RTN","LA7SRPT4",298,0)
 ; Inputs
"RTN","LA7SRPT4",299,0)
 ;  FILE : File # (61, 62)
"RTN","LA7SRPT4",300,0)
 ;    IN :<byref> data array  IN(IEN)=SCT Code
"RTN","LA7SRPT4",301,0)
 N REC,DATA,FLDS,TMPNM,F01,F20
"RTN","LA7SRPT4",302,0)
 S FILE=$G(FILE)
"RTN","LA7SRPT4",303,0)
 S TMPNM="LA7SRPT4"
"RTN","LA7SRPT4",304,0)
 S FLDS=".01;20"
"RTN","LA7SRPT4",305,0)
 S REC=""
"RTN","LA7SRPT4",306,0)
 F  S REC=$O(IN(REC)) Q:'REC  D  ;
"RTN","LA7SRPT4",307,0)
 . K DATA
"RTN","LA7SRPT4",308,0)
 . D GETFLDS^LA7SRPT1(FILE,REC_",",FLDS,.DATA)
"RTN","LA7SRPT4",309,0)
 . Q:'$D(DATA)
"RTN","LA7SRPT4",310,0)
 . S F01=DATA(.01,"E")
"RTN","LA7SRPT4",311,0)
 . S F20=$G(DATA(20,"E"))
"RTN","LA7SRPT4",312,0)
 . S ^TMP($J,TMPNM,FILE,F01,REC)=F20
"RTN","LA7SRPT4",313,0)
 Q
"RTN","LA7SRPT4",314,0)
 ;
"RTN","LA7SRPT4",315,0)
UL(I) ;
"RTN","LA7SRPT4",316,0)
 ; Underline On/Off
"RTN","LA7SRPT4",317,0)
 ; private method
"RTN","LA7SRPT4",318,0)
 ; Inputs
"RTN","LA7SRPT4",319,0)
 ;   I  I=1 turns on underline  I=0 turns off underline
"RTN","LA7SRPT4",320,0)
 I $G(IOUON)'="" I $G(IOUOFF)'="" D  ;
"RTN","LA7SRPT4",321,0)
 . W:'I IOUOFF
"RTN","LA7SRPT4",322,0)
 . W:I IOUON
"RTN","LA7SRPT4",323,0)
 Q
"RTN","LA7SRR")
0^17^B41992274
"RTN","LA7SRR",1,0)
LA7SRR ;DALOI/JMC - Select Accessions for Resending LEDI Results ;11/20/09  14:09
"RTN","LA7SRR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7SRR",3,0)
 ;
"RTN","LA7SRR",4,0)
EN ; Select Accessions to resend.
"RTN","LA7SRR",5,0)
 ;
"RTN","LA7SRR",6,0)
 ; Housekeeping before we start.
"RTN","LA7SRR",7,0)
 D EXIT
"RTN","LA7SRR",8,0)
 ;
"RTN","LA7SRR",9,0)
 S (LA7CNT,LA7QUIT)=0
"RTN","LA7SRR",10,0)
 ;
"RTN","LA7SRR",11,0)
 S DIR(0)="SO^1:Range of Accessions;2:Selected Accessions"
"RTN","LA7SRR",12,0)
 S DIR("A")="Selection Method",DIR("B")=1
"RTN","LA7SRR",13,0)
 D ^DIR
"RTN","LA7SRR",14,0)
 I $D(DIRUT) D EXIT Q
"RTN","LA7SRR",15,0)
 S LA7TYPE=+Y
"RTN","LA7SRR",16,0)
 ;
"RTN","LA7SRR",17,0)
 ; Get list of accession numbers, set flags used by LRWU4.
"RTN","LA7SRR",18,0)
 S LRACC=1,LREXMPT=1
"RTN","LA7SRR",19,0)
 I LA7TYPE=1 D
"RTN","LA7SRR",20,0)
 . D ^LRWU4
"RTN","LA7SRR",21,0)
 . I LRAN<1 S LA7QUIT=1 Q
"RTN","LA7SRR",22,0)
 . S FIRST=LRAN,X=$O(^LRO(68,LRAA,1,LRAD,1,":"),-1)
"RTN","LA7SRR",23,0)
 . S DIR(0)="NO^"_LRAN_":"_X_":0",DIR("B")=LRAN
"RTN","LA7SRR",24,0)
 . S DIR("A",1)="",DIR("A")="Retransmit from "_LRAN_" to"
"RTN","LA7SRR",25,0)
 . D ^DIR K DIR
"RTN","LA7SRR",26,0)
 . I $D(DIRUT) S LA7QUIT=1 Q
"RTN","LA7SRR",27,0)
 . S LRAN=FIRST-1,LAST=Y
"RTN","LA7SRR",28,0)
 . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:'LRAN!(LRAN>LAST)  D SETTMP
"RTN","LA7SRR",29,0)
 I LA7TYPE=2 F  D  Q:LA7QUIT!(LRAN<1)
"RTN","LA7SRR",30,0)
 . D ^LRWU4
"RTN","LA7SRR",31,0)
 . I $D(DTOUT)!($D(DUOUT)) S LA7QUIT=1 Q
"RTN","LA7SRR",32,0)
 . I LRAN<1 S:'$D(^TMP("LA7S-RTM",$J)) LA7QUIT=1 Q
"RTN","LA7SRR",33,0)
 . D SETTMP
"RTN","LA7SRR",34,0)
 I LA7QUIT D EXIT Q
"RTN","LA7SRR",35,0)
 ;
"RTN","LA7SRR",36,0)
 I '$D(^TMP("LA7S-RTM",$J)) D  Q
"RTN","LA7SRR",37,0)
 . S DIR("A",1)="No accessions found to retransmit."
"RTN","LA7SRR",38,0)
 . S DIR("A")="Enter RETURN to continue or '^' to exit"
"RTN","LA7SRR",39,0)
 . S DIR(0)="E"
"RTN","LA7SRR",40,0)
 . D ^DIR,EXIT
"RTN","LA7SRR",41,0)
 ;
"RTN","LA7SRR",42,0)
 S DIR("A")="Ready to retransmit"
"RTN","LA7SRR",43,0)
 S DIR("A",1)="Found "_LA7CNT_" accessions that can be retransmitted."
"RTN","LA7SRR",44,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LA7SRR",45,0)
 D ^DIR K DIR
"RTN","LA7SRR",46,0)
 I Y'=1 D EXIT Q
"RTN","LA7SRR",47,0)
 D EN^DDIOL("Working","","!")
"RTN","LA7SRR",48,0)
 S LA7CNT=0,LA7UID=""
"RTN","LA7SRR",49,0)
 F  S LA7UID=$O(^TMP("LA7S-RTM",$J,LA7UID)) Q:LA7UID=""  D
"RTN","LA7SRR",50,0)
 . K LA7X
"RTN","LA7SRR",51,0)
 . S LA7X=^TMP("LA7S-RTM",$J,LA7UID)
"RTN","LA7SRR",52,0)
 . S LA7NLT="",LA7CNT=LA7CNT+1
"RTN","LA7SRR",53,0)
 . F  S LA7NLT=$O(^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)) Q:LA7NLT=""  D
"RTN","LA7SRR",54,0)
 . . S LA764=$$FIND1^DIC(64,"","MX",LA7NLT,"C")
"RTN","LA7SRR",55,0)
 . . I 'LA764 Q
"RTN","LA7SRR",56,0)
 . . S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7SRR",57,0)
 . . K LA7Y
"RTN","LA7SRR",58,0)
 . . M LA7Y=^TMP("LA7S-RTM",$J,LA7UID,LA7NLT)
"RTN","LA7SRR",59,0)
 . . D SET^LA7VMSG($P(LA7X,"^"),$P(LA7X,"^",2),$P(LA7X,"^",3),$P(LA7X,"^",4),LA7NLTN,LA7NLT,$P(LA7X,"^",5),$P(LA7X,"^",6),$P(LA7X,"^",7),$P(LA7X,"^",8),.LA7Y,"ORU")
"RTN","LA7SRR",60,0)
 ;
"RTN","LA7SRR",61,0)
 ; Task background job to create messages
"RTN","LA7SRR",62,0)
 S ZTIO="",ZTRTN="ORU^LA7VMSG",ZTDTH=$H,ZTDESC="Resend Lab LEDI HL7 Result Message"
"RTN","LA7SRR",63,0)
 D ^%ZTLOAD
"RTN","LA7SRR",64,0)
 ;
"RTN","LA7SRR",65,0)
 K LA7X
"RTN","LA7SRR",66,0)
 S LA7X(1)="...Done",LA7X(1,"F")=""
"RTN","LA7SRR",67,0)
 I $G(ZTSK) D
"RTN","LA7SRR",68,0)
 . S LA7X(2)=LA7CNT_" accession"_$S(LA7CNT>1:"s",1:"")_" scheduled for retransmitting of results!"
"RTN","LA7SRR",69,0)
 . S LA7X(3)="Task# "_ZTSK_" queued for processing"
"RTN","LA7SRR",70,0)
 E  S LA7X(2)="*** Tasking of retransmission failed ***"
"RTN","LA7SRR",71,0)
 D EN^DDIOL(.LA7X),EXIT
"RTN","LA7SRR",72,0)
 ;
"RTN","LA7SRR",73,0)
 Q
"RTN","LA7SRR",74,0)
 ;
"RTN","LA7SRR",75,0)
 ;
"RTN","LA7SRR",76,0)
SETTMP ; Setup TMP global with accession to resend.
"RTN","LA7SRR",77,0)
 ;
"RTN","LA7SRR",78,0)
 N LA763,LA768,LA7ERR,LA7I,LA7VDB,LA7X,LA7Y,LR60,LR61,LRDFN,LRIDT,LRODT,LRSB,LRSS
"RTN","LA7SRR",79,0)
 ;
"RTN","LA7SRR",80,0)
 S LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LA7SRR",81,0)
 F LA7I=0,.2,.3,3 S LA768(LA7I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,LA7I))
"RTN","LA7SRR",82,0)
 S LA7UID=$P(LA768(.3),"^")
"RTN","LA7SRR",83,0)
 ;
"RTN","LA7SRR",84,0)
 ; Not a LEDI specimen
"RTN","LA7SRR",85,0)
 I '$P(LA768(.3),"^",2),'$P(LA768(.3),"^",3) D  Q
"RTN","LA7SRR",86,0)
 . N LA7X
"RTN","LA7SRR",87,0)
 . S LA7X="Not a LEDI specimen - Accession "_$P(LA768(.2),"^")_" ("_LA7UID_") skipped"
"RTN","LA7SRR",88,0)
 . D EN^DDIOL(LA7X,"","!")
"RTN","LA7SRR",89,0)
 ;
"RTN","LA7SRR",90,0)
 I LRSS'?1(1"CH",1"MI",1"SP",1"CY",1"EM") D  Q
"RTN","LA7SRR",91,0)
 . N LA7X
"RTN","LA7SRR",92,0)
 . S LA7X(1)=$$GET1^DIQ(68,LRAA_",",.02)_" subscript NOT supported at this time"
"RTN","LA7SRR",93,0)
 . S LA7X(2)="Accession "_$P(LA768(.2),"^")_" ("_LA7UID_") skipped"
"RTN","LA7SRR",94,0)
 . D EN^DDIOL(.LA7X)
"RTN","LA7SRR",95,0)
 ;
"RTN","LA7SRR",96,0)
 ; Check file #63 for order codes and results
"RTN","LA7SRR",97,0)
 ; If no order NLT code found then use default NLT
"RTN","LA7SRR",98,0)
 ; Check if test has been added to order then report results using NLT code of the added test.
"RTN","LA7SRR",99,0)
 S LRDFN=$P(LA768(0),"^"),LRODT=$P(LA768(0),"^",4),LRIDT=$P(LA768(3),"^",5)
"RTN","LA7SRR",100,0)
 ; Check for date report completed.
"RTN","LA7SRR",101,0)
 I '$$OK2SEND D  Q
"RTN","LA7SRR",102,0)
 . N LA7X
"RTN","LA7SRR",103,0)
 . S LA7X="No date report completed - Accession "_$P(LA768(.2),"^")_" ("_LA7UID_") skipped"
"RTN","LA7SRR",104,0)
 . D EN^DDIOL(LA7X,"","!")
"RTN","LA7SRR",105,0)
 ;
"RTN","LA7SRR",106,0)
 I LRSS="CH" D
"RTN","LA7SRR",107,0)
 . S LRSB=1
"RTN","LA7SRR",108,0)
 . F  S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:'LRSB  D
"RTN","LA7SRR",109,0)
 . . S X=^LR(LRDFN,LRSS,LRIDT,LRSB)
"RTN","LA7SRR",110,0)
 . . S LA7NLT=$P($P(X,"^",3),"!")
"RTN","LA7SRR",111,0)
 . . I LA7NLT'="" S LA7Y(LA7NLT,LRSB)="" Q
"RTN","LA7SRR",112,0)
 . . S LR61=+$P(^LR(LRDFN,LRSS,LRIDT,0),"^",5)
"RTN","LA7SRR",113,0)
 . . S LA7NLT=$P($$DEFCODE^LA7VHLU5(LRSS,LRSB,$P(X,"^",3),LR61),"!")
"RTN","LA7SRR",114,0)
 . . I LA7NLT'="" S LA7Y(LA7NLT,LRSB)=""
"RTN","LA7SRR",115,0)
 ;
"RTN","LA7SRR",116,0)
 I LRSS="MI" D
"RTN","LA7SRR",117,0)
 . S LR60=0
"RTN","LA7SRR",118,0)
 . F  S LR60=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LR60)) Q:'LR60  D
"RTN","LA7SRR",119,0)
 . . S LA764=$P($G(^LAB(60,LR60,64)),"^")
"RTN","LA7SRR",120,0)
 . . S LA7NLT=$$GET1^DIQ(64,LA764_",",1)
"RTN","LA7SRR",121,0)
 . . S LA7VDB=$$GET1^DIQ(64,LA764_",",63,"I")
"RTN","LA7SRR",122,0)
 . . I LA7VDB'="" S LA7Y(LA7NLT,LA7VDB)=""
"RTN","LA7SRR",123,0)
 . I $D(LA7Y) Q
"RTN","LA7SRR",124,0)
 . N LA7X
"RTN","LA7SRR",125,0)
 . S LA7X(1)="No test on accession has an associated NLT database code"
"RTN","LA7SRR",126,0)
 . S LA7X(2)="Accession "_$P(LA768(.2),"^")_" ("_LA7UID_") skipped"
"RTN","LA7SRR",127,0)
 . D EN^DDIOL(.LA7X)
"RTN","LA7SRR",128,0)
 ;
"RTN","LA7SRR",129,0)
 ; Check ordered test multiple for dispositioned tests
"RTN","LA7SRR",130,0)
 ; Check AP type test for database codes
"RTN","LA7SRR",131,0)
 K LA7I
"RTN","LA7SRR",132,0)
 S LA7I=0
"RTN","LA7SRR",133,0)
 F  S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT",LA7I)) Q:'LA7I  D
"RTN","LA7SRR",134,0)
 . S LA7I(0)=^LR(LRDFN,LRSS,LRIDT,"ORUT",LA7I,0)
"RTN","LA7SRR",135,0)
 . S LA7NLT=$P(LA7I(0),"^"),LA764=$$FIND1^DIC(64,"","X",LA7NLT,"E","","LA7ERR")
"RTN","LA7SRR",136,0)
 . I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LA7SRR",137,0)
 . . S LA7Y(LA7NLT)=""
"RTN","LA7SRR",138,0)
 . . S LA7VDB=$$GET1^DIQ(64,LA764_",",63,"I")
"RTN","LA7SRR",139,0)
 . . I LA7VDB'="" S LA7Y(LA7NLT,LA7VDB)=""
"RTN","LA7SRR",140,0)
 . I $P(LA7I(0),"^",10),'$D(LA7Y(LA7NLT)) S LA7Y(LA7NLT)=""
"RTN","LA7SRR",141,0)
 ;
"RTN","LA7SRR",142,0)
 I LRSS?1(1"SP",1"CY",1"EM"),'$D(LA7Y) D
"RTN","LA7SRR",143,0)
 . I LRSS="SP" S LA7Y("88515.0000")="" Q
"RTN","LA7SRR",144,0)
 . I LRSS="CY" S LA7Y("88593.0000")="" Q
"RTN","LA7SRR",145,0)
 . I LRSS="EM" S LA7Y("88597.0000")="" Q
"RTN","LA7SRR",146,0)
 ;
"RTN","LA7SRR",147,0)
 I LRSS="AU" S LA7Y("88533.0000")=""
"RTN","LA7SRR",148,0)
 ;
"RTN","LA7SRR",149,0)
 I LA7UID'="",$D(LA7Y) D
"RTN","LA7SRR",150,0)
 . S LA7CNT=LA7CNT+1
"RTN","LA7SRR",151,0)
 . S X=$P(LA768(.3),"^",1)_"^"_$P(LA768(.3),"^",2)_"^"_$P(LA768(.3),"^",5)_"^"_$P(LA768(.3),"^",3)_"^"_LRIDT_"^"_LRSS_"^"_LRDFN_"^"_LRODT
"RTN","LA7SRR",152,0)
 . S ^TMP("LA7S-RTM",$J,LA7UID)=X
"RTN","LA7SRR",153,0)
 . S LA7I=""
"RTN","LA7SRR",154,0)
 . F  S LA7I=$O(LA7Y(LA7I)) Q:LA7I=""  M ^TMP("LA7S-RTM",$J,LA7UID,LA7I)=LA7Y(LA7I)
"RTN","LA7SRR",155,0)
 Q
"RTN","LA7SRR",156,0)
 ;
"RTN","LA7SRR",157,0)
 ;
"RTN","LA7SRR",158,0)
OK2SEND() ; Check is this accession is OK to send, i.e. approved, released (preliminary/final/corrected)
"RTN","LA7SRR",159,0)
 ; Returns OK = 1 (true)  - report can be sent
"RTN","LA7SRR",160,0)
 ;              0 (false) - report not in a status to be sent.
"RTN","LA7SRR",161,0)
 ;
"RTN","LA7SRR",162,0)
 ; Called from above, LRVR0 and LA7VORU
"RTN","LA7SRR",163,0)
 ;
"RTN","LA7SRR",164,0)
 N LA7X,OK
"RTN","LA7SRR",165,0)
 S OK=0
"RTN","LA7SRR",166,0)
 ; Check 0th node for complete date
"RTN","LA7SRR",167,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),"^",3) S OK=1
"RTN","LA7SRR",168,0)
 ;
"RTN","LA7SRR",169,0)
 ; If complete and AP subscript then check RELEASE DATE/TIME
"RTN","LA7SRR",170,0)
 I OK,LRSS?1(1"SP",1"CY",1"EM"),$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^",11)="" S OK=0
"RTN","LA7SRR",171,0)
 ;
"RTN","LA7SRR",172,0)
 ; If not complete and "CH" subscript then check for NP status
"RTN","LA7SRR",173,0)
 I 'OK,LRSS="CH",'$O(^LR(LRDFN,"CH",LRIDT,1)) S OK=1
"RTN","LA7SRR",174,0)
 ;
"RTN","LA7SRR",175,0)
 ; If not complete and "MI" subscript then check each section of report
"RTN","LA7SRR",176,0)
 I 'OK,LRSS="MI" F LA7X=1,5,8,11,16 I $P($G(^LR(LRDFN,LRSS,LRIDT,LA7X)),"^") S OK=1 Q
"RTN","LA7SRR",177,0)
 ;
"RTN","LA7SRR",178,0)
 ; Also check for test that has NP status
"RTN","LA7SRR",179,0)
 I 'OK D NPSTATUS
"RTN","LA7SRR",180,0)
 Q OK
"RTN","LA7SRR",181,0)
 ;
"RTN","LA7SRR",182,0)
 ;
"RTN","LA7SRR",183,0)
NPSTATUS ; Check ORUT node for test with NP status
"RTN","LA7SRR",184,0)
 ;
"RTN","LA7SRR",185,0)
 N LA7DISPO,LA7I
"RTN","LA7SRR",186,0)
 S LA7DISPO=$$FIND1^DIC(64.061,"","OQX","X","D","I $P(^(0),U,5)=""0123""")
"RTN","LA7SRR",187,0)
 S LA7I=0
"RTN","LA7SRR",188,0)
 F  S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT",LA7I)) Q:'LA7I  I $P(^(LA7I,0),"^",10)=LA7DISPO S OK=1 Q
"RTN","LA7SRR",189,0)
 Q
"RTN","LA7SRR",190,0)
 ;
"RTN","LA7SRR",191,0)
 ;
"RTN","LA7SRR",192,0)
EXIT ; Housekeeping - clean up.
"RTN","LA7SRR",193,0)
 K ^TMP("LA7S-RTM",$J)
"RTN","LA7SRR",194,0)
 K LA764,LA7CNT,LA7NLT,LA7NLTN,LA7QUIT,LA7TYPE,LA7UID,LA7X,LA7Y
"RTN","LA7SRR",195,0)
 K LRAA,LRACC,LRAD,LRAN,LREXMPT,LRIDIV,LRSS,LRX
"RTN","LA7SRR",196,0)
 K %DT,DA,DIC,DIR,DIRUT,DTOUT,DUOUT,FIRST,LAST,X,Y
"RTN","LA7SRR",197,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LA7SRR",198,0)
 Q
"RTN","LA7UIO1")
0^96^B66837499
"RTN","LA7UIO1",1,0)
LA7UIO1 ;DALOI/JMC - Process Download Message for an entry in 62.48 ;11/17/11  09:16
"RTN","LA7UIO1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**66,74**;Sep 27, 1994;Build 229
"RTN","LA7UIO1",3,0)
 ;
"RTN","LA7UIO1",4,0)
 Q
"RTN","LA7UIO1",5,0)
 ;
"RTN","LA7UIO1",6,0)
BUILD ; Build one accession into an HL7 message
"RTN","LA7UIO1",7,0)
 ;
"RTN","LA7UIO1",8,0)
 N GBL,HL,LA760,LA761,LA7CDT,LA7CMT,LA7CS,LA7ERR,LA7FAC,LA7FS,LA7ECH,LA7HLP,LA7I,LA7ID,LA7LINK,LA7NVAF,LA7OBRSN,LA7PIDSN,LA7SCMT,LA7SID,LA7SPEC,LA7X,LA7Y
"RTN","LA7UIO1",9,0)
 S GBL="^TMP(""HLS"","_$J_")"
"RTN","LA7UIO1",10,0)
 ;
"RTN","LA7UIO1",11,0)
 I '$D(ZTQUEUED),$G(LRLL) W:$X+5>IOM !,$S($G(LRTYPE):"Cup",1:"Seq"),": " W LA76822,", "
"RTN","LA7UIO1",12,0)
 ;
"RTN","LA7UIO1",13,0)
 S LA7CNT=0
"RTN","LA7UIO1",14,0)
 F I=0,.1,.2,.3,3 S LA76802(I)=$G(^LRO(68,LA768,1,LA76801,1,LA76802,I))
"RTN","LA7UIO1",15,0)
 S LA7X=LA76802(3)
"RTN","LA7UIO1",16,0)
 ; Draw time
"RTN","LA7UIO1",17,0)
 S LA7CDT=+LA7X
"RTN","LA7UIO1",18,0)
 ;
"RTN","LA7UIO1",19,0)
 ; Specimen comment if any, strip "~"
"RTN","LA7UIO1",20,0)
 S LA7SCMT=$TR($P(LA7X,"^",6),"~")
"RTN","LA7UIO1",21,0)
 ;
"RTN","LA7UIO1",22,0)
 ; Specimen
"RTN","LA7UIO1",23,0)
 S LA761=+$G(^LRO(68,LA768,1,LA76801,1,LA76802,5,1,0))
"RTN","LA7UIO1",24,0)
 ; Accession/unique ID - Long (UID) or short (accession #) sample ID
"RTN","LA7UIO1",25,0)
 S LA7ACC=$P(LA76802(.2),"^"),LA7UID=$P(LA76802(.3),"^"),LA7X=$G(^LRO(68,LA768,.4))
"RTN","LA7UIO1",26,0)
 I $P(LA7X,"^",2)="S" S LA7SID=$$RJ^XLFSTR(LA76802,+$P(LA7X,"^",3),"0")
"RTN","LA7UIO1",27,0)
 E  S LA7SID=LA7UID
"RTN","LA7UIO1",28,0)
 ;
"RTN","LA7UIO1",29,0)
 ; Start message
"RTN","LA7UIO1",30,0)
 D INIT Q:$G(HL)
"RTN","LA7UIO1",31,0)
 ;
"RTN","LA7UIO1",32,0)
 ; Setup links and subscriber array for HL7 message generation
"RTN","LA7UIO1",33,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0)),LA7Y=$P(LA76248(0),"^")
"RTN","LA7UIO1",34,0)
 I $E(LA7Y,1,5)'="LA7UI"!($P(LA76248(0),"^",9)'=1) Q
"RTN","LA7UIO1",35,0)
 S LA7LINK="LA7UI ORM-O01 SUBS 2.2^"_LA7Y
"RTN","LA7UIO1",36,0)
 S LA7FAC=$P($$SITE^VASITE(DT),"^",3)
"RTN","LA7UIO1",37,0)
 S LA7HLP("SUBSCRIBER")="^^"_LA7FAC_"^"_LA7Y_"^"
"RTN","LA7UIO1",38,0)
 ; Following line used when debugging
"RTN","LA7UIO1",39,0)
 ;S $P(LA7HLP("SUBSCRIBER"),"^",8)="1-1-2"
"RTN","LA7UIO1",40,0)
 ;
"RTN","LA7UIO1",41,0)
 ; Build segments PID, PV1, and ORC/OBR segment for each test to be sent
"RTN","LA7UIO1",42,0)
 D PID,PV1
"RTN","LA7UIO1",43,0)
 S (LA7I,LA7OBRSN)=0
"RTN","LA7UIO1",44,0)
 F  S LA7I=$O(LA7ACC(LA7I)) Q:'LA7I  D ORC,OBR
"RTN","LA7UIO1",45,0)
 ; Build entry in MESSAGE QUEUE file 62.49
"RTN","LA7UIO1",46,0)
 D SENDMSG
"RTN","LA7UIO1",47,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7UIO1",48,0)
 D KVAR^LRX
"RTN","LA7UIO1",49,0)
 Q
"RTN","LA7UIO1",50,0)
 ;
"RTN","LA7UIO1",51,0)
 ;
"RTN","LA7UIO1",52,0)
INIT ; Create/initialize HL message
"RTN","LA7UIO1",53,0)
 ;
"RTN","LA7UIO1",54,0)
 K @GBL
"RTN","LA7UIO1",55,0)
 S (LA76249,LA7NVAF,LA7PIDSN)=0
"RTN","LA7UIO1",56,0)
 D STARTMSG^LA7VHLU("LA7UI ORM-O01 EVENT 2.2",.LA76249)
"RTN","LA7UIO1",57,0)
 S LA7ID=$P(LRAUTO,"^",1)_"-O-"_LA7UID
"RTN","LA7UIO1",58,0)
 ;
"RTN","LA7UIO1",59,0)
 K ^TMP("LA7-ID",$J)
"RTN","LA7UIO1",60,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ID,1)
"RTN","LA7UIO1",61,0)
 D SETID^LA7VHLU1(LA76249,"",LA7UID,0)
"RTN","LA7UIO1",62,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ACC,0)
"RTN","LA7UIO1",63,0)
 S LA7CS=$E(LA7ECH,1)
"RTN","LA7UIO1",64,0)
 I $G(HL) S LA7ERR=28 D UPDT6249^LA7VORM1
"RTN","LA7UIO1",65,0)
 Q
"RTN","LA7UIO1",66,0)
 ;
"RTN","LA7UIO1",67,0)
 ;
"RTN","LA7UIO1",68,0)
PID ; Build PID segment
"RTN","LA7UIO1",69,0)
 N LA7DATA,LA7FLAG,NAME,PID
"RTN","LA7UIO1",70,0)
 S LRDFN=+LA7ACC0,LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7UIO1",71,0)
 D DEM^LRX
"RTN","LA7UIO1",72,0)
 ;
"RTN","LA7UIO1",73,0)
 S PID(0)="PID"
"RTN","LA7UIO1",74,0)
 S PID(1)=1
"RTN","LA7UIO1",75,0)
 S PID(3)=$$M11^HLFNC(LRDFN)
"RTN","LA7UIO1",76,0)
 ;
"RTN","LA7UIO1",77,0)
 ; Pass patient and referral files through name standardization.
"RTN","LA7UIO1",78,0)
 ; Don't pass lab control and other file's "paient" names thru name standardization as it affects name order.
"RTN","LA7UIO1",79,0)
 I LRDPF?1(1"2",1"67",1"200") S NAME("FILE")=LRDPF,NAME("FIELD")=.01,NAME("IENS")=DFN,LA7FLAG="S"
"RTN","LA7UIO1",80,0)
 E  S NAME("FAMILY")=$P(PNM,","),NAME("GIVEN")=$P(PNM,",",2),LA7FLAG=""
"RTN","LA7UIO1",81,0)
 S PID(5)=$$HLNAME^XLFNAME(.NAME,LA7FLAG,LA7CS)
"RTN","LA7UIO1",82,0)
 ;
"RTN","LA7UIO1",83,0)
 ; Date of birth
"RTN","LA7UIO1",84,0)
 I DOB S PID(7)=$$FMTHL7^XLFDT(DOB)
"RTN","LA7UIO1",85,0)
 S PID(8)=$S(SEX'="":SEX,1:"U")
"RTN","LA7UIO1",86,0)
 ;
"RTN","LA7UIO1",87,0)
 ; Race
"RTN","LA7UIO1",88,0)
 D RACE
"RTN","LA7UIO1",89,0)
 ;
"RTN","LA7UIO1",90,0)
 ; Patient's SSN
"RTN","LA7UIO1",91,0)
 I SSN'="" S PID(19)=SSN
"RTN","LA7UIO1",92,0)
 ;
"RTN","LA7UIO1",93,0)
 D BUILDSEG^LA7VHLU(.PID,.LA7DATA,LA7FS)
"RTN","LA7UIO1",94,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",95,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",96,0)
 D SETID^LA7VHLU1(LA76249,"",PNM,0)
"RTN","LA7UIO1",97,0)
 Q
"RTN","LA7UIO1",98,0)
 ;
"RTN","LA7UIO1",99,0)
 ;
"RTN","LA7UIO1",100,0)
PV1 ; Build PV1 segment
"RTN","LA7UIO1",101,0)
 N LA7PV1,LA7X
"RTN","LA7UIO1",102,0)
 D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7UIO1",103,0)
 ; If not inpatient use patient location from Accession
"RTN","LA7UIO1",104,0)
 I $P(LA7PV1(0),LA7FS,3)'="I" S LA7X=$P($G(LA76802(0)),"^",7) S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH) S $P(LA7PV1(0),LA7FS,4)=LA7X
"RTN","LA7UIO1",105,0)
 ;
"RTN","LA7UIO1",106,0)
 D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7UIO1",107,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PV1)
"RTN","LA7UIO1",108,0)
 Q
"RTN","LA7UIO1",109,0)
 ;
"RTN","LA7UIO1",110,0)
 ;
"RTN","LA7UIO1",111,0)
ORC ; Build ORC segment
"RTN","LA7UIO1",112,0)
 N LA7DATA,ORC
"RTN","LA7UIO1",113,0)
 S ORC(0)="ORC"
"RTN","LA7UIO1",114,0)
 S ORC(1)="NW"
"RTN","LA7UIO1",115,0)
 ;
"RTN","LA7UIO1",116,0)
 ; Placer/filler order number - sample ID
"RTN","LA7UIO1",117,0)
 S ORC(2)=$$ORC2^LA7VORC(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",118,0)
 S ORC(3)=$$ORC3^LA7VORC(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",119,0)
 ;
"RTN","LA7UIO1",120,0)
 ; Order/draw time - if no order date/time then try draw time
"RTN","LA7UIO1",121,0)
 I $P(LA76802(0),"^",4) S ORC(9)=$$ORC9^LA7VORC($P(LA76802(0),"^",4))
"RTN","LA7UIO1",122,0)
 I '$P(LA76802(0),"^",4),$P(LA76802(3),"^") S ORC(9)=$$ORC9^LA7VORC($P(LA76802(3),"^"))
"RTN","LA7UIO1",123,0)
 ;
"RTN","LA7UIO1",124,0)
 ; Provider
"RTN","LA7UIO1",125,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7UIO1",126,0)
 S ORC(12)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7UIO1",127,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7UIO1",128,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",129,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",130,0)
 Q
"RTN","LA7UIO1",131,0)
 ;
"RTN","LA7UIO1",132,0)
 ;
"RTN","LA7UIO1",133,0)
OBR ; Build OBR segment
"RTN","LA7UIO1",134,0)
 N LA764,LA7ALT,LA7CADR,LA7NLT,LA7TCMT
"RTN","LA7UIO1",135,0)
 K OBR
"RTN","LA7UIO1",136,0)
 ;
"RTN","LA7UIO1",137,0)
 S LA760=+LA7ACC(LA7I)
"RTN","LA7UIO1",138,0)
 S LA764=+$P($G(^LAB(60,LA760,64)),"^")
"RTN","LA7UIO1",139,0)
 S LA7NLT=$P($G(^LAM(LA764,0)),"^",2)
"RTN","LA7UIO1",140,0)
 S LA7TMP=$G(^TMP("LA7",$J,LA7INST,LA7I))
"RTN","LA7UIO1",141,0)
 Q:'LA7TMP
"RTN","LA7UIO1",142,0)
 ;
"RTN","LA7UIO1",143,0)
 S LA7CODE=$P(LA7TMP,"^",6),LA7DATA=$P(LA7TMP,"^",7)
"RTN","LA7UIO1",144,0)
 S OBR(0)="OBR"
"RTN","LA7UIO1",145,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN)
"RTN","LA7UIO1",146,0)
 ; Placer/filler order number - sample ID
"RTN","LA7UIO1",147,0)
 S OBR(2)=$$OBR2^LA7VOBR(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",148,0)
 S OBR(3)=$$OBR3^LA7VOBR(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",149,0)
 ; Test order code
"RTN","LA7UIO1",150,0)
 S LA7ALT=LA7CODE_"^"_$$GET1^DIQ(60,LA760_",",.01)_"^"_"99001"
"RTN","LA7UIO1",151,0)
 S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH)
"RTN","LA7UIO1",152,0)
 ; Draw time.
"RTN","LA7UIO1",153,0)
 I $G(LA7CDT) S OBR(7)=$$OBR7^LA7VOBR(LA7CDT)
"RTN","LA7UIO1",154,0)
 ; Infection warning.
"RTN","LA7UIO1",155,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7UIO1",156,0)
 ;
"RTN","LA7UIO1",157,0)
 ; Specimen comment
"RTN","LA7UIO1",158,0)
 ; If no specimen comment
"RTN","LA7UIO1",159,0)
 ;  then check order for test comments on test
"RTN","LA7UIO1",160,0)
 ;   or parent test if panel exploded
"RTN","LA7UIO1",161,0)
 I LA7SCMT'="" S OBR(13)=$$OBR13^LA7VOBR(LA7SCMT,LA7FS,LA7ECH)
"RTN","LA7UIO1",162,0)
 I LA7SCMT="" D
"RTN","LA7UIO1",163,0)
 . S LA7TCMT=$$TESTCMT(LA768,LA76801,LA76802,LA760)
"RTN","LA7UIO1",164,0)
 . I LA7TCMT="" D
"RTN","LA7UIO1",165,0)
 . . N LA760P
"RTN","LA7UIO1",166,0)
 . . S LA760P=$P(LA7ACC(LA7I),"^",3)
"RTN","LA7UIO1",167,0)
 . . I LA760P>0,LA760'=LA760P S LA7TCMT=$$TESTCMT(LA768,LA76801,LA76802,LA760P)
"RTN","LA7UIO1",168,0)
 . I LA7TCMT'="" S OBR(13)=$$OBR13^LA7VOBR(LA7TCMT,LA7FS,LA7ECH)
"RTN","LA7UIO1",169,0)
 ;
"RTN","LA7UIO1",170,0)
 ; Lab Arrival Time
"RTN","LA7UIO1",171,0)
 S OBR(14)=$$OBR14^LA7VOBR($P(LA76802(3),"^",3))
"RTN","LA7UIO1",172,0)
 ; HL7 code from Topography
"RTN","LA7UIO1",173,0)
 S LA7X=$S(LRDPF=62.3:"^^^CONTROL",1:"")
"RTN","LA7UIO1",174,0)
 S OBR(15)=$$OBR15^LA7VOBR(LA761,"",LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",175,0)
 ; Ordering provider
"RTN","LA7UIO1",176,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7UIO1",177,0)
 S OBR(16)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7UIO1",178,0)
 ; Placer's field #1 - instrument name^card address
"RTN","LA7UIO1",179,0)
 K LA7X
"RTN","LA7UIO1",180,0)
 S LA7X(1)=$P(LRAUTO,"^")
"RTN","LA7UIO1",181,0)
 S LA7CADR=$P($G(^LAB(62.4,LRINST,9)),U,9)
"RTN","LA7UIO1",182,0)
 I LA7CADR'="" S LA7X(2)=LA7CADR
"RTN","LA7UIO1",183,0)
 S OBR(18)=$$OBR18^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",184,0)
 ; Placer's field #2 - tray^cup^lraa^lrad^lran^lracc^lruid
"RTN","LA7UIO1",185,0)
 K LA7X
"RTN","LA7UIO1",186,0)
 ; No tray/cup if don't send tray/cup flag.
"RTN","LA7UIO1",187,0)
 I $G(LRFORCE) S:LA76821 LA7X(1)=LA76821 S:LA76822 LA7X(2)=LA76822
"RTN","LA7UIO1",188,0)
 S LA7X(3)=LA768,LA7X(4)=LA76801,LA7X(5)=LA76802,LA7X(6)=LA7ACC,LA7X(7)=LA7UID
"RTN","LA7UIO1",189,0)
 S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",190,0)
 ;
"RTN","LA7UIO1",191,0)
 ; Test urgency
"RTN","LA7UIO1",192,0)
 S OBR(27)=$$OBR27^LA7VOBR("","",+$P(LA7ACC(LA7I),"^",2),LA7FS,LA7ECH)
"RTN","LA7UIO1",193,0)
 ;
"RTN","LA7UIO1",194,0)
 K LA7DATA
"RTN","LA7UIO1",195,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7UIO1",196,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",197,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",198,0)
 Q
"RTN","LA7UIO1",199,0)
 ;
"RTN","LA7UIO1",200,0)
 ;
"RTN","LA7UIO1",201,0)
SENDMSG ; Send the HL7 message.
"RTN","LA7UIO1",202,0)
 N HLL,HLP
"RTN","LA7UIO1",203,0)
 S HLL("LINKS",1)=LA7LINK
"RTN","LA7UIO1",204,0)
 I $D(LA7HLP) M HLP=LA7HLP
"RTN","LA7UIO1",205,0)
 D GEN^LA7VHLU,UPDT6249^LA7VORM1
"RTN","LA7UIO1",206,0)
 Q
"RTN","LA7UIO1",207,0)
 ;
"RTN","LA7UIO1",208,0)
 ;
"RTN","LA7UIO1",209,0)
TESTCMT(LA768,LA76801,LA76802,LA760) ; Check and build order test comments
"RTN","LA7UIO1",210,0)
 ;
"RTN","LA7UIO1",211,0)
 ; Call with LA768 = IEN of accesseion area
"RTN","LA7UIO1",212,0)
 ;         LA76801 = FM accession date
"RTN","LA7UIO1",213,0)
 ;         LA76802 = accession number
"RTN","LA7UIO1",214,0)
 ;           LA760 = IEN of file #60 test
"RTN","LA7UIO1",215,0)
 ;
"RTN","LA7UIO1",216,0)
 ; Returns  LA7CMT = comments in a single string (truncated to 300 characters per HL7 standard)
"RTN","LA7UIO1",217,0)
 ;
"RTN","LA7UIO1",218,0)
 N LA7CMT,LA7I,LA7QUIT,LA7X,LA7Y,LRIEN,LRODT,LRSN
"RTN","LA7UIO1",219,0)
 ;
"RTN","LA7UIO1",220,0)
 S LA7CMT="",LRIEN=0
"RTN","LA7UIO1",221,0)
 S LA7Y=$G(^LRO(68,LA768,1,LA76801,1,LA76802,0))
"RTN","LA7UIO1",222,0)
 S LRODT=+$P(LA7Y,"^",4),LRSN=+$P(LA7Y,"^",5)
"RTN","LA7UIO1",223,0)
 I LRODT>0,LRSN>0 S LRIEN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LA760,0))
"RTN","LA7UIO1",224,0)
 ;
"RTN","LA7UIO1",225,0)
 I LRIEN D
"RTN","LA7UIO1",226,0)
 . S (LA7I,LA7QUIT)=0,LA7X=""
"RTN","LA7UIO1",227,0)
 . F  S LA7I=$O(^LRO(69,LRODT,1,LRSN,2,LRIEN,1,LA7I)) Q:LA7I<1  D  Q:LA7QUIT
"RTN","LA7UIO1",228,0)
 . . S LA7X=$G(^LRO(69,LRODT,1,LRSN,2,LRIEN,1,LA7I,0))
"RTN","LA7UIO1",229,0)
 . . I $E(LA7X,1,10)="~For Test:" Q
"RTN","LA7UIO1",230,0)
 . . I LA7X'="" S LA7X=$TR(LA7X,"~","")
"RTN","LA7UIO1",231,0)
 . . I LA7CMT'="" S LA7X=" "_LA7X
"RTN","LA7UIO1",232,0)
 . . S LA7CMT=LA7CMT_LA7X
"RTN","LA7UIO1",233,0)
 . . I $L(LA7CMT)>300 S LA7CMT=$E(LA7CMT,1,300),LA7QUIT=1
"RTN","LA7UIO1",234,0)
 ;
"RTN","LA7UIO1",235,0)
 Q LA7CMT
"RTN","LA7UIO1",236,0)
 ;
"RTN","LA7UIO1",237,0)
 ;
"RTN","LA7UIO1",238,0)
RACE ; Build RACE field in PID segment
"RTN","LA7UIO1",239,0)
 ;
"RTN","LA7UIO1",240,0)
 N CNT,IEN,LA7X,LA7Y,RACE,RACENUM,X,Y
"RTN","LA7UIO1",241,0)
 ;
"RTN","LA7UIO1",242,0)
 S PID(10)=""
"RTN","LA7UIO1",243,0)
 ;
"RTN","LA7UIO1",244,0)
 ; if from PATIENT file (#2) then check RACE array (VADM(12).
"RTN","LA7UIO1",245,0)
 I LRDPF=2,$G(VADM(12)) D  Q
"RTN","LA7UIO1",246,0)
 . ; Loop through all races (CNT is repetition location)
"RTN","LA7UIO1",247,0)
 . S RACENUM=0
"RTN","LA7UIO1",248,0)
 . F CNT=1:1 S RACENUM=+$O(VADM(12,RACENUM)) Q:'RACENUM  D
"RTN","LA7UIO1",249,0)
 . . ; Fabricate race value -> RACE-METHOD
"RTN","LA7UIO1",250,0)
 . . S RACE=$$PTR2CODE^DGUTL4(+VADM(12,RACENUM),1,2)
"RTN","LA7UIO1",251,0)
 . . S X=$$PTR2CODE^DGUTL4(+$G(VADM(12,RACENUM,1)),3,2)
"RTN","LA7UIO1",252,0)
 . . S:X="" X="UNK"
"RTN","LA7UIO1",253,0)
 . . S RACE=RACE_"-"_X
"RTN","LA7UIO1",254,0)
 . . ; First triplet
"RTN","LA7UIO1",255,0)
 . . S LA7Y(10,CNT,1)=RACE
"RTN","LA7UIO1",256,0)
 . . S LA7Y(10,CNT,2)=$P(VADM(12,RACENUM),"^",2)
"RTN","LA7UIO1",257,0)
 . . S LA7Y(10,CNT,3)="HL70005"
"RTN","LA7UIO1",258,0)
 . . ; Second triplet
"RTN","LA7UIO1",259,0)
 . . S X=$$PTR2CODE^DGUTL4(+VADM(12,RACENUM),1,3)
"RTN","LA7UIO1",260,0)
 . . S LA7Y(10,CNT,4)=X
"RTN","LA7UIO1",261,0)
 . . S LA7Y(10,CNT,5)=$P(VADM(12,RACENUM),"^",2)
"RTN","LA7UIO1",262,0)
 . . S LA7Y(10,CNT,6)="CDC"
"RTN","LA7UIO1",263,0)
 . S IEN=0
"RTN","LA7UIO1",264,0)
 . F  S IEN=$O(LA7Y(10,IEN)) Q:IEN=""  D
"RTN","LA7UIO1",265,0)
 . . S LA7X=""
"RTN","LA7UIO1",266,0)
 . . F CNT=1:1:6 I LA7Y(10,IEN,CNT)'="" S $P(LA7X,$E(LA7ECH,1),CNT)=LA7Y(10,IEN,CNT)
"RTN","LA7UIO1",267,0)
 . . I LA7X="" Q
"RTN","LA7UIO1",268,0)
 . . I PID(10)'="" S PID(10)=PID(10)_$E(LA7ECH,2)
"RTN","LA7UIO1",269,0)
 . . S PID(10)=PID(10)_LA7X
"RTN","LA7UIO1",270,0)
 ;
"RTN","LA7UIO1",271,0)
 ; if from REFERRAL PATIENT file (#67) then check RACE field.
"RTN","LA7UIO1",272,0)
 I LRDPF=67 D  Q
"RTN","LA7UIO1",273,0)
 . S LA7X=$$GET1^DIQ(67,DFN_",",.06,"I")
"RTN","LA7UIO1",274,0)
 . I LA7X<1 Q
"RTN","LA7UIO1",275,0)
 . S PID(10)=$$PTR2CODE^DGUTL4(LA7X,1,2)
"RTN","LA7UIO1",276,0)
 . S $P(PID(10),$E(LA7ECH,1),2)=$$PTR2TEXT^DGUTL4(LA7X,1)
"RTN","LA7UIO1",277,0)
 . S $P(PID(10),$E(LA7ECH,1),3)="HL70005"
"RTN","LA7UIO1",278,0)
 ;
"RTN","LA7UIO1",279,0)
 Q
"RTN","LA7UTILA")
0^53^B34688936
"RTN","LA7UTILA",1,0)
LA7UTILA ;DALOI/JMC - Browse UI message ;05/01/09  16:43
"RTN","LA7UTILA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**23,27,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7UTILA",3,0)
 ;
"RTN","LA7UTILA",4,0)
EN ; Select a Universal Interface message to browse.
"RTN","LA7UTILA",5,0)
 N LA7LIST,DIC,DIR,DIRUT,DTOUR,DUOUT,PARAM,X
"RTN","LA7UTILA",6,0)
 D EXIT ; Housekeeping before we start.
"RTN","LA7UTILA",7,0)
 S PARAM("SHOIDS")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS",1,"Q")
"RTN","LA7UTILA",8,0)
 S PARAM("SHOIDS LAST")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS LAST",1,"Q")
"RTN","LA7UTILA",9,0)
 S X=PARAM("SHOIDS")
"RTN","LA7UTILA",10,0)
 I X="L" S X=PARAM("SHOIDS LAST")
"RTN","LA7UTILA",11,0)
 I X="" S X=PARAM("SHOIDS")
"RTN","LA7UTILA",12,0)
 I X="" S X=1
"RTN","LA7UTILA",13,0)
 I X'=+X S X=$S(X="Y":1,X="N":0,1:1)
"RTN","LA7UTILA",14,0)
 K PARAM
"RTN","LA7UTILA",15,0)
 S DIR("B")=$S(X:"YES",1:"NO")
"RTN","LA7UTILA",16,0)
 S DIR(0)="Y",DIR("A")="Display identifiers during message selection"
"RTN","LA7UTILA",17,0)
 D ^DIR
"RTN","LA7UTILA",18,0)
 I $D(DIRUT) D EXIT Q
"RTN","LA7UTILA",19,0)
 I Y<1 S DIC("W")="D DICW^LA7UTILA"
"RTN","LA7UTILA",20,0)
 ; save PARAM setting
"RTN","LA7UTILA",21,0)
 D EN^XPAR("USR","LA7UTILA SHOIDS LAST",1,$S(+Y>0:1,1:0))
"RTN","LA7UTILA",22,0)
 S DIC="^LAHM(62.49,"
"RTN","LA7UTILA",23,0)
 S DIC(0)="EQMZ"
"RTN","LA7UTILA",24,0)
 S X=$$SELECT^LRUTIL(.DIC,.LA7LIST,"Message",10,0,1,1)
"RTN","LA7UTILA",25,0)
 K DIC,DIR
"RTN","LA7UTILA",26,0)
 I '$O(LA7LIST(0)) D EXIT Q
"RTN","LA7UTILA",27,0)
 D DEV
"RTN","LA7UTILA",28,0)
 Q
"RTN","LA7UTILA",29,0)
 ;
"RTN","LA7UTILA",30,0)
DEV ; Called from LA7UXQA - when viewing message via alert system.
"RTN","LA7UTILA",31,0)
 N PARAM,DIR,X
"RTN","LA7UTILA",32,0)
 ; DFLT = N,Y,L (no,yes,last)
"RTN","LA7UTILA",33,0)
 S PARAM("PARSE")=$$GET^XPAR("USR^SYS","LA7UTILA PARSE",1,"Q")
"RTN","LA7UTILA",34,0)
 S PARAM("PARSE LAST")=$$GET^XPAR("USR^SYS","LA7UTILA PARSE LAST",1,"Q")
"RTN","LA7UTILA",35,0)
 S DIR(0)="YO"
"RTN","LA7UTILA",36,0)
 S DIR("A")="Parse message fields based on HL7 segments"
"RTN","LA7UTILA",37,0)
 S X=PARAM("PARSE")
"RTN","LA7UTILA",38,0)
 I X="L" S X=PARAM("PARSE LAST")
"RTN","LA7UTILA",39,0)
 I X="" S X=PARAM("PARSE")
"RTN","LA7UTILA",40,0)
 I X="" S X=1
"RTN","LA7UTILA",41,0)
 I X'=+X S X=$S(X="Y":1,X="N":0,1:1)
"RTN","LA7UTILA",42,0)
 S DIR("B")=$S(X:"YES",1:"NO")
"RTN","LA7UTILA",43,0)
 D ^DIR K DIR
"RTN","LA7UTILA",44,0)
 I $D(DIRUT) D EXIT Q
"RTN","LA7UTILA",45,0)
 D EN^XPAR("USR","LA7UTILA PARSE LAST",1,$S(+Y>0:1,1:0))
"RTN","LA7UTILA",46,0)
 S LA7PARS=+Y ; Save flag to parse message.
"RTN","LA7UTILA",47,0)
 I LA7PARS D  I $D(DIRUT) D EXIT Q
"RTN","LA7UTILA",48,0)
 . S DIR(0)="YO",DIR("A")="Suppress blank segments",DIR("B")="YES"
"RTN","LA7UTILA",49,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","LA7UTILA",50,0)
 . S $P(LA7PARS,"^",2)=+Y
"RTN","LA7UTILA",51,0)
 ; Ask device and task if requested.
"RTN","LA7UTILA",52,0)
 S %ZIS="Q" D ^%ZIS K %ZIS
"RTN","LA7UTILA",53,0)
 I POP D EXIT Q
"RTN","LA7UTILA",54,0)
 I $D(IO("Q")) D  G EXIT
"RTN","LA7UTILA",55,0)
 . S LA7TEST=0 ; Tasked - not a CRT.
"RTN","LA7UTILA",56,0)
 . S ZTRTN="DQ^LA7UTILA",ZTDESC="Print LA7 UI Messages",ZTSAVE("LA7*")=""
"RTN","LA7UTILA",57,0)
 . D ^%ZTLOAD
"RTN","LA7UTILA",58,0)
 . W !,"Request ",$S($D(ZTSK):"",1:"NOT "),"Queued"
"RTN","LA7UTILA",59,0)
 . K IO("Q")
"RTN","LA7UTILA",60,0)
 U IO(0)
"RTN","LA7UTILA",61,0)
 ;
"RTN","LA7UTILA",62,0)
 ; Flag to determine if okay to use browser (default=true).
"RTN","LA7UTILA",63,0)
 S LA7TEST=1
"RTN","LA7UTILA",64,0)
 ;
"RTN","LA7UTILA",65,0)
 ; Home device not current device or using non-CRT terminal type.
"RTN","LA7UTILA",66,0)
 I IO'=IO(0)!($E(IOST,1,2)'="C-") S LA7TEST=0
"RTN","LA7UTILA",67,0)
 ;
"RTN","LA7UTILA",68,0)
 ; If not queued and home device then test for browser
"RTN","LA7UTILA",69,0)
 I LA7TEST,'$$TEST^DDBRT D
"RTN","LA7UTILA",70,0)
 . S LA7TEST=0 ; Unable to use browser.
"RTN","LA7UTILA",71,0)
 . W !,$C(7),"This terminal does not support the needed functionality to use the Browser!"
"RTN","LA7UTILA",72,0)
 . W !,"Will use standard FileMan Data Display.",!
"RTN","LA7UTILA",73,0)
 I LA7TEST D
"RTN","LA7UTILA",74,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7UTILA",75,0)
 . K PARAM
"RTN","LA7UTILA",76,0)
 . S PARAM("BROWSER")=$$GET^XPAR("USR^SYS","LA7UTILA USE BROWSER",1,"Q")
"RTN","LA7UTILA",77,0)
 . S PARAM("BROWSER LAST")=$$GET^XPAR("USR^SYS","LA7UTILA USE BROWSER LAST",1,"Q")
"RTN","LA7UTILA",78,0)
 . S X=PARAM("BROWSER")
"RTN","LA7UTILA",79,0)
 . I X="L" S X=PARAM("BROWSER LAST")
"RTN","LA7UTILA",80,0)
 . I X="" S X=PARAM("BROWSER")
"RTN","LA7UTILA",81,0)
 . I X="" S X=1
"RTN","LA7UTILA",82,0)
 . I X'=+X S X=$S(X="Y":1,X="N":0,1:1)
"RTN","LA7UTILA",83,0)
 . ;S X=$$GET^XPAR("USR^SYS","LA7UTILA USE BROWSER",1,"Q")
"RTN","LA7UTILA",84,0)
 . S DIR(0)="YO",DIR("A")="Use Browser to display message(s)"
"RTN","LA7UTILA",85,0)
 . S DIR("B")=$S(X:"YES",1:"NO")
"RTN","LA7UTILA",86,0)
 . D ^DIR
"RTN","LA7UTILA",87,0)
 . I $D(DIRUT) S LA7TEST=-1 Q
"RTN","LA7UTILA",88,0)
 . D EN^XPAR("USR","LA7UTILA USE BROWSER LAST",1,$S(+Y>0:1,1:0))
"RTN","LA7UTILA",89,0)
 . S LA7TEST=+Y
"RTN","LA7UTILA",90,0)
 I LA7TEST<0 D EXIT Q
"RTN","LA7UTILA",91,0)
 D WAIT^DICD
"RTN","LA7UTILA",92,0)
 ;
"RTN","LA7UTILA",93,0)
DQ ; Dequeue entry point.
"RTN","LA7UTILA",94,0)
 U IO
"RTN","LA7UTILA",95,0)
 K ^TMP($J),^TMP("DDB",$J)
"RTN","LA7UTILA",96,0)
 ;
"RTN","LA7UTILA",97,0)
 S LA7IEN=0
"RTN","LA7UTILA",98,0)
 F  S LA7IEN=$O(LA7LIST(LA7IEN)) Q:'LA7IEN  D
"RTN","LA7UTILA",99,0)
 . S LA7J=1
"RTN","LA7UTILA",100,0)
 . D BRO^LA7UTILC("LA7 UI Message Display",LA7IEN,LA7IEN)
"RTN","LA7UTILA",101,0)
 ;
"RTN","LA7UTILA",102,0)
 ; Display using browser.
"RTN","LA7UTILA",103,0)
 I LA7TEST D  Q
"RTN","LA7UTILA",104,0)
 . D DOCLIST^DDBR("^TMP($J,""LIST"")","R")
"RTN","LA7UTILA",105,0)
 . D EXIT
"RTN","LA7UTILA",106,0)
 ;
"RTN","LA7UTILA",107,0)
 S (LA7IEN,LA7QUIT)=0
"RTN","LA7UTILA",108,0)
 S HDR=""
"RTN","LA7UTILA",109,0)
 F  S HDR=$O(^TMP($J,"LIST",HDR)) Q:HDR=""  D  Q:LA7QUIT
"RTN","LA7UTILA",110,0)
 . I IOST["C-" W @IOF
"RTN","LA7UTILA",111,0)
 . W $$CJ^XLFSTR(HDR,IOM," "),!
"RTN","LA7UTILA",112,0)
 . S LA7ROOT=^TMP($J,"LIST",HDR),LA7ROOT=$E(LA7ROOT,1,$L(LA7ROOT)-1)
"RTN","LA7UTILA",113,0)
 . S LA7CONT=0 ; Flag if line is continued on following line.
"RTN","LA7UTILA",114,0)
 . S I=0
"RTN","LA7UTILA",115,0)
 . F  S I=$O(@(LA7ROOT_","_I_")"))  Q:'I  D  Q:LA7QUIT
"RTN","LA7UTILA",116,0)
 . . S LA7X=^(I)
"RTN","LA7UTILA",117,0)
 . . I LA7X="" W ! Q  ; Print blank separator line
"RTN","LA7UTILA",118,0)
 . . F  S LA7Y=$E(LA7X,1,IOM-1) Q:LA7Y=""  D  Q:LA7QUIT
"RTN","LA7UTILA",119,0)
 . . . S LA7X=$E(LA7X,IOM,$L(LA7X))
"RTN","LA7UTILA",120,0)
 . . . I $L(LA7X) S LA7CONT=1,LA7X="--->"_LA7X
"RTN","LA7UTILA",121,0)
 . . . W !,LA7Y
"RTN","LA7UTILA",122,0)
 . . . I $Y+7>IOSL D EOP W @IOF Q:LA7QUIT
"RTN","LA7UTILA",123,0)
 . I 'LA7QUIT D EOP
"RTN","LA7UTILA",124,0)
 . W !!
"RTN","LA7UTILA",125,0)
 D EXIT
"RTN","LA7UTILA",126,0)
 Q
"RTN","LA7UTILA",127,0)
 ;
"RTN","LA7UTILA",128,0)
EOP ; End of page.
"RTN","LA7UTILA",129,0)
 I LA7CONT W !!,"NOTE: '--->' indicates continuation of previous line." S LA7CONT=0
"RTN","LA7UTILA",130,0)
 I $D(ZTQUEUED)!(IOST'["C-") Q
"RTN","LA7UTILA",131,0)
 S DIR(0)="E" D ^DIR K DIR S:Y'=1 LA7QUIT=1
"RTN","LA7UTILA",132,0)
 Q
"RTN","LA7UTILA",133,0)
 ;
"RTN","LA7UTILA",134,0)
EXIT ; Clean up.
"RTN","LA7UTILA",135,0)
 I $G(IOF)'="" W @IOF
"RTN","LA7UTILA",136,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7UTILA",137,0)
 E  D ^%ZISC
"RTN","LA7UTILA",138,0)
 K ^TMP($J),^TMP("DDB",$J)
"RTN","LA7UTILA",139,0)
 K ^TMP("LA7UTILC")
"RTN","LA7UTILA",140,0)
 K LA7CONT,LA7IEN,LA7J,LA7LIST,LA7PARS,LA7QUIT,LA7ROOT,LA7TEST,LA7X,LA7Y
"RTN","LA7UTILA",141,0)
 K DIC,DIR,HDR,HLECH,HLFS,I,J,K,L,M,V,X,Y,Z
"RTN","LA7UTILA",142,0)
 K VAUTVB,VAUTNI,VAUTSTR,VAUTNALL
"RTN","LA7UTILA",143,0)
 Q
"RTN","LA7UTILA",144,0)
 ;
"RTN","LA7UTILA",145,0)
FMT(LA76249) ; Perform test to determine storage format, each segment on one
"RTN","LA7UTILA",146,0)
 ;  node or segment has continuation nodes separated with null "" nodes.
"RTN","LA7UTILA",147,0)
 ; Call with LA76249 = ien of entry in file #62.49
"RTN","LA7UTILA",148,0)
 ;      Returns LA7Y = 0-old format, 1-new format
"RTN","LA7UTILA",149,0)
 ;
"RTN","LA7UTILA",150,0)
 N LA7END,LA7Y,LA7ROOT
"RTN","LA7UTILA",151,0)
 S (LA7END,LA7Y)=0,LA7ROOT="^LAHM(62.49,LA76249,150,0)"
"RTN","LA7UTILA",152,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7END  D
"RTN","LA7UTILA",153,0)
 . I $QS(LA7ROOT,1)'="62.49"!($QS(LA7ROOT,2)'=LA76249)!($QS(LA7ROOT,3)'=150) S LA7END=1 Q
"RTN","LA7UTILA",154,0)
 . I @LA7ROOT="" S (LA7Y,LA7END)=1
"RTN","LA7UTILA",155,0)
 Q LA7Y
"RTN","LA7UTILA",156,0)
 ;
"RTN","LA7UTILA",157,0)
DICW ;
"RTN","LA7UTILA",158,0)
 ; Private method for EN above.
"RTN","LA7UTILA",159,0)
 ; Displays certain identifier for lookup.
"RTN","LA7UTILA",160,0)
 ; Called by ^DIC through DIC("W")
"RTN","LA7UTILA",161,0)
 N LADATA,LAY,LAX,LAF1,LAF3,LAF4,LAF103,LAF105
"RTN","LA7UTILA",162,0)
 ; Y = IEN of entry DIC is at.
"RTN","LA7UTILA",163,0)
 ; ^(0) is at the global level @(DIC_"Y,0)"
"RTN","LA7UTILA",164,0)
 S LAX=""
"RTN","LA7UTILA",165,0)
 S LADATA=^(0)
"RTN","LA7UTILA",166,0)
 S LAF1=$P(LADATA,U,2)
"RTN","LA7UTILA",167,0)
 S:LAF1="" LAF1="?"
"RTN","LA7UTILA",168,0)
 S LAF3=$$LOW^XLFSTR($P(LADATA,U,3))
"RTN","LA7UTILA",169,0)
 S:LAF3="" LAF3="-"
"RTN","LA7UTILA",170,0)
 S LAF4=$P(LADATA,U,5)
"RTN","LA7UTILA",171,0)
 S LAY=$P(LADATA,U,6)
"RTN","LA7UTILA",172,0)
 I LAY'="" D  ; Instrument name
"RTN","LA7UTILA",173,0)
 . S LAX=LAY
"RTN","LA7UTILA",174,0)
 I LAX="" D  ;
"RTN","LA7UTILA",175,0)
 . S LAY=$G(^LAHM(62.49,Y,.5))
"RTN","LA7UTILA",176,0)
 . S LAY=$P(LAY,U,1)
"RTN","LA7UTILA",177,0)
 . Q:LAY=""
"RTN","LA7UTILA",178,0)
 . S LAY=$G(^LAHM(62.48,LAY,0))
"RTN","LA7UTILA",179,0)
 . S LAY=$P(LAY,U,1)
"RTN","LA7UTILA",180,0)
 . I LAY'="" D  ; Config name
"RTN","LA7UTILA",181,0)
 . . S LAX=LAY
"RTN","LA7UTILA",182,0)
 . ;
"RTN","LA7UTILA",183,0)
 S LADATA=$G(^LAHM(62.49,Y,100))
"RTN","LA7UTILA",184,0)
 S LAF103=$P(LADATA,U,4) ;sending fac
"RTN","LA7UTILA",185,0)
 S LAF105=$P(LADATA,U,6) ;receiving fac
"RTN","LA7UTILA",186,0)
 S LAY=""
"RTN","LA7UTILA",187,0)
 I LAF1="I" I LAF103'="" S LAY="  "_LAF103
"RTN","LA7UTILA",188,0)
 I LAF1="O" I LAF105'="" S LAY="  "_LAF105
"RTN","LA7UTILA",189,0)
 W " "_LAF1_LAF3_"  "_LAX_LAY_"  "_$$FMTE^XLFDT(LAF4,5)
"RTN","LA7UTILA",190,0)
 Q
"RTN","LA7UTILB")
0^42^B12063183
"RTN","LA7UTILB",1,0)
LA7UTILB ;DALOI/JMC - Reprocess Lab HL7 Incoming Messages ;July 22, 2008
"RTN","LA7UTILB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7UTILB",3,0)
 ;
"RTN","LA7UTILB",4,0)
EN ; Select a Lab HL7 message to reprocess.
"RTN","LA7UTILB",5,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,FDA,LA7DIE,LA76248,LA7I,LA7LIST,LA7X,PARAM,X,Y
"RTN","LA7UTILB",6,0)
 ;
"RTN","LA7UTILB",7,0)
 S PARAM("SHOIDS")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS",1,"Q")
"RTN","LA7UTILB",8,0)
 S PARAM("SHOIDS LAST")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS LAST",1,"Q")
"RTN","LA7UTILB",9,0)
 S X=PARAM("SHOIDS")
"RTN","LA7UTILB",10,0)
 I X="L" S X=PARAM("SHOIDS LAST")
"RTN","LA7UTILB",11,0)
 I X="" S X=PARAM("SHOIDS")
"RTN","LA7UTILB",12,0)
 I X="" S X=1
"RTN","LA7UTILB",13,0)
 I X'=+X S X=$S(X="Y":1,X="N":0,1:1)
"RTN","LA7UTILB",14,0)
 K PARAM
"RTN","LA7UTILB",15,0)
 S DIR("B")=$S(X:"YES",1:"NO")
"RTN","LA7UTILB",16,0)
 S DIR(0)="Y",DIR("A")="Display identifiers during message selection"
"RTN","LA7UTILB",17,0)
 D ^DIR
"RTN","LA7UTILB",18,0)
 I $D(DIRUT) Q
"RTN","LA7UTILB",19,0)
 I Y<1 S DIC("W")="D DICW^LA7UTILA"
"RTN","LA7UTILB",20,0)
 ; save PARAM setting
"RTN","LA7UTILB",21,0)
 D EN^XPAR("USR","LA7UTILA SHOIDS LAST",1,$S(+Y>0:1,1:0))
"RTN","LA7UTILB",22,0)
 S DIC="^LAHM(62.49,",DIC("S")="I $$DICS^LA7UTILB(Y)"
"RTN","LA7UTILB",23,0)
 S DIC(0)="EQMZ"
"RTN","LA7UTILB",24,0)
 S X=$$SELECT^LRUTIL(.DIC,.LA7LIST,"Message",10,0,1,1)
"RTN","LA7UTILB",25,0)
 ;
"RTN","LA7UTILB",26,0)
 K DIC,DIR
"RTN","LA7UTILB",27,0)
 I '$O(LA7LIST(0)) D CHECKQ Q
"RTN","LA7UTILB",28,0)
 ; Confirm selection
"RTN","LA7UTILB",29,0)
 S DIR(0)="YO",DIR("A")="Reprocess these messages",DIR("B")="YES"
"RTN","LA7UTILB",30,0)
 D ^DIR
"RTN","LA7UTILB",31,0)
 I Y'=1 Q
"RTN","LA7UTILB",32,0)
 D SETSTAT,TASK
"RTN","LA7UTILB",33,0)
 Q
"RTN","LA7UTILB",34,0)
 ;
"RTN","LA7UTILB",35,0)
 ;
"RTN","LA7UTILB",36,0)
SETSTAT ; Set status of selected messages to queued for processing
"RTN","LA7UTILB",37,0)
 S LA7I=0
"RTN","LA7UTILB",38,0)
 F  S LA7I=$O(LA7LIST(LA7I)) Q:'LA7I  D
"RTN","LA7UTILB",39,0)
 . K FDA,LRDIE
"RTN","LA7UTILB",40,0)
 . S FDA(1,62.49,LA7I_",",2)="Q"
"RTN","LA7UTILB",41,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LA7UTILB",42,0)
 . S LA76248=$P($G(^LAHM(62.49,LA7I,.5)),"^")
"RTN","LA7UTILB",43,0)
 . I LA76248 S LA76248(LA76248)=""
"RTN","LA7UTILB",44,0)
 ;
"RTN","LA7UTILB",45,0)
 Q
"RTN","LA7UTILB",46,0)
 ;
"RTN","LA7UTILB",47,0)
 ;
"RTN","LA7UTILB",48,0)
TASK ; Task processing routine for each message's respective configuration
"RTN","LA7UTILB",49,0)
 S LA76248=0
"RTN","LA7UTILB",50,0)
 F  S LA76248=$O(LA76248(LA76248)) Q:'LA76248  D
"RTN","LA7UTILB",51,0)
 . S LA7X=$P($G(^LAHM(62.48,LA76248,0)),"^")
"RTN","LA7UTILB",52,0)
 . I $G(^LAHM(62.48,LA76248,1))'="" X ^(1) D EN^DDIOL("Queued processing routine for configuration "_LA7X,"","!") Q
"RTN","LA7UTILB",53,0)
 . D EN^DDIOL($C(7)_"Unable to queue processing routine for configuration "_LA7X_" - No processing routine","","!")
"RTN","LA7UTILB",54,0)
 ;
"RTN","LA7UTILB",55,0)
 Q
"RTN","LA7UTILB",56,0)
 ;
"RTN","LA7UTILB",57,0)
 ;
"RTN","LA7UTILB",58,0)
CHECKQ ; Check "IQ" incoming queued for processing queues in case need to restart.
"RTN","LA7UTILB",59,0)
 N DIR,DIRUT,DTOUT,DUOUT,LA76248,LA7CNT,LA7I,LA7J,LA7K
"RTN","LA7UTILB",60,0)
 S (LA7I,LA7J)=0
"RTN","LA7UTILB",61,0)
 F  S LA7I=$O(^LAHM(62.48,LA7I)) Q:LA7I<1  D
"RTN","LA7UTILB",62,0)
 . I '$P(^LAHM(62.48,LA7I,0),"^",3) Q
"RTN","LA7UTILB",63,0)
 . I '$D(^LAHM(62.49,"Q",LA7I,"IQ")) Q
"RTN","LA7UTILB",64,0)
 . S (LA7CNT,LA7K)=0
"RTN","LA7UTILB",65,0)
 . F  S LA7K=$O(^LAHM(62.49,"Q",LA7I,"IQ",LA7K)) Q:LA7K<1  S LA7CNT=LA7CNT+1
"RTN","LA7UTILB",66,0)
 . S LA7J=LA7J+1,LA7J(LA7J)=LA7I,DIR("A",LA7J)=LA7J_"  "_$P(^LAHM(62.48,LA7I,0),"^")_" (Queue size: "_LA7CNT_")"
"RTN","LA7UTILB",67,0)
 I '$O(LA7J(0)) Q
"RTN","LA7UTILB",68,0)
 W !!
"RTN","LA7UTILB",69,0)
 S DIR(0)="LO^1:"_LA7J
"RTN","LA7UTILB",70,0)
 S DIR("A")="Select the number(s) of the configurations to restart"
"RTN","LA7UTILB",71,0)
 S DIR("A",.1)="The following configurations have messages queued for processing:",DIR("A",.2)=" ",DIR("A",LA7J+1)=" "
"RTN","LA7UTILB",72,0)
 D ^DIR
"RTN","LA7UTILB",73,0)
 I $D(DIRUT) Q
"RTN","LA7UTILB",74,0)
 S LA7I=0
"RTN","LA7UTILB",75,0)
 F LA7I=1:1 S LA7J=$P(Y,",",LA7I) Q:LA7J<1  S LA76248(LA7J(LA7J))=""
"RTN","LA7UTILB",76,0)
 I $D(LA76248) D TASK
"RTN","LA7UTILB",77,0)
 Q
"RTN","LA7UTILB",78,0)
 ;
"RTN","LA7UTILB",79,0)
 ;
"RTN","LA7UTILB",80,0)
DICS(DA) ; Perform FileMan DIC screen on lookup
"RTN","LA7UTILB",81,0)
 ; Call with DA = IEN of entry in file #62.49
"RTN","LA7UTILB",82,0)
 ; Returns LA7Y = 1 if entry should be selected
"RTN","LA7UTILB",83,0)
 ;              = 0 if not selectable
"RTN","LA7UTILB",84,0)
 ; Entry should be type (I)ncoming, have a status of (X)purgable, (E)rror or (Q)ueued for processing and
"RTN","LA7UTILB",85,0)
 ; be related to an message configuration type 1-UI or 10-LEDI.
"RTN","LA7UTILB",86,0)
 ; Messages for other configuration types should not be reprocessed at this time.
"RTN","LA7UTILB",87,0)
 N LA7I,LA7X,LA7Y
"RTN","LA7UTILB",88,0)
 S LA7I(0)=$G(^LAHM(62.49,DA,0)),LA7Y=0
"RTN","LA7UTILB",89,0)
 I $P(LA7I(0),"^",2)="I",$P(LA7I(0),"^",3)?1(1"X",1"E",1"Q") D
"RTN","LA7UTILB",90,0)
 . S LA7X=$P($G(^LAHM(62.49,DA,.5)),"^"),LA7X(0)=$G(^LAHM(62.48,LA7X,0))
"RTN","LA7UTILB",91,0)
 . I $P(LA7X(0),"^",9)>0,$P(LA7X(0),"^",9)<11 S LA7Y=1
"RTN","LA7UTILB",92,0)
 Q LA7Y
"RTN","LA7UTILC")
0^59^B150916057
"RTN","LA7UTILC",1,0)
LA7UTILC ;DALOI/JDB - Browse UI message <cont> ;05/01/09  15:59
"RTN","LA7UTILC",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7UTILC",3,0)
 ;
"RTN","LA7UTILC",4,0)
 Q
"RTN","LA7UTILC",5,0)
 ;
"RTN","LA7UTILC",6,0)
 ;
"RTN","LA7UTILC",7,0)
BRO(LA7HDR,LA7DOC,LA7IEN,LA7J) ; Setup text for browser.
"RTN","LA7UTILC",8,0)
 ; Called from DQ^LA7UTILA
"RTN","LA7UTILC",9,0)
 ;
"RTN","LA7UTILC",10,0)
 N LA7,LA7DT,LA7X,I,J,K,X,Y,EOS,SEGIN
"RTN","LA7UTILC",11,0)
 ;
"RTN","LA7UTILC",12,0)
 K ^TMP($$RTNNM,$J,"SEG")
"RTN","LA7UTILC",13,0)
 K ^TMP($$RTNNM,$J,"COMP")
"RTN","LA7UTILC",14,0)
 ;
"RTN","LA7UTILC",15,0)
 D GETS^DIQ(62.49,LA7IEN,".01:149;151:161;162*","ENR","LA7") ; Retrieve data from file 62.49
"RTN","LA7UTILC",16,0)
 S J=$G(LA7J,1)
"RTN","LA7UTILC",17,0)
 D ADDTEXT(" ["_$$CJ^XLFSTR(" Message Statistics ",IOM-4,"*")_"]")
"RTN","LA7UTILC",18,0)
 D ADDTEXT(" ")
"RTN","LA7UTILC",19,0)
 ;
"RTN","LA7UTILC",20,0)
 S I="LA7(62.49)",K=0,J(0)=J
"RTN","LA7UTILC",21,0)
 F  S I=$Q(@I) Q:I=""  Q:$E($QS(I,1),1,5)'=62.49  D
"RTN","LA7UTILC",22,0)
 . S X=$QS(I,3)_": "_@I
"RTN","LA7UTILC",23,0)
 . I K=0,$L(X)>((IOM\2)-1) S K=1,Y=""
"RTN","LA7UTILC",24,0)
 . I K=0 S K=1,Y=$$LJ^XLFSTR(X,(IOM\2)+2)
"RTN","LA7UTILC",25,0)
 . E  S K=0 D ADDTEXT(Y_$QS(I,3)_": "_@I)
"RTN","LA7UTILC",26,0)
 I K=1 D ADDTEXT(Y)
"RTN","LA7UTILC",27,0)
 I J(0)=J D ADDTEXT($$CJ^XLFSTR(" [None Found]",IOM-1))
"RTN","LA7UTILC",28,0)
 S LA7X=$G(^LAHM(62.49,LA7IEN,0))
"RTN","LA7UTILC",29,0)
 S LA7DT=$P(LA7X,"^",5) ; Date/time message received
"RTN","LA7UTILC",30,0)
 S LA7DT(0)=LA7DT\1 ; Date message received.
"RTN","LA7UTILC",31,0)
 S LA7DT(1)=LA7DT#1 ; Time message received.
"RTN","LA7UTILC",32,0)
 S K="LA7ERR^"_(LA7DT(0)-.1)
"RTN","LA7UTILC",33,0)
 D ADDTEXT(" ")
"RTN","LA7UTILC",34,0)
 D ADDTEXT(" ["_$$CJ^XLFSTR(" Error Message ",IOM-4,"*")_"]")
"RTN","LA7UTILC",35,0)
 D ADDTEXT(" ")
"RTN","LA7UTILC",36,0)
 ;
"RTN","LA7UTILC",37,0)
 ; Save value of "J", determine if any error message found.
"RTN","LA7UTILC",38,0)
 S J(0)=J
"RTN","LA7UTILC",39,0)
 F  S K=$O(^XTMP(K)) Q:K=""!($P(K,"^")'="LA7ERR")  D
"RTN","LA7UTILC",40,0)
 . I LA7DT(0)=$P(K,"^",2) S I=LA7DT(1)-.01 S:I<0 I=0 ; Start looking after date/time of message.
"RTN","LA7UTILC",41,0)
 . E  S I=0
"RTN","LA7UTILC",42,0)
 . F  S I=$O(^XTMP(K,I)) Q:'I  D
"RTN","LA7UTILC",43,0)
 . . S X=^XTMP(K,I)
"RTN","LA7UTILC",44,0)
 . . I $P(X,"^",2)=LA7IEN D
"RTN","LA7UTILC",45,0)
 . . . D ADDTEXT("Date: "_$$FMTE^XLFDT($P(K,"^",2)+I,1))
"RTN","LA7UTILC",46,0)
 . . . S X=$P(X,"^",4)
"RTN","LA7UTILC",47,0)
 . . . S X=$$DECODEUP^XMCU1(X)
"RTN","LA7UTILC",48,0)
 . . . D ADDTEXT("Text: "_X) ; Get error message.
"RTN","LA7UTILC",49,0)
 . . . D ADDTEXT(" ")
"RTN","LA7UTILC",50,0)
 ;
"RTN","LA7UTILC",51,0)
 I J(0)=J D ADDTEXT($$CJ^XLFSTR("[None Found]",IOM-1))
"RTN","LA7UTILC",52,0)
 D ADDTEXT(" ")
"RTN","LA7UTILC",53,0)
 D ADDTEXT(" ["_$$CJ^XLFSTR(" Text of Message ",IOM-4,"*")_"]")
"RTN","LA7UTILC",54,0)
 D ADDTEXT(" ")
"RTN","LA7UTILC",55,0)
 D HLIN("^LAHM(62.49,LA7IEN,150,")
"RTN","LA7UTILC",56,0)
 ;
"RTN","LA7UTILC",57,0)
 ; If linked to another entry go parse that entry also
"RTN","LA7UTILC",58,0)
 I $P(LA7X,"^",7) D BRO("LA7 UI Message Display",LA7DOC,$P(LA7X,"^",7),J)
"RTN","LA7UTILC",59,0)
 ;
"RTN","LA7UTILC",60,0)
 ; Setup document list.
"RTN","LA7UTILC",61,0)
 S LA7HDR=LA7HDR_" Msg #"_LA7DOC_" - "_$P(^LAHM(62.49,LA7DOC,0),"^",6)
"RTN","LA7UTILC",62,0)
 S ^TMP($J,"LIST",LA7HDR)="^TMP(""DDB"",$J,"_LA7DOC_")"
"RTN","LA7UTILC",63,0)
 Q
"RTN","LA7UTILC",64,0)
 ;
"RTN","LA7UTILC",65,0)
 ;
"RTN","LA7UTILC",66,0)
HLIN(GBL) ;
"RTN","LA7UTILC",67,0)
 ; Retrieve/Parse HL7 message from global.
"RTN","LA7UTILC",68,0)
 ; Uses LA7DOC,J,LA7X,LA7PASR in symtbl
"RTN","LA7UTILC",69,0)
 ; Can be called separately to populate ^TMP("DDB",$J
"RTN","LA7UTILC",70,0)
 ; Inputs
"RTN","LA7UTILC",71,0)
 ;   GBL: Open global root where HL7 message is stored
"RTN","LA7UTILC",72,0)
 ;      : Format must be ^GBL(subscripts,seq,0)=data
"RTN","LA7UTILC",73,0)
 ;      : ie ^LAHM(62.49,LA7IEN,150,
"RTN","LA7UTILC",74,0)
 ;
"RTN","LA7UTILC",75,0)
 N EOS,HLFS,HLECH,CNT,I,SEGIN
"RTN","LA7UTILC",76,0)
 I $D(LA7DOC)[0 N LA7DOC S LA7DOC=""
"RTN","LA7UTILC",77,0)
 I $D(LA7X)[0 N LA7X S LA7X=""
"RTN","LA7UTILC",78,0)
 I $D(J)[0 N J S J=0
"RTN","LA7UTILC",79,0)
 S J(0)=J
"RTN","LA7UTILC",80,0)
 S I=0
"RTN","LA7UTILC",81,0)
 S EOS=0 ;End of Segment flag
"RTN","LA7UTILC",82,0)
 ; HL7 message text.  Segments are separated by empty
"RTN","LA7UTILC",83,0)
 ; lines in the WP field.  Segments can be greater than
"RTN","LA7UTILC",84,0)
 ; global line storage limit (continuation).
"RTN","LA7UTILC",85,0)
 ; Each HL7 segment is stored (one at a time) in
"RTN","LA7UTILC",86,0)
 ; ^TMP($$NMSPC,$J,"SEG",#) for passing to SEG2FLD API
"RTN","LA7UTILC",87,0)
 ;
"RTN","LA7UTILC",88,0)
 K ^TMP($$RTNNM(),$J,"SEG")
"RTN","LA7UTILC",89,0)
 ;
"RTN","LA7UTILC",90,0)
 ; Segments are stored one at a time here for SEG2FLD API
"RTN","LA7UTILC",91,0)
 S SEGIN="^TMP("""_$$RTNNM()_""",$J,""SEG"")"
"RTN","LA7UTILC",92,0)
 S CNT=0
"RTN","LA7UTILC",93,0)
 S GBL=$G(GBL)
"RTN","LA7UTILC",94,0)
 Q:GBL=""
"RTN","LA7UTILC",95,0)
 S GBL=GBL_"I)"
"RTN","LA7UTILC",96,0)
 S I=0
"RTN","LA7UTILC",97,0)
 F  S I=$O(@GBL) Q:'I  D
"RTN","LA7UTILC",98,0)
 . S CNT=CNT+1
"RTN","LA7UTILC",99,0)
 . S GBL(0)=$E(GBL,1,$L(GBL)-1)
"RTN","LA7UTILC",100,0)
 . S GBL(0)=GBL(0)_",0)"
"RTN","LA7UTILC",101,0)
 . S X=$G(@GBL(0))
"RTN","LA7UTILC",102,0)
 . I $G(HLFS)="" I $E(X,1,3)="MSH" S HLFS=$E(X,4,4),HLECH=$E(X,5,8)
"RTN","LA7UTILC",103,0)
 . D ADDTEXT(X)
"RTN","LA7UTILC",104,0)
 . I X="" S EOS=1 ;end of segment indicated by blank line
"RTN","LA7UTILC",105,0)
 . E  S EOS=0
"RTN","LA7UTILC",106,0)
 . ; Parse each message segment.
"RTN","LA7UTILC",107,0)
 . I '$G(LA7PARS) Q
"RTN","LA7UTILC",108,0)
 . I 'EOS S ^TMP($$RTNNM,$J,"SEG",CNT)=X
"RTN","LA7UTILC",109,0)
 . I EOS D  ;
"RTN","LA7UTILC",110,0)
 . . N HLARR,HLOARR
"RTN","LA7UTILC",111,0)
 . . M HLARR=^TMP($$RTNNM,$J,"SEG")
"RTN","LA7UTILC",112,0)
 . . D HL2HLO(,.HLARR,HLFS_HLECH,.HLOARR)
"RTN","LA7UTILC",113,0)
 . . K HLARR
"RTN","LA7UTILC",114,0)
 . . D PF
"RTN","LA7UTILC",115,0)
 . . S EOS=0
"RTN","LA7UTILC",116,0)
 . . K ^TMP($$RTNNM,$J,"SEG")
"RTN","LA7UTILC",117,0)
 . . K ^TMP("LA7VHLU7-S2F",$J,"SEG")
"RTN","LA7UTILC",118,0)
 . ;
"RTN","LA7UTILC",119,0)
 ;
"RTN","LA7UTILC",120,0)
 I J(0)=J D ADDTEXT($$CJ^XLFSTR("[None Found]",IOM-1))
"RTN","LA7UTILC",121,0)
 Q
"RTN","LA7UTILC",122,0)
 ;
"RTN","LA7UTILC",123,0)
 ;
"RTN","LA7UTILC",124,0)
PF ;
"RTN","LA7UTILC",125,0)
 ; Parse Fields
"RTN","LA7UTILC",126,0)
 ; HLO compatible array in HLOARR
"RTN","LA7UTILC",127,0)
 ; Symbol Table
"RTN","LA7UTILC",128,0)
 ;   HLFS defined (HL7 Field Separator)
"RTN","LA7UTILC",129,0)
 ;
"RTN","LA7UTILC",130,0)
 N NODE,NODEN,SUB,FLD,FLDCNT,FLDLAST,STR,SEG,CNT,ISCOMP,ISMSH,DATA
"RTN","LA7UTILC",131,0)
 N SHOWNULL,SHOWFLD,SEG2FLD,PROCFLD
"RTN","LA7UTILC",132,0)
 N COMP,I,NXTFLD,NXTCOMP,OUT,REP,SEGID,SUB,OUT
"RTN","LA7UTILC",133,0)
 ;
"RTN","LA7UTILC",134,0)
 S FLDCNT=0 ;field count
"RTN","LA7UTILC",135,0)
 S FLDLAST=1 ; last field #
"RTN","LA7UTILC",136,0)
 S CNT=0
"RTN","LA7UTILC",137,0)
 K ^TMP($$RTNNM,$J,"COMP")
"RTN","LA7UTILC",138,0)
 S SEG="UNKNOWN" ;segment name
"RTN","LA7UTILC",139,0)
 S ISCOMP=0 ; is a component field
"RTN","LA7UTILC",140,0)
 S ISMSH=0 ; is the MSH segment
"RTN","LA7UTILC",141,0)
 S SHOWNULL='+$P($G(LA7PARS),"^",2) ;User wants to show empty fields
"RTN","LA7UTILC",142,0)
 S SHOWFLD=1 ; show field (1=yes  0=no)
"RTN","LA7UTILC",143,0)
 S SEG2FLD="LA7VHLU7-S2F" ; ^TMP subscript where SEG2FLD outputs
"RTN","LA7UTILC",144,0)
 ;
"RTN","LA7UTILC",145,0)
 S NODE="HLOARR(1)"
"RTN","LA7UTILC",146,0)
 S SEGID=$G(HLOARR(0,1,1,1))
"RTN","LA7UTILC",147,0)
 I SEGID="MSH" S ISMSH=1
"RTN","LA7UTILC",148,0)
 ;
"RTN","LA7UTILC",149,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D  ;
"RTN","LA7UTILC",150,0)
 . S STR=""
"RTN","LA7UTILC",151,0)
 . S CNT=CNT+1
"RTN","LA7UTILC",152,0)
 . S FLD=$QS(NODE,1) ;field #
"RTN","LA7UTILC",153,0)
 . S REP=$QS(NODE,2)
"RTN","LA7UTILC",154,0)
 . S COMP=$QS(NODE,3)
"RTN","LA7UTILC",155,0)
 . S SUB=$QS(NODE,4) ; sub # (a field starts at 0)
"RTN","LA7UTILC",156,0)
 . S DATA=@NODE
"RTN","LA7UTILC",157,0)
 . S NXTFLD=FLD
"RTN","LA7UTILC",158,0)
 . S NXTCOMP=COMP
"RTN","LA7UTILC",159,0)
 . ;look ahead
"RTN","LA7UTILC",160,0)
 . S X=$Q(@NODE)
"RTN","LA7UTILC",161,0)
 . ;W !,"X=",X
"RTN","LA7UTILC",162,0)
 . I X'="" S NXTFLD=$QS(X,1) S NXTCOMP=$QS(X,3)
"RTN","LA7UTILC",163,0)
 . I '$D(FLD(FLD,"ISREP")) D  ;
"RTN","LA7UTILC",164,0)
 . . S X=$O(HLOARR(FLD,1))
"RTN","LA7UTILC",165,0)
 . . I X S FLD(FLD,"ISREP")=1
"RTN","LA7UTILC",166,0)
 . . E  S FLD(FLD,"ISREP")=0
"RTN","LA7UTILC",167,0)
 . ;
"RTN","LA7UTILC",168,0)
 . ; display field if component field
"RTN","LA7UTILC",169,0)
 . I FLD=NXTFLD I NXTCOMP'=COMP I $G(FLD(FLD))'=1 D  ;
"RTN","LA7UTILC",170,0)
 . . K OUT
"RTN","LA7UTILC",171,0)
 . . S X=$$HLO2STR(.HLOARR,FLD,HLFS_HLECH,.OUT)
"RTN","LA7UTILC",172,0)
 . . I '$D(OUT) S OUT(0)=X K X
"RTN","LA7UTILC",173,0)
 . . S I=""
"RTN","LA7UTILC",174,0)
 . . F  S I=$O(OUT(I)) Q:I=""  D  ;
"RTN","LA7UTILC",175,0)
 . . . I I=0 D ADDTEXT(SEGID_"-"_FLD_" = "_OUT(I))
"RTN","LA7UTILC",176,0)
 . . . I I D ADDTEXT(OUT(I),1)
"RTN","LA7UTILC",177,0)
 . . S FLD(FLD)=1 ;full field has been displayed
"RTN","LA7UTILC",178,0)
 . . K OUT
"RTN","LA7UTILC",179,0)
 . ;
"RTN","LA7UTILC",180,0)
 . S STR=SEGID_"-"_FLD
"RTN","LA7UTILC",181,0)
 . I REP=1 I FLD(FLD,"ISREP") S STR=STR_".1"
"RTN","LA7UTILC",182,0)
 . I REP>1 S STR=STR_"."_REP
"RTN","LA7UTILC",183,0)
 . I COMP>1 S STR=STR_"-"_COMP
"RTN","LA7UTILC",184,0)
 . I COMP=1 D
"RTN","LA7UTILC",185,0)
 . . S X=$Q(@NODE)
"RTN","LA7UTILC",186,0)
 . . I X'="",$QS(X,1)=FLD,$QS(X,2)=REP,$QS(X,3)'=COMP,$QS(X,4)=SUB S STR=STR_"-"_COMP
"RTN","LA7UTILC",187,0)
 . I SUB>1 S STR=STR_"-"_SUB
"RTN","LA7UTILC",188,0)
 . I SUB=1 D
"RTN","LA7UTILC",189,0)
 . . S X=$Q(@NODE)
"RTN","LA7UTILC",190,0)
 . . I X'="",$QS(X,1)=FLD,$QS(X,2)=REP,$QS(X,3)=COMP,$QS(X,4)'=SUB S STR=STR_"-"_SUB
"RTN","LA7UTILC",191,0)
 . S STR=STR_" = "_DATA
"RTN","LA7UTILC",192,0)
 . D ADDTEXT(STR)
"RTN","LA7UTILC",193,0)
 ;
"RTN","LA7UTILC",194,0)
 ; Separate segments with blank line.
"RTN","LA7UTILC",195,0)
 D ADDTEXT("")
"RTN","LA7UTILC",196,0)
 Q
"RTN","LA7UTILC",197,0)
 ;
"RTN","LA7UTILC",198,0)
 ;
"RTN","LA7UTILC",199,0)
PC(SEGNAM,FLDNUM,SHOWNULL) ;
"RTN","LA7UTILC",200,0)
 ; Parse Components
"RTN","LA7UTILC",201,0)
 ; In Symbol table:
"RTN","LA7UTILC",202,0)
 ; HLECH defined (HL7 encoding characters)
"RTN","LA7UTILC",203,0)
 ; ^TMP($$RTNNM,$J,"COMP") already has the field's data from PF above
"RTN","LA7UTILC",204,0)
 ;
"RTN","LA7UTILC",205,0)
 N IN,STR,COMPNUM,NODE,DATA,COMP,SUB,SEG2FLD
"RTN","LA7UTILC",206,0)
 S SEGNAM=$G(SEGNAM)
"RTN","LA7UTILC",207,0)
 S SHOWNULL=+$G(SHOWNULL)
"RTN","LA7UTILC",208,0)
 S SEG2FLD=$$RTNNM()
"RTN","LA7UTILC",209,0)
 S IN="^TMP("""_$$RTNNM_""","_$J_",""COMP"")"
"RTN","LA7UTILC",210,0)
 ; will return components in ^TMP("LA7VHLU7-S2F",$J,"COMP",1,0)
"RTN","LA7UTILC",211,0)
 K ^TMP("LA7VHLU7-S2F",$J,"COMP")
"RTN","LA7UTILC",212,0)
 D SEG2FLDS^LA7VHLU7(IN,"COMP",$E(HLECH,1,1))
"RTN","LA7UTILC",213,0)
 S NODE="^TMP(""LA7VHLU7-S2F"",$J,""COMP"")"
"RTN","LA7UTILC",214,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,1)'="LA7VHLU7-S2F"  Q:$QS(NODE,2)'=$J  Q:$QS(NODE,3)'="COMP"  D  ;
"RTN","LA7UTILC",215,0)
 . S DATA=@NODE
"RTN","LA7UTILC",216,0)
 . I 'SHOWNULL,DATA="" Q  ;
"RTN","LA7UTILC",217,0)
 . S COMP=$QS(NODE,4)
"RTN","LA7UTILC",218,0)
 . S SUB=$QS(NODE,5)
"RTN","LA7UTILC",219,0)
 . S STR=SEGNAM_"-"_FLDNUM_"-"_COMP_" = "_DATA
"RTN","LA7UTILC",220,0)
 . I SEGNAM="MSH" I FLDNUM=2 S STR="" ;dont decode MSH-2
"RTN","LA7UTILC",221,0)
 . I STR'="" D ADDTEXT(STR)
"RTN","LA7UTILC",222,0)
 K ^TMP("LA7VHLU7-S2F",$J,"COMP")
"RTN","LA7UTILC",223,0)
 Q
"RTN","LA7UTILC",224,0)
 ;
"RTN","LA7UTILC",225,0)
 ;
"RTN","LA7UTILC",226,0)
ADDTEXT(STR,APPEND) ;
"RTN","LA7UTILC",227,0)
 S STR=$G(STR)
"RTN","LA7UTILC",228,0)
 S APPEND=+$G(APPEND)
"RTN","LA7UTILC",229,0)
 N X
"RTN","LA7UTILC",230,0)
 Q:$G(LA7DOC)=""
"RTN","LA7UTILC",231,0)
 ; FM Browser does not like holes in the global subscript
"RTN","LA7UTILC",232,0)
 ;   ie ^TMP("DDB",1) -> ^TMP("DDB",3) (missing #2 sub)
"RTN","LA7UTILC",233,0)
 ;   will cause Browser to stop display
"RTN","LA7UTILC",234,0)
 S X=+$O(^TMP("DDB",$J,LA7DOC,"A"),-1)
"RTN","LA7UTILC",235,0)
 I 'APPEND D  ;
"RTN","LA7UTILC",236,0)
 . S X=X+1
"RTN","LA7UTILC",237,0)
 . S ^TMP("DDB",$J,LA7DOC,X)=$G(STR)
"RTN","LA7UTILC",238,0)
 . S J=J+1
"RTN","LA7UTILC",239,0)
 I APPEND D  ;
"RTN","LA7UTILC",240,0)
 . S ^TMP("DDB",$J,LA7DOC,X)=$G(^TMP("DDB",$J,LA7DOC,X))_STR
"RTN","LA7UTILC",241,0)
 Q
"RTN","LA7UTILC",242,0)
 ;
"RTN","LA7UTILC",243,0)
RTNNM() ;
"RTN","LA7UTILC",244,0)
 Q $T(+0)
"RTN","LA7UTILC",245,0)
 ;
"RTN","LA7UTILC",246,0)
 ;
"RTN","LA7UTILC",247,0)
STRBUF(BUFF,ADD,MAXSTR,OUT) ;
"RTN","LA7UTILC",248,0)
 ; Breaks a long string into an array based on MAXSTR.
"RTN","LA7UTILC",249,0)
 ; Leftover string is in BUF after call.
"RTN","LA7UTILC",250,0)
 ; This method is recursive.
"RTN","LA7UTILC",251,0)
 ; Used in HLO2STR API.
"RTN","LA7UTILC",252,0)
 ; Inputs
"RTN","LA7UTILC",253,0)
 ;    BUFF:<byref> Buffer (should be empty at start)
"RTN","LA7UTILC",254,0)
 ;     ADD:<byref> New text to add (is consumed by process)
"RTN","LA7UTILC",255,0)
 ;  MAXSTR: Max string length <dflt=245>
"RTN","LA7UTILC",256,0)
 ;     OUT:<byref> See Outputs
"RTN","LA7UTILC",257,0)
 ; Outputs
"RTN","LA7UTILC",258,0)
 ;    BUFF: Any leftover portion of the string.
"RTN","LA7UTILC",259,0)
 ;     OUT: The array that holds the portions of the string,
"RTN","LA7UTILC",260,0)
 ;          starting at node 0.
"RTN","LA7UTILC",261,0)
 ;
"RTN","LA7UTILC",262,0)
 N AVAIL,IDX,I,II
"RTN","LA7UTILC",263,0)
 S ADD=$G(ADD)
"RTN","LA7UTILC",264,0)
 S MAXSTR=$G(MAXSTR,245)
"RTN","LA7UTILC",265,0)
 S AVAIL=MAXSTR-$L(BUFF)
"RTN","LA7UTILC",266,0)
 I AVAIL<0 S AVAIL=0
"RTN","LA7UTILC",267,0)
 I 'AVAIL D  ;
"RTN","LA7UTILC",268,0)
 . I '$D(OUT) S IDX=0
"RTN","LA7UTILC",269,0)
 . E  S IDX=+$O(OUT("A"),-1)+1
"RTN","LA7UTILC",270,0)
 . S OUT(IDX)=BUFF
"RTN","LA7UTILC",271,0)
 . S BUFF=""
"RTN","LA7UTILC",272,0)
 ; max out buffer
"RTN","LA7UTILC",273,0)
 S AVAIL=MAXSTR-$L(BUFF)
"RTN","LA7UTILC",274,0)
 S BUFF=BUFF_$E(ADD,1,AVAIL)
"RTN","LA7UTILC",275,0)
 S $E(ADD,1,AVAIL)=""
"RTN","LA7UTILC",276,0)
 ; finish off
"RTN","LA7UTILC",277,0)
 S II=$L(ADD)/MAXSTR
"RTN","LA7UTILC",278,0)
 I II["." S II=II+1 S II=$P(II,".",1)
"RTN","LA7UTILC",279,0)
 F I=1:1:II D  ;
"RTN","LA7UTILC",280,0)
 . N I,II
"RTN","LA7UTILC",281,0)
 . D STRBUF(.BUFF,.ADD,MAXSTR,.OUT)
"RTN","LA7UTILC",282,0)
 Q
"RTN","LA7UTILC",283,0)
 ;
"RTN","LA7UTILC",284,0)
 ;
"RTN","LA7UTILC",285,0)
HLO2STR(SEGARR,FIELD,FSECH,OUT,MAXSTR) ;
"RTN","LA7UTILC",286,0)
 ; Convert an HLO segment array to a segment string.
"RTN","LA7UTILC",287,0)
 ; Useful when calling APIs that work with a segment string.
"RTN","LA7UTILC",288,0)
 ; Inputs
"RTN","LA7UTILC",289,0)
 ;  SEGARR:<byref> The HLO segment array
"RTN","LA7UTILC",290,0)
 ;   FIELD:<opt> The field number to extract <dflt=all>
"RTN","LA7UTILC",291,0)
 ;   FSECH: The HL7 field sep and encoding characters
"RTN","LA7UTILC",292,0)
 ;     OUT:<byref> See Outputs
"RTN","LA7UTILC",293,0)
 ;  MAXSTR:<opt><dflt=245>
"RTN","LA7UTILC",294,0)
 ; Outputs
"RTN","LA7UTILC",295,0)
 ;  Returns either the segment string or the segment length.
"RTN","LA7UTILC",296,0)
 ;  If the string cant fit in one "node" the string is
"RTN","LA7UTILC",297,0)
 ;  broken up into smaller sections and returned in OUT(i)
"RTN","LA7UTILC",298,0)
 N BUF,C,CC,EC,ECH,F,FLD,FLDS,FS,I,IDX,MAX,MAXSTR,NODE,R,RC,S,SC,SIZE
"RTN","LA7UTILC",299,0)
 N STOP,STR,STR2,STRF,STRC,STRR,STRS,TYPE,TXT,VAL
"RTN","LA7UTILC",300,0)
 S MAXSTR=$G(MAXSTR)
"RTN","LA7UTILC",301,0)
 I MAXSTR<1 S MAXSTR=245
"RTN","LA7UTILC",302,0)
 S FIELD=$G(FIELD)
"RTN","LA7UTILC",303,0)
 I FIELD<1 S FIELD=0
"RTN","LA7UTILC",304,0)
 S FLD=FIELD
"RTN","LA7UTILC",305,0)
 K OUT
"RTN","LA7UTILC",306,0)
 S FS=$E(FSECH,1,1) ;field sep
"RTN","LA7UTILC",307,0)
 S ECH=$E(FSECH,2,5) ;enc chars
"RTN","LA7UTILC",308,0)
 S CC=$E(ECH,1,1) ;comp char
"RTN","LA7UTILC",309,0)
 S RC=$E(ECH,2,2) ;repeat char
"RTN","LA7UTILC",310,0)
 S EC=$E(ECH,3,3) ; escape char
"RTN","LA7UTILC",311,0)
 S SC=$E(ECH,4,4) ; sub char
"RTN","LA7UTILC",312,0)
 S F(0)=0
"RTN","LA7UTILC",313,0)
 ; SEGARR(FLD,REP,C,S)=val
"RTN","LA7UTILC",314,0)
 S STR=""
"RTN","LA7UTILC",315,0)
 S STOP=0
"RTN","LA7UTILC",316,0)
 S NODE="SEGARR(FLD)"
"RTN","LA7UTILC",317,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D  Q:STOP  ;
"RTN","LA7UTILC",318,0)
 . Q:$QL(NODE)'=4
"RTN","LA7UTILC",319,0)
 . I +$QS(NODE,1)'=$QS(NODE,1) S STOP=1 Q  ;end if not field #
"RTN","LA7UTILC",320,0)
 . S F=$QS(NODE,1)
"RTN","LA7UTILC",321,0)
 . I FIELD I F Q:F<FIELD  I F>FIELD S F=FIELD S STOP=1 Q  ; Q  ;S STOP=1 Q
"RTN","LA7UTILC",322,0)
 . I F(0) I F'=F(0) D  ;
"RTN","LA7UTILC",323,0)
 . . S FLDS(F(0))=$P(STR,FS,F(0))
"RTN","LA7UTILC",324,0)
 . . I FLDS(F(0))="" K FLDS(F(0))
"RTN","LA7UTILC",325,0)
 . . S STR=""
"RTN","LA7UTILC",326,0)
 . S R=$QS(NODE,2) ;rep #
"RTN","LA7UTILC",327,0)
 . S C=$QS(NODE,3) ;comp #
"RTN","LA7UTILC",328,0)
 . S S=$QS(NODE,4) ;sub #
"RTN","LA7UTILC",329,0)
 . S VAL=@NODE
"RTN","LA7UTILC",330,0)
 . I F=0 I R=1 I C=1 I S=1 S TYPE=VAL Q  ;seg type
"RTN","LA7UTILC",331,0)
 . S VAL=$$CHKDATA^LA7VHLU3(VAL,FSECH)
"RTN","LA7UTILC",332,0)
 . S STRF=$P(STR,FS,F) ;field string
"RTN","LA7UTILC",333,0)
 . S STRR=$P(STRF,RC,R) ;rep string
"RTN","LA7UTILC",334,0)
 . S STRC=$P(STRR,CC,C) ;comp string
"RTN","LA7UTILC",335,0)
 . S STRS=$P(STRC,SC,S) ;sub string
"RTN","LA7UTILC",336,0)
 . S $P(STRS,SC,S)=VAL
"RTN","LA7UTILC",337,0)
 . ; remove extra HL7 chars
"RTN","LA7UTILC",338,0)
 . S STRS=$$TRIM^XLFSTR(STRS,"LR",SC)
"RTN","LA7UTILC",339,0)
 . S STRC=$$TRIM^XLFSTR(STRC,"LR",CC)
"RTN","LA7UTILC",340,0)
 . S STRR=$$TRIM^XLFSTR(STRR,"LR",RC)
"RTN","LA7UTILC",341,0)
 . S STRF=$$TRIM^XLFSTR(STRF,"LR",FS)
"RTN","LA7UTILC",342,0)
 . S $P(STRC,SC,S)=STRS K STRS
"RTN","LA7UTILC",343,0)
 . S $P(STRR,CC,C)=STRC K STRC
"RTN","LA7UTILC",344,0)
 . S $P(STRF,RC,R)=STRR K STRR
"RTN","LA7UTILC",345,0)
 . S $P(STR,FS,F)=STRF K STRF
"RTN","LA7UTILC",346,0)
 . S F(0)=F ;last field #
"RTN","LA7UTILC",347,0)
 ;
"RTN","LA7UTILC",348,0)
 ; store last one
"RTN","LA7UTILC",349,0)
 I STR'="" D  ;
"RTN","LA7UTILC",350,0)
 . S FLDS(F)=$P(STR,FS,F)
"RTN","LA7UTILC",351,0)
 . I FLDS(F)="" K FLDS(F)
"RTN","LA7UTILC",352,0)
 ;
"RTN","LA7UTILC",353,0)
 S TYPE=$G(TYPE)
"RTN","LA7UTILC",354,0)
 I TYPE="" S TYPE=$G(SEGARR(0,1,1,1))
"RTN","LA7UTILC",355,0)
 I TYPE="" S TYPE="xxx"
"RTN","LA7UTILC",356,0)
 ;
"RTN","LA7UTILC",357,0)
 ; calculate size
"RTN","LA7UTILC",358,0)
 S SIZE=$L(TYPE) ;seg name
"RTN","LA7UTILC",359,0)
 S I=0
"RTN","LA7UTILC",360,0)
 F FLD=1:1:$O(FLDS("A"),-1) D  ;
"RTN","LA7UTILC",361,0)
 . S SIZE=SIZE+1+$L($G(FLDS(FLD)))
"RTN","LA7UTILC",362,0)
 ;
"RTN","LA7UTILC",363,0)
 ; quit STR if not too big
"RTN","LA7UTILC",364,0)
 S STR=""
"RTN","LA7UTILC",365,0)
 I SIZE'>MAXSTR D  Q STR
"RTN","LA7UTILC",366,0)
 . S I=0
"RTN","LA7UTILC",367,0)
 . F  S I=$O(FLDS(I)) Q:'I  D  ;
"RTN","LA7UTILC",368,0)
 . . S $P(STR,FS,I)=FLDS(I)
"RTN","LA7UTILC",369,0)
 . ;
"RTN","LA7UTILC",370,0)
 . S STR=TYPE_FS_STR ;prepend seg name
"RTN","LA7UTILC",371,0)
 . ; only return field data if requested
"RTN","LA7UTILC",372,0)
 . I FIELD S STR=$P(STR,FS,$L(STR,FS))
"RTN","LA7UTILC",373,0)
 ;
"RTN","LA7UTILC",374,0)
 ; Create array to pass long string back
"RTN","LA7UTILC",375,0)
 S STR=""
"RTN","LA7UTILC",376,0)
 ;S BUF=TYPE ;prepend seg name
"RTN","LA7UTILC",377,0)
 I FIELD D  ;
"RTN","LA7UTILC",378,0)
 . S BUF=""
"RTN","LA7UTILC",379,0)
 . S TXT=$G(FLDS(FIELD))
"RTN","LA7UTILC",380,0)
 . D STRBUF(.BUF,.TXT,MAXSTR,.OUT)
"RTN","LA7UTILC",381,0)
 ;
"RTN","LA7UTILC",382,0)
 I 'FIELD S BUF=TYPE F FLD=1:1:$O(FLDS("A"),-1) D  ;
"RTN","LA7UTILC",383,0)
 . S TXT=FS_$G(FLDS(FLD))
"RTN","LA7UTILC",384,0)
 . D STRBUF(.BUF,.TXT,MAXSTR,.OUT)
"RTN","LA7UTILC",385,0)
 ;
"RTN","LA7UTILC",386,0)
 I BUF'="" D  ;
"RTN","LA7UTILC",387,0)
 . S IDX=$O(OUT("A"),-1)+1
"RTN","LA7UTILC",388,0)
 . S OUT(IDX)=BUF
"RTN","LA7UTILC",389,0)
 ;
"RTN","LA7UTILC",390,0)
 Q SIZE
"RTN","LA7UTILC",391,0)
 ;
"RTN","LA7UTILC",392,0)
 ;
"RTN","LA7UTILC",393,0)
HL2HLO(STR,IN,FSECH,OUT) ;
"RTN","LA7UTILC",394,0)
 ; Convert an HL7 segment string into HLO segment array
"RTN","LA7UTILC",395,0)
 ; Inputs
"RTN","LA7UTILC",396,0)
 ;    STR:<opt> Complete HL7 string segment.
"RTN","LA7UTILC",397,0)
 ;     IN:<opt><byref> Local array that holds HL7 segment.
"RTN","LA7UTILC",398,0)
 ;         (Must be subscripted).
"RTN","LA7UTILC",399,0)
 ;  FSECH: Original field sep and encoding chars.
"RTN","LA7UTILC",400,0)
 ;    OUT:<byref>  See Outputs
"RTN","LA7UTILC",401,0)
 ; Outputs
"RTN","LA7UTILC",402,0)
 ;   OUT array (Segment array built by SET^HLOAPI)
"RTN","LA7UTILC",403,0)
 N Z,I
"RTN","LA7UTILC",404,0)
 S STR=$G(STR)
"RTN","LA7UTILC",405,0)
 K OUT
"RTN","LA7UTILC",406,0)
 I STR="" I $D(IN) D  ;
"RTN","LA7UTILC",407,0)
 . N NODE
"RTN","LA7UTILC",408,0)
 . S NODE="IN("""")"
"RTN","LA7UTILC",409,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  D  ;
"RTN","LA7UTILC",410,0)
 . . S STR=STR_@NODE
"RTN","LA7UTILC",411,0)
 . ;I '$O(IN(0)) S STR=$G(IN(0)) Q
"RTN","LA7UTILC",412,0)
 . ;S I=""
"RTN","LA7UTILC",413,0)
 . ;F  S I=$O(IN(I)) Q:I=""  S STR=STR_IN(I)
"RTN","LA7UTILC",414,0)
 ;
"RTN","LA7UTILC",415,0)
 D HL2ARR(STR,FSECH,.Z)
"RTN","LA7UTILC",416,0)
 D ARR2HLO(.Z,.OUT,FSECH)
"RTN","LA7UTILC",417,0)
 Q
"RTN","LA7UTILC",418,0)
 ;
"RTN","LA7UTILC",419,0)
 ;
"RTN","LA7UTILC",420,0)
HL2ARR(STR,FSECH,OUT) ;
"RTN","LA7UTILC",421,0)
 ; Deconstructs an entire HL7 segment string into an array compatible
"RTN","LA7UTILC",422,0)
 ; with the ARR2HLO function.
"RTN","LA7UTILC",423,0)
 ; Inputs
"RTN","LA7UTILC",424,0)
 ;    STR: The HL7 string segment to be parsed.
"RTN","LA7UTILC",425,0)
 ;  FSECH: The original HL7 field sep and encoding characters.
"RTN","LA7UTILC",426,0)
 ;    OUT:<byref> See Outputs.  Kills on entry.
"RTN","LA7UTILC",427,0)
 ; Outputs
"RTN","LA7UTILC",428,0)
 ;    OUT: The array that can be used with the ARR2HLO function.
"RTN","LA7UTILC",429,0)
 ;         OUT(field#,component#,subcomp#)=value
"RTN","LA7UTILC",430,0)
 ;    Repeating fields are stored in decimals  ie OUT(1.01)
"RTN","LA7UTILC",431,0)
 ;     FS=|  EC=^#!@    STR="PID|a^b^A@B@C"
"RTN","LA7UTILC",432,0)
 ;  OUT(0,1)="PID"  OUT(1,1)="a"    OUT(1,2)="b"  OUT(1,3)="A@B@C"
"RTN","LA7UTILC",433,0)
 ;  OUT(1,3,1)="A"  OUT(1,3,2)="B"  OUT(1,3,3)="C"
"RTN","LA7UTILC",434,0)
 ;
"RTN","LA7UTILC",435,0)
 N FLD,FS,D1,D2,X,REP,REPC,ISREP,SEGID
"RTN","LA7UTILC",436,0)
 K OUT
"RTN","LA7UTILC",437,0)
 S FS=$E(FSECH,1,1)
"RTN","LA7UTILC",438,0)
 S REPC=$E(FSECH,3,3)
"RTN","LA7UTILC",439,0)
 S SEGID=$P(STR,FS,1)
"RTN","LA7UTILC",440,0)
 S ISREP=0
"RTN","LA7UTILC",441,0)
 I SEGID="MSH" S STR="MSH"_$E(FSECH)_$E(FSECH)_$E(FSECH)_$P(STR,$E(FSECH),3,$L(STR))
"RTN","LA7UTILC",442,0)
 F FLD=0:1:$L(STR,FS)-1 S D1=$P(STR,FS,FLD+1) D  ;
"RTN","LA7UTILC",443,0)
 . I SEGID="MSH" I '$D(OUT(0)) D  Q  ;
"RTN","LA7UTILC",444,0)
 . . S OUT(0,1)="MSH"
"RTN","LA7UTILC",445,0)
 . . S OUT(1,1)=$E(FSECH,1,1)
"RTN","LA7UTILC",446,0)
 . . S OUT(2,1)=$E(FSECH,2,$L(FSECH))
"RTN","LA7UTILC",447,0)
 . . S FLD=2
"RTN","LA7UTILC",448,0)
 . ;
"RTN","LA7UTILC",449,0)
 . S ISREP=0
"RTN","LA7UTILC",450,0)
 . I D1[REPC S ISREP=1
"RTN","LA7UTILC",451,0)
 . I ISREP F REP=1:1:$L(D1,REPC) S D2=$P(D1,REPC,REP) D  ;
"RTN","LA7UTILC",452,0)
 . . D FLD2ARR^LA7VHLU7(.D2,FSECH)
"RTN","LA7UTILC",453,0)
 . . S X=FLD+(REP/100)
"RTN","LA7UTILC",454,0)
 . . M OUT(X)=D2
"RTN","LA7UTILC",455,0)
 . . S OUT(X)=""
"RTN","LA7UTILC",456,0)
 . . K D2
"RTN","LA7UTILC",457,0)
 . ;
"RTN","LA7UTILC",458,0)
 . I 'ISREP D  ;
"RTN","LA7UTILC",459,0)
 . . D FLD2ARR^LA7VHLU7(.D1,FSECH)
"RTN","LA7UTILC",460,0)
 . . M OUT(FLD)=D1
"RTN","LA7UTILC",461,0)
 . . S OUT(FLD)=""
"RTN","LA7UTILC",462,0)
 . . K D1
"RTN","LA7UTILC",463,0)
 . ;
"RTN","LA7UTILC",464,0)
 Q
"RTN","LA7UTILC",465,0)
 ;
"RTN","LA7UTILC",466,0)
 ;
"RTN","LA7UTILC",467,0)
ARR2HLO(ARR,SEG,FSECH) ;
"RTN","LA7UTILC",468,0)
 ; Builds the HLO segment array from the HL2ARR array
"RTN","LA7UTILC",469,0)
 ; using the SET^HLOAPI function.
"RTN","LA7UTILC",470,0)
 ; Deletes ARR nodes as it goes & sets top levels to null to
"RTN","LA7UTILC",471,0)
 ; save space.
"RTN","LA7UTILC",472,0)
 ; Inputs
"RTN","LA7UTILC",473,0)
 ;    ARR: The array built from HL2ARR.
"RTN","LA7UTILC",474,0)
 ;    SEG:<byref> See Outputs.
"RTN","LA7UTILC",475,0)
 ;  FSECH: The original HL7 field sep and encoding chars.
"RTN","LA7UTILC",476,0)
 ; Outputs
"RTN","LA7UTILC",477,0)
 ;    SEG: The HLO SEG array.
"RTN","LA7UTILC",478,0)
 ;
"RTN","LA7UTILC",479,0)
 N NODE,FLD,COMP,SUB,VAL,REP,ISREP,FLDX
"RTN","LA7UTILC",480,0)
 S NODE="ARR(0)"
"RTN","LA7UTILC",481,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D  ;
"RTN","LA7UTILC",482,0)
 . I $QL(NODE)=1 S @NODE="" Q
"RTN","LA7UTILC",483,0)
 . S (FLD,FLDX)=$QS(NODE,1)
"RTN","LA7UTILC",484,0)
 . S COMP=$QS(NODE,2)
"RTN","LA7UTILC",485,0)
 . S ISREP=0
"RTN","LA7UTILC",486,0)
 . I FLD#1>0 S ISREP=1
"RTN","LA7UTILC",487,0)
 . ;dont file top level if child nodes exist
"RTN","LA7UTILC",488,0)
 . I $QL(NODE)=2 I $O(ARR(FLDX,COMP,0)) S @NODE="" Q
"RTN","LA7UTILC",489,0)
 . S VAL=@NODE
"RTN","LA7UTILC",490,0)
 . Q:VAL=""
"RTN","LA7UTILC",491,0)
 . I VAL[$E(FSECH,3,3) D  ;
"RTN","LA7UTILC",492,0)
 . . S VAL=$$UNESC^LA7VHLU3(VAL,FSECH)
"RTN","LA7UTILC",493,0)
 . S SUB=1
"RTN","LA7UTILC",494,0)
 . I $QL(NODE)>2 S SUB=$QS(NODE,3)
"RTN","LA7UTILC",495,0)
 . I 'ISREP D SET^HLOAPI(.SEG,VAL,FLD,COMP,SUB)
"RTN","LA7UTILC",496,0)
 . I ISREP D  ;
"RTN","LA7UTILC",497,0)
 . . S REP=(FLD#1)*100
"RTN","LA7UTILC",498,0)
 . . D SET^HLOAPI(.SEG,VAL,(FLD\1),COMP,SUB,REP)
"RTN","LA7UTILC",499,0)
 . K @NODE
"RTN","LA7UTILC",500,0)
 . ;
"RTN","LA7UTILC",501,0)
 Q
"RTN","LA7UTILD")
0^85^B1067797
"RTN","LA7UTILD",1,0)
LA7UTILD ;DALOI/JMC - Duplicate comment check ;Jan 29, 2007
"RTN","LA7UTILD",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7UTILD",3,0)
 ;
"RTN","LA7UTILD",4,0)
 Q
"RTN","LA7UTILD",5,0)
 ;
"RTN","LA7UTILD",6,0)
 ;
"RTN","LA7UTILD",7,0)
DUPCHK(LA7A,LA7B,LA7C) ; Perform duplicate comment check of two arrays, return unique entries in 3rd array
"RTN","LA7UTILD",8,0)
 ; Call with LA7A = array of existing comments on file (pass by reference)
"RTN","LA7UTILD",9,0)
 ;           LA7B = array of new comments to check against existing comments (LA7A array) (pass by reference)
"RTN","LA7UTILD",10,0)
 ;
"RTN","LA7UTILD",11,0)
 ; Returns   LA7C = array with only those comments that are new/unique (pass by reference)
"RTN","LA7UTILD",12,0)
 ;
"RTN","LA7UTILD",13,0)
 N LA7DUP,LA7I,LA7J,LA7K,LA7X,LA7Y
"RTN","LA7UTILD",14,0)
 S (LA7I,LA7J,LA7K)=0
"RTN","LA7UTILD",15,0)
 F  S LA7I=$O(LA7B(LA7I)) Q:'LA7I  D
"RTN","LA7UTILD",16,0)
 . S LA7X=$P(LA7B(LA7I,0),"^"),LA7X=$TR(LA7X," ",""),LA7X=$$UP^XLFSTR(LA7X)
"RTN","LA7UTILD",17,0)
 . S (LA7DUP,LA7J)=0
"RTN","LA7UTILD",18,0)
 . F  S LA7J=$O(LA7A(LA7J)) Q:'LA7J  D  Q:LA7DUP
"RTN","LA7UTILD",19,0)
 . . S LA7Y=$P(LA7A(LA7J,0),"^"),LA7Y=$TR(LA7Y," ",""),LA7Y=$$UP^XLFSTR(LA7Y)
"RTN","LA7UTILD",20,0)
 . . I LA7X=LA7Y S LA7DUP=1
"RTN","LA7UTILD",21,0)
 . I 'LA7DUP S LA7K=LA7K+1,LA7C(LA7K,0)=LA7B(LA7I,0)
"RTN","LA7UTILD",22,0)
 Q
"RTN","LA7UXQA")
0^74^B13015176
"RTN","LA7UXQA",1,0)
LA7UXQA ;DALOI/JMC - HL7 Utility - Send alert to users ;04/13/10  14:41
"RTN","LA7UXQA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,67,74**;Sep 27, 1994;Build 229
"RTN","LA7UXQA",3,0)
 ;
"RTN","LA7UXQA",4,0)
XQA(LA7CTYP,LA76248,LA762485,LA76249,LA7AMSG,LA7DATA,LA7PALRT) ; Send alert when requested.
"RTN","LA7UXQA",5,0)
 ; Input
"RTN","LA7UXQA",6,0)
 ;   LA7CTYP  - Condition for alert (1=New Results, 2=Error on message, 3=New Orders)
"RTN","LA7UXQA",7,0)
 ;   LA76248  - Pointer to file 62.48
"RTN","LA7UXQA",8,0)
 ;   LA762485 - Optional, pointer to file 62.485 if condition=2
"RTN","LA7UXQA",9,0)
 ;   LA76249  - Optional, pointer to file 62.49 if condition=2 or 3
"RTN","LA7UXQA",10,0)
 ;   LA7AMSG  - Optional, alert message, if missing will use default message^id to add to XQAID
"RTN","LA7UXQA",11,0)
 ;   LA7DATA  - Optional, pass values for specific conditions
"RTN","LA7UXQA",12,0)
 ;   LA7PALRT - Keep previous alerts (1-yes,0-no)
"RTN","LA7UXQA",13,0)
 ;
"RTN","LA7UXQA",14,0)
 ; Called by LA7LOG, LA7UIIN, LA7VORM, LRVRPOC, LA7VIN1
"RTN","LA7UXQA",15,0)
 ;
"RTN","LA7UXQA",16,0)
 N XQA,XQADATA,XQAFLAG,XQAID,XQAMSG,XQAOPT,XQAROU,X,Y
"RTN","LA7UXQA",17,0)
 S XQAMSG=$P($G(LA7AMSG),"^"),XQAID=""
"RTN","LA7UXQA",18,0)
 ;
"RTN","LA7UXQA",19,0)
 I $G(LA7CTYP)=1 D
"RTN","LA7UXQA",20,0)
 . S XQAID="LA7-CONFIG-"_$S($G(LA76248):LA76248,1:"UNKNOWN-"_$H)
"RTN","LA7UXQA",21,0)
 . I XQAMSG="" S XQAMSG="Lab Messaging - New results received for "_$P($G(^LAHM(62.48,+$G(LA76248),0),"UNKNOWN"),"^")
"RTN","LA7UXQA",22,0)
 ;
"RTN","LA7UXQA",23,0)
 I $G(LA7CTYP)=2 D
"RTN","LA7UXQA",24,0)
 . S XQAID="LA7-MESSAGE-"_$S($G(LA76249):LA76249,1:"UNKNOWN-"_$H)
"RTN","LA7UXQA",25,0)
 . I XQAMSG="" S XQAMSG="Lab Messaging error #"_$G(LA762485,"UNKNOWN")_" on message #"_$G(LA76249,"UNKNOWN")_" at "_$$HTE^XLFDT($H,"2M")
"RTN","LA7UXQA",26,0)
 . I $G(LA76249) D  ; Error processing message, setup action alert.
"RTN","LA7UXQA",27,0)
 . . S XQAROU="DIS^LA7UXQA" ; Alert action.
"RTN","LA7UXQA",28,0)
 . . S XQADATA=LA76249 ; Alert data (ien of message in 62.49, date of error and error number).
"RTN","LA7UXQA",29,0)
 ;
"RTN","LA7UXQA",30,0)
 I $G(LA7CTYP)=3 D
"RTN","LA7UXQA",31,0)
 . S LA7DATA=$G(LA7DATA)
"RTN","LA7UXQA",32,0)
 . S XQAID="LA7-ORDERS-"_$S(LA7DATA'="":$P(LA7DATA,"^"),$G(LA76249):LA76249,1:"UNKNOWN-"_$H)
"RTN","LA7UXQA",33,0)
 . I XQAMSG="" S XQAMSG="Lab Messaging - Manifest# "_$P(LA7DATA,"^")_" received from "_$P($G(^LAHM(62.48,+$G(LA76248),0),"UNKNOWN"),"^")
"RTN","LA7UXQA",34,0)
 ;
"RTN","LA7UXQA",35,0)
 I $P($G(LA7AMSG),"^",2)'="" S XQAID=XQAID_$S(XQAID'="":"-",1:"")_$P(LA7AMSG,"^",2)
"RTN","LA7UXQA",36,0)
 ;
"RTN","LA7UXQA",37,0)
 ; Determine mail group
"RTN","LA7UXQA",38,0)
 S X=""
"RTN","LA7UXQA",39,0)
 F  S X=$O(^LAHM(62.48,+$G(LA76248),20,"B",LA7CTYP,X)) Q:'X  D
"RTN","LA7UXQA",40,0)
 . S Y=$G(^LAHM(62.48,LA76248,20,X,0))
"RTN","LA7UXQA",41,0)
 . I $P(Y,"^",2)'="" S XQA("G."_$P(Y,"^",2))="" ; Send to mail group.
"RTN","LA7UXQA",42,0)
 ;
"RTN","LA7UXQA",43,0)
 ; Fail safe mail group when no mail group defined.
"RTN","LA7UXQA",44,0)
 I '$D(XQA) S XQA("G.LAB MESSAGING")=""
"RTN","LA7UXQA",45,0)
 ;
"RTN","LA7UXQA",46,0)
 ; Delete previous alerts with same id
"RTN","LA7UXQA",47,0)
 I '$G(LA7PALRT),$G(XQAID)'="" D DEL(XQAID)
"RTN","LA7UXQA",48,0)
 ;
"RTN","LA7UXQA",49,0)
 D SETUP^XQALERT
"RTN","LA7UXQA",50,0)
 Q
"RTN","LA7UXQA",51,0)
 ;
"RTN","LA7UXQA",52,0)
 ;
"RTN","LA7UXQA",53,0)
DEL(ID) ; Delete previous alerts if present
"RTN","LA7UXQA",54,0)
 ; Call with ID = alert id
"RTN","LA7UXQA",55,0)
 ; Clear previous alert with same pkg id.
"RTN","LA7UXQA",56,0)
 N XQAID,XQAKLL,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LA7UXQA",57,0)
 S XQAKLL=0
"RTN","LA7UXQA",58,0)
 S XQAID=ID
"RTN","LA7UXQA",59,0)
 D DELETEA^XQALERT
"RTN","LA7UXQA",60,0)
 Q
"RTN","LA7UXQA",61,0)
 ;
"RTN","LA7UXQA",62,0)
 ;
"RTN","LA7UXQA",63,0)
DIS ; Display alert
"RTN","LA7UXQA",64,0)
 ;
"RTN","LA7UXQA",65,0)
 ;ZEXCEPT: XQADATA
"RTN","LA7UXQA",66,0)
 ;
"RTN","LA7UXQA",67,0)
 N DIR,I,J,K,LA7LIST,X,Y
"RTN","LA7UXQA",68,0)
 K ^TMP("DDB",$J),^TMP($J)
"RTN","LA7UXQA",69,0)
 I 'XQADATA W !,$C(7),"Missing message number, unable to proceed.",! Q
"RTN","LA7UXQA",70,0)
 I '$D(^LAHM(62.49,XQADATA)) W !,$C(7),"Message number# ",XQADATA," has been deleted, unable to proceed.",! Q
"RTN","LA7UXQA",71,0)
 S DIR(0)="YO",DIR("A")="Display message associated with this alert",DIR("B")="YES"
"RTN","LA7UXQA",72,0)
 D ^DIR K DIR
"RTN","LA7UXQA",73,0)
 I Y S LA7LIST(+XQADATA)="" D DEV^LA7UTILA
"RTN","LA7UXQA",74,0)
 Q
"RTN","LA7UXQA",75,0)
 ;
"RTN","LA7UXQA",76,0)
 ;
"RTN","LA7UXQA",77,0)
DISIC ; Display Integrity Checker alert.
"RTN","LA7UXQA",78,0)
 ;
"RTN","LA7UXQA",79,0)
 ;ZEXCEPT: XQADATA
"RTN","LA7UXQA",80,0)
 ;
"RTN","LA7UXQA",81,0)
 N DIR,I,J,K,LA7IC,X,Y
"RTN","LA7UXQA",82,0)
 I XQADATA="" D  Q
"RTN","LA7UXQA",83,0)
 . W !,$C(7),"Missing error report to display, unable to proceed.",!
"RTN","LA7UXQA",84,0)
 ;
"RTN","LA7UXQA",85,0)
 I '$D(^XTMP(XQADATA)) D  Q
"RTN","LA7UXQA",86,0)
 . W !,$C(7),"Message number# ",XQADATA," has been deleted, unable to proceed.",!
"RTN","LA7UXQA",87,0)
 ;
"RTN","LA7UXQA",88,0)
 S DIR(0)="YO",DIR("A")="Display Integrity Check Report associated with this alert",DIR("B")="YES"
"RTN","LA7UXQA",89,0)
 D ^DIR K DIR
"RTN","LA7UXQA",90,0)
 I Y S LA7IC=XQADATA D DEV^LA7CHKFP
"RTN","LA7UXQA",91,0)
 Q
"RTN","LA7VHL")
0^108^B32679919
"RTN","LA7VHL",1,0)
LA7VHL ;DALOI/DLR - Main Driver for incoming HL7 V1.6 messages ;11/17/11  09:19
"RTN","LA7VHL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,62,64,67,74**;Sep 27, 1994;Build 229
"RTN","LA7VHL",3,0)
 ;
"RTN","LA7VHL",4,0)
 ; This routine is not meant to be invoked by name
"RTN","LA7VHL",5,0)
 ;
"RTN","LA7VHL",6,0)
 QUIT
"RTN","LA7VHL",7,0)
 ;
"RTN","LA7VHL",8,0)
 ; This routine is called by the HL v1.6 package to process incoming HL7 messages.  Expected variables are those documented in the HL7 package documentation.
"RTN","LA7VHL",9,0)
 ; The line tag is called if it is entered into the PROCESSING ROUTINE field for the server protocol.
"RTN","LA7VHL",10,0)
 ;
"RTN","LA7VHL",11,0)
ORR ; Process incoming ORR messages
"RTN","LA7VHL",12,0)
ACK ; Process incoming ACK messages
"RTN","LA7VHL",13,0)
ORM ; Process incoming ORM messages
"RTN","LA7VHL",14,0)
ORU ; Process incoming ORU messages
"RTN","LA7VHL",15,0)
 ;
"RTN","LA7VHL",16,0)
 N DIQUIET,HLA,HLL,HLP,X,Y
"RTN","LA7VHL",17,0)
 N LA76248,LA76249,LA7AAT,LA7AERR,LA7CS,LA7DT,LA7ECH,LA7FS,LA7HLS,LA7HLSA,LA7INTYP,LA7MEDT,LA7MTYP,LA7RAP,LA7PRID,LA7RSITE,LA7SAP,LA7SEQ,LA7SSITE,LA7STYP,LA7TYPE,LA7VER,LA7VI,LA7VJ,LA7X,LRQUIET
"RTN","LA7VHL",18,0)
 ;
"RTN","LA7VHL",19,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7VHL",20,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LA7VHL",21,0)
 ; Insure DT and DILOCKTM is defined
"RTN","LA7VHL",22,0)
 D DT^DICRW
"RTN","LA7VHL",23,0)
 ;
"RTN","LA7VHL",24,0)
 S (LA76248,LA76249,LA7INTYP,LA7SEQ)=0,LA7AERR=""
"RTN","LA7VHL",25,0)
 ;
"RTN","LA7VHL",26,0)
 K ^TMP("HLA",$J)
"RTN","LA7VHL",27,0)
 ;
"RTN","LA7VHL",28,0)
 ; Setup DUZ array to 'non-human' user LRLAB,HL
"RTN","LA7VHL",29,0)
 ; If user not found - send alert to G.LAB MESSAGING
"RTN","LA7VHL",30,0)
 S LA7X=$P($G(^XTMP("LA7 PROXY","LRLAB,HL")),"^")
"RTN","LA7VHL",31,0)
 I LA7X<1 D
"RTN","LA7VHL",32,0)
 . S LA7X=$$FIND1^DIC(200,"","OQUX","LRLAB,HL","B","")
"RTN","LA7VHL",33,0)
 . S ^XTMP("LA7 PROXY",0)=DT_"^"_DT_"^LAB HL7 PROXY USERS"
"RTN","LA7VHL",34,0)
 . I LA7X>0 S ^XTMP("LA7 PROXY","LRLAB,HL")=LA7X
"RTN","LA7VHL",35,0)
 I LA7X<1 D  Q
"RTN","LA7VHL",36,0)
 . N MSG
"RTN","LA7VHL",37,0)
 . S MSG="Lab Messaging - Unable to identify user 'LRLAB,HL' in NEW PERSON file"
"RTN","LA7VHL",38,0)
 . D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VHL",39,0)
 D DUZ^XUP(LA7X)
"RTN","LA7VHL",40,0)
 ;
"RTN","LA7VHL",41,0)
 ; Set up LA7HLS with HL variables to build ACK message.
"RTN","LA7VHL",42,0)
 ; Handle situation when systems use different encoding characters.
"RTN","LA7VHL",43,0)
 D RSPINIT^HLFNC2(HL("EIDS"),.LA7HLS)
"RTN","LA7VHL",44,0)
 ;
"RTN","LA7VHL",45,0)
 ; Move message from HL7 global to Lab global
"RTN","LA7VHL",46,0)
 F LA7VI=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","LA7VHL",47,0)
 . K LA7SEG,LA7STYP
"RTN","LA7VHL",48,0)
 . I HLNODE="" Q
"RTN","LA7VHL",49,0)
 . S LA7SEG(0)=HLNODE,LA7STYP=$E(LA7SEG(0),1,3)
"RTN","LA7VHL",50,0)
 . I LA7STYP'?2U1UN D
"RTN","LA7VHL",51,0)
 . . S LA7ERR=34,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VHL",52,0)
 . . D REJECT($P(LA7AERR,"^",2))
"RTN","LA7VHL",53,0)
 . S LA7VJ=0
"RTN","LA7VHL",54,0)
 . F  S LA7VJ=$O(HLNODE(LA7VJ)) Q:'LA7VJ  S LA7SEG(LA7VJ)=HLNODE(LA7VJ)
"RTN","LA7VHL",55,0)
 . I LA7STYP="MSH" D MSH
"RTN","LA7VHL",56,0)
 . I LA7AERR="",LA7SEQ<1 D REJECT("no MSH segment found") Q
"RTN","LA7VHL",57,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7SEG)
"RTN","LA7VHL",58,0)
 ;
"RTN","LA7VHL",59,0)
 ; Update entry in 62.49
"RTN","LA7VHL",60,0)
 ; Change status to (Q)ueued for processing from (B)uilding
"RTN","LA7VHL",61,0)
 I LA76249>0,$P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" D
"RTN","LA7VHL",62,0)
 . N FDA,LA7ERR
"RTN","LA7VHL",63,0)
 . S FDA(1,62.49,LA76249_",",2)="Q"
"RTN","LA7VHL",64,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHL",65,0)
 ;
"RTN","LA7VHL",66,0)
 ; Release lock on file #62.49 entry (tells LA7VIN message is stored).
"RTN","LA7VHL",67,0)
 I LA76249>0 L -^LAHM(62.49,LA76249)
"RTN","LA7VHL",68,0)
 ;
"RTN","LA7VHL",69,0)
 ; Run processing routine
"RTN","LA7VHL",70,0)
 I '$D(^LAHM(62.48,LA76248,1)) D CREATE^LA7LOG(5)
"RTN","LA7VHL",71,0)
 I $D(^LAHM(62.48,LA76248,1)) X ^(1)
"RTN","LA7VHL",72,0)
 ;
"RTN","LA7VHL",73,0)
 ; Don't (ACK)nowledge ACK or ORR messages
"RTN","LA7VHL",74,0)
 I $G(LA7MTYP)="ACK"!($G(LA7MTYP)="ORR") Q
"RTN","LA7VHL",75,0)
 ;
"RTN","LA7VHL",76,0)
 ; No application acknowledgement
"RTN","LA7VHL",77,0)
 I $G(LA7AAT(1))="NE" Q
"RTN","LA7VHL",78,0)
 ;
"RTN","LA7VHL",79,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7VHL",80,0)
 I $G(LA7AERR)'="",$G(LA7AAT(1))="SU" Q
"RTN","LA7VHL",81,0)
 ;
"RTN","LA7VHL",82,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7VHL",83,0)
 I $G(LA7AERR)="",$G(LA7AAT(1))="ER" Q
"RTN","LA7VHL",84,0)
 ;
"RTN","LA7VHL",85,0)
 ; If POC interface and no error then quit - send application ack after processing message.
"RTN","LA7VHL",86,0)
 I $G(LA7AERR)="",LA7INTYP>19,LA7INTYP<30 S X=$$DONTPURG^HLUTIL() Q
"RTN","LA7VHL",87,0)
 ;
"RTN","LA7VHL",88,0)
 ; If LEDI interface and ORM message and no error then quit - send application ack after processing message.
"RTN","LA7VHL",89,0)
 I $G(LA7AERR)="",LA7INTYP=10,$G(LA7MTYP)="ORM" S X=$$DONTPURG^HLUTIL() Q
"RTN","LA7VHL",90,0)
 ;
"RTN","LA7VHL",91,0)
 ; If POC interface and error then setup HLL array
"RTN","LA7VHL",92,0)
 I LA7INTYP>19,LA7INTYP<30 D
"RTN","LA7VHL",93,0)
 . S HLL("SET FOR APP ACK")=1
"RTN","LA7VHL",94,0)
 . S HLL("LINKS",1)=HL("EIDS")_"^"_$S($G(LA76248):$P(LA76248(0),"^"),1:$G(LA7SAP))
"RTN","LA7VHL",95,0)
 ;
"RTN","LA7VHL",96,0)
 ; HL7 returns this as ACK if no errors found
"RTN","LA7VHL",97,0)
 I $G(LA7AERR)="" S HLA("HLA",1)="MSA"_LA7HLS("RFS")_"AA"_LA7HLS("RFS")_HL("MID")
"RTN","LA7VHL",98,0)
 ;
"RTN","LA7VHL",99,0)
 ; Send ACK message
"RTN","LA7VHL",100,0)
 I $D(HLA("HLA")) D
"RTN","LA7VHL",101,0)
 . S HLP("NAMESPACE")="LA"
"RTN","LA7VHL",102,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.LA7HLSA,"",.HLP)
"RTN","LA7VHL",103,0)
 ;
"RTN","LA7VHL",104,0)
 I $D(^TMP("HLA",$J)) D
"RTN","LA7VHL",105,0)
 . S HLP("NAMESPACE")="LA"
"RTN","LA7VHL",106,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.LA7HLSA,"",.HLP)
"RTN","LA7VHL",107,0)
 ;
"RTN","LA7VHL",108,0)
 Q
"RTN","LA7VHL",109,0)
 ;
"RTN","LA7VHL",110,0)
 ;
"RTN","LA7VHL",111,0)
MSH ;;MSH
"RTN","LA7VHL",112,0)
 ;
"RTN","LA7VHL",113,0)
 N LA7CFIG,LA7MID,LA7NOW,X
"RTN","LA7VHL",114,0)
 ;
"RTN","LA7VHL",115,0)
 S LA7SEQ=1
"RTN","LA7VHL",116,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VHL",117,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VHL",118,0)
 S LA7CS=$E(LA7ECH,1)
"RTN","LA7VHL",119,0)
 ; Sending application
"RTN","LA7VHL",120,0)
 S LA7SAP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VHL",121,0)
 ; Sending facility
"RTN","LA7VHL",122,0)
 S LA7SSITE=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VHL",123,0)
 ; Receiving application
"RTN","LA7VHL",124,0)
 S LA7RAP=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VHL",125,0)
 ; Receiving facility
"RTN","LA7VHL",126,0)
 S LA7RSITE=$P($$P^LA7VHLU(.LA7SEG,6,LA7FS),LA7CS)
"RTN","LA7VHL",127,0)
 ; Date/time of message
"RTN","LA7VHL",128,0)
 S LA7MEDT=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VHL",129,0)
 ; Message type/trigger event/message structure
"RTN","LA7VHL",130,0)
 S X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VHL",131,0)
 S LA7MTYP=$P(X,LA7CS),LA7MTYP("EVN")=$P(X,LA7CS,2),LA7MTYP("MSGSTR")=$P(X,LA7CS,3)
"RTN","LA7VHL",132,0)
 ; Message Control ID
"RTN","LA7VHL",133,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VHL",134,0)
 ; Processing ID
"RTN","LA7VHL",135,0)
 S LA7PRID=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VHL",136,0)
 ; Version ID
"RTN","LA7VHL",137,0)
 S LA7VER=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VHL",138,0)
 ; Accept acknowledgement type
"RTN","LA7VHL",139,0)
 S LA7AAT(0)=$$P^LA7VHLU(.LA7SEG,15,LA7FS)
"RTN","LA7VHL",140,0)
 ; Application acknowledgement type
"RTN","LA7VHL",141,0)
 S LA7AAT(1)=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VHL",142,0)
 ;
"RTN","LA7VHL",143,0)
 S LA7CFIG=LA7SAP_LA7SSITE_LA7RAP_LA7RSITE
"RTN","LA7VHL",144,0)
 S X=LA7CFIG X ^%ZOSF("LPC")
"RTN","LA7VHL",145,0)
 S LA76248=+$O(^LAHM(62.48,"C",$E(LA7CFIG,1,27)_Y,0))
"RTN","LA7VHL",146,0)
 I 'LA76248 S LA76248=+$O(^LAHM(62.48,"B",LA7SAP,0))
"RTN","LA7VHL",147,0)
 I 'LA76248,$E(LA7SAP,1,11)="LA7V REMOTE" S LA76248=+$O(^LAHM(62.48,"B","LA7V COLLECTION "_$P(LA7SAP," ",3),0))
"RTN","LA7VHL",148,0)
 I 'LA76248 D  Q
"RTN","LA7VHL",149,0)
 . D CREATE^LA7LOG(1)
"RTN","LA7VHL",150,0)
 . D REJECT("no config in 62.48")
"RTN","LA7VHL",151,0)
 ;
"RTN","LA7VHL",152,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VHL",153,0)
 ;
"RTN","LA7VHL",154,0)
 ; Determine interface type
"RTN","LA7VHL",155,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7VHL",156,0)
 ;
"RTN","LA7VHL",157,0)
 I '$P($G(^LAHM(62.48,LA76248,0)),"^",3) D
"RTN","LA7VHL",158,0)
 . D CREATE^LA7LOG(3)
"RTN","LA7VHL",159,0)
 . D REJECT("config is inactive")
"RTN","LA7VHL",160,0)
 ;
"RTN","LA7VHL",161,0)
 ; store incoming message in ^LAHM(62.49)
"RTN","LA7VHL",162,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHL",163,0)
 I LA76249<1 Q
"RTN","LA7VHL",164,0)
 ;
"RTN","LA7VHL",165,0)
 ; update entry in 62.49
"RTN","LA7VHL",166,0)
 N FDA,LA7ERR
"RTN","LA7VHL",167,0)
 I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VHL",168,0)
 S FDA(1,62.49,LA76249_",",1)="I"
"RTN","LA7VHL",169,0)
 S FDA(1,62.49,LA76249_",",3)=3
"RTN","LA7VHL",170,0)
 S FDA(1,62.49,LA76249_",",102)=LA7SAP
"RTN","LA7VHL",171,0)
 S FDA(1,62.49,LA76249_",",103)=LA7SSITE
"RTN","LA7VHL",172,0)
 S FDA(1,62.49,LA76249_",",104)=LA7RAP
"RTN","LA7VHL",173,0)
 S FDA(1,62.49,LA76249_",",105)=LA7RSITE
"RTN","LA7VHL",174,0)
 S FDA(1,62.49,LA76249_",",106)=LA7MEDT
"RTN","LA7VHL",175,0)
 S FDA(1,62.49,LA76249_",",108)=LA7MTYP
"RTN","LA7VHL",176,0)
 S FDA(1,62.49,LA76249_",",109)=LA7MID
"RTN","LA7VHL",177,0)
 S FDA(1,62.49,LA76249_",",110)=LA7PRID
"RTN","LA7VHL",178,0)
 S FDA(1,62.49,LA76249_",",111)=LA7VER
"RTN","LA7VHL",179,0)
 S FDA(1,62.49,LA76249_",",700)=HL("EID")_";"_HLMTIENS_";"_HL("EIDS")
"RTN","LA7VHL",180,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHL",181,0)
 ;
"RTN","LA7VHL",182,0)
 Q
"RTN","LA7VHL",183,0)
 ;
"RTN","LA7VHL",184,0)
 ;
"RTN","LA7VHL",185,0)
REJECT(LA7AR) ; Build a reject segment if the incoming message could not be processed.
"RTN","LA7VHL",186,0)
 ; Setting HLA("HLA",1) conforms to HL7 package rules for acknowledgements
"RTN","LA7VHL",187,0)
 ; LA7AR is a free text string that is included in the reject
"RTN","LA7VHL",188,0)
 ; message for debugging purposes.
"RTN","LA7VHL",189,0)
 ;
"RTN","LA7VHL",190,0)
 S HLA("HLA",1)="MSA"_LA7HLS("RFS")_"AR"_LA7HLS("RFS")_HL("MID")_LA7HLS("RFS")_LA7AR
"RTN","LA7VHL",191,0)
 S LA7AERR=LA7AR
"RTN","LA7VHL",192,0)
 Q
"RTN","LA7VHLU")
0^104^B47913954
"RTN","LA7VHLU",1,0)
LA7VHLU ;DALOI/JMC - HL7 segment builder utility ;12/07/11  16:18
"RTN","LA7VHLU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,62,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU",3,0)
 ;
"RTN","LA7VHLU",4,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VHLU",5,0)
 ;
"RTN","LA7VHLU",6,0)
STARTMSG(LA7EVNT,LA76249,LA7NOMSG) ; Create/initialize HL message
"RTN","LA7VHLU",7,0)
 ;
"RTN","LA7VHLU",8,0)
 ; Call with LA7EVNT = Lab event protocol in file (#101)
"RTN","LA7VHLU",9,0)
 ;           LA76249 = if entry already exists, do not create new entry
"RTN","LA7VHLU",10,0)
 ;          LA7NOMSG = flag to not store MSH segment in file #62.49
"RTN","LA7VHLU",11,0)
 ;
"RTN","LA7VHLU",12,0)
 N LA7MSH,X
"RTN","LA7VHLU",13,0)
 ;
"RTN","LA7VHLU",14,0)
 S LA76249=+$G(LA76249)
"RTN","LA7VHLU",15,0)
 D INITHL(LA7EVNT)
"RTN","LA7VHLU",16,0)
 I LA76249<1 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHLU",17,0)
 I $G(HL) D  Q
"RTN","LA7VHLU",18,0)
 . N LA7X
"RTN","LA7VHLU",19,0)
 . S LA7X(1)=LA76249,LA7X(2)=$TR(HL,"^","-")
"RTN","LA7VHLU",20,0)
 . D CREATE^LA7LOG(28)
"RTN","LA7VHLU",21,0)
 S X="MSH"_LA7FS_LA7ECH_LA7FS_HL("SAN")_LA7FS_HL("SAF")_LA7FS
"RTN","LA7VHLU",22,0)
 S $P(X,LA7FS,9)=HL("MTN")_$E(LA7ECH,1)_HL("ETN")
"RTN","LA7VHLU",23,0)
 S $P(X,LA7FS,11)=HL("PID")
"RTN","LA7VHLU",24,0)
 S $P(X,LA7FS,12)=HL("VER")
"RTN","LA7VHLU",25,0)
 S:$D(HL("ACAT")) $P(X,LA7FS,15)=HL("ACAT")
"RTN","LA7VHLU",26,0)
 S:$D(HL("APAT")) $P(X,LA7FS,16)=HL("APAT")
"RTN","LA7VHLU",27,0)
 S LA7MSH(0)=X
"RTN","LA7VHLU",28,0)
 I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7MSH)
"RTN","LA7VHLU",29,0)
 ;
"RTN","LA7VHLU",30,0)
 Q
"RTN","LA7VHLU",31,0)
 ;
"RTN","LA7VHLU",32,0)
INITHL(LA7EVNT) ; Initialize HL environment
"RTN","LA7VHLU",33,0)
 ;
"RTN","LA7VHLU",34,0)
 ; Call with LA7EVNT = Lab event protocol in file (#101)
"RTN","LA7VHLU",35,0)
 ; HL7 v1.6 interface
"RTN","LA7VHLU",36,0)
 ; LA7101 - IEN of event protocol
"RTN","LA7VHLU",37,0)
 ; HL  - array of output parameters
"RTN","LA7VHLU",38,0)
 ; INT - DHCP-to-DHCP only
"RTN","LA7VHLU",39,0)
 ;
"RTN","LA7VHLU",40,0)
 K ^TMP("HLS",$J)
"RTN","LA7VHLU",41,0)
 K HL,HLCOMP,HLSUB,HLFS,HLERR,HLMID
"RTN","LA7VHLU",42,0)
 ;
"RTN","LA7VHLU",43,0)
 S LA7101=$O(^ORD(101,"B",LA7EVNT,0))
"RTN","LA7VHLU",44,0)
 D INIT^HLFNC2(LA7101,.HL,0)
"RTN","LA7VHLU",45,0)
 S (LA7FS,HLFS)=$G(HL("FS"))
"RTN","LA7VHLU",46,0)
 S (LA7ECH,HLECH)=$G(HL("ECH"))
"RTN","LA7VHLU",47,0)
 S HLCOMP=$E($G(HL("ECH")),1)
"RTN","LA7VHLU",48,0)
 S HLSUB=$E($G(HL("ECH")),4)
"RTN","LA7VHLU",49,0)
 Q
"RTN","LA7VHLU",50,0)
 ;
"RTN","LA7VHLU",51,0)
 ;
"RTN","LA7VHLU",52,0)
GEN ; Generate HL7 v1.6 message
"RTN","LA7VHLU",53,0)
 ; LA7101 - IEN of event protocol
"RTN","LA7VHLU",54,0)
 ; HLARYTYP - array type
"RTN","LA7VHLU",55,0)
 ; HLFORMAT - HLMA formatted/not formatted
"RTN","LA7VHLU",56,0)
 ; HLMTIEN - IEN in 772 (batch messages)
"RTN","LA7VHLU",57,0)
 ; HLRESLT = message ID^error code^error description
"RTN","LA7VHLU",58,0)
 ; HLP("CONTPTR") - continuation pointer field value
"RTN","LA7VHLU",59,0)
 ; HLP("PRIORITY") - priority field value
"RTN","LA7VHLU",60,0)
 ; HLP("NAMESPACE") - package namespace
"RTN","LA7VHLU",61,0)
 ;
"RTN","LA7VHLU",62,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLRESLT,I
"RTN","LA7VHLU",63,0)
 S HLEID=LA7101,HLARYTYP="GM",HLFORMAT=1,HLMTIEN="",HLRESLT=""
"RTN","LA7VHLU",64,0)
 S HLP("NAMESPACE")="LA"
"RTN","LA7VHLU",65,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","LA7VHLU",66,0)
 K LA7MID M LA7MID=HLRESLT
"RTN","LA7VHLU",67,0)
 I $P(HLRESLT,"^",2)'="" D CREATE^LA7LOG(23)
"RTN","LA7VHLU",68,0)
 I $O(LA7MID(0)) D
"RTN","LA7VHLU",69,0)
 . S I=0
"RTN","LA7VHLU",70,0)
 . F  S I=$O(LA7MID(I)) Q:'I  I $L($P(LA7MID,"^",2)) S HLRESLT=LA7MID(I) D CREATE^LA7LOG(23)
"RTN","LA7VHLU",71,0)
 K HLP
"RTN","LA7VHLU",72,0)
 Q
"RTN","LA7VHLU",73,0)
 ;
"RTN","LA7VHLU",74,0)
 ;
"RTN","LA7VHLU",75,0)
BUILDSEG(LA7ARRAY,LA7DATA,LA7FS) ; Build HL segment
"RTN","LA7VHLU",76,0)
 ; Call with LA7ARRAY = array containing fields to build into a segment,
"RTN","LA7VHLU",77,0)
 ;                      passed by reference.
"RTN","LA7VHLU",78,0)
 ;            LA7DATA = array used to build segment, pass by reference
"RTN","LA7VHLU",79,0)
 ;                      used to return built segment.
"RTN","LA7VHLU",80,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU",81,0)
 ;
"RTN","LA7VHLU",82,0)
 ; Returns         LA7DATA = array with segment built
"RTN","LA7VHLU",83,0)
 ;              LA7DATA(0) = if everything fits on one node
"RTN","LA7VHLU",84,0)
 ;         LA7DATA(0,1...) = multiple elements if >245 characters
"RTN","LA7VHLU",85,0)
 ;
"RTN","LA7VHLU",86,0)
 N LA7I,LA7J,LA7LAST,LA7SUB
"RTN","LA7VHLU",87,0)
 ;
"RTN","LA7VHLU",88,0)
 K LA7DATA
"RTN","LA7VHLU",89,0)
 ;
"RTN","LA7VHLU",90,0)
 S LA7FS=$G(LA7FS)
"RTN","LA7VHLU",91,0)
 ;
"RTN","LA7VHLU",92,0)
 ; Node to store data in array
"RTN","LA7VHLU",93,0)
 S LA7SUB=0
"RTN","LA7VHLU",94,0)
 ;
"RTN","LA7VHLU",95,0)
 ; Last element in array
"RTN","LA7VHLU",96,0)
 S LA7LAST=$O(LA7ARRAY(""),-1)
"RTN","LA7VHLU",97,0)
 ;
"RTN","LA7VHLU",98,0)
 F LA7I=0:1:LA7LAST D
"RTN","LA7VHLU",99,0)
 . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I))))>245 S LA7SUB=LA7SUB+1
"RTN","LA7VHLU",100,0)
 . I LA7I>0 S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_LA7FS
"RTN","LA7VHLU",101,0)
 . I $O(LA7ARRAY(LA7I,""))'="" D
"RTN","LA7VHLU",102,0)
 . . S LA7J=""
"RTN","LA7VHLU",103,0)
 . . F  S LA7J=$O(LA7ARRAY(LA7I,LA7J)) Q:LA7J=""  D
"RTN","LA7VHLU",104,0)
 . . . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I,LA7J))))>245 S LA7SUB=LA7SUB+1
"RTN","LA7VHLU",105,0)
 . . . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I,LA7J))
"RTN","LA7VHLU",106,0)
 . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I))
"RTN","LA7VHLU",107,0)
 Q
"RTN","LA7VHLU",108,0)
 ;
"RTN","LA7VHLU",109,0)
 ;
"RTN","LA7VHLU",110,0)
FILESEG(LA7ROOT,LA7DATA) ; File HL segment in global
"RTN","LA7VHLU",111,0)
 ; Call with  LA7ROOT = global root used to store HL segment
"RTN","LA7VHLU",112,0)
 ;            LA7DATA = array with data to file (pass by reference)
"RTN","LA7VHLU",113,0)
 ;
"RTN","LA7VHLU",114,0)
 N LA7HLSN,LA7I
"RTN","LA7VHLU",115,0)
 I $G(LA7ROOT)="" Q  ; no global root passed.
"RTN","LA7VHLU",116,0)
 ;
"RTN","LA7VHLU",117,0)
 ; get next subscript number
"RTN","LA7VHLU",118,0)
 S LA7HLSN=($O(@(LA7ROOT)@(""),-1))+1
"RTN","LA7VHLU",119,0)
 ;
"RTN","LA7VHLU",120,0)
 ; store first 245 characters of segment
"RTN","LA7VHLU",121,0)
 S @LA7ROOT@(LA7HLSN)=$G(LA7DATA(0))
"RTN","LA7VHLU",122,0)
 ;
"RTN","LA7VHLU",123,0)
 ; if segment >245 characters then store rest of message
"RTN","LA7VHLU",124,0)
 S LA7I=0
"RTN","LA7VHLU",125,0)
 F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""  S @LA7ROOT@(LA7HLSN,LA7I)=LA7DATA(LA7I)
"RTN","LA7VHLU",126,0)
 ;
"RTN","LA7VHLU",127,0)
 Q
"RTN","LA7VHLU",128,0)
 ;
"RTN","LA7VHLU",129,0)
 ;
"RTN","LA7VHLU",130,0)
INIT6249() ; Create stub entry in file #62.49
"RTN","LA7VHLU",131,0)
 ; Returns ien of entry in #62.49 that was created
"RTN","LA7VHLU",132,0)
 ; NOTE: set lock on entry in #62.49, does not release it - calling process should release lock
"RTN","LA7VHLU",133,0)
 ;
"RTN","LA7VHLU",134,0)
 N LA7ERR,LA7FDA,ZERO
"RTN","LA7VHLU",135,0)
 ;
"RTN","LA7VHLU",136,0)
 ; Lock zeroth node of file.
"RTN","LA7VHLU",137,0)
 L +^LAHM(62.49,0):99999
"RTN","LA7VHLU",138,0)
 I '$T Q -1
"RTN","LA7VHLU",139,0)
 ;
"RTN","LA7VHLU",140,0)
 S ZERO=$G(^LAHM(62.49,0))
"RTN","LA7VHLU",141,0)
 F LA76249=$P(ZERO,"^",3):1 I '$D(^LAHM(62.49,LA76249)) D  Q
"RTN","LA7VHLU",142,0)
 . S $P(^LAHM(62.49,LA76249,0),"^")=LA76249,^LAHM(62.49,"B",LA76249,LA76249)=""
"RTN","LA7VHLU",143,0)
 . S $P(ZERO,"^",3)=LA76249,$P(ZERO,"^",4)=$P(ZERO,"^",4)+1,^LAHM(62.49,0)=ZERO
"RTN","LA7VHLU",144,0)
 ;
"RTN","LA7VHLU",145,0)
 ; Unlock zero node
"RTN","LA7VHLU",146,0)
 L -^LAHM(62.49,0)
"RTN","LA7VHLU",147,0)
 ;
"RTN","LA7VHLU",148,0)
 ; Lock entry in file 62.49 - Calling process is responsible for releasing lock when no longer needed.
"RTN","LA7VHLU",149,0)
 L +^LAHM(62.49,LA76249):99999
"RTN","LA7VHLU",150,0)
 I '$T L -^LAHM(62.49,0) Q -1
"RTN","LA7VHLU",151,0)
 ;
"RTN","LA7VHLU",152,0)
 S LA7FDA(1,62.49,LA76249_",",2)="B" ; status =(B)uilding
"RTN","LA7VHLU",153,0)
 S LA7FDA(1,62.49,LA76249_",",4)=$$NOW^XLFDT ; Date/time entered
"RTN","LA7VHLU",154,0)
 D FILE^DIE("","LA7FDA(1)","LA7ERR(1)")
"RTN","LA7VHLU",155,0)
 I $D(LA7ERR) S LA76249=-1
"RTN","LA7VHLU",156,0)
 ;
"RTN","LA7VHLU",157,0)
 Q LA76249
"RTN","LA7VHLU",158,0)
 ;
"RTN","LA7VHLU",159,0)
 ;
"RTN","LA7VHLU",160,0)
FILE6249(LA76249,LA7DATA) ; File HL segment in LAHM(62.49) global
"RTN","LA7VHLU",161,0)
 ; Call with  LA76249 = ien of entry in file # 62.49
"RTN","LA7VHLU",162,0)
 ;            LA7DATA = array with data to file (pass by reference)
"RTN","LA7VHLU",163,0)
 ;
"RTN","LA7VHLU",164,0)
 N LA7I,LA7J,LA7WP
"RTN","LA7VHLU",165,0)
 I '$G(LA76249) Q  ; no entry passed.
"RTN","LA7VHLU",166,0)
 ;
"RTN","LA7VHLU",167,0)
 ; move data in positive number subscripts
"RTN","LA7VHLU",168,0)
 S LA7I="",LA7J=0
"RTN","LA7VHLU",169,0)
 F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""  D
"RTN","LA7VHLU",170,0)
 . S LA7J=LA7J+1
"RTN","LA7VHLU",171,0)
 . S LA7WP(LA7J)=LA7DATA(LA7I)
"RTN","LA7VHLU",172,0)
 ;
"RTN","LA7VHLU",173,0)
 ; set blank line which separates each segment
"RTN","LA7VHLU",174,0)
 S LA7WP(LA7J+1)=""
"RTN","LA7VHLU",175,0)
 ;
"RTN","LA7VHLU",176,0)
 ; file data
"RTN","LA7VHLU",177,0)
 D WP^DIE(62.49,LA76249_",",150,"A","LA7WP")
"RTN","LA7VHLU",178,0)
 Q
"RTN","LA7VHLU",179,0)
 ;
"RTN","LA7VHLU",180,0)
 ;
"RTN","LA7VHLU",181,0)
P(LA7X,LA7P,LA7EC) ; get field LA7P from array (passed by ref.)
"RTN","LA7VHLU",182,0)
 ; Call with  LA7X = array to extract data from, pass by reference.
"RTN","LA7VHLU",183,0)
 ;            LA7P = field to extract
"RTN","LA7VHLU",184,0)
 ;           LA7EC = encoding character separator
"RTN","LA7VHLU",185,0)
 ;
"RTN","LA7VHLU",186,0)
 ; Returns LA7Y = value of requested piece
"RTN","LA7VHLU",187,0)
 ;
"RTN","LA7VHLU",188,0)
 N I,L,LA7Y,L1,Y
"RTN","LA7VHLU",189,0)
 S L=0,Y=1,LA7Y=""
"RTN","LA7VHLU",190,0)
 ;Y=begining piece of each node, L1=number of pieces in each node
"RTN","LA7VHLU",191,0)
 ;L=last piece in each node, quit when last piece is greater than LA7P
"RTN","LA7VHLU",192,0)
 F I=0:1 Q:'$D(LA7X(I))  S L1=$L(LA7X(I),LA7EC),L=L1+Y-1 D  Q:Y>LA7P
"RTN","LA7VHLU",193,0)
 . ;if LA7P is less than last piece, this node has field you want
"RTN","LA7VHLU",194,0)
 . S:LA7P'>L LA7Y=LA7Y_$P(LA7X(I),LA7EC,(LA7P-Y+1))
"RTN","LA7VHLU",195,0)
 . S Y=L
"RTN","LA7VHLU",196,0)
 Q LA7Y
"RTN","LA7VHLU",197,0)
 ;
"RTN","LA7VHLU",198,0)
 ;
"RTN","LA7VHLU",199,0)
PA(LA7X,LA7P,LA7EC,LA7Y) ; get field LA7P from array (passed by ref.)
"RTN","LA7VHLU",200,0)
 ; Call with  LA7X = array to extract data from, pass by reference.
"RTN","LA7VHLU",201,0)
 ;            LA7P = field to extract
"RTN","LA7VHLU",202,0)
 ;           LA7EC = encoding character separator
"RTN","LA7VHLU",203,0)
 ;
"RTN","LA7VHLU",204,0)
 ; Returns LA7Y = array value of requested piece (returned by reference)
"RTN","LA7VHLU",205,0)
 ;
"RTN","LA7VHLU",206,0)
 N I,L,L1,X,Y
"RTN","LA7VHLU",207,0)
 S (L,LA7Y)=0,Y=1
"RTN","LA7VHLU",208,0)
 ;Y=begining piece of each node, L1=number of pieces in each node
"RTN","LA7VHLU",209,0)
 ;L=last piece in each node, quit when last piece is greater than LA7P
"RTN","LA7VHLU",210,0)
 F I=0:1 Q:'$D(LA7X(I))  S L1=$L(LA7X(I),LA7EC),L=L1+Y-1 D  Q:Y>LA7P
"RTN","LA7VHLU",211,0)
 . ;if LA7P is less than last piece, this node has field you want
"RTN","LA7VHLU",212,0)
 . I LA7P'>L S X=$P(LA7X(I),LA7EC,(LA7P-Y+1)) S:X]"" LA7Y=LA7Y+1,LA7Y(LA7Y)=X
"RTN","LA7VHLU",213,0)
 . S Y=L
"RTN","LA7VHLU",214,0)
 Q
"RTN","LA7VHLU",215,0)
 ;
"RTN","LA7VHLU",216,0)
 ;
"RTN","LA7VHLU",217,0)
BLG(LA7ACTN,LA7CHGTY,LA7FS,LA7ECH) ; Build BLG segment -  billing information
"RTN","LA7VHLU",218,0)
 ; Call with  LA7ACTN = billing account Number
"RTN","LA7VHLU",219,0)
 ;           LA7CHGTY = charge type
"RTN","LA7VHLU",220,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU",221,0)
 ;
"RTN","LA7VHLU",222,0)
 ; Returns LA7Y
"RTN","LA7VHLU",223,0)
 ;
"RTN","LA7VHLU",224,0)
 ; Default to CO (contract) for charge type - table 0122
"RTN","LA7VHLU",225,0)
 S LA7CHGTY=$G(LA7CHGTY,"CO")
"RTN","LA7VHLU",226,0)
 S LA7Y="BLG"_LA7FS_LA7FS_LA7CHGTY_LA7FS_$$M11^HLFNC(LA7ACTN,LA7ECH)_LA7FS
"RTN","LA7VHLU",227,0)
 Q LA7Y
"RTN","LA7VHLU",228,0)
 ;
"RTN","LA7VHLU",229,0)
 ;
"RTN","LA7VHLU",230,0)
PTEXTID(LA74,LA7UID,LA7Y) ; Retrieve patient's id that was transmitted by other system.
"RTN","LA7VHLU",231,0)
 ; Used to build PID-2 when returning results to placer.
"RTN","LA7VHLU",232,0)
 ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order.
"RTN","LA7VHLU",233,0)
 ; Call with  LA74 = ien of placer in INSTITUTION file (#4)
"RTN","LA7VHLU",234,0)
 ;          LA7UID = placer's specimen identifier (UID, etc.)
"RTN","LA7VHLU",235,0)
 ;
"RTN","LA7VHLU",236,0)
 ; Returns array LA7Y by reference
"RTN","LA7VHLU",237,0)
 ;               LA7Y("FS")  - original field separator
"RTN","LA7VHLU",238,0)
 ;               LA7Y("ECH") - original encoding characters used
"RTN","LA7VHLU",239,0)
 ;             LA7Y("PID-2") - original PID-2 sequence
"RTN","LA7VHLU",240,0)
 ;             LA7Y("PID-4") - original PID-4 sequence
"RTN","LA7VHLU",241,0)
 ;
"RTN","LA7VHLU",242,0)
 N LA7696,LA7X
"RTN","LA7VHLU",243,0)
 ;
"RTN","LA7VHLU",244,0)
 S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y=""
"RTN","LA7VHLU",245,0)
 ;
"RTN","LA7VHLU",246,0)
 ; Return null if no values passed
"RTN","LA7VHLU",247,0)
 I LA74<1!(LA7UID="") Q
"RTN","LA7VHLU",248,0)
 ;
"RTN","LA7VHLU",249,0)
 S LA7696=$O(^LRO(69.6,"RST",LA74,LA7UID,0))
"RTN","LA7VHLU",250,0)
 I LA7696 D
"RTN","LA7VHLU",251,0)
 . S LA7X=$G(^LRO(69.6,LA7696,700))
"RTN","LA7VHLU",252,0)
 . S LA7Y("FS")=$E(LA7X,1)
"RTN","LA7VHLU",253,0)
 . S LA7Y("ECH")=$E(LA7X,2,5)
"RTN","LA7VHLU",254,0)
 . S LA7Y("PID-2")=$G(^LRO(69.6,LA7696,700.02))
"RTN","LA7VHLU",255,0)
 . S LA7Y("PID-4")=$G(^LRO(69.6,LA7696,700.04))
"RTN","LA7VHLU",256,0)
 Q
"RTN","LA7VHLU",257,0)
 ;
"RTN","LA7VHLU",258,0)
 ;
"RTN","LA7VHLU",259,0)
RETOBR(LA74,LA7UID,LA7NLT,LA7Y) ; Retrieve placer's various OBR's that were transmitted by other system.
"RTN","LA7VHLU",260,0)
 ; Used to build OBR-4/17/18 when returning results to placer.
"RTN","LA7VHLU",261,0)
 ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order.
"RTN","LA7VHLU",262,0)
 ;
"RTN","LA7VHLU",263,0)
 ; Call with   LA74 = ien of placer in INSTITUTION file (#4)
"RTN","LA7VHLU",264,0)
 ;           LA7UID = placer's specimen identifier (UID, accession number, etc.)
"RTN","LA7VHLU",265,0)
 ;           LA7NLT = ordered NLT test code
"RTN","LA7VHLU",266,0)
 ;
"RTN","LA7VHLU",267,0)
 ; Returns array LA7Y by reference
"RTN","LA7VHLU",268,0)
 ;               LA7Y("FS")     - original field separator
"RTN","LA7VHLU",269,0)
 ;               LA7Y("ECH")    - original encoding characters used
"RTN","LA7VHLU",270,0)
 ;               LA7Y("OBR-4")  - original OBR-4 sequence
"RTN","LA7VHLU",271,0)
 ;               LA7Y("OBR-17)  - modified info from OBR-17
"RTN","LA7VHLU",272,0)
 ;               LA7Y("OBR-18") - original OBR-18 sequence
"RTN","LA7VHLU",273,0)
 ;               LA7Y("OBR-19") - original OBR-19 sequence
"RTN","LA7VHLU",274,0)
 ;
"RTN","LA7VHLU",275,0)
 N I,LA7696,LA76964,LA7X
"RTN","LA7VHLU",276,0)
 ;
"RTN","LA7VHLU",277,0)
 ; Initialize return array
"RTN","LA7VHLU",278,0)
 S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y=""
"RTN","LA7VHLU",279,0)
 F I="FS","ECH","OBR-4","OBR-17","OBR-18","OBR-19" S LA7Y(I)=""
"RTN","LA7VHLU",280,0)
 ;
"RTN","LA7VHLU",281,0)
 ; Return null if no values passed
"RTN","LA7VHLU",282,0)
 I LA74<1!(LA7UID="")!(LA7NLT="") Q
"RTN","LA7VHLU",283,0)
 ;
"RTN","LA7VHLU",284,0)
 S LA7696=0
"RTN","LA7VHLU",285,0)
 F  S LA7696=$O(^LRO(69.6,"RST",LA74,LA7UID,LA7696)) I 'LA7696!($D(^LRO(69.6,+LA7696,2,"C",LA7NLT))) Q
"RTN","LA7VHLU",286,0)
 I LA7696<1 Q
"RTN","LA7VHLU",287,0)
 ;
"RTN","LA7VHLU",288,0)
 S LA7X=$G(^LRO(69.6,LA7696,700))
"RTN","LA7VHLU",289,0)
 S LA7Y("FS")=$E(LA7X,1)
"RTN","LA7VHLU",290,0)
 S LA7Y("ECH")=$E(LA7X,2,5)
"RTN","LA7VHLU",291,0)
 ;
"RTN","LA7VHLU",292,0)
 S LA76964=$O(^LRO(69.6,LA7696,2,"C",LA7NLT,0))
"RTN","LA7VHLU",293,0)
 I LA76964<1 Q
"RTN","LA7VHLU",294,0)
 ;
"RTN","LA7VHLU",295,0)
 S LA7Y("OBR-4")=$G(^LRO(69.6,LA7696,2,LA76964,700.04))
"RTN","LA7VHLU",296,0)
 S LA7Y("OBR-17")=$P($G(^LRO(69.6,LA7696,2,LA76964,1)),"^")
"RTN","LA7VHLU",297,0)
 S LA7Y("OBR-18")=$G(^LRO(69.6,LA7696,2,LA76964,700.18))
"RTN","LA7VHLU",298,0)
 S LA7Y("OBR-19")=$G(^LRO(69.6,LA7696,2,LA76964,700.19))
"RTN","LA7VHLU",299,0)
 ;
"RTN","LA7VHLU",300,0)
 Q
"RTN","LA7VHLU1")
0^41^B37375744
"RTN","LA7VHLU1",1,0)
LA7VHLU1 ;DALOI/JMC - HL7 segment builder utility ;04/30/10  19:10
"RTN","LA7VHLU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU1",3,0)
 ;
"RTN","LA7VHLU1",4,0)
 ;
"RTN","LA7VHLU1",5,0)
SETID(LA76249,LA7ID,LA7X,LA7TYP) ; Setup identifier's in TMP global for later storing.
"RTN","LA7VHLU1",6,0)
 ; Call with LA76249 = ien of message in #62.49
"RTN","LA7VHLU1",7,0)
 ;             LA7ID = root of identifier
"RTN","LA7VHLU1",8,0)
 ;              LA7X = value to add to identifier
"RTN","LA7VHLU1",9,0)
 ;            LA7TYP = type - primary(1) or additional(0)
"RTN","LA7VHLU1",10,0)
 N Y
"RTN","LA7VHLU1",11,0)
 I $G(LA7X)="" Q
"RTN","LA7VHLU1",12,0)
 S Y=$O(^TMP("LA7-ID",$J,LA76249,""),-1)+1 ; get next entry
"RTN","LA7VHLU1",13,0)
 S ^TMP("LA7-ID",$J,LA76249,Y)=LA7ID_LA7X_"^"_+$G(LA7TYP)
"RTN","LA7VHLU1",14,0)
 Q
"RTN","LA7VHLU1",15,0)
 ;
"RTN","LA7VHLU1",16,0)
 ;
"RTN","LA7VHLU1",17,0)
UTS(LA7628,LA7UID,LA760) ; Update test status on manifest
"RTN","LA7VHLU1",18,0)
 ; Call with LA7628 = ien of shipping manifest in #62.8
"RTN","LA7VHLU1",19,0)
 ;           LA7UID = accession's UID
"RTN","LA7VHLU1",20,0)
 ;            LA760 = file # 60 ien of ordered test
"RTN","LA7VHLU1",21,0)
 ;
"RTN","LA7VHLU1",22,0)
 ; Sets to status 4 (partial). Will deal with 5 (completed) at later time
"RTN","LA7VHLU1",23,0)
 ; when lab package has capability of designating an accession as completed.
"RTN","LA7VHLU1",24,0)
 ;
"RTN","LA7VHLU1",25,0)
 N LA762801,LA7X
"RTN","LA7VHLU1",26,0)
 ;
"RTN","LA7VHLU1",27,0)
 S LA762801=0
"RTN","LA7VHLU1",28,0)
 F  S LA762801=$O(^LAHM(62.8,LA7628,10,"UID",LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VHLU1",29,0)
 . S LA7X=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7VHLU1",30,0)
 . I $P(LA7X,"^",2)'=LA760 Q  ; Not the test we're looking for.
"RTN","LA7VHLU1",31,0)
 . I $P(LA7X,"^",8)>2,$P(LA7X,"^",8)<5 D STSUP^LA7SMU(LA7628,LA762801,4)
"RTN","LA7VHLU1",32,0)
 Q
"RTN","LA7VHLU1",33,0)
 ;
"RTN","LA7VHLU1",34,0)
 ;
"RTN","LA7VHLU1",35,0)
UPID(LA76249) ; Update identifier's associated with the message in #62.49
"RTN","LA7VHLU1",36,0)
 ; Call with LA76249 = ien of message in #62.49
"RTN","LA7VHLU1",37,0)
 ;
"RTN","LA7VHLU1",38,0)
 N FDA,LA7ERR,LA7I,LA7TYP,LA7X
"RTN","LA7VHLU1",39,0)
 ;
"RTN","LA7VHLU1",40,0)
 S LA7I=0
"RTN","LA7VHLU1",41,0)
 F  S LA7I=$O(^TMP("LA7-ID",$J,LA76249,LA7I)) Q:'LA7I  D
"RTN","LA7VHLU1",42,0)
 . S LA7X=^TMP("LA7-ID",$J,LA76249,LA7I),LA7TYP=+$P(LA7X,"^",2)
"RTN","LA7VHLU1",43,0)
 . I LA7TYP=1,$L($P(LA7X,"^"))<46 D
"RTN","LA7VHLU1",44,0)
 . . S FDA(1,62.49,LA76249_",",5)=$P(LA7X,"^")
"RTN","LA7VHLU1",45,0)
 . . D FILE^DIE("","FDA(1)","LA7ERR(1)"),CLEAN^DILF
"RTN","LA7VHLU1",46,0)
 . I $D(^LAHM(62.49,LA76249,.2,"B",$P(LA7X,"^"))) Q
"RTN","LA7VHLU1",47,0)
 . S FDA(2,62.49002,"+2,"_LA76249_",",.01)=$P(LA7X,"^")
"RTN","LA7VHLU1",48,0)
 . D UPDATE^DIE("","FDA(2)","","LA7ERR(2)"),CLEAN^DILF
"RTN","LA7VHLU1",49,0)
 ;
"RTN","LA7VHLU1",50,0)
 ; Clean up
"RTN","LA7VHLU1",51,0)
 D CLEAN^DILF
"RTN","LA7VHLU1",52,0)
 K ^TMP("LA7-ID",$J,LA76249)
"RTN","LA7VHLU1",53,0)
 Q
"RTN","LA7VHLU1",54,0)
 ;
"RTN","LA7VHLU1",55,0)
 ;
"RTN","LA7VHLU1",56,0)
CHKDT(LA7X) ; Check validity of date/time
"RTN","LA7VHLU1",57,0)
 ; Adjust invalid times to closest valid time - correct for lab problem
"RTN","LA7VHLU1",58,0)
 ; that generated invalid FileMan date/times.
"RTN","LA7VHLU1",59,0)
 ; If hours>24 then set to 24 with no minutes/seconds
"RTN","LA7VHLU1",60,0)
 ; If minutes greater than 59 then set to 59
"RTN","LA7VHLU1",61,0)
 ; If seconds greater than 59 then set to 59
"RTN","LA7VHLU1",62,0)
 ;
"RTN","LA7VHLU1",63,0)
 N I,LA7Y,X
"RTN","LA7VHLU1",64,0)
 ;
"RTN","LA7VHLU1",65,0)
 S LA7Y=$P(LA7X,".",2)
"RTN","LA7VHLU1",66,0)
 ;
"RTN","LA7VHLU1",67,0)
 ; If time present then check otherwise skip and return input.
"RTN","LA7VHLU1",68,0)
 I LA7Y'="" D
"RTN","LA7VHLU1",69,0)
 . F I=1:2:5 D
"RTN","LA7VHLU1",70,0)
 . . S LA7Y(I)=$E(LA7Y,I,I+1)
"RTN","LA7VHLU1",71,0)
 . . I $L(LA7Y(I))=1 S LA7Y(I)=LA7Y(I)_"0"
"RTN","LA7VHLU1",72,0)
 . . I LA7Y(I)>$S(I=1:24,1:59) S LA7Y(I)=$S(I=1:24,1:59)
"RTN","LA7VHLU1",73,0)
 . . I I=1,LA7Y(1)=24 S LA7Y=24
"RTN","LA7VHLU1",74,0)
 . S X="."_LA7Y(1)_LA7Y(3)_LA7Y(5),X=+X
"RTN","LA7VHLU1",75,0)
 . S $P(LA7X,".",2)=$P(X,".",2)
"RTN","LA7VHLU1",76,0)
 ;
"RTN","LA7VHLU1",77,0)
 Q LA7X
"RTN","LA7VHLU1",78,0)
 ;
"RTN","LA7VHLU1",79,0)
 ;
"RTN","LA7VHLU1",80,0)
REFUNIT(LA7SB,LA761) ; Find reference ranges/units from file #60
"RTN","LA7VHLU1",81,0)
 ; Call with LA7SB = dataname from "CH" subscript
"RTN","LA7VHLU1",82,0)
 ;           LA761 = pointer to topography file #61
"RTN","LA7VHLU1",83,0)
 ;
"RTN","LA7VHLU1",84,0)
 ;   Returns  LA7Y = reference low^reference high^units^critcal low^critcal high^therapeutic low^therapeutic high
"RTN","LA7VHLU1",85,0)
 ;
"RTN","LA7VHLU1",86,0)
 ; Finds first entry in file #60 that is associated with this dataname.
"RTN","LA7VHLU1",87,0)
 N LA760,LA7X,LA7Y
"RTN","LA7VHLU1",88,0)
 ;
"RTN","LA7VHLU1",89,0)
 S LA7Y=""
"RTN","LA7VHLU1",90,0)
 S LA760=+$O(^LAB(60,"C","CH;"_LA7SB_";1",0))
"RTN","LA7VHLU1",91,0)
 S LA7X=$G(^LAB(60,LA760,1,LA761,0))
"RTN","LA7VHLU1",92,0)
 S $P(LA7Y,"^")=$P(LA7X,"^",2)
"RTN","LA7VHLU1",93,0)
 S $P(LA7Y,"^",2)=$P(LA7X,"^",3)
"RTN","LA7VHLU1",94,0)
 S $P(LA7Y,"^",3)=$P(LA7X,"^",7)
"RTN","LA7VHLU1",95,0)
 S $P(LA7Y,"^",4)=$P(LA7X,"^",4)
"RTN","LA7VHLU1",96,0)
 S $P(LA7Y,"^",5)=$P(LA7X,"^",5)
"RTN","LA7VHLU1",97,0)
 S $P(LA7Y,"^",6)=$P(LA7X,"^",11)
"RTN","LA7VHLU1",98,0)
 S $P(LA7Y,"^",7)=$P(LA7X,"^",12)
"RTN","LA7VHLU1",99,0)
 ;
"RTN","LA7VHLU1",100,0)
 Q LA7Y
"RTN","LA7VHLU1",101,0)
 ;
"RTN","LA7VHLU1",102,0)
 ;
"RTN","LA7VHLU1",103,0)
OKTOSND(LRSS,LRSB,LA760) ; Check if test ok to send - is (O)utput or (B)oth
"RTN","LA7VHLU1",104,0)
 ; Call with LRSS = file #63 subscript
"RTN","LA7VHLU1",105,0)
 ;           LRSB = file #63 data name or field reference
"RTN","LA7VHLU1",106,0)
 ;          LA760 = file #60 ien
"RTN","LA7VHLU1",107,0)
 ;
"RTN","LA7VHLU1",108,0)
 ; Returns   LA7Y = 0-do not send, 1-yes-ok (default)
"RTN","LA7VHLU1",109,0)
 ;
"RTN","LA7VHLU1",110,0)
 N LA760,LA7X,LA7Y
"RTN","LA7VHLU1",111,0)
 S LA7Y=1
"RTN","LA7VHLU1",112,0)
 ;
"RTN","LA7VHLU1",113,0)
 ; If "CH" subscript check file #60 test's type that use this dataname
"RTN","LA7VHLU1",114,0)
 ; and if find one that is type "O" or "B" then set to yes.
"RTN","LA7VHLU1",115,0)
 I LRSS="CH" D
"RTN","LA7VHLU1",116,0)
 . I $G(LA760) D  Q
"RTN","LA7VHLU1",117,0)
 . . I "BO"'[$P(^LAB(60,LA760,0),"^",3) S LA7Y=0
"RTN","LA7VHLU1",118,0)
 . S (LA760,LA7X)=0
"RTN","LA7VHLU1",119,0)
 . F  S LA760=$O(^LAB(60,"C","CH;"_LRSB_";1",LA760)) Q:'LA760  D
"RTN","LA7VHLU1",120,0)
 . . I "BO"[$P(^LAB(60,LA760,0),"^",3) S LA7X=1
"RTN","LA7VHLU1",121,0)
 . S LA7Y=LA7X
"RTN","LA7VHLU1",122,0)
 ;
"RTN","LA7VHLU1",123,0)
 Q LA7Y
"RTN","LA7VHLU1",124,0)
 ;
"RTN","LA7VHLU1",125,0)
 ;
"RTN","LA7VHLU1",126,0)
FAMG(LA76248,LA7TYP) ; Find alert mail group for this alert type
"RTN","LA7VHLU1",127,0)
 ; Call with LA76248 = ien of entry in file #62.48
"RTN","LA7VHLU1",128,0)
 ;            LA7TYP = type of alert
"RTN","LA7VHLU1",129,0)
 ;                     (1-new results)
"RTN","LA7VHLU1",130,0)
 ;                     (2-error on message)
"RTN","LA7VHLU1",131,0)
 ;                     (3-orders received)
"RTN","LA7VHLU1",132,0)
 ;
"RTN","LA7VHLU1",133,0)
 ; Returns LA7MG = name of mail group
"RTN","LA7VHLU1",134,0)
 ;
"RTN","LA7VHLU1",135,0)
 N LA7MG,X,Y
"RTN","LA7VHLU1",136,0)
 S (LA7MG,X)=""
"RTN","LA7VHLU1",137,0)
 F  S X=$O(^LAHM(62.48,+$G(LA76248),20,"B",LA7TYP,X)) Q:'X  D
"RTN","LA7VHLU1",138,0)
 . S Y=$G(^LAHM(62.48,LA76248,20,X,0))
"RTN","LA7VHLU1",139,0)
 . I $P(Y,"^",2)'="" S LA7MG=$P(Y,"^",2) ; Send to mail group.
"RTN","LA7VHLU1",140,0)
 ;
"RTN","LA7VHLU1",141,0)
 ; Fail safe mail group when no mail group specified
"RTN","LA7VHLU1",142,0)
 I LA7MG="" S LA7MG="LAB MESSAGING"
"RTN","LA7VHLU1",143,0)
 ;
"RTN","LA7VHLU1",144,0)
 Q LA7MG
"RTN","LA7VHLU1",145,0)
 ;
"RTN","LA7VHLU1",146,0)
 ;
"RTN","LA7VHLU1",147,0)
GETISO(SUBFL,IENS) ; Retrieve isolate id for micro specimens from file #63
"RTN","LA7VHLU1",148,0)
 ; Call with SUBFL = FileMan subfile #
"RTN","LA7VHLU1",149,0)
 ;            IENS = FileMan iens of record
"RTN","LA7VHLU1",150,0)
 ;
"RTN","LA7VHLU1",151,0)
 ;    Returns LA7Y = isolate id as sub-id
"RTN","LA7VHLU1",152,0)
 ;
"RTN","LA7VHLU1",153,0)
 N LA7Y
"RTN","LA7VHLU1",154,0)
 ;
"RTN","LA7VHLU1",155,0)
 S LA7Y=$$GET1^DIQ(SUBFL,IENS,.1)
"RTN","LA7VHLU1",156,0)
 I LA7Y="" D
"RTN","LA7VHLU1",157,0)
 . N FDA,ID,LA74,LA7DIE
"RTN","LA7VHLU1",158,0)
 . S ID=$S(SUBFL=63.3:3,SUBFL=63.34:6,SUBFL=63.37:9,SUBFL=63.39:12,SUBFL=63.43:17,1:"")
"RTN","LA7VHLU1",159,0)
 . S ID=ID_"-"_$P(IENS,",")
"RTN","LA7VHLU1",160,0)
 . S LA74=+$$KSP^XUPARAM("INST")
"RTN","LA7VHLU1",161,0)
 . S LA7Y=$$MAKEISO^LRVRMI1(LA74,ID)
"RTN","LA7VHLU1",162,0)
 . S FDA(63,SUBFL,IENS,.1)=LA7Y
"RTN","LA7VHLU1",163,0)
 . D FILE^DIE("","FDA(63)","LA7DIE(2)")
"RTN","LA7VHLU1",164,0)
 ;
"RTN","LA7VHLU1",165,0)
 Q LA7Y
"RTN","LA7VHLU1",166,0)
 ;
"RTN","LA7VHLU1",167,0)
 ;
"RTN","LA7VHLU1",168,0)
LAHSTAT(LRLL,ISQN,ERR,ERRMSG) ;
"RTN","LA7VHLU1",169,0)
 ; Determine related file #62.49 message(s) status for results in LAH global.
"RTN","LA7VHLU1",170,0)
 ; Call with LRLL = ien of loadlist in LAH global
"RTN","LA7VHLU1",171,0)
 ;           ISQN = ien of entry in LAH(LRLL) global
"RTN","LA7VHLU1",172,0)
 ;            ERR = 0 (do not return error messages)
"RTN","LA7VHLU1",173,0)
 ;                = .5 (return status of last message processed)
"RTN","LA7VHLU1",174,0)
 ;                = 1 (return error messages in array ERRMSG)
"RTN","LA7VHLU1",175,0)
 ;
"RTN","LA7VHLU1",176,0)
 ;         ERRMSG = array to return error messages (pass by reference)
"RTN","LA7VHLU1",177,0)
 ;
"RTN","LA7VHLU1",178,0)
 ;        Returns STATUS = 0 (no related file #62.49 messages found)
"RTN","LA7VHLU1",179,0)
 ;                 = 1 (one or more related file #62.49 messages encountered no errors in processing)
"RTN","LA7VHLU1",180,0)
 ;                 = 2 (one or more related file #62.49 messages encountered errors in processing)
"RTN","LA7VHLU1",181,0)
 ;
"RTN","LA7VHLU1",182,0)
 ;          ERRMSG = array listing related error messages (indexed by FM D/T of error)
"RTN","LA7VHLU1",183,0)
 ;                   Example: ERRMSG(3061010.195711)="Msg #1070: No File #62.47 mapping found for OBX-3:0410.3\GRAM STAIN\99LAB"
"RTN","LA7VHLU1",184,0)
 ;
"RTN","LA7VHLU1",185,0)
 N I,K,LA7DT,LA7IEN,LA7X,STATUS,X
"RTN","LA7VHLU1",186,0)
 S (LA7IEN,STATUS)=0
"RTN","LA7VHLU1",187,0)
 F  S LA7IEN=$O(^LAH(LRLL,1,ISQN,.01,LA7IEN)) Q:'LA7IEN  D
"RTN","LA7VHLU1",188,0)
 . I ERR=.5,LA7IEN'=$P(^LAH(LRLL,1,ISQN,0),"^",13) Q
"RTN","LA7VHLU1",189,0)
 . S LA7X=$G(^LAHM(62.49,LA7IEN,0))
"RTN","LA7VHLU1",190,0)
 . I $P(LA7X,"^",3)="X",STATUS=0 S STATUS=1 Q
"RTN","LA7VHLU1",191,0)
 . I $P(LA7X,"^",3)'="E" Q
"RTN","LA7VHLU1",192,0)
 . S STATUS=2 Q:'ERR
"RTN","LA7VHLU1",193,0)
 . S LA7DT=$P(LA7X,"^",5),LA7DT(0)=LA7DT\1,LA7DT(1)=LA7DT#1
"RTN","LA7VHLU1",194,0)
 . S K="LA7ERR^"_(LA7DT(0)-.1)
"RTN","LA7VHLU1",195,0)
 . F  S K=$O(^XTMP(K)) Q:K=""!($P(K,"^")'="LA7ERR")  D
"RTN","LA7VHLU1",196,0)
 . . I LA7DT(0)=$P(K,"^",2) S I=LA7DT(1)-.00000001
"RTN","LA7VHLU1",197,0)
 . . E  S I=0
"RTN","LA7VHLU1",198,0)
 . . F  S I=$O(^XTMP(K,I)) Q:'I  D
"RTN","LA7VHLU1",199,0)
 . . . S X=^XTMP(K,I)
"RTN","LA7VHLU1",200,0)
 . . . I $P(X,"^",2)=LA7IEN S ERRMSG($P(K,"^",2)_I)=$$DECODEUP^XMCU1($P(X,"^",4))
"RTN","LA7VHLU1",201,0)
 ;
"RTN","LA7VHLU1",202,0)
 Q STATUS
"RTN","LA7VHLU1",203,0)
 ;
"RTN","LA7VHLU1",204,0)
 ;
"RTN","LA7VHLU1",205,0)
LAHSTATP(ERRMSG) ; Print/display error array from LAHSTAT function call.
"RTN","LA7VHLU1",206,0)
 ; Call with ERRMSG = array of error messages (pass by reference)
"RTN","LA7VHLU1",207,0)
 ;
"RTN","LA7VHLU1",208,0)
 N A,LA7IEN,LAJ
"RTN","LA7VHLU1",209,0)
 ;
"RTN","LA7VHLU1",210,0)
 S LA7IEN=0,LAJ=1
"RTN","LA7VHLU1",211,0)
 S A(LAJ)="Errors reported on message(s):",A(LAJ,"F")="!!"
"RTN","LA7VHLU1",212,0)
 F  S LA7IEN=$O(ERRMSG(LA7IEN)) Q:'LA7IEN  S LAJ=LAJ+1,A(LAJ)=$$FMTE^XLFDT(LA7IEN,"1M")_" - "_ERRMSG(LA7IEN),A(LAJ,"F")="!?1"
"RTN","LA7VHLU1",213,0)
 D EN^DDIOL(.A)
"RTN","LA7VHLU1",214,0)
 Q
"RTN","LA7VHLU1",215,0)
 ;
"RTN","LA7VHLU1",216,0)
 ;
"RTN","LA7VHLU1",217,0)
ABFLAGS ;; HL7 Table 0078 Abnormal flags
"RTN","LA7VHLU1",218,0)
 ;;Below low normal;;
"RTN","LA7VHLU1",219,0)
 ;;Above high normal;;
"RTN","LA7VHLU1",220,0)
 ;;Below lower panic limits;;
"RTN","LA7VHLU1",221,0)
 ;;Above upper panic limits;;
"RTN","LA7VHLU1",222,0)
 ;;Below absolute low-off instrument scale;;
"RTN","LA7VHLU1",223,0)
 ;;Above absolute high-off instrument scale;;
"RTN","LA7VHLU1",224,0)
 ;;Normal;;
"RTN","LA7VHLU1",225,0)
 ;;Abnormal;;
"RTN","LA7VHLU1",226,0)
 ;;Very abnormal;;
"RTN","LA7VHLU1",227,0)
 ;;Significant change up;;
"RTN","LA7VHLU1",228,0)
 ;;Significant change down;;
"RTN","LA7VHLU1",229,0)
 ;;Better;;
"RTN","LA7VHLU1",230,0)
 ;;Worse;;
"RTN","LA7VHLU1",231,0)
 ;;Susceptible;;
"RTN","LA7VHLU1",232,0)
 ;;Resistant;;
"RTN","LA7VHLU1",233,0)
 ;;Intermediate;;
"RTN","LA7VHLU1",234,0)
 ;;Moderately susceptible;;
"RTN","LA7VHLU1",235,0)
 ;;Very susceptible;;
"RTN","LA7VHLU2")
0^10^B50000516
"RTN","LA7VHLU2",1,0)
LA7VHLU2 ;DALOI/JMC - HL7 Segment Utility ;July 16, 2008
"RTN","LA7VHLU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU2",3,0)
 ;
"RTN","LA7VHLU2",4,0)
 Q
"RTN","LA7VHLU2",5,0)
 ;
"RTN","LA7VHLU2",6,0)
GETSEG(LA76249,LA7NODE,LA7ARR) ; Returns the next segment from file 62.49
"RTN","LA7VHLU2",7,0)
 ;   during processing of an inbound message. The following variables
"RTN","LA7VHLU2",8,0)
 ;   are used for the processing.
"RTN","LA7VHLU2",9,0)
 ;
"RTN","LA7VHLU2",10,0)
 ; Call with  LA76249 - Entry in 62.49 where message is
"RTN","LA7VHLU2",11,0)
 ;            LA7NODE - Current ien of "150" wp field
"RTN","LA7VHLU2",12,0)
 ;
"RTN","LA7VHLU2",13,0)
 ; Returns     LA7ARR - Data is returned in LA7ARR(0) and
"RTN","LA7VHLU2",14,0)
 ;                      LA7ARR(n) if segment greater than 245 chars.
"RTN","LA7VHLU2",15,0)
 ;             LA7END - flag that end of message has been reached
"RTN","LA7VHLU2",16,0)
 ;
"RTN","LA7VHLU2",17,0)
 N LA7I,LA7END,LA7QUIT
"RTN","LA7VHLU2",18,0)
 K LA7ARR
"RTN","LA7VHLU2",19,0)
 S LA76249=+$G(LA76249),LA7NODE=$G(LA7NODE,0),(LA7END,LA7QUIT)=0
"RTN","LA7VHLU2",20,0)
 ;
"RTN","LA7VHLU2",21,0)
 S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE))
"RTN","LA7VHLU2",22,0)
 I 'LA7NODE S LA7END=1
"RTN","LA7VHLU2",23,0)
 E  D
"RTN","LA7VHLU2",24,0)
 . S LA7ARR(0)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0)),LA7I=0
"RTN","LA7VHLU2",25,0)
 . F  S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE)) Q:'LA7NODE  D  Q:LA7QUIT
"RTN","LA7VHLU2",26,0)
 . . I $G(^LAHM(62.49,LA76249,150,LA7NODE,0))="" S LA7QUIT=1 Q
"RTN","LA7VHLU2",27,0)
 . . S LA7I=LA7I+1,LA7ARR(LA7I)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0))
"RTN","LA7VHLU2",28,0)
 ;
"RTN","LA7VHLU2",29,0)
 Q LA7END
"RTN","LA7VHLU2",30,0)
 ;
"RTN","LA7VHLU2",31,0)
 ;
"RTN","LA7VHLU2",32,0)
FINDSITE(LA7Z,LA7TYPE,LA7SEM) ; Look up an institution in file #4
"RTN","LA7VHLU2",33,0)
 ;
"RTN","LA7VHLU2",34,0)
 ; Call with LA7Z = value to lookup 
"RTN","LA7VHLU2",35,0)
 ;                  VA: "VA"(optional) followed by 3-5 character VA site number
"RTN","LA7VHLU2",36,0)
 ;                  Non-VA uses 3-5 character site assigned identifier
"RTN","LA7VHLU2",37,0)
 ;          LA7TYPE = 1 (host facility)
"RTN","LA7VHLU2",38,0)
 ;                    2 (collection facility)
"RTN","LA7VHLU2",39,0)
 ;
"RTN","LA7VHLU2",40,0)
 ;           LA7SEM = 0 (log error message)
"RTN","LA7VHLU2",41,0)
 ;                    1 (suppress error message)
"RTN","LA7VHLU2",42,0)
 ;
"RTN","LA7VHLU2",43,0)
 ; Returns     LA7Y = ien of entry in INSTITUTION file (#4).
"RTN","LA7VHLU2",44,0)
 ;
"RTN","LA7VHLU2",45,0)
 N LA7X,LA7Y
"RTN","LA7VHLU2",46,0)
 ;
"RTN","LA7VHLU2",47,0)
 S LA7TYPE=$G(LA7TYPE),LA7Z=$G(LA7Z),LA7Y="",LA7SEM=$G(LA7SEM,1)
"RTN","LA7VHLU2",48,0)
 ;
"RTN","LA7VHLU2",49,0)
 ; If VA facility then strip off "VA" before lookup
"RTN","LA7VHLU2",50,0)
 I $E(LA7Z,1,2)="VA" S LA7X=$E(LA7Z,3,$L(LA7Z))
"RTN","LA7VHLU2",51,0)
 E  S LA7X=LA7Z
"RTN","LA7VHLU2",52,0)
 ;
"RTN","LA7VHLU2",53,0)
 ; Lookup in INSTITUTION file (#4)
"RTN","LA7VHLU2",54,0)
 ; If appears to be a VA station number
"RTN","LA7VHLU2",55,0)
 I LA7Z?1(3N,3.4N2U,3N1U1N) S LA7Y=$$IDX^XUAF4("VASTANUM",LA7Z)
"RTN","LA7VHLU2",56,0)
 ; If appears to be a DoD DMIS number
"RTN","LA7VHLU2",57,0)
 I LA7Z?4N S LA7Y=$$IDX^XUAF4("DMIS",LA7Z)
"RTN","LA7VHLU2",58,0)
 ; If appears to be a IHS ASUFAC number
"RTN","LA7VHLU2",59,0)
 I LA7Z?6N S LA7Y=$$IDX^XUAF4("ASUFAC",LA7Z)
"RTN","LA7VHLU2",60,0)
 ; Else try anything
"RTN","LA7VHLU2",61,0)
 I 'LA7Y S LA7Y=$$FIND1^DIC(4,"","OMX",LA7X)
"RTN","LA7VHLU2",62,0)
 ;
"RTN","LA7VHLU2",63,0)
 ; If unable to find in INSTITUTION file (#4) then try looking in
"RTN","LA7VHLU2",64,0)
 ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier.
"RTN","LA7VHLU2",65,0)
 ; Check that entry is not a VA facility
"RTN","LA7VHLU2",66,0)
 I LA7Y'>0,LA7X]"" D
"RTN","LA7VHLU2",67,0)
 . N LA7J,LA7K
"RTN","LA7VHLU2",68,0)
 . S LA7J=0
"RTN","LA7VHLU2",69,0)
 . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D  Q:LA7Y
"RTN","LA7VHLU2",70,0)
 . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))
"RTN","LA7VHLU2",71,0)
 . . I $P(LA7J(0),"^",4)'=1 Q  ; Not active
"RTN","LA7VHLU2",72,0)
 . . I $P(LA7J(0),"^",12)'=LA7X Q
"RTN","LA7VHLU2",73,0)
 . . S LA7K=$S(LA7TYPE=1:$P(LA7J(0),"^",3),LA7TYPE=2:$P(LA7J(0),"^",2),1:"")
"RTN","LA7VHLU2",74,0)
 . . I LA7K,$$NVAF(LA7K) S LA7Y=LA7K
"RTN","LA7VHLU2",75,0)
 ;
"RTN","LA7VHLU2",76,0)
 ; No entry found
"RTN","LA7VHLU2",77,0)
 I 'LA7SEM,LA7Y'>0 D
"RTN","LA7VHLU2",78,0)
 . N LA7SITE
"RTN","LA7VHLU2",79,0)
 . S LA7SITE=$S(LA7TYPE=1:"Host",LA7TYPE=2:"Collection",1:"type")_" site: "_$S(LA7Z]"":LA7Z,1:"Blank-no value")
"RTN","LA7VHLU2",80,0)
 . N LA7X,LA7Y,LA7Z
"RTN","LA7VHLU2",81,0)
 . D CREATE^LA7LOG(25)
"RTN","LA7VHLU2",82,0)
 ;
"RTN","LA7VHLU2",83,0)
 Q LA7Y
"RTN","LA7VHLU2",84,0)
 ;
"RTN","LA7VHLU2",85,0)
 ;
"RTN","LA7VHLU2",86,0)
RETFACID(LA7Z,LA7TYPE,LA7SEM) ; (RET)urn (FAC)ility (ID)entifier
"RTN","LA7VHLU2",87,0)
 ;
"RTN","LA7VHLU2",88,0)
 ; Call with LA7Z = ien of entry in INSTITUTION file (#4).
"RTN","LA7VHLU2",89,0)
 ;
"RTN","LA7VHLU2",90,0)
 ;          LA7TYPE = 1 (host facility)
"RTN","LA7VHLU2",91,0)
 ;                    2 (collecting facility)
"RTN","LA7VHLU2",92,0)
 ;
"RTN","LA7VHLU2",93,0)
 ;           LA7SEM = 0 (log error message)
"RTN","LA7VHLU2",94,0)
 ;                    1 (suppress error message)
"RTN","LA7VHLU2",95,0)
 ;
"RTN","LA7VHLU2",96,0)
 ; Returns     LA7Y = VA site number
"RTN","LA7VHLU2",97,0)
 ;                    non-VA site identifier
"RTN","LA7VHLU2",98,0)
 ;
"RTN","LA7VHLU2",99,0)
 N I,LA7NVAF,LA7X,LA7Y
"RTN","LA7VHLU2",100,0)
 S LA7Y="",LA7SEM=$G(LA7SEM,1)
"RTN","LA7VHLU2",101,0)
 ;
"RTN","LA7VHLU2",102,0)
 ; Check identifiers on file.
"RTN","LA7VHLU2",103,0)
 ; If DoD use DMIS code since some DoD also have VA station number.
"RTN","LA7VHLU2",104,0)
 S LA7NVAF=$$NVAF(LA7Z)
"RTN","LA7VHLU2",105,0)
 I LA7NVAF=0 S LA7Y=$$ID^XUAF4("VASTANUM",LA7Z)
"RTN","LA7VHLU2",106,0)
 I LA7NVAF=1 S LA7Y=$$ID^XUAF4("DMIS",LA7Z)
"RTN","LA7VHLU2",107,0)
 I LA7NVAF=2 S LA7Y=$$ID^XUAF4("ASUFAC",LA7Z)
"RTN","LA7VHLU2",108,0)
 ;
"RTN","LA7VHLU2",109,0)
 ; If unable to find in INSTITUTION file (#4) then try looking in
"RTN","LA7VHLU2",110,0)
 ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier.
"RTN","LA7VHLU2",111,0)
 I LA7Y="" D
"RTN","LA7VHLU2",112,0)
 . N LA7J
"RTN","LA7VHLU2",113,0)
 . S LA7J=0
"RTN","LA7VHLU2",114,0)
 . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D
"RTN","LA7VHLU2",115,0)
 . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))
"RTN","LA7VHLU2",116,0)
 . . I $P(LA7J(0),"^",4)'=1 Q  ; Not active
"RTN","LA7VHLU2",117,0)
 . . I LA7TYPE=1,LA7Z=$P(LA7J(0),"^",3) S LA7Y=$P(LA7J(0),"^",12)
"RTN","LA7VHLU2",118,0)
 . . I LA7TYPE=2,LA7Z=$P(LA7J(0),"^",2) S LA7Y=$P(LA7J(0),"^",12)
"RTN","LA7VHLU2",119,0)
 . I LA7Y'="" S LA7Y=$$UP^XLFSTR(LA7Y)
"RTN","LA7VHLU2",120,0)
 ;
"RTN","LA7VHLU2",121,0)
 ; No entry found
"RTN","LA7VHLU2",122,0)
 I 'LA7SEM,LA7Y="" D
"RTN","LA7VHLU2",123,0)
 . N LA7SITE
"RTN","LA7VHLU2",124,0)
 . S LA7SITE=$S(LA7TYPE=1:"Host",LA7TYPE=2:"Collection",1:"type")_" site: "_$$GET1^DIQ(4,LA7Z_",",.01)
"RTN","LA7VHLU2",125,0)
 . N LA7X,LA7Y
"RTN","LA7VHLU2",126,0)
 . D CREATE^LA7LOG(25)
"RTN","LA7VHLU2",127,0)
 ;
"RTN","LA7VHLU2",128,0)
 Q LA7Y
"RTN","LA7VHLU2",129,0)
 ;
"RTN","LA7VHLU2",130,0)
 ;
"RTN","LA7VHLU2",131,0)
FNDOLOC(LRUID) ; Find ordering location
"RTN","LA7VHLU2",132,0)
 ; Call with LRUID = Accession's UID
"RTN","LA7VHLU2",133,0)
 ; Returns    LA7Y = ordering location^ordering institution
"RTN","LA7VHLU2",134,0)
 ;
"RTN","LA7VHLU2",135,0)
 N LRAA,LRAD,LRAN,LA7X,LA7Y,X,Y
"RTN","LA7VHLU2",136,0)
 ;
"RTN","LA7VHLU2",137,0)
 S LA7Y=""
"RTN","LA7VHLU2",138,0)
 S X=$Q(^LRO(68,"C",LRUID))
"RTN","LA7VHLU2",139,0)
 I $QS(X,3)'=LRUID Q LA7Y
"RTN","LA7VHLU2",140,0)
 S LA7X=$P($G(^LRO(68,$QS(X,4),1,$QS(X,5),1,$QS(X,6),0)),"^",13)
"RTN","LA7VHLU2",141,0)
 I 'LA7X Q LA7Y
"RTN","LA7VHLU2",142,0)
 D GETS^DIQ(44,LA7X_",",".01;3","EI","LA7Y")
"RTN","LA7VHLU2",143,0)
 S LA7Y=LA7X_"^"_LA7Y(44,LA7X_",",.01,"E")_"^"_LA7Y(44,LA7X_",",3,"I")_"^"_LA7Y(44,LA7X_",",3,"E")
"RTN","LA7VHLU2",144,0)
 Q LA7Y
"RTN","LA7VHLU2",145,0)
 ;
"RTN","LA7VHLU2",146,0)
 ;
"RTN","LA7VHLU2",147,0)
CHKICN(LA7X) ; Lookup patient using ICN
"RTN","LA7VHLU2",148,0)
 ; Call with LA7X = patient's ICN
"RTN","LA7VHLU2",149,0)
 ; Returns   LA7Y = patient's DFN^full ICN
"RTN","LA7VHLU2",150,0)
 ;                  -1^error message
"RTN","LA7VHLU2",151,0)
 ;
"RTN","LA7VHLU2",152,0)
 ; Note - until MPI can handle full ICN (number,"V" and checksum) as lookup value
"RTN","LA7VHLU2",153,0)
 ; then confirm if full ICN passed in with full ICN from MPI.
"RTN","LA7VHLU2",154,0)
 ;
"RTN","LA7VHLU2",155,0)
 N LA7Y,LA7Z
"RTN","LA7VHLU2",156,0)
 ;
"RTN","LA7VHLU2",157,0)
 S (LA7Y,LA7Z)=""
"RTN","LA7VHLU2",158,0)
 S LA7X(1)=$P(LA7X,"V")
"RTN","LA7VHLU2",159,0)
 S LA7X(2)=$P(LA7X,"V",2)
"RTN","LA7VHLU2",160,0)
 I LA7X(2)="" S LA7Y=$$GETDFN^MPIF001(LA7X(1))
"RTN","LA7VHLU2",161,0)
 E  D
"RTN","LA7VHLU2",162,0)
 . S LA7Y=$$GETDFN^MPIF001(LA7X(1))
"RTN","LA7VHLU2",163,0)
 . S LA7Z=$$GETICN^MPIF001(LA7Y)
"RTN","LA7VHLU2",164,0)
 . I LA7X'=LA7Z S LA7Y="-1^Not a valid ICN"
"RTN","LA7VHLU2",165,0)
 ;
"RTN","LA7VHLU2",166,0)
 Q LA7Y_"^"_LA7Z
"RTN","LA7VHLU2",167,0)
 ;
"RTN","LA7VHLU2",168,0)
 ;
"RTN","LA7VHLU2",169,0)
NVAF(LA7X) ; Set flag sending to non-VA facility.
"RTN","LA7VHLU2",170,0)
 ; Used to code certain segments for other systems, i.e. CHCS-DOD.
"RTN","LA7VHLU2",171,0)
 ; Call with LA7X = ien of institution in file #4
"RTN","LA7VHLU2",172,0)
 ; Returns   LA7Y = 0 (VA facility)
"RTN","LA7VHLU2",173,0)
 ;                  1 (DoD facility - Army, Navy, Air Force, Coast Guard)
"RTN","LA7VHLU2",174,0)
 ;                  2 (Indian Health Service)
"RTN","LA7VHLU2",175,0)
 ;                  3 (Other - non US Government)
"RTN","LA7VHLU2",176,0)
 ;
"RTN","LA7VHLU2",177,0)
 N LA7Y
"RTN","LA7VHLU2",178,0)
 S LA7Y=""
"RTN","LA7VHLU2",179,0)
 I LA7X S LA7Y=$$GET1^DIQ(4,LA7X_",",95,"I")
"RTN","LA7VHLU2",180,0)
 S LA7Y=$S(LA7Y="N":1,LA7Y="AF":1,LA7Y="ARMY":1,LA7Y="USCG":1,LA7Y="I":2,LA7Y="O":3,1:0)
"RTN","LA7VHLU2",181,0)
 Q LA7Y
"RTN","LA7VHLU2",182,0)
 ;
"RTN","LA7VHLU2",183,0)
 ;
"RTN","LA7VHLU2",184,0)
FACDNS(LA74,LA7FS,LA7ECH,LA7LV) ; Build facility DNS identifier
"RTN","LA7VHLU2",185,0)
 ; Call with LA74 = pointer to entry in INSITUTION file (#4)
"RTN","LA7VHLU2",186,0)
 ;          LA7FS = HL field separator
"RTN","LA7VHLU2",187,0)
 ;         LA7ECH = HL encoding characters
"RTN","LA7VHLU2",188,0)
 ;          LA7LV = field (1)/ component (2) level in message
"RTN","LA7VHLU2",189,0)
 ;
"RTN","LA7VHLU2",190,0)
 ; Returns   LA7Y = STA#~STA-NAME~DNS
"RTN","LA7VHLU2",191,0)
 ;
"RTN","LA7VHLU2",192,0)
 N LA7DN,LA7FAC,LA7NVAF,LA7Y
"RTN","LA7VHLU2",193,0)
 S LA7Y=""
"RTN","LA7VHLU2",194,0)
 ;
"RTN","LA7VHLU2",195,0)
 ; Retrieve saved valued
"RTN","LA7VHLU2",196,0)
 I $D(^TMP($J,"LA7VHLU","INST-DNS",LA74,LA7FS_LA7ECH,LA7LV)) S LA7Y=^TMP($J,"LA7VHLU","INST-DNS",LA74,LA7FS_LA7ECH,LA7LV)
"RTN","LA7VHLU2",197,0)
 ;
"RTN","LA7VHLU2",198,0)
 ; Retrieve station # or DMIS code for VA/DoD facilities, ASUFAC for IHS facilities.
"RTN","LA7VHLU2",199,0)
 ; Others leave blank for now (Jun 2005)
"RTN","LA7VHLU2",200,0)
 ; Retrieve domain name for this institution.
"RTN","LA7VHLU2",201,0)
 ; Build component and save for other parts of message building
"RTN","LA7VHLU2",202,0)
 I LA7Y="" D
"RTN","LA7VHLU2",203,0)
 . S LA7FAC="",LA7NVAF=$$NVAF(LA74)
"RTN","LA7VHLU2",204,0)
 . I LA7NVAF<3 S LA7FAC=$$ID^XUAF4($S(LA7NVAF=1:"DMIS",LA7NVAF=2:"ASUFAC",1:"VASTANUM"),LA74)
"RTN","LA7VHLU2",205,0)
 . S LA7Y=LA7FAC
"RTN","LA7VHLU2",206,0)
 . S LA7DN=$$WHAT^XUAF4(LA74,60)
"RTN","LA7VHLU2",207,0)
 . I LA7DN'="" S LA7DN=$$CHKDATA^LA7VHLU3(LA7DN,LA7FS_LA7ECH),LA7Y=LA7FAC_$S(LA7LV=1:$E(LA7ECH),1:$E(LA7ECH,4))_LA7DN_$S(LA7LV=1:$E(LA7ECH),1:$E(LA7ECH,4))_"DNS"
"RTN","LA7VHLU2",208,0)
 . S ^TMP($J,"LA7VHLU","INST-DNS",LA74,LA7FS_LA7ECH,LA7LV)=LA7Y
"RTN","LA7VHLU2",209,0)
 ;
"RTN","LA7VHLU2",210,0)
 Q LA7Y
"RTN","LA7VHLU2",211,0)
 ;
"RTN","LA7VHLU2",212,0)
 ;
"RTN","LA7VHLU2",213,0)
RESFID(LA7PRDID,LA7SFAC,LA7CS) ; Resolve facility id to file #4 INSTIUTION file entry.
"RTN","LA7VHLU2",214,0)
 ; Call with LA7PRDID = Producer's ID field
"RTN","LA7VHLU2",215,0)
 ;            LA7SFAC = sending facility
"RTN","LA7VHLU2",216,0)
 ;              LA7CS = component encoding character
"RTN","LA7VHLU2",217,0)
 N LA74,LA7I,LA7X,LA7Y
"RTN","LA7VHLU2",218,0)
 ;
"RTN","LA7VHLU2",219,0)
 S LA7X=$P(LA7PRDID,LA7CS,2),LA74=""
"RTN","LA7VHLU2",220,0)
 ;
"RTN","LA7VHLU2",221,0)
 F LA7I=1,4 D  Q:LA74
"RTN","LA7VHLU2",222,0)
 . I $P(LA7PRDID,LA7CS,LA7I+2)="99VA4" S LA74=$$LKUP^XUAF4($P(LA7PRDID,LA7CS,LA7I))
"RTN","LA7VHLU2",223,0)
 . I $P(LA7PRDID,LA7CS,LA7I+2)="DNS" S LA74=$$LKUP^XUAF4($P(LA7PRDID,LA7CS,LA7I))
"RTN","LA7VHLU2",224,0)
 . I $P(LA7PRDID,LA7CS,LA7I+2)?1(1"L-CL",1"CLIA",1"99VACLIA") S LA74=$$IDX^XUAF4("CLIA",$P(LA7PRDID,LA7CS,LA7I))
"RTN","LA7VHLU2",225,0)
 . I 'LA74 S LA74=$$LKUP^XUAF4($P(LA7PRDID,LA7CS,LA7I+1))
"RTN","LA7VHLU2",226,0)
 . I 'LA74 S LA74=$$FINDSITE($P(LA7PRDID,LA7CS,LA7I),1,1)
"RTN","LA7VHLU2",227,0)
 I 'LA74 S LA74=$$FINDSITE($P(LA7SFAC,LA7CS),1,1)
"RTN","LA7VHLU2",228,0)
 ;
"RTN","LA7VHLU2",229,0)
 Q LA74
"RTN","LA7VHLU2",230,0)
 ;
"RTN","LA7VHLU2",231,0)
 ;
"RTN","LA7VHLU2",232,0)
RESPL(LA7X) ; Resolve performing lab from file #63 designation
"RTN","LA7VHLU2",233,0)
 ;
"RTN","LA7VHLU2",234,0)
 ; Call with LA7X = lab data reference (entry in file #63, #.12 multiple)
"RTN","LA7VHLU2",235,0)
 ;
"RTN","LA7VHLU2",236,0)
 ; Returns   LA7Y = file #4 ien of performing lab associated with the result ^ ien of entry in "PL" multiple
"RTN","LA7VHLU2",237,0)
 ;
"RTN","LA7VHLU2",238,0)
 N LA7I,LA7J,LA7K,LA7Z,LA7QUIT,LRDFN
"RTN","LA7VHLU2",239,0)
 S LRDFN=$P(LA7X,","),LA7Y="",LA7Z=LA7X
"RTN","LA7VHLU2",240,0)
 ;
"RTN","LA7VHLU2",241,0)
 ; Found a direct hit on this item
"RTN","LA7VHLU2",242,0)
 D CHKNODE
"RTN","LA7VHLU2",243,0)
 ;
"RTN","LA7VHLU2",244,0)
 ; Walk up tree to find any performing lab at a higher level
"RTN","LA7VHLU2",245,0)
 I LA7Y="" D
"RTN","LA7VHLU2",246,0)
 . S LA7QUIT=0
"RTN","LA7VHLU2",247,0)
 . I $P(LA7X,",",2)'="CH" D CHCHK Q
"RTN","LA7VHLU2",248,0)
 . I $P(LA7X,",",2)?1(1"MI",1"SP",1"CY",1"EM",1"AU") D MIAPCHK Q
"RTN","LA7VHLU2",249,0)
 ;
"RTN","LA7VHLU2",250,0)
 Q LA7Y
"RTN","LA7VHLU2",251,0)
 ;
"RTN","LA7VHLU2",252,0)
 ;
"RTN","LA7VHLU2",253,0)
CHCHK ; Find performing lab for a CH subscript reference
"RTN","LA7VHLU2",254,0)
 ;
"RTN","LA7VHLU2",255,0)
 S LA7Z=$P(LA7X,";") D CHKNODE
"RTN","LA7VHLU2",256,0)
 ;
"RTN","LA7VHLU2",257,0)
 Q
"RTN","LA7VHLU2",258,0)
 ;
"RTN","LA7VHLU2",259,0)
 ;
"RTN","LA7VHLU2",260,0)
MIAPCHK ; Find performing lab for a MI and AP subscript reference
"RTN","LA7VHLU2",261,0)
 ;
"RTN","LA7VHLU2",262,0)
 I $P(LA7X,";",2)'="" S LA7Z=$P(LA7X,";")
"RTN","LA7VHLU2",263,0)
 ;
"RTN","LA7VHLU2",264,0)
 S LA7J=$L(LA7Z,",")
"RTN","LA7VHLU2",265,0)
 F LA7K=LA7J:-1:4 D  Q:LA7Y
"RTN","LA7VHLU2",266,0)
 . S LA7Z=$P(LA7Z,",",1,LA7K)
"RTN","LA7VHLU2",267,0)
 . D CHKNODE Q:LA7Y
"RTN","LA7VHLU2",268,0)
 . I $P(LA7Z,",",LA7K)>0 S $P(LA7Z,",",LA7K)=0 D CHKNODE
"RTN","LA7VHLU2",269,0)
 ;
"RTN","LA7VHLU2",270,0)
 I LA7Y="",$P(LA7X,",",2)="MI",$P(LA7X,",",4)=99 F I=1,5,8,11,16 S $P(LA7Z,",",4)=I D CHKNODE Q:LA7Y
"RTN","LA7VHLU2",271,0)
 ;
"RTN","LA7VHLU2",272,0)
 Q
"RTN","LA7VHLU2",273,0)
 ;
"RTN","LA7VHLU2",274,0)
 ;
"RTN","LA7VHLU2",275,0)
CHKNODE ; Check if node exists and return file #4 ien
"RTN","LA7VHLU2",276,0)
 ;
"RTN","LA7VHLU2",277,0)
 S LA7I=$O(^LR(LRDFN,"PL","B",LA7Z,0))
"RTN","LA7VHLU2",278,0)
 I LA7I S LA7Y=$P(^LR(LRDFN,"PL",LA7I,0),"^",2)_"^"_LA7I
"RTN","LA7VHLU2",279,0)
 Q
"RTN","LA7VHLU3")
0^40^B56049965
"RTN","LA7VHLU3",1,0)
LA7VHLU3 ;DALOI/JMC - HL7 Segment Utility ;Feb 13, 2009
"RTN","LA7VHLU3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU3",3,0)
 ;
"RTN","LA7VHLU3",4,0)
 Q
"RTN","LA7VHLU3",5,0)
 ;
"RTN","LA7VHLU3",6,0)
NTE(LA7ARRAY,LA7TXT,LA7TYP,LA7FS,LA7ECH,LA7NTESN,LA7CMTYP,LA7FMT) ; Build NTE segment -  notes and comments
"RTN","LA7VHLU3",7,0)
 ; Call with LA7ARRAY = array to return NTE segment, pass by reference
"RTN","LA7VHLU3",8,0)
 ;             LA7TXT = text to send (by value if format=0, by reference if format>0)
"RTN","LA7VHLU3",9,0)
 ;             LA7TYP = source of comment - HL table 0105 Default to L (ancilliary/filler)
"RTN","LA7VHLU3",10,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU3",11,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU3",12,0)
 ;           LA7NTESN = segment SET ID (pass by reference)
"RTN","LA7VHLU3",13,0)
 ;           LA7CMTYP = comment type code (HL table 0364)
"RTN","LA7VHLU3",14,0)
 ;             LA7FMT = format of text (0=single, 1=multi-line formatted text, 2=multi-line repetition)
"RTN","LA7VHLU3",15,0)
 ;
"RTN","LA7VHLU3",16,0)
 N LA7CTYPE,LA7NTE,LA7TEXT
"RTN","LA7VHLU3",17,0)
 ;
"RTN","LA7VHLU3",18,0)
 S LA7FS=$G(LA7FS),LA7TXT=$G(LA7TXT),(LA7CTYPE,LA7TEXT)="",LA7FMT=$G(LA7FMT)
"RTN","LA7VHLU3",19,0)
 ;
"RTN","LA7VHLU3",20,0)
 ; Remove leading "~" from comments and escape encode text
"RTN","LA7VHLU3",21,0)
 I 'LA7FMT D
"RTN","LA7VHLU3",22,0)
 . I $E(LA7TXT,1)="~" S LA7TXT=$$TRIM^XLFSTR(LA7TXT,"L","~")
"RTN","LA7VHLU3",23,0)
 . S LA7TXT=$$TRIM^XLFSTR(LA7TXT,"R"," ")
"RTN","LA7VHLU3",24,0)
 . S LA7TEXT=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)
"RTN","LA7VHLU3",25,0)
 ;
"RTN","LA7VHLU3",26,0)
 I LA7FMT>0 D
"RTN","LA7VHLU3",27,0)
 . N LA7I,LA7J
"RTN","LA7VHLU3",28,0)
 . S (LA7I,LA7J)=0
"RTN","LA7VHLU3",29,0)
 . F  S LA7I=$O(LA7TXT(LA7I)) Q:'LA7I  D
"RTN","LA7VHLU3",30,0)
 . . S LA7J=LA7J+1
"RTN","LA7VHLU3",31,0)
 . . I $E(LA7TXT(LA7I),1)="~" S LA7TXT(LA7I)=$$TRIM^XLFSTR(LA7TXT(LA7I),"L","~")
"RTN","LA7VHLU3",32,0)
 . . S LA7TXT(LA7I)=$$TRIM^XLFSTR(LA7TXT(LA7I),"R"," ")
"RTN","LA7VHLU3",33,0)
 . . S LA7TXT(LA7I)=$$CHKDATA^LA7VHLU3(LA7TXT(LA7I),LA7FS_LA7ECH)
"RTN","LA7VHLU3",34,0)
 . . I LA7FMT=1 S LA7TEXT(LA7I)=LA7TEXT_$S(LA7J>1:$E(LA7ECH,3)_".br"_$E(LA7ECH,3),1:"")_LA7TXT(LA7I) Q
"RTN","LA7VHLU3",35,0)
 . . I LA7FMT=2 S LA7TEXT(LA7I)=LA7TEXT_$S(LA7J>1:$E(LA7ECH,2),1:"")_LA7TXT(LA7I) Q
"RTN","LA7VHLU3",36,0)
 ;
"RTN","LA7VHLU3",37,0)
 ; Update segment SET ID
"RTN","LA7VHLU3",38,0)
 S LA7NTESN=$G(LA7NTESN)+1
"RTN","LA7VHLU3",39,0)
 ;
"RTN","LA7VHLU3",40,0)
 ; Default source of comment if undefined
"RTN","LA7VHLU3",41,0)
 I $G(LA7TYP)="" S LA7TYP="L"
"RTN","LA7VHLU3",42,0)
 ;
"RTN","LA7VHLU3",43,0)
 ; Encode HL7 table 0364 with comment type
"RTN","LA7VHLU3",44,0)
 ; If no type passed then default to REmark
"RTN","LA7VHLU3",45,0)
 ; If 'code' not found in table then send 'code' in text (2nd component).
"RTN","LA7VHLU3",46,0)
 I $G(LA7CMTYP)="" S LA7CMTYP="RE"
"RTN","LA7VHLU3",47,0)
 I '$D(^TMP($J,"HL70364")) D HL70364
"RTN","LA7VHLU3",48,0)
 S LA7X=$G(^TMP($J,"HL70364",LA7CMTYP))
"RTN","LA7VHLU3",49,0)
 I LA7X="" S $P(LA7CTYPE,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7CMTYP,LA7FS_LA7ECH)
"RTN","LA7VHLU3",50,0)
 E  D
"RTN","LA7VHLU3",51,0)
 . S LA7CTYPE=LA7CMTYP
"RTN","LA7VHLU3",52,0)
 . S $P(LA7CTYPE,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VHLU3",53,0)
 . S $P(LA7CTYPE,$E(LA7ECH,1),3)="HL70364"
"RTN","LA7VHLU3",54,0)
 ;
"RTN","LA7VHLU3",55,0)
 S LA7NTE(0)="NTE"
"RTN","LA7VHLU3",56,0)
 S LA7NTE(1)=LA7NTESN
"RTN","LA7VHLU3",57,0)
 S LA7NTE(2)=LA7TYP
"RTN","LA7VHLU3",58,0)
 M LA7NTE(3)=LA7TEXT
"RTN","LA7VHLU3",59,0)
 S LA7NTE(4)=LA7CTYPE
"RTN","LA7VHLU3",60,0)
 ;
"RTN","LA7VHLU3",61,0)
 D BUILDSEG^LA7VHLU(.LA7NTE,.LA7ARRAY,LA7FS)
"RTN","LA7VHLU3",62,0)
 ;
"RTN","LA7VHLU3",63,0)
 Q
"RTN","LA7VHLU3",64,0)
 ;
"RTN","LA7VHLU3",65,0)
 ;
"RTN","LA7VHLU3",66,0)
CHKDATA(LA7IN,LA7CH) ; Check data to be built into an HL7 field for characters that
"RTN","LA7VHLU3",67,0)
 ; conflict with encoding characters. Convert conflicting character using HL7 escape encoding.
"RTN","LA7VHLU3",68,0)
 ;
"RTN","LA7VHLU3",69,0)
 ; Call with LA7IN = data to be checked
"RTN","LA7VHLU3",70,0)
 ;           LA7CH = HL7 delimiters to check for
"RTN","LA7VHLU3",71,0)
 ;
"RTN","LA7VHLU3",72,0)
 ; Returns LA7OUT - checked data, converted if appropriate
"RTN","LA7VHLU3",73,0)
 ;
"RTN","LA7VHLU3",74,0)
 N J,LA7ESC,LA7LEN,LA7OUT,X
"RTN","LA7VHLU3",75,0)
 ;
"RTN","LA7VHLU3",76,0)
 S LA7IN=$G(LA7IN),LA7CH=$G(LA7CH),LA7OUT=""
"RTN","LA7VHLU3",77,0)
 ;
"RTN","LA7VHLU3",78,0)
 I LA7IN=""!(LA7CH="") Q LA7OUT
"RTN","LA7VHLU3",79,0)
 ;
"RTN","LA7VHLU3",80,0)
 ; Build array of encoding characters to check
"RTN","LA7VHLU3",81,0)
 S LA7LEN=$L(LA7CH),LA7ESC=$E(LA7CH,4)
"RTN","LA7VHLU3",82,0)
 F J=1:1:LA7LEN S LA7CH($E(LA7CH,J))=$E("FSRET",J)
"RTN","LA7VHLU3",83,0)
 ;
"RTN","LA7VHLU3",84,0)
 ; Check each character and convert if appropriate
"RTN","LA7VHLU3",85,0)
 F J=1:1:$L(LA7IN) D
"RTN","LA7VHLU3",86,0)
 . S X=$E(LA7IN,J)
"RTN","LA7VHLU3",87,0)
 . I $D(LA7CH(X)) S X=LA7ESC_LA7CH(X)_LA7ESC
"RTN","LA7VHLU3",88,0)
 . S LA7OUT=LA7OUT_X
"RTN","LA7VHLU3",89,0)
 ;
"RTN","LA7VHLU3",90,0)
 Q LA7OUT
"RTN","LA7VHLU3",91,0)
 ;
"RTN","LA7VHLU3",92,0)
 ;
"RTN","LA7VHLU3",93,0)
CNVFLD(LA7IN,LA7ECH1,LA7ECH2) ; Convert an encoded HL7 segment/field from one encoding scheme to another
"RTN","LA7VHLU3",94,0)
 ; Call with   LA7IN = data to be converted
"RTN","LA7VHLU3",95,0)
 ;           LA7ECH1 = delimiters of input
"RTN","LA7VHLU3",96,0)
 ;           LA7ECH2 = delimiters of output
"RTN","LA7VHLU3",97,0)
 ;
"RTN","LA7VHLU3",98,0)
 ; Returns    LA7OUT = segment/field converted to new encoding scheme
"RTN","LA7VHLU3",99,0)
 ;
"RTN","LA7VHLU3",100,0)
 N J,LA7ECH,LA7ESC,LA7OUT,X
"RTN","LA7VHLU3",101,0)
 ;
"RTN","LA7VHLU3",102,0)
 S LA7IN=$G(LA7IN),LA7ECH1=$G(LA7ECH1),LA7ECH2=$G(LA7ECH2),LA7OUT=""
"RTN","LA7VHLU3",103,0)
 ;
"RTN","LA7VHLU3",104,0)
 I LA7IN=""!(LA7ECH1="")!(LA7ECH2="") Q LA7OUT
"RTN","LA7VHLU3",105,0)
 ;
"RTN","LA7VHLU3",106,0)
 ; Abort if input encoding length greater than output
"RTN","LA7VHLU3",107,0)
 I $L(LA7ECH1)>$L(LA7ECH2) Q LA7OUT
"RTN","LA7VHLU3",108,0)
 ;
"RTN","LA7VHLU3",109,0)
 ; If same then return input as output
"RTN","LA7VHLU3",110,0)
 I LA7ECH1=LA7ECH2 Q LA7IN
"RTN","LA7VHLU3",111,0)
 ;
"RTN","LA7VHLU3",112,0)
 S LA7ESC=$E(LA7ECH2,4)
"RTN","LA7VHLU3",113,0)
 ;
"RTN","LA7VHLU3",114,0)
 ; Build array to convert source encoding to target encoding
"RTN","LA7VHLU3",115,0)
 F J=1:1:$L(LA7ECH1) S LA7ECH($E(LA7ECH1,J))=$E(LA7ECH2,J)
"RTN","LA7VHLU3",116,0)
 ;
"RTN","LA7VHLU3",117,0)
 ; Check each character and convert if appropriate
"RTN","LA7VHLU3",118,0)
 ; If source conflicts with target encoding character then convert to escape encoding
"RTN","LA7VHLU3",119,0)
 ; If match on source encoding character - convert to new encoding
"RTN","LA7VHLU3",120,0)
 F J=1:1:$L(LA7IN) D
"RTN","LA7VHLU3",121,0)
 . S X=$E(LA7IN,J)
"RTN","LA7VHLU3",122,0)
 . I '$D(LA7ECH(X)),LA7ECH2[X S X=LA7ESC_$E("FSRET",($F(LA7ECH2,X)-1))_LA7ESC
"RTN","LA7VHLU3",123,0)
 . I $D(LA7ECH(X)) S X=LA7ECH(X)
"RTN","LA7VHLU3",124,0)
 . S LA7OUT=LA7OUT_X
"RTN","LA7VHLU3",125,0)
 ;
"RTN","LA7VHLU3",126,0)
 Q LA7OUT
"RTN","LA7VHLU3",127,0)
 ;
"RTN","LA7VHLU3",128,0)
 ;
"RTN","LA7VHLU3",129,0)
UNESC(LA7X,LA7CH) ; Unescape data using HL7 escape encoding
"RTN","LA7VHLU3",130,0)
 ; Call with  LA7X = string to decode
"RTN","LA7VHLU3",131,0)
 ;           LA7CH = HL7 delimiters (both field separator & encoding characters)
"RTN","LA7VHLU3",132,0)
 ;
"RTN","LA7VHLU3",133,0)
 ; Returns string of unencoded data.
"RTN","LA7VHLU3",134,0)
 ;
"RTN","LA7VHLU3",135,0)
 N J,LA7ESC
"RTN","LA7VHLU3",136,0)
 ;
"RTN","LA7VHLU3",137,0)
 ; If data does not contain escape encoding then return input string as output
"RTN","LA7VHLU3",138,0)
 S LA7ESC=$E(LA7CH,4)
"RTN","LA7VHLU3",139,0)
 I LA7X'[LA7ESC Q LA7X
"RTN","LA7VHLU3",140,0)
 ;
"RTN","LA7VHLU3",141,0)
 ; Build array of encoding characters to replace
"RTN","LA7VHLU3",142,0)
 F J=1:1:$L(LA7CH) S LA7CH(LA7ESC_$E("FSRET",J)_LA7ESC)=$E(LA7CH,J)
"RTN","LA7VHLU3",143,0)
 ;
"RTN","LA7VHLU3",144,0)
 Q $$REPLACE^XLFSTR(LA7X,.LA7CH)
"RTN","LA7VHLU3",145,0)
 ;
"RTN","LA7VHLU3",146,0)
 ;
"RTN","LA7VHLU3",147,0)
UNESCFT(LA7X,LA7CH,LA7Y) ; Unescape formatted text data using HL7 escape encoding
"RTN","LA7VHLU3",148,0)
 ; Call with  LA7X = array to decode (pass by reference)
"RTN","LA7VHLU3",149,0)
 ;           LA7CH = HL7 delimiters (both field separator & encoding characters)
"RTN","LA7VHLU3",150,0)
 ;
"RTN","LA7VHLU3",151,0)
 ; Returns    LA7Y =  array of unencoded data.
"RTN","LA7VHLU3",152,0)
 ;
"RTN","LA7VHLU3",153,0)
 N J,K,LA7ESC,LA7I,LA7Z,SAVX,SAVY,Z
"RTN","LA7VHLU3",154,0)
 ;
"RTN","LA7VHLU3",155,0)
 S J=0,LA7ESC=$E(LA7CH,$L(LA7CH)-1),(LA7I,SAVX,SAVY)=""
"RTN","LA7VHLU3",156,0)
 F  S LA7I=$O(LA7X(LA7I)) Q:LA7I=""  D
"RTN","LA7VHLU3",157,0)
 . S J=J+1
"RTN","LA7VHLU3",158,0)
 . I LA7X(LA7I)'[LA7ESC,SAVY="" S LA7Y(J,0)=LA7X(LA7I) Q
"RTN","LA7VHLU3",159,0)
 . F K=1:1:$L(LA7X(LA7I)) D
"RTN","LA7VHLU3",160,0)
 . . S Z=$E(LA7X(LA7I),K)
"RTN","LA7VHLU3",161,0)
 . . I Z=LA7ESC D  Q
"RTN","LA7VHLU3",162,0)
 . . . I SAVY="" S SAVY=Z Q
"RTN","LA7VHLU3",163,0)
 . . . S SAVY=SAVY_Z
"RTN","LA7VHLU3",164,0)
 . . . I $P(SAVY,LA7ESC,2)=".br" S LA7Y(J,0)=$S(SAVX]"":SAVX,1:" "),SAVX="",J=J+1
"RTN","LA7VHLU3",165,0)
 . . . I $E(SAVY,2)'="." S SAVX=SAVX_$$UNESC(SAVY,LA7CH)
"RTN","LA7VHLU3",166,0)
 . . . S SAVY=""
"RTN","LA7VHLU3",167,0)
 . . I SAVY]"" S SAVY=SAVY_Z Q
"RTN","LA7VHLU3",168,0)
 . . S SAVX=SAVX_Z
"RTN","LA7VHLU3",169,0)
 . S LA7Y(J,0)=SAVX,SAVX=""
"RTN","LA7VHLU3",170,0)
 S LA7Y=J
"RTN","LA7VHLU3",171,0)
 ;
"RTN","LA7VHLU3",172,0)
 Q
"RTN","LA7VHLU3",173,0)
 ;
"RTN","LA7VHLU3",174,0)
 ;
"RTN","LA7VHLU3",175,0)
HL70364 ; Build HL7 table 0364 - Comment Type
"RTN","LA7VHLU3",176,0)
 ;
"RTN","LA7VHLU3",177,0)
 S ^TMP($J,"HL70364","PI")="Patient Instructions"
"RTN","LA7VHLU3",178,0)
 S ^TMP($J,"HL70364","AI")="Ancillary Instructions"
"RTN","LA7VHLU3",179,0)
 S ^TMP($J,"HL70364","GI")="General Instructions"
"RTN","LA7VHLU3",180,0)
 S ^TMP($J,"HL70364","1R")="Primary Reason"
"RTN","LA7VHLU3",181,0)
 S ^TMP($J,"HL70364","2R")="Secondary Reason"
"RTN","LA7VHLU3",182,0)
 S ^TMP($J,"HL70364","GR")="General Reason"
"RTN","LA7VHLU3",183,0)
 S ^TMP($J,"HL70364","RE")="Remark"
"RTN","LA7VHLU3",184,0)
 S ^TMP($J,"HL70364","DR")="Duplicate/Interaction Reason"
"RTN","LA7VHLU3",185,0)
 S ^TMP($J,"HL70364","VA-LR001")="Order Comment"
"RTN","LA7VHLU3",186,0)
 S ^TMP($J,"HL70364","VA-LR002")="Result Comment"
"RTN","LA7VHLU3",187,0)
 S ^TMP($J,"HL70364","VA-LR003")="Result Interpretation"
"RTN","LA7VHLU3",188,0)
 S ^TMP($J,"HL70364","VA-LRMI001")="Comment on Specimen (#.99)"
"RTN","LA7VHLU3",189,0)
 S ^TMP($J,"HL70364","VA-LRMI010")="Bact Rpt Remark (#13)"
"RTN","LA7VHLU3",190,0)
 S ^TMP($J,"HL70364","VA-LRMI011")="Preliminary Bact Comment (#1)"
"RTN","LA7VHLU3",191,0)
 S ^TMP($J,"HL70364","VA-LRMI012")="Bacteriology Test(s) (#1.5)"
"RTN","LA7VHLU3",192,0)
 S ^TMP($J,"HL70364","VA-LRMI013")="Bacteriology Smear/Prep (#11.7)"
"RTN","LA7VHLU3",193,0)
 S ^TMP($J,"HL70364","VA-LRMI020")="Parasite Rpt Remark (#17)"
"RTN","LA7VHLU3",194,0)
 S ^TMP($J,"HL70364","VA-LRMI021")="Preliminary Parasite Comment (#16.5)"
"RTN","LA7VHLU3",195,0)
 S ^TMP($J,"HL70364","VA-LRMI022")="Parasite Test(s) (16.4)"
"RTN","LA7VHLU3",196,0)
 S ^TMP($J,"HL70364","VA-LRMI023")="Parasitology Smear/Prep (#15.51)"
"RTN","LA7VHLU3",197,0)
 S ^TMP($J,"HL70364","VA-LRMI030")="Mycology RPT Remark (#21)"
"RTN","LA7VHLU3",198,0)
 S ^TMP($J,"HL70364","VA-LRMI031")="Preliminary Mycology Comment (#20.5)"
"RTN","LA7VHLU3",199,0)
 S ^TMP($J,"HL70364","VA-LRMI032")="Mycology Test(s) (#20.4)"
"RTN","LA7VHLU3",200,0)
 S ^TMP($J,"HL70364","VA-LRMI033")="Mycology Smear/Prep (#19.6)"
"RTN","LA7VHLU3",201,0)
 S ^TMP($J,"HL70364","VA-LRMI040")="TB Rpt Remark (#27)"
"RTN","LA7VHLU3",202,0)
 S ^TMP($J,"HL70364","VA-LRMI041")="Preliminary TB Comment (#26.5)"
"RTN","LA7VHLU3",203,0)
 S ^TMP($J,"HL70364","VA-LRMI042")="TB Test(s) (#26.4)"
"RTN","LA7VHLU3",204,0)
 S ^TMP($J,"HL70364","VA-LRMI050")="Virology Rpt Remark (#37)"
"RTN","LA7VHLU3",205,0)
 S ^TMP($J,"HL70364","VA-LRMI051")="Preliminary Virology Comment (#36.5)"
"RTN","LA7VHLU3",206,0)
 S ^TMP($J,"HL70364","VA-LRMI052")="Virology Test (#36.4)"
"RTN","LA7VHLU3",207,0)
 Q
"RTN","LA7VHLU3",208,0)
 ;
"RTN","LA7VHLU3",209,0)
 ;
"RTN","LA7VHLU3",210,0)
PCENC(LRDFN,LRSS,LRIDT) ; Find PCE encounter for an entry in file #63
"RTN","LA7VHLU3",211,0)
 ;
"RTN","LA7VHLU3",212,0)
 ; Call with LRDFN = entry in file #63
"RTN","LA7VHLU3",213,0)
 ;            LRSS = file #63 subscript
"RTN","LA7VHLU3",214,0)
 ;           LRIDT = inverse date/time of specimen in file #63
"RTN","LA7VHLU3",215,0)
 ;
"RTN","LA7VHLU3",216,0)
 ; Returns   LA7ENC = related PCE encounter
"RTN","LA7VHLU3",217,0)
 ;
"RTN","LA7VHLU3",218,0)
 N LA7ENC,LA7UID,LA7X,LA7Y,LRODT,LRSN
"RTN","LA7VHLU3",219,0)
 S LA7ENC="",LA7UID=$P($G(^LR(LRDFN,LRSS,LRIDT,"ORU")),"^")
"RTN","LA7VHLU3",220,0)
 I LA7UID'="" D
"RTN","LA7VHLU3",221,0)
 . S LA7X=$$CHECKUID^LRWU4(LA7UID)
"RTN","LA7VHLU3",222,0)
 . I 'LA7X Q
"RTN","LA7VHLU3",223,0)
 . S LA7Y=$G(^LRO(68,$P(LA7X,"^",2),1,$P(LA7X,"^",3),1,$P(LA7X,"^",4),0))
"RTN","LA7VHLU3",224,0)
 . S LRODT=+$P(LA7Y,"^",4),LRSN=+$P(LA7Y,"^",5)
"RTN","LA7VHLU3",225,0)
 . I $P(LA7Y,"^",2)=2,LRODT,LRSN S LA7ENC=$G(^LRO(69,LRODT,1,LRSN,"PCE"))
"RTN","LA7VHLU3",226,0)
 ;
"RTN","LA7VHLU3",227,0)
 Q LA7ENC
"RTN","LA7VHLU3",228,0)
 ;
"RTN","LA7VHLU3",229,0)
 ;
"RTN","LA7VHLU3",230,0)
SDENC(LA7PCE) ; Find SD Outpatient Encounter for an entry in file #63
"RTN","LA7VHLU3",231,0)
 ;
"RTN","LA7VHLU3",232,0)
 ; Call with LA7PCE = PCE encounters from file #69
"RTN","LA7VHLU3",233,0)
 ;
"RTN","LA7VHLU3",234,0)
 ; Returns   LA7ENC = related SD encounter
"RTN","LA7VHLU3",235,0)
 ;
"RTN","LA7VHLU3",236,0)
 N LA7ENC,LA7X,LA7Y,LA7Z
"RTN","LA7VHLU3",237,0)
 ;
"RTN","LA7VHLU3",238,0)
 S LA7ENC=""
"RTN","LA7VHLU3",239,0)
 F LA7I=1:1 S LA7X=$P(LA7PCE,";",LA7I) Q:LA7X=""  D  Q:LA7ENC'=""
"RTN","LA7VHLU3",240,0)
 . K LA7Y
"RTN","LA7VHLU3",241,0)
 . D LISTVST^SDOERPC(.LA7Y,LA7X)
"RTN","LA7VHLU3",242,0)
 . S LA7Z=$Q(@LA7Y)
"RTN","LA7VHLU3",243,0)
 . I $QS(LA7Z,1)="SD ENCOUNTER LIST",$QS(LA7Z,2)=$J S LA7ENC=$QS(LA7Z,3)
"RTN","LA7VHLU3",244,0)
 . K @LA7Y
"RTN","LA7VHLU3",245,0)
 ;
"RTN","LA7VHLU3",246,0)
 Q LA7ENC
"RTN","LA7VHLU4")
0^11^B27335749
"RTN","LA7VHLU4",1,0)
LA7VHLU4 ;DALOI/JMC - HL7 segment builder utility ;03/15/11  12:28
"RTN","LA7VHLU4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU4",3,0)
 ;
"RTN","LA7VHLU4",4,0)
 ;
"RTN","LA7VHLU4",5,0)
INST(LA74,LA7FS,LA7ECH) ; Build institution field
"RTN","LA7VHLU4",6,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VHLU4",7,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VHLU4",8,0)
 ;            LA7FS = HL field separator
"RTN","LA7VHLU4",9,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VHLU4",10,0)
 ;
"RTN","LA7VHLU4",11,0)
 ; Returns facility that performed the testing (ID^text^99VA4)
"RTN","LA7VHLU4",12,0)
 ;
"RTN","LA7VHLU4",13,0)
 N LA7NVAF,LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",14,0)
 ;
"RTN","LA7VHLU4",15,0)
 S LA74=$G(LA74),LA7ECH=$G(LA7ECH),LA7Y=""
"RTN","LA7VHLU4",16,0)
 ;
"RTN","LA7VHLU4",17,0)
 ; If no institution, use Kernel Site default
"RTN","LA7VHLU4",18,0)
 I LA74="" S LA74=+$$KSP^XUPARAM("INST")
"RTN","LA7VHLU4",19,0)
 ;
"RTN","LA7VHLU4",20,0)
 ; Check if this field has been built previously for this institution
"RTN","LA7VHLU4",21,0)
 I LA74'="",$D(^TMP($J,"LA7VHLU","99VA4",LA74,LA7FS_LA7ECH)) S LA7Y=^TMP($J,"LA7VHLU","99VA4",LA74,LA7FS_LA7ECH)
"RTN","LA7VHLU4",22,0)
 ;
"RTN","LA7VHLU4",23,0)
 ; Value passed not a pointer - only build 2nd component
"RTN","LA7VHLU4",24,0)
 I LA7Y="",LA74'="",LA74'=+LA74 D
"RTN","LA7VHLU4",25,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA74,LA7FS_LA7ECH)
"RTN","LA7VHLU4",26,0)
 ;
"RTN","LA7VHLU4",27,0)
 I LA7Y="",LA74>0,LA74=+LA74 D
"RTN","LA7VHLU4",28,0)
 . S LA7NVAF=$$NVAF^LA7VHLU2(LA74)
"RTN","LA7VHLU4",29,0)
 . ; Build id - VA station #/DMIS code/IHS ASUFAC
"RTN","LA7VHLU4",30,0)
 . I LA7NVAF<3 S LA7Y=$$ID^XUAF4($S(LA7NVAF=1:"DMIS",LA7NVAF=2:"ASUFAC",1:"VASTANUM"),LA74)
"RTN","LA7VHLU4",31,0)
 . ; Build name using field #100, otherwise #.01
"RTN","LA7VHLU4",32,0)
 . S LA7Z=$$NAME^XUAF4(LA74)
"RTN","LA7VHLU4",33,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VHLU4",34,0)
 . ;
"RTN","LA7VHLU4",35,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)="99VA4"
"RTN","LA7VHLU4",36,0)
 ;
"RTN","LA7VHLU4",37,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU4",38,0)
 S ^TMP($J,"LA7VHLU","99VA4",LA74,LA7FS_LA7ECH)=LA7Y
"RTN","LA7VHLU4",39,0)
 ;
"RTN","LA7VHLU4",40,0)
 Q LA7Y
"RTN","LA7VHLU4",41,0)
 ;
"RTN","LA7VHLU4",42,0)
 ;
"RTN","LA7VHLU4",43,0)
XAD(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH) ; Build extended address
"RTN","LA7VHLU4",44,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VHLU4",45,0)
 ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)
"RTN","LA7VHLU4",46,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU4",47,0)
 ;           LA7DT = As of date in FileMan format
"RTN","LA7VHLU4",48,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",49,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU4",50,0)
 ;
"RTN","LA7VHLU4",51,0)
 ; Returns extended address
"RTN","LA7VHLU4",52,0)
 ;
"RTN","LA7VHLU4",53,0)
 N I,LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",54,0)
 S LA7Y=""
"RTN","LA7VHLU4",55,0)
 ; Check if this field has been built previously for this institution
"RTN","LA7VHLU4",56,0)
 I LA7FN,LA7DA,$D(^TMP($J,"LA7VHLU","99VA4A",LA7FN,LA7DA,LA7FS_LA7ECH)) S LA7Y=^TMP($J,"LA7VHLU","99VA4A",LA7FN,LA7DA,LA7FS_LA7ECH)
"RTN","LA7VHLU4",57,0)
 ;
"RTN","LA7VHLU4",58,0)
 ; Build from file #2
"RTN","LA7VHLU4",59,0)
 I LA7Y="",LA7FN=2,LA7DA D
"RTN","LA7VHLU4",60,0)
 . N DFN,VAHOW,VAPA,VAERR,VAROOT,VATEST
"RTN","LA7VHLU4",61,0)
 . S DFN=LA7DA
"RTN","LA7VHLU4",62,0)
 . I LA7DT S (VATEST("ADD",9),VATEST("ADD",10))=LA7DT
"RTN","LA7VHLU4",63,0)
 . D ADD^VADPT
"RTN","LA7VHLU4",64,0)
 . I VAERR Q
"RTN","LA7VHLU4",65,0)
 . S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(VAPA(1),LA7FS_LA7ECH)
"RTN","LA7VHLU4",66,0)
 . S $P(LA7Y,$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3(VAPA(2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",67,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$$CHKDATA^LA7VHLU3(VAPA(4),LA7FS_LA7ECH)
"RTN","LA7VHLU4",68,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$$CHKDATA^LA7VHLU3($P(VAPA(5),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",69,0)
 . S $P(LA7Y,$E(LA7ECH),5)=$$CHKDATA^LA7VHLU3(VAPA(11),LA7FS_LA7ECH)
"RTN","LA7VHLU4",70,0)
 . I VAPA(9) S $P(LA7Y,$E(LA7ECH),7)="C"
"RTN","LA7VHLU4",71,0)
 . E  S $P(LA7Y,$E(LA7ECH),7)="P"
"RTN","LA7VHLU4",72,0)
 . S $P(LA7Y,$E(LA7ECH),9)=$$CHKDATA^LA7VHLU3($P(VAPA(7),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",73,0)
 ;
"RTN","LA7VHLU4",74,0)
 ; Get address info from file #4, add 2nd address line
"RTN","LA7VHLU4",75,0)
 ;  change state to pointer to file #5
"RTN","LA7VHLU4",76,0)
 I LA7Y="",LA7FN=4,LA7DA D
"RTN","LA7VHLU4",77,0)
 . S LA7Z=$$PADD^XUAF4(LA7DA)
"RTN","LA7VHLU4",78,0)
 . S LA7X=$P(LA7Z,"^"),$P(LA7X,"^",2)=$$WHAT^XUAF4(LA7DA,1.02)
"RTN","LA7VHLU4",79,0)
 . F I=1,2 I $P(LA7X,"^",I)'="" S $P(LA7X,"^",I)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",I),LA7FS_LA7ECH)
"RTN","LA7VHLU4",80,0)
 . S LA7Z=$P(LA7Z,"^",2,4),$P(LA7Z,"^",2)=$$GET1^DIQ(4,LA7DA_",",.02,"I")
"RTN","LA7VHLU4",81,0)
 . S $P(LA7Z,"^")=$$CHKDATA^LA7VHLU3($P(LA7Z,"^"),LA7FS_LA7ECH)
"RTN","LA7VHLU4",82,0)
 . S LA7Y=$$HLADDR^HLFNC(LA7X,LA7Z,LA7ECH)
"RTN","LA7VHLU4",83,0)
 ;
"RTN","LA7VHLU4",84,0)
 I LA7Y="",LA7FN=200,LA7DA D
"RTN","LA7VHLU4",85,0)
 . Q
"RTN","LA7VHLU4",86,0)
 ;
"RTN","LA7VHLU4",87,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU4",88,0)
 I LA7Y'="" S ^TMP($J,"LA7VHLU","99VA4A",LA7FN,LA7DA,LA7FS_LA7ECH)=LA7Y
"RTN","LA7VHLU4",89,0)
 ;
"RTN","LA7VHLU4",90,0)
 Q LA7Y
"RTN","LA7VHLU4",91,0)
 ;
"RTN","LA7VHLU4",92,0)
 ;
"RTN","LA7VHLU4",93,0)
XON(LA7FN,LA7DA,LA7TYP,LA7FS,LA7ECH) ; Build extended composite name/id for organization
"RTN","LA7VHLU4",94,0)
 ; Call with LA7FN = Source File number - presently #4 (INSTITUTION)
"RTN","LA7VHLU4",95,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU4",96,0)
 ;          LA7TYP = type of identifier (0/null=station #, 1=CLIA)
"RTN","LA7VHLU4",97,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",98,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU4",99,0)
 ;
"RTN","LA7VHLU4",100,0)
 ;
"RTN","LA7VHLU4",101,0)
 N LA7X,LA7Y,LA7Z
"RTN","LA7VHLU4",102,0)
 ;
"RTN","LA7VHLU4",103,0)
 S LA7Y="",LA7TYP=+$G(LA7TYP)
"RTN","LA7VHLU4",104,0)
 ;
"RTN","LA7VHLU4",105,0)
 ; Check if this field has been built previously for this institution
"RTN","LA7VHLU4",106,0)
 I LA7FN,LA7DA,$D(^TMP($J,"LA7VHLU","99VA4N",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)) S LA7Y=^TMP($J,"LA7VHLU","99VA4N",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)
"RTN","LA7VHLU4",107,0)
 ;
"RTN","LA7VHLU4",108,0)
 ; Build name using field #100, otherwise #.01
"RTN","LA7VHLU4",109,0)
 ; Send facility id in 3rd component if numeric - conform to standard.
"RTN","LA7VHLU4",110,0)
 I LA7Y="",LA7FN=4,LA7DA D
"RTN","LA7VHLU4",111,0)
 . S LA7Z(1)=$P($$NS^XUAF4(LA7DA),"^"),LA7Z(2)=$$WHAT^XUAF4(LA7DA,100)
"RTN","LA7VHLU4",112,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z(1),LA7FS_LA7ECH)
"RTN","LA7VHLU4",113,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)="D"
"RTN","LA7VHLU4",114,0)
 . S LA7X=$$RETFACID^LA7VHLU2(LA7DA,2,1)
"RTN","LA7VHLU4",115,0)
 . I LA7X'="" D
"RTN","LA7VHLU4",116,0)
 . . I LA7X?1.N S $P(LA7Y,$E(LA7ECH,1),3)=LA7X
"RTN","LA7VHLU4",117,0)
 . . S $P(LA7Y,$E(LA7ECH,1),10)=LA7X
"RTN","LA7VHLU4",118,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)="USVHA"
"RTN","LA7VHLU4",119,0)
 . S $P(LA7Y,$E(LA7ECH,1),7)="FI"
"RTN","LA7VHLU4",120,0)
 . S $P(LA7Y,$E(LA7ECH,1),9)="A"
"RTN","LA7VHLU4",121,0)
 . I LA7Z(2)'="" D
"RTN","LA7VHLU4",122,0)
 . . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z(2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",123,0)
 . . S $P(LA7Y,$E(LA7ECH,1),2)="L"
"RTN","LA7VHLU4",124,0)
 . I LA7TYP=1 D
"RTN","LA7VHLU4",125,0)
 . . S LA7X=$$ID^XUAF4("CLIA",LA7DA) Q:LA7X=""
"RTN","LA7VHLU4",126,0)
 . . S $P(LA7Y,$E(LA7ECH,1),3)=""
"RTN","LA7VHLU4",127,0)
 . . S $P(LA7Y,$E(LA7ECH,1),6)="CLIA"
"RTN","LA7VHLU4",128,0)
 . . S $P(LA7Y,$E(LA7ECH,1),7)="LN"
"RTN","LA7VHLU4",129,0)
 . . S $P(LA7Y,$E(LA7ECH,1),10)=LA7X
"RTN","LA7VHLU4",130,0)
 ;
"RTN","LA7VHLU4",131,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU4",132,0)
 I LA7Y'="" S ^TMP($J,"LA7VHLU","99VA4N",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)=LA7Y
"RTN","LA7VHLU4",133,0)
 ;
"RTN","LA7VHLU4",134,0)
 Q LA7Y
"RTN","LA7VHLU4",135,0)
 ;
"RTN","LA7VHLU4",136,0)
 ;
"RTN","LA7VHLU4",137,0)
XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])
"RTN","LA7VHLU4",138,0)
 ; Call with LA7X = HL7 field containing name
"RTN","LA7VHLU4",139,0)
 ;         LA7ECH = HL7 encoding characters
"RTN","LA7VHLU4",140,0)
 ;
"RTN","LA7VHLU4",141,0)
 ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system).
"RTN","LA7VHLU4",142,0)
 ; Stub until all calls can be converted to call XCNTFM^LA7VHLU9
"RTN","LA7VHLU4",143,0)
 ;
"RTN","LA7VHLU4",144,0)
 Q $$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VHLU4",145,0)
 ;
"RTN","LA7VHLU4",146,0)
 ;
"RTN","LA7VHLU4",147,0)
PLTFM(LA7PL,LA7FS,LA7ECH) ; Resolve location from PL (person location) data type.
"RTN","LA7VHLU4",148,0)
 ; Call with LA7PL = HL7 field containing person location
"RTN","LA7VHLU4",149,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU4",150,0)
 ;          LA7ECH = HL7 encoding characters
"RTN","LA7VHLU4",151,0)
 ;
"RTN","LA7VHLU4",152,0)
 ; Returns    LA7Y = file #44 ien^name field (#.01)^division(institution)
"RTN","LA7VHLU4",153,0)
 ;
"RTN","LA7VHLU4",154,0)
 N LA7X,LA7Y,X,Y
"RTN","LA7VHLU4",155,0)
 S LA7X=$P(LA7PL,$E(LA7ECH)),(LA7Y,Y)=""
"RTN","LA7VHLU4",156,0)
 I LA7X?1.N S Y=$$GET1^DIQ(44,LA7X_",",.01)
"RTN","LA7VHLU4",157,0)
 ;
"RTN","LA7VHLU4",158,0)
 ; Check and unescape if needed
"RTN","LA7VHLU4",159,0)
 S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VHLU4",160,0)
 ;
"RTN","LA7VHLU4",161,0)
 ; If not ien try as name
"RTN","LA7VHLU4",162,0)
 I Y="" D
"RTN","LA7VHLU4",163,0)
 . S X=$$FIND1^DIC(44,"","X",LA7X,"B^C")
"RTN","LA7VHLU4",164,0)
 . I X S Y=LA7X,LA7X=X
"RTN","LA7VHLU4",165,0)
 I Y'="" S LA7Y=LA7X_"^"_Y
"RTN","LA7VHLU4",166,0)
 E  I $P(LA7PL,$E(LA7ECH),2)'="" S LA7Y="^"_$$UNESC^LA7VHLU3($P(LA7PL,$E(LA7ECH),2),LA7FS_LA7ECH)
"RTN","LA7VHLU4",167,0)
 ;
"RTN","LA7VHLU4",168,0)
 ; Process division (institution) - pass 1st sub-component of 4th component
"RTN","LA7VHLU4",169,0)
 S LA7X=$P(LA7PL,$E(LA7ECH),4)
"RTN","LA7VHLU4",170,0)
 S LA7X=$P(LA7X,$E(LA7ECH,4))
"RTN","LA7VHLU4",171,0)
 S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VHLU4",172,0)
 S Y=""
"RTN","LA7VHLU4",173,0)
 I LA7X'="" S Y=$$FINDSITE^LA7VHLU2(LA7X,1,1)
"RTN","LA7VHLU4",174,0)
 S $P(LA7Y,"^",3)=Y
"RTN","LA7VHLU4",175,0)
 ;
"RTN","LA7VHLU4",176,0)
 Q LA7Y
"RTN","LA7VHLU5")
0^1^B59941403
"RTN","LA7VHLU5",1,0)
LA7VHLU5 ;DALOI/JMC - HL7 segment builder utility ;10/09/09  10:25
"RTN","LA7VHLU5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU5",3,0)
 ;
"RTN","LA7VHLU5",4,0)
 ;
"RTN","LA7VHLU5",5,0)
DEFCODE(LRSS,LRSB,LA7CODE,LA761) ; Determine default codes when data is not mapped
"RTN","LA7VHLU5",6,0)
 ;
"RTN","LA7VHLU5",7,0)
 ; Call with  LRSS = file #63 subscript
"RTN","LA7VHLU5",8,0)
 ;            LRSB = file #63 dataname/location
"RTN","LA7VHLU5",9,0)
 ;         LA7CODE = current codes stored with data (order nlt!result nlt!loinc code!method suffix)
"RTN","LA7VHLU5",10,0)
 ;           LA761 = specimen, pointer to file #61
"RTN","LA7VHLU5",11,0)
 ;
"RTN","LA7VHLU5",12,0)
 N I,LA760,LA7DFCDE,LA7MISS,LA7NLT,LA7X,LA7Y
"RTN","LA7VHLU5",13,0)
 ;
"RTN","LA7VHLU5",14,0)
 I LA7CODE="" S LA7CODE="!!!"
"RTN","LA7VHLU5",15,0)
 ;
"RTN","LA7VHLU5",16,0)
 ; Replace any missing codes with defaults
"RTN","LA7VHLU5",17,0)
 ; If no missing codes then return codes passed in.
"RTN","LA7VHLU5",18,0)
 S LA7MISS=""
"RTN","LA7VHLU5",19,0)
 F I=1:1:3 I $P(LA7CODE,"!",I)="" S $P(LA7MISS,"^",I)=I
"RTN","LA7VHLU5",20,0)
 ;
"RTN","LA7VHLU5",21,0)
 I LA7MISS'="" D
"RTN","LA7VHLU5",22,0)
 . I LRSS="CH" D CHSUB Q
"RTN","LA7VHLU5",23,0)
 . I LRSS="MI" D MISUB Q
"RTN","LA7VHLU5",24,0)
 . I LRSS="SP" D SPSUB Q
"RTN","LA7VHLU5",25,0)
 . I LRSS="CY" D CYSUB Q
"RTN","LA7VHLU5",26,0)
 . I LRSS="EM" D EMSUB Q
"RTN","LA7VHLU5",27,0)
 ;
"RTN","LA7VHLU5",28,0)
 Q LA7CODE
"RTN","LA7VHLU5",29,0)
 ;
"RTN","LA7VHLU5",30,0)
 ;
"RTN","LA7VHLU5",31,0)
CHSUB ; Determine codes for CH subscript.
"RTN","LA7VHLU5",32,0)
 ;
"RTN","LA7VHLU5",33,0)
 ; Find a file #60 test which uses this dataname. Since there can be
"RTN","LA7VHLU5",34,0)
 ; multiple tests check each until an order and result NLT code is found.
"RTN","LA7VHLU5",35,0)
 S LA760=0
"RTN","LA7VHLU5",36,0)
 F  S LA760=$O(^LAB(60,"C",LRSS_";"_LRSB_";1",LA760)) Q:'LA760  D
"RTN","LA7VHLU5",37,0)
 . ; Default order NLT
"RTN","LA7VHLU5",38,0)
 . I $P(LA7MISS,"^") D
"RTN","LA7VHLU5",39,0)
 . . S LA7X=$$NLT^LRVER1(LA760)
"RTN","LA7VHLU5",40,0)
 . . I LA7X'="" S $P(LA7CODE,"!")=LA7X,$P(LA7MISS,"^")=""
"RTN","LA7VHLU5",41,0)
 . ; Default result NLT
"RTN","LA7VHLU5",42,0)
 . I $P(LA7MISS,"^",2) D
"RTN","LA7VHLU5",43,0)
 . . S LA7X=+$P($G(^LAB(60,LA760,64)),"^",2),LA7Y=""
"RTN","LA7VHLU5",44,0)
 . . I LA7X S LA7Y=$$GET1^DIQ(64,LA7X_",",1)
"RTN","LA7VHLU5",45,0)
 . . I LA7Y'="" S $P(LA7CODE,"!",2)=LA7Y,$P(LA7MISS,"^",2)=""
"RTN","LA7VHLU5",46,0)
 ;
"RTN","LA7VHLU5",47,0)
 ; If no result NLT code then use order NLT as default
"RTN","LA7VHLU5",48,0)
 I $P(LA7CODE,"!",2)="" S $P(LA7CODE,"!",2)=$P(LA7CODE,"!")
"RTN","LA7VHLU5",49,0)
 ;
"RTN","LA7VHLU5",50,0)
 ; If no order NLT code found on file #60 entries then use this default
"RTN","LA7VHLU5",51,0)
 I $P(LA7CODE,"!")="" S $P(LA7CODE,"!")="81323.0000"
"RTN","LA7VHLU5",52,0)
 ;
"RTN","LA7VHLU5",53,0)
 ; Default result LOINC code based on result NLT code
"RTN","LA7VHLU5",54,0)
 ; If none on NLT result code then try order NLT code
"RTN","LA7VHLU5",55,0)
 I $P(LA7MISS,"^",3) D
"RTN","LA7VHLU5",56,0)
 . S LA7NLT=$P(LA7CODE,"!",2),LA7X=""
"RTN","LA7VHLU5",57,0)
 . I LA7NLT'="" S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",58,0)
 . I LA7X S $P(LA7CODE,"!",3)=LA7X Q
"RTN","LA7VHLU5",59,0)
 . S LA7NLT=$P(LA7CODE,"!"),LA7X=""
"RTN","LA7VHLU5",60,0)
 . I LA7NLT'="" S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",61,0)
 . I LA7X S $P(LA7CODE,"!",3)=LA7X
"RTN","LA7VHLU5",62,0)
 ;
"RTN","LA7VHLU5",63,0)
 Q
"RTN","LA7VHLU5",64,0)
 ;
"RTN","LA7VHLU5",65,0)
 ;
"RTN","LA7VHLU5",66,0)
MISUB ; Determine codes for MI subscript
"RTN","LA7VHLU5",67,0)
 ;
"RTN","LA7VHLU5",68,0)
 ; Bacteriology report
"RTN","LA7VHLU5",69,0)
 I LRSB=11 S LA7DFCDE="87993.0000^93928.0000^" D DEFAULT Q
"RTN","LA7VHLU5",70,0)
 ;
"RTN","LA7VHLU5",71,0)
 ; Urine Screen
"RTN","LA7VHLU5",72,0)
 I LRSB=11.57 S LA7DFCDE="87993.0000^93948.0000^630" D DEFAULT Q
"RTN","LA7VHLU5",73,0)
 ;
"RTN","LA7VHLU5",74,0)
 ; Sputum screen
"RTN","LA7VHLU5",75,0)
 I LRSB=11.58 S LA7DFCDE="87993.0000^93949.0000^6460" D DEFAULT Q
"RTN","LA7VHLU5",76,0)
 ;
"RTN","LA7VHLU5",77,0)
 ; Gram stain
"RTN","LA7VHLU5",78,0)
 I LRSB=11.6 S LA7DFCDE="87993.0000^87754.0000^664" D DEFAULT Q
"RTN","LA7VHLU5",79,0)
 ;
"RTN","LA7VHLU5",80,0)
 ; Bacteriology organism
"RTN","LA7VHLU5",81,0)
 I LRSB=12 S LA7DFCDE="87993.0000^87570.0000^11475" D DEFAULT Q
"RTN","LA7VHLU5",82,0)
 ;
"RTN","LA7VHLU5",83,0)
 ; Bacteria colony count
"RTN","LA7VHLU5",84,0)
 I +LRSB=12,$P(LRSB,",",2)=1 S LA7DFCDE="^87719.0000^564" D DEFAULT Q
"RTN","LA7VHLU5",85,0)
 ;
"RTN","LA7VHLU5",86,0)
 ; Bacteriology smear/prep
"RTN","LA7VHLU5",87,0)
 I LRSB=11.7 S LA7DFCDE="87993.0000^93967.0000^" D DEFAULT Q
"RTN","LA7VHLU5",88,0)
 ;
"RTN","LA7VHLU5",89,0)
 ; Bacteriology test
"RTN","LA7VHLU5",90,0)
 I LRSB=1.5 S LA7DFCDE="87993.0000^93969.0000^" D DEFAULT Q
"RTN","LA7VHLU5",91,0)
 ;
"RTN","LA7VHLU5",92,0)
 ; Parasite report
"RTN","LA7VHLU5",93,0)
 I LRSB=14 S LA7DFCDE="87925.0000^93929.0000^" D DEFAULT Q
"RTN","LA7VHLU5",94,0)
 ;
"RTN","LA7VHLU5",95,0)
 ; Parasite organism
"RTN","LA7VHLU5",96,0)
 I LRSB=16 S LA7DFCDE="87925.0000^87576.0000^20932" D DEFAULT Q
"RTN","LA7VHLU5",97,0)
 ;
"RTN","LA7VHLU5",98,0)
 ; Parasite organism stage
"RTN","LA7VHLU5",99,0)
 I +LRSB=16,$P(LRSB,",",2)=.01 S LA7DFCDE="87925.0000^92930.0000^" D DEFAULT Q
"RTN","LA7VHLU5",100,0)
 ;
"RTN","LA7VHLU5",101,0)
 ; Parasite organism stage quantity
"RTN","LA7VHLU5",102,0)
 I +LRSB=16,$P(LRSB,",",2)=1 S LA7DFCDE="87925.0000^93997.0000^" D DEFAULT Q
"RTN","LA7VHLU5",103,0)
 ;
"RTN","LA7VHLU5",104,0)
 ; Parasitology smear/prep
"RTN","LA7VHLU5",105,0)
 I LRSB=15.51 S LA7DFCDE="87925.0000^93971.0000^" D DEFAULT Q
"RTN","LA7VHLU5",106,0)
 ;
"RTN","LA7VHLU5",107,0)
 ; Parasitology test
"RTN","LA7VHLU5",108,0)
 I LRSB=16.4 S LA7DFCDE="87925.0000^93972.0000^" D DEFAULT Q
"RTN","LA7VHLU5",109,0)
 ;
"RTN","LA7VHLU5",110,0)
 ; Mycology report
"RTN","LA7VHLU5",111,0)
 I LRSB=18 S LA7DFCDE="87994.0000^93930.0000^" D DEFAULT Q
"RTN","LA7VHLU5",112,0)
 ;
"RTN","LA7VHLU5",113,0)
 ; Mycology smear/prep
"RTN","LA7VHLU5",114,0)
 I LRSB=19.6 S LA7DFCDE="87994.0000^93984.0000^" D DEFAULT Q
"RTN","LA7VHLU5",115,0)
 ;
"RTN","LA7VHLU5",116,0)
 ; Mycology test
"RTN","LA7VHLU5",117,0)
 I LRSB=20.4 S LA7DFCDE="87994.0000^93974.0000^" D DEFAULT Q
"RTN","LA7VHLU5",118,0)
 ;
"RTN","LA7VHLU5",119,0)
 ; Fungal organism
"RTN","LA7VHLU5",120,0)
 I LRSB=20 S LA7DFCDE="87994.0000^87578.0000^580" D DEFAULT Q
"RTN","LA7VHLU5",121,0)
 ;
"RTN","LA7VHLU5",122,0)
 ; Fungal colony count
"RTN","LA7VHLU5",123,0)
 I +LRSB=20,$P(LRSB,",",2)=1 S LA7DFCDE="87994.0000^87723.0000^19101" D DEFAULT Q
"RTN","LA7VHLU5",124,0)
 ;
"RTN","LA7VHLU5",125,0)
 ; Mycobacterium report
"RTN","LA7VHLU5",126,0)
 I LRSB=22 S LA7DFCDE="87995.0000^93931.0000^" D DEFAULT Q
"RTN","LA7VHLU5",127,0)
 ;
"RTN","LA7VHLU5",128,0)
 ; Acid Fast stain
"RTN","LA7VHLU5",129,0)
 I LRSB=24 S LA7DFCDE="87995.0000^87756.0000^11545" D DEFAULT Q
"RTN","LA7VHLU5",130,0)
 ;
"RTN","LA7VHLU5",131,0)
 ; Acid Fast stain quantity
"RTN","LA7VHLU5",132,0)
 I LRSB=25 S LA7DFCDE="87995.0000^87583.0000^" D DEFAULT Q
"RTN","LA7VHLU5",133,0)
 ;
"RTN","LA7VHLU5",134,0)
 ; Mycobacterium organism
"RTN","LA7VHLU5",135,0)
 I +LRSB=26,'$P(LRSB,",",2) S LA7DFCDE="87995.0000^87589.0000^543" D DEFAULT Q
"RTN","LA7VHLU5",136,0)
 ;
"RTN","LA7VHLU5",137,0)
 ; Mycobacterium colony count
"RTN","LA7VHLU5",138,0)
 I +LRSB=26,$P(LRSB,",",2)=1 S LA7DFCDE="87995.0000^87719.0000^564" D DEFAULT Q
"RTN","LA7VHLU5",139,0)
 ;
"RTN","LA7VHLU5",140,0)
 ; Bact or TB organism's susceptibilities
"RTN","LA7VHLU5",141,0)
 I ($P(LRSB,",")=12!($P(LRSB,",")=26)),$P(LRSB,",",2)>2,$P(LRSB,",",2)<2.999 D  Q
"RTN","LA7VHLU5",142,0)
 . S LA7X=""
"RTN","LA7VHLU5",143,0)
 . I $P(LRSB,",")=12 D
"RTN","LA7VHLU5",144,0)
 . . S LA7DFCDE="87565.0000^^"
"RTN","LA7VHLU5",145,0)
 . . S LA7X=$O(^LAB(62.06,"AD",$P(LRSB,",",2),0))
"RTN","LA7VHLU5",146,0)
 . I $P(LRSB,",")=26 D
"RTN","LA7VHLU5",147,0)
 . . S LA7DFCDE="87568.0000^^"
"RTN","LA7VHLU5",148,0)
 . . S LA7X=$O(^LAB(62.06,"AD1",$P(LRSB,",",2),0))
"RTN","LA7VHLU5",149,0)
 . I LA7X D
"RTN","LA7VHLU5",150,0)
 . . S X=$$GET1^DIQ(62.06,LA7X_",","64:1")
"RTN","LA7VHLU5",151,0)
 . . I X S $P(LA7DFCDE,"^",2)=X
"RTN","LA7VHLU5",152,0)
 . D DEFAULT
"RTN","LA7VHLU5",153,0)
 ;
"RTN","LA7VHLU5",154,0)
 ; TB test
"RTN","LA7VHLU5",155,0)
 I LRSB=26.4 S LA7DFCDE="87995.0000^93977.0000^" D DEFAULT Q
"RTN","LA7VHLU5",156,0)
 ;
"RTN","LA7VHLU5",157,0)
 ; Virology report
"RTN","LA7VHLU5",158,0)
 I LRSB=33 S LA7DFCDE="87996.0000^93932.0000^" D DEFAULT Q
"RTN","LA7VHLU5",159,0)
 ;
"RTN","LA7VHLU5",160,0)
 ; Viral agent
"RTN","LA7VHLU5",161,0)
 I $P(LRSB,",")=36 S LA7DFCDE="87996.0000^87590.0000^6584" D DEFAULT Q
"RTN","LA7VHLU5",162,0)
 ;
"RTN","LA7VHLU5",163,0)
 ; Virology test
"RTN","LA7VHLU5",164,0)
 I LRSB=36.4 S LA7DFCDE="87996.0000^93981.0000^" D DEFAULT Q
"RTN","LA7VHLU5",165,0)
 ;
"RTN","LA7VHLU5",166,0)
 ; Sterility results
"RTN","LA7VHLU5",167,0)
 I LRSB=11.52 S LA7DFCDE="93982.0000^93982.0000^" D DEFAULT Q
"RTN","LA7VHLU5",168,0)
 ;
"RTN","LA7VHLU5",169,0)
 Q
"RTN","LA7VHLU5",170,0)
 ;
"RTN","LA7VHLU5",171,0)
 ;
"RTN","LA7VHLU5",172,0)
SPSUB ; Determine codes for SP subscript
"RTN","LA7VHLU5",173,0)
 ;
"RTN","LA7VHLU5",174,0)
 ; specimens
"RTN","LA7VHLU5",175,0)
 I $P(LRSB,",")=.012 S LA7DFCDE="88515.0000^88539.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",176,0)
 I LRSB=10 S LA7DFCDE="88515.0000^88539.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",177,0)
 ;
"RTN","LA7VHLU5",178,0)
 ; brief clinical history
"RTN","LA7VHLU5",179,0)
 I LRSB=.013 S LA7DFCDE="88515.0000^88542.0000^22636" D DEFAULT Q
"RTN","LA7VHLU5",180,0)
 ;
"RTN","LA7VHLU5",181,0)
 ; preoperative diagnosis
"RTN","LA7VHLU5",182,0)
 I LRSB=.014 S LA7DFCDE="88515.0000^88544.0000^10219" D DEFAULT Q
"RTN","LA7VHLU5",183,0)
 ;
"RTN","LA7VHLU5",184,0)
 ; operative findings
"RTN","LA7VHLU5",185,0)
 I LRSB=.015 S LA7DFCDE="88515.0000^88546.0000^10215" D DEFAULT Q
"RTN","LA7VHLU5",186,0)
 ;
"RTN","LA7VHLU5",187,0)
 ; postoperative diagnosis
"RTN","LA7VHLU5",188,0)
 I LRSB=.016 S LA7DFCDE="88515.0000^88547.0000^10218" D DEFAULT Q
"RTN","LA7VHLU5",189,0)
 ;
"RTN","LA7VHLU5",190,0)
 ; gross description
"RTN","LA7VHLU5",191,0)
 I LRSB=1 S LA7DFCDE="88515.0000^88549.0000^22634" D DEFAULT Q
"RTN","LA7VHLU5",192,0)
 ;
"RTN","LA7VHLU5",193,0)
 ; microscopic description
"RTN","LA7VHLU5",194,0)
 I LRSB=1.1 S LA7DFCDE="88515.0000^88563.0000^22635" D DEFAULT Q
"RTN","LA7VHLU5",195,0)
 ;
"RTN","LA7VHLU5",196,0)
 ; frozen section
"RTN","LA7VHLU5",197,0)
 I LRSB=1.3 S LA7DFCDE="88515.0000^88569.0000^22635" D DEFAULT Q
"RTN","LA7VHLU5",198,0)
 ;
"RTN","LA7VHLU5",199,0)
 ; surgical path diagnosis
"RTN","LA7VHLU5",200,0)
 I LRSB=1.4 S LA7DFCDE="88515.0000^88571.0000^22637" D DEFAULT Q
"RTN","LA7VHLU5",201,0)
 ;
"RTN","LA7VHLU5",202,0)
 ; supplementary report
"RTN","LA7VHLU5",203,0)
 I LRSB=1.2!(LRSB="10,5") S LA7DFCDE="88589.0000^88589.0000^22639" D DEFAULT Q
"RTN","LA7VHLU5",204,0)
 ;
"RTN","LA7VHLU5",205,0)
 ; specimen weight
"RTN","LA7VHLU5",206,0)
 I LRSB="10,2" S LA7DFCDE="88515.0000^81233.0000^3154" D DEFAULT Q
"RTN","LA7VHLU5",207,0)
 ;
"RTN","LA7VHLU5",208,0)
 Q
"RTN","LA7VHLU5",209,0)
 ;
"RTN","LA7VHLU5",210,0)
 ;
"RTN","LA7VHLU5",211,0)
CYSUB ;  Determine codes for CY subscript
"RTN","LA7VHLU5",212,0)
 ;
"RTN","LA7VHLU5",213,0)
 ; specimens
"RTN","LA7VHLU5",214,0)
 I $P(LRSB,",")=.012 S LA7DFCDE="88593.0000^88539.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",215,0)
 I LRSB=10 S LA7DFCDE="88593.0000^88539.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",216,0)
 ;
"RTN","LA7VHLU5",217,0)
 ; brief clinical history
"RTN","LA7VHLU5",218,0)
 I LRSB=.013 S LA7DFCDE="88593.0000^88542.0000^22636" D DEFAULT Q
"RTN","LA7VHLU5",219,0)
 ;
"RTN","LA7VHLU5",220,0)
 ; preoperative diagnosis
"RTN","LA7VHLU5",221,0)
 I LRSB=.014 S LA7DFCDE="88593.0000^88544.0000^10219" D DEFAULT Q
"RTN","LA7VHLU5",222,0)
 ;
"RTN","LA7VHLU5",223,0)
 ; operative findings
"RTN","LA7VHLU5",224,0)
 I LRSB=.015 S LA7DFCDE="88593.0000^88542.0000^10215" D DEFAULT Q
"RTN","LA7VHLU5",225,0)
 ;
"RTN","LA7VHLU5",226,0)
 ; postoperative diagnosis
"RTN","LA7VHLU5",227,0)
 I LRSB=.016 S LA7DFCDE="88593.0000^88547.0000^10218" D DEFAULT Q
"RTN","LA7VHLU5",228,0)
 ;
"RTN","LA7VHLU5",229,0)
 ; gross description
"RTN","LA7VHLU5",230,0)
 I LRSB=1!(LRSB=20) S LA7DFCDE="88593.0000^88549.0000^22634" D DEFAULT Q
"RTN","LA7VHLU5",231,0)
 ;
"RTN","LA7VHLU5",232,0)
 ; microscopic examination
"RTN","LA7VHLU5",233,0)
 I LRSB=1.1 S LA7DFCDE="88593.0000^88563.0000^22635" D DEFAULT Q
"RTN","LA7VHLU5",234,0)
 ;
"RTN","LA7VHLU5",235,0)
 ; supplementary report
"RTN","LA7VHLU5",236,0)
 I LRSB=1.2 S LA7DFCDE="88589.0000^88589.0000^22639" D DEFAULT Q
"RTN","LA7VHLU5",237,0)
 ;
"RTN","LA7VHLU5",238,0)
 ; cytopathology diagnosis
"RTN","LA7VHLU5",239,0)
 I LRSB=1.4 S LA7DFCDE="88593.0000^88571.0000^22637" D DEFAULT Q
"RTN","LA7VHLU5",240,0)
 ;
"RTN","LA7VHLU5",241,0)
 Q
"RTN","LA7VHLU5",242,0)
 ;
"RTN","LA7VHLU5",243,0)
 ;
"RTN","LA7VHLU5",244,0)
EMSUB ;  Determine codes for EM subscript
"RTN","LA7VHLU5",245,0)
 ;
"RTN","LA7VHLU5",246,0)
 ; specimens
"RTN","LA7VHLU5",247,0)
 I $P(LRSB,",")=.012 S LA7DFCDE="88597.0000^88057.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",248,0)
 I LRSB=10 S LA7DFCDE="88597.0000^88057.0000^22633" D DEFAULT Q
"RTN","LA7VHLU5",249,0)
 ;
"RTN","LA7VHLU5",250,0)
 ; brief clinical history
"RTN","LA7VHLU5",251,0)
 I LRSB=.013 S LA7DFCDE="88597.0000^88542.0000^22636" D DEFAULT Q
"RTN","LA7VHLU5",252,0)
 ;
"RTN","LA7VHLU5",253,0)
 ; preoperative diagnosis
"RTN","LA7VHLU5",254,0)
 I LRSB=.014 S LA7DFCDE="88597.0000^88544.0000^10219" D DEFAULT Q
"RTN","LA7VHLU5",255,0)
 ;
"RTN","LA7VHLU5",256,0)
 ; operative findings
"RTN","LA7VHLU5",257,0)
 I LRSB=.015 S LA7DFCDE="88597.0000^88542.0000^10215" D DEFAULT Q
"RTN","LA7VHLU5",258,0)
 ;
"RTN","LA7VHLU5",259,0)
 ; postoperative diagnosis
"RTN","LA7VHLU5",260,0)
 I LRSB=.016 S LA7DFCDE="88597.0000^88547.0000^10218" D DEFAULT Q
"RTN","LA7VHLU5",261,0)
 ;
"RTN","LA7VHLU5",262,0)
 ; gross description
"RTN","LA7VHLU5",263,0)
 I LRSB=1!(LRSB=20) S LA7DFCDE="88597.0000^88549.0000^22634" D DEFAULT Q
"RTN","LA7VHLU5",264,0)
 ;
"RTN","LA7VHLU5",265,0)
 ; microscopic examination
"RTN","LA7VHLU5",266,0)
 I LRSB=1.1 S LA7DFCDE="88597.0000^88563.0000^22635" D DEFAULT Q
"RTN","LA7VHLU5",267,0)
 ;
"RTN","LA7VHLU5",268,0)
 ; supplementary report
"RTN","LA7VHLU5",269,0)
 I LRSB=1.2 S LA7DFCDE="88589.0000^88589.0000^22639" D DEFAULT Q
"RTN","LA7VHLU5",270,0)
 ;
"RTN","LA7VHLU5",271,0)
 ; em diagnosis
"RTN","LA7VHLU5",272,0)
 I LRSB=1.4 S LA7DFCDE="88597.0000^88571.0000^22637" D DEFAULT Q
"RTN","LA7VHLU5",273,0)
 ;
"RTN","LA7VHLU5",274,0)
 Q
"RTN","LA7VHLU5",275,0)
 ;
"RTN","LA7VHLU5",276,0)
 ;
"RTN","LA7VHLU5",277,0)
DEFAULT ; Resolve codes and set defaults as needed
"RTN","LA7VHLU5",278,0)
 ;
"RTN","LA7VHLU5",279,0)
 ; Expects LA7DFCDE=default order NLT^default result NLT^default LOINC code
"RTN","LA7VHLU5",280,0)
 ;
"RTN","LA7VHLU5",281,0)
 I $P(LA7MISS,"^") S $P(LA7CODE,"!")=$P(LA7DFCDE,"^")
"RTN","LA7VHLU5",282,0)
 I $P(LA7MISS,"^",2) S $P(LA7CODE,"!",2)=$P(LA7DFCDE,"^",2)
"RTN","LA7VHLU5",283,0)
 I $P(LA7MISS,"^",3) D
"RTN","LA7VHLU5",284,0)
 . S $P(LA7CODE,"!",3)=$$LNC^LRVER1($P(LA7CODE,"!",2),$P(LA7CODE,"!",4),LA761)
"RTN","LA7VHLU5",285,0)
 . I '$P(LA7CODE,"!",3) S $P(LA7CODE,"!",3)=$P(LA7DFCDE,"^",3)
"RTN","LA7VHLU5",286,0)
 Q
"RTN","LA7VHLU6")
0^14^B56093217
"RTN","LA7VHLU6",1,0)
LA7VHLU6 ;DALOI/JMC - HL7 Code Sets utility ;11/17/11  09:25
"RTN","LA7VHLU6",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU6",3,0)
 ;
"RTN","LA7VHLU6",4,0)
 ; Utility to resolve SNOMED CT, LOINC and local codes.
"RTN","LA7VHLU6",5,0)
 ;
"RTN","LA7VHLU6",6,0)
 Q
"RTN","LA7VHLU6",7,0)
 ;
"RTN","LA7VHLU6",8,0)
IEN2SCT(FILE,IEN,DATE,LA7ALT) ; Return SCT code for a given file entry
"RTN","LA7VHLU6",9,0)
 ; Call with FILE = file #
"RTN","LA7VHLU6",10,0)
 ;            IEN = internal entry number in FILE
"RTN","LA7VHLU6",11,0)
 ;           DATE = as of date
"RTN","LA7VHLU6",12,0)
 ;         LA7ALT = SNOMED CT ID to use as alternate
"RTN","LA7VHLU6",13,0)
 ;
"RTN","LA7VHLU6",14,0)
 ; Returns   LA7Y = SNOMED CT code (Code^Code Text^Code System^Version^Error Code^Error Text)
"RTN","LA7VHLU6",15,0)
 ;
"RTN","LA7VHLU6",16,0)
 N LA7FIELD,LA7SCT,LA7X,LA7Y,LA7Z,X,Y
"RTN","LA7VHLU6",17,0)
 S LA7Y="",FILE=+$G(FILE),IEN=+$G(IEN),LA7ALT=$G(LA7ALT)
"RTN","LA7VHLU6",18,0)
 ;
"RTN","LA7VHLU6",19,0)
 ; If entry mapped to SNOMED CT then retrieve code info from Lexicon.
"RTN","LA7VHLU6",20,0)
 S LA7FIELD=$S(FILE=61:20,FILE=61.2:20,FILE=62:20,1:20)
"RTN","LA7VHLU6",21,0)
 I LA7ALT'="" S LA7X=LA7ALT
"RTN","LA7VHLU6",22,0)
 E  S LA7X=$$GET1^DIQ(FILE,IEN_",",LA7FIELD)
"RTN","LA7VHLU6",23,0)
 I LA7X D
"RTN","LA7VHLU6",24,0)
 . S LA7Z=$$CODE^LEXTRAN(LA7X,"SCT",DATE,"LA7SCT")
"RTN","LA7VHLU6",25,0)
 . I LA7Z>0 S LA7Y=$P(LA7SCT(0),"^")_"^"_LA7SCT("F")_"^SCT^"_$P(LA7SCT(0),"^",3) Q
"RTN","LA7VHLU6",26,0)
 . S $P(LA7Y,"^",5,6)=$P(LA7Z,"^",1,2) ; return error code/text in 5th/6th pieces
"RTN","LA7VHLU6",27,0)
 . I $P(LA7Z,"^")=-1 Q
"RTN","LA7VHLU6",28,0)
 . I $P(LA7Z,"^")=-2 Q
"RTN","LA7VHLU6",29,0)
 . I $P(LA7Z,"^")=-4 D  Q
"RTN","LA7VHLU6",30,0)
 . . S $P(LA7Y,"^",1,4)=$P(LA7SCT(0),"^")_"^"_$G(LA7SCT("F"))_"^SCT^"_$P(LA7SCT(0),"^",3)
"RTN","LA7VHLU6",31,0)
 . . S X=$P(LA7Z,"not active for ",2)
"RTN","LA7VHLU6",32,0)
 . . I X?1(7N,7N1"."1.N) S $P(LA7Y,"not active for ",2)=$$FMTE^XLFDT(X,"MZ")
"RTN","LA7VHLU6",33,0)
 . I $P(LA7Z,"^")=-8 D  Q
"RTN","LA7VHLU6",34,0)
 . . S X=+$P(LA7Z," ",2)
"RTN","LA7VHLU6",35,0)
 . . I X?1(7N,7N1"."1.N) S $P(LA7Y," ",2)=$$FMTE^XLFDT(X,"MZ")
"RTN","LA7VHLU6",36,0)
 . . I DATE=DT Q
"RTN","LA7VHLU6",37,0)
 . . N LA7Z,LA7SCT
"RTN","LA7VHLU6",38,0)
 . . S LA7Z=$$CODE^LEXTRAN(LA7X,"SCT",DT,"LA7SCT")
"RTN","LA7VHLU6",39,0)
 . . I LA7Z>0 S $P(LA7Y,"^",1,4)=$P(LA7SCT(0),"^")_"^"_LA7SCT("F")_"^SCT^"_$P(LA7SCT(0),"^",3)
"RTN","LA7VHLU6",40,0)
 ;
"RTN","LA7VHLU6",41,0)
 Q LA7Y
"RTN","LA7VHLU6",42,0)
 ;
"RTN","LA7VHLU6",43,0)
 ;
"RTN","LA7VHLU6",44,0)
SCT2IEN(CODE,TEXT,VERSION,FILE,LA76247,LA76248) ; Return file ien for a given SNOMED CT code
"RTN","LA7VHLU6",45,0)
 ; Call with CODE = SNOMED CT code
"RTN","LA7VHLU6",46,0)
 ;           TEXT = code text
"RTN","LA7VHLU6",47,0)
 ;        VERSION = code system version
"RTN","LA7VHLU6",48,0)
 ;           FILE = destination VistA file # (file where the SCT term resides)
"RTN","LA7VHLU6",49,0)
 ;        LA76247 = ien of concept to screen on
"RTN","LA7VHLU6",50,0)
 ;        LA76248 = related Lab Messaging configuration for non-standard code lookup (optional)
"RTN","LA7VHLU6",51,0)
 ;                  used when code is only for a specific interface
"RTN","LA7VHLU6",52,0)
 ;
"RTN","LA7VHLU6",53,0)
 ; Returns LA7IEN = file internal entry number
"RTN","LA7VHLU6",54,0)
 ;
"RTN","LA7VHLU6",55,0)
 N LA7CNT,LA7IEN,LA7X,LA7Y
"RTN","LA7VHLU6",56,0)
 S (LA7CNT,LA7X)=0,LA7IEN=""
"RTN","LA7VHLU6",57,0)
 F  S LA7X=$O(^LAB(FILE,"F",CODE,LA7X)) Q:'LA7X  S LA7CNT=LA7CNT+1,LA7IEN=LA7X,LA7Y(LA7X)=^LAB(FILE,LA7X,"SCT")
"RTN","LA7VHLU6",58,0)
 ;
"RTN","LA7VHLU6",59,0)
 ; If multiple entries mapped then check for closest match
"RTN","LA7VHLU6",60,0)
 ;  - try P if no P then try S or L for text match
"RTN","LA7VHLU6",61,0)
 ;    - if none then select S
"RTN","LA7VHLU6",62,0)
 ;      - if none then select L
"RTN","LA7VHLU6",63,0)
 I LA7CNT>1 D
"RTN","LA7VHLU6",64,0)
 . N LA7QUIT
"RTN","LA7VHLU6",65,0)
 . S TEXT=$$UP^XLFSTR(TEXT)
"RTN","LA7VHLU6",66,0)
 . S (LA7QUIT,LA7X)=0
"RTN","LA7VHLU6",67,0)
 . F  S LA7X=$O(LA7Y(LA7X)) Q:'LA7X  D  Q:LA7QUIT
"RTN","LA7VHLU6",68,0)
 . . S LA7IEN=LA7X
"RTN","LA7VHLU6",69,0)
 . . I $P(LA7Y(LA7X),"^",2)="P" S LA7QUIT=1 Q
"RTN","LA7VHLU6",70,0)
 . . I $P(LA7Y(LA7X),"^",2)?1(1"S",1"L"),TEXT=$$UP^XLFSTR($P(^LAB(FILE,LA7X,0),"^")) S LA7QUIT=1
"RTN","LA7VHLU6",71,0)
 . I LA7QUIT Q
"RTN","LA7VHLU6",72,0)
 . S (LA7IEN,LA7X)=0
"RTN","LA7VHLU6",73,0)
 . F  S LA7X=$O(LA7Y(LA7X)) Q:'LA7X  D
"RTN","LA7VHLU6",74,0)
 . . I $P(LA7Y(LA7X),"^",2)="S" S LA7IEN=LA7X
"RTN","LA7VHLU6",75,0)
 . . I 'LA7IEN,$P(LA7Y(LA7X),"^",2)="L" S LA7IEN=LA7X
"RTN","LA7VHLU6",76,0)
 ;
"RTN","LA7VHLU6",77,0)
 ;
"RTN","LA7VHLU6",78,0)
 Q LA7IEN
"RTN","LA7VHLU6",79,0)
 ;
"RTN","LA7VHLU6",80,0)
 ;
"RTN","LA7VHLU6",81,0)
HL2LAH(CODE,TEXT,NCS,VERSION,LA76248,LA7SS) ; Determine storage location for a code system sent in OBX-3
"RTN","LA7VHLU6",82,0)
 ; Call with CODE = code id
"RTN","LA7VHLU6",83,0)
 ;           TEXT = code text
"RTN","LA7VHLU6",84,0)
 ;            NCS = name of coding system (LOINC, NLT, SCT, 99xxx, L)
"RTN","LA7VHLU6",85,0)
 ;        VERSION = code system version id
"RTN","LA7VHLU6",86,0)
 ;        LA76248 = related Lab Messaging configuration for non-standard code lookup (optional)
"RTN","LA7VHLU6",87,0)
 ;                  used when code is only for a specific interface
"RTN","LA7VHLU6",88,0)
 ;          LA7SS = specific lab subscript to screen standard codes - used when same code used in multiple areas
"RTN","LA7VHLU6",89,0)
 ;
"RTN","LA7VHLU6",90,0)
 ; Returns   LA7Y = CONCEPT^SUBSCRIPT^FILE/SUBFILE^FIELD NUMBER^SCT HIERARCHY
"RTN","LA7VHLU6",91,0)
 ;
"RTN","LA7VHLU6",92,0)
 N DA,LA76247,LA764,LA764061,LA7ROOT,LA7X,LA7Y,LOCAL,X,Y
"RTN","LA7VHLU6",93,0)
 S (DA,DA(1),LA7Y,LA76247)="",LA7SS=$G(LA7SS),LA764061=0
"RTN","LA7VHLU6",94,0)
 S LOCAL=$S(NCS="99VA64":0,NCS="L":1,$E(NCS,1,2)="99":1,1:0)
"RTN","LA7VHLU6",95,0)
 ;
"RTN","LA7VHLU6",96,0)
 ; Check for subscript specific code first.
"RTN","LA7VHLU6",97,0)
 ; If VA NLT suffixed code and not in x-ref then try non-suffixed version of code.
"RTN","LA7VHLU6",98,0)
 I LA7SS'="" D
"RTN","LA7VHLU6",99,0)
 . S LA7ROOT=$Q(^LAB(62.47,"AC2",LA7SS,NCS,CODE))
"RTN","LA7VHLU6",100,0)
 . I LA7ROOT="",NCS="99VA64",CODE#1 S CODE=$P(CODE,".")_".0000",LA7ROOT=$Q(^LAB(62.47,"AC2",LA7SS,NCS,CODE))
"RTN","LA7VHLU6",101,0)
 . I LA7ROOT'="",$QS(LA7ROOT,2)="AC2",$QS(LA7ROOT,3)=LA7SS,$QS(LA7ROOT,4)=NCS,$QS(LA7ROOT,5)=CODE D
"RTN","LA7VHLU6",102,0)
 . . S LA764061=$QS(LA7ROOT,6),(DA(1),LA7Y)=$QS(LA7ROOT,7)
"RTN","LA7VHLU6",103,0)
 . . I LA764061 S LA7Y=LA7Y_"^"_$P($G(^LAB(64.061,LA764061,63)),"^",1,4)
"RTN","LA7VHLU6",104,0)
 . . S DA=$QS(LA7ROOT,8)
"RTN","LA7VHLU6",105,0)
 . . I $P(^LAB(62.47,DA(1),1,DA,0),"^",4) D LAHOVR S $P(LA7Y,"^",6)=$QS(LA7ROOT,7)
"RTN","LA7VHLU6",106,0)
 ;
"RTN","LA7VHLU6",107,0)
 ; Check for non-subscript specific code
"RTN","LA7VHLU6",108,0)
 ; If VA NLT suffixed code and not in x-ref then try non-suffixed version of code.
"RTN","LA7VHLU6",109,0)
 I LA7Y="" D
"RTN","LA7VHLU6",110,0)
 . S LA7ROOT=$Q(^LAB(62.47,"AC",NCS,CODE))
"RTN","LA7VHLU6",111,0)
 . I LA7ROOT="",NCS="99VA64",CODE#1 S CODE=$P(CODE,".")_".0000",LA7ROOT=$Q(^LAB(62.47,"AC",NCS,CODE))
"RTN","LA7VHLU6",112,0)
 . I LA7ROOT'="",$QS(LA7ROOT,2)="AC",$QS(LA7ROOT,3)=NCS,$QS(LA7ROOT,4)=CODE D
"RTN","LA7VHLU6",113,0)
 . . S LA764061=$QS(LA7ROOT,5),(DA(1),LA7Y)=$QS(LA7ROOT,6)
"RTN","LA7VHLU6",114,0)
 . . I LA764061 S LA7Y=LA7Y_"^"_$P($G(^LAB(64.061,LA764061,63)),"^",1,4)
"RTN","LA7VHLU6",115,0)
 . . S DA=$QS(LA7ROOT,7)
"RTN","LA7VHLU6",116,0)
 . . I $P(^LAB(62.47,DA(1),1,DA,0),"^",4) D LAHOVR S $P(LA7Y,"^",6)=$QS(LA7ROOT,6)
"RTN","LA7VHLU6",117,0)
 ;
"RTN","LA7VHLU6",118,0)
 ; If for a specific interface
"RTN","LA7VHLU6",119,0)
 I LA76248 D
"RTN","LA7VHLU6",120,0)
 . S LA7ROOT=$Q(^LAB(62.47,"AC1",LA76248,NCS,CODE))
"RTN","LA7VHLU6",121,0)
 . I LA7ROOT'="",$QS(LA7ROOT,2)="AC1",$QS(LA7ROOT,3)=LA76248,$QS(LA7ROOT,4)=NCS,$QS(LA7ROOT,5)=CODE D
"RTN","LA7VHLU6",122,0)
 . . S LA764061=$QS(LA7ROOT,6),(DA(1),LA7Y)=$QS(LA7ROOT,7)
"RTN","LA7VHLU6",123,0)
 . . I LA764061 S LA7Y=LA7Y_"^"_$P($G(^LAB(64.061,LA764061,63)),"^",1,4)
"RTN","LA7VHLU6",124,0)
 . . S DA=$QS(LA7ROOT,8)
"RTN","LA7VHLU6",125,0)
 . . I $P(^LAB(62.47,DA(1),1,DA,0),"^",4) D LAHOVR S $P(LA7Y,"^",6)=$QS(LA7ROOT,7)
"RTN","LA7VHLU6",126,0)
 ;
"RTN","LA7VHLU6",127,0)
 ; Set bacterial/mycobacteria susceptibility field
"RTN","LA7VHLU6",128,0)
 I LA764061=9332!(LA764061=9333) D
"RTN","LA7VHLU6",129,0)
 . S LA7X=$G(^LAB(62.47,DA(1),1,DA,2))
"RTN","LA7VHLU6",130,0)
 . I $P($P(LA7X,"^"),";",2)'="LAB(62.06," Q
"RTN","LA7VHLU6",131,0)
 . S X=$G(^LAB(62.06,+LA7X,0))
"RTN","LA7VHLU6",132,0)
 . I LA764061=9332,$P(X,"^",4) S $P(LA7Y,"^",4)=$P(X,"^",4) Q
"RTN","LA7VHLU6",133,0)
 . I LA764061=9333,$P(X,"^",8) S $P(LA7Y,"^",4)=$P(X,"^",8)
"RTN","LA7VHLU6",134,0)
 ;
"RTN","LA7VHLU6",135,0)
 ; If code system is SNOMED CT
"RTN","LA7VHLU6",136,0)
 ; Currently VistA should not receive a SNOMED CT code in an OBX-3 field.
"RTN","LA7VHLU6",137,0)
 I NCS="SCT" D
"RTN","LA7VHLU6",138,0)
 . Q
"RTN","LA7VHLU6",139,0)
 ;
"RTN","LA7VHLU6",140,0)
 Q LA7Y
"RTN","LA7VHLU6",141,0)
 ;
"RTN","LA7VHLU6",142,0)
 ;
"RTN","LA7VHLU6",143,0)
LAHOVR ; Override HL2LAH concept code mapping.
"RTN","LA7VHLU6",144,0)
 ;ZEXCEPT: DA,LA76247,LA764061,LA7Y
"RTN","LA7VHLU6",145,0)
 ;
"RTN","LA7VHLU6",146,0)
 S LA76247=$P(^LAB(62.47,DA(1),1,DA,0),"^",4)
"RTN","LA7VHLU6",147,0)
 S LA764061=$P(^LAB(62.47,LA76247,0),"^",3)
"RTN","LA7VHLU6",148,0)
 S LA7Y=LA76247_"^"_$G(^LAB(64.061,LA764061,63))
"RTN","LA7VHLU6",149,0)
 Q
"RTN","LA7VHLU6",150,0)
 ;
"RTN","LA7VHLU6",151,0)
 ;
"RTN","LA7VHLU6",152,0)
ALCONCPT(LA76247) ; Determine alternate concept for a concept
"RTN","LA7VHLU6",153,0)
 ; Call with LA76247 = ien of concept
"RTN","LA7VHLU6",154,0)
 ;
"RTN","LA7VHLU6",155,0)
 ; Returns LACONPT =  alternate concept
"RTN","LA7VHLU6",156,0)
 ;
"RTN","LA7VHLU6",157,0)
 N LACONCPT
"RTN","LA7VHLU6",158,0)
 S LACONCPT=""
"RTN","LA7VHLU6",159,0)
 I $G(LA76247)>0 S LACONCPT=+$P($G(^LAB(62.47,LA76247,0)),"^",4)
"RTN","LA7VHLU6",160,0)
 Q LACONCPT
"RTN","LA7VHLU6",161,0)
 ;
"RTN","LA7VHLU6",162,0)
 ;
"RTN","LA7VHLU6",163,0)
PRID(CODE,NCS,LA764061) ; Determine if a code represents the presence/absence or the identity of a concept in OBX-5
"RTN","LA7VHLU6",164,0)
 ; Used to determine if identity of organism or presence/absence
"RTN","LA7VHLU6",165,0)
 ; Call with CODE = code id
"RTN","LA7VHLU6",166,0)
 ;            NCS = name of coding system
"RTN","LA7VHLU6",167,0)
 ;        LA64061 = related Lab database code
"RTN","LA7VHLU6",168,0)
 ;
"RTN","LA7VHLU6",169,0)
 ; Returns   LA7Y = hierarchy of the code ^ related VistA file
"RTN","LA7VHLU6",170,0)
 ;
"RTN","LA7VHLU6",171,0)
 N LA7Y,LA7X
"RTN","LA7VHLU6",172,0)
 S LA7Y=""
"RTN","LA7VHLU6",173,0)
 ;
"RTN","LA7VHLU6",174,0)
 ; If code system is SNOMED CT
"RTN","LA7VHLU6",175,0)
 I NCS="SCT" D
"RTN","LA7VHLU6",176,0)
 . S LA7Y=$$GET1^DIQ(64.061,LA764061_",",63.3)
"RTN","LA7VHLU6",177,0)
 . S LA7X=$$GET1^DIQ(64.061,LA764061_",",63.3,"I")
"RTN","LA7VHLU6",178,0)
 . I LA7X S $P(LA7Y,"^",2)=$P($G(^LAB(64.061,LA7X,63)),"^",5)
"RTN","LA7VHLU6",179,0)
 ;
"RTN","LA7VHLU6",180,0)
 Q LA7Y
"RTN","LA7VHLU6",181,0)
 ;
"RTN","LA7VHLU6",182,0)
 ;
"RTN","LA7VHLU6",183,0)
HL2VA(CODE,TEXT,NCS,VERSION,LA76247,LA76248) ; Resolve code to internal VA file entry, used to resolve value of OBX-5 coded entry
"RTN","LA7VHLU6",184,0)
 ; Call with CODE = code id
"RTN","LA7VHLU6",185,0)
 ;            NCS = name of coding system (SCT, 99xxx, L)
"RTN","LA7VHLU6",186,0)
 ;           TEXT = code text
"RTN","LA7VHLU6",187,0)
 ;        VERSION = code system version id
"RTN","LA7VHLU6",188,0)
 ;        LA76247 = ien of concept to screen on
"RTN","LA7VHLU6",189,0)
 ;        LA76248 = related Lab Messaging configuration for non-standard code lookup (optional)
"RTN","LA7VHLU6",190,0)
 ;                  used when code is only for a specific interface
"RTN","LA7VHLU6",191,0)
 ;
"RTN","LA7VHLU6",192,0)
 ; Returns  LA7Y = variable pointer format^database storage location
"RTN","LA7VHLU6",193,0)
 ;                 OR
"RTN","LA7VHLU6",194,0)
 ;                 -1^^^^ien of override concept (if override concept)
"RTN","LA7VHLU6",195,0)
 ;
"RTN","LA7VHLU6",196,0)
 N DA,LA764061,LA7FILE,LA7HIER,LA7ROOT,LA7X,LA7Y,LOCAL,X,Y
"RTN","LA7VHLU6",197,0)
 S LA76247=$G(LA76247)
"RTN","LA7VHLU6",198,0)
 I 'LA76247 Q 0
"RTN","LA7VHLU6",199,0)
 S LA7FILE=""
"RTN","LA7VHLU6",200,0)
 S LOCAL=$S(NCS="L":1,$E(NCS,1,2)="99":1,1:0)
"RTN","LA7VHLU6",201,0)
 S LA764061=$P($G(^LAB(62.47,LA76247,0)),"^",3),LA7Y="^"_$P($G(^LAB(64.061,LA764061,63)),"^",1,3)
"RTN","LA7VHLU6",202,0)
 ;
"RTN","LA7VHLU6",203,0)
 ; If code system is SNOMED CT
"RTN","LA7VHLU6",204,0)
 I NCS="SCT" D
"RTN","LA7VHLU6",205,0)
 . S LA7ROOT=$Q(^LAB(62.47,"AD",LA76247,NCS,CODE))
"RTN","LA7VHLU6",206,0)
 . I LA7ROOT'="",$QS(LA7ROOT,2)="AD",$QS(LA7ROOT,3)=LA76247,$QS(LA7ROOT,4)=NCS,$QS(LA7ROOT,5)=CODE D  Q
"RTN","LA7VHLU6",207,0)
 . . S X=$QS(LA7ROOT,6)
"RTN","LA7VHLU6",208,0)
 . . I X S LA7Y="-1^^^^"_X
"RTN","LA7VHLU6",209,0)
 . I $S(LA76247=7:1,LA76247=21:1,1:0) S LA7Y=$$SCT2KB(CODE,TEXT,NCS,VERSION) Q
"RTN","LA7VHLU6",210,0)
 . S LA7HIER=$$PRID(CODE,NCS,LA764061)
"RTN","LA7VHLU6",211,0)
 . S LA7FILE=$P(LA7HIER,"^",2)
"RTN","LA7VHLU6",212,0)
 . I LA7FILE S LA7Y=$$SCT2IEN(CODE,TEXT,VERSION,LA7FILE,LA76247,LA76248)_";"_$P($$ROOT^DILFD(LA7FILE),"^",2)_LA7Y
"RTN","LA7VHLU6",213,0)
 ;
"RTN","LA7VHLU6",214,0)
 ; If code system is LOCAL (HL7 "L" OR "99XXX") and for a specific interface
"RTN","LA7VHLU6",215,0)
 I LOCAL,LA76248 D
"RTN","LA7VHLU6",216,0)
 . S LA7ROOT=$Q(^LAB(62.47,"AD1",LA76247,LA76248,NCS,CODE)),LA764061=0
"RTN","LA7VHLU6",217,0)
 . I LA7ROOT="" Q
"RTN","LA7VHLU6",218,0)
 . I $QS(LA7ROOT,2)="AD1",$QS(LA7ROOT,3)=LA76247,$QS(LA7ROOT,4)=LA76248,$QS(LA7ROOT,5)=NCS,$QS(LA7ROOT,6)=CODE D
"RTN","LA7VHLU6",219,0)
 . . S LA764061=$QS(LA7ROOT,7),DA=$QS(LA7ROOT,8)
"RTN","LA7VHLU6",220,0)
 . . S X=$P(^LAB(62.47,LA76247,1,DA,0),"^",4)
"RTN","LA7VHLU6",221,0)
 . . I X S LA7Y="-1^^^^"_X Q
"RTN","LA7VHLU6",222,0)
 . . S LA7FILE=$P($G(^LAB(62.47,LA76247,1,DA,2)),"^")
"RTN","LA7VHLU6",223,0)
 . . I LA7FILE S LA7Y=LA7FILE
"RTN","LA7VHLU6",224,0)
 . . I LA764061 S LA7Y=LA7Y_"^"_$P($G(^LAB(64.061,LA764061,63)),"^",1,3)
"RTN","LA7VHLU6",225,0)
 ;
"RTN","LA7VHLU6",226,0)
 Q LA7Y
"RTN","LA7VHLU6",227,0)
 ;
"RTN","LA7VHLU6",228,0)
 ;
"RTN","LA7VHLU6",229,0)
SCT2KB(CODE,TEXT,NCS,VERSION) ; Convert Susceptibility codes to local codes.
"RTN","LA7VHLU6",230,0)
 ; Call with  CODE = susceptibility code
"RTN","LA7VHLU6",231,0)
 ;            TEXT = code text
"RTN","LA7VHLU6",232,0)
 ;             NCS = name of coding system (SCT, 99xxx, L)
"RTN","LA7VHLU6",233,0)
 ;         VERSION = code system version id
"RTN","LA7VHLU6",234,0)
 ;
"RTN","LA7VHLU6",235,0)
 ; Returns    LA7Y = local susceptibility code
"RTN","LA7VHLU6",236,0)
 ;
"RTN","LA7VHLU6",237,0)
 N LA7Y
"RTN","LA7VHLU6",238,0)
 S LA7Y=""
"RTN","LA7VHLU6",239,0)
 I NCS="SCT" S LA7Y=$S(CODE=131196009:"S",CODE=260357007:"MS",CODE=30714006:"R",CODE=264841006:"I",1:"")
"RTN","LA7VHLU6",240,0)
 Q LA7Y
"RTN","LA7VHLU6",241,0)
 ;
"RTN","LA7VHLU6",242,0)
 ;
"RTN","LA7VHLU6",243,0)
SCT2PSTG(CODE,TEXT,NCS,VERSION) ; Convert Parasite Stage codes to local codes.
"RTN","LA7VHLU6",244,0)
 ; Call with  CODE = parasite stage code
"RTN","LA7VHLU6",245,0)
 ;            TEXT = code text
"RTN","LA7VHLU6",246,0)
 ;             NCS = name of coding system (SCT, 99xxx, L)
"RTN","LA7VHLU6",247,0)
 ;         VERSION = code system version id
"RTN","LA7VHLU6",248,0)
 ;
"RTN","LA7VHLU6",249,0)
 ; Returns    LA7Y = local parasite stage code
"RTN","LA7VHLU6",250,0)
 ;
"RTN","LA7VHLU6",251,0)
 N LA7Y
"RTN","LA7VHLU6",252,0)
 S LA7Y=""
"RTN","LA7VHLU6",253,0)
 I NCS="SCT" S LA7Y=$S(CODE=103551003:"T",CODE=103552005:"C",CODE=116990009:"E",CODE=48458007:"L",CODE=284701003:"S",CODE=103537003:"G",CODE=2105009:"M",CODE=103568004:"R",CODE=2105009:"F",1:"")
"RTN","LA7VHLU6",254,0)
 Q LA7Y
"RTN","LA7VHLU6",255,0)
 ;
"RTN","LA7VHLU6",256,0)
 ;
"RTN","LA7VHLU6",257,0)
SCT2PN(CODE,TEXT,NCS,VERSION) ; Convert Positive/Negative to local codes.
"RTN","LA7VHLU6",258,0)
 ; Call with  CODE = positive/negative
"RTN","LA7VHLU6",259,0)
 ;            TEXT = code text
"RTN","LA7VHLU6",260,0)
 ;             NCS = name of coding system (SCT, 99xxx, L)
"RTN","LA7VHLU6",261,0)
 ;         VERSION = code system version id
"RTN","LA7VHLU6",262,0)
 ;
"RTN","LA7VHLU6",263,0)
 ; Returns    LA7Y = local positive/negative code
"RTN","LA7VHLU6",264,0)
 ;
"RTN","LA7VHLU6",265,0)
 N LA7Y
"RTN","LA7VHLU6",266,0)
 S LA7Y=""
"RTN","LA7VHLU6",267,0)
 I NCS="SCT" S LA7Y=$S(CODE=10828004:"P",CODE=260385009:"N",1:"")
"RTN","LA7VHLU6",268,0)
 Q LA7Y
"RTN","LA7VHLU7")
0^15^B44598323
"RTN","LA7VHLU7",1,0)
LA7VHLU7 ;DALOI/JDB - HL7 utility ;07/07/09  14:19
"RTN","LA7VHLU7",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU7",3,0)
 ;
"RTN","LA7VHLU7",4,0)
 Q
"RTN","LA7VHLU7",5,0)
 ;
"RTN","LA7VHLU7",6,0)
CODSYS(FLD2ARR,RSLT,CODSYS) ;
"RTN","LA7VHLU7",7,0)
 ; HL7 Coding System from HL7 Component types
"RTN","LA7VHLU7",8,0)
 ; Input
"RTN","LA7VHLU7",9,0)
 ; FLD2ARR:<byref> The array that may contain coding system info.
"RTN","LA7VHLU7",10,0)
 ;         This array was generated by the FLD2ARR function.
"RTN","LA7VHLU7",11,0)
 ;    RSLT:<byref> Array to hold the results
"RTN","LA7VHLU7",12,0)
 ;  CODSYS:  <opt> If specified this function will only look
"RTN","LA7VHLU7",13,0)
 ;         for the coding system specified.
"RTN","LA7VHLU7",14,0)
 ; Output
"RTN","LA7VHLU7",15,0)
 ;    RSLT: If a CODSYS was specified and the coding system was
"RTN","LA7VHLU7",16,0)
 ;          found then the array will be defined as follows:
"RTN","LA7VHLU7",17,0)
 ;              RSLT(1)=1st field of CE
"RTN","LA7VHLU7",18,0)
 ;              RSLT(2)=2nd field of CE
"RTN","LA7VHLU7",19,0)
 ;              RSLT(3)=3rd field of CE
"RTN","LA7VHLU7",20,0)
 ;          If a CODSYS was not specified then the array will
"RTN","LA7VHLU7",21,0)
 ;          contain an index of all potential coding systems
"RTN","LA7VHLU7",22,0)
 ;              RSLT("B","99LRE",3)=""
"RTN","LA7VHLU7",23,0)
 ;              RSLT("B","99VA64",6)=""
"RTN","LA7VHLU7",24,0)
 ;          where the 3rd subscript indicates the subscript level
"RTN","LA7VHLU7",25,0)
 ;          in the original FLD2ARR array.
"RTN","LA7VHLU7",26,0)
 N I,X
"RTN","LA7VHLU7",27,0)
 S CODSYS=$G(CODSYS)
"RTN","LA7VHLU7",28,0)
 S I=0
"RTN","LA7VHLU7",29,0)
 S RSLT=""
"RTN","LA7VHLU7",30,0)
 F  S I=$O(FLD2ARR(I)) Q:'I  D  ;
"RTN","LA7VHLU7",31,0)
 . Q:I#3  ;code sys is always on 3rd tuplet
"RTN","LA7VHLU7",32,0)
 . S X=FLD2ARR(I)
"RTN","LA7VHLU7",33,0)
 . I CODSYS'="" I CODSYS=X D  ;
"RTN","LA7VHLU7",34,0)
 . . S RSLT=I
"RTN","LA7VHLU7",35,0)
 . . S RSLT(1)=$G(FLD2ARR(I-2))
"RTN","LA7VHLU7",36,0)
 . . S RSLT(2)=$G(FLD2ARR(I-1))
"RTN","LA7VHLU7",37,0)
 . . S RSLT(3)=X
"RTN","LA7VHLU7",38,0)
 . I CODSYS="" I X'="" S RSLT("B",X,I)=""
"RTN","LA7VHLU7",39,0)
 Q
"RTN","LA7VHLU7",40,0)
 ;
"RTN","LA7VHLU7",41,0)
FLD2ARR(VAR,FSECH) ;
"RTN","LA7VHLU7",42,0)
 ; Places an HL7 field into a local array
"RTN","LA7VHLU7",43,0)
 ; Requires LA7FS,LA7CS,LA7ECH
"RTN","LA7VHLU7",44,0)
 ; Inputs
"RTN","LA7VHLU7",45,0)
 ;   VAR :<byref> The local variable to hold the array
"RTN","LA7VHLU7",46,0)
 ;       :VAR should be set to the complete HL7 field's data
"RTN","LA7VHLU7",47,0)
 ;       :before calling into this routine.
"RTN","LA7VHLU7",48,0)
 ; FSECH :<opt> HL7 Field Sep & Encoding Characters
"RTN","LA7VHLU7",49,0)
 ;       :Defaults to LA7FS_LA7ECH
"RTN","LA7VHLU7",50,0)
 ; Outputs
"RTN","LA7VHLU7",51,0)
 ;   VAR :Will contain the added nodes
"RTN","LA7VHLU7",52,0)
 ;       :VAR(1) = component #1
"RTN","LA7VHLU7",53,0)
 ;       :VAR(1,1) = subcomponent #1 of component #1 (HL7 escaped)
"RTN","LA7VHLU7",54,0)
 ;       : The component is not HL7 unescaped but the subcomponent
"RTN","LA7VHLU7",55,0)
 ;       : is HL7 unescaped
"RTN","LA7VHLU7",56,0)
 ;
"RTN","LA7VHLU7",57,0)
 N I,II,X,X2,Z,HLEC
"RTN","LA7VHLU7",58,0)
 S Z=VAR
"RTN","LA7VHLU7",59,0)
 S FSECH=$G(FSECH)
"RTN","LA7VHLU7",60,0)
 S HLEC=""
"RTN","LA7VHLU7",61,0)
 D EC(.HLEC,FSECH)
"RTN","LA7VHLU7",62,0)
 F I=1:1:$L(Z,HLEC("CS")) D  ;
"RTN","LA7VHLU7",63,0)
 . S (X,X2)=$$COMP(I,Z,HLEC("ECH"))
"RTN","LA7VHLU7",64,0)
 . I X2'[HLEC("SS") S X2=$$UNESC^LA7VHLU3(X2,HLEC)
"RTN","LA7VHLU7",65,0)
 . S VAR(I)=X2
"RTN","LA7VHLU7",66,0)
 . I X[HLEC("SS") F II=1:1:$L(X,HLEC("SS")) D  ;
"RTN","LA7VHLU7",67,0)
 . . S X2=$$SUB(II,X,HLEC("ECH"))
"RTN","LA7VHLU7",68,0)
 . . S VAR(I,II)=$$UNESC^LA7VHLU3(X2,HLEC)
"RTN","LA7VHLU7",69,0)
 . ;
"RTN","LA7VHLU7",70,0)
 Q
"RTN","LA7VHLU7",71,0)
 ;
"RTN","LA7VHLU7",72,0)
VALUE(STR,FSECH) ;
"RTN","LA7VHLU7",73,0)
 ; For use with the generated FLD2ARR array
"RTN","LA7VHLU7",74,0)
 ; Call VALUE to return the unescaped value of the first subcomponent
"RTN","LA7VHLU7",75,0)
 ; ie  X(1)="A~B~C"  X(1,1)=A  X(1,2)=B  X(1,3)=C
"RTN","LA7VHLU7",76,0)
 ;     $$VALUE(X(1),"^@{}~") returns "A"
"RTN","LA7VHLU7",77,0)
 N X,HLEC
"RTN","LA7VHLU7",78,0)
 S FSECH=$G(FSECH)
"RTN","LA7VHLU7",79,0)
 S HLEC=""
"RTN","LA7VHLU7",80,0)
 D EC(.HLEC,FSECH)
"RTN","LA7VHLU7",81,0)
 S X=$P(STR,HLEC("SS"))
"RTN","LA7VHLU7",82,0)
 Q $$UNESC^LA7VHLU3(X,HLEC)
"RTN","LA7VHLU7",83,0)
 ;
"RTN","LA7VHLU7",84,0)
FIELD(FLD,FS) ;
"RTN","LA7VHLU7",85,0)
 ; Gets the field from an HL7 segment
"RTN","LA7VHLU7",86,0)
 ; Requires the LA7SEG array
"RTN","LA7VHLU7",87,0)
 ;
"RTN","LA7VHLU7",88,0)
 ; Inputs
"RTN","LA7VHLU7",89,0)
 ;  FLD  :The HL7 segment's field number
"RTN","LA7VHLU7",90,0)
 ;   FS  :<opt> The HL7 Field Separator character
"RTN","LA7VHLU7",91,0)
 ;       : Defaults to LA7FS
"RTN","LA7VHLU7",92,0)
 ; Output
"RTN","LA7VHLU7",93,0)
 ;   The data for the specified field
"RTN","LA7VHLU7",94,0)
 ;
"RTN","LA7VHLU7",95,0)
 S FS=$G(FS)
"RTN","LA7VHLU7",96,0)
 I FS="" S FS=$G(LA7FS)
"RTN","LA7VHLU7",97,0)
 Q $$P^LA7VHLU(.LA7SEG,+$G(FLD)+1,FS)
"RTN","LA7VHLU7",98,0)
 ;
"RTN","LA7VHLU7",99,0)
COMP(POS,STR,ECH) ;
"RTN","LA7VHLU7",100,0)
 ; Gets the component from an HL7 field
"RTN","LA7VHLU7",101,0)
 ;
"RTN","LA7VHLU7",102,0)
 ; Inputs
"RTN","LA7VHLU7",103,0)
 ; POS  :The HL7 component's position number
"RTN","LA7VHLU7",104,0)
 ; STR  :The string that holds the complete HL7 field data
"RTN","LA7VHLU7",105,0)
 ;      :for this particular component
"RTN","LA7VHLU7",106,0)
 ; ECH  :<opt> The HL7 Encoding string
"RTN","LA7VHLU7",107,0)
 ;      :Defaults to LA7ECH
"RTN","LA7VHLU7",108,0)
 ; Output
"RTN","LA7VHLU7",109,0)
 ;    The data for the specified component
"RTN","LA7VHLU7",110,0)
 ;
"RTN","LA7VHLU7",111,0)
 N X
"RTN","LA7VHLU7",112,0)
 S ECH=$G(ECH)
"RTN","LA7VHLU7",113,0)
 I ECH="" S ECH=$G(LA7ECH)
"RTN","LA7VHLU7",114,0)
 S X(0)=STR
"RTN","LA7VHLU7",115,0)
 Q $$P^LA7VHLU(.X,POS,$E(ECH,1,1))
"RTN","LA7VHLU7",116,0)
 ;
"RTN","LA7VHLU7",117,0)
SUB(POS,STR,ECH) ;
"RTN","LA7VHLU7",118,0)
 ; Gets the subcomponent from an HL7 component
"RTN","LA7VHLU7",119,0)
 ;
"RTN","LA7VHLU7",120,0)
 ; Inputs
"RTN","LA7VHLU7",121,0)
 ; POS  :The HL7 subcomponent's position number
"RTN","LA7VHLU7",122,0)
 ; STR  :The string that holds the complete HL7 component data
"RTN","LA7VHLU7",123,0)
 ;      :for this particular subcomponent
"RTN","LA7VHLU7",124,0)
 ; ECH  :<opt> The HL7 Encoding string
"RTN","LA7VHLU7",125,0)
 ;      : Defaults to LA7ECH
"RTN","LA7VHLU7",126,0)
 ; Output
"RTN","LA7VHLU7",127,0)
 ;    The data for the specified subcomponent
"RTN","LA7VHLU7",128,0)
 N X
"RTN","LA7VHLU7",129,0)
 S ECH=$G(ECH)
"RTN","LA7VHLU7",130,0)
 I ECH="" S ECH=$G(LA7ECH)
"RTN","LA7VHLU7",131,0)
 S X(0)=STR
"RTN","LA7VHLU7",132,0)
 Q $$P^LA7VHLU(.X,POS,$E(ECH,4))
"RTN","LA7VHLU7",133,0)
 ;
"RTN","LA7VHLU7",134,0)
EC(VAR,FSEC) ;
"RTN","LA7VHLU7",135,0)
 ; Builds the HL7 Field Sep and Encoding Characters array
"RTN","LA7VHLU7",136,0)
 ;
"RTN","LA7VHLU7",137,0)
 ; Inputs
"RTN","LA7VHLU7",138,0)
 ;   VAR :<byref> <output>
"RTN","LA7VHLU7",139,0)
 ;  FSEC : <opt> The HL7 Field Separator and Encoding Characters
"RTN","LA7VHLU7",140,0)
 ;       : Uses LA7FS and LA7ECH if not defined
"RTN","LA7VHLU7",141,0)
 ; Outputs
"RTN","LA7VHLU7",142,0)
 ;   VAR : VAR=FSEC   VAR("FS")=Field Separator
"RTN","LA7VHLU7",143,0)
 ;       : VAR("CS")=Component Sep  VAR("SS")=Subcomponent Sep
"RTN","LA7VHLU7",144,0)
 ;       : VAR("ECH")=Encoding Chars
"RTN","LA7VHLU7",145,0)
 ;
"RTN","LA7VHLU7",146,0)
 S FSEC=$G(FSEC)
"RTN","LA7VHLU7",147,0)
 I FSEC="" S FSEC=$G(LA7FS)_$G(LA7ECH)
"RTN","LA7VHLU7",148,0)
 S VAR=FSEC
"RTN","LA7VHLU7",149,0)
 S VAR("FS")=$E(FSEC,1)
"RTN","LA7VHLU7",150,0)
 S VAR("ECH")=$E(FSEC,2,5)
"RTN","LA7VHLU7",151,0)
 S VAR("CS")=$E(FSEC,2,2)
"RTN","LA7VHLU7",152,0)
 S VAR("RS")=$E(FSEC,3,3)
"RTN","LA7VHLU7",153,0)
 S VAR("EC")=$E(FSEC,4,4)
"RTN","LA7VHLU7",154,0)
 S VAR("SS")=$E(FSEC,5,5)
"RTN","LA7VHLU7",155,0)
 Q
"RTN","LA7VHLU7",156,0)
 ;
"RTN","LA7VHLU7",157,0)
 ;
"RTN","LA7VHLU7",158,0)
DBSTORE(FLD2ARR,API,VERS,R6247,R6248,OUT) ;
"RTN","LA7VHLU7",159,0)
 ;
"RTN","LA7VHLU7",160,0)
 ; Inputs
"RTN","LA7VHLU7",161,0)
 ; FLD2ARR <byref>
"RTN","LA7VHLU7",162,0)
 ;     API : <opt>
"RTN","LA7VHLU7",163,0)
 ;    VERS : Version number
"RTN","LA7VHLU7",164,0)
 ;   R6247 : <opt> File #62.47 IEN (Concept)
"RTN","LA7VHLU7",165,0)
 ;   R6248 : <opt> File #62.48 IEN
"RTN","LA7VHLU7",166,0)
 ;     OUT : <opt> <byref> The 3rd piece of the tuplet used that
"RTN","LA7VHLU7",167,0)
 ;         : the DBSTORE was found for.
"RTN","LA7VHLU7",168,0)
 ; Output
"RTN","LA7VHLU7",169,0)
 ;   The corresponding API's output (data or null) or -99 if nothing
"RTN","LA7VHLU7",170,0)
 ;   Also see variable OUT above.
"RTN","LA7VHLU7",171,0)
 ;   ie: OBX3="123\GARDIA\SCT" and a valid DBSTORE was found
"RTN","LA7VHLU7",172,0)
 ;   then OUT=3
"RTN","LA7VHLU7",173,0)
 ;
"RTN","LA7VHLU7",174,0)
 N DBSTORE,I,CODE,STR,CODESYS,X,X2
"RTN","LA7VHLU7",175,0)
 S API=+$G(API,1)
"RTN","LA7VHLU7",176,0)
 S VERS=$G(VERS,1)
"RTN","LA7VHLU7",177,0)
 S R6247=$G(R6247)
"RTN","LA7VHLU7",178,0)
 S R6248=+$G(R6248)
"RTN","LA7VHLU7",179,0)
 I R6248<1 S R6248=$G(LA76248)
"RTN","LA7VHLU7",180,0)
 K OUT
"RTN","LA7VHLU7",181,0)
 F I=3:3:$O(FLD2ARR("A"),-1) D  Q:$D(DBSTORE)  ;
"RTN","LA7VHLU7",182,0)
 . S CODE=$G(FLD2ARR(I-2))
"RTN","LA7VHLU7",183,0)
 . S STR=$G(FLD2ARR(I-1))
"RTN","LA7VHLU7",184,0)
 . S CODESYS=$G(FLD2ARR(I))
"RTN","LA7VHLU7",185,0)
 . Q:CODESYS=""  Q:CODE=""  ;
"RTN","LA7VHLU7",186,0)
 . I API=1 D  ;
"RTN","LA7VHLU7",187,0)
 . . N I
"RTN","LA7VHLU7",188,0)
 . . S X=$$HL2LAH^LA7VHLU6(CODE,STR,CODESYS,VERS,R6248,$G(LA7SS))
"RTN","LA7VHLU7",189,0)
 . . S X2=+$P(X,"^",1)
"RTN","LA7VHLU7",190,0)
 . . I X2=-1!(X2>0) S DBSTORE=X
"RTN","LA7VHLU7",191,0)
 . I API=2 D  ;
"RTN","LA7VHLU7",192,0)
 . . N I
"RTN","LA7VHLU7",193,0)
 . . S X=$$HL2VA^LA7VHLU6(CODE,STR,CODESYS,VERS,R6247,R6248)
"RTN","LA7VHLU7",194,0)
 . . S X2=+$P(X,"^",1)
"RTN","LA7VHLU7",195,0)
 . . I X2=-1!(X2>0) S DBSTORE=X
"RTN","LA7VHLU7",196,0)
 . I $D(DBSTORE) S OUT=I
"RTN","LA7VHLU7",197,0)
 I '$D(DBSTORE) S DBSTORE=-99
"RTN","LA7VHLU7",198,0)
 Q DBSTORE
"RTN","LA7VHLU7",199,0)
 ;
"RTN","LA7VHLU7",200,0)
REPT2ARR(STR,FSEC,OUT) ;
"RTN","LA7VHLU7",201,0)
 ; Puts an HL7 Repeating field into an array.
"RTN","LA7VHLU7",202,0)
 ; The array nodes are also HL7 decoded.
"RTN","LA7VHLU7",203,0)
 ; Input
"RTN","LA7VHLU7",204,0)
 ;   STR : Input text that may contain the HL7 repeat character
"RTN","LA7VHLU7",205,0)
 ;  FSEC : HL7 Field Separator and Encoding Characters string
"RTN","LA7VHLU7",206,0)
 ;   OUT :<byref> The array that holds the split string
"RTN","LA7VHLU7",207,0)
 ; Output
"RTN","LA7VHLU7",208,0)
 ;       : see OUT variable above
"RTN","LA7VHLU7",209,0)
 N I,RPT,J
"RTN","LA7VHLU7",210,0)
 S RPT=$E(FSEC,3)
"RTN","LA7VHLU7",211,0)
 S J=0
"RTN","LA7VHLU7",212,0)
 I $D(OUT)>9 S J=+$O(OUT("A"),-1) ;find next available subscr
"RTN","LA7VHLU7",213,0)
 F I=1:1:$L(STR,RPT) S OUT(I+J)=$P(STR,RPT,I) S OUT(I+J)=$$UNESC^LA7VHLU3(OUT(I+J),FSEC)
"RTN","LA7VHLU7",214,0)
 Q
"RTN","LA7VHLU7",215,0)
 ;
"RTN","LA7VHLU7",216,0)
SEG2FLDS(IN,SUBSCR,FS) ;
"RTN","LA7VHLU7",217,0)
 ;  Inputs
"RTN","LA7VHLU7",218,0)
 ;      IN        Closed root for input data ie ^TMP($J,"I",0)
"RTN","LA7VHLU7",219,0)
 ;                Each node is sequentially numbered
"RTN","LA7VHLU7",220,0)
 ;  SUBSCR <opt>  Subscript name to use in ^TMP global for output
"RTN","LA7VHLU7",221,0)
 ;                Defaults to "S2F"
"RTN","LA7VHLU7",222,0)
 ;                Output = ^TMP($$RTNNM-"S2F",$J,SUBSCR)
"RTN","LA7VHLU7",223,0)
 ;                This setting allows using the utility numerous
"RTN","LA7VHLU7",224,0)
 ;                times in the same routine (ie recursive entry)
"RTN","LA7VHLU7",225,0)
 ;      FS <opt>  Field Separator (default=^)
"RTN","LA7VHLU7",226,0)
 ;                Useful when separating HL7 coded elements,etc.
"RTN","LA7VHLU7",227,0)
 ;
"RTN","LA7VHLU7",228,0)
 ; Converts only one HL7 segment at a time.  Puts the
"RTN","LA7VHLU7",229,0)
 ; segment into an ordered array where the field number is the
"RTN","LA7VHLU7",230,0)
 ; primary subscript.  If the field is bigger than GBLSIZE then
"RTN","LA7VHLU7",231,0)
 ; the field will continue on the next subscript
"RTN","LA7VHLU7",232,0)
 ; HLSEG(1)="OBR^2^3^4^5^6^7^8^9^10^11^"
"RTN","LA7VHLU7",233,0)
 ; HLSEG(2)="12^13^14^This field is longer than GBLSIZE^16^17^18^19^"
"RTN","LA7VHLU7",234,0)
 ; HLSEG(3)="20^21^22^23^24^25^26^27^28^29^30"
"RTN","LA7VHLU7",235,0)
 ;
"RTN","LA7VHLU7",236,0)
 ; OUT(1,0)=OBR
"RTN","LA7VHLU7",237,0)
 ; OUT(2,0)=2
"RTN","LA7VHLU7",238,0)
 ; ...
"RTN","LA7VHLU7",239,0)
 ; OUT(15,0)=first 245 characters
"RTN","LA7VHLU7",240,0)
 ; OUT(15,1)=next 245 characters
"RTN","LA7VHLU7",241,0)
 ; OUT(15,2)=and so on....
"RTN","LA7VHLU7",242,0)
 ; ...
"RTN","LA7VHLU7",243,0)
 ;
"RTN","LA7VHLU7",244,0)
 N SUB,DATA,SEGNUM,FLDNUM,FLD,D2,D3,SEQ,STR
"RTN","LA7VHLU7",245,0)
 N GBLSIZE,CONTFLD,ONODE,INODE,NODE
"RTN","LA7VHLU7",246,0)
 N OUT
"RTN","LA7VHLU7",247,0)
 S GBLSIZE=245
"RTN","LA7VHLU7",248,0)
 S FS=$G(FS)
"RTN","LA7VHLU7",249,0)
 S IN=$G(IN)
"RTN","LA7VHLU7",250,0)
 S SUBSCR=$G(SUBSCR)
"RTN","LA7VHLU7",251,0)
 I IN="" W !,"In not specified" Q
"RTN","LA7VHLU7",252,0)
 I SUBSCR="" S SUBSCR="S2F"
"RTN","LA7VHLU7",253,0)
 I $E(IN,$L(IN),$L(IN))'=")" W !,"Input not closed array" Q
"RTN","LA7VHLU7",254,0)
 S SUB=0
"RTN","LA7VHLU7",255,0)
 S SEGNUM=0
"RTN","LA7VHLU7",256,0)
 S FLDNUM=0
"RTN","LA7VHLU7",257,0)
 S SEQ=0
"RTN","LA7VHLU7",258,0)
 S ONODE="^TMP("""_$$RTNNM()_"-S2F"","_$J_","""_SUBSCR_""")"
"RTN","LA7VHLU7",259,0)
 K @ONODE ;kill output array
"RTN","LA7VHLU7",260,0)
 S ONODE=$E(ONODE,1,$L(ONODE)-1) ;;strip trailing )
"RTN","LA7VHLU7",261,0)
 S INODE=$E(IN,1,$L(IN)-1)
"RTN","LA7VHLU7",262,0)
 S INODE=INODE_",SUB)"
"RTN","LA7VHLU7",263,0)
 S SUB=0
"RTN","LA7VHLU7",264,0)
 F  S SUB=$O(@INODE) Q:SUB=""  D  ;
"RTN","LA7VHLU7",265,0)
 . S DATA=@INODE
"RTN","LA7VHLU7",266,0)
 . I FS="" S FS=$E(DATA,4,4)
"RTN","LA7VHLU7",267,0)
 . F FLD=1:1:$L(DATA,FS) D  ;
"RTN","LA7VHLU7",268,0)
 . . S CONTFLD=0
"RTN","LA7VHLU7",269,0)
 . . S D2=$P(DATA,FS,FLD)
"RTN","LA7VHLU7",270,0)
 . . ; handle field continuance
"RTN","LA7VHLU7",271,0)
 . . I (FLD=1&(FLDNUM>1))  D  ;
"RTN","LA7VHLU7",272,0)
 . . . S CONTFLD=1
"RTN","LA7VHLU7",273,0)
 . . . S NODE=ONODE_","_FLDNUM_","_SEQ_")"
"RTN","LA7VHLU7",274,0)
 . . . S D3=$G(@NODE)
"RTN","LA7VHLU7",275,0)
 . . I 'CONTFLD D  ;
"RTN","LA7VHLU7",276,0)
 . . . S FLDNUM=FLDNUM+1 S SEQ=0
"RTN","LA7VHLU7",277,0)
 . . . S NODE=ONODE_","_FLDNUM_","_SEQ_")"
"RTN","LA7VHLU7",278,0)
 . . . S @NODE=D2
"RTN","LA7VHLU7",279,0)
 . . ;
"RTN","LA7VHLU7",280,0)
 . . I CONTFLD D  ;
"RTN","LA7VHLU7",281,0)
 . . . N I,X,CNT,STR
"RTN","LA7VHLU7",282,0)
 . . . S STR=D3_D2
"RTN","LA7VHLU7",283,0)
 . . . I $L(STR)'>GBLSIZE D  Q  ;
"RTN","LA7VHLU7",284,0)
 . . . . S NODE=ONODE_","_FLDNUM_","_SEQ_")"
"RTN","LA7VHLU7",285,0)
 . . . . S @NODE=STR
"RTN","LA7VHLU7",286,0)
 . . . ;
"RTN","LA7VHLU7",287,0)
 . . . ; Split apart and store if $L(STR)>GBLSIZE
"RTN","LA7VHLU7",288,0)
 . . . S X=$L(STR)\GBLSIZE S:$P(X,".",2)>0 X=X+1
"RTN","LA7VHLU7",289,0)
 . . . S CNT=$P(X,".",1)
"RTN","LA7VHLU7",290,0)
 . . . F I=1:1:CNT D  ;
"RTN","LA7VHLU7",291,0)
 . . . . I I=1 S NODE=ONODE_","_FLDNUM_","_SEQ_")"
"RTN","LA7VHLU7",292,0)
 . . . . I I>1 S SEQ=SEQ+1 S NODE=ONODE_","_FLDNUM_","_SEQ_")"
"RTN","LA7VHLU7",293,0)
 . . . . S X=I*GBLSIZE
"RTN","LA7VHLU7",294,0)
 . . . . S @NODE=$E(STR,(X-GBLSIZE)+1,X)
"RTN","LA7VHLU7",295,0)
 . . . ;
"RTN","LA7VHLU7",296,0)
 . . ;
"RTN","LA7VHLU7",297,0)
 . ;
"RTN","LA7VHLU7",298,0)
 ;
"RTN","LA7VHLU7",299,0)
 Q
"RTN","LA7VHLU7",300,0)
 ;
"RTN","LA7VHLU7",301,0)
RTNNM() ;
"RTN","LA7VHLU7",302,0)
 ; Returns this routine's name (used for namespacing)
"RTN","LA7VHLU7",303,0)
 Q $T(+0)
"RTN","LA7VHLU8")
0^71^B10483894
"RTN","LA7VHLU8",1,0)
LA7VHLU8 ;DALOI/JMC - LAB Application Acknowledgment builder;Nov 14, 2007 ;04/30/10  17:16
"RTN","LA7VHLU8",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU8",3,0)
 ;
"RTN","LA7VHLU8",4,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VHLU8",5,0)
 ;
"RTN","LA7VHLU8",6,0)
 Q
"RTN","LA7VHLU8",7,0)
 ;
"RTN","LA7VHLU8",8,0)
 ;
"RTN","LA7VHLU8",9,0)
ACK(LA7) ; Returns the application acknowledgement to the sending application.
"RTN","LA7VHLU8",10,0)
 ; Indicates any error encountered in processing the message.
"RTN","LA7VHLU8",11,0)
 ; Used when messages are processed separately from when they are received.
"RTN","LA7VHLU8",12,0)
 ;  Examples LEDI ORM message that builds Lab Pending Order file.
"RTN","LA7VHLU8",13,0)
 ;
"RTN","LA7VHLU8",14,0)
 ; Called by routine LA7VIN1
"RTN","LA7VHLU8",15,0)
 ;
"RTN","LA7VHLU8",16,0)
 ; Call with LA7 array passed by reference
"RTN","LA7VHLU8",17,0)
 ;      LA7(62.48)=ien of related configuration in file #62.48
"RTN","LA7VHLU8",18,0)
 ;      LA7(62.49)=ien of message in file #62.49 being acknowledged
"RTN","LA7VHLU8",19,0)
 ;      LA7("ACK")=acknowledgment status (AA, AE, AR)
"RTN","LA7VHLU8",20,0)
 ;      LA7("MSG")=text of error message to be returned
"RTN","LA7VHLU8",21,0)
 ;
"RTN","LA7VHLU8",22,0)
 N HL,HLMTIENS,I,LA6249,LA76248,LA7X,LA7Y
"RTN","LA7VHLU8",23,0)
 ;
"RTN","LA7VHLU8",24,0)
 ; Check for entry in 62.48
"RTN","LA7VHLU8",25,0)
 S LA76248=+$G(LA7(62.48))
"RTN","LA7VHLU8",26,0)
 I '$G(LA76248)!('$D(^LAHM(62.48,LA76248,0))) Q
"RTN","LA7VHLU8",27,0)
 S LA76248(0)=$G(^LAHM(62.48,LA7(62.48),0)),LA7X=$P(LA76248(0),"^")
"RTN","LA7VHLU8",28,0)
 ;
"RTN","LA7VHLU8",29,0)
 ; Check for entry in 62.49
"RTN","LA7VHLU8",30,0)
 S LA6249=+$G(LA7(62.49))
"RTN","LA7VHLU8",31,0)
 I '$G(LA6249)!('$D(^LAHM(62.49,LA6249,0))) Q
"RTN","LA7VHLU8",32,0)
 F I=0,700 S LA6249(I)=$G(^LAHM(62.49,LA6249,I))
"RTN","LA7VHLU8",33,0)
 ;
"RTN","LA7VHLU8",34,0)
 ; Call reprocess message to build and send ACK and clear purge flag
"RTN","LA7VHLU8",35,0)
 S LA7Y=$$REPROC^HLUTIL($P(LA6249(700),";",2),"D BLDACK^LA7VHLU8")
"RTN","LA7VHLU8",36,0)
 I LA7Y=0 S HLMTIENS=$P(LA6249(700),";",2),LA7X=$$TOPURG^HLUTIL()
"RTN","LA7VHLU8",37,0)
 ;
"RTN","LA7VHLU8",38,0)
 Q
"RTN","LA7VHLU8",39,0)
 ;
"RTN","LA7VHLU8",40,0)
 ;
"RTN","LA7VHLU8",41,0)
BLDACK ; Create/initialize HL ACK (ORR) message
"RTN","LA7VHLU8",42,0)
 ;
"RTN","LA7VHLU8",43,0)
 ;ZEXCEPT:LA7,LA76248
"RTN","LA7VHLU8",44,0)
 ;
"RTN","LA7VHLU8",45,0)
 N GBL,HLL,HLP,I,X
"RTN","LA7VHLU8",46,0)
 N LA76249,LA7AERR,LA7DATA,LA7ECH,LA7FS,LA7ID,LA7LL,LA7MID,LA7MSA,LA7MSH,LA7X,LA7Y
"RTN","LA7VHLU8",47,0)
 ;
"RTN","LA7VHLU8",48,0)
 ; No application acknowledgement
"RTN","LA7VHLU8",49,0)
 I $G(HL("APAT"))="NE" Q
"RTN","LA7VHLU8",50,0)
 ;
"RTN","LA7VHLU8",51,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7VHLU8",52,0)
 I LA7("ACK")'="AA",$G(HL("APAT"))="SU" Q
"RTN","LA7VHLU8",53,0)
 ;
"RTN","LA7VHLU8",54,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7VHLU8",55,0)
 I LA7("ACK")="AA",$G(HL("APAT"))="ER" Q
"RTN","LA7VHLU8",56,0)
 ;
"RTN","LA7VHLU8",57,0)
 S GBL="^TMP(""HLA"","_$J_")"
"RTN","LA7VHLU8",58,0)
 K @GBL
"RTN","LA7VHLU8",59,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHLU8",60,0)
 D RSPINIT^HLFNC2(HL("EIDS"),.HL)
"RTN","LA7VHLU8",61,0)
 S LA7FS=HL("RFS"),LA7ECH=HL("RECH")
"RTN","LA7VHLU8",62,0)
 ;
"RTN","LA7VHLU8",63,0)
 ; Build pseudo MSH for file #62.49 entry
"RTN","LA7VHLU8",64,0)
 S LA7MSH(0)="MSH",LA7MSH(1)=LA7ECH,LA7MSH(2)=HL("RAN"),LA7MSH(3)=HL("RAF"),LA7MSH(4)=HL("SAN"),LA7MSH(5)=HL("SAF")
"RTN","LA7VHLU8",65,0)
 S LA7MSH(9)=HL("RMTN")_$E(LA7ECH,1)_HL("RETN"),LA7MSH(11)=HL("PID"),LA7MSH(12)=HL("VER")
"RTN","LA7VHLU8",66,0)
 S LA7MSH(15)="AL",LA7MSH(16)="NE"
"RTN","LA7VHLU8",67,0)
 D BUILDSEG^LA7VHLU(.LA7MSH,.LA7DATA,LA7FS)
"RTN","LA7VHLU8",68,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VHLU8",69,0)
 ;
"RTN","LA7VHLU8",70,0)
 ; Build and file MSA segment
"RTN","LA7VHLU8",71,0)
 K LA7DATA
"RTN","LA7VHLU8",72,0)
 S LA7MSA(0)="MSA",LA7MSA(1)=LA7("ACK"),LA7MSA(2)=HL("MID")
"RTN","LA7VHLU8",73,0)
 I $G(LA7("MSG"))'="" D
"RTN","LA7VHLU8",74,0)
 . S LA7MSA(3)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^"),LA7FS_LA7ECH)
"RTN","LA7VHLU8",75,0)
 . I $P(LA7("MSG"),"^",2)="" Q
"RTN","LA7VHLU8",76,0)
 . S $P(LA7MSA(3),$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU8",77,0)
 ;
"RTN","LA7VHLU8",78,0)
 S LA7ID=$P(LA76248(0),"^",1)_"-O-ACK-"_LA7MSA(2)
"RTN","LA7VHLU8",79,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ID,1)
"RTN","LA7VHLU8",80,0)
 D SETID^LA7VHLU1(LA76249,"",LA7MSA(2),0)
"RTN","LA7VHLU8",81,0)
 ;
"RTN","LA7VHLU8",82,0)
 ; Save message ids in file #62.49
"RTN","LA7VHLU8",83,0)
 D BUILDSEG^LA7VHLU(.LA7MSA,.LA7DATA,LA7FS)
"RTN","LA7VHLU8",84,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VHLU8",85,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VHLU8",86,0)
 ;
"RTN","LA7VHLU8",87,0)
 ; Send the HL7 message.
"RTN","LA7VHLU8",88,0)
 S LA7LL=$$GET1^DIQ(101,HL("EIDS")_",",770.7,"I")
"RTN","LA7VHLU8",89,0)
 S HLL("LINKS",1)=HL("EIDS")_"^"_LA7LL
"RTN","LA7VHLU8",90,0)
 S HLL("SET FOR APP ACK")=1
"RTN","LA7VHLU8",91,0)
 S HLP("NAMESPACE")="LA"
"RTN","LA7VHLU8",92,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.LA7MID,"",.HLP)
"RTN","LA7VHLU8",93,0)
 ;
"RTN","LA7VHLU8",94,0)
 S HL("MTN")=HL("RMTN"),HL("SAN")=HL("RAN"),HL("SAF")=HL("RAF"),HL("APAT")=""
"RTN","LA7VHLU8",95,0)
 D UPDT6249^LA7VORM1
"RTN","LA7VHLU8",96,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VHLU8",97,0)
 Q
"RTN","LA7VHLU9")
0^105^B19044226
"RTN","LA7VHLU9",1,0)
LA7VHLU9 ;DALOI/JMC - HL7 segment builder utility ;09/14/11  15:56
"RTN","LA7VHLU9",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74**;Sep 27, 1994;Build 229
"RTN","LA7VHLU9",3,0)
 ;
"RTN","LA7VHLU9",4,0)
 ; Reference to NPI^XUSNPI supported by DBIA #4532
"RTN","LA7VHLU9",5,0)
 ; Reference to QI^XUSNPI supported by DBIA #4532
"RTN","LA7VHLU9",6,0)
 ;
"RTN","LA7VHLU9",7,0)
 ;
"RTN","LA7VHLU9",8,0)
XCN(LA7DUZ,LA7DIV,LA7FS,LA7ECH,LA7DMT,LA7IDTYP) ; Build composite ID and name for person
"RTN","LA7VHLU9",9,0)
 ; Call with   LA7DUZ = DUZ of person
"RTN","LA7VHLU9",10,0)
 ;                      If not pointer to #200, then use as literal
"RTN","LA7VHLU9",11,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VHLU9",12,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU9",13,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU9",14,0)
 ;             LA7DMT = flag to indicate delimiters should be demoted
"RTN","LA7VHLU9",15,0)
 ;           LA7IDTYP = id type to return (0:DUZ 1:VPID 2:NPI)
"RTN","LA7VHLU9",16,0)
 ;
"RTN","LA7VHLU9",17,0)
 N I,LA7CS,LA7NPI,LA7SITE,LA7VAF,LA7VPID,LA7X,LA7Y,LA7Z,NAME
"RTN","LA7VHLU9",18,0)
 ;
"RTN","LA7VHLU9",19,0)
 S (LA7Y,LA7Z)="",LA7DMT=+$G(LA7DMT),LA7IDTYP=+$G(LA7IDTYP)
"RTN","LA7VHLU9",20,0)
 ; If demoting delimiters then use sub-component delimiter instead of component delimiter.
"RTN","LA7VHLU9",21,0)
 S LA7CS=$E(LA7ECH,$S(LA7DMT=1:4,1:1))
"RTN","LA7VHLU9",22,0)
 ;
"RTN","LA7VHLU9",23,0)
 ; Check if this field has been built previously for this person
"RTN","LA7VHLU9",24,0)
 I LA7DUZ'="",$D(^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)) S LA7Y=^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)
"RTN","LA7VHLU9",25,0)
 ;
"RTN","LA7VHLU9",26,0)
 ; Build from file #200
"RTN","LA7VHLU9",27,0)
 I LA7Y="",LA7DUZ>0,LA7DUZ?1.N D
"RTN","LA7VHLU9",28,0)
 . S NAME("FILE")=200,NAME("FIELD")=.01,NAME("IENS")=LA7DUZ
"RTN","LA7VHLU9",29,0)
 . S LA7Z=$$HLNAME^XLFNAME(.NAME,"S",LA7CS)
"RTN","LA7VHLU9",30,0)
 . I LA7IDTYP=2 D  Q:LA7NPI>0
"RTN","LA7VHLU9",31,0)
 . . S LA7NPI=$$NPI^XUSNPI("Individual_ID",LA7DUZ,DT)
"RTN","LA7VHLU9",32,0)
 . . I LA7NPI>0 S $P(LA7Y,LA7CS)=$P(LA7NPI,"^"),$P(LA7Y,LA7CS,9)="USDHHS",$P(LA7Y,LA7CS,11)=$E(LA7NPI,10),$P(LA7Y,LA7CS,12,13)="NPI"_LA7CS_"NPI"
"RTN","LA7VHLU9",33,0)
 . I LA7IDTYP>0 D  Q:LA7VPID'=""
"RTN","LA7VHLU9",34,0)
 . . S LA7VPID=$$VPID^XUPS(LA7DUZ)
"RTN","LA7VHLU9",35,0)
 . . I LA7VPID'="" S $P(LA7Y,LA7CS)=LA7VPID,$P(LA7Y,LA7CS,9)="USVHA",$P(LA7Y,LA7CS,13)="PN"
"RTN","LA7VHLU9",36,0)
 . ; If no institution, use Kernel Site default
"RTN","LA7VHLU9",37,0)
 . I LA7DIV="" S LA7DIV=+$$KSP^XUPARAM("INST")
"RTN","LA7VHLU9",38,0)
 . S LA7SITE=$$RETFACID^LA7VHLU2(LA7DIV,0,1)
"RTN","LA7VHLU9",39,0)
 . I LA7SITE'="" D
"RTN","LA7VHLU9",40,0)
 . . S LA7VAF=$$GET1^DIQ(4,LA7DIV_",","AGENCY CODE","I")
"RTN","LA7VHLU9",41,0)
 . . I LA7VAF="V" S LA7SITE="VA"_LA7SITE
"RTN","LA7VHLU9",42,0)
 . . S LA7DUZ=LA7DUZ_"-"_LA7SITE,$P(LA7Y,LA7CS,8)="99VA4"
"RTN","LA7VHLU9",43,0)
 . S $P(LA7Y,LA7CS)=LA7DUZ
"RTN","LA7VHLU9",44,0)
 ;
"RTN","LA7VHLU9",45,0)
 ; If only name passed
"RTN","LA7VHLU9",46,0)
 I LA7Y="",'LA7DUZ D
"RTN","LA7VHLU9",47,0)
 . S NAME=LA7DUZ
"RTN","LA7VHLU9",48,0)
 . I LA7DUZ["[",LA7DUZ["]" D
"RTN","LA7VHLU9",49,0)
 . . S NAME=$P(LA7DUZ,"["),NAME(1)=$P(LA7DUZ,"[",2),NAME(1)=$P(NAME(1),"]")
"RTN","LA7VHLU9",50,0)
 . . I $P(NAME(1),":",2)?1(1"NPI",1"PN") S $P(LA7Y,LA7CS)=$P(NAME(1),":"),$P(LA7Y,LA7CS,9)=$P(NAME(1),":",4),$P(LA7Y,LA7CS,13)=$P(NAME(1),":",2)
"RTN","LA7VHLU9",51,0)
 . . I $P(NAME(1),":",2)?1(1"99"1.E,1"L") S $P(LA7Y,LA7CS)=$P(NAME(1),":"),$P(LA7Y,LA7CS,8)=$P(NAME(1),":",2)
"RTN","LA7VHLU9",52,0)
 . S NAME=$$CHKDATA^LA7VHLU3(NAME,LA7FS_LA7ECH)
"RTN","LA7VHLU9",53,0)
 . S LA7Z=$$HLNAME^XLFNAME(NAME,"S",LA7CS)
"RTN","LA7VHLU9",54,0)
 ;
"RTN","LA7VHLU9",55,0)
 I LA7Z'="" F I=1:1:6 S $P(LA7Y,LA7CS,I+1)=$P(LA7Z,LA7CS,I)
"RTN","LA7VHLU9",56,0)
 ;
"RTN","LA7VHLU9",57,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU9",58,0)
 I LA7DUZ'="" S ^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)=LA7Y
"RTN","LA7VHLU9",59,0)
 ;
"RTN","LA7VHLU9",60,0)
 Q LA7Y
"RTN","LA7VHLU9",61,0)
 ;
"RTN","LA7VHLU9",62,0)
 ;
"RTN","LA7VHLU9",63,0)
 ;
"RTN","LA7VHLU9",64,0)
XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])
"RTN","LA7VHLU9",65,0)
 ; Call with LA7X = HL7 field containing name
"RTN","LA7VHLU9",66,0)
 ;         LA7ECH = HL7 encoding characters
"RTN","LA7VHLU9",67,0)
 ;
"RTN","LA7VHLU9",68,0)
 ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system).
"RTN","LA7VHLU9",69,0)
 ;
"RTN","LA7VHLU9",70,0)
 N LA7DUZ,LA7IDC,LA7Y,LA7Z,X
"RTN","LA7VHLU9",71,0)
 ;
"RTN","LA7VHLU9",72,0)
 ;
"RTN","LA7VHLU9",73,0)
 S LA7DUZ=0
"RTN","LA7VHLU9",74,0)
 ;
"RTN","LA7VHLU9",75,0)
 ; Check for VPID
"RTN","LA7VHLU9",76,0)
 S (LA7IDC,LA7Z)=$P(LA7X,$E(LA7ECH))
"RTN","LA7VHLU9",77,0)
 I $P(LA7X,$E(LA7ECH),9)="USVHA",$P(LA7X,$E(LA7ECH),13)="PN" D
"RTN","LA7VHLU9",78,0)
 . S X=$$IEN^XUPS(LA7IDC)
"RTN","LA7VHLU9",79,0)
 . I X>0 S LA7DUZ=X
"RTN","LA7VHLU9",80,0)
 ;
"RTN","LA7VHLU9",81,0)
 ; Check for NPI
"RTN","LA7VHLU9",82,0)
 I $P(LA7X,$E(LA7ECH),9)="USDHHS",$P(LA7X,$E(LA7ECH),13)="NPI" D
"RTN","LA7VHLU9",83,0)
 . S X=$$QI^XUSNPI(LA7IDC)
"RTN","LA7VHLU9",84,0)
 . I $P(X,"^")="Individual_ID",$P(X,"^",2)>0 S LA7DUZ=$P(X,"^",2)
"RTN","LA7VHLU9",85,0)
 ;
"RTN","LA7VHLU9",86,0)
 ; Check for coding that indicates DUZ from a VA facility
"RTN","LA7VHLU9",87,0)
 I 'LA7DUZ,LA7Z?.(1.N1"-VA"3N,1.N1"-VA"3N2U) D
"RTN","LA7VHLU9",88,0)
 . N LA7J,LA7K
"RTN","LA7VHLU9",89,0)
 . S LA7Z(1)=$P(LA7Z,"-"),LA7Z(2)=$P(LA7Z,"-",2)
"RTN","LA7VHLU9",90,0)
 . S LA7K=$$FINDSITE^LA7VHLU2(LA7Z(2),1,1)
"RTN","LA7VHLU9",91,0)
 . S LA7J=$$DIV4^XUSER(.LA7J,LA7Z(1))
"RTN","LA7VHLU9",92,0)
 . I LA7K,$D(LA7J(LA7K)) S LA7DUZ=LA7Z(1)
"RTN","LA7VHLU9",93,0)
 . I LA7K,'LA7DUZ,'LA7J D  ;ccr_5591n - If user is not assigned any divisions, try find match based off default institution
"RTN","LA7VHLU9",94,0)
 . . I $$KSP^XUPARAM("INST")=LA7K,$$ACTIVE^XUSER(LA7Z(1))'="" S LA7DUZ=LA7Z(1)
"RTN","LA7VHLU9",95,0)
 ;
"RTN","LA7VHLU9",96,0)
 ; Check if code resolves to a valid user.
"RTN","LA7VHLU9",97,0)
 I 'LA7DUZ,LA7Z=+LA7Z D
"RTN","LA7VHLU9",98,0)
 . S X=$$ACTIVE^XUSER(LA7Z)
"RTN","LA7VHLU9",99,0)
 . I X,$P(X,"^",2)'="" S LA7DUZ=LA7Z
"RTN","LA7VHLU9",100,0)
 ;
"RTN","LA7VHLU9",101,0)
 S LA7Y=$$FMNAME^HLFNC($P(LA7X,$E(LA7ECH),2,6),LA7ECH)
"RTN","LA7VHLU9",102,0)
 ; HL function sometimes returns trailing "," on name
"RTN","LA7VHLU9",103,0)
 S LA7Y=$$TRIM^XLFSTR(LA7Y,"R",",")
"RTN","LA7VHLU9",104,0)
 ;
"RTN","LA7VHLU9",105,0)
 ; Put identifying code at end of name in "[code:id type:va id type:issuing authority]".
"RTN","LA7VHLU9",106,0)
 I $P(LA7X,$E(LA7ECH))'="",LA7Y'="" D
"RTN","LA7VHLU9",107,0)
 . S X=""
"RTN","LA7VHLU9",108,0)
 . I $P(LA7X,$E(LA7ECH),8)?1(1"99"1.E,1"L") S X=$P(LA7X,$E(LA7ECH),8)
"RTN","LA7VHLU9",109,0)
 . I $P(LA7X,$E(LA7ECH),9)="USVHA",$P(LA7X,$E(LA7ECH),13)="PN" S X="PN:VPID:USVHA"
"RTN","LA7VHLU9",110,0)
 . I $P(LA7X,$E(LA7ECH),9)="USDHHS",$P(LA7X,$E(LA7ECH),13)="NPI" S X="NPI:NPI:USDHHS"
"RTN","LA7VHLU9",111,0)
 . S LA7Y=LA7Y_" ["_$P(LA7X,$E(LA7ECH))_":"_X_"]"
"RTN","LA7VHLU9",112,0)
 ;
"RTN","LA7VHLU9",113,0)
 Q LA7IDC_"^"_LA7DUZ_"^"_LA7Y
"RTN","LA7VHLUA")
0^77^B4032160
"RTN","LA7VHLUA",1,0)
LA7VHLUA ;DALOI/JMC - HL7 SNOMED utility ;11/17/11  15:33
"RTN","LA7VHLUA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VHLUA",3,0)
 ;
"RTN","LA7VHLUA",4,0)
 ; Utility to resolve SNOMED CT, LOINC and local codes.
"RTN","LA7VHLUA",5,0)
 ;
"RTN","LA7VHLUA",6,0)
 Q
"RTN","LA7VHLUA",7,0)
 ;
"RTN","LA7VHLUA",8,0)
 ;
"RTN","LA7VHLUA",9,0)
ADDSCT ; Add entry with SCT to local file
"RTN","LA7VHLUA",10,0)
 ; Called from LA7VHLU6
"RTN","LA7VHLUA",11,0)
 ;
"RTN","LA7VHLUA",12,0)
 N FDA,LA7MSG,LRDIE,LRFPRIV
"RTN","LA7VHLUA",13,0)
 ;
"RTN","LA7VHLUA",14,0)
 S LRFPRIV=1
"RTN","LA7VHLUA",15,0)
 S FDA(1,FILE,"+1,",.01)=TEXT
"RTN","LA7VHLUA",16,0)
 S FDA(1,FILE,"+1,",.20)=CODE
"RTN","LA7VHLUA",17,0)
 D UPDATE^DIE("","FDA(1)","FDAIEN","LRDIE(1")
"RTN","LA7VHLUA",18,0)
 I $D(LRDIE) S LA7IEN="-1^Unable to add SNOMED CT to file"
"RTN","LA7VHLUA",19,0)
 E  S LA7IEN=FDAIEN(1)
"RTN","LA7VHLUA",20,0)
 ;
"RTN","LA7VHLUA",21,0)
 ; Notify that entry has been added
"RTN","LA7VHLUA",22,0)
 S LA7MSG="SNOMED CT term added to file #"_FILE
"RTN","LA7VHLUA",23,0)
 D SENDBULL,SA
"RTN","LA7VHLUA",24,0)
 Q
"RTN","LA7VHLUA",25,0)
 ;
"RTN","LA7VHLUA",26,0)
 ;
"RTN","LA7VHLUA",27,0)
SENDBULL ; Send bulletin that local addition has occurred
"RTN","LA7VHLUA",28,0)
 ; Ignore any restrictions (domain closed or protected by security key)
"RTN","LA7VHLUA",29,0)
 ;
"RTN","LA7VHLUA",30,0)
 ;
"RTN","LA7VHLUA",31,0)
 N LA7BODY
"RTN","LA7VHLUA",32,0)
 N XMBODY,XMDUZ,XMBNAME,XMERR,XMINSTR,XMPARM,XMTO,X,Y
"RTN","LA7VHLUA",33,0)
 ;
"RTN","LA7VHLUA",34,0)
 S XMBNAME="LA7 NEW TERM ADDED"
"RTN","LA7VHLUA",35,0)
 S XMPARM(1)=LA7MSG
"RTN","LA7VHLUA",36,0)
 S XMPARM(2)=$S($G(LA76248):$$GET1^DIQ(62.48,LA76248_",",.01),1:"UNKNOWN")
"RTN","LA7VHLUA",37,0)
 S XMPARM(3)=$G(LA76429)
"RTN","LA7VHLUA",38,0)
 ;
"RTN","LA7VHLUA",39,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LA7VHLUA",40,0)
 S XMINSTR("FROM")="LAB PACKAGE"
"RTN","LA7VHLUA",41,0)
 ;
"RTN","LA7VHLUA",42,0)
 S XMTO("G."_$$FAMG^LA7VHLU1(LA76248,1))=""
"RTN","LA7VHLUA",43,0)
 D SENDBULL^XMXAPI(DUZ,XMBNAME,.XMPARM,$S($D(LA7BODY):"LA7BODY",1:""),.XMTO,.XMINSTR,.LA7TSK,"")
"RTN","LA7VHLUA",44,0)
 ;
"RTN","LA7VHLUA",45,0)
 Q
"RTN","LA7VHLUA",46,0)
 ;
"RTN","LA7VHLUA",47,0)
 ;
"RTN","LA7VHLUA",48,0)
SA ; Send alert
"RTN","LA7VHLUA",49,0)
 ;
"RTN","LA7VHLUA",50,0)
 N XQA,XQAID,XQADATA,XQAFLAG,XQAMSG,XQAOPT,XQAROU
"RTN","LA7VHLUA",51,0)
 S XQAMSG="Lab Messaging - Addition of new term - see mail bulletin"
"RTN","LA7VHLUA",52,0)
 S XQAID="LA7-NEW-TERM"_$S($G(LA76248):"-"_$$GET1^DIQ(62.48,LA76248_",",.01),1:"")
"RTN","LA7VHLUA",53,0)
 S XQA("G."_$$FAMG^LA7VHLU1($G(LA76248),1))=""
"RTN","LA7VHLUA",54,0)
 D DEL^LA7UXQA(XQAID)
"RTN","LA7VHLUA",55,0)
 D SETUP^XQALERT
"RTN","LA7VHLUA",56,0)
 ;
"RTN","LA7VHLUA",57,0)
 Q
"RTN","LA7VHLUB")
0^109^B5119748
"RTN","LA7VHLUB",1,0)
LA7VHLUB ;DALOI/LMT - HL7 MI Bact Override Check ;03/18/11  12:23
"RTN","LA7VHLUB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VHLUB",3,0)
 ;
"RTN","LA7VHLUB",4,0)
 Q
"RTN","LA7VHLUB",5,0)
 ;
"RTN","LA7VHLUB",6,0)
BACTCHK(LA7ONLT,LA7AA,LA7AD,LA7AN,LA76247) ;
"RTN","LA7VHLUB",7,0)
 ;
"RTN","LA7VHLUB",8,0)
 ; Check if Organism should be stored under Bacteriology section instead of MI section determined by OBX-3 mapping.
"RTN","LA7VHLUB",9,0)
 ; Used in cases where a Parasite, Fungus, Mycobacterium, or Virus was reported on a Bacterial culture.
"RTN","LA7VHLUB",10,0)
 ;
"RTN","LA7VHLUB",11,0)
 ; Call with  LA7ONLT = <opt> NLT WKLD code from OBR-4
"RTN","LA7VHLUB",12,0)
 ;              LA7AA = Accession Area
"RTN","LA7VHLUB",13,0)
 ;              LA7AD = Accession Date
"RTN","LA7VHLUB",14,0)
 ;              LA7AN = Accession Number
"RTN","LA7VHLUB",15,0)
 ;            LA76247 = File #62.47 IEN (Concept being used)
"RTN","LA7VHLUB",16,0)
 ;
"RTN","LA7VHLUB",17,0)
 ; Returns    LA76247 = File #62.47 IEN (Concept to be used)
"RTN","LA7VHLUB",18,0)
 ;
"RTN","LA7VHLUB",19,0)
 ; -------------------
"RTN","LA7VHLUB",20,0)
 ; LA76247
"RTN","LA7VHLUB",21,0)
 ;    3: BACTERIA
"RTN","LA7VHLUB",22,0)
 ;    4: MYCOBACTERIA
"RTN","LA7VHLUB",23,0)
 ;    5: VIRUS
"RTN","LA7VHLUB",24,0)
 ;    8: PARASITE
"RTN","LA7VHLUB",25,0)
 ;    9: FUNGUS
"RTN","LA7VHLUB",26,0)
 ; -------------------
"RTN","LA7VHLUB",27,0)
 ;
"RTN","LA7VHLUB",28,0)
 N LA764,LA760,LA7X
"RTN","LA7VHLUB",29,0)
 ;
"RTN","LA7VHLUB",30,0)
 S LA764=""
"RTN","LA7VHLUB",31,0)
 I $G(LA7ONLT) S LA764=$O(^LAM("E",LA7ONLT,0))
"RTN","LA7VHLUB",32,0)
 ;
"RTN","LA7VHLUB",33,0)
 ; Already using Bacteria concept - No need to check
"RTN","LA7VHLUB",34,0)
 I LA76247=3 Q LA76247
"RTN","LA7VHLUB",35,0)
 ;
"RTN","LA7VHLUB",36,0)
 ; If current concept is not Mycobacteria, Virus, Parasite, or Fungus - quit
"RTN","LA7VHLUB",37,0)
 I LA76247'?1(1"4",1"5",1"8",1"9") Q LA76247
"RTN","LA7VHLUB",38,0)
 ;
"RTN","LA7VHLUB",39,0)
 ; If LA7ONLT exists (from OBR-4), then use that to determine ordered test DB mapping
"RTN","LA7VHLUB",40,0)
 I LA764 D  Q LA76247
"RTN","LA7VHLUB",41,0)
 . ; If ordered test is mapped to bacteriology section, then use Bacteria concept
"RTN","LA7VHLUB",42,0)
 . I $$NLT2SEC(LA764)=3 S LA76247=3
"RTN","LA7VHLUB",43,0)
 ;
"RTN","LA7VHLUB",44,0)
 I '$G(LA7AA)!('$G(LA7AD))!('$G(LA7AN)) Q LA76247
"RTN","LA7VHLUB",45,0)
 ;
"RTN","LA7VHLUB",46,0)
 ; If LA7ONLT does not exist, look at tests on accession
"RTN","LA7VHLUB",47,0)
 ;  - If one of the tests is mapped to same MI section as concept being used, no need to override
"RTN","LA7VHLUB",48,0)
 ;  - Else: if one of the tests is mapped to bacteriology section, then override with Bacteria concept
"RTN","LA7VHLUB",49,0)
 S LA760=0
"RTN","LA7VHLUB",50,0)
 F  S LA760=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q:'LA760  D
"RTN","LA7VHLUB",51,0)
 . S LA764=$P($G(^LAB(60,LA760,64)),"^")
"RTN","LA7VHLUB",52,0)
 . Q:'LA764
"RTN","LA7VHLUB",53,0)
 . S LA7X($$NLT2SEC(LA764))=""
"RTN","LA7VHLUB",54,0)
 ; One of tests is for same section as concept being used. No need to override.
"RTN","LA7VHLUB",55,0)
 I $D(LA7X(LA76247)) Q LA76247
"RTN","LA7VHLUB",56,0)
 ; Else: If one of the tests is mapped to bacteriology section, then use Bacteria concept
"RTN","LA7VHLUB",57,0)
 I $D(LA7X(3)) S LA76247=3
"RTN","LA7VHLUB",58,0)
 ;
"RTN","LA7VHLUB",59,0)
 Q LA76247
"RTN","LA7VHLUB",60,0)
 ;
"RTN","LA7VHLUB",61,0)
 ;
"RTN","LA7VHLUB",62,0)
NLT2SEC(LA764) ; Helper function (used by BACTCHK)
"RTN","LA7VHLUB",63,0)
 ;
"RTN","LA7VHLUB",64,0)
 ; Finds MI section that NLT is mapped to.
"RTN","LA7VHLUB",65,0)
 ;
"RTN","LA7VHLUB",66,0)
 ; Call with   LA764 = File #64 IEN
"RTN","LA7VHLUB",67,0)
 ;
"RTN","LA7VHLUB",68,0)
 ; Returns    LA7SEC = Section that #64 entry is mapped to (determined by MI/AP DATABASE CODE)
"RTN","LA7VHLUB",69,0)
 ;                     3: BACTERIA
"RTN","LA7VHLUB",70,0)
 ;                     4: MYCOBACTERIA
"RTN","LA7VHLUB",71,0)
 ;                     5: VIRUS
"RTN","LA7VHLUB",72,0)
 ;                     8: PARASITE
"RTN","LA7VHLUB",73,0)
 ;                     9: FUNGUS
"RTN","LA7VHLUB",74,0)
 ;                     0: Anything else
"RTN","LA7VHLUB",75,0)
 ;
"RTN","LA7VHLUB",76,0)
 N LA7SEC,LA764061,LA7MIDBCD,LA7MISB
"RTN","LA7VHLUB",77,0)
 ;
"RTN","LA7VHLUB",78,0)
 S LA7SEC=0
"RTN","LA7VHLUB",79,0)
 ;
"RTN","LA7VHLUB",80,0)
 I '$G(LA764) Q LA7SEC
"RTN","LA7VHLUB",81,0)
 ;
"RTN","LA7VHLUB",82,0)
 S LA764061=$P($G(^LAM(LA764,63)),"^",1)
"RTN","LA7VHLUB",83,0)
 S LA7MIDBCD=$G(^LAB(64.061,+LA764061,63))
"RTN","LA7VHLUB",84,0)
 ;
"RTN","LA7VHLUB",85,0)
 ; If #64.061 entry Subscript is not 'MI' - quit
"RTN","LA7VHLUB",86,0)
 I $P(LA7MIDBCD,"^")'="MI" Q LA7SEC
"RTN","LA7VHLUB",87,0)
 ;
"RTN","LA7VHLUB",88,0)
 S LA7MISB=$P(LA7MIDBCD,"^",2,3) ; File/Subfile^Field Number
"RTN","LA7VHLUB",89,0)
 S LA7SEC=$S(LA7MISB="63.05^11":3,LA7MISB="63.05^22":4,LA7MISB="63.05^33":5,LA7MISB="63.05^14":8,LA7MISB="63.05^18":9,1:0)
"RTN","LA7VHLUB",90,0)
 ;
"RTN","LA7VHLUB",91,0)
 Q LA7SEC
"RTN","LA7VIN")
0^64^B29668237
"RTN","LA7VIN",1,0)
LA7VIN ;DALOI/JMC - Process Incoming Lab HL7 Messages ;11/17/11  15:38
"RTN","LA7VIN",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,67,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN",3,0)
 ;
"RTN","LA7VIN",4,0)
 ; This routine processes incoming messages for various Lab HL7 configurations.
"RTN","LA7VIN",5,0)
 Q
"RTN","LA7VIN",6,0)
 ;
"RTN","LA7VIN",7,0)
EN ; Only one process should run at a time
"RTN","LA7VIN",8,0)
 ;
"RTN","LA7VIN",9,0)
 ; Expects variable LA76248 = internal entry # of message configuration in LA7 MESSAGE PARAMETER file (#62.48)
"RTN","LA7VIN",10,0)
 ;
"RTN","LA7VIN",11,0)
 N DIQUIET,LA76249,LA7I,LA7INTYP,LA7LOOP,LA7X,LRQUIET
"RTN","LA7VIN",12,0)
 ;
"RTN","LA7VIN",13,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7VIN",14,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LA7VIN",15,0)
 ; Insure DT and DILOCKTM is defined
"RTN","LA7VIN",16,0)
 D DT^DICRW
"RTN","LA7VIN",17,0)
 ;
"RTN","LA7VIN",18,0)
 L +^LAHM(62.48,"Z",LA76248):10
"RTN","LA7VIN",19,0)
 E  S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LA7VIN",20,0)
 ;
"RTN","LA7VIN",21,0)
 ; Setup DUZ array to 'non-human' user LRLAB,HL
"RTN","LA7VIN",22,0)
 ; If user not found - send alert to G.LAB MESSAGING
"RTN","LA7VIN",23,0)
 S LA7X=$P($G(^XTMP("LA7 PROXY","LRLAB,HL")),"^")
"RTN","LA7VIN",24,0)
 I LA7X<1 D
"RTN","LA7VIN",25,0)
 . S LA7X=$$FIND1^DIC(200,"","OQUX","LRLAB,HL","B","")
"RTN","LA7VIN",26,0)
 . S ^XTMP("LA7 PROXY",0)=DT_"^"_DT_"^LAB HL7 PROXY USERS"
"RTN","LA7VIN",27,0)
 . I LA7X>0 S ^XTMP("LA7 PROXY","LRLAB,HL")=LA7X
"RTN","LA7VIN",28,0)
 I LA7X<1 D  Q
"RTN","LA7VIN",29,0)
 . N MSG
"RTN","LA7VIN",30,0)
 . S MSG="Lab Messaging - Unable to identify user 'LRLAB,HL' in NEW PERSON file"
"RTN","LA7VIN",31,0)
 . D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VIN",32,0)
 . L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",33,0)
 D DUZ^XUP(LA7X)
"RTN","LA7VIN",34,0)
 ;
"RTN","LA7VIN",35,0)
 ; Determine interface type
"RTN","LA7VIN",36,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7VIN",37,0)
 ;
"RTN","LA7VIN",38,0)
 ; main loop, LA7LOOP reset in GETIN, if no messages for 5 minutes (60x5) then quit
"RTN","LA7VIN",39,0)
 F LA7LOOP=1:1:60 D  Q:$G(ZTSTOP)
"RTN","LA7VIN",40,0)
 . ; Check if task has been requested to stop
"RTN","LA7VIN",41,0)
 . I $$S^%ZTLOAD("Idle - waiting for new messages to process") S ZTSTOP=1 Q
"RTN","LA7VIN",42,0)
 . D GETIN H 5
"RTN","LA7VIN",43,0)
 ;
"RTN","LA7VIN",44,0)
 ; Release lock
"RTN","LA7VIN",45,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",46,0)
 ;
"RTN","LA7VIN",47,0)
 ; Kill running flag
"RTN","LA7VIN",48,0)
 K ^XTMP("LA7VIN",LA76248)
"RTN","LA7VIN",49,0)
 ;
"RTN","LA7VIN",50,0)
 ; Clean up taskman
"RTN","LA7VIN",51,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VIN",52,0)
 ;
"RTN","LA7VIN",53,0)
 ; Check TaskMan for scheduled lab option
"RTN","LA7VIN",54,0)
 D CHECKTM
"RTN","LA7VIN",55,0)
 ;
"RTN","LA7VIN",56,0)
 ; Check if LAB MESSAGING mail group has active members
"RTN","LA7VIN",57,0)
 D CHECKMG
"RTN","LA7VIN",58,0)
 ;
"RTN","LA7VIN",59,0)
 K LA76248
"RTN","LA7VIN",60,0)
 K CENUM,DPF,ECHOALL,ER,IDE,IDT,LALCT,LANM,LAZZ,LINK,LRTEC,NOW,RMK,T,TC,TP,TSK,WDT
"RTN","LA7VIN",61,0)
 Q
"RTN","LA7VIN",62,0)
 ;
"RTN","LA7VIN",63,0)
 ;
"RTN","LA7VIN",64,0)
GETIN ; Check the incoming queue for messages and then call LA7VIN1 to process the message.
"RTN","LA7VIN",65,0)
 ;
"RTN","LA7VIN",66,0)
 ; LA7MSGPROCESSED is a counter of number of messages processed. Used to insure if volume of messages
"RTN","LA7VIN",67,0)
 ;  being received results in the "IQ" not being empty that the processing routine to process
"RTN","LA7VIN",68,0)
 ;  the information in LAH is periodically tasked for those interfaces (POC, etc) that have such a behavior.
"RTN","LA7VIN",69,0)
 ;
"RTN","LA7VIN",70,0)
 N LA7MSGPROCESSED
"RTN","LA7VIN",71,0)
 S LA7MSGPROCESSED=0
"RTN","LA7VIN",72,0)
 ;
"RTN","LA7VIN",73,0)
 ; Update XTMP entry to let messaging know we're still running for this configuration.
"RTN","LA7VIN",74,0)
 D XTMP
"RTN","LA7VIN",75,0)
 ;
"RTN","LA7VIN",76,0)
 ; Check incoming queue
"RTN","LA7VIN",77,0)
 Q:'$O(^LAHM(62.49,"Q",LA76248,"IQ",0))
"RTN","LA7VIN",78,0)
 ;
"RTN","LA7VIN",79,0)
 ; Reset timeout counter
"RTN","LA7VIN",80,0)
 S LA7LOOP=1
"RTN","LA7VIN",81,0)
 ;
"RTN","LA7VIN",82,0)
 ; Get lock on message, quit if still building, process message then release lock.
"RTN","LA7VIN",83,0)
 F  S LA76249=$O(^LAHM(62.49,"Q",LA76248,"IQ",0)) Q:'LA76249  D  Q:$G(ZTSTOP)
"RTN","LA7VIN",84,0)
 . ; Check if task has been requested to stop
"RTN","LA7VIN",85,0)
 . I $$S^%ZTLOAD("Processing msg #"_LA76249) S ZTSTOP=1 Q
"RTN","LA7VIN",86,0)
 . L +^LAHM(62.49,LA76249):DILOCKTM
"RTN","LA7VIN",87,0)
 . I '$T H 5 Q
"RTN","LA7VIN",88,0)
 . D NXTMSG^LA7VIN1
"RTN","LA7VIN",89,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VIN",90,0)
 . S LA7MSGPROCESSED=LA7MSGPROCESSED+1
"RTN","LA7VIN",91,0)
 . I (LA7MSGPROCESSED#50)=0 D CHKPROC
"RTN","LA7VIN",92,0)
 ;
"RTN","LA7VIN",93,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN",94,0)
 ;
"RTN","LA7VIN",95,0)
 D CHKPROC
"RTN","LA7VIN",96,0)
 ;
"RTN","LA7VIN",97,0)
 Q
"RTN","LA7VIN",98,0)
 ;
"RTN","LA7VIN",99,0)
 ;
"RTN","LA7VIN",100,0)
CHKPROC ; Check if any processing routine need to be tasked to process info in LAH
"RTN","LA7VIN",101,0)
 ;
"RTN","LA7VIN",102,0)
 ; If point of care interface then task job(s) to process results in LAH.
"RTN","LA7VIN",103,0)
 I LA7INTYP>19,LA7INTYP<30,$D(LA7INTYP("LWL")) D
"RTN","LA7VIN",104,0)
 . I $G(ZTSTOP)=1 Q
"RTN","LA7VIN",105,0)
 . S LA7I=0
"RTN","LA7VIN",106,0)
 . F  S LA7I=$O(LA7INTYP("LWL",LA7I)) Q:'LA7I  D
"RTN","LA7VIN",107,0)
 . . D QLAH(LA7I,"EN^LRVRPOC")
"RTN","LA7VIN",108,0)
 . . K LA7INTYP("LWL",LA7I)
"RTN","LA7VIN",109,0)
 ;
"RTN","LA7VIN",110,0)
 Q
"RTN","LA7VIN",111,0)
 ;
"RTN","LA7VIN",112,0)
 ;
"RTN","LA7VIN",113,0)
QUE ; Call here to queue this processing routine to run in the background.
"RTN","LA7VIN",114,0)
 ; Required variables are:  LA76248 = pointer to configuration in 62.48
"RTN","LA7VIN",115,0)
 ;
"RTN","LA7VIN",116,0)
 ; Check if we recently tasked the processing routine for this configuration.
"RTN","LA7VIN",117,0)
 ; Done to avoid repetitive locking attempts on each new message since the
"RTN","LA7VIN",118,0)
 ; FileMan locking API uses a site-defined timeout which is usually 3 seconds
"RTN","LA7VIN",119,0)
 ; but can be more. Slows down the interface if on each message we are waiting
"RTN","LA7VIN",120,0)
 ; 3 or more seconds for the lock to find out if the processing routine is already
"RTN","LA7VIN",121,0)
 ; running.
"RTN","LA7VIN",122,0)
 N LA7X,LA7Y
"RTN","LA7VIN",123,0)
 S LA7X=$H,LA7Y=$G(^XTMP("LA7VIN",LA76248))
"RTN","LA7VIN",124,0)
 I $P(LA7X,",")=$P(LA7Y,","),($P(LA7X,",",2)-$P(LA7Y,",",2))<240 Q
"RTN","LA7VIN",125,0)
 ;
"RTN","LA7VIN",126,0)
 ; See if already running
"RTN","LA7VIN",127,0)
 L +^LAHM(62.48,"Z",LA76248):DILOCKTM
"RTN","LA7VIN",128,0)
 I '$T Q
"RTN","LA7VIN",129,0)
 ;
"RTN","LA7VIN",130,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTRTN,ZTSK
"RTN","LA7VIN",131,0)
 S ZTRTN="EN^LA7VIN",ZTDTH=$H,ZTIO=""
"RTN","LA7VIN",132,0)
 S ZTDESC="Processing Routine for "_$P(^LAHM(62.48,LA76248,0),"^")
"RTN","LA7VIN",133,0)
 S ZTSAVE("LA76248")=LA76248
"RTN","LA7VIN",134,0)
 D ^%ZTLOAD
"RTN","LA7VIN",135,0)
 ;
"RTN","LA7VIN",136,0)
 D XTMP
"RTN","LA7VIN",137,0)
 ;
"RTN","LA7VIN",138,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",139,0)
 ;
"RTN","LA7VIN",140,0)
 Q
"RTN","LA7VIN",141,0)
 ;
"RTN","LA7VIN",142,0)
 ;
"RTN","LA7VIN",143,0)
QLAH(LWL,ZTRTN) ; Call here to queue result processing routine to run in the background.
"RTN","LA7VIN",144,0)
 ; Call with LWL = pointer to load list in file #68.2
"RTN","LA7VIN",145,0)
 ;         ZTRTN = name of processing routine to task
"RTN","LA7VIN",146,0)
 ;
"RTN","LA7VIN",147,0)
 ;
"RTN","LA7VIN",148,0)
 ; See if already running
"RTN","LA7VIN",149,0)
 L +^LAH("Z",LWL):DILOCKTM
"RTN","LA7VIN",150,0)
 I '$T Q
"RTN","LA7VIN",151,0)
 L -^LAH("Z",LWL)
"RTN","LA7VIN",152,0)
 ;
"RTN","LA7VIN",153,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","LA7VIN",154,0)
 S ZTDTH=$H,ZTIO="",ZTDESC="Result Processing for "_$P(^LRO(68.2,LWL,0),"^")
"RTN","LA7VIN",155,0)
 S ZTSAVE("LRLL")=LWL
"RTN","LA7VIN",156,0)
 D ^%ZTLOAD
"RTN","LA7VIN",157,0)
 ;
"RTN","LA7VIN",158,0)
 ;
"RTN","LA7VIN",159,0)
 Q
"RTN","LA7VIN",160,0)
 ;
"RTN","LA7VIN",161,0)
 ;
"RTN","LA7VIN",162,0)
CHECKTM ; Check is LA7TASK NIGHTY is scheduled in TaskMan.
"RTN","LA7VIN",163,0)
 ;
"RTN","LA7VIN",164,0)
 N LA7TSK,LA7J,MSG,NOW,OK
"RTN","LA7VIN",165,0)
 S (LA7TSK,OK)=0
"RTN","LA7VIN",166,0)
 D OPTSTAT^XUTMOPT("LA7TASK NIGHTY",.LA7TSK)
"RTN","LA7VIN",167,0)
 ;
"RTN","LA7VIN",168,0)
 ; If scheduled check to see if for the future
"RTN","LA7VIN",169,0)
 I LA7TSK>0 D
"RTN","LA7VIN",170,0)
 . S LA7J=0,NOW=$$NOW^XLFDT
"RTN","LA7VIN",171,0)
 . F  S LA7J=$O(LA7TSK(LA7J)) Q:'LA7J  I $P(LA7TSK(LA7J),"^",2)>NOW S OK=1 Q
"RTN","LA7VIN",172,0)
 I OK Q
"RTN","LA7VIN",173,0)
 ;
"RTN","LA7VIN",174,0)
 ; Option is not scheduled - send alert to G.LAB MESSAGING
"RTN","LA7VIN",175,0)
 S MSG="Lab Messaging - Option LA7TASK NIGHTY is not scheduled in TaskMan^LA7-MESSAGE-CHECKTM"
"RTN","LA7VIN",176,0)
 D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VIN",177,0)
 Q
"RTN","LA7VIN",178,0)
 ;
"RTN","LA7VIN",179,0)
 ;
"RTN","LA7VIN",180,0)
CHECKMG ; Check if LAB MESSAGING mail group has active members.
"RTN","LA7VIN",181,0)
 ;
"RTN","LA7VIN",182,0)
 N XMERR,XQA,XQAID,XQAMSG
"RTN","LA7VIN",183,0)
 ;
"RTN","LA7VIN",184,0)
 ; See if mail group check has been done today
"RTN","LA7VIN",185,0)
 I $P($G(^XTMP("LA7CHECKMG",0)),"^",2)=DT Q
"RTN","LA7VIN",186,0)
 ;
"RTN","LA7VIN",187,0)
 ; Set flag that we've check the membership today.
"RTN","LA7VIN",188,0)
 S ^XTMP("LA7CHECKMG",0)=DT_"^"_DT_"^LAB HL7 CHECK LAB MESSAGING MAIL GROUP MEMBERS"
"RTN","LA7VIN",189,0)
 ;
"RTN","LA7VIN",190,0)
 K ^TMP("XMERR",$J)
"RTN","LA7VIN",191,0)
 I $$GOTLOCAL^XMXAPIG("LAB MESSAGING") Q
"RTN","LA7VIN",192,0)
 ;
"RTN","LA7VIN",193,0)
 ; Mail group has no active members
"RTN","LA7VIN",194,0)
 S XQAMSG="Lab Messaging - Mail group LAB MESSAGING has no active members"
"RTN","LA7VIN",195,0)
 ; Delete previous alerts
"RTN","LA7VIN",196,0)
 S XQAID="LA7-MESSAGE-CHECKMG"
"RTN","LA7VIN",197,0)
 D DEL^LA7UXQA(XQAID)
"RTN","LA7VIN",198,0)
 ;
"RTN","LA7VIN",199,0)
 ; Send alert to holders of mail group LMI
"RTN","LA7VIN",200,0)
 I $$GOTLOCAL^XMXAPIG("LMI") D  Q
"RTN","LA7VIN",201,0)
 . S XQA("G.LMI")=""
"RTN","LA7VIN",202,0)
 . D SETUP^XQALERT
"RTN","LA7VIN",203,0)
 . K ^TMP("XMERR",$J)
"RTN","LA7VIN",204,0)
 ;
"RTN","LA7VIN",205,0)
 ; Neither LAB MESSAGING or LMI mail groups have active members - send alert to holders of LRLIASON security key
"RTN","LA7VIN",206,0)
 S XQAMSG="Lab Messaging - Mail groups LAB MESSAGING and LMI have no active members"
"RTN","LA7VIN",207,0)
 M XQA=^XUSEC("LRLIASON")
"RTN","LA7VIN",208,0)
 D SETUP^XQALERT
"RTN","LA7VIN",209,0)
 K ^TMP("XMERR",$J)
"RTN","LA7VIN",210,0)
 ;
"RTN","LA7VIN",211,0)
 Q
"RTN","LA7VIN",212,0)
 ;
"RTN","LA7VIN",213,0)
 ;
"RTN","LA7VIN",214,0)
XTMP ; Set/update XTMP with current run time of this processing routine
"RTN","LA7VIN",215,0)
 ;
"RTN","LA7VIN",216,0)
 S ^XTMP("LA7VIN",0)=DT_"^"_DT_"^LAB HL7 PROCESS TASKING"
"RTN","LA7VIN",217,0)
 S ^XTMP("LA7VIN",LA76248)=$H
"RTN","LA7VIN",218,0)
 Q
"RTN","LA7VIN1")
0^13^B53484134
"RTN","LA7VIN1",1,0)
LA7VIN1 ;DALOI/JMC - Process Incoming UI Msgs, continued ;12/07/11  12:54
"RTN","LA7VIN1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN1",3,0)
 ;
"RTN","LA7VIN1",4,0)
 ; This routine is a continuation of LA7VIN and is only called from there.
"RTN","LA7VIN1",5,0)
 ; It is called with each message found in the incoming queue.
"RTN","LA7VIN1",6,0)
 Q
"RTN","LA7VIN1",7,0)
 ;
"RTN","LA7VIN1",8,0)
NXTMSG ;
"RTN","LA7VIN1",9,0)
 N FDA,LA7ABORT,LA7AERR,LA7CNT,LA7END,LA7ERR
"RTN","LA7VIN1",10,0)
 N LA7INDX,LA7KILAH,LA7QUIT,LA7SEG,LA7STYP
"RTN","LA7VIN1",11,0)
 ;
"RTN","LA7VIN1",12,0)
 S (LA7AERR,LA7ERR)=""
"RTN","LA7VIN1",13,0)
 S (LA7ABORT,LA7CNT,LA7END,LA7INDX,LA7QUIT,LA7SEQ)=0
"RTN","LA7VIN1",14,0)
 S DT=$$DT^XLFDT
"RTN","LA7VIN1",15,0)
 S LA7ID="UNKNOWN-I-"
"RTN","LA7VIN1",16,0)
 ;
"RTN","LA7VIN1",17,0)
 ; Message built but no text.
"RTN","LA7VIN1",18,0)
 I '$O(^LAHM(62.49,LA76249,150,0)) D  Q
"RTN","LA7VIN1",19,0)
 . S (LA7ABORT,LA7ERR)=6
"RTN","LA7VIN1",20,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",21,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,"UNKNOWN",1)
"RTN","LA7VIN1",22,0)
 ;
"RTN","LA7VIN1",23,0)
 ; Process message segments
"RTN","LA7VIN1",24,0)
 ; Lab currently does not accept segments beginning with the letter "Z" which are reserved for locally-defined messages.
"RTN","LA7VIN1",25,0)
 ; "Z" segments will be ignored by this software.
"RTN","LA7VIN1",26,0)
 F  S LA7END=$$GETSEG^LA7VHLU2(LA76249,.LA7INDX,.LA7SEG) Q:LA7END!(LA7ABORT)  D
"RTN","LA7VIN1",27,0)
 . S LA7STYP=$E(LA7SEG(0),1,3) ; Segment type
"RTN","LA7VIN1",28,0)
 . I $E(LA7STYP,1)="Z" Q
"RTN","LA7VIN1",29,0)
 . ; Not a valid segment type
"RTN","LA7VIN1",30,0)
 . I LA7STYP'?2U1UN D  Q
"RTN","LA7VIN1",31,0)
 . . S LA7ERR=34
"RTN","LA7VIN1",32,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",33,0)
 . ; Segment encoded wrong - field separator does not match
"RTN","LA7VIN1",34,0)
 . I "MSH^FSH^BHS^"'[(LA7STYP_"^"),$E(LA7SEG(0),4)'=LA7FS D  Q
"RTN","LA7VIN1",35,0)
 . . S LA7ERR=35
"RTN","LA7VIN1",36,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",37,0)
 . I $T(@LA7STYP)="" Q  ; No processing logic for this segment type
"RTN","LA7VIN1",38,0)
 . D @LA7STYP
"RTN","LA7VIN1",39,0)
 ;
"RTN","LA7VIN1",40,0)
 ; Send HL7 Application Acknowledgment message for selected interfaces/message types
"RTN","LA7VIN1",41,0)
 I LA7MTYP="ORM",LA7INTYP=10 D SENDACK
"RTN","LA7VIN1",42,0)
 ;
"RTN","LA7VIN1",43,0)
 ; Set id if only MSH segment received.
"RTN","LA7VIN1",44,0)
 I LA7SEQ<5 D
"RTN","LA7VIN1",45,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,"UNKNOWN",1)
"RTN","LA7VIN1",46,0)
 ;
"RTN","LA7VIN1",47,0)
 ; Set status to purgeable if no errors.
"RTN","LA7VIN1",48,0)
 I $P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" D
"RTN","LA7VIN1",49,0)
 . S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VIN1",50,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN1",51,0)
 ;
"RTN","LA7VIN1",52,0)
 ; Store identifier's found in message.
"RTN","LA7VIN1",53,0)
 D UPID^LA7VHLU1(LA76249)
"RTN","LA7VIN1",54,0)
 ;
"RTN","LA7VIN1",55,0)
 ; Send new result alert for ORU messages if turned on.
"RTN","LA7VIN1",56,0)
 I $G(LA7MTYP)="ORU",$D(^LAHM(62.48,+$G(LA76248),20,"B",1)) D
"RTN","LA7VIN1",57,0)
 . N LA7MSG,LA7ROOT
"RTN","LA7VIN1",58,0)
 . S LA7ROOT="^TMP(""LA7-ORU"",$J)"
"RTN","LA7VIN1",59,0)
 . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7-ORU"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1",60,0)
 . . S LA7MSG(1)=$S($QS(LA7ROOT,5)="CH":"Chemistry/Hematology",$QS(LA7ROOT,5)="MI":"Microbiology",$QS(LA7ROOT,5)="SP":"Surgical Pathology",$QS(LA7ROOT,5)="CY":"Cytology",$QS(LA7ROOT,5)="EM":"Electron Microscopy",1:"")
"RTN","LA7VIN1",61,0)
 . . I LA7MSG(1)'="" S LA7MSG(1)=" "_LA7MSG(1)
"RTN","LA7VIN1",62,0)
 . . S LA7MSG="Lab Msg - New"_LA7MSG(1)_" results received for "_$P($G(^LAHM(62.48,$QS(LA7ROOT,3),0),"UNKNOWN"),"^")_"^"_$QS(LA7ROOT,5)
"RTN","LA7VIN1",63,0)
 . . D XQA^LA7UXQA(1,$QS(LA7ROOT,3),"","",LA7MSG,"",0)
"RTN","LA7VIN1",64,0)
 ;
"RTN","LA7VIN1",65,0)
 ; Send new order alert for ORM messages if turned on.
"RTN","LA7VIN1",66,0)
 I $G(LA7MTYP)="ORM",$D(^LAHM(62.48,+$G(LA76248),20,"B",3)) D
"RTN","LA7VIN1",67,0)
 . N LA7ROOT
"RTN","LA7VIN1",68,0)
 . S LA7ROOT="^TMP(""LA7-ORM"",$J)"
"RTN","LA7VIN1",69,0)
 . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7-ORM"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1",70,0)
 . . D XQA^LA7UXQA(3,$QS(LA7ROOT,3),"",$QS(LA7ROOT,4),"",$QS(LA7ROOT,5))
"RTN","LA7VIN1",71,0)
 ;
"RTN","LA7VIN1",72,0)
 ; Create performing lab comment for entries in LAH.
"RTN","LA7VIN1",73,0)
 ;I $D(^TMP("LA7-PL-NTE",$J)) D PL^LA7VIN1B
"RTN","LA7VIN1",74,0)
 ;
"RTN","LA7VIN1",75,0)
 ; Cleanup shipping config test info used to process orders
"RTN","LA7VIN1",76,0)
 I $G(LA7MTYP)="ORM" K ^TMP("LA7TC",$J)
"RTN","LA7VIN1",77,0)
 ;
"RTN","LA7VIN1",78,0)
 ; If amended results received then send bulletins
"RTN","LA7VIN1",79,0)
 I $D(^TMP("LA7 AMENDED RESULTS",$J)) D SENDARB^LA7VIN1A
"RTN","LA7VIN1",80,0)
 ;
"RTN","LA7VIN1",81,0)
 ; If cancelled orders received then send bulletins
"RTN","LA7VIN1",82,0)
 I $D(^TMP("LA7 ORDER STATUS",$J)) D SENDOSB^LA7VIN1B
"RTN","LA7VIN1",83,0)
 ;
"RTN","LA7VIN1",84,0)
 ; If units/normals changed then send bulletins
"RTN","LA7VIN1",85,0)
 I $D(^TMP("LA7 UNITS/NORMALS CHANGED",$J)) D SENDUNCB^LA7VIN1A
"RTN","LA7VIN1",86,0)
 ;
"RTN","LA7VIN1",87,0)
 ; If abnormal/critical results then send bulletins
"RTN","LA7VIN1",88,0)
 I $D(^TMP("LA7 ABNORMAL RESULTS",$J)) D SENDACB^LA7VIN1A
"RTN","LA7VIN1",89,0)
 ;
"RTN","LA7VIN1",90,0)
 D KILLMSH
"RTN","LA7VIN1",91,0)
 ;
"RTN","LA7VIN1",92,0)
 Q
"RTN","LA7VIN1",93,0)
 ;
"RTN","LA7VIN1",94,0)
 ;
"RTN","LA7VIN1",95,0)
MSA ;; Process MSA segment
"RTN","LA7VIN1",96,0)
 ;
"RTN","LA7VIN1",97,0)
 D KILLMSA
"RTN","LA7VIN1",98,0)
 ;
"RTN","LA7VIN1",99,0)
 D MSA^LA7VIN3
"RTN","LA7VIN1",100,0)
 ;
"RTN","LA7VIN1",101,0)
 ; Set sequence flag
"RTN","LA7VIN1",102,0)
 S LA7SEQ=5
"RTN","LA7VIN1",103,0)
 Q
"RTN","LA7VIN1",104,0)
 ;
"RTN","LA7VIN1",105,0)
 ;
"RTN","LA7VIN1",106,0)
BSH ;; Process various HL7 header segments
"RTN","LA7VIN1",107,0)
FSH ;;
"RTN","LA7VIN1",108,0)
MSH ;;
"RTN","LA7VIN1",109,0)
 D KILLMSH
"RTN","LA7VIN1",110,0)
 ;
"RTN","LA7VIN1",111,0)
 D MSH^LA7VIN2
"RTN","LA7VIN1",112,0)
 ;
"RTN","LA7VIN1",113,0)
 ; Set sequence flag
"RTN","LA7VIN1",114,0)
 S LA7SEQ=1
"RTN","LA7VIN1",115,0)
 Q
"RTN","LA7VIN1",116,0)
 ;
"RTN","LA7VIN1",117,0)
 ;
"RTN","LA7VIN1",118,0)
NTE ;; Process NTE segment
"RTN","LA7VIN1",119,0)
 ;
"RTN","LA7VIN1",120,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",121,0)
 . ; Put code to log error - no OBR/OBX segment
"RTN","LA7VIN1",122,0)
 ;
"RTN","LA7VIN1",123,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",124,0)
 ; skip associated NTE segments that follow OBR/OBX segments
"RTN","LA7VIN1",125,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",126,0)
 ;
"RTN","LA7VIN1",127,0)
 I LA7MTYP="ORU" D NTE^LA7VIN2
"RTN","LA7VIN1",128,0)
 I LA7MTYP="ORM" D NTE^LA7VIN2
"RTN","LA7VIN1",129,0)
 I LA7MTYP="ORR" D NTE^LA7VIN2
"RTN","LA7VIN1",130,0)
 ;
"RTN","LA7VIN1",131,0)
 Q
"RTN","LA7VIN1",132,0)
 ;
"RTN","LA7VIN1",133,0)
 ;
"RTN","LA7VIN1",134,0)
OBR ;; Process OBR segment
"RTN","LA7VIN1",135,0)
 ;
"RTN","LA7VIN1",136,0)
 D KILLOBR
"RTN","LA7VIN1",137,0)
 ;
"RTN","LA7VIN1",138,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",139,0)
 I LA7QUIT>0 S LA7QUIT=0
"RTN","LA7VIN1",140,0)
 ;
"RTN","LA7VIN1",141,0)
 ; If not UI interface and no PID segment
"RTN","LA7VIN1",142,0)
 I LA7INTYP'=1,LA7SEQ<10 D  Q
"RTN","LA7VIN1",143,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",144,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",145,0)
 ;
"RTN","LA7VIN1",146,0)
 I LA7MTYP="ORR" D OBR^LA7VIN4
"RTN","LA7VIN1",147,0)
 I LA7MTYP="ORU" D OBR^LA7VIN4
"RTN","LA7VIN1",148,0)
 I LA7MTYP="ORM" D OBR^LA7VORM
"RTN","LA7VIN1",149,0)
 ;
"RTN","LA7VIN1",150,0)
 ; Set sequence flag
"RTN","LA7VIN1",151,0)
 S LA7SEQ=30
"RTN","LA7VIN1",152,0)
 Q
"RTN","LA7VIN1",153,0)
 ;
"RTN","LA7VIN1",154,0)
 ;
"RTN","LA7VIN1",155,0)
OBX ;; Process OBX segment
"RTN","LA7VIN1",156,0)
 ;
"RTN","LA7VIN1",157,0)
 D KILLOBX
"RTN","LA7VIN1",158,0)
 ;
"RTN","LA7VIN1",159,0)
 ; No OBR segment, can't process OBX
"RTN","LA7VIN1",160,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",161,0)
 . S (LA7ABORT,LA7ERR)=9
"RTN","LA7VIN1",162,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",163,0)
 ;
"RTN","LA7VIN1",164,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",165,0)
 ; skip associated OBX segments that follow OBR segment
"RTN","LA7VIN1",166,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",167,0)
 ;
"RTN","LA7VIN1",168,0)
 ; Process result messages (ORU).
"RTN","LA7VIN1",169,0)
 I LA7MTYP="ORU" D
"RTN","LA7VIN1",170,0)
 . I '$G(LA7ISQN) Q  ; No place to store results
"RTN","LA7VIN1",171,0)
 . ; Process "CH" subscript results.
"RTN","LA7VIN1",172,0)
 . I $G(LA7SS)="CH" D OBX^LA7VIN5
"RTN","LA7VIN1",173,0)
 . ;
"RTN","LA7VIN1",174,0)
 . ; Process AP subscripts results. "AU" not currently supported
"RTN","LA7VIN1",175,0)
 . I $G(LA7SS)?1(1"SP",1"CY",1"EM") D OBX^LA7VIN7
"RTN","LA7VIN1",176,0)
 . ;
"RTN","LA7VIN1",177,0)
 . ; Process "MI" subscript results.
"RTN","LA7VIN1",178,0)
 . I $G(LA7SS)="MI" D OBX^LA7VIN7
"RTN","LA7VIN1",179,0)
 . ;
"RTN","LA7VIN1",180,0)
 . ; Process "BB" subscript results - not supported
"RTN","LA7VIN1",181,0)
 . ;
"RTN","LA7VIN1",182,0)
 . ; Update test status on manifest
"RTN","LA7VIN1",183,0)
 . I $G(LA7628),LA7UID'="",$G(LA7OTST) D UTS^LA7VHLU1(LA7628,LA7UID,LA7OTST)
"RTN","LA7VIN1",184,0)
 ;
"RTN","LA7VIN1",185,0)
 ; Process results that accompany orders
"RTN","LA7VIN1",186,0)
 I LA7MTYP="ORM" D OBX^LA7VIN5
"RTN","LA7VIN1",187,0)
 ;
"RTN","LA7VIN1",188,0)
 ; Set sequence flag
"RTN","LA7VIN1",189,0)
 S LA7SEQ=40
"RTN","LA7VIN1",190,0)
 Q
"RTN","LA7VIN1",191,0)
 ;
"RTN","LA7VIN1",192,0)
 ;
"RTN","LA7VIN1",193,0)
ORC ;; Process ORC segment
"RTN","LA7VIN1",194,0)
 ;
"RTN","LA7VIN1",195,0)
 D KILLORC
"RTN","LA7VIN1",196,0)
 ;
"RTN","LA7VIN1",197,0)
 ; If not UI interface and no PID segment
"RTN","LA7VIN1",198,0)
 I LA7INTYP'=1,LA7SEQ<10 D  Q
"RTN","LA7VIN1",199,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",200,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",201,0)
 ;
"RTN","LA7VIN1",202,0)
 D ORC^LA7VIN2
"RTN","LA7VIN1",203,0)
 ;
"RTN","LA7VIN1",204,0)
 ; Set sequence flag
"RTN","LA7VIN1",205,0)
 S LA7SEQ=20
"RTN","LA7VIN1",206,0)
 Q
"RTN","LA7VIN1",207,0)
 ;
"RTN","LA7VIN1",208,0)
 ;
"RTN","LA7VIN1",209,0)
PID ;; Process PID segment
"RTN","LA7VIN1",210,0)
 ;
"RTN","LA7VIN1",211,0)
 D KILLPID
"RTN","LA7VIN1",212,0)
 ;
"RTN","LA7VIN1",213,0)
 ; no MSH segment
"RTN","LA7VIN1",214,0)
 I LA7SEQ<1 D  Q
"RTN","LA7VIN1",215,0)
 . S (LA7ABORT,LA7ERR)=7
"RTN","LA7VIN1",216,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",217,0)
 ;
"RTN","LA7VIN1",218,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",219,0)
 I LA7QUIT=1 S LA7QUIT=0
"RTN","LA7VIN1",220,0)
 ;
"RTN","LA7VIN1",221,0)
 D PID^LA7VIN2
"RTN","LA7VIN1",222,0)
 ;
"RTN","LA7VIN1",223,0)
 ; Set sequence flag
"RTN","LA7VIN1",224,0)
 S LA7SEQ=10
"RTN","LA7VIN1",225,0)
 Q
"RTN","LA7VIN1",226,0)
 ;
"RTN","LA7VIN1",227,0)
 ;
"RTN","LA7VIN1",228,0)
PV1 ;; Process PV1 segment
"RTN","LA7VIN1",229,0)
 ;
"RTN","LA7VIN1",230,0)
 D KILLPV1
"RTN","LA7VIN1",231,0)
 ;
"RTN","LA7VIN1",232,0)
 ; no PID segment
"RTN","LA7VIN1",233,0)
 I LA7SEQ<10 D  Q
"RTN","LA7VIN1",234,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",235,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",236,0)
 ;
"RTN","LA7VIN1",237,0)
 D PV1^LA7VIN2
"RTN","LA7VIN1",238,0)
 ;
"RTN","LA7VIN1",239,0)
 ; Set sequence flag
"RTN","LA7VIN1",240,0)
 S LA7SEQ=11
"RTN","LA7VIN1",241,0)
 Q
"RTN","LA7VIN1",242,0)
 ;
"RTN","LA7VIN1",243,0)
 ;
"RTN","LA7VIN1",244,0)
SENDACK ; Send HL7 Application Acknowledgment message for selected interfaces/message types
"RTN","LA7VIN1",245,0)
 ;
"RTN","LA7VIN1",246,0)
 N LA
"RTN","LA7VIN1",247,0)
 S LA(62.48)=LA76248,LA(62.49)=LA76249
"RTN","LA7VIN1",248,0)
 S LA("ACK")=$S(+LA7AERR:"AE",1:"AA")
"RTN","LA7VIN1",249,0)
 S LA("MSG")=$P(LA7AERR,"^",2)
"RTN","LA7VIN1",250,0)
 D ACK^LA7VHLU8(.LA)
"RTN","LA7VIN1",251,0)
 Q
"RTN","LA7VIN1",252,0)
 ;
"RTN","LA7VIN1",253,0)
 ;
"RTN","LA7VIN1",254,0)
 ; The section below is designed to clean up variables that are created during the processing of a segment type
"RTN","LA7VIN1",255,0)
 ; and any created by processing of segments that are within the message definition.
"RTN","LA7VIN1",256,0)
 ;
"RTN","LA7VIN1",257,0)
KILLMSH ; Clean up variables used by MSH and following segments
"RTN","LA7VIN1",258,0)
 K LA7CSITE,LA7CS,LA7ECH,LA7FS,LA7HLV,LA7MEDT,LA7MID,LA7MTYP
"RTN","LA7VIN1",259,0)
 K LA7RAP,LA7RFAC,LA7SAP,LA7SEQ,LA7SFAC
"RTN","LA7VIN1",260,0)
 K ^TMP("LA7-ID",$J),^TMP("LA7-ORM",$J),^TMP("LA7-ORU",$J),^TMP("LA7-PL-NTE",$J)
"RTN","LA7VIN1",261,0)
 ;
"RTN","LA7VIN1",262,0)
KILLMSA ; Clean up variables used by MSA and following segments
"RTN","LA7VIN1",263,0)
 K LA7MSATM
"RTN","LA7VIN1",264,0)
 ;
"RTN","LA7VIN1",265,0)
KILLPID ; Clean up variables used by PID and following segments
"RTN","LA7VIN1",266,0)
 K DFN
"RTN","LA7VIN1",267,0)
 K LA7DOB,LA7ICN,LA7PNM,LA7PRACE,LA7PTID2,LA7PTID3,LA7PTID4
"RTN","LA7VIN1",268,0)
 K LA7SEX,LA7SPID,LA7SSN
"RTN","LA7VIN1",269,0)
 K LRDFN,LRTDFN
"RTN","LA7VIN1",270,0)
 ;
"RTN","LA7VIN1",271,0)
KILLPV1 ; Clean up variables used by PV1 and following segments
"RTN","LA7VIN1",272,0)
 K LA7LOC,LA7SPV1,LAPSUBID
"RTN","LA7VIN1",273,0)
 ;
"RTN","LA7VIN1",274,0)
KILLORC ; Clean up variables used by ORC and following segments
"RTN","LA7VIN1",275,0)
 K LA7628,LA7629
"RTN","LA7VIN1",276,0)
 K LA7CSITE,LA7DUR,LA7DURU,LA7ODUR,LA7ODURU,LA7EOL,LA7OCR,LA7ORDT
"RTN","LA7VIN1",277,0)
 K LA7OTYPE,LA7OUR,LA7PEB,LA7PON,LA7POP,LA7PVB,LA7SM
"RTN","LA7VIN1",278,0)
 ;
"RTN","LA7VIN1",279,0)
KILLOBR ; Clean up variables used by OBR and following segments
"RTN","LA7VIN1",280,0)
 K LA70070,LA760,LA761,LA762,LA7624,LA7696
"RTN","LA7VIN1",281,0)
 K LA7AA,LA7AD,LA7ACC,LA7AN,LA7ARI,LA7CDT,LA7FID,LA7ISQN,LA7LWL,LA7ONLT,LA7OTST
"RTN","LA7VIN1",282,0)
 K LA7POC,LA7PRI,LA7RSDT,LA7SAC,LA7SID,LA7SOBR,LA7SPEC,LA7SPTY,LA7SS,LA7TECH,LA7UID,LA7UR
"RTN","LA7VIN1",283,0)
 K LA7OBR25,LA7OBR26,LA7OBR29,LA7OBR32,LA7OBR33,LA7OBR34,LA7VPSTG
"RTN","LA7VIN1",284,0)
 ;
"RTN","LA7VIN1",285,0)
KILLOBX ; Clean up variables used by OBX and following segments
"RTN","LA7VIN1",286,0)
 K LA7ORS,LA7PRODID,LA7RLNC,LA7RMK,LA7RNLT,LA7RO,LA7SOBX,LA7SUBID
"RTN","LA7VIN1",287,0)
 ;
"RTN","LA7VIN1",288,0)
KILLBLG ; Clean up variables used by BLG and following segments
"RTN","LA7VIN1",289,0)
 ;
"RTN","LA7VIN1",290,0)
 Q
"RTN","LA7VIN1A")
0^38^B39196465
"RTN","LA7VIN1A",1,0)
LA7VIN1A ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:42
"RTN","LA7VIN1A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**64,67,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN1A",3,0)
 ;
"RTN","LA7VIN1A",4,0)
 ; This routine is a continuation of LA7VIN1.
"RTN","LA7VIN1A",5,0)
 ; It performs generation of any mail bulletins needed.
"RTN","LA7VIN1A",6,0)
 ;
"RTN","LA7VIN1A",7,0)
 ; Reference to DUZ^XUP supported by DBIA #4129
"RTN","LA7VIN1A",8,0)
 ;
"RTN","LA7VIN1A",9,0)
 Q
"RTN","LA7VIN1A",10,0)
 ;
"RTN","LA7VIN1A",11,0)
 ;
"RTN","LA7VIN1A",12,0)
SENDARB ; Send amended report bulletin
"RTN","LA7VIN1A",13,0)
 N LA76304,LA7BODY,LA7I,LA7ISQN,LA7TSK,LA7X,LWL
"RTN","LA7VIN1A",14,0)
 N XMBODY,XMDUZ,XMBNAME,XMINSTR,XMPARM,XMTO,X,Y
"RTN","LA7VIN1A",15,0)
 N XQA,XQAID,XQADATA,XQAFLAG,XQAMSG,XQAOPT,XQAROU
"RTN","LA7VIN1A",16,0)
 ;
"RTN","LA7VIN1A",17,0)
 I '$G(DUZ) D DUZ^XUP(.5)
"RTN","LA7VIN1A",18,0)
 S XMBNAME="LA7 AMENDED RESULTS RECEIVED"
"RTN","LA7VIN1A",19,0)
 S LA7I=0
"RTN","LA7VIN1A",20,0)
 F  S LA7I=$O(^TMP("LA7 AMENDED RESULTS",$J,LA7I)) Q:'LA7I  D
"RTN","LA7VIN1A",21,0)
 . S LA7I(0)=^TMP("LA7 AMENDED RESULTS",$J,LA7I)
"RTN","LA7VIN1A",22,0)
 . S LWL=$P(LA7I(0),"^",1),LA7ISQN=$P(LA7I(0),"^",2),LA76304=$P(LA7I(0),"^",3)
"RTN","LA7VIN1A",23,0)
 . S XMPARM(1)=$$GET1^DIQ(62.48,$P(LA7I(0),"^",4)_",",.01)
"RTN","LA7VIN1A",24,0)
 . S XMPARM(2)=$P(LA7I(0),"^",5)
"RTN","LA7VIN1A",25,0)
 . S XMPARM(3)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","PNM"))
"RTN","LA7VIN1A",26,0)
 . S XMPARM(4)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","SSN"))
"RTN","LA7VIN1A",27,0)
 . S XMPARM(5)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","SID"))
"RTN","LA7VIN1A",28,0)
 . S XMPARM(6)=$$FMTE^XLFDT($G(^LAH(LWL,1,LA7ISQN,.1,"OBR","ORCDT")),"MZ")
"RTN","LA7VIN1A",29,0)
  .S XMPARM(7)=$P(LA7I(0),"^",8)_" ["_$P(LA7I(0),"^",7)_"]"
"RTN","LA7VIN1A",30,0)
 . S X=$G(^LAH(LWL,1,LA7ISQN,LA76304)),X(5)=$P(X,"^",5)
"RTN","LA7VIN1A",31,0)
 . S XMPARM(8)=$$GET1^DIQ(4,$P(X,"^",9)_",",.01)
"RTN","LA7VIN1A",32,0)
 . S XMPARM(9)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","FID"))
"RTN","LA7VIN1A",33,0)
 . S XMPARM(10)=$P(X,"^")
"RTN","LA7VIN1A",34,0)
 . S XMPARM(11)=$P(X(5),"!",7)
"RTN","LA7VIN1A",35,0)
 . S XMPARM(12)=$P(X(5),"!",2)_$S($P(X(5),"!",3)'="":"-"_$P(X(5),"!",3),1:"")
"RTN","LA7VIN1A",36,0)
 . S LA7X=$P(LA7I(0),"^",9),X=" L^ H^LL^HH^ <^ >^ N^ A^AA^ U^ D^ B^ W^ S^ R^ I^MS^VS"
"RTN","LA7VIN1A",37,0)
 . S I=$F(X,LA7X)\3 S:I LA7X=$P($T(ABFLAGS+I^LA7VHLU1),";;",2)
"RTN","LA7VIN1A",38,0)
 . S XMPARM(13)=LA7X
"RTN","LA7VIN1A",39,0)
 . S X="UNKNOWN"
"RTN","LA7VIN1A",40,0)
 . I $P(LA7I(0),"^",6)="C" S X="Record coming over is a correction and thus replaces a final result"
"RTN","LA7VIN1A",41,0)
 . I $P(LA7I(0),"^",6)="D" S X="Deletes the OBX record"
"RTN","LA7VIN1A",42,0)
 . I $P(LA7I(0),"^",6)="W" S X="Post original as wrong, e.g., transmitted for wrong patient"
"RTN","LA7VIN1A",43,0)
 . S XMPARM(14)=X
"RTN","LA7VIN1A",44,0)
 . S LA7BODY(1)=" ",LA7BODY(2)="Comments:"
"RTN","LA7VIN1A",45,0)
 . S I=0
"RTN","LA7VIN1A",46,0)
 . F  S I=$O(^LAH(LWL,1,LA7ISQN,1,I)) Q:'I  S LA7BODY(I+2)=$P(^(I),"^")
"RTN","LA7VIN1A",47,0)
 . D SMB
"RTN","LA7VIN1A",48,0)
 . S XQAMSG="Lab Messaging - Amended results received from "_XMPARM(1),XQAID="LA7-AMENDED-"_XMPARM(1)
"RTN","LA7VIN1A",49,0)
 . D SA
"RTN","LA7VIN1A",50,0)
 ;
"RTN","LA7VIN1A",51,0)
 K ^TMP("LA7 AMENDED RESULTS",$J)
"RTN","LA7VIN1A",52,0)
 ;
"RTN","LA7VIN1A",53,0)
 Q
"RTN","LA7VIN1A",54,0)
 ;
"RTN","LA7VIN1A",55,0)
 ;
"RTN","LA7VIN1A",56,0)
SENDUNCB ; Send units/normals changed bulletin
"RTN","LA7VIN1A",57,0)
 ;
"RTN","LA7VIN1A",58,0)
 N LA76248,LA76304,LA7BODY,LA7I,LA7ISQN,LA7TSK,LA7X,LWL
"RTN","LA7VIN1A",59,0)
 N XMBODY,XMDUZ,XMBNAME,XMINSTR,XMPARM,XMTO,X,Y
"RTN","LA7VIN1A",60,0)
 N XQA,XQAID,XQADATA,XQAFLAG,XQAMSG,XQAOPT,XQAROU
"RTN","LA7VIN1A",61,0)
 ;
"RTN","LA7VIN1A",62,0)
 I '$G(DUZ) D DUZ^XUP(.5)
"RTN","LA7VIN1A",63,0)
 S XMBNAME="LA7 UNITS/NORMALS CHANGED"
"RTN","LA7VIN1A",64,0)
 S LA7I=0
"RTN","LA7VIN1A",65,0)
 F  S LA7I=$O(^TMP("LA7 UNITS/NORMALS CHANGED",$J,LA7I)) Q:'LA7I  D
"RTN","LA7VIN1A",66,0)
 . S LA7I(0)=^TMP("LA7 UNITS/NORMALS CHANGED",$J,LA7I)
"RTN","LA7VIN1A",67,0)
 . S LWL=$P(LA7I(0),"^",1),LA7ISQN=$P(LA7I(0),"^",2),LA76304=$P(LA7I(0),"^",3),LA76248=$P(LA7I(0),"^",4)
"RTN","LA7VIN1A",68,0)
 . S XMPARM(1)=$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VIN1A",69,0)
 . S XMPARM(2)=$P(LA7I(0),"^",5)
"RTN","LA7VIN1A",70,0)
 . S XMPARM(3)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","PNM"))
"RTN","LA7VIN1A",71,0)
 . S XMPARM(4)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","SSN"))
"RTN","LA7VIN1A",72,0)
 . S XMPARM(5)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","SID"))
"RTN","LA7VIN1A",73,0)
 . S XMPARM(6)=$$FMTE^XLFDT($G(^LAH(LWL,1,LA7ISQN,.1,"OBR","ORCDT")),"MZ")
"RTN","LA7VIN1A",74,0)
  .S XMPARM(7)=$P(LA7I(0),"^",8)_" ["_$P(LA7I(0),"^",7)_"]"
"RTN","LA7VIN1A",75,0)
 . S X=$G(^LAH(LWL,1,LA7ISQN,LA76304)),X(5)=$P(X,"^",5)
"RTN","LA7VIN1A",76,0)
 . S XMPARM(8)=$$GET1^DIQ(4,$P(X,"^",9)_",",.01)
"RTN","LA7VIN1A",77,0)
 . S XMPARM(9)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","FID"))
"RTN","LA7VIN1A",78,0)
 . S XMPARM(10)=$$GET1^DIQ(60,$P(LA7I(0),"^",10)_",",.01)
"RTN","LA7VIN1A",79,0)
 . S XMPARM(11)=$P(X(5),"!",7)
"RTN","LA7VIN1A",80,0)
 . S XMPARM(12)=$P(X(5),"!",2)_$S($P(X(5),"!",3)'="":"-"_$P(X(5),"!",3),1:"")
"RTN","LA7VIN1A",81,0)
 . S XMTO("G."_$$FAMG^LA7VHLU1(LA76248,2))=""
"RTN","LA7VIN1A",82,0)
 . D SMB
"RTN","LA7VIN1A",83,0)
 . S XQAMSG="Lab Messaging - Reference Lab Units/Normals Change received from "_XMPARM(1),XQAID="LA7-UNITS/NORMALS-CHANGED-"_XMPARM(1)
"RTN","LA7VIN1A",84,0)
 . D SA
"RTN","LA7VIN1A",85,0)
 ;
"RTN","LA7VIN1A",86,0)
 K ^TMP("LA7 UNITS/NORMALS CHANGED",$J)
"RTN","LA7VIN1A",87,0)
 ;
"RTN","LA7VIN1A",88,0)
 Q
"RTN","LA7VIN1A",89,0)
 ;
"RTN","LA7VIN1A",90,0)
 ;
"RTN","LA7VIN1A",91,0)
SENDACB ; Send abnormal/critical bulletin
"RTN","LA7VIN1A",92,0)
 ;
"RTN","LA7VIN1A",93,0)
 N LA76248,LA76304,LA7BODY,LA7I,LA7ISQN,LA7TSK,LA7X,LWL
"RTN","LA7VIN1A",94,0)
 N XMBODY,XMDUZ,XMBNAME,XMINSTR,XMPARM,XMTO,X,Y
"RTN","LA7VIN1A",95,0)
 N XQA,XQAID,XQADATA,XQAFLAG,XQAMSG,XQAOPT,XQAROU
"RTN","LA7VIN1A",96,0)
 ;
"RTN","LA7VIN1A",97,0)
 I '$G(DUZ) D DUZ^XUP(.5)
"RTN","LA7VIN1A",98,0)
 S XMBNAME="LA7 ABNORMAL RESULTS RECEIVED"
"RTN","LA7VIN1A",99,0)
 S LA7I=0
"RTN","LA7VIN1A",100,0)
 F  S LA7I=$O(^TMP("LA7 ABNORMAL RESULTS",$J,LA7I)) Q:'LA7I  D
"RTN","LA7VIN1A",101,0)
 . S LA7I(0)=^TMP("LA7 ABNORMAL RESULTS",$J,LA7I)
"RTN","LA7VIN1A",102,0)
 . S LWL=$P(LA7I(0),"^",1),LA7ISQN=$P(LA7I(0),"^",2),LA76304=$P(LA7I(0),"^",3),LA76248=$P(LA7I(0),"^",4)
"RTN","LA7VIN1A",103,0)
 . S XMPARM(1)=$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VIN1A",104,0)
 . S XMPARM(2)=$P(LA7I(0),"^",5)
"RTN","LA7VIN1A",105,0)
 . S XMPARM(3)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","PNM"))
"RTN","LA7VIN1A",106,0)
 . S XMPARM(4)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","SSN"))
"RTN","LA7VIN1A",107,0)
 . S XMPARM(5)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","SID"))
"RTN","LA7VIN1A",108,0)
 . S XMPARM(6)=$$FMTE^XLFDT($G(^LAH(LWL,1,LA7ISQN,.1,"OBR","ORCDT")),"MZ")
"RTN","LA7VIN1A",109,0)
  .S XMPARM(7)=$P(LA7I(0),"^",8)_" ["_$P(LA7I(0),"^",7)_"]"
"RTN","LA7VIN1A",110,0)
 . S X=$G(^LAH(LWL,1,LA7ISQN,LA76304)),X(5)=$P(X,"^",5)
"RTN","LA7VIN1A",111,0)
 . S XMPARM(8)=$$GET1^DIQ(4,$P(X,"^",9)_",",.01)
"RTN","LA7VIN1A",112,0)
 . S XMPARM(9)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","FID"))
"RTN","LA7VIN1A",113,0)
 . S XMPARM(10)=$P(X,"^")
"RTN","LA7VIN1A",114,0)
 . S XMPARM(11)=$P(X(5),"!",7)
"RTN","LA7VIN1A",115,0)
 . S XMPARM(12)=$P(X(5),"!",2)_$S($P(X(5),"!",3)'="":"-"_$P(X(5),"!",3),1:"")
"RTN","LA7VIN1A",116,0)
 . S LA7X=$P(LA7I(0),"^",9),X=" L^ H^LL^HH^ <^ >^ N^ A^AA^ U^ D^ B^ W^ S^ R^ I^MS^VS"
"RTN","LA7VIN1A",117,0)
 . S I=$F(X,LA7X)\3 S:I LA7X=$P($T(ABFLAGS+I^LA7VHLU1),";;",2)
"RTN","LA7VIN1A",118,0)
 . S XMPARM(13)=LA7X
"RTN","LA7VIN1A",119,0)
 . D SMB
"RTN","LA7VIN1A",120,0)
 . S XQAMSG="Lab Messaging - Reference Lab Abnormal Results received from "_XMPARM(1),XQAID="LA7-ABNORMAL-RESULTS-"_XMPARM(1)
"RTN","LA7VIN1A",121,0)
 . D SA
"RTN","LA7VIN1A",122,0)
 ;
"RTN","LA7VIN1A",123,0)
 K ^TMP("LA7 ABNORMAL RESULTS",$J)
"RTN","LA7VIN1A",124,0)
 ;
"RTN","LA7VIN1A",125,0)
 Q
"RTN","LA7VIN1A",126,0)
 ;
"RTN","LA7VIN1A",127,0)
 ;
"RTN","LA7VIN1A",128,0)
SMB ; Send mail bulletin
"RTN","LA7VIN1A",129,0)
 ; Ignore any restrictions (domain closed or protected by security key)
"RTN","LA7VIN1A",130,0)
 ;
"RTN","LA7VIN1A",131,0)
 N XMERR
"RTN","LA7VIN1A",132,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LA7VIN1A",133,0)
 S XMINSTR("FROM")="LAB PACKAGE"
"RTN","LA7VIN1A",134,0)
 S XMTO("G."_$$FAMG^LA7VHLU1(LA76248,1))=""
"RTN","LA7VIN1A",135,0)
 D SENDBULL^XMXAPI(DUZ,XMBNAME,.XMPARM,$S($D(LA7BODY):"LA7BODY",1:""),.XMTO,.XMINSTR,.LA7TSK,"")
"RTN","LA7VIN1A",136,0)
 ;
"RTN","LA7VIN1A",137,0)
 Q
"RTN","LA7VIN1A",138,0)
 ;
"RTN","LA7VIN1A",139,0)
 ;
"RTN","LA7VIN1A",140,0)
SA ; Send alert
"RTN","LA7VIN1A",141,0)
 ;
"RTN","LA7VIN1A",142,0)
 M XQA=XMTO
"RTN","LA7VIN1A",143,0)
 D DEL^LA7UXQA(XQAID)
"RTN","LA7VIN1A",144,0)
 D SETUP^XQALERT
"RTN","LA7VIN1A",145,0)
 ;
"RTN","LA7VIN1A",146,0)
 Q
"RTN","LA7VIN1A",147,0)
 ;
"RTN","LA7VIN1A",148,0)
 ;
"RTN","LA7VIN1A",149,0)
CHKOK(LA7INDX) ; Check if ok to send bulletin on added/reflexed tests order change
"RTN","LA7VIN1A",150,0)
 ; Returns OK = 1 if results associated with added/reflex test are not
"RTN","LA7VIN1A",151,0)
 ;               on the accession.
"RTN","LA7VIN1A",152,0)
 ;         OK = 0 if accession already has tests on accession.
"RTN","LA7VIN1A",153,0)
 ;
"RTN","LA7VIN1A",154,0)
 N LA760,LA7AA,LA7AD,LA7AN,LA7I,LA7TREEN,LRUID,OK,X
"RTN","LA7VIN1A",155,0)
 S OK=1,LRUID=$P($G(^LAH(LWL,1,LA7ISQN,.1,"OBR","SID")),"^")
"RTN","LA7VIN1A",156,0)
 ;
"RTN","LA7VIN1A",157,0)
 ; Store all tests accessioned in ^TMP
"RTN","LA7VIN1A",158,0)
 S X=$Q(^LRO(68,"C",LRUID))
"RTN","LA7VIN1A",159,0)
 I X'="",$QS(X,3)=LRUID D
"RTN","LA7VIN1A",160,0)
 . K ^TMP("LA7TREE",$J)
"RTN","LA7VIN1A",161,0)
 . S LA7AA=$QS(X,4),LA7AD=$QS(X,5),LA7AN=$QS(X,6),LA7I=0
"RTN","LA7VIN1A",162,0)
 . F  S LA7I=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7I)) Q:'LA7I  D UNWIND^LA7UTIL(LA7I)
"RTN","LA7VIN1A",163,0)
 . I '$O(^TMP("LA7 ORDER STATUS",$J,LA7INDX,0)) Q
"RTN","LA7VIN1A",164,0)
 . S (LA7I,OK)=0
"RTN","LA7VIN1A",165,0)
 . F  S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,LA7INDX,LA7I)) Q:'LA7I  D  Q:OK
"RTN","LA7VIN1A",166,0)
 . . I '$D(^TMP("LA7TREE",$J,LA7I)) S OK=1 ;wasn't ordered
"RTN","LA7VIN1A",167,0)
 . K ^TMP("LA7TREE",$J)
"RTN","LA7VIN1A",168,0)
 Q OK
"RTN","LA7VIN1A",169,0)
 ;
"RTN","LA7VIN1A",170,0)
 ;
"RTN","LA7VIN1A",171,0)
LAHCLUP ; LAH clean up
"RTN","LA7VIN1A",172,0)
 ; Clean up entry in LAH if no results/comments to process
"RTN","LA7VIN1A",173,0)
 ;   i.e. if entry added from ORR msg and needed for mail bulletins.
"RTN","LA7VIN1A",174,0)
 N LA7X
"RTN","LA7VIN1A",175,0)
 S LA7X=$O(^LAH(LWL,1,LA7ISQN,.3))
"RTN","LA7VIN1A",176,0)
 I LA7X="" D ZAPALL^LRVR3(LWL,LA7ISQN)
"RTN","LA7VIN1A",177,0)
 ;
"RTN","LA7VIN1A",178,0)
 Q
"RTN","LA7VIN1B")
0^84^B33146599
"RTN","LA7VIN1B",1,0)
LA7VIN1B ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:44
"RTN","LA7VIN1B",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN1B",3,0)
 ;
"RTN","LA7VIN1B",4,0)
 ; This routine is a continuation of LA7VIN1.
"RTN","LA7VIN1B",5,0)
 ;
"RTN","LA7VIN1B",6,0)
 Q
"RTN","LA7VIN1B",7,0)
 ;
"RTN","LA7VIN1B",8,0)
PL ; Create performing lab comment for entries in LAH.
"RTN","LA7VIN1B",9,0)
 ;
"RTN","LA7VIN1B",10,0)
 N LA7I,LA7ISQN,LA7ISQN2,LA7LWL,LA7ROOT,LA7SS,LA7X
"RTN","LA7VIN1B",11,0)
 ;
"RTN","LA7VIN1B",12,0)
 S LA7ROOT="^TMP(""LA7-PL-NTE"",$J)"
"RTN","LA7VIN1B",13,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7-PL-NTE"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1B",14,0)
 . S LA7LWL=$QS(LA7ROOT,3),LA7ISQN=$QS(LA7ROOT,4),LA7SS=$QS(LA7ROOT,5)
"RTN","LA7VIN1B",15,0)
 . S LA7SFAC=^TMP("LA7-PL-NTE",$J,LA7LWL,LA7ISQN,LA7SS)
"RTN","LA7VIN1B",16,0)
 . I LA7SFAC'="" D PLCMT
"RTN","LA7VIN1B",17,0)
 ;
"RTN","LA7VIN1B",18,0)
 K ^TMP("LA7-PL-NTE-INST",$J)
"RTN","LA7VIN1B",19,0)
 ;
"RTN","LA7VIN1B",20,0)
 Q
"RTN","LA7VIN1B",21,0)
 ;
"RTN","LA7VIN1B",22,0)
 ;
"RTN","LA7VIN1B",23,0)
PLCMT ; Retrieve and store performing lab name/address info
"RTN","LA7VIN1B",24,0)
 ;
"RTN","LA7VIN1B",25,0)
 N A,CLIA,LA74,LA7I,LA7J,LA7ND,LA7X,LA7Y
"RTN","LA7VIN1B",26,0)
 ;
"RTN","LA7VIN1B",27,0)
 S LA74=$$FINDSITE^LA7VHLU2(LA7SFAC,1,1)
"RTN","LA7VIN1B",28,0)
 I LA74<1 Q
"RTN","LA7VIN1B",29,0)
 ;
"RTN","LA7VIN1B",30,0)
 I '$D(^TMP("LA7-PL-NTE-INST",$J)) D
"RTN","LA7VIN1B",31,0)
 . S LA7X=$$NAME^XUAF4(LA74),CLIA=$$ID^XUAF4("CLIA",LA74),LA7J=1
"RTN","LA7VIN1B",32,0)
 . S A(LA7J)="Performing laboratory:",LA7J=LA7J+1
"RTN","LA7VIN1B",33,0)
 . S A(LA7J)=LA7X
"RTN","LA7VIN1B",34,0)
 . I CLIA'="" D
"RTN","LA7VIN1B",35,0)
 . . I $L(A(LA7J))<60 S A(LA7J)=A(LA7J)_" [CLIA# "_CLIA_"]"
"RTN","LA7VIN1B",36,0)
 . . E  S LA7J=LA7J+1,A(LA7J)="CLIA# "_CLIA
"RTN","LA7VIN1B",37,0)
 . S LA7X=$$PADD^XUAF4(LA74)
"RTN","LA7VIN1B",38,0)
 . I LA7X'="" S LA7J=LA7J+1,A(LA7J)=$P(LA7X,"^")_" "_$P(LA7X,"^",2)_", "_$P(LA7X,"^",3)_" "_$P(LA7X,"^",4)
"RTN","LA7VIN1B",39,0)
 . M ^TMP("LA7-PL-NTE-INST",$J,LA74)=A
"RTN","LA7VIN1B",40,0)
 ;
"RTN","LA7VIN1B",41,0)
 I $D(^TMP("LA7-PL-NTE-INST",$J)) M A=^TMP("LA7-PL-NTE-INST",$J,LA74)
"RTN","LA7VIN1B",42,0)
 ;
"RTN","LA7VIN1B",43,0)
 ; Store MI performing lab comment
"RTN","LA7VIN1B",44,0)
 I LA7SS="MI" D  Q
"RTN","LA7VIN1B",45,0)
 . F LA7I=1,5,8,11,16 D
"RTN","LA7VIN1B",46,0)
 . . N LA7CHK,LA7J,LA7K,LA7SET
"RTN","LA7VIN1B",47,0)
 . . S LA7SET=0
"RTN","LA7VIN1B",48,0)
 . . S LA7CHK=$S(LA7I=1:"1^2^3^4^14^19^25^26^31",LA7I=5:"5^6^7^21^24^27",LA7I=8:"8^9^10^15^22^28",LA7I=11:"11^12^13^23^29",LA7I=16:"16^17^18^20^30",1:0)
"RTN","LA7VIN1B",49,0)
 . . F LA7J=1:1 S LA7K=$P(LA7CHK,"^",LA7J) Q:'LA7K  I $D(^LAH(LA7LWL,1,LA7ISQN,"MI",LA7K)) S LA7SET=1 Q
"RTN","LA7VIN1B",50,0)
 . . I 'LA7SET Q
"RTN","LA7VIN1B",51,0)
 . . S LA7ND=$S(LA7I=1:4,LA7I=5:7,LA7I=8:10,LA7I=11:13,LA7I=16:18,1:4)
"RTN","LA7VIN1B",52,0)
 . . S LA7ISQN2=$O(^LAH(LA7LWL,1,LA7ISQN,"MI",LA7ND,"A"),-1),LA7J=0
"RTN","LA7VIN1B",53,0)
 . . I LA7ISQN2>0 S LA7ISQN2=LA7ISQN2+1,^LAH(LA7LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,0)=" "
"RTN","LA7VIN1B",54,0)
 . . F  S LA7J=$O(A(LA7J)) Q:'LA7J  S LA7ISQN2=LA7ISQN2+1,^LAH(LA7LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,0)=A(LA7J)
"RTN","LA7VIN1B",55,0)
 ;
"RTN","LA7VIN1B",56,0)
 ; Store AP performing lab comment
"RTN","LA7VIN1B",57,0)
 I "SPCYEM"[LA7SS D  Q
"RTN","LA7VIN1B",58,0)
 . S LA7ISQN2=$O(^LAH(LA7LWL,1,LA7ISQN,LA7SS,99,"A"),-1),LA7J=0
"RTN","LA7VIN1B",59,0)
 . I LA7ISQN2>0 S LA7ISQN2=LA7ISQN2+1,^LAH(LA7LWL,1,LA7ISQN,LA7SS,99,LA7ISQN2,0)=" "
"RTN","LA7VIN1B",60,0)
 . F  S LA7J=$O(A(LA7J)) Q:'LA7J  S LA7ISQN2=LA7ISQN2+1,^LAH(LA7LWL,1,LA7ISQN,LA7SS,99,LA7ISQN2,0)=A(LA7J)
"RTN","LA7VIN1B",61,0)
 ;
"RTN","LA7VIN1B",62,0)
 Q
"RTN","LA7VIN1B",63,0)
 ;
"RTN","LA7VIN1B",64,0)
 ;
"RTN","LA7VIN1B",65,0)
SENDOSB ; Send order status bulletin when status not OK.
"RTN","LA7VIN1B",66,0)
 ;
"RTN","LA7VIN1B",67,0)
 N I,J,K,LA76248,LA7BODY,LA7I,LA7ISQN,LA7ONLT,LA7TSK,LA7X,LWL
"RTN","LA7VIN1B",68,0)
 N X,XMDUZ,XMBNAME,XMINSTR,XMPARM,XMBODY,XMTO
"RTN","LA7VIN1B",69,0)
 I '$G(DUZ) D DUZ^XUP(.5)
"RTN","LA7VIN1B",70,0)
 ;
"RTN","LA7VIN1B",71,0)
 S XMBNAME="LA7 ORDER STATUS CHANGED"
"RTN","LA7VIN1B",72,0)
 S LA7I=0
"RTN","LA7VIN1B",73,0)
 F  S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,LA7I)) Q:'LA7I  D
"RTN","LA7VIN1B",74,0)
 . S LA7I(0)=^TMP("LA7 ORDER STATUS",$J,LA7I)
"RTN","LA7VIN1B",75,0)
 . S LWL=$P(LA7I(0),"^",1),LA7ISQN=$P(LA7I(0),"^",2),LA7ONLT=$P(LA7I(0),"^",3),LA76248=$P(LA7I(0),"^",5)
"RTN","LA7VIN1B",76,0)
 . S X="UNKNOWN"
"RTN","LA7VIN1B",77,0)
 . I $P(LA7I(0),"^",7)="UA" S X="Unable to accept order/service"
"RTN","LA7VIN1B",78,0)
 . I $P(LA7I(0),"^",7)="OC" S X="Order/service cancel"
"RTN","LA7VIN1B",79,0)
 . I $P(LA7I(0),"^",7)="CR" S X="Canceled as requested"
"RTN","LA7VIN1B",80,0)
 . I $P(LA7I(0),"^",8)="A" S X="Add ordered tests to the existing specimen"
"RTN","LA7VIN1B",81,0)
 . I $P(LA7I(0),"^",8)="G" S X="Generated order; reflex order"
"RTN","LA7VIN1B",82,0)
 . I $P(LA7I(0),"^",8)?1(1"A",1"G") Q:'$$CHKOK^LA7VIN1A(LA7I)
"RTN","LA7VIN1B",83,0)
 . I X="UNKNOWN",$P(LA7I(0),"^",10)'="" D NP
"RTN","LA7VIN1B",84,0)
 . S XMPARM(1)=X
"RTN","LA7VIN1B",85,0)
 . S XMPARM(2)=$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VIN1B",86,0)
 . S XMPARM(3)=$P(LA7I(0),"^",6)
"RTN","LA7VIN1B",87,0)
 . S XMPARM(4)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","PNM"))
"RTN","LA7VIN1B",88,0)
 . S XMPARM(5)=$G(^LAH(LWL,1,LA7ISQN,.1,"PID","SSN"))
"RTN","LA7VIN1B",89,0)
 . S XMPARM(6)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","SID"))
"RTN","LA7VIN1B",90,0)
 . S XMPARM(7)=$$FMTE^XLFDT($G(^LAH(LWL,1,LA7ISQN,.1,"OBR","ORCDT")),"MZ")
"RTN","LA7VIN1B",91,0)
 . S XMPARM(8)=$P(LA7I(0),"^",4)_" ["_$P(LA7I(0),"^",3)_"]"
"RTN","LA7VIN1B",92,0)
 . S XMPARM(9)=$G(^LAH(LWL,1,LA7ISQN,.1,"OBR","FID"))
"RTN","LA7VIN1B",93,0)
 . S XMPARM(10)=$P(LA7I(0),"^",9)
"RTN","LA7VIN1B",94,0)
 . S J=2,LA7BODY(1)=" ",LA7BODY(2)="Comments:"
"RTN","LA7VIN1B",95,0)
 . F K="MSA","OCR" D
"RTN","LA7VIN1B",96,0)
 . . S X=$G(^TMP("LA7 ORDER STATUS",$J,LA7I,K))
"RTN","LA7VIN1B",97,0)
 . . I X'="" S J=J+1,LA7BODY(J)=X
"RTN","LA7VIN1B",98,0)
 . S I=0
"RTN","LA7VIN1B",99,0)
 . F  S I=$O(^LAH(LWL,1,LA7ISQN,1,I)) Q:'I  S J=J+1,LA7BODY(J)=$P(^(I),"^")
"RTN","LA7VIN1B",100,0)
 . I LA7SS?1(1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN1B",101,0)
 . . S I=0
"RTN","LA7VIN1B",102,0)
 . . F  S I=$O(^LAH(LWL,1,LA7ISQN,LA7SS,99,I)) Q:'I  S J=J+1,LA7BODY(J)=$P(^(I,0),"^")
"RTN","LA7VIN1B",103,0)
 . D SMB^LA7VIN1A
"RTN","LA7VIN1B",104,0)
 . S XQAMSG="Lab Messaging - Order status change received from "_XMPARM(2),XQAID="LA7-ORDER STATUS-"_XMPARM(2)
"RTN","LA7VIN1B",105,0)
 . D SA^LA7VIN1A,LAHCLUP^LA7VIN1A
"RTN","LA7VIN1B",106,0)
 ;
"RTN","LA7VIN1B",107,0)
 K ^TMP("LA7 ORDER STATUS",$J)
"RTN","LA7VIN1B",108,0)
 ;
"RTN","LA7VIN1B",109,0)
 ;
"RTN","LA7VIN1B",110,0)
 Q
"RTN","LA7VIN1B",111,0)
 ;
"RTN","LA7VIN1B",112,0)
 ;
"RTN","LA7VIN1B",113,0)
NP ; Determine not performed reason
"RTN","LA7VIN1B",114,0)
 ;
"RTN","LA7VIN1B",115,0)
 N Y
"RTN","LA7VIN1B",116,0)
 S Y=$P(LA7I(0),"^",10)
"RTN","LA7VIN1B",117,0)
 I Y="O" S X="Order received; specimen not yet received" Q
"RTN","LA7VIN1B",118,0)
 I Y="I" S X="No results available; specimen received, procedure incomplete" Q
"RTN","LA7VIN1B",119,0)
 I Y="S" S X="No results available; procedure scheduled, but not done" Q
"RTN","LA7VIN1B",120,0)
 I Y="A" S X="Some, but not all, results available" Q
"RTN","LA7VIN1B",121,0)
 I Y="P" S X="Preliminary: A verified early result is available, final results not yet obtained" Q
"RTN","LA7VIN1B",122,0)
 I Y="C" S X="Correction to results" Q
"RTN","LA7VIN1B",123,0)
 I Y="R" S X="Results stored; not yet verified" Q
"RTN","LA7VIN1B",124,0)
 I Y="F" S X="Final results; results stored and verified. Can only be changed with a corrected result." Q
"RTN","LA7VIN1B",125,0)
 I Y="X" S X="No results available; Order canceled." Q
"RTN","LA7VIN1B",126,0)
 I Y="Y" S X="No order on record for this test. (Used only on queries)" Q
"RTN","LA7VIN1B",127,0)
 I Y="Z" S X="No record of this patient. (Used only on queries)" Q
"RTN","LA7VIN1B",128,0)
 Q
"RTN","LA7VIN2")
0^35^B44814406
"RTN","LA7VIN2",1,0)
LA7VIN2 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:49
"RTN","LA7VIN2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN2",3,0)
 ;
"RTN","LA7VIN2",4,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN2",5,0)
 Q
"RTN","LA7VIN2",6,0)
 ;
"RTN","LA7VIN2",7,0)
MSH ; Process MSH segment
"RTN","LA7VIN2",8,0)
 N LA7X
"RTN","LA7VIN2",9,0)
 ;
"RTN","LA7VIN2",10,0)
 I $E(LA7SEG(0),1,3)'="MSH" D  Q
"RTN","LA7VIN2",11,0)
 . S (LA7ABORT,LA7ERR)=7
"RTN","LA7VIN2",12,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",13,0)
 ;
"RTN","LA7VIN2",14,0)
 ; Encoding characters
"RTN","LA7VIN2",15,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VIN2",16,0)
 S LA7CS=$E(LA7SEG(0),5)
"RTN","LA7VIN2",17,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VIN2",18,0)
 ; No field or component separator
"RTN","LA7VIN2",19,0)
 I LA7FS=""!(LA7CS="") D
"RTN","LA7VIN2",20,0)
 . S (LA7ABORT,LA7ERR)=8
"RTN","LA7VIN2",21,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",22,0)
 ;
"RTN","LA7VIN2",23,0)
 ; Sending application
"RTN","LA7VIN2",24,0)
 S LA7SAP=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",25,0)
 S LA7ID=LA7SAP_"-I-"
"RTN","LA7VIN2",26,0)
 ;
"RTN","LA7VIN2",27,0)
 ; Sending facility
"RTN","LA7VIN2",28,0)
 S LA7SFAC=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",29,0)
 ;
"RTN","LA7VIN2",30,0)
 ; Receiving application
"RTN","LA7VIN2",31,0)
 S LA7RAP=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",32,0)
 ;
"RTN","LA7VIN2",33,0)
 ; Receiving facility
"RTN","LA7VIN2",34,0)
 S LA7RFAC=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",35,0)
 ;
"RTN","LA7VIN2",36,0)
 ; Message date/time from first component
"RTN","LA7VIN2",37,0)
 S LA7MEDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,7,LA7FS),LA7CS),"L")
"RTN","LA7VIN2",38,0)
 ;
"RTN","LA7VIN2",39,0)
 ; Message type
"RTN","LA7VIN2",40,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",41,0)
 S LA7MTYP=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",42,0)
 ;
"RTN","LA7VIN2",43,0)
 ; Message Control ID
"RTN","LA7VIN2",44,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VIN2",45,0)
 ;
"RTN","LA7VIN2",46,0)
 ; HL7 version
"RTN","LA7VIN2",47,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN2",48,0)
 S LA7HLV=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",49,0)
 Q
"RTN","LA7VIN2",50,0)
 ;
"RTN","LA7VIN2",51,0)
 ;
"RTN","LA7VIN2",52,0)
ORC ; Process ORC segment
"RTN","LA7VIN2",53,0)
 N LA7X,LA7Y
"RTN","LA7VIN2",54,0)
 ;
"RTN","LA7VIN2",55,0)
 ; Order control
"RTN","LA7VIN2",56,0)
 S LA7OTYPE=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",57,0)
 ;
"RTN","LA7VIN2",58,0)
 ; Place order number
"RTN","LA7VIN2",59,0)
 S LA7PON=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",60,0)
 ;
"RTN","LA7VIN2",61,0)
 ; Setup shipping manifest variable
"RTN","LA7VIN2",62,0)
 S LA7Y=0
"RTN","LA7VIN2",63,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VIN2",64,0)
 I LA7X'="" S LA7Y=$O(^LAHM(62.8,"B",LA7X,0))
"RTN","LA7VIN2",65,0)
 I LA7Y S LA7628=LA7Y
"RTN","LA7VIN2",66,0)
 S LA7SM=LA7Y_"^"_LA7X
"RTN","LA7VIN2",67,0)
 ;
"RTN","LA7VIN2",68,0)
 ; Setup shipping configuration variable
"RTN","LA7VIN2",69,0)
 I $P(LA7SM,"^") S LA7629=+$P($G(^LAHM(62.8,$P(LA7SM,"^"),0)),"^",2)
"RTN","LA7VIN2",70,0)
 E  S LA7629=0
"RTN","LA7VIN2",71,0)
 ;
"RTN","LA7VIN2",72,0)
 ; Set new order/shipping manifest received alert/identifiers
"RTN","LA7VIN2",73,0)
 I LA7MTYP="ORM",$P(LA7SM,"^",2)'="" D
"RTN","LA7VIN2",74,0)
 . S ^TMP("LA7-ORM",$J,LA76248,LA76249,$P(LA7SM,"^",2))=""
"RTN","LA7VIN2",75,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,$P(LA7SM,"^",2),1)
"RTN","LA7VIN2",76,0)
 . D SETID^LA7VHLU1(LA76249,"",$P(LA7SM,"^",2),0)
"RTN","LA7VIN2",77,0)
 ;
"RTN","LA7VIN2",78,0)
 ; Order quantity/timing (duration, units, urgency)
"RTN","LA7VIN2",79,0)
 S LA7ODUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,3)
"RTN","LA7VIN2",80,0)
 S LA7ODURU=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,4)
"RTN","LA7VIN2",81,0)
 S LA7OUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,6)
"RTN","LA7VIN2",82,0)
 ;
"RTN","LA7VIN2",83,0)
 ; Date/time of transaction
"RTN","LA7VIN2",84,0)
 S LA7ORDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,10,LA7FS),LA7CS),"L")
"RTN","LA7VIN2",85,0)
 ;
"RTN","LA7VIN2",86,0)
 ; Placer's entered by (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",87,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VIN2",88,0)
 S LA7PEB=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",89,0)
 I LA7PEB="^0^" S LA7PEB=""
"RTN","LA7VIN2",90,0)
 ;
"RTN","LA7VIN2",91,0)
 ; Placer's verified by (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",92,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN2",93,0)
 S LA7PVB=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",94,0)
 I LA7PVB="^0^" S LA7PVB=""
"RTN","LA7VIN2",95,0)
 ;
"RTN","LA7VIN2",96,0)
 ; Placer's ordering provider (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",97,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,13,LA7FS)
"RTN","LA7VIN2",98,0)
 S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",99,0)
 I LA7POP="^0^" S LA7POP=""
"RTN","LA7VIN2",100,0)
 ;
"RTN","LA7VIN2",101,0)
 ; Enterer's ordering location
"RTN","LA7VIN2",102,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,14,LA7FS)
"RTN","LA7VIN2",103,0)
 S LA7Y=$$PLTFM^LA7VHLU4(LA7X,LA7FS,LA7ECH)
"RTN","LA7VIN2",104,0)
 S LA7EOL=$P(LA7Y,"^",1,3)
"RTN","LA7VIN2",105,0)
 I LA7EOL="^0^" S LA7EOL=""
"RTN","LA7VIN2",106,0)
 ;
"RTN","LA7VIN2",107,0)
 ; Order control code reason
"RTN","LA7VIN2",108,0)
 S LA7OCR=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VIN2",109,0)
 ;
"RTN","LA7VIN2",110,0)
 ;
"RTN","LA7VIN2",111,0)
 ; If ORM order message, determine specimen collecting site from ORC
"RTN","LA7VIN2",112,0)
 ; segment, if none use MSH sending facility value
"RTN","LA7VIN2",113,0)
 S LA7CSITE=""
"RTN","LA7VIN2",114,0)
 I LA7MTYP="ORM" D
"RTN","LA7VIN2",115,0)
 . S LA7X=$P($$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7CS)
"RTN","LA7VIN2",116,0)
 . S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7X,2,1)
"RTN","LA7VIN2",117,0)
 . I LA7CSITE'>0 S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7SFAC,2,0)
"RTN","LA7VIN2",118,0)
 ;
"RTN","LA7VIN2",119,0)
 Q
"RTN","LA7VIN2",120,0)
 ;
"RTN","LA7VIN2",121,0)
 ;
"RTN","LA7VIN2",122,0)
NTE ; Process NTE segment
"RTN","LA7VIN2",123,0)
 ;
"RTN","LA7VIN2",124,0)
 D NTE^LA7VIN2A
"RTN","LA7VIN2",125,0)
 Q
"RTN","LA7VIN2",126,0)
 ;
"RTN","LA7VIN2",127,0)
 ;
"RTN","LA7VIN2",128,0)
PID ; Process PID segment
"RTN","LA7VIN2",129,0)
 N LA7I,LA7X,LA7Y,X,Y
"RTN","LA7VIN2",130,0)
 ;
"RTN","LA7VIN2",131,0)
 S (DFN,LA7DOB,LA7ICN,LA7PRACE,LA7PNM,LA7PTID2,LA7PTID3,LA7PTID4,LA7SEX,LA7SSN,LRDFN,LRTDFN)=""
"RTN","LA7VIN2",132,0)
 ;
"RTN","LA7VIN2",133,0)
 ; PID Set ID
"RTN","LA7VIN2",134,0)
 S LA7SPID=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",135,0)
 ;
"RTN","LA7VIN2",136,0)
 ; Extract patient identifiers
"RTN","LA7VIN2",137,0)
 S LA7PTID2=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",138,0)
 S LA7PTID3=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",139,0)
 S LA7PTID4=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",140,0)
 ; Resolve ICN if identifier is from MPI
"RTN","LA7VIN2",141,0)
 ; Assume SSN is identifier if "SS" or blank
"RTN","LA7VIN2",142,0)
 F LA7I=1:1:$L(LA7PTID3,$E(LA7ECH,2)) D
"RTN","LA7VIN2",143,0)
 . N LA7J,LA7X,LA7ID
"RTN","LA7VIN2",144,0)
 . S X=$P(LA7PTID3,$E(LA7ECH,2),LA7I) Q:'$L(X)
"RTN","LA7VIN2",145,0)
 . S LA7PTID3(LA7I)=X,LA7ID=$P(LA7PTID3(LA7I),$E(LA7ECH),5)
"RTN","LA7VIN2",146,0)
 . I LA7ID'="","NI^PI"[LA7ID D  Q
"RTN","LA7VIN2",147,0)
 . . S Y=$P(LA7PTID3(LA7I),$E(LA7ECH))
"RTN","LA7VIN2",148,0)
 . . I Y?10N1"V"6N S LA7Y=Y
"RTN","LA7VIN2",149,0)
 . . E  S LA7Y=Y_"V"_$P(LA7PTID3(LA7I),$E(LA7ECH),2)
"RTN","LA7VIN2",150,0)
 . . S LA7X=$$CHKICN^LA7VHLU2(LA7Y)
"RTN","LA7VIN2",151,0)
 . . I LA7X>0 S DFN=$P(LA7X,"^"),LA7ICN=$P(LA7X,"^",2)
"RTN","LA7VIN2",152,0)
 . I LA7ID="SS"!(LA7ID="") D  Q
"RTN","LA7VIN2",153,0)
 . . F LA7J=1:1:3 S LA7X(LA7J)=$P(LA7PTID3(LA7I),$E(LA7ECH),LA7J)
"RTN","LA7VIN2",154,0)
 . . I LA7X(1)'?9N.1A Q
"RTN","LA7VIN2",155,0)
 . . I LA7X(3)="M11",LA7X(2)'=$P($$M11^HLFNC(LA7X(1),LA7ECH),$E(LA7ECH),2) Q
"RTN","LA7VIN2",156,0)
 . . S LA7SSN=LA7X(1),DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",157,0)
 ;
"RTN","LA7VIN2",158,0)
 ; Check PID-2 (alternate patient id) if PID-3 did not yield SSN/ICN
"RTN","LA7VIN2",159,0)
 F LA7I=1:1:$L(LA7PTID2,$E(LA7ECH,2)) D
"RTN","LA7VIN2",160,0)
 . N LA7J,LA7X,LA7ID
"RTN","LA7VIN2",161,0)
 . S X=$P(LA7PTID2,$E(LA7ECH,2),LA7I) Q:'$L(X)
"RTN","LA7VIN2",162,0)
 . S LA7PTID2(LA7I)=X,LA7ID=$P(LA7PTID2(LA7I),$E(LA7ECH),5)
"RTN","LA7VIN2",163,0)
 . I LA7ICN="",LA7ID'="","NI^PI"[LA7ID D  Q
"RTN","LA7VIN2",164,0)
 . . S Y=$P(LA7PTID2(LA7I),$E(LA7ECH))
"RTN","LA7VIN2",165,0)
 . . I Y?10N1"V"6N S LA7Y=Y
"RTN","LA7VIN2",166,0)
 . . E  S LA7Y=Y_"V"_$P(LA7PTID2(LA7I),$E(LA7ECH),2)
"RTN","LA7VIN2",167,0)
 . . S LA7X=$$CHKICN^LA7VHLU2(LA7Y)
"RTN","LA7VIN2",168,0)
 . . I LA7X>0 S DFN=$P(LA7X,"^"),LA7ICN=$P(LA7X,"^",2)
"RTN","LA7VIN2",169,0)
 . I LA7SSN="",LA7ID="SS"!(LA7ID="") D  Q
"RTN","LA7VIN2",170,0)
 . . F LA7J=1:1:3 S LA7X(LA7J)=$P(LA7PTID2(LA7I),$E(LA7ECH),LA7J)
"RTN","LA7VIN2",171,0)
 . . I LA7X(1)'?9N.1A Q
"RTN","LA7VIN2",172,0)
 . . I LA7X(3)="M11",LA7X(2)'=$P($$M11^HLFNC(LA7X(1),LA7ECH),$E(LA7ECH),2) Q
"RTN","LA7VIN2",173,0)
 . . S LA7SSN=LA7X(1),DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",174,0)
 ;
"RTN","LA7VIN2",175,0)
 ; Extract patient name
"RTN","LA7VIN2",176,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",177,0)
 I LA7X'="" D
"RTN","LA7VIN2",178,0)
 . S LA7PNM=$$FMNAME^HLFNC(LA7X,LA7ECH)
"RTN","LA7VIN2",179,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7PNM,0)
"RTN","LA7VIN2",180,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7PNM,0)
"RTN","LA7VIN2",181,0)
 ;
"RTN","LA7VIN2",182,0)
 ; Extract date of birth
"RTN","LA7VIN2",183,0)
 ; Check for degree of precision in 2nd component to provide backward compatibility with HL7 <v2.3
"RTN","LA7VIN2",184,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,8,LA7FS)
"RTN","LA7VIN2",185,0)
 I LA7X D
"RTN","LA7VIN2",186,0)
 . S LA7Y=$P(LA7X,LA7CS,2),LA7X=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",187,0)
 . I (LA7Y=""!(LA7Y="D")),$E(LA7X,9,12)="0000" S LA7X=$E(LA7X,1,8)
"RTN","LA7VIN2",188,0)
 . S LA7DOB=$$HL7TFM^XLFDT(LA7X)
"RTN","LA7VIN2",189,0)
 . I LA7DOB<1 S LA7DOB=""
"RTN","LA7VIN2",190,0)
 . I LA7Y="L" S LA7DOB=$E(LA7DOB,1,5)_"00"
"RTN","LA7VIN2",191,0)
 . I LA7Y="Y" S LA7DOB=$E(LA7DOB,1,3)_"0000"
"RTN","LA7VIN2",192,0)
 ;
"RTN","LA7VIN2",193,0)
 ; Extract patient's sex
"RTN","LA7VIN2",194,0)
 S LA7SEX=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",195,0)
 ;
"RTN","LA7VIN2",196,0)
 ; Extract patient's race
"RTN","LA7VIN2",197,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VIN2",198,0)
 I $P(LA7X,LA7CS)'="" D
"RTN","LA7VIN2",199,0)
 . I $P(LA7X,LA7CS,3)="0005" S $P(LA7X,LA7CS,3)="HL70005"
"RTN","LA7VIN2",200,0)
 . S LA7PRACE=$P(LA7X,LA7CS)_":"_$P(LA7X,LA7CS,2)_$S($P(LA7X,LA7CS,3)'="":":"_$P(LA7X,LA7CS,3),1:"")
"RTN","LA7VIN2",201,0)
 ;
"RTN","LA7VIN2",202,0)
 ; Extract patient's SSN and determine DFN
"RTN","LA7VIN2",203,0)
 ; If SSN determined previously from PID-3 then compare SSN's
"RTN","LA7VIN2",204,0)
 ; If DFN determined previously from ICN then check DFN based on SSN.
"RTN","LA7VIN2",205,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,20,LA7FS),LA7CS)
"RTN","LA7VIN2",206,0)
 S LA7X=$TR(LA7X,"-","") ; remove "-" if any
"RTN","LA7VIN2",207,0)
 I LA7X?9N.1A D
"RTN","LA7VIN2",208,0)
 . I LA7SSN'="",LA7X'=LA7SSN Q
"RTN","LA7VIN2",209,0)
 . S LA7SSN=LA7X
"RTN","LA7VIN2",210,0)
 . I DFN,DFN'=$O(^DPT("SSN",LA7SSN,0)) Q
"RTN","LA7VIN2",211,0)
 . S DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",212,0)
 I LA7SSN'="" D
"RTN","LA7VIN2",213,0)
 . I LA7INTYP>19,LA7INTYP<30 D SETID^LA7VHLU1(LA76249,LA7ID,LA7SSN,1) Q
"RTN","LA7VIN2",214,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7SSN,0)
"RTN","LA7VIN2",215,0)
 I DFN S LRDFN=$P($G(^DPT(DFN,"LR")),"^")
"RTN","LA7VIN2",216,0)
 ;
"RTN","LA7VIN2",217,0)
 Q
"RTN","LA7VIN2",218,0)
 ;
"RTN","LA7VIN2",219,0)
 ;
"RTN","LA7VIN2",220,0)
PV1 ; Process PV1 segment
"RTN","LA7VIN2",221,0)
 ;
"RTN","LA7VIN2",222,0)
 ; PV1 Set ID
"RTN","LA7VIN2",223,0)
 S LA7SPV1=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",224,0)
 ;
"RTN","LA7VIN2",225,0)
 ; Extract ordering location
"RTN","LA7VIN2",226,0)
 S LA7LOC=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VIN2",227,0)
 Q
"RTN","LA7VIN2A")
0^36^B32994528
"RTN","LA7VIN2A",1,0)
LA7VIN2A ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:52
"RTN","LA7VIN2A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN2A",3,0)
 ;
"RTN","LA7VIN2A",4,0)
 ;This routine is a continuation of LA7VIN2 and is only called from there.
"RTN","LA7VIN2A",5,0)
 Q
"RTN","LA7VIN2A",6,0)
 ;
"RTN","LA7VIN2A",7,0)
NTE ; Process NTE segment
"RTN","LA7VIN2A",8,0)
 ; NTE segments contain comments from instruments or other facilities.
"RTN","LA7VIN2A",9,0)
 ; NTE segments following OBR's contain comments which refer to the entire test battery.
"RTN","LA7VIN2A",10,0)
 ; NTE segments following OBX's contain comments which are test specific.
"RTN","LA7VIN2A",11,0)
 ;
"RTN","LA7VIN2A",12,0)
 ; For comments in ORU messages:
"RTN","LA7VIN2A",13,0)
 ;  Test specific comments can be prefaced with a site defined prefix -
"RTN","LA7VIN2A",14,0)
 ;  see field REMARK PREFIX (#19) in CHEM TEST multiple of AUTOMATED INSTRUMENT (#62.4 file.
"RTN","LA7VIN2A",15,0)
 ;  There can be more than one NTE, each will be stored as a comment in ^LAH.
"RTN","LA7VIN2A",16,0)
 ;
"RTN","LA7VIN2A",17,0)
 N LA7,LA7CMTYP,LA7I,LA7NTE,LA7SOC,X,Y
"RTN","LA7VIN2A",18,0)
 ;
"RTN","LA7VIN2A",19,0)
 S LA7SOC=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2A",20,0)
 S LA7NTE=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2A",21,0)
 S LA7CMTYP=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2A",22,0)
 D FLD2ARR^LA7VHLU7(.LA7CMTYP,LA7FS_LA7ECH)
"RTN","LA7VIN2A",23,0)
 ;
"RTN","LA7VIN2A",24,0)
 ; Trim trailing spaces.
"RTN","LA7VIN2A",25,0)
 I LA7NTE'="" S LA7NTE=$$TRIM^XLFSTR(LA7NTE,"R"," ")
"RTN","LA7VIN2A",26,0)
 I LA7NTE="" S LA7NTE=" "
"RTN","LA7VIN2A",27,0)
 ;
"RTN","LA7VIN2A",28,0)
 I LA7MTYP="ORM" D OCOM Q
"RTN","LA7VIN2A",29,0)
 ;
"RTN","LA7VIN2A",30,0)
 ; Check for repeating comments in NTE segment and process
"RTN","LA7VIN2A",31,0)
 ; If "^" in remark then translate to "~" to store.
"RTN","LA7VIN2A",32,0)
 F LA7I=1:1:$L(LA7NTE,$E(LA7ECH,2)) D
"RTN","LA7VIN2A",33,0)
 . S LA7RMK=$P(LA7NTE,$E(LA7ECH,2),LA7I)
"RTN","LA7VIN2A",34,0)
 . I LA7RMK="" Q
"RTN","LA7VIN2A",35,0)
 . S LA7RMK=$$UNESC^LA7VHLU3(LA7RMK,LA7FS_LA7ECH)
"RTN","LA7VIN2A",36,0)
 . I LA7RMK["^" S LA7RMK=$TR(LA7RMK,"^","~")
"RTN","LA7VIN2A",37,0)
 . I LA7MTYP="ORU" D RCOM Q
"RTN","LA7VIN2A",38,0)
 . I LA7MTYP="ORR",$G(LA7OTYPE)="UA" D RCOM Q
"RTN","LA7VIN2A",39,0)
 ;
"RTN","LA7VIN2A",40,0)
 ; Clean up LA7RMK except for LA7RMK(0)
"RTN","LA7VIN2A",41,0)
 K X M X=LA7RMK(0) K LA7RMK M LA7RMK(0)=X
"RTN","LA7VIN2A",42,0)
 ;
"RTN","LA7VIN2A",43,0)
 Q
"RTN","LA7VIN2A",44,0)
 ;
"RTN","LA7VIN2A",45,0)
 ;
"RTN","LA7VIN2A",46,0)
RCOM ; Store result comments in ORU messages
"RTN","LA7VIN2A",47,0)
 ;
"RTN","LA7VIN2A",48,0)
 ; Check there's pointers to LAH
"RTN","LA7VIN2A",49,0)
 I $G(LA7LWL)=""!($G(LA7ISQN)="") Q
"RTN","LA7VIN2A",50,0)
 ;
"RTN","LA7VIN2A",51,0)
 ; Don't store remark if same as specimen comment (without "~").
"RTN","LA7VIN2A",52,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$TR($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",6),"~") Q
"RTN","LA7VIN2A",53,0)
 ; Or patient info (#.091 in file 63) - info previously downloaded
"RTN","LA7VIN2A",54,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$G(^LR(+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),.091)) Q
"RTN","LA7VIN2A",55,0)
 ;
"RTN","LA7VIN2A",56,0)
 ; If test specific, store comment prefix with comments (see LA7VIN5)
"RTN","LA7VIN2A",57,0)
 I $G(LA7SS)="CH",$O(LA7RMK(0,0)) D  Q
"RTN","LA7VIN2A",58,0)
 . N LA7I
"RTN","LA7VIN2A",59,0)
 . S LA7I=0
"RTN","LA7VIN2A",60,0)
 . F  S LA7I=$O(LA7RMK(0,LA7I)) Q:'LA7I  D
"RTN","LA7VIN2A",61,0)
 . . I '$P(LA7RMK(0,LA7I),"^") Q
"RTN","LA7VIN2A",62,0)
 . . ; Don't store if status not "FINAL"
"RTN","LA7VIN2A",63,0)
 . . I $P(LA7RMK(0,LA7I),"^")=2,"CFUX"'[$G(LA7ORS) Q
"RTN","LA7VIN2A",64,0)
 . . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,$P(LA7RMK(0,LA7I),"^",2))
"RTN","LA7VIN2A",65,0)
 ;
"RTN","LA7VIN2A",66,0)
 ; Store comment in 1 node of ^LAH global
"RTN","LA7VIN2A",67,0)
 I $G(LA7SS)="CH",$P(LA7624(0),"^",17) D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,"") Q
"RTN","LA7VIN2A",68,0)
 ;
"RTN","LA7VIN2A",69,0)
 ; Store "MI" subscript comments/remarks in specific places.
"RTN","LA7VIN2A",70,0)
 ;  - Don't store comments from ORR messages - handled by mail bulletin
"RTN","LA7VIN2A",71,0)
 I $G(LA7SS)="MI",LA7MTYP'="ORR" D  Q
"RTN","LA7VIN2A",72,0)
 . N LA7ISQN2,LA7ISQN3,LA7ISQN4,LA7ND,LACONCPT,LAPREFIX
"RTN","LA7VIN2A",73,0)
 . S (LA7ISQN2,LA7ISQN3,LA7ISQN4,LA7ND)=""
"RTN","LA7VIN2A",74,0)
 . I $G(LA7CMTYP(3))="HL70364",$E($G(LA7CMTYP(1)),1,7)="VA-LRMI" D MISPC
"RTN","LA7VIN2A",75,0)
 . S LACONCPT=$P($G(LA7RMK(0,0)),"^"),LAPREFIX=$P($G(LA7RMK(0,0)),"^",3)
"RTN","LA7VIN2A",76,0)
 . D MICMT,UPD0
"RTN","LA7VIN2A",77,0)
 ;
"RTN","LA7VIN2A",78,0)
 ; Store AP subscripts comments/remarks in specific places.
"RTN","LA7VIN2A",79,0)
 ; - Don't store comments from ORR messages - handled by mail bulletin
"RTN","LA7VIN2A",80,0)
 I $G(LA7SS)'="","SPCYEM"[LA7SS,LA7MTYP'="ORR" D  Q
"RTN","LA7VIN2A",81,0)
 . N LA7ISQN2,LAPREFIX
"RTN","LA7VIN2A",82,0)
 . S LA7ND=99,LAPREFIX=$P($G(LA7RMK(0,0)),"^",3),(LA7ISQN2,LA7ISQN3,LA7ISQN4)=""
"RTN","LA7VIN2A",83,0)
 . S LA7ISQN2=$O(^LAH(LA7LWL,1,LA7ISQN,LA7SS,99,"A"),-1)+1
"RTN","LA7VIN2A",84,0)
 . S ^LAH(LWL,1,LA7ISQN,LA7SS,99,LA7ISQN2,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",85,0)
 . D UPD0
"RTN","LA7VIN2A",86,0)
 ;
"RTN","LA7VIN2A",87,0)
 Q
"RTN","LA7VIN2A",88,0)
 ;
"RTN","LA7VIN2A",89,0)
 ;
"RTN","LA7VIN2A",90,0)
OCOM ; Store order comments from ORM messages in file #69.6
"RTN","LA7VIN2A",91,0)
 ; Check for repeating comments in NTE segment and process
"RTN","LA7VIN2A",92,0)
 ; If "^" in remark then translate to "~" to store.
"RTN","LA7VIN2A",93,0)
 ;
"RTN","LA7VIN2A",94,0)
 ; If source of comment (LA7SOC) is "RQ" then comment is from CHCS which
"RTN","LA7VIN2A",95,0)
 ; uses a composite data type for NTE-3. VistA only extracts component #9
"RTN","LA7VIN2A",96,0)
 ; which contains the external value of the comment.
"RTN","LA7VIN2A",97,0)
 ;
"RTN","LA7VIN2A",98,0)
 N LA7DIE,LA7RMK,LA7WP,X
"RTN","LA7VIN2A",99,0)
 I $G(LA7696)<1 Q
"RTN","LA7VIN2A",100,0)
 F LA7I=1:1:$L(LA7NTE,$E(LA7ECH,2)) D
"RTN","LA7VIN2A",101,0)
 . S LA7RMK=$P(LA7NTE,$E(LA7ECH,2),LA7I)
"RTN","LA7VIN2A",102,0)
 . I LA7SOC="RQ" D
"RTN","LA7VIN2A",103,0)
 . . S X=$P(LA7RMK,$E(LA7ECH),9)
"RTN","LA7VIN2A",104,0)
 . . I X'="" S LA7RMK=X
"RTN","LA7VIN2A",105,0)
 . I LA7RMK="" Q
"RTN","LA7VIN2A",106,0)
 . S LA7RMK=$$UNESC^LA7VHLU3(LA7RMK,LA7FS_LA7ECH)
"RTN","LA7VIN2A",107,0)
 . I LA7RMK["^" S LA7RMK=$TR(LA7RMK,"^","~")
"RTN","LA7VIN2A",108,0)
 . S LA7WP(LA7I,0)=LA7RMK
"RTN","LA7VIN2A",109,0)
 D WP^DIE(69.6,LA7696_",",99,"A","LA7WP","LA7DIE(99)")
"RTN","LA7VIN2A",110,0)
 Q
"RTN","LA7VIN2A",111,0)
 ;
"RTN","LA7VIN2A",112,0)
 ;
"RTN","LA7VIN2A",113,0)
MISPC ; Process special VistA Lab MI preliminary reports/test/remarks comment types
"RTN","LA7VIN2A",114,0)
 ;
"RTN","LA7VIN2A",115,0)
 N LA7I
"RTN","LA7VIN2A",116,0)
 S LA7I=+$E(LA7CMTYP(1),8,99)
"RTN","LA7VIN2A",117,0)
 ;
"RTN","LA7VIN2A",118,0)
 ; Comment on Specimen: VA-LRMI001 node = 99
"RTN","LA7VIN2A",119,0)
 ; Bacterial preliminary/report/tests remark: VA-LRMI010:VA-LRMI013 nodes = 4,19,26,25
"RTN","LA7VIN2A",120,0)
 ; Parasite preliminary/report/tests remark: VA-LRMI020:VA-LRMI023 nodes = 7,21,27,24
"RTN","LA7VIN2A",121,0)
 ; Fungal preliminary/report/tests remark: VA-LRMI030:VA-LRMI033 nodes = 10,22,28,15
"RTN","LA7VIN2A",122,0)
 ; Mycobacteria preliminary/report/tests remark: VA-LRMI040:VA-LRMI042 nodes = 13,23,29
"RTN","LA7VIN2A",123,0)
 ; Viral preliminary/report/tests remark: VA-LRMI050:VA-LRMI052 nodes = 18,20,30
"RTN","LA7VIN2A",124,0)
 ; Sterility Results: VA-LRMI060 node = 31
"RTN","LA7VIN2A",125,0)
 ;
"RTN","LA7VIN2A",126,0)
 S LA7ND=$P("99^^^^^^^^^4^19^26^25^^^^^^^7^21^27^24^^^^^^^10^22^28^15^^^^^^^13^23^29^^^^^^^^18^20^30^^^^^^^^31","^",LA7I)
"RTN","LA7VIN2A",127,0)
 ;
"RTN","LA7VIN2A",128,0)
 Q
"RTN","LA7VIN2A",129,0)
 ;
"RTN","LA7VIN2A",130,0)
 ;
"RTN","LA7VIN2A",131,0)
MICMT ; Store MI comments/remarks
"RTN","LA7VIN2A",132,0)
 ; From above
"RTN","LA7VIN2A",133,0)
 I LACONCPT=13 D  Q
"RTN","LA7VIN2A",134,0)
 . S LA7ND=6,LA7ISQN2=$P($P(LA7RMK(0,0),"^",2),","),LA7ISQN3=$P($P(LA7RMK(0,0),"^",2),",",2)
"RTN","LA7VIN2A",135,0)
 . S LA7ISQN4=$O(^LAH(LWL,1,LA7ISQN,"MI",6,LA7ISQN2,1,LA7ISQN3,1,"A"),-1)+1
"RTN","LA7VIN2A",136,0)
 . S ^LAH(LWL,1,LA7ISQN,"MI",6,LA7ISQN2,1,LA7ISQN3,1,LA7ISQN4,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",137,0)
 ;
"RTN","LA7VIN2A",138,0)
 I LACONCPT=3!(LACONCPT=7)!(LACONCPT=10)!(LACONCPT=4) D  Q
"RTN","LA7VIN2A",139,0)
 . S LA7ND=$S(LACONCPT=4:12,1:3)
"RTN","LA7VIN2A",140,0)
 . S LA7ISQN2=$P($P(LA7RMK(0,0),"^",2),","),LA7ISQN3=$O(^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,1,"A"),-1)+1
"RTN","LA7VIN2A",141,0)
 . S ^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,1,LA7ISQN3,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",142,0)
 ;
"RTN","LA7VIN2A",143,0)
 ; Store all other concepts here.
"RTN","LA7VIN2A",144,0)
 I LA7ND="" S LA7ND=$S(LACONCPT<2:4,LACONCPT=12:7,LACONCPT=15:10,LACONCPT=22:13,LACONCPT=79:13,LACONCPT=85:13,LACONCPT=30:18,1:4)
"RTN","LA7VIN2A",145,0)
 S LA7ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",LA7ND,"A"),-1)+1
"RTN","LA7VIN2A",146,0)
 S ^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",147,0)
 ;
"RTN","LA7VIN2A",148,0)
 Q
"RTN","LA7VIN2A",149,0)
 ;
"RTN","LA7VIN2A",150,0)
 ;
"RTN","LA7VIN2A",151,0)
UPD0 ; Update the remarks/comments zeroth node with status
"RTN","LA7VIN2A",152,0)
 ;
"RTN","LA7VIN2A",153,0)
 N LA7STAT,LA7PL,LA7X
"RTN","LA7VIN2A",154,0)
 ;
"RTN","LA7VIN2A",155,0)
 ; Attempt to identify performing lab from OBX-15 (NTE following OBX) or OBR-32 (NTE following OBR)
"RTN","LA7VIN2A",156,0)
 S LA7PL=$G(LA7PRODID)
"RTN","LA7VIN2A",157,0)
 I LA7PL="",$G(LA7OBR32(7))'="" S LA7PL=$$RESFID^LA7VHLU2(LA7OBR32(7),LA7SFAC,LA7CS)
"RTN","LA7VIN2A",158,0)
 ;
"RTN","LA7VIN2A",159,0)
 S LA7STAT=$S($G(LA7ORS)'="":LA7ORS,1:$G(LA7OBR25))
"RTN","LA7VIN2A",160,0)
 ;
"RTN","LA7VIN2A",161,0)
 I LA7ISQN4 D  Q
"RTN","LA7VIN2A",162,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,1,0),"^")=LA7PL
"RTN","LA7VIN2A",163,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,0)),"^",4)'="" Q
"RTN","LA7VIN2A",164,0)
 . I LA7STAT'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,1,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",165,0)
 ;
"RTN","LA7VIN2A",166,0)
 I LA7ISQN3 D  Q
"RTN","LA7VIN2A",167,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,0),"^")=LA7PL
"RTN","LA7VIN2A",168,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,0)),"^",4)'="" Q
"RTN","LA7VIN2A",169,0)
 . S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",170,0)
 ;
"RTN","LA7VIN2A",171,0)
 I LA7ISQN2 D  Q
"RTN","LA7VIN2A",172,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0),"^")=LA7PL
"RTN","LA7VIN2A",173,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0)),"^",4)'="" Q
"RTN","LA7VIN2A",174,0)
 . S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",175,0)
 Q
"RTN","LA7VIN3")
0^87^B9946828
"RTN","LA7VIN3",1,0)
LA7VIN3 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:55
"RTN","LA7VIN3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN3",3,0)
 ;
"RTN","LA7VIN3",4,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN3",5,0)
 Q
"RTN","LA7VIN3",6,0)
 ;
"RTN","LA7VIN3",7,0)
MSA ; Process MSA segment
"RTN","LA7VIN3",8,0)
 ; The incoming MSA is used to update the status of the message
"RTN","LA7VIN3",9,0)
 ; in the LA7 MESSAGE QUEUE (#62.49)
"RTN","LA7VIN3",10,0)
 ;
"RTN","LA7VIN3",11,0)
 ; and
"RTN","LA7VIN3",12,0)
 ;
"RTN","LA7VIN3",13,0)
 ; if acknowledging ORU message - the ORDERS PENDING (#69.6) file
"RTN","LA7VIN3",14,0)
 ; if acknowledging ORM message - the SHIPPING MANIFEST (#62.8) file
"RTN","LA7VIN3",15,0)
 ;
"RTN","LA7VIN3",16,0)
 N LA7696,LA76964,LA7I,LA7MSAID,LA7MSTAT,LA7ORT,LA7RUID,LA7ST,LA7SITE,LA7X,LA7Y
"RTN","LA7VIN3",17,0)
 S LA7MSTAT=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN3",18,0)
 S LA7MSAID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN3",19,0)
 I LA7MSAID="" Q
"RTN","LA7VIN3",20,0)
 ;
"RTN","LA7VIN3",21,0)
 ; Extract text message from MSA-3
"RTN","LA7VIN3",22,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN3",23,0)
 S LA7MSATM=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN3",24,0)
 ;
"RTN","LA7VIN3",25,0)
 ; Extract error condition from MSA-6
"RTN","LA7VIN3",26,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VIN3",27,0)
 I LA7X'="" D
"RTN","LA7VIN3",28,0)
 . S LA7Y=""
"RTN","LA7VIN3",29,0)
 . I $P(LA7X,$E(LA7ECH),2)'="" S LA7Y=$$UNESC^LA7VHLU3($P(LA7X,$E(LA7ECH),2),LA7FS_LA7ECH)
"RTN","LA7VIN3",30,0)
 . I $P(LA7X,$E(LA7ECH))'="" D
"RTN","LA7VIN3",31,0)
 . . I LA7Y="" S LA7Y=$$UNESC^LA7VHLU3($P(LA7X,$E(LA7ECH)),LA7FS_LA7ECH) Q
"RTN","LA7VIN3",32,0)
 . . S LA7Y="["_$P(LA7X,$E(LA7ECH))_"] "_LA7Y
"RTN","LA7VIN3",33,0)
 . S LA7MSATM=$S(LA7MSATM'="":LA7MSATM_" ",1:"")_LA7Y
"RTN","LA7VIN3",34,0)
 ;
"RTN","LA7VIN3",35,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,"ACK-"_LA7MSAID,1)
"RTN","LA7VIN3",36,0)
 D SETID^LA7VHLU1(LA76249,"",LA7MSAID,0)
"RTN","LA7VIN3",37,0)
 ;
"RTN","LA7VIN3",38,0)
 S LA7ST=$$FIND1^DIC(64.061,"","MX","Results/data Received","","I $P(^(0),U,7)=""U""")
"RTN","LA7VIN3",39,0)
 ;
"RTN","LA7VIN3",40,0)
 ; Only look for messages id's that are outgoing messages, those that
"RTN","LA7VIN3",41,0)
 ; originated from this system. Other systems (incoming) messages can
"RTN","LA7VIN3",42,0)
 ; use a message id that is the same as a Vista message id.
"RTN","LA7VIN3",43,0)
 ;
"RTN","LA7VIN3",44,0)
 N LA76249
"RTN","LA7VIN3",45,0)
 S LA76249=0
"RTN","LA7VIN3",46,0)
 F  S LA76249=$O(^LAHM(62.49,"ID",LA7MSAID,LA76249)) Q:'LA76249  D
"RTN","LA7VIN3",47,0)
 . I $P($G(^LAHM(62.49,LA76249,0)),"^",2)'="O" Q
"RTN","LA7VIN3",48,0)
 . D UPDF
"RTN","LA7VIN3",49,0)
 ;
"RTN","LA7VIN3",50,0)
 Q
"RTN","LA7VIN3",51,0)
 ;
"RTN","LA7VIN3",52,0)
UPDF ; Update respective files
"RTN","LA7VIN3",53,0)
 ;
"RTN","LA7VIN3",54,0)
 N FDA,I,LA7ERR,LA7MTYPE,X
"RTN","LA7VIN3",55,0)
 ;
"RTN","LA7VIN3",56,0)
 F I=63,100 S LA76249(I)=$G(^LAHM(62.49,LA76249,I))
"RTN","LA7VIN3",57,0)
 ;
"RTN","LA7VIN3",58,0)
 ; Update original message in #62.49
"RTN","LA7VIN3",59,0)
 S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VIN3",60,0)
 I LA7MSTAT'="AA",LA7MSTAT'="CA" D
"RTN","LA7VIN3",61,0)
 . S FDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7VIN3",62,0)
 . S FDA(1,62.49,LA76249_",",160)=LA7MSTAT
"RTN","LA7VIN3",63,0)
 . I LA7MSATM'="" S FDA(1,62.49,LA76249_",",161)=LA7MSATM
"RTN","LA7VIN3",64,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN3",65,0)
 ;
"RTN","LA7VIN3",66,0)
 ; Send alert that original message had error.
"RTN","LA7VIN3",67,0)
 I LA7MSTAT'="AA",LA7MSTAT'="CA" D
"RTN","LA7VIN3",68,0)
 . D CREATE^LA7LOG(48)
"RTN","LA7VIN3",69,0)
 ;
"RTN","LA7VIN3",70,0)
 ; Retrieve original message's type.
"RTN","LA7VIN3",71,0)
 S LA7MTYPE=$P(LA76249(100),"^",9)
"RTN","LA7VIN3",72,0)
 ;
"RTN","LA7VIN3",73,0)
 ; If original message was an ORM, then update collecting facility's shipping manifest.
"RTN","LA7VIN3",74,0)
 I LA7MTYPE="ORM" D  Q
"RTN","LA7VIN3",75,0)
 . ; Need to code this section - JMC 1/12/00
"RTN","LA7VIN3",76,0)
 . ; Need to figure out the shipping manifest which is being acknowledged
"RTN","LA7VIN3",77,0)
 . Q
"RTN","LA7VIN3",78,0)
 ;
"RTN","LA7VIN3",79,0)
 I LA7MTYPE'="ORU" Q
"RTN","LA7VIN3",80,0)
 ; Rest of this deals with updating order/test status in LAB PENDING ORDER file
"RTN","LA7VIN3",81,0)
 ; at host lab when collection facility is acknowledging receipt of ORU message.
"RTN","LA7VIN3",82,0)
 ;
"RTN","LA7VIN3",83,0)
 I LA76249(63)="" Q
"RTN","LA7VIN3",84,0)
 S LA7SITE=$P(LA76249(63),U,2),LA7RUID=$P(LA76249(63),U,3)
"RTN","LA7VIN3",85,0)
 S LA7696=$O(^LRO(69.6,"RST",LA7SITE,LA7RUID,0))
"RTN","LA7VIN3",86,0)
 I LA7696="" Q
"RTN","LA7VIN3",87,0)
 ;
"RTN","LA7VIN3",88,0)
 ; Update order status in 69.6
"RTN","LA7VIN3",89,0)
 S FDA(2,69.6,LA7696_",",6)=LA7ST
"RTN","LA7VIN3",90,0)
 D FILE^DIE("","FDA(2)","LA7ERR(2)")
"RTN","LA7VIN3",91,0)
 ;
"RTN","LA7VIN3",92,0)
 S LA7ORT=$P(LA76249(63),U,4),LA76964=0
"RTN","LA7VIN3",93,0)
 I LA7ORT'="" S LA76964=$O(^LRO(69.6,LA7696,2,"B",LA7ORT,0))
"RTN","LA7VIN3",94,0)
 I 'LA76964 D
"RTN","LA7VIN3",95,0)
 . S LA7ORT=$P(LA76249(63),U,5)
"RTN","LA7VIN3",96,0)
 . I LA7ORT'="" S LA76964=$O(^LRO(69.6,LA7696,2,"C",LA7ORT,0))
"RTN","LA7VIN3",97,0)
 I LA76964<1 Q
"RTN","LA7VIN3",98,0)
 ;
"RTN","LA7VIN3",99,0)
 ; Update test status in 69.6
"RTN","LA7VIN3",100,0)
 S FDA(3,69.64,LA76964_","_LA7696_",",5)=LA7ST
"RTN","LA7VIN3",101,0)
 D FILE^DIE("","FDA(3)","LA7ERR(3)")
"RTN","LA7VIN3",102,0)
 ;
"RTN","LA7VIN3",103,0)
 Q
"RTN","LA7VIN4")
0^21^B77157230
"RTN","LA7VIN4",1,0)
LA7VIN4 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/04/10  18:25
"RTN","LA7VIN4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,67,66,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN4",3,0)
 ;
"RTN","LA7VIN4",4,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN4",5,0)
 ;
"RTN","LA7VIN4",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN4",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN4",8,0)
 ;
"RTN","LA7VIN4",9,0)
 Q
"RTN","LA7VIN4",10,0)
 ;
"RTN","LA7VIN4",11,0)
OBR ; Process OBR segments
"RTN","LA7VIN4",12,0)
 N I,LA7CUP,LA7ENTRY,LA7FF1,LA7FF2,LA7I,LA7IDE,LA7INST,LA7OK,LA7PDUZ,LA7PF1,LA7PF2,LA7TRAY,LA7X,LA7Y
"RTN","LA7VIN4",13,0)
 ;
"RTN","LA7VIN4",14,0)
 ;ZEXCEPT: A,CH,CY,EM,G,LA70070,LA761,LA762,LA7624,LA76248,LA76249,LA7AA,LA7ACC,LA7AD,LA7AN,LA7ARI,LA7CDT,LA7CS,LA7ECH,LA7ERR,LA7FID,LA7FS,LA7ID,LA7INTYP,LA7ISQN,LA7LWL,LA7MSATM,LA7MTYP
"RTN","LA7VIN4",15,0)
 ;ZEXCEPT: LA7OBR,LA7OBR25,LA7OBR26,LA7OBR29,LA7OBR32,LA7OBR33,LA7OBR34,LA7OCR,LA7ONLT,LA7OTYPE,LA7POP,LA7PRI,LA7QUIT
"RTN","LA7VIN4",16,0)
 ;ZEXCEPT: LA7RSDT,LA7SAC,LA7SAP,LA7SEG,LA7SFAC,LA7SID,LA7SM,LA7SOBR,LA7SPEC,LA7SPTY,LA7SS,LA7TECH,LA7UID,LAPSUBID,MI,N,SP
"RTN","LA7VIN4",17,0)
 ;
"RTN","LA7VIN4",18,0)
 ; OBR Set ID
"RTN","LA7VIN4",19,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN4",20,0)
 ;
"RTN","LA7VIN4",21,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN4",22,0)
 S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",23,0)
 S LA7624=0,LA7INST=$P(LA7X,"^") ; extracting 1st piece
"RTN","LA7VIN4",24,0)
 ; Look up #62.4 entry from instrument name.
"RTN","LA7VIN4",25,0)
 I LA7INST'="" S LA7624=+$O(^LAB(62.4,"B",LA7INST,0))
"RTN","LA7VIN4",26,0)
 ;
"RTN","LA7VIN4",27,0)
 ; If none then use sending application name to look up #62.4 entry.
"RTN","LA7VIN4",28,0)
 I 'LA7624 S LA7624=+$O(^LAB(62.4,"B",LA7SAP,0))
"RTN","LA7VIN4",29,0)
 ;
"RTN","LA7VIN4",30,0)
 ; Instrument name not found in xref
"RTN","LA7VIN4",31,0)
 I 'LA7624 D  Q
"RTN","LA7VIN4",32,0)
 . I LA7INST="" D  Q
"RTN","LA7VIN4",33,0)
 . . S LA7ERR=10,LA7QUIT=2
"RTN","LA7VIN4",34,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",35,0)
 . S LA7ERR=11,LA7QUIT=2
"RTN","LA7VIN4",36,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",37,0)
 S LA7624(0)=$G(^LAB(62.4,LA7624,0))
"RTN","LA7VIN4",38,0)
 S LA7ID=$P(LA7624(0),"^")_"-I-"
"RTN","LA7VIN4",39,0)
 ;
"RTN","LA7VIN4",40,0)
 S LA7LWL=+$P(LA7624(0),"^",4) ;  Load/Work List
"RTN","LA7VIN4",41,0)
 S LA7ENTRY=$P(LA7624(0),"^",6) ;LOG,LLIST,IDENT or SEQN
"RTN","LA7VIN4",42,0)
 S:LA7ENTRY="" LA7ENTRY="LOG"
"RTN","LA7VIN4",43,0)
 ;
"RTN","LA7VIN4",44,0)
 ; Placer(sender)/filler order numbers
"RTN","LA7VIN4",45,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN4",46,0)
 S LA7SID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7SID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",47,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN4",48,0)
 S LA7FID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7FID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",49,0)
 ;
"RTN","LA7VIN4",50,0)
 ; Test order code - find order NLT code
"RTN","LA7VIN4",51,0)
 ; If POC interface then see if NLT is used for ordering code
"RTN","LA7VIN4",52,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7ONLT=""
"RTN","LA7VIN4",53,0)
 F I=1,4 D  Q:LA7ONLT'=""
"RTN","LA7VIN4",54,0)
 . I $P(LA7X,LA7CS,I)'?5N1"."4N Q
"RTN","LA7VIN4",55,0)
 . I $P(LA7X,LA7CS,I+2)="99VA64" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",56,0)
 . I LA7INTYP>19,LA7INTYP<30,$P(LA7X,LA7CS,I+2)="" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",57,0)
 ;
"RTN","LA7VIN4",58,0)
 ; Specimen collection date/time
"RTN","LA7VIN4",59,0)
 S LA7CDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS),"L")
"RTN","LA7VIN4",60,0)
 ;
"RTN","LA7VIN4",61,0)
 ; Extract filler fields #1&2 and placer fields #1&2
"RTN","LA7VIN4",62,0)
 F LA7I=18:1:21 D
"RTN","LA7VIN4",63,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,LA7I+1,LA7FS)
"RTN","LA7VIN4",64,0)
 . S LA7OBR(LA7I)=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",65,0)
 ;
"RTN","LA7VIN4",66,0)
 ; Pull info from placer field #2 (OBR-19)
"RTN","LA7VIN4",67,0)
 S LA7X=LA7OBR(19)
"RTN","LA7VIN4",68,0)
 S LA7TRAY=+$P(LA7X,"^",1) ;Tray
"RTN","LA7VIN4",69,0)
 S LA7CUP=+$P(LA7X,"^",2) ; Cup
"RTN","LA7VIN4",70,0)
 ; If POC interface set cup to file #62.49 ien
"RTN","LA7VIN4",71,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7CUP=LA76249
"RTN","LA7VIN4",72,0)
 S LA7AA=$P(LA7X,"^",3) ;  Accession Area
"RTN","LA7VIN4",73,0)
 S LA7AD=$P(LA7X,"^",4) ;  Accession Date
"RTN","LA7VIN4",74,0)
 S LA7AN=$P(LA7X,"^",5) ;  Accession Entry
"RTN","LA7VIN4",75,0)
 S LA7ACC=$P(LA7X,"^",6) ;  Accession
"RTN","LA7VIN4",76,0)
 I LA7ACC'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7ACC,0)
"RTN","LA7VIN4",77,0)
 S LA7UID=$P(LA7X,"^",7) ;  Unique ID
"RTN","LA7VIN4",78,0)
 I $L(LA7UID)<10 S LA7UID=""
"RTN","LA7VIN4",79,0)
 ;
"RTN","LA7VIN4",80,0)
 ; Sequence Number
"RTN","LA7VIN4",81,0)
 ; If point of care interface (20-29) then use file #62.49 ien as IDE
"RTN","LA7VIN4",82,0)
 S LA7IDE=$P(LA7X,LA7CS,8)
"RTN","LA7VIN4",83,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7IDE=LA76249
"RTN","LA7VIN4",84,0)
 ;
"RTN","LA7VIN4",85,0)
 ; UID might come as Sample ID
"RTN","LA7VIN4",86,0)
 I LA7UID="",$L(LA7SID)>9 S LA7UID=LA7SID
"RTN","LA7VIN4",87,0)
 ;
"RTN","LA7VIN4",88,0)
 ; Try to figure out LA7AA LA7AD LA7AN by using the unique ID (UID)
"RTN","LA7VIN4",89,0)
 ; accession may have rolled over, use UID to get current accession info.
"RTN","LA7VIN4",90,0)
 I LA7UID'="" D
"RTN","LA7VIN4",91,0)
 . N X
"RTN","LA7VIN4",92,0)
 . S X=$Q(^LRO(68,"C",LA7UID)) Q:X=""  ; UID not on file
"RTN","LA7VIN4",93,0)
 . I $QS(X,3)'=LA7UID S LA7UID="" Q  ; UID not on file.
"RTN","LA7VIN4",94,0)
 . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7VIN4",95,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7UID,1)
"RTN","LA7VIN4",96,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7UID,0)
"RTN","LA7VIN4",97,0)
 ;
"RTN","LA7VIN4",98,0)
 ; If still not known, compute from default accession date and area.
"RTN","LA7VIN4",99,0)
 ; Calculate accession date based on accession transform.
"RTN","LA7VIN4",100,0)
 I LA7AA<1!(LA7AD<1)!(LA7AN<1) D
"RTN","LA7VIN4",101,0)
 . N X
"RTN","LA7VIN4",102,0)
 . S LA7AA=+$P(LA7624(0),"^",11)
"RTN","LA7VIN4",103,0)
 . S X=$P($G(^LRO(68,LA7AA,0)),U,3)
"RTN","LA7VIN4",104,0)
 . S LA7AD=$S(X="D":DT,X="M":$E(DT,1,5)_"00",X="Y":$E(DT,1,3)_"0000",X="Q":$E(DT,1,3)_"0000"+(($E(DT,4,5)-1)\3*300+100),1:DT)
"RTN","LA7VIN4",105,0)
 . S LA7AN=+LA7SID
"RTN","LA7VIN4",106,0)
 . I LA7AN>0 D SETID^LA7VHLU1(LA76249,LA7ID,LA7AN,1)
"RTN","LA7VIN4",107,0)
 . I LA7SID'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7SID,0)
"RTN","LA7VIN4",108,0)
 ;
"RTN","LA7VIN4",109,0)
 ; Zeroth node of accession area.
"RTN","LA7VIN4",110,0)
 S LA7AA(0)=$G(^LRO(68,+LA7AA,0))
"RTN","LA7VIN4",111,0)
 ; Accession's subscript
"RTN","LA7VIN4",112,0)
 S LA7SS=$P(LA7AA(0),"^",2)
"RTN","LA7VIN4",113,0)
 ;
"RTN","LA7VIN4",114,0)
 ; Specimen action code
"RTN","LA7VIN4",115,0)
 S LA7SAC=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN4",116,0)
 ;
"RTN","LA7VIN4",117,0)
 ; Specimen(topography), collection sample, HL7 specimen source
"RTN","LA7VIN4",118,0)
 S (LA761,LA762,LA70070,LA7SPEC)=""
"RTN","LA7VIN4",119,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VIN4",120,0)
 D FLD2ARR^LA7VHLU7(.LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",121,0)
 M LA7SPTY=LA7X(1)
"RTN","LA7VIN4",122,0)
 ;
"RTN","LA7VIN4",123,0)
 ; Look for HL7 Table 0070 code.
"RTN","LA7VIN4",124,0)
 ; If coding system blank then default to table 0070 as coding system per HL7 standard for OBR-15.
"RTN","LA7VIN4",125,0)
 ; If no code and not a standard code set then ignore (remove).
"RTN","LA7VIN4",126,0)
 F I=1,4 D
"RTN","LA7VIN4",127,0)
 . I $G(LA7SPTY(I))="",$G(LA7SPTY(I+2))'?1(1"99".E,1"L") K LA7SPTY(I),LA7SPTY(I+1),LA7SPTY(I+2),LA7SPTY($S(I=1:7,1:8)) Q
"RTN","LA7VIN4",128,0)
 . I $G(LA7SPTY(I+2))="" S LA7SPTY(I+2)="HL70070"
"RTN","LA7VIN4",129,0)
 . I LA7SPTY(I+2)="HL70070" S LA7SPEC=LA7SPTY(I)
"RTN","LA7VIN4",130,0)
 I LA7SPEC="" S LA7SPEC=$G(LA7SPTY)
"RTN","LA7VIN4",131,0)
 ;
"RTN","LA7VIN4",132,0)
 ; Retrieve related specimen/collection sample from accession
"RTN","LA7VIN4",133,0)
 ; Create specimen array to handle multiple AP specimens on orders.
"RTN","LA7VIN4",134,0)
 S I=0
"RTN","LA7VIN4",135,0)
 F  S I=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I)) Q:'I  D
"RTN","LA7VIN4",136,0)
 . S X=^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I,0)
"RTN","LA7VIN4",137,0)
 . I $P(X,"^") D
"RTN","LA7VIN4",138,0)
 . . S LA761($P(X,"^"))="" ;spec array
"RTN","LA7VIN4",139,0)
 . . I LA761="" S LA761=$P(X,"^")
"RTN","LA7VIN4",140,0)
 . I $P(X,"^",2) D
"RTN","LA7VIN4",141,0)
 . . S LA762($P(X,"^",2))="" ;sample array
"RTN","LA7VIN4",142,0)
 . . I LA762="" S LA762=$P(X,"^",2)
"RTN","LA7VIN4",143,0)
 ;
"RTN","LA7VIN4",144,0)
 ; Log error when specimen source does not match accession's specimen
"RTN","LA7VIN4",145,0)
 ; Ignore if specimen related to lab control file #62.3
"RTN","LA7VIN4",146,0)
 S LA7OK=1
"RTN","LA7VIN4",147,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)'=62.3 D
"RTN","LA7VIN4",148,0)
 . N DIERR,LA7MSG
"RTN","LA7VIN4",149,0)
 . F LA7I=1,4 I $G(LA7SPTY(LA7I))'="" D  Q:'LA7OK
"RTN","LA7VIN4",150,0)
 . . I $G(LA7SPTY(LA7I+2))="HL70070" D  Q
"RTN","LA7VIN4",151,0)
 . . . K DIERR,LA7MSG
"RTN","LA7VIN4",152,0)
 . . . S LA70070=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR",,,"LA7MSG")
"RTN","LA7VIN4",153,0)
 . . . I LA70070'="",LA70070'=LA7SPTY(LA7I) S LA7OK=0,LA7OK(0)="HL7 "_LA7SPTY(LA7I)
"RTN","LA7VIN4",154,0)
 . . I $G(LA7SPTY(LA7I+2))="SCT" D OBRSCT Q
"RTN","LA7VIN4",155,0)
 ;
"RTN","LA7VIN4",156,0)
 I 'LA7OK D
"RTN","LA7VIN4",157,0)
 . N LA7MSG
"RTN","LA7VIN4",158,0)
 . S LA7ERR=49,LA7QUIT=2,LA7MSG=LA7OK(0)
"RTN","LA7VIN4",159,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",160,0)
 ;
"RTN","LA7VIN4",161,0)
 ; Don't continue if flag set to skip this segment
"RTN","LA7VIN4",162,0)
 I LA7QUIT Q
"RTN","LA7VIN4",163,0)
 ;
"RTN","LA7VIN4",164,0)
 ; Placer's ordering provider (id^duz^last name, first name, mi [id])
"RTN","LA7VIN4",165,0)
 I $G(LA7POP)="" D
"RTN","LA7VIN4",166,0)
 . S LA7POP="",LA7X=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VIN4",167,0)
 . I LA7X="" Q
"RTN","LA7VIN4",168,0)
 . S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",169,0)
 . I LA7POP="^^" S LA7POP=""
"RTN","LA7VIN4",170,0)
 ;
"RTN","LA7VIN4",171,0)
 ; Results rpt/status chng -  date/time
"RTN","LA7VIN4",172,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,23,LA7FS),LA7RSDT=""
"RTN","LA7VIN4",173,0)
 I LA7X'="" S LA7RSDT=$$HL7TFM^XLFDT(LA7X,"L")
"RTN","LA7VIN4",174,0)
 ;
"RTN","LA7VIN4",175,0)
 ; Result status
"RTN","LA7VIN4",176,0)
 S LA7OBR25=$$P^LA7VHLU(.LA7SEG,26,LA7FS)
"RTN","LA7VIN4",177,0)
 ;
"RTN","LA7VIN4",178,0)
 ; Parent result - CM data type.
"RTN","LA7VIN4",179,0)
 ; Save OBX-4 (sub-id) of parent result in LAPSUBID for subsequent usage by OBX/NTE's.
"RTN","LA7VIN4",180,0)
 S LA7OBR26=$$FIELD^LA7VHLU7(26)
"RTN","LA7VIN4",181,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR26)
"RTN","LA7VIN4",182,0)
 S LAPSUBID=$G(LA7OBR26(2))
"RTN","LA7VIN4",183,0)
 ;
"RTN","LA7VIN4",184,0)
 ; Parent
"RTN","LA7VIN4",185,0)
 S LA7OBR29=$$FIELD^LA7VHLU7(29)
"RTN","LA7VIN4",186,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR29)
"RTN","LA7VIN4",187,0)
 ;
"RTN","LA7VIN4",188,0)
 ; Principle Result interpreter
"RTN","LA7VIN4",189,0)
 S LA7OBR32=$$FIELD^LA7VHLU7(32),LA7PRI=""
"RTN","LA7VIN4",190,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR32)
"RTN","LA7VIN4",191,0)
 I $G(LA7OBR32(1))'="" D
"RTN","LA7VIN4",192,0)
 . S LA7X=$TR(LA7OBR32(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",193,0)
 . S LA7PRI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",194,0)
 . I LA7PRI="^^" S LA7PRI=""
"RTN","LA7VIN4",195,0)
 ;
"RTN","LA7VIN4",196,0)
 ; Assistant Result Interpreter
"RTN","LA7VIN4",197,0)
 S LA7OBR33=$$FIELD^LA7VHLU7(33),LA7ARI=""
"RTN","LA7VIN4",198,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR33)
"RTN","LA7VIN4",199,0)
 I $G(LA7OBR33(1))'="" D
"RTN","LA7VIN4",200,0)
 . S LA7X=$TR(LA7OBR33(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",201,0)
 . S LA7ARI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",202,0)
 . I LA7ARI="^^" S LA7ARI=""
"RTN","LA7VIN4",203,0)
 ;
"RTN","LA7VIN4",204,0)
 ; Technician
"RTN","LA7VIN4",205,0)
 S LA7OBR34=$$FIELD^LA7VHLU7(34),LA7TECH=""
"RTN","LA7VIN4",206,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR34)
"RTN","LA7VIN4",207,0)
 I $G(LA7OBR34(1))'="" D
"RTN","LA7VIN4",208,0)
 . S LA7X=$TR(LA7OBR34(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",209,0)
 . S LA7TECH=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",210,0)
 . I LA7TECH="^^" S LA7TECH=""
"RTN","LA7VIN4",211,0)
 ;
"RTN","LA7VIN4",212,0)
 ; Create entry in LAH for supported subscripts.
"RTN","LA7VIN4",213,0)
 I LA7MTYP="ORR",$G(LA7OTYPE)'="OK",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",214,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",215,0)
 . I $G(LA7ISQN)="" D CREATE^LA7LOG(14) Q
"RTN","LA7VIN4",216,0)
 . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",217,0)
 . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",218,0)
 . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",219,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_LA7OTYPE_"^^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",220,0)
 . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",221,0)
 . I $G(LA7OCR)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"OCR")=$TR(LA7OCR,LA7CS,"^")
"RTN","LA7VIN4",222,0)
 . I $G(LA7MSATM)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"MSA")=LA7MSATM
"RTN","LA7VIN4",223,0)
 ;
"RTN","LA7VIN4",224,0)
 I LA7MTYP="ORU",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",225,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",226,0)
 . I $G(LA7ISQN)<1 D CREATE^LA7LOG(14) Q
"RTN","LA7VIN4",227,0)
 . I LA7INTYP=10,LA7SAC?1(1"A",1"G") D
"RTN","LA7VIN4",228,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1,LA7SAC(0)=LA7I
"RTN","LA7VIN4",229,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",230,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",231,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",232,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",233,0)
 . I LA7INTYP=10,LA7OBR25?1(1"A",1"X") D
"RTN","LA7VIN4",234,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",235,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",236,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",237,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)_"^"_LA7OBR25
"RTN","LA7VIN4",238,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",239,0)
 . I LA7INTYP=10,LA7SS?1(1"MI",1"SP",1"CY",1"EM") S ^TMP("LA7-PL-NTE",$J,LA7LWL,LA7ISQN,LA7SS)=LA7SFAC
"RTN","LA7VIN4",240,0)
 ;
"RTN","LA7VIN4",241,0)
 I LA7INTYP=10,$G(LA7SM)'="",$G(LA7UID)'="" D SMUPDT^LA7VIN4A
"RTN","LA7VIN4",242,0)
 Q
"RTN","LA7VIN4",243,0)
 ;
"RTN","LA7VIN4",244,0)
 ;
"RTN","LA7VIN4",245,0)
OBRSCT   ; check if SCT doesn't match any specimen in #68
"RTN","LA7VIN4",246,0)
 ;
"RTN","LA7VIN4",247,0)
 ;ZEXCEPT: LA761,LA76248,LA7I,LA7OK,LA7SPTY
"RTN","LA7VIN4",248,0)
 ;
"RTN","LA7VIN4",249,0)
 N LA761SCT,R61,SCTOK
"RTN","LA7VIN4",250,0)
 S (R61,SCTOK)=0
"RTN","LA7VIN4",251,0)
 F  S R61=$O(LA761(R61)) Q:'R61  D
"RTN","LA7VIN4",252,0)
 . I $D(^LAHM(62.48,LA76248,"SCT","AD1",LA7SPTY(LA7I),R61_";LAB(61,")) S SCTOK=1 Q
"RTN","LA7VIN4",253,0)
 . S LA761SCT=$$IEN2SCT^LA7VHLU6(61,R61,DT,"")
"RTN","LA7VIN4",254,0)
 . I LA761SCT>0,$P(LA761SCT,"^")=LA7SPTY(LA7I) S SCTOK=1
"RTN","LA7VIN4",255,0)
 ;
"RTN","LA7VIN4",256,0)
 ; If no topography found on accession with a SCT mapping that matches SCT code then flag as error.
"RTN","LA7VIN4",257,0)
 ; Also if SCT code in message has Lexicon exception then record as a separate error.
"RTN","LA7VIN4",258,0)
 I 'SCTOK D
"RTN","LA7VIN4",259,0)
 . N LA7SCT,LA7X,LA7Z
"RTN","LA7VIN4",260,0)
 . S LA7OK=0,LA7OK(0)="SCTID "_LA7SPTY(LA7I)
"RTN","LA7VIN4",261,0)
 . S LA7Z=$$CODE^LEXTRAN(LA7SPTY(LA7I),"SCT",DT,"LA7SCT")
"RTN","LA7VIN4",262,0)
 . I $P(LA7Z,"^",5) D
"RTN","LA7VIN4",263,0)
 . . S LA7X=$P(LA7Z,"^",6)
"RTN","LA7VIN4",264,0)
 . . D CREATE^LA7LOG(37)
"RTN","LA7VIN4",265,0)
 ;
"RTN","LA7VIN4",266,0)
 Q
"RTN","LA7VIN4A")
0^37^B16212997
"RTN","LA7VIN4A",1,0)
LA7VIN4A ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:59
"RTN","LA7VIN4A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN4A",3,0)
 ;
"RTN","LA7VIN4A",4,0)
 ;This routine is a continuation of LA7VIN4 and is only called from there.
"RTN","LA7VIN4A",5,0)
 Q
"RTN","LA7VIN4A",6,0)
 ;
"RTN","LA7VIN4A",7,0)
 ;
"RTN","LA7VIN4A",8,0)
LAGEN ; Sets up variables for call to ^LAGEN,  build entry in LAH
"RTN","LA7VIN4A",9,0)
 ; requires LA7INST,LA7TRAY,LA7CUP,LA7AA,LA7AD,LA7AN,LA7LWL
"RTN","LA7VIN4A",10,0)
 ; returns LA7ISQN=subscript to store results in ^LAH global
"RTN","LA7VIN4A",11,0)
 ;
"RTN","LA7VIN4A",12,0)
 I LA7ENTRY="LOG" D
"RTN","LA7VIN4A",13,0)
 . I LA7INTYP>19,LA7INTYP<30 Q
"RTN","LA7VIN4A",14,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) D CREATE^LA7LOG(13)
"RTN","LA7VIN4A",15,0)
 I LA7ENTRY="LLIST" S:'LA7CUP LA7CUP=LA7IDE ;cup=sequence number
"RTN","LA7VIN4A",16,0)
 ;
"RTN","LA7VIN4A",17,0)
 K LA7ISQN,LADT,LAGEN
"RTN","LA7VIN4A",18,0)
 K TRAY,CUP,LWL,WL,LROVER,METH,LOG,IDENT,ISQN
"RTN","LA7VIN4A",19,0)
 ;
"RTN","LA7VIN4A",20,0)
 S LA7ISQN=""
"RTN","LA7VIN4A",21,0)
 S TRAY=+$G(LA7TRAY) S:'TRAY TRAY=1
"RTN","LA7VIN4A",22,0)
 S CUP=+$G(LA7CUP) S:'CUP CUP=1
"RTN","LA7VIN4A",23,0)
 ;
"RTN","LA7VIN4A",24,0)
 S LWL=LA7LWL
"RTN","LA7VIN4A",25,0)
 I '$D(^LRO(68.2,+LWL,0)) D  Q
"RTN","LA7VIN4A",26,0)
 . D CREATE^LA7LOG(19)
"RTN","LA7VIN4A",27,0)
 ;
"RTN","LA7VIN4A",28,0)
 ; Set accession area to area of specimen, allow multiple areas on same instrument.
"RTN","LA7VIN4A",29,0)
 S WL=LA7AA
"RTN","LA7VIN4A",30,0)
 I '$D(^LRO(68,+WL,0)) D  Q
"RTN","LA7VIN4A",31,0)
 . D CREATE^LA7LOG(20)
"RTN","LA7VIN4A",32,0)
 S LROVER=$P(LA7624(0),"^",12)
"RTN","LA7VIN4A",33,0)
 ; LEDI(MI & AP) override #62.4 setting so results always overlay
"RTN","LA7VIN4A",34,0)
 I LA7INTYP=10 D
"RTN","LA7VIN4A",35,0)
 . I LA7SS'?1(1"MI",1"SP",1"CY",1"EM") Q
"RTN","LA7VIN4A",36,0)
 . S LROVER=1
"RTN","LA7VIN4A",37,0)
 S METH=$P(LA7624(0),"^",10)
"RTN","LA7VIN4A",38,0)
 S LOG=LA7AN
"RTN","LA7VIN4A",39,0)
 S IDENT=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",6) ;identity field
"RTN","LA7VIN4A",40,0)
 S IDE=+LA7IDE
"RTN","LA7VIN4A",41,0)
 S LADT=LA7AD
"RTN","LA7VIN4A",42,0)
 ;
"RTN","LA7VIN4A",43,0)
 ; If POC interface call special entry point
"RTN","LA7VIN4A",44,0)
 D
"RTN","LA7VIN4A",45,0)
 . N LRDFN ; Protect LRDFN - call into LAGEN can set to 0
"RTN","LA7VIN4A",46,0)
 . I LA7INTYP>19,LA7INTYP<30 S IDE=LA76249 D POC^LAGEN Q
"RTN","LA7VIN4A",47,0)
 . D @(LA7ENTRY_"^LAGEN") ;this disregards the CROSS LINK field in 62.4
"RTN","LA7VIN4A",48,0)
 S LA7ISQN=$G(ISQN)
"RTN","LA7VIN4A",49,0)
 ;
"RTN","LA7VIN4A",50,0)
 I LA7ISQN<1 Q
"RTN","LA7VIN4A",51,0)
 ;
"RTN","LA7VIN4A",52,0)
 ; Build/store patient demographics array
"RTN","LA7VIN4A",53,0)
 N I,J,LA7OBRA,LA7PIDA,X,Y
"RTN","LA7VIN4A",54,0)
 S J="DFN^DOB^ICN^LOC^LRDFN^LRTDFN^PNM^SEX^SSN"
"RTN","LA7VIN4A",55,0)
 S J(0)="DFN^LA7DOB^LA7ICN^LA7LOC^LRDFN^LRTDFN^LA7PNM^LA7SEX^LA7SSN"
"RTN","LA7VIN4A",56,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4A",57,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4A",58,0)
 . I $G(@Y)'="" S LA7PIDA(X)=@Y
"RTN","LA7VIN4A",59,0)
 I $D(LA7PIDA) D POI^LAGEN(LA7LWL,LA7ISQN,"PID",.LA7PIDA)
"RTN","LA7VIN4A",60,0)
 ;
"RTN","LA7VIN4A",61,0)
 ; Build/store order info array
"RTN","LA7VIN4A",62,0)
 N LA7ONLTS
"RTN","LA7VIN4A",63,0)
 I LA7POP'="" S LA7POP=$P(LA7POP," [")
"RTN","LA7VIN4A",64,0)
 S X=$G(^LAH(LA7LWL,1,LA7ISQN,.1,"OBR","ORDNLT"))
"RTN","LA7VIN4A",65,0)
 I X'="",LA7ONLT'="",X'[LA7ONLT S LA7ONLTS=X_"^"_LA7ONLT
"RTN","LA7VIN4A",66,0)
 E  S LA7ONLTS=LA7ONLT
"RTN","LA7VIN4A",67,0)
 S J="EOL^FID^ORCDT^ORDNLT^ORDP^ORDSPEC^PON^SID^PEB^PVB^PRI^ARI^TECH"
"RTN","LA7VIN4A",68,0)
 S J(0)="LA7EOL^LA7FID^LA7CDT^LA7ONLTS^LA7POP^LA7SPEC^LA7PON^LA7SID^LA7PEB^LA7PVB^LA7PRI^LA7ARI^LA7TECH"
"RTN","LA7VIN4A",69,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4A",70,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4A",71,0)
 . I $G(@Y)'="" S LA7OBRA(X)=@Y
"RTN","LA7VIN4A",72,0)
 I $D(LA7OBRA) D POI^LAGEN(LA7LWL,LA7ISQN,"OBR",.LA7OBRA)
"RTN","LA7VIN4A",73,0)
 ;
"RTN","LA7VIN4A",74,0)
 ; Save placer fields 1/2 and filler fields 1/2
"RTN","LA7VIN4A",75,0)
 I LA7SOBR>0 F I=18:1:21 S X=$P("PF1^PF2^FF1^FF2","^",I-17) S ^LAH(LA7LWL,1,LA7ISQN,.1,"OBR",X,LA7SOBR)=LA7OBR(I)
"RTN","LA7VIN4A",76,0)
 ;
"RTN","LA7VIN4A",77,0)
 ; Store interface type with results
"RTN","LA7VIN4A",78,0)
 D LATYP^LAGEN(LA7LWL,LA7ISQN,LA7INTYP)
"RTN","LA7VIN4A",79,0)
 ; 
"RTN","LA7VIN4A",80,0)
 ; Store #62.49 ien with results
"RTN","LA7VIN4A",81,0)
 D LAMSGID^LAGEN(LA7LWL,LA7ISQN,LA76249)
"RTN","LA7VIN4A",82,0)
 ;
"RTN","LA7VIN4A",83,0)
 ; Store method name with LAH entry
"RTN","LA7VIN4A",84,0)
 D METH^LAGEN(LA7LWL,LA7ISQN,METH)
"RTN","LA7VIN4A",85,0)
 ;
"RTN","LA7VIN4A",86,0)
 ; Set flag if POC interface to start POC processing routine when
"RTN","LA7VIN4A",87,0)
 ; finished - tasked by LA7VIN before shutdown
"RTN","LA7VIN4A",88,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7INTYP("LWL",LA7LWL)=""
"RTN","LA7VIN4A",89,0)
 ;
"RTN","LA7VIN4A",90,0)
 Q
"RTN","LA7VIN4A",91,0)
 ;
"RTN","LA7VIN4A",92,0)
 ;
"RTN","LA7VIN4A",93,0)
SMUPDT ; Update shipping manifest in shipping event file #62.85
"RTN","LA7VIN4A",94,0)
 N LA7DATA,LA7NCS,LA7TST,LA7USID
"RTN","LA7VIN4A",95,0)
 ;
"RTN","LA7VIN4A",96,0)
 S LA7USID=$$P^LA7VHLU(.LA7SEG,5,LA7FS) ; Universal Service ID (OBR-4)
"RTN","LA7VIN4A",97,0)
 S LA7TST=$P(LA7USID,LA7CS,1) ; Test code
"RTN","LA7VIN4A",98,0)
 S LA7NCS=$P(LA7USID,LA7CS,3) ; Name of coding system
"RTN","LA7VIN4A",99,0)
 S LA7TST(2)=$P(LA7USID,LA7CS,4) ; Alternate test code
"RTN","LA7VIN4A",100,0)
 S LA7NCS(2)=$P(LA7USID,LA7CS,6) ; Alternate coding system
"RTN","LA7VIN4A",101,0)
 ;
"RTN","LA7VIN4A",102,0)
 ; Determine ordered test, check primary and alternate
"RTN","LA7VIN4A",103,0)
 S LA7OTST=$$DOT^LA7SMU1(LA7TST,LA7NCS,LA7UID,$P(LA7SM,"^"))
"RTN","LA7VIN4A",104,0)
 I 'LA7OTST,LA7TST(2)'="" S LA7OTST=$$DOT^LA7SMU1(LA7TST(2),LA7NCS(2),LA7UID,$P(LA7SM,"^"))
"RTN","LA7VIN4A",105,0)
 ;
"RTN","LA7VIN4A",106,0)
 ; Flag the Results Received Event in #62.85
"RTN","LA7VIN4A",107,0)
 I LA7MTYP="ORU" D
"RTN","LA7VIN4A",108,0)
 . S LA7DATA="SM70"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4A",109,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4A",110,0)
 ;
"RTN","LA7VIN4A",111,0)
 ; Flag the Test Received Event in #62.85
"RTN","LA7VIN4A",112,0)
 I LA7MTYP="ORR" D
"RTN","LA7VIN4A",113,0)
 . S LA7DATA="SM55"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4A",114,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4A",115,0)
 Q
"RTN","LA7VIN5")
0^12^B68402424
"RTN","LA7VIN5",1,0)
LA7VIN5 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  16:03
"RTN","LA7VIN5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN5",3,0)
 ;
"RTN","LA7VIN5",4,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN5",5,0)
 ; It is called to process OBX segments for "CH" subscript tests.
"RTN","LA7VIN5",6,0)
 ;
"RTN","LA7VIN5",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN5",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN5",9,0)
 Q
"RTN","LA7VIN5",10,0)
 ;
"RTN","LA7VIN5",11,0)
OBX ;
"RTN","LA7VIN5",12,0)
 ;
"RTN","LA7VIN5",13,0)
 N LA76241,LA76304,LA7EII,LA7I,LA7J,LA7LIMIT,LA7OBM,LA7SUBFL,LA7TEST,LA7TREEN,LA7UNITS,LA7VAL,LA7VTYP,LA7X,LA7XFORM,LA7Y
"RTN","LA7VIN5",14,0)
 ;
"RTN","LA7VIN5",15,0)
 K LA7RMK,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",16,0)
 ;
"RTN","LA7VIN5",17,0)
 S LA7SUBFL=63.04
"RTN","LA7VIN5",18,0)
 ;
"RTN","LA7VIN5",19,0)
 ; OBX Set ID
"RTN","LA7VIN5",20,0)
 S LA7SOBX=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN5",21,0)
 ;
"RTN","LA7VIN5",22,0)
 ; Value type - type of data from Table 0125
"RTN","LA7VIN5",23,0)
 S LA7VTYP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VIN5",24,0)
 ;
"RTN","LA7VIN5",25,0)
 ; Determine test result codes - check for primary and alternate codes
"RTN","LA7VIN5",26,0)
 ; For DoD/CHCS interface - do NOT process test codes using 99LRT as coding system per DoD/July 2002.
"RTN","LA7VIN5",27,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS),(LA7RNLT,LA7RLNC)=""
"RTN","LA7VIN5",28,0)
 S LA7TEST=$P(LA7X,LA7CS)
"RTN","LA7VIN5",29,0)
 S LA7TEST(0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,2),LA7FS_LA7ECH)
"RTN","LA7VIN5",30,0)
 I LA7TEST(0)["^" S LA7TEST(0)=$TR(LA7TEST(0),"^","~")
"RTN","LA7VIN5",31,0)
 S LA7TEST(0,1)=$P(LA7X,LA7CS,3)
"RTN","LA7VIN5",32,0)
 S LA7TEST(2)=$P(LA7X,LA7CS,4)
"RTN","LA7VIN5",33,0)
 S LA7TEST(2,0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,5),LA7FS_LA7ECH)
"RTN","LA7VIN5",34,0)
 I LA7TEST(2,0)["^" S LA7TEST(2,0)=$TR(LA7TEST(2,0),"^","~")
"RTN","LA7VIN5",35,0)
 S LA7TEST(2,1)=$P(LA7X,LA7CS,6)
"RTN","LA7VIN5",36,0)
 F I=3,6 D
"RTN","LA7VIN5",37,0)
 . S LA7Y=$P(LA7X,LA7CS,I-2)
"RTN","LA7VIN5",38,0)
 . I $P(LA7X,LA7CS,I)="LN" D  Q
"RTN","LA7VIN5",39,0)
 . . I $P($G(^LAB(95.3,+LA7Y,0)),"^")=LA7Y S LA7RLNC=+LA7Y Q
"RTN","LA7VIN5",40,0)
 . . I $P($G(^LAB(95.3,+LA7Y,0)),"^")=+LA7Y S LA7RLNC=+LA7Y Q
"RTN","LA7VIN5",41,0)
 . . S LA7J=$O(^LAB(95.3,"B",LA7Y,0))
"RTN","LA7VIN5",42,0)
 . . I LA7J S LA7RLNC=LA7J
"RTN","LA7VIN5",43,0)
 . I $P(LA7X,LA7CS,I)="99VA64" D  Q
"RTN","LA7VIN5",44,0)
 . . I $$FIND1^DIC(64,"","OMX",LA7Y) S LA7RNLT=LA7Y
"RTN","LA7VIN5",45,0)
 . I $P(LA7X,LA7CS,I)="99LRT" D  Q
"RTN","LA7VIN5",46,0)
 . . I LA7TEST(0)="",LA7TEST(2,0)'="" S LA7TEST(0)=LA7TEST(2,0)
"RTN","LA7VIN5",47,0)
 . . I LA7TEST(2,0)="",LA7TEST(0)'="" S LA7TEST(2,0)=LA7TEST(0)
"RTN","LA7VIN5",48,0)
 . . I I=3 S (LA7TEST,LA7TEST(0),LA7TEST(0,1))="" Q
"RTN","LA7VIN5",49,0)
 . . I I=6 S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))="" Q
"RTN","LA7VIN5",50,0)
 I LA7TEST="",LA7TEST(2)'="" D
"RTN","LA7VIN5",51,0)
 . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)
"RTN","LA7VIN5",52,0)
 . S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))=""
"RTN","LA7VIN5",53,0)
 ;
"RTN","LA7VIN5",54,0)
 ; No test code in message
"RTN","LA7VIN5",55,0)
 I LA7TEST="",LA7TEST(2)="" D  Q
"RTN","LA7VIN5",56,0)
 . N LA7OBX
"RTN","LA7VIN5",57,0)
 . S LA7OBX=LA7SEG(0)
"RTN","LA7VIN5",58,0)
 . D CREATE^LA7LOG(15)
"RTN","LA7VIN5",59,0)
 ;
"RTN","LA7VIN5",60,0)
 ; Test code not found in auto inst file, also check alternate codes,
"RTN","LA7VIN5",61,0)
 ; and log error if none found.
"RTN","LA7VIN5",62,0)
 I LA7MTYP="ORU" D  Q:LA7TEST=""
"RTN","LA7VIN5",63,0)
 . I LA7TEST'="",$D(^LAB(62.4,LA7624,3,"AC",LA7TEST)) Q
"RTN","LA7VIN5",64,0)
 . I LA7TEST(2)'="",$D(^LAB(62.4,LA7624,3,"AC",LA7TEST(2))) D  Q
"RTN","LA7VIN5",65,0)
 . . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)
"RTN","LA7VIN5",66,0)
 . D CREATE^LA7LOG(16) S LA7TEST=""
"RTN","LA7VIN5",67,0)
 ;
"RTN","LA7VIN5",68,0)
 ; Units - trim leading/trailing spaces
"RTN","LA7VIN5",69,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,7,LA7FS),LA7UNITS=""
"RTN","LA7VIN5",70,0)
 I LA7X'="" D
"RTN","LA7VIN5",71,0)
 . F I=1:1:6 S LA7UNITS(I)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,I),LA7FS_LA7ECH)
"RTN","LA7VIN5",72,0)
 . S LA7UNITS=$$TRIM^XLFSTR(LA7UNITS(1),"LR"," ")
"RTN","LA7VIN5",73,0)
 . I LA7UNITS["^" D
"RTN","LA7VIN5",74,0)
 . . N LA7STR S LA7STR("^")="~U~"
"RTN","LA7VIN5",75,0)
 . . S LA7UNITS=$$REPLACE^XLFSTR(LA7UNITS,.LA7STR)
"RTN","LA7VIN5",76,0)
 ;
"RTN","LA7VIN5",77,0)
 ; Observation result status - Table 0085
"RTN","LA7VIN5",78,0)
 S LA7ORS=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN5",79,0)
 ;
"RTN","LA7VIN5",80,0)
 ; Responsible observer
"RTN","LA7VIN5",81,0)
 S LA7RO=$$XCNTFM^LA7VHLU9($$P^LA7VHLU(.LA7SEG,17,LA7FS),LA7ECH)
"RTN","LA7VIN5",82,0)
 ;
"RTN","LA7VIN5",83,0)
 ; Observation method
"RTN","LA7VIN5",84,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7OBM=""
"RTN","LA7VIN5",85,0)
 I $P(LA7X,LA7CS,3)="99VA64_2" S LA7OBM=$P($P(LA7X,LA7CS,1),".",2)
"RTN","LA7VIN5",86,0)
 ;
"RTN","LA7VIN5",87,0)
 ; Equipment instance identifier
"RTN","LA7VIN5",88,0)
 S LA7EII=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN5",89,0)
 I LA7EII'="" D
"RTN","LA7VIN5",90,0)
 . S LA7EII=$$UNESC^LA7VHLU3(LA7EII,LA7FS_LA7ECH)
"RTN","LA7VIN5",91,0)
 . S LA7EII=$TR(LA7EII,"^",";")
"RTN","LA7VIN5",92,0)
 ;
"RTN","LA7VIN5",93,0)
 ; Process ORU message results for all tests which use this test code.
"RTN","LA7VIN5",94,0)
 I LA7MTYP="ORU" D  Q
"RTN","LA7VIN5",95,0)
 . S LA76241=0
"RTN","LA7VIN5",96,0)
 . F  S LA76241=$O(^LAB(62.4,LA7624,3,"AC",LA7TEST,LA76241)) Q:'LA76241  D PROCESS
"RTN","LA7VIN5",97,0)
 ;
"RTN","LA7VIN5",98,0)
 I LA7MTYP="ORM",$G(LA7696)>0 D ORESULTS^LA7VIN5B
"RTN","LA7VIN5",99,0)
 ;
"RTN","LA7VIN5",100,0)
 Q
"RTN","LA7VIN5",101,0)
 ;
"RTN","LA7VIN5",102,0)
 ;
"RTN","LA7VIN5",103,0)
PROCESS ; Process results for a given test code
"RTN","LA7VIN5",104,0)
 F LA7I=0,1,2 S LA76241(LA7I)=$G(^LAB(62.4,LA7624,3,LA76241,LA7I))
"RTN","LA7VIN5",105,0)
 ;
"RTN","LA7VIN5",106,0)
 ; Chem test fields incorrect
"RTN","LA7VIN5",107,0)
 I LA76241(0)="" D CREATE^LA7LOG(18) Q
"RTN","LA7VIN5",108,0)
 ;
"RTN","LA7VIN5",109,0)
 ; No dataname associated with this test - skip
"RTN","LA7VIN5",110,0)
 S LA76304=$P($G(^LAB(60,+$P(LA76241(0),"^"),.2)),"^")
"RTN","LA7VIN5",111,0)
 I LA76304<1 Q
"RTN","LA7VIN5",112,0)
 ;
"RTN","LA7VIN5",113,0)
 S LA7VAL=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5",114,0)
 I LA7VTYP="CE",$P(LA7VAL,LA7CS,2)'="" S LA7VAL=$P(LA7VAL,LA7CS,2)
"RTN","LA7VIN5",115,0)
 E  S LA7VAL=$P(LA7VAL,LA7CS)
"RTN","LA7VIN5",116,0)
 ;
"RTN","LA7VIN5",117,0)
 ; Setup LA7RMK(0) variable in case comments (NTE) sent with test results.
"RTN","LA7VIN5",118,0)
 S LA7RMK(0,+LA76241(0))=+$P(LA76241(2),"^",7)_"^"_$P(LA76241(2),"^",8)
"RTN","LA7VIN5",119,0)
 ;
"RTN","LA7VIN5",120,0)
 ; Set flag for new results alert
"RTN","LA7VIN5",121,0)
 I LA7ORS'?1(1"C",1"D",1"W") S ^TMP("LA7-ORU",$J,LA76248,LA76249,"CH")=""
"RTN","LA7VIN5",122,0)
 ;
"RTN","LA7VIN5",123,0)
 ; Set flag to send amended results bulletin
"RTN","LA7VIN5",124,0)
 I LA7INTYP=10,LA7ORS?1(1"C",1"D",1"W") D
"RTN","LA7VIN5",125,0)
 . S LA7I=$O(^TMP("LA7 AMENDED RESULTS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5",126,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN5",127,0)
 . S ^TMP("LA7 AMENDED RESULTS",$J,LA7I)=X
"RTN","LA7VIN5",128,0)
 . I LA7UID'="" S ^LAH("LA7 AMENDED RESULTS",LA7UID,LA76304,LA7LWL,LA7ISQN)=X
"RTN","LA7VIN5",129,0)
 ;
"RTN","LA7VIN5",130,0)
 ; NOTE - this array can be set from inside PARAM 1
"RTN","LA7VIN5",131,0)
 K LA7XFORM
"RTN","LA7VIN5",132,0)
 ; execute PARAM 1 if not a LEDI interface
"RTN","LA7VIN5",133,0)
 I LA7INTYP'=10 X $P(LA76241(0),"^",2)
"RTN","LA7VIN5",134,0)
 I $P(LA76241(2),"^",3)=0 Q
"RTN","LA7VIN5",135,0)
 I $P(LA76241(2),"^",3)=2,LA7ORS'?1(1"C",1"F",1"U",1"X") Q
"RTN","LA7VIN5",136,0)
 ;
"RTN","LA7VIN5",137,0)
 ; If OBX indicates no result for this test then store VistA "canc" value.
"RTN","LA7VIN5",138,0)
 I LA7ORS="X",LA7VAL="" S LA7VAL="canc"
"RTN","LA7VIN5",139,0)
 ;
"RTN","LA7VIN5",140,0)
 ; No value found
"RTN","LA7VIN5",141,0)
 I LA7VAL="" D  Q
"RTN","LA7VIN5",142,0)
 . D CREATE^LA7LOG(17)
"RTN","LA7VIN5",143,0)
 ;
"RTN","LA7VIN5",144,0)
 ; Transform result based on fields in file 62.4
"RTN","LA7VIN5",145,0)
 D XFORM^LA7VIN5A
"RTN","LA7VIN5",146,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",147,0)
 ;
"RTN","LA7VIN5",148,0)
 ; Check if result passes input transform on data name
"RTN","LA7VIN5",149,0)
 D CHKDIE^LA7VIN5A
"RTN","LA7VIN5",150,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",151,0)
 ;
"RTN","LA7VIN5",152,0)
 ; Set flag to not store comments if it wasn't explicitly ordered.
"RTN","LA7VIN5",153,0)
 I $G(LA7LIMIT)=1 D
"RTN","LA7VIN5",154,0)
 . N LA76804
"RTN","LA7VIN5",155,0)
 . K LA7LIMIT,LA7TREEN,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",156,0)
 . ; Store all tests accessioned in ^TMP
"RTN","LA7VIN5",157,0)
 . S LA76804=0
"RTN","LA7VIN5",158,0)
 . F  S LA76804=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA76804)) Q:'LA76804  D UNWIND^LA7UTIL(LA76804)
"RTN","LA7VIN5",159,0)
 . I '$D(^TMP("LA7TREE",$J,+LA76241(0))) S LA7LIMIT=1 ;wasn't ordered
"RTN","LA7VIN5",160,0)
 I $G(LA7LIMIT) D  Q
"RTN","LA7VIN5",161,0)
 . S $P(LA7RMK(0,+LA76241(0)),"^",1)=0
"RTN","LA7VIN5",162,0)
 . K LA7LIMIT,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",163,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN5",164,0)
 ;
"RTN","LA7VIN5",165,0)
 ; Check point of care interface for matching specimen type  for this test in #62.4
"RTN","LA7VIN5",166,0)
 I LA7INTYP>19,LA7INTYP<30 D  Q:'LA761
"RTN","LA7VIN5",167,0)
 . N LA70070
"RTN","LA7VIN5",168,0)
 . S LA761="",LA7X=$P(LA76241(2),"^",13) Q:'LA7X
"RTN","LA7VIN5",169,0)
 . S LA70070=$$GET1^DIQ(61,LA7X_",","LEDI HL7:HL7 ABBR")
"RTN","LA7VIN5",170,0)
 . I LA70070=LA7SPEC S LA761=LA7X
"RTN","LA7VIN5",171,0)
 ;
"RTN","LA7VIN5",172,0)
 ; Set data node=test value
"RTN","LA7VIN5",173,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^")=LA7VAL
"RTN","LA7VIN5",174,0)
 ;
"RTN","LA7VIN5",175,0)
 ; Store reference ranges except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",176,0)
 I LA7INTYP'=1 D REFRNG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,8,LA7FS))
"RTN","LA7VIN5",177,0)
 ;
"RTN","LA7VIN5",178,0)
 ; Store order/result codes/observation method except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",179,0)
 I LA7INTYP'=1 D
"RTN","LA7VIN5",180,0)
 . S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)
"RTN","LA7VIN5",181,0)
 . I LA7ONLT S $P(LA7X,"!",1)=LA7ONLT
"RTN","LA7VIN5",182,0)
 . I LA7RNLT S $P(LA7X,"!",2)=LA7RNLT
"RTN","LA7VIN5",183,0)
 . I LA7RLNC S $P(LA7X,"!",3)=LA7RLNC
"RTN","LA7VIN5",184,0)
 . I LA7OBM S $P(LA7X,"!",4)=LA7OBM
"RTN","LA7VIN5",185,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)=LA7X
"RTN","LA7VIN5",186,0)
 ;
"RTN","LA7VIN5",187,0)
 ; Store abnormal flags except for UI (LA7INTYP=1) interfaces.
"RTN","LA7VIN5",188,0)
 I LA7INTYP'=1 D ABFLAG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,9,LA7FS))
"RTN","LA7VIN5",189,0)
 ;
"RTN","LA7VIN5",190,0)
 ; Store units except for UI (LA7INTYP=1) interfaces which pull values from file #60.
"RTN","LA7VIN5",191,0)
 I LA7INTYP'=1,LA7UNITS'="" D
"RTN","LA7VIN5",192,0)
 . S LA7X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5",193,0)
 . S $P(LA7X,"!",7)=LA7UNITS
"RTN","LA7VIN5",194,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=LA7X
"RTN","LA7VIN5",195,0)
 ;
"RTN","LA7VIN5",196,0)
 ; Store responsible observer on POC interfaces
"RTN","LA7VIN5",197,0)
 I LA7RO'="",LA7INTYP>19,LA7INTYP<30 D
"RTN","LA7VIN5",198,0)
 . I $P(LA7RO,"^",2) S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",4)=$P(LA7RO,"^",2)
"RTN","LA7VIN5",199,0)
 ;
"RTN","LA7VIN5",200,0)
 ; Store specimen type except for UI (LA7INTYP=1) interfaces which pull values from the accession.
"RTN","LA7VIN5",201,0)
 I LA7INTYP'=1,$G(LA761) D
"RTN","LA7VIN5",202,0)
 . S X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)
"RTN","LA7VIN5",203,0)
 . S $P(X,"!")=LA761
"RTN","LA7VIN5",204,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5",205,0)
 ;
"RTN","LA7VIN5",206,0)
 ; Store where test was performed except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",207,0)
 ;  also store related filler order number
"RTN","LA7VIN5",208,0)
 I LA7INTYP'=1 D
"RTN","LA7VIN5",209,0)
 . N I,LA7X,LA74
"RTN","LA7VIN5",210,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,24,LA7FS),LA74=""
"RTN","LA7VIN5",211,0)
 . I $P(LA7X,LA7CS,6)="CLIA" D
"RTN","LA7VIN5",212,0)
 . . S LA74=$$IDX^XUAF4("CLIA",$P(LA7X,LA7CS,10))
"RTN","LA7VIN5",213,0)
 . . I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",9)=LA74
"RTN","LA7VIN5",214,0)
 . . E  S LA74=""
"RTN","LA7VIN5",215,0)
 . I LA74="" D PRDID^LA7VIN5A($$P^LA7VHLU(.LA7SEG,16,LA7FS),LA7SFAC,LA7CS)
"RTN","LA7VIN5",216,0)
 . I LA7FID'="" D FID
"RTN","LA7VIN5",217,0)
 ;
"RTN","LA7VIN5",218,0)
 ; Store equipment instance identifier
"RTN","LA7VIN5",219,0)
 I LA7EII'="" D EII^LA7VIN5A
"RTN","LA7VIN5",220,0)
 ;
"RTN","LA7VIN5",221,0)
 ; If results for LEDI interface (LA7INTYP=10) and site keeps file #60
"RTN","LA7VIN5",222,0)
 ; in sync with reference lab then compare message's units and normals
"RTN","LA7VIN5",223,0)
 ; with site's to detect changes(LA7FLAG=1) and notify site.
"RTN","LA7VIN5",224,0)
 I LA7INTYP=10,$G(LA761),$G(^LAB(60,+$P(LA76241(0),"^"),1,LA761,.1)) D
"RTN","LA7VIN5",225,0)
 . N LA760,LA7FLAG,LA7I,LA7Y,LA7X
"RTN","LA7VIN5",226,0)
 . S LA760=+$P(LA76241(0),"^"),LA7Y=^LAB(60,LA760,1,LA761,0),LA7FLAG=0
"RTN","LA7VIN5",227,0)
 . S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)
"RTN","LA7VIN5",228,0)
 . I $P(LA7Y,"^",7)'=$P(LA7X,"!",7) S LA7FLAG=1
"RTN","LA7VIN5",229,0)
 . I 'LA7FLAG,$P(LA7Y,"^",2)=$P(LA7X,"!",2),$P(LA7Y,"^",3)=$P(LA7X,"!",3) Q
"RTN","LA7VIN5",230,0)
 . I 'LA7FLAG D
"RTN","LA7VIN5",231,0)
 . . N AGE,DOB,PNM,SEX
"RTN","LA7VIN5",232,0)
 . . N LRDPF,LRNG,LRNGS,LRNG2,LRNG3,LRNG4,LRNG5,LRTREA,LRWRD,LRX,LRY
"RTN","LA7VIN5",233,0)
 . . I $G(LRDFN) D DEM^LRX,KVAR^VADPT
"RTN","LA7VIN5",234,0)
 . . S LRNG=LA7Y D NORM^LRVER5
"RTN","LA7VIN5",235,0)
 . . S LA7Y=$TR(LRNG,$C(34),""),LA7X=$TR(LA7X,$C(34),"")
"RTN","LA7VIN5",236,0)
 . . I $P(LA7Y,"^",2)=$P(LA7X,"!",2),$P(LA7Y,"^",3)=$P(LA7X,"!",3) Q
"RTN","LA7VIN5",237,0)
 . . S LA7FLAG=1
"RTN","LA7VIN5",238,0)
 . I 'LA7FLAG Q
"RTN","LA7VIN5",239,0)
 . S LA7I=$O(^TMP("LA7 UNITS/NORMALS CHANGED",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5",240,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)_"^"_LA760
"RTN","LA7VIN5",241,0)
 . S ^TMP("LA7 UNITS/NORMALS CHANGED",$J,LA7I)=X
"RTN","LA7VIN5",242,0)
 ;
"RTN","LA7VIN5",243,0)
 ; If LEDI interface and order status change store which results
"RTN","LA7VIN5",244,0)
 ; associated with ordered test. Used to determine if order status
"RTN","LA7VIN5",245,0)
 ; changed bulletin needs to be generated.
"RTN","LA7VIN5",246,0)
 I LA7INTYP=10,LA7SAC?1(1"A",1"G") D
"RTN","LA7VIN5",247,0)
 . S LA7I=$G(LA7SAC(0)) Q:'LA7I
"RTN","LA7VIN5",248,0)
 . S ^TMP("LA7 ORDER STATUS",$J,LA7I,+LA76241(0))=""
"RTN","LA7VIN5",249,0)
 Q
"RTN","LA7VIN5",250,0)
 ;
"RTN","LA7VIN5",251,0)
 ;
"RTN","LA7VIN5",252,0)
FID ; Store filler id
"RTN","LA7VIN5",253,0)
 ;
"RTN","LA7VIN5",254,0)
 ;ZEXCEPT: LA7LWL,LA76304,LA7FID,LA7ISQN
"RTN","LA7VIN5",255,0)
 N LA7STR,LA7X,I
"RTN","LA7VIN5",256,0)
 ;
"RTN","LA7VIN5",257,0)
 S LA7STR("^")="~U~",LA7X=LA7FID
"RTN","LA7VIN5",258,0)
 ;
"RTN","LA7VIN5",259,0)
 I LA7X["^" S LA7X=$$REPLACE^XLFSTR(LA7X,.LA7STR)
"RTN","LA7VIN5",260,0)
 ;
"RTN","LA7VIN5",261,0)
 F I=2:1:4 D
"RTN","LA7VIN5",262,0)
 . I LA7FID(I)="" Q
"RTN","LA7VIN5",263,0)
 . I LA7FID(I)["^" S $P(LA7X,"^",I)=$$REPLACE^XLFSTR(LA7FID(I),.LA7STR) Q
"RTN","LA7VIN5",264,0)
 . S $P(LA7X,"^",I)=LA7FID(I)
"RTN","LA7VIN5",265,0)
 ;
"RTN","LA7VIN5",266,0)
 S ^LAH(LA7LWL,1,LA7ISQN,.1,"OBR","FID",LA76304)=LA7X
"RTN","LA7VIN5",267,0)
 ;
"RTN","LA7VIN5",268,0)
 Q
"RTN","LA7VIN5A")
0^62^B32697215
"RTN","LA7VIN5A",1,0)
LA7VIN5A ;DALOI/JMC - Process Incoming UI Msgs, continued ;Jun 24, 2008
"RTN","LA7VIN5A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,67,72,66,74**;Sep 27, 1994;Build 229
"RTN","LA7VIN5A",3,0)
 ;
"RTN","LA7VIN5A",4,0)
 ; This routine is a continuation of LA7VIN5.
"RTN","LA7VIN5A",5,0)
 ; It performs processing of fields in OBX segments.
"RTN","LA7VIN5A",6,0)
 Q
"RTN","LA7VIN5A",7,0)
 ;
"RTN","LA7VIN5A",8,0)
 ;
"RTN","LA7VIN5A",9,0)
XFORM ; Transform the result based on fields 12,13,14,16,17 in the Chem Test
"RTN","LA7VIN5A",10,0)
 ; multiple in the Auto Instrument file (62.4), or set on the fly from PARAM 1
"RTN","LA7VIN5A",11,0)
 N LA7I
"RTN","LA7VIN5A",12,0)
 S LA7XFORM=LA76241(2)
"RTN","LA7VIN5A",13,0)
 ;
"RTN","LA7VIN5A",14,0)
 ; get PARAM 1 overrides
"RTN","LA7VIN5A",15,0)
 I $D(LA7XFORM(1)),LA7XFORM(1)?1.N S $P(LA7XFORM,"^")=LA7XFORM(1)
"RTN","LA7VIN5A",16,0)
 F LA7I=2,3,5,6 I $D(LA7XFORM(LA7I)) S $P(LA7XFORM,"^",LA7I)=LA7XFORM(LA7I)
"RTN","LA7VIN5A",17,0)
 ; set up defaults if field was not answered
"RTN","LA7VIN5A",18,0)
 ; accept results,yes
"RTN","LA7VIN5A",19,0)
 I $P(LA7XFORM,"^",3)="" S $P(LA7XFORM,"^",3)=1
"RTN","LA7VIN5A",20,0)
 ; strip spaces,no
"RTN","LA7VIN5A",21,0)
 I $P(LA7XFORM,"^",6)="" S $P(LA7XFORM,"^",6)=0
"RTN","LA7VIN5A",22,0)
 ; now transform
"RTN","LA7VIN5A",23,0)
 ;
"RTN","LA7VIN5A",24,0)
 ; Don't accept results
"RTN","LA7VIN5A",25,0)
 I '$P(LA7XFORM,"^",3) S LA7VAL="" Q
"RTN","LA7VIN5A",26,0)
 ;
"RTN","LA7VIN5A",27,0)
 ; Only accept "FINAL" type results
"RTN","LA7VIN5A",28,0)
 I $P(LA7XFORM,"^",3)=2,"CFUX"'[LA7ORS S LA7VAL="" Q
"RTN","LA7VIN5A",29,0)
 ;
"RTN","LA7VIN5A",30,0)
 ; Accept ordered tests only
"RTN","LA7VIN5A",31,0)
 ; If LEDI interface (10) and message indicates a reflex ("G") or add-on test ("A")
"RTN","LA7VIN5A",32,0)
 ;  then process anyway in case it has not been added to accession.
"RTN","LA7VIN5A",33,0)
 I $P(LA7XFORM,"^",5) D
"RTN","LA7VIN5A",34,0)
 . I LA7INTYP=10,LA7SAC?1(1"A",1"G") Q
"RTN","LA7VIN5A",35,0)
 . S LA7LIMIT=1
"RTN","LA7VIN5A",36,0)
 ;
"RTN","LA7VIN5A",37,0)
 ; Decimal places if number of places defined
"RTN","LA7VIN5A",38,0)
 I $P(LA7XFORM,"^")?1.N D JUSTDEC
"RTN","LA7VIN5A",39,0)
 ;
"RTN","LA7VIN5A",40,0)
 ; Strip spaces
"RTN","LA7VIN5A",41,0)
 I $P(LA7XFORM,"^",6) S LA7VAL=$TR(LA7VAL," ","")
"RTN","LA7VIN5A",42,0)
 ;
"RTN","LA7VIN5A",43,0)
 ; Make result a comment
"RTN","LA7VIN5A",44,0)
 ; Set value to null after making into remark, don't store twice.
"RTN","LA7VIN5A",45,0)
 I $P(LA7XFORM,"^",2) D
"RTN","LA7VIN5A",46,0)
 . N LA7Y
"RTN","LA7VIN5A",47,0)
 . ; Store comment in ^LAH global
"RTN","LA7VIN5A",48,0)
 . S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",49,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7VAL,LA7Y)
"RTN","LA7VIN5A",50,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",51,0)
 Q
"RTN","LA7VIN5A",52,0)
 ;
"RTN","LA7VIN5A",53,0)
 ;
"RTN","LA7VIN5A",54,0)
CHKDIE ; Check if value to be stored passes input transform of field in DD
"RTN","LA7VIN5A",55,0)
 N LA7ERR,LA7Y
"RTN","LA7VIN5A",56,0)
 ;
"RTN","LA7VIN5A",57,0)
 ; If result is on a LEDI interface (type=10) then don't check result against FileMan input transform.
"RTN","LA7VIN5A",58,0)
 ; VistA sends "canc" as test result when test is cancelled.
"RTN","LA7VIN5A",59,0)
 ; DoD sends "PL Canceled" --> change to "canc" for VistA storage.
"RTN","LA7VIN5A",60,0)
 I LA7INTYP=10 D  Q
"RTN","LA7VIN5A",61,0)
 . I LA7VAL="PL Cancelled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",62,0)
 . I LA7VAL="PL Canceled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",63,0)
 . I LA7VAL="PLCanceled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",64,0)
 ;
"RTN","LA7VIN5A",65,0)
 ; If canc or comment value received then pass as these are valid results on VistA.
"RTN","LA7VIN5A",66,0)
 I LA7VAL="canc"!(LA7VAL="comment") Q
"RTN","LA7VIN5A",67,0)
 ;
"RTN","LA7VIN5A",68,0)
 ; If value fails data checker then log error and suppress result.
"RTN","LA7VIN5A",69,0)
 D CHK^DIE(LA7SUBFL,LA76304,"H",LA7VAL,.LA7Y,"LA7ERR")
"RTN","LA7VIN5A",70,0)
 I LA7Y="^" D
"RTN","LA7VIN5A",71,0)
 . N LA7X
"RTN","LA7VIN5A",72,0)
 . S LA7X=$G(LA7ERR("DIERR",1,"TEXT",1))
"RTN","LA7VIN5A",73,0)
 . D CREATE^LA7LOG(37)
"RTN","LA7VIN5A",74,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",75,0)
 Q
"RTN","LA7VIN5A",76,0)
 ;
"RTN","LA7VIN5A",77,0)
 ;
"RTN","LA7VIN5A",78,0)
JUSTDEC ; Justify to number of places specified
"RTN","LA7VIN5A",79,0)
 ;
"RTN","LA7VIN5A",80,0)
 N LA7DDTYP,LA7FMT,LA7I,LA7PRFIX,LA7X
"RTN","LA7VIN5A",81,0)
 ;
"RTN","LA7VIN5A",82,0)
 ; If LEDI interface (type=10) then skip decimal adjustment
"RTN","LA7VIN5A",83,0)
 I LA7INTYP=10 Q
"RTN","LA7VIN5A",84,0)
 ;
"RTN","LA7VIN5A",85,0)
 ; Get data name field type from DD
"RTN","LA7VIN5A",86,0)
 ; Only justify if Vista field is numeric or free text.
"RTN","LA7VIN5A",87,0)
 S LA7DDTYP=$$GET1^DID(LA7SUBFL,LA76304,"","TYPE")
"RTN","LA7VIN5A",88,0)
 I "NUMERIC^FREE TEXT"'[LA7DDTYP D  Q
"RTN","LA7VIN5A",89,0)
 . N LA7FLDNM
"RTN","LA7VIN5A",90,0)
 . S LA7FLDNM=$$GET1^DID(63.04,LA76304,"","LABEL")
"RTN","LA7VIN5A",91,0)
 . D CREATE^LA7LOG(38)
"RTN","LA7VIN5A",92,0)
 ;
"RTN","LA7VIN5A",93,0)
 S LA7X=LA7VAL,(LA7FMT,LA7PRFIX)=""
"RTN","LA7VIN5A",94,0)
 ;
"RTN","LA7VIN5A",95,0)
 ; If comma formatted, strip comma and set flag to add back in.
"RTN","LA7VIN5A",96,0)
 S LA7X=$TR(LA7X,",","")
"RTN","LA7VIN5A",97,0)
 I LA7X'=LA7VAL S LA7FMT="P"
"RTN","LA7VIN5A",98,0)
 ;
"RTN","LA7VIN5A",99,0)
 ; If "<>=" formatted, strip and save to add back in.
"RTN","LA7VIN5A",100,0)
 F LA7I=1:1:$L(LA7X) Q:$E(LA7X,LA7I)'?1(1"<",1">",1"=")
"RTN","LA7VIN5A",101,0)
 I LA7I>1 D
"RTN","LA7VIN5A",102,0)
 . S LA7PRFIX=$E(LA7X,1,LA7I-1)
"RTN","LA7VIN5A",103,0)
 . S LA7X=$E(LA7X,LA7I,$L(LA7X))
"RTN","LA7VIN5A",104,0)
 ;
"RTN","LA7VIN5A",105,0)
 ; Format if starts with number or decimal point, skip other results.
"RTN","LA7VIN5A",106,0)
 I LA7X?1(1.N,.N1"."1.N) D
"RTN","LA7VIN5A",107,0)
 . S LA7X=$FN(LA7X,LA7FMT,+LA7XFORM)
"RTN","LA7VIN5A",108,0)
 . S LA7VAL=LA7PRFIX_LA7X
"RTN","LA7VIN5A",109,0)
 Q
"RTN","LA7VIN5A",110,0)
 ;
"RTN","LA7VIN5A",111,0)
 ;
"RTN","LA7VIN5A",112,0)
PRDID(LA7PRDID,LA7SFAC,LA7CS) ; Process/Store Producer's ID
"RTN","LA7VIN5A",113,0)
 ; Store where test was performed.
"RTN","LA7VIN5A",114,0)
 ; Call with LA7PRDID = Producer's ID field
"RTN","LA7VIN5A",115,0)
 ;            LA7SFAC = sending facility
"RTN","LA7VIN5A",116,0)
 ;              LA7CS = component encoding character
"RTN","LA7VIN5A",117,0)
 ;
"RTN","LA7VIN5A",118,0)
 ; Remove units/reference ranges when Lab UI interface so file #60 settings always used
"RTN","LA7VIN5A",119,0)
 I $G(LA7INTYP)=1 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)="" Q
"RTN","LA7VIN5A",120,0)
 ;
"RTN","LA7VIN5A",121,0)
 N LA74,LA7I,LA7X,LA7Y
"RTN","LA7VIN5A",122,0)
 ;
"RTN","LA7VIN5A",123,0)
 ; Store producer's id in LAH global with results.
"RTN","LA7VIN5A",124,0)
 ; LA7PRODID set with pointer to file #4 to be used by segments (NTE) that follow OBX's.
"RTN","LA7VIN5A",125,0)
 S (LA74,LA7PRODID)=$$RESFID^LA7VHLU2(LA7PRDID,LA7SFAC,LA7CS)
"RTN","LA7VIN5A",126,0)
 I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",9)=LA74 Q
"RTN","LA7VIN5A",127,0)
 ;
"RTN","LA7VIN5A",128,0)
 ; Don't store producer's id as comment.
"RTN","LA7VIN5A",129,0)
 I '$P(LA76241(2),"^",9) Q
"RTN","LA7VIN5A",130,0)
 ;
"RTN","LA7VIN5A",131,0)
 ; If unable to identify producer in file #4 then store as comment if field STORE PRODUCER'S ID (#20) enabled.
"RTN","LA7VIN5A",132,0)
 S LA7X=$P(LA7PRDID,LA7CS,2)
"RTN","LA7VIN5A",133,0)
 I LA7X="" Q
"RTN","LA7VIN5A",134,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",135,0)
 S LA7X=$S(LA7Y="":"P",1:"p")_"erformed by "_LA7X
"RTN","LA7VIN5A",136,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7VIN5A",137,0)
 ;
"RTN","LA7VIN5A",138,0)
 Q
"RTN","LA7VIN5A",139,0)
 ;
"RTN","LA7VIN5A",140,0)
 ;
"RTN","LA7VIN5A",141,0)
REFRNG(LA7X) ; Process/Store References Range.
"RTN","LA7VIN5A",142,0)
 ; Call with LA7X = reference range to store.
"RTN","LA7VIN5A",143,0)
 ;
"RTN","LA7VIN5A",144,0)
 Q:$G(LA7INTYP)=1
"RTN","LA7VIN5A",145,0)
 N LA7Y,X,Y
"RTN","LA7VIN5A",146,0)
 ;
"RTN","LA7VIN5A",147,0)
 ; Check if site does not want to store reference ranges on POC test.
"RTN","LA7VIN5A",148,0)
 I LA7INTYP>19,LA7INTYP<30,+$P(LA76241(2),"^",10)=0 Q
"RTN","LA7VIN5A",149,0)
 ;
"RTN","LA7VIN5A",150,0)
 ; Remove leading and trailing quotes from reference range.
"RTN","LA7VIN5A",151,0)
 S LA7X=$$TRIM^XLFSTR($G(LA7X),"RL","""")
"RTN","LA7VIN5A",152,0)
 I LA7X="" Q
"RTN","LA7VIN5A",153,0)
 ;
"RTN","LA7VIN5A",154,0)
 S X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5A",155,0)
 ;
"RTN","LA7VIN5A",156,0)
 ; >lower limit (no upper limit e.g. >10) - store as low value
"RTN","LA7VIN5A",157,0)
 I LA7X?1">".N.1".".N S $P(X,"!",2)=$TR(LA7X,">",""),LA7X=""
"RTN","LA7VIN5A",158,0)
 ;
"RTN","LA7VIN5A",159,0)
 ; <upper limit (no lower limit e.g. <15) - store as high value
"RTN","LA7VIN5A",160,0)
 I LA7X?1"<".N.1".".N S $P(X,"!",3)=$TR(LA7X,"<",""),LA7X=""
"RTN","LA7VIN5A",161,0)
 ;
"RTN","LA7VIN5A",162,0)
 ; Alphabetic reference with hyphen
"RTN","LA7VIN5A",163,0)
 I LA7X?1.A1"-"1.A S $P(X,"!",2)=$C(34)_LA7X_$C(34),LA7X=""
"RTN","LA7VIN5A",164,0)
 ;
"RTN","LA7VIN5A",165,0)
 ; Lower limit value
"RTN","LA7VIN5A",166,0)
 S Y=$P(LA7X,"-")
"RTN","LA7VIN5A",167,0)
 I Y'="" D
"RTN","LA7VIN5A",168,0)
 . I Y?.N.1".".N S $P(X,"!",2)=Y
"RTN","LA7VIN5A",169,0)
 . E  S $P(X,"!",2)=$C(34)_$$UNESC^LA7VHLU3(Y,LA7FS_LA7ECH)_$C(34)
"RTN","LA7VIN5A",170,0)
 ;
"RTN","LA7VIN5A",171,0)
 ; Upper limit value
"RTN","LA7VIN5A",172,0)
 S Y=$P(LA7X,"-",2)
"RTN","LA7VIN5A",173,0)
 I Y'="" D
"RTN","LA7VIN5A",174,0)
 . I Y?.N.1".".N S $P(X,"!",3)=Y
"RTN","LA7VIN5A",175,0)
 . E  S $P(X,"!",3)=$C(34)_$$UNESC^LA7VHLU3(Y,LA7FS_LA7ECH)_$C(34)
"RTN","LA7VIN5A",176,0)
 ;
"RTN","LA7VIN5A",177,0)
 ; Store reference range in LAH global with results.
"RTN","LA7VIN5A",178,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5A",179,0)
 ;
"RTN","LA7VIN5A",180,0)
 Q
"RTN","LA7VIN5A",181,0)
 ;
"RTN","LA7VIN5A",182,0)
 ;
"RTN","LA7VIN5A",183,0)
ABFLAG(LA7X) ; Process/Store Abnormal Flags.
"RTN","LA7VIN5A",184,0)
 ; Call with LA7X = abnormal flags to store.
"RTN","LA7VIN5A",185,0)
 ; Converts flag to interpretation based on HL7 Table 0078.
"RTN","LA7VIN5A",186,0)
 ; If no match store code instead of interpretation
"RTN","LA7VIN5A",187,0)
 ;
"RTN","LA7VIN5A",188,0)
 Q:LA7INTYP=1
"RTN","LA7VIN5A",189,0)
 N I,LA7I,LA7Y,X
"RTN","LA7VIN5A",190,0)
 ;
"RTN","LA7VIN5A",191,0)
 ; Store abnormal flags in LAH global with results.
"RTN","LA7VIN5A",192,0)
 ; Currently only storing high/low and critical flags
"RTN","LA7VIN5A",193,0)
 S LA7Y=$S(LA7X="L":"L",LA7X="H":"H",LA7X="LL":"L*",LA7X="HH":"H*",1:"")
"RTN","LA7VIN5A",194,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",2)=LA7Y
"RTN","LA7VIN5A",195,0)
 ;
"RTN","LA7VIN5A",196,0)
 ; Critical or designated abnormal tests generate bulletin/alert on LEDI (type=10) interfaces.
"RTN","LA7VIN5A",197,0)
 I LA7INTYP=10,LA7Y'="" D
"RTN","LA7VIN5A",198,0)
 . I $E(LA7Y,2)'="*",'$P(LA76241(2),"^",11) Q
"RTN","LA7VIN5A",199,0)
 . S LA7I=$O(^TMP("LA7 ABNORMAL RESULTS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5A",200,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN5A",201,0)
 . S ^TMP("LA7 ABNORMAL RESULTS",$J,LA7I)=X
"RTN","LA7VIN5A",202,0)
 ;
"RTN","LA7VIN5A",203,0)
 ; If LEDI/POC interface and abnormal flag is not handled by VistA above then store as comment.
"RTN","LA7VIN5A",204,0)
 I LA7INTYP>9,LA7INTYP<30,LA7Y="",LA7X'="",LA7X'="N" D
"RTN","LA7VIN5A",205,0)
 . S X=" L^ H^LL^HH^ <^ >^ N^ A^AA^ U^ D^ B^ W^ S^ R^ I^MS^VS"
"RTN","LA7VIN5A",206,0)
 . S I=$F(X,LA7X)\3
"RTN","LA7VIN5A",207,0)
 . S LA7Y="normalcy status - "_$P($T(ABFLAGS+I^LA7VHLU1),";;",2)
"RTN","LA7VIN5A",208,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7Y,$P(LA7RMK(0,+LA76241(0)),"^",2))
"RTN","LA7VIN5A",209,0)
 ;
"RTN","LA7VIN5A",210,0)
 Q
"RTN","LA7VIN5A",211,0)
 ;
"RTN","LA7VIN5A",212,0)
 ;
"RTN","LA7VIN5A",213,0)
EII ; Store equipment instance identifier in LAH global with results.
"RTN","LA7VIN5A",214,0)
 ;
"RTN","LA7VIN5A",215,0)
 N I,LA7X,X
"RTN","LA7VIN5A",216,0)
 ;
"RTN","LA7VIN5A",217,0)
 S LA7X=""
"RTN","LA7VIN5A",218,0)
 F I=1:1:4 D
"RTN","LA7VIN5A",219,0)
 . S X=$P(LA7EII,LA7CS,I)
"RTN","LA7VIN5A",220,0)
 . I X="" Q
"RTN","LA7VIN5A",221,0)
 . S $P(LA7X,"!",I)=$TR(X,"!","~")
"RTN","LA7VIN5A",222,0)
 I LA7X'="" S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",11)=LA7X
"RTN","LA7VIN5A",223,0)
 Q
"RTN","LA7VIN5B")
0^80^B39713645
"RTN","LA7VIN5B",1,0)
LA7VIN5B ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  16:09
"RTN","LA7VIN5B",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN5B",3,0)
 ;
"RTN","LA7VIN5B",4,0)
 ; This routine is a continuation of LA7VIN5.
"RTN","LA7VIN5B",5,0)
 ;
"RTN","LA7VIN5B",6,0)
 Q
"RTN","LA7VIN5B",7,0)
 ;
"RTN","LA7VIN5B",8,0)
 ;
"RTN","LA7VIN5B",9,0)
ORESULTS ; Process results that accompany order (ORM) messages
"RTN","LA7VIN5B",10,0)
 ;
"RTN","LA7VIN5B",11,0)
 N I,LA74,LA764,LA7DIE,LA7ERR,LA7I,LA7WP,LA7X,LA7Y,X,Y
"RTN","LA7VIN5B",12,0)
 ;
"RTN","LA7VIN5B",13,0)
 ; Identify producing laboratory
"RTN","LA7VIN5B",14,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,24,LA7FS),LA74=""
"RTN","LA7VIN5B",15,0)
 I $P(LA7X,LA7CS,6)="CLIA" S LA74=$$IDX^XUAF4("CLIA",$P(LA7X,LA7CS,10))
"RTN","LA7VIN5B",16,0)
 I 'LA74 S LA74=$$RESFID^LA7VHLU2($$P^LA7VHLU(.LA7SEG,16,LA7FS),LA7SFAC,LA7CS)
"RTN","LA7VIN5B",17,0)
 ;
"RTN","LA7VIN5B",18,0)
 ; Special handling of AP specimen codes in OBX segment.
"RTN","LA7VIN5B",19,0)
 I LA7TEST(0,1)="LN",LA7TEST="22633-2" D APSPEC Q
"RTN","LA7VIN5B",20,0)
 ;
"RTN","LA7VIN5B",21,0)
 ; Special handling of AP specimen codes in OBX segment used by DoD CHCS
"RTN","LA7VIN5B",22,0)
 I LA7TEST(0,1)="AS4",LA7TEST="5000.12" D APSPEC Q
"RTN","LA7VIN5B",23,0)
 I LA7TEST(0,1)="99LAB",LA7TEST="TOP" D APSPEC Q
"RTN","LA7VIN5B",24,0)
 ;
"RTN","LA7VIN5B",25,0)
 ; Special handling of AP data in OBX segments
"RTN","LA7VIN5B",26,0)
 I LA7TEST(0,1)="LN","10215-2^10218-6^10219-4^22634-0^22635-7^22636-5^22637-3^22639-9^"[LA7TEST D APDATA Q
"RTN","LA7VIN5B",27,0)
 ;
"RTN","LA7VIN5B",28,0)
 ; Special handling of frozen section AP data used by VistA.
"RTN","LA7VIN5B",29,0)
 I LA7TEST(0,1)="99VA64",LA7TEST="88569.0000" D APDATA Q
"RTN","LA7VIN5B",30,0)
 ;
"RTN","LA7VIN5B",31,0)
 ; Special handling of AP data in OBX segments used by DoD CHCS.
"RTN","LA7VIN5B",32,0)
 I LA7TEST(0,1)="AS4","5000.3^5000.4^5000.10^"[LA7TEST D APDATA Q
"RTN","LA7VIN5B",33,0)
 ;
"RTN","LA7VIN5B",34,0)
 S LA7I=2,X=""
"RTN","LA7VIN5B",35,0)
 ;
"RTN","LA7VIN5B",36,0)
 I LA7RLNC D
"RTN","LA7VIN5B",37,0)
 . S X="[LOINC "_$$GET1^DIQ(95.3,LA7RLNC_",",.01)_"] "
"RTN","LA7VIN5B",38,0)
 . S Y=$$GET1^DIQ(95.3,LA7RLNC_",",81)
"RTN","LA7VIN5B",39,0)
 . I Y="" S Y=$$GET1^DIQ(95.3,LA7RLNC_",",80)
"RTN","LA7VIN5B",40,0)
 . S X=X_Y
"RTN","LA7VIN5B",41,0)
 I 'LA7RLNC,LA7RNLT D
"RTN","LA7VIN5B",42,0)
 . S LA764=$$FIND1^DIC(64,"","X",LA7RNLT,"E","","LA7ERR")
"RTN","LA7VIN5B",43,0)
 . I 'LA764 S LA7RNLT="" Q
"RTN","LA7VIN5B",44,0)
 . S X="[NLT "_$$GET1^DIQ(64,LA764_",",1)_"] "_$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VIN5B",45,0)
 I 'LA7RLNC,'LA7RNLT D
"RTN","LA7VIN5B",46,0)
 . I LA7TEST(0)]""!(LA7TEST]"") S X="["_LA7TEST(0,1)_" "_LA7TEST_"] "_LA7TEST(0) Q
"RTN","LA7VIN5B",47,0)
 . S X="["_LA7TEST(2,1)_" "_LA7TEST(2)_"] "_LA7TEST(2,0)
"RTN","LA7VIN5B",48,0)
 ;
"RTN","LA7VIN5B",49,0)
 S LA7WP(LA7I,0)="Test result: "_X
"RTN","LA7VIN5B",50,0)
 ;
"RTN","LA7VIN5B",51,0)
 ; Date value
"RTN","LA7VIN5B",52,0)
 I LA7VTYP?1(1"DT",1"TS") D
"RTN","LA7VIN5B",53,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5B",54,0)
 . S LA7X=$$HL7TFM^XLFDT(LA7X,"L")
"RTN","LA7VIN5B",55,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test value: "_LA7X
"RTN","LA7VIN5B",56,0)
 ;
"RTN","LA7VIN5B",57,0)
 ; Coded entry
"RTN","LA7VIN5B",58,0)
 I LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN5B",59,0)
 . S LA7X=$P($$P^LA7VHLU(.LA7SEG,6,LA7FS),LA7CS,2)
"RTN","LA7VIN5B",60,0)
 . S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN5B",61,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test value: "_LA7X_$S(LA7UNITS'="":" "_LA7UNITS,1:"")
"RTN","LA7VIN5B",62,0)
 ;
"RTN","LA7VIN5B",63,0)
 ; Numeric/ Structured Numeric value
"RTN","LA7VIN5B",64,0)
 I LA7VTYP?1(1"NM",1"SN") D
"RTN","LA7VIN5B",65,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5B",66,0)
 . S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN5B",67,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test value: "_LA7X_$S(LA7UNITS]"":" "_LA7UNITS,1:"")
"RTN","LA7VIN5B",68,0)
 ;
"RTN","LA7VIN5B",69,0)
 ; String Data/ Formatted Text/ Text Data
"RTN","LA7VIN5B",70,0)
 I LA7VTYP?1(1"ST",1"FT",1"TX") D
"RTN","LA7VIN5B",71,0)
 . D PA^LA7VHLU(.LA7SEG,6,LA7FS,.LA7X)
"RTN","LA7VIN5B",72,0)
 . D UNESCFT^LA7VHLU3(.LA7X,LA7FS_LA7ECH,.LA7Y)
"RTN","LA7VIN5B",73,0)
 . I LA7Y=1,(($L(LA7Y(1,0))+$L(LA7UNITS))<225) S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test value: "_LA7Y(1,0)_$S(LA7UNITS]"":" "_LA7UNITS,1:"") Q
"RTN","LA7VIN5B",74,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test value:"
"RTN","LA7VIN5B",75,0)
 . F I=1:1:LA7Y S LA7I=LA7I+1,LA7WP(LA7I,0)=LA7Y(I,0)
"RTN","LA7VIN5B",76,0)
 . I LA7UNITS'="" S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test units: "_LA7UNITS
"RTN","LA7VIN5B",77,0)
 ;
"RTN","LA7VIN5B",78,0)
 ; Normals/ Reference range
"RTN","LA7VIN5B",79,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,8,LA7FS)
"RTN","LA7VIN5B",80,0)
 I LA7X'="" S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test normals: "_LA7X
"RTN","LA7VIN5B",81,0)
 ;
"RTN","LA7VIN5B",82,0)
 ; Normalcy status
"RTN","LA7VIN5B",83,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN5B",84,0)
 I LA7X'="" D
"RTN","LA7VIN5B",85,0)
 . S X=" L^ H^LL^HH^ <^ >^ N^ A^AA^ U^ D^ B^ W^ S^ R^ I^MS^VS"
"RTN","LA7VIN5B",86,0)
 . S I=$F(X,LA7X)\3,LA7X=$P($T(ABFLAGS+I^LA7VHLU1),";;",2)
"RTN","LA7VIN5B",87,0)
 . I LA7X'="" S LA7I=LA7I+1,LA7WP(LA7I,0)=" Test normalcy status: "_LA7X
"RTN","LA7VIN5B",88,0)
 ;
"RTN","LA7VIN5B",89,0)
 I $D(LA7WP) S LA7WP(1,0)=" " D WP^DIE(69.6,LA7696_",",99,"A","LA7WP","LA7DIE(99)")
"RTN","LA7VIN5B",90,0)
 Q
"RTN","LA7VIN5B",91,0)
 ;
"RTN","LA7VIN5B",92,0)
 ;
"RTN","LA7VIN5B",93,0)
APSPEC ; Process anatomic pathology specimens that accompany order (ORM) messages
"RTN","LA7VIN5B",94,0)
 ;
"RTN","LA7VIN5B",95,0)
 N I,FDA,LA761,LA762,LA76961,LA7ALTXT,LA7DIE,LA7IEN,LA7TXT,LA7VAL,LA7X,LA7Y
"RTN","LA7VIN5B",96,0)
 ;
"RTN","LA7VIN5B",97,0)
 S (LA761,LA7ALTXT,LA7TXT)=""
"RTN","LA7VIN5B",98,0)
 S LA7VAL=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5B",99,0)
 ;
"RTN","LA7VIN5B",100,0)
 ; Coded entry
"RTN","LA7VIN5B",101,0)
 I LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN5B",102,0)
 . D FLD2ARR^LA7VHLU7(.LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VIN5B",103,0)
 . F I=1,4 D
"RTN","LA7VIN5B",104,0)
 . . I $G(LA7VAL(I+2))="SCT" D  Q
"RTN","LA7VIN5B",105,0)
 . . . N LA7HL7
"RTN","LA7VIN5B",106,0)
 . . . S LA7HL7("FSEC")=LA7FS_LA7ECH
"RTN","LA7VIN5B",107,0)
 . . . S LA7HL7("OBX",3)=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN5B",108,0)
 . . . S LA7HL7("OBX",5)=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5B",109,0)
 . . . S LA761=$$SCT2IEN^LA7VHLU6(LA7VAL(I),LA7VAL(I+1),$G(LA7VAL($S(I=1:7,1:8))),61,0,LA76248)
"RTN","LA7VIN5B",110,0)
 . . . I 'LA761 S LA761=+$$EN^LRSCTX(61,LA7VAL(I+1),LA7VAL(I),.LA7HL7)
"RTN","LA7VIN5B",111,0)
 . . . S LA7ALTXT=LA7VAL(I+1)
"RTN","LA7VIN5B",112,0)
 . . I $G(LA7VAL(I+2))="",$G(LA7VAL(I+1))'="" S LA7TXT=LA7VAL(I+1)
"RTN","LA7VIN5B",113,0)
 ;
"RTN","LA7VIN5B",114,0)
 I LA7VTYP?1(1"ST",1"FT",1"TX") S LA7TXT=$$UNESC^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VIN5B",115,0)
 ;
"RTN","LA7VIN5B",116,0)
 ; Handle OBX-3 with LOINC code
"RTN","LA7VIN5B",117,0)
 I LA7TEST(0,1)="LN",LA7TEST="22633-2" D
"RTN","LA7VIN5B",118,0)
 . I LA7TXT="",LA7ALTXT="" Q
"RTN","LA7VIN5B",119,0)
 . S FDA(1,69.6061,"+2,"_LA7696_",",.01)=$S(LA7TXT'="":LA7TXT,1:LA7ALTXT)
"RTN","LA7VIN5B",120,0)
 . I LA761 S FDA(1,69.6061,"+2,"_LA7696_",",.02)=LA761
"RTN","LA7VIN5B",121,0)
 ;
"RTN","LA7VIN5B",122,0)
 ; Handle OBX-3 with old AS4 code from HL7 standard - used by DoD CHCS
"RTN","LA7VIN5B",123,0)
 I LA7TEST(0,1)="AS4",LA7TEST="5000.12",LA7TXT'="" S FDA(1,69.6061,"+2,"_LA7696_",",.01)=LA7TXT
"RTN","LA7VIN5B",124,0)
 ;
"RTN","LA7VIN5B",125,0)
 ; Handle OBX-3 with 99LAB - used by DoD CHCS
"RTN","LA7VIN5B",126,0)
 I LA7TEST(0,1)="99LAB",LA7TEST="TOP" D
"RTN","LA7VIN5B",127,0)
 . N LA7HL7
"RTN","LA7VIN5B",128,0)
 . S LA7HL7("FSEC")=LA7FS_LA7ECH
"RTN","LA7VIN5B",129,0)
 . S LA7HL7("OBX",3)=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN5B",130,0)
 . S LA7HL7("OBX",5)=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5B",131,0)
 . I LA7VTYP?1(1"ST",1"FT",1"TX"),LA7TXT'="" S FDA(1,69.6061,"+2,"_LA7696_",",.01)=LA7TXT Q
"RTN","LA7VIN5B",132,0)
 . S LA761=+$$EN^LRSCTX(61,LA7VAL,"",.LA7HL7)
"RTN","LA7VIN5B",133,0)
 . S LA7IEN=$O(^LRO(69.6,LA7696,61," "),-1)
"RTN","LA7VIN5B",134,0)
 . I LA7IEN,LA761 S FDA(2,69.6061,LA7IEN_","_LA7696_",",.02)=LA761
"RTN","LA7VIN5B",135,0)
 ;
"RTN","LA7VIN5B",136,0)
 ; File the data in the respective fields.
"RTN","LA7VIN5B",137,0)
 I $D(FDA(1)) D
"RTN","LA7VIN5B",138,0)
 . S LA762=$P(^LRO(69.6,LA7696,0),"^",8)
"RTN","LA7VIN5B",139,0)
 . I LA762 S FDA(1,69.6061,"+2,"_LA7696_",",.03)=LA762
"RTN","LA7VIN5B",140,0)
 . D UPDATE^DIE("","FDA(1)","LA76961","LA7DIE(1)")
"RTN","LA7VIN5B",141,0)
 I $D(FDA(2)) D FILE^DIE("","FDA(2)","LA7DIE(2)")
"RTN","LA7VIN5B",142,0)
 ;
"RTN","LA7VIN5B",143,0)
 Q
"RTN","LA7VIN5B",144,0)
 ;
"RTN","LA7VIN5B",145,0)
 ;
"RTN","LA7VIN5B",146,0)
APDATA ; Process anatomic pathology information that accompany order (ORM) messages
"RTN","LA7VIN5B",147,0)
 ;
"RTN","LA7VIN5B",148,0)
 N I,FDA,LA769063,LA7DIE,LA7ERR,LA7I,LA7WP,LA7X,LA7Y,TYPE,X,Y
"RTN","LA7VIN5B",149,0)
 ;
"RTN","LA7VIN5B",150,0)
 S TYPE=0
"RTN","LA7VIN5B",151,0)
 ;
"RTN","LA7VIN5B",152,0)
 I LA7TEST(0,1)="LN" D
"RTN","LA7VIN5B",153,0)
 . I LA7TEST="22636-5" S TYPE=.013 Q
"RTN","LA7VIN5B",154,0)
 . I LA7TEST="10219-4" S TYPE=.014 Q
"RTN","LA7VIN5B",155,0)
 . I LA7TEST="10215-2" S TYPE=.015 Q
"RTN","LA7VIN5B",156,0)
 . I LA7TEST="10218-6" S TYPE=.016 Q
"RTN","LA7VIN5B",157,0)
 . I LA7TEST="22634-0" S TYPE=1 Q
"RTN","LA7VIN5B",158,0)
 . I LA7TEST="22635-7" D  Q
"RTN","LA7VIN5B",159,0)
 . . I LA7TEST(2,1)="99VA64",LA7TEST(2)="88569.0000" S TYPE=1.3 Q
"RTN","LA7VIN5B",160,0)
 . . S TYPE=1.1
"RTN","LA7VIN5B",161,0)
 . I LA7TEST="22637-3" S TYPE=1.4 Q
"RTN","LA7VIN5B",162,0)
 . I LA7TEST="22639-9" S TYPE=1.2 Q
"RTN","LA7VIN5B",163,0)
 ;
"RTN","LA7VIN5B",164,0)
 I LA7TEST(0,1)="99VA64",LA7TEST="88569.0000" S TYPE=1.3
"RTN","LA7VIN5B",165,0)
 ;
"RTN","LA7VIN5B",166,0)
 I LA7TEST(0,1)="AS4" D
"RTN","LA7VIN5B",167,0)
 . I LA7TEST="5000.10" S TYPE=.013 Q
"RTN","LA7VIN5B",168,0)
 . I LA7TEST="5000.3" S TYPE=.014 Q
"RTN","LA7VIN5B",169,0)
 . I LA7TEST="5000.4" S TYPE=.016 Q
"RTN","LA7VIN5B",170,0)
 ;
"RTN","LA7VIN5B",171,0)
 I LA7TEST(0,1)="99LAB",LA7TEST="FRZ" S TYPE=1.3
"RTN","LA7VIN5B",172,0)
 ;
"RTN","LA7VIN5B",173,0)
 ; String Data/ Formatted Text/ Text Data
"RTN","LA7VIN5B",174,0)
 I LA7VTYP?1(1"ST",1"FT",1"TX") D
"RTN","LA7VIN5B",175,0)
 . D PA^LA7VHLU(.LA7SEG,6,LA7FS,.LA7X)
"RTN","LA7VIN5B",176,0)
 . D UNESCFT^LA7VHLU3(.LA7X,LA7FS_LA7ECH,.LA7WP)
"RTN","LA7VIN5B",177,0)
 ;
"RTN","LA7VIN5B",178,0)
 ; File the data in the respective fields.
"RTN","LA7VIN5B",179,0)
 I TYPE,$D(LA7WP) D
"RTN","LA7VIN5B",180,0)
 . S FDA(1,69.6063,"?+1,"_LA7696_",",.01)=TYPE
"RTN","LA7VIN5B",181,0)
 . I LA74 S FDA(1,69.6063,"?+1,"_LA7696_",",.02)=LA74
"RTN","LA7VIN5B",182,0)
 . D UPDATE^DIE("","FDA(1)","LA769063","LA7DIE(1)")
"RTN","LA7VIN5B",183,0)
 . D WP^DIE(69.6063,LA769063(1)_","_LA7696_",",1,"A","LA7WP","LA7DIE(2)")
"RTN","LA7VIN5B",184,0)
 ;
"RTN","LA7VIN5B",185,0)
 Q
"RTN","LA7VIN6")
0^33^B18944829
"RTN","LA7VIN6",1,0)
LA7VIN6 ;DALOI/JMC - PROCESS ORU OBX FOR AP ;11/18/11  14:01
"RTN","LA7VIN6",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN6",3,0)
 ;
"RTN","LA7VIN6",4,0)
 ; Continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN6",5,0)
 ; It is called to process OBX segments for AP subscript tests.
"RTN","LA7VIN6",6,0)
 ;
"RTN","LA7VIN6",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN6",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN6",9,0)
 ;
"RTN","LA7VIN6",10,0)
 Q
"RTN","LA7VIN6",11,0)
 ;
"RTN","LA7VIN6",12,0)
 ;
"RTN","LA7VIN6",13,0)
PROCESS ; File AP ^LAH for a given concept (LA76247)
"RTN","LA7VIN6",14,0)
 ;
"RTN","LA7VIN6",15,0)
 ;ZEXCEPT: DSOBX5,LA74,LA76247,LA76248,LA7CS,LA7ECH,LA7FS,LAPSUBID,OBX3,OBX4,OBX5
"RTN","LA7VIN6",16,0)
 ;
"RTN","LA7VIN6",17,0)
 N SUBID,PSUBID,LAX,CNCPTOR
"RTN","LA7VIN6",18,0)
 S SUBID=$G(OBX4)
"RTN","LA7VIN6",19,0)
 S SUBID=$$UNESC^LA7VHLU3(SUBID,LA7FS_LA7ECH)
"RTN","LA7VIN6",20,0)
 S SUBID=$$TRIM^XLFSTR(SUBID)
"RTN","LA7VIN6",21,0)
 S SUBID=$$MAKEISO^LRVRMI1(LA74,SUBID)
"RTN","LA7VIN6",22,0)
 S PSUBID=$$TRIM^XLFSTR($G(LAPSUBID))
"RTN","LA7VIN6",23,0)
 S PSUBID=$$MAKEISO^LRVRMI1(LA74,PSUBID)
"RTN","LA7VIN6",24,0)
 I SUBID="" S SUBID=PSUBID
"RTN","LA7VIN6",25,0)
 ;
"RTN","LA7VIN6",26,0)
 ; Need to override the concept?
"RTN","LA7VIN6",27,0)
 S CNCPTOR=0
"RTN","LA7VIN6",28,0)
 I OBX5[LA7CS,+DSOBX5=-1 D
"RTN","LA7VIN6",29,0)
 . S LAX=$P(DSOBX5,"^",5)
"RTN","LA7VIN6",30,0)
 . I LAX,LAX'=LA76247 S CNCPTOR=1,LA76247=LAX
"RTN","LA7VIN6",31,0)
 ;
"RTN","LA7VIN6",32,0)
 ; Override LOINC codes to handle fact that some generic codes can be applied to more than one storage location.
"RTN","LA7VIN6",33,0)
 ;
"RTN","LA7VIN6",34,0)
 ; Check if VA SP Frozen Section and use VA NLT to find concept - SP FROZEN SECTION and SP MICROSCOPIC DESCRIPTION use same LOINC code.
"RTN","LA7VIN6",35,0)
 I LA76247=56,$G(OBX3(6))="99VA64",$P(OBX3(4),".")="88569" D
"RTN","LA7VIN6",36,0)
 . N X
"RTN","LA7VIN6",37,0)
 . S X=$$HL2LAH^LA7VHLU6(OBX3(4),OBX3(5),OBX3(6),OBX3(8),LA76248,"SP")
"RTN","LA7VIN6",38,0)
 . I X>0 S LA76247=+X
"RTN","LA7VIN6",39,0)
 ;
"RTN","LA7VIN6",40,0)
 D SET(LA76247)
"RTN","LA7VIN6",41,0)
 Q
"RTN","LA7VIN6",42,0)
 ;
"RTN","LA7VIN6",43,0)
 ;
"RTN","LA7VIN6",44,0)
SET(R6247) ;
"RTN","LA7VIN6",45,0)
 ;
"RTN","LA7VIN6",46,0)
 ;ZEXCEPT: LA74,LA7ECH,LA7FS,LA7ISQN,LA7KILAH,LA7QUIT,LA7RLNC,LA7RNLT,LA7RO,LA7SS,LA7VTYP,LWL,OBX,OBX3,OBX5,OBX11
"RTN","LA7VIN6",47,0)
 ;
"RTN","LA7VIN6",48,0)
 N I,ISQN2,ISQN3,NODE,REC,RSZ,SUB,VAL,X,Y
"RTN","LA7VIN6",49,0)
 ;
"RTN","LA7VIN6",50,0)
 D SETSUB
"RTN","LA7VIN6",51,0)
 ;
"RTN","LA7VIN6",52,0)
 ; If SUB=-1 then something went wrong
"RTN","LA7VIN6",53,0)
 ; Error: No filing method found for OBX3
"RTN","LA7VIN6",54,0)
 I SUB<0 D  Q
"RTN","LA7VIN6",55,0)
 . N LA7VOBX3
"RTN","LA7VIN6",56,0)
 . S LA7VOBX3=OBX3
"RTN","LA7VIN6",57,0)
 . D CREATE^LA7LOG(202)
"RTN","LA7VIN6",58,0)
 . S LA7KILAH=1,LA7QUIT=2
"RTN","LA7VIN6",59,0)
 ;
"RTN","LA7VIN6",60,0)
 ;
"RTN","LA7VIN6",61,0)
 ; Need to develop logic to handle specimen multiple - JMC/13 Nov 2009.
"RTN","LA7VIN6",62,0)
 I SUB?1(1"50") Q
"RTN","LA7VIN6",63,0)
 ;
"RTN","LA7VIN6",64,0)
 S NODE=SUB
"RTN","LA7VIN6",65,0)
 ; WP subscript
"RTN","LA7VIN6",66,0)
 K ISQN3
"RTN","LA7VIN6",67,0)
 S (REC,ISQN2)=+$O(^LAH(LWL,1,LA7ISQN,LA7SS,SUB,"A"),-1)
"RTN","LA7VIN6",68,0)
 ;
"RTN","LA7VIN6",69,0)
 ; These reports store one more level in (need ISQN2 in NODE)
"RTN","LA7VIN6",70,0)
 I R6247?1(1"59",1"62",1"69",1"78") D
"RTN","LA7VIN6",71,0)
 . I ISQN2<1 S ISQN2=1
"RTN","LA7VIN6",72,0)
 . S NODE=NODE_","_ISQN2
"RTN","LA7VIN6",73,0)
 . S ISQN3=+$O(^LAH(LWL,1,LA7ISQN,LA7SS,SUB,ISQN2,1,"A"),-1)
"RTN","LA7VIN6",74,0)
 ;
"RTN","LA7VIN6",75,0)
 S NODE=NODE_",0"
"RTN","LA7VIN6",76,0)
 D LAH(NODE,1,LA74)
"RTN","LA7VIN6",77,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN6",78,0)
 D LAH(NODE,2,X)
"RTN","LA7VIN6",79,0)
 D LAH(NODE,3,LA7RLNC)
"RTN","LA7VIN6",80,0)
 D LAH(NODE,4,LA7RNLT)
"RTN","LA7VIN6",81,0)
 D LAH(NODE,5,OBX11)
"RTN","LA7VIN6",82,0)
 ;
"RTN","LA7VIN6",83,0)
 ; Suppl Rpt Release Date from OBR-22
"RTN","LA7VIN6",84,0)
 I R6247?1(1"59",1"62",1"69",1"78") D LAH(NODE,6,$G(LA7RSDT))
"RTN","LA7VIN6",85,0)
 ;
"RTN","LA7VIN6",86,0)
 ; file WP nodes
"RTN","LA7VIN6",87,0)
 I LA7VTYP="FT" D
"RTN","LA7VIN6",88,0)
 . K X,Y,VAL
"RTN","LA7VIN6",89,0)
 . S X(1)=OBX5
"RTN","LA7VIN6",90,0)
 . D UNESCFT^LA7VHLU3(.X,LA7FS_LA7ECH,.Y)
"RTN","LA7VIN6",91,0)
 . S X=""
"RTN","LA7VIN6",92,0)
 . F  S X=$O(Y(X)) Q:'X  D  ;
"RTN","LA7VIN6",93,0)
 . . D REPT2ARR^LA7VHLU7(Y(X,0),LA7FS_LA7ECH,.VAL)
"RTN","LA7VIN6",94,0)
 . ;
"RTN","LA7VIN6",95,0)
 ;
"RTN","LA7VIN6",96,0)
 I LA7VTYP'="FT" D
"RTN","LA7VIN6",97,0)
 . K VAL
"RTN","LA7VIN6",98,0)
 . D REPT2ARR^LA7VHLU7(OBX5,LA7FS_LA7ECH,.VAL)
"RTN","LA7VIN6",99,0)
 ; resize array so it fits on global node
"RTN","LA7VIN6",100,0)
 K RSZ
"RTN","LA7VIN6",101,0)
 D RSZARR(.VAL,.RSZ,245)
"RTN","LA7VIN6",102,0)
 K VAL
"RTN","LA7VIN6",103,0)
 S I=0
"RTN","LA7VIN6",104,0)
 I $D(ISQN3) S REC=ISQN3
"RTN","LA7VIN6",105,0)
 F  S I=$O(RSZ(I)) Q:'I  D
"RTN","LA7VIN6",106,0)
 . S REC=REC+1
"RTN","LA7VIN6",107,0)
 . ; need to reset NODE depending on levels needed
"RTN","LA7VIN6",108,0)
 . S NODE=SUB_","_REC_",0"
"RTN","LA7VIN6",109,0)
 . I "^59^62^69^78^"[("^"_R6247_"^") S NODE=SUB_","_ISQN2_",1,"_REC_",0"
"RTN","LA7VIN6",110,0)
 . D LAH(NODE,-1,RSZ(I))
"RTN","LA7VIN6",111,0)
 ;
"RTN","LA7VIN6",112,0)
 K RSZ
"RTN","LA7VIN6",113,0)
 D NTE
"RTN","LA7VIN6",114,0)
 Q
"RTN","LA7VIN6",115,0)
 ;
"RTN","LA7VIN6",116,0)
 ;
"RTN","LA7VIN6",117,0)
LAH(LANODE,LAP,LAVAL) ; Convenience method
"RTN","LA7VIN6",118,0)
 ;
"RTN","LA7VIN6",119,0)
 Q:LAVAL=""
"RTN","LA7VIN6",120,0)
 D LAH^LAGEN(+$G(LWL),+$G(LA7ISQN),LA7SS,LANODE,LAP,LAVAL)
"RTN","LA7VIN6",121,0)
 Q
"RTN","LA7VIN6",122,0)
 ;
"RTN","LA7VIN6",123,0)
 ;
"RTN","LA7VIN6",124,0)
NTE ; Convenience method
"RTN","LA7VIN6",125,0)
 ;
"RTN","LA7VIN6",126,0)
 ;ZEXCEPT: ISQN2,R6247
"RTN","LA7VIN6",127,0)
 D NTE^LA7VIN71(R6247,ISQN2)
"RTN","LA7VIN6",128,0)
 Q
"RTN","LA7VIN6",129,0)
 ;
"RTN","LA7VIN6",130,0)
 ;
"RTN","LA7VIN6",131,0)
RSZARR(IN,OUT,LEN) ; Resizes the values of an array
"RTN","LA7VIN6",132,0)
 ; ie resize string lengths to fit on global nodes
"RTN","LA7VIN6",133,0)
 N I,II,J,X
"RTN","LA7VIN6",134,0)
 S LEN=+$G(LEN)
"RTN","LA7VIN6",135,0)
 Q:LEN<1
"RTN","LA7VIN6",136,0)
 S (I,II)=0
"RTN","LA7VIN6",137,0)
 F  S I=$O(IN(I)) Q:'I  D
"RTN","LA7VIN6",138,0)
 . I $L(IN(I))'>LEN S II=II+1 S OUT(II)=IN(I) Q
"RTN","LA7VIN6",139,0)
 . S X=IN(I)
"RTN","LA7VIN6",140,0)
 . S II=$O(OUT("A"),-1)
"RTN","LA7VIN6",141,0)
 . F  Q:X=""  S II=II+1 S OUT(II)=$E(X,1,LEN) S X=$E(X,LEN+1,$L(X))
"RTN","LA7VIN6",142,0)
 Q
"RTN","LA7VIN6",143,0)
 ;
"RTN","LA7VIN6",144,0)
 ;
"RTN","LA7VIN6",145,0)
SETSUB ; Set SUB to subcript for this concept.
"RTN","LA7VIN6",146,0)
 ;
"RTN","LA7VIN6",147,0)
 ;ZEXCEPT: R6247,SUB
"RTN","LA7VIN6",148,0)
 S SUB=-1
"RTN","LA7VIN6",149,0)
 ;
"RTN","LA7VIN6",150,0)
 ; SP subscript
"RTN","LA7VIN6",151,0)
 I R6247=50 S SUB=.1 Q
"RTN","LA7VIN6",152,0)
 I R6247=51 S SUB=.2 Q
"RTN","LA7VIN6",153,0)
 I R6247=52 S SUB=.3 Q
"RTN","LA7VIN6",154,0)
 I R6247=53 S SUB=.4 Q
"RTN","LA7VIN6",155,0)
 I R6247=54 S SUB=.5 Q
"RTN","LA7VIN6",156,0)
 I R6247=55 S SUB=1 Q
"RTN","LA7VIN6",157,0)
 I R6247=56 S SUB=1.1 Q
"RTN","LA7VIN6",158,0)
 I R6247=57 S SUB=1.3 Q
"RTN","LA7VIN6",159,0)
 I R6247=58 S SUB=1.4 Q
"RTN","LA7VIN6",160,0)
 I R6247=59 S SUB=1.2 Q
"RTN","LA7VIN6",161,0)
 I R6247=62 S SUB=1.2 Q
"RTN","LA7VIN6",162,0)
 I R6247=80 S SUB=99 Q
"RTN","LA7VIN6",163,0)
 ;
"RTN","LA7VIN6",164,0)
 ; CY subscript
"RTN","LA7VIN6",165,0)
 I R6247=63 S SUB=.2 Q
"RTN","LA7VIN6",166,0)
 I R6247=64 S SUB=1 Q
"RTN","LA7VIN6",167,0)
 I R6247=65 S SUB=1.1 Q
"RTN","LA7VIN6",168,0)
 I R6247=66 S SUB=.4 Q
"RTN","LA7VIN6",169,0)
 I R6247=67 S SUB=.3 Q
"RTN","LA7VIN6",170,0)
 I R6247=68 S SUB=.5 Q
"RTN","LA7VIN6",171,0)
 I R6247=69 S SUB=1.2 Q
"RTN","LA7VIN6",172,0)
 I R6247=81 S SUB=99 Q
"RTN","LA7VIN6",173,0)
 I R6247=83 S SUB=1.4 Q
"RTN","LA7VIN6",174,0)
 ;
"RTN","LA7VIN6",175,0)
 ; EM subscript
"RTN","LA7VIN6",176,0)
 I R6247=71 S SUB=.2 Q
"RTN","LA7VIN6",177,0)
 I R6247=72 S SUB=1 Q
"RTN","LA7VIN6",178,0)
 I R6247=73 S SUB=1.1 Q
"RTN","LA7VIN6",179,0)
 I R6247=74 S SUB=.4 Q
"RTN","LA7VIN6",180,0)
 I R6247=75 S SUB=.5 Q
"RTN","LA7VIN6",181,0)
 I R6247=76 S SUB=.3 Q
"RTN","LA7VIN6",182,0)
 I R6247=78 S SUB=1.2 Q
"RTN","LA7VIN6",183,0)
 I R6247=82 S SUB=99 Q
"RTN","LA7VIN6",184,0)
 I R6247=84 S SUB=1.4 Q
"RTN","LA7VIN6",185,0)
 ;
"RTN","LA7VIN6",186,0)
 Q
"RTN","LA7VIN7")
0^32^B81438195
"RTN","LA7VIN7",1,0)
LA7VIN7 ;DALOI/JDB - HANDLE ORU OBX FOR MICRO/AP ;11/18/11  14:13
"RTN","LA7VIN7",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN7",3,0)
 ;
"RTN","LA7VIN7",4,0)
 ; Continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN7",5,0)
 ; Process OBX segments for "MI" subscript tests.
"RTN","LA7VIN7",6,0)
 Q
"RTN","LA7VIN7",7,0)
 ;
"RTN","LA7VIN7",8,0)
 ;
"RTN","LA7VIN7",9,0)
OBX ;
"RTN","LA7VIN7",10,0)
 ;
"RTN","LA7VIN7",11,0)
 N ALTCONC,CODSYS,DATA,DIERR,DSOBX3,DSOBX5,ISCOMP,OBX3,OBX4,OBX5,OBX6,OBX8,OBX11,OBX15
"RTN","LA7VIN7",12,0)
 N LA76247,LA7612,LA74,LA7RLNC,LA7RNLT,LA7SCT,LA7SUBFL,LA7VTYP,LAX,LAY
"RTN","LA7VIN7",13,0)
 ;
"RTN","LA7VIN7",14,0)
 ; Note: LA7OBR25 holds the OBR's report status (OBR-25)
"RTN","LA7VIN7",15,0)
 K LA7RMK,^TMP("LA7TREE",$J)
"RTN","LA7VIN7",16,0)
 ;
"RTN","LA7VIN7",17,0)
 ; OBX Set ID
"RTN","LA7VIN7",18,0)
 S LA7SOBX=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN7",19,0)
 ;
"RTN","LA7VIN7",20,0)
 ; Value type - type of data from Table 0125
"RTN","LA7VIN7",21,0)
 S LA7VTYP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VIN7",22,0)
 ;
"RTN","LA7VIN7",23,0)
 S OBX3=$$FIELD^LA7VHLU7(3)
"RTN","LA7VIN7",24,0)
 D FLD2ARR^LA7VHLU7(.OBX3)
"RTN","LA7VIN7",25,0)
 I $D(OBX3)>1 S ISCOMP("OBX3")=1
"RTN","LA7VIN7",26,0)
 ; step through code tuplets until we find one we can process
"RTN","LA7VIN7",27,0)
 S DSOBX3=$$DBSTORE^LA7VHLU7(.OBX3,1,,,LA76248,.DATA)
"RTN","LA7VIN7",28,0)
 ; check for LN and/or 99VA64 code systems
"RTN","LA7VIN7",29,0)
 K CODSYS D CODSYS^LA7VHLU7(.OBX3,.CODSYS)
"RTN","LA7VIN7",30,0)
 ; Result's LOINC code
"RTN","LA7VIN7",31,0)
 S LAX=+$O(CODSYS("B","LN",0))
"RTN","LA7VIN7",32,0)
 S LA7RLNC=""
"RTN","LA7VIN7",33,0)
 I LAX S LA7RLNC=OBX3(LAX-2) S LA7RLNC(1)=OBX3(LAX-1)
"RTN","LA7VIN7",34,0)
 ; Result's NLT code
"RTN","LA7VIN7",35,0)
 S LAX=+$O(CODSYS("B","99VA64",0))
"RTN","LA7VIN7",36,0)
 S LA7RNLT=""
"RTN","LA7VIN7",37,0)
 I LAX S LA7RNLT=OBX3(LAX-2) S LA7RNLT(1)=OBX3(LAX-1)
"RTN","LA7VIN7",38,0)
 K CODSYS
"RTN","LA7VIN7",39,0)
 ;
"RTN","LA7VIN7",40,0)
 ; OBX3 cannot be mapped. Stop processing.
"RTN","LA7VIN7",41,0)
 ; No File #62.47 mapping found for OBX-3
"RTN","LA7VIN7",42,0)
 I +DSOBX3'>0 D  Q  ;
"RTN","LA7VIN7",43,0)
 . N LA7OBX3
"RTN","LA7VIN7",44,0)
 . S LA7OBX3=OBX3 ;needed for log
"RTN","LA7VIN7",45,0)
 . S LA7OBX3=$$UNESC^LA7VHLU3(LA7OBX3,LA7FS_LA7ECH)
"RTN","LA7VIN7",46,0)
 . D CREATE^LA7LOG(200)
"RTN","LA7VIN7",47,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7",48,0)
 ;
"RTN","LA7VIN7",49,0)
 S LA76247=$P(DSOBX3,"^",1)
"RTN","LA7VIN7",50,0)
 ;
"RTN","LA7VIN7",51,0)
 ;
"RTN","LA7VIN7",52,0)
 S OBX4=$$FIELD^LA7VHLU7(4)
"RTN","LA7VIN7",53,0)
 S OBX5=$$FIELD^LA7VHLU7(5)
"RTN","LA7VIN7",54,0)
 I OBX5="" D CREATE^LA7LOG(17) Q
"RTN","LA7VIN7",55,0)
 ;
"RTN","LA7VIN7",56,0)
 S (DSOBX5,LA7SCT)="",LA7612=0
"RTN","LA7VIN7",57,0)
 ;
"RTN","LA7VIN7",58,0)
 ; String Data/ Formatted Text/ Text Data
"RTN","LA7VIN7",59,0)
 ;I LA7VTYP?1(1"FT",1"ST",1"TX") D
"RTN","LA7VIN7",60,0)
 ;I LA7VTYP="FT" D
"RTN","LA7VIN7",61,0)
 ;. K LAX
"RTN","LA7VIN7",62,0)
 ;. D PA^LA7VHLU(.LA7SEG,6,LA7FS,.LAX)
"RTN","LA7VIN7",63,0)
 ;. D UNESCFT^LA7VHLU3(.LAX,LA7FS_LA7ECH,.LA7WP)
"RTN","LA7VIN7",64,0)
 ;
"RTN","LA7VIN7",65,0)
 I LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN7",66,0)
 . D FLD2ARR^LA7VHLU7(.OBX5)
"RTN","LA7VIN7",67,0)
 . I $D(OBX5)>1 S ISCOMP("OBX5")=1
"RTN","LA7VIN7",68,0)
 . ; step through code tuplets until we find one we can process
"RTN","LA7VIN7",69,0)
 . K DATA
"RTN","LA7VIN7",70,0)
 . S DSOBX5=$$DBSTORE^LA7VHLU7(.OBX5,2,1,+LA76247,+$G(LA76248),.DATA)
"RTN","LA7VIN7",71,0)
 . K CODSYS
"RTN","LA7VIN7",72,0)
 . D CODSYS^LA7VHLU7(.OBX5,.CODSYS)
"RTN","LA7VIN7",73,0)
 . ; No Coding System found is an error
"RTN","LA7VIN7",74,0)
 . ; Prevent new File #61.2 entries created from bad OBX-5
"RTN","LA7VIN7",75,0)
 . I $O(CODSYS("B",0))="" D  Q  ;
"RTN","LA7VIN7",76,0)
 . . N LA7VOBX5
"RTN","LA7VIN7",77,0)
 . . S LA7VOBX5=OBX5
"RTN","LA7VIN7",78,0)
 . . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7",79,0)
 . . D CREATE^LA7LOG(203)
"RTN","LA7VIN7",80,0)
 . . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7",81,0)
 . ;
"RTN","LA7VIN7",82,0)
 . ; get SCT code if present
"RTN","LA7VIN7",83,0)
 . S LAX=$O(CODSYS("B","SCT",0)) I LAX S LA7SCT=$G(OBX5(LAX-2))
"RTN","LA7VIN7",84,0)
 . ;
"RTN","LA7VIN7",85,0)
 ;
"RTN","LA7VIN7",86,0)
 Q:$G(LA7QUIT)
"RTN","LA7VIN7",87,0)
 ;
"RTN","LA7VIN7",88,0)
 ; Need to check data storage type of DSOBX3 and compare to data in OBX-5.
"RTN","LA7VIN7",89,0)
 ; If OBX5 is a CE but DSOBX3 shows text (data type mismatch)
"RTN","LA7VIN7",90,0)
 ; then check if there's an ALTERNATIVE CONCEPT for LA76247
"RTN","LA7VIN7",91,0)
 S ALTCONC=$$ALCONCPT^LA7VHLU6(LA76247)
"RTN","LA7VIN7",92,0)
 I ALTCONC>0 I ALTCONC'=LA76247 D  ;
"RTN","LA7VIN7",93,0)
 . N R64061,SS,TLC,X,FILE,FLD,LAOUT,LAMSG,LADT1,LADT2
"RTN","LA7VIN7",94,0)
 . N DATAOK,X
"RTN","LA7VIN7",95,0)
 . S DATAOK=0
"RTN","LA7VIN7",96,0)
 . S FILE=$P(DSOBX3,"^",3)
"RTN","LA7VIN7",97,0)
 . S FLD=$P(DSOBX3,"^",4)
"RTN","LA7VIN7",98,0)
 . ; data type of current storage location
"RTN","LA7VIN7",99,0)
 . S LADT1=$$GET1^DID(FILE,FLD,"","TYPE","LAOUT","LAMSG")
"RTN","LA7VIN7",100,0)
 . I LADT1["POINTER",LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") Q
"RTN","LA7VIN7",101,0)
 . S DATAOK=0
"RTN","LA7VIN7",102,0)
 . I LADT1="SET" D  Q:DATAOK  ;
"RTN","LA7VIN7",103,0)
 . . ; 7,21 can be reported as CE/SCT which get translated to SET
"RTN","LA7VIN7",104,0)
 . . I "^7^21^"[("^"_LA76247_"^") S DATAOK=1 Q
"RTN","LA7VIN7",105,0)
 . . S DATAOK=$$DATAOK(FILE,FLD,OBX5)
"RTN","LA7VIN7",106,0)
 . ;
"RTN","LA7VIN7",107,0)
 . I LADT1'="SET",LADT1'["POINTER",LA7VTYP'?1(1"CE",1"CM",1"CNE",1"CWE") Q
"RTN","LA7VIN7",108,0)
 . Q:DATAOK
"RTN","LA7VIN7",109,0)
 . ; get alternate concept data
"RTN","LA7VIN7",110,0)
 . S X=$G(^LAB(62.47,ALTCONC,0))
"RTN","LA7VIN7",111,0)
 . S R64061=$P(X,U,3)
"RTN","LA7VIN7",112,0)
 . S SS=$P(X,U,2)
"RTN","LA7VIN7",113,0)
 . S X=$G(^LAB(64.061,R64061,63))
"RTN","LA7VIN7",114,0)
 . S FILE=$P(X,U,2)
"RTN","LA7VIN7",115,0)
 . S FLD=$P(X,U,3)
"RTN","LA7VIN7",116,0)
 . I 'FILE I 'FLD Q
"RTN","LA7VIN7",117,0)
 . S TLC=$P(X,U,4) ;SCT Top Level
"RTN","LA7VIN7",118,0)
 . S LADT2=$$GET1^DID(FILE,FLD,"","TYPE","LAOUT","LAMSG")
"RTN","LA7VIN7",119,0)
 . I LADT1=LADT2 Q
"RTN","LA7VIN7",120,0)
 . I LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN7",121,0)
 . . I LADT1["POINTER" Q
"RTN","LA7VIN7",122,0)
 . . S DSOBX3(1)=DSOBX3
"RTN","LA7VIN7",123,0)
 . . S DSOBX3=ALTCONC_"^"_SS_"^"_FILE_"^"_FLD_"^"_TLC
"RTN","LA7VIN7",124,0)
 . I LA7VTYP'?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN7",125,0)
 . . I LADT1'["POINTER" Q
"RTN","LA7VIN7",126,0)
 . . S DSOBX3(1)=DSOBX3
"RTN","LA7VIN7",127,0)
 . . S DSOBX3=ALTCONC_"^"_SS_"^"_FILE_"^"_FLD_"^"_TLC
"RTN","LA7VIN7",128,0)
 . ;
"RTN","LA7VIN7",129,0)
 ;
"RTN","LA7VIN7",130,0)
 ;
"RTN","LA7VIN7",131,0)
 I LA7VTYP?1(1"CE",1"CM",1"CNE",1"CWE") D
"RTN","LA7VIN7",132,0)
 . ; Do only if Concept (#62.47) is not a susceptibility concept (susc reported as SCT code)
"RTN","LA7VIN7",133,0)
 . ; Create new file entry if needed
"RTN","LA7VIN7",134,0)
 . I LA76247'=7,LA76247'=21,LA7SS="MI",(+DSOBX5<-1!(+DSOBX5=0)) D
"RTN","LA7VIN7",135,0)
 . . ; Stage Result may be reported as SCT code
"RTN","LA7VIN7",136,0)
 . . I LA76247=13 I LA7SCT'="" S X=$$SCT2PSTG^LA7VHLU6(LA7SCT,,"SCT") Q:X'=""
"RTN","LA7VIN7",137,0)
 . . ; add entry (add local code to #62.47 if needed?)
"RTN","LA7VIN7",138,0)
 . . ; If SCT was passed use that one, else use primary component
"RTN","LA7VIN7",139,0)
 . . N FILE,TXT,FLD,MSG
"RTN","LA7VIN7",140,0)
 . . S FILE=$P(DSOBX3,"^",3)
"RTN","LA7VIN7",141,0)
 . . S FLD=$P(DSOBX3,"^",4)
"RTN","LA7VIN7",142,0)
 . . S X=$$GET1^DID(FILE,FLD,"","TYPE","","MSG")
"RTN","LA7VIN7",143,0)
 . . I X'="POINTER" S FILE=""
"RTN","LA7VIN7",144,0)
 . . I X="POINTER" S FILE=$$GET1^DID(FILE,FLD,"","POINTER","","MSG")
"RTN","LA7VIN7",145,0)
 . . I FILE'="" D  ;
"RTN","LA7VIN7",146,0)
 . . . ; no API to convert global root [ie LAHM(62.48)] to file #
"RTN","LA7VIN7",147,0)
 . . . S FILE="^"_FILE
"RTN","LA7VIN7",148,0)
 . . . S FILE=$$TRIM^XLFSTR(FILE,"R",",")
"RTN","LA7VIN7",149,0)
 . . . I $P(FILE,"(",2)'="" S FILE=FILE_"," ;^XX( or ^XX(nn
"RTN","LA7VIN7",150,0)
 . . . S FILE=FILE_"0)"
"RTN","LA7VIN7",151,0)
 . . . I FILE'="" S FILE=$G(@FILE)
"RTN","LA7VIN7",152,0)
 . . . S FILE=+$P(FILE,U,2)
"RTN","LA7VIN7",153,0)
 . . ;
"RTN","LA7VIN7",154,0)
 . . N LAHLSEGS,LA74,SCTINOBX
"RTN","LA7VIN7",155,0)
 . . S SCTINOBX=0
"RTN","LA7VIN7",156,0)
 . . ;S TXT=OBX5(2)
"RTN","LA7VIN7",157,0)
 . . I LA7SCT'="" D  ;
"RTN","LA7VIN7",158,0)
 . . . S LAX=$O(CODSYS("B","SCT",0))
"RTN","LA7VIN7",159,0)
 . . . I LAX S SCTINOBX=LAX
"RTN","LA7VIN7",160,0)
 . . . ;S TXT=OBX5(LAX-1)
"RTN","LA7VIN7",161,0)
 . . ;S TXT=$$UNESC^LA7VHLU3(TXT,LA7FS_LA7ECH)
"RTN","LA7VIN7",162,0)
 . . S LA74=$$LKUP^XUAF4(LA7SFAC)
"RTN","LA7VIN7",163,0)
 . . S LAHLSEGS("R4")=LA74
"RTN","LA7VIN7",164,0)
 . . S LAHLSEGS("R6247")=$G(LA76247)
"RTN","LA7VIN7",165,0)
 . . S LAHLSEGS("FSEC")=LA7FS_LA7ECH
"RTN","LA7VIN7",166,0)
 . . S LAHLSEGS("MSH",3)=LA7SAP
"RTN","LA7VIN7",167,0)
 . . S LAHLSEGS("MSH",4)=LA7SFAC
"RTN","LA7VIN7",168,0)
 . . S LAHLSEGS("MSH",5)=LA7RAP
"RTN","LA7VIN7",169,0)
 . . S LAHLSEGS("MSH",6)=LA7RFAC
"RTN","LA7VIN7",170,0)
 . . S LAHLSEGS("MSH",11)=$G(LA7MID)
"RTN","LA7VIN7",171,0)
 . . S LAHLSEGS("OBX",3)=OBX3
"RTN","LA7VIN7",172,0)
 . . S LAHLSEGS("OBX",5)=OBX5
"RTN","LA7VIN7",173,0)
 . . ; ? Should we try SCT first no matter which codeset it is?
"RTN","LA7VIN7",174,0)
 . . ; try primary codeset first
"RTN","LA7VIN7",175,0)
 . . S TXT=$G(OBX5(2))
"RTN","LA7VIN7",176,0)
 . . S TXT=$$UNESC^LA7VHLU3(TXT,LA7FS_LA7ECH)
"RTN","LA7VIN7",177,0)
 . . S X=$S(SCTINOBX=3:LA7SCT,1:"") ;SCT in 1st component?
"RTN","LA7VIN7",178,0)
 . . S X=$$EN^LRSCTX(FILE,TXT,X,.LAHLSEGS,,1)
"RTN","LA7VIN7",179,0)
 . . ; try secondary codeset
"RTN","LA7VIN7",180,0)
 . . I X'>0 D  ;
"RTN","LA7VIN7",181,0)
 . . . S TXT=$G(OBX5(5))
"RTN","LA7VIN7",182,0)
 . . . S TXT=$$UNESC^LA7VHLU3(TXT,LA7FS_LA7ECH)
"RTN","LA7VIN7",183,0)
 . . . I TXT="" S X=0 Q
"RTN","LA7VIN7",184,0)
 . . . S X=$S(SCTINOBX=6:LA7SCT,1:"") ;SCT in 2nd component?
"RTN","LA7VIN7",185,0)
 . . . S X=$$EN^LRSCTX(FILE,TXT,X,.LAHLSEGS,,1)
"RTN","LA7VIN7",186,0)
 . . ; no matches so add new entry using codeset 1
"RTN","LA7VIN7",187,0)
 . . I X'>0 D  ;
"RTN","LA7VIN7",188,0)
 . . . S TXT=$G(OBX5(2))
"RTN","LA7VIN7",189,0)
 . . . S TXT=$$UNESC^LA7VHLU3(TXT,LA7FS_LA7ECH)
"RTN","LA7VIN7",190,0)
 . . . S X=$S(SCTINOBX=3:LA7SCT,1:"")
"RTN","LA7VIN7",191,0)
 . . . S X=$$EN^LRSCTX(FILE,TXT,X,.LAHLSEGS)
"RTN","LA7VIN7",192,0)
 . . I X'>0 D  Q  ; create error log:  Could not create new entry in file
"RTN","LA7VIN7",193,0)
 . . . N LA7STR,LRFILE,LRINFO
"RTN","LA7VIN7",194,0)
 . . . S LA7STR("^")="~U~",LRFILE=FILE,LRINFO="for OBX sequence "_LA7SOBX_" OBX(5) data: "_$$REPLACE^XLFSTR(OBX5,.LA7STR)
"RTN","LA7VIN7",195,0)
 . . . D CREATE^LA7LOG(206)
"RTN","LA7VIN7",196,0)
 . . . S LA7KILAH=1,LA7QUIT=2
"RTN","LA7VIN7",197,0)
 . . . ;
"RTN","LA7VIN7",198,0)
 . . I FILE=61.2 S LA7612=+X
"RTN","LA7VIN7",199,0)
 . . K DATA,LAHLSEGS
"RTN","LA7VIN7",200,0)
 . . S DSOBX5=$$DBSTORE^LA7VHLU7(.OBX5,2,1,+LA76247,+$G(LA76248),.DATA)
"RTN","LA7VIN7",201,0)
 . . K DATA
"RTN","LA7VIN7",202,0)
 . S LAX=OBX5 K OBX5 S OBX5=LAX ;delete OBX5 array but keep OBX5
"RTN","LA7VIN7",203,0)
 . K CODSYS
"RTN","LA7VIN7",204,0)
 ;
"RTN","LA7VIN7",205,0)
 Q:$G(LA7QUIT)
"RTN","LA7VIN7",206,0)
 ;
"RTN","LA7VIN7",207,0)
 ;
"RTN","LA7VIN7",208,0)
 S OBX6=$$FIELD^LA7VHLU7(6)
"RTN","LA7VIN7",209,0)
 S OBX8=$$FIELD^LA7VHLU7(8)
"RTN","LA7VIN7",210,0)
 ;
"RTN","LA7VIN7",211,0)
 ; Observation result status - Table 0085
"RTN","LA7VIN7",212,0)
 S OBX11=$$FIELD^LA7VHLU7(11)
"RTN","LA7VIN7",213,0)
 ;
"RTN","LA7VIN7",214,0)
 ; Producer's ID
"RTN","LA7VIN7",215,0)
 S OBX15=$$FIELD^LA7VHLU7(15)
"RTN","LA7VIN7",216,0)
 S (LA74,LA7PRODID)=$$RESFID^LA7VHLU2(OBX15,LA7SFAC,LA7CS)
"RTN","LA7VIN7",217,0)
 ;
"RTN","LA7VIN7",218,0)
 ; Responsible Observer
"RTN","LA7VIN7",219,0)
 S LA7RO=$$XCNTFM^LA7VHLU9($$FIELD^LA7VHLU7(16),LA7ECH)
"RTN","LA7VIN7",220,0)
 S LA7SUBFL=""
"RTN","LA7VIN7",221,0)
 ;
"RTN","LA7VIN7",222,0)
 ; Process MI or AP subscripts
"RTN","LA7VIN7",223,0)
 I $G(LA7SS)'="" D
"RTN","LA7VIN7",224,0)
 . I LA7SS="MI" D  Q
"RTN","LA7VIN7",225,0)
 . . D PROCESS^LA7VIN71
"RTN","LA7VIN7",226,0)
 . . S LA7SUBFL=63.05
"RTN","LA7VIN7",227,0)
 . I LA7SS?1(1"SP",1"CY",1"EM") D  Q
"RTN","LA7VIN7",228,0)
 . . D PROCESS^LA7VIN6
"RTN","LA7VIN7",229,0)
 . . S LA7SUBFL=$S(LA7SS="SP":63.08,LA7SS="CY":63.09,LA7SS="EM":63.02,1:"")
"RTN","LA7VIN7",230,0)
 ;
"RTN","LA7VIN7",231,0)
 ; Set flags for alerts and bulletins
"RTN","LA7VIN7",232,0)
 I LA7INTYP=10,LA7MTYP="ORU",OBX11'="" D  ;
"RTN","LA7VIN7",233,0)
 . I "CDW"'[OBX11 D  Q
"RTN","LA7VIN7",234,0)
 . . ; flag for new results alert
"RTN","LA7VIN7",235,0)
 . . S ^TMP("LA7-ORU",$J,LA76248,LA76249,LA7SS)=""
"RTN","LA7VIN7",236,0)
 . ;
"RTN","LA7VIN7",237,0)
 . Q:'LA7SUBFL
"RTN","LA7VIN7",238,0)
 . ; Set flag to send amended results bulletin
"RTN","LA7VIN7",239,0)
 . N DATA,X,X2,Y,LA7I
"RTN","LA7VIN7",240,0)
 . S LA7I=$O(^TMP("LA7 AMENDED RESULTS",$J,""),-1)
"RTN","LA7VIN7",241,0)
 . S LA7I=LA7I+1
"RTN","LA7VIN7",242,0)
 . S DATA=LA7LWL_"^"_LA7ISQN_"^"_LA7SUBFL_"^"_LA76248_"^"_LA76249_"^"_$TR(OBX11,"^","?")
"RTN","LA7VIN7",243,0)
 . S X2=""
"RTN","LA7VIN7",244,0)
 . I LA7RNLT'="" S X2=LA7RNLT_"^"_LA7RNLT(1)
"RTN","LA7VIN7",245,0)
 . I LA7RLNC'="" S X2=LA7RLNC_"^"_LA7RLNC(1)
"RTN","LA7VIN7",246,0)
 . ; If no NLT or LOINC use 1st codeset of OBX3
"RTN","LA7VIN7",247,0)
 . I X2="" D  ;
"RTN","LA7VIN7",248,0)
 . . S Y=OBX3
"RTN","LA7VIN7",249,0)
 . . D FLD2ARR^LA7VHLU7(.OBX3,LA7FS_LA7ECH)
"RTN","LA7VIN7",250,0)
 . . S X2=$$UNESC^LA7VHLU3($G(OBX3(1)),LA7FS_LA7ECH)
"RTN","LA7VIN7",251,0)
 . . S X2=X2_"^"_$$UNESC^LA7VHLU3($G(OBX3(2)),LA7FS_LA7ECH)
"RTN","LA7VIN7",252,0)
 . . K OBX3 S OBX3=Y
"RTN","LA7VIN7",253,0)
 . S DATA=DATA_"^"_X2_"^"_$TR(OBX8,"^","?")
"RTN","LA7VIN7",254,0)
 . ; only register amended if not already registered
"RTN","LA7VIN7",255,0)
 . I LA7UID'="" I '$D(^LAH("LA7 AMENDED RESULTS",LA7UID,LA7SUBFL,LA7LWL,LA7ISQN)) D  ;
"RTN","LA7VIN7",256,0)
 . . S ^TMP("LA7 AMENDED RESULTS",$J,LA7I)=DATA
"RTN","LA7VIN7",257,0)
 . ;
"RTN","LA7VIN7",258,0)
 . I LA7UID'="" S ^LAH("LA7 AMENDED RESULTS",LA7UID,LA7SUBFL,LA7LWL,LA7ISQN)=DATA
"RTN","LA7VIN7",259,0)
 ;
"RTN","LA7VIN7",260,0)
 Q
"RTN","LA7VIN7",261,0)
 ;
"RTN","LA7VIN7",262,0)
 ;
"RTN","LA7VIN7",263,0)
DATAOK(FILE,FLD,VAL) ;
"RTN","LA7VIN7",264,0)
 ; Checks if a value is appropriate for storing in the field
"RTN","LA7VIN7",265,0)
 ; Inputs
"RTN","LA7VIN7",266,0)
 ;  FILE : File #
"RTN","LA7VIN7",267,0)
 ;   FLD : Field #
"RTN","LA7VIN7",268,0)
 ;   VAL : Value of the field
"RTN","LA7VIN7",269,0)
 ;
"RTN","LA7VIN7",270,0)
 ; Returns 0 (invalid) or 1 (valid)
"RTN","LA7VIN7",271,0)
 ;
"RTN","LA7VIN7",272,0)
 N LRNOECHO,MSG,OUT,STATUS
"RTN","LA7VIN7",273,0)
 ;
"RTN","LA7VIN7",274,0)
 ; LRNOECHO used to suppress echo when input transform calls COM^LRNUM
"RTN","LA7VIN7",275,0)
 S STATUS=0,LRNOECHO=1
"RTN","LA7VIN7",276,0)
 D CHK^DIE(FILE,FLD,"",VAL,.OUT,"MSG")
"RTN","LA7VIN7",277,0)
 I $G(OUT)'="^" S STATUS=1
"RTN","LA7VIN7",278,0)
 I $D(MSG) S STATUS=0
"RTN","LA7VIN7",279,0)
 ;
"RTN","LA7VIN7",280,0)
 Q STATUS
"RTN","LA7VIN71")
0^57^B21329203
"RTN","LA7VIN71",1,0)
LA7VIN71 ;DALOI/JDB - HANDLE ORU OBX FOR MICRO ;03/17/11  13:57
"RTN","LA7VIN71",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN71",3,0)
 ;
"RTN","LA7VIN71",4,0)
 ; Continuation of LA7VIN7 and is only called from there.
"RTN","LA7VIN71",5,0)
 ; Process OBX segments for "MI" subscript tests.
"RTN","LA7VIN71",6,0)
 Q
"RTN","LA7VIN71",7,0)
 ;
"RTN","LA7VIN71",8,0)
 ;
"RTN","LA7VIN71",9,0)
PROCESS ;
"RTN","LA7VIN71",10,0)
 ; File MI ^LAH for a given concept (LA76247)
"RTN","LA7VIN71",11,0)
 ; Called from OBX^LA7VIN7 for Micro data
"RTN","LA7VIN71",12,0)
 ; Major variables from LA7VIN7:
"RTN","LA7VIN71",13,0)
 ; DSOBX3,DSOBX5,LA76247,LA7SCT,OBX5,LA7612
"RTN","LA7VIN71",14,0)
 ;
"RTN","LA7VIN71",15,0)
 N SUBID,PSUBID,DDS,DDP,LA7DD,LAX,RMK,CNCPTOR
"RTN","LA7VIN71",16,0)
 S LA7DD=$$GET1^DID($P(DSOBX3,"^",3),$P($P(DSOBX3,"^",4),";"),"","GLOBAL SUBSCRIPT LOCATION")
"RTN","LA7VIN71",17,0)
 S LA7DD("LABEL")=$$GET1^DID($P(DSOBX3,"^",3),$P($P(DSOBX3,"^",4),";"),"","LABEL")
"RTN","LA7VIN71",18,0)
 S DDS=$P(LA7DD,";",1)  ;DD Subscript
"RTN","LA7VIN71",19,0)
 S DDP=$P(LA7DD,";",2)  ;DD Piece
"RTN","LA7VIN71",20,0)
 S:DDS="" DDS=-1
"RTN","LA7VIN71",21,0)
 S:DDP="" DDP=-1
"RTN","LA7VIN71",22,0)
 ;
"RTN","LA7VIN71",23,0)
 S SUBID=$G(OBX4)
"RTN","LA7VIN71",24,0)
 S SUBID=$$UNESC^LA7VHLU3(SUBID,LA7FS_LA7ECH)
"RTN","LA7VIN71",25,0)
 S SUBID=$$TRIM^XLFSTR(SUBID)
"RTN","LA7VIN71",26,0)
 S SUBID=$$MAKEISO^LRVRMI1(LA74,SUBID)
"RTN","LA7VIN71",27,0)
 S PSUBID=$$TRIM^XLFSTR($G(LAPSUBID))
"RTN","LA7VIN71",28,0)
 S PSUBID=$$MAKEISO^LRVRMI1(LA74,PSUBID)
"RTN","LA7VIN71",29,0)
 I SUBID="" S SUBID=PSUBID
"RTN","LA7VIN71",30,0)
 ;
"RTN","LA7VIN71",31,0)
 I 'LA7612 D  ; S LA7612=0 ;#61.2 IEN
"RTN","LA7VIN71",32,0)
 . S LAX=$P(DSOBX5,"^",1)
"RTN","LA7VIN71",33,0)
 . I $P(LAX,";",2)="LAB(61.2," S LA7612=$P(LAX,";",1)
"RTN","LA7VIN71",34,0)
 ;
"RTN","LA7VIN71",35,0)
 ; Need to override the concept?
"RTN","LA7VIN71",36,0)
 S CNCPTOR=0
"RTN","LA7VIN71",37,0)
 I OBX5[LA7CS,+DSOBX5=-1 D
"RTN","LA7VIN71",38,0)
 . S LAX=$P(DSOBX5,"^",5)
"RTN","LA7VIN71",39,0)
 . I LAX,LAX'=LA76247 S CNCPTOR=1,LA76247=LAX
"RTN","LA7VIN71",40,0)
 ;
"RTN","LA7VIN71",41,0)
 ;
"RTN","LA7VIN71",42,0)
 ; Override LOINC codes to handle fact that some generic codes can be applied to more than one storage location.
"RTN","LA7VIN71",43,0)
 ;
"RTN","LA7VIN71",44,0)
 ; Check if URINE or SPUTUM SCREEN and use VA NLT to find concept
"RTN","LA7VIN71",45,0)
 ;  - URINE and SPUTUM SCREEN uses same LOINC code for organsimn identified (positive/negative culture)
"RTN","LA7VIN71",46,0)
 I LA76247=3,$G(OBX3(6))="99VA64",$P(OBX3(4),".")?1(1"93948",1"93949") D
"RTN","LA7VIN71",47,0)
 . N X
"RTN","LA7VIN71",48,0)
 . S X=$$HL2LAH^LA7VHLU6(OBX3(4),OBX3(5),OBX3(6),OBX3(8),LA76248,"MI")
"RTN","LA7VIN71",49,0)
 . I X>0 S LA76247=+X
"RTN","LA7VIN71",50,0)
 ;
"RTN","LA7VIN71",51,0)
 ; COLONY COUNT used for ORGANISM(sub=3,6247=10), FUNGUS/YEAST(sub=9,6247=11) and MYCOBACTERIUM(sub=12,6247=20)
"RTN","LA7VIN71",52,0)
 ; Get previous ^LAH node used by using the whole record subid C xref
"RTN","LA7VIN71",53,0)
 I LA7RLNC="564-5" D
"RTN","LA7VIN71",54,0)
 . N SUB
"RTN","LA7VIN71",55,0)
 . S SUB=$O(^LAH(LWL,1,ISQN,"MI","C",SUBID,0))
"RTN","LA7VIN71",56,0)
 . I SUB>0 S LA76247=$S(SUB=3:10,SUB=9:11,SUB=12:20,1:LA76247)
"RTN","LA7VIN71",57,0)
 ;
"RTN","LA7VIN71",58,0)
 ; Check if VA AFB quantity and use VA NLT to find concept - AFB Stain and AFB Quantity use same LOINC code.
"RTN","LA7VIN71",59,0)
 I LA76247=79,$G(OBX3(6))="99VA64",$P(OBX3(4),".")="87583" D
"RTN","LA7VIN71",60,0)
 . N X
"RTN","LA7VIN71",61,0)
 . S X=$$HL2LAH^LA7VHLU6(OBX3(4),OBX3(5),OBX3(6),OBX3(8),LA76248,"MI")
"RTN","LA7VIN71",62,0)
 . I X>0 S LA76247=+X
"RTN","LA7VIN71",63,0)
 ;
"RTN","LA7VIN71",64,0)
 ; Check if Organism should be stored under Bacteriology section instead of MI section determined by OBX-3 mapping.
"RTN","LA7VIN71",65,0)
 ; Used in cases where a Parasite, Fungus, Mycobacterium, or Virus was reported on a Bacterial culture.
"RTN","LA7VIN71",66,0)
 S LA76247=$$BACTCHK^LA7VHLUB(LA7ONLT,LA7AA,LA7AD,LA7AN,LA76247)
"RTN","LA7VIN71",67,0)
 ;
"RTN","LA7VIN71",68,0)
 ;
"RTN","LA7VIN71",69,0)
 I LA76247=1 D 1^LA7VIN7A Q  ;subscr 2
"RTN","LA7VIN71",70,0)
 I LA76247=3 D 3^LA7VIN7A Q  ;subscr 3
"RTN","LA7VIN71",71,0)
 I LA76247=4 D 4^LA7VIN7B Q  ;subscr 12
"RTN","LA7VIN71",72,0)
 I LA76247=5 D 5^LA7VIN7C Q  ;subscr 17
"RTN","LA7VIN71",73,0)
 I LA76247=6 D  Q  ; subscr 4
"RTN","LA7VIN71",74,0)
 . I 'CNCPTOR D 6^LA7VIN7A()
"RTN","LA7VIN71",75,0)
 . I CNCPTOR D 6^LA7VIN7A($$BLDRMK())
"RTN","LA7VIN71",76,0)
 I LA76247=7 D 7^LA7VIN7A Q  ;subscr 3
"RTN","LA7VIN71",77,0)
 I LA76247=8 D 8^LA7VIN7D Q  ;subscr 6
"RTN","LA7VIN71",78,0)
 I LA76247=9 D 9^LA7VIN7B Q  ;subscr 9
"RTN","LA7VIN71",79,0)
 I LA76247=10 D 10^LA7VIN7A Q  ;subscr 3
"RTN","LA7VIN71",80,0)
 I LA76247=11 D 11^LA7VIN7B Q  ;subscr 9
"RTN","LA7VIN71",81,0)
 I LA76247=12 D 12^LA7VIN7D() Q  ;subscr 7
"RTN","LA7VIN71",82,0)
 I LA76247=13 D 13^LA7VIN7D Q  ;subscr 6
"RTN","LA7VIN71",83,0)
 I LA76247=14 D 14^LA7VIN7D Q  ;subscr 6
"RTN","LA7VIN71",84,0)
 I LA76247=15 D 15^LA7VIN7B() Q  ;subscr 10
"RTN","LA7VIN71",85,0)
 I LA76247=16 D 16^LA7VIN7A Q  ; subscr 1
"RTN","LA7VIN71",86,0)
 I LA76247=17 D 17^LA7VIN7A Q  ; subscr 1
"RTN","LA7VIN71",87,0)
 I LA76247=20 D 20^LA7VIN7B Q  ;subscr 12
"RTN","LA7VIN71",88,0)
 I LA76247=21 D 21^LA7VIN7B Q  ;subscr 12
"RTN","LA7VIN71",89,0)
 I LA76247=22 D 22^LA7VIN7C() Q  ;subscr 13
"RTN","LA7VIN71",90,0)
 I LA76247=30 D 30^LA7VIN7C() Q  ;subscr 18
"RTN","LA7VIN71",91,0)
 ;
"RTN","LA7VIN71",92,0)
 I LA76247>39,LA76247<48 D NODE^LA7VIN7C(LA76247,"") Q
"RTN","LA7VIN71",93,0)
 ;
"RTN","LA7VIN71",94,0)
 I LA76247=79 D 79^LA7VIN7B Q  ;subscr 11
"RTN","LA7VIN71",95,0)
 I LA76247=85 D 85^LA7VIN7B Q  ;subscr 11
"RTN","LA7VIN71",96,0)
 ;
"RTN","LA7VIN71",97,0)
 I LA76247>85,LA76247<91 D NODE^LA7VIN7C(LA76247,"") Q
"RTN","LA7VIN71",98,0)
 ;
"RTN","LA7VIN71",99,0)
 ;
"RTN","LA7VIN71",100,0)
 ; If we get this far then something went wrong
"RTN","LA7VIN71",101,0)
 ; Error: No filing method found for OBX
"RTN","LA7VIN71",102,0)
 D  ;
"RTN","LA7VIN71",103,0)
 . N LA7VOBX3
"RTN","LA7VIN71",104,0)
 . S LA7VOBX3=OBX3
"RTN","LA7VIN71",105,0)
 . D CREATE^LA7LOG(202)
"RTN","LA7VIN71",106,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN71",107,0)
 ;
"RTN","LA7VIN71",108,0)
 Q
"RTN","LA7VIN71",109,0)
 ;
"RTN","LA7VIN71",110,0)
 ;
"RTN","LA7VIN71",111,0)
BLDRMK() ;
"RTN","LA7VIN71",112,0)
 ; Constructs comment/remarks for special situations like
"RTN","LA7VIN71",113,0)
 ; processing an OBX5 with flora normal (which gets filed as a
"RTN","LA7VIN71",114,0)
 ; Bact RPT REMARK).
"RTN","LA7VIN71",115,0)
 ;
"RTN","LA7VIN71",116,0)
 ; If there's an SCT code:
"RTN","LA7VIN71",117,0)
 ;   [SUBID]SCT Text
"RTN","LA7VIN71",118,0)
 ;
"RTN","LA7VIN71",119,0)
 ; If no SCT code:
"RTN","LA7VIN71",120,0)
 ;    If OBX5 contains HL7 component sep, 2nd piece of first tuplet
"RTN","LA7VIN71",121,0)
 ;    else its the full OBX5 text
"RTN","LA7VIN71",122,0)
 ;    [SUBID]OBX5 text
"RTN","LA7VIN71",123,0)
 ;
"RTN","LA7VIN71",124,0)
 N X,TXT,SID
"RTN","LA7VIN71",125,0)
 S X=SUBID
"RTN","LA7VIN71",126,0)
 S:X="" X=$G(PSUBID)
"RTN","LA7VIN71",127,0)
 S:X'="" X="["_X_"]"
"RTN","LA7VIN71",128,0)
 S SID=X
"RTN","LA7VIN71",129,0)
 S TXT=""
"RTN","LA7VIN71",130,0)
 I LA7SCT'="" D  ;
"RTN","LA7VIN71",131,0)
 . N SCT
"RTN","LA7VIN71",132,0)
 . S X=$$CODE^LRSCT(LA7SCT,"SCT",,"SCT")
"RTN","LA7VIN71",133,0)
 . S TXT=$G(SCT("P"))
"RTN","LA7VIN71",134,0)
 . S:TXT="" TXT=$G(SCT("F"))
"RTN","LA7VIN71",135,0)
 . I TXT="" D  ;
"RTN","LA7VIN71",136,0)
 . . N DATA,CODSYS
"RTN","LA7VIN71",137,0)
 . . S DATA=OBX5
"RTN","LA7VIN71",138,0)
 . . D FLD2ARR^LA7VHLU7(.DATA)
"RTN","LA7VIN71",139,0)
 . . D CODSYS^LA7VHLU7(.DATA,.CODSYS,"SCT")
"RTN","LA7VIN71",140,0)
 . . S TXT=$G(CODSYS(2))
"RTN","LA7VIN71",141,0)
 . . K DATA,CODSYS
"RTN","LA7VIN71",142,0)
 . S:TXT="" TXT="SCT:"_LA7SCT
"RTN","LA7VIN71",143,0)
 I LA7SCT="" D  ;
"RTN","LA7VIN71",144,0)
 . I OBX5[LA7CS S TXT=$P(OBX5,LA7CS,2)
"RTN","LA7VIN71",145,0)
 . I TXT="" S TXT=OBX5
"RTN","LA7VIN71",146,0)
 . S TXT=$$UNESC^LA7VHLU3(TXT,LA7FS_LA7ECH)
"RTN","LA7VIN71",147,0)
 Q SID_TXT
"RTN","LA7VIN71",148,0)
 ;
"RTN","LA7VIN71",149,0)
 ;
"RTN","LA7VIN71",150,0)
STRSPLIT(STR,MAXLEN,OUT) ;
"RTN","LA7VIN71",151,0)
 ; Splits a string into substrings no more than MAXLEN long
"RTN","LA7VIN71",152,0)
 ; Useful when storing things such as COMMENT fields
"RTN","LA7VIN71",153,0)
 N I,Y,SUBS
"RTN","LA7VIN71",154,0)
 S SUBS=$L(STR)\MAXLEN
"RTN","LA7VIN71",155,0)
 S:($L(STR)#MAXLEN)>0 SUBS=SUBS+1
"RTN","LA7VIN71",156,0)
 F I=0:1:SUBS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN71",157,0)
 . S OUT(I+1)=$E(STR,Y,(Y+MAXLEN)-1)
"RTN","LA7VIN71",158,0)
 . S Y=Y+MAXLEN
"RTN","LA7VIN71",159,0)
 Q SUBS
"RTN","LA7VIN71",160,0)
 ;
"RTN","LA7VIN71",161,0)
 ;
"RTN","LA7VIN71",162,0)
NTE(R6247,I,PREFIX) ;
"RTN","LA7VIN71",163,0)
 ; Set variable for HL7 NTE processing
"RTN","LA7VIN71",164,0)
 ; Inputs
"RTN","LA7VIN71",165,0)
 ;   R6247  : #62.47 IEN (Concept)
"RTN","LA7VIN71",166,0)
 ;       I  : Usually either ISQN or ISQN2
"RTN","LA7VIN71",167,0)
 ;   PREFIX : text of prefix (optional)
"RTN","LA7VIN71",168,0)
 S LA7RMK(0,0)=R6247_"^"_I_"^"_$G(PREFIX)
"RTN","LA7VIN71",169,0)
 Q
"RTN","LA7VIN71",170,0)
 ;
"RTN","LA7VIN71",171,0)
 ;
"RTN","LA7VIN71",172,0)
SUBIDERR ;
"RTN","LA7VIN71",173,0)
 ; Error handler when subid (OBX4) is null or unknown
"RTN","LA7VIN71",174,0)
 N LA7VOBX3,LA7VOBX4
"RTN","LA7VIN71",175,0)
 S LA7VOBX3=OBX3
"RTN","LA7VIN71",176,0)
 S LA7VOBX4=OBX4
"RTN","LA7VIN71",177,0)
 D CREATE^LA7LOG(205)
"RTN","LA7VIN71",178,0)
 S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN71",179,0)
 Q
"RTN","LA7VIN7A")
0^39^B55259468
"RTN","LA7VIN7A",1,0)
LA7VIN7A ;DALOI/JDB - Process ORU's OBX for Micro ;11/18/11  14:22
"RTN","LA7VIN7A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN7A",3,0)
 ;
"RTN","LA7VIN7A",4,0)
 ; Continuation of LA7VIN7 and is only called from there - process OBX segments for "MI" subscript tests.
"RTN","LA7VIN7A",5,0)
 Q
"RTN","LA7VIN7A",6,0)
 ;
"RTN","LA7VIN7A",7,0)
 ;
"RTN","LA7VIN7A",8,0)
1 ; Gram Stain (Subscript 2)
"RTN","LA7VIN7A",9,0)
 ;
"RTN","LA7VIN7A",10,0)
 N ISQN2,LA7X,SUB,X
"RTN","LA7VIN7A",11,0)
 ;
"RTN","LA7VIN7A",12,0)
 ; Store gram stain comment
"RTN","LA7VIN7A",13,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",2,"A"),-1)+1
"RTN","LA7VIN7A",14,0)
 S SUB="2,"_ISQN2_",0"
"RTN","LA7VIN7A",15,0)
 S X=OBX5_$S(OBX6'="":" "_OBX6,1:"")
"RTN","LA7VIN7A",16,0)
 S X=$TR(X,"^"," ")
"RTN","LA7VIN7A",17,0)
 D LAH(SUB,1,X) ;Value
"RTN","LA7VIN7A",18,0)
 ;
"RTN","LA7VIN7A",19,0)
 ; Store gram stain supporting info.
"RTN","LA7VIN7A",20,0)
 S SUB="2,"_ISQN2_",0,0"
"RTN","LA7VIN7A",21,0)
 D LAH(SUB,1,LA74) ; perf lab
"RTN","LA7VIN7A",22,0)
 ;
"RTN","LA7VIN7A",23,0)
 ; If LEDI interface then use LRLAB,HL as user.
"RTN","LA7VIN7A",24,0)
 I LA7INTYP=10 S LA7X=^XTMP("LA7 PROXY","LRLAB,HL")
"RTN","LA7VIN7A",25,0)
 E  S LA7X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",26,0)
 I LA7X D LAH(SUB,2,LA7X) ;resp observer
"RTN","LA7VIN7A",27,0)
 ;
"RTN","LA7VIN7A",28,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC IEN
"RTN","LA7VIN7A",29,0)
 D LAH(SUB,4,LA7RNLT) ; NLT code
"RTN","LA7VIN7A",30,0)
 D LAH(SUB,5,OBX11) ; Observ result code
"RTN","LA7VIN7A",31,0)
 ;
"RTN","LA7VIN7A",32,0)
 D NTE
"RTN","LA7VIN7A",33,0)
 Q
"RTN","LA7VIN7A",34,0)
 ;
"RTN","LA7VIN7A",35,0)
 ;
"RTN","LA7VIN7A",36,0)
3 ; Process organism (Subscript 3)
"RTN","LA7VIN7A",37,0)
 ;
"RTN","LA7VIN7A",38,0)
 N X,SUB,ISQN2
"RTN","LA7VIN7A",39,0)
 I DDS<0!(DDP<1) D DDERR Q
"RTN","LA7VIN7A",40,0)
 I LA7612<1 D  Q  ;
"RTN","LA7VIN7A",41,0)
 . ; Unknown entity in OBX-5
"RTN","LA7VIN7A",42,0)
 . N LA7VOBX5
"RTN","LA7VIN7A",43,0)
 . S LA7VOBX5=OBX5 ;needed for log
"RTN","LA7VIN7A",44,0)
 . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7A",45,0)
 . D CREATE^LA7LOG(204)
"RTN","LA7VIN7A",46,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7A",47,0)
 ;
"RTN","LA7VIN7A",48,0)
 S ISQN2=0
"RTN","LA7VIN7A",49,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,SUBID)
"RTN","LA7VIN7A",50,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,PSUBID)
"RTN","LA7VIN7A",51,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7A",52,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7A",53,0)
 ;
"RTN","LA7VIN7A",54,0)
 D LAH("3,0",-1,"")
"RTN","LA7VIN7A",55,0)
 S SUB="3,"_ISQN2_",0"
"RTN","LA7VIN7A",56,0)
 D LAH(SUB,DDP,LA7612) ; organism #61.2 IEN
"RTN","LA7VIN7A",57,0)
 S SUB="3,"_ISQN2_",.1"
"RTN","LA7VIN7A",58,0)
 D LAH(SUB,1,SUBID) ; isolate id
"RTN","LA7VIN7A",59,0)
 S SUB="3,"_ISQN2_","_DDS_",.01"
"RTN","LA7VIN7A",60,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC IEN
"RTN","LA7VIN7A",61,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7A",62,0)
 D LAH(SUB,3,LA7SCT) ; SCT Code
"RTN","LA7VIN7A",63,0)
 S SUB="3,"_ISQN2_","_DDS_",.01,0"
"RTN","LA7VIN7A",64,0)
 D LAH(SUB,1,OBX11) ;
"RTN","LA7VIN7A",65,0)
 S SUB="3,"_ISQN2_","_DDS_",.01,1"
"RTN","LA7VIN7A",66,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7A",67,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",68,0)
 D LAH(SUB,2,X)
"RTN","LA7VIN7A",69,0)
 D NTE
"RTN","LA7VIN7A",70,0)
 Q
"RTN","LA7VIN7A",71,0)
 ;
"RTN","LA7VIN7A",72,0)
 ;
"RTN","LA7VIN7A",73,0)
6(COM) ; Process bact rpt rmk (Subscript 4)
"RTN","LA7VIN7A",74,0)
 ;
"RTN","LA7VIN7A",75,0)
 ; Input
"RTN","LA7VIN7A",76,0)
 ;  COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7A",77,0)
 ;      : If not defined, copy of sym table variable OBX5 is used.
"RTN","LA7VIN7A",78,0)
 ;      : If OBX5 used, TEXT2 will be HL7 unescaped. If COM
"RTN","LA7VIN7A",79,0)
 ;      : is used it's text is not HL7 unescaped.
"RTN","LA7VIN7A",80,0)
 ;
"RTN","LA7VIN7A",81,0)
 N X,SUB,ISQN2,TEXT,MAXLEN,TEXT2
"RTN","LA7VIN7A",82,0)
 ; Dont initialize COM
"RTN","LA7VIN7A",83,0)
 S SUB="4,0"
"RTN","LA7VIN7A",84,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7A",85,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",86,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7A",87,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7A",88,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7A",89,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",4,"A"),-1)+1
"RTN","LA7VIN7A",90,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7A",91,0)
 S TEXT="OBX5"
"RTN","LA7VIN7A",92,0)
 I $D(COM)=1 S TEXT="COM"
"RTN","LA7VIN7A",93,0)
 S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7A",94,0)
 S SUB="4,"_ISQN2_",0"
"RTN","LA7VIN7A",95,0)
 ; insert separator line if needed
"RTN","LA7VIN7A",96,0)
 I ISQN2>1 D LAH(SUB,1," ") S ISQN2=ISQN2+1 S SUB="4,"_ISQN2_",0"
"RTN","LA7VIN7A",97,0)
 ;
"RTN","LA7VIN7A",98,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7A",99,0)
 I $P(DSOBX3,"^",6) I $P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D  ;
"RTN","LA7VIN7A",100,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7A",101,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7A",102,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7A",103,0)
 . Q:X=""
"RTN","LA7VIN7A",104,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7A",105,0)
 . S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7A",106,0)
 ;
"RTN","LA7VIN7A",107,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7A",108,0)
 I TEXT="OBX5" S TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7A",109,0)
 I TEXT="COM" S TEXT2=$G(COM)
"RTN","LA7VIN7A",110,0)
 I $L(TEXT2)'>MAXLEN D  ;
"RTN","LA7VIN7A",111,0)
 . D LAH(SUB,1,TEXT2)
"RTN","LA7VIN7A",112,0)
 ;
"RTN","LA7VIN7A",113,0)
 I $L(TEXT2)>MAXLEN D  ;
"RTN","LA7VIN7A",114,0)
 . N I,Y,PASS
"RTN","LA7VIN7A",115,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7A",116,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7A",117,0)
 . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7A",118,0)
 . . D LAH(SUB,1,$E(TEXT2,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7A",119,0)
 . . S Y=Y+MAXLEN
"RTN","LA7VIN7A",120,0)
 . . S ISQN2=ISQN2+1
"RTN","LA7VIN7A",121,0)
 . . S SUB="4,"_ISQN2_",0"
"RTN","LA7VIN7A",122,0)
 . ;
"RTN","LA7VIN7A",123,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7A",124,0)
 Q
"RTN","LA7VIN7A",125,0)
 ;
"RTN","LA7VIN7A",126,0)
 ;
"RTN","LA7VIN7A",127,0)
7 ; Process antimicrobial susceptibilities (Subscript 3)
"RTN","LA7VIN7A",128,0)
 ;
"RTN","LA7VIN7A",129,0)
 N ASCRN,ISQN2,LA7X,SUB,X,X2
"RTN","LA7VIN7A",130,0)
 I DDS<0!(DDP'>0) D DDERR Q
"RTN","LA7VIN7A",131,0)
 S ISQN2=0
"RTN","LA7VIN7A",132,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,SUBID)
"RTN","LA7VIN7A",133,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,PSUBID)
"RTN","LA7VIN7A",134,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7A",135,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7A",136,0)
 ;
"RTN","LA7VIN7A",137,0)
 D LAH("3,0",-1,"")
"RTN","LA7VIN7A",138,0)
 S ASCRN=$$FIELD^LA7VHLU7(13)
"RTN","LA7VIN7A",139,0)
 I ASCRN'="" D  ;
"RTN","LA7VIN7A",140,0)
 . N X,DATA
"RTN","LA7VIN7A",141,0)
 . S X=$P(DSOBX3,"^",4)
"RTN","LA7VIN7A",142,0)
 . S X=X+.2
"RTN","LA7VIN7A",143,0)
 . D CHK^DIE(63.3,X,"",ASCRN,.DATA)
"RTN","LA7VIN7A",144,0)
 . S ASCRN=$P(DATA,"^",1)
"RTN","LA7VIN7A",145,0)
 S SUB="3,"_ISQN2_","_DDS
"RTN","LA7VIN7A",146,0)
 S X=OBX5_$S(OBX6'="":" "_OBX6,1:"")
"RTN","LA7VIN7A",147,0)
 ;
"RTN","LA7VIN7A",148,0)
 ; convert SCT susc code to local code
"RTN","LA7VIN7A",149,0)
 I LA7SCT D
"RTN","LA7VIN7A",150,0)
 . S X2=$$SCT2KB^LA7VHLU6(LA7SCT,,"SCT",1)
"RTN","LA7VIN7A",151,0)
 . I X2'="" S X=X2
"RTN","LA7VIN7A",152,0)
 S X=$TR(X,"^"," ")
"RTN","LA7VIN7A",153,0)
 ;
"RTN","LA7VIN7A",154,0)
 D LAH(SUB,DDP,X) ; result
"RTN","LA7VIN7A",155,0)
 D LAH(SUB,2,OBX8) ; interpretation
"RTN","LA7VIN7A",156,0)
 D LAH(SUB,3,ASCRN) ; screen
"RTN","LA7VIN7A",157,0)
 S SUB="3,"_ISQN2_","_DDS_",.01"
"RTN","LA7VIN7A",158,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7A",159,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7A",160,0)
 D LAH(SUB,3,LA7SCT) ; SCT
"RTN","LA7VIN7A",161,0)
 S SUB="3,"_ISQN2_","_DDS_",.01,0"
"RTN","LA7VIN7A",162,0)
 D LAH(SUB,1,OBX11) ;obsv status
"RTN","LA7VIN7A",163,0)
 S SUB="3,"_ISQN2_","_DDS_",.01,1"
"RTN","LA7VIN7A",164,0)
 D LAH(SUB,1,LA74) ; #4 IEN
"RTN","LA7VIN7A",165,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",166,0)
 D LAH(SUB,2,X) ; resp observer
"RTN","LA7VIN7A",167,0)
 ;
"RTN","LA7VIN7A",168,0)
 ; Set prefix to antibiotic abbrevation or full name to annotate comments.
"RTN","LA7VIN7A",169,0)
 S LA7X=$$ABPREFIX(1,LA7DD)
"RTN","LA7VIN7A",170,0)
 I LA7X="" S LA7X=LA7DD("LABEL")
"RTN","LA7VIN7A",171,0)
 D NTE^LA7VIN71(LA76247,ISQN2,LA7X)
"RTN","LA7VIN7A",172,0)
 Q
"RTN","LA7VIN7A",173,0)
 ;
"RTN","LA7VIN7A",174,0)
 ;
"RTN","LA7VIN7A",175,0)
10 ; Organism Colony Count (Subscript 3)
"RTN","LA7VIN7A",176,0)
 ;
"RTN","LA7VIN7A",177,0)
 N X,SUB,ISQN2,UNITS
"RTN","LA7VIN7A",178,0)
 I DDS<0!(DDP'>0) D DDERR Q
"RTN","LA7VIN7A",179,0)
 S ISQN2=0
"RTN","LA7VIN7A",180,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,SUBID)
"RTN","LA7VIN7A",181,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",3,PSUBID)
"RTN","LA7VIN7A",182,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7A",183,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7A",184,0)
 D LAH("3,0",-1,"")
"RTN","LA7VIN7A",185,0)
 S SUB="3,"_ISQN2_",0"
"RTN","LA7VIN7A",186,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7A",187,0)
 S UNITS=$$UNESC^LA7VHLU3(OBX6,LA7FS_LA7ECH)
"RTN","LA7VIN7A",188,0)
 I UNITS'="" S X=X_" "_UNITS
"RTN","LA7VIN7A",189,0)
 D LAH(SUB,2,X) ;quantity
"RTN","LA7VIN7A",190,0)
 S SUB="3,"_ISQN2_","_DDS_",1"
"RTN","LA7VIN7A",191,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7A",192,0)
 S SUB="3,"_ISQN2_","_DDS_",1,0"
"RTN","LA7VIN7A",193,0)
 D LAH(SUB,1,OBX11)
"RTN","LA7VIN7A",194,0)
 S SUB="3,"_ISQN2_","_DDS_",1,1"
"RTN","LA7VIN7A",195,0)
 D LAH(SUB,1,LA74) ; #4 IEN
"RTN","LA7VIN7A",196,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",197,0)
 D LAH(SUB,2,X) ; resp observer
"RTN","LA7VIN7A",198,0)
 D NTE
"RTN","LA7VIN7A",199,0)
 Q
"RTN","LA7VIN7A",200,0)
 ;
"RTN","LA7VIN7A",201,0)
 ;
"RTN","LA7VIN7A",202,0)
16 ; Urine Screen (Subscript 1)
"RTN","LA7VIN7A",203,0)
 ;
"RTN","LA7VIN7A",204,0)
 N LAMSG,X,X2,Z
"RTN","LA7VIN7A",205,0)
 ;
"RTN","LA7VIN7A",206,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7A",207,0)
 ;
"RTN","LA7VIN7A",208,0)
 ; convert SCT positive/negative code to local code
"RTN","LA7VIN7A",209,0)
 I LA7SCT D
"RTN","LA7VIN7A",210,0)
 . S X2=$$SCT2PN^LA7VHLU6(LA7SCT,,"SCT",1)
"RTN","LA7VIN7A",211,0)
 . I X2'="" S X=X2
"RTN","LA7VIN7A",212,0)
 ;
"RTN","LA7VIN7A",213,0)
 D  ;
"RTN","LA7VIN7A",214,0)
 . N Z,LAMSG,LRNOECHO
"RTN","LA7VIN7A",215,0)
 . S LRNOECHO=1
"RTN","LA7VIN7A",216,0)
 . D CHK^DIE(63.05,11.57,"",X,.Z,"LAMSG")
"RTN","LA7VIN7A",217,0)
 . I $G(Z)'="^" S X=Z
"RTN","LA7VIN7A",218,0)
 ;
"RTN","LA7VIN7A",219,0)
 S DATAOK=$$DATAOK^LA7VIN7(63.05,11.57,X)
"RTN","LA7VIN7A",220,0)
 ;
"RTN","LA7VIN7A",221,0)
 S SUB="1,0"
"RTN","LA7VIN7A",222,0)
 D LAH(SUB,6,X)
"RTN","LA7VIN7A",223,0)
 ;
"RTN","LA7VIN7A",224,0)
 S SUB="1,0,.02"
"RTN","LA7VIN7A",225,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7A",226,0)
 S SUB="1,0,.02,0"
"RTN","LA7VIN7A",227,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7A",228,0)
 S SUB="1,0,.02,1"
"RTN","LA7VIN7A",229,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7A",230,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",231,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7A",232,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7A",233,0)
 ;
"RTN","LA7VIN7A",234,0)
 Q
"RTN","LA7VIN7A",235,0)
 ;
"RTN","LA7VIN7A",236,0)
 ;
"RTN","LA7VIN7A",237,0)
17 ; Sputum Screen (Subscript 1)
"RTN","LA7VIN7A",238,0)
 ;
"RTN","LA7VIN7A",239,0)
 N X,SUB,ISQN2,UNITS,DATAOK
"RTN","LA7VIN7A",240,0)
 ;
"RTN","LA7VIN7A",241,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7A",242,0)
 S DATAOK=$$DATAOK^LA7VIN7(63.05,11.58,X)
"RTN","LA7VIN7A",243,0)
 ; Workaround 01/10/2007 (store anything in Set of Codes)
"RTN","LA7VIN7A",244,0)
 S SUB="1,0"
"RTN","LA7VIN7A",245,0)
 D LAH(SUB,5,X)
"RTN","LA7VIN7A",246,0)
 I DATAOK D LAH(SUB,5,X)
"RTN","LA7VIN7A",247,0)
 ;
"RTN","LA7VIN7A",248,0)
 S SUB="1,0,.01"
"RTN","LA7VIN7A",249,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7A",250,0)
 S SUB="1,0,.01,0"
"RTN","LA7VIN7A",251,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7A",252,0)
 S SUB="1,0,.01,1"
"RTN","LA7VIN7A",253,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7A",254,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7A",255,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7A",256,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7A",257,0)
 ;
"RTN","LA7VIN7A",258,0)
 Q
"RTN","LA7VIN7A",259,0)
 ;
"RTN","LA7VIN7A",260,0)
 ;
"RTN","LA7VIN7A",261,0)
DDERR ;
"RTN","LA7VIN7A",262,0)
 ; If unknown storage location flag error
"RTN","LA7VIN7A",263,0)
 ; No File #63 field mapping found for OBX-3
"RTN","LA7VIN7A",264,0)
 N LA7OBX3
"RTN","LA7VIN7A",265,0)
 S LA7OBX3=OBX3 ;needed for log
"RTN","LA7VIN7A",266,0)
 D CREATE^LA7LOG(201)
"RTN","LA7VIN7A",267,0)
 S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7A",268,0)
 Q
"RTN","LA7VIN7A",269,0)
 ;
"RTN","LA7VIN7A",270,0)
 ;
"RTN","LA7VIN7A",271,0)
LAH(LASUB,LAP,LAVAL) ;
"RTN","LA7VIN7A",272,0)
 ; Convenience method
"RTN","LA7VIN7A",273,0)
 I LAP'=-1 I LAVAL="" Q
"RTN","LA7VIN7A",274,0)
 D LAH^LAGEN(+$G(LWL),+$G(LA7ISQN),"MI",LASUB,LAP,LAVAL)
"RTN","LA7VIN7A",275,0)
 Q
"RTN","LA7VIN7A",276,0)
 ;
"RTN","LA7VIN7A",277,0)
 ;
"RTN","LA7VIN7A",278,0)
NTE ;
"RTN","LA7VIN7A",279,0)
 ; Convenience method
"RTN","LA7VIN7A",280,0)
 D NTE^LA7VIN71(LA76247,ISQN2)
"RTN","LA7VIN7A",281,0)
 Q
"RTN","LA7VIN7A",282,0)
 ;
"RTN","LA7VIN7A",283,0)
 ;
"RTN","LA7VIN7A",284,0)
ABPREFIX(LA7TYPE,LA7DD) ; Get prefix of antibiotic full name to annotate comments.
"RTN","LA7VIN7A",285,0)
 ; Call with LA7TYPE = type of antimicrobial (1=bacterial, 2=mycobacterial)
"RTN","LA7VIN7A",286,0)
 ;             LA7DD = drug node in file #63, MI subscript
"RTN","LA7VIN7A",287,0)
 ;
"RTN","LA7VIN7A",288,0)
 ; Returns      LA7Y = drug abbreviation or full name from file #62.06
"RTN","LA7VIN7A",289,0)
 ;
"RTN","LA7VIN7A",290,0)
 N LA76206,LA7Y,LA7XREF
"RTN","LA7VIN7A",291,0)
 S (LA76206,LA7Y)="",LA7TYPE=$G(LA7TYPE),LA7DD=$P($G(LA7DD),";")
"RTN","LA7VIN7A",292,0)
 S LA7XREF=$S(LA7TYPE=1:"AD",LA7TYPE=2:"AD1",1:"")
"RTN","LA7VIN7A",293,0)
 ;
"RTN","LA7VIN7A",294,0)
 I LA7XREF'="",LA7DD S LA76206=$O(^LAB(62.06,LA7XREF,LA7DD,0))
"RTN","LA7VIN7A",295,0)
 ;
"RTN","LA7VIN7A",296,0)
 I LA76206 D
"RTN","LA7VIN7A",297,0)
 . S LA76206(0)=$G(^LAB(62.06,LA76206,0))
"RTN","LA7VIN7A",298,0)
 . S LA7Y="For "_$P(LA76206(0),"^")_": "
"RTN","LA7VIN7A",299,0)
 ;
"RTN","LA7VIN7A",300,0)
 Q LA7Y
"RTN","LA7VIN7B")
0^44^B59079752
"RTN","LA7VIN7B",1,0)
LA7VIN7B ;DALOI/JDB - Process ORU's OBX for Micro ;11/18/11  14:31
"RTN","LA7VIN7B",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN7B",3,0)
 ;
"RTN","LA7VIN7B",4,0)
 ; Continuation of LA7VIN7 and is only called from there.
"RTN","LA7VIN7B",5,0)
 ; Process OBX segments for "MI" subscript tests.
"RTN","LA7VIN7B",6,0)
 Q
"RTN","LA7VIN7B",7,0)
 ;
"RTN","LA7VIN7B",8,0)
 ;
"RTN","LA7VIN7B",9,0)
4 ;
"RTN","LA7VIN7B",10,0)
 ; process Mycobaterium (Subscript 12)
"RTN","LA7VIN7B",11,0)
 N X,SUB,ISQN2
"RTN","LA7VIN7B",12,0)
 I DDS<0!(DDP<1) D DDERR^LA7VIN7A Q
"RTN","LA7VIN7B",13,0)
 I LA7612<1 D  Q  ;
"RTN","LA7VIN7B",14,0)
 . ; Unknown entity in OBX-5
"RTN","LA7VIN7B",15,0)
 . N LA7VOBX5
"RTN","LA7VIN7B",16,0)
 . S LA7VOBX5=OBX5 ;needed for log
"RTN","LA7VIN7B",17,0)
 . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",18,0)
 . D CREATE^LA7LOG(204)
"RTN","LA7VIN7B",19,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7B",20,0)
 ;
"RTN","LA7VIN7B",21,0)
 S ISQN2=0
"RTN","LA7VIN7B",22,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,SUBID)
"RTN","LA7VIN7B",23,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,PSUBID)
"RTN","LA7VIN7B",24,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7B",25,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7B",26,0)
 ;
"RTN","LA7VIN7B",27,0)
 S SUB="12,"_ISQN2_",0"
"RTN","LA7VIN7B",28,0)
 D LAH(SUB,DDP,LA7612) ; organism #61.2 IEN
"RTN","LA7VIN7B",29,0)
 S X=OBX5_$S(OBX6'="":" "_OBX6,1:"")
"RTN","LA7VIN7B",30,0)
 S SUB="12,"_ISQN2_",.1"
"RTN","LA7VIN7B",31,0)
 D LAH(SUB,1,SUBID) ; isolate id
"RTN","LA7VIN7B",32,0)
 S SUB="12,"_ISQN2_","_DDS_",.01"
"RTN","LA7VIN7B",33,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC IEN
"RTN","LA7VIN7B",34,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7B",35,0)
 D LAH(SUB,3,LA7SCT) ; SCT Code
"RTN","LA7VIN7B",36,0)
 S SUB="12,"_ISQN2_","_DDS_",.01,0"
"RTN","LA7VIN7B",37,0)
 D LAH(SUB,1,OBX11) ;
"RTN","LA7VIN7B",38,0)
 S SUB="12,"_ISQN2_","_DDS_",.01,1"
"RTN","LA7VIN7B",39,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",40,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",41,0)
 D LAH(SUB,2,X)
"RTN","LA7VIN7B",42,0)
 D NTE
"RTN","LA7VIN7B",43,0)
 Q
"RTN","LA7VIN7B",44,0)
 ;
"RTN","LA7VIN7B",45,0)
 ;
"RTN","LA7VIN7B",46,0)
9 ;
"RTN","LA7VIN7B",47,0)
 ; Process fungus (Subscript 9)
"RTN","LA7VIN7B",48,0)
 N X,SUB,ISQN2
"RTN","LA7VIN7B",49,0)
 I LA7612<1 D  Q  ;
"RTN","LA7VIN7B",50,0)
 . ; Unknown entity in OBX-5
"RTN","LA7VIN7B",51,0)
 . N LA7VOBX5
"RTN","LA7VIN7B",52,0)
 . S LA7VOBX5=OBX5 ;needed for log
"RTN","LA7VIN7B",53,0)
 . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",54,0)
 . D CREATE^LA7LOG(204)
"RTN","LA7VIN7B",55,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7B",56,0)
 ;
"RTN","LA7VIN7B",57,0)
 S ISQN2=0
"RTN","LA7VIN7B",58,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",9,SUBID)
"RTN","LA7VIN7B",59,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",9,PSUBID)
"RTN","LA7VIN7B",60,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7B",61,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7B",62,0)
 ;
"RTN","LA7VIN7B",63,0)
 S SUB="9,"_ISQN2_",0"
"RTN","LA7VIN7B",64,0)
 D LAH(SUB,1,LA7612) ; #61.2 IEN
"RTN","LA7VIN7B",65,0)
 S SUB="9,"_ISQN2_",.1"
"RTN","LA7VIN7B",66,0)
 D LAH(SUB,1,SUBID) ; isolate id
"RTN","LA7VIN7B",67,0)
 S SUB="9,"_ISQN2_",0,.01"
"RTN","LA7VIN7B",68,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC IEN
"RTN","LA7VIN7B",69,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7B",70,0)
 D LAH(SUB,3,LA7SCT) ; SCT Code
"RTN","LA7VIN7B",71,0)
 S SUB="9,"_ISQN2_",0,.01,0"
"RTN","LA7VIN7B",72,0)
 D LAH(SUB,1,OBX11) ;
"RTN","LA7VIN7B",73,0)
 S SUB="9,"_ISQN2_",0,.01,1"
"RTN","LA7VIN7B",74,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",75,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",76,0)
 D LAH(SUB,2,X)
"RTN","LA7VIN7B",77,0)
 D NTE
"RTN","LA7VIN7B",78,0)
 Q
"RTN","LA7VIN7B",79,0)
 ;
"RTN","LA7VIN7B",80,0)
 ;
"RTN","LA7VIN7B",81,0)
11 ;
"RTN","LA7VIN7B",82,0)
 ; Process Fungal Colony Count (Subscript 9)
"RTN","LA7VIN7B",83,0)
 N X,SUB,ISQN2,UNITS
"RTN","LA7VIN7B",84,0)
 S ISQN2=0
"RTN","LA7VIN7B",85,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",9,SUBID)
"RTN","LA7VIN7B",86,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",9,PSUBID)
"RTN","LA7VIN7B",87,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7B",88,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7B",89,0)
 ;
"RTN","LA7VIN7B",90,0)
 D LAH("9,0",-1,"")
"RTN","LA7VIN7B",91,0)
 S SUB="9,"_ISQN2_",0"
"RTN","LA7VIN7B",92,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",93,0)
 S UNITS=$$UNESC^LA7VHLU3(OBX6,LA7FS_LA7ECH)
"RTN","LA7VIN7B",94,0)
 I UNITS'="" S X=X_" "_UNITS
"RTN","LA7VIN7B",95,0)
 D LAH(SUB,2,X) ;quantity
"RTN","LA7VIN7B",96,0)
 S SUB="9,"_ISQN2_",0,1"
"RTN","LA7VIN7B",97,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",98,0)
 S SUB="9,"_ISQN2_",0,1,0"
"RTN","LA7VIN7B",99,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7B",100,0)
 S SUB="9,"_ISQN2_",0,1,1"
"RTN","LA7VIN7B",101,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",102,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",103,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7B",104,0)
 D NTE
"RTN","LA7VIN7B",105,0)
 Q
"RTN","LA7VIN7B",106,0)
 ;
"RTN","LA7VIN7B",107,0)
 ;
"RTN","LA7VIN7B",108,0)
15(COM) ;
"RTN","LA7VIN7B",109,0)
 ; Process Mycology Rpt Remark (Subscript 10)
"RTN","LA7VIN7B",110,0)
 ; Input
"RTN","LA7VIN7B",111,0)
 ;  COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7B",112,0)
 ;      :  If empty OBX5 is used
"RTN","LA7VIN7B",113,0)
 ;
"RTN","LA7VIN7B",114,0)
 N X,SUB,ISQN2,TEXT,TEXT2,MAXLEN
"RTN","LA7VIN7B",115,0)
 ; dont initialize COM
"RTN","LA7VIN7B",116,0)
 S SUB="10,0"
"RTN","LA7VIN7B",117,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",118,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",119,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7B",120,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",121,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7B",122,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",10,"A"),-1)+1
"RTN","LA7VIN7B",123,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7B",124,0)
 S TEXT="OBX5"
"RTN","LA7VIN7B",125,0)
 I $D(COM)=1 S TEXT="COM"
"RTN","LA7VIN7B",126,0)
 I TEXT="OBX5" S TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",127,0)
 I TEXT="COM" S TEXT2=$G(COM)
"RTN","LA7VIN7B",128,0)
 S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7B",129,0)
 S SUB="10,"_ISQN2_",0"
"RTN","LA7VIN7B",130,0)
 ; insert separator line if needed
"RTN","LA7VIN7B",131,0)
 I ISQN2>1 D LAH(SUB,1," ") S ISQN2=ISQN2+1 S SUB="10,"_ISQN2_",0"
"RTN","LA7VIN7B",132,0)
 ;
"RTN","LA7VIN7B",133,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7B",134,0)
 I $P(DSOBX3,"^",6) I $P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D  ;
"RTN","LA7VIN7B",135,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7B",136,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7B",137,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7B",138,0)
 . Q:X=""
"RTN","LA7VIN7B",139,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7B",140,0)
 . S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7B",141,0)
 ;
"RTN","LA7VIN7B",142,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7B",143,0)
 I $L(TEXT2)'>MAXLEN D  ;
"RTN","LA7VIN7B",144,0)
 . D LAH(SUB,1,TEXT2)
"RTN","LA7VIN7B",145,0)
 I $L(TEXT2)>MAXLEN D  ;
"RTN","LA7VIN7B",146,0)
 . N I,Y,PASS
"RTN","LA7VIN7B",147,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7B",148,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7B",149,0)
 . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7B",150,0)
 . . D LAH(SUB,1,$E(TEXT2,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7B",151,0)
 . . S Y=Y+MAXLEN
"RTN","LA7VIN7B",152,0)
 . . S ISQN2=ISQN2+1
"RTN","LA7VIN7B",153,0)
 . . S SUB="10,"_ISQN2_",0"
"RTN","LA7VIN7B",154,0)
 . ;
"RTN","LA7VIN7B",155,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7B",156,0)
 Q
"RTN","LA7VIN7B",157,0)
 ;
"RTN","LA7VIN7B",158,0)
 ;
"RTN","LA7VIN7B",159,0)
20 ;
"RTN","LA7VIN7B",160,0)
 ; Process Mycobacterium Colony Count (Subscript 12)
"RTN","LA7VIN7B",161,0)
 N X,SUB,ISQN2,UNITS
"RTN","LA7VIN7B",162,0)
 S ISQN2=0
"RTN","LA7VIN7B",163,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,SUBID)
"RTN","LA7VIN7B",164,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,PSUBID)
"RTN","LA7VIN7B",165,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7B",166,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7B",167,0)
 ;
"RTN","LA7VIN7B",168,0)
 S SUB="12,"_ISQN2_",0"
"RTN","LA7VIN7B",169,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",170,0)
 S UNITS=$$UNESC^LA7VHLU3(OBX6,LA7FS_LA7ECH)
"RTN","LA7VIN7B",171,0)
 I UNITS'="" S X=X_" "_UNITS
"RTN","LA7VIN7B",172,0)
 D LAH(SUB,2,X) ;quantity
"RTN","LA7VIN7B",173,0)
 S SUB="12,"_ISQN2_",0,1"
"RTN","LA7VIN7B",174,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",175,0)
 S SUB="12,"_ISQN2_",0,1,0"
"RTN","LA7VIN7B",176,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7B",177,0)
 S SUB="12,"_ISQN2_",0,1,1"
"RTN","LA7VIN7B",178,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",179,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",180,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7B",181,0)
 D NTE
"RTN","LA7VIN7B",182,0)
 Q
"RTN","LA7VIN7B",183,0)
 ;
"RTN","LA7VIN7B",184,0)
 ;
"RTN","LA7VIN7B",185,0)
21 ;
"RTN","LA7VIN7B",186,0)
 ; Process mycobacteria susceptibilities (Subscript 12)
"RTN","LA7VIN7B",187,0)
 N LA76206,LA7X,X,X2,SUB,ISQN2,ASCRN
"RTN","LA7VIN7B",188,0)
 I DDS<0!(DDP'>0) D DDERR^LA7VIN7A Q
"RTN","LA7VIN7B",189,0)
 S ISQN2=0
"RTN","LA7VIN7B",190,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,SUBID)
"RTN","LA7VIN7B",191,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",12,PSUBID)
"RTN","LA7VIN7B",192,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7B",193,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7B",194,0)
 ;
"RTN","LA7VIN7B",195,0)
 S ASCRN=$$FIELD^LA7VHLU7(13)
"RTN","LA7VIN7B",196,0)
 I ASCRN'="" D  ;
"RTN","LA7VIN7B",197,0)
 . N X,DATA
"RTN","LA7VIN7B",198,0)
 . S X=$P(DSOBX3,"^",4)
"RTN","LA7VIN7B",199,0)
 . S X=X+.2
"RTN","LA7VIN7B",200,0)
 . D CHK^DIE(63.3,X,"",ASCRN,.DATA)
"RTN","LA7VIN7B",201,0)
 . S ASCRN=$P(DATA,"^",1)
"RTN","LA7VIN7B",202,0)
 S SUB="12,"_ISQN2_","_DDS
"RTN","LA7VIN7B",203,0)
 S X=OBX5_$S(OBX6'="":" "_OBX6,1:"")
"RTN","LA7VIN7B",204,0)
 ; convert SCT susc code to local code
"RTN","LA7VIN7B",205,0)
 I (LA7SCT) D  ;
"RTN","LA7VIN7B",206,0)
 . S X2=$$SCT2KB^LA7VHLU6(LA7SCT,,"SCT",1)
"RTN","LA7VIN7B",207,0)
 . I X2'="" S X=X2
"RTN","LA7VIN7B",208,0)
 S X=$TR(X,"^"," ")
"RTN","LA7VIN7B",209,0)
 D LAH(SUB,DDP,X) ; result
"RTN","LA7VIN7B",210,0)
 S SUB="12,"_ISQN2_","_DDS_",.01"
"RTN","LA7VIN7B",211,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",212,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7B",213,0)
 D LAH(SUB,3,LA7SCT) ; SCT
"RTN","LA7VIN7B",214,0)
 S SUB="12,"_ISQN2_","_DDS_",.01,0"
"RTN","LA7VIN7B",215,0)
 D LAH(SUB,1,OBX11) ;obsv status
"RTN","LA7VIN7B",216,0)
 S SUB="12,"_ISQN2_","_DDS_",.01,1"
"RTN","LA7VIN7B",217,0)
 D LAH(SUB,1,LA74) ; #4 IEN
"RTN","LA7VIN7B",218,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",219,0)
 D LAH(SUB,2,X) ; resp observer
"RTN","LA7VIN7B",220,0)
 ;
"RTN","LA7VIN7B",221,0)
 ; Set prefix to antibiotic abbrevation or full name to annotate comments.
"RTN","LA7VIN7B",222,0)
 S LA7X=$$ABPREFIX^LA7VIN7A(2,LA7DD)
"RTN","LA7VIN7B",223,0)
 I LA7X="" S LA7X=LA7DD("LABEL")
"RTN","LA7VIN7B",224,0)
 D NTE^LA7VIN71(LA76247,ISQN2,LA7X)
"RTN","LA7VIN7B",225,0)
 Q
"RTN","LA7VIN7B",226,0)
 ;
"RTN","LA7VIN7B",227,0)
 ;
"RTN","LA7VIN7B",228,0)
79 ;
"RTN","LA7VIN7B",229,0)
 ; Process Acid Fast Stain (Subscript 11)
"RTN","LA7VIN7B",230,0)
 N X,SUB,ISQN2,UNITS,DATAOK
"RTN","LA7VIN7B",231,0)
 S SUB="11,0"
"RTN","LA7VIN7B",232,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",233,0)
 D  ;
"RTN","LA7VIN7B",234,0)
 . N Z,LAMSG
"RTN","LA7VIN7B",235,0)
 . D CHK^DIE(63.05,24,"",X,.Z,"LAMSG")
"RTN","LA7VIN7B",236,0)
 . I $G(Z)'="^" S X=Z
"RTN","LA7VIN7B",237,0)
 S DATAOK=$$DATAOK^LA7VIN7(63.05,24,X)
"RTN","LA7VIN7B",238,0)
 S UNITS=$$UNESC^LA7VHLU3(OBX6,LA7FS_LA7ECH)
"RTN","LA7VIN7B",239,0)
 ; Workaround 01/10/2007 (store anything in Set of Codes)
"RTN","LA7VIN7B",240,0)
 D LAH(SUB,3,X)
"RTN","LA7VIN7B",241,0)
 I DATAOK D  ;
"RTN","LA7VIN7B",242,0)
 . D LAH(SUB,3,X)
"RTN","LA7VIN7B",243,0)
 ;
"RTN","LA7VIN7B",244,0)
 I 'DATAOK D  ;
"RTN","LA7VIN7B",245,0)
 . I UNITS'="" S X=X_" "_UNITS
"RTN","LA7VIN7B",246,0)
 . D LAH(SUB,4,X) ;quantity
"RTN","LA7VIN7B",247,0)
 ;
"RTN","LA7VIN7B",248,0)
 S SUB="11,0,.01"
"RTN","LA7VIN7B",249,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",250,0)
 S SUB="11,0,.01,0"
"RTN","LA7VIN7B",251,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7B",252,0)
 S SUB="11,0,.01,1"
"RTN","LA7VIN7B",253,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",254,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",255,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7B",256,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7B",257,0)
 Q
"RTN","LA7VIN7B",258,0)
 ;
"RTN","LA7VIN7B",259,0)
 ;
"RTN","LA7VIN7B",260,0)
85 ;
"RTN","LA7VIN7B",261,0)
 ; Process Acid Fast Stain Quantity (Subscript 11)
"RTN","LA7VIN7B",262,0)
 N X,SUB,ISQN2,UNITS
"RTN","LA7VIN7B",263,0)
 S SUB="11,0"
"RTN","LA7VIN7B",264,0)
 S X=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7B",265,0)
 S UNITS=$$UNESC^LA7VHLU3(OBX6,LA7FS_LA7ECH)
"RTN","LA7VIN7B",266,0)
 I UNITS'="" S X=X_" "_UNITS
"RTN","LA7VIN7B",267,0)
 D LAH(SUB,4,X)
"RTN","LA7VIN7B",268,0)
 ;
"RTN","LA7VIN7B",269,0)
 S SUB="11,0,.02"
"RTN","LA7VIN7B",270,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7B",271,0)
 S SUB="11,0,.02,0"
"RTN","LA7VIN7B",272,0)
 D LAH(SUB,1,OBX11) ; Obsv Results
"RTN","LA7VIN7B",273,0)
 S SUB="11,0,.02,1"
"RTN","LA7VIN7B",274,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7B",275,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7B",276,0)
 D LAH(SUB,2,X) ; Resp Obsv.
"RTN","LA7VIN7B",277,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7B",278,0)
 Q
"RTN","LA7VIN7B",279,0)
 ;
"RTN","LA7VIN7B",280,0)
 ;
"RTN","LA7VIN7B",281,0)
LAH(LASUB,LAP,LAVAL) ;
"RTN","LA7VIN7B",282,0)
 ; Convenience method
"RTN","LA7VIN7B",283,0)
 D LAH^LAGEN(+$G(LWL),+$G(LA7ISQN),"MI",LASUB,LAP,LAVAL)
"RTN","LA7VIN7B",284,0)
 Q
"RTN","LA7VIN7B",285,0)
 ;
"RTN","LA7VIN7B",286,0)
 ;
"RTN","LA7VIN7B",287,0)
NTE ;
"RTN","LA7VIN7B",288,0)
 ; Convenience method
"RTN","LA7VIN7B",289,0)
 D NTE^LA7VIN71(LA76247,ISQN2)
"RTN","LA7VIN7B",290,0)
 Q
"RTN","LA7VIN7C")
0^54^B37686666
"RTN","LA7VIN7C",1,0)
LA7VIN7C ;DALOI/JDB - Process ORU's OBX for Micro ;11/18/11  14:35
"RTN","LA7VIN7C",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN7C",3,0)
 ;
"RTN","LA7VIN7C",4,0)
 ; Continuation of LA7VIN7 and is only called from there.
"RTN","LA7VIN7C",5,0)
 ; Process OBX segments for "MI" subscript tests.
"RTN","LA7VIN7C",6,0)
 Q
"RTN","LA7VIN7C",7,0)
 ;
"RTN","LA7VIN7C",8,0)
 ;
"RTN","LA7VIN7C",9,0)
5 ; Process Virus (Subscript 17)
"RTN","LA7VIN7C",10,0)
 ;
"RTN","LA7VIN7C",11,0)
 N X,SUB,ISQN2
"RTN","LA7VIN7C",12,0)
 I DDS<0!(DDP<1) D DDERR^LA7VIN7A Q
"RTN","LA7VIN7C",13,0)
 I LA7612<1 D  Q  ;
"RTN","LA7VIN7C",14,0)
 . ; Unknown entity in OBX-5
"RTN","LA7VIN7C",15,0)
 . N LA7VOBX5
"RTN","LA7VIN7C",16,0)
 . S LA7VOBX5=OBX5 ;needed for log
"RTN","LA7VIN7C",17,0)
 . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7C",18,0)
 . D CREATE^LA7LOG(204)
"RTN","LA7VIN7C",19,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7C",20,0)
 ;
"RTN","LA7VIN7C",21,0)
 S ISQN2=0
"RTN","LA7VIN7C",22,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",17,SUBID)
"RTN","LA7VIN7C",23,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",17,PSUBID)
"RTN","LA7VIN7C",24,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7C",25,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7C",26,0)
 ;
"RTN","LA7VIN7C",27,0)
 S SUB="17,"_ISQN2_",0"
"RTN","LA7VIN7C",28,0)
 D LAH(SUB,DDP,LA7612) ; organism #61.2 IEN
"RTN","LA7VIN7C",29,0)
 S SUB="17,"_ISQN2_",.1"
"RTN","LA7VIN7C",30,0)
 D LAH(SUB,1,SUBID) ; isolate id
"RTN","LA7VIN7C",31,0)
 S SUB="17,"_ISQN2_",.01"
"RTN","LA7VIN7C",32,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC IEN
"RTN","LA7VIN7C",33,0)
 D LAH(SUB,2,LA7RNLT) ; NLT code
"RTN","LA7VIN7C",34,0)
 D LAH(SUB,3,LA7SCT) ; SCT Code
"RTN","LA7VIN7C",35,0)
 S SUB="17,"_ISQN2_",0,.01,0"
"RTN","LA7VIN7C",36,0)
 D LAH(SUB,1,OBX11) ;
"RTN","LA7VIN7C",37,0)
 S SUB="17,"_ISQN2_",0,.01,1"
"RTN","LA7VIN7C",38,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7C",39,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7C",40,0)
 D LAH(SUB,2,X)
"RTN","LA7VIN7C",41,0)
 D NTE
"RTN","LA7VIN7C",42,0)
 Q
"RTN","LA7VIN7C",43,0)
 ;
"RTN","LA7VIN7C",44,0)
 ;
"RTN","LA7VIN7C",45,0)
22(COM) ; Process TB Rpt Remark (Subscript 13)
"RTN","LA7VIN7C",46,0)
 ; Input
"RTN","LA7VIN7C",47,0)
 ;  COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7C",48,0)
 ;      :  If empty OBX5 is used
"RTN","LA7VIN7C",49,0)
 ;
"RTN","LA7VIN7C",50,0)
 N X,SUB,ISQN2,TEXT,TEXT2,MAXLEN
"RTN","LA7VIN7C",51,0)
 ; Dont initialize COM
"RTN","LA7VIN7C",52,0)
 S SUB="13,0"
"RTN","LA7VIN7C",53,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7C",54,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7C",55,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7C",56,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7C",57,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7C",58,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",13,"A"),-1)+1
"RTN","LA7VIN7C",59,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7C",60,0)
 S TEXT="OBX5"
"RTN","LA7VIN7C",61,0)
 I $D(COM)=1 S TEXT="COM"
"RTN","LA7VIN7C",62,0)
 I TEXT="OBX5" S TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7C",63,0)
 I TEXT="COM" S TEXT2=$G(COM)
"RTN","LA7VIN7C",64,0)
 S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7C",65,0)
 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7C",66,0)
 ; insert separator line if needed
"RTN","LA7VIN7C",67,0)
 I ISQN2>1 D LAH(SUB,1," ") S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7C",68,0)
 ;
"RTN","LA7VIN7C",69,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7C",70,0)
 I $P(DSOBX3,"^",6) I $P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D  ;
"RTN","LA7VIN7C",71,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7C",72,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7C",73,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7C",74,0)
 . Q:X=""
"RTN","LA7VIN7C",75,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7C",76,0)
 . S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7C",77,0)
 ;
"RTN","LA7VIN7C",78,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7C",79,0)
 I $L(TEXT2)'>MAXLEN D  ;
"RTN","LA7VIN7C",80,0)
 . D LAH(SUB,1,TEXT2)
"RTN","LA7VIN7C",81,0)
 ;
"RTN","LA7VIN7C",82,0)
 I $L(TEXT2)>MAXLEN D  ;
"RTN","LA7VIN7C",83,0)
 . N I,Y,PASS
"RTN","LA7VIN7C",84,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7C",85,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7C",86,0)
 . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7C",87,0)
 . . D LAH(SUB,1,$E(TEXT2,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7C",88,0)
 . . S Y=Y+MAXLEN
"RTN","LA7VIN7C",89,0)
 . . S ISQN2=ISQN2+1
"RTN","LA7VIN7C",90,0)
 . . S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7C",91,0)
 . ;
"RTN","LA7VIN7C",92,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7C",93,0)
 Q
"RTN","LA7VIN7C",94,0)
 ;
"RTN","LA7VIN7C",95,0)
 ;
"RTN","LA7VIN7C",96,0)
30(COM) ; Process Virology Rpt Remark (Subscript 18)
"RTN","LA7VIN7C",97,0)
 ; Input
"RTN","LA7VIN7C",98,0)
 ;  COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7C",99,0)
 ;      :  If empty OBX5 is used
"RTN","LA7VIN7C",100,0)
 ;
"RTN","LA7VIN7C",101,0)
 N X,SUB,ISQN2,TEXT,TEXT2,MAXLEN
"RTN","LA7VIN7C",102,0)
 ; Dont initialize COM
"RTN","LA7VIN7C",103,0)
 S SUB="18,0"
"RTN","LA7VIN7C",104,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7C",105,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7C",106,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7C",107,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7C",108,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7C",109,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",18,"A"),-1)+1
"RTN","LA7VIN7C",110,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7C",111,0)
 S TEXT="OBX5"
"RTN","LA7VIN7C",112,0)
 I $D(COM)=1 S TEXT="COM"
"RTN","LA7VIN7C",113,0)
 I TEXT="OBX5" S TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7C",114,0)
 I TEXT="COM" S TEXT2=$G(COM)
"RTN","LA7VIN7C",115,0)
 S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7C",116,0)
 S SUB="18,"_ISQN2_",0"
"RTN","LA7VIN7C",117,0)
 ; insert separator line if needed
"RTN","LA7VIN7C",118,0)
 I ISQN2>1 D LAH(SUB,1," ") S ISQN2=ISQN2+1 S SUB="18,"_ISQN2_",0"
"RTN","LA7VIN7C",119,0)
 ;
"RTN","LA7VIN7C",120,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7C",121,0)
 I $P(DSOBX3,"^",6) I $P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D  ;
"RTN","LA7VIN7C",122,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7C",123,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7C",124,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7C",125,0)
 . Q:X=""
"RTN","LA7VIN7C",126,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7C",127,0)
 . S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7C",128,0)
 ;
"RTN","LA7VIN7C",129,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7C",130,0)
 I $L(TEXT2)'>MAXLEN D  ;
"RTN","LA7VIN7C",131,0)
 . D LAH(SUB,1,TEXT2)
"RTN","LA7VIN7C",132,0)
 I $L(TEXT2)>MAXLEN D  ;
"RTN","LA7VIN7C",133,0)
 . N I,Y,PASS
"RTN","LA7VIN7C",134,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7C",135,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7C",136,0)
 . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7C",137,0)
 . . D LAH(SUB,1,$E(TEXT2,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7C",138,0)
 . . S Y=Y+MAXLEN
"RTN","LA7VIN7C",139,0)
 . . S ISQN2=ISQN2+1
"RTN","LA7VIN7C",140,0)
 . . S SUB="18,"_ISQN2_",0"
"RTN","LA7VIN7C",141,0)
 . ;
"RTN","LA7VIN7C",142,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7C",143,0)
 Q
"RTN","LA7VIN7C",144,0)
 ;
"RTN","LA7VIN7C",145,0)
 ;
"RTN","LA7VIN7C",146,0)
NODE(LA76247,COM) ; Process series of free-text multiples.
"RTN","LA7VIN7C",147,0)
 ;
"RTN","LA7VIN7C",148,0)
 ; Handles the following 62.47 concepts and the corresponding free-text multiple in Microbiology (MI) subscript
"RTN","LA7VIN7C",149,0)
 ; Sequence Concept                           Field                                 Subscript
"RTN","LA7VIN7C",150,0)
 ;
"RTN","LA7VIN7C",151,0)
 ;   40     MYCOLOGY SMEAR/PREP               (#19.6)  MYCOLOGY SMEAR/PREP              15
"RTN","LA7VIN7C",152,0)
 ;   41     PARASITOLOGY SMEAR PREP           (#15.51) PARASITOLOGY SMEAR/PREP          24
"RTN","LA7VIN7C",153,0)
 ;   42     BACTERIOLOGY SMEAR PREP           (#11.7)  BACTERIOLOGY SMEAR/PREP          25
"RTN","LA7VIN7C",154,0)
 ;   43     BACTERIOLOGY TEST                 (#1.5)   BACTERIOLOGY TEST(S)             26
"RTN","LA7VIN7C",155,0)
 ;   44     PARASITE TEST                     (#16.4)  PARASITE TEST(S)                 27
"RTN","LA7VIN7C",156,0)
 ;   45     MYCOLOGY TEST                     (#20.4)  MYCOLOGY TEST(S)                 28
"RTN","LA7VIN7C",157,0)
 ;   46     TB TEST                           (#26.4)  TB TEST(S)                       29
"RTN","LA7VIN7C",158,0)
 ;   47     VIROLOGY TEST                     (#36.4)  VIROLOGY TESTS                   30
"RTN","LA7VIN7C",159,0)
 ;
"RTN","LA7VIN7C",160,0)
 ;  The following are currently processed from NTE segments - See LA7VIN2A (NTE/MISPC)
"RTN","LA7VIN7C",161,0)
 ;   86     MI PRELIMINARY BACT COMMENT       (#1)     PRELIMINARY BACT COMMENT         19
"RTN","LA7VIN7C",162,0)
 ;   87     MI PRELIMINARY VIROLOGY COMMENT   (#36.5)  PRELIMINARY VIROLOGY COMMENT     20
"RTN","LA7VIN7C",163,0)
 ;   88     MI PRELIMINARY PARASITE COMMENT   (#16.5)  PRELIMINARY PARASITE COMMENT     21
"RTN","LA7VIN7C",164,0)
 ;   89     MI PRELIMINARY MYCOLOGY COMMENT   (#20.5)  PRELIMINARY MYCOLOGY COMMENT     22
"RTN","LA7VIN7C",165,0)
 ;   90     MI PRELIMINARY TB COMMENT         (#26.5)  PRELIMINARY TB COMMENT           23
"RTN","LA7VIN7C",166,0)
 ;
"RTN","LA7VIN7C",167,0)
 ; Input
"RTN","LA7VIN7C",168,0)
 ;  LA76247 : ien of related concept in file #62.47
"RTN","LA7VIN7C",169,0)
 ;      COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7C",170,0)
 ;          :  If empty OBX5 is used
"RTN","LA7VIN7C",171,0)
 ;
"RTN","LA7VIN7C",172,0)
 ; Don't initialize COM
"RTN","LA7VIN7C",173,0)
 ;
"RTN","LA7VIN7C",174,0)
 N ISQN2,MAXLEN,SUB,SUBROOT,TEXT,TEXT2,X
"RTN","LA7VIN7C",175,0)
 ;
"RTN","LA7VIN7C",176,0)
 ; Determine subscript based on 62.47 concept number.
"RTN","LA7VIN7C",177,0)
 I LA76247<48 S SUBROOT=$P("15^24^25^26^27^28^29^30","^",LA76247-39)
"RTN","LA7VIN7C",178,0)
 E  S SUBROOT=$P("19^20^21^22^23","^",LA76247-85)
"RTN","LA7VIN7C",179,0)
 ;
"RTN","LA7VIN7C",180,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",SUBROOT,"A"),-1)+1
"RTN","LA7VIN7C",181,0)
 S SUB=SUBROOT_","_ISQN2_",0"
"RTN","LA7VIN7C",182,0)
 ;
"RTN","LA7VIN7C",183,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7C",184,0)
 I $G(COM)=""  S TEXT="OBX5",TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7C",185,0)
 E  S TEXT="COM",TEXT2=COM
"RTN","LA7VIN7C",186,0)
 S MAXLEN=68 ; free-text field size
"RTN","LA7VIN7C",187,0)
 ;
"RTN","LA7VIN7C",188,0)
 ; insert separator line if needed
"RTN","LA7VIN7C",189,0)
 I ISQN2>1 D
"RTN","LA7VIN7C",190,0)
 . D LAH(SUB,1," ")
"RTN","LA7VIN7C",191,0)
 . D ADDINFO(SUBROOT,ISQN2)
"RTN","LA7VIN7C",192,0)
 . S ISQN2=ISQN2+1,SUB=SUBROOT_","_ISQN2_",0"
"RTN","LA7VIN7C",193,0)
 ;
"RTN","LA7VIN7C",194,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7C",195,0)
 I $P(DSOBX3,"^",6),$P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D
"RTN","LA7VIN7C",196,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7C",197,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7C",198,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7C",199,0)
 . Q:X=""
"RTN","LA7VIN7C",200,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7C",201,0)
 . D ADDINFO(SUBROOT,ISQN2)
"RTN","LA7VIN7C",202,0)
 . S ISQN2=ISQN2+1,SUB=SUBROOT_","_ISQN2_",0"
"RTN","LA7VIN7C",203,0)
 ;
"RTN","LA7VIN7C",204,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7C",205,0)
 I $L(TEXT2)'>MAXLEN D LAH(SUB,1,TEXT2),ADDINFO(SUBROOT,ISQN2)
"RTN","LA7VIN7C",206,0)
 ;
"RTN","LA7VIN7C",207,0)
 I $L(TEXT2)>MAXLEN D
"RTN","LA7VIN7C",208,0)
 . N LA7I,LA7Y,PASS
"RTN","LA7VIN7C",209,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7C",210,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7C",211,0)
 . F LA7I=0:1:PASS-1 D
"RTN","LA7VIN7C",212,0)
 . . S LA7Y=(LA7I*MAXLEN)+1
"RTN","LA7VIN7C",213,0)
 . . D LAH(SUB,1,$E(TEXT2,LA7Y,(LA7Y+MAXLEN)-1))
"RTN","LA7VIN7C",214,0)
 . . D ADDINFO(SUBROOT,ISQN2)
"RTN","LA7VIN7C",215,0)
 . . S LA7Y=LA7Y+MAXLEN
"RTN","LA7VIN7C",216,0)
 . . S ISQN2=ISQN2+1,SUB=SUBROOT_","_ISQN2_",0"
"RTN","LA7VIN7C",217,0)
 ;
"RTN","LA7VIN7C",218,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7C",219,0)
 ;
"RTN","LA7VIN7C",220,0)
 Q
"RTN","LA7VIN7C",221,0)
 ;
"RTN","LA7VIN7C",222,0)
 ;
"RTN","LA7VIN7C",223,0)
LAH(LASUB,LAP,LAVAL) ;
"RTN","LA7VIN7C",224,0)
 ; Convenience method
"RTN","LA7VIN7C",225,0)
 D LAH^LAGEN(+$G(LWL),+$G(LA7ISQN),"MI",LASUB,LAP,LAVAL)
"RTN","LA7VIN7C",226,0)
 Q
"RTN","LA7VIN7C",227,0)
 ;
"RTN","LA7VIN7C",228,0)
 ;
"RTN","LA7VIN7C",229,0)
NTE ;
"RTN","LA7VIN7C",230,0)
 ; Convenience method
"RTN","LA7VIN7C",231,0)
 D NTE^LA7VIN71(LA76247,ISQN2)
"RTN","LA7VIN7C",232,0)
 Q
"RTN","LA7VIN7C",233,0)
 ;
"RTN","LA7VIN7C",234,0)
 ;
"RTN","LA7VIN7C",235,0)
ADDINFO(SUBSCR,ISQN2) ;
"RTN","LA7VIN7C",236,0)
 ; Add result info (lab, person, status, etc.) to comment nodes.
"RTN","LA7VIN7C",237,0)
 ;  Used for adding info to each comment line (0,0 node)
"RTN","LA7VIN7C",238,0)
 ; Inputs
"RTN","LA7VIN7C",239,0)
 ;   SUBSCR: The LAH subscript (eg 25 for Concept 42)
"RTN","LA7VIN7C",240,0)
 ;    ISQN2: The comment sequence number.
"RTN","LA7VIN7C",241,0)
 N SUB,X,Y
"RTN","LA7VIN7C",242,0)
 S SUBSCR=$G(SUBSCR)
"RTN","LA7VIN7C",243,0)
 S ISQN2=$G(ISQN2)
"RTN","LA7VIN7C",244,0)
 S SUB=SUBSCR_","_ISQN2_",0,0"
"RTN","LA7VIN7C",245,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7C",246,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7C",247,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7C",248,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7C",249,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7C",250,0)
 Q
"RTN","LA7VIN7D")
0^65^B43658444
"RTN","LA7VIN7D",1,0)
LA7VIN7D ;DALOI/JDB - Process ORU's OBX for Micro ;11/18/11  14:41
"RTN","LA7VIN7D",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VIN7D",3,0)
 ;
"RTN","LA7VIN7D",4,0)
 ; Continuation of LA7VIN7 and is only called from there.
"RTN","LA7VIN7D",5,0)
 ; Process OBX segments for "MI" subscript tests.
"RTN","LA7VIN7D",6,0)
 Q
"RTN","LA7VIN7D",7,0)
 ;
"RTN","LA7VIN7D",8,0)
8 ;
"RTN","LA7VIN7D",9,0)
 ; Process Parasite (Subscript 6)
"RTN","LA7VIN7D",10,0)
 N X,SUB,ISQN2
"RTN","LA7VIN7D",11,0)
 I LA7612<1 D  Q  ;
"RTN","LA7VIN7D",12,0)
 . ; Unknown entity in OBX-5
"RTN","LA7VIN7D",13,0)
 . N LA7VOBX5
"RTN","LA7VIN7D",14,0)
 . S LA7VOBX5=OBX5 ;needed for log
"RTN","LA7VIN7D",15,0)
 . S LA7VOBX5=$$UNESC^LA7VHLU3(LA7VOBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7D",16,0)
 . D CREATE^LA7LOG(204)
"RTN","LA7VIN7D",17,0)
 . S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7D",18,0)
 ;
"RTN","LA7VIN7D",19,0)
 S ISQN2=0
"RTN","LA7VIN7D",20,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",6,SUBID)
"RTN","LA7VIN7D",21,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",6,PSUBID)
"RTN","LA7VIN7D",22,0)
 K LA7VPSTG ; used to track ISQN3 for Parasite Stage Quantity
"RTN","LA7VIN7D",23,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7D",24,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7D",25,0)
 ;
"RTN","LA7VIN7D",26,0)
 S SUB="6,0"
"RTN","LA7VIN7D",27,0)
 D LAH(SUB,-1,"")
"RTN","LA7VIN7D",28,0)
 S SUB="6,"_ISQN2_",0"
"RTN","LA7VIN7D",29,0)
 D LAH(SUB,1,LA7612) ; #61.2 IEN
"RTN","LA7VIN7D",30,0)
 S SUB="6,"_ISQN2_",0,.01"
"RTN","LA7VIN7D",31,0)
 D LAH(SUB,1,LA7RLNC) ; LOINC
"RTN","LA7VIN7D",32,0)
 D LAH(SUB,2,LA7SCT)
"RTN","LA7VIN7D",33,0)
 S SUB="6,"_ISQN2_",0,.01,0"
"RTN","LA7VIN7D",34,0)
 D LAH(SUB,1,OBX11) ;obsv result status
"RTN","LA7VIN7D",35,0)
 S SUB="6,"_ISQN2_",0,.01,1"
"RTN","LA7VIN7D",36,0)
 D LAH(SUB,1,LA74) ; perf lab
"RTN","LA7VIN7D",37,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7D",38,0)
 D LAH(SUB,2,X) ;resp observer
"RTN","LA7VIN7D",39,0)
 S SUB="6,"_ISQN2_",.1"
"RTN","LA7VIN7D",40,0)
 D LAH(SUB,1,SUBID) ; isolate ID
"RTN","LA7VIN7D",41,0)
 D NTE
"RTN","LA7VIN7D",42,0)
 Q
"RTN","LA7VIN7D",43,0)
 ;
"RTN","LA7VIN7D",44,0)
12(COM) ;
"RTN","LA7VIN7D",45,0)
 ; Process Parasite Rpt Remark (Subscript 7)
"RTN","LA7VIN7D",46,0)
 ; Input
"RTN","LA7VIN7D",47,0)
 ;  COM : <opt> The text to use for the remark (comment)
"RTN","LA7VIN7D",48,0)
 ;      :  If empty OBX5 is used
"RTN","LA7VIN7D",49,0)
 ;
"RTN","LA7VIN7D",50,0)
 N X,SUB,ISQN2,TEXT,TEXT2,MAXLEN
"RTN","LA7VIN7D",51,0)
 ; dont initialize COM
"RTN","LA7VIN7D",52,0)
 S SUB="7,0"
"RTN","LA7VIN7D",53,0)
 D LAH(SUB,1,LA74)
"RTN","LA7VIN7D",54,0)
 S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7D",55,0)
 D LAH(SUB,2,X) ; resp obsv
"RTN","LA7VIN7D",56,0)
 D LAH(SUB,3,LA7RLNC) ; LOINC
"RTN","LA7VIN7D",57,0)
 D LAH(SUB,4,OBX11) ;obsv status
"RTN","LA7VIN7D",58,0)
 S ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",7,"A"),-1)+1
"RTN","LA7VIN7D",59,0)
 ; pull comment from COM or OBX5
"RTN","LA7VIN7D",60,0)
 S TEXT="OBX5"
"RTN","LA7VIN7D",61,0)
 I $D(COM)=1 S TEXT="COM"
"RTN","LA7VIN7D",62,0)
 I TEXT="OBX5" S TEXT2=$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH)
"RTN","LA7VIN7D",63,0)
 I TEXT="COM" S TEXT2=$G(COM)
"RTN","LA7VIN7D",64,0)
 S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7D",65,0)
 S SUB="7,"_ISQN2_",0"
"RTN","LA7VIN7D",66,0)
 ; insert separator line if needed
"RTN","LA7VIN7D",67,0)
 I ISQN2>1 D LAH(SUB,1," ") S ISQN2=ISQN2+1 S SUB="7,"_ISQN2_",0"
"RTN","LA7VIN7D",68,0)
 ;
"RTN","LA7VIN7D",69,0)
 ; if this an override insert Original Concept name
"RTN","LA7VIN7D",70,0)
 I $P(DSOBX3,"^",6) I $P(DSOBX3,"^",1)'=$P(DSOBX3,"^",6) D  ;
"RTN","LA7VIN7D",71,0)
 . S X=$P(DSOBX3,"^",6) ;original concept
"RTN","LA7VIN7D",72,0)
 . S X=$G(^LAB(62.47,X,0))
"RTN","LA7VIN7D",73,0)
 . S X=$P(X,U,1)
"RTN","LA7VIN7D",74,0)
 . Q:X=""
"RTN","LA7VIN7D",75,0)
 . D LAH(SUB,1,"["_X_"]")
"RTN","LA7VIN7D",76,0)
 . S ISQN2=ISQN2+1 S SUB="13,"_ISQN2_",0"
"RTN","LA7VIN7D",77,0)
 ;
"RTN","LA7VIN7D",78,0)
 ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7D",79,0)
 I $L(TEXT2)'>MAXLEN D  ;
"RTN","LA7VIN7D",80,0)
 . D LAH(SUB,1,TEXT2)
"RTN","LA7VIN7D",81,0)
 I $L(TEXT2)>MAXLEN D  ;
"RTN","LA7VIN7D",82,0)
 . N I,Y,PASS
"RTN","LA7VIN7D",83,0)
 . S PASS=$L(TEXT2)\MAXLEN
"RTN","LA7VIN7D",84,0)
 . S:($L(TEXT2)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7D",85,0)
 . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7D",86,0)
 . . D LAH(SUB,1,$E(TEXT2,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7D",87,0)
 . . S Y=Y+MAXLEN
"RTN","LA7VIN7D",88,0)
 . . S ISQN2=ISQN2+1
"RTN","LA7VIN7D",89,0)
 . . S SUB="7,"_ISQN2_",0"
"RTN","LA7VIN7D",90,0)
 . ;
"RTN","LA7VIN7D",91,0)
 D NTE^LA7VIN71(LA76247,ISQN)
"RTN","LA7VIN7D",92,0)
 Q
"RTN","LA7VIN7D",93,0)
 ;
"RTN","LA7VIN7D",94,0)
13 ;
"RTN","LA7VIN7D",95,0)
 ; Process Parasite's Stage
"RTN","LA7VIN7D",96,0)
 N X,SUB,ISQN2,ISQN3,SEQ2,LADATA,STAGE
"RTN","LA7VIN7D",97,0)
 S ISQN2=0
"RTN","LA7VIN7D",98,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",6,SUBID)
"RTN","LA7VIN7D",99,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,1,LA7ISQN,"MI",6,PSUBID)
"RTN","LA7VIN7D",100,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7D",101,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7D",102,0)
 ;
"RTN","LA7VIN7D",103,0)
 D LAH("6,0",-1,"")
"RTN","LA7VIN7D",104,0)
 S SUB="6,"_ISQN2_",1,0"
"RTN","LA7VIN7D",105,0)
 D LAH(SUB,1,"@") ;@=force empty field
"RTN","LA7VIN7D",106,0)
 S ISQN3=+$O(^LAH(LWL,1,LA7ISQN,"MI",6,ISQN2,1,"A"),-1)+1
"RTN","LA7VIN7D",107,0)
 S LA7VPSTG=ISQN3 ; save this for processing parasite stage count
"RTN","LA7VIN7D",108,0)
 S STAGE=""
"RTN","LA7VIN7D",109,0)
 K LADATA
"RTN","LA7VIN7D",110,0)
 I $G(LA7SCT)'="" D  ;
"RTN","LA7VIN7D",111,0)
 . S STAGE=$$SCT2PSTG^LA7VHLU6(LA7SCT,"","SCT",DT)
"RTN","LA7VIN7D",112,0)
 . D CHK^DIE(63.35,.01,"",STAGE,.LADATA)
"RTN","LA7VIN7D",113,0)
 . I LADATA="^" S STAGE=""
"RTN","LA7VIN7D",114,0)
 I $G(LA7SCT)="" D  ;
"RTN","LA7VIN7D",115,0)
 . ; Try Set of Codes translation
"RTN","LA7VIN7D",116,0)
 . D CHK^DIE(63.35,.01,"",OBX5,.LADATA)
"RTN","LA7VIN7D",117,0)
 . I LADATA'="^" S STAGE=LADATA
"RTN","LA7VIN7D",118,0)
 ;
"RTN","LA7VIN7D",119,0)
 ; file if stage found
"RTN","LA7VIN7D",120,0)
 I STAGE'="" D  ;
"RTN","LA7VIN7D",121,0)
 . N STOP,SEQ
"RTN","LA7VIN7D",122,0)
 . S SEQ=0
"RTN","LA7VIN7D",123,0)
 . S X=""
"RTN","LA7VIN7D",124,0)
 . S STOP=0
"RTN","LA7VIN7D",125,0)
 . ; Find existing stage entry if already in LAH
"RTN","LA7VIN7D",126,0)
 . F  S SEQ=$O(^LAH(LWL,1,LA7ISQN,"MI",6,ISQN2,1,SEQ)) Q:'SEQ  D  Q:STOP  ;
"RTN","LA7VIN7D",127,0)
 . . S X=$G(^LAH(LWL,1,LA7ISQN,"MI",6,ISQN2,1,SEQ,0))
"RTN","LA7VIN7D",128,0)
 . . I $P(X,"^",1)=STAGE S STOP=1 S ISQN3=SEQ
"RTN","LA7VIN7D",129,0)
 . ;
"RTN","LA7VIN7D",130,0)
 . S LA7VPSTG=ISQN3 ; save for processing Parasite Stage Qty
"RTN","LA7VIN7D",131,0)
 . S SUB="6,"_ISQN2_",1,"_ISQN3_",0"
"RTN","LA7VIN7D",132,0)
 . S X=STAGE
"RTN","LA7VIN7D",133,0)
 . D LAH(SUB,1,X)
"RTN","LA7VIN7D",134,0)
 . ;
"RTN","LA7VIN7D",135,0)
 . S SUB="6,"_ISQN2_",1,"_ISQN3_",0,.01"
"RTN","LA7VIN7D",136,0)
 . I $G(LA7NLT)'="" D LAH(SUB,2,LA7NLT)
"RTN","LA7VIN7D",137,0)
 . I $G(LA7SCT)'="" D LAH(SUB,3,LA7SCT) ;SCT stage code
"RTN","LA7VIN7D",138,0)
 . ;
"RTN","LA7VIN7D",139,0)
 . S SUB="6,"_ISQN2_",1,"_ISQN3_",0,.01,0"
"RTN","LA7VIN7D",140,0)
 . D LAH(SUB,1,OBX11) ;obsv status
"RTN","LA7VIN7D",141,0)
 . S SUB="6,"_ISQN2_",1,"_ISQN3_",0,.01,1"
"RTN","LA7VIN7D",142,0)
 . D LAH(SUB,1,LA74) ; perf lab
"RTN","LA7VIN7D",143,0)
 . S X=$P(LA7RO,"^",3)
"RTN","LA7VIN7D",144,0)
 . D LAH(SUB,2,X) ; resp observer
"RTN","LA7VIN7D",145,0)
 ;
"RTN","LA7VIN7D",146,0)
 I STAGE="" I LADATA="^" D  ;
"RTN","LA7VIN7D",147,0)
 . S ISQN3=""
"RTN","LA7VIN7D",148,0)
 . S X=SUBID
"RTN","LA7VIN7D",149,0)
 . S:X="" X=$G(PSUBID)
"RTN","LA7VIN7D",150,0)
 . S:X'="" X="["_X_"]UNKNOWN STAGE QTY: "
"RTN","LA7VIN7D",151,0)
 . D 12(X_$$UNESC^LA7VHLU3(OBX5,LA7FS_LA7ECH))
"RTN","LA7VIN7D",152,0)
 . Q
"RTN","LA7VIN7D",153,0)
 . ;
"RTN","LA7VIN7D",154,0)
 ;
"RTN","LA7VIN7D",155,0)
 ; for NTE info need to pass back ISQN3 also
"RTN","LA7VIN7D",156,0)
 I ISQN3 S LA7RMK(0,0)=LA76247_"^"_ISQN2_","_ISQN3
"RTN","LA7VIN7D",157,0)
 I 'ISQN3 D NTE
"RTN","LA7VIN7D",158,0)
 Q
"RTN","LA7VIN7D",159,0)
 ;
"RTN","LA7VIN7D",160,0)
14 ;
"RTN","LA7VIN7D",161,0)
 ; Process Parasite Stage Quantity
"RTN","LA7VIN7D",162,0)
 N X,SUB,ISQN2,ISQN3
"RTN","LA7VIN7D",163,0)
 S ISQN2=0
"RTN","LA7VIN7D",164,0)
 I SUBID'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",6,SUBID)
"RTN","LA7VIN7D",165,0)
 I SUBID="" I $G(PSUBID)'="" S ISQN2=$$SUBID^LAGEN(LWL,LA7ISQN,"MI",6,PSUBID)
"RTN","LA7VIN7D",166,0)
 I 'ISQN2 D  Q  ;
"RTN","LA7VIN7D",167,0)
 . D SUBIDERR^LA7VIN71
"RTN","LA7VIN7D",168,0)
 ;
"RTN","LA7VIN7D",169,0)
 ; use associated "Parasite Stage" ISQN3 from previous OBX
"RTN","LA7VIN7D",170,0)
 S ISQN3=+$G(LA7VPSTG) ;top level variable
"RTN","LA7VIN7D",171,0)
 ; Stage filed so now qty can be filed
"RTN","LA7VIN7D",172,0)
 I ISQN3 D  ;
"RTN","LA7VIN7D",173,0)
 . S SUB="6,"_ISQN2_",1,"_ISQN3_",0"
"RTN","LA7VIN7D",174,0)
 . D LAH(SUB,2,OBX5)
"RTN","LA7VIN7D",175,0)
 ;
"RTN","LA7VIN7D",176,0)
 I 'ISQN3 D  ;
"RTN","LA7VIN7D",177,0)
 . ;file as comment in #63.36
"RTN","LA7VIN7D",178,0)
 . ;if we couldnt file the stage we cant file the qty
"RTN","LA7VIN7D",179,0)
 . N MAXLEN,SEQ2
"RTN","LA7VIN7D",180,0)
 . S MAXLEN=68 ; COMMENTS field size
"RTN","LA7VIN7D",181,0)
 . S SEQ2=+$O(^LAH(LWL,LA7ISQN,"MI",ISQN2,7,"A"),-1)+1
"RTN","LA7VIN7D",182,0)
 . S SUB="7,"_SEQ2_",0"
"RTN","LA7VIN7D",183,0)
 . ; insert separator line if needed
"RTN","LA7VIN7D",184,0)
 . I SEQ2>1 D LAH(SUB,1,"") S SEQ2=SEQ2+1 S SUB="7,"_SEQ2_",0"
"RTN","LA7VIN7D",185,0)
 . ; modify MAXLEN for prefixed Subid
"RTN","LA7VIN7D",186,0)
 . S X=SUBID
"RTN","LA7VIN7D",187,0)
 . S:X="" X=$G(PSUBID)
"RTN","LA7VIN7D",188,0)
 . S:X'="" X="["_X_"]"
"RTN","LA7VIN7D",189,0)
 . S X=X_"UNKNOWN STAGE QTY: "
"RTN","LA7VIN7D",190,0)
 . I $L(X_OBX5)'>MAXLEN D  ;
"RTN","LA7VIN7D",191,0)
 . . D LAH(SUB,1,X_OBX5)
"RTN","LA7VIN7D",192,0)
 . I $L(X_OBX5)>MAXLEN D  ;
"RTN","LA7VIN7D",193,0)
 . . N I,Y,PASS
"RTN","LA7VIN7D",194,0)
 . . S X=X_OBX5
"RTN","LA7VIN7D",195,0)
 . . S PASS=$L(X)\MAXLEN
"RTN","LA7VIN7D",196,0)
 . . S:($L(X)#MAXLEN)>0 PASS=PASS+1
"RTN","LA7VIN7D",197,0)
 . . F I=0:1:PASS-1 S Y=(I*MAXLEN)+1 D  ;
"RTN","LA7VIN7D",198,0)
 . . . I I=0 D LAH(SUB,1,$E(X,Y,(Y+MAXLEN)-1)) ;subid prefix
"RTN","LA7VIN7D",199,0)
 . . . I I>0 D LAH(SUB,1,$E(X,Y,(Y+MAXLEN)-1))
"RTN","LA7VIN7D",200,0)
 . . . S Y=Y+MAXLEN
"RTN","LA7VIN7D",201,0)
 . . . S SEQ2=SEQ2+1
"RTN","LA7VIN7D",202,0)
 . . . S SUB="7,"_SEQ2_",0"
"RTN","LA7VIN7D",203,0)
 . . ;
"RTN","LA7VIN7D",204,0)
 . ;
"RTN","LA7VIN7D",205,0)
 ;
"RTN","LA7VIN7D",206,0)
 ; For NTE need to send back ISQN3 also
"RTN","LA7VIN7D",207,0)
 I ISQN3 S LA7RMK(0,0)=LA76247_"^"_ISQN2_","_ISQN3
"RTN","LA7VIN7D",208,0)
 I 'ISQN3 D NTE
"RTN","LA7VIN7D",209,0)
 Q
"RTN","LA7VIN7D",210,0)
 ;
"RTN","LA7VIN7D",211,0)
DDERR ;
"RTN","LA7VIN7D",212,0)
 ; If unknown storage location flag error
"RTN","LA7VIN7D",213,0)
 ; No File #63 field mapping found for OBX-3
"RTN","LA7VIN7D",214,0)
 N LA7OBX3
"RTN","LA7VIN7D",215,0)
 S LA7OBX3=OBX3 ;needed for log
"RTN","LA7VIN7D",216,0)
 D CREATE^LA7LOG(201)
"RTN","LA7VIN7D",217,0)
 S LA7KILAH=1 S LA7QUIT=2
"RTN","LA7VIN7D",218,0)
 Q
"RTN","LA7VIN7D",219,0)
 ;
"RTN","LA7VIN7D",220,0)
LAH(LASUB,LAP,LAVAL) ;
"RTN","LA7VIN7D",221,0)
 ; Convenience method
"RTN","LA7VIN7D",222,0)
 I LAP'=-1 I LAVAL="" Q
"RTN","LA7VIN7D",223,0)
 D LAH^LAGEN(+$G(LWL),+$G(LA7ISQN),"MI",LASUB,LAP,LAVAL)
"RTN","LA7VIN7D",224,0)
 Q
"RTN","LA7VIN7D",225,0)
 ;
"RTN","LA7VIN7D",226,0)
NTE ;
"RTN","LA7VIN7D",227,0)
 ; Convenience method
"RTN","LA7VIN7D",228,0)
 D NTE^LA7VIN71(LA76247,ISQN2)
"RTN","LA7VIN7D",229,0)
 Q
"RTN","LA7VLCM")
0^67^B18946807
"RTN","LA7VLCM",1,0)
LA7VLCM ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  09:46
"RTN","LA7VLCM",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM",3,0)
 ;
"RTN","LA7VLCM",4,0)
 Q
"RTN","LA7VLCM",5,0)
 ;
"RTN","LA7VLCM",6,0)
PS ;
"RTN","LA7VLCM",7,0)
 ; Called from OPTION LA7V 62.47 PRINT SUSC
"RTN","LA7VLCM",8,0)
 ; Print #62.47 Susc
"RTN","LA7VLCM",9,0)
 D E1^LA7VLCM6
"RTN","LA7VLCM",10,0)
 Q
"RTN","LA7VLCM",11,0)
 ;
"RTN","LA7VLCM",12,0)
PL ;
"RTN","LA7VLCM",13,0)
 ; Called from OPTION LA7V 62.47 PRINT LOCAL
"RTN","LA7VLCM",14,0)
 ; Print #62.47 local codes
"RTN","LA7VLCM",15,0)
 D E2^LA7VLCM6
"RTN","LA7VLCM",16,0)
 Q
"RTN","LA7VLCM",17,0)
 ;
"RTN","LA7VLCM",18,0)
PMC ;
"RTN","LA7VLCM",19,0)
 ; Called from OPTION LA7V 62.47 PRINT BY MSG CONFIG
"RTN","LA7VLCM",20,0)
 ; Print by Msg Config
"RTN","LA7VLCM",21,0)
 D E1^LA7VLCM2
"RTN","LA7VLCM",22,0)
 Q
"RTN","LA7VLCM",23,0)
 ;
"RTN","LA7VLCM",24,0)
CMC ;
"RTN","LA7VLCM",25,0)
 ; Called from OPTION LA7V 62.47 CLONE MSG CONFIG
"RTN","LA7VLCM",26,0)
 ; Clone a Message Configuration
"RTN","LA7VLCM",27,0)
 D CLONE^LA7VLCM3
"RTN","LA7VLCM",28,0)
 Q
"RTN","LA7VLCM",29,0)
 ;
"RTN","LA7VLCM",30,0)
CSM ;
"RTN","LA7VLCM",31,0)
 ; Called from OPTION LA7V 62.47 PRINT CS MISMATCHES
"RTN","LA7VLCM",32,0)
 ; Code Set Mismatches
"RTN","LA7VLCM",33,0)
 D E2^LA7VLCM2
"RTN","LA7VLCM",34,0)
 Q
"RTN","LA7VLCM",35,0)
 ;
"RTN","LA7VLCM",36,0)
FI ;
"RTN","LA7VLCM",37,0)
 ; Called from OPTION LA7V 62.47 FIND IDENTIFIER
"RTN","LA7VLCM",38,0)
 ; Find Identifier
"RTN","LA7VLCM",39,0)
 D E1^LA7VLCM4
"RTN","LA7VLCM",40,0)
 Q
"RTN","LA7VLCM",41,0)
 ;
"RTN","LA7VLCM",42,0)
DOD6247 ;
"RTN","LA7VLCM",43,0)
 ; Called from option LA7V 62.47 ADD DOD
"RTN","LA7VLCM",44,0)
 D DOD6247^LA7VLCM7
"RTN","LA7VLCM",45,0)
 Q
"RTN","LA7VLCM",46,0)
 ;
"RTN","LA7VLCM",47,0)
MAPABS ;
"RTN","LA7VLCM",48,0)
 ; Called from option LA7V 62.47 MAP SUSCS
"RTN","LA7VLCM",49,0)
 D MAPABS^LA7VLCM7
"RTN","LA7VLCM",50,0)
 Q
"RTN","LA7VLCM",51,0)
 ;
"RTN","LA7VLCM",52,0)
ES ;
"RTN","LA7VLCM",53,0)
 ; Called from OPTION LA7V 62.47 EDIT SUSC
"RTN","LA7VLCM",54,0)
 ; Edit Susceptibility
"RTN","LA7VLCM",55,0)
 ; Allow user to select either BACT or MYCO Susceptibility concept.
"RTN","LA7VLCM",56,0)
 ; Within identifier multiple allow selection of identifiers that
"RTN","LA7VLCM",57,0)
 ; are:
"RTN","LA7VLCM",58,0)
 ;  LOINC or (Non LOINC and local (national standard=no))
"RTN","LA7VLCM",59,0)
 ;    and Purpose is RESULT CODE.
"RTN","LA7VLCM",60,0)
 ;  Allow editing of field #2.1 Related entry - must be selectable
"RTN","LA7VLCM",61,0)
 ;    only from file #62.06 (ANTIMICROBIAL SUSCEPTIBILITY)
"RTN","LA7VLCM",62,0)
 ;  If local code then field #2.2 for specific related message
"RTN","LA7VLCM",63,0)
 ;    configuration (local codes are interface specific).
"RTN","LA7VLCM",64,0)
 ;
"RTN","LA7VLCM",65,0)
 N DIC,LROUT,D,DA,DIE,DR,LOCK,I,LALOCK
"RTN","LA7VLCM",66,0)
 S LROUT=0
"RTN","LA7VLCM",67,0)
 F  D  Q:LROUT  ;
"RTN","LA7VLCM",68,0)
 . K DIC,Y
"RTN","LA7VLCM",69,0)
 . S LROUT=0
"RTN","LA7VLCM",70,0)
 . S DIC=62.47
"RTN","LA7VLCM",71,0)
 . S DIC(0)="AEMQ"
"RTN","LA7VLCM",72,0)
 . S DIC("S")="I +Y=7!(+Y=21)"
"RTN","LA7VLCM",73,0)
 . D ^DIC
"RTN","LA7VLCM",74,0)
 . K DIC
"RTN","LA7VLCM",75,0)
 . S:Y'>0 LROUT=1
"RTN","LA7VLCM",76,0)
 . Q:LROUT
"RTN","LA7VLCM",77,0)
 . N LROUT
"RTN","LA7VLCM",78,0)
 . K DA,DIC,DIE,DR,LOCK,I,D
"RTN","LA7VLCM",79,0)
 . S LROUT=0
"RTN","LA7VLCM",80,0)
 . S DA(1)=+Y
"RTN","LA7VLCM",81,0)
 . F  D  Q:LROUT  W ! ;
"RTN","LA7VLCM",82,0)
 . . S DIC="^LAB(62.47,"_DA(1)_",1,"
"RTN","LA7VLCM",83,0)
 . . S DIC(0)="AEQBCV"
"RTN","LA7VLCM",84,0)
 . . S DIC("S")="N LRZ,LRCS,LRP,LRSTD S LRZ=$G(^LAB(62.47,DA(1),1,+Y,0)) S LRCS=$P(LRZ,""^"",2) S LRP=$P(LRZ,""^"",3) S LRSTD=$P(LRZ,""^"",5) I LRP=1 I LRCS=""LN""!(LRCS'=""LN""&(LRSTD=0))"
"RTN","LA7VLCM",85,0)
 . . S D="B"
"RTN","LA7VLCM",86,0)
 . . D MIX^DIC1
"RTN","LA7VLCM",87,0)
 . . K DIC
"RTN","LA7VLCM",88,0)
 . . S:Y'>0 LROUT=1
"RTN","LA7VLCM",89,0)
 . . Q:LROUT
"RTN","LA7VLCM",90,0)
 . . S DA=+Y
"RTN","LA7VLCM",91,0)
 . . S LOCK=0
"RTN","LA7VLCM",92,0)
 . . S LALOCK=$NA(^LAB(62.47,DA(1),1,DA))
"RTN","LA7VLCM",93,0)
 . . S LOCK=$$GETLOCK^LRUTIL(LALOCK,10,1)
"RTN","LA7VLCM",94,0)
 . . I 'LOCK D  Q  ;
"RTN","LA7VLCM",95,0)
 . . . W !,"Could not lock File #62.47 subfile's entry."
"RTN","LA7VLCM",96,0)
 . . K DIC,Y
"RTN","LA7VLCM",97,0)
 . . S DIE="^LAB(62.47,"_DA(1)_",1,"
"RTN","LA7VLCM",98,0)
 . . K DIC("V")
"RTN","LA7VLCM",99,0)
 . . S DIE("NO^")="OUTOK"
"RTN","LA7VLCM",100,0)
 . . S DR="S DIC(""V"")=""I +Y(0)=62.06"";W ""  "",$$LNFSN^LA7VLCM(DA(1),DA);2.1;K DIC(""V"");I $P($G(^LAB(62.47,DA(1),1,DA,0)),""^"",5)=0 S Y=2.2;"
"RTN","LA7VLCM",101,0)
 . . D ^DIE
"RTN","LA7VLCM",102,0)
 . . L -@LALOCK
"RTN","LA7VLCM",103,0)
 . ;
"RTN","LA7VLCM",104,0)
 Q
"RTN","LA7VLCM",105,0)
 ;
"RTN","LA7VLCM",106,0)
AEL ;
"RTN","LA7VLCM",107,0)
 ; Called from OPTION LA7V 62.47 LOCAL IDENTIFIER
"RTN","LA7VLCM",108,0)
 ; Add/Edit Local Codes
"RTN","LA7VLCM",109,0)
 ; Allow selection of any concept.
"RTN","LA7VLCM",110,0)
 ; Local entries to be added at an internal entry number >1000000
"RTN","LA7VLCM",111,0)
 ;   with the IDENTIFIER multiple.
"RTN","LA7VLCM",112,0)
 ; Within identifier multiple allow selection and/or addition of
"RTN","LA7VLCM",113,0)
 ;   non-standard code.
"RTN","LA7VLCM",114,0)
 ; When adding entry field .05 NATIONAL STANDARD will be set to NO
"RTN","LA7VLCM",115,0)
 ; Edit fields:
"RTN","LA7VLCM",116,0)
 ;   .01 -- IDENTIFIER
"RTN","LA7VLCM",117,0)
 ;   .02 -- CODING SYSTEM (only allow selection of "L" and "99xxx"
"RTN","LA7VLCM",118,0)
 ;          when non-standard)
"RTN","LA7VLCM",119,0)
 ;   .03 -- PURPOSE
"RTN","LA7VLCM",120,0)
 ;   2.1 -- RELATED ENTRY
"RTN","LA7VLCM",121,0)
 ;   2.2 -- RELATED MESSAGE CONFIGURATION
"RTN","LA7VLCM",122,0)
 ;
"RTN","LA7VLCM",123,0)
 N I,DIC,DIE,X,D,DR,DA,DINUM,DLAYGO,DIDEL,NEXTID,LOCK
"RTN","LA7VLCM",124,0)
 N LROUT,R6247,LALOCK
"RTN","LA7VLCM",125,0)
 ; Ask concept
"RTN","LA7VLCM",126,0)
 F  D  Q:LROUT  ;
"RTN","LA7VLCM",127,0)
 . S LROUT=0
"RTN","LA7VLCM",128,0)
 . K DIC,Y
"RTN","LA7VLCM",129,0)
 . S DIC=62.47
"RTN","LA7VLCM",130,0)
 . S DIC(0)="AEMQ"
"RTN","LA7VLCM",131,0)
 . D ^DIC
"RTN","LA7VLCM",132,0)
 . S:Y'>0 LROUT=1
"RTN","LA7VLCM",133,0)
 . Q:LROUT
"RTN","LA7VLCM",134,0)
 . N LROUT
"RTN","LA7VLCM",135,0)
 . K DIC,DIE,X,D,DR,DA,DINUM,DLAYGO,DIDEL,NEXTID,LOCK
"RTN","LA7VLCM",136,0)
 . S LOCK=0
"RTN","LA7VLCM",137,0)
 . S R6247=+Y
"RTN","LA7VLCM",138,0)
 . S LALOCK=$NA(^LAB(62.47,R6247))
"RTN","LA7VLCM",139,0)
 . S LOCK=$$GETLOCK^LRUTIL(LALOCK,10,1)
"RTN","LA7VLCM",140,0)
 . I 'LOCK D  Q  ;
"RTN","LA7VLCM",141,0)
 . . W !,"Could not lock #62.47 file."
"RTN","LA7VLCM",142,0)
 . F  D  Q:LROUT  ;
"RTN","LA7VLCM",143,0)
 . . K D,DIC,Y,DIE,DINUM,DIDEL,DLAYGO
"RTN","LA7VLCM",144,0)
 . . S DA(1)=R6247
"RTN","LA7VLCM",145,0)
 . . S LROUT=0
"RTN","LA7VLCM",146,0)
 . . ;; Find or add new entry
"RTN","LA7VLCM",147,0)
 . . S DIC="^LAB(62.47,"_DA(1)_",1,"
"RTN","LA7VLCM",148,0)
 . . S DIC(0)="ABELQV"
"RTN","LA7VLCM",149,0)
 . . S DIC("S")="I $P($G(^LAB(62.47,DA(1),1,+Y,0)),""^"",5)'=1"
"RTN","LA7VLCM",150,0)
 . . S DLAYGO=62.4701
"RTN","LA7VLCM",151,0)
 . . S D="B^"
"RTN","LA7VLCM",152,0)
 . . D MIX^DIC1
"RTN","LA7VLCM",153,0)
 . . K DIC
"RTN","LA7VLCM",154,0)
 . . I Y'>0 D  Q  ;
"RTN","LA7VLCM",155,0)
 . . . L -@LALOCK ;^LAB(62.47,DA(1))
"RTN","LA7VLCM",156,0)
 . . . S LROUT=1
"RTN","LA7VLCM",157,0)
 . . S DA=+Y
"RTN","LA7VLCM",158,0)
 . . K DIE,Y,DINUM
"RTN","LA7VLCM",159,0)
 . . S DIE="^LAB(62.47,"_DA(1)_",1,"
"RTN","LA7VLCM",160,0)
 . . S DIE("NO^")="OUTOK"
"RTN","LA7VLCM",161,0)
 . . S DIDEL=62.4701
"RTN","LA7VLCM",162,0)
 . . S DR=".01;.05////0;.02;.03;.04;2.1;2.2"
"RTN","LA7VLCM",163,0)
 . . D ^DIE
"RTN","LA7VLCM",164,0)
 . . W !
"RTN","LA7VLCM",165,0)
 . L -@LALOCK ;-^LAB(62.47,DA(1))
"RTN","LA7VLCM",166,0)
 . W !
"RTN","LA7VLCM",167,0)
 Q
"RTN","LA7VLCM",168,0)
 ;
"RTN","LA7VLCM",169,0)
LNFSN(R6247,R624701) ;
"RTN","LA7VLCM",170,0)
 ; Returns the LOINC FSN for specified entry
"RTN","LA7VLCM",171,0)
 ; Inputs
"RTN","LA7VLCM",172,0)
 ;   R6247 : File #62.47 IEN
"RTN","LA7VLCM",173,0)
 ; R624701 : Subfile #62.4701 IEN
"RTN","LA7VLCM",174,0)
 ; Output
"RTN","LA7VLCM",175,0)
 ;  Null or the LOINC code's Fully Specified Name (FSN)
"RTN","LA7VLCM",176,0)
 N X,CODE,SYS,FSN
"RTN","LA7VLCM",177,0)
 S FSN=""
"RTN","LA7VLCM",178,0)
 S X=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA7VLCM",179,0)
 S CODE=$P(X,"^",1)
"RTN","LA7VLCM",180,0)
 S SYS=$P(X,"^",2)
"RTN","LA7VLCM",181,0)
 I SYS="LN" D  ;
"RTN","LA7VLCM",182,0)
 . S FSN=$$LOINCFSN^LA7VLCM1(CODE)
"RTN","LA7VLCM",183,0)
 Q FSN
"RTN","LA7VLCM1")
0^68^B43117815
"RTN","LA7VLCM1",1,0)
LA7VLCM1 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  10:09
"RTN","LA7VLCM1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM1",3,0)
 ;
"RTN","LA7VLCM1",4,0)
 Q
"RTN","LA7VLCM1",5,0)
 ;
"RTN","LA7VLCM1",6,0)
QUE(ZTRTN,ZTDESC,ZTSAVE) ;
"RTN","LA7VLCM1",7,0)
 ; QUEUE a routine 
"RTN","LA7VLCM1",8,0)
 ; Returns -1 if POP=1, 0 if not queued, or the QUEUED task #
"RTN","LA7VLCM1",9,0)
 N %ZIS,POP,QUEUED,Y
"RTN","LA7VLCM1",10,0)
 S QUEUED=0
"RTN","LA7VLCM1",11,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LA7VLCM1",12,0)
 I POP D HOME^%ZIS Q -1
"RTN","LA7VLCM1",13,0)
 I $D(IO("Q")) D  ;
"RTN","LA7VLCM1",14,0)
 . ;S QUEUED=1
"RTN","LA7VLCM1",15,0)
 . S QUEUED=$$TASK(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","LA7VLCM1",16,0)
 Q QUEUED
"RTN","LA7VLCM1",17,0)
 ;
"RTN","LA7VLCM1",18,0)
INIT ;
"RTN","LA7VLCM1",19,0)
 ; General INIT for all reports
"RTN","LA7VLCM1",20,0)
 S NOW=$$NOW^XLFDT()
"RTN","LA7VLCM1",21,0)
 S (EXIT,PAGE)=0
"RTN","LA7VLCM1",22,0)
 Q
"RTN","LA7VLCM1",23,0)
 ;
"RTN","LA7VLCM1",24,0)
DFL(R6247,DFL) ;
"RTN","LA7VLCM1",25,0)
 ; Data Field Length
"RTN","LA7VLCM1",26,0)
 ; Inputs
"RTN","LA7VLCM1",27,0)
 ;   R6247  File #62.47 IEN
"RTN","LA7VLCM1",28,0)
 ;     DFL <byref>  See Outputs
"RTN","LA7VLCM1",29,0)
 ; Outputs
"RTN","LA7VLCM1",30,0)
 ;     DFL  DFL array holds the max field sizes for each field
"RTN","LA7VLCM1",31,0)
 ;
"RTN","LA7VLCM1",32,0)
 N X,I
"RTN","LA7VLCM1",33,0)
 ; find max length of .001 field
"RTN","LA7VLCM1",34,0)
 S X=$O(^LAB(62.47,R6247,1,"A"),-1)
"RTN","LA7VLCM1",35,0)
 S X=$L(X)
"RTN","LA7VLCM1",36,0)
 S DFL(1)=$$BIG($G(DFL(1)),X)
"RTN","LA7VLCM1",37,0)
 ; find max length of .01 field
"RTN","LA7VLCM1",38,0)
 S X=0
"RTN","LA7VLCM1",39,0)
 S I="" F  S I=$O(^LAB(62.47,R6247,1,"B",I)) Q:I=""  D  ;
"RTN","LA7VLCM1",40,0)
 . S:$L(I)>X X=$L(I)
"RTN","LA7VLCM1",41,0)
 S DFL(2)=$$BIG($G(DFL(2)),X)
"RTN","LA7VLCM1",42,0)
 ; find max length of .02 field
"RTN","LA7VLCM1",43,0)
 S X=0
"RTN","LA7VLCM1",44,0)
 S I="" F  S I=$O(^LAB(62.47,R6247,1,"C",I)) Q:I=""  D  ;
"RTN","LA7VLCM1",45,0)
 . S:$L(I)>X X=$L(I)
"RTN","LA7VLCM1",46,0)
 S DFL(3)=$$BIG($G(DFL(3)),X)
"RTN","LA7VLCM1",47,0)
 S DFL(4)=6
"RTN","LA7VLCM1",48,0)
 Q
"RTN","LA7VLCM1",49,0)
 ;
"RTN","LA7VLCM1",50,0)
HDRCAP(HDRCAP) ;
"RTN","LA7VLCM1",51,0)
 ; Header Captions
"RTN","LA7VLCM1",52,0)
 ;  Inputs
"RTN","LA7VLCM1",53,0)
 ;     HDRCAP <byref>  See Outputs
"RTN","LA7VLCM1",54,0)
 ; Outputs
"RTN","LA7VLCM1",55,0)
 ;     HDRCAP  Holds the column titles
"RTN","LA7VLCM1",56,0)
 ;
"RTN","LA7VLCM1",57,0)
 S HDRCAP(1)="SEQ"
"RTN","LA7VLCM1",58,0)
 S HDRCAP(2)="ID"
"RTN","LA7VLCM1",59,0)
 S HDRCAP(3)="SYSTEM"
"RTN","LA7VLCM1",60,0)
 S HDRCAP(4)="PURPOSE"
"RTN","LA7VLCM1",61,0)
 S HDRCAP(5)="NATL"
"RTN","LA7VLCM1",62,0)
 Q
"RTN","LA7VLCM1",63,0)
 ;
"RTN","LA7VLCM1",64,0)
SUB(DFL,R6247,SCR,R624701) ;
"RTN","LA7VLCM1",65,0)
 ; Driver for displaying one #62.4701 subfile entry or
"RTN","LA7VLCM1",66,0)
 ; an entire #62.47 entry.
"RTN","LA7VLCM1",67,0)
 ; Inputs
"RTN","LA7VLCM1",68,0)
 ;     DFL
"RTN","LA7VLCM1",69,0)
 ;   R6247
"RTN","LA7VLCM1",70,0)
 ;     SCR
"RTN","LA7VLCM1",71,0)
 ; R624701
"RTN","LA7VLCM1",72,0)
 ;
"RTN","LA7VLCM1",73,0)
 N I,X,Y,DF,IENS,NODE
"RTN","LA7VLCM1",74,0)
 S SCR=$G(SCR)
"RTN","LA7VLCM1",75,0)
 S R624701=+$G(R624701)
"RTN","LA7VLCM1",76,0)
 I R624701 D  Q  ;
"RTN","LA7VLCM1",77,0)
 . I ($Y+EOP)>IOSL D HDR(.DFL,$G(TITLE))
"RTN","LA7VLCM1",78,0)
 . Q:EXIT
"RTN","LA7VLCM1",79,0)
 . D DF(R6247,R624701,.DF)
"RTN","LA7VLCM1",80,0)
 . D SHOW(.DF,.DFL,SCR)
"RTN","LA7VLCM1",81,0)
 . Q:EXIT
"RTN","LA7VLCM1",82,0)
 ;
"RTN","LA7VLCM1",83,0)
 S NODE="^LAB(62.47,R6247,1,""B"")"
"RTN","LA7VLCM1",84,0)
 I 'R624701  F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,4)'="B"  Q:$QS(NODE,3)'=1  Q:$QS(NODE,2)'=R6247  D  Q:EXIT  ;
"RTN","LA7VLCM1",85,0)
 . S R624701=$QS(NODE,6)
"RTN","LA7VLCM1",86,0)
 . I ($Y+EOP)>IOSL D HDR(.DFL,$G(TITLE))
"RTN","LA7VLCM1",87,0)
 . Q:EXIT
"RTN","LA7VLCM1",88,0)
 . D DF(R6247,R624701,.DF)
"RTN","LA7VLCM1",89,0)
 . D SHOW(.DF,.DFL,SCR)
"RTN","LA7VLCM1",90,0)
 . Q:EXIT
"RTN","LA7VLCM1",91,0)
 Q
"RTN","LA7VLCM1",92,0)
 ;
"RTN","LA7VLCM1",93,0)
DF(R6247,R624701,DF) ;
"RTN","LA7VLCM1",94,0)
 ; Setup and populate the Data Fields array
"RTN","LA7VLCM1",95,0)
 ; Inputs
"RTN","LA7VLCM1",96,0)
 ;   R6247
"RTN","LA7VLCM1",97,0)
 ; R624701
"RTN","LA7VLCM1",98,0)
 ;      DF <byref>
"RTN","LA7VLCM1",99,0)
 ; Outputs
"RTN","LA7VLCM1",100,0)
 ;      DF
"RTN","LA7VLCM1",101,0)
 ;
"RTN","LA7VLCM1",102,0)
 N IENS,DATA,DIERR
"RTN","LA7VLCM1",103,0)
 S IENS=R624701_","_R6247_","
"RTN","LA7VLCM1",104,0)
 D GETS^DIQ(62.4701,IENS,".001;.01;.02;.03;.04;.05;2.1;2.2","EI","DATA","")
"RTN","LA7VLCM1",105,0)
 S DF(1)=$G(DATA(62.4701,IENS,.001,"E")) ;SEQ
"RTN","LA7VLCM1",106,0)
 S:DF(1)="" DF(1)=R624701
"RTN","LA7VLCM1",107,0)
 S DF(2)=DATA(62.4701,IENS,.01,"E") ;CODE
"RTN","LA7VLCM1",108,0)
 S DF(3)=$G(DATA(62.4701,IENS,.02,"E")) ;CODE SYS
"RTN","LA7VLCM1",109,0)
 S DF(4)=$G(DATA(62.4701,IENS,.03,"E")) ;PURPOSE
"RTN","LA7VLCM1",110,0)
 S DF(5)=$G(DATA(62.4701,IENS,.04,"E")) ;OVERRIDE
"RTN","LA7VLCM1",111,0)
 S DF(6)=$G(DATA(62.4701,IENS,.05,"E")) ;NATL CODE
"RTN","LA7VLCM1",112,0)
 S DF(7)=$G(DATA(62.4701,IENS,2.1,"I")) ;REL ENTRY
"RTN","LA7VLCM1",113,0)
 S DF(7.1)=$G(DATA(62.4701,IENS,2.1,"E")) ;REL ENTRY
"RTN","LA7VLCM1",114,0)
 S DF(8)=$G(DATA(62.4701,IENS,2.2,"E")) ;MSG CONFIG
"RTN","LA7VLCM1",115,0)
 Q
"RTN","LA7VLCM1",116,0)
 ;
"RTN","LA7VLCM1",117,0)
SHOW(DF,DFL,SCR) ;
"RTN","LA7VLCM1",118,0)
 ; Generic driver to display the data of a record
"RTN","LA7VLCM1",119,0)
 ; Inputs
"RTN","LA7VLCM1",120,0)
 ;     DF <byref> Data Fields array
"RTN","LA7VLCM1",121,0)
 ;    DFL <byref> Data Fields Length array
"RTN","LA7VLCM1",122,0)
 ;    SCR <opt> Screen
"RTN","LA7VLCM1",123,0)
 ;
"RTN","LA7VLCM1",124,0)
 N POS,POS2,X,X2,FN,EXTRA,HDRCAP
"RTN","LA7VLCM1",125,0)
 S SCR=$G(SCR)
"RTN","LA7VLCM1",126,0)
 I SCR'="" X SCR Q:'$T
"RTN","LA7VLCM1",127,0)
 S EXTRA=0
"RTN","LA7VLCM1",128,0)
 D HDRCAP(.HDRCAP)
"RTN","LA7VLCM1",129,0)
 I ($Y+EOP)>IOSL D HDR(.DFL,$G(TITLE)) Q:EXIT  ;
"RTN","LA7VLCM1",130,0)
 S POS=1
"RTN","LA7VLCM1",131,0)
 S POS2=$$BIG(DFL(1),$L(HDRCAP(1)))
"RTN","LA7VLCM1",132,0)
 W !?POS,$$RJ^XLFSTR(DF(1),POS2," ")
"RTN","LA7VLCM1",133,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",134,0)
 S POS2=$$BIG(DFL(2),$L(HDRCAP(2)))
"RTN","LA7VLCM1",135,0)
 W ?POS,$$RJ^XLFSTR(DF(2),POS2," ") ;CODE
"RTN","LA7VLCM1",136,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",137,0)
 S POS2=$$BIG(DFL(3),$L(HDRCAP(3))) ;COD SYS
"RTN","LA7VLCM1",138,0)
 W ?POS,DF(3)
"RTN","LA7VLCM1",139,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",140,0)
 W ?POS,DF(4)
"RTN","LA7VLCM1",141,0)
 S POS2=$$BIG(DFL(4),$L(HDRCAP(4)))
"RTN","LA7VLCM1",142,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",143,0)
 W ?POS,DF(6)
"RTN","LA7VLCM1",144,0)
 ; Display LOINC code text
"RTN","LA7VLCM1",145,0)
 I DF(3)="LN" I DF(2)'="" D  ;
"RTN","LA7VLCM1",146,0)
 . N MSG,R953,X
"RTN","LA7VLCM1",147,0)
 . Q:'$$ISLOINC^LA7VLCM3(DF(2))
"RTN","LA7VLCM1",148,0)
 . S R953=$$FIND1^DIC(95.3,"","QOX",$P(DF(2),"-",1),"B^","","MSG")
"RTN","LA7VLCM1",149,0)
 . Q:'R953
"RTN","LA7VLCM1",150,0)
 . S X=$$GET1^DIQ(95.3,R953_",",80,"","","MSG")
"RTN","LA7VLCM1",151,0)
 . Q:X=""
"RTN","LA7VLCM1",152,0)
 . S EXTRA=1 W !," LOINC: "
"RTN","LA7VLCM1",153,0)
 . I $L(X)>(IOM-$X-2) S X=$E(X,1,IOM-$X-2-3)_"..."
"RTN","LA7VLCM1",154,0)
 . W X
"RTN","LA7VLCM1",155,0)
 I DF(5)'="" S EXTRA=1 W !,"Override Concept: ",DF(5)
"RTN","LA7VLCM1",156,0)
 ; create [File#:IEN]
"RTN","LA7VLCM1",157,0)
 S FN=DF(7)
"RTN","LA7VLCM1",158,0)
 I FN'="" S FN=+$P(FN,"(",2)_":"_$P(FN,";",1) S FN="[#"_FN_"]"
"RTN","LA7VLCM1",159,0)
 I FN'="" S EXTRA=1 W !,"   Related Entry: ",FN," "
"RTN","LA7VLCM1",160,0)
 S X=DF(7.1)
"RTN","LA7VLCM1",161,0)
 ;truncate related entry text if needed
"RTN","LA7VLCM1",162,0)
 I $L(X)>(IOM-$L(FN)-2-18) S X=$E(X,1,IOM-$L(FN)-2-18-3)_"..."
"RTN","LA7VLCM1",163,0)
 W X
"RTN","LA7VLCM1",164,0)
 I DF(8)'="" S EXTRA=1 W !,"      Msg Config: ",DF(8)
"RTN","LA7VLCM1",165,0)
 I EXTRA W !
"RTN","LA7VLCM1",166,0)
 Q
"RTN","LA7VLCM1",167,0)
 ;
"RTN","LA7VLCM1",168,0)
CLEAN ;
"RTN","LA7VLCM1",169,0)
 ; Clean up and quit
"RTN","LA7VLCM1",170,0)
 I $E(IOST,1,2)'="C-"  W @IOF
"RTN","LA7VLCM1",171,0)
 I '$G(EXIT) I $E(IOST,1,2)="C-" D  ;
"RTN","LA7VLCM1",172,0)
 . D MORE()
"RTN","LA7VLCM1",173,0)
 . W $C(13)_$J("",$G(IOM,80))_$C(13)
"RTN","LA7VLCM1",174,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VLCM1",175,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","LA7VLCM1",176,0)
 Q
"RTN","LA7VLCM1",177,0)
 ;
"RTN","LA7VLCM1",178,0)
BIG(A,B) ;
"RTN","LA7VLCM1",179,0)
 ; Returns the bigger of two values
"RTN","LA7VLCM1",180,0)
 Q $S(A<B:B,B<A:A,1:A)
"RTN","LA7VLCM1",181,0)
 ;
"RTN","LA7VLCM1",182,0)
HDR(DFL,TITLE) ;
"RTN","LA7VLCM1",183,0)
 ; Generic driver to display the header of the report
"RTN","LA7VLCM1",184,0)
 ; Inputs
"RTN","LA7VLCM1",185,0)
 ;    DFL <byref> Data Field Length array
"RTN","LA7VLCM1",186,0)
 ;  TITLE <opt> The title to use for this report
"RTN","LA7VLCM1",187,0)
 ;
"RTN","LA7VLCM1",188,0)
 N POS,POS2,HDRCAP
"RTN","LA7VLCM1",189,0)
 S TITLE=$G(TITLE)
"RTN","LA7VLCM1",190,0)
 I TITLE="" S TITLE="LAB CODE MAPPING"
"RTN","LA7VLCM1",191,0)
 D HDRCAP(.HDRCAP)
"RTN","LA7VLCM1",192,0)
 I '$D(ZTQUEUED),PAGE,$E(IOST,1,2)="C-" S EXIT=$$MORE() Q:EXIT
"RTN","LA7VLCM1",193,0)
 W @IOF S $X=0
"RTN","LA7VLCM1",194,0)
 S PAGE=PAGE+1
"RTN","LA7VLCM1",195,0)
 W ?0,$E(TITLE,1,IOM-34),?IOM-32,$$FMTE^XLFDT(NOW),?IOM-10," Page: ",PAGE
"RTN","LA7VLCM1",196,0)
 S POS=1
"RTN","LA7VLCM1",197,0)
 S POS2=$$BIG($L(HDRCAP(1)),DFL(1))
"RTN","LA7VLCM1",198,0)
 W !?POS,$$RJ^XLFSTR(HDRCAP(1),POS2," ") ;SEQ
"RTN","LA7VLCM1",199,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",200,0)
 W ?POS,$$RJ^XLFSTR(HDRCAP(2),DFL(2)," ") ;ID
"RTN","LA7VLCM1",201,0)
 S POS2=$$BIG($L(HDRCAP(2)),DFL(2))
"RTN","LA7VLCM1",202,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",203,0)
 W ?POS,HDRCAP(3) ;"SYSTEM"
"RTN","LA7VLCM1",204,0)
 S POS2=$$BIG($L(HDRCAP(3)),DFL(3))
"RTN","LA7VLCM1",205,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",206,0)
 W ?POS,HDRCAP(4) ;PURPOSE
"RTN","LA7VLCM1",207,0)
 S POS2=$$BIG($L(HDRCAP(4)),$G(DFL(4)))
"RTN","LA7VLCM1",208,0)
 S POS=POS+2+POS2
"RTN","LA7VLCM1",209,0)
 W ?POS,HDRCAP(5) ;NATL
"RTN","LA7VLCM1",210,0)
 W !,$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7VLCM1",211,0)
 Q
"RTN","LA7VLCM1",212,0)
 ;
"RTN","LA7VLCM1",213,0)
MORE(NULL) ;
"RTN","LA7VLCM1",214,0)
 ; Prompts user to hit ENTER to continue
"RTN","LA7VLCM1",215,0)
 ; Returns 1 if user enters "^" else returns 0
"RTN","LA7VLCM1",216,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7VLCM1",217,0)
 I $E($G(IOST),1,2)'="C-" Q 0
"RTN","LA7VLCM1",218,0)
 I $D(ZTQUEUED) Q 0
"RTN","LA7VLCM1",219,0)
 S DIR(0)="E"
"RTN","LA7VLCM1",220,0)
 D ^DIR
"RTN","LA7VLCM1",221,0)
 W $C(13)_$J("",$G(IOM,80))_$C(13)
"RTN","LA7VLCM1",222,0)
 Q $D(DIRUT)
"RTN","LA7VLCM1",223,0)
 ;
"RTN","LA7VLCM1",224,0)
TASK(ZTRTN,ZTDESC,ZTSAVE) ;
"RTN","LA7VLCM1",225,0)
 ; Tasks the specified routine
"RTN","LA7VLCM1",226,0)
 ; Returns the task # or 0
"RTN","LA7VLCM1",227,0)
 N ZTDTH,ZTSK,ZTIO
"RTN","LA7VLCM1",228,0)
 D ^%ZTLOAD
"RTN","LA7VLCM1",229,0)
 D ^%ZISC
"RTN","LA7VLCM1",230,0)
 W !,"Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued")
"RTN","LA7VLCM1",231,0)
 Q +$G(ZTSK)
"RTN","LA7VLCM1",232,0)
 ;
"RTN","LA7VLCM1",233,0)
RVID(I) ;
"RTN","LA7VLCM1",234,0)
 ; Reverse Video On/Off
"RTN","LA7VLCM1",235,0)
 ; Inputs
"RTN","LA7VLCM1",236,0)
 ;   I  I=1 turns on reverse video  I=0 turns off reverse video
"RTN","LA7VLCM1",237,0)
 ;
"RTN","LA7VLCM1",238,0)
 Q:$E($G(IOST),1,2)'="C-"
"RTN","LA7VLCM1",239,0)
 I $G(IORVON)'="" I $G(IORVOFF)'="" D  ;
"RTN","LA7VLCM1",240,0)
 . W:'I IORVOFF
"RTN","LA7VLCM1",241,0)
 . W:I IORVON
"RTN","LA7VLCM1",242,0)
 Q
"RTN","LA7VLCM1",243,0)
 ;
"RTN","LA7VLCM1",244,0)
PROGRESS(LAST) ;
"RTN","LA7VLCM1",245,0)
 ; Prints a "." when NOW > LAST + INT
"RTN","LA7VLCM1",246,0)
 ; Input
"RTN","LA7VLCM1",247,0)
 ;   LAST : <byref> The last $H when "." was shown
"RTN","LA7VLCM1",248,0)
 N INT
"RTN","LA7VLCM1",249,0)
 S INT=1 ;interval in seconds
"RTN","LA7VLCM1",250,0)
 I $P($H,",",2)>(+$P(LAST,",",2)+INT) S LAST=$H W "."
"RTN","LA7VLCM1",251,0)
 Q
"RTN","LA7VLCM1",252,0)
 ;
"RTN","LA7VLCM1",253,0)
LOINCFSN(LOINC) ;
"RTN","LA7VLCM1",254,0)
 ; Returns the FSN for this LOINC code
"RTN","LA7VLCM1",255,0)
 ; Needs to be FM safe for use within FM calls
"RTN","LA7VLCM1",256,0)
 N R953,LAMSG,LAX
"RTN","LA7VLCM1",257,0)
 N X,Y,X1,X2,DA,FDA,IENS,DIC,DIE,DIERR
"RTN","LA7VLCM1",258,0)
 Q:'$$ISLOINC^LA7VLCM3(LOINC) ""  ;
"RTN","LA7VLCM1",259,0)
 ; cant use $$FIND1 here -- not sym table safe
"RTN","LA7VLCM1",260,0)
 S LAX=$P(LOINC,"-",1)
"RTN","LA7VLCM1",261,0)
 S R953=0
"RTN","LA7VLCM1",262,0)
 I LAX'="" S R953=$O(^LAB(95.3,"B",LAX,0))
"RTN","LA7VLCM1",263,0)
 Q:'R953 ""  ;
"RTN","LA7VLCM1",264,0)
 Q $$GET1^DIQ(95.3,R953_",",80,"","","LAMSG")
"RTN","LA7VLCM2")
0^69^B30898261
"RTN","LA7VLCM2",1,0)
LA7VLCM2 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  10:45
"RTN","LA7VLCM2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM2",3,0)
 ;
"RTN","LA7VLCM2",4,0)
 ; Ex subs are the main entry points from menus, etc..
"RTN","LA7VLCM2",5,0)
 ; Px subs are the main workhorse (called from Ex)
"RTN","LA7VLCM2",6,0)
 Q
"RTN","LA7VLCM2",7,0)
 ;
"RTN","LA7VLCM2",8,0)
E1 ;
"RTN","LA7VLCM2",9,0)
 ; Print #62.47 entries based on Msg Config and Concept
"RTN","LA7VLCM2",10,0)
 N X,Y,CNT,QUE,DIR,R6248
"RTN","LA7VLCM2",11,0)
 S (X,CNT)=0
"RTN","LA7VLCM2",12,0)
 ; how many #62.48s in #62.47
"RTN","LA7VLCM2",13,0)
 F  S X=$O(^LAB(62.47,"AG",X)) Q:X=""  Q:CNT>1  S CNT=CNT+1
"RTN","LA7VLCM2",14,0)
 I CNT=0 W !,"No entries to display." Q
"RTN","LA7VLCM2",15,0)
 I CNT=1 D  ;
"RTN","LA7VLCM2",16,0)
 . S R6248=$O(^LAB(62.47,"AG",0))
"RTN","LA7VLCM2",17,0)
 ;
"RTN","LA7VLCM2",18,0)
 I CNT>1 D  ;
"RTN","LA7VLCM2",19,0)
 . S DIR(0)="Y"
"RTN","LA7VLCM2",20,0)
 . S DIR("A")="Print All Message Configurations? "
"RTN","LA7VLCM2",21,0)
 . S DIR("B")="N"
"RTN","LA7VLCM2",22,0)
 . S DIR("?")="Print all codes associated with all message configurations."
"RTN","LA7VLCM2",23,0)
 . D ^DIR
"RTN","LA7VLCM2",24,0)
 . S R6248=0
"RTN","LA7VLCM2",25,0)
 . I Y=0 D  Q:R6248'>0  ;
"RTN","LA7VLCM2",26,0)
 . . N DIC
"RTN","LA7VLCM2",27,0)
 . . S DIC=62.48
"RTN","LA7VLCM2",28,0)
 . . S DIC(0)="AENOQ"
"RTN","LA7VLCM2",29,0)
 . . S DIC("S")="I $D(^LAB(62.47,""AG"",+Y))"
"RTN","LA7VLCM2",30,0)
 . . D ^DIC
"RTN","LA7VLCM2",31,0)
 . . K DIC
"RTN","LA7VLCM2",32,0)
 . . S R6248=+Y
"RTN","LA7VLCM2",33,0)
 . ;
"RTN","LA7VLCM2",34,0)
 Q:R6248<0
"RTN","LA7VLCM2",35,0)
 S X="P1^LA7VLCM2("_R6248_")"
"RTN","LA7VLCM2",36,0)
 S QUE=$$QUE^LA7VLCM1(X,"Print Codes from #62.47")
"RTN","LA7VLCM2",37,0)
 I QUE=-1 Q
"RTN","LA7VLCM2",38,0)
 I 'QUE D P1(R6248)
"RTN","LA7VLCM2",39,0)
 Q
"RTN","LA7VLCM2",40,0)
 ;
"RTN","LA7VLCM2",41,0)
P1(R6248) ;
"RTN","LA7VLCM2",42,0)
 ; Print codes based on Message Config (R6248)
"RTN","LA7VLCM2",43,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,START,TITLE
"RTN","LA7VLCM2",44,0)
 N R6247,R624701,DFL,IORVON,IORVOFF,X,CODE,CODSET,CONCLAST
"RTN","LA7VLCM2",45,0)
 N TMPNM
"RTN","LA7VLCM2",46,0)
 S TMPNM="LA7VLCM2-P1A"
"RTN","LA7VLCM2",47,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM2",48,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM2",49,0)
 S EOP=5
"RTN","LA7VLCM2",50,0)
 S TITLE="LAB CODE MAPPING (BY MSG CONFIG)"
"RTN","LA7VLCM2",51,0)
 S X="IORVON;IORVOFF"
"RTN","LA7VLCM2",52,0)
 D  ;
"RTN","LA7VLCM2",53,0)
 . N %ZIS
"RTN","LA7VLCM2",54,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM2",55,0)
 ; get max field sizes
"RTN","LA7VLCM2",56,0)
 S R6247=0
"RTN","LA7VLCM2",57,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA7VLCM2",58,0)
 . D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM2",59,0)
 S R6247=0
"RTN","LA7VLCM2",60,0)
 S START=1
"RTN","LA7VLCM2",61,0)
 D HDR^LA7VLCM1(.DFL,TITLE)
"RTN","LA7VLCM2",62,0)
 I 'R6248 D  ;
"RTN","LA7VLCM2",63,0)
 . ;go thru Msg Configs in alpha order
"RTN","LA7VLCM2",64,0)
 . N MSGCFG
"RTN","LA7VLCM2",65,0)
 . S MSGCFG=""
"RTN","LA7VLCM2",66,0)
 . F  S MSGCFG=$O(^LAHM(62.48,"B",MSGCFG)) Q:MSGCFG=""  D  Q:EXIT  ;
"RTN","LA7VLCM2",67,0)
 . . S R6248=$O(^LAHM(62.48,"B",MSGCFG,0))
"RTN","LA7VLCM2",68,0)
 . . Q:'R6248
"RTN","LA7VLCM2",69,0)
 . . D P1A(R6248)
"RTN","LA7VLCM2",70,0)
 . ; 
"RTN","LA7VLCM2",71,0)
 . S R6248=0
"RTN","LA7VLCM2",72,0)
 ;
"RTN","LA7VLCM2",73,0)
 I R6248 D  ;
"RTN","LA7VLCM2",74,0)
 . D P1A(R6248)
"RTN","LA7VLCM2",75,0)
 ;
"RTN","LA7VLCM2",76,0)
 D P1DISP
"RTN","LA7VLCM2",77,0)
 K ^TMP("LA7VLCM2-P1A",$J)
"RTN","LA7VLCM2",78,0)
 D CLEAN^LA7VLCM1
"RTN","LA7VLCM2",79,0)
 Q
"RTN","LA7VLCM2",80,0)
 ;
"RTN","LA7VLCM2",81,0)
P1A(R6248) ;
"RTN","LA7VLCM2",82,0)
 ; Helper method for P1
"RTN","LA7VLCM2",83,0)
 ; Creates then steps through its ^TMP global and then
"RTN","LA7VLCM2",84,0)
 ; calls the display method
"RTN","LA7VLCM2",85,0)
 N R6247,R624701,NODE,X,CODE,CODSET,MSGCFG
"RTN","LA7VLCM2",86,0)
 N TMPNM
"RTN","LA7VLCM2",87,0)
 S TMPNM="LA7VLCM2-P1A"
"RTN","LA7VLCM2",88,0)
 S R6247=0
"RTN","LA7VLCM2",89,0)
 S NODE="^LAB(62.47,""AG"",R6248)"
"RTN","LA7VLCM2",90,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,3)'=R6248  Q:$QS(NODE,2)'="AG"  Q:$QS(NODE,1)'=62.47  D  ;
"RTN","LA7VLCM2",91,0)
 . S R6247=$QS(NODE,4)
"RTN","LA7VLCM2",92,0)
 . S R624701=$QS(NODE,5)
"RTN","LA7VLCM2",93,0)
 . ;create sort global
"RTN","LA7VLCM2",94,0)
 . S X=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA7VLCM2",95,0)
 . S CODE=$P(X,U,1)
"RTN","LA7VLCM2",96,0)
 . S CODSET=$P(X,U,2)
"RTN","LA7VLCM2",97,0)
 . S:CODE="" CODE="??" S:CODSET="" CODSET="??"
"RTN","LA7VLCM2",98,0)
 . S X=$G(^LAHM(62.48,R6248,0))
"RTN","LA7VLCM2",99,0)
 . S MSGCFG=$P(X,U,1)
"RTN","LA7VLCM2",100,0)
 . S ^TMP(TMPNM,$J,R6247,MSGCFG,R6248,CODE,CODSET,R624701)=""
"RTN","LA7VLCM2",101,0)
 Q
"RTN","LA7VLCM2",102,0)
 ;
"RTN","LA7VLCM2",103,0)
P1DISP ;
"RTN","LA7VLCM2",104,0)
 ; Utility display function for P1 (above)
"RTN","LA7VLCM2",105,0)
 ; now go thru sorted codes for display
"RTN","LA7VLCM2",106,0)
 ; ^TMP("LA7VLCM2-P1",$J,R6247,MSGCFG,R6248,CODE,CODSET,R624701)=""
"RTN","LA7VLCM2",107,0)
 N NODE,R6248,R6247,R624701,LASTCONC
"RTN","LA7VLCM2",108,0)
 N TMPNM
"RTN","LA7VLCM2",109,0)
 S TMPNM="LA7VLCM2-P1A"
"RTN","LA7VLCM2",110,0)
 S LASTCONC=0 ;Last Concept printed
"RTN","LA7VLCM2",111,0)
 S NODE="^TMP(TMPNM,$J)"
"RTN","LA7VLCM2",112,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'=$J  Q:$QS(NODE,1)'=TMPNM  D  Q:EXIT  ;
"RTN","LA7VLCM2",113,0)
 . S R6248=$QS(NODE,5)
"RTN","LA7VLCM2",114,0)
 . S R6247=$QS(NODE,3)
"RTN","LA7VLCM2",115,0)
 . S R624701=$QS(NODE,8)
"RTN","LA7VLCM2",116,0)
 . Q:'R624701
"RTN","LA7VLCM2",117,0)
 . I LASTCONC'=R6247 D  ;
"RTN","LA7VLCM2",118,0)
 . . I LASTCONC'=0 W !
"RTN","LA7VLCM2",119,0)
 . . D RVID^LA7VLCM1(1)
"RTN","LA7VLCM2",120,0)
 . . W !,"CONCEPT:",$$GET1^DIQ(62.47,R6247_",",".01","E","","")
"RTN","LA7VLCM2",121,0)
 . . W "  (",$$GET1^DIQ(62.47,R6247_",",".02","I","",""),")"
"RTN","LA7VLCM2",122,0)
 . . I $E($G(IOST),1,2)="C-" W $$RJ^XLFSTR("",IOM-$X," ")
"RTN","LA7VLCM2",123,0)
 . . D RVID^LA7VLCM1(0)
"RTN","LA7VLCM2",124,0)
 . . S LASTCONC=R6247
"RTN","LA7VLCM2",125,0)
 . D SUB^LA7VLCM1(.DFL,R6247,,R624701)
"RTN","LA7VLCM2",126,0)
 . ;
"RTN","LA7VLCM2",127,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM2",128,0)
 Q
"RTN","LA7VLCM2",129,0)
 ;
"RTN","LA7VLCM2",130,0)
E2 ;
"RTN","LA7VLCM2",131,0)
 ; Print #62.47 entries with bad IDENTIFIER/CODE SYSTEM mappings
"RTN","LA7VLCM2",132,0)
 N X,Y,CNT,QUE,DIR
"RTN","LA7VLCM2",133,0)
 S (X,CNT)=0
"RTN","LA7VLCM2",134,0)
 S X="P2^LA7VLCM2(1)"
"RTN","LA7VLCM2",135,0)
 S QUE=$$QUE^LA7VLCM1(X,"Code/Set mismatches in #62.47")
"RTN","LA7VLCM2",136,0)
 I QUE=-1 Q
"RTN","LA7VLCM2",137,0)
 I 'QUE D P2(0)
"RTN","LA7VLCM2",138,0)
 Q
"RTN","LA7VLCM2",139,0)
 ;
"RTN","LA7VLCM2",140,0)
P2(QUE) ;
"RTN","LA7VLCM2",141,0)
 ; Print entries with bad IDENTIFIER/CODE SYS mappings
"RTN","LA7VLCM2",142,0)
 ; Inputs
"RTN","LA7VLCM2",143,0)
 ;    QUE   1=was queued
"RTN","LA7VLCM2",144,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,START,TITLE
"RTN","LA7VLCM2",145,0)
 N R6247,R624701,DFL,IORVON,IORVOFF,X,TMPNM
"RTN","LA7VLCM2",146,0)
 N CODE,CS,CONCLAST,NODE,LADOT
"RTN","LA7VLCM2",147,0)
 N TMPNM
"RTN","LA7VLCM2",148,0)
 S QUE=+$G(QUE)
"RTN","LA7VLCM2",149,0)
 S TMPNM="LA7VLCM2-P2"
"RTN","LA7VLCM2",150,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM2",151,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM2",152,0)
 S EOP=5
"RTN","LA7VLCM2",153,0)
 S TITLE="LAB CODE MAPPING (CODE/SET MISMATCHES)"
"RTN","LA7VLCM2",154,0)
 S X="IORVON;IORVOFF"
"RTN","LA7VLCM2",155,0)
 D  ;
"RTN","LA7VLCM2",156,0)
 . N %ZIS
"RTN","LA7VLCM2",157,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM2",158,0)
 ; get max field sizes
"RTN","LA7VLCM2",159,0)
 S R6247=0
"RTN","LA7VLCM2",160,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA7VLCM2",161,0)
 . D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM2",162,0)
 S R6247=0
"RTN","LA7VLCM2",163,0)
 S START=1
"RTN","LA7VLCM2",164,0)
 ; build list
"RTN","LA7VLCM2",165,0)
 I 'QUE D WAIT^DICD
"RTN","LA7VLCM2",166,0)
 S LADOT=$H
"RTN","LA7VLCM2",167,0)
 S NODE="^LAB(62.47,""AF"")"
"RTN","LA7VLCM2",168,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="AF"  D  ;
"RTN","LA7VLCM2",169,0)
 . S CS=$QS(NODE,3)
"RTN","LA7VLCM2",170,0)
 . S CODE=$QS(NODE,4)
"RTN","LA7VLCM2",171,0)
 . S R6247=$QS(NODE,5)
"RTN","LA7VLCM2",172,0)
 . S R624701=$QS(NODE,6)
"RTN","LA7VLCM2",173,0)
 . I 'QUE D PROGRESS^LA7VLCM1(.LADOT)
"RTN","LA7VLCM2",174,0)
 . Q:$$CODSETOK^LA7VLCM3("","",CODE,CS,0)
"RTN","LA7VLCM2",175,0)
 . S ^TMP(TMPNM,$J,R6247,CODE,CS,R624701)=""
"RTN","LA7VLCM2",176,0)
 D HDR^LA7VLCM1(.DFL,TITLE)
"RTN","LA7VLCM2",177,0)
 S NODE="^TMP(TMPNM,$J)"
"RTN","LA7VLCM2",178,0)
 S CONCLAST=0
"RTN","LA7VLCM2",179,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,1)'=TMPNM  Q:$QS(NODE,2)'=$J  D  Q:EXIT  ;
"RTN","LA7VLCM2",180,0)
 . I CONCLAST'=0 W !
"RTN","LA7VLCM2",181,0)
 . S R6247=$QS(NODE,3)
"RTN","LA7VLCM2",182,0)
 . S CODE=$QS(NODE,4)
"RTN","LA7VLCM2",183,0)
 . S CS=$QS(NODE,5)
"RTN","LA7VLCM2",184,0)
 . S R624701=$QS(NODE,6)
"RTN","LA7VLCM2",185,0)
 . S CONCLAST=R6247
"RTN","LA7VLCM2",186,0)
 . D RVID^LA7VLCM1(1)
"RTN","LA7VLCM2",187,0)
 . W !,"CONCEPT:",$$GET1^DIQ(62.47,R6247_",",".01","E","","")
"RTN","LA7VLCM2",188,0)
 . W "  (",$$GET1^DIQ(62.47,R6247_",",".02","I","",""),")"
"RTN","LA7VLCM2",189,0)
 . I $E($G(IOST),1,2)="C-" W $$RJ^XLFSTR("",IOM-$X," ")
"RTN","LA7VLCM2",190,0)
 . D RVID^LA7VLCM1(0)
"RTN","LA7VLCM2",191,0)
 . D SUB^LA7VLCM1(.DFL,R6247,,R624701)
"RTN","LA7VLCM2",192,0)
 I CONCLAST=0 W !!,"   No exceptions found."
"RTN","LA7VLCM2",193,0)
 ;
"RTN","LA7VLCM2",194,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM2",195,0)
 D CLEAN^LA7VLCM1
"RTN","LA7VLCM2",196,0)
 Q
"RTN","LA7VLCM3")
0^70^B23687797
"RTN","LA7VLCM3",1,0)
LA7VLCM3 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;12/27/11  09:57
"RTN","LA7VLCM3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM3",3,0)
 ;
"RTN","LA7VLCM3",4,0)
 Q
"RTN","LA7VLCM3",5,0)
 ;
"RTN","LA7VLCM3",6,0)
CODSETOK(R6247,R624701,CODE,CS,DISP) ;
"RTN","LA7VLCM3",7,0)
 ; Is the combination of CODE and CODE SYSTEM valid?
"RTN","LA7VLCM3",8,0)
 ; Used with IDENTIFIER and CODING SYSTEM fields of #62.4701
"RTN","LA7VLCM3",9,0)
 ; Needs to be safe to use within recursive FM DD calls
"RTN","LA7VLCM3",10,0)
 ; Inputs
"RTN","LA7VLCM3",11,0)
 ;   R6247: <opt>#62.47 IEN
"RTN","LA7VLCM3",12,0)
 ; R624701: <opt>#62.4701 IEN
"RTN","LA7VLCM3",13,0)
 ;    CODE: <opt>Code
"RTN","LA7VLCM3",14,0)
 ;      CS: <opt>Code Set
"RTN","LA7VLCM3",15,0)
 ;    DISP: <opt>Display (show user messages? dflt=NO)
"RTN","LA7VLCM3",16,0)
 ; Outputs
"RTN","LA7VLCM3",17,0)
 ;        1 if CODE and CODSET are good, 0 if not
"RTN","LA7VLCM3",18,0)
 ;
"RTN","LA7VLCM3",19,0)
 ; Call with combination of R6247 & R624701, or CODE & CS, or
"RTN","LA7VLCM3",20,0)
 ; R6247 & R624701 & (CODE or CS)
"RTN","LA7VLCM3",21,0)
 N OK,X,X1,X2,Y,DA,IENS,LAT,TARG,DIE,DIC,DIERR
"RTN","LA7VLCM3",22,0)
 Q:$G(DIUTIL)="VERIFY FIELDS" 1
"RTN","LA7VLCM3",23,0)
 S R6247=$G(R6247),R624701=$G(R624701)
"RTN","LA7VLCM3",24,0)
 S CODE=$G(CODE),CS=$G(CS),DISP=+$G(DISP)
"RTN","LA7VLCM3",25,0)
 S LAT=$T,OK=1
"RTN","LA7VLCM3",26,0)
 I R6247,R624701 D  ;
"RTN","LA7VLCM3",27,0)
 . S IENS=R624701_","_R6247_","
"RTN","LA7VLCM3",28,0)
 . D GETS^DIQ(62.4701,IENS,".01;.02","E","TARG")
"RTN","LA7VLCM3",29,0)
 . I CODE="" S CODE=$G(TARG(62.4701,IENS,.01,"E"))
"RTN","LA7VLCM3",30,0)
 . I CS="" S CS=$G(TARG(62.4701,IENS,.02,"E"))
"RTN","LA7VLCM3",31,0)
 ;
"RTN","LA7VLCM3",32,0)
 I CODE="" S CS="" ;if Code is null, there is nothing to validate against Code System
"RTN","LA7VLCM3",33,0)
 ;
"RTN","LA7VLCM3",34,0)
 I CS="LN" S OK=$$ISLOINC(CODE)
"RTN","LA7VLCM3",35,0)
 ;
"RTN","LA7VLCM3",36,0)
 I CS="SCT" D  ;
"RTN","LA7VLCM3",37,0)
 . S X=$$CODE^LRSCT(CODE,"SCT",DT)
"RTN","LA7VLCM3",38,0)
 . I X<1 S OK=0
"RTN","LA7VLCM3",39,0)
 ;
"RTN","LA7VLCM3",40,0)
 I CS="99VA64",'$O(^LAM("E",CODE,0)) S OK=0
"RTN","LA7VLCM3",41,0)
 ;
"RTN","LA7VLCM3",42,0)
 I 'OK,DISP=1,'$$ISQUIET^LRXREF() D EN^DDIOL(" **Code/Set mismatch**",,"$C(32,7)")
"RTN","LA7VLCM3",43,0)
 ;
"RTN","LA7VLCM3",44,0)
 I LAT ;reset $T
"RTN","LA7VLCM3",45,0)
 Q OK
"RTN","LA7VLCM3",46,0)
 ;
"RTN","LA7VLCM3",47,0)
 ;
"RTN","LA7VLCM3",48,0)
ISLOINC(CODE) ;
"RTN","LA7VLCM3",49,0)
 ; Returns if code is a valid LOINC code
"RTN","LA7VLCM3",50,0)
 ; Needs to be FM DD safe
"RTN","LA7VLCM3",51,0)
 N STATUS,MSG,R953,X,Y,X1,X2,DA,IENS,DIC,DIE,LAX,DIERR
"RTN","LA7VLCM3",52,0)
 S CODE=$G(CODE),(R953,STATUS)=0
"RTN","LA7VLCM3",53,0)
 ; cant use $$FIND1 here -- not sym table safe causes problems when used inside the Input Xform for field .02
"RTN","LA7VLCM3",54,0)
 ;
"RTN","LA7VLCM3",55,0)
 ; Check LOINC codes for both forms of storage - with and without checksum in #.01.
"RTN","LA7VLCM3",56,0)
 I CODE'="" S R953=$O(^LAB(95.3,"B",CODE,0))
"RTN","LA7VLCM3",57,0)
 I 'R953 D
"RTN","LA7VLCM3",58,0)
 . S LAX=$P(CODE,"-",1)
"RTN","LA7VLCM3",59,0)
 . I LAX'="" S R953=$O(^LAB(95.3,"B",LAX,0))
"RTN","LA7VLCM3",60,0)
 ;
"RTN","LA7VLCM3",61,0)
 I R953 D
"RTN","LA7VLCM3",62,0)
 . K MSG
"RTN","LA7VLCM3",63,0)
 . S LAX=$$GET1^DIQ(95.3,R953_",",.01,"","","MSG")
"RTN","LA7VLCM3",64,0)
 . I LAX=CODE S STATUS=1
"RTN","LA7VLCM3",65,0)
 ;
"RTN","LA7VLCM3",66,0)
 Q STATUS
"RTN","LA7VLCM3",67,0)
 ;
"RTN","LA7VLCM3",68,0)
 ;
"RTN","LA7VLCM3",69,0)
CLONE ;
"RTN","LA7VLCM3",70,0)
 ; Clone Msg Cfg in 62.47
"RTN","LA7VLCM3",71,0)
 N DIC,DIR,R6248S,R6248T,R6247,R624701,NODE,CODE,CS,MSGCFG
"RTN","LA7VLCM3",72,0)
 N LAMSG,CNT,CNT2,LAFDA,LAIEN,LAIEN2,LRFPRIV,X,DIERR
"RTN","LA7VLCM3",73,0)
 S DIC=62.48
"RTN","LA7VLCM3",74,0)
 S DIC(0)="AENOQ"
"RTN","LA7VLCM3",75,0)
 S DIC("S")="I $D(^LAB(62.47,""AG"",+Y))"
"RTN","LA7VLCM3",76,0)
 S DIC("A")="Source Message Configuration: "
"RTN","LA7VLCM3",77,0)
 D ^DIC
"RTN","LA7VLCM3",78,0)
 K DIC
"RTN","LA7VLCM3",79,0)
 S R6248S=+Y
"RTN","LA7VLCM3",80,0)
 Q:R6248S'>0
"RTN","LA7VLCM3",81,0)
 S DIC=62.48
"RTN","LA7VLCM3",82,0)
 S DIC(0)="AENOQ"
"RTN","LA7VLCM3",83,0)
 S DIC("S")="I '$D(^LAB(62.47,""AG"",+Y))"
"RTN","LA7VLCM3",84,0)
 S DIC("A")="Destination Message Configuration: "
"RTN","LA7VLCM3",85,0)
 D ^DIC
"RTN","LA7VLCM3",86,0)
 K DIC
"RTN","LA7VLCM3",87,0)
 S R6248T=+Y
"RTN","LA7VLCM3",88,0)
 Q:R6248T'>0
"RTN","LA7VLCM3",89,0)
 ;
"RTN","LA7VLCM3",90,0)
 S DIR(0)="Y"
"RTN","LA7VLCM3",91,0)
 S DIR("A")="Continue with cloning? "
"RTN","LA7VLCM3",92,0)
 S DIR("B")="N"
"RTN","LA7VLCM3",93,0)
 S DIR("?")="Yes will copy the settings for the Source Configuration into File #62.47 for the Target Configuration"
"RTN","LA7VLCM3",94,0)
 D ^DIR
"RTN","LA7VLCM3",95,0)
 Q:'Y
"RTN","LA7VLCM3",96,0)
 ;
"RTN","LA7VLCM3",97,0)
 I '$$GETLOCK^LRUTIL("^LAB(62.47)",,0) D  Q  ;
"RTN","LA7VLCM3",98,0)
 . W !!,"Could not lock file.  Try later.",$C(7) H 3
"RTN","LA7VLCM3",99,0)
 ;
"RTN","LA7VLCM3",100,0)
 S (CNT,CNT2)=0
"RTN","LA7VLCM3",101,0)
 S NODE="^LAB(62.47,""AG"",R6248S,0)"
"RTN","LA7VLCM3",102,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="AG"  Q:$QS(NODE,3)'=R6248S  D  ;
"RTN","LA7VLCM3",103,0)
 . S CNT=CNT+1
"RTN","LA7VLCM3",104,0)
 . S R6247=$QS(NODE,4)
"RTN","LA7VLCM3",105,0)
 . S R624701=$QS(NODE,5)
"RTN","LA7VLCM3",106,0)
 . K LAIEN,LAIENB,LADATA,LAFDA
"RTN","LA7VLCM3",107,0)
 . S LAIEN=R624701_","_R6247_","
"RTN","LA7VLCM3",108,0)
 . S LAFLDS=".01;.02;.03;.04;.05;2.1;2.2"
"RTN","LA7VLCM3",109,0)
 . D GETS^DIQ(62.4701,LAIEN,LAFLDS,"I","LADATA","")
"RTN","LA7VLCM3",110,0)
 . Q:'$D(LADATA)
"RTN","LA7VLCM3",111,0)
 . S CODE=LADATA(62.4701,LAIEN,.01,"I")
"RTN","LA7VLCM3",112,0)
 . S CS=LADATA(62.4701,LAIEN,.02,"I")
"RTN","LA7VLCM3",113,0)
 . S MSGCFG=LADATA(62.4701,LAIEN,2.2,"I")
"RTN","LA7VLCM3",114,0)
 . ;
"RTN","LA7VLCM3",115,0)
 . S R624701=-1
"RTN","LA7VLCM3",116,0)
 . ; If target msg cfg not in file you can just add the record
"RTN","LA7VLCM3",117,0)
 . I '$D(^LAB(62.47,"AG",R6248T)) S R624701=0
"RTN","LA7VLCM3",118,0)
 . ; if MSG CFG is in xref need to check each CODE record
"RTN","LA7VLCM3",119,0)
 . I R624701=-1 D  ;
"RTN","LA7VLCM3",120,0)
 . . K LADATA2,LAMSG,DIERR
"RTN","LA7VLCM3",121,0)
 . . D FIND^DIC(62.4701,","_R6247_",","@;.01I;.02I;2.2I","OQX",CODE,"","B^","","","LADATA2","LAMSG")
"RTN","LA7VLCM3",122,0)
 . . Q:'$D(LADATA2)
"RTN","LA7VLCM3",123,0)
 . . N FOUND,ID
"RTN","LA7VLCM3",124,0)
 . . S FOUND=0
"RTN","LA7VLCM3",125,0)
 . . S ID=0
"RTN","LA7VLCM3",126,0)
 . . F  S ID=$O(LADATA2("DILIST","ID",ID)) Q:'ID  D  Q:FOUND  ;
"RTN","LA7VLCM3",127,0)
 . . . S X=LADATA2("DILIST","ID",ID,2.2)
"RTN","LA7VLCM3",128,0)
 . . . Q:X'=R6248T
"RTN","LA7VLCM3",129,0)
 . . . S X=LADATA2("DILIST","ID",ID,.02)
"RTN","LA7VLCM3",130,0)
 . . . Q:X'=CODSYS
"RTN","LA7VLCM3",131,0)
 . . . S FOUND=1 S R624701=LADATA("DILIST",2,ID) Q
"RTN","LA7VLCM3",132,0)
 . . ;
"RTN","LA7VLCM3",133,0)
 . ; build FDA array for filing
"RTN","LA7VLCM3",134,0)
 . K LADATA2,LAMSG
"RTN","LA7VLCM3",135,0)
 . S FLD=""
"RTN","LA7VLCM3",136,0)
 . I R624701>0 S LAIEN2=R624701_","
"RTN","LA7VLCM3",137,0)
 . I R624701'>0 S LAIEN2="+1,"
"RTN","LA7VLCM3",138,0)
 . S LAIEN2=LAIEN2_R6247_","
"RTN","LA7VLCM3",139,0)
 . ;
"RTN","LA7VLCM3",140,0)
 . F I=1:1:$L(LAFLDS,";") S FLD=$P(LAFLDS,";",I) D  ;
"RTN","LA7VLCM3",141,0)
 . . S X=$G(LADATA(62.4701,LAIEN,FLD,"I"))
"RTN","LA7VLCM3",142,0)
 . . I FLD=2.2 S X=R6248T
"RTN","LA7VLCM3",143,0)
 . . S LAFDA(1,62.4701,LAIEN2,FLD)=X
"RTN","LA7VLCM3",144,0)
 . S LRFPRIV=1
"RTN","LA7VLCM3",145,0)
 . I R624701'>0 D UPDATE^DIE("","LAFDA(1)","","LAMSG")
"RTN","LA7VLCM3",146,0)
 . I R624701>0 D FILE^DIE("","LAFDA(1)","LAMSG")
"RTN","LA7VLCM3",147,0)
 . I '$D(LAMSG) S CNT2=CNT2+1
"RTN","LA7VLCM3",148,0)
 ;
"RTN","LA7VLCM3",149,0)
 L -^LAB(62.47)
"RTN","LA7VLCM3",150,0)
 W !!,"  Records found: ",CNT
"RTN","LA7VLCM3",151,0)
 W !,"  Records added: ",CNT2,!
"RTN","LA7VLCM3",152,0)
 Q
"RTN","LA7VLCM4")
0^75^B20635804
"RTN","LA7VLCM4",1,0)
LA7VLCM4 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  12:29
"RTN","LA7VLCM4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM4",3,0)
 ;
"RTN","LA7VLCM4",4,0)
 ; Ex subs are the main entry points from menus, etc..
"RTN","LA7VLCM4",5,0)
 ; Px subs are the main workhorse (called from Ex)
"RTN","LA7VLCM4",6,0)
 Q
"RTN","LA7VLCM4",7,0)
 ;
"RTN","LA7VLCM4",8,0)
E1 ;
"RTN","LA7VLCM4",9,0)
 ; Print specific IDENTIFIER in #62.47
"RTN","LA7VLCM4",10,0)
 N CODE,X,DATA
"RTN","LA7VLCM4",11,0)
 S X=$$FINDID(.DATA)
"RTN","LA7VLCM4",12,0)
 Q:'X
"RTN","LA7VLCM4",13,0)
 S CODE=DATA(1)
"RTN","LA7VLCM4",14,0)
 S X="P1^LA7VLCM4("_CODE_")"
"RTN","LA7VLCM4",15,0)
 S QUE=$$QUE^LA7VLCM1(X,"Find Identifier from #62.47")
"RTN","LA7VLCM4",16,0)
 I QUE=-1 Q
"RTN","LA7VLCM4",17,0)
 I 'QUE D P1(CODE)
"RTN","LA7VLCM4",18,0)
 Q
"RTN","LA7VLCM4",19,0)
 ;
"RTN","LA7VLCM4",20,0)
P1(CODE) ;
"RTN","LA7VLCM4",21,0)
 ; Print code based on Message Config (R6248)
"RTN","LA7VLCM4",22,0)
 ; Inputs
"RTN","LA7VLCM4",23,0)
 ;   CODE  The code (IDENTIFIER) to display
"RTN","LA7VLCM4",24,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,START,TITLE
"RTN","LA7VLCM4",25,0)
 N R6247,R624701,DFL,IORVON,IORVOFF,X,CODSET,CONCLAST
"RTN","LA7VLCM4",26,0)
 N TMPNM,MSGCFG,LAMSG
"RTN","LA7VLCM4",27,0)
 S TMPNM="LA7VLCM4-P1"
"RTN","LA7VLCM4",28,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM4",29,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM4",30,0)
 S EOP=5
"RTN","LA7VLCM4",31,0)
 S TITLE="LAB CODE MAPPING ("_CODE_")"
"RTN","LA7VLCM4",32,0)
 S X="IORVON;IORVOFF"
"RTN","LA7VLCM4",33,0)
 D  ;
"RTN","LA7VLCM4",34,0)
 . N %ZIS
"RTN","LA7VLCM4",35,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM4",36,0)
 ; get max field sizes
"RTN","LA7VLCM4",37,0)
 S R6247=0
"RTN","LA7VLCM4",38,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA7VLCM4",39,0)
 . D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM4",40,0)
 S R6247=0
"RTN","LA7VLCM4",41,0)
 S START=1
"RTN","LA7VLCM4",42,0)
 D HDR^LA7VLCM1(.DFL,TITLE)
"RTN","LA7VLCM4",43,0)
 ; find matching records
"RTN","LA7VLCM4",44,0)
 S NODE="^LAB(62.47,""AH"",CODE)"
"RTN","LA7VLCM4",45,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="AH"  Q:$QS(NODE,3)'=CODE  D  ;
"RTN","LA7VLCM4",46,0)
 . S R6247=$QS(NODE,4)
"RTN","LA7VLCM4",47,0)
 . S R624701=$QS(NODE,5)
"RTN","LA7VLCM4",48,0)
 . S X=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA7VLCM4",49,0)
 . S CS=$P(X,U,2)
"RTN","LA7VLCM4",50,0)
 . S:CS="" CS=" "
"RTN","LA7VLCM4",51,0)
 . S MSGCFG=$$GET1^DIQ(62.4701,R624701_","_R6247_",",2.2,"","LAMSG")
"RTN","LA7VLCM4",52,0)
 . S:MSGCFG="" MSGCFG=" "
"RTN","LA7VLCM4",53,0)
 . S ^TMP(TMPNM,$J,R6247,CODE,CS,MSGCFG,R624701)=""
"RTN","LA7VLCM4",54,0)
 ;
"RTN","LA7VLCM4",55,0)
 D P1DISP
"RTN","LA7VLCM4",56,0)
 K ^TMP("LA7VLCM4-P1",$J)
"RTN","LA7VLCM4",57,0)
 D CLEAN^LA7VLCM1
"RTN","LA7VLCM4",58,0)
 Q
"RTN","LA7VLCM4",59,0)
 ;
"RTN","LA7VLCM4",60,0)
P1DISP ;
"RTN","LA7VLCM4",61,0)
 ; Utility display function for P1 (above)
"RTN","LA7VLCM4",62,0)
 ; now go thru sorted codes for display
"RTN","LA7VLCM4",63,0)
 ; ^TMP("LA7VLCM2-P1",$J,R6247,MSGCFG,R6248,CODE,CODSET,R624701)=""
"RTN","LA7VLCM4",64,0)
 N NODE,R6247,R624701,LASTCONC
"RTN","LA7VLCM4",65,0)
 N TMPNM
"RTN","LA7VLCM4",66,0)
 S TMPNM="LA7VLCM4-P1"
"RTN","LA7VLCM4",67,0)
 S LASTCONC=0 ;Last Concept printed
"RTN","LA7VLCM4",68,0)
 S NODE="^TMP(TMPNM,$J)"
"RTN","LA7VLCM4",69,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'=$J  Q:$QS(NODE,1)'=TMPNM  D  Q:EXIT  ;
"RTN","LA7VLCM4",70,0)
 . S R6247=$QS(NODE,3)
"RTN","LA7VLCM4",71,0)
 . S R624701=$QS(NODE,7)
"RTN","LA7VLCM4",72,0)
 . Q:'R624701
"RTN","LA7VLCM4",73,0)
 . I LASTCONC'=R6247 D  ;
"RTN","LA7VLCM4",74,0)
 . . I LASTCONC'=0 W !
"RTN","LA7VLCM4",75,0)
 . . D RVID^LA7VLCM1(1)
"RTN","LA7VLCM4",76,0)
 . . W !,"CONCEPT:",$$GET1^DIQ(62.47,R6247_",",".01","E","","")
"RTN","LA7VLCM4",77,0)
 . . W "  (",$$GET1^DIQ(62.47,R6247_",",".02","I","",""),")"
"RTN","LA7VLCM4",78,0)
 . . I $E($G(IOST),1,2)="C-" W $$RJ^XLFSTR("",IOM-$X," ")
"RTN","LA7VLCM4",79,0)
 . . D RVID^LA7VLCM1(0)
"RTN","LA7VLCM4",80,0)
 . . S LASTCONC=R6247
"RTN","LA7VLCM4",81,0)
 . D SUB^LA7VLCM1(.DFL,R6247,,R624701)
"RTN","LA7VLCM4",82,0)
 . ;
"RTN","LA7VLCM4",83,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM4",84,0)
 Q
"RTN","LA7VLCM4",85,0)
 ;
"RTN","LA7VLCM4",86,0)
FINDID(DATA) ;
"RTN","LA7VLCM4",87,0)
 ; Driver used with LOOKUP^LA7VLCM5 to emulate a DIC call
"RTN","LA7VLCM4",88,0)
 ; so users can select IDENTIFIERS from entire file.
"RTN","LA7VLCM4",89,0)
 ; Inputs
"RTN","LA7VLCM4",90,0)
 ;  DATA <byref>  See Outputs below
"RTN","LA7VLCM4",91,0)
 ;
"RTN","LA7VLCM4",92,0)
 ; Outputs
"RTN","LA7VLCM4",93,0)
 ;  Returns #62.47 IEN_"^"_#62.4701 IEN or "0^0" if no selection
"RTN","LA7VLCM4",94,0)
 ;  DATA(1) = Selection's text
"RTN","LA7VLCM4",95,0)
 ;  DATA(2) = Global node
"RTN","LA7VLCM4",96,0)
 ;
"RTN","LA7VLCM4",97,0)
 N IN,DIR,STOP,Y,LIST,SEL,NODE,FOUND
"RTN","LA7VLCM4",98,0)
 N GBL,OUT,USTAT,IDARR,SCRN
"RTN","LA7VLCM4",99,0)
 N R6247,R624701
"RTN","LA7VLCM4",100,0)
 K DATA
"RTN","LA7VLCM4",101,0)
 S FOUND=0
"RTN","LA7VLCM4",102,0)
 S (R6247,R624701)=0
"RTN","LA7VLCM4",103,0)
 S GBL="^LAB(62.47,""AH"","
"RTN","LA7VLCM4",104,0)
 S SCRN=""
"RTN","LA7VLCM4",105,0)
 S IDARR("NODE0")="^LAB(62.47,DA(1),1,DA,0)"
"RTN","LA7VLCM4",106,0)
 S IDARR("DA",0)=5
"RTN","LA7VLCM4",107,0)
 S IDARR("DA",1)=4
"RTN","LA7VLCM4",108,0)
 S STOP=0
"RTN","LA7VLCM4",109,0)
 ;
"RTN","LA7VLCM4",110,0)
 F  Q:STOP  Q:FOUND  D  ;
"RTN","LA7VLCM4",111,0)
 . S GBL="^LAB(62.47,""AH"","
"RTN","LA7VLCM4",112,0)
 . K IDARR
"RTN","LA7VLCM4",113,0)
 . S IDARR("NODE0")="^LAB(62.47,DA(1),1,DA,0)"
"RTN","LA7VLCM4",114,0)
 . S IDARR("DA",0)=5
"RTN","LA7VLCM4",115,0)
 . S IDARR("DA",1)=4
"RTN","LA7VLCM4",116,0)
 . W !,"Select IDENTIFIER: "
"RTN","LA7VLCM4",117,0)
 . R IN:$G(DTIME,300)
"RTN","LA7VLCM4",118,0)
 . I '$T S STOP=1 Q
"RTN","LA7VLCM4",119,0)
 . I IN']"" S STOP=1 Q
"RTN","LA7VLCM4",120,0)
 . I $E(IN,1,1)="^" S STOP=1 Q
"RTN","LA7VLCM4",121,0)
 . I IN=" " D  ;
"RTN","LA7VLCM4",122,0)
 . . ; space bar return
"RTN","LA7VLCM4",123,0)
 . . S X=$G(^TMP($J,"LA7VLCM4","SBR",DUZ))
"RTN","LA7VLCM4",124,0)
 . . I X'="" S IN=X W " ",X
"RTN","LA7VLCM4",125,0)
 . ;
"RTN","LA7VLCM4",126,0)
 . I IN="?" D  Q  ;
"RTN","LA7VLCM4",127,0)
 . . W !,"  Enter an IDENTIFIER to find"
"RTN","LA7VLCM4",128,0)
 . ;
"RTN","LA7VLCM4",129,0)
 . I $E(IN,1,2)="??" D  ;
"RTN","LA7VLCM4",130,0)
 . . S FOUND=$$LOOKUP^LA7VLCM5(GBL,"??",.OUT,.USTAT,SCRN,.IDARR)
"RTN","LA7VLCM4",131,0)
 . . I USTAT="^" S STOP=1
"RTN","LA7VLCM4",132,0)
 . . Q:'FOUND
"RTN","LA7VLCM4",133,0)
 . . S SEL=OUT
"RTN","LA7VLCM4",134,0)
 . . S NODE=OUT(1)
"RTN","LA7VLCM4",135,0)
 . . S R6247=$QS(NODE,4)
"RTN","LA7VLCM4",136,0)
 . . S R624701=$QS(NODE,5)
"RTN","LA7VLCM4",137,0)
 . ;
"RTN","LA7VLCM4",138,0)
 . I 'FOUND I $E(IN,1,2)'="??" D  ;
"RTN","LA7VLCM4",139,0)
 . . S FOUND=$$LOOKUP^LA7VLCM5(GBL,IN,.OUT,.USTAT,"",.IDARR)
"RTN","LA7VLCM4",140,0)
 . . S:USTAT="^" STOP=1
"RTN","LA7VLCM4",141,0)
 . . I 'FOUND I 'STOP D  Q:STOP  ;
"RTN","LA7VLCM4",142,0)
 . . . S GBL="^LAB(62.47,""AF"","""_IN_""""
"RTN","LA7VLCM4",143,0)
 . . . K IDARR
"RTN","LA7VLCM4",144,0)
 . . . S IDARR("NODE0")="^LAB(62.47,DA(1),1,DA,0)"
"RTN","LA7VLCM4",145,0)
 . . . S IDARR("DA",0)=6
"RTN","LA7VLCM4",146,0)
 . . . S IDARR("DA",1)=5
"RTN","LA7VLCM4",147,0)
 . . . S FOUND=$$LOOKUP^LA7VLCM5(GBL,"??",.OUT,.USTAT,"",.IDARR)
"RTN","LA7VLCM4",148,0)
 . . . S:USTAT="^" STOP="^"
"RTN","LA7VLCM4",149,0)
 . . I USTAT="^" S STOP=1
"RTN","LA7VLCM4",150,0)
 . . I 'FOUND D  Q  ;
"RTN","LA7VLCM4",151,0)
 . . . I 'STOP I USTAT<1 W $C(7)," ??"
"RTN","LA7VLCM4",152,0)
 . . ;
"RTN","LA7VLCM4",153,0)
 . . S SEL=OUT
"RTN","LA7VLCM4",154,0)
 . . S NODE=OUT(1)
"RTN","LA7VLCM4",155,0)
 . . S ^TMP($J,"LA7VLCM4","SBR",DUZ)=SEL ;space bar return
"RTN","LA7VLCM4",156,0)
 . . S R6247=$QS(NODE,4)
"RTN","LA7VLCM4",157,0)
 . . S R624701=$QS(NODE,5)
"RTN","LA7VLCM4",158,0)
 . ;
"RTN","LA7VLCM4",159,0)
 ;
"RTN","LA7VLCM4",160,0)
 I FOUND D  ;
"RTN","LA7VLCM4",161,0)
 . S DATA(1)=SEL
"RTN","LA7VLCM4",162,0)
 . S DATA(2)=NODE
"RTN","LA7VLCM4",163,0)
 Q R6247_"^"_R624701
"RTN","LA7VLCM4",164,0)
 ;
"RTN","LA7VLCM5")
0^79^B43878567
"RTN","LA7VLCM5",1,0)
LA7VLCM5 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;07/07/09  14:22
"RTN","LA7VLCM5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM5",3,0)
 ;
"RTN","LA7VLCM5",4,0)
 Q
"RTN","LA7VLCM5",5,0)
 ;
"RTN","LA7VLCM5",6,0)
LOOKUP(GBL,FIND,OUT,ACTN,SCRN,IDARR) ;
"RTN","LA7VLCM5",7,0)
 ; DIC clone for use with "special" cross reference.
"RTN","LA7VLCM5",8,0)
 ; Allows programmer to display user choices from the xref of
"RTN","LA7VLCM5",9,0)
 ; their choosing.
"RTN","LA7VLCM5",10,0)
 ; Useful when trying to work with sub-file entries as top-level
"RTN","LA7VLCM5",11,0)
 ; "pick-list" entries and the sub-file has a "Whole File" xref
"RTN","LA7VLCM5",12,0)
 ; defined.
"RTN","LA7VLCM5",13,0)
 ;
"RTN","LA7VLCM5",14,0)
 ; Inputs
"RTN","LA7VLCM5",15,0)
 ;     GBL Open global reference of the xref to use (up to xref)
"RTN","LA7VLCM5",16,0)
 ;         Should be a "standard B" xref type structure (ie #
"RTN","LA7VLCM5",17,0)
 ;         of subscripts in node doesnt change between nodes)
"RTN","LA7VLCM5",18,0)
 ;         xref: ^XYZ(123,"AF",1,2)="" then GBL = ^XYZ(123,"AF",
"RTN","LA7VLCM5",19,0)
 ;    FIND The target text to find in the xref
"RTN","LA7VLCM5",20,0)
 ;     OUT <byref> See Outputs below
"RTN","LA7VLCM5",21,0)
 ;    ACTN See Outputs below
"RTN","LA7VLCM5",22,0)
 ;    SCRN <opt> Data Screen
"RTN","LA7VLCM5",23,0)
 ;   IDARR <opt><byref>
"RTN","LA7VLCM5",24,0)
 ;         IDARR("NODE0") = full global reference to data zero node
"RTN","LA7VLCM5",25,0)
 ;          ie: IDENT("NODE0")="^XYZ(123.2,DA(1),1,DA,0)"
"RTN","LA7VLCM5",26,0)
 ;         IDARR("DA",n)= DA location in GBL node
"RTN","LA7VLCM5",27,0)
 ;          ie: IDENT("DA",0)=3 ;DA is subscr #3 in GBL var
"RTN","LA7VLCM5",28,0)
 ;         IDARR("W") = additional Identifier to display
"RTN","LA7VLCM5",29,0)
 ;          ie: IDENT("W")="W "Another Identifier"""
"RTN","LA7VLCM5",30,0)
 ;         IDARR("NOIDENT") : if set FM IDENTIFIER wont display
"RTN","LA7VLCM5",31,0)
 ;         IDARR("POINTER") : defines File# if NODE is a POINTER
"RTN","LA7VLCM5",32,0)
 ;                            ie IDARR("POINTER")=61.2
"RTN","LA7VLCM5",33,0)
 ;                            If VPointer specify as FM var pointer:
"RTN","LA7VLCM5",34,0)
 ;                            ie "LAB(61.2;LAB(62.49;" etc..
"RTN","LA7VLCM5",35,0)
 ;         IDARR("UNIQUE") : If set only displays the matches that
"RTN","LA7VLCM5",36,0)
 ;                           havent been displayed already.
"RTN","LA7VLCM5",37,0)
 ;
"RTN","LA7VLCM5",38,0)
 ; Outputs
"RTN","LA7VLCM5",39,0)
 ;  Returns 0 if FIND not found, 1 if FIND was found.
"RTN","LA7VLCM5",40,0)
 ;   If return = 0 should check ACTN for return status
"RTN","LA7VLCM5",41,0)
 ;
"RTN","LA7VLCM5",42,0)
 ;     OUT <byref> If FIND was found OUT will contain:
"RTN","LA7VLCM5",43,0)
 ;           OUT = Text value of selected entry
"RTN","LA7VLCM5",44,0)
 ;           OUT(1) = GBL's full node of the selected entry
"RTN","LA7VLCM5",45,0)
 ;    ACTN "^" = abort listing, >-1 = # records displayed
"RTN","LA7VLCM5",46,0)
 ;          -1 = FIND was not found in xref
"RTN","LA7VLCM5",47,0)
 ;
"RTN","LA7VLCM5",48,0)
 N NODE,NODETOP,NODE0,STOP,FOUND,X,X2,I,SUBSCR
"RTN","LA7VLCM5",49,0)
 N SHOWALL,CNT,CNTLST,CNT2,ISPTR,ISVPTR,UNIQUE
"RTN","LA7VLCM5",50,0)
 N VAL,LASTVAL,STATUS,TMPNM,IN,DA,IDENT,DIC,DO,IOCUU,%ZIS
"RTN","LA7VLCM5",51,0)
 N DIR,DUOUT,DIRUT
"RTN","LA7VLCM5",52,0)
 S TMPNM="LA7VLCM5-LOOKUP"
"RTN","LA7VLCM5",53,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM5",54,0)
 S GBL=$G(GBL)
"RTN","LA7VLCM5",55,0)
 S SCRN=$G(SCRN)
"RTN","LA7VLCM5",56,0)
 K OUT,ACTN
"RTN","LA7VLCM5",57,0)
 S ACTN=0
"RTN","LA7VLCM5",58,0)
 S (FOUND,STOP,SHOWALL,CNT,CNTLST,CNT2,STATUS)=0
"RTN","LA7VLCM5",59,0)
 S NODE0=$G(IDARR("NODE0"))
"RTN","LA7VLCM5",60,0)
 S NODE=GBL
"RTN","LA7VLCM5",61,0)
 S NODETOP=""
"RTN","LA7VLCM5",62,0)
 ; setup screen control variables
"RTN","LA7VLCM5",63,0)
 I FIND="??" I $G(IOST(0))'="" D  ;
"RTN","LA7VLCM5",64,0)
 . S X="IOCUU" ;cursor up
"RTN","LA7VLCM5",65,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM5",66,0)
 . K %ZIS
"RTN","LA7VLCM5",67,0)
 I FIND'="??" D  ;
"RTN","LA7VLCM5",68,0)
 . S NODE=NODE_""""_FIND_""")"
"RTN","LA7VLCM5",69,0)
 . S SUBSCR=$QL(NODE)
"RTN","LA7VLCM5",70,0)
 I FIND="??" D  ;
"RTN","LA7VLCM5",71,0)
 . S NODE=$$TRIM^XLFSTR(NODE,"R",",")
"RTN","LA7VLCM5",72,0)
 . I $E(NODE,1,$L(NODE))'=")" S NODE=NODE_")"
"RTN","LA7VLCM5",73,0)
 . S SUBSCR=$QL(NODE)+1
"RTN","LA7VLCM5",74,0)
 ;
"RTN","LA7VLCM5",75,0)
 S (ISPTR,ISVPTR,UNIQUE)=0
"RTN","LA7VLCM5",76,0)
 I $G(IDARR("POINTER"))'="" D  ;
"RTN","LA7VLCM5",77,0)
 . S ISPTR=1
"RTN","LA7VLCM5",78,0)
 . I IDARR("POINTER")[";" S ISVPTR=1
"RTN","LA7VLCM5",79,0)
 I $D(IDARR("UNIQUE")) S UNIQUE=1
"RTN","LA7VLCM5",80,0)
 ;
"RTN","LA7VLCM5",81,0)
 I FIND="??" S SHOWALL=1
"RTN","LA7VLCM5",82,0)
 S LASTVAL=""
"RTN","LA7VLCM5",83,0)
 F  S NODE=$Q(@NODE) S X=$TR($E(NODE,1,$L(GBL)),"""","") S X2=$TR(GBL,"""","") Q:X'[X2  D  Q:STOP  Q:FOUND  ;
"RTN","LA7VLCM5",84,0)
 . I CNT2=0 I SHOWALL W !,"Choose from:"
"RTN","LA7VLCM5",85,0)
 . ; dont process NODE if # of subscripts doesnt match
"RTN","LA7VLCM5",86,0)
 . I NODETOP="" S NODETOP=NODE
"RTN","LA7VLCM5",87,0)
 . I NODETOP'="" I $QL(NODE)'=$QL(NODETOP) Q
"RTN","LA7VLCM5",88,0)
 . S CNT2=CNT2+1 ;number of nodes checked
"RTN","LA7VLCM5",89,0)
 . I $D(IDARR) D  ;
"RTN","LA7VLCM5",90,0)
 . . ;setup DA array
"RTN","LA7VLCM5",91,0)
 . . K DA
"RTN","LA7VLCM5",92,0)
 . . S I=""
"RTN","LA7VLCM5",93,0)
 . . F  S I=$O(IDARR("DA",I)) Q:I=""  S X=IDARR("DA",I) S:I>0 DA(I)=$QS(NODE,X) S:I=0 DA=$QS(NODE,X)
"RTN","LA7VLCM5",94,0)
 . . ; setup FileMan IDENTIFIER
"RTN","LA7VLCM5",95,0)
 . . I '$D(IDENT) I '$D(IDARR("NOIDENT")) D  ;
"RTN","LA7VLCM5",96,0)
 . . . S IDENT=""
"RTN","LA7VLCM5",97,0)
 . . . K DIC,DO
"RTN","LA7VLCM5",98,0)
 . . . S X=$G(IDARR("NODE0"))
"RTN","LA7VLCM5",99,0)
 . . . Q:X=""
"RTN","LA7VLCM5",100,0)
 . . . S X=$P(X,",DA,",1)
"RTN","LA7VLCM5",101,0)
 . . . S X=X_")"
"RTN","LA7VLCM5",102,0)
 . . . S X=$NA(@X)
"RTN","LA7VLCM5",103,0)
 . . . S X=$$TRIM^XLFSTR(X,"R",")")
"RTN","LA7VLCM5",104,0)
 . . . S X=$$TRIM^XLFSTR(X,"R",",")
"RTN","LA7VLCM5",105,0)
 . . . S DIC=X_","
"RTN","LA7VLCM5",106,0)
 . . . S DIC(0)=""
"RTN","LA7VLCM5",107,0)
 . . . D DO^DIC1
"RTN","LA7VLCM5",108,0)
 . . . S IDENT=$G(DIC("W"))
"RTN","LA7VLCM5",109,0)
 . . ;
"RTN","LA7VLCM5",110,0)
 . ;
"RTN","LA7VLCM5",111,0)
 . S VAL=$QS(NODE,SUBSCR)
"RTN","LA7VLCM5",112,0)
 . I SCRN'="" D  Q:'$T  ;
"RTN","LA7VLCM5",113,0)
 . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",114,0)
 . . X SCRN
"RTN","LA7VLCM5",115,0)
 . . S LASTVAL=VAL
"RTN","LA7VLCM5",116,0)
 . ;
"RTN","LA7VLCM5",117,0)
 . I 'SHOWALL I $E(VAL,1,$L(FIND))'=FIND S LASTVAL=VAL Q  ; SHOWALL for "??" entry
"RTN","LA7VLCM5",118,0)
 . I 'SHOWALL I VAL=FIND D  Q:FOUND  ;
"RTN","LA7VLCM5",119,0)
 . . I $G(IDENT)'="" D  ;
"RTN","LA7VLCM5",120,0)
 . . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",121,0)
 . . . X IDENT
"RTN","LA7VLCM5",122,0)
 . . I $G(IDARR("W"))'="" D  ;
"RTN","LA7VLCM5",123,0)
 . . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",124,0)
 . . . X IDARR("W")
"RTN","LA7VLCM5",125,0)
 . . ; If a direct match ask "...OK  //Yes?"
"RTN","LA7VLCM5",126,0)
 . . K DIR
"RTN","LA7VLCM5",127,0)
 . . S DIR(0)="YAO"
"RTN","LA7VLCM5",128,0)
 . . S DIR("A")="        ... OK "
"RTN","LA7VLCM5",129,0)
 . . S DIR("B")="Yes"
"RTN","LA7VLCM5",130,0)
 . . D ^DIR
"RTN","LA7VLCM5",131,0)
 . . I Y D  ;
"RTN","LA7VLCM5",132,0)
 . . . S FOUND=1
"RTN","LA7VLCM5",133,0)
 . . . S ^TMP(TMPNM,$J,1,1)=VAL
"RTN","LA7VLCM5",134,0)
 . . . S ^TMP(TMPNM,$J,1,2)=NODE
"RTN","LA7VLCM5",135,0)
 . . ;
"RTN","LA7VLCM5",136,0)
 . ;
"RTN","LA7VLCM5",137,0)
 . S CNT=CNT+1
"RTN","LA7VLCM5",138,0)
 . S ^TMP(TMPNM,$J,CNT,1)=VAL
"RTN","LA7VLCM5",139,0)
 . S ^TMP(TMPNM,$J,CNT,2)=NODE
"RTN","LA7VLCM5",140,0)
 . I 'SHOWALL W !,?5,CNT,?10,VAL
"RTN","LA7VLCM5",141,0)
 . ;
"RTN","LA7VLCM5",142,0)
 . I SHOWALL I 'ISPTR D  ;
"RTN","LA7VLCM5",143,0)
 . . I 'UNIQUE W !,"   ",VAL Q
"RTN","LA7VLCM5",144,0)
 . . I VAL'=LASTVAL W !,"   ",VAL
"RTN","LA7VLCM5",145,0)
 . ;
"RTN","LA7VLCM5",146,0)
 . I SHOWALL I ISPTR D  ;
"RTN","LA7VLCM5",147,0)
 . . N MSG,DIERR
"RTN","LA7VLCM5",148,0)
 . . S X=IDARR("POINTER")
"RTN","LA7VLCM5",149,0)
 . . S X=$$GET1^DIQ(X,VAL_",",.01,"","","MSG")
"RTN","LA7VLCM5",150,0)
 . . I 'UNIQUE D  ;
"RTN","LA7VLCM5",151,0)
 . . . I X'="" W !,"   ",X
"RTN","LA7VLCM5",152,0)
 . . . I X="" W !,"   ",VAL
"RTN","LA7VLCM5",153,0)
 . . ;
"RTN","LA7VLCM5",154,0)
 . . I UNIQUE D  ;
"RTN","LA7VLCM5",155,0)
 . . . I VAL'=LASTVAL I X'="" W !,"   ",X
"RTN","LA7VLCM5",156,0)
 . . . I VAL'=LASTVAL I X="" W !,"   ",VAL
"RTN","LA7VLCM5",157,0)
 . . ;
"RTN","LA7VLCM5",158,0)
 . ;
"RTN","LA7VLCM5",159,0)
 . I $G(IDENT)'="" D  ;
"RTN","LA7VLCM5",160,0)
 . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",161,0)
 . . X IDENT
"RTN","LA7VLCM5",162,0)
 . I $G(IDARR("W"))'="" D  ;
"RTN","LA7VLCM5",163,0)
 . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",164,0)
 . . X IDARR("W")
"RTN","LA7VLCM5",165,0)
 . S LASTVAL=VAL
"RTN","LA7VLCM5",166,0)
 . ;
"RTN","LA7VLCM5",167,0)
 . I (SHOWALL&((CNT#($G(IOSL,24)-2)=0)))!('SHOWALL&(CNT#5=0)) D  ;
"RTN","LA7VLCM5",168,0)
 . . S CNTLST=CNT
"RTN","LA7VLCM5",169,0)
 . . K DIR
"RTN","LA7VLCM5",170,0)
 . . S DIR(0)="FAOUr^^"
"RTN","LA7VLCM5",171,0)
 . . S DIR("?")=" "
"RTN","LA7VLCM5",172,0)
 . . I 'SHOWALL D  ;
"RTN","LA7VLCM5",173,0)
 . . . S DIR("?",1)="Press <RETURN> to see more, '^' to exit this list,"
"RTN","LA7VLCM5",174,0)
 . . I SHOWALL D  ;
"RTN","LA7VLCM5",175,0)
 . . . S DIR("?",1)=""
"RTN","LA7VLCM5",176,0)
 . . ;
"RTN","LA7VLCM5",177,0)
 . . I 'SHOWALL D  ;
"RTN","LA7VLCM5",178,0)
 . . . W !,"Press <RETURN> to see more, '^' to exit this list"
"RTN","LA7VLCM5",179,0)
 . . ;
"RTN","LA7VLCM5",180,0)
 . . I 'SHOWALL S DIR("A")="OR CHOOSE 1-"_CNT_": "
"RTN","LA7VLCM5",181,0)
 . . I SHOWALL S DIR("A")="  '^' TO STOP "
"RTN","LA7VLCM5",182,0)
 . . D ^DIR
"RTN","LA7VLCM5",183,0)
 . . ;erase "'^' TO STOP" displayed
"RTN","LA7VLCM5",184,0)
 . . I SHOWALL I $G(IOCUU)'="" W $C(13)_$J("",15)_$C(13)_IOCUU
"RTN","LA7VLCM5",185,0)
 . . I +Y=Y I Y>0 I Y'>CNT S FOUND=Y Q
"RTN","LA7VLCM5",186,0)
 . . I $E(Y,1,1)="^" S STOP=1
"RTN","LA7VLCM5",187,0)
 . . I $D(DUOUT) S STOP=1
"RTN","LA7VLCM5",188,0)
 . . I Y'="" S:$D(DIRUT) STOP=1
"RTN","LA7VLCM5",189,0)
 . ;
"RTN","LA7VLCM5",190,0)
 ;
"RTN","LA7VLCM5",191,0)
 I 'SHOWALL I 'FOUND I CNT I CNT>CNTLST I 'STOP D  ;
"RTN","LA7VLCM5",192,0)
 . ; last "CHOOSE 1-X" prompt
"RTN","LA7VLCM5",193,0)
 . K DIR
"RTN","LA7VLCM5",194,0)
 . S DIR(0)="FAOUr^^"
"RTN","LA7VLCM5",195,0)
 . S DIR("?")=" "
"RTN","LA7VLCM5",196,0)
 . S DIR("A")="CHOOSE 1-"_CNT_": "
"RTN","LA7VLCM5",197,0)
 . D ^DIR
"RTN","LA7VLCM5",198,0)
 . I +Y=Y I Y>0 I Y'>CNT S FOUND=Y Q
"RTN","LA7VLCM5",199,0)
 . I $E(Y,1,1)="^" S STOP=1
"RTN","LA7VLCM5",200,0)
 . S:$D(DUOUT) STOP=1
"RTN","LA7VLCM5",201,0)
 . I Y'="" S:$D(DIRUT) STOP=1 Q
"RTN","LA7VLCM5",202,0)
 ;
"RTN","LA7VLCM5",203,0)
 I FOUND D  ;
"RTN","LA7VLCM5",204,0)
 . S OUT=^TMP(TMPNM,$J,FOUND,1)
"RTN","LA7VLCM5",205,0)
 . S OUT(1)=^TMP(TMPNM,$J,FOUND,2)
"RTN","LA7VLCM5",206,0)
 . S STATUS=1
"RTN","LA7VLCM5",207,0)
 . W "  ",OUT
"RTN","LA7VLCM5",208,0)
 . ; print selected record's IDENTIFIER
"RTN","LA7VLCM5",209,0)
 . I $D(IDARR) D  ;
"RTN","LA7VLCM5",210,0)
 . . S NODE=OUT(1)
"RTN","LA7VLCM5",211,0)
 . . ;setup DA array
"RTN","LA7VLCM5",212,0)
 . . K DA
"RTN","LA7VLCM5",213,0)
 . . S I=""
"RTN","LA7VLCM5",214,0)
 . . F  S I=$O(IDARR("DA",I)) Q:I=""  S X=IDARR("DA",I) S:I>0 DA(I)=$QS(NODE,X) S:I=0 DA=$QS(NODE,X)
"RTN","LA7VLCM5",215,0)
 . . I NODE0'="" S X=@NODE0 ; set naked gbl reference
"RTN","LA7VLCM5",216,0)
 . . I IDENT'=""  I '$D(IDARR("NOIDENT")) X IDENT
"RTN","LA7VLCM5",217,0)
 . . I $G(IDARR("W"))'="" X IDARR("W")
"RTN","LA7VLCM5",218,0)
 . ;
"RTN","LA7VLCM5",219,0)
 ;
"RTN","LA7VLCM5",220,0)
 I STOP D  ;
"RTN","LA7VLCM5",221,0)
 . S STATUS="0^1"
"RTN","LA7VLCM5",222,0)
 . S ACTN="^"
"RTN","LA7VLCM5",223,0)
 ;
"RTN","LA7VLCM5",224,0)
 I 'FOUND I 'STOP D  ;
"RTN","LA7VLCM5",225,0)
 . S STATUS=0
"RTN","LA7VLCM5",226,0)
 . S ACTN=-1
"RTN","LA7VLCM5",227,0)
 ;
"RTN","LA7VLCM5",228,0)
 I CNT S ACTN=CNT
"RTN","LA7VLCM5",229,0)
 K ^TMP(TMPNM,$J)
"RTN","LA7VLCM5",230,0)
 Q STATUS
"RTN","LA7VLCM5",231,0)
 ;
"RTN","LA7VLCM6")
0^78^B24210919
"RTN","LA7VLCM6",1,0)
LA7VLCM6 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  15:51
"RTN","LA7VLCM6",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM6",3,0)
 ;
"RTN","LA7VLCM6",4,0)
 Q
"RTN","LA7VLCM6",5,0)
 ; Ex subs are the main entry points from menus, etc..
"RTN","LA7VLCM6",6,0)
 ; Px subs are the main workhorse (called from Ex)
"RTN","LA7VLCM6",7,0)
E0 ;
"RTN","LA7VLCM6",8,0)
 ; Individual CONCEPT from #62.47 file
"RTN","LA7VLCM6",9,0)
 N DIC,X,Y,ZTQUEUED,ZTSAVE
"RTN","LA7VLCM6",10,0)
 N R6247
"RTN","LA7VLCM6",11,0)
 W !
"RTN","LA7VLCM6",12,0)
 S DIC="^LAB(62.47,"
"RTN","LA7VLCM6",13,0)
 S DIC(0)="AEMQ"
"RTN","LA7VLCM6",14,0)
 D ^DIC
"RTN","LA7VLCM6",15,0)
 I Y<1 Q
"RTN","LA7VLCM6",16,0)
 S R6247=+Y
"RTN","LA7VLCM6",17,0)
 S X="SUB^LA7VLCM6("_R6247_")"
"RTN","LA7VLCM6",18,0)
 S ZTSAVE("R6247")=""
"RTN","LA7VLCM6",19,0)
 S X=$$QUE^LA7VLCM1(X,"Print CONCEPT from #62.47",.ZTSAVE)
"RTN","LA7VLCM6",20,0)
 I X=-1 Q
"RTN","LA7VLCM6",21,0)
 I X=0 D P0(R6247) Q
"RTN","LA7VLCM6",22,0)
 Q
"RTN","LA7VLCM6",23,0)
 ;
"RTN","LA7VLCM6",24,0)
E1 ;
"RTN","LA7VLCM6",25,0)
 ; Display CONCEPT SUSC MAPPINGS #7 & #21 from File #62.47
"RTN","LA7VLCM6",26,0)
 N X,Y,DIR,SHOW,MSGCFG,CODSET
"RTN","LA7VLCM6",27,0)
 N DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LA7VLCM6",28,0)
 S SHOW="A"
"RTN","LA7VLCM6",29,0)
 S DIR(0)="SB^A:ALL;M:MAPPED;U:UNAMPPED"
"RTN","LA7VLCM6",30,0)
 S DIR("A")="Print (A)ll, (M)apped, (U)nmapped"
"RTN","LA7VLCM6",31,0)
 S DIR("B")="A"
"RTN","LA7VLCM6",32,0)
 S DIR("?")="Mapped/Unmapped refers to entries that have their RELATED ENTRY field either set or not set."
"RTN","LA7VLCM6",33,0)
 D ^DIR
"RTN","LA7VLCM6",34,0)
 I $E(Y,1,1)="^" Q
"RTN","LA7VLCM6",35,0)
 I "^A^M^U^"'[("^"_Y_"^") S Y="A"
"RTN","LA7VLCM6",36,0)
 S SHOW=Y
"RTN","LA7VLCM6",37,0)
 ; Select a Message Config
"RTN","LA7VLCM6",38,0)
 ; xref=^LAB(62.47,"AG",R6248,R6247,R624701)
"RTN","LA7VLCM6",39,0)
 ;
"RTN","LA7VLCM6",40,0)
 ; Select a Code Set
"RTN","LA7VLCM6",41,0)
 ; xref=^LAB(62.47,R6247,1,"C",Code Set,DA)
"RTN","LA7VLCM6",42,0)
 ;
"RTN","LA7VLCM6",43,0)
 S X="P1^LA7VLCM6("_SHOW_")"
"RTN","LA7VLCM6",44,0)
 S X=$$QUE^LA7VLCM1(X,"Print SUSC from #62.47")
"RTN","LA7VLCM6",45,0)
 I X=-1 Q
"RTN","LA7VLCM6",46,0)
 I X=0 D P1(SHOW)
"RTN","LA7VLCM6",47,0)
 Q
"RTN","LA7VLCM6",48,0)
 ;
"RTN","LA7VLCM6",49,0)
E2 ;
"RTN","LA7VLCM6",50,0)
 ; Display all LOCAL codes in File #62.47
"RTN","LA7VLCM6",51,0)
 N X
"RTN","LA7VLCM6",52,0)
 S X="P2^LA7VLCM6"
"RTN","LA7VLCM6",53,0)
 S X=$$QUE^LA7VLCM1(X,"Print LOCAL CODES from #62.47")
"RTN","LA7VLCM6",54,0)
 I X=-1 Q
"RTN","LA7VLCM6",55,0)
 I X=0 D P2 Q
"RTN","LA7VLCM6",56,0)
 Q
"RTN","LA7VLCM6",57,0)
 ;
"RTN","LA7VLCM6",58,0)
P0(R6247) ;
"RTN","LA7VLCM6",59,0)
 ; Display individual CONCEPT
"RTN","LA7VLCM6",60,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,TITLE
"RTN","LA7VLCM6",61,0)
 N DFL
"RTN","LA7VLCM6",62,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM6",63,0)
 S EOP=5 ;line padding at end of page
"RTN","LA7VLCM6",64,0)
 D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM6",65,0)
 D HDR^LA7VLCM1(.DFL,"")
"RTN","LA7VLCM6",66,0)
 D SUB^LA7VLCM1(.DFL,R6247)
"RTN","LA7VLCM6",67,0)
 Q
"RTN","LA7VLCM6",68,0)
 ;
"RTN","LA7VLCM6",69,0)
P1(SHOW) ;
"RTN","LA7VLCM6",70,0)
 ; Display #7 and #21 Susceptibilities
"RTN","LA7VLCM6",71,0)
 ; Inputs
"RTN","LA7VLCM6",72,0)
 ;  SHOW :<opt> Show all or partial matches (entry has RELATED FILE?)
"RTN","LA7VLCM6",73,0)
 ;       : A=all<default> M=mapped  U=unmapped
"RTN","LA7VLCM6",74,0)
 ;
"RTN","LA7VLCM6",75,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,TITLE
"RTN","LA7VLCM6",76,0)
 N R6247,R624701,DFL,IORVOFF,IORVON,X,CODE,NODE
"RTN","LA7VLCM6",77,0)
 S SHOW=$G(SHOW,"A")
"RTN","LA7VLCM6",78,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM6",79,0)
 S X="IORVON;IORVOFF"
"RTN","LA7VLCM6",80,0)
 D  ;
"RTN","LA7VLCM6",81,0)
 . N %ZIS
"RTN","LA7VLCM6",82,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM6",83,0)
 S TITLE="LAB CODE MAPPING -- SUSCEPTIBILITIES"
"RTN","LA7VLCM6",84,0)
 S EOP=5
"RTN","LA7VLCM6",85,0)
 ; get max field sizes
"RTN","LA7VLCM6",86,0)
 F R6247=7,21 D  ;
"RTN","LA7VLCM6",87,0)
 . D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM6",88,0)
 D HDR^LA7VLCM1(.DFL,TITLE)
"RTN","LA7VLCM6",89,0)
 F R6247=7,21 D  Q:EXIT  ;
"RTN","LA7VLCM6",90,0)
 . I R6247'=7 W !
"RTN","LA7VLCM6",91,0)
 . D RVID^LA7VLCM1(1)
"RTN","LA7VLCM6",92,0)
 . W !,"CONCEPT:",$$GET1^DIQ(62.47,R6247_",",".01","E","","")
"RTN","LA7VLCM6",93,0)
 . W "  (",$$GET1^DIQ(62.47,R6247_",",".02","I","",""),")"
"RTN","LA7VLCM6",94,0)
 . I $E($G(IOST),1,2)="C-" W $$RJ^XLFSTR("",IOM-$X," ")
"RTN","LA7VLCM6",95,0)
 . D RVID^LA7VLCM1(0)
"RTN","LA7VLCM6",96,0)
 . I SHOW="A" D  Q  ;
"RTN","LA7VLCM6",97,0)
 . . D SUB^LA7VLCM1(.DFL,R6247)
"RTN","LA7VLCM6",98,0)
 . I SHOW'="A" D  Q  ;
"RTN","LA7VLCM6",99,0)
 . . S CODE=""
"RTN","LA7VLCM6",100,0)
 . . S R624701=0
"RTN","LA7VLCM6",101,0)
 . . S NODE="^LAB(62.47,R6247,1,""B"")"
"RTN","LA7VLCM6",102,0)
 . . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,4)'="B"  Q:$QS(NODE,3)'=1  Q:$QS(NODE,2)'=R6247  Q:EXIT  D  ;
"RTN","LA7VLCM6",103,0)
 . . . S CODE=$QS(NODE,5)
"RTN","LA7VLCM6",104,0)
 . . . S R624701=$QS(NODE,6)
"RTN","LA7VLCM6",105,0)
 . . . Q:'R624701
"RTN","LA7VLCM6",106,0)
 . . . S X=$G(^LAB(62.47,R6247,1,R624701,2))
"RTN","LA7VLCM6",107,0)
 . . . S X=$P(X,U,1)
"RTN","LA7VLCM6",108,0)
 . . . I SHOW="M" Q:X=""  ;mapped
"RTN","LA7VLCM6",109,0)
 . . . I SHOW="U" Q:X'=""  ;unmapped
"RTN","LA7VLCM6",110,0)
 . . . D SUB^LA7VLCM1(.DFL,R6247,,R624701)
"RTN","LA7VLCM6",111,0)
 . . ;
"RTN","LA7VLCM6",112,0)
 . ;
"RTN","LA7VLCM6",113,0)
 D CLEAN^LA7VLCM1
"RTN","LA7VLCM6",114,0)
 Q
"RTN","LA7VLCM6",115,0)
 ;
"RTN","LA7VLCM6",116,0)
P2 ;
"RTN","LA7VLCM6",117,0)
 ; Display all Local Codes
"RTN","LA7VLCM6",118,0)
 N EXIT,LINE,LINE2,NOW,PAGE,EOP,START,TITLE
"RTN","LA7VLCM6",119,0)
 N R6247,R624701,DFL,IORVON,IORVOFF,X,CODE,CODSET
"RTN","LA7VLCM6",120,0)
 D INIT^LA7VLCM1
"RTN","LA7VLCM6",121,0)
 S EOP=5
"RTN","LA7VLCM6",122,0)
 S TITLE="LAB CODE MAPPING -- LOCAL CODES"
"RTN","LA7VLCM6",123,0)
 S X="IORVON;IORVOFF"
"RTN","LA7VLCM6",124,0)
 D  ;
"RTN","LA7VLCM6",125,0)
 . N %ZIS
"RTN","LA7VLCM6",126,0)
 . D ENDR^%ZISS
"RTN","LA7VLCM6",127,0)
 ; get max field sizes
"RTN","LA7VLCM6",128,0)
 S R6247=0
"RTN","LA7VLCM6",129,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  ;
"RTN","LA7VLCM6",130,0)
 . D DFL^LA7VLCM1(R6247,.DFL)
"RTN","LA7VLCM6",131,0)
 S R6247=0
"RTN","LA7VLCM6",132,0)
 S START=1
"RTN","LA7VLCM6",133,0)
 D HDR^LA7VLCM1(.DFL,TITLE)
"RTN","LA7VLCM6",134,0)
 F  S R6247=$O(^LAB(62.47,R6247)) Q:'R6247  D  Q:EXIT  ;
"RTN","LA7VLCM6",135,0)
 . ; does this R6247 have any Local codes?
"RTN","LA7VLCM6",136,0)
 . I '$O(^LAB(62.47,R6247,1,"AC",0,0)) Q
"RTN","LA7VLCM6",137,0)
 . I 'START W !
"RTN","LA7VLCM6",138,0)
 . D RVID^LA7VLCM1(1)
"RTN","LA7VLCM6",139,0)
 . W !,"CONCEPT:",$$GET1^DIQ(62.47,R6247_",",".01","E","","")
"RTN","LA7VLCM6",140,0)
 . W "  (",$$GET1^DIQ(62.47,R6247_",",".02","I","",""),")"
"RTN","LA7VLCM6",141,0)
 . I $E($G(IOST),1,2)="C-" W $$RJ^XLFSTR("",IOM-$X," ")
"RTN","LA7VLCM6",142,0)
 . D RVID^LA7VLCM1(0)
"RTN","LA7VLCM6",143,0)
 . K ^TMP("LA7VLCM6-P2",$J)
"RTN","LA7VLCM6",144,0)
 . S R624701=0
"RTN","LA7VLCM6",145,0)
 . ;create sort global
"RTN","LA7VLCM6",146,0)
 . F  S R624701=$O(^LAB(62.47,R6247,1,"AC",0,R624701)) Q:'R624701  D  ;
"RTN","LA7VLCM6",147,0)
 . . S X=$G(^LAB(62.47,R6247,1,R624701,0))
"RTN","LA7VLCM6",148,0)
 . . S CODE=$P(X,U,1)
"RTN","LA7VLCM6",149,0)
 . . S CODSET=$P(X,U,2)
"RTN","LA7VLCM6",150,0)
 . . S:CODE="" CODE="??" S:CODSET="" CODSET="??" S ^TMP("LA7VLCM6-P2",$J,CODE,CODSET,R624701)=""
"RTN","LA7VLCM6",151,0)
 . ;now go thru sorted codes for display
"RTN","LA7VLCM6",152,0)
 . S NODE="^TMP(""LA7VLCM6-P2"",$J)"
"RTN","LA7VLCM6",153,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'=$J  Q:$QS(NODE,1)'="LA7VLCM6-P2"  D  Q:EXIT  ;
"RTN","LA7VLCM6",154,0)
 . . S R624701=$QS(NODE,5)
"RTN","LA7VLCM6",155,0)
 . . Q:'R624701
"RTN","LA7VLCM6",156,0)
 . . D SUB^LA7VLCM1(.DFL,R6247,,R624701)
"RTN","LA7VLCM6",157,0)
 . S START=0
"RTN","LA7VLCM6",158,0)
 . K ^TMP("LA7VLCM6-P2",$J)
"RTN","LA7VLCM6",159,0)
 . ;
"RTN","LA7VLCM6",160,0)
 D CLEAN^LA7VLCM1
"RTN","LA7VLCM6",161,0)
 Q
"RTN","LA7VLCM7")
0^83^B54459099
"RTN","LA7VLCM7",1,0)
LA7VLCM7 ;DALOI/JDB - LAB CODE MAPPING FILE UTILITIES ;03/07/12  15:59
"RTN","LA7VLCM7",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VLCM7",3,0)
 ;
"RTN","LA7VLCM7",4,0)
 Q
"RTN","LA7VLCM7",5,0)
 ;
"RTN","LA7VLCM7",6,0)
DOD6247 ;
"RTN","LA7VLCM7",7,0)
 ; Prompts user for Message Configuration in #62.47 to add
"RTN","LA7VLCM7",8,0)
 ; the DOD local codes to.
"RTN","LA7VLCM7",9,0)
 N DIC,X,Y
"RTN","LA7VLCM7",10,0)
 S DIC(0)="ABEOQV"
"RTN","LA7VLCM7",11,0)
 S DIC=62.48
"RTN","LA7VLCM7",12,0)
 S DIC("A")="Select MESSAGE CONFIGURATION: "
"RTN","LA7VLCM7",13,0)
 S DIC("S")="I $P(^(0),U,9)=10 I $P(^(0),U,1)["" HOST """
"RTN","LA7VLCM7",14,0)
 D ^DIC
"RTN","LA7VLCM7",15,0)
 K DIC
"RTN","LA7VLCM7",16,0)
 I Y'>0 Q
"RTN","LA7VLCM7",17,0)
 D ADDDOD(+Y)
"RTN","LA7VLCM7",18,0)
 Q
"RTN","LA7VLCM7",19,0)
 ;
"RTN","LA7VLCM7",20,0)
ADDDOD(R6248) ;
"RTN","LA7VLCM7",21,0)
 ; Add DoD's local codes from DATA1 into file #62.47
"RTN","LA7VLCM7",22,0)
 ; Private method for DOD6247 above
"RTN","LA7VLCM7",23,0)
 ; Inputs
"RTN","LA7VLCM7",24,0)
 ;  R6248 : File #62.48 IEN
"RTN","LA7VLCM7",25,0)
 ;
"RTN","LA7VLCM7",26,0)
 N SEP,I,DATA,R6247,CODE,SYS,PURP,MSGCFG,IEN,LAFDA,LAMSG,DIERR
"RTN","LA7VLCM7",27,0)
 N R1,R2,FOUND,CNT,CONCPT,OVERIDE,NODE
"RTN","LA7VLCM7",28,0)
 S R6248=$G(R6248)
"RTN","LA7VLCM7",29,0)
 Q:'R6248
"RTN","LA7VLCM7",30,0)
 Q:'$D(^LAHM(62.48,R6248))
"RTN","LA7VLCM7",31,0)
 S MSGCFG=$G(^LAHM(62.48,R6248,0))
"RTN","LA7VLCM7",32,0)
 S MSGCFG=$P(MSGCFG,"^",1)
"RTN","LA7VLCM7",33,0)
 Q:MSGCFG=""
"RTN","LA7VLCM7",34,0)
 S SEP="|"
"RTN","LA7VLCM7",35,0)
 S CNT=0
"RTN","LA7VLCM7",36,0)
 ; If data is added I's FOR loop needs adjusted
"RTN","LA7VLCM7",37,0)
 F I=3:1:10 S DATA=$T(DATA1+I) Q:DATA=""  D  ;
"RTN","LA7VLCM7",38,0)
 . S DATA=$$TRIM^XLFSTR(DATA)
"RTN","LA7VLCM7",39,0)
 . S DATA=$$TRIM^XLFSTR(DATA,"L",";")
"RTN","LA7VLCM7",40,0)
 . Q:DATA=""
"RTN","LA7VLCM7",41,0)
 . S CONCPT=$P(DATA,SEP,4)
"RTN","LA7VLCM7",42,0)
 . S R6247=$O(^LAB(62.47,"B",CONCPT,0))
"RTN","LA7VLCM7",43,0)
 . I 'R6247 D  Q  ;
"RTN","LA7VLCM7",44,0)
 . . W !,"Missing Concept: ",CONCPT
"RTN","LA7VLCM7",45,0)
 . S CODE=$P(DATA,SEP,1)
"RTN","LA7VLCM7",46,0)
 . S SYS=$P(DATA,SEP,2)
"RTN","LA7VLCM7",47,0)
 . S PURP=$P(DATA,SEP,3)
"RTN","LA7VLCM7",48,0)
 . S OVERIDE=$P(DATA,SEP,5)
"RTN","LA7VLCM7",49,0)
 . ; only add if not already on file for msg cfg
"RTN","LA7VLCM7",50,0)
 . S NODE="^LAB(62.47,""AF"","""_SYS_""","""_CODE_""")"
"RTN","LA7VLCM7",51,0)
 . S FOUND=0
"RTN","LA7VLCM7",52,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="AF"  Q:$QS(NODE,3)'=SYS  Q:$QS(NODE,4)'=CODE  D  Q:FOUND  ;
"RTN","LA7VLCM7",53,0)
 . . S R1=$QS(NODE,5)
"RTN","LA7VLCM7",54,0)
 . . S R2=$QS(NODE,6)
"RTN","LA7VLCM7",55,0)
 . . S DATA=$G(^LAB(62.47,R1,1,R2,2))
"RTN","LA7VLCM7",56,0)
 . . I $P(DATA,"^",2)=R6248 S FOUND=1
"RTN","LA7VLCM7",57,0)
 . ;
"RTN","LA7VLCM7",58,0)
 . I FOUND D  Q  ;
"RTN","LA7VLCM7",59,0)
 . . W !,"Skipping ",CODE,"  ",SYS,"  (already in file)"
"RTN","LA7VLCM7",60,0)
 . ;
"RTN","LA7VLCM7",61,0)
 . S CNT=CNT+1
"RTN","LA7VLCM7",62,0)
 . W !,"Adding ",CODE,"  ",SYS
"RTN","LA7VLCM7",63,0)
 . K IEN,LAFDA,LAMSG,DIERR
"RTN","LA7VLCM7",64,0)
 . S IEN="+1,"_R6247_","
"RTN","LA7VLCM7",65,0)
 . S LAFDA(1,62.4701,IEN,.01)=CODE
"RTN","LA7VLCM7",66,0)
 . S LAFDA(1,62.4701,IEN,.02)=SYS
"RTN","LA7VLCM7",67,0)
 . S LAFDA(1,62.4701,IEN,.03)=PURP
"RTN","LA7VLCM7",68,0)
 . S LAFDA(1,62.4701,IEN,.05)="N"
"RTN","LA7VLCM7",69,0)
 . S LAFDA(1,62.4701,IEN,2.2)=MSGCFG
"RTN","LA7VLCM7",70,0)
 . S LAFDA(1,62.4701,IEN,.04)=OVERIDE
"RTN","LA7VLCM7",71,0)
 . D UPDATE^DIE("E","LAFDA(1)","","LAMSG")
"RTN","LA7VLCM7",72,0)
 . I '$D(DIERR) W "  (okay)"
"RTN","LA7VLCM7",73,0)
 . I $D(DIERR) D  ;
"RTN","LA7VLCM7",74,0)
 . . W "  (error)"
"RTN","LA7VLCM7",75,0)
 . . D MSG^DIALOG("WE","","","","LAMSG") W !
"RTN","LA7VLCM7",76,0)
 . ;
"RTN","LA7VLCM7",77,0)
 Q
"RTN","LA7VLCM7",78,0)
 ;
"RTN","LA7VLCM7",79,0)
DATA1 ;
"RTN","LA7VLCM7",80,0)
 ; Used with ADDDOD above
"RTN","LA7VLCM7",81,0)
 ;;CODE|SYSTEM|PURPOSE|CONCEPT|OVERRIDE
"RTN","LA7VLCM7",82,0)
 ;;0410.2|99LAB|RESULT|BACTERIOLOGY REPORT
"RTN","LA7VLCM7",83,0)
 ;;0410.3|99LAB|RESULT|GRAM STAIN
"RTN","LA7VLCM7",84,0)
 ;;0420.1|99LAB|RESULT|ACID FAST STAIN QUANTITY|MYCOBACTERIA REPORT
"RTN","LA7VLCM7",85,0)
 ;;0420.2|99LAB|RESULT|MYCOBACTERIA REPORT
"RTN","LA7VLCM7",86,0)
 ;;0430.2|99LAB|RESULT|FUNGAL REPORT REMARK
"RTN","LA7VLCM7",87,0)
 ;;0430.3|99LAB|RESULT|MYCOLOGY SMEAR/PREP
"RTN","LA7VLCM7",88,0)
 ;;0440.3|99LAB|RESULT|PARASITE REPORT REMARK
"RTN","LA7VLCM7",89,0)
 ;;0450.1|99LAB|RESULT|VIROLOGY REPORT
"RTN","LA7VLCM7",90,0)
 Q
"RTN","LA7VLCM7",91,0)
 ;
"RTN","LA7VLCM7",92,0)
MAPABS ;
"RTN","LA7VLCM7",93,0)
 ; Main entry point for Mapping ABS codes.  Allows for queuing.
"RTN","LA7VLCM7",94,0)
 N DIR,X,Y,RTN,NOASK,QUE,POP,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LA7VLCM7",95,0)
 S NOASK=0
"RTN","LA7VLCM7",96,0)
 S DIR(0)="YAO"
"RTN","LA7VLCM7",97,0)
 S DIR("A")="Report only? "
"RTN","LA7VLCM7",98,0)
 S DIR("B")="YES"
"RTN","LA7VLCM7",99,0)
 S DIR("?")="YES only displays the report, NO allows the user to accept the suggested mapping."
"RTN","LA7VLCM7",100,0)
 D ^DIR
"RTN","LA7VLCM7",101,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q
"RTN","LA7VLCM7",102,0)
 S NOASK=+Y
"RTN","LA7VLCM7",103,0)
 S RTN="MAPABSQ^LA7VLCM7("_NOASK_")"
"RTN","LA7VLCM7",104,0)
 ;only allow queuing of "NO ASK" (report only) requests
"RTN","LA7VLCM7",105,0)
 I NOASK D  Q:QUE<0  ;
"RTN","LA7VLCM7",106,0)
 . S QUE=$$QUE^LA7VLCM1(RTN,"Map Antibiotic Susceptibilities")
"RTN","LA7VLCM7",107,0)
 . Q:QUE<0
"RTN","LA7VLCM7",108,0)
 . I 'QUE D  ;
"RTN","LA7VLCM7",109,0)
 . . D MAPABSQ(1)
"RTN","LA7VLCM7",110,0)
 . . D ^%ZISC
"RTN","LA7VLCM7",111,0)
 . ;
"RTN","LA7VLCM7",112,0)
 I 'NOASK D MAPABSQ(0)
"RTN","LA7VLCM7",113,0)
 Q
"RTN","LA7VLCM7",114,0)
 ;
"RTN","LA7VLCM7",115,0)
MAPABSQ(NOASK) ;
"RTN","LA7VLCM7",116,0)
 ; Map Antibiotic Susceptibilities
"RTN","LA7VLCM7",117,0)
 ; Private method for MAPABS above
"RTN","LA7VLCM7",118,0)
 ; Goes through #62.06 and checks if LOINC code is in #62.47
"RTN","LA7VLCM7",119,0)
 ; and has a RELATED ENTRY entered.
"RTN","LA7VLCM7",120,0)
 ; #62.06 field #64 -> #64 field #25 -> #62.47 
"RTN","LA7VLCM7",121,0)
 ;
"RTN","LA7VLCM7",122,0)
 N R6206,R64,R953,R6247,R62471,LOINC,LSFN,DATA
"RTN","LA7VLCM7",123,0)
 N CNT,CNT1,CNT2,CNT3,CNT4,CNT5,CNT6,X,Y,LAIEN,LAFDA,LAMSG,DIERR
"RTN","LA7VLCM7",124,0)
 N ABNAME,ABINAME,NODE,FOUND,LFSN,ISSUSC,LALOCK
"RTN","LA7VLCM7",125,0)
 N STOP,DIR,DIROUT,DIOUT,DTOUT,DIRUT
"RTN","LA7VLCM7",126,0)
 S NOASK=+$G(NOASK)
"RTN","LA7VLCM7",127,0)
 I $D(ZTQUEUED) S NOASK=1
"RTN","LA7VLCM7",128,0)
 S R6206=0
"RTN","LA7VLCM7",129,0)
 S (CNT,CNT1,CNT2,CNT3,CNT4,CNT5,CNT6)=0
"RTN","LA7VLCM7",130,0)
 I '$D(ZTQUEUED) I $E($G(IOST),1,2)="C-" D WAIT^DICD W !
"RTN","LA7VLCM7",131,0)
 S STOP=0
"RTN","LA7VLCM7",132,0)
 ;
"RTN","LA7VLCM7",133,0)
 F  S R6206=$O(^LAB(62.06,R6206)) Q:'R6206  D  Q:STOP  ;
"RTN","LA7VLCM7",134,0)
 . S CNT6=CNT6+1 ;# of #62.06 entries
"RTN","LA7VLCM7",135,0)
 ;
"RTN","LA7VLCM7",136,0)
 S R6206=0
"RTN","LA7VLCM7",137,0)
 F  S R6206=$O(^LAB(62.06,R6206)) Q:'R6206  D  Q:STOP  ;
"RTN","LA7VLCM7",138,0)
 . S CNT=CNT+1
"RTN","LA7VLCM7",139,0)
 . S DATA=$G(^LAB(62.06,R6206,0))
"RTN","LA7VLCM7",140,0)
 . S ABNAME=$P(DATA,"^",1)
"RTN","LA7VLCM7",141,0)
 . S ABINAME=$P(DATA,"^",4)
"RTN","LA7VLCM7",142,0)
 . S Y=ABINAME S Y(0)=Y S ABINAME=$$GET1^DID(63.3,Y,"","LABEL")
"RTN","LA7VLCM7",143,0)
 . I ABINAME="" D  ;
"RTN","LA7VLCM7",144,0)
 . . S ABINAME=$P(DATA,"^",8)
"RTN","LA7VLCM7",145,0)
 . . S Y=ABINAME S Y(0)=Y S ABINAME=$$GET1^DID(63.39,Y,"","LABEL")
"RTN","LA7VLCM7",146,0)
 . S DATA=$G(^LAB(62.06,R6206,64))
"RTN","LA7VLCM7",147,0)
 . S R64=$P(DATA,"^",1)
"RTN","LA7VLCM7",148,0)
 . I 'R64 D  Q  ;
"RTN","LA7VLCM7",149,0)
 . . W $C(7),!!,"---No NLT code in #62.06 for ",ABNAME," (",R6206,")"
"RTN","LA7VLCM7",150,0)
 . . D:NOASK PF(1)
"RTN","LA7VLCM7",151,0)
 . ;
"RTN","LA7VLCM7",152,0)
 . S DATA=$G(^LAM(R64,9))
"RTN","LA7VLCM7",153,0)
 . S R953=$P(DATA,"^",1)
"RTN","LA7VLCM7",154,0)
 . I 'R953 D  Q  ;
"RTN","LA7VLCM7",155,0)
 . . S X=$G(^LAM(R64,0))
"RTN","LA7VLCM7",156,0)
 . . S X=$P(X,"^",1)
"RTN","LA7VLCM7",157,0)
 . . W $C(7),!!,"---No DEFAULT LOINC CODE in #64:",R64," for ",X," (#62.06:",R6206,")"
"RTN","LA7VLCM7",158,0)
 . . D:NOASK PF(1)
"RTN","LA7VLCM7",159,0)
 . ;
"RTN","LA7VLCM7",160,0)
 . S LOINC=$$GET1^DIQ(95.3,R953_",",.01,"","","MSG")
"RTN","LA7VLCM7",161,0)
 . S LFSN=$G(^LAB(95.3,R953,80))
"RTN","LA7VLCM7",162,0)
 . Q:LOINC=""
"RTN","LA7VLCM7",163,0)
 . S DATA=$G(^LAB(95.3,R953,0))
"RTN","LA7VLCM7",164,0)
 . S ISSUSC=$P(DATA,"^",6)
"RTN","LA7VLCM7",165,0)
 . I ISSUSC'=576 D  ;
"RTN","LA7VLCM7",166,0)
 . . W $C(7),!,"---LOINC ",LOINC," in #64:",R64," not a susceptibility (#62.06:",R6206,")"
"RTN","LA7VLCM7",167,0)
 . . D:NOASK PF(1)
"RTN","LA7VLCM7",168,0)
 . . W !,"-----",LFSN
"RTN","LA7VLCM7",169,0)
 . . D:NOASK PF(1)
"RTN","LA7VLCM7",170,0)
 . ;
"RTN","LA7VLCM7",171,0)
 . S NODE="^LAB(62.47,""AF"",""LN"","""_LOINC_""")"
"RTN","LA7VLCM7",172,0)
 . S FOUND=0
"RTN","LA7VLCM7",173,0)
 . F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="AF"  Q:$QS(NODE,3)'="LN"  Q:$QS(NODE,4)'=LOINC  D  Q:STOP  ;
"RTN","LA7VLCM7",174,0)
 . . S R6247=$QS(NODE,5)
"RTN","LA7VLCM7",175,0)
 . . S R62471=$QS(NODE,6)
"RTN","LA7VLCM7",176,0)
 . . I "^7^21^"'[("^"_R6247_"^") Q
"RTN","LA7VLCM7",177,0)
 . . S DATA=$G(^LAB(62.47,R6247,1,R62471,0))
"RTN","LA7VLCM7",178,0)
 . . S X=$P(DATA,"^",5)
"RTN","LA7VLCM7",179,0)
 . . S CNT1=CNT1+1
"RTN","LA7VLCM7",180,0)
 . . Q:'X  ;not national
"RTN","LA7VLCM7",181,0)
 . . S CNT2=CNT2+1
"RTN","LA7VLCM7",182,0)
 . . S FOUND=1
"RTN","LA7VLCM7",183,0)
 . . S DATA=$G(^LAB(62.47,R6247,1,R62471,2))
"RTN","LA7VLCM7",184,0)
 . . S X=$P(DATA,"^",1) ;RELATED ENTRY
"RTN","LA7VLCM7",185,0)
 . . I X="" D  Q  ;
"RTN","LA7VLCM7",186,0)
 . . . S CNT3=CNT3+1
"RTN","LA7VLCM7",187,0)
 . . . W !!,"#62.06:",R6206,"  #95.3:",R953,"  #62.47:",R6247,",",R62471
"RTN","LA7VLCM7",188,0)
 . . . D:NOASK PF(1)
"RTN","LA7VLCM7",189,0)
 . . . W !,"No RELATED ENTRY for LOINC ",LOINC D:NOASK PF(1)
"RTN","LA7VLCM7",190,0)
 . . . W !,"   ",LFSN D:NOASK PF(1)
"RTN","LA7VLCM7",191,0)
 . . . S X="Use "_ABNAME
"RTN","LA7VLCM7",192,0)
 . . . I ABINAME'=ABNAME S X=X_" ("_ABINAME_")"
"RTN","LA7VLCM7",193,0)
 . . . S X=X_" for this mapping? "
"RTN","LA7VLCM7",194,0)
 . . . I NOASK W !,X  D PF(1) Q
"RTN","LA7VLCM7",195,0)
 . . . K DIR
"RTN","LA7VLCM7",196,0)
 . . . S DIR(0)="YAO^"
"RTN","LA7VLCM7",197,0)
 . . . S DIR("A")=X
"RTN","LA7VLCM7",198,0)
 . . . S DIR("B")="NO"
"RTN","LA7VLCM7",199,0)
 . . . D ^DIR
"RTN","LA7VLCM7",200,0)
 . . . I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) S STOP=1 Q
"RTN","LA7VLCM7",201,0)
 . . . I Y D  ;
"RTN","LA7VLCM7",202,0)
 . . . . S LALOCK=$NA(^LAB(62.47,R6247,1,R62471))
"RTN","LA7VLCM7",203,0)
 . . . . S X=$$GETLOCK^LRUTIL(LALOCK)
"RTN","LA7VLCM7",204,0)
 . . . . I 'X D  Q  ;
"RTN","LA7VLCM7",205,0)
 . . . . . W !!,$C(7),"  ** Could not lock the entry. **",! H 3
"RTN","LA7VLCM7",206,0)
 . . . . ;
"RTN","LA7VLCM7",207,0)
 . . . . K LAIEN,LAFDA,LAMSG,DIERR
"RTN","LA7VLCM7",208,0)
 . . . . S LAIEN=R62471_","_R6247_","
"RTN","LA7VLCM7",209,0)
 . . . . S X=R6206_";LAB(62.06,"
"RTN","LA7VLCM7",210,0)
 . . . . S LAFDA(1,62.4701,LAIEN,2.1)=X
"RTN","LA7VLCM7",211,0)
 . . . . D FILE^DIE("","LAFDA(1)","LAMSG")
"RTN","LA7VLCM7",212,0)
 . . . . S CNT5=CNT5+1
"RTN","LA7VLCM7",213,0)
 . . . . L -@LALOCK
"RTN","LA7VLCM7",214,0)
 . . . W !
"RTN","LA7VLCM7",215,0)
 . . ;
"RTN","LA7VLCM7",216,0)
 . ;
"RTN","LA7VLCM7",217,0)
 . I 'FOUND D  Q  ;
"RTN","LA7VLCM7",218,0)
 . . S CNT4=CNT4+1
"RTN","LA7VLCM7",219,0)
 . ;
"RTN","LA7VLCM7",220,0)
 W !!,"  #62.06 records searched: ",CNT," of ",CNT6
"RTN","LA7VLCM7",221,0)
 W !,"  Total #62.47 records searched: ",CNT1
"RTN","LA7VLCM7",222,0)
 W !,"  Total NATL codes: ",CNT2
"RTN","LA7VLCM7",223,0)
 W !,"  Total #62.47 codes without mapping: ",$S(CNT1>0:CNT3,1:"n/a")
"RTN","LA7VLCM7",224,0)
 W !,"  Total #62.06 LOINC codes not in #62.47: ",CNT4
"RTN","LA7VLCM7",225,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VLCM7",226,0)
 Q
"RTN","LA7VLCM7",227,0)
 ;
"RTN","LA7VLCM7",228,0)
PF(NOTTERM,PGCNT) ;
"RTN","LA7VLCM7",229,0)
 ; Page Feed
"RTN","LA7VLCM7",230,0)
 ; Inputs
"RTN","LA7VLCM7",231,0)
 ;  NOTTERM <opt> : NOT TERMinal (dflt=1)
"RTN","LA7VLCM7",232,0)
 ;                : 1=do nothing if a console device
"RTN","LA7VLCM7",233,0)
 ;    PGCNT <byref><opt>:
"RTN","LA7VLCM7",234,0)
 N NEWPG
"RTN","LA7VLCM7",235,0)
 S NEWPG=0
"RTN","LA7VLCM7",236,0)
 S NOTTERM=$G(NOTTERM,1)
"RTN","LA7VLCM7",237,0)
 I NOTTERM I $E($G(IOST),1,2)="C-" Q:$Q 0 Q  ;
"RTN","LA7VLCM7",238,0)
 I $G(IOSL) I $Y+1>(IOSL-1) D  ;
"RTN","LA7VLCM7",239,0)
 . I $G(IOF)'="" W @IOF
"RTN","LA7VLCM7",240,0)
 . S $Y=0
"RTN","LA7VLCM7",241,0)
 . S NEWPG=1
"RTN","LA7VLCM7",242,0)
 . S PGCNT=$G(PGCNT)+1
"RTN","LA7VLCM7",243,0)
 Q:$Q NEWPG
"RTN","LA7VLCM7",244,0)
 Q
"RTN","LA7VMSG")
0^18^B31327904
"RTN","LA7VMSG",1,0)
LA7VMSG ;DALOI/JMC - LAB ORU (Observation Result) message builder ;06/19/12  16:18
"RTN","LA7VMSG",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,50,56,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VMSG",3,0)
 ;
"RTN","LA7VMSG",4,0)
ORU ; Bleed the ORU (Observation Result) message queue
"RTN","LA7VMSG",5,0)
 ; Tasked by LA7SRR, LRCAPV2, LRU
"RTN","LA7VMSG",6,0)
 ;
"RTN","LA7VMSG",7,0)
 N LA7MTYP
"RTN","LA7VMSG",8,0)
 S LA7MTYP="ORU"
"RTN","LA7VMSG",9,0)
 D START^LA7VMSG1
"RTN","LA7VMSG",10,0)
 ;
"RTN","LA7VMSG",11,0)
 Q
"RTN","LA7VMSG",12,0)
 ;
"RTN","LA7VMSG",13,0)
ORR ; Bleed the ORR (Order Response) message queue
"RTN","LA7VMSG",14,0)
 ; Called by LRWLST12
"RTN","LA7VMSG",15,0)
 ;
"RTN","LA7VMSG",16,0)
 N LA7MTYP
"RTN","LA7VMSG",17,0)
 S LA7MTYP="ORR"
"RTN","LA7VMSG",18,0)
 ;D START^LA7VMSG1
"RTN","LA7VMSG",19,0)
 ;
"RTN","LA7VMSG",20,0)
 Q
"RTN","LA7VMSG",21,0)
 ;
"RTN","LA7VMSG",22,0)
 ;
"RTN","LA7VMSG",23,0)
SET(LRUID,SITE,RUID,SITEN,ORD,LRNLT,LRIDT,LRSS,LRDFN,ORDT,LA7VDB,LA7MTYP) ; adds entries to LA7V QUEUE file
"RTN","LA7VMSG",24,0)
 ; Called by LA7SRR, LRVER3, LRWLST12
"RTN","LA7VMSG",25,0)
 ; variable list
"RTN","LA7VMSG",26,0)
 ; LRUID - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VMSG",27,0)
 ; SITE  - remote sites IEN in INSTITUTION file (#4)
"RTN","LA7VMSG",28,0)
 ; RUID  - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VMSG",29,0)
 ; SITEN - Primary site number of remote site ($$SITE^VASITE)
"RTN","LA7VMSG",30,0)
 ; ORD   - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VMSG",31,0)
 ; LRNLT - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VMSG",32,0)
 ; LRIDT - Inverse date/time (accession date/time)
"RTN","LA7VMSG",33,0)
 ; LRSS  - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VMSG",34,0)
 ; LRDFN - IEN in LAB DATA file (#63)
"RTN","LA7VMSG",35,0)
 ; ORDT  - Order date
"RTN","LA7VMSG",36,0)
 ; LA7VDB - <opt><byref> Chemistry results or database section
"RTN","LA7VMSG",37,0)
 ;          for MI, SP, CY, EM subscripts
"RTN","LA7VMSG",38,0)
 ;           ex. glucose LA7VDB(2)=LR NODE
"RTN","LA7VMSG",39,0)
 ;                       LA7VDB(2,1)="C" (corrected results)
"RTN","LA7VMSG",40,0)
 ;   MI: LA7VDB(File #64 Field #63)=""
"RTN","LA7VMSG",41,0)
 ;   SP: LA7VDB("88515.0000")=""  CY: LA7VDB("88593.0000")=""
"RTN","LA7VMSG",42,0)
 ;   EM: LA7VDB("88597.0000")=""  AU: LA7VDB("88533.0000")=""
"RTN","LA7VMSG",43,0)
 ; LA7MTYP (Optional) - Message Type (ORU or ORR) defaults to ORU
"RTN","LA7VMSG",44,0)
 ;
"RTN","LA7VMSG",45,0)
 N FDA,LA76248,LA76249,LA7DT,LA7FACID,LA7ERR,LA7RSITE,LA7Y,LAHLSTAT,PORD,PORT,RSITE
"RTN","LA7VMSG",46,0)
 ;
"RTN","LA7VMSG",47,0)
 S LA7ERR=0
"RTN","LA7VMSG",48,0)
 I $G(LA7MTYP)="" S LA7MTYP="ORU"
"RTN","LA7VMSG",49,0)
 ; Currently not building ORR when accessioning - JMC/7/11/00
"RTN","LA7VMSG",50,0)
 I LA7MTYP="ORR" Q
"RTN","LA7VMSG",51,0)
 ;
"RTN","LA7VMSG",52,0)
 ; Retrieve facility id (VA=station number, DoD=DMIS code, other=local site assigned id)
"RTN","LA7VMSG",53,0)
 S LA7FACID=$$RETFACID^LA7VHLU2(SITEN,2,1),LA76248=0
"RTN","LA7VMSG",54,0)
 S LA7RSITE="LA7V COLLECTION "_LA7FACID
"RTN","LA7VMSG",55,0)
 S LA76248=$O(^LAHM(62.48,"B",LA7RSITE,0))
"RTN","LA7VMSG",56,0)
 ; No entry in 62.48 - *** Need to add error logging ****
"RTN","LA7VMSG",57,0)
 I 'LA76248 Q
"RTN","LA7VMSG",58,0)
 I '$P(^LAHM(62.48,LA76248,0),"^",3) Q  ; not active
"RTN","LA7VMSG",59,0)
 ;
"RTN","LA7VMSG",60,0)
 ;
"RTN","LA7VMSG",61,0)
 ; add check here to see if agency associated with site (SITE) is enabled for this subscript;CKA 6/11
"RTN","LA7VMSG",62,0)
 S LAHLSTAT=$$HLSTATUS("ORU",SITE,LRSS)
"RTN","LA7VMSG",63,0)
 I 'LAHLSTAT Q
"RTN","LA7VMSG",64,0)
 ;
"RTN","LA7VMSG",65,0)
 ; Create new outgoing entry in 62.49
"RTN","LA7VMSG",66,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VMSG",67,0)
 I LA76249<1 D  Q
"RTN","LA7VMSG",68,0)
 . ; Log entry creation error
"RTN","LA7VMSG",69,0)
 ;
"RTN","LA7VMSG",70,0)
 ; Check/validate parameters before storing
"RTN","LA7VMSG",71,0)
 ; If error store but flag entry with error status.
"RTN","LA7VMSG",72,0)
 D CHKACC
"RTN","LA7VMSG",73,0)
 ;
"RTN","LA7VMSG",74,0)
 ; File data
"RTN","LA7VMSG",75,0)
 S FDA(1,62.49,LA76249_",",1)="O"
"RTN","LA7VMSG",76,0)
 S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VMSG",77,0)
 S FDA(1,62.49,LA76249_",",2)=$S(LA7ERR:"E",1:"P")
"RTN","LA7VMSG",78,0)
 S FDA(1,62.49,LA76249_",",5)=LA7RSITE_"-O-"_RUID
"RTN","LA7VMSG",79,0)
 S FDA(1,62.49,LA76249_",",108)=LA7MTYP
"RTN","LA7VMSG",80,0)
 S FDA(1,62.49,LA76249_",",151)=LRUID
"RTN","LA7VMSG",81,0)
 S FDA(1,62.49,LA76249_",",152)=SITEN
"RTN","LA7VMSG",82,0)
 S FDA(1,62.49,LA76249_",",153)=RUID
"RTN","LA7VMSG",83,0)
 S FDA(1,62.49,LA76249_",",154)=ORD
"RTN","LA7VMSG",84,0)
 S FDA(1,62.49,LA76249_",",155)=LRNLT
"RTN","LA7VMSG",85,0)
 S FDA(1,62.49,LA76249_",",156)=LRIDT
"RTN","LA7VMSG",86,0)
 S FDA(1,62.49,LA76249_",",157)=LRSS
"RTN","LA7VMSG",87,0)
 S FDA(1,62.49,LA76249_",",158)=LRDFN
"RTN","LA7VMSG",88,0)
 S FDA(1,62.49,LA76249_",",159)=ORDT
"RTN","LA7VMSG",89,0)
 ;
"RTN","LA7VMSG",90,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VMSG",91,0)
 D CLEAN^DILF
"RTN","LA7VMSG",92,0)
 ;
"RTN","LA7VMSG",93,0)
 ; Add test to order
"RTN","LA7VMSG",94,0)
 S LA7Y=0
"RTN","LA7VMSG",95,0)
 F  S LA7Y=$O(LA7VDB(LA7Y)) Q:'LA7Y  D
"RTN","LA7VMSG",96,0)
 . N FDAIEN
"RTN","LA7VMSG",97,0)
 . S FDA(2,62.49162,"+2,"_LA76249_",",.01)=LA7Y
"RTN","LA7VMSG",98,0)
 . I $G(LA7VDB(LA7Y,1))="C" S FDA(2,62.49162,"+2,"_LA76249_",",.02)="C"
"RTN","LA7VMSG",99,0)
 . S FDAIEN(1)=LA76249
"RTN","LA7VMSG",100,0)
 . D UPDATE^DIE("","FDA(2)","FDAIEN","LA7ERR(2)")
"RTN","LA7VMSG",101,0)
 . D CLEAN^DILF
"RTN","LA7VMSG",102,0)
 ;
"RTN","LA7VMSG",103,0)
 ; Check for date report completed.
"RTN","LA7VMSG",104,0)
 I '$$OK2SEND^LA7SRR D CREATE^LA7LOG(122)
"RTN","LA7VMSG",105,0)
 ;
"RTN","LA7VMSG",106,0)
 ; Release lock on entry.
"RTN","LA7VMSG",107,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VMSG",108,0)
 Q
"RTN","LA7VMSG",109,0)
 ;
"RTN","LA7VMSG",110,0)
 ;
"RTN","LA7VMSG",111,0)
MIAP(LRAA,LRAD,LRAN,LR60,LRDFN,LRSS,LRIDT,LRODT) ; Makes MI/AP calls to send results to LA7V QUEUE
"RTN","LA7VMSG",112,0)
 ;
"RTN","LA7VMSG",113,0)
 ; Call with LRAA = accession area IEN
"RTN","LA7VMSG",114,0)
 ;           LRAD = accession date (FM format)
"RTN","LA7VMSG",115,0)
 ;           LRAN = accession number
"RTN","LA7VMSG",116,0)
 ;           LR60 = file #60 test IEN
"RTN","LA7VMSG",117,0)
 ;          LRDFN = IEN in LAB DATA file (#63)
"RTN","LA7VMSG",118,0)
 ;           LRSS = test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VMSG",119,0)
 ;          LRIDT = Inverse date/time (accession date/time)
"RTN","LA7VMSG",120,0)
 ;         LRORDT = Order date (FM format)
"RTN","LA7VMSG",121,0)
 ;
"RTN","LA7VMSG",122,0)
 ; Called by LRVR0, LRMIUT, LRVRAP4
"RTN","LA7VMSG",123,0)
 ;
"RTN","LA7VMSG",124,0)
 N LA764,LA7NLT,LA7NLTN,LA7SS,LA7VDB,LA7Y,LRORU3
"RTN","LA7VMSG",125,0)
 ;
"RTN","LA7VMSG",126,0)
 S LA764=$$GET1^DIQ(60,LR60_",",64,"I")
"RTN","LA7VMSG",127,0)
 S LA7NLT=$$GET1^DIQ(64,LA764_",",1)
"RTN","LA7VMSG",128,0)
 I LA7NLT="" Q
"RTN","LA7VMSG",129,0)
 S LA7NLTN=$$GET1^DIQ(64,LA764_",",.01)
"RTN","LA7VMSG",130,0)
 ;
"RTN","LA7VMSG",131,0)
 S LA7VDB=$$GET1^DIQ(64,LA764_",",63,"I")
"RTN","LA7VMSG",132,0)
 I LA7VDB'="" S LA7Y(LA7VDB)=""
"RTN","LA7VMSG",133,0)
 ;
"RTN","LA7VMSG",134,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LA7VMSG",135,0)
 ;
"RTN","LA7VMSG",136,0)
 D SET^LA7VMSG($P(LRORU3,U,4),$P(LRORU3,U,2),$P(LRORU3,U,5),$P(LRORU3,U,3),LA7NLTN,LA7NLT,LRIDT,LRSS,LRDFN,LRODT,.LA7Y,"ORU")
"RTN","LA7VMSG",137,0)
 ;
"RTN","LA7VMSG",138,0)
 Q
"RTN","LA7VMSG",139,0)
 ;
"RTN","LA7VMSG",140,0)
 ;
"RTN","LA7VMSG",141,0)
CHKACC ; Check/validate parameters passed in before storing in file #62.49
"RTN","LA7VMSG",142,0)
 ;
"RTN","LA7VMSG",143,0)
 N I,LA763,LA768,LA7AA,LA7AD,LA7AN
"RTN","LA7VMSG",144,0)
 ;
"RTN","LA7VMSG",145,0)
 I $G(LRUID)="",$G(RUID)="" Q
"RTN","LA7VMSG",146,0)
 I LRUID'="",'$D(^LRO(68,"C",LRUID)) D
"RTN","LA7VMSG",147,0)
 . S LRUID=$G(RUID)
"RTN","LA7VMSG",148,0)
 . I LRUID'="",'$D(^LRO(68,"C",LRUID)) S LRUID=""
"RTN","LA7VMSG",149,0)
 I LRUID="" Q
"RTN","LA7VMSG",150,0)
 ;
"RTN","LA7VMSG",151,0)
 S I=$Q(^LRO(68,"C",LRUID)),(LA7AA,LA7AD,LA7AN)=0
"RTN","LA7VMSG",152,0)
 I I'="",$QS(I,3)=LRUID S LA7AA=$QS(I,4),LA7AD=$QS(I,5),LA7AN=$QS(I,6)
"RTN","LA7VMSG",153,0)
 F I=0,.2,.3,3 S LA768(I)=$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,I))
"RTN","LA7VMSG",154,0)
 ;
"RTN","LA7VMSG",155,0)
 F I=0,"ORU" S LA763(I)=$G(^LR(LRDFN,LRSS,LRIDT,I))
"RTN","LA7VMSG",156,0)
 ;
"RTN","LA7VMSG",157,0)
 ; Mismatch on subscript with file #68
"RTN","LA7VMSG",158,0)
 I LRSS'=$P(^LRO(68,LA7AA,0),"^",2) S LA7ERR=40 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",159,0)
 ;
"RTN","LA7VMSG",160,0)
 ; Mismatch on LRDFN with file #68
"RTN","LA7VMSG",161,0)
 I LRDFN'=$P(LA768(0),"^") S LA7ERR=41 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",162,0)
 ;
"RTN","LA7VMSG",163,0)
 ; Mismatch on specimen inverse d/t with file #68
"RTN","LA7VMSG",164,0)
 I LRIDT'=$P(LA768(3),"^",5) S LA7ERR=42 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",165,0)
 ;
"RTN","LA7VMSG",166,0)
 ; Mismatch on remote UID with file #68
"RTN","LA7VMSG",167,0)
 I $G(RUID)'="",RUID'=$P(LA768(.3),"^",5) S LA7ERR=43 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",168,0)
 ;
"RTN","LA7VMSG",169,0)
 ; Mismatch on remote UID with file #63
"RTN","LA7VMSG",170,0)
 I $G(RUID)'="",$P(LA763("ORU"),"^",5)'="",RUID'=$P(LA763("ORU"),"^",5) S LA7ERR=44 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",171,0)
 ;
"RTN","LA7VMSG",172,0)
 ; Mismatch on UID between file #63 and file #68
"RTN","LA7VMSG",173,0)
 I $P(LA768(.3),"^")'="",$P(LA763("ORU"),"^")'="",$P(LA768(.3),"^")'=$P(LA763("ORU"),"^") S LA7ERR=45 D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VMSG",174,0)
 ;
"RTN","LA7VMSG",175,0)
 Q
"RTN","LA7VMSG",176,0)
 ;
"RTN","LA7VMSG",177,0)
 ;
"RTN","LA7VMSG",178,0)
ACK ; ACKnowledgment message processor
"RTN","LA7VMSG",179,0)
 ;
"RTN","LA7VMSG",180,0)
 G ACK^LA7VHL
"RTN","LA7VMSG",181,0)
 Q
"RTN","LA7VMSG",182,0)
HLSTATUS(LA7MTYP,SITE,LRSS) ;
"RTN","LA7VMSG",183,0)
 ;
"RTN","LA7VMSG",184,0)
 ; Check if agency associated with site has LEDI HL7 messaging enabled for this Subscript.
"RTN","LA7VMSG",185,0)
 ;
"RTN","LA7VMSG",186,0)
 ; Call with:
"RTN","LA7VMSG",187,0)
 ;     LA7MTYP = The HL7 message type. Either: "ORU" or "ORM"
"RTN","LA7VMSG",188,0)
 ;        SITE = Site's IEN in INSTITUTION file (#4)
"RTN","LA7VMSG",189,0)
 ;        LRSS = Subscript
"RTN","LA7VMSG",190,0)
 ;
"RTN","LA7VMSG",191,0)
 ; Returns    0: LEDI HL7 messaging is disabled for this SITE and Subscript.
"RTN","LA7VMSG",192,0)
 ;            1: LEDI HL7 messaging is enabled for this SITE and Subscript.
"RTN","LA7VMSG",193,0)
 ; -- if LSRP cutover is installed and rollback restore is not installed, return 1 (enabled)
"RTN","LA7VMSG",194,0)
 I $$PATCH^XPDUTL("LA*5.2*75"),'$$PATCH^XPDUTL("LA*5.2*78") Q 1
"RTN","LA7VMSG",195,0)
 ;
"RTN","LA7VMSG",196,0)
 N LA7PAR
"RTN","LA7VMSG",197,0)
 ;
"RTN","LA7VMSG",198,0)
 S LA7PAR=2
"RTN","LA7VMSG",199,0)
 I LA7MTYP="ORU" S LA7PAR=$$GET^XPAR("ALL","LA LEDI ORU HL7 STATUS",$$WHAT^XUAF4(SITE,"AGENCY"),"Q")
"RTN","LA7VMSG",200,0)
 I LA7MTYP="ORM" S LA7PAR=$$GET^XPAR("ALL","LA LEDI ORM HL7 STATUS",$$WHAT^XUAF4(SITE,"AGENCY"),"Q")
"RTN","LA7VMSG",201,0)
 ;
"RTN","LA7VMSG",202,0)
 I LA7PAR=0 Q 0
"RTN","LA7VMSG",203,0)
 I LA7PAR=2,LRSS'="CH" Q 0
"RTN","LA7VMSG",204,0)
 I LA7PAR=3,LRSS'="MI" Q 0
"RTN","LA7VMSG",205,0)
 I LA7PAR=4,LRSS'["SPCYEM" Q 0
"RTN","LA7VMSG",206,0)
 I LA7PAR=5,"CHMI"'[LRSS Q 0
"RTN","LA7VMSG",207,0)
 I LA7PAR=6,"CHSPCYEM"'[LRSS Q 0
"RTN","LA7VMSG",208,0)
 I LA7PAR=7,"MISPCYEM"'[LRSS Q 0
"RTN","LA7VMSG",209,0)
 ;
"RTN","LA7VMSG",210,0)
 Q 1
"RTN","LA7VMSG1")
0^66^B59398226
"RTN","LA7VMSG1",1,0)
LA7VMSG1 ;DALOI/JMC - LAB ORU (Observation Result) message builder cont'd ;Aug 8, 2008
"RTN","LA7VMSG1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**56,46,61,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VMSG1",3,0)
 ;
"RTN","LA7VMSG1",4,0)
START ; Process entries in queue
"RTN","LA7VMSG1",5,0)
 ; Called from LA7VMSG
"RTN","LA7VMSG1",6,0)
 ;
"RTN","LA7VMSG1",7,0)
 N EID,GBL,HLEID,HLMTIEN,HLRESLT,HLARYTYP,HLECH,HLFS,HLCOMP,HLFORMAT,RSITE
"RTN","LA7VMSG1",8,0)
 N LA,LA76248,LA76249,LA76249P,LA7DT,LA7ECH,LA7END,LA7FS,LA7ID,LA7MID,LA7NVAF,LA7ROOT,LA7V,LA7VS,LA7VER,LA7V0N,LA7VIEN,LA7X
"RTN","LA7VMSG1",9,0)
 N LAER,LRDFN,LRIDT,LRNT,LRSS,LRUID
"RTN","LA7VMSG1",10,0)
 ;
"RTN","LA7VMSG1",11,0)
 ; variable list
"RTN","LA7VMSG1",12,0)
 ; LA("LRUID") - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VMSG1",13,0)
 ; LA("SITE")  - Primary site number of remote site ($$SITE^VASITE)
"RTN","LA7VMSG1",14,0)
 ; LA("RUID")  - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VMSG1",15,0)
 ; LA("ORD")   - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VMSG1",16,0)
 ; LA("LRNLT") - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VMSG1",17,0)
 ; LA("LRIDT") - Inverse date/time (accession date/time)
"RTN","LA7VMSG1",18,0)
 ; LA("LRSS")  - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VMSG1",19,0)
 ; LA("LRDFN") - IEN in LAB DATA file (#63)
"RTN","LA7VMSG1",20,0)
 ; LA("ORDT")  - Order date
"RTN","LA7VMSG1",21,0)
 ; LA(62.49)   - entry in #62.49 which contains pointer to results to build
"RTN","LA7VMSG1",22,0)
 ;
"RTN","LA7VMSG1",23,0)
 D LOCK^DILF("^LAHM(62.49,""HL7 PROCESS"",LA7MTYP)")
"RTN","LA7VMSG1",24,0)
 I '$T Q
"RTN","LA7VMSG1",25,0)
 ;
"RTN","LA7VMSG1",26,0)
 S GBL="^TMP(""HLS"","_$J_")"
"RTN","LA7VMSG1",27,0)
 ;
"RTN","LA7VMSG1",28,0)
 D SORTPAT
"RTN","LA7VMSG1",29,0)
 I $D(^TMP("LA76248",$J)) D PROCESS
"RTN","LA7VMSG1",30,0)
 D KVAR^LRX
"RTN","LA7VMSG1",31,0)
 ;
"RTN","LA7VMSG1",32,0)
 ; Release lock
"RTN","LA7VMSG1",33,0)
 L -^LAHM(62.49,"HL7 PROCESS",LA7MTYP)
"RTN","LA7VMSG1",34,0)
 ;
"RTN","LA7VMSG1",35,0)
 K ^TMP("LA76248",$J),^TMP("LA7VS",$J),^TMP("HLS",$J)
"RTN","LA7VMSG1",36,0)
 ;
"RTN","LA7VMSG1",37,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VMSG1",38,0)
 ;
"RTN","LA7VMSG1",39,0)
 Q
"RTN","LA7VMSG1",40,0)
 ;
"RTN","LA7VMSG1",41,0)
 ;
"RTN","LA7VMSG1",42,0)
SORTPAT ; Sort all results for transmission
"RTN","LA7VMSG1",43,0)
 ;
"RTN","LA7VMSG1",44,0)
 N LA76248,LA76249,LA7END,LA7ROOT,LRDFN,LRUID
"RTN","LA7VMSG1",45,0)
 ;
"RTN","LA7VMSG1",46,0)
 K ^TMP("LA76248",$J)
"RTN","LA7VMSG1",47,0)
 ; Flag to indicate end of global.
"RTN","LA7VMSG1",48,0)
 S LA7END=0
"RTN","LA7VMSG1",49,0)
 ;
"RTN","LA7VMSG1",50,0)
 ; Sort by configuration (LA76248), patient (LRDFN), UID (LRUID), file #62.49 ien (LA76249)
"RTN","LA7VMSG1",51,0)
 ; Check status of each message to insure that cross-reference is not an orphan which can cause
"RTN","LA7VMSG1",52,0)
 ; repetitive message generation and receving problems.
"RTN","LA7VMSG1",53,0)
 S LA7ROOT="^LAHM(62.49,""AC"",LA7MTYP,""P"")"
"RTN","LA7VMSG1",54,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7END  D
"RTN","LA7VMSG1",55,0)
 . I $QS(LA7ROOT,3)'=LA7MTYP!($QS(LA7ROOT,6)<1) S LA7END=1 Q
"RTN","LA7VMSG1",56,0)
 . S LA76248=$QS(LA7ROOT,5),LA76249=$QS(LA7ROOT,6)
"RTN","LA7VMSG1",57,0)
 . D LOCK^DILF("^LAHM(62.49,LA76249)") Q:'$T
"RTN","LA7VMSG1",58,0)
 . I $P($G(^LAHM(62.49,LA76249,0)),"^",3)'="P" K ^LAHM(62.49,"AC",LA7MTYP,"P",LA76248,LA76249) L -^LAHM(62.49,LA76249) Q
"RTN","LA7VMSG1",59,0)
 . S LRDFN=$P($G(^LAHM(62.49,LA76249,63)),"^",8)
"RTN","LA7VMSG1",60,0)
 . S LRUID=$P($G(^LAHM(62.49,LA76249,63)),"^",1)
"RTN","LA7VMSG1",61,0)
 . I LRDFN,LRUID'="" S ^TMP("LA76248",$J,LA76248,LRDFN,LRUID,LA76249)=""
"RTN","LA7VMSG1",62,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VMSG1",63,0)
 ;
"RTN","LA7VMSG1",64,0)
 Q
"RTN","LA7VMSG1",65,0)
 ;
"RTN","LA7VMSG1",66,0)
 ;
"RTN","LA7VMSG1",67,0)
PROCESS ; Process and build messages to be sent
"RTN","LA7VMSG1",68,0)
 ;
"RTN","LA7VMSG1",69,0)
 N LA7101,LA76248,LA76249,LA76249P,LA7INTYP,LA7NTESN,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7SMSG,LA7VS,LRDFN
"RTN","LA7VMSG1",70,0)
 ;
"RTN","LA7VMSG1",71,0)
 ; Cleanup
"RTN","LA7VMSG1",72,0)
 K ^TMP("LA7VS",$J),^TMP("HLS",$J)
"RTN","LA7VMSG1",73,0)
 ; Initialize variables
"RTN","LA7VMSG1",74,0)
 S (LA76248,LA76249,LA76249P,LA7END,LRDFN)=0,LRUID=""
"RTN","LA7VMSG1",75,0)
 ;
"RTN","LA7VMSG1",76,0)
 ; Process sorted list of results to transmit.
"RTN","LA7VMSG1",77,0)
 S LA7ROOT="^TMP(""LA76248"",$J)"
"RTN","LA7VMSG1",78,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  D  Q:LA7END
"RTN","LA7VMSG1",79,0)
 . I $QS(LA7ROOT,1)'="LA76248"!($QS(LA7ROOT,2)'=$J) S LA7END=1 Q
"RTN","LA7VMSG1",80,0)
 . I LA76248'=$QS(LA7ROOT,3) D CONFIG
"RTN","LA7VMSG1",81,0)
 . I '$P(LA76248(0),"^",3) Q
"RTN","LA7VMSG1",82,0)
 . S LA7INTYP=+$P(LA76248(0),"^",9)
"RTN","LA7VMSG1",83,0)
 . S (LA76249,LA(62.49))=$QS(LA7ROOT,6)
"RTN","LA7VMSG1",84,0)
 . S LA7X=$G(^LAHM(62.49,LA76249,63))
"RTN","LA7VMSG1",85,0)
 . S LA("HUID")=$P(LA7X,U),LA("SITE")=$P(LA7X,U,2),LA("RUID")=$P(LA7X,U,3),LA("ORD")=$P(LA7X,U,4),LA("NLT")=$P(LA7X,U,5),LA("LRIDT")=$P(LA7X,U,6),LA("SUB")=$P(LA7X,U,7),LA("LRDFN")=$P(LA7X,U,8),LA("ORDT")=$P(LA7X,U,9)
"RTN","LA7VMSG1",86,0)
 . S LA7NVAF=$$NVAF^LA7VHLU2(+LA("SITE"))
"RTN","LA7VMSG1",87,0)
 . I LRUID'=$QS(LA7ROOT,5),LA7SMSG=2 D PAT Q:LA7END
"RTN","LA7VMSG1",88,0)
 . I LRDFN'=$QS(LA7ROOT,4) D PAT Q:LA7END
"RTN","LA7VMSG1",89,0)
 . S LRUID=$QS(LA7ROOT,5)
"RTN","LA7VMSG1",90,0)
 . S ^TMP("LA7VS",$J,LA76249)=LA76249P
"RTN","LA7VMSG1",91,0)
 . N LA76249
"RTN","LA7VMSG1",92,0)
 . S LA76249=LA76249P
"RTN","LA7VMSG1",93,0)
 . I LA7MTYP="ORU" D EN^LA7VORU(.LA)
"RTN","LA7VMSG1",94,0)
 . I LA7MTYP="ORR" D EN^LA7VORR1(.LA)
"RTN","LA7VMSG1",95,0)
 ;
"RTN","LA7VMSG1",96,0)
 I LA76249P D SENDMSG
"RTN","LA7VMSG1",97,0)
 ;
"RTN","LA7VMSG1",98,0)
 Q
"RTN","LA7VMSG1",99,0)
 ;
"RTN","LA7VMSG1",100,0)
 ;
"RTN","LA7VMSG1",101,0)
STARTMSG ; Initialize a HL7 message and variables
"RTN","LA7VMSG1",102,0)
 ;
"RTN","LA7VMSG1",103,0)
 N LA7EVNT,SITE
"RTN","LA7VMSG1",104,0)
 ;
"RTN","LA7VMSG1",105,0)
 K ^TMP("LA7VS",$J),@GBL
"RTN","LA7VMSG1",106,0)
 ;
"RTN","LA7VMSG1",107,0)
 S LA76249P=LA76249
"RTN","LA7VMSG1",108,0)
 S SITE=$$RETFACID^LA7VHLU2(LA("SITE"),2,1)
"RTN","LA7VMSG1",109,0)
 ;
"RTN","LA7VMSG1",110,0)
 I LA7MTYP="ORU" S LA7EVNT="LA7V Results Reporting to "_SITE
"RTN","LA7VMSG1",111,0)
 I LA7MTYP="ORR" S LA7EVNT="LA7V Order Response to "_SITE
"RTN","LA7VMSG1",112,0)
 D STARTMSG^LA7VHLU(LA7EVNT,LA76249P)
"RTN","LA7VMSG1",113,0)
 I $G(HL) S LA7END=1
"RTN","LA7VMSG1",114,0)
  ;
"RTN","LA7VMSG1",115,0)
 Q
"RTN","LA7VMSG1",116,0)
 ;
"RTN","LA7VMSG1",117,0)
 ;
"RTN","LA7VMSG1",118,0)
SENDMSG ; File HL7 message with HL and LAB packages
"RTN","LA7VMSG1",119,0)
 ;
"RTN","LA7VMSG1",120,0)
 ; No data to send
"RTN","LA7VMSG1",121,0)
 I '$D(^TMP("HLS",$J)) Q
"RTN","LA7VMSG1",122,0)
 ;
"RTN","LA7VMSG1",123,0)
 D GEN^LA7VHLU
"RTN","LA7VMSG1",124,0)
 I $P(LA7MID,U)=0 D
"RTN","LA7VMSG1",125,0)
 . N LA7X
"RTN","LA7VMSG1",126,0)
 . S LA7X(1)=LA76249P,LA7X(2)=$TR($P(HLMID,"^",2,3),"^","-")
"RTN","LA7VMSG1",127,0)
 . D CREATE^LA7LOG(28)
"RTN","LA7VMSG1",128,0)
 ;
"RTN","LA7VMSG1",129,0)
 D UPDT6249
"RTN","LA7VMSG1",130,0)
 D UPDLPD
"RTN","LA7VMSG1",131,0)
 ;
"RTN","LA7VMSG1",132,0)
 S (LA76249P,LA7PIDSN,LA7OBRSN,LA7OBXSN,LA7NTESN)=0
"RTN","LA7VMSG1",133,0)
 ;
"RTN","LA7VMSG1",134,0)
 Q
"RTN","LA7VMSG1",135,0)
 ;
"RTN","LA7VMSG1",136,0)
 ;
"RTN","LA7VMSG1",137,0)
CONFIG ; Setup for this configuration
"RTN","LA7VMSG1",138,0)
 ;
"RTN","LA7VMSG1",139,0)
 ; Send a building message
"RTN","LA7VMSG1",140,0)
 I LA76249P D SENDMSG
"RTN","LA7VMSG1",141,0)
 ;
"RTN","LA7VMSG1",142,0)
 ; Retrieve configuration information from #62.48
"RTN","LA7VMSG1",143,0)
 S LA76248=$QS(LA7ROOT,3)
"RTN","LA7VMSG1",144,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VMSG1",145,0)
 ;
"RTN","LA7VMSG1",146,0)
 ; Flag to control message building; 1-one patient/msg, 2-one order/msg
"RTN","LA7VMSG1",147,0)
 S LA7SMSG=+$P(LA76248(0),"^",8)
"RTN","LA7VMSG1",148,0)
 ;
"RTN","LA7VMSG1",149,0)
 ; Initialize variables
"RTN","LA7VMSG1",150,0)
 S (LA76249,LA76249P,LRDFN)=0
"RTN","LA7VMSG1",151,0)
 S LRUID="",LA7ID=$P(LA76248(0),"^")_"-O-"
"RTN","LA7VMSG1",152,0)
 ;
"RTN","LA7VMSG1",153,0)
 Q
"RTN","LA7VMSG1",154,0)
 ;
"RTN","LA7VMSG1",155,0)
 ;
"RTN","LA7VMSG1",156,0)
PAT ; Build patient information
"RTN","LA7VMSG1",157,0)
 ;
"RTN","LA7VMSG1",158,0)
 N LA7ALTID,LA7EXTID,LA7PID,LA7PV1
"RTN","LA7VMSG1",159,0)
 ;
"RTN","LA7VMSG1",160,0)
 ; If one patient/msg or one order/msg and message building then send it.
"RTN","LA7VMSG1",161,0)
 I LA7SMSG>0,LA76249P D SENDMSG
"RTN","LA7VMSG1",162,0)
 ;
"RTN","LA7VMSG1",163,0)
 ; If no message building then start one.
"RTN","LA7VMSG1",164,0)
 I 'LA76249P S LA7PIDSN=0 D STARTMSG Q:LA7END
"RTN","LA7VMSG1",165,0)
 ;
"RTN","LA7VMSG1",166,0)
 ; Setup PID and PV1 segments.
"RTN","LA7VMSG1",167,0)
 S LRDFN=$QS(LA7ROOT,4)
"RTN","LA7VMSG1",168,0)
 S LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7VMSG1",169,0)
 D DEM^LRX
"RTN","LA7VMSG1",170,0)
 I $G(PNM)'="" D
"RTN","LA7VMSG1",171,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,PNM,0)
"RTN","LA7VMSG1",172,0)
 . D SETID^LA7VHLU1(LA76249,"",PNM,0)
"RTN","LA7VMSG1",173,0)
 I $G(SSN)'="" D
"RTN","LA7VMSG1",174,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,SSN,0)
"RTN","LA7VMSG1",175,0)
 . D SETID^LA7VHLU1(LA76249,"",SSN,0)
"RTN","LA7VMSG1",176,0)
 ;
"RTN","LA7VMSG1",177,0)
 ; Send placer's patient id (PID-3), return in PID-2, return PID-4 with alternate id
"RTN","LA7VMSG1",178,0)
 S (LA7ALTID,LA7EXTID)=""
"RTN","LA7VMSG1",179,0)
 D PTEXTID^LA7VHLU(LA("SITE"),LA("RUID"),.LA7EXTID)
"RTN","LA7VMSG1",180,0)
 I $G(LA7EXTID("PID-2"))'="" S LA7EXTID=$$CNVFLD^LA7VHLU3(LA7EXTID("PID-2"),LA7EXTID("ECH"),LA7ECH)
"RTN","LA7VMSG1",181,0)
 I $G(LA7EXTID("PID-4"))'="" S LA7ALTID=$$CNVFLD^LA7VHLU3(LA7EXTID("PID-4"),LA7EXTID("ECH"),LA7ECH)
"RTN","LA7VMSG1",182,0)
 ;
"RTN","LA7VMSG1",183,0)
 ; Build PID segment
"RTN","LA7VMSG1",184,0)
 D PID^LA7VPID(LRDFN,LA7EXTID,.LA7PID,.LA7PIDSN,.HL,LA7ALTID)
"RTN","LA7VMSG1",185,0)
 D FILESEG^LA7VHLU(GBL,.LA7PID)
"RTN","LA7VMSG1",186,0)
 D FILE6249^LA7VHLU(LA76249P,.LA7PID)
"RTN","LA7VMSG1",187,0)
 ;
"RTN","LA7VMSG1",188,0)
 ; Build PV1 segment
"RTN","LA7VMSG1",189,0)
 ; Not built when sending to DoD facility - not used by CHCS
"RTN","LA7VMSG1",190,0)
 I LA7NVAF'=1 D
"RTN","LA7VMSG1",191,0)
 . D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7VMSG1",192,0)
 . D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7VMSG1",193,0)
 . D FILE6249^LA7VHLU(LA76249P,.LA7PV1)
"RTN","LA7VMSG1",194,0)
 ;
"RTN","LA7VMSG1",195,0)
 S LRUID="",(LA7OBRSN,LA7OBXSN,LA7NTESN)=0
"RTN","LA7VMSG1",196,0)
 ;
"RTN","LA7VMSG1",197,0)
 Q
"RTN","LA7VMSG1",198,0)
 ;
"RTN","LA7VMSG1",199,0)
 ;
"RTN","LA7VMSG1",200,0)
UPDT6249 ; Update entries in file #62.49
"RTN","LA7VMSG1",201,0)
 ;
"RTN","LA7VMSG1",202,0)
 N LA7ERR,LA76249,LA76249P
"RTN","LA7VMSG1",203,0)
 ;
"RTN","LA7VMSG1",204,0)
 ; UNDEF HL array will cause HL7 filers to stop. The $G(HL(x)) prevents the filers from halting on UNDEF error but we
"RTN","LA7VMSG1",205,0)
 ; want to log the missing HL array as an error for system monitoring/troubleshooting.
"RTN","LA7VMSG1",206,0)
 I $D(HL)<10 D ^%ZTER
"RTN","LA7VMSG1",207,0)
 ;
"RTN","LA7VMSG1",208,0)
 S LA76249=0
"RTN","LA7VMSG1",209,0)
 F  S LA76249=$O(^TMP("LA7VS",$J,LA76249)) Q:'LA76249  D
"RTN","LA7VMSG1",210,0)
 . N FDA,LA7ERR
"RTN","LA7VMSG1",211,0)
 . S LA76249P=+$G(^TMP("LA7VS",$J,LA76249))
"RTN","LA7VMSG1",212,0)
 . ; Set pointer to parent on child entry.
"RTN","LA7VMSG1",213,0)
 . I LA76249'=LA76249P S FDA(1,62.49,LA76249_",",6)=LA76249P
"RTN","LA7VMSG1",214,0)
 . I $P(^LAHM(62.49,LA76249,0),"^",3)'="E" D
"RTN","LA7VMSG1",215,0)
 . . I $G(HL("APAT"))="AL"!($G(HL("APAT"))="") S FDA(1,62.49,LA76249_",",2)="A"
"RTN","LA7VMSG1",216,0)
 . . E  S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VMSG1",217,0)
 . S FDA(1,62.49,LA76249_",",102)=$G(HL("SAN"))
"RTN","LA7VMSG1",218,0)
 . S FDA(1,62.49,LA76249_",",103)=$G(HL("SAF"))
"RTN","LA7VMSG1",219,0)
 . S FDA(1,62.49,LA76249_",",108)=$G(HL("MTN"))
"RTN","LA7VMSG1",220,0)
 . S FDA(1,62.49,LA76249_",",110)=$G(HL("PID"))
"RTN","LA7VMSG1",221,0)
 . S FDA(1,62.49,LA76249_",",111)=$G(HL("VER"))
"RTN","LA7VMSG1",222,0)
 . I $P($G(LA7MID),"^")'="" S FDA(1,62.49,LA76249_",",109)=$P(LA7MID,"^")
"RTN","LA7VMSG1",223,0)
 . I $P($G(LA7MID),"^",2) D
"RTN","LA7VMSG1",224,0)
 . . S FDA(1,62.49,LA76249_",",160)=$P(LA7MID,"^",2)
"RTN","LA7VMSG1",225,0)
 . . S FDA(1,62.49,LA76249_",",161)=$P(LA7MID,"^",3)
"RTN","LA7VMSG1",226,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VMSG1",227,0)
 . D CLEAN^DILF
"RTN","LA7VMSG1",228,0)
 . D UPID^LA7VHLU1(LA76249)
"RTN","LA7VMSG1",229,0)
 ;
"RTN","LA7VMSG1",230,0)
 Q
"RTN","LA7VMSG1",231,0)
 ;
"RTN","LA7VMSG1",232,0)
 ;
"RTN","LA7VMSG1",233,0)
UPDLPD ; Update lab pending orders (#69.6) for each entry in #62.49
"RTN","LA7VMSG1",234,0)
 ;
"RTN","LA7VMSG1",235,0)
 N LA76249
"RTN","LA7VMSG1",236,0)
 ;
"RTN","LA7VMSG1",237,0)
 S LA76249=0
"RTN","LA7VMSG1",238,0)
 F  S LA76249=$O(^TMP("LA7VS",$J,LA76249)) Q:'LA76249  D UPD696
"RTN","LA7VMSG1",239,0)
 Q
"RTN","LA7VMSG1",240,0)
 ;
"RTN","LA7VMSG1",241,0)
 ;
"RTN","LA7VMSG1",242,0)
UPD696 ; Update LAB PENDING ORDERS file #69.6
"RTN","LA7VMSG1",243,0)
 ;
"RTN","LA7VMSG1",244,0)
 N LA74,LA7696,LA76964,LA7ERR,LA7ORDT,LA7STAT,LA7X
"RTN","LA7VMSG1",245,0)
 ;
"RTN","LA7VMSG1",246,0)
 ; Find "Results Available" status in #64.061
"RTN","LA7VMSG1",247,0)
 S LA7STAT=$$FIND1^DIC(64.061,"","OMX","Results Available","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LA7VMSG1",248,0)
 ;
"RTN","LA7VMSG1",249,0)
 S LA7X=$G(^LAHM(62.49,LA76249,63))
"RTN","LA7VMSG1",250,0)
 ;
"RTN","LA7VMSG1",251,0)
 ; Ordering institution - pointer to file #4
"RTN","LA7VMSG1",252,0)
 S LA74=$P(LA7X,"^",2)
"RTN","LA7VMSG1",253,0)
 I LA74="" Q
"RTN","LA7VMSG1",254,0)
 ;
"RTN","LA7VMSG1",255,0)
 ; Ordered test
"RTN","LA7VMSG1",256,0)
 S LA7ORDT=$P(LA7X,"^",4)
"RTN","LA7VMSG1",257,0)
 I LA7ORDT="" Q
"RTN","LA7VMSG1",258,0)
 ;
"RTN","LA7VMSG1",259,0)
 ; File #69.6 ien and ordered test multiple ien
"RTN","LA7VMSG1",260,0)
 S LA7696=0
"RTN","LA7VMSG1",261,0)
 F  S LA7696=$O(^LRO(69.6,"RST",LA74,LA("RUID"),LA7696)) Q:'LA7696  D
"RTN","LA7VMSG1",262,0)
 . N FDA
"RTN","LA7VMSG1",263,0)
 . S LA76964=$O(^LRO(69.6,LA7696,2,"B",LA7ORDT,0))
"RTN","LA7VMSG1",264,0)
 . I LA76964<1 Q
"RTN","LA7VMSG1",265,0)
 . ;
"RTN","LA7VMSG1",266,0)
 . D LOCK^DILF("^LRO(69.6,LA7696)")
"RTN","LA7VMSG1",267,0)
 . ; Cannot get lock on ENTRY in 69.6
"RTN","LA7VMSG1",268,0)
 . I '$T D CREATE^LA7LOG(33) Q
"RTN","LA7VMSG1",269,0)
 . ;
"RTN","LA7VMSG1",270,0)
 . ; Store outgoing HL7 message ID
"RTN","LA7VMSG1",271,0)
 . S FDA(1,69.64,LA76964_","_LA7696_",",7)=$P(LA7MID,U)
"RTN","LA7VMSG1",272,0)
 . ; Set to Results Available.
"RTN","LA7VMSG1",273,0)
 . S FDA(1,69.64,LA76964_","_LA7696_",",5)=LA7STAT
"RTN","LA7VMSG1",274,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VMSG1",275,0)
 . D CLEAN^DILF
"RTN","LA7VMSG1",276,0)
 . ;
"RTN","LA7VMSG1",277,0)
 . L -^LRO(69.6,LA7696)
"RTN","LA7VMSG1",278,0)
 ;
"RTN","LA7VMSG1",279,0)
 Q
"RTN","LA7VOBR")
0^20^B25614862
"RTN","LA7VOBR",1,0)
LA7VOBR ;DALOI/JMC - LAB OBR segment builder ;Feb 26, 2008
"RTN","LA7VOBR",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBR",3,0)
 ;
"RTN","LA7VOBR",4,0)
 Q
"RTN","LA7VOBR",5,0)
 ;
"RTN","LA7VOBR",6,0)
 ;
"RTN","LA7VOBR",7,0)
OBR1(LA7OBRSN) ; Build OBR-1 sequence - set segment id
"RTN","LA7VOBR",8,0)
 ; Call with LA7OBRSN = segment id (pass by reference)
"RTN","LA7VOBR",9,0)
 ;
"RTN","LA7VOBR",10,0)
 S LA7OBRSN=$G(LA7OBRSN)+1
"RTN","LA7VOBR",11,0)
 Q LA7OBRSN
"RTN","LA7VOBR",12,0)
 ;
"RTN","LA7VOBR",13,0)
 ;
"RTN","LA7VOBR",14,0)
OBR2(LA7ID,LA7FS,LA7ECH) ; Build OBR-2 sequence - placer's specimen id
"RTN","LA7VOBR",15,0)
 ; Call with LA7ID = placer's specimen id (accn number/UID)
"RTN","LA7VOBR",16,0)
 ;           LA7ID("NMSP") = application namespace (optional)
"RTN","LA7VOBR",17,0)
 ;           LA7ID("SITE") = placer facility
"RTN","LA7VOBR",18,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",19,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",20,0)
 ;
"RTN","LA7VOBR",21,0)
 N LA7X,LA7Y
"RTN","LA7VOBR",22,0)
 D OBR2^LA7VOBRA
"RTN","LA7VOBR",23,0)
 Q LA7Y
"RTN","LA7VOBR",24,0)
 ;
"RTN","LA7VOBR",25,0)
 ;
"RTN","LA7VOBR",26,0)
OBR3(LA7ID,LA7FS,LA7ECH) ; Build OBR-3 sequence - filler's specimen id
"RTN","LA7VOBR",27,0)
 ; Call with LA7ID = filler's specimen id (accn number/UID)
"RTN","LA7VOBR",28,0)
 ;           LA7ID("NMSP") = application namespace (optional)
"RTN","LA7VOBR",29,0)
 ;           LA7ID("SITE") = filler facility
"RTN","LA7VOBR",30,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",31,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",32,0)
 ;
"RTN","LA7VOBR",33,0)
 N LA7X,LA7Y
"RTN","LA7VOBR",34,0)
 D OBR3^LA7VOBRA
"RTN","LA7VOBR",35,0)
 Q LA7Y
"RTN","LA7VOBR",36,0)
 ;
"RTN","LA7VOBR",37,0)
 ;
"RTN","LA7VOBR",38,0)
OBR4(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH) ; Build OBR-4 sequence - Universal service ID
"RTN","LA7VOBR",39,0)
 ; Call with LA7NLT = NLT test code
"RTN","LA7VOBR",40,0)
 ;            LA760 = file #60 ien if known
"RTN","LA7VOBR",41,0)
 ;           LA7ALT = alternate order code and system in form 
"RTN","LA7VOBR",42,0)
 ;                     test code^test name^coding system
"RTN","LA7VOBR",43,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",44,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",45,0)
 ;
"RTN","LA7VOBR",46,0)
 ; Returns     LA7Y = OBR-4 sequence
"RTN","LA7VOBR",47,0)
 ;
"RTN","LA7VOBR",48,0)
 N LA764,LA7COMP,LA7ERR,LA7TN,LA7X,LA7Y,LA7Z
"RTN","LA7VOBR",49,0)
 D OBR4^LA7VOBRA
"RTN","LA7VOBR",50,0)
 Q LA7Y
"RTN","LA7VOBR",51,0)
 ;
"RTN","LA7VOBR",52,0)
 ;
"RTN","LA7VOBR",53,0)
OBR6(LA7DT) ; Build OBR-6 sequence - requested date/time
"RTN","LA7VOBR",54,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",55,0)
 ; Returns OBR-6 sequence
"RTN","LA7VOBR",56,0)
 ;
"RTN","LA7VOBR",57,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",58,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",59,0)
 ;
"RTN","LA7VOBR",60,0)
 ;
"RTN","LA7VOBR",61,0)
OBR7(LA7DT) ; Build OBR-7 sequence - collection date/time
"RTN","LA7VOBR",62,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",63,0)
 ; Returns OBR-7 sequence
"RTN","LA7VOBR",64,0)
 ;
"RTN","LA7VOBR",65,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",66,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",67,0)
 ;
"RTN","LA7VOBR",68,0)
 ;
"RTN","LA7VOBR",69,0)
OBR8(LA7DT) ; Build OBR-8 sequence - collection end date/time
"RTN","LA7VOBR",70,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",71,0)
 ; Returns OBR-8 sequence
"RTN","LA7VOBR",72,0)
 ;
"RTN","LA7VOBR",73,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",74,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",75,0)
 ;
"RTN","LA7VOBR",76,0)
 ;
"RTN","LA7VOBR",77,0)
OBR9(LA7VOL,LA764061,LA7FS,LA7ECH) ; Build OBR-9 sequence - collection volume
"RTN","LA7VOBR",78,0)
 ; Call with    LA7VOL = collection volume
"RTN","LA7VOBR",79,0)
 ;            LA764061 = units (pointer to #64.061)
"RTN","LA7VOBR",80,0)
 ;               LA7FS = HL7 field separator
"RTN","LA7VOBR",81,0)
 ;              LA7ECH = HL encoding characters
"RTN","LA7VOBR",82,0)
 ; Returns OBR-9 sequence
"RTN","LA7VOBR",83,0)
 ;
"RTN","LA7VOBR",84,0)
 N LA7IENS,LA7X,LA7Y
"RTN","LA7VOBR",85,0)
 D OBR9^LA7VOBRA
"RTN","LA7VOBR",86,0)
 Q LA7Y
"RTN","LA7VOBR",87,0)
 ;
"RTN","LA7VOBR",88,0)
 ;
"RTN","LA7VOBR",89,0)
OBR11(LA7X) ; Build OBR-11 sequence - specimen action code
"RTN","LA7VOBR",90,0)
 ; Call with LA7X = HL7 Table 0065 entry
"RTN","LA7VOBR",91,0)
 ; Returns OBR-11 sequence
"RTN","LA7VOBR",92,0)
 ;
"RTN","LA7VOBR",93,0)
 ; JMC-12/09/99 Need to expand this function to determine based on collection status
"RTN","LA7VOBR",94,0)
 ;
"RTN","LA7VOBR",95,0)
 Q LA7X
"RTN","LA7VOBR",96,0)
 ;
"RTN","LA7VOBR",97,0)
 ;
"RTN","LA7VOBR",98,0)
OBR12(LRDFN,LA7FS,LA7ECH) ; Build OBR-12 sequence - patient info
"RTN","LA7VOBR",99,0)
 ; Call with  LRDFN = ien of patient in #63
"RTN","LA7VOBR",100,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",101,0)
 ;           LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",102,0)
 ; Returns OBR-12 sequence
"RTN","LA7VOBR",103,0)
 ;
"RTN","LA7VOBR",104,0)
 N LA7X
"RTN","LA7VOBR",105,0)
 S LRDFN=$G(LRDFN),LA7ECH=$G(LA7ECH)
"RTN","LA7VOBR",106,0)
 ; Infection Warning
"RTN","LA7VOBR",107,0)
 S LA7X=$P($G(^LR(LRDFN,.091)),"^")
"RTN","LA7VOBR",108,0)
 I LA7X'="" D
"RTN","LA7VOBR",109,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VOBR",110,0)
 . S LA7X=$E(LA7ECH,1)_LA7X
"RTN","LA7VOBR",111,0)
 Q LA7X
"RTN","LA7VOBR",112,0)
 ;
"RTN","LA7VOBR",113,0)
 ;
"RTN","LA7VOBR",114,0)
OBR13(LA7TXT,LA7FS,LA7ECH) ; Build OBR-13 sequence - relevant clinical info
"RTN","LA7VOBR",115,0)
 ; Call with LA7TXT = text to place into OBR-13
"RTN","LA7VOBR",116,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",117,0)
 ;           LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",118,0)
 ; Returns OBR-12 sequence
"RTN","LA7VOBR",119,0)
 ;
"RTN","LA7VOBR",120,0)
 N LA7X
"RTN","LA7VOBR",121,0)
 S LA7X=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)
"RTN","LA7VOBR",122,0)
 Q LA7X
"RTN","LA7VOBR",123,0)
 ;
"RTN","LA7VOBR",124,0)
 ;
"RTN","LA7VOBR",125,0)
OBR14(LA7DT) ; Build OBR-14 sequence - specimen arrival date/time
"RTN","LA7VOBR",126,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",127,0)
 ; Returns OBR-14 sequence
"RTN","LA7VOBR",128,0)
 ;
"RTN","LA7VOBR",129,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",130,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",131,0)
 ;
"RTN","LA7VOBR",132,0)
 ;
"RTN","LA7VOBR",133,0)
OBR15(LA761,LA762,LA7ALT,LA7FS,LA7ECH,LA7CM,LA7SNM) ; Build OBR-15 sequence - specimen source
"RTN","LA7VOBR",134,0)
 ; Call with LA761 = ien of topography file #61
"RTN","LA7VOBR",135,0)
 ;           LA762 = ien of collection sample in file #62
"RTN","LA7VOBR",136,0)
 ;          LA7ALT = alternate non-HL7 codes/text/coding system in form -
"RTN","LA7VOBR",137,0)
 ;                   specimen code^specimen text^specimen system^CONTROL^collection sample code^collection sample^collection system^alt specimen SNOMED^alt collection SNOMED.
"RTN","LA7VOBR",138,0)
 ;                   "CONTROL" only present when specimen is a lab control from file #62.3.
"RTN","LA7VOBR",139,0)
 ;                   presence of these will override standard HL7 tables
"RTN","LA7VOBR",140,0)
 ;           LA7FS = HL7 field separator
"RTN","LA7VOBR",141,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBR",142,0)
 ;           LA7CM = ien of shipping condition file #62.93 (collection method)
"RTN","LA7VOBR",143,0)
 ;          LA7SNM = 1-flag to send SNOMED CT instead of HL7 table 0070
"RTN","LA7VOBR",144,0)
 ;
"RTN","LA7VOBR",145,0)
 ; Returns OBR-15 sequence in LA7Y
"RTN","LA7VOBR",146,0)
 ;
"RTN","LA7VOBR",147,0)
 N LA764061,LA7COMP,LA7ERR,LA7X,LA7Y,LA7Z,X,Y
"RTN","LA7VOBR",148,0)
 D OBR15^LA7VOBRB
"RTN","LA7VOBR",149,0)
 Q LA7Y
"RTN","LA7VOBR",150,0)
 ;
"RTN","LA7VOBR",151,0)
 ;
"RTN","LA7VOBR",152,0)
OBR18(LA7X,LA7FS,LA7ECH) ; Build OBR-18 sequence - Placer's field #1
"RTN","LA7VOBR",153,0)
 ; Call with   LA7X = array containing components to store, pass by reference.
"RTN","LA7VOBR",154,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",155,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",156,0)
 ;
"RTN","LA7VOBR",157,0)
 ; Returns OBR-18 sequence
"RTN","LA7VOBR",158,0)
 ;
"RTN","LA7VOBR",159,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",160,0)
 D OBRPF^LA7VOBRA
"RTN","LA7VOBR",161,0)
 Q LA7Y
"RTN","LA7VOBR",162,0)
 ;
"RTN","LA7VOBR",163,0)
 ;
"RTN","LA7VOBR",164,0)
OBR19(LA7X,LA7FS,LA7ECH) ; Build OBR-19 sequence - Placer's field #2
"RTN","LA7VOBR",165,0)
 ; Call with LA7X() = array containing components to store, pass by reference.
"RTN","LA7VOBR",166,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",167,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",168,0)
 ;
"RTN","LA7VOBR",169,0)
 ; Returns OBR-19 sequence
"RTN","LA7VOBR",170,0)
 ;
"RTN","LA7VOBR",171,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",172,0)
 D OBRPF^LA7VOBRA
"RTN","LA7VOBR",173,0)
 Q LA7Y
"RTN","LA7VOBR",174,0)
 ;
"RTN","LA7VOBR",175,0)
 ;
"RTN","LA7VOBR",176,0)
OBR20(LA7X,LA7FS,LA7ECH) ; Build OBR-20 sequence - Filler's field #1
"RTN","LA7VOBR",177,0)
 ; Call with   LA7X = array containing components to store, pass by reference.
"RTN","LA7VOBR",178,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",179,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",180,0)
 ;
"RTN","LA7VOBR",181,0)
 ; Returns OBR-20 sequence
"RTN","LA7VOBR",182,0)
 ;
"RTN","LA7VOBR",183,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",184,0)
 D OBRPF^LA7VOBRA
"RTN","LA7VOBR",185,0)
 Q LA7Y
"RTN","LA7VOBR",186,0)
 ;
"RTN","LA7VOBR",187,0)
 ;
"RTN","LA7VOBR",188,0)
OBR21(LA7X,LA7FS,LA7ECH) ; Build OBR-21 sequence - Filler's field #2
"RTN","LA7VOBR",189,0)
 ; Call with LA7X() = array containing components to store, pass by reference.
"RTN","LA7VOBR",190,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",191,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBR",192,0)
 ;
"RTN","LA7VOBR",193,0)
 ; Returns OBR-21 sequence
"RTN","LA7VOBR",194,0)
 ;
"RTN","LA7VOBR",195,0)
 N LA7I,LA7Y,LA7Z
"RTN","LA7VOBR",196,0)
 D OBRPF^LA7VOBRA
"RTN","LA7VOBR",197,0)
 Q LA7Y
"RTN","LA7VOBR",198,0)
 ;
"RTN","LA7VOBR",199,0)
 ;
"RTN","LA7VOBR",200,0)
OBR22(LA7DT) ; Build OBR-22 sequence - date report completed
"RTN","LA7VOBR",201,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBR",202,0)
 ;
"RTN","LA7VOBR",203,0)
 ; Returns OBR-22 sequence
"RTN","LA7VOBR",204,0)
 ;
"RTN","LA7VOBR",205,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBR",206,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBR",207,0)
 ;
"RTN","LA7VOBR",208,0)
 ;
"RTN","LA7VOBR",209,0)
OBR24(LA7SS) ; Build OBR-24 sequence - diagnostic service id
"RTN","LA7VOBR",210,0)
 ; Call with LA7SS = File #63 subscript^section within subscript
"RTN","LA7VOBR",211,0)
 ;
"RTN","LA7VOBR",212,0)
 ; Returns OBR-24 sequence
"RTN","LA7VOBR",213,0)
 ;
"RTN","LA7VOBR",214,0)
 N LA7Y,LA7X
"RTN","LA7VOBR",215,0)
 D OBR24^LA7VOBRA
"RTN","LA7VOBR",216,0)
 Q LA7Y
"RTN","LA7VOBR",217,0)
 ;
"RTN","LA7VOBR",218,0)
 ;
"RTN","LA7VOBR",219,0)
OBR25(LA7FLAG) ; Build OBR-25 sequence - Result status
"RTN","LA7VOBR",220,0)
 ; Call with LA7FLAG = VistA Lab status flag
"RTN","LA7VOBR",221,0)
 ; Returns result status based on HL7 table 0123
"RTN","LA7VOBR",222,0)
 ;
"RTN","LA7VOBR",223,0)
 N LA7Y
"RTN","LA7VOBR",224,0)
 D OBR25^LA7VOBRA
"RTN","LA7VOBR",225,0)
 Q LA7Y
"RTN","LA7VOBR",226,0)
 ;
"RTN","LA7VOBR",227,0)
 ;
"RTN","LA7VOBR",228,0)
OBR26(LA7OBX3,LA7OBX4,LA7OBX5,LA7FS,LA7ECH)     ; Build OBR-26 sequence - Parent result
"RTN","LA7VOBR",229,0)
 ; Call with LA7OBX3 = OBX-3 observation id of parent result
"RTN","LA7VOBR",230,0)
 ;           LA7OBX4 = OBX-4 sub-id of parent result
"RTN","LA7VOBR",231,0)
 ;           LA7OBX5 = OBX-5 parent result
"RTN","LA7VOBR",232,0)
 ;             LA7FS = HL7 Field separator
"RTN","LA7VOBR",233,0)
 ;            LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",234,0)
 ;
"RTN","LA7VOBR",235,0)
 N LA7C,LA7SC,LA7Y,LA7Z
"RTN","LA7VOBR",236,0)
 D OBR26^LA7VOBRA
"RTN","LA7VOBR",237,0)
 Q LA7Y
"RTN","LA7VOBR",238,0)
 ;
"RTN","LA7VOBR",239,0)
 ;
"RTN","LA7VOBR",240,0)
OBR27(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build OBR-27 sequence - Quantity/Timing
"RTN","LA7VOBR",241,0)
 ; Call with  LA7DUR = collection duration
"RTN","LA7VOBR",242,0)
 ;           LA7DURU = duration units (pointer to #64.061)
"RTN","LA7VOBR",243,0)
 ;           LA76205 = test urgency
"RTN","LA7VOBR",244,0)
 ;             LA7FS = HL7 field separator
"RTN","LA7VOBR",245,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBR",246,0)
 ;
"RTN","LA7VOBR",247,0)
 ; Returns OBR-27 sequence
"RTN","LA7VOBR",248,0)
 ; Since field is same as ORC-7, use builder for ORC-7 field.
"RTN","LA7VOBR",249,0)
 ;
"RTN","LA7VOBR",250,0)
 Q $$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VOBR",251,0)
 ;
"RTN","LA7VOBR",252,0)
 ;
"RTN","LA7VOBR",253,0)
OBR29(LA7PON,LA7FON,LA7FS,LA7ECH)       ; Build OBR-29 sequence - Parent
"RTN","LA7VOBR",254,0)
 ; Call with LA7PON = parent's placer order number
"RTN","LA7VOBR",255,0)
 ;           LA7FON = parent's filler order number
"RTN","LA7VOBR",256,0)
 ;            LA7FS = HL7 field separator
"RTN","LA7VOBR",257,0)
 ;           LA7ECH = HL7 encoding characters
"RTN","LA7VOBR",258,0)
 ;
"RTN","LA7VOBR",259,0)
 N LA7Y,LA7Z
"RTN","LA7VOBR",260,0)
 D OBR29^LA7VOBRA
"RTN","LA7VOBR",261,0)
 Q LA7Y
"RTN","LA7VOBR",262,0)
 ;
"RTN","LA7VOBR",263,0)
 ;
"RTN","LA7VOBR",264,0)
OBR32(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-32 sequence - Principle Result Interpreter field
"RTN","LA7VOBR",265,0)
 ; Call with   LA7DUZ = DUZ of verifying user
"RTN","LA7VOBR",266,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBR",267,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBR",268,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBR",269,0)
 ;           
"RTN","LA7VOBR",270,0)
 ; Returns OBR-32 sequence
"RTN","LA7VOBR",271,0)
 ;
"RTN","LA7VOBR",272,0)
 N LA7PRI,LA7X
"RTN","LA7VOBR",273,0)
 D OBR32^LA7VOBRA
"RTN","LA7VOBR",274,0)
 Q LA7PRI
"RTN","LA7VOBR",275,0)
 ;
"RTN","LA7VOBR",276,0)
 ;
"RTN","LA7VOBR",277,0)
OBR33(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-32 sequence - Assistant Result Interpreter field
"RTN","LA7VOBR",278,0)
 ; Call with   LA7DUZ = DUZ of assistant interpreter
"RTN","LA7VOBR",279,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBR",280,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBR",281,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBR",282,0)
 ;           
"RTN","LA7VOBR",283,0)
 ; Returns OBR-33 sequence
"RTN","LA7VOBR",284,0)
 ;
"RTN","LA7VOBR",285,0)
 N LA7ARI,LA7X
"RTN","LA7VOBR",286,0)
 D OBR33^LA7VOBRA
"RTN","LA7VOBR",287,0)
 Q LA7ARI
"RTN","LA7VOBR",288,0)
 ;
"RTN","LA7VOBR",289,0)
 ;
"RTN","LA7VOBR",290,0)
OBR34(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-34 sequence - Technician field
"RTN","LA7VOBR",291,0)
 ; Call with   LA7DUZ = DUZ of technician
"RTN","LA7VOBR",292,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBR",293,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBR",294,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBR",295,0)
 ;           
"RTN","LA7VOBR",296,0)
 ; Returns OBR-34 sequence
"RTN","LA7VOBR",297,0)
 ;
"RTN","LA7VOBR",298,0)
 N LA7TECH,LA7X
"RTN","LA7VOBR",299,0)
 D OBR34^LA7VOBRA
"RTN","LA7VOBR",300,0)
 Q LA7TECH
"RTN","LA7VOBR",301,0)
 ;
"RTN","LA7VOBR",302,0)
 ;
"RTN","LA7VOBR",303,0)
OBR35(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-35 sequence - Transcriptionist field
"RTN","LA7VOBR",304,0)
 ; Call with   LA7DUZ = DUZ of transcriptionist
"RTN","LA7VOBR",305,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBR",306,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBR",307,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBR",308,0)
 ;           
"RTN","LA7VOBR",309,0)
 ; Returns OBR-35 sequence
"RTN","LA7VOBR",310,0)
 ;
"RTN","LA7VOBR",311,0)
 N LA7TSPT,LA7X
"RTN","LA7VOBR",312,0)
 D OBR35^LA7VOBRA
"RTN","LA7VOBR",313,0)
 Q LA7TSPT
"RTN","LA7VOBR",314,0)
 ;
"RTN","LA7VOBR",315,0)
 ;
"RTN","LA7VOBR",316,0)
OBR44(LA7VAL,LA7FS,LA7ECH) ; Build OBR-44 sequence - Procedure Code
"RTN","LA7VOBR",317,0)
 ; Call with   LA7VAL = Order NLT code
"RTN","LA7VOBR",318,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBR",319,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBR",320,0)
 ;           
"RTN","LA7VOBR",321,0)
 ; Returns       LA7Y = OBR-44 sequence
"RTN","LA7VOBR",322,0)
 ;
"RTN","LA7VOBR",323,0)
 N LA764,LA781,LA7X,LA7Y,LA7Z
"RTN","LA7VOBR",324,0)
 D OBR44^LA7VOBRA
"RTN","LA7VOBR",325,0)
 Q LA7Y
"RTN","LA7VOBRA")
0^2^B49742894
"RTN","LA7VOBRA",1,0)
LA7VOBRA ;DALOI/JMC - LAB OBR segment builder (cont'd) ;03/22/10  17:45
"RTN","LA7VOBRA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBRA",3,0)
 ;
"RTN","LA7VOBRA",4,0)
 ; This routine is an extension of LA7VOBR and should only be called from that routine.
"RTN","LA7VOBRA",5,0)
 ;
"RTN","LA7VOBRA",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VOBRA",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VOBRA",8,0)
 Q
"RTN","LA7VOBRA",9,0)
 ;
"RTN","LA7VOBRA",10,0)
 ;
"RTN","LA7VOBRA",11,0)
OBR2 ; Build OBR-2 sequence - placer's specimen id
"RTN","LA7VOBRA",12,0)
 ;
"RTN","LA7VOBRA",13,0)
 ;ZEXCEPT: LA7ECH,LA7FS,LA7ID,LA7X,LA7Y
"RTN","LA7VOBRA",14,0)
 ;
"RTN","LA7VOBRA",15,0)
 S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)
"RTN","LA7VOBRA",16,0)
 S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID
"RTN","LA7VOBRA",17,0)
 I $G(LA7ID("NMSP"))'="" S $P(LA7Y,$E(LA7ECH,1),2)=LA7ID("NMSP")
"RTN","LA7VOBRA",18,0)
 I $G(LA7ID("SITE"))'="" D
"RTN","LA7VOBRA",19,0)
 . S LA7X=$$FACDNS^LA7VHLU2(LA7ID("SITE"),LA7FS,LA7ECH,1)
"RTN","LA7VOBRA",20,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)
"RTN","LA7VOBRA",21,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)
"RTN","LA7VOBRA",22,0)
 Q
"RTN","LA7VOBRA",23,0)
 ;
"RTN","LA7VOBRA",24,0)
 ;
"RTN","LA7VOBRA",25,0)
OBR3 ; Build OBR-3 sequence - filler's specimen id
"RTN","LA7VOBRA",26,0)
 ;
"RTN","LA7VOBRA",27,0)
 ;ZEXCEPT: LA7ECH,LA7FS,LA7ID,LA7X,LA7Y
"RTN","LA7VOBRA",28,0)
 ;
"RTN","LA7VOBRA",29,0)
 S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)
"RTN","LA7VOBRA",30,0)
 S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID
"RTN","LA7VOBRA",31,0)
 I $G(LA7ID("NMSP"))'="" S $P(LA7Y,$E(LA7ECH,1),2)=LA7ID("NMSP")
"RTN","LA7VOBRA",32,0)
 I $G(LA7ID("SITE"))'="" D
"RTN","LA7VOBRA",33,0)
 . S LA7X=$$FACDNS^LA7VHLU2(LA7ID("SITE"),LA7FS,LA7ECH,1)
"RTN","LA7VOBRA",34,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)
"RTN","LA7VOBRA",35,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)
"RTN","LA7VOBRA",36,0)
 Q
"RTN","LA7VOBRA",37,0)
 ;
"RTN","LA7VOBRA",38,0)
 ;
"RTN","LA7VOBRA",39,0)
OBR4 ; Build OBR-4 sequence - Universal service ID
"RTN","LA7VOBRA",40,0)
 ;
"RTN","LA7VOBRA",41,0)
 ;ZEXCEPT: LA760,LA764,LA7ALT,LA7COMP,LA7ECH,LA7FS,LA7NLT,LA7TN,LA7Y,LA7Z
"RTN","LA7VOBRA",42,0)
 ;
"RTN","LA7VOBRA",43,0)
 ;
"RTN","LA7VOBRA",44,0)
 S LA764=0,LA7Y=""
"RTN","LA7VOBRA",45,0)
 ; specify component position - primary/alternate
"RTN","LA7VOBRA",46,0)
 S LA7COMP=0
"RTN","LA7VOBRA",47,0)
 ;
"RTN","LA7VOBRA",48,0)
 ; Send non-VA test codes as first coding system
"RTN","LA7VOBRA",49,0)
 I LA7ALT'="" D
"RTN","LA7VOBRA",50,0)
 . N I
"RTN","LA7VOBRA",51,0)
 . F I=1:1:3 S $P(LA7Y,$E(LA7ECH),LA7COMP+I)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",I),LA7FS_LA7ECH)
"RTN","LA7VOBRA",52,0)
 . S LA7COMP=LA7COMP+I
"RTN","LA7VOBRA",53,0)
 ;
"RTN","LA7VOBRA",54,0)
 ; Send NLT test codes as primary unless non-VA codes then send as alternate code
"RTN","LA7VOBRA",55,0)
 I LA7NLT'="" D
"RTN","LA7VOBRA",56,0)
 . S LA764=$O(^LAM("E",LA7NLT,0)),LA7Z=""
"RTN","LA7VOBRA",57,0)
 . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VOBRA",58,0)
 . I LA7Z="" D
"RTN","LA7VOBRA",59,0)
 . . N LA7642
"RTN","LA7VOBRA",60,0)
 . . S LA764=$O(^LAM("E",$P(LA7NLT,".")_".0000",0))
"RTN","LA7VOBRA",61,0)
 . . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VOBRA",62,0)
 . . S LA7642=$O(^LAB(64.2,"F","."_$P(LA7NLT,".",2),0))
"RTN","LA7VOBRA",63,0)
 . . I LA764,LA7642 S LA7Z=LA7Z_"~"_$$GET1^DIQ(64.2,LA7642_",",.01,"I")
"RTN","LA7VOBRA",64,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=$$CHKDATA^LA7VHLU3(LA7NLT,LA7FS_LA7ECH)
"RTN","LA7VOBRA",65,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRA",66,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)="99VA64"
"RTN","LA7VOBRA",67,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRA",68,0)
 ;
"RTN","LA7VOBRA",69,0)
 ; Send file #60 test name if available and no alternate
"RTN","LA7VOBRA",70,0)
 I LA7COMP<4,LA760 D
"RTN","LA7VOBRA",71,0)
 . S LA7TN=$$GET1^DIQ(60,LA760_",",.01)
"RTN","LA7VOBRA",72,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=LA760
"RTN","LA7VOBRA",73,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7TN,LA7FS_LA7ECH)
"RTN","LA7VOBRA",74,0)
 . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)="99VA60"
"RTN","LA7VOBRA",75,0)
 ;
"RTN","LA7VOBRA",76,0)
 Q
"RTN","LA7VOBRA",77,0)
 ;
"RTN","LA7VOBRA",78,0)
 ;
"RTN","LA7VOBRA",79,0)
OBR9 ; Build OBR-9 sequence - collection volume
"RTN","LA7VOBRA",80,0)
 ;
"RTN","LA7VOBRA",81,0)
 ;ZEXCEPT: LA764061,LA7ECH,LA7FS,LA7IENS,LA7VOL,LA7X,LA7Y
"RTN","LA7VOBRA",82,0)
 ;
"RTN","LA7VOBRA",83,0)
 ; Collection volume
"RTN","LA7VOBRA",84,0)
 S $P(LA7Y,$E(LA7ECH,1))=LA7VOL
"RTN","LA7VOBRA",85,0)
 ;
"RTN","LA7VOBRA",86,0)
 I LA764061 D
"RTN","LA7VOBRA",87,0)
 . S LA7IENS=LA764061_","
"RTN","LA7VOBRA",88,0)
 . D GETS^DIQ(64.061,LA7IENS,".01;1","E","LA7Y")
"RTN","LA7VOBRA",89,0)
 . ; Collection Volume units code
"RTN","LA7VOBRA",90,0)
 . S $P(LA7X,$E(LA7ECH,4),1)=$G(LA7Y(64.061,LA7IENS,.01,"E"))
"RTN","LA7VOBRA",91,0)
 . ; Collection Volume units text
"RTN","LA7VOBRA",92,0)
 . S $P(LA7X,$E(LA7ECH,4),2)=$$CHKDATA^LA7VHLU3($G(LA7Y(64.061,LA7IENS,1,"E")),LA7FS_LA7ECH)
"RTN","LA7VOBRA",93,0)
 . ; LOINC coding system
"RTN","LA7VOBRA",94,0)
 . S $P(LA7X,$E(LA7ECH,4),3)="LN"
"RTN","LA7VOBRA",95,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7X
"RTN","LA7VOBRA",96,0)
 ;
"RTN","LA7VOBRA",97,0)
 Q
"RTN","LA7VOBRA",98,0)
 ;
"RTN","LA7VOBRA",99,0)
 ;
"RTN","LA7VOBRA",100,0)
OBR24 ; Build OBR-24 sequence - diagnostic service id
"RTN","LA7VOBRA",101,0)
 ;
"RTN","LA7VOBRA",102,0)
 ;ZEXCEPT: LA7SS,LA7X,LA7Y
"RTN","LA7VOBRA",103,0)
 ;
"RTN","LA7VOBRA",104,0)
 ; Code non-MI subscripts
"RTN","LA7VOBRA",105,0)
 I $P(LA7SS,"^")'="MI" D  Q
"RTN","LA7VOBRA",106,0)
 . S LA7X=$P(LA7SS,"^")
"RTN","LA7VOBRA",107,0)
 . S LA7Y=$S(LA7X="CH":"CH",LA7X="SP":"SP",LA7X="CY":"CP",LA7X="EM":"PAT",LA7X="AU":"PAT",LA7X="BB":"BLB",1:"LAB")
"RTN","LA7VOBRA",108,0)
 ;
"RTN","LA7VOBRA",109,0)
 ; Code MI subscripts
"RTN","LA7VOBRA",110,0)
 S LA7X=$P(LA7SS,"^",2)
"RTN","LA7VOBRA",111,0)
 S LA7Y=$S(LA7X=11:"MB",LA7X=14:"PAR",LA7X=18:"MYC",LA7X=22:"MCB",LA7X=33:"VR",1:"MB")
"RTN","LA7VOBRA",112,0)
 ;
"RTN","LA7VOBRA",113,0)
 Q
"RTN","LA7VOBRA",114,0)
 ;
"RTN","LA7VOBRA",115,0)
 ;
"RTN","LA7VOBRA",116,0)
OBR25 ; Build OBR-25 sequence - Result status
"RTN","LA7VOBRA",117,0)
 ;
"RTN","LA7VOBRA",118,0)
 ;ZEXCEPT: LA7FLAG,LA7Y
"RTN","LA7VOBRA",119,0)
 ;
"RTN","LA7VOBRA",120,0)
 S LA7Y=""
"RTN","LA7VOBRA",121,0)
 ;
"RTN","LA7VOBRA",122,0)
 I LA7FLAG="F" S LA7Y="F"
"RTN","LA7VOBRA",123,0)
 I LA7FLAG="P" S LA7Y="P"
"RTN","LA7VOBRA",124,0)
 I LA7FLAG="A" S LA7Y="A"
"RTN","LA7VOBRA",125,0)
 I LA7FLAG="C" S LA7Y="C"
"RTN","LA7VOBRA",126,0)
 I LA7FLAG?1.N S LA7Y=$$GET1^DIQ(64.061,LA7FLAG_",",2)
"RTN","LA7VOBRA",127,0)
 ;
"RTN","LA7VOBRA",128,0)
 Q
"RTN","LA7VOBRA",129,0)
 ;
"RTN","LA7VOBRA",130,0)
 ;
"RTN","LA7VOBRA",131,0)
OBR26 ; Build OBR-26 sequence - Parent result
"RTN","LA7VOBRA",132,0)
 ;
"RTN","LA7VOBRA",133,0)
 ;ZEXCEPT: LA7C,LA7ECH,LA7OBX3,LA7OBX4,LA7OBX5,LA7SC,LA7Y
"RTN","LA7VOBRA",134,0)
 ;
"RTN","LA7VOBRA",135,0)
 S LA7Y=""
"RTN","LA7VOBRA",136,0)
 ;
"RTN","LA7VOBRA",137,0)
 ; Move component into sub-component position
"RTN","LA7VOBRA",138,0)
 ; Translate component character to sub-component character
"RTN","LA7VOBRA",139,0)
 S LA7C=$E(LA7ECH,1),LA7SC=$E(LA7ECH,4)
"RTN","LA7VOBRA",140,0)
 ;
"RTN","LA7VOBRA",141,0)
 ; Parent result observation identifier in 1st component
"RTN","LA7VOBRA",142,0)
 I LA7OBX3'="" S $P(LA7Y,$E(LA7ECH,1),1)=$TR(LA7OBX3,LA7C,LA7SC)
"RTN","LA7VOBRA",143,0)
 ;
"RTN","LA7VOBRA",144,0)
 ; Parent sub-id in 2nd component
"RTN","LA7VOBRA",145,0)
 I LA7OBX4'="" S $P(LA7Y,$E(LA7ECH,1),2)=$TR(LA7OBX4,LA7C,LA7SC)
"RTN","LA7VOBRA",146,0)
 ;
"RTN","LA7VOBRA",147,0)
 ; Parent test result in 3rd component
"RTN","LA7VOBRA",148,0)
 I LA7OBX5'="" S $P(LA7Y,$E(LA7ECH,1),3)=$TR(LA7OBX5,LA7C,LA7SC)
"RTN","LA7VOBRA",149,0)
 ;
"RTN","LA7VOBRA",150,0)
 Q
"RTN","LA7VOBRA",151,0)
 ;
"RTN","LA7VOBRA",152,0)
 ;
"RTN","LA7VOBRA",153,0)
OBR29 ; Build OBR-29 sequence - Parent
"RTN","LA7VOBRA",154,0)
 ;
"RTN","LA7VOBRA",155,0)
 ;ZEXCEPT: LA7ECH,LA7FON,LA7FS,LA7PON,LA7Y,LA7Z
"RTN","LA7VOBRA",156,0)
 ;
"RTN","LA7VOBRA",157,0)
 S LA7Y=""
"RTN","LA7VOBRA",158,0)
 ;
"RTN","LA7VOBRA",159,0)
 I $G(LA7PON)'="" D
"RTN","LA7VOBRA",160,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7PON,LA7FS_LA7ECH)
"RTN","LA7VOBRA",161,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z
"RTN","LA7VOBRA",162,0)
 ;
"RTN","LA7VOBRA",163,0)
 I $G(LA7FON)'="" D
"RTN","LA7VOBRA",164,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7FON,LA7FS_LA7ECH)
"RTN","LA7VOBRA",165,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z
"RTN","LA7VOBRA",166,0)
 ;
"RTN","LA7VOBRA",167,0)
 Q
"RTN","LA7VOBRA",168,0)
 ;
"RTN","LA7VOBRA",169,0)
 ;
"RTN","LA7VOBRA",170,0)
OBRPF ; Build OBR-18,19,20,21 Placer/Filler #1/#2
"RTN","LA7VOBRA",171,0)
 ;
"RTN","LA7VOBRA",172,0)
 ;ZEXCEPT: LA7ECH,LA7FS,LA7I,LA7X,LA7Y,LA7Z
"RTN","LA7VOBRA",173,0)
 ;
"RTN","LA7VOBRA",174,0)
 S (LA7Y,LA7Z)="",LA7I=0
"RTN","LA7VOBRA",175,0)
 F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  S $P(LA7Z,"^",LA7I)=LA7X(LA7I)
"RTN","LA7VOBRA",176,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRA",177,0)
 Q
"RTN","LA7VOBRA",178,0)
 ;
"RTN","LA7VOBRA",179,0)
 ;
"RTN","LA7VOBRA",180,0)
OBR32 ; Build OBR-32 sequence - Principle Result Interpreter field
"RTN","LA7VOBRA",181,0)
 ;
"RTN","LA7VOBRA",182,0)
 ;ZEXCEPT: LA7DIV,LA7DUZ,LA7ECH,LA7FS,LA7INTYP,LA7PRI,LA7X
"RTN","LA7VOBRA",183,0)
 ;
"RTN","LA7VOBRA",184,0)
 S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,2)
"RTN","LA7VOBRA",185,0)
 I $G(LA7INTYP)=30 S $P(LA7PRI,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)
"RTN","LA7VOBRA",186,0)
 E  S $P(LA7PRI,$E(LA7ECH))=LA7X
"RTN","LA7VOBRA",187,0)
 I LA7DIV S $P(LA7PRI,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)
"RTN","LA7VOBRA",188,0)
 Q
"RTN","LA7VOBRA",189,0)
 ;
"RTN","LA7VOBRA",190,0)
 ;
"RTN","LA7VOBRA",191,0)
OBR33 ; Build OBR-32 sequence - Assistant Result Interpreter field
"RTN","LA7VOBRA",192,0)
 ;
"RTN","LA7VOBRA",193,0)
 ;ZEXCEPT: LA7ARI,LA7DIV,LA7DUZ,LA7ECH,LA7FS,LA7INTYP,LA7X
"RTN","LA7VOBRA",194,0)
 ;
"RTN","LA7VOBRA",195,0)
 ;
"RTN","LA7VOBRA",196,0)
 S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,2)
"RTN","LA7VOBRA",197,0)
 I $G(LA7INTYP)=30 S $P(LA7ARI,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)
"RTN","LA7VOBRA",198,0)
 E  S $P(LA7ARI,$E(LA7ECH))=LA7X
"RTN","LA7VOBRA",199,0)
 I LA7DIV S $P(LA7ARI,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)
"RTN","LA7VOBRA",200,0)
 Q
"RTN","LA7VOBRA",201,0)
 ;
"RTN","LA7VOBRA",202,0)
 ;
"RTN","LA7VOBRA",203,0)
OBR34 ; Build OBR-34 sequence - Technician field
"RTN","LA7VOBRA",204,0)
 ;
"RTN","LA7VOBRA",205,0)
 ;ZEXCEPT: LA7DIV,LA7DUZ,LA7ECH,LA7FS,LA7INTYP,LA7TECH,LA7X
"RTN","LA7VOBRA",206,0)
 ;
"RTN","LA7VOBRA",207,0)
 ;
"RTN","LA7VOBRA",208,0)
 S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,1)
"RTN","LA7VOBRA",209,0)
 I $G(LA7INTYP)=30 S $P(LA7TECH,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)
"RTN","LA7VOBRA",210,0)
 E  S $P(LA7TECH,$E(LA7ECH))=LA7X
"RTN","LA7VOBRA",211,0)
 I LA7DIV S $P(LA7TECH,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)
"RTN","LA7VOBRA",212,0)
 Q
"RTN","LA7VOBRA",213,0)
 ;
"RTN","LA7VOBRA",214,0)
 ;
"RTN","LA7VOBRA",215,0)
OBR35 ; Build OBR-35 sequence - Transcriptionist field
"RTN","LA7VOBRA",216,0)
 ;
"RTN","LA7VOBRA",217,0)
 ;ZEXCEPT: LA7DIV,LA7DUZ,LA7ECH,LA7FS,LA7INTYP,LA7TSPT,LA7X
"RTN","LA7VOBRA",218,0)
 ;
"RTN","LA7VOBRA",219,0)
 S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,1)
"RTN","LA7VOBRA",220,0)
 I $G(LA7INTYP)=30 S $P(LA7TSPT,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)
"RTN","LA7VOBRA",221,0)
 E  S $P(LA7TSPT,$E(LA7ECH))=LA7X
"RTN","LA7VOBRA",222,0)
 I LA7DIV S $P(LA7TSPT,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)
"RTN","LA7VOBRA",223,0)
 Q
"RTN","LA7VOBRA",224,0)
 ;
"RTN","LA7VOBRA",225,0)
 ;
"RTN","LA7VOBRA",226,0)
OBR44 ; Build OBR-44
"RTN","LA7VOBRA",227,0)
 ;
"RTN","LA7VOBRA",228,0)
 ;ZEXCEPT: LA764,LA781,LA7ECH,LA7FS,LA7VAL,LA7X,LA7Y
"RTN","LA7VOBRA",229,0)
 ;
"RTN","LA7VOBRA",230,0)
 ;
"RTN","LA7VOBRA",231,0)
 S (LA7X,LA7Y,LA7Z)=""
"RTN","LA7VOBRA",232,0)
 ;
"RTN","LA7VOBRA",233,0)
 I LA7VAL="" Q
"RTN","LA7VOBRA",234,0)
 ;
"RTN","LA7VOBRA",235,0)
 ; Send NLT result code
"RTN","LA7VOBRA",236,0)
 S LA764=$O(^LAM("E",LA7VAL,0))
"RTN","LA7VOBRA",237,0)
 I LA764 S LA7X=$P($G(^LAM(LA764,0)),"^")
"RTN","LA7VOBRA",238,0)
 ;
"RTN","LA7VOBRA",239,0)
 ; If suffixed and not defined then build from primary and suffix code.
"RTN","LA7VOBRA",240,0)
 I LA7X="" D
"RTN","LA7VOBRA",241,0)
 . N LA7642
"RTN","LA7VOBRA",242,0)
 . S LA764=$O(^LAM("E",$P(LA7VAL,".")_".0000",0))
"RTN","LA7VOBRA",243,0)
 . I LA764 S LA7X=$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VOBRA",244,0)
 . S LA7642=$O(^LAB(64.2,"F","."_$P(LA7VAL,".",2),0))
"RTN","LA7VOBRA",245,0)
 . I LA764,LA7642 S LA7X=LA7X_"~"_$$GET1^DIQ(64.2,LA7642_",",.01,"I")
"RTN","LA7VOBRA",246,0)
 ;
"RTN","LA7VOBRA",247,0)
 I LA7X'="" S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VOBRA",248,0)
 S $P(LA7Z,$E(LA7ECH,1),1)=LA7VAL
"RTN","LA7VOBRA",249,0)
 S $P(LA7Z,$E(LA7ECH,1),2)=LA7X
"RTN","LA7VOBRA",250,0)
 S $P(LA7Z,$E(LA7ECH,1),3)="99VA64"
"RTN","LA7VOBRA",251,0)
 ;S LA7X=$$GET1^DID(64,"","","PACKAGE REVISION DATA")
"RTN","LA7VOBRA",252,0)
 ;S $P(LA7Z,$E(LA7ECH,1),7)=LA7X
"RTN","LA7VOBRA",253,0)
 S LA7Y=LA7Z
"RTN","LA7VOBRA",254,0)
 ;
"RTN","LA7VOBRA",255,0)
 ; Check for and build CPT code in primary, move NLT to alternate
"RTN","LA7VOBRA",256,0)
 I LA764="" Q
"RTN","LA7VOBRA",257,0)
 I '$D(^LAM("AD",LA764,"CPT")) Q
"RTN","LA7VOBRA",258,0)
 S LA7X=$O(^LAM("AD",LA764,"CPT",0)),LA781=""
"RTN","LA7VOBRA",259,0)
 I LA7X>0 S LA781=+$P($G(^LAM(LA764,4,LA7X,0)),"^")
"RTN","LA7VOBRA",260,0)
 I LA781>0 D
"RTN","LA7VOBRA",261,0)
 . S LA7X=$$CPT^ICPTCOD(LA781,DT,1)
"RTN","LA7VOBRA",262,0)
 . I LA7X<1 Q
"RTN","LA7VOBRA",263,0)
 . S LA7Z=$P(LA7X,"^",2)
"RTN","LA7VOBRA",264,0)
 . S $P(LA7Z,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",3),LA7FS_LA7ECH)
"RTN","LA7VOBRA",265,0)
 . S $P(LA7Z,$E(LA7ECH,1),3)=$S($P(LA7X,"^",5)="C":"C4",$P(LA7X,"^",5)="HCPCS":"HCPCS",1:"L")
"RTN","LA7VOBRA",266,0)
 . S LA7Y=LA7Z_$E(LA7ECH,1)_$P(LA7Y,$E(LA7ECH,1),1,3)
"RTN","LA7VOBRA",267,0)
 ;. S $P(LA7Y,$E(LA7ECH,1),8)=$P(LA7Y,$E(LA7ECH,1),7)
"RTN","LA7VOBRA",268,0)
 ;. S $P(LA7Y,$E(LA7ECH,1),7)=$P(LA7X,"^",6)
"RTN","LA7VOBRA",269,0)
 ;
"RTN","LA7VOBRA",270,0)
 Q
"RTN","LA7VOBRB")
0^93^B28052109
"RTN","LA7VOBRB",1,0)
LA7VOBRB ;DALOI/JMC - LAB OBR segment builder (cont'd);Jan 8, 2008
"RTN","LA7VOBRB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBRB",3,0)
 ;
"RTN","LA7VOBRB",4,0)
 Q
"RTN","LA7VOBRB",5,0)
 ;
"RTN","LA7VOBRB",6,0)
 ;
"RTN","LA7VOBRB",7,0)
OBR15 ; Build OBR-15 sequence - specimen source
"RTN","LA7VOBRB",8,0)
 ;
"RTN","LA7VOBRB",9,0)
 S LA764061=0,LA7Y=""
"RTN","LA7VOBRB",10,0)
 S LA7COMP=0 ; specify subcomponent position - primary/alternate
"RTN","LA7VOBRB",11,0)
 ; SNOMED code flag (0-do not encode with SNOMED, 1-encode with SNOMED, 2-encode with SNOMED only; no HL70070)
"RTN","LA7VOBRB",12,0)
 S LA7SNM=$G(LA7SNM)
"RTN","LA7VOBRB",13,0)
 ;
"RTN","LA7VOBRB",14,0)
 ; Get entry in #64.061 and SNOMED code for this Topography file #61 entry.
"RTN","LA7VOBRB",15,0)
 I LA761>0 D
"RTN","LA7VOBRB",16,0)
 . S LA761(0)=$G(^LAB(61,LA761,0)),LA764061=$P(LA761(0),"^",9)
"RTN","LA7VOBRB",17,0)
 . S $P(LA7Y,$E(LA7ECH,4),9)=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",18,0)
 ;
"RTN","LA7VOBRB",19,0)
 ; If no specimen code then default to HL7 0070 entry "XXX"
"RTN","LA7VOBRB",20,0)
 I LA761=0 D
"RTN","LA7VOBRB",21,0)
 . N LA7SCR
"RTN","LA7VOBRB",22,0)
 . S LA7SCR="I $P(^LAB(64.061,Y,0),U,5)=""0070"",$P(^LAB(64.061,Y,0),U,7)=""S"""
"RTN","LA7VOBRB",23,0)
 . S LA764061=$$FIND1^DIC(64.061,,"X","XXX","D",LA7SCR,"LA7ERR")
"RTN","LA7VOBRB",24,0)
 ;
"RTN","LA7VOBRB",25,0)
 I LA764061 D GETS^DIQ(64.061,LA764061_",",".01;2;5","","LA7Z","LA7ERR")
"RTN","LA7VOBRB",26,0)
 ;
"RTN","LA7VOBRB",27,0)
 ; Send SNOMED as primary code
"RTN","LA7VOBRB",28,0)
 ; If no SNOMED code and SNOMED only then allow HL7 
"RTN","LA7VOBRB",29,0)
 I LA761,LA7SNM D
"RTN","LA7VOBRB",30,0)
 . S LA7X=$$IEN2SCT^LA7VHLU6(61,LA761,DT,$P(LA7ALT,"^",8))
"RTN","LA7VOBRB",31,0)
 . I LA7X="" S:LA7SNM=2 LA7SNM=1 Q
"RTN","LA7VOBRB",32,0)
 . S $P(LA7X,"^",2)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",33,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1,LA7COMP+3)=$TR($P(LA7X,"^",1,3),"^",$E(LA7ECH,4))
"RTN","LA7VOBRB",34,0)
 . S $P(LA7Y,$E(LA7ECH,4),7)=$P(LA7X,"^",4)
"RTN","LA7VOBRB",35,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",36,0)
 ;
"RTN","LA7VOBRB",37,0)
 ; Send non-standard local code as alternate unless SNOMED only flag and SNOMED code present.
"RTN","LA7VOBRB",38,0)
 I $P(LA7ALT,"^")'=""!($P(LA7ALT,"^",2)'="") D
"RTN","LA7VOBRB",39,0)
 . I LA7SNM=2,LA7COMP Q
"RTN","LA7VOBRB",40,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",41,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",42,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",43,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",44,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)=$P(LA7ALT,"^",3)
"RTN","LA7VOBRB",45,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",46,0)
 ;
"RTN","LA7VOBRB",47,0)
 ; Send HL7 Table 0070 coding as alternate code
"RTN","LA7VOBRB",48,0)
 I LA7SNM'=2,LA764061,LA7Z(64.061,LA764061_",",2)'="",LA7COMP<6 D
"RTN","LA7VOBRB",49,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",50,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",51,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRB",52,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",53,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="HL7"_LA7Z(64.061,LA764061_",",5)
"RTN","LA7VOBRB",54,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",55,0)
 ;
"RTN","LA7VOBRB",56,0)
 ; If no code found then default to backups - try SNOMED I then file #61 as local code or HL7 XXX.
"RTN","LA7VOBRB",57,0)
 I LA761,$P(LA761(0),"^",2)'="",LA7COMP<1 D
"RTN","LA7VOBRB",58,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)="T-"_$P(LA761(0),"^",2)
"RTN","LA7VOBRB",59,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",60,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",61,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="SNM"
"RTN","LA7VOBRB",62,0)
 . S $P(LA7Y,$E(LA7ECH,4),7)="1974"
"RTN","LA7VOBRB",63,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",64,0)
 I LA761,LA7COMP<6 D
"RTN","LA7VOBRB",65,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA761
"RTN","LA7VOBRB",66,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",67,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",68,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="99VA61"
"RTN","LA7VOBRB",69,0)
 . S $P(LA7Y,$E(LA7ECH,4),$S(LA7COMP<3:7,1:8))="5.2"
"RTN","LA7VOBRB",70,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",71,0)
 I LA761=0,LA7COMP<1,LA764061,LA7Z(64.061,LA764061_",",2)'="" D
"RTN","LA7VOBRB",72,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",73,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",74,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRB",75,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",76,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="HL7"_LA7Z(64.061,LA764061_",",5)
"RTN","LA7VOBRB",77,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",78,0)
 ;
"RTN","LA7VOBRB",79,0)
 ; Reverse and send HL70070 as primary and SNOMED as alternate.
"RTN","LA7VOBRB",80,0)
 ; Maintain backward compatibility with VistA LEDI III
"RTN","LA7VOBRB",81,0)
 I LA7SNM=1.1,$P(LA7Y,$E(LA7ECH,4),3)="SCT",$P(LA7Y,$E(LA7ECH,4),6)="HL70070" D
"RTN","LA7VOBRB",82,0)
 . N LA7K
"RTN","LA7VOBRB",83,0)
 . S LA7K=$P(LA7Y,$E(LA7ECH,4),1,3),LA7K(7)=$P(LA7Y,$E(LA7ECH,4),7)
"RTN","LA7VOBRB",84,0)
 . S $P(LA7Y,$E(LA7ECH,4),1,3)=$P(LA7Y,$E(LA7ECH,4),4,6),$P(LA7Y,$E(LA7ECH,4),7)=$P(LA7Y,$E(LA7ECH,4),8)
"RTN","LA7VOBRB",85,0)
 . S $P(LA7Y,$E(LA7ECH,4),4,6)=LA7K,$P(LA7Y,$E(LA7ECH,4),8)=LA7K(7)
"RTN","LA7VOBRB",86,0)
 ;
"RTN","LA7VOBRB",87,0)
 ; LA7ALT should contain "CONTROL" in 4th piece if from file #62.3
"RTN","LA7VOBRB",88,0)
 I $P(LA7ALT,"^",4)'="" D
"RTN","LA7VOBRB",89,0)
 . N LA7TXT
"RTN","LA7VOBRB",90,0)
 . S LA7TXT=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",4),LA7FS_LA7ECH)
"RTN","LA7VOBRB",91,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)=LA7TXT
"RTN","LA7VOBRB",92,0)
 ;
"RTN","LA7VOBRB",93,0)
 ; Build collection sample in 4th component.
"RTN","LA7VOBRB",94,0)
 S LA7COMP=0 ; specify subcomponent position - primary/alternate
"RTN","LA7VOBRB",95,0)
 ; Send collection sample SNOMED CT code for DoD.
"RTN","LA7VOBRB",96,0)
 I LA762,LA7SNM D
"RTN","LA7VOBRB",97,0)
 . N LA7K,LA7Z
"RTN","LA7VOBRB",98,0)
 . S LA7X=$$IEN2SCT^LA7VHLU6(62,LA762,DT,$P(LA7ALT,"^",9))
"RTN","LA7VOBRB",99,0)
 . S $P(LA7X,"^",2)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",100,0)
 . S LA7K=$TR($P(LA7X,"^",1,3),"^",$E(LA7ECH,4))
"RTN","LA7VOBRB",101,0)
 . S $P(LA7K,$E(LA7ECH,4),7)=$P(LA7X,"^",4)
"RTN","LA7VOBRB",102,0)
 . S LA7Z=$$GET1^DIQ(62,LA762_",",.01,"","LA7ERR"),LA7Z=$$TRIM^XLFSTR(LA7Z,"LR"," ")
"RTN","LA7VOBRB",103,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRB",104,0)
 . S $P(LA7K,$E(LA7ECH,4),9)=LA7Z
"RTN","LA7VOBRB",105,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7K,LA7COMP=3
"RTN","LA7VOBRB",106,0)
 ;
"RTN","LA7VOBRB",107,0)
 I $P(LA7ALT,"^",5)'=""!($P(LA7ALT,"^",6)'="") D
"RTN","LA7VOBRB",108,0)
 . N I
"RTN","LA7VOBRB",109,0)
 . S X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",5),LA7FS_LA7ECH)
"RTN","LA7VOBRB",110,0)
 . S Y=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",6),LA7FS_LA7ECH)
"RTN","LA7VOBRB",111,0)
 . S LA7X=$P(LA7Y,$E(LA7ECH,1),4)
"RTN","LA7VOBRB",112,0)
 . F I=1,4 I $P(LA7X,$E(LA7ECH,4),I)="" S $P(LA7X,$E(LA7ECH,4),I)=X,$P(LA7X,$E(LA7ECH,4),I+1)=Y,$P(LA7X,$E(LA7ECH,4),I+2)=$P(LA7ALT,"^",7) Q
"RTN","LA7VOBRB",113,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X,LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",114,0)
 ;
"RTN","LA7VOBRB",115,0)
 ; Get entry in #62 for this collection sample entry.
"RTN","LA7VOBRB",116,0)
 I LA762,LA7COMP<6 D
"RTN","LA7VOBRB",117,0)
 . N I,LA7Z
"RTN","LA7VOBRB",118,0)
 . S LA7Z=$$GET1^DIQ(62,LA762_",",.01,"","LA7ERR"),LA7Z=$$TRIM^XLFSTR(LA7Z,"LR"," ")
"RTN","LA7VOBRB",119,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRB",120,0)
 . S LA7X=$P(LA7Y,$E(LA7ECH,1),4)
"RTN","LA7VOBRB",121,0)
 . F I=1,4 I $P(LA7X,$E(LA7ECH,4),I)="" S $P(LA7X,$E(LA7ECH,4),I)=LA762,$P(LA7X,$E(LA7ECH,4),I+1)=LA7Z,$P(LA7X,$E(LA7ECH,4),I+2)="99VA62" Q
"RTN","LA7VOBRB",122,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X,LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",123,0)
 ;
"RTN","LA7VOBRB",124,0)
 ; Send specimen shipping condition - collection method
"RTN","LA7VOBRB",125,0)
 I $G(LA7CM) D
"RTN","LA7VOBRB",126,0)
 . S X=$$GET1^DIQ(62.93,LA7CM_",",.01)
"RTN","LA7VOBRB",127,0)
 . I X'="" S X=$$CHKDATA^LA7VHLU3(X,LA7FS_LA7ECH)
"RTN","LA7VOBRB",128,0)
 . S Y=$$GET1^DIQ(62.93,LA7CM_",",.02)
"RTN","LA7VOBRB",129,0)
 . I Y'="" S Y=$$CHKDATA^LA7VHLU3(Y,LA7FS_LA7ECH)
"RTN","LA7VOBRB",130,0)
 . S LA7X=Y_$E(LA7ECH,4)_X_$E(LA7ECH,4)_"99VA62.93"
"RTN","LA7VOBRB",131,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)=LA7X
"RTN","LA7VOBRB",132,0)
 Q
"RTN","LA7VOBX")
0^46^B30185961
"RTN","LA7VOBX",1,0)
LA7VOBX ;DALOI/JMC - LAB OBX Segment message builder;Jan 7, 2008
"RTN","LA7VOBX",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBX",3,0)
 ;
"RTN","LA7VOBX",4,0)
 ; Reference to $$LOSVUID^HDISVAP supported by DBIA #4801
"RTN","LA7VOBX",5,0)
 ;
"RTN","LA7VOBX",6,0)
OBX(LRDFN,LRSS,LRIDT,LRSB,LA7ARRAY,LA7OBXSN,LA7FS,LA7ECH,LA7NVAF) ; Observation/Result segment for Lab Results.
"RTN","LA7VOBX",7,0)
 ; Call with    LRDFN = ien of entry in file #63
"RTN","LA7VOBX",8,0)
 ;               LRSS = file #63 subscript
"RTN","LA7VOBX",9,0)
 ;              LRIDT = inverse date/time of specimen
"RTN","LA7VOBX",10,0)
 ;               LRSB = ien of dataname if "CH" subscript or global subscript for others
"RTN","LA7VOBX",11,0)
 ;           LA7ARRAY = array to return OBX segment, pass by reference
"RTN","LA7VOBX",12,0)
 ;           LA7OBXSN = OBX segment sequence number, pass by reference
"RTN","LA7VOBX",13,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",14,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",15,0)
 ;            LA7NVAF = flag indicating type of receiving facility (see NVAF^LA7VHLU2)
"RTN","LA7VOBX",16,0)
 ;
"RTN","LA7VOBX",17,0)
 ; Returns LA7OBXSN = current OBX segment sequence number 
"RTN","LA7VOBX",18,0)
 ;         LA7ARRAY = array containing OBX segment
"RTN","LA7VOBX",19,0)
 ;
"RTN","LA7VOBX",20,0)
 N LA7OBX,LA7VAL,LA7X
"RTN","LA7VOBX",21,0)
 ;
"RTN","LA7VOBX",22,0)
 ; No subscript/patient/specimen
"RTN","LA7VOBX",23,0)
 I $G(LRSS)=""!('$G(LRDFN))!('$G(LRIDT)) Q
"RTN","LA7VOBX",24,0)
 ;
"RTN","LA7VOBX",25,0)
 S LA7NVAF=$G(LA7NVAF)
"RTN","LA7VOBX",26,0)
 ;
"RTN","LA7VOBX",27,0)
 ; "CH" subscript
"RTN","LA7VOBX",28,0)
 I LRSS="CH" D CH^LA7VOBX1 Q
"RTN","LA7VOBX",29,0)
 ;
"RTN","LA7VOBX",30,0)
 ; "MI" subscript
"RTN","LA7VOBX",31,0)
 I LRSS="MI" D MI^LA7VOBX3 Q
"RTN","LA7VOBX",32,0)
 ;
"RTN","LA7VOBX",33,0)
 ; "SP" subscript
"RTN","LA7VOBX",34,0)
 I LRSS="SP" D AP^LA7VOBX2 Q
"RTN","LA7VOBX",35,0)
 ;
"RTN","LA7VOBX",36,0)
 ; "CY" subscript
"RTN","LA7VOBX",37,0)
 I LRSS="CY" D AP^LA7VOBX2 Q
"RTN","LA7VOBX",38,0)
 ;
"RTN","LA7VOBX",39,0)
 ; "EM" subscript
"RTN","LA7VOBX",40,0)
 I LRSS="EM" D AP^LA7VOBX2 Q
"RTN","LA7VOBX",41,0)
 ;
"RTN","LA7VOBX",42,0)
 Q
"RTN","LA7VOBX",43,0)
 ;
"RTN","LA7VOBX",44,0)
 ;
"RTN","LA7VOBX",45,0)
OBX1(LA7OBXSN) ; Build OBX-1 sequence - Set ID (sequence number)
"RTN","LA7VOBX",46,0)
 ; Call with LA7OBXSN = sequence number (pass by reference)
"RTN","LA7VOBX",47,0)
 ;
"RTN","LA7VOBX",48,0)
 N LA7Y
"RTN","LA7VOBX",49,0)
 ;
"RTN","LA7VOBX",50,0)
 ; increment sequence number
"RTN","LA7VOBX",51,0)
 S (LA7OBXSN,LA7Y)=$G(LA7OBXSN)+1
"RTN","LA7VOBX",52,0)
 ;
"RTN","LA7VOBX",53,0)
 Q LA7Y
"RTN","LA7VOBX",54,0)
 ;
"RTN","LA7VOBX",55,0)
 ;
"RTN","LA7VOBX",56,0)
OBX2(LA7FILE,LA7FIELD) ; Build OBX-2 sequence - Value type
"RTN","LA7VOBX",57,0)
 ; Call with   LA7FILE = FileMan DD file/subfield number
"RTN","LA7VOBX",58,0)
 ;            LA7FIELD = Fileman DD field number
"RTN","LA7VOBX",59,0)
 ;
"RTN","LA7VOBX",60,0)
 ; Returns      LA7VAL = value type  (HL7 table 0125)
"RTN","LA7VOBX",61,0)
 ;
"RTN","LA7VOBX",62,0)
 N LA7ERR,LA7TYP,LA7VAL
"RTN","LA7VOBX",63,0)
 ;
"RTN","LA7VOBX",64,0)
 D OBX2^LA7VOBXA
"RTN","LA7VOBX",65,0)
 ;
"RTN","LA7VOBX",66,0)
 Q LA7VAL
"RTN","LA7VOBX",67,0)
 ;
"RTN","LA7VOBX",68,0)
 ;
"RTN","LA7VOBX",69,0)
OBX3(LA7NLT,LA7953,LA7ALT,LA7FS,LA7ECH,LA7INTYP) ; Build OBX-3 sequence - Observation identifier field
"RTN","LA7VOBX",70,0)
 ; Call with  LA7NLT = NLT code.
"RTN","LA7VOBX",71,0)
 ;            LA7953 = LOINC code
"RTN","LA7VOBX",72,0)
 ;            LA7ALT = alternate code - local/non-VA (code^text^system^local code^local text^99VAnn)
"RTN","LA7VOBX",73,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",74,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",75,0)
 ;          LA7INTYP = type of interface from 62.48
"RTN","LA7VOBX",76,0)
 ;
"RTN","LA7VOBX",77,0)
 N LA764,LA7I,LA7J,LA7LN,LA7X,LA7Y
"RTN","LA7VOBX",78,0)
 ;
"RTN","LA7VOBX",79,0)
 D OBX3^LA7VOBXA
"RTN","LA7VOBX",80,0)
 ;
"RTN","LA7VOBX",81,0)
 Q LA7Y
"RTN","LA7VOBX",82,0)
 ;
"RTN","LA7VOBX",83,0)
 ;
"RTN","LA7VOBX",84,0)
OBX4(LA7VAL,LA7FS,LA7ECH) ; Build OBX-4 sequence - Observation sub-ID
"RTN","LA7VOBX",85,0)
 ; Call with  LA7VAL = value of the observation
"RTN","LA7VOBX",86,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",87,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",88,0)
 ;
"RTN","LA7VOBX",89,0)
 ; Returns LA7Y = Observation sub-ID checked for escape encoding
"RTN","LA7VOBX",90,0)
 ;
"RTN","LA7VOBX",91,0)
 N LA7Y
"RTN","LA7VOBX",92,0)
 ;
"RTN","LA7VOBX",93,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VOBX",94,0)
 ;
"RTN","LA7VOBX",95,0)
 Q LA7Y
"RTN","LA7VOBX",96,0)
 ;
"RTN","LA7VOBX",97,0)
 ;
"RTN","LA7VOBX",98,0)
OBX5(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value
"RTN","LA7VOBX",99,0)
 ; Call with  LA7VAL = value of the observation
"RTN","LA7VOBX",100,0)
 ;           LA7OBX2 = value type
"RTN","LA7VOBX",101,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",102,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",103,0)
 ;
"RTN","LA7VOBX",104,0)
 N LA7Y
"RTN","LA7VOBX",105,0)
 ;
"RTN","LA7VOBX",106,0)
 D OBX5^LA7VOBXA
"RTN","LA7VOBX",107,0)
 ;
"RTN","LA7VOBX",108,0)
 Q LA7Y
"RTN","LA7VOBX",109,0)
 ;
"RTN","LA7VOBX",110,0)
 ;
"RTN","LA7VOBX",111,0)
OBX5M(LA7FN,LA7IENS,LA7FLD,LA7WP,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value - multi-line textual result
"RTN","LA7VOBX",112,0)
 ; Call with LA7FN = File number or subfile
"RTN","LA7VOBX",113,0)
 ;         LA7IENS = Standard FileMan IENS indicating internal entry numbers
"RTN","LA7VOBX",114,0)
 ;          LA7FLD = Field number
"RTN","LA7VOBX",115,0)
 ;           LA7WP = array passed by reference to return text
"RTN","LA7VOBX",116,0)
 ;           LA7FS = HL field separator
"RTN","LA7VOBX",117,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBX",118,0)
 ;
"RTN","LA7VOBX",119,0)
 ; Returns   LA7WP = subscripted array containing text of results
"RTN","LA7VOBX",120,0)
 ;                   LA7WP(0), LA7WP(1), LA7WP(2),...
"RTN","LA7VOBX",121,0)
 ;
"RTN","LA7VOBX",122,0)
 N LA7ERR,LA7I,LA7J,LA7TYPE,LA7X,LA7Y
"RTN","LA7VOBX",123,0)
 ;
"RTN","LA7VOBX",124,0)
 D OBX5M^LA7VOBXA
"RTN","LA7VOBX",125,0)
 ;
"RTN","LA7VOBX",126,0)
 Q
"RTN","LA7VOBX",127,0)
 ;
"RTN","LA7VOBX",128,0)
 ;
"RTN","LA7VOBX",129,0)
OBX5R(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence with repetition - Observation value
"RTN","LA7VOBX",130,0)
 ; Call with  LA7VAL = array passed by reference
"RTN","LA7VOBX",131,0)
 ;           LA7OBX2 = value type
"RTN","LA7VOBX",132,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",133,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",134,0)
 ;
"RTN","LA7VOBX",135,0)
 N LA7I,LA7Y
"RTN","LA7VOBX",136,0)
 ;
"RTN","LA7VOBX",137,0)
 D OBX5R^LA7VOBXA
"RTN","LA7VOBX",138,0)
 ;
"RTN","LA7VOBX",139,0)
 Q LA7Y
"RTN","LA7VOBX",140,0)
 ;
"RTN","LA7VOBX",141,0)
 ;
"RTN","LA7VOBX",142,0)
OBX6(LA7VAL,LA764061,LA7FS,LA7ECH,LA7INTYP) ; Build OBX-6 sequence - Units
"RTN","LA7VOBX",143,0)
 ; Call with   LA7VAL = Units if in external format
"RTN","LA7VOBX",144,0)
 ;           LA764061 = ien of units in #64.061
"RTN","LA7VOBX",145,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",146,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",147,0)
 ;           LA7INTYP = type of interface from 62.48
"RTN","LA7VOBX",148,0)
 ; Returns units
"RTN","LA7VOBX",149,0)
 ;
"RTN","LA7VOBX",150,0)
 N LA7Y
"RTN","LA7VOBX",151,0)
 ;
"RTN","LA7VOBX",152,0)
 D OBX6^LA7VOBXA
"RTN","LA7VOBX",153,0)
 ;
"RTN","LA7VOBX",154,0)
 Q LA7Y
"RTN","LA7VOBX",155,0)
 ;
"RTN","LA7VOBX",156,0)
 ;
"RTN","LA7VOBX",157,0)
OBX7(LA7LOW,LA7HIGH,LA7FS,LA7ECH) ; Build OBX-7 sequence - Reference range
"RTN","LA7VOBX",158,0)
 ; Call with  LA7LOW = lower limit
"RTN","LA7VOBX",159,0)
 ;           LA7HIGH = upper limit
"RTN","LA7VOBX",160,0)
 ;             LA7FS = HL field separator
"RTN","LA7VOBX",161,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VOBX",162,0)
 ; Returns reference range
"RTN","LA7VOBX",163,0)
 ;
"RTN","LA7VOBX",164,0)
 N LA7Y
"RTN","LA7VOBX",165,0)
 ;
"RTN","LA7VOBX",166,0)
 D OBX7^LA7VOBXA
"RTN","LA7VOBX",167,0)
 ;
"RTN","LA7VOBX",168,0)
 Q LA7Y
"RTN","LA7VOBX",169,0)
 ;
"RTN","LA7VOBX",170,0)
 ;
"RTN","LA7VOBX",171,0)
OBX8(LA7FLAG) ; Build OBX-8 sequence - Abnormal flags
"RTN","LA7VOBX",172,0)
 ; Call with LA7FLAG = DHCP Lab normalcy flag
"RTN","LA7VOBX",173,0)
 ; Returns abnormal flags based on HL7 table 0078
"RTN","LA7VOBX",174,0)
 ;
"RTN","LA7VOBX",175,0)
 N LA7Y
"RTN","LA7VOBX",176,0)
 ;
"RTN","LA7VOBX",177,0)
 S LA7Y=$TR(LA7FLAG,"*",$E(LA7FLAG,1)) ; abnormal flag
"RTN","LA7VOBX",178,0)
 Q LA7Y
"RTN","LA7VOBX",179,0)
 ;
"RTN","LA7VOBX",180,0)
 ;
"RTN","LA7VOBX",181,0)
OBX11(LA7FLAG) ; Build OBX-11 sequence - Observation result status
"RTN","LA7VOBX",182,0)
 ; Call with LA7FLAG = DHCP Lab status flag
"RTN","LA7VOBX",183,0)
 ; Returns result status based on HL7 table 0085
"RTN","LA7VOBX",184,0)
 ;
"RTN","LA7VOBX",185,0)
 N LA7Y
"RTN","LA7VOBX",186,0)
 ;
"RTN","LA7VOBX",187,0)
 S LA7Y=""
"RTN","LA7VOBX",188,0)
 ;
"RTN","LA7VOBX",189,0)
 I LA7FLAG="canc" S LA7Y="X"
"RTN","LA7VOBX",190,0)
 I LA7FLAG="comment" S LA7Y="F"
"RTN","LA7VOBX",191,0)
 I LA7FLAG="pending" S LA7Y="I"
"RTN","LA7VOBX",192,0)
 I LA7FLAG="F" S LA7Y="F"
"RTN","LA7VOBX",193,0)
 I LA7FLAG="P" S LA7Y="P"
"RTN","LA7VOBX",194,0)
 I LA7FLAG="A" S LA7Y="C"
"RTN","LA7VOBX",195,0)
 I LA7FLAG="C" S LA7Y="C"
"RTN","LA7VOBX",196,0)
 I LA7FLAG="W" S LA7Y="W"
"RTN","LA7VOBX",197,0)
 ;
"RTN","LA7VOBX",198,0)
 Q LA7Y
"RTN","LA7VOBX",199,0)
 ;
"RTN","LA7VOBX",200,0)
 ;
"RTN","LA7VOBX",201,0)
OBX13(LA7VAL,LA7SRC,LA7FS,LA7ECH) ; Build OBX-13 sequence - User defined access checks
"RTN","LA7VOBX",202,0)
 ; Call with LA7VAL = access screen to expand
"RTN","LA7VOBX",203,0)
 ;           LA7SRC = source of access screen
"RTN","LA7VOBX",204,0)
 ;            LA7FS = HL field separator
"RTN","LA7VOBX",205,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBX",206,0)
 ;
"RTN","LA7VOBX",207,0)
 ; Returns     LA7Y = access screen text or VUID
"RTN","LA7VOBX",208,0)
 ;
"RTN","LA7VOBX",209,0)
 N LA7Y
"RTN","LA7VOBX",210,0)
 S LA7Y=""
"RTN","LA7VOBX",211,0)
 ;
"RTN","LA7VOBX",212,0)
 ; Expanding antibiotic susceptibility display screen
"RTN","LA7VOBX",213,0)
 ; Send VUID instead of text for this code to HDR
"RTN","LA7VOBX",214,0)
 I $E(LA7SRC,1,3)="MIS"  D
"RTN","LA7VOBX",215,0)
 . I LA7SRC="MIS-HDR",$T(LOSVUID^HDISVAP)'="" S LA7Y=$$LOSVUID^HDISVAP(LA7VAL) Q
"RTN","LA7VOBX",216,0)
 . S LA7Y=$S(LA7VAL="A":"ALWAYS DISPLAY",LA7VAL="N":"NEVER DISPLAY",LA7VAL="R":"RESTRICT DISPLAY",1:"")
"RTN","LA7VOBX",217,0)
 ;
"RTN","LA7VOBX",218,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBX",219,0)
 ;
"RTN","LA7VOBX",220,0)
 Q LA7Y
"RTN","LA7VOBX",221,0)
 ;
"RTN","LA7VOBX",222,0)
 ;
"RTN","LA7VOBX",223,0)
OBX14(LA7DT) ; Build OBX-14 sequence - date/time of observation
"RTN","LA7VOBX",224,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBX",225,0)
 ; Returns OBX-14 sequence
"RTN","LA7VOBX",226,0)
 ;
"RTN","LA7VOBX",227,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBX",228,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBX",229,0)
 ;
"RTN","LA7VOBX",230,0)
 ;
"RTN","LA7VOBX",231,0)
OBX15(LA74,LA7FS,LA7ECH) ; Build OBX-15 sequence - Producer's ID field
"RTN","LA7VOBX",232,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VOBX",233,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VOBX",234,0)
 ;            LA7FS = HL field separator
"RTN","LA7VOBX",235,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VOBX",236,0)
 ;
"RTN","LA7VOBX",237,0)
 ; Returns facility that performed the testing (ID^text^99VA4^CLIA id^^99VACLIA)
"RTN","LA7VOBX",238,0)
 ;
"RTN","LA7VOBX",239,0)
 N LA7X,LA7Y
"RTN","LA7VOBX",240,0)
 S LA7Y=$$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)
"RTN","LA7VOBX",241,0)
 ;
"RTN","LA7VOBX",242,0)
 ; Include CLIA identifier if found.
"RTN","LA7VOBX",243,0)
 S LA7X=$$ID^XUAF4("CLIA",LA74)
"RTN","LA7VOBX",244,0)
 I LA7X'="" S $P(LA7Y,$E(LA7ECH),4)=LA7X,$P(LA7Y,$E(LA7ECH),6)="99VACLIA"
"RTN","LA7VOBX",245,0)
 ;
"RTN","LA7VOBX",246,0)
 Q LA7Y
"RTN","LA7VOBX",247,0)
 ;
"RTN","LA7VOBX",248,0)
 ;
"RTN","LA7VOBX",249,0)
OBX16(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBX-16 sequence - Responsible observer field
"RTN","LA7VOBX",250,0)
 ; Call with   LA7DUZ = DUZ of verifying user
"RTN","LA7VOBX",251,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBX",252,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",253,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",254,0)
 ;           
"RTN","LA7VOBX",255,0)
 ; Returns OBX-16 sequence
"RTN","LA7VOBX",256,0)
 ;
"RTN","LA7VOBX",257,0)
 Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,0,1)
"RTN","LA7VOBX",258,0)
 ;
"RTN","LA7VOBX",259,0)
 ;
"RTN","LA7VOBX",260,0)
OBX17(LA7VAL,LA7NLT,LA7FS,LA7ECH) ; Build OBX-17 sequence - Observation method field
"RTN","LA7VOBX",261,0)
 ; Call with   LA7VAL = WKLD SUFFIX CODES #64.2 with leading decimal
"RTN","LA7VOBX",262,0)
 ;             LA7NLT = Result NLT code
"RTN","LA7VOBX",263,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",264,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",265,0)
 ;           
"RTN","LA7VOBX",266,0)
 ; Returns       LA7Y = OBX-17 sequence
"RTN","LA7VOBX",267,0)
 ;
"RTN","LA7VOBX",268,0)
 N LA764,LA7X,LA7Y,LA7Z
"RTN","LA7VOBX",269,0)
 ;
"RTN","LA7VOBX",270,0)
 D OBX17^LA7VOBXA
"RTN","LA7VOBX",271,0)
 ;
"RTN","LA7VOBX",272,0)
 Q LA7Y
"RTN","LA7VOBX",273,0)
 ;
"RTN","LA7VOBX",274,0)
 ;
"RTN","LA7VOBX",275,0)
OBX18(LA7VAL,LA7FS,LA7ECH) ; Build OBX-18 sequence - Equipment entity identifier field
"RTN","LA7VOBX",276,0)
 ; Call with   LA7VAL = Equipment entity identifier
"RTN","LA7VOBX",277,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",278,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",279,0)
 ;           
"RTN","LA7VOBX",280,0)
 ; Returns       LA7X = OBX-18 sequence
"RTN","LA7VOBX",281,0)
 ;
"RTN","LA7VOBX",282,0)
 N LA7I,LA7J,LA7X,LA7Y
"RTN","LA7VOBX",283,0)
 ;
"RTN","LA7VOBX",284,0)
 D OBX18^LA7VOBXA
"RTN","LA7VOBX",285,0)
 ;
"RTN","LA7VOBX",286,0)
 Q LA7X
"RTN","LA7VOBX",287,0)
 ;
"RTN","LA7VOBX",288,0)
 ;
"RTN","LA7VOBX",289,0)
OBX19(LA7DT) ; Build OBX-19 sequence - date/time of the analysis
"RTN","LA7VOBX",290,0)
 ; Call with LA7DT = FileMan date/time
"RTN","LA7VOBX",291,0)
 ; Returns OBX-19 sequence
"RTN","LA7VOBX",292,0)
 ;
"RTN","LA7VOBX",293,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VOBX",294,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VOBX",295,0)
 ;
"RTN","LA7VOBX",296,0)
 ;
"RTN","LA7VOBX",297,0)
OBX23(LA7FN,LA7DA,LA7FS,LA7ECH) ; Build OBX-23 sequence - Performing organization name
"RTN","LA7VOBX",298,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VOBX",299,0)
 ;                   Presently #4 (INSTITUTION)
"RTN","LA7VOBX",300,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VOBX",301,0)
 ;           LA7FS = HL field separator
"RTN","LA7VOBX",302,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBX",303,0)
 ;           
"RTN","LA7VOBX",304,0)
 ; Returns OBX-23 sequence
"RTN","LA7VOBX",305,0)
 ;
"RTN","LA7VOBX",306,0)
 Q $$XON^LA7VHLU4(LA7FN,LA7DA,1,LA7FS,LA7ECH)
"RTN","LA7VOBX",307,0)
 ;
"RTN","LA7VOBX",308,0)
 ;
"RTN","LA7VOBX",309,0)
OBX24(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH) ; Build OBX-24 sequence - Performing organization address
"RTN","LA7VOBX",310,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VOBX",311,0)
 ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)
"RTN","LA7VOBX",312,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VOBX",313,0)
 ;           LA7DT = As of date in FileMan format
"RTN","LA7VOBX",314,0)
 ;           LA7FS = HL field separator
"RTN","LA7VOBX",315,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VOBX",316,0)
 ;           
"RTN","LA7VOBX",317,0)
 ; Returns OBX-24 sequence
"RTN","LA7VOBX",318,0)
 ;
"RTN","LA7VOBX",319,0)
 Q $$XAD^LA7VHLU4(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VOBX",320,0)
 ;
"RTN","LA7VOBX",321,0)
 ;
"RTN","LA7VOBX",322,0)
OBX25(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBX-25 sequence - Performing organization medical director
"RTN","LA7VOBX",323,0)
 ; Call with   LA7DUZ = DUZ of medical director
"RTN","LA7VOBX",324,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VOBX",325,0)
 ;              LA7FS = HL field separator
"RTN","LA7VOBX",326,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VOBX",327,0)
 ;           
"RTN","LA7VOBX",328,0)
 ; Returns OBX-25 sequence
"RTN","LA7VOBX",329,0)
 ;
"RTN","LA7VOBX",330,0)
 Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1")
0^110^B29612848
"RTN","LA7VOBX1",1,0)
LA7VOBX1 ;DALOI/JMC - LAB OBX Segment message builder (CH subscript) cont'd ;10/06/11  16:54
"RTN","LA7VOBX1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,63,64,71,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBX1",3,0)
 ;
"RTN","LA7VOBX1",4,0)
CH ; Observation/Result segment for "CH" subscript results.
"RTN","LA7VOBX1",5,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX1",6,0)
 ;
"RTN","LA7VOBX1",7,0)
 N LA760,LA76304,LA7ALT,LA7DDERR,LA7DIV,LA7I,LA7RS,LA7X,LA7Y,X
"RTN","LA7VOBX1",8,0)
 ;
"RTN","LA7VOBX1",9,0)
 ; "CH" subscript requires a dataname
"RTN","LA7VOBX1",10,0)
 I '$G(LRSB) Q
"RTN","LA7VOBX1",11,0)
 ;
"RTN","LA7VOBX1",12,0)
 ; get result node from LR global.
"RTN","LA7VOBX1",13,0)
 S LA76304(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7VOBX1",14,0)
 S LA7RS=$P(LRSB,"^",2),LRSB=$P(LRSB,"^")
"RTN","LA7VOBX1",15,0)
 S LA7VAL=$G(^LR(LRDFN,LRSS,LRIDT,LRSB))
"RTN","LA7VOBX1",16,0)
 ; If previous results have been corrected then send corrected status
"RTN","LA7VOBX1",17,0)
 I LA7RS="",$P(LA7VAL,"^",10)=2 S LA7RS="C"
"RTN","LA7VOBX1",18,0)
 ;
"RTN","LA7VOBX1",19,0)
 ; Check if test is OK to send - (O)utput or (B)oth
"RTN","LA7VOBX1",20,0)
 S LA7X=$P(LA7VAL,"^",12)
"RTN","LA7VOBX1",21,0)
 I LA7X]"","BO"'[LA7X Q
"RTN","LA7VOBX1",22,0)
 I LA7X="",'$$OKTOSND^LA7VHLU1(LRSS,LRSB,+$P($P(LA7VAL,"^",3),"!",7)) Q
"RTN","LA7VOBX1",23,0)
 ;
"RTN","LA7VOBX1",24,0)
 ; If no result NLT or LOINC try to determine from file #60
"RTN","LA7VOBX1",25,0)
 S LA7X=$P(LA7VAL,"^",3)
"RTN","LA7VOBX1",26,0)
 I $P(LA7X,"!",2)=""!($P(LA7X,"!",3)="") S $P(LA7VAL,"^",3)=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7X,$P(LA76304(0),"^",5))
"RTN","LA7VOBX1",27,0)
 ; No result NLT code - log error
"RTN","LA7VOBX1",28,0)
 I $P($P(LA7VAL,"^",3),"!",2)="" D
"RTN","LA7VOBX1",29,0)
 . N LA7X
"RTN","LA7VOBX1",30,0)
 . S LA7X="["_LRSB_"]"_$$GET1^DID(63.04,LRSB,"","LABEL")
"RTN","LA7VOBX1",31,0)
 . D CREATE^LA7LOG(36)
"RTN","LA7VOBX1",32,0)
 ;
"RTN","LA7VOBX1",33,0)
 ; Send back an OBX if individual test from a panel was NP'ed - ccr_6164n
"RTN","LA7VOBX1",34,0)
 I $P(LA7VAL,"^")="",$G(LA7VNP) S $P(LA7VAL,"^")="canc"
"RTN","LA7VOBX1",35,0)
 ;
"RTN","LA7VOBX1",36,0)
 ; something missing - No result.
"RTN","LA7VOBX1",37,0)
 I $P(LA7VAL,"^")="" Q
"RTN","LA7VOBX1",38,0)
 ;
"RTN","LA7VOBX1",39,0)
 ; Check for missing units/reference ranges
"RTN","LA7VOBX1",40,0)
 D CHECK
"RTN","LA7VOBX1",41,0)
 ;
"RTN","LA7VOBX1",42,0)
 ; Initialize OBX segment
"RTN","LA7VOBX1",43,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX1",44,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX1",45,0)
 ;
"RTN","LA7VOBX1",46,0)
 ; Value type
"RTN","LA7VOBX1",47,0)
 ; If result is "cancel", "comment" or "pending" then data type is ST - string data
"RTN","LA7VOBX1",48,0)
 S LA7X=$S("canccommentpending"[$P(LA7VAL,"^"):1,1:0)
"RTN","LA7VOBX1",49,0)
 I LA7X,LA7INTYP'=30 S LA7OBX(2)="ST"
"RTN","LA7VOBX1",50,0)
 E  S LA7OBX(2)=$$OBX2^LA7VOBX(63.04,LRSB)
"RTN","LA7VOBX1",51,0)
 I LA7OBX(2)'="NM",$P(LA7VAL,"^")?1(1.N,.N1"."1.N) S LA7OBX(2)="NM"
"RTN","LA7VOBX1",52,0)
 ;
"RTN","LA7VOBX1",53,0)
 ; Observation identifer
"RTN","LA7VOBX1",54,0)
 ; build alternate code based on dataname from file #63 in case it's needed
"RTN","LA7VOBX1",55,0)
 S LA7X=$P(LA7VAL,"^",3)
"RTN","LA7VOBX1",56,0)
 S LA7ALT="CH"_LRSB_"^"_$$GET1^DID(63.04,LRSB,"","LABEL")_"^99VA63"
"RTN","LA7VOBX1",57,0)
 I $P(LA7X,"!",7) S LA760=$P(LA7X,"!",7)
"RTN","LA7VOBX1",58,0)
 E  S LA760=+$O(^LAB(60,"C","CH;"_LRSB_";1",0))
"RTN","LA7VOBX1",59,0)
 I LA760 S $P(LA7ALT,"^",4,6)=LA760_"^"_$P(^LAB(60,LA760,0),"^")_"^99VA60"
"RTN","LA7VOBX1",60,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7X,"!",2),$P(LA7X,"!",3),LA7ALT,LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX1",61,0)
 ;
"RTN","LA7VOBX1",62,0)
 ; Build sub-id to aid in linking updates to previous transmissions.
"RTN","LA7VOBX1",63,0)
 S LA7OBX(4)=$$OBX4^LA7VOBX("CH"_LRSB,LA7FS,LA7ECH)
"RTN","LA7VOBX1",64,0)
 ;
"RTN","LA7VOBX1",65,0)
 ; Test value
"RTN","LA7VOBX1",66,0)
 ; If DoD and "canc" then report "PL Cancelled" per Lab Interop ICD.
"RTN","LA7VOBX1",67,0)
 S LA7X=$P(LA7VAL,"^") K LA7DDERR
"RTN","LA7VOBX1",68,0)
 I LA7X'="canc",$$GET1^DID(63.04,LRSB,"","TYPE","","LA7DDERR")="SET" D
"RTN","LA7VOBX1",69,0)
 . S LA7X=$$EXTERNAL^DILFD(63.04,LRSB,"",LA7X)
"RTN","LA7VOBX1",70,0)
 . I LA7X="" S LA7X=$P(LA7VAL,"^")
"RTN","LA7VOBX1",71,0)
 I $G(LA7NVAF)=1,LA7X="canc" S LA7X="PL Cancelled"
"RTN","LA7VOBX1",72,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7X,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX1",73,0)
 ; Log exception when data dictionary appears corrupt.
"RTN","LA7VOBX1",74,0)
 I $D(LA7DDERR) D CREATE^LA7LOG(121) K LA7DDERR
"RTN","LA7VOBX1",75,0)
 ;
"RTN","LA7VOBX1",76,0)
 ; Suppress "pending" results when sending to HDR
"RTN","LA7VOBX1",77,0)
 I LA7INTYP=30,$P(LA7VAL,"^")="pending" S LA7OBX(2)="",LA7OBX(5)=""
"RTN","LA7VOBX1",78,0)
 ;
"RTN","LA7VOBX1",79,0)
 ; Units
"RTN","LA7VOBX1",80,0)
 S LA7X=$P(LA7VAL,"^",5)
"RTN","LA7VOBX1",81,0)
 S LA7OBX(6)=$$OBX6^LA7VOBX($P(LA7X,"!",7),"",LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX1",82,0)
 ;
"RTN","LA7VOBX1",83,0)
 ; Reference range - use therapeutic low/high if present.
"RTN","LA7VOBX1",84,0)
 K LA7Y
"RTN","LA7VOBX1",85,0)
 I $P(LA7X,"!",11)="",$P(LA7X,"!",12)="" D
"RTN","LA7VOBX1",86,0)
 . S LA7Y("LOW")=$P(LA7X,"!",2)
"RTN","LA7VOBX1",87,0)
 . S LA7Y("HIGH")=$P(LA7X,"!",3)
"RTN","LA7VOBX1",88,0)
 E  D
"RTN","LA7VOBX1",89,0)
 . S LA7Y("LOW")=$P(LA7X,"!",11)
"RTN","LA7VOBX1",90,0)
 . S LA7Y("HIGH")=$P(LA7X,"!",12)
"RTN","LA7VOBX1",91,0)
 ;
"RTN","LA7VOBX1",92,0)
 S LA7OBX(7)=$$OBX7^LA7VOBX(LA7Y("LOW"),LA7Y("HIGH"),LA7FS,LA7ECH)
"RTN","LA7VOBX1",93,0)
 K LA7Y
"RTN","LA7VOBX1",94,0)
 ;
"RTN","LA7VOBX1",95,0)
 ; Abnormal flags
"RTN","LA7VOBX1",96,0)
 S LA7OBX(8)=$$OBX8^LA7VOBX($P(LA7VAL,"^",2))
"RTN","LA7VOBX1",97,0)
 ;
"RTN","LA7VOBX1",98,0)
 ; "P"artial or "F"inal results
"RTN","LA7VOBX1",99,0)
 S LA7X=$S("canccommentpending"[$P(LA7VAL,"^"):$P(LA7VAL,"^"),1:"F")
"RTN","LA7VOBX1",100,0)
 I LA7RS="C" D
"RTN","LA7VOBX1",101,0)
 . S LA7X=LA7RS
"RTN","LA7VOBX1",102,0)
 . I LA7INTYP=30,$P(LA7VAL,"^")="pending" S LA7X="W",LA7OBX(5)=""""""
"RTN","LA7VOBX1",103,0)
 S LA7OBX(11)=$$OBX11^LA7VOBX(LA7X)
"RTN","LA7VOBX1",104,0)
 I LA7INTYP=30,$P(LA7VAL,"^")="canc",LA7OBX(11)="X" S LA7OBX(2)="",LA7OBX(5)=""
"RTN","LA7VOBX1",105,0)
 ;
"RTN","LA7VOBX1",106,0)
 ; Observation date/time - collection date/time per HL7 standard
"RTN","LA7VOBX1",107,0)
 S LA7X=$P(LA76304(0),"^") S:$P(LA76304(0),"^",2) LA7X=$P(LA7X,".")
"RTN","LA7VOBX1",108,0)
 I LA7X S LA7OBX(14)=$$OBX14^LA7VOBX(LA7X)
"RTN","LA7VOBX1",109,0)
 ;
"RTN","LA7VOBX1",110,0)
 S LA7DIV=$P(LA7VAL,"^",9)
"RTN","LA7VOBX1",111,0)
 I LA7DIV="" S LA7DIV=$P($G(^LR(LRDFN,LRSS,LRIDT,"RF")),"^")
"RTN","LA7VOBX1",112,0)
 I LA7DIV="",$$DIV4^XUSER(.LA7DIV,$P(LA7VAL,"^",4)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX1",113,0)
 ;
"RTN","LA7VOBX1",114,0)
 ; Facility that performed the testing
"RTN","LA7VOBX1",115,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1",116,0)
 ;
"RTN","LA7VOBX1",117,0)
 ; Person that verified the test
"RTN","LA7VOBX1",118,0)
 S LA7OBX(16)=$$OBX16^LA7VOBX($P(LA7VAL,"^",4),LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1",119,0)
 ;
"RTN","LA7VOBX1",120,0)
 ; Observation method - workkload suffix (LA7X) and result NLT code (LA7Y)
"RTN","LA7VOBX1",121,0)
 S LA7X=$P($P(LA7VAL,"^",3),"!",4),LA7Y=$P($P(LA7VAL,"^",3),"!",2)
"RTN","LA7VOBX1",122,0)
 I LA7X'=""!(LA7Y="") S LA7OBX(17)=$$OBX17^LA7VOBX(LA7X,LA7Y,LA7FS,LA7ECH)
"RTN","LA7VOBX1",123,0)
 ;
"RTN","LA7VOBX1",124,0)
 ; Equipment entity identifier
"RTN","LA7VOBX1",125,0)
 I $P(LA7VAL,"^",11)'="" S LA7OBX(18)=$$OBX18^LA7VOBX($P(LA7VAL,"^",11),LA7FS,LA7ECH)
"RTN","LA7VOBX1",126,0)
 ;
"RTN","LA7VOBX1",127,0)
 ; Date/time of the analysis
"RTN","LA7VOBX1",128,0)
 I $P(LA7VAL,"^",6)'="" S LA7OBX(19)=$$OBX19^LA7VOBX($P(LA7VAL,"^",6))
"RTN","LA7VOBX1",129,0)
 ;
"RTN","LA7VOBX1",130,0)
 ; Performing organization name/address
"RTN","LA7VOBX1",131,0)
 I LA7DIV'="" D
"RTN","LA7VOBX1",132,0)
 . N LA7DT
"RTN","LA7VOBX1",133,0)
 . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX1",134,0)
 . S LA7DT=$S($P(LA7VAL,"^",6):$P(LA7VAL,"^",6),$P(LA76304(0),"^",3):$P(LA76304(0),"^",3),1:$$NOW^XLFDT)
"RTN","LA7VOBX1",135,0)
 . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VOBX1",136,0)
 ;
"RTN","LA7VOBX1",137,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX1",138,0)
 ;
"RTN","LA7VOBX1",139,0)
 Q
"RTN","LA7VOBX1",140,0)
 ;
"RTN","LA7VOBX1",141,0)
 ;
"RTN","LA7VOBX1",142,0)
CHECK ; Check for missing units/reference ranges
"RTN","LA7VOBX1",143,0)
 ;
"RTN","LA7VOBX1",144,0)
 N LA7I,LA7X,LA7FLAG
"RTN","LA7VOBX1",145,0)
 S LA7X=$P(LA7VAL,"^",5)
"RTN","LA7VOBX1",146,0)
 ;
"RTN","LA7VOBX1",147,0)
 ; If flag (NPC>1) indicates units/ranges are stored but pieces 5-9 are null then use values from file #60
"RTN","LA7VOBX1",148,0)
 ; - some class III software still does not store this info in file #63 when NPC>1
"RTN","LA7VOBX1",149,0)
 S LA7FLAG=0
"RTN","LA7VOBX1",150,0)
 I $G(^LR(LRDFN,LRSS,LRIDT,"NPC"))>1 D
"RTN","LA7VOBX1",151,0)
 . F LA7I=5:1:9 I $P(LA7VAL,"^",LA7I)'="" S LA7FLAG=1 Q
"RTN","LA7VOBX1",152,0)
 I 'LA7FLAG D BUNR
"RTN","LA7VOBX1",153,0)
 ;
"RTN","LA7VOBX1",154,0)
 ; Evaluate low/high reference ranges in case M code in these fields.
"RTN","LA7VOBX1",155,0)
 S:$G(SEX)="" SEX="M" S:$G(AGE)="" AGE=99
"RTN","LA7VOBX1",156,0)
 F LA7I=2,3,11,12 I $E($P(LA7X,"!",LA7I),1,3)="$S(" D
"RTN","LA7VOBX1",157,0)
 . S @("X="_$P(LA7X,"!",LA7I))
"RTN","LA7VOBX1",158,0)
 . S $P(LA7X,"!",LA7I)=X
"RTN","LA7VOBX1",159,0)
 ;
"RTN","LA7VOBX1",160,0)
 ; Put units/reference ranges back in variable LA7VAL
"RTN","LA7VOBX1",161,0)
 S $P(LA7VAL,"^",5)=LA7X
"RTN","LA7VOBX1",162,0)
 ;
"RTN","LA7VOBX1",163,0)
 Q
"RTN","LA7VOBX1",164,0)
 ;
"RTN","LA7VOBX1",165,0)
 ;
"RTN","LA7VOBX1",166,0)
BUNR ; Build units/normal ranges from file #60
"RTN","LA7VOBX1",167,0)
 ;
"RTN","LA7VOBX1",168,0)
 N LA7Y
"RTN","LA7VOBX1",169,0)
 S LA7Y=$$REFUNIT^LA7VHLU1(LRSB,$P(LA76304(0),"^",5))
"RTN","LA7VOBX1",170,0)
 ;
"RTN","LA7VOBX1",171,0)
 ; Results missing units, use value from file #60
"RTN","LA7VOBX1",172,0)
 I $P(LA7X,"!",7)="" S $P(LA7X,"!",7)=$P(LA7Y,"^",3)
"RTN","LA7VOBX1",173,0)
 ;
"RTN","LA7VOBX1",174,0)
 ; If results missing reference ranges, use values from file #60.
"RTN","LA7VOBX1",175,0)
 I $P(LA7X,"!",2)="",$P(LA7X,"!",3)="",$P(LA7X,"!",11)="",$P(LA7X,"!",12)="" D
"RTN","LA7VOBX1",176,0)
 . I $P(LA7X,"!",2)="",$P(LA7X,"!",3)="" D
"RTN","LA7VOBX1",177,0)
 . . S $P(LA7X,"!",2)=$P(LA7Y,"^")
"RTN","LA7VOBX1",178,0)
 . . S $P(LA7X,"!",3)=$P(LA7Y,"^",2)
"RTN","LA7VOBX1",179,0)
 . I $P(LA7X,"!",11)="",$P(LA7X,"!",12)="" D
"RTN","LA7VOBX1",180,0)
 . . S $P(LA7X,"!",11)=$P(LA7Y,"^",6)
"RTN","LA7VOBX1",181,0)
 . . S $P(LA7X,"!",12)=$P(LA7Y,"^",7)
"RTN","LA7VOBX1",182,0)
 Q
"RTN","LA7VOBX2")
0^3^B34855807
"RTN","LA7VOBX2",1,0)
LA7VOBX2 ;DALOI/JMC - LAB OBX Segment message builder (AP subscripts) cont'd ;10/20/10  10:21
"RTN","LA7VOBX2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBX2",3,0)
 ;
"RTN","LA7VOBX2",4,0)
AP ; Build OBX segments for results that are anatomic/surgical pathology subscripts
"RTN","LA7VOBX2",5,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX2",6,0)
 ;
"RTN","LA7VOBX2",7,0)
 ;ZEXCEPT: LA,LA76248,LA7ARRAY,LA7ECH,LA7FS,LA7INTYP,LA7NVAF,LA7OBX,LA7OBXSN,LRDFN,LRIDT,LRSB,LRSS
"RTN","LA7VOBX2",8,0)
 ;
"RTN","LA7VOBX2",9,0)
 N I,LA7953,LA7ACODE,LA7CODE,LA7DIV,LA7IENS,LA7OBX5,LA7OBX5M,LA7NLT,LA7SUB,LA7SUBFL,LA7VP,LA7WP,LA7X,LA7Y
"RTN","LA7VOBX2",10,0)
 ;
"RTN","LA7VOBX2",11,0)
 S (LA7953,LA7DIV,LA7VP)=""
"RTN","LA7VOBX2",12,0)
 ;
"RTN","LA7VOBX2",13,0)
 ; Surgical pathology subscript
"RTN","LA7VOBX2",14,0)
 I LRSS="SP" S LA7SUBFL=63.08
"RTN","LA7VOBX2",15,0)
 ;
"RTN","LA7VOBX2",16,0)
 ; Cytology subscript
"RTN","LA7VOBX2",17,0)
 I LRSS="CY" S LA7SUBFL=63.09
"RTN","LA7VOBX2",18,0)
 ;
"RTN","LA7VOBX2",19,0)
 ; Electron microscopy subscript
"RTN","LA7VOBX2",20,0)
 I LRSS="EM" S LA7SUBFL=63.02
"RTN","LA7VOBX2",21,0)
 ;
"RTN","LA7VOBX2",22,0)
 S LA7IENS=""
"RTN","LA7VOBX2",23,0)
 F I=3:-1:1 I $P(LRIDT,",",I) S LRIDT(I)=$P(LRIDT,",",I),LA7IENS=LA7IENS_LRIDT(I)_","
"RTN","LA7VOBX2",24,0)
 S LA7IENS=LA7IENS_LRDFN_","
"RTN","LA7VOBX2",25,0)
 S LRIDT=$P(LRIDT,",")
"RTN","LA7VOBX2",26,0)
 S LA7SUB(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7VOBX2",27,0)
 ;
"RTN","LA7VOBX2",28,0)
 ; Get default codes
"RTN","LA7VOBX2",29,0)
 S LA7NLT=$G(LA("NLT")),LA7CODE=LA7NLT_"!"
"RTN","LA7VOBX2",30,0)
 S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7CODE,"")
"RTN","LA7VOBX2",31,0)
 ;
"RTN","LA7VOBX2",32,0)
 ; Initialize OBX segment
"RTN","LA7VOBX2",33,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX2",34,0)
 ;
"RTN","LA7VOBX2",35,0)
 ; Value type
"RTN","LA7VOBX2",36,0)
 S LA7X=LA7SUBFL,LA7Y=LRSB
"RTN","LA7VOBX2",37,0)
 I LRSB=1.2 S LA7X=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:""),LA7Y=1
"RTN","LA7VOBX2",38,0)
 I LRSB="10,1.5" S LA7X=$S(LRSS="SP":63.82,LRSS="CY":63.982,LRSS="EM":63.282,1:""),LA7Y=.01
"RTN","LA7VOBX2",39,0)
 I LRSB="10,2",LRSS="SP" S LA7X=63.12,LA7Y=2
"RTN","LA7VOBX2",40,0)
 I LRSB="10,5" S LA7X=$S(LRSS="SP":63.819,LRSS="CY":63.919,LRSS="EM":63.219,1:""),LA7Y=1
"RTN","LA7VOBX2",41,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7X,LA7Y)
"RTN","LA7VOBX2",42,0)
 ;
"RTN","LA7VOBX2",43,0)
 ; Observation identifier
"RTN","LA7VOBX2",44,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7CODE,"!",2),$P(LA7CODE,"!",3),"",LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX2",45,0)
 ;
"RTN","LA7VOBX2",46,0)
 ; Observation sub-ID - create sub-ID for specimens, supplementary reports and special studies
"RTN","LA7VOBX2",47,0)
 D SUBID
"RTN","LA7VOBX2",48,0)
 ;
"RTN","LA7VOBX2",49,0)
 ; Build result field
"RTN","LA7VOBX2",50,0)
 ;  Check for substitute SNOMED CT on topography
"RTN","LA7VOBX2",51,0)
 I $P(LRSB,",")=.012 D
"RTN","LA7VOBX2",52,0)
 . N LA761,LA7J,LA7X,LA7Y,LA7Z,X
"RTN","LA7VOBX2",53,0)
 . S LA7J=1,LA7X=$G(^LR(LRDFN,LRSS,LRIDT,.1,LRIDT(2),0)),LA7Y=""
"RTN","LA7VOBX2",54,0)
 . S LA7Z=$O(^LAHM(62.48,LA76248,"SCT","AC",$P(LA7X,"^",6)_";LAB(61,",""))
"RTN","LA7VOBX2",55,0)
 . S LA761=+$P(LA7X,"^",6)
"RTN","LA7VOBX2",56,0)
 . I LA761 S LA761(0)=$P($G(^LAB(61,LA761,0)),"^")
"RTN","LA7VOBX2",57,0)
 . I $P(LRSB,",",2)="",LA761 D
"RTN","LA7VOBX2",58,0)
 . . S X=$$IEN2SCT^LA7VHLU6(61,LA761,DT,LA7Z)
"RTN","LA7VOBX2",59,0)
 . . I X>0 S $P(LA7Y,"^",LA7J,LA7J+2)=$P(X,"^",1,3),$P(LA7Y,"^",$S(LA7J=1:7,1:8))=$P(X,"^",4),LA7J=4
"RTN","LA7VOBX2",60,0)
 . . S $P(LA7Y,"^",LA7J)=LA761,$P(LA7Y,"^",LA7J+1)=LA761(0),$P(LA7Y,"^",LA7J+2)="99VA61",$P(LA7Y,"^",$S(LA7J=1:7,1:8))="5.2"
"RTN","LA7VOBX2",61,0)
 . . S $P(LA7Y,"^",9)=$P(LA7X,"^")
"RTN","LA7VOBX2",62,0)
 . . S LA7OBX(2)="CWE"
"RTN","LA7VOBX2",63,0)
 . I $P(LRSB,",",2)=.01 S LA7Y=$P(LA7X,"^"),LA7OBX(2)="ST"
"RTN","LA7VOBX2",64,0)
 . I $P(LRSB,",",2)=.06,LA761 D
"RTN","LA7VOBX2",65,0)
 . . S X=$$IEN2SCT^LA7VHLU6(61,LA761,DT,LA7Z)
"RTN","LA7VOBX2",66,0)
 . . I X>0 S $P(LA7Y,"^",LA7J,LA7J+2)=$P(X,"^",1,3),$P(LA7Y,"^",$S(LA7J=1:7,1:8))=$P(X,"^",4),LA7J=4
"RTN","LA7VOBX2",67,0)
 . . S $P(LA7Y,"^",LA7J)=LA761,$P(LA7Y,"^",LA7J+1)=LA761(0),$P(LA7Y,"^",LA7J+2)="99VA61",$P(LA7Y,"^",$S(LA7J=1:7,1:8))="5.2"
"RTN","LA7VOBX2",68,0)
 . . S $P(LA7Y,"^",9)=$P(LA7X,"^")
"RTN","LA7VOBX2",69,0)
 . . S LA7OBX(2)="CWE"
"RTN","LA7VOBX2",70,0)
 . I LA7Y'="" S LA7OBX(5)=$$OBX5^LA7VOBX(LA7Y,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",71,0)
 ;
"RTN","LA7VOBX2",72,0)
 I $P(LRSB,",")'=.012 D
"RTN","LA7VOBX2",73,0)
 . I $P(LRSB,",")=10,LRSB'="10,5" Q
"RTN","LA7VOBX2",74,0)
 . I LA7NVAF=1 D DOD Q
"RTN","LA7VOBX2",75,0)
 . I LRSB=1.2 N LRSB S LA7SUBFL=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:""),LRSB=1
"RTN","LA7VOBX2",76,0)
 . I LRSB="10,5" N LRSB S LA7SUBFL=$S(LRSS="SP":63.819,LRSS="CY":63.919,LRSS="EM":63.219,1:""),LRSB=1
"RTN","LA7VOBX2",77,0)
 . D OBX5M^LA7VOBX(LA7SUBFL,LA7IENS,LRSB,.LA7WP,LA7FS,LA7ECH)
"RTN","LA7VOBX2",78,0)
 . D BUILDSEG^LA7VHLU(.LA7WP,.LA7OBX5M,"")
"RTN","LA7VOBX2",79,0)
 . M LA7OBX(5)=LA7OBX5M
"RTN","LA7VOBX2",80,0)
 ;
"RTN","LA7VOBX2",81,0)
 I $P(LRSB,",")=10,LRSB'="10,5" D
"RTN","LA7VOBX2",82,0)
 . N LA7VAL,LA7SUBFL,LA7X,X
"RTN","LA7VOBX2",83,0)
 . I LRSS="SP",LRSB="10,2" D  Q
"RTN","LA7VOBX2",84,0)
 . . S LA7VAL=$$GET1^DIQ(63.12,LA7IENS,2)
"RTN","LA7VOBX2",85,0)
 . . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",86,0)
 . . S LA7OBX(6)=$$OBX6^LA7VOBX("g","",LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX2",87,0)
 . I LRSB=10 S LA7SUBFL=$S(LRSS="SP":63.12,LRSS="CY":63.912,LRSS="EM":63.212,1:"")
"RTN","LA7VOBX2",88,0)
 . I LRSB="10,1.5" S LA7SUBFL=$S(LRSS="SP":63.82,LRSS="CY":63.982,LRSS="EM":63.282,1:"")
"RTN","LA7VOBX2",89,0)
 . S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01)
"RTN","LA7VOBX2",90,0)
 . S LA7X=$$GET1^DIQ(LA7SUBFL,LA7IENS,".01","I")
"RTN","LA7VOBX2",91,0)
 . I LA7X'="" D
"RTN","LA7VOBX2",92,0)
 . . S X=$$IEN2SCT^LA7VHLU6(61,LA7X,DT,"")
"RTN","LA7VOBX2",93,0)
 . . I X>0 S LA7VAL=$P(X,"^",1,3),$P(LA7VAL,"^",7)=$P(X,"^",4),LA7OBX(2)="CWE"
"RTN","LA7VOBX2",94,0)
 . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",95,0)
 ;
"RTN","LA7VOBX2",96,0)
 ; Don't build this segment if no results/value to send
"RTN","LA7VOBX2",97,0)
 I $G(LA7OBX(5,0))="",$G(LA7OBX(5))="" Q
"RTN","LA7VOBX2",98,0)
 ;
"RTN","LA7VOBX2",99,0)
 ; Build sequence id
"RTN","LA7VOBX2",100,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX2",101,0)
 ;
"RTN","LA7VOBX2",102,0)
 ; "P"artial, "F"inal , "A"mended results
"RTN","LA7VOBX2",103,0)
 ; If not release date then pending
"RTN","LA7VOBX2",104,0)
 I '$P(LA7SUB(0),"^",11) D
"RTN","LA7VOBX2",105,0)
 . I LA7NVAF=1 S LA7OBX(11)="I" Q
"RTN","LA7VOBX2",106,0)
 . S LA7OBX(11)="P"
"RTN","LA7VOBX2",107,0)
 ;
"RTN","LA7VOBX2",108,0)
 ; If release date then check for changes
"RTN","LA7VOBX2",109,0)
 I $P(LA7SUB(0),"^",11) D
"RTN","LA7VOBX2",110,0)
 . I $P(LA7SUB(0),"^",15) S LA7OBX(11)="C"
"RTN","LA7VOBX2",111,0)
 . E  S LA7OBX(11)="F"
"RTN","LA7VOBX2",112,0)
 ;
"RTN","LA7VOBX2",113,0)
 ; Observation date/time - collection date/time per HL7 standard
"RTN","LA7VOBX2",114,0)
 I $P(LA7SUB(0),"^") S LA7OBX(14)=$$OBX14^LA7VOBX($P(LA7SUB(0),"^"))
"RTN","LA7VOBX2",115,0)
 ;
"RTN","LA7VOBX2",116,0)
 S LA7DIV=$P($G(^LR(LRDFN,LRSS,LRIDT,"RF")),"^")
"RTN","LA7VOBX2",117,0)
 I $P(LA7SUB(0),"^",13),$$DIV4^XUSER(.LA7DIV,$P(LA7SUB(0),"^",2)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX2",118,0)
 ;
"RTN","LA7VOBX2",119,0)
 ; Facility that performed the testing
"RTN","LA7VOBX2",120,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX2",121,0)
 ;
"RTN","LA7VOBX2",122,0)
 ; Person that verified the test
"RTN","LA7VOBX2",123,0)
 S LA7VP=$P(LA7SUB(0),"^",13)
"RTN","LA7VOBX2",124,0)
 I LA7VP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VP,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX2",125,0)
 ;
"RTN","LA7VOBX2",126,0)
 ; Performing organization name/address
"RTN","LA7VOBX2",127,0)
 I LA7DIV'="" D
"RTN","LA7VOBX2",128,0)
 . N LA7DT
"RTN","LA7VOBX2",129,0)
 . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX2",130,0)
 . S LA7DT=$S($P(LA7SUB(0),"^",11):$P(LA7SUB(0),"^",11),1:$$NOW^XLFDT)
"RTN","LA7VOBX2",131,0)
 . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VOBX2",132,0)
 ;
"RTN","LA7VOBX2",133,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX2",134,0)
 ;
"RTN","LA7VOBX2",135,0)
 Q
"RTN","LA7VOBX2",136,0)
 ;
"RTN","LA7VOBX2",137,0)
 ;
"RTN","LA7VOBX2",138,0)
SUBID ; Build sub-id for "SP" subscript
"RTN","LA7VOBX2",139,0)
 ; Used to identify supplementary reports, specimens and related special studies performed on those specimens.
"RTN","LA7VOBX2",140,0)
 ;
"RTN","LA7VOBX2",141,0)
 ;ZEXCEPT: LA7ECH,LA7FS,LA7IENS,LA7NVAF,LA7OBX,LRDFN,LRIDT,LRSB,LRSS
"RTN","LA7VOBX2",142,0)
 ;
"RTN","LA7VOBX2",143,0)
 N LA7SUBID
"RTN","LA7VOBX2",144,0)
 ;
"RTN","LA7VOBX2",145,0)
 S LA7SUBID=""
"RTN","LA7VOBX2",146,0)
 ;
"RTN","LA7VOBX2",147,0)
 ; Sub-id's for specimen multiple
"RTN","LA7VOBX2",148,0)
 ; For DoD/CHCS convert internal entry number to alphabetic character (ASCII 64 + #)
"RTN","LA7VOBX2",149,0)
 ;  Create based on relative ien, not absolute. If first entry is ien 2 then sub-id is "A", 2nd entry is "B"
"RTN","LA7VOBX2",150,0)
 I $P(LRSB,",")=.012 D
"RTN","LA7VOBX2",151,0)
 . N I,J
"RTN","LA7VOBX2",152,0)
 . I LA7NVAF'=1 S LA7SUBID="SPEC-"_$P(LA7IENS,",") Q
"RTN","LA7VOBX2",153,0)
 . S I=0,J=1
"RTN","LA7VOBX2",154,0)
 . F  S I=$O(^LR(LRDFN,LRSS,LRIDT,.1,I)) Q:'I!(I=$P(LA7IENS,","))  S J=J+1
"RTN","LA7VOBX2",155,0)
 . S LA7SUBID=$C(64+J)
"RTN","LA7VOBX2",156,0)
 ;
"RTN","LA7VOBX2",157,0)
 ; Sub-id's for supplementary reports
"RTN","LA7VOBX2",158,0)
 I LRSB=1.2 D
"RTN","LA7VOBX2",159,0)
 . I LA7NVAF=1 S LA7SUBID="1-"_$P(LA7IENS,",",2) Q
"RTN","LA7VOBX2",160,0)
 . S LA7SUBID="1-"_$P(LA7IENS,",")
"RTN","LA7VOBX2",161,0)
 ;
"RTN","LA7VOBX2",162,0)
 ; Sub-id's for specimens and special studies
"RTN","LA7VOBX2",163,0)
 I LRSB=10!(LRSB="10,2") S LA7SUBID="10-"_$P(LA7IENS,",")
"RTN","LA7VOBX2",164,0)
 I LRSB="10,1.5"!(LRSB="10,5") S LA7SUBID="10-"_$P(LA7IENS,",",2)_"."_$P(LA7IENS,",")
"RTN","LA7VOBX2",165,0)
 ;
"RTN","LA7VOBX2",166,0)
 I LA7SUBID'="" S LA7OBX(4)=$$OBX4^LA7VOBX(LA7SUBID,LA7FS,LA7ECH)
"RTN","LA7VOBX2",167,0)
 ;
"RTN","LA7VOBX2",168,0)
 Q
"RTN","LA7VOBX2",169,0)
 ;
"RTN","LA7VOBX2",170,0)
 ;
"RTN","LA7VOBX2",171,0)
DOD ; Build OBX segment's to special DoD specifications.
"RTN","LA7VOBX2",172,0)
 ; Send word-processing fields as series of OBX's for DoD.
"RTN","LA7VOBX2",173,0)
 ; DoD cannot handle formatted text (FT) data type.
"RTN","LA7VOBX2",174,0)
 ;
"RTN","LA7VOBX2",175,0)
 ;ZEXCEPT: LA7ECH,LA7FS,LA7OBX,LA7VAL,LRDFN,LRIDT,LRSB,LRSS
"RTN","LA7VOBX2",176,0)
 ;
"RTN","LA7VOBX2",177,0)
 N LA7SB
"RTN","LA7VOBX2",178,0)
 S LA7OBX(2)="ST",LA7SB=$S(LRSB=.013:.2,LRSB=.014:.3,LRSB=.015:.4,LRSB=.016:.5,1:LRSB)
"RTN","LA7VOBX2",179,0)
 I LA7SB'=1.2 S LA7VAL=$G(^LR(LRDFN,LRSS,LRIDT(1),LA7SB,LRIDT(2),0))
"RTN","LA7VOBX2",180,0)
 E  S LA7VAL=$G(^LR(LRDFN,LRSS,LRIDT(1),LA7SB,LRIDT(2),1,LRIDT(3),0))
"RTN","LA7VOBX2",181,0)
 I LA7VAL="" S LA7VAL=" "
"RTN","LA7VOBX2",182,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX2",183,0)
 Q
"RTN","LA7VOBX3")
0^4^B68636771
"RTN","LA7VOBX3",1,0)
LA7VOBX3 ;DALOI/JMC - LAB OBX Segment message builder (MI subscripts) cont'd ;Dec 4, 2008
"RTN","LA7VOBX3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBX3",3,0)
 ;
"RTN","LA7VOBX3",4,0)
 ; Reference to ^DD supported by DBIA #999
"RTN","LA7VOBX3",5,0)
 ;
"RTN","LA7VOBX3",6,0)
MI ; Build OBX segments for results that are microbiology subscript.
"RTN","LA7VOBX3",7,0)
 ; Called by LA7VOBX
"RTN","LA7VOBX3",8,0)
 ;
"RTN","LA7VOBX3",9,0)
 N I,LA761,LA76305,LA7ALT,LA7CODE,LA7DIV,LA7IENS,LA7LOINC,LA7NLT,LA7OBX,LA7PARNT,LA7PLREF,LA7SAVID,LA7SUBFL,LA7VAL,LA7VERP
"RTN","LA7VOBX3",10,0)
 ;
"RTN","LA7VOBX3",11,0)
 I $P(LRIDT,",",2) S LRIDT(2)=$P(LRIDT,",",2),LRIDT(3)=$P(LRIDT,",",3),LRIDT=$P(LRIDT,",")
"RTN","LA7VOBX3",12,0)
 ;
"RTN","LA7VOBX3",13,0)
 I '$D(^LR(LRDFN,LRSS,LRIDT)) Q
"RTN","LA7VOBX3",14,0)
 ;
"RTN","LA7VOBX3",15,0)
 S LA76305(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LA7VOBX3",16,0)
 S (LA7ALT,LA7CODE,LA7ISOID,LA7LOINC,LA7NLT,LA7SAVID,LA7SUBFL,LA7VAL,LA7VERP)=""
"RTN","LA7VOBX3",17,0)
 S LA7NLT=$G(LA("NLT")),LA7CODE=LA7NLT_"!"
"RTN","LA7VOBX3",18,0)
 ;
"RTN","LA7VOBX3",19,0)
 ; Specimen topography
"RTN","LA7VOBX3",20,0)
 S LA761=$P(LA76305(0),"^",5)
"RTN","LA7VOBX3",21,0)
 ; Default codes
"RTN","LA7VOBX3",22,0)
 S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7CODE,LA761)
"RTN","LA7VOBX3",23,0)
 ; Initialize performing lab reference
"RTN","LA7VOBX3",24,0)
 S LA7PLREF=""
"RTN","LA7VOBX3",25,0)
 ;
"RTN","LA7VOBX3",26,0)
 D SEC
"RTN","LA7VOBX3",27,0)
 ; Don't build segment if no value to send
"RTN","LA7VOBX3",28,0)
 I LA7VAL="" Q
"RTN","LA7VOBX3",29,0)
 D GEN^LA7VOBX4
"RTN","LA7VOBX3",30,0)
 Q
"RTN","LA7VOBX3",31,0)
 ;
"RTN","LA7VOBX3",32,0)
 ;
"RTN","LA7VOBX3",33,0)
SEC ; Build section specific fields
"RTN","LA7VOBX3",34,0)
 N LA7X,LA7Y
"RTN","LA7VOBX3",35,0)
 ;
"RTN","LA7VOBX3",36,0)
 ; Bacteriology report
"RTN","LA7VOBX3",37,0)
 I $P(LRSB,",")=11 D  Q
"RTN","LA7VOBX3",38,0)
 . N LA7ERR
"RTN","LA7VOBX3",39,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",40,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",41,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",42,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,13)
"RTN","LA7VOBX3",43,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",44,0)
 . S LA7VAL=$$GET1^DIQ(63.33,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",45,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.33,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",46,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",1"
"RTN","LA7VOBX3",47,0)
 ;
"RTN","LA7VOBX3",48,0)
 ; Urine screen
"RTN","LA7VOBX3",49,0)
 I LRSB=11.57 D  Q
"RTN","LA7VOBX3",50,0)
 . N LA7ERR
"RTN","LA7VOBX3",51,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",52,0)
 . S LA7VERP=$P(LA76305(1),"^",3),LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",53,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.57)
"RTN","LA7VOBX3",54,0)
 . S LA7IENS=LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",55,0)
 . S LA7VAL=$$GET1^DIQ(63.29,LA7IENS,11.57,"","LA7ERR")
"RTN","LA7VOBX3",56,0)
 . S LA7X=$P(^LR(LRDFN,LRSS,LRIDT,1),"^",6)
"RTN","LA7VOBX3",57,0)
 . S LA7Y=$S(LA7X="P":10828004,LA7X="N":260385009,1:"")
"RTN","LA7VOBX3",58,0)
 . I LA7Y S LA7X=LA7VAL D MTSCT^LA7VOBX4
"RTN","LA7VOBX3",59,0)
 . S LA7Y="MI-"_LRSB_"^"_$$GET1^DID(63.05,11.57,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",60,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",61,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",1;6"
"RTN","LA7VOBX3",62,0)
 ;
"RTN","LA7VOBX3",63,0)
 ; Sputum Screen
"RTN","LA7VOBX3",64,0)
 I LRSB=11.58 D  Q
"RTN","LA7VOBX3",65,0)
 . N LA7ERR
"RTN","LA7VOBX3",66,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",67,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",68,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",69,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.58)
"RTN","LA7VOBX3",70,0)
 . S LA7VAL=$P(^LR(LRDFN,LRSS,LRIDT,1),"^",5)
"RTN","LA7VOBX3",71,0)
 . S LA7Y="MI-"_LRSB_"^"_$$GET1^DID(63.05,11.58,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",72,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",73,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",1;5"
"RTN","LA7VOBX3",74,0)
 ;
"RTN","LA7VOBX3",75,0)
 ; Gram stain
"RTN","LA7VOBX3",76,0)
 I LRSB=11.6 D  Q
"RTN","LA7VOBX3",77,0)
 . N LA7ERR
"RTN","LA7VOBX3",78,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",79,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",80,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",81,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.6)
"RTN","LA7VOBX3",82,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",83,0)
 . S LA7VAL=$$GET1^DIQ(63.29,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",84,0)
 . S LA7Y="MI-"_LRSB_"^"_$$GET1^DID(63.29,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",85,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",86,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",2,"_LRIDT(2)_",0"
"RTN","LA7VOBX3",87,0)
 ;
"RTN","LA7VOBX3",88,0)
 ; Micro organism
"RTN","LA7VOBX3",89,0)
 I $P(LRSB,",")=12 D  Q
"RTN","LA7VOBX3",90,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",91,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",92,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",93,0)
 . S LA7SUBFL=63.3
"RTN","LA7VOBX3",94,0)
 . ; Working on colony count
"RTN","LA7VOBX3",95,0)
 . I $P(LRSB,",",2)=1 D CC^LA7VOBX4 Q
"RTN","LA7VOBX3",96,0)
 . ; Working on organism
"RTN","LA7VOBX3",97,0)
 . I $G(LRIDT(3))="" D ORG^LA7VOBX4 Q
"RTN","LA7VOBX3",98,0)
 . ; Working on susceptibilities
"RTN","LA7VOBX3",99,0)
 . I $P(LA76305(1),"^",4) S LA7VERP=$P(LA76305(1),"^",4)
"RTN","LA7VOBX3",100,0)
 . I $P(LRSB,",",2)<3 D MIC^LA7VOBX4 Q
"RTN","LA7VOBX3",101,0)
 . I $P(LRSB,",",2)=3 D MICA^LA7VOBX4 Q
"RTN","LA7VOBX3",102,0)
 ;
"RTN","LA7VOBX3",103,0)
 ; Parasitology report
"RTN","LA7VOBX3",104,0)
 I $P(LRSB,",")=14 D  Q
"RTN","LA7VOBX3",105,0)
 . N LA7ERR
"RTN","LA7VOBX3",106,0)
 . S LA76305(5)=$G(^LR(LRDFN,LRSS,LRIDT,5))
"RTN","LA7VOBX3",107,0)
 . I $P(LA76305(5),"^",3) S LA7VERP=$P(LA76305(5),"^",3)
"RTN","LA7VOBX3",108,0)
 . S LA7ORS=$P(LA76305(5),"^",2)
"RTN","LA7VOBX3",109,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.36,.01)
"RTN","LA7VOBX3",110,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",111,0)
 . S LA7VAL=$$GET1^DIQ(63.36,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",112,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.36,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",113,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",114,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",4"
"RTN","LA7VOBX3",115,0)
 ;
"RTN","LA7VOBX3",116,0)
 ; Parasite organism
"RTN","LA7VOBX3",117,0)
 I $P(LRSB,",")=16 D  Q
"RTN","LA7VOBX3",118,0)
 . S LA76305(5)=$G(^LR(LRDFN,LRSS,LRIDT,5))
"RTN","LA7VOBX3",119,0)
 . S LA7ORS=$P(LA76305(5),"^",2)
"RTN","LA7VOBX3",120,0)
 . I $P(LA76305(5),"^",3) S LA7VERP=$P(LA76305(5),"^",3)
"RTN","LA7VOBX3",121,0)
 . ; Working on parasite
"RTN","LA7VOBX3",122,0)
 . I $G(LRIDT(3))="" S LA7SUBFL=63.34 D ORG^LA7VOBX4 Q
"RTN","LA7VOBX3",123,0)
 . ; Working on parasite's stages/quantity
"RTN","LA7VOBX3",124,0)
 . S LA7SUBFL=63.35
"RTN","LA7VOBX3",125,0)
 . I $P(LRSB,",",2)=.01 D PSTAGE^LA7VOBX4 Q
"RTN","LA7VOBX3",126,0)
 . I $P(LRSB,",",2)=1 D PQTY^LA7VOBX4 Q
"RTN","LA7VOBX3",127,0)
 ;
"RTN","LA7VOBX3",128,0)
 ; Mycology report
"RTN","LA7VOBX3",129,0)
 I $P(LRSB,",")=18 D  Q
"RTN","LA7VOBX3",130,0)
 . N LA7ERR
"RTN","LA7VOBX3",131,0)
 . S LA76305(8)=$G(^LR(LRDFN,LRSS,LRIDT,8))
"RTN","LA7VOBX3",132,0)
 . S LA7VERP=$P(LA76305(8),"^",3)
"RTN","LA7VOBX3",133,0)
 . S LA7ORS=$P(LA76305(8),"^",2)
"RTN","LA7VOBX3",134,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.38,.01)
"RTN","LA7VOBX3",135,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",136,0)
 . S LA7VAL=$$GET1^DIQ(63.38,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",137,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.38,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",138,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",139,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",8"
"RTN","LA7VOBX3",140,0)
 ;
"RTN","LA7VOBX3",141,0)
 ; Mycology organism
"RTN","LA7VOBX3",142,0)
 I $P(LRSB,",")=20 D  Q
"RTN","LA7VOBX3",143,0)
 . S LA76305(8)=$G(^LR(LRDFN,LRSS,LRIDT,8))
"RTN","LA7VOBX3",144,0)
 . S LA7ORS=$P(LA76305(8),"^",2)
"RTN","LA7VOBX3",145,0)
 . S LA7VERP=$P(LA76305(8),"^",3)
"RTN","LA7VOBX3",146,0)
 . S LA7SUBFL=63.37
"RTN","LA7VOBX3",147,0)
 . ; Working on colony count
"RTN","LA7VOBX3",148,0)
 . I $P(LRSB,",",2)=1 D CC^LA7VOBX4 Q
"RTN","LA7VOBX3",149,0)
 . ; Working on organism
"RTN","LA7VOBX3",150,0)
 . D ORG^LA7VOBX4
"RTN","LA7VOBX3",151,0)
 ;
"RTN","LA7VOBX3",152,0)
 ; Mycobacterium report
"RTN","LA7VOBX3",153,0)
 I $P(LRSB,",")=22 D  Q
"RTN","LA7VOBX3",154,0)
 . N LA7ERR
"RTN","LA7VOBX3",155,0)
 . S LA76305(11)=$G(^LR(LRDFN,LRSS,LRIDT,11))
"RTN","LA7VOBX3",156,0)
 . S LA7VERP=$P(LA76305(11),"^",3)
"RTN","LA7VOBX3",157,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",158,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.41,.01)
"RTN","LA7VOBX3",159,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",160,0)
 . S LA7VAL=$$GET1^DIQ(63.41,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",161,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.41,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",162,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",163,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",12"
"RTN","LA7VOBX3",164,0)
 ;
"RTN","LA7VOBX3",165,0)
 ; Acid Fast stain
"RTN","LA7VOBX3",166,0)
 I LRSB=24 D  Q
"RTN","LA7VOBX3",167,0)
 . N LA7ERR
"RTN","LA7VOBX3",168,0)
 . S LA76305(11)=$G(^LR(LRDFN,LRSS,LRIDT,11))
"RTN","LA7VOBX3",169,0)
 . S LA7VERP=$P(LA76305(11),"^",3)
"RTN","LA7VOBX3",170,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",171,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,24)
"RTN","LA7VOBX3",172,0)
 . S LA7IENS=LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",173,0)
 . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,24,"","LA7ERR")
"RTN","LA7VOBX3",174,0)
 . S LA7Y="MI-"_LRSB_"^"_$$GET1^DID(63.05,24,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",175,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",176,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",12;3"
"RTN","LA7VOBX3",177,0)
 ;
"RTN","LA7VOBX3",178,0)
 ; Acid Fast stain quantity
"RTN","LA7VOBX3",179,0)
 I LRSB=25 D  Q
"RTN","LA7VOBX3",180,0)
 . N LA7ERR
"RTN","LA7VOBX3",181,0)
 . S LA76305(11)=$G(^LR(LRDFN,LRSS,LRIDT,11))
"RTN","LA7VOBX3",182,0)
 . S LA7VERP=$P(LA76305(11),"^",3)
"RTN","LA7VOBX3",183,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",184,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,25)
"RTN","LA7VOBX3",185,0)
 . S LA7IENS=LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",186,0)
 . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,25,"","LA7ERR")
"RTN","LA7VOBX3",187,0)
 . S LA7Y="MI-"_LRSB_"^"_$$GET1^DID(63.05,25,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",188,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",189,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",12;3"
"RTN","LA7VOBX3",190,0)
 ;
"RTN","LA7VOBX3",191,0)
 ; TB organism
"RTN","LA7VOBX3",192,0)
 I $P(LRSB,",")=26 D  Q
"RTN","LA7VOBX3",193,0)
 . S LA76305(11)=$G(^LR(LRDFN,LRSS,LRIDT,11))
"RTN","LA7VOBX3",194,0)
 . S LA7ORS=$P(LA76305(11),"^",2)
"RTN","LA7VOBX3",195,0)
 . S LA7VERP=$P(LA76305(11),"^",5)
"RTN","LA7VOBX3",196,0)
 . S LA7SUBFL=63.39
"RTN","LA7VOBX3",197,0)
 . ; Working on colony count
"RTN","LA7VOBX3",198,0)
 . I $P(LRSB,",",2)=1 D CC^LA7VOBX4 Q
"RTN","LA7VOBX3",199,0)
 . ; Working on organism
"RTN","LA7VOBX3",200,0)
 . I $G(LRIDT(3))="" D ORG^LA7VOBX4 Q
"RTN","LA7VOBX3",201,0)
 . ; Working on susceptibilities
"RTN","LA7VOBX3",202,0)
 . D MIC^LA7VOBX4
"RTN","LA7VOBX3",203,0)
 ;
"RTN","LA7VOBX3",204,0)
 ; Virology report
"RTN","LA7VOBX3",205,0)
 I $P(LRSB,",")=33 D  Q
"RTN","LA7VOBX3",206,0)
 . N LA7ERR
"RTN","LA7VOBX3",207,0)
 . S LA76305(16)=$G(^LR(LRDFN,LRSS,LRIDT,16))
"RTN","LA7VOBX3",208,0)
 . S LA7VERP=$P(LA76305(16),"^",3)
"RTN","LA7VOBX3",209,0)
 . S LA7ORS=$P(LA76305(16),"^",2)
"RTN","LA7VOBX3",210,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(63.44,.01)
"RTN","LA7VOBX3",211,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",212,0)
 . S LA7VAL=$$GET1^DIQ(63.44,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",213,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.44,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",214,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",215,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",16"
"RTN","LA7VOBX3",216,0)
 ;
"RTN","LA7VOBX3",217,0)
 ; Virology virus
"RTN","LA7VOBX3",218,0)
 I $P(LRSB,",")=36 D  Q
"RTN","LA7VOBX3",219,0)
 . S LA76305(16)=$G(^LR(LRDFN,LRSS,LRIDT,16))
"RTN","LA7VOBX3",220,0)
 . S LA7ORS=$P(LA76305(16),"^",2)
"RTN","LA7VOBX3",221,0)
 . S LA7VERP=$P(LA76305(16),"^",3)
"RTN","LA7VOBX3",222,0)
 . ; Working on virus
"RTN","LA7VOBX3",223,0)
 . S LA7SUBFL=63.43
"RTN","LA7VOBX3",224,0)
 . D ORG^LA7VOBX4
"RTN","LA7VOBX3",225,0)
 ;
"RTN","LA7VOBX3",226,0)
 ; Antibiotic levels
"RTN","LA7VOBX3",227,0)
 I $P(LRSB,",")=28 D  Q
"RTN","LA7VOBX3",228,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",229,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",230,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",231,0)
 . S LA7SUBFL=63.42
"RTN","LA7VOBX3",232,0)
 . S LA7OBX(2)="SN"
"RTN","LA7VOBX3",233,0)
 . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,14,LRIDT(2),0))
"RTN","LA7VOBX3",234,0)
 . S $P(LA7CODE,"!",2)="93978.0000"
"RTN","LA7VOBX3",235,0)
 . S $P(LA7CODE,"!",3)=$S($P(LA7X,"^",2)="P":44433,$P(LA7X,"^",2)="T":44434,1:23816)
"RTN","LA7VOBX3",236,0)
 . S LA7VAL=$P(LA7X,"^",3)
"RTN","LA7VOBX3",237,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"-"_$P(LRSB,",",2)_"^"_$P(LA7X,"^")_"^99VA63"
"RTN","LA7VOBX3",238,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",239,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",14"
"RTN","LA7VOBX3",240,0)
 ;
"RTN","LA7VOBX3",241,0)
 ; Sterility report
"RTN","LA7VOBX3",242,0)
 I LRSB=11.52 D  Q
"RTN","LA7VOBX3",243,0)
 . N LA7ERR
"RTN","LA7VOBX3",244,0)
 . S LA76305(1)=$G(^LR(LRDFN,LRSS,LRIDT,1))
"RTN","LA7VOBX3",245,0)
 . S LA7VERP=$P(LA76305(1),"^",3)
"RTN","LA7VOBX3",246,0)
 . S LA7ORS=$P(LA76305(1),"^",2)
"RTN","LA7VOBX3",247,0)
 . S LA7SUBFL=63.292
"RTN","LA7VOBX3",248,0)
 . S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,.01)
"RTN","LA7VOBX3",249,0)
 . S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX3",250,0)
 . S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01,"","LA7ERR")
"RTN","LA7VOBX3",251,0)
 . S LA7Y="MI-"_$P(LRSB,",")_"^"_$$GET1^DID(63.292,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX3",252,0)
 . S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX3",253,0)
 . S LA7PLREF=LRDFN_",MI,"_LRIDT_",31"
"RTN","LA7VOBX3",254,0)
 ;
"RTN","LA7VOBX3",255,0)
 ;
"RTN","LA7VOBX3",256,0)
 Q
"RTN","LA7VOBX4")
0^63^B56431898
"RTN","LA7VOBX4",1,0)
LA7VOBX4 ;DALOI/JMC - LAB OBX Segment message builder (MI subscripts) cont'd ;11/18/11  14:48
"RTN","LA7VOBX4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VOBX4",3,0)
 ;
"RTN","LA7VOBX4",4,0)
 ; Continuation of LA7VOBX3
"RTN","LA7VOBX4",5,0)
 ;
"RTN","LA7VOBX4",6,0)
 Q
"RTN","LA7VOBX4",7,0)
 ;
"RTN","LA7VOBX4",8,0)
 ;
"RTN","LA7VOBX4",9,0)
GEN ; Fields common to all MI OBX segments.
"RTN","LA7VOBX4",10,0)
 ;
"RTN","LA7VOBX4",11,0)
 ;
"RTN","LA7VOBX4",12,0)
 ; Initialize OBX segment
"RTN","LA7VOBX4",13,0)
 S LA7OBX(0)="OBX"
"RTN","LA7VOBX4",14,0)
 S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)
"RTN","LA7VOBX4",15,0)
 ;
"RTN","LA7VOBX4",16,0)
 S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7CODE,"!",2),$P(LA7CODE,"!",3),LA7ALT,LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX4",17,0)
 ;
"RTN","LA7VOBX4",18,0)
 ; Test value
"RTN","LA7VOBX4",19,0)
 S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)
"RTN","LA7VOBX4",20,0)
 ;
"RTN","LA7VOBX4",21,0)
 ; Set sub-id and save for constructing parents
"RTN","LA7VOBX4",22,0)
 I LA7ISOID'="" D
"RTN","LA7VOBX4",23,0)
 . S LA7OBX(4)=$$OBX4^LA7VOBX(LA7ISOID,LA7FS,LA7ECH)
"RTN","LA7VOBX4",24,0)
 . I LA7SAVID D
"RTN","LA7VOBX4",25,0)
 . . F I=1,2 S LA7ISOID(LA7ISOID,I)=LA7OBX(I+2)
"RTN","LA7VOBX4",26,0)
 . . I $G(HL("VER"))="2.2" S LA7ISOID(LA7ISOID,3)=LA7OBX(5) Q
"RTN","LA7VOBX4",27,0)
 . . F I=2,4 I $P(LA7OBX(5),$E(LA7ECH,1),I)'="" S LA7ISOID(LA7ISOID,3)=$P(LA7OBX(5),$E(LA7ECH,1),I) Q
"RTN","LA7VOBX4",28,0)
 ;
"RTN","LA7VOBX4",29,0)
 ; Order result status - "P"artial, "F"inal , "A"mended results
"RTN","LA7VOBX4",30,0)
 ; If no status from individual components then use status from zeroth node.
"RTN","LA7VOBX4",31,0)
 ; If no release date then pending else final
"RTN","LA7VOBX4",32,0)
 ; If amended, overrides all other status
"RTN","LA7VOBX4",33,0)
 ;
"RTN","LA7VOBX4",34,0)
 S LA7OBX(11)=$$OBX11^LA7VOBX(LA7RS)
"RTN","LA7VOBX4",35,0)
 ;
"RTN","LA7VOBX4",36,0)
 ; Observation date/time - collection date/time per HL7 standard
"RTN","LA7VOBX4",37,0)
 I $P(LA76305(0),"^") S LA7OBX(14)=$$OBX14^LA7VOBX($P(LA76305(0),"^"))
"RTN","LA7VOBX4",38,0)
 ;
"RTN","LA7VOBX4",39,0)
 S LA7DIV=""
"RTN","LA7VOBX4",40,0)
 I LA7PLREF'="" S LA7DIV=$P($$RESPL^LA7VHLU2(LA7PLREF),"^")
"RTN","LA7VOBX4",41,0)
 I 'LA7DIV S LA7DIV=$P($G(^LR(LRDFN,"MI",LRIDT,"RF")),"^")
"RTN","LA7VOBX4",42,0)
 I 'LA7DIV,$$DIV4^XUSER(.LA7DIV,$P(LA76305(0),"^",4)) S LA7DIV=$O(LA7DIV(0))
"RTN","LA7VOBX4",43,0)
 ;
"RTN","LA7VOBX4",44,0)
 ; Facility that performed the testing
"RTN","LA7VOBX4",45,0)
 S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX4",46,0)
 ;
"RTN","LA7VOBX4",47,0)
 ; Person that verified the test
"RTN","LA7VOBX4",48,0)
 I $P(LA76305(0),"^",4) S LA7VERP=$P(LA76305(0),"^",4)
"RTN","LA7VOBX4",49,0)
 I LA7VERP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VERP,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX4",50,0)
  ;
"RTN","LA7VOBX4",51,0)
 ; Performing organization name/address
"RTN","LA7VOBX4",52,0)
 I LA7DIV'="" D
"RTN","LA7VOBX4",53,0)
 . N LA7DT
"RTN","LA7VOBX4",54,0)
 . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)
"RTN","LA7VOBX4",55,0)
 . S LA7DT=$S($P(LA76305(0),"^",3):$P(LA76305(0),"^",3),1:$$NOW^XLFDT)
"RTN","LA7VOBX4",56,0)
 . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VOBX4",57,0)
 ;
"RTN","LA7VOBX4",58,0)
 D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)
"RTN","LA7VOBX4",59,0)
 ;
"RTN","LA7VOBX4",60,0)
 Q
"RTN","LA7VOBX4",61,0)
 ;
"RTN","LA7VOBX4",62,0)
 ;
"RTN","LA7VOBX4",63,0)
CC ; Organism's Colony count
"RTN","LA7VOBX4",64,0)
 ; If "CFU/ml" found then move units to OBX-6 (Units).
"RTN","LA7VOBX4",65,0)
 N LA7X
"RTN","LA7VOBX4",66,0)
 ;
"RTN","LA7VOBX4",67,0)
 S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX4",68,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,1)
"RTN","LA7VOBX4",69,0)
 ;
"RTN","LA7VOBX4",70,0)
 ; Isolate ID as sub-id
"RTN","LA7VOBX4",71,0)
 S LA7ISOID=$$GETISO^LA7VHLU1(LA7SUBFL,LA7IENS)
"RTN","LA7VOBX4",72,0)
 ;
"RTN","LA7VOBX4",73,0)
 S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,1)
"RTN","LA7VOBX4",74,0)
 S LA7X=$$UP^XLFSTR(LA7VAL)
"RTN","LA7VOBX4",75,0)
 I LA7X["CFU/ML" D
"RTN","LA7VOBX4",76,0)
 . S LA7OBX(6)=$$OBX6^LA7VOBX("CFU/ml","",LA7FS,LA7ECH,$G(LA7INTYP))
"RTN","LA7VOBX4",77,0)
 . S LA7X("CFU/ml")="",LA7X("CFU/ML")=""
"RTN","LA7VOBX4",78,0)
 . S LA7VAL=$$REPLACE^XLFSTR(LA7VAL,.LA7X)
"RTN","LA7VOBX4",79,0)
 ;
"RTN","LA7VOBX4",80,0)
 S LA7Y="MI-"_$P(LRSB,",")_"-1^"_$$GET1^DID(LA7SUBFL,1,"","LABEL")_"^99VA63"
"RTN","LA7VOBX4",81,0)
 S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX4",82,0)
 S LA7PLREF=LRDFN_",MI,"_LRIDT_",3,"_LRIDT(2)
"RTN","LA7VOBX4",83,0)
 ;
"RTN","LA7VOBX4",84,0)
 Q
"RTN","LA7VOBX4",85,0)
 ;
"RTN","LA7VOBX4",86,0)
 ;
"RTN","LA7VOBX4",87,0)
ORG ; Organism
"RTN","LA7VOBX4",88,0)
 ;
"RTN","LA7VOBX4",89,0)
 N LA7X,LA7Y
"RTN","LA7VOBX4",90,0)
 ;
"RTN","LA7VOBX4",91,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,.01)
"RTN","LA7VOBX4",92,0)
 S LA7IENS=LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX4",93,0)
 S LA7VAL=""
"RTN","LA7VOBX4",94,0)
 ;
"RTN","LA7VOBX4",95,0)
 ; Isolate ID as sub-id
"RTN","LA7VOBX4",96,0)
 S LA7ISOID=$$GETISO^LA7VHLU1(LA7SUBFL,LA7IENS)
"RTN","LA7VOBX4",97,0)
 ;
"RTN","LA7VOBX4",98,0)
 I $G(LA7NVAF)=1 S LA7OBX(2)="CE"
"RTN","LA7VOBX4",99,0)
 S LA7X=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01,"I"),LA7X(.01)=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01)
"RTN","LA7VOBX4",100,0)
 ; Check for SNOMED coding/local coding as alternate
"RTN","LA7VOBX4",101,0)
 S LA7Y=$$IEN2SCT^LA7VHLU6(61.2,LA7X,DT)
"RTN","LA7VOBX4",102,0)
 I LA7Y D
"RTN","LA7VOBX4",103,0)
 . S LA7VAL=$P(LA7Y,"^",1,3),$P(LA7VAL,"^",4,6)=LA7X_"^"_LA7X(.01)_"^99VA61.2"
"RTN","LA7VOBX4",104,0)
 . I $G(LA7NVAF)'=1 S LA7OBX(2)="CWE",$P(LA7VAL,"^",7,8)=$P(LA7Y,"^",4)_"^5.2",$P(LA7VAL,"^",9)=LA7X(.01)
"RTN","LA7VOBX4",105,0)
 ; If no SNOMED then use local coding as primary
"RTN","LA7VOBX4",106,0)
 I LA7VAL="" D
"RTN","LA7VOBX4",107,0)
 . S LA7VAL=LA7X_"^"_LA7X(.01)_"^99VA61.2"
"RTN","LA7VOBX4",108,0)
 . I $G(LA7NVAF)'=1 S LA7OBX(2)="CWE",$P(LA7VAL,"^",7)="5.2",$P(LA7VAL,"^",9)=LA7X(.01)
"RTN","LA7VOBX4",109,0)
 ;
"RTN","LA7VOBX4",110,0)
 S LA7Y="MI-"_$P(LRSB,",")_"-.01^"_$$GET1^DID(LA7SUBFL,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX4",111,0)
 S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX4",112,0)
 ;
"RTN","LA7VOBX4",113,0)
 S LA7OBX(8)=$$OBX8^LA7VOBX("A")
"RTN","LA7VOBX4",114,0)
 ;
"RTN","LA7VOBX4",115,0)
 S LA7PLREF=LRDFN_",MI,"_LRIDT_","_$P(LRSB,",")_","_LRIDT(2)_",0"
"RTN","LA7VOBX4",116,0)
 ;
"RTN","LA7VOBX4",117,0)
 ; Set flag to save sub-id for parent-child relationship
"RTN","LA7VOBX4",118,0)
 S LA7SAVID=1
"RTN","LA7VOBX4",119,0)
 Q
"RTN","LA7VOBX4",120,0)
 ;
"RTN","LA7VOBX4",121,0)
 ;
"RTN","LA7VOBX4",122,0)
MIC ; Organism's susceptibilities
"RTN","LA7VOBX4",123,0)
 ;
"RTN","LA7VOBX4",124,0)
 N LA7IENS,LA7SCT,LA7SUB,LA7X,LA7Y
"RTN","LA7VOBX4",125,0)
 ;
"RTN","LA7VOBX4",126,0)
 ; Bact or TB organism
"RTN","LA7VOBX4",127,0)
 S LA7SUB=$S($P(LRSB,",")=12:3,1:12)
"RTN","LA7VOBX4",128,0)
 ;
"RTN","LA7VOBX4",129,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(62.06,.01)
"RTN","LA7VOBX4",130,0)
 ;
"RTN","LA7VOBX4",131,0)
 ; Determine local code for antibiotic if not mapped to NLT or in file #62.06
"RTN","LA7VOBX4",132,0)
 ;  - Use file #62.06 entry if available otherwise generate from drug node field in file #63
"RTN","LA7VOBX4",133,0)
 ;    also used to convey local display name in 9th component
"RTN","LA7VOBX4",134,0)
 S (LA7ALT,LA7X,LA7Y)=""
"RTN","LA7VOBX4",135,0)
 I $P(LRSB,",")=12 S LA7X=$O(^LAB(62.06,"AD",$P(LRSB,",",2),0))
"RTN","LA7VOBX4",136,0)
 I $P(LRSB,",")=26 S LA7X=$O(^LAB(62.06,"AD1",$P(LRSB,",",2),0))
"RTN","LA7VOBX4",137,0)
 I LA7X S LA7Y=LA7X_"^"_$$GET1^DIQ(62.06,LA7X_",",.01)_"^99VA62.06"
"RTN","LA7VOBX4",138,0)
 I LA7Y="" D
"RTN","LA7VOBX4",139,0)
 . S LA7X=$P(LRSB,",",2),LA7Y=$O(^DD(LA7SUBFL,"GL",LA7X,1,0))
"RTN","LA7VOBX4",140,0)
 . I LA7Y<1 Q
"RTN","LA7VOBX4",141,0)
 . S LA7Y="MIAB"_$P(LRSB,",")_"-"_$P(LRSB,",",2)_"^"_$$GET1^DID(LA7SUBFL,LA7Y,"","LABEL")_"^99VA63"
"RTN","LA7VOBX4",142,0)
 I $P(LA7CODE,"!",2)=""!($P(LA7CODE,"!",3)="") S LA7ALT=LA7Y
"RTN","LA7VOBX4",143,0)
 S $P(LA7ALT,"^",4,6)=LA7Y
"RTN","LA7VOBX4",144,0)
 ;
"RTN","LA7VOBX4",145,0)
 S LA7X=$G(^LR(LRDFN,"MI",LRIDT,LA7SUB,LRIDT(2),LRIDT(3)))
"RTN","LA7VOBX4",146,0)
 I $P(LA7X,"^",2)'="" S $P(LA7X,"^",2)=$$TRIM^XLFSTR($P(LA7X,"^",2),"RL"," ")
"RTN","LA7VOBX4",147,0)
 S LA7VAL=$$TRIM^XLFSTR($P(LA7X,"^"),"RL"," ")
"RTN","LA7VOBX4",148,0)
 I LA7VAL'="" D
"RTN","LA7VOBX4",149,0)
 . I "MSIR"[$E(LA7VAL),$G(LA7NVAF)'=1 D
"RTN","LA7VOBX4",150,0)
 . . S LA7Y=$S(LA7VAL="S":131196009,LA7VAL="MS":260357007,LA7VAL="R":30714006,LA7VAL="I":264841006,1:"")
"RTN","LA7VOBX4",151,0)
 . . I LA7Y D MTSCT
"RTN","LA7VOBX4",152,0)
 . I $E($P(LA7X,"^",2))?1(1"S",1"I",1"R") S LA7OBX(8)=$$OBX8^LA7VOBX($E($P(LA7X,"^",2))) Q
"RTN","LA7VOBX4",153,0)
 . I $E($P(LA7X,"^",2),1,2)?1(1"MS",1"VS") S LA7OBX(8)=$$OBX8^LA7VOBX($E($P(LA7X,"^",2),1,2))
"RTN","LA7VOBX4",154,0)
 ;
"RTN","LA7VOBX4",155,0)
 ; Determine access screen for this susceptibility
"RTN","LA7VOBX4",156,0)
 I $P(LA7X,"^",3)="" S $P(LA7X,"^",3)="A"
"RTN","LA7VOBX4",157,0)
 S LA7OBX(13)=$$OBX13^LA7VOBX($P(LA7X,"^",3),$S($G(LA7INTYP)=30:"MIS-HDR",1:"MIS"),LA7FS,LA7ECH)
"RTN","LA7VOBX4",158,0)
 ;
"RTN","LA7VOBX4",159,0)
 S LA7PLREF=LRDFN_",MI,"_LRIDT_","_LA7SUB_","_LRIDT(2)_","_LRIDT(3)
"RTN","LA7VOBX4",160,0)
 ;
"RTN","LA7VOBX4",161,0)
 Q
"RTN","LA7VOBX4",162,0)
 ;
"RTN","LA7VOBX4",163,0)
 ;
"RTN","LA7VOBX4",164,0)
MICA ; Bacteria organism's susceptibilities - free text
"RTN","LA7VOBX4",165,0)
 ;
"RTN","LA7VOBX4",166,0)
 N LA7SUB,LA7X
"RTN","LA7VOBX4",167,0)
 S LA7OBX(2)="NM"
"RTN","LA7VOBX4",168,0)
 ;
"RTN","LA7VOBX4",169,0)
 ; Bact organism
"RTN","LA7VOBX4",170,0)
 S LA7SUB=3
"RTN","LA7VOBX4",171,0)
 ;
"RTN","LA7VOBX4",172,0)
 ; Determine local code for free text antibiotic also used to convey local display name in 9th component
"RTN","LA7VOBX4",173,0)
 S LA7X=$G(^LR(LRDFN,"MI",LRIDT,LA7SUB,LRIDT(2),3,LRIDT(3),0))
"RTN","LA7VOBX4",174,0)
 S LA7ALT="MIAB"_$P(LRSB,",")_"-"_$P(LRSB,",",2)_"-"_$P(LRSB,",",3)_"^"_$P(LA7X,"^")_$S($P(LRSB,",",3)=1:" MIC",1:" MBC")_"^99VA63"
"RTN","LA7VOBX4",175,0)
 S LA7ALT=LA7ALT_"^"_LA7ALT
"RTN","LA7VOBX4",176,0)
 S $P(LA7CODE,"!",2)="87565.0000"
"RTN","LA7VOBX4",177,0)
 S $P(LA7CODE,"!",3)=$S($P(LRSB,",",3)=1:21070,1:23658)
"RTN","LA7VOBX4",178,0)
 ;
"RTN","LA7VOBX4",179,0)
 S LA7VAL=$P(LA7X,"^",$S($P(LRSB,",",3)=1:2,1:3))
"RTN","LA7VOBX4",180,0)
 ;
"RTN","LA7VOBX4",181,0)
 S LA7OBX(6)="UG/ML"
"RTN","LA7VOBX4",182,0)
 S LA7OBX(8)=""
"RTN","LA7VOBX4",183,0)
 ;
"RTN","LA7VOBX4",184,0)
 Q
"RTN","LA7VOBX4",185,0)
 ;
"RTN","LA7VOBX4",186,0)
 ;
"RTN","LA7VOBX4",187,0)
PSTAGE ; Parasite's stage
"RTN","LA7VOBX4",188,0)
 ;
"RTN","LA7VOBX4",189,0)
 N LA7IENS,LA7SUB,LA7X,LA7Y
"RTN","LA7VOBX4",190,0)
 ;
"RTN","LA7VOBX4",191,0)
 S LA7SUB=6,LA7VAL=""
"RTN","LA7VOBX4",192,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(63.35,.01)
"RTN","LA7VOBX4",193,0)
 ;
"RTN","LA7VOBX4",194,0)
 ; Isolate ID as sub-id
"RTN","LA7VOBX4",195,0)
 S LA7ISOID=$$GETISO^LA7VHLU1(63.34,LRIDT(2)_","_LRIDT_","_LRDFN_",")
"RTN","LA7VOBX4",196,0)
 ;
"RTN","LA7VOBX4",197,0)
 S LA7IENS=LRIDT(3)_","_LRIDT(2)_","_LRIDT_","_LRDFN_","
"RTN","LA7VOBX4",198,0)
 S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01,"E")
"RTN","LA7VOBX4",199,0)
 S LA7X=$P($G(^LR(LRDFN,"MI",LRIDT,LA7SUB,LRIDT(2),1,LRIDT(3),0)),"^")
"RTN","LA7VOBX4",200,0)
 S LA7Y=$S(LA7X="T":103551003,LA7X="C":103552005,LA7X="E":116990009,LA7X="L":48458007,LA7X="S":284701003,LA7X="G":103537003,LA7X="M":2105009,LA7X="R":103568004,LA7X="F":2105009,1:"")
"RTN","LA7VOBX4",201,0)
 I LA7Y S LA7X=LA7VAL D MTSCT
"RTN","LA7VOBX4",202,0)
 ;
"RTN","LA7VOBX4",203,0)
 S LA7Y="MI-"_$P(LRSB,",")_"-.01^"_$$GET1^DID(63.35,.01,"","LABEL")_"^99VA63"
"RTN","LA7VOBX4",204,0)
 S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX4",205,0)
 ;
"RTN","LA7VOBX4",206,0)
 I LA7VAL'="" S LA7OBX(8)=$$OBX8^LA7VOBX("A")
"RTN","LA7VOBX4",207,0)
 ;
"RTN","LA7VOBX4",208,0)
 S LA7PLREF=LRDFN_",MI,"_LRIDT_",6,"_LRIDT(2)_",1,"_LRIDT(3)
"RTN","LA7VOBX4",209,0)
 ;
"RTN","LA7VOBX4",210,0)
 Q
"RTN","LA7VOBX4",211,0)
 ;
"RTN","LA7VOBX4",212,0)
 ;
"RTN","LA7VOBX4",213,0)
PQTY ; Parasite's stage quantity
"RTN","LA7VOBX4",214,0)
 ;
"RTN","LA7VOBX4",215,0)
 N LA7IENS,LA7SUB
"RTN","LA7VOBX4",216,0)
 ;
"RTN","LA7VOBX4",217,0)
 S LA7SUB=6,LA7VAL=""
"RTN","LA7VOBX4",218,0)
 S LA7OBX(2)=$$OBX2^LA7VOBX(63.35,1)
"RTN","LA7VOBX4",219,0)
 ;
"RTN","LA7VOBX4",220,0)
 ; Isolate ID as sub-id
"RTN","LA7VOBX4",221,0)
 S LA7ISOID=$$GETISO^LA7VHLU1(63.34,LRIDT(2)_","_LRIDT_","_LRDFN_",")
"RTN","LA7VOBX4",222,0)
 ;
"RTN","LA7VOBX4",223,0)
 S LA7X=$G(^LR(LRDFN,"MI",LRIDT,LA7SUB,LRIDT(2),1,LRIDT(3),0))
"RTN","LA7VOBX4",224,0)
 S LA7VAL=$P(LA7X,"^",2)
"RTN","LA7VOBX4",225,0)
 ;
"RTN","LA7VOBX4",226,0)
 S LA7Y="MI-"_$P(LRSB,",")_"-1^"_$$GET1^DID(63.35,1,"","LABEL")_"^99VA63"
"RTN","LA7VOBX4",227,0)
 S LA7ALT=LA7Y_"^"_LA7Y
"RTN","LA7VOBX4",228,0)
 ;
"RTN","LA7VOBX4",229,0)
 I LA7VAL'="" S LA7OBX(8)=$$OBX8^LA7VOBX("A")
"RTN","LA7VOBX4",230,0)
 ;
"RTN","LA7VOBX4",231,0)
 S LA7PLREF=LRDFN_",MI,"_LRIDT_",6,"_LRIDT(2)_",1,"_LRIDT(3)
"RTN","LA7VOBX4",232,0)
 ;
"RTN","LA7VOBX4",233,0)
 Q
"RTN","LA7VOBX4",234,0)
 ;
"RTN","LA7VOBX4",235,0)
 ;
"RTN","LA7VOBX4",236,0)
MTSCT ; Map specific values to SNOMED CT
"RTN","LA7VOBX4",237,0)
 ; Required variables
"RTN","LA7VOBX4",238,0)
 ;     LA7X = local reportable result - Will be inserted in 9th component as local term
"RTN","LA7VOBX4",239,0)
 ;     LA7Y = SCT code to lookup
"RTN","LA7VOBX4",240,0)
 ;   LA7VAL = encoded SCT term with local term
"RTN","LA7VOBX4",241,0)
 ;
"RTN","LA7VOBX4",242,0)
 N LA7SCT
"RTN","LA7VOBX4",243,0)
 I $$CODE^LEXTRAN(LA7Y,"SCT",DT,"LA7SCT")>0 D
"RTN","LA7VOBX4",244,0)
 . S LA7VAL=$P(LA7SCT(0),"^")_"^"_LA7SCT("P")_"^SCT"
"RTN","LA7VOBX4",245,0)
 . I $G(LA7NVAF)'=1 S LA7OBX(2)="CWE",$P(LA7VAL,"^",7)=$P(LA7SCT(0),"^",3),$P(LA7VAL,"^",9)=$P(LA7X,"^")
"RTN","LA7VOBX4",246,0)
 . E  S LA7OBX(2)="CE"
"RTN","LA7VOBX4",247,0)
 Q
"RTN","LA7VOBXA")
0^5^B54895883
"RTN","LA7VOBXA",1,0)
LA7VOBXA ;DALOI/JMC - LAB OBX Segment message builder (cont'd) ;04/14/11  10:56
"RTN","LA7VOBXA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,70,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VOBXA",3,0)
 ;
"RTN","LA7VOBXA",4,0)
 Q
"RTN","LA7VOBXA",5,0)
 ;
"RTN","LA7VOBXA",6,0)
OBX2 ; Build OBX-2 sequence - Value type
"RTN","LA7VOBXA",7,0)
 ;
"RTN","LA7VOBXA",8,0)
 ; default value - string data
"RTN","LA7VOBXA",9,0)
 S LA7VAL="ST"
"RTN","LA7VOBXA",10,0)
 S LA7TYP="",LA7FILE=$G(LA7FILE),LA7FIELD=$G(LA7FIELD)
"RTN","LA7VOBXA",11,0)
 ;
"RTN","LA7VOBXA",12,0)
 I LA7FILE,LA7FIELD S LA7TYP=$$GET1^DID(LA7FILE,LA7FIELD,"","TYPE","","LA7ERR")
"RTN","LA7VOBXA",13,0)
 ;
"RTN","LA7VOBXA",14,0)
 I LA7TYP="DATE/TIME" S LA7VAL="TS"
"RTN","LA7VOBXA",15,0)
 I LA7TYP="FREE TEXT" S LA7VAL="ST"
"RTN","LA7VOBXA",16,0)
 I LA7TYP="WORD-PROCESSING" S LA7VAL="FT"
"RTN","LA7VOBXA",17,0)
 I LA7TYP="NUMERIC" S LA7VAL="NM"
"RTN","LA7VOBXA",18,0)
 I LA7TYP="SET" S LA7VAL="ST"
"RTN","LA7VOBXA",19,0)
 I LA7TYP="POINTER" S LA7VAL="ST"
"RTN","LA7VOBXA",20,0)
 ;
"RTN","LA7VOBXA",21,0)
 Q
"RTN","LA7VOBXA",22,0)
 ;
"RTN","LA7VOBXA",23,0)
 ;
"RTN","LA7VOBXA",24,0)
OBX3 ; Build OBX-3 sequence - Observation identifier field
"RTN","LA7VOBXA",25,0)
 ;
"RTN","LA7VOBXA",26,0)
 ; Initialize variables
"RTN","LA7VOBXA",27,0)
 S LA7J=1,LA7Y="",LA7INTYP=$G(LA7INTYP)
"RTN","LA7VOBXA",28,0)
 ;
"RTN","LA7VOBXA",29,0)
 ; Build sequence using LOINC codes. LOINC code/code name/"LN"
"RTN","LA7VOBXA",30,0)
 ; VA VUID in 2nd triplet when sending to VA HDR. Use VA Display name (field #82) for VUID test name
"RTN","LA7VOBXA",31,0)
 I LA7953'="" D
"RTN","LA7VOBXA",32,0)
 . N LA7IENS,LA7Z
"RTN","LA7VOBXA",33,0)
 . I LA7953?1.N S LA7IENS=LA7953_","
"RTN","LA7VOBXA",34,0)
 . E  S LA7IENS=$O(^LAB(95.3,"B",LA7953,0))_","
"RTN","LA7VOBXA",35,0)
 . D GETS^DIQ(95.3,LA7IENS,".01;80;99.99","E","LA7X")
"RTN","LA7VOBXA",36,0)
 . ; Invalid code???
"RTN","LA7VOBXA",37,0)
 . I $G(LA7X(95.3,LA7IENS,.01,"E"))="" Q
"RTN","LA7VOBXA",38,0)
 . S LA7Z=LA7X(95.3,LA7IENS,.01,"E")
"RTN","LA7VOBXA",39,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",40,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7Z
"RTN","LA7VOBXA",41,0)
 . S LA7Z=$G(LA7X(95.3,LA7IENS,80,"E"))
"RTN","LA7VOBXA",42,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",43,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z
"RTN","LA7VOBXA",44,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)="LN"
"RTN","LA7VOBXA",45,0)
 . S LA7J=4
"RTN","LA7VOBXA",46,0)
 . I LA7INTYP=30,$G(LA7X(95.3,LA7IENS,99.99,"E"))'="" D
"RTN","LA7VOBXA",47,0)
 . . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7X(95.3,LA7IENS,99.99,"E")
"RTN","LA7VOBXA",48,0)
 . . I $$VFIELD^DILFD(95.3,82) D
"RTN","LA7VOBXA",49,0)
 . . . S LA7Z=$$GET1^DIQ(95.3,LA7IENS,82)
"RTN","LA7VOBXA",50,0)
 . . . I LA7Z'="" S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",51,0)
 . . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)="99VA95.3"
"RTN","LA7VOBXA",52,0)
 . . S LA7J=9
"RTN","LA7VOBXA",53,0)
 . I $G(LA7LNCVR)="" S LA7LNCVR=$$GET1^DID(95.3,"","","PACKAGE REVISION DATA")
"RTN","LA7VOBXA",54,0)
 . I LA7J>1 S $P(LA7Y,$E(LA7ECH,1),7)=LA7LNCVR
"RTN","LA7VOBXA",55,0)
 . I LA7J=9 S $P(LA7Y,$E(LA7ECH,1),8)=LA7LNCVR
"RTN","LA7VOBXA",56,0)
 ;
"RTN","LA7VOBXA",57,0)
 ; Build sequence using NLT codes - file #64 NLT code/NLT code name/"99VA64"
"RTN","LA7VOBXA",58,0)
 ; If LOINC is primary make NLT alternate, otherwise NLT primary.
"RTN","LA7VOBXA",59,0)
 ; Only on non-HDR type interfaces.
"RTN","LA7VOBXA",60,0)
 I LA7NLT'="",LA7INTYP'=30,LA7J<9 D
"RTN","LA7VOBXA",61,0)
 . N LA7642,LA7Z
"RTN","LA7VOBXA",62,0)
 . S LA764=$O(^LAM("E",LA7NLT,0)),LA7Z=""
"RTN","LA7VOBXA",63,0)
 . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VOBXA",64,0)
 . I LA7Z="" D
"RTN","LA7VOBXA",65,0)
 . . S LA764=$O(^LAM("E",$P(LA7NLT,".")_".0000",0))
"RTN","LA7VOBXA",66,0)
 . . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_",",.01,"I")
"RTN","LA7VOBXA",67,0)
 . . S LA7642=$O(^LAB(64.2,"C","."_$P(LA7NLT,".",2),0))
"RTN","LA7VOBXA",68,0)
 . . I LA764,LA7642 S LA7Z=LA7Z_"~"_$$GET1^DIQ(64.2,LA7642_",",.01,"I")
"RTN","LA7VOBXA",69,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",70,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7NLT
"RTN","LA7VOBXA",71,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z
"RTN","LA7VOBXA",72,0)
 . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)="99VA64"
"RTN","LA7VOBXA",73,0)
 . S LA7Z=$$GET1^DID(64,"","","PACKAGE REVISION DATA")
"RTN","LA7VOBXA",74,0)
 . S $P(LA7Y,$E(LA7ECH,1),$S(LA7J=1:7,1:8))=LA7Z
"RTN","LA7VOBXA",75,0)
 . S LA7J=LA7J+3
"RTN","LA7VOBXA",76,0)
 ;
"RTN","LA7VOBXA",77,0)
 ; Non-standard/non-VA code
"RTN","LA7VOBXA",78,0)
 ; Local VA display name in 2nd triplet of LA7ALT
"RTN","LA7VOBXA",79,0)
 ; If alternate is a non-VA code then use as alternate code.
"RTN","LA7VOBXA",80,0)
 I LA7ALT="" Q
"RTN","LA7VOBXA",81,0)
 I $P(LA7ALT,"^",1,3)'="^^" D
"RTN","LA7VOBXA",82,0)
 . I LA7INTYP'=30,$P(LA7ALT,"^",3)'="99VA63",LA7J>4 S LA7J=4
"RTN","LA7VOBXA",83,0)
 . I LA7J<7 D
"RTN","LA7VOBXA",84,0)
 . . S $P(LA7Y,$E(LA7ECH,1),LA7J)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^"),LA7FS_LA7ECH)
"RTN","LA7VOBXA",85,0)
 . . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBXA",86,0)
 . . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",3),LA7FS_LA7ECH)
"RTN","LA7VOBXA",87,0)
 . . I $P(LA7ALT,"^",3)="99VA63" S $P(LA7Y,$E(LA7ECH,1),$S(LA7J=1:7,1:8))="5.2"
"RTN","LA7VOBXA",88,0)
 ;
"RTN","LA7VOBXA",89,0)
 ; Put local test name in local text (9th component)
"RTN","LA7VOBXA",90,0)
 I $E($P(LA7ALT,"^",6),1,5)="99VA6",$P(LA7ALT,"^",6)'="99VA64" D
"RTN","LA7VOBXA",91,0)
 . N I,LA7Z
"RTN","LA7VOBXA",92,0)
 . S LA7Z=$$TRIM^XLFSTR($P(LA7ALT,"^",5),"LR"," ")
"RTN","LA7VOBXA",93,0)
 . I LA7Z="" Q
"RTN","LA7VOBXA",94,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",95,0)
 . S $P(LA7Y,$E(LA7ECH,1),9)=LA7Z
"RTN","LA7VOBXA",96,0)
 ;
"RTN","LA7VOBXA",97,0)
 Q
"RTN","LA7VOBXA",98,0)
 ;
"RTN","LA7VOBXA",99,0)
 ;
"RTN","LA7VOBXA",100,0)
OBX5 ; Build OBX-5 sequence - Observation value
"RTN","LA7VOBXA",101,0)
 ; Removes trailing spaces on string and text results.
"RTN","LA7VOBXA",102,0)
 ; Removes leading & trailing spaces on numeric results.
"RTN","LA7VOBXA",103,0)
 ;
"RTN","LA7VOBXA",104,0)
 S LA7Y=""
"RTN","LA7VOBXA",105,0)
 ;
"RTN","LA7VOBXA",106,0)
 I $G(LA7OBX2)="" S LA7OBX2="ST" ; default value type
"RTN","LA7VOBXA",107,0)
 ;
"RTN","LA7VOBXA",108,0)
 I LA7OBX2="ST"!(LA7OBX2="TX") D
"RTN","LA7VOBXA",109,0)
 . S LA7VAL=$$TRIM^XLFSTR(LA7VAL,"R"," ")
"RTN","LA7VOBXA",110,0)
 . S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VOBXA",111,0)
 ;
"RTN","LA7VOBXA",112,0)
 I LA7OBX2?1(1"NM",1"SN") S LA7Y=$$TRIM^XLFSTR(LA7VAL,"RL"," ")
"RTN","LA7VOBXA",113,0)
 ;
"RTN","LA7VOBXA",114,0)
 I LA7OBX2="TS" D
"RTN","LA7VOBXA",115,0)
 . S LA7VAL=$$CHKDT^LA7VHLU1(LA7VAL)
"RTN","LA7VOBXA",116,0)
 . S LA7Y=$$FMTHL7^XLFDT(LA7VAL)
"RTN","LA7VOBXA",117,0)
 ;
"RTN","LA7VOBXA",118,0)
 I LA7OBX2?1(1"CE",1"CNE",1"CWE") D
"RTN","LA7VOBXA",119,0)
 . N LA7I,LA7J,X
"RTN","LA7VOBXA",120,0)
 . S LA7J=$S(LA7OBX2="CE":6,1:9)
"RTN","LA7VOBXA",121,0)
 . F LA7I=1:1:LA7J I $P(LA7VAL,"^",LA7I)'="" S $P(LA7Y,$E(LA7ECH),LA7I)=$$CHKDATA^LA7VHLU3($P(LA7VAL,"^",LA7I),LA7FS_LA7ECH)
"RTN","LA7VOBXA",122,0)
 ;
"RTN","LA7VOBXA",123,0)
 Q
"RTN","LA7VOBXA",124,0)
 ;
"RTN","LA7VOBXA",125,0)
 ;
"RTN","LA7VOBXA",126,0)
OBX5M ; Build OBX-5 sequence - Observation value - multi-line textual result
"RTN","LA7VOBXA",127,0)
 ;
"RTN","LA7VOBXA",128,0)
 K LA7WP
"RTN","LA7VOBXA",129,0)
 ;
"RTN","LA7VOBXA",130,0)
 S LA7WP=""
"RTN","LA7VOBXA",131,0)
 S LA7TYPE=$$GET1^DID(LA7FN,LA7FLD,"","TYPE","LA7ERR(1)")
"RTN","LA7VOBXA",132,0)
 ;
"RTN","LA7VOBXA",133,0)
 ; Process word-processing type field.
"RTN","LA7VOBXA",134,0)
 ; Check and encode data
"RTN","LA7VOBXA",135,0)
 I LA7TYPE="WORD-PROCESSING" D  Q
"RTN","LA7VOBXA",136,0)
 . N DIWF,DIWL,DIWR,X
"RTN","LA7VOBXA",137,0)
 . S LA7WP=$$GET1^DIQ(LA7FN,LA7IENS,LA7FLD,"","LA7WP","LA7ERR(2)")
"RTN","LA7VOBXA",138,0)
 . K ^UTILITY($J,"W")
"RTN","LA7VOBXA",139,0)
 . S DIWL=1,DIWR=245,DIWF="N",LA7I=0
"RTN","LA7VOBXA",140,0)
 . F  S LA7I=$O(LA7WP(LA7I)) Q:'LA7I  S X=LA7WP(LA7I) D ^DIWP
"RTN","LA7VOBXA",141,0)
 . K LA7WP
"RTN","LA7VOBXA",142,0)
 . S LA7I=0
"RTN","LA7VOBXA",143,0)
 . F  S LA7I=$O(^UTILITY($J,"W",DIWL,LA7I)) Q:'LA7I  D
"RTN","LA7VOBXA",144,0)
 . . S LA7WP(LA7I)=$$CHKDATA^LA7VHLU3(^UTILITY($J,"W",DIWL,LA7I,0),LA7FS_LA7ECH)
"RTN","LA7VOBXA",145,0)
 . . I LA7I>1 S LA7WP(LA7I)=$E(LA7ECH,3)_".br"_$E(LA7ECH,3)_LA7WP(LA7I)
"RTN","LA7VOBXA",146,0)
 . K ^UTILITY($J,"W")
"RTN","LA7VOBXA",147,0)
 ;
"RTN","LA7VOBXA",148,0)
 ; Free text, assumes multiple valued
"RTN","LA7VOBXA",149,0)
 I LA7TYPE="FREE TEXT" D
"RTN","LA7VOBXA",150,0)
 . D GETS^DIQ(LA7FN,LA7IENS,LA7FLD_"*","","LA7WP","LA7ERR")
"RTN","LA7VOBXA",151,0)
 ;
"RTN","LA7VOBXA",152,0)
 Q
"RTN","LA7VOBXA",153,0)
 ;
"RTN","LA7VOBXA",154,0)
 ;
"RTN","LA7VOBXA",155,0)
OBX5R ; Build OBX-5 sequence with repetition - Observation value
"RTN","LA7VOBXA",156,0)
 ;
"RTN","LA7VOBXA",157,0)
 S (LA7I,LA7Y)=""
"RTN","LA7VOBXA",158,0)
 F  S LA7I=$O(LA7VAL(LA7I)) Q:'LA7I  D
"RTN","LA7VOBXA",159,0)
 . S LA7Y=LA7Y_$$OBX5^LA7VOBX(LA7VAL(LA7I),LA7OBX2,LA7FS,LA7ECH)_$E(LA7ECH,2)
"RTN","LA7VOBXA",160,0)
 ;
"RTN","LA7VOBXA",161,0)
 Q
"RTN","LA7VOBXA",162,0)
 ;
"RTN","LA7VOBXA",163,0)
 ;
"RTN","LA7VOBXA",164,0)
OBX6 ; Build OBX-6 sequence - Units
"RTN","LA7VOBXA",165,0)
 ;
"RTN","LA7VOBXA",166,0)
 S LA7ECH=$G(LA7ECH),LA7Y=""
"RTN","LA7VOBXA",167,0)
 ;
"RTN","LA7VOBXA",168,0)
 ; Units - remove leading and trailing spaces
"RTN","LA7VOBXA",169,0)
 ; If HDR interface (LA7INTYP=30) then add coding system (L) to units.
"RTN","LA7VOBXA",170,0)
 I $G(LA7VAL)'="" D
"RTN","LA7VOBXA",171,0)
 . S LA7Y=$$TRIM^XLFSTR(LA7VAL,"LR"," ")
"RTN","LA7VOBXA",172,0)
 . S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBXA",173,0)
 . I $G(LA7INTYP)=30 D
"RTN","LA7VOBXA",174,0)
 . . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Y
"RTN","LA7VOBXA",175,0)
 . . S $P(LA7Y,$E(LA7ECH,1),3)="L"
"RTN","LA7VOBXA",176,0)
 ;
"RTN","LA7VOBXA",177,0)
 ; Build sequence using LOINC codes only
"RTN","LA7VOBXA",178,0)
 ; LOINC code/code name/"LN"
"RTN","LA7VOBXA",179,0)
 I $G(LA764061) D
"RTN","LA7VOBXA",180,0)
 . N LA7IENS,LA7X,LA7Z
"RTN","LA7VOBXA",181,0)
 . S LA7IENS=LA764061_","
"RTN","LA7VOBXA",182,0)
 . D GETS^DIQ(64.061,LA7IENS,"1;8","E","LA7X")
"RTN","LA7VOBXA",183,0)
 . ; LOINC code
"RTN","LA7VOBXA",184,0)
 . S LA7Z=$G(LA7X(64.061,LA7IENS,1,"E"))
"RTN","LA7VOBXA",185,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",186,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z
"RTN","LA7VOBXA",187,0)
 . ; LOINC code name
"RTN","LA7VOBXA",188,0)
 . S LA7Z=$G(LA7X(64.061,LA7IENS,8,"E"))
"RTN","LA7VOBXA",189,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBXA",190,0)
 . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z
"RTN","LA7VOBXA",191,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)="LN"
"RTN","LA7VOBXA",192,0)
 ;
"RTN","LA7VOBXA",193,0)
 Q
"RTN","LA7VOBXA",194,0)
 ;
"RTN","LA7VOBXA",195,0)
 ;
"RTN","LA7VOBXA",196,0)
OBX7 ; Build OBX-7 sequence - Reference range
"RTN","LA7VOBXA",197,0)
 ; Removes leading and trailing quote marks ("").
"RTN","LA7VOBXA",198,0)
 ;
"RTN","LA7VOBXA",199,0)
 S LA7Y=""
"RTN","LA7VOBXA",200,0)
 ;
"RTN","LA7VOBXA",201,0)
 I $G(LA7LOW)'="" D
"RTN","LA7VOBXA",202,0)
 . S LA7LOW=$$TRIM^XLFSTR(LA7LOW,"RL","""")
"RTN","LA7VOBXA",203,0)
 . I LA7LOW?1A.E S LA7Y=LA7Y_LA7LOW Q  ; alphabetic value
"RTN","LA7VOBXA",204,0)
 . I $G(LA7HIGH)="",$E(LA7LOW)'=">" S LA7Y=">"
"RTN","LA7VOBXA",205,0)
 . S LA7Y=LA7Y_LA7LOW
"RTN","LA7VOBXA",206,0)
 ;
"RTN","LA7VOBXA",207,0)
 I $G(LA7HIGH)'="" D
"RTN","LA7VOBXA",208,0)
 . S LA7HIGH=$$TRIM^XLFSTR(LA7HIGH,"RL","""")
"RTN","LA7VOBXA",209,0)
 . I LA7HIGH?1A.E S LA7Y=LA7Y_LA7HIGH Q  ; alphabetic value
"RTN","LA7VOBXA",210,0)
 . I $G(LA7LOW)="" D  Q
"RTN","LA7VOBXA",211,0)
 . . I $E(LA7HIGH)'="<" S LA7Y="<"
"RTN","LA7VOBXA",212,0)
 . . S LA7Y=LA7Y_LA7HIGH
"RTN","LA7VOBXA",213,0)
 . S LA7Y=LA7Y_"-"_LA7HIGH
"RTN","LA7VOBXA",214,0)
 ;
"RTN","LA7VOBXA",215,0)
 S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBXA",216,0)
 ;
"RTN","LA7VOBXA",217,0)
 Q
"RTN","LA7VOBXA",218,0)
 ;
"RTN","LA7VOBXA",219,0)
 ;
"RTN","LA7VOBXA",220,0)
OBX17 ; Build OBX-17 sequence - Observation method field
"RTN","LA7VOBXA",221,0)
 ;
"RTN","LA7VOBXA",222,0)
 ; method suffix code maybe stored without leading decimal,
"RTN","LA7VOBXA",223,0)
 ;  add "." back for lookup, also add trailing space for lookup in x-ref.
"RTN","LA7VOBXA",224,0)
 I LA7VAL>1 S LA7VAL="."_LA7VAL
"RTN","LA7VOBXA",225,0)
 S LA7X=$O(^LAB(64.2,"C",LA7VAL_" ",0)),LA7Y=""
"RTN","LA7VOBXA",226,0)
 I LA7X D
"RTN","LA7VOBXA",227,0)
 . S LA7X(.01)=$P($G(^LAB(64.2,LA7X,0)),"^")
"RTN","LA7VOBXA",228,0)
 . S LA7X(.01)=$$CHKDATA^LA7VHLU3(LA7X(.01),LA7FS_LA7ECH)
"RTN","LA7VOBXA",229,0)
 . S LA7Y=LA7VAL_$E(LA7ECH)_LA7X(.01)_$E(LA7ECH)_"99VA64.2"
"RTN","LA7VOBXA",230,0)
 . ;S LA7X=$$GET1^DID(64.2,"","","PACKAGE REVISION DATA")
"RTN","LA7VOBXA",231,0)
 . ;S $P(LA7Y,$E(LA7ECH,1),7)=LA7X
"RTN","LA7VOBXA",232,0)
 ;
"RTN","LA7VOBXA",233,0)
 ; Send NLT result code
"RTN","LA7VOBXA",234,0)
 I LA7NLT'="" D
"RTN","LA7VOBXA",235,0)
 . S LA764=$O(^LAM("E",LA7NLT,0)),LA7Z=""
"RTN","LA7VOBXA",236,0)
 . I LA764 S LA7X=$P($G(^LAM(LA764,0)),"^")
"RTN","LA7VOBXA",237,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VOBXA",238,0)
 . S $P(LA7Z,$E(LA7ECH,1),1)=LA7NLT
"RTN","LA7VOBXA",239,0)
 . S $P(LA7Z,$E(LA7ECH,1),2)=LA7X
"RTN","LA7VOBXA",240,0)
 . S $P(LA7Z,$E(LA7ECH,1),3)="99VA64"
"RTN","LA7VOBXA",241,0)
 . ;S LA7X=$$GET1^DID(64,"","","PACKAGE REVISION DATA")
"RTN","LA7VOBXA",242,0)
 . ;S $P(LA7Z,$E(LA7ECH,1),7)=LA7X
"RTN","LA7VOBXA",243,0)
 . I LA7Y'="" S LA7Y=LA7Y_$E(LA7ECH,2)
"RTN","LA7VOBXA",244,0)
 . S LA7Y=LA7Y_LA7Z
"RTN","LA7VOBXA",245,0)
 ;
"RTN","LA7VOBXA",246,0)
 Q
"RTN","LA7VOBXA",247,0)
 ;
"RTN","LA7VOBXA",248,0)
 ;
"RTN","LA7VOBXA",249,0)
OBX18 ; Build OBX-18 sequence - Equipment entity identifier field
"RTN","LA7VOBXA",250,0)
 ;
"RTN","LA7VOBXA",251,0)
 S LA7X="",LA7J=$L(LA7VAL,"!")
"RTN","LA7VOBXA",252,0)
 F LA7I=1:1:LA7J D
"RTN","LA7VOBXA",253,0)
 . S LA7Y=$P(LA7VAL,"!",LA7I)
"RTN","LA7VOBXA",254,0)
 . I LA7Y="" Q
"RTN","LA7VOBXA",255,0)
 . S $P(LA7X,$E(LA7ECH,1),LA7I)=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)
"RTN","LA7VOBXA",256,0)
 ;
"RTN","LA7VOBXA",257,0)
 Q
"RTN","LA7VORM")
0^24^B73850639
"RTN","LA7VORM",1,0)
LA7VORM ;DALOI/DLR - LAB ORM (Order) message PROCESSOR ;06/08/09  17:35
"RTN","LA7VORM",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,42,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VORM",3,0)
 ;
"RTN","LA7VORM",4,0)
 ;
"RTN","LA7VORM",5,0)
IN ;
"RTN","LA7VORM",6,0)
 D ORM^LA7VHL
"RTN","LA7VORM",7,0)
 Q
"RTN","LA7VORM",8,0)
 ;
"RTN","LA7VORM",9,0)
 ;
"RTN","LA7VORM",10,0)
OBR ;;OBR
"RTN","LA7VORM",11,0)
 N LA760,LA76205,LA7629,LA7ACC,LA7CEDT,LA7CSCS,LA7CSNM,LA7CSTY,LA7DCODE,LA7HSITE,LA7I,LA7NCS,LA7OBR4,LA7OK,LA7OTST,LA7OTSTN,LA7PF1,LA7PF2,LA7RCI,LA7SPCS,LA7SPNM,LA7SPTY,LA7X,LA7Y,RTST,RTSTN
"RTN","LA7VORM",12,0)
 ;
"RTN","LA7VORM",13,0)
 ; OBR Set ID
"RTN","LA7VORM",14,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VORM",15,0)
 ;
"RTN","LA7VORM",16,0)
 ; Placer order number
"RTN","LA7VORM",17,0)
 S LA7SID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VORM",18,0)
 I LA7SID'="" D
"RTN","LA7VORM",19,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7SID,0)
"RTN","LA7VORM",20,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7SID,0)
"RTN","LA7VORM",21,0)
 ;
"RTN","LA7VORM",22,0)
 ; Universal service ID
"RTN","LA7VORM",23,0)
 S (LA7OBR4,LA7OTSTN)=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VORM",24,0)
 D FLD2ARR^LA7VHLU7(.LA7OTSTN,LA7FS_LA7ECH)
"RTN","LA7VORM",25,0)
 ;
"RTN","LA7VORM",26,0)
 I $G(LA7OTSTN(1))="" D  Q
"RTN","LA7VORM",27,0)
 . N LA7X
"RTN","LA7VORM",28,0)
 . S LA7X="PID-"_LA7SPID_"/OBR-"_LA7SOBR
"RTN","LA7VORM",29,0)
 . S LA7AERR=$$CREATE^LA7LOG(26,1)
"RTN","LA7VORM",30,0)
 ;
"RTN","LA7VORM",31,0)
 S LA7OTST=$G(LA7OTSTN(2))
"RTN","LA7VORM",32,0)
 I LA7OTST="" S LA7OTST=$G(LA7OTSTN(5))
"RTN","LA7VORM",33,0)
 S RTSTN=$G(LA7OTSTN(4)),RTST=$G(LA7OTSTN(5))
"RTN","LA7VORM",34,0)
 ;
"RTN","LA7VORM",35,0)
 ; Non-VA system, not using NLT codes/file #60 tests
"RTN","LA7VORM",36,0)
 I LA7OTSTN(3)'="99VA64" D
"RTN","LA7VORM",37,0)
 . I RTSTN="" S RTSTN=LA7OTSTN(1)
"RTN","LA7VORM",38,0)
 . I RTST="" S RTST=LA7OTSTN(2)
"RTN","LA7VORM",39,0)
 ;
"RTN","LA7VORM",40,0)
 ; No ORC segment
"RTN","LA7VORM",41,0)
 I LA7SEQ<20 S LA7AERR=$$CREATE^LA7LOG(29,1) Q
"RTN","LA7VORM",42,0)
 ;
"RTN","LA7VORM",43,0)
 ; Missing patient name
"RTN","LA7VORM",44,0)
 I $G(LA7PNM)="" S LA7AERR=$$CREATE^LA7LOG(30,1) Q
"RTN","LA7VORM",45,0)
 ;
"RTN","LA7VORM",46,0)
 ; Specimen collection date/time
"RTN","LA7VORM",47,0)
 S LA7CDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS),"L")
"RTN","LA7VORM",48,0)
 ;
"RTN","LA7VORM",49,0)
 ; Specimen end collection date/time (timed collection)
"RTN","LA7VORM",50,0)
 S LA7CEDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,9,LA7FS),LA7CS),"L")
"RTN","LA7VORM",51,0)
 ;
"RTN","LA7VORM",52,0)
 ; Collection volume
"RTN","LA7VORM",53,0)
 S LA7VOL=""
"RTN","LA7VORM",54,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VORM",55,0)
 I $P(LA7X,LA7CS)'="" D
"RTN","LA7VORM",56,0)
 . S $P(LA7VOL,"^")=$P(LA7X,LA7CS) ; volume
"RTN","LA7VORM",57,0)
 . S $P(LA7VOL,"^",2)=$P(LA7X,LA7CS,2) ; volume units
"RTN","LA7VORM",58,0)
 . S $P(LA7VOL,"^",3)=$P(LA7X,LA7CS,3) ; volume coding system
"RTN","LA7VORM",59,0)
 ;
"RTN","LA7VORM",60,0)
 ; Specimen action code
"RTN","LA7VORM",61,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS),LA7SAC=""
"RTN","LA7VORM",62,0)
 I LA7X="A" S LA7SAC="Add ordered tests to the existing specimen"
"RTN","LA7VORM",63,0)
 I LA7X="G" S LA7SAC="Generated order; reflex order"
"RTN","LA7VORM",64,0)
 ;
"RTN","LA7VORM",65,0)
 ; Danger code
"RTN","LA7VORM",66,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,13,LA7FS),LA7CS,2)
"RTN","LA7VORM",67,0)
 S LA7DCODE=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORM",68,0)
 I LA7DCODE'="" D
"RTN","LA7VORM",69,0)
 . S LA7DCODE=$$TRIM^XLFSTR(LA7DCODE,"RL"," ")
"RTN","LA7VORM",70,0)
 . S LA7DCODE="Danger Code - "_LA7DCODE
"RTN","LA7VORM",71,0)
 ;
"RTN","LA7VORM",72,0)
 ; Relevant clinical information
"RTN","LA7VORM",73,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,14,LA7FS)
"RTN","LA7VORM",74,0)
 S LA7RCI=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORM",75,0)
 I LA7RCI'="" D
"RTN","LA7VORM",76,0)
 . S LA7RCI=$$TRIM^XLFSTR(LA7RCI,"RL"," ")
"RTN","LA7VORM",77,0)
 . S LA7RCI="Relevant clinical information - "_LA7RCI
"RTN","LA7VORM",78,0)
 ;
"RTN","LA7VORM",79,0)
 ; Specimen source -  specimen code - name of specimen coding system, move SCT code system to primary if needed
"RTN","LA7VORM",80,0)
 K LA7X,LA7Y
"RTN","LA7VORM",81,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VORM",82,0)
 D FLD2ARR^LA7VHLU7(.LA7X,LA7FS_LA7ECH)
"RTN","LA7VORM",83,0)
 K LA7Y
"RTN","LA7VORM",84,0)
 M LA7Y=LA7X(1)
"RTN","LA7VORM",85,0)
 D CHKCDSYS^LA7SMU2(.LA7Y,.LA7SPTY,"SCT",LA7CS)
"RTN","LA7VORM",86,0)
 ;
"RTN","LA7VORM",87,0)
 ; Collection sample from body site, move SCT code system to primary if needed
"RTN","LA7VORM",88,0)
 K LA7Y
"RTN","LA7VORM",89,0)
 M LA7Y=LA7X(4)
"RTN","LA7VORM",90,0)
 D CHKCDSYS^LA7SMU2(.LA7Y,.LA7CSTY,"SCT",LA7CS)
"RTN","LA7VORM",91,0)
 K LA7X,LA7Y
"RTN","LA7VORM",92,0)
 ;
"RTN","LA7VORM",93,0)
 ; Placer's ordering provider (last name, first name, mi [id])
"RTN","LA7VORM",94,0)
 ; Only process if LA7POP from ORC-12 is blank.
"RTN","LA7VORM",95,0)
 I LA7POP="" D
"RTN","LA7VORM",96,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VORM",97,0)
 . S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VORM",98,0)
 . I LA7POP="^0^" S LA7POP=""
"RTN","LA7VORM",99,0)
 ;
"RTN","LA7VORM",100,0)
 ; Specimen urgency
"RTN","LA7VORM",101,0)
 S LA7UR=$P($$P^LA7VHLU(.LA7SEG,28,LA7FS),LA7CS,6)
"RTN","LA7VORM",102,0)
 ; If no urgency see if it came in ORC-7
"RTN","LA7VORM",103,0)
 I LA7UR="" S LA7UR=$G(LA7OUR)
"RTN","LA7VORM",104,0)
 ;
"RTN","LA7VORM",105,0)
 ; Look for receiving facility in OBR, then use receiving facility from MSH
"RTN","LA7VORM",106,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,35,LA7FS),LA7CS,7)
"RTN","LA7VORM",107,0)
 S LA7HSITE=$$FINDSITE^LA7VHLU2(LA7X,1,1)
"RTN","LA7VORM",108,0)
 I LA7HSITE'>0 S LA7HSITE=$$FINDSITE^LA7VHLU2(LA7RFAC,1,0)
"RTN","LA7VORM",109,0)
 ;
"RTN","LA7VORM",110,0)
 ; Find an "active" shipping configuration for this pair.
"RTN","LA7VORM",111,0)
 S (LA7629,LA7X)=0
"RTN","LA7VORM",112,0)
 I LA7CSITE,LA7HSITE D
"RTN","LA7VORM",113,0)
 . F  S LA7X=$O(^LAHM(62.9,"CH",LA7CSITE,LA7HSITE,LA7X)) Q:'LA7X  I $P($G(^LAHM(62.9,LA7X,0)),"^",4) S LA7629=LA7X Q
"RTN","LA7VORM",114,0)
 ; Log error and quit if no active shipping configuration identified
"RTN","LA7VORM",115,0)
 I 'LA7629 S LA7AERR=$$CREATE^LA7LOG(39,1) Q
"RTN","LA7VORM",116,0)
 ;
"RTN","LA7VORM",117,0)
 S LA7Y=$$DTTO^LA7SMU2(LA7629,.LA7OTSTN,.LA7SPTY,LA7UR,.LA7CSTY),LA7OK=1
"RTN","LA7VORM",118,0)
 S LA760=$P(LA7Y,"^"),LA761=$P(LA7Y,"^",2),LA762=$P(LA7Y,"^",3),LA76205=$P(LA7Y,"^",4)
"RTN","LA7VORM",119,0)
 I $P(LA7Y,"^",5)'="" S LA7OTSTN=$P(LA7Y,"^",5),LA7OTST=$P(LA7Y,"^",6)
"RTN","LA7VORM",120,0)
 F LA7I=1:1:4 I '$P(LA7Y,"^",LA7I) D
"RTN","LA7VORM",121,0)
 . I LA7I>1,LA760,"MISPCYEM"[$P(^LAB(60,LA760,0),"^",4) Q
"RTN","LA7VORM",122,0)
 . S LA7X="No local "_$P("lab test^topography^collection sample^urgency","^",LA7I)_" mapped.",LA7OK=0
"RTN","LA7VORM",123,0)
 . N LA7I,LA7Y
"RTN","LA7VORM",124,0)
 . D CREATE^LA7LOG(47)
"RTN","LA7VORM",125,0)
 I 'LA7OK S LA7AERR="47^A VistA lab test has not been defined for order code "_LA7OTSTN_" and specimen/collection sample combination"
"RTN","LA7VORM",126,0)
 ;
"RTN","LA7VORM",127,0)
 ; Placer fields 1 & 2
"RTN","LA7VORM",128,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VORM",129,0)
 I LA7X'="",LA7X[LA7CS S LA7X=$TR(LA7X,LA7CS,"^")
"RTN","LA7VORM",130,0)
 S LA7PF1=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORM",131,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,20,LA7FS)
"RTN","LA7VORM",132,0)
 I LA7X'="",LA7X[LA7CS S LA7X=$TR(LA7X,LA7CS,"^")
"RTN","LA7VORM",133,0)
 S LA7PF2=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORM",134,0)
 S LA7ACC=$P(LA7PF2,"^",6)
"RTN","LA7VORM",135,0)
 ;
"RTN","LA7VORM",136,0)
 ; New order - add to LAB PENDING ORDERS file #69.6
"RTN","LA7VORM",137,0)
 I LA7OTYPE="NW",LA7OK D NW
"RTN","LA7VORM",138,0)
 ;
"RTN","LA7VORM",139,0)
 Q
"RTN","LA7VORM",140,0)
 ;
"RTN","LA7VORM",141,0)
NW ; Create new order in LAB PENDING ORDERS file #69.6
"RTN","LA7VORM",142,0)
 ;
"RTN","LA7VORM",143,0)
 N FDA,I,LA76964,LA7DIE,LA7I,LA7IEN,LA7PATID,LA7SSITE,LA7STAT,LA7WP
"RTN","LA7VORM",144,0)
 ;
"RTN","LA7VORM",145,0)
 ; Get lock on 69.6
"RTN","LA7VORM",146,0)
 ;L +^LRO(69.6,0):99999
"RTN","LA7VORM",147,0)
 D LOCK^DILF("^LRO(69.6,0)")
"RTN","LA7VORM",148,0)
 I '$T S LA7AERR=$$CREATE^LA7LOG(31,1) Q
"RTN","LA7VORM",149,0)
 ;
"RTN","LA7VORM",150,0)
 S LA7696=$O(^LRO(69.6,"AD",$S($P(LA7SM,"^",2)'="":$P(LA7SM,"^",2),1:0),LA7SID,0))
"RTN","LA7VORM",151,0)
 ;
"RTN","LA7VORM",152,0)
 ; Find "In-Transit" status in #64.061
"RTN","LA7VORM",153,0)
 S LA7STAT=$$FIND1^DIC(64.061,"","OMX","In-Transit","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","LA7VORM",154,0)
 ;
"RTN","LA7VORM",155,0)
 ; Create entry in LAB PENDING ORDER ENTRY file, log error if not added
"RTN","LA7VORM",156,0)
 I $G(LA7696)'>0 D
"RTN","LA7VORM",157,0)
 . S FDA(1,69.6,"+1,",.01)=LA7PNM
"RTN","LA7VORM",158,0)
 . S FDA(1,69.6,"+1,",6)=LA7STAT
"RTN","LA7VORM",159,0)
 . D UPDATE^DIE("","FDA(1)","LA7IEN","LA7DIE(1)")
"RTN","LA7VORM",160,0)
 . S LA7696=LA7IEN(1)
"RTN","LA7VORM",161,0)
 . I LA7696<1 S LA7AERR=$$CREATE^LA7LOG(32,1)
"RTN","LA7VORM",162,0)
 ;
"RTN","LA7VORM",163,0)
 L -^LRO(69.6,0)
"RTN","LA7VORM",164,0)
 I LA7696<1 Q
"RTN","LA7VORM",165,0)
 ;
"RTN","LA7VORM",166,0)
 ;L +^LRO(69.6,LA7696):99999
"RTN","LA7VORM",167,0)
 D LOCK^DILF("^LRO(69.6,LA7696)")
"RTN","LA7VORM",168,0)
 I '$T D  Q  ;cannot get lock on ENTRY in 69.6
"RTN","LA7VORM",169,0)
 . S LA7AERR=$$CREATE^LA7LOG(33,1)
"RTN","LA7VORM",170,0)
 ;
"RTN","LA7VORM",171,0)
 ; Prevent duplication of tests
"RTN","LA7VORM",172,0)
 I $D(^LRO(69.6,LA7696,2,"C",LA7OTSTN)) D UNLOCK Q
"RTN","LA7VORM",173,0)
 ;
"RTN","LA7VORM",174,0)
 ; Determine entry in INSTITUTION file (#4) that's the sending site.
"RTN","LA7VORM",175,0)
 S LA7SSITE=$$FINDSITE^LA7VHLU2(LA7SFAC,2,0)
"RTN","LA7VORM",176,0)
 ;
"RTN","LA7VORM",177,0)
 ; Patient id to store with order
"RTN","LA7VORM",178,0)
 S LA7PATID=LA7SSN
"RTN","LA7VORM",179,0)
 I LA7PATID="" D
"RTN","LA7VORM",180,0)
 . S LA7PATID=$P($G(LA7PTID3(1)),$E(LA7ECH))
"RTN","LA7VORM",181,0)
 . I LA7PATID'="" Q
"RTN","LA7VORM",182,0)
 . I LA7PTID4'="" S LA7PATID=$P($P(LA7PTID4,$E(LA7ECH,2)),$E(LA7ECH))
"RTN","LA7VORM",183,0)
 . I LA7PATID'="" Q
"RTN","LA7VORM",184,0)
 . I LA7PTID2'="" S LA7PATID=$P(LA7PTID2,$E(LA7ECH))
"RTN","LA7VORM",185,0)
 ;
"RTN","LA7VORM",186,0)
 S FDA(2,69.6,LA7696_",",.01)=LA7PNM
"RTN","LA7VORM",187,0)
 S FDA(2,69.6,LA7696_",",.02)=LA7SEX
"RTN","LA7VORM",188,0)
 S FDA(2,69.6,LA7696_",",.03)=LA7DOB
"RTN","LA7VORM",189,0)
 I $G(LA7PRACE)'="" S FDA(2,69.6,LA7696_",",.06)=LA7PRACE
"RTN","LA7VORM",190,0)
 S FDA(2,69.6,LA7696_",",.09)=LA7PATID
"RTN","LA7VORM",191,0)
 S FDA(2,69.6,LA7696_",",1)=LA7SSITE
"RTN","LA7VORM",192,0)
 S FDA(2,69.6,LA7696_",",2)=LA7CSITE
"RTN","LA7VORM",193,0)
 S FDA(2,69.6,LA7696_",",3)=LA7SID
"RTN","LA7VORM",194,0)
 S FDA(2,69.6,LA7696_",",3.2)=LA7ACC
"RTN","LA7VORM",195,0)
 I LA761 S FDA(2,69.6,LA7696_",",4)=LA761
"RTN","LA7VORM",196,0)
 I LA762 S FDA(2,69.6,LA7696_",",5)=LA762
"RTN","LA7VORM",197,0)
 S FDA(2,69.6,LA7696_",",10)=LA7ORDT
"RTN","LA7VORM",198,0)
 S FDA(2,69.6,LA7696_",",11)=LA7CDT
"RTN","LA7VORM",199,0)
 S FDA(2,69.6,LA7696_",",11.1)=LA7CEDT
"RTN","LA7VORM",200,0)
 S FDA(2,69.6,LA7696_",",14)=LA7MEDT
"RTN","LA7VORM",201,0)
 S FDA(2,69.6,LA7696_",",17)=LA7MID
"RTN","LA7VORM",202,0)
 I $P(LA7SM,"^",2)'="" S LA7X=$P(LA7SM,"^",2)
"RTN","LA7VORM",203,0)
 E  S LA7X=LA7SFAC_"-"_$E($$FMTHL7^XLFDT(LA7MEDT),1,8)
"RTN","LA7VORM",204,0)
 S FDA(2,69.6,LA7696_",",18)=LA7X
"RTN","LA7VORM",205,0)
 S FDA(2,69.6,LA7696_",",700)=LA7FS_LA7ECH
"RTN","LA7VORM",206,0)
 I LA7PTID3'="" S FDA(2,69.6,LA7696_",",700.02)=LA7PTID3
"RTN","LA7VORM",207,0)
 I LA7PTID4'="" S FDA(2,69.6,LA7696_",",700.04)=LA7PTID4
"RTN","LA7VORM",208,0)
 D FILE^DIE("","FDA(2)","LA7DIE(2)")
"RTN","LA7VORM",209,0)
 ;
"RTN","LA7VORM",210,0)
 ; Add test to order
"RTN","LA7VORM",211,0)
 S FDA(3,69.64,"+2,"_LA7696_",",.01)=LA7OTST
"RTN","LA7VORM",212,0)
 S FDA(3,69.64,"+2,"_LA7696_",",1)=LA7OTSTN
"RTN","LA7VORM",213,0)
 S FDA(3,69.64,"+2,"_LA7696_",",2)=RTST
"RTN","LA7VORM",214,0)
 S FDA(3,69.64,"+2,"_LA7696_",",3)=RTSTN
"RTN","LA7VORM",215,0)
 S FDA(3,69.64,"+2,"_LA7696_",",4)=LA7UR
"RTN","LA7VORM",216,0)
 I LA760 S FDA(3,69.64,"+2,"_LA7696_",",11)=LA760
"RTN","LA7VORM",217,0)
 I LA76205 S FDA(3,69.64,"+2,"_LA7696_",",12)=LA76205
"RTN","LA7VORM",218,0)
 I $P(LA7POP,"^",3)'="" S FDA(3,69.64,"+2,"_LA7696_",",13)=$P(LA7POP,"^",3)
"RTN","LA7VORM",219,0)
 I LA7OBR4'="" S FDA(3,69.64,"+2,"_LA7696_",",700.04)=LA7OBR4
"RTN","LA7VORM",220,0)
 I LA7PF1'="" S FDA(3,69.64,"+2,"_LA7696_",",700.18)=LA7PF1
"RTN","LA7VORM",221,0)
 I LA7PF2'="" S FDA(3,69.64,"+2,"_LA7696_",",700.19)=LA7PF2
"RTN","LA7VORM",222,0)
 D UPDATE^DIE("","FDA(3)","LA76964","LA7DIE(3)")
"RTN","LA7VORM",223,0)
 ;
"RTN","LA7VORM",224,0)
 ; If no test status - set to In-transit.
"RTN","LA7VORM",225,0)
 I $G(LA76964(2)),$P($G(^LRO(69.6,LA7696,2,LA76964(2),0)),"^",6)="" D
"RTN","LA7VORM",226,0)
 . S FDA(4,69.64,LA76964(2)_","_LA7696_",",5)=LA7STAT
"RTN","LA7VORM",227,0)
 . D FILE^DIE("","FDA(4)","LA7DIE(4)")
"RTN","LA7VORM",228,0)
 ;
"RTN","LA7VORM",229,0)
 ; Check for comments to store with order.
"RTN","LA7VORM",230,0)
 ; Begin sections with <space> to avoid FM word wrap.
"RTN","LA7VORM",231,0)
 S LA7I=1
"RTN","LA7VORM",232,0)
 I 'LA760 S LA7WP(LA7I,0)="For test "_LA7OTST
"RTN","LA7VORM",233,0)
 E  S LA7WP(LA7I,0)="For test "_$$GET1^DIQ(60,LA760_",",.01)
"RTN","LA7VORM",234,0)
 ;
"RTN","LA7VORM",235,0)
 I LA7SAC'="" S LA7I=LA7I+1,LA7WP(LA7I,0)=" "_LA7SAC
"RTN","LA7VORM",236,0)
 ;
"RTN","LA7VORM",237,0)
 I LA7DCODE'="" F I=1:250:$L(LA7DCODE) S LA7I=LA7I+1,LA7WP(LA7I,0)=$S(I=1:" ",1:"")_$E(LA7DCODE,I,I+249)
"RTN","LA7VORM",238,0)
 ;
"RTN","LA7VORM",239,0)
 I LA7RCI'="" F I=1:250:$L(LA7RCI) S LA7I=LA7I+1,LA7WP(LA7I,0)=$S(I=1:" ",1:"")_$E(LA7RCI,I,I+249)
"RTN","LA7VORM",240,0)
 ;
"RTN","LA7VORM",241,0)
 I LA760,"MISPCYEM"[$P(^LAB(60,LA760,0),"^",4) D
"RTN","LA7VORM",242,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Specimen source: "
"RTN","LA7VORM",243,0)
 . F I=1,4 I $G(LA7SPTY(I))'="" S LA7WP(LA7I,0)=LA7WP(LA7I,0)_$G(LA7SPTY(I+1))_" ["_$G(LA7SPTY(I))_":"_$G(LA7SPTY(I+2))_"]"_$S(I=1:" ; ",1:"")
"RTN","LA7VORM",244,0)
 . S LA7I=LA7I+1,LA7WP(LA7I,0)=" Collection sample: "
"RTN","LA7VORM",245,0)
 . F I=1,4 I $G(LA7CSTY(I))'="" S LA7WP(LA7I,0)=LA7WP(LA7I,0)_$G(LA7CSTY(I+1))_" ["_$G(LA7CSTY(I))_":"_$G(LA7CSTY(I+2))_"]"_$S(I=1:" ; ",1:"")
"RTN","LA7VORM",246,0)
 ;
"RTN","LA7VORM",247,0)
 I $O(LA7WP(1)) D WP^DIE(69.6,LA7696_",",99,"A","LA7WP","LA7DIE(99)")
"RTN","LA7VORM",248,0)
 ;
"RTN","LA7VORM",249,0)
 D CLEAN^DILF
"RTN","LA7VORM",250,0)
 D UNLOCK
"RTN","LA7VORM",251,0)
 Q
"RTN","LA7VORM",252,0)
 ;
"RTN","LA7VORM",253,0)
UNLOCK ; unlock entry in file #69.6
"RTN","LA7VORM",254,0)
 L -^LRO(69.6,LA7696)
"RTN","LA7VORM",255,0)
 Q
"RTN","LA7VORM1")
0^31^B84130620
"RTN","LA7VORM1",1,0)
LA7VORM1 ;DALOI/DLR - LAB ORM (Order) message builder ;06/19/12  16:19
"RTN","LA7VORM1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,46,61,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORM1",3,0)
 ;
"RTN","LA7VORM1",4,0)
BUILD(LA7628) ;
"RTN","LA7VORM1",5,0)
 ; Call with LA7628 = ien of entry in file #62.8 Shipping Manifest
"RTN","LA7VORM1",6,0)
 ;
"RTN","LA7VORM1",7,0)
 N DFN,DIC,ECNT,EID,GBL,HL,HLCOMP,HLFS,HLQ,HLSUB,I,INT
"RTN","LA7VORM1",8,0)
 N LA,LA7101,LA760,LA76248,LA76249,LA762801,LA7629,LA7ECH,LA7ERR,LA7FS,LA7HDR,LA7ID,LA7INTYP,LA7MID,LA7NVAF,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7SMSG,LA7UID,LA7V,LA7VIEN,LA7X,LAEVNT
"RTN","LA7VORM1",9,0)
 N LRAA,LRACC,LRAD,LRAN,LRDFN,LRI,LTST,NLT,NLTIEN,NTST,ORUID,PCNT,RUID,SHP,SHPC,SITE,SNIEN,TIEN,X,Y
"RTN","LA7VORM1",10,0)
 ;
"RTN","LA7VORM1",11,0)
 I $G(LA7628)<1!('$D(^LAHM(62.8,+$G(LA7628),0))) D  Q
"RTN","LA7VORM1",12,0)
 . ; Need to add error logging for manifest not found.
"RTN","LA7VORM1",13,0)
 . D EXIT
"RTN","LA7VORM1",14,0)
 ;
"RTN","LA7VORM1",15,0)
 S GBL="^TMP(""HLS"","_$J_")",ECNT=1
"RTN","LA7VORM1",16,0)
 S LA7628(0)=$G(^LAHM(62.8,LA7628,0))
"RTN","LA7VORM1",17,0)
 S LA7629=$P(LA7628(0),U,2)
"RTN","LA7VORM1",18,0)
 S LA7629(0)=$G(^LAHM(62.9,LA7629,0))
"RTN","LA7VORM1",19,0)
 S LA76248=+$P(LA7629(0),"^",7)
"RTN","LA7VORM1",20,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VORM1",21,0)
 I '$P(LA76248(0),"^",3) D EXIT Q  ; not active
"RTN","LA7VORM1",22,0)
 ;
"RTN","LA7VORM1",23,0)
 S LA7V("INST")=$P(LA7629(0),U,11)
"RTN","LA7VORM1",24,0)
 Q:LA7V("INST")=$P(LA7629(0),U,6)  ;Same system shipment
"RTN","LA7VORM1",25,0)
 ;
"RTN","LA7VORM1",26,0)
 S LA7NVAF=$$NVAF^LA7VHLU2(+LA7V("INST")),SITE=""
"RTN","LA7VORM1",27,0)
 S SITE=$$ID^XUAF4($S(LA7NVAF=0:"VASTANUM",LA7NVAF=1:"DMIS",LA7NVAF=2:"ASUFAC",1:"VASTANUM"),+$P(LA7629(0),U,11))
"RTN","LA7VORM1",28,0)
 S LA7V("NON")=$P(LA7629(0),U,12)
"RTN","LA7VORM1",29,0)
 I LA7V("NON")'="" S SITE=LA7V("NON")
"RTN","LA7VORM1",30,0)
 ;
"RTN","LA7VORM1",31,0)
 S LA7X=$$NVAF^LA7VHLU2(+$P(LA7629(0),U,2))
"RTN","LA7VORM1",32,0)
 S LA7V("CLNT")=$$ID^XUAF4($S(LA7X=0:"VASTANUM",LA7X=1:"DMIS",LA7X=2:"ASUFAC",1:"VASTANUM"),+$P(LA7629(0),U,2))
"RTN","LA7VORM1",33,0)
 S $P(LA7V("CLNT"),U,2)=$P($$NS^XUAF4(+$P(LA7629(0),U,2)),"^")
"RTN","LA7VORM1",34,0)
 ;
"RTN","LA7VORM1",35,0)
 S LA7X=$$NVAF^LA7VHLU2(+$P(LA7629(0),U,3))
"RTN","LA7VORM1",36,0)
 S LA7V("HOST")=$$ID^XUAF4($S(LA7X=0:"VASTANUM",LA7X=1:"DMIS",LA7X=2:"ASUFAC",1:"VASTANUM"),+$P(LA7629(0),U,3))
"RTN","LA7VORM1",37,0)
 S $P(LA7V("HOST"),U,2)=$P($$NS^XUAF4(+$P(LA7629(0),U,3)),"^")
"RTN","LA7VORM1",38,0)
 ;
"RTN","LA7VORM1",39,0)
 ; Assuming the receiving institution is the primary site (site with the computer system)
"RTN","LA7VORM1",40,0)
 ;
"RTN","LA7VORM1",41,0)
 ; Sort tests by patient,UID,test - only need to build one PID, PV1 per patient
"RTN","LA7VORM1",42,0)
 ; ^TMP("LA7628",$J, LRDFN, accession UID, ien of shipping manifest specimen entry)
"RTN","LA7VORM1",43,0)
 K ^TMP("LA7628",$J),^TMP("LA7SM",$J)
"RTN","LA7VORM1",44,0)
 S LA762801=0
"RTN","LA7VORM1",45,0)
 F  S LA762801=$O(^LAHM(62.8,LA7628,10,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",46,0)
 . S X(0)=$G(^LAHM(62.8,LA7628,10,LA762801,0))
"RTN","LA7VORM1",47,0)
 . I $P(X(0),"^",8)=0 Q  ; Removed from manifest
"RTN","LA7VORM1",48,0)
 . ;
"RTN","LA7VORM1",49,0)
 . ; Check to see if agency associated with site
"RTN","LA7VORM1",50,0)
 . ; has LEDI HL7 messaging enabled for this subscript.
"RTN","LA7VORM1",51,0)
 . ; Don't build it to TMP if not enabled.
"RTN","LA7VORM1",52,0)
 . ;
"RTN","LA7VORM1",53,0)
 . N LRUID,LRY,LRAA,LRSS,LAHLSTAT
"RTN","LA7VORM1",54,0)
 . S LRUID=$P(X(0),"^",5)
"RTN","LA7VORM1",55,0)
 . S LRY=$$CHECKUID^LRWU4(LRUID,"")
"RTN","LA7VORM1",56,0)
 . I 'LRY Q
"RTN","LA7VORM1",57,0)
 . S LRAA=$P(LRY,"^",2)
"RTN","LA7VORM1",58,0)
 . S LRSS=$$GET1^DIQ(68,LRAA,.02,"I")
"RTN","LA7VORM1",59,0)
 . S LAHLSTAT=$$HLSTATUS^LA7VMSG("ORM",+$P(LA7629(0),U,3),LRSS)
"RTN","LA7VORM1",60,0)
 . I 'LAHLSTAT Q
"RTN","LA7VORM1",61,0)
 . ;
"RTN","LA7VORM1",62,0)
 . I $P(X(0),"^"),$P(X(0),"^",5)'="" D
"RTN","LA7VORM1",63,0)
 . . S ^TMP("LA7628",$J,+$P(X(0),"^"),$P(X(0),"^",5),LA762801)=""
"RTN","LA7VORM1",64,0)
 . . S ^TMP("LA7SM",$J,+$P(X(0),"^",7),+$P(X(0),"^",9),$P(X(0),"^",5),LA762801)=""
"RTN","LA7VORM1",65,0)
 K LA762801
"RTN","LA7VORM1",66,0)
 ;
"RTN","LA7VORM1",67,0)
 ; Setup item identifiers for messages
"RTN","LA7VORM1",68,0)
 D ITEM
"RTN","LA7VORM1",69,0)
 ;
"RTN","LA7VORM1",70,0)
 ; Nothing to send
"RTN","LA7VORM1",71,0)
 I '$D(^TMP("LA7628",$J)) D EXIT Q
"RTN","LA7VORM1",72,0)
 ;
"RTN","LA7VORM1",73,0)
 ; Set flag = 0 (multiple PID's/message - build one message)
"RTN","LA7VORM1",74,0)
 ;            1 (one PID/message - build multiple messages)
"RTN","LA7VORM1",75,0)
 ;            2 (one ORC/message - build multiple messages)
"RTN","LA7VORM1",76,0)
 S LA7SMSG=+$P(LA76248(0),"^",8)
"RTN","LA7VORM1",77,0)
 ;
"RTN","LA7VORM1",78,0)
 ; Determine interface type
"RTN","LA7VORM1",79,0)
 S LA7INTYP=+$P(LA76248(0),"^",9)
"RTN","LA7VORM1",80,0)
 ;
"RTN","LA7VORM1",81,0)
 I LA7SMSG=0 D  Q:$G(HL)
"RTN","LA7VORM1",82,0)
 . D STARTMSG
"RTN","LA7VORM1",83,0)
 . I $G(HL) D EXIT
"RTN","LA7VORM1",84,0)
 ;
"RTN","LA7VORM1",85,0)
 S (LRDFN,LRI,LA7PIDSN)=0
"RTN","LA7VORM1",86,0)
 F  S LRDFN=$O(^TMP("LA7628",$J,LRDFN)) Q:'LRDFN  D  Q:$G(HL)
"RTN","LA7VORM1",87,0)
 . N LA7PID,LA7PV1
"RTN","LA7VORM1",88,0)
 . I LA7SMSG=1 D STARTMSG Q:$G(HL)
"RTN","LA7VORM1",89,0)
 . I LA7SMSG<2 D PID,PV1
"RTN","LA7VORM1",90,0)
 . S LA7UID=""
"RTN","LA7VORM1",91,0)
 . F  S LA7UID=$O(^TMP("LA7628",$J,LRDFN,LA7UID)) Q:LA7UID=""  D
"RTN","LA7VORM1",92,0)
 . . N LA76802,LA7ORC,X
"RTN","LA7VORM1",93,0)
 . . S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7VORM1",94,0)
 . . I $QS(X,3)'=LA7UID Q
"RTN","LA7VORM1",95,0)
 . . S LRAA=$QS(X,4),LRAD=$QS(X,5),LRAN=$QS(X,6)
"RTN","LA7VORM1",96,0)
 . . F I=0,.2,.3,3 S LA76802(I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,I))
"RTN","LA7VORM1",97,0)
 . . S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,0))
"RTN","LA7VORM1",98,0)
 . . I I>0 S LA76802(5)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,I,0))
"RTN","LA7VORM1",99,0)
 . . E  S LA76802(5)=""
"RTN","LA7VORM1",100,0)
 . . I LA7SMSG=2 D STARTMSG Q:$G(HL)  D PID,PV1
"RTN","LA7VORM1",101,0)
 . . S (LA7OBRSN,LA762801)=0
"RTN","LA7VORM1",102,0)
 . . F  S LA762801=$O(^TMP("LA7628",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",103,0)
 . . . N LA7OBR,I
"RTN","LA7VORM1",104,0)
 . . . F I=0,.1,1,2,5,"SCT" S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))
"RTN","LA7VORM1",105,0)
 . . . I $$CHKTST^LA7SMU(LA7628,LA762801)'=0 Q  ;deleted accession
"RTN","LA7VORM1",106,0)
 . . . D ORC,OBR^LA7VORM3,OBX^LA7VORM3,BLG
"RTN","LA7VORM1",107,0)
 . . I LA7SMSG=2 D SENDMSG
"RTN","LA7VORM1",108,0)
 . I LA7SMSG=1 D SENDMSG
"RTN","LA7VORM1",109,0)
 ;
"RTN","LA7VORM1",110,0)
 I LA7SMSG=0 D SENDMSG
"RTN","LA7VORM1",111,0)
 ;
"RTN","LA7VORM1",112,0)
 ;
"RTN","LA7VORM1",113,0)
EXIT ;
"RTN","LA7VORM1",114,0)
 K @GBL,^TMP("LA7628",$J),^TMP("LA7ITEM",$J),^TMP("LA7SM",$J)
"RTN","LA7VORM1",115,0)
 K DIC,DFN,EID,HL,HLCOMP,HLFS,HLQ,HLSUB,INT
"RTN","LA7VORM1",116,0)
 K LA760,LA7628,LA762801,LA7629
"RTN","LA7VORM1",117,0)
 K LA7ECH,LA7FS,LA7MID,LA7V,LA7HDR,LA7OBRSN,LA7OBXSN,LA7VIEN,LAEVNT
"RTN","LA7VORM1",118,0)
 K LRAA,LRACC,LRAD,LRAN,LRDFN,LRI
"RTN","LA7VORM1",119,0)
 K LTST,NLT,NLTIEN,PCNT,RUID,SNIEN,TIEN,X,Y,LA
"RTN","LA7VORM1",120,0)
 D KVAR^LRX
"RTN","LA7VORM1",121,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VORM1",122,0)
 Q
"RTN","LA7VORM1",123,0)
 ;
"RTN","LA7VORM1",124,0)
 ;
"RTN","LA7VORM1",125,0)
STARTMSG ; Create/initialize HL message
"RTN","LA7VORM1",126,0)
 ;
"RTN","LA7VORM1",127,0)
 K @GBL
"RTN","LA7VORM1",128,0)
 S (LA76249,LA7PIDSN)=0
"RTN","LA7VORM1",129,0)
 D STARTMSG^LA7VHLU("LA7V Order to "_SITE,.LA76249)
"RTN","LA7VORM1",130,0)
 D SETID^LA7VHLU1(LA76249,"","LA7V HOST "_SITE_"-O-"_$P($G(LA7628(0)),"^"),1)
"RTN","LA7VORM1",131,0)
 S LA7ID="LA7V HOST "_SITE_"-O-"_$P($G(LA7628(0)),"^")_"-"
"RTN","LA7VORM1",132,0)
 Q
"RTN","LA7VORM1",133,0)
 ;
"RTN","LA7VORM1",134,0)
 ;
"RTN","LA7VORM1",135,0)
SENDMSG ; File HL7 message with HL and LAB packages.
"RTN","LA7VORM1",136,0)
 ;
"RTN","LA7VORM1",137,0)
 N LA7DATA
"RTN","LA7VORM1",138,0)
 ; If no message to send then quit
"RTN","LA7VORM1",139,0)
 I '$D(^TMP("HLS",$J)) D  Q
"RTN","LA7VORM1",140,0)
 . N FDA,LA7ER
"RTN","LA7VORM1",141,0)
 . I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VORM1",142,0)
 . S FDA(1,62.49,LA76249_",",1)="O"
"RTN","LA7VORM1",143,0)
 . S FDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7VORM1",144,0)
 . D FILE^DIE("","FDA(1)","LA7ER(1)")
"RTN","LA7VORM1",145,0)
 . D CLEAN^DILF
"RTN","LA7VORM1",146,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VORM1",147,0)
 ;
"RTN","LA7VORM1",148,0)
 D GEN^LA7VHLU
"RTN","LA7VORM1",149,0)
 S LA7DATA="SM06"_"^"_$$NOW^XLFDT
"RTN","LA7VORM1",150,0)
 D SEUP^LA7SMU($P(LA7628(0),"^"),"1",LA7DATA)
"RTN","LA7VORM1",151,0)
 D UPDT6249
"RTN","LA7VORM1",152,0)
 ; Unlock entry
"RTN","LA7VORM1",153,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VORM1",154,0)
 Q
"RTN","LA7VORM1",155,0)
 ;
"RTN","LA7VORM1",156,0)
 ;
"RTN","LA7VORM1",157,0)
UPDT6249 ; update entry in 62.49
"RTN","LA7VORM1",158,0)
 ;
"RTN","LA7VORM1",159,0)
 N FDA,LA7ER
"RTN","LA7VORM1",160,0)
 ;
"RTN","LA7VORM1",161,0)
 I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VORM1",162,0)
 S FDA(1,62.49,LA76249_",",1)="O"
"RTN","LA7VORM1",163,0)
 ;
"RTN","LA7VORM1",164,0)
 ; Check for acknowledgment type and set status accordingly.
"RTN","LA7VORM1",165,0)
 ; If no commit/application ack then original mode(application ack)
"RTN","LA7VORM1",166,0)
 ; Check for commit ack when HL package sends these to application.
"RTN","LA7VORM1",167,0)
 I $P(^LAHM(62.49,LA76249,0),"^",3)'="E" D
"RTN","LA7VORM1",168,0)
 . I $G(LA7ERR) S FDA(1,62.49,LA76249_",",2)="E" Q
"RTN","LA7VORM1",169,0)
 . I $G(HL("APAT"))="",$G(HL("ACAT"))="" S FDA(1,62.49,LA76249_",",2)="A" Q
"RTN","LA7VORM1",170,0)
 . I $G(HL("APAT"))="AL" S FDA(1,62.49,LA76249_",",2)="A"
"RTN","LA7VORM1",171,0)
 . E  S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VORM1",172,0)
 I $G(HL("SAN"))'="" S FDA(1,62.49,LA76249_",",102)=HL("SAN")
"RTN","LA7VORM1",173,0)
 I $G(HL("SAF"))'="" S FDA(1,62.49,LA76249_",",103)=HL("SAF")
"RTN","LA7VORM1",174,0)
 I $G(HL("MTN"))'="" S FDA(1,62.49,LA76249_",",108)=HL("MTN")
"RTN","LA7VORM1",175,0)
 I $G(HL("PID"))'="" S FDA(1,62.49,LA76249_",",110)=HL("PID")
"RTN","LA7VORM1",176,0)
 I $G(HL("VER"))'="" S FDA(1,62.49,LA76249_",",111)=HL("VER")
"RTN","LA7VORM1",177,0)
 I $P($G(LA7MID),"^")'="" S FDA(1,62.49,LA76249_",",109)=$P(LA7MID,"^")
"RTN","LA7VORM1",178,0)
 I $P($G(LA7MID),"^",2) D
"RTN","LA7VORM1",179,0)
 . S FDA(1,62.49,LA76249_",",160)=$P(LA7MID,"^",2)
"RTN","LA7VORM1",180,0)
 . S FDA(1,62.49,LA76249_",",161)=$P(LA7MID,"^",3)
"RTN","LA7VORM1",181,0)
 D FILE^DIE("","FDA(1)","LA7ER(1)")
"RTN","LA7VORM1",182,0)
 D CLEAN^DILF
"RTN","LA7VORM1",183,0)
 D UPID^LA7VHLU1(LA76249)
"RTN","LA7VORM1",184,0)
 Q
"RTN","LA7VORM1",185,0)
 ;
"RTN","LA7VORM1",186,0)
 ;
"RTN","LA7VORM1",187,0)
PID ; Patient identification
"RTN","LA7VORM1",188,0)
 N X
"RTN","LA7VORM1",189,0)
 S LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7VORM1",190,0)
 D DEM^LRX
"RTN","LA7VORM1",191,0)
 I $G(PNM)'="" D SETID^LA7VHLU1(LA76249,"",PNM,0)
"RTN","LA7VORM1",192,0)
 D PID^LA7VPID(LRDFN,"",.LA7PID,.LA7PIDSN,.HL,"")
"RTN","LA7VORM1",193,0)
 ; DoD/CHCS facilities only use 1st repetition of PID-3.
"RTN","LA7VORM1",194,0)
 I LA7NVAF=1 D
"RTN","LA7VORM1",195,0)
 . S X=$P(LA7PID(0),LA7FS,4),X=$P(X,$E(LA7ECH,2))
"RTN","LA7VORM1",196,0)
 . S $P(LA7PID(0),LA7FS,4)=X
"RTN","LA7VORM1",197,0)
 D FILESEG^LA7VHLU(GBL,.LA7PID)
"RTN","LA7VORM1",198,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PID)
"RTN","LA7VORM1",199,0)
 Q
"RTN","LA7VORM1",200,0)
 ;
"RTN","LA7VORM1",201,0)
 ;
"RTN","LA7VORM1",202,0)
PV1 ; Location information
"RTN","LA7VORM1",203,0)
 ; DoD/CHCS facilities do not use PV1 segment
"RTN","LA7VORM1",204,0)
 I LA7INTYP=10,LA7NVAF=1 Q
"RTN","LA7VORM1",205,0)
 ;
"RTN","LA7VORM1",206,0)
 D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7VORM1",207,0)
 D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7VORM1",208,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PV1)
"RTN","LA7VORM1",209,0)
 Q
"RTN","LA7VORM1",210,0)
 ;
"RTN","LA7VORM1",211,0)
 ;
"RTN","LA7VORM1",212,0)
ORC ;Order Control
"RTN","LA7VORM1",213,0)
 ;
"RTN","LA7VORM1",214,0)
 N ORC,LA7DATA,LA7DUR,LA7DURU,LA76205,LA762801,LA7X,X
"RTN","LA7VORM1",215,0)
 ;
"RTN","LA7VORM1",216,0)
 S ORC(0)="ORC"
"RTN","LA7VORM1",217,0)
 S ORC(1)=$$ORC1^LA7VORC("NW")
"RTN","LA7VORM1",218,0)
 ;
"RTN","LA7VORM1",219,0)
 ; Place order number - accession UID
"RTN","LA7VORM1",220,0)
 S ORC(2)=$$ORC2^LA7VORC($P(LA76802(.3),"^"),LA7FS,LA7ECH)
"RTN","LA7VORM1",221,0)
 ;
"RTN","LA7VORM1",222,0)
 ; Placer group number - shipping manifest invoice #
"RTN","LA7VORM1",223,0)
 S ORC(4)=$$ORC4^LA7VORC($P(LA7628(0),"^"),LA7FS,LA7ECH)
"RTN","LA7VORM1",224,0)
 ;
"RTN","LA7VORM1",225,0)
 ; Quantity/Timing
"RTN","LA7VORM1",226,0)
 S (LA76205,LA7DUR,LA7DURU)=""
"RTN","LA7VORM1",227,0)
 S LA762801=0
"RTN","LA7VORM1",228,0)
 F  S LA762801=$O(^TMP("LA7628",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D
"RTN","LA7VORM1",229,0)
 . N I,LA760
"RTN","LA7VORM1",230,0)
 . ; Test duration
"RTN","LA7VORM1",231,0)
 . F I=0,2 S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))
"RTN","LA7VORM1",232,0)
 . I $P(LA762801(2),"^",4) D
"RTN","LA7VORM1",233,0)
 . . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM1",234,0)
 . . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM1",235,0)
 . ; Test urgency - find highest urgency on accession
"RTN","LA7VORM1",236,0)
 . S LA760=+$P(LA762801(0),"^",2)
"RTN","LA7VORM1",237,0)
 . S X=+$$GET1^DIQ(68.04,LA760_","_LRAN_","_LRAD_","_LRAA_",",1,"I")
"RTN","LA7VORM1",238,0)
 . I 'LA76205 S LA76205=X
"RTN","LA7VORM1",239,0)
 . I LA76205,X<LA76205 S LA76205=X
"RTN","LA7VORM1",240,0)
 S ORC(7)=$$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VORM1",241,0)
 ;
"RTN","LA7VORM1",242,0)
 ; Order Date/Time - if no order date/time then try draw time (only send date if d/t is inexact (2nd piece))
"RTN","LA7VORM1",243,0)
 I $P(LA76802(0),"^",4) S ORC(9)=$$ORC9^LA7VORC($P(LA76802(0),"^",4))
"RTN","LA7VORM1",244,0)
 I '$P(LA76802(0),"^",4),$P(LA76802(3),"^") D
"RTN","LA7VORM1",245,0)
 . K LA7X
"RTN","LA7VORM1",246,0)
 . S LA7X=$P(LA76802(3),"^") S:$P(LA76802(3),"^",2) LA7X=$P(LA7X,".")
"RTN","LA7VORM1",247,0)
 . S ORC(9)=$$ORC9^LA7VORC(LA7X)
"RTN","LA7VORM1",248,0)
 ;
"RTN","LA7VORM1",249,0)
 ; Ordering provider
"RTN","LA7VORM1",250,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7VORM1",251,0)
 S ORC(12)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7VORM1",252,0)
 ;
"RTN","LA7VORM1",253,0)
 ; Entering organization - VA facility
"RTN","LA7VORM1",254,0)
 S ORC(17)=$$ORC17^LA7VORC($P($G(LA7629(0)),U,2),LA7FS,LA7ECH)
"RTN","LA7VORM1",255,0)
 ;
"RTN","LA7VORM1",256,0)
 ; Ordering facility/address
"RTN","LA7VORM1",257,0)
 I $P($G(LA7629(0)),U,2) D
"RTN","LA7VORM1",258,0)
 . S ORC(21)=$$ORC21^LA7VORC($P(LA7629(0),U,2),LA7FS,LA7ECH)
"RTN","LA7VORM1",259,0)
 . S ORC(22)=$$ORC22^LA7VORC($P(LA7629(0),U,2),$P(LA76802(3),"^"),LA7FS,LA7ECH)
"RTN","LA7VORM1",260,0)
 ;
"RTN","LA7VORM1",261,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7VORM1",262,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORM1",263,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORM1",264,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,$P(LA76802(.3),"^"),0)
"RTN","LA7VORM1",265,0)
 D SETID^LA7VHLU1(LA76249,"",$P(LA76802(.3),"^"),0)
"RTN","LA7VORM1",266,0)
 D SETID^LA7VHLU1(LA76249,"",$P(LA76802(.2),"^"),0)
"RTN","LA7VORM1",267,0)
 Q
"RTN","LA7VORM1",268,0)
 ;
"RTN","LA7VORM1",269,0)
 ;
"RTN","LA7VORM1",270,0)
ITEM ; Setup identifier for item in PLACER FIELD 2.
"RTN","LA7VORM1",271,0)
 N LA7ITEM,LA7PC,LA7PREFX,LA7SC,LA7ROOT,LA7UID
"RTN","LA7VORM1",272,0)
 K ^TMP("LA7ITEM",$J)
"RTN","LA7VORM1",273,0)
 S LA7ROOT="^TMP(""LA7SM"",$J)",(LA7ITEM,LA7PC,LA7PREFX,LA7SC)=0,LA7UID=""
"RTN","LA7VORM1",274,0)
 F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7SM"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VORM1",275,0)
 . I LA7SC'=$QS(LA7ROOT,3) S LA7PREFX=LA7PREFX+1,LA7ITEM=0,LA7SC=$QS(LA7ROOT,3),LA7PC=$QS(LA7ROOT,4),LA7UID=""
"RTN","LA7VORM1",276,0)
 . I LA7PC'=$QS(LA7ROOT,4) S LA7PREFX=LA7PREFX+1,LA7ITEM=0,LA7PC=$QS(LA7ROOT,4),LA7UID=""
"RTN","LA7VORM1",277,0)
 . I LA7UID'=$QS(LA7ROOT,5) S LA7UID=$QS(LA7ROOT,5),LA7ITEM=LA7ITEM+1
"RTN","LA7VORM1",278,0)
 . S ^TMP("LA7ITEM",$J,LA7UID,$QS(LA7ROOT,6))=LA7PREFX_"-"_LA7ITEM
"RTN","LA7VORM1",279,0)
 Q
"RTN","LA7VORM1",280,0)
 ;
"RTN","LA7VORM1",281,0)
 ;
"RTN","LA7VORM1",282,0)
BLG ; Billing segment
"RTN","LA7VORM1",283,0)
 ;
"RTN","LA7VORM1",284,0)
 N LA7BLG
"RTN","LA7VORM1",285,0)
 ;
"RTN","LA7VORM1",286,0)
 I $P(LA7629(0),U,13)="" Q
"RTN","LA7VORM1",287,0)
 S LA7BLG(0)=$$BLG^LA7VHLU($P(LA7629(0),"^",13),"CO",LA7FS,LA7ECH)
"RTN","LA7VORM1",288,0)
 D FILESEG^LA7VHLU(GBL,.LA7BLG)
"RTN","LA7VORM1",289,0)
 D FILE6249^LA7VHLU(LA76249,.LA7BLG)
"RTN","LA7VORM1",290,0)
 Q
"RTN","LA7VORM3")
0^6^B30340071
"RTN","LA7VORM3",1,0)
LA7VORM3 ;DALOI/JMC - LAB ORM (Order) message builder cont'd ;Nov 21, 2008
"RTN","LA7VORM3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VORM3",3,0)
 ;
"RTN","LA7VORM3",4,0)
 ;
"RTN","LA7VORM3",5,0)
OBR ;Observation Request segment for Lab Order
"RTN","LA7VORM3",6,0)
 N LA760,LA761,LA764,LA7ALT,LA7DATA,LA7DUR,LA7DURU,LA7I,LA7IDT,LA7NLT,LA7SNM,LA7X,LA7Y,LRACC,LRIDT,LRSB,LRSS,OBR,SPC
"RTN","LA7VORM3",7,0)
 ;
"RTN","LA7VORM3",8,0)
 S LA760=+$P(LA762801(0),"^",2)
"RTN","LA7VORM3",9,0)
 S LA764=+$P($G(^LAB(60,LA760,64)),"^")
"RTN","LA7VORM3",10,0)
 S LA7NLT=$P($G(^LAM(LA764,0)),"^",2)
"RTN","LA7VORM3",11,0)
 ;
"RTN","LA7VORM3",12,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LA7VORM3",13,0)
 S (LA7IDT,LRIDT)=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LA7VORM3",14,0)
 ;
"RTN","LA7VORM3",15,0)
 S OBR(0)="OBR"
"RTN","LA7VORM3",16,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN) ;initialize OBR segment
"RTN","LA7VORM3",17,0)
 ;
"RTN","LA7VORM3",18,0)
 ; Remote UID
"RTN","LA7VORM3",19,0)
 S OBR(2)=$$OBR2^LA7VOBR(LA7UID,LA7FS,LA7ECH)
"RTN","LA7VORM3",20,0)
 ;
"RTN","LA7VORM3",21,0)
 ; Universal service ID - check for non-VA code system
"RTN","LA7VORM3",22,0)
 S LA7X=""
"RTN","LA7VORM3",23,0)
 I $P(LA762801(5),"^")]"" S LA7X=$P(LA762801(5),"^",1)_"^"_$P(LA762801(5),"^",2)_"^"_$P(LA762801(5),"^",5)
"RTN","LA7VORM3",24,0)
 S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,LA760,LA7X,LA7FS,LA7ECH)
"RTN","LA7VORM3",25,0)
 ;
"RTN","LA7VORM3",26,0)
 ; Collection D/T - only send date if d/t is inexact (2nd piece)
"RTN","LA7VORM3",27,0)
 K LA7X
"RTN","LA7VORM3",28,0)
 S LA7X=$P(LA76802(3),"^") S:$P(LA76802(3),"^",2) LA7X=$P(LA7X,".")
"RTN","LA7VORM3",29,0)
 S OBR(7)=$$OBR7^LA7VOBR(LA7X)
"RTN","LA7VORM3",30,0)
 ;
"RTN","LA7VORM3",31,0)
 ; Collection end date/time
"RTN","LA7VORM3",32,0)
 I $P(LA762801(2),U,4)=1 D
"RTN","LA7VORM3",33,0)
 . S OBR(8)=$$OBR8^LA7VOBR($P(LA762801(2),U,5))
"RTN","LA7VORM3",34,0)
 ;
"RTN","LA7VORM3",35,0)
 ; Collection volume
"RTN","LA7VORM3",36,0)
 I $P(LA762801(2),U)=1 D
"RTN","LA7VORM3",37,0)
 . S OBR(9)=$$OBR9^LA7VOBR($P(LA762801(2),"^",2),$P(LA762801(2),"^",3),LA7FS,LA7ECH)
"RTN","LA7VORM3",38,0)
 ;
"RTN","LA7VORM3",39,0)
 ; Specimen action code
"RTN","LA7VORM3",40,0)
 S OBR(11)=$$OBR11^LA7VOBR($S(LA7NVAF=1:"I",1:"P"))
"RTN","LA7VORM3",41,0)
 ;
"RTN","LA7VORM3",42,0)
 ; Infection warning - patient info
"RTN","LA7VORM3",43,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7VORM3",44,0)
 ;
"RTN","LA7VORM3",45,0)
 ; Relevant clinical information
"RTN","LA7VORM3",46,0)
 I LA762801(.1)'="" S OBR(13)=$$OBR13^LA7VOBR(LA762801(.1),LA7FS,LA7ECH)
"RTN","LA7VORM3",47,0)
 ;
"RTN","LA7VORM3",48,0)
 ; Lab Arrival Time
"RTN","LA7VORM3",49,0)
 S OBR(14)=$$OBR14^LA7VOBR($P(LA76802(3),"^",3))
"RTN","LA7VORM3",50,0)
 ;
"RTN","LA7VORM3",51,0)
 ; Specimen source - handle non-HL7 coding system
"RTN","LA7VORM3",52,0)
 S LA7X="",LA7SNM=1,LA761=+$P(LA762801(0),"^",3)
"RTN","LA7VORM3",53,0)
 ;
"RTN","LA7VORM3",54,0)
 ; Uncomment to have LEDI send old specimen codes (local CHCS codes) to CHCS for LDSI Phase I "CH" subscript tests 
"RTN","LA7VORM3",55,0)
 ;I LA7NVAF=1,$P($G(^LRO(68,LRAA,0)),"^",2)="CH" S LA7SNM=0
"RTN","LA7VORM3",56,0)
 ; Uncomment to have LEDI send old specimen codes to VistA. 
"RTN","LA7VORM3",57,0)
 I LA7NVAF=0 S LA7SNM=1.1
"RTN","LA7VORM3",58,0)
 ; Uncomment to send SMOMED CT codes only to other LEDI VA sites when they have SNOMED CT installed.
"RTN","LA7VORM3",59,0)
 ;I LA7NVAF=0 S LA7SNM=2
"RTN","LA7VORM3",60,0)
 ;
"RTN","LA7VORM3",61,0)
 ; If multiple different specimens then OBR-15 always indicates XXX for AP subscripts - specimen is communicated in OBX segments.
"RTN","LA7VORM3",62,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LA7VORM3",63,0)
 . S LA7I=0
"RTN","LA7VORM3",64,0)
 . F  S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,.1,LA7I)) Q:'LA7I   D  Q:'LA7I
"RTN","LA7VORM3",65,0)
 . . S LA7Y=$P(^LR(LRDFN,LRSS,LRIDT,.1,LA7I,0),"^",6)
"RTN","LA7VORM3",66,0)
 . . I 'LA761,LA7Y S LA761=LA7Y
"RTN","LA7VORM3",67,0)
 . . I LA761,LA7Y,(LA761'=LA7Y) S (LA761,LA7I)=0
"RTN","LA7VORM3",68,0)
 ;
"RTN","LA7VORM3",69,0)
 ; Non-HL7 specimen code system.
"RTN","LA7VORM3",70,0)
 I $P(LA762801(5),"^",3)'="" D
"RTN","LA7VORM3",71,0)
 . F I=3,4 S $P(LA7X,"^",I-2)=$P(LA762801(5),"^",I)
"RTN","LA7VORM3",72,0)
 . S $P(LA7X,"^",3)=$P(LA762801(5),"^",6)
"RTN","LA7VORM3",73,0)
 ;
"RTN","LA7VORM3",74,0)
 ; Collection sample code
"RTN","LA7VORM3",75,0)
 I $P(LA762801(5),"^",7)'="" F I=7,8,9 S $P(LA7X,"^",I-2)=$P(LA762801(5),"^",I)
"RTN","LA7VORM3",76,0)
 ;
"RTN","LA7VORM3",77,0)
 ; Check for alternate SNOMED CT codes on specimen and collection sample
"RTN","LA7VORM3",78,0)
 I LA762801("SCT")'="" F I=1,2 S $P(LA7X,"^",I+7)=$P(LA762801("SCT"),"^",I)
"RTN","LA7VORM3",79,0)
 ;
"RTN","LA7VORM3",80,0)
 S OBR(15)=$$OBR15^LA7VOBR(LA761,+$P(LA76802(5),"^",2),LA7X,LA7FS,LA7ECH,$S(LA7NVAF'=1:$P(LA762801(0),"^",7),1:""),LA7SNM)
"RTN","LA7VORM3",81,0)
 ;
"RTN","LA7VORM3",82,0)
 ; Ordering provider
"RTN","LA7VORM3",83,0)
 K LA7X
"RTN","LA7VORM3",84,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7VORM3",85,0)
 S OBR(16)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7VORM3",86,0)
 ;
"RTN","LA7VORM3",87,0)
 ; Placer's field #1 (HOST site)
"RTN","LA7VORM3",88,0)
 S OBR(18)="LA7V HOST "_SITE
"RTN","LA7VORM3",89,0)
 ;
"RTN","LA7VORM3",90,0)
 ; Placer's field #2
"RTN","LA7VORM3",91,0)
 K LA7X
"RTN","LA7VORM3",92,0)
 S LA7X(3)=LRAA,LA7X(4)=LRAD,LA7X(5)=LRAN,LA7X(6)=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,.2),U),LA7X(7)=LA7UID
"RTN","LA7VORM3",93,0)
 S LA7X(8)=$G(^TMP("LA7ITEM",$J,LA7UID,LA762801))
"RTN","LA7VORM3",94,0)
 S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORM3",95,0)
 ;
"RTN","LA7VORM3",96,0)
 ; Test duration
"RTN","LA7VORM3",97,0)
 S (LA7DUR,LA7DURU)=""
"RTN","LA7VORM3",98,0)
 I $P(LA762801(2),"^",4) D
"RTN","LA7VORM3",99,0)
 . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM3",100,0)
 . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM3",101,0)
 ;
"RTN","LA7VORM3",102,0)
 ; Test urgency
"RTN","LA7VORM3",103,0)
 S LA76205=+$$GET1^DIQ(68.04,LA760_","_LRAN_","_LRAD_","_LRAA_",",1,"I")
"RTN","LA7VORM3",104,0)
 S OBR(27)=$$OBR27^LA7VOBR(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)
"RTN","LA7VORM3",105,0)
 ;
"RTN","LA7VORM3",106,0)
 ; If sending to another VA then build OBR-34
"RTN","LA7VORM3",107,0)
 I 'LA7NVAF S $P(OBR(34),HLCOMP,7)=$P($G(LA7V("HOST")),U)
"RTN","LA7VORM3",108,0)
 ;
"RTN","LA7VORM3",109,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7VORM3",110,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORM3",111,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORM3",112,0)
 ;
"RTN","LA7VORM3",113,0)
 ; Send specimen source as NTE comment to DoD
"RTN","LA7VORM3",114,0)
 I LA7NVAF=1,LRSS="MI" D NTE
"RTN","LA7VORM3",115,0)
 ;
"RTN","LA7VORM3",116,0)
 Q
"RTN","LA7VORM3",117,0)
 ;
"RTN","LA7VORM3",118,0)
OBX ; Build OBX segments with required info if any.
"RTN","LA7VORM3",119,0)
 ;
"RTN","LA7VORM3",120,0)
 N LA74,LA7DUR,LA7DURU
"RTN","LA7VORM3",121,0)
 ;
"RTN","LA7VORM3",122,0)
 ; Collecting facility
"RTN","LA7VORM3",123,0)
 S LA74=$P(LA7629(0),"^",2)
"RTN","LA7VORM3",124,0)
 S LA7OBXSN=0
"RTN","LA7VORM3",125,0)
 ;
"RTN","LA7VORM3",126,0)
 ; Patient height
"RTN","LA7VORM3",127,0)
 I $P(LA762801(1),"^") D PTHT^LA7VORM2($P(LA762801(1),"^",2),$P(LA762801(1),"^",3),$P(LA762801(1),"^",7),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",128,0)
 ;
"RTN","LA7VORM3",129,0)
 ; Patient weight
"RTN","LA7VORM3",130,0)
 I $P(LA762801(1),"^",4) D PTWT^LA7VORM2($P(LA762801(1),"^",5),$P(LA762801(1),"^",6),$P(LA762801(1),"^",8),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",131,0)
 ;
"RTN","LA7VORM3",132,0)
 ; Collection duration
"RTN","LA7VORM3",133,0)
 S (LA7DUR,LA7DURU)=""
"RTN","LA7VORM3",134,0)
 I $P(LA762801(2),"^",4) D
"RTN","LA7VORM3",135,0)
 . S LA7DUR=$P(LA762801(2),"^",6) ; collection duration
"RTN","LA7VORM3",136,0)
 . S LA7DURU=$P(LA762801(2),"^",7) ; duration units
"RTN","LA7VORM3",137,0)
 . D SPDUR^LA7VORM2($P(LA762801(2),"^",6),$P(LA762801(2),"^",7),$P(LA762801(2),"^",12),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",138,0)
 ;
"RTN","LA7VORM3",139,0)
 ; Collection volume
"RTN","LA7VORM3",140,0)
 I $P(LA762801(2),"^",2) D
"RTN","LA7VORM3",141,0)
 . D SPCV^LA7VORM2($P(LA762801(2),"^",2),$P(LA762801(2),"^",3),$P(LA762801(2),"^",11),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",142,0)
 ;
"RTN","LA7VORM3",143,0)
 ; Specimen weight
"RTN","LA7VORM3",144,0)
 I $P(LA762801(2),"^",8) D SPWT^LA7VORM2($P(LA762801(2),"^",9),$P(LA762801(2),"^",10),LA7DUR_LA7DURU,$P(LA762801(2),"^",13),LA74,.LA7OBXSN,.LRI,LA7FS,LA7ECH,LA76249)
"RTN","LA7VORM3",145,0)
 ;
"RTN","LA7VORM3",146,0)
 ; Check for anatomic/surgical path subscripts
"RTN","LA7VORM3",147,0)
 I "SPCYAUEM"[$P($G(^LRO(68,LRAA,0)),"^",2) D AP
"RTN","LA7VORM3",148,0)
 ;
"RTN","LA7VORM3",149,0)
 Q
"RTN","LA7VORM3",150,0)
 ;
"RTN","LA7VORM3",151,0)
 ;
"RTN","LA7VORM3",152,0)
AP ; Observation/Result segment for Lab AP Results sent with Order Message
"RTN","LA7VORM3",153,0)
 ;
"RTN","LA7VORM3",154,0)
 N LA7DATA,LA7IDT,LRIDT,LRSB,LRSS
"RTN","LA7VORM3",155,0)
 S LRSS=$P($G(^LRO(68,LRAA,0)),"^",2)
"RTN","LA7VORM3",156,0)
 S (LA7IDT,LRIDT)=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LA7VORM3",157,0)
 D APORM^LA7VORU2
"RTN","LA7VORM3",158,0)
 Q
"RTN","LA7VORM3",159,0)
 ;
"RTN","LA7VORM3",160,0)
 ;
"RTN","LA7VORM3",161,0)
NTE ; Build NTE segment for MI subscript test with specimen source as comment
"RTN","LA7VORM3",162,0)
 ;
"RTN","LA7VORM3",163,0)
 N LA7CMTYP,LA7NTESN,LA7SOC,LA7TXT
"RTN","LA7VORM3",164,0)
 ;
"RTN","LA7VORM3",165,0)
 ; Source of comment - handle other system's special codes, i.e. DOD-CHCS
"RTN","LA7VORM3",166,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RQ",1:"L")
"RTN","LA7VORM3",167,0)
 ;
"RTN","LA7VORM3",168,0)
 S LA7NTESN=0,LA7CMTYP=""
"RTN","LA7VORM3",169,0)
 S LA7TXT="Specimen Source: "_$$GET1^DIQ(61,+$P(LA762801(0),"^",3)_",",.01)
"RTN","LA7VORM3",170,0)
 S LA7TXT=$$TRIM^XLFSTR(LA7TXT,"R"," ")
"RTN","LA7VORM3",171,0)
 D NTE^LA7VORU1
"RTN","LA7VORM3",172,0)
 Q
"RTN","LA7VORU")
0^7^B21144150
"RTN","LA7VORU",1,0)
LA7VORU ;DALOI/JMC - Builder of HL7 Lab Results OBR/OBX/NTE ;July 18, 2007
"RTN","LA7VORU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,61,64,71,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORU",3,0)
 ;
"RTN","LA7VORU",4,0)
EN(LA) ; called from IN^LA7VMSG(...)
"RTN","LA7VORU",5,0)
 ; variables
"RTN","LA7VORU",6,0)
 ; LA("HUID") - Host Unique ID from the local ACCESSION file (#68)
"RTN","LA7VORU",7,0)
 ; LA("SITE") - Ordering site IEN in the INSTITUTION file (#4)
"RTN","LA7VORU",8,0)
 ; LA("RUID") - Remote sites Unique ID from ACCESSION file (#68)
"RTN","LA7VORU",9,0)
 ; LA("ORD") - Free text ordered test name from WKLD CODE file (#64)
"RTN","LA7VORU",10,0)
 ; LA("NLT") - National Laboratory test code from WKLD CODE file (#64)
"RTN","LA7VORU",11,0)
 ; LA("LRIDT") - Inverse date/time the lab arrival time (accession date/time)
"RTN","LA7VORU",12,0)
 ; LA("SUB") - test subscript defined in LABORATORY TEST file (#60)
"RTN","LA7VORU",13,0)
 ; LA("LRDFN") - IEN in LAB DATA file (#63)
"RTN","LA7VORU",14,0)
 ; LA("ORD"), LA("NLT"), and LA("SUB") are sent for specific lab results.
"RTN","LA7VORU",15,0)
 ; LA("AUTO-INST") - Auto-Instrument
"RTN","LA7VORU",16,0)
 ;
"RTN","LA7VORU",17,0)
 N LA763,LA7NLT,LA7NVAF,LA7RS,LA7X,PRIMARY
"RTN","LA7VORU",18,0)
 ;
"RTN","LA7VORU",19,0)
 S PRIMARY=$$PRIM^VASITE(DT),LA("AUTO-INST")=""
"RTN","LA7VORU",20,0)
 I $G(PRIMARY)'="" D
"RTN","LA7VORU",21,0)
 . S PRIMARY=$$SITE^VASITE(DT,PRIMARY)
"RTN","LA7VORU",22,0)
 . S PRIMARY=$P(PRIMARY,U,3)
"RTN","LA7VORU",23,0)
 . S LA("AUTO-INST")="LA7V HOST "_PRIMARY
"RTN","LA7VORU",24,0)
 ;
"RTN","LA7VORU",25,0)
 I '$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0)) D  Q
"RTN","LA7VORU",26,0)
 . ; need to add error logging when no entry in 63.
"RTN","LA7VORU",27,0)
 ;
"RTN","LA7VORU",28,0)
 ; Check for date report completed.
"RTN","LA7VORU",29,0)
 S LRDFN=LA("LRDFN"),LRSS=LA("SUB"),LRIDT=LA("LRIDT")
"RTN","LA7VORU",30,0)
 I '$$OK2SEND^LA7SRR D CREATE^LA7LOG(122) Q
"RTN","LA7VORU",31,0)
 ;
"RTN","LA7VORU",32,0)
 ; Get zeroth node of entry in #63.
"RTN","LA7VORU",33,0)
 S LA763(0)=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7VORU",34,0)
 S LA7NLT=$G(LA("NLT"))
"RTN","LA7VORU",35,0)
 ;
"RTN","LA7VORU",36,0)
 S LA7NVAF=$$NVAF^LA7VHLU2(+LA("SITE"))
"RTN","LA7VORU",37,0)
 S LA7NTESN=0
"RTN","LA7VORU",38,0)
 D ORC
"RTN","LA7VORU",39,0)
 ;
"RTN","LA7VORU",40,0)
 I $G(LA("SUB"))="CH" D CH
"RTN","LA7VORU",41,0)
 I $G(LA("SUB"))="MI" D MI^LA7VORU1
"RTN","LA7VORU",42,0)
 I "SPCYEM"[$G(LA("SUB")) D AP^LA7VORU2
"RTN","LA7VORU",43,0)
 Q
"RTN","LA7VORU",44,0)
 ;
"RTN","LA7VORU",45,0)
 ;
"RTN","LA7VORU",46,0)
CH ; Build segments for "CH" subscript
"RTN","LA7VORU",47,0)
 ;
"RTN","LA7VORU",48,0)
 D OBR
"RTN","LA7VORU",49,0)
 D NTE
"RTN","LA7VORU",50,0)
 S LA7OBXSN=0
"RTN","LA7VORU",51,0)
 D OBX
"RTN","LA7VORU",52,0)
 ;
"RTN","LA7VORU",53,0)
 Q
"RTN","LA7VORU",54,0)
 ;
"RTN","LA7VORU",55,0)
 ;
"RTN","LA7VORU",56,0)
ORC ; Build ORC segment
"RTN","LA7VORU",57,0)
 ;
"RTN","LA7VORU",58,0)
 N LA76205,LA763,LA7696,LA7DATA,LA7PLOBR,LA7SM,LA7X,LA7Y,LADFINST,ORC
"RTN","LA7VORU",59,0)
 ;
"RTN","LA7VORU",60,0)
 S LA763(0)=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7VORU",61,0)
 ;
"RTN","LA7VORU",62,0)
 ; Retrieve placer's OBR information stored in #69.6
"RTN","LA7VORU",63,0)
 D RETOBR^LA7VHLU(LA("SITE"),LA("RUID"),LA("NLT"),.LA7PLOBR)
"RTN","LA7VORU",64,0)
 ;
"RTN","LA7VORU",65,0)
 ; Default institution from Kernel
"RTN","LA7VORU",66,0)
 S LADFINST=+$$KSP^XUPARAM("INST")
"RTN","LA7VORU",67,0)
 ;
"RTN","LA7VORU",68,0)
 S ORC(0)="ORC"
"RTN","LA7VORU",69,0)
 ;
"RTN","LA7VORU",70,0)
 ; Order control
"RTN","LA7VORU",71,0)
 S ORC(1)=$$ORC1^LA7VORC("RE")
"RTN","LA7VORU",72,0)
 ;
"RTN","LA7VORU",73,0)
 ; Remote UID
"RTN","LA7VORU",74,0)
 K LA7X
"RTN","LA7VORU",75,0)
 M LA7X=LA("RUID")
"RTN","LA7VORU",76,0)
 S ORC(2)=$$ORC2^LA7VORC(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",77,0)
 ;
"RTN","LA7VORU",78,0)
 ; Host UID
"RTN","LA7VORU",79,0)
 K LA7X
"RTN","LA7VORU",80,0)
 M LA7X=LA("HUID")
"RTN","LA7VORU",81,0)
 S ORC(3)=$$ORC3^LA7VORC(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",82,0)
 ;
"RTN","LA7VORU",83,0)
 ; Return shipping manifest if found
"RTN","LA7VORU",84,0)
 S LA7SM="",LA7696=0
"RTN","LA7VORU",85,0)
 I LA("SITE")'="",LA("RUID")'="" S LA7696=$O(^LRO(69.6,"RST",LA("SITE"),LA("RUID"),0))
"RTN","LA7VORU",86,0)
 I LA7696 S LA7SM=$P($G(^LRO(69.6,LA7696,0)),U,14)
"RTN","LA7VORU",87,0)
 I LA7SM'="" D
"RTN","LA7VORU",88,0)
 . S ORC(4)=$$ORC4^LA7VORC(LA7SM,LA7FS,LA7ECH)
"RTN","LA7VORU",89,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7SM,0)
"RTN","LA7VORU",90,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7SM,0)
"RTN","LA7VORU",91,0)
 ;
"RTN","LA7VORU",92,0)
 ; Order status
"RTN","LA7VORU",93,0)
 ; DoD/CHCS requires ORC-5 valued otherwise will not process message
"RTN","LA7VORU",94,0)
 I LA7NVAF=1 S ORC(5)=$$ORC5^LA7VORC("CM",LA7FS,LA7ECH)
"RTN","LA7VORU",95,0)
 ;
"RTN","LA7VORU",96,0)
 ; Test urgency - lookup ordered test in "ORUT" node
"RTN","LA7VORU",97,0)
 K LA7X
"RTN","LA7VORU",98,0)
 I LA("NLT")'="" D
"RTN","LA7VORU",99,0)
 . S LA7X=$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"ORUT","B",LA("NLT"),""))
"RTN","LA7VORU",100,0)
 . I LA7X<1 Q
"RTN","LA7VORU",101,0)
 . S LA76205=$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"ORUT",LA7X,0)),"^",2)
"RTN","LA7VORU",102,0)
 . S ORC(7)=$$ORC7^LA7VORC("","",LA76205,LA7FS,LA7ECH)
"RTN","LA7VORU",103,0)
 ;
"RTN","LA7VORU",104,0)
 ; Ordering provider
"RTN","LA7VORU",105,0)
 K LA7X,LA7Y
"RTN","LA7VORU",106,0)
 S (LA7X,LA7Y)=""
"RTN","LA7VORU",107,0)
 ; "CH" and "MI" subscript store requesting provider and requesting div/location.
"RTN","LA7VORU",108,0)
 I "CHMI"[LA("SUB") D
"RTN","LA7VORU",109,0)
 . N LA7J
"RTN","LA7VORU",110,0)
 . S LA7J=$P(LA763(0),"^",13)
"RTN","LA7VORU",111,0)
 . I $P(LA7J,";",2)="SC(" S LA7Y=$$GET1^DIQ(44,$P(LA7J,";")_",",3,"I")
"RTN","LA7VORU",112,0)
 . I $P(LA7J,";",2)="DIC(4," S LA7Y=$P(LA7J,";")
"RTN","LA7VORU",113,0)
 . I LA("SUB")="CH" S LA7X=$P(LA763(0),"^",10)
"RTN","LA7VORU",114,0)
 . I LA("SUB")="MI" S LA7X=$P(LA763(0),"^",7)
"RTN","LA7VORU",115,0)
 ;
"RTN","LA7VORU",116,0)
 ; Other subscripts only store requesting provider
"RTN","LA7VORU",117,0)
 I "CYEMSP"[LA("SUB") S LA7X=$P(LA763(0),"^",7)
"RTN","LA7VORU",118,0)
 ;
"RTN","LA7VORU",119,0)
 ; Send back ordering provider stored in #69.6 if available.
"RTN","LA7VORU",120,0)
 I LA7INTYP=10,$G(LA7PLOBR("OBR-17"))'="" S LA7X=LA7PLOBR("OBR-17")
"RTN","LA7VORU",121,0)
 ;
"RTN","LA7VORU",122,0)
 I LA7Y="" S LA7Y=LADFINST
"RTN","LA7VORU",123,0)
 S ORC(12)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH,$S($G(LA7INTYP)=30:2,$G(LA7NVAF)=1:0,1:1))
"RTN","LA7VORU",124,0)
 ;
"RTN","LA7VORU",125,0)
 ; Enterer's location
"RTN","LA7VORU",126,0)
 S LA7X=""
"RTN","LA7VORU",127,0)
 I "CHMI"[LA("SUB") S LA7X=$P(LA763(0),"^",13)
"RTN","LA7VORU",128,0)
 I LA7X'="" S ORC(13)=$$ORC13^LA7VORC(LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",129,0)
 ;
"RTN","LA7VORU",130,0)
 ; Entering organization
"RTN","LA7VORU",131,0)
 S ORC(17)=$$ORC17^LA7VORC(LA7Y,LA7FS,LA7ECH)
"RTN","LA7VORU",132,0)
 ;
"RTN","LA7VORU",133,0)
 ; Ordering facility/address
"RTN","LA7VORU",134,0)
 S LA7X=$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"ORU")),"^",3)
"RTN","LA7VORU",135,0)
 I 'LA7X,"CHMI"[LA("SUB") S LA7X=$P(LA763(0),"^",14)
"RTN","LA7VORU",136,0)
 I LA7X D
"RTN","LA7VORU",137,0)
 . S ORC(21)=$$ORC21^LA7VORC(LA7X,LA7FS,LA7ECH)
"RTN","LA7VORU",138,0)
 . S ORC(22)=$$ORC22^LA7VORC(LA7X,$P(LA763(0),"^"),LA7FS,LA7ECH)
"RTN","LA7VORU",139,0)
 ;
"RTN","LA7VORU",140,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7VORU",141,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU",142,0)
 ;
"RTN","LA7VORU",143,0)
 ; Check for flag to only build message but do not file
"RTN","LA7VORU",144,0)
 I '$G(LA7NOMSG) D
"RTN","LA7VORU",145,0)
 . D FILE6249^LA7VHLU(LA76249P,.LA7DATA)
"RTN","LA7VORU",146,0)
 . I LA("HUID")'="" D
"RTN","LA7VORU",147,0)
 . . D SETID^LA7VHLU1(LA76249,LA7ID,LA("HUID"),0)
"RTN","LA7VORU",148,0)
 . . D SETID^LA7VHLU1(LA76249,"",LA("HUID"),0)
"RTN","LA7VORU",149,0)
 . I LA("RUID")'="" D
"RTN","LA7VORU",150,0)
 . . D SETID^LA7VHLU1(LA76249,LA7ID,LA("RUID"),0)
"RTN","LA7VORU",151,0)
 . . D SETID^LA7VHLU1(LA76249,"",LA("RUID"),0)
"RTN","LA7VORU",152,0)
 ;
"RTN","LA7VORU",153,0)
 Q
"RTN","LA7VORU",154,0)
 ;
"RTN","LA7VORU",155,0)
 ;
"RTN","LA7VORU",156,0)
OBR ;Observation Request segment for Lab Order
"RTN","LA7VORU",157,0)
 ;
"RTN","LA7VORU",158,0)
 D OBR^LA7VORUB
"RTN","LA7VORU",159,0)
 Q
"RTN","LA7VORU",160,0)
 ;
"RTN","LA7VORU",161,0)
 ;
"RTN","LA7VORU",162,0)
OBX ;Observation/Result segment for Lab Results
"RTN","LA7VORU",163,0)
 ;
"RTN","LA7VORU",164,0)
 D OBX^LA7VORUA
"RTN","LA7VORU",165,0)
 Q
"RTN","LA7VORU",166,0)
 ;
"RTN","LA7VORU",167,0)
 ;
"RTN","LA7VORU",168,0)
NTE ; Build NTE segment
"RTN","LA7VORU",169,0)
 ;
"RTN","LA7VORU",170,0)
 D NTE^LA7VORUA
"RTN","LA7VORU",171,0)
 Q
"RTN","LA7VORU1")
0^16^B93159332
"RTN","LA7VORU1",1,0)
LA7VORU1 ;DALOI/JMC - Builder of HL7 Lab Results Microbiology OBR/OBX/NTE ;11/18/11  14:52
"RTN","LA7VORU1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORU1",3,0)
 ;
"RTN","LA7VORU1",4,0)
 Q
"RTN","LA7VORU1",5,0)
 ;
"RTN","LA7VORU1",6,0)
 ;
"RTN","LA7VORU1",7,0)
MI ; Build segments for "MI" subscript
"RTN","LA7VORU1",8,0)
 ;
"RTN","LA7VORU1",9,0)
 N LA7I,LA7IDT,LA7ISOID,LA7IENS,LA7MISB,LA7NLT,LA7REL,LA7SUBFL,LA7VNLT,LA7VT,LA7VTIEN,LRDFN,LRIDT,LRSB,LRSS
"RTN","LA7VORU1",10,0)
 ;
"RTN","LA7VORU1",11,0)
 S LRDFN=LA("LRDFN"),LRSS=LA("SUB"),(LA7IENS,LRIDT)=LA("LRIDT")
"RTN","LA7VORU1",12,0)
 ; Flag that whole report has been released, complete date in field  #.03
"RTN","LA7VORU1",13,0)
 S LA7REL=$P(^LR(LRDFN,LRSS,LRIDT,0),"^",3)
"RTN","LA7VORU1",14,0)
 ;
"RTN","LA7VORU1",15,0)
 ; Determine if there are specific sections to send back.
"RTN","LA7VORU1",16,0)
 I $G(LA(62.49)) D
"RTN","LA7VORU1",17,0)
 . S LA7VNLT=$P($G(^LAHM(62.49,LA(62.49),63)),"^",5),LA7VTIEN=0
"RTN","LA7VORU1",18,0)
 . F  S LA7VTIEN=$O(^LAHM(62.49,LA(62.49),1,LA7VTIEN)) Q:'LA7VTIEN  D
"RTN","LA7VORU1",19,0)
 . . S LA7VT=^LAHM(62.49,LA(62.49),1,LA7VTIEN,0)
"RTN","LA7VORU1",20,0)
 . . I $P(LA7VT,"^") D
"RTN","LA7VORU1",21,0)
 . . . S LA7VT(63)=$G(^LAB(64.061,$P(LA7VT,"^"),63))
"RTN","LA7VORU1",22,0)
 . . . I $P(LA7VT(63),"^")'="MI" Q
"RTN","LA7VORU1",23,0)
 . . . I $P(LA7VT(63),"^",3) S LA7MISB($P(LA7VT(63),"^",2,3))=LA7VNLT
"RTN","LA7VORU1",24,0)
 ;
"RTN","LA7VORU1",25,0)
 ; Send gram stain if C&S
"RTN","LA7VORU1",26,0)
 I $D(LA7MISB("63.05^11")) S LA7MISB("63.05^11.6;63.29")=LA7MISB("63.05^11")
"RTN","LA7VORU1",27,0)
 ;
"RTN","LA7VORU1",28,0)
 ; Send acid fast stain if AFB culture
"RTN","LA7VORU1",29,0)
 I $D(LA7MISB("63.05^22")) S LA7MISB("63.05^24")=LA7MISB("63.05^22")
"RTN","LA7VORU1",30,0)
 ;
"RTN","LA7VORU1",31,0)
 ; If no specific section then check all sections
"RTN","LA7VORU1",32,0)
 I '$D(LA7MISB) F LA7VT="63.05^11","63.05^11.6;63.29","63.05^14","63.05^18","63.05^22","63.05^24","63.05^33" S LA7MISB(LA7VT)=""
"RTN","LA7VORU1",33,0)
 ;
"RTN","LA7VORU1",34,0)
 ; Bacteriology Report
"RTN","LA7VORU1",35,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,1)),(LA7REL!$P($G(^LR(LRDFN,LRSS,LRIDT,1)),"^")) D
"RTN","LA7VORU1",36,0)
 . I '$D(LA7MISB("63.05^11")),'$D(LA7MISB("63.05^11.6;63.29"))  Q
"RTN","LA7VORU1",37,0)
 . S LA7NTESN=0,LA7IDT=LRIDT,LRSB=11
"RTN","LA7VORU1",38,0)
 . I '$D(LA7MISB("63.05^11")),$D(LA7MISB("63.05^11.6;63.29")) S LA7NLT=$S($P(LA7MISB("63.05^11.6;63.29"),"^"):$P(LA7MISB("63.05^11.6;63.29"),"^"),1:"87754.0000")
"RTN","LA7VORU1",39,0)
 . E  S LA7NLT=$S($P(LA7MISB("63.05^11"),"^"):$P(LA7MISB("63.05^11"),"^"),1:"87993.0000")
"RTN","LA7VORU1",40,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",41,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU1",42,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",43,0)
 . I LA7NVAF=1 D
"RTN","LA7VORU1",44,0)
 . . S LRSB=11 D RPT^LA7VORU2
"RTN","LA7VORU1",45,0)
 . . F LRSB=1,11.7,1.5 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",46,0)
 . I LA7NVAF'=1 F LRSB=1,11.7,1.5,11 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",47,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",48,0)
 . ; Report urine/sputum screens
"RTN","LA7VORU1",49,0)
 . F LA7I=5,6 I $P(^LR(LRDFN,LRSS,LRIDT,1),"^",LA7I)'="" S LRSB=$S(LA7I=5:11.58,1:11.57) D OBX
"RTN","LA7VORU1",50,0)
 . ; Report gram stain
"RTN","LA7VORU1",51,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT,2)),$D(LA7MISB("63.05^11.6;63.29")) D GS
"RTN","LA7VORU1",52,0)
 . N LRSB
"RTN","LA7VORU1",53,0)
 . ; Check for organism id
"RTN","LA7VORU1",54,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,3)) Q
"RTN","LA7VORU1",55,0)
 . S LRSB=12,LA7SUBFL=63.3
"RTN","LA7VORU1",56,0)
 . D ORG,MIC
"RTN","LA7VORU1",57,0)
 ;
"RTN","LA7VORU1",58,0)
 ; Parasite report
"RTN","LA7VORU1",59,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,5)),(LA7REL!$P($G(^LR(LRDFN,LRSS,LRIDT,5)),"^")) D
"RTN","LA7VORU1",60,0)
 . I '$D(LA7MISB("63.05^14")) Q
"RTN","LA7VORU1",61,0)
 . S LRSB=14,LA7NTESN=0
"RTN","LA7VORU1",62,0)
 . S LA7NLT=$S($P(LA7MISB("63.05^14"),"^"):$P(LA7MISB("63.05^14"),"^"),1:"87925.0000")
"RTN","LA7VORU1",63,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",64,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU1",65,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",66,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",67,0)
 . I LA7NVAF=1 D
"RTN","LA7VORU1",68,0)
 . . S LRSB=14 D RPT^LA7VORU2
"RTN","LA7VORU1",69,0)
 . . F LRSB=16.5,15.51,16.4 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",70,0)
 . I LA7NVAF'=1 F LRSB=16.5,15.51,16.4,14 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",71,0)
 . ; Check for organism id
"RTN","LA7VORU1",72,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,6)) Q
"RTN","LA7VORU1",73,0)
 . N LRSB
"RTN","LA7VORU1",74,0)
 . S LA7IDT=LRIDT,LRSB=16
"RTN","LA7VORU1",75,0)
 . D ORG
"RTN","LA7VORU1",76,0)
 ;
"RTN","LA7VORU1",77,0)
 ; Mycology report
"RTN","LA7VORU1",78,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,8)),(LA7REL!$P($G(^LR(LRDFN,LRSS,LRIDT,8)),"^")) D
"RTN","LA7VORU1",79,0)
 . I '$D(LA7MISB("63.05^18")) Q
"RTN","LA7VORU1",80,0)
 . S LRSB=18,LA7NTESN=0
"RTN","LA7VORU1",81,0)
 . S LA7NLT=$S($P(LA7MISB("63.05^18"),"^"):$P(LA7MISB("63.05^18"),"^"),1:"87994.0000")
"RTN","LA7VORU1",82,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",83,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU1",84,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",85,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",86,0)
 . I LA7NVAF=1 D
"RTN","LA7VORU1",87,0)
 . . S LRSB=18 D RPT^LA7VORU2
"RTN","LA7VORU1",88,0)
 . . F LRSB=20.5,19.6,20.4 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",89,0)
 . I LA7NVAF'=1 F LRSB=20.5,19.6,20.4,18 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",90,0)
 . ; Check for organism id
"RTN","LA7VORU1",91,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,9)) Q
"RTN","LA7VORU1",92,0)
 . N LRSB
"RTN","LA7VORU1",93,0)
 . S LA7IDT=LRIDT,LRSB=20
"RTN","LA7VORU1",94,0)
 . D ORG
"RTN","LA7VORU1",95,0)
 ;
"RTN","LA7VORU1",96,0)
 ; Mycobacterium report
"RTN","LA7VORU1",97,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,11)),(LA7REL!$P($G(^LR(LRDFN,LRSS,LRIDT,11)),"^")) D
"RTN","LA7VORU1",98,0)
 . I '$D(LA7MISB("63.05^22")),'$D(LA7MISB("63.05^24"))  Q
"RTN","LA7VORU1",99,0)
 . S LA7NTESN=0,LA7IDT=LRIDT,LRSB=22
"RTN","LA7VORU1",100,0)
 . I '$D(LA7MISB("63.05^22")),$D(LA7MISB("63.05^24")) S LA7NLT=$S($P(LA7MISB("63.05^24"),"^"):$P(LA7MISB("63.05^24"),"^"),1:"87756.0000")
"RTN","LA7VORU1",101,0)
 . E  S LA7NLT=$S($P(LA7MISB("63.05^22"),"^"):$P(LA7MISB("63.05^22"),"^"),1:"87995.0000")
"RTN","LA7VORU1",102,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",103,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU1",104,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",105,0)
 . I LA7NVAF=1 D
"RTN","LA7VORU1",106,0)
 . . S LRSB=22 D RPT^LA7VORU2
"RTN","LA7VORU1",107,0)
 . . F LRSB=26.5,26.4 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",108,0)
 . I LA7NVAF'=1 F LRSB=26.5,26.4,22 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",109,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",110,0)
 . ; Report acid fast stain
"RTN","LA7VORU1",111,0)
 . I $P(^LR(LRDFN,LRSS,LRIDT,11),"^",3)'="" D
"RTN","LA7VORU1",112,0)
 . . S LRSB=24 D OBX
"RTN","LA7VORU1",113,0)
 . . I $P(^LR(LRDFN,LRSS,LRIDT,11),"^",4)'="" S LRSB=25 D OBX
"RTN","LA7VORU1",114,0)
 . ; Check for organism id
"RTN","LA7VORU1",115,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,12)) Q
"RTN","LA7VORU1",116,0)
 . N LRSB
"RTN","LA7VORU1",117,0)
 . S LA7IDT=LRIDT,LRSB=26,LA7SUBFL=63.39
"RTN","LA7VORU1",118,0)
 . D ORG,MIC
"RTN","LA7VORU1",119,0)
 ;
"RTN","LA7VORU1",120,0)
 ; Virology report
"RTN","LA7VORU1",121,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,16)),(LA7REL!$P($G(^LR(LRDFN,LRSS,LRIDT,16)),"^")) D
"RTN","LA7VORU1",122,0)
 . I '$D(LA7MISB("63.05^33")) Q
"RTN","LA7VORU1",123,0)
 . S LRSB=33,LA7NTESN=0
"RTN","LA7VORU1",124,0)
 . S LA7NLT=$S($P(LA7MISB("63.05^33"),"^"):$P(LA7MISB("63.05^33"),"^"),1:"87996.0000")
"RTN","LA7VORU1",125,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",126,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU1",127,0)
 . D NTE^LA7VORU
"RTN","LA7VORU1",128,0)
 . S LA7OBXSN=0
"RTN","LA7VORU1",129,0)
 . I LA7NVAF=1 D
"RTN","LA7VORU1",130,0)
 . . S LRSB=33 D RPT^LA7VORU2
"RTN","LA7VORU1",131,0)
 . . F LRSB=36.5,36.4 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",132,0)
 . I LA7NVAF'=1 F LRSB=36.5,36.4,33 D RPTNTE^LA7VORU2
"RTN","LA7VORU1",133,0)
 . ; Check for virus id
"RTN","LA7VORU1",134,0)
 . I '$D(^LR(LRDFN,LRSS,LRIDT,17)) Q
"RTN","LA7VORU1",135,0)
 . N LRSB
"RTN","LA7VORU1",136,0)
 . S LA7IDT=LRIDT,LRSB=36
"RTN","LA7VORU1",137,0)
 . D ORG
"RTN","LA7VORU1",138,0)
 ;
"RTN","LA7VORU1",139,0)
 ; Antibiotic Levels
"RTN","LA7VORU1",140,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,14)) D
"RTN","LA7VORU1",141,0)
 . N LA7SR
"RTN","LA7VORU1",142,0)
 . S LRSB=28,LA7NLT="93978.0000",LA7NTESN=0
"RTN","LA7VORU1",143,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",144,0)
 . S LA7SR=0
"RTN","LA7VORU1",145,0)
 . F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,14,LA7SR)) Q:'LA7SR  S LA7IDT=LRIDT_","_LA7SR D OBX
"RTN","LA7VORU1",146,0)
 ;
"RTN","LA7VORU1",147,0)
 ; Sterility results
"RTN","LA7VORU1",148,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,31)) D
"RTN","LA7VORU1",149,0)
 . N LA7SR
"RTN","LA7VORU1",150,0)
 . S LRSB=11.52,LA7NLT="93982.0000",LA7NTESN=0
"RTN","LA7VORU1",151,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",152,0)
 . S LA7SR=0
"RTN","LA7VORU1",153,0)
 . F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,31,LA7SR)) Q:'LA7SR  S LA7IDT=LRIDT_","_LA7SR D OBX
"RTN","LA7VORU1",154,0)
 ;
"RTN","LA7VORU1",155,0)
 ; Check if specific NLT in the ORUT node for test being NP and build OBR for the NP test.
"RTN","LA7VORU1",156,0)
 I $G(LA7VNLT)'="" D
"RTN","LA7VORU1",157,0)
 . N LA7DISPO,LA7I
"RTN","LA7VORU1",158,0)
 . S LA7DISPO=$$FIND1^DIC(64.061,"","OQX","X","D","I $P(^(0),U,5)=""0123""")
"RTN","LA7VORU1",159,0)
 . S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT","B",LA7VNLT,0)) Q:'LA7I
"RTN","LA7VORU1",160,0)
 . I LA7DISPO'="",$P(^LR(LRDFN,LRSS,LRIDT,"ORUT",LA7I,0),"^",10)=LA7DISPO D
"RTN","LA7VORU1",161,0)
 . . S LA7NLT=LA7VNLT,LRSB=$P($G(LA7VT(63)),"^",3),LA7NTESN=0,LA7IDT=LRIDT
"RTN","LA7VORU1",162,0)
 . . S:LRSB="" LRSB=0 D OBR^LA7VORU,NTE^LA7VORU
"RTN","LA7VORU1",163,0)
 ;
"RTN","LA7VORU1",164,0)
 Q
"RTN","LA7VORU1",165,0)
 ;
"RTN","LA7VORU1",166,0)
 ;
"RTN","LA7VORU1",167,0)
GS ; Report Gram stain
"RTN","LA7VORU1",168,0)
 ;
"RTN","LA7VORU1",169,0)
 N LA7GS
"RTN","LA7VORU1",170,0)
 ;
"RTN","LA7VORU1",171,0)
 S LA7GS=0,LRSB=11.6
"RTN","LA7VORU1",172,0)
 F  S LA7GS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7GS)) Q:'LA7GS  D
"RTN","LA7VORU1",173,0)
 . S LA7IDT=LRIDT_","_LA7GS,LA7NTESN=0
"RTN","LA7VORU1",174,0)
 . D OBX
"RTN","LA7VORU1",175,0)
 Q
"RTN","LA7VORU1",176,0)
 ;
"RTN","LA7VORU1",177,0)
 ;
"RTN","LA7VORU1",178,0)
ORG ; Build OBX segments for MI subscript organism id
"RTN","LA7VORU1",179,0)
 ;
"RTN","LA7VORU1",180,0)
 N LA7ND,LA7ORG
"RTN","LA7VORU1",181,0)
 ;
"RTN","LA7VORU1",182,0)
 ; Bacterial organism
"RTN","LA7VORU1",183,0)
 I LRSB=12 S LA7ND=3
"RTN","LA7VORU1",184,0)
 ; Parasite organism
"RTN","LA7VORU1",185,0)
 I LRSB=16 S LA7ND=6
"RTN","LA7VORU1",186,0)
 ; Fungal organism
"RTN","LA7VORU1",187,0)
 I LRSB=20 S LA7ND=9
"RTN","LA7VORU1",188,0)
 ; Mycobacteria organism
"RTN","LA7VORU1",189,0)
 I LRSB=26 S LA7ND=12
"RTN","LA7VORU1",190,0)
 ; Viral agent
"RTN","LA7VORU1",191,0)
 I LRSB=36 S LA7ND=17
"RTN","LA7VORU1",192,0)
 ;
"RTN","LA7VORU1",193,0)
 S LA7ORG=0
"RTN","LA7VORU1",194,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU1",195,0)
 . S LA7IDT=LRIDT_","_LA7ORG_","
"RTN","LA7VORU1",196,0)
 . D OBX
"RTN","LA7VORU1",197,0)
 . I LA7ND=17 Q  ; no quantity/comments on viruses
"RTN","LA7VORU1",198,0)
 . I LA7ND=6 D PSTAGE Q
"RTN","LA7VORU1",199,0)
 . D ORGNTE
"RTN","LA7VORU1",200,0)
 . I $P($G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,0)),"^",2)'="" D CC
"RTN","LA7VORU1",201,0)
 Q
"RTN","LA7VORU1",202,0)
 ;
"RTN","LA7VORU1",203,0)
 ;
"RTN","LA7VORU1",204,0)
CC ; Send colony count (quantity)
"RTN","LA7VORU1",205,0)
 ;
"RTN","LA7VORU1",206,0)
 N LRSB
"RTN","LA7VORU1",207,0)
 ;
"RTN","LA7VORU1",208,0)
 I LA7ND=3 S LRSB="12,1"
"RTN","LA7VORU1",209,0)
 I LA7ND=9 S LRSB="20,1"
"RTN","LA7VORU1",210,0)
 I LA7ND=12 S LRSB="26,1"
"RTN","LA7VORU1",211,0)
 D OBX
"RTN","LA7VORU1",212,0)
 ;
"RTN","LA7VORU1",213,0)
 Q
"RTN","LA7VORU1",214,0)
 ;
"RTN","LA7VORU1",215,0)
 ;
"RTN","LA7VORU1",216,0)
PSTAGE ; Send parasite's stage/quantity/comments
"RTN","LA7VORU1",217,0)
 N LA7CMTP,LA7FMT,LA7J,LA7SB,LA7SOC,LA7NTESN,LA7TXT,LA7X,LRSB
"RTN","LA7VORU1",218,0)
 ;
"RTN","LA7VORU1",219,0)
 ; Source of comment - handle special codes for other systems, ie DOD-CHCS
"RTN","LA7VORU1",220,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RC",1:"L")
"RTN","LA7VORU1",221,0)
 ;
"RTN","LA7VORU1",222,0)
 S LA7FMT=0,LA7CMTYP=""
"RTN","LA7VORU1",223,0)
 ; If HDR interface then send as repetition text.
"RTN","LA7VORU1",224,0)
 I $G(LA7INTYP)=30 S LA7FMT=2
"RTN","LA7VORU1",225,0)
 ;
"RTN","LA7VORU1",226,0)
 S LA7SB=0
"RTN","LA7VORU1",227,0)
 F  S LA7SB=$O(^LR(LRDFN,LRSS,LRIDT,6,LA7ORG,1,LA7SB)) Q:'LA7SB  D
"RTN","LA7VORU1",228,0)
 . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SB
"RTN","LA7VORU1",229,0)
 . S LRSB="16,.01" D OBX
"RTN","LA7VORU1",230,0)
 . S (LA7J,LA7NTESN)=0
"RTN","LA7VORU1",231,0)
 . F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7SB,1,LA7J)) Q:'LA7J  D
"RTN","LA7VORU1",232,0)
 . . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7SB,1,LA7J,0))
"RTN","LA7VORU1",233,0)
 . . I LA7X="" S LA7X=" "
"RTN","LA7VORU1",234,0)
 . . I LA7FMT S LA7TXT(LA7J)=LA7X
"RTN","LA7VORU1",235,0)
 . . E  S LA7TXT=LA7X D NTE
"RTN","LA7VORU1",236,0)
 . I LA7FMT,$D(LA7TXT) D NTE
"RTN","LA7VORU1",237,0)
 . S LRSB="16,1" D OBX
"RTN","LA7VORU1",238,0)
 Q
"RTN","LA7VORU1",239,0)
 ;
"RTN","LA7VORU1",240,0)
 ;
"RTN","LA7VORU1",241,0)
ORGNTE ; Send comments on organisms.
"RTN","LA7VORU1",242,0)
 ;
"RTN","LA7VORU1",243,0)
 N LA7CMTYP,LA7FMT,LA7J,LA7SOC,LA7NTESN,LA7TXT,LA7X
"RTN","LA7VORU1",244,0)
 ;
"RTN","LA7VORU1",245,0)
 ; Source of comment - handle special codes for other systems, ie DOD-CHCS
"RTN","LA7VORU1",246,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RC",1:"L")
"RTN","LA7VORU1",247,0)
 ;
"RTN","LA7VORU1",248,0)
 S LA7FMT=0,LA7CMTYP=""
"RTN","LA7VORU1",249,0)
 ; If HDR interface then send as repetition text.
"RTN","LA7VORU1",250,0)
 I $G(LA7INTYP)=30 S LA7FMT=2
"RTN","LA7VORU1",251,0)
 ;
"RTN","LA7VORU1",252,0)
 S (LA7J,LA7NTESN)=0
"RTN","LA7VORU1",253,0)
 F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J)) Q:'LA7J  D
"RTN","LA7VORU1",254,0)
 . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J,0))
"RTN","LA7VORU1",255,0)
 . I LA7X="" S LA7X=" "
"RTN","LA7VORU1",256,0)
 . I LA7FMT S LA7TXT(LA7J)=LA7X
"RTN","LA7VORU1",257,0)
 . E  S LA7TXT=LA7X D NTE
"RTN","LA7VORU1",258,0)
 ;
"RTN","LA7VORU1",259,0)
 ; If formatted or repetition format then build each type of comments to a NTE segment.
"RTN","LA7VORU1",260,0)
 I LA7FMT,$D(LA7TXT) D NTE
"RTN","LA7VORU1",261,0)
 ;
"RTN","LA7VORU1",262,0)
 Q
"RTN","LA7VORU1",263,0)
 ;
"RTN","LA7VORU1",264,0)
 ;
"RTN","LA7VORU1",265,0)
MIC ; Build OBR/OBX segments for MI subscript susceptibilities (MIC)
"RTN","LA7VORU1",266,0)
 ;
"RTN","LA7VORU1",267,0)
 N LA7ORG,LA7ND,LA7NLT,LA7SB,LA7SB1,LA7SOC
"RTN","LA7VORU1",268,0)
 ;
"RTN","LA7VORU1",269,0)
 ; Source of comment - handle special codes for other systems, ie DOD-CHCS
"RTN","LA7VORU1",270,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RC",1:"L")
"RTN","LA7VORU1",271,0)
 ;
"RTN","LA7VORU1",272,0)
 S LA7NLT=""
"RTN","LA7VORU1",273,0)
 I LRSB=12 S LA7ND=3,LA7NLT="87565.0000"
"RTN","LA7VORU1",274,0)
 I LRSB=26 S LA7ND=12,LA7NLT="87568.0000"
"RTN","LA7VORU1",275,0)
 ;
"RTN","LA7VORU1",276,0)
 S LA7ORG=0,LA7SB=LRSB
"RTN","LA7VORU1",277,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU1",278,0)
 . N LA7NTESN,LA7PARNT
"RTN","LA7VORU1",279,0)
 . ; Check for susceptibilities for this organism
"RTN","LA7VORU1",280,0)
 . S X=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,2))
"RTN","LA7VORU1",281,0)
 . I X<2!(X>3) Q
"RTN","LA7VORU1",282,0)
 . S LA7PARNT=$$GETISO^LA7VHLU1(LA7SUBFL,LA7ORG_","_LRIDT_","_LRDFN_",")
"RTN","LA7VORU1",283,0)
 . M LA7PARNT=LA7ISOID(LA7PARNT)
"RTN","LA7VORU1",284,0)
 . D OBR^LA7VORU
"RTN","LA7VORU1",285,0)
 . S LA7OBXSN=0,LA7SB1=2
"RTN","LA7VORU1",286,0)
 . F  S LA7SB1=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,LA7SB1)) Q:'LA7SB1!(LA7SB1>2.99)  D
"RTN","LA7VORU1",287,0)
 . . N LA7CMTYP,LA7FMT,LA7TXT,LRSB,X
"RTN","LA7VORU1",288,0)
 . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SB1,LRSB=LA7SB_","_LA7SB1
"RTN","LA7VORU1",289,0)
 . . D OBX
"RTN","LA7VORU1",290,0)
 . . S X=""
"RTN","LA7VORU1",291,0)
 . . I LA7SB=12 S X=$O(^LAB(62.06,"AD",LA7SB1,0))
"RTN","LA7VORU1",292,0)
 . . I LA7SB=26 S X=$O(^LAB(62.06,"AD1",LA7SB1,0))
"RTN","LA7VORU1",293,0)
 . . I X<1 Q
"RTN","LA7VORU1",294,0)
 . . S LA7TXT=$P($G(^LAB(62.06,X,0)),"^",3)
"RTN","LA7VORU1",295,0)
 . . I LA7TXT'="" S (LA7NTESN,LA7FMT)=0,LA7CMTYP="" D NTE
"RTN","LA7VORU1",296,0)
 . I LA7ND'=3 Q  ; no free text antibiotics on AFB
"RTN","LA7VORU1",297,0)
 . S LA7SB1=0
"RTN","LA7VORU1",298,0)
 . F  S LA7SB1=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,3,LA7SB1)) Q:'LA7SB1  D
"RTN","LA7VORU1",299,0)
 . . N LA7I,LRSB
"RTN","LA7VORU1",300,0)
 . . F LA7I=2,3 I $P(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,3,LA7SB1,0),"^",LA7I)'="" D
"RTN","LA7VORU1",301,0)
 . . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SB1,LRSB=LA7SB_",3,"_(LA7I-1)
"RTN","LA7VORU1",302,0)
 . . . N LA7I D OBX
"RTN","LA7VORU1",303,0)
 Q
"RTN","LA7VORU1",304,0)
 ;
"RTN","LA7VORU1",305,0)
 ;
"RTN","LA7VORU1",306,0)
OBX ; Build OBX segments for MI subscript
"RTN","LA7VORU1",307,0)
 ; Also called by AP^LA7VORU2 to build AP OBX segments.
"RTN","LA7VORU1",308,0)
 ;
"RTN","LA7VORU1",309,0)
 N LA7DATA
"RTN","LA7VORU1",310,0)
 D OBX^LA7VOBX(LRDFN,LRSS,LA7IDT,LRSB,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH,LA7NVAF)
"RTN","LA7VORU1",311,0)
 ;
"RTN","LA7VORU1",312,0)
 ; If OBX failed to build then don't store
"RTN","LA7VORU1",313,0)
 I '$D(LA7DATA) Q
"RTN","LA7VORU1",314,0)
 ;
"RTN","LA7VORU1",315,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU1",316,0)
 ;
"RTN","LA7VORU1",317,0)
 ; Check for flag to only build message but do not file
"RTN","LA7VORU1",318,0)
 I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORU1",319,0)
 Q
"RTN","LA7VORU1",320,0)
 ;
"RTN","LA7VORU1",321,0)
 ;
"RTN","LA7VORU1",322,0)
NTE ; Build NTE segment with comment
"RTN","LA7VORU1",323,0)
 ;
"RTN","LA7VORU1",324,0)
 N LA7DATA
"RTN","LA7VORU1",325,0)
 ;
"RTN","LA7VORU1",326,0)
 D NTE^LA7VHLU3(.LA7DATA,.LA7TXT,$G(LA7SOC),LA7FS,LA7ECH,.LA7NTESN,$G(LA7CMTYP),$G(LA7FMT))
"RTN","LA7VORU1",327,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORU1",328,0)
 ;
"RTN","LA7VORU1",329,0)
 ; Check for flag to only build message but do not file
"RTN","LA7VORU1",330,0)
 I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORU1",331,0)
 ;
"RTN","LA7VORU1",332,0)
 Q
"RTN","LA7VORU2")
0^8^B30157126
"RTN","LA7VORU2",1,0)
LA7VORU2 ;DALOI/JMC - LAB ORU (Result) message builder cont'd ;12/09/09  14:18
"RTN","LA7VORU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORU2",3,0)
 ;
"RTN","LA7VORU2",4,0)
AP ; Observation/Result segment for Lab AP Results
"RTN","LA7VORU2",5,0)
 ;
"RTN","LA7VORU2",6,0)
 N LA7DATA,LA7IDT,LRSB,LRSS
"RTN","LA7VORU2",7,0)
 ;
"RTN","LA7VORU2",8,0)
 S LRDFN=LA("LRDFN"),LRSS=LA("SUB"),(LA7IDT,LRIDT)=LA("LRIDT")
"RTN","LA7VORU2",9,0)
 ;
"RTN","LA7VORU2",10,0)
 I $G(LA("NLT"))'="" S LA7NLT=LA("NLT")
"RTN","LA7VORU2",11,0)
 E  S (LA7NLT,LA("NLT"))=$P($$DEFCODE^LA7VHLU5(LRSS,.012,"",""),"!")
"RTN","LA7VORU2",12,0)
 ;
"RTN","LA7VORU2",13,0)
 D OBR^LA7VORU
"RTN","LA7VORU2",14,0)
 I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORU2",15,0)
 D NTE^LA7VORU
"RTN","LA7VORU2",16,0)
 D PMR
"RTN","LA7VORU2",17,0)
 ;
"RTN","LA7VORU2",18,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,1.2)) D PSR
"RTN","LA7VORU2",19,0)
 Q
"RTN","LA7VORU2",20,0)
 ;
"RTN","LA7VORU2",21,0)
 ;
"RTN","LA7VORU2",22,0)
APORM ; Entry point when building OBX segments for ORM message
"RTN","LA7VORU2",23,0)
 ;
"RTN","LA7VORU2",24,0)
 D PMR
"RTN","LA7VORU2",25,0)
 ;
"RTN","LA7VORU2",26,0)
 ; Process supplementary reports
"RTN","LA7VORU2",27,0)
 N LA7SR,LA7SS
"RTN","LA7VORU2",28,0)
 S LA7OBXSN=0,LRSB=1.2,LA7SR=0
"RTN","LA7VORU2",29,0)
 F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR)) Q:'LA7SR  D
"RTN","LA7VORU2",30,0)
 . N LA7IDT
"RTN","LA7VORU2",31,0)
 . ; If don't release this report then skip.
"RTN","LA7VORU2",32,0)
 . I $P($G(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR,0)),"^",2)'=1 Q
"RTN","LA7VORU2",33,0)
 . S LA7IDT=LRIDT_","_LA7SR D OBX^LA7VORU1
"RTN","LA7VORU2",34,0)
 ;
"RTN","LA7VORU2",35,0)
 Q
"RTN","LA7VORU2",36,0)
 ;
"RTN","LA7VORU2",37,0)
 ;
"RTN","LA7VORU2",38,0)
PMR ; Process main report
"RTN","LA7VORU2",39,0)
 N LA7ORG,LA7SS
"RTN","LA7VORU2",40,0)
 S LA7OBXSN=0
"RTN","LA7VORU2",41,0)
 ;
"RTN","LA7VORU2",42,0)
 D SPEC
"RTN","LA7VORU2",43,0)
 I LA7NVAF'=1 F LRSB=.013,.014,.015,.016,1,1.1,1.3,1.4 D OBX^LA7VORU1
"RTN","LA7VORU2",44,0)
 I LA7NVAF=1 D DOD
"RTN","LA7VORU2",45,0)
 ;
"RTN","LA7VORU2",46,0)
 ; Process organ/tissue subfile
"RTN","LA7VORU2",47,0)
 S LA7ORG=0
"RTN","LA7VORU2",48,0)
 F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG)) Q:'LA7ORG  D
"RTN","LA7VORU2",49,0)
 . N LA7IDT
"RTN","LA7VORU2",50,0)
 . S LRSB=10,LA7IDT=LRIDT_","_LA7ORG D OBX^LA7VORU1
"RTN","LA7VORU2",51,0)
 . I LRSS="SP" S LRSB="10,2",LA7IDT=LRIDT_","_LA7ORG D OBX^LA7VORU1
"RTN","LA7VORU2",52,0)
 . ; Special studies
"RTN","LA7VORU2",53,0)
 . S LA7SS=0,LRSB="10,5"
"RTN","LA7VORU2",54,0)
 . F  S LA7SS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG,5,LA7SS)) Q:'LA7SS  D
"RTN","LA7VORU2",55,0)
 . . S LA7IDT=LRIDT_","_LA7ORG_","_LA7SS D OBX^LA7VORU1
"RTN","LA7VORU2",56,0)
 ;
"RTN","LA7VORU2",57,0)
 Q
"RTN","LA7VORU2",58,0)
 ;
"RTN","LA7VORU2",59,0)
 ;
"RTN","LA7VORU2",60,0)
PSR ; Process supplementary reports
"RTN","LA7VORU2",61,0)
 N LA7SR,LA7SS
"RTN","LA7VORU2",62,0)
 I $G(LA("NLT"))'="" S LA7NLT=LA("NLT")
"RTN","LA7VORU2",63,0)
 E  S (LA7NLT,LA("NLT"))=$P($$DEFCODE^LA7VHLU5(LRSS,1.2,"",""),"!")
"RTN","LA7VORU2",64,0)
 S LA7OBXSN=0,LRSB=1.2,LA7SR=0
"RTN","LA7VORU2",65,0)
 F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR)) Q:'LA7SR  D
"RTN","LA7VORU2",66,0)
 . N LA7IDT
"RTN","LA7VORU2",67,0)
 . ; If don't release this report then skip.
"RTN","LA7VORU2",68,0)
 . I $P($G(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR,0)),"^",2)'=1 Q
"RTN","LA7VORU2",69,0)
 . D OBR^LA7VORU
"RTN","LA7VORU2",70,0)
 . I LA7NVAF=1 D PLC^LA7VORUA,DODSR Q
"RTN","LA7VORU2",71,0)
 . S LA7IDT=LRIDT_","_LA7SR D OBX^LA7VORU1
"RTN","LA7VORU2",72,0)
 Q
"RTN","LA7VORU2",73,0)
 ;
"RTN","LA7VORU2",74,0)
 ;
"RTN","LA7VORU2",75,0)
SPEC ; Send specimen multiple as series of OBX segments. One OBX segment for each specimen
"RTN","LA7VORU2",76,0)
 ; If DoD then send two OBX for each specimen, 1st with free text specimen description, 2nd  with SNOMED CT,
"RTN","LA7VORU2",77,0)
 ;
"RTN","LA7VORU2",78,0)
 N LA7DA,LA7IDT,LRSB
"RTN","LA7VORU2",79,0)
 ;
"RTN","LA7VORU2",80,0)
 S LA7DA=0,LRSB=.012
"RTN","LA7VORU2",81,0)
 F  S LA7DA=$O(^LR(LRDFN,LRSS,LRIDT,.1,LA7DA)) Q:'LA7DA  D
"RTN","LA7VORU2",82,0)
 . S LA7IDT=LRIDT_","_LA7DA S:LA7NVAF=1 LRSB=".012,.01" D OBX^LA7VORU1
"RTN","LA7VORU2",83,0)
 . I LA7NVAF=1 S LRSB=".012,.06" D OBX^LA7VORU1
"RTN","LA7VORU2",84,0)
 Q
"RTN","LA7VORU2",85,0)
 ;
"RTN","LA7VORU2",86,0)
 ;
"RTN","LA7VORU2",87,0)
DOD ; Build OBX segment's to special DoD specifications.
"RTN","LA7VORU2",88,0)
 ; Send word-processing fields as series of ST data type OBX's for DoD.
"RTN","LA7VORU2",89,0)
 ; DoD cannot handle formatted text (FT) data type.
"RTN","LA7VORU2",90,0)
 N LA7DA
"RTN","LA7VORU2",91,0)
 ;
"RTN","LA7VORU2",92,0)
 F LRSB=.013,.014,.015,.016,1,1.1,1.3,1.4 D
"RTN","LA7VORU2",93,0)
 . N LA7IDT,LA7SB
"RTN","LA7VORU2",94,0)
 . S LA7DA=0,LA7SB=$S(LRSB=.013:.2,LRSB=.014:.3,LRSB=.015:.4,LRSB=.016:.5,1:LRSB)
"RTN","LA7VORU2",95,0)
 . F  S LA7DA=$O(^LR(LRDFN,LRSS,LRIDT,LA7SB,LA7DA)) Q:'LA7DA  D
"RTN","LA7VORU2",96,0)
 . . S LA7IDT=LRIDT_","_LA7DA  D OBX^LA7VORU1
"RTN","LA7VORU2",97,0)
 ;
"RTN","LA7VORU2",98,0)
 Q
"RTN","LA7VORU2",99,0)
 ;
"RTN","LA7VORU2",100,0)
 ;
"RTN","LA7VORU2",101,0)
DODSR ; Build OBX segment's to special DoD specifications.
"RTN","LA7VORU2",102,0)
 ; Send Supplementary reports fields as series of ST data type OBX's for DoD.
"RTN","LA7VORU2",103,0)
 ; DoD cannot handle formatted text (FT) data type.
"RTN","LA7VORU2",104,0)
 ;
"RTN","LA7VORU2",105,0)
 N LA7IDT,LA7DA
"RTN","LA7VORU2",106,0)
 S LA7DA=0
"RTN","LA7VORU2",107,0)
 F  S LA7DA=$O(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR,1,LA7DA)) Q:'LA7DA  D
"RTN","LA7VORU2",108,0)
 . S LA7IDT=LRIDT_","_LA7SR_","_LA7DA  D OBX^LA7VORU1
"RTN","LA7VORU2",109,0)
 ;
"RTN","LA7VORU2",110,0)
 Q
"RTN","LA7VORU2",111,0)
 ;
"RTN","LA7VORU2",112,0)
 ;
"RTN","LA7VORU2",113,0)
RPTNTE ; Send report comments
"RTN","LA7VORU2",114,0)
 ; Called from LA7VORU1 to send MI NTE segments
"RTN","LA7VORU2",115,0)
 ;
"RTN","LA7VORU2",116,0)
 N LA7CMTYP,LA7FMT,LA7J,LA7ND,LA7SOC,LA7TXT,LA7X
"RTN","LA7VORU2",117,0)
 ;
"RTN","LA7VORU2",118,0)
 ; Source of comment - handle special codes for other systems, ie DOD-CHCS
"RTN","LA7VORU2",119,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RC",1:"L"),LA7ND=0
"RTN","LA7VORU2",120,0)
 ;
"RTN","LA7VORU2",121,0)
 S LA7FMT=0,LA7CMTYP=""
"RTN","LA7VORU2",122,0)
 ; If HDR interface then send as repetition text.
"RTN","LA7VORU2",123,0)
 I $G(LA7INTYP)=30 S LA7FMT=2
"RTN","LA7VORU2",124,0)
 ;
"RTN","LA7VORU2",125,0)
 D
"RTN","LA7VORU2",126,0)
 . ; Bacterial preliminary/report/tests remark
"RTN","LA7VORU2",127,0)
 . I LRSB=11 S LA7ND=4,LA7CMTYP="VA-LRMI010" Q
"RTN","LA7VORU2",128,0)
 . I LRSB=1 S LA7ND=19,LA7CMTYP="VA-LRMI011" Q
"RTN","LA7VORU2",129,0)
 . I LRSB=1.5 S LA7ND=26,LA7CMTYP="VA-LRMI012" Q
"RTN","LA7VORU2",130,0)
 . I LRSB=11.7 S LA7ND=25,LA7CMTYP="VA-LRMI013" Q
"RTN","LA7VORU2",131,0)
 . ; Parasite preliminary/report/tests remark
"RTN","LA7VORU2",132,0)
 . I LRSB=14 S LA7ND=7,LA7CMTYP="VA-LRMI020" Q
"RTN","LA7VORU2",133,0)
 . I LRSB=16.5 S LA7ND=21,LA7CMTYP="VA-LRMI021" Q
"RTN","LA7VORU2",134,0)
 . I LRSB=16.4 S LA7ND=27,LA7CMTYP="VA-LRMI022" Q
"RTN","LA7VORU2",135,0)
 . I LRSB=15.1 S LA7ND=24,LA7CMTYP="VA-LRMI023" Q
"RTN","LA7VORU2",136,0)
 . I LRSB="16,1" S LA7ND=6,LA7CMTYP="VA-LRMI53" Q
"RTN","LA7VORU2",137,0)
 . ; Fungal preliminary/report/tests remark
"RTN","LA7VORU2",138,0)
 . I LRSB=18 S LA7ND=10,LA7CMTYP="VA-LRMI030" Q
"RTN","LA7VORU2",139,0)
 . I LRSB=20.5 S LA7ND=22,LA7CMTYP="VA-LRMI031" Q
"RTN","LA7VORU2",140,0)
 . I LRSB=20.4 S LA7ND=28,LA7CMTYP="VA-LRMI032" Q
"RTN","LA7VORU2",141,0)
 . I LRSB=19.6 S LA7ND=15,LA7CMTYP="VA-LRMI033" Q
"RTN","LA7VORU2",142,0)
 . ; Mycobacteria preliminary/report/tests remark
"RTN","LA7VORU2",143,0)
 . I LRSB=22 S LA7ND=13,LA7CMTYP="VA-LRMI040" Q
"RTN","LA7VORU2",144,0)
 . I LRSB=26.5 S LA7ND=23,LA7CMTYP="VA-LRMI041" Q
"RTN","LA7VORU2",145,0)
 . I LRSB=26.4 S LA7ND=29,LA7CMTYP="VA-LRMI042" Q
"RTN","LA7VORU2",146,0)
 . ; Viral preliminary/report/tests remark
"RTN","LA7VORU2",147,0)
 . I LRSB=33 S LA7ND=18,LA7CMTYP="VA-LRMI050" Q
"RTN","LA7VORU2",148,0)
 . I LRSB=36.5 S LA7ND=20,LA7CMTYP="VA-LRMI051" Q
"RTN","LA7VORU2",149,0)
 . I LRSB=36.4 S LA7ND=30,LA7CMTYP="VA-LRMI052" Q
"RTN","LA7VORU2",150,0)
 ;
"RTN","LA7VORU2",151,0)
 I LA7ND'>0 Q
"RTN","LA7VORU2",152,0)
 ;
"RTN","LA7VORU2",153,0)
 S LA7J=0
"RTN","LA7VORU2",154,0)
 F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J)) Q:'LA7J  D
"RTN","LA7VORU2",155,0)
 . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J,0))
"RTN","LA7VORU2",156,0)
 . I LA7FMT S LA7TXT(LA7J)=LA7X
"RTN","LA7VORU2",157,0)
 . E  S LA7TXT=LA7X D NTE^LA7VORU1
"RTN","LA7VORU2",158,0)
 ;
"RTN","LA7VORU2",159,0)
 ; If formatted or repetition format then build comments to a NTE segment.
"RTN","LA7VORU2",160,0)
 I LA7FMT,$D(LA7TXT) D NTE^LA7VORU1
"RTN","LA7VORU2",161,0)
 ;
"RTN","LA7VORU2",162,0)
 Q
"RTN","LA7VORU2",163,0)
 ;
"RTN","LA7VORU2",164,0)
 ;
"RTN","LA7VORU2",165,0)
RPT ; Report specimen results as OBX segments to DoD - taken from various XXX RPT REMARK fields (13, 17, 21, 27, 37)
"RTN","LA7VORU2",166,0)
 ; Called from LA7VORU1.
"RTN","LA7VORU2",167,0)
 N LA7DA,LA7IDT,LA7ND
"RTN","LA7VORU2",168,0)
 ;
"RTN","LA7VORU2",169,0)
 S LA7ND=$S(LRSB=11:4,LRSB=14:7,LRSB=18:10,LRSB=22:13,LRSB=33:18,1:0)
"RTN","LA7VORU2",170,0)
 I 'LA7ND Q
"RTN","LA7VORU2",171,0)
 S LA7DA=0
"RTN","LA7VORU2",172,0)
 F  S LA7DA=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7DA)) Q:'LA7DA  S LA7IDT=LRIDT_","_LA7DA  D OBX^LA7VORU1
"RTN","LA7VORU2",173,0)
 Q
"RTN","LA7VORUA")
0^9^B41751237
"RTN","LA7VORUA",1,0)
LA7VORUA ;DALOI/JMC - Builder of HL7 Lab Results ;10/12/11  14:28
"RTN","LA7VORUA",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**61,64,68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORUA",3,0)
 ;
"RTN","LA7VORUA",4,0)
 Q
"RTN","LA7VORUA",5,0)
 ;
"RTN","LA7VORUA",6,0)
 ;
"RTN","LA7VORUA",7,0)
OBX ;Observation/Result segment for Lab Results
"RTN","LA7VORUA",8,0)
 ;
"RTN","LA7VORUA",9,0)
 ;ZEXCEPT: GBL,LA,LA76249,LA7NOMSG,LA7NTESN,LA7NVAF
"RTN","LA7VORUA",10,0)
 ;
"RTN","LA7VORUA",11,0)
 N LA7953,LA7DATA,LA7VT,LA7VTIEN,LA7X
"RTN","LA7VORUA",12,0)
 ;
"RTN","LA7VORUA",13,0)
 S LA7VTIEN=0
"RTN","LA7VORUA",14,0)
 F  S LA7VTIEN=$O(^LAHM(62.49,LA(62.49),1,LA7VTIEN)) Q:'LA7VTIEN  D
"RTN","LA7VORUA",15,0)
 . S LA7VT=$P(^LAHM(62.49,LA(62.49),1,LA7VTIEN,0),"^",1,2)
"RTN","LA7VORUA",16,0)
 . ;
"RTN","LA7VORUA",17,0)
 . ; Send back an OBX if individual test from a panel was NP'ed - ccr_6164n
"RTN","LA7VORUA",18,0)
 . N LA7VNP ; LA7VNP is a flag used by CH^LA7VOBX1 to determine if test was NP'ed.
"RTN","LA7VORUA",19,0)
 . S LA7VNP=0
"RTN","LA7VORUA",20,0)
 . S LA7VNP=$$CHECKNP(LA("HUID"),+$P(LA7VT,"^",1))
"RTN","LA7VORUA",21,0)
 . ;
"RTN","LA7VORUA",22,0)
 . ; Build OBX segment
"RTN","LA7VORUA",23,0)
 . K LA7DATA
"RTN","LA7VORUA",24,0)
 . D OBX^LA7VOBX(LA("LRDFN"),LA("SUB"),LA("LRIDT"),$P(LA7VT,"^",1,2),.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH,$G(LA7NVAF))
"RTN","LA7VORUA",25,0)
 . ; If OBX failed to build then don't store
"RTN","LA7VORUA",26,0)
 . I '$D(LA7DATA) Q
"RTN","LA7VORUA",27,0)
 . ;
"RTN","LA7VORUA",28,0)
 . D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORUA",29,0)
 . I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORUA",30,0)
 . ;
"RTN","LA7VORUA",31,0)
 . ; Send performing lab comment and interpretation from file #60
"RTN","LA7VORUA",32,0)
 . S LA7NTESN=0
"RTN","LA7VORUA",33,0)
 . I LA7NVAF=1 D PLC^LA7VORUA
"RTN","LA7VORUA",34,0)
 . I LA7VNP Q  ; ccr_6164n
"RTN","LA7VORUA",35,0)
 . D INTRP^LA7VORUA
"RTN","LA7VORUA",36,0)
 . ;
"RTN","LA7VORUA",37,0)
 . ; Mark result as sent - set to 1, if corrected results set to 2
"RTN","LA7VORUA",38,0)
 . I LA("SUB")="CH" D
"RTN","LA7VORUA",39,0)
 . . I $P(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),$P(LA7VT,"^")),"^",10)>1 Q
"RTN","LA7VORUA",40,0)
 . . S $P(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),$P(LA7VT,"^")),"^",10)=$S($P(LA7VT,"^",2)="C":2,1:1)
"RTN","LA7VORUA",41,0)
 ;
"RTN","LA7VORUA",42,0)
 Q
"RTN","LA7VORUA",43,0)
 ;
"RTN","LA7VORUA",44,0)
 ;
"RTN","LA7VORUA",45,0)
NTE ; Build NTE segment
"RTN","LA7VORUA",46,0)
 ;
"RTN","LA7VORUA",47,0)
 ;ZEXCEPT: LA,LA7INTYP,LA7NVAF
"RTN","LA7VORUA",48,0)
 ;
"RTN","LA7VORUA",49,0)
 N LA7CMTYP,LA7FMT,LA7J,LA7NTE,LA7SOC,LA7TXT,LA7TYP,LA7X,LA7Y,X
"RTN","LA7VORUA",50,0)
 ;
"RTN","LA7VORUA",51,0)
 ; Source of comment - handle other system's special codes, i.e. DOD-CHCS
"RTN","LA7VORUA",52,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"AC",1:"L")
"RTN","LA7VORUA",53,0)
 ;
"RTN","LA7VORUA",54,0)
 S LA7FMT=0
"RTN","LA7VORUA",55,0)
 ; If HDR interface then send as repetition text.
"RTN","LA7VORUA",56,0)
 I $G(LA7INTYP)=30 S LA7FMT=2
"RTN","LA7VORUA",57,0)
 ;
"RTN","LA7VORUA",58,0)
 ; Send "MI" specimen's comments
"RTN","LA7VORUA",59,0)
 I LA("SUB")="MI" D
"RTN","LA7VORUA",60,0)
 . K LA7NTE
"RTN","LA7VORUA",61,0)
 . S LA7X=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),99)),LA7CMTYP="VA-LRMI001",LA7J=1
"RTN","LA7VORUA",62,0)
 . I LA7X="" Q
"RTN","LA7VORUA",63,0)
 . I LA7FMT S LA7Y(LA7CMTYP,LA7J)=LA7X
"RTN","LA7VORUA",64,0)
 . E  S LA7TXT=LA7X D NTE^LA7VORU1
"RTN","LA7VORUA",65,0)
 ;
"RTN","LA7VORUA",66,0)
 ; Send "CH" specimen's comments
"RTN","LA7VORUA",67,0)
 I LA("SUB")="CH" D
"RTN","LA7VORUA",68,0)
 . S LA7J=0
"RTN","LA7VORUA",69,0)
 . F  S LA7J=$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),1,LA7J)) Q:'LA7J  D
"RTN","LA7VORUA",70,0)
 . . K LA7NTE
"RTN","LA7VORUA",71,0)
 . . S LA7X=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),1,LA7J,0)),LA7CMTYP="VA-LR002"
"RTN","LA7VORUA",72,0)
 . . I $E(LA7X,1)="~" S LA7CMTYP="VA-LR001"
"RTN","LA7VORUA",73,0)
 . . I LA7X="" S LA7X=" "
"RTN","LA7VORUA",74,0)
 . . I LA7FMT S LA7Y(LA7CMTYP,LA7J)=LA7X
"RTN","LA7VORUA",75,0)
 . . E  S LA7TXT=LA7X D NTE^LA7VORU1
"RTN","LA7VORUA",76,0)
 ;
"RTN","LA7VORUA",77,0)
 ; If formatted or repetition format then build each type of comments to an NTE segment.
"RTN","LA7VORUA",78,0)
 I LA7FMT D
"RTN","LA7VORUA",79,0)
 . S LA7CMTYP=""
"RTN","LA7VORUA",80,0)
 . F  S LA7CMTYP=$O(LA7Y(LA7CMTYP)) Q:LA7CMTYP=""  D
"RTN","LA7VORUA",81,0)
 . . K LA7TXT
"RTN","LA7VORUA",82,0)
 . . M LA7TXT=LA7Y(LA7CMTYP)
"RTN","LA7VORUA",83,0)
 . . D NTE^LA7VORU1
"RTN","LA7VORUA",84,0)
 ;
"RTN","LA7VORUA",85,0)
 Q
"RTN","LA7VORUA",86,0)
 ;
"RTN","LA7VORUA",87,0)
 ;
"RTN","LA7VORUA",88,0)
PLC ; Reporting lab comment
"RTN","LA7VORUA",89,0)
 ;
"RTN","LA7VORUA",90,0)
 ;ZEXCEPT: LA,LA7VT
"RTN","LA7VORUA",91,0)
 ;
"RTN","LA7VORUA",92,0)
 N LA74,LA7DIV,LA7NTE,LA7RNLT,LA7SOC,LA7TSTN,LA7X,X
"RTN","LA7VORUA",93,0)
 S (LA74,LA7DIV,LA7RNLT,LA7TSTN)=""
"RTN","LA7VORUA",94,0)
 ;
"RTN","LA7VORUA",95,0)
 ; Find reporting facility (division).
"RTN","LA7VORUA",96,0)
 I LA("SUB")="CH" D
"RTN","LA7VORUA",97,0)
 . S LA7X=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),$P(LA7VT,"^")))
"RTN","LA7VORUA",98,0)
 . S LA74=$P(LA7X,"^",9)
"RTN","LA7VORUA",99,0)
 . ; If verifying institution not stored with result, use releasing inst. or inst. of user - ccr_6164n
"RTN","LA7VORUA",100,0)
 . I LA74="" S LA74=$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"RF")),"^")
"RTN","LA7VORUA",101,0)
 . I LA74="",$$DIV4^XUSER(.LA74,$P(LA7X,"^",4)) S LA74=$O(LA74(0))
"RTN","LA7VORUA",102,0)
 . ;
"RTN","LA7VORUA",103,0)
 . ; if NLT code of reported test is not stored with result, use default code - ccr_6164n
"RTN","LA7VORUA",104,0)
 . I $P($P(LA7X,"^",3),"!",2)="" D
"RTN","LA7VORUA",105,0)
 . . S $P(LA7X,"^",3)=$$DEFCODE^LA7VHLU5(LA("SUB"),$P(LA7VT,"^"),$P(LA7X,"^",3),$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0)),"^",5))
"RTN","LA7VORUA",106,0)
 . ;
"RTN","LA7VORUA",107,0)
 . S LA7RNLT=$P($P(LA7X,"^",3),"!",2)
"RTN","LA7VORUA",108,0)
 ;
"RTN","LA7VORUA",109,0)
 I LA("SUB")="MI" D
"RTN","LA7VORUA",110,0)
 . S LA74=$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"RF")),"^") Q:LA74
"RTN","LA7VORUA",111,0)
 . S LA7X=$G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),0))
"RTN","LA7VORUA",112,0)
 . S LA74=$P(LA7X,"^",15)
"RTN","LA7VORUA",113,0)
 ;
"RTN","LA7VORUA",114,0)
 I "SPCYEM"[LA("SUB") S LA74=$P($G(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),"RF")),"^")
"RTN","LA7VORUA",115,0)
 ;
"RTN","LA7VORUA",116,0)
 D BPLC
"RTN","LA7VORUA",117,0)
 Q
"RTN","LA7VORUA",118,0)
 ;
"RTN","LA7VORUA",119,0)
 ;
"RTN","LA7VORUA",120,0)
BPLC ; Build NTE segment with performing lab disclosure statement
"RTN","LA7VORUA",121,0)
 ;
"RTN","LA7VORUA",122,0)
 ;ZEXCEPT: LA,LA74,LA7DIV,LA7NLT,LA7NVAF,LA7RNLT,LA7SOC,LA7TSTN,LA7TXT
"RTN","LA7VORUA",123,0)
 ;
"RTN","LA7VORUA",124,0)
 N LA7CMTYP,LA7FMT,LA7TXT,LA7X,X
"RTN","LA7VORUA",125,0)
 ;
"RTN","LA7VORUA",126,0)
 S LA7CMTYP="",LA7FMT=0
"RTN","LA7VORUA",127,0)
 ;
"RTN","LA7VORUA",128,0)
 ; Source of comment - handle other system's special codes, i.e. DOD-CHCS
"RTN","LA7VORUA",129,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"DS",1:"L")
"RTN","LA7VORUA",130,0)
 ;
"RTN","LA7VORUA",131,0)
 I LA74="" S LA74=+$$KSP^XUPARAM("INST")
"RTN","LA7VORUA",132,0)
 I LA74 S LA7DIV=$$NAME^XUAF4(LA74)
"RTN","LA7VORUA",133,0)
 ;
"RTN","LA7VORUA",134,0)
 ; Build result test name
"RTN","LA7VORUA",135,0)
 I LA7RNLT="" D
"RTN","LA7VORUA",136,0)
 . I $G(LA("NLT"))'="" S LA7RNLT=LA("NLT") Q
"RTN","LA7VORUA",137,0)
 . S LA7RNLT=$G(LA7NLT)
"RTN","LA7VORUA",138,0)
 I LA7RNLT D
"RTN","LA7VORUA",139,0)
 . S LA7X=$O(^LAM("E",LA7RNLT,0))
"RTN","LA7VORUA",140,0)
 . I LA7X S LA7TSTN=$$GET1^DIQ(64,LA7X_",",.01,"I")
"RTN","LA7VORUA",141,0)
 ;
"RTN","LA7VORUA",142,0)
 S LA7TXT=LA7TSTN_" results from "_LA7DIV_"."
"RTN","LA7VORUA",143,0)
 D NTE^LA7VORU1
"RTN","LA7VORUA",144,0)
 S X=$$PADD^XUAF4(LA74)
"RTN","LA7VORUA",145,0)
 S LA7TXT=$P(X,U)_" "_$P(X,U,2)_", "_$P(X,U,3)_" "_$P(X,U,4)
"RTN","LA7VORUA",146,0)
 S X=$$ID^XUAF4("CLIA",LA74)
"RTN","LA7VORUA",147,0)
 I X'="" S LA7TXT=LA7TXT_" (CLIA# "_X_")"
"RTN","LA7VORUA",148,0)
 D NTE^LA7VORU1
"RTN","LA7VORUA",149,0)
 Q
"RTN","LA7VORUA",150,0)
 ;
"RTN","LA7VORUA",151,0)
 ;
"RTN","LA7VORUA",152,0)
INTRP ; Send test interpretation
"RTN","LA7VORUA",153,0)
 ; Send "CH" subscript file #60 site/specimen's interpretation field (#5.5)
"RTN","LA7VORUA",154,0)
 ;
"RTN","LA7VORUA",155,0)
 ;ZEXCEPT: LA,LA763,LA7INTYP,LA7NVAF,LA7V,LA7VT
"RTN","LA7VORUA",156,0)
 ;
"RTN","LA7VORUA",157,0)
 N LA760,LA761,LA7CMTYP,LA7FMT,LA7J,LA7NTE,LA7SOC,LA7TXT,LA7X,LA7Y,LRSB
"RTN","LA7VORUA",158,0)
 ;
"RTN","LA7VORUA",159,0)
 S LRSB=$P(LA7VT,"^"),(LA7FMT,LA7Y)=0
"RTN","LA7VORUA",160,0)
 S LA761=+$P(LA763(0),"^",5)
"RTN","LA7VORUA",161,0)
 S LA7X=^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),LRSB)
"RTN","LA7VORUA",162,0)
 S LA760=+$P($P(LA7X,"^",3),"!",7)
"RTN","LA7VORUA",163,0)
 I LA760,$D(^LAB(60,LA760,1,LA761,1)) S LA7Y=1
"RTN","LA7VORUA",164,0)
 I 'LA760 D
"RTN","LA7VORUA",165,0)
 . S LA760=0
"RTN","LA7VORUA",166,0)
 . F  S LA760=$O(^LAB(60,"C","CH;"_LRSB_";1",LA760)) Q:'LA760  D  Q:LA7Y
"RTN","LA7VORUA",167,0)
 . . I $D(^LAB(60,LA760,1,LA761,1)) S LA7Y=1
"RTN","LA7VORUA",168,0)
 ;
"RTN","LA7VORUA",169,0)
 I 'LA7Y Q
"RTN","LA7VORUA",170,0)
 ;
"RTN","LA7VORUA",171,0)
 ; Source of comment - handle other system's special codes, i.e. DOD-CHCS
"RTN","LA7VORUA",172,0)
 S LA7SOC=$S($G(LA7NVAF)=1:"RI",1:"L"),LA7CMTYP="VA-LR003"
"RTN","LA7VORUA",173,0)
 ;
"RTN","LA7VORUA",174,0)
 ; If HDR interface then send as repetition text.
"RTN","LA7VORUA",175,0)
 I $G(LA7INTYP)=30 S LA7FMT=2
"RTN","LA7VORUA",176,0)
 ;
"RTN","LA7VORUA",177,0)
 ; Build each line of interpretation as a NTE segment unless formatting flag (LA7FMT) indicates
"RTN","LA7VORUA",178,0)
 ;  either formatted text or repetition.
"RTN","LA7VORUA",179,0)
 S LA7J=0
"RTN","LA7VORUA",180,0)
 F  S LA7J=$O(^LAB(60,LA760,1,LA761,1,LA7J)) Q:'LA7J  D
"RTN","LA7VORUA",181,0)
 . S LA7X=$G(^LAB(60,LA760,1,LA761,1,LA7J,0))
"RTN","LA7VORUA",182,0)
 . I LA7X="" S LA7X=" "
"RTN","LA7VORUA",183,0)
 . I LA7FMT S LA7TXT(LA7J)=LA7X
"RTN","LA7VORUA",184,0)
 . E  S LA7TXT=LA7X D NTE^LA7VORU1
"RTN","LA7VORUA",185,0)
 ;
"RTN","LA7VORUA",186,0)
 I LA7FMT,$D(LA7TXT) D NTE^LA7VORU1
"RTN","LA7VORUA",187,0)
 ;
"RTN","LA7VORUA",188,0)
 Q
"RTN","LA7VORUA",189,0)
 ;
"RTN","LA7VORUA",190,0)
 ;
"RTN","LA7VORUA",191,0)
CHECKNP(HUID,LRSB) ; Check if test was NP'ed - added with ccr_6164n
"RTN","LA7VORUA",192,0)
 ;
"RTN","LA7VORUA",193,0)
 ; Call with HUID = Host UID
"RTN","LA7VORUA",194,0)
 ;           LRSB = "CH" subscript node (Data Name)
"RTN","LA7VORUA",195,0)
 ;
"RTN","LA7VORUA",196,0)
 ; Returns LA7VNP = 0 - Test was not NP'ed
"RTN","LA7VORUA",197,0)
 ;                  1 - This test was NP'ed
"RTN","LA7VORUA",198,0)
 ;
"RTN","LA7VORUA",199,0)
 ;
"RTN","LA7VORUA",200,0)
 N LA760,LA7AA,LA7AD,LA7AN,LA7VNP,LA7Y
"RTN","LA7VORUA",201,0)
 ;
"RTN","LA7VORUA",202,0)
 S LA7VNP=0
"RTN","LA7VORUA",203,0)
 ;
"RTN","LA7VORUA",204,0)
 S LA7Y=$$CHECKUID^LRWU4(HUID)
"RTN","LA7VORUA",205,0)
 S LA760=+$O(^LAB(60,"C","CH;"_+LRSB_";1",0))
"RTN","LA7VORUA",206,0)
 I 'LA7Y!('LA760) Q LA7VNP
"RTN","LA7VORUA",207,0)
 ;
"RTN","LA7VORUA",208,0)
 S LA7AA=+$P(LA7Y,U,2)
"RTN","LA7VORUA",209,0)
 S LA7AD=+$P(LA7Y,U,3)
"RTN","LA7VORUA",210,0)
 S LA7AN=+$P(LA7Y,U,4)
"RTN","LA7VORUA",211,0)
 ;
"RTN","LA7VORUA",212,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0)),U,6)="*Not Performed" S LA7VNP=1 Q LA7VNP
"RTN","LA7VORUA",213,0)
 ;
"RTN","LA7VORUA",214,0)
 I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760,0)),'LA7VNP D
"RTN","LA7VORUA",215,0)
 . N LA7TST
"RTN","LA7VORUA",216,0)
 . S LA7TST=0
"RTN","LA7VORUA",217,0)
 . F  S LA7TST=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7TST)) Q:'LA7TST!(LA7VNP)  D
"RTN","LA7VORUA",218,0)
 . . N LA7TREE
"RTN","LA7VORUA",219,0)
 . . I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA7TST,0)),U,6)'="*Not Performed" Q
"RTN","LA7VORUA",220,0)
 . . D UNWIND^LA7ADL1(LA7TST,9,LA7TST)
"RTN","LA7VORUA",221,0)
 . . I $D(LA7TREE(LA760)) S LA7VNP=1
"RTN","LA7VORUA",222,0)
 ;
"RTN","LA7VORUA",223,0)
 Q LA7VNP
"RTN","LA7VORUB")
0^19^B55030598
"RTN","LA7VORUB",1,0)
LA7VORUB ;DALOI/JMC - Builder of HL7 Lab Results cont'd ;10/18/11  16:52
"RTN","LA7VORUB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74**;Sep 27, 1994;Build 229
"RTN","LA7VORUB",3,0)
 ;
"RTN","LA7VORUB",4,0)
 Q
"RTN","LA7VORUB",5,0)
 ;
"RTN","LA7VORUB",6,0)
 ;
"RTN","LA7VORUB",7,0)
OBR ;Observation Request segment for Lab Order
"RTN","LA7VORUB",8,0)
 ;
"RTN","LA7VORUB",9,0)
 N LA761,LA762,LA7DATA,LA7PLOBR,LA7PRI,LA7RSDT,LA7SAC,LA7SNM,LA7X,LA7Y,LADFINST,OBR,X,Y
"RTN","LA7VORUB",10,0)
 ;
"RTN","LA7VORUB",11,0)
 ; Retrieve placer's OBR information stored in #69.6
"RTN","LA7VORUB",12,0)
 D RETOBR^LA7VHLU(LA("SITE"),LA("RUID"),LA("NLT"),.LA7PLOBR)
"RTN","LA7VORUB",13,0)
 ;
"RTN","LA7VORUB",14,0)
 ; Retrieve "ORUT" node for this NLT from file #63
"RTN","LA7VORUB",15,0)
 S LA7NLT(63)=""
"RTN","LA7VORUB",16,0)
 I LA7NLT'="" D
"RTN","LA7VORUB",17,0)
 . S LA7X=$O(^LR(LRDFN,LRSS,LRIDT,"ORUT","B",LA7NLT,0))
"RTN","LA7VORUB",18,0)
 . I LA7X>0 S LA7NLT(63)=$G(^LR(LRDFN,LRSS,LRIDT,"ORUT",LA7X,0))
"RTN","LA7VORUB",19,0)
 ;
"RTN","LA7VORUB",20,0)
 ; Default institution from Kernel
"RTN","LA7VORUB",21,0)
 S LADFINST=+$$KSP^XUPARAM("INST")
"RTN","LA7VORUB",22,0)
 ;
"RTN","LA7VORUB",23,0)
 ; Retreive accession info used below  - accession area^accession date^accession number
"RTN","LA7VORUB",24,0)
 S LA7Y=$$CHECKUID^LRWU4(LA("HUID"))
"RTN","LA7VORUB",25,0)
 I LA7Y S LA("HUID",68)=$P(LA7Y,"^",2,4)
"RTN","LA7VORUB",26,0)
 E  S LA("HUID",68)=""
"RTN","LA7VORUB",27,0)
 ;
"RTN","LA7VORUB",28,0)
 ; Initialize OBR segment
"RTN","LA7VORUB",29,0)
 S OBR(0)="OBR"
"RTN","LA7VORUB",30,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN)
"RTN","LA7VORUB",31,0)
 ;
"RTN","LA7VORUB",32,0)
 ; Remote UID
"RTN","LA7VORUB",33,0)
 K LA7X
"RTN","LA7VORUB",34,0)
 M LA7X=LA("RUID")
"RTN","LA7VORUB",35,0)
 S OBR(2)=$$OBR2^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",36,0)
 ;
"RTN","LA7VORUB",37,0)
 ; Host UID
"RTN","LA7VORUB",38,0)
 K LA7X
"RTN","LA7VORUB",39,0)
 M LA7X=LA("HUID")
"RTN","LA7VORUB",40,0)
 S OBR(3)=$$OBR3^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",41,0)
 ;
"RTN","LA7VORUB",42,0)
 ; Universal service ID, build from info stored in #69.6
"RTN","LA7VORUB",43,0)
 K LA7X
"RTN","LA7VORUB",44,0)
 S LA7X=""
"RTN","LA7VORUB",45,0)
 I $G(LA7PLOBR("OBR-4"))'="" S OBR(4)=$$CNVFLD^LA7VHLU3(LA7PLOBR("OBR-4"),LA7PLOBR("ECH"),LA7ECH)
"RTN","LA7VORUB",46,0)
 E  S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,$P(LA7NLT(63),"^",13),LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",47,0)
 ;
"RTN","LA7VORUB",48,0)
 ; Collection D/T - only send date if d/t is inexact (2nd piece)
"RTN","LA7VORUB",49,0)
 K LA7X
"RTN","LA7VORUB",50,0)
 S LA7X=$P(LA763(0),"^") S:$P(LA763(0),"^",2) LA7X=$P(LA7X,".")
"RTN","LA7VORUB",51,0)
 S OBR(7)=$$OBR7^LA7VOBR(LA7X)
"RTN","LA7VORUB",52,0)
 ;
"RTN","LA7VORUB",53,0)
 ; Specimen action code from order type in file #63 "ORUT" node
"RTN","LA7VORUB",54,0)
 ; If no OBR from PENDING ORDER file (#69.6) then assume added test.
"RTN","LA7VORUB",55,0)
 S LA7SAC=""
"RTN","LA7VORUB",56,0)
 I $P(LA7NLT(63),"^",5) S LA7SAC=$$GET1^DIQ(64.061,$P(LA7NLT(63),"^",5)_",",2)
"RTN","LA7VORUB",57,0)
 I $G(LA7INTYP)=10 D
"RTN","LA7VORUB",58,0)
 . I LA7SAC="",$G(LA7PLOBR("OBR-4"))="" S LA7SAC="A"
"RTN","LA7VORUB",59,0)
 . I LA7NVAF=1,LA7SAC'?1(1"G",1"R",1"A") S LA7SAC=""
"RTN","LA7VORUB",60,0)
 I LA7SAC'="" S OBR(11)=$$OBR11^LA7VOBR(LA7SAC)
"RTN","LA7VORUB",61,0)
 ;
"RTN","LA7VORUB",62,0)
 ; Infection Warning
"RTN","LA7VORUB",63,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7VORUB",64,0)
 ;
"RTN","LA7VORUB",65,0)
 ; Lab Arrival Time
"RTN","LA7VORUB",66,0)
 ; "CH" subscript does not store lab arrival time - attempt to retrieve from file #68.
"RTN","LA7VORUB",67,0)
 ; Other subscripts do store lab arrival time (date/time received).
"RTN","LA7VORUB",68,0)
 I LA("SUB")?1(1"MI",1"SP",1"CY",1"EM") S OBR(14)=$$OBR14^LA7VOBR($P(LA763(0),"^",10))
"RTN","LA7VORUB",69,0)
 I LA("SUB")="CH",LA("HUID",68) D
"RTN","LA7VORUB",70,0)
 . S LA7X=$G(^LRO(68,$P(LA("HUID",68),"^"),1,$P(LA("HUID",68),"^",2),1,$P(LA("HUID",68),"^",3),3))
"RTN","LA7VORUB",71,0)
 . I $P(LA7X,"^",3) S OBR(14)=$$OBR14^LA7VOBR($P(LA7X,"^",3))
"RTN","LA7VORUB",72,0)
 ;
"RTN","LA7VORUB",73,0)
 ; Specimen source
"RTN","LA7VORUB",74,0)
 S (LA761,LA762,LA7Y)="",LA7SNM=1
"RTN","LA7VORUB",75,0)
 I LA("SUB")?1(1"CH",1"MI") D
"RTN","LA7VORUB",76,0)
 . S LA761=$P(LA763(0),U,5)
"RTN","LA7VORUB",77,0)
 . I LA761="" D CREATE^LA7LOG(27)
"RTN","LA7VORUB",78,0)
 . I LA("SUB")="MI" S LA762=$P(LA763(0),U,11)
"RTN","LA7VORUB",79,0)
 ;
"RTN","LA7VORUB",80,0)
 ; If multiple different specimens then OBR-15 always indicates XXX for AP subscripts - specimen is communicated in OBX segments.
"RTN","LA7VORUB",81,0)
 I LA("SUB")?1(1"SP",1"CY",1"EM") D
"RTN","LA7VORUB",82,0)
 . S LA7I=0
"RTN","LA7VORUB",83,0)
 . F  S LA7I=$O(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),.1,LA7I)) Q:'LA7I   D  Q:'LA7I
"RTN","LA7VORUB",84,0)
 . . S LA7X=$P(^LR(LA("LRDFN"),LA("SUB"),LA("LRIDT"),.1,LA7I,0),"^",6)
"RTN","LA7VORUB",85,0)
 . . I 'LA761,LA7X S LA761=LA7X
"RTN","LA7VORUB",86,0)
 . . I LA761,LA7X,(LA761'=LA7X) S (LA761,LA7I)=0
"RTN","LA7VORUB",87,0)
 . S LA762=$P(LA7NLT(63),"^",7)
"RTN","LA7VORUB",88,0)
 ;
"RTN","LA7VORUB",89,0)
 I LA7NVAF=1 S LA7SNM=2
"RTN","LA7VORUB",90,0)
 ;
"RTN","LA7VORUB",91,0)
 S OBR(15)=$$OBR15^LA7VOBR(LA761,LA762,LA7Y,LA7FS,LA7ECH,"",LA7SNM)
"RTN","LA7VORUB",92,0)
 ;
"RTN","LA7VORUB",93,0)
 ; If LEDI reflex test and not DoD/CHCS interface
"RTN","LA7VORUB",94,0)
 ;    then check original ordered test for placer field 1/2 (OBR-18/19) and ordering provider (OBR-17)
"RTN","LA7VORUB",95,0)
 I $G(LA7INTYP)=10,LA7SAC="G",LA7NVAF'=1,$G(LA7PLOBR("OBR-18"))="",$G(LA7PLOBR("OBR-19"))="" D
"RTN","LA7VORUB",96,0)
 . N LA7REFLEXNLT,LA7REFLEXPARENT
"RTN","LA7VORUB",97,0)
 . S LA7REFLEXNLT=$P(LA7NLT(63),"^",15)
"RTN","LA7VORUB",98,0)
 . I LA7REFLEXNLT="" Q
"RTN","LA7VORUB",99,0)
 . D RETOBR^LA7VHLU(LA("SITE"),LA("RUID"),LA7REFLEXNLT,.LA7REFLEXPARENT)
"RTN","LA7VORUB",100,0)
 . F I="OBR-18","OBR-19" S LA7PLOBR(I)=$G(LA7REFLEXPARENT(I))
"RTN","LA7VORUB",101,0)
 . I $G(LA7PLOBR("OBR-17"))="" S LA7PLOBR("OBR-17")=$G(LA7REFLEXPARENT("OBR-17"))
"RTN","LA7VORUB",102,0)
 ;
"RTN","LA7VORUB",103,0)
 ; Ordering provider
"RTN","LA7VORUB",104,0)
 K LA7X,LA7Y
"RTN","LA7VORUB",105,0)
 S (LA7X,LA7Y)=""
"RTN","LA7VORUB",106,0)
 ; "CH" subscript stores requesting provider and requesting div/location.
"RTN","LA7VORUB",107,0)
 I LA("SUB")="CH" D
"RTN","LA7VORUB",108,0)
 . N LA7J
"RTN","LA7VORUB",109,0)
 . S LA7J=$P(LA763(0),"^",13)
"RTN","LA7VORUB",110,0)
 . I $P(LA7J,";",2)="SC(" S LA7Y=$$GET1^DIQ(44,$P(LA7J,";")_",",3,"I")
"RTN","LA7VORUB",111,0)
 . I $P(LA7J,";",2)="DIC(4," S LA7Y=$P(LA7J,";")
"RTN","LA7VORUB",112,0)
 . S LA7X=$P(LA763(0),"^",10)
"RTN","LA7VORUB",113,0)
 ;
"RTN","LA7VORUB",114,0)
 ; Other subscripts only store requesting provider
"RTN","LA7VORUB",115,0)
 I LA("SUB")?1(1"MI",1"SP",1"CY",1"EM") S LA7X=$P(LA763(0),"^",7)
"RTN","LA7VORUB",116,0)
 ;
"RTN","LA7VORUB",117,0)
 ; Send back ordering provider stored in #69.6 if available.
"RTN","LA7VORUB",118,0)
 I LA7INTYP=10,$G(LA7PLOBR("OBR-17"))'="" S LA7X=LA7PLOBR("OBR-17")
"RTN","LA7VORUB",119,0)
 ;
"RTN","LA7VORUB",120,0)
 I LA7Y="" S LA7Y=LADFINST
"RTN","LA7VORUB",121,0)
 S OBR(16)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH,$S($G(LA7INTYP)=30:2,$G(LA7NVAF)=1:0,1:1))
"RTN","LA7VORUB",122,0)
 ;
"RTN","LA7VORUB",123,0)
 ; Placer Field #1 (remote auto-inst)
"RTN","LA7VORUB",124,0)
 ; Build from info stored in #69.6
"RTN","LA7VORUB",125,0)
 I $G(LA7PLOBR("OBR-18"))'="" D
"RTN","LA7VORUB",126,0)
 . K LA7X
"RTN","LA7VORUB",127,0)
 . S LA7X=$$UNESC^LA7VHLU3(LA7PLOBR("OBR-18"),LA7PLOBR("FS")_LA7PLOBR("ECH"))
"RTN","LA7VORUB",128,0)
 . S OBR(18)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORUB",129,0)
 ;
"RTN","LA7VORUB",130,0)
 ; Else build "auto instrument" if sending to VA facility
"RTN","LA7VORUB",131,0)
 I $G(LA7PLOBR("OBR-18"))="",'LA7NVAF D
"RTN","LA7VORUB",132,0)
 . K LA7X
"RTN","LA7VORUB",133,0)
 . S LA7X(1)=LA("AUTO-INST")
"RTN","LA7VORUB",134,0)
 . S OBR(18)=$$OBR18^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",135,0)
 ;
"RTN","LA7VORUB",136,0)
 ; Placer Field #2
"RTN","LA7VORUB",137,0)
 I $G(LA7PLOBR("OBR-19"))'="" D
"RTN","LA7VORUB",138,0)
 . K LA7X
"RTN","LA7VORUB",139,0)
 . S LA7X=$$UNESC^LA7VHLU3(LA7PLOBR("OBR-19"),LA7PLOBR("FS")_LA7PLOBR("ECH"))
"RTN","LA7VORUB",140,0)
 . S OBR(19)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORUB",141,0)
 ;
"RTN","LA7VORUB",142,0)
 ; Else build collecting UID if sending to VA facility
"RTN","LA7VORUB",143,0)
 I $G(LA7PLOBR("OBR-19"))="",'LA7NVAF,LA("RUID")'="" D
"RTN","LA7VORUB",144,0)
 . K LA7X
"RTN","LA7VORUB",145,0)
 . S LA7X(7)=LA("RUID")
"RTN","LA7VORUB",146,0)
 . S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",147,0)
 ;
"RTN","LA7VORUB",148,0)
 ; Filler Field #1
"RTN","LA7VORUB",149,0)
 ; Send file #63 ien info - used by HDR to track patient/specimen
"RTN","LA7VORUB",150,0)
 K LA7X
"RTN","LA7VORUB",151,0)
 S LA7X(1)=LA("LRDFN"),LA7X(2)=LA("SUB"),LA7X(3)=LA("LRIDT")
"RTN","LA7VORUB",152,0)
 S OBR(20)=$$OBR20^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",153,0)
 ;
"RTN","LA7VORUB",154,0)
 ; Filler Field #2
"RTN","LA7VORUB",155,0)
 ; Send Accession/test info - used by DSS to track patient/specimen
"RTN","LA7VORUB",156,0)
 ; LRACC^LRAA^LRAD^LRAN^Accession Area^Area Abbreviation^NLT
"RTN","LA7VORUB",157,0)
 K LA7X
"RTN","LA7VORUB",158,0)
 S LA7X(1)=$P(LA763(0),"^",6),LA7X(7)=LA7NLT
"RTN","LA7VORUB",159,0)
 S LA7Y=LA("HUID",68)
"RTN","LA7VORUB",160,0)
 I LA7Y D
"RTN","LA7VORUB",161,0)
 . N I
"RTN","LA7VORUB",162,0)
 . F I=1,2,3 S LA7X(I+1)=$P(LA7Y,"^",I)
"RTN","LA7VORUB",163,0)
 . S LA7X(5)=$P($G(^LRO(68,$P(LA7Y,"^"),0)),"^")
"RTN","LA7VORUB",164,0)
 . S LA7X(6)=$P($G(^LRO(68,$P(LA7Y,"^"),0)),"^",11)
"RTN","LA7VORUB",165,0)
 S OBR(21)=$$OBR20^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7VORUB",166,0)
 K LA7X
"RTN","LA7VORUB",167,0)
 ;
"RTN","LA7VORUB",168,0)
 ; Date Report Completed/Report status/Responsible person
"RTN","LA7VORUB",169,0)
 ; Determine report date and status from 0 node.
"RTN","LA7VORUB",170,0)
 S LA7RSDT=$P(LA763(0),"^",3),(LA7PRI,LA7RS)=""
"RTN","LA7VORUB",171,0)
 ;
"RTN","LA7VORUB",172,0)
 ; If CYEMSP subscripts then check for corrected report
"RTN","LA7VORUB",173,0)
 I LA("SUB")?1(1"SP",1"CY",1"EM") D
"RTN","LA7VORUB",174,0)
 . S LA7RSDT=$P(LA763(0),"^",11),LA7PRI=$P(LA763(0),"^",2)
"RTN","LA7VORUB",175,0)
 . I LA7RSDT S LA7RS="F"
"RTN","LA7VORUB",176,0)
 . I $P(LA763(0),"^",15) S LA7RS="C"
"RTN","LA7VORUB",177,0)
 . I $G(LRSB)=1.2,$G(LA7SR) S LA7RSDT=+$G(^LR(LRDFN,LA("SUB"),LRIDT,LRSB,LA7SR,0),"^")
"RTN","LA7VORUB",178,0)
 ;
"RTN","LA7VORUB",179,0)
 ; If MI subscript then also check various sections and audit subfile for corrected report
"RTN","LA7VORUB",180,0)
 I LA("SUB")="MI" D
"RTN","LA7VORUB",181,0)
 . S LA7PRI=$P(LA763(0),"^",4)
"RTN","LA7VORUB",182,0)
 . S LA7X=$S(LRSB=11:1,LRSB=11.6:1,LRSB=12:1,LRSB=14:5,LRSB=16:5,LRSB=18:8,LRSB=20:8,LRSB=22:11,LRSB=26:11,LRSB=24:11,LRSB=33:16,LRSB=36:16,1:0)
"RTN","LA7VORUB",183,0)
 . S LA7Y=$G(^LR(LRDFN,"MI",LRIDT,LA7X),"^")
"RTN","LA7VORUB",184,0)
 . I $P(LA7Y,"^") S LA7RSDT=$P(LA7Y,"^"),LA7RS=$P(LA7Y,"^",2),LA7PRI=$P(LA7Y,"^",3)
"RTN","LA7VORUB",185,0)
 . I $P(LA763(0),"^",9)=1 S LA7RS="C" Q
"RTN","LA7VORUB",186,0)
 . I '$D(^LR(LRDFN,"MI",LRIDT,32)) Q
"RTN","LA7VORUB",187,0)
 . S I=0
"RTN","LA7VORUB",188,0)
 . F  S I=$O(^LR(LRDFN,"MI",LRIDT,32,I)) Q:'I  I $P(^(I,0),"^",4)>1,LA7RS="F" S LA7RS="C" Q
"RTN","LA7VORUB",189,0)
 ;
"RTN","LA7VORUB",190,0)
 ; Also check for individual test status on "ORUT" node in file #63
"RTN","LA7VORUB",191,0)
 I $P(LA7NLT(63),"^",10) S LA7RS=$P(LA7NLT(63),"^",10)
"RTN","LA7VORUB",192,0)
 ;
"RTN","LA7VORUB",193,0)
 ; Date Report Completed
"RTN","LA7VORUB",194,0)
 I LA7RSDT S OBR(22)=$$OBR22^LA7VOBR(LA7RSDT)
"RTN","LA7VORUB",195,0)
 ;
"RTN","LA7VORUB",196,0)
 ; Diagnostic service id
"RTN","LA7VORUB",197,0)
 S OBR(24)=$$OBR24^LA7VOBR(LA("SUB")_"^"_$G(LRSB))
"RTN","LA7VORUB",198,0)
 ;
"RTN","LA7VORUB",199,0)
 ; Result status
"RTN","LA7VORUB",200,0)
 I LA7RS'="" S OBR(25)=$$OBR25^LA7VOBR(LA7RS)
"RTN","LA7VORUB",201,0)
 ;
"RTN","LA7VORUB",202,0)
 ; Parent Result and Parent
"RTN","LA7VORUB",203,0)
 I $D(LA7PARNT) D
"RTN","LA7VORUB",204,0)
 . S OBR(26)=$$OBR26^LA7VOBR(LA7PARNT(1),LA7PARNT(2),LA7PARNT(3),LA7FS,LA7ECH)
"RTN","LA7VORUB",205,0)
 . S OBR(29)=$$OBR29^LA7VOBR(LA("RUID"),LA("HUID"),LA7FS,LA7ECH)
"RTN","LA7VORUB",206,0)
 ;
"RTN","LA7VORUB",207,0)
 ; Principle result interpreter
"RTN","LA7VORUB",208,0)
 I LA("SUB")?1(1"CY",1"EM",1"MI",1"SP"),LA7PRI'="" S OBR(32)=$$OBR32^LA7VOBR(LA7PRI,LADFINST,LA7FS,LA7ECH)
"RTN","LA7VORUB",209,0)
 ;
"RTN","LA7VORUB",210,0)
 ; Assistant result interpreter
"RTN","LA7VORUB",211,0)
 I LA("SUB")?1(1"SP",1"EM"),$P(LA763(0),"^",4) S OBR(33)=$$OBR33^LA7VOBR($P(LA763(0),"^",4),LADFINST,LA7FS,LA7ECH)
"RTN","LA7VORUB",212,0)
 ;
"RTN","LA7VORUB",213,0)
 ; Technician
"RTN","LA7VORUB",214,0)
 I LA("SUB")?1(1"CY",1"EM"),$P(LA763(0),"^",4) S OBR(34)=$$OBR34^LA7VOBR($P(LA763(0),"^",4),LADFINST,LA7FS,LA7ECH)
"RTN","LA7VORUB",215,0)
 ;
"RTN","LA7VORUB",216,0)
 ; Typist - VistA stores as free text
"RTN","LA7VORUB",217,0)
 I LA("SUB")?1(1"SP",1"CY",1"EM"),$P(LA763(0),"^",9)'="" S OBR(35)=$$OBR35^LA7VOBR($P(LA763(0),"^",9),LADFINST,LA7FS,LA7ECH)
"RTN","LA7VORUB",218,0)
 ;
"RTN","LA7VORUB",219,0)
 ; Procedure code - use Order NLT code
"RTN","LA7VORUB",220,0)
 S OBR(44)=$$OBR44^LA7VOBR(LA7NLT,LA7FS,LA7ECH)
"RTN","LA7VORUB",221,0)
 ;
"RTN","LA7VORUB",222,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7VORUB",223,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VORUB",224,0)
 ;
"RTN","LA7VORUB",225,0)
 ; Check for flag to only build message but do not file
"RTN","LA7VORUB",226,0)
 I '$G(LA7NOMSG) D
"RTN","LA7VORUB",227,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VORUB",228,0)
 . I LA("HUID")'="" D
"RTN","LA7VORUB",229,0)
 . . D SETID^LA7VHLU1(LA76249,LA7ID,LA("HUID"),0)
"RTN","LA7VORUB",230,0)
 . . D SETID^LA7VHLU1(LA76249,"",LA("HUID"),0)
"RTN","LA7VORUB",231,0)
 . I LA("RUID")'="" D
"RTN","LA7VORUB",232,0)
 . . D SETID^LA7VHLU1(LA76249,LA7ID,LA("RUID"),0)
"RTN","LA7VORUB",233,0)
 . . D SETID^LA7VHLU1(LA76249,"",LA("RUID"),0)
"RTN","LA7VORUB",234,0)
 ;
"RTN","LA7VORUB",235,0)
 Q
"RTN","LA7VPFL")
0^86^B35049121
"RTN","LA7VPFL",1,0)
LA7VPFL ;DALOI/PDL - Lab Mapping Data Verification ;03/07/12  16:04
"RTN","LA7VPFL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7VPFL",3,0)
 ;
"RTN","LA7VPFL",4,0)
 Q
"RTN","LA7VPFL",5,0)
 ;
"RTN","LA7VPFL",6,0)
START ;
"RTN","LA7VPFL",7,0)
 N LABORT
"RTN","LA7VPFL",8,0)
 S LABORT=0
"RTN","LA7VPFL",9,0)
 F  D MAIN(.LABORT) Q:LABORT
"RTN","LA7VPFL",10,0)
 Q
"RTN","LA7VPFL",11,0)
 ;
"RTN","LA7VPFL",12,0)
MAIN(LABORT) ;
"RTN","LA7VPFL",13,0)
 ; Prompts for subscript and type of report then queues or displays.
"RTN","LA7VPFL",14,0)
 ; Inputs
"RTN","LA7VPFL",15,0)
 ;  LABORT: <byref>  See Outputs
"RTN","LA7VPFL",16,0)
 ; Outputs
"RTN","LA7VPFL",17,0)
 ;  LABORT: User wants to abort (1=abort)
"RTN","LA7VPFL",18,0)
 ;
"RTN","LA7VPFL",19,0)
 N RTN,RPT,SS,DIR,DIRUT,TASK,X,Y,POP
"RTN","LA7VPFL",20,0)
 S DIR(0)="SO^MI:Microbiology;SP:Surgical Pathology;CY:Cytopathology"
"RTN","LA7VPFL",21,0)
 S DIR("A")="Enter Lab Area Subscript"
"RTN","LA7VPFL",22,0)
 D ^DIR
"RTN","LA7VPFL",23,0)
 I $D(DIRUT) S LABORT=1 Q
"RTN","LA7VPFL",24,0)
 S SS=Y
"RTN","LA7VPFL",25,0)
 K DIR
"RTN","LA7VPFL",26,0)
 S DIR(0)="SO^C:Correctly Mapped Tests;E:Tests with Errors"
"RTN","LA7VPFL",27,0)
 D ^DIR
"RTN","LA7VPFL",28,0)
 I $D(DIRUT) S LABORT=1 Q
"RTN","LA7VPFL",29,0)
 S RPT=0
"RTN","LA7VPFL",30,0)
 I Y="E" S RPT=1
"RTN","LA7VPFL",31,0)
 I Y="C" S RPT=2
"RTN","LA7VPFL",32,0)
 S RTN="SHOW^LA7VPFL("""_SS_""","_RPT_")"
"RTN","LA7VPFL",33,0)
 S TASK=$$QUE^LRUTIL(RTN,"Check Lab Test NLT /Code Mapping")
"RTN","LA7VPFL",34,0)
 I TASK Q
"RTN","LA7VPFL",35,0)
 D SHOW(SS,RPT,.LABORT)
"RTN","LA7VPFL",36,0)
 D HOME^%ZIS
"RTN","LA7VPFL",37,0)
 Q
"RTN","LA7VPFL",38,0)
 ;
"RTN","LA7VPFL",39,0)
SHOW(SS,RPT,LABORT) ;
"RTN","LA7VPFL",40,0)
 ; Branches to the appropriate report subroutine.
"RTN","LA7VPFL",41,0)
 ; Inputs
"RTN","LA7VPFL",42,0)
 ;      SS: LR subscript (MI,SP,CY)
"RTN","LA7VPFL",43,0)
 ;     RPT: Which report 1=errors  2=correct
"RTN","LA7VPFL",44,0)
 ;  LABORT: <byref> See Outputs
"RTN","LA7VPFL",45,0)
 ; Outputs
"RTN","LA7VPFL",46,0)
 ;  LABORT: User wants to abort   1=abort
"RTN","LA7VPFL",47,0)
 ;
"RTN","LA7VPFL",48,0)
 S SS=$G(SS)
"RTN","LA7VPFL",49,0)
 S RPT=$G(RPT)
"RTN","LA7VPFL",50,0)
 S LABORT=$G(LABORT)
"RTN","LA7VPFL",51,0)
 U IO
"RTN","LA7VPFL",52,0)
 I "^1^2^"[("^"_RPT_"^") D  ;
"RTN","LA7VPFL",53,0)
 . I RPT=1 D RPT1(SS,.LABORT)
"RTN","LA7VPFL",54,0)
 . I RPT=2 D RPT2(SS,.LABORT)
"RTN","LA7VPFL",55,0)
 . I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VPFL",56,0)
 D ^%ZISC
"RTN","LA7VPFL",57,0)
 Q
"RTN","LA7VPFL",58,0)
 ;
"RTN","LA7VPFL",59,0)
RPT1(LASS,LABORT) ;
"RTN","LA7VPFL",60,0)
 ; "Mapping Error" report
"RTN","LA7VPFL",61,0)
 ; Inputs
"RTN","LA7VPFL",62,0)
 ;    LASS: Subscript (ie "MI","SP","CY")
"RTN","LA7VPFL",63,0)
 ;  LABORT: <byref>  See Outputs
"RTN","LA7VPFL",64,0)
 ; Outputs
"RTN","LA7VPFL",65,0)
 ;  LABORT:  User wants to abort (1=abort)
"RTN","LA7VPFL",66,0)
 ;
"RTN","LA7VPFL",67,0)
 N LAPGDATA,LAPGNUM,LADATA,LANOW,LAMSG,DATA,NODE,DIERR,X,Y
"RTN","LA7VPFL",68,0)
 N D64061,FILE,FIELD,LEC,PROC,R60,R64,R64061,SECT,TEST,WTEST,WKLD
"RTN","LA7VPFL",69,0)
 S LASS=$G(LASS)
"RTN","LA7VPFL",70,0)
 S LABORT=$G(LABORT)
"RTN","LA7VPFL",71,0)
 S LANOW=$$NOW^XLFDT()
"RTN","LA7VPFL",72,0)
 S LAPGDATA("HDR")="D HDR1^LA7VPFL"
"RTN","LA7VPFL",73,0)
 D HDR1
"RTN","LA7VPFL",74,0)
 S NODE="^LAB(60,""B"")"
"RTN","LA7VPFL",75,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="B"  D  Q:LABORT  ;
"RTN","LA7VPFL",76,0)
 . Q:@NODE=1
"RTN","LA7VPFL",77,0)
 . S WTEST=0 ;Test name was written
"RTN","LA7VPFL",78,0)
 . S R60=$QS(NODE,4)
"RTN","LA7VPFL",79,0)
 . S TEST=$QS(NODE,3)
"RTN","LA7VPFL",80,0)
 . S DATA=$G(^LAB(60,R60,0))
"RTN","LA7VPFL",81,0)
 . S X=$P(DATA,U,4)
"RTN","LA7VPFL",82,0)
 . Q:X'=LASS
"RTN","LA7VPFL",83,0)
 . S DATA=$G(^LAB(60,R60,64))
"RTN","LA7VPFL",84,0)
 . S R64=$P(DATA,U,1)
"RTN","LA7VPFL",85,0)
 . I 'R64 D  Q  ; No 64 pointer
"RTN","LA7VPFL",86,0)
 . . S WTEST=1
"RTN","LA7VPFL",87,0)
 . . D NP Q:LABORT
"RTN","LA7VPFL",88,0)
 . . W !,"[",R60,"] ",TEST
"RTN","LA7VPFL",89,0)
 . . W ?35,"  Not Mapped to File #64"
"RTN","LA7VPFL",90,0)
 . ;
"RTN","LA7VPFL",91,0)
 . S DATA=$G(^LAM(R64,0))
"RTN","LA7VPFL",92,0)
 . S PROC=$P(DATA,U,1)
"RTN","LA7VPFL",93,0)
 . S WKLD=$P(DATA,U,2)
"RTN","LA7VPFL",94,0)
 . I WKLD="" D  ;
"RTN","LA7VPFL",95,0)
 . . I 'WTEST D NP Q:LABORT  W !,"[",R60,"] ",TEST S WTEST=1
"RTN","LA7VPFL",96,0)
 . . D NP Q:LABORT  W !,?35,"  No Workload Code"
"RTN","LA7VPFL",97,0)
 . ;
"RTN","LA7VPFL",98,0)
 . I WKLD'="" Q:WKLD<2
"RTN","LA7VPFL",99,0)
 . S DATA=$G(^LAM(R64,63))
"RTN","LA7VPFL",100,0)
 . S R64061=$P(DATA,U,1)
"RTN","LA7VPFL",101,0)
 . I 'R64061 D  ;
"RTN","LA7VPFL",102,0)
 . . I 'WTEST D NP Q:LABORT  W !,"[",R60,"] ",TEST S WTEST=1
"RTN","LA7VPFL",103,0)
 . . D NP Q:LABORT
"RTN","LA7VPFL",104,0)
 . . W !,?15,"is mapped to: ",PROC," [",WKLD,"]"
"RTN","LA7VPFL",105,0)
 . . D NP Q:LABORT
"RTN","LA7VPFL",106,0)
 . . W !,?37,"Not Linked to File #64.061"
"RTN","LA7VPFL",107,0)
 . ;
"RTN","LA7VPFL",108,0)
 ;
"RTN","LA7VPFL",109,0)
 W !,$$CJ^XLFSTR("<  <  <  End of report  >  >  >",IOM),!
"RTN","LA7VPFL",110,0)
 Q
"RTN","LA7VPFL",111,0)
 ;
"RTN","LA7VPFL",112,0)
RPT2(LASS,LABORT) ;
"RTN","LA7VPFL",113,0)
 ; "Mapping Okay" report
"RTN","LA7VPFL",114,0)
 ; Inputs
"RTN","LA7VPFL",115,0)
 ;    LASS: Subscript (ie "MI","SP","CY")
"RTN","LA7VPFL",116,0)
 ;  LABORT: <byref>  See Outputs
"RTN","LA7VPFL",117,0)
 ; Outputs
"RTN","LA7VPFL",118,0)
 ;  LABORT:  User wants to abort (1=abort)
"RTN","LA7VPFL",119,0)
 ;
"RTN","LA7VPFL",120,0)
 N LAPGDATA,LAPGNUM,LADATA,LANOW,LAMSG,DATA,NODE,DIERR,X,Y
"RTN","LA7VPFL",121,0)
 N D64061,FILE,FIELD,LEC,SECT,R60,R64,R64061,TEST,WKLD
"RTN","LA7VPFL",122,0)
 S LASS=$G(LASS)
"RTN","LA7VPFL",123,0)
 S LABORT=$G(LABORT)
"RTN","LA7VPFL",124,0)
 S LANOW=$$NOW^XLFDT()
"RTN","LA7VPFL",125,0)
 S LAPGDATA("HDR")="D HDR2^LA7VPFL"
"RTN","LA7VPFL",126,0)
 D HDR2
"RTN","LA7VPFL",127,0)
 S NODE="^LAB(60,""B"")"
"RTN","LA7VPFL",128,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,2)'="B"  D  Q:LABORT  ;
"RTN","LA7VPFL",129,0)
 . Q:@NODE=1
"RTN","LA7VPFL",130,0)
 . S R60=$QS(NODE,4)
"RTN","LA7VPFL",131,0)
 . S TEST=$QS(NODE,3)
"RTN","LA7VPFL",132,0)
 . S DATA=$G(^LAB(60,R60,0))
"RTN","LA7VPFL",133,0)
 . S X=$P(DATA,U,4)
"RTN","LA7VPFL",134,0)
 . Q:X'=LASS
"RTN","LA7VPFL",135,0)
 . S DATA=$G(^LAB(60,R60,64))
"RTN","LA7VPFL",136,0)
 . S R64=$P(DATA,U,1)
"RTN","LA7VPFL",137,0)
 . Q:'R64
"RTN","LA7VPFL",138,0)
 . S DATA=$G(^LAM(R64,0))
"RTN","LA7VPFL",139,0)
 . S WKLD=$P(DATA,U,2)
"RTN","LA7VPFL",140,0)
 . Q:WKLD=""
"RTN","LA7VPFL",141,0)
 . Q:WKLD<2
"RTN","LA7VPFL",142,0)
 . S DATA=$G(^LAM(R64,63))
"RTN","LA7VPFL",143,0)
 . S R64061=$P(DATA,U,1)
"RTN","LA7VPFL",144,0)
 . Q:'R64061
"RTN","LA7VPFL",145,0)
 . S DATA=$G(^LAB(64.061,R64061,0))
"RTN","LA7VPFL",146,0)
 . S LEC=$P(DATA,U,1) ;#62.041 NAME
"RTN","LA7VPFL",147,0)
 . D GETS^DIQ(64.061,R64061_",","63.1;63.2;63.3","IE","LADATA","LRMSG")
"RTN","LA7VPFL",148,0)
 . M D64061=LADATA(64.061,R64061_",")
"RTN","LA7VPFL",149,0)
 . K LADATA
"RTN","LA7VPFL",150,0)
 . S X=$G(^LAM(R64,0))
"RTN","LA7VPFL",151,0)
 . S X=$P(X,U,1)
"RTN","LA7VPFL",152,0)
 . W !,"[",R60,"] ",TEST
"RTN","LA7VPFL",153,0)
 . D NP Q:LABORT
"RTN","LA7VPFL",154,0)
 . W !,?3,"Mapped to: ",X," [",WKLD,"]"
"RTN","LA7VPFL",155,0)
 . D NP Q:LABORT
"RTN","LA7VPFL",156,0)
 . W !,?5,"Linked to: ",LEC," [",R64061,"]"
"RTN","LA7VPFL",157,0)
 . D NP Q:LABORT
"RTN","LA7VPFL",158,0)
 . S FILE=D64061(63.1,"E")
"RTN","LA7VPFL",159,0)
 . S FIELD=D64061(63.2,"E")
"RTN","LA7VPFL",160,0)
 . S:'FIELD FIELD=.01
"RTN","LA7VPFL",161,0)
 . S SECT=$S(FILE=63.05:5,FILE=63.08:8,FILE=63.09:9,1:"")
"RTN","LA7VPFL",162,0)
 . K LADATA,LAMSG,DIERR
"RTN","LA7VPFL",163,0)
 . I SECT D
"RTN","LA7VPFL",164,0)
 . . D FIELD^DID(63,SECT,"","LABEL","LADATA","LAMSG")
"RTN","LA7VPFL",165,0)
 . . I '$D(LAMSG) S SECT=LADATA("LABEL")
"RTN","LA7VPFL",166,0)
 . I SECT="" S SECT="<??"_FILE_"??>"
"RTN","LA7VPFL",167,0)
 . ;
"RTN","LA7VPFL",168,0)
 . K LADATA,LRMSG,DIERR
"RTN","LA7VPFL",169,0)
 . S X=$P(FIELD,";",2)
"RTN","LA7VPFL",170,0)
 . S FIELD=$P(FIELD,";",1)
"RTN","LA7VPFL",171,0)
 . D FIELD^DID(FILE,FIELD,"","LABEL","LADATA","LAMSG")
"RTN","LA7VPFL",172,0)
 . I '$D(LAMSG) S FIELD=LADATA("LABEL")
"RTN","LA7VPFL",173,0)
 . ;
"RTN","LA7VPFL",174,0)
 . W !,?7,"Lab Data: ",SECT," [",FIELD,"]"
"RTN","LA7VPFL",175,0)
 . D NP Q:LABORT
"RTN","LA7VPFL",176,0)
 . W !,?9,"SCT Top Concept: ",$G(D64061(63.3,"E"))," [",$G(D64061(63.3,"I")),"]"
"RTN","LA7VPFL",177,0)
 . D NP Q:LABORT
"RTN","LA7VPFL",178,0)
 ;
"RTN","LA7VPFL",179,0)
 W !,$$CJ^XLFSTR("<  <  <  End of report  >  >  >",IOM),!
"RTN","LA7VPFL",180,0)
 Q
"RTN","LA7VPFL",181,0)
 ;
"RTN","LA7VPFL",182,0)
HDR1 ;
"RTN","LA7VPFL",183,0)
 ; Generate header used with "Error" report
"RTN","LA7VPFL",184,0)
 N PGNUM,X
"RTN","LA7VPFL",185,0)
 S PGNUM=$G(LAPGDATA("PGNUM"),1)
"RTN","LA7VPFL",186,0)
 I PGNUM=1 I $E($G(IOST),1,2)="C-" I $G(IOF)'="" W @IOF
"RTN","LA7VPFL",187,0)
 W !,"Laboratory Tests for "_LASS_" with mapping errors"
"RTN","LA7VPFL",188,0)
 S X=$$FMTE^XLFDT(LANOW)
"RTN","LA7VPFL",189,0)
 W ?IOM-$L(X),X
"RTN","LA7VPFL",190,0)
 S X="Page: "_PGNUM_"  "
"RTN","LA7VPFL",191,0)
 W !?IOM-$L(X),X
"RTN","LA7VPFL",192,0)
 W !,$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7VPFL",193,0)
 Q
"RTN","LA7VPFL",194,0)
 ;
"RTN","LA7VPFL",195,0)
HDR2 ;
"RTN","LA7VPFL",196,0)
 ; Generate header used with "Correct" report
"RTN","LA7VPFL",197,0)
 N PGNUM,X
"RTN","LA7VPFL",198,0)
 S PGNUM=$G(LAPGDATA("PGNUM"),1)
"RTN","LA7VPFL",199,0)
 I PGNUM=1 I $E($G(IOST),1,2)="C-" I $G(IOF)'="" W @IOF
"RTN","LA7VPFL",200,0)
 W !,"Laboratory Tests for "_LASS_" mapped correctly"
"RTN","LA7VPFL",201,0)
 S X=$$FMTE^XLFDT(LANOW)
"RTN","LA7VPFL",202,0)
 W ?IOM-$L(X),X
"RTN","LA7VPFL",203,0)
 S X="Page: "_PGNUM_"  "
"RTN","LA7VPFL",204,0)
 W !?IOM-$L(X),X
"RTN","LA7VPFL",205,0)
 W !,$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7VPFL",206,0)
 Q
"RTN","LA7VPFL",207,0)
 ;
"RTN","LA7VPFL",208,0)
NP ;
"RTN","LA7VPFL",209,0)
 ; Convenience method
"RTN","LA7VPFL",210,0)
 D NP^LRUTIL(.LABORT,.LAPGDATA)
"RTN","LA7VPFL",211,0)
 Q
"RTN","LA7VPID")
0^43^B26321438
"RTN","LA7VPID",1,0)
LA7VPID ;DALOI/JMC - HL7 PID/PV1 segment builder utility ;08/03/09  15:59
"RTN","LA7VPID",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VPID",3,0)
 ;
"RTN","LA7VPID",4,0)
 ; Reference to routine $$EN^VAFHLPID supported by DBIA# 263
"RTN","LA7VPID",5,0)
 ;
"RTN","LA7VPID",6,0)
PID(LRDFN,LA7EXTID,LA7ARRAY,LA7PIDSN,HL,LA7ALTID) ; Build PID segment
"RTN","LA7VPID",7,0)
 ; Call with     LRDFN = Lab DFN, passed by value
"RTN","LA7VPID",8,0)
 ;            LA7EXTID = to return as external patient id, id used by non-VA systems (optional)
"RTN","LA7VPID",9,0)
 ;            LA7ARRAY = array to return PID array, pass by reference
"RTN","LA7VPID",10,0)
 ;            LA7PIDSN = PID id counter, passed by value
"RTN","LA7VPID",11,0)
 ;                  HL = HL7 variable array, pass by reference
"RTN","LA7VPID",12,0)
 ;            LA7ALTID = return alternate patient id, id used by non-va systems (optional)
"RTN","LA7VPID",13,0)
 ;
"RTN","LA7VPID",14,0)
 ; Returns LA7ARRAY
"RTN","LA7VPID",15,0)
 ;
"RTN","LA7VPID",16,0)
 N DFN,HLQ,LA763,LA7Y,LRDPF,VAFPID
"RTN","LA7VPID",17,0)
 ;
"RTN","LA7VPID",18,0)
 ; Change HLQ - VAFHLPID puts delete indicator when Vista has no value for field - not according to standard.
"RTN","LA7VPID",19,0)
 S HLQ=""
"RTN","LA7VPID",20,0)
 ;
"RTN","LA7VPID",21,0)
 I $G(LRDFN)=""!($G(HL("FS"))="") Q
"RTN","LA7VPID",22,0)
 I '$D(^LR(LRDFN,0)) Q
"RTN","LA7VPID",23,0)
 ;
"RTN","LA7VPID",24,0)
 S LA7EXTID=$G(LA7EXTID),LA7ALTID=$G(LA7ALTID),LA7PIDSN=$G(LA7PIDSN)+1
"RTN","LA7VPID",25,0)
 S LA763(0)=$G(^LR(LRDFN,0))
"RTN","LA7VPID",26,0)
 S LRDPF=$P(LA763(0),"^",2),DFN=$P(LA763(0),"^",3)
"RTN","LA7VPID",27,0)
 ;
"RTN","LA7VPID",28,0)
 ; Patient file - use VAF call
"RTN","LA7VPID",29,0)
 I LRDPF=2 D F2PID
"RTN","LA7VPID",30,0)
 ;
"RTN","LA7VPID",31,0)
 ; Non-patient file
"RTN","LA7VPID",32,0)
 I LRDPF'=2 D NF2PID
"RTN","LA7VPID",33,0)
 K AGE,PNM,SEX,DOB,SSN,VA200,LRWRD,LRRB,LRTREA,VA
"RTN","LA7VPID",34,0)
 Q
"RTN","LA7VPID",35,0)
 ;
"RTN","LA7VPID",36,0)
 ;
"RTN","LA7VPID",37,0)
PV1(LRDFN,LA7ARRAY,LA7FS,LA7ECH) ; Build PV1 segment
"RTN","LA7VPID",38,0)
 ; Call with    LRDFN = ien of entry in File #63
"RTN","LA7VPID",39,0)
 ;           LA7ARRAY = array to return PV1 array, pass by reference
"RTN","LA7VPID",40,0)
 ;              LA7FS = HL field separator
"RTN","LA7VPID",41,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VPID",42,0)
 ;
"RTN","LA7VPID",43,0)
 ;
"RTN","LA7VPID",44,0)
 N DFN,LA763,LA7LOC,LRDPF,LA7Y
"RTN","LA7VPID",45,0)
 S LA763(0)=$G(^LR(LRDFN,0))
"RTN","LA7VPID",46,0)
 S LRDPF=$P(LA763(0),"^",2),DFN=$P(LA763(0),"^",3),LA7LOC=""
"RTN","LA7VPID",47,0)
 ;
"RTN","LA7VPID",48,0)
 S LA7Y(0)="PV1"
"RTN","LA7VPID",49,0)
 S LA7Y(1)=1
"RTN","LA7VPID",50,0)
 ;
"RTN","LA7VPID",51,0)
 ; Referral file with Patient file link.
"RTN","LA7VPID",52,0)
 I LRDPF=67,$P($G(^LRT(67,DFN,"DPT")),"^") D
"RTN","LA7VPID",53,0)
 . S LRDPF=2
"RTN","LA7VPID",54,0)
 . S DFN=$P($G(^LRT(67,DFN,"DPT")),"^")
"RTN","LA7VPID",55,0)
 ;
"RTN","LA7VPID",56,0)
 ; Determine patient class
"RTN","LA7VPID",57,0)
 ; Current inpatient location
"RTN","LA7VPID",58,0)
 I LRDPF=2 S LA7LOC=$G(^DPT(DFN,.1))
"RTN","LA7VPID",59,0)
 I $L(LA7LOC) S LA7Y(2)="I" ; Inpatient
"RTN","LA7VPID",60,0)
 ;
"RTN","LA7VPID",61,0)
 ; Otherwise from lab files
"RTN","LA7VPID",62,0)
 I $G(LA7LOC)="" D
"RTN","LA7VPID",63,0)
 . S LA7LOC=$G(^LR(LRDFN,.1))
"RTN","LA7VPID",64,0)
 . S LA7Y(2)="O" ; Default to outpatient
"RTN","LA7VPID",65,0)
 ;
"RTN","LA7VPID",66,0)
 ; Patient location
"RTN","LA7VPID",67,0)
 S LA7LOC=$$CHKDATA^LA7VHLU3(LA7LOC,LA7FS_LA7ECH)
"RTN","LA7VPID",68,0)
 S LA7Y(3)=LA7LOC
"RTN","LA7VPID",69,0)
 ;
"RTN","LA7VPID",70,0)
 D BUILDSEG^LA7VHLU(.LA7Y,.LA7ARRAY,LA7FS)
"RTN","LA7VPID",71,0)
 Q
"RTN","LA7VPID",72,0)
 ;
"RTN","LA7VPID",73,0)
 ;
"RTN","LA7VPID",74,0)
F2PID ; Build patient identifier field on file #2 patient
"RTN","LA7VPID",75,0)
 ;
"RTN","LA7VPID",76,0)
 ; Non VA users of VistA need to send patient's address
"RTN","LA7VPID",77,0)
 N I,ICN,LA7X,LRSTR,X
"RTN","LA7VPID",78,0)
 S LA7STR="1,5,6,7,8,10NTB,"_$S(DUZ("AG")="V":"",1:"11,")_"16,19"
"RTN","LA7VPID",79,0)
 S LA7ARRAY(0)=$$EN^VAFHLPID(DFN,LA7STR,LA7PIDSN,3)
"RTN","LA7VPID",80,0)
 ;
"RTN","LA7VPID",81,0)
 ; Check for overflow (>245)
"RTN","LA7VPID",82,0)
 I $O(VAFPID(0)) D
"RTN","LA7VPID",83,0)
 . S I=0
"RTN","LA7VPID",84,0)
 . F  S I=$O(VAFPID(I)) Q:'I  S LA7ARRAY(I)=VAFPID(I)
"RTN","LA7VPID",85,0)
 ;
"RTN","LA7VPID",86,0)
 ; Return external identifier in PID-2 sequence, backward compatibility to V2.2
"RTN","LA7VPID",87,0)
 I LA7EXTID'="" D
"RTN","LA7VPID",88,0)
 . I '(LA7EXTID?1N.N) S $P(LA7ARRAY(0),HL("FS"),3)=LA7EXTID
"RTN","LA7VPID",89,0)
 . E  S $P(LA7ARRAY(0),HLFS,3)=$$M11^HLFNC(LA7EXTID,HL("ECH"))
"RTN","LA7VPID",90,0)
 ;
"RTN","LA7VPID",91,0)
 ; Send SSN as patient identifier
"RTN","LA7VPID",92,0)
 S X=$P(LA7ARRAY(0),HLFS,4)
"RTN","LA7VPID",93,0)
 I $P(X,$E(HL("ECH")),5)="SS" S $P(X,$E(HL("ECH")),1)=$TR($P(X,$E(HL("ECH")),1),"-",""),$P(LA7ARRAY(0),HLFS,4)=X
"RTN","LA7VPID",94,0)
 ;
"RTN","LA7VPID",95,0)
 ; Send DFN as patient identifier
"RTN","LA7VPID",96,0)
 S X=$$M11^HLFNC(DFN,HL("ECH"))
"RTN","LA7VPID",97,0)
 S $P(X,$E(HL("ECH")),5)="PI"
"RTN","LA7VPID",98,0)
 S $P(X,$E(HL("ECH")),6)=$$RETFACID^LA7VHLU2(+$$KSP^XUPARAM("INST"),2,1)_$E(HL("ECH"),4)_$$KSP^XUPARAM("WHERE")_$E(HL("ECH"),4)_"DNS"
"RTN","LA7VPID",99,0)
 S $P(LA7ARRAY(0),HLFS,4)=$P(LA7ARRAY(0),HL("FS"),4)_$E(HL("ECH"),2)_X
"RTN","LA7VPID",100,0)
 ;
"RTN","LA7VPID",101,0)
 ; Send ICN from MPI as patient identifier
"RTN","LA7VPID",102,0)
 S ICN=$$ICN(DFN,HL("ECH"))
"RTN","LA7VPID",103,0)
 I ICN>0 S $P(LA7ARRAY(0),HLFS,4)=$P(LA7ARRAY(0),HL("FS"),4)_$E(HL("ECH"),2)_ICN
"RTN","LA7VPID",104,0)
 ;
"RTN","LA7VPID",105,0)
 ; Send alternate patient id if passed
"RTN","LA7VPID",106,0)
 I LA7ALTID'="" S $P(LA7ARRAY(0),HL("FS"),5)=LA7ALTID
"RTN","LA7VPID",107,0)
 I $P(LA7ARRAY(0),HLFS,5)?1N.N S $P(LA7ARRAY(0),HL("FS"),5)=$$M11^HLFNC($P(LA7ARRAY(0),HL("FS"),5),HL("ECH"))
"RTN","LA7VPID",108,0)
 ;
"RTN","LA7VPID",109,0)
 Q
"RTN","LA7VPID",110,0)
 ;
"RTN","LA7VPID",111,0)
 ;
"RTN","LA7VPID",112,0)
NF2PID ; Build patient identifier field on non-file #2 patient
"RTN","LA7VPID",113,0)
 ;
"RTN","LA7VPID",114,0)
 N X
"RTN","LA7VPID",115,0)
 D PT^LRX
"RTN","LA7VPID",116,0)
 S LA7Y(0)="PID"
"RTN","LA7VPID",117,0)
 S LA7Y(1)=LA7PIDSN
"RTN","LA7VPID",118,0)
 ;
"RTN","LA7VPID",119,0)
 ; Return external identifier in PID-2 sequence, backward compatibility to V2.2
"RTN","LA7VPID",120,0)
 ; Also include external identifier in PID-3 for current versions (>v2.2)
"RTN","LA7VPID",121,0)
 S LA7Y(3)=""
"RTN","LA7VPID",122,0)
 I LA7EXTID'="" D
"RTN","LA7VPID",123,0)
 . I '(LA7EXTID?1N.N) S LA7Y(2)=LA7EXTID
"RTN","LA7VPID",124,0)
 . E  S LA7Y(2)=$$M11^HLFNC(LA7EXTID,HL("ECH"))
"RTN","LA7VPID",125,0)
 . S LA7Y(3)=LA7EXTID
"RTN","LA7VPID",126,0)
 ;
"RTN","LA7VPID",127,0)
 S X=$$M11^HLFNC(SSN(2),HL("ECH"))
"RTN","LA7VPID",128,0)
 I LRDPF=67.1 S $P(X,$E(HL("ECH"),1),5)="L2"
"RTN","LA7VPID",129,0)
 I LA7Y(3)'="",LA7Y(3)'[SSN(2) S LA7Y(3)=LA7Y(3)_$E(HL("ECH"),2)_X
"RTN","LA7VPID",130,0)
 I LA7Y(3)="" S LA7Y(3)=X
"RTN","LA7VPID",131,0)
 ;
"RTN","LA7VPID",132,0)
 ; Send LRDFN as alternate patient ID, unless alternate id passed
"RTN","LA7VPID",133,0)
 I LA7ALTID'="" S LA7Y(4)=LA7ALTID
"RTN","LA7VPID",134,0)
 E  S LA7Y(4)=LRDFN
"RTN","LA7VPID",135,0)
 I LA7Y(4)?1N.N S LA7Y(4)=$$M11^HLFNC(LA7Y(4),HL("ECH"))
"RTN","LA7VPID",136,0)
 I $P(LA7Y(4),$E(HL("ECH"),1),5)="" S $P(LA7Y(4),$E(HL("ECH"),1),5)="U"
"RTN","LA7VPID",137,0)
 ;
"RTN","LA7VPID",138,0)
 S LA7Y(5)=$$HLNAME^XLFNAME(PNM,"S",$E(HL("ECH")))
"RTN","LA7VPID",139,0)
 ;
"RTN","LA7VPID",140,0)
 I $G(DOB)'="" D
"RTN","LA7VPID",141,0)
 . S DOB=$$CHKDT^LA7VHLU1(DOB)
"RTN","LA7VPID",142,0)
 . S LA7Y(7)=$$FMTHL7^XLFDT(DOB)
"RTN","LA7VPID",143,0)
 ;
"RTN","LA7VPID",144,0)
 S LA7Y(8)=$S($G(SEX)'="":SEX,1:"U")
"RTN","LA7VPID",145,0)
 ;
"RTN","LA7VPID",146,0)
 ; Race - if from REFERRAL PATIENT file (#67) then check RACE field.
"RTN","LA7VPID",147,0)
 S LA7Y(10)=""
"RTN","LA7VPID",148,0)
 I LRDPF=67 D
"RTN","LA7VPID",149,0)
 . S LA7X=$$GET1^DIQ(67,DFN_",",.06,"I")
"RTN","LA7VPID",150,0)
 . I LA7X<1 Q
"RTN","LA7VPID",151,0)
 . S LA7Y(10)=$$PTR2CODE^DGUTL4(LA7X,1,2)
"RTN","LA7VPID",152,0)
 . S $P(LA7Y(10),$E(HL("ECH"),1),2)=$$PTR2TEXT^DGUTL4(LA7X,1)
"RTN","LA7VPID",153,0)
 . S $P(LA7Y(10),$E(HL("ECH"),1),3)="HL70005"
"RTN","LA7VPID",154,0)
 ;
"RTN","LA7VPID",155,0)
 ; SSN from referral file if 9N - DoD uses PID-19 to validate
"RTN","LA7VPID",156,0)
 S LA7Y(19)=""
"RTN","LA7VPID",157,0)
 I LRDPF=67 D
"RTN","LA7VPID",158,0)
 . S LA7X=$$GET1^DIQ(67,DFN_",",.09,"I")
"RTN","LA7VPID",159,0)
 . I LA7X?9N S LA7Y(19)=LA7X
"RTN","LA7VPID",160,0)
 ;
"RTN","LA7VPID",161,0)
 D BUILDSEG^LA7VHLU(.LA7Y,.LA7ARRAY,HL("FS"))
"RTN","LA7VPID",162,0)
 Q
"RTN","LA7VPID",163,0)
 ;
"RTN","LA7VPID",164,0)
 ;
"RTN","LA7VPID",165,0)
ICN(DFN,LA7ECH) ; Send ICN from MPI
"RTN","LA7VPID",166,0)
 ; Call with DFN = internal entry number of patient in PATIENT #2 file.
"RTN","LA7VPID",167,0)
 ;        LA7ECH = HL7 encoding characters.
"RTN","LA7VPID",168,0)
 ;
"RTN","LA7VPID",169,0)
 ; If ICN is local then assigning facility is local site
"RTN","LA7VPID",170,0)
 ;    otherwise indicate 200M.
"RTN","LA7VPID",171,0)
 ;
"RTN","LA7VPID",172,0)
 N ICN,LA7ICN,LOCAL,SITE
"RTN","LA7VPID",173,0)
 ;
"RTN","LA7VPID",174,0)
 S ICN=""
"RTN","LA7VPID",175,0)
 ;
"RTN","LA7VPID",176,0)
 S LA7ICN=$$GETICN^MPIF001(DFN)
"RTN","LA7VPID",177,0)
 I LA7ICN>0 D
"RTN","LA7VPID",178,0)
 . S ICN=LA7ICN
"RTN","LA7VPID",179,0)
 . S LOCAL=$$IFLOCAL^MPIF001(DFN)
"RTN","LA7VPID",180,0)
 . I LOCAL'=1 S SITE="200M"
"RTN","LA7VPID",181,0)
 . E  S SITE=$P($$SITE^VASITE,"^",3)
"RTN","LA7VPID",182,0)
 . S $P(ICN,$E(LA7ECH,1),4)="USVHA"_$E(LA7ECH,4)_$E(LA7ECH,4)_"HL70363"
"RTN","LA7VPID",183,0)
 . S $P(ICN,$E(LA7ECH,1),5)="NI"
"RTN","LA7VPID",184,0)
 . S $P(ICN,$E(LA7ECH,1),6)="VA FACILITY ID"_$E(LA7ECH,4)_SITE_$E(LA7ECH,4)_"L"
"RTN","LA7VPID",185,0)
 ;
"RTN","LA7VPID",186,0)
 Q ICN
"RTN","LA7VSET")
0^47^B99085612
"RTN","LA7VSET",1,0)
LA7VSET ;DALOI/JMC - MENU TO SETUP VISN LABS ;11/15/11  9:13
"RTN","LA7VSET",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,55,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VSET",3,0)
 ;
"RTN","LA7VSET",4,0)
 ; Reference to HL LOGICAL LINK file (#870) supported by DBIA #1495, 1496, 2063
"RTN","LA7VSET",5,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VSET",6,0)
 ; Reference to MAIL GROUP file (#3.8) supported by DBIA #2061
"RTN","LA7VSET",7,0)
 ;
"RTN","LA7VSET",8,0)
 D CONV
"RTN","LA7VSET",9,0)
 ;
"RTN","LA7VSET",10,0)
 N LA76248,LA7629,LA7VNVC,PRIMARY,PRSITE,HDR,LAB,HOST,REMOTE,LRY,LRX,LA7VS,NAME
"RTN","LA7VSET",11,0)
 ;
"RTN","LA7VSET",12,0)
 S LA7VS=$$PRIM^VASITE(DT)
"RTN","LA7VSET",13,0)
 I $G(LA7VS)'="" D
"RTN","LA7VSET",14,0)
 . S LA7VS=$$SITE^VASITE(DT,LA7VS)
"RTN","LA7VSET",15,0)
 . S PRIMARY=$P(LA7VS,U,3),PRSITE=$P(LA7VS,U,2)
"RTN","LA7VSET",16,0)
 ;
"RTN","LA7VSET",17,0)
 I $G(PRIMARY)="" W !!,"No Primary Site is defined!!!!",!! R !,"Press RETURN to continue: ",X:DTIME Q
"RTN","LA7VSET",18,0)
 ;
"RTN","LA7VSET",19,0)
 S HDR="LEDI Setup"
"RTN","LA7VSET",20,0)
 S HDR(1)="Add/Edit HOST Lab",HDR(2)="Add/Edit COLLECTION Lab"
"RTN","LA7VSET",21,0)
 F  S LAB=$$MAIN Q:LAB=""  D @LAB
"RTN","LA7VSET",22,0)
 ;
"RTN","LA7VSET",23,0)
 K DIE,DA,DR,DO,DIC
"RTN","LA7VSET",24,0)
 ;
"RTN","LA7VSET",25,0)
 Q
"RTN","LA7VSET",26,0)
 ;
"RTN","LA7VSET",27,0)
MAIN() ; Display the main LEDI setup screen
"RTN","LA7VSET",28,0)
 N HDRCNT,HDRA
"RTN","LA7VSET",29,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",30,0)
 W !,?((80-$L(HDR))/2),HDR
"RTN","LA7VSET",31,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",32,0)
 W !
"RTN","LA7VSET",33,0)
 W !,"COLLECTION Labs:  Use option #1 to setup HOST labs."
"RTN","LA7VSET",34,0)
 W !,"  HOST Labs    :  Use option #2 to setup COLLECTION labs."
"RTN","LA7VSET",35,0)
 W !!
"RTN","LA7VSET",36,0)
 S HDRCNT=0
"RTN","LA7VSET",37,0)
 F  S HDRCNT=$O(HDR(HDRCNT)) Q:'HDRCNT  W !,HDRCNT,".",?5,HDR(HDRCNT)
"RTN","LA7VSET",38,0)
 D KDIR
"RTN","LA7VSET",39,0)
 W !!
"RTN","LA7VSET",40,0)
 S DIR(0)="NO^1:2"
"RTN","LA7VSET",41,0)
 D MHLP,^DIR
"RTN","LA7VSET",42,0)
 S HDRA=$S(Y=1:"HOST",Y=2:"REMOTE",1:"")
"RTN","LA7VSET",43,0)
 D KDIR
"RTN","LA7VSET",44,0)
 Q HDRA
"RTN","LA7VSET",45,0)
 ;
"RTN","LA7VSET",46,0)
 ;
"RTN","LA7VSET",47,0)
KDIR ; kill all DIR variables
"RTN","LA7VSET",48,0)
 K DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","LA7VSET",49,0)
 Q
"RTN","LA7VSET",50,0)
 ;
"RTN","LA7VSET",51,0)
 ;
"RTN","LA7VSET",52,0)
HOST ; HOST Lab Setup Menu
"RTN","LA7VSET",53,0)
 ;
"RTN","LA7VSET",54,0)
 N LA7CNT,LA7,LA7P,SNUM,SNAME,HOST,LA7A
"RTN","LA7VSET",55,0)
 ;
"RTN","LA7VSET",56,0)
 F  D  Q:'LA7A
"RTN","LA7VSET",57,0)
 . D HOSTBLD,HSTHDR,HOSTLST,KDIR
"RTN","LA7VSET",58,0)
 . W !! S DIR(0)="NO^1:"_LA7CNT
"RTN","LA7VSET",59,0)
 . D H1HLP,^DIR
"RTN","LA7VSET",60,0)
 . I $D(DIRUT) S LA7A=0 Q
"RTN","LA7VSET",61,0)
 . S LA7A=Y D AEHOST
"RTN","LA7VSET",62,0)
 K SNAME
"RTN","LA7VSET",63,0)
 Q
"RTN","LA7VSET",64,0)
 ;
"RTN","LA7VSET",65,0)
 ;
"RTN","LA7VSET",66,0)
HOSTBLD ; Build list of host facilities.
"RTN","LA7VSET",67,0)
 ; Identify all HOST labs using LA7 MESSAGE PARAMETER file (#62.48)
"RTN","LA7VSET",68,0)
 ;
"RTN","LA7VSET",69,0)
 N LA7,LA74,LA76248,LA7629,SNAME,SNUM
"RTN","LA7VSET",70,0)
 ;
"RTN","LA7VSET",71,0)
 K HOST
"RTN","LA7VSET",72,0)
 S LA7CNT=1,(LA7,LA7P)="LA7V HOST "
"RTN","LA7VSET",73,0)
 F  S LA7=$O(^LAHM(62.48,"B",LA7)) Q:LA7=""!(LA7'[LA7P)  D
"RTN","LA7VSET",74,0)
 . S SNUM=$P(LA7,"HOST ",2)
"RTN","LA7VSET",75,0)
 . S LA74=$$FINDSITE^LA7VHLU2(SNUM,1,1) Q:LA74'>0
"RTN","LA7VSET",76,0)
 . S SNAME=$P($$NS^XUAF4(LA74),"^")
"RTN","LA7VSET",77,0)
 . S HOST(LA7CNT)=SNUM_U_SNAME_U_LA7_U_LA74,LA7CNT=LA7CNT+1
"RTN","LA7VSET",78,0)
 S HOST(LA7CNT)=""
"RTN","LA7VSET",79,0)
 ;
"RTN","LA7VSET",80,0)
 Q
"RTN","LA7VSET",81,0)
 ;
"RTN","LA7VSET",82,0)
 ;
"RTN","LA7VSET",83,0)
HSTHDR ; HOST setup header
"RTN","LA7VSET",84,0)
 S HOST="HOST Lab(s)"
"RTN","LA7VSET",85,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",86,0)
 W !,?((80-$L(HOST))/2),HOST
"RTN","LA7VSET",87,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",88,0)
 W !!
"RTN","LA7VSET",89,0)
 Q
"RTN","LA7VSET",90,0)
 ;
"RTN","LA7VSET",91,0)
 ;
"RTN","LA7VSET",92,0)
HOSTLST ;
"RTN","LA7VSET",93,0)
 S LA7CNT=1,LA7=0
"RTN","LA7VSET",94,0)
 F  S LA7=$O(HOST(LA7)) Q:'LA7  I HOST(LA7)'="" W !,LA7,".",?5,$P(HOST(LA7),U,2)_"  ("_$P(HOST(LA7),U,3)_")" S LA7CNT=LA7CNT+1
"RTN","LA7VSET",95,0)
 W !,LA7CNT,".",?5,"Add HOST Lab"
"RTN","LA7VSET",96,0)
 Q
"RTN","LA7VSET",97,0)
 ;
"RTN","LA7VSET",98,0)
AEHOST ;
"RTN","LA7VSET",99,0)
 N CHA,UI
"RTN","LA7VSET",100,0)
 F  S HOST="HOST Lab Setup" D HSTHDR,HSTHDR2,KDIR W !! S DIR(0)="NO^1:"_LA7CNT D H2HLP D ^DIR S CHA=Y D:CHA>0  Q:+CHA'>0
"RTN","LA7VSET",101,0)
 . I CHA=1 D HLAB($P(HOST(LA7A),U))
"RTN","LA7VSET",102,0)
 . I CHA=2 D HLL
"RTN","LA7VSET",103,0)
 . I CHA=3 D LMC
"RTN","LA7VSET",104,0)
 . I CHA=4 D CHTST
"RTN","LA7VSET",105,0)
 D KDIR
"RTN","LA7VSET",106,0)
 Q
"RTN","LA7VSET",107,0)
 ;
"RTN","LA7VSET",108,0)
 ;
"RTN","LA7VSET",109,0)
HSTHDR2 ;
"RTN","LA7VSET",110,0)
 N LA7624,LA76248,LA7870,LA7X
"RTN","LA7VSET",111,0)
 ;
"RTN","LA7VSET",112,0)
 S LA7CNT=1
"RTN","LA7VSET",113,0)
 W !!,"1. HOST Lab: ",?15,$P(HOST(LA7A),U,2)
"RTN","LA7VSET",114,0)
 W:$P(HOST(LA7A),U,2)'="" "  (Uneditable)"
"RTN","LA7VSET",115,0)
 ;
"RTN","LA7VSET",116,0)
 I $P(HOST(LA7A),U,2)="" Q
"RTN","LA7VSET",117,0)
 ;
"RTN","LA7VSET",118,0)
 D LINK^HLUTIL3($P(HOST(LA7A),"^",4),.LA7X,"")
"RTN","LA7VSET",119,0)
 S LA7870=+$O(LA7X(0))
"RTN","LA7VSET",120,0)
 I 'LA7870 D
"RTN","LA7VSET",121,0)
 . S LA7870=+$$FIND1^DIC(870,"","OX","LA7V"_$P(HOST(LA7A),U))
"RTN","LA7VSET",122,0)
 . I 'LA7870 S LA7870=+$$FIND1^DIC(870,"","OX","LA7V "_$P(HOST(LA7A),U))
"RTN","LA7VSET",123,0)
 . I LA7870 S LA7X(LA7870)=$$GET1^DIQ(870,LA7870_",",.01)
"RTN","LA7VSET",124,0)
 S LA7CNT=2
"RTN","LA7VSET",125,0)
 W !,"2. Logical Link: ",$G(LA7X(LA7870))
"RTN","LA7VSET",126,0)
 ;
"RTN","LA7VSET",127,0)
 S LA76248=$$FIND1^DIC(62.48,"","OX","LA7V HOST "_$P(HOST(LA7A),U)),LA7CNT=3
"RTN","LA7VSET",128,0)
 W !,"3. Message Configuration: ",$$GET1^DIQ(62.48,LA76248_",",.01)
"RTN","LA7VSET",129,0)
 ;
"RTN","LA7VSET",130,0)
 S LA7624=$$FIND1^DIC(62.4,"","OX","LA7V HOST "_$P(HOST(LA7A),U)),LA7CNT=4
"RTN","LA7VSET",131,0)
 W !,"4. Auto Instrument: ",$$GET1^DIQ(62.4,LA7624_",",.01)
"RTN","LA7VSET",132,0)
 ;
"RTN","LA7VSET",133,0)
 Q
"RTN","LA7VSET",134,0)
 ;
"RTN","LA7VSET",135,0)
 ;
"RTN","LA7VSET",136,0)
LMC ; Edit lab message configuration file.
"RTN","LA7VSET",137,0)
 ;
"RTN","LA7VSET",138,0)
 N DIC,DA,DR,DIE
"RTN","LA7VSET",139,0)
 ;
"RTN","LA7VSET",140,0)
 S X="LA7V HOST "_$P(@LAB@(LA7A),U),DIC(0)="EMX",DIC="^LAHM(62.48,"
"RTN","LA7VSET",141,0)
 D ^DIC
"RTN","LA7VSET",142,0)
 I +Y<0 W !,"You have not entered a "_LAB_" lab." Q
"RTN","LA7VSET",143,0)
 ;
"RTN","LA7VSET",144,0)
 S DA=+Y,DIE="^LAHM(62.48,",DR="3;4;10;11////10;@20;20;I X'="""" S Y=""@20"""
"RTN","LA7VSET",145,0)
 D ^DIE
"RTN","LA7VSET",146,0)
 ;
"RTN","LA7VSET",147,0)
 Q
"RTN","LA7VSET",148,0)
 ;
"RTN","LA7VSET",149,0)
 ;
"RTN","LA7VSET",150,0)
HLAB(LRI) ;Add Host LAB
"RTN","LA7VSET",151,0)
 ;
"RTN","LA7VSET",152,0)
 N INST,LA7VNVC,LA7629,LA7VER,LA7X
"RTN","LA7VSET",153,0)
 ;
"RTN","LA7VSET",154,0)
 I $P(HOST(LA7A),U)'="" D KDIR S DIR("A")="Are you sure you want to update the "_$P(HOST(LA7A),U,2)_" interface",DIR(0)="Y0" D ^DIR Q:+Y'>0
"RTN","LA7VSET",155,0)
 ;
"RTN","LA7VSET",156,0)
 I $P(HOST(LA7A),U)="" D
"RTN","LA7VSET",157,0)
 . N DIC,DA,DO
"RTN","LA7VSET",158,0)
 . S DIC="^DIC(4,",DIC(0)="AEMQZ"
"RTN","LA7VSET",159,0)
 . S DIC("S")="N LA7X S LA7X=$G(^(99)) I ($L($P(LA7X,U))&$P(LA7X,U,5)=""VA"")!($P(LA7X,U)=""""&$P(LA7X,U,5)'=""VA"")"
"RTN","LA7VSET",160,0)
 . D ^DIC Q:Y<1
"RTN","LA7VSET",161,0)
 . S INST=+Y
"RTN","LA7VSET",162,0)
 . I PRIMARY=INST!(INST=DUZ(2)) D  Q
"RTN","LA7VSET",163,0)
 . . W !,"To add your Hospital as a HOST site just add COLLECTION sites."
"RTN","LA7VSET",164,0)
 . S HOST(LA7A+1)=HOST(LA7A)
"RTN","LA7VSET",165,0)
 . S HOST(LA7A)=$$RETFACID^LA7VHLU2(INST,1,1)_U_$P($$NS^XUAF4(INST),"^")_"^^"_INST
"RTN","LA7VSET",166,0)
 ;
"RTN","LA7VSET",167,0)
 I $P(HOST(LA7A),U)="" S $P(HOST(LA7A),U,2)="" Q
"RTN","LA7VSET",168,0)
 ;
"RTN","LA7VSET",169,0)
 I PRIMARY'=$P(HOST(LA7A),U) D
"RTN","LA7VSET",170,0)
 . S LA7VER=2.3
"RTN","LA7VSET",171,0)
 . I $$NVAF^LA7VHLU2($P(HOST(LA7A),"^",4))=1 S LA7VER=2.2
"RTN","LA7VSET",172,0)
 . D HOST^LA7VSTP(PRIMARY,PRSITE,$P(HOST(LA7A),U),$P(HOST(LA7A),U,2),LA7VER)
"RTN","LA7VSET",173,0)
 ;
"RTN","LA7VSET",174,0)
 Q
"RTN","LA7VSET",175,0)
 ;
"RTN","LA7VSET",176,0)
 ;
"RTN","LA7VSET",177,0)
HLL ;add/edit logical link
"RTN","LA7VSET",178,0)
 ;
"RTN","LA7VSET",179,0)
 N HDR,PR,LA7LL
"RTN","LA7VSET",180,0)
 S HDR="Logical Link for transmissions to/from "_$P(HOST(LA7A),U,2)
"RTN","LA7VSET",181,0)
 W @IOF,! F X=1:1:79 W "-"
"RTN","LA7VSET",182,0)
 W !,?((80-$L(HDR))/2),HDR
"RTN","LA7VSET",183,0)
 W ! F X=1:1:79 W "-"
"RTN","LA7VSET",184,0)
 W !,?3,"Protocol",?40,"Logical Link",!,?3,"----------",?40,"---------------"
"RTN","LA7VSET",185,0)
 W !!
"RTN","LA7VSET",186,0)
 S PR=$O(^ORD(101,"B","LA7V Process Results from "_$P(HOST(LA7A),U),0))
"RTN","LA7VSET",187,0)
 I PR D GETLL(PR)
"RTN","LA7VSET",188,0)
 ;
"RTN","LA7VSET",189,0)
 S PR=$O(^ORD(101,"B","LA7V Send Order to "_$P(HOST(LA7A),U),0))
"RTN","LA7VSET",190,0)
 I PR D GETLL(PR)
"RTN","LA7VSET",191,0)
 ;
"RTN","LA7VSET",192,0)
 W !!
"RTN","LA7VSET",193,0)
 D KDIR
"RTN","LA7VSET",194,0)
 S DIR("A")="Setup/update Logical Link",DIR(0)="YO"
"RTN","LA7VSET",195,0)
 D ^DIR
"RTN","LA7VSET",196,0)
 I $D(DIRUT) Q
"RTN","LA7VSET",197,0)
 I Y=1 D TCP^LA7VLL(HOST(LA7A),LA7VS)
"RTN","LA7VSET",198,0)
 ;
"RTN","LA7VSET",199,0)
 Q
"RTN","LA7VSET",200,0)
 ;
"RTN","LA7VSET",201,0)
 ;
"RTN","LA7VSET",202,0)
CHTST ;Enter CHEM Test into the AUTO INSTRUMENT file (#62.4)
"RTN","LA7VSET",203,0)
 ;
"RTN","LA7VSET",204,0)
 N DA,DIC,DIE,DR,AI,LA7624
"RTN","LA7VSET",205,0)
 ;
"RTN","LA7VSET",206,0)
 S (AI,X)="LA7V HOST "_$P(HOST(LA7A),U)
"RTN","LA7VSET",207,0)
 S DIC(0)="QEM",DIC="^LAB(62.4," D ^DIC
"RTN","LA7VSET",208,0)
 I +Y<1 Q
"RTN","LA7VSET",209,0)
 S LA7624=+Y
"RTN","LA7VSET",210,0)
 ;
"RTN","LA7VSET",211,0)
 W !!,"AUTOMATED INSTRUMENT: ",$P(^LAB(62.4,LA7624,0),U)
"RTN","LA7VSET",212,0)
 ;
"RTN","LA7VSET",213,0)
 L +^LAB(62.4,LA7624):1
"RTN","LA7VSET",214,0)
 I '$T W !,?5,"Another user is editing this entry." Q
"RTN","LA7VSET",215,0)
 ;
"RTN","LA7VSET",216,0)
 S DA=LA7624,DIE=DIC,DR="3;10;11;12;18;107"
"RTN","LA7VSET",217,0)
 D ^DIE
"RTN","LA7VSET",218,0)
 W !,"Add Chem Tests to the "_AI_" Automated Instrument for "_$P(HOST(LA7A),U,2)_".",!!
"RTN","LA7VSET",219,0)
 D CHSET
"RTN","LA7VSET",220,0)
 ;
"RTN","LA7VSET",221,0)
 L -^LAB(62.4,LA7624)
"RTN","LA7VSET",222,0)
 ;
"RTN","LA7VSET",223,0)
 Q
"RTN","LA7VSET",224,0)
 ;
"RTN","LA7VSET",225,0)
 ;
"RTN","LA7VSET",226,0)
CHSET ; Edit chem test multiple for selected fields
"RTN","LA7VSET",227,0)
 ; Entry locked from above.
"RTN","LA7VSET",228,0)
 N DA,DO,DIC,DIE,DLAYGO,DR,LA7NLT,LA7Y
"RTN","LA7VSET",229,0)
 ;
"RTN","LA7VSET",230,0)
 S DA(1)=LA7624,DLAYGO=62.4
"RTN","LA7VSET",231,0)
 S DIC="^LAB(62.4,"_DA(1)_",3,",DIC(0)="AELMQZ",DIC("DR")=".01",DIC("P")=$P(^DD(62.4,30,0),U,2)
"RTN","LA7VSET",232,0)
 F  D  Q:LA7Y<1
"RTN","LA7VSET",233,0)
 . D ^DIC S LA7Y=Y Q:LA7Y<1
"RTN","LA7VSET",234,0)
 . S DIE=DIC
"RTN","LA7VSET",235,0)
 . N DA,DIC,DLAYGO ; Protect variables in case changed in DIE call.
"RTN","LA7VSET",236,0)
 . S LA7NLT=$$GET1^DIQ(64,+$P($G(^LAB(60,$P(LA7Y,U,2),64)),U,2)_",",1)
"RTN","LA7VSET",237,0)
 . S DA=+LA7Y,DA(1)=LA7624
"RTN","LA7VSET",238,0)
 . S DR=".01;6//"_LA7NLT_";14;16;18//YES;19;22//NO"
"RTN","LA7VSET",239,0)
 . D ^DIE
"RTN","LA7VSET",240,0)
 . W !
"RTN","LA7VSET",241,0)
 Q
"RTN","LA7VSET",242,0)
 ;
"RTN","LA7VSET",243,0)
 ;
"RTN","LA7VSET",244,0)
REMOTE ;COLLECTION Lab Setup Menu
"RTN","LA7VSET",245,0)
 ;
"RTN","LA7VSET",246,0)
 D COLLECT^LA7VSET1
"RTN","LA7VSET",247,0)
 Q
"RTN","LA7VSET",248,0)
 ;
"RTN","LA7VSET",249,0)
 ;
"RTN","LA7VSET",250,0)
MHLP ;Main help
"RTN","LA7VSET",251,0)
 S DIR("?")=" "
"RTN","LA7VSET",252,0)
 S DIR("?",1)="Option #1 will setup HOST site auto-instruments, HOST site message"
"RTN","LA7VSET",253,0)
 S DIR("?",2)="configuration, and HOST and COLLECTION sites HL7 environment."
"RTN","LA7VSET",254,0)
 S DIR("?",3)=" "
"RTN","LA7VSET",255,0)
 S DIR("?",4)="Option #2 will setup COLLECTION site auto-instruments, COLLECTION site message"
"RTN","LA7VSET",256,0)
 S DIR("?",5)="configuration, and COLLECTION and HOST sites HL7 environment."
"RTN","LA7VSET",257,0)
 S DIR("?",6)=" "
"RTN","LA7VSET",258,0)
 S DIR("?",7)="Option #1 and #2 SHOULD be used by sites that are both a HOST"
"RTN","LA7VSET",259,0)
 S DIR("?",8)="and a COLLECTION site."
"RTN","LA7VSET",260,0)
 Q
"RTN","LA7VSET",261,0)
 ;
"RTN","LA7VSET",262,0)
 ;
"RTN","LA7VSET",263,0)
H1HLP ;HOST Lab(s) help
"RTN","LA7VSET",264,0)
 S DIR("?")="Enter a number between 1 and "_LA7CNT_"."
"RTN","LA7VSET",265,0)
 S DIR("?",1)="Enter a '"_LA7CNT_"' to create a new HOST lab."
"RTN","LA7VSET",266,0)
 Q
"RTN","LA7VSET",267,0)
 ;
"RTN","LA7VSET",268,0)
 ;
"RTN","LA7VSET",269,0)
H2HLP ;HOST Lab Setup help
"RTN","LA7VSET",270,0)
 S DIR("?")=" "
"RTN","LA7VSET",271,0)
 S DIR("?",1)="Enter a '1' to create the HL7 environment along with the Auto-Instrument"
"RTN","LA7VSET",272,0)
 S DIR("?",2)="and LA7 Message Configuration."
"RTN","LA7VSET",273,0)
 S DIR("?",3)="Enter a '2' to create the link between the HOST and COLLECTION labs."
"RTN","LA7VSET",274,0)
 S DIR("?",5)="Enter a '3' to configure the LA7 MESSAGE PARAMETER file."
"RTN","LA7VSET",275,0)
 S DIR("?",4)="Enter a '4' to identify the list of tests you expect back from the HOST lab."
"RTN","LA7VSET",276,0)
 Q
"RTN","LA7VSET",277,0)
 ;
"RTN","LA7VSET",278,0)
 ;
"RTN","LA7VSET",279,0)
CONV ;Convert #62.4 and #62.48 from REMOTE to COLLECTION (File #771 will remain REMOTE).
"RTN","LA7VSET",280,0)
 N RMT,RMT1,UPDT,IEN
"RTN","LA7VSET",281,0)
 K DA,DR,DIE
"RTN","LA7VSET",282,0)
 S DIE="^LAB(62.4,"
"RTN","LA7VSET",283,0)
 S RMT1="LA7V REMOTE ",RMT=RMT1
"RTN","LA7VSET",284,0)
 F  S RMT=$O(^LAB(62.4,"B",RMT)) Q:RMT=""!(RMT'[RMT1)  D
"RTN","LA7VSET",285,0)
 . S IEN=$O(^LAB(62.4,"B",RMT,0))
"RTN","LA7VSET",286,0)
 . S NAME="LA7V COLLECTION"_$P($P(^LAB(62.4,IEN,0),U),"REMOTE",2)
"RTN","LA7VSET",287,0)
 . S DA=IEN,DR=".01///"_NAME
"RTN","LA7VSET",288,0)
 . W !,"Renaming Auto-Instrument "_$P(^LAB(62.4,IEN,0),U)_" to "_NAME
"RTN","LA7VSET",289,0)
 . D ^DIE
"RTN","LA7VSET",290,0)
 . S UPDT=1
"RTN","LA7VSET",291,0)
 K DA,DR,DIE
"RTN","LA7VSET",292,0)
 S DIE="^LAHM(62.48,"
"RTN","LA7VSET",293,0)
 S RMT1="LA7V REMOTE ",RMT=RMT1
"RTN","LA7VSET",294,0)
 F  S RMT=$O(^LAHM(62.48,"B",RMT)) Q:RMT=""!(RMT'[RMT1)  D
"RTN","LA7VSET",295,0)
 . S IEN=$O(^LAHM(62.48,"B",RMT,0))
"RTN","LA7VSET",296,0)
 . S NAME="LA7V COLLECTION"_$P($P(^LAHM(62.48,IEN,0),U),"REMOTE",2)
"RTN","LA7VSET",297,0)
 . S DA=IEN,DR=".01///"_NAME
"RTN","LA7VSET",298,0)
 . W !,"Renaming LA7 Message Configuration "_$P(^LAHM(62.48,IEN,0),U)_" to "_NAME
"RTN","LA7VSET",299,0)
 . D ^DIE
"RTN","LA7VSET",300,0)
 . S UPDT=1
"RTN","LA7VSET",301,0)
 I $G(UPDT)=1 D
"RTN","LA7VSET",302,0)
 . N DIR,DIRUT
"RTN","LA7VSET",303,0)
 . W !!,"For consistency and clarity the above Auto-Instrument names"
"RTN","LA7VSET",304,0)
 . W !,"and Message Configurations have been changed from REMOTE to COLLECTION."
"RTN","LA7VSET",305,0)
 . S DIR(0)="E" D ^DIR
"RTN","LA7VSET",306,0)
 Q
"RTN","LA7VSET",307,0)
 ;
"RTN","LA7VSET",308,0)
 ;
"RTN","LA7VSET",309,0)
GETLL(LA7X) ; Get Lower Level Protocol information for displaying
"RTN","LA7VSET",310,0)
 ; Call with LA7X = ien of file #101 protocol
"RTN","LA7VSET",311,0)
 ;
"RTN","LA7VSET",312,0)
 ; Called from above and LA7VSET1
"RTN","LA7VSET",313,0)
 ;
"RTN","LA7VSET",314,0)
 N LA7Y
"RTN","LA7VSET",315,0)
 ;
"RTN","LA7VSET",316,0)
 D GETS^DIQ(101,LA7X_",",".01;770.7","IE","LA7Y")
"RTN","LA7VSET",317,0)
 ;
"RTN","LA7VSET",318,0)
 W !,?3,$G(LA7Y(101,LA7X_",",.01,"E"))
"RTN","LA7VSET",319,0)
 W ?40,$G(LA7Y(101,LA7X_",",770.7,"E"))
"RTN","LA7VSET",320,0)
 I $G(LA7Y(101,LA7X_",",770.7,"I")) W " ("_$$GET1^DIQ(870,+LA7Y(101,LA7X_",",770.7,"I")_",",2)_")"
"RTN","LA7VSET",321,0)
 ;
"RTN","LA7VSET",322,0)
 Q
"RTN","LA7VSTP")
0^94^B33836613
"RTN","LA7VSTP",1,0)
LA7VSTP ;DALOI/JMC - HL7 environment setup routine ;June 20, 2007
"RTN","LA7VSTP",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,44,51,46,64,74**;Sep 27, 1994;Build 229
"RTN","LA7VSTP",3,0)
 ;
"RTN","LA7VSTP",4,0)
 ; This routine will create LEDI v1.6 file setups.
"RTN","LA7VSTP",5,0)
 ;
"RTN","LA7VSTP",6,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VSTP",7,0)
 ;
"RTN","LA7VSTP",8,0)
HOST(PRIMARY,PRSITE,LRI,SITE,LA7VER) ;
"RTN","LA7VSTP",9,0)
 ;
"RTN","LA7VSTP",10,0)
 N LA7Y,LAREMOTE,LAHOST,LASERV,LACLNT,LRS,PROT,ORU
"RTN","LA7VSTP",11,0)
 ;
"RTN","LA7VSTP",12,0)
 I $G(LRI)="" D EXIT Q
"RTN","LA7VSTP",13,0)
 ;
"RTN","LA7VSTP",14,0)
 W !,"Setting up the following Host Labs for "_PRSITE
"RTN","LA7VSTP",15,0)
 W !,"  Updating HL7 APPLICATION PARAMETER file (#771)."
"RTN","LA7VSTP",16,0)
 ;
"RTN","LA7VSTP",17,0)
 S LA7VER=$S($G(LA7VER)]"":LA7VER,1:2.3)
"RTN","LA7VSTP",18,0)
 S LAREMOTE="LA7V REMOTE "_PRIMARY
"RTN","LA7VSTP",19,0)
 S $P(LAREMOTE,"^",2)=$$SETAPP(LAREMOTE,PRIMARY)
"RTN","LA7VSTP",20,0)
 ;
"RTN","LA7VSTP",21,0)
 S LAHOST="LA7V HOST "_LRI
"RTN","LA7VSTP",22,0)
 S $P(LAHOST,"^",2)=$$SETAPP(LAHOST,LRI)
"RTN","LA7VSTP",23,0)
 ;
"RTN","LA7VSTP",24,0)
 W !,"  Updating PROTOCOL file (#101)."
"RTN","LA7VSTP",25,0)
 ;
"RTN","LA7VSTP",26,0)
 ; Setup protocols to receive and process result (ORU) messages.
"RTN","LA7VSTP",27,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",28,0)
 K LASERV
"RTN","LA7VSTP",29,0)
 S LASERV="LA7V Receive Results from "_LRI
"RTN","LA7VSTP",30,0)
 S LASERV(4)="E"
"RTN","LA7VSTP",31,0)
 S LASERV(770.1)=$P(LAHOST,"^")
"RTN","LA7VSTP",32,0)
 S LASERV(770.3)="ORU"
"RTN","LA7VSTP",33,0)
 S LASERV(770.4)="R01"
"RTN","LA7VSTP",34,0)
 S LASERV(770.8)="AL"
"RTN","LA7VSTP",35,0)
 S LASERV(770.95)=LA7VER
"RTN","LA7VSTP",36,0)
 D SETPRO(.LASERV)
"RTN","LA7VSTP",37,0)
 ;
"RTN","LA7VSTP",38,0)
 K LACLNT
"RTN","LA7VSTP",39,0)
 S LACLNT="LA7V Process Results from "_LRI
"RTN","LA7VSTP",40,0)
 S LACLNT(4)="S"
"RTN","LA7VSTP",41,0)
 S LACLNT(770.2)=$P(LAREMOTE,"^")
"RTN","LA7VSTP",42,0)
 S LACLNT(770.3)="@"
"RTN","LA7VSTP",43,0)
 S LACLNT(770.4)="R01"
"RTN","LA7VSTP",44,0)
 S LACLNT(770.11)="ACK"
"RTN","LA7VSTP",45,0)
 S LACLNT(770.95)=LA7VER
"RTN","LA7VSTP",46,0)
 S LACLNT(771)="D ORU^LA7VHL"
"RTN","LA7VSTP",47,0)
 F I=773.1,773.2,773.4 S LACLNT(I)=1
"RTN","LA7VSTP",48,0)
 D SETPRO(.LACLNT)
"RTN","LA7VSTP",49,0)
 ;
"RTN","LA7VSTP",50,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",51,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",52,0)
 ;
"RTN","LA7VSTP",53,0)
 ; Setup protocols to build and send order (ORM) messages.
"RTN","LA7VSTP",54,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",55,0)
 K LASERV
"RTN","LA7VSTP",56,0)
 S LASERV="LA7V Order to "_LRI
"RTN","LA7VSTP",57,0)
 S LASERV(4)="E"
"RTN","LA7VSTP",58,0)
 S LASERV(770.1)=$P(LAREMOTE,"^")
"RTN","LA7VSTP",59,0)
 S LASERV(770.3)="ORM"
"RTN","LA7VSTP",60,0)
 S LASERV(770.4)="O01"
"RTN","LA7VSTP",61,0)
 F I=770.2,770.11 S LASERV(I)="@"
"RTN","LA7VSTP",62,0)
 F I=770.8,770.9 S LASERV(I)="AL"
"RTN","LA7VSTP",63,0)
 S LASERV(770.95)=LA7VER
"RTN","LA7VSTP",64,0)
 S LASERV(772)="D ORR^LA7VHL"
"RTN","LA7VSTP",65,0)
 D SETPRO(.LASERV)
"RTN","LA7VSTP",66,0)
 ;
"RTN","LA7VSTP",67,0)
 K LACLNT
"RTN","LA7VSTP",68,0)
 S LACLNT="LA7V Send Order to "_LRI
"RTN","LA7VSTP",69,0)
 S LACLNT(4)="S"
"RTN","LA7VSTP",70,0)
 S LACLNT(770.2)=$P(LAHOST,"^")
"RTN","LA7VSTP",71,0)
 S LACLNT(770.4)="O02"
"RTN","LA7VSTP",72,0)
 S LACLNT(770.11)="ORR"
"RTN","LA7VSTP",73,0)
 S LACLNT(770.95)=LA7VER
"RTN","LA7VSTP",74,0)
 F I=770.1,770.3 S LACLNT(I)="@"
"RTN","LA7VSTP",75,0)
 F I=773.1,773.2,773.4 S LACLNT(I)=1
"RTN","LA7VSTP",76,0)
 D SETPRO(.LACLNT)
"RTN","LA7VSTP",77,0)
 ;
"RTN","LA7VSTP",78,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",79,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",80,0)
 ;
"RTN","LA7VSTP",81,0)
 D HOST^LA7VSTP1
"RTN","LA7VSTP",82,0)
 D EXIT
"RTN","LA7VSTP",83,0)
 ;
"RTN","LA7VSTP",84,0)
 Q
"RTN","LA7VSTP",85,0)
 ;
"RTN","LA7VSTP",86,0)
 ;
"RTN","LA7VSTP",87,0)
REMOTE(PRIMARY,PRSITE,LRI,SITE,LA7VER) ;
"RTN","LA7VSTP",88,0)
 N LA7Y,LAREMOTE,LAHOST,LASERV,LACLNT,LRS,PROT,ORU
"RTN","LA7VSTP",89,0)
 ;
"RTN","LA7VSTP",90,0)
 I $G(LRI)="" D EXIT Q
"RTN","LA7VSTP",91,0)
 ;
"RTN","LA7VSTP",92,0)
 W !,"Setting up the REMOTE Lab, "_SITE_" and HOST Lab "_PRSITE
"RTN","LA7VSTP",93,0)
 W !,"   Updating HL7 APPLICATION PARAMETER file (#771)."
"RTN","LA7VSTP",94,0)
 ;
"RTN","LA7VSTP",95,0)
 S LA7VER=$S($G(LA7VER)]"":LA7VER,1:2.3)
"RTN","LA7VSTP",96,0)
 S LAHOST="LA7V HOST "_PRIMARY
"RTN","LA7VSTP",97,0)
 S $P(LAHOST,"^",2)=$$SETAPP(LAHOST,PRIMARY)
"RTN","LA7VSTP",98,0)
 ;
"RTN","LA7VSTP",99,0)
 S LAREMOTE="LA7V REMOTE "_LRI
"RTN","LA7VSTP",100,0)
 S $P(LAREMOTE,"^",2)=$$SETAPP(LAREMOTE,LRI)
"RTN","LA7VSTP",101,0)
 ;
"RTN","LA7VSTP",102,0)
 W !,"  Updating PROTOCOL file (#101)."
"RTN","LA7VSTP",103,0)
 ;
"RTN","LA7VSTP",104,0)
 ; Setup protocols to build and send results (ORU) message back.
"RTN","LA7VSTP",105,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",106,0)
 K LASERV
"RTN","LA7VSTP",107,0)
 S LASERV="LA7V Results Reporting to "_LRI
"RTN","LA7VSTP",108,0)
 S LASERV(4)="E"
"RTN","LA7VSTP",109,0)
 S LASERV(770.1)=$P(LAHOST,"^")
"RTN","LA7VSTP",110,0)
 S LASERV(770.3)="ORU"
"RTN","LA7VSTP",111,0)
 S LASERV(770.4)="R01"
"RTN","LA7VSTP",112,0)
 S LASERV(770.95)=LA7VER
"RTN","LA7VSTP",113,0)
 F I=770.8,770.9 S LASERV(I)="AL"
"RTN","LA7VSTP",114,0)
 S LASERV(772)="D ACK^LA7VHL"
"RTN","LA7VSTP",115,0)
 D SETPRO(.LASERV)
"RTN","LA7VSTP",116,0)
 ;
"RTN","LA7VSTP",117,0)
 K LACLNT
"RTN","LA7VSTP",118,0)
 S LACLNT="LA7V Send Results to "_LRI
"RTN","LA7VSTP",119,0)
 S LACLNT(4)="S"
"RTN","LA7VSTP",120,0)
 S LACLNT(770.2)=$P(LAREMOTE,"^")
"RTN","LA7VSTP",121,0)
 S LACLNT(770.3)="@"
"RTN","LA7VSTP",122,0)
 S LACLNT(770.4)="R01"
"RTN","LA7VSTP",123,0)
 S LACLNT(770.11)="ACK"
"RTN","LA7VSTP",124,0)
 S LACLNT(770.95)=LA7VER
"RTN","LA7VSTP",125,0)
 F I=773.1,773.2,773.4 S LACLNT(I)=1
"RTN","LA7VSTP",126,0)
 D SETPRO(.LACLNT)
"RTN","LA7VSTP",127,0)
 ;
"RTN","LA7VSTP",128,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",129,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",130,0)
 ;
"RTN","LA7VSTP",131,0)
 ; Setup protocols to receive and process order (ORM) messages.
"RTN","LA7VSTP",132,0)
 ; Create event & subscriber protocols.
"RTN","LA7VSTP",133,0)
 K LASERV
"RTN","LA7VSTP",134,0)
 S LASERV="LA7V Receive Order from "_LRI
"RTN","LA7VSTP",135,0)
 S LASERV(4)="E"
"RTN","LA7VSTP",136,0)
 S LASERV(770.1)=$P(LAREMOTE,"^")
"RTN","LA7VSTP",137,0)
 S LASERV(770.3)="ORM"
"RTN","LA7VSTP",138,0)
 S LASERV(770.4)="O01"
"RTN","LA7VSTP",139,0)
 S LASERV(770.8)="AL"
"RTN","LA7VSTP",140,0)
 S LASERV(770.95)=LA7VER
"RTN","LA7VSTP",141,0)
 F I=770.2,770.11 S LASERV(I)="@"
"RTN","LA7VSTP",142,0)
 D SETPRO(.LASERV)
"RTN","LA7VSTP",143,0)
 ;
"RTN","LA7VSTP",144,0)
 K LACLNT
"RTN","LA7VSTP",145,0)
 S LACLNT="LA7V Process Order from "_LRI
"RTN","LA7VSTP",146,0)
 S LACLNT(4)="S"
"RTN","LA7VSTP",147,0)
 S LACLNT(770.2)=$P(LAHOST,"^")
"RTN","LA7VSTP",148,0)
 S LACLNT(770.4)="O02"
"RTN","LA7VSTP",149,0)
 S LACLNT(770.11)="ORR"
"RTN","LA7VSTP",150,0)
 F I=770.1,770.3 S LACLNT(I)="@"
"RTN","LA7VSTP",151,0)
 F I=773.1,773.2,773.4 S LACLNT(I)=1
"RTN","LA7VSTP",152,0)
 S LACLNT(770.95)=LA7VER
"RTN","LA7VSTP",153,0)
 S LACLNT(771)="D IN^LA7VORM"
"RTN","LA7VSTP",154,0)
 D SETPRO(.LACLNT)
"RTN","LA7VSTP",155,0)
 ;
"RTN","LA7VSTP",156,0)
 ; Add subscriber to event.
"RTN","LA7VSTP",157,0)
 D ADDSUB(LASERV,LACLNT)
"RTN","LA7VSTP",158,0)
 ;
"RTN","LA7VSTP",159,0)
 D REMOTE^LA7VSTP1
"RTN","LA7VSTP",160,0)
 D EXIT
"RTN","LA7VSTP",161,0)
 ;
"RTN","LA7VSTP",162,0)
 Q
"RTN","LA7VSTP",163,0)
 ;
"RTN","LA7VSTP",164,0)
 ;
"RTN","LA7VSTP",165,0)
EXIT ; Exit with message
"RTN","LA7VSTP",166,0)
 W !!,"HL7 v1.6 Environment setup is complete!!"
"RTN","LA7VSTP",167,0)
 S LASERV(770.95)=LA7VER
"RTN","LA7VSTP",168,0)
 K DIR
"RTN","LA7VSTP",169,0)
 S DIR(0)="E" D ^DIR
"RTN","LA7VSTP",170,0)
 Q
"RTN","LA7VSTP",171,0)
 ;
"RTN","LA7VSTP",172,0)
 ;
"RTN","LA7VSTP",173,0)
SETAPP(LA7X,LA7FAC) ;sets up the HL7 APPLICATION PARAMETER file #771
"RTN","LA7VSTP",174,0)
 ;
"RTN","LA7VSTP",175,0)
 ; Call with LA7X = value of .01 field to add to file #771
"RTN","LA7VSTP",176,0)
 ;           LA7FAC = facility name
"RTN","LA7VSTP",177,0)
 ;
"RTN","LA7VSTP",178,0)
 N DIC,DIE,DLAYGO,DR,LA7Y
"RTN","LA7VSTP",179,0)
 ;
"RTN","LA7VSTP",180,0)
 S X=LA7X
"RTN","LA7VSTP",181,0)
 S DIC="^HL(771,",DLAYGO=771,DIC(0)="L"
"RTN","LA7VSTP",182,0)
 D ^DIC
"RTN","LA7VSTP",183,0)
 S LA7Y=Y
"RTN","LA7VSTP",184,0)
 W:$P(LA7Y,"^",3) !,"     Adding "_LA7X
"RTN","LA7VSTP",185,0)
 I +LA7Y<1 Q
"RTN","LA7VSTP",186,0)
 ;
"RTN","LA7VSTP",187,0)
 S DA=+LA7Y,DIE="^HL(771,",DR="2////a;3////"_LA7FAC
"RTN","LA7VSTP",188,0)
 D ^DIE
"RTN","LA7VSTP",189,0)
 Q $P(LA7Y,"^")
"RTN","LA7VSTP",190,0)
 ;
"RTN","LA7VSTP",191,0)
 ;
"RTN","LA7VSTP",192,0)
SETPRO(FIELDS) ;sets up the PROTOCOL file #101
"RTN","LA7VSTP",193,0)
 ; Call with   LA7X = Protocol name
"RTN","LA7VSTP",194,0)
 ;           FIELDS = FileMan fields array
"RTN","LA7VSTP",195,0)
 ;
"RTN","LA7VSTP",196,0)
 N DA,DIC,FDA,I,LA7DIE,LA7IENS
"RTN","LA7VSTP",197,0)
 ;
"RTN","LA7VSTP",198,0)
 S X=FIELDS,DIC="^ORD(101,",DIC(0)="L",DLAYGO=101
"RTN","LA7VSTP",199,0)
 D ^DIC
"RTN","LA7VSTP",200,0)
 I '$G(LA7QUIET) W !,FIELDS W:$P(Y,U,3) !,"     Adding "_X
"RTN","LA7VSTP",201,0)
 S DA=+Y
"RTN","LA7VSTP",202,0)
 I DA<0 Q
"RTN","LA7VSTP",203,0)
 ;
"RTN","LA7VSTP",204,0)
 S I=0,LA7IENS=DA_","
"RTN","LA7VSTP",205,0)
 F  S I=$O(FIELDS(I)) Q:'I  S FDA(1,101,LA7IENS,I)=FIELDS(I)
"RTN","LA7VSTP",206,0)
 S FDA(1,101,LA7IENS,770.6)="@"
"RTN","LA7VSTP",207,0)
 D FILE^DIE("E","FDA(1)","LA7DIE(1)")
"RTN","LA7VSTP",208,0)
 S FDA(2,101,LA7IENS,5)=DUZ
"RTN","LA7VSTP",209,0)
 D FILE^DIE("","FDA(2)","LA7DIE(2)")
"RTN","LA7VSTP",210,0)
 D CLEAN^DILF
"RTN","LA7VSTP",211,0)
 Q
"RTN","LA7VSTP",212,0)
 ;
"RTN","LA7VSTP",213,0)
 ;
"RTN","LA7VSTP",214,0)
ADDSUB(LA7EVNT,LA7SUB) ; Add subscriber to event protocol
"RTN","LA7VSTP",215,0)
 ; Call with LA7EVNT = name of event protocol
"RTN","LA7VSTP",216,0)
 ;            LA7SUB = name of subscriber protocol
"RTN","LA7VSTP",217,0)
 ;
"RTN","LA7VSTP",218,0)
 N DIC,DA,DR,D0,DLAYGO,LA7101E,LA7101S,X,Y
"RTN","LA7VSTP",219,0)
 ;
"RTN","LA7VSTP",220,0)
 I '$D(^ORD(101,"B",LA7SUB)) Q
"RTN","LA7VSTP",221,0)
 I '$D(^ORD(101,"B",LA7EVNT)) Q
"RTN","LA7VSTP",222,0)
 ;
"RTN","LA7VSTP",223,0)
 ; Get ien for event and subscriber protocols
"RTN","LA7VSTP",224,0)
 S LA7101E=$O(^ORD(101,"B",LA7EVNT,0))
"RTN","LA7VSTP",225,0)
 S LA7101S=$O(^ORD(101,"B",LA7SUB,0))
"RTN","LA7VSTP",226,0)
 ;
"RTN","LA7VSTP",227,0)
 ; Already listed as a subscriber to this event
"RTN","LA7VSTP",228,0)
 I $D(^ORD(101,LA7101E,775,"B",LA7101S)) Q
"RTN","LA7VSTP",229,0)
 ;
"RTN","LA7VSTP",230,0)
 S X=LA7SUB,DA(1)=LA7101E,DIC="^ORD(101,"_DA(1)_",775,"
"RTN","LA7VSTP",231,0)
 S DLAYGO=101.01,DIC(0)="QEL",DIC("P")=$P(^DD(101,775,0),U,2)
"RTN","LA7VSTP",232,0)
 D ^DIC
"RTN","LA7VSTP",233,0)
 ;
"RTN","LA7VSTP",234,0)
 Q
"RTN","LA7XREF")
0^60^B4252557
"RTN","LA7XREF",1,0)
LA7XREF ;DALOI/JDB - LA7 FILE UTILITIES ;03/07/12  16:11
"RTN","LA7XREF",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LA7XREF",3,0)
 ;
"RTN","LA7XREF",4,0)
 Q
"RTN","LA7XREF",5,0)
 ;
"RTN","LA7XREF",6,0)
ITP02 ;
"RTN","LA7XREF",7,0)
 ; Input Transform for #62.4701 Field .02
"RTN","LA7XREF",8,0)
 N LAT
"RTN","LA7XREF",9,0)
 S LAT=$T
"RTN","LA7XREF",10,0)
 K:$L(X)>15!($L(X)<1)!'(X?.(1"LN",1"SCT",1"L",1"99"1.UN.1"."1.UN)) X
"RTN","LA7XREF",11,0)
 I $G(X)'="" I '$G(LRFPRIV) K:$P($G(^(0)),"^",5)="0"&(X'?.(1"L"0E,1"99"1.UN.1"."1.UN)) X
"RTN","LA7XREF",12,0)
 I $G(X)'="" D CODSETOK^LA7VLCM3(DA(1),DA,,X,1)
"RTN","LA7XREF",13,0)
 I LAT ;reset $T
"RTN","LA7XREF",14,0)
 Q
"RTN","LA7XREF",15,0)
 ;
"RTN","LA7XREF",16,0)
OT62482(LAY) ;
"RTN","LA7XREF",17,0)
 ; Output Transform routine for #62.48 subfile #62.482 field .01
"RTN","LA7XREF",18,0)
 ; Appends file info to the entry for display purposes.
"RTN","LA7XREF",19,0)
 ; Inputs
"RTN","LA7XREF",20,0)
 ;   LAY  : The variable pointer reference  ie 1;LAB(61,
"RTN","LA7XREF",21,0)
 ; Output
"RTN","LA7XREF",22,0)
 ;        : .01's value and the file info  ie BLOOD [SP #61:1]
"RTN","LA7XREF",23,0)
 N STR,LAX,LAIEN,QUIET,INFO,OUT,X,Y
"RTN","LA7XREF",24,0)
 S QUIET=0
"RTN","LA7XREF",25,0)
 S (OUT,LAY)=$G(LAY)
"RTN","LA7XREF",26,0)
 S STR=$$VARPTR01(LAY,.INFO)
"RTN","LA7XREF",27,0)
 I STR'="" S OUT=STR
"RTN","LA7XREF",28,0)
 S QUIET=$$ISQUIET^LRXREF()
"RTN","LA7XREF",29,0)
 I 'QUIET S QUIET=$D(DDS)
"RTN","LA7XREF",30,0)
 I 'QUIET D  ;
"RTN","LA7XREF",31,0)
 . S LAIEN=INFO("IEN")
"RTN","LA7XREF",32,0)
 . S LAX=INFO("FN")
"RTN","LA7XREF",33,0)
 . I LAX'="" D  ;
"RTN","LA7XREF",34,0)
 . . S STR=$S(+LAX=61:"SP",+LAX=62:"CS",1:"")
"RTN","LA7XREF",35,0)
 . . I STR'="" S STR="["_STR_" #"_+LAX_":"_LAIEN_"]"
"RTN","LA7XREF",36,0)
 . . S OUT=OUT_"  "_STR
"RTN","LA7XREF",37,0)
 . ;
"RTN","LA7XREF",38,0)
 Q OUT
"RTN","LA7XREF",39,0)
 ;
"RTN","LA7XREF",40,0)
ID62482() ;
"RTN","LA7XREF",41,0)
 ; Handles the WRITE IDENTIFIER logic in DD for File #62.48
"RTN","LA7XREF",42,0)
 ; subfile #62.482 field #.02
"RTN","LA7XREF",43,0)
 ; Available variables: Y=IEN, Naked global reference of record
"RTN","LA7XREF",44,0)
 N STR,X,Y,IEN
"RTN","LA7XREF",45,0)
 S STR=""
"RTN","LA7XREF",46,0)
 S X=$G(^(0)) ; from FM call -- the 0 node of the 62.482 record
"RTN","LA7XREF",47,0)
 S X=$P(X,U,1)
"RTN","LA7XREF",48,0)
 S IEN=$P(X,";",1)
"RTN","LA7XREF",49,0)
 S X=$P(X,";",2) ;file ID
"RTN","LA7XREF",50,0)
 S X=$P(X,"(",2) ; file number
"RTN","LA7XREF",51,0)
 I X'="" D  ;
"RTN","LA7XREF",52,0)
 . S STR=$S(+X=61:"SP",+X=62:"CS",1:"")
"RTN","LA7XREF",53,0)
 . I STR'="" S STR="["_STR_" #"_+X_":"_IEN_"]"
"RTN","LA7XREF",54,0)
 Q STR
"RTN","LA7XREF",55,0)
 ;
"RTN","LA7XREF",56,0)
VARPTR01(LAY,INFO) ;
"RTN","LA7XREF",57,0)
 ;
"RTN","LA7XREF",58,0)
 ;  LAY ; The internal var pointer representation ie: 1;LAB(61,
"RTN","LA7XREF",59,0)
 ; INFO <byref> <opt> <output>
"RTN","LA7XREF",60,0)
 ; 
"RTN","LA7XREF",61,0)
 ; DDS = FM var when used with DBS calls
"RTN","LA7XREF",62,0)
 ; DIQUIET
"RTN","LA7XREF",63,0)
 N LAREC,LAFN,LAMSG,LAVAL,LAX,DA,X,Y,DIERR
"RTN","LA7XREF",64,0)
 S LAVAL=LAY
"RTN","LA7XREF",65,0)
 S LAREC=+$P(LAY,";",1)
"RTN","LA7XREF",66,0)
 S LAFN=$P(LAY,";",2)
"RTN","LA7XREF",67,0)
 S LAFN=$P(LAFN,"(",2)
"RTN","LA7XREF",68,0)
 S LAFN=$P(LAFN,",",1)
"RTN","LA7XREF",69,0)
 D  ;
"RTN","LA7XREF",70,0)
 . S LAX=$$GET1^DIQ(LAFN,LAREC_",",.01,"","","LAMSG")
"RTN","LA7XREF",71,0)
 . I LAX'="" S LAVAL=LAX
"RTN","LA7XREF",72,0)
 S INFO("FN")=LAFN
"RTN","LA7XREF",73,0)
 S INFO("IEN")=LAREC
"RTN","LA7XREF",74,0)
 Q LAVAL
"RTN","LAGEN")
0^34^B50777837
"RTN","LAGEN",1,0)
LAGEN ;DALOI/STAFF - LAB AUTOMATED DATA ;11/18/11  15:03
"RTN","LAGEN",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**1,17,22,27,47,46,64,67,74**;Sep 27, 1994;Build 229
"RTN","LAGEN",3,0)
 ;
"RTN","LAGEN",4,0)
 Q
"RTN","LAGEN",5,0)
 ;
"RTN","LAGEN",6,0)
LOG ; Run by accession number.
"RTN","LAGEN",7,0)
 S LINK="",LRDFN=0,DPF=2
"RTN","LAGEN",8,0)
 I $G(LOG)<1 G LG2
"RTN","LAGEN",9,0)
 ; If overlay data -> find if accession exists in LAH
"RTN","LAGEN",10,0)
 I LROVER D  Q:ISQN>0
"RTN","LAGEN",11,0)
 . N I,X
"RTN","LAGEN",12,0)
 . S (ISQN,I)=0
"RTN","LAGEN",13,0)
 . F  S I=$O(^LAH(LWL,1,"C",LOG,I)) Q:I<1  D  Q:ISQN
"RTN","LAGEN",14,0)
 . . S X=$G(^LAH(LWL,1,I,0))
"RTN","LAGEN",15,0)
 . . ; Quit if different accession area.
"RTN","LAGEN",16,0)
 . . I $P(X,"^",3)'=WL Q
"RTN","LAGEN",17,0)
 . . ; Quit if different accession date and not a rollover accession (same original accession date).
"RTN","LAGEN",18,0)
 . . I $P(X,"^",4)'=LADT,$P($G(^LRO(68,WL,1,LADT,1,LOG,0)),"^",3)'=$P($G(^LRO(68,WL,1,$P(X,"^",4),1,LOG,0)),"^",3) Q
"RTN","LAGEN",19,0)
 . . S ISQN=I
"RTN","LAGEN",20,0)
 . . D UPDT(LWL,ISQN)
"RTN","LAGEN",21,0)
 I '$D(^LRO(68,WL,1,LADT,1,LOG,0)) S LINK="^^"_+LOG G LG2
"RTN","LAGEN",22,0)
 S X=^LRO(68,WL,1,LADT,1,LOG,0),LINK=WL_U_LADT_U_LOG,LRDFN=+X,DPF=$P(X,U,2)
"RTN","LAGEN",23,0)
LG2 D ISQN
"RTN","LAGEN",24,0)
 I $G(LOG)>0 S ^LAH(LWL,1,"C",LOG,ISQN)="",$P(^LAH(LWL,1,ISQN,0),U,3,5)=LINK
"RTN","LAGEN",25,0)
 I $G(CENUM)>0 S $P(^LAH(LWL,1,ISQN,0),U,6)=CENUM,^LAH(LWL,1,"D",+CENUM,ISQN)=""
"RTN","LAGEN",26,0)
 I $D(^LRO(68.2,LWL,1,+TRAY,1,+CUP,0)) S ^(4,ISQN)=""
"RTN","LAGEN",27,0)
 Q
"RTN","LAGEN",28,0)
 ;
"RTN","LAGEN",29,0)
 ;
"RTN","LAGEN",30,0)
ISQN ;
"RTN","LAGEN",31,0)
 L +^LAH(LWL):99999
"RTN","LAGEN",32,0)
 ;
"RTN","LAGEN",33,0)
 F  S (^LAH(LWL),ISQN)=1+$G(^LAH(LWL)) Q:'$D(^LAH(LWL,1,ISQN))
"RTN","LAGEN",34,0)
 ;
"RTN","LAGEN",35,0)
 S:CUP="" TRAY=1,CUP=ISQN
"RTN","LAGEN",36,0)
 S ^LAH(LWL,1,ISQN,0)=TRAY_U_CUP_"^^^^^"_METH_"^"_+$G(IDE)
"RTN","LAGEN",37,0)
 ;
"RTN","LAGEN",38,0)
 D UPDT(LWL,ISQN)
"RTN","LAGEN",39,0)
 ;
"RTN","LAGEN",40,0)
 S ^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP),ISQN)=""
"RTN","LAGEN",41,0)
 ;
"RTN","LAGEN",42,0)
 ; IDE xref added to enable correct identifier for CX4/CX5 instruments
"RTN","LAGEN",43,0)
 S ^LAH(LWL,1,"E",+$G(IDE),ISQN)=""
"RTN","LAGEN",44,0)
 ;
"RTN","LAGEN",45,0)
 ; Set UID xref and .3 node, used to verify by unique identifier (UID).
"RTN","LAGEN",46,0)
 I $G(LA7UID)'="" D UID(LWL,ISQN,LA7UID)
"RTN","LAGEN",47,0)
 ;
"RTN","LAGEN",48,0)
 L -^LAH(LWL)
"RTN","LAGEN",49,0)
 Q
"RTN","LAGEN",50,0)
 ;
"RTN","LAGEN",51,0)
 ;
"RTN","LAGEN",52,0)
LLIST ;
"RTN","LAGEN",53,0)
 S LRDFN=0,DPF=2
"RTN","LAGEN",54,0)
 ;
"RTN","LAGEN",55,0)
 I LROVER D  Q:ISQN>0
"RTN","LAGEN",56,0)
 . S ISQN=+$O(^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP),0))
"RTN","LAGEN",57,0)
 . I ISQN D UPDT(LWL,ISQN)
"RTN","LAGEN",58,0)
 ;
"RTN","LAGEN",59,0)
 ; Run by load/work list number sent.
"RTN","LAGEN",60,0)
 D ISQN S LINK="^^"
"RTN","LAGEN",61,0)
 ;
"RTN","LAGEN",62,0)
 I $D(^LRO(68.2,LWL,1,TRAY,1,CUP,0)) S LINK=$P(^(0),"^",1,3),^(4,ISQN)=""
"RTN","LAGEN",63,0)
 ;
"RTN","LAGEN",64,0)
 S $P(^LAH(LWL,1,ISQN,0),U,3,5)=LINK
"RTN","LAGEN",65,0)
 ;
"RTN","LAGEN",66,0)
 S DPF=2
"RTN","LAGEN",67,0)
 Q:LINK="^^"
"RTN","LAGEN",68,0)
 S WL=+$P(LINK,"^",1),WDT=+$P(LINK,"^",2),LOG=+$P(LINK,"^",3),^LAH(LWL,1,"C",LOG,ISQN)=""
"RTN","LAGEN",69,0)
 S X=$S($D(^LRO(68,WL,1,WDT,1,LOG,0)):^(0),1:"0^2"),DPF=+$P(X,U,2),LRDFN=+X
"RTN","LAGEN",70,0)
 ;
"RTN","LAGEN",71,0)
 Q
"RTN","LAGEN",72,0)
 ;
"RTN","LAGEN",73,0)
 ;
"RTN","LAGEN",74,0)
SEQN ;
"RTN","LAGEN",75,0)
 ; Run by the order data received
"RTN","LAGEN",76,0)
 S CUP=""
"RTN","LAGEN",77,0)
 D LLIST
"RTN","LAGEN",78,0)
 Q
"RTN","LAGEN",79,0)
 ;
"RTN","LAGEN",80,0)
 ;
"RTN","LAGEN",81,0)
CENUM ;
"RTN","LAGEN",82,0)
 S DPF=2,LRDFN=0,LOG=$O(^LRO(68,WL,1,DT,1,"D",+CENUM,0))
"RTN","LAGEN",83,0)
 G LOG:LOG>0 ;for martinez only
"RTN","LAGEN",84,0)
 ;IF CENUM?1A.ANP S Y=CENUM D CEPACK I Y?.ANP S DFN=$O(^LAB(62.3,"B",Y,0)) I DFN S DPF=62.3
"RTN","LAGEN",85,0)
 ;
"RTN","LAGEN",86,0)
 D ISQN
"RTN","LAGEN",87,0)
 ;
"RTN","LAGEN",88,0)
 S ^LAH(LWL,1,"C",LOG,ISQN)="",^LAH(LWL,1,"D",+CENUM,ISQN)="",$P(^LAH(LWL,1,ISQN,0),U,6)=CENUM
"RTN","LAGEN",89,0)
 ;
"RTN","LAGEN",90,0)
 I $D(^LRO(68.2,LWL,1,TRAY,1,CUP,0)) S ^(4,ISQN)=""
"RTN","LAGEN",91,0)
 Q
"RTN","LAGEN",92,0)
 ;
"RTN","LAGEN",93,0)
 ;
"RTN","LAGEN",94,0)
IDENT ;
"RTN","LAGEN",95,0)
 S DPF=2,LRDFN=0,LOG=$O(^LRO(68,WL,1,DT,1,"C",IDENT,0))
"RTN","LAGEN",96,0)
 I LOG>0 D LOG Q
"RTN","LAGEN",97,0)
 D ISQN
"RTN","LAGEN",98,0)
 Q
"RTN","LAGEN",99,0)
 ;
"RTN","LAGEN",100,0)
 ;
"RTN","LAGEN",101,0)
POC ; Entry point for POC interfaces to setup LAH using "E" x-ref
"RTN","LAGEN",102,0)
 ; IDE xref used to identify for POC specimen
"RTN","LAGEN",103,0)
 I $G(IDE)'="" D  Q:ISQN
"RTN","LAGEN",104,0)
 . S ISQN=$O(^LAH(LWL,1,"E",IDE,0))
"RTN","LAGEN",105,0)
 . I ISQN D UPDT(LWL,ISQN) Q
"RTN","LAGEN",106,0)
 D LOG
"RTN","LAGEN",107,0)
 Q
"RTN","LAGEN",108,0)
 ;
"RTN","LAGEN",109,0)
 ;
"RTN","LAGEN",110,0)
CONTROL ; Verify control's
"RTN","LAGEN",111,0)
 ;
"RTN","LAGEN",112,0)
 Q:'$D(^LRO(68,WL,1,DT,1,LOG,0))  Q:$P(^(0),U,2)'=62.3
"RTN","LAGEN",113,0)
 ;
"RTN","LAGEN",114,0)
 S LRDFN=+^LRO(68,WL,1,DT,1,LOG,0)
"RTN","LAGEN",115,0)
 S IDT=+$P($G(^LRO(68,WL,1,DT,1,LOG,3)),"^",3)
"RTN","LAGEN",116,0)
 I IDT<1 Q
"RTN","LAGEN",117,0)
 I '$D(^LR(LRDFN,"CH",IDT,0)) Q
"RTN","LAGEN",118,0)
 S $P(^LRO(68,WL,1,DT,1,LOG,3),U,4)=NOW
"RTN","LAGEN",119,0)
 S $P(^LR(LRDFN,"CH",IDT,0),U,3)=NOW
"RTN","LAGEN",120,0)
 ;
"RTN","LAGEN",121,0)
 F I=1:0 S I=$O(^LAH(LWL,1,ISQN,I)) Q:I<1  S ^LR(LRDFN,"CH",IDT,I)=^LAH(LWL,1,ISQN,I)
"RTN","LAGEN",122,0)
 ;
"RTN","LAGEN",123,0)
 S:'$D(LRTEC) LRTEC=$P(^VA(200,DUZ,0),U,2)
"RTN","LAGEN",124,0)
 ;
"RTN","LAGEN",125,0)
 F I=0:0 S I=$O(^LRO(68,WL,1,DT,1,LOG,4,I)) Q:I<1  I +$P(^(I,0),U,3)[LWL,'$P(^(0),U,5) S $P(^(0),U,5)=NOW,$P(^(0),U,4)=LRTEC,^LRO(68,WL,1,DT,1,"AC",NOW,LOG)="",^LRO(68,WL,1,DT,1,"AD",NOW\1,LOG)=""
"RTN","LAGEN",126,0)
 D CONTXREF
"RTN","LAGEN",127,0)
 K:$G(LOG) ^LAH(LWL,1,"C",+LOG)
"RTN","LAGEN",128,0)
 K ^LAH(LWL,1,"B",(+TRAY)_";"_(+CUP)),^LAH(LWL,1,ISQN)
"RTN","LAGEN",129,0)
 ;
"RTN","LAGEN",130,0)
 Q
"RTN","LAGEN",131,0)
 ;
"RTN","LAGEN",132,0)
 ;
"RTN","LAGEN",133,0)
CEPACK S Y=$P(Y,"\",1),YY="" F I=1:1:$L(Y) S:$A(Y,I)>32 YY=YY_$E(Y,I)
"RTN","LAGEN",134,0)
 S Y=YY
"RTN","LAGEN",135,0)
 K YY
"RTN","LAGEN",136,0)
 Q
"RTN","LAGEN",137,0)
 ;
"RTN","LAGEN",138,0)
 ;
"RTN","LAGEN",139,0)
CONTXREF ; Set up verification X-Ref for controls
"RTN","LAGEN",140,0)
 ;
"RTN","LAGEN",141,0)
 N DA,LRTEST,LRTN,I,LRGTN,X1,X,S1,J,J1
"RTN","LAGEN",142,0)
 ;
"RTN","LAGEN",143,0)
 S LRTEST=""
"RTN","LAGEN",144,0)
 F LRTN=0:0 S LRTN=$O(^LRO(68,WL,1,DT,1,LOG,4,LRTN)) Q:LRTN<1  I $D(^(LRTN,0)),+$P(^(0),U,3)[LWL,+$P(^(0),U,5) S:LRTEST'="" LRTEST=LRTEST_"^"_LRTN S:LRTEST="" LRTEST=LRTN
"RTN","LAGEN",145,0)
AC ;
"RTN","LAGEN",146,0)
 K ^TMP("LR",$J,"T")
"RTN","LAGEN",147,0)
 D ^LREXPD
"RTN","LAGEN",148,0)
 F X=0:0 S X=$O(^TMP("LR",$J,"T",X)) Q:X<1  S X1=$P(^(X),";",2) I X1,$D(^LR(LRDFN,"CH",IDT,X1)) S:'$D(^LRO(68,"AC",LRDFN,IDT,X1)) ^(X1)=""
"RTN","LAGEN",149,0)
 K ^TMP("LR",$J,"T")
"RTN","LAGEN",150,0)
 Q
"RTN","LAGEN",151,0)
 ;
"RTN","LAGEN",152,0)
 ;
"RTN","LAGEN",153,0)
UPDT(LWL,ISQN) ; Set/update date/time this entry in LAH has data added.
"RTN","LAGEN",154,0)
 ; Used by clear instrument data option to allow selective clearing based on date/time criteria.
"RTN","LAGEN",155,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",156,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",157,0)
 N LANOW,LAX
"RTN","LAGEN",158,0)
 ;
"RTN","LAGEN",159,0)
 S LANOW=$$NOW^XLFDT
"RTN","LAGEN",160,0)
 S LAX=$P($G(^LAH(LWL,1,ISQN,0)),"^",10,11)
"RTN","LAGEN",161,0)
 ;
"RTN","LAGEN",162,0)
 ; Created date/time_"^"_update date/time.
"RTN","LAGEN",163,0)
 S LAX=$S($P(LAX,"^",1):$P(LAX,"^",1),1:LANOW)_"^"_LANOW
"RTN","LAGEN",164,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",10,11)=LAX
"RTN","LAGEN",165,0)
 Q
"RTN","LAGEN",166,0)
 ;
"RTN","LAGEN",167,0)
 ;
"RTN","LAGEN",168,0)
UID(LWL,ISQN,UID) ; Set .3 node and "U" xref with accession's UID.
"RTN","LAGEN",169,0)
 ; Used to verify by unique identifier (UID).
"RTN","LAGEN",170,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",171,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",172,0)
 ;           UID = accession's UID
"RTN","LAGEN",173,0)
 ; Called from above, LRVR1, LRVRW
"RTN","LAGEN",174,0)
 ;
"RTN","LAGEN",175,0)
 N X
"RTN","LAGEN",176,0)
 ;
"RTN","LAGEN",177,0)
 S X=$P($G(^LAH(LWL,1,ISQN,.3)),"^")
"RTN","LAGEN",178,0)
 ; Kill x-ref if existing value different than new value.
"RTN","LAGEN",179,0)
 I X]"",X'=UID K ^LAH(LWL,1,"U",X,ISQN)
"RTN","LAGEN",180,0)
 ;
"RTN","LAGEN",181,0)
 S $P(^LAH(LWL,1,ISQN,.3),"^")=UID
"RTN","LAGEN",182,0)
 S ^LAH(LWL,1,"U",UID,ISQN)=""
"RTN","LAGEN",183,0)
 Q
"RTN","LAGEN",184,0)
 ;
"RTN","LAGEN",185,0)
 ;
"RTN","LAGEN",186,0)
POI(LWL,ISQN,NODE,LAID) ; Set .1 node with patient/order info
"RTN","LAGEN",187,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",188,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",189,0)
 ;          NODE = node to store data on (PID, OBR)
"RTN","LAGEN",190,0)
 ;          LAID = array containing values
"RTN","LAGEN",191,0)
 ;                 PID - "DFN","DOB","ICN","LRDFN","LRTDFN","PNM","SEX","SSN"
"RTN","LAGEN",192,0)
 ;                 OBR - "EOL","FID","ORCDT","ORDNLT","ORDP","PON","SID","PEB","PVB"
"RTN","LAGEN",193,0)
 ;
"RTN","LAGEN",194,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ARI") = assistant result interpreter (DUZ or id^last name, first name, mi [id]) (OBR-33)
"RTN","LAGEN",195,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","EOL") = enterer's ordering location
"RTN","LAGEN",196,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","FID") = filler specimen id
"RTN","LAGEN",197,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ORCDT") = order date/time (FileMan d/t)
"RTN","LAGEN",198,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ORDNLT") = order NLT (multiple separated by "^")
"RTN","LAGEN",199,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","ORDP") = ordering provider (DUZ or id^last name, first name, mi [id]) (OBR-16)
"RTN","LAGEN",200,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PEB") = placer entered by (DUZ or id^last name, first name, mi [id])
"RTN","LAGEN",201,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PON") = placer order number
"RTN","LAGEN",202,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PRI") = principle result interpreter (DUZ or id^last name, first name, mi [id]) (OBR-32)
"RTN","LAGEN",203,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","PVB") = placer verified by (DUZ or id^last name, first name, mi [id])
"RTN","LAGEN",204,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","SID") = placer specimen id
"RTN","LAGEN",205,0)
 ; ^LAH(LWL,1,ISQN,.1,"OBR","TECH") = technican (DUZ or id^last name, first name, mi [id]) (OBR-34)
"RTN","LAGEN",206,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","DFN") = patient's DFN in file #2
"RTN","LAGEN",207,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","DOB") = date of birth (FileMan d/t)
"RTN","LAGEN",208,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","ICN") = patient's ICN
"RTN","LAGEN",209,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","LRDFN") = patient's LRDFN in file #63
"RTN","LAGEN",210,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","LRTDFN") = patient's LRTDFN in file #67
"RTN","LAGEN",211,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","PNM") = patient's name
"RTN","LAGEN",212,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","SEX") = patient's sex
"RTN","LAGEN",213,0)
 ; ^LAH(LWL,1,ISQN,.1,"PID","SSN") = patient's SSN
"RTN","LAGEN",214,0)
 ;
"RTN","LAGEN",215,0)
 N LAX,LAY,LAZ
"RTN","LAGEN",216,0)
 ;
"RTN","LAGEN",217,0)
 S LAX=""
"RTN","LAGEN",218,0)
 F  S LAX=$O(LAID(LAX)) Q:LAX=""  D
"RTN","LAGEN",219,0)
 . S LAY=LAID(LAX)
"RTN","LAGEN",220,0)
 . I LAY="" Q
"RTN","LAGEN",221,0)
 . S LAZ=$G(^LAH(LWL,1,ISQN,.1,NODE,LAX))
"RTN","LAGEN",222,0)
 . I LAY=LAZ Q
"RTN","LAGEN",223,0)
 . ; Remove old data and cross-references.
"RTN","LAGEN",224,0)
 . I LAZ'="" D
"RTN","LAGEN",225,0)
 . . K ^LAH(LWL,1,ISQN,.1,NODE,LAX)
"RTN","LAGEN",226,0)
 . . I $P(LAZ,"^")]"" K ^LAH(LWL,1,"A"_LAX,$P(LAZ,"^"),ISQN)
"RTN","LAGEN",227,0)
 . ; Set new values and cross-references.
"RTN","LAGEN",228,0)
 . S ^LAH(LWL,1,ISQN,.1,NODE,LAX)=LAY
"RTN","LAGEN",229,0)
 . I $P(LAY,"^")'="" S ^LAH(LWL,1,"A"_LAX,$P(LAY,"^"),ISQN)=""
"RTN","LAGEN",230,0)
 ;
"RTN","LAGEN",231,0)
 Q
"RTN","LAGEN",232,0)
 ;
"RTN","LAGEN",233,0)
 ;
"RTN","LAGEN",234,0)
LATYP(LWL,ISQN,LAX) ; Set type of interface for this entry
"RTN","LAGEN",235,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",236,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",237,0)
 ;           LAX = type of interface
"RTN","LAGEN",238,0)
 ;
"RTN","LAGEN",239,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",12)=LAX
"RTN","LAGEN",240,0)
 Q
"RTN","LAGEN",241,0)
 ;
"RTN","LAGEN",242,0)
 ;
"RTN","LAGEN",243,0)
LAMSGID(LWL,ISQN,LAX) ; Set pointer to file #62.49 for this entry.
"RTN","LAGEN",244,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",245,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",246,0)
 ;           LAX = ien of entry in file #62.49 that is source of these results
"RTN","LAGEN",247,0)
 ;
"RTN","LAGEN",248,0)
 S $P(^LAH(LWL,1,ISQN,0),"^",13)=LAX
"RTN","LAGEN",249,0)
 S ^LAH(LWL,1,ISQN,.01,LAX)=""
"RTN","LAGEN",250,0)
 Q
"RTN","LAGEN",251,0)
 ;
"RTN","LAGEN",252,0)
 ;
"RTN","LAGEN",253,0)
METH(LWL,ISQN,LAX) ; Save instrument name/method for this entry
"RTN","LAGEN",254,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",255,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",256,0)
 ;           LAX = method text
"RTN","LAGEN",257,0)
 ;
"RTN","LAGEN",258,0)
 N X
"RTN","LAGEN",259,0)
 S X=$P(^LAH(LWL,1,ISQN,0),"^",7)
"RTN","LAGEN",260,0)
 I X'[LAX S X=LAX_";"_X,$P(^LAH(LWL,1,ISQN,0),"^",7)=X
"RTN","LAGEN",261,0)
 Q
"RTN","LAGEN",262,0)
 ;
"RTN","LAGEN",263,0)
 ;
"RTN","LAGEN",264,0)
SUBID(LWL,ISQN,LRSS,NODE,SUBID) ; Set/lookup entry for a sub-id (isolate id)
"RTN","LAGEN",265,0)
 ; Call with LWL = ien of load/list in LAH
"RTN","LAGEN",266,0)
 ;          ISQN = ien of sequence
"RTN","LAGEN",267,0)
 ;          LRSS = subscript in LAH
"RTN","LAGEN",268,0)
 ;          NODE = data node in LAH
"RTN","LAGEN",269,0)
 ;         SUBID = sub-id to lookup/use to link entry
"RTN","LAGEN",270,0)
 ;
"RTN","LAGEN",271,0)
 ; Returns ISQN2 = entry linked to sub-id
"RTN","LAGEN",272,0)
 ;
"RTN","LAGEN",273,0)
 N ISQN2
"RTN","LAGEN",274,0)
 Q:SUBID="" -1
"RTN","LAGEN",275,0)
 S ISQN2=$O(^LAH(LWL,1,ISQN,LRSS,NODE,"C",SUBID,0))
"RTN","LAGEN",276,0)
 I 'ISQN2 D
"RTN","LAGEN",277,0)
 . S ISQN2=$O(^LAH(LWL,1,ISQN,LRSS,NODE,"A"),-1)
"RTN","LAGEN",278,0)
 . S ISQN2=ISQN2+1
"RTN","LAGEN",279,0)
 . S ^LAH(LWL,1,ISQN,LRSS,NODE,"C",SUBID,ISQN2)=""
"RTN","LAGEN",280,0)
 . S ^LAH(LWL,1,ISQN,LRSS,"C",SUBID,NODE,ISQN2)=""
"RTN","LAGEN",281,0)
 Q ISQN2
"RTN","LAGEN",282,0)
 ;
"RTN","LAGEN",283,0)
LAH(LAWL,LADA,LASS,LASUB,LAP,LAVAL) ;
"RTN","LAGEN",284,0)
 ; sets data into LAH
"RTN","LAGEN",285,0)
 ; Inputs
"RTN","LAGEN",286,0)
 ;   LAWL : WorkLoad List
"RTN","LAGEN",287,0)
 ;   LADA :
"RTN","LAGEN",288,0)
 ;   LASS : SubScript
"RTN","LAGEN",289,0)
 ;  LASUB :
"RTN","LAGEN",290,0)
 ;    LAP : Data position ($Piece of node)
"RTN","LAGEN",291,0)
 ;        : if -1 will set the entire node=LAVAL (for WP type data)
"RTN","LAGEN",292,0)
 ;  LAVAL : The VALue to set
"RTN","LAGEN",293,0)
 N NODE
"RTN","LAGEN",294,0)
 I LAVAL="@" S LAVAL=""
"RTN","LAGEN",295,0)
 I LAVAL="""""" S LAVAL=""
"RTN","LAGEN",296,0)
 I LAP'=-1 I LAVAL["^" S LAVAL=$TR(LAVAL,"^"," ")
"RTN","LAGEN",297,0)
 S LAWL=+$G(LAWL)
"RTN","LAGEN",298,0)
 S LADA=+$G(LADA)
"RTN","LAGEN",299,0)
 S LASS=$G(LASS)
"RTN","LAGEN",300,0)
 S LASUB=$G(LASUB)
"RTN","LAGEN",301,0)
 S NODE="^LAH(LAWL,1,LADA,"""_LASS_""","
"RTN","LAGEN",302,0)
 S NODE=NODE_LASUB
"RTN","LAGEN",303,0)
 S:$E(NODE,$L(NODE),$L(NODE))'=")" NODE=NODE_")"
"RTN","LAGEN",304,0)
 I LAP>0 S $P(@NODE,"^",+$G(LAP))=LAVAL
"RTN","LAGEN",305,0)
 I LAP=-1 S @NODE=LAVAL
"RTN","LAGEN",306,0)
 Q
"RTN","LAHWATCH")
0^102^B13257024
"RTN","LAHWATCH",1,0)
LAHWATCH ;DALOI/JMC - WATCH DATA IN ^LAH GLOBAL ;Sep 12, 2008
"RTN","LAHWATCH",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LAHWATCH",3,0)
 ;
"RTN","LAHWATCH",4,0)
 ;
"RTN","LAHWATCH",5,0)
IN ;
"RTN","LAHWATCH",6,0)
 N %,LREND,LRWL,LREF,LRINST,LPREF,LRMSK,LRHDR,LRNUM,LRNOP,X,Y
"RTN","LAHWATCH",7,0)
 S U="^"
"RTN","LAHWATCH",8,0)
 W !!!,"This routine will allow you to look at the verifiable data in the ^LAH GLOBAL  ",!,"for a specific instrument",!!
"RTN","LAHWATCH",9,0)
 S LREND=0
"RTN","LAHWATCH",10,0)
 F  D FIND Q:LREND
"RTN","LAHWATCH",11,0)
 ;
"RTN","LAHWATCH",12,0)
 Q
"RTN","LAHWATCH",13,0)
 ;
"RTN","LAHWATCH",14,0)
 ;
"RTN","LAHWATCH",15,0)
FIND ;
"RTN","LAHWATCH",16,0)
 N DIC
"RTN","LAHWATCH",17,0)
 S DIC="^LRO(68.2,",DIC(0)="AEMQ" D ^DIC
"RTN","LAHWATCH",18,0)
 I Y<1 S LREND=1 Q
"RTN","LAHWATCH",19,0)
 S LRWL=+Y,LRINST=$P(Y,"^",2)
"RTN","LAHWATCH",20,0)
 I '$O(^LAH(LRWL,1,0)) W !!?5,"No data for ",LRINST,!! Q
"RTN","LAHWATCH",21,0)
 ;
"RTN","LAHWATCH",22,0)
 ;
"RTN","LAHWATCH",23,0)
EN S LREF="^LAH("_LRWL_")",LRMSK=$$GLBR^LRAFUNC(LREF),LRHDR=1
"RTN","LAHWATCH",24,0)
 ;
"RTN","LAHWATCH",25,0)
 ;*** Query user for Listing Format ***
"RTN","LAHWATCH",26,0)
 ;*** Add logic so user can see either ^LAH listing or the interpreted values ***
"RTN","LAHWATCH",27,0)
 ;
"RTN","LAHWATCH",28,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LAHWATCH",29,0)
 S DIR(0)="SO^1:Non interpreted LAH global;2:Interpreted values",DIR("A")="Select a Listing Format"
"RTN","LAHWATCH",30,0)
 D ^DIR
"RTN","LAHWATCH",31,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LAHWATCH",32,0)
 I Y=1 D STRT1 Q
"RTN","LAHWATCH",33,0)
 I Y=2 D STRT2 Q
"RTN","LAHWATCH",34,0)
 ;
"RTN","LAHWATCH",35,0)
 Q
"RTN","LAHWATCH",36,0)
 ;
"RTN","LAHWATCH",37,0)
 ;
"RTN","LAHWATCH",38,0)
STRT1 ;
"RTN","LAHWATCH",39,0)
 I 'LRWL W !!,?10,"No load/worklist defined for this instrument ",!!,$C(7) Q
"RTN","LAHWATCH",40,0)
 W !!,"I am about to display the data in ^LAH(",LRWL,")",!,?10,"You may exit at any time by entering the ""^""." H 2
"RTN","LAHWATCH",41,0)
 ;
"RTN","LAHWATCH",42,0)
 D CHK
"RTN","LAHWATCH",43,0)
 I $G(LRNOP) Q
"RTN","LAHWATCH",44,0)
 ;
"RTN","LAHWATCH",45,0)
ALOOP ;
"RTN","LAHWATCH",46,0)
 N DIR,DIRUT,DTOUT,DUOUT,LREND,X,Y
"RTN","LAHWATCH",47,0)
 W @IOF S LREND=0
"RTN","LAHWATCH",48,0)
 F  S LPREF=$S('(LREF[""""):LREF,1:LPREF),LREF=$Q(@(LREF)) Q:'($E(LREF,1,$L(LRMSK))=LRMSK)!(LREF="")!(LREND)  D
"RTN","LAHWATCH",49,0)
 . W !,LREF," = ",@LREF
"RTN","LAHWATCH",50,0)
 . I $Y>21 S DIR(0)="E",LRHDR=1 D ^DIR S LREND=$D(DUOUT) Q:LREND  W @IOF
"RTN","LAHWATCH",51,0)
 ;
"RTN","LAHWATCH",52,0)
 Q
"RTN","LAHWATCH",53,0)
 ;
"RTN","LAHWATCH",54,0)
 ;
"RTN","LAHWATCH",55,0)
STRT2 ;*** Logic to list interpreted ^LAH data ***
"RTN","LAHWATCH",56,0)
 ;
"RTN","LAHWATCH",57,0)
 D CHK
"RTN","LAHWATCH",58,0)
 I $G(LRNOP) Q
"RTN","LAHWATCH",59,0)
 ;
"RTN","LAHWATCH",60,0)
BLOOP ;
"RTN","LAHWATCH",61,0)
 N DIR,DIRUT,DTOUT,DUOUT,LREND,X,Y
"RTN","LAHWATCH",62,0)
 W @IOF
"RTN","LAHWATCH",63,0)
 S LREND=0
"RTN","LAHWATCH",64,0)
 F  S LPREF=$S('(LREF[""""):LREF,1:LPREF),LREF=$Q(@(LREF)) Q:'($E(LREF,1,$L(LRMSK))=LRMSK)!(LREF="")!(LREND)!($P($P(LREF,"(",2),",",3)="B")  D
"RTN","LAHWATCH",65,0)
 . I +$P($P(LREF,"(",2),",",4)=0 W !!?5,"Accession # ",$P(@(LREF),U,5)
"RTN","LAHWATCH",66,0)
 . I LRHDR=1 W !,"Test",?25,"Value" S LRHDR=0
"RTN","LAHWATCH",67,0)
 . I $P($P($P(LREF,"(",2),",",6),")",1)=0 D
"RTN","LAHWATCH",68,0)
 . . W !?5,"Organism:  ",$P($G(^LAB(61.2,+@LREF,0)),U)
"RTN","LAHWATCH",69,0)
 . . I '$D(^LAB(61.2,+@LREF,0)) W !,"***Organism entry points to missing entry # ",+@LREF," in file 61.2 (ETIOLOGY)***"
"RTN","LAHWATCH",70,0)
 . I +$P($P(LREF,"(",2),",",6)>0 S LRNUM=+$P($Q(^LAB(62.06,"AD",+$P($P(LREF,"(",2),",",6))),",",4) I $D(^LAB(62.06,LRNUM,0)) W !,$P(^(0),"^"),?25,@LREF
"RTN","LAHWATCH",71,0)
 . I +$P($P(LREF,"(",2),",",4)>0,$P($P(LREF,"(",2),",",4)[")",$D(^DD(63.04,+$P($P(LREF,"(",2),",",4),0)) W !,$P(^DD(63.04,+$P($P(LREF,"(",2),",",4),0),"^"),?25,+@LREF
"RTN","LAHWATCH",72,0)
 . I $Y>21 S DIR(0)="E",LRHDR=1 D ^DIR S LREND=$D(DUOUT) Q:LREND  W @IOF Q
"RTN","LAHWATCH",73,0)
 ;
"RTN","LAHWATCH",74,0)
 Q
"RTN","LAHWATCH",75,0)
 ;
"RTN","LAHWATCH",76,0)
 ;
"RTN","LAHWATCH",77,0)
CHK ;
"RTN","LAHWATCH",78,0)
 I '$G(LRWL) W !!!,?20,"This instrument has no pointer to ^LAH!",!!! S LRNOP=1 Q
"RTN","LAHWATCH",79,0)
 I '$D(^LAH(LRWL)) W !!!,?20,"No data in ^LAH for this instrument!",!!! S LRNOP=1 Q
"RTN","LAHWATCH",80,0)
 Q
"RTN","LAMIAUT3")
0^106^B16090565
"RTN","LAMIAUT3",1,0)
LAMIAUT3 ;DALOI/JMC -  MICRO DISPLAY ANTIBIOTICS FOR VERIFY ;06/04/12  16:23
"RTN","LAMIAUT3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LAMIAUT3",3,0)
 ;
"RTN","LAMIAUT3",4,0)
 ;
"RTN","LAMIAUT3",5,0)
BACT ; From LAMIAUT1, LAMIAUT4, LAMIAUT6, LAMIVTL4
"RTN","LAMIAUT3",6,0)
 ;
"RTN","LAMIAUT3",7,0)
 N A,B,LR1PASS,LR2ORMOR,LRAO,LRABCNT,LRACNT,LRBN,LRBUG,LRCOMTAB,LRINT,LRRES
"RTN","LAMIAUT3",8,0)
 S LR2ORMOR=1,LREND=0 Q:+$O(^LR(LRDFN,"MI",LRIDT,3,0))<1
"RTN","LAMIAUT3",9,0)
 D BUGHDR
"RTN","LAMIAUT3",10,0)
 ;
"RTN","LAMIAUT3",11,0)
 S LRBUG=0
"RTN","LAMIAUT3",12,0)
 F A=1:1 S LRBUG=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D
"RTN","LAMIAUT3",13,0)
 . I +$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,2))'["2." S A=A-1 Q
"RTN","LAMIAUT3",14,0)
 . D CHECK
"RTN","LAMIAUT3",15,0)
 ;
"RTN","LAMIAUT3",16,0)
 S (LRABCNT,LRBN)=0
"RTN","LAMIAUT3",17,0)
 F  S LRBN=+$O(LRRES(LRBN)) Q:LRBN<1  S LRABCNT=LRABCNT+1
"RTN","LAMIAUT3",18,0)
 I 'LRABCNT W !!?10,"There are NO antibiotics in the patient's file",!! Q
"RTN","LAMIAUT3",19,0)
 Q:LREND
"RTN","LAMIAUT3",20,0)
 ;
"RTN","LAMIAUT3",21,0)
 S LRCOMTAB=$S(LRFMT="B":A*13+17,1:A*5+17)
"RTN","LAMIAUT3",22,0)
 S (LRAO,LREND,LRACNT)=0
"RTN","LAMIAUT3",23,0)
 F  S LRAO=$O(^LAB(62.06,"AO",LRAO)) Q:LRAO<.001  D  Q:LREND
"RTN","LAMIAUT3",24,0)
 . S B=$O(^LAB(62.06,"AO",LRAO,0))
"RTN","LAMIAUT3",25,0)
 . I B>0,$D(^LAB(62.06,B,0)) D  Q:LREND
"RTN","LAMIAUT3",26,0)
 . . D AB
"RTN","LAMIAUT3",27,0)
 . . I $Y>(IOSL-3) D WAIT
"RTN","LAMIAUT3",28,0)
 ;
"RTN","LAMIAUT3",29,0)
 W !
"RTN","LAMIAUT3",30,0)
 ;
"RTN","LAMIAUT3",31,0)
 Q
"RTN","LAMIAUT3",32,0)
 ;
"RTN","LAMIAUT3",33,0)
 ;
"RTN","LAMIAUT3",34,0)
CHECK ;
"RTN","LAMIAUT3",35,0)
 ;
"RTN","LAMIAUT3",36,0)
 N LRBN,LR1PASS,LRFLAG,B,B1,B2,B3
"RTN","LAMIAUT3",37,0)
 ;
"RTN","LAMIAUT3",38,0)
 S LRFLAG=0
"RTN","LAMIAUT3",39,0)
 F LRBN=2:0 S LRBN=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,LRBN)) Q:$E(LRBN,1,2)'="2."  D
"RTN","LAMIAUT3",40,0)
 . S B=^LR(LRDFN,"MI",LRIDT,3,LRBUG,LRBN),B1=$P(B,U),B2=$P(B,U,2),B3=$P(B,U,3)
"RTN","LAMIAUT3",41,0)
 . I B1'="",$D(^LAB(62.06,"AI",LRBN,B1)) D FIRST
"RTN","LAMIAUT3",42,0)
 ;
"RTN","LAMIAUT3",43,0)
 S LRBN=2
"RTN","LAMIAUT3",44,0)
 F  S LRBN=+$O(LR1PASS(LRBN)) Q:LRBN<1  S B=LR1PASS(LRBN),B1=$P(B,U),B2=$P(B,U,2),B3=$P(B,U,3) D LAB
"RTN","LAMIAUT3",45,0)
 ;
"RTN","LAMIAUT3",46,0)
 Q
"RTN","LAMIAUT3",47,0)
 ;
"RTN","LAMIAUT3",48,0)
 ;
"RTN","LAMIAUT3",49,0)
FIRST ;
"RTN","LAMIAUT3",50,0)
 S B2=$S(B2]"":B2,1:^LAB(62.06,"AI",LRBN,B1))
"RTN","LAMIAUT3",51,0)
 S:$E(B2)'="R"&("A"[B3) LRFLAG=1
"RTN","LAMIAUT3",52,0)
 S LR1PASS(LRBN)=B1_U_B2_U_B3,^LR(LRDFN,"MI",LRIDT,3,LRBUG,LRBN)=LR1PASS(LRBN)
"RTN","LAMIAUT3",53,0)
 Q
"RTN","LAMIAUT3",54,0)
 ;
"RTN","LAMIAUT3",55,0)
 ;
"RTN","LAMIAUT3",56,0)
LAB ;
"RTN","LAMIAUT3",57,0)
 I $D(LRLABKY),'$D(LRWRDVEW) D  Q
"RTN","LAMIAUT3",58,0)
 . N X
"RTN","LAMIAUT3",59,0)
 . S X=$S(B3="N"!(B3="R"&LRFLAG):B1_"*",1:B1)
"RTN","LAMIAUT3",60,0)
 . S $P(LRRES(LRBN),U,A)=X
"RTN","LAMIAUT3",61,0)
 . S X=$S(B3="N"!(B3="R"&LRFLAG):B2_"*",1:B2)
"RTN","LAMIAUT3",62,0)
 . S $P(LRINT(LRBN),U,A)=X
"RTN","LAMIAUT3",63,0)
 ;
"RTN","LAMIAUT3",64,0)
 I B3=""!(B3="A")!(B3="R"&'LRFLAG) S $P(LRRES(LRBN),U,A)=B1,$P(LRINT(LRBN),U,A)=B2
"RTN","LAMIAUT3",65,0)
 ;
"RTN","LAMIAUT3",66,0)
 Q
"RTN","LAMIAUT3",67,0)
 ;
"RTN","LAMIAUT3",68,0)
 ;
"RTN","LAMIAUT3",69,0)
AB ;
"RTN","LAMIAUT3",70,0)
 ; Check if entry is for a bacterial drug, not an AFB drug.
"RTN","LAMIAUT3",71,0)
 S J=$P(^LAB(62.06,B,0),U,2)
"RTN","LAMIAUT3",72,0)
 I J="" Q
"RTN","LAMIAUT3",73,0)
 I $D(LRINT(J)),LRINT(J)'?."^" W !,$E($P(^LAB(62.06,B,0),U),1,14) S LRDCOM=$P(^(0),U,3),LRACNT=LRACNT+1 D SIR
"RTN","LAMIAUT3",74,0)
 Q
"RTN","LAMIAUT3",75,0)
 ;
"RTN","LAMIAUT3",76,0)
 ;
"RTN","LAMIAUT3",77,0)
BUGHDR ;
"RTN","LAMIAUT3",78,0)
 N A,J,LRBUG,LRORG,LRORGCOM,LRX
"RTN","LAMIAUT3",79,0)
 W @IOF
"RTN","LAMIAUT3",80,0)
 W !?5,PNM,"  SSN: ",SSN,!,LRACCN,"  ",$P(^LAB(62,LRSAMP,0),U),"  ",$P(^LAB(61,LRSPEC,0),U),!
"RTN","LAMIAUT3",81,0)
 ;
"RTN","LAMIAUT3",82,0)
 S LRBUG=0
"RTN","LAMIAUT3",83,0)
 F A=0:1 S LRBUG=+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG)) Q:LRBUG<1  D
"RTN","LAMIAUT3",84,0)
 . S LRX=$G(^LR(LRDFN,"MI",LRIDT,3,LRBUG,0))
"RTN","LAMIAUT3",85,0)
 . I LRX="" Q
"RTN","LAMIAUT3",86,0)
 . S LRORG=$P(LRX,U),LRORGCOM=$P(LRX,U,2),LRORG=$P(^LAB(61.2,LRORG,0),U)
"RTN","LAMIAUT3",87,0)
 . S:+$O(^LR(LRDFN,"MI",LRIDT,3,LRBUG,2))'["2." A=A-1 I +$O(^(2))["2." D ORG
"RTN","LAMIAUT3",88,0)
 I LRFMT="B" W ! F J=1:1:A W ?J-1*13+15,":"
"RTN","LAMIAUT3",89,0)
 W !
"RTN","LAMIAUT3",90,0)
 F J=1:1:A W:LRFMT'="B" ?(J*5+10),":" I LRFMT="B" W ?J-1*13+15,"SUSC  INTP"
"RTN","LAMIAUT3",91,0)
 Q
"RTN","LAMIAUT3",92,0)
 ;
"RTN","LAMIAUT3",93,0)
 ;
"RTN","LAMIAUT3",94,0)
ORG ;
"RTN","LAMIAUT3",95,0)
 N J
"RTN","LAMIAUT3",96,0)
 W !
"RTN","LAMIAUT3",97,0)
 I A>0 F J=1:1:A W ?($S(LRFMT="B":J-1*13+15,1:J*5+10)),":"
"RTN","LAMIAUT3",98,0)
 W ?($S(LRFMT="B":A*13+15,1:A*5+15)),$S(LR2ORMOR:LRBUG_". ",1:""),LRORG,$S(LRORGCOM'="":" ("_LRORGCOM_")",1:"")
"RTN","LAMIAUT3",99,0)
 Q
"RTN","LAMIAUT3",100,0)
 ;
"RTN","LAMIAUT3",101,0)
 ;
"RTN","LAMIAUT3",102,0)
SIR ;
"RTN","LAMIAUT3",103,0)
 ;
"RTN","LAMIAUT3",104,0)
 N II
"RTN","LAMIAUT3",105,0)
 F II=1:1:10 D:$P(LRINT(J),U,II,10)="" DCOM Q:$P(LRINT(J),U,II,10)=""  D
"RTN","LAMIAUT3",106,0)
 . I LRFMT'="B" W ?(II*5+10),$S(LRFMT="I":$P(LRINT(J),U,II),1:$P(LRRES(J),U,II)) Q
"RTN","LAMIAUT3",107,0)
 . W ?(II-1*13+15),$S($D(LRRES(J)):$P(LRRES(J),U,II),1:""),?(II-1*13+21),$P(LRINT(J),U,II),"  "
"RTN","LAMIAUT3",108,0)
 Q
"RTN","LAMIAUT3",109,0)
 ;
"RTN","LAMIAUT3",110,0)
 ;
"RTN","LAMIAUT3",111,0)
DCOM ;
"RTN","LAMIAUT3",112,0)
 ;
"RTN","LAMIAUT3",113,0)
 N A,K
"RTN","LAMIAUT3",114,0)
 W ?LRCOMTAB,LRDCOM
"RTN","LAMIAUT3",115,0)
 I $D(LRDCOM(J)) D
"RTN","LAMIAUT3",116,0)
 . S (A,K)=0
"RTN","LAMIAUT3",117,0)
 . F  S A=+$O(LRDCOM(J,A)) Q:A<1  W:'('K&(LRDCOM="")) ! W ?LRCOMTAB,LRDCOM(J,A) S K=1
"RTN","LAMIAUT3",118,0)
 Q
"RTN","LAMIAUT3",119,0)
 ;
"RTN","LAMIAUT3",120,0)
 ;
"RTN","LAMIAUT3",121,0)
WAIT ; End of page/continue prompt
"RTN","LAMIAUT3",122,0)
 N DIR,DIROUT,DIRUT,STOUT,X,Y
"RTN","LAMIAUT3",123,0)
 ;
"RTN","LAMIAUT3",124,0)
 S DIR(0)="E"
"RTN","LAMIAUT3",125,0)
 D ^DIR
"RTN","LAMIAUT3",126,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LAMIAUT3",127,0)
 ;
"RTN","LAMIAUT3",128,0)
 W @IOF D BUGHDR
"RTN","LAMIAUT3",129,0)
 ;
"RTN","LAMIAUT3",130,0)
 Q
"RTN","LAWATCH")
0^103^B14822305
"RTN","LAWATCH",1,0)
LAWATCH ;DALOI/JMC - WATCH DATA IN ^LA GLOBAL ;12/07/11  12:18
"RTN","LAWATCH",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74**;Sep 27, 1994;Build 229
"RTN","LAWATCH",3,0)
 ;
"RTN","LAWATCH",4,0)
 ;
"RTN","LAWATCH",5,0)
IN ; Query user for ^LA or ^LAH
"RTN","LAWATCH",6,0)
 ;
"RTN","LAWATCH",7,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LAWATCH",8,0)
 D  Q:$D(DIRUT)
"RTN","LAWATCH",9,0)
 . K DIR
"RTN","LAWATCH",10,0)
 . S DIR(0)="SO^1:RAW DATA IN LA GLOBAL;2:VERIFIABLE DATA IN LAH GLOBAL",DIR("A")="Select a File to watch"
"RTN","LAWATCH",11,0)
 . D ^DIR
"RTN","LAWATCH",12,0)
 . I $D(DIRUT) Q
"RTN","LAWATCH",13,0)
 . I Y=1 D START Q
"RTN","LAWATCH",14,0)
 . I Y=2 D ^LAHWATCH
"RTN","LAWATCH",15,0)
 Q
"RTN","LAWATCH",16,0)
 ;
"RTN","LAWATCH",17,0)
 ;
"RTN","LAWATCH",18,0)
START ;
"RTN","LAWATCH",19,0)
 S U="^" W !,"THIS ROUTINE WILL ALLOW YOU TO WATCH THE ACCUMULATION",!," OF DATA IN THE ^LA GLOBAL"
"RTN","LAWATCH",20,0)
 N DIC
"RTN","LAWATCH",21,0)
 S DIC="^LAB(62.4,",DIC(0)="AEMQ" D ^DIC G QUIT:Y<1 S LRTSK=+Y,LRINST=$P(Y,"^",2)
"RTN","LAWATCH",22,0)
 ;
"RTN","LAWATCH",23,0)
DOWN ;
"RTN","LAWATCH",24,0)
 W !?7,"Do you wish to See 'Download data' " S %=1 D YN^DICN G QUIT:%<1 I %=1 D LA0
"RTN","LAWATCH",25,0)
 ;
"RTN","LAWATCH",26,0)
 ;
"RTN","LAWATCH",27,0)
DATA ;
"RTN","LAWATCH",28,0)
 W !!?7,"Do you wish to look at 'Upload' data nodes " S %=1 D YN^DICN G QUIT:%<1!(%=2) S LANODE="I"
"RTN","LAWATCH",29,0)
 ;
"RTN","LAWATCH",30,0)
 ;
"RTN","LAWATCH",31,0)
LA1 G LA2:$D(^LA(LRTSK,"I",0)),NOTSYS:LRTSK#10=1,NOSYS:$D(^LA(+(LRTSK-1\10_1),"I",0))[0
"RTN","LAWATCH",32,0)
 W !?3,"There isn't any data there! Should I start saving the data" S %=2 D YN^DICN G QUIT:%=2!(%=-1) W !,"This will prevent the automatic processing of the data." G LA1:%=0
"RTN","LAWATCH",33,0)
 I '$D(^LA(LRTSK,"I",0))#2 S ^LA(LRTSK,"I")=0,^("I",0)=0 W !!?10,$C(7),"YOU MUST MANUALLY START THE ( "_$P(^LAB(62.4,LRTSK,0),U,3)_") PROGRAM " G QUIT
"RTN","LAWATCH",34,0)
 ;
"RTN","LAWATCH",35,0)
LA2 ;
"RTN","LAWATCH",36,0)
 R !?5,"Begin with what number ? ",I7:DTIME Q:'$T!(I7="^")
"RTN","LAWATCH",37,0)
 S I7=+I7 I '$D(^LA(LRTSK,LANODE,I7)) W $C(7),!?10,I7," DOES NOT EXIST ",! G LA2
"RTN","LAWATCH",38,0)
 ;
"RTN","LAWATCH",39,0)
 ;
"RTN","LAWATCH",40,0)
LA3 ;
"RTN","LAWATCH",41,0)
 W !!!,LRINST,!," Number of Records: ",$S($D(^LA(LRTSK,LANODE))#2:^(LANODE),1:"??"),?$X+5,"Processed Records: ",$S($D(^LA(LRTSK,LANODE,0))#2:^(0),1:"??") W:$D(^LA("LOCK",LRTSK)) " Active flag SET."
"RTN","LAWATCH",42,0)
 R !!?7,"To stop data display enter '^'  ENTER RETURN TO CONTINUE ",X:DTIME G QUIT:X="^"
"RTN","LAWATCH",43,0)
 S I=I7-.1 F I=I7-.1:0 S I=$O(^LA(LRTSK,LANODE,I)) Q:I=""  Q:('$D(^LA(LRTSK,LANODE,I)))  W !,"^LA(",LRTSK,",",LANODE,",",I,")=",^(I) S I7=I R X:.01 I X="^" Q
"RTN","LAWATCH",44,0)
 R !!,"PRESS RETURN TO CONTINUE, ENTER '^' TO STOP. ",X:DTIME G END:'$T,LA2:X=""
"RTN","LAWATCH",45,0)
 Q:LANODE="O"
"RTN","LAWATCH",46,0)
 ;
"RTN","LAWATCH",47,0)
 ;
"RTN","LAWATCH",48,0)
END ;
"RTN","LAWATCH",49,0)
 G QUIT:LRTSK#10=1
"RTN","LAWATCH",50,0)
 W !,"CLEAR INSTRUMENT ",LRINST," DATE IN ^LA(",LRTSK,") FIRST" S %=2 D YN^DICN I %=1 K ^LA(LRTSK)
"RTN","LAWATCH",51,0)
 I %<1 S XQH="LRHC LRWATCH" D EN^XQH G END
"RTN","LAWATCH",52,0)
 W:%'=1 !,"Be sure to startup the instrument routine from the menu.",!?10,"It will NOT start on its own now."
"RTN","LAWATCH",53,0)
QUIT ;
"RTN","LAWATCH",54,0)
 K DIC,T,LANODE,%,ER,I7,LRTSK
"RTN","LAWATCH",55,0)
 Q
"RTN","LAWATCH",56,0)
 ;
"RTN","LAWATCH",57,0)
 ;
"RTN","LAWATCH",58,0)
NOTSYS W !!,"You can't start saving data for a interface routine." G QUIT
"RTN","LAWATCH",59,0)
 ;
"RTN","LAWATCH",60,0)
 ;
"RTN","LAWATCH",61,0)
NOSYS W !!,"The LAB routine for the instrument isn't running so there",!,"is no need to continue as data will never arrive." G QUIT
"RTN","LAWATCH",62,0)
 ;
"RTN","LAWATCH",63,0)
 ;
"RTN","LAWATCH",64,0)
LA0 ; View down load data for instrument
"RTN","LAWATCH",65,0)
 I '$D(^LA(LRTSK,"O")) W !?7,"There is no down load data " R !," PRESS RETURN TO CONTINUE ",X:DTIME Q
"RTN","LAWATCH",66,0)
 S LANODE="O" D LA2
"RTN","LAWATCH",67,0)
 ;
"RTN","LAWATCH",68,0)
 ;
"RTN","LAWATCH",69,0)
DONE Q
"TEMP","LA6247",0)
1770
"TEMP","LA6247",1,0)
GRAM STAIN^MI^9194
"TEMP","LA6247",1,1,1,0)
664-3^LN^1^^1
"TEMP","LA6247",1,1,5,0)
14358-6^LN^1^^1
"TEMP","LA6247",1,1,6,0)
21021-1^LN^1^^1
"TEMP","LA6247",1,1,7,0)
14357-8^LN^1^^1
"TEMP","LA6247",1,1,8,0)
6464-2^LN^1^^1
"TEMP","LA6247",1,1,9,0)
21022-9^LN^1^^1
"TEMP","LA6247",1,1,10,0)
14365-1^LN^1^^1
"TEMP","LA6247",1,1,11,0)
14364-4^LN^1^^1
"TEMP","LA6247",1,1,12,0)
27112-2^LN^1^^1
"TEMP","LA6247",1,1,13,0)
48712-4^LN^1^^1
"TEMP","LA6247",1,1,14,0)
6467-5^LN^1^^1
"TEMP","LA6247",1,1,15,0)
10856-3^LN^1^^1
"TEMP","LA6247",1,1,16,0)
32026-7^LN^1^^1
"TEMP","LA6247",1,1,17,0)
14360-2^LN^1^^1
"TEMP","LA6247",1,1,18,0)
14359-4^LN^1^^1
"TEMP","LA6247",1,1,19,0)
643-7^LN^1^^1
"TEMP","LA6247",1,1,20,0)
14363-6^LN^1^^1
"TEMP","LA6247",1,1,21,0)
648-6^LN^1^^1
"TEMP","LA6247",1,1,22,0)
649-4^LN^1^^1
"TEMP","LA6247",1,1,23,0)
14362-8^LN^1^^1
"TEMP","LA6247",1,1,24,0)
6664-7^LN^1^^1
"TEMP","LA6247",1,1,25,0)
653-6^LN^1^^1
"TEMP","LA6247",1,1,26,0)
6474-1^LN^1^^1
"TEMP","LA6247",1,1,27,0)
14361-0^LN^1^^1
"TEMP","LA6247",1,1,28,0)
10357-2^LN^1^^1
"TEMP","LA6247",3,0)
BACTERIA^MI^9189
"TEMP","LA6247",3,1,1,0)
595-9^LN^1^^1
"TEMP","LA6247",3,1,2,0)
11475-1^LN^1^^1
"TEMP","LA6247",3,1,3,0)
23506009^SCT^2^6^1
"TEMP","LA6247",3,1,4,0)
551-2^LN^1^^1
"TEMP","LA6247",3,1,5,0)
552-0^LN^1^^1
"TEMP","LA6247",3,1,6,0)
553-8^LN^1^^1
"TEMP","LA6247",3,1,7,0)
554-6^LN^1^^1
"TEMP","LA6247",3,1,8,0)
555-3^LN^1^^1
"TEMP","LA6247",3,1,9,0)
556-1^LN^1^^1
"TEMP","LA6247",3,1,10,0)
557-9^LN^1^^1
"TEMP","LA6247",3,1,11,0)
558-7^LN^1^^1
"TEMP","LA6247",3,1,12,0)
559-5^LN^1^^1
"TEMP","LA6247",3,1,13,0)
560-3^LN^1^^1
"TEMP","LA6247",3,1,14,0)
567-8^LN^1^^1
"TEMP","LA6247",3,1,15,0)
581-9^LN^1^^1
"TEMP","LA6247",3,1,16,0)
582-7^LN^1^^1
"TEMP","LA6247",3,1,17,0)
583-5^LN^1^^1
"TEMP","LA6247",3,1,18,0)
584-3^LN^1^^1
"TEMP","LA6247",3,1,19,0)
585-0^LN^1^^1
"TEMP","LA6247",3,1,20,0)
586-8^LN^1^^1
"TEMP","LA6247",3,1,21,0)
596-7^LN^1^^1
"TEMP","LA6247",3,1,22,0)
597-5^LN^1^^1
"TEMP","LA6247",3,1,23,0)
598-3^LN^1^^1
"TEMP","LA6247",3,1,24,0)
599-1^LN^1^^1
"TEMP","LA6247",3,1,25,0)
600-7^LN^1^^1
"TEMP","LA6247",3,1,26,0)
602-3^LN^1^^1
"TEMP","LA6247",3,1,27,0)
603-1^LN^1^^1
"TEMP","LA6247",3,1,28,0)
604-9^LN^1^^1
"TEMP","LA6247",3,1,29,0)
605-6^LN^1^^1
"TEMP","LA6247",3,1,30,0)
606-4^LN^1^^1
"TEMP","LA6247",3,1,31,0)
607-2^LN^1^^1
"TEMP","LA6247",3,1,32,0)
608-0^LN^1^^1
"TEMP","LA6247",3,1,33,0)
609-8^LN^1^^1
"TEMP","LA6247",3,1,34,0)
610-6^LN^1^^1
"TEMP","LA6247",3,1,35,0)
611-4^LN^1^^1
"TEMP","LA6247",3,1,36,0)
616-3^LN^1^^1
"TEMP","LA6247",3,1,37,0)
617-1^LN^1^^1
"TEMP","LA6247",3,1,38,0)
618-9^LN^1^^1
"TEMP","LA6247",3,1,39,0)
619-7^LN^1^^1
"TEMP","LA6247",3,1,40,0)
620-5^LN^1^^1
"TEMP","LA6247",3,1,41,0)
621-3^LN^1^^1
"TEMP","LA6247",3,1,42,0)
622-1^LN^1^^1
"TEMP","LA6247",3,1,43,0)
624-7^LN^1^^1
"TEMP","LA6247",3,1,44,0)
625-4^LN^1^^1
"TEMP","LA6247",3,1,45,0)
626-2^LN^1^^1
"TEMP","LA6247",3,1,46,0)
627-0^LN^1^^1
"TEMP","LA6247",3,1,47,0)
628-8^LN^1^^1
"TEMP","LA6247",3,1,48,0)
629-6^LN^1^^1
"TEMP","LA6247",3,1,49,0)
630-4^LN^1^^1
"TEMP","LA6247",3,1,50,0)
631-2^LN^1^^1
"TEMP","LA6247",3,1,51,0)
632-0^LN^1^^1
"TEMP","LA6247",3,1,52,0)
633-8^LN^1^^1
"TEMP","LA6247",3,1,53,0)
634-6^LN^1^^1
"TEMP","LA6247",3,1,54,0)
635-3^LN^1^^1
"TEMP","LA6247",3,1,55,0)
636-1^LN^1^^1
"TEMP","LA6247",3,1,56,0)
683-3^LN^1^^1
"TEMP","LA6247",3,1,57,0)
684-1^LN^1^^1
"TEMP","LA6247",3,1,58,0)
685-8^LN^1^^1
"TEMP","LA6247",3,1,59,0)
686-6^LN^1^^1
"TEMP","LA6247",3,1,60,0)
687-4^LN^1^^1
"TEMP","LA6247",3,1,61,0)
701-3^LN^1^^1
"TEMP","LA6247",3,1,62,0)
6317-2^LN^1^^1
"TEMP","LA6247",3,1,63,0)
6323-0^LN^1^^1
"TEMP","LA6247",3,1,64,0)
6330-5^LN^1^^1
"TEMP","LA6247",3,1,65,0)
6331-3^LN^1^^1
"TEMP","LA6247",3,1,66,0)
6332-1^LN^1^^1
"TEMP","LA6247",3,1,67,0)
6335-4^LN^1^^1
"TEMP","LA6247",3,1,68,0)
6348-7^LN^1^^1
"TEMP","LA6247",3,1,69,0)
6459-2^LN^1^^1
"TEMP","LA6247",3,1,70,0)
6460-0^LN^1^^1
"TEMP","LA6247",3,1,71,0)
6461-8^LN^1^^1
"TEMP","LA6247",3,1,72,0)
6462-6^LN^1^^1
"TEMP","LA6247",3,1,73,0)
6463-4^LN^1^^1
"TEMP","LA6247",3,1,74,0)
6486-5^LN^1^^1
"TEMP","LA6247",3,1,75,0)
6596-1^LN^1^^1
"TEMP","LA6247",3,1,76,0)
6600-1^LN^1^^1
"TEMP","LA6247",3,1,77,0)
6609-2^LN^1^^1
"TEMP","LA6247",3,1,78,0)
9822-8^LN^1^^1
"TEMP","LA6247",3,1,79,0)
10352-3^LN^1^^1
"TEMP","LA6247",3,1,80,0)
10353-1^LN^1^^1
"TEMP","LA6247",3,1,81,0)
10354-9^LN^1^^1
"TEMP","LA6247",3,1,82,0)
10639-3^LN^1^^1
"TEMP","LA6247",3,1,83,0)
10694-8^LN^1^^1
"TEMP","LA6247",3,1,84,0)
11261-5^LN^1^^1
"TEMP","LA6247",3,1,85,0)
12276-2^LN^1^^1
"TEMP","LA6247",3,1,86,0)
12281-2^LN^1^^1
"TEMP","LA6247",3,1,87,0)
13315-7^LN^1^^1
"TEMP","LA6247",3,1,88,0)
13318-1^LN^1^^1
"TEMP","LA6247",3,1,89,0)
14093-9^LN^1^^1
"TEMP","LA6247",3,1,90,0)
14226-5^LN^1^^1
"TEMP","LA6247",3,1,91,0)
14320-6^LN^1^^1
"TEMP","LA6247",3,1,92,0)
14325-5^LN^1^^1
"TEMP","LA6247",3,1,93,0)
14475-8^LN^1^^1
"TEMP","LA6247",3,1,94,0)
14476-6^LN^1^^1
"TEMP","LA6247",3,1,95,0)
14477-4^LN^1^^1
"TEMP","LA6247",3,1,96,0)
14478-2^LN^1^^1
"TEMP","LA6247",3,1,97,0)
14479-0^LN^1^^1
"TEMP","LA6247",3,1,98,0)
14480-8^LN^1^^1
"TEMP","LA6247",3,1,99,0)
14481-6^LN^1^^1
"TEMP","LA6247",3,1,100,0)
14482-4^LN^1^^1
"TEMP","LA6247",3,1,101,0)
14483-2^LN^1^^1
"TEMP","LA6247",3,1,102,0)
14788-4^LN^1^^1
"TEMP","LA6247",3,1,103,0)
16832-8^LN^1^^1
"TEMP","LA6247",3,1,104,0)
16835-1^LN^1^^1
"TEMP","LA6247",3,1,105,0)
16836-9^LN^1^^1
"TEMP","LA6247",3,1,106,0)
17279-1^LN^1^^1
"TEMP","LA6247",3,1,107,0)
17563-8^LN^1^^1
"TEMP","LA6247",3,1,108,0)
17576-0^LN^1^^1
"TEMP","LA6247",3,1,109,0)
17656-0^LN^1^^1
"TEMP","LA6247",3,1,110,0)
17873-1^LN^1^^1
"TEMP","LA6247",3,1,111,0)
17874-9^LN^1^^1
"TEMP","LA6247",3,1,112,0)
17875-6^LN^1^^1
"TEMP","LA6247",3,1,113,0)
17876-4^LN^1^^1
"TEMP","LA6247",3,1,114,0)
17877-2^LN^1^^1
"TEMP","LA6247",3,1,115,0)
17878-0^LN^1^^1
"TEMP","LA6247",3,1,116,0)
17879-8^LN^1^^1
"TEMP","LA6247",3,1,117,0)
17880-6^LN^1^^1
"TEMP","LA6247",3,1,118,0)
17881-4^LN^1^^1
"TEMP","LA6247",3,1,119,0)
17882-2^LN^1^^1
"TEMP","LA6247",3,1,120,0)
17883-0^LN^1^^1
"TEMP","LA6247",3,1,121,0)
17884-8^LN^1^^1
"TEMP","LA6247",3,1,122,0)
17885-5^LN^1^^1
"TEMP","LA6247",3,1,123,0)
17886-3^LN^1^^1
"TEMP","LA6247",3,1,124,0)
17887-1^LN^1^^1
"TEMP","LA6247",3,1,125,0)
17888-9^LN^1^^1
"TEMP","LA6247",3,1,126,0)
17889-7^LN^1^^1
"TEMP","LA6247",3,1,127,0)
17890-5^LN^1^^1
"TEMP","LA6247",3,1,128,0)
17891-3^LN^1^^1
"TEMP","LA6247",3,1,129,0)
17892-1^LN^1^^1
"TEMP","LA6247",3,1,130,0)
17893-9^LN^1^^1
"TEMP","LA6247",3,1,131,0)
17894-7^LN^1^^1
"TEMP","LA6247",3,1,132,0)
17895-4^LN^1^^1
"TEMP","LA6247",3,1,133,0)
17896-2^LN^1^^1
"TEMP","LA6247",3,1,134,0)
17897-0^LN^1^^1
"TEMP","LA6247",3,1,135,0)
17898-8^LN^1^^1
"TEMP","LA6247",3,1,136,0)
17899-6^LN^1^^1
"TEMP","LA6247",3,1,137,0)
17900-2^LN^1^^1
"TEMP","LA6247",3,1,138,0)
17901-0^LN^1^^1
"TEMP","LA6247",3,1,139,0)
17902-8^LN^1^^1
"TEMP","LA6247",3,1,140,0)
17903-6^LN^1^^1
"TEMP","LA6247",3,1,141,0)
17904-4^LN^1^^1
"TEMP","LA6247",3,1,142,0)
17905-1^LN^1^^1
"TEMP","LA6247",3,1,143,0)
17906-9^LN^1^^1
"TEMP","LA6247",3,1,144,0)
17907-7^LN^1^^1
"TEMP","LA6247",3,1,145,0)
17908-5^LN^1^^1
"TEMP","LA6247",3,1,146,0)
17909-3^LN^1^^1
"TEMP","LA6247",3,1,147,0)
17910-1^LN^1^^1
"TEMP","LA6247",3,1,148,0)
17911-9^LN^1^^1
"TEMP","LA6247",3,1,149,0)
17912-7^LN^1^^1
"TEMP","LA6247",3,1,150,0)
17913-5^LN^1^^1
"TEMP","LA6247",3,1,151,0)
17914-3^LN^1^^1
"TEMP","LA6247",3,1,152,0)
17915-0^LN^1^^1
"TEMP","LA6247",3,1,153,0)
17916-8^LN^1^^1
"TEMP","LA6247",3,1,154,0)
17917-6^LN^1^^1
"TEMP","LA6247",3,1,155,0)
17918-4^LN^1^^1
"TEMP","LA6247",3,1,156,0)
17919-2^LN^1^^1
"TEMP","LA6247",3,1,157,0)
17920-0^LN^1^^1
"TEMP","LA6247",3,1,158,0)
17921-8^LN^1^^1
"TEMP","LA6247",3,1,159,0)
17922-6^LN^1^^1
"TEMP","LA6247",3,1,160,0)
17923-4^LN^1^^1
"TEMP","LA6247",3,1,161,0)
17924-2^LN^1^^1
"TEMP","LA6247",3,1,162,0)
17925-9^LN^1^^1
"TEMP","LA6247",3,1,163,0)
17926-7^LN^1^^1
"TEMP","LA6247",3,1,164,0)
17927-5^LN^1^^1
"TEMP","LA6247",3,1,165,0)
17928-3^LN^1^^1
"TEMP","LA6247",3,1,166,0)
17929-1^LN^1^^1
"TEMP","LA6247",3,1,167,0)
17930-9^LN^1^^1
"TEMP","LA6247",3,1,168,0)
17931-7^LN^1^^1
"TEMP","LA6247",3,1,169,0)
17932-5^LN^1^^1
"TEMP","LA6247",3,1,170,0)
17933-3^LN^1^^1
"TEMP","LA6247",3,1,171,0)
17934-1^LN^1^^1
"TEMP","LA6247",3,1,172,0)
17935-8^LN^1^^1
"TEMP","LA6247",3,1,173,0)
17936-6^LN^1^^1
"TEMP","LA6247",3,1,174,0)
17937-4^LN^1^^1
"TEMP","LA6247",3,1,175,0)
17938-2^LN^1^^1
"TEMP","LA6247",3,1,176,0)
17939-0^LN^1^^1
"TEMP","LA6247",3,1,177,0)
17940-8^LN^1^^1
"TEMP","LA6247",3,1,178,0)
17941-6^LN^1^^1
"TEMP","LA6247",3,1,179,0)
17942-4^LN^1^^1
"TEMP","LA6247",3,1,180,0)
17943-2^LN^1^^1
"TEMP","LA6247",3,1,181,0)
17944-0^LN^1^^1
"TEMP","LA6247",3,1,182,0)
17945-7^LN^1^^1
"TEMP","LA6247",3,1,183,0)
17946-5^LN^1^^1
"TEMP","LA6247",3,1,184,0)
17950-7^LN^1^^1
"TEMP","LA6247",3,1,185,0)
17951-5^LN^1^^1
"TEMP","LA6247",3,1,186,0)
17952-3^LN^1^^1
"TEMP","LA6247",3,1,187,0)
17953-1^LN^1^^1
"TEMP","LA6247",3,1,188,0)
17954-9^LN^1^^1
"TEMP","LA6247",3,1,189,0)
17955-6^LN^1^^1
"TEMP","LA6247",3,1,190,0)
17956-4^LN^1^^1
"TEMP","LA6247",3,1,191,0)
17957-2^LN^1^^1
"TEMP","LA6247",3,1,192,0)
17958-0^LN^1^^1
"TEMP","LA6247",3,1,193,0)
17959-8^LN^1^^1
"TEMP","LA6247",3,1,194,0)
17960-6^LN^1^^1
"TEMP","LA6247",3,1,195,0)
17961-4^LN^1^^1
"TEMP","LA6247",3,1,196,0)
17962-2^LN^1^^1
"TEMP","LA6247",3,1,197,0)
17963-0^LN^1^^1
"TEMP","LA6247",3,1,198,0)
17964-8^LN^1^^1
"TEMP","LA6247",3,1,199,0)
17965-5^LN^1^^1
"TEMP","LA6247",3,1,200,0)
17966-3^LN^1^^1
"TEMP","LA6247",3,1,201,0)
17967-1^LN^1^^1
"TEMP","LA6247",3,1,202,0)
17968-9^LN^1^^1
"TEMP","LA6247",3,1,203,0)
17969-7^LN^1^^1
"TEMP","LA6247",3,1,204,0)
17970-5^LN^1^^1
"TEMP","LA6247",3,1,205,0)
17971-3^LN^1^^1
"TEMP","LA6247",3,1,206,0)
17972-1^LN^1^^1
"TEMP","LA6247",3,1,207,0)
17973-9^LN^1^^1
"TEMP","LA6247",3,1,208,0)
17974-7^LN^1^^1
"TEMP","LA6247",3,1,209,0)
19126-2^LN^1^^1
"TEMP","LA6247",3,1,210,0)
19127-0^LN^1^^1
"TEMP","LA6247",3,1,211,0)
19129-6^LN^1^^1
"TEMP","LA6247",3,1,212,0)
20474-3^LN^1^^1
"TEMP","LA6247",3,1,213,0)
20688-8^LN^1^^1
"TEMP","LA6247",3,1,214,0)
20693-8^LN^1^^1
"TEMP","LA6247",3,1,215,0)
20694-6^LN^1^^1
"TEMP","LA6247",3,1,216,0)
20734-0^LN^1^^1
"TEMP","LA6247",3,1,217,0)
20735-7^LN^1^^1
"TEMP","LA6247",3,1,218,0)
20738-1^LN^1^^1
"TEMP","LA6247",3,1,219,0)
20739-9^LN^1^^1
"TEMP","LA6247",3,1,220,0)
20740-7^LN^1^^1
"TEMP","LA6247",3,1,221,0)
20878-5^LN^1^^1
"TEMP","LA6247",3,1,222,0)
20879-3^LN^1^^1
"TEMP","LA6247",3,1,223,0)
20952-8^LN^1^^1
"TEMP","LA6247",3,1,224,0)
20953-6^LN^1^^1
"TEMP","LA6247",3,1,225,0)
20954-4^LN^1^^1
"TEMP","LA6247",3,1,226,0)
20955-1^LN^1^^1
"TEMP","LA6247",3,1,227,0)
20964-3^LN^1^^1
"TEMP","LA6247",3,1,228,0)
20966-8^LN^1^^1
"TEMP","LA6247",3,1,229,0)
20967-6^LN^1^^1
"TEMP","LA6247",3,1,230,0)
20968-4^LN^1^^1
"TEMP","LA6247",3,1,231,0)
20987-4^LN^1^^1
"TEMP","LA6247",3,1,232,0)
21020-3^LN^1^^1
"TEMP","LA6247",3,1,233,0)
21184-7^LN^1^^1
"TEMP","LA6247",3,1,234,0)
23594-5^LN^1^^1
"TEMP","LA6247",3,1,235,0)
24003-6^LN^1^^1
"TEMP","LA6247",3,1,236,0)
24005-1^LN^1^^1
"TEMP","LA6247",3,1,237,0)
24409-5^LN^1^^1
"TEMP","LA6247",3,1,238,0)
27907-5^LN^1^^1
"TEMP","LA6247",3,1,239,0)
28549-4^LN^1^^1
"TEMP","LA6247",3,1,240,0)
29885-1^LN^1^^1
"TEMP","LA6247",3,1,241,0)
32355-0^LN^1^^1
"TEMP","LA6247",3,1,242,0)
32367-5^LN^1^^1
"TEMP","LA6247",3,1,243,0)
32368-3^LN^1^^1
"TEMP","LA6247",3,1,244,0)
38353-9^LN^1^^1
"TEMP","LA6247",3,1,245,0)
38354-7^LN^1^^1
"TEMP","LA6247",3,1,246,0)
38376-0^LN^1^^1
"TEMP","LA6247",3,1,247,0)
264868006^SCT^2^6^1
"TEMP","LA6247",3,1,248,0)
47492008^SCT^2^6^1
"TEMP","LA6247",3,1,1000005,0)
589-2^LN^1^^1
"TEMP","LA6247",3,1,1000006,0)
590-0^LN^1^^1
"TEMP","LA6247",3,1,1000007,0)
591-8^LN^1^^1
"TEMP","LA6247",3,1,1000008,0)
592-6^LN^1^^1
"TEMP","LA6247",3,1,1000009,0)
593-4^LN^1^^1
"TEMP","LA6247",3,1,1000010,0)
594-2^LN^1^^1
"TEMP","LA6247",3,1,1000011,0)
5878-4^LN^1^^1
"TEMP","LA6247",3,1,1000012,0)
6429-5^LN^1^^1
"TEMP","LA6247",3,1,1000013,0)
6430-3^LN^1^^1
"TEMP","LA6247",3,1,1000014,0)
6431-1^LN^1^^1
"TEMP","LA6247",3,1,1000015,0)
6453-5^LN^1^^1
"TEMP","LA6247",3,1,1000016,0)
6454-3^LN^1^^1
"TEMP","LA6247",3,1,1000017,0)
6455-0^LN^1^^1
"TEMP","LA6247",3,1,1000018,0)
6544-1^LN^1^^1
"TEMP","LA6247",3,1,1000019,0)
6545-8^LN^1^^1
"TEMP","LA6247",3,1,1000020,0)
6546-6^LN^1^^1
"TEMP","LA6247",3,1,1000021,0)
6578-9^LN^1^^1
"TEMP","LA6247",3,1,1000022,0)
6579-7^LN^1^^1
"TEMP","LA6247",3,1,1000023,0)
6580-5^LN^1^^1
"TEMP","LA6247",3,1,1000024,0)
6581-3^LN^1^^1
"TEMP","LA6247",3,1,1000025,0)
6594-6^LN^1^^1
"TEMP","LA6247",3,1,1000026,0)
9781-6^LN^1^^1
"TEMP","LA6247",3,1,1000027,0)
9816-0^LN^1^^1
"TEMP","LA6247",3,1,1000028,0)
10635-1^LN^1^^1
"TEMP","LA6247",3,1,1000029,0)
10643-5^LN^1^^1
"TEMP","LA6247",3,1,1000030,0)
10670-8^LN^1^^1
"TEMP","LA6247",3,1,1000031,0)
10687-2^LN^1^^1
"TEMP","LA6247",3,1,1000032,0)
10716-9^LN^1^^1
"TEMP","LA6247",3,1,1000033,0)
10728-4^LN^1^^1
"TEMP","LA6247",3,1,1000034,0)
10730-0^LN^1^^1
"TEMP","LA6247",3,1,1000035,0)
14838-7^LN^1^^1
"TEMP","LA6247",3,1,1000036,0)
23599-4^LN^1^^1
"TEMP","LA6247",3,1,1000037,0)
23600-0^LN^1^^1
"TEMP","LA6247",3,1,1000038,0)
38393-5^LN^1^^1
"TEMP","LA6247",3,1,1000039,0)
38394-3^LN^1^^1
"TEMP","LA6247",4,0)
MYCOBACTERIA^MI^9206
"TEMP","LA6247",4,1,1,0)
532-2^LN^1^^1
"TEMP","LA6247",4,1,2,0)
533-0^LN^1^^1
"TEMP","LA6247",4,1,3,0)
534-8^LN^1^^1
"TEMP","LA6247",4,1,4,0)
535-5^LN^1^^1
"TEMP","LA6247",4,1,5,0)
536-3^LN^1^^1
"TEMP","LA6247",4,1,6,0)
537-1^LN^1^^1
"TEMP","LA6247",4,1,7,0)
538-9^LN^1^^1
"TEMP","LA6247",4,1,8,0)
539-7^LN^1^^1
"TEMP","LA6247",4,1,9,0)
540-5^LN^1^^1
"TEMP","LA6247",4,1,10,0)
541-3^LN^1^^1
"TEMP","LA6247",4,1,11,0)
542-1^LN^1^^1
"TEMP","LA6247",4,1,12,0)
543-9^LN^1^^1
"TEMP","LA6247",4,1,13,0)
9823-6^LN^1^^1
"TEMP","LA6247",4,1,14,0)
9824-4^LN^1^^1
"TEMP","LA6247",4,1,15,0)
30045-9^LN^1^^1
"TEMP","LA6247",4,1,16,0)
10637-7^LN^1^^1
"TEMP","LA6247",4,1,17,0)
9825-1^LN^1^^1
"TEMP","LA6247",4,1,18,0)
23237-1^LN^1^^1
"TEMP","LA6247",4,1,19,0)
23238-9^LN^1^^1
"TEMP","LA6247",5,0)
VIRUS^MI^9210
"TEMP","LA6247",5,1,1,0)
5835-4^LN^1^^1
"TEMP","LA6247",5,1,2,0)
5836-2^LN^1^^1
"TEMP","LA6247",5,1,3,0)
5837-0^LN^1^^1
"TEMP","LA6247",5,1,4,0)
5838-8^LN^1^^1
"TEMP","LA6247",5,1,5,0)
5839-6^LN^1^^1
"TEMP","LA6247",5,1,6,0)
5842-0^LN^1^^1
"TEMP","LA6247",5,1,7,0)
5843-8^LN^1^^1
"TEMP","LA6247",5,1,8,0)
5856-0^LN^1^^1
"TEMP","LA6247",5,1,9,0)
5858-6^LN^1^^1
"TEMP","LA6247",5,1,10,0)
5859-4^LN^1^^1
"TEMP","LA6247",5,1,11,0)
5883-4^LN^1^^1
"TEMP","LA6247",5,1,12,0)
5884-2^LN^1^^1
"TEMP","LA6247",5,1,13,0)
5885-9^LN^1^^1
"TEMP","LA6247",5,1,14,0)
5886-7^LN^1^^1
"TEMP","LA6247",5,1,15,0)
5887-5^LN^1^^1
"TEMP","LA6247",5,1,16,0)
5888-3^LN^1^^1
"TEMP","LA6247",5,1,17,0)
6309-9^LN^1^^1
"TEMP","LA6247",5,1,18,0)
6310-7^LN^1^^1
"TEMP","LA6247",5,1,19,0)
6406-3^LN^1^^1
"TEMP","LA6247",5,1,20,0)
6536-7^LN^1^^1
"TEMP","LA6247",5,1,21,0)
6537-5^LN^1^^1
"TEMP","LA6247",5,1,22,0)
6538-3^LN^1^^1
"TEMP","LA6247",5,1,23,0)
6539-1^LN^1^^1
"TEMP","LA6247",5,1,24,0)
6540-9^LN^1^^1
"TEMP","LA6247",5,1,25,0)
6541-7^LN^1^^1
"TEMP","LA6247",5,1,26,0)
6547-4^LN^1^^1
"TEMP","LA6247",5,1,27,0)
6548-2^LN^1^^1
"TEMP","LA6247",5,1,28,0)
6583-9^LN^1^^1
"TEMP","LA6247",5,1,29,0)
6584-7^LN^1^^1
"TEMP","LA6247",5,1,30,0)
6601-9^LN^1^^1
"TEMP","LA6247",5,1,31,0)
6602-7^LN^1^^1
"TEMP","LA6247",5,1,32,0)
6603-5^LN^1^^1
"TEMP","LA6247",5,1,33,0)
6604-3^LN^1^^1
"TEMP","LA6247",5,1,34,0)
6608-4^LN^1^^1
"TEMP","LA6247",5,1,35,0)
9782-4^LN^1^^1
"TEMP","LA6247",5,1,36,0)
11484-3^LN^1^^1
"TEMP","LA6247",5,1,37,0)
14451-9^LN^1^^1
"TEMP","LA6247",5,1,38,0)
14452-7^LN^1^^1
"TEMP","LA6247",5,1,39,0)
14453-5^LN^1^^1
"TEMP","LA6247",5,1,40,0)
14454-3^LN^1^^1
"TEMP","LA6247",5,1,41,0)
14455-0^LN^1^^1
"TEMP","LA6247",5,1,42,0)
14456-8^LN^1^^1
"TEMP","LA6247",5,1,43,0)
14457-6^LN^1^^1
"TEMP","LA6247",5,1,44,0)
14458-4^LN^1^^1
"TEMP","LA6247",5,1,45,0)
14459-2^LN^1^^1
"TEMP","LA6247",5,1,46,0)
14460-0^LN^1^^1
"TEMP","LA6247",5,1,47,0)
17520-8^LN^1^^1
"TEMP","LA6247",5,1,48,0)
17530-7^LN^1^^1
"TEMP","LA6247",5,1,49,0)
17975-4^LN^1^^1
"TEMP","LA6247",5,1,50,0)
17976-2^LN^1^^1
"TEMP","LA6247",5,1,51,0)
20445-3^LN^1^^1
"TEMP","LA6247",5,1,52,0)
21442-9^LN^1^^1
"TEMP","LA6247",5,1,53,0)
23601-8^LN^1^^1
"TEMP","LA6247",5,1,54,0)
32675-1^LN^1^^1
"TEMP","LA6247",5,1,55,0)
32689-2^LN^1^^1
"TEMP","LA6247",5,1,56,0)
34201-4^LN^1^^1
"TEMP","LA6247",5,1,57,0)
35417-5^LN^1^^1
"TEMP","LA6247",5,1,58,0)
35418-3^LN^1^^1
"TEMP","LA6247",5,1,59,0)
35419-1^LN^1^^1
"TEMP","LA6247",5,1,60,0)
35420-9^LN^1^^1
"TEMP","LA6247",5,1,61,0)
35421-7^LN^1^^1
"TEMP","LA6247",5,1,62,0)
35422-5^LN^1^^1
"TEMP","LA6247",5,1,63,0)
35423-3^LN^1^^1
"TEMP","LA6247",5,1,64,0)
35424-1^LN^1^^1
"TEMP","LA6247",5,1,65,0)
35425-8^LN^1^^1
"TEMP","LA6247",5,1,66,0)
35426-6^LN^1^^1
"TEMP","LA6247",5,1,67,0)
35427-4^LN^1^^1
"TEMP","LA6247",5,1,68,0)
35428-2^LN^1^^1
"TEMP","LA6247",5,1,69,0)
35429-0^LN^1^^1
"TEMP","LA6247",5,1,70,0)
35430-8^LN^1^^1
"TEMP","LA6247",5,1,71,0)
35431-6^LN^1^^1
"TEMP","LA6247",5,1,72,0)
35432-4^LN^1^^1
"TEMP","LA6247",5,1,73,0)
35433-2^LN^1^^1
"TEMP","LA6247",5,1,74,0)
35434-0^LN^1^^1
"TEMP","LA6247",5,1,75,0)
35451-4^LN^1^^1
"TEMP","LA6247",5,1,76,0)
10640-1^LN^1^^1
"TEMP","LA6247",5,1,77,0)
10646-8^LN^1^^1
"TEMP","LA6247",5,1,78,0)
10649-2^LN^1^^1
"TEMP","LA6247",5,1,79,0)
10675-7^LN^1^^1
"TEMP","LA6247",5,1,80,0)
10680-7^LN^1^^1
"TEMP","LA6247",5,1,81,0)
10681-5^LN^1^^1
"TEMP","LA6247",5,1,82,0)
10696-3^LN^1^^1
"TEMP","LA6247",5,1,83,0)
10700-3^LN^1^^1
"TEMP","LA6247",5,1,84,0)
10706-0^LN^1^^1
"TEMP","LA6247",5,1,85,0)
10714-4^LN^1^^1
"TEMP","LA6247",5,1,86,0)
10722-7^LN^1^^1
"TEMP","LA6247",5,1,87,0)
10734-2^LN^1^^1
"TEMP","LA6247",5,1,88,0)
10736-7^LN^1^^1
"TEMP","LA6247",5,1,89,0)
10737-5^LN^1^^1
"TEMP","LA6247",5,1,90,0)
10738-3^LN^1^^1
"TEMP","LA6247",5,1,91,0)
10739-1^LN^1^^1
"TEMP","LA6247",5,1,92,0)
11083-3^LN^1^^1
"TEMP","LA6247",5,1,93,0)
11481-9^LN^1^^1
"TEMP","LA6247",5,1,94,0)
20698-7^LN^1^^1
"TEMP","LA6247",5,1,95,0)
32134-9^LN^1^^1
"TEMP","LA6247",5,1,96,0)
36899-3^LN^1^^1
"TEMP","LA6247",6,0)
BACTERIOLOGY REPORT^MI^9253
"TEMP","LA6247",6,1,1,0)
93928.0000^99VA64^1^^1
"TEMP","LA6247",6,1,2,0)
23506009^SCT^2^^1
"TEMP","LA6247",7,0)
BACTERIOLOGY SUSCEPTIBILITY^MI^9332
"TEMP","LA6247",7,1,1,0)
1-8^LN^1^^1
"TEMP","LA6247",7,1,2,0)
2-6^LN^1^^1
"TEMP","LA6247",7,1,3,0)
3-4^LN^1^^1
"TEMP","LA6247",7,1,4,0)
4-2^LN^1^^1
"TEMP","LA6247",7,1,5,0)
5-9^LN^1^^1
"TEMP","LA6247",7,1,6,0)
6-7^LN^1^^1
"TEMP","LA6247",7,1,7,0)
7-5^LN^1^^1
"TEMP","LA6247",7,1,8,0)
8-3^LN^1^^1
"TEMP","LA6247",7,1,9,0)
9-1^LN^1^^1
"TEMP","LA6247",7,1,10,0)
10-9^LN^1^^1
"TEMP","LA6247",7,1,11,0)
11-7^LN^1^^1
"TEMP","LA6247",7,1,12,0)
12-5^LN^1^^1
"TEMP","LA6247",7,1,13,0)
13-3^LN^1^^1
"TEMP","LA6247",7,1,14,0)
14-1^LN^1^^1
"TEMP","LA6247",7,1,15,0)
15-8^LN^1^^1
"TEMP","LA6247",7,1,16,0)
16-6^LN^1^^1
"TEMP","LA6247",7,1,17,0)
17-4^LN^1^^1
"TEMP","LA6247",7,1,18,0)
18-2^LN^1^^1
"TEMP","LA6247",7,1,19,0)
19-0^LN^1^^1
"TEMP","LA6247",7,1,20,0)
20-8^LN^1^^1
"TEMP","LA6247",7,1,21,0)
21-6^LN^1^^1
"TEMP","LA6247",7,1,22,0)
22-4^LN^1^^1
"TEMP","LA6247",7,1,23,0)
23-2^LN^1^^1
"TEMP","LA6247",7,1,24,0)
24-0^LN^1^^1
"TEMP","LA6247",7,1,25,0)
25-7^LN^1^^1
"TEMP","LA6247",7,1,26,0)
26-5^LN^1^^1
"TEMP","LA6247",7,1,27,0)
27-3^LN^1^^1
"TEMP","LA6247",7,1,28,0)
28-1^LN^1^^1
"TEMP","LA6247",7,1,29,0)
29-9^LN^1^^1
"TEMP","LA6247",7,1,30,0)
30-7^LN^1^^1
"TEMP","LA6247",7,1,31,0)
31-5^LN^1^^1
"TEMP","LA6247",7,1,32,0)
32-3^LN^1^^1
"TEMP","LA6247",7,1,33,0)
33-1^LN^1^^1
"TEMP","LA6247",7,1,34,0)
34-9^LN^1^^1
"TEMP","LA6247",7,1,35,0)
35-6^LN^1^^1
"TEMP","LA6247",7,1,36,0)
36-4^LN^1^^1
"TEMP","LA6247",7,1,37,0)
37-2^LN^1^^1
"TEMP","LA6247",7,1,38,0)
38-0^LN^1^^1
"TEMP","LA6247",7,1,39,0)
39-8^LN^1^^1
"TEMP","LA6247",7,1,40,0)
40-6^LN^1^^1
"TEMP","LA6247",7,1,41,0)
41-4^LN^1^^1
"TEMP","LA6247",7,1,42,0)
42-2^LN^1^^1
"TEMP","LA6247",7,1,43,0)
43-0^LN^1^^1
"TEMP","LA6247",7,1,44,0)
44-8^LN^1^^1
"TEMP","LA6247",7,1,45,0)
45-5^LN^1^^1
"TEMP","LA6247",7,1,46,0)
46-3^LN^1^^1
"TEMP","LA6247",7,1,47,0)
47-1^LN^1^^1
"TEMP","LA6247",7,1,48,0)
48-9^LN^1^^1
"TEMP","LA6247",7,1,49,0)
49-7^LN^1^^1
"TEMP","LA6247",7,1,50,0)
50-5^LN^1^^1
"TEMP","LA6247",7,1,51,0)
51-3^LN^1^^1
"TEMP","LA6247",7,1,52,0)
52-1^LN^1^^1
"TEMP","LA6247",7,1,53,0)
53-9^LN^1^^1
"TEMP","LA6247",7,1,54,0)
54-7^LN^1^^1
"TEMP","LA6247",7,1,55,0)
55-4^LN^1^^1
"TEMP","LA6247",7,1,56,0)
56-2^LN^1^^1
"TEMP","LA6247",7,1,57,0)
57-0^LN^1^^1
"TEMP","LA6247",7,1,58,0)
58-8^LN^1^^1
"TEMP","LA6247",7,1,59,0)
59-6^LN^1^^1
"TEMP","LA6247",7,1,60,0)
60-4^LN^1^^1
"TEMP","LA6247",7,1,61,0)
61-2^LN^1^^1
"TEMP","LA6247",7,1,62,0)
62-0^LN^1^^1
"TEMP","LA6247",7,1,63,0)
63-8^LN^1^^1
"TEMP","LA6247",7,1,64,0)
64-6^LN^1^^1
"TEMP","LA6247",7,1,65,0)
65-3^LN^1^^1
"TEMP","LA6247",7,1,66,0)
66-1^LN^1^^1
"TEMP","LA6247",7,1,67,0)
67-9^LN^1^^1
"TEMP","LA6247",7,1,68,0)
68-7^LN^1^^1
"TEMP","LA6247",7,1,69,0)
69-5^LN^1^^1
"TEMP","LA6247",7,1,70,0)
70-3^LN^1^^1
"TEMP","LA6247",7,1,71,0)
71-1^LN^1^^1
"TEMP","LA6247",7,1,72,0)
72-9^LN^1^^1
"TEMP","LA6247",7,1,73,0)
73-7^LN^1^^1
"TEMP","LA6247",7,1,74,0)
74-5^LN^1^^1
"TEMP","LA6247",7,1,75,0)
75-2^LN^1^^1
"TEMP","LA6247",7,1,76,0)
76-0^LN^1^^1
"TEMP","LA6247",7,1,77,0)
77-8^LN^1^^1
"TEMP","LA6247",7,1,78,0)
78-6^LN^1^^1
"TEMP","LA6247",7,1,79,0)
79-4^LN^1^^1
"TEMP","LA6247",7,1,80,0)
80-2^LN^1^^1
"TEMP","LA6247",7,1,81,0)
81-0^LN^1^^1
"TEMP","LA6247",7,1,82,0)
82-8^LN^1^^1
"TEMP","LA6247",7,1,83,0)
83-6^LN^1^^1
"TEMP","LA6247",7,1,84,0)
84-4^LN^1^^1
"TEMP","LA6247",7,1,85,0)
85-1^LN^1^^1
"TEMP","LA6247",7,1,86,0)
86-9^LN^1^^1
"TEMP","LA6247",7,1,87,0)
87-7^LN^1^^1
"TEMP","LA6247",7,1,88,0)
88-5^LN^1^^1
"TEMP","LA6247",7,1,89,0)
89-3^LN^1^^1
"TEMP","LA6247",7,1,90,0)
90-1^LN^1^^1
"TEMP","LA6247",7,1,91,0)
91-9^LN^1^^1
"TEMP","LA6247",7,1,92,0)
92-7^LN^1^^1
"TEMP","LA6247",7,1,93,0)
93-5^LN^1^^1
"TEMP","LA6247",7,1,94,0)
94-3^LN^1^^1
"TEMP","LA6247",7,1,95,0)
95-0^LN^1^^1
"TEMP","LA6247",7,1,96,0)
96-8^LN^1^^1
"TEMP","LA6247",7,1,97,0)
97-6^LN^1^^1
"TEMP","LA6247",7,1,98,0)
98-4^LN^1^^1
"TEMP","LA6247",7,1,99,0)
99-2^LN^1^^1
"TEMP","LA6247",7,1,100,0)
100-8^LN^1^^1
"TEMP","LA6247",7,1,101,0)
101-6^LN^1^^1
"TEMP","LA6247",7,1,102,0)
102-4^LN^1^^1
"TEMP","LA6247",7,1,103,0)
103-2^LN^1^^1
"TEMP","LA6247",7,1,104,0)
104-0^LN^1^^1
"TEMP","LA6247",7,1,105,0)
105-7^LN^1^^1
"TEMP","LA6247",7,1,106,0)
106-5^LN^1^^1
"TEMP","LA6247",7,1,107,0)
107-3^LN^1^^1
"TEMP","LA6247",7,1,108,0)
108-1^LN^1^^1
"TEMP","LA6247",7,1,109,0)
109-9^LN^1^^1
"TEMP","LA6247",7,1,110,0)
110-7^LN^1^^1
"TEMP","LA6247",7,1,111,0)
111-5^LN^1^^1
"TEMP","LA6247",7,1,112,0)
112-3^LN^1^^1
"TEMP","LA6247",7,1,113,0)
113-1^LN^1^^1
"TEMP","LA6247",7,1,114,0)
114-9^LN^1^^1
"TEMP","LA6247",7,1,115,0)
115-6^LN^1^^1
"TEMP","LA6247",7,1,116,0)
116-4^LN^1^^1
"TEMP","LA6247",7,1,117,0)
117-2^LN^1^^1
"TEMP","LA6247",7,1,118,0)
118-0^LN^1^^1
"TEMP","LA6247",7,1,119,0)
119-8^LN^1^^1
"TEMP","LA6247",7,1,120,0)
120-6^LN^1^^1
"TEMP","LA6247",7,1,121,0)
121-4^LN^1^^1
"TEMP","LA6247",7,1,122,0)
122-2^LN^1^^1
"TEMP","LA6247",7,1,123,0)
123-0^LN^1^^1
"TEMP","LA6247",7,1,124,0)
124-8^LN^1^^1
"TEMP","LA6247",7,1,125,0)
125-5^LN^1^^1
"TEMP","LA6247",7,1,126,0)
126-3^LN^1^^1
"TEMP","LA6247",7,1,127,0)
127-1^LN^1^^1
"TEMP","LA6247",7,1,128,0)
128-9^LN^1^^1
"TEMP","LA6247",7,1,129,0)
129-7^LN^1^^1
"TEMP","LA6247",7,1,130,0)
130-5^LN^1^^1
"TEMP","LA6247",7,1,131,0)
132-1^LN^1^^1
"TEMP","LA6247",7,1,132,0)
133-9^LN^1^^1
"TEMP","LA6247",7,1,133,0)
134-7^LN^1^^1
"TEMP","LA6247",7,1,134,0)
135-4^LN^1^^1
"TEMP","LA6247",7,1,135,0)
136-2^LN^1^^1
"TEMP","LA6247",7,1,136,0)
137-0^LN^1^^1
"TEMP","LA6247",7,1,137,0)
138-8^LN^1^^1
"TEMP","LA6247",7,1,138,0)
139-6^LN^1^^1
"TEMP","LA6247",7,1,139,0)
140-4^LN^1^^1
"TEMP","LA6247",7,1,140,0)
141-2^LN^1^^1
"TEMP","LA6247",7,1,141,0)
142-0^LN^1^^1
"TEMP","LA6247",7,1,142,0)
143-8^LN^1^^1
"TEMP","LA6247",7,1,143,0)
144-6^LN^1^^1
"TEMP","LA6247",7,1,144,0)
145-3^LN^1^^1
"TEMP","LA6247",7,1,145,0)
146-1^LN^1^^1
"TEMP","LA6247",7,1,146,0)
147-9^LN^1^^1
"TEMP","LA6247",7,1,147,0)
148-7^LN^1^^1
"TEMP","LA6247",7,1,148,0)
149-5^LN^1^^1
"TEMP","LA6247",7,1,149,0)
150-3^LN^1^^1
"TEMP","LA6247",7,1,150,0)
151-1^LN^1^^1
"TEMP","LA6247",7,1,151,0)
152-9^LN^1^^1
"TEMP","LA6247",7,1,152,0)
153-7^LN^1^^1
"TEMP","LA6247",7,1,153,0)
154-5^LN^1^^1
"TEMP","LA6247",7,1,154,0)
155-2^LN^1^^1
"TEMP","LA6247",7,1,155,0)
156-0^LN^1^^1
"TEMP","LA6247",7,1,156,0)
157-8^LN^1^^1
"TEMP","LA6247",7,1,157,0)
158-6^LN^1^^1
"TEMP","LA6247",7,1,158,0)
159-4^LN^1^^1
"TEMP","LA6247",7,1,159,0)
160-2^LN^1^^1
"TEMP","LA6247",7,1,160,0)
161-0^LN^1^^1
"TEMP","LA6247",7,1,161,0)
162-8^LN^1^^1
"TEMP","LA6247",7,1,162,0)
163-6^LN^1^^1
"TEMP","LA6247",7,1,163,0)
164-4^LN^1^^1
"TEMP","LA6247",7,1,164,0)
165-1^LN^1^^1
"TEMP","LA6247",7,1,165,0)
166-9^LN^1^^1
"TEMP","LA6247",7,1,166,0)
167-7^LN^1^^1
"TEMP","LA6247",7,1,167,0)
168-5^LN^1^^1
"TEMP","LA6247",7,1,168,0)
169-3^LN^1^^1
"TEMP","LA6247",7,1,169,0)
170-1^LN^1^^1
"TEMP","LA6247",7,1,170,0)
171-9^LN^1^^1
"TEMP","LA6247",7,1,171,0)
172-7^LN^1^^1
"TEMP","LA6247",7,1,172,0)
173-5^LN^1^^1
"TEMP","LA6247",7,1,173,0)
174-3^LN^1^^1
"TEMP","LA6247",7,1,174,0)
175-0^LN^1^^1
"TEMP","LA6247",7,1,175,0)
176-8^LN^1^^1
"TEMP","LA6247",7,1,176,0)
177-6^LN^1^^1
"TEMP","LA6247",7,1,177,0)
178-4^LN^1^^1
"TEMP","LA6247",7,1,178,0)
179-2^LN^1^^1
"TEMP","LA6247",7,1,179,0)
180-0^LN^1^^1
"TEMP","LA6247",7,1,180,0)
181-8^LN^1^^1
"TEMP","LA6247",7,1,181,0)
182-6^LN^1^^1
"TEMP","LA6247",7,1,182,0)
183-4^LN^1^^1
"TEMP","LA6247",7,1,183,0)
184-2^LN^1^^1
"TEMP","LA6247",7,1,184,0)
185-9^LN^1^^1
"TEMP","LA6247",7,1,185,0)
186-7^LN^1^^1
"TEMP","LA6247",7,1,186,0)
187-5^LN^1^^1
"TEMP","LA6247",7,1,187,0)
188-3^LN^1^^1
"TEMP","LA6247",7,1,188,0)
189-1^LN^1^^1
"TEMP","LA6247",7,1,189,0)
190-9^LN^1^^1
"TEMP","LA6247",7,1,190,0)
191-7^LN^1^^1
"TEMP","LA6247",7,1,191,0)
192-5^LN^1^^1
"TEMP","LA6247",7,1,192,0)
193-3^LN^1^^1
"TEMP","LA6247",7,1,193,0)
194-1^LN^1^^1
"TEMP","LA6247",7,1,194,0)
195-8^LN^1^^1
"TEMP","LA6247",7,1,195,0)
196-6^LN^1^^1
"TEMP","LA6247",7,1,196,0)
197-4^LN^1^^1
"TEMP","LA6247",7,1,197,0)
198-2^LN^1^^1
"TEMP","LA6247",7,1,198,0)
199-0^LN^1^^1
"TEMP","LA6247",7,1,199,0)
200-6^LN^1^^1
"TEMP","LA6247",7,1,200,0)
201-4^LN^1^^1
"TEMP","LA6247",7,1,201,0)
202-2^LN^1^^1
"TEMP","LA6247",7,1,202,0)
203-0^LN^1^^1
"TEMP","LA6247",7,1,203,0)
204-8^LN^1^^1
"TEMP","LA6247",7,1,204,0)
205-5^LN^1^^1
"TEMP","LA6247",7,1,205,0)
206-3^LN^1^^1
"TEMP","LA6247",7,1,206,0)
207-1^LN^1^^1
"TEMP","LA6247",7,1,207,0)
208-9^LN^1^^1
"TEMP","LA6247",7,1,208,0)
209-7^LN^1^^1
"TEMP","LA6247",7,1,209,0)
210-5^LN^1^^1
"TEMP","LA6247",7,1,210,0)
211-3^LN^1^^1
"TEMP","LA6247",7,1,211,0)
212-1^LN^1^^1
"TEMP","LA6247",7,1,212,0)
213-9^LN^1^^1
"TEMP","LA6247",7,1,213,0)
214-7^LN^1^^1
"TEMP","LA6247",7,1,214,0)
215-4^LN^1^^1
"TEMP","LA6247",7,1,215,0)
216-2^LN^1^^1
"TEMP","LA6247",7,1,216,0)
217-0^LN^1^^1
"TEMP","LA6247",7,1,217,0)
218-8^LN^1^^1
"TEMP","LA6247",7,1,218,0)
219-6^LN^1^^1
"TEMP","LA6247",7,1,219,0)
220-4^LN^1^^1
"TEMP","LA6247",7,1,220,0)
221-2^LN^1^^1
"TEMP","LA6247",7,1,221,0)
222-0^LN^1^^1
"TEMP","LA6247",7,1,222,0)
223-8^LN^1^^1
"TEMP","LA6247",7,1,223,0)
224-6^LN^1^^1
"TEMP","LA6247",7,1,224,0)
225-3^LN^1^^1
"TEMP","LA6247",7,1,225,0)
226-1^LN^1^^1
"TEMP","LA6247",7,1,226,0)
227-9^LN^1^^1
"TEMP","LA6247",7,1,227,0)
228-7^LN^1^^1
"TEMP","LA6247",7,1,228,0)
229-5^LN^1^^1
"TEMP","LA6247",7,1,229,0)
230-3^LN^1^^1
"TEMP","LA6247",7,1,230,0)
231-1^LN^1^^1
"TEMP","LA6247",7,1,231,0)
232-9^LN^1^^1
"TEMP","LA6247",7,1,232,0)
233-7^LN^1^^1
"TEMP","LA6247",7,1,233,0)
234-5^LN^1^^1
"TEMP","LA6247",7,1,234,0)
235-2^LN^1^^1
"TEMP","LA6247",7,1,235,0)
236-0^LN^1^^1
"TEMP","LA6247",7,1,236,0)
237-8^LN^1^^1
"TEMP","LA6247",7,1,237,0)
238-6^LN^1^^1
"TEMP","LA6247",7,1,238,0)
239-4^LN^1^^1
"TEMP","LA6247",7,1,239,0)
240-2^LN^1^^1
"TEMP","LA6247",7,1,240,0)
241-0^LN^1^^1
"TEMP","LA6247",7,1,241,0)
242-8^LN^1^^1
"TEMP","LA6247",7,1,242,0)
243-6^LN^1^^1
"TEMP","LA6247",7,1,243,0)
244-4^LN^1^^1
"TEMP","LA6247",7,1,244,0)
245-1^LN^1^^1
"TEMP","LA6247",7,1,245,0)
246-9^LN^1^^1
"TEMP","LA6247",7,1,246,0)
247-7^LN^1^^1
"TEMP","LA6247",7,1,247,0)
248-5^LN^1^^1
"TEMP","LA6247",7,1,248,0)
249-3^LN^1^^1
"TEMP","LA6247",7,1,249,0)
250-1^LN^1^^1
"TEMP","LA6247",7,1,250,0)
251-9^LN^1^^1
"TEMP","LA6247",7,1,251,0)
252-7^LN^1^^1
"TEMP","LA6247",7,1,252,0)
253-5^LN^1^^1
"TEMP","LA6247",7,1,253,0)
254-3^LN^1^^1
"TEMP","LA6247",7,1,254,0)
255-0^LN^1^^1
"TEMP","LA6247",7,1,255,0)
256-8^LN^1^^1
"TEMP","LA6247",7,1,256,0)
257-6^LN^1^^1
"TEMP","LA6247",7,1,257,0)
258-4^LN^1^^1
"TEMP","LA6247",7,1,258,0)
259-2^LN^1^^1
"TEMP","LA6247",7,1,259,0)
260-0^LN^1^^1
"TEMP","LA6247",7,1,260,0)
261-8^LN^1^^1
"TEMP","LA6247",7,1,261,0)
262-6^LN^1^^1
"TEMP","LA6247",7,1,262,0)
263-4^LN^1^^1
"TEMP","LA6247",7,1,263,0)
264-2^LN^1^^1
"TEMP","LA6247",7,1,264,0)
265-9^LN^1^^1
"TEMP","LA6247",7,1,265,0)
266-7^LN^1^^1
"TEMP","LA6247",7,1,266,0)
267-5^LN^1^^1
"TEMP","LA6247",7,1,267,0)
268-3^LN^1^^1
"TEMP","LA6247",7,1,268,0)
269-1^LN^1^^1
"TEMP","LA6247",7,1,269,0)
270-9^LN^1^^1
"TEMP","LA6247",7,1,270,0)
271-7^LN^1^^1
"TEMP","LA6247",7,1,271,0)
272-5^LN^1^^1
"TEMP","LA6247",7,1,272,0)
273-3^LN^1^^1
"TEMP","LA6247",7,1,273,0)
274-1^LN^1^^1
"TEMP","LA6247",7,1,274,0)
275-8^LN^1^^1
"TEMP","LA6247",7,1,275,0)
276-6^LN^1^^1
"TEMP","LA6247",7,1,276,0)
277-4^LN^1^^1
"TEMP","LA6247",7,1,277,0)
278-2^LN^1^^1
"TEMP","LA6247",7,1,278,0)
279-0^LN^1^^1
"TEMP","LA6247",7,1,279,0)
280-8^LN^1^^1
"TEMP","LA6247",7,1,280,0)
281-6^LN^1^^1
"TEMP","LA6247",7,1,281,0)
282-4^LN^1^^1
"TEMP","LA6247",7,1,282,0)
283-2^LN^1^^1
"TEMP","LA6247",7,1,283,0)
284-0^LN^1^^1
"TEMP","LA6247",7,1,284,0)
285-7^LN^1^^1
"TEMP","LA6247",7,1,285,0)
286-5^LN^1^^1
"TEMP","LA6247",7,1,286,0)
287-3^LN^1^^1
"TEMP","LA6247",7,1,287,0)
288-1^LN^1^^1
"TEMP","LA6247",7,1,288,0)
289-9^LN^1^^1
"TEMP","LA6247",7,1,289,0)
290-7^LN^1^^1
"TEMP","LA6247",7,1,290,0)
291-5^LN^1^^1
"TEMP","LA6247",7,1,291,0)
292-3^LN^1^^1
"TEMP","LA6247",7,1,292,0)
293-1^LN^1^^1
"TEMP","LA6247",7,1,293,0)
294-9^LN^1^^1
"TEMP","LA6247",7,1,294,0)
295-6^LN^1^^1
"TEMP","LA6247",7,1,295,0)
296-4^LN^1^^1
"TEMP","LA6247",7,1,296,0)
297-2^LN^1^^1
"TEMP","LA6247",7,1,297,0)
298-0^LN^1^^1
"TEMP","LA6247",7,1,298,0)
299-8^LN^1^^1
"TEMP","LA6247",7,1,299,0)
300-4^LN^1^^1
"TEMP","LA6247",7,1,300,0)
301-2^LN^1^^1
"TEMP","LA6247",7,1,301,0)
302-0^LN^1^^1
"TEMP","LA6247",7,1,302,0)
303-8^LN^1^^1
"TEMP","LA6247",7,1,303,0)
304-6^LN^1^^1
"TEMP","LA6247",7,1,304,0)
305-3^LN^1^^1
"TEMP","LA6247",7,1,305,0)
306-1^LN^1^^1
"TEMP","LA6247",7,1,306,0)
307-9^LN^1^^1
"TEMP","LA6247",7,1,307,0)
308-7^LN^1^^1
"TEMP","LA6247",7,1,308,0)
309-5^LN^1^^1
"TEMP","LA6247",7,1,309,0)
310-3^LN^1^^1
"TEMP","LA6247",7,1,310,0)
311-1^LN^1^^1
"TEMP","LA6247",7,1,311,0)
312-9^LN^1^^1
"TEMP","LA6247",7,1,312,0)
313-7^LN^1^^1
"TEMP","LA6247",7,1,313,0)
314-5^LN^1^^1
"TEMP","LA6247",7,1,314,0)
315-2^LN^1^^1
"TEMP","LA6247",7,1,315,0)
316-0^LN^1^^1
"TEMP","LA6247",7,1,316,0)
317-8^LN^1^^1
"TEMP","LA6247",7,1,317,0)
318-6^LN^1^^1
"TEMP","LA6247",7,1,318,0)
319-4^LN^1^^1
"TEMP","LA6247",7,1,319,0)
320-2^LN^1^^1
"TEMP","LA6247",7,1,320,0)
321-0^LN^1^^1
"TEMP","LA6247",7,1,321,0)
322-8^LN^1^^1
"TEMP","LA6247",7,1,322,0)
323-6^LN^1^^1
"TEMP","LA6247",7,1,323,0)
324-4^LN^1^^1
"TEMP","LA6247",7,1,324,0)
325-1^LN^1^^1
"TEMP","LA6247",7,1,325,0)
326-9^LN^1^^1
"TEMP","LA6247",7,1,326,0)
327-7^LN^1^^1
"TEMP","LA6247",7,1,327,0)
328-5^LN^1^^1
"TEMP","LA6247",7,1,328,0)
329-3^LN^1^^1
"TEMP","LA6247",7,1,329,0)
330-1^LN^1^^1
"TEMP","LA6247",7,1,330,0)
331-9^LN^1^^1
"TEMP","LA6247",7,1,331,0)
332-7^LN^1^^1
"TEMP","LA6247",7,1,332,0)
333-5^LN^1^^1
"TEMP","LA6247",7,1,333,0)
334-3^LN^1^^1
"TEMP","LA6247",7,1,334,0)
335-0^LN^1^^1
"TEMP","LA6247",7,1,335,0)
336-8^LN^1^^1
"TEMP","LA6247",7,1,336,0)
337-6^LN^1^^1
"TEMP","LA6247",7,1,337,0)
338-4^LN^1^^1
"TEMP","LA6247",7,1,338,0)
339-2^LN^1^^1
"TEMP","LA6247",7,1,339,0)
340-0^LN^1^^1
"TEMP","LA6247",7,1,340,0)
341-8^LN^1^^1
"TEMP","LA6247",7,1,341,0)
342-6^LN^1^^1
"TEMP","LA6247",7,1,342,0)
343-4^LN^1^^1
"TEMP","LA6247",7,1,343,0)
344-2^LN^1^^1
"TEMP","LA6247",7,1,344,0)
345-9^LN^1^^1
"TEMP","LA6247",7,1,345,0)
346-7^LN^1^^1
"TEMP","LA6247",7,1,346,0)
347-5^LN^1^^1
"TEMP","LA6247",7,1,347,0)
348-3^LN^1^^1
"TEMP","LA6247",7,1,348,0)
349-1^LN^1^^1
"TEMP","LA6247",7,1,349,0)
350-9^LN^1^^1
"TEMP","LA6247",7,1,350,0)
351-7^LN^1^^1
"TEMP","LA6247",7,1,351,0)
352-5^LN^1^^1
"TEMP","LA6247",7,1,352,0)
353-3^LN^1^^1
"TEMP","LA6247",7,1,353,0)
354-1^LN^1^^1
"TEMP","LA6247",7,1,354,0)
355-8^LN^1^^1
"TEMP","LA6247",7,1,355,0)
356-6^LN^1^^1
"TEMP","LA6247",7,1,356,0)
357-4^LN^1^^1
"TEMP","LA6247",7,1,357,0)
358-2^LN^1^^1
"TEMP","LA6247",7,1,358,0)
359-0^LN^1^^1
"TEMP","LA6247",7,1,359,0)
360-8^LN^1^^1
"TEMP","LA6247",7,1,360,0)
361-6^LN^1^^1
"TEMP","LA6247",7,1,361,0)
362-4^LN^1^^1
"TEMP","LA6247",7,1,362,0)
363-2^LN^1^^1
"TEMP","LA6247",7,1,363,0)
364-0^LN^1^^1
"TEMP","LA6247",7,1,364,0)
365-7^LN^1^^1
"TEMP","LA6247",7,1,365,0)
366-5^LN^1^^1
"TEMP","LA6247",7,1,366,0)
367-3^LN^1^^1
"TEMP","LA6247",7,1,367,0)
368-1^LN^1^^1
"TEMP","LA6247",7,1,368,0)
369-9^LN^1^^1
"TEMP","LA6247",7,1,369,0)
370-7^LN^1^^1
"TEMP","LA6247",7,1,370,0)
371-5^LN^1^^1
"TEMP","LA6247",7,1,371,0)
372-3^LN^1^^1
"TEMP","LA6247",7,1,372,0)
373-1^LN^1^^1
"TEMP","LA6247",7,1,373,0)
374-9^LN^1^^1
"TEMP","LA6247",7,1,374,0)
375-6^LN^1^^1
"TEMP","LA6247",7,1,375,0)
376-4^LN^1^^1
"TEMP","LA6247",7,1,376,0)
377-2^LN^1^^1
"TEMP","LA6247",7,1,377,0)
378-0^LN^1^^1
"TEMP","LA6247",7,1,378,0)
379-8^LN^1^^1
"TEMP","LA6247",7,1,379,0)
380-6^LN^1^^1
"TEMP","LA6247",7,1,380,0)
381-4^LN^1^^1
"TEMP","LA6247",7,1,381,0)
382-2^LN^1^^1
"TEMP","LA6247",7,1,382,0)
383-0^LN^1^^1
"TEMP","LA6247",7,1,383,0)
384-8^LN^1^^1
"TEMP","LA6247",7,1,384,0)
385-5^LN^1^^1
"TEMP","LA6247",7,1,385,0)
386-3^LN^1^^1
"TEMP","LA6247",7,1,386,0)
387-1^LN^1^^1
"TEMP","LA6247",7,1,387,0)
388-9^LN^1^^1
"TEMP","LA6247",7,1,388,0)
389-7^LN^1^^1
"TEMP","LA6247",7,1,389,0)
390-5^LN^1^^1
"TEMP","LA6247",7,1,390,0)
391-3^LN^1^^1
"TEMP","LA6247",7,1,391,0)
392-1^LN^1^^1
"TEMP","LA6247",7,1,392,0)
393-9^LN^1^^1
"TEMP","LA6247",7,1,393,0)
394-7^LN^1^^1
"TEMP","LA6247",7,1,394,0)
395-4^LN^1^^1
"TEMP","LA6247",7,1,395,0)
396-2^LN^1^^1
"TEMP","LA6247",7,1,396,0)
397-0^LN^1^^1
"TEMP","LA6247",7,1,397,0)
398-8^LN^1^^1
"TEMP","LA6247",7,1,398,0)
399-6^LN^1^^1
"TEMP","LA6247",7,1,399,0)
400-2^LN^1^^1
"TEMP","LA6247",7,1,400,0)
401-0^LN^1^^1
"TEMP","LA6247",7,1,401,0)
402-8^LN^1^^1
"TEMP","LA6247",7,1,402,0)
403-6^LN^1^^1
"TEMP","LA6247",7,1,403,0)
404-4^LN^1^^1
"TEMP","LA6247",7,1,404,0)
405-1^LN^1^^1
"TEMP","LA6247",7,1,405,0)
406-9^LN^1^^1
"TEMP","LA6247",7,1,406,0)
407-7^LN^1^^1
"TEMP","LA6247",7,1,407,0)
408-5^LN^1^^1
"TEMP","LA6247",7,1,408,0)
409-3^LN^1^^1
"TEMP","LA6247",7,1,409,0)
410-1^LN^1^^1
"TEMP","LA6247",7,1,410,0)
411-9^LN^1^^1
"TEMP","LA6247",7,1,411,0)
412-7^LN^1^^1
"TEMP","LA6247",7,1,412,0)
413-5^LN^1^^1
"TEMP","LA6247",7,1,413,0)
414-3^LN^1^^1
"TEMP","LA6247",7,1,414,0)
415-0^LN^1^^1
"TEMP","LA6247",7,1,415,0)
416-8^LN^1^^1
"TEMP","LA6247",7,1,416,0)
417-6^LN^1^^1
"TEMP","LA6247",7,1,417,0)
418-4^LN^1^^1
"TEMP","LA6247",7,1,418,0)
419-2^LN^1^^1
"TEMP","LA6247",7,1,419,0)
420-0^LN^1^^1
"TEMP","LA6247",7,1,420,0)
421-8^LN^1^^1
"TEMP","LA6247",7,1,421,0)
422-6^LN^1^^1
"TEMP","LA6247",7,1,422,0)
423-4^LN^1^^1
"TEMP","LA6247",7,1,423,0)
424-2^LN^1^^1
"TEMP","LA6247",7,1,424,0)
425-9^LN^1^^1
"TEMP","LA6247",7,1,425,0)
426-7^LN^1^^1
"TEMP","LA6247",7,1,426,0)
427-5^LN^1^^1
"TEMP","LA6247",7,1,427,0)
428-3^LN^1^^1
"TEMP","LA6247",7,1,428,0)
429-1^LN^1^^1
"TEMP","LA6247",7,1,429,0)
430-9^LN^1^^1
"TEMP","LA6247",7,1,430,0)
431-7^LN^1^^1
"TEMP","LA6247",7,1,431,0)
432-5^LN^1^^1
"TEMP","LA6247",7,1,432,0)
433-3^LN^1^^1
"TEMP","LA6247",7,1,433,0)
434-1^LN^1^^1
"TEMP","LA6247",7,1,434,0)
435-8^LN^1^^1
"TEMP","LA6247",7,1,435,0)
436-6^LN^1^^1
"TEMP","LA6247",7,1,436,0)
437-4^LN^1^^1
"TEMP","LA6247",7,1,437,0)
438-2^LN^1^^1
"TEMP","LA6247",7,1,438,0)
439-0^LN^1^^1
"TEMP","LA6247",7,1,439,0)
440-8^LN^1^^1
"TEMP","LA6247",7,1,440,0)
441-6^LN^1^^1
"TEMP","LA6247",7,1,441,0)
442-4^LN^1^^1
"TEMP","LA6247",7,1,442,0)
443-2^LN^1^^1
"TEMP","LA6247",7,1,443,0)
444-0^LN^1^^1
"TEMP","LA6247",7,1,444,0)
445-7^LN^1^^1
"TEMP","LA6247",7,1,445,0)
446-5^LN^1^^1
"TEMP","LA6247",7,1,446,0)
447-3^LN^1^^1
"TEMP","LA6247",7,1,447,0)
448-1^LN^1^^1
"TEMP","LA6247",7,1,448,0)
449-9^LN^1^^1
"TEMP","LA6247",7,1,449,0)
450-7^LN^1^^1
"TEMP","LA6247",7,1,450,0)
451-5^LN^1^^1
"TEMP","LA6247",7,1,451,0)
452-3^LN^1^^1
"TEMP","LA6247",7,1,452,0)
453-1^LN^1^^1
"TEMP","LA6247",7,1,453,0)
454-9^LN^1^^1
"TEMP","LA6247",7,1,454,0)
455-6^LN^1^^1
"TEMP","LA6247",7,1,455,0)
456-4^LN^1^^1
"TEMP","LA6247",7,1,456,0)
457-2^LN^1^^1
"TEMP","LA6247",7,1,457,0)
458-0^LN^1^^1
"TEMP","LA6247",7,1,458,0)
459-8^LN^1^^1
"TEMP","LA6247",7,1,459,0)
460-6^LN^1^^1
"TEMP","LA6247",7,1,460,0)
461-4^LN^1^^1
"TEMP","LA6247",7,1,461,0)
462-2^LN^1^^1
"TEMP","LA6247",7,1,462,0)
463-0^LN^1^^1
"TEMP","LA6247",7,1,463,0)
464-8^LN^1^^1
"TEMP","LA6247",7,1,464,0)
465-5^LN^1^^1
"TEMP","LA6247",7,1,465,0)
466-3^LN^1^^1
"TEMP","LA6247",7,1,466,0)
467-1^LN^1^^1
"TEMP","LA6247",7,1,467,0)
468-9^LN^1^^1
"TEMP","LA6247",7,1,468,0)
469-7^LN^1^^1
"TEMP","LA6247",7,1,469,0)
470-5^LN^1^^1
"TEMP","LA6247",7,1,470,0)
471-3^LN^1^^1
"TEMP","LA6247",7,1,471,0)
472-1^LN^1^^1
"TEMP","LA6247",7,1,472,0)
473-9^LN^1^^1
"TEMP","LA6247",7,1,473,0)
474-7^LN^1^^1
"TEMP","LA6247",7,1,474,0)
475-4^LN^1^^1
"TEMP","LA6247",7,1,475,0)
476-2^LN^1^^1
"TEMP","LA6247",7,1,476,0)
477-0^LN^1^^1
"TEMP","LA6247",7,1,477,0)
478-8^LN^1^^1
"TEMP","LA6247",7,1,478,0)
479-6^LN^1^^1
"TEMP","LA6247",7,1,479,0)
480-4^LN^1^^1
"TEMP","LA6247",7,1,480,0)
481-2^LN^1^^1
"TEMP","LA6247",7,1,481,0)
482-0^LN^1^^1
"TEMP","LA6247",7,1,482,0)
483-8^LN^1^^1
"TEMP","LA6247",7,1,483,0)
484-6^LN^1^^1
"TEMP","LA6247",7,1,484,0)
485-3^LN^1^^1
"TEMP","LA6247",7,1,485,0)
486-1^LN^1^^1
"TEMP","LA6247",7,1,486,0)
487-9^LN^1^^1
"TEMP","LA6247",7,1,487,0)
488-7^LN^1^^1
"TEMP","LA6247",7,1,488,0)
489-5^LN^1^^1
"TEMP","LA6247",7,1,489,0)
490-3^LN^1^^1
"TEMP","LA6247",7,1,490,0)
491-1^LN^1^^1
"TEMP","LA6247",7,1,491,0)
492-9^LN^1^^1
"TEMP","LA6247",7,1,492,0)
493-7^LN^1^^1
"TEMP","LA6247",7,1,493,0)
494-5^LN^1^^1
"TEMP","LA6247",7,1,494,0)
495-2^LN^1^^1
"TEMP","LA6247",7,1,495,0)
496-0^LN^1^^1
"TEMP","LA6247",7,1,496,0)
497-8^LN^1^^1
"TEMP","LA6247",7,1,497,0)
498-6^LN^1^^1
"TEMP","LA6247",7,1,498,0)
499-4^LN^1^^1
"TEMP","LA6247",7,1,499,0)
500-9^LN^1^^1
"TEMP","LA6247",7,1,500,0)
501-7^LN^1^^1
"TEMP","LA6247",7,1,501,0)
502-5^LN^1^^1
"TEMP","LA6247",7,1,502,0)
503-3^LN^1^^1
"TEMP","LA6247",7,1,503,0)
504-1^LN^1^^1
"TEMP","LA6247",7,1,504,0)
505-8^LN^1^^1
"TEMP","LA6247",7,1,505,0)
506-6^LN^1^^1
"TEMP","LA6247",7,1,506,0)
507-4^LN^1^^1
"TEMP","LA6247",7,1,507,0)
508-2^LN^1^^1
"TEMP","LA6247",7,1,508,0)
509-0^LN^1^^1
"TEMP","LA6247",7,1,509,0)
510-8^LN^1^^1
"TEMP","LA6247",7,1,510,0)
511-6^LN^1^^1
"TEMP","LA6247",7,1,511,0)
512-4^LN^1^^1
"TEMP","LA6247",7,1,512,0)
513-2^LN^1^^1
"TEMP","LA6247",7,1,513,0)
514-0^LN^1^^1
"TEMP","LA6247",7,1,514,0)
515-7^LN^1^^1
"TEMP","LA6247",7,1,515,0)
516-5^LN^1^^1
"TEMP","LA6247",7,1,516,0)
517-3^LN^1^^1
"TEMP","LA6247",7,1,517,0)
518-1^LN^1^^1
"TEMP","LA6247",7,1,518,0)
519-9^LN^1^^1
"TEMP","LA6247",7,1,519,0)
520-7^LN^1^^1
"TEMP","LA6247",7,1,520,0)
521-5^LN^1^^1
"TEMP","LA6247",7,1,521,0)
522-3^LN^1^^1
"TEMP","LA6247",7,1,522,0)
523-1^LN^1^^1
"TEMP","LA6247",7,1,523,0)
524-9^LN^1^^1
"TEMP","LA6247",7,1,524,0)
525-6^LN^1^^1
"TEMP","LA6247",7,1,525,0)
526-4^LN^1^^1
"TEMP","LA6247",7,1,526,0)
527-2^LN^1^^1
"TEMP","LA6247",7,1,527,0)
528-0^LN^1^^1
"TEMP","LA6247",7,1,528,0)
529-8^LN^1^^1
"TEMP","LA6247",7,1,529,0)
530-6^LN^1^^1
"TEMP","LA6247",7,1,530,0)
531-4^LN^1^^1
"TEMP","LA6247",7,1,531,0)
6643-1^LN^1^^1
"TEMP","LA6247",7,1,532,0)
6644-9^LN^1^^1
"TEMP","LA6247",7,1,533,0)
6645-7^LN^1^^1
"TEMP","LA6247",7,1,534,0)
6646-5^LN^1^^1
"TEMP","LA6247",7,1,535,0)
6647-3^LN^1^^1
"TEMP","LA6247",7,1,536,0)
6648-1^LN^1^^1
"TEMP","LA6247",7,1,537,0)
6649-9^LN^1^^1
"TEMP","LA6247",7,1,538,0)
6650-6^LN^1^^1
"TEMP","LA6247",7,1,539,0)
6651-4^LN^1^^1
"TEMP","LA6247",7,1,540,0)
6652-2^LN^1^^1
"TEMP","LA6247",7,1,541,0)
6653-0^LN^1^^1
"TEMP","LA6247",7,1,542,0)
6654-8^LN^1^^1
"TEMP","LA6247",7,1,543,0)
6827-0^LN^1^^1
"TEMP","LA6247",7,1,544,0)
6932-8^LN^1^^1
"TEMP","LA6247",7,1,545,0)
6933-6^LN^1^^1
"TEMP","LA6247",7,1,546,0)
6975-7^LN^1^^1
"TEMP","LA6247",7,1,547,0)
6976-5^LN^1^^1
"TEMP","LA6247",7,1,548,0)
6977-3^LN^1^^1
"TEMP","LA6247",7,1,549,0)
6978-1^LN^1^^1
"TEMP","LA6247",7,1,550,0)
6979-9^LN^1^^1
"TEMP","LA6247",7,1,551,0)
6980-7^LN^1^^1
"TEMP","LA6247",7,1,552,0)
6981-5^LN^1^^1
"TEMP","LA6247",7,1,553,0)
6982-3^LN^1^^1
"TEMP","LA6247",7,1,554,0)
6983-1^LN^1^^1
"TEMP","LA6247",7,1,555,0)
6984-9^LN^1^^1
"TEMP","LA6247",7,1,556,0)
6985-6^LN^1^^1
"TEMP","LA6247",7,1,557,0)
6986-4^LN^1^^1
"TEMP","LA6247",7,1,558,0)
6987-2^LN^1^^1
"TEMP","LA6247",7,1,559,0)
6988-0^LN^1^^1
"TEMP","LA6247",7,1,560,0)
6989-8^LN^1^^1
"TEMP","LA6247",7,1,561,0)
6990-6^LN^1^^1
"TEMP","LA6247",7,1,562,0)
6991-4^LN^1^^1
"TEMP","LA6247",7,1,563,0)
6992-2^LN^1^^1
"TEMP","LA6247",7,1,564,0)
6993-0^LN^1^^1
"TEMP","LA6247",7,1,565,0)
6994-8^LN^1^^1
"TEMP","LA6247",7,1,566,0)
6995-5^LN^1^^1
"TEMP","LA6247",7,1,567,0)
6996-3^LN^1^^1
"TEMP","LA6247",7,1,568,0)
6997-1^LN^1^^1
"TEMP","LA6247",7,1,569,0)
6998-9^LN^1^^1
"TEMP","LA6247",7,1,570,0)
6999-7^LN^1^^1
"TEMP","LA6247",7,1,571,0)
7000-3^LN^1^^1
"TEMP","LA6247",7,1,572,0)
7001-1^LN^1^^1
"TEMP","LA6247",7,1,573,0)
7002-9^LN^1^^1
"TEMP","LA6247",7,1,574,0)
7003-7^LN^1^^1
"TEMP","LA6247",7,1,575,0)
7004-5^LN^1^^1
"TEMP","LA6247",7,1,576,0)
7005-2^LN^1^^1
"TEMP","LA6247",7,1,577,0)
7006-0^LN^1^^1
"TEMP","LA6247",7,1,578,0)
7007-8^LN^1^^1
"TEMP","LA6247",7,1,579,0)
7008-6^LN^1^^1
"TEMP","LA6247",7,1,580,0)
7009-4^LN^1^^1
"TEMP","LA6247",7,1,581,0)
7010-2^LN^1^^1
"TEMP","LA6247",7,1,582,0)
7011-0^LN^1^^1
"TEMP","LA6247",7,1,583,0)
7012-8^LN^1^^1
"TEMP","LA6247",7,1,584,0)
7013-6^LN^1^^1
"TEMP","LA6247",7,1,585,0)
7014-4^LN^1^^1
"TEMP","LA6247",7,1,586,0)
7015-1^LN^1^^1
"TEMP","LA6247",7,1,587,0)
7016-9^LN^1^^1
"TEMP","LA6247",7,1,588,0)
7017-7^LN^1^^1
"TEMP","LA6247",7,1,589,0)
7018-5^LN^1^^1
"TEMP","LA6247",7,1,590,0)
7019-3^LN^1^^1
"TEMP","LA6247",7,1,591,0)
7020-1^LN^1^^1
"TEMP","LA6247",7,1,592,0)
7021-9^LN^1^^1
"TEMP","LA6247",7,1,593,0)
7022-7^LN^1^^1
"TEMP","LA6247",7,1,594,0)
7023-5^LN^1^^1
"TEMP","LA6247",7,1,595,0)
7024-3^LN^1^^1
"TEMP","LA6247",7,1,596,0)
7025-0^LN^1^^1
"TEMP","LA6247",7,1,597,0)
7026-8^LN^1^^1
"TEMP","LA6247",7,1,598,0)
7027-6^LN^1^^1
"TEMP","LA6247",7,1,599,0)
7028-4^LN^1^^1
"TEMP","LA6247",7,1,600,0)
7029-2^LN^1^^1
"TEMP","LA6247",7,1,601,0)
7030-0^LN^1^^1
"TEMP","LA6247",7,1,602,0)
7031-8^LN^1^^1
"TEMP","LA6247",7,1,603,0)
7032-6^LN^1^^1
"TEMP","LA6247",7,1,604,0)
7033-4^LN^1^^1
"TEMP","LA6247",7,1,605,0)
7034-2^LN^1^^1
"TEMP","LA6247",7,1,606,0)
7035-9^LN^1^^1
"TEMP","LA6247",7,1,607,0)
7036-7^LN^1^^1
"TEMP","LA6247",7,1,608,0)
7037-5^LN^1^^1
"TEMP","LA6247",7,1,609,0)
7038-3^LN^1^^1
"TEMP","LA6247",7,1,610,0)
7039-1^LN^1^^1
"TEMP","LA6247",7,1,611,0)
7040-9^LN^1^^1
"TEMP","LA6247",7,1,612,0)
7041-7^LN^1^^1
"TEMP","LA6247",7,1,613,0)
7042-5^LN^1^^1
"TEMP","LA6247",7,1,614,0)
7043-3^LN^1^^1
"TEMP","LA6247",7,1,615,0)
7044-1^LN^1^^1
"TEMP","LA6247",7,1,616,0)
7045-8^LN^1^^1
"TEMP","LA6247",7,1,617,0)
7046-6^LN^1^^1
"TEMP","LA6247",7,1,618,0)
7047-4^LN^1^^1
"TEMP","LA6247",7,1,619,0)
7048-2^LN^1^^1
"TEMP","LA6247",7,1,620,0)
7049-0^LN^1^^1
"TEMP","LA6247",7,1,621,0)
7050-8^LN^1^^1
"TEMP","LA6247",7,1,622,0)
7051-6^LN^1^^1
"TEMP","LA6247",7,1,623,0)
7052-4^LN^1^^1
"TEMP","LA6247",7,1,624,0)
7053-2^LN^1^^1
"TEMP","LA6247",7,1,625,0)
7054-0^LN^1^^1
"TEMP","LA6247",7,1,626,0)
7055-7^LN^1^^1
"TEMP","LA6247",7,1,627,0)
7056-5^LN^1^^1
"TEMP","LA6247",7,1,628,0)
7057-3^LN^1^^1
"TEMP","LA6247",7,1,629,0)
7058-1^LN^1^^1
"TEMP","LA6247",7,1,630,0)
7059-9^LN^1^^1
"TEMP","LA6247",7,1,631,0)
8272-7^LN^1^^1
"TEMP","LA6247",7,1,632,0)
8273-5^LN^1^^1
"TEMP","LA6247",7,1,633,0)
8274-3^LN^1^^1
"TEMP","LA6247",7,1,634,0)
8275-0^LN^1^^1
"TEMP","LA6247",7,1,635,0)
8276-8^LN^1^^1
"TEMP","LA6247",7,1,636,0)
10653-4^LN^1^^1
"TEMP","LA6247",7,1,637,0)
10654-2^LN^1^^1
"TEMP","LA6247",7,1,638,0)
10697-1^LN^1^^1
"TEMP","LA6247",7,1,639,0)
10698-9^LN^1^^1
"TEMP","LA6247",7,1,640,0)
10720-1^LN^1^^1
"TEMP","LA6247",7,1,641,0)
10721-9^LN^1^^1
"TEMP","LA6247",7,1,642,0)
10868-8^LN^1^^1
"TEMP","LA6247",7,1,643,0)
11575-8^LN^1^^1
"TEMP","LA6247",7,1,644,0)
11576-6^LN^1^^1
"TEMP","LA6247",7,1,645,0)
11577-4^LN^1^^1
"TEMP","LA6247",7,1,646,0)
11578-2^LN^1^^1
"TEMP","LA6247",7,1,647,0)
13968-3^LN^1^^1
"TEMP","LA6247",7,1,648,0)
14332-1^LN^1^^1
"TEMP","LA6247",7,1,649,0)
15336-1^LN^1^^1
"TEMP","LA6247",7,1,650,0)
15337-9^LN^1^^1
"TEMP","LA6247",7,1,651,0)
15338-7^LN^1^^1
"TEMP","LA6247",7,1,652,0)
16099-4^LN^1^^1
"TEMP","LA6247",7,1,653,0)
16100-0^LN^1^^1
"TEMP","LA6247",7,1,654,0)
16320-4^LN^1^^1
"TEMP","LA6247",7,1,655,0)
16350-1^LN^1^^1
"TEMP","LA6247",7,1,656,0)
16386-5^LN^1^^1
"TEMP","LA6247",7,1,657,0)
16387-3^LN^1^^1
"TEMP","LA6247",7,1,658,0)
16421-0^LN^1^^1
"TEMP","LA6247",7,1,659,0)
16620-7^LN^1^^1
"TEMP","LA6247",7,1,660,0)
16623-1^LN^1^^1
"TEMP","LA6247",7,1,661,0)
16830-2^LN^1^^1
"TEMP","LA6247",7,1,662,0)
16841-9^LN^1^^1
"TEMP","LA6247",7,1,663,0)
17831-9^LN^1^^1
"TEMP","LA6247",7,1,664,0)
17832-7^LN^1^^1
"TEMP","LA6247",7,1,665,0)
18855-7^LN^1^^1
"TEMP","LA6247",7,1,666,0)
18857-3^LN^1^^1
"TEMP","LA6247",7,1,667,0)
18859-9^LN^1^^1
"TEMP","LA6247",7,1,668,0)
18860-7^LN^1^^1
"TEMP","LA6247",7,1,669,0)
18861-5^LN^1^^1
"TEMP","LA6247",7,1,670,0)
18862-3^LN^1^^1
"TEMP","LA6247",7,1,671,0)
18863-1^LN^1^^1
"TEMP","LA6247",7,1,672,0)
18864-9^LN^1^^1
"TEMP","LA6247",7,1,673,0)
18865-6^LN^1^^1
"TEMP","LA6247",7,1,674,0)
18866-4^LN^1^^1
"TEMP","LA6247",7,1,675,0)
18867-2^LN^1^^1
"TEMP","LA6247",7,1,676,0)
18868-0^LN^1^^1
"TEMP","LA6247",7,1,677,0)
18869-8^LN^1^^1
"TEMP","LA6247",7,1,678,0)
18870-6^LN^1^^1
"TEMP","LA6247",7,1,679,0)
18871-4^LN^1^^1
"TEMP","LA6247",7,1,680,0)
18872-2^LN^1^^1
"TEMP","LA6247",7,1,681,0)
18873-0^LN^1^^1
"TEMP","LA6247",7,1,682,0)
18874-8^LN^1^^1
"TEMP","LA6247",7,1,683,0)
18875-5^LN^1^^1
"TEMP","LA6247",7,1,684,0)
18876-3^LN^1^^1
"TEMP","LA6247",7,1,685,0)
18877-1^LN^1^^1
"TEMP","LA6247",7,1,686,0)
18878-9^LN^1^^1
"TEMP","LA6247",7,1,687,0)
18879-7^LN^1^^1
"TEMP","LA6247",7,1,688,0)
18880-5^LN^1^^1
"TEMP","LA6247",7,1,689,0)
18881-3^LN^1^^1
"TEMP","LA6247",7,1,690,0)
18882-1^LN^1^^1
"TEMP","LA6247",7,1,691,0)
18883-9^LN^1^^1
"TEMP","LA6247",7,1,692,0)
18884-7^LN^1^^1
"TEMP","LA6247",7,1,693,0)
18885-4^LN^1^^1
"TEMP","LA6247",7,1,694,0)
18886-2^LN^1^^1
"TEMP","LA6247",7,1,695,0)
18887-0^LN^1^^1
"TEMP","LA6247",7,1,696,0)
18888-8^LN^1^^1
"TEMP","LA6247",7,1,697,0)
18889-6^LN^1^^1
"TEMP","LA6247",7,1,698,0)
18890-4^LN^1^^1
"TEMP","LA6247",7,1,699,0)
18891-2^LN^1^^1
"TEMP","LA6247",7,1,700,0)
18892-0^LN^1^^1
"TEMP","LA6247",7,1,701,0)
18893-8^LN^1^^1
"TEMP","LA6247",7,1,702,0)
18894-6^LN^1^^1
"TEMP","LA6247",7,1,703,0)
18895-3^LN^1^^1
"TEMP","LA6247",7,1,704,0)
18896-1^LN^1^^1
"TEMP","LA6247",7,1,705,0)
18897-9^LN^1^^1
"TEMP","LA6247",7,1,706,0)
18898-7^LN^1^^1
"TEMP","LA6247",7,1,707,0)
18899-5^LN^1^^1
"TEMP","LA6247",7,1,708,0)
18900-1^LN^1^^1
"TEMP","LA6247",7,1,709,0)
18901-9^LN^1^^1
"TEMP","LA6247",7,1,710,0)
18902-7^LN^1^^1
"TEMP","LA6247",7,1,711,0)
18903-5^LN^1^^1
"TEMP","LA6247",7,1,712,0)
18904-3^LN^1^^1
"TEMP","LA6247",7,1,713,0)
18905-0^LN^1^^1
"TEMP","LA6247",7,1,714,0)
18906-8^LN^1^^1
"TEMP","LA6247",7,1,715,0)
18907-6^LN^1^^1
"TEMP","LA6247",7,1,716,0)
18908-4^LN^1^^1
"TEMP","LA6247",7,1,717,0)
18909-2^LN^1^^1
"TEMP","LA6247",7,1,718,0)
18910-0^LN^1^^1
"TEMP","LA6247",7,1,719,0)
18911-8^LN^1^^1
"TEMP","LA6247",7,1,720,0)
18912-6^LN^1^^1
"TEMP","LA6247",7,1,721,0)
18913-4^LN^1^^1
"TEMP","LA6247",7,1,722,0)
18914-2^LN^1^^1
"TEMP","LA6247",7,1,723,0)
18915-9^LN^1^^1
"TEMP","LA6247",7,1,724,0)
18916-7^LN^1^^1
"TEMP","LA6247",7,1,725,0)
18917-5^LN^1^^1
"TEMP","LA6247",7,1,726,0)
18918-3^LN^1^^1
"TEMP","LA6247",7,1,727,0)
18919-1^LN^1^^1
"TEMP","LA6247",7,1,728,0)
18920-9^LN^1^^1
"TEMP","LA6247",7,1,729,0)
18921-7^LN^1^^1
"TEMP","LA6247",7,1,730,0)
18922-5^LN^1^^1
"TEMP","LA6247",7,1,731,0)
18923-3^LN^1^^1
"TEMP","LA6247",7,1,732,0)
18924-1^LN^1^^1
"TEMP","LA6247",7,1,733,0)
18925-8^LN^1^^1
"TEMP","LA6247",7,1,734,0)
18926-6^LN^1^^1
"TEMP","LA6247",7,1,735,0)
18927-4^LN^1^^1
"TEMP","LA6247",7,1,736,0)
18928-2^LN^1^^1
"TEMP","LA6247",7,1,737,0)
18929-0^LN^1^^1
"TEMP","LA6247",7,1,738,0)
18930-8^LN^1^^1
"TEMP","LA6247",7,1,739,0)
18931-6^LN^1^^1
"TEMP","LA6247",7,1,740,0)
18932-4^LN^1^^1
"TEMP","LA6247",7,1,741,0)
18933-2^LN^1^^1
"TEMP","LA6247",7,1,742,0)
18934-0^LN^1^^1
"TEMP","LA6247",7,1,743,0)
18935-7^LN^1^^1
"TEMP","LA6247",7,1,744,0)
18936-5^LN^1^^1
"TEMP","LA6247",7,1,745,0)
18937-3^LN^1^^1
"TEMP","LA6247",7,1,746,0)
18938-1^LN^1^^1
"TEMP","LA6247",7,1,747,0)
18939-9^LN^1^^1
"TEMP","LA6247",7,1,748,0)
18940-7^LN^1^^1
"TEMP","LA6247",7,1,749,0)
18941-5^LN^1^^1
"TEMP","LA6247",7,1,750,0)
18942-3^LN^1^^1
"TEMP","LA6247",7,1,751,0)
18943-1^LN^1^^1
"TEMP","LA6247",7,1,752,0)
18944-9^LN^1^^1
"TEMP","LA6247",7,1,753,0)
18945-6^LN^1^^1
"TEMP","LA6247",7,1,754,0)
18946-4^LN^1^^1
"TEMP","LA6247",7,1,755,0)
18947-2^LN^1^^1
"TEMP","LA6247",7,1,756,0)
18948-0^LN^1^^1
"TEMP","LA6247",7,1,757,0)
18949-8^LN^1^^1
"TEMP","LA6247",7,1,758,0)
18950-6^LN^1^^1
"TEMP","LA6247",7,1,759,0)
18951-4^LN^1^^1
"TEMP","LA6247",7,1,760,0)
18952-2^LN^1^^1
"TEMP","LA6247",7,1,761,0)
18953-0^LN^1^^1
"TEMP","LA6247",7,1,762,0)
18954-8^LN^1^^1
"TEMP","LA6247",7,1,763,0)
18955-5^LN^1^^1
"TEMP","LA6247",7,1,764,0)
18956-3^LN^1^^1
"TEMP","LA6247",7,1,765,0)
18957-1^LN^1^^1
"TEMP","LA6247",7,1,766,0)
18958-9^LN^1^^1
"TEMP","LA6247",7,1,767,0)
18959-7^LN^1^^1
"TEMP","LA6247",7,1,768,0)
18960-5^LN^1^^1
"TEMP","LA6247",7,1,769,0)
18961-3^LN^1^^1
"TEMP","LA6247",7,1,770,0)
18962-1^LN^1^^1
"TEMP","LA6247",7,1,771,0)
18963-9^LN^1^^1
"TEMP","LA6247",7,1,772,0)
18964-7^LN^1^^1
"TEMP","LA6247",7,1,773,0)
18965-4^LN^1^^1
"TEMP","LA6247",7,1,774,0)
18966-2^LN^1^^1
"TEMP","LA6247",7,1,775,0)
18967-0^LN^1^^1
"TEMP","LA6247",7,1,776,0)
18968-8^LN^1^^1
"TEMP","LA6247",7,1,777,0)
18969-6^LN^1^^1
"TEMP","LA6247",7,1,778,0)
18970-4^LN^1^^1
"TEMP","LA6247",7,1,779,0)
18971-2^LN^1^^1
"TEMP","LA6247",7,1,780,0)
18972-0^LN^1^^1
"TEMP","LA6247",7,1,781,0)
18973-8^LN^1^^1
"TEMP","LA6247",7,1,782,0)
18974-6^LN^1^^1
"TEMP","LA6247",7,1,783,0)
18975-3^LN^1^^1
"TEMP","LA6247",7,1,784,0)
18976-1^LN^1^^1
"TEMP","LA6247",7,1,785,0)
18977-9^LN^1^^1
"TEMP","LA6247",7,1,786,0)
18978-7^LN^1^^1
"TEMP","LA6247",7,1,787,0)
18979-5^LN^1^^1
"TEMP","LA6247",7,1,788,0)
18980-3^LN^1^^1
"TEMP","LA6247",7,1,789,0)
18981-1^LN^1^^1
"TEMP","LA6247",7,1,790,0)
18982-9^LN^1^^1
"TEMP","LA6247",7,1,791,0)
18983-7^LN^1^^1
"TEMP","LA6247",7,1,792,0)
18984-5^LN^1^^1
"TEMP","LA6247",7,1,793,0)
18985-2^LN^1^^1
"TEMP","LA6247",7,1,794,0)
18986-0^LN^1^^1
"TEMP","LA6247",7,1,795,0)
18987-8^LN^1^^1
"TEMP","LA6247",7,1,796,0)
18988-6^LN^1^^1
"TEMP","LA6247",7,1,797,0)
18989-4^LN^1^^1
"TEMP","LA6247",7,1,798,0)
18990-2^LN^1^^1
"TEMP","LA6247",7,1,799,0)
18991-0^LN^1^^1
"TEMP","LA6247",7,1,800,0)
18992-8^LN^1^^1
"TEMP","LA6247",7,1,801,0)
18993-6^LN^1^^1
"TEMP","LA6247",7,1,802,0)
18994-4^LN^1^^1
"TEMP","LA6247",7,1,803,0)
18995-1^LN^1^^1
"TEMP","LA6247",7,1,804,0)
18996-9^LN^1^^1
"TEMP","LA6247",7,1,805,0)
18997-7^LN^1^^1
"TEMP","LA6247",7,1,806,0)
18998-5^LN^1^^1
"TEMP","LA6247",7,1,807,0)
18999-3^LN^1^^1
"TEMP","LA6247",7,1,808,0)
19000-9^LN^1^^1
"TEMP","LA6247",7,1,809,0)
19001-7^LN^1^^1
"TEMP","LA6247",7,1,810,0)
19149-4^LN^1^^1
"TEMP","LA6247",7,1,811,0)
20388-5^LN^1^^1
"TEMP","LA6247",7,1,812,0)
20389-3^LN^1^^1
"TEMP","LA6247",7,1,813,0)
20390-1^LN^1^^1
"TEMP","LA6247",7,1,814,0)
20391-9^LN^1^^1
"TEMP","LA6247",7,1,815,0)
20396-8^LN^1^^1
"TEMP","LA6247",7,1,816,0)
20397-6^LN^1^^1
"TEMP","LA6247",7,1,817,0)
20460-2^LN^1^^1
"TEMP","LA6247",7,1,818,0)
20629-2^LN^1^^1
"TEMP","LA6247",7,1,819,0)
21070-8^LN^1^^1
"TEMP","LA6247",7,1,820,0)
21316-5^LN^1^^1
"TEMP","LA6247",7,1,821,0)
21367-8^LN^1^^1
"TEMP","LA6247",7,1,822,0)
23627-3^LN^1^^1
"TEMP","LA6247",7,1,823,0)
23628-1^LN^1^^1
"TEMP","LA6247",7,1,824,0)
23629-9^LN^1^^1
"TEMP","LA6247",7,1,825,0)
23636-4^LN^1^^1
"TEMP","LA6247",7,1,826,0)
23637-2^LN^1^^1
"TEMP","LA6247",7,1,827,0)
23638-0^LN^1^^1
"TEMP","LA6247",7,1,828,0)
23639-8^LN^1^^1
"TEMP","LA6247",7,1,829,0)
23640-6^LN^1^^1
"TEMP","LA6247",7,1,830,0)
23641-4^LN^1^^1
"TEMP","LA6247",7,1,831,0)
23642-2^LN^1^^1
"TEMP","LA6247",7,1,832,0)
23643-0^LN^1^^1
"TEMP","LA6247",7,1,833,0)
23658-8^LN^1^^1
"TEMP","LA6247",7,1,834,0)
23659-6^LN^1^^1
"TEMP","LA6247",7,1,835,0)
23709-9^LN^1^^1
"TEMP","LA6247",7,1,836,0)
23712-3^LN^1^^1
"TEMP","LA6247",7,1,837,0)
23740-4^LN^1^^1
"TEMP","LA6247",7,1,838,0)
23817-0^LN^1^^1
"TEMP","LA6247",7,1,839,0)
23818-8^LN^1^^1
"TEMP","LA6247",7,1,840,0)
23925-1^LN^1^^1
"TEMP","LA6247",7,1,841,0)
25411-0^LN^1^^1
"TEMP","LA6247",7,1,842,0)
25452-4^LN^1^^1
"TEMP","LA6247",7,1,843,0)
25595-0^LN^1^^1
"TEMP","LA6247",7,1,844,0)
25596-8^LN^1^^1
"TEMP","LA6247",7,1,845,0)
25597-6^LN^1^^1
"TEMP","LA6247",7,1,846,0)
25607-3^LN^1^^1
"TEMP","LA6247",7,1,847,0)
25608-1^LN^1^^1
"TEMP","LA6247",7,1,848,0)
25637-0^LN^1^^1
"TEMP","LA6247",7,1,849,0)
25653-7^LN^1^^1
"TEMP","LA6247",7,1,850,0)
25702-2^LN^1^^1
"TEMP","LA6247",7,1,851,0)
25722-0^LN^1^^1
"TEMP","LA6247",7,1,852,0)
25723-8^LN^1^^1
"TEMP","LA6247",7,1,853,0)
29254-0^LN^1^^1
"TEMP","LA6247",7,1,854,0)
29255-7^LN^1^^1
"TEMP","LA6247",7,1,855,0)
29258-1^LN^1^^1
"TEMP","LA6247",7,1,856,0)
30298-4^LN^1^^1
"TEMP","LA6247",7,1,857,0)
30299-2^LN^1^^1
"TEMP","LA6247",7,1,858,0)
30300-8^LN^1^^1
"TEMP","LA6247",7,1,859,0)
30301-6^LN^1^^1
"TEMP","LA6247",7,1,860,0)
30302-4^LN^1^^1
"TEMP","LA6247",7,1,861,0)
30303-2^LN^1^^1
"TEMP","LA6247",7,1,862,0)
30304-0^LN^1^^1
"TEMP","LA6247",7,1,863,0)
30305-7^LN^1^^1
"TEMP","LA6247",7,1,864,0)
30306-5^LN^1^^1
"TEMP","LA6247",7,1,865,0)
30307-3^LN^1^^1
"TEMP","LA6247",7,1,866,0)
30308-1^LN^1^^1
"TEMP","LA6247",7,1,867,0)
30309-9^LN^1^^1
"TEMP","LA6247",7,1,868,0)
30310-7^LN^1^^1
"TEMP","LA6247",7,1,869,0)
30311-5^LN^1^^1
"TEMP","LA6247",7,1,870,0)
31036-7^LN^1^^1
"TEMP","LA6247",7,1,871,0)
31037-5^LN^1^^1
"TEMP","LA6247",7,1,872,0)
31038-3^LN^1^^1
"TEMP","LA6247",7,1,873,0)
31039-1^LN^1^^1
"TEMP","LA6247",7,1,874,0)
31040-9^LN^1^^1
"TEMP","LA6247",7,1,875,0)
31041-7^LN^1^^1
"TEMP","LA6247",7,1,876,0)
31042-5^LN^1^^1
"TEMP","LA6247",7,1,877,0)
31043-3^LN^1^^1
"TEMP","LA6247",7,1,878,0)
31138-1^LN^1^^1
"TEMP","LA6247",7,1,879,0)
31139-9^LN^1^^1
"TEMP","LA6247",7,1,880,0)
31140-7^LN^1^^1
"TEMP","LA6247",7,1,881,0)
31141-5^LN^1^^1
"TEMP","LA6247",7,1,882,0)
31142-3^LN^1^^1
"TEMP","LA6247",7,1,883,0)
31143-1^LN^1^^1
"TEMP","LA6247",7,1,884,0)
32372-5^LN^1^^1
"TEMP","LA6247",7,1,885,0)
32373-3^LN^1^^1
"TEMP","LA6247",7,1,886,0)
32374-1^LN^1^^1
"TEMP","LA6247",7,1,887,0)
32375-8^LN^1^^1
"TEMP","LA6247",7,1,888,0)
32376-6^LN^1^^1
"TEMP","LA6247",7,1,889,0)
32377-4^LN^1^^1
"TEMP","LA6247",7,1,890,0)
32378-2^LN^1^^1
"TEMP","LA6247",7,1,891,0)
32379-0^LN^1^^1
"TEMP","LA6247",7,1,892,0)
32380-8^LN^1^^1
"TEMP","LA6247",7,1,893,0)
32381-6^LN^1^^1
"TEMP","LA6247",7,1,894,0)
32382-4^LN^1^^1
"TEMP","LA6247",7,1,895,0)
32383-2^LN^1^^1
"TEMP","LA6247",7,1,896,0)
32384-0^LN^1^^1
"TEMP","LA6247",7,1,897,0)
32597-7^LN^1^^1
"TEMP","LA6247",7,1,898,0)
32603-3^LN^1^^1
"TEMP","LA6247",7,1,899,0)
33284-1^LN^1^^1
"TEMP","LA6247",7,1,900,0)
33298-1^LN^1^^1
"TEMP","LA6247",7,1,901,0)
33332-8^LN^1^^1
"TEMP","LA6247",7,1,902,0)
33333-6^LN^1^^1
"TEMP","LA6247",7,1,903,0)
33334-4^LN^1^^1
"TEMP","LA6247",7,1,904,0)
33627-1^LN^1^^1
"TEMP","LA6247",7,1,905,0)
33628-9^LN^1^^1
"TEMP","LA6247",7,1,906,0)
35754-1^LN^1^^1
"TEMP","LA6247",7,1,907,0)
35755-8^LN^1^^1
"TEMP","LA6247",7,1,908,0)
35756-6^LN^1^^1
"TEMP","LA6247",7,1,909,0)
35757-4^LN^1^^1
"TEMP","LA6247",7,1,910,0)
35758-2^LN^1^^1
"TEMP","LA6247",7,1,911,0)
35759-0^LN^1^^1
"TEMP","LA6247",7,1,912,0)
35760-8^LN^1^^1
"TEMP","LA6247",7,1,913,0)
35761-6^LN^1^^1
"TEMP","LA6247",7,1,914,0)
35762-4^LN^1^^1
"TEMP","LA6247",7,1,915,0)
35763-2^LN^1^^1
"TEMP","LA6247",7,1,916,0)
35764-0^LN^1^^1
"TEMP","LA6247",7,1,917,0)
35765-7^LN^1^^1
"TEMP","LA6247",7,1,918,0)
35766-5^LN^1^^1
"TEMP","LA6247",7,1,919,0)
35767-3^LN^1^^1
"TEMP","LA6247",7,1,920,0)
35768-1^LN^1^^1
"TEMP","LA6247",7,1,921,0)
35769-9^LN^1^^1
"TEMP","LA6247",7,1,922,0)
35770-7^LN^1^^1
"TEMP","LA6247",7,1,923,0)
35771-5^LN^1^^1
"TEMP","LA6247",7,1,924,0)
35772-3^LN^1^^1
"TEMP","LA6247",7,1,925,0)
35773-1^LN^1^^1
"TEMP","LA6247",7,1,926,0)
35774-9^LN^1^^1
"TEMP","LA6247",7,1,927,0)
35775-6^LN^1^^1
"TEMP","LA6247",7,1,928,0)
35776-4^LN^1^^1
"TEMP","LA6247",7,1,929,0)
35777-2^LN^1^^1
"TEMP","LA6247",7,1,930,0)
35778-0^LN^1^^1
"TEMP","LA6247",7,1,931,0)
35779-8^LN^1^^1
"TEMP","LA6247",7,1,932,0)
35780-6^LN^1^^1
"TEMP","LA6247",7,1,933,0)
35781-4^LN^1^^1
"TEMP","LA6247",7,1,934,0)
35782-2^LN^1^^1
"TEMP","LA6247",7,1,935,0)
35783-0^LN^1^^1
"TEMP","LA6247",7,1,936,0)
35784-8^LN^1^^1
"TEMP","LA6247",7,1,937,0)
35785-5^LN^1^^1
"TEMP","LA6247",7,1,938,0)
35786-3^LN^1^^1
"TEMP","LA6247",7,1,939,0)
35787-1^LN^1^^1
"TEMP","LA6247",7,1,940,0)
35788-9^LN^1^^1
"TEMP","LA6247",7,1,941,0)
35789-7^LN^1^^1
"TEMP","LA6247",7,1,942,0)
35790-5^LN^1^^1
"TEMP","LA6247",7,1,943,0)
35791-3^LN^1^^1
"TEMP","LA6247",7,1,944,0)
35792-1^LN^1^^1
"TEMP","LA6247",7,1,945,0)
35793-9^LN^1^^1
"TEMP","LA6247",7,1,946,0)
35794-7^LN^1^^1
"TEMP","LA6247",7,1,947,0)
35795-4^LN^1^^1
"TEMP","LA6247",7,1,948,0)
35796-2^LN^1^^1
"TEMP","LA6247",7,1,949,0)
35797-0^LN^1^^1
"TEMP","LA6247",7,1,950,0)
35798-8^LN^1^^1
"TEMP","LA6247",7,1,951,0)
35799-6^LN^1^^1
"TEMP","LA6247",7,1,952,0)
35800-2^LN^1^^1
"TEMP","LA6247",7,1,953,0)
35801-0^LN^1^^1
"TEMP","LA6247",7,1,954,0)
35802-8^LN^1^^1
"TEMP","LA6247",7,1,955,0)
35803-6^LN^1^^1
"TEMP","LA6247",7,1,956,0)
35804-4^LN^1^^1
"TEMP","LA6247",7,1,957,0)
35805-1^LN^1^^1
"TEMP","LA6247",7,1,958,0)
35806-9^LN^1^^1
"TEMP","LA6247",7,1,959,0)
35807-7^LN^1^^1
"TEMP","LA6247",7,1,960,0)
35808-5^LN^1^^1
"TEMP","LA6247",7,1,961,0)
35809-3^LN^1^^1
"TEMP","LA6247",7,1,962,0)
35810-1^LN^1^^1
"TEMP","LA6247",7,1,963,0)
35811-9^LN^1^^1
"TEMP","LA6247",7,1,964,0)
35812-7^LN^1^^1
"TEMP","LA6247",7,1,965,0)
35813-5^LN^1^^1
"TEMP","LA6247",7,1,966,0)
35814-3^LN^1^^1
"TEMP","LA6247",7,1,967,0)
35815-0^LN^1^^1
"TEMP","LA6247",7,1,968,0)
35816-8^LN^1^^1
"TEMP","LA6247",7,1,969,0)
35817-6^LN^1^^1
"TEMP","LA6247",7,1,970,0)
35818-4^LN^1^^1
"TEMP","LA6247",7,1,971,0)
35819-2^LN^1^^1
"TEMP","LA6247",7,1,972,0)
35820-0^LN^1^^1
"TEMP","LA6247",7,1,973,0)
35821-8^LN^1^^1
"TEMP","LA6247",7,1,974,0)
35822-6^LN^1^^1
"TEMP","LA6247",7,1,975,0)
35823-4^LN^1^^1
"TEMP","LA6247",7,1,976,0)
35824-2^LN^1^^1
"TEMP","LA6247",7,1,977,0)
35825-9^LN^1^^1
"TEMP","LA6247",7,1,978,0)
35826-7^LN^1^^1
"TEMP","LA6247",7,1,979,0)
35827-5^LN^1^^1
"TEMP","LA6247",7,1,980,0)
35828-3^LN^1^^1
"TEMP","LA6247",7,1,981,0)
35829-1^LN^1^^1
"TEMP","LA6247",7,1,982,0)
35830-9^LN^1^^1
"TEMP","LA6247",7,1,983,0)
35831-7^LN^1^^1
"TEMP","LA6247",7,1,984,0)
35832-5^LN^1^^1
"TEMP","LA6247",7,1,985,0)
35833-3^LN^1^^1
"TEMP","LA6247",7,1,986,0)
35834-1^LN^1^^1
"TEMP","LA6247",7,1,987,0)
35835-8^LN^1^^1
"TEMP","LA6247",7,1,988,0)
35836-6^LN^1^^1
"TEMP","LA6247",7,1,989,0)
35837-4^LN^1^^1
"TEMP","LA6247",7,1,990,0)
35838-2^LN^1^^1
"TEMP","LA6247",7,1,991,0)
35839-0^LN^1^^1
"TEMP","LA6247",7,1,992,0)
35840-8^LN^1^^1
"TEMP","LA6247",7,1,993,0)
35841-6^LN^1^^1
"TEMP","LA6247",7,1,994,0)
35842-4^LN^1^^1
"TEMP","LA6247",7,1,995,0)
35843-2^LN^1^^1
"TEMP","LA6247",7,1,996,0)
35844-0^LN^1^^1
"TEMP","LA6247",7,1,997,0)
35845-7^LN^1^^1
"TEMP","LA6247",7,1,998,0)
35846-5^LN^1^^1
"TEMP","LA6247",7,1,999,0)
35847-3^LN^1^^1
"TEMP","LA6247",7,1,1000,0)
35848-1^LN^1^^1
"TEMP","LA6247",7,1,1001,0)
35849-9^LN^1^^1
"TEMP","LA6247",7,1,1002,0)
35850-7^LN^1^^1
"TEMP","LA6247",7,1,1003,0)
35851-5^LN^1^^1
"TEMP","LA6247",7,1,1004,0)
35852-3^LN^1^^1
"TEMP","LA6247",7,1,1005,0)
35853-1^LN^1^^1
"TEMP","LA6247",7,1,1006,0)
35854-9^LN^1^^1
"TEMP","LA6247",7,1,1007,0)
35855-6^LN^1^^1
"TEMP","LA6247",7,1,1008,0)
35856-4^LN^1^^1
"TEMP","LA6247",7,1,1009,0)
35857-2^LN^1^^1
"TEMP","LA6247",7,1,1010,0)
35858-0^LN^1^^1
"TEMP","LA6247",7,1,1011,0)
35859-8^LN^1^^1
"TEMP","LA6247",7,1,1012,0)
35860-6^LN^1^^1
"TEMP","LA6247",7,1,1013,0)
35861-4^LN^1^^1
"TEMP","LA6247",7,1,1014,0)
35862-2^LN^1^^1
"TEMP","LA6247",7,1,1015,0)
35863-0^LN^1^^1
"TEMP","LA6247",7,1,1016,0)
35872-1^LN^1^^1
"TEMP","LA6247",7,1,1017,0)
35873-9^LN^1^^1
"TEMP","LA6247",7,1,1018,0)
35874-7^LN^1^^1
"TEMP","LA6247",8,0)
PARASITE^MI^9199^41
"TEMP","LA6247",8,1,1,0)
673-4^LN^1^^1
"TEMP","LA6247",8,1,2,0)
6674-6^LN^1^^1
"TEMP","LA6247",8,1,3,0)
9785-7^LN^1^^1
"TEMP","LA6247",8,1,4,0)
10701-1^LN^1^^1
"TEMP","LA6247",8,1,5,0)
10702-9^LN^1^^1
"TEMP","LA6247",8,1,6,0)
10703-7^LN^1^^1
"TEMP","LA6247",8,1,7,0)
10704-5^LN^1^^1
"TEMP","LA6247",8,1,8,0)
10855-5^LN^1^^1
"TEMP","LA6247",8,1,9,0)
13319-9^LN^1^^1
"TEMP","LA6247",8,1,10,0)
13320-7^LN^1^^1
"TEMP","LA6247",8,1,11,0)
18307-9^LN^1^^1
"TEMP","LA6247",8,1,12,0)
18493-7^LN^1^^1
"TEMP","LA6247",8,1,13,0)
18494-5^LN^1^^1
"TEMP","LA6247",8,1,14,0)
18495-2^LN^1^^1
"TEMP","LA6247",8,1,15,0)
18496-0^LN^1^^1
"TEMP","LA6247",8,1,16,0)
20924-7^LN^1^^1
"TEMP","LA6247",8,1,17,0)
20925-4^LN^1^^1
"TEMP","LA6247",8,1,18,0)
20926-2^LN^1^^1
"TEMP","LA6247",8,1,19,0)
20932-0^LN^1^^1
"TEMP","LA6247",8,1,20,0)
20933-8^LN^1^^1
"TEMP","LA6247",8,1,21,0)
24429-3^LN^1^^1
"TEMP","LA6247",8,1,22,0)
26885-4^LN^1^^1
"TEMP","LA6247",8,1,23,0)
32357-6^LN^1^^1
"TEMP","LA6247",8,1,24,0)
38402-4^LN^1^^1
"TEMP","LA6247",8,1,25,0)
38416-4^LN^1^^1
"TEMP","LA6247",8,1,29,0)
637-9^LN^1^^1
"TEMP","LA6247",9,0)
FUNGUS^MI^9203
"TEMP","LA6247",9,1,1,0)
568-6^LN^1^^1
"TEMP","LA6247",9,1,2,0)
569-4^LN^1^^1
"TEMP","LA6247",9,1,3,0)
570-2^LN^1^^1
"TEMP","LA6247",9,1,4,0)
571-0^LN^1^^1
"TEMP","LA6247",9,1,5,0)
572-8^LN^1^^1
"TEMP","LA6247",9,1,6,0)
573-6^LN^1^^1
"TEMP","LA6247",9,1,7,0)
574-4^LN^1^^1
"TEMP","LA6247",9,1,8,0)
575-1^LN^1^^1
"TEMP","LA6247",9,1,9,0)
576-9^LN^1^^1
"TEMP","LA6247",9,1,10,0)
577-7^LN^1^^1
"TEMP","LA6247",9,1,11,0)
578-5^LN^1^^1
"TEMP","LA6247",9,1,12,0)
579-3^LN^1^^1
"TEMP","LA6247",9,1,13,0)
580-1^LN^1^^1
"TEMP","LA6247",9,1,14,0)
601-5^LN^1^^1
"TEMP","LA6247",9,1,15,0)
6409-7^LN^1^^1
"TEMP","LA6247",9,1,16,0)
10668-2^LN^1^^1
"TEMP","LA6247",9,1,17,0)
10852-2^LN^1^^1
"TEMP","LA6247",9,1,18,0)
15378-3^LN^1^^1
"TEMP","LA6247",9,1,19,0)
17947-3^LN^1^^1
"TEMP","LA6247",9,1,20,0)
17948-1^LN^1^^1
"TEMP","LA6247",9,1,21,0)
17949-9^LN^1^^1
"TEMP","LA6247",9,1,22,0)
24009-3^LN^1^^1
"TEMP","LA6247",9,1,23,0)
27414-2^LN^1^^1
"TEMP","LA6247",9,1,24,0)
613-0^LN^1^^1
"TEMP","LA6247",9,1,25,0)
10666-6^LN^1^^1
"TEMP","LA6247",9,1,26,0)
10667-4^LN^1^^1
"TEMP","LA6247",9,1,27,0)
10669-0^LN^1^^1
"TEMP","LA6247",9,1,28,0)
10755-7^LN^1^^1
"TEMP","LA6247",9,1,29,0)
21003-9^LN^1^^1
"TEMP","LA6247",9,1,30,0)
32809-6^LN^1^^1
"TEMP","LA6247",9,1,31,0)
33039-9^LN^1^^1
"TEMP","LA6247",10,0)
BACTERIA COLONY COUNT^MI^9283
"TEMP","LA6247",10,1,1,0)
564-5^LN^1^^1
"TEMP","LA6247",10,1,2,0)
565-2^LN^1^^1
"TEMP","LA6247",10,1,3,0)
10638-5^LN^1^^1
"TEMP","LA6247",10,1,5,0)
19090-0^LN^1^^1
"TEMP","LA6247",10,1,6,0)
19091-8^LN^1^^1
"TEMP","LA6247",10,1,8,0)
20566-6^LN^1^^1
"TEMP","LA6247",10,1,9,0)
20772-0^LN^1^^1
"TEMP","LA6247",10,1,10,0)
20773-8^LN^1^^1
"TEMP","LA6247",10,1,11,0)
20775-3^LN^1^^1
"TEMP","LA6247",10,1,12,0)
20866-0^LN^1^^1
"TEMP","LA6247",10,1,13,0)
30121-8^LN^1^^1
"TEMP","LA6247",11,0)
FUNGAL COLONY COUNT^MI^9260
"TEMP","LA6247",11,1,1,0)
10665-8^LN^1^^1
"TEMP","LA6247",11,1,2,0)
19101-5^LN^1^^1
"TEMP","LA6247",11,1,3,0)
87723.0000^99VA64^1^^1
"TEMP","LA6247",12,0)
PARASITE REPORT REMARK^MI^9259^8
"TEMP","LA6247",12,1,5,0)
93929.0000^99VA64^1^^1
"TEMP","LA6247",13,0)
PARASITE STAGE^MI^9254
"TEMP","LA6247",13,1,2,0)
92930.0000^99VA64^1^^1
"TEMP","LA6247",14,0)
PARASITE STAGE QUANTITY^MI^9256
"TEMP","LA6247",14,1,1,0)
93997.0000^99VA64^1^^1
"TEMP","LA6247",15,0)
FUNGAL REPORT REMARK^MI^9346
"TEMP","LA6247",15,1,1,0)
93930.0000^99VA64^1^^1
"TEMP","LA6247",16,0)
URINE SCREEN^MI^9191
"TEMP","LA6247",16,1,1,0)
630-4^LN^1^^1
"TEMP","LA6247",16,1,2,0)
93948.0000^99VA64^1^^1
"TEMP","LA6247",17,0)
SPUTUM SCREEN^MI^9192
"TEMP","LA6247",17,1,1,0)
6460-0^LN^1^^1
"TEMP","LA6247",17,1,2,0)
93949.0000^99VA64^1^^1
"TEMP","LA6247",20,0)
MYCOBACTERIA COLONY COUNT^MI^9274
"TEMP","LA6247",21,0)
MYCOBACTERIA SUSCEPTIBILITY^MI^9333
"TEMP","LA6247",21,1,1,0)
87568.0000^99VA64^1^^1
"TEMP","LA6247",21,1,2,0)
20373-7^LN^1^^1
"TEMP","LA6247",21,1,3,0)
20374-5^LN^1^^1
"TEMP","LA6247",21,1,4,0)
20375-2^LN^1^^1
"TEMP","LA6247",21,1,5,0)
20376-0^LN^1^^1
"TEMP","LA6247",21,1,6,0)
20377-8^LN^1^^1
"TEMP","LA6247",21,1,7,0)
20378-6^LN^1^^1
"TEMP","LA6247",21,1,8,0)
20379-4^LN^1^^1
"TEMP","LA6247",21,1,9,0)
20380-2^LN^1^^1
"TEMP","LA6247",21,1,10,0)
20381-0^LN^1^^1
"TEMP","LA6247",21,1,11,0)
20382-8^LN^1^^1
"TEMP","LA6247",21,1,12,0)
20383-6^LN^1^^1
"TEMP","LA6247",21,1,13,0)
20384-4^LN^1^^1
"TEMP","LA6247",21,1,14,0)
20385-1^LN^1^^1
"TEMP","LA6247",21,1,15,0)
20386-9^LN^1^^1
"TEMP","LA6247",21,1,16,0)
20387-7^LN^1^^1
"TEMP","LA6247",21,1,17,0)
20461-0^LN^1^^1
"TEMP","LA6247",21,1,18,0)
20462-8^LN^1^^1
"TEMP","LA6247",21,1,19,0)
23607-5^LN^1^^1
"TEMP","LA6247",21,1,20,0)
23608-3^LN^1^^1
"TEMP","LA6247",21,1,21,0)
23609-1^LN^1^^1
"TEMP","LA6247",21,1,22,0)
23610-9^LN^1^^1
"TEMP","LA6247",21,1,23,0)
23611-7^LN^1^^1
"TEMP","LA6247",21,1,24,0)
23612-5^LN^1^^1
"TEMP","LA6247",21,1,25,0)
23613-3^LN^1^^1
"TEMP","LA6247",21,1,26,0)
23614-1^LN^1^^1
"TEMP","LA6247",21,1,27,0)
23615-8^LN^1^^1
"TEMP","LA6247",21,1,28,0)
23616-6^LN^1^^1
"TEMP","LA6247",21,1,29,0)
23617-4^LN^1^^1
"TEMP","LA6247",21,1,30,0)
23618-2^LN^1^^1
"TEMP","LA6247",21,1,31,0)
23619-0^LN^1^^1
"TEMP","LA6247",21,1,32,0)
23620-8^LN^1^^1
"TEMP","LA6247",21,1,33,0)
23621-6^LN^1^^1
"TEMP","LA6247",21,1,34,0)
23622-4^LN^1^^1
"TEMP","LA6247",21,1,35,0)
23623-2^LN^1^^1
"TEMP","LA6247",21,1,36,0)
23624-0^LN^1^^1
"TEMP","LA6247",21,1,37,0)
23625-7^LN^1^^1
"TEMP","LA6247",21,1,38,0)
23626-5^LN^1^^1
"TEMP","LA6247",21,1,39,0)
23630-7^LN^1^^1
"TEMP","LA6247",21,1,40,0)
23631-5^LN^1^^1
"TEMP","LA6247",21,1,41,0)
23632-3^LN^1^^1
"TEMP","LA6247",21,1,42,0)
23633-1^LN^1^^1
"TEMP","LA6247",21,1,43,0)
23947-5^LN^1^^1
"TEMP","LA6247",21,1,44,0)
23948-3^LN^1^^1
"TEMP","LA6247",21,1,45,0)
23949-1^LN^1^^1
"TEMP","LA6247",21,1,46,0)
25174-4^LN^1^^1
"TEMP","LA6247",21,1,47,0)
25175-1^LN^1^^1
"TEMP","LA6247",21,1,48,0)
25176-9^LN^1^^1
"TEMP","LA6247",21,1,49,0)
25177-7^LN^1^^1
"TEMP","LA6247",21,1,50,0)
25178-5^LN^1^^1
"TEMP","LA6247",21,1,51,0)
25179-3^LN^1^^1
"TEMP","LA6247",21,1,52,0)
25180-1^LN^1^^1
"TEMP","LA6247",21,1,53,0)
25181-9^LN^1^^1
"TEMP","LA6247",21,1,54,0)
25182-7^LN^1^^1
"TEMP","LA6247",21,1,55,0)
25183-5^LN^1^^1
"TEMP","LA6247",21,1,56,0)
25184-3^LN^1^^1
"TEMP","LA6247",21,1,57,0)
25185-0^LN^1^^1
"TEMP","LA6247",21,1,58,0)
25186-8^LN^1^^1
"TEMP","LA6247",21,1,59,0)
25187-6^LN^1^^1
"TEMP","LA6247",21,1,60,0)
25188-4^LN^1^^1
"TEMP","LA6247",21,1,61,0)
25189-2^LN^1^^1
"TEMP","LA6247",21,1,62,0)
25190-0^LN^1^^1
"TEMP","LA6247",21,1,63,0)
25191-8^LN^1^^1
"TEMP","LA6247",21,1,64,0)
25192-6^LN^1^^1
"TEMP","LA6247",21,1,65,0)
25194-2^LN^1^^1
"TEMP","LA6247",21,1,66,0)
25195-9^LN^1^^1
"TEMP","LA6247",21,1,67,0)
25196-7^LN^1^^1
"TEMP","LA6247",21,1,68,0)
25198-3^LN^1^^1
"TEMP","LA6247",21,1,69,0)
25199-1^LN^1^^1
"TEMP","LA6247",21,1,70,0)
25200-7^LN^1^^1
"TEMP","LA6247",21,1,71,0)
25201-5^LN^1^^1
"TEMP","LA6247",21,1,72,0)
25202-3^LN^1^^1
"TEMP","LA6247",21,1,73,0)
25203-1^LN^1^^1
"TEMP","LA6247",21,1,74,0)
25204-9^LN^1^^1
"TEMP","LA6247",21,1,75,0)
25205-6^LN^1^^1
"TEMP","LA6247",21,1,76,0)
25206-4^LN^1^^1
"TEMP","LA6247",21,1,77,0)
25207-2^LN^1^^1
"TEMP","LA6247",21,1,78,0)
25208-0^LN^1^^1
"TEMP","LA6247",21,1,79,0)
25209-8^LN^1^^1
"TEMP","LA6247",21,1,80,0)
25210-6^LN^1^^1
"TEMP","LA6247",21,1,81,0)
25211-4^LN^1^^1
"TEMP","LA6247",21,1,82,0)
25212-2^LN^1^^1
"TEMP","LA6247",21,1,83,0)
25213-0^LN^1^^1
"TEMP","LA6247",21,1,84,0)
25214-8^LN^1^^1
"TEMP","LA6247",21,1,85,0)
25215-5^LN^1^^1
"TEMP","LA6247",21,1,86,0)
25216-3^LN^1^^1
"TEMP","LA6247",21,1,87,0)
25217-1^LN^1^^1
"TEMP","LA6247",21,1,88,0)
25218-9^LN^1^^1
"TEMP","LA6247",21,1,89,0)
25219-7^LN^1^^1
"TEMP","LA6247",21,1,90,0)
25220-5^LN^1^^1
"TEMP","LA6247",21,1,91,0)
25221-3^LN^1^^1
"TEMP","LA6247",21,1,92,0)
25222-1^LN^1^^1
"TEMP","LA6247",21,1,93,0)
25223-9^LN^1^^1
"TEMP","LA6247",21,1,94,0)
25224-7^LN^1^^1
"TEMP","LA6247",21,1,95,0)
25225-4^LN^1^^1
"TEMP","LA6247",21,1,96,0)
25226-2^LN^1^^1
"TEMP","LA6247",21,1,97,0)
25227-0^LN^1^^1
"TEMP","LA6247",21,1,98,0)
25228-8^LN^1^^1
"TEMP","LA6247",21,1,99,0)
25229-6^LN^1^^1
"TEMP","LA6247",21,1,100,0)
25230-4^LN^1^^1
"TEMP","LA6247",21,1,101,0)
25231-2^LN^1^^1
"TEMP","LA6247",21,1,102,0)
25310-4^LN^1^^1
"TEMP","LA6247",21,1,103,0)
25366-6^LN^1^^1
"TEMP","LA6247",21,1,104,0)
25367-4^LN^1^^1
"TEMP","LA6247",21,1,105,0)
25800-4^LN^1^^1
"TEMP","LA6247",21,1,106,0)
29315-9^LN^1^^1
"TEMP","LA6247",22,0)
MYCOBACTERIA REPORT^MI^9277
"TEMP","LA6247",22,1,1,0)
93931.0000^99VA64^1^^1
"TEMP","LA6247",30,0)
VIROLOGY REPORT^MI^9280
"TEMP","LA6247",30,1,1,0)
93932.0000^99VA64^1^^1
"TEMP","LA6247",30,1,2,0)
30268-7^LN^1^^1
"TEMP","LA6247",30,1,3,0)
30269-5^LN^1^^1
"TEMP","LA6247",30,1,4,0)
30270-3^LN^1^^1
"TEMP","LA6247",30,1,5,0)
30271-1^LN^1^^1
"TEMP","LA6247",30,1,6,0)
30272-9^LN^1^^1
"TEMP","LA6247",30,1,7,0)
30273-7^LN^1^^1
"TEMP","LA6247",30,1,8,0)
30274-5^LN^1^^1
"TEMP","LA6247",30,1,9,0)
30275-2^LN^1^^1
"TEMP","LA6247",30,1,10,0)
30276-0^LN^1^^1
"TEMP","LA6247",30,1,11,0)
30277-8^LN^1^^1
"TEMP","LA6247",30,1,12,0)
30278-6^LN^1^^1
"TEMP","LA6247",30,1,13,0)
30279-4^LN^1^^1
"TEMP","LA6247",30,1,14,0)
30280-2^LN^1^^1
"TEMP","LA6247",30,1,15,0)
30281-0^LN^1^^1
"TEMP","LA6247",30,1,16,0)
30282-8^LN^1^^1
"TEMP","LA6247",30,1,17,0)
30283-6^LN^1^^1
"TEMP","LA6247",30,1,18,0)
30284-4^LN^1^^1
"TEMP","LA6247",30,1,19,0)
30285-1^LN^1^^1
"TEMP","LA6247",30,1,20,0)
30286-9^LN^1^^1
"TEMP","LA6247",30,1,21,0)
30287-7^LN^1^^1
"TEMP","LA6247",30,1,22,0)
30288-5^LN^1^^1
"TEMP","LA6247",30,1,23,0)
30289-3^LN^1^^1
"TEMP","LA6247",30,1,24,0)
30290-1^LN^1^^1
"TEMP","LA6247",30,1,25,0)
30291-9^LN^1^^1
"TEMP","LA6247",30,1,26,0)
30292-7^LN^1^^1
"TEMP","LA6247",30,1,27,0)
30293-5^LN^1^^1
"TEMP","LA6247",30,1,28,0)
30294-3^LN^1^^1
"TEMP","LA6247",30,1,29,0)
30295-0^LN^1^^1
"TEMP","LA6247",30,1,30,0)
30296-8^LN^1^^1
"TEMP","LA6247",30,1,31,0)
30297-6^LN^1^^1
"TEMP","LA6247",30,1,32,0)
34643-7^LN^1^^1
"TEMP","LA6247",30,1,33,0)
34644-5^LN^1^^1
"TEMP","LA6247",40,0)
MYCOLOGY SMEAR/PREP^MI^9202
"TEMP","LA6247",40,1,1,0)
93984.0000^99VA64^1^^1
"TEMP","LA6247",40,1,5,0)
639-5^LN^1^^1
"TEMP","LA6247",40,1,6,0)
14355-2^LN^1^^1
"TEMP","LA6247",40,1,7,0)
14356-0^LN^1^^1
"TEMP","LA6247",40,1,8,0)
10688-0^LN^1^^1
"TEMP","LA6247",40,1,9,0)
10689-8^LN^1^^1
"TEMP","LA6247",40,1,10,0)
644-5^LN^1^^1
"TEMP","LA6247",40,1,11,0)
17281-7^LN^1^^1
"TEMP","LA6247",40,1,12,0)
6667-0^LN^1^^1
"TEMP","LA6247",40,1,13,0)
667-6^LN^1^^1
"TEMP","LA6247",41,0)
PARASITOLOGY SMEAR PREP^MI^9198
"TEMP","LA6247",41,1,1,0)
93971.0000^99VA64^1^^1
"TEMP","LA6247",41,1,2,0)
17784-0^LN^1^^1
"TEMP","LA6247",42,0)
BACTERIOLOGY SMEAR PREP^MI^9195
"TEMP","LA6247",42,1,1,0)
93967.0000^99VA64^1^^1
"TEMP","LA6247",43,0)
BACTERIOLOGY TEST^MI^9196
"TEMP","LA6247",43,1,1,0)
93969.0000^99VA64^1^^1
"TEMP","LA6247",44,0)
PARASITE TEST^MI^9200
"TEMP","LA6247",44,1,1,0)
93972.0000^99VA64^1^^1
"TEMP","LA6247",45,0)
MYCOLOGY TEST^MI^9204
"TEMP","LA6247",45,1,1,0)
93974.0000^99VA64^1^^1
"TEMP","LA6247",46,0)
TB TEST^MI^9207
"TEMP","LA6247",46,1,1,0)
93977.0000^99VA64^1^^1
"TEMP","LA6247",47,0)
VIROLOGY TEST^MI^9211
"TEMP","LA6247",47,1,1,0)
93981.0000^99VA64^1^^1
"TEMP","LA6247",48,0)
STERILITY RESULTS^MI^9212
"TEMP","LA6247",48,1,1,0)
93982.0000^99VA64^1^^1
"TEMP","LA6247",50,0)
SP SPECIMEN^SP^9334
"TEMP","LA6247",50,1,1,0)
22633-2^LN^1^^1
"TEMP","LA6247",51,0)
SP BRIEF CLINICAL HISTORY^SP^9241
"TEMP","LA6247",51,1,1,0)
22636-5^LN^1^^1
"TEMP","LA6247",52,0)
SP PREOP DIAGNOSIS^SP^9242
"TEMP","LA6247",52,1,1,0)
10219-4^LN^1^^1
"TEMP","LA6247",53,0)
SP OPERATIVE FINDINGS^SP^9243
"TEMP","LA6247",53,1,1,0)
10215-2^LN^1^^1
"TEMP","LA6247",54,0)
SP POST-OP DIAGNOSIS^SP^9244
"TEMP","LA6247",54,1,1,0)
10218-6^LN^1^^1
"TEMP","LA6247",55,0)
SP GROSS DESCRIPTION^SP^9245
"TEMP","LA6247",55,1,1,0)
22634-0^LN^1^^1
"TEMP","LA6247",55,1,2,0)
24419-4^LN^1^^1
"TEMP","LA6247",56,0)
SP MICROSCOPIC DESCRIPTION^SP^9246
"TEMP","LA6247",56,1,1,0)
22635-7^LN^1^^1
"TEMP","LA6247",56,1,2,0)
88569.0000^99VA64^1^57^1
"TEMP","LA6247",57,0)
SP FROZEN SECTION^SP^9250
"TEMP","LA6247",57,1,1,0)
88569.0000^99VA64^1^^1
"TEMP","LA6247",57,1,2,0)
22635-7^LN^1^^1
"TEMP","LA6247",58,0)
SP SURGICAL PATH DIAGNOSIS^SP^9251
"TEMP","LA6247",58,1,1,0)
22637-3^LN^1^^1
"TEMP","LA6247",58,1,2,0)
34574-4^LN^1^^1
"TEMP","LA6247",58,1,3,0)
35660-0^LN^1^^1
"TEMP","LA6247",58,1,4,0)
11529-5^LN^1^^1
"TEMP","LA6247",58,1,5,0)
33721-2^LN^1^^1
"TEMP","LA6247",58,1,6,0)
11526-1^LN^1^^1
"TEMP","LA6247",58,1,7,0)
22640-7^LN^1^^1
"TEMP","LA6247",59,0)
SP SUPPLEMENTARY REPORT^SP^9247
"TEMP","LA6247",59,1,1,0)
22639-9^LN^1^^1
"TEMP","LA6247",59,1,2,0)
35265-8^LN^1^^1
"TEMP","LA6247",60,0)
SP ORGAN/TISSUE^SP^9336
"TEMP","LA6247",60,1,1,0)
22633-2^LN^1^^1
"TEMP","LA6247",61,0)
SP SPECIMEN WEIGHT^SP^9335
"TEMP","LA6247",61,1,1,0)
3154-2^LN^1^^1
"TEMP","LA6247",62,0)
SP SUPPLEMENTARY DESCRIPTION^SP^9248
"TEMP","LA6247",63,0)
CY BRIEF CLINICAL HISTORY^CY^9263
"TEMP","LA6247",63,1,1,0)
22636-5^LN^1^^1
"TEMP","LA6247",64,0)
CY GROSS DESCRIPTION^CY^9267
"TEMP","LA6247",64,1,1,0)
22634-0^LN^1^^1
"TEMP","LA6247",65,0)
CY MICROSCOPIC DESCRIPTION^CY^9268
"TEMP","LA6247",65,1,1,0)
22635-7^LN^1^^1
"TEMP","LA6247",66,0)
CY OPERATIVE FINDINGS^CY^9265
"TEMP","LA6247",66,1,1,0)
10215-2^LN^1^^1
"TEMP","LA6247",67,0)
CY PREOPERATIVE DIAGNOSIS^CY^9264
"TEMP","LA6247",67,1,1,0)
10219-4^LN^1^^1
"TEMP","LA6247",68,0)
CY POSTOPERATIVE DIAGNOSIS^CY^9266
"TEMP","LA6247",68,1,1,0)
10218-6^LN^1^^1
"TEMP","LA6247",69,0)
CY SUPPLEMENTARY REPORT^CY^9269
"TEMP","LA6247",69,1,1,0)
22639-9^LN^1^^1
"TEMP","LA6247",70,0)
CY SUPPLEMENTARY DESCRIPTION^CY^9272
"TEMP","LA6247",71,0)
EM BRIEF CLINICAL HISTORY^EM^9301
"TEMP","LA6247",71,1,1,0)
22636-5^LN^1^^1
"TEMP","LA6247",72,0)
EM GROSS DESCRIPTION^EM^9305
"TEMP","LA6247",72,1,1,0)
22634-0^LN^1^^1
"TEMP","LA6247",73,0)
EM MICROSCOPIC DESCRIPTION^EM^9306
"TEMP","LA6247",73,1,1,0)
22635-7^LN^1^^1
"TEMP","LA6247",74,0)
EM OPERATIVE FINDINGS^EM^9303
"TEMP","LA6247",74,1,1,0)
10215-2^LN^1^^1
"TEMP","LA6247",75,0)
EM POST-OP DIAGNOSIS^EM^9304
"TEMP","LA6247",75,1,1,0)
10218-6^LN^1^^1
"TEMP","LA6247",76,0)
EM PREOP DIAGNOSIS^EM^9302
"TEMP","LA6247",76,1,1,0)
10219-4^LN^1^^1
"TEMP","LA6247",77,0)
EM SUPPLEMENTARY DESCRIPTION^EM^9309
"TEMP","LA6247",78,0)
EM SUPPLEMENTARY REPORT^EM^9307
"TEMP","LA6247",78,1,1,0)
22639-9^LN^1^^1
"TEMP","LA6247",79,0)
ACID FAST STAIN^MI^9365^85
"TEMP","LA6247",79,1,1,0)
87756.0000^99VA64^1^^1
"TEMP","LA6247",79,1,2,0)
11545-1^LN^1^^1
"TEMP","LA6247",79,1,4,0)
640-3^LN^1^^1
"TEMP","LA6247",79,1,5,0)
641-1^LN^1^^1
"TEMP","LA6247",79,1,6,0)
642-9^LN^1^^1
"TEMP","LA6247",79,1,7,0)
645-2^LN^1^^1
"TEMP","LA6247",79,1,8,0)
646-0^LN^1^^1
"TEMP","LA6247",79,1,9,0)
647-8^LN^1^^1
"TEMP","LA6247",79,1,10,0)
650-2^LN^1^^1
"TEMP","LA6247",79,1,11,0)
651-0^LN^1^^1
"TEMP","LA6247",79,1,12,0)
652-8^LN^1^^1
"TEMP","LA6247",79,1,13,0)
654-4^LN^1^^1
"TEMP","LA6247",79,1,14,0)
655-1^LN^1^^1
"TEMP","LA6247",79,1,15,0)
656-9^LN^1^^1
"TEMP","LA6247",79,1,16,0)
6655-5^LN^1^^1
"TEMP","LA6247",79,1,17,0)
6656-3^LN^1^^1
"TEMP","LA6247",79,1,18,0)
6657-1^LN^1^^1
"TEMP","LA6247",79,1,19,0)
10655-9^LN^1^^1
"TEMP","LA6247",79,1,20,0)
10656-7^LN^1^^1
"TEMP","LA6247",79,1,21,0)
10659-1^LN^1^^1
"TEMP","LA6247",79,1,22,0)
10853-0^LN^1^^1
"TEMP","LA6247",79,1,23,0)
11476-9^LN^1^^1
"TEMP","LA6247",79,1,24,0)
11477-7^LN^1^^1
"TEMP","LA6247",79,1,25,0)
11478-5^LN^1^^1
"TEMP","LA6247",79,1,26,0)
11479-3^LN^1^^1
"TEMP","LA6247",79,1,27,0)
11480-1^LN^1^^1
"TEMP","LA6247",79,1,28,0)
14353-7^LN^1^^1
"TEMP","LA6247",79,1,29,0)
14354-5^LN^1^^1
"TEMP","LA6247",79,1,30,0)
20780-3^LN^1^^1
"TEMP","LA6247",79,1,31,0)
20781-1^LN^1^^1
"TEMP","LA6247",79,1,32,0)
23243-9^LN^1^^1
"TEMP","LA6247",79,1,33,0)
23244-7^LN^1^^1
"TEMP","LA6247",79,1,34,0)
24002-8^LN^1^^1
"TEMP","LA6247",79,1,35,0)
32188-5^LN^1^^1
"TEMP","LA6247",79,1,36,0)
32189-3^LN^1^^1
"TEMP","LA6247",79,1,37,0)
32699-1^LN^1^^1
"TEMP","LA6247",80,0)
SP COMMENT^SP^9367
"TEMP","LA6247",80,1,1,0)
22638-1^LN^1^^1
"TEMP","LA6247",81,0)
CY COMMENT^CY^9369
"TEMP","LA6247",82,0)
EM COMMENT^EM^9368
"TEMP","LA6247",83,0)
CY CYTOPATHOLOGY DIAGNOSIS^CY^9363
"TEMP","LA6247",83,1,1,0)
22637-3^LN^1^^1
"TEMP","LA6247",83,1,2,0)
34574-4^LN^1^^1
"TEMP","LA6247",83,1,3,0)
35660-0^LN^1^^1
"TEMP","LA6247",83,1,4,0)
11529-5^LN^1^^1
"TEMP","LA6247",83,1,5,0)
33721-2^LN^1^^1
"TEMP","LA6247",83,1,6,0)
33717-0^LN^1^^1
"TEMP","LA6247",83,1,7,0)
33716-2^LN^1^^1
"TEMP","LA6247",83,1,8,0)
33718-8^LN^1^^1
"TEMP","LA6247",83,1,9,0)
11526-1^LN^1^^1
"TEMP","LA6247",84,0)
EM DIAGNOSIS^EM^9364
"TEMP","LA6247",84,1,1,0)
22637-3^LN^1^^1
"TEMP","LA6247",84,1,2,0)
34574-4^LN^1^^1
"TEMP","LA6247",84,1,3,0)
35660-0^LN^1^^1
"TEMP","LA6247",84,1,4,0)
11529-5^LN^1^^1
"TEMP","LA6247",84,1,5,0)
33721-2^LN^1^^1
"TEMP","LA6247",84,1,6,0)
11526-1^LN^1^^1
"TEMP","LA6247",85,0)
ACID FAST STAIN QUANTITY^MI^9372
"TEMP","LA6247",85,1,1,0)
87583.0000^99VA64^1^^1
"TEMP","LA6247",86,0)
MI PRELIMINARY BACT COMMENT^MI^9252
"TEMP","LA6247",87,0)
MI PRELIMINARY VIROLOGY COMMENT^MI^9278
"TEMP","LA6247",88,0)
MI PRELIMINARY PARASITE COMMENT^MI^9258
"TEMP","LA6247",89,0)
MI PRELIMINARY MYCOLOGY COMMENT^MI^9270
"TEMP","LA6247",90,0)
MI PRELIMINARY TB COMMENT^MI^9276
"UP",62.4,62.41,-1)
62.4^3
"UP",62.4,62.41,0)
62.41
"UP",62.48,62.482,-1)
62.48^SCT
"UP",62.48,62.482,0)
62.482
"UP",62.8,62.801,-1)
62.8^10
"UP",62.8,62.801,0)
62.801
"UP",62.9,62.9001,-1)
62.9^60
"UP",62.9,62.9001,0)
62.9001
"UP",62.9,62.9002,-2)
62.9^60
"UP",62.9,62.9002,-1)
62.9001^6
"UP",62.9,62.9002,0)
62.9002
"UP",62.9,62.9003,-1)
62.9^44
"UP",62.9,62.9003,0)
62.9003
"VER")
8.0^22.0
"^DD",62.4,62.41,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",62.4,62.41,.001,3)
Type a number between 1 and 99999, 0 Decimal Digits
"^DD",62.4,62.41,.001,21,0)
^^2^2^3071210^^
"^DD",62.4,62.41,.001,21,1,0)
The test entries may be number meaningful.  E.g., the ACA identifies the
"^DD",62.4,62.41,.001,21,2,0)
test by number.
"^DD",62.4,62.41,.001,"DT")
3071210
"^DD",62.47,62.47,0)
FIELD^^.04^6
"^DD",62.47,62.47,0,"DDA")
N
"^DD",62.47,62.47,0,"DT")
3091120
"^DD",62.47,62.47,0,"IX","AE",62.4701,2.1)

"^DD",62.47,62.47,0,"IX","AG",62.4701,2.2)

"^DD",62.47,62.47,0,"IX","B",62.47,.01)

"^DD",62.47,62.47,0,"NM","LAB CODE MAPPING")

"^DD",62.47,62.47,0,"PT",62.47,.04)

"^DD",62.47,62.47,0,"PT",62.4701,.04)

"^DD",62.47,62.47,.001,0)
SEQUENCE^NJ4,0X^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X K:($G(DIUTIL)'="VERIFY FIELDS"&'$G(LRFPRIV)) X
"^DD",62.47,62.47,.001,3)
Type a number between 1 and 9999, 0 Decimal Digits
"^DD",62.47,62.47,.001,21,0)
^^1^1^3070803^
"^DD",62.47,62.47,.001,21,1,0)
Sequence number (IEN).
"^DD",62.47,62.47,.001,"DT")
3060424
"^DD",62.47,62.47,.01,0)
CONCEPT^RF^^0;1^K:$L(X)>45!($L(X)<3)!'(X'?1P.E) X
"^DD",62.47,62.47,.01,1,0)
^.1
"^DD",62.47,62.47,.01,1,1,0)
62.47^B
"^DD",62.47,62.47,.01,1,1,1)
S ^LAB(62.47,"B",$E(X,1,30),DA)=""
"^DD",62.47,62.47,.01,1,1,2)
K ^LAB(62.47,"B",$E(X,1,30),DA)
"^DD",62.47,62.47,.01,3)
Answer must be 3-45 characters in length
"^DD",62.47,62.47,.01,21,0)
^^3^3^3060607^
"^DD",62.47,62.47,.01,21,1,0)
Indicates the nature of the codes and what area of the laboratory
"^DD",62.47,62.47,.01,21,2,0)
the concept relates.
"^DD",62.47,62.47,.01,21,3,0)

"^DD",62.47,62.47,.01,"DT")
3091120
"^DD",62.47,62.47,.02,0)
LR SUBSCRIPT^RS^CH:CHEM, HEM, TOX, RIA, SER, etc.;MI:MICROBIOLOGY;EM:ELECTRON MICROSCOPY;SP:SURGICAL PATHOLOGY;CY:CYTOLOGY;AU:AUTOPSY;BB:BLOOD BANK;^0;2^Q
"^DD",62.47,62.47,.02,3)
This represents the functional area of the Lab.
"^DD",62.47,62.47,.02,21,0)
^^1^1^3070803^
"^DD",62.47,62.47,.02,21,1,0)
Lab Data file (#63) subscript for this entry.
"^DD",62.47,62.47,.02,"DT")
3061031
"^DD",62.47,62.47,.03,0)
DATABASE CODE^R*P64.061'^LAB(64.061,^0;3^S DIC("S")="I $P($G(^(63)),U)'=""""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",62.47,62.47,.03,3)
Select the related database code entry.
"^DD",62.47,62.47,.03,12)
Only allow selection of codes related to database entries.
"^DD",62.47,62.47,.03,12.1)
S DIC("S")="I $P($G(^(63)),U)'="""""
"^DD",62.47,62.47,.03,21,0)
^^5^5^3060607^^^^
"^DD",62.47,62.47,.03,21,1,0)
For 'result' type codes this field indicates the related area
"^DD",62.47,62.47,.03,21,2,0)
of the Laboratory package database where answers to this code
"^DD",62.47,62.47,.03,21,3,0)
area to be stored.  The database code indicates the storage
"^DD",62.47,62.47,.03,21,4,0)
location within the Laboratory package.
"^DD",62.47,62.47,.03,21,5,0)

"^DD",62.47,62.47,.03,23,0)
^^1^1^3060131^^
"^DD",62.47,62.47,.03,23,1,0)

"^DD",62.47,62.47,.03,"DT")
3061031
"^DD",62.47,62.47,.04,0)
ALTERNATE CONCEPT^P62.47'^LAB(62.47,^0;4^Q
"^DD",62.47,62.47,.04,3)
Select the alternate concept related to this concept.
"^DD",62.47,62.47,.04,21,0)
^^10^10^3061010^
"^DD",62.47,62.47,.04,21,1,0)
Used to designate an alternate concept when the answer associated
"^DD",62.47,62.47,.04,21,2,0)
with this concept is not in a form that can be store within the
"^DD",62.47,62.47,.04,21,3,0)
current VistA database.
"^DD",62.47,62.47,.04,21,4,0)
 
"^DD",62.47,62.47,.04,21,5,0)
Example is when VistA expects to store the answer as a pointer
"^DD",62.47,62.47,.04,21,6,0)
to a VistA file and the instance of an answer is free text.
"^DD",62.47,62.47,.04,21,7,0)

"^DD",62.47,62.47,.04,21,8,0)
This field will point to a concept that will allow the answer to
"^DD",62.47,62.47,.04,21,9,0)
be stored in a field which can accept the answer.
"^DD",62.47,62.47,.04,21,10,0)

"^DD",62.47,62.47,.04,"DT")
3061010
"^DD",62.47,62.47,1,0)
IDENTIFIER^62.4701I^^1;0
"^DD",62.47,62.47,1,21,0)
^^2^2^3070803^
"^DD",62.47,62.47,1,21,1,0)
The Identifier contains the codes/codesets that are associated 
"^DD",62.47,62.47,1,21,2,0)
with this Concept.
"^DD",62.47,62.47,1,"DT")
3060206
"^DD",62.47,62.4701,0)
IDENTIFIER SUB-FIELD^^2.2^7
"^DD",62.47,62.4701,0,"DT")
3070803
"^DD",62.47,62.4701,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",62.47,62.4701,0,"IX","AC",62.4701,.05)

"^DD",62.47,62.4701,0,"IX","B",62.4701,.01)

"^DD",62.47,62.4701,0,"IX","C",62.4701,.02)

"^DD",62.47,62.4701,0,"NM","IDENTIFIER")

"^DD",62.47,62.4701,0,"UP")
62.47
"^DD",62.47,62.4701,.01,0)
IDENTIFIER^MFX^^0;1^K:$L(X)>30!($L(X)<1) X D:$G(X)]"" CODSETOK^LA7VLCM3(DA(1),$G(DA),X,,1)
"^DD",62.47,62.4701,.01,1,0)
^.1^^-1
"^DD",62.47,62.4701,.01,1,1,0)
62.4701^B
"^DD",62.47,62.4701,.01,1,1,1)
S ^LAB(62.47,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",62.47,62.4701,.01,1,1,2)
K ^LAB(62.47,DA(1),1,"B",$E(X,1,30),DA)
"^DD",62.47,62.4701,.01,3)
Answer must be 1-30 characters in length
"^DD",62.47,62.4701,.01,21,0)
^.001^4^4^3060811^^
"^DD",62.47,62.4701,.01,21,1,0)
This is the code or id associated with an instance of this concept.
"^DD",62.47,62.4701,.01,21,2,0)
The identifier in conjunction with CODING SYSTEM field (#.02) 
"^DD",62.47,62.4701,.01,21,3,0)
indicates it's use and source.
"^DD",62.47,62.4701,.01,21,4,0)

"^DD",62.47,62.4701,.01,"DT")
3061010
"^DD",62.47,62.4701,.02,0)
CODING SYSTEM^RFX^^0;2^D ITP02^LA7XREF
"^DD",62.47,62.4701,.02,1,0)
^.1
"^DD",62.47,62.4701,.02,1,1,0)
62.4701^C
"^DD",62.47,62.4701,.02,1,1,1)
S ^LAB(62.47,DA(1),1,"C",$E(X,1,30),DA)=""
"^DD",62.47,62.4701,.02,1,1,2)
K ^LAB(62.47,DA(1),1,"C",$E(X,1,30),DA)
"^DD",62.47,62.4701,.02,1,1,"DT")
3060616
"^DD",62.47,62.4701,.02,3)
Answer 1-15 characters, Uppercase (ie LN,SCT,L,99*)
"^DD",62.47,62.4701,.02,21,0)
^.001^3^3^3060429^^
"^DD",62.47,62.4701,.02,21,1,0)
Identifies the name of the coding system which this code is derived
"^DD",62.47,62.4701,.02,21,2,0)
from.
"^DD",62.47,62.4701,.02,21,3,0)

"^DD",62.47,62.4701,.02,23,0)
^.001^1^1^3060429^^
"^DD",62.47,62.4701,.02,23,1,0)

"^DD",62.47,62.4701,.02,"DT")
3061010
"^DD",62.47,62.4701,.03,0)
PURPOSE^S^1:RESULT;2:ANSWER;^0;3^Q
"^DD",62.47,62.4701,.03,3)
Select the role or purpose this code is used.
"^DD",62.47,62.4701,.03,21,0)
^^17^17^3060123^
"^DD",62.47,62.4701,.03,21,1,0)
Classifies the code as a result or answer code.
"^DD",62.47,62.4701,.03,21,2,0)
 
"^DD",62.47,62.4701,.03,21,3,0)
Codes from HL7 OBX segment field OBX-3 should
"^DD",62.47,62.4701,.03,21,4,0)
be classified as result codes.
"^DD",62.47,62.4701,.03,21,5,0)
 
"^DD",62.47,62.4701,.03,21,6,0)
Example is LOINC code 11475-1 MICROORGANISM
"^DD",62.47,62.4701,.03,21,7,0)
IDENTIFIED: PRID:PT:XXX:NOM:CULTURE that
"^DD",62.47,62.4701,.03,21,8,0)
represents the concept of organism identified.
"^DD",62.47,62.4701,.03,21,9,0)
 
"^DD",62.47,62.4701,.03,21,10,0)
 
"^DD",62.47,62.4701,.03,21,11,0)
Codes from HL7 OBX segment field OBX-5 should
"^DD",62.47,62.4701,.03,21,12,0)
be classified as answer codes.
"^DD",62.47,62.4701,.03,21,13,0)

"^DD",62.47,62.4701,.03,21,14,0)
Example is SNOMED CT code 30334005 AEROMONAS
"^DD",62.47,62.4701,.03,21,15,0)
SALMONICIDA (ORGANISM) that represent the name
"^DD",62.47,62.4701,.03,21,16,0)
of organism identified.
"^DD",62.47,62.4701,.03,21,17,0)

"^DD",62.47,62.4701,.03,23,0)
^^1^1^3060123^
"^DD",62.47,62.4701,.03,23,1,0)

"^DD",62.47,62.4701,.03,"DT")
3060906
"^DD",62.47,62.4701,.04,0)
OVERRIDE CONCEPT^P62.47'^LAB(62.47,^0;4^Q
"^DD",62.47,62.4701,.04,3)
Select the related concept entry.
"^DD",62.47,62.4701,.04,21,0)
^^16^16^3060329^^^^
"^DD",62.47,62.4701,.04,21,1,0)
For 'answer' type codes this field indicates the
"^DD",62.47,62.4701,.04,21,2,0)
related area of the Laboratory package database
"^DD",62.47,62.4701,.04,21,3,0)
where answers to this code are to be stored.
"^DD",62.47,62.4701,.04,21,4,0)

"^DD",62.47,62.4701,.04,21,5,0)
It is used when the 'answer' that is associated with
"^DD",62.47,62.4701,.04,21,6,0)
a 'result' code cannot not be stored in the usual
"^DD",62.47,62.4701,.04,21,7,0)
VistA Laboratory LAB DATA file (#63) field.
"^DD",62.47,62.4701,.04,21,8,0)
 
"^DD",62.47,62.4701,.04,21,9,0)
Example: SNOMED CT code 23506009 is the term
"^DD",62.47,62.4701,.04,21,10,0)
'normal flora'.  This term can be the 'answer'
"^DD",62.47,62.4701,.04,21,11,0)
used in several places within the Lab DATA file (#63).
"^DD",62.47,62.4701,.04,21,12,0)
If it is associated as the 'answer' to a microorganism
"^DD",62.47,62.4701,.04,21,13,0)
identified code instead of being stored as an entry
"^DD",62.47,62.4701,.04,21,14,0)
in the ETIOLOGY FIELD file (#61.2) it would be
"^DD",62.47,62.4701,.04,21,15,0)
stored as a comment. 
"^DD",62.47,62.4701,.04,21,16,0)

"^DD",62.47,62.4701,.04,23,0)
^^2^2^3060329^^^
"^DD",62.47,62.4701,.04,23,1,0)

"^DD",62.47,62.4701,.04,23,2,0)

"^DD",62.47,62.4701,.04,"DT")
3060329
"^DD",62.47,62.4701,.05,0)
NATIONAL STANDARD^*SX^0:NO;1:YES;^0;5^Q
"^DD",62.47,62.4701,.05,1,0)
^.1
"^DD",62.47,62.4701,.05,1,1,0)
62.4701^AC
"^DD",62.47,62.4701,.05,1,1,1)
S ^LAB(62.47,DA(1),1,"AC",$E(X,1,30),DA)=""
"^DD",62.47,62.4701,.05,1,1,2)
K ^LAB(62.47,DA(1),1,"AC",$E(X,1,30),DA)
"^DD",62.47,62.4701,.05,1,1,"DT")
3060616
"^DD",62.47,62.4701,.05,3)
Flag this entry as a nationally released code.
"^DD",62.47,62.4701,.05,12)
Do not allow local entries to be flagged as national.
"^DD",62.47,62.4701,.05,12.1)
S DIC("S")="I ($G(DIUTIL)=""VERIFY FIELDS"")!$G(LRFPRIV)!('$G(LRFPRIV)&Y=0)"
"^DD",62.47,62.4701,.05,21,0)
^^1^1^3070803^
"^DD",62.47,62.4701,.05,21,1,0)
Is this entry distributed nationwide or is it a local entry.
"^DD",62.47,62.4701,.05,"DT")
3060910
"^DD",62.47,62.4701,2.1,0)
RELATED ENTRY^V^^2;1^Q
"^DD",62.47,62.4701,2.1,1,0)
^.1
"^DD",62.47,62.4701,2.1,1,1,0)
62.47^AE
"^DD",62.47,62.4701,2.1,1,1,1)
S ^LAB(62.47,"AE",$E(X,1,30),DA(1),DA)=""
"^DD",62.47,62.4701,2.1,1,1,2)
K ^LAB(62.47,"AE",$E(X,1,30),DA(1),DA)
"^DD",62.47,62.4701,2.1,1,1,"%D",0)
^^4^4^3060426^
"^DD",62.47,62.4701,2.1,1,1,"%D",1,0)
LAB(62.47,"AE",Pointed-To File,DA(1),DA)
"^DD",62.47,62.4701,2.1,1,1,"%D",2,0)
 
"^DD",62.47,62.4701,2.1,1,1,"%D",3,0)
Identify entries in the pointed-to files that are mapped to #62.47
"^DD",62.47,62.4701,2.1,1,1,"%D",4,0)
entries.
"^DD",62.47,62.4701,2.1,1,1,"DT")
3060426
"^DD",62.47,62.4701,2.1,21,0)
^^3^3^3070803^
"^DD",62.47,62.4701,2.1,21,1,0)
Links this code/codeset to an entry in one of the pointed-to files.  This 
"^DD",62.47,62.4701,2.1,21,2,0)
allows the system to determine how to translate a code/codeset to a file 
"^DD",62.47,62.4701,2.1,21,3,0)
entry.
"^DD",62.47,62.4701,2.1,"DT")
3070803
"^DD",62.47,62.4701,2.1,"V",0)
^.12P^^2
"^DD",62.47,62.4701,2.1,"V",1,0)
61.2^Select ETIOLOGY^1^ET^n^n
"^DD",62.47,62.4701,2.1,"V",2,0)
62.06^Select ANTIBIOTIC^2^AB^n^n
"^DD",62.47,62.4701,2.1,"V",2,1)

"^DD",62.47,62.4701,2.1,"V",2,2)

"^DD",62.47,62.4701,2.2,0)
MESSAGE CONFIGURATION^P62.48'^LAHM(62.48,^2;2^Q
"^DD",62.47,62.4701,2.2,1,0)
^.1
"^DD",62.47,62.4701,2.2,1,1,0)
62.47^AG
"^DD",62.47,62.4701,2.2,1,1,1)
S ^LAB(62.47,"AG",$E(X,1,30),DA(1),DA)=""
"^DD",62.47,62.4701,2.2,1,1,2)
K ^LAB(62.47,"AG",$E(X,1,30),DA(1),DA)
"^DD",62.47,62.4701,2.2,1,1,"%D",0)
^^1^1^3060912^
"^DD",62.47,62.4701,2.2,1,1,"%D",1,0)
^LAB(62.47,"AG",R6248,R6247,R624701)=""
"^DD",62.47,62.4701,2.2,1,1,"DT")
3060912
"^DD",62.47,62.4701,2.2,21,0)
^.001^4^4^3060911^^
"^DD",62.47,62.4701,2.2,21,1,0)
When the related identifier (code) is from a local coding system
"^DD",62.47,62.4701,2.2,21,2,0)
then this field indicates for which specific interface the code
"^DD",62.47,62.4701,2.2,21,3,0)
is associated with. Local codes are interface specific.
"^DD",62.47,62.4701,2.2,21,4,0)

"^DD",62.47,62.4701,2.2,"DT")
3060912
"^DD",62.48,62.48,30,0)
NON-VA ORDER SNOMED CODES^62.482VI^^SCT;0
"^DD",62.48,62.48,30,21,0)
^.001^3^3^3070803^^^^
"^DD",62.48,62.48,30,21,1,0)
Allows mapping a SNOMED CT code to specimen (topography) and/or collection
"^DD",62.48,62.48,30,21,2,0)
sample which an external system requires and which is different from the
"^DD",62.48,62.48,30,21,3,0)
SNOMED CT code assigned to the concept by the Dept of Veterans Affairs.
"^DD",62.48,62.48,30,23,0)
^.001^2^2^3070803^^
"^DD",62.48,62.48,30,23,1,0)
This field uses a combination of an Output Transform and a "WRITE
"^DD",62.48,62.48,30,23,2,0)
ID" node in the DD to display the file that the particular entry is from.
"^DD",62.48,62.482,0)
NON-VA ORDER SNOMED CODES SUB-FIELD^^.001^3
"^DD",62.48,62.482,0,"DT")
3061219
"^DD",62.48,62.482,0,"ID","LA")
D EN^DDIOL("  "_$$ID62482^LA7XREF(),"","$C(32)")
"^DD",62.48,62.482,0,"IX","B",62.482,.01)

"^DD",62.48,62.482,0,"NM","NON-VA ORDER SNOMED CODES")

"^DD",62.48,62.482,0,"UP")
62.48
"^DD",62.48,62.482,.001,0)
SEQUENCE^NJ12,0^^ ^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",62.48,62.482,.001,3)
Type a Number between 1 and 999999999999, 0 Decimal Digits
"^DD",62.48,62.482,.001,21,0)
^^1^1^3070803^
"^DD",62.48,62.482,.001,21,1,0)
Sequence (IEN) number.
"^DD",62.48,62.482,.001,"DT")
3061219
"^DD",62.48,62.482,.01,0)
VA FILE ENTRY^MVO^^0;1^
"^DD",62.48,62.482,.01,1,0)
^.1
"^DD",62.48,62.482,.01,1,1,0)
62.482^B
"^DD",62.48,62.482,.01,1,1,1)
S ^LAHM(62.48,DA(1),"SCT","B",$E(X,1,30),DA)=""
"^DD",62.48,62.482,.01,1,1,2)
K ^LAHM(62.48,DA(1),"SCT","B",$E(X,1,30),DA)
"^DD",62.48,62.482,.01,1,1,3)
Required for Variable Pointer
"^DD",62.48,62.482,.01,2)
S Y(0)=Y S Y=$$OT62482^LA7XREF(Y)
"^DD",62.48,62.482,.01,2.1)
S Y=$$OT62482^LA7XREF(Y)
"^DD",62.48,62.482,.01,3)
Select specimen or collection sample
"^DD",62.48,62.482,.01,21,0)
^^1^1^3070803^
"^DD",62.48,62.482,.01,21,1,0)
The file entry to map to a different code/codeset.
"^DD",62.48,62.482,.01,"DT")
3061220
"^DD",62.48,62.482,.01,"V",0)
^.12P^^2
"^DD",62.48,62.482,.01,"V",1,0)
61^Specimen from TOPOGRAPHY file^1^SP^n^n
"^DD",62.48,62.482,.01,"V",1,1)

"^DD",62.48,62.482,.01,"V",1,2)

"^DD",62.48,62.482,.01,"V",2,0)
62^Sample from COLLECTION SAMPLE^2^CS^n^n
"^DD",62.48,62.482,.01,"V",2,1)

"^DD",62.48,62.482,.01,"V",2,2)

"^DD",62.48,62.482,.02,0)
SNOMED CT ID^NJ10,0X^^0;2^N LROUT K:'$$SCTOK^LRSCT(X,,.LROUT) X D:$D(X)&('$$ISQUIET^LRXREF()) EN^DDIOL($G(LROUT("F")),"","$C(32)")
"^DD",62.48,62.482,.02,3)
Enter a valid SNOMED CT Code
"^DD",62.48,62.482,.02,21,0)
^^1^1^3061218^
"^DD",62.48,62.482,.02,21,1,0)
This is the SNOMED CT code for this entry.
"^DD",62.48,62.482,.02,"DT")
3061219
"^DD",62.485,62.485,0)
FIELD^^2^4
"^DD",62.485,62.485,0,"DDA")
N
"^DD",62.485,62.485,0,"DT")
2970205
"^DD",62.485,62.485,0,"IX","B",62.485,.01)

"^DD",62.485,62.485,0,"NM","LA7 MESSAGE LOG BULLETINS")

"^DD",62.485,62.485,0,"VRPK")
LA
"^DD",62.485,62.485,.01,0)
CODE^RNJ7,0X^^0;1^K:+X'=X!(X>9999999)!(X<$S($D(DIFROM):1,1:1000))!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",62.485,62.485,.01,1,0)
^.1
"^DD",62.485,62.485,.01,1,1,0)
62.485^B
"^DD",62.485,62.485,.01,1,1,1)
S ^LAHM(62.485,"B",$E(X,1,30),DA)=""
"^DD",62.485,62.485,.01,1,1,2)
K ^LAHM(62.485,"B",$E(X,1,30),DA)
"^DD",62.485,62.485,.01,3)
Type a Number between 1000 and 9999999, 0 Decimal Digits.
"^DD",62.485,62.485,.01,21,0)
^^3^3^2970612^^
"^DD",62.485,62.485,.01,21,1,0)
This field contains a number between 1 and 9999999 that uniquely
"^DD",62.485,62.485,.01,21,2,0)
identifies an error or exceptional condition.  Numbers below 999 are
"^DD",62.485,62.485,.01,21,3,0)
reserved for package use only.
"^DD",62.485,62.485,.01,"DT")
2950122
"^DD",62.485,62.485,1,0)
TEXT^RF^^0;2^K:$L(X)>160!($L(X)<1) X
"^DD",62.485,62.485,1,3)
Answer must be 1-160 characters in length.
"^DD",62.485,62.485,1,21,0)
^^3^3^2970612^
"^DD",62.485,62.485,1,21,1,0)
This field holds the text description of the error or exceptional
"^DD",62.485,62.485,1,21,2,0)
condition.  This field is used to create an error or exceptional condition
"^DD",62.485,62.485,1,21,3,0)
display in the ^XTMP global.
"^DD",62.485,62.485,1,23,0)
^^9^9^2970612^
"^DD",62.485,62.485,1,23,1,0)
This field is used to create error or exceptional condition displays in
"^DD",62.485,62.485,1,23,2,0)
the ^XTMP global.  The text description should contain useful information
"^DD",62.485,62.485,1,23,3,0)
about the message in the LA7 MESSAGE QUEUE file (#62.49).  The information
"^DD",62.485,62.485,1,23,4,0)
can be added to the text by using the "|" character and the LA7TXT()
"^DD",62.485,62.485,1,23,5,0)
array.
"^DD",62.485,62.485,1,23,6,0)
 
"^DD",62.485,62.485,1,23,7,0)
Example Text: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,1,23,8,0)
Array value: LA7TXT(1)=123
"^DD",62.485,62.485,1,23,9,0)
^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,1,"DT")
2940427
"^DD",62.485,62.485,1.3,0)
SEND ALERT^S^0:NO;1:YES;^0;3^Q
"^DD",62.485,62.485,1.3,3)
Determines if alert is sent when a message is processed with this error. Alerts must also be turned on and mail group designated in file #62.48.
"^DD",62.485,62.485,1.3,21,0)
^^4^4^2970612^
"^DD",62.485,62.485,1.3,21,1,0)
This field is used to flag those errors which can generate an alert to a
"^DD",62.485,62.485,1.3,21,2,0)
site selectable mail group whenever this error occurs. The site needs to
"^DD",62.485,62.485,1.3,21,3,0)
designate a mail group in the LA7 MESSAGE PARAMETER file (#62.48) under
"^DD",62.485,62.485,1.3,21,4,0)
the ALERT CONDITION field (#20).
"^DD",62.485,62.485,1.3,"DT")
2970205
"^DD",62.485,62.485,2,0)
BUILD LOGIC^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",62.485,62.485,2,3)
This is Standard MUMPS code.
"^DD",62.485,62.485,2,9)
@
"^DD",62.485,62.485,2,21,0)
^^8^8^2970612^
"^DD",62.485,62.485,2,21,1,0)
This is standard MUMPS code that is executed to log the text
"^DD",62.485,62.485,2,21,2,0)
description error into the ^XTMP global.  The MUMPS code should set the
"^DD",62.485,62.485,2,21,3,0)
LA7TXT() array to feel in the fields in the text description.
"^DD",62.485,62.485,2,21,4,0)
 
"^DD",62.485,62.485,2,21,5,0)
 Example MUMPS code: S LA7TXT(1)=LA76249
"^DD",62.485,62.485,2,21,6,0)
 Variable value: LA76249=123
"^DD",62.485,62.485,2,21,7,0)
 Text description: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,2,21,8,0)
 ^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,2,"DT")
2940427
"^DD",62.49,62.49,0)
FIELD^^5.1^35
"^DD",62.49,62.49,0,"DDA")
N
"^DD",62.49,62.49,0,"DT")
3070217
"^DD",62.49,62.49,0,"ID","W1")
N LRX S LRX=^(0) D EN^DDIOL("Entered D/T: "_$$FMTE^XLFDT($P(LRX,U,5),"1M")_"  Type: "_$$EXTERNAL^DILFD(62.49,1,"",$P(LRX,U,2))_"  Status: "_$$EXTERNAL^DILFD(62.49,2,"",$P(LRX,U,3)),,"!")
"^DD",62.49,62.49,0,"ID","W2")
N LRX S LRX=^(0) D EN^DDIOL("Instrument Name: "_$$EXTERNAL^DILFD(62.49,5,"",$P(LRX,U,6)),,"!")
"^DD",62.49,62.49,0,"ID","W3")
N LRX S LRX=$G(^(.5)) D EN^DDIOL("Configuration: "_$$EXTERNAL^DILFD(62.49,.5,"",$P(LRX,U,1)),,"!")
"^DD",62.49,62.49,0,"IX","AD",62.49,4)

"^DD",62.49,62.49,0,"IX","B",62.49,.01)

"^DD",62.49,62.49,0,"IX","ID",62.49,109)

"^DD",62.49,62.49,0,"NM","LA7 MESSAGE QUEUE")

"^DD",62.49,62.49,0,"PT",62.49,6)

"^DD",62.49,62.49,0,"VRPK")
LA
"^DD",62.49,62.49,.01,0)
MESSAGE NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",62.49,62.49,.01,1,0)
^.1
"^DD",62.49,62.49,.01,1,1,0)
62.49^B
"^DD",62.49,62.49,.01,1,1,1)
S ^LAHM(62.49,"B",$E(X,1,30),DA)=""
"^DD",62.49,62.49,.01,1,1,2)
K ^LAHM(62.49,"B",$E(X,1,30),DA)
"^DD",62.49,62.49,.01,3)
Type a Number between 0 and 999999999, 0 Decimal Digits.
"^DD",62.49,62.49,.01,21,0)
^^2^2^2970612^
"^DD",62.49,62.49,.01,21,1,0)
This field contains a unique laboratory message number that is generated
"^DD",62.49,62.49,.01,21,2,0)
by the system.
"^DD",62.49,62.49,.01,"DT")
2940418
"^DD",62.49,62.49,.5,0)
CONFIGURATION^P62.48'^LAHM(62.48,^.5;1^Q
"^DD",62.49,62.49,.5,1,0)
^.1^^0
"^DD",62.49,62.49,.5,3)
Enter in the appropriate LA7 MESSAGE PARAMETER file (#62.48) entry that pertains to this message. 
"^DD",62.49,62.49,.5,21,0)
^^3^3^2970612^^^
"^DD",62.49,62.49,.5,21,1,0)
This field contains the pointer to the LA7 MESSAGE PARAMETER file
"^DD",62.49,62.49,.5,21,2,0)
(#62.48) which contains vital information concerning the processing,
"^DD",62.49,62.49,.5,21,3,0)
purging, and sending of alert messages.
"^DD",62.49,62.49,.5,"DT")
3020319
"^DD",62.49,62.49,1,0)
TYPE^RS^I:INCOMING;O:OUTGOING;^0;2^Q
"^DD",62.49,62.49,1,1,0)
^.1^^0
"^DD",62.49,62.49,1,3)
Enter the direction, "I" for incoming or "O" for outgoing, of the message.
"^DD",62.49,62.49,1,21,0)
^^1^1^2970612^
"^DD",62.49,62.49,1,21,1,0)
This field identifies the direction of the message.
"^DD",62.49,62.49,1,"DT")
3020319
"^DD",62.49,62.49,2,0)
STATUS^S^B:BUILDING;Q:QUEUED FOR ACTION;E:ERROR;X:PURGEABLE;P:PROCESS;A:AWAITING ACK;^0;3^Q
"^DD",62.49,62.49,2,1,0)
^.1^^0
"^DD",62.49,62.49,2,21,0)
^^2^2^2970613^^
"^DD",62.49,62.49,2,21,1,0)
This field contains the current status of the message.  The status is used
"^DD",62.49,62.49,2,21,2,0)
for queuing, processing, and purging of messages.
"^DD",62.49,62.49,2,"DT")
3020319
"^DD",62.49,62.49,3,0)
PRIORITY^NJ1,0^^0;4^K:+X'=X!(X>5)!(X<1)!(X?.E1"."1N.N) X
"^DD",62.49,62.49,3,3)
Type a Number between 1 and 5, 0 Decimal Digits.
"^DD",62.49,62.49,3,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,3,21,1,0)
This field contains the priority put on each queued message.  The
"^DD",62.49,62.49,3,21,2,0)
priorities range from one to five, five being the lowest priority.
"^DD",62.49,62.49,3,"DT")
2940418
"^DD",62.49,62.49,4,0)
DATE/TIME ENTERED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",62.49,62.49,4,1,0)
^.1
"^DD",62.49,62.49,4,1,1,0)
62.49^AD^MUMPS
"^DD",62.49,62.49,4,1,1,1)
S ^LAHM(62.49,"AD",$P(X,"."),DA)=""
"^DD",62.49,62.49,4,1,1,2)
K ^LAHM(62.49,"AD",$P(X,"."),DA)
"^DD",62.49,62.49,4,1,1,3)
DO NOT DELETE
"^DD",62.49,62.49,4,1,1,"%D",0)
^^3^3^2970613^
"^DD",62.49,62.49,4,1,1,"%D",1,0)
This cross reference gives a breakdown of message by date.  The cross
"^DD",62.49,62.49,4,1,1,"%D",2,0)
reference is in the following format
"^DD",62.49,62.49,4,1,1,"%D",3,0)
  S ^LAHM(62.49,"AD",$P(DATE/TIME ENTERED,"."),MESSAGE NUMBER)=""
"^DD",62.49,62.49,4,1,1,"DT")
2950119
"^DD",62.49,62.49,4,3)
Enter the current date and time.
"^DD",62.49,62.49,4,21,0)
^^1^1^2970613^
"^DD",62.49,62.49,4,21,1,0)
This field contains the exact time that this entry was created.
"^DD",62.49,62.49,4,"DT")
2950119
"^DD",62.49,62.49,5,0)
INSTRUMENT NAME^F^^0;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>45!($L(X)<1) X
"^DD",62.49,62.49,5,1,0)
^.1^^0
"^DD",62.49,62.49,5,3)
Answer must be 1-45 characters in length.
"^DD",62.49,62.49,5,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,5,21,1,0)
This field contains the instrument name from the AUTO INSTRUMENT file
"^DD",62.49,62.49,5,21,2,0)
(#62.4).  This field is used for looking up messages by instrument name.
"^DD",62.49,62.49,5,"DT")
3070402
"^DD",62.49,62.49,5.1,0)
ADDITIONAL MESSAGE IDENTIFIERS^62.49002A^^.2;0
"^DD",62.49,62.49,5.1,21,0)
^^2^2^3070823^
"^DD",62.49,62.49,5.1,21,1,0)
Multiple to store additional message identifiers to lookup a message using
"^DD",62.49,62.49,5.1,21,2,0)
lab utilities.
"^DD",62.49,62.49,6,0)
MESSAGE TEXT^P62.49'^LAHM(62.49,^0;7^Q
"^DD",62.49,62.49,6,3)
This field contains the pointer to the entry that contains the HL7 message.
"^DD",62.49,62.49,6,21,0)
^^2^2^2970306^
"^DD",62.49,62.49,6,21,1,0)
This field holds a pointer to the entry in this file that contains the HL7
"^DD",62.49,62.49,6,21,2,0)
message text.
"^DD",62.49,62.49,6,"DT")
2970306
"^DD",62.49,62.49,100,0)
MSH^F^^100;1^K:$L(X)>3!($L(X)<3) X
"^DD",62.49,62.49,100,3)
Answer must be 3 characters in length.
"^DD",62.49,62.49,100,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,100,21,1,0)
This field contains the letters, "MSH".  Fields 100 through 111 are all
"^DD",62.49,62.49,100,21,2,0)
used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,100,"DT")
2940418
"^DD",62.49,62.49,101,0)
ENCODING CHARACTERS^F^^100;2^K:$L(X)>4!($L(X)<4) X
"^DD",62.49,62.49,101,3)
Answer must be 4 characters in length.
"^DD",62.49,62.49,101,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,101,21,1,0)
This field identifies this messages HL7 encoding characters.  Fields 100
"^DD",62.49,62.49,101,21,2,0)
through 111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,101,"DT")
2940418
"^DD",62.49,62.49,102,0)
SENDING APPLICATION^F^^100;3^K:$L(X)>15!($L(X)<1) X
"^DD",62.49,62.49,102,3)
Answer must be 1-15 characters in length.
"^DD",62.49,62.49,102,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,102,21,1,0)
This field contains the HL7 15 character sending application. Fields 100
"^DD",62.49,62.49,102,21,2,0)
through 111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,102,"DT")
2940418
"^DD",62.49,62.49,103,0)
SENDING FACILITY^F^^100;4^K:$L(X)>20!($L(X)<1) X
"^DD",62.49,62.49,103,3)
Answer must be 1-20 characters in length.
"^DD",62.49,62.49,103,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,103,21,1,0)
This field contains this messages HL7 sending facility.  Fields 100
"^DD",62.49,62.49,103,21,2,0)
through 111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,103,"DT")
2940418
"^DD",62.49,62.49,104,0)
RECEIVING APPLICATION^F^^100;5^K:$L(X)>15!($L(X)<1) X
"^DD",62.49,62.49,104,3)
Answer must be 1-15 characters in length.
"^DD",62.49,62.49,104,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,104,21,1,0)
This field contains the HL7 receiving application.  Fields 100 through 111
"^DD",62.49,62.49,104,21,2,0)
are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,104,"DT")
2940418
"^DD",62.49,62.49,105,0)
RECEIVING FACILITY^F^^100;6^K:$L(X)>20!($L(X)<1) X
"^DD",62.49,62.49,105,3)
Answer must be 1-20 characters in length.
"^DD",62.49,62.49,105,21,0)
^^3^3^2970613^
"^DD",62.49,62.49,105,21,1,0)
This field contains the HL7 receiving facility for this message.  Fields
"^DD",62.49,62.49,105,21,2,0)
100 through 111 are all used to identify the HL7 message header segment
"^DD",62.49,62.49,105,21,3,0)
(MSH).
"^DD",62.49,62.49,105,"DT")
2940418
"^DD",62.49,62.49,106,0)
DATE/TIME OF MESSAGE^FO^^100;7^K:$L(X)>19!($L(X)<1) X
"^DD",62.49,62.49,106,2)
S Y(0)=Y S Y=$$FMDATE^HLFNC(Y) D D^DIQ
"^DD",62.49,62.49,106,2.1)
S Y=$$FMDATE^HLFNC(Y) D D^DIQ
"^DD",62.49,62.49,106,3)
Answer must be 1-19 characters in length.
"^DD",62.49,62.49,106,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,106,21,1,0)
This field contains the date and time of the HL7 messages.  Fields 100
"^DD",62.49,62.49,106,21,2,0)
through 111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,106,"DT")
2940419
"^DD",62.49,62.49,107,0)
SECURITY^F^^100;8^K:$L(X)>40!($L(X)<1) X
"^DD",62.49,62.49,107,3)
Answer must be 1-40 characters in length.
"^DD",62.49,62.49,107,21,0)
^^3^3^2970613^
"^DD",62.49,62.49,107,21,1,0)
This field contains the security information in the HL7 message.  Fields
"^DD",62.49,62.49,107,21,2,0)
100 through 111 are all used to identify the HL7 message header segment
"^DD",62.49,62.49,107,21,3,0)
(MSH).
"^DD",62.49,62.49,107,"DT")
2970126
"^DD",62.49,62.49,108,0)
MESSAGE TYPE^F^^100;9^K:$L(X)>7!($L(X)<1) X
"^DD",62.49,62.49,108,3)
Answer must be 1-7 characters in length.
"^DD",62.49,62.49,108,21,0)
^^3^3^2970613^
"^DD",62.49,62.49,108,21,1,0)
This field contains the message type (ORU, ORM, ORR, ...) of the HL7
"^DD",62.49,62.49,108,21,2,0)
message.  Fields 100 through 111 are all used to identify the HL7 message
"^DD",62.49,62.49,108,21,3,0)
header segment (MSH).
"^DD",62.49,62.49,108,"DT")
3020319
"^DD",62.49,62.49,109,0)
MESSAGE CONTROL ID^F^^100;10^K:$L(X)>20!($L(X)<1) X
"^DD",62.49,62.49,109,1,0)
^.1
"^DD",62.49,62.49,109,1,1,0)
62.49^ID
"^DD",62.49,62.49,109,1,1,1)
S ^LAHM(62.49,"ID",$E(X,1,30),DA)=""
"^DD",62.49,62.49,109,1,1,2)
K ^LAHM(62.49,"ID",$E(X,1,30),DA)
"^DD",62.49,62.49,109,1,1,"%D",0)
^^3^3^2970613^
"^DD",62.49,62.49,109,1,1,"%D",1,0)
This cross reference is used by the ORU acknowledgment processing routine,
"^DD",62.49,62.49,109,1,1,"%D",2,0)
ACK^LA7VMSG, to update the status in the LAB PENDING ORDERS ENTRY file
"^DD",62.49,62.49,109,1,1,"%D",3,0)
(#69.6).
"^DD",62.49,62.49,109,1,1,"DT")
2970122
"^DD",62.49,62.49,109,3)
Answer must be 1-20 characters in length.
"^DD",62.49,62.49,109,21,0)
^^3^3^2970613^
"^DD",62.49,62.49,109,21,1,0)
This field contains the HL7 unique message control id.  This is used by
"^DD",62.49,62.49,109,21,2,0)
the HL7 package to uniquely identify every message.  Fields 100 through
"^DD",62.49,62.49,109,21,3,0)
111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,109,"DT")
2970122
"^DD",62.49,62.49,110,0)
PROCESSING ID^S^D:DEBUGGING;P:PRODUCTION;T:TRAINING;^100;11^Q
"^DD",62.49,62.49,110,3)
Enter in the HL7 processing id.
"^DD",62.49,62.49,110,21,0)
^^4^4^2970613^
"^DD",62.49,62.49,110,21,1,0)
This field contains the HL7 processing id.  This field is used by HL7 to
"^DD",62.49,62.49,110,21,2,0)
differentiate between messages for debugging, production, and training.
"^DD",62.49,62.49,110,21,3,0)
Fields 100 through 111 are all used to identify the HL7 message header
"^DD",62.49,62.49,110,21,4,0)
segment (MSH).
"^DD",62.49,62.49,110,"DT")
2940418
"^DD",62.49,62.49,111,0)
VERSION ID^F^^100;12^K:$L(X)>8!($L(X)<1) X
"^DD",62.49,62.49,111,3)
Answer must be 1-8 characters in length.
"^DD",62.49,62.49,111,21,0)
^^2^2^2970613^
"^DD",62.49,62.49,111,21,1,0)
This field contains the HL7 version id for this HL7 message.  Fields 100
"^DD",62.49,62.49,111,21,2,0)
through 111 are all used to identify the HL7 message header segment (MSH).
"^DD",62.49,62.49,111,"DT")
2940418
"^DD",62.49,62.49,150,0)
HL7 TEXT^62.495^^150;0
"^DD",62.49,62.49,150,21,0)
^^1^1^2970613^
"^DD",62.49,62.49,150,21,1,0)
This field contains the actual text HL7 message. 
"^DD",62.49,62.49,151,0)
HUID^F^^63;1^K:$L(X)>30!($L(X)<1) X
"^DD",62.49,62.49,151,3)
The field holds the Host site's universal identifier.
"^DD",62.49,62.49,151,21,0)
^^2^2^2970602^^
"^DD",62.49,62.49,151,21,1,0)
This field represents the Host site's universal identifier or unique
"^DD",62.49,62.49,151,21,2,0)
accession number.
"^DD",62.49,62.49,151,"DT")
2970121
"^DD",62.49,62.49,152,0)
REMOTE SYSTEM^F^^63;2^K:$L(X)>7!($L(X)<2) X
"^DD",62.49,62.49,152,3)
This field contains the primary hospital's station number.
"^DD",62.49,62.49,152,21,0)
^^1^1^2970602^
"^DD",62.49,62.49,152,21,1,0)
This field contains the primary hospital's station number.
"^DD",62.49,62.49,152,"DT")
2970317
"^DD",62.49,62.49,153,0)
RUID^F^^63;3^K:$L(X)>30!($L(X)<1) X
"^DD",62.49,62.49,153,3)
This field holds the remote site's universal identifier.
"^DD",62.49,62.49,153,21,0)
^^2^2^2970602^
"^DD",62.49,62.49,153,21,1,0)
This field contains the remote site's universal identifier or unique
"^DD",62.49,62.49,153,21,2,0)
accession number.
"^DD",62.49,62.49,153,"DT")
2970121
"^DD",62.49,62.49,154,0)
ORDERED TEST^F^^63;4^K:$L(X)>60!($L(X)<1) X
"^DD",62.49,62.49,154,3)
Answer must be 1-60 characters in length.
"^DD",62.49,62.49,154,21,0)
^^2^2^2971014^^^^
"^DD",62.49,62.49,154,21,1,0)
This field contains the free text value of the ordered test.  This field is 
"^DD",62.49,62.49,154,21,2,0)
used to link the results back to the ordered test.
"^DD",62.49,62.49,154,"DT")
2971014
"^DD",62.49,62.49,155,0)
NLT^F^^63;5^K:$L(X)>10!($L(X)<1) X
"^DD",62.49,62.49,155,3)
This field holds the NLT code for the ordered test.
"^DD",62.49,62.49,155,21,0)
^^2^2^2970602^
"^DD",62.49,62.49,155,21,1,0)
This field contains the NLT code from the WKLD CODE file (#64) for the
"^DD",62.49,62.49,155,21,2,0)
ordered test.
"^DD",62.49,62.49,155,"DT")
2970121
"^DD",62.49,62.49,156,0)
INVERSE DATE^F^^63;6^K:$L(X)>20!($L(X)<1) X
"^DD",62.49,62.49,156,3)
This field holds the inverse date of the ordered test.
"^DD",62.49,62.49,156,21,0)
^^1^1^2970121^
"^DD",62.49,62.49,156,21,1,0)
This field contains the inverse date of the ordered test.
"^DD",62.49,62.49,156,"DT")
2970121
"^DD",62.49,62.49,157,0)
SUBSCRIPT^F^^63;7^K:$L(X)>4!($L(X)<2) X
"^DD",62.49,62.49,157,3)
This field holds the LAB DATA file (#63) subscript node of the results for the ordered test.
"^DD",62.49,62.49,157,21,0)
^^1^1^2970602^
"^DD",62.49,62.49,157,21,1,0)
This field contains the subscript location of the results.  (Ex. "CH")
"^DD",62.49,62.49,157,"DT")
2970121
"^DD",62.49,62.49,158,0)
LRDFN^F^^63;8^K:$L(X)>20!($L(X)<1) X
"^DD",62.49,62.49,158,3)
This field holds the patients LRDFN.
"^DD",62.49,62.49,158,21,0)
^^2^2^2970122^
"^DD",62.49,62.49,158,21,1,0)
This field contains the LRDFN of the patients for which the tests were
"^DD",62.49,62.49,158,21,2,0)
ordered.
"^DD",62.49,62.49,158,"DT")
2970122
"^DD",62.49,62.49,159,0)
ORDERED DATE^D^^63;9^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",62.49,62.49,159,3)
This field holds the date the test was ordered.
"^DD",62.49,62.49,159,21,0)
^^1^1^2970122^
"^DD",62.49,62.49,159,21,1,0)
This field contains the date the test was ordered.
"^DD",62.49,62.49,159,"DT")
2970122
"^DD",62.49,62.49,160,0)
ERROR CODE^F^^ERR;1^K:$L(X)>10!($L(X)<1) X
"^DD",62.49,62.49,160,3)
This field holds the error codes returned by the HL7 package.
"^DD",62.49,62.49,160,21,0)
^^2^2^2970612^^
"^DD",62.49,62.49,160,21,1,0)
This field contains any error codes returned by the VISTA Health Level
"^DD",62.49,62.49,160,21,2,0)
Seven (HL7) package while processing HL7 messages.
"^DD",62.49,62.49,160,"DT")
2970122
"^DD",62.49,62.49,161,0)
ERROR MESSAGE^F^^ERR;2^K:$L(X)>60!($L(X)<1) X
"^DD",62.49,62.49,161,3)
This field holds text error messages that might occur while processing HL7 messages.
"^DD",62.49,62.49,161,21,0)
^^2^2^2970612^^^
"^DD",62.49,62.49,161,21,1,0)
This field holds text error messages that might occur while processing
"^DD",62.49,62.49,161,21,2,0)
HL7 messages.
"^DD",62.49,62.49,161,"DT")
2970122
"^DD",62.49,62.49,162,0)
CH SUBSCRIPT^62.49162A^^1;0
"^DD",62.49,62.49,162,21,0)
^^2^2^2970612^^
"^DD",62.49,62.49,162,21,1,0)
This multiple contains the "CH" subscript nodes where the results are
"^DD",62.49,62.49,162,21,2,0)
stored in the LAB DATA file (#63).
"^DD",62.49,62.49,700,0)
HL7 ENV^F^^700;1^K:$L(X)>245!($L(X)<1) X
"^DD",62.49,62.49,700,3)
Answer must be 1-245 characters in length
"^DD",62.49,62.49,700,21,0)
^^1^1^3030418^
"^DD",62.49,62.49,700,21,1,0)
Stores HL7 environment relating to incoming HL7 message for later use in generating an HL7 application acknowledgement.
"^DD",62.49,62.49,700,"DT")
3030418
"^DD",62.49,62.49002,0)
ADDITIONAL MESSAGE IDENTIFIERS SUB-FIELD^^.01^1
"^DD",62.49,62.49002,0,"DT")
3070217
"^DD",62.49,62.49002,0,"NM","ADDITIONAL MESSAGE IDENTIFIERS")

"^DD",62.49,62.49002,0,"UP")
62.49
"^DD",62.49,62.49002,.01,0)
ADDITIONAL MESSAGE IDENTIFIERS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",62.49,62.49002,.01,1,0)
^.1^^0
"^DD",62.49,62.49002,.01,3)
Answer must be 1-80 characters in length.
"^DD",62.49,62.49002,.01,21,0)
^^1^1^3070402^^
"^DD",62.49,62.49002,.01,21,1,0)
Multiple to store additional message identifiers to lookup a message using lab utilities.
"^DD",62.49,62.49002,.01,"DT")
3070413
"^DD",62.49,62.49162,0)
CH SUBSCRIPT SUB-FIELD^^.02^2
"^DD",62.49,62.49162,0,"DT")
2970410
"^DD",62.49,62.49162,0,"IX","B",62.49162,.01)

"^DD",62.49,62.49162,0,"NM","CH SUBSCRIPT")

"^DD",62.49,62.49162,0,"UP")
62.49
"^DD",62.49,62.49162,.01,0)
CH SUBSCRIPT^F^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",62.49,62.49162,.01,1,0)
^.1
"^DD",62.49,62.49162,.01,1,1,0)
62.49162^B
"^DD",62.49,62.49162,.01,1,1,1)
S ^LAHM(62.49,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",62.49,62.49162,.01,1,1,2)
K ^LAHM(62.49,DA(1),1,"B",$E(X,1,30),DA)
"^DD",62.49,62.49162,.01,3)
Answer must be 1-10 characters in length.
"^DD",62.49,62.49162,.01,21,0)
^^3^3^3030107^^^
"^DD",62.49,62.49162,.01,21,1,0)
This multiple contains the "CH" subscript node where the results are
"^DD",62.49,62.49162,.01,21,2,0)
stored in the LAB DATA file (#63).  The field is used in the processing
"^DD",62.49,62.49162,.01,21,3,0)
and transmission of HL7 result messages.
"^DD",62.49,62.49162,.01,"DT")
3030107
"^DD",62.49,62.49162,.02,0)
CORRECTED RESULTS^S^C:CORRECTED;^0;2^Q
"^DD",62.49,62.49162,.02,3)
Indicate if these results are a correction to a previous report.
"^DD",62.49,62.49162,.02,21,0)
^^3^3^3030107^^
"^DD",62.49,62.49162,.02,21,1,0)
Indicates if the results being transmitted are a correction
"^DD",62.49,62.49162,.02,21,2,0)
to a previous report. The HL7 message will indicate this
"^DD",62.49,62.49162,.02,21,3,0)
status when transmitting these results.
"^DD",62.49,62.49162,.02,"DT")
3030107
"^DD",62.49,62.495,0)
HL7 TEXT SUB-FIELD^^.01^1
"^DD",62.49,62.495,0,"DT")
2940418
"^DD",62.49,62.495,0,"NM","HL7 TEXT")

"^DD",62.49,62.495,0,"UP")
62.49
"^DD",62.49,62.495,.01,0)
HL7 TEXT^WL^^0;1^Q
"^DD",62.49,62.495,.01,21,0)
^^1^1^2970613^
"^DD",62.49,62.495,.01,21,1,0)
This field contains the actual text HL7 message. 
"^DD",62.49,62.495,.01,"DT")
2940418
"^DD",62.8,62.801,.08,0)
TEST STATUS^RS^0:CANCELLED/REMOVED;1:PENDING SHIPMENT;2:SHIPPED;3:RECEIVED;4:PARTIAL;5:COMPLETED;6:REJECTED;^0;8^Q
"^DD",62.8,62.801,.08,3)
Enter the status of this test as it pertains to the shipping manifest.
"^DD",62.8,62.801,.08,21,0)
^^3^3^2970616^
"^DD",62.8,62.801,.08,21,1,0)
This field contains the status of the test as it pertains to the shipping
"^DD",62.8,62.801,.08,21,2,0)
manifest.  This field is updated by various events within the Laboratory
"^DD",62.8,62.801,.08,21,3,0)
Electronic Data Interchange (LEDI) software.
"^DD",62.8,62.801,.08,"DT")
3060712
"^DD",62.8,62.801,20.1,0)
NON-VA SPECIMEN SNOMED CT^NJ10,0^^SCT;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",62.8,62.801,20.1,3)
Type a number between 1 and 9999999999, 0 Decimal Digits
"^DD",62.8,62.801,20.1,21,0)
^^4^4^3061222^^
"^DD",62.8,62.801,20.1,21,1,0)
Allows a facility to transmit a SNOMED CT ID code for a specimen topography
"^DD",62.8,62.801,20.1,21,2,0)
that is different than the code assigned by the VA to the term.
"^DD",62.8,62.801,20.1,21,3,0)
It accommodates those situations when the external system does not
"^DD",62.8,62.801,20.1,21,4,0)
recognize or accept the standard VA code assigned to a given term.
"^DD",62.8,62.801,20.1,"DT")
3061222
"^DD",62.8,62.801,20.2,0)
NON-VA SAMPLE SNOMED CT^NJ10,0^^SCT;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",62.8,62.801,20.2,3)
Type a number between 1 and 9999999999, 0 Decimal Digits
"^DD",62.8,62.801,20.2,21,0)
^^4^4^3061222^
"^DD",62.8,62.801,20.2,21,1,0)
Allows a facility to transmit a SNOMED CT ID code for a collection sample
"^DD",62.8,62.801,20.2,21,2,0)
that is different than the code assigned by the VA to the term.
"^DD",62.8,62.801,20.2,21,3,0)
It accommodates those situations when the external system does not
"^DD",62.8,62.801,20.2,21,4,0)
recognize or accepts the assigned standard VA code .
"^DD",62.8,62.801,20.2,"DT")
3061222
"^DD",62.9,62.9,44,0)
ORDERING LOCATION^62.9003P^^44;0
"^DD",62.9,62.9,44,21,0)
^^13^13^3100325^
"^DD",62.9,62.9,44,21,1,0)
Use this field to specify specific ordering locations used by this
"^DD",62.9,62.9,44,21,2,0)
configuration. Only those ordering locations defined will attempt to
"^DD",62.9,62.9,44,21,3,0)
build to a manifest related to this configuration.
"^DD",62.9,62.9,44,21,4,0)
 
"^DD",62.9,62.9,44,21,5,0)
This field is useful when an accession area is shared by a division that
"^DD",62.9,62.9,44,21,6,0)
has multiple physical locations which ship independently of each other.
"^DD",62.9,62.9,44,21,7,0)
It allows specimens from selected locations to build to a manifest and
"^DD",62.9,62.9,44,21,8,0)
avoid adding specimens from other locations that match on other criteria
"^DD",62.9,62.9,44,21,9,0)
- accession area, division, test.
"^DD",62.9,62.9,44,21,10,0)
 
"^DD",62.9,62.9,44,21,11,0)
If there are no ordering locations specified then ordering location will 
"^DD",62.9,62.9,44,21,12,0)
not be a factor is selecting and placing an accession on a manifest 
"^DD",62.9,62.9,44,21,13,0)
related to this configuration.
"^DD",62.9,62.9001,.026,0)
FEEDER SHIPPING CONFIGURATION^62.9002P^^6;0
"^DD",62.9,62.9001,.026,21,0)
^^16^16^3070823^
"^DD",62.9,62.9001,.026,21,1,0)
Allows the site to indicate that this test is eligible for a manifest 
"^DD",62.9,62.9001,.026,21,2,0)
related to this shipping configuration if the specimen/test has been 
"^DD",62.9,62.9001,.026,21,3,0)
received via the designated feeder shipping configuration which was used 
"^DD",62.9,62.9001,.026,21,4,0)
to receive the specimen.
"^DD",62.9,62.9001,.026,21,5,0)
 
"^DD",62.9,62.9001,.026,21,6,0)
Example: A CBOC ships a specimen/test to the main VistA facility. The 
"^DD",62.9,62.9001,.026,21,7,0)
main VistA facility then needs to place this specimen/test on another 
"^DD",62.9,62.9001,.026,21,8,0)
shipping configuration manifest to ship to another laboratory. By 
"^DD",62.9,62.9001,.026,21,9,0)
designating the feeder shipping configuration this test will only be 
"^DD",62.9,62.9001,.026,21,10,0)
added to the manifest if it has been received by the laboratory via a 
"^DD",62.9,62.9001,.026,21,11,0)
manifest related to the feeder shipping configuration.
"^DD",62.9,62.9001,.026,21,12,0)
 
"^DD",62.9,62.9001,.026,21,13,0)
 
"^DD",62.9,62.9001,.026,21,14,0)
If the manifest related to the feeder shipping configuration has not been 
"^DD",62.9,62.9001,.026,21,15,0)
received then the test will not be added to prevent it being placed on a 
"^DD",62.9,62.9001,.026,21,16,0)
manifest before the specimen has arrived.
"^DD",62.9,62.9001,2.36,0)
COLLECTION WEIGHT CODE^*P95.3'X^LAB(95.3,^2;9^S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN WEIGHT""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",62.9,62.9001,2.36,3)
Enter the appropriate LOINC code to identify this specimen's weight.
"^DD",62.9,62.9001,2.36,12)
Only allow selection of LOINC codes with "SPECIMEN WEIGHT" component.
"^DD",62.9,62.9001,2.36,12.1)
S DIC("S")="I $$GET1^DIQ(95.3,Y_"","",1)=""SPECIMEN WEIGHT"""
"^DD",62.9,62.9001,2.36,21,0)
^.001^2^2^3110105^^
"^DD",62.9,62.9001,2.36,21,1,0)
Enter the appropriate LOINC code to identify
"^DD",62.9,62.9001,2.36,21,2,0)
the specimen's collection weight. 
"^DD",62.9,62.9001,2.36,"DT")
3110105
"^DD",62.9,62.9002,0)
FEEDER SHIPPING CONFIGURATION SUB-FIELD^^.01^1
"^DD",62.9,62.9002,0,"DT")
3060711
"^DD",62.9,62.9002,0,"IX","B",62.9002,.01)

"^DD",62.9,62.9002,0,"NM","FEEDER SHIPPING CONFIGURATION")

"^DD",62.9,62.9002,0,"UP")
62.9001
"^DD",62.9,62.9002,.01,0)
FEEDER SHIPPING CONFIGURATION^MP62.9'^LAHM(62.9,^0;1^Q
"^DD",62.9,62.9002,.01,1,0)
^.1
"^DD",62.9,62.9002,.01,1,1,0)
62.9002^B
"^DD",62.9,62.9002,.01,1,1,1)
S ^LAHM(62.9,DA(2),60,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",62.9,62.9002,.01,1,1,2)
K ^LAHM(62.9,DA(2),60,DA(1),6,"B",$E(X,1,30),DA)
"^DD",62.9,62.9002,.01,3)
Enter the shipping configuration this test was received via.
"^DD",62.9,62.9002,.01,21,0)
^^16^16^3060711^
"^DD",62.9,62.9002,.01,21,1,0)
Allows the site to indicate that this test is eligible for a
"^DD",62.9,62.9002,.01,21,2,0)
manifest related to this shipping configuration if the specimen/test
"^DD",62.9,62.9002,.01,21,3,0)
has been received via the designated feeder shipping configuration
"^DD",62.9,62.9002,.01,21,4,0)
which was used to receive the specimen.
"^DD",62.9,62.9002,.01,21,5,0)
 
"^DD",62.9,62.9002,.01,21,6,0)
Example: A CBOC ships a specimen/test to the main VistA facility. The
"^DD",62.9,62.9002,.01,21,7,0)
main VistA facility then needs to place this specimen/test on another
"^DD",62.9,62.9002,.01,21,8,0)
shipping configuration manifest to ship to another laboratory. By
"^DD",62.9,62.9002,.01,21,9,0)
designating the feeder shipping configuration this test will only be
"^DD",62.9,62.9002,.01,21,10,0)
added to the manifest if it has been received by the laboratory via
"^DD",62.9,62.9002,.01,21,11,0)
a manifest related to the feeder shipping configuration.
"^DD",62.9,62.9002,.01,21,12,0)
 
"^DD",62.9,62.9002,.01,21,13,0)
If the manifest related to the feeder shipping configuration has not
"^DD",62.9,62.9002,.01,21,14,0)
been received then the test will not be added to prevent it being
"^DD",62.9,62.9002,.01,21,15,0)
placed on a manifest before the specimen has arrived.
"^DD",62.9,62.9002,.01,21,16,0)

"^DD",62.9,62.9002,.01,"DT")
3060711
"^DD",62.9,62.9003,0)
ORDERING LOCATION SUB-FIELD^^.01^1
"^DD",62.9,62.9003,0,"DT")
3100325
"^DD",62.9,62.9003,0,"IX","B",62.9003,.01)

"^DD",62.9,62.9003,0,"NM","ORDERING LOCATION")

"^DD",62.9,62.9003,0,"UP")
62.9
"^DD",62.9,62.9003,.01,0)
ORDERING LOCATION^MP44'^SC(^0;1^Q
"^DD",62.9,62.9003,.01,1,0)
^.1
"^DD",62.9,62.9003,.01,1,1,0)
62.9003^B
"^DD",62.9,62.9003,.01,1,1,1)
S ^LAHM(62.9,DA(1),44,"B",$E(X,1,30),DA)=""
"^DD",62.9,62.9003,.01,1,1,2)
K ^LAHM(62.9,DA(1),44,"B",$E(X,1,30),DA)
"^DD",62.9,62.9003,.01,3)
Enter the ordering location used by this configuration.
"^DD",62.9,62.9003,.01,21,0)
^^13^13^3100325^
"^DD",62.9,62.9003,.01,21,1,0)
Use this field to specify specific ordering locations used by this 
"^DD",62.9,62.9003,.01,21,2,0)
configuration. Only those ordering locations defined will attempt to 
"^DD",62.9,62.9003,.01,21,3,0)
build to a manifest related to this configuration.
"^DD",62.9,62.9003,.01,21,4,0)
  
"^DD",62.9,62.9003,.01,21,5,0)
This field is useful when an accession area is shared by a division that 
"^DD",62.9,62.9003,.01,21,6,0)
has multiple physical locations which ship independently of each other.
"^DD",62.9,62.9003,.01,21,7,0)
It allows specimens from selected locations to build to a manifest and 
"^DD",62.9,62.9003,.01,21,8,0)
avoid adding specimens from other locations that match on other criteria 
"^DD",62.9,62.9003,.01,21,9,0)
- accession area, division, test.
"^DD",62.9,62.9003,.01,21,10,0)
 
"^DD",62.9,62.9003,.01,21,11,0)
If there are no ordering locations specified then ordering location will
"^DD",62.9,62.9003,.01,21,12,0)
not be a factor is selecting and placing an accession on a manifest
"^DD",62.9,62.9003,.01,21,13,0)
related to this configuration.
"^DD",62.9,62.9003,.01,"DT")
3100325
"^DIC",62.47,62.47,0)
LAB CODE MAPPING^62.47
"^DIC",62.47,62.47,0,"GL")
^LAB(62.47,
"^DIC",62.47,62.47,"%",0)
^1.005^^0
"^DIC",62.47,62.47,"%D",0)
^1.001^17^17^3070730^^^^
"^DIC",62.47,62.47,"%D",1,0)
Used to map standard code system concepts to the related area of the Laboratory
"^DIC",62.47,62.47,"%D",2,0)
package database. It supports mapping codes used in the role identifying the
"^DIC",62.47,62.47,"%D",3,0)
result or expressing the answer.
"^DIC",62.47,62.47,"%D",4,0)
 
"^DIC",62.47,62.47,"%D",5,0)
Examples of result codes are LOINC and VA NLT Test Result codes such as
"^DIC",62.47,62.47,"%D",6,0)
LOINC code 11475-1 MICROORGANISM IDENTIFIED: PRID:PT:XXX:NOM:CULTURE which
"^DIC",62.47,62.47,"%D",7,0)
represents the concept of organism identified.
"^DIC",62.47,62.47,"%D",8,0)
 
"^DIC",62.47,62.47,"%D",9,0)
Examples of answer codes are SNOMED CT code 23506009 which is the term
"^DIC",62.47,62.47,"%D",10,0)
'normal flora' or SNOMED CT code 30334005 AEROMONAS SALMONICIDA (ORGANISM)
"^DIC",62.47,62.47,"%D",11,0)
which represents the name of the organism identified.
"^DIC",62.47,62.47,"%D",12,0)
 
"^DIC",62.47,62.47,"%D",13,0)
This file should not export its data via the standard KIDS data export 
"^DIC",62.47,62.47,"%D",14,0)
mechanism.  Because local codes can have the same identifier as national 
"^DIC",62.47,62.47,"%D",15,0)
codes, the KIDS install may inadvertently overwrite local codes.  Data 
"^DIC",62.47,62.47,"%D",16,0)
exports should use a different mechanism, such as using KIDS Transport 
"^DIC",62.47,62.47,"%D",17,0)
global to load the data onto the target system.
"^DIC",62.47,"B","LAB CODE MAPPING",62.47)

"^DIC",62.485,62.485,0)
LA7 MESSAGE LOG BULLETINS^62.485
"^DIC",62.485,62.485,0,"GL")
^LAHM(62.485,
"^DIC",62.485,62.485,"%D",0)
^^8^8^2970612^
"^DIC",62.485,62.485,"%D",1,0)
This file stores canned text for logging errors or exceptional 
"^DIC",62.485,62.485,"%D",2,0)
conditions during message processing.
"^DIC",62.485,62.485,"%D",3,0)
 
"^DIC",62.485,62.485,"%D",4,0)
This file should not be edited locally by the site, but if a local
"^DIC",62.485,62.485,"%D",5,0)
messaging system is developed, and entries must be added, the site
"^DIC",62.485,62.485,"%D",6,0)
should add new entries at entry numbers higher than 999. It is preferred
"^DIC",62.485,62.485,"%D",7,0)
that the local codes be preceded with the three digit primary site number
"^DIC",62.485,62.485,"%D",8,0)
which would result in a seven digit number, site #_xxxx.
"^DIC",62.485,"B","LA7 MESSAGE LOG BULLETINS",62.485)

"^DIC",62.49,62.49,0)
LA7 MESSAGE QUEUE^62.49
"^DIC",62.49,62.49,0,"GL")
^LAHM(62.49,
"^DIC",62.49,62.49,"%D",0)
^^4^4^2950406^^^
"^DIC",62.49,62.49,"%D",1,0)
This file is used to store the messages that are sent or received by the
"^DIC",62.49,62.49,"%D",2,0)
Lab Messaging system.
"^DIC",62.49,62.49,"%D",3,0)
This file is populated by application routines and should not be edited
"^DIC",62.49,62.49,"%D",4,0)
by users.
"^DIC",62.49,"B","LA7 MESSAGE QUEUE",62.49)

**END**
**END**
