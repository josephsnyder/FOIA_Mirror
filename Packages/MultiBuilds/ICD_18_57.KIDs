KIDS Distribution saved on Apr 21, 2014@18:01:50
ICD*18.0*57/LEX*2.0*80 Install
**KIDS**:ICD*18.0*57^LEX*2.0*80^

**INSTALL NAME**
ICD*18.0*57
"BLD",8258,0)
ICD*18.0*57^DRG GROUPER^0^3140421^y
"BLD",8258,1,0)
^9.61A^3^3^3120314^^^
"BLD",8258,1,1,0)
ICD*18.0*57 contains the files and routines for the implementation
"BLD",8258,1,2,0)
of ICD-10.  The data is contained in a Lexicon companion patch 
"BLD",8258,1,3,0)
LEX*2.0*80.
"BLD",8258,4,0)
^9.64PA^82.13^6
"BLD",8258,4,80,0)
80
"BLD",8258,4,80,222)
y^y^f^^^^n
"BLD",8258,4,80.1,0)
80.1
"BLD",8258,4,80.1,222)
y^y^f^^^^n
"BLD",8258,4,80.4,0)
80.4
"BLD",8258,4,80.4,222)
y^y^f^^n^^y^o^n
"BLD",8258,4,82,0)
82
"BLD",8258,4,82,222)
y^y^f^^n^^y^o^n
"BLD",8258,4,82.1,0)
82.1
"BLD",8258,4,82.1,222)
y^y^f^^n^^y^o^n
"BLD",8258,4,82.13,0)
82.13
"BLD",8258,4,82.13,222)
y^y^f^^^^n
"BLD",8258,4,"B",80,80)

"BLD",8258,4,"B",80.1,80.1)

"BLD",8258,4,"B",80.4,80.4)

"BLD",8258,4,"B",82,82)

"BLD",8258,4,"B",82.1,82.1)

"BLD",8258,4,"B",82.13,82.13)

"BLD",8258,6.3)
1
"BLD",8258,"ABPKG")
n
"BLD",8258,"INI")
PRE^ICD1857P
"BLD",8258,"INIT")
POST^ICD1857P
"BLD",8258,"KRN",0)
^9.67PA^779.2^20
"BLD",8258,"KRN",.4,0)
.4
"BLD",8258,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",8258,"KRN",.401,0)
.401
"BLD",8258,"KRN",.402,0)
.402
"BLD",8258,"KRN",.403,0)
.403
"BLD",8258,"KRN",.5,0)
.5
"BLD",8258,"KRN",.84,0)
.84
"BLD",8258,"KRN",3.6,0)
3.6
"BLD",8258,"KRN",3.8,0)
3.8
"BLD",8258,"KRN",9.2,0)
9.2
"BLD",8258,"KRN",9.8,0)
9.8
"BLD",8258,"KRN",9.8,"NM",0)
^9.68A^77^42
"BLD",8258,"KRN",9.8,"NM",24,0)
ICD1857^^0^B176584453
"BLD",8258,"KRN",9.8,"NM",25,0)
ICDID^^0^B42005252
"BLD",8258,"KRN",9.8,"NM",26,0)
ICDIDX^^0^B81806882
"BLD",8258,"KRN",9.8,"NM",27,0)
ICDIDX2^^0^B39101671
"BLD",8258,"KRN",9.8,"NM",28,0)
ICD9IDX^^1^
"BLD",8258,"KRN",9.8,"NM",29,0)
ICD0IDX^^1^
"BLD",8258,"KRN",9.8,"NM",39,0)
ICDEXC^^0^B108523477
"BLD",8258,"KRN",9.8,"NM",40,0)
ICDEXC2^^0^B74960854
"BLD",8258,"KRN",9.8,"NM",41,0)
ICDEXC3^^0^B75483213
"BLD",8258,"KRN",9.8,"NM",42,0)
ICDEXA^^0^B28447306
"BLD",8258,"KRN",9.8,"NM",43,0)
ICDEXA2^^0^B66742760
"BLD",8258,"KRN",9.8,"NM",44,0)
ICDEXS^^0^B149154345
"BLD",8258,"KRN",9.8,"NM",45,0)
ICDEX^^0^B73946334
"BLD",8258,"KRN",9.8,"NM",46,0)
ICDCODE^^0^B17241457
"BLD",8258,"KRN",9.8,"NM",47,0)
ICDAPIU^^0^B1779997
"BLD",8258,"KRN",9.8,"NM",48,0)
ICDSUPT^^0^B4754457
"BLD",8258,"KRN",9.8,"NM",49,0)
ICDEXA3^^0^B159565550
"BLD",8258,"KRN",9.8,"NM",50,0)
ICDEXD^^0^B28893974
"BLD",8258,"KRN",9.8,"NM",51,0)
ICDEXD2^^0^B91571446
"BLD",8258,"KRN",9.8,"NM",52,0)
ICDEXLK^^0^B199827276
"BLD",8258,"KRN",9.8,"NM",53,0)
ICDEXLK2^^0^B168472768
"BLD",8258,"KRN",9.8,"NM",54,0)
ICDEXLK3^^0^B98024730
"BLD",8258,"KRN",9.8,"NM",55,0)
ICDEXLK4^^0^B25896513
"BLD",8258,"KRN",9.8,"NM",56,0)
ICDEXLK5^^0^B75373289
"BLD",8258,"KRN",9.8,"NM",57,0)
ICDXCODE^^0^B7083997
"BLD",8258,"KRN",9.8,"NM",59,0)
ICDEXH^^0^B89157219
"BLD",8258,"KRN",9.8,"NM",62,0)
ICDSAPI^^0^B3564588
"BLD",8258,"KRN",9.8,"NM",63,0)
ICDEXD3^^0^B14191421
"BLD",8258,"KRN",9.8,"NM",64,0)
ICD1857P^^0^B10496780
"BLD",8258,"KRN",9.8,"NM",65,0)
ICDDIC^^0^B40496787
"BLD",8258,"KRN",9.8,"NM",66,0)
ICDDICA^^0^B99850836
"BLD",8258,"KRN",9.8,"NM",67,0)
ICDEXS2^^0^B4261248
"BLD",8258,"KRN",9.8,"NM",68,0)
ICDEXD4^^0^B78522708
"BLD",8258,"KRN",9.8,"NM",69,0)
ICDCOD^^0^B5702581
"BLD",8258,"KRN",9.8,"NM",70,0)
ICDDRG^^0^B34375895
"BLD",8258,"KRN",9.8,"NM",71,0)
ICDDRGM^^0^B31028651
"BLD",8258,"KRN",9.8,"NM",72,0)
ICDGTDRG^^0^B3954114
"BLD",8258,"KRN",9.8,"NM",73,0)
ICDREF^^0^B499599
"BLD",8258,"KRN",9.8,"NM",74,0)
ICDEXD5^^0^B63389361
"BLD",8258,"KRN",9.8,"NM",75,0)
ICDEXC4^^0^B11534357
"BLD",8258,"KRN",9.8,"NM",76,0)
ICDTOKN^^0^B33213278
"BLD",8258,"KRN",9.8,"NM",77,0)
ICDEXLK6^^0^B83204817
"BLD",8258,"KRN",9.8,"NM","B","ICD0IDX",29)

"BLD",8258,"KRN",9.8,"NM","B","ICD1857",24)

"BLD",8258,"KRN",9.8,"NM","B","ICD1857P",64)

"BLD",8258,"KRN",9.8,"NM","B","ICD9IDX",28)

"BLD",8258,"KRN",9.8,"NM","B","ICDAPIU",47)

"BLD",8258,"KRN",9.8,"NM","B","ICDCOD",69)

"BLD",8258,"KRN",9.8,"NM","B","ICDCODE",46)

"BLD",8258,"KRN",9.8,"NM","B","ICDDIC",65)

"BLD",8258,"KRN",9.8,"NM","B","ICDDICA",66)

"BLD",8258,"KRN",9.8,"NM","B","ICDDRG",70)

"BLD",8258,"KRN",9.8,"NM","B","ICDDRGM",71)

"BLD",8258,"KRN",9.8,"NM","B","ICDEX",45)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXA",42)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXA2",43)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXA3",49)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXC",39)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXC2",40)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXC3",41)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXC4",75)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXD",50)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXD2",51)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXD3",63)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXD4",68)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXD5",74)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXH",59)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK",52)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK2",53)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK3",54)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK4",55)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK5",56)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXLK6",77)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXS",44)

"BLD",8258,"KRN",9.8,"NM","B","ICDEXS2",67)

"BLD",8258,"KRN",9.8,"NM","B","ICDGTDRG",72)

"BLD",8258,"KRN",9.8,"NM","B","ICDID",25)

"BLD",8258,"KRN",9.8,"NM","B","ICDIDX",26)

"BLD",8258,"KRN",9.8,"NM","B","ICDIDX2",27)

"BLD",8258,"KRN",9.8,"NM","B","ICDREF",73)

"BLD",8258,"KRN",9.8,"NM","B","ICDSAPI",62)

"BLD",8258,"KRN",9.8,"NM","B","ICDSUPT",48)

"BLD",8258,"KRN",9.8,"NM","B","ICDTOKN",76)

"BLD",8258,"KRN",9.8,"NM","B","ICDXCODE",57)

"BLD",8258,"KRN",19,0)
19
"BLD",8258,"KRN",19.1,0)
19.1
"BLD",8258,"KRN",101,0)
101
"BLD",8258,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8258,"KRN",409.61,0)
409.61
"BLD",8258,"KRN",771,0)
771
"BLD",8258,"KRN",779.2,0)
779.2
"BLD",8258,"KRN",870,0)
870
"BLD",8258,"KRN",8989.51,0)
8989.51
"BLD",8258,"KRN",8989.52,0)
8989.52
"BLD",8258,"KRN",8994,0)
8994
"BLD",8258,"KRN","B",.4,.4)

"BLD",8258,"KRN","B",.401,.401)

"BLD",8258,"KRN","B",.402,.402)

"BLD",8258,"KRN","B",.403,.403)

"BLD",8258,"KRN","B",.5,.5)

"BLD",8258,"KRN","B",.84,.84)

"BLD",8258,"KRN","B",3.6,3.6)

"BLD",8258,"KRN","B",3.8,3.8)

"BLD",8258,"KRN","B",9.2,9.2)

"BLD",8258,"KRN","B",9.8,9.8)

"BLD",8258,"KRN","B",19,19)

"BLD",8258,"KRN","B",19.1,19.1)

"BLD",8258,"KRN","B",101,101)

"BLD",8258,"KRN","B",409.61,409.61)

"BLD",8258,"KRN","B",771,771)

"BLD",8258,"KRN","B",779.2,779.2)

"BLD",8258,"KRN","B",870,870)

"BLD",8258,"KRN","B",8989.51,8989.51)

"BLD",8258,"KRN","B",8989.52,8989.52)

"BLD",8258,"KRN","B",8994,8994)

"BLD",8258,"PRE")
ICD1857
"BLD",8258,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8258,"QUES",0)
^9.62^^
"BLD",8258,"REQB",0)
^9.611^21^17
"BLD",8258,"REQB",1,0)
ICD*18.0*6^2
"BLD",8258,"REQB",2,0)
ICD*18.0*12^2
"BLD",8258,"REQB",3,0)
ICD*18.0*15^2
"BLD",8258,"REQB",4,0)
ICD*18.0*29^2
"BLD",8258,"REQB",5,0)
LEX*2.0*81^2
"BLD",8258,"REQB",7,0)
ICD*18.0*62^2
"BLD",8258,"REQB",8,0)
ICD*18.0*69^2
"BLD",8258,"REQB",9,0)
GMPL*2.0*43^2
"BLD",8258,"REQB",10,0)
IBD*3.0*64^2
"BLD",8258,"REQB",12,0)
RA*5.0*112^2
"BLD",8258,"REQB",13,0)
TIU*1.0*267^2
"BLD",8258,"REQB",14,0)
PSO*7.0*404^2
"BLD",8258,"REQB",15,0)
ONC*2.11*56^2
"BLD",8258,"REQB",17,0)
DG*5.3*870^2
"BLD",8258,"REQB",19,0)
ACKQ*3.0*22^2
"BLD",8258,"REQB",20,0)
LR*5.2*429^2
"BLD",8258,"REQB",21,0)
LEX*2.0*94^2
"BLD",8258,"REQB","B","ACKQ*3.0*22",19)

"BLD",8258,"REQB","B","DG*5.3*870",17)

"BLD",8258,"REQB","B","GMPL*2.0*43",9)

"BLD",8258,"REQB","B","IBD*3.0*64",10)

"BLD",8258,"REQB","B","ICD*18.0*12",2)

"BLD",8258,"REQB","B","ICD*18.0*15",3)

"BLD",8258,"REQB","B","ICD*18.0*29",4)

"BLD",8258,"REQB","B","ICD*18.0*6",1)

"BLD",8258,"REQB","B","ICD*18.0*62",7)

"BLD",8258,"REQB","B","ICD*18.0*69",8)

"BLD",8258,"REQB","B","LEX*2.0*81",5)

"BLD",8258,"REQB","B","LEX*2.0*94",21)

"BLD",8258,"REQB","B","LR*5.2*429",20)

"BLD",8258,"REQB","B","ONC*2.11*56",15)

"BLD",8258,"REQB","B","PSO*7.0*404",14)

"BLD",8258,"REQB","B","RA*5.0*112",12)

"BLD",8258,"REQB","B","TIU*1.0*267",13)

"DATA",80.4,1,0)
ICD-9-CM^ICD^80^2781001
"DATA",80.4,2,0)
ICD-9 Proc^ICP^80.1^2781001
"DATA",80.4,30,0)
ICD-10-CM^10D^80^3141001
"DATA",80.4,31,0)
ICD-10-PCS^10P^80.1^3141001
"DATA",82,1,0)
1^COMA>1HR
"DATA",82,2,0)
2^DRG492
"DATA",82,3,0)
3^DRG480
"DATA",82,4,0)
4^DRG481
"DATA",82,5,0)
5^DRG481 W/LEUK
"DATA",82,6,0)
6^DRG546 CURVATURE OF SPINE OR MALIGNANCY
"DATA",82,7,0)
*^EXTENSIVE BURN
"DATA",82,8,0)
A^AMI/CHF
"DATA",82,9,0)
B^ABRTN
"DATA",82,10,0)
D^DELIVERED
"DATA",82,11,0)
E^EXTRM IMMTRTY
"DATA",82,12,0)
F^FEM
"DATA",82,13,0)
G^GANGLION
"DATA",82,14,0)
H^ANY DX
"DATA",82,15,0)
I^ACUTE MI
"DATA",82,16,0)
J^MAJ PRBLM
"DATA",82,17,0)
K^INTRACRANIAL HEMORRHAGE
"DATA",82,18,0)
L^LEUKEMIA/LYMPHOMA
"DATA",82,19,0)
M^MALIGNANCY/NEOPLASM
"DATA",82,20,0)
O^ONLY
"DATA",82,21,0)
P^PRURITIS
"DATA",82,22,0)
Q^ACUTE CNS DX
"DATA",82,23,0)
R^FULL TERM
"DATA",82,24,0)
S^SIGNIFICANT PROBLEM
"DATA",82,25,0)
T^TRAUMA
"DATA",82,26,0)
U^ULCER/ITIS
"DATA",82,27,0)
V^CV CMPLCTN
"DATA",82,28,0)
W^SEVERE SEPSIS
"DATA",82,29,0)
X^CMPLX/CMPLCTD
"DATA",82,30,0)
Y^MOUTH,LARYNX,PHARYNX
"DATA",82,31,0)
Z^2NDRY HF (2NDRY DX OF HEART FAILURE)
"DATA",82,32,0)
a^ADENOIDECTOMY/TONSILLECT
"DATA",82,33,0)
b^FULL THICKNESS BURN
"DATA",82,34,0)
c^MCV IN PRIME OR 2NDRY
"DATA",82,35,0)
d^POSTPARTUM
"DATA",82,36,0)
g^MAJOR GI DX 
"DATA",82,37,0)
h^HIV
"DATA",82,38,0)
i^HIV RELATED COND
"DATA",82,39,0)
j^INHALATION INJURY
"DATA",82,40,0)
k^INFECTION
"DATA",82,41,0)
l^ACUTE LEUK.
"DATA",82,42,0)
m^HIST MALIG AS 2RY DX
"DATA",82,43,0)
p^PREMATURITY
"DATA",82,44,0)
r^BREAST MALIG
"DATA",82,45,0)
s^MCV IN 2NDRY
"DATA",82,46,0)
t^THERAPY
"DATA",82,47,0)
u^ANTEPARTUM CMPLX
"DATA",82,48,0)
v^DX COMP VAG DELIVRY
"DATA",82,49,0)
z^NOT SIG 2RY DX
"DATA",82,50,0)
o^ovary
"DATA",82,51,0)
10^ABORTION W/O D&C
"DATA",82,52,0)
11^ACUTE & SUBACUTE ENDOCARDITIS
"DATA",82,53,0)
12^ACUTE ADJUSTMENT REACTION & PSYCHOSOCIAL DYSFUNCTION
"DATA",82,54,0)
13^ACUTE COMPLEX CNS
"DATA",82,55,0)
14^ACUTE ISCHEMIC STROKE W USE OF THROMBOLYTIC AGENT
"DATA",82,56,0)
15^ACUTE LEUKEMIA
"DATA",82,57,0)
16^ACUTE LEUKEMIA W/O MAJOR O.R. PROCEDURE
"DATA",82,58,0)
17^ACUTE MAJOR EYE INFECTIONS
"DATA",82,59,0)
18^ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE
"DATA",82,60,0)
19^ADMIT FOR RENAL DIALYSIS
"DATA",82,61,0)
20^AFTERCARE
"DATA",82,62,0)
21^AFTERCARE, MUSCULOSKELETAL SYSTEM & CONNECTIVE TISSUE
"DATA",82,63,0)
22^AMI / HF / SHOCK
"DATA",82,64,0)
23^AND PRINCIPAL DIAGNOSIS OF SIGNIFICANT HIV RELATED CONDITION
"DATA",82,65,0)
24^ANGINA PECTORIS
"DATA",82,66,0)
25^ATHEROSCLEROSIS
"DATA",82,67,0)
26^BACTERIAL & TUBERCULOUS INFECTIONS OF NERVOUS SYSTEM
"DATA",82,68,0)
27^BEHAVIORAL & DEVELOPMENTAL DISORDERS
"DATA",82,69,0)
28^BENIGN PROSTATIC HYPERTROPHY
"DATA",82,70,0)
29^BONE DISEASES & ARTHROPATHIES
"DATA",82,71,0)
30^BRONCHITIS & ASTHMA
"DATA",82,72,0)
31^CARDIAC ARREST, UNEXPLAINED
"DATA",82,73,0)
32^CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS
"DATA",82,74,0)
33^CARDIAC CONGENITAL & VALVULAR DISORDERS
"DATA",82,75,0)
34^CELLULITIS
"DATA",82,76,0)
35^CHEMOTHERAPY
"DATA",82,77,0)
36^CHEMOTHERAPY W/O ACUTE LEUKEMIA AS SECONDARY DIAGNOSIS
"DATA",82,78,0)
37^CHEST PAIN
"DATA",82,79,0)
38^CIRRHOSIS & ALCOHOLIC HEPATITIS
"DATA",82,80,0)
39^COAGULATION DISORDERS
"DATA",82,81,0)
40^COMPLICATED PEPTIC ULCER
"DATA",82,82,0)
41^COMPLICATED PRINCIPAL DIAGNOSES
"DATA",82,83,0)
42^COMPLICATIONS OF TREATMENT
"DATA",82,84,0)
43^CONCUSSION
"DATA",82,85,0)
44^CONNECTIVE TISSUE DISORDERS
"DATA",82,86,0)
45^CRANIAL & PERIPHERAL NERVE DISORDERS
"DATA",82,87,0)
46^DEEP VEIN THROMBOPHLEBITIS
"DATA",82,88,0)
47^DEGENERATIVE NERVOUS SYSTEM DISORDERS
"DATA",82,89,0)
48^DENTAL & ORAL DISEASES
"DATA",82,90,0)
49^DEPRESSIVE NEUROSES
"DATA",82,91,0)
50^DIABETES
"DATA",82,92,0)
51^DIGESTIVE MALIGNANCY
"DATA",82,93,0)
52^DISORDERS OF LIVER EXCEPT MALIG,CIRR,ALC HEPA
"DATA",82,94,0)
53^DISORDERS OF PANCREAS EXCEPT MALIGNANCY
"DATA",82,95,0)
54^DISORDERS OF PERSONALITY & IMPULSE CONTROL
"DATA",82,96,0)
55^DISORDERS OF THE BILIARY TRACT
"DATA",82,97,0)
56^DYSEQUILIBRIUM
"DATA",82,98,0)
57^EAR, NOSE, MOUTH & THROAT MALIGNANCY
"DATA",82,99,0)
58^ECTOPIC PREGNANCY
"DATA",82,100,0)
59^ENDOCRINE DISORDERS
"DATA",82,101,0)
60^EPISTAXIS
"DATA",82,102,0)
61^ESOPHAGITIS, GASTROENT & MISC DIGEST DISORDERS
"DATA",82,103,0)
62^EXTENSIVE BURNS
"DATA",82,104,0)
63^EXTREME IMMATURITY OR RESPIRATORY DISTRESS SYNDROME, NEONATE
"DATA",82,105,0)
64^FALSE LABOR
"DATA",82,106,0)
65^FEVER
"DATA",82,107,0)
66^FRACTURES OF FEMUR
"DATA",82,108,0)
67^FRACTURES OF HIP & PELVIS
"DATA",82,109,0)
68^FULL TERM NEONATE W MAJOR PROBLEMS
"DATA",82,110,0)
69^FULL THICKNESS BURN W SKIN GRAFT OR INHAL INJ
"DATA",82,111,0)
70^FULL THICKNESS BURNS W MG 96+ HRS
"DATA",82,112,0)
71^FX, SPRN, STRN & DISL EXCEPT FEMUR, HIP, PELVIS & THIGH
"DATA",82,113,0)
72^G.I. HEMORRHAGE
"DATA",82,114,0)
73^G.I. OBSTRUCTION
"DATA",82,115,0)
74^HEADACHES
"DATA",82,116,0)
75^HEART FAILURE & SHOCK
"DATA",82,117,0)
76^HEMORRHAGE
"DATA",82,118,0)
77^HIV W MAJOR RELATED CONDITION
"DATA",82,119,0)
78^HYPERTENSION
"DATA",82,120,0)
79^HYPERTENSIVE ENCEPHALOPATHY
"DATA",82,121,0)
80^INBORN AND OTHER DISORDERS OF METABOLISM
"DATA",82,122,0)
81^INFECTIONS, FEMALE REPRODUCTIVE SYSTEM
"DATA",82,123,0)
83^INFLAMMATION OF THE MALE REPRODUCTIVE SYSTEM
"DATA",82,124,0)
84^INFLAMMATORY BOWEL DISEASE
"DATA",82,125,0)
85^INTERSTITIAL LUNG DISEASE
"DATA",82,126,0)
86^INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION
"DATA",82,127,0)
87^KIDNEY & URINARY TRACT INFECTIONS
"DATA",82,128,0)
88^KIDNEY & URINARY TRACT NEOPLASMS
"DATA",82,129,0)
89^KIDNEY & URINARY TRACT SIGNS & SYMPTOMS
"DATA",82,130,0)
90^LYMPHOMA & LEUKEMIA W MAJOR O.R. PROCEDURE
"DATA",82,131,0)
91^LYMPHOMA & NON-ACUTE LEUKEMIA
"DATA",82,132,0)
92^LYMPHOMA & NON-ACUTE LEUKEMIA W OTHER O.R. PROC
"DATA",82,133,0)
93^MAJOR CHEST TRAUMA
"DATA",82,134,0)
94^MAJOR ESOPHAGEAL DISORDERS
"DATA",82,135,0)
95^MAJOR GASTROINTESTINAL DISORDERS & PERITONEAL INFECTIONS
"DATA",82,136,0)
96^MAJOR HEMATOL/IMMUN DIAG EXC SICKLE CELL CRISIS & COAGUL
"DATA",82,137,0)
97^MAJOR SKIN DISORDERS
"DATA",82,138,0)
98^MALIGNANCY
"DATA",82,139,0)
99^MALIGNANCY OF HEPATOBILIARY SYSTEM OR PANCREAS
"DATA",82,140,0)
100^MALIGNANCY, FEMALE REPRODUCTIVE SYSTEM
"DATA",82,141,0)
101^MALIGNANCY, MALE REPRODUCTIVE SYSTEM
"DATA",82,142,0)
102^MALIGNANT BREAST DISORDERS
"DATA",82,143,0)
103^MASTECTOMY FOR MALIGNANCY
"DATA",82,144,0)
104^MDC 1 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,145,0)
105^MDC 10 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,146,0)
106^MDC 11 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,147,0)
107^MDC 12 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,148,0)
108^MDC 13 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,149,0)
109^MDC 14 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,150,0)
110^MDC 15 NEWBORNS & OTHER NEONATES WITH CONDITIONS ORIGINATING IN PERINATAL PERIOD
"DATA",82,151,0)
111^MDC 16 DISEASES & DISORDERS OF BLOOD, BLOOD FORMING ORGANS, IMMUNOLOGIC DISORDERS
"DATA",82,152,0)
112^MDC 17 MYELOPROLIFERATIVE DISEASES & DISORDERS, POORLY DIFFERENTIATED NEOPLASMS
"DATA",82,153,0)
113^MDC 18 INFECTIOUS & PARASITIC DISEASES, SYSTEMIC OR UNSPECIFIED SITES
"DATA",82,154,0)
114^MDC 19 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,155,0)
115^MDC 2 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,156,0)
116^MDC 20 ALCOHOL/DRUG USE & ALCOHOL/DRUG INDUCED ORGANIC MENTAL DISORDERS
"DATA",82,157,0)
117^MDC 21 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,158,0)
118^MDC 22 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,159,0)
119^MDC 23 FACTORS INFLUENCING HEALTH STATUS & OTHER CONTACTS WITH HEALTH SERVICES
"DATA",82,160,0)
120^MDC 25 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,161,0)
121^MDC 3 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,162,0)
122^MDC 4 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,163,0)
123^MDC 5 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,164,0)
124^MDC 6 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,165,0)
125^MDC 7 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,166,0)
126^MDC 8 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,167,0)
127^MDC 9 ASSIGNMENT OF DIAGNOSIS CODES
"DATA",82,168,0)
128^MECHANICAL VENTILATION 96+ HOURS
"DATA",82,169,0)
129^MEDICAL BACK PROBLEMS
"DATA",82,170,0)
130^MENSTRUAL & OTHER FEMALE REPRODUCTIVE SYSTEM DISORDERS
"DATA",82,171,0)
131^MINOR SKIN DISORDERS
"DATA",82,172,0)
132^MISC DISORDERS OF NUTRITION,METABOLISM,FLUIDS/ELECTROLYTES
"DATA",82,173,0)
133^MULTIPLE SCLEROSIS & CEREBELLAR ATAXIA
"DATA",82,174,0)
134^MYELOPROLIFERATIVE DISORDERS OR POORLY DIFFERENTIATED NEOPLASMS
"DATA",82,175,0)
135^NEONATE W OTHER SIGNIFICANT PROBLEMS
"DATA",82,176,0)
136^NEOPLASM
"DATA",82,177,0)
137^NERVOUS SYSTEM NEOPLASMS
"DATA",82,178,0)
138^NEUROLOGICAL EYE DISORDERS
"DATA",82,179,0)
139^NEUROSES EXCEPT DEPRESSIVE
"DATA",82,180,0)
140^NON-BACTERIAL INFECT OF NERVOUS SYS EXC VIRAL MENINGITIS
"DATA",82,181,0)
141^NON-EXTENSIVE BURNS
"DATA",82,182,0)
142^NON-MALIGNANT BREAST DISORDERS
"DATA",82,183,0)
143^NON-OVARIAN/ADNEXAL MALIGNANCY
"DATA",82,184,0)
144^NONSPECIFIC CEREBROVASCULAR DISORDERS
"DATA",82,185,0)
145^NONSPECIFIC CVA & PRECEREBRAL OCCLUSION W/O INFARCT
"DATA",82,186,0)
146^NONTRAUMATIC STUPOR & COMA
"DATA",82,187,0)
147^NORMAL NEWBORN
"DATA",82,188,0)
148^O021 MISSED ABORTION
"DATA",82,189,0)
149^ORGANIC DISTURBANCES & MENTAL RETARDATION
"DATA",82,190,0)
150^OSTEOMYELITIS
"DATA",82,191,0)
151^OTHER ANTEPARTUM DIAGNOSES W MEDICAL COMPLICATIONS
"DATA",82,192,0)
152^OTHER ANTEPARTUM DIAGNOSES W/O MEDICAL COMPLICATIONS
"DATA",82,193,0)
153^OTHER CIRCULATORY SYSTEM DIAGNOSES
"DATA",82,194,0)
154^OTHER DIGESTIVE SYSTEM DIAGNOSES
"DATA",82,195,0)
155^OTHER DISORDERS OF NERVOUS SYSTEM
"DATA",82,196,0)
156^OTHER DISORDERS OF THE EYE
"DATA",82,197,0)
157^OTHER EAR, NOSE, MOUTH & THROAT DIAGNOSES
"DATA",82,198,0)
158^OTHER FACTORS INFLUENCING HEALTH STATUS
"DATA",82,199,0)
159^OTHER INFECTIOUS & PARASITIC DISEASES DIAGNOSES
"DATA",82,200,0)
160^OTHER INJURY, POISONING & TOXIC EFFECT DIAG
"DATA",82,201,0)
161^OTHER KIDNEY & URINARY TRACT PROCEDURES
"DATA",82,202,0)
162^OTHER MALE REPRODUCTIVE SYSTEM DIAGNOSES
"DATA",82,203,0)
163^OTHER MENTAL DISORDER DIAGNOSES
"DATA",82,204,0)
164^OTHER MUSCULOSKELETAL SYS & CONNECTIVE TISSUE DIAGNOSES
"DATA",82,205,0)
165^OTHER MYELOPROLIF DIS OR POORLY DIFF NEOPL DIAG
"DATA",82,206,0)
166^OTHER RESPIRATORY SYSTEM DIAGNOSES
"DATA",82,207,0)
167^OTITIS MEDIA & URI
"DATA",82,208,0)
168^OVARIAN/ADNEXAL MALIGNANCY
"DATA",82,209,0)
169^PANCREAS TRANSPLANT
"DATA",82,210,0)
170^PATHOLOGICAL FRACTURES & MUSCULOSKELET & CONN TISS MALIG
"DATA",82,211,0)
171^PERIPHERAL VASCULAR DISORDERS
"DATA",82,212,0)
172^PLEURAL EFFUSION
"DATA",82,213,0)
173^PNEUMOTHORAX
"DATA",82,214,0)
174^POSTOPERATIVE & POST-TRAUMATIC INFECTIONS
"DATA",82,215,0)
175^POSTOPERATIVE OR POST-TRAUMATIC INFECTIONS W O.R. PROC
"DATA",82,216,0)
176^POSTPARTUM & POST ABORTION DIAGNOSES W O.R. PROCEDURE
"DATA",82,217,0)
177^PRINCIPAL DIAGNOSIS INVALID AS DISCHARGE DIAGNOSIS
"DATA",82,218,0)
178^PSYCHOSES
"DATA",82,219,0)
179^PULMONARY EDEMA & RESPIRATORY FAILURE
"DATA",82,220,0)
180^PULMONARY EMBOLISM
"DATA",82,221,0)
181^RADIOTHERAPY
"DATA",82,222,0)
182^RED BLOOD CELL DISORDERS
"DATA",82,223,0)
183^REHABILITATION
"DATA",82,224,0)
184^RENAL FAILURE
"DATA",82,225,0)
185^RESPIRATORY INFECTIONS & INFLAMMATIONS
"DATA",82,226,0)
186^RESPIRATORY NEOPLASMS
"DATA",82,227,0)
187^RETICULOENDOTHELIAL & IMMUNITY DISORDERS
"DATA",82,228,0)
188^SEIZURES
"DATA",82,229,0)
189^SEPTIC ARTHRITIS
"DATA",82,230,0)
190^SEPTICEMIA
"DATA",82,231,0)
191^SIGNIFICANT ABDOMINAL TRAUMA
"DATA",82,232,0)
192^SIGNIFICANT CHEST TRAUMA
"DATA",82,233,0)
193^SIGNIFICANT HEAD TRAUMA
"DATA",82,234,0)
194^SIGNIFICANT TRAUMA
"DATA",82,235,0)
195^SIGNIFICANT TRAUMA OF KIDNEY
"DATA",82,236,0)
196^SIGNIFICANT TRAUMA OF PELVIS OR SPINE
"DATA",82,237,0)
197^SIGNIFICANT TRAUMA OF THE LOWER LIMB
"DATA",82,238,0)
198^SIGNIFICANT TRAUMA OF THE UPPER LIMB
"DATA",82,239,0)
199^SIGNIFICANT TRAUMA OF URINARY SYSTEM
"DATA",82,240,0)
200^SIGNS & SYMPTOMS
"DATA",82,241,0)
201^SIGNS & SYMPTOMS OF MUSCULOSKELETAL SYSTEM & CONN TISSUE
"DATA",82,242,0)
202^SIMPLE PNEUMONIA & PLEURISY
"DATA",82,243,0)
203^SIMULTANEOUS PANCREAS/KIDNEY TRANSPLANT
"DATA",82,244,0)
204^SKIN ULCER OR CELLULITIS
"DATA",82,245,0)
205^SKIN ULCERS
"DATA",82,246,0)
206^SPINAL CURVATURE / MALIGNANCY / INFECTION
"DATA",82,247,0)
207^SPINAL DISORDERS & INJURIES
"DATA",82,248,0)
208^SPRAINS, STRAINS, & DISLOCATIONS OF HIP, PELVIS & THIGH
"DATA",82,249,0)
209^SYNCOPE & COLLAPSE
"DATA",82,250,0)
210^TENDONITIS, MYOSITIS & BURSITIS
"DATA",82,251,0)
211^THREATENED ABORTION
"DATA",82,252,0)
212^TRACHEOSTOMY FOR FACE,MOUTH & NECK DIAGNOSES
"DATA",82,253,0)
213^TRANSIENT ISCHEMIA
"DATA",82,254,0)
214^TRAUMA TO THE SKIN, SUBCUT TISS & BREAST
"DATA",82,255,0)
215^TRAUMATIC INJURY
"DATA",82,256,0)
216^TRAUMATIC STUPOR & COMA, COMA <1 HR
"DATA",82,257,0)
217^TRAUMATIC STUPOR & COMA, COMA >1 HR
"DATA",82,258,0)
218^UNCOMPLICATED PEPTIC ULCER
"DATA",82,259,0)
219^URETHRAL STRICTURE
"DATA",82,260,0)
220^URINARY STONES
"DATA",82,261,0)
221^UTERINE & ADNEXA PROC FOR NON-MALIGNANCY
"DATA",82,262,0)
222^VAGINAL DELIVERY W COMPLICATING DIAGNOSES
"DATA",82,263,0)
223^VAGINAL DELIVERY W/O COMPLICATING DIAGNOSES
"DATA",82,264,0)
224^VIRAL ILLNESS
"DATA",82,265,0)
225^VIRAL MENINGITIS
"DATA",82.1,1,0)
1^PERCUTANEOUS
"DATA",82.1,2,0)
2^DRG228 PROC.
"DATA",82.1,3,0)
3^BILIARY
"DATA",82.1,4,0)
4^DRG232 PROC.
"DATA",82.1,5,0)
6^DRG106
"DATA",82.1,6,0)
7^DRG117
"DATA",82.1,7,0)
B^BONE MARROW
"DATA",82.1,8,0)
C^CHEMO INPLANT
"DATA",82.1,9,0)
D^REHAB&DETOX
"DATA",82.1,10,0)
E^COMMON DUCT EXPL.
"DATA",82.1,11,0)
F^COMBINED SPINAL FUSION
"DATA",82.1,12,0)
H^CARDIAC CATH/ANGIOGR
"DATA",82.1,13,0)
I^INJECTABLE/INFUSION (INJECTION OR INFUSION OF DRUGS)
"DATA",82.1,14,0)
J^INGUINAL AND FEMORAL HERNIA PROCEDURES
"DATA",82.1,15,0)
K^INTRACRANIAL VASCULAR
"DATA",82.1,16,0)
L^LOCAL EXCISION/BIOPSY
"DATA",82.1,17,0)
M^TOTAL MASTECTOMY
"DATA",82.1,18,0)
N^NON-OR PROC.
"DATA",82.1,19,0)
O^OR PROC.
"DATA",82.1,20,0)
P^VALVE PROC.
"DATA",82.1,21,0)
Q^CRANIOTOMY
"DATA",82.1,22,0)
R^REHAB
"DATA",82.1,23,0)
S^VENTRICULAR SHUNT
"DATA",82.1,24,0)
T^TOTAL CHOLECYSTECT.
"DATA",82.1,25,0)
V^VENTILATOR
"DATA",82.1,26,0)
a^OTHER MDC12 OR PROC.
"DATA",82.1,27,0)
b^BYPASS
"DATA",82.1,28,0)
c^CESAREAN SECTION
"DATA",82.1,29,0)
d^D&C
"DATA",82.1,30,0)
e^EXTRACTNS & RESTORATNS.
"DATA",82.1,31,0)
f^OTHER MDC24 OR PROC.
"DATA",82.1,32,0)
g^OTHER MDC13 OR PROC.
"DATA",82.1,33,0)
h^HEPATOBILIARY
"DATA",82.1,34,0)
k^SKIN GRAFT
"DATA",82.1,35,0)
l^LIVER
"DATA",82.1,36,0)
m^SUBTOTAL MASTECT.
"DATA",82.1,37,0)
n^NO COMPL. OR PROC.
"DATA",82.1,38,0)
o^DRG108 PROC.
"DATA",82.1,39,0)
p^PACEMAKER LEAD
"DATA",82.1,40,0)
q^HEART TRANSPLANT
"DATA",82.1,41,0)
r^LUNG TRANSPLANT
"DATA",82.1,42,0)
s^STERILIZA/POSTPART D&C
"DATA",82.1,43,0)
t^TRACHEA
"DATA",82.1,44,0)
u^PROC FOR TRAUMA
"DATA",82.1,45,0)
x^EXTENSIVE PROCEDURE
"DATA",82.1,46,0)
y^PROSTATIC
"DATA",82.1,47,0)
z^NON-EXTENSIVE
"DATA",82.1,48,0)
10^ACUTE ISCHEMIC STROKE W USE OF THROMBOLYTIC AGENT
"DATA",82.1,49,0)
11^ADRENAL & PITUITARY PROCEDURES
"DATA",82.1,50,0)
12^AICD GENERATOR PROCEDURES
"DATA",82.1,51,0)
13^AICD LEAD PROCEDURES
"DATA",82.1,52,0)
14^ALLOGENEIC BONE MARROW TRANSPLANT
"DATA",82.1,53,0)
15^AMPUTAT OF LOWER LIMB FOR ENDOCRINE,NUTRIT,& METABOL DIS
"DATA",82.1,54,0)
16^AMPUTATION FOR CIRC SYS DISORDERS EXC UPPER LIMB & TOE
"DATA",82.1,55,0)
17^AMPUTATION FOR MUSCULOSKELETAL SYS & CONN TISSUE DIS
"DATA",82.1,56,0)
18^ANAL & STOMAL PROCEDURES
"DATA",82.1,57,0)
19^ANTERIOR SPINAL FUSION
"DATA",82.1,58,0)
20^APPENDECTOMY
"DATA",82.1,59,0)
21^ARTHROSCOPY
"DATA",82.1,60,0)
22^AUTOLOGOUS BONE MARROW TRANSPLANT
"DATA",82.1,61,0)
23^BACK & NECK EXCEPT DISC DEVICES
"DATA",82.1,62,0)
173^BILATERAL OR MULTIPLE MAJOR JOINT PROCS OF LOWER EXTREMITY
"DATA",82.1,63,0)
24^BILIARY TRACT PROC EXCEPT ONLY CHOLECYST W OR W/O C.D.E.
"DATA",82.1,64,0)
25^BIOPSIES OF MUSCULOSKELETAL SYSTEM & CONNECTIVE TISSUE
"DATA",82.1,65,0)
26^BREAST BIOPSY, LOCAL EXCISION & OTHER BREAST PROCEDURES
"DATA",82.1,66,0)
27^C.D.E.
"DATA",82.1,67,0)
28^CARDIAC CATHETERIZATION
"DATA",82.1,68,0)
29^CARDIAC DEFIBRILLATOR IMPLANT
"DATA",82.1,69,0)
30^CARDIAC PACEMAKER DEVICE REPLACEMENT
"DATA",82.1,70,0)
31^CARDIAC PACEMAKER REVISION EXCEPT DEVICE REPLACEMENT
"DATA",82.1,71,0)
32^CARDIAC VALVE AND OTHER MAJOR CARDIOTHORACIC PROCEDURES
"DATA",82.1,72,0)
33^CAROTID ARTERY STENT PROCEDURE
"DATA",82.1,73,0)
34^CERVICAL SPINAL FUSION
"DATA",82.1,74,0)
35^CHEMOTHERAPY IMPLANT
"DATA",82.1,75,0)
36^CHOLECYSTECTOMY EXCEPT BY LAPAROSCOPE
"DATA",82.1,76,0)
37^CIRCULATORY DISORDERS EXCEPT AMI, W CARD CATH
"DATA",82.1,77,0)
38^CORONARY BYPASS
"DATA",82.1,78,0)
39^CRANIAL/FACIAL PROCEDURES
"DATA",82.1,79,0)
40^CRANIOTOMY FOR MULTIPLE SIGNIFICANT TRAUMA
"DATA",82.1,80,0)
41^D&C, CONIZATION, LAPAROSCOPY & TUBAL INTERRUPTION
"DATA",82.1,81,0)
181^DELIVERY PROCEDURE
"DATA",82.1,82,0)
42^DISC DEVICES
"DATA",82.1,83,0)
43^DRUG-ELUTING STENT
"DATA",82.1,84,0)
44^ECMO
"DATA",82.1,85,0)
45^ESW LITHOTRIPSY
"DATA",82.1,86,0)
174^EXTRACRANIAL PROCEDURES
"DATA",82.1,87,0)
46^EXTRAOCULAR PROCEDURES EXCEPT ORBIT
"DATA",82.1,88,0)
47^FEMALE REPRODUCTIVE SYSTEM RECONSTRUCTIVE PROCEDURES
"DATA",82.1,89,0)
48^FOOT PROCEDURES
"DATA",82.1,90,0)
49^FOUR OR MORE STENTS
"DATA",82.1,91,0)
50^FULL THICKNESS BURNS W MG 96+ HRS
"DATA",82.1,92,0)
51^HAND OR WRIST PROC, EXCEPT MAJOR THUMB OR JOINT PROC
"DATA",82.1,93,0)
52^HAND PROCEDURES FOR INJURIES
"DATA",82.1,94,0)
53^HEAD AND NECK PROCEDURES
"DATA",82.1,95,0)
54^HEPATOBILIARY DIAGNOSTIC PROCEDURES
"DATA",82.1,96,0)
55^HERNIA PROCEDURES EXCEPT INGUINAL AND FEMORAL
"DATA",82.1,97,0)
56^HIGH DOSE CHEMO AGENT
"DATA",82.1,98,0)
57^HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT
"DATA",82.1,99,0)
58^IMPLANT OF HEART ASSIST SYSTEM
"DATA",82.1,100,0)
59^INTESTINAL TRANSPLANT
"DATA",82.1,101,0)
60^INTRACRANIAL VASCULAR PROCEDURES
"DATA",82.1,102,0)
61^INTRAOCULAR PROCEDURES
"DATA",82.1,103,0)
62^KIDNEY AND URETER PROCEDURES
"DATA",82.1,104,0)
63^KIDNEY TRANSPLANT
"DATA",82.1,105,0)
64^KNEE PROCEDURES
"DATA",82.1,106,0)
65^LAPAROSCOPIC CHOLECYSTECTOMY
"DATA",82.1,107,0)
66^LARYNGECTOMY
"DATA",82.1,108,0)
67^LIMB REATTACHMENT, HIP & FEMUR PROC FOR MULTIPLE SIGNIFICANT TRAUMA
"DATA",82.1,109,0)
68^LIVER TRANSPLANT
"DATA",82.1,110,0)
69^LOCAL EXCISION & REMOVAL INT FIX DEVICES EXC HIP & FEMUR
"DATA",82.1,111,0)
70^LOCAL EXCISION & REMOVAL INT FIX DEVICES OF HIP & FEMUR
"DATA",82.1,112,0)
71^LOWER EXTREM & HUMER PROC EXCEPT HIP,FOOT,FEMUR
"DATA",82.1,113,0)
72^LYMPHOMA & LEUKEMIA W MAJOR O.R. PROCEDURE
"DATA",82.1,114,0)
73^LYMPHOMA & NON-ACUTE LEUKEMIA W OTHER O.R. PROC
"DATA",82.1,115,0)
74^MAJOR BLADDER PROCEDURES
"DATA",82.1,116,0)
75^MAJOR CARDIOVASCULAR PROCEDURES
"DATA",82.1,117,0)
76^MAJOR CHEST PROCEDURES
"DATA",82.1,118,0)
77^MAJOR DEVICE IMPLANT
"DATA",82.1,119,0)
78^MAJOR JOINT & LIMB REATTACHMENT PROC OF UPPER EXTREMITY
"DATA",82.1,120,0)
79^MAJOR JOINT REPLACEMENT OR REATTACHMENT OF LOWER EXTREMITY
"DATA",82.1,121,0)
80^MAJOR MALE PELVIC PROCEDURES
"DATA",82.1,122,0)
81^MAJOR O.R. PROCEDURES
"DATA",82.1,123,0)
82^MAJOR SHOULDER OR ELBOW JOINT PROCEDURES
"DATA",82.1,124,0)
83^MAJOR SMALL & LARGE BOWEL PROCEDURES
"DATA",82.1,125,0)
84^MAJOR THUMB OR JOINT PROCEDURES
"DATA",82.1,126,0)
85^MASTECTOMY FOR MALIGNANCY
"DATA",82.1,127,0)
86^MECHANICAL VENTILATION 96+ HOURS
"DATA",82.1,128,0)
87^MECHANICAL VENTILATION <96 HOURS
"DATA",82.1,129,0)
88^MINOR BLADDER PROCEDURES
"DATA",82.1,130,0)
89^MINOR SMALL & LARGE BOWEL PROCEDURES
"DATA",82.1,131,0)
90^MOUTH PROCEDURES
"DATA",82.1,132,0)
91^NEUROSTIMULATORS
"DATA",82.1,133,0)
92^NON-DRUG-ELUTING STENT
"DATA",82.1,134,0)
182^NOT STERILIZATION AND/OR D&C
"DATA",82.1,135,0)
93^O.R. PROCEDURES FOR OBESITY
"DATA",82.1,136,0)
94^O021 MISSED ABORTION
"DATA",82.1,137,0)
95^ONE STENT
"DATA",82.1,138,0)
96^OPERATING ROOM PROCEDURES
"DATA",82.1,139,0)
97^OR NON-OPERATING ROOM PROCEDURES
"DATA",82.1,140,0)
98^OR OPERATING ROOM PROCEDURES
"DATA",82.1,141,0)
99^ORBITAL PROCEDURES
"DATA",82.1,142,0)
100^OTHER CARDIOTHORACIC PROCEDURES
"DATA",82.1,143,0)
101^OTHER CIRCULATORY SYSTEM O.R. PROCEDURES
"DATA",82.1,144,0)
102^OTHER DIGESTIVE SYSTEM O.R. PROCEDURES
"DATA",82.1,145,0)
103^OTHER EAR, NOSE, MOUTH & THROAT O.R. PROCEDURES
"DATA",82.1,146,0)
104^OTHER FEMALE REPRODUCTIVE SYSTEM O.R. PROCEDURES
"DATA",82.1,147,0)
105^OTHER HEART ASSIST SYSTEM IMPLANT
"DATA",82.1,148,0)
106^OTHER HEPATOBILIARY OR PANCREAS O.R. PROCEDURES
"DATA",82.1,149,0)
107^OTHER KIDNEY & URINARY TRACT PROCEDURES
"DATA",82.1,150,0)
108^OTHER MALE REPRODUCTIVE SYSTEM O.R. PROCEDURES
"DATA",82.1,151,0)
109^OTHER MUSCULOSKELET SYS & CONN TISS O.R. PROC
"DATA",82.1,152,0)
110^OTHER O.R. PROC OF THE BLOOD & BLOOD FORMING ORGANS
"DATA",82.1,153,0)
111^OTHER O.R. PROCEDURES FOR INJURIES
"DATA",82.1,154,0)
112^OTHER O.R. PROCEDURES FOR MULTIPLE SIGNIFICANT TRAUMA
"DATA",82.1,155,0)
113^OTHER RESP SYSTEM O.R. PROCEDURES
"DATA",82.1,156,0)
114^OTHER SKIN, SUBCUT TISS & BREAST PROC
"DATA",82.1,157,0)
115^OTHER VASCULAR PROCEDURES
"DATA",82.1,158,0)
116^PANCREAS TRANSPLANT
"DATA",82.1,159,0)
117^PANCREAS, LIVER & SHUNT PROCEDURES
"DATA",82.1,160,0)
118^PELVIC EVISCERATION, RAD HYSTERECTOMY & RAD VULVECTOMY
"DATA",82.1,161,0)
119^PENIS PROCEDURES
"DATA",82.1,162,0)
120^PERC CARDIOVASC PROC W DRUG-ELUTING STENT
"DATA",82.1,163,0)
121^PERC CARDIOVASC PROC W/O CORONARY ARTERY STENT
"DATA",82.1,164,0)
122^PERIPHERAL / CRANIAL NERVE & OTHER NERVOUS SYSTEM PROCEDURES
"DATA",82.1,165,0)
123^PERIPHERAL NEUROSTIMULATORS
"DATA",82.1,166,0)
124^PERITONEAL ADHESIOLYSIS
"DATA",82.1,167,0)
125^PERMANENT CARDIAC PACEMAKER IMPLANT
"DATA",82.1,168,0)
126^POISONING & TOXIC EFFECTS OF DRUGS
"DATA",82.1,169,0)
127^POSTERIOR SPINAL FUSION
"DATA",82.1,170,0)
128^PROSTATECTOMY
"DATA",82.1,171,0)
129^PTCA
"DATA",82.1,172,0)
130^RECTAL RESECTION
"DATA",82.1,173,0)
131^REHABILITATION
"DATA",82.1,174,0)
132^REHABILITATION THERAPY
"DATA",82.1,175,0)
133^SALIVARY GLAND PROCEDURES
"DATA",82.1,176,0)
134^SHOULDER,ELBOW OR FOREARM PROC,EXC MAJOR JOINT PROC
"DATA",82.1,177,0)
135^SIMULTANEOUS PANCREAS/KIDNEY TRANSPLANT
"DATA",82.1,178,0)
136^SINUS & MASTOID PROCEDURES
"DATA",82.1,179,0)
137^SKIN DEBRIDEMENT
"DATA",82.1,180,0)
138^SKIN GRAFTS & WOUND DEBRID FOR ENDOC, NUTRIT & METAB DIS
"DATA",82.1,181,0)
139^SKIN GRAFTS FOR INJURIES
"DATA",82.1,182,0)
140^SOFT TISSUE PROCEDURES
"DATA",82.1,183,0)
141^SPINAL CURVATURE / MALIGNANCY / INFECTION
"DATA",82.1,184,0)
142^SPINAL FUSION EXCEPT CERVICAL
"DATA",82.1,185,0)
143^SPINAL NEUROSTIMULATORS
"DATA",82.1,186,0)
144^SPINAL PROCEDURES
"DATA",82.1,187,0)
145^SPLENECTOMY
"DATA",82.1,188,0)
183^STERILIZATION AND/OR D&C
"DATA",82.1,189,0)
146^STOMACH, ESOPHAGEAL & DUODENAL PROC
"DATA",82.1,190,0)
147^TESTES PROCEDURES
"DATA",82.1,191,0)
148^THREE STENTS
"DATA",82.1,192,0)
149^THYROID, PARATHYROID & THYROGLOSSAL PROCEDURES
"DATA",82.1,193,0)
150^TRACHEOSTOMY
"DATA",82.1,194,0)
151^TRACHEOSTOMY FOR FACE,MOUTH & NECK DIAGNOSES
"DATA",82.1,195,0)
152^TRANSURETHRAL PROCEDURES
"DATA",82.1,196,0)
153^TRANSURETHRAL PROSTATECTOMY
"DATA",82.1,197,0)
154^TWO STENTS
"DATA",82.1,198,0)
155^UPPER LIMB & TOE AMPUTATION FOR CIRC SYSTEM DISORDERS
"DATA",82.1,199,0)
156^URETHRAL PROCEDURES
"DATA",82.1,200,0)
157^UTERINE & ADNEXA PROC FOR NON-MALIGNANCY
"DATA",82.1,201,0)
158^UTERINE AND ADNEXAL PROCEDURES
"DATA",82.1,202,0)
159^VAGINA, CERVIX & VULVA PROCEDURES
"DATA",82.1,203,0)
160^VAGINAL DELIVERY W COMPLICATING DIAGNOSES
"DATA",82.1,204,0)
162^VAGINAL DELIVERY W/O COMPLICATING DIAGNOSES
"DATA",82.1,205,0)
163^VEIN LIGATION & STRIPPING
"DATA",82.1,206,0)
164^VENTRICULAR SHUNT PROCEDURES
"DATA",82.1,207,0)
165^WND DEBRID & SKN GRFT EXC HAND, FOR MUSCULO-CONN TISS DIS
"DATA",82.1,208,0)
166^WOUND DEBRIDEMENTS FOR INJURIES
"DATA",82.1,209,0)
184^CARDIOVERTER-DEFIBRILLATOR LEAD(S)/GENERATOR
"DATA",82.1,210,0)
185^HEART ASSIST SYSTEM
"DATA",82.1,211,0)
186^INTRACARDIAC LEAD/DEVICE
"DATA",82.1,212,0)
187^KIDNEY/PANCREAS TRANSPLANT
"DATA",82.1,213,0)
188^MAJOR BRAIN DEVICE IMPLANT
"DATA",82.1,214,0)
189^NEUROTRANSMITTER/NEUROSTIMULATOR
"FIA",80)
ICD DIAGNOSIS
"FIA",80,0)
^ICD9(
"FIA",80,0,0)
80OI
"FIA",80,0,1)
y^y^f^^^^n
"FIA",80,0,10)

"FIA",80,0,11)

"FIA",80,0,"RLRO")

"FIA",80,0,"VR")
18.0^ICD
"FIA",80,80)
0
"FIA",80,80.01)
0
"FIA",80,80.0103)
0
"FIA",80,80.011)
0
"FIA",80,80.012)
0
"FIA",80,80.02)
0
"FIA",80,80.03)
0
"FIA",80,80.04)
0
"FIA",80,80.066)
0
"FIA",80,80.067)
0
"FIA",80,80.068)
0
"FIA",80,80.071)
0
"FIA",80,80.072)
0
"FIA",80,80.073)
0
"FIA",80,80.682)
0
"FIA",80,80.711)
0
"FIA",80.1)
ICD OPERATION/PROCEDURE
"FIA",80.1,0)
^ICD0(
"FIA",80.1,0,0)
80.1OI
"FIA",80.1,0,1)
y^y^f^^^^n
"FIA",80.1,0,10)

"FIA",80.1,0,11)

"FIA",80.1,0,"RLRO")

"FIA",80.1,0,"VR")
18.0^ICD
"FIA",80.1,80.1)
0
"FIA",80.1,80.11)
0
"FIA",80.1,80.166)
0
"FIA",80.1,80.167)
0
"FIA",80.1,80.168)
0
"FIA",80.1,80.1682)
0
"FIA",80.1,80.171)
0
"FIA",80.1,80.1711)
0
"FIA",80.1,80.17111)
0
"FIA",80.1,80.173)
0
"FIA",80.4)
ICD CODING SYSTEMS
"FIA",80.4,0)
^ICDS(
"FIA",80.4,0,0)
80.4I
"FIA",80.4,0,1)
y^y^f^^n^^y^o^n
"FIA",80.4,0,10)

"FIA",80.4,0,11)

"FIA",80.4,0,"RLRO")

"FIA",80.4,0,"VR")
18.0^ICD
"FIA",80.4,80.4)
0
"FIA",82)
DRG DIAGNOSIS IDENTIFIER CODES
"FIA",82,0)
^ICDID(
"FIA",82,0,0)
82
"FIA",82,0,1)
y^y^f^^n^^y^o^n
"FIA",82,0,10)

"FIA",82,0,11)

"FIA",82,0,"RLRO")

"FIA",82,0,"VR")
18.0^ICD
"FIA",82,82)
0
"FIA",82.1)
DRG PROCEDURE IDENTIFIER CODES
"FIA",82.1,0)
^ICDIP(
"FIA",82.1,0,0)
82.1
"FIA",82.1,0,1)
y^y^f^^n^^y^o^n
"FIA",82.1,0,10)

"FIA",82.1,0,11)

"FIA",82.1,0,"RLRO")

"FIA",82.1,0,"VR")
18.0^ICD
"FIA",82.1,82.1)
0
"FIA",82.13)
DRG CC EXCLUSIONS
"FIA",82.13,0)
^ICDCCEX(
"FIA",82.13,0,0)
82.13
"FIA",82.13,0,1)
y^y^f^^^^n
"FIA",82.13,0,10)

"FIA",82.13,0,11)

"FIA",82.13,0,"RLRO")

"FIA",82.13,0,"VR")
18.0^ICD
"FIA",82.13,82.13)
0
"FIA",82.13,82.131)
0
"INI")
PRE^ICD1857P
"INIT")
POST^ICD1857P
"IX",80,80,"AB",0)
80^AB^AB Code Cross-Reference^R^^F^IR^I^80^^^^^S
"IX",80,80,"AB",.1,0)
^^4^4^3111004^
"IX",80,80,"AB",.1,1,0)
^ICD9("AB",(CODE_" "),IEN) - Where CODE is the ICD code and IEN
"IX",80,80,"AB",.1,2,0)
is the internal entry number in file #80.  Appending a space
"IX",80,80,"AB",.1,3,0)
character to CODE forces the code to be regarded as a string, 
"IX",80,80,"AB",.1,4,0)
thus disallowing the dropping of leading '0's.
"IX",80,80,"AB",1)
S ^ICD9("AB",$E(X,1,30),DA)=""
"IX",80,80,"AB",1.4)
S X=$S(+($$GET1^DIQ(80,(+DA_","),1.8))'>0:1,1:0)
"IX",80,80,"AB",2)
K ^ICD9("AB",$E(X,1,30),DA)
"IX",80,80,"AB",2.5)
K ^ICD9("AB")
"IX",80,80,"AB",11.1,0)
^.114IA^1^1
"IX",80,80,"AB",11.1,1,0)
1^F^80^.01^30^1^F
"IX",80,80,"AB",11.1,1,2)
S X=(X_" ")
"IX",80,80,"ABA",0)
80^ABA^BA Cross-Reference by Coding System for Sorting^R^^R^IR^I^80^^^^^S
"IX",80,80,"ABA",.1,0)
^^8^8^3111004^
"IX",80,80,"ABA",.1,1,0)
^ICD9("ABA",SYS,(CODE_" "),IEN) - Where SYS is the coding system
"IX",80,80,"ABA",.1,2,0)
to which the ICD code belongs, CODE is the ICD code, and IEN is 
"IX",80,80,"ABA",.1,3,0)
the internal entry number in file #80 where the code is stored.
"IX",80,80,"ABA",.1,4,0)
This is similar to the BA cross-reference except it is not used
"IX",80,80,"ABA",.1,5,0)
by Fileman during lookup.  The ABA cross-reference is used by the 
"IX",80,80,"ABA",.1,6,0)
special lookup routine during lookup by code.  Appending a space 
"IX",80,80,"ABA",.1,7,0)
character to CODE forces the code to be regarded as a string, thus
"IX",80,80,"ABA",.1,8,0)
disallowing the dropping of leading '0's.
"IX",80,80,"ABA",1)
S ^ICD9("ABA",$E(X(1),1,10),$E(X(2),1,30),DA)=""
"IX",80,80,"ABA",1.4)
S X=$S(+($$GET1^DIQ(80,(+DA_","),1.8))'>0:1,1:0)
"IX",80,80,"ABA",2)
K ^ICD9("ABA",$E(X(1),1,10),$E(X(2),1,30),DA)
"IX",80,80,"ABA",2.5)
K ^ICD9("ABA")
"IX",80,80,"ABA",11.1,0)
^.114IA^2^2
"IX",80,80,"ABA",11.1,1,0)
1^F^80^1.1^10^1^F
"IX",80,80,"ABA",11.1,1,3)

"IX",80,80,"ABA",11.1,2,0)
2^F^80^.01^30^2^F
"IX",80,80,"ABA",11.1,2,2)
S X=(X_" ")
"IX",80,80,"ABA",11.1,2,3)

"IX",80,80,"AEXC",0)
80^AEXC^AEXC Exclusion Cross-Reference for all Coding Systems^R^^F^IR^I^80^^^^^S
"IX",80,80,"AEXC",.1,0)
^^13^13^3111003^
"IX",80,80,"AEXC",.1,1,0)
^ICD9("AEXC",(CODE_" "),IEN) - Where CODE is an ICD code
"IX",80,80,"AEXC",.1,2,0)
and IEN is the internal entry number in file #80 where the
"IX",80,80,"AEXC",.1,3,0)
code is stored.  This cross-reference is used to track those
"IX",80,80,"AEXC",.1,4,0)
records that were either entered or edited in error.
"IX",80,80,"AEXC",.1,5,0)
When a record is either entered or edited in error, it 
"IX",80,80,"AEXC",.1,6,0)
cannot be deleted because there may be applications pointing
"IX",80,80,"AEXC",.1,7,0)
to the record.  Instead the record is retired from lookup
"IX",80,80,"AEXC",.1,8,0)
so future lookups will not find or return the errant record.
"IX",80,80,"AEXC",.1,9,0)
This is done by leaving the code and descriptive text 
"IX",80,80,"AEXC",.1,10,0)
in place and removing the activation history.  The lookup
"IX",80,80,"AEXC",.1,11,0)
(either Fileman or Special Lookup) acts as if the record
"IX",80,80,"AEXC",.1,12,0)
was never active, thus preventing the users from accessing
"IX",80,80,"AEXC",.1,13,0)
the record.
"IX",80,80,"AEXC",1)
S ^ICD9("AEXC",$E(X,1,30),DA)=""
"IX",80,80,"AEXC",1.4)
S X=$S(($O(^ICD9(+DA,66,0))'>0&($O(^ICD9(+DA,68,0))>0)):1,1:0)
"IX",80,80,"AEXC",2)
K ^ICD9("AEXC",$E(X,1,30),DA)
"IX",80,80,"AEXC",2.5)
K ^ICD9("AEXC")
"IX",80,80,"AEXC",11.1,0)
^.114IA^1^1
"IX",80,80,"AEXC",11.1,1,0)
1^F^80^.01^30^1^F
"IX",80,80,"AEXC",11.1,1,2)
S X=(X_" ")
"IX",80,80,"AN",0)
80^AN^Numeric Code Cross-Reference^R^^R^IR^I^80^^^^^S
"IX",80,80,"AN",.1,0)
^^5^5^3111001^
"IX",80,80,"AN",.1,1,0)
^ICD9("AN",SYS,NUM,IEN) - Where SYS is the coding system,
"IX",80,80,"AN",.1,2,0)
NUM is a numeric representation of an ICD code, and IEN is
"IX",80,80,"AN",.1,3,0)
the internal entry number in the ICD Diagnosis file (#80) 
"IX",80,80,"AN",.1,4,0)
where the code is stored.  The Numeric representation of a
"IX",80,80,"AN",.1,5,0)
code is used to determine the next or previous code.
"IX",80,80,"AN",1)
S ^ICD9("AN",$E(X(1),1,10),$E(X(2),1,30),DA)=""
"IX",80,80,"AN",1.4)
S X=$S(+($$GET1^DIQ(80,(+DA_","),1.8))'>0:1,1:0)
"IX",80,80,"AN",2)
K ^ICD9("AN",$E(X(1),1,10),$E(X(2),1,30),DA)
"IX",80,80,"AN",2.5)
K ^ICD9("AN")
"IX",80,80,"AN",11.1,0)
^.114IA^2^2
"IX",80,80,"AN",11.1,1,0)
1^F^80^1.1^10^1^F
"IX",80,80,"AN",11.1,1,2)
S X=+X
"IX",80,80,"AN",11.1,2,0)
2^F^80^.01^30^2^F
"IX",80,80,"AN",11.1,2,2)
S X=$$NUM^ICDEXS(X)
"IX",80,80,"AVA",0)
80^AVA^AVA Cross-Reference of VA ICD Expanded Codes^MU^^R^IR^I^80^^^^^S
"IX",80,80,"AVA",.1,0)
^^5^5^3111005^
"IX",80,80,"AVA",.1,1,0)
^ICD9("AVA",(CODE_" "),IEN) - This cross-reference is set 
"IX",80,80,"AVA",.1,2,0)
only when a code is designated as a local VA code, where 
"IX",80,80,"AVA",.1,3,0)
CODE is an ICD code that has been expanded for use in the 
"IX",80,80,"AVA",.1,4,0)
VA (local code) and IEN is the internal entry number in 
"IX",80,80,"AVA",.1,5,0)
file 80 where the VA local code is stored.
"IX",80,80,"AVA",1)
S ^ICD9("AVA",$E(X(1),1,30),DA)=""
"IX",80,80,"AVA",1.4)
S X=X(2)
"IX",80,80,"AVA",2)
K ^ICD9("AVA",$E(X(1),1,30),DA)
"IX",80,80,"AVA",2.5)
K ^ICD9("AVA")
"IX",80,80,"AVA",11.1,0)
^.114IA^2^2
"IX",80,80,"AVA",11.1,1,0)
1^F^80^.01^30^^F
"IX",80,80,"AVA",11.1,1,2)
S X=(X_" ")
"IX",80,80,"AVA",11.1,2,0)
2^F^80^1.7^10^^F
"IX",80,80,"BA",0)
80^BA^BA Cross-Reference for all Coding Systems^R^^F^IR^I^80^^^^^LS
"IX",80,80,"BA",.1,0)
^^6^6^3111003^
"IX",80,80,"BA",.1,1,0)
^ICD9("BA",(CODE_" "),IEN) - Where CODE is an ICD code and IEN is 
"IX",80,80,"BA",.1,2,0)
the internal entry number in file #80 where the code is stored.
"IX",80,80,"BA",.1,3,0)
Appending a space character to CODE forces the code to be regarded
"IX",80,80,"BA",.1,4,0)
as a string, thus disallowing the dropping of leading '0's.  The
"IX",80,80,"BA",.1,5,0)
BA cross-references is used by Fileman during unassisted lookups
"IX",80,80,"BA",.1,6,0)
when DIC(0) contains "I"
"IX",80,80,"BA",1)
S ^ICD9("BA",$E(X,1,30),DA)=""
"IX",80,80,"BA",1.4)
S X=$S(+($$GET1^DIQ(80,(+DA_","),1.8))'>0:1,1:0)
"IX",80,80,"BA",2)
K ^ICD9("BA",$E(X,1,30),DA)
"IX",80,80,"BA",2.5)
K ^ICD9("BA")
"IX",80,80,"BA",11.1,0)
^.114IA^1^1
"IX",80,80,"BA",11.1,1,0)
1^F^80^.01^30^1^F
"IX",80,80,"BA",11.1,1,2)
S X=(X_" ")
"IX",80.1,80.1,"AB",0)
80.1^AB^AB Code Cross-Reference^R^^F^IR^I^80.1^^^^^S
"IX",80.1,80.1,"AB",.1,0)
^^4^4^3111004^
"IX",80.1,80.1,"AB",.1,1,0)
^ICD0("AB",(CODE_" "),IEN) - Where CODE is the ICD code and IEN
"IX",80.1,80.1,"AB",.1,2,0)
is the internal entry number in file #80.1.  Appending a space
"IX",80.1,80.1,"AB",.1,3,0)
character to CODE forces the code to be regarded as a string, 
"IX",80.1,80.1,"AB",.1,4,0)
thus disallowing the dropping of leading '0's.
"IX",80.1,80.1,"AB",1)
S ^ICD0("AB",$E(X,1,30),DA)=""
"IX",80.1,80.1,"AB",1.4)
S X=$S(+($$GET1^DIQ(80.1,(+DA_","),1.8))'>0:1,1:0)
"IX",80.1,80.1,"AB",2)
K ^ICD0("AB",$E(X,1,30),DA)
"IX",80.1,80.1,"AB",2.5)
K ^ICD0("AB")
"IX",80.1,80.1,"AB",11.1,0)
^.114IA^1^1
"IX",80.1,80.1,"AB",11.1,1,0)
1^F^80.1^.01^30^1^F
"IX",80.1,80.1,"AB",11.1,1,2)
S X=(X_" ")
"IX",80.1,80.1,"ABA",0)
80.1^ABA^BA Cross-Reference by Coding System for Sorting^R^^R^IR^I^80.1^^^^^S
"IX",80.1,80.1,"ABA",.1,0)
^^8^8^3111005^
"IX",80.1,80.1,"ABA",.1,1,0)
^ICD0("ABA",SYS,(CODE_" "),IEN) - Where SYS is the coding system
"IX",80.1,80.1,"ABA",.1,2,0)
to which the ICD code belongs, CODE is the ICD code, and IEN is 
"IX",80.1,80.1,"ABA",.1,3,0)
the internal entry number in file #80.1 where the code is stored.
"IX",80.1,80.1,"ABA",.1,4,0)
This is similar to the BA cross-reference except it is not used
"IX",80.1,80.1,"ABA",.1,5,0)
by Fileman during lookup.  The ABA cross-reference is used by the 
"IX",80.1,80.1,"ABA",.1,6,0)
special lookup routine during lookup by code.  Appending a space 
"IX",80.1,80.1,"ABA",.1,7,0)
character to CODE forces the code to be regarded as a string, thus
"IX",80.1,80.1,"ABA",.1,8,0)
disallowing the dropping of leading '0's.
"IX",80.1,80.1,"ABA",1)
S ^ICD0("ABA",$E(X(1),1,10),$E(X(2),1,30),DA)=""
"IX",80.1,80.1,"ABA",1.4)
S X=$S(+($$GET1^DIQ(80.1,(+DA_","),1.8))'>0:1,1:0)
"IX",80.1,80.1,"ABA",2)
K ^ICD0("ABA",$E(X(1),1,10),$E(X(2),1,30),DA)
"IX",80.1,80.1,"ABA",2.5)
K ^ICD0("ABA")
"IX",80.1,80.1,"ABA",11.1,0)
^.114IA^2^2
"IX",80.1,80.1,"ABA",11.1,1,0)
1^F^80.1^1.1^10^1^F
"IX",80.1,80.1,"ABA",11.1,2,0)
2^F^80.1^.01^30^2^F
"IX",80.1,80.1,"ABA",11.1,2,2)
S X=(X_" ")
"IX",80.1,80.1,"AEXC",0)
80.1^AEXC^AEXC Exclusion Cross-Reference for all Coding Systems^R^^F^IR^I^80.1^^^^^S
"IX",80.1,80.1,"AEXC",.1,0)
^^13^13^3111005^
"IX",80.1,80.1,"AEXC",.1,1,0)
^ICD0("AEXC",(CODE_" "),IEN) - Where CODE is an ICD code
"IX",80.1,80.1,"AEXC",.1,2,0)
and IEN is the internal entry number in file #80.1 where the
"IX",80.1,80.1,"AEXC",.1,3,0)
code is stored.  This cross-reference is used to track those
"IX",80.1,80.1,"AEXC",.1,4,0)
records that were either entered or edited in error.
"IX",80.1,80.1,"AEXC",.1,5,0)
When a record is either entered or edited in error, it 
"IX",80.1,80.1,"AEXC",.1,6,0)
cannot be deleted because there may be applications pointing
"IX",80.1,80.1,"AEXC",.1,7,0)
to the record.  Instead the record is retired from lookup
"IX",80.1,80.1,"AEXC",.1,8,0)
so future lookups will not find or return the errant record.
"IX",80.1,80.1,"AEXC",.1,9,0)
This is done by leaving the code and descriptive text 
"IX",80.1,80.1,"AEXC",.1,10,0)
in place and removing the activation history.  The lookup
"IX",80.1,80.1,"AEXC",.1,11,0)
(either Fileman or Special Lookup) acts as if the record
"IX",80.1,80.1,"AEXC",.1,12,0)
was never active, thus preventing the users from accessing
"IX",80.1,80.1,"AEXC",.1,13,0)
the record.
"IX",80.1,80.1,"AEXC",1)
S ^ICD0("AEXC",$E(X,1,30),DA)=""
"IX",80.1,80.1,"AEXC",1.4)
S X=$S(($O(^ICD0(+DA,66,0))'>0&($O(^ICD0(+DA,68,0))>0)):1,1:0)
"IX",80.1,80.1,"AEXC",2)
K ^ICD0("AEXC",$E(X,1,30),DA)
"IX",80.1,80.1,"AEXC",2.5)
K ^ICD0("AEXC")
"IX",80.1,80.1,"AEXC",11.1,0)
^.114IA^1^1
"IX",80.1,80.1,"AEXC",11.1,1,0)
1^F^80.1^.01^30^1^F
"IX",80.1,80.1,"AEXC",11.1,1,2)
S X=(X_" ")
"IX",80.1,80.1,"AN",0)
80.1^AN^Numeric Code Cross-Reference^R^^R^IR^I^80.1^^^^^S
"IX",80.1,80.1,"AN",.1,0)
^^5^5^3111001^
"IX",80.1,80.1,"AN",.1,1,0)
^ICD0("AN",SYS,NUM,IEN) - Where SYS is the coding system,
"IX",80.1,80.1,"AN",.1,2,0)
NUM is a numeric representation of an ICD code, and IEN is
"IX",80.1,80.1,"AN",.1,3,0)
the internal entry number in the ICD Diagnosis file (#80.1) 
"IX",80.1,80.1,"AN",.1,4,0)
where the code is stored.  The Numeric representation of a
"IX",80.1,80.1,"AN",.1,5,0)
code is used to determine the next or previous code.
"IX",80.1,80.1,"AN",1)
S ^ICD0("AN",$E(X(1),1,10),$E(X(2),1,30),DA)=""
"IX",80.1,80.1,"AN",1.4)
S X=$S(+($$GET1^DIQ(80.1,(+DA_","),1.8))'>0:1,1:0)
"IX",80.1,80.1,"AN",2)
K ^ICD0("AN",$E(X(1),1,10),$E(X(2),1,30),DA)
"IX",80.1,80.1,"AN",2.5)
K ^ICD0("AN")
"IX",80.1,80.1,"AN",11.1,0)
^.114IA^2^2
"IX",80.1,80.1,"AN",11.1,1,0)
1^F^80.1^1.1^10^1^F
"IX",80.1,80.1,"AN",11.1,1,2)
S X=+X
"IX",80.1,80.1,"AN",11.1,2,0)
2^F^80.1^.01^30^2^F
"IX",80.1,80.1,"AN",11.1,2,2)
S X=$$NUM^ICDEXS(X)
"IX",80.1,80.1,"AVA",0)
80.1^AVA^AVA Cross-Reference of VA ICD Expanded Codes^MU^^R^IR^I^80.1^^^^^S
"IX",80.1,80.1,"AVA",.1,0)
^^5^5^3111005^
"IX",80.1,80.1,"AVA",.1,1,0)
^ICD0("AVA",(CODE_" "),IEN) - This cross-reference is set 
"IX",80.1,80.1,"AVA",.1,2,0)
only when a code is designated as a local VA code, where 
"IX",80.1,80.1,"AVA",.1,3,0)
CODE is an ICD code that has been expanded for use in the 
"IX",80.1,80.1,"AVA",.1,4,0)
VA (local code) and IEN is the internal entry number in 
"IX",80.1,80.1,"AVA",.1,5,0)
file 80.1 where the VA local code is stored.
"IX",80.1,80.1,"AVA",1)
S ^ICD0("AVA",$E(X(1),1,30),DA)=""
"IX",80.1,80.1,"AVA",1.4)
S X=X(2)
"IX",80.1,80.1,"AVA",2)
K ^ICD0("AVA",$E(X(1),1,30),DA)
"IX",80.1,80.1,"AVA",2.5)
K ^ICD9("AVA")
"IX",80.1,80.1,"AVA",11.1,0)
^.114IA^2^2
"IX",80.1,80.1,"AVA",11.1,1,0)
1^F^80.1^.01^30^1^F
"IX",80.1,80.1,"AVA",11.1,1,2)
S X=(X_" ")
"IX",80.1,80.1,"AVA",11.1,2,0)
2^F^80.1^1.7^10^^F
"IX",80.1,80.1,"AVA",11.1,2,3)

"IX",80.1,80.1,"BA",0)
80.1^BA^BA Cross-Reference for all Coding Systems^R^^F^IR^I^80.1^^^^^LS
"IX",80.1,80.1,"BA",.1,0)
^^6^6^3111004^
"IX",80.1,80.1,"BA",.1,1,0)
^ICD0("BA",(CODE_" "),IEN) - Where CODE is an ICD code and IEN is 
"IX",80.1,80.1,"BA",.1,2,0)
the internal entry number in file #80.1 where the code is stored.
"IX",80.1,80.1,"BA",.1,3,0)
Appending a space character to CODE forces the code to be regarded
"IX",80.1,80.1,"BA",.1,4,0)
as a string, thus disallowing the dropping of leading '0's.
"IX",80.1,80.1,"BA",.1,5,0)
The BA cross-references is used by Fileman during unassisted lookups
"IX",80.1,80.1,"BA",.1,6,0)
when DIC(0) contains "I"
"IX",80.1,80.1,"BA",1)
S ^ICD0("BA",$E(X,1,30),DA)=""
"IX",80.1,80.1,"BA",1.4)
S X=$S(+($$GET1^DIQ(80.1,(+DA_","),1.8))'>0:1,1:0)
"IX",80.1,80.1,"BA",2)
K ^ICD0("BA",$E(X,1,30),DA)
"IX",80.1,80.1,"BA",2.5)
K ^ICD0("BA")
"IX",80.1,80.1,"BA",11.1,0)
^.114IA^1^1
"IX",80.1,80.1,"BA",11.1,1,0)
1^F^80.1^.01^30^1^F
"IX",80.1,80.1,"BA",11.1,1,2)
S X=(X_" ")
"IX",80.1,80.1,"BA",11.1,1,3)

"IX",82,82,"C",0)
82^C^Cross reference on Description^R^^F^IR^I^82^^^^^LS
"IX",82,82,"C",1)
S ^ICDID("C",$E(X,1,150),DA)=""
"IX",82,82,"C",2)
K ^ICDID("C",$E(X,1,150),DA)
"IX",82,82,"C",2.5)
K ^ICDID("C")
"IX",82,82,"C",11.1,0)
^.114IA^1^1
"IX",82,82,"C",11.1,1,0)
1^F^82^1^150^1^F
"IX",82,82,"C",11.1,1,3)

"IX",82.1,82.1,"C",0)
82.1^C^Cross reference on Description^R^^F^IR^I^82.1^^^^^LS
"IX",82.1,82.1,"C",1)
S ^ICDIP("C",$E(X,1,150),DA)=""
"IX",82.1,82.1,"C",2)
K ^ICDIP("C",$E(X,1,150),DA)
"IX",82.1,82.1,"C",2.5)
K ^ICDIP("C")
"IX",82.1,82.1,"C",11.1,0)
^.114IA^1^1
"IX",82.1,82.1,"C",11.1,1,0)
1^F^82.1^1^150^1^F
"IX",82.1,82.1,"C",11.1,1,3)

"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",185,-1)
1^1
"PKG",185,0)
DRG GROUPER^ICD^DRG GROUPER
"PKG",185,20,0)
^9.402P^^
"PKG",185,22,0)
^9.49I^1^1
"PKG",185,22,1,0)
18.0^3001024^3001201^568
"PKG",185,22,1,"PAH",1,0)
57^3140421^520665225
"PKG",185,22,1,"PAH",1,1,0)
^^3^3^3140421
"PKG",185,22,1,"PAH",1,1,1,0)
ICD*18.0*57 contains the files and routines for the implementation
"PKG",185,22,1,"PAH",1,1,2,0)
of ICD-10.  The data is contained in a Lexicon companion patch 
"PKG",185,22,1,"PAH",1,1,3,0)
LEX*2.0*80.
"PRE")
ICD1857
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
42
"RTN","ICD0IDX")
1^29
"RTN","ICD1857")
0^24^B176584453
"RTN","ICD1857",1,0)
ICD1857 ;ISL/KER - ICD*18.0*57 Env Check ;04/21/2014
"RTN","ICD1857",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICD1857",3,0)
 ;               
"RTN","ICD1857",4,0)
 ;               
"RTN","ICD1857",5,0)
 ; Global Variables
"RTN","ICD1857",6,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","ICD1857",7,0)
 ;    ^%ZOSF("UCICHECK")  ICR  10096
"RTN","ICD1857",8,0)
 ;    ^ICD0(1535)         N/A
"RTN","ICD1857",9,0)
 ;    ^ICD0(1548)         N/A
"RTN","ICD1857",10,0)
 ;    ^ICD0(366)          N/A
"RTN","ICD1857",11,0)
 ;    ^ICD9(11938)        N/A
"RTN","ICD1857",12,0)
 ;    ^ICD9(3066)         N/A
"RTN","ICD1857",13,0)
 ;    ^TMP("ICDKID")      SACC 2.3.2.5.1
"RTN","ICD1857",14,0)
 ;    ^TMP("ICDMSG")      SACC 2.3.2.5.1
"RTN","ICD1857",15,0)
 ;               
"RTN","ICD1857",16,0)
 ; External References
"RTN","ICD1857",17,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICD1857",18,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICD1857",19,0)
 ;    $$IENS^DILF         ICR   2054
"RTN","ICD1857",20,0)
 ;    $$NETNAME^XMXUTIL   ICR   2734
"RTN","ICD1857",21,0)
 ;    $$PATCH^XPDUTL      ICR  10141
"RTN","ICD1857",22,0)
 ;    $$PKG^XPDUTL        ICR  10141
"RTN","ICD1857",23,0)
 ;    $$VERSION^XPDUTL    ICR  10141
"RTN","ICD1857",24,0)
 ;    $$VER^XPDUTL        ICR  10141
"RTN","ICD1857",25,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","ICD1857",26,0)
 ;    EN^DIQ1             ICR  10015
"RTN","ICD1857",27,0)
 ;    FIELD^DID           ICR   2052
"RTN","ICD1857",28,0)
 ;    FILE^DID            ICR   2052
"RTN","ICD1857",29,0)
 ;    FIND^DIC            ICR   2051
"RTN","ICD1857",30,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","ICD1857",31,0)
 ;    FIND^DIC            ICR   2051
"RTN","ICD1857",32,0)
 ;    ^DIR                ICR  10026
"RTN","ICD1857",33,0)
 ;    ^XMD                ICR  10070
"RTN","ICD1857",34,0)
 ;               
"RTN","ICD1857",35,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICD1857",36,0)
 ;     XPDABORT,XPDDIQ,XPDENV,XPDQUIT
"RTN","ICD1857",37,0)
 ;               
"RTN","ICD1857",38,0)
ENV ; ICD*18.0*57 Environment Check
"RTN","ICD1857",39,0)
 ;   Checks
"RTN","ICD1857",40,0)
 S XPDNOQUE=1 N DA,DIC,DIFROM,DIQ,DIR,DIROUT,DIRUT,DR,DTOUT,DUOUT,ICD,ICD10,ICD9,ICDADR,ICDATA,ICDBUILD,ICDC,ICDC1,ICDC2,ICDC3
"RTN","ICD1857",41,0)
 N ICDC4,ICDCOM,ICDCONT,ICDD,ICDDA,ICDDD,ICDDT,ICDE,ICDENT,ICDF,ICDFI,ICDFULL,ICDFY,ICDG,ICDGBL,ICDI,ICDIEN,ICDIGHF
"RTN","ICD1857",42,0)
 N ICDINE,ICDINS,ICDLREV,ICDM,ICDMSG,ICDNM,ICDNS,ICDO,ICDOUT,ICDP,ICDPAT,ICDPI,ICDPK,ICDPN,ICDPRI,ICDPT,ICDPTYPE
"RTN","ICD1857",43,0)
 N ICDQTR,ICDR,ICDREL,ICDREQ,ICDREQP,ICDRT,ICDRV,ICDSCR,ICDSTR,ICDSUB,ICDT,ICDUCI,ICDV,ICDVD,ICDVI,ICDVER,ICDVR
"RTN","ICD1857",44,0)
 N IEN,X,XCNP,XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ,Y D IMP K XPDDIQ("XPZ1","B"),XPDDIQ("XPI1","B")
"RTN","ICD1857",45,0)
 S XPDDIQ("XPZ1","B")="NO",XPDDIQ("XPI1","B")="NO",U="^"
"RTN","ICD1857",46,0)
 ;     User Variables
"RTN","ICD1857",47,0)
 D:+($$UR)'>0 ET("User not defined (DUZ)")
"RTN","ICD1857",48,0)
 ;     System Variables
"RTN","ICD1857",49,0)
 D:+($$SY)'>0 ET("Undefined IO variable(s)")
"RTN","ICD1857",50,0)
 ;     Data
"RTN","ICD1857",51,0)
 N ICDTEST D:+($$GOK)'>0 ET("Cannot locate import data global ^LEXM")
"RTN","ICD1857",52,0)
 I $D(ICDE) D ABRT Q
"RTN","ICD1857",53,0)
 ;     Version Number
"RTN","ICD1857",54,0)
 W !,?3,"Checking for ICD Version installations",!
"RTN","ICD1857",55,0)
 S ICDVER="ICD 18.0" S ICDINS=$$VER(ICDVER) I +ICDINS'>0 D  D ABRT Q
"RTN","ICD1857",56,0)
 . D ET(" Version 18.0 not found.  Please install ICD v 18.0")
"RTN","ICD1857",57,0)
 I +ICDINS>0,$P(ICDINS,"^",1)?7N,$L($P(ICDINS,"^",2)) D
"RTN","ICD1857",58,0)
 . W !,?5,ICDVER," installed ",$P(ICDINS,"^",2)
"RTN","ICD1857",59,0)
 S ICDVER="ICD*18.0*57" S ICDINS=$$VER(ICDVER)
"RTN","ICD1857",60,0)
 I +ICDINS>0,$P(ICDINS,"^",1)?7N,$L($P(ICDINS,"^",2)) D
"RTN","ICD1857",61,0)
 . W !,?5,ICDVER," installed ",$P(ICDINS,"^",2)
"RTN","ICD1857",62,0)
 ;     Required Patches
"RTN","ICD1857",63,0)
 D:$O(ICDREQP(0))'>0 IMP I $O(ICDREQP(0))>0 D
"RTN","ICD1857",64,0)
 . W ! N ICDPAT,ICDI,ICDPN,ICDP,ICDR,ICDC,ICDO,ICDC1,ICDC2,ICDC3,ICDC4,ICD
"RTN","ICD1857",65,0)
 . S (ICDR,ICDC)=0 S ICDC1=3,(ICDC2,ICDC3,ICDC4)=20,ICDC2=18
"RTN","ICD1857",66,0)
 . S ICDI=0  F  S ICDI=$O(ICDREQP(ICDI)) Q:+ICDI'>0  D
"RTN","ICD1857",67,0)
 . . S ICDC=ICDC+1,ICDPAT=$G(ICDREQP(ICDI))
"RTN","ICD1857",68,0)
 . . S:$P(ICDPAT,"^",2)?7N ICDR=ICDR+1,ICDC3=ICDC2+13,ICDC4=ICDC2+36
"RTN","ICD1857",69,0)
 . S ICDI=0  F  S ICDI=$O(ICDREQP(ICDI)) Q:+ICDI'>0  D
"RTN","ICD1857",70,0)
 . . N ICDPAT,ICDREL,ICDINS,ICDCOM,ICDINE,ICDREQ S ICDREQ=$G(ICDREQP(ICDI))
"RTN","ICD1857",71,0)
 . . S ICDPAT=$P(ICDREQ,"^",1),ICDREL=$P(ICDREQ,"^",2),ICDCOM=$P(ICDREQ,"^",3)
"RTN","ICD1857",72,0)
 . . S ICDPN=$$INS(ICDPAT) S ICDINS=$$INSD(ICDPAT),ICDINE=$P(ICDINS,"^",2)
"RTN","ICD1857",73,0)
 . . W:ICDI=1 !,?3,"Checking for ",?ICDC2,$S(+($G(ICDR))>0:"Released",1:"")
"RTN","ICD1857",74,0)
 . . W !,?ICDC1,ICDPAT
"RTN","ICD1857",75,0)
 . . W:ICDREL?7N ?ICDC2,$TR($$FMTE^XLFDT(ICDREL,"5DZ"),"@"," ")
"RTN","ICD1857",76,0)
 . . I +ICDPN>0 D
"RTN","ICD1857",77,0)
 . . . S ICDO=+($G(ICDO))+1 W ?ICDC3,"Installed " W:$L($G(ICDINE)) ICDINE
"RTN","ICD1857",78,0)
 . . . W:+ICDC4>0&(+ICDC4>ICDC3)&($L(ICDCOM)) ?ICDC4,ICDCOM
"RTN","ICD1857",79,0)
 . . I +ICDPN'>0 D ET((" "_ICDPAT_" not found, please install "_ICDPAT_" before continuing"))
"RTN","ICD1857",80,0)
 . W:+($G(ICDO))'=ICDC !
"RTN","ICD1857",81,0)
 ;     UCI
"RTN","ICD1857",82,0)
 I +($$UOK)'>0&('$D(ICDTEST)) W ! D ET("Unable to install in this UCI") G ABRT
"RTN","ICD1857",83,0)
 D STATUS S ICDCONT=$$CONT I +ICDCONT'>0 W ! D ET(" User aborted install") G ABRT
"RTN","ICD1857",84,0)
 I $D(ICDE) D ABRT Q
"RTN","ICD1857",85,0)
 I '$D(ICDFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","ICD1857",86,0)
 ;   Quit, Exit or Abort
"RTN","ICD1857",87,0)
QUIT ;     Quit   Passed Environment Check
"RTN","ICD1857",88,0)
 K ICDFULL D OK
"RTN","ICD1857",89,0)
 Q
"RTN","ICD1857",90,0)
EXIT ;     Exit   Failed Environment Check
"RTN","ICD1857",91,0)
 D:$D(ICDE) ED S XPDQUIT=2 K ICDE,ICDFULL Q
"RTN","ICD1857",92,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","ICD1857",93,0)
 D:$D(ICDE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1
"RTN","ICD1857",94,0)
 K ICDE,ICDFULL
"RTN","ICD1857",95,0)
 Q
"RTN","ICD1857",96,0)
SY(X) ;   Check System variables
"RTN","ICD1857",97,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","ICD1857",98,0)
 Q 1
"RTN","ICD1857",99,0)
UR(X) ;   Check User variables
"RTN","ICD1857",100,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","ICD1857",101,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","ICD1857",102,0)
 Q 1
"RTN","ICD1857",103,0)
ET(X) ;   Error Text
"RTN","ICD1857",104,0)
 N ICDI S ICDI=+($G(ICDE(0))),ICDI=ICDI+1,ICDE(ICDI)="    "_$G(X),ICDE(0)=ICDI
"RTN","ICD1857",105,0)
 Q
"RTN","ICD1857",106,0)
ED ;   Error Display
"RTN","ICD1857",107,0)
 N ICDI S ICDI=0 F  S ICDI=$O(ICDE(ICDI)) Q:+ICDI=0  D M(ICDE(ICDI))
"RTN","ICD1857",108,0)
 D M(" ") K ICDE Q
"RTN","ICD1857",109,0)
NOTDEF(X) ;   Check to see if user is defined
"RTN","ICD1857",110,0)
 N DA,DR,DIQ,ICD,DIC S DA=+($G(X)),DR=.01,DIC=200,DIQ="ICD" D EN^DIQ1 Q '$D(ICD)
"RTN","ICD1857",111,0)
OK ;   Environment is OK
"RTN","ICD1857",112,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR,ICDT
"RTN","ICD1857",113,0)
 D IMP S ICDT="  Environment "_$S($L(ICDBUILD):("for patch/build "_ICDBUILD_" "),1:"")_"is ok"
"RTN","ICD1857",114,0)
 D BM(ICDT),M(" ")
"RTN","ICD1857",115,0)
 Q
"RTN","ICD1857",116,0)
MAIL ;   Mail global array in message
"RTN","ICD1857",117,0)
 N DIFROM,ICDPRI,ICDADR,ICDI,ICDM,ICDSUB,XCNP,XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ,ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR
"RTN","ICD1857",118,0)
 D IMP K ^TMP("ICDMSG",$J) S ICDSUB="Lexicon/ICD-10 Installation" S:$L($G(ICDBUILD)) ICDSUB=$G(ICDBUILD)_" Installation"
"RTN","ICD1857",119,0)
 S ICDPRI=$$ADR G:'$L(ICDPRI) MAILQ S ICDPRI="G.ICDINS@"_ICDPRI S ICDADR=$$GET1^DIQ(200,+($G(DUZ)),.01) G:'$L(ICDADR) MAILQ
"RTN","ICD1857",120,0)
 S XMSUB=ICDSUB S ICDI=0 F  S ICDI=$O(^TMP("ICDKID",$J,ICDI)) Q:+ICDI=0  D
"RTN","ICD1857",121,0)
 . S ICDM=+($O(^TMP("ICDMSG",$J," "),-1))+1,^TMP("ICDMSG",$J,ICDM,0)=$E($G(^TMP("ICDKID",$J,ICDI)),1,79),^TMP("ICDMSG",$J,0)=ICDM
"RTN","ICD1857",122,0)
 K ^TMP("ICDKID",$J) G:'$D(^TMP("ICDMSG",$J)) MAILQ G:+($G(^TMP("ICDMSG",$J,0)))'>0 MAILQ S XMY(ICDPRI)="",XMY(ICDADR)=""
"RTN","ICD1857",123,0)
 S XMTEXT="^TMP(""ICDMSG"",$J,",XMDUZ=.5 D ^XMD
"RTN","ICD1857",124,0)
MAILQ ;   Quit Mail
"RTN","ICD1857",125,0)
 D KILL K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","ICD1857",126,0)
 Q
"RTN","ICD1857",127,0)
ADR(ICD) ;   Mailing Address
"RTN","ICD1857",128,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(ICD,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 ICD
"RTN","ICD1857",129,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(ICD,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 ICD
"RTN","ICD1857",130,0)
 Q "ISC.DOMAIN.EXT"
"RTN","ICD1857",131,0)
KILL ;   Kill all ^TMP(
"RTN","ICD1857",132,0)
 K ^TMP("ICDMSG",$J),^TMP("ICDKID",$J)
"RTN","ICD1857",133,0)
 Q
"RTN","ICD1857",134,0)
CONT(X) ; Continue
"RTN","ICD1857",135,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y
"RTN","ICD1857",136,0)
 W !!,"   WARNING    WARNING    WARNING    WARNING    WARNING    WARNING    WARNING",!
"RTN","ICD1857",137,0)
 W !,"   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
"RTN","ICD1857",138,0)
 W !,"   *                                                                       *"
"RTN","ICD1857",139,0)
 W !,"   *  This Install will delete both the ICD-9 Data Dictionary and data in  *"
"RTN","ICD1857",140,0)
 W !,"   *  files #80 and #80.1.  It will then install a new Data Dictionary     *"
"RTN","ICD1857",141,0)
 W !,"   *  for files #80 and #80.1.  The new Data Dictionary will accommodate   *"
"RTN","ICD1857",142,0)
 W !,"   *  both the ICD-9 and ICD-10 coding systems.  The new data will be      *"
"RTN","ICD1857",143,0)
 W !,"   *  installed by the accompanying Lexicon patch LEX*2.0*80.  These       *"
"RTN","ICD1857",144,0)
 W !,"   *  changes will affect this namespace and any other namespace that      *"
"RTN","ICD1857",145,0)
 W !,"   *  the ^ICD9 and ^ICD0 globals are mapped to.  If your current          *"
"RTN","ICD1857",146,0)
 W !,"   *  namespace is mapped to another namespace, make sure the other        *"
"RTN","ICD1857",147,0)
 W !,"   *  namespace is also scheduled to be updated by this patch before       *"
"RTN","ICD1857",148,0)
 W !,"   *  continuing.                                                          *"
"RTN","ICD1857",149,0)
 W !,"   *                                                                       *"
"RTN","ICD1857",150,0)
 W !,"   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
"RTN","ICD1857",151,0)
 S DIR(0)="YAO",DIR("A")="   Do you wish to continue?  (Y/N)  "
"RTN","ICD1857",152,0)
 S DIR("PRE")="S:X[""?"" X=""??""" S (DIR("?"),DIR("??"))="^D CONTH^ICD1857"
"RTN","ICD1857",153,0)
 W ! D ^DIR S (X,Y)=+($G(Y)) S:Y'>0 XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1
"RTN","ICD1857",154,0)
 Q X
"RTN","ICD1857",155,0)
CONTH ;   Continue Help
"RTN","ICD1857",156,0)
 W !,?5,"Answering 'Yes' will:",!
"RTN","ICD1857",157,0)
 W !,?7,"1)  Delete the Data Dictionaries and the data for the following:",!
"RTN","ICD1857",158,0)
 W !,?11,"ICD DIAGNOSIS            file #80      ^ICD9("
"RTN","ICD1857",159,0)
 W !,?11,"ICD OPERATION/PROCEDURE  file #80.1    ^ICD0(",!
"RTN","ICD1857",160,0)
 W !,?7,"2)  Install the new joint ICD-9/10 Data Dictionaries."
"RTN","ICD1857",161,0)
 W !,?7,"3)  Update legacy ICD-9 APIs and install new ICD-9/10 APIs."
"RTN","ICD1857",162,0)
 W !,?7,"4)  Populate files #80 and #80.1 with ICD-9/10 data (LEX*2.0*80)",!
"RTN","ICD1857",163,0)
 W !,?7,"      This affects the current namespace and any "
"RTN","ICD1857",164,0)
 W !,?7,"      namespace that the Data Dictionary and files"
"RTN","ICD1857",165,0)
 W !,?7,"      #80 and file #80.1 are mapped to.",!
"RTN","ICD1857",166,0)
 W !,?5,"Answering 'No' will abort the installation of this patch"
"RTN","ICD1857",167,0)
 Q
"RTN","ICD1857",168,0)
UOK(X) ; UCI Ok for Install
"RTN","ICD1857",169,0)
 N X,Y S X=$$NETNAME^XMXUTIL(.5) Q:X["LEXDEV1.FO-BAYPINES" 1
"RTN","ICD1857",170,0)
 X ^%ZOSF("UCI") Q:$G(Y)["LEXDEV1" 1
"RTN","ICD1857",171,0)
 Q 1
"RTN","ICD1857",172,0)
GOK(X) ; Input Global Ok for Install
"RTN","ICD1857",173,0)
 Q:$D(^TMP("LEX*2.0*80",$J,"NODATA")) 1
"RTN","ICD1857",174,0)
 N ND,OK S OK=1 F ND="^LEXM","^LEXM(80)","^LEXM(80.1)","^LEXM(80.4)" S:'$D(@ND) OK=0
"RTN","ICD1857",175,0)
 S ND="^LEXM(0,""BUILD"")" S:$G(@ND)'="LEX*2.0*80" OK=0
"RTN","ICD1857",176,0)
 S X=OK
"RTN","ICD1857",177,0)
 Q X
"RTN","ICD1857",178,0)
VER(X) ;
"RTN","ICD1857",179,0)
 N DA,ICD,ICDDA,ICDE,ICDI,ICDMSG,ICDNS,ICDOUT,ICDPI,ICDPN,ICDSCR,ICDVI,ICDVD,ICDVI,ICDVR S ICD=$G(X)
"RTN","ICD1857",180,0)
 S ICDNS=$$PKG^XPDUTL(ICD),ICDVR=$$VER^XPDUTL(ICD),ICDPN=$P(X,"*",3)
"RTN","ICD1857",181,0)
 Q:'$L(ICDNS) 0  S ICDVR=+ICDVR Q:ICDVR'>0 0  S ICDPN=+ICDPN S:ICDVR'["." ICDVR=ICDVR_".0"
"RTN","ICD1857",182,0)
 D FIND^DIC(9.4,,.01,"O",ICDNS,10,"C",,,"ICDOUT","ICDMSG") S ICDPI=$G(ICDOUT("DILIST",2,1))
"RTN","ICD1857",183,0)
 K ICDOUT,ICDMSG Q:+ICDPI'>0 0  Q:'$D(@("^DIC(9.4,"_ICDPI_",22)")) 0
"RTN","ICD1857",184,0)
 K DA S DA(1)=ICDPI S ICDDA=$$IENS^DILF(.DA)
"RTN","ICD1857",185,0)
 D FIND^DIC(9.49,ICDDA,".01;1I;2I","O",ICDVR,10,"B",,,"ICDOUT","ICDMSG")
"RTN","ICD1857",186,0)
 S ICDVD=$G(ICDOUT("DILIST","ID",1,2)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1857",187,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1857",188,0)
 S:$E(ICDVD,1,7)'?7N ICDVD=$G(ICDOUT("DILIST","ID",1,1)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1857",189,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1857",190,0)
 Q:+ICDPN'>0 0  S ICDVI=$G(ICDOUT("DILIST",2,1)) K ICDOUT,ICDMSG
"RTN","ICD1857",191,0)
 Q 0
"RTN","ICD1857",192,0)
INS(X) ;
"RTN","ICD1857",193,0)
 N ICD,ICDP,ICDV,ICDI S ICD=$G(X) I $L(ICD,"*")=3 S X=$$PATCH^XPDUTL(ICD) Q X
"RTN","ICD1857",194,0)
 S ICDP=$$PKG^XPDUTL(ICD),ICDV=$$VER^XPDUTL(ICD),ICDI=$$VERSION^XPDUTL(ICDP)
"RTN","ICD1857",195,0)
 Q:+ICDV>0&(ICDV=ICDI) 1
"RTN","ICD1857",196,0)
 Q 0
"RTN","ICD1857",197,0)
INSD(X) ;   Installed on
"RTN","ICD1857",198,0)
 N DA,ICD,ICDDA,ICDE,ICDI,ICDMSG,ICDNS,ICDOUT,ICDPI,ICDPN,ICDSCR,ICDVI,ICDVD,ICDVI,ICDVR S ICD=$G(X)
"RTN","ICD1857",199,0)
 S ICDNS=$$PKG^XPDUTL(ICD),ICDVR=$$VER^XPDUTL(ICD),ICDPN=$P(X,"*",3)
"RTN","ICD1857",200,0)
 Q:'$L(ICDNS) 0  S ICDVR=+ICDVR Q:ICDVR'>0 0  S ICDPN=+ICDPN S:ICDVR'["." ICDVR=ICDVR_".0"
"RTN","ICD1857",201,0)
 D FIND^DIC(9.4,,.01,"O",ICDNS,10,"C",,,"ICDOUT","ICDMSG") S ICDPI=$G(ICDOUT("DILIST",2,1))
"RTN","ICD1857",202,0)
 K ICDOUT,ICDMSG Q:+ICDPI'>0 0  Q:'$D(@("^DIC(9.4,"_ICDPI_",22)")) 0
"RTN","ICD1857",203,0)
 K DA S DA(1)=ICDPI S ICDDA=$$IENS^DILF(.DA)
"RTN","ICD1857",204,0)
 D FIND^DIC(9.49,ICDDA,".01;1I;2I","O",ICDVR,10,"B",,,"ICDOUT","ICDMSG")
"RTN","ICD1857",205,0)
 S ICDVD=$G(ICDOUT("DILIST","ID",1,2)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1857",206,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1857",207,0)
 S:$E(ICDVD,1,7)'?7N ICDVD=$G(ICDOUT("DILIST","ID",1,1)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1857",208,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1857",209,0)
 Q:+ICDPN'>0 0  S ICDVI=$G(ICDOUT("DILIST",2,1)) K ICDOUT,ICDMSG
"RTN","ICD1857",210,0)
 Q:+ICDVI'>0 ""  Q:'$D(@("^DIC(9.4,"_ICDPI_",22,"_ICDVI_",""PAH"")")) ""
"RTN","ICD1857",211,0)
 K DA S DA(2)=ICDPI,DA(1)=ICDVI S ICDDA=$$IENS^DILF(.DA)
"RTN","ICD1857",212,0)
 S ICDSCR="I $G(^DIC(9.4,"_ICDPI_",22,"_ICDVI_",""PAH"",+($G(Y)),0))[""SEQ #"""
"RTN","ICD1857",213,0)
 D FIND^DIC(9.4901,ICDDA,".01;.02I",,ICDPN,10,"B",ICDSCR,,"ICDOUT","ICDMSG")
"RTN","ICD1857",214,0)
 S ICDI=$G(ICDOUT("DILIST","ID",1,.02)) I '$L(ICDI) D
"RTN","ICD1857",215,0)
 . S ICDSCR="" D FIND^DIC(9.4901,ICDDA,".01;.02I",,ICDPN,10,"B",ICDSCR,,"ICDOUT","ICDMSG")
"RTN","ICD1857",216,0)
 . S ICDI=$G(ICDOUT("DILIST","ID",1,.02))
"RTN","ICD1857",217,0)
 Q:'$L(ICDI) ""  Q:$P(ICDI,".",1)'?7N ""  S ICDE=$TR($$FMTE^XLFDT(ICDI,"5DZ"),"@"," ")
"RTN","ICD1857",218,0)
 Q:'$L(ICDE) ""  S X=ICDI_"^"_ICDE
"RTN","ICD1857",219,0)
 Q X
"RTN","ICD1857",220,0)
IMP ;   Import names
"RTN","ICD1857",221,0)
 S ICDREQP(1)="ICD*18.0*6^3030924^CSV"
"RTN","ICD1857",222,0)
 S ICDREQP(2)="ICD*18.0*12^3041008^CTD"
"RTN","ICD1857",223,0)
 S ICDREQP(3)="ICD*18.0*15^3050609^Legacy APIs"
"RTN","ICD1857",224,0)
 S ICDREQP(4)="ICD*18.0*29^3071115^Legacy APIs"
"RTN","ICD1857",225,0)
 S ICDREQP(5)="LEX*2.0*81^3120214^Fix Cross-Reference"
"RTN","ICD1857",226,0)
 S ICDREQP(6)="PSO*7.0*404^3120814^Global Read of ICD files"
"RTN","ICD1857",227,0)
 S ICDREQP(7)="ONC*2.11*56^3120927^Global Read of ICD files"
"RTN","ICD1857",228,0)
 S ICDREQP(8)="RA*5.0*112^3130417^Global Read of ICD files"
"RTN","ICD1857",229,0)
 S ICDREQP(9)="ICD*18.0*62^3130501^DRG Grouper Fixes"
"RTN","ICD1857",230,0)
 S ICDREQP(10)="GMPL*2.0*43^3130514^Global Read of ICD files"
"RTN","ICD1857",231,0)
 S ICDREQP(11)="TIU*1.0*267^3130514^Global Read of ICD files"
"RTN","ICD1857",232,0)
 S ICDREQP(12)="ICD*18.0*69^3130621^DRG Grouper Fixes"
"RTN","ICD1857",233,0)
 S ICDREQP(13)="DG*5.3*870^3130715^Global Read of ICD files"
"RTN","ICD1857",234,0)
 S ICDREQP(14)="IBD*3.0*64^3130903^Global Read of ICD files"
"RTN","ICD1857",235,0)
 S ICDREQP(15)="LR*5.2*429^3130918^Global Read of ICD files"
"RTN","ICD1857",236,0)
 S ICDREQP(16)="ACKQ*3.0*22^3131212^Global Read of ICD files"
"RTN","ICD1857",237,0)
 S ICDREQP(17)="LEX*2.0*94^3140114^FY14 2nd Qtr Update"
"RTN","ICD1857",238,0)
 S ICDPTYPE="ICD-10 Implementation",ICDLREV=""
"RTN","ICD1857",239,0)
 S ICDBUILD="ICD*18.0*57",ICDIGHF="",ICDFY="",ICDQTR=""
"RTN","ICD1857",240,0)
 Q
"RTN","ICD1857",241,0)
STATUS ; ICD-9/10 Status in files 80/80.1
"RTN","ICD1857",242,0)
 N ICD10,ICD9,ICDATA,ICDD,ICDDT,ICDENT,ICDF,ICDFI,ICDIEN,ICDM,ICDNM,ICDNS,ICDPK,ICDPT,ICDRT,ICDRV,ICDUCI,ICDVR,ICDT,ICDX,X,Y
"RTN","ICD1857",243,0)
 K ICDDD,ICDGBL X ^%ZOSF("UCI") S (ICDNS,ICDUCI)=Y S:ICDNS[","&($L($P(Y,",",1))) ICDNS=$P(Y,",",1)
"RTN","ICD1857",244,0)
 S ICDX="   Checking "_$S($L(ICDNS):(ICDNS_" "),1:"")_"ICD Data Dictionary/Global/Data Status:" D BM(ICDX)
"RTN","ICD1857",245,0)
 D FIELD^DID(80.066,60,"N","LABEL","ICD9","ICDM")
"RTN","ICD1857",246,0)
 D FIELD^DID(80.012,.01,"N","LABEL","ICD10","ICDM")
"RTN","ICD1857",247,0)
 D BM("     Data Dictionary:"),M(" ")
"RTN","ICD1857",248,0)
 D:'$D(ICD9) M("       Legacy ICD Data Dictionary does not exist")
"RTN","ICD1857",249,0)
 D:$D(ICD9) M("       Remnants of the legacy ICD Data Dictionary found") S:$D(ICD9) ICDDD(1)=""
"RTN","ICD1857",250,0)
 D:'$D(ICD10) M("       ICD-9/ICD-10 Data Dictionary does not exist") S:'$D(ICD10) ICDDD(2)=""
"RTN","ICD1857",251,0)
 D:$D(ICD10) M("       ICD-9/ICD-10 Data Dictionary found")
"RTN","ICD1857",252,0)
 D BM("     Global:"),M(" ")
"RTN","ICD1857",253,0)
 F ICDT=80,80.1 D
"RTN","ICD1857",254,0)
 . D FILE^DID(ICDT,"N","DATE;GLOBAL NAME;NAME;PACKAGE REVISION DATA;VERSION;LOOKUP PROGRAM","ICDF","ICDM")
"RTN","ICD1857",255,0)
 . N ICDRT,ICDFI,ICDNM,ICDVR,ICDPK,ICDRV,ICDDT,ICDPT,ICDIEN,ICDENT S ICDRT=$G(ICDF("GLOBAL NAME"))
"RTN","ICD1857",256,0)
 . S ICDRT=ICDRT_$J(" ",(8-$L(ICDRT))) S ICDFI=$G(ICDT),ICDFI=ICDFI_$J(" ",(6-$L(ICDFI)))
"RTN","ICD1857",257,0)
 . S ICDNM=$G(ICDF("NAME")),ICDNM=ICDNM_$J(" ",(25-$L(ICDNM))),ICDVR=$G(ICDF("VERSION")) S:+ICDVR'>0 ICDVR="18.0"
"RTN","ICD1857",258,0)
 . S ICDPK="ICD",ICDRV=$G(ICDF("PACKAGE REVISION DATA")),ICDDT=$P(ICDRV,"^",2),ICDRV=$P(ICDRV,"^",1)
"RTN","ICD1857",259,0)
 . S ICDPT="" S:$L(ICDPK)&(+($G(ICDVR))>0)&(+($G(ICDRV))>0) ICDPT=ICDPK_"*"_ICDVR_"*"_ICDRV
"RTN","ICD1857",260,0)
 . S ICDPT=ICDPT_$J(" ",(13-$L(ICDPT))),ICDDT=$S(ICDDT?7N:$TR($$FMTE^XLFDT(ICDDT,"5DZ"),"@"," "),1:"")
"RTN","ICD1857",261,0)
 . S ICDDT=ICDDT_$J(" ",(12-$L(ICDDT)))
"RTN","ICD1857",262,0)
 . D:ICDT=80 M("       Global Name              #     Root    Patched      Updated")
"RTN","ICD1857",263,0)
 . D M(("       "_ICDNM_ICDFI_ICDRT_ICDPT_ICDDT))
"RTN","ICD1857",264,0)
 D BM("     Data:") I '$D(^ICD9(3066,"DRG"))&('$D(^ICD9(11938,66,3,"DRG")))&($L($G(^ICD9(3066,0)),"^")'>1) S ICDATA(80,9)="No "
"RTN","ICD1857",265,0)
 I $D(^ICD9(3066,"DRG"))!($D(^ICD9(11938,66,3,"DRG")))!($L($G(^ICD9(3066,0)),"^")>1) S ICDGBL(1)="",ICDATA(80,9)="Yes"
"RTN","ICD1857",266,0)
 I '$D(^ICD9(3066,7,1,0)) S ICDGBL(2)="",ICDATA(80,10)="No "
"RTN","ICD1857",267,0)
 I $D(^ICD9(3066,7,1,0)) S ICDATA(80,10)="Yes"
"RTN","ICD1857",268,0)
 I '$D(^ICD0(366,"MDC"))&($L($G(^ICD0(1535,0)),"^")'>1) S ICDATA(80.1,9)="No "
"RTN","ICD1857",269,0)
 I $D(^ICD0(366,"MDC"))!($L($G(^ICD0(1535,0)),"^")>1) S ICDGBL(1)="",ICDATA(80.1,9)="Yes"
"RTN","ICD1857",270,0)
 I '$D(^ICD0(1548,3,1,0))&($L($G(^ICD0(1548,1)),"^")'>1) S ICDGBL(2)="",ICDATA(80.1,10)="No "
"RTN","ICD1857",271,0)
 I $D(^ICD0(1548,3,1,0))&($L($G(^ICD0(1548,1)),"^")>1) S ICDATA(80.1,10)="Yes"
"RTN","ICD1857",272,0)
 S ICDX="       ",ICDX=ICDX_$J(" ",(32-$L(ICDX)))_"Legacy ICD-9"
"RTN","ICD1857",273,0)
 S ICDX=ICDX_$J(" ",(50-$L(ICDX)))_"Updated ICD-10" D M(ICDX)
"RTN","ICD1857",274,0)
 S ICDX="       Data Type         ",ICDX=ICDX_$J(" ",(32-$L(ICDX)))_"Data Format"
"RTN","ICD1857",275,0)
 S ICDX=ICDX_$J(" ",(50-$L(ICDX)))_"Data Format" D M(ICDX)
"RTN","ICD1857",276,0)
 S ICDX="       ICD Diagnosis Data",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_$G(ICDATA(80,9))
"RTN","ICD1857",277,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_$G(ICDATA(80,10)) D M(ICDX)
"RTN","ICD1857",278,0)
 S ICDX="       ICD Procedure Data",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_$G(ICDATA(80.1,9))
"RTN","ICD1857",279,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_$G(ICDATA(80.1,10)) D M(ICDX)
"RTN","ICD1857",280,0)
 Q
"RTN","ICD1857",281,0)
M(X) ;   Blank/Text
"RTN","ICD1857",282,0)
 D MES^XPDUTL($G(X)) Q
"RTN","ICD1857",283,0)
BM(X) ;   Blank/Text
"RTN","ICD1857",284,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","ICD1857",285,0)
TRIM(X) ;   Trim Spaces
"RTN","ICD1857",286,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICD1857",287,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ICD1857",288,0)
 Q X
"RTN","ICD1857P")
0^64^B10496780
"RTN","ICD1857P",1,0)
ICD1857P ;ISL/KER - ICD*18.0*57 Pre/Post-Install ;04/21/2014
"RTN","ICD1857P",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICD1857P",3,0)
 ;               
"RTN","ICD1857P",4,0)
 ;               
"RTN","ICD1857P",5,0)
 ; Global Variables
"RTN","ICD1857P",6,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","ICD1857P",7,0)
 ;    ^%ZOSF("UCICHECK")  ICR  10096
"RTN","ICD1857P",8,0)
 ;    ^TMP("LEX*2.0*80"   SACC 2.3.2.5.1
"RTN","ICD1857P",9,0)
 ;               
"RTN","ICD1857P",10,0)
 ; External References
"RTN","ICD1857P",11,0)
 ;    $$VERSION^%ZOSV     ICR  10097
"RTN","ICD1857P",12,0)
 ;    FIELD^DID           ICR   2052
"RTN","ICD1857P",13,0)
 ;    EN^DIU2             ICR  10014
"RTN","ICD1857P",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICD1857P",15,0)
 ;    $$NETNAME^XMXUTIL   ICR   2734
"RTN","ICD1857P",16,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","ICD1857P",17,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","ICD1857P",18,0)
 ;               
"RTN","ICD1857P",19,0)
 ; Local Variables NEWed or KILLed by KIDS
"RTN","ICD1857P",20,0)
 ;     XPDNOQUE
"RTN","ICD1857P",21,0)
 ;     
"RTN","ICD1857P",22,0)
 ; SACC Exemption
"RTN","ICD1857P",23,0)
 ; 
"RTN","ICD1857P",24,0)
 ;    $ZU(68,28,n)        May 9, 2013
"RTN","ICD1857P",25,0)
 ;                        
"RTN","ICD1857P",26,0)
 ;    Clinical Lexicon requests an exemption to use $ZU in
"RTN","ICD1857P",27,0)
 ;    the pre and post install routines for future LEX 
"RTN","ICD1857P",28,0)
 ;    patches. This exemption will expire with the release 
"RTN","ICD1857P",29,0)
 ;    of LEX 3.0. Calling $ZU(68,28,0) to enable an 
"RTN","ICD1857P",30,0)
 ;    unsubscripted global kill prior to installing the 
"RTN","ICD1857P",31,0)
 ;    latest ICD files leaves the possibility that a global
"RTN","ICD1857P",32,0)
 ;    will be killed by another process during a lengthy 
"RTN","ICD1857P",33,0)
 ;    installation. Placing the call in the pre (or post) 
"RTN","ICD1857P",34,0)
 ;    install, instead of making the call manually before 
"RTN","ICD1857P",35,0)
 ;    and after the install, cuts this window down to a 
"RTN","ICD1857P",36,0)
 ;    few seconds.
"RTN","ICD1857P",37,0)
 ;             
"RTN","ICD1857P",38,0)
 Q
"RTN","ICD1857P",39,0)
PRE ; ICD*18.0*57 Pre-Install
"RTN","ICD1857P",40,0)
 S XPDNOQUE=1 I $D(ZTQUEUED) S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1 Q
"RTN","ICD1857P",41,0)
 Q:+($$UOK)'>0  D DEL
"RTN","ICD1857P",42,0)
 Q
"RTN","ICD1857P",43,0)
POST ; ICD*18.0*57 Post-Install
"RTN","ICD1857P",44,0)
 S XPDNOQUE=1 I $D(ZTQUEUED) S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1 Q
"RTN","ICD1857P",45,0)
 D N0
"RTN","ICD1857P",46,0)
 Q
"RTN","ICD1857P",47,0)
 ;
"RTN","ICD1857P",48,0)
 ; Miscellaneous
"RTN","ICD1857P",49,0)
N0 ;   Node 0
"RTN","ICD1857P",50,0)
 D BM(" Updating ICD files")
"RTN","ICD1857P",51,0)
 N ICD0,ICD9,ICDI,ICDL,ICDM,ICDT
"RTN","ICD1857P",52,0)
 K ICD9,ICDM D FIELD^DID(80,.01,,"LABEL","ICD9","ICDM")
"RTN","ICD1857P",53,0)
 K ICD0,ICDM D FIELD^DID(80.1,.01,,"LABEL","ICD0","ICDM")
"RTN","ICD1857P",54,0)
 D M("    ICD DIAGNOSIS              file #80")
"RTN","ICD1857P",55,0)
 I $L($G(ICD9("LABEL"))),('$D(^ICD9(0))) D
"RTN","ICD1857P",56,0)
 . N ICDL,ICDT,ICDI S ICDL="",ICDT=0,ICDI=0
"RTN","ICD1857P",57,0)
 . F  S ICDI=$O(^ICD9(ICDI)) Q:+ICDI'>0  S ICDL=ICDI,ICDT=ICDT+1
"RTN","ICD1857P",58,0)
 . S ^ICD9(0)="ICD DIAGNOSIS^80OI^"_ICDL_"^"_ICDT
"RTN","ICD1857P",59,0)
 D M("    ICD OPERATION/PROCEDURE    file #80.1")
"RTN","ICD1857P",60,0)
 I $L($G(ICD0("LABEL"))),('$D(^ICD0(0))) D
"RTN","ICD1857P",61,0)
 . N ICDL,ICDT,ICDI S ICDL="",ICDT=0,ICDI=0
"RTN","ICD1857P",62,0)
 . F  S ICDI=$O(^ICD0(ICDI)) Q:+ICDI'>0  S ICDL=ICDI,ICDT=ICDT+1
"RTN","ICD1857P",63,0)
 . S ^ICD0(0)="ICD OPERATION/PROCEDURE^80.1OI^"_ICDL_"^"_ICDT
"RTN","ICD1857P",64,0)
 Q
"RTN","ICD1857P",65,0)
UOK(X) ;   UCI Ok for Install
"RTN","ICD1857P",66,0)
 N X,Y S X=$$NETNAME^XMXUTIL(.5) Q:X["LEXDEV1.FO-BAYPINES" 0
"RTN","ICD1857P",67,0)
 X ^%ZOSF("UCI") Q:$G(Y)["LEXDEV1" 0  S X="LEXDEV1" X ^%ZOSF("UCICHECK")  Q:$G(X)=$G(Y) 0
"RTN","ICD1857P",68,0)
 Q 1
"RTN","ICD1857P",69,0)
DEL ;   Delete ICD Data Dictionaries and Globals
"RTN","ICD1857P",70,0)
 Q:+($$UOK)'>0  N DIU,ICDMUM S ICDMUM=$$UP^XLFSTR($$VERSION^%ZOSV(1))
"RTN","ICD1857P",71,0)
 D BM("   Deleting the Data Dictionary and Data for:")
"RTN","ICD1857P",72,0)
 D M("       ICD DIAGNOSIS file #80") H 1
"RTN","ICD1857P",73,0)
 S DIU="^ICD9(",DIU(0)=$S($D(^TMP("LEX*2.0*80",$J,"NODATA")):"T",1:"DT")
"RTN","ICD1857P",74,0)
 S:ICDMUM["CACHE" X=$ZU(68,28,0) D EN^DIU2 S:ICDMUM["CACHE" X=$ZU(68,28,1) W "  done"
"RTN","ICD1857P",75,0)
 D M("       ICD OPERATION/PROCEDURE file #80.1") H 1
"RTN","ICD1857P",76,0)
 S DIU="^ICD0(",DIU(0)=$S($D(^TMP("LEX*2.0*80",$J,"NODATA")):"T",1:"DT")
"RTN","ICD1857P",77,0)
 S:ICDMUM["CACHE" X=$ZU(68,28,0) D EN^DIU2 S:ICDMUM["CACHE" X=$ZU(68,28,1) W "  done"
"RTN","ICD1857P",78,0)
 Q
"RTN","ICD1857P",79,0)
M(X) ;   Blank/Text
"RTN","ICD1857P",80,0)
 D MES^XPDUTL($G(X)) Q
"RTN","ICD1857P",81,0)
BM(X) ;   Blank/Text
"RTN","ICD1857P",82,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","ICD1857P",83,0)
TRIM(X) ;   Trim Spaces
"RTN","ICD1857P",84,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICD1857P",85,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ICD1857P",86,0)
 Q X
"RTN","ICD1857P",87,0)
CLR ;   Clear Variables not NEWed
"RTN","ICD1857P",88,0)
 N ZTQUEUED,XPDABORT,XPDQUIT,XPDQUIT
"RTN","ICD1857P",89,0)
 Q
"RTN","ICD9IDX")
1^28
"RTN","ICDAPIU")
0^47^B1779997
"RTN","ICDAPIU",1,0)
ICDAPIU ;DLS/DEK/KER - ICD UTILITIES FOR APIS ;04/21/2014
"RTN","ICDAPIU",2,0)
 ;;18.0;DRG Grouper;**6,11,12,15,57**;Oct 20, 2000;Build 1
"RTN","ICDAPIU",3,0)
 ;               
"RTN","ICDAPIU",4,0)
 ; Global Variables
"RTN","ICDAPIU",5,0)
 ;    None
"RTN","ICDAPIU",6,0)
 ;               
"RTN","ICDAPIU",7,0)
 ; External References
"RTN","ICDAPIU",8,0)
 ;    None
"RTN","ICDAPIU",9,0)
 ;               
"RTN","ICDAPIU",10,0)
 Q
"RTN","ICDAPIU",11,0)
EN ; Main Entry Point
"RTN","ICDAPIU",12,0)
HELP ; Developer Help for an API
"RTN","ICDAPIU",13,0)
 D HLP^ICDEXH("LEG") Q
"RTN","ICDAPIU",14,0)
 ;
"RTN","ICDAPIU",15,0)
DTBR(CDT,CS) ; Date Business Rules
"RTN","ICDAPIU",16,0)
 ;
"RTN","ICDAPIU",17,0)
 ; Input:   
"RTN","ICDAPIU",18,0)
 ; 
"RTN","ICDAPIU",19,0)
 ;     CDT   Code Date to check default TODAY
"RTN","ICDAPIU",20,0)
 ;     CS    Code System (Default 0 = ICD)
"RTN","ICDAPIU",21,0)
 ;     
"RTN","ICDAPIU",22,0)
 ; Output:  
"RTN","ICDAPIU",23,0)
 ; 
"RTN","ICDAPIU",24,0)
 ;     If CDT < ICD-9 Date and CS=0, use ICD-9 Date
"RTN","ICDAPIU",25,0)
 ;     If CDT < 2890101 and CS=1, use 2890101
"RTN","ICDAPIU",26,0)
 ;     If CDT < 2821001 and CS=2, use 2821001
"RTN","ICDAPIU",27,0)
 ;     If CDT is year only, use first of the year
"RTN","ICDAPIU",28,0)
 ;     If CDT is year and month only, use first of the month
"RTN","ICDAPIU",29,0)
 ;     
"RTN","ICDAPIU",30,0)
 Q $$DTBR^ICDEX($G(CDT),$G(CS))
"RTN","ICDAPIU",31,0)
MSG(CDT,CS) ; Inform of code text inaccuracy
"RTN","ICDAPIU",32,0)
 ;
"RTN","ICDAPIU",33,0)
 ; Input:   
"RTN","ICDAPIU",34,0)
 ; 
"RTN","ICDAPIU",35,0)
 ;     CDT   Code Date to check (FileMan format, Default = today)
"RTN","ICDAPIU",36,0)
 ;     CS    Code System (0:ICD, 1:CPT/HCPCS, 2:DRG, 3:LEX, Default=0)
"RTN","ICDAPIU",37,0)
 ;          
"RTN","ICDAPIU",38,0)
 ; Output:  
"RTN","ICDAPIU",39,0)
 ; 
"RTN","ICDAPIU",40,0)
 ;     User Alert
"RTN","ICDAPIU",41,0)
 ;     
"RTN","ICDAPIU",42,0)
 Q $$MSG^ICDEX($G(CDT),$G(CS))
"RTN","ICDAPIU",43,0)
STATCHK(CODE,CDT) ; Check Status of ICD Code
"RTN","ICDAPIU",44,0)
 ;
"RTN","ICDAPIU",45,0)
 ; Input:
"RTN","ICDAPIU",46,0)
 ; 
"RTN","ICDAPIU",47,0)
 ;     CODE  ICD Code
"RTN","ICDAPIU",48,0)
 ;     CDT   Date to screen against
"RTN","ICDAPIU",49,0)
 ;     
"RTN","ICDAPIU",50,0)
 ; Output:
"RTN","ICDAPIU",51,0)
 ; 
"RTN","ICDAPIU",52,0)
 ;     3-Piece String containing Status, IEN and Effective Date
"RTN","ICDAPIU",53,0)
 ;     
"RTN","ICDAPIU",54,0)
 Q $$STATCHK^ICDEX($G(CODE),$G(CDT))
"RTN","ICDAPIU",55,0)
NEXT(CODE) ; Next ICD Code (active or inactive)
"RTN","ICDAPIU",56,0)
 ;
"RTN","ICDAPIU",57,0)
 ; Input:
"RTN","ICDAPIU",58,0)
 ; 
"RTN","ICDAPIU",59,0)
 ;     CODE  ICD Code   REQUIRED
"RTN","ICDAPIU",60,0)
 ;     
"RTN","ICDAPIU",61,0)
 ; Output:  
"RTN","ICDAPIU",62,0)
 ; 
"RTN","ICDAPIU",63,0)
 ;     The Next ICD Code, Null if none
"RTN","ICDAPIU",64,0)
 ;     
"RTN","ICDAPIU",65,0)
 Q $$NEXT^ICDEX($G(CODE))
"RTN","ICDAPIU",66,0)
PREV(CODE) ; Previous ICD Code (active or inactive)
"RTN","ICDAPIU",67,0)
 ;
"RTN","ICDAPIU",68,0)
 ; Input:
"RTN","ICDAPIU",69,0)
 ; 
"RTN","ICDAPIU",70,0)
 ;     CODE   ICD Code   REQUIRED
"RTN","ICDAPIU",71,0)
 ;     
"RTN","ICDAPIU",72,0)
 ; Output:
"RTN","ICDAPIU",73,0)
 ; 
"RTN","ICDAPIU",74,0)
 ;     The Previous ICD Code, Null if none
"RTN","ICDAPIU",75,0)
 ;     
"RTN","ICDAPIU",76,0)
 Q $$PREV^ICDEX($G(CODE))
"RTN","ICDAPIU",77,0)
 ;
"RTN","ICDAPIU",78,0)
HIST(CODE,ARY)  ; Activation History
"RTN","ICDAPIU",79,0)
 ;
"RTN","ICDAPIU",80,0)
 ; Input:
"RTN","ICDAPIU",81,0)
 ; 
"RTN","ICDAPIU",82,0)
 ;     CODE   ICD Code                     REQUIRED
"RTN","ICDAPIU",83,0)
 ;    .ARY    Array, passed by Reference   REQUIRED
"RTN","ICDAPIU",84,0)
 ;   
"RTN","ICDAPIU",85,0)
 ; Output:
"RTN","ICDAPIU",86,0)
 ; 
"RTN","ICDAPIU",87,0)
 ;     Mirrors ARY(0) (or, -1 on error)
"RTN","ICDAPIU",88,0)
 ;     ARY(0) = Number of Activation History Entries
"RTN","ICDAPIU",89,0)
 ;     ARY(<date>) = status    where: 1 is Active
"RTN","ICDAPIU",90,0)
 ;     ARY("IEN") = <ien>
"RTN","ICDAPIU",91,0)
 ;     
"RTN","ICDAPIU",92,0)
 Q $$HIST^ICDEX($G(CODE),.ARY)
"RTN","ICDAPIU",93,0)
PERIOD(CODE,ARY) ; Return Activation/Inactivation Period in ARY
"RTN","ICDAPIU",94,0)
 ;
"RTN","ICDAPIU",95,0)
 ; Input:
"RTN","ICDAPIU",96,0)
 ; 
"RTN","ICDAPIU",97,0)
 ;     CODE  ICD Code (required)
"RTN","ICDAPIU",98,0)
 ;     ARY   Array, passed by Reference (required)
"RTN","ICDAPIU",99,0)
 ;     
"RTN","ICDAPIU",100,0)
 ; Output:
"RTN","ICDAPIU",101,0)
 ; 
"RTN","ICDAPIU",102,0)
 ;     ARY(0) = IEN ^ Selectable ^ Error Message
"RTN","ICDAPIU",103,0)
 ;          
"RTN","ICDAPIU",104,0)
 ;       Where IEN = -1 if error
"RTN","ICDAPIU",105,0)
 ;       Selectable = 0 for unselectable
"RTN","ICDAPIU",106,0)
 ;       Error Message if applicable
"RTN","ICDAPIU",107,0)
 ;            
"RTN","ICDAPIU",108,0)
 ;     ARY(Activation Date) = Inactivation Date^Short Name
"RTN","ICDAPIU",109,0)
 ;
"RTN","ICDAPIU",110,0)
 ;       Where the Short Name is versioned as follows:
"RTN","ICDAPIU",111,0)
 ;
"RTN","ICDAPIU",112,0)
 ;       Period is active   - Text for TODAY's date
"RTN","ICDAPIU",113,0)
 ;       Period is inactive - Text for inactivation date
"RTN","ICDAPIU",114,0)
 ;     
"RTN","ICDAPIU",115,0)
 N X S X=$$PERIOD^ICDEX($G(CODE),.ARY) Q
"RTN","ICDCOD")
0^69^B5702581
"RTN","ICDCOD",1,0)
ICDCOD ;ALB/ABR/ADL - Inquire to ICD Codes ;04/21/2014
"RTN","ICDCOD",2,0)
 ;;18.0;DRG Grouper;**7,57**;Oct 20, 2000;Build 1
"RTN","ICDCOD",3,0)
 ;               
"RTN","ICDCOD",4,0)
 ; Global Variables
"RTN","ICDCOD",5,0)
 ;    None
"RTN","ICDCOD",6,0)
 ;               
"RTN","ICDCOD",7,0)
 ; External References
"RTN","ICDCOD",8,0)
 ;    DD^%DT              ICR  10003
"RTN","ICDCOD",9,0)
 ;    EN^DIQ1             ICR  10015
"RTN","ICDCOD",10,0)
 ;    ^DIR                ICR  10026
"RTN","ICDCOD",11,0)
 ;               
"RTN","ICDCOD",12,0)
 ;This routine allows entry of an ICD9 or ICD0 code, and returns the description.
"RTN","ICDCOD",13,0)
 ;It also alerts the user if it is an inactive code.
"RTN","ICDCOD",14,0)
 ;
"RTN","ICDCOD",15,0)
EN ;
"RTN","ICDCOD",16,0)
 N DIRUT,DTOUT,DUOUT,DIR,DIC,DA,DR,DIQ,X,Y,ICDTMP
"RTN","ICDCOD",17,0)
DATE D EFFDATE^ICDDRGM G EXIT:$D(DUOUT),EXIT:$D(DTOUT)
"RTN","ICDCOD",18,0)
 F  S DIR(0)="SO^1:ICD DIAGNOSIS CODE;2:ICD OPERATION/PROCEDURE CODE" D ^DIR Q:Y<0!$D(DIRUT)  D @Y  Q:$D(DTOUT)
"RTN","ICDCOD",19,0)
 G DATE
"RTN","ICDCOD",20,0)
 ;
"RTN","ICDCOD",21,0)
1 ;ICD DIAGNOSIS CODE
"RTN","ICDCOD",22,0)
 S DIR(0)="PO^80:QAEMI"
"RTN","ICDCOD",23,0)
 F  W !! S DIR("S")="I $$CSI^ICDEX(80,+Y)=1" D ^DIR K DIR("S") Q:Y<0!$D(DIRUT)  D
"RTN","ICDCOD",24,0)
 . N ICDASK S DIC=$$ROOT^ICDEX(80),DA=+Y,DR=".01;1.1",DIQ(0)="ENI",DIQ="ICDASK" D EN^DIQ1
"RTN","ICDCOD",25,0)
 . S ICDTMP=$$ICDDX^ICDCODE(+DA,ICDDATE)
"RTN","ICDCOD",26,0)
 . W !!,ICDASK(80,DA,.01,"E"),?15,$P(ICDTMP,"^",4)
"RTN","ICDCOD",27,0)
 . W !,$$VLT^ICDEX(80,+DA,ICDDATE),"     ",$P(ICDTMP,U,18),!  ;add printing of descript disclaimer msg
"RTN","ICDCOD",28,0)
 . I '$P(ICDTMP,U,10) W "   **CODE INACTIVE" I $P(ICDTMP,U,12)'="" S Y=$P(ICDTMP,U,12) D DD^%DT W " AS OF   ",Y," **",!
"RTN","ICDCOD",29,0)
 Q
"RTN","ICDCOD",30,0)
 ;
"RTN","ICDCOD",31,0)
2 ;ICD OPERATION/PROCEDURE
"RTN","ICDCOD",32,0)
 S DIR(0)="PO^80.1:QAEMI"
"RTN","ICDCOD",33,0)
 F  W !! S DIR("S")="I $$CSI^ICDEX(80.1,+Y)=2" D ^DIR K DIR("S") Q:Y<0!$D(DIRUT)  D
"RTN","ICDCOD",34,0)
 . N ICDASK S DIC=$$ROOT^ICDEX(80.1),DA=+Y,DR=".01;1.1",DIQ(0)="ENI",DIQ="ICDASK" D EN^DIQ1
"RTN","ICDCOD",35,0)
 . S ICDTMP=$$ICDOP^ICDCODE(+DA,ICDDATE)
"RTN","ICDCOD",36,0)
 . W !!,ICDASK(80.1,DA,.01,"E"),?15,$P(ICDTMP,"^",5)
"RTN","ICDCOD",37,0)
 . W !,$$VLT^ICDEX(80.1,+DA,ICDDATE),"     ",$P(ICDTMP,U,14),!  ;add printing of descript disclaimer msg
"RTN","ICDCOD",38,0)
 . I '$P(ICDTMP,U,10) W "   **CODE INACTIVE" I $P(ICDTMP,U,12)'="" S Y=$P(ICDTMP,U,12) D DD^%DT W " AS OF   ",Y," **",!
"RTN","ICDCOD",39,0)
 Q
"RTN","ICDCOD",40,0)
EXIT Q  ;Exit subroutine
"RTN","ICDCOD",41,0)
INA ; Inquire
"RTN","ICDCOD",42,0)
 D INQ^ICDEX
"RTN","ICDCOD",43,0)
 Q
"RTN","ICDCODE")
0^46^B17241457
"RTN","ICDCODE",1,0)
ICDCODE ;DLS/DEK/KER/FJF - ICD CODE APIS ;04/21/2014
"RTN","ICDCODE",2,0)
 ;;18.0;DRG Grouper;**6,12,14,29,57**;Oct 20, 2000;Build 1
"RTN","ICDCODE",3,0)
 ;               
"RTN","ICDCODE",4,0)
 ; Global Variables
"RTN","ICDCODE",5,0)
 ;    ^TMP("ICDD")        SACC 2.3.2.5.1
"RTN","ICDCODE",6,0)
 ;               
"RTN","ICDCODE",7,0)
 ; External References
"RTN","ICDCODE",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDCODE",9,0)
 ;               
"RTN","ICDCODE",10,0)
EN ; Main Entry Point
"RTN","ICDCODE",11,0)
HELP ; Developer Help for an API
"RTN","ICDCODE",12,0)
 D HLP^ICDEXH("LEG") Q
"RTN","ICDCODE",13,0)
 ;
"RTN","ICDCODE",14,0)
ICDDX(CODE,CDT,DFN,SRC) ; Return ICD Dx Code Info
"RTN","ICDCODE",15,0)
 ;
"RTN","ICDCODE",16,0)
 ; Input:
"RTN","ICDCODE",17,0)
 ;
"RTN","ICDCODE",18,0)
 ;     CODE  Code/IEN (required)
"RTN","ICDCODE",19,0)
 ;     CDT   Date (default = TODAY)
"RTN","ICDCODE",20,0)
 ;     DFN   Not in use
"RTN","ICDCODE",21,0)
 ;     SRC   Source
"RTN","ICDCODE",22,0)
 ;             0 = exclude local codes
"RTN","ICDCODE",23,0)
 ;             1 = include local codes
"RTN","ICDCODE",24,0)
 ;
"RTN","ICDCODE",25,0)
 ; Output:
"RTN","ICDCODE",26,0)
 ;
"RTN","ICDCODE",27,0)
 ;     Returns an 19 piece string delimited by ^
"RTN","ICDCODE",28,0)
 ;  
"RTN","ICDCODE",29,0)
 ;      1  IEN of code in file 80
"RTN","ICDCODE",30,0)
 ;      2  ICD-9 Dx Code (#.01)
"RTN","ICDCODE",31,0)
 ;      3  Id (#2)
"RTN","ICDCODE",32,0)
 ;      4  Versioned Dx (67 multiple)
"RTN","ICDCODE",33,0)
 ;      5  Unacceptable as Principal Dx (#101)
"RTN","ICDCODE",34,0)
 ;      6  Major Dx Cat (#5)
"RTN","ICDCODE",35,0)
 ;      7  MDC13 (5.5)
"RTN","ICDCODE",36,0)
 ;      8  Compl/Comorb (#70)
"RTN","ICDCODE",37,0)
 ;      9  ICD Expanded (#8) 1:Yes 0:No
"RTN","ICDCODE",38,0)
 ;     10  Status (66 multiple)
"RTN","ICDCODE",39,0)
 ;     11  Sex (#9.5)
"RTN","ICDCODE",40,0)
 ;     12  Inactive Date (66 multiple)
"RTN","ICDCODE",41,0)
 ;     13  MDC24 (#5.7)
"RTN","ICDCODE",42,0)
 ;     14  MDC25 (#5.9)
"RTN","ICDCODE",43,0)
 ;     15  Age Low (#14)
"RTN","ICDCODE",44,0)
 ;     16  Age High (#15)
"RTN","ICDCODE",45,0)
 ;     17  Activation Date (.01 of 66 multiple)
"RTN","ICDCODE",46,0)
 ;     18  Message
"RTN","ICDCODE",47,0)
 ;     19  Versioned Complication/Comorbidity (#103)
"RTN","ICDCODE",48,0)
 ;
"RTN","ICDCODE",49,0)
 ;       or
"RTN","ICDCODE",50,0)
 ;
"RTN","ICDCODE",51,0)
 ;     -1^Error Description
"RTN","ICDCODE",52,0)
 ;
"RTN","ICDCODE",53,0)
 N X S X=$$ICDDX^ICDEX($S($G(CODE)?1N.N:$$CODEC^ICDEX(80,$G(CODE)),1:$G(CODE)),$G(CDT),1,,$G(SRC))
"RTN","ICDCODE",54,0)
 S $P(X,"^",3)=$TR($P(X,"^",3),";","")
"RTN","ICDCODE",55,0)
 Q X
"RTN","ICDCODE",56,0)
ICDOP(CODE,CDT,DFN,SRC) ; Return ICD Operation/Procedure Code Info
"RTN","ICDCODE",57,0)
 ;
"RTN","ICDCODE",58,0)
 ; Input:
"RTN","ICDCODE",59,0)
 ; 
"RTN","ICDCODE",60,0)
 ;     CODE  ICD code or IEN format, (required)
"RTN","ICDCODE",61,0)
 ;      CDT  Date (default = TODAY)
"RTN","ICDCODE",62,0)
 ;      DFN  Not in use
"RTN","ICDCODE",63,0)
 ;      SRC  Source
"RTN","ICDCODE",64,0)
 ;             0 = exclude local codes
"RTN","ICDCODE",65,0)
 ;             1 = include local codes
"RTN","ICDCODE",66,0)
 ;
"RTN","ICDCODE",67,0)
 ; Output:
"RTN","ICDCODE",68,0)
 ; 
"RTN","ICDCODE",69,0)
 ;     Returns an 14 piece string delimited by ^
"RTN","ICDCODE",70,0)
 ;     
"RTN","ICDCODE",71,0)
 ;      1  IEN of code in file 80.1
"RTN","ICDCODE",72,0)
 ;      2  ICD-9 code (#.01)
"RTN","ICDCODE",73,0)
 ;      3  Id (#2)
"RTN","ICDCODE",74,0)
 ;      4  MDC24 (#5)
"RTN","ICDCODE",75,0)
 ;      5  Versioned Oper/Proc (67 multiple)
"RTN","ICDCODE",76,0)
 ;      6  <null>
"RTN","ICDCODE",77,0)
 ;      7  <null>
"RTN","ICDCODE",78,0)
 ;      8  <null>
"RTN","ICDCODE",79,0)
 ;      9  ICD Expanded (#8) 1:Yes 0:No
"RTN","ICDCODE",80,0)
 ;     10  Status (66 multiple)
"RTN","ICDCODE",81,0)
 ;     11  Use with Sex (#9.5)
"RTN","ICDCODE",82,0)
 ;     12  Inactive Date (66 multiple)
"RTN","ICDCODE",83,0)
 ;     13  Activation Date (66 multiple)
"RTN","ICDCODE",84,0)
 ;     14  Message
"RTN","ICDCODE",85,0)
 ;
"RTN","ICDCODE",86,0)
 ;       or
"RTN","ICDCODE",87,0)
 ;
"RTN","ICDCODE",88,0)
 ;     -1^Error Description
"RTN","ICDCODE",89,0)
 ;
"RTN","ICDCODE",90,0)
 N X S X=$$ICDOP^ICDEX($S($G(CODE)?1N.N:$$CODEC^ICDEX(80.1,$G(CODE)),1:$G(CODE)),$G(CDT),2,,$G(SRC))
"RTN","ICDCODE",91,0)
 S $P(X,"^",3)=$TR($P(X,"^",3),";","")
"RTN","ICDCODE",92,0)
 Q X
"RTN","ICDCODE",93,0)
ICDD(CODE,OUTARR,CDT) ; returns ICD description in array
"RTN","ICDCODE",94,0)
 ;
"RTN","ICDCODE",95,0)
 ; Input:
"RTN","ICDCODE",96,0)
 ;
"RTN","ICDCODE",97,0)
 ;     CODE   ICD Code (required)
"RTN","ICDCODE",98,0)
 ;     ARY    Array Name for description
"RTN","ICDCODE",99,0)
 ;            e.g. "ABC" or "ABC("TEST")"
"RTN","ICDCODE",100,0)
 ;            Default = ^TMP("ICDD",$J)
"RTN","ICDCODE",101,0)
 ;     CDT    Date (default = TODAY)
"RTN","ICDCODE",102,0)
 ;
"RTN","ICDCODE",103,0)
 ; Output:
"RTN","ICDCODE",104,0)
 ;
"RTN","ICDCODE",105,0)
 ;     #   Number of lines in array
"RTN","ICDCODE",106,0)
 ;
"RTN","ICDCODE",107,0)
 ;     @ARY(1:n) - Versioned Description (68 multiple)
"RTN","ICDCODE",108,0)
 ;     @ARY(n+1) - blank
"RTN","ICDCODE",109,0)
 ;     @ARY(n+1) - message: CODE TEXT MAY BE INACCURATE
"RTN","ICDCODE",110,0)
 ;
"RTN","ICDCODE",111,0)
 ;       or
"RTN","ICDCODE",112,0)
 ;
"RTN","ICDCODE",113,0)
 ;     -1^Error Description
"RTN","ICDCODE",114,0)
 ;
"RTN","ICDCODE",115,0)
 ;     ** NOTE - USER MUST INITIALIZE ^TMP("ICDD",$J), IF USED **
"RTN","ICDCODE",116,0)
 ;
"RTN","ICDCODE",117,0)
 N ICDDXOUT,ICDDXARY,END,ICDDXI,ICDDXC
"RTN","ICDCODE",118,0)
 S ICDDXOUT=$$ICDD^ICDEX($G(CODE),.ICDDXARY,$G(CDT))
"RTN","ICDCODE",119,0)
 Q:ICDDXOUT["-1^Invalid" "-1^Invalid code"
"RTN","ICDCODE",120,0)
 Q:ICDDXOUT["-1^" ICDDXOUT
"RTN","ICDCODE",121,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""ICDD"",$J,"
"RTN","ICDCODE",122,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICDCODE",123,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICDCODE",124,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICDCODE",125,0)
 I OUTARR="^TMP(""ICDD"",$J," K ^TMP("ICDD",$J)
"RTN","ICDCODE",126,0)
 S (ICDDXI,ICDDXC)=0 F  S ICDDXI=$O(ICDDXARY(ICDDXI)) Q:+ICDDXI'>0  D
"RTN","ICDCODE",127,0)
 . N ARR S ARR=OUTARR_ICDDXI_")",@ARR=$G(ICDDXARY(ICDDXI)),ICDDXC=ICDDXC+1
"RTN","ICDCODE",128,0)
 Q ICDDXC
"RTN","ICDCODE",129,0)
CODEN(CODE,FILE) ; return ien of ICD code
"RTN","ICDCODE",130,0)
 ;
"RTN","ICDCODE",131,0)
 ; Input:
"RTN","ICDCODE",132,0)
 ; 
"RTN","ICDCODE",133,0)
 ;     CODE   ICD code (required)
"RTN","ICDCODE",134,0)
 ;     FILE   File Number to search for code
"RTN","ICDCODE",135,0)
 ;               80 = ICD Dx file
"RTN","ICDCODE",136,0)
 ;               80.1 = ICD Oper/Proc file
"RTN","ICDCODE",137,0)
 ;
"RTN","ICDCODE",138,0)
 ; Output:
"RTN","ICDCODE",139,0)
 ; 
"RTN","ICDCODE",140,0)
 ;     IEN~global root
"RTN","ICDCODE",141,0)
 ;       or
"RTN","ICDCODE",142,0)
 ;     -1~error message
"RTN","ICDCODE",143,0)
 ;
"RTN","ICDCODE",144,0)
 N X S X=$$CODEN^ICDEX($G(CODE),$G(FILE))
"RTN","ICDCODE",145,0)
 Q:X["-1~Invalid" "-1~Invalid code"
"RTN","ICDCODE",146,0)
 Q X
"RTN","ICDCODE",147,0)
CODEC(IEN,FILE) ;return the ICD code of an ien
"RTN","ICDCODE",148,0)
 ;Input:
"RTN","ICDCODE",149,0)
 ;  IEN    IEN of ICD code    REQUIRED
"RTN","ICDCODE",150,0)
 ;  FILE   File Number to search for code
"RTN","ICDCODE",151,0)
 ;         80 = ICD Dx file
"RTN","ICDCODE",152,0)
 ;         80.1 = ICD Oper/Proc file
"RTN","ICDCODE",153,0)
 ;
"RTN","ICDCODE",154,0)
 ;Output: ICD code, -1 if not found
"RTN","ICDCODE",155,0)
 ;
"RTN","ICDCODE",156,0)
 S:+($G(FILE))'>0 FILE=80
"RTN","ICDCODE",157,0)
 Q $$CODEC^ICDEX($G(FILE),$G(IEN))
"RTN","ICDCODE",158,0)
CODEZ(CODE,ROOT,FLG) ; Based on IEN/root:
"RTN","ICDCODE",159,0)
 N Y,ICDL            ; if 'FLG return code existence, else zero node - piece 1
"RTN","ICDCODE",160,0)
 S Y=$P($G(@(ROOT_CODE_",0)")),U),ICDL=$L(Y) I ICDL,'$G(FLG) Q CODE
"RTN","ICDCODE",161,0)
 Q $S('ICDL:-1,1:Y)
"RTN","ICDCODE",162,0)
CODEBA(CODE,ROOT) ; Return IEN based on code/root
"RTN","ICDCODE",163,0)
 ;
"RTN","ICDCODE",164,0)
 ; Input:
"RTN","ICDCODE",165,0)
 ;
"RTN","ICDCODE",166,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDCODE",167,0)
 ;   ROOT  File Root or Number (required)
"RTN","ICDCODE",168,0)
 ;
"RTN","ICDCODE",169,0)
 ; Output:
"RTN","ICDCODE",170,0)
 ; 
"RTN","ICDCODE",171,0)
 ;   IEN   IEN for CODE in ROOT or -1 if not found
"RTN","ICDCODE",172,0)
 ;   
"RTN","ICDCODE",173,0)
 Q $$CODEBA^ICDEX($G(CODE),$G(ROOT))
"RTN","ICDCODE",174,0)
COMCOM(IEN,VDT) ; Return versioned complication/comorbidity
"RTN","ICDCODE",175,0)
 Q $$VCC^ICDEX($G(IEN),$G(CDT))
"RTN","ICDCODE",176,0)
VST(IEN,VDT,FILE)     ; Versioned Short Text
"RTN","ICDCODE",177,0)
 Q $$VST^ICDEX($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDCODE",178,0)
VSTD(IEN,VDT)  ; Versioned Short Text (Dx)
"RTN","ICDCODE",179,0)
 Q $$VSTD^ICDEX($G(IEN),$G(CDT))
"RTN","ICDCODE",180,0)
VSTP(IEN,VDT) ; Versioned Short Text (Proc)
"RTN","ICDCODE",181,0)
 Q $$VSTP^ICDEX($G(IEN),$G(CDT))
"RTN","ICDCODE",182,0)
VLT(IEN,VDT,FILE) ; Version Description - Long Text
"RTN","ICDCODE",183,0)
 Q $$VLT^ICDEX($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDCODE",184,0)
VLTD(IEN,VDT) ; Versioned Description - Long Text (Dx)
"RTN","ICDCODE",185,0)
 Q $$VLTD^ICDEX($G(IEN),$G(CDT))
"RTN","ICDCODE",186,0)
VLTP(IEN,VDT) ; Versioned Description - Long Text (Proc)
"RTN","ICDCODE",187,0)
 Q $$VLTP^ICDEX($G(IEN),$G(CDT))
"RTN","ICDDIC")
0^65^B40496787
"RTN","ICDDIC",1,0)
ICDDIC ;ISL/KER - ICD Code Lookup Prototype (DIC) ;04/21/2014
"RTN","ICDDIC",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDDIC",3,0)
 ;               
"RTN","ICDDIC",4,0)
 ; Global Variables
"RTN","ICDDIC",5,0)
 ;    None
"RTN","ICDDIC",6,0)
 ;               
"RTN","ICDDIC",7,0)
 ; External References
"RTN","ICDDIC",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDDIC",9,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDDIC",10,0)
 ;    ^DIC                ICR  10006
"RTN","ICDDIC",11,0)
 ;               
"RTN","ICDDIC",12,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDDIC",13,0)
 ;     Y
"RTN","ICDDIC",14,0)
 ;     
"RTN","ICDDIC",15,0)
EN ; Main Entry Point
"RTN","ICDDIC",16,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICD,ICDA,ICDB,ICDC,ICDCOD,ICDCS,ICDCDT,ICDD,ICDD1,ICDD2
"RTN","ICDDIC",17,0)
 N ICDDP,ICDF,ICDFI,ICDFM,ICDFMT,ICDI,ICDID,ICDINP,ICDK,ICDLONG,ICDMFT,ICDMIX,ICDN
"RTN","ICDDIC",18,0)
 N ICDO,ICDOA,ICDOUT,ICDPSN,ICDR,ICDS,ICDSHRT,ICDSRC,ICDSY,ICDSYS,ICDT,ICDTD,ICDTY
"RTN","ICDDIC",19,0)
 N ICDU,ICDV,ICDVAL,ICDVD,ICDVDT,ICDVR,ICD K X,Y
"RTN","ICDDIC",20,0)
 D EN^ICDDICA W:$D(DTOUT) !!,"   Try later",!
"RTN","ICDDIC",21,0)
 Q:$D(DTOUT)  W:$D(DUOUT) !!,"   Abort lookup",! Q:$D(DUOUT)  S:+($G(ICDCS))>0 ICDSYS=+($G(ICDCS))
"RTN","ICDDIC",22,0)
 S ICDFMT=1 S:+($G(ICDFM))>0 ICDFMT=+($G(ICDFM)) S:$G(ICDVD)?7N ICDVDT=$G(ICDVD)
"RTN","ICDDIC",23,0)
 K:+($G(ICDVR))'>0 ICDVDT S:+($G(ICDFM))>0 ICDMFT=+($G(ICDFM)) S ICDSY=$P(ICDCS,"^",2)
"RTN","ICDDIC",24,0)
 S ICDTY=$S(+ICDFI=80:"Diagnosis",+ICDFI=80.1:"Procedure",1:"")
"RTN","ICDDIC",25,0)
 S DIC=$S(ICDDP="D":$$ROOT^ICDEX(80),ICDDP="P":$$ROOT^ICDEX(80.1),1:"")
"RTN","ICDDIC",26,0)
 W:'$L(DIC) !!,"   Invalid Global Root",!
"RTN","ICDDIC",27,0)
 Q:'$L(DIC)  S DIC("A")=" Enter an "_ICDSY_" "_ICDTY_":  ",DIC(0)="AEQZ"
"RTN","ICDDIC",28,0)
 S:'$L($$TM(ICDSY)) DIC("A")=" Enter a "_ICDTY_":  ",DIC(0)="AEQZ"
"RTN","ICDDIC",29,0)
 S:$L($G(DIC0)) DIC(0)=DIC0 D:$D(ICDSHOW) SHOW K X,Y D ^DIC,OUT N DIC0
"RTN","ICDDIC",30,0)
 Q
"RTN","ICDDIC",31,0)
EN2 ; Entry Point that Input Displays Variables
"RTN","ICDDIC",32,0)
 N ICDSHOW S ICDSHOW="" D EN
"RTN","ICDDIC",33,0)
 Q
"RTN","ICDDIC",34,0)
ICD10D ;
"RTN","ICDDIC",35,0)
 S DIC=$$ROOT^ICDEX(80),DIC("A")=" Enter an ICD-10 Diagnosis:  ",DIC(0)="AEQZ",ICDVDT=3141010,ICDSYS=30
"RTN","ICDDIC",36,0)
 K X,Y D ^DIC,OUT W !
"RTN","ICDDIC",37,0)
 Q
"RTN","ICDDIC",38,0)
ICD10P ;
"RTN","ICDDIC",39,0)
 S DIC=$$ROOT^ICDEX(80.1),DIC("A")=" Enter an ICD-10 Procedure:  ",DIC(0)="AEQZ",ICDVDT=3141010,ICDSYS=30
"RTN","ICDDIC",40,0)
 K X,Y D ^DIC,OUT W !
"RTN","ICDDIC",41,0)
 Q
"RTN","ICDDIC",42,0)
ICD9D ;
"RTN","ICDDIC",43,0)
 S DIC=$$ROOT^ICDEX(80),DIC("A")=" Enter an ICD-9 Diagnosis:  ",DIC(0)="AEQZ",ICDVDT=3120101,ICDSYS=1
"RTN","ICDDIC",44,0)
 K X,Y D ^DIC,OUT W !
"RTN","ICDDIC",45,0)
 Q
"RTN","ICDDIC",46,0)
ICD9P ;
"RTN","ICDDIC",47,0)
 S DIC=$$ROOT^ICDEX(80.1),DIC("A")=" Enter an ICD-10 Procedure:  ",DIC(0)="AEQZ",ICDVDT=3120101,ICDSYS=1
"RTN","ICDDIC",48,0)
 K X,Y D ^DIC,OUT W !
"RTN","ICDDIC",49,0)
 Q
"RTN","ICDDIC",50,0)
OUT ; Output
"RTN","ICDDIC",51,0)
 N ICDARY,ICDC,ICDCOD,ICDDT,ICDEF,ICDEFF,ICDHIS,ICDI
"RTN","ICDDIC",52,0)
 N ICDIEN,ICDLON,ICDND,ICDROOT,ICDSHT,ICDST,ICDTDT,ICDX
"RTN","ICDDIC",53,0)
 S ICDX=$G(X) I +Y'>0,$L($P(Y,"^",2)) D  Q
"RTN","ICDDIC",54,0)
 . ;W !!,"    ERROR:  ",$P(Y,"^",2),! S X=ICDX
"RTN","ICDDIC",55,0)
 S ICDIEN=+Y Q:+ICDIEN'>0
"RTN","ICDDIC",56,0)
 S ICDCOD=$P(Y,"^",2) Q:'$L(ICDCOD)
"RTN","ICDDIC",57,0)
 S ICDROOT=$$ROOT^ICDEX(+($G(ICDFI))) Q:'$L(ICDROOT)
"RTN","ICDDIC",58,0)
 S ICDSHT=$P($G(Y(0,1)),"^",4)
"RTN","ICDDIC",59,0)
 S:'$L(ICDSHT) ICDSHT=$$SD^ICDEX(+($G(ICDFI)),$G(ICDIEN),$P($G(ICDVDT),".",1))
"RTN","ICDDIC",60,0)
 I '$L(ICDSHT) D
"RTN","ICDDIC",61,0)
 . N ICDEFF,ICDHIS S ICDEFF=$O(@(ICDROOT_ICDIEN_",67,""B"","" "")"),-1)
"RTN","ICDDIC",62,0)
 . S ICDHIS=$O(@(ICDROOT_ICDIEN_",67,""B"","_+ICDEFF_","" "")"),-1)
"RTN","ICDDIC",63,0)
 . S ICDSHT=$G(@(ICDROOT_ICDIEN_",67,"_+ICDHIS_",0)"))
"RTN","ICDDIC",64,0)
 . S ICDSHT=$P(ICDSHT,"^",2)
"RTN","ICDDIC",65,0)
 S ICDLON=$G(Y(0,2))
"RTN","ICDDIC",66,0)
 S:'$L(ICDLON) ICDLON=$$LD^ICDEX(+($G(ICDFI)),$G(ICDIEN),$P($G(ICDVDT),".",1))
"RTN","ICDDIC",67,0)
 I '$L(ICDLON) D
"RTN","ICDDIC",68,0)
 . N ICDEFF,ICDHIS S ICDEFF=$O(@(ICDROOT_ICDIEN_",68,""B"","" "")"),-1)
"RTN","ICDDIC",69,0)
 . S ICDHIS=$O(@(ICDROOT_ICDIEN_",68,""B"","_+ICDEFF_","" "")"),-1)
"RTN","ICDDIC",70,0)
 . S ICDLON=$G(@(ICDROOT_ICDIEN_",68,"_+ICDHIS_",0)"))
"RTN","ICDDIC",71,0)
 Q:'$L(ICDSHT)  Q:'$L(ICDLON)
"RTN","ICDDIC",72,0)
 S ICDARY(1)=ICDLON D PAR^ICDEX(.ICDARY,(78-15))
"RTN","ICDDIC",73,0)
 W !!,?1,ICDCOD,?15,ICDSHT
"RTN","ICDDIC",74,0)
 W !!,?1,"Description:",?15,$G(ICDARY(1))
"RTN","ICDDIC",75,0)
 S ICDI=1 F  S ICDI=$O(ICDARY(ICDI)) Q:+ICDI'>0  W !,?15,$G(ICDARY(ICDI))
"RTN","ICDDIC",76,0)
 S ICDTDT=$$DT^XLFDT S:$G(ICDVDT)?7N ICDTDT=ICDVDT
"RTN","ICDDIC",77,0)
 S ICDC=0,ICDEFF=0 F  S ICDEFF=$O(@(ICDROOT_ICDIEN_",66,""B"","""_ICDEFF_""")")) Q:'$L(ICDEFF)  D
"RTN","ICDDIC",78,0)
 . Q:ICDEFF'?7N  N ICDHIS S ICDHIS=0
"RTN","ICDDIC",79,0)
 . F  S ICDHIS=$O(@(ICDROOT_ICDIEN_",66,""B"","""_ICDEFF_""","""_ICDHIS_""")")) Q:+ICDHIS'>0  D
"RTN","ICDDIC",80,0)
 . . N ICDND,ICDST,ICDDT,ICDEDT,ICDP  S ICDND=$G(@(ICDROOT_ICDIEN_",66,"_+ICDHIS_",0)"))
"RTN","ICDDIC",81,0)
 . . S ICDDT=$P(ICDND,"^",1),ICDST=$P(ICDND,"^",2)
"RTN","ICDDIC",82,0)
 . . S ICDST=$S(ICDST="1":"Active",ICDST="0":"Inactive",1:"") Q:'$L(ICDST)
"RTN","ICDDIC",83,0)
 . . S ICDP="" S:ICDTDT?7N&(ICDDT?7N)&(ICDTDT<ICDDT) ICDP=" (Pending)"
"RTN","ICDDIC",84,0)
 . . S ICDEDT=$$FMTE^XLFDT(ICDDT,"5Z") Q:'$L(ICDEDT)  Q:$L(ICDEDT,"/")'=3  S ICDC=ICDC+1
"RTN","ICDDIC",85,0)
 . . W:ICDC=1 !!,?1,"History:" W ?15,$G(ICDEDT),?30,ICDST,ICDP,!
"RTN","ICDDIC",86,0)
 Q
"RTN","ICDDIC",87,0)
SHOW ; Show Lookup Variables
"RTN","ICDDIC",88,0)
 W ! W:$L($G(DIC))!($L($G(DIC(0))))!($L($G(DIC("A")))) !," FileMan Variables",!
"RTN","ICDDIC",89,0)
 W:$L($G(DIC)) !,?2," Global Root/File:",?27,"DIC=""",$$QM($G(DIC)),""""
"RTN","ICDDIC",90,0)
 W:$L($G(DIC(0))) !,?2," FileMan Response:",?27,"DIC(0)=""",$$QM($G(DIC(0))),""""
"RTN","ICDDIC",91,0)
 W:$G(DIC(0))["A" !,?35,"A  Ask the entry"
"RTN","ICDDIC",92,0)
 W:$G(DIC(0))["E" !,?35,"E  Echo information"
"RTN","ICDDIC",93,0)
 W:$G(DIC(0))["F" !,?35,"F  Forget the lookup value"
"RTN","ICDDIC",94,0)
 W:$G(DIC(0))["I" !,?35,"I  Ignore the Special Lookup"
"RTN","ICDDIC",95,0)
 W:$G(DIC(0))["L" !,?35,"L  Not allowed"
"RTN","ICDDIC",96,0)
 W:$G(DIC(0))["M" !,?35,"M  Multiple-Index"
"RTN","ICDDIC",97,0)
 W:$G(DIC(0))["N" !,?35,"N  IEN lookup allowed not forced"
"RTN","ICDDIC",98,0)
 W:$G(DIC(0))["n" !,?35,"n  Partial matching on pure numeric"
"RTN","ICDDIC",99,0)
 W:$G(DIC(0))["O" !,?35,"O  One exact match"
"RTN","ICDDIC",100,0)
 W:$G(DIC(0))["Q" !,?35,"Q  Question erroneous input"
"RTN","ICDDIC",101,0)
 W:$G(DIC(0))["T" !,?35,"T  Continue Searching"
"RTN","ICDDIC",102,0)
 W:$G(DIC(0))["X" !,?35,"X  Exact match required"
"RTN","ICDDIC",103,0)
 W:$G(DIC(0))["Z" !,?35,"Z  Zero node returned"
"RTN","ICDDIC",104,0)
 W:$L($G(DIC("A"))) !,?2," Prompt:",?27,"DIC(""A"")=""",$$QM($G(DIC("A"))),""""
"RTN","ICDDIC",105,0)
 W:$L($G(ICDSYS))!($L($G(ICDVDT)))!($L($G(ICDFMT))) !!," Special Variables",!
"RTN","ICDDIC",106,0)
 W:$L($G(ICDSYS)) !,?2," Coding System:",?27,"ICDSYS=""",$$QM($G(ICDSYS)),""""
"RTN","ICDDIC",107,0)
 W:$L($G(ICDSYS))&($L($G(ICDSY)))&($L($G(ICDTY))) ?45,$G(ICDSY)," ",$G(ICDTY)
"RTN","ICDDIC",108,0)
 W:$L($G(ICDVDT))&($G(ICDVDT)?7N) !,?2," Versioning Date:",?27,"ICDVDT=""",$$QM($G(ICDVDT)),""""
"RTN","ICDDIC",109,0)
 W:$L($G(ICDVDT))&($G(ICDVDT)?7N) ?45,$$FMTE^XLFDT($P(ICDVDT,".",1),"5Z")," (No inactive codes)"
"RTN","ICDDIC",110,0)
 W:'$L($G(ICDVDT)) !,?2," Versioning Date:",?27,"<null>"
"RTN","ICDDIC",111,0)
 W:'$L($G(ICDVDT)) ?45,"Active and Inactive codes shown"
"RTN","ICDDIC",112,0)
 I +($G(ICDFMT))>0 D
"RTN","ICDDIC",113,0)
 . W !,?2," Display Format:",?27,"ICDFMT=""",$$QM($G(ICDFMT)),""""
"RTN","ICDDIC",114,0)
 . W:+($G(ICDFMT))=1 ?45,"FileMan format, code followed ",!,?45,"by the short description."
"RTN","ICDDIC",115,0)
 . W:+($G(ICDFMT))=2 ?45,"Modified FileMan format, code ",!,?45,"followed by the long description."
"RTN","ICDDIC",116,0)
 . W:+($G(ICDFMT))=3 ?45,"Short Lexicon format, short ",!,?45,"description followed by the ",!,?45,"code."
"RTN","ICDDIC",117,0)
 . W:+($G(ICDFMT))=4 ?45,"Long Lexicon format, Long ",!,?45,"description followed by the ",!,?45,"code."
"RTN","ICDDIC",118,0)
 Q
"RTN","ICDDIC",119,0)
QM(X) ;   Quote Marks
"RTN","ICDDIC",120,0)
 N ICDPSN,ICDOUT,ICDINP S ICDINP=$G(X) Q:'$L(X) ""
"RTN","ICDDIC",121,0)
 S ICDOUT="" F ICDPSN=1:1:$L(ICDINP,$C(34)) D
"RTN","ICDDIC",122,0)
 . S ICDOUT=ICDOUT_$C(34)_$C(34)_$P(ICDINP,$C(34),ICDPSN)
"RTN","ICDDIC",123,0)
 S:$E(ICDOUT,1,2)="""""" ICDOUT=$E(ICDOUT,3,$L(ICDOUT)) S X=ICDOUT
"RTN","ICDDIC",124,0)
 Q X
"RTN","ICDDIC",125,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","ICDDIC",126,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " Q:X'[Y X
"RTN","ICDDIC",127,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDDIC",128,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDDIC",129,0)
 Q X
"RTN","ICDDICA")
0^66^B99850836
"RTN","ICDDICA",1,0)
ICDDICA ;SLC/KER - ICD DIC Lookup Prototype ;04/21/2014
"RTN","ICDDICA",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDDICA",3,0)
 ;               
"RTN","ICDDICA",4,0)
 ; Global Variables
"RTN","ICDDICA",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDDICA",6,0)
 ;    ^XTMP("ICDID")      SACC 2.3.2.5.2
"RTN","ICDDICA",7,0)
 ;               
"RTN","ICDDICA",8,0)
 ; External References
"RTN","ICDDICA",9,0)
 ;    ^%DT                ICR  10003
"RTN","ICDDICA",10,0)
 ;    ^DIC                ICR  10006
"RTN","ICDDICA",11,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDDICA",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDDICA",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDDICA",14,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDDICA",15,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDDICA",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDDICA",17,0)
 ;               
"RTN","ICDDICA",18,0)
 ; Local Variables NEWed or KILLed in ICDDIC
"RTN","ICDDICA",19,0)
 ;     ICDCS,ICDDP,ICDFI,ICDFM,ICDOA,ICDVD,ICDVR
"RTN","ICDDICA",20,0)
 ;               
"RTN","ICDDICA",21,0)
EN ;
"RTN","ICDDICA",22,0)
 W:$L($G(IOF)) @IOF
"RTN","ICDDICA",23,0)
 W ! S ICDDP=$$DP,ICDCS="" Q:ICDDP["^"  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",24,0)
 S ICDFI=$S(ICDDP="D":"80^ICD DIAGNOSIS",ICDDP="P":"80.1^ICD OPERATION/PROCEDURE",1:"")
"RTN","ICDDICA",25,0)
 Q:+ICDFI'>0  S ICDOA=$$OA(+ICDFI) Q:ICDOA["^"  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",26,0)
 S:ICDOA="O" ICDCS=$$CS(+ICDFI)  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",27,0)
 S ICDVR=$$VR(+ICDFI)  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",28,0)
 S ICDVD="" S:ICDVR>0 ICDVD=$$VD(+ICDFI)  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",29,0)
 N ICD10D S ICD10D=$$IMP^ICDEX(30) S ICDSRC=+ICDCS
"RTN","ICDDICA",30,0)
 S:+ICDCS'>0&(+ICDFI=80) ICDSRC=$S(+ICDVD<+ICD10D:1,1:30)
"RTN","ICDDICA",31,0)
 S:+ICDCS'>0&(+ICDFI=80.1) ICDSRC=$S(+ICDVD<+ICD10D:2,1:31)
"RTN","ICDDICA",32,0)
 S ICDFM=$$FM  Q:$D(DTOUT)!($D(DUOUT))
"RTN","ICDDICA",33,0)
 N ICDTEST
"RTN","ICDDICA",34,0)
 Q
"RTN","ICDDICA",35,0)
DP(X) ; Diagnosis or Procedure
"RTN","ICDDICA",36,0)
 N ICD,DIR,ICDB,ICDN,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ICDDICA",37,0)
 S ICD="",DIR(0)="SAO^D:Diagnosis;P:Procedures"
"RTN","ICDDICA",38,0)
 S DIR("B")=$$RET("DP") S:'$L(DIR("B")) DIR("B")="Diagnosis"
"RTN","ICDDICA",39,0)
 S (DIR("?"),DIR("??"))="^D DPH^ICDDICA"
"RTN","ICDDICA",40,0)
 S DIR("PRE")="S X=$$DPP^ICDDICA($G(X))"
"RTN","ICDDICA",41,0)
 S DIR("A")=" Search ICD Diagnosis or Procedures (D/P):  "
"RTN","ICDDICA",42,0)
 D ^DIR S X=Y
"RTN","ICDDICA",43,0)
 S ICDN="" S:X="D" ICDN="Diagnosis" S:X="P" ICDN="Procedures"
"RTN","ICDDICA",44,0)
 D:$L(ICDN) SAV("DP",ICDN)
"RTN","ICDDICA",45,0)
 Q X
"RTN","ICDDICA",46,0)
DPP(X) ;   Diagnosis or Procedure - Pre-process
"RTN","ICDDICA",47,0)
 Q:'$L($G(X)) ""  Q:X["?" "??"  Q:X["^^" "^^"  Q:X["^" "^"
"RTN","ICDDICA",48,0)
 S X=$$UP^XLFSTR(X)   Q:$E("OPERATIONS",1,$L(X))=X "Procedures"
"RTN","ICDDICA",49,0)
 Q:$E("PROCEDURES",1,$L(X))=X "Procedures" Q:$E("DIAGNOSIS",1,$L(X))=X "Diagnosis"
"RTN","ICDDICA",50,0)
 Q X
"RTN","ICDDICA",51,0)
DPH ;   Diagnosis or Procedure - Help
"RTN","ICDDICA",52,0)
 W !,?5,"Enter 'D' or 'Diagnosis' to search the ICD DIAGNOSIS file #80"
"RTN","ICDDICA",53,0)
 W !,?5,"Enter 'P' or 'Procedures' to search the ICD PROCEDURE file #80.1"
"RTN","ICDDICA",54,0)
 W !,?5,"Enter '^' to quit, and 'Return' to accept the default value."
"RTN","ICDDICA",55,0)
 Q
"RTN","ICDDICA",56,0)
OA(X) ; One or All Coding System
"RTN","ICDDICA",57,0)
 N ICD,DIR,ICDB,ICDN,ICDF,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ICDDICA",58,0)
 S ICDF=+($G(X)) Q:'$D(^ICDS("F",+ICDF)) "A"
"RTN","ICDDICA",59,0)
 S ICD="",DIR(0)="SAO^O:One System;A:All Systems"
"RTN","ICDDICA",60,0)
 S DIR("B")=$$RET("OA") S:'$L(DIR("B")) DIR("B")="All Coding Systems"
"RTN","ICDDICA",61,0)
 S (DIR("?"),DIR("??"))="^D OAH^ICDDICA"
"RTN","ICDDICA",62,0)
 S DIR("PRE")="S X=$$OAP^ICDDICA($G(X))"
"RTN","ICDDICA",63,0)
 S DIR("A")=" Search One or All Coding Systems in file "_ICDF_" (O/A):  "
"RTN","ICDDICA",64,0)
 S DIR("A")=" Search One or All Coding Systems (O/A):  "
"RTN","ICDDICA",65,0)
 D ^DIR S X=Y
"RTN","ICDDICA",66,0)
 S ICDN="" S:X="O" ICDN="One System" S:X="A" ICDN="All Systems"
"RTN","ICDDICA",67,0)
 D:$L(ICDN) SAV("OA",ICDN)
"RTN","ICDDICA",68,0)
 Q X
"RTN","ICDDICA",69,0)
OAP(X) ;   One or All Coding System - Pre-process
"RTN","ICDDICA",70,0)
 Q:'$L($G(X)) ""  Q:X["?" "??"  Q:X["^^" "^^"  Q:X["^" "^"  S X=$$UP^XLFSTR(X)
"RTN","ICDDICA",71,0)
 Q:$E("ONE CODING SYSTEM",1,$L(X))=X "One System"
"RTN","ICDDICA",72,0)
 Q:$E("ONE SYSTEM",1,$L(X))=X "One System"
"RTN","ICDDICA",73,0)
 Q:$E("ALL CODING SYSTEMS",1,$L(X))=X "All Systems"
"RTN","ICDDICA",74,0)
 Q:$E("ALL SYSTEMS",1,$L(X))=X "All Systems"
"RTN","ICDDICA",75,0)
 S:"^O^A"'[("^"_$E(X,1)_"^") X="??"
"RTN","ICDDICA",76,0)
 Q X
"RTN","ICDDICA",77,0)
OAH ;   One or All Coding System - Help
"RTN","ICDDICA",78,0)
 W !,?5,"Enter 'O' to search one coding system " W:+($G(ICDF))>0 "in file ",$G(ICDF)
"RTN","ICDDICA",79,0)
 W !,?5,"Enter 'A' to search all coding systems " W:+($G(ICDF))>0 "in file ",$G(ICDF)
"RTN","ICDDICA",80,0)
 I $D(^ICDS("F",+($G(ICDF)))) D
"RTN","ICDDICA",81,0)
 . N ICDI,ICDC S (ICDI,ICDC)=0 F  S ICDI=$O(^ICDS("F",+($G(ICDF)),ICDI)) Q:ICDI'>0  D
"RTN","ICDDICA",82,0)
 . . N ICDS S ICDS=$P($G(^ICDS(ICDI,0)),"^",1) Q:'$L(ICDS)  S ICDC=ICDC+1 W:ICDC=1 !
"RTN","ICDDICA",83,0)
 . . W !,?15,ICDS
"RTN","ICDDICA",84,0)
 Q
"RTN","ICDDICA",85,0)
CS(X) ; Coding System
"RTN","ICDDICA",86,0)
 N ICD,DIC,ICDB,ICDBI,ICDN,ICDF,ICDI,ICDD,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ICDDICA",87,0)
 S ICDF=+($G(X)) Q:'$D(^ICDS("F",+ICDF)) "^" S ICDI=$O(^ICDS("F",+ICDF," "),-1) Q:+ICDI'>0 "^"
"RTN","ICDDICA",88,0)
 S ICDD=$P($G(^ICDS(+ICDI,0)),"^",1) Q:'$L(ICDD) "^"  S ICD="",DIC="^ICDS(",DIC(0)="AEQM"
"RTN","ICDDICA",89,0)
 S ICDB=$$RET("CS"),ICDBI=0 S:$L(ICDB) ICDBI=$O(^ICDS("B",ICDB,0))
"RTN","ICDDICA",90,0)
 S:$L(ICDB)&(+($G(ICDBI))'>0) ICDBI=$O(^ICDS("C",ICDB,0))
"RTN","ICDDICA",91,0)
 S:ICDBI>0&($P($G(^ICDS(+ICDBI,0)),"^",3)'=+ICDF) ICDB=""
"RTN","ICDDICA",92,0)
 S:$L(ICDB) DIC("B")=ICDB S:'$L($G(DIC("B")))&($L(ICDD)) DIC("B")=ICDD
"RTN","ICDDICA",93,0)
 S DIC("A")="   Select Coding Systems:  "
"RTN","ICDDICA",94,0)
 S DIC("S")="I $G(ICDF)>0&($P($G(^ICDS(+Y,0)),""^"",3)=$G(ICDF))"
"RTN","ICDDICA",95,0)
 S (DIC("?"),DIC("??"))="^D CSH^ICDDICA"
"RTN","ICDDICA",96,0)
 D ^DIC I +Y>0 S ICDD=$P($G(^ICDS(+Y,0)),"^",1) D:$L(ICDD) SAV("CS",ICDD)
"RTN","ICDDICA",97,0)
 S X=Y
"RTN","ICDDICA",98,0)
 Q X
"RTN","ICDDICA",99,0)
CSH ;   One or All Coding System - Help
"RTN","ICDDICA",100,0)
 W !,?5,"Answer with ICD CODING SYSTEMS (i.e., "
"RTN","ICDDICA",101,0)
 W $S(+ICDF=80:"ICD-10-CM",+ICDF=80.1:"ICD-10-PCS",1:"ICD-10-CM")
"RTN","ICDDICA",102,0)
 W " or ICD CODING SYSTEM NOMENCLATURE, or"
"RTN","ICDDICA",103,0)
 W ?5,"CODING SYSTEM ABBREVIATION"
"RTN","ICDDICA",104,0)
 Q
"RTN","ICDDICA",105,0)
 I $D(^ICDS("F",+($G(ICDF)))) D
"RTN","ICDDICA",106,0)
 . N ICDI,ICDC S (ICDI,ICDC)=0 F  S ICDI=$O(^ICDS("F",+($G(ICDF)),ICDI)) Q:ICDI'>0  D
"RTN","ICDDICA",107,0)
 . . N ICDS S ICDS=$P($G(^ICDS(ICDI,0)),"^",1) Q:'$L(ICDS)  S ICDC=ICDC+1 W:ICDC=1 !
"RTN","ICDDICA",108,0)
 . . W !,?15,ICDS
"RTN","ICDDICA",109,0)
 Q
"RTN","ICDDICA",110,0)
VR(X) ; Versioned Search
"RTN","ICDDICA",111,0)
 N ICD,DIR,ICDB,ICDN,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ICDDICA",112,0)
 S ICD="",DIR(0)="YAO" S DIR("B")=$$RET("VR") S:'$L(DIR("B")) DIR("B")="Yes"
"RTN","ICDDICA",113,0)
 S (DIR("?"),DIR("??"))="^D VRH^ICDDICA"
"RTN","ICDDICA",114,0)
 S DIR("PRE")="S X=$$VRP^ICDDICA($G(X))"
"RTN","ICDDICA",115,0)
 S DIR("A")=" Conduct a versioned (date sensitive) Search (Y/N):  "
"RTN","ICDDICA",116,0)
 D ^DIR S X=Y
"RTN","ICDDICA",117,0)
 S ICDN="" S:X="1" ICDN="Yes" S:X="0" ICDN="No"
"RTN","ICDDICA",118,0)
 D:$L(ICDN) SAV("VR",ICDN)
"RTN","ICDDICA",119,0)
 Q X
"RTN","ICDDICA",120,0)
VRP(X) ;   Diagnosis or Procedure - Pre-process
"RTN","ICDDICA",121,0)
 Q:'$L($G(X)) ""  Q:X["?" "??"  Q:X["^^" "^^"  Q:X["^" "^"
"RTN","ICDDICA",122,0)
 S X=$$UP^XLFSTR(X)   Q:$E("YES",1,$L(X))=X "Yes" Q:$E("NO",1,$L(X))=X "No"
"RTN","ICDDICA",123,0)
 S X="??"
"RTN","ICDDICA",124,0)
 Q X
"RTN","ICDDICA",125,0)
VRH ;   Diagnosis or Procedure - Help
"RTN","ICDDICA",126,0)
 W !,?5,"Enter 'Yes' to conduct a versioned search (date sensitive) or"
"RTN","ICDDICA",127,0)
 W !,?5,"enter 'No' to contuct an unversioned search.",!
"RTN","ICDDICA",128,0)
 W !,?5,"NOTE:  Inactive codes will NOT be displayed during a versioned"
"RTN","ICDDICA",129,0)
 W !,?5,"       search (date sensitive) and will be displayed during an "
"RTN","ICDDICA",130,0)
 W !,?5,"       unversioned search (date doesn't matter)."
"RTN","ICDDICA",131,0)
 Q
"RTN","ICDDICA",132,0)
VD(X) ; Versioned Date
"RTN","ICDDICA",133,0)
 N ICD,DIR,ICDB,ICDN,ICDTD,ICDD1,ICDD2,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ICDDICA",134,0)
 S ICDTD=$$DT^XLFDT,ICDD1=2781001,ICDD2=$$FMADD^XLFDT(ICDTD,(365*5))
"RTN","ICDDICA",135,0)
 S DIR(0)="DAO^"_ICDD1_":"_ICDD2_":"
"RTN","ICDDICA",136,0)
 S DIR("B")=$$RET("VD") S:'$L(DIR("B")) DIR("B")=$$FMTE^XLFDT(ICDTD)
"RTN","ICDDICA",137,0)
 S (DIR("?"),DIR("??"))="^D VDH^ICDDICA"
"RTN","ICDDICA",138,0)
 S DIR("PRE")="S X=$$VDP^ICDDICA($G(X))"
"RTN","ICDDICA",139,0)
 S DIR("A")="   Enter a versioning date:  "
"RTN","ICDDICA",140,0)
 S DIR("A")="   Enter a date from "_$$FMTE^XLFDT($G(ICDD1),"5Z")_" to "_$$FMTE^XLFDT($G(ICDD2),"5Z")_":  "
"RTN","ICDDICA",141,0)
 D ^DIR S X=Y
"RTN","ICDDICA",142,0)
 S ICDN="" S:$P(X,".",1)?7N ICDN=$$UP^XLFSTR($$FMTE^XLFDT($P(X,".",1)))
"RTN","ICDDICA",143,0)
 D:$L(ICDN) SAV("VD",ICDN)
"RTN","ICDDICA",144,0)
 Q X
"RTN","ICDDICA",145,0)
VDP(X) ;   Diagnosis or Procedure - Pre-process
"RTN","ICDDICA",146,0)
 S X=$$UP^XLFSTR($G(X)) Q:'$L($G(X)) ""  Q:X["?" "??"  Q:X["^^" "^^"  Q:X["^" "^"
"RTN","ICDDICA",147,0)
 N ICDI,ICDA,ICDO S (ICDA,ICDI)=$$EFM(X) S:ICDA#10000=0 ICDA=ICDA+101 S:ICDA#100=0 ICDA=ICDA+1
"RTN","ICDDICA",148,0)
 S:$E(ICDA,4,5)="00" ICDA=$E(ICDA,1,3)_"01"_$E(ICDA,6,7) S:$E(ICDA,6,7)="00" ICDA=$E(ICDA,1,5)_"01"
"RTN","ICDDICA",149,0)
 S ICDA=$P(ICDA,".",1) S ICDO=$$UP^XLFSTR($$FMTE^XLFDT(ICDA)) Q:ICDA?7N ICDO  S X="??"
"RTN","ICDDICA",150,0)
 Q X
"RTN","ICDDICA",151,0)
VDH ;   Diagnosis or Procedure - Help
"RTN","ICDDICA",152,0)
 W !,?5,"Enter a date from ",$$FMTE^XLFDT($G(ICDD1))," to ",$$FMTE^XLFDT($G(ICDD2)),".  Time is"
"RTN","ICDDICA",153,0)
 W !,?5,"allowed but not required.  Code Set Business rules apply"
"RTN","ICDDICA",154,0)
 W !,?5,"for imprecise dates:",!
"RTN","ICDDICA",155,0)
 W !,?5,"     Month is missing:  Use January"
"RTN","ICDDICA",156,0)
 W !,?5,"     Day is missing:    Use the 1st"
"RTN","ICDDICA",157,0)
 Q
"RTN","ICDDICA",158,0)
FM(X) ; Diagnosis or Procedure
"RTN","ICDDICA",159,0)
 N ICD,DIR,ICDB,ICDN,ICDSRC,Y K ICD K DTOUT,DUOUT,DIRUT,DIROUT S ICDSRC=$G(X) S ICD=""
"RTN","ICDDICA",160,0)
 S DIR(0)="SAO^1:FileMan Format;2:Modified FileMan Format;3:Short Lexicon Format;4:Long Lexicon Format"
"RTN","ICDDICA",161,0)
 S DIR("B")=$$RET("FM") S:'$L(DIR("B")) DIR("B")="FileMan Format"
"RTN","ICDDICA",162,0)
 S (DIR("?"),DIR("??"))="^D FMH^ICDDICA"
"RTN","ICDDICA",163,0)
 S DIR("PRE")="S X=$$FMP^ICDDICA($G(X))"
"RTN","ICDDICA",164,0)
 S DIR("A")=" Select Display Format (1-4):  "
"RTN","ICDDICA",165,0)
 D ^DIR S X=Y S ICDN="" S:$L($G(Y(0))) ICDN=$G(Y(0))
"RTN","ICDDICA",166,0)
 D:$L(ICDN) SAV("FM",ICDN)
"RTN","ICDDICA",167,0)
 Q X
"RTN","ICDDICA",168,0)
FMP(X) ;   Diagnosis or Procedure - Pre-process
"RTN","ICDDICA",169,0)
 S X=$$UP^XLFSTR($G(X)) Q:'$L($G(X)) ""  Q:X["?" "??"  Q:X["^^" "^^"  Q:X["^" "^"
"RTN","ICDDICA",170,0)
 Q:X=1 "FileMan Format" Q:X=2 "Modified FileMan Format" Q:X=3 "Short Lexicon Format" Q:X=4 "Long Lexicon Format"
"RTN","ICDDICA",171,0)
 Q:$E("FILEMAN FORMAT",1,$L(X))=X "FileMan Format"
"RTN","ICDDICA",172,0)
 Q:$E("MODIFIED FILEMAN FORMAT",1,$L(X))=X "Modified FileMan Format"
"RTN","ICDDICA",173,0)
 Q:$E("SHORT LEXICON FORMAT",1,$L(X))=X "Short Lexicon Format"
"RTN","ICDDICA",174,0)
 Q:$E("LONG LEXICON FORMAT",1,$L(X))=X "Long Lexicon Format"
"RTN","ICDDICA",175,0)
 S X="??"
"RTN","ICDDICA",176,0)
 Q X
"RTN","ICDDICA",177,0)
FMH ;   Display Format - Help
"RTN","ICDDICA",178,0)
 N ICDCOD,ICDSHRT,ICDLONG,ICDMIX
"RTN","ICDDICA",179,0)
 I $G(ICDSRC)=1!("^1^2^30^31^"'[("^"_+($G(ICDSRC))_"^")) D
"RTN","ICDDICA",180,0)
 . S ICDCOD="275.1"
"RTN","ICDDICA",181,0)
 . S ICDSHRT="DIS COPPER METABOLISM"
"RTN","ICDDICA",182,0)
 . S ICDLONG="DISORDERS OF COPPER METABOLISM"
"RTN","ICDDICA",183,0)
 . S ICDMIX="Disorders of Copper Metabolism"
"RTN","ICDDICA",184,0)
 I $G(ICDSRC)=2 D
"RTN","ICDDICA",185,0)
 . S ICDCOD="01.21"
"RTN","ICDDICA",186,0)
 . S ICDSHRT="CRANIAL SINUS I D"
"RTN","ICDDICA",187,0)
 . S ICDLONG="INCISION AND DRAINAGE OF CRANIAL SINUS"
"RTN","ICDDICA",188,0)
 . S ICDMIX="Incision and Drainage of Cranial Sinus"
"RTN","ICDDICA",189,0)
 I $G(ICDSRC)=30 D
"RTN","ICDDICA",190,0)
 . S ICDCOD="T36.0X1S"
"RTN","ICDDICA",191,0)
 . S ICDSHRT="Penicillin poisoning , acc, sequela"
"RTN","ICDDICA",192,0)
 . S ICDLONG="POISONING BY PENICILLINS, ACCIDENTAL, SEQUELA"
"RTN","ICDDICA",193,0)
 . S ICDMIX="Poisoning by Penicillins, Accidental, Sequela"
"RTN","ICDDICA",194,0)
 I $G(ICDSRC)=31 D
"RTN","ICDDICA",195,0)
 . S ICDCOD="0BQ37ZZ"
"RTN","ICDDICA",196,0)
 . S ICDSHRT="Repair Right Bronchus, Opening"
"RTN","ICDDICA",197,0)
 . S ICDLONG="REPAIR RIGHT BRONCHUS, VIA NATURAL/ARTIFICIAL OPENING"
"RTN","ICDDICA",198,0)
 . S ICDMIX="Repair right Bronchus, via Natural/Artificial Opening"
"RTN","ICDDICA",199,0)
 W !,?5,"Enter  "
"RTN","ICDDICA",200,0)
 W !,?5,"  1    FileMan format, code followed by short text (default):"
"RTN","ICDDICA",201,0)
 W !,?5,""
"RTN","ICDDICA",202,0)
 W !,?5,"       ",ICDCOD,"    ",ICDSHRT
"RTN","ICDDICA",203,0)
 W !,?5,""
"RTN","ICDDICA",204,0)
 W !,?5,"  2    Modified FileMan format, code followed by description:"
"RTN","ICDDICA",205,0)
 W !,?5,""
"RTN","ICDDICA",206,0)
 W !,?5,"       ",ICDCOD,"    ",ICDLONG
"RTN","ICDDICA",207,0)
 W !,?5,""
"RTN","ICDDICA",208,0)
 W !,?5,"  3    Short Lexicon format, short text followed by code:"
"RTN","ICDDICA",209,0)
 W !,?5,""
"RTN","ICDDICA",210,0)
 W !,?5,"       ",ICDSHRT," (",ICDCOD,")"
"RTN","ICDDICA",211,0)
 W !,?5,""
"RTN","ICDDICA",212,0)
 W !,?5,"  4    Long Lexicon format, description followed by code:"
"RTN","ICDDICA",213,0)
 W !,?5," "
"RTN","ICDDICA",214,0)
 W !,?5,"       ",ICDMIX," (",ICDCOD,")"
"RTN","ICDDICA",215,0)
 W !,?5," "
"RTN","ICDDICA",216,0)
 Q
"RTN","ICDDICA",217,0)
SAV(X,ICDV) ;   Save Defaults
"RTN","ICDDICA",218,0)
 N ICDR,ICDT,ICDU,ICDC,ICDVAL,ICDN,ICDID,ICDD,ICDF,ICDK,Y S ICDR=$P($T(+1)," ",1) Q:$L(ICDR)'>1  Q:$L(ICDR)>8
"RTN","ICDDICA",219,0)
 S ICDT=$G(X) Q:'$L(ICDT)  S ICDC=$T(@(ICDT_"^"_ICDR)) Q:'$L(ICDC)  S ICDU=+($G(DUZ)) Q:+ICDU'>0
"RTN","ICDDICA",220,0)
 S ICDN=$$GET1^DIQ(200,(ICDU_","),.01) Q:'$L(ICDN)  S ICDVAL=$G(ICDV) Q:ICDU'>0  Q:'$L(ICDVAL)
"RTN","ICDDICA",221,0)
 S ICDC=$$TM($P(ICDC,";",2)) Q:'$L(ICDC)  S ICDK=$E(ICDC,1,13) F  Q:$L(ICDK)>12  S ICDK=ICDK_" "
"RTN","ICDDICA",222,0)
 S ICDD=$$DT^XLFDT,ICDF=$$FMADD^XLFDT(ICDD,30),ICDID=ICDR_" "_ICDU_" "_ICDK
"RTN","ICDDICA",223,0)
 S ^XTMP(ICDID,0)=ICDF_"^"_ICDD_"^"_ICDC,^XTMP(ICDID,ICDT)=ICDVAL
"RTN","ICDDICA",224,0)
 Q
"RTN","ICDDICA",225,0)
RET(X) ;   Retrieve Defaults
"RTN","ICDDICA",226,0)
 N ICDR,ICDT,ICDU,ICDC,ICDN,ICDID,ICDD,ICDF,ICDK S ICDR=$P($T(+1)," ",1) Q:$L(ICDR)'>1  Q:$L(ICDR)>8
"RTN","ICDDICA",227,0)
 S ICDT=$G(X) Q:'$L(ICDT)  S ICDC=$T(@(ICDT_"^"_ICDR)) Q:'$L(ICDC)  S ICDU=+($G(DUZ)) Q:+ICDU'>0
"RTN","ICDDICA",228,0)
 S ICDN=$$GET1^DIQ(200,(ICDU_","),.01) Q:'$L(ICDN)  S ICDC=$$TM($P(ICDC,";",2)) Q:'$L(ICDC)
"RTN","ICDDICA",229,0)
 S ICDK=$E(ICDC,1,13) F  Q:$L(ICDK)>12  S ICDK=ICDK_" "
"RTN","ICDDICA",230,0)
 S ICDD=$$DT^XLFDT,ICDF=$$FMADD^XLFDT(ICDD,30),ICDID=ICDR_" "_ICDU_" "_ICDK
"RTN","ICDDICA",231,0)
 S X=$G(^XTMP(ICDID,ICDT))
"RTN","ICDDICA",232,0)
 Q X
"RTN","ICDDICA",233,0)
EFM(X) ; Convert External Date to FM
"RTN","ICDDICA",234,0)
 N Y,%DT D ^%DT S X=Y K %DT
"RTN","ICDDICA",235,0)
 Q X
"RTN","ICDDICA",236,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","ICDDICA",237,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " Q:X'[Y X
"RTN","ICDDICA",238,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDDICA",239,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDDICA",240,0)
 Q X
"RTN","ICDDRG")
0^70^B34375895
"RTN","ICDDRG",1,0)
ICDDRG ;ALB/GRR/EG/ADL - Assigns DRG Codes ;04/21/2014
"RTN","ICDDRG",2,0)
 ;;18.0;DRG Grouper;**2,7,10,14,20,31,37,57**;Oct 20, 2000;Build 1
"RTN","ICDDRG",3,0)
 ;
"RTN","ICDDRG",4,0)
 ; ADL - Updated for Code Set Versioning 03/10/2003
"RTN","ICDDRG",5,0)
 ; KER - Updated for ICD-10              06/30/2012
"RTN","ICDDRG",6,0)
 ;               
"RTN","ICDDRG",7,0)
 ; Global Variables
"RTN","ICDDRG",8,0)
 ;    None
"RTN","ICDDRG",9,0)
 ;               
"RTN","ICDDRG",10,0)
 ; External References
"RTN","ICDDRG",11,0)
 ;    ^ICDDRG0            ICR  N/A
"RTN","ICDDRG",12,0)
 ;    EN1^ICDDRG5         ICR  N/A
"RTN","ICDDRG",13,0)
 ;    EN1^ICDDRG8         ICR  N/A
"RTN","ICDDRG",14,0)
 ;    $$GETDRG^ICDEX      ICR  N/A
"RTN","ICDDRG",15,0)
 ;    $$ICDDX^ICDEX       ICR  N/A
"RTN","ICDDRG",16,0)
 ;    $$ICDOP^ICDEX       ICR  N/A
"RTN","ICDDRG",17,0)
 ;    $$ISA^ICDEX         ICR  N/A
"RTN","ICDDRG",18,0)
 ;    $$MDCD^ICDEX        ICR  N/A
"RTN","ICDDRG",19,0)
 ;    $$MDCT^ICDEX        ICR  N/A
"RTN","ICDDRG",20,0)
 ;    $$MOR^ICDEX         ICR  N/A
"RTN","ICDDRG",21,0)
 ;    MDCG^ICDEX          ICR  N/A
"RTN","ICDDRG",22,0)
 ;               
"RTN","ICDDRG",23,0)
 ; Local Variables NEWed or KILLed in ICDDRGM
"RTN","ICDDRG",24,0)
 ;     ICDDATE,ICDDMS,ICDDRG,ICDDX,ICDEXP,ICDMDC,ICDPRC,ICDRTC
"RTN","ICDDRG",25,0)
 ;     ICDS24,ICDTMP,ICDTRS,SEX
"RTN","ICDDRG",26,0)
 ;     
"RTN","ICDDRG",27,0)
TOP ; Main Entry Point
"RTN","ICDDRG",28,0)
 K ICDDRG,ICDMDC,ICDRTC S (ICDDRG,ICDMDC,ICDRTC)=""
"RTN","ICDDRG",29,0)
 ; Check for Invalid Input Variables
"RTN","ICDDRG",30,0)
 I +($G(ICDDX(1)))'>0 S ICDRTC=1 G ERR
"RTN","ICDDRG",31,0)
 ;   Patient Expired?
"RTN","ICDDRG",32,0)
 I ICDEXP'=0&(ICDEXP'=1)&(ICDEXP'="") S ICDRTC=5 G ERR
"RTN","ICDDRG",33,0)
 ;   Patient Transferred
"RTN","ICDDRG",34,0)
 I ICDTRS'=0&(ICDTRS'=1)&(ICDTRS'="") S ICDRTC=6 G ERR
"RTN","ICDDRG",35,0)
 ;   Patient Discharged against Medical Advice
"RTN","ICDDRG",36,0)
 I ICDDMS'=0&(ICDDMS'=1)&(ICDDMS'="") S ICDRTC=7 G ERR
"RTN","ICDDRG",37,0)
 ;   Patient Sex
"RTN","ICDDRG",38,0)
 I SEX'="M"&(SEX'="F")&(SEX'="") S ICDRTC=4 G ERR
"RTN","ICDDRG",39,0)
 ;   Default is today's FileMan date
"RTN","ICDDRG",40,0)
 I '$D(ICDDATE) S ICDDATE=DT
"RTN","ICDDRG",41,0)
 ;
"RTN","ICDDRG",42,0)
PRI ; Primary Diagnosis Related Variables
"RTN","ICDDRG",43,0)
 D KILL S ICDSEX($S(SEX="M":1,SEX="F":2,1:0))=""
"RTN","ICDDRG",44,0)
 S ICDTMP=$$ICDDX^ICDEX(+($G(ICDDX(1))),ICDDATE,,"I")
"RTN","ICDDRG",45,0)
 ;   Error if not found
"RTN","ICDDRG",46,0)
 I ICDTMP<0 S ICDRTC=1 G ERR
"RTN","ICDDRG",47,0)
 S ICDY(0)=$P(ICDTMP,U,2,99)
"RTN","ICDDRG",48,0)
 ;   Error if unacceptable or inactive
"RTN","ICDDRG",49,0)
 I $P(ICDY(0),"^",4)=1!($P(ICDY(0),"^",9)=0) S ICDRTC=1 G ERR
"RTN","ICDDRG",50,0)
 S ICDMDC=$P(ICDY(0),"^",5),ICDPD=$P(ICDY(0),"^",2),ICDRG=0
"RTN","ICDDRG",51,0)
 I $T(+2)[",57**",$$CSI^ICDEX(80,+($G(ICDDX(1))))=1 S ICDPD=$TR(ICDPD,";")
"RTN","ICDDRG",52,0)
 ;   Error if no MDC
"RTN","ICDDRG",53,0)
 I 'ICDMDC S ICDRTC=1 G ERR
"RTN","ICDDRG",54,0)
 D MDCG^ICDEX(+($G(ICDDX(1))),ICDDATE,.ICDMDC)
"RTN","ICDDRG",55,0)
 S:$O(ICDMDC(0))>0 ICDMDC=$P(ICDY(0),"^",5)
"RTN","ICDDRG",56,0)
 I $D(ICDMDC(12))!($D(ICDMDC(13))) S ICDMDC=$S(SEX="F":13,1:12) I SEX="" S ICDRTC=4 G ERR
"RTN","ICDDRG",57,0)
 S ICDTMP=$$GETDRG^ICDEX(80,+($G(ICDDX(1))),ICDDATE) I ICDTMP>0 S ICDPDRG=$P(ICDTMP,";") D
"RTN","ICDDRG",58,0)
 . F ICDI=1:1 Q:$P(ICDPDRG,"^",ICDI)']""  S ICDPDRG($P(ICDPDRG,"^",ICDI))="",ICDRG($P(ICDPDRG,"^",ICDI))=""
"RTN","ICDDRG",59,0)
 S ICD104=0,ICDP24=$P(ICDY(0),"^",12),ICDP25=$P(ICDY(0),"^",13) D SEX
"RTN","ICDDRG",60,0)
 ;   The following establishes Secondary Diagnosis Variables
"RTN","ICDDRG",61,0)
 S (ICDCCT,ICDMCCT,ICDSD)="",ICDCC=0,ICDMCC=0,ICDI=1
"RTN","ICDDRG",62,0)
 F ICDIZ=0:0 S ICDI=$O(ICDDX(ICDI)) Q:ICDI'>0  D  G:ICDRTC]"" ERR
"RTN","ICDDRG",63,0)
 . S ICDTMP=$$ICDDX^ICDEX(+($G(ICDDX(ICDI))),ICDDATE,,"I")
"RTN","ICDDRG",64,0)
 . I ICDTMP<0!'($P(ICDTMP,U,10)) S ICDRTC=8 Q
"RTN","ICDDRG",65,0)
 . S ICDY(0)=$P(ICDTMP,U,2,99),ICDDXT($P(ICDY(0),"^",1))=""
"RTN","ICDDRG",66,0)
 . S ICDP15($S($P(ICDY(0),"^",2)["J":1,1:0))=""
"RTN","ICDDRG",67,0)
 . D SEC,SEX G:ICDRTC]"" ERR
"RTN","ICDDRG",68,0)
 S:$D(ICDCCT(1)) ICDCC=1 K ICDCCT
"RTN","ICDDRG",69,0)
 S:$D(ICDMCCT(1)) ICDMCC=1 S:$D(ICDMCCT(2)) ICDMCC=2 K ICDMCCT
"RTN","ICDDRG",70,0)
 ;   The following establishes Operation/Prodedure Variables
"RTN","ICDDRG",71,0)
 N ICDOTMP S (ICDMAJ,ICDORNI,ICDOP,ICDOR,ICDOTMP)="",(ICDOCNT,ICDONR,ICDORNR,ICDNOR,ICDOPCT,ICDOPNR)=0
"RTN","ICDDRG",72,0)
 ;   Return ICD Operation/Procedure code info check if active
"RTN","ICDDRG",73,0)
 I $D(ICDPRC) F ICDI=1:1 Q:'$D(ICDPRC(ICDI))  X "S ICDTMP=$$ICDOP^ICDEX(+($G(ICDPRC(ICDI))),ICDDATE,,""I"") I ICDTMP<0!'($P(ICDTMP,U,10)) S ICDRTC=2 Q" I ICDRTC="" D 
"RTN","ICDDRG",74,0)
 . S ICDY(0)=$P(ICDTMP,U,2,99),ICDNOR=ICDNOR+1,ICDY=+($G(ICDPRC(ICDI))),ICDO24($S($P(ICDY(0),"^",3)'="":$P(ICDY(0),"^",3),1:"N"))="" D OPS,SEX
"RTN","ICDDRG",75,0)
 K ICDO24("N") G:ICDRTC]"" ERR
"RTN","ICDDRG",76,0)
 G ^ICDDRG0
"RTN","ICDDRG",77,0)
 ;
"RTN","ICDDRG",78,0)
SEC ; Secondary Diagnosis
"RTN","ICDDRG",79,0)
 ;   Is Secondary NCC for Primary
"RTN","ICDDRG",80,0)
 I ICDDATE>3070930.9 D
"RTN","ICDDRG",81,0)
 . S ICDMCC=$S(+($$ISA^ICDEX(+($G(ICDDX(ICDI))),+($G(ICDDX(1))),1.11))>0:0,$P(ICDY(0),"^",18)=2:2,($P(ICDY(0),"^",18)=1)&(ICDMCC'=2):1,1:ICDMCC),ICDMCCT(ICDMCC)=""
"RTN","ICDDRG",82,0)
 E  D
"RTN","ICDDRG",83,0)
 . S ICDCC=$S(+($$ISA^ICDEX(+($G(ICDDX(ICDI))),+($G(ICDDX(1))),1.11))>0:0,$P(ICDY(0),"^",7)=1:1,1:ICDCC),ICDCCT(ICDCC)=""
"RTN","ICDDRG",84,0)
 ;   Group ICD identifiers in one variable
"RTN","ICDDRG",85,0)
 I $L($P(ICDY(0),"^",2)) S ICDSD=$$TM(ICDSD,";")_";"_$$TM($P(ICDY(0),"^",2),";"),ICDSD=";"_$$TM(ICDSD,";")_";"
"RTN","ICDDRG",86,0)
 S ICDTMP=$$GETDRG^ICDEX(80,+($G(ICDDX(ICDI))),ICDDATE)
"RTN","ICDDRG",87,0)
 ;   If any of the following conditions are met set ICDSDRG array
"RTN","ICDDRG",88,0)
 I (($P(ICDY(0),"^",7)=1)!(ICDPD["h")!(ICDPD["J")!(ICDSD["h")),'$P(ICDTMP,";",3) D
"RTN","ICDDRG",89,0)
 . S ICDSDRG=$P(ICDTMP,";") F ICDK=1:1 Q:$P(ICDSDRG,"^",ICDK)']""  S ICDSDRG($P(ICDSDRG,"^",ICDK))=""
"RTN","ICDDRG",90,0)
 S ICDS24($S($P(ICDY(0),"^",12)'="":$P(ICDY(0),"^",12),1:"N"))="",ICDS25($S($P(ICDY(0),"^",13)'="":$P(ICDY(0),"^",13),1:0))=""
"RTN","ICDDRG",91,0)
 K ICDS24("N"),ICDS25(0) Q
"RTN","ICDDRG",92,0)
 ;
"RTN","ICDDRG",93,0)
OPS ; Operation/Procedures
"RTN","ICDDRG",94,0)
 I '$D(ICDOP(" "_$P(ICDY(0),"^",1))) S ICDOP(" "_$P(ICDY(0),"^",1))="",ICDOCNT=ICDOCNT+1
"RTN","ICDDRG",95,0)
 I $S($D(ICDMDC(12))!($D(ICDMDC(13)))>0:'$$MDCT^ICDEX(ICDY,ICDDATE,.ICDMDC,0),1:'$$MDCD^ICDEX(ICDY,ICDMDC,ICDDATE)) D
"RTN","ICDDRG",96,0)
 . S ICDONR=ICDONR+1,ICDORNI=ICDORNI_$P(ICDY(0),"^",2),ICDORNI($S($P(ICDY(0),"^",2)'="":$P(ICDY(0),"^",2),1:0))="" S:ICDORNR'=0 ICDORNR=1
"RTN","ICDDRG",97,0)
 I $L($P(ICDY(0),"^",2)) S ICDOR=$$TM(ICDOR,";")_";"_$$TM($P(ICDY(0),"^",2),";"),ICDOR=";"_$$TM(ICDOR,";")_";"
"RTN","ICDDRG",98,0)
 I +ICDY(0)>37.69,+ICDY(0)<37.84,ICDOR'["p" D
"RTN","ICDDRG",99,0)
 . N ICDCC3 D EN1^ICDDRG5 I ICDCC3 S ICDOR=ICDOR_"p" S:ICDOR'["O" ICDOR=ICDOR_"O"
"RTN","ICDDRG",100,0)
 I +ICDY(0)>80.999 I +ICDY(0)<81.40 N ICDCC3 D EN1^ICDDRG8 I ICDCC3 S ICDOR=ICDOR_"F"
"RTN","ICDDRG",101,0)
 ;   Major OR Procedure
"RTN","ICDDRG",102,0)
 S:$L($$MOR^ICDEX(ICDY)) ICDMAJ=ICDMAJ_$P($$MOR^ICDEX(ICDY),"^")_"^"
"RTN","ICDDRG",103,0)
 ;   Set ICDOTMP with DRGs for doing checks
"RTN","ICDDRG",104,0)
 S ICDOTMP=$P($$GETDRG^ICDEX(80.1,ICDY,ICDDATE,$G(ICDMDC)),";",1) S:+ICDOTMP'>0 ICDOTMP=""
"RTN","ICDDRG",105,0)
 I $P(ICDY(0),"^",2)["O" D
"RTN","ICDDRG",106,0)
 .S ICDOPCT=ICDOPCT+1
"RTN","ICDDRG",107,0)
 .I ICDOPNR=0 D
"RTN","ICDDRG",108,0)
 ..I $S($D(ICDMDC(12))!($D(ICDMDC(13)))>0:'$$MDCT^ICDEX(ICDY,ICDDATE,.ICDMDC,0),1:'$D(ICDOTMP)) S ICDOPNR=1
"RTN","ICDDRG",109,0)
 I +ICDOTMP>0 S ICDF=ICDOTMP F ICDFX=1:1 Q:$P(ICDF,"^",ICDFX)']""  S ICDODRG($P(ICDF,"^",ICDFX))=$P(ICDF,"^",ICDFX)
"RTN","ICDDRG",110,0)
 ;   Translate identifiers into common symbol, check for symbol
"RTN","ICDDRG",111,0)
 S ICD104=$S($P(ICDY(0),"^",2)["P":1,1:0),ICDNMDC($S($TR($P(ICDY(0),"^",2),"lqtrB","\\\\")["\":1,1:0))="" Q
"RTN","ICDDRG",112,0)
 ;
"RTN","ICDDRG",113,0)
 ; Miscellaneous
"RTN","ICDDRG",114,0)
ERR ;   Error Occured
"RTN","ICDDRG",115,0)
 S ICDDRG=$S(ICDDATE>3070930.9:999,1:470)
"RTN","ICDDRG",116,0)
 Q
"RTN","ICDDRG",117,0)
SEX ;   Get sex for DX or Procedure
"RTN","ICDDRG",118,0)
 S ICDSEX($S($P(ICDY(0),"^",10)="M":1,$P(ICDY(0),"^",10)="F":2,1:0))=""
"RTN","ICDDRG",119,0)
 Q
"RTN","ICDDRG",120,0)
TM(X,Y) ;   Trim Y
"RTN","ICDDRG",121,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDDRG",122,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDDRG",123,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDDRG",124,0)
 Q X
"RTN","ICDDRG",125,0)
KILL ;   Clean Environment
"RTN","ICDDRG",126,0)
 K ICD104,ICDJ,ICDJJ,ICDOCNT,ICDOR,ICDNOR,ICDP15,ICDPDRG,ICDRG,ICDSEX
"RTN","ICDDRG",127,0)
 K ICDSDRG,ICDODRG,ICDCC,ICDMCC,ICDOP,ICDORNR,ICDORNI,ICDP24,ICDP25,ICDPD
"RTN","ICDDRG",128,0)
 K ICDSD,ICDI,ICDK,ICDF,ICDFX,ICDFK,ICDY,ICDDXT,ICDIZ,ICDONR,ICDOPCT
"RTN","ICDDRG",129,0)
 K ICD,ICDCC2,ICDCC3,ICDGH,ICDL39,ICDMAJ,ICDNMDC,ICDNSD,ICDORNA,ICDREF
"RTN","ICDDRG",130,0)
 K ICDS24,ICDS25,ICDOPNR,ICDO24,ICDO25
"RTN","ICDDRG",131,0)
 Q
"RTN","ICDDRGM")
0^71^B31028651
"RTN","ICDDRGM",1,0)
ICDDRGM ;ALB/GRR/EG/ADL - Grouper Driver ;04/21/2014
"RTN","ICDDRGM",2,0)
 ;;18.0;DRG Grouper;**7,36,57**;Oct 20, 2000;Build 1
"RTN","ICDDRGM",3,0)
 ;
"RTN","ICDDRGM",4,0)
 ; ADL  Add Date prompt and passing of effective date for DRG CSV project
"RTN","ICDDRGM",5,0)
 ; ADL  Update DIC("S") code to screen using new function calls
"RTN","ICDDRGM",6,0)
 ; ADL  Update to access DRG file using new API for CSV Project
"RTN","ICDDRGM",7,0)
 ; KER  Remove direct global reads, update for ICD-10
"RTN","ICDDRGM",8,0)
 ; 
"RTN","ICDDRGM",9,0)
 ; Global Variables
"RTN","ICDDRGM",10,0)
 ;    ^DPT(               ICR  10035
"RTN","ICDDRGM",11,0)
 ;               
"RTN","ICDDRGM",12,0)
 ; External References
"RTN","ICDDRGM",13,0)
 ;    ^%DTC               ICR  10000
"RTN","ICDDRGM",14,0)
 ;    ^DIC                ICR  10006
"RTN","ICDDRGM",15,0)
 ;    ^DIR                ICR  10026
"RTN","ICDDRGM",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDDRGM",17,0)
 ;    H^XUS               ICR  10044
"RTN","ICDDRGM",18,0)
 ;    ^ICDDRG             ICR  N/A
"RTN","ICDDRGM",19,0)
 ;    $$DRG^ICDEX         ICR  N/A
"RTN","ICDDRGM",20,0)
 ;    $$DRGD^ICDEX        ICR  N/A
"RTN","ICDDRGM",21,0)
 ;    $$ROOT^ICDEX        ICR  N/A
"RTN","ICDDRGM",22,0)
 ;               
"RTN","ICDDRGM",23,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDDRGM",24,0)
 ;     DIRUT,ICDDATE,QUIT,Y
"RTN","ICDDRGM",25,0)
 ; 
"RTN","ICDDRGM",26,0)
 S U="^",DT=$$DT^XLFDT W !!?11,"DRG Grouper    Version ",$P($T(+2),";",3),!!
"RTN","ICDDRGM",27,0)
PAT ; Patient
"RTN","ICDDRGM",28,0)
 D KILL
"RTN","ICDDRGM",29,0)
 S ICDQU=0 K ICDEXP,SEX,ICDDX,ICDSURG
"RTN","ICDDRGM",30,0)
 D EFFDATE G KILL:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",31,0)
 S DIR(0)="Y",DIR("A")="DRGs for Registered PATIENTS  (Y/N)",DIR("B")="YES"
"RTN","ICDDRGM",32,0)
 S DIR("?")="Enter 'Yes' if the patient has been previously registered, enter 'No' for other patient, or '^' to quit."
"RTN","ICDDRGM",33,0)
 D ^DIR K DIR S ICDPT=Y G KILL:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",34,0)
PAT0 ; Patient - Ask Again
"RTN","ICDDRGM",35,0)
 G:ICDPT=0 ASK
"RTN","ICDDRGM",36,0)
VA ; VA Patient File #2
"RTN","ICDDRGM",37,0)
 S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:X=""!(X[U)!(Y'>0),OUT:$D(DTOUT) S DFN=+Y,(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2)
"RTN","ICDDRGM",38,0)
 D TAC G:ICDQU PAT D DAM G:ICDQU PAT
"RTN","ICDDRGM",39,0)
EN1 ; Entry point - Patient is Known (DFN)
"RTN","ICDDRGM",40,0)
 I $D(^DPT(DFN,.35)),$L(^DPT(DFN,.35)) D ALIVE G:ICDQU PAT
"RTN","ICDDRGM",41,0)
 S ICDEXP=$S($D(ICDEXP):ICDEXP,1:0)
"RTN","ICDDRGM",42,0)
 I AGE]"" N %,X,X1,X2 S X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE: ",AGE
"RTN","ICDDRGM",43,0)
CD ; Primary and Secondary DX
"RTN","ICDDRGM",44,0)
 K DIC S CC=0,DIC=$$ROOT^ICDEX(80),DIC(0)="AEQMZ",DIC("A")="Enter Primary diagnosis: " D  D ^DIC K DIC G Q:X=""!(X[U)!(Y'>0),OUT:$D(DTOUT) S ICDDX(1)=+Y
"RTN","ICDDRGM",45,0)
 . S DIC("S")="I '$P($$ICDDX^ICDEX(+Y,ICDDATE,,""I""),U,5),$$ISVALID^ICDEX(80,+Y,ICDDATE)"
"RTN","ICDDRGM",46,0)
 F ICDNSD=2:1 D  Q:X=""!(X[U)!(Y'>0)  G:$D(DTOUT) OUT S ICDDX(ICDNSD)=+Y
"RTN","ICDDRGM",47,0)
 . S DIC=$$ROOT^ICDEX(80),DIC(0)="AEQMZ"
"RTN","ICDDRGM",48,0)
 . S DIC("A")="Enter SECONDARY diagnosis: ",DIC("S")="I $$ISVALID^ICDEX(80,+Y,ICDDATE)"
"RTN","ICDDRGM",49,0)
 . D ^DIC K DIC
"RTN","ICDDRGM",50,0)
 G Q:X[U
"RTN","ICDDRGM",51,0)
OP ; Operation/Procedures
"RTN","ICDDRGM",52,0)
 S DIC("S")="I $$ISVALID^ICDEX(80.1,+Y,ICDDATE)" K ICDPRC
"RTN","ICDDRGM",53,0)
 W ! F ICDNOR=1:1 S DIC=$$ROOT^ICDEX(80.1),DIC(0)="AEQMZ",DIC("A")="Enter Operation/Procedure: " D ^DIC K DIC Q:X=""!(X[U)!(Y'>0)  G:$D(DTOUT) OUT S ICDPRC(ICDNOR)=+Y,ICDSURG(ICDNOR)=X
"RTN","ICDDRGM",54,0)
 K DIC G Q:X["^" D ^ICDDRG
"RTN","ICDDRGM",55,0)
 D WRT G PAT0
"RTN","ICDDRGM",56,0)
WRT ; Write Output
"RTN","ICDDRGM",57,0)
 S ICDDRG(0)=$$DRG^ICDEX(+ICDDRG,ICDDATE)
"RTN","ICDDRGM",58,0)
 W !!?9,"Effective Date: ","   ",ICDDSP
"RTN","ICDDRGM",59,0)
 W !,"Diagnosis Related Group: ",$J(ICDDRG,6),?40,"Avg len of stay: ",$J($P(ICDDRG(0),"^",8),6)
"RTN","ICDDRGM",60,0)
 W !?17,"Weight: ",$J($P(ICDDRG(0),"^",2),6),?40,"Local Breakeven: ",$J($P(ICDDRG(0),"^",12),6)
"RTN","ICDDRGM",61,0)
 W !?12," Low day(s): ",$J($P(ICDDRG(0),"^",3),6),?39,"Local low day(s): ",$J($P(ICDDRG(0),"^",9),6)
"RTN","ICDDRGM",62,0)
 W !?13," High days: ",$J($P(ICDDRG(0),"^",4),6),?40,"Local High days: ",$J($P(ICDDRG(0),"^",10),6)
"RTN","ICDDRGM",63,0)
 N ICDXD,ICDGDX,ICDGI S ICDXD=$$DRGD^ICDEX(ICDDRG,"ICDGDX",ICDDATE),ICDGI=0
"RTN","ICDDRGM",64,0)
 W !!,"DRG: ",ICDDRG,"-" F  S ICDGI=$O(ICDGDX(ICDGI)) Q:'+ICDGI  Q:ICDGDX(ICDGI)=" "  W ?10,ICDGDX(ICDGI),!
"RTN","ICDDRGM",65,0)
 Q
"RTN","ICDDRGM",66,0)
ERROR ; Write Errors
"RTN","ICDDRGM",67,0)
 D WRT I ICDRTC<5 W !!,"Invalid ",$S(ICDRTC=1:"Principal Diagnosis",ICDRTC=2:"Operation/Procedure",ICDRTC=3:"Age",ICDRTC=4:"Sex",1:"") G PAT0
"RTN","ICDDRGM",68,0)
 I ICDRTC=5 W !!,"Grouper needs to know if patient died during this episode!" G PAT0
"RTN","ICDDRGM",69,0)
 I ICDRTC=6 W !!,"Grouper needs to know if patient was transferred to an acute care facility!" G PAT0
"RTN","ICDDRGM",70,0)
 I ICDRTC=7 W !!,"Grouper needs to know if patient was discharged against medical advice!" G PAT0
"RTN","ICDDRGM",71,0)
 I ICDRTC=8 W !!,"Patient assigned newborn diagnosis code.  Check diagnosis!" G PAT0
"RTN","ICDDRGM",72,0)
 G PAT0
"RTN","ICDDRGM",73,0)
KILL ; Clean up Environment
"RTN","ICDDRGM",74,0)
 K DIC,DFN,DUOUT,DTOUT,ICDNOR,ICDDX,ICDPRC,ICDEXP,ICDTRS,ICDDMS,ICDDRG,ICDMDC,ICDO24,ICDP24,ICDP25,ICDRTC,ICDPT,ICDQU,ICDNSD,ICDNMDC
"RTN","ICDDRGM",75,0)
 K ICDMAJ,ICDS25,ICDSEX,AGE,DOB,CC,HICDRG,ICD,ICDCC3,ICDJ,ICDJJ,ICDL39,ICDFZ,ICDDT,ICDDSP,QUIT
"RTN","ICDDRGM",76,0)
 Q
"RTN","ICDDRGM",77,0)
Q ; Quit Current Patient
"RTN","ICDDRGM",78,0)
 G PAT
"RTN","ICDDRGM",79,0)
AGE ; Ask Patient Age
"RTN","ICDDRGM",80,0)
 S DIR(0)="NOA^0:124:0",DIR("A")="Patient's age: ",DIR("?")="Enter how old the patient is (0-124)." D ^DIR K DIR S AGE=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",81,0)
 Q
"RTN","ICDDRGM",82,0)
ALIVE ; Ask if Patient died during this episode of care
"RTN","ICDDRGM",83,0)
 S DIR(0)="YO",DIR("A")="Did patient die during this episode" D ^DIR K DIR S ICDEXP=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",84,0)
 Q
"RTN","ICDDRGM",85,0)
TAC ; Ask if Patient was Transferred to Acute Care
"RTN","ICDDRGM",86,0)
 S DIR(0)="YO",DIR("A")="Was patient transferred to an acute care facility" D ^DIR K DIR S ICDTRS=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",87,0)
 Q
"RTN","ICDDRGM",88,0)
DAM ; Ask if Patient was Discharged against Medical Advice
"RTN","ICDDRGM",89,0)
 S DIR(0)="YO",DIR("A")="Was patient discharged against medical advice" D ^DIR K DIR S ICDDMS=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",90,0)
 Q
"RTN","ICDDRGM",91,0)
SEX ; Ask for Patient's Sex
"RTN","ICDDRGM",92,0)
 S DIR(0)="SBO^M:MALE;F:FEMALE",DIR("?")="Enter M for Male and F for Female",DIR("A")="Patient's Sex" D ^DIR K DIR S SEX=Y G QQ:$D(DUOUT),OUT:$D(DTOUT)
"RTN","ICDDRGM",93,0)
 Q
"RTN","ICDDRGM",94,0)
QQ ; Quit All
"RTN","ICDDRGM",95,0)
 S ICDQU=1 Q
"RTN","ICDDRGM",96,0)
EFFDATE ; Prompts for effective date for DRG grouper?
"RTN","ICDDRGM",97,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","ICDDRGM",98,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","ICDDRGM",99,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","ICDDRGM",100,0)
 S ICDDATE=Y,ICDDSP=Y(0)
"RTN","ICDDRGM",101,0)
 Q
"RTN","ICDDRGM",102,0)
ASK ; Ask all
"RTN","ICDDRGM",103,0)
 K DTOUT,DUOUT D AGE G:ICDQU PAT D ALIVE G:ICDQU PAT D TAC G:ICDQU PAT D DAM G:ICDQU PAT D SEX G:ICDQU PAT G CD
"RTN","ICDDRGM",104,0)
OUT ; Exit Application
"RTN","ICDDRGM",105,0)
 G H^XUS
"RTN","ICDEX")
0^45^B73946334
"RTN","ICDEX",1,0)
ICDEX ;SLC/KER - ICD Extractor - Main Entry Points ;04/21/2014
"RTN","ICDEX",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEX",3,0)
 ;
"RTN","ICDEX",4,0)
 ; Global Variables
"RTN","ICDEX",5,0)
 ;    None
"RTN","ICDEX",6,0)
 ;
"RTN","ICDEX",7,0)
 ; External References
"RTN","ICDEX",8,0)
 ;    None
"RTN","ICDEX",9,0)
 ;
"RTN","ICDEX",10,0)
 ; Parameters for listed APIs
"RTN","ICDEX",11,0)
 ;
"RTN","ICDEX",12,0)
 ;    ARY     A local array passed by reference .ARY
"RTN","ICDEX",13,0)
 ;
"RTN","ICDEX",14,0)
 ;    CDT     This is the Code Set Versioning Date (Fileman
"RTN","ICDEX",15,0)
 ;            format) and is used to resolve the correct 
"RTN","ICDEX",16,0)
 ;            entry of a file or sub-file.
"RTN","ICDEX",17,0)
 ;
"RTN","ICDEX",18,0)
 ;    EDT     External Date allowed by Fileman
"RTN","ICDEX",19,0)
 ;
"RTN","ICDEX",20,0)
 ;    CODE    This is an ICD Diagnostic or Procedural code
"RTN","ICDEX",21,0)
 ;
"RTN","ICDEX",22,0)
 ;    FIELD   This is a field number from either file 80 or 80.1
"RTN","ICDEX",23,0)
 ;
"RTN","ICDEX",24,0)
 ;    FILE    File Number 80 or 80.1
"RTN","ICDEX",25,0)
 ;
"RTN","ICDEX",26,0)
 ;    FMT     Input format "I"=Internal "E"=External
"RTN","ICDEX",27,0)
 ;
"RTN","ICDEX",28,0)
 ;    IEN     Internal Entry Number of file 80 or 80.1
"RTN","ICDEX",29,0)
 ;
"RTN","ICDEX",30,0)
 ;    IEN1    Internal Entry Number of a specified sub-file
"RTN","ICDEX",31,0)
 ;
"RTN","ICDEX",32,0)
 ;    IEN2    Internal Entry Number of file 80 or 80.1
"RTN","ICDEX",33,0)
 ;
"RTN","ICDEX",34,0)
 ;    LEN     Length of the string of text in an array.
"RTN","ICDEX",35,0)
 ;            When passed, the short description or long
"RTN","ICDEX",36,0)
 ;            description will be parsed into string
"RTN","ICDEX",37,0)
 ;            lengths not to exceed the length passed.
"RTN","ICDEX",38,0)
 ;
"RTN","ICDEX",39,0)
 ;    MDC     Major Diagnostic Category (pointer to 
"RTN","ICDEX",40,0)
 ;            file #80.3)
"RTN","ICDEX",41,0)
 ;
"RTN","ICDEX",42,0)
 ;    NUM     Converts a code to a numeric representation 
"RTN","ICDEX",43,0)
 ;            of the code (used on the AN cross-reference)
"RTN","ICDEX",44,0)
 ;            for the $$NEXT and $$PREV APIs
"RTN","ICDEX",45,0)
 ;
"RTN","ICDEX",46,0)
 ;    REV     Directionality flag for $ORDER
"RTN","ICDEX",47,0)
 ;
"RTN","ICDEX",48,0)
 ;               0    $Order Forwards (default)
"RTN","ICDEX",49,0)
 ;               1    $Order in Reverse
"RTN","ICDEX",50,0)
 ;
"RTN","ICDEX",51,0)
 ;    ROOT    Global Root ^ICD9( or ^ICD0(
"RTN","ICDEX",52,0)
 ;
"RTN","ICDEX",53,0)
 ;    STD     Coding Standard
"RTN","ICDEX",54,0)
 ;
"RTN","ICDEX",55,0)
 ;               0    ICD (default)
"RTN","ICDEX",56,0)
 ;               1    CPT/HCPCS
"RTN","ICDEX",57,0)
 ;               2    DRG
"RTN","ICDEX",58,0)
 ;               3    LEX
"RTN","ICDEX",59,0)
 ;
"RTN","ICDEX",60,0)
 ;    SYS     Coding System
"RTN","ICDEX",61,0)
 ;
"RTN","ICDEX",62,0)
 ;               1    ICD     ICD-9-CM
"RTN","ICDEX",63,0)
 ;               2    ICP     ICD-9-PCS
"RTN","ICDEX",64,0)
 ;              30    1OD     ICD-10-CM
"RTN","ICDEX",65,0)
 ;              31    10P     ICD-10-PCS
"RTN","ICDEX",66,0)
 ;
"RTN","ICDEX",67,0)
 ;    TYPE    This is any identifier that can determine the
"RTN","ICDEX",68,0)
 ;            type of ICD code (diagnosis or procedure) that
"RTN","ICDEX",69,0)
 ;            is being used.  It can be a:
"RTN","ICDEX",70,0)
 ;
"RTN","ICDEX",71,0)
 ;              File Number           80 or 80.1
"RTN","ICDEX",72,0)
 ;              Global Root           ^ICD9( or ^ICD0(
"RTN","ICDEX",73,0)
 ;              Source Abbreviation   ICD, ICP, 10D OR 10P
"RTN","ICDEX",74,0)
 ;              Coding System         1, 2, 30, 31
"RTN","ICDEX",75,0)
 ;              Code                  250.01, B58.81, 50.11
"RTN","ICDEX",76,0)
 ;
"RTN","ICDEX",77,0)
 ;    TXT     Text String to search for in file 80/80.1
"RTN","ICDEX",78,0)
 ;
"RTN","ICDEX",79,0)
 ;    VER     Versioning flag
"RTN","ICDEX",80,0)
 ;
"RTN","ICDEX",81,0)
 ;               0  Unversioned search, return active/inactive codes
"RTN","ICDEX",82,0)
 ;               1  Versioned search, return only active codes
"RTN","ICDEX",83,0)
 ;
"RTN","ICDEX",84,0)
 ;    WORD    This is a single word parsed from a string
"RTN","ICDEX",85,0)
 ;
"RTN","ICDEX",86,0)
EN ; Main Entry Point
"RTN","ICDEX",87,0)
HELP ; Developer Help for an API
"RTN","ICDEX",88,0)
 D EN^ICDEXH Q
"RTN","ICDEX",89,0)
 ; 
"RTN","ICDEX",90,0)
 ; Code APIs
"RTN","ICDEX",91,0)
ICDDX(CODE,CDT,SYS,FMT,LOC) ; Dx Code Info
"RTN","ICDEX",92,0)
 Q $$ICDDX^ICDEXC($G(CODE),$P($G(CDT),".",1),$G(SYS),$G(FMT),$G(LOC))
"RTN","ICDEX",93,0)
ICDOP(CODE,CDT,SYS,FMT,LOC) ; Procedure Code Info
"RTN","ICDEX",94,0)
 Q $$ICDOP^ICDEXC($G(CODE),$P($G(CDT),".",1),$G(SYS),$G(FMT),$G(LOC))
"RTN","ICDEX",95,0)
ICDD(CODE,ARY,CDT,SYS,LEN) ; Description in Array
"RTN","ICDEX",96,0)
 Q $$ICDD^ICDEXC($G(CODE),.ARY,$P($G(CDT),".",1),$G(SYS),+($G(LEN)))
"RTN","ICDEX",97,0)
CODEN(CODE,FILE) ; IEN of code
"RTN","ICDEX",98,0)
 Q $$CODEN^ICDEXC($G(CODE),$G(FILE))
"RTN","ICDEX",99,0)
CODEC(FILE,IEN) ; Code from an IEN
"RTN","ICDEX",100,0)
 Q $$CODE^ICDEXC($G(FILE),$G(IEN))
"RTN","ICDEX",101,0)
CODEBA(CODE,ROOT) ; IEN from Code/Root
"RTN","ICDEX",102,0)
 Q $$CODEBA^ICDEXC($G(CODE),$G(ROOT))
"RTN","ICDEX",103,0)
CODEABA(CODE,ROOT,SYS) ; IEN from Code/Root/Coding System
"RTN","ICDEX",104,0)
 Q $$CODEABA^ICDEXC($G(CODE),$G(ROOT),$G(SYS))
"RTN","ICDEX",105,0)
 ;  
"RTN","ICDEX",106,0)
 ; Code APIs (code data/versioned data)
"RTN","ICDEX",107,0)
CODEFI(CODE) ; File for code
"RTN","ICDEX",108,0)
 Q $$CODEFI^ICDEXC2($G(CODE))
"RTN","ICDEX",109,0)
CODECS(CODE,FILE,CDT) ; Coding system for code/file
"RTN","ICDEX",110,0)
 Q $$CODECS^ICDEXC2($G(CODE),$G(FILE),$P($G(CDT),".",1))
"RTN","ICDEX",111,0)
CSI(FILE,IEN) ; Coding system for IEN
"RTN","ICDEX",112,0)
 Q $$CSI^ICDEXC2($G(FILE),$G(IEN))
"RTN","ICDEX",113,0)
VMDC(IEN,CDT,FMT) ; Major Diagnostic Category
"RTN","ICDEX",114,0)
 Q $$VMDC^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",115,0)
VAGEL(IEN,CDT,FMT) ; Age Low
"RTN","ICDEX",116,0)
 Q $$VAGEL^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",117,0)
VAGEH(IEN,CDT,FMT) ; Age High
"RTN","ICDEX",118,0)
 Q $$VAGEH^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",119,0)
VCC(IEN,CDT,FMT) ; Complication/Comorbidity
"RTN","ICDEX",120,0)
 Q $$VCC^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",121,0)
VCCP(IEN,CDT,FMT) ; CC Primary Flag
"RTN","ICDEX",122,0)
 Q $$VCCP^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",123,0)
VSEX(FILE,IEN,CDT,FMT) ; Sex for file
"RTN","ICDEX",124,0)
 Q $$VSEX^ICDEXC2($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",125,0)
SAI(FILE,IEN,CDT) ; Status/Active/Inactive Dates
"RTN","ICDEX",126,0)
 Q $$SAI^ICDEXC2($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",127,0)
 ;  
"RTN","ICDEX",128,0)
 ; Code APIs (text/strings)
"RTN","ICDEX",129,0)
VST(FILE,IEN,CDT)     ; Short Text
"RTN","ICDEX",130,0)
 Q $$VST^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",131,0)
VLT(FILE,IEN,CDT) ; Long Text
"RTN","ICDEX",132,0)
 Q $$VLT^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",133,0)
VSTD(IEN,CDT)  ; Short Text - Diagnosis
"RTN","ICDEX",134,0)
 Q $$VSTD^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",135,0)
VSTP(IEN,CDT) ; Short Text - Procedures
"RTN","ICDEX",136,0)
 Q $$VSTP^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",137,0)
VLTD(IEN,CDT) ; Description - Diagnosis
"RTN","ICDEX",138,0)
 Q $$VLTD^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",139,0)
VLTP(IEN,CDT) ; Description - Procedures
"RTN","ICDEX",140,0)
 Q $$VLTP^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",141,0)
SD(FILE,IEN,CDT,ARY,LEN) ; Short Description (formatted)
"RTN","ICDEX",142,0)
 Q $$SD^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(LEN))
"RTN","ICDEX",143,0)
LD(FILE,IEN,CDT,ARY,LEN) ; Long Description (formatted)
"RTN","ICDEX",144,0)
 Q $$LD^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(LEN))
"RTN","ICDEX",145,0)
SDH(FILE,IEN,ARY) ; Short Description History
"RTN","ICDEX",146,0)
 Q $$SDH^ICDEXC4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",147,0)
LDH(FILE,IEN,ARY) ; Long Description History
"RTN","ICDEX",148,0)
 Q $$LDH^ICDEXC4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",149,0)
PAR(ARY,LEN) ; Parse Array
"RTN","ICDEX",150,0)
 D PAR^ICDEXC3(.ARY,$G(LEN)) Q
"RTN","ICDEX",151,0)
IEN(CODE,ROOT,SYS) ; IEN from Code/Root/Coding System
"RTN","ICDEX",152,0)
 Q $$IEN^ICDEXC3($G(CODE),$G(ROOT),$G(SYS))
"RTN","ICDEX",153,0)
 ;  
"RTN","ICDEX",154,0)
 ; API Support
"RTN","ICDEX",155,0)
STATCHK(CODE,CDT,SYS) ; Status of ICD Code
"RTN","ICDEX",156,0)
 Q $$STATCHK^ICDEXA($G(CODE),$P($G(CDT),".",1),$G(SYS))
"RTN","ICDEX",157,0)
DTBR(CDT,STD,SYS) ; Date Business Rules
"RTN","ICDEX",158,0)
 Q $$DTBR^ICDEXA($P($G(CDT),".",1),$G(STD),$G(SYS))
"RTN","ICDEX",159,0)
IMP(SYS,CDT) ; Implementation Date
"RTN","ICDEX",160,0)
 Q $$IMP^ICDEXA($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",161,0)
MSG(CDT,STD,SYS) ; Warning Message
"RTN","ICDEX",162,0)
 Q $$MSG^ICDEXA($P($G(CDT),".",1),$G(STD),$G(SYS))
"RTN","ICDEX",163,0)
SEL(FILE,IEN) ; Entry is Selectable
"RTN","ICDEX",164,0)
 Q $$SEL^ICDEXA($G(FILE),$G(IEN))
"RTN","ICDEX",165,0)
NEXT(CODE,SYS,CDT) ; Next Code
"RTN","ICDEX",166,0)
 Q $$NEXT^ICDEXA2($G(CODE),$G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",167,0)
PREV(CODE,SYS,CDT) ; Previous Code
"RTN","ICDEX",168,0)
 Q $$PREV^ICDEXA2($G(CODE),$G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",169,0)
HIST(CODE,ARY,SYS) ; Activation History
"RTN","ICDEX",170,0)
 Q $$HIST^ICDEXA2($G(CODE),.ARY,$G(SYS))
"RTN","ICDEX",171,0)
PERIOD(CODE,ARY,SYS) ; Activation Periods
"RTN","ICDEX",172,0)
 Q $$PERIOD^ICDEXA2($G(CODE),.ARY,$G(SYS))
"RTN","ICDEX",173,0)
OBA(FILE,CODE,SYS,REV) ; $Order BA/ABA
"RTN","ICDEX",174,0)
 Q $$OBA^ICDEXA3($G(FILE),$G(CODE),$G(SYS),$G(REV))
"RTN","ICDEX",175,0)
OD(FILE,WORD,SYS,REV) ; $Order D/AD
"RTN","ICDEX",176,0)
 Q $$OD^ICDEXA3($G(FILE),$G(WORD),$G(SYS),$G(REV))
"RTN","ICDEX",177,0)
DLM(FILE,IEN,FIELD,CDT) ; Date Last Modified
"RTN","ICDEX",178,0)
 Q $$DLM^ICDEXA3($G(FILE),$G(IEN),$G(FIELD),$P($G(CDT),".",1))
"RTN","ICDEX",179,0)
CS(FILE,FMT,CDT) ; Select Coding System (lookup)
"RTN","ICDEX",180,0)
 Q $$CS^ICDEXA3($G(FILE),$G(FMT),$P($G(CDT),".",1))
"RTN","ICDEX",181,0)
 ;  
"RTN","ICDEX",182,0)
 ; Data Extraction Support
"RTN","ICDEX",183,0)
EFF(FILE,IEN,CDT) ; Effective date and status
"RTN","ICDEX",184,0)
 Q $$EFF^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",185,0)
IA(FILE,IEN) ; Initial Activation Date
"RTN","ICDEX",186,0)
 Q $$IA^ICDEXS($G(FILE),$G(IEN))
"RTN","ICDEX",187,0)
LA(FILE,IEN,CDT) ; Last Activation Date
"RTN","ICDEX",188,0)
 Q $$LA^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",189,0)
LI(FILE,IEN,CDT) ; Last Inactivation Date
"RTN","ICDEX",190,0)
 Q $$LI^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",191,0)
LS(FILE,IEN,CDT,FMT) ; Last Status
"RTN","ICDEX",192,0)
 Q $$LS^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",193,0)
NUM(CODE) ; Convert Code to a Numeric
"RTN","ICDEX",194,0)
 Q $$NUM^ICDEXS($G(CODE))
"RTN","ICDEX",195,0)
COD(NUM) ; Convert Numeric to a Code
"RTN","ICDEX",196,0)
 Q $$COD^ICDEXS($G(NUM))
"RTN","ICDEX",197,0)
IE(CODE) ; Internal or External Format
"RTN","ICDEX",198,0)
 Q $$IE^ICDEXS($G(CODE))
"RTN","ICDEX",199,0)
FILE(SYS) ; File Number from System
"RTN","ICDEX",200,0)
 Q $$FILE^ICDEXS($G(SYS))
"RTN","ICDEX",201,0)
ROOT(SYS) ; Global Root
"RTN","ICDEX",202,0)
 Q $$ROOT^ICDEXS($G(SYS))
"RTN","ICDEX",203,0)
SYS(SYS,CDT,FMT) ; Resolve System (uses file 80.4)
"RTN","ICDEX",204,0)
 Q $$SYS^ICDEXS($G(SYS),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",205,0)
SINFO(SYS,CDT) ; System Info (uses file 80.4)
"RTN","ICDEX",206,0)
 Q $$SINFO^ICDEXS($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",207,0)
SNAM(SYS) ; System Name from Coding System
"RTN","ICDEX",208,0)
 Q $$SNAM^ICDEXS($G(SYS))
"RTN","ICDEX",209,0)
SAB(SYS,CDT) ; Source Abbreviation
"RTN","ICDEX",210,0)
 Q $$SAB^ICDEXS($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",211,0)
EXC(FILE,IEN) ; Exclude From lookup
"RTN","ICDEX",212,0)
 Q $$EXC^ICDEXS($G(FILE),$G(IEN))
"RTN","ICDEX",213,0)
VER(SYS,REL) ; Coding System Version
"RTN","ICDEX",214,0)
 Q $$VER^ICDEXS2($G(SYS),$G(REL))
"RTN","ICDEX",215,0)
HDR(FILE) ; File Header Node
"RTN","ICDEX",216,0)
 Q $$HDR^ICDEXS2($G(FILE))
"RTN","ICDEX",217,0)
 ;  
"RTN","ICDEX",218,0)
 ; DRG Grouper Extraction Support
"RTN","ICDEX",219,0)
ISA(IEN1,IEN2,FIELD) ; Is Code 1 a condition of Code 2 (ICDDRG)
"RTN","ICDEX",220,0)
 Q $$ISA^ICDEXD($G(IEN1),$G(IEN2),$G(FIELD))
"RTN","ICDEX",221,0)
ISVALID(FILE,IEN,CDT) ; Is an ICD code Valid
"RTN","ICDEX",222,0)
 Q $$ISVALID^ICDEXD2($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDEX",223,0)
EXIST(IEN,FIELD) ; Does a condition Exist (ICDDRGX)
"RTN","ICDEX",224,0)
 Q $$EXIST^ICDEXD($G(IEN),$G(FIELD))
"RTN","ICDEX",225,0)
GETDRG(FILE,IEN,CDT,MDC) ; DRGs for an Fiscal Year (ICDGTDRG)
"RTN","ICDEX",226,0)
 Q $$GETDRG^ICDEXD($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(MDC))
"RTN","ICDEX",227,0)
MD(FILE,IEN,CDT,ARY,FLAG) ; MDC DRGs
"RTN","ICDEX",228,0)
 D MD^ICDEXD2($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(FLAG))
"RTN","ICDEX",229,0)
EFM(EDT) ; Convert External Date to FM (ICDGTDRG)
"RTN","ICDEX",230,0)
 Q $$EFM^ICDEXD2($G(EDT))
"RTN","ICDEX",231,0)
FY(CDT) ; FY 4 digit year (ICDGTDRG)
"RTN","ICDEX",232,0)
 Q $$FY^ICDEXD2($P($G(CDT),".",1))
"RTN","ICDEX",233,0)
VMDCDX(IEN,CDT) ; Versioned MDC for DX (ICDREF)
"RTN","ICDEX",234,0)
 Q $$VMDCDX^ICDEXD2($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",235,0)
VMDCOP(IEN,MDC,CDT) ; Versioned MDC for Op/Pro (ICDREF)
"RTN","ICDEX",236,0)
 Q $$VMDCOP^ICDEXD2($G(IEN),$G(MDC),$P($G(CDT),".",1))
"RTN","ICDEX",237,0)
REF(IEN,CDT) ; Return Reference Table (ICDREF)
"RTN","ICDEX",238,0)
 Q $$REF^ICDEXD2($G(IEN),$G(CDT))
"RTN","ICDEX",239,0)
MDCG(IEN,CDT,ARY) ; Set up array of MDCs (ICDDRG)
"RTN","ICDEX",240,0)
 D MDCG^ICDEXD2($G(IEN),$P($G(CDT),".",1),.ARY) Q
"RTN","ICDEX",241,0)
MDCT(IEN,CDT,ARY,FMT) ; For Multiple MDC DX Codes (ICDDRG)
"RTN","ICDEX",242,0)
 Q $$MDCT^ICDEXD2($G(IEN),$P($G(CDT),".",1),.ARY,$G(FMT))
"RTN","ICDEX",243,0)
MDCD(IEN,MDC,CDT) ; Check for default MDC (ICDDRG)
"RTN","ICDEX",244,0)
 Q $$MDCD^ICDEXD2($G(IEN),$G(MDC),$G(CDT))
"RTN","ICDEX",245,0)
MDCN(IEN) ; Major Diagnostic Category Name
"RTN","ICDEX",246,0)
 Q $$MDCN^ICDEXD2(+($G(IEN)))
"RTN","ICDEX",247,0)
MOR(IEN) ; Major O.R. Procedure (ICDDRG)
"RTN","ICDEX",248,0)
 Q $$MOR^ICDEXD2($G(IEN))
"RTN","ICDEX",249,0)
UPDX(IEN) ; Unacceptable as Principle DX
"RTN","ICDEX",250,0)
 Q $$UPDX^ICDEXD2($G(IEN))
"RTN","ICDEX",251,0)
NOT(IEN,SUB,FMT) ; Codes not Used With
"RTN","ICDEX",252,0)
 Q $$NOT^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",253,0)
REQ(IEN,SUB,FMT) ; Codes Required With
"RTN","ICDEX",254,0)
 Q $$REQ^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",255,0)
NCC(IEN,SUB,FMT) ; Codes not Considered CC With
"RTN","ICDEX",256,0)
 Q $$NCC^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",257,0)
ICDID(FILE,ID,CODE) ; Check if ICD identifier exist
"RTN","ICDEX",258,0)
 Q $$ICDID^ICDEXD4($G(FILE),$G(ID),$G(CODE))
"RTN","ICDEX",259,0)
IDSTR(FILE,IEN) ; ICD identifier string (legacy)
"RTN","ICDEX",260,0)
 Q $$IDSTR^ICDEXD4($G(FILE),$G(IEN))
"RTN","ICDEX",261,0)
ICDIDS(FILE,IEN,ARY) ; Returns array of ICD identifiers
"RTN","ICDEX",262,0)
 Q $$ICDIDS^ICDEXD4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",263,0)
ISOWNCC(IEN,CDT,FMT) ; Return CC if DX is Own CC
"RTN","ICDEX",264,0)
 Q $$ISOWNCC^ICDEXD4($G(IEN),$G(CDT),$G(FMT))
"RTN","ICDEX",265,0)
ICDRGCC(DRG,CDT) ; Get CC/MCC flag from DRG
"RTN","ICDEX",266,0)
 Q $$ICDRGCC^ICDEXD4($G(DRG),$G(CDT))
"RTN","ICDEX",267,0)
INQ ; Inquire to the ICD Files
"RTN","ICDEX",268,0)
 D INQ^ICDEXD4 Q
"RTN","ICDEX",269,0)
EFD(X) ; Get Effective date in range (interactive)
"RTN","ICDEX",270,0)
 Q $$EFD^ICDEXD2
"RTN","ICDEX",271,0)
PDXE(IEN) ; Primary DX Exclusion Code
"RTN","ICDEX",272,0)
 Q $$PDXE^ICDEXD3($G(IEN))
"RTN","ICDEX",273,0)
DRG(CODE,CDT) ; Returns information about a DRG
"RTN","ICDEX",274,0)
 Q $$DRG^ICDEXD5($G(CODE),$G(CDT))
"RTN","ICDEX",275,0)
DRGW(IEN) ; DRG Weighted Work Unit (WWU)
"RTN","ICDEX",276,0)
 Q $$DRGW^ICDEXD5($G(IEN))
"RTN","ICDEX",277,0)
DRGDES(IEN,CDT,ARY,LEN) ; Formatted DRG Description
"RTN","ICDEX",278,0)
 Q $$DRGDES^ICDEXD5($G(IEN),$G(CDT),.ARY,$G(LEN))
"RTN","ICDEX",279,0)
DRGD(CODE,OUTARR,CDT) ; Unformatted DRG Description
"RTN","ICDEX",280,0)
 Q $$DRGD^ICDEXD5($G(CODE),$G(OUTARR),$G(CDT))
"RTN","ICDEX",281,0)
DRGN(CODE) ; Return the IEN of DRG
"RTN","ICDEX",282,0)
 Q $$DRGN^ICDEXD5($G(CODE))
"RTN","ICDEX",283,0)
DRGC(IEN) ; DRG Code
"RTN","ICDEX",284,0)
 Q $$DRGC^ICDEXD5($G(IEN))
"RTN","ICDEX",285,0)
GETDATE(IEN) ; Calculate Effective Date
"RTN","ICDEX",286,0)
 Q $$GETDATE^ICDEXD5($G(IEN))
"RTN","ICDEX",287,0)
 ;  
"RTN","ICDEX",288,0)
 ; Lookup
"RTN","ICDEX",289,0)
LK ; Special Lookup (called by DIC)
"RTN","ICDEX",290,0)
 D LK^ICDEXLK Q
"RTN","ICDEX",291,0)
LKTX(X,ROOT,CDT,SYS,VER,OUT) ; Lookup Text in ROOT (silent)
"RTN","ICDEX",292,0)
 Q $$LK^ICDEXLK3($G(X),$G(ROOT),$P($G(CDT),".",1),$G(SYS),$G(VER),$G(OUT))
"RTN","ICDEX",293,0)
Y(ROOT,IEN,CDT,FMT) ; Output Variable Y from Lookup
"RTN","ICDEX",294,0)
 D Y^ICDEXLK2($G(ROOT),$G(IEN),$P($G(CDT),".",1),$G(FMT)) Q
"RTN","ICDEX",295,0)
TOKEN(X,ROOT,SYS,ARY) ; Parse Text into Words
"RTN","ICDEX",296,0)
 D TOKEN^ICDTOKN($G(X),$G(ROOT),$G(SYS),.ARY) Q
"RTN","ICDEX",297,0)
WORD(X,ROOT,SYS) ; Word is Found
"RTN","ICDEX",298,0)
 Q $$WORD^ICDEXLK3($G(X),$G(ROOT),$G(SYS))
"RTN","ICDEXA")
0^42^B28447306
"RTN","ICDEXA",1,0)
ICDEXA ;SLC/KER - ICD Extractor - APIs/Utilities ;04/21/2014
"RTN","ICDEXA",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXA",3,0)
 ;               
"RTN","ICDEXA",4,0)
 ; Global Variables
"RTN","ICDEXA",5,0)
 ;    None
"RTN","ICDEXA",6,0)
 ;               
"RTN","ICDEXA",7,0)
 ; External References
"RTN","ICDEXA",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXA",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXA",10,0)
 ;               
"RTN","ICDEXA",11,0)
DTBR(CDT,STD,SYS) ; Date Business Rules
"RTN","ICDEXA",12,0)
 ;
"RTN","ICDEXA",13,0)
 ; Input:
"RTN","ICDEXA",14,0)
 ; 
"RTN","ICDEXA",15,0)
 ;   CDT   Code Date to check (FileMan format, default=Today)
"RTN","ICDEXA",16,0)
 ;   STD   Standard
"RTN","ICDEXA",17,0)
 ;   
"RTN","ICDEXA",18,0)
 ;           0 = ICD (Default)
"RTN","ICDEXA",19,0)
 ;           1 = CPT/HCPCS
"RTN","ICDEXA",20,0)
 ;           2 = DRG
"RTN","ICDEXA",21,0)
 ;           
"RTN","ICDEXA",22,0)
 ;   SYS   Coding System
"RTN","ICDEXA",23,0)
 ;   
"RTN","ICDEXA",24,0)
 ;           1 = ICD-9-CM
"RTN","ICDEXA",25,0)
 ;           2 = ICD-9-PCS
"RTN","ICDEXA",26,0)
 ;          30 = ICD-10-CM
"RTN","ICDEXA",27,0)
 ;          31 = ICD-10-PCS
"RTN","ICDEXA",28,0)
 ;
"RTN","ICDEXA",29,0)
 ; Output:
"RTN","ICDEXA",30,0)
 ; 
"RTN","ICDEXA",31,0)
 ;   If CDT < ICD-9 Date and STD=0, use ICD-9 Date
"RTN","ICDEXA",32,0)
 ;   If CDT < ICD-10 Date and STD=0 and SYS=30, use ICD-10 Date
"RTN","ICDEXA",33,0)
 ;   If CDT < ICD-10 Date and STD=0 and SYS=31, use ICD-10 Date
"RTN","ICDEXA",34,0)
 ;   If CDT < 2890101 and STD=1, use 2890101
"RTN","ICDEXA",35,0)
 ;   If CDT < 2821001 and STD=2, use 2821001
"RTN","ICDEXA",36,0)
 ;   If CDT is year only, use first of the year
"RTN","ICDEXA",37,0)
 ;   If CDT is year and month only, use first of the month
"RTN","ICDEXA",38,0)
 ;
"RTN","ICDEXA",39,0)
 S CDT=$G(CDT)
"RTN","ICDEXA",40,0)
 ;   Nothing Passed, use TODAY
"RTN","ICDEXA",41,0)
 Q:'$G(CDT) $$DT^XLFDT
"RTN","ICDEXA",42,0)
 ;   Invalid Date Format, use TODAY
"RTN","ICDEXA",43,0)
 Q:$L($P(CDT,"."))'=7 $$DT^XLFDT
"RTN","ICDEXA",44,0)
 N BRDAT ;   Business rule date
"RTN","ICDEXA",45,0)
 N ICD9,ICD10,ICDDS
"RTN","ICDEXA",46,0)
 S ICD9=$$IMP^ICDEX(1),ICD10=$$IMP^ICDEX(30)
"RTN","ICDEXA",47,0)
 S ICDDS=ICD9_"^2890101^2821001"
"RTN","ICDEXA",48,0)
 S STD=+$G(STD) S:STD>2!(STD<0) STD=0  S SYS=$G(SYS)
"RTN","ICDEXA",49,0)
 S BRDAT=+$P(ICDDS,"^",STD+1)
"RTN","ICDEXA",50,0)
 S:+($G(STD))'>0&("^30^31^"[("^"_SYS_"^")) BRDAT=ICD10
"RTN","ICDEXA",51,0)
 I CDT#10000=0 S CDT=CDT+101
"RTN","ICDEXA",52,0)
 S:CDT#100=0 CDT=CDT+1
"RTN","ICDEXA",53,0)
 Q $S(CDT<BRDAT:BRDAT,1:CDT)
"RTN","ICDEXA",54,0)
 ;
"RTN","ICDEXA",55,0)
IMP(SYS,CDT) ; Coding System Implementation Date
"RTN","ICDEXA",56,0)
 ;
"RTN","ICDEXA",57,0)
 ; Input:
"RTN","ICDEXA",58,0)
 ; 
"RTN","ICDEXA",59,0)
 ;   SYS   Coding System
"RTN","ICDEXA",60,0)
 ;   
"RTN","ICDEXA",61,0)
 ;           1 = ICD-9-CM
"RTN","ICDEXA",62,0)
 ;           2 = ICD-9-PCS
"RTN","ICDEXA",63,0)
 ;          30 = ICD-10-CM
"RTN","ICDEXA",64,0)
 ;          31 = ICD-10-PCS
"RTN","ICDEXA",65,0)
 ;
"RTN","ICDEXA",66,0)
 ; Output:
"RTN","ICDEXA",67,0)
 ; 
"RTN","ICDEXA",68,0)
 ;   $$IMP  Date the Coding System was Implemented/Activated
"RTN","ICDEXA",69,0)
 ;   
"RTN","ICDEXA",70,0)
 N ICDD,ICDS,ICDN
"RTN","ICDEXA",71,0)
 S ICDD=$S($G(CDT)'?7N:$$DT^XLFDT,1:$G(CDT))
"RTN","ICDEXA",72,0)
 S ICDS=$$SYS^ICDEX($G(SYS),ICDD,"I") Q:+ICDS'>0 "-1^Coding system Unknown"
"RTN","ICDEXA",73,0)
 S ICDN=$P($G(^ICDS(+ICDS,0)),"^",4) Q:ICDN'?7N "-1^Implementation Date not found"
"RTN","ICDEXA",74,0)
 Q ICDN
"RTN","ICDEXA",75,0)
 ;
"RTN","ICDEXA",76,0)
MSG(CDT,STD,SYS) ; Inform of code text inaccuracy
"RTN","ICDEXA",77,0)
 ;
"RTN","ICDEXA",78,0)
 ; Input:
"RTN","ICDEXA",79,0)
 ; 
"RTN","ICDEXA",80,0)
 ;   CDT   Code Date to check (FileMan format, Default = today)
"RTN","ICDEXA",81,0)
 ;   STD   Code System
"RTN","ICDEXA",82,0)
 ;    
"RTN","ICDEXA",83,0)
 ;            0   ICD (default)
"RTN","ICDEXA",84,0)
 ;            1   CPT/HCPCS
"RTN","ICDEXA",85,0)
 ;            2   DRG
"RTN","ICDEXA",86,0)
 ;            3   LEX
"RTN","ICDEXA",87,0)
 ;           
"RTN","ICDEXA",88,0)
 ;   SYS   Coding System
"RTN","ICDEXA",89,0)
 ;   
"RTN","ICDEXA",90,0)
 ;           1 = ICD-9-CM
"RTN","ICDEXA",91,0)
 ;           2 = ICD-9-PCS
"RTN","ICDEXA",92,0)
 ;          30 = ICD-10-CM
"RTN","ICDEXA",93,0)
 ;          31 = ICD-10-PCS
"RTN","ICDEXA",94,0)
 ;          
"RTN","ICDEXA",95,0)
 ; Output: 
"RTN","ICDEXA",96,0)
 ; 
"RTN","ICDEXA",97,0)
 ;   User Alert Message
"RTN","ICDEXA",98,0)
 ;
"RTN","ICDEXA",99,0)
 S STD=+$G(STD) S:STD>3!(STD<0) STD=0
"RTN","ICDEXA",100,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR(CDT,STD,$G(SYS)))
"RTN","ICDEXA",101,0)
 N MSGTXT,MSGDAT S MSGDAT=3021001,MSGTXT="CODE TEXT MAY BE INACCURATE"
"RTN","ICDEXA",102,0)
 I STD<3 Q $S(CDT<MSGDAT:MSGTXT,1:"")
"RTN","ICDEXA",103,0)
 I STD=3,CDT'<3031001 Q ""
"RTN","ICDEXA",104,0)
 Q MSGTXT
"RTN","ICDEXA",105,0)
 ;
"RTN","ICDEXA",106,0)
STATCHK(CODE,CDT,SYS) ; Check Status of ICD Code
"RTN","ICDEXA",107,0)
 ;
"RTN","ICDEXA",108,0)
 ; Input:
"RTN","ICDEXA",109,0)
 ; 
"RTN","ICDEXA",110,0)
 ;    CODE   ICD Code  REQUIRED
"RTN","ICDEXA",111,0)
 ;    CDT    Date to screen against (default = TODAY)
"RTN","ICDEXA",112,0)
 ;    SYS    Numeric Coding System (optional, however, if
"RTN","ICDEXA",113,0)
 ;           specified it must be correct)
"RTN","ICDEXA",114,0)
 ;    
"RTN","ICDEXA",115,0)
 ; Output:
"RTN","ICDEXA",116,0)
 ; 
"RTN","ICDEXA",117,0)
 ;    3-Piece String containing the code's status
"RTN","ICDEXA",118,0)
 ;    and the IEN if the code exists, else -1.
"RTN","ICDEXA",119,0)
 ;    The following are possible outputs:
"RTN","ICDEXA",120,0)
 ;    
"RTN","ICDEXA",121,0)
 ;         1^IEN^Effective Date     Active Code
"RTN","ICDEXA",122,0)
 ;         0^IEN^Effective Date     Inactive Code
"RTN","ICDEXA",123,0)
 ;         0^IEN^Null               Future Activation (pending)
"RTN","ICDEXA",124,0)
 ;         0^-1^Error Message       Code not Found or Error
"RTN","ICDEXA",125,0)
 ;
"RTN","ICDEXA",126,0)
 ; This API requires the ACT Cross-Reference
"RTN","ICDEXA",127,0)
 ;     ^ICD9("ACT",<code>,<status>,<date>,<ien>)
"RTN","ICDEXA",128,0)
 ;     ^ICD0("ACT",<code>,<status>,<date>,<ien>)
"RTN","ICDEXA",129,0)
 ;
"RTN","ICDEXA",130,0)
 N ICDC,ICDD,ICDIEN,ICDI,ICDA,ICDG,ICDR,ICDS,ICDY,ICDF,ICDEF,ICDBR,ICDTD,X
"RTN","ICDEXA",131,0)
 S ICDS="",ICDC=$G(CODE) Q:'$L(ICDC) "0^-1^No code specified"
"RTN","ICDEXA",132,0)
 S:$L($G(SYS)) ICDS=$$SYS^ICDEX($G(SYS),$G(CDT))
"RTN","ICDEXA",133,0)
 S:'$L($G(SYS))&($L(ICDC)) ICDS=$$SYS^ICDEX(ICDC)
"RTN","ICDEXA",134,0)
 Q:'$L($G(SYS))&(+ICDS'>0) "0^-1^No coding system specified"
"RTN","ICDEXA",135,0)
 Q:$L($G(SYS))&(+ICDS'>0) "0^-1^Invalid coding system specified"
"RTN","ICDEXA",136,0)
 ;    Case 1:  Not Valid                           0^-1
"RTN","ICDEXA",137,0)
 ;             Fails Pattern Match for Code
"RTN","ICDEXA",138,0)
 S ICDF=$$FILE^ICDEX(ICDS) S:ICDF'>0 ICDF=$$CODEFI^ICDEX(CODE)
"RTN","ICDEXA",139,0)
 S:+ICDF'>0 ICDF="" S CODE=$$CODEN^ICDEX(CODE,ICDF)
"RTN","ICDEXA",140,0)
 S:+ICDF>0&(+CODE>0) ICDC=$$CODEC^ICDEX(+ICDF,+CODE)
"RTN","ICDEXA",141,0)
 S ICDG=$P(CODE,"~",2),ICDIEN=+CODE
"RTN","ICDEXA",142,0)
 Q:ICDIEN<1 "0^-1^Code not found"
"RTN","ICDEXA",143,0)
 S ICDY=$P($G(@(ICDG_+ICDIEN_",1)")),"^",1)
"RTN","ICDEXA",144,0)
 Q:+ICDS>0&(ICDY>0)&(ICDS'=ICDY) "0^-1^Code not valid for Coding System"
"RTN","ICDEXA",145,0)
 ;    Case 2:  Never Active                        0^IEN
"RTN","ICDEXA",146,0)
 ;             No Active/Inactive Date
"RTN","ICDEXA",147,0)
 S ICDD=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR($G(CDT),,+ICDS)),ICDD=ICDD+.001
"RTN","ICDEXA",148,0)
 S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDD),ICDA=$O(@(ICDR_")"),-1)
"RTN","ICDEXA",149,0)
 I '$L(ICDA) D  Q X
"RTN","ICDEXA",150,0)
 . S ICDA=$O(@(ICDR_")")),X="0^-1" Q:'$L(ICDA)
"RTN","ICDEXA",151,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDA)
"RTN","ICDEXA",152,0)
 . S ICDIEN=$O(@(ICDR_",0)")) S:+ICDIEN<1 ICDIEN=-1
"RTN","ICDEXA",153,0)
 . S X="0^"_ICDIEN_"^"
"RTN","ICDEXA",154,0)
 ;    Case 3:  Active, Never Inactive              1^IEN^Effective Date
"RTN","ICDEXA",155,0)
 ;             Has an Activation Date
"RTN","ICDEXA",156,0)
 ;             No Inactivation Date
"RTN","ICDEXA",157,0)
 S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDD),ICDI=$O(@(ICDR_")"),-1)
"RTN","ICDEXA",158,0)
 I $L(ICDA),'$L(ICDI) D  Q X
"RTN","ICDEXA",159,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,1,ICDA),ICDIEN=$O(@(ICDR_",0)"))
"RTN","ICDEXA",160,0)
 . S X=$S(+ICDIEN=0:"0^-1",1:"1^"_ICDIEN)
"RTN","ICDEXA",161,0)
 . S:X'["-1"&(ICDA?7N) X=X_"^"_ICDA
"RTN","ICDEXA",162,0)
 ;    Case 4:  Active, but later Inactivated       0^IEN^Effective Date
"RTN","ICDEXA",163,0)
 ;             Has an Activation Date
"RTN","ICDEXA",164,0)
 ;             Has an Inactivation Date
"RTN","ICDEXA",165,0)
 I $L(ICDA),$L(ICDI),ICDI>ICDA,ICDI<ICDD D  Q X
"RTN","ICDEXA",166,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDI)
"RTN","ICDEXA",167,0)
 . S ICDIEN=$O(@(ICDR_",0)"))
"RTN","ICDEXA",168,0)
 . S X=$S(+ICDIEN=0:"0^-1",1:"0^"_ICDIEN)
"RTN","ICDEXA",169,0)
 . S:X'["-1"&(ICDI?7N) X=X_"^"_ICDI
"RTN","ICDEXA",170,0)
 ;    Case 5:  Active, and not later Inactivated   1^IEN^Effective Date
"RTN","ICDEXA",171,0)
 ;             Has an Activation Date
"RTN","ICDEXA",172,0)
 ;             Has an Inactivation Date
"RTN","ICDEXA",173,0)
 ;             Has a Newer Activation Date
"RTN","ICDEXA",174,0)
 I $L(ICDA),$L(ICDI),ICDI'>ICDA D  Q X
"RTN","ICDEXA",175,0)
 . S ICDR=$$ACTROOT(ICDG,ICDC,0,ICDI),ICDIEN=$O(@(ICDR_",1)"))
"RTN","ICDEXA",176,0)
 . S X=$S(+$O(@(ICDR_",0)"))=0:"0^-1",1:"1^"_ICDIEN)
"RTN","ICDEXA",177,0)
 . S:X'["-1"&(ICDA?7N) X=X_"^"_ICDA
"RTN","ICDEXA",178,0)
 ;    Case 6:  Fails Time Test                     0^-1
"RTN","ICDEXA",179,0)
 Q ("0^"_$S(+($G(ICDIEN))>0:+($G(ICDIEN)),1:"-1"))
"RTN","ICDEXA",180,0)
 ;
"RTN","ICDEXA",181,0)
ACTROOT(ICDG,ICDC,ICDS,ICDD)  ; Return "ACT" root
"RTN","ICDEXA",182,0)
 Q (ICDG_"""ACT"","""_ICDC_" "","_ICDS_","_ICDD)
"RTN","ICDEXA",183,0)
 ;
"RTN","ICDEXA",184,0)
SEL(FILE,IEN) ; Entry is Selectable
"RTN","ICDEXA",185,0)
 ;
"RTN","ICDEXA",186,0)
 ; Input:
"RTN","ICDEXA",187,0)
 ; 
"RTN","ICDEXA",188,0)
 ;    FILE   File number 80 or 80.1 (required)
"RTN","ICDEXA",189,0)
 ;    IEN    Internal Entry Number (required)
"RTN","ICDEXA",190,0)
 ;
"RTN","ICDEXA",191,0)
 ; Output:  
"RTN","ICDEXA",192,0)
 ; 
"RTN","ICDEXA",193,0)
 ;    $$SEL  Boolean value
"RTN","ICDEXA",194,0)
 ;    
"RTN","ICDEXA",195,0)
 ;             1  Selectable
"RTN","ICDEXA",196,0)
 ;             0  Not Selectable
"RTN","ICDEXA",197,0)
 ;          
"RTN","ICDEXA",198,0)
 ;            -1  on error
"RTN","ICDEXA",199,0)
 ;           
"RTN","ICDEXA",200,0)
 N ICDF,ICDI,ICDR,ICDS
"RTN","ICDEXA",201,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_$G(ICDF)_"^") -1
"RTN","ICDEXA",202,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) -1
"RTN","ICDEXA",203,0)
 S ICDI=+($G(IEN)) Q:ICDI'>0 -1
"RTN","ICDEXA",204,0)
 Q:'$D(@(ICDR_ICDI_",0)")) -1
"RTN","ICDEXA",205,0)
 S ICDS=+($$GET1^DIQ(ICDF,(+ICDI_","),1.8))
"RTN","ICDEXA",206,0)
 Q $S(ICDS>0:0,1:1)
"RTN","ICDEXA2")
0^43^B66742760
"RTN","ICDEXA2",1,0)
ICDEXA2 ;SLC/KER - ICD Extractor - APIs/Utilities (cont) ;04/21/2014
"RTN","ICDEXA2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXA2",3,0)
 ;               
"RTN","ICDEXA2",4,0)
 ; Global Variables
"RTN","ICDEXA2",5,0)
 ;    ^ICD0("AVA"         N/A
"RTN","ICDEXA2",6,0)
 ;    ^ICD9("AVA"         N/A
"RTN","ICDEXA2",7,0)
 ;               
"RTN","ICDEXA2",8,0)
 ; External References
"RTN","ICDEXA2",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXA2",10,0)
 ;
"RTN","ICDEXA2",11,0)
 Q
"RTN","ICDEXA2",12,0)
NEXT(CODE,SYS,CDT) ; Next ICD Code (active or inactive)
"RTN","ICDEXA2",13,0)
 ;
"RTN","ICDEXA2",14,0)
 ; Input:
"RTN","ICDEXA2",15,0)
 ; 
"RTN","ICDEXA2",16,0)
 ;    CODE   ICD Code or Null for the first code
"RTN","ICDEXA2",17,0)
 ;    SYS    Coding System - see ^ICDS
"RTN","ICDEXA2",18,0)
 ;              
"RTN","ICDEXA2",19,0)
 ;              1 = ICD-9-CM
"RTN","ICDEXA2",20,0)
 ;              2 = ICD-9-PCS
"RTN","ICDEXA2",21,0)
 ;             30 = ICD-10-CM
"RTN","ICDEXA2",22,0)
 ;             31 = ICD-10-PCS
"RTN","ICDEXA2",23,0)
 ;             
"RTN","ICDEXA2",24,0)
 ;   CDT   Code Date to check
"RTN","ICDEXA2",25,0)
 ;         If CDT is passed, then the code
"RTN","ICDEXA2",26,0)
 ;         returned is the next active code
"RTN","ICDEXA2",27,0)
 ;         based on date.  If it is not 
"RTN","ICDEXA2",28,0)
 ;         passed then the next code is
"RTN","ICDEXA2",29,0)
 ;         returned regardless of status.
"RTN","ICDEXA2",30,0)
 ;         
"RTN","ICDEXA2",31,0)
 ; Output:
"RTN","ICDEXA2",32,0)
 ; 
"RTN","ICDEXA2",33,0)
 ;    The Next ICD Code, Null if none
"RTN","ICDEXA2",34,0)
 ;
"RTN","ICDEXA2",35,0)
 N ICDB,ICDC,ICDG,ICDF,ICDD,ICDE,ICDI,ICDR,ICDS,ICDO,ICDN,ICDY
"RTN","ICDEXA2",36,0)
 S ICDC=$TR($G(CODE)," ",""),ICDD=$G(CDT),ICDB=ICDD?7N
"RTN","ICDEXA2",37,0)
 S ICDY=$$SYS^ICDEX(+($G(SYS)))
"RTN","ICDEXA2",38,0)
 S:ICDY'>0&($L(ICDC)) ICDY=$$SYS^ICDEX(ICDC)
"RTN","ICDEXA2",39,0)
 S ICDF=$$FILE^ICDEX(+ICDY)
"RTN","ICDEXA2",40,0)
 Q:'$L(ICDC)&(ICDY'>0) "" S ICDS=0,ICDE=""
"RTN","ICDEXA2",41,0)
 S:+ICDY>0 ICDS=+ICDY I $L(ICDC) D
"RTN","ICDEXA2",42,0)
 . S:"^80^80.1^"'[("^"_ICDF_"^") ICDF=$$CODEFI^ICDEX(ICDC)
"RTN","ICDEXA2",43,0)
 . S ICDE=$P($$CODECS^ICDEX(ICDC,ICDF),"^",1) S:ICDS>0 ICDE=ICDS
"RTN","ICDEXA2",44,0)
 Q:+ICDY>0&(+($G(ICDE))>0)&(+ICDY'=+($G(ICDE))) ""
"RTN","ICDEXA2",45,0)
 S:+ICDS'>0&(+($G(ICDE))>0) ICDS=+($G(ICDE))
"RTN","ICDEXA2",46,0)
 Q:+ICDS'>0 ""  S ICDR=$$ROOT^ICDEX(ICDS) Q:'$L(ICDR) ""
"RTN","ICDEXA2",47,0)
 S ICDO=$$NUM^ICDEX(ICDC) Q:$L(ICDC)&(+ICDO'>0) ""
"RTN","ICDEXA2",48,0)
 I 'ICDB S ICDC="" D  Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",49,0)
 . S ICDN=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_")"))
"RTN","ICDEXA2",50,0)
 . S ICDC=$S(+ICDN>0:$$COD^ICDEX(+ICDN),1:"")
"RTN","ICDEXA2",51,0)
 I ICDB S ICDC="" D  Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",52,0)
 . N ICDA S ICDA="" F  S ICDO=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_")")) Q:+ICDO'>0  D  Q:$L(ICDC)
"RTN","ICDEXA2",53,0)
 . . N ICDI S ICDI=0 F  S ICDI=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_","_+ICDI_")")) Q:+ICDI'>0  D  Q:$L(ICDC)
"RTN","ICDEXA2",54,0)
 . . . N ICDE,ICDH S ICDE=$O(@(ICDR_+ICDI_",66,""B"","_(ICDD+.001)_")"),-1) Q:ICDE'?7N
"RTN","ICDEXA2",55,0)
 . . . S ICDH=$O(@(ICDR_+ICDI_",66,""B"","_ICDE_","" "")"),-1) Q:+ICDH'>0
"RTN","ICDEXA2",56,0)
 . . . S ICDA=$G(@(ICDR_+ICDI_",66,"_ICDH_",0)")),ICDA=+($P(ICDA,"^",2))
"RTN","ICDEXA2",57,0)
 . . . S:+ICDA>0 ICDC=ICDO S ICDC=$S(+($G(ICDC))>0:$$COD^ICDEX(+ICDC),1:"")
"RTN","ICDEXA2",58,0)
 Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",59,0)
PREV(CODE,SYS,CDT) ; Previous ICD Code (active or inactive)
"RTN","ICDEXA2",60,0)
 ;
"RTN","ICDEXA2",61,0)
 ; Input:
"RTN","ICDEXA2",62,0)
 ; 
"RTN","ICDEXA2",63,0)
 ;    CODE   ICD Code or Null for the last code
"RTN","ICDEXA2",64,0)
 ;    SYS    Coding System - see ^ICDS
"RTN","ICDEXA2",65,0)
 ;              
"RTN","ICDEXA2",66,0)
 ;              1 = ICD-9-CM
"RTN","ICDEXA2",67,0)
 ;              2 = ICD-9-PCS
"RTN","ICDEXA2",68,0)
 ;             30 = ICD-10-CM
"RTN","ICDEXA2",69,0)
 ;             31 = ICD-10-PCS
"RTN","ICDEXA2",70,0)
 ;             
"RTN","ICDEXA2",71,0)
 ;   CDT   Code Date to check
"RTN","ICDEXA2",72,0)
 ;         If CDT is passed, then the code
"RTN","ICDEXA2",73,0)
 ;         returned is the previous active 
"RTN","ICDEXA2",74,0)
 ;         code based on date.  If it is 
"RTN","ICDEXA2",75,0)
 ;         not passed then the previous 
"RTN","ICDEXA2",76,0)
 ;         code is returned regardless of 
"RTN","ICDEXA2",77,0)
 ;         status.
"RTN","ICDEXA2",78,0)
 ;         
"RTN","ICDEXA2",79,0)
 ; Output:
"RTN","ICDEXA2",80,0)
 ; 
"RTN","ICDEXA2",81,0)
 ;    The Previous ICD Code, Null if none
"RTN","ICDEXA2",82,0)
 ;
"RTN","ICDEXA2",83,0)
 N ICDB,ICDC,ICDG,ICDF,ICDD,ICDE,ICDI,ICDR,ICDS,ICDO,ICDN,ICDY
"RTN","ICDEXA2",84,0)
 S ICDC=$TR($G(CODE)," ",""),ICDD=$G(CDT),ICDB=ICDD?7N
"RTN","ICDEXA2",85,0)
 S ICDY=$$SYS^ICDEX(+($G(SYS)))
"RTN","ICDEXA2",86,0)
 S:ICDY'>0&($L(ICDC)) ICDY=$$SYS^ICDEX(ICDC)
"RTN","ICDEXA2",87,0)
 S ICDF=$$FILE^ICDEX(+ICDY)
"RTN","ICDEXA2",88,0)
 Q:'$L(ICDC)&(ICDY'>0) "" S ICDS=0,ICDE=""
"RTN","ICDEXA2",89,0)
 S:+ICDY>0 ICDS=+ICDY I $L(ICDC) D
"RTN","ICDEXA2",90,0)
 . S:"^80^80.1^"'[("^"_ICDF_"^") ICDF=$$CODEFI^ICDEX(ICDC)
"RTN","ICDEXA2",91,0)
 . S ICDE=$P($$CODECS^ICDEX(ICDC,ICDF),"^",1) S:ICDS>0 ICDE=ICDS
"RTN","ICDEXA2",92,0)
 Q:+ICDY>0&(+($G(ICDE))>0)&(+ICDY'=+($G(ICDE))) ""
"RTN","ICDEXA2",93,0)
 S:+ICDS'>0&(+($G(ICDE))>0) ICDS=+($G(ICDE)) Q:+ICDS'>0 ""
"RTN","ICDEXA2",94,0)
 S ICDR=$$ROOT^ICDEX(ICDS) Q:'$L(ICDR) ""
"RTN","ICDEXA2",95,0)
 S ICDO=$$NUM^ICDEX(ICDC) Q:$L(ICDC)&(+ICDO'>0) ""
"RTN","ICDEXA2",96,0)
 I 'ICDB D  Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",97,0)
 . S:+ICDO'>0 ICDO=$O(@(ICDR_"""AN"","_+ICDS_","" "")"),-1)+1
"RTN","ICDEXA2",98,0)
 . S ICDN=0,ICDC=""
"RTN","ICDEXA2",99,0)
 . S ICDN=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_")"),-1)
"RTN","ICDEXA2",100,0)
 . S ICDC=$S(+ICDN>0:$$COD^ICDEX(+ICDN),1:"")
"RTN","ICDEXA2",101,0)
 I ICDB S ICDC="" D  Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",102,0)
 . N ICDA S ICDA="" S:+ICDO'>0 ICDO=$O(@(ICDR_"""AN"","_+ICDS_","" "")"),-1)+1
"RTN","ICDEXA2",103,0)
 . F  S ICDO=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_")"),-1) Q:+ICDO'>0  D  Q:$L(ICDC)
"RTN","ICDEXA2",104,0)
 . . N ICDI S ICDI=0 F  S ICDI=$O(@(ICDR_"""AN"","_+ICDS_","_+ICDO_","_+ICDI_")")) Q:+ICDI'>0  D  Q:$L(ICDC)
"RTN","ICDEXA2",105,0)
 . . . N ICDE,ICDH S ICDE=$O(@(ICDR_+ICDI_",66,""B"","_(ICDD+.001)_")"),-1) Q:ICDE'?7N
"RTN","ICDEXA2",106,0)
 . . . S ICDH=$O(@(ICDR_+ICDI_",66,""B"","_ICDE_","" "")"),-1) Q:+ICDH'>0
"RTN","ICDEXA2",107,0)
 . . . S ICDA=$G(@(ICDR_+ICDI_",66,"_ICDH_",0)")),ICDA=+($P(ICDA,"^",2))
"RTN","ICDEXA2",108,0)
 . . . S:+ICDA>0 ICDC=ICDO S ICDC=$S(+($G(ICDC))>0:$$COD^ICDEX(+ICDC),1:"")
"RTN","ICDEXA2",109,0)
 Q $S(ICDC="":"",1:ICDC)
"RTN","ICDEXA2",110,0)
HIST(CODE,ARY,SYS)  ; Activation History
"RTN","ICDEXA2",111,0)
 ;
"RTN","ICDEXA2",112,0)
 ; Input:
"RTN","ICDEXA2",113,0)
 ; 
"RTN","ICDEXA2",114,0)
 ;    CODE   ICD Code                   (required)
"RTN","ICDEXA2",115,0)
 ;    .ARY   Array, passed by Reference (required)
"RTN","ICDEXA2",116,0)
 ;    SYS    Coding System - see ^ICDS
"RTN","ICDEXA2",117,0)
 ;              
"RTN","ICDEXA2",118,0)
 ;              1 = ICD-9-CM
"RTN","ICDEXA2",119,0)
 ;              2 = ICD-9-PCS
"RTN","ICDEXA2",120,0)
 ;             30 = ICD-10-CM
"RTN","ICDEXA2",121,0)
 ;             31 = ICD-10-PCS
"RTN","ICDEXA2",122,0)
 ;
"RTN","ICDEXA2",123,0)
 ; Output:    Mirrors ARY(0) (or, -1 on error)
"RTN","ICDEXA2",124,0)
 ; 
"RTN","ICDEXA2",125,0)
 ;    ARY(0) = Number of Activation History Entries
"RTN","ICDEXA2",126,0)
 ;    ARY(<date>) = status    where: 1 is Active
"RTN","ICDEXA2",127,0)
 ;    ARY("IEN") = <ien>
"RTN","ICDEXA2",128,0)
 ;
"RTN","ICDEXA2",129,0)
 Q:$G(CODE)="" -1  K ARY
"RTN","ICDEXA2",130,0)
 N ICDC,ICDF,ICDS,ICDE,ICDI,ICDA,ICDN,ICDD,ICDR,ICDF,ICDS,ICDY
"RTN","ICDEXA2",131,0)
 S ICDC=$TR($G(CODE)," ","") Q:'$L(ICDC) -1  S ICDY=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXA2",132,0)
 S:+ICDY'>0 ICDY=$$SYS^ICDEX(ICDC)
"RTN","ICDEXA2",133,0)
 S ICDS=0 S:+ICDY>0 ICDS=+ICDY
"RTN","ICDEXA2",134,0)
 S ICDF=$$CODEFI^ICDEX(ICDC) Q:+ICDF'>0 -1
"RTN","ICDEXA2",135,0)
 S ICDE=$P($$CODECS^ICDEX(ICDC,ICDF),"^",1) Q:+ICDE'>0 -1
"RTN","ICDEXA2",136,0)
 S:+ICDS'>0&(+ICDE>0) ICDS=ICDE
"RTN","ICDEXA2",137,0)
 Q:+ICDS>0&(ICDS'=+ICDE) -1
"RTN","ICDEXA2",138,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) -1
"RTN","ICDEXA2",139,0)
 S ICDI=$$CODEABA^ICDEX(ICDC,ICDR,+ICDS) Q:+ICDI'>0 -1
"RTN","ICDEXA2",140,0)
 S ICDE=$P($G(@(ICDR_ICDI_",1)")),"^",1) Q:+ICDS>0&(ICDS'=+ICDE) -1
"RTN","ICDEXA2",141,0)
 S ARY("IEN")=ICDI,ICDA="" M ICDA=@(ICDR_ICDI_",66)")
"RTN","ICDEXA2",142,0)
 K ICDA("B") S ARY(0)=+($P($G(ICDA(0)),"^",4))
"RTN","ICDEXA2",143,0)
 S:+ARY(0)=0 ARY(0)=-1 K:ARY(0)=-1 ARY("IEN")
"RTN","ICDEXA2",144,0)
 S (ICDI,ICDC)=0 F  S ICDI=$O(ICDA(ICDI)) Q:+ICDI=0  D
"RTN","ICDEXA2",145,0)
 . S ICDD=$P($G(ICDA(ICDI,0)),"^",1) Q:+ICDD=0
"RTN","ICDEXA2",146,0)
 . S ICDF=$P($G(ICDA(ICDI,0)),"^",2) Q:'$L(ICDF)
"RTN","ICDEXA2",147,0)
 . S ICDC=ICDC+1,ARY(0)=ICDC,ARY(ICDD)=ICDF
"RTN","ICDEXA2",148,0)
 Q ARY(0)
"RTN","ICDEXA2",149,0)
PERIOD(CODE,ARY,SYS) ; Return Activation/Inactivation Period in ARY
"RTN","ICDEXA2",150,0)
 ;
"RTN","ICDEXA2",151,0)
 ; Input:
"RTN","ICDEXA2",152,0)
 ; 
"RTN","ICDEXA2",153,0)
 ;    CODE   ICD Code (required)
"RTN","ICDEXA2",154,0)
 ;    ARY    Array, passed by Reference (required)
"RTN","ICDEXA2",155,0)
 ;    SYS    Coding System - see ^ICDS
"RTN","ICDEXA2",156,0)
 ;              
"RTN","ICDEXA2",157,0)
 ;              1 = ICD-9-CM
"RTN","ICDEXA2",158,0)
 ;              2 = ICD-9-PCS
"RTN","ICDEXA2",159,0)
 ;             30 = ICD-10-CM
"RTN","ICDEXA2",160,0)
 ;             31 = ICD-10-PCS
"RTN","ICDEXA2",161,0)
 ;
"RTN","ICDEXA2",162,0)
 ; Output:  
"RTN","ICDEXA2",163,0)
 ; 
"RTN","ICDEXA2",164,0)
 ;          $$PERIOD  Number of activation periods found
"RTN","ICDEXA2",165,0)
 ; 
"RTN","ICDEXA2",166,0)
 ;          ARY(0) = IEN ^ Selectable ^ Error Message
"RTN","ICDEXA2",167,0)
 ;          
"RTN","ICDEXA2",168,0)
 ;            Where IEN = -1 if error
"RTN","ICDEXA2",169,0)
 ;            Selectable = 0 for unselectable
"RTN","ICDEXA2",170,0)
 ;            Error Message if applicable
"RTN","ICDEXA2",171,0)
 ;            
"RTN","ICDEXA2",172,0)
 ;          ARY(Activation Date) = Inactivation Date^Short Name
"RTN","ICDEXA2",173,0)
 ;
"RTN","ICDEXA2",174,0)
 ;            Where the Short Name is versioned as follows:
"RTN","ICDEXA2",175,0)
 ;
"RTN","ICDEXA2",176,0)
 ;            Period is active   - Text for TODAY's date
"RTN","ICDEXA2",177,0)
 ;            Period is inactive - Text for inactivation date
"RTN","ICDEXA2",178,0)
 ;
"RTN","ICDEXA2",179,0)
 I $G(CODE)="" S ARY(0)="-1^0^Code not specified" Q 0
"RTN","ICDEXA2",180,0)
 K ARY N ICD1,ICDC,ICDBA,ICDF,ICDG,ICDS,ICDE,ICDI,ICDI,ICDA,ICDN,ICDD,ICDR,ICDF,ICDS,ICDY,ICDP,ICDT
"RTN","ICDEXA2",181,0)
 S ICDC=$TR($G(CODE)," ","") I '$L(ICDC) S ARY(0)="-1^0^Invalid Code specified" Q 0
"RTN","ICDEXA2",182,0)
 I $D(^ICD9("AVA",(CODE_" ")))!($D(^ICD0("AVA",(CODE_" ")))) S ARY(0)="-1^0^Invalid Code specified" Q 0
"RTN","ICDEXA2",183,0)
 S ICDY=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXA2",184,0)
 I +ICDY'>0 D
"RTN","ICDEXA2",185,0)
 . N ICDF,ICDE S ICDF=$$CODEFI^ICDEX(ICDC) Q:+ICDF'>0
"RTN","ICDEXA2",186,0)
 . S ICDE=$P($$CODECS^ICDEX(ICDC,ICDF),"^",1) Q:+ICDE'>0
"RTN","ICDEXA2",187,0)
 . S ICDY=$$SYS^ICDEX(ICDE)
"RTN","ICDEXA2",188,0)
 S ICDS=+($G(ICDY)) I +ICDS'>0 S ARY(0)="-1^0^Invalid or undetermined Coding System" Q 0
"RTN","ICDEXA2",189,0)
 S ICDR=$$ROOT^ICDEX(ICDS) I '$L(ICDR) S ARY(0)="-1^0^Undetermined global root" Q 0
"RTN","ICDEXA2",190,0)
 S ICDI=$$CODEABA^ICDEX(ICDC,ICDR,+ICDS) I +ICDI'>0 S ARY(0)="-1^0^IEN not found" Q 0
"RTN","ICDEXA2",191,0)
 S ICDP=$S(ICDR["ICD9":3,1:4),ICD1=$G(@(ICDR_ICDI_",1)")),ICDN=$$MRST(ICDR,ICDI)
"RTN","ICDEXA2",192,0)
 S ICDG=ICDR_ICDI_",67,",ICDT=$O(@(ICDG_"""B"","" "")"),-1),ICDT=$O(@(ICDG_"""B"","_+ICDT_","" "")"),-1)
"RTN","ICDEXA2",193,0)
 S ICDT=$P($G(@(ICDG_+ICDT_",0)")),"^",2),ARY(0)=ICDI_"^"_'$P(ICD1,"^",7)
"RTN","ICDEXA2",194,0)
 S (ICDA,ICDBA)=0,ICDG=ICDR_ICDI_",66,"
"RTN","ICDEXA2",195,0)
 F  Q:ICDBA  D
"RTN","ICDEXA2",196,0)
 . N ICDBI,ICDCA,ICDST,ICDV S ICDA=$O(@(ICDG_"""B"","_ICDA_")"))
"RTN","ICDEXA2",197,0)
 . I ICDA="" S ICDBA=1 Q
"RTN","ICDEXA2",198,0)
 . S ICDF=$O(@(ICDG_"""B"","_ICDA_",0)"))
"RTN","ICDEXA2",199,0)
 . I '+ICDF S ICDBA=1 Q
"RTN","ICDEXA2",200,0)
 . S ICDST=$P($G(@(ICDG_ICDF_",0)")),"^",2)
"RTN","ICDEXA2",201,0)
 . Q:'ICDST  ;outer loop looks for active
"RTN","ICDEXA2",202,0)
 . ; Versioned text for activation date
"RTN","ICDEXA2",203,0)
 . S ICDV=$$MRST(ICDR,ICDI) S:$L(ICDV) ICDT=ICDV
"RTN","ICDEXA2",204,0)
 . S ARY(ICDA)="^"_ICDT,ICDBI=0,ICDI=ICDA
"RTN","ICDEXA2",205,0)
 . F  Q:ICDBI  D
"RTN","ICDEXA2",206,0)
 . . S ICDI=$O(@(ICDG_"""B"","_ICDI_")"))
"RTN","ICDEXA2",207,0)
 . . ; If no inactivation date for ICDA then use TODAY's text
"RTN","ICDEXA2",208,0)
 . . I ICDI="" S ARY(ICDA)="^"_ICDN,(ICDBI,ICDBA)=1 Q
"RTN","ICDEXA2",209,0)
 . . S ICDF=$O(@(ICDG_"""B"","_ICDI_",0)"))
"RTN","ICDEXA2",210,0)
 . . ; If no effective date ICDF for ICDI then use TODAY's text
"RTN","ICDEXA2",211,0)
 . . I '+ICDF S ARY(ICDA)="^"_ICDN,(ICDBI,ICDBA)=1 Q
"RTN","ICDEXA2",212,0)
 . . S ICDST=$P($G(@(ICDG_ICDF_",0)")),"^",2)
"RTN","ICDEXA2",213,0)
 . . ; If Status ICDST not Inactive then use TODAY's text
"RTN","ICDEXA2",214,0)
 . . I ICDST S ARY(ICDA)="^"_ICDN,ICDBI=1 Q
"RTN","ICDEXA2",215,0)
 . . ; Versioned text for inactive date
"RTN","ICDEXA2",216,0)
 . . S ICDV=$$MRST(ICDR,+($G(ARY(0))),ICDI)
"RTN","ICDEXA2",217,0)
 . . S:$L(ICDV) $P(ARY(ICDA),"^",2)=ICDV
"RTN","ICDEXA2",218,0)
 . . S $P(ARY(ICDA),"^")=ICDI
"RTN","ICDEXA2",219,0)
 . . S ICDBI=1,ICDA=ICDI,ICDCA=0
"RTN","ICDEXA2",220,0)
 S (ICDI,ICDC)=0 F  S ICDI=$O(ARY(ICDI)) Q:+ICDI'>0  S ICDC=ICDC+1
"RTN","ICDEXA2",221,0)
 S:ICDC'>0 ARY(0)="-1^0^No activation periods found"
"RTN","ICDEXA2",222,0)
 Q ICDC
"RTN","ICDEXA2",223,0)
MRST(ICD,X,Y) ; Most Recent Description from Date
"RTN","ICDEXA2",224,0)
 N ICDI,ICDT,ICDE,ICDH,ICDR S ICDR=$G(ICD),ICDI=+($G(X)),ICDT=$G(Y)
"RTN","ICDEXA2",225,0)
 Q:'$L(ICDR)!(ICDR'["^")!(ICDR'["(") ""  Q:+ICDI'>0 ""  I ICDT'>0 D  Q X
"RTN","ICDEXA2",226,0)
 . N ICDE,ICDH S ICDE=+($O(@(ICDR_+ICDI_",67,""B"","" "")"),-1))
"RTN","ICDEXA2",227,0)
 . S ICDH=+($O(@(ICDR_+ICDI_",67,""B"","_ICDE_","" "")"),-1))
"RTN","ICDEXA2",228,0)
 . S X=$P($G(@(ICDR_+ICDI_",67,"_ICDH_",0)")),"^",2)
"RTN","ICDEXA2",229,0)
 S ICDE=+($O(@(ICDR_+ICDI_",67,""B"","_+ICDT_")"),-1))
"RTN","ICDEXA2",230,0)
 S ICDH=+($O(@(ICDR_+ICDI_",67,""B"","_ICDE_","" "")"),-1))
"RTN","ICDEXA2",231,0)
 S X=$P($G(@(ICDR_+ICDI_",67,"_ICDH_",0)")),"^",2)
"RTN","ICDEXA2",232,0)
 Q X
"RTN","ICDEXA3")
0^49^B159565550
"RTN","ICDEXA3",1,0)
ICDEXA3 ;SLC/KER - ICD Extractor - APIs/Utilities (cont) ;04/21/2014
"RTN","ICDEXA3",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXA3",3,0)
 ;               
"RTN","ICDEXA3",4,0)
 ; Global Variables
"RTN","ICDEXA3",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXA3",6,0)
 ;    ^ICDS("F")          N/A
"RTN","ICDEXA3",7,0)
 ;               
"RTN","ICDEXA3",8,0)
 ; External References
"RTN","ICDEXA3",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXA3",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXA3",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXA3",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXA3",13,0)
 ;               
"RTN","ICDEXA3",14,0)
OBA(FILE,CODE,SYS,REV) ; Replace $Order for "ABA" and "BA" indexes
"RTN","ICDEXA3",15,0)
 ;
"RTN","ICDEXA3",16,0)
 ; Input:
"RTN","ICDEXA3",17,0)
 ; 
"RTN","ICDEXA3",18,0)
 ;    CODE = ICD Code, can be null
"RTN","ICDEXA3",19,0)
 ;    FILE   File Number 80 or 80.1
"RTN","ICDEXA3",20,0)
 ;    SYS    Coding System (internal, file 80.4)
"RTN","ICDEXA3",21,0)
 ;    REV    Reverse $Order if set to 1
"RTN","ICDEXA3",22,0)
 ;    
"RTN","ICDEXA3",23,0)
 ; Output:
"RTN","ICDEXA3",24,0)
 ; 
"RTN","ICDEXA3",25,0)
 ;    $$OBA  Next or Previous Code
"RTN","ICDEXA3",26,0)
 ;
"RTN","ICDEXA3",27,0)
 ;  This API replaces the need to access the BA Index
"RTN","ICDEXA3",28,0)
 ;  in a FOR loop.
"RTN","ICDEXA3",29,0)
 ;  
"RTN","ICDEXA3",30,0)
 ;     $$OBA(<file>,<code>,<system>) replaces:
"RTN","ICDEXA3",31,0)
 ; 
"RTN","ICDEXA3",32,0)
 ;        $O(^ICD9("BA",(<code>_" ")) and
"RTN","ICDEXA3",33,0)
 ;        $O(^ICD0("BA",(<code>_" "))
"RTN","ICDEXA3",34,0)
 ;        
"RTN","ICDEXA3",35,0)
 ;     F  S CODE=$$OBA^ICDEX(80,CODE,1) Q:'$L(CODE)  D
"RTN","ICDEXA3",36,0)
 ;     F  S CODE=$$OBA^ICDEX(80,CODE,30) Q:'$L(CODE)  D
"RTN","ICDEXA3",37,0)
 ;     F  S CODE=$$OBA^ICDEX(80.1,CODE,2) Q:'$L(CODE)  D
"RTN","ICDEXA3",38,0)
 ;     F  S CODE=$$OBA^ICDEX(80.1,CODE,31) Q:'$L(CODE)  D
"RTN","ICDEXA3",39,0)
 ;  
"RTN","ICDEXA3",40,0)
 ;  Retire IA 5388, 5404
"RTN","ICDEXA3",41,0)
 ;  
"RTN","ICDEXA3",42,0)
 N ICDC,ICDG,ICDF,ICDI,ICDID,ICDR,ICDU,ICDS,ICDO,ICDN,ICDX,ICDD
"RTN","ICDEXA3",43,0)
 S ICDC=$TR($G(CODE)," ",""),ICDU=$$UP^XLFSTR(ICDC) S ICDS=$G(SYS)
"RTN","ICDEXA3",44,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") ""
"RTN","ICDEXA3",45,0)
 I $L(ICDS) S ICDS=$$SYS^ICDEX(ICDS) Q:+ICDS'>0 ""
"RTN","ICDEXA3",46,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) ""  S ICDD=+($G(REV))
"RTN","ICDEXA3",47,0)
 I +ICDS>0 D  Q ICDO
"RTN","ICDEXA3",48,0)
 . N ICDX,ICDN,ICDI S ICDX="ABA"
"RTN","ICDEXA3",49,0)
 . I ICDD'>0 D
"RTN","ICDEXA3",50,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",51,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDC_" ")_""")"))," ","")
"RTN","ICDEXA3",52,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDU_" ")_""")"))," ","")
"RTN","ICDEXA3",53,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",54,0)
 . S:ICDD>0&('$L(ICDC)) ICDC="~"
"RTN","ICDEXA3",55,0)
 . I ICDD>0 D
"RTN","ICDEXA3",56,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",57,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDC_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",58,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDU_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",59,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",60,0)
 . S ICDI=$$CODEABA^ICDEX(ICDN,ICDR,ICDS)
"RTN","ICDEXA3",61,0)
 . S ICDO=ICDN S:'$L(ICDN)!(+ICDI'>0) ICDO=""
"RTN","ICDEXA3",62,0)
 I '$L(ICDS) D  Q ICDO
"RTN","ICDEXA3",63,0)
 . N ICDX,ICDN,ICDI S ICDX="BA"
"RTN","ICDEXA3",64,0)
 . I +ICDD'>0 D
"RTN","ICDEXA3",65,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",66,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDC_" ")_""")"))," ","")
"RTN","ICDEXA3",67,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDU_" ")_""")"))," ","")
"RTN","ICDEXA3",68,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",69,0)
 . S:ICDD>0&('$L(ICDC)) ICDC="~"
"RTN","ICDEXA3",70,0)
 . I +ICDD>0 D
"RTN","ICDEXA3",71,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",72,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDC_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",73,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDU_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",74,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",75,0)
 . S ICDI=$$CODEBA^ICDEX(ICDN,ICDR)
"RTN","ICDEXA3",76,0)
 . S ICDO=ICDN S:'$L(ICDN)!(+ICDI'>0) ICDO=""
"RTN","ICDEXA3",77,0)
 Q ""
"RTN","ICDEXA3",78,0)
OD(FILE,WORD,SYS,REV) ; Replace $Order on "D" Index
"RTN","ICDEXA3",79,0)
 ; 
"RTN","ICDEXA3",80,0)
 ; Input:
"RTN","ICDEXA3",81,0)
 ; 
"RTN","ICDEXA3",82,0)
 ;    FILE   File Number
"RTN","ICDEXA3",83,0)
 ;    WORD   Word, can be null or a 2 piece string
"RTN","ICDEXA3",84,0)
 ;           containing Word and IEN where the word
"RTN","ICDEXA3",85,0)
 ;           is stored
"RTN","ICDEXA3",86,0)
 ;    SYS    Coding System (internal)
"RTN","ICDEXA3",87,0)
 ;             Acceptable values can be found on the ASYS
"RTN","ICDEXA3",88,0)
 ;             Index and includes:
"RTN","ICDEXA3",89,0)
 ;             
"RTN","ICDEXA3",90,0)
 ;             File 80
"RTN","ICDEXA3",91,0)
 ;                1   ICD-9-CM
"RTN","ICDEXA3",92,0)
 ;               30   ICD-10-CM
"RTN","ICDEXA3",93,0)
 ;                 
"RTN","ICDEXA3",94,0)
 ;             File 80.1
"RTN","ICDEXA3",95,0)
 ;                2   ICD-9 Proc
"RTN","ICDEXA3",96,0)
 ;               31   ICD-10-PCS
"RTN","ICDEXA3",97,0)
 ;    
"RTN","ICDEXA3",98,0)
 ;    REV    Reverse $Order if set to 1
"RTN","ICDEXA3",99,0)
 ;    
"RTN","ICDEXA3",100,0)
 ; Output:
"RTN","ICDEXA3",101,0)
 ; 
"RTN","ICDEXA3",102,0)
 ;    2 Piece "^" delimited string
"RTN","ICDEXA3",103,0)
 ;    
"RTN","ICDEXA3",104,0)
 ;         1   WORD   Next or Previous word in D Index
"RTN","ICDEXA3",105,0)
 ;         2   IEN    Internal Entry Number where WORD is found
"RTN","ICDEXA3",106,0)
 ;  
"RTN","ICDEXA3",107,0)
 ;  Retire IA 5388, 5404
"RTN","ICDEXA3",108,0)
 ;  
"RTN","ICDEXA3",109,0)
 N ICDW,ICDWI,ICDG,ICDF,ICDI,ICDR,ICDS,ICDO,ICDN,ICDX,ICDD
"RTN","ICDEXA3",110,0)
 S ICDW=$$UP^XLFSTR($G(WORD)),ICDWI=+($P(ICDW,"^",2)),ICDW=$P(ICDW,"^",1)
"RTN","ICDEXA3",111,0)
 S ICDS=$G(SYS) S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") ""
"RTN","ICDEXA3",112,0)
 I $L(ICDS) S ICDS=$$SYS^ICDEX(ICDS) Q:+ICDS'>0 ""
"RTN","ICDEXA3",113,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) ""  S ICDD=+($G(REV))
"RTN","ICDEXA3",114,0)
 I +ICDS>0 D  Q ICDO
"RTN","ICDEXA3",115,0)
 . N ICDX,ICDN,ICDNI,ICDI S ICDX="AD"
"RTN","ICDEXA3",116,0)
 . I ICDD'>0 D  Q
"RTN","ICDEXA3",117,0)
 . . S ICDNI=0 S:$L($G(ICDW)) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"))
"RTN","ICDEXA3",118,0)
 . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",119,0)
 . . S ICDNI="",ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"))
"RTN","ICDEXA3",120,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_0_")"))
"RTN","ICDEXA3",121,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",122,0)
 . I ICDD>0 D  Q
"RTN","ICDEXA3",123,0)
 . . I $L(ICDW) D  Q
"RTN","ICDEXA3",124,0)
 . . . S ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"),-1)
"RTN","ICDEXA3",125,0)
 . . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",126,0)
 . . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",127,0)
 . . . I '$L(ICDN) S ICDO="" Q
"RTN","ICDEXA3",128,0)
 . . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","" "")"),-1)
"RTN","ICDEXA3",129,0)
 . . . I +ICDNI>0 S ICDO=ICDN_"^"_ICDNI Q
"RTN","ICDEXA3",130,0)
 . . S ICDW="~",ICDWI=""" """ S ICDNI=""
"RTN","ICDEXA3",131,0)
 . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",132,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_ICDWI_")"),-1)
"RTN","ICDEXA3",133,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",134,0)
 I '$L(ICDS) D  Q ICDO
"RTN","ICDEXA3",135,0)
 . N ICDX,ICDN,ICDNI,ICDI S ICDX="D"
"RTN","ICDEXA3",136,0)
 . I +ICDD'>0 D  Q
"RTN","ICDEXA3",137,0)
 . . S ICDNI=0 S:$L($G(ICDW)) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"))
"RTN","ICDEXA3",138,0)
 . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",139,0)
 . . S ICDNI="",ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"))
"RTN","ICDEXA3",140,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_0_")"))
"RTN","ICDEXA3",141,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",142,0)
 . I ICDD>0 D  Q
"RTN","ICDEXA3",143,0)
 . . I $L(ICDW) D  Q
"RTN","ICDEXA3",144,0)
 . . . S ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"),-1)
"RTN","ICDEXA3",145,0)
 . . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",146,0)
 . . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",147,0)
 . . . I '$L(ICDN) S ICDO="" Q
"RTN","ICDEXA3",148,0)
 . . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","" "")"),-1)
"RTN","ICDEXA3",149,0)
 . . . I +ICDNI>0 S ICDO=ICDN_"^"_ICDNI Q
"RTN","ICDEXA3",150,0)
 . . S ICDW="~",ICDWI=""" """ S ICDNI=""
"RTN","ICDEXA3",151,0)
 . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",152,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_ICDWI_")"),-1)
"RTN","ICDEXA3",153,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",154,0)
 Q ""
"RTN","ICDEXA3",155,0)
DLM(FILE,IEN,FIELD,CDT) ; Date Last Modified
"RTN","ICDEXA3",156,0)
 ;
"RTN","ICDEXA3",157,0)
 ; Input
"RTN","ICDEXA3",158,0)
 ;    
"RTN","ICDEXA3",159,0)
 ;    FILE     File Number (required)
"RTN","ICDEXA3",160,0)
 ;    IEN      Internal Entry Number (required)
"RTN","ICDEXA3",161,0)
 ;    FIELD    Field Number of Versioned Data  (optional)
"RTN","ICDEXA3",162,0)
 ;    
"RTN","ICDEXA3",163,0)
 ;               File 80
"RTN","ICDEXA3",164,0)
 ;              
"RTN","ICDEXA3",165,0)
 ;                  10   Sex                          5;0
"RTN","ICDEXA3",166,0)
 ;                  11   Age Low                      6;0
"RTN","ICDEXA3",167,0)
 ;                  12   Age High                     7;0
"RTN","ICDEXA3",168,0)
 ;                  66   Status                      66;0
"RTN","ICDEXA3",169,0)
 ;                  67   Diagnosis                   67;0
"RTN","ICDEXA3",170,0)
 ;                  68   Description                 68;0
"RTN","ICDEXA3",171,0)
 ;                  71   DRG Grouper                  3;0
"RTN","ICDEXA3",172,0)
 ;                  72   Major Diagnostic Category    4;0
"RTN","ICDEXA3",173,0)
 ;                 103   Complication/Comorbidity    69;0
"RTN","ICDEXA3",174,0)
 ;
"RTN","ICDEXA3",175,0)
 ;               File 80.1
"RTN","ICDEXA3",176,0)
 ;              
"RTN","ICDEXA3",177,0)
 ;                  10   Sex                          3;0
"RTN","ICDEXA3",178,0)
 ;                  66   Status                      66;0
"RTN","ICDEXA3",179,0)
 ;                  67   Operation/Procedure         67;0
"RTN","ICDEXA3",180,0)
 ;                  68   Description                 68;0
"RTN","ICDEXA3",181,0)
 ;                  71   DRG Grouper                  2;0
"RTN","ICDEXA3",182,0)
 ;                 
"RTN","ICDEXA3",183,0)
 ;             If the field is passed, then the date last 
"RTN","ICDEXA3",184,0)
 ;             modified (based on date) for the field is
"RTN","ICDEXA3",185,0)
 ;             returned.  If the field is not passed, then
"RTN","ICDEXA3",186,0)
 ;             the date last modified (based on date) for 
"RTN","ICDEXA3",187,0)
 ;             the record at IEN is returned.
"RTN","ICDEXA3",188,0)
 ;           
"RTN","ICDEXA3",189,0)
 ;    CDT     Date to base output on (default is today)
"RTN","ICDEXA3",190,0)
 ;            Business rules apply
"RTN","ICDEXA3",191,0)
 ;    
"RTN","ICDEXA3",192,0)
 ; Output:
"RTN","ICDEXA3",193,0)
 ; 
"RTN","ICDEXA3",194,0)
 ;    $$DLM   Date Last Modified
"RTN","ICDEXA3",195,0)
 ;    
"RTN","ICDEXA3",196,0)
 ;     or -1 ^ message on error
"RTN","ICDEXA3",197,0)
 ;  
"RTN","ICDEXA3",198,0)
 N ICD0,ICDA,ICDC,ICDD,ICDE,ICDF,ICDH,ICDI,ICDL,ICDN,ICDNS,ICDO,ICDP,ICDR
"RTN","ICDEXA3",199,0)
 S ICDI=$G(IEN) Q:+ICDI'>0 "-1^Invalid IEN"
"RTN","ICDEXA3",200,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXA3",201,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File Root"
"RTN","ICDEXA3",202,0)
 S ICDC=+($P($G(@(ICDR_+ICDI_",1)")),"^",1))
"RTN","ICDEXA3",203,0)
 Q:+ICDC'>0 "-1^Invalid Coding System "_ICDC
"RTN","ICDEXA3",204,0)
 Q:'$D(@(ICDR_+ICDI_",0)")) "-1^IEN not found"
"RTN","ICDEXA3",205,0)
 S ICDL=$G(FIELD)
"RTN","ICDEXA3",206,0)
 S ICDD=$G(CDT) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXA3",207,0)
 S ICDD=$$DTBR^ICDEX($G(ICDD),0,ICDC)
"RTN","ICDEXA3",208,0)
 Q:ICDD'?7N "-1^Invalid Date for File"
"RTN","ICDEXA3",209,0)
 I '$L(ICDL) D  Q ICDO
"RTN","ICDEXA3",210,0)
 . N ICDA,ICDNS,ICDP,ICDN,ICDE,ICDH,ICD0,ICDL
"RTN","ICDEXA3",211,0)
 . K ICDA S ICDNS="",ICDO="-1^Date Last Modified not found"
"RTN","ICDEXA3",212,0)
 . S:ICDF=80 ICDNS="3^4^5^6^7^66^67^68^69" S:ICDF=80.1 ICDNS="2^3^66^67^68" Q:'$L(ICDNS)
"RTN","ICDEXA3",213,0)
 . F ICDP=1:1 Q:'$L($P(ICDNS,"^",ICDP))  D
"RTN","ICDEXA3",214,0)
 . . S ICDN=$P(ICDNS,"^",ICDP)
"RTN","ICDEXA3",215,0)
 . . S ICDE=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_(ICDD+.001)_")"),-1) Q:ICDE'?7N
"RTN","ICDEXA3",216,0)
 . . S ICDH=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_ICDE_","" "")"),-1)
"RTN","ICDEXA3",217,0)
 . . S ICD0=$G(@(ICDR_+ICDI_","_ICDN_","_ICDH_",0)"))
"RTN","ICDEXA3",218,0)
 . . S:$P(ICD0,"^",1)?7N ICDA($P(ICD0,"^",1))=""
"RTN","ICDEXA3",219,0)
 . S ICDL=$O(ICDA(" "),-1) S:ICDL?7N ICDO=ICDL K ICDA
"RTN","ICDEXA3",220,0)
 S:ICDF=80 ICDN=$S(ICDL=10:5,ICDL=11:6,ICDL=12:7,ICDL=66:66,ICDL=67:67,ICDL=68:68,ICDL=71:3,ICDL=72:4,ICDL=103:69,1:"")
"RTN","ICDEXA3",221,0)
 S:ICDF=80.1 ICDN=$S(ICDL=10:3,ICDL=66:66,ICDL=67:67,ICDL=68:68,ICDL=71:2,1:"")
"RTN","ICDEXA3",222,0)
 Q:+ICDL'>0!('$L(ICDN)) "-1^Invalid Field"
"RTN","ICDEXA3",223,0)
 Q:$O(@(ICDR_+ICDI_","_ICDN_",0)"))'>0 "-1^Field #"_ICDL_" not found for IEN "_ICDI
"RTN","ICDEXA3",224,0)
 S ICDE=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_(ICDD+.001)_")"),-1)
"RTN","ICDEXA3",225,0)
 Q:ICDE'?7N ("-1^Date Last Modified not found based on "_$$FMTE^XLFDT($G(ICDD),"5DZ"))
"RTN","ICDEXA3",226,0)
 S ICDH=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_ICDE_","" "")"),-1)
"RTN","ICDEXA3",227,0)
 Q:+ICDH'>0 "-1^Modified Data Not Found"
"RTN","ICDEXA3",228,0)
 S ICDO="-1^Modified Data Not Found"
"RTN","ICDEXA3",229,0)
 S ICD0=$G(@(ICDR_+ICDI_","_ICDN_","_ICDH_",0)"))
"RTN","ICDEXA3",230,0)
 S ICDL=$P(ICD0,"^",1)
"RTN","ICDEXA3",231,0)
 S:ICDL?7N ICDO=ICDL
"RTN","ICDEXA3",232,0)
 Q ICDO
"RTN","ICDEXA3",233,0)
CS(FILE,FMT,CDT) ; Select Coding System (lookup)
"RTN","ICDEXA3",234,0)
 ;
"RTN","ICDEXA3",235,0)
 ; Input
"RTN","ICDEXA3",236,0)
 ; 
"RTN","ICDEXA3",237,0)
 ;    FILE   File Number 80 or 80.1 (optional)
"RTN","ICDEXA3",238,0)
 ;           If not provided, you will be prompted
"RTN","ICDEXA3",239,0)
 ;           for the ICD File, there is no default
"RTN","ICDEXA3",240,0)
 ;           value.
"RTN","ICDEXA3",241,0)
 ; 
"RTN","ICDEXA3",242,0)
 ;    FMT    Format
"RTN","ICDEXA3",243,0)
 ;    
"RTN","ICDEXA3",244,0)
 ;             E  Display External only (default)
"RTN","ICDEXA3",245,0)
 ;             I  Display Internal with External for selection
"RTN","ICDEXA3",246,0)
 ;             
"RTN","ICDEXA3",247,0)
 ;    CDT    Code Set Date (optional) if not supplied then
"RTN","ICDEXA3",248,0)
 ;           it is not used
"RTN","ICDEXA3",249,0)
 ; Output
"RTN","ICDEXA3",250,0)
 ;     
"RTN","ICDEXA3",251,0)
 ;    $$CS   2 piece "^" delimited string
"RTN","ICDEXA3",252,0)
 ;    
"RTN","ICDEXA3",253,0)
 ;              1  Coding System (internal)
"RTN","ICDEXA3",254,0)
 ;              2  Coding System (external)
"RTN","ICDEXA3",255,0)
 ;      
"RTN","ICDEXA3",256,0)
 ;           or -1 on error or non-selection
"RTN","ICDEXA3",257,0)
 ;              ^^ double up-arrows
"RTN","ICDEXA3",258,0)
 ;               ^ timeout or single up-arrow
"RTN","ICDEXA3",259,0)
 ;    
"RTN","ICDEXA3",260,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDDIR,ICD0,ICD1,ICD2,ICDA,ICDC,ICDD,ICDE
"RTN","ICDEXA3",261,0)
 N ICDIMP,ICDF,ICDI,ICDM,ICDR,ICDT,ICDTMP,ICDO,ICDV,ICDX,X,Y
"RTN","ICDEXA3",262,0)
 S ICDIMP=$$IMP^ICDEX(30),ICDD=$S($P($G(CDT),".")?7N:$P($G(CDT),"."),1:"")
"RTN","ICDEXA3",263,0)
 S ICDF=$$FIT($G(FILE),1) Q:ICDF["^" ICDF  S ICDDIR="Select ICD file number" S:+ICDF'>0 ICDF=$$FI
"RTN","ICDEXA3",264,0)
 Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXA3",265,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File"
"RTN","ICDEXA3",266,0)
 K ICDA S ICDA(0)=0
"RTN","ICDEXA3",267,0)
 I $G(ICDD)?7N D
"RTN","ICDEXA3",268,0)
 . N ICDAA,ICDE,ICDI,ICDS S (ICDC,ICDI)=0 F  S ICDI=$O(^ICDS("F",ICDF,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",269,0)
 . . S ICDE=$P($G(^ICDS(+ICDI,0)),"^",1) Q:'$L(ICDE)
"RTN","ICDEXA3",270,0)
 . . S ICDTMP=$P($G(^ICDS(+ICDI,0)),"^",4) Q:$G(ICDD)?7N&((ICDD+.001)'>ICDTMP)
"RTN","ICDEXA3",271,0)
 . . S ICDAA(ICDTMP,ICDI)=ICDI_"^"_ICDE
"RTN","ICDEXA3",272,0)
 . S ICDE=$O(ICDAA(" "),-1)
"RTN","ICDEXA3",273,0)
 . S ICDI=$O(ICDAA(+ICDE," "),-1)
"RTN","ICDEXA3",274,0)
 . S ICDS=$G(ICDAA(+ICDE,+ICDI))
"RTN","ICDEXA3",275,0)
 . S:ICDE?7N&(ICDI>0)&($L(ICDS)) ICDC=1,ICDA(ICDC)=ICDS,ICDA(0)=1
"RTN","ICDEXA3",276,0)
 I $G(ICDD)'?7N!($O(ICDA(0))'>0) D
"RTN","ICDEXA3",277,0)
 . S (ICDC,ICDI)=0 F  S ICDI=$O(^ICDS("F",ICDF,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",278,0)
 . . S ICDE=$P($G(^ICDS(+ICDI,0)),"^",1) Q:'$L(ICDE)
"RTN","ICDEXA3",279,0)
 . . S ICDTMP=$P($G(^ICDS(+ICDI,0)),"^",4)
"RTN","ICDEXA3",280,0)
 . . S ICDC=ICDC+1,ICDA(ICDC)=ICDI_"^"_ICDE,ICDA(0)=ICDC
"RTN","ICDEXA3",281,0)
 Q:ICDA(0)=1&($L($G(ICDA(1)))) $G(ICDA(1)) Q:ICDA(0)=1&('$L($G(ICDA(1)))) "-1^Invalid Selection"
"RTN","ICDEXA3",282,0)
 S ICDX=$G(FMT) S:ICDX'="I" ICDX="E" S ICDM=$O(ICDA(" "),-1) Q:ICDM'>0 "-1^Invalid Selection"
"RTN","ICDEXA3",283,0)
 Q:ICDM=1&($D(ICDA(1))) $G(ICDA(1))  Q:ICDM'>1 "-1^Invalid Selection"  S DIR(0)="NAO^1:"_ICDM_":0"
"RTN","ICDEXA3",284,0)
 S DIR("A",1)=" Coding System Selection for file "_ICDF,DIR("A",2)=" "
"RTN","ICDEXA3",285,0)
 S DIR("A")=" Select Coding System (1-"_ICDM_"):  "
"RTN","ICDEXA3",286,0)
 S ICDC=0,ICDI=0 F  S ICDI=$O(ICDA(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",287,0)
 . N ICD1,ICD2,ICDT S ICD1=$P($G(ICDA(ICDI)),"^",1) Q:ICD1'>0  S ICD2=$P($G(ICDA(ICDI)),"^",2) Q:'$L(ICD2)
"RTN","ICDEXA3",288,0)
 . S ICDT=ICD2 S:$G(ICDX)="I" ICDT=ICDT_$J(" ",(15-$L(ICDT)))_"(#"_ICD1_")"
"RTN","ICDEXA3",289,0)
 . S ICDC=ICDC+1 S DIR("A",(ICDC+2))="    "_$J(ICDC,2)_"   "_ICDT
"RTN","ICDEXA3",290,0)
 S:ICDC>1 ICDC=ICDC+1,DIR("A",(ICDC+2))=" " S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D CSH^ICDEXA3"
"RTN","ICDEXA3",291,0)
 W ! D ^DIR Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"  Q:'$L(Y) "-1^No Coding System Selected"  Q:+Y>0&($D(ICDA(+Y))) $G(ICDA(+Y))
"RTN","ICDEXA3",292,0)
 Q "-1^Invalid Selection"
"RTN","ICDEXA3",293,0)
CSH ; Select Coding System Help
"RTN","ICDEXA3",294,0)
 W:+($G(ICDM))'>1 !,?5,"This response must be a number."
"RTN","ICDEXA3",295,0)
 W:+($G(ICDM))>1 !,?5,"This response must be a number from 1 to ",+($G(ICDM)),"."
"RTN","ICDEXA3",296,0)
 Q
"RTN","ICDEXA3",297,0)
 ;
"RTN","ICDEXA3",298,0)
FI(X) ; Select ICD File
"RTN","ICDEXA3",299,0)
 ;
"RTN","ICDEXA3",300,0)
 ; Input
"RTN","ICDEXA3",301,0)
 ; 
"RTN","ICDEXA3",302,0)
 ;    X      File Number 80 or 80.1 or NULL
"RTN","ICDEXA3",303,0)
 ; 
"RTN","ICDEXA3",304,0)
 ; Output
"RTN","ICDEXA3",305,0)
 ;     
"RTN","ICDEXA3",306,0)
 ;    $$FI   File Number or -1 on error
"RTN","ICDEXA3",307,0)
 ;    
"RTN","ICDEXA3",308,0)
 ;           or -1 on error or non-selection
"RTN","ICDEXA3",309,0)
 ;              ^^ double up-arrows
"RTN","ICDEXA3",310,0)
 ;               ^ timeout or single up-arrow
"RTN","ICDEXA3",311,0)
 ;  
"RTN","ICDEXA3",312,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICD1,ICD2,ICDA,ICDC,ICDE,ICDF,ICDI,ICDM,ICDR,ICDT,Y
"RTN","ICDEXA3",313,0)
 S X=$G(X),ICDO=$$FIT(X,1) Q:"^80^80.1^"[("^"_ICDO_"^") ICDO  S ICD0=""
"RTN","ICDEXA3",314,0)
 S DIR("A")=" Select ICD file:  " S ICDDIR=$$TRIM($G(ICDDIR))
"RTN","ICDEXA3",315,0)
 S DIR("A",1)=" ICD file" S:$L($G(ICDDIR)) DIR("A",1)=" "_$G(ICDDIR) K ICDDIR
"RTN","ICDEXA3",316,0)
 S DIR("A",2)=" "
"RTN","ICDEXA3",317,0)
 S DIR("A",3)="     1   ICD Diagnosis file              #80     ^ICD9("
"RTN","ICDEXA3",318,0)
 S DIR("A",4)="     2   ICD Operations/Procedures file  #80.1   ^ICD0("
"RTN","ICDEXA3",319,0)
 S DIR("A",5)=" "
"RTN","ICDEXA3",320,0)
 S DIR(0)="NAO^1:2:0"
"RTN","ICDEXA3",321,0)
 S DIR("PRE")="S X=$$FIT^ICDEXA3(X)",(DIR("?"),DIR("??"))="^D FIH^ICDEXA3"
"RTN","ICDEXA3",322,0)
 D ^DIR Q:'$L($G(X)) "-1^No Selection"  Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"
"RTN","ICDEXA3",323,0)
 S ICDO=$$FIT(Y,1)  S X="-1^Invalid File Selection"
"RTN","ICDEXA3",324,0)
 S:"^80^80.1^"[("^"_ICDO_"^") X=ICDO
"RTN","ICDEXA3",325,0)
 Q X
"RTN","ICDEXA3",326,0)
FIH ; File Help
"RTN","ICDEXA3",327,0)
 W !,?5,"This response must be a number from 1 to 2."
"RTN","ICDEXA3",328,0)
 Q
"RTN","ICDEXA3",329,0)
DP(X) ; Select Diagnosis or Procedure
"RTN","ICDEXA3",330,0)
 ;
"RTN","ICDEXA3",331,0)
 ; Input
"RTN","ICDEXA3",332,0)
 ; 
"RTN","ICDEXA3",333,0)
 ;    X      Date
"RTN","ICDEXA3",334,0)
 ; 
"RTN","ICDEXA3",335,0)
 ; Output
"RTN","ICDEXA3",336,0)
 ;     
"RTN","ICDEXA3",337,0)
 ;    $$DP   Coding System based on Date or -1 on error
"RTN","ICDEXA3",338,0)
 ;    
"RTN","ICDEXA3",339,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICCD,ICDCS,ICDIMP,ICD1,ICD2,ICDA,ICDC,ICDE,ICDF,ICDI,ICDM,ICDR,ICDT,ICDTY,Y
"RTN","ICDEXA3",340,0)
 S ICDD=$P($G(X),".",1),ICD0="",ICDIMP=$$IMP^ICDEX(30),ICDTY="",ICDCS="" S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXA3",341,0)
 F ICDI=0 F  S ICDI=$O(^ICDS("F",80,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",342,0)
 . N ICDS,ICDSD S ICDS=$G(^ICDS(ICDI,0)),ICDSD=$P(ICDS,"^",4) Q:ICDSD'?7N
"RTN","ICDEXA3",343,0)
 . S:ICDSD<(ICDD+.0001) ICDTY=$P($P(ICDS,"^",1)," ",1) S:$L(ICDTY,"-")=2 ICDTY=$P(ICDTY,"-",1,2)
"RTN","ICDEXA3",344,0)
 S:'$L(ICDTY) ICDTY="ICD" S DIR("A")=" Select ICD Code Type:  " S ICDDIR=$$TRIM($G(ICDDIR))
"RTN","ICDEXA3",345,0)
 S DIR("A",1)=" Select one of the following:"
"RTN","ICDEXA3",346,0)
 S:$L($G(ICDDIR)) DIR("A",1)=" "_$G(ICDDIR) K ICDDIR
"RTN","ICDEXA3",347,0)
 S DIR("A",2)=" "
"RTN","ICDEXA3",348,0)
 S DIR("A",3)="     1   "_ICDTY_" Diagnosis Code"
"RTN","ICDEXA3",349,0)
 S DIR("A",4)="     2   "_ICDTY_" Operations/Procedures Code"
"RTN","ICDEXA3",350,0)
 S DIR("A",5)=" "
"RTN","ICDEXA3",351,0)
 S DIR(0)="NAO^1:2:0"
"RTN","ICDEXA3",352,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D DPH^ICDEXA3"
"RTN","ICDEXA3",353,0)
 D ^DIR Q:'$L($G(X)) "-1^No Selection"  Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"
"RTN","ICDEXA3",354,0)
 S:"^80^80.1^"[("^"_ICDO_"^") X=ICDO
"RTN","ICDEXA3",355,0)
 Q X
"RTN","ICDEXA3",356,0)
DPH ; File Help
"RTN","ICDEXA3",357,0)
 W !,?5,"This response must be a number from 1 to 2."
"RTN","ICDEXA3",358,0)
 Q
"RTN","ICDEXA3",359,0)
 ;
"RTN","ICDEXA3",360,0)
FIT(FILE,FMT) ; File Input Transform
"RTN","ICDEXA3",361,0)
 ;
"RTN","ICDEXA3",362,0)
 ; Input:
"RTN","ICDEXA3",363,0)
 ;
"RTN","ICDEXA3",364,0)
 ;   FILE  File number or identifier
"RTN","ICDEXA3",365,0)
 ;   FMT   Format
"RTN","ICDEXA3",366,0)
 ;           
"RTN","ICDEXA3",367,0)
 ;           0  Fileman DIR format (default)
"RTN","ICDEXA3",368,0)
 ;           1 - File number 80 or 80.1 or null
"RTN","ICDEXA3",369,0)
 ;
"RTN","ICDEXA3",370,0)
 ; Output:
"RTN","ICDEXA3",371,0)
 ; 
"RTN","ICDEXA3",372,0)
 ;   X     Fileman output format 1, 2, ??, ^ or ^^
"RTN","ICDEXA3",373,0)
 ;         File number output format 80, 80.1 or null
"RTN","ICDEXA3",374,0)
 ;
"RTN","ICDEXA3",375,0)
 N ICDF,ICDT,ICDO S ICDF=$G(FILE),ICDT=+($G(FMT)) Q:'ICDT&(ICDF["^^") "^^"  Q:'ICDT&(ICDF["^") "^"
"RTN","ICDEXA3",376,0)
 S ICDO="" S:ICDF["?" ICDO="??" Q:'ICDT&($L(ICDO)) ICDO
"RTN","ICDEXA3",377,0)
 S:ICDF="80"!(ICDF="1")!(ICDF="30")!(ICDF["ICD9")!(ICDF["ICD-9")!(ICDF["DX")!(ICDF["DIAG")!(ICDF="ICD")!(ICDF="10D") ICDO=1
"RTN","ICDEXA3",378,0)
 S:ICDF="80.1"!(ICDF="2")!(ICDF="31")!(ICDF["ICD0")!(ICDF["ICP")!(ICDF["OP")!(ICDF["PR")!(ICDF["PROC")!(ICDF="ICP")!(ICDF="10P") ICDO=2
"RTN","ICDEXA3",379,0)
 S:ICDT ICDO=$S(ICDO=1:80,ICDO=2:80.1,1:"")
"RTN","ICDEXA3",380,0)
 Q ICDO
"RTN","ICDEXA3",381,0)
TRIM(X,Y) ; Trim Character
"RTN","ICDEXA3",382,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXA3",383,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXA3",384,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXA3",385,0)
 Q X
"RTN","ICDEXC")
0^39^B108523477
"RTN","ICDEXC",1,0)
ICDEXC ;SLC/KER - ICD Extractor - Code APIs ;04/21/2014
"RTN","ICDEXC",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXC",3,0)
 ;               
"RTN","ICDEXC",4,0)
 ; Global Variables
"RTN","ICDEXC",5,0)
 ;    None
"RTN","ICDEXC",6,0)
 ;               
"RTN","ICDEXC",7,0)
 ; External References
"RTN","ICDEXC",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXC",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXC",10,0)
 ;               
"RTN","ICDEXC",11,0)
ICDDX(CODE,CDT,SYS,FMT,LOC) ; Return ICD Dx Code Info
"RTN","ICDEXC",12,0)
 ;
"RTN","ICDEXC",13,0)
 ; Input:
"RTN","ICDEXC",14,0)
 ;
"RTN","ICDEXC",15,0)
 ;   CODE  Code/IEN (required)
"RTN","ICDEXC",16,0)
 ;    CDT  Date (default = TODAY)
"RTN","ICDEXC",17,0)
 ;    SYS  Coding System (taken from file 80.4)
"RTN","ICDEXC",18,0)
 ;           1 = ICD-9 Diagnosis
"RTN","ICDEXC",19,0)
 ;          30 = ICD-10 Diagnosis
"RTN","ICDEXC",20,0)
 ;    FMT  Format
"RTN","ICDEXC",21,0)
 ;           E = External (default)
"RTN","ICDEXC",22,0)
 ;           I = Internal Entry Number
"RTN","ICDEXC",23,0)
 ;    LOC  Use Local codes
"RTN","ICDEXC",24,0)
 ;           1 = Yes
"RTN","ICDEXC",25,0)
 ;           0 = No (default)
"RTN","ICDEXC",26,0)
 ;
"RTN","ICDEXC",27,0)
 ; Output:
"RTN","ICDEXC",28,0)
 ;
"RTN","ICDEXC",29,0)
 ;  Returns an 22 piece string delimited by ^
"RTN","ICDEXC",30,0)
 ;  
"RTN","ICDEXC",31,0)
 ;    1  IEN of code in ^ICD9(
"RTN","ICDEXC",32,0)
 ;    2  ICD-9 Dx Code                (#.01)
"RTN","ICDEXC",33,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDEXC",34,0)
 ;    4  Versioned Dx                 (67 multiple)
"RTN","ICDEXC",35,0)
 ;    5  Unacceptable as Principal Dx (#1.3)
"RTN","ICDEXC",36,0)
 ;    6  Major Dx Cat                 (72 multiple)
"RTN","ICDEXC",37,0)
 ;    7  MDC13                        (#1.4)
"RTN","ICDEXC",38,0)
 ;    8  Compl/Comorb                 (103 multiple)
"RTN","ICDEXC",39,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDEXC",40,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDEXC",41,0)
 ;    11 Sex                          (10 multiple)
"RTN","ICDEXC",42,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDEXC",43,0)
 ;    13 MDC24                        (#1.5)
"RTN","ICDEXC",44,0)
 ;    14 MDC25                        (#1.6)
"RTN","ICDEXC",45,0)
 ;    15 Age Low                      (11 multiple)
"RTN","ICDEXC",46,0)
 ;    16 Age High                     (12 multiple)
"RTN","ICDEXC",47,0)
 ;    17 Activation Date              (66 multiple)
"RTN","ICDEXC",48,0)
 ;    18 Message                      
"RTN","ICDEXC",49,0)
 ;    19 Complication/Comorbidity     (103 multiple)
"RTN","ICDEXC",50,0)
 ;    20 Coding System                (#1.1)
"RTN","ICDEXC",51,0)
 ;    21 Primary CC Flag              (103 multiple)
"RTN","ICDEXC",52,0)
 ;    22 PDX Exclusion Code           (#1.11)
"RTN","ICDEXC",53,0)
 ;
"RTN","ICDEXC",54,0)
 ;    or
"RTN","ICDEXC",55,0)
 ;
"RTN","ICDEXC",56,0)
 ;    -1^Error Description
"RTN","ICDEXC",57,0)
 ;
"RTN","ICDEXC",58,0)
 N IEN,NODE,OUT,SAI,ROOT,SNAM,ICDY,UPC S FMT=$G(FMT) S:'$L(FMT) FMT="E"
"RTN","ICDEXC",59,0)
 S ROOT=$$ROOT^ICDEX(80),CODE=$G(CODE) Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",60,0)
 Q:FMT="I"&(CODE'?1N.N) "-1^Code not in correct format"
"RTN","ICDEXC",61,0)
 I FMT="I",CODE?1N.N S IEN=CODE,CODE=$P($G(^ICD9(IEN,0)),"^",1)
"RTN","ICDEXC",62,0)
 Q:'$L(CODE) "-1^No Code Selected"  S SYS=$$SYS^ICDEX(+($G(SYS)))
"RTN","ICDEXC",63,0)
 S UPC=$$UP^XLFSTR(CODE) S:+SYS'>0 SYS=$$SYS^ICDEX($G(UPC))  I +SYS'>0 D
"RTN","ICDEXC",64,0)
 . N FILE S FILE=$$CODEFI^ICDEX(UPC),SYS=$P($$CODECS^ICDEX(UPC,FILE),"^",1)
"RTN","ICDEXC",65,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",66,0)
 S SNAM=$$SNAM^ICDEX(+SYS),LOC=+($G(LOC))
"RTN","ICDEXC",67,0)
 S IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",68,0)
 S:+IEN'>0 IEN=$S(+SYS>0:$$CODEABA(UPC,ROOT,SYS),1:$$CODEBA(UPC,ROOT))
"RTN","ICDEXC",69,0)
 S:+IEN'>0&(+($G(LOC))>0)&($D(^ICD9("AVA",(CODE_" ")))) IEN=$O(^ICD9("AVA",(CODE_" "),0))
"RTN","ICDEXC",70,0)
 Q:IEN<1&(+SYS>0)&($L(SNAM)) ("-1^Invalid Code (not found in the "_SNAM_" system)")
"RTN","ICDEXC",71,0)
 Q:IEN<1 "-1^Invalid Code"  Q:'$D(^ICD9(IEN,0)) "-1^Invalid Code (not found)"
"RTN","ICDEXC",72,0)
 S ICDY=$P($G(^ICD9(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",73,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",74,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",75,0)
 S NODE=$P($G(^ICD9(IEN,0)),"^",1) Q:'$L(NODE) "-1^Code not found"
"RTN","ICDEXC",76,0)
 Q:'$G(SRC)&($P(^ICD9(IEN,1),U,7)) ("-1^VA Local Code Selected ("_NODE_")")
"RTN","ICDEXC",77,0)
 N SRC S OUT=IEN_"^"_NODE,SAI=$$SAI^ICDEX(80,IEN,CDT)
"RTN","ICDEXC",78,0)
 S NODE=$G(^ICD9(IEN,1)) Q:'$L(NODE) "-1^Data not found"
"RTN","ICDEXC",79,0)
 S $P(OUT,"^",3)=$$IDSTR^ICDEX(80,IEN)
"RTN","ICDEXC",80,0)
 S $P(OUT,"^",4)=$$VSTD^ICDEX(IEN,CDT)
"RTN","ICDEXC",81,0)
 S $P(OUT,"^",5)=$P(NODE,"^",3)
"RTN","ICDEXC",82,0)
 S $P(OUT,"^",6)=$$VMDC^ICDEX(IEN,CDT)
"RTN","ICDEXC",83,0)
 S $P(OUT,"^",7)=$P(NODE,"^",4)
"RTN","ICDEXC",84,0)
 S $P(OUT,"^",8)=$$VCC^ICDEX(IEN,CDT)
"RTN","ICDEXC",85,0)
 S:$P(NODE,"^",7)>0 $P(OUT,"^",9)=$P(NODE,"^",7)
"RTN","ICDEXC",86,0)
 S $P(OUT,"^",10)=$S(+$P($G(SAI),"^",1)>0:1,1:0)
"RTN","ICDEXC",87,0)
 S $P(OUT,"^",11)=$$VSEX^ICDEX(80,IEN,CDT)
"RTN","ICDEXC",88,0)
 S $P(OUT,"^",12)=$S($P($G(SAI),"^",3)?7N:$P($G(SAI),"^",3),1:"")
"RTN","ICDEXC",89,0)
 S $P(OUT,"^",13)=$P(NODE,"^",5)
"RTN","ICDEXC",90,0)
 S $P(OUT,"^",14)=$P(NODE,"^",6)
"RTN","ICDEXC",91,0)
 S $P(OUT,"^",15)=$$VAGEL^ICDEX(IEN,CDT)
"RTN","ICDEXC",92,0)
 S $P(OUT,"^",16)=$$VAGEH^ICDEX(IEN,CDT)
"RTN","ICDEXC",93,0)
 S $P(OUT,"^",17)=$S($P($G(SAI),"^",2)?7N:$P($G(SAI),"^",2),1:"")
"RTN","ICDEXC",94,0)
 S $P(OUT,"^",18)=$$MSG^ICDEX(CDT)
"RTN","ICDEXC",95,0)
 S $P(OUT,"^",19)=$$VCC^ICDEX(IEN,CDT)
"RTN","ICDEXC",96,0)
 S:+($G(^ICD9(+IEN,1)))>0 $P(OUT,"^",20)=+($G(^ICD9(+IEN,1)))
"RTN","ICDEXC",97,0)
 S $P(OUT,"^",21)=$$VCCP^ICDEX(IEN,CDT)
"RTN","ICDEXC",98,0)
 S $P(OUT,"^",22)=$$PDXE^ICDEX(IEN)
"RTN","ICDEXC",99,0)
 Q OUT
"RTN","ICDEXC",100,0)
 ;
"RTN","ICDEXC",101,0)
ICDOP(CODE,CDT,SYS,FMT,LOC) ; Return ICD Operation/Procedure Code Info
"RTN","ICDEXC",102,0)
 ;
"RTN","ICDEXC",103,0)
 ; Input:
"RTN","ICDEXC",104,0)
 ;
"RTN","ICDEXC",105,0)
 ;   CODE  Code/IEN (required)
"RTN","ICDEXC",106,0)
 ;    CDT  Date (default = TODAY)
"RTN","ICDEXC",107,0)
 ;    SYS  Coding System (taken from file 757.03)
"RTN","ICDEXC",108,0)
 ;           2 = ICD-9 Procedure
"RTN","ICDEXC",109,0)
 ;          31 = ICD-10 Procedure
"RTN","ICDEXC",110,0)
 ;    FMT  Format
"RTN","ICDEXC",111,0)
 ;           E = External (default)
"RTN","ICDEXC",112,0)
 ;           I = Internal Entry Number
"RTN","ICDEXC",113,0)
 ;    LOC  Use Local codes
"RTN","ICDEXC",114,0)
 ;           1 = Yes
"RTN","ICDEXC",115,0)
 ;           0 = No (default)
"RTN","ICDEXC",116,0)
 ;
"RTN","ICDEXC",117,0)
 ; Output:
"RTN","ICDEXC",118,0)
 ;
"RTN","ICDEXC",119,0)
 ;  Returns an 14 piece string delimited by ^
"RTN","ICDEXC",120,0)
 ;  
"RTN","ICDEXC",121,0)
 ;    1  IEN of code in ^ICD0(
"RTN","ICDEXC",122,0)
 ;    2  ICD procedure code           (#.01)
"RTN","ICDEXC",123,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDEXC",124,0)
 ;    4  MDC24                        (#1.5)
"RTN","ICDEXC",125,0)
 ;    5  Versioned Oper/Proc          (67 multiple)
"RTN","ICDEXC",126,0)
 ;    6  <null>
"RTN","ICDEXC",127,0)
 ;    7  <null>
"RTN","ICDEXC",128,0)
 ;    8  <null>
"RTN","ICDEXC",129,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDEXC",130,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDEXC",131,0)
 ;    11 Use with Sex                 (10 multiple)
"RTN","ICDEXC",132,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDEXC",133,0)
 ;    13 Activation Date              (66 multiple)
"RTN","ICDEXC",134,0)
 ;    14 Message
"RTN","ICDEXC",135,0)
 ;    15 Coding System                (#1.1)
"RTN","ICDEXC",136,0)
 ;
"RTN","ICDEXC",137,0)
 ;    or
"RTN","ICDEXC",138,0)
 ;
"RTN","ICDEXC",139,0)
 ;    -1^Error Description
"RTN","ICDEXC",140,0)
 ;
"RTN","ICDEXC",141,0)
 N IEN,NODE,OUT,ROOT,SNAM,SAI,ICDY S FMT=$G(FMT) S:'$L(FMT) FMT="E"
"RTN","ICDEXC",142,0)
 S ROOT=$$ROOT^ICDEX(80.1),CODE=$G(CODE) Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",143,0)
 Q:FMT="I"&(CODE'?1N.N) "-1^Code not in correct format"
"RTN","ICDEXC",144,0)
 I FMT="I",CODE?1N.N S IEN=CODE,CODE=$P($G(^ICD0(+IEN,0)),"^",1),FMT="E"
"RTN","ICDEXC",145,0)
 Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",146,0)
 S SYS=$$SYS^ICDEX(+($G(SYS))),LOC=+($G(LOC)) I +SYS'>0 D
"RTN","ICDEXC",147,0)
 . N FILE S FILE=$$CODEFI^ICDEX(CODE),SYS=$P($$CODECS^ICDEX(CODE,FILE),"^",1)
"RTN","ICDEXC",148,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",149,0)
 S SNAM=$$SNAM^ICDEX(+SYS),IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",150,0)
 S:+IEN'>0&(+($G(LOC))>0)&($D(^ICD0("AVA",(CODE_" ")))) IEN=$O(^ICD0("AVA",(CODE_" "),0))
"RTN","ICDEXC",151,0)
 Q:IEN<1&(+SYS>0)&($L(SNAM)) ("-1^Invalid Code (not found in the "_SNAM_" system)")
"RTN","ICDEXC",152,0)
 Q:IEN<1 "-1^Invalid Code"  Q:'$D(^ICD0(IEN,0)) "-1^Invalid Code (not found)"
"RTN","ICDEXC",153,0)
 S ICDY=$P($G(^ICD0(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",154,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",155,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",156,0)
 S NODE=$P($G(^ICD0(+IEN,0)),"^",1) Q:'$L(NODE) "-1^Code not found"
"RTN","ICDEXC",157,0)
 Q:'$G(SRC)&($P(^ICD0(IEN,1),U,7)) ("-1^VA Local Code Selected ("_NODE_")")
"RTN","ICDEXC",158,0)
 N SRC S OUT=IEN_"^"_NODE,SAI=$$SAI^ICDEX(80.1,IEN,CDT)
"RTN","ICDEXC",159,0)
 S NODE=$G(^ICD0(IEN,1)) Q:'$L(NODE) "-1^Data not found"
"RTN","ICDEXC",160,0)
 S $P(OUT,"^",3)=$$IDSTR^ICDEX(80.1,IEN)
"RTN","ICDEXC",161,0)
 S $P(OUT,"^",4)=$P(NODE,"^",5)
"RTN","ICDEXC",162,0)
 S $P(OUT,"^",5)=$$VSTP^ICDEX(IEN,CDT)
"RTN","ICDEXC",163,0)
 S:$P(NODE,"^",7)>0 $P(OUT,"^",9)=$P(NODE,"^",7)
"RTN","ICDEXC",164,0)
 S $P(OUT,"^",10)=$S(+$P($G(SAI),"^",1)>0:1,1:0)
"RTN","ICDEXC",165,0)
 S $P(OUT,"^",11)=$$VSEX^ICDEX(80.1,IEN,CDT)
"RTN","ICDEXC",166,0)
 S $P(OUT,"^",12)=$S($P($G(SAI),"^",3)?7N:$P($G(SAI),"^",3),1:"")
"RTN","ICDEXC",167,0)
 S $P(OUT,"^",13)=$S($P($G(SAI),"^",2)?7N:$P($G(SAI),"^",2),1:"")
"RTN","ICDEXC",168,0)
 S $P(OUT,"^",14)=$$MSG^ICDEX(CDT)
"RTN","ICDEXC",169,0)
 S:+($G(^ICD0(+IEN,1)))>0 $P(OUT,"^",15)=+($G(^ICD0(+IEN,1)))
"RTN","ICDEXC",170,0)
 Q OUT
"RTN","ICDEXC",171,0)
ICDD(CODE,ARY,CDT,SYS,LEN) ; Returns ICD description in array
"RTN","ICDEXC",172,0)
 ;
"RTN","ICDEXC",173,0)
 ; Input:
"RTN","ICDEXC",174,0)
 ;
"RTN","ICDEXC",175,0)
 ;   CODE  Code, external format (required)
"RTN","ICDEXC",176,0)
 ;   ARY   Array Name passed by reference (required)
"RTN","ICDEXC",177,0)
 ;   CDT   Date (optional, default = TODAY)
"RTN","ICDEXC",178,0)
 ;   SYS   Coding System (optional)
"RTN","ICDEXC",179,0)
 ;   LEN   Sting Length (optional, > 27, default 245)
"RTN","ICDEXC",180,0)
 ;
"RTN","ICDEXC",181,0)
 ; Output:
"RTN","ICDEXC",182,0)
 ; 
"RTN","ICDEXC",183,0)
 ;   #   Number of lines in array
"RTN","ICDEXC",184,0)
 ;
"RTN","ICDEXC",185,0)
 ;   ARY(1) - Versioned Description (68 multiple)
"RTN","ICDEXC",186,0)
 ;   
"RTN","ICDEXC",187,0)
 ;   If there is a warning message (ICD-9 only):
"RTN","ICDEXC",188,0)
 ;   
"RTN","ICDEXC",189,0)
 ;     ARY(n+1) - blank
"RTN","ICDEXC",190,0)
 ;     ARY(n+2) - warning message: CODE TEXT MAY BE INACCURATE
"RTN","ICDEXC",191,0)
 ;
"RTN","ICDEXC",192,0)
 ;   or
"RTN","ICDEXC",193,0)
 ;
"RTN","ICDEXC",194,0)
 ;   -1^Error Description
"RTN","ICDEXC",195,0)
 ;
"RTN","ICDEXC",196,0)
 ;
"RTN","ICDEXC",197,0)
 N ARR,END,I,N,ROOT,SNAM,VAR,IEN,ICDY
"RTN","ICDEXC",198,0)
 Q:'$L($G(CODE)) "-1^Missing required input parameter CODE"
"RTN","ICDEXC",199,0)
 S SYS=$$SYS^ICDEX(+($G(SYS))) I +SYS'>0 D
"RTN","ICDEXC",200,0)
 . N FILE S FILE=$$CODEFI^ICDEX(CODE),SYS=$P($$CODECS^ICDEX(CODE,FILE),"^",1)
"RTN","ICDEXC",201,0)
 S ROOT=$$ROOT^ICDEX(+SYS)
"RTN","ICDEXC",202,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")!('$L(ROOT)) "-1^Invalid Coding System"
"RTN","ICDEXC",203,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",204,0)
 S SNAM=$$SNAM^ICDEX(+SYS),IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",205,0)
 Q:+IEN<1!('$L(ROOT)) "-1^Invalid Code"  Q:'$D(@(ROOT_IEN_",0)")) "-1^Code not found"
"RTN","ICDEXC",206,0)
 S LEN=+($G(LEN)) S:LEN'>0 LEN=245  S:LEN<28 LEN=245 K ARY
"RTN","ICDEXC",207,0)
 S ICDY=$P($G(@(ROOT_+IEN_",1)")),"^",1)
"RTN","ICDEXC",208,0)
 Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",209,0)
 S I=0,N=0
"RTN","ICDEXC",210,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",211,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",212,0)
 S ARY(1)=$$VLT^ICDEX(ROOT,IEN,CDT)
"RTN","ICDEXC",213,0)
 I LEN>27,LEN<245 D PAR^ICDEX(.ARY,LEN)
"RTN","ICDEXC",214,0)
 S N=$O(ARY(" "),-1) I +ICDY<3 D
"RTN","ICDEXC",215,0)
 . N MSG S MSG=$$MSG^ICDEX(CDT) Q:'$L(MSG)  S ARY(N+1)=" ",ARY(N+2)=MSG
"RTN","ICDEXC",216,0)
 S N=+($O(ARY(" "),-1))
"RTN","ICDEXC",217,0)
 Q N
"RTN","ICDEXC",218,0)
CODEN(CODE,FILE) ; Return IEN of ICD code
"RTN","ICDEXC",219,0)
 ;
"RTN","ICDEXC",220,0)
 ; Input:
"RTN","ICDEXC",221,0)
 ; 
"RTN","ICDEXC",222,0)
 ;   CODE  ICD code (required)
"RTN","ICDEXC",223,0)
 ;   FILE  File Number to search for code
"RTN","ICDEXC",224,0)
 ;            80 = ICD Dx file
"RTN","ICDEXC",225,0)
 ;            80.1 = ICD Oper/Proc file
"RTN","ICDEXC",226,0)
 ;  
"RTN","ICDEXC",227,0)
 ; Output:
"RTN","ICDEXC",228,0)
 ; 
"RTN","ICDEXC",229,0)
 ;   IEN~Global Root    or    -1~error message
"RTN","ICDEXC",230,0)
 ;
"RTN","ICDEXC",231,0)
 N ROOT,IEN,ERR,SYS,EIEN,ICDU S ERR=""
"RTN","ICDEXC",232,0)
 Q:$G(CODE)="" "-1~Missing required input parameter CODE"
"RTN","ICDEXC",233,0)
 S CODE=$TR(CODE," ",""),ICDU=$$UP^XLFSTR(CODE)
"RTN","ICDEXC",234,0)
 S:"^80^80.1^"'[("^"_$G(FILE)_"^") FILE=$$CODEFI^ICDEX(CODE)
"RTN","ICDEXC",235,0)
 S SYS=$P($$CODECS^ICDEX(CODE,FILE),"^",1)
"RTN","ICDEXC",236,0)
 S ROOT=$$ROOT^ICDEX($G(FILE)) Q:'$L(ROOT) "-1~Invalid File"
"RTN","ICDEXC",237,0)
 S IEN=$$CODEBA(CODE,ROOT) S:+IEN'>0 ERR="-1~Invalid or Code not found"
"RTN","ICDEXC",238,0)
 I $D(ICDVP),CODE?1N.N,+ERR<0,$L(ROOT) S:$D(@(ROOT_+CODE_",0)")) IEN=+CODE,ERR="" N ICDVP
"RTN","ICDEXC",239,0)
 I +IEN>0,$D(@(ROOT_"""AEXC"","""_ICDU_" "","_+IEN_")")) D
"RTN","ICDEXC",240,0)
 . S ERR="-1~IEN "_+IEN_" is excluded from lookup"
"RTN","ICDEXC",241,0)
 Q:+ERR<0 ERR  Q (IEN_"~"_ROOT)
"RTN","ICDEXC",242,0)
CODE(FILE,IEN) ; Replaces Direct Global Read of Code
"RTN","ICDEXC",243,0)
 ;
"RTN","ICDEXC",244,0)
 ; Input:
"RTN","ICDEXC",245,0)
 ; 
"RTN","ICDEXC",246,0)
 ;    IEN     Internal Entry Number (required)
"RTN","ICDEXC",247,0)
 ;    FILE    File Number 80 or 80.1 (required)
"RTN","ICDEXC",248,0)
 ;    
"RTN","ICDEXC",249,0)
 ; Output:
"RTN","ICDEXC",250,0)
 ; 
"RTN","ICDEXC",251,0)
 ;    $$CODE  An ICD Diagnosis or Procedure code
"RTN","ICDEXC",252,0)
 ;    
"RTN","ICDEXC",253,0)
 ;           or -1 ^ message on error
"RTN","ICDEXC",254,0)
 ;    
"RTN","ICDEXC",255,0)
 ;  Retire IA 280, 365, 582, 5388, 5404
"RTN","ICDEXC",256,0)
 ;  
"RTN","ICDEXC",257,0)
 N ICDC,ICDF,ICDI,ICDR,ICDE S ICDI=$G(IEN) Q:+ICDI'>0 "-1^Invalid IEN"
"RTN","ICDEXC",258,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXC",259,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File Root"
"RTN","ICDEXC",260,0)
 Q:'$D(@(ICDR_+ICDI_")")) "-1^Invalid IEN for File"
"RTN","ICDEXC",261,0)
 S ICDC=$P($G(@(ICDR_+ICDI_",0)")),"^",1)
"RTN","ICDEXC",262,0)
 Q $S($L(ICDC):ICDC,1:"-1^Code Not Found")
"RTN","ICDEXC",263,0)
CODEBA(CODE,ROOT) ; Return IEN based on Code and Root
"RTN","ICDEXC",264,0)
 ;
"RTN","ICDEXC",265,0)
 ; Input:
"RTN","ICDEXC",266,0)
 ;
"RTN","ICDEXC",267,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDEXC",268,0)
 ;   ROOT  File Root or Number (required)
"RTN","ICDEXC",269,0)
 ;            ^ICD9( or 80
"RTN","ICDEXC",270,0)
 ;            ^ICD0( or 80.1
"RTN","ICDEXC",271,0)
 ;
"RTN","ICDEXC",272,0)
 ; Output:
"RTN","ICDEXC",273,0)
 ; 
"RTN","ICDEXC",274,0)
 ;   IEN   IEN for CODE in ROOT or -1 if not found
"RTN","ICDEXC",275,0)
 ;   
"RTN","ICDEXC",276,0)
 Q:'$L($G(CODE)) -1  S:$TR($G(ROOT),".","")?1N.N ROOT=$$ROOT^ICDEX(ROOT) Q:'$L($G(ROOT)) -1
"RTN","ICDEXC",277,0)
 N IEN,OUT,FILE,TMP,ICDU,VIEN,EIEN S IEN=0,OUT="",FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0 -1
"RTN","ICDEXC",278,0)
 S ICDU=$$UP^XLFSTR(CODE) S EIEN=$O(@(ROOT_"""AEXC"","""_ICDU_" "",0)"))
"RTN","ICDEXC",279,0)
 S VIEN=$O(@(ROOT_"""AVA"","""_ICDU_" "",0)"))
"RTN","ICDEXC",280,0)
 I +IEN'>0,CODE?1N.N,$L(ROOT) D
"RTN","ICDEXC",281,0)
 . I $D(ICDVP) S:$D(@(ROOT_+CODE_",0)")) (IEN,OUT)=+CODE N ICDVP
"RTN","ICDEXC",282,0)
 I IEN'>0 S OUT="",IEN=0 F TMP=CODE,ICDU D
"RTN","ICDEXC",283,0)
 . S IEN=0 F  S IEN=$O(@(ROOT_"""BA"","""_TMP_" "","_IEN_")")) Q:+IEN'>0  Q:+OUT>0  D
"RTN","ICDEXC",284,0)
 . . N EXC S EXC=$$EXC^ICDEX(FILE,IEN) S:+EXC'>0 OUT=IEN
"RTN","ICDEXC",285,0)
 S IEN=+($G(OUT))
"RTN","ICDEXC",286,0)
 I +IEN>0,$D(@(ROOT_"""AEXC"","""_ICDU_" "","_+IEN_")")) Q ("-1^IEN "_+EIEN_" is excluded from lookup")
"RTN","ICDEXC",287,0)
 I +IEN'>0,+EIEN>0 Q ("-1^Code "_ICDU_", IEN "_+EIEN_" is excluded from lookup")
"RTN","ICDEXC",288,0)
 I +IEN'>0,+VIEN>0 Q ("-1^Code "_ICDU_", IEN "_+VIEN_" is a VA local code, not used")
"RTN","ICDEXC",289,0)
 Q $S('IEN:-1,1:IEN)
"RTN","ICDEXC",290,0)
CODEABA(CODE,ROOT,SYS) ; Return IEN based on Code, Root and Coding System
"RTN","ICDEXC",291,0)
 ;
"RTN","ICDEXC",292,0)
 ; Input:
"RTN","ICDEXC",293,0)
 ;
"RTN","ICDEXC",294,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDEXC",295,0)
 ;   ROOT  File Root or Number (Optional if SYS is supplied)
"RTN","ICDEXC",296,0)
 ;            ^ICD9( or 80
"RTN","ICDEXC",297,0)
 ;            ^ICD0( or 80.1
"RTN","ICDEXC",298,0)
 ;   SYS   Coding System (required)
"RTN","ICDEXC",299,0)
 ;           1 = ICD-9 Diagnosis
"RTN","ICDEXC",300,0)
 ;           2 = ICD-9 Procedure
"RTN","ICDEXC",301,0)
 ;          30 = ICD-10 Diagnosis
"RTN","ICDEXC",302,0)
 ;          31 = ICD-10 Procedure
"RTN","ICDEXC",303,0)
 ;
"RTN","ICDEXC",304,0)
 ; Output:
"RTN","ICDEXC",305,0)
 ; 
"RTN","ICDEXC",306,0)
 ;   IEN   IEN for CODE in ROOT for SYS 
"RTN","ICDEXC",307,0)
 ;         or 
"RTN","ICDEXC",308,0)
 ;         -1 ^ error message if not found
"RTN","ICDEXC",309,0)
 ;   
"RTN","ICDEXC",310,0)
 N IEN,ICDF,ICDR,ICDI,ICDS,ICDU,ICDE,ICDV S CODE=$TR($G(CODE)," ","")
"RTN","ICDEXC",311,0)
 Q:'$L(CODE) "-1^Code missing"  Q:CODE["""" "-1^Invalid code"
"RTN","ICDEXC",312,0)
 S (ICDS,SYS)=+($G(SYS)),ICDU=$$UP^XLFSTR(CODE)
"RTN","ICDEXC",313,0)
 I ICDS'>0 D
"RTN","ICDEXC",314,0)
 . N ICDF S ICDF=$$CODEFI^ICDEX(CODE),(ICDS,SYS)=$P($$CODECS^ICDEX(CODE,ICDF),"^",1)
"RTN","ICDEXC",315,0)
 Q:+ICDS'>0 "-1^Invalid coding system"
"RTN","ICDEXC",316,0)
 S ICDR="" S ICDR=$$ROOT^ICDEX($G(ROOT))
"RTN","ICDEXC",317,0)
 S:'$L(ICDR) ICDR=$$ROOT^ICDEX(+($G(SYS)))
"RTN","ICDEXC",318,0)
 S:'$L(ICDR) ICDR=$$ROOT^ICDEX(+($G(ICDS)))
"RTN","ICDEXC",319,0)
 Q:'$L(ICDR) "-1^Invalid file/root"
"RTN","ICDEXC",320,0)
 S ICDE=$O(@(ICDR_"""AEXC"","""_ICDU_" "",0)"))
"RTN","ICDEXC",321,0)
 S ICDV=$O(@(ICDR_"""AVA"","""_ICDU_" "",0)"))
"RTN","ICDEXC",322,0)
 S:+($G(IEN))'>0 IEN=$O(@(ICDR_"""ABA"","_+ICDS_","""_CODE_" "","" "")"),-1)
"RTN","ICDEXC",323,0)
 S:+($G(IEN))'>0 IEN=$O(@(ICDR_"""ABA"","_+ICDS_","""_ICDU_" "","" "")"),-1)
"RTN","ICDEXC",324,0)
 I IEN'>0,+ICDE>0 Q ("-1^IEN "_+ICDE_" is excluded from lookup")
"RTN","ICDEXC",325,0)
 I IEN'>0,+ICDV>0 Q ("-1^CODE "_ICDU_", IEN "_+ICDE_" is a VA local code, not used")
"RTN","ICDEXC",326,0)
 Q $S('IEN:"-1^IEN/Code not found",1:IEN)
"RTN","ICDEXC2")
0^40^B74960854
"RTN","ICDEXC2",1,0)
ICDEXC2 ;SLC/KER - ICD Extractor - Code APIs (cont) ;04/21/2014
"RTN","ICDEXC2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXC2",3,0)
 ;               
"RTN","ICDEXC2",4,0)
 ; Global Variables
"RTN","ICDEXC2",5,0)
 ;    ^ICD0("BA")         N/A
"RTN","ICDEXC2",6,0)
 ;    ^ICD0("ABA")        N/A
"RTN","ICDEXC2",7,0)
 ;    ^ICD9("BA")         N/A
"RTN","ICDEXC2",8,0)
 ;    ^ICD9("ABA")        N/A
"RTN","ICDEXC2",9,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXC2",10,0)
 ;               
"RTN","ICDEXC2",11,0)
 ; External References
"RTN","ICDEXC2",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXC2",13,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXC2",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXC2",15,0)
 ;               
"RTN","ICDEXC2",16,0)
 Q
"RTN","ICDEXC2",17,0)
CODEFI(CODE) ; Return file where code is found (exact match)
"RTN","ICDEXC2",18,0)
 ;
"RTN","ICDEXC2",19,0)
 ; Input:
"RTN","ICDEXC2",20,0)
 ;
"RTN","ICDEXC2",21,0)
 ;   CODE  ICD code (required)
"RTN","ICDEXC2",22,0)
 ;
"RTN","ICDEXC2",23,0)
 ; Output:
"RTN","ICDEXC2",24,0)
 ; 
"RTN","ICDEXC2",25,0)
 ;   FILE  File Number
"RTN","ICDEXC2",26,0)
 ;           80   = ICD Dx file
"RTN","ICDEXC2",27,0)
 ;           80.1 = ICD Oper/Proc file
"RTN","ICDEXC2",28,0)
 ;           Null
"RTN","ICDEXC2",29,0)
 ;            
"RTN","ICDEXC2",30,0)
 N ICDU,ICDO,ICDT S CODE=$G(CODE) Q:'$L(CODE) ""  S ICDU=$$UP^XLFSTR(CODE)
"RTN","ICDEXC2",31,0)
 S ICDO=0 F ICDT=CODE,ICDU D  Q:+ICDO>0
"RTN","ICDEXC2",32,0)
 . S:$O(^ICD9("BA",(ICDT_" "),0))>0&($O(^ICD0("BA",(ICDT_" "),0))'>0) ICDO=80
"RTN","ICDEXC2",33,0)
 . S:$O(^ICD0("BA",(ICDT_" "),0))>0&($O(^ICD9("BA",(ICDT_" "),0))'>0) ICDO=80.1
"RTN","ICDEXC2",34,0)
 . S:$O(^ICD9("BA",(ICDT_" "),0))>0 ICDO=80
"RTN","ICDEXC2",35,0)
 . S:$O(^ICD0("BA",(ICDT_" "),0))>0 ICDO=80.1
"RTN","ICDEXC2",36,0)
 Q $S(ICDO>0:ICDO,1:"")
"RTN","ICDEXC2",37,0)
CODECS(CODE,FILE,CDT) ; Return coding system where code is found (exact match)
"RTN","ICDEXC2",38,0)
 ;
"RTN","ICDEXC2",39,0)
 ; Input:
"RTN","ICDEXC2",40,0)
 ;
"RTN","ICDEXC2",41,0)
 ;   CODE  ICD code/IEN (required)
"RTN","ICDEXC2",42,0)
 ;   FILE  File Number (required)
"RTN","ICDEXC2",43,0)
 ;            80   = ICD Dx file
"RTN","ICDEXC2",44,0)
 ;            80.1 = ICD Oper/Proc file
"RTN","ICDEXC2",45,0)
 ;   CDT   Date used to determine Coding
"RTN","ICDEXC2",46,0)
 ;         System (optional, default TODAY)
"RTN","ICDEXC2",47,0)
 ;
"RTN","ICDEXC2",48,0)
 ; Output:
"RTN","ICDEXC2",49,0)
 ; 
"RTN","ICDEXC2",50,0)
 ;   SYS   2 piece ^ delimited string
"RTN","ICDEXC2",51,0)
 ;            1   Coding System
"RTN","ICDEXC2",52,0)
 ;            2   Coding Nomenclature
"RTN","ICDEXC2",53,0)
 ;            
"RTN","ICDEXC2",54,0)
 ;                 1  ^  ICD-9-CM
"RTN","ICDEXC2",55,0)
 ;                 2  ^  ICD-9 Proc
"RTN","ICDEXC2",56,0)
 ;                30  ^  ICD-10-CM
"RTN","ICDEXC2",57,0)
 ;                31  ^  ICD-10-PCS
"RTN","ICDEXC2",58,0)
 ;         
"RTN","ICDEXC2",59,0)
 ;         or null if not found
"RTN","ICDEXC2",60,0)
 ;   
"RTN","ICDEXC2",61,0)
 N ICDFI,ICDCS,ICDT,ICDID,ICD10,ICDU,ICDC S CODE=$TR($G(CODE)," ",""),ICDCS="",ICD10=+($$IMP^ICDEX(30)) Q:'$L(CODE) ""
"RTN","ICDEXC2",62,0)
 S ICDU=$$UP^XLFSTR(CODE),ICDFI=+($G(FILE)) S:"^80^80.1^"'[("^"_$G(ICDFI)_"^") ICDFI=+($$CODEFI(CODE))
"RTN","ICDEXC2",63,0)
 S ICDT=$G(CDT) S:ICDT'?7N ICDT=$$DT^XLFDT F ICDID=(CODE_" "),(ICDU_" ") D  Q:$L(ICDCS)
"RTN","ICDEXC2",64,0)
 . I ICDFI=80 D  Q:$L(ICDCS)
"RTN","ICDEXC2",65,0)
 . . I $O(^ICD9("ABA",1,ICDID,0))>0,$O(^ICD9("ABA",30,ICDID,0))'>0 S ICDCS="1^ICD-9-CM" Q
"RTN","ICDEXC2",66,0)
 . . I $O(^ICD9("ABA",30,ICDID,0))>0,$O(^ICD9("ABA",1,ICDID,0))'>0 S ICDCS="30^ICD-10-CM" Q
"RTN","ICDEXC2",67,0)
 . . I $O(^ICD9("ABA",30,ICDID,0))>0,$O(^ICD9("ABA",1,ICDID,0))>0,ICDT<ICD10 S ICDCS="1^ICD-9-CM" Q
"RTN","ICDEXC2",68,0)
 . . I $O(^ICD9("ABA",30,ICDID,0))>0,$O(^ICD9("ABA",1,ICDID,0))>0,ICDT'<ICD10 S ICDCS="30^ICD-10-CM" Q
"RTN","ICDEXC2",69,0)
 . . Q  S:ICDT<ICD10 ICDCS="1^ICD-9-CM" S:ICDT'<ICD10 ICDCS="30^ICD-10-CM"
"RTN","ICDEXC2",70,0)
 . I ICDFI=80.1 D  Q:$L(ICDCS)
"RTN","ICDEXC2",71,0)
 . . I $O(^ICD0("ABA",2,ICDID,0))>0,$O(^ICD0("ABA",31,ICDID,0))'>0 S ICDCS="2^ICD-9 Proc" Q
"RTN","ICDEXC2",72,0)
 . . I $O(^ICD0("ABA",31,ICDID,0))>0,$O(^ICD0("ABA",2,ICDID,0))'>0 S ICDCS="31^ICD-10-PCS" Q
"RTN","ICDEXC2",73,0)
 . . I $O(^ICD0("ABA",31,ICDID,0))>0,$O(^ICD0("ABA",2,ICDID,0))>0,ICDT<ICD10 S ICDCS="2^ICD-9 Proc" Q
"RTN","ICDEXC2",74,0)
 . . I $O(^ICD0("ABA",31,ICDID,0))>0,$O(^ICD0("ABA",2,ICDID,0))>0,ICDT'<ICD10 S ICDCS="31^ICD-10-PCS" Q
"RTN","ICDEXC2",75,0)
 . . Q  S:ICDT<ICD10 ICDCS="2^ICD-9 Proc" S:ICDT'<ICD10 ICDCS="31^ICD-10-PCS"
"RTN","ICDEXC2",76,0)
 Q:$L(ICDCS) ICDCS
"RTN","ICDEXC2",77,0)
 Q ""
"RTN","ICDEXC2",78,0)
CSI(FILE,IEN) ; Coding System for file and IEN
"RTN","ICDEXC2",79,0)
 ;
"RTN","ICDEXC2",80,0)
 ; Input:
"RTN","ICDEXC2",81,0)
 ;
"RTN","ICDEXC2",82,0)
 ;   FILE   File Number (required)
"RTN","ICDEXC2",83,0)
 ;   IEN    IEN in file 80/80.1 (required)
"RTN","ICDEXC2",84,0)
 ;
"RTN","ICDEXC2",85,0)
 ; Output:
"RTN","ICDEXC2",86,0)
 ; 
"RTN","ICDEXC2",87,0)
 ;   $$CSI  Coding System (pointer to file 80.4)
"RTN","ICDEXC2",88,0)
 ;          or null if not found
"RTN","ICDEXC2",89,0)
 ;   
"RTN","ICDEXC2",90,0)
 N ICDI,ICDRT,ICDCS S ICDRT=$$ROOT^ICDEX(+($G(FILE))) Q:'$L(ICDRT) ""
"RTN","ICDEXC2",91,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0 ""  S ICDCS=+($P($G(@(ICDRT_+ICDI_",1)")),"^",1)) Q:+ICDCS'>0 ""
"RTN","ICDEXC2",92,0)
 Q ICDCS
"RTN","ICDEXC2",93,0)
VMDC(IEN,CDT,FMT) ; Versioned Major Diagnostic Category
"RTN","ICDEXC2",94,0)
 ;
"RTN","ICDEXC2",95,0)
 ; Input:
"RTN","ICDEXC2",96,0)
 ;
"RTN","ICDEXC2",97,0)
 ;   IEN   IEN in file 80 (required)
"RTN","ICDEXC2",98,0)
 ;   CDT   Date to use to Extract MDC (default TODAY)
"RTN","ICDEXC2",99,0)
 ;   FMT   Output Format
"RTN","ICDEXC2",100,0)
 ;           0 = MDC only (default)
"RTN","ICDEXC2",101,0)
 ;           1 = MDC ^ Effective Date
"RTN","ICDEXC2",102,0)
 ;
"RTN","ICDEXC2",103,0)
 ; Output:
"RTN","ICDEXC2",104,0)
 ; 
"RTN","ICDEXC2",105,0)
 ;   MDC   Major Diagnostic Category
"RTN","ICDEXC2",106,0)
 ;            
"RTN","ICDEXC2",107,0)
 N MDC,DRGFY,ICDY,ICDD,ICDM,ICDOUT Q:+($G(IEN))'>0 ""  S FMT=+($G(FMT)) S:FMT'=1 FMT=0
"RTN","ICDEXC2",108,0)
 S ICDY=$P($G(^ICD9(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC2",109,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX($G(CDT),,ICDY)) Q:CDT'?7N ""
"RTN","ICDEXC2",110,0)
 S (MDC,DRGFY)="" S DRGFY=$O(^ICD9(+($G(IEN)),4,"B",(CDT+.001)),-1),MDC=$O(^ICD9(+($G(IEN)),4,"B",+DRGFY,MDC))
"RTN","ICDEXC2",111,0)
 S ICDOUT=$P($G(^ICD9(+($G(IEN)),4,+MDC,0)),U,2) S:FMT>0 ICDOUT=ICDOUT_"^"_$P($G(^ICD9(+($G(IEN)),4,+MDC,0)),U,1)
"RTN","ICDEXC2",112,0)
 Q ICDOUT
"RTN","ICDEXC2",113,0)
VSEX(FILE,IEN,CDT,FMT) ; Versioned Sex
"RTN","ICDEXC2",114,0)
 ;
"RTN","ICDEXC2",115,0)
 ; Input:
"RTN","ICDEXC2",116,0)
 ;
"RTN","ICDEXC2",117,0)
 ;   FILE  File
"RTN","ICDEXC2",118,0)
 ;           80    ICD Diagnosis file
"RTN","ICDEXC2",119,0)
 ;           80.1  ICD Operation/Procedure file
"RTN","ICDEXC2",120,0)
 ;   IEN   IEN (required)
"RTN","ICDEXC2",121,0)
 ;   CDT   Date to use to Extract Sex (default TODAY)
"RTN","ICDEXC2",122,0)
 ;   FMT   Output Format
"RTN","ICDEXC2",123,0)
 ;           0 = Sex only (default)
"RTN","ICDEXC2",124,0)
 ;           1 = Sex ^ Effective Date
"RTN","ICDEXC2",125,0)
 ;
"RTN","ICDEXC2",126,0)
 ; Output:
"RTN","ICDEXC2",127,0)
 ; 
"RTN","ICDEXC2",128,0)
 ;   SEX   Sex
"RTN","ICDEXC2",129,0)
 ;           M   Male
"RTN","ICDEXC2",130,0)
 ;           F   Female
"RTN","ICDEXC2",131,0)
 ;           Null
"RTN","ICDEXC2",132,0)
 ;            
"RTN","ICDEXC2",133,0)
 N ICDI,ICDR,ICDN,ICDD,ICDE,ICDS,ICDY,ICDOUT S ICDI=+($G(IEN)) Q:+ICDI'>0 ""
"RTN","ICDEXC2",134,0)
 S FMT=+($G(FMT)) S:FMT'=1 FMT=0 S ICDR=$$ROOT^ICDEX($G(FILE)) Q:'$L(ICDR) ""
"RTN","ICDEXC2",135,0)
 S ICDN=$S(ICDR="^ICD9(":5,ICDR="^ICD0(":3,1:"") Q:+ICDN'>0 ""
"RTN","ICDEXC2",136,0)
 S ICDY=$P($G(@(ICDR_+ICDI_",1)")),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC2",137,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX($G(CDT),,ICDY)) Q:CDT'?7N ""
"RTN","ICDEXC2",138,0)
 S ICDE=$O(@(ICDR_ICDI_","_ICDN_",""B"","_(CDT+.001)_")"),-1) Q:ICDE'?7N ""
"RTN","ICDEXC2",139,0)
 S ICDS=$O(@(ICDR_ICDI_","_ICDN_",""B"","_ICDE_","" "")"),-1) Q:+ICDS'>0 ""
"RTN","ICDEXC2",140,0)
 S ICDS=$G(@(ICDR_ICDI_","_ICDN_","_ICDS_",0)"))
"RTN","ICDEXC2",141,0)
 Q:'$L(ICDS) ""
"RTN","ICDEXC2",142,0)
 S ICDD=$P(ICDS,"^",1),ICDS=$P(ICDS,"^",2) Q:"^M^F^"'[("^"_ICDS_"^") ""
"RTN","ICDEXC2",143,0)
 S ICDOUT=ICDS S:FMT>0 ICDOUT=ICDOUT_"^"_ICDD
"RTN","ICDEXC2",144,0)
 Q ICDOUT
"RTN","ICDEXC2",145,0)
SAI(FILE,IEN,CDT) ; Status/Activation/Inactivation
"RTN","ICDEXC2",146,0)
 ;
"RTN","ICDEXC2",147,0)
 ; Input:
"RTN","ICDEXC2",148,0)
 ;
"RTN","ICDEXC2",149,0)
 ;   FILE  File
"RTN","ICDEXC2",150,0)
 ;           80    ICD Diagnosis file
"RTN","ICDEXC2",151,0)
 ;           80.1  ICD Operation/Procedure file
"RTN","ICDEXC2",152,0)
 ;   IEN   IEN or code (required)
"RTN","ICDEXC2",153,0)
 ;   CDT   Date to use to Extract Status (default TODAY)
"RTN","ICDEXC2",154,0)
 ;
"RTN","ICDEXC2",155,0)
 ; Output:
"RTN","ICDEXC2",156,0)
 ; 
"RTN","ICDEXC2",157,0)
 ;   5 piece "^" delimited string
"RTN","ICDEXC2",158,0)
 ;   
"RTN","ICDEXC2",159,0)
 ;      1  Status
"RTN","ICDEXC2",160,0)
 ;      2  Activation Date
"RTN","ICDEXC2",161,0)
 ;      3  Inactivation Date
"RTN","ICDEXC2",162,0)
 ;      4  IEN
"RTN","ICDEXC2",163,0)
 ;      5  Code
"RTN","ICDEXC2",164,0)
 ;      6  Short Text
"RTN","ICDEXC2",165,0)
 ;      
"RTN","ICDEXC2",166,0)
 ;         If the status is active, the short
"RTN","ICDEXC2",167,0)
 ;         text will be the most recent.
"RTN","ICDEXC2",168,0)
 ;   
"RTN","ICDEXC2",169,0)
 ;         If the status is inactive, the short
"RTN","ICDEXC2",170,0)
 ;         text will be the text in use on the
"RTN","ICDEXC2",171,0)
 ;         date it was inactivated.
"RTN","ICDEXC2",172,0)
 ;  
"RTN","ICDEXC2",173,0)
 ;         Null if no status for date.
"RTN","ICDEXC2",174,0)
 ;      
"RTN","ICDEXC2",175,0)
 N ICDI,ICDCD,ICDR,ICDN,ICDE,ICDS,ICDY,EFF,ACT,STA,INA,NAM S ICDI=$G(IEN) Q:'$L(ICDI)
"RTN","ICDEXC2",176,0)
 S ICDR=$$ROOT^ICDEX($G(FILE)) Q:'$L(ICDR) ""
"RTN","ICDEXC2",177,0)
 S ICDCD=$$CODEC^ICDEX(FILE,ICDI)
"RTN","ICDEXC2",178,0)
 I '$D(@(ICDR_ICDI_",1)")) D
"RTN","ICDEXC2",179,0)
 . N ICDE S ICDE=0 F  S ICDE=$O(^ICDS(ICDE)) Q:+ICDE'>0  D
"RTN","ICDEXC2",180,0)
 . . N ICDT S ICDT=$O(@(ICDR_"""ABA"","_+ICDE_","""_(ICDI_" ")_""",0)")) Q:ICDT'>0
"RTN","ICDEXC2",181,0)
 . . S:ICDT?1N.N&(ICDI'?1N.N) ICDI=ICDT
"RTN","ICDEXC2",182,0)
 S ICDY=$P($G(@(ICDR_+ICDI_",1)")),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC2",183,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:CDT) Q:CDT'?7N ""
"RTN","ICDEXC2",184,0)
 S ICDE=$O(@(ICDR_ICDI_",66,""B"","_(CDT+.001)_")"),-1) Q:ICDE'?7N ""
"RTN","ICDEXC2",185,0)
 S ICDS=$O(@(ICDR_ICDI_",66,""B"","_ICDE_","" "")"),-1) Q:+ICDS'>0 ""
"RTN","ICDEXC2",186,0)
 S ICDS=$G(@(ICDR_ICDI_",66,"_ICDS_",0)")) Q:'$L(ICDS) ""
"RTN","ICDEXC2",187,0)
 S (ACT,INA,NAM)="" S EFF=$P(ICDS,"^",1),STA=$P(ICDS,"^",2)
"RTN","ICDEXC2",188,0)
 S:STA>0 ACT=EFF S:STA'>0 INA=EFF
"RTN","ICDEXC2",189,0)
 I STA'>0,INA?7N D
"RTN","ICDEXC2",190,0)
 . S ICDE=$O(@(ICDR_ICDI_",66,""B"","_INA_")"),-1) Q:ICDE'?7N
"RTN","ICDEXC2",191,0)
 . S ICDS=$O(@(ICDR_ICDI_",66,""B"","_ICDE_","" "")"),-1) Q:+ICDS'>0
"RTN","ICDEXC2",192,0)
 . S ICDS=$G(@(ICDR_ICDI_",66,"_ICDS_",0)")) Q:'$L(ICDS)
"RTN","ICDEXC2",193,0)
 . S:$P(ICDS,"^",2)>0&($P(ICDS,"^",1)?7N) ACT=$P(ICDS,"^",1)
"RTN","ICDEXC2",194,0)
 I ACT?7N D
"RTN","ICDEXC2",195,0)
 . S ICDE=$O(@(ICDR_ICDI_",67,""B"","_(9999999+.001)_")"),-1) Q:ICDE'?7N
"RTN","ICDEXC2",196,0)
 . S ICDS=$O(@(ICDR_ICDI_",67,""B"","_ICDE_","" "")"),-1) Q:+ICDS'>0
"RTN","ICDEXC2",197,0)
 . S ICDS=$G(@(ICDR_ICDI_",67,"_ICDS_",0)")) Q:'$L(ICDS)
"RTN","ICDEXC2",198,0)
 . S:$L($P(ICDS,"^",2))>0 NAM=$P(ICDS,"^",2)
"RTN","ICDEXC2",199,0)
 S ICDS=+($G(STA)) S:$G(ACT)?7N $P(ICDS,"^",2)=$G(ACT)
"RTN","ICDEXC2",200,0)
 S:$G(INA)?7N $P(ICDS,"^",3)=$G(INA)
"RTN","ICDEXC2",201,0)
 S:ICDI?1N.N $P(ICDS,"^",4)=ICDI
"RTN","ICDEXC2",202,0)
 S:$L(ICDCD) $P(ICDS,"^",5)=ICDCD
"RTN","ICDEXC2",203,0)
 S:$L(NAM) $P(ICDS,"^",6)=NAM
"RTN","ICDEXC2",204,0)
 Q ICDS
"RTN","ICDEXC2",205,0)
VAGEL(IEN,CDT,FMT) ; Versioned Age Low
"RTN","ICDEXC2",206,0)
 ;
"RTN","ICDEXC2",207,0)
 ; Input:
"RTN","ICDEXC2",208,0)
 ;
"RTN","ICDEXC2",209,0)
 ;   IEN   IEN in file 80 (required)
"RTN","ICDEXC2",210,0)
 ;   CDT   Date to use to Extract Age Low (default TODAY)
"RTN","ICDEXC2",211,0)
 ;   FMT   Output Format
"RTN","ICDEXC2",212,0)
 ;           0 = Age Low only (default)
"RTN","ICDEXC2",213,0)
 ;           1 = Age Low ^ Effective Date
"RTN","ICDEXC2",214,0)
 ;
"RTN","ICDEXC2",215,0)
 ; Output:
"RTN","ICDEXC2",216,0)
 ; 
"RTN","ICDEXC2",217,0)
 ;   AGEL  Age Low
"RTN","ICDEXC2",218,0)
 ;            
"RTN","ICDEXC2",219,0)
 N AGEL,DRGFY,ICDY,ICDOUT Q:+($G(IEN))'>0 ""  S FMT=+($G(FMT)) S:FMT'=1 FMT=0
"RTN","ICDEXC2",220,0)
 S ICDY=$P($G(^ICD9(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC2",221,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX($G(CDT),,ICDY)) Q:CDT'?7N ""
"RTN","ICDEXC2",222,0)
 S (AGEL,DRGFY)="" S DRGFY=$O(^ICD9(+($G(IEN)),6,"B",(CDT+.001)),-1),AGEL=$O(^ICD9(+($G(IEN)),6,"B",+DRGFY,AGEL))
"RTN","ICDEXC2",223,0)
 S ICDOUT=$P($G(^ICD9(+($G(IEN)),6,+AGEL,0)),U,2) S:FMT>0 ICDOUT=ICDOUT_"^"_$P($G(^ICD9(+($G(IEN)),6,+AGEL,0)),U,1)
"RTN","ICDEXC2",224,0)
 Q ICDOUT
"RTN","ICDEXC2",225,0)
VAGEH(IEN,CDT,FMT) ; Versioned Age High
"RTN","ICDEXC2",226,0)
 ;
"RTN","ICDEXC2",227,0)
 ; Input:
"RTN","ICDEXC2",228,0)
 ;
"RTN","ICDEXC2",229,0)
 ;   IEN   IEN in file 80 (required)
"RTN","ICDEXC2",230,0)
 ;   CDT   Date to use to Extract Age High (default TODAY)
"RTN","ICDEXC2",231,0)
 ;   FMT   Output Format
"RTN","ICDEXC2",232,0)
 ;           0 = Age High only (default)
"RTN","ICDEXC2",233,0)
 ;           1 = Age High ^ Effective Date
"RTN","ICDEXC2",234,0)
 ;
"RTN","ICDEXC2",235,0)
 ; Output:
"RTN","ICDEXC2",236,0)
 ; 
"RTN","ICDEXC2",237,0)
 ;   AGEH  Age High
"RTN","ICDEXC2",238,0)
 ;            
"RTN","ICDEXC2",239,0)
 N AGEH,DRGFY,ICDY,ICDOUT Q:+($G(IEN))'>0 ""  S FMT=+($G(FMT)) S:FMT'=1 FMT=0
"RTN","ICDEXC2",240,0)
 S ICDY=$P($G(^ICD9(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC2",241,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX($G(CDT),,ICDY)) Q:CDT'?7N ""
"RTN","ICDEXC2",242,0)
 S (AGEH,DRGFY)="" S DRGFY=$O(^ICD9(+($G(IEN)),7,"B",(CDT+.001)),-1),AGEH=$O(^ICD9(+($G(IEN)),7,"B",+DRGFY,AGEH))
"RTN","ICDEXC2",243,0)
 S ICDOUT=$P($G(^ICD9(+($G(IEN)),7,+AGEH,0)),U,2) S:FMT>0 ICDOUT=ICDOUT_"^"_$P($G(^ICD9(+($G(IEN)),7,+AGEH,0)),U,1)
"RTN","ICDEXC2",244,0)
 Q ICDOUT
"RTN","ICDEXC2",245,0)
VCC(IEN,CDT,FMT) ; Return versioned Complication/Comorbidity
"RTN","ICDEXC2",246,0)
 ;
"RTN","ICDEXC2",247,0)
 ; Input:
"RTN","ICDEXC2",248,0)
 ;
"RTN","ICDEXC2",249,0)
 ;   IEN   IEN in file 80 (required)
"RTN","ICDEXC2",250,0)
 ;   CDT   Date to use to Extract CC (default TODAY)
"RTN","ICDEXC2",251,0)
 ;   FMT   Output Format
"RTN","ICDEXC2",252,0)
 ;           0 = CC only (default)
"RTN","ICDEXC2",253,0)
 ;           1 = CC ^ Effective Date ^ External Value
"RTN","ICDEXC2",254,0)
 ;
"RTN","ICDEXC2",255,0)
 ; Output:
"RTN","ICDEXC2",256,0)
 ; 
"RTN","ICDEXC2",257,0)
 ;   $$VCC  Complication/Comorbidity (FMT=0)
"RTN","ICDEXC2",258,0)
 ;          Complication/Comorbidity^Effective Date (FMT=1)
"RTN","ICDEXC2",259,0)
 ;            
"RTN","ICDEXC2",260,0)
 N ICDD,ICDI,ICDIC,ICDIC,ICDO,ICDE,ICDF S ICDF=+($G(FMT)),ICDI=+($G(IEN))
"RTN","ICDEXC2",261,0)
 S:ICDF'=1 ICDF=0 S ICDD=$O(^ICD9(ICDI,69,"B",CDT+.0001),-1) Q:'$L(ICDD) ""
"RTN","ICDEXC2",262,0)
 S ICDIC=$O(^ICD9(ICDI,69,"B",ICDD,""),-1) S ICDE=""
"RTN","ICDEXC2",263,0)
 S ICDO=$P(^ICD9(ICDI,69,ICDIC,0),U,2)
"RTN","ICDEXC2",264,0)
 S ICDD=$P(^ICD9(ICDI,69,ICDIC,0),U,1)
"RTN","ICDEXC2",265,0)
 S:ICDF>0&($L(ICDO)) ICDE=$$GET1^DIQ(80.0103,(ICDIC_","_ICDI_","),1)
"RTN","ICDEXC2",266,0)
 S:ICDF>0&($L(ICDO)) $P(ICDO,"^",2)=ICDD
"RTN","ICDEXC2",267,0)
 S:ICDF>0&($L(ICDO))&($L(ICDE)) $P(ICDO,"^",3)=ICDE
"RTN","ICDEXC2",268,0)
 Q ICDO
"RTN","ICDEXC2",269,0)
VCCP(IEN,CDT,FMT) ; Return versioned CC Primary Flag
"RTN","ICDEXC2",270,0)
 ;
"RTN","ICDEXC2",271,0)
 ; Input:
"RTN","ICDEXC2",272,0)
 ;
"RTN","ICDEXC2",273,0)
 ;   IEN     IEN in file 80 (required)
"RTN","ICDEXC2",274,0)
 ;   CDT     Date to use to Extract CC Primary Flag (default TODAY)
"RTN","ICDEXC2",275,0)
 ;   FMT     Output Format
"RTN","ICDEXC2",276,0)
 ;             0 = CC Primary Flag only (default)
"RTN","ICDEXC2",277,0)
 ;             1 = CC Primary Flag ^ Effective Date ^ External Value
"RTN","ICDEXC2",278,0)
 ;
"RTN","ICDEXC2",279,0)
 ; Output:
"RTN","ICDEXC2",280,0)
 ; 
"RTN","ICDEXC2",281,0)
 ;   $$VCCP  Complication/Comorbidity (FMT=0)
"RTN","ICDEXC2",282,0)
 ;           Complication/Comorbidity^Effective Date (FMT=1)
"RTN","ICDEXC2",283,0)
 ;            
"RTN","ICDEXC2",284,0)
 N ICDD,ICDI,ICDIC,ICDIC,ICDO,ICDE,ICDF S ICDF=+($G(FMT)),ICDI=+($G(IEN))
"RTN","ICDEXC2",285,0)
 S:ICDF'=1 ICDF=0 S ICDD=$O(^ICD9(ICDI,69,"B",CDT+.0001),-1) Q:'$L(ICDD) ""
"RTN","ICDEXC2",286,0)
 S ICDIC=$O(^ICD9(ICDI,69,"B",ICDD,""),-1) S ICDE=""
"RTN","ICDEXC2",287,0)
 S ICDO=$P(^ICD9(ICDI,69,ICDIC,0),U,3)
"RTN","ICDEXC2",288,0)
 S ICDD=$P(^ICD9(ICDI,69,ICDIC,0),U,1)
"RTN","ICDEXC2",289,0)
 S:ICDF>0&($L(ICDO)) ICDE=$$GET1^DIQ(80.0103,(ICDIC_","_ICDI_","),2)
"RTN","ICDEXC2",290,0)
 S:ICDF>0&($L(ICDO)) $P(ICDO,"^",2)=ICDD
"RTN","ICDEXC2",291,0)
 S:ICDF>0&($L(ICDO))&($L(ICDE)) $P(ICDO,"^",3)=ICDE
"RTN","ICDEXC2",292,0)
 Q ICDO
"RTN","ICDEXC3")
0^41^B75483213
"RTN","ICDEXC3",1,0)
ICDEXC3 ;SLC/KER - ICD Extractor - Code APIs (cont) ;04/21/2014
"RTN","ICDEXC3",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXC3",3,0)
 ;               
"RTN","ICDEXC3",4,0)
 ; Global Variables
"RTN","ICDEXC3",5,0)
 ;    ^ICD0("ADS")        N/A
"RTN","ICDEXC3",6,0)
 ;    ^ICD0("AST")        N/A
"RTN","ICDEXC3",7,0)
 ;    ^ICD9("ADS")        N/A
"RTN","ICDEXC3",8,0)
 ;    ^ICD9("AST")        N/A
"RTN","ICDEXC3",9,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","ICDEXC3",10,0)
 ;               
"RTN","ICDEXC3",11,0)
 ; External References
"RTN","ICDEXC3",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXC3",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXC3",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXC3",15,0)
 ;    ^DIWP               ICR  10011
"RTN","ICDEXC3",16,0)
 ;               
"RTN","ICDEXC3",17,0)
 Q
"RTN","ICDEXC3",18,0)
VST(FILE,IEN,CDT)     ; Versioned Short Text
"RTN","ICDEXC3",19,0)
 ;
"RTN","ICDEXC3",20,0)
 ; Input:
"RTN","ICDEXC3",21,0)
 ;
"RTN","ICDEXC3",22,0)
 ;   FILE  Global Root/File #/Coding System/SAB
"RTN","ICDEXC3",23,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",24,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",25,0)
 ;
"RTN","ICDEXC3",26,0)
 ; Output:
"RTN","ICDEXC3",27,0)
 ; 
"RTN","ICDEXC3",28,0)
 ;   VST   Short Text from either file 80 or 80.1
"RTN","ICDEXC3",29,0)
 ;            
"RTN","ICDEXC3",30,0)
 N ICDF,ICDR S ICDR=$$ROOT^ICDEX($G(FILE)) Q:'$L(ICDR) ""
"RTN","ICDEXC3",31,0)
 S ICDF=$$FILE^ICDEX(ICDR) Q:+ICDF'>0 ""
"RTN","ICDEXC3",32,0)
 Q:ICDF=80 $$VSTD($G(IEN),$G(CDT))
"RTN","ICDEXC3",33,0)
 Q:ICDF=80.1 $$VSTP($G(IEN),$G(CDT))
"RTN","ICDEXC3",34,0)
 Q ""
"RTN","ICDEXC3",35,0)
VLT(FILE,IEN,CDT) ; Versioned Long Text
"RTN","ICDEXC3",36,0)
 ;
"RTN","ICDEXC3",37,0)
 ; Input:
"RTN","ICDEXC3",38,0)
 ;
"RTN","ICDEXC3",39,0)
 ;   FILE  Global Root/File #/Coding System/SAB
"RTN","ICDEXC3",40,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",41,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",42,0)
 ;
"RTN","ICDEXC3",43,0)
 ; Output:
"RTN","ICDEXC3",44,0)
 ; 
"RTN","ICDEXC3",45,0)
 ;   VLT   Long Text (description) from either file 80 or 80.1
"RTN","ICDEXC3",46,0)
 ;            
"RTN","ICDEXC3",47,0)
 N ICDF,ICDR S ICDR=$$ROOT^ICDEX($G(FILE)) Q:'$L(ICDR) ""
"RTN","ICDEXC3",48,0)
 S ICDF=$$FILE^ICDEX(ICDR) Q:+ICDF'>0 ""
"RTN","ICDEXC3",49,0)
 Q:ICDF=80 $$VLTD($G(IEN),$G(CDT))
"RTN","ICDEXC3",50,0)
 Q:ICDF=80.1 $$VLTP($G(IEN),$G(CDT))
"RTN","ICDEXC3",51,0)
 Q ""
"RTN","ICDEXC3",52,0)
VSTD(IEN,CDT)  ; Versioned Short Text (Dx)
"RTN","ICDEXC3",53,0)
 ;
"RTN","ICDEXC3",54,0)
 ; Input:
"RTN","ICDEXC3",55,0)
 ;
"RTN","ICDEXC3",56,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",57,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",58,0)
 ;
"RTN","ICDEXC3",59,0)
 ; Output:
"RTN","ICDEXC3",60,0)
 ; 
"RTN","ICDEXC3",61,0)
 ;   VST   Short Text from file 80
"RTN","ICDEXC3",62,0)
 ;            
"RTN","ICDEXC3",63,0)
 N ICD0,ICDC,ICDI,STD,STI,ICDT,TXT S ICDI=+($G(IEN)) Q:+ICDI'>0 ""  Q:'$D(^ICD9(+ICDI)) ""
"RTN","ICDEXC3",64,0)
 S ICDT=$G(CDT) S:'$L(ICDT)!(+ICDT'>0) ICDT=$$DT^XLFDT Q:$P(ICDT,".",1)'?7N ""  S ICD0=$G(^ICD9(+ICDI,0)),ICDC=$P(ICD0,U,1) Q:'$L(ICDC) ""
"RTN","ICDEXC3",65,0)
 S STD=$O(^ICD9("AST",(ICDC_" "),(ICDT+.000001)),-1)
"RTN","ICDEXC3",66,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",67,0)
 .S STI=$O(^ICD9("AST",(ICDC_" "),STD,+ICDI," "),-1),TXT=$$TRIM($P($G(^ICD9(+ICDI,67,+STI,0)),U,2))
"RTN","ICDEXC3",68,0)
 S STD=$O(^ICD9(+ICDI,67,"B",0)) I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",69,0)
 .S STI=$O(^ICD9(+ICDI,67,"B",STD,0)),TXT=$$TRIM($P($G(^ICD9(+ICDI,67,+STI,0)),U,2))
"RTN","ICDEXC3",70,0)
 Q $$TRIM($P(ICD0,U,3))
"RTN","ICDEXC3",71,0)
VSTP(IEN,CDT) ; Return versioned Short Text (Proc)
"RTN","ICDEXC3",72,0)
 ;
"RTN","ICDEXC3",73,0)
 ; Input:
"RTN","ICDEXC3",74,0)
 ;
"RTN","ICDEXC3",75,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",76,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",77,0)
 ;
"RTN","ICDEXC3",78,0)
 ; Output:
"RTN","ICDEXC3",79,0)
 ; 
"RTN","ICDEXC3",80,0)
 ;   VST   Short Text from file 80.1
"RTN","ICDEXC3",81,0)
 ;            
"RTN","ICDEXC3",82,0)
 N ICD0,ICDC,ICDI,STD,STI,ICDT,TXT S ICDI=+($G(IEN)) Q:+ICDI'>0 ""  Q:'$D(^ICD0(+ICDI)) ""
"RTN","ICDEXC3",83,0)
 S ICDT=$G(CDT) S:'$L(ICDT)!(+ICDT'>0) ICDT=$$DT^XLFDT Q:$P(ICDT,".",1)'?7N ""  S ICD0=$G(^ICD0(+ICDI,0)),ICDC=$P(ICD0,U,1) Q:'$L(ICDC) ""
"RTN","ICDEXC3",84,0)
 S STD=$O(^ICD0("AST",(ICDC_" "),(ICDT+.000001)),-1)
"RTN","ICDEXC3",85,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",86,0)
 .S STI=$O(^ICD0("AST",(ICDC_" "),STD,+ICDI," "),-1),TXT=$$TRIM($P($G(^ICD0(+ICDI,67,+STI,0)),U,2))
"RTN","ICDEXC3",87,0)
 S STD=$O(^ICD0(+ICDI,67,"B",0)) I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",88,0)
 .S STI=$O(^ICD0(+ICDI,67,"B",STD,0)),TXT=$$TRIM($P($G(^ICD0(+ICDI,67,+STI,0)),U,2))
"RTN","ICDEXC3",89,0)
 Q $$TRIM($P(ICD0,U,4))
"RTN","ICDEXC3",90,0)
VLTD(IEN,CDT) ; Versioned Description - Long Text (Dx)
"RTN","ICDEXC3",91,0)
 ;
"RTN","ICDEXC3",92,0)
 ; Input:
"RTN","ICDEXC3",93,0)
 ;
"RTN","ICDEXC3",94,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",95,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",96,0)
 ;
"RTN","ICDEXC3",97,0)
 ; Output:
"RTN","ICDEXC3",98,0)
 ; 
"RTN","ICDEXC3",99,0)
 ;   VLT   Long Text from file 80
"RTN","ICDEXC3",100,0)
 ;            
"RTN","ICDEXC3",101,0)
 N ICD0,ICDC,ICDI,STD,STI,ICDT,TXT
"RTN","ICDEXC3",102,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0 ""  Q:'$D(^ICD9(+ICDI)) ""
"RTN","ICDEXC3",103,0)
 S ICDT=$G(CDT) S:'$L(ICDT)!(+ICDT'>0) ICDT=$$DT^XLFDT Q:$P(ICDT,".",1)'?7N ""
"RTN","ICDEXC3",104,0)
 S ICD0=$G(^ICD9(+ICDI,0)),ICDC=$P(ICD0,U,1) Q:'$L(ICDC) ""
"RTN","ICDEXC3",105,0)
 S STD=$O(^ICD9("ADS",(ICDC_" "),(ICDT+.000001)),-1)
"RTN","ICDEXC3",106,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",107,0)
 .S STI=$O(^ICD9("ADS",(ICDC_" "),STD,+ICDI," "),-1)
"RTN","ICDEXC3",108,0)
 .S TXT=$$TRIM($P($G(^ICD9(+ICDI,68,+STI,1)),U,1))
"RTN","ICDEXC3",109,0)
 S STD=$O(^ICD9(+ICDI,68,"B",0))
"RTN","ICDEXC3",110,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",111,0)
 .S STI=$O(^ICD9(+ICDI,68,"B",STD,0))
"RTN","ICDEXC3",112,0)
 .S TXT=$$TRIM($P($G(^ICD9(+ICDI,68,+STI,1)),U,1))
"RTN","ICDEXC3",113,0)
 S TXT=$$TRIM($G(^ICD9(+ICDI,1))) Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",114,0)
 Q $$TRIM($P(ICD0,U,3))
"RTN","ICDEXC3",115,0)
VLTP(IEN,CDT) ; Versioned Description - Long Text (Proc)
"RTN","ICDEXC3",116,0)
 ;
"RTN","ICDEXC3",117,0)
 ; Input:
"RTN","ICDEXC3",118,0)
 ;
"RTN","ICDEXC3",119,0)
 ;   IEN   IEN  (required)
"RTN","ICDEXC3",120,0)
 ;   CDT   Date to use to Extract Text (default TODAY)
"RTN","ICDEXC3",121,0)
 ;
"RTN","ICDEXC3",122,0)
 ; Output:
"RTN","ICDEXC3",123,0)
 ; 
"RTN","ICDEXC3",124,0)
 ;   VLT   Long Text from file 80.1
"RTN","ICDEXC3",125,0)
 ;            
"RTN","ICDEXC3",126,0)
 N ICD0,ICDC,ICDI,STD,STI,ICDT,TXT
"RTN","ICDEXC3",127,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0 ""  Q:'$D(^ICD0(+ICDI)) ""
"RTN","ICDEXC3",128,0)
 S ICDT=$G(CDT) S:'$L(ICDT)!(+ICDT'>0) ICDT=$$DT^XLFDT Q:$P(ICDT,".",1)'?7N ""
"RTN","ICDEXC3",129,0)
 S ICD0=$G(^ICD0(+ICDI,0)),ICDC=$P(ICD0,U,1) Q:'$L(ICDC) ""
"RTN","ICDEXC3",130,0)
 S STD=$O(^ICD0("ADS",(ICDC_" "),(ICDT+.000001)),-1)
"RTN","ICDEXC3",131,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",132,0)
 .S STI=$O(^ICD0("ADS",(ICDC_" "),STD,+ICDI," "),-1)
"RTN","ICDEXC3",133,0)
 .S TXT=$$TRIM($P($G(^ICD0(+ICDI,68,+STI,1)),U,1))
"RTN","ICDEXC3",134,0)
 S STD=$O(^ICD0(+ICDI,68,"B",0))
"RTN","ICDEXC3",135,0)
 I +STD>0 D  Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",136,0)
 .S STI=$O(^ICD0(+ICDI,68,"B",STD,0))
"RTN","ICDEXC3",137,0)
 .S TXT=$$TRIM($P($G(^ICD0(+ICDI,68,+STI,1)),U,1))
"RTN","ICDEXC3",138,0)
 S TXT=$$TRIM($G(^ICD0(+ICDI,1))) Q:$L($G(TXT)) $G(TXT)
"RTN","ICDEXC3",139,0)
 Q $$TRIM($P(ICD0,U,4))
"RTN","ICDEXC3",140,0)
SD(FILE,IEN,CDT,ARY,LEN) ; Short Description (formatted)
"RTN","ICDEXC3",141,0)
 ;            
"RTN","ICDEXC3",142,0)
 ; Input:
"RTN","ICDEXC3",143,0)
 ; 
"RTN","ICDEXC3",144,0)
 ;   IEN   Internal Entry Number (Required)
"RTN","ICDEXC3",145,0)
 ;   FILE  File Number (Required)
"RTN","ICDEXC3",146,0)
 ;   CDT   Date, Default TODAY (Optional)
"RTN","ICDEXC3",147,0)
 ;  .ARY   Array Passed by Reference (Optional)
"RTN","ICDEXC3",148,0)
 ;   LEN   Text Length (15-79, default 60) (Optional) 
"RTN","ICDEXC3",149,0)
 ;   
"RTN","ICDEXC3",150,0)
 ; Output:
"RTN","ICDEXC3",151,0)
 ; 
"RTN","ICDEXC3",152,0)
 ;   $$SD  Short Description OR -1 ^ Error Message
"RTN","ICDEXC3",153,0)
 ;   ARY   Description in segment lengths specified
"RTN","ICDEXC3",154,0)
 ;   
"RTN","ICDEXC3",155,0)
 K ARY N EFF,HIS,NOD,ROOT,TXT S IEN=+($G(IEN)),FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC3",156,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S LEN=+($G(LEN)) S:+LEN'>0 LEN=100
"RTN","ICDEXC3",157,0)
 S:LEN>0&(LEN<15) LEN=15 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC3",158,0)
 Q:'$L(ROOT) "-1^File not found"  S (EFF,HIS,TXT)=""
"RTN","ICDEXC3",159,0)
 S NOD="-1^No description found for date "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXC3",160,0)
 S EFF=+($O(@(ROOT_+IEN_",67,""B"","_(CDT+.000001)_")"),-1))
"RTN","ICDEXC3",161,0)
 Q:EFF'?7N NOD  S HIS=+($O(@(ROOT_+IEN_",67,""B"","_EFF_","" "")"),-1))
"RTN","ICDEXC3",162,0)
 Q:+HIS'>0 NOD  S TXT=$P($G(@(ROOT_+IEN_",67,"_+HIS_",0)")),"^",2)
"RTN","ICDEXC3",163,0)
 Q:'$L(TXT) NOD  S ARY(1)=TXT D:+LEN>0&(LEN'=100) PAR(.ARY,LEN)
"RTN","ICDEXC3",164,0)
 S IEN=$O(ARY(" "),-1),ARY(0)=+IEN
"RTN","ICDEXC3",165,0)
 S:EFF?7N ARY(0)=$G(ARY(0))_"^"_EFF S IEN=TXT
"RTN","ICDEXC3",166,0)
 Q IEN
"RTN","ICDEXC3",167,0)
LD(FILE,IEN,CDT,ARY,LEN) ; Long Description (formatted)
"RTN","ICDEXC3",168,0)
 ;   
"RTN","ICDEXC3",169,0)
 ; Input:
"RTN","ICDEXC3",170,0)
 ; 
"RTN","ICDEXC3",171,0)
 ;   IEN   Internal Entry Number (Required)
"RTN","ICDEXC3",172,0)
 ;   FILE  File Number (Required)
"RTN","ICDEXC3",173,0)
 ;   CDT   Date, Default TODAY (Optional)
"RTN","ICDEXC3",174,0)
 ;  .ARY   Array Passed by Reference (Optional)
"RTN","ICDEXC3",175,0)
 ;   LEN   Text Length (15-79, default 245) (Optional) 
"RTN","ICDEXC3",176,0)
 ;   
"RTN","ICDEXC3",177,0)
 ; Output:
"RTN","ICDEXC3",178,0)
 ; 
"RTN","ICDEXC3",179,0)
 ;   $$LD  Long Description OR -1 ^ Error Message
"RTN","ICDEXC3",180,0)
 ;   ARY   Description in lengths specified
"RTN","ICDEXC3",181,0)
 ;   
"RTN","ICDEXC3",182,0)
 K ARY N EFF,HIS,NOD,ROOT,TXT S IEN=+($G(IEN)),FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC3",183,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S LEN=+($G(LEN)) S:+LEN'>0 LEN=300
"RTN","ICDEXC3",184,0)
 S:LEN>0&(LEN<15) LEN=15 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC3",185,0)
 Q:'$L(ROOT) "-1^File not found"  S (EFF,HIS,TXT)=""
"RTN","ICDEXC3",186,0)
 S NOD="-1^No long description found for date "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXC3",187,0)
 S EFF=+($O(@(ROOT_+IEN_",68,""B"","_(CDT+.000001)_")"),-1)) Q:EFF'?7N NOD
"RTN","ICDEXC3",188,0)
 S HIS=+($O(@(ROOT_+IEN_",68,""B"","_EFF_","" "")"),-1)) Q:+HIS'>0 NOD
"RTN","ICDEXC3",189,0)
 S TXT=$G(@(ROOT_+IEN_",68,"_+HIS_",1)")) Q:'$L(TXT) NOD
"RTN","ICDEXC3",190,0)
 S ARY(1)=TXT D:+($G(LEN))>0&(LEN'=300) PAR(.ARY,LEN)
"RTN","ICDEXC3",191,0)
 S IEN=$O(ARY(" "),-1),ARY(0)=+IEN
"RTN","ICDEXC3",192,0)
 S:EFF?7N ARY(0)=$G(ARY(0))_"^"_EFF S IEN=TXT
"RTN","ICDEXC3",193,0)
 Q IEN
"RTN","ICDEXC3",194,0)
CC(IEN,CDT) ; Complication/Comorbidity (C/C)
"RTN","ICDEXC3",195,0)
 ;
"RTN","ICDEXC3",196,0)
 ; Input
"RTN","ICDEXC3",197,0)
 ; 
"RTN","ICDEXC3",198,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXC3",199,0)
 ;   CDT    Date, Default TODAY (Optional)
"RTN","ICDEXC3",200,0)
 ;   
"RTN","ICDEXC3",201,0)
 ; Output
"RTN","ICDEXC3",202,0)
 ; 
"RTN","ICDEXC3",203,0)
 ;   $$CC   A code for C/C or Error
"RTN","ICDEXC3",204,0)
 ;            0   Non-CC
"RTN","ICDEXC3",205,0)
 ;            1   CC
"RTN","ICDEXC3",206,0)
 ;            2   Major CC
"RTN","ICDEXC3",207,0)
 ;           -1 ^ error
"RTN","ICDEXC3",208,0)
 ;           
"RTN","ICDEXC3",209,0)
 N CEFF,CIEN S CDT=$S($G(CDT)?7N:$G(CDT),1:$$DT^XLFDT)
"RTN","ICDEXC3",210,0)
 S CEFF=$O(^ICD9(+$G(IEN),69,"B",(CDT+.000001)),-1)
"RTN","ICDEXC3",211,0)
 Q:CEFF'?7N ("-1^No CC for "_$$FMTE^XLFDT($G(CDT),"5DZ"))
"RTN","ICDEXC3",212,0)
 S CIEN=$O(^ICD9(+$G(IEN),69,"B",CEFF," "),-1)
"RTN","ICDEXC3",213,0)
 Q:+CIEN'>0 ("-1^No CC for "_$$FMTE^XLFDT($G(CDT),"5DZ"))
"RTN","ICDEXC3",214,0)
 S IEN=$P(^ICD9(+$G(IEN),69,CIEN,0),U,2)
"RTN","ICDEXC3",215,0)
 Q:'$L(IEN) ("-1^No CC for "_$$FMTE^XLFDT($G(CDT),"5DZ"))
"RTN","ICDEXC3",216,0)
 Q IEN
"RTN","ICDEXC3",217,0)
PAR(ARY,LEN) ; Parse Array
"RTN","ICDEXC3",218,0)
 ;
"RTN","ICDEXC3",219,0)
 ; Input:
"RTN","ICDEXC3",220,0)
 ;
"RTN","ICDEXC3",221,0)
 ;  .ARY   Array passed by reference (required)
"RTN","ICDEXC3",222,0)
 ;   LEN   Array String Length
"RTN","ICDEXC3",223,0)
 ;
"RTN","ICDEXC3",224,0)
 ; Output:
"RTN","ICDEXC3",225,0)
 ; 
"RTN","ICDEXC3",226,0)
 ;   ARY   Array parse with string lengths of LEN
"RTN","ICDEXC3",227,0)
 ;
"RTN","ICDEXC3",228,0)
 N %,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,Z,I,IEN,CTR,X
"RTN","ICDEXC3",229,0)
 K ^UTILITY($J,"W") Q:'$D(ARY)  S LEN=+($G(LEN)) S:+LEN'>0 LEN=79
"RTN","ICDEXC3",230,0)
 S DIWL=1,DIWF="C"_+LEN S IEN=0
"RTN","ICDEXC3",231,0)
 F  S IEN=$O(ARY(IEN)) Q:+IEN=0  S X=$G(ARY(IEN)) D ^DIWP
"RTN","ICDEXC3",232,0)
 K ARY S (CTR,IEN)=0 F  S IEN=$O(^UTILITY($J,"W",1,IEN)) Q:+IEN=0  D
"RTN","ICDEXC3",233,0)
 . S ARY(IEN)=$$TRIM($G(^UTILITY($J,"W",1,IEN,0))," "),CTR=CTR+1
"RTN","ICDEXC3",234,0)
 K ^UTILITY($J,"W")
"RTN","ICDEXC3",235,0)
 Q
"RTN","ICDEXC3",236,0)
IEN(CODE,ROOT,SYS) ; Return IEN based on Code, Root and Coding System
"RTN","ICDEXC3",237,0)
 ;
"RTN","ICDEXC3",238,0)
 ; This API is similar to $$CODEABA^ICDEX except it will
"RTN","ICDEXC3",239,0)
 ; also return IENs for codes excluded from lookup and 
"RTN","ICDEXC3",240,0)
 ; VA Local Codes.  Use with caution, and do not use in
"RTN","ICDEXC3",241,0)
 ; any application that requires codes and text to be 
"RTN","ICDEXC3",242,0)
 ; versioned (date sensitive).
"RTN","ICDEXC3",243,0)
 ; 
"RTN","ICDEXC3",244,0)
 ; Input:
"RTN","ICDEXC3",245,0)
 ;
"RTN","ICDEXC3",246,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDEXC3",247,0)
 ;   ROOT  File Root (optional)
"RTN","ICDEXC3",248,0)
 ;            ^ICD9( or 80
"RTN","ICDEXC3",249,0)
 ;            ^ICD0( or 80.1
"RTN","ICDEXC3",250,0)
 ;   SYS   Coding System (optional)
"RTN","ICDEXC3",251,0)
 ;           1 = ICD-9 Diagnosis
"RTN","ICDEXC3",252,0)
 ;           2 = ICD-9 Procedure
"RTN","ICDEXC3",253,0)
 ;          30 = ICD-10 Diagnosis
"RTN","ICDEXC3",254,0)
 ;          31 = ICD-10 Procedure
"RTN","ICDEXC3",255,0)
 ;
"RTN","ICDEXC3",256,0)
 ; Output:
"RTN","ICDEXC3",257,0)
 ; 
"RTN","ICDEXC3",258,0)
 ;   IEN   IEN for CODE in ROOT for SYS or -1 if not found
"RTN","ICDEXC3",259,0)
 ;   
"RTN","ICDEXC3",260,0)
 N ICDC,ICDFR,ICDFS,ICDI,ICDIX,ICDR,ICDS,ICDTR,ICDTS,ICDU
"RTN","ICDEXC3",261,0)
 S ICDC=$TR($G(CODE)," ","") Q:'$L(ICDC) -1  Q:ICDC["""" -1
"RTN","ICDEXC3",262,0)
 S ICDS=+($G(SYS)),ICDU=$$UP^XLFSTR(ICDC)
"RTN","ICDEXC3",263,0)
 S ICDR=$$ROOT^ICDEX($G(ROOT))
"RTN","ICDEXC3",264,0)
 I "^ICD9(^ICD0(^"'[("^"_$E(ICDR,2,$L(ICDR))_"^") D
"RTN","ICDEXC3",265,0)
 . N ICDTR,ICDFR S ICDFR="" F ICDTR="^ICD9(","^ICD0(" D  Q:$L(ICDFR)
"RTN","ICDEXC3",266,0)
 . . N ICDIX S ICDIX=" " Q:'$L($O(@(ICDTR_""""_ICDIX_""")")))
"RTN","ICDEXC3",267,0)
 . . F  S ICDIX=$O(@(ICDTR_""""_ICDIX_""")")) Q:'$L(ICDIX)  D  Q:$L(ICDFR)
"RTN","ICDEXC3",268,0)
 . . . I $D(@(ICDTR_""""_ICDIX_""","""_(ICDU_" ")_""")")) S ICDFR=ICDTR
"RTN","ICDEXC3",269,0)
 . S:$L(ICDFR) ICDR=ICDFR
"RTN","ICDEXC3",270,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ICDR,2,$L(ICDR))_"^") -1
"RTN","ICDEXC3",271,0)
 I +($G(ICDS))'>0 D
"RTN","ICDEXC3",272,0)
 . N ICDTS,ICDFS S ICDFS="" S ICDTS=0
"RTN","ICDEXC3",273,0)
 . F  S ICDTS=$O(@(ICDR_"""ABA"","_+ICDTS_")")) Q:+ICDTS'>0  D  Q:ICDFS>0
"RTN","ICDEXC3",274,0)
 . . S:$D(@(ICDR_"""ABA"","_+ICDTS_","""_ICDC_" "")")) ICDFS=ICDTS
"RTN","ICDEXC3",275,0)
 . S:$L(ICDFS) ICDS=ICDFS
"RTN","ICDEXC3",276,0)
 S:+($G(ICDI))'>0&(+ICDS>0) ICDI=$O(@(ICDR_"""ABA"","_+ICDS_","""_ICDC_" "","" "")"),-1)
"RTN","ICDEXC3",277,0)
 S:+($G(ICDI))'>0&(+ICDS>0) ICDI=$O(@(ICDR_"""ABA"","_+ICDS_","""_ICDU_" "","" "")"),-1)
"RTN","ICDEXC3",278,0)
 S:+($G(ICDI))'>0 ICDI=$O(@(ICDR_"""BA"","""_ICDC_" "","" "")"),-1)
"RTN","ICDEXC3",279,0)
 S:+($G(ICDI))'>0 ICDI=$O(@(ICDR_"""AVA"","""_ICDC_" "","" "")"),-1)
"RTN","ICDEXC3",280,0)
 S:+($G(ICDI))'>0 ICDI=$O(@(ICDR_"""AEXC"","""_ICDC_" "","" "")"),-1)
"RTN","ICDEXC3",281,0)
 Q $S('ICDI:-1,1:ICDI)
"RTN","ICDEXC3",282,0)
TRIM(X,Y) ; Trim Character
"RTN","ICDEXC3",283,0)
 ;
"RTN","ICDEXC3",284,0)
 ; Input:
"RTN","ICDEXC3",285,0)
 ;
"RTN","ICDEXC3",286,0)
 ;   X     Input String
"RTN","ICDEXC3",287,0)
 ;   Y     Character to Trim (default " ")
"RTN","ICDEXC3",288,0)
 ;
"RTN","ICDEXC3",289,0)
 ; Output:
"RTN","ICDEXC3",290,0)
 ; 
"RTN","ICDEXC3",291,0)
 ;   X     String without Leading/Trailing character Y
"RTN","ICDEXC3",292,0)
 ;
"RTN","ICDEXC3",293,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXC3",294,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXC3",295,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXC3",296,0)
 Q X
"RTN","ICDEXC4")
0^75^B11534357
"RTN","ICDEXC4",1,0)
ICDEXC4 ;SLC/KER - ICD Extractor - Code APIs (cont) ;04/21/2014
"RTN","ICDEXC4",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXC4",3,0)
 ;               
"RTN","ICDEXC4",4,0)
 ; Global Variables
"RTN","ICDEXC4",5,0)
 ;    None
"RTN","ICDEXC4",6,0)
 ;               
"RTN","ICDEXC4",7,0)
 ; External References
"RTN","ICDEXC4",8,0)
 ;    None
"RTN","ICDEXC4",9,0)
 ;               
"RTN","ICDEXC4",10,0)
 Q
"RTN","ICDEXC4",11,0)
SDH(FILE,IEN,ARY) ; Short Description History
"RTN","ICDEXC4",12,0)
 ;            
"RTN","ICDEXC4",13,0)
 ; Input:
"RTN","ICDEXC4",14,0)
 ; 
"RTN","ICDEXC4",15,0)
 ;   FILE    File Number (Required)
"RTN","ICDEXC4",16,0)
 ;   IEN     Internal Entry Number (Required)
"RTN","ICDEXC4",17,0)
 ;  .ARY     Array Passed by Reference (Optional)
"RTN","ICDEXC4",18,0)
 ;   
"RTN","ICDEXC4",19,0)
 ; Output:
"RTN","ICDEXC4",20,0)
 ; 
"RTN","ICDEXC4",21,0)
 ;   $$SDH   This is a three piece "^" delimited 
"RTN","ICDEXC4",22,0)
 ;           string containing:
"RTN","ICDEXC4",23,0)
 ;           
"RTN","ICDEXC4",24,0)
 ;              1   Number of short descriptions found
"RTN","ICDEXC4",25,0)
 ;              2   The earliest date found
"RTN","ICDEXC4",26,0)
 ;              3   The latest date found
"RTN","ICDEXC4",27,0)
 ;              
"RTN","ICDEXC4",28,0)
 ;           OR -1 ^ Error Message
"RTN","ICDEXC4",29,0)
 ;           
"RTN","ICDEXC4",30,0)
 ;   ARY     Short Descriptions by date
"RTN","ICDEXC4",31,0)
 ;   
"RTN","ICDEXC4",32,0)
 ;              ARY(0)= # ^ Earliest Date ^ Latest Date
"RTN","ICDEXC4",33,0)
 ;              ARY(DATE)=Long Description
"RTN","ICDEXC4",34,0)
 ;   
"RTN","ICDEXC4",35,0)
 K ARY N EFF,TXT,HIS,ROOT,CNT,FD,LD,BEG,END S IEN=+($G(IEN)),LD=0,FD=9999999
"RTN","ICDEXC4",36,0)
 S FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC4",37,0)
 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC4",38,0)
 Q:'$L(ROOT) "-1^File not found"  S CNT=0
"RTN","ICDEXC4",39,0)
 S HIS=0 F  S HIS=$O(@(ROOT_+IEN_",67,"_+HIS_")")) Q:+HIS'>0  D
"RTN","ICDEXC4",40,0)
 . N NOD,EFF,TXT S NOD=$G(@(ROOT_+IEN_",67,"_+HIS_",0)"))
"RTN","ICDEXC4",41,0)
 . S EFF=$P(NOD,"^",1),TXT=$P(NOD,"^",2) Q:EFF'?7N  Q:'$L(TXT)
"RTN","ICDEXC4",42,0)
 . S:EFF<FD FD=EFF  S:EFF>LD LD=EFF
"RTN","ICDEXC4",43,0)
 . S CNT=CNT+1,ARY(0)=CNT,ARY(EFF)=TXT
"RTN","ICDEXC4",44,0)
 S (BEG,END)="" S:FD?7N&(FD'=9999999)&(FD'>LD) BEG=FD S:LD?7N&(LD'<FD) END=LD
"RTN","ICDEXC4",45,0)
 S:BEG?7N&(END?7N)&(CNT>0) ARY(0)=CNT_"^"_BEG_"^"_END S CNT=ARY(0)
"RTN","ICDEXC4",46,0)
 I +CNT'>0 D  Q ERR
"RTN","ICDEXC4",47,0)
 . N TYP S TYP=$S(FILE=80:"Diagnosis",FILE=80.1:"Operation/Procedure",1:"")
"RTN","ICDEXC4",48,0)
 . S:$L(TYP) ERR="-1^No "_TYP_" Short Descriptions found"
"RTN","ICDEXC4",49,0)
 . S:'$L(TYP) ERR="-1^No Short Descriptions found"
"RTN","ICDEXC4",50,0)
 Q CNT
"RTN","ICDEXC4",51,0)
LDH(FILE,IEN,ARY) ; Long Description History
"RTN","ICDEXC4",52,0)
 ;            
"RTN","ICDEXC4",53,0)
 ; Input:
"RTN","ICDEXC4",54,0)
 ; 
"RTN","ICDEXC4",55,0)
 ;   FILE    File Number (Required)
"RTN","ICDEXC4",56,0)
 ;   IEN     Internal Entry Number (Required)
"RTN","ICDEXC4",57,0)
 ;  .ARY     Array Passed by Reference (Optional)
"RTN","ICDEXC4",58,0)
 ;  
"RTN","ICDEXC4",59,0)
 ; Output:
"RTN","ICDEXC4",60,0)
 ; 
"RTN","ICDEXC4",61,0)
 ;   $$LDH   This is a three piece "^" delimited 
"RTN","ICDEXC4",62,0)
 ;           string containing:
"RTN","ICDEXC4",63,0)
 ;           
"RTN","ICDEXC4",64,0)
 ;             1   Number of long descriptions found
"RTN","ICDEXC4",65,0)
 ;             2   The earliest date found
"RTN","ICDEXC4",66,0)
 ;             3   The latest date found
"RTN","ICDEXC4",67,0)
 ;              
"RTN","ICDEXC4",68,0)
 ;           OR -1 ^ Error Message
"RTN","ICDEXC4",69,0)
 ;           
"RTN","ICDEXC4",70,0)
 ;   ARY     Long Descriptions by date
"RTN","ICDEXC4",71,0)
 ;   
"RTN","ICDEXC4",72,0)
 ;             ARY(0)= # ^ Earliest Date ^ Latest Date
"RTN","ICDEXC4",73,0)
 ;             ARY(DATE)=Long Description
"RTN","ICDEXC4",74,0)
 ;              
"RTN","ICDEXC4",75,0)
 K ARY N EFF,TXT,HIS,ROOT,CNT,FD,LD,BEG,END S IEN=+($G(IEN)),LD=0,FD=9999999
"RTN","ICDEXC4",76,0)
 S FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC4",77,0)
 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC4",78,0)
 Q:'$L(ROOT) "-1^File not found"  S CNT=0
"RTN","ICDEXC4",79,0)
 S HIS=0 F  S HIS=$O(@(ROOT_+IEN_",68,"_+HIS_")")) Q:+HIS'>0  D
"RTN","ICDEXC4",80,0)
 . N NOD,EFF,TXT S EFF=$P($G(@(ROOT_+IEN_",68,"_+HIS_",0)")),"^",1)
"RTN","ICDEXC4",81,0)
 . S TXT=$P($G(@(ROOT_+IEN_",68,"_+HIS_",1)")),"^",1)
"RTN","ICDEXC4",82,0)
 . Q:EFF'?7N  Q:'$L(TXT)
"RTN","ICDEXC4",83,0)
 . S:EFF<FD FD=EFF  S:EFF>LD LD=EFF
"RTN","ICDEXC4",84,0)
 . S CNT=CNT+1,ARY(0)=CNT,ARY(EFF)=TXT
"RTN","ICDEXC4",85,0)
 S (BEG,END)="" S:FD?7N&(FD'=9999999)&(FD'>LD) BEG=FD S:LD?7N&(LD'<FD) END=LD
"RTN","ICDEXC4",86,0)
 S:BEG?7N&(END?7N)&(CNT>0) ARY(0)=CNT_"^"_BEG_"^"_END S CNT=ARY(0)
"RTN","ICDEXC4",87,0)
 I +CNT'>0 D  Q ERR
"RTN","ICDEXC4",88,0)
 . N TYP S TYP=$S(FILE=80:"Diagnosis",FILE=80.1:"Operation/Procedure",1:"")
"RTN","ICDEXC4",89,0)
 . S:$L(TYP) ERR="-1^No "_TYP_" Long Descriptions found"
"RTN","ICDEXC4",90,0)
 . S:'$L(TYP) ERR="-1^No Long Descriptions found"
"RTN","ICDEXC4",91,0)
 Q CNT
"RTN","ICDEXC4",92,0)
TRIM(X,Y) ; Trim Character
"RTN","ICDEXC4",93,0)
 ;
"RTN","ICDEXC4",94,0)
 ; Input:
"RTN","ICDEXC4",95,0)
 ;
"RTN","ICDEXC4",96,0)
 ;   X     Input String
"RTN","ICDEXC4",97,0)
 ;   Y     Character to Trim (default " ")
"RTN","ICDEXC4",98,0)
 ;
"RTN","ICDEXC4",99,0)
 ; Output:
"RTN","ICDEXC4",100,0)
 ; 
"RTN","ICDEXC4",101,0)
 ;   X     String without Leading/Trailing character Y
"RTN","ICDEXC4",102,0)
 ;
"RTN","ICDEXC4",103,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXC4",104,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXC4",105,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXC4",106,0)
 Q X
"RTN","ICDEXD")
0^50^B28893974
"RTN","ICDEXD",1,0)
ICDEXD ;SLC/KER - ICD Extractor - DRG APIs ;04/21/2014
"RTN","ICDEXD",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXD",3,0)
 ;               
"RTN","ICDEXD",4,0)
 ; Global Variables
"RTN","ICDEXD",5,0)
 ;    ^ICD0(              N/A
"RTN","ICDEXD",6,0)
 ;    ^ICD9(              N/A
"RTN","ICDEXD",7,0)
 ;    ^ICD9("ACC"         N/A
"RTN","ICDEXD",8,0)
 ;               
"RTN","ICDEXD",9,0)
 ; External References
"RTN","ICDEXD",10,0)
 ;    ^%DT                ICR  10003
"RTN","ICDEXD",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD",12,0)
 ;               
"RTN","ICDEXD",13,0)
 Q
"RTN","ICDEXD",14,0)
GETDRG(FILE,IEN,CDT,MDC) ; DRGs for an Fiscal Year (FY)
"RTN","ICDEXD",15,0)
 ;
"RTN","ICDEXD",16,0)
 ; Input
"RTN","ICDEXD",17,0)
 ; 
"RTN","ICDEXD",18,0)
 ;    FILE   ICD file number to used to retrieve 
"RTN","ICDEXD",19,0)
 ;       
"RTN","ICDEXD",20,0)
 ;    IEN    Internal Entry Number (IEN) (Required)
"RTN","ICDEXD",21,0)
 ;           
"RTN","ICDEXD",22,0)
 ;    CDT    This is the Code Set Versioning date 
"RTN","ICDEXD",23,0)
 ;           (Fileman format, optional, default TODAY)
"RTN","ICDEXD",24,0)
 ;           
"RTN","ICDEXD",25,0)
 ;    MDC    Major Diagnostic Category (pointer to
"RTN","ICDEXD",26,0)
 ;           file 80.1) used as a screen to limit 
"RTN","ICDEXD",27,0)
 ;           the DRGs to a MDC.  This input parameter
"RTN","ICDEXD",28,0)
 ;           only applies to the OPERATIONS/PROCEDURE 
"RTN","ICDEXD",29,0)
 ;           file 80.1 which has multiple MDCs, each
"RTN","ICDEXD",30,0)
 ;           with a possibility of multiple DRGs.
"RTN","ICDEXD",31,0)
 ;
"RTN","ICDEXD",32,0)
 ; Output
"RTN","ICDEXD",33,0)
 ;
"RTN","ICDEXD",34,0)
 ;    3 piece semi-colon delimited string
"RTN","ICDEXD",35,0)
 ;
"RTN","ICDEXD",36,0)
 ;        1  DRGs delimited by ^
"RTN","ICDEXD",37,0)
 ;        2  Fiscal Year
"RTN","ICDEXD",38,0)
 ;        3  Status flag
"RTN","ICDEXD",39,0)
 ;             0 inactive
"RTN","ICDEXD",40,0)
 ;             1 active
"RTN","ICDEXD",41,0)
 ;
"RTN","ICDEXD",42,0)
 ;        Example output:
"RTN","ICDEXD",43,0)
 ;        
"RTN","ICDEXD",44,0)
 ;           907^908^909^;3071001;1
"RTN","ICDEXD",45,0)
 ;        
"RTN","ICDEXD",46,0)
 ;        On Error:
"RTN","ICDEXD",47,0)
 ;        
"RTN","ICDEXD",48,0)
 ;           -1;No DRG level;0
"RTN","ICDEXD",49,0)
 ;           
"RTN","ICDEXD",50,0)
 N FY,MD,OUT S OUT="",FILE=$G(FILE),IEN=$G(IEN)
"RTN","ICDEXD",51,0)
 S FILE=$S(FILE="9":80,FILE="0":80.1,1:FILE)
"RTN","ICDEXD",52,0)
 S FILE=$$FILE^ICDEX(FILE)
"RTN","ICDEXD",53,0)
 Q:"^80^80.1^"'[("^"_$G(FILE)_"^") "-1;Invalid file specified;0"
"RTN","ICDEXD",54,0)
 Q:$G(IEN)'?1N.N "-1;Invalid IEN specified;0"
"RTN","ICDEXD",55,0)
 D MD^ICDEXD2(FILE,IEN,CDT,.MD)
"RTN","ICDEXD",56,0)
 S FY=$O(MD(""))
"RTN","ICDEXD",57,0)
 Q:FY'?7N "-1;No DRG level;0"
"RTN","ICDEXD",58,0)
 I FILE=80.1,$L($G(MDC)) D  Q OUT
"RTN","ICDEXD",59,0)
 . S OUT=$G(MD(FY,MDC))
"RTN","ICDEXD",60,0)
 . S:+($P($G(OUT),";",1))'>0 OUT="-1;No DRG level;0"
"RTN","ICDEXD",61,0)
 I FILE=80.1,'$L($G(MDC)) D  Q OUT
"RTN","ICDEXD",62,0)
 . N MDC S MDC=$O(MD(FY,"")) I $L(MDC),MDC=$O(MD(FY," "),-1) S OUT=$G(MD(FY,MDC))
"RTN","ICDEXD",63,0)
 . S:+($P($G(OUT),";",1))'>0 OUT="-1;No DRG level;0"
"RTN","ICDEXD",64,0)
 I FILE=80 D  Q OUT
"RTN","ICDEXD",65,0)
 . N MDC S MDC=$O(MD(FY,"")) I $L(MDC),MDC=$O(MD(FY," "),-1) S OUT=$G(MD(FY,MDC))
"RTN","ICDEXD",66,0)
 . S:+($P($G(OUT),";",1))'>0 OUT="-1;No DRG level;0"
"RTN","ICDEXD",67,0)
 Q $S($L(OUT):OUT,1:"-1;No DRG level;0")
"RTN","ICDEXD",68,0)
GETPRE(IEN,MDC) ; Get MDC for Op/Pro ICD for Previous Years
"RTN","ICDEXD",69,0)
 ;
"RTN","ICDEXD",70,0)
 ; Input
"RTN","ICDEXD",71,0)
 ;
"RTN","ICDEXD",72,0)
 ;    IEN   Internal Entry Number (80.1) (required)
"RTN","ICDEXD",73,0)
 ;    MDC   Major Diagnostic Category (required)
"RTN","ICDEXD",74,0)
 ;
"RTN","ICDEXD",75,0)
 ; Output
"RTN","ICDEXD",76,0)
 ;
"RTN","ICDEXD",77,0)
 ;   2 piece "^" delimited string
"RTN","ICDEXD",78,0)
 ;
"RTN","ICDEXD",79,0)
 ;          1  Internal entry number for fiscal year
"RTN","ICDEXD",80,0)
 ;          2  Internal entry number for MDC
"RTN","ICDEXD",81,0)
 ;
"RTN","ICDEXD",82,0)
 ;   OR -1 if not found
"RTN","ICDEXD",83,0)
 ;
"RTN","ICDEXD",84,0)
 N ICDF,ICDFI,ICDI,MDCIEN S ICDI=+($G(IEN)),MDC=$G(MDC) Q:+ICDI'>0!('$L(MDC)) -1  S (ICDFI,MDCIEN)=0,ICDF=""
"RTN","ICDEXD",85,0)
 F  S ICDF=$O(^ICD0(ICDI,2,"B",ICDF),-1) Q:'ICDF!(MDCIEN>0)  D  Q:MDCIEN>0
"RTN","ICDEXD",86,0)
 . S ICDFI=$O(^ICD0(ICDI,2,"B",+$G(ICDF),0))
"RTN","ICDEXD",87,0)
 . S MDCIEN=$O(^ICD0(ICDI,2,+ICDFI,1,"B",MDC,0))
"RTN","ICDEXD",88,0)
 Q:+ICDFI'>0!(+MDCIEN'>0) -1
"RTN","ICDEXD",89,0)
 Q (ICDFI_"^"_MDCIEN)
"RTN","ICDEXD",90,0)
 ;
"RTN","ICDEXD",91,0)
LEMDC(FILE,IEN,CDT,MDC) ; Last Effective MDC
"RTN","ICDEXD",92,0)
 ;
"RTN","ICDEXD",93,0)
 ; Input
"RTN","ICDEXD",94,0)
 ;    FILE   File 80 or 80.1
"RTN","ICDEXD",95,0)
 ;    IEN    Internal Entry Number in FILE
"RTN","ICDEXD",96,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD",97,0)
 ;    MDC    Major Diagnostic Category (file 80.1 only)
"RTN","ICDEXD",98,0)
 ;           If the file is 80.1, and MDC is not provided,
"RTN","ICDEXD",99,0)
 ;           then the first MDC is returned.
"RTN","ICDEXD",100,0)
 ;
"RTN","ICDEXD",101,0)
 ; Output
"RTN","ICDEXD",102,0)
 ;
"RTN","ICDEXD",103,0)
 ;    2 piece "^" delimited string
"RTN","ICDEXD",104,0)
 ;           1   Fiscal Year (Fileman Format)
"RTN","ICDEXD",105,0)
 ;           2   MDC (pointer to file 80.3
"RTN","ICDEXD",106,0)
 ;
"RTN","ICDEXD",107,0)
 ;    or    -1^error message    on error
"RTN","ICDEXD",108,0)
 ;
"RTN","ICDEXD",109,0)
 N OUT,ROOT S FILE=$G(FILE) S:FILE=9!(FILE["ICD9") FILE=80  S:FILE=0!(FILE["ICD0") FILE=80.1
"RTN","ICDEXD",110,0)
 Q:"^80^80.1^"'[("^"_FILE_"^") "-1;Invalid file selected"
"RTN","ICDEXD",111,0)
 S IEN=+($G(IEN)),CDT=$P($G(CDT),".",1)
"RTN","ICDEXD",112,0)
 S ROOT=$$ROOT^ICDEX(FILE) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXD",113,0)
 Q:'$L(ROOT) "-1;Invalid file selected"
"RTN","ICDEXD",114,0)
 Q:'$D(@(ROOT_+IEN_",0)")) "-1;No such entry"
"RTN","ICDEXD",115,0)
 S OUT="" I FILE=80.1 D
"RTN","ICDEXD",116,0)
 . N TMDC,FY,FYIEN S FY=$O(^ICD0(+IEN,2,"B",(CDT+.001)),-1)
"RTN","ICDEXD",117,0)
 . ; get previous from today
"RTN","ICDEXD",118,0)
 . S:FY'?7N FY=$O(^ICD0(+IEN,2,"B"," "),-1)
"RTN","ICDEXD",119,0)
 . S:FY'?7N OUT="-1^FY not found" Q:FY'?7N
"RTN","ICDEXD",120,0)
 . S FYIEN=$O(^ICD0(IEN,2,"B",FY,0))
"RTN","ICDEXD",121,0)
 . S:FYIEN'>0 OUT="-1^FY not found" Q:+FYIEN'>0
"RTN","ICDEXD",122,0)
 . S TMDC=+($G(MDC))
"RTN","ICDEXD",123,0)
 . I TMDC'>0!('$D(^ICD0(IEN,2,FYIEN,1,"B",TMDC))) D  Q
"RTN","ICDEXD",124,0)
 . . S OUT="-1^MDC not specified"
"RTN","ICDEXD",125,0)
 . S OUT=FY_"^"_TMDC
"RTN","ICDEXD",126,0)
 Q:$L($G(OUT)) OUT
"RTN","ICDEXD",127,0)
 I FILE=80 D
"RTN","ICDEXD",128,0)
 . N TMDC,FY,FYIEN S FY=$O(^ICD9(+IEN,4,"B",(CDT+.001)),-1)
"RTN","ICDEXD",129,0)
 . S:FY'?7N FY=$O(^ICD9(+IEN,4,"B"," "),-1)
"RTN","ICDEXD",130,0)
 . S:FY'?7N OUT="-1^FY not found" Q:FY'?7N
"RTN","ICDEXD",131,0)
 . S FYIEN=$O(^ICD9(IEN,4,"B",FY,0))
"RTN","ICDEXD",132,0)
 . S:FYIEN'>0 OUT="-1^FY not found" Q:+FYIEN'>0
"RTN","ICDEXD",133,0)
 . S TMDC=$P($G(^ICD9(IEN,4,FYIEN,0)),"^",2)
"RTN","ICDEXD",134,0)
 . S:TMDC'>0 OUT="-1^MDC not found" Q:+TMDC'>0
"RTN","ICDEXD",135,0)
 . S OUT=FY_"^"_TMDC
"RTN","ICDEXD",136,0)
 Q:$L($G(OUT)) OUT
"RTN","ICDEXD",137,0)
 Q "-1^Last Effective MDC not found"
"RTN","ICDEXD",138,0)
EXIST(IEN,FIELD) ; Does a condition Exist
"RTN","ICDEXD",139,0)
 ;
"RTN","ICDEXD",140,0)
 ; Input:
"RTN","ICDEXD",141,0)
 ;
"RTN","ICDEXD",142,0)
 ;   IEN    Internal Entry to file 80
"RTN","ICDEXD",143,0)
 ;   FIELD  Type of condition to check
"RTN","ICDEXD",144,0)
 ;
"RTN","ICDEXD",145,0)
 ;           20   Code Not Used With
"RTN","ICDEXD",146,0)
 ;           30   Code Required With
"RTN","ICDEXD",147,0)
 ;           40   Code Not Considered CC With
"RTN","ICDEXD",148,0)
 ;           
"RTN","ICDEXD",149,0)
 ; Output:
"RTN","ICDEXD",150,0)
 ;
"RTN","ICDEXD",151,0)
 ;   $$EXIST  Boolean value
"RTN","ICDEXD",152,0)
 ;
"RTN","ICDEXD",153,0)
 ;          1   Yes/True
"RTN","ICDEXD",154,0)
 ;          0   No/False
"RTN","ICDEXD",155,0)
 ;
"RTN","ICDEXD",156,0)
 ;    Field   Answers the Question
"RTN","ICDEXD",157,0)
 ;    -----   -------------------------------------------------        
"RTN","ICDEXD",158,0)
 ;    20      Are there any codes required with this code (IEN)
"RTN","ICDEXD",159,0)
 ;    30      Are there any codes that should not be used
"RTN","ICDEXD",160,0)
 ;            with this code (IEN)
"RTN","ICDEXD",161,0)
 ;    40      Are there any codes that are not considered
"RTN","ICDEXD",162,0)
 ;            Complication/Comorbidity (CC) with this code
"RTN","ICDEXD",163,0)
 ;            (IEN)
"RTN","ICDEXD",164,0)
 ;
"RTN","ICDEXD",165,0)
 N ICDI,ICDF,ICDT,ICDO S ICDI=$G(IEN),ICDF=$G(FIELD) Q:+ICDI'>0 0  Q:+ICDF'>0 0
"RTN","ICDEXD",166,0)
 S ICDT=$S(ICDF=20:"N",ICDF=30:"R",ICDF=40:2,1:"") Q:'$L(ICDT) 0
"RTN","ICDEXD",167,0)
 S ICDI=+($O(^ICD9(ICDI,ICDT," "),-1))
"RTN","ICDEXD",168,0)
 Q $S(ICDI>0:1,1:0)
"RTN","ICDEXD",169,0)
ISA(IEN1,IEN2,FIELD) ; Is Code 1 a condition of Code 2 (this code)
"RTN","ICDEXD",170,0)
 ;
"RTN","ICDEXD",171,0)
 ; Input:
"RTN","ICDEXD",172,0)
 ;
"RTN","ICDEXD",173,0)
 ;   IEN1   This is the internal entry number (IEN) of a
"RTN","ICDEXD",174,0)
 ;          code in file 80 that has a relationship with 
"RTN","ICDEXD",175,0)
 ;          the code at IEN2  IEN1 is equivalent to 
"RTN","ICDEXD",176,0)
 ;          Fileman's DA and identifies a code stored in
"RTN","ICDEXD",177,0)
 ;          a multiple in field 20, 30, 40 or pointed to
"RTN","ICDEXD",178,0)
 ;          by field 1.11.
"RTN","ICDEXD",179,0)
 ;
"RTN","ICDEXD",180,0)
 ;   IEN2   This is the internal entry number (IEN) of a
"RTN","ICDEXD",181,0)
 ;          code in file 80 that may have other codes (IEN1)
"RTN","ICDEXD",182,0)
 ;          associated with it.  IEN2 is equivalent to 
"RTN","ICDEXD",183,0)
 ;          Fileman's DA(1) and identifies the code in 
"RTN","ICDEXD",184,0)
 ;          the .01 field.
"RTN","ICDEXD",185,0)
 ;
"RTN","ICDEXD",186,0)
 ;   FIELD  This is a field number in file 80 that contains 
"RTN","ICDEXD",187,0)
 ;          one or more ICD codes that have a relationship to
"RTN","ICDEXD",188,0)
 ;          the main entry.   Acceptable field numbers and
"RTN","ICDEXD",189,0)
 ;          the type of relationships to check include:
"RTN","ICDEXD",190,0)
 ;
"RTN","ICDEXD",191,0)
 ;           Field       Relationship
"RTN","ICDEXD",192,0)
 ;           20          Code 1 Not Used With Code 2
"RTN","ICDEXD",193,0)
 ;           30          Code 1 Required With Code 2
"RTN","ICDEXD",194,0)
 ;           40 or 1.11  Code 1 Not Considered CC With Code 2
"RTN","ICDEXD",195,0)
 ;
"RTN","ICDEXD",196,0)
 ; Output:
"RTN","ICDEXD",197,0)
 ;
"RTN","ICDEXD",198,0)
 ;   $$ISA  Boolean value
"RTN","ICDEXD",199,0)
 ;
"RTN","ICDEXD",200,0)
 ;          1   Yes/The relationship is True
"RTN","ICDEXD",201,0)
 ;          0   No/The relationship is False
"RTN","ICDEXD",202,0)
 ;
"RTN","ICDEXD",203,0)
 ;    Field        Answers the Question
"RTN","ICDEXD",204,0)
 ;    -----        ---------------------------------------------
"RTN","ICDEXD",205,0)
 ;    20           Code 1 (identified by IEN1) is not used with
"RTN","ICDEXD",206,0)
 ;                 Code 2 (identified by IEN2)
"RTN","ICDEXD",207,0)
 ;
"RTN","ICDEXD",208,0)
 ;    30           Code 1 (identified by IEN1) is required with
"RTN","ICDEXD",209,0)
 ;                 Code 2 (identified by IEN2)
"RTN","ICDEXD",210,0)
 ;
"RTN","ICDEXD",211,0)
 ;    40 or 1.11   Code 1 (identified by IEN1) is not considered
"RTN","ICDEXD",212,0)
 ;                 Complication/Comorbidity (CC) with Code 2
"RTN","ICDEXD",213,0)
 ;                 (identified by IEN2)
"RTN","ICDEXD",214,0)
 ; 
"RTN","ICDEXD",215,0)
 N ICD1,ICD2,ICDF,ICDT,ICDO,ICDCS S ICDO=0,ICD1=+($G(IEN1)),ICD2=+($G(IEN2)),ICDF=$G(FIELD)
"RTN","ICDEXD",216,0)
 Q:+ICDF'>0 ICDO  S ICDT=$S(ICDF=20:"N",ICDF=30:"R",ICDF=40:1,ICDF=1.11:1,1:"")
"RTN","ICDEXD",217,0)
 Q:'$L(ICDT) 0  Q:'$D(^ICD9(ICD2,ICDT)) 0
"RTN","ICDEXD",218,0)
 S ICDCS=$P($G(^ICD9(ICD2,1)),"^",1)
"RTN","ICDEXD",219,0)
 I ICDF=20!(ICDF=30) D  Q ICDO
"RTN","ICDEXD",220,0)
 . S ICDO=$S($D(^ICD9(ICD2,ICDT,"B",ICD1)):1,1:0)
"RTN","ICDEXD",221,0)
 I ICDF=40!(ICDF=1.11) D  Q ICDO
"RTN","ICDEXD",222,0)
 . N ICDPDXE S ICD0=0 S ICDPDXE=$$PDXE^ICDEX(ICD2) I ICDPDXE>0 D  Q
"RTN","ICDEXD",223,0)
 . . S:$D(^ICDCCEX(ICDPDXE,1,"B",ICD1)) ICDO=1
"RTN","ICDEXD",224,0)
 . I ICDCS=1!(ICDCS=2) S:$D(^ICD9("ACC",ICD2,ICD1)) ICDO=1
"RTN","ICDEXD",225,0)
 Q ICDO
"RTN","ICDEXD",226,0)
DRGMDC(X) ; DRG MDC
"RTN","ICDEXD",227,0)
 ;
"RTN","ICDEXD",228,0)
 ; Input:
"RTN","ICDEXD",229,0)
 ;
"RTN","ICDEXD",230,0)
 ;   X      Internal Entry Number DRG file 80.2
"RTN","ICDEXD",231,0)
 ;
"RTN","ICDEXD",232,0)
 ; Output:
"RTN","ICDEXD",233,0)
 ;
"RTN","ICDEXD",234,0)
 ;   $$X    Internal Entry Number MDC file 80.3
"RTN","ICDEXD",235,0)
 ;          -1 on error
"RTN","ICDEXD",236,0)
 ;
"RTN","ICDEXD",237,0)
 N MDC S MDC=$P($G(^ICD(+($G(X)),0)),"^",5) S X=$S(MDC>0:MDC,1:-1)
"RTN","ICDEXD",238,0)
 Q X
"RTN","ICDEXD2")
0^51^B91571446
"RTN","ICDEXD2",1,0)
ICDEXD2 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;04/21/2014
"RTN","ICDEXD2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXD2",3,0)
 ;               
"RTN","ICDEXD2",4,0)
 ; Global Variables
"RTN","ICDEXD2",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXD2",6,0)
 ;               
"RTN","ICDEXD2",7,0)
 ; External References
"RTN","ICDEXD2",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD2",9,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXD2",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXD2",11,0)
 ;    ^%DT                ICR  10003
"RTN","ICDEXD2",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXD2",13,0)
 ;               
"RTN","ICDEXD2",14,0)
 Q
"RTN","ICDEXD2",15,0)
MD(FILE,IEN,CDT,ARY,FLAG) ; MDC DRGs
"RTN","ICDEXD2",16,0)
 ;
"RTN","ICDEXD2",17,0)
 ; Input
"RTN","ICDEXD2",18,0)
 ;
"RTN","ICDEXD2",19,0)
 ;    FILE   File Number/Identifier
"RTN","ICDEXD2",20,0)
 ;    IEN    Internal entry in file
"RTN","ICDEXD2",21,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",22,0)
 ;   .ARY    Array name passed by reference
"RTN","ICDEXD2",23,0)
 ;    FLAG   Flag   I=Internal (default)
"RTN","ICDEXD2",24,0)
 ;                  E=External
"RTN","ICDEXD2",25,0)
 ;
"RTN","ICDEXD2",26,0)
 ; Output
"RTN","ICDEXD2",27,0)
 ;
"RTN","ICDEXD2",28,0)
 ;   ICD Procedures file 80.1 (multiple MDC)
"RTN","ICDEXD2",29,0)
 ;   
"RTN","ICDEXD2",30,0)
 ;      ARY(<fiscal year>,<MDC>)=DRG^;FY;STA
"RTN","ICDEXD2",31,0)
 ;      ARY(<fiscal year>,<MDC>)="DRG^DRG^;FY;STA
"RTN","ICDEXD2",32,0)
 ;   
"RTN","ICDEXD2",33,0)
 ;      If Flag contains "E"
"RTN","ICDEXD2",34,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",35,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",36,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",37,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",38,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",39,0)
 ;      ARY(<fiscal year>,"E","FY")=External FY
"RTN","ICDEXD2",40,0)
 ;   
"RTN","ICDEXD2",41,0)
 ;   ICD Diagnosis file 80 (single MDC)
"RTN","ICDEXD2",42,0)
 ;   
"RTN","ICDEXD2",43,0)
 ;      ARY(<fiscal year>,<MDC>)="DRG^DRG^;FY;STA
"RTN","ICDEXD2",44,0)
 ;   
"RTN","ICDEXD2",45,0)
 ;      If Flag contains "E"
"RTN","ICDEXD2",46,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",47,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",48,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",49,0)
 ;      ARY(<fiscal year>,"E","FY")=External FY
"RTN","ICDEXD2",50,0)
 ;   
"RTN","ICDEXD2",51,0)
 ;   NOTE:  If no Fiscal Year found for the input 
"RTN","ICDEXD2",52,0)
 ;   date then the first (earliest) Fiscal Year is 
"RTN","ICDEXD2",53,0)
 ;   used.
"RTN","ICDEXD2",54,0)
 ;
"RTN","ICDEXD2",55,0)
 N DRG,FY,FYIEN,MDC,MDCIEN,MY,MYIEN,ROOT,STA,STR S FLAG=$G(FLAG) S:'$L(FLAG) FLAG="I"
"RTN","ICDEXD2",56,0)
 S FILE=$G(FILE) S:FILE=9!(FILE["ICD9") FILE=80  S:FILE=0!(FILE["ICD0") FILE=80.1
"RTN","ICDEXD2",57,0)
 Q:"^80^80.1^"'[("^"_FILE_"^") "-1;Invalid file selected"
"RTN","ICDEXD2",58,0)
 S IEN=+($G(IEN)),CDT=$P($G(CDT),".",1)
"RTN","ICDEXD2",59,0)
 S ROOT=$$ROOT^ICDEX(FILE) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXD2",60,0)
 Q:'$L(ROOT) "-1;Invalid file selected"
"RTN","ICDEXD2",61,0)
 K ARY I FILE=80.1 D
"RTN","ICDEXD2",62,0)
 . S STA=1,FY=$O(^ICD0(IEN,2,"B",(CDT+.001)),-1)
"RTN","ICDEXD2",63,0)
 . S:FY'?7N STA=0,FY=$O(^ICD0(IEN,2,"B","")) Q:FY'?7N
"RTN","ICDEXD2",64,0)
 . S FYIEN=$O(^ICD0(IEN,2,"B",+$G(FY),0)) Q:+FYIEN'>0
"RTN","ICDEXD2",65,0)
 . S MDC=0 F  S MDC=$O(^ICD0(IEN,2,FYIEN,1,"B",MDC)) Q:'$L(MDC)  D
"RTN","ICDEXD2",66,0)
 . . S MDCIEN=0 F  S MDCIEN=$O(^ICD0(IEN,2,FYIEN,1,"B",MDC,MDCIEN)) Q:+MDCIEN'>0  D
"RTN","ICDEXD2",67,0)
 . . . S STR="",DRG=""
"RTN","ICDEXD2",68,0)
 . . . F  S DRG=$O(^ICD0(IEN,2,FYIEN,1,MDCIEN,1,"B",DRG)) Q:'$L(DRG)  S STR=STR_DRG_"^"
"RTN","ICDEXD2",69,0)
 . . S ARY(FY,MDC)=STR_";"_FY_";"_STA
"RTN","ICDEXD2",70,0)
 . . I FLAG["E" D
"RTN","ICDEXD2",71,0)
 . . . N ED,EMDC,DRGI,IDRG,DRGOUT
"RTN","ICDEXD2",72,0)
 . . . S ED=$$FMTE^XLFDT(FY,"5DZ"),EMDC=$P($G(^ICM(+MDC,0)),"^",1)
"RTN","ICDEXD2",73,0)
 . . . S ARY(FY,"E","FY")=ED,ARY(FY,"E",MDC)=EMDC
"RTN","ICDEXD2",74,0)
 . . . F DRGI=1:1 Q:'$L($P($G(STR),"^",DRGI))  D
"RTN","ICDEXD2",75,0)
 . . . . N IDRG,DRGOUT S IDRG=$P($G(STR),"^",DRGI) Q:+IDRG'>0
"RTN","ICDEXD2",76,0)
 . . . . K DRGOUT D DRGD^ICDGTDRG(IDRG,"DRGOUT",,$G(CDT))
"RTN","ICDEXD2",77,0)
 . . . . S:$L($G(DRGOUT(1)))&(+DRGI>0) ARY(FY,"E",MDC,IDRG)=$G(DRGOUT(1))
"RTN","ICDEXD2",78,0)
 I FILE=80 D
"RTN","ICDEXD2",79,0)
 . S STA=1,FY=$O(^ICD9(IEN,3,"B",(CDT+.001)),-1)
"RTN","ICDEXD2",80,0)
 . S:FY'?7N STA=0,FY=$O(^ICD9(IEN,3,"B","")) Q:FY'?7N
"RTN","ICDEXD2",81,0)
 . S MY=$O(^ICD9(IEN,4,"B",(FY+.001)))
"RTN","ICDEXD2",82,0)
 . S:MY'?7N MY=$O(^ICD9(IEN,4,"B",""))
"RTN","ICDEXD2",83,0)
 . S MYIEN=$O(^ICD9(IEN,4,"B",+$G(MY),0))
"RTN","ICDEXD2",84,0)
 . S MDC=$P($G(^ICD9(IEN,4,+MYIEN,0)),"^",2)
"RTN","ICDEXD2",85,0)
 . S FYIEN=$O(^ICD9(IEN,3,"B",+$G(FY),0)) Q:+FYIEN'>0
"RTN","ICDEXD2",86,0)
 . S STR="",DRG=""
"RTN","ICDEXD2",87,0)
 . F  S DRG=$O(^ICD9(IEN,3,FYIEN,1,"B",DRG)) Q:'$L(DRG)  S STR=STR_DRG_"^"
"RTN","ICDEXD2",88,0)
 . I +MDC'>0 S MDC=$$DRGMDC^ICDEXD(+STR)
"RTN","ICDEXD2",89,0)
 . S ARY(FY,MDC)=STR_";"_FY_";"_STA
"RTN","ICDEXD2",90,0)
 . I FLAG["E" D
"RTN","ICDEXD2",91,0)
 . . N ED,EMDC,DRGI,IDRG,DRGOUT
"RTN","ICDEXD2",92,0)
 . . S ED=$$FMTE^XLFDT(FY,"5DZ"),EMDC=$P($G(^ICM(+MDC,0)),"^",1)
"RTN","ICDEXD2",93,0)
 . . S ARY(FY,"E","FY")=ED,ARY(FY,"E",MDC)=EMDC
"RTN","ICDEXD2",94,0)
 . . F DRGI=1:1 Q:'$L($P($G(STR),"^",DRGI))  D
"RTN","ICDEXD2",95,0)
 . . . N IDRG,DRGOUT S IDRG=$P($G(STR),"^",DRGI) Q:+IDRG'>0
"RTN","ICDEXD2",96,0)
 . . . K DRGOUT D DRGD^ICDGTDRG(IDRG,"DRGOUT",,$G(CDT))
"RTN","ICDEXD2",97,0)
 . . . S:$L($G(DRGOUT(1)))&(+DRGI>0) ARY(FY,"E",MDC,IDRG)=$G(DRGOUT(1))
"RTN","ICDEXD2",98,0)
 Q
"RTN","ICDEXD2",99,0)
VMDCDX(IEN,CDT) ; Get versioned MDC for Diagnosis Code
"RTN","ICDEXD2",100,0)
 ;
"RTN","ICDEXD2",101,0)
 ; Input
"RTN","ICDEXD2",102,0)
 ;
"RTN","ICDEXD2",103,0)
 ;    IEN    Internal Entry Number file 80
"RTN","ICDEXD2",104,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",105,0)
 ;
"RTN","ICDEXD2",106,0)
 ; Output
"RTN","ICDEXD2",107,0)
 ;
"RTN","ICDEXD2",108,0)
 ;   $$VMDCDX  Versioned MDC
"RTN","ICDEXD2",109,0)
 ;
"RTN","ICDEXD2",110,0)
 N ICDI,ICDD,ICDS,ICDM,ICDY S ICDI=+($G(IEN)) Q:'$D(^ICD9(ICDI,4,"B")) ""
"RTN","ICDEXD2",111,0)
 S ICDS=$P($G(^ICD9(+ICDI,1)),"^",1),ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS)
"RTN","ICDEXD2",112,0)
 S (ICDM,ICDY)="",ICDY=$O(^ICD9(+ICDI,4,"B",+ICDD),-1)
"RTN","ICDEXD2",113,0)
 S ICDM=$O(^ICD9(ICDI,4,"B",+ICDY,ICDM))
"RTN","ICDEXD2",114,0)
 Q $P($G(^ICD9(ICDI,4,+ICDM,0)),U,2)
"RTN","ICDEXD2",115,0)
VMDCOP(IEN,MDC,CDT) ; Get versioned MDC for Op/Pro ICD code from previous years
"RTN","ICDEXD2",116,0)
 ;
"RTN","ICDEXD2",117,0)
 ; Input
"RTN","ICDEXD2",118,0)
 ;
"RTN","ICDEXD2",119,0)
 ;    IEN    Internal Entry Number file 80.1
"RTN","ICDEXD2",120,0)
 ;    MDC    Major Diagnostic Category
"RTN","ICDEXD2",121,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",122,0)
 ;
"RTN","ICDEXD2",123,0)
 ; Output
"RTN","ICDEXD2",124,0)
 ;
"RTN","ICDEXD2",125,0)
 ;   $$VMDCOP  4 piece "^" delimited string
"RTN","ICDEXD2",126,0)
 ;
"RTN","ICDEXD2",127,0)
 ;             1   Fiscal Year  Fileman format
"RTN","ICDEXD2",128,0)
 ;             2   MDC          Pointer to file 80.3
"RTN","ICDEXD2",129,0)
 ;             3   Fiscal Year  pointer to sub-file 80.171
"RTN","ICDEXD2",130,0)
 ;                              (formerly known as DADRGFY)
"RTN","ICDEXD2",131,0)
 ;             4   MDC          pointer to sub-file 80.1711
"RTN","ICDEXD2",132,0)
 ;                                (formerly known as DAMDC)
"RTN","ICDEXD2",133,0)
 ;
"RTN","ICDEXD2",134,0)
 N ICDI,ICDC,ICDD,ICDO,ICDY,ICDM,ICDS S ICDI=+($G(IEN)) Q:'$D(^ICD0(ICDI,2,"B")) ""
"RTN","ICDEXD2",135,0)
 S ICDC=$G(MDC) Q:'$L(MDC) ""  S ICDS=$P($G(^ICD0(+ICDI,1)),"^",1)
"RTN","ICDEXD2",136,0)
 S ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS) S (ICDM,ICDY)=""
"RTN","ICDEXD2",137,0)
 F  S ICDD=$O(^ICD0(ICDI,2,"B",ICDD),-1) Q:'ICDD!(ICDM>0)  D
"RTN","ICDEXD2",138,0)
 . S ICDY=$O(^ICD0(ICDI,2,"B",+$G(ICDD),ICDY)),ICDO=ICDD
"RTN","ICDEXD2",139,0)
 . S ICDM=$O(^ICD0(ICDI,2,+ICDY,1,"B",ICDC,ICDM))
"RTN","ICDEXD2",140,0)
 Q:'$L($G(ICDO)) ""
"RTN","ICDEXD2",141,0)
 Q (ICDO_"^"_ICDC_"^"_ICDY_"^"_ICDM)
"RTN","ICDEXD2",142,0)
 ;
"RTN","ICDEXD2",143,0)
MDCG(IEN,CDT,ARY) ; Set up ICDMDC() array
"RTN","ICDEXD2",144,0)
 ;
"RTN","ICDEXD2",145,0)
 ; Input
"RTN","ICDEXD2",146,0)
 ;
"RTN","ICDEXD2",147,0)
 ;    IEN    ICD Diagnosis (IEN)
"RTN","ICDEXD2",148,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",149,0)
 ;   .ARY    Array name passed by reference
"RTN","ICDEXD2",150,0)
 ;
"RTN","ICDEXD2",151,0)
 ; Output
"RTN","ICDEXD2",152,0)
 ;
"RTN","ICDEXD2",153,0)
 ;    ARY    Array listing MDCs for all DRGs
"RTN","ICDEXD2",154,0)
 ;
"RTN","ICDEXD2",155,0)
 ;      ARY=MDC
"RTN","ICDEXD2",156,0)
 ;      ARY(MDC)=""
"RTN","ICDEXD2",157,0)
 ;
"RTN","ICDEXD2",158,0)
 N I,ICDC,ICDO,ICDTMP,ICDS,ICDD,DRGS S IEN=$G(IEN) Q:+IEN'>0  S ICDS=$P($G(^ICD9(+IEN,1)),"^",1)
"RTN","ICDEXD2",159,0)
 S ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS) Q:'$L(IEN)  S ICDO=$G(ARY) K ARY S:$L(ICDO) ARY=ICDO
"RTN","ICDEXD2",160,0)
 S ICDTMP=$$GETDRG^ICDEX(80,IEN,ICDD) Q:'$P(ICDTMP,";",3)  S DRGS=$P(ICDTMP,";")
"RTN","ICDEXD2",161,0)
 F I=1:1 Q:'$L($P(DRGS,"^",I))  Q:'$P(DRGS,"^",I)  D
"RTN","ICDEXD2",162,0)
 . N DRG,MDC S DRG=$P(DRGS,"^",I) Q:DRG=""  S MDC=$P($$DRG^ICDGTDRG(DRG,ICDD),"^",5) Q:MDC=""  S ARY(MDC)=""
"RTN","ICDEXD2",163,0)
 Q
"RTN","ICDEXD2",164,0)
MDCT(IEN,CDT,ARY,FMT) ; For Multiple MDC DX Codes
"RTN","ICDEXD2",165,0)
 ;
"RTN","ICDEXD2",166,0)
 ; Input:
"RTN","ICDEXD2",167,0)
 ;
"RTN","ICDEXD2",168,0)
 ;    IEN  Internal Entry Number for file 80.1
"RTN","ICDEXD2",169,0)
 ;    CDT  Code Set Versioning Date
"RTN","ICDEXD2",170,0)
 ;   .ARY  Array of MDCs passed by reference (required)
"RTN","ICDEXD2",171,0)
 ;    FMT  Output Format (optional)
"RTN","ICDEXD2",172,0)
 ;
"RTN","ICDEXD2",173,0)
 ;           0   Boolean value only (default)
"RTN","ICDEXD2",174,0)
 ;           1   2 piece "^" delimited string
"RTN","ICDEXD2",175,0)
 ;                  1   Boolean value
"RTN","ICDEXD2",176,0)
 ;                  2   String of matching MDCs delimited by ";"
"RTN","ICDEXD2",177,0)
 ; Output:
"RTN","ICDEXD2",178,0)
 ;
"RTN","ICDEXD2",179,0)
 ;  $$MDCT  Boolean value
"RTN","ICDEXD2",180,0)
 ;
"RTN","ICDEXD2",181,0)
 ;           0  The ICD Procedure code identified by IEN
"RTN","ICDEXD2",182,0)
 ;              does not include any of the MDCs passed 
"RTN","ICDEXD2",183,0)
 ;              in .ARY(MDC) on the date specified (CDT)
"RTN","ICDEXD2",184,0)
 ;
"RTN","ICDEXD2",185,0)
 ;           1  The ICD Procedure code identified by IEN 
"RTN","ICDEXD2",186,0)
 ;              includes one or more of the MDCs passed
"RTN","ICDEXD2",187,0)
 ;              in .ARY(MDC) on the date specified (CDT)
"RTN","ICDEXD2",188,0)
 ;
"RTN","ICDEXD2",189,0)
 N FY,FYI,I,MD,MDC,OK,STR
"RTN","ICDEXD2",190,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD0(+IEN,0)) 0
"RTN","ICDEXD2",191,0)
 Q:$P($G(^ICD0(IEN,1)),"^",7)>0 0
"RTN","ICDEXD2",192,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXD2",193,0)
 S FMT=+($G(FMT)),(STR,MD)="",OK=0 F I=1:1 S MD=$O(ARY(MD)) Q:MD=""  D
"RTN","ICDEXD2",194,0)
 . N FY,FYI,MDC S FY=$O(^ICD0(IEN,2,"B",(+CDT+.001)),-1) Q:FY'?7N
"RTN","ICDEXD2",195,0)
 . S FYI=$O(^ICD0(IEN,2,"B",+FY,0))
"RTN","ICDEXD2",196,0)
 . S MDC=$D(^ICD0(IEN,2,+FYI,1,"B",MD))
"RTN","ICDEXD2",197,0)
 . S:MDC>0 STR=STR_";"_MD
"RTN","ICDEXD2",198,0)
 . S:MDC>0 OK=1
"RTN","ICDEXD2",199,0)
 F  Q:$E(STR,1)'=";"  S STR=$E(STR,2,$L(STR))
"RTN","ICDEXD2",200,0)
 S OK=+OK S:FMT>0&($L(STR)) OK=OK_"^"_STR
"RTN","ICDEXD2",201,0)
 Q OK
"RTN","ICDEXD2",202,0)
MDCD(IEN,MDC,CDT) ; Check for default MDC
"RTN","ICDEXD2",203,0)
 ;
"RTN","ICDEXD2",204,0)
 ; Input:
"RTN","ICDEXD2",205,0)
 ;
"RTN","ICDEXD2",206,0)
 ;    IEN  Internal Entry Number for file 80.1
"RTN","ICDEXD2",207,0)
 ;    MDC  Major Diagnostic Category
"RTN","ICDEXD2",208,0)
 ;    CDT  Code Set Versioning Date (optional)
"RTN","ICDEXD2",209,0)
 ;         If not passed, the first FY is used
"RTN","ICDEXD2",210,0)
 ;
"RTN","ICDEXD2",211,0)
 ; Output:
"RTN","ICDEXD2",212,0)
 ;
"RTN","ICDEXD2",213,0)
 ;   $$MDCD  Boolean value
"RTN","ICDEXD2",214,0)
 ;
"RTN","ICDEXD2",215,0)
 ;           0  MDC Does not exist
"RTN","ICDEXD2",216,0)
 ;           1  MDC Exist
"RTN","ICDEXD2",217,0)
 ;
"RTN","ICDEXD2",218,0)
 N ICDY,ICDM,ICDD,ICDF S ICDY=+($G(IEN)) Q:'$D(^ICD0(+IEN,2,1,1)) 0  S ICDM=$G(MDC) Q:'$L(ICDM) 0
"RTN","ICDEXD2",219,0)
 S ICDD=$G(CDT),ICDF=$O(^ICD0(+ICDY,2,"B",(ICDD+.001)),-1) S:ICDF'?7N ICDF=$O(^ICD0(+ICDY,2,"B",""))
"RTN","ICDEXD2",220,0)
 S ICDF=$O(^ICD0(+ICDY,2,"B",+ICDF,0)) Q:ICDF'>0 $S($D(^ICD0(ICDY,2,1,1,"B",ICDM))>0:1,1:0)
"RTN","ICDEXD2",221,0)
 Q:ICDF>0 $S($D(^ICD0(ICDY,2,+ICDF,1,"B",ICDM))>0:1,1:0)
"RTN","ICDEXD2",222,0)
MDCN(IEN) ; Major Diagnostic Category Name
"RTN","ICDEXD2",223,0)
 ;
"RTN","ICDEXD2",224,0)
 ; Input:
"RTN","ICDEXD2",225,0)
 ;
"RTN","ICDEXD2",226,0)
 ;    IEN    Internal Entry Number for file 80.3
"RTN","ICDEXD2",227,0)
 ;
"RTN","ICDEXD2",228,0)
 ; Output:
"RTN","ICDEXD2",229,0)
 ;
"RTN","ICDEXD2",230,0)
 ;   $$MDCN  Major Diagnostic Category Name
"RTN","ICDEXD2",231,0)
 ;
"RTN","ICDEXD2",232,0)
 ; Replaces ICR 1586
"RTN","ICDEXD2",233,0)
 ; 
"RTN","ICDEXD2",234,0)
 Q $P($G(^ICM(+($G(IEN)),0)),"^",1)
"RTN","ICDEXD2",235,0)
MOR(IEN) ; Major O.R. Procedure
"RTN","ICDEXD2",236,0)
 ;
"RTN","ICDEXD2",237,0)
 ; Input:
"RTN","ICDEXD2",238,0)
 ;
"RTN","ICDEXD2",239,0)
 ;    IEN   Internal Entry Number for file 80.1
"RTN","ICDEXD2",240,0)
 ;
"RTN","ICDEXD2",241,0)
 ; Output:
"RTN","ICDEXD2",242,0)
 ;
"RTN","ICDEXD2",243,0)
 ;   $$MOR  Major O.R. Procedure
"RTN","ICDEXD2",244,0)
 ;
"RTN","ICDEXD2",245,0)
 Q $G(^ICD0(+($G(IEN)),"M"))
"RTN","ICDEXD2",246,0)
 ;
"RTN","ICDEXD2",247,0)
UPDX(IEN) ; Unacceptable as Principle DX
"RTN","ICDEXD2",248,0)
 ;
"RTN","ICDEXD2",249,0)
 ; Input:
"RTN","ICDEXD2",250,0)
 ;
"RTN","ICDEXD2",251,0)
 ;    IEN   Internal Entry Number for file 80
"RTN","ICDEXD2",252,0)
 ;
"RTN","ICDEXD2",253,0)
 ; Output:
"RTN","ICDEXD2",254,0)
 ;
"RTN","ICDEXD2",255,0)
 ;   $$UPDX  Boolean value only (default)
"RTN","ICDEXD2",256,0)
 ;   
"RTN","ICDEXD2",257,0)
 ;            0 No, Code is Acceptable as Principle DX
"RTN","ICDEXD2",258,0)
 ;            1 Yes, Code is Unacceptable as Principle DX
"RTN","ICDEXD2",259,0)
 ;
"RTN","ICDEXD2",260,0)
 N ICDEXC S ICDEXC=$$EXC^ICDEX(80,+($G(IEN))) Q:+ICDEXC>0 1
"RTN","ICDEXD2",261,0)
 Q +($P($G(^ICD9(+($G(IEN)),1)),"^",3))
"RTN","ICDEXD2",262,0)
EFM(X) ; Convert External Date to FM
"RTN","ICDEXD2",263,0)
 ;
"RTN","ICDEXD2",264,0)
 ; Input:
"RTN","ICDEXD2",265,0)
 ;
"RTN","ICDEXD2",266,0)
 ;   X      External Date
"RTN","ICDEXD2",267,0)
 ;
"RTN","ICDEXD2",268,0)
 ; Output:
"RTN","ICDEXD2",269,0)
 ;
"RTN","ICDEXD2",270,0)
 ;   $$EFM  Internal Fileman Date
"RTN","ICDEXD2",271,0)
 ;
"RTN","ICDEXD2",272,0)
 ; Replaces unsupported $$DGY2K^DGPTOD0(X)
"RTN","ICDEXD2",273,0)
 ;
"RTN","ICDEXD2",274,0)
 N %DT,Y D ^%DT K %DT
"RTN","ICDEXD2",275,0)
 Q Y
"RTN","ICDEXD2",276,0)
FY(X) ;Return FY
"RTN","ICDEXD2",277,0)
 ;
"RTN","ICDEXD2",278,0)
 ; Input:
"RTN","ICDEXD2",279,0)
 ;
"RTN","ICDEXD2",280,0)
 ;   X      Internal Fileman Date
"RTN","ICDEXD2",281,0)
 ;
"RTN","ICDEXD2",282,0)
 ; Output:
"RTN","ICDEXD2",283,0)
 ;
"RTN","ICDEXD2",284,0)
 ;   $$FY   FY Year YYYY
"RTN","ICDEXD2",285,0)
 ;
"RTN","ICDEXD2",286,0)
 ; Replaces unsupported $$FY^DGPTOD0(X)
"RTN","ICDEXD2",287,0)
 ; 
"RTN","ICDEXD2",288,0)
 S X=$P($G(X),".",1) Q:$L(X)>7 ""  Q:$E(X,1,5)'?5N ""
"RTN","ICDEXD2",289,0)
 S:$E(X,4,5)>9 X=$E(X,1,3)+1
"RTN","ICDEXD2",290,0)
 Q (17+$E(X))_$E(X,2,3)
"RTN","ICDEXD2",291,0)
EFD(X) ; Get Effective date in range (interactive)
"RTN","ICDEXD2",292,0)
 ;
"RTN","ICDEXD2",293,0)
 ; Prompts for Effective Date for DRG grouper
"RTN","ICDEXD2",294,0)
 ; 
"RTN","ICDEXD2",295,0)
 ; The lower boundary for the date is the ICD-9 
"RTN","ICDEXD2",296,0)
 ; implementation date October 1, 1978.
"RTN","ICDEXD2",297,0)
 ; 
"RTN","ICDEXD2",298,0)
 ; The upper boundary for date is either
"RTN","ICDEXD2",299,0)
 ; 
"RTN","ICDEXD2",300,0)
 ;       3 years from the ICD-10 implementation date or
"RTN","ICDEXD2",301,0)
 ;       3 years from TODAY
"RTN","ICDEXD2",302,0)
 ;       
"RTN","ICDEXD2",303,0)
 ;       Whichever is further into the future
"RTN","ICDEXD2",304,0)
 ;
"RTN","ICDEXD2",305,0)
 ; Input:   
"RTN","ICDEXD2",306,0)
 ; 
"RTN","ICDEXD2",307,0)
 ;   None
"RTN","ICDEXD2",308,0)
 ;
"RTN","ICDEXD2",309,0)
 ; Output:
"RTN","ICDEXD2",310,0)
 ;
"RTN","ICDEXD2",311,0)
 ;   $$EFF  3 piece ^ delimited string
"RTN","ICDEXD2",312,0)
 ;   
"RTN","ICDEXD2",313,0)
 ;          1   Date Fileman format         nnnnnnn
"RTN","ICDEXD2",314,0)
 ;          2   Date External Short Format  mm/dd/yyyy
"RTN","ICDEXD2",315,0)
 ;          3   Date External Long Format   Mmm dd, yyyy
"RTN","ICDEXD2",316,0)
 ;
"RTN","ICDEXD2",317,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDH,ICDI,ICDIMP,ICDT,Y
"RTN","ICDEXD2",318,0)
 S ICDT=$$DT^XLFDT,ICDH="",ICDI=0
"RTN","ICDEXD2",319,0)
 F  S ICDI=$O(^ICDS(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXD2",320,0)
 . N ICDIMP S ICDIMP=$P($G(^ICDS(ICDI,0)),"^",3)
"RTN","ICDEXD2",321,0)
 . S:ICDIMP>ICDH ICDH=ICDIMP
"RTN","ICDEXD2",322,0)
 S:ICDT>ICDH ICDH=ICDT S ICDH=$$FMADD^XLFDT(ICDH,1095)
"RTN","ICDEXD2",323,0)
 S DIR(0)="DAO^2781001:"_ICDH_":AEX"
"RTN","ICDEXD2",324,0)
 S DIR("B")="TODAY",DIR("A")=" Effective Date:  " I ICDH?7N D 
"RTN","ICDEXD2",325,0)
 . S DIR("A")=" Effective Date ("_$$FMTE^XLFDT(2781001,"5Z")
"RTN","ICDEXD2",326,0)
 . S DIR("A")=DIR("A")_" to "_$$FMTE^XLFDT($G(ICDH),"5Z")_"):  "
"RTN","ICDEXD2",327,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D EFFH^ICDEXD"
"RTN","ICDEXD2",328,0)
 D ^DIR Q:$D(DIROUT) "^^"  Q:$D(DIRUT) "^"  Q:$D(DTOUT) ""
"RTN","ICDEXD2",329,0)
 S X=Y S:X?7N X=X_"^"_$$FMTE^XLFDT(X,"5Z")_"^"_$$FMTE^XLFDT(X)
"RTN","ICDEXD2",330,0)
 Q X
"RTN","ICDEXD2",331,0)
EFFH ; Effective Date Help
"RTN","ICDEXD2",332,0)
 I $L($G(ICDH)) D
"RTN","ICDEXD2",333,0)
 . W !,?5,"Enter an effective date from ",$$FMTE^XLFDT(2781001,"5Z")
"RTN","ICDEXD2",334,0)
 . W " to ",$$FMTE^XLFDT($G(ICDH),"5Z")
"RTN","ICDEXD2",335,0)
 . W !,?5,"to be used to select or calculated time sensitive data.",!
"RTN","ICDEXD2",336,0)
 W !,?5,"Examples of Valid Dates:"
"RTN","ICDEXD2",337,0)
 W !,?5,"  JAN 20 1980 or 20 JAN 80 or 1/20/57 or 012080"
"RTN","ICDEXD2",338,0)
 W !,?5,"  T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc."
"RTN","ICDEXD2",339,0)
 W !,?5,"  T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc."
"RTN","ICDEXD2",340,0)
 W !,?5,"If the year is omitted, the computer uses CURRENT YEAR. "
"RTN","ICDEXD2",341,0)
 W !,?5,"Two digit year assumes no more than 20 years in the future,"
"RTN","ICDEXD2",342,0)
 W !,?5," or 80 years in the past."
"RTN","ICDEXD2",343,0)
 Q
"RTN","ICDEXD2",344,0)
ISVALID(FILE,IEN,CDT) ; Is an ICD code Valid
"RTN","ICDEXD2",345,0)
 ;
"RTN","ICDEXD2",346,0)
 ; Input:
"RTN","ICDEXD2",347,0)
 ; 
"RTN","ICDEXD2",348,0)
 ;    FILE        File or global root
"RTN","ICDEXD2",349,0)
 ;    IEN         Internal Entry Number
"RTN","ICDEXD2",350,0)
 ;    CDT         Effective date to use (default TODAY)
"RTN","ICDEXD2",351,0)
 ;
"RTN","ICDEXD2",352,0)
 ; Output:
"RTN","ICDEXD2",353,0)
 ; 
"RTN","ICDEXD2",354,0)
 ;    $$ISVALID   This is a Boolean value
"RTN","ICDEXD2",355,0)
 ;  
"RTN","ICDEXD2",356,0)
 ;                  1 if the code is valid
"RTN","ICDEXD2",357,0)
 ;                  0 if the code is not valid
"RTN","ICDEXD2",358,0)
 ;
"RTN","ICDEXD2",359,0)
 N ICDO,ICDD,ICDF,ICDT,ICDX,ICDI,ICDR S ICDO=0
"RTN","ICDEXD2",360,0)
 S FILE=$S(FILE="9":80,FILE="0":80.1,1:FILE)
"RTN","ICDEXD2",361,0)
 S ICDD=$P($G(CDT),".",1) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD2",362,0)
 S ICDF=$$FILE^ICDEX(FILE) Q:"^80^80.1^"'[("^"_FILE_"^") ICDO
"RTN","ICDEXD2",363,0)
 S ICDR=$$ROOT^ICDEX(FILE),ICDI=+($G(IEN))
"RTN","ICDEXD2",364,0)
 Q:+ICDI'>0 ICDO  Q:'$D(@(ICDR_+ICDI_",0)")) ICDO
"RTN","ICDEXD2",365,0)
 S ICDX=$$EXC^ICDEX(ICDF,ICDI) Q:ICDX>0 ICDO
"RTN","ICDEXD2",366,0)
 I ICDF=80.1 S ICDT=$$ICDOP^ICDCODE(ICDI,ICDD,,"I") I ICDT>0,$P(ICDT,U,10) S ICDO=1
"RTN","ICDEXD2",367,0)
 I ICDF=80 S ICDT=$$ICDDX^ICDEX(ICDI,ICDD,,"I") I ICDT>0,$P(ICDT,U,10) S ICDO=1
"RTN","ICDEXD2",368,0)
 Q ICDO
"RTN","ICDEXD2",369,0)
REF(IEN,CDT) ; Return Reference Table
"RTN","ICDEXD2",370,0)
 ;
"RTN","ICDEXD2",371,0)
 ;  Input:
"RTN","ICDEXD2",372,0)
 ;  
"RTN","ICDEXD2",373,0)
 ;    IEN    Internal Entry Number
"RTN","ICDEXD2",374,0)
 ;    CDT    Effective date to use (default TODAY)
"RTN","ICDEXD2",375,0)
 ;
"RTN","ICDEXD2",376,0)
 ;  Output:
"RTN","ICDEXD2",377,0)
 ;  
"RTN","ICDEXD2",378,0)
 ;    $$REF  Table reference associated DRG entry
"RTN","ICDEXD2",379,0)
 ;           or null if not found
"RTN","ICDEXD2",380,0)
 ; 
"RTN","ICDEXD2",381,0)
 N ICDI,ICDD,ICDR,ICDFY,ICDR
"RTN","ICDEXD2",382,0)
 S ICDI=+($G(IEN)) Q:+IEN'>0!('$D(^ICD(IEN,2))) ""
"RTN","ICDEXD2",383,0)
 S (ICDFY,ICDR)="",ICDD=$P($G(CDT),".",1)
"RTN","ICDEXD2",384,0)
 S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD2",385,0)
 S ICDFY=$O(^ICD(ICDI,2,"B",(+ICDD+.01)),-1)
"RTN","ICDEXD2",386,0)
 S ICDR=$O(^ICD(ICDI,2,"B",+ICDFY,ICDR))
"RTN","ICDEXD2",387,0)
 S ICDR=$P($G(^ICD(ICDI,2,+ICDR,0)),U,3)
"RTN","ICDEXD2",388,0)
 Q ICDR
"RTN","ICDEXD3")
0^63^B14191421
"RTN","ICDEXD3",1,0)
ICDEXD3 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;04/21/2014
"RTN","ICDEXD3",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXD3",3,0)
 ;               
"RTN","ICDEXD3",4,0)
 ;               
"RTN","ICDEXD3",5,0)
 ; Global Variables
"RTN","ICDEXD3",6,0)
 ;    ^ICDCCEX(           N/A
"RTN","ICDEXD3",7,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXD3",8,0)
 ;               
"RTN","ICDEXD3",9,0)
 ; External References
"RTN","ICDEXD3",10,0)
 ;    None
"RTN","ICDEXD3",11,0)
 ;               
"RTN","ICDEXD3",12,0)
 Q
"RTN","ICDEXD3",13,0)
NOT(IEN,SUB,FMT) ; Codes not Used With
"RTN","ICDEXD3",14,0)
 ;
"RTN","ICDEXD3",15,0)
 ; Input:
"RTN","ICDEXD3",16,0)
 ;
"RTN","ICDEXD3",17,0)
 ;   IEN     Internal Entry Number in file 80
"RTN","ICDEXD3",18,0)
 ;   SUB     TMP global array subscript name.
"RTN","ICDEXD3",19,0)
 ;           If not provided, the subscript 
"RTN","ICDEXD3",20,0)
 ;           "ICDNOT" will be used.
"RTN","ICDEXD3",21,0)
 ;   FMT     Format of Output
"RTN","ICDEXD3",22,0)
 ;             0 - Total number only (default)
"RTN","ICDEXD3",23,0)
 ;             1 - Total number with global array
"RTN","ICDEXD3",24,0)
 ; 
"RTN","ICDEXD3",25,0)
 ; Output:
"RTN","ICDEXD3",26,0)
 ; 
"RTN","ICDEXD3",27,0)
 ;   $$NOT   The number of ICD codes that can not
"RTN","ICDEXD3",28,0)
 ;           be used with the ICD code identified
"RTN","ICDEXD3",29,0)
 ;           by IEN (FMT=0 or 1)
"RTN","ICDEXD3",30,0)
 ;           
"RTN","ICDEXD3",31,0)
 ;   TMP global array as follows (FMT=1):
"RTN","ICDEXD3",32,0)
 ;   
"RTN","ICDEXD3",33,0)
 ;           ^TMP("SUB",$J,IEN)=CODE
"RTN","ICDEXD3",34,0)
 ;           ^TMP("SUB",$J,"B",(CODE_" "),IEN)=""
"RTN","ICDEXD3",35,0)
 ;   
"RTN","ICDEXD3",36,0)
 S IEN=+($G(IEN)) Q:$O(^ICD9(IEN,"N",0))'>0 0
"RTN","ICDEXD3",37,0)
 S SUB=$$TM($G(SUB)) S:'$L(SUB) SUB="ICDNOT" S FMT=+($G(FMT)) K ^TMP(SUB,$J)
"RTN","ICDEXD3",38,0)
 N NIEN,NCNT S (NIEN,NCNT)=0 F  S NIEN=$O(^ICD9(IEN,"N",NIEN)) Q:+NIEN'>0  D
"RTN","ICDEXD3",39,0)
 . N CODE,NOT,TIEN S TIEN=$G(^ICD9(IEN,"N",NIEN,0)) Q:TIEN'>0
"RTN","ICDEXD3",40,0)
 . S CODE=$P($G(^ICD9(TIEN,0)),"^",1) Q:'$L(CODE)  Q:$D(^TMP(SUB,$J,"B",(CODE_" ")))
"RTN","ICDEXD3",41,0)
 . S ^TMP(SUB,$J,TIEN)=CODE,^TMP(SUB,$J,"B",(CODE_" "),TIEN)="",NCNT=NCNT+1
"RTN","ICDEXD3",42,0)
 K:FMT'>0 ^TMP(SUB,$J)
"RTN","ICDEXD3",43,0)
 Q NCNT
"RTN","ICDEXD3",44,0)
REQ(IEN,SUB,FMT) ; Codes Required With
"RTN","ICDEXD3",45,0)
 ;
"RTN","ICDEXD3",46,0)
 ; Input:
"RTN","ICDEXD3",47,0)
 ;
"RTN","ICDEXD3",48,0)
 ;   IEN     Internal Entry Number in file 80
"RTN","ICDEXD3",49,0)
 ;   SUB     TMP global array subscript name.
"RTN","ICDEXD3",50,0)
 ;           If not provided, the subscript 
"RTN","ICDEXD3",51,0)
 ;           "ICDREQ" will be used.
"RTN","ICDEXD3",52,0)
 ;   FMT     Format of Output
"RTN","ICDEXD3",53,0)
 ;             0 - Total number only (default)
"RTN","ICDEXD3",54,0)
 ;             1 - Total number with global array
"RTN","ICDEXD3",55,0)
 ; 
"RTN","ICDEXD3",56,0)
 ; Output:
"RTN","ICDEXD3",57,0)
 ; 
"RTN","ICDEXD3",58,0)
 ;   $$REQ   The number of ICD codes requires when
"RTN","ICDEXD3",59,0)
 ;           the ICD code identified by IEN is used.
"RTN","ICDEXD3",60,0)
 ;           (FMT=0 or 1)
"RTN","ICDEXD3",61,0)
 ;           
"RTN","ICDEXD3",62,0)
 ;   TMP global array as follows (FMT=1): 
"RTN","ICDEXD3",63,0)
 ;   
"RTN","ICDEXD3",64,0)
 ;           ^TMP("SUB",$J,IEN)=CODE
"RTN","ICDEXD3",65,0)
 ;           ^TMP("SUB",$J,"B",(CODE_" "),IEN)=""
"RTN","ICDEXD3",66,0)
 ;   
"RTN","ICDEXD3",67,0)
 S IEN=+($G(IEN)) Q:$O(^ICD9(IEN,"R",0))'>0 0
"RTN","ICDEXD3",68,0)
 S SUB=$$TM($G(SUB)) S:'$L(SUB) SUB="ICDREQ" S FMT=+($G(FMT)) K ^TMP(SUB,$J)
"RTN","ICDEXD3",69,0)
 N NIEN,NCNT S (NIEN,NCNT)=0 F  S NIEN=$O(^ICD9(IEN,"R",NIEN)) Q:+NIEN'>0  D
"RTN","ICDEXD3",70,0)
 . N CODE,REQ,TIEN S TIEN=$G(^ICD9(IEN,"R",NIEN,0)) Q:TIEN'>0
"RTN","ICDEXD3",71,0)
 . S CODE=$P($G(^ICD9(TIEN,0)),"^",1) Q:'$L(CODE)  Q:$D(^TMP(SUB,$J,"B",(CODE_" ")))
"RTN","ICDEXD3",72,0)
 . S ^TMP(SUB,$J,TIEN)=CODE,^TMP(SUB,$J,"B",(CODE_" "),TIEN)="",NCNT=NCNT+1
"RTN","ICDEXD3",73,0)
 K:FMT'>0 ^TMP(SUB,$J)
"RTN","ICDEXD3",74,0)
 Q NCNT
"RTN","ICDEXD3",75,0)
 Q
"RTN","ICDEXD3",76,0)
NCC(IEN,SUB,FMT) ; Codes not considered CC With
"RTN","ICDEXD3",77,0)
 ;
"RTN","ICDEXD3",78,0)
 ; Input:
"RTN","ICDEXD3",79,0)
 ;
"RTN","ICDEXD3",80,0)
 ;   IEN     Internal Entry Number in file 80
"RTN","ICDEXD3",81,0)
 ;   SUB     TMP global array subscript name.
"RTN","ICDEXD3",82,0)
 ;           If not provided, the subscript 
"RTN","ICDEXD3",83,0)
 ;           "ICDNCC" will be used.
"RTN","ICDEXD3",84,0)
 ;   FMT     Format of Output
"RTN","ICDEXD3",85,0)
 ;             0 - Total number only (default)
"RTN","ICDEXD3",86,0)
 ;             1 - Total number with global array
"RTN","ICDEXD3",87,0)
 ; 
"RTN","ICDEXD3",88,0)
 ; Output:
"RTN","ICDEXD3",89,0)
 ; 
"RTN","ICDEXD3",90,0)
 ;   $$NCC   The number of ICD codes not considered
"RTN","ICDEXD3",91,0)
 ;           as Complication/Comorbidity with the 
"RTN","ICDEXD3",92,0)
 ;           ICD code identified by IEN.
"RTN","ICDEXD3",93,0)
 ;           (FMT=0 or 1)
"RTN","ICDEXD3",94,0)
 ;           
"RTN","ICDEXD3",95,0)
 ;   TMP global array as follows (FMT=1):
"RTN","ICDEXD3",96,0)
 ;   
"RTN","ICDEXD3",97,0)
 ;           ^TMP("SUB",$J,IEN)=CODE
"RTN","ICDEXD3",98,0)
 ;           ^TMP("SUB",$J,"B",(CODE_" "),IEN)=""
"RTN","ICDEXD3",99,0)
 ;   
"RTN","ICDEXD3",100,0)
 S IEN=+($G(IEN)) Q:$O(^ICD9(IEN))'>0 0
"RTN","ICDEXD3",101,0)
 S SUB=$$TM($G(SUB)) S:'$L(SUB) SUB="ICDNCC" S FMT=+($G(FMT)) K ^TMP(SUB,$J)
"RTN","ICDEXD3",102,0)
 N NIEN,NCNT,PDXE,ICDCS S NCNT=0,ICDCS=$P($G(^ICD9(IEN,1)),"^",1)
"RTN","ICDEXD3",103,0)
 S PDXE=$$PDXE^ICDEX(IEN) I PDXE>0 D  K:FMT'>0 ^TMP(SUB,$J) Q NCNT
"RTN","ICDEXD3",104,0)
 . S (NIEN,NCNT)=0 F  S NIEN=$O(^ICDCCEX(+PDXE,1,NIEN)) Q:+NIEN'>0  D
"RTN","ICDEXD3",105,0)
 . . N CODE,NCC S NCC=$P($G(^ICDCCEX(+PDXE,1,+NIEN,0)),"^",1) Q:+NCC'>0
"RTN","ICDEXD3",106,0)
 . . S CODE=$P($G(^ICD9(NCC,0)),"^",1) Q:'$L(CODE)  Q:$D(^TMP(SUB,$J,"B",(CODE_" ")))
"RTN","ICDEXD3",107,0)
 . . S NCNT=NCNT+1,^TMP(SUB,$J,NCNT)=CODE,^TMP(SUB,$J,"B",(CODE_" "),NCNT)=""
"RTN","ICDEXD3",108,0)
 . . S ^TMP(SUB,$J,0)=NCNT
"RTN","ICDEXD3",109,0)
 I ICDCS=1!(ICDCS=2) S (NIEN,NCNT)=0 F  S NIEN=$O(^ICD9(IEN,2,NIEN)) Q:+NIEN'>0  D
"RTN","ICDEXD3",110,0)
 . N CODE,NCC S NCC=$P($G(^ICD9(IEN,2,NIEN,0)),"^",1) Q:+NCC'>0
"RTN","ICDEXD3",111,0)
 . S CODE=$P($G(^ICD9(NCC,0)),"^",1) Q:'$L(CODE)
"RTN","ICDEXD3",112,0)
 . Q:$D(^TMP(SUB,$J,"B",(CODE_" ")))
"RTN","ICDEXD3",113,0)
 . S NCNT=NCNT+1,^TMP(SUB,$J,NCNT)=CODE,^TMP(SUB,$J,"B",(CODE_" "),NCNT)=""
"RTN","ICDEXD3",114,0)
 . S ^TMP(SUB,$J,0)=NCNT
"RTN","ICDEXD3",115,0)
 K:FMT'>0 ^TMP(SUB,$J)
"RTN","ICDEXD3",116,0)
 Q NCNT
"RTN","ICDEXD3",117,0)
 Q
"RTN","ICDEXD3",118,0)
PDXE(IEN) ; Primary DX Exclusion Code
"RTN","ICDEXD3",119,0)
 ;
"RTN","ICDEXD3",120,0)
 ; Input 
"RTN","ICDEXD3",121,0)
 ; 
"RTN","ICDEXD3",122,0)
 ;   IEN     Internal Entry Number (IEN) for file #80
"RTN","ICDEXD3",123,0)
 ;   
"RTN","ICDEXD3",124,0)
 ; Output
"RTN","ICDEXD3",125,0)
 ; 
"RTN","ICDEXD3",126,0)
 ;   $$PDXE  Pointer to DRG CC Exclusions file #82.13 
"RTN","ICDEXD3",127,0)
 ;           or <null> if not found
"RTN","ICDEXD3",128,0)
 Q $P($G(^ICD9(+($G(IEN)),1)),"^",11)
"RTN","ICDEXD3",129,0)
TM(X,Y) ; Trim Character
"RTN","ICDEXD3",130,0)
 ;
"RTN","ICDEXD3",131,0)
 ; Input:
"RTN","ICDEXD3",132,0)
 ;
"RTN","ICDEXD3",133,0)
 ;   X     Input String
"RTN","ICDEXD3",134,0)
 ;   Y     Character to Trim (default " ")
"RTN","ICDEXD3",135,0)
 ;
"RTN","ICDEXD3",136,0)
 ; Output:
"RTN","ICDEXD3",137,0)
 ; 
"RTN","ICDEXD3",138,0)
 ;   X     String without Leading/Trailing character Y
"RTN","ICDEXD3",139,0)
 ;
"RTN","ICDEXD3",140,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXD3",141,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXD3",142,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXD3",143,0)
 Q X
"RTN","ICDEXD4")
0^68^B78522708
"RTN","ICDEXD4",1,0)
ICDEXD4 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;04/21/2014
"RTN","ICDEXD4",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXD4",3,0)
 ;               
"RTN","ICDEXD4",4,0)
 ; Global Variables
"RTN","ICDEXD4",5,0)
 ;    ^ICD("B")           N/A
"RTN","ICDEXD4",6,0)
 ;    ^ICD9("BA")         N/A
"RTN","ICDEXD4",7,0)
 ;    ^ICDID("B")         N/A
"RTN","ICDEXD4",8,0)
 ;    ^ICDIP("B")         N/A
"RTN","ICDEXD4",9,0)
 ;               
"RTN","ICDEXD4",10,0)
 ; External References
"RTN","ICDEXD4",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD4",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXD4",13,0)
 ;    ^DIC                ICR  10006
"RTN","ICDEXD4",14,0)
 ;               
"RTN","ICDEXD4",15,0)
 Q
"RTN","ICDEXD4",16,0)
ICDID(FILE,ID,CODE) ; Check if ICD identifier exist
"RTN","ICDEXD4",17,0)
 ; 
"RTN","ICDEXD4",18,0)
 ; Input:
"RTN","ICDEXD4",19,0)
 ;
"RTN","ICDEXD4",20,0)
 ;   FILE     File Number or root (required)
"RTN","ICDEXD4",21,0)
 ;              80 or ^ICD9     = File #80
"RTN","ICDEXD4",22,0)
 ;              80.1 or ^ICD0   = File #80.1
"RTN","ICDEXD4",23,0)
 ;   ID       Diagnosis/Procedure code identifier (required)
"RTN","ICDEXD4",24,0)
 ;   CODE     Diagnosis/Procedure code IEN (required)
"RTN","ICDEXD4",25,0)
 ;  
"RTN","ICDEXD4",26,0)
 ; Output:
"RTN","ICDEXD4",27,0)
 ;
"RTN","ICDEXD4",28,0)
 ;   $$ICDID  Boolean value
"RTN","ICDEXD4",29,0)
 ;              1 if identifier was found
"RTN","ICDEXD4",30,0)
 ;              0 if identifier was not found
"RTN","ICDEXD4",31,0)
 ;              
"RTN","ICDEXD4",32,0)
 ;             or upon error -1^error message
"RTN","ICDEXD4",33,0)
 ;
"RTN","ICDEXD4",34,0)
 N ICDC,ICDF,ICDI,ICDID,ICDIDI,ICDRT S ICDF=$$FILE^ICDEX($G(FILE))
"RTN","ICDEXD4",35,0)
 I "^80^80.1^"'[("^"_ICDF_"^") Q "-1^Invalid File"
"RTN","ICDEXD4",36,0)
 S ICDID=$G(ID),(ICDI,ICDC)=$G(CODE)
"RTN","ICDEXD4",37,0)
 I ICDID="" Q "-1^Missing identifier"
"RTN","ICDEXD4",38,0)
 S ICDRT=$$ROOT^ICDEX(ICDF)
"RTN","ICDEXD4",39,0)
 I "^ICD9(^ICD0(^"'[("^"_$E(ICDRT,2,$L(ICDRT))_"^") Q "-1^Invalid Global"
"RTN","ICDEXD4",40,0)
 I '$D(@(ICDRT_+ICDI_")")),$D(@(ICDRT_"""BA"","""_($G(ICDC)_" ")_""")")) D
"RTN","ICDEXD4",41,0)
 . S ICDI=$O(@(ICDRT_"""BA"","""_($G(ICDC)_" ")_""",0)"))
"RTN","ICDEXD4",42,0)
 Q:+ICDI'>0!('$D(@(ICDRT_+ICDI_")"))) "-1^Invalid IEN"
"RTN","ICDEXD4",43,0)
 S ICDRT=$$ROOT^ICDEX(ICDF)
"RTN","ICDEXD4",44,0)
 S ICDIDI=$$IDIEN(ICDF,ID) I +ICDIDI'>0 Q "-1^Invalid identifier"
"RTN","ICDEXD4",45,0)
 I $D(@(ICDRT_ICDI_",73,""B"","_ICDIDI_")")) Q 1
"RTN","ICDEXD4",46,0)
 Q 0
"RTN","ICDEXD4",47,0)
IDIEN(FILE,ID) ; Get IEN for identifier
"RTN","ICDEXD4",48,0)
 N ICDF,ICDID S ICDF=$$FILE^ICDEX($G(FILE))
"RTN","ICDEXD4",49,0)
 I "^80^80.1^"'[("^"_FILE_"^") Q ""
"RTN","ICDEXD4",50,0)
 S ICDID=$G(ID) Q:'$L($G(ICDID)) ""
"RTN","ICDEXD4",51,0)
 Q:ICDF=80 $O(^ICDID("B",ICDID,""))
"RTN","ICDEXD4",52,0)
 Q:ICDF=80.1 $O(^ICDIP("B",ICDID,""))
"RTN","ICDEXD4",53,0)
 Q ""
"RTN","ICDEXD4",54,0)
IDSTR(FILE,IEN) ; Return ICD identifier string (legacy)
"RTN","ICDEXD4",55,0)
 ; 
"RTN","ICDEXD4",56,0)
 ; Input:
"RTN","ICDEXD4",57,0)
 ;
"RTN","ICDEXD4",58,0)
 ;   FILE      File Number or root (required)
"RTN","ICDEXD4",59,0)
 ;               80 or ^ICD9     = File #80
"RTN","ICDEXD4",60,0)
 ;               80.1 or ^ICD0   = File #80.1
"RTN","ICDEXD4",61,0)
 ;   IEN       Diagnosis/Procedure code IEN (required)
"RTN","ICDEXD4",62,0)
 ;   
"RTN","ICDEXD4",63,0)
 ; Output:
"RTN","ICDEXD4",64,0)
 ; 
"RTN","ICDEXD4",65,0)
 ;   $$IDSTR   String of Identifiers delimited by a semi-colon
"RTN","ICDEXD4",66,0)
 ;   
"RTN","ICDEXD4",67,0)
 ;               ID;ID;ID
"RTN","ICDEXD4",68,0)
 ;   
"RTN","ICDEXD4",69,0)
 N ICDA,ICDT,ICDS,ICDI S ICDT=$$ICDIDS($G(FILE),$G(IEN),.ICDA),ICDS=""
"RTN","ICDEXD4",70,0)
 S ICDI="" F  S ICDI=$O(ICDA(ICDI)) Q:'$L(ICDI)  S ICDS=ICDS_";"_ICDI
"RTN","ICDEXD4",71,0)
 F  Q:$E(ICDS,1)'=";"  S ICDS=$E(ICDS,2,$L(ICDS))
"RTN","ICDEXD4",72,0)
 Q ICDS
"RTN","ICDEXD4",73,0)
ICDIDS(FILE,IEN,ARY) ; Return array of ICD identifiers
"RTN","ICDEXD4",74,0)
 ; 
"RTN","ICDEXD4",75,0)
 ; Input:
"RTN","ICDEXD4",76,0)
 ;
"RTN","ICDEXD4",77,0)
 ;   FILE      File Number or root (required)
"RTN","ICDEXD4",78,0)
 ;               80 or ^ICD9     = File #80
"RTN","ICDEXD4",79,0)
 ;               80.1 or ^ICD0   = File #80.1
"RTN","ICDEXD4",80,0)
 ;   IEN       Diagnosis/Procedure code IEN (required)
"RTN","ICDEXD4",81,0)
 ;   ARY       Array Name passed by reference (required)
"RTN","ICDEXD4",82,0)
 ;   
"RTN","ICDEXD4",83,0)
 ; Output:
"RTN","ICDEXD4",84,0)
 ; 
"RTN","ICDEXD4",85,0)
 ;   $$ICDIDS  Number of Identifiers found
"RTN","ICDEXD4",86,0)
 ;             0 (zero) if no identifiers found
"RTN","ICDEXD4",87,0)
 ;             
"RTN","ICDEXD4",88,0)
 ;             or upon error -1^error message 
"RTN","ICDEXD4",89,0)
 ;                
"RTN","ICDEXD4",90,0)
 ;   ARY       Array of identifiers found
"RTN","ICDEXD4",91,0)
 ;                ARY(<identifier>)=""
"RTN","ICDEXD4",92,0)
 ;                
"RTN","ICDEXD4",93,0)
 K ARY N ICDC,ICDF,ICDI,ICDID,ICDIDI,ICDRT,ICDRTI,ICDSTR,ICDX,ICDP,ICDCS
"RTN","ICDEXD4",94,0)
 S ICDF=$$FILE^ICDEX($G(FILE)),(ICDI,ICDC)=$G(IEN)
"RTN","ICDEXD4",95,0)
 I "^80^80.1^"'[("^"_ICDF_"^") Q "-1^Invalid File"
"RTN","ICDEXD4",96,0)
 S ICDRT=$$ROOT^ICDEX(ICDF),ICDRTI=$S(ICDF=80:"^ICDID(",1:"^ICDIP(")
"RTN","ICDEXD4",97,0)
 I "^ICD9(^ICD0(^"'[("^"_$E(ICDRT,2,$L(ICDRT))_"^") Q "-1^Invalid Global"
"RTN","ICDEXD4",98,0)
 I '$D(@(ICDRT_+ICDI_")")),$D(@(ICDRT_"""BA"","""_($G(ICDC)_" ")_""")")) D
"RTN","ICDEXD4",99,0)
 . S ICDI=$O(@(ICDRT_"""BA"","""_($G(ICDC)_" ")_""",0)"))
"RTN","ICDEXD4",100,0)
 Q:+ICDI'>0!('$D(@(ICDRT_+ICDI_")"))) "-1^Invalid IEN"
"RTN","ICDEXD4",101,0)
 S ICDCS=+($P($G(@(ICDRT_+ICDI_",1)")),"^",1))
"RTN","ICDEXD4",102,0)
 S (ICDC,ICDIDI)=0 F  S ICDIDI=$O(@((ICDRT_+ICDI_",73,"_+ICDIDI_")"))) Q:+ICDIDI'>0  D
"RTN","ICDEXD4",103,0)
 . S ICDID=$G(@((ICDRT_+ICDI_",73,"_+ICDIDI_",0)")))
"RTN","ICDEXD4",104,0)
 . S ICDID=$P($G(@((ICDRTI_+ICDID_",0)"))),"^",1) Q:'$L(ICDID)
"RTN","ICDEXD4",105,0)
 . I '$D(ARY(ICDID)) S ARY(ICDID)="",ICDC=ICDC+1
"RTN","ICDEXD4",106,0)
 I ICDC'>0,ICDCS>0,ICDCS'>2 D
"RTN","ICDEXD4",107,0)
 . N ICDV I ICDF=80 D
"RTN","ICDEXD4",108,0)
 . . S ICDV="^H^V^p^F^J^T^A^P^d^Y^t^r^l^E^K^R^O^I^G^D^m^S^u^X^a^B^"
"RTN","ICDEXD4",109,0)
 . . S ICDV=ICDV_"b^z^M^U^L^v^k^h^i^j^Q^W^Z^c^s^g^1^2^3^4^5^6^*^"
"RTN","ICDEXD4",110,0)
 . I ICDF=80.1 D
"RTN","ICDEXD4",111,0)
 . . S ICDV="^H^N^E^g^a^K^S^T^O^L^I^c^n^s^d^z^y^e^D^R^P^o^l^b^t^B^"
"RTN","ICDEXD4",112,0)
 . . S ICDV=ICDV_"h^p^m^M^q^r^u^x^F^k^f^V^C^Q^I^J^1^2^3^4^6^7^"
"RTN","ICDEXD4",113,0)
 . S ICDSTR=$P($G(@(ICDRT_+ICDI_",1)")),"^",2) I $L(ICDSTR) D
"RTN","ICDEXD4",114,0)
 . . N ICDX,ICDP F ICDP=1:1 S ICDX=$E(ICDSTR,ICDP) Q:'$L(ICDX)  D
"RTN","ICDEXD4",115,0)
 . . . I $L(ICDX),$L(ICDRTI),$D(@(ICDRTI_"""B"")")) D  Q
"RTN","ICDEXD4",116,0)
 . . . . I $D(@(ICDRTI_"""B"","""_$G(ICDX)_""")")) D
"RTN","ICDEXD4",117,0)
 . . . . . S ARY(ICDX)="",ICDC=ICDC+1
"RTN","ICDEXD4",118,0)
 . . . I ICDV[("^"_ICDX_"^") D  Q
"RTN","ICDEXD4",119,0)
 . . . . I '$D(ARY(ICDX)) S ARY(ICDX)="",ICDC=ICDC+1
"RTN","ICDEXD4",120,0)
 Q ICDC
"RTN","ICDEXD4",121,0)
ISOWNCC(IEN,CDT,FMT) ; Return CC if DX is Own CC
"RTN","ICDEXD4",122,0)
 ; 
"RTN","ICDEXD4",123,0)
 ; Input:
"RTN","ICDEXD4",124,0)
 ;
"RTN","ICDEXD4",125,0)
 ;   IEN        Internal Entry Number for file 80 (required)
"RTN","ICDEXD4",126,0)
 ;   CDT        Date to use to extract CC (default TODAY)
"RTN","ICDEXD4",127,0)
 ;   FMT        Output Format
"RTN","ICDEXD4",128,0)
 ;                 0 = CC only (default)
"RTN","ICDEXD4",129,0)
 ;                 1 = CC ^ Effective Date
"RTN","ICDEXD4",130,0)
 ; Output:
"RTN","ICDEXD4",131,0)
 ; 
"RTN","ICDEXD4",132,0)
 ;   $$ISOWNCC  Complication/Comorbidity (CC) 
"RTN","ICDEXD4",133,0)
 ;  
"RTN","ICDEXD4",134,0)
 ;              DX is Own CC  Format  Output
"RTN","ICDEXD4",135,0)
 ;              ------------  ------  -------------------------
"RTN","ICDEXD4",136,0)
 ;                   Yes        0     CC Value
"RTN","ICDEXD4",137,0)
 ;                   Yes        1     CC Value ^ Effective Date
"RTN","ICDEXD4",138,0)
 ;                   No        N/A    0 (zero)
"RTN","ICDEXD4",139,0)
 ;              
"RTN","ICDEXD4",140,0)
 ;             or upon error -1^error message 
"RTN","ICDEXD4",141,0)
 ;                
"RTN","ICDEXD4",142,0)
 N ICDC,ICDCC,ICDCCI,ICDD,ICDFMT,ICDI,ICDN,ICDOWN,ICDRT
"RTN","ICDEXD4",143,0)
 S (ICDI,ICDC)=$G(IEN),ICDRT=$$ROOT^ICDEX(80)
"RTN","ICDEXD4",144,0)
 I '$D(^ICD9(+ICDI,0)),$D(^ICD9("BA",(ICDC_" "))) D
"RTN","ICDEXD4",145,0)
 . S ICDI=$O(^ICD9("BA",(ICDC_" "),0))
"RTN","ICDEXD4",146,0)
 Q:+ICDI'>0!('$D(^ICD9(+ICDI,0))) "-1^Invalid IEN"
"RTN","ICDEXD4",147,0)
 S ICDD=$P($G(CDT),".",1) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD4",148,0)
 S ICDFMT=+($G(FMT)) S:ICDFMT'=1 ICDFMT=0
"RTN","ICDEXD4",149,0)
 S ICDD=$O(^ICD9(+ICDI,69,"B",CDT+.0001),-1) Q:'$L(ICDD) 0
"RTN","ICDEXD4",150,0)
 S ICDCCI=$O(^ICD9(+ICDI,69,"B",ICDD,""),-1)
"RTN","ICDEXD4",151,0)
 S ICDN=^ICD9(+ICDI,69,+ICDCCI,0),ICDOWN=$P(ICDN,U,3)
"RTN","ICDEXD4",152,0)
 Q:'ICDOWN 0  S ICDCC=$P(ICDN,U,2)
"RTN","ICDEXD4",153,0)
 S:ICDFMT>0 ICDCC=ICDCC_"^"_$P(^ICD9(+ICDI,69,+ICDCCI,0),U,1)
"RTN","ICDEXD4",154,0)
 Q ICDCC
"RTN","ICDEXD4",155,0)
ICDRGCC(DRG,CDT) ; Get CC/MCC flag from DRG
"RTN","ICDEXD4",156,0)
 ; 
"RTN","ICDEXD4",157,0)
 ; Input:
"RTN","ICDEXD4",158,0)
 ;
"RTN","ICDEXD4",159,0)
 ;   DRG        Internal Entry Number for file 80.2 (required)
"RTN","ICDEXD4",160,0)
 ;   CDT        Date to use to extract CC/MCC flag (default TODAY)
"RTN","ICDEXD4",161,0)
 ;   
"RTN","ICDEXD4",162,0)
 ; Output:
"RTN","ICDEXD4",163,0)
 ; 
"RTN","ICDEXD4",164,0)
 ;   $$ICDRGCC  Complication/Comorbidity/Major CC flag
"RTN","ICDEXD4",165,0)
 ;   
"RTN","ICDEXD4",166,0)
 ;                 0   No CC or MCC
"RTN","ICDEXD4",167,0)
 ;                 1   CC present 
"RTN","ICDEXD4",168,0)
 ;                 2   MCC present
"RTN","ICDEXD4",169,0)
 ;                 3   CC or MCC present
"RTN","ICDEXD4",170,0)
 ;  
"RTN","ICDEXD4",171,0)
 ;             or upon error -1^error message 
"RTN","ICDEXD4",172,0)
 ;                
"RTN","ICDEXD4",173,0)
 N ICDAI,ICDCC,ICDD,ICDDA,ICDDE,ICDRG,ICDI
"RTN","ICDEXD4",174,0)
 S ICDRG=$G(DRG),ICDD=$P($G(CDT),".",1) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD4",175,0)
 S ICDDE=$$FMTE^XLFDT($P(ICDD,".",1),"5Z"),ICDCC="-1^DRG not found"
"RTN","ICDEXD4",176,0)
 S ICDI=$O(^ICD("B","DRG"_ICDRG,"")) I ICDI D
"RTN","ICDEXD4",177,0)
 . S ICDCC="-1^No DRG for date"_$S($L($G(ICDDE)):(" "_$G(ICDDE)),1:"")
"RTN","ICDEXD4",178,0)
 . S ICDDA=$O(^ICD(ICDI,2,"B",(ICDD_".1")),-1) I ICDDA D
"RTN","ICDEXD4",179,0)
 . . S ICDAI=$O(^ICD(ICDI,2,"B",ICDDA,"")) I ICDAI D
"RTN","ICDEXD4",180,0)
 . . . S ICDCC=$P(^ICD(ICDI,2,ICDAI,0),U,4)
"RTN","ICDEXD4",181,0)
 Q ICDCC
"RTN","ICDEXD4",182,0)
INQ ; Inquire to ICD codes (interactive)
"RTN","ICDEXD4",183,0)
 ; 
"RTN","ICDEXD4",184,0)
 ; User will be prompted for:
"RTN","ICDEXD4",185,0)
 ;   
"RTN","ICDEXD4",186,0)
 ;           Effective Date
"RTN","ICDEXD4",187,0)
 ;           File
"RTN","ICDEXD4",188,0)
 ;           Code
"RTN","ICDEXD4",189,0)
 ;   
"RTN","ICDEXD4",190,0)
 ; Displays  Code
"RTN","ICDEXD4",191,0)
 ;           Short Text
"RTN","ICDEXD4",192,0)
 ;           Description
"RTN","ICDEXD4",193,0)
 ;           Description Warnings (if any)
"RTN","ICDEXD4",194,0)
 ;             Text may be inaccurate, Effective Date
"RTN","ICDEXD4",195,0)
 ;                Predates Code Set Versioning
"RTN","ICDEXD4",196,0)
 ;                Predates Coding System Implementation
"RTN","ICDEXD4",197,0)
 ;                Predates Initial Activation Date
"RTN","ICDEXD4",198,0)
 ;           Activation Warnings (if any)
"RTN","ICDEXD4",199,0)
 ;              Code is Inactive
"RTN","ICDEXD4",200,0)
 ;              Code is pending (activated in the future)
"RTN","ICDEXD4",201,0)
 ;   
"RTN","ICDEXD4",202,0)
 N DIC,DIROUT,DIRUT,DTOUT,DUOUT,ICDA,ICDACT,ICDC,ICDCOM,ICDCS
"RTN","ICDEXD4",203,0)
 N ICDCSI,ICDDAT,ICDDT,ICDEFF,ICDF,ICDFMT,ICDI,ICDIA,ICDIEN
"RTN","ICDEXD4",204,0)
 N ICDIMP,ICDINA,ICDLT,ICDMSG,ICDR,ICDSO,ICDST,ICDSTA,ICDT,Y
"RTN","ICDEXD4",205,0)
INQ2 ; Inquire to ICD codes (recursive)
"RTN","ICDEXD4",206,0)
 S ICDDT=$$EFD^ICDEX,ICDEFF=$P(ICDDT,"^",1) I ICDEFF'?7N W !!,"   Effective Date not specified" Q
"RTN","ICDEXD4",207,0)
 W ! S ICDCS=$$CS^ICDEX(,,ICDEFF) I +ICDCS'>0 W !!,"   File not specified" Q
"RTN","ICDEXD4",208,0)
 S ICDCSI=$$SINFO^ICDEX(+ICDCS),ICDF=$P(ICDCSI,"^",4),(DIC,ICDR)=$$ROOT^ICDEX(ICDF),DIC(0)="AEQMZ"
"RTN","ICDEXD4",209,0)
 S DIC("A")=" Select "_$P($P(ICDCSI,"^",2)," ",1)_" "_$P(ICDCSI,"^",6)_" Code:  ",ICDFMT=2
"RTN","ICDEXD4",210,0)
 W ! D ^DIC W:$D(DTOUT) !!,"   Try again later" Q:$D(DTOUT)  Q:$D(DUOUT)!($D(DIRUT))!($D(DIROUT))
"RTN","ICDEXD4",211,0)
 W:+($G(Y))'>0 !!,"   Code not selected" Q:+($G(Y))'>0  S ICDIEN=+($G(Y)),ICDCS=$$CSI^ICDEX(ICDF,+ICDIEN)
"RTN","ICDEXD4",212,0)
 S ICDCSI=$$SINFO^ICDEX(+ICDCS) S:ICDF=80 ICDDAT=$$ICDDX^ICDEX(+ICDIEN,ICDEFF,,"I")
"RTN","ICDEXD4",213,0)
 S:ICDF=80.1 ICDDAT=$$ICDOP^ICDEX(+ICDIEN,ICDEFF,,"I") S ICDSO=$G(Y(0,0))
"RTN","ICDEXD4",214,0)
 S:ICDF="80" ICDST=$P(ICDDAT,"^",4) S:ICDF="80.1" ICDST=$P(ICDDAT,"^",5)
"RTN","ICDEXD4",215,0)
 S ICDLT=$G(Y(0,2)) K ICDA S ICDC=$$LD^ICDEX(ICDF,ICDIEN,ICDEFF,.ICDA,64) I $P(ICDC,"^",1)="-1" D
"RTN","ICDEXD4",216,0)
 . N ICDCOM,ICDT S ICDCOM="" I $P(ICDLT,"^",1)="-1",$L($P(ICDLT,"^",2)) D
"RTN","ICDEXD4",217,0)
 . . S ICDCOM="No description available for "_$$FMTE^XLFDT(ICDEFF)
"RTN","ICDEXD4",218,0)
 . K ICDA S ICDC=$$LD^ICDEX(ICDF,ICDIEN,9990101,.ICDA,64)
"RTN","ICDEXD4",219,0)
 S ICDSTA=$P(ICDDAT,"^",10),ICDINA=$P(ICDDAT,"^",12)
"RTN","ICDEXD4",220,0)
 S:ICDF="80" ICDACT=$P(ICDDAT,"^",17) S:ICDF="80.1" ICDACT=$P(ICDDAT,"^",13)
"RTN","ICDEXD4",221,0)
 S ICDMSG(1)=$$MSG^ICDEX(ICDEFF,+($G(ICDCS)))
"RTN","ICDEXD4",222,0)
 S:$L(ICDMSG(1)) ICDMSG(1)="Descriptive text may be inaccurate, predates Code Set Versioning"
"RTN","ICDEXD4",223,0)
 S ICDIMP=$$IMP^ICDEX(+($G(ICDCS))),ICDIA=$$IA^ICDEX(ICDF,+ICDIEN)
"RTN","ICDEXD4",224,0)
 I ICDIMP?7N,ICDEFF?7N,ICDEFF<ICDIMP D
"RTN","ICDEXD4",225,0)
 . N ICDT S ICDT=$P($P($G(ICDCSI),"^",2)," ",1)
"RTN","ICDEXD4",226,0)
 . S ICDMSG(1)="Descriptive text may be inaccurate, predates implementation date"
"RTN","ICDEXD4",227,0)
 . S:$L(ICDT) ICDMSG(1)="Descriptive text may be inaccurate, user input predates "
"RTN","ICDEXD4",228,0)
 . S:$L(ICDT) ICDMSG(1)=ICDMSG(1)_ICDT_" implementation date of "_$$FMTE^XLFDT(ICDIMP,"5Z")
"RTN","ICDEXD4",229,0)
 I ICDIA?7N,ICDEFF?7N,ICDEFF<ICDIA D
"RTN","ICDEXD4",230,0)
 . N ICDT S ICDT=$P($P($G(ICDCSI),"^",2)," ",1)
"RTN","ICDEXD4",231,0)
 . S ICDMSG(1)="Descriptive text may be inaccurate, predates the initial activation date"
"RTN","ICDEXD4",232,0)
 . S:$L(ICDT) ICDMSG(1)="Descriptive text may be inaccurate, user input predates "
"RTN","ICDEXD4",233,0)
 . S:$L(ICDT) ICDMSG(1)=ICDMSG(1)_" the code's initial activation date of "
"RTN","ICDEXD4",234,0)
 . S:$L(ICDT) ICDMSG(1)=ICDMSG(1)_$$FMTE^XLFDT(ICDIA,"5Z")
"RTN","ICDEXD4",235,0)
 D:$L($G(ICDMSG(1))) PAR^ICDEX(.ICDMSG,64)
"RTN","ICDEXD4",236,0)
 W !!," ",ICDSO,?15,ICDST S (ICDC,ICDI)=0 F  S ICDI=$O(ICDA(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXD4",237,0)
 . Q:'$L($G(ICDA(ICDI)))  S ICDC=ICDC+1
"RTN","ICDEXD4",238,0)
 . W ! W:ICDC=1 !," Description" W ?15,$G(ICDA(ICDI))
"RTN","ICDEXD4",239,0)
 W:$L($G(ICDMSG(1))) ! F ICDI=1:1:3 W:$L($G(ICDMSG(ICDI))) !,?15,$G(ICDMSG(ICDI))
"RTN","ICDEXD4",240,0)
 I +($G(ICDSTA))'>0,$G(ICDINA)?7N D
"RTN","ICDEXD4",241,0)
 . W !!,?15,"      ** CODE INACTIVE AS OF:  ",$$FMTE^XLFDT(ICDINA,"5Z")," **",!
"RTN","ICDEXD4",242,0)
 I +ICDSTA>0,ICDACT>ICDEFF D
"RTN","ICDEXD4",243,0)
 . W !!,?15,"      ** PENDING ACTIVATION ON:  ",$$FMTE^XLFDT(ICDACT,"5Z")," **",!
"RTN","ICDEXD4",244,0)
 G INQ2
"RTN","ICDEXD4",245,0)
 Q 
"RTN","ICDEXD5")
0^74^B63389361
"RTN","ICDEXD5",1,0)
ICDEXD5 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;04/21/2014
"RTN","ICDEXD5",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXD5",3,0)
 ;               
"RTN","ICDEXD5",4,0)
 ; Global Variables
"RTN","ICDEXD5",5,0)
 ;    ^DG(45.86)          ICR   5821
"RTN","ICDEXD5",6,0)
 ;    ^DGPT(              ICR   5822
"RTN","ICDEXD5",7,0)
 ;    ^ICD("ADS")         N/A
"RTN","ICDEXD5",8,0)
 ;    ^ICD("B")           N/A
"RTN","ICDEXD5",9,0)
 ;    ^TMP("DRGD")        SACC 2.3.2.5.1
"RTN","ICDEXD5",10,0)
 ;               
"RTN","ICDEXD5",11,0)
 ; External References
"RTN","ICDEXD5",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD5",13,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","ICDEXD5",14,0)
 ;               
"RTN","ICDEXD5",15,0)
 Q
"RTN","ICDEXD5",16,0)
DRG(CODE,CDT)   ; Returns a string of information from the DRG file (#80.2)
"RTN","ICDEXD5",17,0)
 ;
"RTN","ICDEXD5",18,0)
 ; Input:
"RTN","ICDEXD5",19,0)
 ; 
"RTN","ICDEXD5",20,0)
 ;    CODE    DRG code, internal or external format (Required)
"RTN","ICDEXD5",21,0)
 ;    CDT     Date, FileMan format (default = TODAY)
"RTN","ICDEXD5",22,0)
 ;               If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDEXD5",23,0)
 ;               If CDT > DT, validate with In/Activation Dates
"RTN","ICDEXD5",24,0)
 ;               If CDT is year only, use first of the year
"RTN","ICDEXD5",25,0)
 ;               If CDT is year and month, use first of the month
"RTN","ICDEXD5",26,0)
 ; 
"RTN","ICDEXD5",27,0)
 ; Output:  
"RTN","ICDEXD5",28,0)
 ; 
"RTN","ICDEXD5",29,0)
 ;           Returns an 22 piece string delimited by the 
"RTN","ICDEXD5",30,0)
 ;           up-arrow (^) the pieces are:
"RTN","ICDEXD5",31,0)
 ;           
"RTN","ICDEXD5",32,0)
 ;              1  DRG name (field #.01)
"RTN","ICDEXD5",33,0)
 ;              2  Weight (field #2)
"RTN","ICDEXD5",34,0)
 ;              3  Low Trim (days) (field #3)
"RTN","ICDEXD5",35,0)
 ;              4  High Trim (days) (field #4)
"RTN","ICDEXD5",36,0)
 ;              5  MDC (field #5)
"RTN","ICDEXD5",37,0)
 ;              6  Surgery Flag (field #.06)
"RTN","ICDEXD5",38,0)
 ;              7  <null>
"RTN","ICDEXD5",39,0)
 ;              8  Avg Length of Stay (days) (field 10)
"RTN","ICDEXD5",40,0)
 ;              9  Local Low Trim Days (field #11)
"RTN","ICDEXD5",41,0)
 ;             10  Local High Trim Days (field #12)
"RTN","ICDEXD5",42,0)
 ;             11  <null>
"RTN","ICDEXD5",43,0)
 ;             12  Local Breakeven (field #13)
"RTN","ICDEXD5",44,0)
 ;             13  Activation Date (.01 of the 66 multiple)
"RTN","ICDEXD5",45,0)
 ;             14  Status (.03 of the 66 multiple)
"RTN","ICDEXD5",46,0)
 ;             15  Inactivation Date (.01 of the 66 multiple)
"RTN","ICDEXD5",47,0)
 ;             16  Effective date (.01 of the 66 multiple)
"RTN","ICDEXD5",48,0)
 ;             17  Internal Entry Number (IEN)
"RTN","ICDEXD5",49,0)
 ;             18  Effective date (.01 of the 66 multiple)
"RTN","ICDEXD5",50,0)
 ;             19  Reference (field #900)
"RTN","ICDEXD5",51,0)
 ;             20  Weight (Non Affil) (field #7)
"RTN","ICDEXD5",52,0)
 ;             21  Weight (Int Affil) (field #7.5)
"RTN","ICDEXD5",53,0)
 ;             22  Message
"RTN","ICDEXD5",54,0)
 ; 
"RTN","ICDEXD5",55,0)
 ;              or 
"RTN","ICDEXD5",56,0)
 ; 
"RTN","ICDEXD5",57,0)
 ;             -1^Error Description
"RTN","ICDEXD5",58,0)
 ; 
"RTN","ICDEXD5",59,0)
 N D0,DCS,DFY,DFYINF,DCSINF,DMC1,D1,FYDT,FYMD,ICDFY,ICDIMP,STR
"RTN","ICDEXD5",60,0)
 S CDT=$P(CDT,".",1) S:CDT'?7N CDT=DT S CDT=$$DTBR^ICDEX(CDT,2)
"RTN","ICDEXD5",61,0)
 I $G(CODE)="" S STR="-1^NO CODE SELECTED",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDEXD5",62,0)
 S CDT=CDT+.001
"RTN","ICDEXD5",63,0)
 S CODE=$G(CODE),CODE=$S(CODE:+CODE,1:$$DRGN^ICDEX(CODE)) ; GET ien
"RTN","ICDEXD5",64,0)
 I CODE<1!'$D(^ICD(CODE)) S STR="-1^NO SUCH ENTRY",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDEXD5",65,0)
 S D0=^ICD(CODE,0)
"RTN","ICDEXD5",66,0)
 ; Get FY in YYY0000 format for the effective date
"RTN","ICDEXD5",67,0)
 S FYDT=$$EFM^ICDEX($$FY^ICDEX(CDT))+.001
"RTN","ICDEXD5",68,0)
 S DFY=$O(^ICD(CODE,"FY",FYDT),-1) S:DFY>0 DFYINF=^(DFY,0) I DFY'>0 D
"RTN","ICDEXD5",69,0)
 . S DFYINF=U_$P(D0,U,2,4)_U_U_$P(D0,U,9)_U_$P(D0,U,12)_U_$P(D0,U,7)_U_$P(D0,U,8)_U_$P(D0,U,11)
"RTN","ICDEXD5",70,0)
 S DCS=$O(^ICD(CODE,66,"B",CDT),-1),D1=$S(DCS'="":$O(^ICD(CODE,66,"B",DCS,0)),1:0) S DCSINF=$S(D1>0:^ICD(CODE,66,D1,0),1:"")
"RTN","ICDEXD5",71,0)
 ; If CSV does not exist, default to info
"RTN","ICDEXD5",72,0)
 ; at .01 level with status = inactive
"RTN","ICDEXD5",73,0)
 I DCSINF="" S DCSINF=U_U_"0"_U_U_$P(D0,U,5,6)
"RTN","ICDEXD5",74,0)
 ; Resolve using "B" cross reference and fiscal year
"RTN","ICDEXD5",75,0)
 ; If ICDFY is not resolved set it to current fiscal year
"RTN","ICDEXD5",76,0)
 S ICDFY=$O(^ICD(CODE,2,"B",CDT+.01),-1),DMC1=""
"RTN","ICDEXD5",77,0)
 S DMC1=$O(^ICD(CODE,2,"B",+$G(ICDFY),DMC1)),DMC1=$P($G(^ICD(CODE,2,+DMC1,0)),U,3)
"RTN","ICDEXD5",78,0)
 S STR=$P(D0,U)_U_$P(DFYINF,U,2,4)_U_$P(DCSINF,U,5,6)_U_U_$P(DFYINF,U,9)_U_$P(DFYINF,U,6,7)
"RTN","ICDEXD5",79,0)
 S STR=STR_U_U_$P(D0,U,12)_U_$P(D0,U,13)_U_$P(DCSINF,U,3)_U_$P(D0,U,15)_U_$P(DCSINF,U)_U_CODE_U_DCS_U_$P(DMC1,U)_U_$P(DFYINF,U,8)_U_$P(DFYINF,U,10)
"RTN","ICDEXD5",80,0)
 ;
"RTN","ICDEXD5",81,0)
DRGQ ; DRG Quit on Error
"RTN","ICDEXD5",82,0)
 Q STR
"RTN","ICDEXD5",83,0)
 Q
"RTN","ICDEXD5",84,0)
DRGDES(IEN,CDT,ARY,LEN) ; Returns DRG Description in Array
"RTN","ICDEXD5",85,0)
 ;
"RTN","ICDEXD5",86,0)
 ; Input: 
"RTN","ICDEXD5",87,0)
 ; 
"RTN","ICDEXD5",88,0)
 ;    IEN     Internal Entry Number of DRG file 80.2
"RTN","ICDEXD5",89,0)
 ;    CDT     Date to screen against (default = TODAY)
"RTN","ICDEXD5",90,0)
 ;   .ARY     Output Array passed by reference
"RTN","ICDEXD5",91,0)
 ;    LEN     Length of each array node
"RTN","ICDEXD5",92,0)
 ;              Missing        Defaults to 79
"RTN","ICDEXD5",93,0)
 ;              Less than 25   Defaults to 25
"RTN","ICDEXD5",94,0)
 ; Output:
"RTN","ICDEXD5",95,0)
 ; 
"RTN","ICDEXD5",96,0)
 ;    $$DRGD  Number of lines in description output array
"RTN","ICDEXD5",97,0)
 ;    
"RTN","ICDEXD5",98,0)
 ;    ARY     Description in array of length specified
"RTN","ICDEXD5",99,0)
 ;
"RTN","ICDEXD5",100,0)
 N ICDI,ICDED,ICDID,ICDD,ICDL,ICDN,ICDT,N
"RTN","ICDEXD5",101,0)
 K ARY S ICDL=$G(LEN) S:+ICDL'>0 ICDL=79 S:ICDL<25 ICDL=25
"RTN","ICDEXD5",102,0)
 S ICDI=+($G(IEN)) S:ICDI'>0 ICDI=$$DRGN^ICDEX(IEN)
"RTN","ICDEXD5",103,0)
 I +($G(IEN))'>0!('$D(^ICD(IEN))) S N="-1^DRG ENTRY NOT FOUND" G DRGDQ
"RTN","ICDEXD5",104,0)
 S ICDD=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(CDT,2))
"RTN","ICDEXD5",105,0)
 S ICDED=$O(^ICD(+IEN,68,"B",(ICDD+.001)),-1)
"RTN","ICDEXD5",106,0)
 S ICDID=$O(^ICD(+IEN,68,"B",+ICDED," "),-1)
"RTN","ICDEXD5",107,0)
 S ICDN=0 F  S ICDN=$O(^ICD(+IEN,68,+ICDID,ICDN)) Q:+ICDN'>0  D
"RTN","ICDEXD5",108,0)
 . N ICDC S ICDT=$$TM($G(^ICD(+ICDI,68,+ICDID,1,+ICDN,0))) Q:'$L(ICDT)
"RTN","ICDEXD5",109,0)
 . S ICDC=$O(ARY(" "),-1)+1,ARY(ICDC)=ICDT,ARY(0)=ICDC
"RTN","ICDEXD5",110,0)
 D:+($G(ARY(0)))>0 PAR^ICDEX(.ARY,+($G(ICDL)))
"RTN","ICDEXD5",111,0)
 S:+($O(ARY(" "),-1))>0 ARY(0)=+($O(ARY(" "),-1))
"RTN","ICDEXD5",112,0)
 Q $G(ARY(0))
"RTN","ICDEXD5",113,0)
DRGD(CODE,OUTARR,CDT) ; returns CPT description in array
"RTN","ICDEXD5",114,0)
 ;
"RTN","ICDEXD5",115,0)
 ; Input: 
"RTN","ICDEXD5",116,0)
 ; 
"RTN","ICDEXD5",117,0)
 ;    CODE    ICD Code, Internal or External Format (required)
"RTN","ICDEXD5",118,0)
 ;    ARY     Output Array Name for description 
"RTN","ICDEXD5",119,0)
 ;              e.g. "ABC" or "ABC("TEST")" 
"RTN","ICDEXD5",120,0)
 ;              Default = ^TMP("DRGD",$J)
"RTN","ICDEXD5",121,0)
 ;    CDT     Date to screen against (default = TODAY)
"RTN","ICDEXD5",122,0)
 ;              If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDEXD5",123,0)
 ;              If CDT > DT, use DT
"RTN","ICDEXD5",124,0)
 ;              If CDT is year only, use first of the year
"RTN","ICDEXD5",125,0)
 ;              If CDT is year/month only, use first of the month
"RTN","ICDEXD5",126,0)
 ; 
"RTN","ICDEXD5",127,0)
 ; Output:
"RTN","ICDEXD5",128,0)
 ; 
"RTN","ICDEXD5",129,0)
 ;    $$DRGD  Number of lines in description output array
"RTN","ICDEXD5",130,0)
 ;    
"RTN","ICDEXD5",131,0)
 ;    ARY     Description in array
"RTN","ICDEXD5",132,0)
 ;    
"RTN","ICDEXD5",133,0)
 ;              @ARY(1:n) - Description (lines 1-n) (field 68)
"RTN","ICDEXD5",134,0)
 ;              @ARY(n+1) - Blank
"RTN","ICDEXD5",135,0)
 ;              @ARY(n+1) - Message: CODE TEXT MAY BE INACCURATE
"RTN","ICDEXD5",136,0)
 ; 
"RTN","ICDEXD5",137,0)
 ;            or
"RTN","ICDEXD5",138,0)
 ; 
"RTN","ICDEXD5",139,0)
 ;              -1^Error Description
"RTN","ICDEXD5",140,0)
 ; 
"RTN","ICDEXD5",141,0)
 ; ** NOTE - USER MUST INITIALIZE ^TMP("DRGD",$J), IF USED **
"RTN","ICDEXD5",142,0)
 ;
"RTN","ICDEXD5",143,0)
 N ARR,END,I,N,CTV,IEN
"RTN","ICDEXD5",144,0)
 I $G(CODE)="" S N="-1^NO CODE SELECTED" G DRGDQ
"RTN","ICDEXD5",145,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""DRGD"",$J,"
"RTN","ICDEXD5",146,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICDEXD5",147,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICDEXD5",148,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICDEXD5",149,0)
 K:OUTARR="^TMP(""DRGD"",$J," ^TMP("DRGD",$J)
"RTN","ICDEXD5",150,0)
 S CODE=$G(CODE),IEN=$S(CODE:+CODE,1:$$DRGN^ICDEX(CODE)),I=0,N=0
"RTN","ICDEXD5",151,0)
 I +IEN<1!('$D(^ICD(IEN))) S N="-1^NO SUCH CODE" G DRGDQ
"RTN","ICDEXD5",152,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(CDT,2))
"RTN","ICDEXD5",153,0)
 D VLTDR(+IEN,CDT,.CTV) S (N,I)=0 F  S I=$O(CTV(I)) Q:+I=0  D
"RTN","ICDEXD5",154,0)
 . S N=N+1,ARR=OUTARR_N_")",@ARR=$$TM($G(CTV(I)))
"RTN","ICDEXD5",155,0)
 I +N>0 S N=N+1,ARR=OUTARR_N_")",@ARR=" ",N=N+1,ARR=OUTARR_N_")",@ARR=$$MSG^ICDEX(CDT,2)
"RTN","ICDEXD5",156,0)
 I +N'>0 S N="-1^VERSIONED DESCRIPTION NOT FOUND FOR "_CODE
"RTN","ICDEXD5",157,0)
DRGDQ ; DRG Description Quit
"RTN","ICDEXD5",158,0)
 Q N
"RTN","ICDEXD5",159,0)
 Q
"RTN","ICDEXD5",160,0)
GETDATE(IEN) ; Calculate Effective Date from the PTF
"RTN","ICDEXD5",161,0)
 ; 
"RTN","ICDEXD5",162,0)
 ;
"RTN","ICDEXD5",163,0)
 ;  Input: 
"RTN","ICDEXD5",164,0)
 ;  
"RTN","ICDEXD5",165,0)
 ;     IEN        Internal Entry Number of the PTF file #45
"RTN","ICDEXD5",166,0)
 ;     
"RTN","ICDEXD5",167,0)
 ;  Output:   
"RTN","ICDEXD5",168,0)
 ;  
"RTN","ICDEXD5",169,0)
 ;     $$GETDATE  Returns the correct "EFFECTIVE DATE" 
"RTN","ICDEXD5",170,0)
 ;                for a patient to uses retrieving and
"RTN","ICDEXD5",171,0)
 ;                calculating DRG/ICD/CPT data (default
"RTN","ICDEXD5",172,0)
 ;                TODAY)
"RTN","ICDEXD5",173,0)
 ;                
"RTN","ICDEXD5",174,0)
 ;                Derived from:
"RTN","ICDEXD5",175,0)
 ;                  Census Date      ^DGPT         0;13
"RTN","ICDEXD5",176,0)
 ;                  Discharge Date   ^DG(45.86     0;1
"RTN","ICDEXD5",177,0)
 ;                  Surgery Date     ^DGPT(D0,"S"  0;1
"RTN","ICDEXD5",178,0)
 ;                  Movement Date    ^DGPT(D0,"M"  0;10
"RTN","ICDEXD5",179,0)
 ;  
"RTN","ICDEXD5",180,0)
 N ICDI,ICDE,ICDP,ICDT S ICDT=$$NOW^XLFDT
"RTN","ICDEXD5",181,0)
 S ICDI=+($G(IEN)) Q:'$D(^DGPT(ICDI,0)) ICDT
"RTN","ICDEXD5",182,0)
 S ICDP=$P($G(^DGPT(ICDI,0)),U,13) I ICDP'="" D  Q:ICDE'="" ICDE
"RTN","ICDEXD5",183,0)
 . S ICDE=$P($G(^DG(45.86,ICDP,0)),U,1)
"RTN","ICDEXD5",184,0)
 S ICDE=$P($G(^DGPT(ICDI,70)),U,1) Q:ICDE'="" ICDE
"RTN","ICDEXD5",185,0)
 S ICDE=$P($G(^DGPT(ICDI,"S",1,0)),U,1) Q:ICDE'="" ICDE
"RTN","ICDEXD5",186,0)
 S ICDE=$P($G(^DGPT(ICDI,"M",1,0)),U,10)
"RTN","ICDEXD5",187,0)
 S:'$L(ICDE) ICDE=ICDT
"RTN","ICDEXD5",188,0)
 Q ICDE
"RTN","ICDEXD5",189,0)
VLTDR(IEN,CDT,ARY) ; Versioned Description - Long Text
"RTN","ICDEXD5",190,0)
 ;
"RTN","ICDEXD5",191,0)
 ; Input:
"RTN","ICDEXD5",192,0)
 ; 
"RTN","ICDEXD5",193,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD5",194,0)
 ;    CDT      Effective/Versioning date to be used
"RTN","ICDEXD5",195,0)
 ;    .ARY     Array for output, passed by reference
"RTN","ICDEXD5",196,0)
 ;
"RTN","ICDEXD5",197,0)
 ; Output:
"RTN","ICDEXD5",198,0)
 ; 
"RTN","ICDEXD5",199,0)
 ;    ARY()    Local array containing versioned description
"RTN","ICDEXD5",200,0)
 ;
"RTN","ICDEXD5",201,0)
 N ICD0,ICDC,ICDI,ICDSTD,ICDSTI,ICDVDT,ICDTXT,ICDD,ICDT,ICDE
"RTN","ICDEXD5",202,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0  Q:'$D(^ICD(+ICDI))
"RTN","ICDEXD5",203,0)
 S ICDVDT=$G(CDT) S:'$L(ICDVDT)!(+ICDVDT'>0) ICDVDT=$$DT^XLFDT Q:$P(ICDVDT,".",1)'?7N
"RTN","ICDEXD5",204,0)
 S ICD0=$G(^ICD(+ICDI,0)),ICDC=$P(ICD0,"^",1) Q:'$L(ICDC)
"RTN","ICDEXD5",205,0)
 S ICDSTD=$O(^ICD("ADS",(ICDC_" "),(ICDVDT+.000001)),-1)
"RTN","ICDEXD5",206,0)
 I +ICDSTD>0 D  Q:+($O(ARY(0)))>0
"RTN","ICDEXD5",207,0)
 . S ICDSTI=$O(^ICD("ADS",(ICDC_" "),ICDSTD,+ICDI," "),-1)
"RTN","ICDEXD5",208,0)
 . S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(+ICDI,68,ICDSTI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",209,0)
 . . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(+ICDI,68,+ICDSTI,1,+ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",210,0)
 S ICDSTD=$O(^ICD(+ICDI,68,"B"," "),-1) I +ICDSTD>0 D  Q:+($O(ARY(0)))>0
"RTN","ICDEXD5",211,0)
 . S ICDSTI=$O(^ICD(+ICDI,68,"B",ICDSTD,0))
"RTN","ICDEXD5",212,0)
 . S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(+ICDI,68,ICDSTI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",213,0)
 . . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(+ICDI,68,+ICDSTI,1,+ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",214,0)
 K ARY S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(ICDI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",215,0)
 . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(ICDI,1,ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",216,0)
 Q
"RTN","ICDEXD5",217,0)
TM(X) ; Trim Spaces
"RTN","ICDEXD5",218,0)
 S X=$G(X) Q:X="" X F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICDEXD5",219,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXD5",220,0)
 F  Q:X'["  "  S X=$P(X,"  ",1)_" "_$P(X,"  ",2,229)
"RTN","ICDEXD5",221,0)
 Q X
"RTN","ICDEXD5",222,0)
DRGN(CODE) ; Return the IEN of DRG
"RTN","ICDEXD5",223,0)
 ;
"RTN","ICDEXD5",224,0)
 ;   Input:  
"RTN","ICDEXD5",225,0)
 ;   
"RTN","ICDEXD5",226,0)
 ;     CODE     DRG code
"RTN","ICDEXD5",227,0)
 ;       
"RTN","ICDEXD5",228,0)
 ;  Output:  
"RTN","ICDEXD5",229,0)
 ;  
"RTN","ICDEXD5",230,0)
 ;     $$DRGN   IEN of DRG code
"RTN","ICDEXD5",231,0)
 ;       
"RTN","ICDEXD5",232,0)
 ;              or 
"RTN","ICDEXD5",233,0)
 ;       
"RTN","ICDEXD5",234,0)
 ;              -1 on error
"RTN","ICDEXD5",235,0)
 ;
"RTN","ICDEXD5",236,0)
 Q:$G(CODE)="" -1
"RTN","ICDEXD5",237,0)
 N COD S COD=+$O(^ICD("B",CODE,0))
"RTN","ICDEXD5",238,0)
 Q $S(COD>0:COD,1:-1)
"RTN","ICDEXD5",239,0)
 Q
"RTN","ICDEXD5",240,0)
DRGC(IEN) ; DRG Code
"RTN","ICDEXD5",241,0)
 ;
"RTN","ICDEXD5",242,0)
 ; Input:
"RTN","ICDEXD5",243,0)
 ; 
"RTN","ICDEXD5",244,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD5",245,0)
 ;
"RTN","ICDEXD5",246,0)
 ; Output:
"RTN","ICDEXD5",247,0)
 ; 
"RTN","ICDEXD5",248,0)
 ;    $$DRGC   Code (field .01)
"RTN","ICDEXD5",249,0)
 ;
"RTN","ICDEXD5",250,0)
 ; Replaces ICR 370
"RTN","ICDEXD5",251,0)
 ; 
"RTN","ICDEXD5",252,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD(+IEN,0)) ""
"RTN","ICDEXD5",253,0)
 Q $P($G(^ICD(+IEN,0)),"^",1)
"RTN","ICDEXD5",254,0)
DRGW(IEN) ; DRG Weighted Work Unit (WWU)
"RTN","ICDEXD5",255,0)
 ;
"RTN","ICDEXD5",256,0)
 ; Input:
"RTN","ICDEXD5",257,0)
 ; 
"RTN","ICDEXD5",258,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD5",259,0)
 ;
"RTN","ICDEXD5",260,0)
 ; Output:
"RTN","ICDEXD5",261,0)
 ; 
"RTN","ICDEXD5",262,0)
 ;    $$WT     Weight
"RTN","ICDEXD5",263,0)
 ;
"RTN","ICDEXD5",264,0)
 ; Replaces ICR 48
"RTN","ICDEXD5",265,0)
 ; 
"RTN","ICDEXD5",266,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD(+IEN,0)) ""
"RTN","ICDEXD5",267,0)
 Q $P($G(^ICD(+IEN,0)),"^",2)
"RTN","ICDEXD5",268,0)
CARD(X) ; Implants/Insertion Cardio Device (EN1^ICDDRG5)
"RTN","ICDEXD5",269,0)
 N SO S X="^" S:$D(ICDOP(" 00.50")) $P(X,"^",2)=1 S:$D(ICDOP(" 00.52"))&($D(ICDOP(" 00.53"))) $P(X,"^",2)=1
"RTN","ICDEXD5",270,0)
 I $D(ICDOP(" 37.70"))!($D(ICDOP(" 37.71")))!($D(ICDOP(" 37.73"))) D  Q X
"RTN","ICDEXD5",271,0)
 . N SO F SO="37.80","37.81","37.82","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",272,0)
 I $D(ICDOP(" 37.72")) D  Q X
"RTN","ICDEXD5",273,0)
 . S:$D(ICDOP(" 37.80"))!($D(ICDOP(" 37.83"))) $P(X,"^",2)=1
"RTN","ICDEXD5",274,0)
 I $D(ICDOP(" 37.74")) D  Q X
"RTN","ICDEXD5",275,0)
 . N SO F SO="37.80","37.81","37.82","37.83","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",276,0)
 I $D(ICDOP(" 37.76")) D  Q X
"RTN","ICDEXD5",277,0)
 . N SO F SO="37.80","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",278,0)
 I $D(ICDOP(" 00.53")) D
"RTN","ICDEXD5",279,0)
 . N SO F SO="37.70","37.71","37.72","37.73","37.74","37.76" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",280,0)
 N SO F SO="00.54","37.95","37.96","37.97","37.98","00.52" S:$D(ICDOP((" "_SO))) $P(X,"^",1)=1
"RTN","ICDEXD5",281,0)
 Q X
"RTN","ICDEXD5",282,0)
SPIN(X) ; Paired Spinal Fusion Codes (EN1^ICDDRG8)
"RTN","ICDEXD5",283,0)
 N SP,ICDA,ICDB S (ICDA,ICDB,X)=0
"RTN","ICDEXD5",284,0)
 F SO="81.02","81.04","81.06","81.32","81.34","81.36" S:$D(ICDOP((" "_SO))) ICDA=1
"RTN","ICDEXD5",285,0)
 F SO="81.03","81.05","81.07","81.08","81.33","81.35","81.37","81.38" S:$D(ICDOP((" "_SO))) ICDB=1
"RTN","ICDEXD5",286,0)
 S:ICDA&(ICDB) X=1
"RTN","ICDEXD5",287,0)
 Q X
"RTN","ICDEXH")
0^59^B89157219
"RTN","ICDEXH",1,0)
ICDEXH ;SLC/KER - ICD Extractor - API Help ;04/21/2014
"RTN","ICDEXH",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXH",3,0)
 ;               
"RTN","ICDEXH",4,0)
 ;               
"RTN","ICDEXH",5,0)
 ; Global Variables
"RTN","ICDEXH",6,0)
 ;    None
"RTN","ICDEXH",7,0)
 ;               
"RTN","ICDEXH",8,0)
 ; External References
"RTN","ICDEXH",9,0)
 ;    ^%ZIS               ICR  10086
"RTN","ICDEXH",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","ICDEXH",11,0)
 ;    ^%ZISC              ICR  10089
"RTN","ICDEXH",12,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","ICDEXH",13,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXH",14,0)
 ;               
"RTN","ICDEXH",15,0)
EN ; API Help Main Entry Point
"RTN","ICDEXH",16,0)
 D HLP("EXT") Q
"RTN","ICDEXH",17,0)
ALL ;   Help for All APIs
"RTN","ICDEXH",18,0)
 N SEL,EXIT,ANS,HDR S EXIT=0 K SEL D HLP("AL")
"RTN","ICDEXH",19,0)
 Q
"RTN","ICDEXH",20,0)
HLP(X) ; Help for X APIs
"RTN","ICDEXH",21,0)
 N SEL,EXIT,ANS,TYPE,HDR S EXIT=0 K SEL S TYPE=$G(X) S:'$L(TYPE) TYPE="AL"  Q:'$L($T(@(TYPE_"+0^ICDEXH")))  D @TYPE
"RTN","ICDEXH",22,0)
 Q
"RTN","ICDEXH",23,0)
EXT ; Extraction API Help
"RTN","ICDEXH",24,0)
 S HDR=" Data Extraction API Help available for:"
"RTN","ICDEXH",25,0)
 D EX S ANS=$$ASK Q:+ANS'>0  Q:'$D(SEL(+ANS))  D DHLP
"RTN","ICDEXH",26,0)
 Q
"RTN","ICDEXH",27,0)
LEG ; Legacy API Help
"RTN","ICDEXH",28,0)
 S HDR=" Legacy API Help available for:"
"RTN","ICDEXH",29,0)
 D LG S ANS=$$ASK Q:+ANS'>0  Q:'$D(SEL(+ANS))  D DHLP
"RTN","ICDEXH",30,0)
 Q
"RTN","ICDEXH",31,0)
SDD ; SDD Mandated API Help
"RTN","ICDEXH",32,0)
 S HDR=" SDD Mandated API Help available for:"
"RTN","ICDEXH",33,0)
 D SD S ANS=$$ASK Q:+ANS'>0  Q:'$D(SEL(+ANS))  D DHLP
"RTN","ICDEXH",34,0)
 Q
"RTN","ICDEXH",35,0)
AL ; All APIs Help
"RTN","ICDEXH",36,0)
 S HDR=" API Help available for:"
"RTN","ICDEXH",37,0)
 K SEL D EX,LG,SD S ANS=$$ASK Q:+ANS'>0  Q:'$D(SEL(+ANS))  D DHLP
"RTN","ICDEXH",38,0)
 Q
"RTN","ICDEXH",39,0)
DHLP ;   Display Help
"RTN","ICDEXH",40,0)
 N %ZIS,CF,CONT,DNC,EOP,I,LC,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,POP
"RTN","ICDEXH",41,0)
 S %ZIS("A")=" Device:  ",ZTRTN="DIS^ICDEXH",ZTDESC="Display ICD API Help"
"RTN","ICDEXH",42,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="Q",ZTSAVE("SEL(")="",ZTSAVE("ANS")="" W ! D ^%ZIS I POP K %ZIS Q
"RTN","ICDEXH",43,0)
 S ZTIO=ION I $D(IO("Q")) D QUE,^%ZISC,HOME^%ZIS K %ZIS Q
"RTN","ICDEXH",44,0)
 K %ZIS D NOQUE Q
"RTN","ICDEXH",45,0)
NOQUE ;   Do not queue Display
"RTN","ICDEXH",46,0)
 W @IOF W:IOST["P-" !,"< Not queued, printing ICD API Help >",! U:IOST["P-" IO D @ZTRTN,^%ZISC,HOME^%ZIS Q
"RTN","ICDEXH",47,0)
QUE ;   Task queued to print Help
"RTN","ICDEXH",48,0)
 K IO("Q") D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! Q
"RTN","ICDEXH",49,0)
 Q
"RTN","ICDEXH",50,0)
CAP ; Capture
"RTN","ICDEXH",51,0)
 D EX N ENT,CHR S CHR="",ENT=0 F  S ENT=$O(SEL(ENT)) Q:+ENT'>0  D
"RTN","ICDEXH",52,0)
 . N API,TTL,END,MENU,TXT,TXT2,TAG,RTN,CF,FIRST,LINE S TTL=$G(SEL(ENT)),API=$G(SEL(ENT,1))
"RTN","ICDEXH",53,0)
 . Q:'$L(TTL)  Q:'$L($P(TTL,"^",1))  Q:'$L($P(TTL,"^",2))  Q:'$L($P(TTL,"  ",2,299))
"RTN","ICDEXH",54,0)
 . Q:'$L(API)  Q:'$L($P(API,"^",1))  Q:'$L($P(API,"^",2))  Q:API'["ICDEX"
"RTN","ICDEXH",55,0)
 . S END=$E($P(API,"ICDEX",2),1) I END'=CHR D
"RTN","ICDEXH",56,0)
 . . S CHR=END N HDR,LN S (HDR,LN)="" S:END="C" HDR="ICD Code APIs" S:END="A" HDR="Misceaneous ICD APIs"
"RTN","ICDEXH",57,0)
 . . S:END="S" HDR="ICD Support APIs" S:END="D" HDR="DRG Grouper APIs" S:END="H" HDR="ICD API Help"
"RTN","ICDEXH",58,0)
 . . S:END="L" HDR="ICD Special Lookup APIs" S:$L(HDR) $P(LN,"=",$L(HDR))="=" W:$L(HDR) !!,HDR,!,LN,!
"RTN","ICDEXH",59,0)
 . S TAG=$P(API,"^",1),RTN=$P(API,"^",2)
"RTN","ICDEXH",60,0)
 . Q:'$L($T(@(RTN_"^"_RTN)))  Q:'$L($T(@(TAG_"^"_RTN)))
"RTN","ICDEXH",61,0)
 . S EXEC="S FIRST=$T("_TAG_"+1^"_RTN_")" X EXEC
"RTN","ICDEXH",62,0)
 . S MENU=TTL,TXT2=$$TM($T(@(TAG_"+1^"_RTN))) W !!,$S('$D(FORUM):" ",1:""),MENU W:$G(FIRST)'[";" !
"RTN","ICDEXH",63,0)
 . S CF=1 S TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","ICDEXH",64,0)
 . . N EXEC,TXT2,TXT3 S (TXT,TXT2,TXT3)=""
"RTN","ICDEXH",65,0)
 . . S EXEC="S (TXT,TXT2)=$T("_TAG_"+"_LINE_"^"_RTN_")" X EXEC
"RTN","ICDEXH",66,0)
 . . S EXEC="S TXT3=$T("_TAG_"+"_(LINE+1)_"^"_RTN_")" X EXEC
"RTN","ICDEXH",67,0)
 . . S TXT2=$$TM(TXT2) I TXT2="Q"!(TXT2'[";") S TXT="" Q
"RTN","ICDEXH",68,0)
 . . S:TXT3'[";" TXT3="" S:TXT2[";" TXT2=" "_$P(TXT2,";",2,299)
"RTN","ICDEXH",69,0)
 . . I $L(TXT2),$L(TXT3) W:'$D(FORUM) !,"  ",TXT2 W:$D(FORUM) !,$$TM(TXT2) S CF=0
"RTN","ICDEXH",70,0)
 N FORUM
"RTN","ICDEXH",71,0)
 Q
"RTN","ICDEXH",72,0)
 ;
"RTN","ICDEXH",73,0)
DIS ; Display
"RTN","ICDEXH",74,0)
 N MENU,TAG,RTN,LINE,TXT,TXT1,TXT2,CF,LC,EOP,CONT,EXIT S ANS=+($G(ANS)) Q:+ANS'>0
"RTN","ICDEXH",75,0)
 S MENU=$G(SEL(+($G(ANS)))),TAG=$G(SEL(+($G(ANS)),1)),RTN=$P(TAG,"^",2),TAG=$P(TAG,"^",1)
"RTN","ICDEXH",76,0)
 Q:'$L(MENU)  Q:'$L(TAG)  Q:'$L(RTN)  Q:'$L($T(@(RTN_"^"_RTN)))  Q:'$L($T(@(TAG_"^"_RTN)))
"RTN","ICDEXH",77,0)
 S CONT="",(CF,LC)=0,EOP=+($G(IOSL)) S:EOP=0 EOP=24 S TXT1=$$TM($T(@(TAG_"^"_RTN)))
"RTN","ICDEXH",78,0)
 S TXT2=$$TM($T(@(TAG_"+1^"_RTN))) W:$L($G(IOF)) @IOF W:'$L($G(IOF)) ! D:'$L($G(IOF)) LF
"RTN","ICDEXH",79,0)
 W !," ",MENU D LF W:$L(TXT2) ! D:$L(TXT2) LF
"RTN","ICDEXH",80,0)
 S CF=1 S TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","ICDEXH",81,0)
 . N EXEC,TXT2,TXT3 S (TXT,TXT2,TXT3)=""
"RTN","ICDEXH",82,0)
 . S EXEC="S (TXT,TXT2)=$T("_TAG_"+"_LINE_"^"_RTN_")" X EXEC
"RTN","ICDEXH",83,0)
 . S EXEC="S TXT3=$T("_TAG_"+"_(LINE+1)_"^"_RTN_")" X EXEC
"RTN","ICDEXH",84,0)
 . S TXT2=$$TM(TXT2) I TXT2="Q"!(TXT2'[";") S TXT="" Q
"RTN","ICDEXH",85,0)
 . S:TXT3'[";" TXT3="" S:TXT2[";" TXT2=" "_$P(TXT2,";",2,299)
"RTN","ICDEXH",86,0)
 . I $L(TXT2),$L(TXT3) W !,"  ",TXT2 S CF=0 D LF
"RTN","ICDEXH",87,0)
 S:$D(ZTQUEUED) ZTREQ="@" K:+($G(EXIT))>0 SEL,ANS Q:+($G(EXIT))>0  I 'CF D EOP
"RTN","ICDEXH",88,0)
 W:$L($G(IOF)) @IOF K SEL,ANS
"RTN","ICDEXH",89,0)
 Q
"RTN","ICDEXH",90,0)
LF ;   Line Feed
"RTN","ICDEXH",91,0)
 S LC=LC+1 D:IOST["P-"&(LC>(EOP-7)) EOP D:IOST'["P-"&(LC>(EOP-4)) EOP
"RTN","ICDEXH",92,0)
 Q
"RTN","ICDEXH",93,0)
EOP ;   End of Page
"RTN","ICDEXH",94,0)
 S LC=0 W:IOST["P-" @IOF Q:IOST["P-"  W !! S CONT=$$CONT S CF=1
"RTN","ICDEXH",95,0)
 Q
"RTN","ICDEXH",96,0)
CONT(X) ;   Ask to Continue
"RTN","ICDEXH",97,0)
 Q:+($G(EXIT))>0 "^^"  N DIR,DIROUT,DIRUT,DUOUT,DTOUT,Y S DIR(0)="EAO",DIR("A")=" Enter RETURN to continue or '^' to exit: "
"RTN","ICDEXH",98,0)
 S DIR("PRE")="S:X[""?"" X=""??"" S:X[""^"" X=""^""",(DIR("?"),DIR("??"))="^D CONTH^ICDEXH"
"RTN","ICDEXH",99,0)
 D ^DIR S:X["^^"!($D(DTOUT)) X="^^",EXIT=1 Q:X["^^"!(+($G(EXIT))>0) "^^"  Q:$D(DIROUT)!($D(DIRUT))!($D(DUOUT))!($D(DTOUT)) "^"
"RTN","ICDEXH",100,0)
 Q:X["^^" "^^"  Q:X["^" "^"
"RTN","ICDEXH",101,0)
 Q ""
"RTN","ICDEXH",102,0)
CONTH ;      Ask to Continue Help
"RTN","ICDEXH",103,0)
 W !,"     Enter either RETURN or '^'."
"RTN","ICDEXH",104,0)
 Q
"RTN","ICDEXH",105,0)
 ; 
"RTN","ICDEXH",106,0)
ASK(X) ;   Multiple Entries Found
"RTN","ICDEXH",107,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","ICDEXH",108,0)
 N IEN,ITEM,TOT,MAX,ENT,ANS,EXIT,LEN,ROOT,Y,INT S INT=" API Help available for:"
"RTN","ICDEXH",109,0)
 S:$L($G(HDR)) INT=$G(HDR) S LEN=+($G(LEN)) S:+LEN'>0 LEN=10 S (MAX,ENT,ANS,EXIT)=0,U="^"
"RTN","ICDEXH",110,0)
 S TOT=$O(SEL(" "),-1) G:+TOT=0 MULQ S ANS=0 W:+TOT>1 !,INT
"RTN","ICDEXH",111,0)
 F ENT=1:1:TOT Q:((ANS>0)&(ANS<ENT+1))  Q:EXIT  D  Q:EXIT
"RTN","ICDEXH",112,0)
 . N ITEM,IEN,TEXT S ITEM=$G(SEL(ENT))
"RTN","ICDEXH",113,0)
 . S IEN=+ITEM,TEXT=$P(ITEM,U,2) Q:'$L(TEXT)
"RTN","ICDEXH",114,0)
 . S MAX=ENT W:ENT#LEN=1 ! W !,$J(ENT,4),".  ",ITEM
"RTN","ICDEXH",115,0)
 . W:ENT#LEN=0 ! S:ENT#LEN=0 ANS=$$MULS(MAX,ENT) S:ANS["^" EXIT=1
"RTN","ICDEXH",116,0)
 I ENT#LEN'=0,+ANS=0 W ! S ANS=$$MULS(MAX,ENT) S:ANS["^" EXIT=1
"RTN","ICDEXH",117,0)
 G MULQ
"RTN","ICDEXH",118,0)
 Q X
"RTN","ICDEXH",119,0)
MULS(MAX,ENT) ;     Select Multiple
"RTN","ICDEXH",120,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","ICDEXH",121,0)
 N X,Y,LAST,NEXT,RAN,DIR,DTOUT,DUOUT,DIROUT,DIRUT,DIRB,HLP
"RTN","ICDEXH",122,0)
 S MAX=+($G(MAX)),LAST=+($G(ENT)) Q:MAX'>0 -1
"RTN","ICDEXH",123,0)
 S RAN=" Select 1-"_MAX_":  ",NEXT=$O(SEL(+LAST))
"RTN","ICDEXH",124,0)
 S:+NEXT>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or"_RAN
"RTN","ICDEXH",125,0)
 S:+NEXT'>0 DIR("A")=RAN
"RTN","ICDEXH",126,0)
 S HLP="    Answer must be from 1 to "_MAX_", or <Return> to continue"
"RTN","ICDEXH",127,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","ICDEXH",128,0)
 S (DIR("?"),DIR("??"))="^D MULSH^ICDEXH"
"RTN","ICDEXH",129,0)
 S DIR(0)="NAO^1:"_MAX_":0" D ^DIR
"RTN","ICDEXH",130,0)
 S:X["^^"!($D(DTOUT)) EXIT=1,X="^^"
"RTN","ICDEXH",131,0)
 I X["^^"!(+($G(EXIT))>0) Q "^^"
"RTN","ICDEXH",132,0)
 S Y=+Y S:$D(DTOUT)!(X["^") Y="^" K DIR
"RTN","ICDEXH",133,0)
 Q Y
"RTN","ICDEXH",134,0)
MULSH ;     Select Multiple Help
"RTN","ICDEXH",135,0)
 I $L($G(HLP)) W !,$G(HLP) Q
"RTN","ICDEXH",136,0)
 Q
"RTN","ICDEXH",137,0)
MULQ ;     Quit Multiple
"RTN","ICDEXH",138,0)
 Q:+($G(ANS))'>0 -1  S X=+($G(ANS))
"RTN","ICDEXH",139,0)
 Q X
"RTN","ICDEXH",140,0)
 ;
"RTN","ICDEXH",141,0)
 ; Build Menus
"RTN","ICDEXH",142,0)
EX ;   Extraction APIs
"RTN","ICDEXH",143,0)
 N LINE,RTN,TXT S RTN="ICDEX",TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","ICDEXH",144,0)
 . N EXEC,TXT1,TXT2,MENU,TAG,CALL,COMM,SEQ S (TXT,TXT1,TXT2)="",EXEC="S TXT1=$T(+"_LINE_"^"_RTN_")" X EXEC
"RTN","ICDEXH",145,0)
 . S EXEC="S TXT2=$T(+"_(LINE+1)_"^"_RTN_")" X EXEC S TXT=TXT2 Q:'$L(TXT)  Q:$P(TXT1," ",1)="EN"!($P(TXT2," ",1)="EN")
"RTN","ICDEXH",146,0)
 . Q:$P(TXT1," ",1)="HELP"!($P(TXT2," ",1)="HELP")  Q:TXT1["ICDEXH"!(TXT2["ICDEXH")
"RTN","ICDEXH",147,0)
 . I $E(TXT1,1)'=" ",$E(TXT2,1)=" ",TXT1[" ; ",(TXT2["^ICDEX"!(TXT2["^ICDTOKN")) D
"RTN","ICDEXH",148,0)
 . . N TAG,CALL,NAM,ENT,COM S TAG=$P(TXT1,"(",1),TAG=$P(TAG," ",1)
"RTN","ICDEXH",149,0)
 . . I TXT1[(TAG_"(") D
"RTN","ICDEXH",150,0)
 . . . S CALL=TAG_"^"_RTN S:TXT1[(TAG_"(") CALL=CALL_"("_$P($P(TXT1,"(",2),")",1)_")" S:TXT2["$$" CALL="$$"_CALL
"RTN","ICDEXH",151,0)
 . . I TXT1'[(TAG_"(") S TAG=$P(TXT1," ; ",1),CALL=TAG_"^"_RTN
"RTN","ICDEXH",152,0)
 . . S COM=$P(TXT1," ;",2),COM=$P(COM,"ICDEX",1),COM=$P(COM," (ICD",1),COM=$P(COM," (inter",1),COM=$P(COM," (opp",1)
"RTN","ICDEXH",153,0)
 . . S COM=$$TM(COM),MENU=CALL,MENU=MENU_$J(" ",(40-$L(MENU)))_COM,CALL=$$TM(TXT2) S:$E(CALL,2)=" " CALL=$P(CALL," ",2)
"RTN","ICDEXH",154,0)
 . . S:CALL["(" CALL=$P(CALL,"(",1) S TAG=$P(CALL,"^",1),NAM=$P(CALL,"^",2),TAG=$TR(TAG,"$","")
"RTN","ICDEXH",155,0)
 . . S ENT=$T(@(TAG_"^"_NAM))
"RTN","ICDEXH",156,0)
 . . Q:'$L(ENT)  S SEQ=$O(SEL(" "),-1)+1,SEL(SEQ)=MENU,SEL(SEQ,1)=TAG_"^"_NAM
"RTN","ICDEXH",157,0)
 Q
"RTN","ICDEXH",158,0)
LG ;   Legacy APIs
"RTN","ICDEXH",159,0)
 N LINE,RTN,TXT S RTN="ICDEX",TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","ICDEXH",160,0)
 . N EXEC,TXT1,MENU,TAG,CAL,NAM,TAG,RTN,SEQ S (TXT,TXT1,TXT2)="",EXEC="S TXT1=$T(LEGI+"_LINE_"^ICDEXH)" X EXEC
"RTN","ICDEXH",161,0)
 . S TXT=TXT1 Q:'$L(TXT)  S TXT=$P(TXT,";;",2)  Q:'$L(TXT)  S CAL=$P(TXT1,";;",2) Q:'$L(CAL)
"RTN","ICDEXH",162,0)
 . S NAM=$P(TXT1,";;",3) Q:'$L(NAM)  S TAG=$P(TXT1,";;",4) Q:'$L(TAG)  S RTN=$P(TXT1,";;",5) Q:'$L(RTN)
"RTN","ICDEXH",163,0)
 . S MENU=CAL,MENU=MENU_$J(" ",(40-$L(MENU)))_NAM  S SEQ=$O(SEL(" "),-1)+1,SEL(SEQ)=MENU,SEL(SEQ,1)=TAG_"^"_RTN
"RTN","ICDEXH",164,0)
 Q
"RTN","ICDEXH",165,0)
LEGI ; Legacy API Menu Items
"RTN","ICDEXH",166,0)
 ;;$$ICDDX^ICDCODE(CODE,CDT,DFN,SRC);;ICD Dx code info;;ICDDX;;ICDCODE
"RTN","ICDEXH",167,0)
 ;;$$ICDOP^ICDCODE(CODE,CDT,DFN,SRC);;ICD Op/Proc code info;;ICDOP;;ICDCODE
"RTN","ICDEXH",168,0)
 ;;ICDD^ICDCODE(CODE,OUTARR,CDT);;ICD description;;ICDD;;ICDCODE
"RTN","ICDEXH",169,0)
 ;;$$CODEN^ICDCODE(CODE,FILE);;IEN from code;;CODEN;;ICDCODE
"RTN","ICDEXH",170,0)
 ;;$$CODEC^ICDCODE(IEN,FILE);;Code from IEN;;CODEC;;ICDCODE
"RTN","ICDEXH",171,0)
 ;;$$CODEBA^ICDCODE(CODE,ROOT);;IEN from code/root;;CODEBA;;ICDCODE
"RTN","ICDEXH",172,0)
 ;;$$DTBR^ICDAPIU(CDT,CS);;Date Business Rules;;DTBR;;ICDAPIU
"RTN","ICDEXH",173,0)
 ;;$$MSG^ICDAPIU(CDT,CS);;Warning Message;;MSG;;ICDAPIU
"RTN","ICDEXH",174,0)
 ;;$$STATCHK^ICDAPIU(CODE,CDT);;Check ICD code status;;STATCHK;;ICDAPIU
"RTN","ICDEXH",175,0)
 ;;$$NEXT^ICDAPIU(CODE);;Next ICD Code;;NEXT;;ICDAPIU
"RTN","ICDEXH",176,0)
 ;;$$PREV^ICDAPIU(CODE);;Previous ICD Code;;PREV;;ICDAPIU
"RTN","ICDEXH",177,0)
 ;;$$HIST^ICDAPIU(CODE,ARY);;Activation History;;HIST;;ICDAPIU
"RTN","ICDEXH",178,0)
 ;;PERIOD^ICDAPIU(CODE,ARY);;Activation Periods;;PERIOD;;ICDAPIU
"RTN","ICDEXH",179,0)
 ;;$$EFF^ICDSUPT(FILE,IEN,CDT);;Effective date and status;;EFF;;ICDSUPT
"RTN","ICDEXH",180,0)
 ;;$$NUM^ICDSUPT(CODE);;Numeric value from code;;NUM;;ICDSUPT
"RTN","ICDEXH",181,0)
 ;;;;
"RTN","ICDEXH",182,0)
SD ;   SDD Mandated APIs
"RTN","ICDEXH",183,0)
 N LINE,RTN,TXT S RTN="ICDEX",TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","ICDEXH",184,0)
 . N EXEC,TXT1,MENU,TAG,CAL,NAM,TAG,RTN,SEQ S (TXT,TXT1,TXT2)="",EXEC="S TXT1=$T(SDDI+"_LINE_"^ICDEXH)" X EXEC
"RTN","ICDEXH",185,0)
 . S TXT=TXT1 Q:'$L(TXT)  S TXT=$P(TXT,";;",2)  Q:'$L(TXT)  S CAL=$P(TXT1,";;",2) Q:'$L(CAL)
"RTN","ICDEXH",186,0)
 . S NAM=$P(TXT1,";;",3) Q:'$L(NAM)  S TAG=$P(TXT1,";;",4) Q:'$L(TAG)  S RTN=$P(TXT1,";;",5) Q:'$L(RTN)
"RTN","ICDEXH",187,0)
 . S MENU=CAL,MENU=MENU_$J(" ",(40-$L(MENU)))_NAM  S SEQ=$O(SEL(" "),-1)+1,SEL(SEQ)=MENU,SEL(SEQ,1)=TAG_"^"_RTN
"RTN","ICDEXH",188,0)
 Q
"RTN","ICDEXH",189,0)
SDDI ; SDD Mandated API Menu Items
"RTN","ICDEXH",190,0)
 ;;$$ICDDATA^ICDXCODE(CSYS,CODE,DATE,FRMT);;ICD code data;;ICDDATA;;ICDXCODE
"RTN","ICDEXH",191,0)
 ;;$$ICDDESC^ICDXCODE(CSYS,CODE,DATE,.ARY);;ICD code description;;ICDDESC;;ICDXCODE
"RTN","ICDEXH",192,0)
 ;;$$STATCHK^ICDXCODE(CSYS,CODE,DATE);;ICD code status and date;;STATCHK;;ICDXCODE
"RTN","ICDEXH",193,0)
 ;;$$PREV^ICDXCODE(CSYS,CODE);;Previous ICD code;;PREV;;ICDXCODE
"RTN","ICDEXH",194,0)
 ;;$$NEXT^ICDXCODE(CSYS,CODE);;Next ICD code;;NEXT;;ICDXCODE
"RTN","ICDEXH",195,0)
 ;;$$HIST^ICDXCODE(CSYS,CODE,ARY);;Activation History;;HIST;;ICDXCODE
"RTN","ICDEXH",196,0)
 ;;$$PERIOD^ICDXCODE(CSYS,CODE,ARY);;Activation/Inactivation Periods;;PERIOD;;ICDXCODE
"RTN","ICDEXH",197,0)
 ;;$$SEARCH^ICDSAPI(FILE,SCR,DI,VDT,FMT);;Search ICD files;;SEARCH;;ICDSAPI
"RTN","ICDEXH",198,0)
 ;;;;
"RTN","ICDEXH",199,0)
 ; Miscellaneous
"RTN","ICDEXH",200,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","ICDEXH",201,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXH",202,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXH",203,0)
 Q X
"RTN","ICDEXLK")
0^52^B199827276
"RTN","ICDEXLK",1,0)
ICDEXLK ;SLC/KER - ICD Extractor - Lookup ;04/21/2014
"RTN","ICDEXLK",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK",3,0)
 ;               
"RTN","ICDEXLK",4,0)
 ; Global Variables
"RTN","ICDEXLK",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK",6,0)
 ;    ^TMP("ICD0")        SACC 2.3.2.5.1
"RTN","ICDEXLK",7,0)
 ;    ^TMP("ICD9")        SACC 2.3.2.5.1
"RTN","ICDEXLK",8,0)
 ;    ^TMP("ICDEXLK")     SACC 2.3.2.5.1
"RTN","ICDEXLK",9,0)
 ;               
"RTN","ICDEXLK",10,0)
 ; External References
"RTN","ICDEXLK",11,0)
 ;    ^DIM                ICR  10016
"RTN","ICDEXLK",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK",13,0)
 ;               
"RTN","ICDEXLK",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDEXLK",15,0)
 ;     DIC,ICDFMT,ICDSYS,ICDVDT
"RTN","ICDEXLK",16,0)
 ; 
"RTN","ICDEXLK",17,0)
LK ; Lookup
"RTN","ICDEXLK",18,0)
 ;
"RTN","ICDEXLK",19,0)
 ; This is the Special Lookup program for files 80 and 80.1.
"RTN","ICDEXLK",20,0)
 ; Only the ^DIC call honors the special lookup routines. 
"RTN","ICDEXLK",21,0)
 ; Those calls that allow the user to specify the indexes 
"RTN","ICDEXLK",22,0)
 ; (IX^DIC and MIX^DIC1), and the Data Base Server calls 
"RTN","ICDEXLK",23,0)
 ; (FIND^DIC, $$FIND1^DIC, and UPDATE^DIE) all ignore the
"RTN","ICDEXLK",24,0)
 ; Special Lookup Program.  Also, if DIC(0) contains an 
"RTN","ICDEXLK",25,0)
 ; "I" then the Special Lookup program will be ignored.
"RTN","ICDEXLK",26,0)
 ; 
"RTN","ICDEXLK",27,0)
 ; Local Variables Newed or Killed by Calling Application
"RTN","ICDEXLK",28,0)
 ; 
"RTN","ICDEXLK",29,0)
 ;    Versioning Date (Fileman format) (OLD, CSV)
"RTN","ICDEXLK",30,0)
 ;    
"RTN","ICDEXLK",31,0)
 ;      ICDVDT or
"RTN","ICDEXLK",32,0)
 ;      ^TMP("ICDEXLK",$J,"ICDVDT"
"RTN","ICDEXLK",33,0)
 ;    
"RTN","ICDEXLK",34,0)
 ;               If supplied only active codes on that date
"RTN","ICDEXLK",35,0)
 ;               will be included in the selection list.
"RTN","ICDEXLK",36,0)
 ;               
"RTN","ICDEXLK",37,0)
 ;               If not supplied, the date will default to
"RTN","ICDEXLK",38,0)
 ;               TODAY and all codes may be selected, active
"RTN","ICDEXLK",39,0)
 ;               and inactive.
"RTN","ICDEXLK",40,0)
 ;               
"RTN","ICDEXLK",41,0)
 ;               In both cases the display will be altered
"RTN","ICDEXLK",42,0)
 ;               based on the date.
"RTN","ICDEXLK",43,0)
 ;    
"RTN","ICDEXLK",44,0)
 ;    Coding System (from file 80.4) (new)
"RTN","ICDEXLK",45,0)
 ;    
"RTN","ICDEXLK",46,0)
 ;      ICDSYS  or
"RTN","ICDEXLK",47,0)
 ;      ^TMP("ICDEXLK",$J,"ICDSYS"
"RTN","ICDEXLK",48,0)
 ;    
"RTN","ICDEXLK",49,0)
 ;                1    ICD    ICD-9-CM
"RTN","ICDEXLK",50,0)
 ;                2    ICP    ICD-9 Proc
"RTN","ICDEXLK",51,0)
 ;               30    10D    ICD-10-CM
"RTN","ICDEXLK",52,0)
 ;               31    10P    ICD-10-PCS
"RTN","ICDEXLK",53,0)
 ;    
"RTN","ICDEXLK",54,0)
 ;    Display Format (numeric, 1-4) (new)
"RTN","ICDEXLK",55,0)
 ;    
"RTN","ICDEXLK",56,0)
 ;      ICDFMT or
"RTN","ICDEXLK",57,0)
 ;      ^TMP("ICDEXLK",$J,"ICDFMT"
"RTN","ICDEXLK",58,0)
 ;    
"RTN","ICDEXLK",59,0)
 ;             1 = Fileman format, code and short text (default)
"RTN","ICDEXLK",60,0)
 ; 
"RTN","ICDEXLK",61,0)
 ;                 250.00    DMII CMP NT ST UNCNTR
"RTN","ICDEXLK",62,0)
 ;    
"RTN","ICDEXLK",63,0)
 ;             2 = Fileman format, code and description
"RTN","ICDEXLK",64,0)
 ;    
"RTN","ICDEXLK",65,0)
 ;                 250.00    DIABETES MELLITUS NO MENTION OF
"RTN","ICDEXLK",66,0)
 ;                           COMPLICATION, TYPE II OR UNSPECIFIED
"RTN","ICDEXLK",67,0)
 ;                           TYPE, NOT STATED AS UNCONTROLLED
"RTN","ICDEXLK",68,0)
 ;    
"RTN","ICDEXLK",69,0)
 ;             3 = Lexicon format, short text followed by code
"RTN","ICDEXLK",70,0)
 ;    
"RTN","ICDEXLK",71,0)
 ;                 DMII CMP NT ST UNCNTR (250.00)
"RTN","ICDEXLK",72,0)
 ;    
"RTN","ICDEXLK",73,0)
 ;             4 = Lexicon format, description followed by code
"RTN","ICDEXLK",74,0)
 ;    
"RTN","ICDEXLK",75,0)
 ;                 DIABETES MELLITUS NO MENTION OF COMPLICATION,
"RTN","ICDEXLK",76,0)
 ;                 TYPE II OR UNSPECIFIED TYPE, NOT STATED AS
"RTN","ICDEXLK",77,0)
 ;                 UNCONTROLLED (250.00)
"RTN","ICDEXLK",78,0)
 ;    
"RTN","ICDEXLK",79,0)
 ; Special Lookup
"RTN","ICDEXLK",80,0)
 ;    ^DD(80,0,"DIC")="ICDEXLK"
"RTN","ICDEXLK",81,0)
 ;    ^DD(80.1,0,"DIC")="ICDEXLK"
"RTN","ICDEXLK",82,0)
 ;   
"RTN","ICDEXLK",83,0)
 ; FileMan Variables
"RTN","ICDEXLK",84,0)
 ; 
"RTN","ICDEXLK",85,0)
 ; X          If DIC(0) does not contain an A, then the variable
"RTN","ICDEXLK",86,0)
 ;            X must be defined equal to the value you want to 
"RTN","ICDEXLK",87,0)
 ;            find in the requested Index(es). 
"RTN","ICDEXLK",88,0)
 ;            
"RTN","ICDEXLK",89,0)
 ; DIC        Global root or File Number
"RTN","ICDEXLK",90,0)
 ; 
"RTN","ICDEXLK",91,0)
 ;                ^ICD9( or 80
"RTN","ICDEXLK",92,0)
 ;                ^ICD0( or 80.1
"RTN","ICDEXLK",93,0)
 ; 
"RTN","ICDEXLK",94,0)
 ; DIC(0)     (Optional) A string of characters which alter how
"RTN","ICDEXLK",95,0)
 ;            DIC responds. Default value for ICD files "AEM"
"RTN","ICDEXLK",96,0)
 ; 
"RTN","ICDEXLK",97,0)
 ;            Applicable to a versioned lookup
"RTN","ICDEXLK",98,0)
 ;               A   Ask the entry; if erroneous, ask again
"RTN","ICDEXLK",99,0)
 ;               E   Echo information
"RTN","ICDEXLK",100,0)
 ;               F   Forget the lookup value
"RTN","ICDEXLK",101,0)
 ;               I   Ignore the special lookup program
"RTN","ICDEXLK",102,0)
 ;               M   Multiple-index lookup allowed
"RTN","ICDEXLK",103,0)
 ;               O   Only find one entry if it matches exactly
"RTN","ICDEXLK",104,0)
 ;               S   Suppresses display of .01
"RTN","ICDEXLK",105,0)
 ;               X   EXact match required 
"RTN","ICDEXLK",106,0)
 ;               Z   Zero node in Y(0), external form in Y(0,0)  
"RTN","ICDEXLK",107,0)
 ;       
"RTN","ICDEXLK",108,0)
 ;            Not Applicable to a versioned lookup
"RTN","ICDEXLK",109,0)
 ;               C   Versioned cross-references not turned off
"RTN","ICDEXLK",110,0)
 ;               B   There is no B index to use
"RTN","ICDEXLK",111,0)
 ;               K   Primary Key not established
"RTN","ICDEXLK",112,0)
 ;               L   Learning a new entry LAYGO not allowed
"RTN","ICDEXLK",113,0)
 ;               N   Uppercase, IEN lookup allowed (not forced)
"RTN","ICDEXLK",114,0)
 ;               n   ICD has no pure numeric entries
"RTN","ICDEXLK",115,0)
 ;               Q   Input is pre-processed, ?? not necessary
"RTN","ICDEXLK",116,0)
 ;               U   All values are external
"RTN","ICDEXLK",117,0)
 ;               T   All versioned Indexes are used
"RTN","ICDEXLK",118,0)
 ;               V   Verification is not optional
"RTN","ICDEXLK",119,0)
 ;    
"RTN","ICDEXLK",120,0)
 ; DIC("A")   (Optional) A prompt that is displayed prior to the 
"RTN","ICDEXLK",121,0)
 ;            reading of the X input. If DIC("A") is not defined,
"RTN","ICDEXLK",122,0)
 ;            a prompt will be supplied by the special lookup
"RTN","ICDEXLK",123,0)
 ;            routines.
"RTN","ICDEXLK",124,0)
 ;            
"RTN","ICDEXLK",125,0)
 ; DIC("B")   (Optional) The default answer which is presented to
"RTN","ICDEXLK",126,0)
 ;            the user when the lookup prompt is issued. If a
"RTN","ICDEXLK",127,0)
 ;            terminal user simply presses the Enter/Return key,
"RTN","ICDEXLK",128,0)
 ;            the DIC("B") default value will be used, and
"RTN","ICDEXLK",129,0)
 ;            returned in X. DIC("B") will only be used if it is
"RTN","ICDEXLK",130,0)
 ;            non-null. 
"RTN","ICDEXLK",131,0)
 ;            
"RTN","ICDEXLK",132,0)
 ; DIC("S")   (Optional) DIC("S") is a string of M code that DIC 
"RTN","ICDEXLK",133,0)
 ;            executes to screen an entry from selection. 
"RTN","ICDEXLK",134,0)
 ;            DIC("S") must contain an IF statement to set the
"RTN","ICDEXLK",135,0)
 ;            value of $T. Those entries that the IF sets as 
"RTN","ICDEXLK",136,0)
 ;            $T=0 will not be displayed or selectable. If the
"RTN","ICDEXLK",137,0)
 ;            DIC("S") code is executed, the local variable Y is
"RTN","ICDEXLK",138,0)
 ;            the internal number of the entry being screened
"RTN","ICDEXLK",139,0)
 ;            and the M naked indicator is at the global level
"RTN","ICDEXLK",140,0)
 ;            @(DIC_"Y,0)"). 
"RTN","ICDEXLK",141,0)
 ; 
"RTN","ICDEXLK",142,0)
 ; DIC("W")   (Optional) An M command string which is executed
"RTN","ICDEXLK",143,0)
 ;            when DIC displays each of the entries that match
"RTN","ICDEXLK",144,0)
 ;            the user's input. The condition of the variable
"RTN","ICDEXLK",145,0)
 ;            Y and of the naked indicator is the same as for
"RTN","ICDEXLK",146,0)
 ;            DIC("S"). If DIC("W") is defined, it overrides
"RTN","ICDEXLK",147,0)
 ;            the display of any identifiers of the file. Thus,
"RTN","ICDEXLK",148,0)
 ;            if DIC("W")="", the display of identifiers will
"RTN","ICDEXLK",149,0)
 ;            be suppressed. 
"RTN","ICDEXLK",150,0)
 ;            
"RTN","ICDEXLK",151,0)
 ; DIC("?N",<file>)=n 
"RTN","ICDEXLK",152,0)
 ;            (Optional) The number "n" should be an integer set
"RTN","ICDEXLK",153,0)
 ;            to the number of entries to be displayed on the
"RTN","ICDEXLK",154,0)
 ;            screen at one time when using "?" help in a lookup. 
"RTN","ICDEXLK",155,0)
 ;
"RTN","ICDEXLK",156,0)
 ; FileMan Variables not used:
"RTN","ICDEXLK",157,0)
 ; 
"RTN","ICDEXLK",158,0)
 ;            DIC("DR")
"RTN","ICDEXLK",159,0)
 ;            DIC("PTRIX",<from>,<to>,<file>)
"RTN","ICDEXLK",160,0)
 ;            DIC("T")
"RTN","ICDEXLK",161,0)
 ;            DIC("V")
"RTN","ICDEXLK",162,0)
 ;            DIC("?PARAM",<file>,"INDEX")
"RTN","ICDEXLK",163,0)
 ;            DIC("?PARAM",<file>,"FROM",<subscript>)
"RTN","ICDEXLK",164,0)
 ;            DIC("?PARAM",<file>,"PART",<subscript>)
"RTN","ICDEXLK",165,0)
 ;            
"RTN","ICDEXLK",166,0)
 ; FileMan Variables KILLed:
"RTN","ICDEXLK",167,0)
 ; 
"RTN","ICDEXLK",168,0)
 ;            DLAYGO
"RTN","ICDEXLK",169,0)
 ;            DINUM
"RTN","ICDEXLK",170,0)
 ; 
"RTN","ICDEXLK",171,0)
 ; Output
"RTN","ICDEXLK",172,0)
 ;
"RTN","ICDEXLK",173,0)
 ;    Y        IEN ^ Code           Fileman
"RTN","ICDEXLK",174,0)
 ;    
"RTN","ICDEXLK",175,0)
 ;    If DIC(0) contains "Z"
"RTN","ICDEXLK",176,0)
 ;    
"RTN","ICDEXLK",177,0)
 ;       Y(0)     0 Node               Fileman
"RTN","ICDEXLK",178,0)
 ;       Y(0,0)   Code                 Fileman
"RTN","ICDEXLK",179,0)
 ;       Y(0,1)   $$ICDDX or $$ICDOP   Non-Fileman
"RTN","ICDEXLK",180,0)
 ;       Y(0,2)   Long Description     Non-Fileman
"RTN","ICDEXLK",181,0)
 ;   
"RTN","ICDEXLK",182,0)
 K ^TMP("ICD9",$J),^TMP("ICD0",$J) D DIE
"RTN","ICDEXLK",183,0)
 N DIRUT,DIROUT,FILE,ROOT,SUB,SBI,FND,ICDDICA,ICDDICB,ICDDICN,ICDDICW,ICDDICS,ICDDICSS
"RTN","ICDEXLK",184,0)
 N ICDDICST,ICDDIC0,ICDOLD0,ICDDIC00,ICDCDT,ICDCSY,ICDISF,ICDOUT,ICDVER,ICDX,ICDXP,KEY,INP,INP2,INP1,ERR
"RTN","ICDEXLK",185,0)
 N ICDOFND,ICDOSEL,ICDOINP,ICDREDO,ICDOREV,ICDISCD,ICDOUPA
"RTN","ICDEXLK",186,0)
 S (ICDOFND,ICDOSEL,ICDOREV,ICDOUPA)=0,ICDXP=$G(X)
"RTN","ICDEXLK",187,0)
 K DLAYGO,DINUM S (ICDOINP,ICDX)=$S($E($G(X),1)'=" ":$$TM($G(X)),1:$G(X))
"RTN","ICDEXLK",188,0)
 K X,Y,DTOUT,DUOUT S ICDCSY=0,ROOT=$G(DIC),FILE=$$FILE^ICDEX(ROOT)
"RTN","ICDEXLK",189,0)
 I "^80^80.1^"'[("^"_FILE_"^") S ERR="Invalid File" G ERR
"RTN","ICDEXLK",190,0)
 S ROOT=$$ROOT^ICDEX(FILE)
"RTN","ICDEXLK",191,0)
 I "^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") S ERR="Invalid Global Root" G ERR
"RTN","ICDEXLK",192,0)
 I $L(ICDXP) D
"RTN","ICDEXLK",193,0)
 . N ICD0,ICD1,ICD2 S ICD0=$TR(ICDXP,"""",""),ICD1=$O(@(ROOT_"""BA"","""_ICD0_""",0)"))
"RTN","ICDEXLK",194,0)
 . S ICD2=$O(@(ROOT_"""BA"","""_ICD0_""","" "")"),-1) I ICD1>0,ICD1=ICD2 S (X,ICDX)="`"_+ICD1
"RTN","ICDEXLK",195,0)
 I $G(ICDX)[";" D
"RTN","ICDEXLK",196,0)
 . N ICD1,ICD2 S ICD1=$P(ICDX,";",1),ICD2=("^"_$P(ICDX,";",2))
"RTN","ICDEXLK",197,0)
 . Q:ICD2'=DIC  Q:ICD1'?1N.N  S:$D(@(ROOT_+ICD1_",0)")) (X,ICDX)="`"_+ICD1
"RTN","ICDEXLK",198,0)
 ; System
"RTN","ICDEXLK",199,0)
 S ICDCSY=0
"RTN","ICDEXLK",200,0)
 S:$L($G(ICDSYS)) ICDCSY=$G(ICDSYS)
"RTN","ICDEXLK",201,0)
 S:'$L($G(ICDSYS))&($L($G(^TMP("ICDEXLK",$J,"ICDSYS")))) ICDCSY=$G(^TMP("ICDEXLK",$J,"ICDSYS"))
"RTN","ICDEXLK",202,0)
 S ICDCSY=$$SYS^ICDEX($G(ICDCSY))
"RTN","ICDEXLK",203,0)
 ; Date
"RTN","ICDEXLK",204,0)
 S:$L($G(ICDVDT)) ICDCDT=$G(ICDVDT)
"RTN","ICDEXLK",205,0)
 S:'$L($G(ICDVDT))&($L($G(^TMP("ICDEXLK",$J,"ICDVDT")))) ICDCDT=$G(^TMP("ICDEXLK",$J,"ICDVDT"))
"RTN","ICDEXLK",206,0)
 ; Format
"RTN","ICDEXLK",207,0)
 S ICDOUT=0 S:$L($G(ICDFMT)) ICDOUT=$G(ICDFMT)
"RTN","ICDEXLK",208,0)
 I $D(DDS) S:$D(ICDFMT) ICDFMT=1 S ICDOUT=1
"RTN","ICDEXLK",209,0)
 S:'$L($G(ICDFMT))&($L($G(^TMP("ICDEXLK",$J,"ICDFMT")))) ICDOUT=$G(^TMP("ICDEXLK",$J,"ICDFMT"))
"RTN","ICDEXLK",210,0)
 S:+ICDOUT'>0 ICDOUT=1 S:+ICDOUT>4 ICDOUT=1
"RTN","ICDEXLK",211,0)
 S:$L($G(ICDFMT))!($L($G(^TMP("ICDEXLK",$J,"ICDFMT")))) ICDISF=1
"RTN","ICDEXLK",212,0)
 ; Versioned Lookup
"RTN","ICDEXLK",213,0)
 S ICDVER=$S($G(ICDCDT)?7N:1,1:0)  S:$G(ICDCDT)'?7N ICDCDT=$$DT^XLFDT
"RTN","ICDEXLK",214,0)
 ; Enforce Business Rule for Date
"RTN","ICDEXLK",215,0)
 I ICDVER'>0 S:$D(^ICDS(+ICDCSY,0)) ICDCDT=$$DTBR^ICDEX(ICDCDT,,+($G(ICDCSY)))
"RTN","ICDEXLK",216,0)
 ; Space Bar Return (passed)
"RTN","ICDEXLK",217,0)
 I $D(ICDX),$G(ICDX)=" ",DIC(0)'["A" D SBR^ICDEXLK2  G:+($G(Y))>0 QUIT K Y
"RTN","ICDEXLK",218,0)
 ; TMP global
"RTN","ICDEXLK",219,0)
 S SUB=$TR(ROOT,"^(","") K ^TMP(SUB,$J)
"RTN","ICDEXLK",220,0)
 ; Save DIC
"RTN","ICDEXLK",221,0)
 S ICDDICA=$G(DIC("A")),ICDDICB=$G(DIC("B")),ICDDICW=$G(DIC("W"))
"RTN","ICDEXLK",222,0)
 S ICDDICS="",ICDDICST=$$DICS($G(DIC("S"))) S:$L(ICDDICST) ICDDICS=ICDDICST
"RTN","ICDEXLK",223,0)
 S ICDDICSS="" I $L($G(DICR(1,31))) D
"RTN","ICDEXLK",224,0)
 . Q  N X S X=$G(DICR(1,31)) D ^DIM S:$D(X) ICDDICSS=X
"RTN","ICDEXLK",225,0)
 S ICDDICN=$G(DIC("?N",FILE)) S:+ICDDICN'>0 ICDDICN=5
"RTN","ICDEXLK",226,0)
 S ICDDIC00=$G(DIC(0)),(ICDDIC0,DIC(0))=$$DIC0^ICDEXLK6($G(DIC(0)))
"RTN","ICDEXLK",227,0)
 K:+($G(ICDISF))>0 DIC("W") K:$D(DDS) DIC("W")
"RTN","ICDEXLK",228,0)
 I $L(ICDX)'>4,ICDX'["." D
"RTN","ICDEXLK",229,0)
 . S:ICDX?3N&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_"."
"RTN","ICDEXLK",230,0)
 . S:$E(ICDX,1)="E"&($E(ICDX,2,4)?3N)&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_"."
"RTN","ICDEXLK",231,0)
 . S:$E(ICDX,1)?1U&($E(ICDX,2,3)?2N)&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_"."
"RTN","ICDEXLK",232,0)
 I ICDX="?",$G(DIC(0))'["A" D  I $L($G(DIE)),$L($G(DIC)),$G(DIE)'=$G(DIC) S Y=-1 W:'$D(DDS) ! Q
"RTN","ICDEXLK",233,0)
 . D INPH^ICDEXLK2(FILE) S ICDX="" S:$G(DIC(0))'["A" DIC(0)=DIC(0)_"A"
"RTN","ICDEXLK",234,0)
 I ICDX="??",$G(DIC(0))'["A" D  I $L($G(DIE)),$L($G(DIC)),$G(DIE)'=$G(DIC) S Y=-1 W:'$D(DDS) ! Q
"RTN","ICDEXLK",235,0)
 . D INPH2^ICDEXLK2(FILE) S ICDX="" S:$G(DIC(0))'["A" DIC(0)=DIC(0)_"A"
"RTN","ICDEXLK",236,0)
LKR ; Lookup Recursive
"RTN","ICDEXLK",237,0)
 ; QUASAR
"RTN","ICDEXLK",238,0)
 I '$D(DIC("S")),$G(DICR(2,1))="^ACK(509850.1," S DIROUT=1,X="^^",ICDX="",Y=-1 G QUIT
"RTN","ICDEXLK",239,0)
 I $D(DICR),+($G(ICDOREV))>0,+($G(ICDOFND))>0,+($G(ICDOSEL))'>0 N ICDDICS S ICDDICS=""
"RTN","ICDEXLK",240,0)
 S FND=0 S:'$L(DIC(0)) DIC(0)="AEM" S ICDREDO=""
"RTN","ICDEXLK",241,0)
 S:$L($G(DIC(0))) DIC(0)=$TR(DIC(0),"CL","")
"RTN","ICDEXLK",242,0)
 I +($G(ICDOREV))>0 D
"RTN","ICDEXLK",243,0)
 . S (ICDOFND,ICDOSEL,ICDOREV)=0 K X S ICDX=""
"RTN","ICDEXLK",244,0)
 I $G(DIC(0))["A" D  I '$L(X),$G(DIC(0))'["T" S X="",ICDOREV=1 G ERR
"RTN","ICDEXLK",245,0)
 . S X=$$INP^ICDEXLK2(FILE,$G(ICDVER),$G(ICDCDT))
"RTN","ICDEXLK",246,0)
 I $D(DTOUT)!($D(DUOUT)) G ERR
"RTN","ICDEXLK",247,0)
 I ($G(DIC(0))["A"),('$L(X)!(X="^")),$G(DIC(0))["T" S X="" K Y G LKR
"RTN","ICDEXLK",248,0)
 I $G(DIC(0))'["A"&($L($G(ICDX))) S X=$G(ICDX)
"RTN","ICDEXLK",249,0)
 I $G(X)["^" S DUOUT="" G ERR
"RTN","ICDEXLK",250,0)
 I '$L($G(X)) G ERR
"RTN","ICDEXLK",251,0)
 S X=$$TM(X),INP=X,INP1=$E(INP,1),INP2=$E(INP,2,245)
"RTN","ICDEXLK",252,0)
 ; Forced IEN
"RTN","ICDEXLK",253,0)
 K Y I INP1="`",INP2?1N.N,+INP2>0 D  G:$L(X)&(+($G(Y))<0) QUIT I +($G(FND))'>0 K X,Y G LKR
"RTN","ICDEXLK",254,0)
 . D IEN^ICDEXLK5 I +FND'>0,$G(DIC(0))["Q" D
"RTN","ICDEXLK",255,0)
 . . W:'$D(DICR(1))&('$D(DIROUT))&('$D(DUOUT))&('$D(DTOUT))&('$D(DDS))&(+($G(ICDOREV))'>0) " ??"
"RTN","ICDEXLK",256,0)
 . . W:$D(DICR(1))&('$D(DDS)) !
"RTN","ICDEXLK",257,0)
 I $D(Y) S:+Y<0 X=INP G QUIT
"RTN","ICDEXLK",258,0)
 ; Lookup X
"RTN","ICDEXLK",259,0)
 I X'?1N.N G:$L($G(X))'>0!($E($G(X))="^")!($G(X)["^^")!($D(DTOUT))!($D(DUOUT)) ERR
"RTN","ICDEXLK",260,0)
 N LOUD S LOUD="" S ICDX=X I +($G(FND))'>0 D
"RTN","ICDEXLK",261,0)
 . S:$L(ICDX)&($L(ICDX)>1) FND=$$LK^ICDEXLK3($G(X),FILE,ICDCDT,ICDCSY,ICDVER,ICDOUT)
"RTN","ICDEXLK",262,0)
 . S:$L(ICDX)&($L(ICDX)'>1) FND=$$CD^ICDEXLK3($G(X),FILE,ICDCDT,ICDCSY,ICDVER,ICDOUT)
"RTN","ICDEXLK",263,0)
 . S:+($G(FND))>0 ICDOFND=+($G(FND)) S:$L($G(ICDX)) X=$G(ICDX)
"RTN","ICDEXLK",264,0)
 I +FND'>0,$G(DIC(0))["Q" W:'$D(DICR(1))&('$D(DIROUT))&('$D(DUOUT))&('$D(DTOUT))&('$D(DDS))&(+($G(ICDOREV))'>0) " ??"
"RTN","ICDEXLK",265,0)
 I +FND'>0,$L(INP),$E(INP,1)'=" ",'$D(DTOUT),'$D(DUOUT),$G(DIC(0))["A",'($G(DIC(0))["N"&(INP?1N.N)) K X,Y G LKR
"RTN","ICDEXLK",266,0)
 S:+FND'>0 X=INP
"RTN","ICDEXLK",267,0)
 ; Check Numeric - DIC(0)["N" and DIC(0)'["E"
"RTN","ICDEXLK",268,0)
 I +$G(ICDOSEL)'>0,$G(DIC(0))["N",INP?1N.N D  G:+($G(Y))>0 QUIT
"RTN","ICDEXLK",269,0)
 . Q:DIC(0)["E"&(+$G(ICDOSEL)'>0)&(+$G(ICDOFND)>0)  K Y N XX
"RTN","ICDEXLK",270,0)
 . I $D(@(ROOT_+INP_",0)")) S FND=1 D  Q
"RTN","ICDEXLK",271,0)
 . . N IEN S IEN=+INP S (FND,ICDOFND,ICDOSEL)=1
"RTN","ICDEXLK",272,0)
 . . S X=$P($G(@(ROOT_+X_",0)")),"^",1)
"RTN","ICDEXLK",273,0)
 . . D Y^ICDEXLK2($G(ROOT),IEN,$G(ICDCDT))
"RTN","ICDEXLK",274,0)
 . I '$D(@(ROOT_+INP_",0)")) D  Q
"RTN","ICDEXLK",275,0)
 . . S X=$S($L($G(INP)):INP,1:$G(X))
"RTN","ICDEXLK",276,0)
 . . S Y="-1^Numeric value not found"
"RTN","ICDEXLK",277,0)
 . S XX=$$LD^ICDEX(FILE,+$G(INP),ICDCDT)
"RTN","ICDEXLK",278,0)
 . I $E(XX,1,2)="-1" D  Q
"RTN","ICDEXLK",279,0)
 . . S Y="-1^Long description not found",X=$G(INP)
"RTN","ICDEXLK",280,0)
 . W:$G(DIC(0))["E"&('$D(DDS)) "   ",XX S X=$G(INP)
"RTN","ICDEXLK",281,0)
 . D Y^ICDEXLK2($G(ROOT),$G(X),$G(ICDCDT))
"RTN","ICDEXLK",282,0)
 . S:+Y>0&(+X'<0) X=XX S:+Y<0 X=INP
"RTN","ICDEXLK",283,0)
 I +FND'>0,$G(DIC(0))["N",X?1N.N,+($G(Y))<0 G ERR
"RTN","ICDEXLK",284,0)
 I +FND'>0,$L($G(ICDX)),$L($G(DIC("S"))),$L($G(DICR(1))),$L($G(DICR(1,1))) K DIC("S") K Y G LKR
"RTN","ICDEXLK",285,0)
 I +FND'>0,$L($G(ICDX)),'$D(DIC("S")),$L($G(DICR(1))),$G(DICR(1))=$G(ICDX),$L($G(DICR(1,1))) D  G QUIT
"RTN","ICDEXLK",286,0)
 . S X=$S($L($G(INP)):INP,1:$G(X)),Y="-1^No matches found"
"RTN","ICDEXLK",287,0)
 I +FND'>0,$G(DIC(0))'["T" D  G QUIT
"RTN","ICDEXLK",288,0)
 . W:$G(DIC(0))["E"&('$L($G(DICR(1))))&('$D(DDS)) !,"  No matches found"
"RTN","ICDEXLK",289,0)
 . S X=$S($L($G(INP)):INP,1:$G(X)),Y="-1^No matches found"
"RTN","ICDEXLK",290,0)
 I +FND'>0,$G(DIC(0))["T" K Y G LKR
"RTN","ICDEXLK",291,0)
 S ICDOUPA=0 D ASK^ICDEXLK2
"RTN","ICDEXLK",292,0)
 I $D(DUOUT),$D(DIROUT) D  G QUIT
"RTN","ICDEXLK",293,0)
 . S (DUOUT,DIRUT)=1,X="^^"
"RTN","ICDEXLK",294,0)
 . S ICDX="",Y=-1
"RTN","ICDEXLK",295,0)
 I +FND=1,$G(ICDOFND)=1,$G(ICDOSEL)=0,$G(ICDOREV)=1,'$D(DICR(1)) D  G:$D(DIROUT)!($G(DIC(0))'["A") QUIT G:DIC(0)["A" LKR
"RTN","ICDEXLK",296,0)
 . S (ICDX,INP1,INP2,ICDOINP,X)="",Y="-1^No selection made"
"RTN","ICDEXLK",297,0)
 I +FND=1,$G(ICDOFND)=1,$G(ICDOSEL)=0,$G(ICDOREV)=1,$D(DICR(1)) D  G:$D(DIROUT)!($G(DIC(0))'["A") QUIT N ICDDICS G:DIC(0)["A" LKR
"RTN","ICDEXLK",298,0)
 . S:$D(DICR("1")) DICR("1")=ICDX S X=ICDX S:$D(DIROUT)!($G(DIC(0))'["A") (ICDX,INP1,INP2,ICDOINP,X)="",Y="-1^No selection made"
"RTN","ICDEXLK",299,0)
 I +FND>1,$G(ICDOSEL)=0,$G(ICDOREV)=1 D  G:$D(DUOUT)!($G(DIC(0))'["A") QUIT G:DIC(0)["A" LKR
"RTN","ICDEXLK",300,0)
 . S X="",Y=-1
"RTN","ICDEXLK",301,0)
 I $G(ICDOUPA)>0,'$D(DICR(1)),'$D(DIE),'$D(DR),'$D(DDS),DIC(0)["A" S (X,ICDX)="" K Y G LKR
"RTN","ICDEXLK",302,0)
 I $D(DUOUT),'$D(DIROUT) S (DUOUT,DIRUT)=1,X="^",ICDX="",Y=-1 D  I '$D(DICR(1)),'$D(DDS) G:+($G(ICDOREV))>0 QUIT G:+($G(ICDOREV))'>0 LKR
"RTN","ICDEXLK",303,0)
 . Q:$D(DICR(1))!($D(DDS))  S:+($G(ICDOREV))>0 (X,ICDX)="^",Y=-1 I +($G(ICDOREV))'>0 S ICDX="" K DUOUT,DIRUT,DIROUT,DTOUT,X,Y
"RTN","ICDEXLK",304,0)
 I ($D(DUOUT)!($D(DIROUT)))&($D(DICR(1))) D  G ERR
"RTN","ICDEXLK",305,0)
 . S:$D(DUOUT) X="^",DUOUT=1 S:$D(DIROUT) X="^^",DUOUT=1,DIROUT=1 W:'$D(DDS) !
"RTN","ICDEXLK",306,0)
 I +($G(FND))>1,+($G(ICDOFND))>1,+($G(ICDOSEL))=0,+($G(ICDOREV))=1,$D(DICR(1)),'$D(DIC("S")) D  G QUIT
"RTN","ICDEXLK",307,0)
 . S (ICDOFND,ICDOSEL,ICDOREV)=0,Y=-1,(X,ICDX,ICDOINP,DICR("1"))=""
"RTN","ICDEXLK",308,0)
 I $L($G(ICDREDO)) D  G LKR
"RTN","ICDEXLK",309,0)
 . S DIC(0)=$TR(DIC(0),"A","") S:'$L(DIC(0)) DIC(0)="EMQ" K DIC("S")
"RTN","ICDEXLK",310,0)
 . S (ICDX,X,INP)=ICDREDO K Y
"RTN","ICDEXLK",311,0)
 ; If found, all reviewed and no selection made
"RTN","ICDEXLK",312,0)
 I +($G(ICDOFND))>0,+($G(ICDOSEL))'>0,+($G(ICDOREV))>0 D  G:$G(DIC(0))'["A" ERR  G:$G(DIC(0))["A" LKR
"RTN","ICDEXLK",313,0)
 . K ICDX,Y,INP,INP1,INP2,KEY,^TMP(SUB,$J),X S (FND,ICDOFND,ICDOSEL,ICDOREV)=0 S:$D(DICR("1")) DICR("1")=""
"RTN","ICDEXLK",314,0)
 ; If found, not all are reviewed and no selection made, single up arrow
"RTN","ICDEXLK",315,0)
 I +($G(ICDOFND))>0,+($G(ICDOSEL))'>0,+($G(ICDOREV))'>0,$D(DUOUT),'$D(DIROUT) D  G:$G(DIC(0))'["A" ERR  G:$G(DIC(0))["A" LKR
"RTN","ICDEXLK",316,0)
 . K ICDX,Y,INP,INP1,INP2,KEY,^TMP(SUB,$J),X S (FND,ICDOFND,ICDOSEL,ICDOREV)=0 S:$D(DICR("1")) DICR("1")=""
"RTN","ICDEXLK",317,0)
 ; If found, no selection made, no up arrow and no timeout
"RTN","ICDEXLK",318,0)
 I +($G(ICDOFND))>0,+($G(ICDOSEL))'>0,'$D(DUOUT),'$D(DTOUT),$G(DIC(0))["E" G LKR
"RTN","ICDEXLK",319,0)
 G:+($G(Y))'>0&($D(DUOUT))&('$D(DIROUT)) LKR
"RTN","ICDEXLK",320,0)
 G:+($G(ICDOSEL))'>0 ERR
"RTN","ICDEXLK",321,0)
 G:+($G(Y))'>0&('$D(DUOUT))&('$D(DTOUT)) LKR
"RTN","ICDEXLK",322,0)
 G:+($G(Y))'>0&($D(DUOUT))&('$D(DIROUT)) LKR
"RTN","ICDEXLK",323,0)
 G:+($G(Y))'>0 ERR
"RTN","ICDEXLK",324,0)
 D RED,UDIC
"RTN","ICDEXLK",325,0)
 Q
"RTN","ICDEXLK",326,0)
LKQ ;   Quit
"RTN","ICDEXLK",327,0)
 Q
"RTN","ICDEXLK",328,0)
ERR ;   Quit On Error
"RTN","ICDEXLK",329,0)
 N ICDX,ICDY,ICDE S ICDY=$G(Y),ICDX=$G(X) K X,Y S Y=-1
"RTN","ICDEXLK",330,0)
 S:$L($P($G(ICDY),"^",2)) Y=Y_"^"_$P($G(ICDY),"^",2)
"RTN","ICDEXLK",331,0)
 I $D(DTOUT),$G(DIC(0))["E",'$D(DDS) W !!,?2,"Try again later" K ERR
"RTN","ICDEXLK",332,0)
 I $D(DUOUT),$G(DIC(0))["E" K ERR
"RTN","ICDEXLK",333,0)
 I '$D(DUOUT),+($G(ICDOFND)>0),+($G(ICDOSEL)'>0),$G(DIC(0))["E" K ERR
"RTN","ICDEXLK",334,0)
 I $L($G(ERR)),$G(DIC(0))["E",'$D(DDS) W !!,?2,$G(ERR)
"RTN","ICDEXLK",335,0)
 S:$E(ICDY,1,2)="-1"&($L($P(ICDY,"^",2))) Y=ICDY
"RTN","ICDEXLK",336,0)
 S X=ICDX I $D(DTOUT) S X="",Y="-1^Search timed out"
"RTN","ICDEXLK",337,0)
 I Y="-1",+($G(ICDOFND)>0),+($G(ICDOSEL)'>0) S Y="-1^No Selection Made"
"RTN","ICDEXLK",338,0)
 N XX S XX=$G(X) S X="" S:XX="^"!(XX="^^") X=XX D QUIT
"RTN","ICDEXLK",339,0)
 Q
"RTN","ICDEXLK",340,0)
QUIT ;   Quit without Error
"RTN","ICDEXLK",341,0)
 N ICDUA S ICDUA=$$UA($G(ICDX))
"RTN","ICDEXLK",342,0)
 I ICDUA="^" S X=ICDUA,Y="-1^Search aborted (up-arrow detected)"
"RTN","ICDEXLK",343,0)
 I ICDUA="^^" S X=ICDUA,Y="-1^Search aborted (up-arrow detected)"
"RTN","ICDEXLK",344,0)
 S:ICDUA["^"&(+($G(ICDOUPA))=2) Y="-1^Search aborted (doupble up-arrow detected)"
"RTN","ICDEXLK",345,0)
 I +Y>0 D Y^ICDEXLK2($G(ROOT),+Y,$G(ICDCDT))
"RTN","ICDEXLK",346,0)
 I $P($G(X),"`",2)=$P($G(Y),"^",1),$L($P($G(Y),"^",2)) S (ICDX,X)=$P($G(Y),"^",2)
"RTN","ICDEXLK",347,0)
 D UDIC I $D(DDS) S:$L($G(ICDOINP))&(+Y'>0) X=$G(ICDOINP)
"RTN","ICDEXLK",348,0)
 S:$L($G(ICDX)) X=$G(ICDX) S X=$G(X) D RED
"RTN","ICDEXLK",349,0)
 Q
"RTN","ICDEXLK",350,0)
UDIC ;   Undo DIC
"RTN","ICDEXLK",351,0)
 S:$L($G(ICDDICW)) DIC("W")=$G(ICDDICW)
"RTN","ICDEXLK",352,0)
 S:$L($G(ICDDICA)) DIC("A")=$G(ICDDICA)
"RTN","ICDEXLK",353,0)
 S:$L($G(ICDDICB)) DIC("B")=$G(ICDDICB)
"RTN","ICDEXLK",354,0)
 S:$L($G(ICDDICS)) DIC("S")=$G(ICDDICS)
"RTN","ICDEXLK",355,0)
 S:$L($G(ICDDIC0)) DIC(0)=$G(ICDDIC0)
"RTN","ICDEXLK",356,0)
 S:$L($G(ICDDIC00)) DIC(0)=$G(ICDDIC00)
"RTN","ICDEXLK",357,0)
 Q
"RTN","ICDEXLK",358,0)
DIE ;   Set for DIE call
"RTN","ICDEXLK",359,0)
 Q:'$L($G(DIE))  S:'$L($G(DIC("A")))&($L($G(DIP))) DIC("A")=$G(DIP)
"RTN","ICDEXLK",360,0)
 S:$L($G(DIC("A")))&($G(DIC("A"))'[": ") DIC("A")=$G(DIC("A"))_":  "
"RTN","ICDEXLK",361,0)
 N DIE,DIP,DZ,X1
"RTN","ICDEXLK",362,0)
 Q
"RTN","ICDEXLK",363,0)
DICS(ICDS) ;   Check DIC("S")
"RTN","ICDEXLK",364,0)
 N ICDT1,ICDT2,ICDTS S ICDT1=$D(X),ICDT2=$G(X) Q:'$L($G(ICDS)) ""
"RTN","ICDEXLK",365,0)
 S (ICDTS,X)=$G(ICDS) D ^DIM I '$D(X) S:ICDT1>0 X=$G(ICDT2) Q ""
"RTN","ICDEXLK",366,0)
 S ICDS=$G(ICDTS) S:ICDT1>0 X=$G(ICDT2) S:$L($G(ICDX)) X=$G(ICDX)
"RTN","ICDEXLK",367,0)
 Q ICDS
"RTN","ICDEXLK",368,0)
RED ;   Re-Display
"RTN","ICDEXLK",369,0)
 Q:+($G(Y))'>0  Q:'$L($P(Y,"^",2))  Q:$G(FILE)'>0  Q:$D(DDS)  Q:$G(DIC(0))'["E"
"RTN","ICDEXLK",370,0)
 Q:$G(DICR(2,1))="^ACK(509850.1,"
"RTN","ICDEXLK",371,0)
 N CODE,EXP,CC,STA S CODE=$P(Y,"^",2) S CODE=CODE_$J(" ",(10-$L(CODE)))
"RTN","ICDEXLK",372,0)
 S CC="" S:FILE=80 CC=$$VCC^ICDEX(+Y,$G(ICDCDT))
"RTN","ICDEXLK",373,0)
 S CC=$S(CC="1":"(CC)",CC="2":"(Major CC)",1:"")
"RTN","ICDEXLK",374,0)
 S STA=$O(@(ROOT_+Y_",66,""B"","_(+($G(ICDCDT))+.000001)_")"),-1)
"RTN","ICDEXLK",375,0)
 S STA=$O(@(ROOT_+Y_",66,""B"","_+STA_","" "")"),-1)
"RTN","ICDEXLK",376,0)
 S STA=$P($G(@(ROOT_+Y_",66,"_+STA_",0)")),"^",2)
"RTN","ICDEXLK",377,0)
 S STA=$S($G(STA)?1N&(+$G(STA)'>0):" (Inactive)",$G(STA)'?1N&(+$G(STA)'>0):" (Pending)",1:"")
"RTN","ICDEXLK",378,0)
 S:$G(ICDFMT)=2!($G(ICDFMT)=4) EXP=$$VLT^ICDEX(FILE,+Y,$G(ICDCDT))
"RTN","ICDEXLK",379,0)
 S:$G(ICDFMT)=1!($G(ICDFMT)=3)!($G(ICDFMT)="") EXP=$$VST^ICDEX(FILE,+Y,$G(ICDCDT))
"RTN","ICDEXLK",380,0)
 W:$L(CODE)&($L(EXP))&($D(DPP(1))) !,?5 W:$L(CODE)&($L(EXP)) "   ",$G(CODE),$G(EXP),$G(CC),$G(STA)
"RTN","ICDEXLK",381,0)
 Q
"RTN","ICDEXLK",382,0)
UA(X) ;   Up Arrow
"RTN","ICDEXLK",383,0)
 Q:($D(DUOUT)!($D(DIROUT)))&($D(DICR(1))) "^^"
"RTN","ICDEXLK",384,0)
 K:$G(ICDOUPA)>0&($G(ICDOUPA)'>1) DIROUT
"RTN","ICDEXLK",385,0)
 Q:$D(DUOUT)&('$D(DIROUT)) "^" Q:$D(DUOUT)&($D(DIROUT)) "^^"
"RTN","ICDEXLK",386,0)
 Q:$G(INP)["^"&($G(INP)'["^^") "^" Q:$G(INP)["^"&($G(INP)["^^") "^^"
"RTN","ICDEXLK",387,0)
 Q:$G(X)["^"&($G(X)'["^^") "^" Q:$G(X)["^"&($G(X)["^^") "^^"
"RTN","ICDEXLK",388,0)
 Q X
"RTN","ICDEXLK",389,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK",390,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK",391,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK",392,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK",393,0)
 S X=$TR(X,"""","")
"RTN","ICDEXLK",394,0)
 Q X
"RTN","ICDEXLK",395,0)
CLR ; Clear Environment
"RTN","ICDEXLK",396,0)
 K DDS,DICR N ICDTEST,DPP,DR
"RTN","ICDEXLK",397,0)
 Q
"RTN","ICDEXLK2")
0^53^B168472768
"RTN","ICDEXLK2",1,0)
ICDEXLK2 ;SLC/KER - ICD Extractor - Lookup, Ask ;04/21/2014
"RTN","ICDEXLK2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK2",3,0)
 ;               
"RTN","ICDEXLK2",4,0)
 ; Global Variables
"RTN","ICDEXLK2",5,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK2",6,0)
 ;               
"RTN","ICDEXLK2",7,0)
 ; External References
"RTN","ICDEXLK2",8,0)
 ;    CLRMSG^DDS          ICR   5846
"RTN","ICDEXLK2",9,0)
 ;    HLP^DDSMSG          ICR   5847
"RTN","ICDEXLK2",10,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXLK2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK2",12,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXLK2",13,0)
 ;               
"RTN","ICDEXLK2",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDEXLK2",15,0)
 ;     DDS,DICR,FND,ICDCDT,ICDDIC0,ICDDICA,
"RTN","ICDEXLK2",16,0)
 ;     ICDDICB,ICDDICN,ICDISF,ICDOFND,ICDOREV,
"RTN","ICDEXLK2",17,0)
 ;     ICDOSEL,ICDOUT,ICDREDO,ICDX
"RTN","ICDEXLK2",18,0)
 ;     
"RTN","ICDEXLK2",19,0)
 Q
"RTN","ICDEXLK2",20,0)
ASK ; Ask for Selection
"RTN","ICDEXLK2",21,0)
 K X,Y N ANS S FND=+($G(FND)) Q:+FND'>0
"RTN","ICDEXLK2",22,0)
 I FND=1,DIC(0)'["E" D  Q
"RTN","ICDEXLK2",23,0)
 . K X,Y D X(1,SUB) S (ICDOFND,ICDOSEL,ICDOREV)=1
"RTN","ICDEXLK2",24,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",1))),$G(ICDCDT))
"RTN","ICDEXLK2",25,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",26,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",27,0)
 I FND>1,DIC(0)'["E" D  Q
"RTN","ICDEXLK2",28,0)
 . K Y S Y="-1^Selection not made" S ICDOSEL=0
"RTN","ICDEXLK2",29,0)
 S:+FND=1 ANS=$$ONE S:+FND>1 ANS=$$MUL S ICDOSEL=0
"RTN","ICDEXLK2",30,0)
 I ANS>0 D
"RTN","ICDEXLK2",31,0)
 . D X(+ANS,SUB) S ICDOSEL=1
"RTN","ICDEXLK2",32,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",+ANS))),$G(ICDCDT))
"RTN","ICDEXLK2",33,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",34,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",35,0)
 I ANS'>0 K INP,X,Y,^TMP(SUB,$J)
"RTN","ICDEXLK2",36,0)
 Q
"RTN","ICDEXLK2",37,0)
SBR ;   Space-Bar Return DIC(0) not contain "A"
"RTN","ICDEXLK2",38,0)
 N SBI,SUB,OUT,ANS,SBS K Y S Y=-1 Q:'$L($G(ROOT))  Q:ROOT="^"  Q:'$L($G(FILE))
"RTN","ICDEXLK2",39,0)
 S SBI=$$RET^ICDEXLK6($G(FILE)),SUB=$TR($G(ROOT),"^(","") K:$L(SUB) ^TMP(SUB,$J) Q:+SBI'>0
"RTN","ICDEXLK2",40,0)
 S SBS=$P($G(@(ROOT_+SBI_",1)")),"^",1) Q:+SBS'>0  Q:+SBI>0&(+SBS>0)&(+($G(ICDSYS))>0)&(+($G(ICDSYS))'=+SBS)
"RTN","ICDEXLK2",41,0)
 D FND^ICDEXLK5($G(ROOT),+SBI,$G(ICDCDT),$G(ICDSYS),$G(ICDVER),0,$G(ICDOUT))
"RTN","ICDEXLK2",42,0)
 D SEL^ICDEXLK5(ROOT,0) Q:'$D(^TMP(SUB,$J,"SEL",1))  S ANS=$$ONE I ANS>0 D
"RTN","ICDEXLK2",43,0)
 . D X(1,SUB) S (ICDOFND,ICDOSEL,ICDOREV)=1
"RTN","ICDEXLK2",44,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",1))),$G(ICDCDT))
"RTN","ICDEXLK2",45,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",46,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",47,0)
 S:+Y>0&($L($P(Y,"^",2))) X=$P(Y,"^",2)
"RTN","ICDEXLK2",48,0)
 I ANS'>0 K INP,X,Y,^TMP(SUB,$J)
"RTN","ICDEXLK2",49,0)
 Q
"RTN","ICDEXLK2",50,0)
ONE(X) ;   One Entry Found
"RTN","ICDEXLK2",51,0)
 S:'$D(DDS) X=$$ONERS S:$D(DDS) X=$$ONESM S ICDOREV=1
"RTN","ICDEXLK2",52,0)
 Q X
"RTN","ICDEXLK2",53,0)
ONERS(X) ;     One Entry Found           Roll and Scroll
"RTN","ICDEXLK2",54,0)
 N DIR,IEN,LN,LN2,ICDI,TEXT,TXT,TX,CT,Y S ICDOREV=1
"RTN","ICDEXLK2",55,0)
 S TEXT=$G(^TMP(SUB,$J,"SEL",1)) Q:$G(DIC(0))'["E" 1
"RTN","ICDEXLK2",56,0)
 S IEN=+TEXT,TEXT=$P(TEXT,U,2),TXT(1)=TEXT
"RTN","ICDEXLK2",57,0)
 I $G(ICDFMT)=1!($G(ICDFMT)=2) D
"RTN","ICDEXLK2",58,0)
 . K TX S TXT(1)=TEXT D PAR^ICDEX(.TXT,64) K TX2 F ICDI=2:1:8 D
"RTN","ICDEXLK2",59,0)
 . . S:$L($G(TXT(ICDI))) TX2(1)=$G(TX2(1))_" "_$G(TXT(ICDI))
"RTN","ICDEXLK2",60,0)
 . S TX(1)=$G(TXT(1)) I $D(TX2) D
"RTN","ICDEXLK2",61,0)
 . . N SP S SP="          " D PAR^ICDEX(.TX2,54) S ICDI=0
"RTN","ICDEXLK2",62,0)
 . . F  S ICDI=$O(TX2(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",63,0)
 . . . N CT Q:'$L($G(TX2(ICDI)))
"RTN","ICDEXLK2",64,0)
 . . . S CT=$O(TX(" "),-1)+1 S TX(CT)=SP_$G(TX2(ICDI))
"RTN","ICDEXLK2",65,0)
 I $G(ICDFMT)'=1&($G(ICDFMT)'=2) D
"RTN","ICDEXLK2",66,0)
 . K TX N ICDI D PAR^ICDEX(.TXT,64) S ICDI=0 F  S ICDI=$O(TXT(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",67,0)
 . . N CT S CT=$O(TX(" "),-1)+1 S TX(CT)=$G(TXT(ICDI))
"RTN","ICDEXLK2",68,0)
 S DIR("A",1)=" One match found",DIR("A",2)=" "
"RTN","ICDEXLK2",69,0)
 S ICDI=0 F  S ICDI=$O(TX(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",70,0)
 . Q:'$L($G(TX(ICDI)))  N CT S CT=$O(DIR("A"," "),-1)+1
"RTN","ICDEXLK2",71,0)
 . S DIR("A",CT)=("     "_$G(TX(ICDI)))
"RTN","ICDEXLK2",72,0)
 S CT=$O(DIR("A"," "),-1)+1,DIR("A",CT)=" ",DIR("A")="   OK?  "
"RTN","ICDEXLK2",73,0)
 S DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","ICDEXLK2",74,0)
 I $G(DICR(2,1))="^ACK(509850.1,",$G(DICR(1,1))["^ACK(509850.6," N ICDQUASR S ICDQUASR=DICR(1,1)_$C(34)_"B"_$C(34)_","_IEN_")" I $D(@ICDQUASR) D  Q 1
"RTN","ICDEXLK2",75,0)
 . S LN=$O(DIR("A"," "),-1) N LN2 F LN2=1:1:(LN-1) W !,DIR("A",LN2)
"RTN","ICDEXLK2",76,0)
 K DIROUT,DIRUT,DUOUT,DTOUT D ^DIR
"RTN","ICDEXLK2",77,0)
 S ICDOUPA=$S(X["^"&(X'["^^"):1,X["^^":2,1:0)
"RTN","ICDEXLK2",78,0)
 S:X["^" ICDOUPA=1 S:X["^" ICDOUPA=1
"RTN","ICDEXLK2",79,0)
 I $L($G(ICDX)),$L($G(DIC("S"))),$L($G(DICR(1))),$L($G(DICR(1,1))),+Y'>0 Q -1
"RTN","ICDEXLK2",80,0)
 Q:+Y>0 1  Q:X["^^"!($D(DTOUT)) "^^"
"RTN","ICDEXLK2",81,0)
 Q -1
"RTN","ICDEXLK2",82,0)
ONESM(X) ;     One Entry Found           ScreenMan
"RTN","ICDEXLK2",83,0)
 N ANS,CODE,ICDMENU,IEN,ITEM,TEXT,VST S ICDOREV=1
"RTN","ICDEXLK2",84,0)
 S ITEM=$G(^TMP(SUB,$J,"SEL",1)) Q:'$L(ITEM) -1
"RTN","ICDEXLK2",85,0)
 S IEN=+ITEM,TEXT=$P(ITEM,U,2) S CODE=$$CODEC^ICDEX(+($G(FILE)),IEN)
"RTN","ICDEXLK2",86,0)
 S VST=$$VST^ICDEX(+($G(FILE)),IEN,ICDCDT)
"RTN","ICDEXLK2",87,0)
 I $L(CODE),$L(VST) S TEXT=CODE,TEXT=TEXT_$J(" ",(9-$L(TEXT)))_VST
"RTN","ICDEXLK2",88,0)
 Q:'$L(TEXT) -1 S ICDMENU(1)=("     "_$G(TEXT)),ICDMENU(2)="   OK? Yes//  "
"RTN","ICDEXLK2",89,0)
 S ICDMENU="ICDMENU" K DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ICDEXLK2",90,0)
 D HLP^DDSMSG(.ICDMENU) S ICDOREV=1 R ANS:300 S:'$L(ANS) ANS="Y" D CLRMSG^DDS
"RTN","ICDEXLK2",91,0)
 I '$T S X="^^",DTOUT=1,DIRUT=1 Q X
"RTN","ICDEXLK2",92,0)
 I ANS["^",ANS'["^^" S X="^",DUOUT=1,DIRUT=1 Q X
"RTN","ICDEXLK2",93,0)
 I ANS["^^" S X="^^",DIROUT=1,DUOUT=1,DIRUT=1 Q X
"RTN","ICDEXLK2",94,0)
 S ANS=$E(ANS,1) S X=$S("^Y^y^"[("^"_ANS_"^"):1,1:-1)
"RTN","ICDEXLK2",95,0)
 Q X
"RTN","ICDEXLK2",96,0)
MUL(X) ;   Multiple Entries Found
"RTN","ICDEXLK2",97,0)
 S:'$D(DDS) X=$$MULRS S:$D(DDS) X=$$MULSM
"RTN","ICDEXLK2",98,0)
 Q X
"RTN","ICDEXLK2",99,0)
MULRS(X) ;     Multiple Entries Found    Roll and Scroll
"RTN","ICDEXLK2",100,0)
 Q:+($G(EXIT))>0 "^^"  N ENT,EXIT,IEN,ITEM,LEN,MAX,ROOT,SEL,TEXT,TOT,Y
"RTN","ICDEXLK2",101,0)
 Q:$G(DIC(0))'["E" -1  S ROOT=$G(DIC),LEN=+($G(ICDDICN)) S:+LEN'>0 LEN=5
"RTN","ICDEXLK2",102,0)
 S (MAX,ENT,SEL,EXIT)=0,U="^",TOT=$G(^TMP(SUB,$J,"SEL",0))
"RTN","ICDEXLK2",103,0)
 S SEL=0 G:+TOT=0 MULQ W:+TOT>1 !!," ",TOT," matches found"
"RTN","ICDEXLK2",104,0)
 F ENT=1:1:TOT Q:((SEL>0)&(SEL<ENT+1))  Q:EXIT  D  Q:EXIT
"RTN","ICDEXLK2",105,0)
 . N ITEM,IEN,TEXT S ITEM=$G(^TMP(SUB,$J,"SEL",ENT))
"RTN","ICDEXLK2",106,0)
 . S IEN=+ITEM,TEXT=$P(ITEM,U,2) Q:'$L(TEXT)
"RTN","ICDEXLK2",107,0)
 . S MAX=ENT W:ENT#LEN=1 ! D MULRSW S:ENT=TOT ICDOREV=1
"RTN","ICDEXLK2",108,0)
 . W:ENT#LEN=0 ! S:ENT#LEN=0 SEL=$$MULRSS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",109,0)
 I ENT#LEN'=0,+SEL=0 W ! S SEL=$$MULRSS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",110,0)
 G MULQ
"RTN","ICDEXLK2",111,0)
 Q X
"RTN","ICDEXLK2",112,0)
MULRSW ;       Write Multiple          Roll and Scroll
"RTN","ICDEXLK2",113,0)
 Q:+($G(IEN))'>0  Q:'$L($G(ROOT))  Q:'$L($G(TEXT))
"RTN","ICDEXLK2",114,0)
 N ICDI,IND,NR,TAB,TX2,TXT,Y,RT S (TAB,IND)=8
"RTN","ICDEXLK2",115,0)
 S RT=$$ROOT^ICDEX(ROOT)
"RTN","ICDEXLK2",116,0)
 S:+($G(ICDOUT))<3 IND=18 W !,$J(ENT,5),".",?TAB
"RTN","ICDEXLK2",117,0)
 I +($G(ICDISF))'>0,$L($G(DIC("W"))) D  Q
"RTN","ICDEXLK2",118,0)
 . N Y,NR D Y(ROOT,IEN,ICDCDT)
"RTN","ICDEXLK2",119,0)
 . S NR=$G(@(RT_+IEN_",0)"))
"RTN","ICDEXLK2",120,0)
 . W $P(NR,"^",1),"  " X DIC("W") Q
"RTN","ICDEXLK2",121,0)
 I +($G(ICDISF))'>0,$D(DIC("W")),DIC("W")="" D  Q
"RTN","ICDEXLK2",122,0)
 . W $P($G(@(RT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK2",123,0)
 I +($G(ICDOUT))<3 D  Q
"RTN","ICDEXLK2",124,0)
 . N ICDI S TXT(1)=TEXT D PAR^ICDEX(.TXT,64) K TX2 F ICDI=2:1:8 D
"RTN","ICDEXLK2",125,0)
 . . S:$L($G(TXT(ICDI))) TX2(1)=$G(TX2(1))_" "_$G(TXT(ICDI))
"RTN","ICDEXLK2",126,0)
 . W $G(TXT(1)) I $D(TX2) D
"RTN","ICDEXLK2",127,0)
 . . D PAR^ICDEX(.TX2,54) S ICDI=0
"RTN","ICDEXLK2",128,0)
 . . F  S ICDI=$O(TX2(ICDI)) Q:+ICDI'>0  W !,?IND,$G(TX2(ICDI))
"RTN","ICDEXLK2",129,0)
 S TXT(1)=TEXT
"RTN","ICDEXLK2",130,0)
 D PAR^ICDEX(.TXT,64) S ICDI=0 F  S ICDI=$O(TXT(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",131,0)
 . Q:'$L($G(TXT(ICDI)))  W:ICDI>1 ! W ?IND,$G(TXT(ICDI))
"RTN","ICDEXLK2",132,0)
 Q
"RTN","ICDEXLK2",133,0)
MULRSS(LEX,LS) ;       Select Multiple         Roll and Scroll
"RTN","ICDEXLK2",134,0)
 Q:+($G(EXIT))>0 "^^"  N DIR,DIRB,HLP,LAST,MAX,NEXT,RAN,X,Y
"RTN","ICDEXLK2",135,0)
 S MAX=+($G(LEX)),LAST=+($G(LS)) Q:MAX=0 -1
"RTN","ICDEXLK2",136,0)
 S RAN=" Select 1-"_MAX_":  ",NEXT=$O(^TMP(SUB,$J,"SEL",+LAST))
"RTN","ICDEXLK2",137,0)
 S:+NEXT>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or"_RAN
"RTN","ICDEXLK2",138,0)
 S:+NEXT'>0 DIR("A")=RAN
"RTN","ICDEXLK2",139,0)
 S HLP="    Answer must be from 1 to "_MAX_", or <Return> to continue"
"RTN","ICDEXLK2",140,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","ICDEXLK2",141,0)
 S (DIR("?"),DIR("??"))="^D MULRSSH^ICDEXLK2"
"RTN","ICDEXLK2",142,0)
 S DIR(0)="NAO^1:"_MAX_":0" K DIROUT,DIRUT,DUOUT,DTOUT D ^DIR
"RTN","ICDEXLK2",143,0)
 S ICDOUPA=$S(X["^"&(X'["^^"):1,X["^^":2,1:0)
"RTN","ICDEXLK2",144,0)
 S:X["^"&(LS=+($G(TOT))) (X,Y)="^",DIROUT=1,DIRUT=1,DUOUT=1
"RTN","ICDEXLK2",145,0)
 S:X["^^"&(LS=+($G(TOT))) (X,Y)="^^",DIROUT=1,DIRUT=1,DUOUT=1
"RTN","ICDEXLK2",146,0)
 S:X["^"&(X'["^^") X="^",DUOUT=1,DIRUT=1,(X,Y)="^"
"RTN","ICDEXLK2",147,0)
 S:X["^^"!($D(DTOUT)) EXIT=1,(X,Y)="^^"
"RTN","ICDEXLK2",148,0)
 S LEX=+Y S:$D(DTOUT)!(X[U) LEX=U
"RTN","ICDEXLK2",149,0)
 Q LEX
"RTN","ICDEXLK2",150,0)
MULRSSH ;       Select Multiple Help    Roll and Scroll
"RTN","ICDEXLK2",151,0)
 I $L($G(HLP)) W !,$G(HLP) Q
"RTN","ICDEXLK2",152,0)
 Q
"RTN","ICDEXLK2",153,0)
MULSM(X) ;     Multiple Entries Found    ScreenMan
"RTN","ICDEXLK2",154,0)
 Q:+($G(EXIT))>0 "^^"  N CODE,CTR,ENT,EXIT,ICDMENU,IEN,ITEM,LEN
"RTN","ICDEXLK2",155,0)
 N MAX,ROOT,SEL,TEXT,TOT,VST,Y S ROOT=$G(DIC),(MAX,ENT,SEL,EXIT)=0
"RTN","ICDEXLK2",156,0)
 S U="^",LEN=3,TOT=$G(^TMP(SUB,$J,"SEL",0)),SEL=0 G:+TOT=0 MULQ
"RTN","ICDEXLK2",157,0)
 S CTR=0 F ENT=1:1:TOT Q:((SEL>0)&(SEL<ENT+1))  Q:EXIT  D  Q:EXIT
"RTN","ICDEXLK2",158,0)
 . N ITEM,IEN,TEXT,CODE,VST S ITEM=$G(^TMP(SUB,$J,"SEL",ENT))
"RTN","ICDEXLK2",159,0)
 . S IEN=+ITEM,TEXT=$P(ITEM,U,2) S CODE=$$CODEC^ICDEX(+($G(FILE)),IEN)
"RTN","ICDEXLK2",160,0)
 . S VST=$$VST^ICDEX(+($G(FILE)),IEN,ICDCDT)
"RTN","ICDEXLK2",161,0)
 . I $L(CODE),$L(VST) S TEXT=CODE,TEXT=TEXT_$J(" ",(9-$L(TEXT)))_VST
"RTN","ICDEXLK2",162,0)
 . Q:'$L(TEXT)  S MAX=ENT D MULSMW S:ENT=TOT ICDOREV=1
"RTN","ICDEXLK2",163,0)
 . S:ENT#LEN=0 SEL=$$MULSMS(MAX,ENT)
"RTN","ICDEXLK2",164,0)
 . S:SEL["^" (DUOUT,DIROUT,EXIT)=1
"RTN","ICDEXLK2",165,0)
 K:$D(DUOUT) ICDMENU
"RTN","ICDEXLK2",166,0)
 I ENT#LEN'=0,+SEL=0,'EXIT D
"RTN","ICDEXLK2",167,0)
 . Q:$G(DUOUT)>0  Q:$G(DIROUT)>0
"RTN","ICDEXLK2",168,0)
 . S SEL=$$MULSMS(MAX,ENT)
"RTN","ICDEXLK2",169,0)
 . S:SEL["^" (DUOUT,DIROUT,EXIT)=1
"RTN","ICDEXLK2",170,0)
 I EXIT>0 D  G MULQ
"RTN","ICDEXLK2",171,0)
 . K ICDMENU S:$L($G(DICR("1"))) DICR("1")="^^" S:$L($G(ICDOINP)) ICDOINP="^^"
"RTN","ICDEXLK2",172,0)
 . ;D CLRMSG^DDS
"RTN","ICDEXLK2",173,0)
 D CLRMSG^DDS
"RTN","ICDEXLK2",174,0)
 G MULQ
"RTN","ICDEXLK2",175,0)
MULSMW ;       Write Multiple          ScreenMan
"RTN","ICDEXLK2",176,0)
 Q:+($G(ENT))'>0  Q:'$L($G(TEXT))  N CTR S CTR=$O(ICDMENU(" "),-1)+1
"RTN","ICDEXLK2",177,0)
 S ICDMENU(CTR)=$J(ENT,3)_"."_"  "_$G(TEXT)
"RTN","ICDEXLK2",178,0)
 Q
"RTN","ICDEXLK2",179,0)
MULSMS(LEX,LS) ;       Select Multiple         ScreenMan
"RTN","ICDEXLK2",180,0)
 Q:+($G(EXIT))>0 "^^"  N ANS,CTR,LAST,MAX,PMT,X Q:'$D(ICDMENU)
"RTN","ICDEXLK2",181,0)
 S MAX=+($G(LEX)),LAST=+($G(LS)) Q:MAX=0 -1
"RTN","ICDEXLK2",182,0)
 S PMT=" Select 1-"_MAX_", <RETURN> for more or '^' to exit:  "
"RTN","ICDEXLK2",183,0)
 S CTR=$O(ICDMENU(" "),-1)+1,ICDMENU(CTR)=PMT
"RTN","ICDEXLK2",184,0)
 S ICDMENU="ICDMENU" D HLP^DDSMSG(.ICDMENU)
"RTN","ICDEXLK2",185,0)
 K ICDMENU R ANS:300 D CLRMSG^DDS S X=""
"RTN","ICDEXLK2",186,0)
 I '$T S X="^^",DTOUT=1,DIRUT=1 Q X
"RTN","ICDEXLK2",187,0)
 I ANS["^",ANS'["^^" S X="^",DUOUT=1 Q X
"RTN","ICDEXLK2",188,0)
 I ANS["^^" S X="^^",DIROUT=1,DUOUT=1,DIRUT=1 Q X
"RTN","ICDEXLK2",189,0)
 S ANS=+ANS Q:ANS'>0 ""  Q:ANS>MAX ""  S X=ANS
"RTN","ICDEXLK2",190,0)
 Q X
"RTN","ICDEXLK2",191,0)
MULQ ;     Quit Multiple
"RTN","ICDEXLK2",192,0)
 S X=+($G(SEL)) Q:X'>0 -1
"RTN","ICDEXLK2",193,0)
 Q X
"RTN","ICDEXLK2",194,0)
 ;
"RTN","ICDEXLK2",195,0)
INP(X,VER,CDT) ; Get User Input
"RTN","ICDEXLK2",196,0)
 Q:$G(DIC(0))'["A" ""  N DIR,DIRA,DIRB,SBR,SBT,FILE,ROOT
"RTN","ICDEXLK2",197,0)
 S VER=+($G(VER)),CDT=+($G(CDT))
"RTN","ICDEXLK2",198,0)
 S FILE=$G(X) Q:"^80^80.1^"'[("^"_FILE_"^") ""  S ROOT=$$ROOT^ICDEX(FILE)
"RTN","ICDEXLK2",199,0)
 S:$L($G(ICDDICB)) DIRB=ICDDICB S:$L($G(ICDDICA)) DIRA=ICDDICA
"RTN","ICDEXLK2",200,0)
 S:'$L($G(DIRA))&(FILE=80) DIRA=" Select ICD Diagnosis:  "
"RTN","ICDEXLK2",201,0)
 S:'$L($G(DIRA))&(FILE=80.1) DIRA=" Select Procedure:  "
"RTN","ICDEXLK2",202,0)
 S:'$L($G(DIRA)) DIRA=" Select ICD Text or Code:  "
"RTN","ICDEXLK2",203,0)
 S SBT="",SBR=$$RET^ICDEXLK6($G(FILE))
"RTN","ICDEXLK2",204,0)
 I SBR>0,VER>0,CDT?7N,$L(ROOT) D
"RTN","ICDEXLK2",205,0)
 . N CODE,SYS,STA
"RTN","ICDEXLK2",206,0)
 . S CODE=$G(@(ROOT_+SBR_",0)"))
"RTN","ICDEXLK2",207,0)
 . S SYS=$P($G(@(ROOT_+SBR_",1)")),"^",1)
"RTN","ICDEXLK2",208,0)
 . S STA=$$STATCHK^ICDEX(CODE,CDT,SYS)
"RTN","ICDEXLK2",209,0)
 . S:STA'>0 SBR=0
"RTN","ICDEXLK2",210,0)
 S:+SBR>0 SBT=$$LD^ICDEX(FILE,+SBR,$G(ICDCDT))
"RTN","ICDEXLK2",211,0)
 S:$L($G(DIRB)) DIR("B")=DIRB
"RTN","ICDEXLK2",212,0)
 S:$L($G(DIRA)) DIR("A")=DIRA W:'$L($G(DIRB)) !
"RTN","ICDEXLK2",213,0)
 S DIR("PRE")="S X=$$INPRE^ICDEXLK2($G(X))"
"RTN","ICDEXLK2",214,0)
 S (DIR("?"),DIR("??"))="^D INPH^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",215,0)
 S DIR("?")="^D INPH^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",216,0)
 S DIR("??")="^D INPH2^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",217,0)
 N Y S DIR(0)="FAO^0:245"
"RTN","ICDEXLK2",218,0)
 K X,DIROUT,DIRUT,DUOUT,DTOUT D ^DIR
"RTN","ICDEXLK2",219,0)
 S ICDOUPA=$S(X["^"&(X'["^^"):1,X["^^":2,1:0)
"RTN","ICDEXLK2",220,0)
 Q:$D(DIROUT) "^^"  Q:$D(DUOUT) "^"  Q:$G(X)="" X
"RTN","ICDEXLK2",221,0)
 S:X=""&('$L($G(DIR("B")))) X="^" S:X["^"&(X'["^^") X="^"
"RTN","ICDEXLK2",222,0)
 S:X["^^" X="^^" Q:X["^" X
"RTN","ICDEXLK2",223,0)
 I $E(X,1)=" ",$L(SBT),+SBR>0 S X=("`"_+SBR) Q X
"RTN","ICDEXLK2",224,0)
 W:$G(DIC(0))'["Q"&($E(X,1)'=" ") ! S X=$$TM(X)
"RTN","ICDEXLK2",225,0)
 S:$D(DTOUT)!(X="^") X="" S:X[U DUOUT=1
"RTN","ICDEXLK2",226,0)
 Q X
"RTN","ICDEXLK2",227,0)
INPH(X) ;   Input Help
"RTN","ICDEXLK2",228,0)
 N FILE,TYPE,TMP,TXT S FILE=$G(X)
"RTN","ICDEXLK2",229,0)
 S TYPE=$S(FILE=80:"Diagnosis ",FILE=80.1:"Procedure ",1:"")
"RTN","ICDEXLK2",230,0)
 I '$L($G(TYPE)) D  Q
"RTN","ICDEXLK2",231,0)
 . S TMP="Enter a term (2-245 characters in length) or a code."
"RTN","ICDEXLK2",232,0)
 . I +($G(VER))>0 S TMP=TMP_"  Only active codes will be considered for selection."
"RTN","ICDEXLK2",233,0)
 . S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",234,0)
 . S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",235,0)
 S TMP="Enter a "_TYPE_"(2-245 characters in length) or a "_TYPE_"code."
"RTN","ICDEXLK2",236,0)
 I +($G(VER))>0 S TMP=TMP_"  Only active "_TYPE_"codes will be considered for selection."
"RTN","ICDEXLK2",237,0)
 S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",238,0)
 S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",239,0)
 Q
"RTN","ICDEXLK2",240,0)
INPH2(X) ;   Input Help
"RTN","ICDEXLK2",241,0)
 N FILE,TYPE,TMP,TXT S FILE=$G(X)
"RTN","ICDEXLK2",242,0)
 S TYPE=$S(FILE=80:"Diagnosis ",FILE=80.1:"Procedure ",1:"")
"RTN","ICDEXLK2",243,0)
 I '$L($G(TYPE)) D  Q
"RTN","ICDEXLK2",244,0)
 . S TMP="Enter a term (2-245 characters in length), a code or code fragment,"
"RTN","ICDEXLK2",245,0)
 . S TMP=TMP_" phrase, or an accent grave character (`) followed by the"
"RTN","ICDEXLK2",246,0)
 . S TMP=TMP_" IEN to select a specific entry"
"RTN","ICDEXLK2",247,0)
 . I $G(ICDDIC0)'["F" D
"RTN","ICDEXLK2",248,0)
 . . S TMP=TMP_", or press space bar and Enter/Return key to do a subsequent lookup of the same entry"
"RTN","ICDEXLK2",249,0)
 . S TMP=TMP_"." I +($G(VER))>0 D
"RTN","ICDEXLK2",250,0)
 . . S TMP=TMP_"  Only active codes will be considered for selection."
"RTN","ICDEXLK2",251,0)
 . S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",252,0)
 . S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",253,0)
 S TMP="Enter a "_TYPE_"name"
"RTN","ICDEXLK2",254,0)
 S TMP=TMP_" (2-245 characters in length), a "_TYPE_"code or code fragment,"
"RTN","ICDEXLK2",255,0)
 S TMP=TMP_" one or more keywords sufficient to select a "_TYPE
"RTN","ICDEXLK2",256,0)
 S TMP=TMP_" name, or an accent grave character (`) followed by the"
"RTN","ICDEXLK2",257,0)
 S TMP=TMP_" IEN to select a specific entry"
"RTN","ICDEXLK2",258,0)
 I $G(ICDDIC0)'["F" D
"RTN","ICDEXLK2",259,0)
 . S TMP=TMP_", or press space bar and Enter/Return key to do a subsequent lookup of the same entry"
"RTN","ICDEXLK2",260,0)
 S TMP=TMP_"." I +($G(VER))>0 D
"RTN","ICDEXLK2",261,0)
 . S TMP=TMP_"  Only active "_TYPE_"codes will be considered for selection."
"RTN","ICDEXLK2",262,0)
 S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",263,0)
 S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",264,0)
 Q
"RTN","ICDEXLK2",265,0)
INPRE(X) ;   Input Pre-Processing
"RTN","ICDEXLK2",266,0)
 Q:'$L($G(X)) ""  N IN,IN1,IN2 S IN=$G(X)
"RTN","ICDEXLK2",267,0)
 Q:IN["??" "??"  Q:IN["?" "?"
"RTN","ICDEXLK2",268,0)
 S IN1=$E(IN,1),IN2=$E(IN,2,$L(IN))
"RTN","ICDEXLK2",269,0)
 I IN1["`",IN2?1N.N,$L($G(ROOT)) D  Q X
"RTN","ICDEXLK2",270,0)
 . Q:IN1="`"&(IN2?1N.N)&($D(@(ROOT_+IN2_",0)")))  S X="??"
"RTN","ICDEXLK2",271,0)
 I $L($G(ROOT)) I IN1=" ",'$L(IN2) D  Q:$E(X,1)="`"!($E(X,1)="?") X
"RTN","ICDEXLK2",272,0)
 . N FI,CODE,SYS,STA,ND,SB,OUT S FI=$$FILE^ICDEX(ROOT)
"RTN","ICDEXLK2",273,0)
 . Q:+FI'>0  S SB=$$RET^ICDEXLK6($G(FILE))
"RTN","ICDEXLK2",274,0)
 . I SB>0,+($G(VER))'>0 S X="`"_+SB Q
"RTN","ICDEXLK2",275,0)
 . I SB>0,+($G(VER))>0,+($G(CDT))?7N,$L(ROOT) D
"RTN","ICDEXLK2",276,0)
 . . N CODE,SYS,STA
"RTN","ICDEXLK2",277,0)
 . . S CODE=$G(@(ROOT_+SB_",0)")) Q:'$L(CODE)
"RTN","ICDEXLK2",278,0)
 . . S SYS=$P($G(@(ROOT_+SB_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDEXLK2",279,0)
 . . S STA=$$STATCHK^ICDEX(CODE,CDT,SYS)
"RTN","ICDEXLK2",280,0)
 . . S:STA'>0 SB=0 S:+SB>0 X="`"_+SB S:+SB'>0 X="??"
"RTN","ICDEXLK2",281,0)
 Q X
"RTN","ICDEXLK2",282,0)
 ;            
"RTN","ICDEXLK2",283,0)
 ; Miscellaneous
"RTN","ICDEXLK2",284,0)
OUT(X,Y,FMT,ARY) ;   Output Array
"RTN","ICDEXLK2",285,0)
 K ARY N FILE,TERM,ROOT,IEN S ROOT=$G(X),IEN=+($G(Y)) Q:'$L(ROOT)
"RTN","ICDEXLK2",286,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")
"RTN","ICDEXLK2",287,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^")
"RTN","ICDEXLK2",288,0)
 S FMT=+($G(FMT)) S:FMT'>0 FMT=1 S:FMT>4 FMT=1 Q:'$D(@(ROOT_IEN_",0)"))
"RTN","ICDEXLK2",289,0)
 I +($G(FMT))=1!(+($G(FMT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK2",290,0)
 I +($G(FMT))=2!(+($G(FMT))=4) S TERM=$$LD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK2",291,0)
 Q:'$L(TERM)  Q:$P(TERM,"^",1)=-1  S ARY(1)=TERM Q:+($G(FMT))=1!(+($G(FMT))=3)
"RTN","ICDEXLK2",292,0)
 D:+($G(FMT))=2 PAR^ICDEX(.ARY,60) D:+($G(FMT))=4 PAR^ICDEX(.ARY,70)
"RTN","ICDEXLK2",293,0)
 Q
"RTN","ICDEXLK2",294,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK2",295,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK2",296,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK2",297,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK2",298,0)
 Q X
"RTN","ICDEXLK2",299,0)
X(SEL,SUB) ;   Set X
"RTN","ICDEXLK2",300,0)
 K X N IEN S SEL=+($G(SEL)),SUB=$G(SUB) Q:'$L(SUB)
"RTN","ICDEXLK2",301,0)
 S IEN=$G(^TMP(SUB,$J,"SEL",+SEL)) Q:+IEN'>0  S X=+IEN
"RTN","ICDEXLK2",302,0)
 Q
"RTN","ICDEXLK2",303,0)
Y(ROOT,IEN,CDT,FMT) ;   Set Y
"RTN","ICDEXLK2",304,0)
 ;
"RTN","ICDEXLK2",305,0)
 ; Input
"RTN","ICDEXLK2",306,0)
 ; 
"RTN","ICDEXLK2",307,0)
 ;    ROOT  Global Root (DIC) or File Number
"RTN","ICDEXLK2",308,0)
 ;    IEN   Internal Entry Number
"RTN","ICDEXLK2",309,0)
 ;    CDT   Versioning Date (default TODAY)
"RTN","ICDEXLK2",310,0)
 ;    FMT   Format of Output
"RTN","ICDEXLK2",311,0)
 ;            0  Standard Fileman Y   IEN ^ CODE
"RTN","ICDEXLK2",312,0)
 ;            1  Expanded Y as if DIC(0) contained a "Z" 
"RTN","ICDEXLK2",313,0)
 ; Output
"RTN","ICDEXLK2",314,0)
 ;
"RTN","ICDEXLK2",315,0)
 ;    Y     IEN ^ Code           Fileman
"RTN","ICDEXLK2",316,0)
 ;    
"RTN","ICDEXLK2",317,0)
 ;    If DIC(0) contains "Z" or input parameter FMT > 0
"RTN","ICDEXLK2",318,0)
 ;    
"RTN","ICDEXLK2",319,0)
 ;       Y(0)     0 Node (Code)        Fileman
"RTN","ICDEXLK2",320,0)
 ;       Y(0,0)   .01 Field (Code)     Fileman
"RTN","ICDEXLK2",321,0)
 ;       Y(0,1)   $$ICDDX or $$ICDOP   Non-Fileman
"RTN","ICDEXLK2",322,0)
 ;       Y(0,2)   Long Description     Non-Fileman
"RTN","ICDEXLK2",323,0)
 ;       
"RTN","ICDEXLK2",324,0)
 N CODE,NODE0,FILE,SHORT,FDAT,LONG,ICD10 K Y S Y=-1
"RTN","ICDEXLK2",325,0)
 S:+($G(ICDOFND))>0&(+($G(ICDOSEL))'>0) Y="-1^No selection made"
"RTN","ICDEXLK2",326,0)
 S IEN=+($G(IEN)),ROOT=$G(ROOT),CDT=+($G(CDT))
"RTN","ICDEXLK2",327,0)
 S:CDT'?7N CDT=$$DT^XLFDT S ICD10=+($$IMP^ICDEX(30))
"RTN","ICDEXLK2",328,0)
 S ROOT=$$ROOT^ICDEX(ROOT) Q:'$L(ROOT)
"RTN","ICDEXLK2",329,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0
"RTN","ICDEXLK2",330,0)
 S NODE0=$G(@(ROOT_+IEN_",0)")) Q:'$L(NODE0)
"RTN","ICDEXLK2",331,0)
 S CODE=$$CODEC^ICDEX(FILE,IEN) Q:'$L(CODE)
"RTN","ICDEXLK2",332,0)
 S SHORT=$$SD^ICDEX(FILE,IEN,CDT) Q:'$L(SHORT)
"RTN","ICDEXLK2",333,0)
 S FMT=+($G(FMT)) I $P(SHORT,"^",1)=-1 D  Q:'$L(SHORT)
"RTN","ICDEXLK2",334,0)
 . S SHORT=$$SD^ICDEX(FILE,IEN,ICD10)
"RTN","ICDEXLK2",335,0)
 . S:$P(SHORT,"^",1)=-1 SHORT="" Q:'$L(SHORT)
"RTN","ICDEXLK2",336,0)
 . S SHORT=SHORT_" (Pending - "_$$FMTE^XLFDT($$IMP^ICDEX(30))_")"
"RTN","ICDEXLK2",337,0)
 S Y=+IEN_"^"_CODE
"RTN","ICDEXLK2",338,0)
 S:$G(DIC(0))["Z"!(+FMT>0) Y(0)=NODE0
"RTN","ICDEXLK2",339,0)
 S CODE=$P(NODE0,"^",1) Q:'$L(CODE)
"RTN","ICDEXLK2",340,0)
 S:FILE=80 FDAT=$$ICDDX^ICDEX(CODE,CDT,,"E")
"RTN","ICDEXLK2",341,0)
 S:FILE=80.1 FDAT=$$ICDOP^ICDEX(CODE,CDT,,"E")
"RTN","ICDEXLK2",342,0)
 S LONG=$$LD^ICDEX(ROOT,IEN,CDT)
"RTN","ICDEXLK2",343,0)
 S:$G(DIC(0))["Z"!(+FMT>0) Y(0,0)=CODE
"RTN","ICDEXLK2",344,0)
 S:$L(FDAT)&($L(LONG))&($G(DIC(0))["Z")!(+FMT>0) Y(0,1)=FDAT,Y(0,2)=LONG
"RTN","ICDEXLK2",345,0)
 Q
"RTN","ICDEXLK2",346,0)
SH ;   Show TMP
"RTN","ICDEXLK2",347,0)
 N SUB,NN,NC S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK2",348,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK2",349,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK2",350,0)
 W !
"RTN","ICDEXLK2",351,0)
 Q
"RTN","ICDEXLK3")
0^54^B98024730
"RTN","ICDEXLK3",1,0)
ICDEXLK3 ;SLC/KER - ICD Extractor - Lookup, Search ;04/21/2014
"RTN","ICDEXLK3",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK3",3,0)
 ;               
"RTN","ICDEXLK3",4,0)
 ; Global Variables
"RTN","ICDEXLK3",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK3",6,0)
 ;    ^ICDS("F"           N/A
"RTN","ICDEXLK3",7,0)
 ;    ^TMP(ID,$J,         SACC 2.3.2.5.1
"RTN","ICDEXLK3",8,0)
 ;               
"RTN","ICDEXLK3",9,0)
 ; External References
"RTN","ICDEXLK3",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK3",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK3",12,0)
 ;               
"RTN","ICDEXLK3",13,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK3",14,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK3",15,0)
 ;  
"RTN","ICDEXLK3",16,0)
LK(TXT,ROOT,CDT,SYS,VER,OUT) ; Lookup - Versioned
"RTN","ICDEXLK3",17,0)
 ;
"RTN","ICDEXLK3",18,0)
 ; Input 
"RTN","ICDEXLK3",19,0)
 ; 
"RTN","ICDEXLK3",20,0)
 ;   TXT    Text to Search for (Required)
"RTN","ICDEXLK3",21,0)
 ;   
"RTN","ICDEXLK3",22,0)
 ;             Diagnosis or Procedure Code
"RTN","ICDEXLK3",23,0)
 ;             Diagnosis or Procedure Descriptive Text
"RTN","ICDEXLK3",24,0)
 ;             
"RTN","ICDEXLK3",25,0)
 ;   ROOT   Global Root/File # to Search (Fileman DIC, Required)
"RTN","ICDEXLK3",26,0)
 ;   
"RTN","ICDEXLK3",27,0)
 ;             ^ICD9(
"RTN","ICDEXLK3",28,0)
 ;             ^ICD0(
"RTN","ICDEXLK3",29,0)
 ;             
"RTN","ICDEXLK3",30,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXLK3",31,0)
 ;   
"RTN","ICDEXLK3",32,0)
 ;   SYS    Coding System (Optional but encouraged)
"RTN","ICDEXLK3",33,0)
 ;   
"RTN","ICDEXLK3",34,0)
 ;              1      ICD-9-CM
"RTN","ICDEXLK3",35,0)
 ;              2      ICD-9 Proc
"RTN","ICDEXLK3",36,0)
 ;             30      ICD-10-CM
"RTN","ICDEXLK3",37,0)
 ;             31      ICD-10-PCS
"RTN","ICDEXLK3",38,0)
 ;
"RTN","ICDEXLK3",39,0)
 ;   VER    Versioned Lookup
"RTN","ICDEXLK3",40,0)
 ;   
"RTN","ICDEXLK3",41,0)
 ;             0  No, include all codes, active and inactive
"RTN","ICDEXLK3",42,0)
 ;             1  Yes, include only Active codes for date CDT
"RTN","ICDEXLK3",43,0)
 ;
"RTN","ICDEXLK3",44,0)
 ;   OUT    Output Format
"RTN","ICDEXLK3",45,0)
 ;   
"RTN","ICDEXLK3",46,0)
 ;             1  Fileman, Code and Short Text (default)
"RTN","ICDEXLK3",47,0)
 ;             
"RTN","ICDEXLK3",48,0)
 ;                250.00    DMII CMP NT ST UNCNTR
"RTN","ICDEXLK3",49,0)
 ;                
"RTN","ICDEXLK3",50,0)
 ;             2  Fileman, Code and Description
"RTN","ICDEXLK3",51,0)
 ;             
"RTN","ICDEXLK3",52,0)
 ;                250.00    DIABETES MELLITUS NO MENTION OF
"RTN","ICDEXLK3",53,0)
 ;                          COMPLICATION, TYPE II OR UNSPECIFIED
"RTN","ICDEXLK3",54,0)
 ;                          TYPE, NOT STATED AS UNCONTROLLED
"RTN","ICDEXLK3",55,0)
 ;                          
"RTN","ICDEXLK3",56,0)
 ;             3  Lexicon, Short Text and Code
"RTN","ICDEXLK3",57,0)
 ;             
"RTN","ICDEXLK3",58,0)
 ;                DMII CMP NT ST UNCNTR (250.00)
"RTN","ICDEXLK3",59,0)
 ;                
"RTN","ICDEXLK3",60,0)
 ;             4  Lexicon, Description and Code
"RTN","ICDEXLK3",61,0)
 ;             
"RTN","ICDEXLK3",62,0)
 ;                DIABETES MELLITUS NO MENTION OF 
"RTN","ICDEXLK3",63,0)
 ;                COMPLICATION, TYPE II OR UNSPECIFIED TYPE,
"RTN","ICDEXLK3",64,0)
 ;                NOT STATED AS UNCONTROLLED (250.00)
"RTN","ICDEXLK3",65,0)
 ;             
"RTN","ICDEXLK3",66,0)
 ; Output (if successful)
"RTN","ICDEXLK3",67,0)
 ; 
"RTN","ICDEXLK3",68,0)
 ;   $$LK  Number of entries found
"RTN","ICDEXLK3",69,0)
 ;   
"RTN","ICDEXLK3",70,0)
 ;   Global Array of entries found:
"RTN","ICDEXLK3",71,0)
 ; 
"RTN","ICDEXLK3",72,0)
 ;      ^TMP(ID,$J,"SEL")
"RTN","ICDEXLK3",73,0)
 ;      ^TMP(ID,$J,"SEL",0)=# of entries
"RTN","ICDEXLK3",74,0)
 ;      ^TMP(ID,$J,"SEL",#)=IEN^Display Text
"RTN","ICDEXLK3",75,0)
 ;   
"RTN","ICDEXLK3",76,0)
 ;         where ID is a package namespaced subscript:
"RTN","ICDEXLK3",77,0)
 ;        
"RTN","ICDEXLK3",78,0)
 ;           ICD9 - for the Diagnosis file #80
"RTN","ICDEXLK3",79,0)
 ;           ICD0 - for the Operations/Procedure file #80.1
"RTN","ICDEXLK3",80,0)
 ;               
"RTN","ICDEXLK3",81,0)
 ; Local Variables used but Newed or Killed Elsewhere
"RTN","ICDEXLK3",82,0)
 ; 
"RTN","ICDEXLK3",83,0)
 ;     DIC(0)
"RTN","ICDEXLK3",84,0)
 ;     
"RTN","ICDEXLK3",85,0)
 Q $$LK2
"RTN","ICDEXLK3",86,0)
 Q
"RTN","ICDEXLK3",87,0)
CD(TXT,ROOT,CDT,SYS,VER,OUT) ; Lookup Code - Versioned
"RTN","ICDEXLK3",88,0)
 N ICDBYCD S ICDBYCD="" S TXT=$$TM(TXT)
"RTN","ICDEXLK3",89,0)
 Q $$LK2
"RTN","ICDEXLK3",90,0)
 Q
"RTN","ICDEXLK3",91,0)
LK2() ; Lookup - Part 2
"RTN","ICDEXLK3",92,0)
 N FILE,IEN,INP1,INP2,KEY,SUB,NUM,NXT,OK,ORD,SEQ,TDT,VCC,VCD,VDS,VSD,VST,PR,PARS,LOR,VII,VNM,Y
"RTN","ICDEXLK3",93,0)
 S TXT=$$TM($TR($G(TXT),"#"," ")) Q:'$L(TXT) 0  S ROOT=$$ROOT^ICDEX(ROOT) Q:'$L(ROOT) 0
"RTN","ICDEXLK3",94,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^") 0
"RTN","ICDEXLK3",95,0)
 S SUB=$TR(ROOT,"^(","") Q:'$L(SUB) 0  K ^TMP(SUB,$J) S CDT=$$CDT($G(CDT))
"RTN","ICDEXLK3",96,0)
 S SYS=$S($L($G(SYS)):$$SYS^ICDEX($G(SYS)),1:""),VER=+($G(VER))
"RTN","ICDEXLK3",97,0)
 S:+($G(SYS))'>0&(CDT?7N)&(+VER>0) SYS=$$SYS(ROOT,CDT)
"RTN","ICDEXLK3",98,0)
 S:$D(^ICDS(+SYS,0))&(+VER>0) CDT=$$DTBR^ICDEX(CDT,,+($G(SYS)))
"RTN","ICDEXLK3",99,0)
 S OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=1
"RTN","ICDEXLK3",100,0)
 S INP1=$E(TXT,1),INP2=$E($G(TXT),2,245)
"RTN","ICDEXLK3",101,0)
 Q:$D(^TMP(SUB,$J)) +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",102,0)
 ;   Exact Match
"RTN","ICDEXLK3",103,0)
 I $L(TXT) D
"RTN","ICDEXLK3",104,0)
 . N ICDI,LOR K Y,X S LOR=0,X=$$EXM^ICDEXLK5(TXT,ROOT,.Y,CDT,SYS,VER)
"RTN","ICDEXLK3",105,0)
 . S ICDI=0 F  S ICDI=$O(Y(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK3",106,0)
 . . N IEN S IEN=+($G(Y(ICDI))) Q:+IEN'>0  D FND^ICDEXLK5(ROOT,IEN,CDT,SYS,VER,+($G(LOR)),OUT)
"RTN","ICDEXLK3",107,0)
 . I $G(DIC(0))'["A",$G(DIC(0))["O" D
"RTN","ICDEXLK3",108,0)
 . . N ENT,TXT,IEN S ENT=$O(^TMP(SUB,$J,"FND",0)) Q:+ENT'>0
"RTN","ICDEXLK3",109,0)
 . . S TXT=$G(^TMP(SUB,$J,"FND",+ENT,1)) Q:'$L(TXT)  S IEN=+($P(TXT,"^",1)) Q:+IEN'>0
"RTN","ICDEXLK3",110,0)
 . . K ^TMP(SUB,$J,"FND",ENT,1),^TMP(SUB,$J,"FND","IEN",+IEN)
"RTN","ICDEXLK3",111,0)
 . . S ^TMP(SUB,$J,"FND",1,1)=TXT,^TMP(SUB,$J,"FND","IEN",+IEN)=""
"RTN","ICDEXLK3",112,0)
 I $G(DIC(0))["X" D SEL^ICDEXLK5(ROOT,+($G(LOR))) Q:+($G(^TMP(SUB,$J,"SEL",0)))>0 +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",113,0)
 ;   By Code
"RTN","ICDEXLK3",114,0)
 D:$L(TXT)'>8&($$ISCODE(TXT,ROOT)>0) CODE
"RTN","ICDEXLK3",115,0)
 Q:+($G(^TMP(SUB,$J,"SEL",0)))>0 +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",116,0)
 ;   By Text
"RTN","ICDEXLK3",117,0)
 D TXT^ICDEXLK4
"RTN","ICDEXLK3",118,0)
 Q +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",119,0)
 ;
"RTN","ICDEXLK3",120,0)
CODE ;   Lookup by Code (Requires TXT and ROOT)
"RTN","ICDEXLK3",121,0)
 Q:'$L($G(TXT))  Q:'$L($G(ROOT))  Q:$L(TXT)>8  Q:$G(DIC(0))["B"
"RTN","ICDEXLK3",122,0)
 Q:$$ISCODE($G(TXT),$G(ROOT))'>0
"RTN","ICDEXLK3",123,0)
 S CDT=$$CDT($G(CDT)) N KEY,ORD,PRV,EROOT
"RTN","ICDEXLK3",124,0)
 S KEY=TXT,PRV=+($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",125,0)
 S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",126,0)
 S EROOT=ROOT_"""BA""," S:+($G(SYS))>0&($D(@(ROOT_"""ABA"","_+($G(SYS))_")"))) EROOT=ROOT_"""ABA"","_+($G(SYS))_","
"RTN","ICDEXLK3",127,0)
 F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK3",128,0)
 . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK3",129,0)
 . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK3",130,0)
 . . N STA S STA=1 S:VER>0 STA=$$LS(ROOT,IEN,CDT)
"RTN","ICDEXLK3",131,0)
 . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",132,0)
 . . I $G(DIC(0))'["A",$G(DIC(0))["O",ORD=KEY S CNT=CNT+1 Q:CNT>1
"RTN","ICDEXLK3",133,0)
 . . D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),1,OUT)
"RTN","ICDEXLK3",134,0)
 I '$D(^TMP(SUB,$J,"FND","IEN")) D
"RTN","ICDEXLK3",135,0)
 . S KEY=$$UP^XLFSTR(TXT),PRV=+($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",136,0)
 . S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",137,0)
 . S EROOT=ROOT_"""BA""," S:+($G(SYS))>0&($D(@(ROOT_"""ABA"","_+($G(SYS))_")"))) EROOT=ROOT_"""ABA"","_+($G(SYS))_","
"RTN","ICDEXLK3",138,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK3",139,0)
 . . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK3",140,0)
 . . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK3",141,0)
 . . . N STA S STA=1 S:VER>0 STA=$$LS(ROOT,IEN,CDT)
"RTN","ICDEXLK3",142,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",143,0)
 . . . I $G(DIC(0))'["A",$G(DIC(0))["O",ORD=KEY S CNT=CNT+1 Q:CNT>1
"RTN","ICDEXLK3",144,0)
 . . . D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),1,OUT)
"RTN","ICDEXLK3",145,0)
 D SEL^ICDEXLK5(ROOT,1)
"RTN","ICDEXLK3",146,0)
 Q
"RTN","ICDEXLK3",147,0)
 S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK3",148,0)
 Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",149,0)
 ;                    
"RTN","ICDEXLK3",150,0)
 ; Miscellaneous
"RTN","ICDEXLK3",151,0)
TOK(X) ;   Parse Text into Tokens
"RTN","ICDEXLK3",152,0)
 K PARS D PAR^ICDTOKN($G(X),.PARS,1)
"RTN","ICDEXLK3",153,0)
 Q
"RTN","ICDEXLK3",154,0)
TOKEN(X,ROOT,SYS,ARY) ;   Parse Text into Tokens
"RTN","ICDEXLK3",155,0)
 D TOKEN^ICDTOKN($G(X),$G(ROOT),$G(SYS),.ARY)
"RTN","ICDEXLK3",156,0)
 Q
"RTN","ICDEXLK3",157,0)
SS ;   Show Select/Find Global Arrays
"RTN","ICDEXLK3",158,0)
 N NN,NC S NN="^TMP(""ICD9"","_$J_")",NC="^TMP(""ICD9"","_$J_","
"RTN","ICDEXLK3",159,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D
"RTN","ICDEXLK3",160,0)
 . W !,NN,"=",@NN Q
"RTN","ICDEXLK3",161,0)
 S NN="^TMP(""ICD0"","_$J_")",NC="^TMP(""ICD0"","_$J_","
"RTN","ICDEXLK3",162,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D
"RTN","ICDEXLK3",163,0)
 . W !,NN,"=",@NN Q
"RTN","ICDEXLK3",164,0)
 Q
"RTN","ICDEXLK3",165,0)
WORD(X,ROOT,SYS) ;   Word is contained in a Set
"RTN","ICDEXLK3",166,0)
 ;
"RTN","ICDEXLK3",167,0)
 ; Input 
"RTN","ICDEXLK3",168,0)
 ; 
"RTN","ICDEXLK3",169,0)
 ;   X      A single word (Required)
"RTN","ICDEXLK3",170,0)
 ;   
"RTN","ICDEXLK3",171,0)
 ;   ROOT   Global Root/File # to Search (Optional, if 
"RTN","ICDEXLK3",172,0)
 ;          not supplied both files 80 and 80.1 are used)
"RTN","ICDEXLK3",173,0)
 ;   
"RTN","ICDEXLK3",174,0)
 ;             ^ICD9(   or 80
"RTN","ICDEXLK3",175,0)
 ;             ^ICD0(   or 80.1
"RTN","ICDEXLK3",176,0)
 ;             
"RTN","ICDEXLK3",177,0)
 ;   SYS    Coding System  (Optional, if not supplied all
"RTN","ICDEXLK3",178,0)
 ;          coding systems for the file are used)
"RTN","ICDEXLK3",179,0)
 ;   
"RTN","ICDEXLK3",180,0)
 ;              1  or  ICD  or  ICD-9-CM
"RTN","ICDEXLK3",181,0)
 ;              2  or  ICP  or  ICD-9 Proc
"RTN","ICDEXLK3",182,0)
 ;             30  or  10D  or  ICD-10-CM
"RTN","ICDEXLK3",183,0)
 ;             31  or  10P  or  ICD-10-PCS
"RTN","ICDEXLK3",184,0)
 ;
"RTN","ICDEXLK3",185,0)
 ; Output (if successful)
"RTN","ICDEXLK3",186,0)
 ; 
"RTN","ICDEXLK3",187,0)
 ;   $$WORD  Boolean value
"RTN","ICDEXLK3",188,0)
 ;   
"RTN","ICDEXLK3",189,0)
 ;           1 = Word was found
"RTN","ICDEXLK3",190,0)
 ;           
"RTN","ICDEXLK3",191,0)
 ;               If ROOT is not supplied, the word was found in 
"RTN","ICDEXLK3",192,0)
 ;               either file 80 or 80.1
"RTN","ICDEXLK3",193,0)
 ;               
"RTN","ICDEXLK3",194,0)
 ;               If SYS is not supplied, the word was found in 
"RTN","ICDEXLK3",195,0)
 ;               the file designated by ROOT in any coding system
"RTN","ICDEXLK3",196,0)
 ;               in the file
"RTN","ICDEXLK3",197,0)
 ;               
"RTN","ICDEXLK3",198,0)
 ;               If both ROOT and SYS are supplied, the word was
"RTN","ICDEXLK3",199,0)
 ;               found in the specified coding system
"RTN","ICDEXLK3",200,0)
 ;               
"RTN","ICDEXLK3",201,0)
 ;           0 = Word was not found
"RTN","ICDEXLK3",202,0)
 ;           
"RTN","ICDEXLK3",203,0)
 N TKN S TKN=$G(X),X=0 Q:'$L(TKN) 0  S ROOT=$$ROOT^ICDEX($G(ROOT)),SYS=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXLK3",204,0)
 I '$L(ROOT)!(ROOT'["^")!(ROOT'["(") D  Q X
"RTN","ICDEXLK3",205,0)
 . N TRT,FI F FI=80,80.1 S TRT=$$ROOT^ICDEX(FI) D
"RTN","ICDEXLK3",206,0)
 . . I +SYS'>0!('$D(^ICDS(+SYS))) D
"RTN","ICDEXLK3",207,0)
 . . . N SYS S SYS=0 F  S SYS=$O(@(TRT_"""AD"","_SYS_")")) Q:+SYS'>0  D
"RTN","ICDEXLK3",208,0)
 . . . . S:$D(@(TRT_"""AD"","_SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",209,0)
 . . I +SYS>0&('$D(^ICDS(+SYS))) D
"RTN","ICDEXLK3",210,0)
 . . . S:$D(@(TRT_"""AD"","_+SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",211,0)
 I +SYS'>0!('$D(^ICDS(+SYS))) D  Q X
"RTN","ICDEXLK3",212,0)
 . N SYS S SYS=0 F  S SYS=$O(@(ROOT_"""AD"","_SYS_")")) Q:+SYS'>0  D
"RTN","ICDEXLK3",213,0)
 . . S:$D(@(ROOT_"""AD"","_SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",214,0)
 Q:'$L(ROOT)!(ROOT'["^")!(ROOT'["(") 0
"RTN","ICDEXLK3",215,0)
 Q:+SYS'>0!('$D(^ICDS(+SYS))) 0
"RTN","ICDEXLK3",216,0)
 S:$D(@(ROOT_"""AD"","_+SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",217,0)
 Q X
"RTN","ICDEXLK3",218,0)
LS(ROOT,IEN,VDT) ;   Last Status
"RTN","ICDEXLK3",219,0)
 N EFF,HIS,STA,CDT S IEN=+($G(IEN)),ROOT=$G(ROOT),VDT=$$CDT($G(VDT))
"RTN","ICDEXLK3",220,0)
 Q:+IEN'>0 "-1"  Q:'$L(ROOT) "-1"  Q:VDT'?7N "-1"  S CDT=VDT+.00001
"RTN","ICDEXLK3",221,0)
 S EFF=$O(@(ROOT_+IEN_",66,""B"","_CDT_")"),-1) Q:EFF'?7N "-1"
"RTN","ICDEXLK3",222,0)
 S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","" "")"),-1) Q:+HIS'>0 "-1"
"RTN","ICDEXLK3",223,0)
 S STA=$G(@(ROOT_+IEN_",66,"_+HIS_",0)")) Q:'$L(STA) "-1"
"RTN","ICDEXLK3",224,0)
 S EFF=$P(STA,"^",1),STA=$P(STA,"^",2) Q:EFF'?7N "-1"  Q:STA'?1N "-1"
"RTN","ICDEXLK3",225,0)
 S X=STA_"^"_EFF
"RTN","ICDEXLK3",226,0)
 Q X
"RTN","ICDEXLK3",227,0)
LD(ROOT,IEN,VDT,VER) ;   Last Description
"RTN","ICDEXLK3",228,0)
 N EFF,LDI,LDS,CDT S IEN=+($G(IEN)),ROOT=$G(ROOT),VDT=$$CDT($G(VDT))
"RTN","ICDEXLK3",229,0)
 Q:+IEN'>0 ""  Q:'$L(ROOT) ""  Q:VDT'?7N ""  S CDT=VDT+.00001
"RTN","ICDEXLK3",230,0)
 S EFF=$O(@(ROOT_+IEN_",68,""B"","_CDT_")"),-1)
"RTN","ICDEXLK3",231,0)
 Q:+($G(VER))>0&(EFF'?7N) ""
"RTN","ICDEXLK3",232,0)
 S:+($G(VER))'>0&(EFF'?7N) EFF=$O(@(ROOT_+IEN_",68,""B"",0)"))
"RTN","ICDEXLK3",233,0)
 S LDI=$O(@(ROOT_+IEN_",68,""B"","_+EFF_","" "")"),-1) Q:+LDI'>0 ""
"RTN","ICDEXLK3",234,0)
 S LDS=$$UP^XLFSTR($G(@(ROOT_+IEN_",68,"_+LDI_",1)"))) Q:'$L(LDS) ""
"RTN","ICDEXLK3",235,0)
 S X=LDS
"RTN","ICDEXLK3",236,0)
 Q X
"RTN","ICDEXLK3",237,0)
ISCODE(X,ROOT) ;   Check if Text is a Code
"RTN","ICDEXLK3",238,0)
 N KEY,ORG,LAS,ORD,OUT,SI,SYS
"RTN","ICDEXLK3",239,0)
 S KEY=$G(X) Q:'$L($TR(KEY,"""","")) 0
"RTN","ICDEXLK3",240,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",241,0)
 S OUT=0,SI=0
"RTN","ICDEXLK3",242,0)
 F  S SI=$O(^ICDS(SI)) Q:+SI'>0  D  Q:+OUT>0
"RTN","ICDEXLK3",243,0)
 . N ORD,RES S ORD=ORG
"RTN","ICDEXLK3",244,0)
 . S RES=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")"))
"RTN","ICDEXLK3",245,0)
 . Q:'$L(RES)  S:$E(RES,$L(RES))=" " RES=$E(RES,1,($L(RES)-1))
"RTN","ICDEXLK3",246,0)
 . I RES=KEY S OUT="1^"_SI_"^"_KEY Q
"RTN","ICDEXLK3",247,0)
 . I $L(KEY)<$L(RES),KEY=$E(RES,1,$L(KEY)) S OUT="1^"_SI_"^"_KEY
"RTN","ICDEXLK3",248,0)
 S KEY=$$UP^XLFSTR($G(X))
"RTN","ICDEXLK3",249,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",250,0)
 S SI=0 F  S SI=$O(^ICDS(SI)) Q:+SI'>0  D  Q:+OUT>0
"RTN","ICDEXLK3",251,0)
 . N ORD,RES S ORD=ORG
"RTN","ICDEXLK3",252,0)
 . S RES=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")"))
"RTN","ICDEXLK3",253,0)
 . Q:'$L(RES)  S:$E(RES,$L(RES))=" " RES=$E(RES,1,($L(RES)-1))
"RTN","ICDEXLK3",254,0)
 . I RES=KEY S OUT="1^"_SI_"^"_KEY Q
"RTN","ICDEXLK3",255,0)
 . I $L(KEY)<$L(RES),KEY=$E(RES,1,$L(KEY)) S OUT="1^"_SI_"^"_KEY
"RTN","ICDEXLK3",256,0)
 Q:+OUT>0 OUT
"RTN","ICDEXLK3",257,0)
 Q 0
"RTN","ICDEXLK3",258,0)
UNQ(X,ROOT) ;   Check if Text is a Unique Code
"RTN","ICDEXLK3",259,0)
 ;
"RTN","ICDEXLK3",260,0)
 ; Input
"RTN","ICDEXLK3",261,0)
 ; 
"RTN","ICDEXLK3",262,0)
 ;   X      Input String/Code
"RTN","ICDEXLK3",263,0)
 ;   ROOT   Global Root of file
"RTN","ICDEXLK3",264,0)
 ;   
"RTN","ICDEXLK3",265,0)
 ; Output
"RTN","ICDEXLK3",266,0)
 ; 
"RTN","ICDEXLK3",267,0)
 ;   $$UNQ  3 Piece ^ delimited string
"RTN","ICDEXLK3",268,0)
 ;   
"RTN","ICDEXLK3",269,0)
 ;             Piece  Content
"RTN","ICDEXLK3",270,0)
 ;             1      String is Unique in file
"RTN","ICDEXLK3",271,0)
 ;                       1 if X is unique
"RTN","ICDEXLK3",272,0)
 ;                       0 if X is not unique
"RTN","ICDEXLK3",273,0)
 ;             2      String is a Code
"RTN","ICDEXLK3",274,0)
 ;                       1 is a code
"RTN","ICDEXLK3",275,0)
 ;                       0 X is not a code
"RTN","ICDEXLK3",276,0)
 ;             3      String has Multiple Entries
"RTN","ICDEXLK3",277,0)
 ;                       1 Yes, X occurs more than once
"RTN","ICDEXLK3",278,0)
 ;                       0 No, X occurs once (aka unique)
"RTN","ICDEXLK3",279,0)
 ;             
"RTN","ICDEXLK3",280,0)
 ;          or -1 if the code string X is not found
"RTN","ICDEXLK3",281,0)
 ;
"RTN","ICDEXLK3",282,0)
 N KEY,ORG,LAS,ORD,OUT,IENS,IEN,NXT,NIEN,SI,SYS Q:'$L($G(X)) -1
"RTN","ICDEXLK3",283,0)
 S KEY=$TR($G(X),"""","") Q:'$L(KEY) -1
"RTN","ICDEXLK3",284,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",285,0)
 S OUT=-1,(IEN,NXT,SI)=0
"RTN","ICDEXLK3",286,0)
 F  S SI=$O(@(ROOT_"""ABA"","_+SI_")")) Q:+SI'>0  D  Q:OUT>0  Q:+IEN>0  Q:+NXT>0
"RTN","ICDEXLK3",287,0)
 . N ORD S ORD=ORG S IEN=$O(@(ROOT_"""ABA"","_+SI_","""_KEY_" "",0)"))
"RTN","ICDEXLK3",288,0)
 . S (NXT,NIEN)=0
"RTN","ICDEXLK3",289,0)
 . F  S ORD=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")")) Q:'$L(ORD)  Q:$E(ORD,1,$L(KEY))'=KEY  D
"RTN","ICDEXLK3",290,0)
 . . S NIEN=0 F  S NIEN=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""","_NIEN_")")) Q:+NIEN'>0  D
"RTN","ICDEXLK3",291,0)
 . . . S:ORD'=(KEY_" ") IENS(+NIEN)=""
"RTN","ICDEXLK3",292,0)
 S (NXT,NIEN)=0 F  S NIEN=$O(IENS(NIEN)) Q:+NIEN'>0  S NXT=NXT+1
"RTN","ICDEXLK3",293,0)
 S:+IEN>0 $P(OUT,"^",1)=1,$P(OUT,"^",2)=1
"RTN","ICDEXLK3",294,0)
 I +IEN>0 S:+NXT>0 $P(OUT,"^",3)=1,$P(OUT,"^",1)=0
"RTN","ICDEXLK3",295,0)
 I +($G(OUT))'<0 F SI=1:1:3 S $P(OUT,"^",SI)=+($P($G(OUT),"^",SI))
"RTN","ICDEXLK3",296,0)
 I NXT>0,+IEN'>0 S OUT=$S(NXT>1:0,1:1)_"^0^"_$S(NXT>1:1,1:0)
"RTN","ICDEXLK3",297,0)
 S X=OUT
"RTN","ICDEXLK3",298,0)
 Q X
"RTN","ICDEXLK3",299,0)
ISORD(X) ;   Check if in $ORDER
"RTN","ICDEXLK3",300,0)
 Q:'$L($G(ORD)) 0  Q:'$L($G(KEY)) 0
"RTN","ICDEXLK3",301,0)
 Q:$E($G(ORD),1,$L($G(KEY)))=$G(KEY) 1
"RTN","ICDEXLK3",302,0)
 Q 0
"RTN","ICDEXLK3",303,0)
CDT(X,Y) ;   ICD-10 Code Set Date
"RTN","ICDEXLK3",304,0)
 N CDT,SYS S CDT=$G(X),SYS=+($G(Y)) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXLK3",305,0)
 Q X
"RTN","ICDEXLK3",306,0)
SYS(ROOT,CDT) ;   System from File and Date
"RTN","ICDEXLK3",307,0)
 N FILE,CTL,FDT,NDT,IEN,SYS S (NDT,SYS)=0
"RTN","ICDEXLK3",308,0)
 S FILE=$S($G(ROOT)="^ICD9(":80,$G(ROOT)="^ICD0(":80.1,1:"") Q:FILE'>0 0
"RTN","ICDEXLK3",309,0)
 S CTL=$G(CDT) Q:CTL'?7N 0
"RTN","ICDEXLK3",310,0)
 S IEN=0 F  S IEN=$O(^ICDS("F",FILE,IEN)) Q:+IEN'>0  D
"RTN","ICDEXLK3",311,0)
 . S FDT=$P($G(^ICDS(+IEN,0)),"^",4) Q:FDT'?7N
"RTN","ICDEXLK3",312,0)
 . I FDT<(CTL+.001),FDT>NDT S FDT=CTL,SYS=IEN
"RTN","ICDEXLK3",313,0)
 Q SYS
"RTN","ICDEXLK3",314,0)
SH ;   Show TMP
"RTN","ICDEXLK3",315,0)
 N SUB,NN,NC S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK3",316,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK3",317,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK3",318,0)
 W !
"RTN","ICDEXLK3",319,0)
 Q
"RTN","ICDEXLK3",320,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK3",321,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK3",322,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK3",323,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK3",324,0)
 Q X
"RTN","ICDEXLK4")
0^55^B25896513
"RTN","ICDEXLK4",1,0)
ICDEXLK4 ;SLC/KER - ICD Extractor - Lookup, Text ;04/21/2014
"RTN","ICDEXLK4",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK4",3,0)
 ;               
"RTN","ICDEXLK4",4,0)
 ; Global Variables
"RTN","ICDEXLK4",5,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK4",6,0)
 ;               
"RTN","ICDEXLK4",7,0)
 ; External References
"RTN","ICDEXLK4",8,0)
 ;    $$LOW^XLFSTR        ICR  10104
"RTN","ICDEXLK4",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK4",10,0)
 ;               
"RTN","ICDEXLK4",11,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK4",12,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK4",13,0)
 ;     
"RTN","ICDEXLK4",14,0)
 ; Local Variables Newed or Killed Elsewhere
"RTN","ICDEXLK4",15,0)
 ;     ICDBYCD   Sort by Code
"RTN","ICDEXLK4",16,0)
 ;     CDT       Code Set Date
"RTN","ICDEXLK4",17,0)
 ;     OUT       Format of display
"RTN","ICDEXLK4",18,0)
 ;     SYS       Coding System
"RTN","ICDEXLK4",19,0)
 ;     VER       Versioned Lookup
"RTN","ICDEXLK4",20,0)
 ;     SUB       ^TMP Subscript
"RTN","ICDEXLK4",21,0)
 ;     SYS       Coding System
"RTN","ICDEXLK4",22,0)
 ;
"RTN","ICDEXLK4",23,0)
TXT ; Lookup by Text (Requires TXT and ROOT)
"RTN","ICDEXLK4",24,0)
 Q:$D(ICDBYCD)  Q:'$L($G(TXT))  Q:'$L($G(ROOT))  Q:$L(TXT)'>1  Q:$G(DIC(0))["B"
"RTN","ICDEXLK4",25,0)
 S CDT=$$CDT^ICDEXLK3($G(CDT)) N PARS,ORG,CNT,PRV,EROOT,KEY,LOOK,EXACT,ABBR,PRIME
"RTN","ICDEXLK4",26,0)
 S:'$L($G(SUB)) SUB=$TR(ROOT,"^(,","")
"RTN","ICDEXLK4",27,0)
 S LOOK=TXT,PRV=+($G(^TMP(SUB,$J,"SEL",0))),(EXACT,ABBR)=0
"RTN","ICDEXLK4",28,0)
 S CNT=0,ORG=$$UP^XLFSTR($G(TXT)) K PARS D TOKEN^ICDTOKN(TXT,ROOT,$G(SYS),.PARS)
"RTN","ICDEXLK4",29,0)
 S NUM=$O(PARS(0)),(PRIME,KEY)=$G(PARS(+NUM)) S:+($G(PARS(+NUM,"A")))>0 ABBR=1
"RTN","ICDEXLK4",30,0)
 K:NUM>0 PARS(+NUM) S:NUM>0&($G(PARS(0))>0) PARS(0)=$G(PARS(0))-1 Q:$L(KEY)'>1
"RTN","ICDEXLK4",31,0)
 S EROOT=ROOT_"""D""," S:+($G(SYS))>0&($D(@(ROOT_"""AD"","_+($G(SYS))_")"))) EROOT=ROOT_"""AD"","_+($G(SYS))_","
"RTN","ICDEXLK4",32,0)
 S EXACT=0 I $O(PARS(0))'>0,$L(PRIME),$D(@(EROOT_""""_PRIME_""")")) S EXACT=1
"RTN","ICDEXLK4",33,0)
 I EXACT>0!(ABBR>0) D
"RTN","ICDEXLK4",34,0)
 . N ORD,STR,TKN S STR=PRIME F TKN=STR,(STR_"S"),(STR_"ES") D
"RTN","ICDEXLK4",35,0)
 . . S ORD=TKN I $D(@(EROOT_""""_ORD_""")")) D TXT2
"RTN","ICDEXLK4",36,0)
 I EXACT'>0&(ABBR'>0) D
"RTN","ICDEXLK4",37,0)
 . N ORD,STR,TKN S STR=PRIME F TKN=STR,(STR_"S"),(STR_"ES") D
"RTN","ICDEXLK4",38,0)
 . . S ORD=$E(TKN,1,($L(TKN)-1))_$C(($A($E(TKN,$L(TKN)))-1))_"~"
"RTN","ICDEXLK4",39,0)
 . . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD^ICDEXLK3  D TXT2
"RTN","ICDEXLK4",40,0)
 D:$D(^TMP(SUB,$J,"FND")) SEL^ICDEXLK5(ROOT,0)
"RTN","ICDEXLK4",41,0)
 Q
"RTN","ICDEXLK4",42,0)
TXT2 ;   Lookup by Text (loop)
"RTN","ICDEXLK4",43,0)
 N IEN S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK4",44,0)
 . N OK,NUM,TDT,TIE,TXT,KEY,VDT S VDT=+CDT+.000001
"RTN","ICDEXLK4",45,0)
 . S TDT=$O(@(EROOT_""""_ORD_""","_+IEN_","_VDT_")"),-1)
"RTN","ICDEXLK4",46,0)
 . I +($G(VER))'>0,TDT'?7N D
"RTN","ICDEXLK4",47,0)
 . . S TDT=$O(@(EROOT_""""_ORD_""","_+IEN_","_(+CDT-.000001)_")"))
"RTN","ICDEXLK4",48,0)
 . Q:TDT'?7N  S TIE=$O(@(EROOT_""""_ORD_""","_+IEN_","_+TDT_",0)"))
"RTN","ICDEXLK4",49,0)
 . S TXT=$$UP^XLFSTR($G(@(ROOT_+IEN_",68,"_+TIE_",1)")))
"RTN","ICDEXLK4",50,0)
 . I $G(DIC(0))'["A",$G(DIC(0))["O" D  Q
"RTN","ICDEXLK4",51,0)
 . . Q:CNT>1  I ORG=TXT D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),0,$G(OUT)) S CNT=CNT+1
"RTN","ICDEXLK4",52,0)
 . S OK=1,NUM=0
"RTN","ICDEXLK4",53,0)
 . F  S NUM=$O(PARS(NUM)) Q:+NUM'>0  D
"RTN","ICDEXLK4",54,0)
 . . N EXACT,PR,OR,SP,IN,AB S PR=$G(PARS(NUM)),AB=+($G(PARS(+NUM,"A")))
"RTN","ICDEXLK4",55,0)
 . . I AB'>0 S IN=$$IN(TXT,PR),SP=$$SI(ROOT,+IEN,+TIE,PR)
"RTN","ICDEXLK4",56,0)
 . . I AB>0 S IN=$$EX(TXT,PR),SP=$$SE(ROOT,+IEN,+TIE,PR)
"RTN","ICDEXLK4",57,0)
 . . S:IN'>0&(SP'>0) OK=0
"RTN","ICDEXLK4",58,0)
 . D:+OK>0 FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),0,$G(OUT))
"RTN","ICDEXLK4",59,0)
 Q
"RTN","ICDEXLK4",60,0)
 ; 
"RTN","ICDEXLK4",61,0)
 ; Miscellaneous
"RTN","ICDEXLK4",62,0)
SE(RT,IE,TI,X) ;   Supplemental Word (exact match exist)
"RTN","ICDEXLK4",63,0)
 N FIND,IIEN,PLUR,TEXT,ROOT,TIEN
"RTN","ICDEXLK4",64,0)
 S FIND=$$UP^XLFSTR($G(X)) Q:'$L(FIND) 0
"RTN","ICDEXLK4",65,0)
 S ROOT=$$ROOT^ICDEX($G(RT)) Q:'$L(ROOT) 0
"RTN","ICDEXLK4",66,0)
 S IIEN=+($G(IE)),TIEN=+($G(TI))
"RTN","ICDEXLK4",67,0)
 S TEXT=$$UP^XLFSTR($G(@(ROOT_+IIEN_",68,"_+TIEN_",1)"))) Q:'$L(TEXT) 0
"RTN","ICDEXLK4",68,0)
 Q:'$D(@(ROOT_+IIEN_",68,"_+TIEN_",2,""B"","""_FIND_""")")) 0
"RTN","ICDEXLK4",69,0)
 S PLUR=$$EX(TEXT,(FIND_"S")) Q:PLUR>0 0
"RTN","ICDEXLK4",70,0)
 Q 1
"RTN","ICDEXLK4",71,0)
SI(RT,IE,TI,X) ;   Supplemental Word (match exist)
"RTN","ICDEXLK4",72,0)
 N FIND,IIEN,PLUR,TEXT,NEXT,TIEN,ORDR,ROOT
"RTN","ICDEXLK4",73,0)
 S FIND=$$UP^XLFSTR($G(X)) Q:'$L(FIND) 0
"RTN","ICDEXLK4",74,0)
 S ROOT=$$ROOT^ICDEX($G(RT)) Q:'$L(ROOT) 0
"RTN","ICDEXLK4",75,0)
 S IIEN=+($G(IE)),TIEN=+($G(TI))
"RTN","ICDEXLK4",76,0)
 S:FIND?1N.N ORDR=FIND-.00000000000000009 I FIND'?1N.N D
"RTN","ICDEXLK4",77,0)
 . S:$L(FIND)=1 ORDR=$C($A(FIND)-1)_"~"
"RTN","ICDEXLK4",78,0)
 . S:$L(FIND)>1 ORDR=$E(FIND,1,($L(FIND)-1))_$C($A($E(FIND,$L(FIND)))-1)_"~"
"RTN","ICDEXLK4",79,0)
 S NEXT=$O(@(ROOT_+IIEN_",68,"_+TIEN_",2,""B"","""_ORDR_""")"))
"RTN","ICDEXLK4",80,0)
 Q:$E(NEXT,1,$L(FIND))=FIND 1
"RTN","ICDEXLK4",81,0)
 Q 0
"RTN","ICDEXLK4",82,0)
EX(X,Y) ;   String Y is exactly in X
"RTN","ICDEXLK4",83,0)
 N CON,FIND,TEXT,EXACT S TEXT=$G(X),FIND=$G(Y),EXACT=1
"RTN","ICDEXLK4",84,0)
 S CON=$$CON(TEXT,FIND) S X=+($G(CON))
"RTN","ICDEXLK4",85,0)
 Q X
"RTN","ICDEXLK4",86,0)
IN(X,Y) ;   String Y is contained in X
"RTN","ICDEXLK4",87,0)
 N CON,FIND,TEXT S TEXT=$G(X),FIND=$G(Y)
"RTN","ICDEXLK4",88,0)
 S CON=$$CON(TEXT,FIND) S X=+($G(CON))
"RTN","ICDEXLK4",89,0)
 Q X
"RTN","ICDEXLK4",90,0)
CON(X,Y) ;   Text X Contains String Y
"RTN","ICDEXLK4",91,0)
 N FIND,FOUND,TEXT,LEAD,TRAIL,STR
"RTN","ICDEXLK4",92,0)
 S TEXT=$$UP^XLFSTR($G(X)),FIND=$$UP^XLFSTR($G(Y))
"RTN","ICDEXLK4",93,0)
 Q:'$L(TEXT) 0  Q:'$L(FIND) 0  Q:$L(FIND)>$L(TEXT) 0
"RTN","ICDEXLK4",94,0)
 S (X,FOUND)=0
"RTN","ICDEXLK4",95,0)
 I +($G(EXACT))>0 S X=0 D  Q X
"RTN","ICDEXLK4",96,0)
 . F TRAIL=" ","-","(","<","{","[","," D  Q:FOUND>0
"RTN","ICDEXLK4",97,0)
 . . N STR S STR=FIND_TRAIL
"RTN","ICDEXLK4",98,0)
 . . S:$E(TEXT,1,$L(STR))=STR FOUND=1
"RTN","ICDEXLK4",99,0)
 . . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",100,0)
 . Q:FOUND>0  F LEAD=" ","-","(","<","{","[","," D  Q:FOUND>0
"RTN","ICDEXLK4",101,0)
 . . N STR S STR=LEAD_FIND
"RTN","ICDEXLK4",102,0)
 . . S:$E(TEXT,($L(TEXT)-$L(STR)),$L(TEXT))=STR FOUND=1
"RTN","ICDEXLK4",103,0)
 . . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",104,0)
 . Q:FOUND>0  F LEAD=" ","-","(","<","{","[","," D  Q:FOUND>0
"RTN","ICDEXLK4",105,0)
 . . F TRAIL=" ","-",")",">","}","]","," D  Q:FOUND>0
"RTN","ICDEXLK4",106,0)
 . . . N STR S STR=LEAD_FIND_TRAIL S:TEXT[STR FOUND=1
"RTN","ICDEXLK4",107,0)
 . . . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",108,0)
 . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",109,0)
 S:$E(TEXT,1,$L(FIND))=FIND FOUND=1
"RTN","ICDEXLK4",110,0)
 S:FOUND>0 X=FOUND Q:FOUND>0 X
"RTN","ICDEXLK4",111,0)
 F LEAD=" ","-","(","<","{","[","," D  Q:FOUND>0
"RTN","ICDEXLK4",112,0)
 . N STR S STR=LEAD_FIND S:TEXT[STR FOUND=1
"RTN","ICDEXLK4",113,0)
 . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",114,0)
 Q:FOUND>0 X  F LEAD=" ","-","(","<","{","[","," D  Q:FOUND>0
"RTN","ICDEXLK4",115,0)
 . N TRAIL F TRAIL=" ","-",")",">","}","]","," D  Q:FOUND>0
"RTN","ICDEXLK4",116,0)
 . . N STR S STR=LEAD_FIND_TRAIL S:TEXT[STR FOUND=1
"RTN","ICDEXLK4",117,0)
 . . S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",118,0)
 S:FOUND>0 X=FOUND
"RTN","ICDEXLK4",119,0)
 Q X
"RTN","ICDEXLK4",120,0)
LC(X) ;   Leading Character
"RTN","ICDEXLK4",121,0)
 S X=$G(X) S X=$$UP^XLFSTR($E(X,1))_$$LOW^XLFSTR($E(X,2,$L(X)))
"RTN","ICDEXLK4",122,0)
 Q X
"RTN","ICDEXLK4",123,0)
SS ;   Show Select/Find Global Arrays
"RTN","ICDEXLK4",124,0)
 N NN,NC,EX S EX=0 S NN="^TMP(""ICD9"","_$J_")",NC="^TMP(""ICD9"","_$J_","
"RTN","ICDEXLK4",125,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D  Q:EX>20
"RTN","ICDEXLK4",126,0)
 . W !,NN,"=",$E(@NN,1,48) S EX=EX+1
"RTN","ICDEXLK4",127,0)
 S EX=0 S NN="^TMP(""ICD0"","_$J_")",NC="^TMP(""ICD0"","_$J_","
"RTN","ICDEXLK4",128,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D  Q:EX>20
"RTN","ICDEXLK4",129,0)
 . W !,NN,"=",$E(@NN,1,48) S EX=EX+1
"RTN","ICDEXLK4",130,0)
 Q
"RTN","ICDEXLK5")
0^56^B75373289
"RTN","ICDEXLK5",1,0)
ICDEXLK5 ;SLC/KER - ICD Extractor - Lookup, List ;04/21/2014
"RTN","ICDEXLK5",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK5",3,0)
 ;               
"RTN","ICDEXLK5",4,0)
 ; Global Variables
"RTN","ICDEXLK5",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK5",6,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK5",7,0)
 ;               
"RTN","ICDEXLK5",8,0)
 ; External References
"RTN","ICDEXLK5",9,0)
 ;    ^DIM                ICR  10016
"RTN","ICDEXLK5",10,0)
 ;    $$MIX^LEXXM         ICR   5781
"RTN","ICDEXLK5",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK5",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXLK5",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK5",14,0)
 ;    
"RTN","ICDEXLK5",15,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK5",16,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK5",17,0)
 ;     DIC("S")  Fileman Screen
"RTN","ICDEXLK5",18,0)
 ;     
"RTN","ICDEXLK5",19,0)
 ; Local Variables Newed or Killed Elsewhere
"RTN","ICDEXLK5",20,0)
 ;     ICDBYCD   Sort by Code
"RTN","ICDEXLK5",21,0)
 ;     ICDCDT    Code Set Date
"RTN","ICDEXLK5",22,0)
 ;     ICDOUT    Format of display
"RTN","ICDEXLK5",23,0)
 ;     ICDVDT    Date to use during lookup 
"RTN","ICDEXLK5",24,0)
 ;     ICDSYS    Coding System
"RTN","ICDEXLK5",25,0)
 ;     ICDVER    Versioned Lookup
"RTN","ICDEXLK5",26,0)
 ;     ICDDICSS  Secondary Screen
"RTN","ICDEXLK5",27,0)
 ;     INP2      User Input (processed)
"RTN","ICDEXLK5",28,0)
 ;     LOUD      Output to Screen
"RTN","ICDEXLK5",29,0)
 ;     
"RTN","ICDEXLK5",30,0)
 Q
"RTN","ICDEXLK5",31,0)
EXM(TXT,ROOT,Y,CDT,SYS,VER) ; Lookup Exact Match
"RTN","ICDEXLK5",32,0)
 ;
"RTN","ICDEXLK5",33,0)
 ;   Input   TXT    Text/Code for search (Required)
"RTN","ICDEXLK5",34,0)
 ;           ROOT   Global Root (Required)
"RTN","ICDEXLK5",35,0)
 ;          .Y      Output array passed by reference (Required)
"RTN","ICDEXLK5",36,0)
 ;           CDT    Date
"RTN","ICDEXLK5",37,0)
 ;           SYS    Coding System
"RTN","ICDEXLK5",38,0)
 ;           VER    Versioned Search
"RTN","ICDEXLK5",39,0)
 ;   
"RTN","ICDEXLK5",40,0)
 ;   Output  $$EM   Number of Exact Matches Found
"RTN","ICDEXLK5",41,0)
 ;           Y(n)   Array of Exact Matches
"RTN","ICDEXLK5",42,0)
 ;   
"RTN","ICDEXLK5",43,0)
 N EXM,KEY,ORD,ICDI,IEN,NUM,ORG,EROOT S ORG=$G(TXT) Q:'$L($G(ORG)) 0
"RTN","ICDEXLK5",44,0)
 Q:'$L($TR(ORG,"""","")) 0  S ROOT=$G(ROOT)  Q:'$L($G(ROOT)) 0
"RTN","ICDEXLK5",45,0)
 S SYS=+($G(SYS)),VER=+($G(VER))
"RTN","ICDEXLK5",46,0)
 S CDT=$$CDT^ICDEXLK3($G(CDT),SYS)
"RTN","ICDEXLK5",47,0)
 ; Exact Match Case Sensitive Code
"RTN","ICDEXLK5",48,0)
 S KEY=ORG,KEY=ORG S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK5",49,0)
 S EROOT=ROOT_"""BA""," S:+SYS>0&($D(@(ROOT_"""ABA"","_+SYS_")"))) EROOT=ROOT_"""ABA"","_+SYS_","
"RTN","ICDEXLK5",50,0)
 F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",51,0)
 . S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",52,0)
 . . N VAL,STA S STA=1
"RTN","ICDEXLK5",53,0)
 . . S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",54,0)
 . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",55,0)
 . . S VAL=$P($G(@(ROOT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK5",56,0)
 . . Q:VAL'=ORG  S EXM(IEN)="",LOR=1
"RTN","ICDEXLK5",57,0)
 ; Exact Match Code
"RTN","ICDEXLK5",58,0)
 I $O(EXM(0))'>0 D
"RTN","ICDEXLK5",59,0)
 . S KEY=$$UP^XLFSTR(ORG),KEY=ORG S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK5",60,0)
 . S EROOT=ROOT_"""BA""," S:+SYS>0&($D(@(ROOT_"""ABA"","_+SYS_")"))) EROOT=ROOT_"""ABA"","_+SYS_","
"RTN","ICDEXLK5",61,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",62,0)
 . . S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",63,0)
 . . . N VAL,STA S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",64,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",65,0)
 . . . S VAL=$P($G(@(ROOT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK5",66,0)
 . . . Q:VAL'=ORG  S EXM(IEN)="",LOR=1
"RTN","ICDEXLK5",67,0)
 ; Exact Match Text
"RTN","ICDEXLK5",68,0)
 I $O(EXM(0))'>0 D
"RTN","ICDEXLK5",69,0)
 . Q:$D(ICDBYCD)  S KEY=$$UP^XLFSTR($G(ORG)) K PARS D TOKEN^ICDEXLK3(KEY,ROOT,SYS,.PARS)
"RTN","ICDEXLK5",70,0)
 . S NUM=$O(PARS(0)),SEQ=$O(PARS(+NUM,0)),KEY=$G(PARS(+NUM,+SEQ))
"RTN","ICDEXLK5",71,0)
 . K PARS(+NUM,+SEQ)  Q:$L(KEY)'>1
"RTN","ICDEXLK5",72,0)
 . S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~"
"RTN","ICDEXLK5",73,0)
 . S EROOT=ROOT_"""D""," S:+SYS>0&($D(@(ROOT_"""AD"","_+SYS_")"))) EROOT=ROOT_"""AD"","_+SYS_","
"RTN","ICDEXLK5",74,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",75,0)
 . . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK5",76,0)
 . . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",77,0)
 . . . N VAL,STA S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",78,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",79,0)
 . . . S VAL=$$LD^ICDEXLK3(ROOT,IEN,CDT,VER)
"RTN","ICDEXLK5",80,0)
 . . . Q:$$UP^XLFSTR(VAL)'=$$UP^XLFSTR(ORG)
"RTN","ICDEXLK5",81,0)
 . . . S EXM(IEN)="",LOR=0
"RTN","ICDEXLK5",82,0)
 S (X,IEN)=0 F  S IEN=$O(EXM(IEN)) Q:+IEN'>0  D
"RTN","ICDEXLK5",83,0)
 . N ICDI S ICDI=$O(Y(" "),-1)+1,Y(ICDI)=IEN,(X,Y(0))=ICDI
"RTN","ICDEXLK5",84,0)
 Q X
"RTN","ICDEXLK5",85,0)
IEN ; Lookup by IEN
"RTN","ICDEXLK5",86,0)
 K Y S FND=0,Y=-1 Q:'$L(INP2)  Q:INP2'?1N.N  Q:+INP2'>0  Q:'$L(ROOT)  Q:+FILE'>0
"RTN","ICDEXLK5",87,0)
 N XX,VDES,UDES,IEN,SNAME,ICS,INAME,STA,ORG S IEN=INP2 Q:'$D(@(ROOT_+IEN_",0)"))
"RTN","ICDEXLK5",88,0)
 S ORG="`"_IEN,VDES=$$LD^ICDEX(FILE,IEN,ICDCDT),UDES=$$LD^ICDEX(FILE,IEN,9999999)
"RTN","ICDEXLK5",89,0)
 S ICS=$$CSI^ICDEX(FILE,IEN),XX=VDES,(SNAME,INAME)=$$SYS^ICDEX(ICS,,"E")
"RTN","ICDEXLK5",90,0)
 S:$L($G(ICDSYS)) SNAME=$$SYS^ICDEX($G(ICDSYS),,"E")
"RTN","ICDEXLK5",91,0)
 S STA=$$LS^ICDEX(FILE,IEN,$G(ICDCDT))
"RTN","ICDEXLK5",92,0)
 I $L($G(ICDSYS))>0,ICS>0,$G(ICDSYS)'=ICS D  Q
"RTN","ICDEXLK5",93,0)
 . K X,Y S X="" S:$L($G(ORG)) X=$G(ORG) S Y=-1,FND=0 Q
"RTN","ICDEXLK5",94,0)
 . S X=UDES,Y="-1^IEN "_IEN_" is not of the "_SNAME_" coding system"
"RTN","ICDEXLK5",95,0)
 I +($G(ICDVER))>0,STA'>0 D  Q
"RTN","ICDEXLK5",96,0)
 . K X,Y S X="" S:$L($G(ORG)) X=$G(ORG) S Y=-1,FND=0 Q
"RTN","ICDEXLK5",97,0)
 . S X=UDES,Y="-1^IEN "_IEN_" is not active on "_$$FMTE^XLFDT($G(ICDCDT),"5Z")
"RTN","ICDEXLK5",98,0)
 I +($G(ICDVER))'>0,$E(XX,1,2)="-1",$L(UDES),$E(UDES,1,2)'="-1" S XX=UDES
"RTN","ICDEXLK5",99,0)
 W:$D(LOUD)&($G(DIC(0))["E")&($E(XX,1,2)'="-1") "   ",XX
"RTN","ICDEXLK5",100,0)
 D FND(ROOT,IEN,ICDCDT,$G(ICS),$G(ICDVER),+($G(LOR)),$G(ICDOUT))
"RTN","ICDEXLK5",101,0)
 D SEL(ROOT,1) S FND=+($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK5",102,0)
 I FND=1,+($G(^TMP(SUB,$J,"SEL",1)))>0 D
"RTN","ICDEXLK5",103,0)
 . S Y=$G(^TMP(SUB,$J,"SEL",1)) S:Y[" " Y=$P(Y," ",1)
"RTN","ICDEXLK5",104,0)
 . D Y^ICDEXLK2($G(ROOT),+Y,$G(ICDCDT))
"RTN","ICDEXLK5",105,0)
 S:+($G(Y))'>0 Y=-1 S:$L($G(ORG)) X=$G(ORG)
"RTN","ICDEXLK5",106,0)
 Q
"RTN","ICDEXLK5",107,0)
 ;
"RTN","ICDEXLK5",108,0)
FND(ROOT,IEN,CDT,SYS,VER,LOR,OUT) ; Add Item to Found List
"RTN","ICDEXLK5",109,0)
 ;
"RTN","ICDEXLK5",110,0)
 ; Input
"RTN","ICDEXLK5",111,0)
 ; 
"RTN","ICDEXLK5",112,0)
 ;    ROOT   Global Root
"RTN","ICDEXLK5",113,0)
 ;    IEN    Internal Entry Number
"RTN","ICDEXLK5",114,0)
 ;    CDT    Date
"RTN","ICDEXLK5",115,0)
 ;    SYS    Coding System
"RTN","ICDEXLK5",116,0)
 ;    VER    Versioned Search
"RTN","ICDEXLK5",117,0)
 ;    LOR    List Order
"RTN","ICDEXLK5",118,0)
 ;             0  List by Text Length
"RTN","ICDEXLK5",119,0)
 ;             1  List by Code Number
"RTN","ICDEXLK5",120,0)
 ;    OUT    Output Format
"RTN","ICDEXLK5",121,0)
 ;             1  Fileman, code and short text
"RTN","ICDEXLK5",122,0)
 ;             2  Fileman, code and description
"RTN","ICDEXLK5",123,0)
 ;             3  Lexicon, short text and code
"RTN","ICDEXLK5",124,0)
 ;             4  Lexicon, description and code
"RTN","ICDEXLK5",125,0)
 ;
"RTN","ICDEXLK5",126,0)
 ; Output
"RTN","ICDEXLK5",127,0)
 ; 
"RTN","ICDEXLK5",128,0)
 ;    ^TMP(ID,$J,"FND")
"RTN","ICDEXLK5",129,0)
 ;    ^TMP(ID,$J,"FND",LEN,SEQ)=IEN ^ Display Text
"RTN","ICDEXLK5",130,0)
 ;    ^TMP(ID,$J,"FND","IEN",<ien>)=""
"RTN","ICDEXLK5",131,0)
 ;  
"RTN","ICDEXLK5",132,0)
 ;      where
"RTN","ICDEXLK5",133,0)
 ;      
"RTN","ICDEXLK5",134,0)
 ;         ID is a package namespaced subscript:
"RTN","ICDEXLK5",135,0)
 ;        
"RTN","ICDEXLK5",136,0)
 ;            ICD9 - for file #80 searches
"RTN","ICDEXLK5",137,0)
 ;            ICD0 - for file #80.1 searches
"RTN","ICDEXLK5",138,0)
 ;      
"RTN","ICDEXLK5",139,0)
 ;         LEN is a number assigned based string length
"RTN","ICDEXLK5",140,0)
 ;         SEQ is a unique sequence number for length
"RTN","ICDEXLK5",141,0)
 ;                
"RTN","ICDEXLK5",142,0)
 ;   Uses   DIC("S") to screen output
"RTN","ICDEXLK5",143,0)
 ; 
"RTN","ICDEXLK5",144,0)
 N CC,CODE,CTR,FILE,SEQ,SCREEN,SHORT,LONG,STATUS,STA,SUB,TEXT,TERM,TYP,NUM,Y
"RTN","ICDEXLK5",145,0)
 S SYS=+($G(SYS)),VER=+($G(VER)) S (Y,IEN)=+($G(IEN)) Q:+IEN'>0
"RTN","ICDEXLK5",146,0)
 S ROOT=$$ROOT^ICDEX($G(ROOT)),FILE=$$FILE^ICDEX(ROOT)
"RTN","ICDEXLK5",147,0)
 S SUB=$TR(ROOT,"^("),SCREEN=$$SCREEN Q:'SCREEN  Q:+FILE'>0
"RTN","ICDEXLK5",148,0)
 S CODE=$P($G(@(ROOT_+IEN_",0)")),"^",1) Q:'$L(CODE)
"RTN","ICDEXLK5",149,0)
 S:'$L($G(CDT)) CDT=$$DT^XLFDT S LOR=+($G(LOR))
"RTN","ICDEXLK5",150,0)
 S STA=1 I +VER>0 S STA=$$STATCHK^ICDEX(CODE,CDT,SYS) Q:+($G(STA))'>0
"RTN","ICDEXLK5",151,0)
 Q:'$L(SUB)  Q:$D(^TMP(SUB,$J,"FND","IEN",+IEN))
"RTN","ICDEXLK5",152,0)
 S TYP=$P($G(^ICDS(+SYS,0)),"^",1),TERM=""
"RTN","ICDEXLK5",153,0)
 S OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=1
"RTN","ICDEXLK5",154,0)
 I +($G(OUT))=1!(+($G(OUT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK5",155,0)
 I +($G(OUT))=2!(+($G(OUT))=4) D
"RTN","ICDEXLK5",156,0)
 . S TERM=$$LD^ICDEX(FILE,IEN,CDT) Q:$P(TERM,"^",1)=-1
"RTN","ICDEXLK5",157,0)
 . I +($G(OUT))=4,$L($T(MIX^LEXXM)) S TERM=$$MIX^LEXXM(TERM)
"RTN","ICDEXLK5",158,0)
 I VER'>0,($P(TERM,"^",1)=-1!('$L(TERM))) D
"RTN","ICDEXLK5",159,0)
 . N TDT S TDT=$O(@(ROOT_IEN_",67,""B"","_+($G(CDT))_")")) Q:$E(TDT,1,7)'?7N
"RTN","ICDEXLK5",160,0)
 . I +($G(OUT))=1!(+($G(OUT))=3) S TERM=$$SD^ICDEX(FILE,IEN,TDT)
"RTN","ICDEXLK5",161,0)
 . I +($G(OUT))=2!(+($G(OUT))=4) S TERM=$$LD^ICDEX(FILE,IEN,TDT)
"RTN","ICDEXLK5",162,0)
 . I +($G(OUT))=4,$P(TERM,"^",1)'=-1,$L($T(MIX^LEXXM)) S TERM=$$MIX^LEXXM(TERM)
"RTN","ICDEXLK5",163,0)
 . S:$P(TERM,"^",1)=-1 TERM="" Q:'$L(TERM)
"RTN","ICDEXLK5",164,0)
 . S:TDT?7N TERM=TERM_" ("_$$FMTE^XLFDT(TDT,"5ZM")_")"
"RTN","ICDEXLK5",165,0)
 S:$P(TERM,"^",1)=-1 TERM="" Q:'$L(TERM)  S NUM=$$NUM^ICDEX(CODE)
"RTN","ICDEXLK5",166,0)
 S CODE=CODE_$J(" ",(10-$L(CODE))) S CC=""
"RTN","ICDEXLK5",167,0)
 S:FILE=80 CC=$$VCC^ICDEX(IEN,CDT),CC=$$CC(+CC)
"RTN","ICDEXLK5",168,0)
 S STATUS=$O(@(ROOT_+IEN_",66,""B"","_(+CDT+.000001)_")"),-1)
"RTN","ICDEXLK5",169,0)
 S STATUS=$O(@(ROOT_+IEN_",66,""B"","_+STATUS_","" "")"),-1)
"RTN","ICDEXLK5",170,0)
 S STATUS=$P($G(@(ROOT_+IEN_",66,"_+STATUS_",0)")),"^",2)
"RTN","ICDEXLK5",171,0)
 S STATUS=$$ST(STATUS)
"RTN","ICDEXLK5",172,0)
 S:$G(OUT)'?1N OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=4
"RTN","ICDEXLK5",173,0)
 I +($G(OUT))=1!(+($G(OUT))=2) D
"RTN","ICDEXLK5",174,0)
 . S:$G(DIC(0))'["S" TEXT=CODE_TERM_CC_STATUS
"RTN","ICDEXLK5",175,0)
 . S:$G(DIC(0))["S" TEXT=TERM_CC_STATUS
"RTN","ICDEXLK5",176,0)
 I +($G(OUT))=3!(+($G(OUT))=4) D
"RTN","ICDEXLK5",177,0)
 . S CODE=$$TM(CODE),TEXT=TERM_CC_STATUS
"RTN","ICDEXLK5",178,0)
 . Q:$G(DIC(0))["S"
"RTN","ICDEXLK5",179,0)
 . S:$L(TYP) TEXT=TEXT_" ("_TYP_" "_CODE_")"
"RTN","ICDEXLK5",180,0)
 . S:'$L(TYP) TEXT=TEXT_" ("_CODE_")"
"RTN","ICDEXLK5",181,0)
 S SEQ=246-$L(TERM) S:LOR>0 SEQ=NUM
"RTN","ICDEXLK5",182,0)
 S CTR=$O(^TMP(SUB,$J,"FND",+SEQ," "),-1)+1
"RTN","ICDEXLK5",183,0)
 S ^TMP(SUB,$J,"FND",+SEQ,CTR)=IEN_"^"_TEXT
"RTN","ICDEXLK5",184,0)
 S ^TMP(SUB,$J,"FND","IEN",+IEN)=""
"RTN","ICDEXLK5",185,0)
 Q
"RTN","ICDEXLK5",186,0)
SEL(ROOT,LOR) ; Add Items to Selection List
"RTN","ICDEXLK5",187,0)
 ;
"RTN","ICDEXLK5",188,0)
 ; Input   
"RTN","ICDEXLK5",189,0)
 ;   
"RTN","ICDEXLK5",190,0)
 ;   ROOT   Global Root/File # (Required)
"RTN","ICDEXLK5",191,0)
 ;   LOR    List Order
"RTN","ICDEXLK5",192,0)
 ;            0  List by Text Length
"RTN","ICDEXLK5",193,0)
 ;            1  List by Code Number
"RTN","ICDEXLK5",194,0)
 ;   
"RTN","ICDEXLK5",195,0)
 ; Output
"RTN","ICDEXLK5",196,0)
 ;   
"RTN","ICDEXLK5",197,0)
 ;    ^TMP(ID,$J,"SEL")
"RTN","ICDEXLK5",198,0)
 ;    ^TMP(ID,$J,"SEL",0)=# of entries
"RTN","ICDEXLK5",199,0)
 ;    ^TMP(ID,$J,"SEL",#)=IEN^Display Text
"RTN","ICDEXLK5",200,0)
 ;  
"RTN","ICDEXLK5",201,0)
 ;      where ID is a package namespaced subscript:
"RTN","ICDEXLK5",202,0)
 ;        
"RTN","ICDEXLK5",203,0)
 ;       ICD9 - for the Diagnosis file #80
"RTN","ICDEXLK5",204,0)
 ;       ICD0 - for the Operations/Procedure file #80.1
"RTN","ICDEXLK5",205,0)
 ;       
"RTN","ICDEXLK5",206,0)
 ; Uses    ^TMP(NAME,$J,"FND") (Optional)
"RTN","ICDEXLK5",207,0)
 ; Kills   ^TMP(NAME,$J,"FND")
"RTN","ICDEXLK5",208,0)
 ;   
"RTN","ICDEXLK5",209,0)
 N CTR,FILE,FND,SEQ,SUB,TEXT S ROOT=$$ROOT^ICDEX($G(ROOT)),LOR=+($G(LOR))
"RTN","ICDEXLK5",210,0)
 S FILE=$$FILE^ICDEX(ROOT),SUB=$TR(ROOT,"^(") K ^TMP(SUB,$J,"SEL")
"RTN","ICDEXLK5",211,0)
 Q:+FILE'>0  Q:'$L(SUB)  K ^TMP(SUB,$J,"SEL")
"RTN","ICDEXLK5",212,0)
 I +($G(LOR))'>0 D
"RTN","ICDEXLK5",213,0)
 . S SEQ=" " F  S SEQ=$O(^TMP(SUB,$J,"FND",SEQ),-1) Q:+SEQ'>0  D SEL2
"RTN","ICDEXLK5",214,0)
 I +($G(LOR))>0 D
"RTN","ICDEXLK5",215,0)
 . S SEQ=0 F  S SEQ=$O(^TMP(SUB,$J,"FND",SEQ)) Q:+SEQ'>0  D SEL2
"RTN","ICDEXLK5",216,0)
 K ^TMP(SUB,$J,"FND")
"RTN","ICDEXLK5",217,0)
 Q
"RTN","ICDEXLK5",218,0)
SEL2 ;  Add Items to Selection List (part 2)
"RTN","ICDEXLK5",219,0)
 N FND S FND=0 F  S FND=$O(^TMP(SUB,$J,"FND",+SEQ,FND)) Q:+FND'>0  D
"RTN","ICDEXLK5",220,0)
 . N CTR,TEXT S TEXT=$G(^TMP(SUB,$J,"FND",+SEQ,FND))
"RTN","ICDEXLK5",221,0)
 . Q:'$L(TEXT)  Q:+TEXT'>0  Q:'$L($P(TEXT,"^",2))
"RTN","ICDEXLK5",222,0)
 . S CTR=$O(^TMP(SUB,$J,"SEL"," "),-1)+1
"RTN","ICDEXLK5",223,0)
 . S ^TMP(SUB,$J,"SEL",CTR)=TEXT,^TMP(SUB,$J,"SEL",0)=CTR
"RTN","ICDEXLK5",224,0)
 Q
"RTN","ICDEXLK5",225,0)
 ;
"RTN","ICDEXLK5",226,0)
 ; Miscellaneous
"RTN","ICDEXLK5",227,0)
SH ;   Display TMP
"RTN","ICDEXLK5",228,0)
 N SUB,NN,NC
"RTN","ICDEXLK5",229,0)
 S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK5",230,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK5",231,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK5",232,0)
 W !
"RTN","ICDEXLK5",233,0)
 Q
"RTN","ICDEXLK5",234,0)
SCREEN(X) ;   Screen Entries - Boolean Truth Value
"RTN","ICDEXLK5",235,0)
 Q:+($G(Y))'>0 1   Q:'$L($G(ROOT)) 1
"RTN","ICDEXLK5",236,0)
 N ICDNR,ICDO,ICDS,ICDY S ICDY=+($G(Y)),ROOT=$$ROOT^ICDEX($G(ROOT)) Q:'$L(ROOT) 1
"RTN","ICDEXLK5",237,0)
 S ICDS=$G(ICDDICS) Q:'$L(ICDS) 1  S Y=+($G(ICDY))
"RTN","ICDEXLK5",238,0)
 S ICDNR=$D(@(ROOT_+Y_",0)")) X ICDS S ICDO=$T
"RTN","ICDEXLK5",239,0)
 Q:'ICDO 0
"RTN","ICDEXLK5",240,0)
 Q 1
"RTN","ICDEXLK5",241,0)
 Q
"RTN","ICDEXLK5",242,0)
 ; QUASAR
"RTN","ICDEXLK5",243,0)
 N ICDREF,ICDSC1,ICDSC2,ICDF1,ICDF2,ICDIN
"RTN","ICDEXLK5",244,0)
 I $L($G(DICR(2,"S"))) D
"RTN","ICDEXLK5",245,0)
 . I $G(DIC("S"))["X DICR(2,""S"")" S ICDF2=""
"RTN","ICDEXLK5",246,0)
 . I $G(DICR(1,31))=ICDF2,$L($G(DICR(2,"S"))),$G(ICDF2)["DICR(2,""S"")" S ICDF2=""
"RTN","ICDEXLK5",247,0)
 Q:'$L((ICDF1_ICDF2)) 1  S ICDIN=$D(@(ROOT_+ICDY_",0)")) Q:ICDIN'>0 0
"RTN","ICDEXLK5",248,0)
 ; SCHEDULING
"RTN","ICDEXLK5",249,0)
 S X=ICDF1 D ^DIM S:$D(X) ICDSC1=X D:$L(ICDSC1)
"RTN","ICDEXLK5",250,0)
 . S Y=+($G(ICDY)),ICDREF=$D(@(ROOT_+Y_",0)")) X ICDSC1 S ICDSC1=$T
"RTN","ICDEXLK5",251,0)
 Q:+ICDSC1'>0&('$L(ICDF2)) 0  Q:'$L(ICDF2) 1
"RTN","ICDEXLK5",252,0)
 S X=ICDF2 D ^DIM S:$D(X) ICDSC2=X D:$L(ICDSC2)&($L(ICDF1))
"RTN","ICDEXLK5",253,0)
 . S Y=+($G(ICDY)),ICDREF=$D(@(ROOT_+Y_",0)")) X ICDSC2 S ICDSC2=$T
"RTN","ICDEXLK5",254,0)
 Q:+ICDSC1'>0!(+(ICDSC2'>0)) 0
"RTN","ICDEXLK5",255,0)
 Q 1
"RTN","ICDEXLK5",256,0)
ISORD(X) ;   Check if in $ORDER
"RTN","ICDEXLK5",257,0)
 Q:'$L($G(ORD)) 0  Q:'$L($G(KEY)) 0
"RTN","ICDEXLK5",258,0)
 Q:$E($G(ORD),1,$L($G(KEY)))=$G(KEY) 1
"RTN","ICDEXLK5",259,0)
 Q 0
"RTN","ICDEXLK5",260,0)
CC(X) ;   CC
"RTN","ICDEXLK5",261,0)
 Q:+($G(X))=1 " (CC)"
"RTN","ICDEXLK5",262,0)
 Q:+($G(X))=2 " (Major CC)"
"RTN","ICDEXLK5",263,0)
 Q ""
"RTN","ICDEXLK5",264,0)
ST(X) ;   Status indicators
"RTN","ICDEXLK5",265,0)
 Q:$G(X)?1N&(+$G(X)'>0) " (Inactive)"
"RTN","ICDEXLK5",266,0)
 Q:$G(X)'?1N&(+$G(X)'>0) " (Pending)"
"RTN","ICDEXLK5",267,0)
 Q ""
"RTN","ICDEXLK5",268,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK5",269,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK5",270,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK5",271,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK5",272,0)
 Q X
"RTN","ICDEXLK6")
0^77^B83204817
"RTN","ICDEXLK6",1,0)
ICDEXLK6 ;SLC/KER - ICD Extractor - Lookup, Miscellaneous ;04/21/2014
"RTN","ICDEXLK6",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXLK6",3,0)
 ;               
"RTN","ICDEXLK6",4,0)
 ; Global Variables
"RTN","ICDEXLK6",5,0)
 ;    ^DISV(              ICR    510
"RTN","ICDEXLK6",6,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK6",7,0)
 ;    ^ICDS("F"           N/A
"RTN","ICDEXLK6",8,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","ICDEXLK6",9,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","ICDEXLK6",10,0)
 ;               
"RTN","ICDEXLK6",11,0)
 ; External References
"RTN","ICDEXLK6",12,0)
 ;    ^DIM                ICR  10016
"RTN","ICDEXLK6",13,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXLK6",14,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXLK6",15,0)
 ;    ^DIWP               ICR  10011
"RTN","ICDEXLK6",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK6",17,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXLK6",18,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXLK6",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK6",20,0)
 ;               
"RTN","ICDEXLK6",21,0)
DX9 ;   Fileman Lookup ICD-9 Diagnosis (interactive)
"RTN","ICDEXLK6",22,0)
 ;
"RTN","ICDEXLK6",23,0)
 ; This API forces the lookup in file 80 to use the ICD-9-CM
"RTN","ICDEXLK6",24,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",25,0)
 ; to 1 (Coding System = ICD-9-CM)
"RTN","ICDEXLK6",26,0)
 ; 
"RTN","ICDEXLK6",27,0)
 N ICDSYS S ICDSYS=1 D DX
"RTN","ICDEXLK6",28,0)
 Q
"RTN","ICDEXLK6",29,0)
DX10 ;   Fileman Lookup ICD-10 Diagnosis (interactive)
"RTN","ICDEXLK6",30,0)
 ;
"RTN","ICDEXLK6",31,0)
 ; This API forces the lookup in file 80 to use the ICD-10-CM
"RTN","ICDEXLK6",32,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",33,0)
 ; to 30 (Coding System = ICD-10-CM)
"RTN","ICDEXLK6",34,0)
 ; 
"RTN","ICDEXLK6",35,0)
 N ICDSYS S ICDSYS=30 D DX
"RTN","ICDEXLK6",36,0)
 Q
"RTN","ICDEXLK6",37,0)
DX ;   Fileman Lookup Diagnosis (interactive)
"RTN","ICDEXLK6",38,0)
 ;
"RTN","ICDEXLK6",39,0)
 ;   Variables that may be preset:
"RTN","ICDEXLK6",40,0)
 ; 
"RTN","ICDEXLK6",41,0)
 ;      ICDVDT     Versioning Date (Fileman format)
"RTN","ICDEXLK6",42,0)
 ;      ICDSYS     Coding System 1 = ICD-9-CM, 30 = ICD-10-CM
"RTN","ICDEXLK6",43,0)
 ;      ICDFMT     Display Format 1-4 (see above)
"RTN","ICDEXLK6",44,0)
 ;      DIC("S")   Fileman Screen
"RTN","ICDEXLK6",45,0)
 ;      DIC("W")   Executable write command
"RTN","ICDEXLK6",46,0)
 ;      
"RTN","ICDEXLK6",47,0)
 K X N SNAM,OVDT,OSYS,OFMT,SYSD S DIC="^ICD9(",DIC(0)="AQEM",(SYSD,SNAM)=""
"RTN","ICDEXLK6",48,0)
 S OSYS=+($G(ICDSYS)) N ICDSYS S:$D(^ICDS("F",80,+($G(OSYS)))) ICDSYS=OSYS
"RTN","ICDEXLK6",49,0)
 S OFMT=$G(ICDFMT) N ICDFMT S ICDFMT=OFMT S:+ICDFMT<1 ICDFMT=1 S:+ICDFMT>4 ICDFMT=1
"RTN","ICDEXLK6",50,0)
 S OVDT=$G(ICDVDT) S:OVDT'?7N OVDT=$$DT^XLFDT N ICDVDT S ICDVDT=OVDT S:SYSD?7N&(SYSD>ICDVDT) ICDVDT=SYSD
"RTN","ICDEXLK6",51,0)
 S:+($G(ICDSYS))>0 SNAM=$$SNAM^ICDEX(+($G(ICDSYS))),SYSD=$P($G(^ICDS(+$G(ICDSYS),0)),"^",4) S ICDSYS=+($G(ICDSYS))
"RTN","ICDEXLK6",52,0)
 S SNAM=$P(SNAM," ",1),SNAM=$P(SNAM,"-",1,2)
"RTN","ICDEXLK6",53,0)
 S DIC("A")="Select ICD Diagnosis:  " S:$L(SNAM) DIC("A")="Select "_SNAM_" Diagnosis:  "
"RTN","ICDEXLK6",54,0)
 K:$$DIM($G(DIC("S")))'>0 DIC("S") K:$$DIM($G(DIC("W")))'>0 DIC("W")
"RTN","ICDEXLK6",55,0)
 D LK^ICDEXLK K DIC
"RTN","ICDEXLK6",56,0)
 Q
"RTN","ICDEXLK6",57,0)
PR9 ;   Fileman Lookup ICD-9 Procedures (interactive)
"RTN","ICDEXLK6",58,0)
 ;
"RTN","ICDEXLK6",59,0)
 ; This API forces the lookup in file 80 to use the ICD-9 Proc
"RTN","ICDEXLK6",60,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",61,0)
 ; to 2 (Coding System = ICD-9 Proc)
"RTN","ICDEXLK6",62,0)
 ; 
"RTN","ICDEXLK6",63,0)
 N ICDSYS S ICDSYS=2 D PR
"RTN","ICDEXLK6",64,0)
 Q
"RTN","ICDEXLK6",65,0)
PR10 ;   Fileman Lookup ICD-10 Procedures (interactive)
"RTN","ICDEXLK6",66,0)
 ;
"RTN","ICDEXLK6",67,0)
 ; This API forces the lookup in file 80 to use the ICD-10-PCS
"RTN","ICDEXLK6",68,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",69,0)
 ; to 31 (Coding System = ICD-10-PCS)
"RTN","ICDEXLK6",70,0)
 ; 
"RTN","ICDEXLK6",71,0)
 N ICDSYS S ICDSYS=31 D PR
"RTN","ICDEXLK6",72,0)
 Q
"RTN","ICDEXLK6",73,0)
PR ;   Fileman Lookup Procedure (interactive)
"RTN","ICDEXLK6",74,0)
 ;
"RTN","ICDEXLK6",75,0)
 ;   Variables that may be preset:
"RTN","ICDEXLK6",76,0)
 ; 
"RTN","ICDEXLK6",77,0)
 ;      ICDVDT     Versioning Date (Fileman format)
"RTN","ICDEXLK6",78,0)
 ;      ICDSYS     Coding System 2 = ICD-9 Proc, 31 = ICD-10-PCS
"RTN","ICDEXLK6",79,0)
 ;      ICDFMT     Display Format 1-4 (see above)
"RTN","ICDEXLK6",80,0)
 ;      DIC("S")   Fileman Screen
"RTN","ICDEXLK6",81,0)
 ;      DIC("W")   Executable Write command
"RTN","ICDEXLK6",82,0)
 ;      
"RTN","ICDEXLK6",83,0)
 K X N SNAM,OVDT,OSYS,OFMT,SYSD S DIC="^ICD0(",DIC(0)="AQEM",(SYSD,SNAM)=""
"RTN","ICDEXLK6",84,0)
 S OSYS=+($G(ICDSYS)) N ICDSYS S:$D(^ICDS("F",80.1,+($G(OSYS)))) ICDSYS=OSYS
"RTN","ICDEXLK6",85,0)
 S OFMT=$G(ICDFMT) N ICDFMT S ICDFMT=OFMT S:+ICDFMT<1 ICDFMT=1 S:+ICDFMT>4 ICDFMT=1
"RTN","ICDEXLK6",86,0)
 S OVDT=$G(ICDVDT) S:OVDT'?7N OVDT=$$DT^XLFDT N ICDVDT S ICDVDT=OVDT S:SYSD?7N&(SYSD>ICDVDT) ICDVDT=SYSD
"RTN","ICDEXLK6",87,0)
 S:+($G(ICDSYS))>0 SNAM=$$SNAM^ICDEX(+($G(ICDSYS))),SYSD=$P($G(^ICDS(+$G(ICDSYS),0)),"^",4) S ICDSYS=+($G(ICDSYS))
"RTN","ICDEXLK6",88,0)
 S SNAM=$P(SNAM," ",1),SNAM=$P(SNAM,"-",1,2)
"RTN","ICDEXLK6",89,0)
 S DIC("A")="Select ICD Procedure:  " S:$L(SNAM) DIC("A")="Select "_SNAM_" Procedure:  "
"RTN","ICDEXLK6",90,0)
 K:$$DIM($G(DIC("S")))'>0 DIC("S") K:$$DIM($G(DIC("W")))'>0 DIC("W")
"RTN","ICDEXLK6",91,0)
 D LK^ICDEXLK K DIC
"RTN","ICDEXLK6",92,0)
 Q
"RTN","ICDEXLK6",93,0)
DIM(X) ;   Check MUMPS Code
"RTN","ICDEXLK6",94,0)
 S X=$G(X) Q:'$L(X) 0  D ^DIM Q:'$D(X) 0
"RTN","ICDEXLK6",95,0)
 Q 1
"RTN","ICDEXLK6",96,0)
 ;
"RTN","ICDEXLK6",97,0)
FILE(FILE,SYS) ; File
"RTN","ICDEXLK6",98,0)
 N ROOT,TMP,Y S ROOT=$G(FILE),TMP=$$FILE^ICDEX(ROOT) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",99,0)
 S SYS=$$SYS^ICDEX($G(SYS)),TMP=$$FILE^ICDEX(+SYS) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",100,0)
 S TMP=$$FILN($G(FILE)) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",101,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT S DIR(0)="SAO^DX:ICD DIAGNOSIS;PR:ICD OPERATION/PROCEDURE"
"RTN","ICDEXLK6",102,0)
 S DIR("A")=" Select ICD File:  ",DIR("PRE")="S X=$$FILT^ICDEXLK5(X)" S (DIR("?"),DIR("??"))="^D FILH^ICDEXLK5"
"RTN","ICDEXLK6",103,0)
 D ^DIR S Y=$S(Y="DX":80,Y="PR":80.1,1:-1)
"RTN","ICDEXLK6",104,0)
 Q Y
"RTN","ICDEXLK6",105,0)
FILT(X) ;   File Transform
"RTN","ICDEXLK6",106,0)
 S X=$$UP^XLFSTR(X) S:X["ICD9" X="DX" S:X["ICD0" X="PR" Q:X["^^" "^^"  Q:X["^" "^"  S:X["?" X="??" Q:X["?" X
"RTN","ICDEXLK6",107,0)
 S:X["DI"!(X["DX")!(X=80) X="DX" Q:X="DX" X  S:X["PR"!(X["OP")!(X=80.1) X="PR" Q:X="PR" X
"RTN","ICDEXLK6",108,0)
 Q "??"
"RTN","ICDEXLK6",109,0)
FILN(X) ;   File Number
"RTN","ICDEXLK6",110,0)
 N NUM,TMP S NUM=0,TMP=$$UP^XLFSTR(X) S:TMP["DI"!(TMP["DX")!(TMP["ICD9")!(TMP=80) NUM=80
"RTN","ICDEXLK6",111,0)
 S:TMP["PR"!(TMP["OP")!(TMP["ICD0")!(TMP=80.1) NUM=80.1 Q:$D(^ICDS("F",+NUM)) NUM
"RTN","ICDEXLK6",112,0)
 Q X
"RTN","ICDEXLK6",113,0)
FILH ;   File Help
"RTN","ICDEXLK6",114,0)
 W:$O(^ICDS("F",0))>0 !,?4,"Select from:",!
"RTN","ICDEXLK6",115,0)
 N FI S FI=0 F  S FI=$O(^ICDS("F",FI)) Q:+FI'>0  D
"RTN","ICDEXLK6",116,0)
 . N CD,RT,NM S (CD,RT)="" S:FI=80 CD="DX",RT="^ICD9(" S:FI=80.1 CD="PR",RT="^ICD0("
"RTN","ICDEXLK6",117,0)
 . S NM=$$GET1^DIQ(1,(+FI_","),.01) S:$E(NM,1,4)="ICD " NM=$P(NM,"ICD ",2)
"RTN","ICDEXLK6",118,0)
 . W !,?10,FI,?16,CD,?20,NM,?41,RT
"RTN","ICDEXLK6",119,0)
 Q
"RTN","ICDEXLK6",120,0)
 ;
"RTN","ICDEXLK6",121,0)
SYS(FILE,SYS) ; System
"RTN","ICDEXLK6",122,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT,ROOT,TMP,Y S ROOT=$G(FILE),TMP=$$FILE^ICDEX(ROOT),SYS=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXLK6",123,0)
 S:'$D(^ICDS("F",+TMP)) TMP=$$FILE^ICDEX(+SYS) S:'$D(^ICDS("F",+TMP)) TMP=$$FILN($G(FILE))
"RTN","ICDEXLK6",124,0)
 S FILE="" S:$D(^ICDS("F",+TMP)) FILE=TMP Q:$D(^ICDS("F",+($G(FILE)),+($G(SYS)))) +($G(SYS))
"RTN","ICDEXLK6",125,0)
 S SYS=$$CS^ICDEX($G(FILE)) Q:$D(^ICDS(+SYS,0)) +SYS
"RTN","ICDEXLK6",126,0)
 Q -1
"RTN","ICDEXLK6",127,0)
 ;
"RTN","ICDEXLK6",128,0)
CDT(CDT,SYS) ; Date
"RTN","ICDEXLK6",129,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT,ROOT,LO,NX,HI,TD,TMP,Y
"RTN","ICDEXLK6",130,0)
 S CDT=$G(CDT),SYS=$$SYS^ICDEX($G(SYS)),LO=$$IMP^ICDEX(1)
"RTN","ICDEXLK6",131,0)
 S NX=$$IMP^ICDEX(+($G(SYS))) S:LO?7N&(NX?7N)&(NX>LO) LO=NX S HI=$$DT^XLFDT,HI=$$FMADD^XLFDT(HI,(365*3))
"RTN","ICDEXLK6",132,0)
 I CDT?7N S:LO?7N&(CDT<LO) CDT=LO Q:CDT=LO CDT S:HI?7N&(CDT>HI) CDT=HI Q:CDT=HI CDT
"RTN","ICDEXLK6",133,0)
 Q:CDT?7N&(CDT'<LO)&(CDT'>HI) CDT
"RTN","ICDEXLK6",134,0)
 S TD=$$DT^XLFDT,TMP=$TR($$UP^XLFSTR($$FMTE^XLFDT(TD)),",","") S:TD>LO&(TD<HI) DIR("B")=TMP
"RTN","ICDEXLK6",135,0)
 S DIR(0)="DAO^"_LO_":"_HI_":EX"
"RTN","ICDEXLK6",136,0)
 S DIR("A")=" Enter a Versioning Date:  "
"RTN","ICDEXLK6",137,0)
 S DIR("PRE")="S X=$$CDTT^ICDEXLK5(X)" S (DIR("?"),DIR("??"))="^D CDTH^ICDEXLK5"
"RTN","ICDEXLK6",138,0)
 D ^DIR
"RTN","ICDEXLK6",139,0)
 Q Y
"RTN","ICDEXLK6",140,0)
CDTT(X) ;   Date Transform
"RTN","ICDEXLK6",141,0)
 S X=$$UP^XLFSTR(X) S:X["?" X="??" Q:X["?" X
"RTN","ICDEXLK6",142,0)
 Q X
"RTN","ICDEXLK6",143,0)
CDTH ;   Date Help
"RTN","ICDEXLK6",144,0)
 W !,?5,"Enter a date to be used to determine the appropriate codes"
"RTN","ICDEXLK6",145,0)
 W !,?5,"and terms that were in use on the date specified. ",!
"RTN","ICDEXLK6",146,0)
 I $G(LO)?7N,$G(HI)?7N D
"RTN","ICDEXLK6",147,0)
 . N BEG,END,MO,DY,YR S BEG=$$UP^XLFSTR($$FMTE^XLFDT($G(LO))),END=$$UP^XLFSTR($$FMTE^XLFDT($G(HI)))
"RTN","ICDEXLK6",148,0)
 . S MO=$P(BEG," ",1),DY=+($TR($P(BEG," ",2),",","")),YR=$P(BEG," ",3)
"RTN","ICDEXLK6",149,0)
 . W !,?5,"Date must be from ",BEG," to ",END,!
"RTN","ICDEXLK6",150,0)
 . W !,?5,"Examples of Valid Dates:",!
"RTN","ICDEXLK6",151,0)
 . W !,?9,MO," ",DY," ",YR," or "
"RTN","ICDEXLK6",152,0)
 . W DY," ",MO," ",$S($L(YR)=2:YR,$L(YR)=4:$E(YR,3,4),1:"")," or "
"RTN","ICDEXLK6",153,0)
 . W +($E(LO,6,7)),"/",$E(LO,4,5),"/",$E((1700+$E(LO,1,3)),3,4)," or "
"RTN","ICDEXLK6",154,0)
 . W $E(LO,4,5),$E(LO,6,7),$E((1700+$E(LO,1,3)),3,4)
"RTN","ICDEXLK6",155,0)
 I $G(LO)'?7N!($G(HI)'?7N) D
"RTN","ICDEXLK6",156,0)
 . W !,?5,"Examples of Valid Dates:",!
"RTN","ICDEXLK6",157,0)
 . W !,?9,"JAN 20 1957 or 20 JAN 57 or 1/20/57 or 012057"
"RTN","ICDEXLK6",158,0)
 W !,?9,"   T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc."
"RTN","ICDEXLK6",159,0)
 W !,?9,"   T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc.",!
"RTN","ICDEXLK6",160,0)
 W !,?5,"This date is sometimes called the 'versioning date' (VistA) or"
"RTN","ICDEXLK6",161,0)
 W !,?5,"the 'date service was provided to the patient' (HIPAA)"
"RTN","ICDEXLK6",162,0)
 Q
"RTN","ICDEXLK6",163,0)
 ;
"RTN","ICDEXLK6",164,0)
DIC0(X) ; Correct DIC(0) for a versioned file
"RTN","ICDEXLK6",165,0)
 ;
"RTN","ICDEXLK6",166,0)
 ; Not used  B - There are no pointer/variable pointers
"RTN","ICDEXLK6",167,0)
 ;               in index fields
"RTN","ICDEXLK6",168,0)
 ;           C - Cross-Reference suppression not allowed,
"RTN","ICDEXLK6",169,0)
 ;               entries must be unique
"RTN","ICDEXLK6",170,0)
 ;           I - If FileMan passes control to ICDEXLK, 
"RTN","ICDEXLK6",171,0)
 ;               then "I"gnore no longer applies
"RTN","ICDEXLK6",172,0)
 ;           K - There is no primary Key (may change in
"RTN","ICDEXLK6",173,0)
 ;               the future)
"RTN","ICDEXLK6",174,0)
 ;           L - "Learn-As-You-Go" not allowed LAYGO is killed
"RTN","ICDEXLK6",175,0)
 ;           n - Only Codes, Text and IENs are allowed.  "n"
"RTN","ICDEXLK6",176,0)
 ;               Returns too many values
"RTN","ICDEXLK6",177,0)
 ;           U - Only Codes, Text and IENs are allowed.
"RTN","ICDEXLK6",178,0)
 ;           V - Verify is always required when one entry is
"RTN","ICDEXLK6",179,0)
 ;               found
"RTN","ICDEXLK6",180,0)
 K LAYGO S X=$G(X)  K DINUM,DLAYGO N CHR,STR F CHR="C","B","K","L","n","U","T","V","I" D
"RTN","ICDEXLK6",181,0)
 . F  Q:X'[CHR  S X=$P(X,CHR,1)_$P(X,CHR,2,299)
"RTN","ICDEXLK6",182,0)
 S STR="" F CHR="A","E","Q","M","F","N","O","S","X","Z" S:X[CHR STR=STR_CHR
"RTN","ICDEXLK6",183,0)
 ;
"RTN","ICDEXLK6",184,0)
 ;           If non-numeric, and you are going to "A" ask 
"RTN","ICDEXLK6",185,0)
 ;           then you are going to "E" echo
"RTN","ICDEXLK6",186,0)
 S:STR["A"&(STR'["E")&(STR'["N") STR=STR_"E"
"RTN","ICDEXLK6",187,0)
 ;
"RTN","ICDEXLK6",188,0)
 ;           If you are going to "E" echo, and X does not 
"RTN","ICDEXLK6",189,0)
 ;           exist, then you will "A" ask
"RTN","ICDEXLK6",190,0)
 S:STR["E"&(STR'["A")&('$L($G(X))) STR=STR_"A"
"RTN","ICDEXLK6",191,0)
 S:STR'["A"&(STR'["E")&(STR'["X") STR=STR_"X"
"RTN","ICDEXLK6",192,0)
 S X=STR
"RTN","ICDEXLK6",193,0)
 Q X
"RTN","ICDEXLK6",194,0)
 ;
"RTN","ICDEXLK6",195,0)
SAV(X,DIC) ;   Save Defaults
"RTN","ICDEXLK6",196,0)
 N NUM,CM,VAL,NAM,ID,CUR,FUT,KEY,FILE,ROOT,SUB
"RTN","ICDEXLK6",197,0)
 Q:+($G(DUZ))'>0  Q:'$L($G(DIC))  Q:+($G(Y))'>0
"RTN","ICDEXLK6",198,0)
 S ROOT=$$ROOT^ICDEX(DIC) Q:'$L(ROOT)
"RTN","ICDEXLK6",199,0)
 S SUB=$TR(ROOT,"^(,","") Q:'$L(SUB)
"RTN","ICDEXLK6",200,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0
"RTN","ICDEXLK6",201,0)
 Q:"^80^80.1^"'[("^"_FILE_"^") ""
"RTN","ICDEXLK6",202,0)
 S CM=$S(FILE=80:" ICD Diagnosis",FILE=80.1:" ICD Procedure",1:"")
"RTN","ICDEXLK6",203,0)
 S NUM=+($G(DUZ)) Q:+NUM'>0
"RTN","ICDEXLK6",204,0)
 S VAL=$G(Y) Q:'$L(VAL)  S NAM=$$GET1^DIQ(200,(NUM_","),.01) Q:'$L(NAM)
"RTN","ICDEXLK6",205,0)
 S CM=FILE_CM,KEY=$E(CM,1,18) S:$L(KEY)'>16 KEY=KEY_$J(" ",17-$L(KEY))
"RTN","ICDEXLK6",206,0)
 S ID=NUM_" "_KEY S CUR=$$DT^XLFDT,FUT=$$FMADD^XLFDT(CUR,60)
"RTN","ICDEXLK6",207,0)
 S ^XTMP(ID,0)=FUT_"^"_CUR_"^"_CM,^XTMP(ID,SUB)=VAL
"RTN","ICDEXLK6",208,0)
 S:$D(@(ROOT_+($G(Y))_",0)")) ^DISV(DUZ,ROOT)=+($G(Y))
"RTN","ICDEXLK6",209,0)
 Q
"RTN","ICDEXLK6",210,0)
RET(DIC) ;   Retrieve Defaults
"RTN","ICDEXLK6",211,0)
 N NUM,CM,NAM,ID,CUR,FUT,KEY,FILE,ROOT,SUB
"RTN","ICDEXLK6",212,0)
 S ROOT=$$ROOT^ICDEX($G(DIC)) Q:'$L(ROOT) ""
"RTN","ICDEXLK6",213,0)
 S SUB=$TR(ROOT,"^(,","") Q:'$L(SUB)
"RTN","ICDEXLK6",214,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0 ""  Q:"^80^80.1^"'[("^"_FILE_"^") ""
"RTN","ICDEXLK6",215,0)
 S CM=$S(FILE=80:" ICD Diagnosis",FILE=80.1:" ICD Procedure",1:"") Q:'$L(CM)
"RTN","ICDEXLK6",216,0)
 S NUM=+($G(DUZ)) Q:+NUM'>0 ""  S NAM=$$GET1^DIQ(200,(NUM_","),.01) Q:'$L(NAM) ""
"RTN","ICDEXLK6",217,0)
 S CM=FILE_CM,KEY=$E(CM,1,18) S:$L(KEY)'>16 KEY=KEY_$J(" ",17-$L(KEY))
"RTN","ICDEXLK6",218,0)
 S ID=NUM_" "_KEY S X=$G(^XTMP(ID,SUB))
"RTN","ICDEXLK6",219,0)
 S:+X'>0&(+($G(^DISV(NUM,ROOT)))>0) X=+($G(^DISV(NUM,ROOT)))
"RTN","ICDEXLK6",220,0)
 Q X
"RTN","ICDEXLK6",221,0)
PA(ICD,X) ;   Parse Array
"RTN","ICDEXLK6",222,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,ICDI,ICDLEN,ICDC K ^UTILITY($J,"W") Q:'$D(ICD)
"RTN","ICDEXLK6",223,0)
 S ICDLEN=+($G(X)) S:+ICDLEN'>0 ICDLEN=79 S ICDC=+($G(ICD)) S:+($G(ICDC))'>0 ICDC=$O(ICD(" "),-1) Q:+ICDC'>0
"RTN","ICDEXLK6",224,0)
 S DIWL=1,DIWF="C"_+ICDLEN S ICDI=0 F  S ICDI=$O(ICD(ICDI)) Q:+ICDI=0  S X=$G(ICD(ICDI)) D ^DIWP
"RTN","ICDEXLK6",225,0)
 K ICD S (ICDC,ICDI)=0 F  S ICDI=$O(^UTILITY($J,"W",1,ICDI)) Q:+ICDI=0  D
"RTN","ICDEXLK6",226,0)
 . S ICD(ICDI)=$$TM($G(^UTILITY($J,"W",1,ICDI,0))," "),ICDC=ICDC+1
"RTN","ICDEXLK6",227,0)
 S:$L(ICDC) ICD=ICDC K ^UTILITY($J,"W")
"RTN","ICDEXLK6",228,0)
 Q
"RTN","ICDEXLK6",229,0)
OUT(X,Y,Z,ARY) ;   Output Array
"RTN","ICDEXLK6",230,0)
 K ARY N FILE,TERM,ROOT,IEN,FMT S ROOT=$G(X),IEN=+($G(Y)) Q:'$L(ROOT)  S FMT=$G(Z)
"RTN","ICDEXLK6",231,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")
"RTN","ICDEXLK6",232,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^")
"RTN","ICDEXLK6",233,0)
 S:FMT'>0 FMT=1 S:FMT>4 FMT=1 Q:'$D(@(ROOT_IEN_",0)"))
"RTN","ICDEXLK6",234,0)
 I +($G(FMT))=1!(+($G(FMT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK6",235,0)
 I +($G(FMT))=2!(+($G(FMT))=4) S TERM=$$LD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK6",236,0)
 Q:'$L(TERM)  Q:$P(TERM,"^",1)=-1  S ARY(1)=TERM Q:+($G(FMT))=1!(+($G(FMT))=3)
"RTN","ICDEXLK6",237,0)
 D:+($G(FMT))=2 PAR^ICDEX(.ARY,60) D:+($G(FMT))=4 PAR^ICDEX(.ARY,70)
"RTN","ICDEXLK6",238,0)
 Q
"RTN","ICDEXLK6",239,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK6",240,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK6",241,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK6",242,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK6",243,0)
 Q X
"RTN","ICDEXS")
0^44^B149154345
"RTN","ICDEXS",1,0)
ICDEXS ;SLC/KER - ICD Extractor - Support ;04/21/2014
"RTN","ICDEXS",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXS",3,0)
 ;               
"RTN","ICDEXS",4,0)
 ; Global Variables
"RTN","ICDEXS",5,0)
 ;    ^ICD0(              N/A
"RTN","ICDEXS",6,0)
 ;    ^ICD9(              N/A
"RTN","ICDEXS",7,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXS",8,0)
 ;               
"RTN","ICDEXS",9,0)
 ; External References
"RTN","ICDEXS",10,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXS",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXS",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXS",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXS",14,0)
 ;               
"RTN","ICDEXS",15,0)
EFF(FILE,IEN,EDT) ; returns effective date and status for code/modifier
"RTN","ICDEXS",16,0)
 ;
"RTN","ICDEXS",17,0)
 ; Input:
"RTN","ICDEXS",18,0)
 ; 
"RTN","ICDEXS",19,0)
 ;    FILE   File number 80/80.1 (required)
"RTN","ICDEXS",20,0)
 ;    IEN    ICD IEN (required)
"RTN","ICDEXS",21,0)
 ;    EDT    Date to check (FileMan format) (required)
"RTN","ICDEXS",22,0)
 ;
"RTN","ICDEXS",23,0)
 ; Output:  
"RTN","ICDEXS",24,0)
 ; 
"RTN","ICDEXS",25,0)
 ;   A 3 piece "^" delimited string
"RTN","ICDEXS",26,0)
 ;   
"RTN","ICDEXS",27,0)
 ;          1   Status
"RTN","ICDEXS",28,0)
 ;                1 - Active
"RTN","ICDEXS",29,0)
 ;                0 - Inactive  
"RTN","ICDEXS",30,0)
 ;          2   Inactivation Date
"RTN","ICDEXS",31,0)
 ;          3   Activation Date
"RTN","ICDEXS",32,0)
 ;     -or-
"RTN","ICDEXS",33,0)
 ;          -1^error message
"RTN","ICDEXS",34,0)
 ;
"RTN","ICDEXS",35,0)
 N EFF,EFFB,EFFDOS,EFFDT,EFFN,EFFST,EFILE,ICDY,ROOT,STR
"RTN","ICDEXS",36,0)
 I $G(IEN)=""!(IEN'?1N.N) Q "-1^No Code Selected"
"RTN","ICDEXS",37,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"
"RTN","ICDEXS",38,0)
 S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",39,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",40,0)
 Q:'$G(EDT) "-1^No Date Selected" S EDT=$P(EDT,".",1)
"RTN","ICDEXS",41,0)
 Q:EDT'?7N "-1^Invalid Date Selected"
"RTN","ICDEXS",42,0)
 S IEN=+($G(IEN)) Q:+IEN'>0 "-1^IEN Invalid"  S EFILE=ROOT_IEN_",66,"
"RTN","ICDEXS",43,0)
 S ICDY=$P($G(@(ROOT_+IEN_",1)")),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXS",44,0)
 S EDT=$S($G(EDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(EDT,,ICDY))+.001
"RTN","ICDEXS",45,0)
 S EFF=$O(@(EFILE_"""B"","_EDT_")"),-1) Q:'EFF "0^^"
"RTN","ICDEXS",46,0)
 S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")),STR=$G(@(EFILE_EFFN_",0)")) Q:STR="" "0^^"
"RTN","ICDEXS",47,0)
 S EFFDT=$P(STR,"^"),EFFST=$P(STR,"^",2),EFFB=0,EFF=+EFF
"RTN","ICDEXS",48,0)
 F  S EFF=$O(@(EFILE_"""B"","_EFF_")"),-1) Q:'EFF!EFFB  D
"RTN","ICDEXS",49,0)
 . S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) I 'EFFN S EFFB=1 Q
"RTN","ICDEXS",50,0)
 . S EFFDOS=$G(@(EFILE_EFFN_",0)")) I 'EFFDOS S EFFB=1 Q
"RTN","ICDEXS",51,0)
 . S EFFB=(EFFST'=$P(EFFDOS,"^",2))
"RTN","ICDEXS",52,0)
 S EFFDOS=$P($G(EFFDOS),"^")
"RTN","ICDEXS",53,0)
 I EFFST S $P(STR,"^",3,4)=(EFFDOS)_"^"_EFFDT
"RTN","ICDEXS",54,0)
 E  S $P(STR,"^",3,4)=EFFDT_"^"_(EFFDOS)
"RTN","ICDEXS",55,0)
 Q $P(STR,"^",2,4)
"RTN","ICDEXS",56,0)
IA(FILE,IEN) ; Initial Activation Date
"RTN","ICDEXS",57,0)
 ;
"RTN","ICDEXS",58,0)
 ; Input:
"RTN","ICDEXS",59,0)
 ; 
"RTN","ICDEXS",60,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",61,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",62,0)
 ;   
"RTN","ICDEXS",63,0)
 ; Output:
"RTN","ICDEXS",64,0)
 ; 
"RTN","ICDEXS",65,0)
 ;   $$IA   Initial Activation Date OR -1 ^ Error Message
"RTN","ICDEXS",66,0)
 ;   
"RTN","ICDEXS",67,0)
 N ROOT,EFF,HIS,NOD,ACT,INA
"RTN","ICDEXS",68,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",69,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",70,0)
 S IEN=$G(IEN) Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",71,0)
 S ACT="",EFF=""
"RTN","ICDEXS",72,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")")) Q:(EFF'?7N)!($L(ACT))  D  Q:$L(ACT)
"RTN","ICDEXS",73,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(ACT)
"RTN","ICDEXS",74,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",75,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA>0)&('$L(ACT)) ACT=EFF
"RTN","ICDEXS",76,0)
 S:'$L(ACT) ACT="-1^Initial activation date not found"
"RTN","ICDEXS",77,0)
 Q ACT
"RTN","ICDEXS",78,0)
LA(FILE,IEN,CDT) ; Last Current Activation Date
"RTN","ICDEXS",79,0)
 ;
"RTN","ICDEXS",80,0)
 ; Input:
"RTN","ICDEXS",81,0)
 ; 
"RTN","ICDEXS",82,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",83,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",84,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",85,0)
 ;   
"RTN","ICDEXS",86,0)
 ; Output:
"RTN","ICDEXS",87,0)
 ; 
"RTN","ICDEXS",88,0)
 ;   $$LA   Last Current Activation Date OR -1 ^ Error Message
"RTN","ICDEXS",89,0)
 ;   
"RTN","ICDEXS",90,0)
 N ROOT,EFF,HIS,NOD,ACT,INA,ICDF
"RTN","ICDEXS",91,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",92,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",93,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",94,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",95,0)
 S ACT="",EFF=CDT+.000001
"RTN","ICDEXS",96,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1) Q:(EFF'?7N)!($L(ACT))  D  Q:$L(ACT)
"RTN","ICDEXS",97,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(ACT)
"RTN","ICDEXS",98,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",99,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA>0)&('$L(ACT)) ACT=EFF
"RTN","ICDEXS",100,0)
 S:'$L(ACT) ACT="-1^Not activated on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",101,0)
 Q ACT
"RTN","ICDEXS",102,0)
LI(FILE,IEN,CDT) ; Last Current Inactivation Date
"RTN","ICDEXS",103,0)
 ; 
"RTN","ICDEXS",104,0)
 ; Input:
"RTN","ICDEXS",105,0)
 ; 
"RTN","ICDEXS",106,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",107,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",108,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",109,0)
 ;   
"RTN","ICDEXS",110,0)
 ; Output:
"RTN","ICDEXS",111,0)
 ; 
"RTN","ICDEXS",112,0)
 ;   $$LI   Last Current Inactivation Date OR -1 ^ Error Message
"RTN","ICDEXS",113,0)
 ;   
"RTN","ICDEXS",114,0)
 N ROOT,EFF,HIS,NOD,ACT,INA
"RTN","ICDEXS",115,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-12^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",116,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",117,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",118,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",119,0)
 S INA="",EFF=CDT+.000001
"RTN","ICDEXS",120,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1) Q:'$L(EFF)!(EFF'?7N)!($L(INA))  D  Q:$L(INA)
"RTN","ICDEXS",121,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(INA)
"RTN","ICDEXS",122,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",123,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA'>0)&('$L(INA)) INA=EFF
"RTN","ICDEXS",124,0)
 S:'$L(INA) INA="-1^Not inactivated on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",125,0)
 Q INA
"RTN","ICDEXS",126,0)
LS(FILE,IEN,CDT,FMT) ; Last Status
"RTN","ICDEXS",127,0)
 ; 
"RTN","ICDEXS",128,0)
 ; Input:
"RTN","ICDEXS",129,0)
 ; 
"RTN","ICDEXS",130,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",131,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",132,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",133,0)
 ;   FMT    Format 
"RTN","ICDEXS",134,0)
 ;            0  Last Status only (default)
"RTN","ICDEXS",135,0)
 ;            1  Last Status ^ Effective Date
"RTN","ICDEXS",136,0)
 ;   
"RTN","ICDEXS",137,0)
 ; Output:
"RTN","ICDEXS",138,0)
 ; 
"RTN","ICDEXS",139,0)
 ;   $$LS   Last Status (1/0) OR -1 ^ Error Message
"RTN","ICDEXS",140,0)
 ;   
"RTN","ICDEXS",141,0)
 N ROOT,EFF,HIS,NOD,ACT,INA,LEF,STA
"RTN","ICDEXS",142,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-12^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",143,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",144,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",145,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",146,0)
 S INA="",EFF=CDT+.000001 S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1)
"RTN","ICDEXS",147,0)
 Q:'$L(EFF)!(EFF'?7N) "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",148,0)
 S HIS="~",HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1)
"RTN","ICDEXS",149,0)
 Q:+HIS'>0 "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",150,0)
 S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)")),STA=$P(NOD,"^",2),LEF=$P(NOD,"^",1)
"RTN","ICDEXS",151,0)
 Q:"^0^1^"'[("^"_STA_"^") "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",152,0)
 S:+($G(FMT))>0&($G(LEF)?7N) STA=STA_"^"_LEF
"RTN","ICDEXS",153,0)
 Q STA
"RTN","ICDEXS",154,0)
 ;
"RTN","ICDEXS",155,0)
NUM(CODE) ; Convert Code to a Numeric Value (opposite of $$COD)
"RTN","ICDEXS",156,0)
 ;
"RTN","ICDEXS",157,0)
 ; Input:
"RTN","ICDEXS",158,0)
 ; 
"RTN","ICDEXS",159,0)
 ;    CODE   ICD CODE (required)
"RTN","ICDEXS",160,0)
 ;
"RTN","ICDEXS",161,0)
 ; Output:  
"RTN","ICDEXS",162,0)
 ; 
"RTN","ICDEXS",163,0)
 ;    NUM    Numerical representation of CODE
"RTN","ICDEXS",164,0)
 ;    
"RTN","ICDEXS",165,0)
 ;           or
"RTN","ICDEXS",166,0)
 ;           
"RTN","ICDEXS",167,0)
 ;           -1 on error
"RTN","ICDEXS",168,0)
 ;  
"RTN","ICDEXS",169,0)
 S CODE=$G(CODE) Q:'$L($G(CODE)) 0
"RTN","ICDEXS",170,0)
 N PSN,OUT,CHR,ERR S ERR=0,OUT="" F PSN=1:1:9 D
"RTN","ICDEXS",171,0)
 . S CHR=$E(CODE,PSN) S CHR=$S($L(CHR):$A(CHR),1:32),CHR=CHR-30
"RTN","ICDEXS",172,0)
 . S:CHR'>0 ERR=1 F  Q:$L(CHR)>1  S CHR="0"_CHR
"RTN","ICDEXS",173,0)
 . S:$L(CHR)'=2 ERR=1 S OUT=OUT_CHR
"RTN","ICDEXS",174,0)
 Q:ERR -1  S:+OUT>0 OUT="1"_OUT
"RTN","ICDEXS",175,0)
 Q OUT
"RTN","ICDEXS",176,0)
COD(NUM) ; Convert Numeric Value to a Code (opposite of $$NUM)
"RTN","ICDEXS",177,0)
 ;
"RTN","ICDEXS",178,0)
 ; Input:
"RTN","ICDEXS",179,0)
 ; 
"RTN","ICDEXS",180,0)
 ;    NUM    Numerical representation of an ICD Code (required)
"RTN","ICDEXS",181,0)
 ;
"RTN","ICDEXS",182,0)
 ; Output:  
"RTN","ICDEXS",183,0)
 ; 
"RTN","ICDEXS",184,0)
 ;    CODE   ICD Code
"RTN","ICDEXS",185,0)
 ;    
"RTN","ICDEXS",186,0)
 ;           or
"RTN","ICDEXS",187,0)
 ;           
"RTN","ICDEXS",188,0)
 ;           null on error
"RTN","ICDEXS",189,0)
 ;  
"RTN","ICDEXS",190,0)
 Q:'$L(NUM) ""  Q:$E(NUM,1)'=1 ""  S NUM=$E(NUM,2,$L(NUM))
"RTN","ICDEXS",191,0)
 N PSN,OUT,CHR,ADD S OUT=""
"RTN","ICDEXS",192,0)
 F PSN=1:2 S CHR=$E(NUM,PSN,(PSN+1)) Q:'$L(CHR)  D
"RTN","ICDEXS",193,0)
 . S CHR=+CHR+30 S ADD="" S:CHR'=32 ADD=$C(CHR) S:$L(ADD) OUT=OUT_ADD
"RTN","ICDEXS",194,0)
 Q OUT
"RTN","ICDEXS",195,0)
IE(X) ; Internal or External
"RTN","ICDEXS",196,0)
 ;
"RTN","ICDEXS",197,0)
 ; Input:
"RTN","ICDEXS",198,0)
 ;
"RTN","ICDEXS",199,0)
 ;   X     ICD code or IEN
"RTN","ICDEXS",200,0)
 ;
"RTN","ICDEXS",201,0)
 ; Output:
"RTN","ICDEXS",202,0)
 ; 
"RTN","ICDEXS",203,0)
 ;   $$IE  Set of Codes
"RTN","ICDEXS",204,0)
 ;   
"RTN","ICDEXS",205,0)
 ;           I  X is in an internal format (IEN)
"RTN","ICDEXS",206,0)
 ;           E  X is in an external format (Code)
"RTN","ICDEXS",207,0)
 ;           
"RTN","ICDEXS",208,0)
 ;           Null on error
"RTN","ICDEXS",209,0)
 ;
"RTN","ICDEXS",210,0)
 N IN,OUT
"RTN","ICDEXS",211,0)
 S IN=$G(X) Q:'$L(X) ""
"RTN","ICDEXS",212,0)
 Q:IN?1N.N&('$D(^ICD9("BA",(IN_" "))))&('$D(^ICD0("BA",(IN_" ")))) "I"
"RTN","ICDEXS",213,0)
 Q:$D(^ICD9("BA",(IN_" ")))!($D(^ICD0("BA",(IN_" ")))) "E"
"RTN","ICDEXS",214,0)
 Q ""
"RTN","ICDEXS",215,0)
FILE(X) ; File Number
"RTN","ICDEXS",216,0)
 ;
"RTN","ICDEXS",217,0)
 ; Input:   
"RTN","ICDEXS",218,0)
 ; 
"RTN","ICDEXS",219,0)
 ;   X     File/Identifier/Coding System/Code (required)
"RTN","ICDEXS",220,0)
 ;   
"RTN","ICDEXS",221,0)
 ; Output:  
"RTN","ICDEXS",222,0)
 ; 
"RTN","ICDEXS",223,0)
 ;   FILE  File Number or -1 on error
"RTN","ICDEXS",224,0)
 ;   
"RTN","ICDEXS",225,0)
 N ICDX,ICDF S (ICDX,X)=$G(X) Q:'$L(X) -1  N ICDR
"RTN","ICDEXS",226,0)
 I X?1N.N Q:X?1N&(+X=0) 80.1  Q:X?1N&(+X=9) 80
"RTN","ICDEXS",227,0)
 S ICDR=$$ROOT(X) Q:$D(^ICD9("BA",(X_" "))) 80  Q:$D(^ICD0("BA",(X_" "))) 80.1
"RTN","ICDEXS",228,0)
 Q:X=80 80  Q:X=80.1 80.1  Q:X["ICD9" 80  Q:X["ICD0" 80.1  Q:X["DX"!(X["DIAG") 80  Q:X["PR"!(X["PROC")!(X["OP")!(X["PCS") 80.1
"RTN","ICDEXS",229,0)
 I ICDX?1N.N I ICDX'["." Q:$D(^ICD9("ABA",+ICDX)) 80 Q:$D(^ICD0("ABA",+ICDX)) 80.1
"RTN","ICDEXS",230,0)
 Q:$D(^ICD9("BA",(X_" "))) 80  Q:$D(^ICD0("BA",(X_" "))) 80.1
"RTN","ICDEXS",231,0)
 Q:$D(^ICD9("AVA",(X_" "))) 80  Q:$D(^ICD0("AVA",(X_" "))) 80.1
"RTN","ICDEXS",232,0)
 Q:$D(^ICD9("AEXC",(X_" "))) 80  Q:$D(^ICD0("AEXC",(X_" "))) 80.1
"RTN","ICDEXS",233,0)
 Q:ICDR["ICD9" 80  Q:ICDR["ICD0" 80.1
"RTN","ICDEXS",234,0)
 Q -1
"RTN","ICDEXS",235,0)
ROOT(X) ; Global Root
"RTN","ICDEXS",236,0)
 ;
"RTN","ICDEXS",237,0)
 ; Input:   
"RTN","ICDEXS",238,0)
 ; 
"RTN","ICDEXS",239,0)
 ;   X     File Number, File Name, Root, Identifier
"RTN","ICDEXS",240,0)
 ;         or Coding System (required)
"RTN","ICDEXS",241,0)
 ;   
"RTN","ICDEXS",242,0)
 ; Output:  
"RTN","ICDEXS",243,0)
 ; 
"RTN","ICDEXS",244,0)
 ;   ROOT  Global Root for File or null
"RTN","ICDEXS",245,0)
 ;   
"RTN","ICDEXS",246,0)
 N ICDR,ICDF S ICDR=$$RY($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",247,0)
 S ICDR=$$RC($G(X)) Q:$L(ICDR) ICDR  S X=$$UP^XLFSTR($G(X))
"RTN","ICDEXS",248,0)
 S ICDR=$$RF($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",249,0)
 S ICDR=$$RR($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",250,0)
 S:X?1N.N ICDR=$$RS(+($G(X))) Q:$L(ICDR) ICDR
"RTN","ICDEXS",251,0)
 Q ""
"RTN","ICDEXS",252,0)
RY(SYS) ; Global Root from System
"RTN","ICDEXS",253,0)
 N FILE,ROOT S SYS=$G(SYS) Q:SYS'?1N.N ""  Q:SYS=80!(SYS=80.1) ""  Q:'$D(^ICDS(+SYS)) ""
"RTN","ICDEXS",254,0)
 S FILE=$P($G(^ICDS(+SYS,0)),"^",3) Q:+FILE'>0 ""  S ROOT=$$RF(FILE) Q:$L(ROOT) ROOT
"RTN","ICDEXS",255,0)
 Q ""
"RTN","ICDEXS",256,0)
RF(FILE) ; Global Root from File
"RTN","ICDEXS",257,0)
 Q:$G(FILE)=80 "^ICD9("  Q:$G(FILE)=80.1 "^ICD0("
"RTN","ICDEXS",258,0)
 Q ""
"RTN","ICDEXS",259,0)
RR(ID) ; Global Root from Root or Identifier
"RTN","ICDEXS",260,0)
 Q:ID["ICD9" "^ICD9(" Q:ID["ICD0" "^ICD0("  Q:ID="DX"!(ID["DIA") "^ICD9("  Q:ID="PR"!(ID["PRO")!(ID["OP") "^ICD0("
"RTN","ICDEXS",261,0)
 Q:ID="ICD"!(ID="10D") "^ICD9("  Q:ID="ICP"!(ID="10P") "^ICD0("
"RTN","ICDEXS",262,0)
 Q ""
"RTN","ICDEXS",263,0)
RS(SYS) ; Global Root from Coding System
"RTN","ICDEXS",264,0)
 S SYS=$TR(SYS," ","")  Q:$D(^ICD9("ABA",+SYS)) "^ICD9(" Q:$D(^ICD0("ABA",+SYS)) "^ICD0("
"RTN","ICDEXS",265,0)
 Q ""
"RTN","ICDEXS",266,0)
RC(COD) ; Global Root from Code
"RTN","ICDEXS",267,0)
 Q:$D(^ICD9("BA",($G(COD)_" "))) "^ICD9("  Q:$D(^ICD0("BA",($G(COD)_" "))) "^ICD0("
"RTN","ICDEXS",268,0)
 Q:$D(^ICD9("AVA",(X_" "))) "^ICD9("  Q:$D(^ICD0("AVA",(X_" "))) "^ICD0("
"RTN","ICDEXS",269,0)
 Q:$D(^ICD9("AEXC",(X_" "))) "^ICD9("  Q:$D(^ICD0("AEXC",(X_" "))) "^ICD0("
"RTN","ICDEXS",270,0)
 Q ""
"RTN","ICDEXS",271,0)
 ; 
"RTN","ICDEXS",272,0)
SYS(SYS,CDT,FMT) ; Resolve System (uses file 80.4)
"RTN","ICDEXS",273,0)
 ;
"RTN","ICDEXS",274,0)
 ; Input:
"RTN","ICDEXS",275,0)
 ;
"RTN","ICDEXS",276,0)
 ;   SYS     System/Source Abbreviation/System Identifier/Code
"RTN","ICDEXS",277,0)
 ;   CDT     Date (optional)
"RTN","ICDEXS",278,0)
 ;   FMT     Output Format (optional)
"RTN","ICDEXS",279,0)
 ;   
"RTN","ICDEXS",280,0)
 ;            I  Internal (default)
"RTN","ICDEXS",281,0)
 ;            E  External
"RTN","ICDEXS",282,0)
 ;            B  Both Internal ^ External
"RTN","ICDEXS",283,0)
 ;
"RTN","ICDEXS",284,0)
 ; Output:
"RTN","ICDEXS",285,0)
 ; 
"RTN","ICDEXS",286,0)
 ;   $$SYS System (numeric or alpha)
"RTN","ICDEXS",287,0)
 ;   
"RTN","ICDEXS",288,0)
 ;            Internal  External
"RTN","ICDEXS",289,0)
 ;               1      ICD-9-CM
"RTN","ICDEXS",290,0)
 ;               2      ICD-9 Proc
"RTN","ICDEXS",291,0)
 ;              30      ICD-10-CM
"RTN","ICDEXS",292,0)
 ;              31      ICD-10-PCS
"RTN","ICDEXS",293,0)
 ;   
"RTN","ICDEXS",294,0)
 ;         or
"RTN","ICDEXS",295,0)
 ;            -1   on error
"RTN","ICDEXS",296,0)
 ;            
"RTN","ICDEXS",297,0)
 N ICDC,ICDD,ICDF,ICDI,ICDO,ICDT,ICDU,ICDX,ICDT S ICDI=$G(SYS) Q:'$L(ICDI) -1
"RTN","ICDEXS",298,0)
 S ICDD=$P($G(CDT),".",1) S ICDF=$$UP^XLFSTR($G(FMT)) S:'$L(ICDF) ICDF="I"
"RTN","ICDEXS",299,0)
 S:"^E^B^"'[("^"_ICDF_"^") ICDF="I" S ICDU=$$UP^XLFSTR(ICDI)
"RTN","ICDEXS",300,0)
 S ICDO=$$SC(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",301,0)
 I ICDI?1N.N Q:$D(^ICDS(+ICDI)) $S(ICDF["B":(+ICDI_"^"_$$SNAM(+ICDI)),ICDF["E":$$SNAM(+ICDI),1:+ICDI)
"RTN","ICDEXS",302,0)
 S ICDO=$$SS(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",303,0)
 S ICDO=$$SM(ICDI,ICDD) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",304,0)
 S ICDO=$$SP(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",305,0)
 Q -1
"RTN","ICDEXS",306,0)
SS(X) ; System from Coding System file 80.4
"RTN","ICDEXS",307,0)
 N ICDC,ICDI,ICDO,ICDU S ICDI=$G(X) Q:'$L(ICDI) ""  S ICDU=$$UP^XLFSTR(ICDI)
"RTN","ICDEXS",308,0)
 S ICDO="",ICDC="AZ" F  S ICDC=$O(^ICDS(ICDC)) Q:'$L(ICDC)  D  Q:+ICDO>0
"RTN","ICDEXS",309,0)
 . Q:ICDC="F"  N ICDT S ICDT=$O(^ICDS(ICDC,ICDI,0))
"RTN","ICDEXS",310,0)
 . S:+ICDT'>0 ICDT=$O(^ICDS(ICDC,ICDU,0)) S:+ICDT>0 ICDO=ICDT
"RTN","ICDEXS",311,0)
 Q ICDO
"RTN","ICDEXS",312,0)
SM(X,CDT) ; System from a Mnemonic
"RTN","ICDEXS",313,0)
 N ICDD,ICDX,ICDO,ICDU S ICDU=$$UP^XLFSTR($G(X)) Q:'$L(ICDU) ""  S ICDD=$G(CDT) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXS",314,0)
 S ICDX=$P($G(^ICDS(30,0)),"^",4),ICDO=""
"RTN","ICDEXS",315,0)
 I (ICDU["DIAG"!(ICDU["ICD9")!(ICDU="80")!(ICDU="DX")) I ICDD?7N,ICDX?7N S ICDO=$S(ICDD<ICDX:1,1:30)
"RTN","ICDEXS",316,0)
 I (ICDU["PROC"!(ICDU["OPER")!(ICDU["ICD0")!(ICDU["ICP9")!(ICDU="80.1")!(ICDU="PR")) I ICDD?7N,ICDX?7N S ICDO=$S(ICDD<ICDX:2,1:31)
"RTN","ICDEXS",317,0)
 Q ICDO
"RTN","ICDEXS",318,0)
SP(X) ; System from Pattern Match
"RTN","ICDEXS",319,0)
 N ICDT,ICDI,ICDO S ICDO="",ICDT=$$UP^XLFSTR($G(X)) Q:'$L(ICDT) ""
"RTN","ICDEXS",320,0)
 F  Q:ICDT'["ICD"  S ICDT=$P(ICDT,"ICD",1)_$P(ICDT,"ICD",2)
"RTN","ICDEXS",321,0)
 Q:'$L(ICDT) ""  S ICDI="" F  S ICDI=$O(^ICDS("B",ICDI)) Q:'$L(ICDI)  D  Q:+ICDO>0
"RTN","ICDEXS",322,0)
 . S:ICDT["9"&(ICDT["D")&(ICDT'["P")&(ICDI["9")&(ICDI["CM") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",323,0)
 . S:ICDT["9"&((ICDT["P")!(ICDT["O"))&(ICDI["9")&(ICDI["P") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",324,0)
 . S:ICDT["10"&(ICDT["D")&(ICDT'["P")&(ICDI["10")&(ICDI["CM") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",325,0)
 . S:ICDT["10"&((ICDT["P")!(ICDT["O"))&(ICDI["10")&(ICDI["P") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",326,0)
 Q ICDO
"RTN","ICDEXS",327,0)
SC(X) ; System from Code
"RTN","ICDEXS",328,0)
 N ICDI,ICDC,ICDO,ICDR,ICDU S ICDI=$G(X) S ICDC=$TR(ICDI," ","") Q:'$L(ICDC) ""
"RTN","ICDEXS",329,0)
 S ICDU=$$UP^XLFSTR(ICDC) S ICDO="" F ICDR="^ICD9(","^ICD0(" D  Q:+ICDO>0
"RTN","ICDEXS",330,0)
 . N TMP F TMP=ICDC,ICDU D  Q:+ICDO>0
"RTN","ICDEXS",331,0)
 . . N ICDS,ICDV,ICDE S ICDS=0 F  S ICDS=$O(@(ICDR_"""ABA"","_ICDS_")")) Q:+ICDS'>0  D  Q:ICDO>0
"RTN","ICDEXS",332,0)
 . . . S:$D(@(ICDR_"""ABA"","_ICDS_","""_TMP_" "")")) ICDO=ICDS
"RTN","ICDEXS",333,0)
 . . Q:ICDO>0  S ICDV=$O(@(ICDR_"""AVA"","""_TMP_" "",0)"))
"RTN","ICDEXS",334,0)
 . . S:+ICDV>0 ICDO=$P($G(@(ICDR_+ICDV_",1)")),"^",1) Q:ICDO>0
"RTN","ICDEXS",335,0)
 . . S ICDE=$O(@(ICDR_"""AEXC"","""_TMP_" "",0)"))
"RTN","ICDEXS",336,0)
 . . S:+ICDE>0 ICDO=$P($G(@(ICDR_+ICDE_",1)")),"^",1) Q:ICDO>0
"RTN","ICDEXS",337,0)
 Q ICDO
"RTN","ICDEXS",338,0)
SINFO(SYS,CDT) ; System Info (uses file 80.4)
"RTN","ICDEXS",339,0)
 ;
"RTN","ICDEXS",340,0)
 ; Input:
"RTN","ICDEXS",341,0)
 ;
"RTN","ICDEXS",342,0)
 ;   SYS      System/Source Abbreviation/System Identifier/Code
"RTN","ICDEXS",343,0)
 ;   CDT      Date (optional)
"RTN","ICDEXS",344,0)
 ;
"RTN","ICDEXS",345,0)
 ; Output:
"RTN","ICDEXS",346,0)
 ; 
"RTN","ICDEXS",347,0)
 ;   $$SINFO System Info (numeric or alpha)
"RTN","ICDEXS",348,0)
 ;   
"RTN","ICDEXS",349,0)
 ;            Internal  External
"RTN","ICDEXS",350,0)
 ;               1      IEN to file 80.4
"RTN","ICDEXS",351,0)
 ;               2      Coding System
"RTN","ICDEXS",352,0)
 ;               3      Coding System Nomenclature
"RTN","ICDEXS",353,0)
 ;               4      Coding system Abbreviation
"RTN","ICDEXS",354,0)
 ;               5      File where the Coding System is stored
"RTN","ICDEXS",355,0)
 ;               6      Implementation Date
"RTN","ICDEXS",356,0)
 ;   
"RTN","ICDEXS",357,0)
 ;         or
"RTN","ICDEXS",358,0)
 ;            -1   on error
"RTN","ICDEXS",359,0)
 ;            
"RTN","ICDEXS",360,0)
 N ICDD,ICDS,ICDN,ICDT
"RTN","ICDEXS",361,0)
 S ICDD=$S($G(CDT)'?7N:$$DT^XLFDT,1:$G(CDT))
"RTN","ICDEXS",362,0)
 S ICDS=$$SYS($G(SYS),ICDD,"I")
"RTN","ICDEXS",363,0)
 Q:+ICDS'>0 "-1^Coding System Unknown"
"RTN","ICDEXS",364,0)
 S ICDN=$G(^ICDS(+ICDS,0)) Q:'$L(ICDN) "-1^Coding System not found"
"RTN","ICDEXS",365,0)
 S ICDT=$S($P(ICDN,"^",3)=80:"Diagnosis",$P(ICDN,"^",3)=80.1:"Procedure",1:"")
"RTN","ICDEXS",366,0)
 S SYS=ICDS_"^"_ICDN S:$L(ICDT) SYS=SYS_"^"_ICDT
"RTN","ICDEXS",367,0)
 Q SYS
"RTN","ICDEXS",368,0)
SNAM(SYS) ; System Name
"RTN","ICDEXS",369,0)
 ;
"RTN","ICDEXS",370,0)
 ; Input:
"RTN","ICDEXS",371,0)
 ;
"RTN","ICDEXS",372,0)
 ;   SYS    Numeric System Identifier (field 1.1)
"RTN","ICDEXS",373,0)
 ;
"RTN","ICDEXS",374,0)
 ; Output:
"RTN","ICDEXS",375,0)
 ; 
"RTN","ICDEXS",376,0)
 ;   $$SYS  Character System Name
"RTN","ICDEXS",377,0)
 ;
"RTN","ICDEXS",378,0)
 ;          or  -1   on error
"RTN","ICDEXS",379,0)
 ;            
"RTN","ICDEXS",380,0)
 S SYS=+($G(SYS)) S SYS=$P($G(^ICDS(+SYS,0)),"^",1)
"RTN","ICDEXS",381,0)
 Q $S($L(SYS):SYS,1:-1)
"RTN","ICDEXS",382,0)
SAB(X,Y) ; Source Abbreviation
"RTN","ICDEXS",383,0)
 ;
"RTN","ICDEXS",384,0)
 ; Input:
"RTN","ICDEXS",385,0)
 ;
"RTN","ICDEXS",386,0)
 ;   X     Source Abbreviation or Identifier
"RTN","ICDEXS",387,0)
 ;   Y     Date used to determine SAB
"RTN","ICDEXS",388,0)
 ;
"RTN","ICDEXS",389,0)
 ; Output:
"RTN","ICDEXS",390,0)
 ;
"RTN","ICDEXS",391,0)
 ;   $$SAB 3 Character System Identifier
"RTN","ICDEXS",392,0)
 ;
"RTN","ICDEXS",393,0)
 N SYS,CDT,TY,VR,OUT,TMP,ICD10 S SYS=$G(X),CDT=$G(Y)
"RTN","ICDEXS",394,0)
 S:CDT'?7N CDT=$$DT^XLFDT S ICD10=+($$IMP^ICDEX(30))
"RTN","ICDEXS",395,0)
 S TMP=$$SYS(SYS,CDT) S:+TMP>0&($D(^ICDS(+TMP,0))) SYS=TMP
"RTN","ICDEXS",396,0)
 Q:+SYS=1 "ICD"  Q:+SYS=2 "ICP"  Q:+SYS=30 "10D"  Q:+SYS=31 "10P"
"RTN","ICDEXS",397,0)
 Q:SYS="DIAG" $S(CDT'<ICD10:"10D",1:"ICD")
"RTN","ICDEXS",398,0)
 Q:SYS["ICD9" $S(CDT'<ICD10:"10D",1:"ICD")
"RTN","ICDEXS",399,0)
 Q:SYS="PROC" $S(CDT'<ICD10:"10P",1:"ICP")
"RTN","ICDEXS",400,0)
 Q:SYS["ICD0" $S(CDT'<ICD10:"10P",1:"ICP")
"RTN","ICDEXS",401,0)
 Q:"^ICD^ICP^10D^10P^"[("^"_SYS_"^") SYS
"RTN","ICDEXS",402,0)
 Q ""
"RTN","ICDEXS",403,0)
EXC(FILE,IEN) ; Exclude From lookup
"RTN","ICDEXS",404,0)
 ;
"RTN","ICDEXS",405,0)
 ; Input:
"RTN","ICDEXS",406,0)
 ;
"RTN","ICDEXS",407,0)
 ;   FILE   File number 80 or 80.1
"RTN","ICDEXS",408,0)
 ;   IEN    Internal Entry Number
"RTN","ICDEXS",409,0)
 ;
"RTN","ICDEXS",410,0)
 ; Output:
"RTN","ICDEXS",411,0)
 ;
"RTN","ICDEXS",412,0)
 ;   $$EXC  Boolean value 1 = Yes  0 = No
"RTN","ICDEXS",413,0)
 ;
"RTN","ICDEXS",414,0)
 N ICDF,ICDI,ICDR S ICDF=+($G(FILE)),ICDI=+($G(IEN)) Q:"^80^80.1^"'[("^"_ICDF_"^") 0
"RTN","ICDEXS",415,0)
 S ICDR=$$ROOT(ICDF) Q:"^ICD9(^ICD0(^"'[("^"_$E(ICDR,2,$L(ICDR))_"^") 0  Q:'$D(@(ICDR_+ICDI_",0)")) 0
"RTN","ICDEXS",416,0)
 Q $S(+($$GET1^DIQ(ICDF,(+ICDI_","),1.8))'>0:0,1:1)
"RTN","ICDEXS2")
0^67^B4261248
"RTN","ICDEXS2",1,0)
ICDEXS2 ;SLC/KER - ICD Extractor - Support ;04/21/2014
"RTN","ICDEXS2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDEXS2",3,0)
 ;               
"RTN","ICDEXS2",4,0)
VER(SYS,REL) ; Coding System Version
"RTN","ICDEXS2",5,0)
 ;
"RTN","ICDEXS2",6,0)
 ; Input:
"RTN","ICDEXS2",7,0)
 ;
"RTN","ICDEXS2",8,0)
 ;   SYS     System (pointer to file 80.4)
"RTN","ICDEXS2",9,0)
 ;   REL     Relationship to System (optional)
"RTN","ICDEXS2",10,0)
 ;   
"RTN","ICDEXS2",11,0)
 ;               0   N/A - Current Version (default)
"RTN","ICDEXS2",12,0)
 ;               1   Next Version
"RTN","ICDEXS2",13,0)
 ;              -1   Previous Version
"RTN","ICDEXS2",14,0)
 ; Output:
"RTN","ICDEXS2",15,0)
 ; 
"RTN","ICDEXS2",16,0)
 ;   $$VER   This is a 5 piece string containing:
"RTN","ICDEXS2",17,0)
 ;   
"RTN","ICDEXS2",18,0)
 ;               1   Coding System (pointer to file 80.4)
"RTN","ICDEXS2",19,0)
 ;               2   Coding System Nomenclature
"RTN","ICDEXS2",20,0)
 ;               3   Coding System Abbreviation
"RTN","ICDEXS2",21,0)
 ;               4   File Number containing the Coding System
"RTN","ICDEXS2",22,0)
 ;               5   Date Coding System was Implemented
"RTN","ICDEXS2",23,0)
 ;           or
"RTN","ICDEXS2",24,0)
 ;              -1   on error
"RTN","ICDEXS2",25,0)
 ;              
"RTN","ICDEXS2",26,0)
 N ICDS,ICDR,ICDT,ICDO,ICDA,ICDF,ICDI,ICDD,ICDV,ICDC
"RTN","ICDEXS2",27,0)
 S ICDO="",ICDS=+($G(SYS)),ICDR=+($G(REL)),ICDT=$G(^ICDS(+ICDS,0)),ICDC=$P(ICDT,"^",4)
"RTN","ICDEXS2",28,0)
 I +ICDR=0,ICDS>0,$L(ICDT,"^")>3 S ICDO=ICDS_"^"_ICDT Q ICDO
"RTN","ICDEXS2",29,0)
 S ICDF=$$FILE^ICDEX(ICDS) Q:+ICDF'>0 "-1^No future coding system found"
"RTN","ICDEXS2",30,0)
 S ICDI=0 F  S ICDI=$O(^ICDS("F",+ICDF,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXS2",31,0)
 . S ICDT=$G(^ICDS(+ICDI,0)),ICDD=$P(ICDT,"^",4)
"RTN","ICDEXS2",32,0)
 . S:ICDD?7N ICDA(ICDD)=ICDI
"RTN","ICDEXS2",33,0)
 I +ICDR>0,ICDC?7N  D  Q ICDO
"RTN","ICDEXS2",34,0)
 . N ICDN,ICDT,ICDD S ICDO="-1^No Next Coding System"
"RTN","ICDEXS2",35,0)
 . S ICDN=$O(ICDA(ICDC)),ICDN=+($G(ICDA(+ICDN))) Q:+ICDN'>0
"RTN","ICDEXS2",36,0)
 . S ICDT=$G(^ICDS(+ICDN,0)),ICDD=$P(ICDT,"^",4)
"RTN","ICDEXS2",37,0)
 . I ICDN>0,$L(ICDT,"^")>3,ICDD?7N S ICDO=ICDN_"^"_ICDT
"RTN","ICDEXS2",38,0)
 I +ICDR<0,ICDC?7N  D  Q ICDO
"RTN","ICDEXS2",39,0)
 . N ICDN,ICDT,ICDD S ICDO="-1^No Previous Coding System"
"RTN","ICDEXS2",40,0)
 . S ICDN=$O(ICDA(ICDC),-1),ICDN=+($G(ICDA(+ICDN))) Q:+ICDN'>0
"RTN","ICDEXS2",41,0)
 . S ICDT=$G(^ICDS(+ICDN,0)),ICDD=$P(ICDT,"^",4)
"RTN","ICDEXS2",42,0)
 . I ICDN>0,$L(ICDT,"^")>3,ICDD?7N S ICDO=ICDN_"^"_ICDT
"RTN","ICDEXS2",43,0)
 Q "-1^No Coding System found"
"RTN","ICDEXS2",44,0)
HDR(X) ; Diagnosis/Procedure File Header Node
"RTN","ICDEXS2",45,0)
 ;
"RTN","ICDEXS2",46,0)
 ; Input:
"RTN","ICDEXS2",47,0)
 ;
"RTN","ICDEXS2",48,0)
 ;    X      File Number or Global Root
"RTN","ICDEXS2",49,0)
 ;              80    or  ^ICD9(
"RTN","ICDEXS2",50,0)
 ;              80.1  or  ^ICD0(
"RTN","ICDEXS2",51,0)
 ;
"RTN","ICDEXS2",52,0)
 ; Output:
"RTN","ICDEXS2",53,0)
 ;
"RTN","ICDEXS2",54,0)
 ;   $$HDR   Diagnosis/Procedure File Header Node
"RTN","ICDEXS2",55,0)
 ;
"RTN","ICDEXS2",56,0)
 ; Replaces ICR 2435 and 2436
"RTN","ICDEXS2",57,0)
 ; 
"RTN","ICDEXS2",58,0)
 N ICDF S ICDF=$G(X) S ICDF=$$FILE^ICDEX(ICDF)
"RTN","ICDEXS2",59,0)
 Q:ICDF=80 $G(^ICD9(0))  Q:ICDF=80.1 $G(^ICD0(0))
"RTN","ICDEXS2",60,0)
 Q ""
"RTN","ICDGTDRG")
0^72^B3954114
"RTN","ICDGTDRG",1,0)
ICDGTDRG ;ALB/ADL - COLLECTION OF DRG APIS ;04/21/2014
"RTN","ICDGTDRG",2,0)
 ;;18.0;DRG Grouper;**7,12,14,17,57**;Oct 20, 2000;Build 1
"RTN","ICDGTDRG",3,0)
 ;
"RTN","ICDGTDRG",4,0)
 ;   Collection of API's for accessing new "DRG" level
"RTN","ICDGTDRG",5,0)
 ;   of files #80, #80.1, and #80.2.  These new levels
"RTN","ICDGTDRG",6,0)
 ;   were added for the Code Set Versioning Project
"RTN","ICDGTDRG",7,0)
 ;               
"RTN","ICDGTDRG",8,0)
 ; Global Variables
"RTN","ICDGTDRG",9,0)
 ;    None
"RTN","ICDGTDRG",10,0)
 ;               
"RTN","ICDGTDRG",11,0)
 ; External References
"RTN","ICDGTDRG",12,0)
 ;    ^ICDDRG0            ICR  N/A
"RTN","ICDGTDRG",13,0)
 ;    $$CODEN^ICDEX       ICR  N/A
"RTN","ICDGTDRG",14,0)
 ;    $$DRG^ICDEX         ICR  N/A
"RTN","ICDGTDRG",15,0)
 ;    $$DRGD^ICDEX        ICR  N/A
"RTN","ICDGTDRG",16,0)
 ;    $$DRGDES^ICDEX      ICR  N/A
"RTN","ICDGTDRG",17,0)
 ;    $$DRGN^ICDEX        ICR  N/A
"RTN","ICDGTDRG",18,0)
 ;    $$GETDATE^ICDEX     ICR  N/A
"RTN","ICDGTDRG",19,0)
 ;    $$GETDRG^ICDEX      ICR  N/A
"RTN","ICDGTDRG",20,0)
 ;    $$ISVALID^ICDEX     ICR  N/A
"RTN","ICDGTDRG",21,0)
 ;               
"RTN","ICDGTDRG",22,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDGTDRG",23,0)
 ;     ICDMDC
"RTN","ICDGTDRG",24,0)
 ;     
"RTN","ICDGTDRG",25,0)
GETDRG(CODE,DGNDT,FILE) ; Get DRG or DRG string associated with a Code
"RTN","ICDGTDRG",26,0)
 ;
"RTN","ICDGTDRG",27,0)
 ;  Input:
"RTN","ICDGTDRG",28,0)
 ;     CODE  - IEN number
"RTN","ICDGTDRG",29,0)
 ;     DRGDT - Effective date of the Code
"RTN","ICDGTDRG",30,0)
 ;     FILE  - File to check : 9 - ICD9 (file #80)
"RTN","ICDGTDRG",31,0)
 ;                                   0 - ICD0 (file 80.1)
"RTN","ICDGTDRG",32,0)
 ;  Output:
"RTN","ICDGTDRG",33,0)
 ;     DRGS - DRG or string of DRG's (delimited
"RTN","ICDGTDRG",34,0)
 ;            by "^") or -1 if not defined
"RTN","ICDGTDRG",35,0)
 ;
"RTN","ICDGTDRG",36,0)
 ;            Effective date or error message; 
"RTN","ICDGTDRG",37,0)
 ;            status flag (1=Active;0=Inactive)
"RTN","ICDGTDRG",38,0)
 ;            Delimited by ";" because DRG's can be
"RTN","ICDGTDRG",39,0)
 ;            multiple and are already delimited by "^"
"RTN","ICDGTDRG",40,0)
 ;            
"RTN","ICDGTDRG",41,0)
 ;  NOTE:  For ICD Procedures, it uses the additional 
"RTN","ICDGTDRG",42,0)
 ;         variable ICDMDC for procedures
"RTN","ICDGTDRG",43,0)
 ;
"RTN","ICDGTDRG",44,0)
 Q $$GETDRG^ICDEX($G(FILE),$G(CODE),$P($G(DGNDT),".",1),$G(ICDMDC))
"RTN","ICDGTDRG",45,0)
DRG(CODE,EDT)   ; Returns a string of information from the DRG file (#80.2)
"RTN","ICDGTDRG",46,0)
 ; Input:   CODE   DRG code, internal or external format (Required)
"RTN","ICDGTDRG",47,0)
 ;          CDT    Date to check status for, FileMan format (default = TODAY)
"RTN","ICDGTDRG",48,0)
 ;                   If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDGTDRG",49,0)
 ;                   If CDT > DT, validate with In/Activation Dates
"RTN","ICDGTDRG",50,0)
 ;                   If CDT is year only, use first of the year
"RTN","ICDGTDRG",51,0)
 ;                   If CDT is year and month, use first of the month
"RTN","ICDGTDRG",52,0)
 ; 
"RTN","ICDGTDRG",53,0)
 ; Output:  Returns an 22 piece string delimited by the up-arrow (^), where the
"RTN","ICDGTDRG",54,0)
 ;          pieces are:
"RTN","ICDGTDRG",55,0)
 ;            1  DRG name (field #.01)
"RTN","ICDGTDRG",56,0)
 ;            2  Weight (field #2)
"RTN","ICDGTDRG",57,0)
 ;            3  Low Trim (days) (field #3)
"RTN","ICDGTDRG",58,0)
 ;            4  High Trim (days) (field #4)
"RTN","ICDGTDRG",59,0)
 ;            5  MDC (field #5)
"RTN","ICDGTDRG",60,0)
 ;            6  Surgery Flag (field #.06)
"RTN","ICDGTDRG",61,0)
 ;            7  <null>
"RTN","ICDGTDRG",62,0)
 ;            8  Avg Length of Stay (days) (field 10)
"RTN","ICDGTDRG",63,0)
 ;            9  Local Low Trim Days (field #11)
"RTN","ICDGTDRG",64,0)
 ;           10  Local High Trim Days (field #12)
"RTN","ICDGTDRG",65,0)
 ;           11  <null>
"RTN","ICDGTDRG",66,0)
 ;           12  Local Breakeven (field #13)
"RTN","ICDGTDRG",67,0)
 ;           13  Activation Date (.01 field of the 66 multiple)
"RTN","ICDGTDRG",68,0)
 ;           14  Status (.03 field of the 66 multiple)
"RTN","ICDGTDRG",69,0)
 ;           15  Inactivation Date (.01 field of the 66 multiple)
"RTN","ICDGTDRG",70,0)
 ;           16  Effective date (.01 field of the 66 multiple)
"RTN","ICDGTDRG",71,0)
 ;           17  Internal Entry Number (IEN)
"RTN","ICDGTDRG",72,0)
 ;           18  Effective date of CSV (.01 field of the 66 multiple)
"RTN","ICDGTDRG",73,0)
 ;           19  Reference (field #900)
"RTN","ICDGTDRG",74,0)
 ;           20  Weight (Non Affil) (field #7)
"RTN","ICDGTDRG",75,0)
 ;           21  Weight (Int Affil) (field #7.5)
"RTN","ICDGTDRG",76,0)
 ;           22  Message
"RTN","ICDGTDRG",77,0)
 ; 
"RTN","ICDGTDRG",78,0)
 ;            or 
"RTN","ICDGTDRG",79,0)
 ; 
"RTN","ICDGTDRG",80,0)
 ;           -1^Error Description
"RTN","ICDGTDRG",81,0)
 ; 
"RTN","ICDGTDRG",82,0)
 Q $$DRG^ICDEX($G(CODE),$G(EDT))
"RTN","ICDGTDRG",83,0)
CODEI(CODE)     ; Returns the IEN of an ICD code
"RTN","ICDGTDRG",84,0)
 Q +($$CODEN^ICDEX($G(CODE),80))
"RTN","ICDGTDRG",85,0)
GETDATE(PATNUM) ; Find the correct "EFFECTIVE DATE" for locating the DRG/ICD/CPT codes
"RTN","ICDGTDRG",86,0)
 ;
"RTN","ICDGTDRG",87,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","ICDGTDRG",88,0)
 ;  Output:   "effective date" to use
"RTN","ICDGTDRG",89,0)
 ;
"RTN","ICDGTDRG",90,0)
 Q $$GETDATE^ICDEX($G(PATNUM))
"RTN","ICDGTDRG",91,0)
ISVALID(CODE,EDATE,FILE) ; Is an ICD/CPT code Valid
"RTN","ICDGTDRG",92,0)
 ; This is a function call to be used in DIC("S") FileMan
"RTN","ICDGTDRG",93,0)
 ; calls to check the validation of a ICD/CPT code
"RTN","ICDGTDRG",94,0)
 ; Input:
"RTN","ICDGTDRG",95,0)
 ;    CODE   - ICD/CPT code (ien)
"RTN","ICDGTDRG",96,0)
 ;    EDATE  - Effective date to be used
"RTN","ICDGTDRG",97,0)
 ;    FILE   - File to use: 0 - ICD0; 9 - ICD9
"RTN","ICDGTDRG",98,0)
 ;
"RTN","ICDGTDRG",99,0)
 ; Output:
"RTN","ICDGTDRG",100,0)
 ;    OUT    - 1 if valid; 0 if not
"RTN","ICDGTDRG",101,0)
 ;
"RTN","ICDGTDRG",102,0)
 Q $$ISVALID^ICDEX($G(FILE),$G(CODE),$G(EDATE))
"RTN","ICDGTDRG",103,0)
DRGD(CODE,OUTARR,DFN,CDT) ; returns DRG description in array
"RTN","ICDGTDRG",104,0)
 ; Input:   CODE   ICD Code, Internal or External Format (required)
"RTN","ICDGTDRG",105,0)
 ;          ARY    Output Array Name for description 
"RTN","ICDGTDRG",106,0)
 ;                   e.g. "ABC" or "ABC("TEST")" 
"RTN","ICDGTDRG",107,0)
 ;                   Default = ^TMP("DRGD",$J)
"RTN","ICDGTDRG",108,0)
 ;          DFN    Not in use but included in anticipation of future need
"RTN","ICDGTDRG",109,0)
 ;          CDT    Date to screen against (default = TODAY)
"RTN","ICDGTDRG",110,0)
 ;                   If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDGTDRG",111,0)
 ;                   If CDT > DT, use DT
"RTN","ICDGTDRG",112,0)
 ;                   If CDT is year only, use first of the year
"RTN","ICDGTDRG",113,0)
 ;                   If CDT is year and month only, use first of the month
"RTN","ICDGTDRG",114,0)
 ; 
"RTN","ICDGTDRG",115,0)
 ; Output:  #      Number of lines in description output array
"RTN","ICDGTDRG",116,0)
 ;          @ARY(1:n) - Versioned Description (lines 1-n) (from the 68 multiple)
"RTN","ICDGTDRG",117,0)
 ;          @ARY(n+1) - Blank
"RTN","ICDGTDRG",118,0)
 ;          @ARY(n+1) - A message stating: CODE TEXT MAY BE INACCURATE
"RTN","ICDGTDRG",119,0)
 ; 
"RTN","ICDGTDRG",120,0)
 ;           or
"RTN","ICDGTDRG",121,0)
 ; 
"RTN","ICDGTDRG",122,0)
 ;          -1^Error Description
"RTN","ICDGTDRG",123,0)
 ; 
"RTN","ICDGTDRG",124,0)
 ; ** NOTE - USER MUST INITIALIZE ^TMP("DRGD",$J), IF USED **
"RTN","ICDGTDRG",125,0)
 Q $$DRGD^ICDEX($G(CODE),$G(OUTARR),$G(CDT))
"RTN","ICDGTDRG",126,0)
VLTDR(IEN,VDATE,ARY) ; Versioned Description - Long Text
"RTN","ICDGTDRG",127,0)
 ; Input:
"RTN","ICDGTDRG",128,0)
 ;    IEN    - Internal Entry Number file 80.2
"RTN","ICDGTDRG",129,0)
 ;    VDATE  - Effective/Versioning date to be used
"RTN","ICDGTDRG",130,0)
 ;    .ARY   - Array for output, passed by reference
"RTN","ICDGTDRG",131,0)
 ;
"RTN","ICDGTDRG",132,0)
 ; Output:
"RTN","ICDGTDRG",133,0)
 ;    ARY()  - Local array containing versioned description
"RTN","ICDGTDRG",134,0)
 ;
"RTN","ICDGTDRG",135,0)
 Q $$DRGDES^ICDEX($G(IEN),$G(VDATE),.ARY)
"RTN","ICDGTDRG",136,0)
CODEN(CODE) ; Return the IEN of DRG
"RTN","ICDGTDRG",137,0)
 ;
"RTN","ICDGTDRG",138,0)
 ;   Input:  DRG code
"RTN","ICDGTDRG",139,0)
 ;  Output:  IEN of code
"RTN","ICDGTDRG",140,0)
 ;
"RTN","ICDGTDRG",141,0)
 Q $$DRGN^ICDEX($G(CODE))
"RTN","ICDID")
0^25^B42005252
"RTN","ICDID",1,0)
ICDID ;ISL/KER - ICD Identifiers ;04/21/2014
"RTN","ICDID",2,0)
 ;;18.0;DRG Grouper;**12,15,57**;Oct 20, 2000;Build 1
"RTN","ICDID",3,0)
 ;               
"RTN","ICDID",4,0)
 ; Global Variables
"RTN","ICDID",5,0)
 ;    None
"RTN","ICDID",6,0)
 ;               
"RTN","ICDID",7,0)
 ; External References
"RTN","ICDID",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDID",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDID",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDID",11,0)
 ;          
"RTN","ICDID",12,0)
 Q
"RTN","ICDID",13,0)
 ; Identifiers for ICD Diagnosis file 80
"RTN","ICDID",14,0)
IDDX(Y,X) ;   ICD Diagnosis Identifiers (versioned)
"RTN","ICDID",15,0)
 N FLD,MSG,CODE,TYPE S FLD=+($G(X)),Y=+($G(Y)) Q:+FLD'>0 ""  Q:+Y'>0 ""
"RTN","ICDID",16,0)
 S TYPE=$$CSI^ICDEX(80,+Y)
"RTN","ICDID",17,0)
 I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",18,0)
 S MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE),CODE=$$CODEC^ICDEX(80,+Y)
"RTN","ICDID",19,0)
 I FLD=3 S X=$$VSTD^ICDEX(+Y,$G(ICDVDT))_$S($L(MSG):("  ("_MSG_")"),1:"") Q X
"RTN","ICDID",20,0)
 I FLD=10 S X=$$VLTD^ICDEX(+Y,$G(ICDVDT))_$S($L(MSG):("  ("_MSG_")"),1:"") Q X
"RTN","ICDID",21,0)
 I FLD=100 S X=$$STA(+($$STATCHK^ICDEX(CODE,$G(ICDVDT),TYPE))) Q X
"RTN","ICDID",22,0)
 I FLD=20!(FLD=30)!(FLD=40)!(FLD=66)!(FLD=67)!(FLD=68) Q ""
"RTN","ICDID",23,0)
 S X=$$GET1^DIQ(80,(+($G(Y))_","),FLD)
"RTN","ICDID",24,0)
 Q X
"RTN","ICDID",25,0)
IDDXF(Y) ;   ICD Diannosis Full
"RTN","ICDID",26,0)
 N CC,CODE,TYPE,SYS,EF,ICDAT,ICID,MSG,SE,ST,LDX,IEN S (IEN,Y)=+($G(Y)) Q:+IEN'>0 ""
"RTN","ICDID",27,0)
 S (SYS,TYPE)=$$CSI^ICDEX(80,+IEN),TYPE=$S(TYPE=1:"ICD-9 ",TYPE=30:"ICD-10",1:"")
"RTN","ICDID",28,0)
 S CODE=$$CODEC^ICDEX(80,+IEN) I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",29,0)
 S ICDAT=$$ICDDX^ICDEX(IEN,$G(ICDVDT),,"I",1) S MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE) S:MSG["CODE " MSG="Text may be inaccurate"
"RTN","ICDID",30,0)
 S ICID=$$UP($P(ICDAT,"^",4)),LDX="" S:ICID'=""&(TYPE'="") ICID=TYPE_" "_CODE_"  "_ICID
"RTN","ICDID",31,0)
 I ICID="",$P($$UP(ICDAT),"^",2)["VA LOCAL CODE" S LDX=$$VSTD^ICDEX(+IEN,9990101) I $L(LDX) D
"RTN","ICDID",32,0)
 . S:'$L(TYPE) ICID=CODE_"  "_LDX S:$L(TYPE) ICID=TYPE_" "_CODE_"  "_LDX
"RTN","ICDID",33,0)
 . S:$P(ICDAT,"^",7)'>0 MSG="Local code, do not use"
"RTN","ICDID",34,0)
 S:$L(MSG)&($L(ICID)) ICID=ICID_"  ("_MSG_")"
"RTN","ICDID",35,0)
 S EF="",ST=$P(ICDAT,"^",10) S:+ST'>0 EF=$P(ICDAT,"^",12)
"RTN","ICDID",36,0)
 S:+ST>0 EF=$P(ICDAT,"^",17) S ST=+ST
"RTN","ICDID",37,0)
 I ST'>0,'$L(EF) S EF=$$LS^ICDEX(80,+IEN,9990101,1),ST=+($P(EF,"^",1)),EF=+($P(EF,"^",2))
"RTN","ICDID",38,0)
 S SE=$$SF(80,IEN,ICDVDT),CC=$$CC(+$P(ICDAT,"^",19)) S:$L(CC) ICID=ICID_$S('$L(MSG):" ",1:"")_" ("_CC_")"
"RTN","ICDID",39,0)
 S:$L(SE) ICID=ICID_$S('$L(MSG)&('$L(CC)):" ",1:"")_" "_SE
"RTN","ICDID",40,0)
 S Y=$$TML(ICID)
"RTN","ICDID",41,0)
 Q Y
"RTN","ICDID",42,0)
IDDXS(Y) ;   ICD Diagnosis Identifiers (versioned - short)
"RTN","ICDID",43,0)
 N ICID,ICDAT,MSG,CODE,SYS,TYPE,ST,IEN,CC,X S (IEN,Y)=+($G(Y)) Q:+Y'>0 ""
"RTN","ICDID",44,0)
 S (SYS,TYPE)=$$CSI^ICDEX(80,+IEN) I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",45,0)
 S MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE) S:MSG["CODE " MSG="Text may be inaccurate"
"RTN","ICDID",46,0)
 S CODE=$$CODEC^ICDEX(80,+IEN),ICID=$$VSTD^ICDEX(+Y,$G(ICDVDT))
"RTN","ICDID",47,0)
 S:$L(MSG) ICID=ICID_"  ("_MSG_")"
"RTN","ICDID",48,0)
 S ST=$$STA(+($$STATCHK^ICDEX(CODE,$G(ICDVDT),TYPE)))
"RTN","ICDID",49,0)
 S CC=+$P($$ICDDX^ICDEX(IEN,$G(ICDVDT),,"I",1),"^",19),CC=$$CC(+CC)
"RTN","ICDID",50,0)
 S:$L(CC) ICID=ICID_$S('$L(MSG):" ",1:"")_" ("_CC_")"
"RTN","ICDID",51,0)
 S:$L(ST) ICID=ICID_$S('$L(MSG)&('$L(CC)):" ",1:"")_" "_ST
"RTN","ICDID",52,0)
 F  Q:$E(ICID,1)'=" "  S ICID=$E(ICID,2,$L(ICID))
"RTN","ICDID",53,0)
 S Y=ICID
"RTN","ICDID",54,0)
 Q Y
"RTN","ICDID",55,0)
 ;
"RTN","ICDID",56,0)
 ; Identifiers for ICD Procedure file 80.1
"RTN","ICDID",57,0)
IDOP(Y,X) ;   ICD Procedure Identifiers (versioned)
"RTN","ICDID",58,0)
 N FLD,MSG,CODE S FLD=+($G(X)),Y=+($G(Y)) Q:+FLD'>0 ""  Q:+Y'>0 ""
"RTN","ICDID",59,0)
 S TYPE=$$CSI^ICDEX(80.1,+IEN)
"RTN","ICDID",60,0)
 I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",61,0)
 S MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE),CODE=$$CODEC^ICDEX(80.1,+IEN)
"RTN","ICDID",62,0)
 I FLD=4 S X=$$VSTP^ICDEX(+Y,$G(ICDVDT))_$S($L(MSG):("  ("_MSG_")"),1:"") Q X
"RTN","ICDID",63,0)
 I FLD=10 S X=$$VLTP^ICDEX(+Y,$G(ICDVDT))_$S($L(MSG):("  ("_MSG_")"),1:"") Q X
"RTN","ICDID",64,0)
 I FLD=100 S X=$$STA(+($$STATCHK^ICDEX(CODE,$G(ICDVDT),TYPE))) Q X
"RTN","ICDID",65,0)
 I FLD=7!(FLD=66)!(FLD=67)!(FLD=68) Q ""
"RTN","ICDID",66,0)
 S X=$$GET1^DIQ(80.1,(+($G(Y))_","),FLD)
"RTN","ICDID",67,0)
 Q X
"RTN","ICDID",68,0)
IDOPF(Y) ;   ICD Procedure Full
"RTN","ICDID",69,0)
 N CODE,EF,IEN,ICDAT,ICID,MSG,SE,ST,LOP,SYS,TYPE,LHE,LHI,LHN,LST S (IEN,Y)=+($G(Y)) Q:+IEN'>0 ""
"RTN","ICDID",70,0)
 S CODE=$$CODEC^ICDEX(80.1,+IEN)
"RTN","ICDID",71,0)
 S (SYS,TYPE)=$$CSI^ICDEX(80.1,+IEN) S TYPE=$S(TYPE=2:"ICD-9 ",TYPE=31:"ICD-10",1:"") I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",72,0)
 S ICDAT=$$ICDOP^ICDEX(IEN,ICDVDT,,"I",1),MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE) S:MSG["CODE " MSG="Text may be inaccurate"
"RTN","ICDID",73,0)
 S ICID=$$UP($P(ICDAT,"^",5)),LOP="" S:ICID'=""&(TYPE'="") ICID=TYPE_" "_CODE_"  "_ICID
"RTN","ICDID",74,0)
 I ICID="",$P($$UP(ICDAT),"^",2)["VA LOCAL CODE" S LOP=$$VSTP^ICDEX(+IEN,9990101) I $L(LOP) D
"RTN","ICDID",75,0)
 . S:'$L(TYPE) ICID=CODE_"  "_LOP S:$L(TYPE) ICID=TYPE_" "_CODE_"  "_LOP
"RTN","ICDID",76,0)
 . S:$P(ICDAT,"^",10)'>0 MSG="Local code, do not use"
"RTN","ICDID",77,0)
 S:$L(MSG)&($L(ICID)) ICID=ICID_"  ("_MSG_")"
"RTN","ICDID",78,0)
 S EF="",ST=$P(ICDAT,"^",10) S:+ST'>0 EF=$P(ICDAT,"^",12) S:+ST>0 EF=$P(ICDAT,"^",13) S ST=+ST
"RTN","ICDID",79,0)
 I ST'>0,'$L(EF) S EF=$$LS^ICDEX(80.1,+IEN,9990101,1),ST=+($P(EF,"^",1)),EF=+($P(EF,"^",2))
"RTN","ICDID",80,0)
 S SE=$$SF(80.1,IEN,ICDVDT) S:$L(SE) ICID=ICID_$S('$L(MSG):" ",1:"")_" "_SE S Y=$$TML(ICID)
"RTN","ICDID",81,0)
 Q Y
"RTN","ICDID",82,0)
IDOPS(Y) ;   ICD Procedure Identifiers (versioned - short)
"RTN","ICDID",83,0)
 N ICID,MSG,CODE,LHE,LHI,LHN,LST,TYPE,ST,X S Y=+($G(Y)) Q:+Y'>0 ""  I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",84,0)
 S TYPE=$$CSI^ICDEX(80.1,+IEN),MSG=$$MSG^ICDEX($G(ICDVDT),,TYPE) S:MSG["CODE " MSG="Text may be inaccurate"
"RTN","ICDID",85,0)
 S CODE=$$CODEC^ICDEX(80.1,+IEN),ICID=$$VSTP^ICDEX(+Y,$G(ICDVDT)) S:$L(MSG) ICID=ICID_"  ("_MSG_")"
"RTN","ICDID",86,0)
 S ST=$$STA(+($$STATCHK^ICDEX(CODE,$G(ICDVDT),TYPE)))
"RTN","ICDID",87,0)
 S:$L(ST) ICID=ICID_$S('$L(MSG):" ",1:"")_" "_ST
"RTN","ICDID",88,0)
 F  Q:$E(ICID,1)'=" "  S ICID=$E(ICID,2,$L(ICID))
"RTN","ICDID",89,0)
 S Y=ICID
"RTN","ICDID",90,0)
 Q Y
"RTN","ICDID",91,0)
 ;
"RTN","ICDID",92,0)
 ; Identifiers for DRG file 80.2
"RTN","ICDID",93,0)
IDDG(Y,X) ;   DRG Identifiers (versioned)
"RTN","ICDID",94,0)
 N FLD,MSG S FLD=+($G(X)),Y=+($G(Y)) Q:+FLD'>0 ""  Q:+Y'>0 ""
"RTN","ICDID",95,0)
 I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",96,0)
 S MSG=$$MSG^ICDEX($G(ICDVDT)) I FLD=1 D  Q X
"RTN","ICDID",97,0)
 . N DRG D VLTDR^ICDGTDRG(+Y,$G(ICDVDT),.DRG)
"RTN","ICDID",98,0)
 . S X=$G(DRG(1)) S:$L(MSG) X=X_"  ("_MSG_")"
"RTN","ICDID",99,0)
 I FLD=15 D  Q X
"RTN","ICDID",100,0)
 . N VD,I,ST S VD=$O(^ICD(+Y,66,"B"," "),-1)
"RTN","ICDID",101,0)
 . S I=$O(^ICD(+Y,66,"B",+VD," "),-1),X=$$STA(+($P($G(^ICD(+Y,66,+I,0)),"^",3)))
"RTN","ICDID",102,0)
 I FLD=20!(FLD=30)!(FLD=66)!(FLD=68) Q ""
"RTN","ICDID",103,0)
 S X=$$GET1^DIQ(80.2,(+($G(Y))_","),FLD)
"RTN","ICDID",104,0)
 Q X
"RTN","ICDID",105,0)
IDDGS(Y) ;   DRG Identifiers (versioned - Short)
"RTN","ICDID",106,0)
 N MSG,X,ICDRG,ICID,VD,I,ST S Y=+($G(Y)) Q:+Y'>0 ""
"RTN","ICDID",107,0)
 I '$D(ICDVDT) N ICDVDT S ICDVDT=$$DT^XLFDT
"RTN","ICDID",108,0)
 S MSG=$$MSG^ICDEX($G(ICDVDT)) S:MSG["CODE " MSG="Text may be inaccurate"
"RTN","ICDID",109,0)
 D VLTDR^ICDGTDRG(+Y,$G(ICDVDT),.ICDRG)
"RTN","ICDID",110,0)
 S ICID=$G(ICDRG(1)) S:$L(MSG) ICID=ICID_"  ("_MSG_")"
"RTN","ICDID",111,0)
 S VD=$O(^ICD(+Y,66,"B"," "),-1)
"RTN","ICDID",112,0)
 S I=$O(^ICD(+Y,66,"B",+VD," "),-1)
"RTN","ICDID",113,0)
 S ST=$$STA(+($P($G(^ICD(+Y,66,+I,0)),"^",3)))
"RTN","ICDID",114,0)
 S:$L(ST) ICID=ICID_$S('$L(MSG):" ",1:"")_" "_ST
"RTN","ICDID",115,0)
 F  Q:$E(ICID,1)'=" "  S ICID=$E(ICID,2,$L(ICID))
"RTN","ICDID",116,0)
 S Y=ICID
"RTN","ICDID",117,0)
 Q Y
"RTN","ICDID",118,0)
 ;
"RTN","ICDID",119,0)
 ; Miscellaneous
"RTN","ICDID",120,0)
STA(X) ;   Format Status
"RTN","ICDID",121,0)
 Q $S(+($G(X)):"",1:"INACTIVE")
"RTN","ICDID",122,0)
STED(X) ;   Format Inactive Flag (Status) and Effective Date
"RTN","ICDID",123,0)
 N ST,ED S ST=$P(X,"^",1) Q:+ST>0 ""  S ED=$P(X,"^",2) S:ED'?7N ED="" S:$L(ED) ED=$TR($$FMTE^XLFDT(ED,"5DZ"),"@"," ")
"RTN","ICDID",124,0)
 S X="Inactive" S:$L(ED)=10 X=X_" "_ED
"RTN","ICDID",125,0)
 Q X
"RTN","ICDID",126,0)
SF(X,Y,Z) ; Status Flag
"RTN","ICDID",127,0)
 N FI,RT,EF,IE,HIS,STA,EFF S FI=+($G(X)) Q:"^80^80.1^"'[("^"_FI_"^") ""
"RTN","ICDID",128,0)
 S RT=$S(FI=80:$$ROOT^ICDEX(80),FI=80.1:$$ROOT^ICDEX(80.1),1:"") Q:'$L(RT) ""
"RTN","ICDID",129,0)
 S IE=+($G(Y)) Q:+Y'>0 ""  Q:'$D(@(RT_IE_",0)")) ""  S EF=$G(Z) Q:EF'?7N ""
"RTN","ICDID",130,0)
 S EFF=$O(@(RT_IE_",66,""B"","_(EF+.000009)_")"),-1)
"RTN","ICDID",131,0)
 I EFF'?7N D  Q X
"RTN","ICDID",132,0)
 . S X="" S EFF=$O(@(RT_IE_",66,""B"","_EF_")")) I EFF?7N D
"RTN","ICDID",133,0)
 . . N HIS,STA S HIS=$O(@(RT_IE_",66,""B"","_EFF_","" "")"),-1) Q:+HIS'>0
"RTN","ICDID",134,0)
 . . S STA=$G(@(RT_IE_",66,"_HIS_",0)"),-1)
"RTN","ICDID",135,0)
 . . I $P(STA,"^",2)>0 S X="(Pending "_$TR($$FMTE^XLFDT(EFF,"5DZ"),"@"," ")_")"
"RTN","ICDID",136,0)
 S HIS=$O(@(RT_IE_",66,""B"","_EFF_","" "")"),-1) Q:+HIS'>0 ""
"RTN","ICDID",137,0)
 S STA=$G(@(RT_IE_",66,"_HIS_",0)"),-1)
"RTN","ICDID",138,0)
 I $P(STA,"^",2)'>0 D  Q X
"RTN","ICDID",139,0)
 . S X="(Inactive "_$TR($$FMTE^XLFDT(EFF,"5DZ"),"@"," ")_")"
"RTN","ICDID",140,0)
 Q ""
"RTN","ICDID",141,0)
CC(X) ;   Format CC
"RTN","ICDID",142,0)
 Q $S(+($G(X))=1:"C/C",+($G(X))=2:"Major C/C",1:"")
"RTN","ICDID",143,0)
TML(X) ;   Trim Leading Spaces
"RTN","ICDID",144,0)
  S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICDID",145,0)
  Q X
"RTN","ICDID",146,0)
UP(X) ;   Uppercase
"RTN","ICDID",147,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ICDIDX")
0^26^B81806882
"RTN","ICDIDX",1,0)
ICDIDX ;DLS/DEK - MUMPS Cross Reference Routine ;04/21/2014
"RTN","ICDIDX",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDIDX",3,0)
 ;               
"RTN","ICDIDX",4,0)
 ; Global Variables
"RTN","ICDIDX",5,0)
 ;    None
"RTN","ICDIDX",6,0)
 ;               
"RTN","ICDIDX",7,0)
 ; External References
"RTN","ICDIDX",8,0)
 ;    IXALL^DIK           ICR  10013
"RTN","ICDIDX",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDIDX",10,0)
 ;               
"RTN","ICDIDX",11,0)
 ; "D" on Description
"RTN","ICDIDX",12,0)
SD(ICD) ; Set ROOT("D",<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",13,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N WRDS,I,WD,CDT,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S EXC=$$EXC(DA(1),RT) Q:+EXC'>0
"RTN","ICDIDX",14,0)
 S CDT=$G(@(RT_+($G(DA(1)))_",68,"_+($G(DA))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N  D PAR^ICDTOKN($G(X),.WRDS,0) S I=0
"RTN","ICDIDX",15,0)
 F  S I=$O(WRDS(I)) Q:+I'>0  S WD=$G(WRDS(I)) S:$L(WD) @(RT_"""D"","""_WD_""","_+DA(1)_","_CDT_","_+DA_")")=""
"RTN","ICDIDX",16,0)
 S IE1=DA(1),IE2=DA,IE3=0 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",17,0)
 . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",18,0)
 . S @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")=""
"RTN","ICDIDX",19,0)
 Q
"RTN","ICDIDX",20,0)
KD(ICD) ; Kill ROOT("D",<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",21,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N WRDS,I,WD,CDT,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",22,0)
 S CDT=$G(@(RT_+($G(DA(1)))_",68,"_+($G(DA))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N  D PAR^ICDTOKN($G(X),.WRDS,0) S I=0
"RTN","ICDIDX",23,0)
 F  S I=$O(WRDS(I)) Q:+I'>0  S WD=$G(WRDS(I)) K:$L(WD) @(RT_"""D"","""_WD_""","_+DA(1)_","_CDT_","_+DA_")")
"RTN","ICDIDX",24,0)
 S IE1=DA(1),IE2=DA,IE3=0 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",25,0)
 . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",26,0)
 . K @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")
"RTN","ICDIDX",27,0)
 Q
"RTN","ICDIDX",28,0)
 ; "AD" on Description
"RTN","ICDIDX",29,0)
SAD(ICD) ; Set ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",30,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N KEY,WRDS,I,WD,CDT,SYS,EXC,RT
"RTN","ICDIDX",31,0)
 S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S EXC=$$EXC(DA(1),RT) Q:+EXC'>0
"RTN","ICDIDX",32,0)
 S CDT=$G(@(RT_+($G(DA(1)))_",68,"_+($G(DA))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N
"RTN","ICDIDX",33,0)
 S SYS=+($P($G(@(RT_+DA(1)_",1)")),"^",1)) Q:+SYS'>0  D PAR^ICDTOKN($G(X),.WRDS,0) S I=0
"RTN","ICDIDX",34,0)
 F  S I=$O(WRDS(I)) Q:+I'>0  D
"RTN","ICDIDX",35,0)
 . S WD=$G(WRDS(I)) S:$L(WD) @(RT_"""AD"","_+SYS_","""_WD_""","_+DA(1)_","_CDT_","_+DA_")")=""
"RTN","ICDIDX",36,0)
 S IE1=DA(1),IE2=DA,IE3=0
"RTN","ICDIDX",37,0)
 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",38,0)
 . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",39,0)
 . S @(RT_"""AD"","_+SYS_","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")=""
"RTN","ICDIDX",40,0)
 . S @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")=""
"RTN","ICDIDX",41,0)
 Q
"RTN","ICDIDX",42,0)
KAD(ICD) ; Kill ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",43,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N KEY,WRDS,I,WD,CDT,SYS,EXC,RT,IE1,IE2,IE3 S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",44,0)
 S CDT=$G(@(RT_+($G(DA(1)))_",68,"_+($G(DA))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N
"RTN","ICDIDX",45,0)
 S SYS=+($P($G(@(RT_+DA(1)_",1)")),"^",1)) Q:+SYS'>0  D PAR^ICDTOKN($G(X),.WRDS,0) S I=0
"RTN","ICDIDX",46,0)
 F  S I=$O(WRDS(I)) Q:+I'>0  S WD=$G(WRDS(I)) K:$L(WD) @(RT_"""AD"","_+SYS_","""_WD_""","_+DA(1)_","_CDT_","_+DA_")")
"RTN","ICDIDX",47,0)
 S IE1=DA(1),IE2=DA,IE3=0
"RTN","ICDIDX",48,0)
 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",49,0)
 . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",50,0)
 . K @(RT_"""AD"","_+SYS_","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")
"RTN","ICDIDX",51,0)
 . K @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")
"RTN","ICDIDX",52,0)
 Q
"RTN","ICDIDX",53,0)
 ; "AD" on Coding System
"RTN","ICDIDX",54,0)
SAD2(ICD) ; Set ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",55,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,KEY,CDT,SYS,IE1,IE2,IE3,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S EXC=$$EXC(DA,RT) Q:+EXC'>0
"RTN","ICDIDX",56,0)
 S SYS=+($G(X)) Q:+SYS'>0  S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",68,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",57,0)
 . N I S CDT=$P($G(@(RT_+IE1_",68,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",58,0)
 . S TXT=$G(@(RT_+IE1_",68,"_IE2_",1)")) I $L(TXT) D
"RTN","ICDIDX",59,0)
 . . D PAR^ICDTOKN(TXT,.WRDS,0) S I=0 F  S I=$O(WRDS(I)) Q:+I'>0  S WD=$G(WRDS(I)) D
"RTN","ICDIDX",60,0)
 . . . S:$L(WD) @(RT_"""AD"","_+SYS_","""_WD_""","_+IE1_","_CDT_","_+IE2_")")=""
"RTN","ICDIDX",61,0)
 . S IE3=0 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",62,0)
 . . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",63,0)
 . . S @(RT_"""AD"","_+SYS_","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")=""
"RTN","ICDIDX",64,0)
 . . S @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")=""
"RTN","ICDIDX",65,0)
 Q
"RTN","ICDIDX",66,0)
KAD2(ICD) ; Kill ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>)
"RTN","ICDIDX",67,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,CDT,SYS,IE1,IE2,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",68,0)
 S SYS=+($G(X)) Q:+SYS'>0  S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",68,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",69,0)
 . N I S CDT=$P($G(@(RT_+IE1_",68,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",70,0)
 . S TXT=$G(@(RT_+IE1_",68,"_IE2_",1)")) I $L(TXT) D
"RTN","ICDIDX",71,0)
 . . D PAR^ICDTOKN(TXT,.WRDS,0) S I=0 F  S I=$O(WRDS(I)) Q:+I'>0  S WD=$G(WRDS(I)) D
"RTN","ICDIDX",72,0)
 . . . K:$L(WD) @(RT_"""AD"","_+SYS_","""_WD_""","_+IE1_","_CDT_","_+IE2_")")
"RTN","ICDIDX",73,0)
 . S IE3=0 F  S IE3=$O(@(RT_+IE1_",68,"_+IE2_",2,"_IE3_")")) Q:+IE3'>0  D
"RTN","ICDIDX",74,0)
 . . S KEY=$$TM($G(@(RT_+IE1_",68,"_+IE2_",2,"_+IE3_",0)"))) Q:'$L(KEY)
"RTN","ICDIDX",75,0)
 . . K @(RT_"""AD"","_+SYS_","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")
"RTN","ICDIDX",76,0)
 . . K @(RT_"""D"","""_KEY_""","_+IE1_","_CDT_","_+IE2_","_+IE3_")")
"RTN","ICDIDX",77,0)
 Q
"RTN","ICDIDX",78,0)
 ; "AD" on Keywords
"RTN","ICDIDX",79,0)
SAD3(ICD) ; Set ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>,<wd ien>)
"RTN","ICDIDX",80,0)
 N KEY S KEY=$$UP^XLFSTR($$TM($G(X))) Q:'$L(KEY)  Q:+($G(DA(2)))'>0  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","ICDIDX",81,0)
 N CDT,SYS,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S EXC=$$EXC(DA(2),RT) Q:+EXC'>0
"RTN","ICDIDX",82,0)
 S CDT=$G(@(RT_+($G(DA(2)))_",68,"_+($G(DA(1)))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N
"RTN","ICDIDX",83,0)
 S SYS=+($P($G(@(RT_+DA(2)_",1)")),"^",1)) Q:+SYS'>0
"RTN","ICDIDX",84,0)
 S @(RT_"""AD"","_+SYS_","""_KEY_""","_+DA(2)_","_CDT_","_+DA(1)_","_+DA_")")=""
"RTN","ICDIDX",85,0)
 S @(RT_"""D"","""_KEY_""","_+DA(2)_","_CDT_","_+DA(1)_","_+DA_")")=""
"RTN","ICDIDX",86,0)
 Q
"RTN","ICDIDX",87,0)
KAD3(ICD) ; Kill ROOT("AD",<cs>,<word>,<file ien>,<dt>,<des ien>,<wd ien>)
"RTN","ICDIDX",88,0)
 N KEY S KEY=$$UP^XLFSTR($$TM($G(X))) Q:'$L(KEY)  Q:+($G(DA(2)))'>0  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","ICDIDX",89,0)
 N CDT,SYS,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S EXC=$$EXC(DA(2),RT) Q:+EXC'>0
"RTN","ICDIDX",90,0)
 S CDT=$G(@(RT_+($G(DA(2)))_",68,"_+($G(DA(1)))_",0)")),CDT=$P(CDT,"^",1) Q:CDT'?7N
"RTN","ICDIDX",91,0)
 S SYS=+($P($G(@(RT_+DA(2)_",1)")),"^",1)) Q:+SYS'>0
"RTN","ICDIDX",92,0)
 K @(RT_"""AD"","_+SYS_","""_KEY_""","_+DA(2)_","_CDT_","_+DA(1)_","_+DA_")")
"RTN","ICDIDX",93,0)
 K @(RT_"""D"","""_KEY_""","_+DA(2)_","_CDT_","_+DA(1)_","_+DA_")")
"RTN","ICDIDX",94,0)
 Q
"RTN","ICDIDX",95,0)
 ; "AST" on short text effective date
"RTN","ICDIDX",96,0)
SAST(ICD) ; Set ROOT("AST",<code>,<dt>,<file ien>,<st ien>)
"RTN","ICDIDX",97,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",98,0)
 S EXC=+($$EXC(DA(1),RT)) Q:+EXC'>0  S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",99,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) S @(RT_"""AST"","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")=""
"RTN","ICDIDX",100,0)
 Q
"RTN","ICDIDX",101,0)
KAST(ICD) ; Kill ROOT("AST",<code>,<dt>,<file ien>,<st ien>)
"RTN","ICDIDX",102,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",103,0)
 S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",104,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) K @(RT_"""AST"","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")
"RTN","ICDIDX",105,0)
 Q
"RTN","ICDIDX",106,0)
 ; "ASTS" on short text effective date
"RTN","ICDIDX",107,0)
SASTS1(ICD) ; Set ROOT("ASTS",<cs>,<code>,<dt>,<file ien>,<st ien>)
"RTN","ICDIDX",108,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",109,0)
 S EXC=+($$EXC(DA(1),RT)) Q:+EXC'>0  S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",110,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDIDX",111,0)
 S @(RT_"""ASTS"","_+SYS_","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")=""
"RTN","ICDIDX",112,0)
 Q
"RTN","ICDIDX",113,0)
KASTS1(ICD) ; Kill ROOT("ASTS",<cs>,<code>,<dt>,<file ien>,<st ien>)
"RTN","ICDIDX",114,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",115,0)
 S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",116,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDIDX",117,0)
 K @(RT_"""ASTS"","_+SYS_","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")
"RTN","ICDIDX",118,0)
 Q
"RTN","ICDIDX",119,0)
 ; "ASTS" on short text
"RTN","ICDIDX",120,0)
SASTS2(ICD) ; Set ROOT("ASTS",<cs>,<code>,<dt>,<file ien>,<st ien>)
"RTN","ICDIDX",121,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,COD,CDT,SYS,IE1,IE2,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",122,0)
 S EXC=$$EXC(DA,RT) Q:+EXC'>0  S SYS=+($G(X)) Q:+SYS'>0  S COD=$P($G(@(RT_+($G(DA))_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",123,0)
 S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",67,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",124,0)
 . N I S CDT=$P($G(@(RT_+IE1_",67,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",125,0)
 . S @(RT_"""ASTS"","_+SYS_","""_(COD_" ")_""","_CDT_","_IE1_","_IE2_")")=""
"RTN","ICDIDX",126,0)
 Q
"RTN","ICDIDX",127,0)
KASTS2(ICD) ; Set ROOT("ASTS",<cs>,<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",128,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,COD,CDT,SYS,IE1,IE2,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",129,0)
 S SYS=+($G(X)) Q:+SYS'>0  S COD=$P($G(@(RT_+($G(DA))_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",130,0)
 S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",67,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",131,0)
 . N I S CDT=$P($G(@(RT_+IE1_",67,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",132,0)
 . K @(RT_"""ASTS"","_+SYS_","""_(COD_" ")_""","_CDT_","_IE1_","_IE2_")")
"RTN","ICDIDX",133,0)
 Q
"RTN","ICDIDX",134,0)
 ;
"RTN","ICDIDX",135,0)
SADS(ICD) ; Set ROOT("ADS",<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",136,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",137,0)
 S EXC=+($$EXC(DA(1),RT)) Q:+EXC'>0  S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",138,0)
 S @(RT_"""ADS"","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")=""
"RTN","ICDIDX",139,0)
 Q
"RTN","ICDIDX",140,0)
KADS(ICD) ; Kill ROOT("ADS",<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",141,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",142,0)
 S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",143,0)
 K @(RT_"""ADS"","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")
"RTN","ICDIDX",144,0)
 Q
"RTN","ICDIDX",145,0)
SADSS1(ICD) ; Set ROOT("ADSS",SYS,<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",146,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",147,0)
 S EXC=+($$EXC(DA(1),RT)) Q:+EXC'>0  S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",148,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDIDX",149,0)
 S @(RT_"""ADSS"","_+SYS_","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")=""
"RTN","ICDIDX",150,0)
 Q
"RTN","ICDIDX",151,0)
KADSS1(ICD) ; Kill ROOT("ADSS",SYS,<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",152,0)
 Q:'$L($G(X))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  N EXC,COD,SYS,RT,CDT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",153,0)
 S CDT=+($G(X)) Q:CDT'?7N  S COD=$P($G(@(RT_DA(1)_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",154,0)
 S SYS=$P($G(@(RT_DA(1)_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDIDX",155,0)
 K @(RT_"""ADSS"","_+SYS_","""_(COD_" ")_""","_CDT_","_DA(1)_","_DA_")")
"RTN","ICDIDX",156,0)
 Q
"RTN","ICDIDX",157,0)
SADSS2(ICD) ; Set ROOT("ADSS",SYS,<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",158,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,COD,CDT,SYS,IE1,IE2,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",159,0)
 S EXC=$$EXC(DA,RT) Q:+EXC'>0  S SYS=+($G(X)) Q:+SYS'>0  S COD=$P($G(@(RT_+($G(DA))_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",160,0)
 S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",68,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",161,0)
 . N I S CDT=$P($G(@(RT_+IE1_",68,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",162,0)
 . S @(RT_"""ADSS"","_+SYS_","""_(COD_" ")_""","_CDT_","_IE1_","_IE2_")")=""
"RTN","ICDIDX",163,0)
 Q
"RTN","ICDIDX",164,0)
KADSS2(ICD) ; Set ROOT("ADSS",SYS,<code>,<dt>,<file ien>,<dx ien>)
"RTN","ICDIDX",165,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  N WRDS,I,WD,TXT,COD,CDT,SYS,IE1,IE2,EXC,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",166,0)
 S SYS=+($G(X)) Q:+SYS'>0  S COD=$P($G(@(RT_+($G(DA))_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",167,0)
 S IE1=+($G(DA)),IE2=0 F  S IE2=$O(@(RT_+IE1_",68,"_IE2_")")) Q:+IE2'>0  D
"RTN","ICDIDX",168,0)
 . N I S CDT=$P($G(@(RT_+IE1_",68,"_IE2_",0)")),"^",1) Q:CDT'?7N
"RTN","ICDIDX",169,0)
 . K @(RT_"""ADSS"","_+SYS_","""_(COD_" ")_""","_CDT_","_IE1_","_IE2_")")
"RTN","ICDIDX",170,0)
 Q
"RTN","ICDIDX",171,0)
SAEXC(ICD) ; Set ROOT("AEXC",<code>,<ien>)
"RTN","ICDIDX",172,0)
 Q:+($G(DA))'>0  N COD,EXC,RT  S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S COD=$P($G(@(RT_+DA_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",173,0)
 S EXC=$$EXC(DA,RT) S:+EXC'>0 @(RT_"""AEXC"","""_(COD_" ")_""","_DA_")")=""
"RTN","ICDIDX",174,0)
 Q
"RTN","ICDIDX",175,0)
KAEXC(ICD) ; Kill ROOT("AEXC",<code>,<ien>)
"RTN","ICDIDX",176,0)
 Q:+($G(DA))'>0  N COD,EXC,RT  S RT=$$RT(+($G(ICD))) Q:'$L(RT)  S COD=$P($G(@(RT_+DA_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX",177,0)
 K @(RT_"""AEXC"","""_(COD_" ")_""","_DA_")")
"RTN","ICDIDX",178,0)
 Q
"RTN","ICDIDX",179,0)
 ;
"RTN","ICDIDX",180,0)
 ; Miscellaneous
"RTN","ICDIDX",181,0)
EXC(X,Y) ;   Exclude from lookup
"RTN","ICDIDX",182,0)
 N COD,EFF,LDS,IEN,RT S IEN=+($G(X)),RT=$G(Y) Q:+IEN'>0 0  Q:'$L(RT) 0  S COD=$P($G(@(RT_+IEN_",0)")),"^",1)
"RTN","ICDIDX",183,0)
 S EFF=$O(@(RT_+IEN_",66,0)")),LDS=$O(@(RT_+IEN_",68,0)")) Q:$L(COD)&(+EFF>0)&(+LDS>0) 1
"RTN","ICDIDX",184,0)
 Q 0
"RTN","ICDIDX",185,0)
RM(ICD) ;   Remove Main
"RTN","ICDIDX",186,0)
 N IX,RT S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",187,0)
 S IX=" " F  S IX=$O(@(RT_""""_IX_""")")) Q:'$L(IX)  D
"RTN","ICDIDX",188,0)
 . K @(RT_""""_IX_""")")
"RTN","ICDIDX",189,0)
 Q
"RTN","ICDIDX",190,0)
RE(ICD) ;   Re-Index
"RTN","ICDIDX",191,0)
 N ZTQUEUED,DIK,IX,RT,DA S RT=$$RT(+($G(ICD))) Q:'$L(RT)
"RTN","ICDIDX",192,0)
 S DIK=RT,ZTQUEUED="" D IXALL^DIK
"RTN","ICDIDX",193,0)
 Q
"RTN","ICDIDX",194,0)
RT(X) ;   Root from File #
"RTN","ICDIDX",195,0)
 Q $S(+($G(X))=80:$$ROOT^ICDEX(80),+($G(X))=80.1:$$ROOT^ICDEX(80.1),1:"")
"RTN","ICDIDX",196,0)
TM(X,Y) ;   Trim Y
"RTN","ICDIDX",197,0)
 S X=$G(X),Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDIDX",198,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDIDX",199,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDIDX",200,0)
 Q X
"RTN","ICDIDX2")
0^27^B39101671
"RTN","ICDIDX2",1,0)
ICDIDX2 ;DLS/DEK - MUMPS Cross Reference Routine for History ;04/21/2014
"RTN","ICDIDX2",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDIDX2",3,0)
 ;               
"RTN","ICDIDX2",4,0)
 ; Global Variables
"RTN","ICDIDX2",5,0)
 ;    None
"RTN","ICDIDX2",6,0)
 ;               
"RTN","ICDIDX2",7,0)
 ; External References
"RTN","ICDIDX2",8,0)
 ;    None
"RTN","ICDIDX2",9,0)
 ;               
"RTN","ICDIDX2",10,0)
 ; Common Variables used:
"RTN","ICDIDX2",11,0)
 ; 
"RTN","ICDIDX2",12,0)
 ;    ICDCOD          ICD Code from Global
"RTN","ICDIDX2",13,0)
 ;    ICDCODX         ICD Code passed in (X)
"RTN","ICDIDX2",14,0)
 ;    ICDEFF          Effective Date
"RTN","ICDIDX2",15,0)
 ;    ICDSTA          Status
"RTN","ICDIDX2",16,0)
 ;    ICDNOD          Global Node (to reduce Global hits)
"RTN","ICDIDX2",17,0)
 ;    DA              IEN file 80, 80.1, 80.066 or 80.166
"RTN","ICDIDX2",18,0)
 ;    ICDIEN,DA(1)    IEN of file 80 or 80.1
"RTN","ICDIDX2",19,0)
 ;    ICDHIS          IEN of file 80.066 or 80.166
"RTN","ICDIDX2",20,0)
 ;    X               Data passed in to be indexed
"RTN","ICDIDX2",21,0)
 ;                 
"RTN","ICDIDX2",22,0)
 Q
"RTN","ICDIDX2",23,0)
SAHC(ICD) ; Code            .01      ACT1   Set
"RTN","ICDIDX2",24,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN,ICDSYS,RT,EXC
"RTN","ICDIDX2",25,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA)),RT) Q:+EXC'>0
"RTN","ICDIDX2",26,0)
 S ICDCODX=$G(X) Q:'$L(ICDCODX)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0
"RTN","ICDIDX2",27,0)
 Q:'$D(@(RT_+ICDIEN_",66)"))
"RTN","ICDIDX2",28,0)
 S ICDHIS=0 F  S ICDHIS=$O(@(RT_+ICDIEN_",66,"_ICDHIS_")")) Q:+ICDHIS=0  D
"RTN","ICDIDX2",29,0)
 . N DA,ICDSYS,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICDIDX2",30,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICDIDX2",31,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  K ICDSYS D SHIS
"RTN","ICDIDX2",32,0)
 . S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 SHIS
"RTN","ICDIDX2",33,0)
 Q
"RTN","ICDIDX2",34,0)
KAHC(ICD) ; Code            .01      ACT1   Kill
"RTN","ICDIDX2",35,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN,ICDSYS,RT
"RTN","ICDIDX2",36,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S ICDCODX=$G(X) Q:'$L(ICDCODX)
"RTN","ICDIDX2",37,0)
 S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(@(RT_+ICDIEN_",66)"))
"RTN","ICDIDX2",38,0)
 S ICDHIS=0 F  S ICDHIS=$O(@(RT_+ICDIEN_",66,"_ICDHIS_")")) Q:+ICDHIS=0  D
"RTN","ICDIDX2",39,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICDIDX2",40,0)
 . S ICDCOD=ICDCODX Q:'$L($G(ICDCOD))
"RTN","ICDIDX2",41,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  K ICDSYS D KHIS
"RTN","ICDIDX2",42,0)
 . S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 KHIS
"RTN","ICDIDX2",43,0)
 Q
"RTN","ICDIDX2",44,0)
SAHD(ICD) ; Effective Date  66,.01   ACT2   Set
"RTN","ICDIDX2",45,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA(1))),RT) Q:+EXC'>0
"RTN","ICDIDX2",46,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDSYS
"RTN","ICDIDX2",47,0)
 D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))  S ICDEFF=+($G(X)) Q:+ICDEFF=0  K ICDSYS D SHIS
"RTN","ICDIDX2",48,0)
 S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 SHIS
"RTN","ICDIDX2",49,0)
 Q
"RTN","ICDIDX2",50,0)
KAHD(ICD) ; Effective Date  66,.01   ACT2   Kill
"RTN","ICDIDX2",51,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDSYS
"RTN","ICDIDX2",52,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  D HDC Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))
"RTN","ICDIDX2",53,0)
 S ICDEFF=+($G(X)) Q:+ICDEFF=0  K ICDSYS D KHIS
"RTN","ICDIDX2",54,0)
 S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 KHIS
"RTN","ICDIDX2",55,0)
 Q
"RTN","ICDIDX2",56,0)
SAHS(ICD) ; Status          66,.02   ACT3   Set
"RTN","ICDIDX2",57,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDSYS,RT,EXC
"RTN","ICDIDX2",58,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA(1))),RT) Q:+EXC'>0
"RTN","ICDIDX2",59,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICDIDX2",60,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  K ICDSYS D SHIS
"RTN","ICDIDX2",61,0)
 S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 SHIS
"RTN","ICDIDX2",62,0)
 Q
"RTN","ICDIDX2",63,0)
KAHS(ICD) ; Status          66,.02   ACT3   Kill
"RTN","ICDIDX2",64,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDSYS,ICDSYS,RT
"RTN","ICDIDX2",65,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)
"RTN","ICDIDX2",66,0)
 D HDC Q:'$L($G(ICDCOD))  Q:+ICDEFF=0
"RTN","ICDIDX2",67,0)
 S ICDSTA=$G(X) Q:'$L(ICDSTA)  K ICDSYS D KHIS
"RTN","ICDIDX2",68,0)
 S ICDSYS=+($P($G(@(RT_+($G(DA(1)))_",1)")),"^",1)) D:+ICDSYS>0 KHIS
"RTN","ICDIDX2",69,0)
 Q
"RTN","ICDIDX2",70,0)
SAHCS(ICD) ; Coding System   1.1      ACT4   Set
"RTN","ICDIDX2",71,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN,ICDSYS,RT,EXC
"RTN","ICDIDX2",72,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA)),RT) Q:+EXC'>0
"RTN","ICDIDX2",73,0)
 S ICDSYS=$G(X) Q:'$L(ICDSYS)  S ICDIEN=+($G(DA)) Q:+ICDIEN'>0
"RTN","ICDIDX2",74,0)
 S EXC=$$EXC(DA) Q:+EXC'>0  Q:'$D(@(RT_+ICDIEN_",66)"))
"RTN","ICDIDX2",75,0)
 S ICDHIS=0 F  S ICDHIS=$O(@(RT_+ICDIEN_",66,"_ICDHIS_")")) Q:+ICDHIS=0  D
"RTN","ICDIDX2",76,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICDIDX2",77,0)
 . S ICDCOD=$P($G(@(RT_+ICDIEN_",0)")),"^",1) Q:'$L($G(ICDCOD))
"RTN","ICDIDX2",78,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D SHIS
"RTN","ICDIDX2",79,0)
 Q
"RTN","ICDIDX2",80,0)
KAHCS(ICD) ; Coding System   1.1      ACT4   Kill
"RTN","ICDIDX2",81,0)
 N ICDNOD,ICDSTA,ICDEFF,ICDCOD,ICDCODX,ICDHIS,ICDIEN,ICDSYS,RT
"RTN","ICDIDX2",82,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S ICDSYS=$G(X) Q:'$L(ICDSYS)
"RTN","ICDIDX2",83,0)
 S ICDIEN=+($G(DA)) Q:+ICDIEN'>0  Q:'$D(@(RT_+ICDIEN_",66)"))
"RTN","ICDIDX2",84,0)
 S ICDHIS=0 F  S ICDHIS=$O(@(RT_+ICDIEN_",66,"_ICDHIS_")")) Q:+ICDHIS=0  D
"RTN","ICDIDX2",85,0)
 . N DA,X S DA=+ICDHIS,DA(1)=+ICDIEN D HDC
"RTN","ICDIDX2",86,0)
 . S ICDCOD=$P($G(@(RT_+ICDIEN_",0)")),"^",1) Q:'$L($G(ICDCOD))
"RTN","ICDIDX2",87,0)
 . Q:'$L($G(ICDEFF))  Q:'$L($G(ICDSTA))  D KHIS
"RTN","ICDIDX2",88,0)
 Q
"RTN","ICDIDX2",89,0)
SNUM(ICD) ; Code            .01      AN1    Set
"RTN","ICDIDX2",90,0)
 N RT,EXC,NUM,SYS
"RTN","ICDIDX2",91,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA)),RT) Q:+EXC'>0
"RTN","ICDIDX2",92,0)
 S SYS=+($P($G(@(RT_+DA_",1)")),"^",1)) Q:+SYS'>0
"RTN","ICDIDX2",93,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0
"RTN","ICDIDX2",94,0)
 S NUM=$$NUM^ICDEX(X) Q:+NUM'>0
"RTN","ICDIDX2",95,0)
 S @(RT_""""_"AN"_+SYS_""","_+NUM_","_+DA_")")=""
"RTN","ICDIDX2",96,0)
 Q
"RTN","ICDIDX2",97,0)
KNUM(ICD) ; Code            .01      AN1    Kill
"RTN","ICDIDX2",98,0)
 N RT,NUM,SYS
"RTN","ICDIDX2",99,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S SYS=+($P($G(@(RT_+DA_",1)")),"^",1)) Q:+SYS'>0
"RTN","ICDIDX2",100,0)
 Q:'$L($G(X))  Q:+($G(DA))'>0  S NUM=$$NUM^ICDEX(X) Q:+NUM'>0
"RTN","ICDIDX2",101,0)
 K @(RT_""""_"AN"_+SYS_""","_+NUM_","_+DA_")")
"RTN","ICDIDX2",102,0)
 Q
"RTN","ICDIDX2",103,0)
SNUM2(ICD) ; Coding System   1.1      AN2    Set
"RTN","ICDIDX2",104,0)
 N RT,EXC,NUM,SYS,COD S SYS=+($G(X)) Q:+SYS'>0  Q:+($G(DA))'>0
"RTN","ICDIDX2",105,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S EXC=$$EXC(+($G(DA)),RT) Q:+EXC'>0
"RTN","ICDIDX2",106,0)
 S COD=$P($G(@(RT_+DA_",0)")),"^",1) Q:'$L(COD)
"RTN","ICDIDX2",107,0)
 S NUM=$$NUM^ICDEX(COD) Q:+NUM'>0
"RTN","ICDIDX2",108,0)
 S @(RT_""""_"AN"_+SYS_""","_+NUM_","_+DA_")")=""
"RTN","ICDIDX2",109,0)
 Q
"RTN","ICDIDX2",110,0)
KNUM2(ICD) ; Coding System   1.1      AN2    Kill
"RTN","ICDIDX2",111,0)
 N RT,EXC,NUM,SYS,COD S SYS=+($G(X)) Q:+SYS'>0  Q:+($G(DA))'>0
"RTN","ICDIDX2",112,0)
 S RT=$$RT($G(ICD)) Q:'$L(RT)  S COD=$P($G(@(RT_+DA_",0)")),"^",1)
"RTN","ICDIDX2",113,0)
 Q:'$L(COD)  S NUM=$$NUM^ICDEX(COD) Q:+NUM'>0
"RTN","ICDIDX2",114,0)
 K @(RT_""""_"AN"_+SYS_""","_+NUM_","_+DA_")")
"RTN","ICDIDX2",115,0)
 Q
"RTN","ICDIDX2",116,0)
SSYS(ICD) ; Coding System - Static
"RTN","ICDIDX2",117,0)
 Q
"RTN","ICDIDX2",118,0)
KSYS(ICD) ; Coding System - Static
"RTN","ICDIDX2",119,0)
 Q
"RTN","ICDIDX2",120,0)
 ;    
"RTN","ICDIDX2",121,0)
 ; Miscellaneous
"RTN","ICDIDX2",122,0)
HDC ;   Set Common Variables (Code, Status and Effective Date)
"RTN","ICDIDX2",123,0)
 Q:'$L($G(RT))  S (ICDCOD,ICDSTA,ICDEFF)=""  Q:'$L($G(RT))
"RTN","ICDIDX2",124,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(@(RT_+($G(DA(1)))_",66,"_+($G(DA))_",0)"))
"RTN","ICDIDX2",125,0)
 S ICDCOD=$P($G(@(RT_+($G(DA(1)))_",0)")),"^",1),ICDNOD=$G(@(RT_+($G(DA(1)))_",66,"_+($G(DA))_",0)"))
"RTN","ICDIDX2",126,0)
 S ICDSTA=$P(ICDNOD,"^",2),ICDEFF=$P(ICDNOD,"^",1)
"RTN","ICDIDX2",127,0)
 Q
"RTN","ICDIDX2",128,0)
SHIS ;   Set  ^ROOT("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICDIDX2",129,0)
 ;   Set  ^ROOT("ACTS",<sys>,<code>,<status>,<date>,<ien>,<history>)
"RTN","ICDIDX2",130,0)
 Q:'$L($G(RT))  N EXC Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","ICDIDX2",131,0)
 Q:'$D(@(RT_+($G(DA(1)))_",66,"_+($G(DA))_",0)"))
"RTN","ICDIDX2",132,0)
 Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))  Q:'$L($G(ICDEFF))
"RTN","ICDIDX2",133,0)
 S @(RT_"""ACT"","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")=""
"RTN","ICDIDX2",134,0)
 S:+($G(ICDSYS))>0 @(RT_"""ACTS"","_+ICDSYS_","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")=""
"RTN","ICDIDX2",135,0)
 I +($G(ICDSYS))'>0 D
"RTN","ICDIDX2",136,0)
 . N SYS S SYS=+($P($G(@(RT_+DA(1)_",1)")),"^",1))
"RTN","ICDIDX2",137,0)
 . S:+SYS>0 @(RT_"""ACTS"","_+SYS_","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")=""
"RTN","ICDIDX2",138,0)
 Q
"RTN","ICDIDX2",139,0)
KHIS ;   Kill ^ROOT("ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","ICDIDX2",140,0)
 ;   Kill ^ROOT("ACTS",<sys>,<code>,<status>,<date>,<ien>,<history>)
"RTN","ICDIDX2",141,0)
 Q:'$L($G(RT))  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0  Q:'$D(@(RT_+($G(DA(1)))_",66,"_+($G(DA))_",0)"))
"RTN","ICDIDX2",142,0)
 Q:'$L($G(ICDCOD))  Q:'$L($G(ICDSTA))  Q:'$L($G(ICDEFF))
"RTN","ICDIDX2",143,0)
 K @(RT_"""ACT"","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")
"RTN","ICDIDX2",144,0)
 K:+($G(ICDSYS))>0 @(RT_"""ACTS"","_+ICDSYS_","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")
"RTN","ICDIDX2",145,0)
 I +($G(ICDSYS))'>0 D
"RTN","ICDIDX2",146,0)
 . N SYS S SYS=+($P($G(@(RT_+DA(1)_",1)")),"^",1))
"RTN","ICDIDX2",147,0)
 . K:+SYS>0 @(RT_"""ACTS"","_+SYS_","""_(ICDCOD_" ")_""","_+ICDSTA_","_+ICDEFF_","_+DA(1)_","_+DA_")")
"RTN","ICDIDX2",148,0)
 Q
"RTN","ICDIDX2",149,0)
EXC(X,Y) ;   Exclude from lookup
"RTN","ICDIDX2",150,0)
 N COD,EFF,LDS,IEN,RT S IEN=+($G(X)),RT=$G(Y) Q:+IEN'>0 0  Q:'$L(RT) 0  S COD=$P($G(@(RT_+IEN_",0)")),"^",1)
"RTN","ICDIDX2",151,0)
 S EFF=$O(@(RT_+IEN_",66,0)")),LDS=$O(@(RT_+IEN_",68,0)")) Q:$L(COD)&(+EFF>0)&(+LDS>0) 1
"RTN","ICDIDX2",152,0)
 Q 0
"RTN","ICDIDX2",153,0)
RT(X) ;   Root from File #
"RTN","ICDIDX2",154,0)
 Q $S(+($G(X))=80:$$ROOT^ICDEX(80),+($G(X))=80.1:$$ROOT^ICDEX(80.1),1:"")
"RTN","ICDREF")
0^73^B499599
"RTN","ICDREF",1,0)
ICDREF ;ALB/EG - GROUPER UTILITY FUNCTIONS ;04/21/2014
"RTN","ICDREF",2,0)
 ;;18.0;DRG Grouper;**14,17,57**;Oct 20, 2000;Build 1
"RTN","ICDREF",3,0)
 ;               
"RTN","ICDREF",4,0)
 ; KER  Remove direct global reads, update for ICD-10
"RTN","ICDREF",5,0)
 ;
"RTN","ICDREF",6,0)
 ; Global Variables
"RTN","ICDREF",7,0)
 ;    None
"RTN","ICDREF",8,0)
 ;               
"RTN","ICDREF",9,0)
 ; External References
"RTN","ICDREF",10,0)
 ;    $$REF^ICDEX         ICR  N/A
"RTN","ICDREF",11,0)
 ;    $$VMDCDX^ICDEX      ICR  N/A
"RTN","ICDREF",12,0)
 ;    $$VMDCOP^ICDEX      ICR  N/A
"RTN","ICDREF",13,0)
 ;               
"RTN","ICDREF",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDREF",15,0)
 ;     DADRGFY,DAMDC,DRGFY,ICDMDC,X
"RTN","ICDREF",16,0)
 ;     
"RTN","ICDREF",17,0)
RTABLE(ICDRG,ICDDATE) ; Return Reference Table
"RTN","ICDREF",18,0)
 ;  Input:      ICDRG - DRG entry
"RTN","ICDREF",19,0)
 ;              ICDDATE - Date to use for resolving correct entry
"RTN","ICDREF",20,0)
 ;
"RTN","ICDREF",21,0)
 ;  Output:     Table reference associted with entry from DRG
"RTN","ICDREF",22,0)
 ;              file
"RTN","ICDREF",23,0)
 Q $$REF^ICDEX($G(ICDRG),$G(ICDDATE))
"RTN","ICDREF",24,0)
VMDC(CODE) ; Get versioned MDC for Diagnosis Code
"RTN","ICDREF",25,0)
 Q $$VMDCDX^ICDEX($G(CODE),$G(ICDDATE))
"RTN","ICDREF",26,0)
GETPVMDC(CODE,ICDMDC,DRGFY) ; Get versioned MDC for Op/Pro ICD code from previous years
"RTN","ICDREF",27,0)
 Q $$VMDCOP^ICDEX(+($G(CODE)),$G(ICDMDC),$G(DRGFY))
"RTN","ICDSAPI")
0^62^B3564588
"RTN","ICDSAPI",1,0)
ICDSAPI ;ISL/KER - ICD Search API ;04/21/2014
"RTN","ICDSAPI",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDSAPI",3,0)
 ;               
"RTN","ICDSAPI",4,0)
 ; Global Variables
"RTN","ICDSAPI",5,0)
 ;    None
"RTN","ICDSAPI",6,0)
 ;               
"RTN","ICDSAPI",7,0)
 ; External References
"RTN","ICDSAPI",8,0)
 ;    ^DIC                ICR  10006
"RTN","ICDSAPI",9,0)
 ;               
"RTN","ICDSAPI",10,0)
EN ; Main Entry Point
"RTN","ICDSAPI",11,0)
HELP ; Developer Help for an API
"RTN","ICDSAPI",12,0)
 D HLP^ICDEXH("SDD") Q
"RTN","ICDSAPI",13,0)
 ;
"RTN","ICDSAPI",14,0)
SEARCH(FILEID,SCREEN,DISFIL,DATE) ; 
"RTN","ICDSAPI",15,0)
 ;
"RTN","ICDSAPI",16,0)
 ; Input:
"RTN","ICDSAPI",17,0)
 ;
"RTN","ICDSAPI",18,0)
 ;    FILEID     This can be either a file number, a file root,
"RTN","ICDSAPI",19,0)
 ;               a file identifier, a coding system or a source
"RTN","ICDSAPI",20,0)
 ;               abbreviation that can be resolved to a file
"RTN","ICDSAPI",21,0)
 ;               number.  FILEID may be in the form of a file
"RTN","ICDSAPI",22,0)
 ;               number, a global root, a coding system (1, 2, 
"RTN","ICDSAPI",23,0)
 ;               30 OR 31), a source abbrevation (ICD, ICP,
"RTN","ICDSAPI",24,0)
 ;               10D or 10P) or a mnemonic (DIAG or PROC).
"RTN","ICDSAPI",25,0)
 ;      
"RTN","ICDSAPI",26,0)
 ;    SCREEN     This is a string of MUMPS code that is 
"RTN","ICDSAPI",27,0)
 ;               executed to screen an entry from selection.
"RTN","ICDSAPI",28,0)
 ;               It must contain an IF statement to set the
"RTN","ICDSAPI",29,0)
 ;               value of $T.  Those entries that the IF 
"RTN","ICDSAPI",30,0)
 ;               statement sets $T to 0 (false) will not be
"RTN","ICDSAPI",31,0)
 ;               displayed or selectable. 
"RTN","ICDSAPI",32,0)
 ;
"RTN","ICDSAPI",33,0)
 ;    DISFIL       A string of alphabetic characters which 
"RTN","ICDSAPI",34,0)
 ;               alter how the lookup responds. Default 
"RTN","ICDSAPI",35,0)
 ;               value "AEMQZ".  DIC(0) will be set to the
"RTN","ICDSAPI",36,0)
 ;               contents of this parameter.
"RTN","ICDSAPI",37,0)
 ; 
"RTN","ICDSAPI",38,0)
 ;               Parameters applicable to a versioned file
"RTN","ICDSAPI",39,0)
 ;               
"RTN","ICDSAPI",40,0)
 ;                 A   Ask the entry; if erroneous, ask again
"RTN","ICDSAPI",41,0)
 ;                 B   Only the B index is used
"RTN","ICDSAPI",42,0)
 ;                 E   Echo information
"RTN","ICDSAPI",43,0)
 ;                 F   Forget the lookup value
"RTN","ICDSAPI",44,0)
 ;                 I   Ignore the special lookup program
"RTN","ICDSAPI",45,0)
 ;                 M   Multiple-index lookup allowed
"RTN","ICDSAPI",46,0)
 ;                 N   Uppercase, IEN lookup allowed (not forced)
"RTN","ICDSAPI",47,0)
 ;                 O   Only find one entry if it matches exactly
"RTN","ICDSAPI",48,0)
 ;                 S   Suppresses display of .01
"RTN","ICDSAPI",49,0)
 ;                 T   Search until user selects or enters ^^
"RTN","ICDSAPI",50,0)
 ;                 X   EXact match required 
"RTN","ICDSAPI",51,0)
 ;                 Z   Zero node in Y(0), external form in Y(0,0)
"RTN","ICDSAPI",52,0)
 ;                 
"RTN","ICDSAPI",53,0)
 ;               Parameters not Applicable to a versioned file
"RTN","ICDSAPI",54,0)
 ;               and ignored by this lookup
"RTN","ICDSAPI",55,0)
 ;               
"RTN","ICDSAPI",56,0)
 ;                 C   Versioned cross-references not turned off
"RTN","ICDSAPI",57,0)
 ;                 K   Primary Key not established
"RTN","ICDSAPI",58,0)
 ;                 L   Learning a new entry LAYGO not allowed
"RTN","ICDSAPI",59,0)
 ;                 n   ICD has no pure numeric entries
"RTN","ICDSAPI",60,0)
 ;                 Q   Input is pre-processed, ?? not necessary
"RTN","ICDSAPI",61,0)
 ;                 U   All values are external
"RTN","ICDSAPI",62,0)
 ;                 V   Verification is not optional
"RTN","ICDSAPI",63,0)
 ;       
"RTN","ICDSAPI",64,0)
 ;    DATE        Versioning Date (Fileman format)
"RTN","ICDSAPI",65,0)
 ;    
"RTN","ICDSAPI",66,0)
 ;                  If supplied only active codes on that date
"RTN","ICDSAPI",67,0)
 ;                  will be included in the selection list.
"RTN","ICDSAPI",68,0)
 ;               
"RTN","ICDSAPI",69,0)
 ;                  If not supplied, the date will default to
"RTN","ICDSAPI",70,0)
 ;                  TODAY and all codes may be selected, active
"RTN","ICDSAPI",71,0)
 ;                  and inactive.
"RTN","ICDSAPI",72,0)
 ;               
"RTN","ICDSAPI",73,0)
 ;                  In both cases the display will be altered
"RTN","ICDSAPI",74,0)
 ;                  based on the date.
"RTN","ICDSAPI",75,0)
 ;    
"RTN","ICDSAPI",76,0)
 ;    ICDFMT     Output Format
"RTN","ICDSAPI",77,0)
 ;   
"RTN","ICDSAPI",78,0)
 ;                 1  Fileman, Code and Short Text (default)
"RTN","ICDSAPI",79,0)
 ;             
"RTN","ICDSAPI",80,0)
 ;                    250.00    DMII WO CMP NT ST UNCNTR
"RTN","ICDSAPI",81,0)
 ;                
"RTN","ICDSAPI",82,0)
 ;                 2  Fileman, Code and Description
"RTN","ICDSAPI",83,0)
 ;             
"RTN","ICDSAPI",84,0)
 ;                    250.00    DIABETES MELLITUS WITHOUT 
"RTN","ICDSAPI",85,0)
 ;                              MENTION OF COMPLICATION, TYPE 
"RTN","ICDSAPI",86,0)
 ;                              II OR UNSPECIFIED TYPE, NOT 
"RTN","ICDSAPI",87,0)
 ;                              STATED AS UNCONTROLLED
"RTN","ICDSAPI",88,0)
 ;                          
"RTN","ICDSAPI",89,0)
 ;                 3  Lexicon, Short Text and Code
"RTN","ICDSAPI",90,0)
 ;             
"RTN","ICDSAPI",91,0)
 ;                    DMII WO CMP NT ST UNCNTR (250.00)
"RTN","ICDSAPI",92,0)
 ;                
"RTN","ICDSAPI",93,0)
 ;                 4  Lexicon, Description and Code
"RTN","ICDSAPI",94,0)
 ;             
"RTN","ICDSAPI",95,0)
 ;                    DIABETES MELLITUS WITHOUT MENTION OF 
"RTN","ICDSAPI",96,0)
 ;                    COMPLICATION, TYPE II OR UNSPECIFIED TYPE,
"RTN","ICDSAPI",97,0)
 ;                    NOT STATED AS UNCONTROLLED (250.00)
"RTN","ICDSAPI",98,0)
 ;         
"RTN","ICDSAPI",99,0)
 ; Output:
"RTN","ICDSAPI",100,0)
 ; 
"RTN","ICDSAPI",101,0)
 ;    $$SEARCH   This is the value of Y (below)
"RTN","ICDSAPI",102,0)
 ;    
"RTN","ICDSAPI",103,0)
 ;    Y          IEN ^ Code           Fileman
"RTN","ICDSAPI",104,0)
 ;    
"RTN","ICDSAPI",105,0)
 ;               or
"RTN","ICDSAPI",106,0)
 ;               
"RTN","ICDSAPI",107,0)
 ;               -1 iF not found
"RTN","ICDSAPI",108,0)
 ;    
"RTN","ICDSAPI",109,0)
 ;    If DISFIL/DIC(0) containg the character "Z"
"RTN","ICDSAPI",110,0)
 ;    
"RTN","ICDSAPI",111,0)
 ;      Y(0)     0 Node               Fileman
"RTN","ICDSAPI",112,0)
 ;      Y(0,0)   Code                 Fileman
"RTN","ICDSAPI",113,0)
 ;      Y(0,1)   $$ICDDX or $$ICDOP   Non-Fileman
"RTN","ICDSAPI",114,0)
 ;      Y(0,2)   Long Description     Non-Fileman
"RTN","ICDSAPI",115,0)
 ;    
"RTN","ICDSAPI",116,0)
 N ROOT,FILE,SYS,ICDVDT
"RTN","ICDSAPI",117,0)
 S FILE=$$FILE^ICDEX($G(FILEID)) Q:+FILE'>0 -1
"RTN","ICDSAPI",118,0)
 S (DIC,ROOT)=$$ROOT^ICDEX(FILE) Q:'$L(ROOT) -1
"RTN","ICDSAPI",119,0)
 S DIC("S")=$S($L($G(SCREEN)):$G(SCREEN),1:"I 1")
"RTN","ICDSAPI",120,0)
 S:$G(DATE)?7N ICDVDT=$G(DATE)
"RTN","ICDSAPI",121,0)
 S SYS=$$SYS^ICDEX(FILE,$G(ICDVDT)) S:+SYS>0 ICDSYS=+SYS
"RTN","ICDSAPI",122,0)
 S DISFIL=$G(DISFIL,"AEMQZ") S DISFIL=$TR(DISFIL,"L","") K DLAYGO
"RTN","ICDSAPI",123,0)
 S DIC(0)=DISFIL D ^DIC S:+($G(Y))'>0 Y=-1 K DIC,ICDSYS,ICDFMT
"RTN","ICDSAPI",124,0)
 Q Y
"RTN","ICDSUPT")
0^48^B4754457
"RTN","ICDSUPT",1,0)
ICDSUPT ;DLS/DEK - ICD SUPPORT FOR APIS ;04/21/2014
"RTN","ICDSUPT",2,0)
 ;;18.0;DRG Grouper;**6,57**;Oct 20, 2000;Build 1
"RTN","ICDSUPT",3,0)
 ;               
"RTN","ICDSUPT",4,0)
 ; Global Variables
"RTN","ICDSUPT",5,0)
 ;    None
"RTN","ICDSUPT",6,0)
 ;               
"RTN","ICDSUPT",7,0)
 ; External References
"RTN","ICDSUPT",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDSUPT",9,0)
 ;               
"RTN","ICDSUPT",10,0)
EN ; Main Entry Point
"RTN","ICDSUPT",11,0)
HELP ; Developer Help for an API
"RTN","ICDSUPT",12,0)
 D HLP^ICDEXH("LEG") Q
"RTN","ICDSUPT",13,0)
 ;
"RTN","ICDSUPT",14,0)
EFF(FILE,IEN,CDT) ; returns effective date and status for code/modifier
"RTN","ICDSUPT",15,0)
 ;
"RTN","ICDSUPT",16,0)
 ; Input:
"RTN","ICDSUPT",17,0)
 ; 
"RTN","ICDSUPT",18,0)
 ;    FILE   File number (required)
"RTN","ICDSUPT",19,0)
 ;           80 = ICD DX
"RTN","ICDSUPT",20,0)
 ;           80.1 = ICD O/P
"RTN","ICDSUPT",21,0)
 ;    IEN    ICD IEN (required)
"RTN","ICDSUPT",22,0)
 ;    CDT    Date to check (FileMan format) (required)
"RTN","ICDSUPT",23,0)
 ;
"RTN","ICDSUPT",24,0)
 ; Output:  
"RTN","ICDSUPT",25,0)
 ; 
"RTN","ICDSUPT",26,0)
 ;   A 3 piece "^" delimited string
"RTN","ICDSUPT",27,0)
 ;   
"RTN","ICDSUPT",28,0)
 ;          1   Status
"RTN","ICDSUPT",29,0)
 ;                1 - Active
"RTN","ICDSUPT",30,0)
 ;                0 - Inactive  
"RTN","ICDSUPT",31,0)
 ;          2   Inactivation Date
"RTN","ICDSUPT",32,0)
 ;          3   Activation Date
"RTN","ICDSUPT",33,0)
 ;     -or-
"RTN","ICDSUPT",34,0)
 ;          -1^error message
"RTN","ICDSUPT",35,0)
 ;
"RTN","ICDSUPT",36,0)
 ;
"RTN","ICDSUPT",37,0)
 ;   3 piece "^" delimited string
"RTN","ICDSUPT",38,0)
 ;   
"RTN","ICDSUPT",39,0)
 ;      1  Status
"RTN","ICDSUPT",40,0)
 ;      2  Activation Date
"RTN","ICDSUPT",41,0)
 ;      3  Inactivation Date
"RTN","ICDSUPT",42,0)
 ;
"RTN","ICDSUPT",43,0)
 N ICDD,ICDF,ICDI,ICDR,ICDX,ICDY
"RTN","ICDSUPT",44,0)
 I $G(IEN)="" Q "-1^No Code Selected"
"RTN","ICDSUPT",45,0)
 S ICDF=$$FILE^ICDEX($G(FILE)) Q:+($G(ICDF))'>0 "-1^Invalid File Selected"
"RTN","ICDSUPT",46,0)
 S ICDR=$$ROOT^ICDEX($G(ICDF)) Q:'$L(ICDR) "-1^Invalid File Selected"
"RTN","ICDSUPT",47,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0 "-1^IEN Invalid"
"RTN","ICDSUPT",48,0)
 S ICDY=$P($G(@(ICDR_+ICDI_",1)")),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDSUPT",49,0)
 S ICDD=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX($G(CDT),,ICDY))
"RTN","ICDSUPT",50,0)
 S ICDX=$P($$SAI^ICDEX($G(ICDF),$G(ICDI),$G(ICDD)),"^",1,3)
"RTN","ICDSUPT",51,0)
 Q $S($L(ICDX,"^")=3:($P(ICDX,"^",1)_"^"_$P(ICDX,"^",3)_"^"_$P(ICDX,"^",2)),1:"-1^Not found")
"RTN","ICDSUPT",52,0)
LA(IEN,FILE,CDT) ; Last Current Activation Date
"RTN","ICDSUPT",53,0)
 ;
"RTN","ICDSUPT",54,0)
 ; Input:
"RTN","ICDSUPT",55,0)
 ; 
"RTN","ICDSUPT",56,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDSUPT",57,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDSUPT",58,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDSUPT",59,0)
 ;   
"RTN","ICDSUPT",60,0)
 ; Output:
"RTN","ICDSUPT",61,0)
 ; 
"RTN","ICDSUPT",62,0)
 ;   $$LA   Last Current Activation Date OR -1 ^ Error Message
"RTN","ICDSUPT",63,0)
 ;   
"RTN","ICDSUPT",64,0)
 Q $$LA^ICDEX($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDSUPT",65,0)
LI(IEN,FILE,CDT) ; Last Current Inactivation Date
"RTN","ICDSUPT",66,0)
 ; 
"RTN","ICDSUPT",67,0)
 ; Input:
"RTN","ICDSUPT",68,0)
 ; 
"RTN","ICDSUPT",69,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDSUPT",70,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDSUPT",71,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDSUPT",72,0)
 ;   
"RTN","ICDSUPT",73,0)
 ; Output:
"RTN","ICDSUPT",74,0)
 ; 
"RTN","ICDSUPT",75,0)
 ;   $$LI   Last Current Inactivation Date OR -1 ^ Error Message
"RTN","ICDSUPT",76,0)
 ;   
"RTN","ICDSUPT",77,0)
 Q $$LI^ICDEX($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDSUPT",78,0)
NUM(CODE) ; Convert Code to a Numeric Value (opposite of $$COD)
"RTN","ICDSUPT",79,0)
 ;
"RTN","ICDSUPT",80,0)
 ; Input:
"RTN","ICDSUPT",81,0)
 ; 
"RTN","ICDSUPT",82,0)
 ;    CODE   ICD CODE (required)
"RTN","ICDSUPT",83,0)
 ;
"RTN","ICDSUPT",84,0)
 ; Output:  
"RTN","ICDSUPT",85,0)
 ; 
"RTN","ICDSUPT",86,0)
 ;    NUM    Numerical representation of CODE
"RTN","ICDSUPT",87,0)
 ;    
"RTN","ICDSUPT",88,0)
 ;           or
"RTN","ICDSUPT",89,0)
 ;           
"RTN","ICDSUPT",90,0)
 ;           -1 on error
"RTN","ICDSUPT",91,0)
 ;  
"RTN","ICDSUPT",92,0)
 Q $$NUM^ICDEX($G(CODE))
"RTN","ICDSUPT",93,0)
COD(NUM) ; Convert Numeric Value to a Code (opposite of $$NUM)
"RTN","ICDSUPT",94,0)
 ;
"RTN","ICDSUPT",95,0)
 ; Input:
"RTN","ICDSUPT",96,0)
 ; 
"RTN","ICDSUPT",97,0)
 ;    NUM    Numerical representation of an ICD Code (required)
"RTN","ICDSUPT",98,0)
 ;
"RTN","ICDSUPT",99,0)
 ; Output:  
"RTN","ICDSUPT",100,0)
 ; 
"RTN","ICDSUPT",101,0)
 ;    CODE   ICD Code
"RTN","ICDSUPT",102,0)
 ;    
"RTN","ICDSUPT",103,0)
 ;           or
"RTN","ICDSUPT",104,0)
 ;           
"RTN","ICDSUPT",105,0)
 ;           null on error
"RTN","ICDSUPT",106,0)
 ;  
"RTN","ICDSUPT",107,0)
 Q $$COD^ICDEX($G(NUM))
"RTN","ICDSUPT",108,0)
FILE(X) ; File Number
"RTN","ICDSUPT",109,0)
 ;
"RTN","ICDSUPT",110,0)
 ; Input:   
"RTN","ICDSUPT",111,0)
 ; 
"RTN","ICDSUPT",112,0)
 ;   X     File/Identifier/Coding System/Code (required)
"RTN","ICDSUPT",113,0)
 ;   
"RTN","ICDSUPT",114,0)
 ; Output:  
"RTN","ICDSUPT",115,0)
 ; 
"RTN","ICDSUPT",116,0)
 ;   FILE  File Number or -1 on error
"RTN","ICDSUPT",117,0)
 ;   
"RTN","ICDSUPT",118,0)
 Q $$FILE^ICDEX($G(X))
"RTN","ICDSUPT",119,0)
ROOT(X) ; Global Root
"RTN","ICDSUPT",120,0)
 ;
"RTN","ICDSUPT",121,0)
 ; Input:   
"RTN","ICDSUPT",122,0)
 ; 
"RTN","ICDSUPT",123,0)
 ;   X     File Number, File Name, Root, Identifier
"RTN","ICDSUPT",124,0)
 ;         or Coding System (required)
"RTN","ICDSUPT",125,0)
 ;   
"RTN","ICDSUPT",126,0)
 ; Output:  
"RTN","ICDSUPT",127,0)
 ; 
"RTN","ICDSUPT",128,0)
 ;   ROOT  Global Root for File or null
"RTN","ICDSUPT",129,0)
 ;   
"RTN","ICDSUPT",130,0)
 Q $$ROOT^ICDEX($G(X))
"RTN","ICDSUPT",131,0)
SNAM(X) ; System Name
"RTN","ICDSUPT",132,0)
 ;
"RTN","ICDSUPT",133,0)
 ; Input:
"RTN","ICDSUPT",134,0)
 ;
"RTN","ICDSUPT",135,0)
 ;   X     Numeric System Identifier (field 1.1)
"RTN","ICDSUPT",136,0)
 ;
"RTN","ICDSUPT",137,0)
 ; Output:
"RTN","ICDSUPT",138,0)
 ; 
"RTN","ICDSUPT",139,0)
 ;   X     Character System Identifier
"RTN","ICDSUPT",140,0)
 ;
"RTN","ICDSUPT",141,0)
 Q $$SNAM^ICDEX($G(X))
"RTN","ICDTOKN")
0^76^B33213278
"RTN","ICDTOKN",1,0)
ICDTOKN ;DLS/DEK - Parse Text ;04/21/2014
"RTN","ICDTOKN",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDTOKN",3,0)
 ;               
"RTN","ICDTOKN",4,0)
 ; Global Variables
"RTN","ICDTOKN",5,0)
 ;    None
"RTN","ICDTOKN",6,0)
 ;               
"RTN","ICDTOKN",7,0)
 ; External References
"RTN","ICDTOKN",8,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDTOKN",9,0)
 ;               
"RTN","ICDTOKN",10,0)
 Q
"RTN","ICDTOKN",11,0)
TOK(X) ;   Parse Text into Tokens in array PARS()
"RTN","ICDTOKN",12,0)
 K PARS D PAR($G(X),.PARS,1)
"RTN","ICDTOKN",13,0)
 Q
"RTN","ICDTOKN",14,0)
TOKEN(X,ROOT,SYS,ARY) ;   Parse Text into Tokens
"RTN","ICDTOKN",15,0)
 ;
"RTN","ICDTOKN",16,0)
 ; Input 
"RTN","ICDTOKN",17,0)
 ; 
"RTN","ICDTOKN",18,0)
 ;   X      Text (Required)
"RTN","ICDTOKN",19,0)
 ;   
"RTN","ICDTOKN",20,0)
 ;   ROOT   Global Root/File # (Required)
"RTN","ICDTOKN",21,0)
 ;   
"RTN","ICDTOKN",22,0)
 ;             ^ICD9(   or 80
"RTN","ICDTOKN",23,0)
 ;             ^ICD0(   or 80.1
"RTN","ICDTOKN",24,0)
 ;             
"RTN","ICDTOKN",25,0)
 ;   SYS    Coding System  (Required)
"RTN","ICDTOKN",26,0)
 ;   
"RTN","ICDTOKN",27,0)
 ;              1  or  ICD  or  ICD-9-CM
"RTN","ICDTOKN",28,0)
 ;              2  or  ICP  or  ICD-9 Proc
"RTN","ICDTOKN",29,0)
 ;             30  or  10D  or  ICD-10-CM
"RTN","ICDTOKN",30,0)
 ;             31  or  10P  or  ICD-10-PCS
"RTN","ICDTOKN",31,0)
 ;
"RTN","ICDTOKN",32,0)
 ;  .ARY    Output array passed by reference (Required)
"RTN","ICDTOKN",33,0)
 ;  
"RTN","ICDTOKN",34,0)
 ;          This is an array of words parsed from the input
"RTN","ICDTOKN",35,0)
 ;          string X arranged by frequency of use
"RTN","ICDTOKN",36,0)
 ;  
"RTN","ICDTOKN",37,0)
 ;          ARY(0)=# of words
"RTN","ICDTOKN",38,0)
 ;          ARY(#)=word
"RTN","ICDTOKN",39,0)
 ;          
"RTN","ICDTOKN",40,0)
 ;          The least frequently used word will be ARY(1)
"RTN","ICDTOKN",41,0)
 ;          and the most frequently used word will be 
"RTN","ICDTOKN",42,0)
 ;          ARY($O(ARY(" "),-1)).  words not found in
"RTN","ICDTOKN",43,0)
 ;          the file and coding system will not appear in
"RTN","ICDTOKN",44,0)
 ;          the parsed array.
"RTN","ICDTOKN",45,0)
 ;          
"RTN","ICDTOKN",46,0)
 ; D TOKEN^ICDTOKN($G(X),$G(ROOT),$G(SYS),.ARY) is called
"RTN","ICDTOKN",47,0)
 ; TOKEN^ICDEX to parse words in use order
"RTN","ICDTOKN",48,0)
 ;
"RTN","ICDTOKN",49,0)
 N TMP,ORD,NUM,IEN,USAGE,ABBR,TOKEN K ARY,TMP,ORD S ROOT=$$ROOT^ICDEX($G(ROOT)),SYS=$$SYS^ICDEX($G(SYS)) D PAR($G(X),.TMP)
"RTN","ICDTOKN",50,0)
 K ORD S IEN=0 F  S IEN=$O(TMP(IEN)) Q:+IEN'>0  D
"RTN","ICDTOKN",51,0)
 . N NUM,SEG S SEG=$G(TMP(IEN)) Q:$L(SEG)'>1
"RTN","ICDTOKN",52,0)
 . S USAGE=$$CT(SEG,ROOT,SYS),ABBR=+($P(USAGE,"^",2)),USAGE=+USAGE
"RTN","ICDTOKN",53,0)
 . S NUM=$O(ORD(+USAGE," "),-1)+1
"RTN","ICDTOKN",54,0)
 . S ORD(+USAGE,NUM)=SEG
"RTN","ICDTOKN",55,0)
 . S:ABBR>0 ORD(+USAGE,NUM,"A")=1
"RTN","ICDTOKN",56,0)
 K ARY S USAGE="" F  S USAGE=$O(ORD(USAGE)) Q:'$L(USAGE)  D
"RTN","ICDTOKN",57,0)
 . N NUM S NUM=0 F  S NUM=$O(ORD(USAGE,NUM)) Q:+NUM'>0  D
"RTN","ICDTOKN",58,0)
 . . N SEG,INC S SEG=$G(ORD(USAGE,NUM)) Q:'$L(SEG)
"RTN","ICDTOKN",59,0)
 . . S INC=$O(ARY(" "),-1)+1,ARY(INC)=SEG
"RTN","ICDTOKN",60,0)
 . . S:+($G(ORD(+USAGE,NUM,"A")))>0 ARY(INC,"A")=1
"RTN","ICDTOKN",61,0)
 K TMP,ORD S IEN=0 F  S IEN=$O(ARY(IEN)) Q:+IEN'>0  S ARY(0)=$G(ARY(0))+1
"RTN","ICDTOKN",62,0)
 Q
"RTN","ICDTOKN",63,0)
CT(SEG,ROOT,SYS) ; Count Usage
"RTN","ICDTOKN",64,0)
 S SEG=$G(SEG) Q:'$L(SEG) 0  S ROOT=$G(ROOT) Q:'$L(ROOT) 0  S SYS=+($G(SYS))
"RTN","ICDTOKN",65,0)
 N EROOT,IEN,CNT,ABR S (ABR,CNT)=0
"RTN","ICDTOKN",66,0)
 S EROOT=ROOT_"""D""," S:+SYS>0&($D(@(ROOT_"""AD"","_+SYS_")"))) EROOT=ROOT_"""AD"","_+SYS_","
"RTN","ICDTOKN",67,0)
 I $D(@(EROOT_""""_SEG_""")")) D
"RTN","ICDTOKN",68,0)
 . N IEN S IEN=0 F  S IEN=$O(@(EROOT_""""_SEG_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDTOKN",69,0)
 . . S CNT=CNT+1 N EFF S EFF="" F  S EFF=$O(@(EROOT_""""_SEG_""","_+IEN_","""_EFF_""")")) Q:'$L(EFF)!(EFF'?7N)  D
"RTN","ICDTOKN",70,0)
 . . . N TIEN S TIEN=0 F  S TIEN=$O(@(EROOT_""""_SEG_""","_+IEN_","""_EFF_""","_+TIEN_")")) Q:+TIEN'>0  D
"RTN","ICDTOKN",71,0)
 . . . . S:$O(@(EROOT_""""_SEG_""","_+IEN_","""_EFF_""","_+TIEN_",0)"))>0 ABR=ABR+1
"RTN","ICDTOKN",72,0)
 I '$D(@(EROOT_""""_SEG_""")")) D
"RTN","ICDTOKN",73,0)
 . N ORD,IEN S ORD=$E(SEG,1,($L(SEG)-1))_$C(($A($E(SEG,$L(SEG)))-1))_"~"
"RTN","ICDTOKN",74,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:$E(ORD,1,$L(SEG))'=SEG  D
"RTN","ICDTOKN",75,0)
 . . S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDTOKN",76,0)
 . . . S CNT=CNT+1 N EFF S EFF="" F  S EFF=$O(@(EROOT_""""_SEG_""","""_EFF_""")")) Q:'$L(EFF)!(EFF'?7N)  D
"RTN","ICDTOKN",77,0)
 . . . . N TIEN S TIEN=0 F  S TIEN=$O(@(EROOT_""""_SEG_""","""_EFF_""","_+TIEN_")")) Q:+TIEN'>0  D
"RTN","ICDTOKN",78,0)
 . . . . . S:$O(@(EROOT_""""_SEG_""","_+IEN_","""_EFF_""","_+TIEN_",0)"))>0 ABR=ABR+1
"RTN","ICDTOKN",79,0)
 S ABR=$S(CNT>0&(CNT=ABR):1,1:0) S CNT=CNT_"^"_ABR
"RTN","ICDTOKN",80,0)
 Q CNT
"RTN","ICDTOKN",81,0)
PAR(X,ARY,FLG) ;   Parse
"RTN","ICDTOKN",82,0)
 ;
"RTN","ICDTOKN",83,0)
 ; Called by ICDIDX for indexing words
"RTN","ICDTOKN",84,0)
 ;   D PAR^ICDTOKN($G(X),.ARY,0)
"RTN","ICDTOKN",85,0)
 ;   
"RTN","ICDTOKN",86,0)
 ; Called by ICDEXLK3 for lookup of words
"RTN","ICDTOKN",87,0)
 ;   D PAR^ICDTOKN($G(X),.PARS,1)
"RTN","ICDTOKN",88,0)
 ;   
"RTN","ICDTOKN",89,0)
 N BEG,END,CHR,I,NUM,TXT,PIE S TXT=$$UP^XLFSTR(X),TXT=$$SWAP(TXT)
"RTN","ICDTOKN",90,0)
 K ARY S BEG=1 F END=1:1:$L(TXT)+1 D
"RTN","ICDTOKN",91,0)
 . S CHR=$E(TXT,END) I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[CHR D
"RTN","ICDTOKN",92,0)
 . . S PIE=$E(TXT,BEG,END-1),BEG=END+1
"RTN","ICDTOKN",93,0)
 . . I $L(PIE)>1,$L(PIE)<31,$$EXC(PIE) D
"RTN","ICDTOKN",94,0)
 . . . Q:$D(ARY("B",PIE))  N I,NUM S NUM=(246-$L(PIE))
"RTN","ICDTOKN",95,0)
 . . . I +($G(FLG))'>0 S I=$O(ARY(" "),-1)+1,ARY(I)=PIE,ARY("B",PIE)="" Q
"RTN","ICDTOKN",96,0)
 . . . S I=$O(ARY(+($G(NUM))," "),-1)+1,ARY(+($G(NUM)),I)=PIE,ARY("B",PIE)=""
"RTN","ICDTOKN",97,0)
 K ARY("B") S NUM=0 F  S NUM=$O(ARY(NUM)) Q:+NUM'>0  D
"RTN","ICDTOKN",98,0)
 . I +($G(FLG))'>0 S ARY(0)=$G(ARY(0))+1 Q
"RTN","ICDTOKN",99,0)
 . N I S I=0 F  S I=$O(ARY(NUM,I)) Q:+I'>0  S ARY(0)=$G(ARY(0))+1
"RTN","ICDTOKN",100,0)
 Q
"RTN","ICDTOKN",101,0)
EXC(X) ;   Exclusions
"RTN","ICDTOKN",102,0)
 Q:$L($G(X))'>1 0
"RTN","ICDTOKN",103,0)
 Q:"^ABOUT^AFTER^ALMOST^ALSO^ALTHOUGH^AND^ANOTHER^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",104,0)
 Q:"^ANY^ARE^AREA^AREAS^AT^BE^BEEN^BEFORE^BEST^BUT^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",105,0)
 Q:"^BY^CAN^COULD^DONE^EACH^EVEN^FAR^FOR^FORM^FORMS^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",106,0)
 Q:"^FROM^GIVEN^HAD^HAVE^HER^HERE^HERSELF^HIM^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",107,0)
 Q:"^HIMSELF^HIS^HOW^IN^INTO^IS^IT^IT'S^ITS^ITS'^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",108,0)
 Q:"^ITSELF^KIND^LIKE^LOST^MANY^MAY^MERE^MORE^MOST^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",109,0)
 Q:"^MUST^NEW^NOTE^NOW^OF^OFTEN^ON^ONESELF^ONLY^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",110,0)
 Q:"^OR^OUR^OURS^OUT^OWN^PUT^SAME^SET^SHOULD^SOME^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",111,0)
 Q:"^SUCH^STATED^SURE^THAN^THAT^THE^THEN^THERE^THEREBY^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",112,0)
 Q:"^THESE^THEY^THIS^THUS^TO^TOO^UPON^WAS^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",113,0)
 Q:"^WHAT^WHEN^WHERE^WHICH^WHO^WHOSE^WITHIN^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",114,0)
 Q:"^WOULD^"[("^"_$G(X)_"^") 0
"RTN","ICDTOKN",115,0)
 Q 1
"RTN","ICDTOKN",116,0)
 ;
"RTN","ICDTOKN",117,0)
SWAP(X) ; Special Case Word Swap
"RTN","ICDTOKN",118,0)
 ;
"RTN","ICDTOKN",119,0)
 ;   This sub-routine swaps one word for another
"RTN","ICDTOKN",120,0)
 ;   This swap must apply to both Lookup and Indexing
"RTN","ICDTOKN",121,0)
 ;   This swap only applies to uppercase text
"RTN","ICDTOKN",122,0)
 ;   These words cannot be Replacement Words in file 757.05
"RTN","ICDTOKN",123,0)
 ;   
"RTN","ICDTOKN",124,0)
 N TXT S (X,TXT)=$G(X) Q:'$L(TXT) X
"RTN","ICDTOKN",125,0)
 S (X,TXT)=$$UP^XLFSTR(X) N SEG
"RTN","ICDTOKN",126,0)
 F SEG="X-RAY","X RAY" D
"RTN","ICDTOKN",127,0)
 . I TXT[SEG S TXT=$$SW(TXT,SEG,"XRAY")
"RTN","ICDTOKN",128,0)
 F SEG="E.COLI","E COLI","E. COLI" D
"RTN","ICDTOKN",129,0)
 . I TXT[SEG S TXT=$$SW(TXT,SEG,"ECOLI")
"RTN","ICDTOKN",130,0)
 S X=$G(TXT)
"RTN","ICDTOKN",131,0)
 Q X
"RTN","ICDTOKN",132,0)
SW(X,SEG1,SEG2) ; Swap text SEG1 for SEG2 in X
"RTN","ICDTOKN",133,0)
 ; 
"RTN","ICDTOKN",134,0)
 ; Input
"RTN","ICDTOKN",135,0)
 ; 
"RTN","ICDTOKN",136,0)
 ;    X      Text string
"RTN","ICDTOKN",137,0)
 ;    SEG1   Word to remove in string (replace)
"RTN","ICDTOKN",138,0)
 ;    SEG2   Word to insert in string (with)
"RTN","ICDTOKN",139,0)
 ;    
"RTN","ICDTOKN",140,0)
 ; Output
"RTN","ICDTOKN",141,0)
 ; 
"RTN","ICDTOKN",142,0)
 ;    X      Text string without SEG1
"RTN","ICDTOKN",143,0)
 ;    
"RTN","ICDTOKN",144,0)
 N TXT,NOT,CHR,LEAD,TRAIL S (X,TXT)=$G(X) Q:'$L(TXT) X  S SEG1=$G(SEG1)
"RTN","ICDTOKN",145,0)
 Q:'$L(SEG1) X  S SEG2=$G(SEG2) Q:'$L(SEG2) X  Q:TXT'[SEG1 X
"RTN","ICDTOKN",146,0)
 S NOT="~!@#$%^&*()_+`{}|[]\:;'<>?,./" I TXT=SEG1 S X=SEG2 Q X
"RTN","ICDTOKN",147,0)
 I $E(TXT,1,$L(SEG1))=SEG1 D
"RTN","ICDTOKN",148,0)
 . N CHR S CHR=$E(TXT,($L(SEG1)+1)) Q:CHR'=" "
"RTN","ICDTOKN",149,0)
 . S TXT=SEG2_$E(TXT,($L(SEG1)+1),$L(TXT))
"RTN","ICDTOKN",150,0)
 F LEAD=" ","-","(","<","{","[","," D
"RTN","ICDTOKN",151,0)
 . N REP,WIT F TRAIL=" ","-",")",">","}","]","," D
"RTN","ICDTOKN",152,0)
 . . N REP,WIT
"RTN","ICDTOKN",153,0)
 . . S REP=LEAD_SEG1_TRAIL,WIT=LEAD_SEG2_TRAIL
"RTN","ICDTOKN",154,0)
 . . Q:TXT'[REP
"RTN","ICDTOKN",155,0)
 . . F  Q:TXT'[REP  S TXT=$P(TXT,REP,1)_WIT_$P(TXT,REP,2)
"RTN","ICDTOKN",156,0)
 . S REP=LEAD_SEG1,WIT=LEAD_SEG2
"RTN","ICDTOKN",157,0)
 . I TXT[REP,$L($P(TXT,REP,1)),'$L($P(TXT,REP,2)) D
"RTN","ICDTOKN",158,0)
 . . S TXT=$P(TXT,REP,1)_WIT
"RTN","ICDTOKN",159,0)
 S X=$G(TXT)
"RTN","ICDTOKN",160,0)
 Q X
"RTN","ICDXCODE")
0^57^B7083997
"RTN","ICDXCODE",1,0)
ICDXCODE ;ISL/KER - ICD basic data API's ;04/21/2014
"RTN","ICDXCODE",2,0)
 ;;18.0;DRG Grouper;**57**;Oct 20, 2000;Build 1
"RTN","ICDXCODE",3,0)
 ;
"RTN","ICDXCODE",4,0)
 ; ICD wrapper APIs
"RTN","ICDXCODE",5,0)
 ;
"RTN","ICDXCODE",6,0)
EN ; Main Entry Point
"RTN","ICDXCODE",7,0)
HELP ; Developer Help for an API
"RTN","ICDXCODE",8,0)
 D HLP^ICDEXH("SDD") Q
"RTN","ICDXCODE",9,0)
 ;
"RTN","ICDXCODE",10,0)
ICDDATA(CSYS,CODE,DATE,FRMT) ; ICD data for code
"RTN","ICDXCODE",11,0)
 ;
"RTN","ICDXCODE",12,0)
 ; Input:
"RTN","ICDXCODE",13,0)
 ;
"RTN","ICDXCODE",14,0)
 ;   CSYS   Coding system                           Required     
"RTN","ICDXCODE",15,0)
 ;   CODE   Code/IEN/variable pointer               Required
"RTN","ICDXCODE",16,0)
 ;   DATE   Code Set Date (default = TODAY)
"RTN","ICDXCODE",17,0)
 ;   FRMT   Code format "E" external (default)    
"RTN","ICDXCODE",18,0)
 ;                      "I" internal (IEN)
"RTN","ICDXCODE",19,0)
 ;                      
"RTN","ICDXCODE",20,0)
 ; Output:
"RTN","ICDXCODE",21,0)
 ; 
"RTN","ICDXCODE",22,0)
 ;  Diagnosis returns an 22 piece string delimited by "^"
"RTN","ICDXCODE",23,0)
 ;  
"RTN","ICDXCODE",24,0)
 ;    1  IEN of code in file 80
"RTN","ICDXCODE",25,0)
 ;    2  ICD-9 Dx Code                (#.01)
"RTN","ICDXCODE",26,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDXCODE",27,0)
 ;    4  Versioned Dx                 (67 multiple)
"RTN","ICDXCODE",28,0)
 ;    5  Unacceptable as Principal Dx (#1.3)
"RTN","ICDXCODE",29,0)
 ;    6  Major Dx Cat                 (72 multiple)
"RTN","ICDXCODE",30,0)
 ;    7  MDC13                        (#1.4)
"RTN","ICDXCODE",31,0)
 ;    8  Compl/Comorb                 (103 multiple)
"RTN","ICDXCODE",32,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDXCODE",33,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDXCODE",34,0)
 ;    11 Sex                          (10 multiple)
"RTN","ICDXCODE",35,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDXCODE",36,0)
 ;    13 MDC24                        (#1.5)
"RTN","ICDXCODE",37,0)
 ;    14 MDC25                        (#1.6)
"RTN","ICDXCODE",38,0)
 ;    15 Age Low                      (11 multiple)
"RTN","ICDXCODE",39,0)
 ;    16 Age High                     (12 multiple)
"RTN","ICDXCODE",40,0)
 ;    17 Activation Date              (66 multiple)
"RTN","ICDXCODE",41,0)
 ;    18 Message                      
"RTN","ICDXCODE",42,0)
 ;    19 Complication/Comorbidity     (103 multiple)
"RTN","ICDXCODE",43,0)
 ;    20 Coding System                (#1.1)
"RTN","ICDXCODE",44,0)
 ;    21 Primary CC Flag              (103 multiple)
"RTN","ICDXCODE",45,0)
 ;    22 PDX Exclusion Code           (#1.11)
"RTN","ICDXCODE",46,0)
 ;
"RTN","ICDXCODE",47,0)
 ;   Procedures returns A 14 piece string delimited by "^"
"RTN","ICDXCODE",48,0)
 ;   
"RTN","ICDXCODE",49,0)
 ;    1  IEN of code in file 80.1
"RTN","ICDXCODE",50,0)
 ;    2  ICD procedure code           (#.01)
"RTN","ICDXCODE",51,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDXCODE",52,0)
 ;    4  MDC24                        (#1.5)
"RTN","ICDXCODE",53,0)
 ;    5  Versioned Oper/Proc          (67 multiple)
"RTN","ICDXCODE",54,0)
 ;    6  <null>
"RTN","ICDXCODE",55,0)
 ;    7  <null>
"RTN","ICDXCODE",56,0)
 ;    8  <null>
"RTN","ICDXCODE",57,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDXCODE",58,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDXCODE",59,0)
 ;    11 Use with Sex                 (10 multiple)
"RTN","ICDXCODE",60,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDXCODE",61,0)
 ;    13 Activation Date              (66 multiple)
"RTN","ICDXCODE",62,0)
 ;    14 Message
"RTN","ICDXCODE",63,0)
 ;    15 Coding System                (#1.1)
"RTN","ICDXCODE",64,0)
 ;     
"RTN","ICDXCODE",65,0)
 ;    or
"RTN","ICDXCODE",66,0)
 ;
"RTN","ICDXCODE",67,0)
 ;    -1^Error Description
"RTN","ICDXCODE",68,0)
 ;    
"RTN","ICDXCODE",69,0)
 N ROOT,SYS
"RTN","ICDXCODE",70,0)
 S DATE=$P($G(DATE),".",1),SYS=$$SYS^ICDEX($G(CSYS),$G(DATE)) S:+SYS'>0 SYS=$$SYS^ICDEX($G(CODE))
"RTN","ICDXCODE",71,0)
 Q:+SYS'>0 "-1^Invalid coding system specified"
"RTN","ICDXCODE",72,0)
 S ROOT=$$ROOT^ICDEX(SYS) Q:'$L(ROOT) "-1^Invalid Global Root"
"RTN","ICDXCODE",73,0)
 S:CODE[";"&($P(CODE,";",2)=$TR(ROOT,"^",""))&($L($P(CODE,";",1))) FRMT="I",CODE=$P(CODE,";",1)
"RTN","ICDXCODE",74,0)
 S:'$L($G(FRMT)) FRMT=$$IE^ICDEX($G(CODE))
"RTN","ICDXCODE",75,0)
 Q:ROOT["ICD9" $$ICDDX^ICDEX($G(CODE),$G(DATE),$G(SYS),$G(FRMT))
"RTN","ICDXCODE",76,0)
 Q:ROOT["ICD0" $$ICDOP^ICDEX($G(CODE),$G(DATE),$G(SYS),$G(FRMT))
"RTN","ICDXCODE",77,0)
 Q "-1^Not found"
"RTN","ICDXCODE",78,0)
 ;
"RTN","ICDXCODE",79,0)
ICDDESC(CSYS,CODE,DATE,OUTARR) ; ICD description
"RTN","ICDXCODE",80,0)
 ;
"RTN","ICDXCODE",81,0)
 ; Input:
"RTN","ICDXCODE",82,0)
 ;
"RTN","ICDXCODE",83,0)
 ;   CSYS     Coding system
"RTN","ICDXCODE",84,0)
 ;   CODE     ICD Code (required)
"RTN","ICDXCODE",85,0)
 ;   DATE     Date (default = TODAY)
"RTN","ICDXCODE",86,0)
 ;  .OUTARR   Array Name passed by reference
"RTN","ICDXCODE",87,0)
 ;   
"RTN","ICDXCODE",88,0)
 ; Output:
"RTN","ICDXCODE",89,0)
 ; 
"RTN","ICDXCODE",90,0)
 ;   $$ICDDESC  Number of lines in array
"RTN","ICDXCODE",91,0)
 ;
"RTN","ICDXCODE",92,0)
 ;          @ARY(1) - Versioned Description (68 multiple)
"RTN","ICDXCODE",93,0)
 ;          @ARY(2) - blank
"RTN","ICDXCODE",94,0)
 ;          @ARY(3) - message: CODE TEXT MAY BE INACCURATE
"RTN","ICDXCODE",95,0)
 ;          
"RTN","ICDXCODE",96,0)
 Q $$ICDD^ICDEX($G(CODE),.OUTARR,$G(DATE),$G(CSYS))
"RTN","ICDXCODE",97,0)
 ;
"RTN","ICDXCODE",98,0)
STATCHK(CSYS,CODE,DATE) ; Check status for code
"RTN","ICDXCODE",99,0)
 ;
"RTN","ICDXCODE",100,0)
 ; Input:
"RTN","ICDXCODE",101,0)
 ; 
"RTN","ICDXCODE",102,0)
 ;   CSYS    Coding system
"RTN","ICDXCODE",103,0)
 ;   CODE    Code (IEN not allowed)
"RTN","ICDXCODE",104,0)
 ;   DATE    Date (default = TODAY)
"RTN","ICDXCODE",105,0)
 ; 
"RTN","ICDXCODE",106,0)
 ; Output: 
"RTN","ICDXCODE",107,0)
 ; 
"RTN","ICDXCODE",108,0)
 ;    2-Piece String containing the code's status
"RTN","ICDXCODE",109,0)
 ;    and the IEN if the code exists, else -1.
"RTN","ICDXCODE",110,0)
 ;    The following are possible outputs:
"RTN","ICDXCODE",111,0)
 ;    
"RTN","ICDXCODE",112,0)
 ;           1^IEN^Effective Date    Active Code
"RTN","ICDXCODE",113,0)
 ;           0^IEN^Effective Date    Inactive Code
"RTN","ICDXCODE",114,0)
 ;           0^-1                    Code not Found
"RTN","ICDXCODE",115,0)
 ;
"RTN","ICDXCODE",116,0)
 Q $$STATCHK^ICDEX($G(CODE),$G(DATE),$G(CSYS))
"RTN","ICDXCODE",117,0)
 ;
"RTN","ICDXCODE",118,0)
PREV(CSYS,CODE) ; Previous ICD Code
"RTN","ICDXCODE",119,0)
 ;
"RTN","ICDXCODE",120,0)
 ; Input:
"RTN","ICDXCODE",121,0)
 ; 
"RTN","ICDXCODE",122,0)
 ;     CSYS    Coding system                    Required
"RTN","ICDXCODE",123,0)
 ;     CODE    ICD-10 Code (IEN not allowed)    Required
"RTN","ICDXCODE",124,0)
 ;     
"RTN","ICDXCODE",125,0)
 ; Output:
"RTN","ICDXCODE",126,0)
 ; 
"RTN","ICDXCODE",127,0)
 ;    $$PREV  The Previous ICD Code, Null if none
"RTN","ICDXCODE",128,0)
 ;    
"RTN","ICDXCODE",129,0)
 Q $$PREV^ICDEX($G(CODE),$G(CSYS))
"RTN","ICDXCODE",130,0)
 ;
"RTN","ICDXCODE",131,0)
NEXT(CSYS,CODE) ; Next ICD Code
"RTN","ICDXCODE",132,0)
 ;
"RTN","ICDXCODE",133,0)
 ; Input:
"RTN","ICDXCODE",134,0)
 ; 
"RTN","ICDXCODE",135,0)
 ;     CSYS    Coding system                    Required
"RTN","ICDXCODE",136,0)
 ;     CODE    ICD-10 Code (IEN not allowed)    Required
"RTN","ICDXCODE",137,0)
 ;     
"RTN","ICDXCODE",138,0)
 ; Output:
"RTN","ICDXCODE",139,0)
 ; 
"RTN","ICDXCODE",140,0)
 ;    $$NEXT  The Next ICD Code, Null if none
"RTN","ICDXCODE",141,0)
 ;    
"RTN","ICDXCODE",142,0)
 Q $$NEXT^ICDEX($G(CODE),$G(CSYS))
"RTN","ICDXCODE",143,0)
 ;
"RTN","ICDXCODE",144,0)
HIST(CSYS,CODE,ARRAY) ; Activation History
"RTN","ICDXCODE",145,0)
 ;
"RTN","ICDXCODE",146,0)
 ; Input:
"RTN","ICDXCODE",147,0)
 ; 
"RTN","ICDXCODE",148,0)
 ;    CSYS     Coding system                     Required
"RTN","ICDXCODE",149,0)
 ;    CODE     ICD Code (IEN not allowed)        Required
"RTN","ICDXCODE",150,0)
 ;   .ARRAY    Array, passed by Reference        Required
"RTN","ICDXCODE",151,0)
 ;   
"RTN","ICDXCODE",152,0)
 ; Output:
"RTN","ICDXCODE",153,0)
 ; 
"RTN","ICDXCODE",154,0)
 ;    $$HIST   Mirrors ARRAY(0) or, -1 on error
"RTN","ICDXCODE",155,0)
 ;    ARRAY(0)      =  Number of Activation History Entries
"RTN","ICDXCODE",156,0)
 ;    ARRAY(<date>) =  Status    where: 1 is Active
"RTN","ICDXCODE",157,0)
 ;    ARRAY("IEN")  =  <ien>
"RTN","ICDXCODE",158,0)
 ;    
"RTN","ICDXCODE",159,0)
 Q $$HIST^ICDEX($G(CODE),.ARRAY,$G(CSYS))
"RTN","ICDXCODE",160,0)
 ;
"RTN","ICDXCODE",161,0)
PERIOD(CSYS,CODE,ARY) ; Activation Periods
"RTN","ICDXCODE",162,0)
 ; Input:
"RTN","ICDXCODE",163,0)
 ; 
"RTN","ICDXCODE",164,0)
 ;    CSYS     Coding system                     Required
"RTN","ICDXCODE",165,0)
 ;    CODE     ICD Code (IEN not allowed)        Required
"RTN","ICDXCODE",166,0)
 ;   .ARY      Array, passed by Reference        Required
"RTN","ICDXCODE",167,0)
 ;   
"RTN","ICDXCODE",168,0)
 ; Output:
"RTN","ICDXCODE",169,0)
 ; 
"RTN","ICDXCODE",170,0)
 ;    ARY(0) = IEN ^ Selectable ^ Error Message
"RTN","ICDXCODE",171,0)
 ;          
"RTN","ICDXCODE",172,0)
 ;       Where IEN = -1 if error
"RTN","ICDXCODE",173,0)
 ;       Selectable = 0 for unselectable
"RTN","ICDXCODE",174,0)
 ;       Error Message if applicable
"RTN","ICDXCODE",175,0)
 ;            
"RTN","ICDXCODE",176,0)
 ;    ARY(Activation Date) = Inactivation Date^Short Name
"RTN","ICDXCODE",177,0)
 ;
"RTN","ICDXCODE",178,0)
 ;       Where the Short Name is versioned as follows:
"RTN","ICDXCODE",179,0)
 ;
"RTN","ICDXCODE",180,0)
 ;       Period is active   - Text for TODAY's date
"RTN","ICDXCODE",181,0)
 ;       Period is inactive - Text for inactivation date
"RTN","ICDXCODE",182,0)
 ;    
"RTN","ICDXCODE",183,0)
 Q $$PERIOD^ICDEX($G(CODE),.ARY,$G(CSYS))
"SEC","^DD",80,80,1.8,9)

"SEC","^DD",80.1,80.1,1.8,9)

"SEC","^DIC",80,80,0,"AUDIT")

"SEC","^DIC",80,80,0,"DD")
@
"SEC","^DIC",80,80,0,"DEL")
@
"SEC","^DIC",80,80,0,"LAYGO")
@
"SEC","^DIC",80,80,0,"RD")
d
"SEC","^DIC",80,80,0,"WR")
@
"SEC","^DIC",80.1,80.1,0,"AUDIT")

"SEC","^DIC",80.1,80.1,0,"DD")
@
"SEC","^DIC",80.1,80.1,0,"DEL")
@
"SEC","^DIC",80.1,80.1,0,"LAYGO")
@
"SEC","^DIC",80.1,80.1,0,"RD")
d
"SEC","^DIC",80.1,80.1,0,"WR")
@
"SEC","^DIC",80.4,80.4,0,"AUDIT")
@
"SEC","^DIC",80.4,80.4,0,"DD")
@
"SEC","^DIC",80.4,80.4,0,"DEL")
@
"SEC","^DIC",80.4,80.4,0,"LAYGO")
@
"SEC","^DIC",80.4,80.4,0,"RD")
@
"SEC","^DIC",80.4,80.4,0,"WR")
@
"SEC","^DIC",82,82,0,"AUDIT")
@
"SEC","^DIC",82,82,0,"DD")
@
"SEC","^DIC",82,82,0,"DEL")
@
"SEC","^DIC",82,82,0,"LAYGO")
@
"SEC","^DIC",82,82,0,"RD")
@
"SEC","^DIC",82,82,0,"WR")
@
"SEC","^DIC",82.1,82.1,0,"AUDIT")
@
"SEC","^DIC",82.1,82.1,0,"DD")
@
"SEC","^DIC",82.1,82.1,0,"DEL")
@
"SEC","^DIC",82.1,82.1,0,"LAYGO")
@
"SEC","^DIC",82.1,82.1,0,"RD")
@
"SEC","^DIC",82.1,82.1,0,"WR")
@
"SEC","^DIC",82.13,82.13,0,"AUDIT")
@
"SEC","^DIC",82.13,82.13,0,"DD")
@
"SEC","^DIC",82.13,82.13,0,"DEL")
@
"SEC","^DIC",82.13,82.13,0,"LAYGO")
@
"SEC","^DIC",82.13,82.13,0,"RD")
@
"SEC","^DIC",82.13,82.13,0,"WR")
@
"VER")
8.0^22.0
"^DD",80,80,0)
FIELD^^1.11^24
"^DD",80,80,0,"DDA")
N
"^DD",80,80,0,"DIC")
ICDEXLK
"^DD",80,80,0,"DT")
3120825
"^DD",80,80,0,"ID",1.1)
D EN^DDIOL((" "_$$IDDXF^ICDID(+Y)),"","?0")
"^DD",80,80,0,"IX","ACC",80.03,.01)

"^DD",80,80,0,"IX","ACT1",80,.01)

"^DD",80,80,0,"IX","ACT2",80.066,.01)

"^DD",80,80,0,"IX","ACT3",80.066,.02)

"^DD",80,80,0,"IX","ACT4",80,1.1)

"^DD",80,80,0,"IX","AD",80.068,1)

"^DD",80,80,0,"IX","AD2",80,1.1)

"^DD",80,80,0,"IX","AD3",80.682,.01)

"^DD",80,80,0,"IX","ADS",80.068,.01)

"^DD",80,80,0,"IX","ADSS1",80.068,.01)

"^DD",80,80,0,"IX","ADSS2",80,1.1)

"^DD",80,80,0,"IX","AST",80.067,.01)

"^DD",80,80,0,"IX","ASTS1",80.067,.01)

"^DD",80,80,0,"IX","ASTS2",80,1.1)

"^DD",80,80,0,"IX","D",80.068,1)

"^DD",80,80,0,"NM","ICD DIAGNOSIS")

"^DD",80,80,0,"PT",2.3229,.03)

"^DD",80,80,0,"PT",27.17,3)

"^DD",80,80,0,"PT",31.01,.01)

"^DD",80,80,0,"PT",44.11,.01)

"^DD",80,80,0,"PT",45,79)

"^DD",80,80,0,"PT",45,79.16)

"^DD",80,80,0,"PT",45,79.17)

"^DD",80,80,0,"PT",45,79.18)

"^DD",80,80,0,"PT",45,79.19)

"^DD",80,80,0,"PT",45,79.201)

"^DD",80,80,0,"PT",45,79.21)

"^DD",80,80,0,"PT",45,79.22)

"^DD",80,80,0,"PT",45,79.23)

"^DD",80,80,0,"PT",45,79.24)

"^DD",80,80,0,"PT",45,79.241)

"^DD",80,80,0,"PT",45,79.242)

"^DD",80,80,0,"PT",45,79.243)

"^DD",80,80,0,"PT",45,79.244)

"^DD",80,80,0,"PT",45,80)

"^DD",80,80,0,"PT",45.02,5)

"^DD",80,80,0,"PT",45.02,6)

"^DD",80,80,0,"PT",45.02,7)

"^DD",80,80,0,"PT",45.02,8)

"^DD",80,80,0,"PT",45.02,9)

"^DD",80,80,0,"PT",45.02,11)

"^DD",80,80,0,"PT",45.02,12)

"^DD",80,80,0,"PT",45.02,13)

"^DD",80,80,0,"PT",45.02,14)

"^DD",80,80,0,"PT",45.02,15)

"^DD",80,80,0,"PT",45.06,.04)

"^DD",80,80,0,"PT",45.89,.02)

"^DD",80,80,0,"PT",46,.04)

"^DD",80,80,0,"PT",46,.05)

"^DD",80,80,0,"PT",46,.06)

"^DD",80,80,0,"PT",46,.07)

"^DD",80,80,0,"PT",46,.21)

"^DD",80,80,0,"PT",46,.22)

"^DD",80,80,0,"PT",46,.23)

"^DD",80,80,0,"PT",46,.24)

"^DD",80,80,0,"PT",46.1,.01)

"^DD",80,80,0,"PT",52.052311,.01)

"^DD",80,80,0,"PT",52.41311,.01)

"^DD",80,80,0,"PT",63.203,.01)

"^DD",80,80,0,"PT",63.808,.01)

"^DD",80,80,0,"PT",63.88,.01)

"^DD",80,80,0,"PT",63.901,.01)

"^DD",80,80,0,"PT",64.018,.01)

"^DD",80,80,0,"PT",64.811718,.01)

"^DD",80,80,0,"PT",69.05,.01)

"^DD",80,80,0,"PT",69.54,.01)

"^DD",80,80,0,"PT",75.1,91)

"^DD",80,80,0,"PT",75.13,.01)

"^DD",80,80,0,"PT",80.01,.01)

"^DD",80,80,0,"PT",80.02,.01)

"^DD",80,80,0,"PT",80.03,.01)

"^DD",80,80,0,"PT",82.131,.01)

"^DD",80,80,0,"PT",90,113)

"^DD",80,80,0,"PT",90,113.6)

"^DD",80,80,0,"PT",90.1,.01)

"^DD",80,80,0,"PT",90.16,.01)

"^DD",80,80,0,"PT",90.17,.01)

"^DD",80,80,0,"PT",100.051,.01)

"^DD",80,80,0,"PT",130,32.5)

"^DD",80,80,0,"PT",130,66)

"^DD",80,80,0,"PT",130,253)

"^DD",80,80,0,"PT",130,286)

"^DD",80,80,0,"PT",130,343)

"^DD",80,80,0,"PT",130,344)

"^DD",80,80,0,"PT",130,392)

"^DD",80,80,0,"PT",130,489)

"^DD",80,80,0,"PT",130.13,4)

"^DD",80,80,0,"PT",130.17,3)

"^DD",80,80,0,"PT",130.18,3)

"^DD",80,80,0,"PT",130.22,6)

"^DD",80,80,0,"PT",136,.03)

"^DD",80,80,0,"PT",136.02,.01)

"^DD",80,80,0,"PT",136.04,.01)

"^DD",80,80,0,"PT",136.32,.01)

"^DD",80,80,0,"PT",160,19)

"^DD",80,80,0,"PT",160,25.1)

"^DD",80,80,0,"PT",160,25.2)

"^DD",80,80,0,"PT",160,25.3)

"^DD",80,80,0,"PT",160,25.4)

"^DD",80,80,0,"PT",160,25.5)

"^DD",80,80,0,"PT",160,25.6)

"^DD",80,80,0,"PT",160,25.7)

"^DD",80,80,0,"PT",160,25.8)

"^DD",80,80,0,"PT",160,25.9)

"^DD",80,80,0,"PT",160.075,8)

"^DD",80,80,0,"PT",162.03,28)

"^DD",80,80,0,"PT",165.5,1400)

"^DD",80,80,0,"PT",165.5,1400.1)

"^DD",80,80,0,"PT",165.5,1400.2)

"^DD",80,80,0,"PT",165.5,1400.3)

"^DD",80,80,0,"PT",165.5,1400.4)

"^DD",80,80,0,"PT",165.5,1400.5)

"^DD",80,80,0,"PT",165.5,1426)

"^DD",80,80,0,"PT",165.5,1426.1)

"^DD",80,80,0,"PT",165.5,1426.2)

"^DD",80,80,0,"PT",165.5,1426.3)

"^DD",80,80,0,"PT",165.5,1426.4)

"^DD",80,80,0,"PT",165.5,1571)

"^DD",80,80,0,"PT",165.5,1571.1)

"^DD",80,80,0,"PT",165.5,1571.2)

"^DD",80,80,0,"PT",165.5,1571.3)

"^DD",80,80,0,"PT",165.5,1571.4)

"^DD",80,80,0,"PT",165.5,1571.5)

"^DD",80,80,0,"PT",165.5,1579)

"^DD",80,80,0,"PT",165.5,1579.1)

"^DD",80,80,0,"PT",165.5,1579.2)

"^DD",80,80,0,"PT",165.5,1579.3)

"^DD",80,80,0,"PT",165.5,1579.4)

"^DD",80,80,0,"PT",200.0351,.01)

"^DD",80,80,0,"PT",228.05,.01)

"^DD",80,80,0,"PT",228.2,1.06)

"^DD",80,80,0,"PT",228.2,1.07)

"^DD",80,80,0,"PT",228.2,1.08)

"^DD",80,80,0,"PT",228.2,1.09)

"^DD",80,80,0,"PT",228.2,1.1)

"^DD",80,80,0,"PT",350.9,1.29)

"^DD",80,80,0,"PT",351.612,.01)

"^DD",80,80,0,"PT",356.2,.14)

"^DD",80,80,0,"PT",356.9,.01)

"^DD",80,80,0,"PT",362.3,.01)

"^DD",80,80,0,"PT",365.29,.03)

"^DD",80,80,0,"PT",373.04,.03)

"^DD",80,80,0,"PT",375.04,.03)

"^DD",80,80,0,"PT",399,65)

"^DD",80,80,0,"PT",399,66)

"^DD",80,80,0,"PT",399,67)

"^DD",80,80,0,"PT",399,68)

"^DD",80,80,0,"PT",399,215)

"^DD",80,80,0,"PT",399,249)

"^DD",80,80,0,"PT",399,250)

"^DD",80,80,0,"PT",399,251)

"^DD",80,80,0,"PT",399.0304,7)

"^DD",80,80,0,"PT",409.43,.01)

"^DD",80,80,0,"PT",627.8,1)

"^DD",80,80,0,"PT",627.99,1)

"^DD",80,80,0,"PT",627.99,30)

"^DD",80,80,0,"PT",660,8.8)

"^DD",80,80,0,"PT",660,30)

"^DD",80,80,0,"PT",660,31)

"^DD",80,80,0,"PT",660,32)

"^DD",80,80,0,"PT",660,33)

"^DD",80,80,0,"PT",665.193,30)

"^DD",80,80,0,"PT",665.193,31)

"^DD",80,80,0,"PT",665.193,32)

"^DD",80,80,0,"PT",665.193,33)

"^DD",80,80,0,"PT",665.194,7)

"^DD",80,80,0,"PT",665.723191,9)

"^DD",80,80,0,"PT",668,1.6)

"^DD",80,80,0,"PT",668,30)

"^DD",80,80,0,"PT",668,31)

"^DD",80,80,0,"PT",668,32)

"^DD",80,80,0,"PT",668,33)

"^DD",80,80,0,"PT",691.19,.01)

"^DD",80,80,0,"PT",691.46,.01)

"^DD",80,80,0,"PT",691.58,.01)

"^DD",80,80,0,"PT",691.69,.01)

"^DD",80,80,0,"PT",691.704,.01)

"^DD",80,80,0,"PT",691.806,.01)

"^DD",80,80,0,"PT",691.9001,.01)

"^DD",80,80,0,"PT",692.03,.01)

"^DD",80,80,0,"PT",693,2)

"^DD",80,80,0,"PT",694.02,.01)

"^DD",80,80,0,"PT",697.5,4)

"^DD",80,80,0,"PT",697.51,.01)

"^DD",80,80,0,"PT",698.02,.01)

"^DD",80,80,0,"PT",698.12,.01)

"^DD",80,80,0,"PT",698.22,.01)

"^DD",80,80,0,"PT",698.32,.01)

"^DD",80,80,0,"PT",699.03,.01)

"^DD",80,80,0,"PT",699.54,.01)

"^DD",80,80,0,"PT",700.05,.01)

"^DD",80,80,0,"PT",701.01,.01)

"^DD",80,80,0,"PT",721,20)

"^DD",80,80,0,"PT",721.038,.01)

"^DD",80,80,0,"PT",801.41,15)

"^DD",80,80,0,"PT",801.41,18)

"^DD",80,80,0,"PT",801.4118,.01)

"^DD",80,80,0,"PT",811.23102,.01)

"^DD",80,80,0,"PT",811.31,.01)

"^DD",80,80,0,"PT",8925.9,.06)

"^DD",80,80,0,"PT",8984.1,.02)

"^DD",80,80,0,"PT",8984.2,.02)

"^DD",80,80,0,"PT",509850.1,.01)

"^DD",80,80,0,"PT",9000010.07,.01)

"^DD",80,80,0,"PT",9000010.11,.08)

"^DD",80,80,0,"PT",9000010.11,.09)

"^DD",80,80,0,"PT",9000010.11,.1)

"^DD",80,80,0,"PT",9000010.11,.11)

"^DD",80,80,0,"PT",9000010.11,.12)

"^DD",80,80,0,"PT",9000010.11,.13)

"^DD",80,80,0,"PT",9000010.11,.14)

"^DD",80,80,0,"PT",9000010.11,.15)

"^DD",80,80,0,"PT",9000010.12,.08)

"^DD",80,80,0,"PT",9000010.12,.09)

"^DD",80,80,0,"PT",9000010.12,.1)

"^DD",80,80,0,"PT",9000010.12,.11)

"^DD",80,80,0,"PT",9000010.12,.12)

"^DD",80,80,0,"PT",9000010.12,.13)

"^DD",80,80,0,"PT",9000010.12,.14)

"^DD",80,80,0,"PT",9000010.12,.15)

"^DD",80,80,0,"PT",9000010.18,.05)

"^DD",80,80,0,"PT",9000010.18,.09)

"^DD",80,80,0,"PT",9000010.18,.1)

"^DD",80,80,0,"PT",9000010.18,.11)

"^DD",80,80,0,"PT",9000010.18,.12)

"^DD",80,80,0,"PT",9000010.18,.13)

"^DD",80,80,0,"PT",9000010.18,.14)

"^DD",80,80,0,"PT",9000010.18,.15)

"^DD",80,80,0,"PT",9000011,.01)

"^DD",80,80,0,"VRPK")
ICD
"^DD",80,80,0,"VRRV")
68^3141001
"^DD",80,80,.01,0)
CODE NUMBER^RF^^0;1^K:$L(X)>8!($L(X)<1) X
"^DD",80,80,.01,1,0)
^.1^^-1
"^DD",80,80,.01,1,3,0)
80^ACT1^MUMPS
"^DD",80,80,.01,1,3,1)
D SAHC^ICDIDX2(80)
"^DD",80,80,.01,1,3,2)
D KAHC^ICDIDX2(80)
"^DD",80,80,.01,1,3,"%D",0)
^^11^11^3120504^
"^DD",80,80,.01,1,3,"%D",1,0)
^ICD9("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80,.01,1,3,"%D",2,0)
^ICD9("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80,.01,1,3,"%D",3,0)
Where CODE is the ICD code, STA is either 1
"^DD",80,80,.01,1,3,"%D",4,0)
(active) or 0 (inactive), EF is the effective
"^DD",80,80,.01,1,3,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80,80,.01,1,3,"%D",6,0)
number in file #80 and IEN2 is the internal
"^DD",80,80,.01,1,3,"%D",7,0)
entry number on the STATUS multiple sub-file
"^DD",80,80,.01,1,3,"%D",8,0)
80.066 where the status is stored.  The 
"^DD",80,80,.01,1,3,"%D",9,0)
subscript SYS is added to the ACTS cross
"^DD",80,80,.01,1,3,"%D",10,0)
reference to create a coding system specific
"^DD",80,80,.01,1,3,"%D",11,0)
cross-reference.
"^DD",80,80,.01,1,3,"DT")
3110919
"^DD",80,80,.01,3)
Answer must be 1-8 characters in length.
"^DD",80,80,.01,21,0)
^^1^1^3120222^
"^DD",80,80,.01,21,1,0)
ICD-9 or ICD-10 Code
"^DD",80,80,.01,23,0)
^^32^32^3120222^
"^DD",80,80,.01,23,1,0)
ICD-9 Code Pattern Match
"^DD",80,80,.01,23,2,0)
 
"^DD",80,80,.01,23,3,0)
    1  2  3  4  5  6  7
"^DD",80,80,.01,23,4,0)
    -  -  -  -  -  -  -
"^DD",80,80,.01,23,5,0)
    N  N  N  .  N  N     Numeric 
"^DD",80,80,.01,23,6,0)
                n  n   
"^DD",80,80,.01,23,7,0)
 
"^DD",80,80,.01,23,8,0)
    U  N  N  N  .  N  N  E codes 
"^DD",80,80,.01,23,9,0)
                   n  n 
"^DD",80,80,.01,23,10,0)
 
"^DD",80,80,.01,23,11,0)
    U  N  N  .  N  N     V codes 
"^DD",80,80,.01,23,12,0)
                n  n    
"^DD",80,80,.01,23,13,0)
 
"^DD",80,80,.01,23,14,0)
    "U"    Uppercase
"^DD",80,80,.01,23,15,0)
    "N"    Numeric
"^DD",80,80,.01,23,16,0)
    "n"    <null> Character
"^DD",80,80,.01,23,17,0)
 
"^DD",80,80,.01,23,18,0)
ICD-10 Code Pattern Match
"^DD",80,80,.01,23,19,0)
 
"^DD",80,80,.01,23,20,0)
    1  2  3  4  5  6  7  8
"^DD",80,80,.01,23,21,0)
    -  -  -  -  -  -  -  -
"^DD",80,80,.01,23,22,0)
    U  N  U  .  U  U  N  U
"^DD",80,80,.01,23,23,0)
    X     N     N  N  X  N
"^DD",80,80,.01,23,24,0)
                X  X  n  n
"^DD",80,80,.01,23,25,0)
                n  n     
"^DD",80,80,.01,23,26,0)
 
"^DD",80,80,.01,23,27,0)
    "U"    Uppercase
"^DD",80,80,.01,23,28,0)
    "X"    In the first position - Category
"^DD",80,80,.01,23,29,0)
           Right of the decimal  - Placeholder
"^DD",80,80,.01,23,30,0)
    "N"    Numeric 
"^DD",80,80,.01,23,31,0)
    "."    Decimal
"^DD",80,80,.01,23,32,0)
    "n"    Null        
"^DD",80,80,.01,"DT")
3120222
"^DD",80,80,.01,"LAYGO",1,0)
I 1
"^DD",80,80,1.1,0)
CODING SYSTEM^*P80.4'^ICDS(^1;1^I $P($G(^ICDS(+Y,0)),"^",4)=80 D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",80,80,1.1,1,0)
^.1^^-1
"^DD",80,80,1.1,1,2,0)
80^ACT4^MUMPS
"^DD",80,80,1.1,1,2,1)
D SAHCS^ICDIDX2(80)
"^DD",80,80,1.1,1,2,2)
D KAHCS^ICDIDX2(80)
"^DD",80,80,1.1,1,2,"%D",0)
^^11^11^3120504^
"^DD",80,80,1.1,1,2,"%D",1,0)
^ICD9("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80,1.1,1,2,"%D",2,0)
^ICD9("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80,1.1,1,2,"%D",3,0)
where CODE is the ICD code, STA is either  1 
"^DD",80,80,1.1,1,2,"%D",4,0)
(active) or 0 (inactive), EF is the effective 
"^DD",80,80,1.1,1,2,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80,80,1.1,1,2,"%D",6,0)
number in file #80 and IEN2 is the internal 
"^DD",80,80,1.1,1,2,"%D",7,0)
entry number on the STATUS multiple sub-file 
"^DD",80,80,1.1,1,2,"%D",8,0)
80.066 where the status is stored.  The 
"^DD",80,80,1.1,1,2,"%D",9,0)
subscript SYS is added to the ACTS 
"^DD",80,80,1.1,1,2,"%D",10,0)
cross-reference to create a coding system 
"^DD",80,80,1.1,1,2,"%D",11,0)
specific cross-reference.
"^DD",80,80,1.1,1,2,"DT")
3110919
"^DD",80,80,1.1,1,3,0)
80^AD2^MUMPS
"^DD",80,80,1.1,1,3,1)
D SAD2^ICDIDX(80)
"^DD",80,80,1.1,1,3,2)
D KAD2^ICDIDX(80)
"^DD",80,80,1.1,1,3,"%D",0)
^^13^13^3111003^
"^DD",80,80,1.1,1,3,"%D",1,0)
^ICD9("AD",SYS,WORD,IEN1,DATE,IEN2) - Where SYS is the coding 
"^DD",80,80,1.1,1,3,"%D",2,0)
system in file 80, WORD is a single word extracted from the 
"^DD",80,80,1.1,1,3,"%D",3,0)
description, IEN1 is the internal entry number in file #80 
"^DD",80,80,1.1,1,3,"%D",4,0)
where the description is stored, DATE is the effective date 
"^DD",80,80,1.1,1,3,"%D",5,0)
of the description and IEN2 is the internal entry number of
"^DD",80,80,1.1,1,3,"%D",6,0)
the DESCRIPTION multiple, sub-file #80.068 where the 
"^DD",80,80,1.1,1,3,"%D",7,0)
description containing the extracted word is stored.  This
"^DD",80,80,1.1,1,3,"%D",8,0)
is a modification of a Fileman KWIC (Key Word In Context) 
"^DD",80,80,1.1,1,3,"%D",9,0)
cross-reference.  Like the Fileman KWIC cross-reference, each
"^DD",80,80,1.1,1,3,"%D",10,0)
word in the description is indexed.  Unlike the KWIC 
"^DD",80,80,1.1,1,3,"%D",11,0)
cross-reference the index contains the effective date of 
"^DD",80,80,1.1,1,3,"%D",12,0)
the description. This is done to allow date sensitive 
"^DD",80,80,1.1,1,3,"%D",13,0)
keyword searches of the Diagnosis file.
"^DD",80,80,1.1,1,3,"DT")
3110919
"^DD",80,80,1.1,1,4,0)
80^ASTS2^MUMPS
"^DD",80,80,1.1,1,4,1)
D SASTS2^ICDIDX(80)
"^DD",80,80,1.1,1,4,2)
D KASTS2^ICDIDX(80)
"^DD",80,80,1.1,1,4,"%D",0)
^^5^5^3110921^
"^DD",80,80,1.1,1,4,"%D",1,0)
^ICD9("ASTS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80,80,1.1,1,4,"%D",2,0)
system, CODE is the ICD Diagnosis code, EFF is the effective date for 
"^DD",80,80,1.1,1,4,"%D",3,0)
the diagnosis (short text), IEN1 is the internal entry number in the 
"^DD",80,80,1.1,1,4,"%D",4,0)
ICD Diagnosis file (#80) and IEN2 is the internal entry number in the 
"^DD",80,80,1.1,1,4,"%D",5,0)
DIAGNOSIS multiple (#80.067) where the short text is stored.
"^DD",80,80,1.1,1,4,"DT")
3110921
"^DD",80,80,1.1,1,5,0)
80^ADSS2^MUMPS
"^DD",80,80,1.1,1,5,1)
D SADSS2^ICDIDX(80)
"^DD",80,80,1.1,1,5,2)
D KADSS2^ICDIDX(80)
"^DD",80,80,1.1,1,5,"%D",0)
^^5^5^3110921^
"^DD",80,80,1.1,1,5,"%D",1,0)
^ICD9("ADSS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80,80,1.1,1,5,"%D",2,0)
system, CODE is the ICD Diagnosis code, EFF is the effective date for 
"^DD",80,80,1.1,1,5,"%D",3,0)
the description (long text), IEN1 is the internal entry number in the 
"^DD",80,80,1.1,1,5,"%D",4,0)
ICD Diagnosis file (#80) and IEN2 is the internal entry number in the 
"^DD",80,80,1.1,1,5,"%D",5,0)
DESCRIPTION multiple (#80.068) where the description text is stored.
"^DD",80,80,1.1,1,5,"DT")
3110921
"^DD",80,80,1.1,3)
Enter a coding system.
"^DD",80,80,1.1,12)
The screen limits the coding system to those allowed in file 80.
"^DD",80,80,1.1,12.1)
I $P($G(^ICDS(+Y,0)),"^",4)=80
"^DD",80,80,1.1,21,0)
^^1^1^3111005^
"^DD",80,80,1.1,21,1,0)
This is the coding system to which the code belongs.
"^DD",80,80,1.1,"DT")
3111005
"^DD",80,80,1.11,0)
PDX EXCLUSION CODE^P82.13'^ICDCCEX(^1;11^Q
"^DD",80,80,1.11,3)
Enter a Primary Diagnosis (PDX) Exclusion Code.
"^DD",80,80,1.11,21,0)
^^6^6^3120630^
"^DD",80,80,1.11,21,1,0)
This is a Primary Diagnosis Exclusion Code 
"^DD",80,80,1.11,21,2,0)
(file #82.13) containing a list of Diagnosis 
"^DD",80,80,1.11,21,3,0)
codes that, when used as the primary diagnosis
"^DD",80,80,1.11,21,4,0)
code with this code will cause the CC 
"^DD",80,80,1.11,21,5,0)
(Complication/Comorbidity) to be zero (meaning
"^DD",80,80,1.11,21,6,0)
"no CC").  
"^DD",80,80,1.11,"DT")
3120702
"^DD",80,80,1.2,0)
IDENTIFIER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",80,80,1.2,3)
Answer must be 1-10 characters in length.
"^DD",80,80,1.2,4)
D ^ICDHLPD
"^DD",80,80,1.2,21,0)
^^2^2^3110913^
"^DD",80,80,1.2,21,1,0)
This field contains Identifier codes providing more detail on 
"^DD",80,80,1.2,21,2,0)
the DRG.
"^DD",80,80,1.2,23,0)
^^1^1^3110913^
"^DD",80,80,1.2,23,1,0)
DRG Flags
"^DD",80,80,1.2,"DT")
3110913
"^DD",80,80,1.3,0)
UNACCEPTABLE AS PRINCIPAL DX^S^1:YES;^1;3^Q
"^DD",80,80,1.3,3)
Is this code unacceptable as a Principal DX?
"^DD",80,80,1.3,21,0)
^^2^2^3110913^
"^DD",80,80,1.3,21,1,0)
This field contains a flag indicating that this code is 
"^DD",80,80,1.3,21,2,0)
unacceptable as the principal diagnosis.
"^DD",80,80,1.3,"DT")
3111004
"^DD",80,80,1.4,0)
MDC13^NJ2,0^^1;4^K:+X'=X!(X>13)!(X<13)!(X?.E1"."1.N) X
"^DD",80,80,1.4,3)
Set to 13 if MDC equals 13 (Female Reproductive System)
"^DD",80,80,1.4,21,0)
^^2^2^3110913^
"^DD",80,80,1.4,21,1,0)
Field is set to 13 when the Major Diagnostic Code (MDC) 
"^DD",80,80,1.4,21,2,0)
equals 13 (Female Reproductive System)
"^DD",80,80,1.4,"DT")
3110913
"^DD",80,80,1.5,0)
MDC24^S^0:PRINCIPAL DX;1:HEAD;2:CHEST;3:ABDOMEN;4:KIDNEY;5:URINARY;6:PELVIS;7:UPPER LIMB;8:LOWER LIMB;^1;5^Q
"^DD",80,80,1.5,3)
Enter Code to reflect Multiple Significant Trauma body site.
"^DD",80,80,1.5,21,0)
^^1^1^3110913^
"^DD",80,80,1.5,21,1,0)
Code entry of body site of Multiple Significant Trauma.
"^DD",80,80,1.5,"DT")
3111004
"^DD",80,80,1.6,0)
MDC25^S^1:HIV INFECTION;2:MAJOR HIV CONDITION;3:NON-MAJOR HIV CONDITION;^1;6^Q
"^DD",80,80,1.6,3)
Enter code to reflect HIV DX or Related Condition.
"^DD",80,80,1.6,21,0)
^^1^1^3110913^
"^DD",80,80,1.6,21,1,0)
Set of codes refers to type of HIV code or related condition.
"^DD",80,80,1.6,"DT")
3111004
"^DD",80,80,1.7,0)
ICD EXPANDED^S^1:YES;0:NO;^1;7^Q
"^DD",80,80,1.7,1,0)
^.1^^0
"^DD",80,80,1.7,3)
Was the ICD code expanded by the VA?
"^DD",80,80,1.7,21,0)
^^2^2^3110913^
"^DD",80,80,1.7,21,1,0)
This field is a flag indicating that the ICD code was expanded 
"^DD",80,80,1.7,21,2,0)
by the VA (local code).
"^DD",80,80,1.7,"DT")
3111005
"^DD",80,80,1.8,0)
EXCLUDE FROM LOOKUP^CJ1^^ ; ^S X=$S((($O(^ICD9(+D0,66,0))'>0)&($O(^ICD9(+D0,68,0))>0))!($P($G(^ICD9(+D0,1)),"^",7)>0):1,1:0)
"^DD",80,80,1.8,9.01)

"^DD",80,80,1.8,9.1)
S X=$S((($O(^ICD9(+D0,66,0))'>0)&($O(^ICD9(+D0,68,0))>0))!($P($G(^ICD9(+D0,1)),"^",7)>0):1,1:0)
"^DD",80,80,1.8,21,0)
^^7^7^3111005^
"^DD",80,80,1.8,21,1,0)
This is a computed field to indicate if a record in the
"^DD",80,80,1.8,21,2,0)
Diagnosis file #80 should be excluded from lookup.  Records
"^DD",80,80,1.8,21,3,0)
excluded from lookup either have no activation history
"^DD",80,80,1.8,21,4,0)
(sub-file 80.066) or have been modified by the VA (ICD 
"^DD",80,80,1.8,21,5,0)
EXPANDED field 1.7).  If this computed field returns a
"^DD",80,80,1.8,21,6,0)
1, then it should not be used for lookup or included in
"^DD",80,80,1.8,21,7,0)
lookup cross-references.
"^DD",80,80,1.8,"DT")
3111005
"^DD",80,80,1.9,0)
POA EXEMPT^S^0:Not POA Exempt;1:POA Exempt;^1;9^Q
"^DD",80,80,1.9,3)
Enter 1 if this code is exempt from POA or 0 if not exempt.
"^DD",80,80,1.9,21,0)
^^3^3^3120504^
"^DD",80,80,1.9,21,1,0)
The value in this field is used to determine
"^DD",80,80,1.9,21,2,0)
whether Present On Admission (POA) processing
"^DD",80,80,1.9,21,3,0)
applies to this code.
"^DD",80,80,1.9,"DT")
3120504
"^DD",80,80,10,0)
SEX^80.04D^^5;0
"^DD",80,80,10,21,0)
^^2^2^3110930^
"^DD",80,80,10,21,1,0)
This is a history of the Sex designation (Male/Female) for the 
"^DD",80,80,10,21,2,0)
diagnosis and includes the Sex with the date it became effective.
"^DD",80,80,11,0)
AGE LOW^80.011D^^6;0
"^DD",80,80,11,21,0)
^^3^3^3110917^
"^DD",80,80,11,21,1,0)
This is a history of lowest age reasonable for
"^DD",80,80,11,21,2,0)
a procedure and includes the lowest age and the
"^DD",80,80,11,21,3,0)
date it became effective. 
"^DD",80,80,12,0)
AGE HIGH^80.012D^^7;0
"^DD",80,80,12,21,0)
^^3^3^3110917^
"^DD",80,80,12,21,1,0)
This is a history of highest age reasonable for
"^DD",80,80,12,21,2,0)
a procedure and includes the highest age and the
"^DD",80,80,12,21,3,0)
date it became effective. 
"^DD",80,80,20,0)
ICD CODES NOT TO USE WITH^80.01P^^N;0
"^DD",80,80,20,21,0)
^^2^2^3110917^
"^DD",80,80,20,21,1,0)
This is a listing of ICD codes that cannot be used in conjunction
"^DD",80,80,20,21,2,0)
with this code.
"^DD",80,80,20,"DT")
3110917
"^DD",80,80,30,0)
ICD CODES REQUIRED WITH^80.02P^^R;0
"^DD",80,80,30,21,0)
^^1^1^3110917^
"^DD",80,80,30,21,1,0)
This is a listing of ICD codes required when this code is used.
"^DD",80,80,30,"DT")
3110917
"^DD",80,80,40,0)
ICD CODES NOT CC WITH^80.03P^^2;0
"^DD",80,80,40,21,0)
^^2^2^3110930^
"^DD",80,80,40,21,1,0)
This is a listing of codes not considered as Complication/comorbidity
"^DD",80,80,40,21,2,0)
with this code.
"^DD",80,80,40,"DT")
3110930
"^DD",80,80,66,0)
STATUS^80.066DA^^66;0
"^DD",80,80,66,21,0)
^.001^2^2^3040916^^^^
"^DD",80,80,66,21,1,0)
This multiple contains versioned information for an ICD code.
"^DD",80,80,66,21,2,0)
A new entry is created whenever an ICD code's status is changed.
"^DD",80,80,66,"DT")
3110913
"^DD",80,80,67,0)
DIAGNOSIS^80.067D^^67;0
"^DD",80,80,67,21,0)
^^2^2^3110917^
"^DD",80,80,67,21,1,0)
This is a history of the Diagnosis (short text) to include the date the 
"^DD",80,80,67,21,2,0)
text was first used along with the text.
"^DD",80,80,67,"DT")
3110913
"^DD",80,80,68,0)
DESCRIPTION^80.068D^^68;0
"^DD",80,80,68,21,0)
^^3^3^3120825^
"^DD",80,80,68,21,1,0)
This is a history of the descriptive
"^DD",80,80,68,21,2,0)
text to include the date the text 
"^DD",80,80,68,21,3,0)
was first used and the text used.
"^DD",80,80,68,"DT")
3110913
"^DD",80,80,71,0)
DRG GROUPER^80.071D^^3;0
"^DD",80,80,71,21,0)
^^4^4^3110916^
"^DD",80,80,71,21,1,0)
This field sets the effective date for the DRGs for a given fiscal year. 
"^DD",80,80,71,21,2,0)
It should normally be the first day of October of the fiscal year. Each
"^DD",80,80,71,21,3,0)
year a new entry will be created and the DRG's hierachy will reside within
"^DD",80,80,71,21,4,0)
this field.
"^DD",80,80,71,"DT")
3110913
"^DD",80,80,72,0)
MAJOR DIAGNOSTIC CATEGORY^80.072D^^4;0
"^DD",80,80,72,21,0)
^^2^2^3110917^
"^DD",80,80,72,21,1,0)
This is a listing of Major Diagnostic Categories (MDC) associated
"^DD",80,80,72,21,2,0)
with this ICD Diagnosis by fiscal year.
"^DD",80,80,72,"DT")
3110913
"^DD",80,80,73,0)
DRG DIAGNOSIS IDENTIFIER CODES^80.073P^^73;0
"^DD",80,80,73,21,0)
^^2^2^3120530^
"^DD",80,80,73,21,1,0)
This is a listing of identifier codes used in
"^DD",80,80,73,21,2,0)
the DRG rules processing to determine DRG.
"^DD",80,80,73,"DT")
3120530
"^DD",80,80,103,0)
COMPLICATION/COMORBIDITY^80.0103D^^69;0
"^DD",80,80,103,21,0)
^^3^3^3120504^
"^DD",80,80,103,21,1,0)
This is a history of the Complication/Comorbidity (CC) designation
"^DD",80,80,103,21,2,0)
for the diagnosis and includes the CC designation with the date 
"^DD",80,80,103,21,3,0)
it became effective.  
"^DD",80,80,103,"DT")
3110913
"^DD",80,80.01,0)
ICD CODES NOT TO USE WITH SUB-FIELD^^.01^1
"^DD",80,80.01,0,"IX","B",80.01,.01)

"^DD",80,80.01,0,"NM","ICD CODES NOT TO USE WITH")

"^DD",80,80.01,0,"UP")
80
"^DD",80,80.01,.01,0)
ICD CODE NOT TO USE WITH^MP80'X^ICD9(^0;1^S DINUM=X
"^DD",80,80.01,.01,1,0)
^.1
"^DD",80,80.01,.01,1,1,0)
80.01^B
"^DD",80,80.01,.01,1,1,1)
S ^ICD9(DA(1),"N","B",$E(X,1,30),DA)=""
"^DD",80,80.01,.01,1,1,2)
K ^ICD9(DA(1),"N","B",$E(X,1,30),DA)
"^DD",80,80.01,.01,1,1,"%D",0)
^^5^5^3110917^
"^DD",80,80.01,.01,1,1,"%D",1,0)
^ICD9(IEN1,"N","B",COD,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.01,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, COD is a pointer to a code
"^DD",80,80.01,.01,1,1,"%D",3,0)
in the ICD Diagnosis file #80 which can not be used with this code
"^DD",80,80.01,.01,1,1,"%D",4,0)
and IEN2 is the internal entry number of the ICD CODES NOT TO USE
"^DD",80,80.01,.01,1,1,"%D",5,0)
WITH multiple where the pointed to code is stored.
"^DD",80,80.01,.01,3)
Enter an ICD Code that cannot be used with this code.
"^DD",80,80.01,.01,21,0)
^^2^2^3110930^
"^DD",80,80.01,.01,21,1,0)
This is an ICD code that cannot be used in conjunction with this
"^DD",80,80.01,.01,21,2,0)
code.
"^DD",80,80.01,.01,"DT")
3111004
"^DD",80,80.0103,0)
COMPLICATION/COMORBIDITY SUB-FIELD^^2^3
"^DD",80,80.0103,0,"DT")
3120504
"^DD",80,80.0103,0,"IX","B",80.0103,.01)

"^DD",80,80.0103,0,"NM","COMPLICATION/COMORBIDITY")

"^DD",80,80.0103,0,"UP")
80
"^DD",80,80.0103,.01,0)
CC EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80,80.0103,.01,1,0)
^.1
"^DD",80,80.0103,.01,1,1,0)
80.0103^B
"^DD",80,80.0103,.01,1,1,1)
S ^ICD9(DA(1),69,"B",$E(X,1,30),DA)=""
"^DD",80,80.0103,.01,1,1,2)
K ^ICD9(DA(1),69,"B",$E(X,1,30),DA)
"^DD",80,80.0103,.01,1,1,"%D",0)
^^5^5^3110919^
"^DD",80,80.0103,.01,1,1,"%D",1,0)
^ICD9(IEN1,69,"B",EFF,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.0103,.01,1,1,"%D",2,0)
number in the ICD-9 Diagnosis file #80, EFF is the effective date
"^DD",80,80.0103,.01,1,1,"%D",3,0)
for Complication/Comorbidity (CC) designation and IEN2 is the 
"^DD",80,80.0103,.01,1,1,"%D",4,0)
internal entry number in the COMPLICATION/COMORBIDITY multiple 
"^DD",80,80.0103,.01,1,1,"%D",5,0)
where the Complication/Comorbidity (CC) designation is stored.
"^DD",80,80.0103,.01,3)
Enter the effective date of the CC designation.
"^DD",80,80.0103,.01,21,0)
^^2^2^3110930^
"^DD",80,80.0103,.01,21,1,0)
This is the date that a Complication/Comorbidity (CC) designation
"^DD",80,80.0103,.01,21,2,0)
became effective.
"^DD",80,80.0103,.01,"DT")
3110930
"^DD",80,80.0103,1,0)
COMPLICATION/COMORBIDITY^S^0:non-CC;1:CC;2:MCC;3:MCC when patient is discharged alive;^0;2^Q
"^DD",80,80.0103,1,3)
Enter the CC designation.
"^DD",80,80.0103,1,21,0)
^^7^7^3120508^
"^DD",80,80.0103,1,21,1,0)
This is the Complication/Comorbidity (CC) 
"^DD",80,80.0103,1,21,2,0)
designation for the diagnosis.  It includes 
"^DD",80,80.0103,1,21,3,0)
Complication/Comorbidity (CC), Major 
"^DD",80,80.0103,1,21,4,0)
Complication/Comorbidity (MCC), Major 
"^DD",80,80.0103,1,21,5,0)
Complication/Comorbidity when patient is 
"^DD",80,80.0103,1,21,6,0)
discharged alive and non-Complication/Comorbidity
"^DD",80,80.0103,1,21,7,0)
(no complications/cormorbidities)
"^DD",80,80.0103,1,"DT")
3120508
"^DD",80,80.0103,2,0)
PRIMARY^S^0:Primary DX is not own CC/MCC;1:Primary DX is own CC/MCC;^0;3^Q
"^DD",80,80.0103,2,3)
Enter 1 if this DX code is its own CC/MCC or 0 if not.
"^DD",80,80.0103,2,21,0)
^^3^3^3120504^
"^DD",80,80.0103,2,21,1,0)
The value in this field is used to determine
"^DD",80,80.0103,2,21,2,0)
whether CC/MCC value is taken from primary 
"^DD",80,80.0103,2,21,3,0)
diagnosis instead of the secondary diagnosis.
"^DD",80,80.0103,2,"DT")
3120504
"^DD",80,80.011,0)
AGE LOW SUB-FIELD^^1^2
"^DD",80,80.011,0,"DT")
3110912
"^DD",80,80.011,0,"IX","B",80.011,.01)

"^DD",80,80.011,0,"NM","AGE LOW")

"^DD",80,80.011,0,"UP")
80
"^DD",80,80.011,.01,0)
AGE LOW EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80,80.011,.01,1,0)
^.1
"^DD",80,80.011,.01,1,1,0)
80.011^B
"^DD",80,80.011,.01,1,1,1)
S ^ICD9(DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",80,80.011,.01,1,1,2)
K ^ICD9(DA(1),6,"B",$E(X,1,30),DA)
"^DD",80,80.011,.01,1,1,"%D",0)
^^4^4^3110917^
"^DD",80,80.011,.01,1,1,"%D",1,0)
^ICD9(IEN1,6,"B",EFF,IEN2) - Where IEN1 is the internal entry
"^DD",80,80.011,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, EFF is the effective date 
"^DD",80,80.011,.01,1,1,"%D",3,0)
for the lowest age and IEN2 is the internal entry number in the
"^DD",80,80.011,.01,1,1,"%D",4,0)
AGE LOW multiple where the age is stored.
"^DD",80,80.011,.01,3)
Enter the date that the lower age limit was effective.
"^DD",80,80.011,.01,21,0)
^^1^1^3110912^
"^DD",80,80.011,.01,21,1,0)
The date that the AGE LOW limit was effective.
"^DD",80,80.011,.01,"DT")
3110913
"^DD",80,80.011,1,0)
AGE LOW^NJ2,0^^0;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",80,80.011,1,3)
Enter the minimum age value, from 0 to 99.
"^DD",80,80.011,1,21,0)
^^2^2^3110930^
"^DD",80,80.011,1,21,1,0)
This is the minimum age value for an age range for which
"^DD",80,80.011,1,21,2,0)
the code can be applied.  Blank otherwise.
"^DD",80,80.011,1,"DT")
3110930
"^DD",80,80.012,0)
AGE HIGH SUB-FIELD^^1^2
"^DD",80,80.012,0,"DT")
3110912
"^DD",80,80.012,0,"IX","B",80.012,.01)

"^DD",80,80.012,0,"NM","AGE HIGH")

"^DD",80,80.012,0,"UP")
80
"^DD",80,80.012,.01,0)
AGE HIGH EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80,80.012,.01,1,0)
^.1
"^DD",80,80.012,.01,1,1,0)
80.012^B
"^DD",80,80.012,.01,1,1,1)
S ^ICD9(DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",80,80.012,.01,1,1,2)
K ^ICD9(DA(1),7,"B",$E(X,1,30),DA)
"^DD",80,80.012,.01,1,1,"%D",0)
^^4^4^3110917^
"^DD",80,80.012,.01,1,1,"%D",1,0)
^ICD9(IEN1,7,"B",EFF,IEN2) - Where IEN1 is the internal entry
"^DD",80,80.012,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, EFF is the effective date 
"^DD",80,80.012,.01,1,1,"%D",3,0)
for the highest age and IEN2 is the internal entry number in the
"^DD",80,80.012,.01,1,1,"%D",4,0)
AGE HIGH multiple where the age is stored.
"^DD",80,80.012,.01,3)
Enter the date that the upper age limit was effective.
"^DD",80,80.012,.01,21,0)
^^1^1^3110912^
"^DD",80,80.012,.01,21,1,0)
The date that the AGE HIGH limit was effective.
"^DD",80,80.012,.01,"DT")
3110913
"^DD",80,80.012,1,0)
AGE HIGH^NJ3,0^^0;2^K:+X'=X!(X>124)!(X<0)!(X?.E1"."1.N) X
"^DD",80,80.012,1,3)
Enter the maximun age value, from 0 to 124.
"^DD",80,80.012,1,21,0)
^^2^2^3110930^
"^DD",80,80.012,1,21,1,0)
This is the maximun age value for an age range for which
"^DD",80,80.012,1,21,2,0)
the code can be applied.  Blank otherwise.
"^DD",80,80.012,1,"DT")
3110930
"^DD",80,80.02,0)
ICD CODES REQUIRED WITH SUB-FIELD^^.01^1
"^DD",80,80.02,0,"IX","B",80.02,.01)

"^DD",80,80.02,0,"NM","ICD CODES REQUIRED WITH")

"^DD",80,80.02,0,"UP")
80
"^DD",80,80.02,.01,0)
ICD CODE REQUIRED WITH^MP80'X^ICD9(^0;1^S DINUM=X
"^DD",80,80.02,.01,1,0)
^.1
"^DD",80,80.02,.01,1,1,0)
80.02^B
"^DD",80,80.02,.01,1,1,1)
S ^ICD9(DA(1),"R","B",$E(X,1,30),DA)=""
"^DD",80,80.02,.01,1,1,2)
K ^ICD9(DA(1),"R","B",$E(X,1,30),DA)
"^DD",80,80.02,.01,1,1,"%D",0)
^.101^5^5^3110917^^
"^DD",80,80.02,.01,1,1,"%D",1,0)
^ICD9(IEN1,"R","B",COD,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.02,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, COD is a pointer to a code
"^DD",80,80.02,.01,1,1,"%D",3,0)
in the ICD Diagnosis file #80 which is required with this code
"^DD",80,80.02,.01,1,1,"%D",4,0)
and IEN2 is the internal entry number of the ICD CODES REQUIRED
"^DD",80,80.02,.01,1,1,"%D",5,0)
WITH multiple where the pointed to code is stored.
"^DD",80,80.02,.01,3)
Enter an ICD Code that is required with this code.
"^DD",80,80.02,.01,21,0)
^^1^1^3110930^
"^DD",80,80.02,.01,21,1,0)
This is an ICD code that is required when this code is used.
"^DD",80,80.02,.01,"DT")
3110930
"^DD",80,80.03,0)
ICD CODES NOT CC WITH SUB-FIELD^^.01^1
"^DD",80,80.03,0,"DT")
3110930
"^DD",80,80.03,0,"NM","ICD CODES NOT CC WITH")

"^DD",80,80.03,0,"UP")
80
"^DD",80,80.03,.01,0)
ICD CODE NOT CC WITH^MP80'^ICD9(^0;1^Q
"^DD",80,80.03,.01,1,0)
^.1^^-1
"^DD",80,80.03,.01,1,1,0)
80^ACC^MUMPS
"^DD",80,80.03,.01,1,1,1)
S ^ICD9("ACC",DA(1),X)=""
"^DD",80,80.03,.01,1,1,2)
K ^ICD9("ACC",DA(1),X)
"^DD",80,80.03,.01,1,1,"%D",0)
^^4^4^3110917^
"^DD",80,80.03,.01,1,1,"%D",1,0)
^ICD9("ACC",IEN,COD) - Where IEN is the internal entry number in
"^DD",80,80.03,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, COD is a pointer to a code
"^DD",80,80.03,.01,1,1,"%D",3,0)
in the ICD Diagnosis file #80 which is not considered as
"^DD",80,80.03,.01,1,1,"%D",4,0)
Complication/comorbidity with this code.
"^DD",80,80.03,.01,3)
Enter a code not considered CC with this code.
"^DD",80,80.03,.01,21,0)
^^2^2^3110930^
"^DD",80,80.03,.01,21,1,0)
This is an ICD code not considered as Complication/comorbidity with
"^DD",80,80.03,.01,21,2,0)
this code.
"^DD",80,80.03,.01,"DT")
3111004
"^DD",80,80.04,0)
SEX SUB-FIELD^^1^2
"^DD",80,80.04,0,"DT")
3110915
"^DD",80,80.04,0,"IX","B",80.04,.01)

"^DD",80,80.04,0,"NM","SEX")

"^DD",80,80.04,0,"UP")
80
"^DD",80,80.04,.01,0)
SEX EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80,80.04,.01,1,0)
^.1
"^DD",80,80.04,.01,1,1,0)
80.04^B
"^DD",80,80.04,.01,1,1,1)
S ^ICD9(DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",80,80.04,.01,1,1,2)
K ^ICD9(DA(1),5,"B",$E(X,1,30),DA)
"^DD",80,80.04,.01,1,1,"%D",0)
^^4^4^3110919^
"^DD",80,80.04,.01,1,1,"%D",1,0)
^ICD9(IEN1,5,"B",EFF,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.04,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, EFF is the effective date
"^DD",80,80.04,.01,1,1,"%D",3,0)
for the Sex designation and IEN2 is the internal entry number
"^DD",80,80.04,.01,1,1,"%D",4,0)
in the SEX multiple where the Sex designation is stored.
"^DD",80,80.04,.01,3)
Enter the date the Sex designation became effective.
"^DD",80,80.04,.01,21,0)
^^1^1^3110912^
"^DD",80,80.04,.01,21,1,0)
This is the date the Sex designation (F/M) became effective.
"^DD",80,80.04,.01,"DT")
3110913
"^DD",80,80.04,1,0)
SEX^S^M:MALE;F:FEMALE;N:N/A;^0;2^Q
"^DD",80,80.04,1,3)
Enter the sex designation for the diagnosis.
"^DD",80,80.04,1,21,0)
^^1^1^3110930^
"^DD",80,80.04,1,21,1,0)
This is the sex designation for the diagnosis.
"^DD",80,80.04,1,"DT")
3110930
"^DD",80,80.066,0)
STATUS SUB-FIELD^^.02^2
"^DD",80,80.066,0,"DT")
3110913
"^DD",80,80.066,0,"IX","B",80.066,.01)

"^DD",80,80.066,0,"NM","STATUS")

"^DD",80,80.066,0,"UP")
80
"^DD",80,80.066,.01,0)
STATUS EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",80,80.066,.01,1,0)
^.1
"^DD",80,80.066,.01,1,1,0)
80.066^B
"^DD",80,80.066,.01,1,1,1)
S ^ICD9(DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",80,80.066,.01,1,1,2)
K ^ICD9(DA(1),66,"B",$E(X,1,30),DA)
"^DD",80,80.066,.01,1,1,"%D",0)
^^4^4^3111003^
"^DD",80,80.066,.01,1,1,"%D",1,0)
^ICD9(IEN1,66,"B",DATE,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.066,.01,1,1,"%D",2,0)
number in file #80, DATE is the effective date of the status,
"^DD",80,80.066,.01,1,1,"%D",3,0)
and IEN2 is the internal entry number of the STATUS multiple 
"^DD",80,80.066,.01,1,1,"%D",4,0)
sub-file 80.066 where the effective date is stored.
"^DD",80,80.066,.01,1,2,0)
80^ACT2^MUMPS
"^DD",80,80.066,.01,1,2,1)
D SAHD^ICDIDX2(80)
"^DD",80,80.066,.01,1,2,2)
D KAHD^ICDIDX2(80)
"^DD",80,80.066,.01,1,2,"%D",0)
^.101^11^11^3130822^^
"^DD",80,80.066,.01,1,2,"%D",1,0)
^ICD9("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80.066,.01,1,2,"%D",2,0)
^ICD9("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80.066,.01,1,2,"%D",3,0)
Where CODE is the ICD code, STA is either 1
"^DD",80,80.066,.01,1,2,"%D",4,0)
(active) or 0 (inactive), EF is the effective
"^DD",80,80.066,.01,1,2,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80,80.066,.01,1,2,"%D",6,0)
number in file #80 and IEN2 is the internal
"^DD",80,80.066,.01,1,2,"%D",7,0)
entry number of the STATUS multiple sub-file
"^DD",80,80.066,.01,1,2,"%D",8,0)
80.066 where the status is stored.  The 
"^DD",80,80.066,.01,1,2,"%D",9,0)
subscript SYS is added to the ACTS 
"^DD",80,80.066,.01,1,2,"%D",10,0)
cross-reference to create a coding system 
"^DD",80,80.066,.01,1,2,"%D",11,0)
specific cross-reference.
"^DD",80,80.066,.01,1,2,"DT")
3030221
"^DD",80,80.066,.01,3)
(No range limit on date)
"^DD",80,80.066,.01,21,0)
^.001^1^1^3030221^^^^
"^DD",80,80.066,.01,21,1,0)
Date versioned information becomes/became effective.
"^DD",80,80.066,.01,"DT")
3110913
"^DD",80,80.066,.02,0)
STATUS^RS^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",80,80.066,.02,1,0)
^.1
"^DD",80,80.066,.02,1,1,0)
80^ACT3^MUMPS
"^DD",80,80.066,.02,1,1,1)
D SAHS^ICDIDX2(80)
"^DD",80,80.066,.02,1,1,2)
D KAHS^ICDIDX2(80)
"^DD",80,80.066,.02,1,1,"%D",0)
^^10^10^3130822^
"^DD",80,80.066,.02,1,1,"%D",1,0)
^ICD9("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80.066,.02,1,1,"%D",2,0)
^ICD9("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80,80.066,.02,1,1,"%D",3,0)
Where CODE is the ICD code, STATUS is either 1
"^DD",80,80.066,.02,1,1,"%D",4,0)
(active) or 0 (inactive), DATE is the effective
"^DD",80,80.066,.02,1,1,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80,80.066,.02,1,1,"%D",6,0)
number in file #80 and IEN2 is internal entry
"^DD",80,80.066,.02,1,1,"%D",7,0)
number of the STATUS multiple sub-file 80.066
"^DD",80,80.066,.02,1,1,"%D",8,0)
where the status is stored.  The subscript 
"^DD",80,80.066,.02,1,1,"%D",9,0)
SYS is added to the ACTS cross-reference to 
"^DD",80,80.066,.02,1,1,"%D",10,0)
create a coding system specific cross-reference.
"^DD",80,80.066,.02,1,1,"DT")
3030221
"^DD",80,80.066,.02,3)
Enter status of code.
"^DD",80,80.066,.02,21,0)
^^2^2^3110917^
"^DD",80,80.066,.02,21,1,0)
Status set to 1 when the code is active and 0 when the code
"^DD",80,80.066,.02,21,2,0)
is inactive.
"^DD",80,80.066,.02,"DT")
3110917
"^DD",80,80.067,0)
DIAGNOSIS SUB-FIELD^^1^2
"^DD",80,80.067,0,"DT")
3110915
"^DD",80,80.067,0,"IX","B",80.067,.01)

"^DD",80,80.067,0,"NM","DIAGNOSIS")

"^DD",80,80.067,0,"UP")
80
"^DD",80,80.067,.01,0)
DIAGNOSIS EFFECTIVE DATE^MRD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",80,80.067,.01,1,0)
^.1
"^DD",80,80.067,.01,1,1,0)
80.067^B
"^DD",80,80.067,.01,1,1,1)
S ^ICD9(DA(1),67,"B",$E(X,1,30),DA)=""
"^DD",80,80.067,.01,1,1,2)
K ^ICD9(DA(1),67,"B",$E(X,1,30),DA)
"^DD",80,80.067,.01,1,1,"%D",0)
^^4^4^3110919^
"^DD",80,80.067,.01,1,1,"%D",1,0)
^ICD9(IEN1,67,"B",EFF,IEN2) - Where IEN1 is the internal entry number in 
"^DD",80,80.067,.01,1,1,"%D",2,0)
the ICD-9 Diagnosis file #80, EFF is the effective date for the diagnosis
"^DD",80,80.067,.01,1,1,"%D",3,0)
(short text), and IEN2 is the internal entry number in the DIAGNOSIS
"^DD",80,80.067,.01,1,1,"%D",4,0)
multiple where the diagnosis short text is stored.
"^DD",80,80.067,.01,1,2,0)
80^AST^MUMPS
"^DD",80,80.067,.01,1,2,1)
D SAST^ICDIDX(80)
"^DD",80,80.067,.01,1,2,2)
D KAST^ICDIDX(80)
"^DD",80,80.067,.01,1,2,"%D",0)
^^5^5^3110919^
"^DD",80,80.067,.01,1,2,"%D",1,0)
^ICD9("AST",(CODE_" "),EFF,IEN1,IEN2) - Where CODE is the ICD Diagnosis 
"^DD",80,80.067,.01,1,2,"%D",2,0)
code, EFF is the effective date for the diagnosis (short text), IEN1 is
"^DD",80,80.067,.01,1,2,"%D",3,0)
the internal entry number in the ICD Diagnosis (#80) and IEN2 is the 
"^DD",80,80.067,.01,1,2,"%D",4,0)
internal entry number in the DIAGNOSIS multiple (#80.067) where the 
"^DD",80,80.067,.01,1,2,"%D",5,0)
short text is stored.
"^DD",80,80.067,.01,1,2,"DT")
3110919
"^DD",80,80.067,.01,1,3,0)
80^ASTS1^MUMPS
"^DD",80,80.067,.01,1,3,1)
D SASTS1^ICDIDX(80)
"^DD",80,80.067,.01,1,3,2)
D KASTS1^ICDIDX(80)
"^DD",80,80.067,.01,1,3,"%D",0)
^^5^5^3110921^
"^DD",80,80.067,.01,1,3,"%D",1,0)
^ICD9("ASTS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80,80.067,.01,1,3,"%D",2,0)
system, CODE is the ICD Diagnosis code, EFF is the effective date for 
"^DD",80,80.067,.01,1,3,"%D",3,0)
the diagnosis (short text), IEN1 is the internal entry number in the 
"^DD",80,80.067,.01,1,3,"%D",4,0)
ICD Diagnosis file (#80) and IEN2 is the internal entry number in the 
"^DD",80,80.067,.01,1,3,"%D",5,0)
DIAGNOSIS multiple (#80.067) where the short text is stored.
"^DD",80,80.067,.01,1,3,"DT")
3110921
"^DD",80,80.067,.01,3)
Enter a date not earlier than Oct 1, 1978.
"^DD",80,80.067,.01,21,0)
^^1^1^3040310^
"^DD",80,80.067,.01,21,1,0)
This is the date the diagnosis text was first used.
"^DD",80,80.067,.01,"DT")
3110930
"^DD",80,80.067,1,0)
DIAGNOSIS^RF^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",80,80.067,1,3)
Answer must be 1-60 characters in length.
"^DD",80,80.067,1,21,0)
^^1^1^3110917^
"^DD",80,80.067,1,21,1,0)
This is the Diagnosis (short text).
"^DD",80,80.067,1,"DT")
3110917
"^DD",80,80.068,0)
DESCRIPTION SUB-FIELD^^2^3
"^DD",80,80.068,0,"DT")
3120825
"^DD",80,80.068,0,"IX","ADS",80.068,.01)

"^DD",80,80.068,0,"IX","B",80.068,.01)

"^DD",80,80.068,0,"NM","DESCRIPTION")

"^DD",80,80.068,0,"UP")
80
"^DD",80,80.068,.01,0)
DESCRIPTION EFFECTIVE DATE^MRD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",80,80.068,.01,1,0)
^.1
"^DD",80,80.068,.01,1,1,0)
80.068^B
"^DD",80,80.068,.01,1,1,1)
S ^ICD9(DA(1),68,"B",$E(X,1,30),DA)=""
"^DD",80,80.068,.01,1,1,2)
K ^ICD9(DA(1),68,"B",$E(X,1,30),DA)
"^DD",80,80.068,.01,1,1,"%D",0)
^.101^4^4^3110919^^
"^DD",80,80.068,.01,1,1,"%D",1,0)
^ICD9(IEN1,68,"B",EFF,IEN2) - Where IEN1 is the internal entry number in 
"^DD",80,80.068,.01,1,1,"%D",2,0)
the ICD-9 Diagnosis file #80, EFF is the effective date for the 
"^DD",80,80.068,.01,1,1,"%D",3,0)
description (long text), and IEN2 is the internal entry number in the
"^DD",80,80.068,.01,1,1,"%D",4,0)
DESCRIPTION multiple where the description is stored.
"^DD",80,80.068,.01,1,2,0)
80.068^ADS^MUMPS
"^DD",80,80.068,.01,1,2,1)
D SADS^ICDIDX(80)
"^DD",80,80.068,.01,1,2,2)
D KADS^ICDIDX(80)
"^DD",80,80.068,.01,1,2,"%D",0)
^^5^5^3110919^
"^DD",80,80.068,.01,1,2,"%D",1,0)
^ICD9("ADS",(CODE_" "),EFF,IEN1,IEN2) - Where CODE is the ICD Diagnosis
"^DD",80,80.068,.01,1,2,"%D",2,0)
code, EFF is the effective date for the description (long text), IEN1 
"^DD",80,80.068,.01,1,2,"%D",3,0)
is the internal entry number in the ICD Diagnosis file (#80) and IEN2
"^DD",80,80.068,.01,1,2,"%D",4,0)
is the internal entry number in the DESCRIPTION multiple (#80.068) 
"^DD",80,80.068,.01,1,2,"%D",5,0)
where the description text is stored.
"^DD",80,80.068,.01,1,2,"DT")
3110919
"^DD",80,80.068,.01,1,3,0)
80^ADSS1^MUMPS
"^DD",80,80.068,.01,1,3,1)
D SADSS1^ICDIDX(80)
"^DD",80,80.068,.01,1,3,2)
D KADSS1^ICDIDX(80)
"^DD",80,80.068,.01,1,3,"%D",0)
^^5^5^3110921^
"^DD",80,80.068,.01,1,3,"%D",1,0)
^ICD9("ADSS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80,80.068,.01,1,3,"%D",2,0)
system, CODE is the ICD Diagnosis code, EFF is the effective date for 
"^DD",80,80.068,.01,1,3,"%D",3,0)
the description (long text), IEN1 is the internal entry number in the 
"^DD",80,80.068,.01,1,3,"%D",4,0)
ICD Diagnosis file (#80) and IEN2 is the internal entry number in the 
"^DD",80,80.068,.01,1,3,"%D",5,0)
DESCRIPTION multiple (#80.068) where the description text is stored.
"^DD",80,80.068,.01,1,3,"DT")
3110921
"^DD",80,80.068,.01,3)
Enter a date not earlier than Oct 1, 1978.
"^DD",80,80.068,.01,21,0)
^^1^1^3040310^
"^DD",80,80.068,.01,21,1,0)
This is the date the description was first used.
"^DD",80,80.068,.01,"DT")
3110930
"^DD",80,80.068,1,0)
DESCRIPTION^RF^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",80,80.068,1,1,0)
^.1
"^DD",80,80.068,1,1,1,0)
80^D^MUMPS
"^DD",80,80.068,1,1,1,1)
D SD^ICDIDX(80)
"^DD",80,80.068,1,1,1,2)
D KD^ICDIDX(80)
"^DD",80,80.068,1,1,1,"%D",0)
^^11^11^3111003^
"^DD",80,80.068,1,1,1,"%D",1,0)
^ICD9("D",WORD,IEN1,DATE,IEN2) - Where WORD is a single word 
"^DD",80,80.068,1,1,1,"%D",2,0)
extracted from the description, IEN1 is the internal entry number
"^DD",80,80.068,1,1,1,"%D",3,0)
in file #80 where the description is stored, DATE is the effective
"^DD",80,80.068,1,1,1,"%D",4,0)
date of the description and IEN2 is the internal entry number of 
"^DD",80,80.068,1,1,1,"%D",5,0)
the DESCRIPTION multiple, sub-file #80.068 where the description
"^DD",80,80.068,1,1,1,"%D",6,0)
containing the extracted word is stored.  This is a modification
"^DD",80,80.068,1,1,1,"%D",7,0)
of a Fileman KWIC (Key Word In Context) cross-reference.  Like 
"^DD",80,80.068,1,1,1,"%D",8,0)
the Fileman KWIC cross-reference, each word in the description is
"^DD",80,80.068,1,1,1,"%D",9,0)
cross-referenced.  Unlike the KWIC cross-reference the index 
"^DD",80,80.068,1,1,1,"%D",10,0)
contains the effective date of the description. This is done to 
"^DD",80,80.068,1,1,1,"%D",11,0)
allow date sensitive keyword searches of the Diagnosis file.
"^DD",80,80.068,1,1,1,"DT")
3110914
"^DD",80,80.068,1,1,2,0)
80^AD^MUMPS
"^DD",80,80.068,1,1,2,1)
D SAD^ICDIDX(80)
"^DD",80,80.068,1,1,2,2)
D KAD^ICDIDX(80)
"^DD",80,80.068,1,1,2,"%D",0)
^^12^12^3111003^
"^DD",80,80.068,1,1,2,"%D",1,0)
^ICD9("AD",SYS,WORD,IEN1,DATE,IEN2) - Where SYS is the coding 
"^DD",80,80.068,1,1,2,"%D",2,0)
system in file 80, WORD is a single word extracted from the 
"^DD",80,80.068,1,1,2,"%D",3,0)
description, IEN1 is the internal entry number in file #80 
"^DD",80,80.068,1,1,2,"%D",4,0)
where the description is stored, DATE is the effective date 
"^DD",80,80.068,1,1,2,"%D",5,0)
of the description and IEN2 is the internal entry number of 
"^DD",80,80.068,1,1,2,"%D",6,0)
the DESCRIPTION multiple sub-file #80.068 where the description
"^DD",80,80.068,1,1,2,"%D",7,0)
containing the extracted word is stored.  This is a modification
"^DD",80,80.068,1,1,2,"%D",8,0)
of a Fileman KWIC (Key Word In Context) cross-reference.  Like
"^DD",80,80.068,1,1,2,"%D",9,0)
the Fileman KWIC cross-reference, each word in the description 
"^DD",80,80.068,1,1,2,"%D",10,0)
is indexed.  Unlike the KWIC cross-reference the index contains
"^DD",80,80.068,1,1,2,"%D",11,0)
the effective date of the description. This is done to allow 
"^DD",80,80.068,1,1,2,"%D",12,0)
date sensitive keyword searches of the Diagnosis file.
"^DD",80,80.068,1,1,2,"DT")
3110919
"^DD",80,80.068,1,3)
Answer must be 1-245 characters in length.
"^DD",80,80.068,1,21,0)
^^2^2^3111004^
"^DD",80,80.068,1,21,1,0)
This is the description (long text) that was in use on the effective 
"^DD",80,80.068,1,21,2,0)
date.
"^DD",80,80.068,1,"DT")
3111004
"^DD",80,80.068,2,0)
SUPPLEMENTAL^80.682^^2;0
"^DD",80,80.068,2,21,0)
^^3^3^3120825^
"^DD",80,80.068,2,21,1,0)
This is a list of Supplemental keywords
"^DD",80,80.068,2,21,2,0)
which should be included in the word 
"^DD",80,80.068,2,21,3,0)
index to assist in look-up operations.
"^DD",80,80.071,0)
DRG GROUPER SUB-FIELD^^1^2
"^DD",80,80.071,0,"DT")
3110930
"^DD",80,80.071,0,"IX","B",80.071,.01)

"^DD",80,80.071,0,"NM","DRG GROUPER")

"^DD",80,80.071,0,"UP")
80
"^DD",80,80.071,.01,0)
DRG GROUPER EFFECTIVE DATE^MMD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",80,80.071,.01,1,0)
^.1
"^DD",80,80.071,.01,1,1,0)
80.071^B
"^DD",80,80.071,.01,1,1,1)
S ^ICD9(DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",80,80.071,.01,1,1,2)
K ^ICD9(DA(1),3,"B",$E(X,1,30),DA)
"^DD",80,80.071,.01,1,1,"%D",0)
^^4^4^3110919^
"^DD",80,80.071,.01,1,1,"%D",1,0)
^ICD9(IEN1,3,"B",EFF,IEN2) - Where IEN1 is the internal entry number
"^DD",80,80.071,.01,1,1,"%D",2,0)
in the ICD fiel #80, EFF is the effective date for the DRG and IEN2
"^DD",80,80.071,.01,1,1,"%D",3,0)
is the internal entry number in the DRG GROUPER multiple where the
"^DD",80,80.071,.01,1,1,"%D",4,0)
DRG is stored.
"^DD",80,80.071,.01,3)
Enter a date not earlier than Oct 1, 1978.
"^DD",80,80.071,.01,21,0)
^^4^4^3110930^
"^DD",80,80.071,.01,21,1,0)
This field contains the effective date for the DRGs for a 
"^DD",80,80.071,.01,21,2,0)
fiscal year.  It should normally be the first day of October
"^DD",80,80.071,.01,21,3,0)
of the fiscal year. Each year a new entry will be created and
"^DD",80,80.071,.01,21,4,0)
the DRG's hierarchy will reside within this field.
"^DD",80,80.071,.01,"DT")
3110930
"^DD",80,80.071,1,0)
DRG^80.711P^^1;0
"^DD",80,80.071,1,21,0)
^^3^3^3110930^
"^DD",80,80.071,1,21,1,0)
This field contains all of the DRGs associated with the corresponding 
"^DD",80,80.071,1,21,2,0)
ICD Diagnosis for the fiscal year indicated by the DRG Grouper 
"^DD",80,80.071,1,21,3,0)
effective date.
"^DD",80,80.072,0)
MAJOR DIAGNOSTIC CATEGORY SUB-FIELD^^1^2
"^DD",80,80.072,0,"DT")
3110913
"^DD",80,80.072,0,"IX","B",80.072,.01)

"^DD",80,80.072,0,"NM","MAJOR DIAGNOSTIC CATEGORY")

"^DD",80,80.072,0,"UP")
80
"^DD",80,80.072,.01,0)
MDC EFFECTIVE DATE^MD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",80,80.072,.01,1,0)
^.1
"^DD",80,80.072,.01,1,1,0)
80.072^B
"^DD",80,80.072,.01,1,1,1)
S ^ICD9(DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",80,80.072,.01,1,1,2)
K ^ICD9(DA(1),4,"B",$E(X,1,30),DA)
"^DD",80,80.072,.01,1,1,"%D",0)
^^5^5^3110919^
"^DD",80,80.072,.01,1,1,"%D",1,0)
^ICD9(IEN1,4,"B",EFF,IEN2) - Where IEN1 is the internal entry 
"^DD",80,80.072,.01,1,1,"%D",2,0)
number in the ICD Diagnosis file #80, EFF is the effective date
"^DD",80,80.072,.01,1,1,"%D",3,0)
for the Major Diagnostic Category and IEN2 is the internal entry
"^DD",80,80.072,.01,1,1,"%D",4,0)
number in the MAJOR DIAGNOSTIC CATEGORY multiple where the 
"^DD",80,80.072,.01,1,1,"%D",5,0)
MDC is stored. 
"^DD",80,80.072,.01,21,0)
^^3^3^3110917^
"^DD",80,80.072,.01,21,1,0)
This is the date that the Major Diagnostic Categories became
"^DD",80,80.072,.01,21,2,0)
effective for this diagnosis.  This is normally the beginning
"^DD",80,80.072,.01,21,3,0)
of a fiscal year.
"^DD",80,80.072,.01,"DT")
3110917
"^DD",80,80.072,1,0)
MDC^P80.3'^ICM(^0;2^Q
"^DD",80,80.072,1,3)
Enter a Major Diagnostic Category for this ICD code.
"^DD",80,80.072,1,21,0)
^^3^3^3110930^
"^DD",80,80.072,1,21,1,0)
This is a single Major Diagnostic Category code associated with the 
"^DD",80,80.072,1,21,2,0)
corresponding ICD Diagnosis for the fiscal year indicated by the MCD
"^DD",80,80.072,1,21,3,0)
effective date.
"^DD",80,80.072,1,"DT")
3110930
"^DD",80,80.073,0)
DRG DIAGNOSIS IDENTIFIER CODES SUB-FIELD^^.01^1
"^DD",80,80.073,0,"DT")
3120530
"^DD",80,80.073,0,"IX","B",80.073,.01)

"^DD",80,80.073,0,"NM","DRG DIAGNOSIS IDENTIFIER CODES")

"^DD",80,80.073,0,"UP")
80
"^DD",80,80.073,.01,0)
DRG DIAGNOSIS IDENTIFIER CODE^MP82'^ICDID(^0;1^Q
"^DD",80,80.073,.01,1,0)
^.1
"^DD",80,80.073,.01,1,1,0)
80.073^B
"^DD",80,80.073,.01,1,1,1)
S ^ICD9(DA(1),73,"B",$E(X,1,30),DA)=""
"^DD",80,80.073,.01,1,1,2)
K ^ICD9(DA(1),73,"B",$E(X,1,30),DA)
"^DD",80,80.073,.01,1,1,"%D",0)
^^6^6^3120530^
"^DD",80,80.073,.01,1,1,"%D",1,0)
^ICD9(IEN1,73,"B",ID,IEN2) - Where IEN1 is the internal entry
"^DD",80,80.073,.01,1,1,"%D",2,0)
number in file #80, ID a diagnosis identifier code (a pointer
"^DD",80,80.073,.01,1,1,"%D",3,0)
to the DRG DIAGNOSIS IDENTIFIER CODES file #82), and IEN2 is
"^DD",80,80.073,.01,1,1,"%D",4,0)
the internal entry number of the DRG DIAGNOSIS IDENTIFIER
"^DD",80,80.073,.01,1,1,"%D",5,0)
CODES multiple sub-file 80.073 where the diagnosis identifier
"^DD",80,80.073,.01,1,1,"%D",6,0)
code is stored.
"^DD",80,80.073,.01,3)
Enter a DRG Diagnosis Identifier Code.
"^DD",80,80.073,.01,21,0)
^^2^2^3120530^
"^DD",80,80.073,.01,21,1,0)
This is an identifier code used in the DRG 
"^DD",80,80.073,.01,21,2,0)
rules processing to determine DRG.
"^DD",80,80.073,.01,"DT")
3120530
"^DD",80,80.682,0)
SUPPLEMENTAL SUB-FIELD^^.01^1
"^DD",80,80.682,0,"DT")
3120825
"^DD",80,80.682,0,"IX","B",80.682,.01)

"^DD",80,80.682,0,"NM","SUPPLEMENTAL")

"^DD",80,80.682,0,"UP")
80.068
"^DD",80,80.682,.01,0)
WORD^MF^^0;1^K:$L(X)>63!($L(X)<1) X
"^DD",80,80.682,.01,1,0)
^.1
"^DD",80,80.682,.01,1,1,0)
80.682^B
"^DD",80,80.682,.01,1,1,1)
S ^ICD9(DA(2),68,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",80,80.682,.01,1,1,2)
K ^ICD9(DA(2),68,DA(1),2,"B",$E(X,1,30),DA)
"^DD",80,80.682,.01,1,1,"%D",0)
^^10^10^3120825^
"^DD",80,80.682,.01,1,1,"%D",1,0)
^ICD9(DX,68,DES,2,"B",WORD,IEN) - where
"^DD",80,80.682,.01,1,1,"%D",2,0)
DX is the internal entry number (IEN) of
"^DD",80,80.682,.01,1,1,"%D",3,0)
the ICD Diagnosis file, DES is the internal
"^DD",80,80.682,.01,1,1,"%D",4,0)
entry number of the DESCRIPTION multiple 
"^DD",80,80.682,.01,1,1,"%D",5,0)
(sub-file #80.068) of the description 
"^DD",80,80.682,.01,1,1,"%D",6,0)
containing supplemental keywords, WORD an
"^DD",80,80.682,.01,1,1,"%D",7,0)
alternate keyword to be used in lookups 
"^DD",80,80.682,.01,1,1,"%D",8,0)
and IEN is the internal entry number of 
"^DD",80,80.682,.01,1,1,"%D",9,0)
the SUPPLEMENTAL multiple (sub-file #80.682)
"^DD",80,80.682,.01,1,1,"%D",10,0)
where the supplemental keyword is stored.
"^DD",80,80.682,.01,1,2,0)
80^AD3^MUMPS
"^DD",80,80.682,.01,1,2,1)
D SAD3^ICDIDX(80)
"^DD",80,80.682,.01,1,2,2)
D KAD3^ICDIDX(80)
"^DD",80,80.682,.01,1,2,"%D",0)
^^10^10^3120825^
"^DD",80,80.682,.01,1,2,"%D",1,0)
^ICD9("AD",SYS,WD,FI,CDT,DI,WI) - where SYS is
"^DD",80,80.682,.01,1,2,"%D",2,0)
the coding system (field 1.1), WD is a keyword 
"^DD",80,80.682,.01,1,2,"%D",3,0)
from the SUPPLEMENTAL sub-file (80.682), FI is 
"^DD",80,80.682,.01,1,2,"%D",4,0)
the internal entry number to the ICD Diagnosis 
"^DD",80,80.682,.01,1,2,"%D",5,0)
file, CDT is the date the keyword became effective
"^DD",80,80.682,.01,1,2,"%D",6,0)
(sub-file 80.068, .01 field), DI is the internal 
"^DD",80,80.682,.01,1,2,"%D",7,0)
entry number of the DESCRIPTION multiple (sub-file
"^DD",80,80.682,.01,1,2,"%D",8,0)
80.068) and WI is the internal entry number of the
"^DD",80,80.682,.01,1,2,"%D",9,0)
SUPPLEMENTAL multiple (sub-file 80.682) where the
"^DD",80,80.682,.01,1,2,"%D",10,0)
key word is stored.
"^DD",80,80.682,.01,1,2,"DT")
3120825
"^DD",80,80.682,.01,3)
Answer must be 1-63 characters in length.
"^DD",80,80.682,.01,21,0)
^^2^2^3120825^
"^DD",80,80.682,.01,21,1,0)
This field contains a single word that
"^DD",80,80.682,.01,21,2,0)
should be included in the word index.
"^DD",80,80.682,.01,"DT")
3120825
"^DD",80,80.711,0)
DRG SUB-FIELD^^.01^1
"^DD",80,80.711,0,"DT")
3040914
"^DD",80,80.711,0,"IX","B",80.711,.01)

"^DD",80,80.711,0,"NM","DRG")

"^DD",80,80.711,0,"UP")
80.071
"^DD",80,80.711,.01,0)
DRG^MP80.2'^ICD(^0;1^Q
"^DD",80,80.711,.01,1,0)
^.1
"^DD",80,80.711,.01,1,1,0)
80.711^B
"^DD",80,80.711,.01,1,1,1)
S ^ICD9(DA(2),3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",80,80.711,.01,1,1,2)
K ^ICD9(DA(2),3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",80,80.711,.01,1,1,"%D",0)
^^5^5^3111004^
"^DD",80,80.711,.01,1,1,"%D",1,0)
^ICD9(IEN1,3,IEN2,1,"B",DRG,IEN3) - Where IEN1 is the internal entry 
"^DD",80,80.711,.01,1,1,"%D",2,0)
number in the ICD file #80, IEN2 is the internal entry number in the
"^DD",80,80.711,.01,1,1,"%D",3,0)
DRG GROUPER multiple #80.071, DRG is a pointer to the DRG file #80.2
"^DD",80,80.711,.01,1,1,"%D",4,0)
and IEN3 is the internal entry number in the DRG multiple #80.711
"^DD",80,80.711,.01,1,1,"%D",5,0)
where the DRG is stored.
"^DD",80,80.711,.01,3)
Enter a DRG associated with this ICD code.
"^DD",80,80.711,.01,21,0)
^^2^2^3110930^
"^DD",80,80.711,.01,21,1,0)
This is a single DRG associated with the corresponding ICD Diagnosis 
"^DD",80,80.711,.01,21,2,0)
for the fiscal year indicated by the DRG Grouper effective date.
"^DD",80,80.711,.01,"DT")
3110930
"^DD",80.1,80.1,0)
FIELD^NL^73^13
"^DD",80.1,80.1,0,"DDA")
N
"^DD",80.1,80.1,0,"DIC")
ICDEXLK
"^DD",80.1,80.1,0,"DT")
3120825
"^DD",80.1,80.1,0,"ID",1.1)
D EN^DDIOL((" "_$$IDOPF^ICDID(+Y)),"","?0")
"^DD",80.1,80.1,0,"IX","ACT1",80.1,.01)

"^DD",80.1,80.1,0,"IX","ACT2",80.166,.01)

"^DD",80.1,80.1,0,"IX","ACT3",80.166,.02)

"^DD",80.1,80.1,0,"IX","ACT4",80.1,1.1)

"^DD",80.1,80.1,0,"IX","AD",80.168,1)

"^DD",80.1,80.1,0,"IX","AD2",80.1,1.1)

"^DD",80.1,80.1,0,"IX","AD3",80.1682,.01)

"^DD",80.1,80.1,0,"IX","ADS",80.168,.01)

"^DD",80.1,80.1,0,"IX","ADSS1",80.168,.01)

"^DD",80.1,80.1,0,"IX","ADSS2",80.1,1.1)

"^DD",80.1,80.1,0,"IX","AST",80.167,.01)

"^DD",80.1,80.1,0,"IX","ASTS1",80.167,.01)

"^DD",80.1,80.1,0,"IX","ASTS2",80.1,1.1)

"^DD",80.1,80.1,0,"IX","D",80.168,1)

"^DD",80.1,80.1,0,"NM","ICD OPERATION/PROCEDURE")

"^DD",80.1,80.1,0,"PT",27.17,3)

"^DD",80.1,80.1,0,"PT",45,45.01)

"^DD",80.1,80.1,0,"PT",45,45.02)

"^DD",80.1,80.1,0,"PT",45,45.03)

"^DD",80.1,80.1,0,"PT",45,45.04)

"^DD",80.1,80.1,0,"PT",45,45.05)

"^DD",80.1,80.1,0,"PT",45.01,8)

"^DD",80.1,80.1,0,"PT",45.01,9)

"^DD",80.1,80.1,0,"PT",45.01,10)

"^DD",80.1,80.1,0,"PT",45.01,11)

"^DD",80.1,80.1,0,"PT",45.01,12)

"^DD",80.1,80.1,0,"PT",45.05,4)

"^DD",80.1,80.1,0,"PT",45.05,5)

"^DD",80.1,80.1,0,"PT",45.05,6)

"^DD",80.1,80.1,0,"PT",45.05,7)

"^DD",80.1,80.1,0,"PT",45.05,8)

"^DD",80.1,80.1,0,"PT",45.89,.02)

"^DD",80.1,80.1,0,"PT",162.5,40)

"^DD",80.1,80.1,0,"PT",162.5,41)

"^DD",80.1,80.1,0,"PT",162.5,42)

"^DD",80.1,80.1,0,"PT",162.5,43)

"^DD",80.1,80.1,0,"PT",162.5,44)

"^DD",80.1,80.1,0,"PT",356.91,.01)

"^DD",80.1,80.1,0,"PT",399,54)

"^DD",80.1,80.1,0,"PT",399,55)

"^DD",80.1,80.1,0,"PT",399,56)

"^DD",80.1,80.1,0,"PT",399,304)

"^DD",80.1,80.1,0,"PT",399.0304,.01)

"^DD",80.1,80.1,0,"PT",694.801,.01)

"^DD",80.1,80.1,0,"PT",790.2,.09)

"^DD",80.1,80.1,0,"PT",811.32,.01)

"^DD",80.1,80.1,0,"PT",8984.1,.02)

"^DD",80.1,80.1,0,"PT",8984.2,.02)

"^DD",80.1,80.1,0,"VRPK")
ICD
"^DD",80.1,80.1,0,"VRRV")
68^3141001
"^DD",80.1,80.1,.01,0)
CODE NUMBER^RF^^0;1^K:$L(X)>7!($L(X)<1) X
"^DD",80.1,80.1,.01,.1)
OPERATION/PROCEDURE CODE
"^DD",80.1,80.1,.01,1,0)
^.1^^-1
"^DD",80.1,80.1,.01,1,3,0)
80.1^ACT1^MUMPS
"^DD",80.1,80.1,.01,1,3,1)
D SAHC^ICDIDX2(80.1)
"^DD",80.1,80.1,.01,1,3,2)
D KAHC^ICDIDX2(80.1)
"^DD",80.1,80.1,.01,1,3,"%D",0)
^^10^10^3120504^
"^DD",80.1,80.1,.01,1,3,"%D",1,0)
^ICD0("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.1,.01,1,3,"%D",2,0)
^ICD0("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.1,.01,1,3,"%D",3,0)
Where CODE is the ICD code, STA is either 1
"^DD",80.1,80.1,.01,1,3,"%D",4,0)
(active) or 0 (inactive), EF is the effective
"^DD",80.1,80.1,.01,1,3,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80.1,80.1,.01,1,3,"%D",6,0)
number in file #80.1 and IEN2 is the internal
"^DD",80.1,80.1,.01,1,3,"%D",7,0)
entry number of the STATUS multiple sub-file
"^DD",80.1,80.1,.01,1,3,"%D",8,0)
80.166 where the status is stored.  The subscript 
"^DD",80.1,80.1,.01,1,3,"%D",9,0)
SYS is added to the ACTS cross-reference to 
"^DD",80.1,80.1,.01,1,3,"%D",10,0)
create a coding system specific cross-reference.
"^DD",80.1,80.1,.01,1,3,"DT")
3110919
"^DD",80.1,80.1,.01,3)
Answer must be 1-7 characters in length.
"^DD",80.1,80.1,.01,21,0)
^^1^1^3110915^
"^DD",80.1,80.1,.01,21,1,0)
ICD-9 or ICD-10 procedure code
"^DD",80.1,80.1,.01,23,0)
^^21^21^3110915^
"^DD",80.1,80.1,.01,23,1,0)
ICD-9 Procedure Code Pattern Match
"^DD",80.1,80.1,.01,23,2,0)
 
"^DD",80.1,80.1,.01,23,3,0)
    1  2  3  4  5
"^DD",80.1,80.1,.01,23,4,0)
    -  -  -  -  -
"^DD",80.1,80.1,.01,23,5,0)
    N  N  .  N  N
"^DD",80.1,80.1,.01,23,6,0)
             n  n
"^DD",80.1,80.1,.01,23,7,0)
 
"^DD",80.1,80.1,.01,23,8,0)
    "N"    Numeric
"^DD",80.1,80.1,.01,23,9,0)
    "n"    <null> Character
"^DD",80.1,80.1,.01,23,10,0)
 
"^DD",80.1,80.1,.01,23,11,0)
ICD-10 Procedure Code Pattern Match
"^DD",80.1,80.1,.01,23,12,0)
 
"^DD",80.1,80.1,.01,23,13,0)
    1  2  3  4  5  6  7
"^DD",80.1,80.1,.01,23,14,0)
    -  -  -  -  -  -  -
"^DD",80.1,80.1,.01,23,15,0)
    U  U  U  U  U  U  U
"^DD",80.1,80.1,.01,23,16,0)
    N  N  N  N  N  N  N
"^DD",80.1,80.1,.01,23,17,0)
       Z     Z  Z  Z  Z
"^DD",80.1,80.1,.01,23,18,0)
 
"^DD",80.1,80.1,.01,23,19,0)
    "U"    Uppercase
"^DD",80.1,80.1,.01,23,20,0)
    "Z"    N/A or None
"^DD",80.1,80.1,.01,23,21,0)
    "N"    Numeric
"^DD",80.1,80.1,.01,"DT")
3111006
"^DD",80.1,80.1,.01,"LAYGO",1,0)
I 1
"^DD",80.1,80.1,1.1,0)
CODING SYSTEM^*P80.4'^ICDS(^1;1^I $P($G(^ICDS(+Y,0)),"^",4)=80.1 D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",80.1,80.1,1.1,1,0)
^.1^^-1
"^DD",80.1,80.1,1.1,1,2,0)
80.1^ACT4^MUMPS
"^DD",80.1,80.1,1.1,1,2,1)
D SAHCS^ICDIDX2(80.1)
"^DD",80.1,80.1,1.1,1,2,2)
D KAHCS^ICDIDX2(80.1)
"^DD",80.1,80.1,1.1,1,2,"%D",0)
^^11^11^3120504^
"^DD",80.1,80.1,1.1,1,2,"%D",1,0)
^ICD0("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.1,1.1,1,2,"%D",2,0)
^ICD0("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.1,1.1,1,2,"%D",3,0)
Where SYS is the coding system, CODE is the ICD code,
"^DD",80.1,80.1,1.1,1,2,"%D",4,0)
STA is either 1 (active) or 0 (inactive), EF is
"^DD",80.1,80.1,1.1,1,2,"%D",5,0)
the effective date of the status, IEN1 is the 
"^DD",80.1,80.1,1.1,1,2,"%D",6,0)
internal entry number in file #80.1 and IEN2 is
"^DD",80.1,80.1,1.1,1,2,"%D",7,0)
the internal entry number of the STATUS multiple
"^DD",80.1,80.1,1.1,1,2,"%D",8,0)
sub-file 80.166 where the status is stored.
"^DD",80.1,80.1,1.1,1,2,"%D",9,0)
The subscript SYS is added to the ACTS cross
"^DD",80.1,80.1,1.1,1,2,"%D",10,0)
reference to create a coding system specific 
"^DD",80.1,80.1,1.1,1,2,"%D",11,0)
cross-reference.
"^DD",80.1,80.1,1.1,1,2,"DT")
3110919
"^DD",80.1,80.1,1.1,1,3,0)
80.1^AD2^MUMPS
"^DD",80.1,80.1,1.1,1,3,1)
D SAD2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,3,2)
D KAD2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,3,"%D",0)
^^12^12^3111005^
"^DD",80.1,80.1,1.1,1,3,"%D",1,0)
^ICD0("AD",SYS,WORD,IEN1,DATE,IEN2) - Where SYS is the coding 
"^DD",80.1,80.1,1.1,1,3,"%D",2,0)
system in file 80.1, WORD is a single word extracted from the 
"^DD",80.1,80.1,1.1,1,3,"%D",3,0)
description, IEN1 is the internal entry number in file #80.1 
"^DD",80.1,80.1,1.1,1,3,"%D",4,0)
where the description is stored, DATE is the effective date 
"^DD",80.1,80.1,1.1,1,3,"%D",5,0)
of the description and IEN2 is the internal entry number of
"^DD",80.1,80.1,1.1,1,3,"%D",6,0)
the DESCRIPTION multiple sub-file #80.168 where the description
"^DD",80.1,80.1,1.1,1,3,"%D",7,0)
containing the extracted word is stored.  This is a modification
"^DD",80.1,80.1,1.1,1,3,"%D",8,0)
of Fileman KWIC (Key Word In Context) cross-reference.  Like the
"^DD",80.1,80.1,1.1,1,3,"%D",9,0)
Fileman KWIC cross-reference, each word in the description is 
"^DD",80.1,80.1,1.1,1,3,"%D",10,0)
indexed.  Unlike the KWIC cross-reference the index contains 
"^DD",80.1,80.1,1.1,1,3,"%D",11,0)
the effective date of the description. This is done to allow date
"^DD",80.1,80.1,1.1,1,3,"%D",12,0)
sensitive keyword searches of the Operations/Procedure file.
"^DD",80.1,80.1,1.1,1,3,"DT")
3110919
"^DD",80.1,80.1,1.1,1,4,0)
80.1^ASTS2^MUMPS
"^DD",80.1,80.1,1.1,1,4,1)
D SASTS2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,4,2)
D KASTS2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,4,"%D",0)
^^6^6^3110921^
"^DD",80.1,80.1,1.1,1,4,"%D",1,0)
^ICD0("ASTS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80.1,80.1,1.1,1,4,"%D",2,0)
system, CODE is the ICD procedure code, EFF is the effective date for 
"^DD",80.1,80.1,1.1,1,4,"%D",3,0)
the Operation/Procedure (short text), IEN1 is the internal entry number
"^DD",80.1,80.1,1.1,1,4,"%D",4,0)
in the ICD Operation/Procedure file (#80.1) and IEN2 is the internal 
"^DD",80.1,80.1,1.1,1,4,"%D",5,0)
entry number in the OPERATION/PROCEDURE multiple (#80.167) where the 
"^DD",80.1,80.1,1.1,1,4,"%D",6,0)
short text is stored.
"^DD",80.1,80.1,1.1,1,4,"DT")
3110921
"^DD",80.1,80.1,1.1,1,5,0)
80.1^ADSS2^MUMPS
"^DD",80.1,80.1,1.1,1,5,1)
D SADSS2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,5,2)
D KADSS2^ICDIDX(80.1)
"^DD",80.1,80.1,1.1,1,5,"%D",0)
^^6^6^3110921^
"^DD",80.1,80.1,1.1,1,5,"%D",1,0)
^ICD0("ADSS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80.1,80.1,1.1,1,5,"%D",2,0)
system, CODE is the ICD procedure code, EFF is the effective date for 
"^DD",80.1,80.1,1.1,1,5,"%D",3,0)
the description (long text), IEN1 is the internal entry number in the
"^DD",80.1,80.1,1.1,1,5,"%D",4,0)
ICD Operation/Procedure file (#80.1) and IEN2 is the internal entry 
"^DD",80.1,80.1,1.1,1,5,"%D",5,0)
number in the DESCRIPTION multiple (#80.168) where the long text is
"^DD",80.1,80.1,1.1,1,5,"%D",6,0)
stored.
"^DD",80.1,80.1,1.1,1,5,"DT")
3110921
"^DD",80.1,80.1,1.1,3)
Enter a coding system.
"^DD",80.1,80.1,1.1,12)
The screen limits the coding system to those allowed in file 80.1.
"^DD",80.1,80.1,1.1,12.1)
I $P($G(^ICDS(+Y,0)),"^",4)=80.1
"^DD",80.1,80.1,1.1,21,0)
^^1^1^3111005^
"^DD",80.1,80.1,1.1,21,1,0)
This is the coding system to which the code belongs.
"^DD",80.1,80.1,1.1,"DT")
3111005
"^DD",80.1,80.1,1.2,0)
IDENTIFIER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",80.1,80.1,1.2,3)
Enter one or more valid codes.
"^DD",80.1,80.1,1.2,4)
D ^ICDHLPO
"^DD",80.1,80.1,1.2,21,0)
^^1^1^3110930^
"^DD",80.1,80.1,1.2,21,1,0)
This field contains Operations Identifiers.
"^DD",80.1,80.1,1.2,"DT")
3110930
"^DD",80.1,80.1,1.5,0)
MDC24^S^1:CRANIAL;2:LIMB;3:OTHER;^1;5^Q
"^DD",80.1,80.1,1.5,3)
Enter procedure type for Multiple Significant Trauma.
"^DD",80.1,80.1,1.5,21,0)
^^2^2^3110915^
"^DD",80.1,80.1,1.5,21,1,0)
Set of codes refers to body site of procedure, when for a 
"^DD",80.1,80.1,1.5,21,2,0)
Multiple Significant Trauma (MDC 24)
"^DD",80.1,80.1,1.5,"DT")
3110930
"^DD",80.1,80.1,1.7,0)
ICD EXPANDED^S^1:YES;0:NO;^1;7^Q
"^DD",80.1,80.1,1.7,1,0)
^.1^^0
"^DD",80.1,80.1,1.7,3)
Is this ICD code expanded by the VA?
"^DD",80.1,80.1,1.7,21,0)
^^2^2^3110930^
"^DD",80.1,80.1,1.7,21,1,0)
This field is a flag indicating that the ICD code was expanded
"^DD",80.1,80.1,1.7,21,2,0)
by the VA (local code).
"^DD",80.1,80.1,1.7,"DT")
3111005
"^DD",80.1,80.1,1.8,0)
EXCLUDE FROM LOOKUP^CJ1^^ ; ^S X=$S((($O(^ICD0(+D0,66,0))'>0)&($O(^ICD0(+D0,68,0))>0))!($P($G(^ICD0(+D0,1)),"^",7)>0):1,1:0)
"^DD",80.1,80.1,1.8,9.01)

"^DD",80.1,80.1,1.8,9.1)
S X=$S((($O(^ICD0(+D0,66,0))'>0)&($O(^ICD0(+D0,68,0))>0))!($P($G(^ICD0(+D0,1)),"^",7)>0):1,1:0)
"^DD",80.1,80.1,1.8,21,0)
^^7^7^3111005^
"^DD",80.1,80.1,1.8,21,1,0)
This is a computed field to indicate if a record in the
"^DD",80.1,80.1,1.8,21,2,0)
Operations/Procedure file #80.1 should be excluded from 
"^DD",80.1,80.1,1.8,21,3,0)
lookup.  Records excluded from lookup either have no 
"^DD",80.1,80.1,1.8,21,4,0)
activation history (sub-file 80.166) or have been modified
"^DD",80.1,80.1,1.8,21,5,0)
by the VA (ICD EXPANDED field 1.7).  If this computed field
"^DD",80.1,80.1,1.8,21,6,0)
returns a 1, then it should not be used for lookup or 
"^DD",80.1,80.1,1.8,21,7,0)
included in lookup cross-references.
"^DD",80.1,80.1,1.8,"DT")
3111005
"^DD",80.1,80.1,10,0)
SEX^80.11D^^3;0
"^DD",80.1,80.1,10,21,0)
^^2^2^3110915^
"^DD",80.1,80.1,10,21,1,0)
This is a history of the Sex designation (Male/Female) for the
"^DD",80.1,80.1,10,21,2,0)
procedure and includes the Sex with the date it became effective.
"^DD",80.1,80.1,20,0)
MAJOR O.R. PROC^F^^M;1^K:$L(X)>10!($L(X)<1) X
"^DD",80.1,80.1,20,3)
Enter one or more Major O.R. Procedures.
"^DD",80.1,80.1,20,4)
D MAJ^ICDHLPD
"^DD",80.1,80.1,20,21,0)
^^2^2^3110930^
"^DD",80.1,80.1,20,21,1,0)
This is the Major O.R procedure for this procedure code.  See routine
"^DD",80.1,80.1,20,21,2,0)
D MAJ^ICDHLPD for a listing of acceptable values for this field.
"^DD",80.1,80.1,20,"DT")
3110930
"^DD",80.1,80.1,66,0)
STATUS^80.166DA^^66;0
"^DD",80.1,80.1,66,21,0)
^^2^2^3110930^
"^DD",80.1,80.1,66,21,1,0)
This multiple contains versioned information for an ICD code.
"^DD",80.1,80.1,66,21,2,0)
A new entry is created whenever an ICD code's status is changed. 
"^DD",80.1,80.1,66,"DT")
3110915
"^DD",80.1,80.1,67,0)
OPERATION/PROCEDURE^80.167D^^67;0
"^DD",80.1,80.1,67,21,0)
^^2^2^3110919^
"^DD",80.1,80.1,67,21,1,0)
This is a history of the operation/procedure (short text) to include the
"^DD",80.1,80.1,67,21,2,0)
date the text was first used along with the text.
"^DD",80.1,80.1,67,"DT")
3110915
"^DD",80.1,80.1,68,0)
DESCRIPTION^80.168D^^68;0
"^DD",80.1,80.1,68,21,0)
^^2^2^3110915^
"^DD",80.1,80.1,68,21,1,0)
This is a history of the descriptive text to include the date the text 
"^DD",80.1,80.1,68,21,2,0)
was first used and the text used.
"^DD",80.1,80.1,68,"DT")
3110915
"^DD",80.1,80.1,71,0)
DRG GROUPER^80.171D^^2;0
"^DD",80.1,80.1,71,21,0)
^^3^3^3110919^
"^DD",80.1,80.1,71,21,1,0)
This is a history of the DRG Grouper Major Diagnostic Codes and
"^DD",80.1,80.1,71,21,2,0)
DRGs for an ICD procedure code and contains the date the MDCs/DRGs
"^DD",80.1,80.1,71,21,3,0)
became effective along with the MDCs and DRGs.  
"^DD",80.1,80.1,71,"DT")
3110915
"^DD",80.1,80.1,73,0)
DRG PROCEDURE IDENTIFIER CODES^80.173P^^73;0
"^DD",80.1,80.1,73,21,0)
^^2^2^3120530^
"^DD",80.1,80.1,73,21,1,0)
This is a listing of identifier codes used in 
"^DD",80.1,80.1,73,21,2,0)
the DRG rules processing to determine DRG.
"^DD",80.1,80.1,73,"DT")
3120530
"^DD",80.1,80.11,0)
SEX SUB-FIELD^^1^2
"^DD",80.1,80.11,0,"DT")
3110915
"^DD",80.1,80.11,0,"IX","B",80.11,.01)

"^DD",80.1,80.11,0,"NM","SEX")

"^DD",80.1,80.11,0,"UP")
80.1
"^DD",80.1,80.11,.01,0)
SEX EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80.1,80.11,.01,1,0)
^.1
"^DD",80.1,80.11,.01,1,1,0)
80.11^B
"^DD",80.1,80.11,.01,1,1,1)
S ^ICD0(DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.11,.01,1,1,2)
K ^ICD0(DA(1),3,"B",$E(X,1,30),DA)
"^DD",80.1,80.11,.01,1,1,"%D",0)
^^4^4^3110919^
"^DD",80.1,80.11,.01,1,1,"%D",1,0)
^ICD0(IEN1,3,"B",EFF,IEN2) - Where IEN1 is the internal entry 
"^DD",80.1,80.11,.01,1,1,"%D",2,0)
number in the ICD Procedure file #80.1, EFF is the effective date
"^DD",80.1,80.11,.01,1,1,"%D",3,0)
for the Sex designation and IEN2 is the internal entry number
"^DD",80.1,80.11,.01,1,1,"%D",4,0)
in the SEX multiple where the Sex designation is stored.
"^DD",80.1,80.11,.01,3)
Enter the date the Sex designation became effective.
"^DD",80.1,80.11,.01,21,0)
^^1^1^3110919^
"^DD",80.1,80.11,.01,21,1,0)
This is the date that the Sex designation became effective.
"^DD",80.1,80.11,.01,"DT")
3110930
"^DD",80.1,80.11,1,0)
SEX^S^M:MALE;F:FEMALE;N:NOT APPLICABLE;^0;2^Q
"^DD",80.1,80.11,1,3)
Enter the sex designation of the procedure.
"^DD",80.1,80.11,1,21,0)
^^1^1^3110930^
"^DD",80.1,80.11,1,21,1,0)
This is the sex designation for this procedure.
"^DD",80.1,80.11,1,"DT")
3110930
"^DD",80.1,80.166,0)
STATUS SUB-FIELD^^.02^2
"^DD",80.1,80.166,0,"DT")
3110915
"^DD",80.1,80.166,0,"IX","B",80.166,.01)

"^DD",80.1,80.166,0,"NM","STATUS")

"^DD",80.1,80.166,0,"UP")
80.1
"^DD",80.1,80.166,.01,0)
STATUS EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",80.1,80.166,.01,1,0)
^.1
"^DD",80.1,80.166,.01,1,1,0)
80.166^B
"^DD",80.1,80.166,.01,1,1,1)
S ^ICD0(DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.166,.01,1,1,2)
K ^ICD0(DA(1),66,"B",$E(X,1,30),DA)
"^DD",80.1,80.166,.01,1,1,"%D",0)
^.101^4^4^3111005^^
"^DD",80.1,80.166,.01,1,1,"%D",1,0)
^ICD0(IEN1,66,"B",DATE,IEN2) - Where IEN1 is the internal entry 
"^DD",80.1,80.166,.01,1,1,"%D",2,0)
number in file #80.1, DATE is the effective date of the status,
"^DD",80.1,80.166,.01,1,1,"%D",3,0)
and IEN2 is the internal entry number of the STATUS multiple 
"^DD",80.1,80.166,.01,1,1,"%D",4,0)
sub-file 80.166 where the effective date is stored.
"^DD",80.1,80.166,.01,1,2,0)
80.1^ACT2^MUMPS
"^DD",80.1,80.166,.01,1,2,1)
D SAHD^ICDIDX2(80.1)
"^DD",80.1,80.166,.01,1,2,2)
D KAHD^ICDIDX2(80.1)
"^DD",80.1,80.166,.01,1,2,"%D",0)
^^11^11^3120504^
"^DD",80.1,80.166,.01,1,2,"%D",1,0)
^ICD0("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.166,.01,1,2,"%D",2,0)
^ICD0("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.166,.01,1,2,"%D",3,0)
Where CODE is the ICD code, STA is either 1
"^DD",80.1,80.166,.01,1,2,"%D",4,0)
(active) or 0 (inactive), EF is the effective
"^DD",80.1,80.166,.01,1,2,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80.1,80.166,.01,1,2,"%D",6,0)
number in file #80.1 and IEN2 is the internal
"^DD",80.1,80.166,.01,1,2,"%D",7,0)
entry number of the STATUS multiple sub-file
"^DD",80.1,80.166,.01,1,2,"%D",8,0)
80.166 where the status is stored.  The 
"^DD",80.1,80.166,.01,1,2,"%D",9,0)
subscript SYS is added to the ACTS cross
"^DD",80.1,80.166,.01,1,2,"%D",10,0)
reference to create a coding system specific 
"^DD",80.1,80.166,.01,1,2,"%D",11,0)
cross-reference.
"^DD",80.1,80.166,.01,1,2,"DT")
3030221
"^DD",80.1,80.166,.01,3)
Enter the Status Effective date.
"^DD",80.1,80.166,.01,21,0)
^^1^1^3111005^
"^DD",80.1,80.166,.01,21,1,0)
This is the effective date of the status.
"^DD",80.1,80.166,.01,"DT")
3111005
"^DD",80.1,80.166,.02,0)
STATUS^RS^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",80.1,80.166,.02,1,0)
^.1
"^DD",80.1,80.166,.02,1,1,0)
80.1^ACT3^MUMPS
"^DD",80.1,80.166,.02,1,1,1)
D SAHS^ICDIDX2(80.1)
"^DD",80.1,80.166,.02,1,1,2)
D KAHS^ICDIDX2(80.1)
"^DD",80.1,80.166,.02,1,1,"%D",0)
^^11^11^3120504^
"^DD",80.1,80.166,.02,1,1,"%D",1,0)
^ICD0("ACT",(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.166,.02,1,1,"%D",2,0)
^ICD0("ACTS",SYS,(CODE_" "),STA,EF,IEN1,IEN2)
"^DD",80.1,80.166,.02,1,1,"%D",3,0)
Where CODE is the ICD code, STA is either 1
"^DD",80.1,80.166,.02,1,1,"%D",4,0)
(active) or 0 (inactive), EF is the effective
"^DD",80.1,80.166,.02,1,1,"%D",5,0)
date of the status, IEN1 is the internal entry
"^DD",80.1,80.166,.02,1,1,"%D",6,0)
number in file #80.1 and IEN2 is the internal
"^DD",80.1,80.166,.02,1,1,"%D",7,0)
entry number of the STATUS multiple sub-file
"^DD",80.1,80.166,.02,1,1,"%D",8,0)
80.166 where the status is stored. The 
"^DD",80.1,80.166,.02,1,1,"%D",9,0)
subscript SYS is added to the ACTS cross
"^DD",80.1,80.166,.02,1,1,"%D",10,0)
reference to create a coding system specific 
"^DD",80.1,80.166,.02,1,1,"%D",11,0)
cross-reference.
"^DD",80.1,80.166,.02,1,1,"DT")
3030221
"^DD",80.1,80.166,.02,3)
Enter code status.
"^DD",80.1,80.166,.02,21,0)
^^2^2^3110919^
"^DD",80.1,80.166,.02,21,1,0)
Status set to 1 when the code is active and 0 when the code
"^DD",80.1,80.166,.02,21,2,0)
is inactive. 
"^DD",80.1,80.166,.02,"DT")
3110919
"^DD",80.1,80.167,0)
OPERATION/PROCEDURE SUB-FIELD^^1^2
"^DD",80.1,80.167,0,"DT")
3110915
"^DD",80.1,80.167,0,"IX","B",80.167,.01)

"^DD",80.1,80.167,0,"NM","OPERATION/PROCEDURE")

"^DD",80.1,80.167,0,"UP")
80.1
"^DD",80.1,80.167,.01,0)
OPER/PROCEDURE EFFECTIVE DATE^MRD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",80.1,80.167,.01,1,0)
^.1
"^DD",80.1,80.167,.01,1,1,0)
80.167^B
"^DD",80.1,80.167,.01,1,1,1)
S ^ICD0(DA(1),67,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.167,.01,1,1,2)
K ^ICD0(DA(1),67,"B",$E(X,1,30),DA)
"^DD",80.1,80.167,.01,1,1,"%D",0)
^^5^5^3040310^
"^DD",80.1,80.167,.01,1,1,"%D",1,0)
^ICD0(IEN1,67,"B",EFF,IEN2) - Where IEN1 is the internal entry number in 
"^DD",80.1,80.167,.01,1,1,"%D",2,0)
the ICD Operation/Procedure file #80.1, EFF is the effective date for the
"^DD",80.1,80.167,.01,1,1,"%D",3,0)
operation/procedure (short text), and IEN2 is the internal entry number
"^DD",80.1,80.167,.01,1,1,"%D",4,0)
in the OPERATION/PROCEDURE (VERSIONED) multiple where the versioned short
"^DD",80.1,80.167,.01,1,1,"%D",5,0)
text is stored.
"^DD",80.1,80.167,.01,1,2,0)
80.1^AST^MUMPS
"^DD",80.1,80.167,.01,1,2,1)
D SAST^ICDIDX(80.1)
"^DD",80.1,80.167,.01,1,2,2)
D KAST^ICDIDX(80.1)
"^DD",80.1,80.167,.01,1,2,"%D",0)
^^6^6^3110919^
"^DD",80.1,80.167,.01,1,2,"%D",1,0)
^ICD0("AST",(CODE_" "),EFF,IEN1,IEN2) - Where CODE is the ICD 
"^DD",80.1,80.167,.01,1,2,"%D",2,0)
operation/procedure Code, EFF is the effective date for the 
"^DD",80.1,80.167,.01,1,2,"%D",3,0)
operation/procedure (short text), IEN1 is the internal entry number
"^DD",80.1,80.167,.01,1,2,"%D",4,0)
in the ICD-9 Operation/Procedure file (#80.1) and IEN2 is the internal
"^DD",80.1,80.167,.01,1,2,"%D",5,0)
entry number in the OPERATION/PROCEDURE multiple where the short
"^DD",80.1,80.167,.01,1,2,"%D",6,0)
text is stored.
"^DD",80.1,80.167,.01,1,2,"DT")
3110919
"^DD",80.1,80.167,.01,1,3,0)
80.1^ASTS1^MUMPS
"^DD",80.1,80.167,.01,1,3,1)
D SASTS1^ICDIDX(80.1)
"^DD",80.1,80.167,.01,1,3,2)
D KASTS1^ICDIDX(80.1)
"^DD",80.1,80.167,.01,1,3,"%D",0)
^^6^6^3110921^
"^DD",80.1,80.167,.01,1,3,"%D",1,0)
^ICD0("ASTS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80.1,80.167,.01,1,3,"%D",2,0)
system, CODE is the ICD procedure code, EFF is the effective date for 
"^DD",80.1,80.167,.01,1,3,"%D",3,0)
the Operation/Procedure (short text), IEN1 is the internal entry number
"^DD",80.1,80.167,.01,1,3,"%D",4,0)
in the ICD Operation/Procedure file (#80.1) and IEN2 is the internal 
"^DD",80.1,80.167,.01,1,3,"%D",5,0)
entry number in the OPERATION/PROCEDURE multiple (#80.167) where the 
"^DD",80.1,80.167,.01,1,3,"%D",6,0)
short text is stored.
"^DD",80.1,80.167,.01,1,3,"DT")
3110921
"^DD",80.1,80.167,.01,3)
Enter a date not earlier than Oct 1, 1978.
"^DD",80.1,80.167,.01,21,0)
^^1^1^3110919^
"^DD",80.1,80.167,.01,21,1,0)
This is the date the operation/procedure became effective.  
"^DD",80.1,80.167,.01,"DT")
3110930
"^DD",80.1,80.167,1,0)
OPERATION/PROCEDURE^RF^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",80.1,80.167,1,3)
Answer must be 1-60 characters in length.
"^DD",80.1,80.167,1,21,0)
^^2^2^3110930^
"^DD",80.1,80.167,1,21,1,0)
This is the operations/procedure (short text) that was used beginning on
"^DD",80.1,80.167,1,21,2,0)
the effective date.
"^DD",80.1,80.167,1,"DT")
3110930
"^DD",80.1,80.168,0)
DESCRIPTION SUB-FIELD^^2^3
"^DD",80.1,80.168,0,"DT")
3120825
"^DD",80.1,80.168,0,"IX","B",80.168,.01)

"^DD",80.1,80.168,0,"NM","DESCRIPTION")

"^DD",80.1,80.168,0,"UP")
80.1
"^DD",80.1,80.168,.01,0)
DESCRIPTION EFFECTIVE DATE^MRD^^0;1^S %DT="EX" D ^%DT S X=Y K:2781001>X X
"^DD",80.1,80.168,.01,1,0)
^.1
"^DD",80.1,80.168,.01,1,1,0)
80.168^B
"^DD",80.1,80.168,.01,1,1,1)
S ^ICD0(DA(1),68,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.168,.01,1,1,2)
K ^ICD0(DA(1),68,"B",$E(X,1,30),DA)
"^DD",80.1,80.168,.01,1,1,"%D",0)
^^5^5^3040310^
"^DD",80.1,80.168,.01,1,1,"%D",1,0)
^ICD0(IEN1,68,"B",EFF,IEN2) - Where IEN1 is the internal entry number in 
"^DD",80.1,80.168,.01,1,1,"%D",2,0)
the ICD-9 Operation/Procedure file #80.1, EFF is the effective date for
"^DD",80.1,80.168,.01,1,1,"%D",3,0)
the description (long text), and IEN2 is the internal entry number in the
"^DD",80.1,80.168,.01,1,1,"%D",4,0)
DESCRIPTION (VERSIONED) multiple where the versioned procedure description
"^DD",80.1,80.168,.01,1,1,"%D",5,0)
is stored.
"^DD",80.1,80.168,.01,1,2,0)
80.1^ADS^MUMPS
"^DD",80.1,80.168,.01,1,2,1)
D SADS^ICDIDX(80.1)
"^DD",80.1,80.168,.01,1,2,2)
D KADS^ICDIDX(80.1)
"^DD",80.1,80.168,.01,1,2,"%D",0)
^^5^5^3110919^
"^DD",80.1,80.168,.01,1,2,"%D",1,0)
^ICD0("ADS",(CODE_" "),EFF,IEN1,IEN2) - Where CODE is the ICD 
"^DD",80.1,80.168,.01,1,2,"%D",2,0)
Operation/Procedure code, EFF is the effective date for the description
"^DD",80.1,80.168,.01,1,2,"%D",3,0)
(long text), IEN1 is the internal entry number in the ICD
"^DD",80.1,80.168,.01,1,2,"%D",4,0)
Operation/Procedure file (#80.1) and IEN2 is the internal entry number in
"^DD",80.1,80.168,.01,1,2,"%D",5,0)
the DESCRIPTION multiple (#80.168) where the description is stored.
"^DD",80.1,80.168,.01,1,2,"DT")
3110919
"^DD",80.1,80.168,.01,1,3,0)
80.1^ADSS1^MUMPS
"^DD",80.1,80.168,.01,1,3,1)
D SADSS1^ICDIDX(80.1)
"^DD",80.1,80.168,.01,1,3,2)
D KADSS1^ICDIDX(80.1)
"^DD",80.1,80.168,.01,1,3,"%D",0)
^^6^6^3110921^
"^DD",80.1,80.168,.01,1,3,"%D",1,0)
^ICD0("ADSS",SYS,(CODE_" "),EFF,IEN1,IEN2) - Where SYS is the coding
"^DD",80.1,80.168,.01,1,3,"%D",2,0)
system, CODE is the ICD procedure code, EFF is the effective date for 
"^DD",80.1,80.168,.01,1,3,"%D",3,0)
the description (long text), IEN1 is the internal entry number in the
"^DD",80.1,80.168,.01,1,3,"%D",4,0)
ICD Operation/Procedure file (#80.1) and IEN2 is the internal entry 
"^DD",80.1,80.168,.01,1,3,"%D",5,0)
number in the DESCRIPTION multiple (#80.168) where the long text is
"^DD",80.1,80.168,.01,1,3,"%D",6,0)
stored.
"^DD",80.1,80.168,.01,1,3,"DT")
3110921
"^DD",80.1,80.168,.01,3)
Enter a date not earlier than Oct 1, 1978.
"^DD",80.1,80.168,.01,21,0)
^^1^1^3110919^
"^DD",80.1,80.168,.01,21,1,0)
This is the date the description became effective.  
"^DD",80.1,80.168,.01,"DT")
3110930
"^DD",80.1,80.168,1,0)
DESCRIPTION^RF^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",80.1,80.168,1,1,0)
^.1
"^DD",80.1,80.168,1,1,1,0)
80.1^D^MUMPS
"^DD",80.1,80.168,1,1,1,1)
D SD^ICDIDX(80.1)
"^DD",80.1,80.168,1,1,1,2)
D KD^ICDIDX(80.1)
"^DD",80.1,80.168,1,1,1,"%D",0)
^^12^12^3111005^
"^DD",80.1,80.168,1,1,1,"%D",1,0)
^ICD0("D",WORD,IEN1,DATE,IEN2) - Where WORD is a single word 
"^DD",80.1,80.168,1,1,1,"%D",2,0)
extracted from the description, IEN1 is the internal entry number
"^DD",80.1,80.168,1,1,1,"%D",3,0)
in file #80.1 where the description is stored, DATE is the effective
"^DD",80.1,80.168,1,1,1,"%D",4,0)
date of the description and IEN2 number of the internal entry
"^DD",80.1,80.168,1,1,1,"%D",5,0)
number of the DESCRIPTION multiple sub-file #80.168 where the
"^DD",80.1,80.168,1,1,1,"%D",6,0)
description containing the extracted word is stored.  This is a 
"^DD",80.1,80.168,1,1,1,"%D",7,0)
modification of a Fileman KWIC (Key Word In Context) 
"^DD",80.1,80.168,1,1,1,"%D",8,0)
cross-reference.  Like the Fileman KWIC cross-reference, each 
"^DD",80.1,80.168,1,1,1,"%D",9,0)
word in the description is indexed.  Unlike the KWIC 
"^DD",80.1,80.168,1,1,1,"%D",10,0)
cross-reference the index contains the effective date of the
"^DD",80.1,80.168,1,1,1,"%D",11,0)
description.  This is done to allow date sensitive keyword 
"^DD",80.1,80.168,1,1,1,"%D",12,0)
searches of the Operations/Procedure file.
"^DD",80.1,80.168,1,1,1,"DT")
3110919
"^DD",80.1,80.168,1,1,2,0)
80.1^AD^MUMPS
"^DD",80.1,80.168,1,1,2,1)
D SAD^ICDIDX(80.1)
"^DD",80.1,80.168,1,1,2,2)
D KAD^ICDIDX(80.1)
"^DD",80.1,80.168,1,1,2,"%D",0)
^^12^12^3111005^
"^DD",80.1,80.168,1,1,2,"%D",1,0)
^ICD0("AD",SYS,WORD,IEN1,DATE,IEN2) - Where SYS is the coding 
"^DD",80.1,80.168,1,1,2,"%D",2,0)
system in file 80.1, WORD is a single word extracted from the 
"^DD",80.1,80.168,1,1,2,"%D",3,0)
description, IEN1 is the internal entry number in file #80.1 
"^DD",80.1,80.168,1,1,2,"%D",4,0)
where the description is stored, DATE is the effective date 
"^DD",80.1,80.168,1,1,2,"%D",5,0)
of the description and IEN2 is the internal entry number of
"^DD",80.1,80.168,1,1,2,"%D",6,0)
the DESCRIPTION multiple sub-file #80.168 where the description
"^DD",80.1,80.168,1,1,2,"%D",7,0)
containing the extracted word is stored.  This is a modification
"^DD",80.1,80.168,1,1,2,"%D",8,0)
of a Fileman KWIC (Key Word In Context) cross-reference.  Like
"^DD",80.1,80.168,1,1,2,"%D",9,0)
the Fileman KWIC cross-reference, each word in the description 
"^DD",80.1,80.168,1,1,2,"%D",10,0)
is indexed.  Unlike the KWIC cross-reference the index contains
"^DD",80.1,80.168,1,1,2,"%D",11,0)
the effective date of the description. This is done to allow date
"^DD",80.1,80.168,1,1,2,"%D",12,0)
sensitive keyword searches of the Operations/Procedure file.
"^DD",80.1,80.168,1,1,2,"DT")
3110919
"^DD",80.1,80.168,1,3)
Answer must be 1-245 characters in length.
"^DD",80.1,80.168,1,21,0)
^^2^2^3110930^
"^DD",80.1,80.168,1,21,1,0)
This is the description (long text) that was in use on the effective 
"^DD",80.1,80.168,1,21,2,0)
date. 
"^DD",80.1,80.168,1,"DT")
3110930
"^DD",80.1,80.168,2,0)
SUPPLEMENTAL^80.1682^^2;0
"^DD",80.1,80.168,2,21,0)
^^3^3^3120825^
"^DD",80.1,80.168,2,21,1,0)
This is a list of Supplemental keywords
"^DD",80.1,80.168,2,21,2,0)
which should be included in the word 
"^DD",80.1,80.168,2,21,3,0)
index to assist in look-up operations. 
"^DD",80.1,80.1682,0)
SUPPLEMENTAL SUB-FIELD^^.01^1
"^DD",80.1,80.1682,0,"DT")
3120825
"^DD",80.1,80.1682,0,"IX","B",80.1682,.01)

"^DD",80.1,80.1682,0,"NM","SUPPLEMENTAL")

"^DD",80.1,80.1682,0,"UP")
80.168
"^DD",80.1,80.1682,.01,0)
WORD^MF^^0;1^K:$L(X)>63!($L(X)<1) X
"^DD",80.1,80.1682,.01,1,0)
^.1
"^DD",80.1,80.1682,.01,1,1,0)
80.1682^B
"^DD",80.1,80.1682,.01,1,1,1)
S ^ICD0(DA(2),68,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.1682,.01,1,1,2)
K ^ICD0(DA(2),68,DA(1),2,"B",$E(X,1,30),DA)
"^DD",80.1,80.1682,.01,1,1,"%D",0)
^^11^11^3120825^
"^DD",80.1,80.1682,.01,1,1,"%D",1,0)
^ICD0(OP,68,DES,2,"B",WORD,IEN) - where
"^DD",80.1,80.1682,.01,1,1,"%D",2,0)
OP is the internal entry number (IEN) of
"^DD",80.1,80.1682,.01,1,1,"%D",3,0)
the ICD Operation/Procedure file, DES is
"^DD",80.1,80.1682,.01,1,1,"%D",4,0)
the internal entry number of the DESCRIPTION
"^DD",80.1,80.1682,.01,1,1,"%D",5,0)
multiple (sub-file #80.168) of the description 
"^DD",80.1,80.1682,.01,1,1,"%D",6,0)
containing supplemental keywords, WORD an
"^DD",80.1,80.1682,.01,1,1,"%D",7,0)
alternate keyword to be used in lookups 
"^DD",80.1,80.1682,.01,1,1,"%D",8,0)
and IEN is the internal entry number of 
"^DD",80.1,80.1682,.01,1,1,"%D",9,0)
the SUPPLEMENTAL multiple (sub-file 
"^DD",80.1,80.1682,.01,1,1,"%D",10,0)
#80.1682) where the supplemental keyword 
"^DD",80.1,80.1682,.01,1,1,"%D",11,0)
is stored.
"^DD",80.1,80.1682,.01,1,2,0)
80.1^AD3^MUMPS
"^DD",80.1,80.1682,.01,1,2,1)
D SAD3^ICDIDX(80.1)
"^DD",80.1,80.1682,.01,1,2,2)
D KAD3^ICDIDX(80.1)
"^DD",80.1,80.1682,.01,1,2,"%D",0)
^^10^10^3120825^
"^DD",80.1,80.1682,.01,1,2,"%D",1,0)
^ICD0("AD",SYS,WD,FI,CDT,DI,WI) - where SYS is
"^DD",80.1,80.1682,.01,1,2,"%D",2,0)
the coding system (field 1.1), WD is a keyword 
"^DD",80.1,80.1682,.01,1,2,"%D",3,0)
from the SUPPLEMENTAL sub-file (80.1682), FI is 
"^DD",80.1,80.1682,.01,1,2,"%D",4,0)
the internal entry number to the ICD Operation
"^DD",80.1,80.1682,.01,1,2,"%D",5,0)
Procedure file, CDT is the date the keyword 
"^DD",80.1,80.1682,.01,1,2,"%D",6,0)
became effective (sub-file 80.168, .01 field), 
"^DD",80.1,80.1682,.01,1,2,"%D",7,0)
DI is the internal entry number of the DESCRIPTION 
"^DD",80.1,80.1682,.01,1,2,"%D",8,0)
multiple (sub-file 80.168) and WI is the internal
"^DD",80.1,80.1682,.01,1,2,"%D",9,0)
entry number of the SUPPLEMENTAL multiple 
"^DD",80.1,80.1682,.01,1,2,"%D",10,0)
(sub-file 80.1682) where the key word is stored.
"^DD",80.1,80.1682,.01,1,2,"DT")
3120825
"^DD",80.1,80.1682,.01,3)
Answer must be 1-63 characters in length.
"^DD",80.1,80.1682,.01,21,0)
^^2^2^3120825^
"^DD",80.1,80.1682,.01,21,1,0)
This field contains a single word that should be
"^DD",80.1,80.1682,.01,21,2,0)
included in the word index.
"^DD",80.1,80.1682,.01,"DT")
3120825
"^DD",80.1,80.171,0)
DRG GROUPER SUB-FIELD^^1^2
"^DD",80.1,80.171,0,"DT")
3110930
"^DD",80.1,80.171,0,"IX","B",80.171,.01)

"^DD",80.1,80.171,0,"NM","DRG GROUPER")

"^DD",80.1,80.171,0,"UP")
80.1
"^DD",80.1,80.171,.01,0)
DRG GROUPER EFFECTIVE DATE^MD^^0;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",80.1,80.171,.01,1,0)
^.1
"^DD",80.1,80.171,.01,1,1,0)
80.171^B
"^DD",80.1,80.171,.01,1,1,1)
S ^ICD0(DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.171,.01,1,1,2)
K ^ICD0(DA(1),2,"B",$E(X,1,30),DA)
"^DD",80.1,80.171,.01,1,1,"%D",0)
^^5^5^3110919^
"^DD",80.1,80.171,.01,1,1,"%D",1,0)
^ICD0(IEN1,2,"B",EFF,IEN2) - Where IEN1 is the internal 
"^DD",80.1,80.171,.01,1,1,"%D",2,0)
entry number in the OPERATIONS/PROCEDURE file 80.1, EFF 
"^DD",80.1,80.171,.01,1,1,"%D",3,0)
is the effective date of the MDCs/DRGs, and IEN2 is the 
"^DD",80.1,80.171,.01,1,1,"%D",4,0)
internal entry number of the DRG GROUPER multiple 80.171
"^DD",80.1,80.171,.01,1,1,"%D",5,0)
where the MDCs/DRGs are stored.
"^DD",80.1,80.171,.01,3)
Enter the DRG Grouper effective date.
"^DD",80.1,80.171,.01,21,0)
^^4^4^3110930^
"^DD",80.1,80.171,.01,21,1,0)
This is the effective date for the MDCs and DRGs for a fiscal
"^DD",80.1,80.171,.01,21,2,0)
year.  It should normally be the first day of October of the fiscal
"^DD",80.1,80.171,.01,21,3,0)
year. Each year a new entry will be created and the DRG's hierarchy
"^DD",80.1,80.171,.01,21,4,0)
will reside within this field.
"^DD",80.1,80.171,.01,"DT")
3110930
"^DD",80.1,80.171,1,0)
MAJOR DIAGNOSTIC CATEGORIES^80.1711P^^1;0
"^DD",80.1,80.171,1,21,0)
^^2^2^3111005^
"^DD",80.1,80.171,1,21,1,0)
Major Diagnostic Categories (MDC) associated with the
"^DD",80.1,80.171,1,21,2,0)
ICD Operation/Procedure.
"^DD",80.1,80.171,1,"DT")
3110930
"^DD",80.1,80.1711,0)
MAJOR DIAGNOSTIC CATEGORIES SUB-FIELD^^1^2
"^DD",80.1,80.1711,0,"DT")
3110916
"^DD",80.1,80.1711,0,"IX","B",80.1711,.01)

"^DD",80.1,80.1711,0,"NM","MAJOR DIAGNOSTIC CATEGORIES")

"^DD",80.1,80.1711,0,"UP")
80.171
"^DD",80.1,80.1711,.01,0)
MAJOR DIAGNOSTIC CATEGORY^MP80.3'^ICM(^0;1^Q
"^DD",80.1,80.1711,.01,1,0)
^.1
"^DD",80.1,80.1711,.01,1,1,0)
80.1711^B
"^DD",80.1,80.1711,.01,1,1,1)
S ^ICD0(DA(2),2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.1711,.01,1,1,2)
K ^ICD0(DA(2),2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",80.1,80.1711,.01,1,1,"%D",0)
^^7^7^3110919^
"^DD",80.1,80.1711,.01,1,1,"%D",1,0)
^ICD0(IEN1,2,IEN2,1,"B",MDC,IEN3) - Where IEN1 is the 
"^DD",80.1,80.1711,.01,1,1,"%D",2,0)
internal entry number in the OPERATIONS/PROCEDURE file
"^DD",80.1,80.1711,.01,1,1,"%D",3,0)
80.1, IEN2 is the internal entry in the DRG GROUPER 
"^DD",80.1,80.1711,.01,1,1,"%D",4,0)
multiple 80.171, MDC is a pointer to the MAJOR DIAGNOSTIC
"^DD",80.1,80.1711,.01,1,1,"%D",5,0)
CATEGORY file #80.3 and IEN3 is the internal entry number
"^DD",80.1,80.1711,.01,1,1,"%D",6,0)
on the MAJOR DIAGNOSTIC CATEGORY multiple 80.1711 where
"^DD",80.1,80.1711,.01,1,1,"%D",7,0)
the MDC is stored.
"^DD",80.1,80.1711,.01,3)
Enter MDC associated with the ICD code.
"^DD",80.1,80.1711,.01,21,0)
^^2^2^3111005^
"^DD",80.1,80.1711,.01,21,1,0)
This is a Major Diagnostic Category (MDC) associated with
"^DD",80.1,80.1711,.01,21,2,0)
the ICD Operation/Procedure.
"^DD",80.1,80.1711,.01,"DT")
3111005
"^DD",80.1,80.1711,1,0)
DRG^80.17111P^^1;0
"^DD",80.1,80.1711,1,21,0)
^^2^2^3110919^
"^DD",80.1,80.1711,1,21,1,0)
DRG(s) associated with corresponding ICD Operation/Procedure for a given
"^DD",80.1,80.1711,1,21,2,0)
fiscal year.
"^DD",80.1,80.17111,0)
DRG SUB-FIELD^^.01^1
"^DD",80.1,80.17111,0,"DT")
3110916
"^DD",80.1,80.17111,0,"IX","B",80.17111,.01)

"^DD",80.1,80.17111,0,"NM","DRG")

"^DD",80.1,80.17111,0,"UP")
80.1711
"^DD",80.1,80.17111,.01,0)
DRG^MP80.2'^ICD(^0;1^Q
"^DD",80.1,80.17111,.01,1,0)
^.1
"^DD",80.1,80.17111,.01,1,1,0)
80.17111^B
"^DD",80.1,80.17111,.01,1,1,1)
S ^ICD0(DA(3),2,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.17111,.01,1,1,2)
K ^ICD0(DA(3),2,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",80.1,80.17111,.01,1,1,"%D",0)
^^8^8^3110919^
"^DD",80.1,80.17111,.01,1,1,"%D",1,0)
^ICD0(IEN1,2,IEN2,1,IEN3,1,"B",DRG,IEN4) - Where IEN1 is 
"^DD",80.1,80.17111,.01,1,1,"%D",2,0)
the internal entry number in the OPERATIONS/PROCEDURE file
"^DD",80.1,80.17111,.01,1,1,"%D",3,0)
80.1, IEN2 is the internal entry number in the DRG GROUPER
"^DD",80.1,80.17111,.01,1,1,"%D",4,0)
multiple 80.171, IEN3 is the internal entry number in the 
"^DD",80.1,80.17111,.01,1,1,"%D",5,0)
MAJOR DIAGNOSTIC CATEGORY multiple 80.1711, DRG is a 
"^DD",80.1,80.17111,.01,1,1,"%D",6,0)
pointer to the DRG file #80.2 and IEN4 is the enternal 
"^DD",80.1,80.17111,.01,1,1,"%D",7,0)
entry number of the DRG multiple #80.17111 where the DRG
"^DD",80.1,80.17111,.01,1,1,"%D",8,0)
is stored.
"^DD",80.1,80.17111,.01,3)
Enter a DRG associated with the MDC for the ICD code.
"^DD",80.1,80.17111,.01,21,0)
^^1^1^3110930^
"^DD",80.1,80.17111,.01,21,1,0)
This is a DRG Group associated with the procedure.
"^DD",80.1,80.17111,.01,"DT")
3110930
"^DD",80.1,80.173,0)
DRG PROCEDURE IDENTIFIER CODES SUB-FIELD^^.01^1
"^DD",80.1,80.173,0,"DT")
3120530
"^DD",80.1,80.173,0,"IX","B",80.173,.01)

"^DD",80.1,80.173,0,"NM","DRG PROCEDURE IDENTIFIER CODES")

"^DD",80.1,80.173,0,"UP")
80.1
"^DD",80.1,80.173,.01,0)
DRG PROCEDURE IDENTIFIER CODE^MP82.1'^ICDIP(^0;1^Q
"^DD",80.1,80.173,.01,1,0)
^.1
"^DD",80.1,80.173,.01,1,1,0)
80.173^B
"^DD",80.1,80.173,.01,1,1,1)
S ^ICD0(DA(1),73,"B",$E(X,1,30),DA)=""
"^DD",80.1,80.173,.01,1,1,2)
K ^ICD0(DA(1),73,"B",$E(X,1,30),DA)
"^DD",80.1,80.173,.01,1,1,"%D",0)
^^6^6^3120530^
"^DD",80.1,80.173,.01,1,1,"%D",1,0)
^ICD0(IEN1,73,"B",ID,IEN2) - Where IEN1 is the internal entry
"^DD",80.1,80.173,.01,1,1,"%D",2,0)
number in file #80, ID a procedure identifier code (a pointer
"^DD",80.1,80.173,.01,1,1,"%D",3,0)
to the DRG PROCEDURE IDENTIFIER CODES file #82.1), and IEN2
"^DD",80.1,80.173,.01,1,1,"%D",4,0)
is the internal entry number of the DRG PROCEDURE IDENTIFIER
"^DD",80.1,80.173,.01,1,1,"%D",5,0)
CODES multiple sub-file 80.173 where the procedure identifier
"^DD",80.1,80.173,.01,1,1,"%D",6,0)
code is stored.
"^DD",80.1,80.173,.01,3)
Enter a DRG Procedure Identifier Code.
"^DD",80.1,80.173,.01,21,0)
^^2^2^3120530^
"^DD",80.1,80.173,.01,21,1,0)
This is an identifier code used in the DRG 
"^DD",80.1,80.173,.01,21,2,0)
rules processing to determine DRG.
"^DD",80.1,80.173,.01,"DT")
3120530
"^DD",80.4,80.4,0)
FIELD^^.04^5
"^DD",80.4,80.4,0,"DDA")
N
"^DD",80.4,80.4,0,"DT")
3111003
"^DD",80.4,80.4,0,"IX","B",80.4,.01)

"^DD",80.4,80.4,0,"IX","C",80.4,.02)

"^DD",80.4,80.4,0,"IX","F",80.4,.03)

"^DD",80.4,80.4,0,"NM","ICD CODING SYSTEMS")

"^DD",80.4,80.4,0,"PT",69.54,1)

"^DD",80.4,80.4,0,"PT",80,1.1)

"^DD",80.4,80.4,0,"PT",80.1,1.1)

"^DD",80.4,80.4,0,"PT",509850.1,.07)

"^DD",80.4,80.4,0,"VRPK")
ICD
"^DD",80.4,80.4,0,"VRRV")
68^3141001
"^DD",80.4,80.4,.001,0)
ICD CODING SYSTEM^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",80.4,80.4,.001,3)
Enter a number between 1 and 9999.
"^DD",80.4,80.4,.001,21,0)
^^1^1^3110929^
"^DD",80.4,80.4,.001,21,1,0)
This is a numeric representation of a ICD Coding System.
"^DD",80.4,80.4,.001,"DT")
3110929
"^DD",80.4,80.4,.01,0)
ICD CODING SYSTEM NOMENCLATURE^F^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",80.4,80.4,.01,1,0)
^.1
"^DD",80.4,80.4,.01,1,1,0)
80.4^B
"^DD",80.4,80.4,.01,1,1,1)
S ^ICDS("B",$E(X,1,30),DA)=""
"^DD",80.4,80.4,.01,1,1,2)
K ^ICDS("B",$E(X,1,30),DA)
"^DD",80.4,80.4,.01,1,1,"%D",0)
^^4^4^3111003^
"^DD",80.4,80.4,.01,1,1,"%D",1,0)
^ICDS("B",NOM,IEN) - Where NOM is the coding system 
"^DD",80.4,80.4,.01,1,1,"%D",2,0)
nomenclature (i.e., ICD-9-CM, ICD-10-PCS, etc.) and 
"^DD",80.4,80.4,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the ICD CODING 
"^DD",80.4,80.4,.01,1,1,"%D",4,0)
SYSTEMS file #80.4 where the nomenclature is stored.
"^DD",80.4,80.4,.01,3)
Enter a Coding System Nomenclature (3-30 characters).
"^DD",80.4,80.4,.01,21,0)
^^4^4^3111003^
"^DD",80.4,80.4,.01,21,1,0)
This is the ICD Coding system, to include the ICD designator,
"^DD",80.4,80.4,.01,21,2,0)
the version number and an identifier for the type if ICD 
"^DD",80.4,80.4,.01,21,3,0)
coding system (diagnosis or procedure).  Examples: ICD-9-CM,
"^DD",80.4,80.4,.01,21,4,0)
ICD-10-CM, ICD-10-PCS, etc.  
"^DD",80.4,80.4,.01,"DT")
3111003
"^DD",80.4,80.4,.02,0)
CODING SYSTEM ABBREVIATION^F^^0;2^K:$L(X)>3!($L(X)<3) X
"^DD",80.4,80.4,.02,1,0)
^.1
"^DD",80.4,80.4,.02,1,1,0)
80.4^C
"^DD",80.4,80.4,.02,1,1,1)
S ^ICDS("C",$E(X,1,30),DA)=""
"^DD",80.4,80.4,.02,1,1,2)
K ^ICDS("C",$E(X,1,30),DA)
"^DD",80.4,80.4,.02,1,1,"%D",0)
^^4^4^3111003^
"^DD",80.4,80.4,.02,1,1,"%D",1,0)
^ICDS("C",SAB,IEN) - Where SAB is the coding system 
"^DD",80.4,80.4,.02,1,1,"%D",2,0)
abbreviation and IEN is the Internal Entry Number in 
"^DD",80.4,80.4,.02,1,1,"%D",3,0)
the ICD CODING SYSTEMS file #80.4 where the 
"^DD",80.4,80.4,.02,1,1,"%D",4,0)
abbreviation is stored.
"^DD",80.4,80.4,.02,1,1,"DT")
3111003
"^DD",80.4,80.4,.02,3)
Enter the Coding System Abbreviation (3 characters).
"^DD",80.4,80.4,.02,21,0)
^^2^2^3111003^
"^DD",80.4,80.4,.02,21,1,0)
This is a unique 3 character identifier for the 
"^DD",80.4,80.4,.02,21,2,0)
coding system.  
"^DD",80.4,80.4,.02,"DT")
3111003
"^DD",80.4,80.4,.03,0)
ICD FILE^*P1'^DIC(^0;3^I +Y=80!(+Y=80.1) D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",80.4,80.4,.03,1,0)
^.1
"^DD",80.4,80.4,.03,1,1,0)
80.4^F
"^DD",80.4,80.4,.03,1,1,1)
S ^ICDS("F",$E(X,1,30),DA)=""
"^DD",80.4,80.4,.03,1,1,2)
K ^ICDS("F",$E(X,1,30),DA)
"^DD",80.4,80.4,.03,1,1,"%D",0)
^^4^4^3111003^
"^DD",80.4,80.4,.03,1,1,"%D",1,0)
^ICDS("F",FIL,IEN) - Where FIL is the file number 
"^DD",80.4,80.4,.03,1,1,"%D",2,0)
where the coding system is stored and IEN is the 
"^DD",80.4,80.4,.03,1,1,"%D",3,0)
Internal Entry Number in the ICD CODING SYSTEMS 
"^DD",80.4,80.4,.03,1,1,"%D",4,0)
file #80.4 where the file number is stored.  
"^DD",80.4,80.4,.03,1,1,"DT")
3111003
"^DD",80.4,80.4,.03,3)
Enter the appropriate file number (80 or 80.1).
"^DD",80.4,80.4,.03,12)
Selection limited to ICD files 80 and 80.1
"^DD",80.4,80.4,.03,12.1)
I +Y=80!(+Y=80.1)
"^DD",80.4,80.4,.03,21,0)
^^1^1^3111003^
"^DD",80.4,80.4,.03,21,1,0)
This is the file number were the ICD CODING SYSTEM is stored.
"^DD",80.4,80.4,.03,"DT")
3111003
"^DD",80.4,80.4,.04,0)
IMPLEMENTATION DATE^D^^0;4^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",80.4,80.4,.04,3)
Enter the date the ICD coding system was implemented.
"^DD",80.4,80.4,.04,21,0)
^^2^2^3111003^
"^DD",80.4,80.4,.04,21,1,0)
This is the date the ICD CODING SYSTEM was implemented
"^DD",80.4,80.4,.04,21,2,0)
in the VA.  
"^DD",80.4,80.4,.04,"DT")
3111003
"^DD",82,82,0)
FIELD^^1^2
"^DD",82,82,0,"DDA")
N
"^DD",82,82,0,"DT")
3120529
"^DD",82,82,0,"IX","B",82,.01)

"^DD",82,82,0,"NM","DRG DIAGNOSIS IDENTIFIER CODES")

"^DD",82,82,0,"PT",80.073,.01)

"^DD",82,82,0,"PT",82.12,.01)

"^DD",82,82,0,"PT",8000.01,.01)

"^DD",82,82,0,"PT",8000.073,.01)

"^DD",82,82,0,"VRPK")
ICD
"^DD",82,82,.01,0)
IDENTIFIER CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!($E(X,1)'="*"&('(X'?1P.E))) X
"^DD",82,82,.01,1,0)
^.1
"^DD",82,82,.01,1,1,0)
82^B
"^DD",82,82,.01,1,1,1)
S ^ICDID("B",$E(X,1,30),DA)=""
"^DD",82,82,.01,1,1,2)
K ^ICDID("B",$E(X,1,30),DA)
"^DD",82,82,.01,3)
Answer must be 1-10 characters in length.
"^DD",82,82,.01,21,0)
^^1^1^3120529^
"^DD",82,82,.01,21,1,0)
ICD-9 and ICD-10 Diagnosis Identifier Code
"^DD",82,82,.01,"DT")
3120529
"^DD",82,82,1,0)
DESCRIPTION^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",82,82,1,1,0)
^.1^^0
"^DD",82,82,1,3)
Answer must be 1-150 characters in length.
"^DD",82,82,1,21,0)
^^1^1^3120529^
"^DD",82,82,1,21,1,0)
Description of this Identifier Code
"^DD",82,82,1,"DT")
3120529
"^DD",82.1,82.1,0)
FIELD^^1^2
"^DD",82.1,82.1,0,"DDA")
N
"^DD",82.1,82.1,0,"DT")
3120529
"^DD",82.1,82.1,0,"IX","B",82.1,.01)

"^DD",82.1,82.1,0,"NM","DRG PROCEDURE IDENTIFIER CODES")

"^DD",82.1,82.1,0,"PT",80.173,.01)

"^DD",82.1,82.1,0,"PT",82.11,.01)

"^DD",82.1,82.1,0,"VRPK")
ICD
"^DD",82.1,82.1,.01,0)
IDENTIFIER CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",82.1,82.1,.01,1,0)
^.1
"^DD",82.1,82.1,.01,1,1,0)
82.1^B
"^DD",82.1,82.1,.01,1,1,1)
S ^ICDIP("B",$E(X,1,30),DA)=""
"^DD",82.1,82.1,.01,1,1,2)
K ^ICDIP("B",$E(X,1,30),DA)
"^DD",82.1,82.1,.01,3)
Answer must be 1-10 characters in length.
"^DD",82.1,82.1,.01,21,0)
^^1^1^3120529^
"^DD",82.1,82.1,.01,21,1,0)
ICD-9 and ICD-10 Identifier Code
"^DD",82.1,82.1,.01,"DT")
3120529
"^DD",82.1,82.1,1,0)
DESCRIPTION^F^^0;2^K:$L(X)>150!($L(X)<1) X
"^DD",82.1,82.1,1,1,0)
^.1^^0
"^DD",82.1,82.1,1,3)
Answer must be 1-150 characters in length.
"^DD",82.1,82.1,1,21,0)
^^1^1^3120529^
"^DD",82.1,82.1,1,21,1,0)
Description of this Identifier Code
"^DD",82.1,82.1,1,"DT")
3120529
"^DD",82.13,82.13,0)
FIELD^^1^2
"^DD",82.13,82.13,0,"DDA")
N
"^DD",82.13,82.13,0,"DT")
3120628
"^DD",82.13,82.13,0,"IX","B",82.13,.01)

"^DD",82.13,82.13,0,"NM","DRG CC EXCLUSIONS")

"^DD",82.13,82.13,0,"PT",80,1.11)

"^DD",82.13,82.13,0,"VRPK")
ICD
"^DD",82.13,82.13,.01,0)
EXCLUSION CODE^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",82.13,82.13,.01,1,0)
^.1
"^DD",82.13,82.13,.01,1,1,0)
82.13^B
"^DD",82.13,82.13,.01,1,1,1)
S ^ICDCCEX("B",$E(X,1,30),DA)=""
"^DD",82.13,82.13,.01,1,1,2)
K ^ICDCCEX("B",$E(X,1,30),DA)
"^DD",82.13,82.13,.01,3)
Answer must be 1-30 characters in length.
"^DD",82.13,82.13,.01,21,0)
^^2^2^3120628^
"^DD",82.13,82.13,.01,21,1,0)
This field contains a code which identifies a group of primary Diagnosis 
"^DD",82.13,82.13,.01,21,2,0)
Codes.
"^DD",82.13,82.13,.01,"DT")
3120628
"^DD",82.13,82.13,1,0)
PDX^82.131PA^^1;0
"^DD",82.13,82.13,1,21,0)
^^1^1^3120628^
"^DD",82.13,82.13,1,21,1,0)
This multiple field contains a list of Diagnosis Codes.
"^DD",82.13,82.131,0)
PDX SUB-FIELD^^.01^1
"^DD",82.13,82.131,0,"DT")
3120628
"^DD",82.13,82.131,0,"IX","B",82.131,.01)

"^DD",82.13,82.131,0,"NM","PDX")

"^DD",82.13,82.131,0,"UP")
82.13
"^DD",82.13,82.131,.01,0)
PDX^MRP80'^ICD9(^0;1^Q
"^DD",82.13,82.131,.01,1,0)
^.1
"^DD",82.13,82.131,.01,1,1,0)
82.131^B
"^DD",82.13,82.131,.01,1,1,1)
S ^ICDCCEX(DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",82.13,82.131,.01,1,1,2)
K ^ICDCCEX(DA(1),1,"B",$E(X,1,30),DA)
"^DD",82.13,82.131,.01,3)
Enter a Diagnosis Code.
"^DD",82.13,82.131,.01,21,0)
^^4^4^3120628^
"^DD",82.13,82.131,.01,21,1,0)
This field contains a Diagnosis Code that, when used as a Primary 
"^DD",82.13,82.131,.01,21,2,0)
Diagnosis Code with any Secondary Diagnosis that points to the EXCLUSION 
"^DD",82.13,82.131,.01,21,3,0)
CODE of this file, will cause the CC (Complication/Comorbidity) to be
"^DD",82.13,82.131,.01,21,4,0)
zero meaning "no CC".
"^DD",82.13,82.131,.01,"DT")
3120628
"^DIC",80,80,0)
ICD DIAGNOSIS^80IO
"^DIC",80,80,0,"GL")
^ICD9(
"^DIC",80,80,"%",0)
^1.005^2^2
"^DIC",80,80,"%",1,0)
PXRS
"^DIC",80,80,"%",2,0)
QAM
"^DIC",80,80,"%","B","PXRS",1)

"^DIC",80,80,"%","B","QAM",2)

"^DIC",80,80,"%D",0)
^^11^11^3120222^
"^DIC",80,80,"%D",1,0)
ICD Diagnosis file #80 contains codes from the International 
"^DIC",80,80,"%D",2,0)
Classification of Diseases (ICD) Clinical Modification (CM) 
"^DIC",80,80,"%D",3,0)
provided by the Centers for Medicare and Medicaid Services 
"^DIC",80,80,"%D",4,0)
(CMS) and the National Center for Health Statistics (NCHS).
"^DIC",80,80,"%D",5,0)
This file contains both the 9th (ICD-9-CM) and 10th (ICD-10-CM)
"^DIC",80,80,"%D",6,0)
Revisions.
"^DIC",80,80,"%D",7,0)
 
"^DIC",80,80,"%D",8,0)
If an entry needs to be added, modified or deleted, a patch will
"^DIC",80,80,"%D",9,0)
be issued containing the change.
"^DIC",80,80,"%D",10,0)
 
"^DIC",80,80,"%D",11,0)
This table file should NOT be edited in anyway by the site.
"^DIC",80,"B","ICD DIAGNOSIS",80)

"^DIC",80.1,80.1,0)
ICD OPERATION/PROCEDURE^80.1IO
"^DIC",80.1,80.1,0,"GL")
^ICD0(
"^DIC",80.1,80.1,"%",0)
^1.005^2^2
"^DIC",80.1,80.1,"%",1,0)
PXRS
"^DIC",80.1,80.1,"%",2,0)
QAM
"^DIC",80.1,80.1,"%","B","PXRS",1)

"^DIC",80.1,80.1,"%","B","QAM",2)

"^DIC",80.1,80.1,"%D",0)
^^11^11^3111005^
"^DIC",80.1,80.1,"%D",1,0)
ICD Operations/Procedure file #80.1 contains codes from the 
"^DIC",80.1,80.1,"%D",2,0)
International Classification of Diseases (ICD) Procedure Coding
"^DIC",80.1,80.1,"%D",3,0)
System (PCS) provided by the Centers for Medicare and Medicaid
"^DIC",80.1,80.1,"%D",4,0)
Services (CMS) and the National Center for Health Statistics
"^DIC",80.1,80.1,"%D",5,0)
(NCHS).  This file contains both the 9th (ICD-9-PCS) and 10th
"^DIC",80.1,80.1,"%D",6,0)
(ICD-10-PCS) Revisions.
"^DIC",80.1,80.1,"%D",7,0)
 
"^DIC",80.1,80.1,"%D",8,0)
If an entry needs to be added, modified or deleted, a patch will
"^DIC",80.1,80.1,"%D",9,0)
be issued containing the change.
"^DIC",80.1,80.1,"%D",10,0)
 
"^DIC",80.1,80.1,"%D",11,0)
This table file should NOT be edited in anyway by the site.
"^DIC",80.1,"B","ICD OPERATION/PROCEDURE",80.1)

"^DIC",80.4,80.4,0)
ICD CODING SYSTEMS^80.4
"^DIC",80.4,80.4,0,"GL")
^ICDS(
"^DIC",80.4,80.4,"%",0)
^1.005^^0
"^DIC",80.4,80.4,"%D",0)
^1.001^6^6^3120613^^
"^DIC",80.4,80.4,"%D",1,0)
This file contains a listing of ICD coding systems stored in
"^DIC",80.4,80.4,"%D",2,0)
file 80 and 80.1.  The Internal Entry Numbers (IENs) in this
"^DIC",80.4,80.4,"%D",3,0)
file are identical to those found in the Lexicon's CODING 
"^DIC",80.4,80.4,"%D",4,0)
SYSTEM file 757.03.
"^DIC",80.4,80.4,"%D",5,0)
 
"^DIC",80.4,80.4,"%D",6,0)
This table file should NOT be edited in anyway by the site.
"^DIC",80.4,"B","ICD CODING SYSTEMS",80.4)

"^DIC",82,82,0)
DRG DIAGNOSIS IDENTIFIER CODES^82
"^DIC",82,82,0,"GL")
^ICDID(
"^DIC",82,82,"%",0)
^1.005^^0
"^DIC",82,"B","DRG DIAGNOSIS IDENTIFIER CODES",82)

"^DIC",82.1,82.1,0)
DRG PROCEDURE IDENTIFIER CODES^82.1
"^DIC",82.1,82.1,0,"GL")
^ICDIP(
"^DIC",82.1,82.1,"%",0)
^1.005^^0
"^DIC",82.1,"B","DRG PROCEDURE IDENTIFIER CODES",82.1)

"^DIC",82.13,82.13,0)
DRG CC EXCLUSIONS^82.13
"^DIC",82.13,82.13,0,"GL")
^ICDCCEX(
"^DIC",82.13,82.13,"%",0)
^1.005^^0
"^DIC",82.13,82.13,"%D",0)
^^4^4^3120628^
"^DIC",82.13,82.13,"%D",1,0)
This file contains data that was extracted from Appendix C of the 
"^DIC",82.13,82.13,"%D",2,0)
Medicare/Medicaid web site www.cms.gov. The data consists of lists of 
"^DIC",82.13,82.13,"%D",3,0)
Diagnosis Codes. Each list is stored within an Exclusion Code that 
"^DIC",82.13,82.13,"%D",4,0)
provides access to the list from File #80, field 1.11.
"^DIC",82.13,"B","DRG CC EXCLUSIONS",82.13)

**INSTALL NAME**
LEX*2.0*80
"BLD",8250,0)
LEX*2.0*80^LEXICON UTILITY^0^3140421^y
"BLD",8250,1,0)
^9.61A^3^3^3120313^^
"BLD",8250,1,1,0)
Please see the National Patch Module for details of the enhancements
"BLD",8250,1,2,0)
included in this patch.  Please see patch ICD*18.0*57 for install
"BLD",8250,1,3,0)
instructions for this patch.
"BLD",8250,4,0)
^9.64PA^757.033^4
"BLD",8250,4,757.02,0)
757.02
"BLD",8250,4,757.02,222)
y^y^f^^^^n
"BLD",8250,4,757.03,0)
757.03
"BLD",8250,4,757.03,222)
y^y^f^^^^n^^
"BLD",8250,4,757.03,224)

"BLD",8250,4,757.033,0)
757.033
"BLD",8250,4,757.033,222)
y^y^f^^^^n
"BLD",8250,4,757.31,0)
757.31
"BLD",8250,4,757.31,222)
y^y^f^^n^^y^o^n
"BLD",8250,4,"B",757.02,757.02)

"BLD",8250,4,"B",757.03,757.03)

"BLD",8250,4,"B",757.033,757.033)

"BLD",8250,4,"B",757.31,757.31)

"BLD",8250,6.3)
1
"BLD",8250,"ABPKG")
n
"BLD",8250,"INI")

"BLD",8250,"INIT")
POST^LEX2080P
"BLD",8250,"KRN",0)
^9.67PA^779.2^20
"BLD",8250,"KRN",.4,0)
.4
"BLD",8250,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8250,"KRN",.401,0)
.401
"BLD",8250,"KRN",.401,"NM",0)
^9.68A^^
"BLD",8250,"KRN",.402,0)
.402
"BLD",8250,"KRN",.403,0)
.403
"BLD",8250,"KRN",.5,0)
.5
"BLD",8250,"KRN",.84,0)
.84
"BLD",8250,"KRN",3.6,0)
3.6
"BLD",8250,"KRN",3.8,0)
3.8
"BLD",8250,"KRN",9.2,0)
9.2
"BLD",8250,"KRN",9.8,0)
9.8
"BLD",8250,"KRN",9.8,"NM",0)
^9.68A^221^218
"BLD",8250,"KRN",9.8,"NM",2,0)
LEXAR5^^0^B56192093
"BLD",8250,"KRN",9.8,"NM",3,0)
LEXQC^^0^B5018665
"BLD",8250,"KRN",9.8,"NM",4,0)
LEXQC2^^0^B13016948
"BLD",8250,"KRN",9.8,"NM",5,0)
LEXQC3^^0^B22152952
"BLD",8250,"KRN",9.8,"NM",6,0)
LEXQC4^^0^B47380274
"BLD",8250,"KRN",9.8,"NM",7,0)
LEXABC^^0^B68137439
"BLD",8250,"KRN",9.8,"NM",8,0)
LEXALK^^0^B35871965
"BLD",8250,"KRN",9.8,"NM",9,0)
LEXAR3^^0^B79678965
"BLD",8250,"KRN",9.8,"NM",10,0)
LEX2080^^0^B184435059
"BLD",8250,"KRN",9.8,"NM",11,0)
LEX2080P^^0^B91320913
"BLD",8250,"KRN",9.8,"NM",12,0)
LEXCODE^^0^B71456026
"BLD",8250,"KRN",9.8,"NM",14,0)
LEXHLP2^^0^B43406586
"BLD",8250,"KRN",9.8,"NM",15,0)
LEXNDX8^^0^B57045957
"BLD",8250,"KRN",9.8,"NM",16,0)
LEXQL^^0^B69016427
"BLD",8250,"KRN",9.8,"NM",17,0)
LEXQL2^^0^B49164602
"BLD",8250,"KRN",9.8,"NM",18,0)
LEXQL3^^0^B12608656
"BLD",8250,"KRN",9.8,"NM",19,0)
LEXQL4^^0^B39546926
"BLD",8250,"KRN",9.8,"NM",20,0)
LEXQH^^0^B20466600
"BLD",8250,"KRN",9.8,"NM",21,0)
LEXQHL1^^0^B95304509
"BLD",8250,"KRN",9.8,"NM",22,0)
LEXQHL2^^0^B90489365
"BLD",8250,"KRN",9.8,"NM",23,0)
LEXQHL3^^0^B40434251
"BLD",8250,"KRN",9.8,"NM",24,0)
LEXQHL4^^0^B100552373
"BLD",8250,"KRN",9.8,"NM",25,0)
LEXQHL5^^0^B21983988
"BLD",8250,"KRN",9.8,"NM",26,0)
LEXQHLM^^0^B7914203
"BLD",8250,"KRN",9.8,"NM",27,0)
LEX10CS^^0^B72383021
"BLD",8250,"KRN",9.8,"NM",28,0)
LEX10DX^^0^B28706888
"BLD",8250,"KRN",9.8,"NM",29,0)
LEX10PR^^0^B47282338
"BLD",8250,"KRN",9.8,"NM",30,0)
LEXSET^^0^B17938997
"BLD",8250,"KRN",9.8,"NM",31,0)
LEXQIP^^0^B87751371
"BLD",8250,"KRN",9.8,"NM",32,0)
LEXQIP2^^0^B10742392
"BLD",8250,"KRN",9.8,"NM",33,0)
LEXQIP3^^0^B28040002
"BLD",8250,"KRN",9.8,"NM",34,0)
LEXQIPA^^0^B3640982
"BLD",8250,"KRN",9.8,"NM",35,0)
LEXQID^^0^B59190420
"BLD",8250,"KRN",9.8,"NM",36,0)
LEXQID2^^0^B35722447
"BLD",8250,"KRN",9.8,"NM",37,0)
LEXQID3^^0^B74079700
"BLD",8250,"KRN",9.8,"NM",38,0)
LEXQID4^^0^B67283614
"BLD",8250,"KRN",9.8,"NM",39,0)
LEXQIDA^^0^B51204614
"BLD",8250,"KRN",9.8,"NM",40,0)
LEXQM^^0^B27832926
"BLD",8250,"KRN",9.8,"NM",41,0)
LEXSRC2^^0^B52534156
"BLD",8250,"KRN",9.8,"NM",42,0)
LEXTRAN^^0^B77492995
"BLD",8250,"KRN",9.8,"NM",43,0)
LEXTRAN1^^0^B109851516
"BLD",8250,"KRN",9.8,"NM",44,0)
LEXU^^0^B137452070
"BLD",8250,"KRN",9.8,"NM",45,0)
LEXU2^^0^B131844732
"BLD",8250,"KRN",9.8,"NM",46,0)
LEXXGI3^^0^B20329956
"BLD",8250,"KRN",9.8,"NM",47,0)
LEXPLIA^^1^
"BLD",8250,"KRN",9.8,"NM",48,0)
LEXPLEM^^1^
"BLD",8250,"KRN",9.8,"NM",49,0)
LEXRXD4^^0^B78250103
"BLD",8250,"KRN",9.8,"NM",50,0)
LEXAR6^^0^B38407694
"BLD",8250,"KRN",9.8,"NM",51,0)
LEXILG^^1^
"BLD",8250,"KRN",9.8,"NM",52,0)
LEXILGD^^1^
"BLD",8250,"KRN",9.8,"NM",53,0)
LEXILGO^^1^
"BLD",8250,"KRN",9.8,"NM",54,0)
LEXILGP^^1^
"BLD",8250,"KRN",9.8,"NM",55,0)
LEXILGU^^1^
"BLD",8250,"KRN",9.8,"NM",56,0)
LEXILGX^^1^
"BLD",8250,"KRN",9.8,"NM",57,0)
LEXLGM^^1^
"BLD",8250,"KRN",9.8,"NM",58,0)
LEXLGM2^^1^
"BLD",8250,"KRN",9.8,"NM",59,0)
LEXLGM3^^1^
"BLD",8250,"KRN",9.8,"NM",60,0)
LEXPL^^1^
"BLD",8250,"KRN",9.8,"NM",61,0)
LEXPLUP^^1^
"BLD",8250,"KRN",9.8,"NM",62,0)
LEX2080A^^0^B57341845
"BLD",8250,"KRN",9.8,"NM",63,0)
LEXU3^^0^B65261771
"BLD",8250,"KRN",9.8,"NM",64,0)
LEXQCM^^0^B69421811
"BLD",8250,"KRN",9.8,"NM",65,0)
LEXQCM2^^0^B59164466
"BLD",8250,"KRN",9.8,"NM",66,0)
LEXQCP^^0^B79602950
"BLD",8250,"KRN",9.8,"NM",67,0)
LEXQCP2^^0^B57182153
"BLD",8250,"KRN",9.8,"NM",68,0)
LEXA^^0^B53072237
"BLD",8250,"KRN",9.8,"NM",69,0)
LEXDCC^^0^B5534473
"BLD",8250,"KRN",9.8,"NM",70,0)
LEXDCX^^0^B4881405
"BLD",8250,"KRN",9.8,"NM",71,0)
LEXDD1^^0^B25092584
"BLD",8250,"KRN",9.8,"NM",72,0)
LEXDD2^^0^B3584925
"BLD",8250,"KRN",9.8,"NM",73,0)
LEXDD4^^0^B13932965
"BLD",8250,"KRN",9.8,"NM",74,0)
LEXDDS^^0^B2531478
"BLD",8250,"KRN",9.8,"NM",75,0)
LEXDDSP^^0^B15948891
"BLD",8250,"KRN",9.8,"NM",76,0)
LEXDFL^^0^B5442174
"BLD",8250,"KRN",9.8,"NM",77,0)
LEXDM2^^0^B14152696
"BLD",8250,"KRN",9.8,"NM",78,0)
LEXDMGT^^0^B14879684
"BLD",8250,"KRN",9.8,"NM",79,0)
LEXDVO^^0^B4750248
"BLD",8250,"KRN",9.8,"NM",80,0)
LEXSET5^^0^B25961242
"BLD",8250,"KRN",9.8,"NM",81,0)
LEXXST^^1^
"BLD",8250,"KRN",9.8,"NM",82,0)
LEXXST2^^1^
"BLD",8250,"KRN",9.8,"NM",83,0)
LEXXST3^^1^
"BLD",8250,"KRN",9.8,"NM",84,0)
LEXXST4^^1^
"BLD",8250,"KRN",9.8,"NM",85,0)
LEXAR4^^0^B10464362
"BLD",8250,"KRN",9.8,"NM",86,0)
LEXAR^^0^B18722296
"BLD",8250,"KRN",9.8,"NM",87,0)
LEXASO^^0^B18758787
"BLD",8250,"KRN",9.8,"NM",88,0)
LEXASC^^0^B7966749
"BLD",8250,"KRN",9.8,"NM",89,0)
LEXAB^^0^B10463880
"BLD",8250,"KRN",9.8,"NM",90,0)
LEXDFN2^^0^B11535780
"BLD",8250,"KRN",9.8,"NM",92,0)
LEXXMM^^0^B37694855
"BLD",8250,"KRN",9.8,"NM",93,0)
LEXXM^^0^B70674913
"BLD",8250,"KRN",9.8,"NM",94,0)
LEXXM1^^0^B23924703
"BLD",8250,"KRN",9.8,"NM",95,0)
LEXXM2^^0^B28282174
"BLD",8250,"KRN",9.8,"NM",96,0)
LEXXM3^^0^B82567477
"BLD",8250,"KRN",9.8,"NM",97,0)
LEXXM4^^0^B52053731
"BLD",8250,"KRN",9.8,"NM",98,0)
LEXXM5^^0^B16058487
"BLD",8250,"KRN",9.8,"NM",99,0)
LEXXM6^^0^B53334113
"BLD",8250,"KRN",9.8,"NM",100,0)
LEX10CS2^^0^B50802408
"BLD",8250,"KRN",9.8,"NM",101,0)
LEXAL^^0^B72078379
"BLD",8250,"KRN",9.8,"NM",102,0)
LEX10DBC^^0^B9636063
"BLD",8250,"KRN",9.8,"NM",103,0)
LEX10DBT^^0^B9014801
"BLD",8250,"KRN",9.8,"NM",104,0)
LEX10DBR^^0^B8889238
"BLD",8250,"KRN",9.8,"NM",105,0)
LEX10DU^^0^B116539995
"BLD",8250,"KRN",9.8,"NM",106,0)
LEX10DL^^0^B57481356
"BLD",8250,"KRN",9.8,"NM",107,0)
LEX10DLS^^0^B50742305
"BLD",8250,"KRN",9.8,"NM",108,0)
LEX10PL^^0^B120447479
"BLD",8250,"KRN",9.8,"NM",109,0)
LEX10PLS^^0^B85504731
"BLD",8250,"KRN",9.8,"NM",110,0)
LEX10PLA^^0^B39916196
"BLD",8250,"KRN",9.8,"NM",111,0)
LEX10TAX^^0^B83701759
"BLD",8250,"KRN",9.8,"NM",112,0)
LEXDMGS^^0^B7121139
"BLD",8250,"KRN",9.8,"NM",113,0)
LEXU4^^0^B63972250
"BLD",8250,"KRN",9.8,"NM",114,0)
LEXDM4^^0^B31719160
"BLD",8250,"KRN",9.8,"NM",115,0)
LEXDMGU^^0^B17558143
"BLD",8250,"KRN",9.8,"NM",116,0)
LEXDMGV^^0^B10768836
"BLD",8250,"KRN",9.8,"NM",117,0)
LEXDSV^^0^B6361439
"BLD",8250,"KRN",9.8,"NM",118,0)
LEXA1^^0^B69671285
"BLD",8250,"KRN",9.8,"NM",119,0)
LEXIENV^^1^
"BLD",8250,"KRN",9.8,"NM",120,0)
LEXDFSE^^0^B12795665
"BLD",8250,"KRN",9.8,"NM",121,0)
LEXDCCC^^0^B8993729
"BLD",8250,"KRN",9.8,"NM",122,0)
LEXDCCS^^0^B13152111
"BLD",8250,"KRN",9.8,"NM",123,0)
LEXDCXS^^0^B21843767
"BLD",8250,"KRN",9.8,"NM",124,0)
LEXDD3^^0^B1122704
"BLD",8250,"KRN",9.8,"NM",125,0)
LEXDDSD^^0^B9566423
"BLD",8250,"KRN",9.8,"NM",126,0)
LEXDDSS^^0^B3222865
"BLD",8250,"KRN",9.8,"NM",127,0)
LEXDDT1^^0^B5978859
"BLD",8250,"KRN",9.8,"NM",128,0)
LEXDDT2^^0^B4823705
"BLD",8250,"KRN",9.8,"NM",129,0)
LEXDDTC^^0^B1795542
"BLD",8250,"KRN",9.8,"NM",130,0)
LEXDDTD^^0^B2129676
"BLD",8250,"KRN",9.8,"NM",131,0)
LEXDDTF^^0^B14904532
"BLD",8250,"KRN",9.8,"NM",132,0)
LEXDDTV^^0^B3758286
"BLD",8250,"KRN",9.8,"NM",133,0)
LEXDFLC^^0^B911217
"BLD",8250,"KRN",9.8,"NM",134,0)
LEXDFLS^^0^B15732119
"BLD",8250,"KRN",9.8,"NM",135,0)
LEXDFLT^^0^B2257084
"BLD",8250,"KRN",9.8,"NM",136,0)
LEXDFN^^0^B17432462
"BLD",8250,"KRN",9.8,"NM",137,0)
LEXDFSI^^0^B9975036
"BLD",8250,"KRN",9.8,"NM",138,0)
LEXDFSO^^0^B7103084
"BLD",8250,"KRN",9.8,"NM",139,0)
LEXDFST^^0^B6779396
"BLD",8250,"KRN",9.8,"NM",140,0)
LEXDM3^^0^B3366699
"BLD",8250,"KRN",9.8,"NM",141,0)
LEXDMG^^0^B10875914
"BLD",8250,"KRN",9.8,"NM",142,0)
LEXDVOS^^0^B14773585
"BLD",8250,"KRN",9.8,"NM",143,0)
LEXLK^^0^B4772038
"BLD",8250,"KRN",9.8,"NM",144,0)
LEXPRNT^^0^B16064767
"BLD",8250,"KRN",9.8,"NM",145,0)
LEXSET4^^0^B3440677
"BLD",8250,"KRN",9.8,"NM",146,0)
LEXXGI^^0^B55219661
"BLD",8250,"KRN",9.8,"NM",147,0)
LEXXGI2^^0^B66453808
"BLD",8250,"KRN",9.8,"NM",148,0)
LEXA2^^0^B597135
"BLD",8250,"KRN",9.8,"NM",149,0)
LEXA3^^0^B15059941
"BLD",8250,"KRN",9.8,"NM",150,0)
LEXA4^^0^B22480783
"BLD",8250,"KRN",9.8,"NM",151,0)
LEXABC2^^0^B25634318
"BLD",8250,"KRN",9.8,"NM",152,0)
LEXAFIL^^0^B201610
"BLD",8250,"KRN",9.8,"NM",153,0)
LEXAMD2^^0^B2872185
"BLD",8250,"KRN",9.8,"NM",154,0)
LEXAMD^^0^B28007514
"BLD",8250,"KRN",9.8,"NM",155,0)
LEXAM^^0^B18114833
"BLD",8250,"KRN",9.8,"NM",156,0)
LEXAR2^^0^B1200564
"BLD",8250,"KRN",9.8,"NM",157,0)
LEXAS^^0^B6614534
"BLD",8250,"KRN",9.8,"NM",158,0)
LEXAS2^^0^B11730023
"BLD",8250,"KRN",9.8,"NM",159,0)
LEXAS3^^0^B4196429
"BLD",8250,"KRN",9.8,"NM",160,0)
LEXAS4^^0^B8439698
"BLD",8250,"KRN",9.8,"NM",161,0)
LEXAS5^^0^B15308783
"BLD",8250,"KRN",9.8,"NM",162,0)
LEXAS6^^0^B6676230
"BLD",8250,"KRN",9.8,"NM",163,0)
LEXAS7^^0^B18643877
"BLD",8250,"KRN",9.8,"NM",164,0)
LEXAL2^^0^B14217830
"BLD",8250,"KRN",9.8,"NM",165,0)
LEXNDX6^^0^B13564352
"BLD",8250,"KRN",9.8,"NM",166,0)
LEXNDX4^^0^B25651972
"BLD",8250,"KRN",9.8,"NM",167,0)
LEXXGI4^^0^B168770794
"BLD",8250,"KRN",9.8,"NM",168,0)
LEXTOLKN^^1^
"BLD",8250,"KRN",9.8,"NM",169,0)
LEXRXXT3^^0^B2474933
"BLD",8250,"KRN",9.8,"NM",170,0)
LEX10CX^^0^B90915734
"BLD",8250,"KRN",9.8,"NM",171,0)
LEX10CX2^^0^B27454248
"BLD",8250,"KRN",9.8,"NM",172,0)
LEX10CX3^^0^B97828924
"BLD",8250,"KRN",9.8,"NM",173,0)
LEX10CX4^^0^B37820297
"BLD",8250,"KRN",9.8,"NM",174,0)
LEX10CX5^^0^B45896269
"BLD",8250,"KRN",9.8,"NM",175,0)
LEXAR7^^0^B18786524
"BLD",8250,"KRN",9.8,"NM",176,0)
LEXDFSS^^0^B19790328
"BLD",8250,"KRN",9.8,"NM",177,0)
LEXDM^^0^B15365543
"BLD",8250,"KRN",9.8,"NM",178,0)
LEXDMGO^^0^B6104772
"BLD",8250,"KRN",9.8,"NM",179,0)
LEXEDF1^^0^B16274240
"BLD",8250,"KRN",9.8,"NM",180,0)
LEXEDF2^^0^B23335121
"BLD",8250,"KRN",9.8,"NM",181,0)
LEXERF^^0^B6876897
"BLD",8250,"KRN",9.8,"NM",182,0)
LEXERI^^0^B28387082
"BLD",8250,"KRN",9.8,"NM",183,0)
LEXHLP^^0^B49116460
"BLD",8250,"KRN",9.8,"NM",184,0)
LEXLK2^^0^B35967054
"BLD",8250,"KRN",9.8,"NM",185,0)
LEXMTLU^^0^B4465457
"BLD",8250,"KRN",9.8,"NM",186,0)
LEXNDX1^^0^B15300301
"BLD",8250,"KRN",9.8,"NM",187,0)
LEXNDX2^^0^B24352657
"BLD",8250,"KRN",9.8,"NM",188,0)
LEXNDX3^^0^B10557269
"BLD",8250,"KRN",9.8,"NM",189,0)
LEXNDX5^^0^B7594232
"BLD",8250,"KRN",9.8,"NM",190,0)
LEXRX^^0^B29831306
"BLD",8250,"KRN",9.8,"NM",191,0)
LEXRXB^^0^B53080223
"BLD",8250,"KRN",9.8,"NM",192,0)
LEXRXC^^0^B105521717
"BLD",8250,"KRN",9.8,"NM",193,0)
LEXRXD^^0^B72709975
"BLD",8250,"KRN",9.8,"NM",194,0)
LEXRXE^^0^B60291807
"BLD",8250,"KRN",9.8,"NM",195,0)
LEXRXF^^0^B90798435
"BLD",8250,"KRN",9.8,"NM",196,0)
LEXRXG^^0^B76130411
"BLD",8250,"KRN",9.8,"NM",197,0)
LEXRXXS^^0^B125584554
"BLD",8250,"KRN",9.8,"NM",198,0)
LEXSC^^0^B3537512
"BLD",8250,"KRN",9.8,"NM",199,0)
LEXSC2^^0^B9055298
"BLD",8250,"KRN",9.8,"NM",200,0)
LEXSC3^^0^B10957166
"BLD",8250,"KRN",9.8,"NM",201,0)
LEXXFI^^0^B61706578
"BLD",8250,"KRN",9.8,"NM",202,0)
LEXXFI3^^0^B36033514
"BLD",8250,"KRN",9.8,"NM",203,0)
LEXXFI4^^0^B23615408
"BLD",8250,"KRN",9.8,"NM",204,0)
LEXXFI6^^0^B7378156
"BLD",8250,"KRN",9.8,"NM",205,0)
LEXXFI7^^0^B40222921
"BLD",8250,"KRN",9.8,"NM",206,0)
LEXXFI8^^0^B39455696
"BLD",8250,"KRN",9.8,"NM",207,0)
LEXXFQ^^0^B17747138
"BLD",8250,"KRN",9.8,"NM",208,0)
LEXXII^^0^B41394926
"BLD",8250,"KRN",9.8,"NM",209,0)
LEXXII2^^0^B32320657
"BLD",8250,"KRN",9.8,"NM",210,0)
LEX2080B^^0^B59256107
"BLD",8250,"KRN",9.8,"NM",211,0)
LEX2080C^^0^B58859352
"BLD",8250,"KRN",9.8,"NM",212,0)
LEXUH^^0^B105430964
"BLD",8250,"KRN",9.8,"NM",213,0)
LEXXGP1^^0^B211142742
"BLD",8250,"KRN",9.8,"NM",214,0)
LEXXGP2^^0^B136699834
"BLD",8250,"KRN",9.8,"NM",215,0)
LEXDFSB^^0^B3384984
"BLD",8250,"KRN",9.8,"NM",216,0)
LEXSET3^^0^B12976280
"BLD",8250,"KRN",9.8,"NM",217,0)
LEXSET2^^0^B18221774
"BLD",8250,"KRN",9.8,"NM",218,0)
LEXQCPA^^0^B9841880
"BLD",8250,"KRN",9.8,"NM",219,0)
LEXTOKN^^0^B54550782
"BLD",8250,"KRN",9.8,"NM",220,0)
LEXTOKN2^^0^B13220121
"BLD",8250,"KRN",9.8,"NM",221,0)
LEXRXXP^^0^B22155217
"BLD",8250,"KRN",9.8,"NM","B","LEX10CS",27)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CS2",100)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CX",170)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CX2",171)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CX3",172)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CX4",173)

"BLD",8250,"KRN",9.8,"NM","B","LEX10CX5",174)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DBC",102)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DBR",104)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DBT",103)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DL",106)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DLS",107)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DU",105)

"BLD",8250,"KRN",9.8,"NM","B","LEX10DX",28)

"BLD",8250,"KRN",9.8,"NM","B","LEX10PL",108)

"BLD",8250,"KRN",9.8,"NM","B","LEX10PLA",110)

"BLD",8250,"KRN",9.8,"NM","B","LEX10PLS",109)

"BLD",8250,"KRN",9.8,"NM","B","LEX10PR",29)

"BLD",8250,"KRN",9.8,"NM","B","LEX10TAX",111)

"BLD",8250,"KRN",9.8,"NM","B","LEX2080",10)

"BLD",8250,"KRN",9.8,"NM","B","LEX2080A",62)

"BLD",8250,"KRN",9.8,"NM","B","LEX2080B",210)

"BLD",8250,"KRN",9.8,"NM","B","LEX2080C",211)

"BLD",8250,"KRN",9.8,"NM","B","LEX2080P",11)

"BLD",8250,"KRN",9.8,"NM","B","LEXA",68)

"BLD",8250,"KRN",9.8,"NM","B","LEXA1",118)

"BLD",8250,"KRN",9.8,"NM","B","LEXA2",148)

"BLD",8250,"KRN",9.8,"NM","B","LEXA3",149)

"BLD",8250,"KRN",9.8,"NM","B","LEXA4",150)

"BLD",8250,"KRN",9.8,"NM","B","LEXAB",89)

"BLD",8250,"KRN",9.8,"NM","B","LEXABC",7)

"BLD",8250,"KRN",9.8,"NM","B","LEXABC2",151)

"BLD",8250,"KRN",9.8,"NM","B","LEXAFIL",152)

"BLD",8250,"KRN",9.8,"NM","B","LEXAL",101)

"BLD",8250,"KRN",9.8,"NM","B","LEXAL2",164)

"BLD",8250,"KRN",9.8,"NM","B","LEXALK",8)

"BLD",8250,"KRN",9.8,"NM","B","LEXAM",155)

"BLD",8250,"KRN",9.8,"NM","B","LEXAMD",154)

"BLD",8250,"KRN",9.8,"NM","B","LEXAMD2",153)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR",86)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR2",156)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR3",9)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR4",85)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR5",2)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR6",50)

"BLD",8250,"KRN",9.8,"NM","B","LEXAR7",175)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS",157)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS2",158)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS3",159)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS4",160)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS5",161)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS6",162)

"BLD",8250,"KRN",9.8,"NM","B","LEXAS7",163)

"BLD",8250,"KRN",9.8,"NM","B","LEXASC",88)

"BLD",8250,"KRN",9.8,"NM","B","LEXASO",87)

"BLD",8250,"KRN",9.8,"NM","B","LEXCODE",12)

"BLD",8250,"KRN",9.8,"NM","B","LEXDCC",69)

"BLD",8250,"KRN",9.8,"NM","B","LEXDCCC",121)

"BLD",8250,"KRN",9.8,"NM","B","LEXDCCS",122)

"BLD",8250,"KRN",9.8,"NM","B","LEXDCX",70)

"BLD",8250,"KRN",9.8,"NM","B","LEXDCXS",123)

"BLD",8250,"KRN",9.8,"NM","B","LEXDD1",71)

"BLD",8250,"KRN",9.8,"NM","B","LEXDD2",72)

"BLD",8250,"KRN",9.8,"NM","B","LEXDD3",124)

"BLD",8250,"KRN",9.8,"NM","B","LEXDD4",73)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDS",74)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDSD",125)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDSP",75)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDSS",126)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDT1",127)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDT2",128)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDTC",129)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDTD",130)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDTF",131)

"BLD",8250,"KRN",9.8,"NM","B","LEXDDTV",132)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFL",76)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFLC",133)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFLS",134)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFLT",135)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFN",136)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFN2",90)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFSB",215)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFSE",120)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFSI",137)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFSO",138)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFSS",176)

"BLD",8250,"KRN",9.8,"NM","B","LEXDFST",139)

"BLD",8250,"KRN",9.8,"NM","B","LEXDM",177)

"BLD",8250,"KRN",9.8,"NM","B","LEXDM2",77)

"BLD",8250,"KRN",9.8,"NM","B","LEXDM3",140)

"BLD",8250,"KRN",9.8,"NM","B","LEXDM4",114)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMG",141)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMGO",178)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMGS",112)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMGT",78)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMGU",115)

"BLD",8250,"KRN",9.8,"NM","B","LEXDMGV",116)

"BLD",8250,"KRN",9.8,"NM","B","LEXDSV",117)

"BLD",8250,"KRN",9.8,"NM","B","LEXDVO",79)

"BLD",8250,"KRN",9.8,"NM","B","LEXDVOS",142)

"BLD",8250,"KRN",9.8,"NM","B","LEXEDF1",179)

"BLD",8250,"KRN",9.8,"NM","B","LEXEDF2",180)

"BLD",8250,"KRN",9.8,"NM","B","LEXERF",181)

"BLD",8250,"KRN",9.8,"NM","B","LEXERI",182)

"BLD",8250,"KRN",9.8,"NM","B","LEXHLP",183)

"BLD",8250,"KRN",9.8,"NM","B","LEXHLP2",14)

"BLD",8250,"KRN",9.8,"NM","B","LEXIENV",119)

"BLD",8250,"KRN",9.8,"NM","B","LEXILG",51)

"BLD",8250,"KRN",9.8,"NM","B","LEXILGD",52)

"BLD",8250,"KRN",9.8,"NM","B","LEXILGO",53)

"BLD",8250,"KRN",9.8,"NM","B","LEXILGP",54)

"BLD",8250,"KRN",9.8,"NM","B","LEXILGU",55)

"BLD",8250,"KRN",9.8,"NM","B","LEXILGX",56)

"BLD",8250,"KRN",9.8,"NM","B","LEXLGM",57)

"BLD",8250,"KRN",9.8,"NM","B","LEXLGM2",58)

"BLD",8250,"KRN",9.8,"NM","B","LEXLGM3",59)

"BLD",8250,"KRN",9.8,"NM","B","LEXLK",143)

"BLD",8250,"KRN",9.8,"NM","B","LEXLK2",184)

"BLD",8250,"KRN",9.8,"NM","B","LEXMTLU",185)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX1",186)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX2",187)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX3",188)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX4",166)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX5",189)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX6",165)

"BLD",8250,"KRN",9.8,"NM","B","LEXNDX8",15)

"BLD",8250,"KRN",9.8,"NM","B","LEXPL",60)

"BLD",8250,"KRN",9.8,"NM","B","LEXPLEM",48)

"BLD",8250,"KRN",9.8,"NM","B","LEXPLIA",47)

"BLD",8250,"KRN",9.8,"NM","B","LEXPLUP",61)

"BLD",8250,"KRN",9.8,"NM","B","LEXPRNT",144)

"BLD",8250,"KRN",9.8,"NM","B","LEXQC",3)

"BLD",8250,"KRN",9.8,"NM","B","LEXQC2",4)

"BLD",8250,"KRN",9.8,"NM","B","LEXQC3",5)

"BLD",8250,"KRN",9.8,"NM","B","LEXQC4",6)

"BLD",8250,"KRN",9.8,"NM","B","LEXQCM",64)

"BLD",8250,"KRN",9.8,"NM","B","LEXQCM2",65)

"BLD",8250,"KRN",9.8,"NM","B","LEXQCP",66)

"BLD",8250,"KRN",9.8,"NM","B","LEXQCP2",67)

"BLD",8250,"KRN",9.8,"NM","B","LEXQCPA",218)

"BLD",8250,"KRN",9.8,"NM","B","LEXQH",20)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHL1",21)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHL2",22)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHL3",23)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHL4",24)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHL5",25)

"BLD",8250,"KRN",9.8,"NM","B","LEXQHLM",26)

"BLD",8250,"KRN",9.8,"NM","B","LEXQID",35)

"BLD",8250,"KRN",9.8,"NM","B","LEXQID2",36)

"BLD",8250,"KRN",9.8,"NM","B","LEXQID3",37)

"BLD",8250,"KRN",9.8,"NM","B","LEXQID4",38)

"BLD",8250,"KRN",9.8,"NM","B","LEXQIDA",39)

"BLD",8250,"KRN",9.8,"NM","B","LEXQIP",31)

"BLD",8250,"KRN",9.8,"NM","B","LEXQIP2",32)

"BLD",8250,"KRN",9.8,"NM","B","LEXQIP3",33)

"BLD",8250,"KRN",9.8,"NM","B","LEXQIPA",34)

"BLD",8250,"KRN",9.8,"NM","B","LEXQL",16)

"BLD",8250,"KRN",9.8,"NM","B","LEXQL2",17)

"BLD",8250,"KRN",9.8,"NM","B","LEXQL3",18)

"BLD",8250,"KRN",9.8,"NM","B","LEXQL4",19)

"BLD",8250,"KRN",9.8,"NM","B","LEXQM",40)

"BLD",8250,"KRN",9.8,"NM","B","LEXRX",190)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXB",191)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXC",192)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXD",193)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXD4",49)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXE",194)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXF",195)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXG",196)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXXP",221)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXXS",197)

"BLD",8250,"KRN",9.8,"NM","B","LEXRXXT3",169)

"BLD",8250,"KRN",9.8,"NM","B","LEXSC",198)

"BLD",8250,"KRN",9.8,"NM","B","LEXSC2",199)

"BLD",8250,"KRN",9.8,"NM","B","LEXSC3",200)

"BLD",8250,"KRN",9.8,"NM","B","LEXSET",30)

"BLD",8250,"KRN",9.8,"NM","B","LEXSET2",217)

"BLD",8250,"KRN",9.8,"NM","B","LEXSET3",216)

"BLD",8250,"KRN",9.8,"NM","B","LEXSET4",145)

"BLD",8250,"KRN",9.8,"NM","B","LEXSET5",80)

"BLD",8250,"KRN",9.8,"NM","B","LEXSRC2",41)

"BLD",8250,"KRN",9.8,"NM","B","LEXTOKN",219)

"BLD",8250,"KRN",9.8,"NM","B","LEXTOKN2",220)

"BLD",8250,"KRN",9.8,"NM","B","LEXTOLKN",168)

"BLD",8250,"KRN",9.8,"NM","B","LEXTRAN",42)

"BLD",8250,"KRN",9.8,"NM","B","LEXTRAN1",43)

"BLD",8250,"KRN",9.8,"NM","B","LEXU",44)

"BLD",8250,"KRN",9.8,"NM","B","LEXU2",45)

"BLD",8250,"KRN",9.8,"NM","B","LEXU3",63)

"BLD",8250,"KRN",9.8,"NM","B","LEXU4",113)

"BLD",8250,"KRN",9.8,"NM","B","LEXUH",212)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI",201)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI3",202)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI4",203)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI6",204)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI7",205)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFI8",206)

"BLD",8250,"KRN",9.8,"NM","B","LEXXFQ",207)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGI",146)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGI2",147)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGI3",46)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGI4",167)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGP1",213)

"BLD",8250,"KRN",9.8,"NM","B","LEXXGP2",214)

"BLD",8250,"KRN",9.8,"NM","B","LEXXII",208)

"BLD",8250,"KRN",9.8,"NM","B","LEXXII2",209)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM",93)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM1",94)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM2",95)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM3",96)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM4",97)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM5",98)

"BLD",8250,"KRN",9.8,"NM","B","LEXXM6",99)

"BLD",8250,"KRN",9.8,"NM","B","LEXXMM",92)

"BLD",8250,"KRN",9.8,"NM","B","LEXXST",81)

"BLD",8250,"KRN",9.8,"NM","B","LEXXST2",82)

"BLD",8250,"KRN",9.8,"NM","B","LEXXST3",83)

"BLD",8250,"KRN",9.8,"NM","B","LEXXST4",84)

"BLD",8250,"KRN",19,0)
19
"BLD",8250,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8250,"KRN",19,"NM",1,0)
LEX MGR EDIT LEXICON^^0
"BLD",8250,"KRN",19,"NM",2,0)
LEX MGR EDIT SEARCH THRESHOLD^^0
"BLD",8250,"KRN",19,"NM",3,0)
LEX MGR EDIT DEFN^^0
"BLD",8250,"KRN",19,"NM",4,0)
LEX MGR EDIT SHORTCUTS^^0
"BLD",8250,"KRN",19,"NM","B","LEX MGR EDIT DEFN",3)

"BLD",8250,"KRN",19,"NM","B","LEX MGR EDIT LEXICON",1)

"BLD",8250,"KRN",19,"NM","B","LEX MGR EDIT SEARCH THRESHOLD",2)

"BLD",8250,"KRN",19,"NM","B","LEX MGR EDIT SHORTCUTS",4)

"BLD",8250,"KRN",19.1,0)
19.1
"BLD",8250,"KRN",101,0)
101
"BLD",8250,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8250,"KRN",409.61,0)
409.61
"BLD",8250,"KRN",771,0)
771
"BLD",8250,"KRN",779.2,0)
779.2
"BLD",8250,"KRN",870,0)
870
"BLD",8250,"KRN",8989.51,0)
8989.51
"BLD",8250,"KRN",8989.52,0)
8989.52
"BLD",8250,"KRN",8994,0)
8994
"BLD",8250,"KRN","B",.4,.4)

"BLD",8250,"KRN","B",.401,.401)

"BLD",8250,"KRN","B",.402,.402)

"BLD",8250,"KRN","B",.403,.403)

"BLD",8250,"KRN","B",.5,.5)

"BLD",8250,"KRN","B",.84,.84)

"BLD",8250,"KRN","B",3.6,3.6)

"BLD",8250,"KRN","B",3.8,3.8)

"BLD",8250,"KRN","B",9.2,9.2)

"BLD",8250,"KRN","B",9.8,9.8)

"BLD",8250,"KRN","B",19,19)

"BLD",8250,"KRN","B",19.1,19.1)

"BLD",8250,"KRN","B",101,101)

"BLD",8250,"KRN","B",409.61,409.61)

"BLD",8250,"KRN","B",771,771)

"BLD",8250,"KRN","B",779.2,779.2)

"BLD",8250,"KRN","B",870,870)

"BLD",8250,"KRN","B",8989.51,8989.51)

"BLD",8250,"KRN","B",8989.52,8989.52)

"BLD",8250,"KRN","B",8994,8994)

"BLD",8250,"PRE")
LEX2080
"BLD",8250,"PRET")

"BLD",8250,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8250,"QUES",0)
^9.62^^
"BLD",8250,"REQB",0)
^9.611^22^16
"BLD",8250,"REQB",1,0)
LEX*2.0*25^2
"BLD",8250,"REQB",2,0)
LEX*2.0*30^2
"BLD",8250,"REQB",3,0)
LEX*2.0*62^2
"BLD",8250,"REQB",6,0)
LEX*2.0*81^2
"BLD",8250,"REQB",8,0)
ICD*18.0*62^2
"BLD",8250,"REQB",9,0)
ICD*18.0*69^2
"BLD",8250,"REQB",10,0)
GMPL*2.0*43^2
"BLD",8250,"REQB",11,0)
IBD*3.0*64^2
"BLD",8250,"REQB",13,0)
RA*5.0*112^2
"BLD",8250,"REQB",14,0)
TIU*1.0*267^2
"BLD",8250,"REQB",15,0)
PSO*7.0*404^2
"BLD",8250,"REQB",16,0)
ONC*2.11*56^2
"BLD",8250,"REQB",18,0)
DG*5.3*870^2
"BLD",8250,"REQB",20,0)
ACKQ*3.0*22^2
"BLD",8250,"REQB",21,0)
LR*5.2*429^2
"BLD",8250,"REQB",22,0)
LEX*2.0*94^2
"BLD",8250,"REQB","B","ACKQ*3.0*22",20)

"BLD",8250,"REQB","B","DG*5.3*870",18)

"BLD",8250,"REQB","B","GMPL*2.0*43",10)

"BLD",8250,"REQB","B","IBD*3.0*64",11)

"BLD",8250,"REQB","B","ICD*18.0*62",8)

"BLD",8250,"REQB","B","ICD*18.0*69",9)

"BLD",8250,"REQB","B","LEX*2.0*25",1)

"BLD",8250,"REQB","B","LEX*2.0*30",2)

"BLD",8250,"REQB","B","LEX*2.0*62",3)

"BLD",8250,"REQB","B","LEX*2.0*81",6)

"BLD",8250,"REQB","B","LEX*2.0*94",22)

"BLD",8250,"REQB","B","LR*5.2*429",21)

"BLD",8250,"REQB","B","ONC*2.11*56",16)

"BLD",8250,"REQB","B","PSO*7.0*404",15)

"BLD",8250,"REQB","B","RA*5.0*112",13)

"BLD",8250,"REQB","B","TIU*1.0*267",14)

"DATA",757.31,1,0)
ICD-9/ICD-10 Diagnosis (only)^C
"DATA",757.31,1,1)
ICD/10D
"DATA",757.31,1,2,0)
^757.313^3^3^3120201^^^^
"DATA",757.31,1,2,1,0)
Displays diagnostic classification codes from the
"DATA",757.31,1,2,2,0)
International Classification of Diseases/Diagnosis (both
"DATA",757.31,1,2,3,0)
ICD-9 and ICD-10)
"DATA",757.31,2,0)
ICD-9/ICD-10 Diag/Proc^C
"DATA",757.31,2,1)
ICD/ICP/10D/10P
"DATA",757.31,2,2,0)
^757.313^3^3^3120201^^^^
"DATA",757.31,2,2,1,0)
Displays diagnostic and procedural classification codes from
"DATA",757.31,2,2,2,0)
the International Classification of Diseases/Diagnosis (both
"DATA",757.31,2,2,3,0)
ICD-9 and ICD-10)
"DATA",757.31,3,0)
ICD-9, ICD-10 and CPT codes^C
"DATA",757.31,3,1)
ICD/ICP/10D/10P/CPT/CPC
"DATA",757.31,3,2,0)
^^5^5^3110413^^^^
"DATA",757.31,3,2,1,0)
Displays diagnostic and procedural classification codes from
"DATA",757.31,3,2,2,0)
the International Classification of Diseases/Diagnosis (both
"DATA",757.31,3,2,3,0)
ICD-9 AND ICD-10), and procedural codes from the Current 
"DATA",757.31,3,2,4,0)
Procedural Terminology (CPT) and the HCFA Common Procedures
"DATA",757.31,3,2,5,0)
Coding System (HCPCS).
"DATA",757.31,4,0)
ICD-9, ICD-10 , CPT and DSM^C
"DATA",757.31,4,1)
ICD/ICP/10D/10P/CPT/CPC/DS4
"DATA",757.31,4,2,0)
^^6^6^3110413^^^^
"DATA",757.31,4,2,1,0)
Displays diagnostic and procedural classification codes from
"DATA",757.31,4,2,2,0)
the International Classification of Diseases/Diagnosis (both
"DATA",757.31,4,2,3,0)
ICD-9 AND ICD-10), procedural codes from the Current Procedural
"DATA",757.31,4,2,4,0)
Terminology (CPT), HCFA Common Procedures Coding System (HCPCS)
"DATA",757.31,4,2,5,0)
and codes from the Diagnostic/Statistical Manual of Mental
"DATA",757.31,4,2,6,0)
Disorders (DSM)
"DATA",757.31,5,0)
Nursing Diagnosis^C
"DATA",757.31,5,1)
NAN/OMA
"DATA",757.31,5,2,0)
^^3^3^2980114^^^^
"DATA",757.31,5,2,1,0)
Displays diagnostic classification codes from the North 
"DATA",757.31,5,2,2,0)
American Nursing Diagnosis Association (NANDA) and the Omaha
"DATA",757.31,5,2,3,0)
Nursing Diagnostic System (OMA).
"DATA",757.31,6,0)
Nursing Diag/Interventions^C
"DATA",757.31,6,1)
NAN/OMA/NIC
"DATA",757.31,6,2,0)
^^4^4^2980114^^^^
"DATA",757.31,6,2,1,0)
Displays diagnostic and intervention classification codes
"DATA",757.31,6,2,2,0)
from the North American Nursing Diagnosis Association 
"DATA",757.31,6,2,3,0)
(NANDA), the Omaha Nursing Diagnostic System (OMA), and the
"DATA",757.31,6,2,4,0)
Nursing Intervention Classifications (NIC) system.
"DATA",757.31,7,0)
VA Commonly Used Systems^C
"DATA",757.31,7,1)
ICD/ICP/10D/10P/CPT/CPC/DS4/SNM/NAN/OMA/NIC/SCC/SCT
"DATA",757.31,7,2,0)
^^13^13^3110414^
"DATA",757.31,7,2,1,0)
Displays classification codes from the International 
"DATA",757.31,7,2,2,0)
Classification of Diseases/Diagnosis (ICD-9 and ICD-10),
"DATA",757.31,7,2,3,0)
the Current Procedural Terminology (CPT), HCFA Common 
"DATA",757.31,7,2,4,0)
Procedures Coding System (HCPCS), the Diagnostic and 
"DATA",757.31,7,2,5,0)
Statistical Manual of Mental Disorders (DSM), the North 
"DATA",757.31,7,2,6,0)
American Nursing Diagnosis Association (NANDA), the 
"DATA",757.31,7,2,7,0)
Omaha Nursing Diagnostic System (OMA), the Nursing 
"DATA",757.31,7,2,8,0)
Intervention Classifications (NIC), the Systematic 
"DATA",757.31,7,2,9,0)
Nomenclature of Medicine (SNOMED), and the Service 
"DATA",757.31,7,2,10,0)
Connected Codes (SCC) taken from the US Code of 
"DATA",757.31,7,2,11,0)
Federal Regulations Title 38 Chapter I (Pensions, 
"DATA",757.31,7,2,12,0)
Bonuses and Veteran's Relief) Part 4 (Schedule for 
"DATA",757.31,7,2,13,0)
Rating Disabilities).
"DATA",757.31,8,0)
All Classification Systems^C
"DATA",757.31,8,1)
ICP/ICD/10D/10P/CPT/CPC/DS3/DS4/SNM/SCC/NAN/NIC/ACR/AIR/COS/CSP/CST/DXP/MCM/UMD/OMA/UWA/SCT
"DATA",757.31,8,2,0)
^^13^13^2980114^^^^
"DATA",757.31,8,2,1,0)
Displays classification codes from the International 
"DATA",757.31,8,2,2,0)
Classification of Diseases/Diagnosis (ICD), Current 
"DATA",757.31,8,2,3,0)
Procedural Terminology (CPT), HCFA Common Procedures
"DATA",757.31,8,2,4,0)
Coding System (HCPCS), Diagnostic/Statistical Manual
"DATA",757.31,8,2,5,0)
of Mental Disorders (DSM), North American Nursing Diagnosis
"DATA",757.31,8,2,6,0)
Association (NANDA), Omaha Nursing Diagnostic System (OMA),
"DATA",757.31,8,2,7,0)
Nursing Intervention Classifications (NIC), Systematic 
"DATA",757.31,8,2,8,0)
Nomenclature of Medicine (SNOMED), American College of 
"DATA",757.31,8,2,9,0)
Radiology, Diagnosis (ACR), National Library of Medicine 
"DATA",757.31,8,2,10,0)
(AI/RHEUM), Computer Stored Ambulatory Records Term File
"DATA",757.31,8,2,11,0)
(COSTAR), National Library of Medicine Thesaurus (CRISP),
"DATA",757.31,8,2,12,0)
Coding Symbol Thesaurus/Adverse Reaction Terms (COSTART),
"DATA",757.31,8,2,13,0)
and Diagnostic Prompting System (DXPLAIN).
"DATA",757.31,9,0)
Mental Health (DSM-IV w/ICD-9)^C
"DATA",757.31,9,1)
DS4/ICD/10D
"DATA",757.31,9,2,0)
^^3^3^2960724^^^^
"DATA",757.31,9,2,1,0)
Displays diagnostic classification codes from the Diagnostic
"DATA",757.31,9,2,2,0)
and Statistical Manual of Mental Disorders (DSM) and the
"DATA",757.31,9,2,3,0)
International Classification of Diseases/Diagnosis (ICD),
"DATA",757.31,10,0)
ICD-10 Diagnosis (only)^C
"DATA",757.31,10,1)
10D
"DATA",757.31,10,2,0)
^^2^2^2950629^^^^
"DATA",757.31,10,2,1,0)
Displays diagnostic classification codes from the 
"DATA",757.31,10,2,2,0)
International Classification of Diseases/Diagnosis (ICD)
"DATA",757.31,11,0)
ICD-10 Diagnosis/Procedures^C
"DATA",757.31,11,1)
10D/10P
"DATA",757.31,11,2,0)
^757.313^2^2^3120201^^^^
"DATA",757.31,11,2,1,0)
Displays diagnostic and procedural classification codes from
"DATA",757.31,11,2,2,0)
the International Classification of Diseases/Diagnosis (ICD)
"DATA",757.31,12,0)
Diagnosis^C
"DATA",757.31,12,1)
ICD/10D/DS4/SCC/NAN/SCT
"DATA",757.31,12,2,0)
^^3^3^3110510^
"DATA",757.31,12,2,1,0)
This displays codes from the International Classification of Diseases, 
"DATA",757.31,12,2,2,0)
and Diagnosis (ICD) and from coding systems that have diagnostic terms
"DATA",757.31,12,2,3,0)
that can be mapped to ICD dianostic code.
"FIA",757.02)
CODES
"FIA",757.02,0)
^LEX(757.02,
"FIA",757.02,0,0)
757.02IP
"FIA",757.02,0,1)
y^y^f^^^^n
"FIA",757.02,0,10)

"FIA",757.02,0,11)

"FIA",757.02,0,"RLRO")

"FIA",757.02,0,"VR")
2.0^LEX
"FIA",757.02,757.02)
0
"FIA",757.02,757.28)
0
"FIA",757.03)
CODING SYSTEMS
"FIA",757.03,0)
^LEX(757.03,
"FIA",757.03,0,0)
757.03I
"FIA",757.03,0,1)
y^y^f^^^^n^^
"FIA",757.03,0,10)

"FIA",757.03,0,11)

"FIA",757.03,0,"RLRO")

"FIA",757.03,0,"VR")
2.0^LEX
"FIA",757.03,757.03)
0
"FIA",757.03,757.08)
0
"FIA",757.033)
CHARACTER POSITIONS
"FIA",757.033,0)
^LEX(757.033,
"FIA",757.033,0,0)
757.033
"FIA",757.033,0,1)
y^y^f^^^^n
"FIA",757.033,0,10)

"FIA",757.033,0,11)

"FIA",757.033,0,"RLRO")

"FIA",757.033,0,"VR")
2.0^LEX
"FIA",757.033,757.033)
0
"FIA",757.033,757.043)
0
"FIA",757.033,757.331)
0
"FIA",757.033,757.332)
0
"FIA",757.033,757.334)
0
"FIA",757.033,757.335)
0
"FIA",757.033,757.345)
0
"FIA",757.31)
DISPLAYS
"FIA",757.31,0)
^LEX(757.31,
"FIA",757.31,0,0)
757.31
"FIA",757.31,0,1)
y^y^f^^n^^y^o^n
"FIA",757.31,0,10)

"FIA",757.31,0,11)

"FIA",757.31,0,"RLRO")

"FIA",757.31,0,"VR")
2.0^LEX
"FIA",757.31,757.31)
0
"FIA",757.31,757.313)
0
"INIT")
POST^LEX2080P
"IX",757.033,757.033,"ACP",0)
757.033^ACP^Character/Position^MU^^F^IR^I^757.033^^^^^S
"IX",757.033,757.033,"ACP",.1,0)
^^7^7^3120323^
"IX",757.033,757.033,"ACP",.1,1,0)
^LEX(757.033,"ACP",SRC,CP,IEN) - Where SRC is 
"IX",757.033,757.033,"ACP",.1,2,0)
the coding system, CP is the leading character
"IX",757.033,757.033,"ACP",.1,3,0)
appended to the character position, and IEN is
"IX",757.033,757.033,"ACP",.1,4,0)
the Internal Entry Number where the character
"IX",757.033,757.033,"ACP",.1,5,0)
and character position is stored.  This 
"IX",757.033,757.033,"ACP",.1,6,0)
cross-reference supports data loading and 
"IX",757.033,757.033,"ACP",.1,7,0)
verification (file maintenance only).
"IX",757.033,757.033,"ACP",1)
S ^LEX(757.033,"ACP",X(1),X(2),DA)=""
"IX",757.033,757.033,"ACP",2)
K ^LEX(757.033,"ACP",X(1),X(2),DA)
"IX",757.033,757.033,"ACP",2.5)
K ^LEX(757.033,"ACP")
"IX",757.033,757.033,"ACP",11.1,0)
^.114IA^2^2
"IX",757.033,757.033,"ACP",11.1,1,0)
1^F^757.033^.04^^1^F
"IX",757.033,757.033,"ACP",11.1,1,1)

"IX",757.033,757.033,"ACP",11.1,1,1.5)

"IX",757.033,757.033,"ACP",11.1,1,3)

"IX",757.033,757.033,"ACP",11.1,2,0)
2^C^^^3^2
"IX",757.033,757.033,"ACP",11.1,2,1.5)
S X=$E($P($G(^LEX(757.033,DA,0)),U,2),1)_$L($P($G(^LEX(757.033,DA,0)),U,2))_" "
"IX",757.033,757.033,"AFRAG",0)
757.033^AFRAG^Fragment^MU^^F^IR^W^757.331^^^^^S
"IX",757.033,757.033,"AFRAG",.1,0)
^^8^8^3120328^
"IX",757.033,757.033,"AFRAG",.1,1,0)
^LEX(757.033,"AFRAG",SRC,FRAG,EFF,IEN) = Where 
"IX",757.033,757.033,"AFRAG",.1,2,0)
SRC is a pointer to the CODING SYSTEMS file
"IX",757.033,757.033,"AFRAG",.1,3,0)
#757.03 for the source of the fragment, FRAG is a
"IX",757.033,757.033,"AFRAG",.1,4,0)
code fragment, EFF is the active effective date 
"IX",757.033,757.033,"AFRAG",.1,5,0)
of the fragment, IEN is where the fragment is
"IX",757.033,757.033,"AFRAG",.1,6,0)
stored.  This cross-reference is only set when
"IX",757.033,757.033,"AFRAG",.1,7,0)
the status is active.  A reverse $ORDER will find
"IX",757.033,757.033,"AFRAG",.1,8,0)
the last active code fragment for a source.
"IX",757.033,757.033,"AFRAG",1)
S ^LEX(757.033,"AFRAG",X(1),X(2),X(3),DA(1),DA)=""
"IX",757.033,757.033,"AFRAG",1.4)
S X=$P(^LEX(757.033,DA(1),1,DA,0),"^",2)
"IX",757.033,757.033,"AFRAG",2)
K ^LEX(757.033,"AFRAG",X(1),X(2),X(3),DA(1),DA)
"IX",757.033,757.033,"AFRAG",2.5)
K ^LEX(757.033,"AFRAG")
"IX",757.033,757.033,"AFRAG",11.1,0)
^.114IA^3^3
"IX",757.033,757.033,"AFRAG",11.1,1,0)
1^C^^^5^1^F
"IX",757.033,757.033,"AFRAG",11.1,1,1.5)
S X=+($P(^LEX(757.033,DA(1),0),"^",4))
"IX",757.033,757.033,"AFRAG",11.1,2,0)
2^C^^^10^2
"IX",757.033,757.033,"AFRAG",11.1,2,1.5)
S X=($P(^LEX(757.033,DA(1),0),"^",2)_" ")
"IX",757.033,757.033,"AFRAG",11.1,3,0)
3^F^757.331^.01^10^3^F
"IX",757.033,757.033,"NAME",0)
757.033^NAME^NAME^R^^F^IR^W^757.332^^^^^LS
"IX",757.033,757.033,"NAME",.1,0)
^^6^6^3120328^
"IX",757.033,757.033,"NAME",.1,1,0)
^LEX(757.033,"NAME",NAME,IEN1,IEN2) - Where NAME
"IX",757.033,757.033,"NAME",.1,2,0)
is the 63-character uppercase Name or  Title of a
"IX",757.033,757.033,"NAME",.1,3,0)
character position, IEN1 is the file level internal
"IX",757.033,757.033,"NAME",.1,4,0)
entry number and IEN2 is the NAME/TITLE sub-file 
"IX",757.033,757.033,"NAME",.1,5,0)
internal entry number where the Name or Title is
"IX",757.033,757.033,"NAME",.1,6,0)
stored.
"IX",757.033,757.033,"NAME",1)
S ^LEX(757.033,"NAME",$E(X,1,63),DA(1),DA)=""
"IX",757.033,757.033,"NAME",2)
K ^LEX(757.033,"NAME",$E(X,1,63),DA(1),DA)
"IX",757.033,757.033,"NAME",2.5)
K ^LEX(757.033,"NAME")
"IX",757.033,757.033,"NAME",11.1,0)
^.114IA^1^1
"IX",757.033,757.033,"NAME",11.1,1,0)
1^F^757.332^.02^63^1^F
"IX",757.033,757.033,"NAME",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",757.033,757.043,"C",0)
757.043^C^Description^R^^F^IR^I^757.043^^^^^LS
"IX",757.033,757.043,"C",.1,0)
^^6^6^3120320^
"IX",757.033,757.043,"C",.1,1,0)
^LEX(757.033,IEN1,3,"C",DESC,IEN2) - Where IEN1
"IX",757.033,757.043,"C",.1,2,0)
is the file level internal entry number, DESC 
"IX",757.033,757.043,"C",.1,3,0)
is a 63 character, uppercase Description for the
"IX",757.033,757.043,"C",.1,4,0)
character position, and IEN2 is the DESCRIPTION
"IX",757.033,757.043,"C",.1,5,0)
sub-file internal entry number where the 
"IX",757.033,757.043,"C",.1,6,0)
Description is stored.
"IX",757.033,757.043,"C",1)
S ^LEX(757.033,DA(1),3,"C",$E(X,1,63),DA)=""
"IX",757.033,757.043,"C",2)
K ^LEX(757.033,DA(1),3,"C",$E(X,1,63),DA)
"IX",757.033,757.043,"C",2.5)
K ^LEX(757.033,DA(1),3,"C")
"IX",757.033,757.043,"C",11.1,0)
^.114IA^1^1
"IX",757.033,757.043,"C",11.1,1,0)
1^F^757.043^.02^63^1^F
"IX",757.033,757.043,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",757.033,757.043,"C",11.1,1,3)

"IX",757.033,757.332,"C",0)
757.332^C^Name or Title^R^^F^IR^I^757.332^^^^^LS
"IX",757.033,757.332,"C",.1,0)
^^6^6^3120320^
"IX",757.033,757.332,"C",.1,1,0)
^LEX(757.033,IEN1,2,"C",NAME,IEN2) - Where IEN1
"IX",757.033,757.332,"C",.1,2,0)
is the file level internal entry number, NAME 
"IX",757.033,757.332,"C",.1,3,0)
is a 63 character, uppercase Name or Title for 
"IX",757.033,757.332,"C",.1,4,0)
the character position, and IEN2 is the NAME/TITLE
"IX",757.033,757.332,"C",.1,5,0)
sub-file internal entry number where the Name or 
"IX",757.033,757.332,"C",.1,6,0)
Title is stored.
"IX",757.033,757.332,"C",1)
S ^LEX(757.033,DA(1),2,"C",$E(X,1,63),DA)=""
"IX",757.033,757.332,"C",2)
K ^LEX(757.033,DA(1),2,"C",$E(X,1,63),DA)
"IX",757.033,757.332,"C",2.5)
K ^LEX(757.033,DA(1),2,"C")
"IX",757.033,757.332,"C",11.1,0)
^.114IA^1^1
"IX",757.033,757.332,"C",11.1,1,0)
1^F^757.332^.02^63^1^F
"IX",757.033,757.332,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,63))
"IX",757.033,757.334,"C",0)
757.334^C^Explanation^R^^F^IR^I^757.334^^^^^LS
"IX",757.033,757.334,"C",.1,0)
^^6^6^3120323^
"IX",757.033,757.334,"C",.1,1,0)
^LEX(757.033,IEN1,4,"C",EXPL,IEN2) - Where IEN1
"IX",757.033,757.334,"C",.1,2,0)
is the file level internal entry number, EXPL
"IX",757.033,757.334,"C",.1,3,0)
is a 63 character, uppercase Explanation for the
"IX",757.033,757.334,"C",.1,4,0)
character position, and IEN2 is the EXPLANATION
"IX",757.033,757.334,"C",.1,5,0)
sub-file internal entry number where the 
"IX",757.033,757.334,"C",.1,6,0)
Explanation is stored.
"IX",757.033,757.334,"C",1)
S ^LEX(757.033,DA(1),4,"C",$E(X,1,63),DA)=""
"IX",757.033,757.334,"C",2)
K ^LEX(757.033,DA(1),4,"C",$E(X,1,63),DA)
"IX",757.033,757.334,"C",2.5)
K ^LEX(757.033,DA(1),4,"C")
"IX",757.033,757.334,"C",11.1,0)
^.114IA^1^1
"IX",757.033,757.334,"C",11.1,1,0)
1^F^757.334^.02^63^1^F
"IX",757.033,757.334,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",757.033,757.345,"B",0)
757.345^B^Synonyms^R^^F^IR^I^757.345^^^^^LS
"IX",757.033,757.345,"B",.1,0)
^^7^7^3120328^
"IX",757.033,757.345,"B",.1,1,0)
^LEX(757.033,IEN1,5,IEN2,1,"B",INC,IEN3) - Where
"IX",757.033,757.345,"B",.1,2,0)
IEN1 is the file level internal entry number, IEN2
"IX",757.033,757.345,"B",.1,3,0)
is the INCLUDES sub-file internal entry number, 
"IX",757.033,757.345,"B",.1,4,0)
INC is a 63 character, uppercase synonym to include
"IX",757.033,757.345,"B",.1,5,0)
with the character position, and IEN3 is the 
"IX",757.033,757.345,"B",.1,6,0)
internal entry number of the INCLUDE sub-file 
"IX",757.033,757.345,"B",.1,7,0)
where the included synonym is stored.
"IX",757.033,757.345,"B",1)
S ^LEX(757.033,DA(2),5,DA(1),1,"B",$E(X,1,63),DA)=""
"IX",757.033,757.345,"B",2)
K ^LEX(757.033,DA(2),5,DA(1),1,"B",$E(X,1,63),DA)
"IX",757.033,757.345,"B",2.5)
K ^LEX(757.033,DA(2),5,DA(1),1,"B")
"IX",757.033,757.345,"B",11.1,0)
^.114IA^1^1
"IX",757.033,757.345,"B",11.1,1,0)
1^F^757.345^.01^63^1^F
"IX",757.033,757.345,"B",11.1,1,2)
S X=$$UP^XLFSTR(X)
"KRN",19,2914575,-1)
0^3
"KRN",19,2914575,0)
LEX MGR EDIT DEFN^Edit Term Definition^^R^^^^^^^^LEXICON UTILITY^^
"KRN",19,2914575,1,0)
^^2^2^2950705^^^^
"KRN",19,2914575,1,1,0)
This option lets managers edit the definition of an expression.  This
"KRN",19,2914575,1,2,0)
definition is accessable during searches using the Lexicon help routine.
"KRN",19,2914575,20)

"KRN",19,2914575,25)
LEXEDF1
"KRN",19,2914575,"U")
EDIT TERM DEFINITION
"KRN",19,2914581,-1)
0^1
"KRN",19,2914581,0)
LEX MGR EDIT LEXICON^Edit Lexicon^^M^^^^^^^^LEXICON UTILITY
"KRN",19,2914581,1,0)
^19.06^2^2^3120313^^^^
"KRN",19,2914581,1,1,0)
Very few fields in the Lexicon may be edited.  This menu option contains 
"KRN",19,2914581,1,2,0)
sub-options which allows managers to edit those [few] fields.
"KRN",19,2914581,10,0)
^19.01IP^3^3
"KRN",19,2914581,10,1,0)
2920954^1^1
"KRN",19,2914581,10,1,"^")
LEX MGR EDIT SEARCH THRESHOLD
"KRN",19,2914581,10,2,0)
2914575^2^2
"KRN",19,2914581,10,2,"^")
LEX MGR EDIT DEFN
"KRN",19,2914581,10,3,0)
2916553^3^3
"KRN",19,2914581,10,3,"^")
LEX MGR EDIT SHORTCUTS
"KRN",19,2914581,99)
63286,55097
"KRN",19,2914581,"U")
EDIT LEXICON
"KRN",19,2916553,-1)
0^4
"KRN",19,2916553,0)
LEX MGR EDIT SHORTCUTS^Edit Shortcuts by Context^^R^^^^^^^^LEXICON UTILITY
"KRN",19,2916553,1,0)
^19.06^1^1^3120307^^^
"KRN",19,2916553,1,1,0)
This option lets managers add or delete shortcuts (by context).
"KRN",19,2916553,25)
LEXSC
"KRN",19,2916553,"U")
EDIT SHORTCUTS BY CONTEXT
"KRN",19,2920954,-1)
0^2
"KRN",19,2920954,0)
LEX MGR EDIT SEARCH THRESHOLD^Edit Search Threshold for a Coding System^^R^^^^^^^^
"KRN",19,2920954,1,0)
^^4^4^3120307^
"KRN",19,2920954,1,1,0)
This allows a manager to edit the search threshold for
"KRN",19,2920954,1,2,0)
a coding system.  That is the default number of record
"KRN",19,2920954,1,3,0)
to examine before prompting the user to continue or 
"KRN",19,2920954,1,4,0)
refine the search.
"KRN",19,2920954,25)
EN^LEXDMGS
"KRN",19,2920954,"U")
EDIT SEARCH THRESHOLD FOR A CO
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",574,-1)
1^1
"PKG",574,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.
"PKG",574,20,0)
^9.402P^^
"PKG",574,22,0)
^9.49I^1^1
"PKG",574,22,1,0)
2.0^2960915^2970127^1
"PKG",574,22,1,"PAH",1,0)
80^3140421^520665225
"PKG",574,22,1,"PAH",1,1,0)
^^3^3^3140421
"PKG",574,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements
"PKG",574,22,1,"PAH",1,1,2,0)
included in this patch.  Please see patch ICD*18.0*57 for install
"PKG",574,22,1,"PAH",1,1,3,0)
instructions for this patch.
"PRE")
LEX2080
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
218
"RTN","LEX10CS")
0^27^B72383021
"RTN","LEX10CS",1,0)
LEX10CS ;ISL/KER - ICD-10 Code Set ;04/21/2014
"RTN","LEX10CS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CS",3,0)
 ;               
"RTN","LEX10CS",4,0)
 ; Global Variables
"RTN","LEX10CS",5,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10CS",6,0)
 ;    ^TMP("LEXDX")       SACC 2.3.2.5.1
"RTN","LEX10CS",7,0)
 ;               
"RTN","LEX10CS",8,0)
 ; External References
"RTN","LEX10CS",9,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEX10CS",10,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEX10CS",11,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEX10CS",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10CS",13,0)
 ;               
"RTN","LEX10CS",14,0)
ICDSRCH(X,LEXDATA,LEXD,LEXL,LEXF) ; ICD Diagnosis Search
"RTN","LEX10CS",15,0)
 ;
"RTN","LEX10CS",16,0)
 ; Input
"RTN","LEX10CS",17,0)
 ;
"RTN","LEX10CS",18,0)
 ;   X           Search Text (Required)
"RTN","LEX10CS",19,0)
 ;  .LEXDATA     Local Array (by Ref, Required)
"RTN","LEX10CS",20,0)
 ;   LEXD        Search Date (Optional,Default TODAY)
"RTN","LEX10CS",21,0)
 ;   LEXL        List Length (Optional, Default 30)
"RTN","LEX10CS",22,0)
 ;   LEXF        Filter (Optional, Default 10D)
"RTN","LEX10CS",23,0)
 ;
"RTN","LEX10CS",24,0)
 ;   LEXDATA()   Output Array of codes
"RTN","LEX10CS",25,0)
 ;
"RTN","LEX10CS",26,0)
 ;       LEXDATA(0)=# found ^ Pruning Indicator
"RTN","LEX10CS",27,0)
 ;       LEXDATA(1)=CODE ^ date
"RTN","LEX10CS",28,0)
 ;       LEXDATA(1,"IDL")=ICD-9/10 Description, Long
"RTN","LEX10CS",29,0)
 ;       LEXDATA(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","LEX10CS",30,0)
 ;       LEXDATA(1,"IDS")=ICD-9/10 Description, Short
"RTN","LEX10CS",31,0)
 ;       LEXDATA(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","LEX10CS",32,0)
 ;       LEXDATA(1,"LEX")=Lexicon Description
"RTN","LEX10CS",33,0)
 ;       LEXDATA(1,"LEX",1)=Expression IEN ^ date
"RTN","LEX10CS",34,0)
 ;       LEXDATA(1,"SYN",1)=Synonym #1
"RTN","LEX10CS",35,0)
 ;       LEXDATA(1,"SYN",m)=Synonym #m
"RTN","LEX10CS",36,0)
 ;       LEXDATA(n,0)=
"RTN","LEX10CS",37,0)
 ;
"RTN","LEX10CS",38,0)
 ;       Category or Subcategory
"RTN","LEX10CS",39,0)
 ;       LEXDATA(n,0)=Category Code
"RTN","LEX10CS",40,0)
 ;       LEXDATA(n,"CAT")=Category Name
"RTN","LEX10CS",41,0)
 ;       
"RTN","LEX10CS",42,0)
 ;   $$ICDSRCH
"RTN","LEX10CS",43,0)
 ;
"RTN","LEX10CS",44,0)
 ;     A variable defining success/error conditions
"RTN","LEX10CS",45,0)
 ;
"RTN","LEX10CS",46,0)
 ;        Positive number for success
"RTN","LEX10CS",47,0)
 ;
"RTN","LEX10CS",48,0)
 ;        Negative number for error or condition
"RTN","LEX10CS",49,0)
 ;
"RTN","LEX10CS",50,0)
 ;          "-1^No codes found"
"RTN","LEX10CS",51,0)
 ;          "-2^Too many items found, please refine search"
"RTN","LEX10CS",52,0)
 ;
"RTN","LEX10CS",53,0)
 K LEXDATA
"RTN","LEX10CS",54,0)
 N LEX,LEXX,LEXVDT,LEXCS,LEXFI,LEXFIL,LEXLEN,LEXTMP,LEXOK,LEXOUT,LEXTOT
"RTN","LEX10CS",55,0)
 N LEXPR,ICD10,LEXINC S LEXX=$$UP^XLFSTR($G(X))
"RTN","LEX10CS",56,0)
 Q:'$L(LEXX) "-1^No search string passed"
"RTN","LEX10CS",57,0)
 S ICD10=$$IMPDATE^LEXU("10D") I $L(LEXX)'>2 D  Q X
"RTN","LEX10CS",58,0)
 . S X="-1^Invalid search string passed, minimum of 3 characters"
"RTN","LEX10CS",59,0)
 S LEXVDT=$G(LEXD),LEXFIL=$G(LEXF) I LEXVDT'<ICD10 D  Q X
"RTN","LEX10CS",60,0)
 . S LEXCS=30,X=$$DIAGSRCH($G(LEXX),.LEXDATA,LEXVDT,$G(LEXL),$G(LEXF))
"RTN","LEX10CS",61,0)
 S LEXLEN=$G(LEXL) S:+LEXLEN'>0 LEXLEN=30
"RTN","LEX10CS",62,0)
 S:'$L(LEXFIL) LEXFIL="I $$SO^LEXU(Y,""ICD"",+($G(LEXVDT)))"
"RTN","LEX10CS",63,0)
 K LEXOUT S LEXCS=1 D I9T^LEX10DX(LEXX,.LEXOUT,LEXVDT,LEXLEN,LEXFIL)
"RTN","LEX10CS",64,0)
 S LEXTOT=$G(LEXOUT(0)),LEXPR=+($P($G(LEXTOT),"^",2)),LEXTOT=+LEXTOT
"RTN","LEX10CS",65,0)
 S LEXFI=80 D DXARY^LEX10DU K LEX,LEXOUT S:+LEXTOT'>0 LEXOUT="-1^No codes found"
"RTN","LEX10CS",66,0)
 I +LEXTOT>0&(LEXPR>0) D
"RTN","LEX10CS",67,0)
 . S LEXOUT="-2^Too many items found, please refine search"
"RTN","LEX10CS",68,0)
 S:+LEXTOT>0&(LEXPR'>0) LEXOUT=LEXTOT S X=LEXOUT
"RTN","LEX10CS",69,0)
 Q X
"RTN","LEX10CS",70,0)
 ;
"RTN","LEX10CS",71,0)
DIAGSRCH(X,LEXDATA,LEXD,LEXL,LEXF) ; ICD-10 Diagnosis Search
"RTN","LEX10CS",72,0)
 ;
"RTN","LEX10CS",73,0)
 ; Input
"RTN","LEX10CS",74,0)
 ;
"RTN","LEX10CS",75,0)
 ;   X           Search Text (Required)
"RTN","LEX10CS",76,0)
 ;  .LEXDATA     Local Array (by Ref, Required)
"RTN","LEX10CS",77,0)
 ;   LEXD        Search Date (Optional, Default TODAY)
"RTN","LEX10CS",78,0)
 ;   LEXL        List Length (Optional, Default 30)
"RTN","LEX10CS",79,0)
 ;   LEXF        Filter (Optional, Default 10D - must be executable M code)
"RTN","LEX10CS",80,0)
 ;
"RTN","LEX10CS",81,0)
 ; Output
"RTN","LEX10CS",82,0)
 ;
"RTN","LEX10CS",83,0)
 ;   LEXDATA()   Output Array of codes/categories found
"RTN","LEX10CS",84,0)
 ;
"RTN","LEX10CS",85,0)
 ;       LEXDATA(0)=# found ^ Pruning Indicator
"RTN","LEX10CS",86,0)
 ;       
"RTN","LEX10CS",87,0)
 ;       Code
"RTN","LEX10CS",88,0)
 ;       LEXDATA(1)=CODE ^ date
"RTN","LEX10CS",89,0)
 ;       LEXDATA(1,"IDL")=ICD-9/10 Description, Long
"RTN","LEX10CS",90,0)
 ;       LEXDATA(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","LEX10CS",91,0)
 ;       LEXDATA(1,"IDS")=ICD-9/10 Description, Short
"RTN","LEX10CS",92,0)
 ;       LEXDATA(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","LEX10CS",93,0)
 ;       LEXDATA(1,"LEX")=Lexicon Description
"RTN","LEX10CS",94,0)
 ;       LEXDATA(1,"LEX",1)=Expression IEN ^ date
"RTN","LEX10CS",95,0)
 ;       LEXDATA(1,"SYN",1)=Synonym #1
"RTN","LEX10CS",96,0)
 ;       LEXDATA(1,"SYN",m)=Synonym #m
"RTN","LEX10CS",97,0)
 ;       LEXDATA(1,"MENU")=Menu Text
"RTN","LEX10CS",98,0)
 ;       LEXDATA(1,"MSG")=Message (unversioned only)
"RTN","LEX10CS",99,0)
 ;       LEXDATA(n,0)=
"RTN","LEX10CS",100,0)
 ;
"RTN","LEX10CS",101,0)
 ;       Category or Subcategory
"RTN","LEX10CS",102,0)
 ;       LEXDATA(n,0)=Category Code
"RTN","LEX10CS",103,0)
 ;       LEXDATA(n,"CAT")=Category Name
"RTN","LEX10CS",104,0)
 ;
"RTN","LEX10CS",105,0)
 ;   $$DIAGSRCH  
"RTN","LEX10CS",106,0)
 ;
"RTN","LEX10CS",107,0)
 ;     A variable defining success/error conditions
"RTN","LEX10CS",108,0)
 ;
"RTN","LEX10CS",109,0)
 ;        Positive number for success
"RTN","LEX10CS",110,0)
 ;
"RTN","LEX10CS",111,0)
 ;        Negative number for error or condition
"RTN","LEX10CS",112,0)
 ;
"RTN","LEX10CS",113,0)
 ;          "-1^No codes found"
"RTN","LEX10CS",114,0)
 ;          "-2^Too many items found, please refine search"
"RTN","LEX10CS",115,0)
 ;          
"RTN","LEX10CS",116,0)
 K LEXDATA,^TMP("LEXDX",$J)
"RTN","LEX10CS",117,0)
 N LEX,LEXX,LEXVDT,LEXFI,LEXFIL,LEXLEN,LEXTMP,LEXOK,LEXOUT
"RTN","LEX10CS",118,0)
 N LEXTOT,LEXPR,LEXCS,LEXTLX,LEXIS,LEXINC
"RTN","LEX10CS",119,0)
 N ICDVDT,ICDSYS,ICDFMT
"RTN","LEX10CS",120,0)
 S X=$G(X) F  Q:$E(X,$L(X))'="+"  S X=$E(X,1,($L(X)-1))
"RTN","LEX10CS",121,0)
 S LEXX=$$UP^XLFSTR($G(X)),LEXVDT=$G(LEXD),LEXCS=30,LEXFIL=$G(LEXF)
"RTN","LEX10CS",122,0)
 Q:'$L(LEXX) "-1^No search string passed"
"RTN","LEX10CS",123,0)
 Q:$L(LEXX)'>1 "-1^Invalid search string passed"
"RTN","LEX10CS",124,0)
 I $L(LEXX)=2,LEXX?1A.1N D MAJ^LEX10DBR($$UP^XLFSTR(LEXX),.LEXOUT,LEXVDT) G OUT
"RTN","LEX10CS",125,0)
 S LEXLEN=$G(LEXL) S:+LEXLEN'>0 LEXLEN=30 S:+LEXLEN'>7 LEXLEN=8
"RTN","LEX10CS",126,0)
 S LEXIS=$$ISCAT^LEX10DU(LEXX)
"RTN","LEX10CS",127,0)
 ; Input is a category with no categories
"RTN","LEX10CS",128,0)
 ; and code exceeds max, expand the max
"RTN","LEX10CS",129,0)
 I +LEXIS>0,+($P(LEXIS,"^",2))'>0,+($P(LEXIS,"^",3))>LEXLEN S LEXLEN=99999
"RTN","LEX10CS",130,0)
 S:'$L(LEXFIL)&(LEXVDT?7N) LEXFIL="I $$SO^LEXU(Y,""10D"",+($G(LEXVDT)))"
"RTN","LEX10CS",131,0)
 S:'$L(LEXFIL)&(LEXVDT'?7N) LEXFIL="I $L($$D10^LEX10CS(+Y))"
"RTN","LEX10CS",132,0)
 S LEXTMP=LEXX S:$L(LEXTMP)=3&(LEXTMP'[".") LEXTMP=LEXTMP_"."
"RTN","LEX10CS",133,0)
 S LEXOK=0 I $L(LEXTMP)>3,$L(LEXTMP)'>8,LEXTMP["." D
"RTN","LEX10CS",134,0)
 . N LEXTK S:$D(^LEX(757.02,"ADX",(LEXTMP_" "))) LEXOK=1 Q:LEXOK
"RTN","LEX10CS",135,0)
 . S:$O(^LEX(757.02,"ADX",(LEXTMP_" ")))[LEXTMP LEXOK=1 Q:LEXOK
"RTN","LEX10CS",136,0)
 . S LEXTK=$$WDS(LEXTMP) S:$E(LEXTMP,1,4)'?1A2N1"."&(LEXTK'>0) LEXOK=-1
"RTN","LEX10CS",137,0)
 . S:$E(LEXTMP,1,4)?1A2N1"."&(LEXTK'>0) LEXOK=-1
"RTN","LEX10CS",138,0)
 K LEXOUT Q:LEXOK<0 "-1^Search string does not appear to be a code or text"
"RTN","LEX10CS",139,0)
 I LEXOK D I10C^LEX10DBC(LEXTMP,.LEXOUT,LEXVDT,LEXLEN,LEXFIL)
"RTN","LEX10CS",140,0)
 I 'LEXOK D I10T^LEX10DBT(LEXX,.LEXOUT,LEXVDT,LEXLEN,LEXFIL)
"RTN","LEX10CS",141,0)
OUT ; Out Array
"RTN","LEX10CS",142,0)
 K ^TMP("LEXDX",$J) I +($G(LEXOUT(0)))=-1 Q LEXOUT(0)
"RTN","LEX10CS",143,0)
 I +($G(LEXOUT(0)))=-2 Q -2_U_"final pruned list exceeds specified limit"
"RTN","LEX10CS",144,0)
 S LEXTOT=$G(LEXOUT(0)),LEXPR=+($P($G(LEXTOT),"^",2)),LEXTOT=+LEXTOT
"RTN","LEX10CS",145,0)
 S LEXTLX=$G(LEXOUT(0)) S LEXFI=80 D DXARY^LEX10DU
"RTN","LEX10CS",146,0)
 S LEXOUT=LEXTLX
"RTN","LEX10CS",147,0)
 S:+LEXTLX>0&(+LEXTLX=+($G(LEXDATA(0)))) LEXDATA(0)=LEXTLX
"RTN","LEX10CS",148,0)
 S:+LEXTOT'>0 LEXOUT="-1^No codes found"
"RTN","LEX10CS",149,0)
 S X=LEXOUT
"RTN","LEX10CS",150,0)
 Q X
"RTN","LEX10CS",151,0)
WDS(X) ; Words in String
"RTN","LEX10CS",152,0)
 S X=$G(X) Q:'$L(X) 0  K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEX10CS",153,0)
 N LEXI,LEXT,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CS",154,0)
 . S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEX10CS",155,0)
 . . S:$D(^LEX(757.01,"AWRD",LEXT)) LEXC=LEXC+1
"RTN","LEX10CS",156,0)
 S X=LEXC K ^TMP("LEXTKN",$J)
"RTN","LEX10CS",157,0)
 Q X
"RTN","LEX10CS",158,0)
 ;
"RTN","LEX10CS",159,0)
PCSDIG(X,LEXD) ; Return ICD-10 Codes Expanding On Input
"RTN","LEX10CS",160,0)
 ;
"RTN","LEX10CS",161,0)
 ; Input
"RTN","LEX10CS",162,0)
 ;
"RTN","LEX10CS",163,0)
 ;   X           Search code (partial, Required)
"RTN","LEX10CS",164,0)
 ;   LEXD        Search Date (Optional, Default TODAY)
"RTN","LEX10CS",165,0)
 ;
"RTN","LEX10CS",166,0)
 ; Output
"RTN","LEX10CS",167,0)
 ;
"RTN","LEX10CS",168,0)
 ;   LEXDATA()   Output Array containing the characters found
"RTN","LEX10CS",169,0)
 ;
"RTN","LEX10CS",170,0)
 ;       LEXDATA("NEXLEV",<next character>,"DESC")= Description
"RTN","LEX10CS",171,0)
 ;
"RTN","LEX10CS",172,0)
 ;       Output based on user input of "00P"
"RTN","LEX10CS",173,0)
 ;
"RTN","LEX10CS",174,0)
 ;          LEXPCDAT("NEXLEV",0,"DESC")="Brain"
"RTN","LEX10CS",175,0)
 ;          LEXPCDAT("NEXLEV",6,"DESC")="Cerebral Ventricle"
"RTN","LEX10CS",176,0)
 ;          LEXPCDAT("NEXLEV","E","DESC")="Cranial Nerve"
"RTN","LEX10CS",177,0)
 ;          LEXPCDAT("NEXLEV","U","DESC")="Spinal Canal"
"RTN","LEX10CS",178,0)
 ;          LEXPCDAT("NEXLEV","V",DESC)="Spinal Cord"
"RTN","LEX10CS",179,0)
 ;
"RTN","LEX10CS",180,0)
 ;       Output based on user input of "03120A1"
"RTN","LEX10CS",181,0)
 ;
"RTN","LEX10CS",182,0)
 ;          LEXPCDAT("PCSDESC")="BYPASS INNOMINATE ARTERY TO 
"RTN","LEX10CS",183,0)
 ;             LEFT UPPER ARM ARTERY ITH AUTOLOGOUS ARTERIAL 
"RTN","LEX10CS",184,0)
 ;             TISSUE, OPEN APPROACH"
"RTN","LEX10CS",185,0)
 ;          LEXPCDAT("STATUS")="1^Date"
"RTN","LEX10CS",186,0)
 ;
"RTN","LEX10CS",187,0)
 ;   $$PCSDIG  "1" - If input code fragment is valid or null
"RTN","LEX10CS",188,0)
 ;             "0" - If input code fragment is invalid
"RTN","LEX10CS",189,0)
 ;
"RTN","LEX10CS",190,0)
 K LEXPCDAT
"RTN","LEX10CS",191,0)
 N LEX,LEXI,LEXII,LEXCTL,LEXPCS,LEXEXIT,LEXLEN,LEXNXT,LEXCD,LELXI
"RTN","LEX10CS",192,0)
 S:$L($G(X)) X=$$UP^XLFSTR(X)
"RTN","LEX10CS",193,0)
 I $D(X),X'?."",('$D(^LEX(757.033,"B","10P"_X))) Q 0
"RTN","LEX10CS",194,0)
 S:'$D(X) LEXLEN=0,X=""
"RTN","LEX10CS",195,0)
 S:$D(X) LEXLEN=$L(X)
"RTN","LEX10CS",196,0)
 I LEXLEN>6 G PCSALL
"RTN","LEX10CS",197,0)
 S (LEXI,LEXEXIT)=0
"RTN","LEX10CS",198,0)
 F  S LEXI=$O(^LEX(757.033,"AFRAG",LEXI)) Q:'LEXI!LEXEXIT  D
"RTN","LEX10CS",199,0)
 . S:$D(^LEX(757.03,"ASAB","10P",LEXI)) LEXEXIT=1,LEXII=LEXI
"RTN","LEX10CS",200,0)
 S LEXCTL=X,LEXPCS=X_" ",LEXEXIT=0
"RTN","LEX10CS",201,0)
 F  S LEXPCS=$O(^LEX(757.033,"AFRAG",LEXII,LEXPCS)) Q:'$D(LEXPCS)!LEXEXIT  D
"RTN","LEX10CS",202,0)
 . I X'=$E(LEXPCS,1,LEXLEN)!(LEXPCS="") S LEXEXIT=1 Q
"RTN","LEX10CS",203,0)
 . N LEXOK S LEXOK=$$PCSOK(LEXPCS,$G(LEXD)) Q:LEXOK'>0
"RTN","LEX10CS",204,0)
 . S LEXNXT=$E(LEXPCS,LEXLEN+1)
"RTN","LEX10CS",205,0)
 . I '$D(LEXPCDAT("NEXLEV",LEXNXT,"DESC")) D
"RTN","LEX10CS",206,0)
 . . N LEXF,LEXFA
"RTN","LEX10CS",207,0)
 . . S LEXI="",LEXI=$O(^LEX(757.033,"B",("10P"_X_LEXNXT),LEXI))
"RTN","LEX10CS",208,0)
 . . S LEXF=$$FIN^LEX10PR(LEXI,$G(LEXD),.LEXFA)
"RTN","LEX10CS",209,0)
 . . S:$L($G(LEXFA(2))) LEXPCDAT("NEXLEV",LEXNXT,"DESC")=$G(LEXFA(2))
"RTN","LEX10CS",210,0)
 . . S:$L($G(LEXFA(3))) LEXPCDAT("NEXLEV",LEXNXT,"META","Definition")=$G(LEXFA(3))
"RTN","LEX10CS",211,0)
 . . S:$L($G(LEXFA(4))) LEXPCDAT("NEXLEV",LEXNXT,"META","Explanation")=$G(LEXFA(4))
"RTN","LEX10CS",212,0)
 . . S LEXF=0 F  S LEXF=$O(LEXFA(5,LEXF)) Q:+LEXF'>0  D
"RTN","LEX10CS",213,0)
 . . . S:$L($G(LEXFA(5,+LEXF))) LEXPCDAT("NEXLEV",LEXNXT,"META","Includes/Examples",LEXF)=$G(LEXFA(5,+LEXF))
"RTN","LEX10CS",214,0)
 . S LEXPCS=LEXCTL_LEXNXT_"~ "
"RTN","LEX10CS",215,0)
 S LEXPCDAT=1
"RTN","LEX10CS",216,0)
 Q 1
"RTN","LEX10CS",217,0)
PCSALL ; Return PCS data for full 7 digit code
"RTN","LEX10CS",218,0)
 N LEXLD,LEXA S LEXD=$G(LEXD) S:LEXD'?7N LEXD=$G(DT)
"RTN","LEX10CS",219,0)
 S:LEXD'?7N LEXD=$$DT^XLFDT S LEXD=$$DTBR^ICDEX(LEXD,0,31)
"RTN","LEX10CS",220,0)
 S LEXCD=$$ICDOP^ICDEX(X,LEXD,31,"E")
"RTN","LEX10CS",221,0)
 I $P(LEXCD,"^",1)="-1" Q 0
"RTN","LEX10CS",222,0)
 S:$P(LEXCD,"^",10)>0 LEXPCDAT("STATUS")=$P(LEXCD,"^",10)_"^"_$P(LEXCD,"^",13)
"RTN","LEX10CS",223,0)
 S:$P(LEXCD,"^",10)'>0 LEXPCDAT("STATUS")=$P(LEXCD,"^",10)_"^"_$P(LEXCD,"^",12)
"RTN","LEX10CS",224,0)
 S LEXLD=$$LD^ICDEX(80.1,+LEXCD,LEXD,.LEXA)
"RTN","LEX10CS",225,0)
 S LEXPCDAT("PCSDESC")=$G(LEXA(1))
"RTN","LEX10CS",226,0)
 Q 1
"RTN","LEX10CS",227,0)
PCSOK(X,LEXD) ; PCS data is OK
"RTN","LEX10CS",228,0)
 N LEXF,LEXO,LEXC,LEXN,LEXI,LEXS,LEXK S (LEXC,LEXF)=$TR($G(X)," ","") Q:'$L(LEXC) 0
"RTN","LEX10CS",229,0)
 S X=0,LEXD=$G(LEXD),LEXI=$$IMPDATE^LEXU(31) S:+LEXI>+LEXD LEXD=LEXI
"RTN","LEX10CS",230,0)
 S LEXO=$E(LEXF,1,($L(LEXF)-1))_$C($A($E(LEXF,$L(LEXF)))-1)_"~ "
"RTN","LEX10CS",231,0)
 F  S LEXO=$O(^LEX(757.02,"APR",LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXC))'=LEXC  D  Q:X>0
"RTN","LEX10CS",232,0)
 . N LEXEF S LEXEF=$O(^LEX(757.02,"APR",LEXO,(LEXD+.001)),-1)
"RTN","LEX10CS",233,0)
 . S:'$D(^LEX(757.02,"APR",LEXO,LEXEF,0)) X=1
"RTN","LEX10CS",234,0)
 Q X
"RTN","LEX10CS",235,0)
 ;
"RTN","LEX10CS",236,0)
CODELIST(X,LEXSPEC,LEXSUB,LEXD,LEXL,LEXF) ;
"RTN","LEX10CS",237,0)
 ; NOTE:  Routine split due to SACC Limits on size, see LEX10CS2
"RTN","LEX10CS",238,0)
 Q $$CODELIST^LEX10CS2($G(X),$G(LEXSPEC),$G(LEXSUB),$G(LEXD),$G(LEXL),$G(LEXF))
"RTN","LEX10CS",239,0)
TAX(X,LEXSRC,LEXDT,LEXSUB,LEXVER) ; Taxonomies
"RTN","LEX10CS",240,0)
 Q $$TAX^LEX10TAX($G(X),$G(LEXSRC),$G(LEXDT),$G(LEXSUB),$G(LEXVER))
"RTN","LEX10CS",241,0)
D10(LEX) ; Get One Code (unversioned)
"RTN","LEX10CS",242,0)
 N LEXA,LEXCD,LEXEF,LEXIEN,LEXSAB,LEXSIEN,LEXVDT
"RTN","LEX10CS",243,0)
 S LEXVDT="",LEXSAB="10D",LEXIEN=$G(LEX) Q:+($G(LEXIEN))'>0 ""
"RTN","LEX10CS",244,0)
 Q:$P($G(^LEX(757.01,LEXIEN,1)),"^",5)>0 ""
"RTN","LEX10CS",245,0)
 S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"B",LEXIEN,LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEX10CS",246,0)
 . N LEXEF,LEXCD Q:'$D(^LEX(757.02,"ASRC",LEXSAB,LEXSIEN))
"RTN","LEX10CS",247,0)
 . Q:$P($G(^LEX(757.02,LEXSIEN,0)),"^",7)'>0
"RTN","LEX10CS",248,0)
 . S LEXCD=$P($G(^LEX(757.02,+LEXSIEN,0)),"^",2) Q:'$L(LEXCD)
"RTN","LEX10CS",249,0)
 . S LEXEF=$O(^LEX(757.02,LEXSIEN,4,"B",(9999999+.001)),-1) Q:'$L(LEXEF)
"RTN","LEX10CS",250,0)
 . S LEXA(LEXEF,LEXCD)=""
"RTN","LEX10CS",251,0)
 S LEXEF=$O(LEXA((9999999+.001)),-1) Q:'$L(LEXEF) ""
"RTN","LEX10CS",252,0)
 S LEX=$O(LEXA(LEXEF,""),-1) Q:'$L(LEX) ""
"RTN","LEX10CS",253,0)
 Q LEX
"RTN","LEX10CS2")
0^100^B50802408
"RTN","LEX10CS2",1,0)
LEX10CS2 ;ISL/KER - ICD-10 Code Set (cont) ;04/21/2014
"RTN","LEX10CS2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CS2",3,0)
 ;               
"RTN","LEX10CS2",4,0)
 ; Global Variables
"RTN","LEX10CS2",5,0)
 ;    ^TMP(LEXSUB,$J,     SACC 2.3.2.5.1
"RTN","LEX10CS2",6,0)
 ;    ^YSD(627.7,         ICR   1612
"RTN","LEX10CS2",7,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEX10CS2",8,0)
 ;               
"RTN","LEX10CS2",9,0)
 ; External References
"RTN","LEX10CS2",10,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEX10CS2",11,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEX10CS2",12,0)
 ;    $$CODEN^ICPTCOD     ICR   1995
"RTN","LEX10CS2",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10CS2",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10CS2",15,0)
 ;               
"RTN","LEX10CS2",16,0)
CODELIST(X,LEXSPEC,LEXSUB,LEXD,LEXL,LEXF) ; Wild Card Search for Codes
"RTN","LEX10CS2",17,0)
 ;
"RTN","LEX10CS2",18,0)
 ; Input
"RTN","LEX10CS2",19,0)
 ;
"RTN","LEX10CS2",20,0)
 ;   X           Coding System (Required)
"RTN","LEX10CS2",21,0)
 ;   LEXSPEC     Search Specification (Required)
"RTN","LEX10CS2",22,0)
 ;                 First 2 characters alpha-numeric
"RTN","LEX10CS2",23,0)
 ;                 May contain a "?" wildcard in any position
"RTN","LEX10CS2",24,0)
 ;                 May contain a "*" wildcard in last position
"RTN","LEX10CS2",25,0)
 ;                 
"RTN","LEX10CS2",26,0)
 ;   LEXSUB      Global Subscript in the calling applications
"RTN","LEX10CS2",27,0)
 ;               namespace to be used in the output ^TMP
"RTN","LEX10CS2",28,0)
 ;               global array (Optional, default "CODELIST")
"RTN","LEX10CS2",29,0)
 ;               
"RTN","LEX10CS2",30,0)
 ;                 ^TMP(LEXSUB,$J, ...
"RTN","LEX10CS2",31,0)
 ;                 
"RTN","LEX10CS2",32,0)
 ;   LEXD        Search Date (Optional)
"RTN","LEX10CS2",33,0)
 ;   LEXL        List Length (Optional, Default 30)
"RTN","LEX10CS2",34,0)
 ;   LEXF        Output Flag (Optional)
"RTN","LEX10CS2",35,0)
 ;                 0 or Null brief output
"RTN","LEX10CS2",36,0)
 ;                 1 detailed output
"RTN","LEX10CS2",37,0)
 ;
"RTN","LEX10CS2",38,0)
 ; Output
"RTN","LEX10CS2",39,0)
 ;
"RTN","LEX10CS2",40,0)
 ;   ^TMP(LEXSUB,$J)   Output Array containing the codes found
"RTN","LEX10CS2",41,0)
 ;
"RTN","LEX10CS2",42,0)
 ;       LEXF = 0 or not passed
"RTN","LEX10CS2",43,0)
 ;
"RTN","LEX10CS2",44,0)
 ;       ^TMP(LEXSUB,$J,0)=Total n
"RTN","LEX10CS2",45,0)
 ;       ^TMP(LEXSUB,$J,1)=Code 1
"RTN","LEX10CS2",46,0)
 ;       ^TMP(LEXSUB,$J,2)=Code 2
"RTN","LEX10CS2",47,0)
 ;       ^TMP(LEXSUB,$J,n)=Code n
"RTN","LEX10CS2",48,0)
 ;
"RTN","LEX10CS2",49,0)
 ;       LEXF > 0
"RTN","LEX10CS2",50,0)
 ;
"RTN","LEX10CS2",51,0)
 ;       ^TMP(LEXSUB,$J,0)=Total n
"RTN","LEX10CS2",52,0)
 ;       ^TMP(LEXSUB,$J,1)=Code 1
"RTN","LEX10CS2",53,0)
 ;       ^TMP(LEXSUB,$J,1,1)=Code 1 ^ date
"RTN","LEX10CS2",54,0)
 ;       ^TMP(LEXSUB,$J,1,2)=Expression 1 IEN ^ Expression 1
"RTN","LEX10CS2",55,0)
 ;       ^TMP(LEXSUB,$J,1,"MSG")=Message (unversioned only)
"RTN","LEX10CS2",56,0)
 ;       ^TMP(LEXSUB,$J,2)=Code 1
"RTN","LEX10CS2",57,0)
 ;       ^TMP(LEXSUB,$J,2,1)=Code 2 ^ date
"RTN","LEX10CS2",58,0)
 ;       ^TMP(LEXSUB,$J,2,2)=Expression 2 IEN ^ Expression 2
"RTN","LEX10CS2",59,0)
 ;       ^TMP(LEXSUB,$J,2,"MSG")=Message (unversioned only)
"RTN","LEX10CS2",60,0)
 ;       ^TMP(LEXSUB,$J,n)=Code n
"RTN","LEX10CS2",61,0)
 ;       ^TMP(LEXSUB,$J,n,1)=Code n ^ date
"RTN","LEX10CS2",62,0)
 ;       ^TMP(LEXSUB,$J,n,2)=Expression n IEN ^ Expression n
"RTN","LEX10CS2",63,0)
 ;       ^TMP(LEXSUB,$J,n,"MSG")=Message (unversioned only)
"RTN","LEX10CS2",64,0)
 ;
"RTN","LEX10CS2",65,0)
 ;   $$CODELIST
"RTN","LEX10CS2",66,0)
 ;
"RTN","LEX10CS2",67,0)
 ;     A variable defining success/error conditions
"RTN","LEX10CS2",68,0)
 ;
"RTN","LEX10CS2",69,0)
 ;        Positive number for success
"RTN","LEX10CS2",70,0)
 ;        Negative number for error or condition
"RTN","LEX10CS2",71,0)
 ;
"RTN","LEX10CS2",72,0)
 ;          "-1^Coding system not specified"
"RTN","LEX10CS2",73,0)
 ;          "-2^Invalid coding system/source abbreviation"
"RTN","LEX10CS2",74,0)
 ;          "-3^No search specification"
"RTN","LEX10CS2",75,0)
 ;          "-4^Insufficient search specification"
"RTN","LEX10CS2",76,0)
 ;          "-5^Invalid search specification"
"RTN","LEX10CS2",77,0)
 ;          "-6^Number of matches exceeds specified limit"
"RTN","LEX10CS2",78,0)
 ;
"RTN","LEX10CS2",79,0)
 N LEX,LEXAI,LEXC,LEXCLIS,LEXCODE,LEXEFF,LEXEI,LEXEX,LEXEXC,LEXEXIT
"RTN","LEX10CS2",80,0)
 N LEXEXP,LEXFLG,LEXHIS,LEXI,LEXLEN,LEXND,LEXO,LEXOK,LEXR,LEXSI,LEXUN
"RTN","LEX10CS2",81,0)
 N LEXSP,LEXSRC,LEXSS,LEXTOT,LEXVDT S LEXTOT=0
"RTN","LEX10CS2",82,0)
 Q:'$L($G(X)) "-1^Coding system not specified"
"RTN","LEX10CS2",83,0)
 S LEXEXC=0,LEXSRC=$$SRC($G(X))
"RTN","LEX10CS2",84,0)
 Q:LEXSRC'>0 "-2^Invalid coding system/source abbreviation"
"RTN","LEX10CS2",85,0)
 S LEXSPEC=$$UP^XLFSTR($G(LEXSPEC))
"RTN","LEX10CS2",86,0)
 I LEXSRC=30 D
"RTN","LEX10CS2",87,0)
 . I $L(LEXSPEC)=4,$E(LEXSPEC,3)="*",$E(LEXSPEC,4)="." S LEXSPEC=$E(LEXSPEC,1,3)
"RTN","LEX10CS2",88,0)
 . I $L(LEXSPEC)=3,$E(LEXSPEC,3)'="*" S LEXSPEC=LEXSPEC_"."
"RTN","LEX10CS2",89,0)
 . I $L(LEXSPEC)>3,LEXSPEC'["." S LEXSPEC=$E(LEXSPEC,1,3)_"."_$E(LEXSPEC,4,$L(LEXSPEC))
"RTN","LEX10CS2",90,0)
 Q:'$L(LEXSPEC) "-3^No search specification"
"RTN","LEX10CS2",91,0)
 S LEXR=$P(LEXSPEC,"*",1),LEXR=$P(LEXR,"?",1)
"RTN","LEX10CS2",92,0)
 Q:$L(LEXR)'>1 "-4^Insufficient search specification"
"RTN","LEX10CS2",93,0)
 S LEXEXIT=0,LEXOK=1 F LEXI=1,2 D
"RTN","LEX10CS2",94,0)
 . S:$E(LEXSPEC,LEXI)'?1A&($E(LEXSPEC,LEXI)'?1N) LEXOK=0
"RTN","LEX10CS2",95,0)
 Q:'LEXOK "-5^Invalid search specification, first two characters must be alpha numeric"
"RTN","LEX10CS2",96,0)
 I LEXSPEC["*",$L($TR($P(LEXSPEC,"*",2,299),".","")) S LEXOK=0
"RTN","LEX10CS2",97,0)
 Q:'LEXOK "-5^Invalid search specification, trailing wildcard character ""*"""
"RTN","LEX10CS2",98,0)
 S LEXSS=$G(LEXSUB) S:'$L(LEXSS) LEXSS="CODELIST" S LEXVDT=$G(LEXD)
"RTN","LEX10CS2",99,0)
 S LEXUN=$S(LEXVDT?7N:0,1:1)
"RTN","LEX10CS2",100,0)
 S LEXLEN=$G(LEXL) S:+LEXLEN'>0 LEXLEN=5000000
"RTN","LEX10CS2",101,0)
 S LEXFLG=+($G(LEXF))
"RTN","LEX10CS2",102,0)
 S LEXO=$E(LEXR,1,($L(LEXR)-1))_$C($A($E(LEXR,$L(LEXR)))-1)_"~"
"RTN","LEX10CS2",103,0)
 S LEXEX=$S($E(LEXSPEC,$L(LEXSPEC))="*":0,1:1),LEXSP=$TR(LEXSPEC,"*","")
"RTN","LEX10CS2",104,0)
 S LEXEXIT=0 F  S LEXO=$O(^LEX(757.02,"CODE",LEXO)) D  Q:LEXEXIT
"RTN","LEX10CS2",105,0)
 . S:'$L(LEXO)!($E(LEXO,1,$L(LEXR))'=LEXR) LEXEXIT=1 Q:LEXEXIT
"RTN","LEX10CS2",106,0)
 . S LEXC=$TR(LEXO," ","") Q:LEXEX&($L(LEXSP)'=$L(LEXC))
"RTN","LEX10CS2",107,0)
 . S LEXOK=1 F LEXI=1:1:$L(LEXSP) D
"RTN","LEX10CS2",108,0)
 . . Q:$E(LEXSPEC,LEXI)="?"  Q:$E(LEXSPEC,LEXI)="*"
"RTN","LEX10CS2",109,0)
 . . S:$E(LEXC,LEXI)'=$E(LEXSPEC,LEXI) LEXOK=0
"RTN","LEX10CS2",110,0)
 . Q:'LEXOK  S LEXSI=0
"RTN","LEX10CS2",111,0)
 . F  S LEXSI=$O(^LEX(757.02,"CODE",LEXO,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEX10CS2",112,0)
 . . N LEXAI,LEXCODE,LEXEFF,LEXEI,LEXEXP,LEXHIS,LEXND,LEXVAR,LEXMSG
"RTN","LEX10CS2",113,0)
 . . S LEXND=$G(^LEX(757.02,+LEXSI,0))
"RTN","LEX10CS2",114,0)
 . . Q:$P(LEXND,"^",3)'=LEXSRC  Q:$P(LEXND,"^",5)'=1
"RTN","LEX10CS2",115,0)
 . . I LEXVDT?7N S LEXEFF=$O(^LEX(757.02,+LEXSI,4,"B",(LEXVDT+.001)),-1) Q:LEXEFF'?7N
"RTN","LEX10CS2",116,0)
 . . I LEXVDT?7N S LEXHIS=$O(^LEX(757.02,+LEXSI,4,"B",LEXEFF," "),-1) Q:LEXHIS'?1N.N
"RTN","LEX10CS2",117,0)
 . . I LEXVDT'?7N S LEXEFF=$O(^LEX(757.02,+LEXSI,4,"B",(9999999+.001)),-1) Q:LEXEFF'?7N
"RTN","LEX10CS2",118,0)
 . . I LEXVDT'?7N S LEXHIS=$O(^LEX(757.02,+LEXSI,4,"B",LEXEFF," "),-1) Q:LEXHIS'?1N.N
"RTN","LEX10CS2",119,0)
 . . I LEXVDT?7N Q:$P($G(^LEX(757.02,+LEXSI,4,+LEXHIS,0)),"^",2)'=1
"RTN","LEX10CS2",120,0)
 . . S LEXEI=+LEXND,LEXEXP=$P($G(^LEX(757.01,+LEXEI,0)),"^",1)
"RTN","LEX10CS2",121,0)
 . . S LEXCODE=$P(LEXND,"^",2) Q:'$L(LEXCODE)  Q:+LEXEI'>0  Q:'$L(LEXEXP)
"RTN","LEX10CS2",122,0)
 . . S LEXMSG="" S:LEXUN>0 LEXMSG=$$MSG(LEXCODE)
"RTN","LEX10CS2",123,0)
 . . S LEXAI=$O(^TMP(LEXSS,$J," "),-1)+1
"RTN","LEX10CS2",124,0)
 . . S LEXTOT=LEXTOT+1 I LEXAI>LEXLEN S LEXEXC=1 Q
"RTN","LEX10CS2",125,0)
 . . S LEXVAR="" S:$L(LEXCODE)&(+LEXSRC>0) LEXVAR=$$VAR(LEXCODE,LEXSRC)
"RTN","LEX10CS2",126,0)
 . . S ^TMP(LEXSS,$J,0)=LEXAI
"RTN","LEX10CS2",127,0)
 . . S ^TMP(LEXSS,$J,LEXAI)=LEXCODE
"RTN","LEX10CS2",128,0)
 . . S:+LEXFLG>0 ^TMP(LEXSS,$J,LEXAI,1)=LEXVAR_"^"_LEXCODE_"^"_LEXEFF
"RTN","LEX10CS2",129,0)
 . . S:+LEXFLG>0 ^TMP(LEXSS,$J,LEXAI,2)=LEXEI_"^"_LEXEXP
"RTN","LEX10CS2",130,0)
 . . S:$L($G(LEXMSG)) ^TMP(LEXSS,$J,LEXAI,"MSG")=$G(LEXMSG)
"RTN","LEX10CS2",131,0)
 N LEXICON S X="1^"_+($G(^TMP(LEXSS,$J,0))) I +LEXEXC>0 D
"RTN","LEX10CS2",132,0)
 . I +($G(LEXTOT))>+($G(LEXLEN)) D
"RTN","LEX10CS2",133,0)
 . . S LEXTOT=$S(+($G(LEXTOT))>0:("("_+($G(LEXTOT))_") "),1:"")
"RTN","LEX10CS2",134,0)
 . . S LEXLEN=$S(+($G(LEXLEN))>0:(" ("_+($G(LEXLEN))_")"),1:"")
"RTN","LEX10CS2",135,0)
 . E  S (LEXTOT,LEXLEN)=""
"RTN","LEX10CS2",136,0)
 . S X="-6^Number "_$G(LEXTOT)_"of matches "
"RTN","LEX10CS2",137,0)
 . S X=X_"exceeds specified limit"_$G(LEXLEN)
"RTN","LEX10CS2",138,0)
 Q X
"RTN","LEX10CS2",139,0)
SRC(X) ; Source
"RTN","LEX10CS2",140,0)
 N LEXS S LEXS=$G(X) Q:'$L(LEXS) -1
"RTN","LEX10CS2",141,0)
 Q:LEXS?1N.N&($D(^LEX(757.03,+LEXS,0))) +LEXS
"RTN","LEX10CS2",142,0)
 Q:$D(^LEX(757.03,"B",LEXS)) $O(^LEX(757.03,"B",LEXS,0))
"RTN","LEX10CS2",143,0)
 Q:$D(^LEX(757.03,"ASAB",$E(LEXS,1,3))) $O(^LEX(757.03,"ASAB",$E(LEXS,1,3),0))
"RTN","LEX10CS2",144,0)
 Q -1
"RTN","LEX10CS2",145,0)
VAR(X,Y) ; Variable Pointer for code X and system Y
"RTN","LEX10CS2",146,0)
 N LEXCODE,LEXI,LEXIEN,LEXO,LEXRT,LEXSYS,LEXT,LEXVAR S LEXCODE=$G(X),LEXSYS=$G(Y) S LEXVAR=""
"RTN","LEX10CS2",147,0)
 I "^1^30^"[("^"_LEXSYS_"^") D  S X=LEXVAR Q X
"RTN","LEX10CS2",148,0)
 . S LEXRT=$$ROOT^ICDEX(80),LEXIEN=$$CODEABA^ICDEX(LEXCODE,80,LEXSYS)
"RTN","LEX10CS2",149,0)
 . S:+($G(LEXIEN))>0&(LEXRT["^") LEXVAR=+($G(LEXIEN))_";"_$TR(LEXRT,"^","")
"RTN","LEX10CS2",150,0)
 I "^2^31^"[("^"_LEXSYS_"^") D  S X=LEXVAR Q X
"RTN","LEX10CS2",151,0)
 . S LEXRT=$$ROOT^ICDEX(80.1),LEXIEN=$$CODEABA^ICDEX(LEXCODE,80.1,LEXSYS)
"RTN","LEX10CS2",152,0)
 . S:+($G(LEXIEN))>0&(LEXRT["^") LEXVAR=+($G(LEXIEN))_";"_$TR(LEXRT,"^","")
"RTN","LEX10CS2",153,0)
 I "^3^4^"[("^"_LEXSYS_"^") D  S X=LEXVAR Q X
"RTN","LEX10CS2",154,0)
 . S LEXRT="^ICPT(",LEXIEN=$$CODEN^ICPTCOD(LEXCODE)
"RTN","LEX10CS2",155,0)
 . S:+($G(LEXIEN))>0 LEXVAR=+($G(LEXIEN))_";"_$TR(LEXRT,"^","")
"RTN","LEX10CS2",156,0)
 I "^5^6^"[("^"_LEXSYS_"^") D  S X=LEXVAR Q X
"RTN","LEX10CS2",157,0)
 . N LEXT,LEXI,LEXIEN,LEXRT S LEXVAR=""
"RTN","LEX10CS2",158,0)
 . S LEXRT=" ^YSD(627.7,",LEXT=$S(LEXSYS=5:"3R",LEXSYS=6:4,1:"") Q:+LEXT'>0
"RTN","LEX10CS2",159,0)
 . S LEXI=0 F  S LEXI=$O(^YSD(627.7,"B",LEXCODE,LEXI)) Q:+LEXI=0  D
"RTN","LEX10CS2",160,0)
 . . Q:$P($G(^YSD(627.7,LEXI,0)),"^",2)'=LEXT  S LEXIEN=LEXI
"RTN","LEX10CS2",161,0)
 . S:+($G(LEXIEN))>0 LEXVAR=+($G(LEXIEN))_";"_$TR(LEXRT,"^","")
"RTN","LEX10CS2",162,0)
 S X=LEXVAR
"RTN","LEX10CS2",163,0)
 Q X
"RTN","LEX10CS2",164,0)
MSG(X) ; Message for Unversioned Search
"RTN","LEX10CS2",165,0)
 N LEXCODE,LEXIA,LEXAC,LEXPD,LEXTD S LEXTD=$$DT^XLFDT,LEXCODE=$TR(X," ","")
"RTN","LEX10CS2",166,0)
 S:$G(LEXCDT)?7N&($G(LEXCDT)'=LEXTD) LEXTD=$G(LEXCDT)
"RTN","LEX10CS2",167,0)
 I $G(LEXCDT)="" S:$G(LEXVDT)?7N&($G(LEXVDT)'=LEXTD) LEXTD=$G(LEXVDT)
"RTN","LEX10CS2",168,0)
 Q:'$L(LEXCODE) ""  Q:'$D(^LEX(757.02,"ACT",(LEXCODE_" "))) ""
"RTN","LEX10CS2",169,0)
 S LEXIA=$O(^LEX(757.02,"ACT",(LEXCODE_" "),2,(LEXTD+.0001)),-1)
"RTN","LEX10CS2",170,0)
 S LEXAC=$O(^LEX(757.02,"ACT",(LEXCODE_" "),3,(LEXTD-.0001)),-1)
"RTN","LEX10CS2",171,0)
 S LEXPD=$O(^LEX(757.02,"ACT",(LEXCODE_" "),3,(LEXTD)))
"RTN","LEX10CS2",172,0)
 I LEXIA?7N,LEXAC?7N,LEXIA>LEXAC D  Q X
"RTN","LEX10CS2",173,0)
 . S X="Inactive "_$$FMTE^XLFDT(LEXIA,"5Z")
"RTN","LEX10CS2",174,0)
 I LEXAC'=LEXTD,LEXPD?7N,LEXPD>LEXTD D  Q X
"RTN","LEX10CS2",175,0)
 . S X="Pending "_$$FMTE^XLFDT(LEXPD,"5Z")
"RTN","LEX10CS2",176,0)
 Q ""
"RTN","LEX10CX")
0^170^B90915734
"RTN","LEX10CX",1,0)
LEX10CX ;ISL/KER - ICD-10 Cross-Over - Main ;04/21/2014
"RTN","LEX10CX",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CX",3,0)
 ;               
"RTN","LEX10CX",4,0)
 ; Global Variables
"RTN","LEX10CX",5,0)
 ;    None
"RTN","LEX10CX",6,0)
 ;               
"RTN","LEX10CX",7,0)
 ; External References
"RTN","LEX10CX",8,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10CX",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10CX",10,0)
 ;               
"RTN","LEX10CX",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10CX",12,0)
 ;    None
"RTN","LEX10CX",13,0)
 ;    
"RTN","LEX10CX",14,0)
EN ; Suggested Code (Code and Source are unknown, interactive)
"RTN","LEX10CX",15,0)
 ;
"RTN","LEX10CX",16,0)
 ; Input
"RTN","LEX10CX",17,0)
 ; 
"RTN","LEX10CX",18,0)
 ;     None.  Interactive API.  The variable LEXSAB can
"RTN","LEX10CX",19,0)
 ;     be preset to a coding system (.01 field in file 
"RTN","LEX10CX",20,0)
 ;     757.03), else wise the user will be prompted for
"RTN","LEX10CX",21,0)
 ;     a coding system.
"RTN","LEX10CX",22,0)
 ; 
"RTN","LEX10CX",23,0)
 ; Output
"RTN","LEX10CX",24,0)
 ; 
"RTN","LEX10CX",25,0)
 ;     X    Source - 4 piece "^" delimited string
"RTN","LEX10CX",26,0)
 ;     
"RTN","LEX10CX",27,0)
 ;            1  Lexicon IEN for file 757.02
"RTN","LEX10CX",28,0)
 ;            2  Expression
"RTN","LEX10CX",29,0)
 ;            3  Code in selected Coding System
"RTN","LEX10CX",30,0)
 ;            4  Coding System nomenclature
"RTN","LEX10CX",31,0)
 ;            
"RTN","LEX10CX",32,0)
 ;            or null if search fails
"RTN","LEX10CX",33,0)
 ;            
"RTN","LEX10CX",34,0)
 ;     Y    Target - 4 piece "^" delimited string
"RTN","LEX10CX",35,0)
 ;     
"RTN","LEX10CX",36,0)
 ;            1  Lexicon IEN for file 757.02
"RTN","LEX10CX",37,0)
 ;            2  Expression
"RTN","LEX10CX",38,0)
 ;            3  ICD-10 Diagnostic Code
"RTN","LEX10CX",39,0)
 ;            4  ICD-10-CM
"RTN","LEX10CX",40,0)
 ;            
"RTN","LEX10CX",41,0)
 ;            or -1 if search fails
"RTN","LEX10CX",42,0)
 ;            
"RTN","LEX10CX",43,0)
 ; Example Output:
"RTN","LEX10CX",44,0)
 ; 
"RTN","LEX10CX",45,0)
 ;    ICD-9 to ICD-10
"RTN","LEX10CX",46,0)
 ; 
"RTN","LEX10CX",47,0)
 ;       X="119899^Tobacco Use Disorder^305.1^ICD-9-CM"
"RTN","LEX10CX",48,0)
 ;       Y="5003360^Nicotine Dependence, unspecified, 
"RTN","LEX10CX",49,0)
 ;          Uncomplicated^F17.200^ICD-10-CM"
"RTN","LEX10CX",50,0)
 ;    
"RTN","LEX10CX",51,0)
 ;    SNOMED CT to ICD-10
"RTN","LEX10CX",52,0)
 ;    
"RTN","LEX10CX",53,0)
 ;       X="7078519^Diabetes mellitus type 2^44054006^SNOMED CT"
"RTN","LEX10CX",54,0)
 ;       Y="5002666^Type 2 Diabetes Mellitus without 
"RTN","LEX10CX",55,0)
 ;          Complications^E11.9^ICD-10-CM"
"RTN","LEX10CX",56,0)
 ; 
"RTN","LEX10CX",57,0)
 N LEX0FND,LEX0SEL,LEX0REV,LEXEFF,LEXIT,LEXERR,LEXEXP,LEXIEN,LEXLAD
"RTN","LEX10CX",58,0)
 N LEXNOM,LEXSRC,LEXSRI,LEXTCOD,LEXTGT,LEXTMP,LEXTTXT,DIROUT,DIRUT
"RTN","LEX10CX",59,0)
 N DTOUT,DUOUT K X,Y S (LEXIT,LEX0FND,LEX0SEL,LEX0REV)=0
"RTN","LEX10CX",60,0)
 S LEXERR="Coding system not selected or specified"
"RTN","LEX10CX",61,0)
 S LEXSAB=$$SAB($G(LEXSAB)) S:$L(LEXSAB)'=3 LEXSAB=$$SAB^LEX10CX4
"RTN","LEX10CX",62,0)
 I $L(LEXSAB)'=3 D ERR(LEXERR) Q
"RTN","LEX10CX",63,0)
 S LEXTMP=LEXSAB K LEXSAB N LEXSAB S LEXSAB=LEXTMP
"RTN","LEX10CX",64,0)
 S LEXSRI=$$SRC(LEXSAB) I +LEXSRI'>0 D ERR(LEXERR) Q
"RTN","LEX10CX",65,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRI,0)),"^",2)
"RTN","LEX10CX",66,0)
 I '$L(LEXNOM) D ERR(LEXERR) Q
"RTN","LEX10CX",67,0)
 S X=$$SRL^LEX10CX2(LEXSAB,.LEXSRC)
"RTN","LEX10CX",68,0)
 D CX(.LEXSRC)
"RTN","LEX10CX",69,0)
 Q
"RTN","LEX10CX",70,0)
EN2(CODE,SYS) ; Suggested Code (Source is known, interactive)
"RTN","LEX10CX",71,0)
 ;
"RTN","LEX10CX",72,0)
 ; Input
"RTN","LEX10CX",73,0)
 ; 
"RTN","LEX10CX",74,0)
 ;     CODE   Code
"RTN","LEX10CX",75,0)
 ;     SYS    Coding System Abbreviation
"RTN","LEX10CX",76,0)
 ; 
"RTN","LEX10CX",77,0)
 ; Output
"RTN","LEX10CX",78,0)
 ; 
"RTN","LEX10CX",79,0)
 ;     X      Source - 4 piece "^" delimited string
"RTN","LEX10CX",80,0)
 ;     
"RTN","LEX10CX",81,0)
 ;              1  Lexicon IEN for file 757.02
"RTN","LEX10CX",82,0)
 ;              2  Expression
"RTN","LEX10CX",83,0)
 ;              3  Code in selected Coding System
"RTN","LEX10CX",84,0)
 ;              4  Coding System nomenclature
"RTN","LEX10CX",85,0)
 ;            
"RTN","LEX10CX",86,0)
 ;              or null if search fails
"RTN","LEX10CX",87,0)
 ;            
"RTN","LEX10CX",88,0)
 ;     Y      Target - 4 piece "^" delimited string
"RTN","LEX10CX",89,0)
 ;     
"RTN","LEX10CX",90,0)
 ;              1  Lexicon IEN for file 757.02
"RTN","LEX10CX",91,0)
 ;              2  Expression
"RTN","LEX10CX",92,0)
 ;              3  ICD-10 Diagnostic Code
"RTN","LEX10CX",93,0)
 ;              4  ICD-10-CM
"RTN","LEX10CX",94,0)
 ;            
"RTN","LEX10CX",95,0)
 ;              or -1 if search fails
"RTN","LEX10CX",96,0)
 ;            
"RTN","LEX10CX",97,0)
 ; Example Output:
"RTN","LEX10CX",98,0)
 ; 
"RTN","LEX10CX",99,0)
 ;    ICD-9 to ICD-10
"RTN","LEX10CX",100,0)
 ; 
"RTN","LEX10CX",101,0)
 ;       X="119899^Tobacco Use Disorder^305.1^ICD-9-CM"
"RTN","LEX10CX",102,0)
 ;       Y="5003360^Nicotine Dependence, unspecified, 
"RTN","LEX10CX",103,0)
 ;          Uncomplicated^F17.200^ICD-10-CM"
"RTN","LEX10CX",104,0)
 ;    
"RTN","LEX10CX",105,0)
 ;    SNOMED CT to ICD-10
"RTN","LEX10CX",106,0)
 ;    
"RTN","LEX10CX",107,0)
 ;       X="7078519^Diabetes mellitus type 2^44054006^SNOMED CT"
"RTN","LEX10CX",108,0)
 ;       Y="5002666^Type 2 Diabetes Mellitus without 
"RTN","LEX10CX",109,0)
 ;          Complications^E11.9^ICD-10-CM"
"RTN","LEX10CX",110,0)
 ; 
"RTN","LEX10CX",111,0)
 N LEX0FND,LEX0SEL,LEX0REV,LEXEFF,LEXIT,LEXERR,LEXEXP,LEXIEN,LEXLAD
"RTN","LEX10CX",112,0)
 N LEXNOM,LEXSRC,LEXSRI,LEXTCOD,LEXTGT,LEXTMP,LEXTTXT,DIROUT,DIRUT
"RTN","LEX10CX",113,0)
 N DTOUT,DUOUT S (LEXIT,LEX0FND,LEX0SEL,LEX0REV)=0
"RTN","LEX10CX",114,0)
 S LEXERR="Coding system not selected or specified" S LEXSAB=$$SAB($G(SYS))
"RTN","LEX10CX",115,0)
 I $L(LEXSAB)'=3 D ERR(LEXERR) Q
"RTN","LEX10CX",116,0)
 S LEXTMP=LEXSAB K LEXSAB N LEXSAB S LEXSAB=LEXTMP,LEXSRI=$$SRC(LEXSAB)
"RTN","LEX10CX",117,0)
 I +LEXSRI'>0 D ERR(LEXERR) Q
"RTN","LEX10CX",118,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRI,0)),"^",2)
"RTN","LEX10CX",119,0)
 I '$L(LEXNOM) D ERR(LEXERR) Q
"RTN","LEX10CX",120,0)
 S LEXERR=LEXNOM_" code not selected"
"RTN","LEX10CX",121,0)
 S LEXTCOD=$G(CODE) I '$L(LEXTCOD) D ERR(LEXERR) Q
"RTN","LEX10CX",122,0)
 K X,Y D SRA^LEX10CX2(LEXTCOD,LEXSAB,.LEXSRC)
"RTN","LEX10CX",123,0)
 D CX(.LEXSRC)
"RTN","LEX10CX",124,0)
 Q
"RTN","LEX10CX",125,0)
EN3(CODE,SYS,ARY,MAX) ; Suggested Code (Code and Source are known, silent/GUI)
"RTN","LEX10CX",126,0)
 ;
"RTN","LEX10CX",127,0)
 ; Input
"RTN","LEX10CX",128,0)
 ; 
"RTN","LEX10CX",129,0)
 ;   CODE  Code (required)
"RTN","LEX10CX",130,0)
 ;   SYS   Coding System Abbreviation (required)
"RTN","LEX10CX",131,0)
 ;   ARY   Local Array passed by reference (required)
"RTN","LEX10CX",132,0)
 ;   MAX   Maximum # of suggestions (optional, default 100)
"RTN","LEX10CX",133,0)
 ; 
"RTN","LEX10CX",134,0)
 ; Output
"RTN","LEX10CX",135,0)
 ; 
"RTN","LEX10CX",136,0)
 ;   ARY   Array, passed by reference
"RTN","LEX10CX",137,0)
 ;     
"RTN","LEX10CX",138,0)
 ;         ARY("X")     Input
"RTN","LEX10CX",139,0)
 ;         ARY("Y",0)   Output   Number of Suggested Entries
"RTN","LEX10CX",140,0)
 ;         ARY("Y",1)   Output   First Suggestion
"RTN","LEX10CX",141,0)
 ;         ARY("Y",n)   Output   nth Suggestion
"RTN","LEX10CX",142,0)
 ;                         
"RTN","LEX10CX",143,0)
 ;         ARY("E")     Error message
"RTN","LEX10CX",144,0)
 ;
"RTN","LEX10CX",145,0)
 ;            Both ARY("X") and ARY("Y",#) are 4 piece "^"
"RTN","LEX10CX",146,0)
 ;            delimited strings:
"RTN","LEX10CX",147,0)
 ;                
"RTN","LEX10CX",148,0)
 ;               1  Internal Entry Number (IEN) file 757.01
"RTN","LEX10CX",149,0)
 ;               2  Expression (file 757.01, field .01)
"RTN","LEX10CX",150,0)
 ;               3  Code (file 757.02, field 1)
"RTN","LEX10CX",151,0)
 ;               4  Nomenclature (file 757.03, field 1)
"RTN","LEX10CX",152,0)
 ;                  i.e., SNOMED CT, ICD-9-CM or ICD-10-CM
"RTN","LEX10CX",153,0)
 ; 
"RTN","LEX10CX",154,0)
 N LEXC,LEX0FND,LEX0SEL,LEX0REV,LEXEFF,LEXI,LEXIT,LEXERR,LEXERRT,LEXEXP,LEXIEN,LEXLAD
"RTN","LEX10CX",155,0)
 N LEXNASK,LEXNASKM,LEXNOM,LEXQT,LEXSRC,LEXSRI,LEXTCOD,LEXTGT,LEXTMP,LEXTTXT,DIROUT
"RTN","LEX10CX",156,0)
 N DIRUT,DTOUT,DUOUT S:+($G(MAX))'>0 MAX=100 S LEXNASK=1,LEXNASKM=+($G(MAX))
"RTN","LEX10CX",157,0)
 K:+LEXNASKM'>0 LEXNASKM S LEXQT=1,LEXERRT=""
"RTN","LEX10CX",158,0)
 D EN2($G(CODE),$G(SYS)) S LEXNOM=$$SRN("10D") K ARY
"RTN","LEX10CX",159,0)
 S:$L(LEXERRT) ARY("E")=LEXERRT S (LEXC,LEXI)=0
"RTN","LEX10CX",160,0)
 F  S LEXI=$O(LEXNASK(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX",161,0)
 . N LEXT S LEXT=$G(LEXNASK(LEXI)) Q:'$L(LEXT)
"RTN","LEX10CX",162,0)
 . S:$L(LEXNOM) $P(LEXT,"^",4)=LEXNOM
"RTN","LEX10CX",163,0)
 . S LEXC=LEXC+1 Q:+($G(LEXNASKM))>0&(LEXC>+($G(LEXNASKM)))
"RTN","LEX10CX",164,0)
 . S ARY("Y",LEXC)=LEXT,ARY("Y",0)=LEXC
"RTN","LEX10CX",165,0)
 I +($G(ARY("Y",0)))'>0 D
"RTN","LEX10CX",166,0)
 . S LEXSRC=$G(ARY("X"))
"RTN","LEX10CX",167,0)
 . K ARY S ARY("Y",0)=0
"RTN","LEX10CX",168,0)
 . S:$L(LEXSRC) ARY("X")=LEXSRC
"RTN","LEX10CX",169,0)
 S:$L(LEXERRT) ARY("E")=LEXERRT
"RTN","LEX10CX",170,0)
 S:$L($G(LEXNASK("X"))) ARY("X")=$G(LEXNASK("X"))
"RTN","LEX10CX",171,0)
 Q
"RTN","LEX10CX",172,0)
 ;
"RTN","LEX10CX",173,0)
CX(LEXSRC) ; Convert to ICD-10
"RTN","LEX10CX",174,0)
 S LEXNOM=$G(LEXSRC("SOURCE","SRC"))
"RTN","LEX10CX",175,0)
 I '$D(LEXSRC("SOURCE")) D  Q
"RTN","LEX10CX",176,0)
 . D ERR("Invalid code for coding system")
"RTN","LEX10CX",177,0)
 I '$L(LEXNOM) D  Q
"RTN","LEX10CX",178,0)
 . D ERR(("Invalid coding system passed "_$S($L($G(LEXNOM)):" - ",1:"")_LEXNOM))
"RTN","LEX10CX",179,0)
 S LEXERR=LEXNOM_" code not selected"
"RTN","LEX10CX",180,0)
 S LEXIEN=+($G(LEXSRC("SOURCE","Y")))
"RTN","LEX10CX",181,0)
 I +LEXIEN'>0 D ERR((LEXERR_" (IEN) "_LEXIEN)) Q
"RTN","LEX10CX",182,0)
 S LEXEXP=$P($G(LEXSRC("SOURCE","Y")),"^",2)
"RTN","LEX10CX",183,0)
 I '$L(LEXEXP) D ERR((LEXERR_" (Expression) ")) Q
"RTN","LEX10CX",184,0)
 S LEXERR="Invalid "_LEXNOM_" code selected"
"RTN","LEX10CX",185,0)
 S LEXTCOD=$G(LEXSRC("SOURCE","SOE"))
"RTN","LEX10CX",186,0)
 I '$L(LEXTCOD) D ERR((LEXERR_" (Code) "_LEXTCOD)) Q
"RTN","LEX10CX",187,0)
 I '$D(^LEX(757.01,+LEXIEN,0)) D ERR((LEXERR_" (Expression) ")) Q
"RTN","LEX10CX",188,0)
 S LEXERR="Invalid coding system"
"RTN","LEX10CX",189,0)
 S LEXSAB=$G(LEXSRC("SOURCE","SAB"))
"RTN","LEX10CX",190,0)
 I '$L(LEXSAB) D ERR((LEXERR_" (SAB) "_LEXSAB)) Q
"RTN","LEX10CX",191,0)
 S LEXERR="Invalid "_LEXNOM_" code selected"
"RTN","LEX10CX",192,0)
 S LEXLAD=$P($$LA^LEX10CX5(LEXTCOD,LEXSAB),".",1)
"RTN","LEX10CX",193,0)
 I LEXLAD'?7N D ERR((LEXERR_" (Last Activation Date) "_LEXLAD)) Q
"RTN","LEX10CX",194,0)
 S LEXEFF=$$FMADD^XLFDT(LEXLAD,3)
"RTN","LEX10CX",195,0)
 S LEXERR="Invalid text for code"
"RTN","LEX10CX",196,0)
 S LEXTTXT=$$UP^XLFSTR($G(LEXSRC("SOURCE","EXP")))
"RTN","LEX10CX",197,0)
 I '$L(LEXTTXT) D ERR((LEXERR_" (Text) ")) Q
"RTN","LEX10CX",198,0)
 D SEG^LEX10CX5(,.LEXSRC)
"RTN","LEX10CX",199,0)
 I $O(LEXSRC("SEG",0))'>0 D ERR((LEXERR_" (Segments) ")) Q
"RTN","LEX10CX",200,0)
 S X=$$FIND1^LEX10CX3(LEXTCOD,.LEXSRC,.LEXTGT) S:+X'>0 X=""
"RTN","LEX10CX",201,0)
 I +X'>0 S X=$$FIND2^LEX10CX3(LEXTTXT,.LEXSRC,.LEXTGT) S:+X'>0 X=""
"RTN","LEX10CX",202,0)
 I $G(LEXNASK)>0 D  Q
"RTN","LEX10CX",203,0)
 . N LEXI,LEXC S LEXC=0 F LEXI=1:1:100 Q:'$L($G(LEXTGT(LEXI)))  D
"RTN","LEX10CX",204,0)
 . . N LEXT S LEXT=$G(LEXTGT(LEXI)),LEXC=LEXC+1
"RTN","LEX10CX",205,0)
 . . I +($G(LEXNASKM))>0,+LEXC>+($G(LEXNASKM)) Q
"RTN","LEX10CX",206,0)
 . . S LEXNASK(LEXC)=LEXT
"RTN","LEX10CX",207,0)
 . I $L($G(LEXSRC("SOURCE","Y")),"^")=3 D
"RTN","LEX10CX",208,0)
 . . N LEXT,LEX4 S LEXT=$G(LEXSRC("SOURCE","Y"))
"RTN","LEX10CX",209,0)
 . . S LEX4=$G(LEXSRC("SOURCE","SRC"))
"RTN","LEX10CX",210,0)
 . . S:$L(LEX4) $P(LEXT,"^",4)=LEX4
"RTN","LEX10CX",211,0)
 . . S LEXNASK("X")=LEXT
"RTN","LEX10CX",212,0)
 . I $L($G(LEXSRC("SOURCE","Y")),"^")'=3 D
"RTN","LEX10CX",213,0)
 . . N LEX1,LEX2,LEX3,LEX4,LEXT
"RTN","LEX10CX",214,0)
 . . S LEX1=+($G(LEXSRC("SOURCE","EXI"))) Q:LEX1'>0
"RTN","LEX10CX",215,0)
 . . S LEX2=$G(LEXSRC("SOURCE","EXP")) Q:'$L(LEX2)
"RTN","LEX10CX",216,0)
 . . S LEX3=$G(LEXSRC("SOURCE","SOE")) Q:'$L(LEX3)
"RTN","LEX10CX",217,0)
 . . S LEX4=$G(LEXSRC("SOURCE","SRC"))
"RTN","LEX10CX",218,0)
 . . S LEXT=LEX1_"^"_LEX2_"^"_LEX3
"RTN","LEX10CX",219,0)
 . . S:$L(LEX4) $P(LEXT,"^",4)=LEX4
"RTN","LEX10CX",220,0)
 . . S LEXNASK("X")=LEXT
"RTN","LEX10CX",221,0)
 S LEXIT=0 I +($G(X))>0 D  Q:LEXIT>0
"RTN","LEX10CX",222,0)
 . N DIR K DIROUT,DIRUT,DUOUT,DTOUT D ASK^LEX10CX4(.LEXSRC,.LEXTGT)
"RTN","LEX10CX",223,0)
 . I $D(DIROUT) S (LEX0FND,LEX0REV,LEX0SEL)=0,LEXIT=1
"RTN","LEX10CX",224,0)
 . K:$G(LEX0FND)>0&($G(LEX0REV)>0)&('$L($G(X))) DIROUT,DIRUT,DUOUT,DTOUT
"RTN","LEX10CX",225,0)
 . I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!($D(DTOUT)) D  Q
"RTN","LEX10CX",226,0)
 . . S X="^",Y=-1 S:$D(DIROUT) LEXIT=1
"RTN","LEX10CX",227,0)
 . D:+($G(X))>0&(+($G(Y))>0) OUT($G(X),$G(Y))
"RTN","LEX10CX",228,0)
 . S:+($G(X))>0&(+($G(Y))>0) LEXIT=1
"RTN","LEX10CX",229,0)
 . S:$G(LEX0FND)>0&($G(LEX0SEL)'>0) LEXIT=0
"RTN","LEX10CX",230,0)
 . I +($G(X))'>0!($G(Y)=-1) S X="",Y=-1
"RTN","LEX10CX",231,0)
 I $D(LEXTEST) D
"RTN","LEX10CX",232,0)
 . W:'$D(LEXQT) !! D SA^LEX10CX5("LEXSRC")
"RTN","LEX10CX",233,0)
 . W:'$D(LEXQT) !! D SA^LEX10CX5("LEXTGT") N LEXTEST
"RTN","LEX10CX",234,0)
 I +X'>0 D
"RTN","LEX10CX",235,0)
 . S X=$$FIND3^LEX10CX3(.LEXSRC,.LEXTGT) S:+X'>0 X=""
"RTN","LEX10CX",236,0)
 . I $G(LEXTGT(0))=1,$L($G(LEXTGT(1))) D
"RTN","LEX10CX",237,0)
 . . D X^LEX10CX4(.LEXSRC),Y^LEX10CX4(1,.LEXTGT)
"RTN","LEX10CX",238,0)
 . . D:+($G(X))>0&(+($G(Y))>0) OUT($G(X),$G(Y))
"RTN","LEX10CX",239,0)
 S:+($G(X))'>0 X="" S:+($G(Y))'>0 Y=-1
"RTN","LEX10CX",240,0)
 Q
"RTN","LEX10CX",241,0)
OUT(X,Y) ; Display Output - Interactive, Positive Results only
"RTN","LEX10CX",242,0)
 N LEXSI,LEXST,LEXSC,LEXSN,LEXSD,LEXTI,LEXTT,LEXTC,LEXTN
"RTN","LEX10CX",243,0)
 N LEXTD,LEXL,LEXI S X=$G(X) Q:+X'>0  S Y=$G(Y) Q:+Y'>0
"RTN","LEX10CX",244,0)
 S LEXSI=$P(X,"^",1) Q:LEXSI'>0  S LEXST(1)=$P(X,"^",2) Q:'$L(LEXST(1))
"RTN","LEX10CX",245,0)
 S LEXSC=$P(X,"^",3) Q:'$L(LEXSC)  S LEXSN=$P(X,"^",4) Q:'$L(LEXSN)
"RTN","LEX10CX",246,0)
 S LEXTI=$P(Y,"^",1) Q:LEXTI'>0  S LEXTT(1)=$P(Y,"^",2) Q:'$L(LEXTT(1))
"RTN","LEX10CX",247,0)
 S LEXTC=$P(Y,"^",3) Q:'$L(LEXTC)  S LEXTN=$P(Y,"^",4) Q:'$L(LEXTN)
"RTN","LEX10CX",248,0)
 S LEXSD=LEXSN_"   "_LEXSC S LEXTD=LEXTN_"  "_LEXTC
"RTN","LEX10CX",249,0)
 S LEXL=$L(LEXSD)+5 S:($L(LEXTD)+5)>LEXL LEXL=$L(LEXTD)+5
"RTN","LEX10CX",250,0)
 D PAR^LEX10CX4(.LEXST,(78-LEXL)),PAR^LEX10CX4(.LEXTT,(78-LEXL))
"RTN","LEX10CX",251,0)
 W:'$D(LEXQT) !!," ",LEXSD,?LEXL,$G(LEXST(1))
"RTN","LEX10CX",252,0)
 S LEXI=1 F  S LEXI=$O(LEXST(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX",253,0)
 . W:$L($G(LEXST(LEXI))) !,?LEXL,$G(LEXST(LEXI))
"RTN","LEX10CX",254,0)
 W:'$D(LEXQT) !," ",LEXTD,?LEXL,$G(LEXTT(1))
"RTN","LEX10CX",255,0)
 S LEXI=1 F  S LEXI=$O(LEXTT(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX",256,0)
 . W:$L($G(LEXTT(LEXI))) !,?LEXL,$G(LEXTT(LEXI))
"RTN","LEX10CX",257,0)
 W:'$D(LEXQT) !
"RTN","LEX10CX",258,0)
 Q
"RTN","LEX10CX",259,0)
ERR(X) ; Error
"RTN","LEX10CX",260,0)
 Q:'$L($G(X))  W:'$D(LEXQT) !,?2,$G(X),! S:$D(LEXQT) LEXERRT=$G(X)
"RTN","LEX10CX",261,0)
 Q
"RTN","LEX10CX",262,0)
SAB(X) ; Resolve SAB to 3 character Abbreviation
"RTN","LEX10CX",263,0)
 N LEXSAB,LEXCI,LEXCS S LEXCS=$G(X) Q:'$L(LEXCS) ""
"RTN","LEX10CX",264,0)
 I LEXCS?1N.N Q:$D(^LEX(757.03,+LEXCS,0)) $E($G(^LEX(757.03,+LEXCS,0)),1,3)
"RTN","LEX10CX",265,0)
 S LEXCI=$O(^LEX(757.03,"B",$$UP^XLFSTR(LEXCS),0)) Q:$D(^LEX(757.03,+LEXCI,0)) $E($G(^LEX(757.03,+LEXCI,0)),1,3)
"RTN","LEX10CX",266,0)
 S LEXCI=$O(^LEX(757.03,"ASAB",$$UP^XLFSTR(LEXCS),0)) Q:$D(^LEX(757.03,+LEXCI,0)) $E($G(^LEX(757.03,+LEXCI,0)),1,3)
"RTN","LEX10CX",267,0)
 S LEXCI=$O(^LEX(757.03,"C",LEXCS,0)) Q:$D(^LEX(757.03,+LEXCI,0)) $E($G(^LEX(757.03,+LEXCI,0)),1,3)
"RTN","LEX10CX",268,0)
 Q ""
"RTN","LEX10CX",269,0)
SRC(X) ; Resolve Source (pointer for SAB in 757.03)
"RTN","LEX10CX",270,0)
 N LEXSAB,LEXCI,LEXCS S LEXCS=$G(X) Q:'$L(LEXCS) ""  S LEXSAB=$$SAB(LEXCS) Q:$L(LEXSAB)'=3 ""
"RTN","LEX10CX",271,0)
 S X=$O(^LEX(757.03,"ASAB",LEXSAB,0)) S:'$D(^LEX(757.03,+X,0)) X=""
"RTN","LEX10CX",272,0)
 Q X
"RTN","LEX10CX",273,0)
SRN(X) ; Resolve Source (pointer for SAB in 757.03)
"RTN","LEX10CX",274,0)
 N LEXNOM,LEXCI,LEXCS S LEXCS=$G(X) Q:'$L(LEXCS) ""  S LEXCI=$$SRC(LEXCS)
"RTN","LEX10CX",275,0)
 Q:'$D(^LEX(757.03,+LEXCI,0)) ""  S X=$P($G(^LEX(757.03,+LEXCI,0)),"^",2)
"RTN","LEX10CX",276,0)
 Q X
"RTN","LEX10CX2")
0^171^B27454248
"RTN","LEX10CX2",1,0)
LEX10CX2 ;ISL/KER - ICD-10 Cross-Over - Source (get) ;04/21/2014
"RTN","LEX10CX2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CX2",3,0)
 ;               
"RTN","LEX10CX2",4,0)
 ; Global Variables
"RTN","LEX10CX2",5,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEX10CX2",6,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEX10CX2",7,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEX10CX2",8,0)
 ;               
"RTN","LEX10CX2",9,0)
 ; External References
"RTN","LEX10CX2",10,0)
 ;    ^DIC                ICR  10006
"RTN","LEX10CX2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10CX2",12,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10CX2",13,0)
 ;               
"RTN","LEX10CX2",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10CX2",15,0)
 ;    None
"RTN","LEX10CX2",16,0)
 ;               
"RTN","LEX10CX2",17,0)
SRA(LEXSO,LEXSAB,LEXA) ; Source Array from Code/SAB
"RTN","LEX10CX2",18,0)
 ;
"RTN","LEX10CX2",19,0)
 ; Input
"RTN","LEX10CX2",20,0)
 ; 
"RTN","LEX10CX2",21,0)
 ;     LEXSO   Code
"RTN","LEX10CX2",22,0)
 ;     LEXSAB  Source Abbreviation file 757.01, field .01
"RTN","LEX10CX2",23,0)
 ;     LEXA    Local Array (passed by reference)
"RTN","LEX10CX2",24,0)
 ; 
"RTN","LEX10CX2",25,0)
 ; Output
"RTN","LEX10CX2",26,0)
 ; 
"RTN","LEX10CX2",27,0)
 ;     X       Three piece "^" delimited string
"RTN","LEX10CX2",28,0)
 ;               1  Pointer to Expression file
"RTN","LEX10CX2",29,0)
 ;               2  Expression
"RTN","LEX10CX2",30,0)
 ;               3  Code
"RTN","LEX10CX2",31,0)
 ;              
"RTN","LEX10CX2",32,0)
 ;     LEXA    Local Array (if passed by reference)
"RTN","LEX10CX2",33,0)
 ; 
"RTN","LEX10CX2",34,0)
 ;               LEXA(0)=Number of entries in array
"RTN","LEX10CX2",35,0)
 ;               LEXA(1)=Expression of selected Major Concept
"RTN","LEX10CX2",36,0)
 ;               LEXA(2)=Expression of synonym #1
"RTN","LEX10CX2",37,0)
 ;               LEXA(3)=Expression of synonym #2
"RTN","LEX10CX2",38,0)
 ;               LEXA(n)=Expression of synonym #n
"RTN","LEX10CX2",39,0)
 ;               LEXA("SEG",1)=Segment 1
"RTN","LEX10CX2",40,0)
 ;               LEXA("SEG",2)=Segment 2
"RTN","LEX10CX2",41,0)
 ;               LEXA("SEG",n)=Segment n
"RTN","LEX10CX2",42,0)
 ;               LEXA("SOURCE","EXP")=Expression
"RTN","LEX10CX2",43,0)
 ;               LEXA("SOURCE","EXI")=Expression (internal)
"RTN","LEX10CX2",44,0)
 ;               LEXA("SOURCE","SOE")=Code (external)
"RTN","LEX10CX2",45,0)
 ;               LEXA("SOURCE","SOI")=Code (internal)
"RTN","LEX10CX2",46,0)
 ;               LEXA("SOURCE","SAB")=Source Abbreviation
"RTN","LEX10CX2",47,0)
 ;               LEXA("SOURCE","SRC")=Source Nomenclature
"RTN","LEX10CX2",48,0)
 ;               LEXA("SOURCE","SRI")=Source (Internal)
"RTN","LEX10CX2",49,0)
 ;               LEXA("SOURCE","Y")=DIC lookup value for Y
"RTN","LEX10CX2",50,0)
 ;
"RTN","LEX10CX2",51,0)
 N LEXEIEN,LEXI,LEXMC,LEXNOM,LEXEXP,LEXPIEN,LEXSIEN,LEXSRC,LEXLA
"RTN","LEX10CX2",52,0)
 N LEXSRI,LEXSTA,LEXT,X,Y S (X,Y)=-1,LEXSO=$G(LEXSO)
"RTN","LEX10CX2",53,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) X
"RTN","LEX10CX2",54,0)
 S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB) X
"RTN","LEX10CX2",55,0)
 Q:'$D(^LEX(757.03,"ASAB",LEXSAB)) X
"RTN","LEX10CX2",56,0)
 S LEXSRI=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEX10CX2",57,0)
 Q:+LEXSRI'>0!('$D(^LEX(757.03,+LEXSRI,0))) X
"RTN","LEX10CX2",58,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRI,0)),"^",2)
"RTN","LEX10CX2",59,0)
 Q:'$L(LEXNOM) X  S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,,,LEXSAB)
"RTN","LEX10CX2",60,0)
 S LEXSIEN=$P(LEXSTA,"^",2) Q:+LEXSIEN'>0 X
"RTN","LEX10CX2",61,0)
 S LEXPIEN=+($P($G(^LEX(757.02,+LEXSIEN,0)),"^",1)) Q:+LEXPIEN'>0 X
"RTN","LEX10CX2",62,0)
 Q:'$D(^LEX(757.01,LEXPIEN,0)) X
"RTN","LEX10CX2",63,0)
 S LEXMC=+($G(^LEX(757.01,LEXPIEN,1))) Q:+LEXMC'>0 X
"RTN","LEX10CX2",64,0)
 S (LEXEXP,LEXA(1))=$G(^LEX(757.01,LEXPIEN,0)),LEXA(0)=1,LEXEIEN=0
"RTN","LEX10CX2",65,0)
 F  S LEXEIEN=$O(^LEX(757.01,"AMC",LEXMC,LEXEIEN)) Q:+LEXEIEN'>0  D
"RTN","LEX10CX2",66,0)
 . Q:LEXEIEN=LEXPIEN  N LEXT,LEXI
"RTN","LEX10CX2",67,0)
 . S LEXT=$G(^LEX(757.01,LEXEIEN,0)) Q:'$L(LEXT)
"RTN","LEX10CX2",68,0)
 . S LEXI=$O(LEXA(" "),-1)+1
"RTN","LEX10CX2",69,0)
 . S LEXA(LEXI)=LEXT,LEXA(0)=LEXI
"RTN","LEX10CX2",70,0)
 S LEXA("SOURCE","EXP")=LEXEXP
"RTN","LEX10CX2",71,0)
 S:+($G(LEXPIEN))>0 LEXA("SOURCE","EXI")=+($G(LEXPIEN))
"RTN","LEX10CX2",72,0)
 S LEXA("SOURCE","SOE")=LEXSO
"RTN","LEX10CX2",73,0)
 S:+($G(LEXSIEN))>0 LEXA("SOURCE","SOI")=+($G(LEXSIEN))
"RTN","LEX10CX2",74,0)
 S LEXA("SOURCE","SAB")=LEXSAB
"RTN","LEX10CX2",75,0)
 S LEXA("SOURCE","SRC")=LEXNOM
"RTN","LEX10CX2",76,0)
 S:+($G(LEXSRI))>0 LEXA("SOURCE","SRI")=+($G(LEXSRI))
"RTN","LEX10CX2",77,0)
 S (X,LEXA("SOURCE","Y"))=LEXPIEN_"^"_LEXEXP_"^"_LEXSO
"RTN","LEX10CX2",78,0)
 D SEG^LEX10CX5(,.LEXA)
"RTN","LEX10CX2",79,0)
 Q X
"RTN","LEX10CX2",80,0)
SRL(LEXSAB,LEXA) ; Source Array from Lookup
"RTN","LEX10CX2",81,0)
 ;
"RTN","LEX10CX2",82,0)
 ; Input
"RTN","LEX10CX2",83,0)
 ; 
"RTN","LEX10CX2",84,0)
 ;     LEXA   Local Array (passed by reference)
"RTN","LEX10CX2",85,0)
 ;     LEXS   Source Abbreviation file 757.01, field .01
"RTN","LEX10CX2",86,0)
 ; 
"RTN","LEX10CX2",87,0)
 ; Output     Same as $$SRA
"RTN","LEX10CX2",88,0)
 ; 
"RTN","LEX10CX2",89,0)
 N DIC,DO,LEXCDT,LEXEFF,LEXEX,LEXH,LEXI,LEXIEN,LEXILA,LEXLA
"RTN","LEX10CX2",90,0)
 N LEXNOM,LEXQUIET,LEXS,LEXSO,LEXSRI,LEXSTA,LEXTD,LEXTX,LEXVDT
"RTN","LEX10CX2",91,0)
 N X,Y K LEXA S LEXSAB=$G(LEXSAB) Q:$L(LEXSAB)'=3 -1
"RTN","LEX10CX2",92,0)
 S LEXSRI=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEX10CX2",93,0)
 Q:+LEXSRI'>0!('$D(^LEX(757.03,+LEXSRI,0))) -1  S LEXTD=$$DT^XLFDT
"RTN","LEX10CX2",94,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRI,0)),"^",2)
"RTN","LEX10CX2",95,0)
 Q:'$L(LEXNOM) -1  S DIC("A")=" Enter "_LEXNOM_" code or text:  "
"RTN","LEX10CX2",96,0)
 S DIC("S")="I $$SO^LEXU(Y,"""_LEXSAB_""",+($G(LEXICCD)))"
"RTN","LEX10CX2",97,0)
 S LEXCDT=$$FMADD^XLFDT($$IMPDATE^LEXU("10D"),-3)
"RTN","LEX10CX2",98,0)
 S:"^ICD^ICP^DS3^DS4^"'[("^"_LEXSAB_"^") LEXCDT=LEXTD
"RTN","LEX10CX2",99,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J)
"RTN","LEX10CX2",100,0)
 D CONFIG^LEXSET(LEXSAB,LEXSAB,LEXCDT)
"RTN","LEX10CX2",101,0)
 S ^TMP("LEXSCH",$J,"DIS",0)=LEXSAB
"RTN","LEX10CX2",102,0)
 S ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEX10CX2",103,0)
 S DIC(0)="AEQMZ",DIC="^LEX(757.01," K X
"RTN","LEX10CX2",104,0)
 S LEXQUIET=1 D ^DIC Q:+Y'>0 -1 S X="" I +Y>0 D
"RTN","LEX10CX2",105,0)
 . N LEXILA,LEXIEN,LEXLA,LEXSO,LEXTX,LEXS,LEXIEN,LEXEX
"RTN","LEX10CX2",106,0)
 . N LEXH,LEXEX,LEXI,LEXSTA,LEXSIEN S LEXSO=$G(Y(1)),LEXIEN=+Y
"RTN","LEX10CX2",107,0)
 . S:'$L(LEXSO) LEXSO=$$SO^LEX10CX5(LEXIEN,LEXSAB,LEXCDT) Q:'$L(LEXSO)
"RTN","LEX10CX2",108,0)
 . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXCDT),,$G(LEXSAB))
"RTN","LEX10CX2",109,0)
 . S LEXSIEN=$P(LEXSTA,"^",2) Q:+LEXSIEN'>0
"RTN","LEX10CX2",110,0)
 . S LEXTX=$G(Y(0)) Q:'$L(LEXTX)  S LEXILA=$$LA^LEX10CX5(LEXSO,LEXSAB),LEXS=0
"RTN","LEX10CX2",111,0)
 . F  S LEXS=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXS)) Q:+LEXS'>0  D
"RTN","LEX10CX2",112,0)
 . . N LEXI Q:$P($G(^LEX(757.02,+LEXS,0)),"^",3)'=LEXSRI
"RTN","LEX10CX2",113,0)
 . . S LEXLA="",LEXH=0
"RTN","LEX10CX2",114,0)
 . . F  S LEXH=$O(^LEX(757.02,+LEXS,4,LEXH)) Q:+LEXH'>0  D
"RTN","LEX10CX2",115,0)
 . . . N LEXEFF,LEXSTA
"RTN","LEX10CX2",116,0)
 . . . S LEXEFF=$P($G(^LEX(757.02,+LEXS,4,+LEXH,0)),"^",1)
"RTN","LEX10CX2",117,0)
 . . . S LEXSTA=$P($G(^LEX(757.02,+LEXS,4,+LEXH,0)),"^",2)
"RTN","LEX10CX2",118,0)
 . . . S:LEXSTA>0 LEXLA=LEXEFF
"RTN","LEX10CX2",119,0)
 . . Q:LEXLA'?7N  Q:LEXILA'?7N  Q:LEXILA>LEXLA
"RTN","LEX10CX2",120,0)
 . . S LEXEX=+($P($G(^LEX(757.02,+LEXS,0)),"^",1))
"RTN","LEX10CX2",121,0)
 . . S LEXEX=$G(^LEX(757.01,+LEXEX,0)) Q:'$L(LEXEX)
"RTN","LEX10CX2",122,0)
 . . Q:$D(LEXA("B",LEXEX))  S LEXI=$O(LEXA(" "),-1)+1
"RTN","LEX10CX2",123,0)
 . . S LEXA(LEXI)=LEXEX,LEXA("B",LEXEX)="",LEXA(0)=LEXI
"RTN","LEX10CX2",124,0)
 . K LEXA("B")
"RTN","LEX10CX2",125,0)
 . I +($G(LEXA(0)))>0,+($G(Y))>0,$L($P($G(Y),"^",2)) D
"RTN","LEX10CX2",126,0)
 . . N LEXPIEN
"RTN","LEX10CX2",127,0)
 . . S LEXPIEN=+($G(^LEX(757.02,+($G(LEXSIEN)),0)))
"RTN","LEX10CX2",128,0)
 . . S LEXA("SOURCE","SOE")=LEXSO
"RTN","LEX10CX2",129,0)
 . . S:+($G(LEXSIEN))>0 LEXA("SOURCE","SOI")=+($G(LEXSIEN))
"RTN","LEX10CX2",130,0)
 . . S LEXA("SOURCE","Y")=$G(Y)
"RTN","LEX10CX2",131,0)
 . . S LEXA("SOURCE","EXP")=LEXTX
"RTN","LEX10CX2",132,0)
 . . S:+($G(LEXPIEN))>0 LEXA("SOURCE","EXI")=+($G(LEXPIEN))
"RTN","LEX10CX2",133,0)
 . . S:$L($G(LEXSAB))=3 LEXA("SOURCE","SAB")=$G(LEXSAB)
"RTN","LEX10CX2",134,0)
 . . S:$L($G(LEXNOM)) LEXA("SOURCE","SRC")=$G(LEXNOM)
"RTN","LEX10CX2",135,0)
 . . S:+($G(LEXSRI))>0 LEXA("SOURCE","SRI")=+($G(LEXSRI))
"RTN","LEX10CX2",136,0)
 . . S X=Y_"^"_LEXSO
"RTN","LEX10CX2",137,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J)
"RTN","LEX10CX2",138,0)
 K LEXVDT
"RTN","LEX10CX2",139,0)
 Q X
"RTN","LEX10CX3")
0^172^B97828924
"RTN","LEX10CX3",1,0)
LEX10CX3 ;ISL/KER - ICD-10 Cross-Over - Target (find) ;04/21/2014
"RTN","LEX10CX3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CX3",3,0)
 ;               
"RTN","LEX10CX3",4,0)
 ; Global Variables
"RTN","LEX10CX3",5,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEX10CX3",6,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEX10CX3",7,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEX10CX3",8,0)
 ;    ^TMP("LEXTMP")      SACC 2.3.2.5.1
"RTN","LEX10CX3",9,0)
 ;               
"RTN","LEX10CX3",10,0)
 ; External References
"RTN","LEX10CX3",11,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEX10CX3",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10CX3",13,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10CX3",14,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEX10CX3",15,0)
 ;    $$OD^ICDEX          ICR   5747
"RTN","LEX10CX3",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10CX3",17,0)
 ;    $$VLTD^ICDEX        ICR   5747
"RTN","LEX10CX3",18,0)
 ;    ^DIC                ICR  10006
"RTN","LEX10CX3",19,0)
 ;               
"RTN","LEX10CX3",20,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10CX3",21,0)
 ;     LEX0FND NEWed in LEX10CX
"RTN","LEX10CX3",22,0)
 ;               
"RTN","LEX10CX3",23,0)
FIND1(X,LEXSRC,LEXTGT) ; Find ICD-10 Codes based on Text Lookup
"RTN","LEX10CX3",24,0)
 ;
"RTN","LEX10CX3",25,0)
 ; Input
"RTN","LEX10CX3",26,0)
 ; 
"RTN","LEX10CX3",27,0)
 ;     X        Input Code
"RTN","LEX10CX3",28,0)
 ;     LEXSRC   Local Array Source Code (passed by reference)
"RTN","LEX10CX3",29,0)
 ;     LEXTGT   Local Array Target ICD-10 (passed by reference)
"RTN","LEX10CX3",30,0)
 ; 
"RTN","LEX10CX3",31,0)
 ; Output
"RTN","LEX10CX3",32,0)
 ; 
"RTN","LEX10CX3",33,0)
 ;     X        Number if ICD-10 Dx Codes found
"RTN","LEX10CX3",34,0)
 ;              
"RTN","LEX10CX3",35,0)
 ;     LEXSRC   Local Array ICD-9 (passed by reference)
"RTN","LEX10CX3",36,0)
 ;     LEXTGT   Local Array (passed by reference)
"RTN","LEX10CX3",37,0)
 ; 
"RTN","LEX10CX3",38,0)
 ;                LEXTGT(0) = Number of ICD-10 Codes found
"RTN","LEX10CX3",39,0)
 ;                LEXTGT(n) = Three piece "^" delimited string
"RTN","LEX10CX3",40,0)
 ;                               1  Pointer to Expression file
"RTN","LEX10CX3",41,0)
 ;                               2  Expression
"RTN","LEX10CX3",42,0)
 ;                               3  ICD-10 Code
"RTN","LEX10CX3",43,0)
 ; 
"RTN","LEX10CX3",44,0)
 N DIC,DO,LEX,LEXCTR,LEXAI,LEXICDD,LEXIIEN,LEXMAX,LEXO,LEXOK
"RTN","LEX10CX3",45,0)
 N LEXP,LEXS,LEXSO,LEXTD,LEXU,LEXU1,LEXUI,LEXVDT,LEXX,LEXXC,LEXXE
"RTN","LEX10CX3",46,0)
 N LEXXI,LEXXT,Y S LEXMAX=+($G(LEXNASKM)) K DIC,DO,^TMP("LEXSCH",$J)
"RTN","LEX10CX3",47,0)
 K ^TMP("LEXHIT",$J),^TMP("LEXFND",$J),^TMP("LEXTMP",$J,"FIND1")
"RTN","LEX10CX3",48,0)
 Q:+($G(LEXSRC(0)))'>0 -1  S LEXSO=$G(X)
"RTN","LEX10CX3",49,0)
 S LEXICDD=$$FMADD^XLFDT($$IMPDATE^LEXU("10D"),3)
"RTN","LEX10CX3",50,0)
 S LEXTD=$$DT^XLFDT S:LEXTD>LEXICDD LEXICDD=LEXTD
"RTN","LEX10CX3",51,0)
 S LEXAI=0 F  S LEXAI=$O(LEXSRC(LEXAI)) Q:+LEXAI'>0  D
"RTN","LEX10CX3",52,0)
 . N LEXX,X,Y,DIC,LEXVDT,LEXXI,LEXXC,LEXXE,LEXU1,LEXUI,LEXOK
"RTN","LEX10CX3",53,0)
 . S LEXVDT=$G(LEXICDD)
"RTN","LEX10CX3",54,0)
 . S (LEXX,X)=$G(LEXSRC(LEXAI)) Q:'$L(X)
"RTN","LEX10CX3",55,0)
 . D CONFIG^LEXSET("10D","10D",LEXVDT)
"RTN","LEX10CX3",56,0)
 . S ^TMP("LEXSCH",$J,"DIS",0)="10D"
"RTN","LEX10CX3",57,0)
 . S DIC("S")="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10D""))"
"RTN","LEX10CX3",58,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEX10CX3",59,0)
 . K LEX D LOOK^LEXA(LEXX,"LEX",100,"10D",$G(LEXVDT))
"RTN","LEX10CX3",60,0)
 . S:$O(LEX("LIST",0))>0 LEX0FND=1
"RTN","LEX10CX3",61,0)
 . S LEXU1=$$UP^XLFSTR($G(^LEX(757.01,+($G(LEX("LIST",1))),0)))
"RTN","LEX10CX3",62,0)
 . S LEXUI=$$UP^XLFSTR(LEXX)
"RTN","LEX10CX3",63,0)
 . I LEXU1=LEXUI S LEXOK=0 D  Q:LEXOK
"RTN","LEX10CX3",64,0)
 . . N LEXXE,LEXXC,LEXIIEN S LEXXE=$G(LEX("LIST",1))
"RTN","LEX10CX3",65,0)
 . . S LEXXC=$$EC(+LEXXE,"10D") Q:'$L(LEXXC)  S LEXOK=1
"RTN","LEX10CX3",66,0)
 . . S ^TMP("LEXTMP",$J,"FIND1","SO",(LEXXC_" "))=LEXXE
"RTN","LEX10CX3",67,0)
 . S LEXUI=$TR(LEXUI,"~`!@#$%^&*()_-+={}|[]\;':"",./<>?"," ")
"RTN","LEX10CX3",68,0)
 . S LEXOK=0 S LEXXI=0 F  S LEXXI=$O(LEX("LIST",LEXXI)) Q:+LEXXI'>0  D
"RTN","LEX10CX3",69,0)
 . . N LEXU,LEXXE,LEXXC,LEXIIEN,LEXS,LEXP S LEXXE=$G(LEX("LIST",LEXXI))
"RTN","LEX10CX3",70,0)
 . . S LEXXC=$$EC(+LEXXE,"10D") Q:'$L(LEXXC)
"RTN","LEX10CX3",71,0)
 . . S LEXU=$$UP^XLFSTR($G(^LEX(757.01,+LEXXE,0)))
"RTN","LEX10CX3",72,0)
 . . S LEXU=$TR(LEXU,"~`!@#$%^&*()_-+={}|[]\;':"",./<>?"," ")
"RTN","LEX10CX3",73,0)
 . . F LEXP=1:1 S LEXS=$P(LEXUI," ",LEXP) Q:'$L(LEXS)  D
"RTN","LEX10CX3",74,0)
 . . . S LEXS=$$TM(LEXS) Q:'$L(LEXS)
"RTN","LEX10CX3",75,0)
 . . . F  Q:LEXU'[LEXS  S LEXU=$P(LEXU,LEXS,1)_" "_$P(LEXU,LEXS,2,299)
"RTN","LEX10CX3",76,0)
 . . S LEXU=$$TM(LEXU) I '$L(LEXU) D
"RTN","LEX10CX3",77,0)
 . . . S LEXXC=$$EC(+LEXXE,"10D") Q:'$L(LEXXC)  S LEXOK=1
"RTN","LEX10CX3",78,0)
 . . . S ^TMP("LEXTMP",$J,"FIND1","SO",(LEXXC_" "))=LEXXE
"RTN","LEX10CX3",79,0)
 . Q:LEXOK  S LEXXI=0 F  S LEXXI=$O(LEX("LIST",LEXXI)) Q:+LEXXI'>0  D
"RTN","LEX10CX3",80,0)
 . . N LEXXE,LEXXC,LEXIIEN
"RTN","LEX10CX3",81,0)
 . . S LEXXE=$G(LEX("LIST",LEXXI))
"RTN","LEX10CX3",82,0)
 . . S LEXXC=$$EC(+LEXXE,"10D") Q:'$L(LEXXC)
"RTN","LEX10CX3",83,0)
 . . S ^TMP("LEXTMP",$J,"FIND1","SO",(LEXXC_" "))=LEXXE
"RTN","LEX10CX3",84,0)
 K LEX,LEXTGT S LEXCTR=0,LEXO=0,LEXXC=""
"RTN","LEX10CX3",85,0)
 F  S LEXXC=$O(^TMP("LEXTMP",$J,"FIND1","SO",LEXXC)) Q:'$L(LEXXC)  D
"RTN","LEX10CX3",86,0)
 . N LEXXE,LEXXT,LEXXI
"RTN","LEX10CX3",87,0)
 . S LEXXE=$G(^TMP("LEXTMP",$J,"FIND1","SO",LEXXC))
"RTN","LEX10CX3",88,0)
 . Q:'$L(LEXXE)   Q:+LEXXE'>0  S LEXXT=$P(LEXXE,"^",2)
"RTN","LEX10CX3",89,0)
 . S:LEXXT["(ICD-10-CM " LEXXT=$P(LEXXT," (ICD-10-CM ",1)
"RTN","LEX10CX3",90,0)
 . S LEXXI=$O(LEXTGT(" "),-1)+1,LEXCTR=LEXCTR+1
"RTN","LEX10CX3",91,0)
 . I +($G(LEXMAX))>0,LEXCTR>+($G(LEXMAX)) Q
"RTN","LEX10CX3",92,0)
 . S LEXTGT(LEXXI)=+LEXXE_"^"_LEXXT_"^"_$TR(LEXXC," ","")
"RTN","LEX10CX3",93,0)
 . S (LEXO,LEXTGT(0))=LEXXI
"RTN","LEX10CX3",94,0)
 K ^TMP("LEXTMP",$J,"FIND1","SO")
"RTN","LEX10CX3",95,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEX10CX3",96,0)
 S X=+($G(LEXO)) S:X'>0 X=""
"RTN","LEX10CX3",97,0)
 Q X
"RTN","LEX10CX3",98,0)
FIND2(X,LEXSRC,LEXTGT) ; Find by margin
"RTN","LEX10CX3",99,0)
 ;
"RTN","LEX10CX3",100,0)
 ; Input        Same as $$FIND1
"RTN","LEX10CX3",101,0)
 ; 
"RTN","LEX10CX3",102,0)
 ; Output       Same as $$FIND1
"RTN","LEX10CX3",103,0)
 ; 
"RTN","LEX10CX3",104,0)
 N LEXCO,LEXCT,LEXCTR,LEXCTL,LEXF,LEXHI,LEXI,LEXICDD,LEXIEN,LEXKEY
"RTN","LEX10CX3",105,0)
 N LEXLA,LEXLO,LEXMAX,LEXMX,LEXOR,LEXORD,LEXSEG,LEXSG,LEXSI,LEXSO
"RTN","LEX10CX3",106,0)
 N LEXTD,LEXTX,LEXX S (LEXOR,LEXX)=$G(X),LEXOR=$$UP^XLFSTR(LEXOR)
"RTN","LEX10CX3",107,0)
 S LEXICDD=$$FMADD^XLFDT($$IMPDATE^LEXU("10D"),3)
"RTN","LEX10CX3",108,0)
 S LEXTD=$$DT^XLFDT S:LEXTD>LEXICDD LEXICDD=LEXTD
"RTN","LEX10CX3",109,0)
 S LEXSI=0,LEXMAX=+($G(LEXNASKM)) I $O(LEXSRC("SEG",0))'>0 D
"RTN","LEX10CX3",110,0)
 . N LEXSEG D SEGS^LEX10CX5(LEXX,1,.LEXSEG)
"RTN","LEX10CX3",111,0)
 . S LEXI=0 F  S LEXI=$O(LEXSEG(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX3",112,0)
 . . N LEXSG S LEXSG=$G(LEXSEG(LEXI)) Q:'$L(LEXSG)
"RTN","LEX10CX3",113,0)
 . . S LEXSI=$O(LEXSRC("SEG"," "),-1)+1
"RTN","LEX10CX3",114,0)
 . . S LEXSRC("SEG",LEXSI)=LEXSG
"RTN","LEX10CX3",115,0)
 I $O(LEXSRC("SEG",0))'>0 K LEXTGT Q -1
"RTN","LEX10CX3",116,0)
 S LEXKEY=$G(LEXSRC("SEG",1)) I '$L(LEXKEY) K LEXTGT Q -1
"RTN","LEX10CX3",117,0)
 K ^TMP("LEXTMP",$J,"FIND2") D FIND2B
"RTN","LEX10CX3",118,0)
 I '$D(^TMP("LEXTMP",$J,"FIND2")),+($G(LEXSI))>2 D
"RTN","LEX10CX3",119,0)
 . K ^TMP("LEXTMP",$J,"FIND2")
"RTN","LEX10CX3",120,0)
 . S LEXKEY=$G(LEXSRC("SEG",2))
"RTN","LEX10CX3",121,0)
 . D:$L(LEXKEY) FIND2B D:'$L(LEXKEY) FIND2C
"RTN","LEX10CX3",122,0)
 S LEXLO=$O(^TMP("LEXTMP",$J,"FIND2","B",0))
"RTN","LEX10CX3",123,0)
 S LEXHI=$O(^TMP("LEXTMP",$J,"FIND2","B"," "),-1)
"RTN","LEX10CX3",124,0)
 S LEXMX=$O(LEXSRC("SEG"," "),-1)
"RTN","LEX10CX3",125,0)
 S LEXCO=LEXMX S:LEXMX>0 LEXCO=$P(((LEXMX/5)*4),".",1)
"RTN","LEX10CX3",126,0)
 S:LEXMX>0 LEXLO=$P((LEXMX/3),".",1)
"RTN","LEX10CX3",127,0)
 S:LEXLO'<LEXCO LEXLO=LEXCO-1 S LEXF=0,LEXCTR=0
"RTN","LEX10CX3",128,0)
 F  S LEXF=$O(^TMP("LEXTMP",$J,"FIND2","B",LEXF)) Q:+LEXF'>0  D
"RTN","LEX10CX3",129,0)
 . Q:LEXF<LEXCO  N LEXI S LEXI=0
"RTN","LEX10CX3",130,0)
 . F  S LEXI=$O(^TMP("LEXTMP",$J,"FIND2","B",LEXF,LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX3",131,0)
 . . N LEXN,LEXT S LEXN=$O(LEXTGT(" "),-1)+1
"RTN","LEX10CX3",132,0)
 . . S LEXT=$G(^TMP("LEXTMP",$J,"FIND2",LEXI,LEXF))
"RTN","LEX10CX3",133,0)
 . . Q:'$L(LEXT)  S LEXCTR=LEXCTR+1
"RTN","LEX10CX3",134,0)
 . . I +($G(LEXMAX))>0,LEXCTR>+($G(LEXNASKM)) Q
"RTN","LEX10CX3",135,0)
 . . S LEXTGT(LEXN)=LEXT,LEXTGT(0)=LEXN
"RTN","LEX10CX3",136,0)
 S X=$G(LEXTGT(0)) S:+X'>0 X=""
"RTN","LEX10CX3",137,0)
 Q X
"RTN","LEX10CX3",138,0)
FIND2B ;   Find by margin based on Keyword #n
"RTN","LEX10CX3",139,0)
 N LEXORD S LEXORD=LEXKEY
"RTN","LEX10CX3",140,0)
 F  S LEXORD=$$OD^ICDEX(80,LEXORD,30) Q:$P(LEXORD,"^",1)'=LEXKEY  D
"RTN","LEX10CX3",141,0)
 . N LEXIEN,LEXLA,LEXTX,LEXSO,LEXF,LEXI,LEXSGI,LEXMX
"RTN","LEX10CX3",142,0)
 . S LEXIEN=$P(LEXORD,"^",2) Q:+LEXIEN'>0
"RTN","LEX10CX3",143,0)
 . S LEXLA=$$LA^ICDEX(80,LEXIEN,LEXICDD)
"RTN","LEX10CX3",144,0)
 . Q:LEXLA'?7N  S LEXLA=$$FMADD^XLFDT(LEXLA,1)
"RTN","LEX10CX3",145,0)
 . S LEXTX=$$UP^XLFSTR($$VLTD^ICDEX(LEXIEN,LEXLA))
"RTN","LEX10CX3",146,0)
 . S LEXSO=$$CODEC^ICDEX(80,LEXIEN)
"RTN","LEX10CX3",147,0)
 . S LEXF=0,LEXMX=$O(LEXSRC("SEG"," "),-1)
"RTN","LEX10CX3",148,0)
 . F LEXSGI=1:1:LEXMX D
"RTN","LEX10CX3",149,0)
 . . N LEXSG,LEXCT Q:$G(LEXSRC("SEG",1))=LEXKEY
"RTN","LEX10CX3",150,0)
 . . S LEXSG=$$UP^XLFSTR($G(LEXSRC("SEG",LEXSGI))) Q:'$L(LEXSG)
"RTN","LEX10CX3",151,0)
 . . S LEXCT=$$RN^LEX10CX5(LEXSG,LEXTX) I LEXCT>0 S LEXF=LEXF+1 Q
"RTN","LEX10CX3",152,0)
 . . S LEXCT=$$TY^LEX10CX5(LEXOR,LEXTX) I LEXCT>0 S LEXF=LEXF+1 Q
"RTN","LEX10CX3",153,0)
 . . I LEXTX[LEXSG S LEXF=LEXF+1
"RTN","LEX10CX3",154,0)
 . ;I $G(LEXX)["WITHOUT" S:LEXTX'["WITHOUT"&(LEXTX["WITH ") LEXF=0
"RTN","LEX10CX3",155,0)
 . I LEXF>0 D
"RTN","LEX10CX3",156,0)
 . . N LEXT,LEXSTA,LEXSI,LEXEI,LEXEX S LEXT=""
"RTN","LEX10CX3",157,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXICDD,,"10D")
"RTN","LEX10CX3",158,0)
 . . S LEXSI=$P(LEXSTA,"^",2),LEXEI=$P($G(^LEX(757.02,+LEXSI,0)),"^",1)
"RTN","LEX10CX3",159,0)
 . . S LEXEX=$P($G(^LEX(757.01,+LEXEI,0)),"^",1)
"RTN","LEX10CX3",160,0)
 . . S:LEXEI>0&($L(LEXEX)) LEXT=LEXEI_"^"_LEXEX_"^"_LEXSO
"RTN","LEX10CX3",161,0)
 . . I $L(LEXT) D
"RTN","LEX10CX3",162,0)
 . . . S ^TMP("LEXTMP",$J,"FIND2",LEXEI,LEXF)=LEXT
"RTN","LEX10CX3",163,0)
 . . . S ^TMP("LEXTMP",$J,"FIND2","B",LEXF,LEXEI)=""
"RTN","LEX10CX3",164,0)
 Q
"RTN","LEX10CX3",165,0)
FIND2C ;   Find by margin based on single Keyword
"RTN","LEX10CX3",166,0)
 Q:'$L($G(LEXSRC("SEG",1)))  Q:$O(LEXSRC("SEG",1))>1
"RTN","LEX10CX3",167,0)
 N LEXORD S (LEXORD,LEXKEY)=$G(LEXSRC("SEG",1))
"RTN","LEX10CX3",168,0)
 F  S LEXORD=$$OD^ICDEX(80,LEXORD,30) Q:$P(LEXORD,"^",1)'=LEXKEY  D
"RTN","LEX10CX3",169,0)
 . N LEXIEN,LEXLA,LEXTX,LEXSO,LEXF,LEXI,LEXSGI,LEXMX
"RTN","LEX10CX3",170,0)
 . S LEXIEN=$P(LEXORD,"^",2) Q:+LEXIEN'>0
"RTN","LEX10CX3",171,0)
 . S LEXLA=$$LA^ICDEX(80,LEXIEN,LEXICDD)
"RTN","LEX10CX3",172,0)
 . Q:LEXLA'?7N  S LEXLA=$$FMADD^XLFDT(LEXLA,1)
"RTN","LEX10CX3",173,0)
 . S LEXTX=$$UP^XLFSTR($$VLTD^ICDEX(LEXIEN,LEXLA))
"RTN","LEX10CX3",174,0)
 . S LEXSO=$$CODEC^ICDEX(80,LEXIEN) S LEXF=1
"RTN","LEX10CX3",175,0)
 . I LEXF>0 D
"RTN","LEX10CX3",176,0)
 . . N LEXT,LEXSTA,LEXSI,LEXEI,LEXEX S LEXT=""
"RTN","LEX10CX3",177,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXICDD,,"10D")
"RTN","LEX10CX3",178,0)
 . . S LEXSI=$P(LEXSTA,"^",2),LEXEI=$P($G(^LEX(757.02,+LEXSI,0)),"^",1)
"RTN","LEX10CX3",179,0)
 . . S LEXEX=$P($G(^LEX(757.01,+LEXEI,0)),"^",1)
"RTN","LEX10CX3",180,0)
 . . S:LEXEI>0&($L(LEXEX)) LEXT=LEXEI_"^"_LEXEX_"^"_LEXSO
"RTN","LEX10CX3",181,0)
 . . I $L(LEXT) D
"RTN","LEX10CX3",182,0)
 . . . S ^TMP("LEXTMP",$J,"FIND2",LEXEI,LEXF)=LEXT
"RTN","LEX10CX3",183,0)
 . . . S ^TMP("LEXTMP",$J,"FIND2","B",LEXF,LEXEI)=""
"RTN","LEX10CX3",184,0)
 Q
"RTN","LEX10CX3",185,0)
 ;
"RTN","LEX10CX3",186,0)
FIND3(LEXSRC,LEXA) ; Source Array from Lookup
"RTN","LEX10CX3",187,0)
 ;
"RTN","LEX10CX3",188,0)
 ; Input
"RTN","LEX10CX3",189,0)
 ; 
"RTN","LEX10CX3",190,0)
 ;     LEXSRC   Local Array Source Code (passed by reference)
"RTN","LEX10CX3",191,0)
 ;     LEXA     Local Array Target ICD-10 (passed by reference)
"RTN","LEX10CX3",192,0)
 ; 
"RTN","LEX10CX3",193,0)
 ; Output       Same as $$FIND1
"RTN","LEX10CX3",194,0)
 ; 
"RTN","LEX10CX3",195,0)
 N DIC,DO,LEXCDT,LEXEFF,LEXEX,LEXH,LEXHDR1,LEXHDR2,LEXI,LEXSRCC,LEXSRCS
"RTN","LEX10CX3",196,0)
 N LEXSRCT,LEXIEN,LEXILA,LEXLA,LEXNOM,LEXQUIET,LEXS,LEXSO,LEXSRI,LEXSTA
"RTN","LEX10CX3",197,0)
 N LEXTD,LEXTX,LEXVDT,X,Y S LEXSRCC=$G(LEXSRC("SOURCE","SOE"))
"RTN","LEX10CX3",198,0)
 S LEXSRCS=$G(LEXSRC("SOURCE","SRC")),LEXSRCT=$G(LEXSRC("SOURCE","EXP"))
"RTN","LEX10CX3",199,0)
 K LEXHDR1,LEXHDR2 S (LEXHDR1,LEXHDR2,LEXHDR2(1))="",LEXQUIET=1
"RTN","LEX10CX3",200,0)
 I $G(LEX0FND)'>0 D
"RTN","LEX10CX3",201,0)
 . S:$O(LEXSRC(0))>0 LEXHDR1(1)="Unable to suggest an ICD-10 code.",LEXHDR2=""
"RTN","LEX10CX3",202,0)
 . S:$L(LEXSRCC)&($L(LEXSRCS)) LEXHDR1(1)="Unable to suggest an ICD-10 code, search for an acceptable ICD-10",LEXHDR1(2)="code for "_LEXSRCS_" code "_LEXSRCC
"RTN","LEX10CX3",203,0)
 I $G(LEX0FND)>0 D
"RTN","LEX10CX3",204,0)
 . S:$O(LEXSRC(0))>0 LEXHDR1(1)="No suggestions were selected, select an acceptable ICD-10 code.",LEXHDR2=""
"RTN","LEX10CX3",205,0)
 . S:$L(LEXSRCC)&($L(LEXSRCS)) LEXHDR1(1)="No suggestions were selected, select an acceptable ICD-10 code",LEXHDR1(2)="for "_LEXSRCS_" code "_LEXSRCC
"RTN","LEX10CX3",206,0)
 S:$L(LEXSRCC)&($L(LEXSRCS))&($L(LEXSRCT)) LEXHDR2(1)=LEXSRCT
"RTN","LEX10CX3",207,0)
 D:$L(LEXHDR2(1)) PAR^LEX10CX4(.LEXHDR2,60)
"RTN","LEX10CX3",208,0)
 W:$L($G(LEXHDR1(1))) !!," ",$G(LEXHDR1(1))
"RTN","LEX10CX3",209,0)
 W:$L($G(LEXHDR1(2))) !," ",$G(LEXHDR1(2))
"RTN","LEX10CX3",210,0)
 W:$L($G(LEXHDR2(1))) !!,"   ",$G(LEXHDR2(1))
"RTN","LEX10CX3",211,0)
 W:$L($G(LEXHDR2(2))) !,"   ",$G(LEXHDR2(2))
"RTN","LEX10CX3",212,0)
 W:$L($G(LEXHDR2(3))) !,"   ",$G(LEXHDR2(3))
"RTN","LEX10CX3",213,0)
 S LEXCDT=$$FMADD^XLFDT($$IMPDATE^LEXU("10D"),3)
"RTN","LEX10CX3",214,0)
 S LEXTD=$$DT^XLFDT S:LEXTD>LEXCDT LEXCDT=LEXTD
"RTN","LEX10CX3",215,0)
 S LEXSAB="10D",LEXSRI=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEX10CX3",216,0)
 Q:+LEXSRI'>0!('$D(^LEX(757.03,+LEXSRI,0))) -1
"RTN","LEX10CX3",217,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRI,0)),"^",2) Q:'$L(LEXNOM) -1
"RTN","LEX10CX3",218,0)
 K LEXA S DIC("A")=" Enter "_LEXNOM_" code or text:  "
"RTN","LEX10CX3",219,0)
 S DIC("S")="I $$SO^LEXU(Y,"""_LEXSAB_""",+($G(LEXCDT)))"
"RTN","LEX10CX3",220,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J)
"RTN","LEX10CX3",221,0)
 D CONFIG^LEXSET(LEXSAB,LEXSAB,LEXCDT)
"RTN","LEX10CX3",222,0)
 S ^TMP("LEXSCH",$J,"DIS",0)=LEXSAB
"RTN","LEX10CX3",223,0)
 S ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEX10CX3",224,0)
 S DIC(0)="AEQMZ",DIC="^LEX(757.01," K X
"RTN","LEX10CX3",225,0)
 D ^DIC Q:+Y'>0 -1 S X="" I +Y>0 D
"RTN","LEX10CX3",226,0)
 . K LEXA N LEXY,LEXIEN,LEXEX,LEXSO S LEXY=Y,Y=-1,LEXIEN=+LEXY
"RTN","LEX10CX3",227,0)
 . S LEXEX=$P($G(^LEX(757.01,+LEXIEN,0)),"^",1) Q:'$L(LEXEX)
"RTN","LEX10CX3",228,0)
 . S LEXSO=$$SO^LEX10CX5(LEXIEN,LEXSAB,LEXCDT) Q:'$L(LEXSO)
"RTN","LEX10CX3",229,0)
 . S LEXA(1)=LEXIEN_"^"_LEXEX_"^"_LEXSO,LEXA(0)=1,Y=$G(LEXY)
"RTN","LEX10CX3",230,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J)
"RTN","LEX10CX3",231,0)
 S X="" S:+($G(LEXA(0)))>0 X=+($G(LEXA(0))) K LEXVDT
"RTN","LEX10CX3",232,0)
 Q X
"RTN","LEX10CX3",233,0)
 ;
"RTN","LEX10CX3",234,0)
 ; Miscellaneous
"RTN","LEX10CX3",235,0)
EC(X,Y) ;   Expression Code for SAB
"RTN","LEX10CX3",236,0)
 N LEXC,LEXE,LEXN,LEXS,LEXSAB,LEXSRC
"RTN","LEX10CX3",237,0)
 S LEXE=+($G(X)) Q:'$D(^LEX(757.01,+LEXE,0)) ""
"RTN","LEX10CX3",238,0)
 Q:'$D(^LEX(757.02,"B",+LEXE)) ""
"RTN","LEX10CX3",239,0)
 S LEXSAB=$G(Y) Q:'$L(LEXSAB) ""
"RTN","LEX10CX3",240,0)
 S LEXSRC=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEX10CX3",241,0)
 I +LEXSRC'>0,LEXSAB?1N.N D
"RTN","LEX10CX3",242,0)
 . S:$D(^LEX(757.03,+LEXSAB,0)) LEXSRC=+LEXSAB
"RTN","LEX10CX3",243,0)
 Q:+LEXSRC'>0 ""  S LEXC="",LEXS=0
"RTN","LEX10CX3",244,0)
 F  S LEXS=$O(^LEX(757.02,"B",LEXE,LEXS)) Q:+LEXS'>0  D
"RTN","LEX10CX3",245,0)
 . Q:$L(LEXC)  N LEXN S LEXN=$G(^LEX(757.02,+LEXS,0))
"RTN","LEX10CX3",246,0)
 . Q:$P(LEXN,"^",3)'=LEXSRC
"RTN","LEX10CX3",247,0)
 . Q:$P(LEXN,"^",5)'=1  S LEXC=$P(LEXN,"^",2)
"RTN","LEX10CX3",248,0)
 S X=LEXC
"RTN","LEX10CX3",249,0)
 Q X
"RTN","LEX10CX3",250,0)
TM(X,Y) ;   Trim Y
"RTN","LEX10CX3",251,0)
 S X=$G(X),Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10CX3",252,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10CX3",253,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10CX3",254,0)
 Q X
"RTN","LEX10CX4")
0^173^B37820297
"RTN","LEX10CX4",1,0)
LEX10CX4 ;ISL/KER - ICD-10 Cross-Over - Ask ;04/21/2014
"RTN","LEX10CX4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CX4",3,0)
 ;               
"RTN","LEX10CX4",4,0)
 ; Global Variables
"RTN","LEX10CX4",5,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10CX4",6,0)
 ;               
"RTN","LEX10CX4",7,0)
 ; External References
"RTN","LEX10CX4",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEX10CX4",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10CX4",10,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10CX4",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10CX4",12,0)
 ;               
"RTN","LEX10CX4",13,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10CX4",14,0)
 ;     LEX0FND,LEX0REV,LEX0SEL NEWed in LEX10CX
"RTN","LEX10CX4",15,0)
 ;               
"RTN","LEX10CX4",16,0)
ASK(LEXA,LEXB) ;   Ask for Selection
"RTN","LEX10CX4",17,0)
 N LEXSRCO,LEXSRTX,LEXSRNM,LEXANS,LEXFND,LEXI,LEXIND,LEXLEN,LEXT
"RTN","LEX10CX4",18,0)
 S Y=-1,LEXFND=+($G(LEXB(0))) Q:LEXFND'>0  S LEX0FND=1
"RTN","LEX10CX4",19,0)
 S LEXSRCO=$G(LEXA("SOURCE","SOE"))
"RTN","LEX10CX4",20,0)
 S LEXSRTX=$$UP^XLFSTR($G(LEXA("SOURCE","EXP")))
"RTN","LEX10CX4",21,0)
 S LEXSRNM=$G(LEXA("SOURCE","SRC"))
"RTN","LEX10CX4",22,0)
 W ! I $L($G(LEXSRTX)),$L($G(LEXSRCO)) D
"RTN","LEX10CX4",23,0)
 . W !," ",LEXSRNM," ",LEXSRCO
"RTN","LEX10CX4",24,0)
 . N LEXIND,LEXLEN,LEXT,LEXI S LEXIND=18,LEXT(1)=LEXSRTX
"RTN","LEX10CX4",25,0)
 . D PAR(.LEXT,50) W ?22," ",$G(LEXT(1))
"RTN","LEX10CX4",26,0)
 . S LEXI=1 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX4",27,0)
 . . N LEXTX2 S LEXTX2=$$TM($G(LEXT(LEXI))) Q:'$L(LEXTX2)
"RTN","LEX10CX4",28,0)
 . . W !,?23,LEXTX2
"RTN","LEX10CX4",29,0)
 S:+LEXFND=1 LEXANS=$$ONE S:+LEXFND>1 LEXANS=$$MUL
"RTN","LEX10CX4",30,0)
 I LEXANS>0 D  S:+($G(X))'>0 X="" S:+($G(Y))'>0 Y=-1 Q
"RTN","LEX10CX4",31,0)
 . S X="",Y=-1 D X(.LEXA),Y(LEXANS,.LEXB)
"RTN","LEX10CX4",32,0)
 . Q:+($G(X))>0&(+($G(Y))>0)  S X="",Y=-1
"RTN","LEX10CX4",33,0)
 I LEXANS'>0 K X,Y,LEXB S X="",Y=-1
"RTN","LEX10CX4",34,0)
 Q
"RTN","LEX10CX4",35,0)
ONE(X) ;     One Entry Found - Needs LEXB
"RTN","LEX10CX4",36,0)
 N LEXIEN,LEXLN,LEXSO,LEXTEXT N DIR
"RTN","LEX10CX4",37,0)
 N LEXTXT,Y S LEXTEXT=$G(LEXB(1)),LEXIEN=+LEXTEXT
"RTN","LEX10CX4",38,0)
 S LEXSO=$P(LEXTEXT,U,2),LEXTEXT=$P(LEXTEXT,U,3)
"RTN","LEX10CX4",39,0)
 S LEXTXT(1)=LEXSO_"   "_LEXTEXT D PAR(.LEXTXT,64)
"RTN","LEX10CX4",40,0)
 S DIR("A",1)=" One ICD-10 suggestion found",DIR("A",2)=" "
"RTN","LEX10CX4",41,0)
 S DIR("A",3)="     "_$G(LEXTXT(1)),LEXLN=3
"RTN","LEX10CX4",42,0)
 I $L($G(LEXTXT(2))) S LEXLN=LEXLN+1 D
"RTN","LEX10CX4",43,0)
 . S DIR("A",LEXLN)="                     "_$G(LEXTXT(2))
"RTN","LEX10CX4",44,0)
 S LEXLN=LEXLN+1,DIR("A",LEXLN)=" ",LEXLN=LEXLN+1
"RTN","LEX10CX4",45,0)
 S DIR("A")="   OK?  ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","LEX10CX4",46,0)
 D ^DIR S LEX0REV=1 S:+Y>0 LEX0SEL=1 Q:+Y>0 1
"RTN","LEX10CX4",47,0)
 Q:X["^^"!($D(DTOUT)) "^^" Q:X["^" "^"
"RTN","LEX10CX4",48,0)
 Q -1
"RTN","LEX10CX4",49,0)
MUL(X) ;     Multiple Entries Found - Needs LEXB
"RTN","LEX10CX4",50,0)
 N LEXENT,LEXIEN,LEXIT,LEXITEM,LEXLEN,LEXMAX,LEXMAT,LEXN,LEXSEL
"RTN","LEX10CX4",51,0)
 N LEXSO,LEXTEXT,LEXTOT,Y S LEXLEN=+($G(LEXN))
"RTN","LEX10CX4",52,0)
 S:+LEXLEN'>4 LEXLEN=5  N LEXN
"RTN","LEX10CX4",53,0)
 S (LEXMAX,LEXENT,LEXSEL,LEXIT)=0
"RTN","LEX10CX4",54,0)
 S U="^",LEXTOT=$G(LEXB(0))
"RTN","LEX10CX4",55,0)
 S LEXSEL=0 G:+LEXTOT=0 MULQ
"RTN","LEX10CX4",56,0)
 S LEXMAT=LEXTOT_" ICD-10 suggestion"_$S(+LEXTOT>1:"s",1:"")_" found"
"RTN","LEX10CX4",57,0)
 W:+LEXTOT>0 !!," ",LEXMAT
"RTN","LEX10CX4",58,0)
 F LEXENT=1:1:LEXTOT Q:LEXIT  D  Q:LEXIT
"RTN","LEX10CX4",59,0)
 . I ((LEXSEL>0)&(LEXSEL<LEXENT+1)) S LEXIT=1 Q
"RTN","LEX10CX4",60,0)
 . N LEXITEM,LEXIEN,LEXTEXT,LEXSO
"RTN","LEX10CX4",61,0)
 . S LEXITEM=$G(LEXB(LEXENT))
"RTN","LEX10CX4",62,0)
 . S LEXIEN=+LEXITEM,LEXSO=$P(LEXITEM,U,3)
"RTN","LEX10CX4",63,0)
 . S LEXTEXT=$P(LEXITEM,U,2) Q:+LEXIEN'>0
"RTN","LEX10CX4",64,0)
 . Q:'$L(LEXSO)  Q:'$L(LEXTEXT)
"RTN","LEX10CX4",65,0)
 . S LEXMAX=LEXENT W:LEXENT#LEXLEN=1 ! D MULW
"RTN","LEX10CX4",66,0)
 . S:LEXMAX=LEXTOT LEX0REV=1
"RTN","LEX10CX4",67,0)
 . W:LEXENT#LEXLEN=0 !
"RTN","LEX10CX4",68,0)
 . S:LEXENT#LEXLEN=0 LEXSEL=$$MULS(LEXMAX,LEXENT)
"RTN","LEX10CX4",69,0)
 . S:LEXSEL["^" LEXIT=1
"RTN","LEX10CX4",70,0)
 I LEXENT#LEXLEN'=0,+LEXSEL=0 D
"RTN","LEX10CX4",71,0)
 . W ! S LEXSEL=$$MULS(LEXMAX,LEXENT)
"RTN","LEX10CX4",72,0)
 . S:LEXSEL["^" LEXIT=1
"RTN","LEX10CX4",73,0)
 G MULQ
"RTN","LEX10CX4",74,0)
 Q X
"RTN","LEX10CX4",75,0)
MULW ;       Write Multiple - Needs LEXENT,LEXIEN,LEXSO,LEXTXT
"RTN","LEX10CX4",76,0)
 Q:+($G(LEXENT))'>0  Q:+($G(LEXIEN))'>0
"RTN","LEX10CX4",77,0)
 Q:'$L($G(LEXTEXT))  Q:'$L($G(LEXSO))
"RTN","LEX10CX4",78,0)
 N LEXI,LEXIND,LEXTAB,LEXTXT,LEXTX2
"RTN","LEX10CX4",79,0)
 S LEXTAB=8,LEXIND=18
"RTN","LEX10CX4",80,0)
 W !,$J(LEXENT,5),".",?LEXTAB,LEXSO
"RTN","LEX10CX4",81,0)
 S LEXTXT(1)=LEXTEXT D PAR(.LEXTXT,54)
"RTN","LEX10CX4",82,0)
 W ?LEXIND,$G(LEXTXT(1))
"RTN","LEX10CX4",83,0)
 S LEXI=1 F  S LEXI=$O(LEXTXT(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX4",84,0)
 . N LEXTX2 S LEXTX2=$$TM($G(LEXTXT(LEXI))) Q:'$L(LEXTX2)
"RTN","LEX10CX4",85,0)
 . W !,?LEXIND,LEXTX2
"RTN","LEX10CX4",86,0)
 Q
"RTN","LEX10CX4",87,0)
MULS(X,Y) ;       Select Multiple - Needs LEXB, Uses LEXIT,LEXTOT
"RTN","LEX10CX4",88,0)
 N DIR,DIRB,LEXHLP,LEXLAST,LEXMAX
"RTN","LEX10CX4",89,0)
 N LEXNEXT,LEXRAN,LEXS,LEXENT,Y Q:+($G(LEXIT))>0 "^^"
"RTN","LEX10CX4",90,0)
 S LEXS=$G(X),LEXENT=$G(Y) N X
"RTN","LEX10CX4",91,0)
 S LEXMAX=+($G(LEXS)),LEXLAST=+($G(LEXENT))
"RTN","LEX10CX4",92,0)
 Q:LEXMAX=0 -1  S LEXRAN=" Select 1-"_LEXMAX_":  "
"RTN","LEX10CX4",93,0)
 S LEXNEXT=$O(LEXB(+LEXLAST)) I +LEXNEXT>0 D
"RTN","LEX10CX4",94,0)
 . S DIR("A")=" Press <RETURN> for more, "
"RTN","LEX10CX4",95,0)
 . S DIR("A")=DIR("A")_"'^' to exit, or"_LEXRAN
"RTN","LEX10CX4",96,0)
 S:+LEXNEXT'>0 DIR("A")=LEXRAN
"RTN","LEX10CX4",97,0)
 S LEXHLP="    Answer must be from 1 to "_LEXMAX
"RTN","LEX10CX4",98,0)
 S LEXHLP=LEXHLP_", or <Return> to continue"
"RTN","LEX10CX4",99,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","LEX10CX4",100,0)
 S (DIR("?"),DIR("??"))="^D MULSH^ICDEXLK2"
"RTN","LEX10CX4",101,0)
 S DIR(0)="NAO^1:"_LEXMAX_":0" D ^DIR
"RTN","LEX10CX4",102,0)
 S:X["^"&(LEXENT=+($G(LEXTOT))) (X,Y)="^^^"
"RTN","LEX10CX4",103,0)
 S:X["^^"!($D(DTOUT)) LEXIT=1,X="^^"
"RTN","LEX10CX4",104,0)
 I X["^^"!(+($G(LEXIT))>0) Q "^^"
"RTN","LEX10CX4",105,0)
 S LEXS=+Y S:$D(DTOUT)!(X[U) LEXS=U
"RTN","LEX10CX4",106,0)
 K DIR N LEXIT,LEXTOT
"RTN","LEX10CX4",107,0)
 S:+LEXS>0&($D(LEXB(+LEXS))) LEX0SEL=1
"RTN","LEX10CX4",108,0)
 Q LEXS
"RTN","LEX10CX4",109,0)
MULSH ;       Select Multiple Help
"RTN","LEX10CX4",110,0)
 I $L($G(LEXHLP)) W !,$G(LEXHLP) Q
"RTN","LEX10CX4",111,0)
 Q
"RTN","LEX10CX4",112,0)
MULQ ;       Quit Multiple
"RTN","LEX10CX4",113,0)
 Q:+LEXSEL'>0 -1  S X=+LEXSEL
"RTN","LEX10CX4",114,0)
 Q X
"RTN","LEX10CX4",115,0)
 ; 
"RTN","LEX10CX4",116,0)
 ; Miscellaneous
"RTN","LEX10CX4",117,0)
PAR(LEXC,LEXL) ;   Parse Array
"RTN","LEX10CX4",118,0)
 N %,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXIEN,I,X,Z
"RTN","LEX10CX4",119,0)
 K ^UTILITY($J,"W") Q:'$D(LEXC)  S LEXL=+($G(LEXL))
"RTN","LEX10CX4",120,0)
 S:+LEXL'>0 LEXL=79 S DIWL=1,DIWF="C"_+LEXL S LEXIEN=0
"RTN","LEX10CX4",121,0)
 F  S LEXIEN=$O(LEXC(LEXIEN)) Q:+LEXIEN=0  D
"RTN","LEX10CX4",122,0)
 . S X=$G(LEXC(LEXIEN)) D ^DIWP
"RTN","LEX10CX4",123,0)
 K LEXC S LEXIEN=0
"RTN","LEX10CX4",124,0)
 F  S LEXIEN=$O(^UTILITY($J,"W",1,LEXIEN)) Q:+LEXIEN=0  D
"RTN","LEX10CX4",125,0)
 . S LEXC(LEXIEN)=$$TM($G(^UTILITY($J,"W",1,LEXIEN,0))," ")
"RTN","LEX10CX4",126,0)
 K ^UTILITY($J,"W")
"RTN","LEX10CX4",127,0)
 Q
"RTN","LEX10CX4",128,0)
TM(X,Y) ;   Trim Y
"RTN","LEX10CX4",129,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10CX4",130,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10CX4",131,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10CX4",132,0)
 Q X
"RTN","LEX10CX4",133,0)
X(LEXA) ;   Set X
"RTN","LEX10CX4",134,0)
 N LEXEXP,LEXCOD,LEXNOM,LEXIEN K X S X=""
"RTN","LEX10CX4",135,0)
 S LEXEXP=$G(LEXA("SOURCE","EXP")) Q:'$L(LEXEXP)
"RTN","LEX10CX4",136,0)
 S LEXCOD=$G(LEXA("SOURCE","SOE")) Q:'$L(LEXCOD)
"RTN","LEX10CX4",137,0)
 S LEXNOM=$G(LEXA("SOURCE","SRC")) Q:'$L(LEXNOM)
"RTN","LEX10CX4",138,0)
 S LEXIEN=+($G(LEXA("SOURCE","Y"))) Q:'$L(LEXIEN)
"RTN","LEX10CX4",139,0)
 Q:+LEXIEN'>0  S X=LEXIEN_"^"_LEXEXP_"^"_LEXCOD_"^"_LEXNOM
"RTN","LEX10CX4",140,0)
 Q
"RTN","LEX10CX4",141,0)
Y(LEX,LEXB) ;   Set Y
"RTN","LEX10CX4",142,0)
 N LEXEXP,LEXCOD,LEXNOM,LEXIEN,LEXDAT
"RTN","LEX10CX4",143,0)
 N LEXDAT,LEXEIEN,LEXEX,LEXICDD,LEXSO,LEXSTA,LEXTD
"RTN","LEX10CX4",144,0)
 K Y S Y=-1 S LEX=+($G(LEX)),LEXDAT=$G(LEXB(+LEX))
"RTN","LEX10CX4",145,0)
 S LEXEXP=$P(LEXDAT,"^",2) Q:'$L(LEXEXP)
"RTN","LEX10CX4",146,0)
 S LEXCOD=$P(LEXDAT,"^",3) Q:'$L(LEXCOD)
"RTN","LEX10CX4",147,0)
 S LEXNOM="ICD-10-CM"
"RTN","LEX10CX4",148,0)
 S LEXIEN=+($P(LEXDAT,"^",1)) Q:'$L(LEXIEN)
"RTN","LEX10CX4",149,0)
 Q:+LEXIEN'>0  S Y=LEXIEN_"^"_LEXEXP_"^"_LEXCOD_"^"_LEXNOM
"RTN","LEX10CX4",150,0)
 Q
"RTN","LEX10CX4",151,0)
SAB(X) ;   Select Coding System
"RTN","LEX10CX4",152,0)
 N DIC,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,Y
"RTN","LEX10CX4",153,0)
 S DIC="^LEX(757.03,",DIC(0)="AEQM"
"RTN","LEX10CX4",154,0)
 S DIC("A")=" Select a Coding System:  "
"RTN","LEX10CX4",155,0)
 S LEXB=$P($G(^LEX(757.03,1,0)),"^",2) S:$L(LEXB) DIC("B")=LEXB
"RTN","LEX10CX4",156,0)
 S DIC("W")="N LEX1,LEX2 S LEX1=$P($G(^LEX(757.03,+Y,0)),U,2),"
"RTN","LEX10CX4",157,0)
 S DIC("W")=DIC("W")_"LEX2=$P($G(^LEX(757.03,+Y,0)),U,3) "
"RTN","LEX10CX4",158,0)
 S DIC("W")=DIC("W")_"S:$L(LEX2,"","")>2 LEX2=$P(LEX2,"","",1,"
"RTN","LEX10CX4",159,0)
 S DIC("W")=DIC("W")_"($L(LEX2,"","")-1)) W "" "",LEX1"
"RTN","LEX10CX4",160,0)
 S DIC("W")=DIC("W")_"_$J("" "",(12-$L(LEX1)))_""  ""_LEX2"
"RTN","LEX10CX4",161,0)
 S DIC("S")="I $E($P($G(^LEX(757.03,+Y,0)),""^"",1),1,3)'=""10D"""
"RTN","LEX10CX4",162,0)
 S DIC("W")="W ""   "",$P($G(^LEX(757.03,+Y,0)),U,2)"
"RTN","LEX10CX4",163,0)
 K X D ^DIC Q:X["^"!($D(DTOUT))!($D(DUOUT)) "^"
"RTN","LEX10CX4",164,0)
 S LEXB=$E($P($G(^LEX(757.03,+Y,0)),"^",1),1,3) Q:$L(LEXB)'=3 "^"
"RTN","LEX10CX4",165,0)
 Q:'$D(^LEX(757.03,"ASAB",LEXB)) "^"  S X=LEXB
"RTN","LEX10CX4",166,0)
 Q X
"RTN","LEX10CX5")
0^174^B45896269
"RTN","LEX10CX5",1,0)
LEX10CX5 ;ISL/KER - ICD-10 Cross-Over - Misc ;04/21/2014
"RTN","LEX10CX5",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10CX5",3,0)
 ;               
"RTN","LEX10CX5",4,0)
 ; Global Variables
"RTN","LEX10CX5",5,0)
 ;    None
"RTN","LEX10CX5",6,0)
 ;               
"RTN","LEX10CX5",7,0)
 ; External References
"RTN","LEX10CX5",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10CX5",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10CX5",10,0)
 ;               
"RTN","LEX10CX5",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10CX5",12,0)
 ;    None
"RTN","LEX10CX5",13,0)
 ;               
"RTN","LEX10CX5",14,0)
 ; Parse Expression into Segments
"RTN","LEX10CX5",15,0)
SEG(X,LEXS) ;   Get Segment Array
"RTN","LEX10CX5",16,0)
 N LEXA,LEXI,LEXSG,LEXSI,LEXT S LEXT=$G(X)
"RTN","LEX10CX5",17,0)
 S:'$L(LEXT) LEXT=$G(LEXS("SOURCE","EXP"))
"RTN","LEX10CX5",18,0)
 Q:'$L(LEXT)  D SEGS(LEXT,1,.LEXA) S LEXI=0
"RTN","LEX10CX5",19,0)
 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10CX5",20,0)
 . N LEXSG,LEXSI S LEXSG=$G(LEXA(LEXI)) Q:'$L(LEXSG)
"RTN","LEX10CX5",21,0)
 . S LEXSI=$O(LEXS("SEG"," "),-1)+1
"RTN","LEX10CX5",22,0)
 . S LEXS("SEG",LEXSI)=LEXSG
"RTN","LEX10CX5",23,0)
 Q
"RTN","LEX10CX5",24,0)
SEGS(X,Y,LEXA) ;     Parse Text into Segments
"RTN","LEX10CX5",25,0)
 N LEXBEG,LEXC,LEXCHR,LEXEND,LEXFRE,LEXI,LEXNUM,LEXORD,LEXSEG
"RTN","LEX10CX5",26,0)
 N LEXTMP,LEXTXT,LEXVAL,LEXFLG S LEXTXT=$$UP^XLFSTR(X)
"RTN","LEX10CX5",27,0)
 S LEXFLG=$G(Y) K LEXA,LEXTMP
"RTN","LEX10CX5",28,0)
 S LEXBEG=1 F LEXEND=1:1:$L(LEXTXT)+1 D
"RTN","LEX10CX5",29,0)
 . S LEXCHR=$E(LEXTXT,LEXEND)
"RTN","LEX10CX5",30,0)
 . I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[LEXCHR D
"RTN","LEX10CX5",31,0)
 . . S LEXSEG=$E(LEXTXT,LEXBEG,LEXEND-1),LEXBEG=LEXEND+1
"RTN","LEX10CX5",32,0)
 . . I $L(LEXSEG)>1,$L(LEXSEG)<31,$$EXC(LEXSEG) D
"RTN","LEX10CX5",33,0)
 . . . N LEXI,LEXNUM S LEXNUM=(246-$L(LEXSEG))
"RTN","LEX10CX5",34,0)
 . . . S LEXI=$O(LEXTMP(" "),-1)+1,LEXTMP(LEXI)=LEXSEG
"RTN","LEX10CX5",35,0)
 I +($G(LEXFLG))'>0 S LEXI="" D
"RTN","LEX10CX5",36,0)
 . F  S LEXI=$O(LEXTMP(LEXI)) Q:'$L(LEXI)  D
"RTN","LEX10CX5",37,0)
 . . S LEXA(LEXI)=LEXTMP(LEXI)
"RTN","LEX10CX5",38,0)
 I +($G(LEXFLG))>0 D
"RTN","LEX10CX5",39,0)
 . N LEXORD,LEXI,LEXC K LEXORD
"RTN","LEX10CX5",40,0)
 . S LEXI="" F  S LEXI=$O(LEXTMP(LEXI)) Q:'$L(LEXI)  D
"RTN","LEX10CX5",41,0)
 . . N LEXFRE,LEXVAL S LEXVAL=$G(LEXTMP(LEXI))
"RTN","LEX10CX5",42,0)
 . . I LEXVAL="0" S LEXORD(0)=LEXVAL Q
"RTN","LEX10CX5",43,0)
 . . S LEXFRE=$$FREQ^LEXU(LEXVAL) Q:+LEXFRE'>0
"RTN","LEX10CX5",44,0)
 . . S LEXORD(LEXFRE)=LEXVAL
"RTN","LEX10CX5",45,0)
 . S LEXI="" F  S LEXI=$O(LEXORD(LEXI)) Q:'$L(LEXI)  D
"RTN","LEX10CX5",46,0)
 . . S LEXVAL=$G(LEXORD(LEXI))
"RTN","LEX10CX5",47,0)
 . . I LEXI="0" S LEXA(LEXI)=LEXVAL Q
"RTN","LEX10CX5",48,0)
 . . S LEXC=$O(LEXA(" "),-1)+1,LEXA(LEXC)=LEXVAL
"RTN","LEX10CX5",49,0)
 Q
"RTN","LEX10CX5",50,0)
EXC(X) ;     Exclude from Lookup
"RTN","LEX10CX5",51,0)
 Q:$L($G(X))'>1 0
"RTN","LEX10CX5",52,0)
 Q:"^AS^ABOUT^AFTER^ALMOST^ALSO^ALTHOUGH^AND^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",53,0)
 Q:"^ANOTHER^ANY^ARE^AREA^AREAS^AT^BE^BEEN^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",54,0)
 Q:"^BEFORE^BEST^BUT^BY^CAN^CONTROLLED^COULD^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",55,0)
 Q:"^COMPLICATINS^DONE^DUE^EACH^EVEN^FAR^FOR^FORM^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",56,0)
 Q:"^FORMS^FORTH^FROM^GIVEN^HAD^^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",57,0)
 Q:"^HAVE^HER^HERE^HERSELF^HIM^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",58,0)
 Q:"^HIMSELF^HIS^HOW^IN^INTO^IS^IT^IT'S^ITS^^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",59,0)
 Q:"^ITS'^ITSELF^KIND^LIKE^LOST^MANY^MAY^MERE^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",60,0)
 Q:"^MORE^MOST^MUST^NEW^NOT^NOTE^NOW^OF^OFTEN^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",61,0)
 Q:"^ON^ONESELF^ONLY^OR^OUR^OURS^OUT^OTHER^OWN^PUT^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",62,0)
 Q:"^SAME^SET^SHOULD^SOME^STATED^SUCH^SURE^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",63,0)
 Q:"^THAN^THAT^THE^THEN^THERE^THEREBY^THESE^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",64,0)
 Q:"^THEY^THIS^THUS^TO^TOO^UPON^UNSPECIFIED^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",65,0)
 Q:"^UNCONTROLLED^W/^W/O^WAS^WHAT^WHEN^WHERE^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",66,0)
 Q:"^WHICH^WHO^WHOSE^WITH^WITHIN^WITHOUT^WO^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",67,0)
 Q:"^WOULD^"[("^"_$G(X)_"^") 0
"RTN","LEX10CX5",68,0)
 Q 1
"RTN","LEX10CX5",69,0)
  ;
"RTN","LEX10CX5",70,0)
  ; Miscellaneous
"RTN","LEX10CX5",71,0)
RN(X,Y) ;   Common Roman Numerals
"RTN","LEX10CX5",72,0)
 N LEX1,LEX2,LEXI,LEXK,LEXP,LEXS,LEXS2,LEXSG,LEXSGI,LEXX,LEXCT,LEXTX
"RTN","LEX10CX5",73,0)
 S LEXSG=$G(X),LEXX=$G(Y)
"RTN","LEX10CX5",74,0)
 S LEXS="I;1^II;2^III;3^IV;4^V;5^VI;6^VII;7"
"RTN","LEX10CX5",75,0)
 S LEXS=LEXS_"^VIII;8^IX;9^X;10^XI;11^XII;12"
"RTN","LEX10CX5",76,0)
 S LEXS2=("^"_$TR(LEXS,";","^")_"^")
"RTN","LEX10CX5",77,0)
 Q:LEXS2'[("^"_LEXSG_"^") 0
"RTN","LEX10CX5",78,0)
 S LEXK=0 F LEXP=1:1 Q:'$L($P(LEXS,"^",LEXP))  D  Q:LEXK
"RTN","LEX10CX5",79,0)
 . S LEX1=$P($P(LEXS,"^",LEXP),";",1),LEX2=$P($P(LEXS,"^",LEXP),";",2)
"RTN","LEX10CX5",80,0)
 . I $E(LEXX,1,($L(LEX1)+1))=(LEX1_" ") S LEXK=1 Q
"RTN","LEX10CX5",81,0)
 . I $E(LEXX,1,($L(LEX2)+1))=(LEX2_" ") S LEXK=1 Q
"RTN","LEX10CX5",82,0)
 . I (LEXX[(" "_LEX1_" ")!(LEXX[(" "_LEX1_","))) S LEXK=1 Q
"RTN","LEX10CX5",83,0)
 . I (LEXX[(" "_LEX2_" ")!(LEXX[(" "_LEX2_","))) S LEXK=1 Q
"RTN","LEX10CX5",84,0)
 . I $E(LEXX,($L(LEXX)-($L(LEX1))),($L(LEXX)+1))=(" "_LEX1) S LEXK=1 Q
"RTN","LEX10CX5",85,0)
 . I $E(LEXX,($L(LEXX)-($L(LEX2))),($L(LEXX)+1))=(" "_LEX2) S LEXK=1 Q
"RTN","LEX10CX5",86,0)
 Q LEXK
"RTN","LEX10CX5",87,0)
TY(X,Y) ;   Common Types
"RTN","LEX10CX5",88,0)
 Q 0
"RTN","LEX10CX5",89,0)
 N LEXOR,LEXTX,LEXI,LEXS,LEXS2,LEX1,LEX2,LEXOK,LEXP,LEXT1,LEXT2,LEXSG,LEXSGI,LEXCT
"RTN","LEX10CX5",90,0)
 S LEXOR=$G(X),LEXTX=$G(Y)
"RTN","LEX10CX5",91,0)
 S LEXS="I;1^II;2^III;3^IV;4^V;5^VI;6^VII;7"
"RTN","LEX10CX5",92,0)
 S LEXS=LEXS_"^VIII;8^IX;9^X;10^XI;11^XII;12"
"RTN","LEX10CX5",93,0)
 S LEXT1=LEXOR_" ",LEXT2=LEXTX_" ",LEXOK=0
"RTN","LEX10CX5",94,0)
 Q:(LEXT1_LEXT2)'["TYPE"&((LEXT1_LEXT2)'["OTH") 0
"RTN","LEX10CX5",95,0)
 F LEXP=1:1 Q:'$L($P(LEXS,"^",LEXP))  D  Q:LEXOK'=0
"RTN","LEX10CX5",96,0)
 . S LEX1=$P($P(LEXS,"^",LEXP),";",1),LEX2=$P($P(LEXS,"^",LEXP),";",2)
"RTN","LEX10CX5",97,0)
 . I LEXT1[("TYPE "_LEX1_" "),LEXT2[("TYPE "_LEX1_" ") S LEXOK=1 Q
"RTN","LEX10CX5",98,0)
 . I LEXT1[("TYPE "_LEX1_","),LEXT2[("TYPE "_LEX1_",") S LEXOK=1 Q
"RTN","LEX10CX5",99,0)
 . I LEXT1[("TYPE "_LEX1_" "),LEXT2[("TYPE "_LEX2_" ") S LEXOK=1 Q
"RTN","LEX10CX5",100,0)
 . I LEXT1[("TYPE "_LEX1_","),LEXT2[("TYPE "_LEX2_",") S LEXOK=1 Q
"RTN","LEX10CX5",101,0)
 . I LEXT1[("TYPE "_LEX2_" "),LEXT2[("TYPE "_LEX2_" ") S LEXOK=1 Q
"RTN","LEX10CX5",102,0)
 . I LEXT1[("TYPE "_LEX2_","),LEXT2[("TYPE "_LEX2_",") S LEXOK=1 Q
"RTN","LEX10CX5",103,0)
 . I LEXT1[("TYPE "_LEX2_" "),LEXT2[("TYPE "_LEX1_" ") S LEXOK=1 Q
"RTN","LEX10CX5",104,0)
 . I LEXT1[("TYPE "_LEX2_","),LEXT2[("TYPE "_LEX1_",") S LEXOK=1 Q
"RTN","LEX10CX5",105,0)
 . I LEXT1[LEX1 D
"RTN","LEX10CX5",106,0)
 . . I LEXTX'[("TYPE "_LEX2_" ")&(LEXTX'[("TYPE "_LEX1_" ")) D
"RTN","LEX10CX5",107,0)
 . . . I LEXTX'[("TYPE "_LEX2_",")&(LEXTX'[("TYPE "_LEX1_",")) D
"RTN","LEX10CX5",108,0)
 . . . . I LEXT2["OTHER"!(LEXT2["OTH ") S LEXOK=1 Q
"RTN","LEX10CX5",109,0)
 . I LEXT1[("TYPE "_LEX2_" ") D
"RTN","LEX10CX5",110,0)
 . . I LEXTX'[("TYPE "_LEX2_" ")&(LEXTX'[("TYPE "_LEX1_" ")) D
"RTN","LEX10CX5",111,0)
 . . . I LEXTX'[("TYPE "_LEX2_",")&(LEXTX'[("TYPE "_LEX1_",")) D
"RTN","LEX10CX5",112,0)
 . . . . I LEXT2["OTHER"!(LEXT2["OTH ") S LEXOK=1 Q
"RTN","LEX10CX5",113,0)
 Q LEXOK
"RTN","LEX10CX5",114,0)
TM(X,Y) ;   Trim Y
"RTN","LEX10CX5",115,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10CX5",116,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10CX5",117,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10CX5",118,0)
 Q X
"RTN","LEX10CX5",119,0)
SO(X,Y,Z) ;   Source Code
"RTN","LEX10CX5",120,0)
 N LEXEF,LEXHI,LEXHIS,LEXPER,LEXS,LEXSO,LEXSRI,LEXE,LEXSAB
"RTN","LEX10CX5",121,0)
 N LEXCDT,LEXSTA,LEXTSO S LEXE=+($G(X))
"RTN","LEX10CX5",122,0)
 S LEXSAB=$G(Y),LEXCDT=$G(Z) Q:LEXE'>0 ""
"RTN","LEX10CX5",123,0)
 Q:'$D(^LEX(757.01,+LEXE,0)) ""  Q:$L(LEXSAB)'=3 ""
"RTN","LEX10CX5",124,0)
 Q:'$D(^LEX(757.03,"ASAB",LEXSAB)) ""
"RTN","LEX10CX5",125,0)
 S:LEXCDT'?7N LEXCDT=$$DT^XLFDT
"RTN","LEX10CX5",126,0)
 S LEXSRI=$O(^LEX(757.03,"ASAB",LEXSAB,0)) Q:LEXSRI'>0 ""
"RTN","LEX10CX5",127,0)
 Q:'$D(^LEX(757.03,LEXSRI,0)) ""  S LEXS=0,LEXSO=""
"RTN","LEX10CX5",128,0)
 F  S LEXS=$O(^LEX(757.02,"B",LEXE,LEXS)) Q:+LEXS'>0  D  Q:$L(LEXSO)
"RTN","LEX10CX5",129,0)
 . Q:$P($G(^LEX(757.02,LEXS,0)),"^",3)'=LEXSRI
"RTN","LEX10CX5",130,0)
 . S LEXEF=$O(^LEX(757.02,LEXS,4,"B",(LEXCDT+.001)),-1) Q:LEXEF'?7N
"RTN","LEX10CX5",131,0)
 . S LEXHI=$O(^LEX(757.02,LEXS,4,"B",+LEXEF," "),-1) Q:LEXHI'>0
"RTN","LEX10CX5",132,0)
 . S LEXHIS=$G(^LEX(757.02,LEXS,4,LEXHI,0))
"RTN","LEX10CX5",133,0)
 . S LEXSTA=$P(LEXHIS,"^",2),LEXPER=$P($G(^LEX(757.02,LEXS,0)),"^",5)
"RTN","LEX10CX5",134,0)
 . I LEXSTA>0,LEXPER>0 S LEXSO=$P($G(^LEX(757.02,LEXS,0)),"^",2)
"RTN","LEX10CX5",135,0)
 . I LEXSTA>0 S LEXTSO=$P($G(^LEX(757.02,LEXS,0)),"^",2)
"RTN","LEX10CX5",136,0)
 S:'$L(LEXSO) LEXSO=$G(LEXTSO) S X=LEXSO
"RTN","LEX10CX5",137,0)
 Q X
"RTN","LEX10CX5",138,0)
LA(X,Y,Z) ;   Last Activation
"RTN","LEX10CX5",139,0)
 N LEX,LEXD,LEXSRI,LEXT,LEXTD,LEXS,LEXSAB,LEXCDT S LEXTD=$$DT^XLFDT
"RTN","LEX10CX5",140,0)
 S LEXS=$G(X),LEXSAB=$G(Y),LEXCDT=$G(Z) Q:'$L(LEXSAB) LEXTD+1
"RTN","LEX10CX5",141,0)
 S LEXSRI=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEX10CX5",142,0)
 Q:+LEXSRI'>0 (LEXTD+2)  S LEXD=" ",LEXT=""
"RTN","LEX10CX5",143,0)
 S:$P($G(LEXCDT),".",1)?7N LEXD=($P($G(LEXCDT),".",1))+.001
"RTN","LEX10CX5",144,0)
 F  S LEXD=$O(^LEX(757.02,"ACT",(LEXS_" "),3,LEXD),-1) Q:LEXD'?7N  D
"RTN","LEX10CX5",145,0)
 . S LEX=0
"RTN","LEX10CX5",146,0)
 . F  S LEX=$O(^LEX(757.02,"ACT",(LEXS_" "),3,LEXD,LEX)) Q:+LEX'>0  D
"RTN","LEX10CX5",147,0)
 . . I $P($G(^LEX(757.02,LEX,0)),"^",3)=LEXSRI D
"RTN","LEX10CX5",148,0)
 . . . S LEXT=LEXD,LEX=$O(^LEX(757.02," "),-1)+1,LEXD=0
"RTN","LEX10CX5",149,0)
 I $L(LEXT) D
"RTN","LEX10CX5",150,0)
 . S LEXD=" ",LEXT=""
"RTN","LEX10CX5",151,0)
 . F  S LEXD=$O(^LEX(757.02,"ACT",(LEXS_" "),1,LEXD),-1) Q:LEXD'?7N  D
"RTN","LEX10CX5",152,0)
 . . S LEX=0
"RTN","LEX10CX5",153,0)
 . . F  S LEX=$O(^LEX(757.02,"ACT",(LEXS_" "),1,LEXD,LEX)) Q:+LEX'>0  D
"RTN","LEX10CX5",154,0)
 . . . I $P($G(^LEX(757.02,LEX,0)),"^",3)=LEXSRI D
"RTN","LEX10CX5",155,0)
 . . . . S LEXT=LEXD,LEX=$O(^LEX(757.02," "),-1)+1,LEXD=0
"RTN","LEX10CX5",156,0)
 S:LEXT'?7N LEXT=LEXTD
"RTN","LEX10CX5",157,0)
 Q LEXT
"RTN","LEX10CX5",158,0)
SA(LEXA) ;   Show Array
"RTN","LEX10CX5",159,0)
 S LEXA=$G(LEXA) Q:'$L(LEXA)  Q:$L(LEXA)>8
"RTN","LEX10CX5",160,0)
 F  S LEXA=$Q(@LEXA) Q:'$L(LEXA)  D
"RTN","LEX10CX5",161,0)
 . W !,LEXA,"=",@LEXA
"RTN","LEX10CX5",162,0)
 Q
"RTN","LEX10DBC")
0^102^B9636063
"RTN","LEX10DBC",1,0)
LEX10DBC ;ISL/KER - ICD-10 Diagnosis Lookup by Code ;04/21/2014
"RTN","LEX10DBC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DBC",3,0)
 ;               
"RTN","LEX10DBC",4,0)
 ; Global Variables
"RTN","LEX10DBC",5,0)
 ;    ^TMP("LEXDX")       SACC 2.3.2.5.1
"RTN","LEX10DBC",6,0)
 ;               
"RTN","LEX10DBC",7,0)
 ; External References
"RTN","LEX10DBC",8,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10DBC",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DBC",10,0)
 ;               
"RTN","LEX10DBC",11,0)
I10C(LEXC,LEXA,LEXD,LEXN,LEXF) ; Lookup by Code, Return Pruned List
"RTN","LEX10DBC",12,0)
 ;
"RTN","LEX10DBC",13,0)
 ; Input
"RTN","LEX10DBC",14,0)
 ;   LEXC    ICD-10 DX Code       Required
"RTN","LEX10DBC",15,0)
 ;  .LEXA    Local Array (by Ref) Required
"RTN","LEX10DBC",16,0)
 ;   LEXD    Date (FM Format)     Optional (Default TODAY)
"RTN","LEX10DBC",17,0)
 ;   LEXL    Maximum to Return    Optional (Default = 30)
"RTN","LEX10DBC",18,0)
 ;   LEXF    Filter               Optional (Default 10D)
"RTN","LEX10DBC",19,0)
 ;  
"RTN","LEX10DBC",20,0)
 ; Output
"RTN","LEX10DBC",21,0)
 ; 
"RTN","LEX10DBC",22,0)
 ;   Code is found:
"RTN","LEX10DBC",23,0)
 ;   
"RTN","LEX10DBC",24,0)
 ;      LEXA(0)=# ^ PI  No to exceed lenght where possible
"RTN","LEX10DBC",25,0)
 ;      LEXA(#)=<code ien>_"^"_<code>_"^"_<activation date>
"RTN","LEX10DBC",26,0)
 ;      LEXA(#,0)=<expression ien>_"^"_<expression>
"RTN","LEX10DBC",27,0)
 ;   
"RTN","LEX10DBC",28,0)
 ;   No Code, Category is Returned:
"RTN","LEX10DBC",29,0)
 ;
"RTN","LEX10DBC",30,0)
 ;      LEXA(#)=<NULL>_"^"_<category>_"^"_<activation date> ^
"RTN","LEX10DBC",31,0)
 ;              <number of codes in the category>
"RTN","LEX10DBC",32,0)
 ;      LEXA(#,0)=<NULL>_"^"_<category name>
"RTN","LEX10DBC",33,0)
 ;   
"RTN","LEX10DBC",34,0)
 ;   Note:  Second piece of LEXA(0) is the pruning 
"RTN","LEX10DBC",35,0)
 ;          indicator and set to "1" if pruning
"RTN","LEX10DBC",36,0)
 ;          occurred
"RTN","LEX10DBC",37,0)
 ; 
"RTN","LEX10DBC",38,0)
 ; See WD^LEX10DP for DX Text Lookup by Keywords (Pruned)
"RTN","LEX10DBC",39,0)
 ; 
"RTN","LEX10DBC",40,0)
 K ^TMP("LEXDX",$J),LEXA N LEXSO,LEXCDT,LEXCT,LEXFIL,LEXNUM,LEXUSE
"RTN","LEX10DBC",41,0)
 N LEXFND,LEXTOT S LEXSO=$G(LEXC),LEXCDT=$G(LEXD),LEXNUM=+($G(LEXN))
"RTN","LEX10DBC",42,0)
 S LEXFIL=$G(LEXF) S LEXUSE=0 Q:'$L(LEXSO)
"RTN","LEX10DBC",43,0)
 S:$L(LEXSO)=3&(LEXSO'[".") LEXSO=LEXSO_"."
"RTN","LEX10DBC",44,0)
 S LEXA(0)=-1
"RTN","LEX10DBC",45,0)
 S:'$L(LEXFIL) LEXFIL="I $$SO^LEXU(Y,""10D"",+($G(LEXVDT)))"
"RTN","LEX10DBC",46,0)
 S:LEXNUM'>0 LEXNUM=30 S (LEXFND,LEXCT)=$$FIND(LEXSO,LEXCDT,LEXFIL)
"RTN","LEX10DBC",47,0)
 D REDUCE^LEX10DU(LEXNUM) D ARY^LEX10DU
"RTN","LEX10DBC",48,0)
 S LEXTOT=+($O(LEXA(" "),-1))
"RTN","LEX10DBC",49,0)
 S:LEXTOT>0&(LEXTOT<LEXFND) $P(LEXA(0),"^",2)=1
"RTN","LEX10DBC",50,0)
 K ^TMP("LEXDX",$J)
"RTN","LEX10DBC",51,0)
 Q
"RTN","LEX10DBC",52,0)
 ; Code Search
"RTN","LEX10DBC",53,0)
FIND(LEXC,LEXD,LEXF) ;   Find All Codes
"RTN","LEX10DBC",54,0)
 N LEX1,LEX2,LEXVDT,LEXCT,LEXFIL,LEXLEN,LEXNC,LEXNN,LEXOR,LEXPRE
"RTN","LEX10DBC",55,0)
 S LEXFIL=$G(LEXF) S:'$L(LEXFIL) LEXFIL="I 1"
"RTN","LEX10DBC",56,0)
 S LEXSO=$G(LEXC),LEXVDT=$G(LEXD)
"RTN","LEX10DBC",57,0)
 S LEXOR=$E(LEXSO,1,($L(LEXSO)-1))_$C($A($E(LEXSO,$L(LEXSO)))-1)_"~"
"RTN","LEX10DBC",58,0)
 S LEXNN="^LEX(757.02,""ADX"","""_LEXOR_" "")"
"RTN","LEX10DBC",59,0)
 S LEXNC="^LEX(757.02,""ADX"","""_LEXSO
"RTN","LEX10DBC",60,0)
 S (LEXPRE,LEXLEN,LEXCT)=0
"RTN","LEX10DBC",61,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10DBC",62,0)
 . N LEXC,LEXD,LEXE,LEXS,LEX1,LEX2
"RTN","LEX10DBC",63,0)
 . S LEXC=$P(LEXNN,",",3),LEXC=$TR(LEXC,"""",""),LEXC=$$TM(LEXC)
"RTN","LEX10DBC",64,0)
 . S LEXD=+($P(LEXNN,",",4)) Q:LEXD'?7N  Q:LEXVDT?7N&((LEXVDT+.001)'>LEXD)
"RTN","LEX10DBC",65,0)
 . S LEXS=+($P(LEXNN,",",5)) Q:LEXS'?1N  Q:LEXS'=1
"RTN","LEX10DBC",66,0)
 . S LEX1=+($P(LEXNN,",",6)) Q:LEX1'?1N.N  Q:LEX1'>0
"RTN","LEX10DBC",67,0)
 . S LEXE=+($G(^LEX(757.02,+LEX1,0))) Q:LEXE'?1N.N  Q:LEXE'>0
"RTN","LEX10DBC",68,0)
 . Q:$$SCR(LEXFIL,LEXE)'>0
"RTN","LEX10DBC",69,0)
 . S LEX2=+($P(LEXNN,",",7)) Q:LEX1'?1N.N  Q:LEX2'>0
"RTN","LEX10DBC",70,0)
 . Q:$P($G(^LEX(757.01,+LEXE,1)),"^",5)>0
"RTN","LEX10DBC",71,0)
 . S:$L(LEXC)>LEXLEN LEXPRE=LEXLEN,LEXLEN=$L(LEXC)
"RTN","LEX10DBC",72,0)
 . S:LEXPRE=0 LEXPRE=$L(LEXC) S:$L(LEXC)=(LEXLEN-1) LEXPRE=$L(LEXC)
"RTN","LEX10DBC",73,0)
 . S LEXCT=LEXCT+1,^TMP("LEXDX",$J,(LEXC_" "))=LEX1_"^"_LEXD
"RTN","LEX10DBC",74,0)
 Q LEXCT
"RTN","LEX10DBC",75,0)
 ; 
"RTN","LEX10DBC",76,0)
 ; Miscellaneous
"RTN","LEX10DBC",77,0)
SCR(X,Y) ;   Screen
"RTN","LEX10DBC",78,0)
 S Y=+($G(Y)) Q:+Y'>0 0  Q:'$D(^LEX(757.01,+Y,0)) 0
"RTN","LEX10DBC",79,0)
 N LEXFIL S LEXFIL=$G(X) Q:'$L(LEXFIL) 1  D ^DIM Q:'$D(X) 1
"RTN","LEX10DBC",80,0)
 X LEXFIL S X=$T
"RTN","LEX10DBC",81,0)
 Q X
"RTN","LEX10DBC",82,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10DBC",83,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10DBC",84,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10DBC",85,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10DBC",86,0)
 Q X
"RTN","LEX10DBR")
0^104^B8889238
"RTN","LEX10DBR",1,0)
LEX10DBR ;ISL/KER - ICD-10 Diagnosis Lookup by Root ;04/21/2014
"RTN","LEX10DBR",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DBR",3,0)
 ;               
"RTN","LEX10DBR",4,0)
 ; Global Variables
"RTN","LEX10DBR",5,0)
 ;    ^LEX(757.033)       N/A
"RTN","LEX10DBR",6,0)
 ;    ^TMP("LEXDX")       SACC 2.3.2.5.1
"RTN","LEX10DBR",7,0)
 ;    ^TMP("LEXSCH")      Suggest SACC 2.3.2.5.1
"RTN","LEX10DBR",8,0)
 ;               
"RTN","LEX10DBR",9,0)
 ; External References
"RTN","LEX10DBR",10,0)
 ;    $$ICDDX^ICDEX       ICR 5747
"RTN","LEX10DBR",11,0)
 ;    $$LD^ICDEX          ICR 5747
"RTN","LEX10DBR",12,0)
 ;    $$SD^ICDEX          ICR 5747
"RTN","LEX10DBR",13,0)
 ;               
"RTN","LEX10DBR",14,0)
 Q
"RTN","LEX10DBR",15,0)
MAJ(X,LEXA,LEXVDT) ; Lookup by Root, Major Categories (3 digit/decimal)
"RTN","LEX10DBR",16,0)
 K ^TMP("LEXSCH",$J) N LEXC,LEXO,LEXT,LEXCT,LEXFND,LEXTOT S LEXCT=0
"RTN","LEX10DBR",17,0)
 D GETCAT($G(X),$G(LEXVDT)),GETCOD($G(X),$G(LEXVDT)) S LEXFND=+($G(LEXCT))
"RTN","LEX10DBR",18,0)
 D ARY^LEX10DU S LEXC=+($O(LEXA(" "),-1)) S:LEXC'>0 LEXC=-1 S LEXA(0)=LEXC
"RTN","LEX10DBR",19,0)
 K ^TMP("LEXSCH",$J) S:LEXC>0 $P(LEXA(0),"^",2)=1
"RTN","LEX10DBR",20,0)
 Q
"RTN","LEX10DBR",21,0)
GETCAT(X,LEXVDT) ; Get Categories
"RTN","LEX10DBR",22,0)
 N LEXC,LEXCTL,LEXO S LEXC=$E(X,1,2) Q:$L(LEXC)'=2  S (LEXCTL,LEXO)=LEXC,LEXO=LEXO_" "
"RTN","LEX10DBR",23,0)
 F  S LEXO=$O(^LEX(757.033,"AFRAG",30,LEXO)) Q:'$L(LEXO)!($E(LEXO,1,$L(LEXCTL))'=LEXCTL)  D
"RTN","LEX10DBR",24,0)
 . N LEXQ,LEXE,LEXI,LEXNE,LEXNI,LEXN,LEXIS,LEXCN,LEX
"RTN","LEX10DBR",25,0)
 . S LEXQ=$TR(LEXO," ","")
"RTN","LEX10DBR",26,0)
 . S:$L(LEXQ)=3&(LEXQ'[".") LEXQ=LEXQ_"."
"RTN","LEX10DBR",27,0)
 . Q:$L(LEXQ)'=4
"RTN","LEX10DBR",28,0)
 . S LEXE=$P($O(^LEX(757.033,"AFRAG",30,(LEXQ_" ")," "),-1),".",1)
"RTN","LEX10DBR",29,0)
 . Q:LEXE'?7N  I $P($G(LEXVDT),".",1)?7N Q:LEXE>LEXVDT
"RTN","LEX10DBR",30,0)
 . S LEXI=$O(^LEX(757.033,"AFRAG",30,(LEXQ_" "),LEXE," "),-1)
"RTN","LEX10DBR",31,0)
 . S LEXNE=$O(^LEX(757.033,+LEXI,2,"B",(LEXVDT+.0001)),-1)
"RTN","LEX10DBR",32,0)
 . S LEXNI=$O(^LEX(757.033,+LEXI,2,"B",+LEXNE," "),-1)
"RTN","LEX10DBR",33,0)
 . I LEXNI'>0 D  Q:LEXNI'>0
"RTN","LEX10DBR",34,0)
 . . S LEXNE=$O(^LEX(757.033,+LEXI,2,"B",9999999),-1)
"RTN","LEX10DBR",35,0)
 . . S LEXNI=$O(^LEX(757.033,+LEXI,2,"B",+LEXNE," "),-1)
"RTN","LEX10DBR",36,0)
 . S LEXN=$G(^LEX(757.033,LEXI,2,LEXNI,1)) Q:'$L(LEXN)
"RTN","LEX10DBR",37,0)
 . S LEXCN=$$CODES^LEX10DU(LEXQ),LEX="^"_LEXE_"^"_LEXN
"RTN","LEX10DBR",38,0)
 . S:+LEXCN>0 $P(LEX,"^",4)=+LEXCN
"RTN","LEX10DBR",39,0)
 . S ^TMP("LEXDX",$J,(LEXQ_" "))=LEX S LEXCT=LEXCT+1
"RTN","LEX10DBR",40,0)
 Q
"RTN","LEX10DBR",41,0)
GETCOD(X,LEXVDT) ; Get Codes
"RTN","LEX10DBR",42,0)
 N LEXC,LEXCTL,LEXO S LEXC=$E(X,1,2) Q:$L(LEXC)'=2  S (LEXCTL,LEXO)=LEXC,LEXO=LEXO_" "
"RTN","LEX10DBR",43,0)
 F  S LEXO=$O(^LEX(757.02,"ADX",LEXO)) Q:'$L(LEXO)!($E(LEXO,1,$L(LEXCTL))'=LEXCTL)  D
"RTN","LEX10DBR",44,0)
 . N LEXQ,LEXE,LEXI,LEXN,LEXSTA,LEX,LEXT
"RTN","LEX10DBR",45,0)
 . S LEXQ=$TR(LEXO," ","") S:$L(LEXQ)=3&(LEXQ'[".") LEXQ=LEXQ_"." Q:$L(LEXQ)'=4
"RTN","LEX10DBR",46,0)
 . S LEXSTA=$$STATCHK^LEXSRC2(LEXQ,$G(LEXVDT),,30) Q:+LEXSTA'>0
"RTN","LEX10DBR",47,0)
 . S LEXE=$P(LEXSTA,"^",3),LEXI=$P(LEXSTA,"^",2) Q:+LEXI'>0
"RTN","LEX10DBR",48,0)
 . S LEXT=+($G(^LEX(757.02,+LEXI,0))) Q:+LEXT'>0
"RTN","LEX10DBR",49,0)
 . Q:LEXE'?7N  I $P($G(LEXVDT),".",1)?7N Q:LEXE>LEXVDT
"RTN","LEX10DBR",50,0)
 . S LEXN=$P($G(^LEX(757.01,+LEXT,0)),"^",1) Q:'$L(LEXN)
"RTN","LEX10DBR",51,0)
 . S ^TMP("LEXDX",$J,(LEXQ_" "))=LEXI_"^"_LEXE_"^"_LEXN S LEXCT=LEXCT+1
"RTN","LEX10DBR",52,0)
 Q
"RTN","LEX10DBR",53,0)
ST ;
"RTN","LEX10DBR",54,0)
 N LEXNN,LEXNC
"RTN","LEX10DBR",55,0)
 S LEXNN="^TMP(""LEXSCH"","_$J_")",LEXNC="^TMP(""LEXSCH"","_$J_","
"RTN","LEX10DBR",56,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10DBR",57,0)
 . W !,LEXNN,"=",@LEXNN
"RTN","LEX10DBR",58,0)
 Q
"RTN","LEX10DBR",59,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10DBR",60,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10DBR",61,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10DBR",62,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10DBR",63,0)
 Q X
"RTN","LEX10DBT")
0^103^B9014801
"RTN","LEX10DBT",1,0)
LEX10DBT ;ISL/KER - ICD-10 Diagnosis Lookup by Text ;04/21/2014
"RTN","LEX10DBT",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DBT",3,0)
 ;               
"RTN","LEX10DBT",4,0)
 ; Global Variables
"RTN","LEX10DBT",5,0)
 ;    ^TMP("LEXDX"        SACC 2.3.2.5.1
"RTN","LEX10DBT",6,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEX10DBT",7,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEX10DBT",8,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEX10DBT",9,0)
 ;               
"RTN","LEX10DBT",10,0)
 ; External References
"RTN","LEX10DBT",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DBT",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEX10DBT",13,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEX10DBT",14,0)
 ;               
"RTN","LEX10DBT",15,0)
 Q
"RTN","LEX10DBT",16,0)
I10T(X,LEXA,LEXD,LEXL,LEXF) ; Lookup by Text, Return Pruned List
"RTN","LEX10DBT",17,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEX10DBT",18,0)
 N DIC,LEXCT,LEXFIL,LEXLEN,LEXLI,LEXCDT,LEXVDT,LEXX,LEXPR,LEXPRL
"RTN","LEX10DBT",19,0)
 N LEXFND,LEXTOT,LEXPFL,LEXLV,LEXGV,LEXBG1,LEXEND,LEXBG2,LEXELP
"RTN","LEX10DBT",20,0)
 S LEXA(0)="-1" S LEXX=$G(X) Q:'$L(LEXX)
"RTN","LEX10DBT",21,0)
 S (LEXCDT,LEXVDT)=$G(LEXD),LEXFIL=$G(LEXF)
"RTN","LEX10DBT",22,0)
 S LEXLEN=1,LEXPR=0
"RTN","LEX10DBT",23,0)
 S LEXPRL=$G(LEXL) S:LEXPRL="" LEXPRL=30
"RTN","LEX10DBT",24,0)
 K ^TMP("LEXSCH",$J) D CONFIG^LEXSET("10D","10D")
"RTN","LEX10DBT",25,0)
 S ^TMP("LEXSCH",$J,"FIL",1)="Diagnosis"
"RTN","LEX10DBT",26,0)
 S ^TMP("LEXSCH",$J,"DIS",0)="ICD/10D/DS4/SCC/NAN/SCT"
"RTN","LEX10DBT",27,0)
 S ^TMP("LEXSCH",$J,"DIS",1)="Diagnosis"
"RTN","LEX10DBT",28,0)
 S ^TMP("LEXSCH",$J,"ADF",0)=1,LEXVDT=LEXCDT
"RTN","LEX10DBT",29,0)
 I LEXCDT'?7N D
"RTN","LEX10DBT",30,0)
 . S (DIC("S"),LEXFIL)="I $L($$D10^LEX10CS(+Y))",^TMP("LEXSCH",$J,"FIL",0)=LEXFIL
"RTN","LEX10DBT",31,0)
 . S ^TMP("LEXSCH",$J,"FIL",1)="Unversioned Diagnosis"
"RTN","LEX10DBT",32,0)
 . S ^TMP("LEXSCH",$J,"APP",0)=1 K ^TMP("LEXSCH",$J,"VDT") S LEXVDT=LEXCDT
"RTN","LEX10DBT",33,0)
 . S ^TMP("LEXSCH",$J,"DIS",0)="10D"
"RTN","LEX10DBT",34,0)
 . S ^TMP("LEXSCH",$J,"DIS",1)="ICD-10 Diagnosis"
"RTN","LEX10DBT",35,0)
 ;S:'$L(LEXFIL) LEXFIL="I $$SO^LEXU(Y,""10D"",+($G(LEXVDT)))"
"RTN","LEX10DBT",36,0)
 K LEX D LOOK^LEXA(LEXX,"10D",LEXLEN,"10D",LEXVDT)
"RTN","LEX10DBT",37,0)
 S LEXLV=+($G(LEX("LIST",0)))
"RTN","LEX10DBT",38,0)
 S LEXGV=$O(^TMP("LEXFND",$J,0),-1)
"RTN","LEX10DBT",39,0)
 S:+($G(LEX("LIST",0)))=LEXLEN&($O(^TMP("LEXFND",$J,0),-1)<0) LEXPR=1
"RTN","LEX10DBT",40,0)
 S LEXA(0)="-1^No matches found" Q:LEX=0
"RTN","LEX10DBT",41,0)
 ;S LEXA(0)="-1^Too many matches, please refine search" Q:+LEX>+LEXLEN
"RTN","LEX10DBT",42,0)
 S LEXA(0)=-1
"RTN","LEX10DBT",43,0)
 N LEXO,LEXN K ^TMP("LEXDX",$J)
"RTN","LEX10DBT",44,0)
 S LEXCT=0 S LEXN=0 F  S LEXN=$O(LEX("LIST",LEXN)) Q:+LEXN'>0  D
"RTN","LEX10DBT",45,0)
 . N LEXX,LEXIEN S LEXX=LEX("LIST",LEXN),LEXIEN=$P(LEXX,"^",1) D ADDDX
"RTN","LEX10DBT",46,0)
 S LEXO="" F  S LEXO=$O(^TMP("LEXFND",$J,LEXO)) Q:'$L(LEXO)  D
"RTN","LEX10DBT",47,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^TMP("LEXFND",$J,LEXO,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEX10DBT",48,0)
 . . Q:+LEXO'<0  D ADDDX
"RTN","LEX10DBT",49,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEX10DBT",50,0)
 S LEXFND=+($G(LEXCT))
"RTN","LEX10DBT",51,0)
 D REDUCE^LEX10DU(LEXPRL)
"RTN","LEX10DBT",52,0)
 D ARY^LEX10DU
"RTN","LEX10DBT",53,0)
 S LEXTOT=+($O(LEXA(" "),-1))
"RTN","LEX10DBT",54,0)
 S:LEXTOT>0&(LEXTOT<LEXFND) $P(LEXA(0),"^",2)=1
"RTN","LEX10DBT",55,0)
 K ^TMP("LEXDX",$J)
"RTN","LEX10DBT",56,0)
 Q
"RTN","LEX10DBT",57,0)
ADDDX ; Add DX
"RTN","LEX10DBT",58,0)
 Q:+($G(LEXIEN))'>0  Q:'$D(^LEX(757.01,+($G(LEXIEN)),0))
"RTN","LEX10DBT",59,0)
 N LEXSO,LEXSTA,LEXSIEN,LEXSEFF S LEXSO=$$D10ONE^LEXU(+LEXIEN,LEXVDT)
"RTN","LEX10DBT",60,0)
 S:'$L(LEXSO)&($G(LEXCDT)'?7N) LEXSO=$$D10^LEX10CS(+LEXIEN) Q:'$L(LEXSO)
"RTN","LEX10DBT",61,0)
 S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,30)
"RTN","LEX10DBT",62,0)
 Q:$G(LEXCDT)?7N&(+LEXSTA'>0)  S LEXSIEN=$P(LEXSTA,"^",2)
"RTN","LEX10DBT",63,0)
 S LEXSEFF=$P($P(LEXSTA,"^",3),".",1) Q:$G(LEXCDT)?7N&(LEXSEFF'?7N)
"RTN","LEX10DBT",64,0)
 S ^TMP("LEXDX",$J,(LEXSO_" "))=LEXSIEN_"^"_LEXSEFF
"RTN","LEX10DBT",65,0)
 S LEXCT=LEXCT+1
"RTN","LEX10DBT",66,0)
 Q
"RTN","LEX10DL")
0^106^B57481356
"RTN","LEX10DL",1,0)
LEX10DL ;ISL/KER - ICD-10 Diagnosis Lookup ;04/21/2014
"RTN","LEX10DL",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DL",3,0)
 ;               
"RTN","LEX10DL",4,0)
 ; Global Variables
"RTN","LEX10DL",5,0)
 ;    ^%ZOSF("TEST")      ICR  10096
"RTN","LEX10DL",6,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10DL",7,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","LEX10DL",8,0)
 ;               
"RTN","LEX10DL",9,0)
 ; External References
"RTN","LEX10DL",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEX10DL",11,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10DL",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX10DL",13,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10DL",14,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEX10DL",15,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEX10DL",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DL",17,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10DL",18,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEX10DL",19,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX10DL",20,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEX10DL",21,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEX10DL",22,0)
 ;               
"RTN","LEX10DL",23,0)
EN ; Main Entry Point
"RTN","LEX10DL",24,0)
 ; 
"RTN","LEX10DL",25,0)
 ; Input   
"RTN","LEX10DL",26,0)
 ; 
"RTN","LEX10DL",27,0)
 ;   None
"RTN","LEX10DL",28,0)
 ; 
"RTN","LEX10DL",29,0)
 ; Output
"RTN","LEX10DL",30,0)
 ; 
"RTN","LEX10DL",31,0)
 ;   Y          2 Piece "^" delimited string
"RTN","LEX10DL",32,0)
 ;                 1   IEN to the Expression File 757.01
"RTN","LEX10DL",33,0)
 ;                 2   Expression Display Text
"RTN","LEX10DL",34,0)
 ;                 
"RTN","LEX10DL",35,0)
 ;   Y("ICD")   2 Piece "^" delimited string
"RTN","LEX10DL",36,0)
 ;                 1   IEN to the ICD DIAGNOSIS File #80
"RTN","LEX10DL",37,0)
 ;                 2   ICD Code
"RTN","LEX10DL",38,0)
 ; 
"RTN","LEX10DL",39,0)
 N LEXENV S LEXENV=$$ENV Q:+LEXENV'>0
"RTN","LEX10DL",40,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,LEXDT,LEXIM,LEXMAX,LEXFRQ,LEXCONT,X
"RTN","LEX10DL",41,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT S LEXMAX=$$MAX^LEXU(30)
"RTN","LEX10DL",42,0)
 S LEXIM=$$IMP^ICDEX(30) S:LEXDT'>LEXIM LEXDT=LEXIM S LEXCONT=1
"RTN","LEX10DL",43,0)
X ; Get user input
"RTN","LEX10DL",44,0)
 S X=$$SO S LEXFRQ=$$FREQ^LEXU(X)
"RTN","LEX10DL",45,0)
 I LEXFRQ>LEXMAX D  Q:$D(DIRUT)  Q:$D(LEXCONT)["^"  G:LEXCONT'>0 X
"RTN","LEX10DL",46,0)
 . N LEXX S LEXX=X S LEXCONT=$$CONT^LEX10DLS(LEXX,LEXFRQ) W !
"RTN","LEX10DL",47,0)
 W ! K Y,LEXY D:$L(X)&(X'["^") BEG N LEXTEST
"RTN","LEX10DL",48,0)
 Q 
"RTN","LEX10DL",49,0)
BEG ; Begin Recursive Loop
"RTN","LEX10DL",50,0)
 N DIROUT,DUOUT,DTOUT,LEXIT,LEXVDT,LEXTXT,LEXUP,LEXY,LEXX
"RTN","LEX10DL",51,0)
 N LEXBEG,LEXEND,LEXELP,LEXSEC
"RTN","LEX10DL",52,0)
 K Y S Y=-1,U="^",LEXTXT=$G(X) Q:'$L(LEXTXT)
"RTN","LEX10DL",53,0)
 S LEXVDT=$G(LEXDT),LEXIT=0
"RTN","LEX10DL",54,0)
LOOK ;   Lookup
"RTN","LEX10DL",55,0)
 Q:+($G(LEXIT))>0  K LEXY S LEXBEG=$$NOW^XLFDT
"RTN","LEX10DL",56,0)
 S LEXY=$$DIAGSRCH^LEX10CS(LEXTXT,.LEXY,LEXVDT,30)
"RTN","LEX10DL",57,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEX10DL",58,0)
 S LEXSEC=$$FMDIFF^XLFDT(LEXEND,LEXBEG,2)
"RTN","LEX10DL",59,0)
 S:$L(LEXELP,":")=3 LEXELP=$TR(LEXELP," ","0")
"RTN","LEX10DL",60,0)
 S:$L(LEXELP,":")'=3!(LEXSEC'>0) LEXELP="00:00:00"
"RTN","LEX10DL",61,0)
 I $D(LEXTEST) D
"RTN","LEX10DL",62,0)
 . W ! W !,"   Search for:     ",LEXTXT
"RTN","LEX10DL",63,0)
 . W !,"   Begin Search:   ",$$FMTE^XLFDT(LEXBEG,"5Z")
"RTN","LEX10DL",64,0)
 . W !,"   Finish Search:  ",$$FMTE^XLFDT(LEXBEG,"5Z")
"RTN","LEX10DL",65,0)
 . W !,"   Elapsed Time:   ",LEXELP W !
"RTN","LEX10DL",66,0)
 S:$O(LEXY(" "),-1)>0 LEXY=+LEXY
"RTN","LEX10DL",67,0)
 I +LEXY'>0 W !,"  No data found",! K X Q
"RTN","LEX10DL",68,0)
 S LEXX=$$SEL^LEX10DLS(.LEXY,8)
"RTN","LEX10DL",69,0)
 I $D(DUOUT)&('$D(DIROUT)) K:'$D(LEXNT) X Q
"RTN","LEX10DL",70,0)
 I $D(DTOUT)&('$D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10DL",71,0)
 I $D(DIROUT) S LEXIT=1 K X Q
"RTN","LEX10DL",72,0)
 ;     Quit if
"RTN","LEX10DL",73,0)
 ;       Timed out or user enters "^^"
"RTN","LEX10DL",74,0)
 I $D(DTOUT)!($D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10DL",75,0)
 ;       Up one level (LEXUP) if user enters "^"
"RTN","LEX10DL",76,0)
 ;       Quit if already at top level and user enters "^"
"RTN","LEX10DL",77,0)
 I $D(DUOUT),'$D(DIROUT),$L($G(LEXUP)) K X Q
"RTN","LEX10DL",78,0)
 ;       No Selection Made
"RTN","LEX10DL",79,0)
 I '$D(DUOUT),LEXX=-1 S LEXIT=1
"RTN","LEX10DL",80,0)
 ;       Code Found and Selected
"RTN","LEX10DL",81,0)
 I $P(LEXX,";")'="99:CAT" D  Q
"RTN","LEX10DL",82,0)
 . N LEXIEN,LEXCODE,LEXTERM,LEXICD
"RTN","LEX10DL",83,0)
 . S LEXIEN=$P($P(LEXX,"^"),";",1),LEXCODE=$P($P(LEXX,"^"),";",2)
"RTN","LEX10DL",84,0)
 . S LEXTERM=$P(LEXX,"^",2) S:$L(LEXTERM)&($L(LEXCODE)) LEXTERM=LEXTERM_" (ICD-10-CM "_LEXCODE_")"
"RTN","LEX10DL",85,0)
 . S LEXICD=+$$ICDDX^ICDEX(LEXCODE,,30),LEXIT=1
"RTN","LEX10DL",86,0)
 . S Y=LEXIEN_"^"_LEXTERM,Y("ICD")=LEXICD_"^"_LEXCODE
"RTN","LEX10DL",87,0)
 ;       Category Found and Selected
"RTN","LEX10DL",88,0)
 D NXT G:+($G(LEXIT))'>0 LOOK
"RTN","LEX10DL",89,0)
 Q
"RTN","LEX10DL",90,0)
NXT ;   Next
"RTN","LEX10DL",91,0)
 Q:+($G(LEXIT))>0  N LEXNT,LEXND,LEXXX
"RTN","LEX10DL",92,0)
 S LEXNT=$G(LEXTXT),LEXND=$G(LEXVDT),LEXXX=$G(LEXX)
"RTN","LEX10DL",93,0)
 N LEXTXT,LEXVDT S LEXTXT=$P($P(LEXXX,"^"),";",2),LEXVDT=LEXND
"RTN","LEX10DL",94,0)
 G LOOK
"RTN","LEX10DL",95,0)
 Q
"RTN","LEX10DL",96,0)
 ;     
"RTN","LEX10DL",97,0)
SO(X) ; Enter a Code/Code Fragment
"RTN","LEX10DL",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX,LEXCOM,LEXERR,LEXSBR
"RTN","LEX10DL",99,0)
 S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEX10DL",100,0)
 S LEXCOM="Enter Diagnosis, a Code or a Code Fragment"
"RTN","LEX10DL",101,0)
 S DIR(0)="FAO^1:30",DIR("A")=" "_LEXCOM_":  "
"RTN","LEX10DL",102,0)
 S (LEXSBR,DIRB)=$$RET("LEX10DL","SO",+($G(DUZ)),LEXCOM)
"RTN","LEX10DL",103,0)
 S DIR("PRE")="S X=$$SOP^LEX10DL(X) W:X[""??"" ""  ??"""
"RTN","LEX10DL",104,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEX10DL" D ^DIR
"RTN","LEX10DL",105,0)
 I $D(DTOUT) W !!,?3,"Try later",! Q "^"
"RTN","LEX10DL",106,0)
 I '$L(X)!('$L(Y)) W !!,?3,"No selection made",! Q "^"
"RTN","LEX10DL",107,0)
 S:$D(DUOUT) X="^" S:$D(DIROUT) X="^^"
"RTN","LEX10DL",108,0)
 I $G(X)["^" W !!,?3,"Selection aborted",! Q "^"
"RTN","LEX10DL",109,0)
 S (LEX,X)=$G(Y) D:$L(LEX)&(LEX'["^") SAV("LEX10DL","SO",+($G(DUZ)),LEXCOM,LEX)
"RTN","LEX10DL",110,0)
 Q X
"RTN","LEX10DL",111,0)
SOH ;   Select a Code Help
"RTN","LEX10DL",112,0)
 W:$L($G(LEXERR)) !,"     ",LEXERR,!
"RTN","LEX10DL",113,0)
 W !,"     Enter either: "
"RTN","LEX10DL",114,0)
 W !,"                                            Example"
"RTN","LEX10DL",115,0)
 W !,"       ICD-10 Diagnosis code                S62.131K"
"RTN","LEX10DL",116,0)
 W !,"       Partial ICD-10 Diagnosis code        S62.131"
"RTN","LEX10DL",117,0)
 W !,"       ICD-10 Diagnosis sub-category        S62.131"
"RTN","LEX10DL",118,0)
 W !,"       ICD-10 Diagnosis category            S62."
"RTN","LEX10DL",119,0)
 W !,"       Partial ICD-10 Diagnosis category    S6"
"RTN","LEX10DL",120,0)
 W !,"       Diagnostic Text                      Diabetes Mellitus",!
"RTN","LEX10DL",121,0)
 W !,"     Must have at least 2 characters.  If a code is entered"
"RTN","LEX10DL",122,0)
 W !,"     it may not exceed 7 characters.  Enter return or ""^"" "
"RTN","LEX10DL",123,0)
 W !,"     to exit, ""Space-Bar-Return"" to select previous"
"RTN","LEX10DL",124,0)
 W !,"     search parameter.",!
"RTN","LEX10DL",125,0)
 K LEXERR
"RTN","LEX10DL",126,0)
 Q
"RTN","LEX10DL",127,0)
SOP(X) ;   Code Pre-Processing
"RTN","LEX10DL",128,0)
 N LEX,LEXO,LEXR,LEXB,LEXOK,LEXSTB,LEXSO S LEXSO=0
"RTN","LEX10DL",129,0)
 S (LEX,X)=$$UP^XLFSTR($G(X)),LEXSTB=$E(LEX,1,3),LEXB=$G(DIR("B"))
"RTN","LEX10DL",130,0)
 I ($L(LEX)&($E(LEX,1)=" "))&($L($G(LEXSBR))) D  Q X
"RTN","LEX10DL",131,0)
 . S (LEX,X)=$G(LEXSBR) W "  ",X
"RTN","LEX10DL",132,0)
 Q:LEX["?" "??"  S:LEX["^^" (LEX,X)="^^",DUOUT=1,DIROUT=1
"RTN","LEX10DL",133,0)
 S:LEX["^"&(LEX'["^^") (LEX,X)="^",DUOUT=1
"RTN","LEX10DL",134,0)
 Q:LEX["^" X  S:'$L(LEX)&($L(LEXB)) (LEX,X)=$G(LEXB)
"RTN","LEX10DL",135,0)
 Q:'$L(LEX) ""  S LEXR=LEX S:$L(LEXR) LEXR=" ("_LEXR_")"
"RTN","LEX10DL",136,0)
 S LEXSO=0 I $L(LEXSTB) D
"RTN","LEX10DL",137,0)
 . S:$O(^LEX(757.02,"ADX",(LEXSTB_" ")))[LEXSTB LEXSO=1
"RTN","LEX10DL",138,0)
 I 'LEXSO Q X
"RTN","LEX10DL",139,0)
 S:$L(LEX)'>1 LEXERR="Input must be at least 2 characters"_LEXR
"RTN","LEX10DL",140,0)
 S:$L(LEX)>8 LEXERR="Input can not exceed 8 characters"_LEXR
"RTN","LEX10DL",141,0)
 Q:$L(LEX)'>1!($L(LEX)>8) "??"
"RTN","LEX10DL",142,0)
 S:$L(LEX)>3&($E(LEX,4)'=".") LEXERR="Fourth character position must be a decimal"_LEXR
"RTN","LEX10DL",143,0)
 Q:$L(LEX)>3&($E(LEX,4)'=".") "??"  S LEXOK=0
"RTN","LEX10DL",144,0)
 S LEXO=$E(LEX,1,($L(LEX)-1))_$C($A($E(LEX,$L(LEX)))-1)_"~"
"RTN","LEX10DL",145,0)
 S:$L(LEX)=3&(LEX'[".") (LEX,X)=LEX_"."
"RTN","LEX10DL",146,0)
 S:$D(^LEX(757.02,"ADX",(LEX_" "))) LEXOK=1
"RTN","LEX10DL",147,0)
 S:$O(^LEX(757.02,"ADX",(LEXO_" ")))[LEX LEXOK=1
"RTN","LEX10DL",148,0)
 S:$D(^LEX(757.033,"AFRAG",30,(LEX_" "))) LEXOK=1
"RTN","LEX10DL",149,0)
 S:$O(^LEX(757.033,"AFRAG",30,(LEXO_" ")))[LEX LEXOK=1
"RTN","LEX10DL",150,0)
 S:'LEXOK LEXERR="Input is not a code or category"_LEXR
"RTN","LEX10DL",151,0)
 S:'LEXOK (LEX,X)="??"
"RTN","LEX10DL",152,0)
 Q X
"RTN","LEX10DL",153,0)
 ;               
"RTN","LEX10DL",154,0)
 ; Miscellaneous
"RTN","LEX10DL",155,0)
SAV(X,Y,LEXN,LEXC,LEXV) ;   Save Defaults
"RTN","LEX10DL",156,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXVAL,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0  S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0
"RTN","LEX10DL",157,0)
 S LEXUSR=+($G(LEXN)),LEXVAL=$G(LEXV) Q:LEXUSR'>0  Q:'$L(LEXVAL)  S LEXCOM=$G(LEXC) Q:'$L(LEXCOM)  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10DL",158,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM)  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10DL",159,0)
 S ^XTMP(LEXID,0)=LEXFD_"^"_LEXTD_"^"_LEXCOM,^XTMP(LEXID,LEXTAG)=LEXVAL
"RTN","LEX10DL",160,0)
 Q
"RTN","LEX10DL",161,0)
RET(X,Y,LEXN,LEXC) ;   Retrieve Defaults
"RTN","LEX10DL",162,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0 ""
"RTN","LEX10DL",163,0)
 S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0 ""  S LEXUSR=+($G(LEXN)) Q:LEXUSR'>0 ""
"RTN","LEX10DL",164,0)
 S LEXCOM=$G(LEXC) Q:'$L(LEXCOM) ""  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10DL",165,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM) ""  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10DL",166,0)
 S X=$G(^XTMP(LEXID,LEXTAG))
"RTN","LEX10DL",167,0)
 Q X
"RTN","LEX10DL",168,0)
ROK(X) ;   Routine OK
"RTN","LEX10DL",169,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","LEX10DL",170,0)
TAG(X) ;   Sub-Routine OK
"RTN","LEX10DL",171,0)
 N LEXT,LEXE,LEXL S X=$G(X) Q:'$L(X) 0  Q:X'["^" 0
"RTN","LEX10DL",172,0)
 Q:'$L($P(X,"^",1)) 0  Q:$L($P(X,"^",1))>8 0  Q:$E($P(X,"^",1),1)'?1U 0
"RTN","LEX10DL",173,0)
 Q:'$L($P(X,"^",2)) 0  Q:$L($P(X,"^",2))>8 0  Q:$E($P(X,"^",2),1)'?1U 0
"RTN","LEX10DL",174,0)
 S LEXL=0,LEXT=X,(LEXE,X)="S LEXL=$L($T("_X_"))" D ^DIM X:$D(X) LEXE
"RTN","LEX10DL",175,0)
 S X=$S(LEXL>0:1,1:0)
"RTN","LEX10DL",176,0)
 Q X
"RTN","LEX10DL",177,0)
ENV(X) ;   Check environment
"RTN","LEX10DL",178,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEX10DL",179,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEX10DL",180,0)
 Q 1
"RTN","LEX10DLS")
0^107^B50742305
"RTN","LEX10DLS",1,0)
LEX10DLS ;ISL/KER - ICD-10 Diagnosis Lookup Selection ;04/21/2014
"RTN","LEX10DLS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DLS",3,0)
 ;               
"RTN","LEX10DLS",4,0)
 ; Global Variables
"RTN","LEX10DLS",5,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10DLS",6,0)
 ;               
"RTN","LEX10DLS",7,0)
 ; External References
"RTN","LEX10DLS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10DLS",9,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10DLS",10,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10DLS",11,0)
 ;               
"RTN","LEX10DLS",12,0)
 ; Local Variables NEWed or KILLed in LEX10DL
"RTN","LEX10DLS",13,0)
 ;     DIROUT,DTOUT,DUOUT
"RTN","LEX10DLS",14,0)
 ;             
"RTN","LEX10DLS",15,0)
SEL(LEX,X) ; Select from List
"RTN","LEX10DLS",16,0)
 ;
"RTN","LEX10DLS",17,0)
 ; Input   
"RTN","LEX10DLS",18,0)
 ; 
"RTN","LEX10DLS",19,0)
 ;     X     Length of list to display (default 5)
"RTN","LEX10DLS",20,0)
 ;    .LEX   Local array passed by reference
"RTN","LEX10DLS",21,0)
 ;               
"RTN","LEX10DLS",22,0)
 ;             LEX()   Input Array from ICDSRCH^LEX10CS
"RTN","LEX10DLS",23,0)
 ;               
"RTN","LEX10DLS",24,0)
 ;             LEX(0)=# found ^ Pruning Indicator
"RTN","LEX10DLS",25,0)
 ;             LEX(1,0)=Code ^ Code IEN ^ date
"RTN","LEX10DLS",26,0)
 ;             LEX(1,"IDL")=ICD-9/10 Description, Long
"RTN","LEX10DLS",27,0)
 ;             LEX(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","LEX10DLS",28,0)
 ;             LEX(1,"IDS")=ICD-9/10 Description, Short
"RTN","LEX10DLS",29,0)
 ;             LEX(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","LEX10DLS",30,0)
 ;             LEX(1,"LEX")=Lexicon Description
"RTN","LEX10DLS",31,0)
 ;             LEX(1,"LEX",1)=Expression IEN ^ date
"RTN","LEX10DLS",32,0)
 ;             LEX(1,"SYN",1)=Synonym #1
"RTN","LEX10DLS",33,0)
 ;             LEX(1,"SYN",m)=Synonym #m
"RTN","LEX10DLS",34,0)
 ;             ...
"RTN","LEX10DLS",35,0)
 ;               
"RTN","LEX10DLS",36,0)
 ; Output
"RTN","LEX10DLS",37,0)
 ;               
"RTN","LEX10DLS",38,0)
 ;    $$SEL  Two Piece "^" delimited string same as
"RTN","LEX10DLS",39,0)
 ;           Fileman's Y output variable
"RTN","LEX10DLS",40,0)
 ;               
"RTN","LEX10DLS",41,0)
 ;             1  Lexicon IEN
"RTN","LEX10DLS",42,0)
 ;             2  Lexicon Term
"RTN","LEX10DLS",43,0)
 ;               
"RTN","LEX10DLS",44,0)
 ;    LEX    Local array passed by reference
"RTN","LEX10DLS",45,0)
 ;               
"RTN","LEX10DLS",46,0)
 ;             LEX(0)=Code ^ Code IEN ^ date
"RTN","LEX10DLS",47,0)
 ;             LEX("IDL")=ICD-9/10 Description, Long
"RTN","LEX10DLS",48,0)
 ;             LEX("IDL",1)=ICD-9/10 IEN ^ date
"RTN","LEX10DLS",49,0)
 ;             LEX("IDS")=ICD-9/10 Description, Short
"RTN","LEX10DLS",50,0)
 ;             LEX("IDS",1)=ICD-9/10 IEN ^ date
"RTN","LEX10DLS",51,0)
 ;             LEX("LEX")=Lexicon Description
"RTN","LEX10DLS",52,0)
 ;             LEX("LEX",1)=Expression IEN ^ date
"RTN","LEX10DLS",53,0)
 ;               
"RTN","LEX10DLS",54,0)
 ;    or ^ on error 
"RTN","LEX10DLS",55,0)
 ;    or -1 for non-selection
"RTN","LEX10DLS",56,0)
 ;               
"RTN","LEX10DLS",57,0)
 S X=+($G(X)) S:X'>0 X=5 S X=$$ASK(.LEX,X)
"RTN","LEX10DLS",58,0)
 Q X
"RTN","LEX10DLS",59,0)
ASK(LEX,X) ; Ask for Selection
"RTN","LEX10DLS",60,0)
 N LEXIT,LEXL,LEXTOT S LEXL=+($G(X)) S:LEXL'>0 LEXL=5
"RTN","LEX10DLS",61,0)
 S LEXIT=0,LEXTOT=$O(LEX(" "),-1) Q:+LEXTOT'>0 "^"
"RTN","LEX10DLS",62,0)
 K X S:+LEXTOT=1 X=$$ONE(LEXL,.LEX) S:+LEXTOT>1 X=$$MUL(.LEX,LEXL)
"RTN","LEX10DLS",63,0)
 S:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(X))'>0) X=-1
"RTN","LEX10DLS",64,0)
 Q X
"RTN","LEX10DLS",65,0)
ONE(X,LEX) ; One Entry Found
"RTN","LEX10DLS",66,0)
 Q:+($G(LEXIT))>0 "^^"  N DIR,LEXC,LEXEX,LEXFI,LEXIT,LEXSO,LEXNC
"RTN","LEX10DLS",67,0)
 N LEXSP,LEXTX,LEXC,Y S LEXFI=$O(LEX(0)) Q:+LEXFI'>0 "^"  S LEXSP=$J(" ",25)
"RTN","LEX10DLS",68,0)
 S LEXSO=$P(LEX(1,0),"^",1),LEXNC=$P(LEX(1,0),"^",3)
"RTN","LEX10DLS",69,0)
 S:+LEXNC>0 LEXNC=" ("_LEXNC_")" S LEXEX=$G(LEX(1,"MENU"))
"RTN","LEX10DLS",70,0)
 S LEXC=$S($D(LEX(1,"CAT")):"-",1:"")
"RTN","LEX10DLS",71,0)
 S LEXTX(1)=LEXSO_LEXC_$J(" ",(9-$L(LEXSO)))_" "_LEXEX_LEXNC
"RTN","LEX10DLS",72,0)
 D PR(.LEXTX,64) S DIR("A",1)=" One match found",DIR("A",2)=" "
"RTN","LEX10DLS",73,0)
 S DIR("A",3)=" "_$G(LEXTX(1)),LEXC=3 I $L($G(LEXTX(2))) D
"RTN","LEX10DLS",74,0)
 . S LEXC=LEXC+1,DIR("A",LEXC)=LEXSP_$G(LEXTX(2))
"RTN","LEX10DLS",75,0)
 S LEXC=LEXC+1,DIR("A",LEXC)=" ",LEXC=LEXC+1
"RTN","LEX10DLS",76,0)
 S DIR("A")=" OK? (Yes/No) ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","LEX10DLS",77,0)
 D ^DIR Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","LEX10DLS",78,0)
 S:X["^^"!($D(DTOUT)) LEXIT=1
"RTN","LEX10DLS",79,0)
 I X["^^"!(+($G(LEXIT))>0) K LEX Q "^^"
"RTN","LEX10DLS",80,0)
 S X=$S(+Y>0:$$X(1,.LEX),1:-1)
"RTN","LEX10DLS",81,0)
 Q X
"RTN","LEX10DLS",82,0)
MUL(LEX,Y) ; Multiple Entries Found
"RTN","LEX10DLS",83,0)
 Q:+($G(LEXIT))>0 "^^"  N LEXE,LEXL,LEXMAX,LEXSS,LEXX,X
"RTN","LEX10DLS",84,0)
 S (LEXMAX,LEXSS,LEXIT)=0,LEXL=+($G(Y)),U="^" S:+($G(LEXL))'>0 LEXL=5
"RTN","LEX10DLS",85,0)
 S LEXX=$O(LEX(" "),-1),LEXSS=0
"RTN","LEX10DLS",86,0)
 G:+LEXX=0 MULQ W ! W:+LEXX>1 !," ",LEXX," matches found"
"RTN","LEX10DLS",87,0)
 F LEXE=1:1:LEXX Q:((LEXSS>0)&(LEXSS<(LEXE+1)))  Q:LEXIT  D  Q:LEXIT
"RTN","LEX10DLS",88,0)
 . W:LEXE#LEXL=1 ! D MULW
"RTN","LEX10DLS",89,0)
 . S LEXMAX=LEXE W:LEXE#LEXL=0 !
"RTN","LEX10DLS",90,0)
 . S:LEXE#LEXL=0 LEXSS=$$MULS(LEXMAX,LEXE,.LEX) S:LEXSS["^" LEXIT=1
"RTN","LEX10DLS",91,0)
 I LEXE#LEXL'=0,+LEXSS<=0 D
"RTN","LEX10DLS",92,0)
 . W ! S LEXSS=$$MULS(LEXMAX,LEXE,.LEX) S:LEXSS["^" LEXIT=1
"RTN","LEX10DLS",93,0)
 G MULQ
"RTN","LEX10DLS",94,0)
 Q X
"RTN","LEX10DLS",95,0)
MULW ; Write Multiple
"RTN","LEX10DLS",96,0)
 N LEXEX,LEXI,LEXSO,LEXNC,LEXT,LEXTX S LEXSO=$P(LEX(+LEXE,0),"^",1)
"RTN","LEX10DLS",97,0)
 S LEXNC=$P(LEX(+LEXE,0),"^",3) S:+LEXNC>0 LEXNC=" ("_LEXNC_")"
"RTN","LEX10DLS",98,0)
 S LEXEX=$G(LEX(+LEXE,"MENU")),LEXTX(1)=LEXSO
"RTN","LEX10DLS",99,0)
 S LEXTX(1)=LEXTX(1)_$S($D(LEX(+LEXE,"CAT")):"-",1:" ")_$J(" ",(9-$L(LEXSO)))_" "_LEXEX_LEXNC
"RTN","LEX10DLS",100,0)
 D PR(.LEXTX,60) W !,$J(LEXE,5),".  ",$G(LEXTX(1))
"RTN","LEX10DLS",101,0)
 F LEXI=2:1:5 S LEXT=$G(LEXTX(LEXI)) W:$L(LEXT) !,$J(" ",19),LEXT
"RTN","LEX10DLS",102,0)
 Q
"RTN","LEX10DLS",103,0)
MULS(X,Y,LEX) ; Select from Multiple Entries
"RTN","LEX10DLS",104,0)
 N DIR,DIRB,LEXFI,LEXHLP,LEXLAST,LEXMAX,LEXS
"RTN","LEX10DLS",105,0)
 Q:+($G(LEXIT))>0 "^^"  S LEXMAX=+($G(X)),LEXLAST=+($G(Y))
"RTN","LEX10DLS",106,0)
 Q:LEXMAX=0 -1 S LEXFI=$O(LEX(0)) Q:+LEXFI'>0 -1
"RTN","LEX10DLS",107,0)
 I +($O(LEX(+LEXLAST)))>0 D
"RTN","LEX10DLS",108,0)
 . S DIR("A")=" Press <RETURN> for more, ""^"" to exit, or Select 1-"
"RTN","LEX10DLS",109,0)
 . S DIR("A")=DIR("A")_LEXMAX_": "
"RTN","LEX10DLS",110,0)
 I +($O(LEX(+LEXLAST)))'>0 D
"RTN","LEX10DLS",111,0)
 . S DIR("A")=" Select 1-"_LEXMAX_": "
"RTN","LEX10DLS",112,0)
 S LEXHLP=" Answer must be from 1 to "
"RTN","LEX10DLS",113,0)
 S LEXHLP=LEXHLP_LEXMAX_", or <Return> to continue"
"RTN","LEX10DLS",114,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","LEX10DLS",115,0)
 S (DIR("?"),DIR("??"))="^D MULSH^LEX10DLS"
"RTN","LEX10DLS",116,0)
 S DIR(0)="NAO^1:"_LEXMAX_":0" D ^DIR
"RTN","LEX10DLS",117,0)
 Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","LEX10DLS",118,0)
 S:X["^^"!($D(DTOUT)) LEXIT=1,X="^^" I X["^^"!(+($G(LEXIT))>0) Q "^^"
"RTN","LEX10DLS",119,0)
 K DIR Q:$D(DTOUT)!(X[U) "^^"
"RTN","LEX10DLS",120,0)
 Q $S(+Y>0:+Y,1:"-1")
"RTN","LEX10DLS",121,0)
MULSH ; Select from Multiple Entries Help
"RTN","LEX10DLS",122,0)
 I $L($G(LEXHLP)) W !,$G(LEXHLP) Q
"RTN","LEX10DLS",123,0)
 Q
"RTN","LEX10DLS",124,0)
MULQ ; Quit Multiple
"RTN","LEX10DLS",125,0)
 I +LEXSS'>0,$G(LEXSS)="^" Q "^"
"RTN","LEX10DLS",126,0)
 S X=-1 S:+($G(LEXIT))'>0 X=$$X(+LEXSS,.LEX)
"RTN","LEX10DLS",127,0)
 Q X
"RTN","LEX10DLS",128,0)
X(X,LEX) ; Set X and Outpot Array
"RTN","LEX10DLS",129,0)
 N LEXEX,LEXFI,LEXIEN,LEXN,LEXNC,LEXNN,LEXRN,LEXS,LEXSO
"RTN","LEX10DLS",130,0)
 S LEXS=+($G(X)) S LEXFI=$O(LEX(0))
"RTN","LEX10DLS",131,0)
 S LEXSO=$P($G(LEX(LEXS,0)),"^",1),LEXEX=$G(LEX(LEXS,"MENU"))
"RTN","LEX10DLS",132,0)
 S LEXIEN=$S($D(LEX(LEXS,"CAT")):"99:CAT;"_$P($G(LEX(LEXS,0)),"^"),1:$P($G(LEX(LEXS,"LEX",1)),"^")_";"_$P($G(LEX(LEXS,0)),"^")) Q:'$L(LEXSO) "^"
"RTN","LEX10DLS",133,0)
 Q:'$L(LEXEX) "^"  Q:+LEXIEN'>0 "^" S X=LEXIEN_"^"_LEXEX
"RTN","LEX10DLS",134,0)
 S LEXNN="LEX("_+LEXS_")",LEXNC="LEX("_+LEXS_","
"RTN","LEX10DLS",135,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10DLS",136,0)
 . S LEXRN="LEXN("_$P(LEXNN,"(",2,299) S @LEXRN=@LEXNN
"RTN","LEX10DLS",137,0)
 K LEX S LEXNN="LEXN("_+LEXS_")",LEXNC="LEXN("_+LEXS_","
"RTN","LEX10DLS",138,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10DLS",139,0)
 . S LEXRN="LEX("_$P(LEXNN,"(",2,299),@LEXRN=@LEXNN
"RTN","LEX10DLS",140,0)
 Q X
"RTN","LEX10DLS",141,0)
CONT(X,Y) ; Ask to Continue
"RTN","LEX10DLS",142,0)
 K DTOUT,DUOUT,DIRUT,DIROUT N LEXX,LEXFQ,LEXW,LEXI,LEXC,DIR
"RTN","LEX10DLS",143,0)
 S LEXX=$$UP^XLFSTR($G(X)),LEXFQ=$G(Y) Q:'$L(LEXX) 1  Q:LEXFQ'>0 1
"RTN","LEX10DLS",144,0)
 S LEXW(1)="Searching for """_LEXX_""" requires inspecting "
"RTN","LEX10DLS",145,0)
 S LEXW(2)=LEXFQ_" records to determine if they match the "
"RTN","LEX10DLS",146,0)
 S LEXW(3)="search criteria.  This could take quite some time."
"RTN","LEX10DLS",147,0)
 S LEXW(4)="Suggest refining the search by further specifying "
"RTN","LEX10DLS",148,0)
 S LEXW(5)=""""_LEXX_"."""
"RTN","LEX10DLS",149,0)
 D PR(.LEXW,60) S (LEXC,LEXI)=0 F  S LEXI=$O(LEXW(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10DLS",150,0)
 . Q:'$L($G(LEXW(LEXI)))  S LEXC=LEXC+1 S DIR("A",LEXC)="   "_$G(LEXW(LEXI))
"RTN","LEX10DLS",151,0)
 I LEXC>0 S LEXC=LEXC+1,DIR("A",LEXC)=" "
"RTN","LEX10DLS",152,0)
 S DIR("A")=" Do you wish to continue?  (Y/N)  ",DIR("B")="No"
"RTN","LEX10DLS",153,0)
 S DIR(0)="YAO",(DIR("?"),DIR("??"))="^D COH^LEX10DLS"
"RTN","LEX10DLS",154,0)
 S DIR("PRE")="S:X[""?"" X=""??""" W ! D ^DIR
"RTN","LEX10DLS",155,0)
 S X=+Y S:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) X="^"
"RTN","LEX10DLS",156,0)
 Q X
"RTN","LEX10DLS",157,0)
COH ;   Continue Help
"RTN","LEX10DLS",158,0)
 I $L($G(LEXX))>0 D
"RTN","LEX10DLS",159,0)
 . W !,"   Enter   To"
"RTN","LEX10DLS",160,0)
 . W !,"   'Yes'   continue searching for """,LEXX,"""."
"RTN","LEX10DLS",161,0)
 . W !,"   'No'    refine the search (further specify)"
"RTN","LEX10DLS",162,0)
 . W !,"   '^'     discontinue the search and exit"
"RTN","LEX10DLS",163,0)
 I '$L($G(LEXX))>0 D
"RTN","LEX10DLS",164,0)
 . W !,"   Enter   To"
"RTN","LEX10DLS",165,0)
 . W !,"   'Yes'   continue the search"
"RTN","LEX10DLS",166,0)
 . W !,"   'No'    refine the search (further specify)"
"RTN","LEX10DLS",167,0)
 . W !,"   '^'     discontinue the search and exit"
"RTN","LEX10DLS",168,0)
 Q
"RTN","LEX10DLS",169,0)
 ;
"RTN","LEX10DLS",170,0)
 ; Miscellaneous
"RTN","LEX10DLS",171,0)
CL ; Clear
"RTN","LEX10DLS",172,0)
 K LEXIT
"RTN","LEX10DLS",173,0)
 Q
"RTN","LEX10DLS",174,0)
PR(LEX,X) ; Parse Array
"RTN","LEX10DLS",175,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,Z,LEXC,LEXI,LEXL
"RTN","LEX10DLS",176,0)
 K ^UTILITY($J,"W") Q:'$D(LEX)  S LEXL=+($G(X)) S:+LEXL'>0 LEXL=79
"RTN","LEX10DLS",177,0)
 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEX10DLS",178,0)
 S DIWL=1,DIWF="C"_+LEXL S LEXI=0
"RTN","LEX10DLS",179,0)
 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEX10DLS",180,0)
 K LEX S (LEXC,LEXI)=0
"RTN","LEX10DLS",181,0)
 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEX10DLS",182,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEX10DLS",183,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEX10DLS",184,0)
 Q
"RTN","LEX10DLS",185,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","LEX10DLS",186,0)
 S X=$G(X) Q:X="" X S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10DLS",187,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10DLS",188,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10DLS",189,0)
 Q X
"RTN","LEX10DU")
0^105^B116539995
"RTN","LEX10DU",1,0)
LEX10DU ;ISL/KER - ICD-10 Diagnosis Utilities ;04/21/2014
"RTN","LEX10DU",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DU",3,0)
 ;               
"RTN","LEX10DU",4,0)
 ; Global Variables
"RTN","LEX10DU",5,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10DU",6,0)
 ;    ^TMP("DIAGSRCH"     SACC 2.3.2.5.1
"RTN","LEX10DU",7,0)
 ;    ^TMP("LEXDX")       SACC 2.3.2.5.1
"RTN","LEX10DU",8,0)
 ;    ^TMP("LEXTKN"       SACC 2.3.2.5.1
"RTN","LEX10DU",9,0)
 ;               
"RTN","LEX10DU",10,0)
 ; External References
"RTN","LEX10DU",11,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10DU",12,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEX10DU",13,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEX10DU",14,0)
 ;    $$SD^ICDEX          ICR   5747
"RTN","LEX10DU",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DU",16,0)
 ;               
"RTN","LEX10DU",17,0)
 ; Local Variables NEWed or KILLed by calling 
"RTN","LEX10DU",18,0)
 ; routine LEX10DBT, LEX10DBC or LEX10CS
"RTN","LEX10DU",19,0)
 ;     LEXA 
"RTN","LEX10DU",20,0)
 ;     LEXCS
"RTN","LEX10DU",21,0)
 ;     LEXDATA
"RTN","LEX10DU",22,0)
 ;     LEXFI
"RTN","LEX10DU",23,0)
 ;     LEXINC
"RTN","LEX10DU",24,0)
 ;     LEXVDT
"RTN","LEX10DU",25,0)
 ;     
"RTN","LEX10DU",26,0)
 Q
"RTN","LEX10DU",27,0)
REDUCE(X) ; Reduce List
"RTN","LEX10DU",28,0)
 N LEXC,LEXIT,LEXLEN,LEXMAX,LEXPRE,LEXUSE
"RTN","LEX10DU",29,0)
 S LEXUSE=0,LEXLEN=8,LEXPRE=7,LEXMAX=+($G(X))
"RTN","LEX10DU",30,0)
 S:LEXMAX'>0 LEXMAX=30 S LEXCT=+($G(LEXCT)) Q:+LEXCT'>0
"RTN","LEX10DU",31,0)
 S LEXIT=0 F  Q:LEXCT'>LEXMAX!(LEXIT)  D  Q:LEXIT
"RTN","LEX10DU",32,0)
 . S:LEXPRE=LEXLEN LEXIT=1 Q:LEXIT
"RTN","LEX10DU",33,0)
 . N LEXC S LEXC="",LEXCT=0
"RTN","LEX10DU",34,0)
 . F  S LEXC=$O(^TMP("LEXDX",$J,LEXC)) Q:'$L(LEXC)  D
"RTN","LEX10DU",35,0)
 . . I $L(LEXC)=(LEXLEN+1) D  Q
"RTN","LEX10DU",36,0)
 . . . N LEXCAT,LEXIS,LEXNCT,LEXNCD,LEXNPR,LEXCE,LEXTX
"RTN","LEX10DU",37,0)
 . . . S LEXCAT=$$CAT(LEXC),LEXCE=$P(LEXCAT,"^",2)
"RTN","LEX10DU",38,0)
 . . . S LEXTX=$P(LEXCAT,"^",3),LEXCAT=$P(LEXCAT,"^",1)
"RTN","LEX10DU",39,0)
 . . . K ^TMP("LEXDX",$J,LEXC) S LEXUSE=1
"RTN","LEX10DU",40,0)
 . . . Q:$D(^TMP("LEXDX",$J,(LEXCAT_" ")))
"RTN","LEX10DU",41,0)
 . . . S LEXIS=$$ISCAT(LEXCAT)
"RTN","LEX10DU",42,0)
 . . . S LEXNCT=$P(LEXIS,"^",2)
"RTN","LEX10DU",43,0)
 . . . S LEXNCD=$P(LEXIS,"^",3)
"RTN","LEX10DU",44,0)
 . . . S LEXNPR=$P(LEXIS,"^",4)
"RTN","LEX10DU",45,0)
 . . . I $L(LEXCAT),LEXCE?7N,$L(LEXTX) D
"RTN","LEX10DU",46,0)
 . . . . N LEX S LEX=LEXCE_"^"_LEXTX
"RTN","LEX10DU",47,0)
 . . . . S:+($G(LEXNCD))>0 $P(LEX,"^",3)=+($G(LEXNCD))
"RTN","LEX10DU",48,0)
 . . . . S ^TMP("LEXDX",$J,(LEXCAT_" "))="^"_LEX S LEXCT=LEXCT+1
"RTN","LEX10DU",49,0)
 . . S LEXCT=LEXCT+1
"RTN","LEX10DU",50,0)
 . I LEXPRE>3 S LEXLEN=LEXPRE,LEXPRE=LEXPRE-1 Q
"RTN","LEX10DU",51,0)
 . S:LEXPRE=3 LEXIT=1
"RTN","LEX10DU",52,0)
 S LEXC="" F  S LEXC=$O(^TMP("LEXDX",$J,LEXC)) Q:'$L(LEXC)  D
"RTN","LEX10DU",53,0)
 . S LEXCT=$P($G(^TMP("LEXDX",$J,LEXC)),"^",4) Q:LEXCT'>0
"RTN","LEX10DU",54,0)
 . N LEXCTL,LEXNXT,LEXCT S LEXCTL=$TR(LEXC," ") Q:'$L(LEXCTL)
"RTN","LEX10DU",55,0)
 . S LEXNXT=$O(^TMP("LEXDX",$J,(LEXCTL_" "))) Q:'$L(LEXNXT)
"RTN","LEX10DU",56,0)
 . K:$E(LEXNXT,1,$L(LEXCTL))=LEXCTL ^TMP("LEXDX",$J,(LEXCTL_" "))
"RTN","LEX10DU",57,0)
 Q
"RTN","LEX10DU",58,0)
ARY ; Build Local Array
"RTN","LEX10DU",59,0)
 N LEXC,LEXACT S LEXC="",LEXACT=0
"RTN","LEX10DU",60,0)
 F  S LEXC=$O(^TMP("LEXDX",$J,LEXC)) Q:'$L(LEXC)  D
"RTN","LEX10DU",61,0)
 . N LEXSIEN,LEXEIEN,LEXEXP,LEXCAT,LEXND,LEXD,LEXSO,LEXNC
"RTN","LEX10DU",62,0)
 . S LEXND=$G(^TMP("LEXDX",$J,LEXC))
"RTN","LEX10DU",63,0)
 . S LEXSIEN=+LEXND,LEXD=$P($P(LEXND,"^",2),".",1)
"RTN","LEX10DU",64,0)
 . S LEXCAT=$P(LEXND,"^",3),LEXNC=$P(LEXND,"^",4)
"RTN","LEX10DU",65,0)
 . S LEXEIEN=+($G(^LEX(757.02,+LEXSIEN,0)))
"RTN","LEX10DU",66,0)
 . S LEXEXP=$G(^LEX(757.01,+LEXEIEN,0)),LEXSO=$$TM(LEXC)
"RTN","LEX10DU",67,0)
 . I '$L(LEXCAT) Q:LEXSIEN'>0  Q:LEXEIEN'>0  Q:'$L(LEXEXP)
"RTN","LEX10DU",68,0)
 . Q:($G(LEXCDT)?7N)&(LEXD'?7N)  Q:'$D(LEXCDT)&(LEXD'?7N)  Q:'$L(LEXSO)
"RTN","LEX10DU",69,0)
 . I +LEXSIEN>0 D
"RTN","LEX10DU",70,0)
 . . S LEXACT=LEXACT+1 S LEXA(LEXACT)=LEXSIEN_"^"_LEXSO_"^"_LEXD
"RTN","LEX10DU",71,0)
 . . S LEXA(LEXACT,0)=+LEXEIEN_"^"_LEXEXP
"RTN","LEX10DU",72,0)
 . I +LEXSIEN'>0,$L(LEXCAT) D
"RTN","LEX10DU",73,0)
 . . N LEX S LEX="^"_LEXSO_"^"_LEXD
"RTN","LEX10DU",74,0)
 . . S:+($G(LEXNC))>0 $P(LEX,"^",4)=+($G(LEXNC))
"RTN","LEX10DU",75,0)
 . . S LEXACT=LEXACT+1 S LEXA(LEXACT)=LEX
"RTN","LEX10DU",76,0)
 . . S LEXA(LEXACT,0)="^"_LEXCAT
"RTN","LEX10DU",77,0)
 . S LEXA(0)=LEXACT
"RTN","LEX10DU",78,0)
 S:+($G(LEXA(0)))'>0 LEXA(0)=-1 Q:+($G(LEXA(0)))'>0
"RTN","LEX10DU",79,0)
 S:+($G(LEXUSE))>0&($G(LEXA(0))>0) $P(LEXA(0),"^",2)=1
"RTN","LEX10DU",80,0)
 Q
"RTN","LEX10DU",81,0)
DXARY ; Build Output Array from Search Results
"RTN","LEX10DU",82,0)
 N LEXOI,LEXC,LEXCO,LEXCT S LEXFI=+($G(LEXFI)) Q:"^80^"'[("^"_LEXFI_"^")
"RTN","LEX10DU",83,0)
 S LEXCS=+($G(LEXCS)) Q:+LEXCS'>0  Q:"^1^30^"'[("^"_LEXCS_"^")
"RTN","LEX10DU",84,0)
 K ^TMP("DIAGSRCH",$J) S (LEXCT,LEXOI)=0
"RTN","LEX10DU",85,0)
 F  S LEXOI=$O(LEXOUT(LEXOI)) Q:+LEXOI'>0  D
"RTN","LEX10DU",86,0)
 . N LEXC,LEXI S LEXC=$P($G(LEXOUT(LEXOI)),"^",2) Q:'$L(LEXC)
"RTN","LEX10DU",87,0)
 . S ^TMP("DIAGSRCH",$J,(LEXC_" "))=$G(LEXOUT(LEXOI))
"RTN","LEX10DU",88,0)
 . S ^TMP("DIAGSRCH",$J,(LEXC_" "),0)=$G(LEXOUT(LEXOI,0))
"RTN","LEX10DU",89,0)
 . Q:+($G(LEXCS))'=30  F LEXI=1:1:$L(LEXC) D
"RTN","LEX10DU",90,0)
 . . Q
"RTN","LEX10DU",91,0)
 . . N LEXS,LEXSD,LEXSI,LEXSN,LEXF,LEXFA S LEXS=$E(LEXC,1,($L(LEXC)-LEXI))
"RTN","LEX10DU",92,0)
 . . Q:'$D(^LEX(757.033,"AFRAG",30,(LEXS_" ")))
"RTN","LEX10DU",93,0)
 . . S LEXSD=$O(^LEX(757.033,"AFRAG",30,(LEXS_" "),0))
"RTN","LEX10DU",94,0)
 . . Q:LEXSD'?7N  Q:+($G(LEXVDT))<LEXSD
"RTN","LEX10DU",95,0)
 . . S LEXSI=$O(^LEX(757.033,"AFRAG",30,(LEXS_" "),LEXSD,0))
"RTN","LEX10DU",96,0)
 . . Q:+LEXSI'>0  S LEXSN=$$LN(+LEXSI)
"RTN","LEX10DU",97,0)
 . . S:'$L(LEXSN) LEXSN=$$SN(+LEXSI) Q:'$L(LEXSN)
"RTN","LEX10DU",98,0)
 . . S ^TMP("DIAGSRCH",$J,(LEXS_" "))="-^"_LEXS_"^"_LEXSD
"RTN","LEX10DU",99,0)
 . . S ^TMP("DIAGSRCH",$J,(LEXS_" "),0)="-^"_LEXSN
"RTN","LEX10DU",100,0)
 K LEXOUT S LEXCO="" F  S LEXCO=$O(^TMP("DIAGSRCH",$J,LEXCO)) Q:'$L(LEXCO)  D
"RTN","LEX10DU",101,0)
 . N LEXC,LEXEFF,LEXEIEN,LEXEXP,LEXI,LEXICD,LEXICDT,LEXLD,LEXLDE
"RTN","LEX10DU",102,0)
 . N LEXN1,LEXN2,LEXND,LEXO,LEXP1,LEXP2,LEXP3,LEXPF,LEXPR,LEXS
"RTN","LEX10DU",103,0)
 . N LEXSD,LEXSDE,LEXSIEN,LEXSY,LEXMSG
"RTN","LEX10DU",104,0)
 . S LEXN1=$G(^TMP("DIAGSRCH",$J,LEXCO))
"RTN","LEX10DU",105,0)
 . S LEXN2=$G(^TMP("DIAGSRCH",$J,LEXCO,0))
"RTN","LEX10DU",106,0)
 . S LEXSIEN=+LEXN1,LEXEIEN=+LEXN2
"RTN","LEX10DU",107,0)
 . S LEXC=$P(LEXN1,"^",2),LEXEFF=$P(LEXN1,"^",3)
"RTN","LEX10DU",108,0)
 . S LEXMSG=$$MSG(LEXC)
"RTN","LEX10DU",109,0)
 . S LEXEXP=$P(LEXN2,"^",2)
"RTN","LEX10DU",110,0)
 . I LEXSIEN'>0,LEXEIEN'>0 D  Q
"RTN","LEX10DU",111,0)
 . . N LEXO,LEXC,LEXE,LEXT,LEXN,LEXNC,LEXMSG
"RTN","LEX10DU",112,0)
 . . S LEXC=$P(LEXN1,"^",2) Q:'$L(LEXC)
"RTN","LEX10DU",113,0)
 . . S LEXE=$P(LEXN1,"^",3) Q:LEXE'?7N
"RTN","LEX10DU",114,0)
 . . S LEXNC=$P(LEXN1,"^",4)
"RTN","LEX10DU",115,0)
 . . S LEXNC=$S(+LEXNC>0:+LEXNC,1:"")
"RTN","LEX10DU",116,0)
 . . S LEXN=$P(LEXN2,"^",2) Q:'$L(LEXN)
"RTN","LEX10DU",117,0)
 . . S LEXT="CAT"
"RTN","LEX10DU",118,0)
 . . S LEXO=$O(LEXDATA(" "),-1)+1
"RTN","LEX10DU",119,0)
 . . S LEXDATA(LEXO,0)=LEXC_$S($G(LEXEFF)?7N:("^"_LEXEFF),1:"")
"RTN","LEX10DU",120,0)
 . . S:+LEXNC>0 $P(LEXDATA(LEXO,0),"^",3)=+LEXNC
"RTN","LEX10DU",121,0)
 . . S LEXDATA(LEXO,LEXT)=LEXN
"RTN","LEX10DU",122,0)
 . . S LEXDATA(LEXO,"MENU")=LEXN
"RTN","LEX10DU",123,0)
 . . S:$L($G(LEXMSG)) LEXDATA(LEXO,"MSG")=$G(LEXMSG)
"RTN","LEX10DU",124,0)
 . I LEXCS=1!(LEXCS=30) D
"RTN","LEX10DU",125,0)
 . . S LEXICD=$$ICDDX^ICDEX(LEXC,LEXVDT,LEXCS,"E") S (LEXSD,LEXLD)=""
"RTN","LEX10DU",126,0)
 . . S:+LEXICD>0 LEXSD=$$SD^ICDEX(80,+LEXICD,LEXVDT,.LEXSD)
"RTN","LEX10DU",127,0)
 . . I LEXVDT'?7N,$P(LEXSD,"^",1)="-1" D
"RTN","LEX10DU",128,0)
 . . . N LEXSH,LEXT,LEXE S LEXT=$$SDH^ICDEX(80,+LEXICD,.LEXSH)
"RTN","LEX10DU",129,0)
 . . . S LEXE=$O(LEXSH(9999999),-1),LEXS=$G(LEXSH(+LEXE)) S:$L(LEXS) LEXSD=LEXS
"RTN","LEX10DU",130,0)
 . . . S:+($G(LEXSH(0)))>0 LEXSD(0)=$P($G(LEXSH(0)),"^",1,2)
"RTN","LEX10DU",131,0)
 . . S LEXSDE=$P($G(LEXSD(0)),"^",2) S:LEXSDE'?7N LEXSDE="" S LEXLD=""
"RTN","LEX10DU",132,0)
 . . S:+LEXICD>0 LEXLD=$$LD^ICDEX(80,+LEXICD,LEXVDT,.LEXLD)
"RTN","LEX10DU",133,0)
 . . I LEXVDT'?7N,$P(LEXLD,"^",1)="-1" D
"RTN","LEX10DU",134,0)
 . . . N LEXLH,LEXT,LEXE S LEXT=$$LDH^ICDEX(80,+LEXICD,.LEXLH)
"RTN","LEX10DU",135,0)
 . . . S LEXE=$O(LEXLH(9999999),-1),LEXS=$G(LEXLH(+LEXE)) S:$L(LEXS) LEXLD=LEXS
"RTN","LEX10DU",136,0)
 . . . S:+($G(LEXLH(0)))>0 LEXLD(0)=$P($G(LEXLH(0)),"^",1,2)
"RTN","LEX10DU",137,0)
 . . S LEXLDE=$P($G(LEXLD(0)),"^",2) S:LEXLDE'?7N LEXLDE=""
"RTN","LEX10DU",138,0)
 . . S:$E(LEXLD,1,2)="-1" LEXLD=""
"RTN","LEX10DU",139,0)
 . S:LEXSIEN>0&(+LEXEIEN>0) LEXCT=+($G(LEXCT))+1
"RTN","LEX10DU",140,0)
 . S LEXO=$O(LEXDATA(" "),-1)+1,LEXDATA(LEXO,0)=LEXC
"RTN","LEX10DU",141,0)
 . I $D(LEXINC) D
"RTN","LEX10DU",142,0)
 . . S:+LEXSIEN>0 $P(LEXDATA(LEXO,0),"^",2)=+LEXSIEN
"RTN","LEX10DU",143,0)
 . . S:+LEXSIEN>0&(LEXEFF?7N) $P(LEXDATA(LEXO,0),"^",3)=LEXEFF
"RTN","LEX10DU",144,0)
 . I '$D(LEXINC) D
"RTN","LEX10DU",145,0)
 . . S:+LEXSIEN>0&(LEXEFF?7N) $P(LEXDATA(LEXO,0),"^",2)=LEXEFF
"RTN","LEX10DU",146,0)
 . S (LEXDATA(LEXO,"LEX"),LEXDATA(LEXO,"MENU"))=LEXEXP
"RTN","LEX10DU",147,0)
 . S:$L($G(LEXMSG)) LEXDATA(LEXO,"MSG")=$G(LEXMSG)
"RTN","LEX10DU",148,0)
 . S:+LEXEIEN>0 LEXDATA(LEXO,"LEX",1)=+LEXEIEN
"RTN","LEX10DU",149,0)
 . S:+LEXEIEN>0&(LEXEFF?7N) $P(LEXDATA(LEXO,"LEX",1),"^",2)=LEXEFF
"RTN","LEX10DU",150,0)
 . S LEXICDT="" S:$L($G(LEXSD)) LEXDATA(LEXO,"IDS")=LEXSD
"RTN","LEX10DU",151,0)
 . S:$L($G(LEXSD))&(+LEXICD>0) $P(LEXICDT,"^",1)=+LEXICD
"RTN","LEX10DU",152,0)
 . S:$L($G(LEXSD))&(+LEXICD>0)&(LEXSDE?7N) $P(LEXICDT,"^",2)=+LEXSDE
"RTN","LEX10DU",153,0)
 . S:$L(LEXICDT) LEXDATA(LEXO,"IDS",1)=LEXICDT
"RTN","LEX10DU",154,0)
 . S LEXICDT="" S:$L($G(LEXLD)) LEXDATA(LEXO,"IDL")=LEXLD
"RTN","LEX10DU",155,0)
 . S:$L($G(LEXLD))&(+LEXICD>0) $P(LEXICDT,"^",1)=+LEXICD
"RTN","LEX10DU",156,0)
 . S:$L($G(LEXLD))&(+LEXICD>0)&(LEXLDE?7N) $P(LEXICDT,"^",2)=+LEXLDE
"RTN","LEX10DU",157,0)
 . S:$L(LEXICDT) LEXDATA(LEXO,"IDL",1)=LEXICDT
"RTN","LEX10DU",158,0)
 . S LEXDATA(0)=+($G(LEXCT))
"RTN","LEX10DU",159,0)
 . S:+($G(LEXPR))>0 $P(LEXDATA(0),"^",2)=+($G(LEXPR))
"RTN","LEX10DU",160,0)
 . S LEXSY="" D GETSYN^LEXTRAN1("10D",LEXC,LEXVDT,"LEXSY",1)
"RTN","LEX10DU",161,0)
 . S LEXPF=$G(LEXSY("P")),LEXP1=$P(LEXPF,"^",1),LEXP2=$P(LEXPF,"^",2)
"RTN","LEX10DU",162,0)
 . S LEXP3=$P(LEXPF,"^",3) I $L(LEXP1),+LEXP2>0 D
"RTN","LEX10DU",163,0)
 . . S LEXDATA(LEXO,"LEX")=$P(LEXPF,"^",1)
"RTN","LEX10DU",164,0)
 . . S:LEXP2>0 $P(LEXDATA(LEXO,"LEX",1),"^",1)=LEXP2
"RTN","LEX10DU",165,0)
 . . S:LEXP3>0 $P(LEXDATA(LEXO,"LEX",1),"^",2)=LEXP3
"RTN","LEX10DU",166,0)
 . S LEXI=0 F  S LEXI=$O(LEXSY("S",LEXI)) Q:+LEXI'>0  D
"RTN","LEX10DU",167,0)
 . . N LEXS,LEXND,LEXP1,LEXP2 S LEXND=$G(LEXSY("S",LEXI))
"RTN","LEX10DU",168,0)
 . . S LEXP1=$P(LEXND,"^",1),LEXP2=+($P(LEXND,"^",2)) Q:LEXP2'>0
"RTN","LEX10DU",169,0)
 . . Q:'$L(LEXP1)  S LEXS=$O(LEXDATA(LEXO,"SYN"," "),-1)+1
"RTN","LEX10DU",170,0)
 . . S LEXDATA(LEXO,"SYN",LEXS)=LEXND
"RTN","LEX10DU",171,0)
 . . S LEXDATA(LEXO,"SYN",0)=+LEXS
"RTN","LEX10DU",172,0)
 S:$O(LEXDATA(" "),-1)>0 LEXDATA(0)=$O(LEXDATA(" "),-1)
"RTN","LEX10DU",173,0)
 K ^TMP("DIAGSRCH",$J)
"RTN","LEX10DU",174,0)
 Q
"RTN","LEX10DU",175,0)
 ;               
"RTN","LEX10DU",176,0)
 ; Miscellaneous
"RTN","LEX10DU",177,0)
ISCAT(CODE) ;   Is Code a Category
"RTN","LEX10DU",178,0)
 ;
"RTN","LEX10DU",179,0)
 ;   Input
"RTN","LEX10DU",180,0)
 ;  
"RTN","LEX10DU",181,0)
 ;      CODE     Code or Category
"RTN","LEX10DU",182,0)
 ;
"RTN","LEX10DU",183,0)
 ;   Output
"RTN","LEX10DU",184,0)
 ; 
"RTN","LEX10DU",185,0)
 ;      $$ISCAT  4 Piece "^" Delimited String
"RTN","LEX10DU",186,0)
 ;    
"RTN","LEX10DU",187,0)
 ;                1  Category flag
"RTN","LEX10DU",188,0)
 ;                      1 CODE is a Category
"RTN","LEX10DU",189,0)
 ;                      0 CODE is not a Category
"RTN","LEX10DU",190,0)
 ;                  
"RTN","LEX10DU",191,0)
 ;                2  Number of Sub-Categories belonging
"RTN","LEX10DU",192,0)
 ;                   to the Category
"RTN","LEX10DU",193,0)
 ;                
"RTN","LEX10DU",194,0)
 ;                3  Number of Codes belonging to the 
"RTN","LEX10DU",195,0)
 ;                   Category
"RTN","LEX10DU",196,0)
 ;                   
"RTN","LEX10DU",197,0)
 ;                4  Parent Category 
"RTN","LEX10DU",198,0)
 ;                      Parent Category
"RTN","LEX10DU",199,0)
 ;                      Null if no Parent Category
"RTN","LEX10DU",200,0)
 ;         
"RTN","LEX10DU",201,0)
 N CATS,PAR S CODE=$P($G(CODE),"^",1) Q:'$L(CODE) 0
"RTN","LEX10DU",202,0)
 S:$L(CODE)=3&(CODE'[".") CODE=CODE_"."
"RTN","LEX10DU",203,0)
 Q:$L(CODE)>3&(CODE'[".") 0
"RTN","LEX10DU",204,0)
 S CATS=$$INC(CODE),PAR=$$PAR(CODE)
"RTN","LEX10DU",205,0)
 Q:$D(^LEX(757.033,"AFRAG",30,(CODE_" "))) ("1^"_CATS_"^"_PAR)
"RTN","LEX10DU",206,0)
 Q 0
"RTN","LEX10DU",207,0)
INC(X) ;   Category includes Cat/Codes
"RTN","LEX10DU",208,0)
 ;
"RTN","LEX10DU",209,0)
 ;   Input
"RTN","LEX10DU",210,0)
 ;  
"RTN","LEX10DU",211,0)
 ;      CODE     Code or Category
"RTN","LEX10DU",212,0)
 ;
"RTN","LEX10DU",213,0)
 ;   Output     
"RTN","LEX10DU",214,0)
 ;   
"RTN","LEX10DU",215,0)
 ;      $$INC    2 Piece "^" Delimited String
"RTN","LEX10DU",216,0)
 ;    
"RTN","LEX10DU",217,0)
 ;                  1  Number of Sub-Categories belonging
"RTN","LEX10DU",218,0)
 ;                     to the Category
"RTN","LEX10DU",219,0)
 ;               
"RTN","LEX10DU",220,0)
 ;                  2  Number of Codes belonging to the 
"RTN","LEX10DU",221,0)
 ;                     Category
"RTN","LEX10DU",222,0)
 ;         
"RTN","LEX10DU",223,0)
 Q ($$CATS($G(X))_"^"_$$CODES($G(X)))
"RTN","LEX10DU",224,0)
CATS(X) ;   Number of Categories in a Category
"RTN","LEX10DU",225,0)
 ;
"RTN","LEX10DU",226,0)
 ;   Input
"RTN","LEX10DU",227,0)
 ;  
"RTN","LEX10DU",228,0)
 ;      X        Category
"RTN","LEX10DU",229,0)
 ;
"RTN","LEX10DU",230,0)
 ;   Output     
"RTN","LEX10DU",231,0)
 ;   
"RTN","LEX10DU",232,0)
 ;      $$CATS   Number of Sub-Categories belonging to a Category
"RTN","LEX10DU",233,0)
 ;    
"RTN","LEX10DU",234,0)
 N CODE,ORG,ORD,CTL S (CTL,CODE)=$G(X),(ORG,ORD)=$E(CODE,1,($L(CODE)-1))_$C($A($E(CODE,$L(CODE)))-1)_"~"
"RTN","LEX10DU",235,0)
 S X=0 F  S ORD=$O(^LEX(757.033,"AFRAG",30,ORD)) Q:'$L(ORD)!(ORD'[CTL)  S:ORD'=(CODE_" ") X=X+1
"RTN","LEX10DU",236,0)
 Q X
"RTN","LEX10DU",237,0)
PAR(X) ;   Parent Category
"RTN","LEX10DU",238,0)
 N INP,PSN,EXIT,PAR S INP=$G(X),EXIT=0,PAR=""
"RTN","LEX10DU",239,0)
 F PSN=$L(INP):-1:4 D  Q:EXIT  Q:$L($G(PAR))
"RTN","LEX10DU",240,0)
 . N STR S STR=$E(INP,1,PSN) Q:$L(STR)'<$L(INP)  Q:$L(STR)'>3
"RTN","LEX10DU",241,0)
 . Q:'$D(^LEX(757.033,"AFRAG",30,(STR_" ")))
"RTN","LEX10DU",242,0)
 . S PAR=STR,EXIT=1
"RTN","LEX10DU",243,0)
 S X=$S($L(PAR):PAR,1:"")
"RTN","LEX10DU",244,0)
 Q X
"RTN","LEX10DU",245,0)
CODES(X) ;   Number of Codes in a Category
"RTN","LEX10DU",246,0)
 ;
"RTN","LEX10DU",247,0)
 ;   Input
"RTN","LEX10DU",248,0)
 ;  
"RTN","LEX10DU",249,0)
 ;      X        Category
"RTN","LEX10DU",250,0)
 ;
"RTN","LEX10DU",251,0)
 ;   Output     
"RTN","LEX10DU",252,0)
 ;   
"RTN","LEX10DU",253,0)
 ;      $$CODES  Number of codes belonging to a Category
"RTN","LEX10DU",254,0)
 ;    
"RTN","LEX10DU",255,0)
 N CODE,ORG,ORD,CTL S (CTL,CODE)=$G(X),(ORG,ORD)=$E(CODE,1,($L(CODE)-1))_$C($A($E(CODE,$L(CODE)))-1)_"~"
"RTN","LEX10DU",256,0)
 S X=0 F  S ORD=$O(^LEX(757.02,"ADX",ORD)) Q:'$L(ORD)!(ORD'[CTL)  S:ORD'=(CODE_" ") X=X+1
"RTN","LEX10DU",257,0)
 Q X
"RTN","LEX10DU",258,0)
CAT(CODE) ;   Get Category for Code
"RTN","LEX10DU",259,0)
 ;
"RTN","LEX10DU",260,0)
 ;   Input
"RTN","LEX10DU",261,0)
 ;  
"RTN","LEX10DU",262,0)
 ;      CODE    Code or Category
"RTN","LEX10DU",263,0)
 ;
"RTN","LEX10DU",264,0)
 ;   Output
"RTN","LEX10DU",265,0)
 ; 
"RTN","LEX10DU",266,0)
 ;      $$CAT   3 Piece "^" Delimited String
"RTN","LEX10DU",267,0)
 ;    
"RTN","LEX10DU",268,0)
 ;                  1  Category
"RTN","LEX10DU",269,0)
 ;                  2  Effective Date
"RTN","LEX10DU",270,0)
 ;                  3  Category  Name
"RTN","LEX10DU",271,0)
 ;         
"RTN","LEX10DU",272,0)
 ;                  Null on error
"RTN","LEX10DU",273,0)
 ; 
"RTN","LEX10DU",274,0)
 S CODE=$G(CODE) Q:'$L(CODE) ""  N FRAG,MAX,OUT,TDT,LEN S FRAG=$TR(CODE," ","")
"RTN","LEX10DU",275,0)
 S OUT="",TDT=$P($G(LEXVDT),".",1),MAX=$L(FRAG) F LEN=MAX:-1:3 D  Q:$L(OUT)
"RTN","LEX10DU",276,0)
 . N EFF,NAM,IEN S FRAG=$E(FRAG,1,(LEN-1))
"RTN","LEX10DU",277,0)
 . S:$L(FRAG)=3&(FRAG'[".") FRAG=FRAG_"." Q:$L(FRAG)'>3
"RTN","LEX10DU",278,0)
 . S EFF=$O(^LEX(757.033,"AFRAG",30,(FRAG_" ")," "),-1)
"RTN","LEX10DU",279,0)
 . S:TDT?7N EFF=$O(^LEX(757.033,"AFRAG",30,(FRAG_" "),(TDT+.0001)),-1)
"RTN","LEX10DU",280,0)
 . S EFF=$P(EFF,".",1) Q:EFF'?7N  I TDT?7N Q:EFF>TDT
"RTN","LEX10DU",281,0)
 . S IEN=$O(^LEX(757.033,"AFRAG",30,(FRAG_" "),+EFF," "),-1)
"RTN","LEX10DU",282,0)
 . S NAM=$$LN(IEN,+EFF) S:'$L(NAM) NAM=$$SN(IEN,+EFF) Q:'$L(NAM)
"RTN","LEX10DU",283,0)
 . S:$L(FRAG)&(EFF?7N)&($L(NAM)) OUT=(FRAG_"^"_EFF_"^"_NAM)
"RTN","LEX10DU",284,0)
 Q OUT
"RTN","LEX10DU",285,0)
MSG(X) ; Message for Unversioned Search
"RTN","LEX10DU",286,0)
 N LEXCODE,LEXIA,LEXAC,LEXPD,LEXTD S LEXTD=$$DT^XLFDT,LEXCODE=$TR(X," ","")
"RTN","LEX10DU",287,0)
 S:$G(LEXCDT)?7N&($G(LEXCDT)'=LEXTD) LEXTD=$G(LEXCDT)
"RTN","LEX10DU",288,0)
 I $G(LEXCDT)="" S:$G(LEXVDT)?7N&($G(LEXVDT)'=LEXTD) LEXTD=$G(LEXVDT)
"RTN","LEX10DU",289,0)
 Q:'$L(LEXCODE) ""  Q:'$D(^LEX(757.02,"ACT",(LEXCODE_" "))) ""
"RTN","LEX10DU",290,0)
 S LEXIA=$O(^LEX(757.02,"ACT",(LEXCODE_" "),2,(LEXTD+.0001)),-1)
"RTN","LEX10DU",291,0)
 S LEXAC=$O(^LEX(757.02,"ACT",(LEXCODE_" "),3,(LEXTD-.0001)),-1)
"RTN","LEX10DU",292,0)
 S LEXPD=$O(^LEX(757.02,"ACT",(LEXCODE_" "),3,(LEXTD)))
"RTN","LEX10DU",293,0)
 I LEXIA?7N,LEXAC?7N,LEXIA>LEXAC D  Q X
"RTN","LEX10DU",294,0)
 . S X="Inactive "_$$FMTE^XLFDT(LEXIA,"5Z")
"RTN","LEX10DU",295,0)
 I LEXAC'=LEXTD,LEXPD?7N,LEXPD>LEXTD D  Q X
"RTN","LEX10DU",296,0)
 . S X="Pending "_$$FMTE^XLFDT(LEXPD,"5Z")
"RTN","LEX10DU",297,0)
 Q ""
"RTN","LEX10DU",298,0)
SN(X,EFF) ; Short Name
"RTN","LEX10DU",299,0)
 N IEN,CDT,IMP,EFF,HIS S IEN=+($G(X)),CDT=$G(LEXVDT) S:$G(EFF)?7N CDT=$G(EFF)
"RTN","LEX10DU",300,0)
 S IMP=$$IMPDATE^LEXU(30) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","LEX10DU",301,0)
 S:CDT'>IMP&(IMP?7N) CDT=IMP
"RTN","LEX10DU",302,0)
 S EFF=$O(^LEX(757.033,+IEN,2,"B",(CDT+.001)),-1)
"RTN","LEX10DU",303,0)
 S HIS=$O(^LEX(757.033,+IEN,2,"B",+EFF," "),-1)
"RTN","LEX10DU",304,0)
 S X=$G(^LEX(757.033,+IEN,2,+HIS,1))
"RTN","LEX10DU",305,0)
 Q X
"RTN","LEX10DU",306,0)
LN(X,EFF) ; Long Name
"RTN","LEX10DU",307,0)
 N IEN,CDT,IMP,EFF,HIS S IEN=+($G(X)),CDT=$G(LEXVDT) S:$G(EFF)?7N CDT=$G(EFF)
"RTN","LEX10DU",308,0)
 S IMP=$$IMPDATE^LEXU(30) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","LEX10DU",309,0)
 S:CDT'>IMP&(IMP?7N) CDT=IMP
"RTN","LEX10DU",310,0)
 S EFF=$O(^LEX(757.033,+IEN,3,"B",(CDT+.001)),-1)
"RTN","LEX10DU",311,0)
 S HIS=$O(^LEX(757.033,+IEN,3,"B",+EFF," "),-1)
"RTN","LEX10DU",312,0)
 S X=$G(^LEX(757.033,+IEN,3,+HIS,1))
"RTN","LEX10DU",313,0)
 Q X
"RTN","LEX10DU",314,0)
SCR(X,Y) ;   Screen
"RTN","LEX10DU",315,0)
 S Y=+($G(Y)) Q:+Y'>0 0  Q:'$D(^LEX(757.01,+Y,0)) 0
"RTN","LEX10DU",316,0)
 N LEXFIL S LEXFIL=$G(X) Q:'$L(LEXFIL) 1  D ^DIM Q:'$D(X) 1
"RTN","LEX10DU",317,0)
 X LEXFIL S X=$T
"RTN","LEX10DU",318,0)
 Q X
"RTN","LEX10DU",319,0)
SH ; Show TMP
"RTN","LEX10DU",320,0)
 N LEXNN,LEXNC S LEXNN="^TMP(""LEXDX"","_$J_")",LEXNC="^TMP(""LEXDX"","_$J_","
"RTN","LEX10DU",321,0)
 W !!,"3",! F  S LEXNN=$q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEX10DU",322,0)
 Q
"RTN","LEX10DU",323,0)
PT ; Entry point where DA is defined and X is unknown
"RTN","LEX10DU",324,0)
 Q:'$D(DA)  S X=^LEX(757.01,DA,0)
"RTN","LEX10DU",325,0)
PTX ; Entry point to parse string (X must exist)
"RTN","LEX10DU",326,0)
 N LEXOK,LEXTOKS,LEXTOKS2,LEXTOKI,LEXTOKW,LEXTOLKN,LEXOKC,LEXOKN,LEXOKP,LEXTOKAA,LEXTOKAB,LEXTOKAC K ^TMP("LEXTKN",$J) N DA
"RTN","LEX10DU",327,0)
 Q
"RTN","LEX10DU",328,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10DU",329,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10DU",330,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10DU",331,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10DU",332,0)
 Q X
"RTN","LEX10DX")
0^28^B28706888
"RTN","LEX10DX",1,0)
LEX10DX ;ISL/KER - ICD-9 Diagnosis ;04/21/2014
"RTN","LEX10DX",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10DX",3,0)
 ;               
"RTN","LEX10DX",4,0)
 ; Global Variables
"RTN","LEX10DX",5,0)
 ;    ^TMP("LEXDX"        SACC 2.3.2.5.1
"RTN","LEX10DX",6,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEX10DX",7,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEX10DX",8,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEX10DX",9,0)
 ;               
"RTN","LEX10DX",10,0)
 ; External References
"RTN","LEX10DX",11,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10DX",12,0)
 ;    $$ICDDATA^ICDXCODE  ICR   5699
"RTN","LEX10DX",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DX",14,0)
 ;               
"RTN","LEX10DX",15,0)
 Q
"RTN","LEX10DX",16,0)
I9T(X,LEXA,LEXD,LEXL,LEXF) ; ICD-9 DX Text Lookup (Pruned)
"RTN","LEX10DX",17,0)
 ;
"RTN","LEX10DX",18,0)
 ; Input
"RTN","LEX10DX",19,0)
 ;   X       Diagnostic Text      Required
"RTN","LEX10DX",20,0)
 ;  .LEXA    Local Array (by Ref) Required
"RTN","LEX10DX",21,0)
 ;   LEXD    Date (FM Format)     Optional (Default TODAY)
"RTN","LEX10DX",22,0)
 ;   LEXL    Maximum to Return    Optional (Default = 30)
"RTN","LEX10DX",23,0)
 ;   LEXF    Filter               Optional (Default ICD)
"RTN","LEX10DX",24,0)
 ;  
"RTN","LEX10DX",25,0)
 ; Output
"RTN","LEX10DX",26,0)
 ; 
"RTN","LEX10DX",27,0)
 ;   LEXA(0)=# ^ PI  No to exceed 30
"RTN","LEX10DX",28,0)
 ;   LEXA(#)=<code ien>_"^"_<code>_"^"_<activation date>
"RTN","LEX10DX",29,0)
 ;   LEXA(#,0)=<expression ien>_"^"_<expression>
"RTN","LEX10DX",30,0)
 ; 
"RTN","LEX10DX",31,0)
 ;   Note:  Second piece of LEXA(0) is the pruning 
"RTN","LEX10DX",32,0)
 ;          indicator and set to "1" if pruning
"RTN","LEX10DX",33,0)
 ;          occurred
"RTN","LEX10DX",34,0)
 ;          
"RTN","LEX10DX",35,0)
 ; See DX^LEX10DP for DX Code Lookup (Pruned)
"RTN","LEX10DX",36,0)
 ; 
"RTN","LEX10DX",37,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEX10DX",38,0)
 N DIC,LEXFIL,LEXLEN,LEXLI,LEXCDT,LEXVDT,LEXX,LEXPR,LEX
"RTN","LEX10DX",39,0)
 S LEXX=$G(X) Q:'$L(LEXX)  S LEXCDT=$G(LEXD),LEXFIL=$G(LEXF)
"RTN","LEX10DX",40,0)
 S:LEXCDT'?7N LEXCDT=$G(DT) S:LEXCDT'?7N LEXCDT=$$DT^XLFDT
"RTN","LEX10DX",41,0)
 S LEXLEN=$G(LEXL) S:+LEXLEN'>0 LEXLEN=30 S LEXPR=0
"RTN","LEX10DX",42,0)
 S:'$L(LEXFIL) LEXFIL="I $$SO^LEXU(Y,""ICD"",+($G(LEXCDT)))"
"RTN","LEX10DX",43,0)
 S DIC("S")=LEXFIL D CONFIG^LEXSET("ICD","ICD",LEXCDT)
"RTN","LEX10DX",44,0)
 S (DIC("S"),^TMP("LEXSCH",$J,"FIL",0))=LEXFIL
"RTN","LEX10DX",45,0)
 S ^TMP("LEXSCH",$J,"FIL",1)="Diagnosis"
"RTN","LEX10DX",46,0)
 S ^TMP("LEXSCH",$J,"DIS",0)="ICD/10D/DS4/SCC/NAN/SCT"
"RTN","LEX10DX",47,0)
 S ^TMP("LEXSCH",$J,"DIS",1)="Diagnosis"
"RTN","LEX10DX",48,0)
 K LEX D LOOK^LEXA(LEXX,"ICD",+LEXLEN,"ICD",LEXCDT)
"RTN","LEX10DX",49,0)
 S:+($G(LEX("LIST",0)))=LEXLEN&($O(^TMP("LEXFND",$J,0),-1)<0) LEXPR=1
"RTN","LEX10DX",50,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEX10DX",51,0)
 S LEXLI=0 F  S LEXLI=$O(LEX("LIST",LEXLI)) Q:+LEXLI'>0  D
"RTN","LEX10DX",52,0)
 . N LEXAI,LEXCODE,LEXEFF,LEXEIEN,LEXEXP,LEXND,LEXSI,LEXSIEN,LEXSRC
"RTN","LEX10DX",53,0)
 . S LEXEIEN=+($G(LEX("LIST",LEXLI)))
"RTN","LEX10DX",54,0)
 . Q:LEXEIEN'>0
"RTN","LEX10DX",55,0)
 . S LEXEXP=$G(^LEX(757.01,+LEXEIEN,0))
"RTN","LEX10DX",56,0)
 . S LEXSI=0,(LEXSIEN,LEXCODE,LEXEFF)=""
"RTN","LEX10DX",57,0)
 . F  S LEXSI=$O(^LEX(757.02,"B",LEXEIEN,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEX10DX",58,0)
 . . N LEXD,LEXH,LEXND,LEXS Q:+($G(LEXSIEN))>0  S LEXND=$G(^LEX(757.02,LEXSI,0))
"RTN","LEX10DX",59,0)
 . . Q:$P(LEXND,"^",3)'=1  S LEXD=$O(^LEX(757.02,LEXSI,4,"B",(LEXCDT+.001)),-1)
"RTN","LEX10DX",60,0)
 . . Q:LEXD'?7N  S LEXH=$O(^LEX(757.02,LEXSI,4,"B",LEXD," "),-1) Q:LEXH'?1N.N
"RTN","LEX10DX",61,0)
 . . S LEXS=$P($G(^LEX(757.02,LEXSI,4,LEXH,0)),"^",2)
"RTN","LEX10DX",62,0)
 . . S:LEXS>0 LEXSIEN=LEXSI,LEXEFF=LEXD,LEXCODE=$P(LEXND,"^",2)
"RTN","LEX10DX",63,0)
 . I +LEXSIEN'>0,LEXEIEN>0 D
"RTN","LEX10DX",64,0)
 . . N LEXMC,LEXSI,LEXSA S LEXMC=$P($G(^LEX(757.01,+LEXEIEN,1)),"^",1) Q:+LEXMC'>0
"RTN","LEX10DX",65,0)
 . . S LEXSI=0 F  S LEXSI=$O(^LEX(757.02,"AMC",LEXMC,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEX10DX",66,0)
 . . . N LEXND,LEXH,LEXS,LEXC S LEXND=$G(^LEX(757.02,+LEXSI,0)) Q:$P(LEXND,"^",3)>2
"RTN","LEX10DX",67,0)
 . . . S LEXH=$O(^LEX(757.02,LEXSI,4,"B",(+($G(LEXCDT))+.001)),-1)
"RTN","LEX10DX",68,0)
 . . . S LEXH=$O(^LEX(757.02,LEXSI,4,"B",+LEXH," "),-1)
"RTN","LEX10DX",69,0)
 . . . S LEXH=$G(^LEX(757.02,LEXSI,4,+LEXH,0)) Q:$P(LEXH,"^",2)'>0
"RTN","LEX10DX",70,0)
 . . . Q:$P(LEXND,"^",5)'>0  S LEXC=$O(LEXSA(" "),-1)+1
"RTN","LEX10DX",71,0)
 . . . S LEXSA(LEXC)=(LEXSI_"^"_$P(LEXH,"^",1)),LEXSA(0)=LEXC
"RTN","LEX10DX",72,0)
 . . I LEXSA(0)=1,+($G(LEXSA(1)))>0,$O(LEXSA(1))'>0 D
"RTN","LEX10DX",73,0)
 . . . N LEXSI,LEXEI,LEXEF S LEXSI=+($G(LEXSA(1))),LEXEF=$P($G(LEXSA(1)),"^",2)
"RTN","LEX10DX",74,0)
 . . . S LEXEI=+($G(^LEX(757.02,+LEXSI,0))) Q:+LEXEI'>0  Q:LEXEF'?7N
"RTN","LEX10DX",75,0)
 . . . S LEXSIEN=LEXSI,LEXEIEN=LEXEI,LEXEFF=LEXEF
"RTN","LEX10DX",76,0)
 . Q:+LEXSIEN'>0  Q:LEXEFF'?7N  Q:+LEXEIEN'>0
"RTN","LEX10DX",77,0)
 . S LEXND=$G(^LEX(757.02,LEXSIEN,0)) Q:+LEXEIEN'=+LEXND
"RTN","LEX10DX",78,0)
 . S LEXEXP=$G(^LEX(757.01,+LEXEIEN,0)) Q:'$L(LEXEXP)
"RTN","LEX10DX",79,0)
 . Q:$P($G(^LEX(757.01,+LEXEIEN,1)),"^",5)>0
"RTN","LEX10DX",80,0)
 . S LEXSRC=$P(LEXND,"^",3) Q:LEXSRC'=1  S LEXCODE=$P(LEXND,"^",2)
"RTN","LEX10DX",81,0)
 . Q:'$L(LEXCODE)  S LEXAI=$O(LEXA(" "),-1)+1
"RTN","LEX10DX",82,0)
 . S LEXA(LEXAI)=LEXSIEN_"^"_LEXCODE_"^"_LEXEFF
"RTN","LEX10DX",83,0)
 . S LEXA(LEXAI,0)=LEXEIEN_"^"_LEXEXP
"RTN","LEX10DX",84,0)
 . S LEXA(0)=$O(LEXA(" "),-1)
"RTN","LEX10DX",85,0)
 S:+($G(LEXA(0)))'>0 LEXA(0)=-1 Q:+($G(LEXA(0)))'>0
"RTN","LEX10DX",86,0)
 K LEX S:LEXPR>0&(+($G(LEXA(0)))>0) $P(LEXA(0),"^",2)=LEXPR
"RTN","LEX10DX",87,0)
 Q
"RTN","LEX10DX",88,0)
 ;
"RTN","LEX10DX",89,0)
NEXT(LEXC,LEXA,LEXD) ; Next Character
"RTN","LEX10DX",90,0)
 ;
"RTN","LEX10DX",91,0)
 ; Input
"RTN","LEX10DX",92,0)
 ; 
"RTN","LEX10DX",93,0)
 ;   LEXC    Partial Dx Code      Required
"RTN","LEX10DX",94,0)
 ;  .LEXA    Local Array (by Ref) Required
"RTN","LEX10DX",95,0)
 ;   LEXD    Date (FM Format)     Optional (Default TODAY)
"RTN","LEX10DX",96,0)
 ;  
"RTN","LEX10DX",97,0)
 ; Output
"RTN","LEX10DX",98,0)
 ; 
"RTN","LEX10DX",99,0)
 ;   LEXA(<input>,0)= # of characters
"RTN","LEX10DX",100,0)
 ;   LEXA(<input>,<character>)=""
"RTN","LEX10DX",101,0)
 ; 
"RTN","LEX10DX",102,0)
 N LEX1,LEX2,LEXCDT,LEXCHK,LEXCHR,LEXCT,LEXE,LEXLEN,LEXID,LEXNC,LEXNN
"RTN","LEX10DX",103,0)
 N LEXOR,LEXPRE,LEXS,LEXSO S LEXC=$$TM(LEXC)
"RTN","LEX10DX",104,0)
 S:$L(LEXC)=3&(LEXC'[".") LEXC=LEXC_"." S (LEXID,LEXSO)=LEXC
"RTN","LEX10DX",105,0)
 S LEXCDT=$G(LEXD) S:LEXCDT'?7N LEXCDT=$$DT^XLFDT S LEXLEN=$L(LEXC)
"RTN","LEX10DX",106,0)
 Q:LEXLEN>6 "-1^Max length reached, no next character available"
"RTN","LEX10DX",107,0)
 I LEXLEN>1 D
"RTN","LEX10DX",108,0)
 . S LEXOR=$E(LEXSO,1,($L(LEXSO)-1))_$C($A($E(LEXSO,$L(LEXSO)))-1)_"~"
"RTN","LEX10DX",109,0)
 S:LEXLEN=1 LEXOR=$C($A(LEXSO)-1)_"~" S:LEXLEN'>0 LEXOR="/~"
"RTN","LEX10DX",110,0)
 S LEXCHK=0 S:LEXLEN'>0 LEXCHK=1 S:LEXLEN>0&(LEXLEN<3) LEXCHK=LEXLEN+1
"RTN","LEX10DX",111,0)
 S:LEXLEN=3 LEXCHK=LEXLEN+2 S:LEXLEN>3 LEXCHK=LEXLEN+1
"RTN","LEX10DX",112,0)
 Q:+LEXCHK'>0 "-1^Character position not specified"
"RTN","LEX10DX",113,0)
 S:LEXLEN=0 LEXID="<null>" S:'$L(LEXID) LEXID="<unknown>"
"RTN","LEX10DX",114,0)
 S LEXNN="^LEX(757.02,""ADX"","""_LEXOR_" "")"
"RTN","LEX10DX",115,0)
 S LEXNC="^LEX(757.02,""ADX"","""_LEXSO,LEXCT=0
"RTN","LEX10DX",116,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10DX",117,0)
 . N LEXC,LEXD,LEXE,LEXS,LEX1,LEX2
"RTN","LEX10DX",118,0)
 . S LEXC=$P(LEXNN,",",3),LEXC=$TR(LEXC,"""",""),LEXC=$$TM(LEXC)
"RTN","LEX10DX",119,0)
 . S LEXD=+($P(LEXNN,",",4)) Q:LEXD'?7N  Q:(LEXCDT+.001)'>LEXD
"RTN","LEX10DX",120,0)
 . I $E(LEXC,1,$L(LEXSO))=LEXSO,$L(LEXC)'<LEXCHK D  Q
"RTN","LEX10DX",121,0)
 . . N LEXCHR S LEXCHR=$E(LEXC,LEXCHK) Q:'$L(LEXCHR)
"RTN","LEX10DX",122,0)
 . . I '$D(LEXA(LEXID,LEXCHR)) D
"RTN","LEX10DX",123,0)
 . . . S LEXA(LEXID,LEXCHR)="",LEXCT=LEXCT+1
"RTN","LEX10DX",124,0)
 . . S LEXOR=$E(LEXC,1,LEXCHK)_"~"
"RTN","LEX10DX",125,0)
 . . S LEXNN="^LEX(757.02,""ADX"","""_LEXOR_" "")"
"RTN","LEX10DX",126,0)
 S:+($G(LEXCT))>0 LEXA(LEXID)=+($G(LEXCT))
"RTN","LEX10DX",127,0)
 Q +($G(LEXCT))
"RTN","LEX10DX",128,0)
 ;
"RTN","LEX10DX",129,0)
 ; Miscellaneous
"RTN","LEX10DX",130,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10DX",131,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10DX",132,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10DX",133,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10DX",134,0)
 Q X
"RTN","LEX10PL")
0^108^B120447479
"RTN","LEX10PL",1,0)
LEX10PL ;ISL/KER - ICD-10 Procedure Lookup ;04/21/2014
"RTN","LEX10PL",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10PL",3,0)
 ;               
"RTN","LEX10PL",4,0)
 ; Global Variables
"RTN","LEX10PL",5,0)
 ;    ^%ZOSF("TEST"       ICR  10096
"RTN","LEX10PL",6,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10PL",7,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","LEX10PL",8,0)
 ;               
"RTN","LEX10PL",9,0)
 ; External References
"RTN","LEX10PL",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEX10PL",11,0)
 ;    ENDR^%ZISS          ICR  10088
"RTN","LEX10PL",12,0)
 ;    KILL^%ZISS          ICR  10088
"RTN","LEX10PL",13,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10PL",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX10PL",15,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10PL",16,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEX10PL",17,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEX10PL",18,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10PL",19,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10PL",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10PL",21,0)
 ;               
"RTN","LEX10PL",22,0)
EN ; Main Entry Point
"RTN","LEX10PL",23,0)
 ; 
"RTN","LEX10PL",24,0)
 ; Input   
"RTN","LEX10PL",25,0)
 ; 
"RTN","LEX10PL",26,0)
 ;   None
"RTN","LEX10PL",27,0)
 ; 
"RTN","LEX10PL",28,0)
 ; Output
"RTN","LEX10PL",29,0)
 ; 
"RTN","LEX10PL",30,0)
 ;   Y         2 Piece "^" delimited string
"RTN","LEX10PL",31,0)
 ;               1   IEN to the Expression File 757.01
"RTN","LEX10PL",32,0)
 ;               2   Expression Display Text
"RTN","LEX10PL",33,0)
 ;                 
"RTN","LEX10PL",34,0)
 ;   Y("ICD")  2 Piece "^" delimited string
"RTN","LEX10PL",35,0)
 ;               1   IEN ICD OPERATION/PROCEDURE File #80.1
"RTN","LEX10PL",36,0)
 ;               2   ICD Code
"RTN","LEX10PL",37,0)
 ; 
"RTN","LEX10PL",38,0)
 N LEXENV S LEXENV=$$ENV Q:+LEXENV'>0  N X,LEXDT,LEXIM
"RTN","LEX10PL",39,0)
 N BOLD,DIR,DIRB,DIROUT,DIRUT,DTOUT,DUOUT,IOINHI,IOINORM,LEX
"RTN","LEX10PL",40,0)
 N LEXA,LEXB,LEXC,LEXCHR,LEXCODE,LEXCOM,LEXDT,LEXE,LEXEFF
"RTN","LEX10PL",41,0)
 N LEXENV,LEXERR,LEXFD,LEXI,LEXICD,LEXID,LEXIEN,LEXIM,LEXIN
"RTN","LEX10PL",42,0)
 N LEXIT,LEXKEY,LEXL,LEXN,LEXNAM,LEXND,LEXNM,LEXNT,LEXO
"RTN","LEX10PL",43,0)
 N LEXOFF,LEXOK,LEXPCDAT,LEXPSN,LEXR,LEXRTN,LEXS,LEXSBR
"RTN","LEX10PL",44,0)
 N LEXSEC,LEXSIEN,LEXSTA,LEXT,LEXTAG,LEXTD,LEXTERM,LEXTOT
"RTN","LEX10PL",45,0)
 N LEXTXT,LEXUP,LEXUSR,LEXV,LEXVAL,LEXVDT,LEXX,LEXY,NORM,X
"RTN","LEX10PL",46,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10PL",47,0)
 S LEXIM=$$IMP^ICDEX(30) S:LEXDT'>LEXIM LEXDT=LEXIM S X=$$SO
"RTN","LEX10PL",48,0)
 K Y,LEXY D:$L(X)&(X'["^") BEG N LEXTEST
"RTN","LEX10PL",49,0)
 Q 
"RTN","LEX10PL",50,0)
BEG ; Begin Recursive Loop
"RTN","LEX10PL",51,0)
 N DIROUT,DUOUT,DTOUT,LEXIT,LEXVDT,LEXTXT,LEXUP,LEXY,LEXX
"RTN","LEX10PL",52,0)
 N LEXBEG,LEXEND,LEXELP,LEXSEC
"RTN","LEX10PL",53,0)
 K Y S Y=-1,U="^",LEXTXT=$G(X) Q:'$L(LEXTXT)
"RTN","LEX10PL",54,0)
 S LEXVDT=$G(LEXDT),LEXIT=0
"RTN","LEX10PL",55,0)
LOOK ;   Lookup
"RTN","LEX10PL",56,0)
 Q:+($G(LEXIT))>0  K LEXY
"RTN","LEX10PL",57,0)
 S LEXY=$$PCSDIG^LEX10CS(LEXTXT,LEXDT),LEXTOT=$$FND
"RTN","LEX10PL",58,0)
 S:$L(LEXTXT)>0 LEXUP=$E(LEXTXT,1,($L(LEXTXT)-1))
"RTN","LEX10PL",59,0)
 I $L($O(LEXPCDAT("NEXLEV",""))) S LEXCHR=$$SEL^LEX10PLS(LEXTXT)
"RTN","LEX10PL",60,0)
 S LEXCHR=$G(LEXCHR)
"RTN","LEX10PL",61,0)
 ;     Quit if
"RTN","LEX10PL",62,0)
 ;       Timed out or user enters "^^"
"RTN","LEX10PL",63,0)
 I $D(DTOUT)!($D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10PL",64,0)
 ;       Up one level (LEXUP) if user enters "^"
"RTN","LEX10PL",65,0)
 ;       Quit if already at top level and user enters "^"
"RTN","LEX10PL",66,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),$L($G(LEXTXT))=1 D  Q
"RTN","LEX10PL",67,0)
 . K X,LEXUP,LEXNT S LEXIT=1,(LEXCHR,LEXTXT,X)=""
"RTN","LEX10PL",68,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),$L($G(LEXUP)) D  G:'LEXIT LOOK Q:LEXIT
"RTN","LEX10PL",69,0)
 . K X S (X,LEXTXT)=LEXUP I '$L(X) S LEXIT=1 K X S LEXTXT=""
"RTN","LEX10PL",70,0)
 . S:$L($G(LEXNT))>1 LEXNT=$E($G(LEXNT),1,($L($G(LEXNT))-1))
"RTN","LEX10PL",71,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),'$L($G(LEXUP)) S LEXIT=1 K X S LEXTXT="" Q
"RTN","LEX10PL",72,0)
 I $D(DUOUT)&('$D(DIROUT)) K:'$D(LEXNT) X Q
"RTN","LEX10PL",73,0)
 ;       No Selection Made
"RTN","LEX10PL",74,0)
 I '$D(DUOUT),LEXCHR="" S LEXIT=1
"RTN","LEX10PL",75,0)
 ;       Character Found and Selected
"RTN","LEX10PL",76,0)
 I $L(LEXCHR),LEXCHR'["^",(LEXCHR?1N!(LEXCHR?1U)) D  Q:+($G(Y))>0
"RTN","LEX10PL",77,0)
 . K Y S LEXTXT=LEXTXT_LEXCHR Q:$L(LEXTXT)<7
"RTN","LEX10PL",78,0)
 . N LEXSTA,LEXSIEN,LEXIEN,LEXCODE,LEXEFF,LEXTERM,LEXND,LEXICD
"RTN","LEX10PL",79,0)
 . S LEXSTA=$$STATCHK^LEXSRC2(LEXTXT,$G(LEXDT),,31)
"RTN","LEX10PL",80,0)
 . S LEXSIEN=$P(LEXSTA,"^",2)
"RTN","LEX10PL",81,0)
 . S LEXEFF=$P(LEXSTA,"^",3)
"RTN","LEX10PL",82,0)
 . S LEXSTA=$P(LEXSTA,"^",1)
"RTN","LEX10PL",83,0)
 . S LEXND=$G(^LEX(757.02,+LEXSIEN,0))
"RTN","LEX10PL",84,0)
 . S LEXCODE=$P(LEXND,"^",2),LEXIEN=+LEXND
"RTN","LEX10PL",85,0)
 . S LEXTERM=$G(^LEX(757.01,+LEXIEN,0))
"RTN","LEX10PL",86,0)
 . S LEXICD=+$$ICDOP^ICDEX(LEXCODE,,31),LEXIT=1
"RTN","LEX10PL",87,0)
 . S Y=LEXIEN_"^"_LEXTERM,Y("ICD")=LEXICD_"^"_LEXCODE
"RTN","LEX10PL",88,0)
 . D END(LEXCODE,LEXTERM)
"RTN","LEX10PL",89,0)
 ;       Category Found and Selected
"RTN","LEX10PL",90,0)
 I $L(LEXCHR),LEXCHR'["^",(LEXCHR?1N!(LEXCHR?1U)) D  G:+($G(LEXIT))'>0 LOOK
"RTN","LEX10PL",91,0)
 . D NXT I $G(Y)="^" D
"RTN","LEX10PL",92,0)
 . . Q:'$L(LEXTXT)  S LEXTXT=$E(LEXTXT,1,($L(LEXTXT)-1)) Q:'$L(LEXTXT)
"RTN","LEX10PL",93,0)
 . . F  S LEXTXT=$E(LEXTXT,1,($L(LEXTXT)-1)) Q:$$TOT($E(LEXTXT,1,($L(LEXTXT)-1)),LEXDT)>0
"RTN","LEX10PL",94,0)
 Q
"RTN","LEX10PL",95,0)
NXT ;   Next
"RTN","LEX10PL",96,0)
 Q:+($G(LEXIT))>0  N LEXNT,LEXND
"RTN","LEX10PL",97,0)
 S LEXNT=$G(LEXTXT),LEXND=$G(LEXDT)
"RTN","LEX10PL",98,0)
 N LEXTXT,LEXDT S LEXTXT=LEXNT,LEXDT=LEXND
"RTN","LEX10PL",99,0)
 G LOOK
"RTN","LEX10PL",100,0)
 Q
"RTN","LEX10PL",101,0)
TOT(X,Y) ; Total Possible
"RTN","LEX10PL",102,0)
 N LEXPCDAT,LEXDT,LEXY S X=$G(X) Q:'$L(X) 0  S LEXDT=$G(Y)
"RTN","LEX10PL",103,0)
 S LEXY=$$PCSDIG^LEX10CS(X,LEXDT),X=$$FND
"RTN","LEX10PL",104,0)
 Q X
"RTN","LEX10PL",105,0)
 ;     
"RTN","LEX10PL",106,0)
SO(X) ; Enter a Code/Code Fragment
"RTN","LEX10PL",107,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX,LEXCOM,LEXERR,LEXSBR
"RTN","LEX10PL",108,0)
 S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEX10PL",109,0)
 S LEXCOM="Enter a Procedure Code/Code Fragment"
"RTN","LEX10PL",110,0)
 S DIR(0)="FAO^1:30",DIR("A")=" "_LEXCOM_":  "
"RTN","LEX10PL",111,0)
 S (LEXSBR,DIRB)=$$RET("LEX10PL","SO",+($G(DUZ)),LEXCOM)
"RTN","LEX10PL",112,0)
 S DIR("PRE")="S X=$$SOP^LEX10PL(X) W:X[""??"" ""  ??"""
"RTN","LEX10PL",113,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEX10PL" D ^DIR
"RTN","LEX10PL",114,0)
 I $D(DTOUT) W !!,?3,"Try later",! Q "^"
"RTN","LEX10PL",115,0)
 I '$L(X)!('$L(Y)) W !!,?3,"No selection made",! Q "^"
"RTN","LEX10PL",116,0)
 S:$D(DUOUT) X="^" S:$D(DIROUT) X="^^"
"RTN","LEX10PL",117,0)
 I $G(X)["^" W !!,?3,"Selection aborted",! Q "^"
"RTN","LEX10PL",118,0)
 S (LEX,X)=$G(Y) D:$L(LEX)&(LEX'["^") SAV("LEX10PL","SO",+($G(DUZ)),LEXCOM,LEX)
"RTN","LEX10PL",119,0)
 Q X
"RTN","LEX10PL",120,0)
SOH ;   Select a Code Help
"RTN","LEX10PL",121,0)
 W:$L($G(LEXERR)) !,"     ",LEXERR,!
"RTN","LEX10PL",122,0)
 W !,"     Enter either: "
"RTN","LEX10PL",123,0)
 W !,"                                            Example"
"RTN","LEX10PL",124,0)
 W !,"       ICD-10 Procedure code                04LE0CT"
"RTN","LEX10PL",125,0)
 W !,"       Partial ICD-10 Procedure code        00C6",!
"RTN","LEX10PL",126,0)
 W !,"     May not exceed 7 characters.  Enter return or ""^"""
"RTN","LEX10PL",127,0)
 W !,"     to exit."
"RTN","LEX10PL",128,0)
 K LEXERR
"RTN","LEX10PL",129,0)
 Q
"RTN","LEX10PL",130,0)
SOP(X) ;   Code Pre-Processing
"RTN","LEX10PL",131,0)
 N LEX,LEXO,LEXR,LEXB,LEXOK K LEXERR Q:'$L($G(X)) ""
"RTN","LEX10PL",132,0)
 S (LEX,X)=$$UP^XLFSTR($G(X)) Q:'$L(LEX) "??"
"RTN","LEX10PL",133,0)
 Q:LEX["?" "??"  S:LEX["^^" (LEX,X)="^^",DUOUT=1,DIROUT=1
"RTN","LEX10PL",134,0)
 S:LEX["^"&(LEX'["^^") (LEX,X)="^",DUOUT=1 Q:LEX["^" X  Q:'$L(LEX) ""
"RTN","LEX10PL",135,0)
 I LEX["." S LEXERR="Procedure codes do not have decimal places" Q "??"
"RTN","LEX10PL",136,0)
 I $E(LEX,1)="Z" S LEXERR="First character must not contain ""Z""" Q "??"
"RTN","LEX10PL",137,0)
 S (LEXC,LEXO,LEXR)=$E(LEX,1),LEXO=$C($A(LEXO)-1)_"~ ",LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",138,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="First character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",139,0)
 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="First character """_$E(LEX,1)_""" is not valid" Q "??"
"RTN","LEX10PL",140,0)
 I $L(LEX)'>1 S X=LEX Q X
"RTN","LEX10PL",141,0)
 S (LEXC,LEXO)=$E(LEX,1,2),LEXR=$E(LEX,2),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",142,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",143,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Second character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",144,0)
 I $L(LEX)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Second character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",145,0)
 I $L(LEX)'>2 S X=LEX Q X
"RTN","LEX10PL",146,0)
 S (LEXC,LEXO)=$E(LEX,1,3),LEXR=$E(LEX,3),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",147,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",148,0)
 I (LEXR'?1U&(LEXR'?1N))!(LEXR="Z") S LEXERR="Third character must not contain ""Z""" Q "??"
"RTN","LEX10PL",149,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Third character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",150,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Third character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",151,0)
 I $L(LEX)'>3 S X=LEX Q X
"RTN","LEX10PL",152,0)
 S (LEXC,LEXO)=$E(LEX,1,4),LEXR=$E(LEX,4),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",153,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",154,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Fourth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",155,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Fourth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",156,0)
 I $L(LEX)'>4 S X=LEX Q X
"RTN","LEX10PL",157,0)
 S (LEXC,LEXO)=$E(LEX,1,5),LEXR=$E(LEX,5),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",158,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",159,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Fifth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",160,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Fifth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",161,0)
 I $L(LEX)'>5 S X=LEX Q X
"RTN","LEX10PL",162,0)
 S (LEXC,LEXO)=$E(LEX,1,6),LEXR=$E(LEX,6),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",163,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",164,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Sixth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",165,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Sixth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",166,0)
 I $L(LEX)'>6 S X=LEX Q X
"RTN","LEX10PL",167,0)
 S (LEXC,LEXO)=$E(LEX,1,7),LEXR=$E(LEX,7),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",168,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",169,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Seventh character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",170,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Seventh character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",171,0)
 S X=LEX
"RTN","LEX10PL",172,0)
 Q X
"RTN","LEX10PL",173,0)
 ;               
"RTN","LEX10PL",174,0)
 ; Miscellaneous
"RTN","LEX10PL",175,0)
SAV(X,Y,LEXN,LEXC,LEXV) ;   Save Defaults
"RTN","LEX10PL",176,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXVAL,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0  S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0
"RTN","LEX10PL",177,0)
 S LEXUSR=+($G(LEXN)),LEXVAL=$G(LEXV) Q:LEXUSR'>0  Q:'$L(LEXVAL)  S LEXCOM=$G(LEXC) Q:'$L(LEXCOM)  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10PL",178,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM)  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10PL",179,0)
 S ^XTMP(LEXID,0)=LEXFD_"^"_LEXTD_"^"_LEXCOM,^XTMP(LEXID,LEXTAG)=LEXVAL
"RTN","LEX10PL",180,0)
 Q
"RTN","LEX10PL",181,0)
RET(X,Y,LEXN,LEXC) ;   Retrieve Defaults
"RTN","LEX10PL",182,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0 ""
"RTN","LEX10PL",183,0)
 S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0 ""  S LEXUSR=+($G(LEXN)) Q:LEXUSR'>0 ""
"RTN","LEX10PL",184,0)
 S LEXCOM=$G(LEXC) Q:'$L(LEXCOM) ""  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10PL",185,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM) ""  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10PL",186,0)
 S X=$G(^XTMP(LEXID,LEXTAG))
"RTN","LEX10PL",187,0)
 Q X
"RTN","LEX10PL",188,0)
ROK(X) ;   Routine OK
"RTN","LEX10PL",189,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","LEX10PL",190,0)
TAG(X) ;   Sub-Routine OK
"RTN","LEX10PL",191,0)
 N LEXT,LEXE,LEXL S X=$G(X) Q:'$L(X) 0  Q:X'["^" 0
"RTN","LEX10PL",192,0)
 Q:'$L($P(X,"^",1)) 0  Q:$L($P(X,"^",1))>8 0  Q:$E($P(X,"^",1),1)'?1U 0
"RTN","LEX10PL",193,0)
 Q:'$L($P(X,"^",2)) 0  Q:$L($P(X,"^",2))>8 0  Q:$E($P(X,"^",2),1)'?1U 0
"RTN","LEX10PL",194,0)
 S LEXL=0,LEXT=X,(LEXE,X)="S LEXL=$L($T("_X_"))" D ^DIM X:$D(X) LEXE
"RTN","LEX10PL",195,0)
 S X=$S(LEXL>0:1,1:0)
"RTN","LEX10PL",196,0)
 Q X
"RTN","LEX10PL",197,0)
END(X,Y) ;   End Search, display results
"RTN","LEX10PL",198,0)
 N LEXCODE,LEXTERM,LEXC,LEXI,LEXS S LEXCODE=$G(X),LEXTERM(1)=$G(Y) Q:$L(LEXCODE)'=7  Q:'$L(LEXTERM(1))
"RTN","LEX10PL",199,0)
 D PR^LEX10PLS(.LEXTERM,69),GCUR($G(LEXCODE),.LEXC)
"RTN","LEX10PL",200,0)
 S LEXS="",$P(LEXS,"-",$L(LEXC))="-" S LEXC=$J(" ",1)_LEXC,LEXS=$J(" ",1)_LEXS
"RTN","LEX10PL",201,0)
 W:$L($G(IOF)) @IOF S LEXI=0 F  S LEXI=$O(LEXTERM(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10PL",202,0)
 . W !,?2,$G(LEXTERM(LEXI))
"RTN","LEX10PL",203,0)
 W ! D ATTR W !,$G(BOLD),$G(LEXC),$G(NORM),!," ",$G(LEXS) D KATTR
"RTN","LEX10PL",204,0)
 S LEXI=0 F  S LEXI=$O(LEXC(LEXI)) Q:+LEXI'>0  W !," ",$G(LEXC(LEXI))
"RTN","LEX10PL",205,0)
 W !!
"RTN","LEX10PL",206,0)
 Q
"RTN","LEX10PL",207,0)
CUR(X) ;   Current Array
"RTN","LEX10PL",208,0)
 N LEXC,LEXS,LEXI K LEXC D GCUR($G(X),.LEXC)  Q:'$D(LEXC)  S LEXC=$TR(LEXC," ","") Q:'$L($G(LEXC))  Q:$O(LEXC(0))'>0
"RTN","LEX10PL",209,0)
 N LEXS,LEXI S LEXS="",$P(LEXS,"-",$L(LEXC))="-" S LEXC=$J(" ",1)_LEXC,LEXS=$J(" ",1)_LEXS
"RTN","LEX10PL",210,0)
 W:$L($G(IOF)) @IOF D ATTR W !,$G(BOLD),$G(LEXC),$G(NORM),!,$G(LEXS) D KATTR
"RTN","LEX10PL",211,0)
 S LEXI=0 F  S LEXI=$O(LEXC(LEXI)) Q:+LEXI'>0  W !,$G(LEXC(LEXI))
"RTN","LEX10PL",212,0)
 Q
"RTN","LEX10PL",213,0)
GCUR(X,LEXA) ;   Get Current Array
"RTN","LEX10PL",214,0)
 K LEXA N LEXIN,LEXPSN,LEXOFF,LEXOK D ATTR
"RTN","LEX10PL",215,0)
 S LEXIN=$TR($G(X)," ",""),LEXOFF=$L(LEXIN)+2 Q:'$L(LEXIN)  Q:'$D(^LEX(757.033,"AFRAG",31,(LEXIN_" ")))
"RTN","LEX10PL",216,0)
 S LEXOK=1,LEXA=$J(" ",1)_LEXIN F LEXPSN=1:1:$L(LEXIN)  D
"RTN","LEX10PL",217,0)
 . N LEXTXT,LEXSEC,LEXCHR,LEXNAM S LEXSEC=$E(LEXIN,1,LEXPSN),LEXCHR=$E(LEXIN,LEXPSN),LEXNAM=$$NAM(LEXSEC)
"RTN","LEX10PL",218,0)
 . I '$L(LEXSEC)!('$L(LEXCHR))!('$L(LEXNAM)) S LEXOK=0 Q
"RTN","LEX10PL",219,0)
 . S LEXTXT=$J(" ",LEXPSN)_$G(BOLD)_LEXCHR_$G(NORM)
"RTN","LEX10PL",220,0)
 . S LEXTXT=LEXTXT_$J(" ",(LEXOFF-LEXPSN))_LEXNAM
"RTN","LEX10PL",221,0)
 . S LEXA(LEXPSN)=LEXTXT
"RTN","LEX10PL",222,0)
 D KATTR
"RTN","LEX10PL",223,0)
 K:'LEXOK LEXA
"RTN","LEX10PL",224,0)
 Q
"RTN","LEX10PL",225,0)
NAM(X) ;   Descriptive Dane
"RTN","LEX10PL",226,0)
 N LEXIN,LEXDT,LEXEFF,LEXIEN S LEXIN=$G(X) Q:'$L(LEXIN) ""  Q:'$D(^LEX(757.033,"AFRAG",31,(LEXIN_" "))) ""
"RTN","LEX10PL",227,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$IMP^ICDEX(31)
"RTN","LEX10PL",228,0)
 S LEXEFF=$O(^LEX(757.033,"AFRAG",31,(LEXIN_" "),(LEXDT+.001)),-1) Q:LEXEFF'?7N ""
"RTN","LEX10PL",229,0)
 S LEXIEN=$O(^LEX(757.033,"AFRAG",31,(LEXIN_" "),LEXEFF," "),-1) Q:+LEXIEN'>0 ""
"RTN","LEX10PL",230,0)
 S X=$$SN(LEXIEN)
"RTN","LEX10PL",231,0)
 Q X
"RTN","LEX10PL",232,0)
SN(X,EFF) ; Short Name
"RTN","LEX10PL",233,0)
 N IEN,CDT,IMP,EFF,HIS S IEN=+($G(X)),CDT=$G(LEXVDT) S:$G(EFF)?7N CDT=$G(EFF)
"RTN","LEX10PL",234,0)
 S IMP=$$IMP^ICDEX(31) S:CDT'?7N CDT=$$DT^XLFDT S:CDT'>IMP&(IMP?7N) CDT=IMP
"RTN","LEX10PL",235,0)
 S EFF=$O(^LEX(757.033,+IEN,2,"B",(CDT+.001)),-1)
"RTN","LEX10PL",236,0)
 S HIS=$O(^LEX(757.033,+IEN,2,"B",+EFF," "),-1)
"RTN","LEX10PL",237,0)
 S X=$G(^LEX(757.033,+IEN,2,+HIS,1))
"RTN","LEX10PL",238,0)
 Q X
"RTN","LEX10PL",239,0)
FND(X) ;   Found
"RTN","LEX10PL",240,0)
 N LEXI S X=0,LEXI="" F  S LEXI=$O(LEXPCDAT("NEXLEV",LEXI)) Q:'$L(LEXI)  S X=X+1
"RTN","LEX10PL",241,0)
 Q X
"RTN","LEX10PL",242,0)
GETO(X) ;   Get One
"RTN","LEX10PL",243,0)
 S X=$O(LEXPCDAT("NEXLEV",""))
"RTN","LEX10PL",244,0)
 Q X
"RTN","LEX10PL",245,0)
ATTR ;   Screen Attributes
"RTN","LEX10PL",246,0)
 N X,IOINHI,IOINORM S X="IOINHI;IOINORM" D ENDR^%ZISS S BOLD=$G(IOINHI),NORM=$G(IOINORM)
"RTN","LEX10PL",247,0)
 Q
"RTN","LEX10PL",248,0)
KATTR ;   Kill Screen Attributes
"RTN","LEX10PL",249,0)
 D KILL^%ZISS K BOLD,NORM
"RTN","LEX10PL",250,0)
 Q
"RTN","LEX10PL",251,0)
ENV(X) ;   Check environment
"RTN","LEX10PL",252,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEX10PL",253,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEX10PL",254,0)
 Q 1
"RTN","LEX10PLA")
0^110^B39916196
"RTN","LEX10PLA",1,0)
LEX10PLA ;ISL/KER - ICD-10 Procedure Lookup Abbreviations ;04/21/2014
"RTN","LEX10PLA",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10PLA",3,0)
 ;               
"RTN","LEX10PLA",4,0)
 ; Global Variables
"RTN","LEX10PLA",5,0)
 ;    None
"RTN","LEX10PLA",6,0)
 ;               
"RTN","LEX10PLA",7,0)
 Q
"RTN","LEX10PLA",8,0)
SH(X,Y) ; Shorten Text
"RTN","LEX10PLA",9,0)
 S X=$G(X) N LEXL S LEXL=+($G(Y)) Q:+LEXL'>0 X
"RTN","LEX10PLA",10,0)
 S X=$$SW(X,"Performance Intensity Phonetically Balanced Speech Discrim","Perf Inten Phonetic Bal Speech Discr") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",11,0)
 S X=$$SW(X,"Lateral Transverse Process Approach, Posterior Column","Lat Trans Proc App, Posterior Column") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",12,0)
 S X=$$SW(X,"Application/Use/Care of Assist/Adapt/Support/Protect Devices","Application/Use/Care of Devices") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",13,0)
 S X=$$SW(X,"Assistive, Adaptive, Supportive or Protective","Assist/Adapt/Support/Protect") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",14,0)
 S X=$$SW(X," and "," & ") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",15,0)
 S X=$$SW(X," / ","/") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",16,0)
 S X=$$SW(X,"Assistive, Adaptive,Supportive or Protective","Assist/Adapt/Support/Protect") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",17,0)
 S X=$$SW(X,"Application, Proper Use & Care","Application/Use/Care") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",18,0)
 S X=$$SW(X," - Lower Back/Lower Extremity","-Lower Back/Extrem") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",19,0)
 S X=$$SW(X," - Upper Back/Upper Extremity","-Upper Back/Extrem") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",20,0)
 S X=$$SW(X,"Electroacoustic","Elctacou.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",21,0)
 S X=$$SW(X,"Acoustic","Acou.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",22,0)
 S X=$$SW(X,"Listening","Listen") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",23,0)
 S X=$$SW(X,"Devices","Dev") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",24,0)
 S X=$$SW(X,"Device","Dev") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",25,0)
 S X=$$SW(X,"Vocational","Voc") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",26,0)
 S X=$$SW(X,"Activities","Act") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",27,0)
 S X=$$SW(X," Check"," Chk") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",28,0)
 S X=$$SW(X,"Other","Oth") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",29,0)
 S X=$$SW(X,"Alternate","Alt") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",30,0)
 S X=$$SW(X,"Nuclear","Nuc") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",31,0)
 S X=$$SW(X,"Medicine","Med") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",32,0)
 S X=$$SW(X,"Imaging","Img") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",33,0)
 S X=$$SW(X,"Balanced","Bal") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",34,0)
 S X=$$SW(X,"Balance","Bal") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",35,0)
 S X=$$SW(X,"Loudness","Loud") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",36,0)
 S X=$$SW(X,"Intraoperative","Intraoper") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",37,0)
 S X=$$SW(X,"Particulate","Particul.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",38,0)
 S X=$$SW(X,"Substance","Subst") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",39,0)
 S X=$$SW(X,"Screening","Screen") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",40,0)
 S X=$$SW(X,"Diagnostic","Diag") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",41,0)
 S X=$$SW(X,"Endoscopic","Endo") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",42,0)
 S X=$$SW(X,"Endoscopy","Endo") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",43,0)
 S X=$$SW(X,"Circulation","Circul.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",44,0)
 S X=$$SW(X,"Communication","Comm") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",45,0)
 S X=$$SW(X,"Community/Work","Comm") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",46,0)
 S X=$$SW(X,"Irrigation","Irrigat.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",47,0)
 S X=$$SW(X," Systems"," Sys") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",48,0)
 S X=$$SW(X," System"," Sys") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",49,0)
 S X=$$SW(X,"Anatomical ","Anat. ") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",50,0)
 S X=$$SW(X,"Subcutaneous","Subcut.") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",51,0)
 S X=$$SW(X,"Extremity","Extrem") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",52,0)
 S X=$$SW(X,"Extremities","Extrem") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",53,0)
 S X=$$SW(X,"Musculoskeletal","Musclskel") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",54,0)
 S X=$$SW(X,"Disorders","Dis") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",55,0)
 S X=$$SW(X,"Communicative","Comm") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",56,0)
 S X=$$SW(X,"Cognitive","Cog") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",57,0)
 S X=$$SW(X,"Awareness","Aware") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",58,0)
 S X=$$SW(X,"Processing","Process") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",59,0)
 S X=$$SW(X,"Positive","Pos") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",60,0)
 S X=$$SW(X,"Negative","Neg") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",61,0)
 S X=$$SW(X,"Multiple","Mult") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",62,0)
 S X=$$SW(X,"Natural or Artificial","Nat/Artif") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",63,0)
 S X=$$SW(X,"Natural/Artificial","Nat/Artif") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",64,0)
 S X=$$SW(X,"Physical","Phys") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",65,0)
 S X=$$SW(X,"Rehabilitation","Rehab") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",66,0)
 S X=$$SW(X,"Audiology","Audio") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",67,0)
 S X=$$SW(X,"Instrumental","Instr") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",68,0)
 S X=$$SW(X,"Swalowing","Swallow") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",69,0)
 S X=$$SW(X,"Performance","Perf") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",70,0)
 S X=$$SW(X,"Phonetically","Phonetic") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",71,0)
 S X=$$SW(X,"Intensity","Inten") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",72,0)
 S X=$$SW(X,"Performance","Perf") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",73,0)
 S X=$$SW(X,"Discrim","Discr") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",74,0)
 S X=$$SW(X,"Processing","Process") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",75,0)
 S X=$$SW(X,"Central","Cent") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",76,0)
 S X=$$SW(X,"Auditory","Audi") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",77,0)
 S X=$$SW(X,"Assessment","Assess") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",78,0)
 S X=$$SW(X,"Language","Lang") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",79,0)
 S X=$$SW(X,"Pathology","Path") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",80,0)
 S X=$$SW(X,"Counseling","Coun") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",81,0)
 S X=$$SW(X,"Prevention","Prev") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",82,0)
 S X=$$SW(X,"Abdominal","Abd") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",83,0)
 S X=$$SW(X,"Unilateral","Unil") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",84,0)
 S X=$$SW(X,"Bilateral","Bil") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",85,0)
 S X=$$SW(X,"Bile Ducts & Pancreatic Ducts","Bile & Pancreatic Ducts") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",86,0)
 S X=$$SW(X,"Positron","Pos") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",87,0)
 S X=$$SW(X,"Arteries","Art") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",88,0)
 S X=$$SW(X,"Artery","Art") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",89,0)
 S X=$$SW(X,"Left","Lt") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",90,0)
 S X=$$SW(X,"Right","Rt") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",91,0)
 S X=$$SW(X,"Skeleton","Skel") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",92,0)
 S X=$$SW(X,"Tissue & Fascia","Tissue/Fascia") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",93,0)
 S X=$$SW(X,"Anterior","Ant") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",94,0)
 S X=$$SW(X,"Posterior","Post") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",95,0)
 S X=$$SW(X,"Myocutaneous","Myocut") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",96,0)
 S X=$$SW(X,"Recombinant","Recomb") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",97,0)
 S X=$$SW(X,"Except","Exc") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",98,0)
 S X=$$SW(X,"Nonautologous","Nonauto") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",99,0)
 S X=$$SW(X,"Stabilization","Stab") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",100,0)
 S X=$$SW(X,"Synthetic","Syn") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",101,0)
 S X=$$SW(X,"Substitute","Sub") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",102,0)
 S X=$$SW(X,"Percutaneous","Percut") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",103,0)
 S X=$$SW(X,"Opening","Open") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",104,0)
 S X=$$SW(X,"Single","Sin") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",105,0)
 S X=$$SW(X,"Channel","Chan") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",106,0)
 S X=$$SW(X,"Prosthesis","Prost") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",107,0)
 S X=$$SW(X,"Transverse","Transv") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",108,0)
 S X=$$SW(X,"Inferior","Infer") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",109,0)
 S X=$$SW(X,"Deep","Dp") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",110,0)
 S X=$$SW(X,"LEXLgthening","LEXLgthen") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",111,0)
 S X=$$SW(X,"Endo Assist","Endo Ast") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",112,0)
 S X=$$SW(X,"Interspinous","Interspin") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",113,0)
 S X=$$SW(X,"Mult Chan","Mul Chan") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",114,0)
 S X=$$SW(X,"Perforator","Perfor") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",115,0)
 S X=$$SW(X,"Superficial","Superfic") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",116,0)
 S X=$$SW(X,"Resynchronization","Resync") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",117,0)
 S X=$$SW(X,"Defibrillator","Defib") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",118,0)
 S X=$$SW(X,"Generator","Gen") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",119,0)
 S X=$$SW(X,"Stimulator","Stim") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",120,0)
 S X=$$SW(X,"Rechargeable","Recharg") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",121,0)
 S X=$$SW(X,"Responsive","Respon") Q:$L(X)'>LEXL X
"RTN","LEX10PLA",122,0)
 Q X
"RTN","LEX10PLA",123,0)
SW(LEX,X,Y) ;   Swap Word X for Word Y
"RTN","LEX10PLA",124,0)
 S LEX=$G(LEX),X=$G(X),Y=$G(Y) Q:'$L(LEX)  Q:'$L(X)
"RTN","LEX10PLA",125,0)
 F  Q:LEX'[X  S:LEX[X LEX=$P(LEX,X,1)_Y_$P(LEX,X,2,299)
"RTN","LEX10PLA",126,0)
 S X=LEX
"RTN","LEX10PLA",127,0)
 Q X
"RTN","LEX10PLS")
0^109^B85504731
"RTN","LEX10PLS",1,0)
LEX10PLS ;ISL/KER - ICD-10 Procedure Lookup Selection ;04/21/2014
"RTN","LEX10PLS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10PLS",3,0)
 ;               
"RTN","LEX10PLS",4,0)
 ; Global Variables
"RTN","LEX10PLS",5,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10PLS",6,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10PLS",7,0)
 ;               
"RTN","LEX10PLS",8,0)
 ; External References
"RTN","LEX10PLS",9,0)
 ;    ENDR^%ZISS          ICR  10088
"RTN","LEX10PLS",10,0)
 ;    KILL^%ZISS          ICR  10088
"RTN","LEX10PLS",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10PLS",12,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10PLS",13,0)
 ;               
"RTN","LEX10PLS",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX10PLS",15,0)
 ;     LEXPCDAT
"RTN","LEX10PLS",16,0)
 ;               
"RTN","LEX10PLS",17,0)
SEL(X) ; Select from List
"RTN","LEX10PLS",18,0)
 ;
"RTN","LEX10PLS",19,0)
 ; Input   
"RTN","LEX10PLS",20,0)
 ; 
"RTN","LEX10PLS",21,0)
 ;    X        Origninal Value
"RTN","LEX10PLS",22,0)
 ;    
"RTN","LEX10PLS",23,0)
 ;    Needs LEXPCDAT array
"RTN","LEX10PLS",24,0)
 ;                  
"RTN","LEX10PLS",25,0)
 ;             LEXPCDAT=1
"RTN","LEX10PLS",26,0)
 ;             LEXPCDAT("NEXLEV","6","DESC")="Cerebral Ventricle"
"RTN","LEX10PLS",27,0)
 ;             LEXPCDAT("NEXLEV","U","DESC")="Spinal Canal"
"RTN","LEX10PLS",28,0)
 ;             LEXPCDAT("LEXLEV",<character>,"DESC")=Description of Character
"RTN","LEX10PLS",29,0)
 ;             
"RTN","LEX10PLS",30,0)
 ; Output
"RTN","LEX10PLS",31,0)
 ;               
"RTN","LEX10PLS",32,0)
 ;    $$SEL  Next Character or -1
"RTN","LEX10PLS",33,0)
 ;               
"RTN","LEX10PLS",34,0)
 ; Creates Selection Array LEX
"RTN","LEX10PLS",35,0)
 ; 
"RTN","LEX10PLS",36,0)
 ;             LEX(0)=3
"RTN","LEX10PLS",37,0)
 ;             LEX(1)="6^   1.  ("_$c(27)_"[1m6"_$c(27)_"[m)  Cerebral Ventricle"
"RTN","LEX10PLS",38,0)
 ;             LEX(2)="U^   2.  ("_$c(27)_"[1mU"_$c(27)_"[m)  Spinal Canal"
"RTN","LEX10PLS",39,0)
 ;             LEX(2)=<character>^<menu text>
"RTN","LEX10PLS",40,0)
 ;             LEX("B",1)=1
"RTN","LEX10PLS",41,0)
 ;             LEX("B",2)=2
"RTN","LEX10PLS",42,0)
 ;             LEX("B",<menu item>)=<menu item>
"RTN","LEX10PLS",43,0)
 ;             LEX("B",6)=1
"RTN","LEX10PLS",44,0)
 ;             LEX("B","U")=2
"RTN","LEX10PLS",45,0)
 ;             LEX("B",<character>)=<menu item>
"RTN","LEX10PLS",46,0)
 ;
"RTN","LEX10PLS",47,0)
 N DIR,DIRB,LEX,LEXCUR,LEXE,LEXFI,LEXHLP,LEXI,LEXIT,LEXL,LEXLAST
"RTN","LEX10PLS",48,0)
 N LEXMAX,LEXOUT,LEXS,LEXSS,LEXTOT,LEXTXT,LEXX K DTOUT,DUOUT,DIROUT,DIRUT
"RTN","LEX10PLS",49,0)
 N LEXIT,LEXL,LEXTOT,LEX S LEXTXT=$G(X),LEXIT=0,LEXTOT=$$FND Q:+LEXTOT'>0 "^"
"RTN","LEX10PLS",50,0)
 K X S:+LEXTOT=1 X=$$ONE S:+LEXTOT>1 X=$$MUL(LEXTXT) N LEXTEST
"RTN","LEX10PLS",51,0)
 Q X
"RTN","LEX10PLS",52,0)
ONE(X) ; One Entry Found
"RTN","LEX10PLS",53,0)
 Q:+($G(LEXIT))>0 "^^"  S X=$$GETO
"RTN","LEX10PLS",54,0)
 Q X
"RTN","LEX10PLS",55,0)
MUL(X) ; Multiple Entries Found
"RTN","LEX10PLS",56,0)
 Q:+($G(LEXIT))>0 "^^"  N LEX,LEXE,LEXI,LEXL,LEXMAX,LEXP,LEXSS,LEXX
"RTN","LEX10PLS",57,0)
 S LEXTXT=$G(X) D BUILD
"RTN","LEX10PLS",58,0)
 S LEXMAX=$G(LEXTOT),(LEXSS,LEXIT)=0,U="^" G:LEXMAX'>1 MULQ
"RTN","LEX10PLS",59,0)
 D:$L($G(LEXTXT)) CUR^LEX10PL(LEXTXT) W !
"RTN","LEX10PLS",60,0)
 W:$D(LEXTEST) !," Next character:  ",!
"RTN","LEX10PLS",61,0)
 S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10PLS",62,0)
 . W !,?1,$G(LEX(+LEXI))
"RTN","LEX10PLS",63,0)
 W ! S LEXSS=$$MULS S:LEXSS["^" LEXIT=1
"RTN","LEX10PLS",64,0)
 S X=LEXSS
"RTN","LEX10PLS",65,0)
MULQ ;   Multiple Entries - Quit
"RTN","LEX10PLS",66,0)
 K LEX
"RTN","LEX10PLS",67,0)
 Q X
"RTN","LEX10PLS",68,0)
MULS(X) ;   Multiple Entries - Select
"RTN","LEX10PLS",69,0)
 K DTOUT,DUOUT,DIROUT,DIRUT
"RTN","LEX10PLS",70,0)
 N DIR,DIRB,LEXFI,LEXHLP,LEXLAST,LEXS S LEXMAX=+($G(LEXMAX)),LEXTXT=$G(LEXTXT)
"RTN","LEX10PLS",71,0)
 Q:+($G(LEXIT))>0 "^^" Q:LEXMAX'>1 ""
"RTN","LEX10PLS",72,0)
 S DIR("A")=" Select Next Character 1-"_LEXMAX_": "
"RTN","LEX10PLS",73,0)
 S LEXHLP=" Answer must be from 1 to "_LEXMAX_" or a character."
"RTN","LEX10PLS",74,0)
 S DIR("PRE")="S X=$$MULSP^LEX10PLS(X)"
"RTN","LEX10PLS",75,0)
 S (DIR("?"),DIR("??"))="^D MULSH^LEX10PLS"
"RTN","LEX10PLS",76,0)
 S DIR(0)="FAO^1:3" D ^DIR I X["^^"!($D(DTOUT))!($D(DIROUT)) S LEXIT=1,X="^^" Q X
"RTN","LEX10PLS",77,0)
 Q:X["^"!($D(DIRUT))!($D(DUOUT)) "^"  Q:'$L(X) ""
"RTN","LEX10PLS",78,0)
 I +Y>0,$L($G(LEX("E",+Y))) S X=$G(LEX("E",+Y)) Q X
"RTN","LEX10PLS",79,0)
 Q X
"RTN","LEX10PLS",80,0)
MULSH ;   Multiple Entries - Selection Help
"RTN","LEX10PLS",81,0)
 I $L($G(LEXHLP)) W !,$G(LEXHLP) Q
"RTN","LEX10PLS",82,0)
 Q
"RTN","LEX10PLS",83,0)
MULSP(X) ;   Multiple Entries - Pre-Process
"RTN","LEX10PLS",84,0)
 N LEXM,LEXP1,LEXP2,LEXO,LEXN,LEXA S (LEXM,X)=$$UP^XLFSTR($G(X)) Q:'$L(X) X
"RTN","LEX10PLS",85,0)
 S LEXP1=$E(LEXM,1),LEXP2=$E(LEXM,2,$L(LEXM)),LEXA="" S:$L(LEXP2) LEXA=$G(LEX("E",LEXP2))
"RTN","LEX10PLS",86,0)
 I $D(LEX("B",LEXM)) S X=LEXM Q X
"RTN","LEX10PLS",87,0)
 I $D(LEX("C",LEXM)) S X=$G(LEX("C",LEXM)) Q X
"RTN","LEX10PLS",88,0)
 S:$L(LEXM)=1 LEXO=$C($A(LEXM)-1)_"~"
"RTN","LEX10PLS",89,0)
 S:$L(LEXM)>1 LEXO=$E(LEXM,1,($L(LEXM)-1))_$C($A($E(LEXM,$L(LEXM)))-1)_"~"
"RTN","LEX10PLS",90,0)
 S LEXN="" S:$L(LEXO) LEXN=$O(LEX("D",LEXO)) S:$E(LEXN,1,$L(LEXM))'=LEXM LEXN=""
"RTN","LEX10PLS",91,0)
 I $L(LEXN) I $L($G(LEX("D",LEXN))) S X=$G(LEX("D",LEXN)) Q X
"RTN","LEX10PLS",92,0)
 I LEXP1="?",$L(LEXP2),$L(LEXA)=1 I $D(LEX("F",LEXA)) D MULSEH S X="??" Q X
"RTN","LEX10PLS",93,0)
 Q:LEXM["?" "??"  Q:'$L(LEXM) ""  Q:LEXM["^^" "^^"  Q:LEXM["^" "^"
"RTN","LEX10PLS",94,0)
 S:'$D(LEX("B",X)) X="??"
"RTN","LEX10PLS",95,0)
 Q X
"RTN","LEX10PLS",96,0)
MULSEH ; Extended Help
"RTN","LEX10PLS",97,0)
 N LEXT,LEXD,LEXE,LEXI,LEXP,LEXII,LEXIC S LEXA=$G(LEXA) Q:$L(LEXA)'=1  Q:'$D(LEX("F",LEXA))
"RTN","LEX10PLS",98,0)
 S LEXT=$G(LEX("F",LEXA,"DESC"))
"RTN","LEX10PLS",99,0)
 S LEXD=$G(LEX("F",LEXA,"META","Definition"))
"RTN","LEX10PLS",100,0)
 S LEXE=$G(LEX("F",LEXA,"META","Explanation"))
"RTN","LEX10PLS",101,0)
 S LEXY=$G(LEX("F",LEXA,"META","Includes/Examples",1))
"RTN","LEX10PLS",102,0)
 S LEXC=0 I $L(LEXT) S LEXC=LEXC+1 W:LEXC=1 ! W !," ",LEXT
"RTN","LEX10PLS",103,0)
 K LEXT S LEXT(1)=LEXD I $L(LEXT(1)) D
"RTN","LEX10PLS",104,0)
 . N LEXI D PR(.LEXT,(79-15)) Q:'$L($G(LEXT(1)))
"RTN","LEX10PLS",105,0)
 . W !!," Definition:",?15,$G(LEXT(1)) S LEXC=LEXC+1
"RTN","LEX10PLS",106,0)
 . S I=1 F  S I=$O(LEXT(I)) Q:+I'>0  W !,?15,$G(LEXT(I))
"RTN","LEX10PLS",107,0)
 K LEXT S LEXT(1)=LEXE I $L(LEXT(1)) D
"RTN","LEX10PLS",108,0)
 . N LEXI D PR(.LEXT,(79-15)) Q:'$L($G(LEXT(1)))
"RTN","LEX10PLS",109,0)
 . W !!," Explanation:",?15,$G(LEXT(1)) S LEXC=LEXC+1
"RTN","LEX10PLS",110,0)
 . S I=1 F  S I=$O(LEXT(I)) Q:+I'>0  W !,?15,$G(LEXT(I))
"RTN","LEX10PLS",111,0)
 S (LEXII,LEXIC)=0
"RTN","LEX10PLS",112,0)
 F  S LEXII=$O(LEX("F",LEXA,"META","Includes/Examples",LEXII)) Q:+LEXII'>0  D
"RTN","LEX10PLS",113,0)
 . N LEXY,LEXT,LEXI S LEXY=$G(LEX("F",LEXA,"META","Includes/Examples",LEXII))
"RTN","LEX10PLS",114,0)
 . S LEXT(1)=LEXY D PR(.LEXT,(79-15)) Q:'$L($G(LEXT(1)))
"RTN","LEX10PLS",115,0)
 . S LEXIC=LEXIC+1 W:LEXIC=1 !!," Include(s):" W:LEXIC'=1 ! W ?15,$G(LEXT(1))
"RTN","LEX10PLS",116,0)
 . S LEXI=1 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  W !,?15,$G(LEXT(LEXI))
"RTN","LEX10PLS",117,0)
 I LEXC>0 S LEXC=$$CONT W !
"RTN","LEX10PLS",118,0)
 W:$L($G(IOF)) @IOF
"RTN","LEX10PLS",119,0)
 D:$L($G(LEXTXT)) CUR^LEX10PL(LEXTXT) W !
"RTN","LEX10PLS",120,0)
 W:$D(LEXTEST) !," Next character:  ",!
"RTN","LEX10PLS",121,0)
 S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10PLS",122,0)
 . W !,?1,$G(LEX(+LEXI))
"RTN","LEX10PLS",123,0)
 Q
"RTN","LEX10PLS",124,0)
 ; 
"RTN","LEX10PLS",125,0)
 ; Miscellaneous
"RTN","LEX10PLS",126,0)
CUR(X) ;   Current Array
"RTN","LEX10PLS",127,0)
 K CUR N INP,PSN
"RTN","LEX10PLS",128,0)
 S INP=$G(X) Q:'$L(INP)  Q:'$D(^LEX(757.033,"AFRAG",31,(INP_" ")))
"RTN","LEX10PLS",129,0)
 S CUR=INP F PSN=1:1:$L(INP)  D
"RTN","LEX10PLS",130,0)
 . N SEC,CHR S SEC=$E(INP,1,PSN),CHR=$E(INP,PSN)
"RTN","LEX10PLS",131,0)
 Q
"RTN","LEX10PLS",132,0)
CL ;   Clear
"RTN","LEX10PLS",133,0)
 K LEXIT
"RTN","LEX10PLS",134,0)
 Q
"RTN","LEX10PLS",135,0)
BUILD ;   Build Selection Array
"RTN","LEX10PLS",136,0)
 D ATTR I LEXTOT'>15 D
"RTN","LEX10PLS",137,0)
 . K LEX N LEXI,LEXC S LEXC=0,LEXI=""
"RTN","LEX10PLS",138,0)
 . F  S LEXI=$O(LEXPCDAT("NEXLEV",LEXI)) Q:'$L(LEXI)  D
"RTN","LEX10PLS",139,0)
 . . N LEXT,LEXH S LEXT=$G(LEXPCDAT("NEXLEV",LEXI,"DESC"))
"RTN","LEX10PLS",140,0)
 . . Q:$L(LEXI)'=1  Q:'$L(LEXT)
"RTN","LEX10PLS",141,0)
 . . S LEXH=$S($D(LEXPCDAT("NEXLEV",LEXI,"META")):" *",1:"")
"RTN","LEX10PLS",142,0)
 . . S LEXC=LEXC+1 S LEX(LEXC)=$J(LEXC,4)_".  ("_BOLD_LEXI_NORM_")  "_LEXT_LEXH
"RTN","LEX10PLS",143,0)
 . . S:$L(LEXI) LEX("C",$$UP^XLFSTR(LEXI))=LEXC
"RTN","LEX10PLS",144,0)
 . . S:$L(LEXT) LEX("D",$$UP^XLFSTR(LEXT))=LEXC
"RTN","LEX10PLS",145,0)
 . . S LEX("B",LEXC)=LEXI
"RTN","LEX10PLS",146,0)
 . . S LEX("E",LEXC)=$$UP^XLFSTR(LEXI)
"RTN","LEX10PLS",147,0)
 . . S LEX(0)=LEXC
"RTN","LEX10PLS",148,0)
 . . I $D(LEXPCDAT("NEXLEV",LEXI,"META")) M LEX("F",LEXC)=LEXPCDAT("NEXLEV",LEXI)
"RTN","LEX10PLS",149,0)
 I LEXTOT>15 D
"RTN","LEX10PLS",150,0)
 . K LEX N LEXI,LEXN,LEXC,LEXD,LEXOFF,LEXXE,LEXXC S LEXOFF=(LEXTOT\2)+(LEXTOT#2) S LEXC=0,LEXI=""
"RTN","LEX10PLS",151,0)
 . S LEXXE=36+($L($G(BOLD)))+($L($G(NORM))),LEXXC=38+($L($G(BOLD)))+($L($G(NORM)))
"RTN","LEX10PLS",152,0)
 . F LEXN=1:1:LEXOFF D
"RTN","LEX10PLS",153,0)
 . . N LEXT,LEXN1,LEXN2,LEXC1,LEXC2,LEXT1,LEXT2,LEXP1,LEXP2,LEXH1,LEXH2
"RTN","LEX10PLS",154,0)
 . . S LEXN1=LEXN,LEXN2=LEXN+LEXOFF,(LEXP1,LEXP2)=""
"RTN","LEX10PLS",155,0)
 . . S LEXC1=$$CD(LEXN1),LEXC2=$$CD((LEXN2))
"RTN","LEX10PLS",156,0)
 . . S LEXT1=$P(LEXC1,"^",2),LEXT2=$P(LEXC2,"^",2)
"RTN","LEX10PLS",157,0)
 . . S:$L(LEXT1)>28 LEXT1=$$SH^LEX10PLA(LEXT1,28)
"RTN","LEX10PLS",158,0)
 . . S:$L(LEXT2)>28 LEXT2=$$SH^LEX10PLA(LEXT2,28)
"RTN","LEX10PLS",159,0)
 . . S LEXC1=$P(LEXC1,"^",1),LEXC2=$P(LEXC2,"^",1)
"RTN","LEX10PLS",160,0)
 . . S LEXP1="" I LEXN1>0,$L(LEXC1),$L(LEXT1) D
"RTN","LEX10PLS",161,0)
 . . . S LEXH1="" S:$D(LEXPCDAT("NEXLEV",LEXC1,"META")) LEXH1=" *"
"RTN","LEX10PLS",162,0)
 . . . S LEXP1=$J(LEXN1,2)_". ("_$G(BOLD)_LEXC1_$G(NORM)_") "_LEXT1_LEXH1
"RTN","LEX10PLS",163,0)
 . . S LEXP2="" I LEXN2>0,$L(LEXC2),$L(LEXT2) D
"RTN","LEX10PLS",164,0)
 . . . S LEXH2="" S:$D(LEXPCDAT("NEXLEV",LEXC2,"META")) LEXH2=" *"
"RTN","LEX10PLS",165,0)
 . . . S LEXP2=$J(LEXN2,2)_". ("_$G(BOLD)_LEXC2_$G(NORM)_") "_LEXT2_LEXH1
"RTN","LEX10PLS",166,0)
 . . S LEXT=$E(LEXP1,1,LEXXE),LEXT=LEXT_$J(" ",(LEXXC-$L(LEXT)))_$E(LEXP2,1,LEXXE)
"RTN","LEX10PLS",167,0)
 . . S LEXC=LEXC+1 S LEX(LEXC)=LEXT
"RTN","LEX10PLS",168,0)
 . . ; Column 1
"RTN","LEX10PLS",169,0)
 . . I +($G(LEXN1))>0,$L(LEXC1)=1 D
"RTN","LEX10PLS",170,0)
 . . . S LEX("B",LEXN1)=LEXN1
"RTN","LEX10PLS",171,0)
 . . . S:$L(LEXC1) LEX("C",$$UP^XLFSTR(LEXC1))=LEXN1,LEX("E",LEXN1)=$$UP^XLFSTR(LEXC1)
"RTN","LEX10PLS",172,0)
 . . . S:$L(LEXT1) LEX("D",$$UP^XLFSTR(LEXT1))=LEXN1
"RTN","LEX10PLS",173,0)
 . . I $L(LEXC1),LEXN1>0 I $D(LEXPCDAT("NEXLEV",LEXC1,"META")) M LEX("F",LEXC1)=LEXPCDAT("NEXLEV",LEXC1)
"RTN","LEX10PLS",174,0)
 . . ; Column 2
"RTN","LEX10PLS",175,0)
 . . I +($G(LEXN2))>0,$L(LEXC2)=1 D
"RTN","LEX10PLS",176,0)
 . . . S LEX("B",LEXN2)=LEXN2
"RTN","LEX10PLS",177,0)
 . . . S:$L(LEXC2) LEX("C",$$UP^XLFSTR(LEXC2))=LEXN2,LEX("E",LEXN2)=$$UP^XLFSTR(LEXC2)
"RTN","LEX10PLS",178,0)
 . . . S:$L(LEXT2) LEX("D",$$UP^XLFSTR(LEXT2))=LEXN2
"RTN","LEX10PLS",179,0)
 . . . ;S LEX("B",LEXN2)=LEXC2,LEX("B",LEXC2)=LEXC2
"RTN","LEX10PLS",180,0)
 . . I $L(LEXC2),LEXN2>0 I $D(LEXPCDAT("NEXLEV",LEXC2,"META")) M LEX("F",LEXC2)=LEXPCDAT("NEXLEV",LEXC2)
"RTN","LEX10PLS",181,0)
 . . S LEX(0)=LEXC
"RTN","LEX10PLS",182,0)
 D KATTR
"RTN","LEX10PLS",183,0)
 Q
"RTN","LEX10PLS",184,0)
CD(X) ;  Character/Description
"RTN","LEX10PLS",185,0)
 N LEXN,LEXI,LEXC,LEXC,LEXE S LEXN=$G(X) Q:+LEXN'>0  S LEXE=0,LEXC="",LEXD="",X=""
"RTN","LEX10PLS",186,0)
 F LEXI=1:1:LEXN Q:LEXE  D  Q:LEXE
"RTN","LEX10PLS",187,0)
 . S LEXC=$O(LEXPCDAT("NEXLEV",LEXC)) I '$L(LEXC) S LEXD="",LEXE=1 Q
"RTN","LEX10PLS",188,0)
 . S LEXD=$G(LEXPCDAT("NEXLEV",LEXC,"DESC"))
"RTN","LEX10PLS",189,0)
 S X=LEXC_"^"_LEXD
"RTN","LEX10PLS",190,0)
 Q X
"RTN","LEX10PLS",191,0)
SH(X) ;   Shorten Text
"RTN","LEX10PLS",192,0)
 S X=$G(X) N LEXR,LEXW
"RTN","LEX10PLS",193,0)
 S LEXR=" and ",LEXW=" & " S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",194,0)
 S LEXR=" Systems",LEXW=" Sys" S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",195,0)
 S LEXR=" System",LEXW=" Sys" S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",196,0)
 ;S LEXR=" Upper ",LEXW=" Up " S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",197,0)
 S LEXR="Anatomical ",LEXW="Anat. " S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",198,0)
 S LEXR="Subcutaneous",LEXW="Subcut." S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",199,0)
 S LEXR="Extremities",LEXW="Extrem." S:X[LEXR X=$P(X,LEXR,1)_LEXW_$P(X,LEXR,2,299)
"RTN","LEX10PLS",200,0)
 Q X
"RTN","LEX10PLS",201,0)
ATTR ;   Screen Attributes
"RTN","LEX10PLS",202,0)
 N X,IOINHI,IOINORM S X="IOINHI;IOINORM" D ENDR^%ZISS S BOLD=$G(IOINHI),NORM=$G(IOINORM)
"RTN","LEX10PLS",203,0)
 Q
"RTN","LEX10PLS",204,0)
KATTR ;   Kill Screen Attributes
"RTN","LEX10PLS",205,0)
 D KILL^%ZISS K BOLD,NORM
"RTN","LEX10PLS",206,0)
 Q
"RTN","LEX10PLS",207,0)
TEST ; Test Array Building
"RTN","LEX10PLS",208,0)
 K LEX N LEXC,LEXDT,LEXHLP,LEXI,LEXIT,LEXM,LEXMAX,LEXP1,LEXP1,LEXPCDAT,LEXSS,LEXTOT,LEXTXT,LEXUP,LEXY,LEXCHR,LEXIT
"RTN","LEX10PLS",209,0)
 S LEXTXT="0CDXXZ",LEXDT=3141010
"RTN","LEX10PLS",210,0)
 S LEXTXT="0C",LEXDT=3141010
"RTN","LEX10PLS",211,0)
 D LOOK^LEX10PL
"RTN","LEX10PLS",212,0)
 Q
"RTN","LEX10PLS",213,0)
FND(X) ;   Found
"RTN","LEX10PLS",214,0)
 N LEXI S X=0,LEXI="" F  S LEXI=$O(LEXPCDAT("NEXLEV",LEXI)) Q:'$L(LEXI)  S X=X+1
"RTN","LEX10PLS",215,0)
 Q X
"RTN","LEX10PLS",216,0)
GETO(X) ;   Get One
"RTN","LEX10PLS",217,0)
 S X=$O(LEXPCDAT("NEXLEV",""))
"RTN","LEX10PLS",218,0)
 Q X
"RTN","LEX10PLS",219,0)
PR(LEX,X) ;   Parse Array
"RTN","LEX10PLS",220,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,Z,LEXC,LEXI,LEXL
"RTN","LEX10PLS",221,0)
 K ^UTILITY($J,"W") Q:'$D(LEX)  S LEXL=+($G(X)) S:+LEXL'>0 LEXL=79
"RTN","LEX10PLS",222,0)
 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEX10PLS",223,0)
 S DIWL=1,DIWF="C"_+LEXL S LEXI=0
"RTN","LEX10PLS",224,0)
 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEX10PLS",225,0)
 K LEX S (LEXC,LEXI)=0
"RTN","LEX10PLS",226,0)
 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEX10PLS",227,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEX10PLS",228,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEX10PLS",229,0)
 Q
"RTN","LEX10PLS",230,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10PLS",231,0)
 S X=$G(X) Q:X="" X S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10PLS",232,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10PLS",233,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10PLS",234,0)
 Q X
"RTN","LEX10PLS",235,0)
CONT(X) ;   Ask to Continue
"RTN","LEX10PLS",236,0)
 N DIR,DIROUT,DIRUT,DUOUT,DTOUT,Y S DIR(0)="EAO",DIR("A")="     Press Enter to continue"
"RTN","LEX10PLS",237,0)
 S DIR("PRE")="S:X[""?"" X=""??"" S:X[""^"" X=""^""",(DIR("?"),DIR("??"))="^D CONTH^LEX10PLS"
"RTN","LEX10PLS",238,0)
 W ! D ^DIR
"RTN","LEX10PLS",239,0)
 Q ""
"RTN","LEX10PLS",240,0)
CONTH ;      Ask to Continue Help
"RTN","LEX10PLS",241,0)
 W !,"       Press Enter to continue" Q
"RTN","LEX10PR")
0^29^B47282338
"RTN","LEX10PR",1,0)
LEX10PR ;ISL/KER - ICD-10 Procedure Code ;04/21/2014
"RTN","LEX10PR",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10PR",3,0)
 ;               
"RTN","LEX10PR",4,0)
 ; Global Variables
"RTN","LEX10PR",5,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10PR",6,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10PR",7,0)
 ;               
"RTN","LEX10PR",8,0)
 ; External References
"RTN","LEX10PR",9,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10PR",10,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEX10PR",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10PR",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX10PR",13,0)
 ;               
"RTN","LEX10PR",14,0)
NEXT(LEXC,LEXA,LEXD) ; Next Allowable Character
"RTN","LEX10PR",15,0)
 ;
"RTN","LEX10PR",16,0)
 ; Input
"RTN","LEX10PR",17,0)
 ; 
"RTN","LEX10PR",18,0)
 ;   LEXC    Partial Proc Code    Required
"RTN","LEX10PR",19,0)
 ;  .LEXA    Local Array (by Ref) Required
"RTN","LEX10PR",20,0)
 ;   LEXD    Date (FM Format)     Optional (Default TODAY)
"RTN","LEX10PR",21,0)
 ;  
"RTN","LEX10PR",22,0)
 ; Output
"RTN","LEX10PR",23,0)
 ; 
"RTN","LEX10PR",24,0)
 ;   LEXA(<input>,0)= # of characters
"RTN","LEX10PR",25,0)
 ;   LEXA(<input>,<character>)=""
"RTN","LEX10PR",26,0)
 ; 
"RTN","LEX10PR",27,0)
 N LEX1,LEX2,LEXCDT,LEXCHK,LEXCHR,LEXCT,LEXE,LEXLEN,LEXID,LEXNC,LEXNN
"RTN","LEX10PR",28,0)
 N LEXNAM,LEXOR,LEXPRE,LEXS,LEXSO S LEXC=$$TM(LEXC) S (LEXID,LEXSO)=LEXC
"RTN","LEX10PR",29,0)
 S LEXCDT=$G(LEXD) S:LEXCDT'?7N LEXCDT=$$DT^XLFDT S LEXLEN=$L(LEXC)
"RTN","LEX10PR",30,0)
 I LEXLEN>6 D  Q X
"RTN","LEX10PR",31,0)
 . S X="-1^Input is of Maximum length, no next character available"
"RTN","LEX10PR",32,0)
 I LEXLEN>1 D
"RTN","LEX10PR",33,0)
 . S LEXOR=$E(LEXSO,1,($L(LEXSO)-1))_$C($A($E(LEXSO,$L(LEXSO)))-1)_"~"
"RTN","LEX10PR",34,0)
 S:LEXLEN=1 LEXOR=$C($A(LEXSO)-1)_"~" S:LEXLEN'>0 LEXOR="/~"
"RTN","LEX10PR",35,0)
 S LEXCHK=0 S:LEXLEN'>0 LEXCHK=1 S:LEXLEN>0&(LEXLEN<7) LEXCHK=LEXLEN+1
"RTN","LEX10PR",36,0)
 Q:+LEXCHK'>0 "-1^Character position not specified"
"RTN","LEX10PR",37,0)
 S:LEXLEN=0 LEXID="<null>" S:'$L(LEXID) LEXID="<unknown>"
"RTN","LEX10PR",38,0)
 S LEXNN="^LEX(757.02,""APR"","""_LEXOR_" "")"
"RTN","LEX10PR",39,0)
 S LEXNC="^LEX(757.02,""APR"","""_LEXSO,LEXCT=0
"RTN","LEX10PR",40,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10PR",41,0)
 . N LEXC,LEXD,LEXE,LEXS,LEX1,LEX2
"RTN","LEX10PR",42,0)
 . S LEXC=$P(LEXNN,",",3),LEXC=$TR(LEXC,"""",""),LEXC=$$TM(LEXC)
"RTN","LEX10PR",43,0)
 . S LEXD=+($P(LEXNN,",",4)) Q:LEXD'?7N  Q:(LEXCDT+.001)'>LEXD
"RTN","LEX10PR",44,0)
 . I $E(LEXC,1,$L(LEXSO))=LEXSO,$L(LEXC)'<LEXCHK D  Q
"RTN","LEX10PR",45,0)
 . . N LEXCHR,LEXFUL S LEXCHR=$E(LEXC,LEXCHK) Q:'$L(LEXCHR)
"RTN","LEX10PR",46,0)
 . . S LEXFUL=LEXID_LEXCHR Q:$$IS(LEXFUL)'>0
"RTN","LEX10PR",47,0)
 . . I '$D(LEXA(LEXID,LEXCHR)) D
"RTN","LEX10PR",48,0)
 . . . N LEXNAM S LEXNAM=$$NAM((LEXID_LEXCHR))
"RTN","LEX10PR",49,0)
 . . . S LEXA(LEXID,LEXCHR)=LEXNAM,LEXCT=LEXCT+1
"RTN","LEX10PR",50,0)
 . . S LEXOR=$E(LEXC,1,LEXCHK)_"~"
"RTN","LEX10PR",51,0)
 . . S LEXNN="^LEX(757.02,""APR"","""_LEXOR_""")"
"RTN","LEX10PR",52,0)
 S LEXNAM=$$NAM(LEXID) S:$L(LEXNAM) LEXA(LEXID)=LEXNAM
"RTN","LEX10PR",53,0)
 I $L(LEXID)>1 D
"RTN","LEX10PR",54,0)
 . F LEX1=($L(LEXID)-1):-1:1  D
"RTN","LEX10PR",55,0)
 . . N LEXNN S LEXNN=$E(LEXID,1,LEX1),LEXNAM=$$NAM(LEXNN)
"RTN","LEX10PR",56,0)
 . . S:$L(LEXNN)&($L(LEXNAM)) LEXA(LEXNN)=LEXNAM
"RTN","LEX10PR",57,0)
 Q +($G(LEXCT))
"RTN","LEX10PR",58,0)
NAM(X) ; Name
"RTN","LEX10PR",59,0)
 N LEXC,LEXCIEN,LEXEFF,LEXNAM S LEXC=$G(X) Q:'$L(LEXC) ""
"RTN","LEX10PR",60,0)
 S LEXEFF=$O(^LEX(757.033,"AFRAG",31,(LEXC_" "),(LEXCDT+.001)),-1)
"RTN","LEX10PR",61,0)
 S LEXCIEN=$O(^LEX(757.033,"AFRAG",31,(LEXC_" "),LEXEFF," "),-1)
"RTN","LEX10PR",62,0)
 S LEXNAM=$$SN(LEXCIEN) S X=LEXNAM
"RTN","LEX10PR",63,0)
 Q X
"RTN","LEX10PR",64,0)
SN(X,EFF) ; Short Name
"RTN","LEX10PR",65,0)
 N IEN,CDT,IMP,EFF,HIS S IEN=+($G(X)),CDT=$G(LEXVDT) S:$G(EFF)?7N CDT=$G(EFF)
"RTN","LEX10PR",66,0)
 S IMP=$$IMP^ICDEX(31) S:CDT'?7N CDT=$$DT^XLFDT S:CDT'>IMP&(IMP?7N) CDT=IMP
"RTN","LEX10PR",67,0)
 S EFF=$O(^LEX(757.033,+IEN,2,"B",(CDT+.001)),-1)
"RTN","LEX10PR",68,0)
 S HIS=$O(^LEX(757.033,+IEN,2,"B",+EFF," "),-1)
"RTN","LEX10PR",69,0)
 S X=$G(^LEX(757.033,+IEN,2,+HIS,1))
"RTN","LEX10PR",70,0)
 Q X
"RTN","LEX10PR",71,0)
IS(X) ; Is a Root Code
"RTN","LEX10PR",72,0)
 N LEXC,LEXL,LEXO,LEXN S LEXC=$G(X) Q:'$L(LEXC) 0  S LEXL=$L(LEXC)
"RTN","LEX10PR",73,0)
 S:LEXL>1 LEXO=$E(LEXC,1,($L(LEXC)-1))_$C($A($E(LEXC,$L(LEXC)))-1)_"~"
"RTN","LEX10PR",74,0)
 S:LEXL=1 LEXO=$C($A(LEXC)-1)_"~" S LEXN=$O(^LEX(757.02,"APR",(LEXOR_" ")))
"RTN","LEX10PR",75,0)
 I $E(LEXN,1,LEXL)=LEXC Q 1
"RTN","LEX10PR",76,0)
 Q 0
"RTN","LEX10PR",77,0)
FIN(X,LEXVDT,ARY) ; Fragment Info
"RTN","LEX10PR",78,0)
 ;
"RTN","LEX10PR",79,0)
 ; Input
"RTN","LEX10PR",80,0)
 ; 
"RTN","LEX10PR",81,0)
 ;    X         IEN of Code Fragment
"RTN","LEX10PR",82,0)
 ;    LEXVDT    Versioning date (busines rules apply)
"RTN","LEX10PR",83,0)
 ;   .ARY       Local Array, passed by reference
"RTN","LEX10PR",84,0)
 ;   
"RTN","LEX10PR",85,0)
 ; Output
"RTN","LEX10PR",86,0)
 ; 
"RTN","LEX10PR",87,0)
 ;    $$FIN     1 on success
"RTN","LEX10PR",88,0)
 ;             -1 ^ error message on error
"RTN","LEX10PR",89,0)
 ;    
"RTN","LEX10PR",90,0)
 ;    ARY(0)    5 piece "^" delimited strig
"RTN","LEX10PR",91,0)
 ;                1  Unique Id
"RTN","LEX10PR",92,0)
 ;                2  Code Fragment
"RTN","LEX10PR",93,0)
 ;                3  Date Entered
"RTN","LEX10PR",94,0)
 ;                4  Source
"RTN","LEX10PR",95,0)
 ;                5  Details
"RTN","LEX10PR",96,0)
 ;                
"RTN","LEX10PR",97,0)
 ;    ARY(1)    4 piece "^" delimited string
"RTN","LEX10PR",98,0)
 ;                1  Effective Date
"RTN","LEX10PR",99,0)
 ;                2  Status
"RTN","LEX10PR",100,0)
 ;                3  Effective Date External
"RTN","LEX10PR",101,0)
 ;                4  Status External
"RTN","LEX10PR",102,0)
 ;               
"RTN","LEX10PR",103,0)
 ;    ARY(2)    Name/Title
"RTN","LEX10PR",104,0)
 ;    ARY(3)    Description
"RTN","LEX10PR",105,0)
 ;    ARY(4)    Explanation
"RTN","LEX10PR",106,0)
 ;    ARY(5,0)  # of synonyms included
"RTN","LEX10PR",107,0)
 ;    ARY(5,n)  included synonyms
"RTN","LEX10PR",108,0)
 ;    
"RTN","LEX10PR",109,0)
 N CDT,EFF,ENT,FRG,IEN,IMP,N0,NOD,NODC,NODI,REC,SAB,SRC K ARY
"RTN","LEX10PR",110,0)
 S U="^",IEN=+($G(X)) Q:IEN'>0 "-1^Invalid IEN number"
"RTN","LEX10PR",111,0)
 S N0=$G(^LEX(757.033,IEN,0)) Q:'$L(N0) "-1^IEN not found number"
"RTN","LEX10PR",112,0)
 S SAB=$E(N0,1,3),FRG=$P(N0,U,2),ENT=$P(N0,U,3),SRC=$P(N0,U,4)
"RTN","LEX10PR",113,0)
 S IMP=$$IMPDATE^LEXU(SRC) S CDT=$G(LEXVDT) S:'$L(CDT) CDT=$$DT^XLFDT
"RTN","LEX10PR",114,0)
 S:CDT?7N&(IMP?7N)&(CDT<IMP) CDT=IMP
"RTN","LEX10PR",115,0)
 S EFF=$O(^LEX(757.033,+IEN,1,"B",(CDT+.001)),-1)
"RTN","LEX10PR",116,0)
 S REC=$O(^LEX(757.033,+IEN,1,"B",+EFF," "),-1)
"RTN","LEX10PR",117,0)
 S NOD=$G(^LEX(757.033,IEN,1,+REC,0)) S ARY(0)=N0
"RTN","LEX10PR",118,0)
 S ARY(0,"TXT")="Unique ID^Code Fragment^Date Entered^Source"
"RTN","LEX10PR",119,0)
 S ARY(1)=NOD_"^"_$$FMTE^XLFDT($P(NOD,"^",1),"5Z")_"^"_$S($P(NOD,"^",2)="1":"Active",$P(NOD,"^",2)="0":"Inactive",1:"")
"RTN","LEX10PR",120,0)
 S ARY(1,"TXT")="Effective Date^Status"
"RTN","LEX10PR",121,0)
 S EFF=$O(^LEX(757.033,+IEN,2,"B",(CDT+.001)),-1)
"RTN","LEX10PR",122,0)
 S REC=$O(^LEX(757.033,+IEN,2,"B",+EFF," "),-1)
"RTN","LEX10PR",123,0)
 S NOD=$G(^LEX(757.033,IEN,2,+REC,1))
"RTN","LEX10PR",124,0)
 S:$L(NOD) ARY(2)=NOD
"RTN","LEX10PR",125,0)
 S:$L(NOD) ARY(2,"TXT")="Name/Title"
"RTN","LEX10PR",126,0)
 S EFF=$O(^LEX(757.033,+IEN,3,"B",(CDT+.001)),-1)
"RTN","LEX10PR",127,0)
 S REC=$O(^LEX(757.033,+IEN,3,"B",+EFF," "),-1)
"RTN","LEX10PR",128,0)
 S NOD=$G(^LEX(757.033,IEN,3,+REC,1))
"RTN","LEX10PR",129,0)
 S:$L(NOD) ARY(3)=NOD
"RTN","LEX10PR",130,0)
 S:$L(NOD) ARY(3,"TXT")="Description"
"RTN","LEX10PR",131,0)
 S EFF=$O(^LEX(757.033,+IEN,4,"B",(CDT+.001)),-1)
"RTN","LEX10PR",132,0)
 S REC=$O(^LEX(757.033,+IEN,4,"B",+EFF," "),-1)
"RTN","LEX10PR",133,0)
 S NOD=$G(^LEX(757.033,IEN,4,+REC,1))
"RTN","LEX10PR",134,0)
 S:$L(NOD) ARY(4)=NOD
"RTN","LEX10PR",135,0)
 S:$L(NOD) ARY(4,"TXT")="Explanation"
"RTN","LEX10PR",136,0)
 S EFF=$O(^LEX(757.033,+IEN,5,"B",(CDT+.001)),-1)
"RTN","LEX10PR",137,0)
 S REC=$O(^LEX(757.033,+IEN,5,"B",+EFF," "),-1)
"RTN","LEX10PR",138,0)
 S (NODC,NODI)=0 F  S NODI=$O(^LEX(757.033,IEN,5,+REC,1,NODI)) Q:+NODI'>0  D
"RTN","LEX10PR",139,0)
 . S NOD=$$TM($G(^LEX(757.033,IEN,5,REC,1,NODI,0))) Q:'$L(NOD)
"RTN","LEX10PR",140,0)
 . S NODC=NODC+1 S ARY(5,0)=NODC,ARY(5,"TXT")="Include",ARY(5,NODC)=NOD
"RTN","LEX10PR",141,0)
 Q 1
"RTN","LEX10PR",142,0)
INF(X) ;
"RTN","LEX10PR",143,0)
 N FRAG,CDT,IMP,C1,C2,ARY,IEN S C1=15,C2=26 K ARY
"RTN","LEX10PR",144,0)
 S FRAG=$G(X) Q:'$L(FRAG)  S CDT=$G(LEXVDT) S:CDT'?7N CDT=$$DT^XLFDT S IMP=$$IMP^ICDEX(31)
"RTN","LEX10PR",145,0)
 S IEN=$O(^LEX(757.033,"B",("10P"_FRAG),0))
"RTN","LEX10PR",146,0)
 S:CDT?7N&(IMP?7N)&(CDT<IMP) CDT=IMP K ARY S X=$$FIN(IEN,CDT,.ARY)
"RTN","LEX10PR",147,0)
 W:$L(FRAG) !," Fragment:",?C1,FRAG
"RTN","LEX10PR",148,0)
 W:$L(FRAG) ?C2,"Character:  ",$E(FRAG,$L(FRAG))
"RTN","LEX10PR",149,0)
 S TMP=$G(ARY(1)),EFF=$P(TMP,"^",3),STA=$P(TMP,"^",4)
"RTN","LEX10PR",150,0)
 I $L(EFF),$L(STA) D
"RTN","LEX10PR",151,0)
 . W !," Status:",?C1,STA,?C2,"Effective:  ",EFF
"RTN","LEX10PR",152,0)
 S TMP=$G(ARY(2))
"RTN","LEX10PR",153,0)
 I $L(TMP) D
"RTN","LEX10PR",154,0)
 . N TXT,I S TXT(1)=TMP D PR(.TXT,(79-C1)) Q:'$L($G(TXT(1)))
"RTN","LEX10PR",155,0)
 . W !!," Title:",?C1,$G(TXT(1))
"RTN","LEX10PR",156,0)
 . S I=1 F  S I=$O(TXT(I)) Q:+I'>0  W !,?C1,$G(TXT(I))
"RTN","LEX10PR",157,0)
 S TMP=$G(ARY(3))
"RTN","LEX10PR",158,0)
 I $L(TMP) D
"RTN","LEX10PR",159,0)
 . N TXT,I S TXT(1)=TMP D PR(.TXT,(79-C1)) Q:'$L($G(TXT(1)))
"RTN","LEX10PR",160,0)
 . W !!," Definition:",?C1,$G(TXT(1))
"RTN","LEX10PR",161,0)
 . S I=1 F  S I=$O(TXT(I)) Q:+I'>0  W !,?C1,$G(TXT(I))
"RTN","LEX10PR",162,0)
 S TMP=$G(ARY(4))
"RTN","LEX10PR",163,0)
 I $L(TMP) D
"RTN","LEX10PR",164,0)
 . N TXT,I S TXT(1)=TMP D PR(.TXT,(79-C1)) Q:'$L($G(TXT(1)))
"RTN","LEX10PR",165,0)
 . W !!," Explanation:",?C1,$G(TXT(1))
"RTN","LEX10PR",166,0)
 . S I=1 F  S I=$O(TXT(I)) Q:+I'>0  W !,?C1,$G(TXT(I))
"RTN","LEX10PR",167,0)
 N INI,INC S (INI,INC)=0  F  S INI=$O(ARY(5,INI)) Q:+INI'>0  D
"RTN","LEX10PR",168,0)
 . N INT S INT(1)=$G(ARY(5,INI)) D PR(.INT,(79-C1))
"RTN","LEX10PR",169,0)
 . S:$L($G(INT(1))) INC=INC+1
"RTN","LEX10PR",170,0)
 . W:INC=1 !!," Include(s):" W:INC>1 ! W ?C1,$G(INT(1))
"RTN","LEX10PR",171,0)
 . S I=1 F  S I=$O(INT(I)) Q:+I'>0  W !,?C1,$G(INT(I))
"RTN","LEX10PR",172,0)
 Q
"RTN","LEX10PR",173,0)
PR(LEX,X) ;   Parse Array
"RTN","LEX10PR",174,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,Z,LEXC,LEXI,LEXL
"RTN","LEX10PR",175,0)
 K ^UTILITY($J,"W") Q:'$D(LEX)  S LEXL=+($G(X)) S:+LEXL'>0 LEXL=79
"RTN","LEX10PR",176,0)
 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEX10PR",177,0)
 S DIWL=1,DIWF="C"_+LEXL S LEXI=0
"RTN","LEX10PR",178,0)
 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEX10PR",179,0)
 K LEX S (LEXC,LEXI)=0
"RTN","LEX10PR",180,0)
 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEX10PR",181,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEX10PR",182,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEX10PR",183,0)
 Q
"RTN","LEX10PR",184,0)
 ;
"RTN","LEX10PR",185,0)
 ; Miscellaneous
"RTN","LEX10PR",186,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10PR",187,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10PR",188,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10PR",189,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10PR",190,0)
 Q X
"RTN","LEX10TAX")
0^111^B83701759
"RTN","LEX10TAX",1,0)
LEX10TAX ;ISL/KER - Post ICD-10 Taxonomy Look-up ;04/21/2014
"RTN","LEX10TAX",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX10TAX",3,0)
 ;
"RTN","LEX10TAX",4,0)
 ; Global Variables
"RTN","LEX10TAX",5,0)
 ;    ^LEX(757.01         N/A
"RTN","LEX10TAX",6,0)
 ;    ^LEX(757.02         N/A
"RTN","LEX10TAX",7,0)
 ;    ^LEX(757.03         N/A
"RTN","LEX10TAX",8,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEX10TAX",9,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEX10TAX",10,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEX10TAX",11,0)
 ;    ^TMP(LEX10          SACC 2.3.2.5.1
"RTN","LEX10TAX",12,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10TAX",13,0)
 ;               
"RTN","LEX10TAX",14,0)
 ; External References
"RTN","LEX10TAX",15,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10TAX",16,0)
 ;    LOOK^LEXA           ICR   2950
"RTN","LEX10TAX",17,0)
 ;    CONFIG^LEXSET       ICR   1609
"RTN","LEX10TAX",18,0)
 ;    $$STATCHK^LEXSRC2   ICR   4083
"RTN","LEX10TAX",19,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10TAX",20,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX10TAX",21,0)
 ;               
"RTN","LEX10TAX",22,0)
 Q
"RTN","LEX10TAX",23,0)
TAX(X,LEXSRC,LEXDT,LEXSUB,LEXVER) ; Get Taxonomy Information
"RTN","LEX10TAX",24,0)
 ;
"RTN","LEX10TAX",25,0)
 ; Input: 
"RTN","LEX10TAX",26,0)
 ; 
"RTN","LEX10TAX",27,0)
 ;  X       Search String
"RTN","LEX10TAX",28,0)
 ;    
"RTN","LEX10TAX",29,0)
 ;  LEXSRC  String of Sources
"RTN","LEX10TAX",30,0)
 ;          Delimited by an "^" Up-Arrow
"RTN","LEX10TAX",31,0)
 ;                
"RTN","LEX10TAX",32,0)
 ;            Using source abbreviations
"RTN","LEX10TAX",33,0)
 ;            "ICD^ICP^10D^10P"
"RTN","LEX10TAX",34,0)
 ;                 
"RTN","LEX10TAX",35,0)
 ;            Using source pointers to file 757.03
"RTN","LEX10TAX",36,0)
 ;            "1^2^30^31"
"RTN","LEX10TAX",37,0)
 ;                 
"RTN","LEX10TAX",38,0)
 ;            Using Nomenclature
"RTN","LEX10TAX",39,0)
 ;            "ICD-9-CM^ICD-9 Proc^ICD-10-CM^ICD-10 Proc
"RTN","LEX10TAX",40,0)
 ;                 
"RTN","LEX10TAX",41,0)
 ;  LEXDT   Date to use to evaluate status
"RTN","LEX10TAX",42,0)
 ;    
"RTN","LEX10TAX",43,0)
 ;  LEXSUB  Name of a subscript to use in the ^TMP 
"RTN","LEX10TAX",44,0)
 ;          global (optional)
"RTN","LEX10TAX",45,0)
 ;            
"RTN","LEX10TAX",46,0)
 ;          ^TMP(LEXSUB,$J,
"RTN","LEX10TAX",47,0)
 ;          ^TMP("LEXTAX",$J,    Default
"RTN","LEX10TAX",48,0)
 ;    
"RTN","LEX10TAX",49,0)
 ;  LEXVER  Versioning Flag (optional, default = 0)
"RTN","LEX10TAX",50,0)
 ;     
"RTN","LEX10TAX",51,0)
 ;          0  Return active and inactive codes
"RTN","LEX10TAX",52,0)
 ;          1  Version, return active codes only
"RTN","LEX10TAX",53,0)
 ;     
"RTN","LEX10TAX",54,0)
 ; Output: 
"RTN","LEX10TAX",55,0)
 ; 
"RTN","LEX10TAX",56,0)
 ;  $$TAX   The number of codes found or -1 ^ error message
"RTN","LEX10TAX",57,0)
 ;    
"RTN","LEX10TAX",58,0)
 ;  ^TMP(LEXSUB,$J,SRC,(CODE_" "),#)
"RTN","LEX10TAX",59,0)
 ;    
"RTN","LEX10TAX",60,0)
 ;          5 piece "^" delimited string
"RTN","LEX10TAX",61,0)
 ;                             
"RTN","LEX10TAX",62,0)
 ;          1   Activation Date (can be a future date)
"RTN","LEX10TAX",63,0)
 ;          2   Inactivation Date (can be a future date)
"RTN","LEX10TAX",64,0)
 ;          3   Lexicon IEN to Expression File 757.01
"RTN","LEX10TAX",65,0)
 ;          4   Variable Pointer to a National file
"RTN","LEX10TAX",66,0)
 ;          5   Short Name from a National file
"RTN","LEX10TAX",67,0)
 ; 
"RTN","LEX10TAX",68,0)
 ;  ^TMP(LEXSUB,$J,SRC,(CODE_" "),#,0)
"RTN","LEX10TAX",69,0)
 ;    
"RTN","LEX10TAX",70,0)
 ;          2 piece "^" delimited string
"RTN","LEX10TAX",71,0)
 ;                             
"RTN","LEX10TAX",72,0)
 ;          1   Code (no spaces)
"RTN","LEX10TAX",73,0)
 ;          2   Lexicon Expression
"RTN","LEX10TAX",74,0)
 ;              
"RTN","LEX10TAX",75,0)
 ;   Subscript SRC is a pointer to the CODING SYSTEM FILE 757.03
"RTN","LEX10TAX",76,0)
 ;                             
"RTN","LEX10TAX",77,0)
 N LEX,LEXX,LEXIS,LEXVDT,LEX10SUB S LEXX=$$UP^XLFSTR($G(X)) Q:$L(LEXX)'>1 "-1^Search Text Missing"
"RTN","LEX10TAX",78,0)
 S LEXVDT="" S:$P($G(LEXDT),".",1)'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10TAX",79,0)
 S:$P($G(LEXDT),".",1)?7N LEXVDT=$P($G(LEXDT),".",1)
"RTN","LEX10TAX",80,0)
 S LEXSRC=$$SRC($G(LEXSRC))
"RTN","LEX10TAX",81,0)
 S LEX10SUB=$G(LEXSUB) S:'$L(LEX10SUB) LEX10SUB="LEXTAX"
"RTN","LEX10TAX",82,0)
 S LEXIS=$$IS(LEXX),LEXVER=+($G(LEXVER)) D:LEXIS LBC D:'LEXIS LBT
"RTN","LEX10TAX",83,0)
 S X=+($G(^TMP(LEX10SUB,$J,0))) S:X'>0 X="-1^No Entries Found"
"RTN","LEX10TAX",84,0)
 Q X
"RTN","LEX10TAX",85,0)
LBC ; Lookup by Code
"RTN","LEX10TAX",86,0)
 N LEXCTL,LEXORD S LEXCTL=LEXX,LEXORD=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~ "
"RTN","LEX10TAX",87,0)
 F  S LEXORD=$O(^LEX(757.02,"CODE",LEXORD)) Q:'$L(LEXORD)!($E(LEXORD,1,$L(LEXCTL))'=LEXCTL)  D
"RTN","LEX10TAX",88,0)
 . N LEXSIEN S LEXSIEN=0
"RTN","LEX10TAX",89,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"CODE",LEXORD,LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEX10TAX",90,0)
 . . N LEXND,LEXIEN,LEXCD,LEXPF,LEXTY,LEXSR S LEXND=$G(^LEX(757.02,+LEXSIEN,0)),LEXIEN=+LEXND
"RTN","LEX10TAX",91,0)
 . . S LEXCD=$P(LEXND,"^",2),LEXPF=$P(LEXND,"^",5),LEXSR=$P(LEXND,"^",3)
"RTN","LEX10TAX",92,0)
 . . Q:("^"_LEXSRC_"^")'[("^"_LEXSR_"^")
"RTN","LEX10TAX",93,0)
 . . S LEXTY=$P($G(^LEX(757.01,+LEXIEN,1)),"^",2)
"RTN","LEX10TAX",94,0)
 . . Q:LEXTY'=1  Q:LEXPF'>0  Q:$E(LEXCD,1,$L(LEXCTL))'=LEXCTL  D ES(LEXIEN,$G(LEXVDT))
"RTN","LEX10TAX",95,0)
 D REO D:+($G(^TMP(LEX10SUB,$J,0)))'>0 LBT
"RTN","LEX10TAX",96,0)
 Q
"RTN","LEX10TAX",97,0)
LBT ; Looup by Text
"RTN","LEX10TAX",98,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J),LEX
"RTN","LEX10TAX",99,0)
 N LEXTMP,LEXFQ,LEXIEN,DIC,LEXSAB S DIC="^LEX(757.01,",LEXTMP=$G(LEXVDT)
"RTN","LEX10TAX",100,0)
 D CONFIG^LEXSET("LEX","WRD")
"RTN","LEX10TAX",101,0)
 S ^TMP("LEXSCH",$J,"ADF",0)=1 S ^TMP("LEXSCH",$J,"FIL",0)="I 1"
"RTN","LEX10TAX",102,0)
 S ^TMP("LEXSCH",$J,"FIL",1)="ALL" S ^TMP("LEXSCH",$J,"LEN",0)=1
"RTN","LEX10TAX",103,0)
 K LEXVDT D LOOK^LEXA(LEXX,"LEX",1,"WRD") S:LEXTMP?7N LEXVDT=LEXTMP
"RTN","LEX10TAX",104,0)
 S LEXIEN=+$G(LEX("LIST",1)) D:LEXIEN>0 ES(LEXIEN,$G(LEXTMP))
"RTN","LEX10TAX",105,0)
 S LEXFQ="" F  S LEXFQ=$O(^TMP("LEXFND",$J,LEXFQ)) Q:'$L(LEXFQ)  D
"RTN","LEX10TAX",106,0)
 . S LEXIEN=0 F  S LEXIEN=$O(^TMP("LEXFND",$J,LEXFQ,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEX10TAX",107,0)
 . . K LEXCTL D ES(LEXIEN)
"RTN","LEX10TAX",108,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J),LEX D REO
"RTN","LEX10TAX",109,0)
 Q
"RTN","LEX10TAX",110,0)
ES(X,Y) ; Expression to Code
"RTN","LEX10TAX",111,0)
 N LEXIEN,LEXSIEN,LEXDT S LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXDT=$P($G(Y),".",1) S:LEXDT'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10TAX",112,0)
 S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"B",LEXIEN,LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEX10TAX",113,0)
 . N LEXND,LEXV,LEXEF,LEXHI,LEXST,LEXCO,LEXSR,LEXSB,LEXNM,X,LEX,LEXCT,LEXCD,LEXFIL
"RTN","LEX10TAX",114,0)
 . S LEXV=1,LEXND=$G(^LEX(757.02,+LEXSIEN,0)),LEXCD=$P(LEXND,"^",2),LEXSR=$P(LEXND,"^",3)
"RTN","LEX10TAX",115,0)
 . Q:("^"_LEXSRC_"^")'[("^"_LEXSR_"^")
"RTN","LEX10TAX",116,0)
 . I 0 I LEXSR=56 S LEXFIL=$$SCT(LEXIEN,LEXDT) Q:LEXFIL'>0
"RTN","LEX10TAX",117,0)
 . Q:'$L(LEXCD)  Q:+LEXSR'>0  Q:'$D(^LEX(757.03,+LEXSR,0))
"RTN","LEX10TAX",118,0)
 . I +($G(LEXVER))>0,$G(LEXVDT)?7N D  Q:LEXV'>0
"RTN","LEX10TAX",119,0)
 . . N LEXST S LEXST=$$STATCHK^LEXSRC2(LEXCD,LEXVDT,,LEXSR) S:+LEXST'>0 LEXV=0
"RTN","LEX10TAX",120,0)
 . Q:$D(^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" ")))  S X=$$PERIOD^LEXU(LEXCD,+LEXSR,.LEX)
"RTN","LEX10TAX",121,0)
 . S LEXCT=0,LEXEF=0 F  S LEXEF=$O(LEX(LEXEF)) Q:+LEXEF'>0  D
"RTN","LEX10TAX",122,0)
 . . Q:LEXEF'?7N  N LEXND,LEXDD S LEXND=$G(LEX(LEXEF)),LEXDD=$G(LEX(LEXEF,0))
"RTN","LEX10TAX",123,0)
 . . Q:$P(LEXND,"^",2)'>0  Q:'$L(LEXDD)  S LEXCT=LEXCT+1
"RTN","LEX10TAX",124,0)
 . . I '$D(^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "))) D
"RTN","LEX10TAX",125,0)
 . . . S ^TMP(LEX10SUB,$J,0)=$G(^TMP(LEX10SUB,$J,0))+1
"RTN","LEX10TAX",126,0)
 . . S ^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "),LEXCT)=LEXEF_"^"_LEXND
"RTN","LEX10TAX",127,0)
 . . S ^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "),LEXCT,0)=LEXCD_"^"_LEXDD
"RTN","LEX10TAX",128,0)
 Q
"RTN","LEX10TAX",129,0)
REO ; Reorder Array
"RTN","LEX10TAX",130,0)
 N LEXKEY S LEXKEY="" F  S LEXKEY=$O(^TMP(LEX10SUB,$J,"IN",LEXKEY)) Q:'$L(LEXKEY)  D
"RTN","LEX10TAX",131,0)
 . N LEXCD S LEXCD="" F  S LEXCD=$O(^TMP(LEX10SUB,$J,"IN",LEXKEY,LEXCD)) Q:'$L(LEXCD)  D
"RTN","LEX10TAX",132,0)
 . . N LEXND,LEXSB,LEXI S LEXND=$G(^TMP(LEX10SUB,$J,"IN",LEXKEY,LEXCD))
"RTN","LEX10TAX",133,0)
 . . S LEXSB=$P(LEXND,"^",7) Q:'$L(LEXSB)  S LEXSR=$P(LEXND,"^",6) Q:+LEXSR'>0
"RTN","LEX10TAX",134,0)
 . . S LEXI=$O(^TMP(LEX10SUB,$J,LEXSR," "),-1)+1 S ^TMP(LEX10SUB,$J,LEXSR,LEXI)=LEXND
"RTN","LEX10TAX",135,0)
 K ^TMP(LEX10SUB,$J,"IN")
"RTN","LEX10TAX",136,0)
 Q
"RTN","LEX10TAX",137,0)
IS(X) ; Is a Code
"RTN","LEX10TAX",138,0)
 S X=$G(X) Q:'$L(X) 0
"RTN","LEX10TAX",139,0)
 Q:$D(^LEX(757.02,"CODE",(X_" "))) 1
"RTN","LEX10TAX",140,0)
 Q:$O(^LEX(757.02,"CODE",(X_" ")))[X 1
"RTN","LEX10TAX",141,0)
 Q 0
"RTN","LEX10TAX",142,0)
SRC(X) ; Re-Create Source String
"RTN","LEX10TAX",143,0)
 N LEXX,LEXN,LEXI S LEXN="" S LEXX=$G(X) Q:'$L(LEXX) "ALL"
"RTN","LEX10TAX",144,0)
 F LEXI=1:1 Q:'$L($P(LEXX,"^",LEXI))  D
"RTN","LEX10TAX",145,0)
 . N LEXSB,LEXSR S LEXSB=$P(LEXX,"^",LEXI)
"RTN","LEX10TAX",146,0)
 . S LEXSR=$$CS(LEXSB) S:+LEXSR>0 LEXN=LEXN_"^"_+LEXSR
"RTN","LEX10TAX",147,0)
 S X=$$TM(LEXN,"^")
"RTN","LEX10TAX",148,0)
 Q X
"RTN","LEX10TAX",149,0)
CS(X) ; Coding System
"RTN","LEX10TAX",150,0)
 N LEXIN S LEXIN=$G(X) Q:'$L(LEXIN) ""
"RTN","LEX10TAX",151,0)
 Q:LEXIN?1N.N&($D(^LEX(757.03,+LEXIN,0))) +LEXIN
"RTN","LEX10TAX",152,0)
 Q:$D(^LEX(757.03,"ASAB",LEXIN))&($O(^LEX(757.03,"ASAB",LEXIN,0))>0) $O(^LEX(757.03,"ASAB",LEXIN,0))
"RTN","LEX10TAX",153,0)
 Q:$D(^LEX(757.03,"B",LEXIN))&($O(^LEX(757.03,"B",LEXIN,0))>0) $O(^LEX(757.03,"B",LEXIN,0))
"RTN","LEX10TAX",154,0)
 Q:$D(^LEX(757.03,"C",LEXIN))&($O(^LEX(757.03,"C",LEXIN,0))>0) $O(^LEX(757.03,"C",LEXIN,0))
"RTN","LEX10TAX",155,0)
 Q ""
"RTN","LEX10TAX",156,0)
 ; 
"RTN","LEX10TAX",157,0)
 ; Miscellaneous
"RTN","LEX10TAX",158,0)
SCT(LEX,LEXVDT) ;   Filter by SNOMED CT (SCT) (Human only)
"RTN","LEX10TAX",159,0)
 ; 
"RTN","LEX10TAX",160,0)
 ; Input
"RTN","LEX10TAX",161,0)
 ; 
"RTN","LEX10TAX",162,0)
 ;    LEX      IEN of file 757.01
"RTN","LEX10TAX",163,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEX10TAX",164,0)
 ;
"RTN","LEX10TAX",165,0)
 ; Output
"RTN","LEX10TAX",166,0)
 ;
"RTN","LEX10TAX",167,0)
 ;    $$SCT    Human SNOMED Code or Null
"RTN","LEX10TAX",168,0)
 ;             Excludes Veterinary SNOMED codes
"RTN","LEX10TAX",169,0)
 ;
"RTN","LEX10TAX",170,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO,LEXPL,LEXVT S LEXEX=+($G(LEX)),LEXD=$G(LEXVDT) Q:LEXEX'>0 0
"RTN","LEX10TAX",171,0)
 S LEXC=$S(LEXD?7N:$$ONE^LEXU(+LEXEX,LEXD,"SCT"),1:$$ONE^LEXU(+LEXEX,,"SCT"))
"RTN","LEX10TAX",172,0)
 Q:'$L(LEXC) 0  S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 0  Q:'$D(^LEX(757.1,"B",LEXMC)) 0
"RTN","LEX10TAX",173,0)
 S LEXVT=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D  Q:LEXVT>0
"RTN","LEX10TAX",174,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3),LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2)) S:LEXN["VETERINARY" LEXVT=1
"RTN","LEX10TAX",175,0)
 S LEXPL=0,LEXI=0 F  S LEXI=$O(^LEX(757.21,"B",LEXEX,LEXI)) Q:+LEXI'>0  D  Q:LEXPL>0
"RTN","LEX10TAX",176,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.21,LEXI,0)),"^",2),LEXN=$P($G(^LEXT(757.2,+LEXT,0)),"^",2) S:LEXN="PLS" LEXPL=1
"RTN","LEX10TAX",177,0)
 S LEXO=1 S:LEXVT=1 LEXO=0 S:LEXPL'>0 LEXO=0
"RTN","LEX10TAX",178,0)
 S X=LEXO
"RTN","LEX10TAX",179,0)
 Q X
"RTN","LEX10TAX",180,0)
SHO ;   Show ^TMP global
"RTN","LEX10TAX",181,0)
 N LEXNN,LEXNC,LEXS S LEXS=$G(LEXSUB) S:'$L(LEXS) LEXS="LEXTAX"
"RTN","LEX10TAX",182,0)
 S LEXNN="^TMP("""_LEXS_""","_$J_")",LEXNC="^TMP("""_LEXS_""","_$J_","
"RTN","LEX10TAX",183,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10TAX",184,0)
 . N LEXND S LEXND=@LEXNN W !,LEXNN,"=",LEXND
"RTN","LEX10TAX",185,0)
 Q
"RTN","LEX10TAX",186,0)
EXP ;   Show ^TMP global (expanded display)
"RTN","LEX10TAX",187,0)
 N LEXN1,LEXN2,LEXN3,LEXNN,LEXNC,LEXS,LEXTD S LEXS=$G(LEXSUB) S:'$L(LEXS) LEXS="LEXTAX"
"RTN","LEX10TAX",188,0)
 S LEXTD=$$DT^XLFDT,LEXN1=0 F  S LEXN1=$O(^TMP(LEXS,$J,LEXN1)) Q:+LEXN1'>0  D
"RTN","LEX10TAX",189,0)
 . N LEXSNM Q:'$D(^LEX(757.03,LEXN1,0))
"RTN","LEX10TAX",190,0)
 . S LEXSNM=$P($G(^LEX(757.03,LEXN1,0)),"^",2) Q:'$L(LEXSNM)
"RTN","LEX10TAX",191,0)
 . S LEXN2="" F  S LEXN2=$O(^TMP(LEXS,$J,LEXN1,LEXN2)) Q:'$L(LEXN2)  D
"RTN","LEX10TAX",192,0)
 . . W !,?3,LEXSNM," Code:  ",LEXN2
"RTN","LEX10TAX",193,0)
 . . S LEXN3=0 F  S LEXN3=$O(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3)) Q:+LEXN3'>0  D
"RTN","LEX10TAX",194,0)
 . . . N LEXN,LEX0,LEXAC,LEXIN,LEXIE,LEXVP,LEXSN,LEXCD,LEXNM,LEXA,LEXI
"RTN","LEX10TAX",195,0)
 . . . S LEXN=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3))
"RTN","LEX10TAX",196,0)
 . . . S LEX0=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3,0))
"RTN","LEX10TAX",197,0)
 . . . S LEXAC=$P(LEXN,"^",1),LEXIN=$P(LEXN,"^",2)
"RTN","LEX10TAX",198,0)
 . . . S LEXIE=$P(LEXN,"^",3),LEXVP=$P(LEXN,"^",4)
"RTN","LEX10TAX",199,0)
 . . . S LEXSN=$P(LEXN,"^",5)
"RTN","LEX10TAX",200,0)
 . . . W !,?5,"Active:  ",$$ED(LEXAC) W:LEXAC>LEXTD " (Pending)"
"RTN","LEX10TAX",201,0)
 . . . W ?36,"Inactive:  ",$$ED(LEXIN) W:LEXIN>LEXTD " (Pending)"
"RTN","LEX10TAX",202,0)
 . . . S LEX0=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3,0))
"RTN","LEX10TAX",203,0)
 . . . S LEXCD=$P(LEX0,"^",1)
"RTN","LEX10TAX",204,0)
 . . . S LEXNM=$P(LEX0,"^",2) S LEXA(1)=LEXNM D PR(.LEXA,(79-36))
"RTN","LEX10TAX",205,0)
 . . . W !,?5,"   IEN:  ",LEXIE W:$L($G(LEXA(1))) ?36,$G(LEXA(1))
"RTN","LEX10TAX",206,0)
 . . . S LEXI=1 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI'>0  W:$L($G(LEXA(LEXI))) !,?36,$G(LEXA(LEXI))
"RTN","LEX10TAX",207,0)
 Q
"RTN","LEX10TAX",208,0)
ED(X) ;   Exernal Date
"RTN","LEX10TAX",209,0)
 S X=$G(X) Q:X'?7N "--/--/----"
"RTN","LEX10TAX",210,0)
 S X=$$FMTE^XLFDT(X,"5Z")
"RTN","LEX10TAX",211,0)
 Q X
"RTN","LEX10TAX",212,0)
VET(X) ; Veterinary Term - 1 = Yes
"RTN","LEX10TAX",213,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO S LEXEX=+($G(X)) Q:LEXEX'>0 -1
"RTN","LEX10TAX",214,0)
 S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 -1  Q:'$D(^LEX(757.1,"B",LEXMC)) -3
"RTN","LEX10TAX",215,0)
 S LEXO=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D
"RTN","LEX10TAX",216,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3)
"RTN","LEX10TAX",217,0)
 . S LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2))
"RTN","LEX10TAX",218,0)
 . S:LEXN["VETERINARY" LEXO=1
"RTN","LEX10TAX",219,0)
 S X=LEXO
"RTN","LEX10TAX",220,0)
 Q X
"RTN","LEX10TAX",221,0)
PR(LEX,X) ;   Parse Array
"RTN","LEX10TAX",222,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEX10TAX",223,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEX10TAX",224,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEX10TAX",225,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEX10TAX",226,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEX10TAX",227,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEX10TAX",228,0)
 Q
"RTN","LEX10TAX",229,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10TAX",230,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10TAX",231,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10TAX",232,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10TAX",233,0)
 Q X
"RTN","LEX2080")
0^10^B184435059
"RTN","LEX2080",1,0)
LEX2080 ;ISL/KER - LEX*2.0*80 Env Check ;04/21/2014
"RTN","LEX2080",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX2080",3,0)
 ;               
"RTN","LEX2080",4,0)
 ; Global Variables
"RTN","LEX2080",5,0)
 ;    ^%ZOSF("UCI"        ICR 10096
"RTN","LEX2080",6,0)
 ;    ^%ZOSF("UCICHECK"   ICR 10096
"RTN","LEX2080",7,0)
 ;    ^LEXM(              N/A
"RTN","LEX2080",8,0)
 ;    ^TMP("LEXKID")      SACC 2.3.2.5.1
"RTN","LEX2080",9,0)
 ;    ^TMP("LEXMSG")      SACC 2.3.2.5.1
"RTN","LEX2080",10,0)
 ;               
"RTN","LEX2080",11,0)
 ; External References
"RTN","LEX2080",12,0)
 ;    ^DIC                ICR  10006
"RTN","LEX2080",13,0)
 ;    FIND^DIC            ICR   2051
"RTN","LEX2080",14,0)
 ;    $$IENS^DILF         ICR   2054
"RTN","LEX2080",15,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX2080",16,0)
 ;    EN^DIQ1             ICR  10015
"RTN","LEX2080",17,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX2080",18,0)
 ;    ^XMD                ICR  10070
"RTN","LEX2080",19,0)
 ;    $$NETNAME^XMXUTIL   ICR   2734
"RTN","LEX2080",20,0)
 ;    $$PATCH^XPDUTL      ICR  10141
"RTN","LEX2080",21,0)
 ;    $$PKG^XPDUTL        ICR  10141
"RTN","LEX2080",22,0)
 ;    $$VERSION^XPDUTL    ICR  10141
"RTN","LEX2080",23,0)
 ;    $$VER^XPDUTL        ICR  10141
"RTN","LEX2080",24,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEX2080",25,0)
 ;    MES^XPDUTL          ICR  10141 
"RTN","LEX2080",26,0)
 ;        
"RTN","LEX2080",27,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEX2080",28,0)
 ;     XPDABORT,XPDDIQ,XPDENV,XPDQUIT
"RTN","LEX2080",29,0)
 ;               
"RTN","LEX2080",30,0)
ENV ; LEX*2.0*80 Environment Check
"RTN","LEX2080",31,0)
 ;   Checks
"RTN","LEX2080",32,0)
 S XPDNOQUE=1 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXG,LEXE,LEXSTR D IMP
"RTN","LEX2080",33,0)
 K XPDDIQ("XPZ1","B"),XPDDIQ("XPI1","B") S XPDDIQ("XPZ1","B")="NO",XPDDIQ("XPI1","B")="NO"
"RTN","LEX2080",34,0)
 S U="^"
"RTN","LEX2080",35,0)
 ;     User Variables
"RTN","LEX2080",36,0)
 D:+($$UR)'>0 ET("User not defined (DUZ)")
"RTN","LEX2080",37,0)
 ;     System Variables
"RTN","LEX2080",38,0)
 D:+($$SY)'>0 ET("Undefined IO variable(s)")
"RTN","LEX2080",39,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2080",40,0)
 ;     Version Number
"RTN","LEX2080",41,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2080",42,0)
 . D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2080",43,0)
 ;     Required Patches
"RTN","LEX2080",44,0)
 D:$O(LEXREQP(0))'>0 IMP I $O(LEXREQP(0))>0 D
"RTN","LEX2080",45,0)
 . W ! N LEXPAT,LEXI,LEXPN,LEXP,LEXR,LEXC,LEXO,LEXC1,LEXC2,LEXC3,LEXC4,LEX
"RTN","LEX2080",46,0)
 . S (LEXR,LEXC)=0 S LEXC1=3,(LEXC2,LEXC3,LEXC4)=20,LEXC2=18
"RTN","LEX2080",47,0)
 . S LEXI=0  F  S LEXI=$O(LEXREQP(LEXI)) Q:+LEXI'>0  D
"RTN","LEX2080",48,0)
 . . S LEXC=LEXC+1,LEXPAT=$G(LEXREQP(LEXI))
"RTN","LEX2080",49,0)
 . . S:$P(LEXPAT,"^",2)?7N LEXR=LEXR+1,LEXC3=LEXC2+13,LEXC4=LEXC2+36
"RTN","LEX2080",50,0)
 . S LEXI=0  F  S LEXI=$O(LEXREQP(LEXI)) Q:+LEXI'>0  D
"RTN","LEX2080",51,0)
 . . N LEXPAT,LEXREL,LEXINS,LEXCOM,LEXINE,LEXREQ,LEXTX S LEXREQ=$G(LEXREQP(LEXI))
"RTN","LEX2080",52,0)
 . . S LEXPAT=$P(LEXREQ,"^",1),LEXREL=$P(LEXREQ,"^",2),LEXCOM=$P(LEXREQ,"^",3)
"RTN","LEX2080",53,0)
 . . S LEXPN=$$INS(LEXPAT) S LEXINS=$$INSD(LEXPAT),LEXINE=$P(LEXINS,"^",2)
"RTN","LEX2080",54,0)
 . . W:LEXI=1 !,?3,"Checking for ",?LEXC2,$S(+($G(LEXR))>0:"Released",1:"")
"RTN","LEX2080",55,0)
 . . S LEXTX=$J(" ",LEXC1)_LEXPAT
"RTN","LEX2080",56,0)
 . . S:LEXREL?7N LEXTX=LEXTX_$J(" ",(LEXC2-$L(LEXTX)))_$TR($$FMTE^XLFDT(LEXREL,"5DZ"),"@"," ")
"RTN","LEX2080",57,0)
 . . I +LEXPN>0 D
"RTN","LEX2080",58,0)
 . . . S LEXO=+($G(LEXO))+1 S LEXTX=LEXTX_$J(" ",(LEXC3-$L(LEXTX)))_"Installed "
"RTN","LEX2080",59,0)
 . . . S:$L($G(LEXINE)) LEXTX=LEXTX_LEXINE
"RTN","LEX2080",60,0)
 . . . S:+LEXC4>0&(+LEXC4>LEXC3)&($L(LEXCOM)) LEXTX=LEXTX_$J(" ",(LEXC4-$L(LEXTX)))_LEXCOM
"RTN","LEX2080",61,0)
 . . D M(LEXTX)
"RTN","LEX2080",62,0)
 . . I +LEXPN'>0 D ET((" "_LEXPAT_" not found, please install "_LEXPAT_" before continuing"))
"RTN","LEX2080",63,0)
 . W:+($G(LEXO))'=LEXC !
"RTN","LEX2080",64,0)
 I $D(LEXE) D M(),ABRT Q
"RTN","LEX2080",65,0)
 D IG I $D(LEXE) D M(),ABRT Q
"RTN","LEX2080",66,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2080",67,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2080",68,0)
 S LEXG=$$RGBL
"RTN","LEX2080",69,0)
 I $D(LEXE)&(+LEXG=0) D ABRT Q
"RTN","LEX2080",70,0)
 I $D(LEXE)&(+LEXG<0) D ABRT Q
"RTN","LEX2080",71,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2080",72,0)
 ;                    
"RTN","LEX2080",73,0)
 ;   Install Package(s)
"RTN","LEX2080",74,0)
 ;
"RTN","LEX2080",75,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","LEX2080",76,0)
 ;
"RTN","LEX2080",77,0)
 ;       Check Data "is installed" or "is translated"
"RTN","LEX2080",78,0)
 N LEXIT S LEXIT=0 I '$D(LEXFULL)&(LEXIT) D QUIT Q
"RTN","LEX2080",79,0)
 ;       Checking Global "Write" Protection 
"RTN","LEX2080",80,0)
 D:+($G(XPDENV))=1 GBLS I $D(LEXE) D ABRT Q
"RTN","LEX2080",81,0)
 ;       Check Import Global Checksum 
"RTN","LEX2080",82,0)
 D:+($G(XPDENV))=1 CS I $D(LEXE) D ABRT Q
"RTN","LEX2080",83,0)
 ;   Quit, Exit or Abort
"RTN","LEX2080",84,0)
QUIT ;     Quit   Passed Environment Check
"RTN","LEX2080",85,0)
 K LEXFULL D OK
"RTN","LEX2080",86,0)
 Q
"RTN","LEX2080",87,0)
EXIT ;     Exit   Failed Environment Check
"RTN","LEX2080",88,0)
 D:$D(LEXE) ED S XPDQUIT=2 K LEXE,LEXFULL Q
"RTN","LEX2080",89,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","LEX2080",90,0)
 D:$D(LEXE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*80")=1,XPDQUIT("ICD*18.0*57")=1
"RTN","LEX2080",91,0)
 K LEXE,LEXFULL
"RTN","LEX2080",92,0)
 Q
"RTN","LEX2080",93,0)
ENV2 ;   Environment Check #2 - XPDENV=1
"RTN","LEX2080",94,0)
 N XPDENV S XPDENV=1 D ENV
"RTN","LEX2080",95,0)
 Q
"RTN","LEX2080",96,0)
GBLS ;   Check Write access on globals
"RTN","LEX2080",97,0)
 N LEXB1,LEXB2,LEXE,LEXGBL,LEXRT,LEXT,LEXF,LEXI,LEXX,LEXOK,LEXS,X S LEXOK=1
"RTN","LEX2080",98,0)
 D BM("   I will now check the protection on ^LEX, ^ICD9 and ^ICD0 Globals.")
"RTN","LEX2080",99,0)
 D M("   If you get an ERROR, you will need to change the protection on ")
"RTN","LEX2080",100,0)
 D M("   these globals to allow read/write as indicated:")
"RTN","LEX2080",101,0)
 D BM("                        Owner     Group    World   Network")
"RTN","LEX2080",102,0)
 D M("      Cache systems      RWD       RW       RW      RWD")
"RTN","LEX2080",103,0)
 D BM("   Checking:"),M(" ")
"RTN","LEX2080",104,0)
 S LEXS="",X=1 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2080",105,0)
 . S LEXX="" S LEXE="S LEXX=$T(GD+"_LEXI_")" X LEXE S LEXX=$$TRIM(LEXX) Q:'$L(LEXX)  Q:'$L($TR(LEXX,";",""))
"RTN","LEX2080",106,0)
 . S LEXGBL=$P(LEXX,";",3) Q:LEXGBL["^LEXM"  S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2080",107,0)
 . S (LEXB1,LEXB2)="",$P(LEXB1," ",(19-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2080",108,0)
 . I '$D(@LEXGBL) D RGNF S LEXOK=0 D M(("      <"_LEXRT_" not found>")) Q
"RTN","LEX2080",109,0)
 . D M(("      "_LEXRT_LEXB1_LEXT_LEXB2_LEXF)) S @LEXGBL=$G(@LEXGBL) H 1
"RTN","LEX2080",110,0)
 D:LEXOK M("    --> ok") D:'LEXOK M("    ??") D M(" ")
"RTN","LEX2080",111,0)
 Q
"RTN","LEX2080",112,0)
RGBL(X) ;   Check Write access on globals
"RTN","LEX2080",113,0)
 N LEXS,LEXI,LEXX,LEXEC,LEXGBL,LEXRT,LEXT,LEXF,LEXB1,LEXB2
"RTN","LEX2080",114,0)
 S LEXS="",X=1 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2080",115,0)
 . S LEXX="" S LEXEC="S LEXX=$T(GD+"_LEXI_")" X LEXEC S LEXX=$$TRIM(LEXX) Q:'$L(LEXX)  Q:'$L($TR(LEXX,";",""))
"RTN","LEX2080",116,0)
 . S LEXGBL=$P(LEXX,";",3) Q:LEXGBL["^LEXM"  S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2080",117,0)
 . S (LEXB1,LEXB2)="",$P(LEXB1," ",(15-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2080",118,0)
 . I '$D(@LEXGBL) S:LEXS'[LEXRT LEXS=LEXS_", "_LEXRT S X=-1 S:LEXGBL["LEXM("&(X=1) X=0
"RTN","LEX2080",119,0)
 I $L(LEXS),X'>0 D
"RTN","LEX2080",120,0)
 . S:LEXS[", " LEXS=$P(LEXS,", ",1,($L(LEXS,", ")-1))_" and "_$P(LEXS,", ",$L(LEXS,", "))
"RTN","LEX2080",121,0)
 . S:$E(LEXS,1,2)=", " LEXS=$E(LEXS,3,$L(LEXS)) S:$E(LEXS,1,7)[" and " LEXS=$P(LEXS," and ",2)
"RTN","LEX2080",122,0)
 . D:X=-1 ET(("Global"_$S(LEXS[", "!(LEXS[" and "):"s",1:"")_" "_LEXS_" either not found or incomplete."))
"RTN","LEX2080",123,0)
 . D:X=0 CM
"RTN","LEX2080",124,0)
 Q X
"RTN","LEX2080",125,0)
RGNF ;   Required global not found
"RTN","LEX2080",126,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP Q:'$L(LEXBUILD)  Q:$D(^TMP("LEX*2.0*80",$J,"NODATA"))
"RTN","LEX2080",127,0)
 D:$G(LEXGBL)["^LEX"&($G(LEXGBL)'["^LEXM") ET(""),ET("Required global "_$P($G(LEXGBL),"(",1)_" not found.")
"RTN","LEX2080",128,0)
 D:$G(LEXGBL)["^LEX"&($G(LEXGBL)["^LEXM") CM
"RTN","LEX2080",129,0)
 Q
"RTN","LEX2080",130,0)
UOK(X) ; UCI Ok for Install
"RTN","LEX2080",131,0)
 N X,Y S X=$$NETNAME^XMXUTIL(.5) Q:X["LEXDEV1.FO-BAYPINES" 0
"RTN","LEX2080",132,0)
 X ^%ZOSF("UCI") Q:$G(Y)["LEXDEV1" 0  S X="LEXDEV1" X ^%ZOSF("UCICHECK")  Q:$G(X)=$G(Y) 0
"RTN","LEX2080",133,0)
 Q 1
"RTN","LEX2080",134,0)
GOK(X) ; Input Global Ok for Install
"RTN","LEX2080",135,0)
 D IMP Q:'$L(LEXBUILD) 0  Q:$D(^TMP("LEX*2.0*80",$J,"NODATA")) 1
"RTN","LEX2080",136,0)
 Q:'$D(^LEXM) 0  Q:'$D(^LEXM(80)) 0  Q:'$D(^LEXM(80.1)) 0  Q:'$D(^LEXM(80.4)) 0
"RTN","LEX2080",137,0)
 Q:$G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) 0
"RTN","LEX2080",138,0)
 Q 1
"RTN","LEX2080",139,0)
CS ;   Checksum for import global
"RTN","LEX2080",140,0)
 K LEXE D IMP Q:'$L(LEXBUILD)  Q:$D(^TMP("LEX*2.0*80",$J,"NODATA")) 
"RTN","LEX2080",141,0)
 D BM("   Running checksum routine on the ^LEXM import global, please wait")
"RTN","LEX2080",142,0)
 N LEXCK,LEXND,LEXV S LEXCK=+($G(^LEXM(0,"CHECKSUM")))
"RTN","LEX2080",143,0)
 S LEXND=+($G(^LEXM(0,"NODES"))),LEXV=+($$VC(LEXCK,LEXND))
"RTN","LEX2080",144,0)
 D M(" ") D:LEXV>0 M("     Checksum is ok"),M(" ")
"RTN","LEX2080",145,0)
 D:LEXV=0 CM D:LEXV=-1 CW D:LEXV=-2 CU D:LEXV=-3 CF
"RTN","LEX2080",146,0)
 Q
"RTN","LEX2080",147,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEX2080",148,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR
"RTN","LEX2080",149,0)
 D IMP Q:'$L(LEXBUILD) 0  Q:$D(^TMP("LEX*2.0*80",$J,"NODATA")) -4
"RTN","LEX2080",150,0)
 I $G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) Q -1
"RTN","LEX2080",151,0)
 N LEXCK,LEXND,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEX2080",152,0)
 S LEXCK=+($G(X)),LEXND=+($G(Y))
"RTN","LEX2080",153,0)
 Q:LEXCK'>0!(LEXND'>0) -2
"RTN","LEX2080",154,0)
 S LEXL=64,(LEXCNT,LEXLC)=0,LEXS=(+(LEXND\LEXL))
"RTN","LEX2080",155,0)
 S:LEXS=0 LEXS=1 D:+($O(^LEXM(0)))>0 M("")
"RTN","LEX2080",156,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0 W "   "
"RTN","LEX2080",157,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEX2080",158,0)
 . Q:LEXN="^LEXM(0,""CHECKSUM"")"
"RTN","LEX2080",159,0)
 . Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEX2080",160,0)
 . S LEXCNT=LEXCNT+1
"RTN","LEX2080",161,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEX2080",162,0)
 . S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD
"RTN","LEX2080",163,0)
 . F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEX2080",164,0)
 Q:LEXNC'=LEXND -3
"RTN","LEX2080",165,0)
 Q:LEXGCS'=LEXCK -3
"RTN","LEX2080",166,0)
 Q 1
"RTN","LEX2080",167,0)
SY(X) ;   Check System variables
"RTN","LEX2080",168,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2080",169,0)
 Q 1
"RTN","LEX2080",170,0)
UR(X) ;   Check User variables
"RTN","LEX2080",171,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","LEX2080",172,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2080",173,0)
 Q 1
"RTN","LEX2080",174,0)
 ; Error messages
"RTN","LEX2080",175,0)
 ;
"RTN","LEX2080",176,0)
CM ;   Missing ^LEXM
"RTN","LEX2080",177,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET(""),ET("Missing import global ^LEXM.") D CO
"RTN","LEX2080",178,0)
 Q
"RTN","LEX2080",179,0)
CW ;   Wrong ^LEXM
"RTN","LEX2080",180,0)
 N LEXB,LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP S LEXB=$G(^LEXM(0,"BUILD")) D ET("")
"RTN","LEX2080",181,0)
 I $L(LEXBUILD),$L(LEXB),LEXBUILD'=LEXB D  Q
"RTN","LEX2080",182,0)
 . D ET(("Incorrect import global ^LEXM found ("_LEXB_" global).")) D CKO
"RTN","LEX2080",183,0)
 D ET("Incorrect import global ^LEXM found.") D CKO
"RTN","LEX2080",184,0)
 Q
"RTN","LEX2080",185,0)
CU ;   Unable to verify
"RTN","LEX2080",186,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET(""),ET("Unable to verify checksum for import global ^LEXM (possibly corrupt).") D CKO
"RTN","LEX2080",187,0)
 Q
"RTN","LEX2080",188,0)
CF ;   Failed checksum
"RTN","LEX2080",189,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET("") D ET("Import global ^LEXM failed checksum.") D CKO
"RTN","LEX2080",190,0)
 Q
"RTN","LEX2080",191,0)
CO ;   Obtain new global
"RTN","LEX2080",192,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP
"RTN","LEX2080",193,0)
 D ET(""),ET("    Please obtain a copy of the import global ^LEXM contained in the ")
"RTN","LEX2080",194,0)
 D ET(("    global host file "_LEXIGHF_" before continuing with the "_LEXBUILD))
"RTN","LEX2080",195,0)
 D ET(("    installation."))
"RTN","LEX2080",196,0)
 Q
"RTN","LEX2080",197,0)
CKO ;   Kill and Obtain new global
"RTN","LEX2080",198,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET("")
"RTN","LEX2080",199,0)
 D ET(("    Use the entry point KALL^LEXXGI2 to safely KILL the existing "))
"RTN","LEX2080",200,0)
 D ET(("    import global ^LEXM from your system.  Then obtain a new copy"))
"RTN","LEX2080",201,0)
 D ET(("    of ^LEXM contained in the global host file "_LEXIGHF_" before"))
"RTN","LEX2080",202,0)
 D ET(("    continuing with the "_LEXBUILD_" installation."))
"RTN","LEX2080",203,0)
 Q
"RTN","LEX2080",204,0)
IG ; Import Global
"RTN","LEX2080",205,0)
 D IMP Q:'$L($G(LEXBUILD))  Q:$D(^TMP("LEX*2.0*80",$J,"NODATA"))  N CT S CT=0
"RTN","LEX2080",206,0)
 D:+($G(^LEXM(80,0)))'>0 IGT("ICD Diagnosis data") D:+($G(^LEXM(80.1,0)))'>0 IGT("ICD Procedure data")
"RTN","LEX2080",207,0)
 D:+($G(^LEXM(757,0)))'>0 IGT("Lexicon Major Concept data") D:+($G(^LEXM(757.001,0)))'>0 IGT("Lexicon Frequency data")
"RTN","LEX2080",208,0)
 D:+($G(^LEXM(757.01,0)))'>0 IGT("Lexicon Expressions data") D:+($G(^LEXM(757.02,0)))'>0 IGT("Lexicon Code data")
"RTN","LEX2080",209,0)
 D:+($G(^LEXM(757.03,0)))'>0 IGT("Lexicon Coding System data") D:+($G(^LEXM(757.033,0)))'>0 IGT("Lexicon Coding Character data")
"RTN","LEX2080",210,0)
 D:+($G(^LEXM(757.1,0)))'>0 IGT("Lexicon Semantic Map data") D:+($G(^LEXM(757.2,0)))'>0 IGT("Lexicon Subset Definition data")
"RTN","LEX2080",211,0)
 D:+($G(^LEXM(757.3,0)))'>0 IGT("Lexicon Screen data") D:+($G(^LEXM(757.31,0)))'>0 IGT("Lexicon Display data")
"RTN","LEX2080",212,0)
 I $D(LEXE) D
"RTN","LEX2080",213,0)
 . N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET("  ")
"RTN","LEX2080",214,0)
 . D ET(("Obtain a copy of the data import global ^LEXM contiained in"))
"RTN","LEX2080",215,0)
 . D ET(("the global host file "_LEXIGHF_" before continuing with"))
"RTN","LEX2080",216,0)
 . D ET(("the installation."))
"RTN","LEX2080",217,0)
 Q
"RTN","LEX2080",218,0)
IGT(X) ; Import Global Error Text
"RTN","LEX2080",219,0)
 N TXT S TXT=$G(X) Q:'$L(TXT)  S CT=+($G(CT))+1 D:CT=1 ET("Import Global ^LEXM Missing:"),ET("  ") D ET(("    "_TXT))
"RTN","LEX2080",220,0)
 Q
"RTN","LEX2080",221,0)
ET(X) ;   Error Text
"RTN","LEX2080",222,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2080",223,0)
 Q
"RTN","LEX2080",224,0)
ED ;   Error Display
"RTN","LEX2080",225,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2080",226,0)
 D M(" ") K LEXE Q
"RTN","LEX2080",227,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","LEX2080",228,0)
 N DA,DR,DIQ,LEX,DIC S DA=IEN,DR=.01,DIC=200,DIQ="LEX" D EN^DIQ1 Q '$D(LEX)
"RTN","LEX2080",229,0)
OK ;   Environment is OK
"RTN","LEX2080",230,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXT
"RTN","LEX2080",231,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2080",232,0)
 D BM(LEXT),M(" ")
"RTN","LEX2080",233,0)
 Q
"RTN","LEX2080",234,0)
MAIL ;   Mail global array in message
"RTN","LEX2080",235,0)
 N DIFROM,LEXPRI,LEXADR,LEXI,LEXM,LEXSUB,XCNP,XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ
"RTN","LEX2080",236,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP Q:'$L(LEXBUILD)
"RTN","LEX2080",237,0)
 H:$D(^TMP("LEX*2.0*80",$J,"NODATA")) 2 K ^TMP("LEXMSG",$J) S LEXSUB="Lexicon/ICD-10 Installation"
"RTN","LEX2080",238,0)
 S:$L($G(LEXBUILD)) LEXSUB=$G(LEXBUILD)_" Installation" S LEXPRI=$$ADR G:'$L(LEXPRI) MAILQ
"RTN","LEX2080",239,0)
 S LEXPRI="G.LEXINS@"_LEXPRI S LEXADR=$$GET1^DIQ(200,+($G(DUZ)),.01) G:'$L(LEXADR) MAILQ
"RTN","LEX2080",240,0)
 S XMSUB=LEXSUB S LEXI=0 F  S LEXI=$O(^TMP("LEXKID",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEX2080",241,0)
 . S LEXM=+($O(^TMP("LEXMSG",$J," "),-1))+1
"RTN","LEX2080",242,0)
 . S ^TMP("LEXMSG",$J,LEXM,0)=$E($G(^TMP("LEXKID",$J,LEXI)),1,79)
"RTN","LEX2080",243,0)
 . S ^TMP("LEXMSG",$J,0)=LEXM
"RTN","LEX2080",244,0)
 K ^TMP("LEXKID",$J) G:'$D(^TMP("LEXMSG",$J)) MAILQ
"RTN","LEX2080",245,0)
 G:+($G(^TMP("LEXMSG",$J,0)))'>0 MAILQ S XMY(LEXPRI)="",XMY(LEXADR)=""
"RTN","LEX2080",246,0)
 S XMTEXT="^TMP(""LEXMSG"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEX2080",247,0)
MAILQ ;   Quit Mail
"RTN","LEX2080",248,0)
 D KILL K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","LEX2080",249,0)
 Q
"RTN","LEX2080",250,0)
ADR(LEX) ;   Mailing Address
"RTN","LEX2080",251,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEX2080",252,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEX2080",253,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEX2080",254,0)
KILL ;   Kill all ^TMP(
"RTN","LEX2080",255,0)
 K ^TMP("LEXMSG",$J),^TMP("LEXKID",$J)
"RTN","LEX2080",256,0)
 Q
"RTN","LEX2080",257,0)
INS(X) ;
"RTN","LEX2080",258,0)
 N LEX,LEXP,LEXV,LEXI S LEX=$G(X) I $L(LEX,"*")=3 S X=$$PATCH^XPDUTL(LEX) Q X
"RTN","LEX2080",259,0)
 S LEXP=$$PKG^XPDUTL(LEX),LEXV=$$VER^XPDUTL(LEX),LEXI=$$VERSION^XPDUTL(LEXP)
"RTN","LEX2080",260,0)
 Q:+LEXV>0&(LEXV=LEXI) 1
"RTN","LEX2080",261,0)
 Q 0
"RTN","LEX2080",262,0)
INSD(X) ;   Installed on
"RTN","LEX2080",263,0)
 N DA,LEX,LEXDA,LEXE,LEXI,LEXMSG,LEXNS,LEXOUT,LEXPI,LEXPN,LEXSCR,LEXVI,LEXVD,LEXVI,LEXVR S LEX=$G(X)
"RTN","LEX2080",264,0)
 S LEXNS=$$PKG^XPDUTL(LEX),LEXVR=$$VER^XPDUTL(LEX),LEXPN=$P(X,"*",3)
"RTN","LEX2080",265,0)
 Q:'$L(LEXNS) ""  S LEXVR=+LEXVR Q:LEXVR'>0 ""  S LEXPN=+LEXPN S:LEXVR'["." LEXVR=LEXVR_".0"
"RTN","LEX2080",266,0)
 S LEXSCR="I $G(^DIC(9.4,+($G(Y)),""VERSION""))="""_LEXVR_""""
"RTN","LEX2080",267,0)
 D FIND^DIC(9.4,,.01,"O",LEXNS,10,"C",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2080",268,0)
 S LEXPI=$G(LEXOUT("DILIST",2,1)) K LEXOUT,LEXMSG Q:+LEXPI'>0 ""  Q:'$D(@("^DIC(9.4,"_LEXPI_",22)")) ""
"RTN","LEX2080",269,0)
 K DA S DA(1)=LEXPI S LEXDA=$$IENS^DILF(.DA)
"RTN","LEX2080",270,0)
 D FIND^DIC(9.49,LEXDA,".01;1I;2I","O",LEXVR,10,"B",,,"LEXOUT","LEXMSG")
"RTN","LEX2080",271,0)
 S LEXVD=$G(LEXOUT("DILIST","ID",1,2)) I $E(LEXVD,1,7)?7N&(+LEXPN'>0) D  Q X
"RTN","LEX2080",272,0)
 . S X=$E(LEXVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(LEXVD,1,7),"5DZ"),"@"," ")
"RTN","LEX2080",273,0)
 S:$E(LEXVD,1,7)'?7N LEXVD=$G(LEXOUT("DILIST","ID",1,1)) I $E(LEXVD,1,7)?7N&(+LEXPN'>0) D  Q X
"RTN","LEX2080",274,0)
 . S X=$E(LEXVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(LEXVD,1,7),"5DZ"),"@"," ")
"RTN","LEX2080",275,0)
 Q:+LEXPN'>0 ""  S LEXVI=$G(LEXOUT("DILIST",2,1)) K LEXOUT,LEXMSG
"RTN","LEX2080",276,0)
 Q:+LEXVI'>0 ""  Q:'$D(@("^DIC(9.4,"_LEXPI_",22,"_LEXVI_",""PAH"")")) ""
"RTN","LEX2080",277,0)
 K DA S DA(2)=LEXPI,DA(1)=LEXVI S LEXDA=$$IENS^DILF(.DA)
"RTN","LEX2080",278,0)
 S LEXSCR="I $G(^DIC(9.4,"_LEXPI_",22,"_LEXVI_",""PAH"",+($G(Y)),0))[""SEQ #"""
"RTN","LEX2080",279,0)
 D FIND^DIC(9.4901,LEXDA,".01;.02I",,LEXPN,10,"B",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2080",280,0)
 S LEXI=$G(LEXOUT("DILIST","ID",1,.02)) I '$L(LEXI) D
"RTN","LEX2080",281,0)
 . S LEXSCR="" D FIND^DIC(9.4901,LEXDA,".01;.02I",,LEXPN,10,"B",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2080",282,0)
 . S LEXI=$G(LEXOUT("DILIST","ID",1,.02))
"RTN","LEX2080",283,0)
 Q:'$L(LEXI) ""  Q:$P(LEXI,".",1)'?7N ""  S LEXE=$TR($$FMTE^XLFDT(LEXI,"5DZ"),"@"," ")
"RTN","LEX2080",284,0)
 Q:'$L(LEXE) ""  S X=LEXI_"^"_LEXE
"RTN","LEX2080",285,0)
 Q X
"RTN","LEX2080",286,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2080",287,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","LEX2080",288,0)
M(X) ;   Message
"RTN","LEX2080",289,0)
 D MES^XPDUTL($G(X)) Q
"RTN","LEX2080",290,0)
TRIM(X) ;   Trim Spaces
"RTN","LEX2080",291,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEX2080",292,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEX2080",293,0)
 Q X
"RTN","LEX2080",294,0)
IMP ;   Import names
"RTN","LEX2080",295,0)
 S LEXREQP(1)="LEX*2.0*25^3030924^CSV"
"RTN","LEX2080",296,0)
 S LEXREQP(2)="LEX*2.0*30^3041008^CTD"
"RTN","LEX2080",297,0)
 S LEXREQP(3)="LEX*2.0*62^3090506^Queries"
"RTN","LEX2080",298,0)
 S LEXREQP(4)="LEX*2.0*81^3120214^Fix Cross-Reference"
"RTN","LEX2080",299,0)
 S LEXREQP(5)="PSO*7.0*404^3120814^Global Read of ICD files"
"RTN","LEX2080",300,0)
 S LEXREQP(6)="ONC*2.11*56^3120927^Global Read of ICD files"
"RTN","LEX2080",301,0)
 S LEXREQP(7)="RA*5.0*112^3130417^Global Read of ICD files"
"RTN","LEX2080",302,0)
 S LEXREQP(8)="ICD*18.0*62^3130501^DRG Grouper Fixes"
"RTN","LEX2080",303,0)
 S LEXREQP(9)="GMPL*2.0*43^3130514^Global Read of ICD files"
"RTN","LEX2080",304,0)
 S LEXREQP(10)="TIU*1.0*267^3130514^Global Read of ICD files"
"RTN","LEX2080",305,0)
 S LEXREQP(11)="ICD*18.0*69^3130621^DRG Grouper Fixes"
"RTN","LEX2080",306,0)
 S LEXREQP(12)="DG*5.3*870^3130715^Global Read of ICD files"
"RTN","LEX2080",307,0)
 S LEXREQP(13)="IBD*3.0*64^3130903^Global Read of ICD files"
"RTN","LEX2080",308,0)
 S LEXREQP(14)="LR*5.2*429^3130918^Global Read of ICD files"
"RTN","LEX2080",309,0)
 S LEXREQP(15)="ACKQ*3.0*22^3131212^Global Read of ICD files"
"RTN","LEX2080",310,0)
 S LEXREQP(16)="LEX*2.0*94^3140114^FY14 2nd Qtr Update"
"RTN","LEX2080",311,0)
 S LEXPTYPE="ICD-10 Implementation",LEXLREV="80"
"RTN","LEX2080",312,0)
 S LEXBUILD="LEX*2.0*80",LEXIGHF="ICD_18_57.GBL",LEXFY="",LEXQTR=""
"RTN","LEX2080",313,0)
 Q
"RTN","LEX2080",314,0)
GD ;   Global Data
"RTN","LEX2080",315,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2080",316,0)
 ;;^ICD9(0);^ICD9(;ICD Diagnosis;80
"RTN","LEX2080",317,0)
 ;;^ICD0(0);^ICD0(;ICD Operation/Procedure;80.1
"RTN","LEX2080A")
0^62^B57341845
"RTN","LEX2080A",1,0)
LEX2080A ;ISL/KER - LEX*2.0*80 Pre/Post Install (cont) ;04/21/2014
"RTN","LEX2080A",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX2080A",3,0)
 ;               
"RTN","LEX2080A",4,0)
 ; Global Variables
"RTN","LEX2080A",5,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","LEX2080A",6,0)
 ;    ^ICD0(              ICR   4486
"RTN","LEX2080A",7,0)
 ;    ^ICD0(1535)         ICR   4486
"RTN","LEX2080A",8,0)
 ;    ^ICD0(1548)         ICR   4486
"RTN","LEX2080A",9,0)
 ;    ^ICD0(366)          ICR   4486
"RTN","LEX2080A",10,0)
 ;    ^ICD9(              ICR   4485
"RTN","LEX2080A",11,0)
 ;    ^ICD9(11938)        ICR   4485
"RTN","LEX2080A",12,0)
 ;    ^ICD9(3066)         ICR   4485
"RTN","LEX2080A",13,0)
 ;    ^TMP("LEXKID")      SACC 2.3.2.5.1
"RTN","LEX2080A",14,0)
 ;               
"RTN","LEX2080A",15,0)
 ; External References
"RTN","LEX2080A",16,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX2080A",17,0)
 ;    FIELD^DID           ICR   2052
"RTN","LEX2080A",18,0)
 ;    FILE^DID            ICR   2052
"RTN","LEX2080A",19,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEX2080A",20,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEX2080A",21,0)
 ;               
"RTN","LEX2080A",22,0)
STATUS ; ICD-9/10 Status in files 80/80.1 and Lexicon
"RTN","LEX2080A",23,0)
 N LEX10,ICD10,ICD9,LEGD,LEGP,ICDATA,ICDD,ICDDT,ICDENT,ICDF,ICDFI,ICDIEN,ICDM,ICDNM,ICDNS,ICDPK,ICDPT,ICDRT,ICDRV,ICDUCI,ICDVR,ICDT,ICDX,X,Y
"RTN","LEX2080A",24,0)
 K ICDDD,ICDGBL X ^%ZOSF("UCI") S (ICDNS,ICDUCI)=Y S:ICDNS[","&($L($P(Y,",",1))) ICDNS=$P(Y,",",1) S LEGD=$$LEGD,LEGP=$$LEGP
"RTN","LEX2080A",25,0)
 S ICDX="   Checking "_$S($L(ICDNS):(ICDNS_" "),1:"")_"ICD Data Dictionary/Global/Data Status:" D BM(ICDX)
"RTN","LEX2080A",26,0)
 D FIELD^DID(80.066,60,"N","LABEL","ICD9","ICDM")
"RTN","LEX2080A",27,0)
 D FIELD^DID(80.012,.01,"N","LABEL","ICD10","ICDM")
"RTN","LEX2080A",28,0)
 D FIELD^DID(757.03,11,"N","LABEL","LEX10","ICDM")
"RTN","LEX2080A",29,0)
 D BM("     Data Dictionary:"),M(" ")
"RTN","LEX2080A",30,0)
 D:'$D(ICD9) M("       Legacy ICD Data Dictionary does not exist")
"RTN","LEX2080A",31,0)
 D:$D(ICD9) M("       Remnants of the legacy ICD Data Dictionary found") S:$D(ICD9) ICDDD(1)=""
"RTN","LEX2080A",32,0)
 D:'$D(ICD10) M("       ICD Data Dictionary updates for ICD-10 not found") S:'$D(ICD10) ICDDD(2)=""
"RTN","LEX2080A",33,0)
 D:$D(ICD10) M("       ICD Data Dictionary updates for ICD-10 found")
"RTN","LEX2080A",34,0)
 D:'$D(LEX10) M("       Lexicon Data Dictionary updates for ICD-10 not found")
"RTN","LEX2080A",35,0)
 D:$D(LEX10) M("       Lexicon Data Dictionary updates for ICD-10 found")
"RTN","LEX2080A",36,0)
 D BM("     Global:"),M(" ")
"RTN","LEX2080A",37,0)
 F ICDT=80,80.1,80.4,757,757.001,757.01,757.02,757.03,757.033,757.1,757.3,757.31 D
"RTN","LEX2080A",38,0)
 . K ICDF,ICDM D FILE^DID(ICDT,"N","DATE;GLOBAL NAME;NAME;PACKAGE REVISION DATA;VERSION;LOOKUP PROGRAM","ICDF","ICDM")
"RTN","LEX2080A",39,0)
 . N ICDRT,ICDFI,ICDNM,ICDVR,ICDPK,ICDRV,ICDDT,ICDPT,ICDIEN,ICDENT
"RTN","LEX2080A",40,0)
 . S ICDNM=$E($G(ICDF("NAME")),1,24)
"RTN","LEX2080A",41,0)
 . S ICDNM=$G(ICDF("NAME"))
"RTN","LEX2080A",42,0)
 . S ICDNM=ICDNM_$J(" ",(36-$L(ICDNM))) S ICDVR=$G(ICDF("VERSION"))
"RTN","LEX2080A",43,0)
 . S ICDFI=$G(ICDT),ICDFI=ICDFI_$J(" ",(10-$L(ICDFI)))
"RTN","LEX2080A",44,0)
 . S ICDRT=$G(ICDF("GLOBAL NAME")),ICDRT=ICDRT_$J(" ",(15-$L(ICDRT)))
"RTN","LEX2080A",45,0)
 . S ICDPK=$S($P(ICDT,".",1)=80:"ICD",$P(ICDT,".",1)=757:"LEX",1:"") Q:'$L(ICDPK)
"RTN","LEX2080A",46,0)
 . S ICDRV=$G(ICDF("PACKAGE REVISION DATA")),ICDDT=$P(ICDRV,"^",2),ICDRV=$P(ICDRV,"^",1)
"RTN","LEX2080A",47,0)
 . S ICDPT="" S:$L(ICDPK)&(+($G(ICDVR))>0)&(+($G(ICDRV))>0) ICDPT=ICDPK_"*"_ICDVR_"*"_ICDRV
"RTN","LEX2080A",48,0)
 . S ICDPT=ICDPT_$J(" ",(14-$L(ICDPT))),ICDDT=$S(ICDDT?7N:$TR($$FMTE^XLFDT(ICDDT,"5DZ"),"@"," "),1:"")
"RTN","LEX2080A",49,0)
 . D:ICDT=80 M("       Global Name                         File #     Patched      Effective")
"RTN","LEX2080A",50,0)
 . D M(("       "_ICDNM_ICDFI_ICDPT_ICDDT))
"RTN","LEX2080A",51,0)
 D BM("     Data:") I '$D(^ICD9(3066,"DRG"))&('$D(^ICD9(11938,66,3,"DRG")))&($L($G(^ICD9(3066,0)),"^")'>1) S ICDATA(80,9)="No "
"RTN","LEX2080A",52,0)
 I $D(^ICD9(3066,"DRG"))!($D(^ICD9(11938,66,3,"DRG")))!($L($G(^ICD9(3066,0)),"^")>1) S ICDGBL(1)="",ICDATA(80,9)="Yes"
"RTN","LEX2080A",53,0)
 I '$D(^ICD9(3066,7,1,0)) S ICDGBL(2)="",ICDATA(80,10)="No "
"RTN","LEX2080A",54,0)
 I $D(^ICD9(3066,7,1,0)) S ICDATA(80,10)="Yes"
"RTN","LEX2080A",55,0)
 I '$D(^ICD0(366,"MDC"))&($L($G(^ICD0(1535,0)),"^")'>1) S ICDATA(80.1,9)="No "
"RTN","LEX2080A",56,0)
 I $D(^ICD0(366,"MDC"))!($L($G(^ICD0(1535,0)),"^")>1) S ICDGBL(1)="",ICDATA(80.1,9)="Yes"
"RTN","LEX2080A",57,0)
 I '$D(^ICD0(1548,3,1,0))&($L($G(^ICD0(1548,1)),"^")'>1) S ICDGBL(2)="",ICDATA(80.1,10)="No "
"RTN","LEX2080A",58,0)
 I $D(^ICD0(1548,3,1,0))&($L($G(^ICD0(1548,1)),"^")>1) S ICDATA(80.1,10)="Yes"
"RTN","LEX2080A",59,0)
 S:+LEGD>0 ICDATA(80,9)="Yes" S:+LEGP>0 ICDATA(80.1,9)="Yes"
"RTN","LEX2080A",60,0)
 S ICDX="       ",ICDX=ICDX_$J(" ",(32-$L(ICDX)))_"Legacy ICD-9"
"RTN","LEX2080A",61,0)
 S ICDX=ICDX_$J(" ",(50-$L(ICDX)))_"Updated ICD-10" D M(ICDX)
"RTN","LEX2080A",62,0)
 S ICDX="       Coding System Data",ICDX=ICDX_$J(" ",(32-$L(ICDX)))_"Data Format"
"RTN","LEX2080A",63,0)
 S ICDX=ICDX_$J(" ",(50-$L(ICDX)))_"Data Format" D M(ICDX)
"RTN","LEX2080A",64,0)
 S ICDX="       ICD Diagnosis Data",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_$G(ICDATA(80,9))
"RTN","LEX2080A",65,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_$G(ICDATA(80,10)) D M(ICDX)
"RTN","LEX2080A",66,0)
 S ICDX="       ICD Procedure Data",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_$G(ICDATA(80.1,9))
"RTN","LEX2080A",67,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_$G(ICDATA(80.1,10)) D M(ICDX)
"RTN","LEX2080A",68,0)
 S ICDX="       Lexicon Data    ",ICDX=ICDX_$J(" ",(32-$L(ICDX)))_"    ICD-9"
"RTN","LEX2080A",69,0)
 S ICDX=ICDX_$J(" ",(50-$L(ICDX)))_"   ICD-10" D BM(ICDX)
"RTN","LEX2080A",70,0)
 S ICD9=$S($O(^LEX(757.02,"ASRC","ICD",0))>0:"Yes",1:"No")
"RTN","LEX2080A",71,0)
 S ICD10=$S($O(^LEX(757.02,"ASRC","10D",0))>0:"Yes",1:"No")
"RTN","LEX2080A",72,0)
 S ICDX="       ICD Diagnosis",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_ICD9
"RTN","LEX2080A",73,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_ICD10 D M(ICDX)
"RTN","LEX2080A",74,0)
 S ICD9=$S($O(^LEX(757.02,"ASRC","ICP",0))>0:"Yes",1:"No")
"RTN","LEX2080A",75,0)
 S ICD10=$S($O(^LEX(757.02,"ASRC","10P",0))>0:"Yes",1:"No")
"RTN","LEX2080A",76,0)
 S ICDX="       ICD Procedures",ICDX=ICDX_$J(" ",(37-$L(ICDX)))_ICD9
"RTN","LEX2080A",77,0)
 S ICDX=ICDX_$J(" ",(55-$L(ICDX)))_ICD10 D M(ICDX)
"RTN","LEX2080A",78,0)
 Q
"RTN","LEX2080A",79,0)
LEGD(X) ; ICD 9 Legacy Data
"RTN","LEX2080A",80,0)
 N ICDI,ICD9 S (ICDI,ICD9)=0 F  S ICDI=$O(^ICD9(ICDI)) Q:+ICDI'>0  Q:ICDI>499999  Q:ICD9>0  D  Q:ICD9>0
"RTN","LEX2080A",81,0)
 . S:$D(^ICD9(ICDI,"DRG")) ICD9=1 Q:ICD9
"RTN","LEX2080A",82,0)
 . S:$D(^ICD9(ICDI,66,1,"DRG"))!($D(^ICD9(ICDI,66,3,"DRG"))) ICD9=1 Q:ICD9
"RTN","LEX2080A",83,0)
 . S:$L($G(^ICD9(ICDI,0)),"^")>1 ICD9=1
"RTN","LEX2080A",84,0)
 S X=+ICD9
"RTN","LEX2080A",85,0)
 Q X
"RTN","LEX2080A",86,0)
LEGP(X) ; ICD 0 Legacy Data
"RTN","LEX2080A",87,0)
 N ICDI,ICD0 S (ICDI,ICD0)=0 F  S ICDI=$O(^ICD0(ICDI)) Q:+ICDI'>0  Q:ICDI>499999  Q:ICD0>0  D  Q:ICD0>0
"RTN","LEX2080A",88,0)
 . S:$L($G(^ICD0(ICDI,0)),"^")>1 ICD0=1  Q:ICD0
"RTN","LEX2080A",89,0)
 . S:$L($G(^ICD0(ICDI,1)))&($P($G(^ICD0(ICDI,1)),"^",1)'?1N.N) ICD0=1  Q:ICD0
"RTN","LEX2080A",90,0)
 . S:$D(^ICD0(ICDI,"MDC")) ICD0=1 Q:ICD0
"RTN","LEX2080A",91,0)
 S X=+ICD0
"RTN","LEX2080A",92,0)
 Q X
"RTN","LEX2080A",93,0)
FL ; Flouride to Fluoride
"RTN","LEX2080A",94,0)
 Q
"RTN","LEX2080A",95,0)
 I $P($G(^ICPT(108897,0)),"^",2)="TOPICAL FLOURIDE VARNISH" D
"RTN","LEX2080A",96,0)
 . N DA,DIK S DA=108897,DIK="^ICPT(" D IX2^DIK
"RTN","LEX2080A",97,0)
 . S $P(^ICPT(108897,0),"^",2)="TOPICAL FLUORIDE VARNISH"
"RTN","LEX2080A",98,0)
 . S DA=108897,DIK="^ICPT(" D IX1^DIK
"RTN","LEX2080A",99,0)
 I $P($G(^ICPT(108897,61,2,0)),"^",2)="TOPICAL FLOURIDE VARNISH" D
"RTN","LEX2080A",100,0)
 . N DA,DIK S DA=108897,DIK="^ICPT(" D IX2^DIK
"RTN","LEX2080A",101,0)
 . S $P(^ICPT(108897,61,2,0),"^",2)="TOPICAL FLUORIDE VARNISH"
"RTN","LEX2080A",102,0)
 . S DA=108897,DIK="^ICPT(" D IX1^DIK
"RTN","LEX2080A",103,0)
 I $P($G(^ICPT(110825,0)),"^",2)="TOPICAL FLOURIDE" D
"RTN","LEX2080A",104,0)
 . N DA,DIK S DA=110825,DIK="^ICPT(" D IX2^DIK
"RTN","LEX2080A",105,0)
 . S $P(^ICPT(110825,0),"^",2)="TOPICAL FLUORIDE"
"RTN","LEX2080A",106,0)
 . S DA=110825,DIK="^ICPT(" D IX1^DIK
"RTN","LEX2080A",107,0)
 I $P($G(^ICPT(110825,61,1,0)),"^",2)="TOPICAL FLOURIDE" D
"RTN","LEX2080A",108,0)
 . N DA,DIK S DA=110825,DIK="^ICPT(" D IX2^DIK
"RTN","LEX2080A",109,0)
 . S $P(^ICPT(110825,61,1,0),"^",2)="TOPICAL FLUORIDE"
"RTN","LEX2080A",110,0)
 . S DA=110825,DIK="^ICPT(" D IX1^DIK
"RTN","LEX2080A",111,0)
 S DA(1)=306305,DA=207,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",112,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",113,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",114,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",115,0)
 S DA(1)=309984,DA=21,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",116,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",117,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",118,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",119,0)
 S DA(1)=306668,DA=52,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",120,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",121,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",122,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",123,0)
 S DA(1)=309999,DA=22,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",124,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",125,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",126,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",127,0)
 S DA(1)=312701,DA=5,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",128,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",129,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",130,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",131,0)
 S DA(1)=312704,DA=7,DIK="^LEX(757.01,"_DA(1)_",5,"
"RTN","LEX2080A",132,0)
 I $D(^LEX(757.01,DA(1),5,DA)) D
"RTN","LEX2080A",133,0)
 . D ^DIK K ^LEX(757.01,DA(1),5,"B","FLOURIDE",DA)
"RTN","LEX2080A",134,0)
 . K ^LEX(757.01,"AWRD","FLOURIDE",DA(1),DA(1),DA)
"RTN","LEX2080A",135,0)
 S DA=7205819,DIK="^LEX(757.01,"
"RTN","LEX2080A",136,0)
 I $$UP^XLFSTR($G(^LEX(757.01,DA,0)))["FLOURIDE" D
"RTN","LEX2080A",137,0)
 . D IX2^DIK S ^LEX(757.01,DA,0)="Deuterium fluoride pumped carbon dioxide laser device" D IX1^DIK
"RTN","LEX2080A",138,0)
 S DA=7205820,DIK="^LEX(757.01,"
"RTN","LEX2080A",139,0)
 I $$UP^XLFSTR($G(^LEX(757.01,DA,0)))["FLOURIDE" D
"RTN","LEX2080A",140,0)
 . D IX2^DIK S ^LEX(757.01,DA,0)="Deuterium fluoride pumped carbon dioxide laser device (physical object)" D IX1^DIK
"RTN","LEX2080A",141,0)
 I $D(^LEX(757.21,"AOBJ","FLOURIDE",7102910)) D
"RTN","LEX2080A",142,0)
 . K ^LEX(757.21,"AOBJ","FLOURIDE",7102910)
"RTN","LEX2080A",143,0)
 . S ^LEX(757.21,"AOBJ","FLUORIDE",7102910)=""
"RTN","LEX2080A",144,0)
 I $D(^LEX(757.21,"ASCT","FLOURIDE",7409747)) D
"RTN","LEX2080A",145,0)
 . K ^LEX(757.21,"ASCT","FLOURIDE",7409747)
"RTN","LEX2080A",146,0)
 . S ^LEX(757.21,"ASCT","FLUORIDE",7409747)=""
"RTN","LEX2080A",147,0)
 I $D(^LEX(757.21,"C","DEUTERIUM FLOURIDE PUMPED CARBON DIOXIDE LASER DEVICE",7102910)) D
"RTN","LEX2080A",148,0)
 . K ^LEX(757.21,"C","DEUTERIUM FLOURIDE PUMPED CARBON DIOXIDE LASER DEVICE",7102910)
"RTN","LEX2080A",149,0)
 . S ^LEX(757.21,"C","DEUTERIUM FLUORIDE PUMPED CARBON DIOXIDE LASER DEVICE",7102910)=""
"RTN","LEX2080A",150,0)
 I $D(^LEX(757.21,"C","DEUTERIUM FLOURIDE PUMPED CARBON DIOXIDE LASER DEVICE",7409747)) D
"RTN","LEX2080A",151,0)
 . K ^LEX(757.21,"C","DEUTERIUM FLOURIDE PUMPED CARBON DIOXIDE LASER DEVICE",7409747)
"RTN","LEX2080A",152,0)
 . S ^LEX(757.21,"C","DEUTERIUM FLUORIDE PUMPED CARBON DIOXIDE LASER DEVICE",7409747)=""
"RTN","LEX2080A",153,0)
 K ^LEX(757.01,"ASL","FLOURIDE")
"RTN","LEX2080A",154,0)
 Q
"RTN","LEX2080A",155,0)
BL ;   Blank Line
"RTN","LEX2080A",156,0)
 D TL(" ")
"RTN","LEX2080A",157,0)
 Q
"RTN","LEX2080A",158,0)
TL(X) ;   Text Line
"RTN","LEX2080A",159,0)
 N LEXI S LEXI=$O(^TMP("LEXKID",$J," "),-1),LEXI=LEXI+1,^TMP("LEXKID",$J,LEXI)=$G(X),^TMP("LEXKID",$J,0)=LEXI
"RTN","LEX2080A",160,0)
 Q
"RTN","LEX2080A",161,0)
M(X) ;   Blank/Text
"RTN","LEX2080A",162,0)
 D MES^XPDUTL($G(X)) Q
"RTN","LEX2080A",163,0)
BM(X) ;   Blank/Text
"RTN","LEX2080A",164,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","LEX2080B")
0^210^B59256107
"RTN","LEX2080B",1,0)
LEX2080B ;ISL/KER - LEX*2.0*80 Pre/Post Install ;04/21/2014
"RTN","LEX2080B",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX2080B",3,0)
 ;
"RTN","LEX2080B",4,0)
 Q
"RTN","LEX2080B",5,0)
EN ; Main Entry Point
"RTN","LEX2080B",6,0)
 D S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,EN^LEX2080C,FL^LEX2080A
"RTN","LEX2080B",7,0)
 Q
"RTN","LEX2080B",8,0)
S1 ; Subset #1
"RTN","LEX2080B",9,0)
 I $D(^LEXT(757.2,1,0)) N DA,DIK S DA=1,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",10,0)
 S ^LEXT(757.2,1,0)="Lexicon^WRD"
"RTN","LEX2080B",11,0)
 S ^LEXT(757.2,1,1)="^LEX(757.01,"
"RTN","LEX2080B",12,0)
 S ^LEXT(757.2,1,2)="XTLK^LEXHLP"
"RTN","LEX2080B",13,0)
 S ^LEXT(757.2,1,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",14,0)
 S ^LEXT(757.2,1,5)="^^1^757^LEX"
"RTN","LEX2080B",15,0)
 S ^LEXT(757.2,1,100,0)="^757.22^4^4^3130101^^^^"
"RTN","LEX2080B",16,0)
 S ^LEXT(757.2,1,100,1,0)="This subset contains the entire Lexicon.  While it"
"RTN","LEX2080B",17,0)
 S ^LEXT(757.2,1,100,2,0)="is not a true subset (i.e., part of the whole), it is"
"RTN","LEX2080B",18,0)
 S ^LEXT(757.2,1,100,3,0)="defined here as the default when a more precise subset"
"RTN","LEX2080B",19,0)
 S ^LEXT(757.2,1,100,4,0)="has not been selected."
"RTN","LEX2080B",20,0)
 I $D(^LEXT(757.2,1,0)) N DA,DIK S DA=1,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",21,0)
 Q
"RTN","LEX2080B",22,0)
S2 ; Subset #2
"RTN","LEX2080B",23,0)
 I $D(^LEXT(757.2,2,0)) N DA,DIK S DA=2,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",24,0)
 S ^LEXT(757.2,2,0)="Nursing^NUR"
"RTN","LEX2080B",25,0)
 S ^LEXT(757.2,2,1)="^LEX(757.21,"
"RTN","LEX2080B",26,0)
 S ^LEXT(757.2,2,2)="XTLK^LEXHLP"
"RTN","LEX2080B",27,0)
 S ^LEXT(757.2,2,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",28,0)
 S ^LEXT(757.2,2,4)="ICD/NAN/NIC/OMA"
"RTN","LEX2080B",29,0)
 S ^LEXT(757.2,2,100,0)="^^4^4^3130101^"
"RTN","LEX2080B",30,0)
 S ^LEXT(757.2,2,100,1,0)="This subset contains terminology from the North American"
"RTN","LEX2080B",31,0)
 S ^LEXT(757.2,2,100,2,0)="Nursing Diagnosis Association (NANDA), the Nursing "
"RTN","LEX2080B",32,0)
 S ^LEXT(757.2,2,100,3,0)="Intervention Classification (NIC) and the Omaha Nursing"
"RTN","LEX2080B",33,0)
 S ^LEXT(757.2,2,100,4,0)="Diagnosis classification systems. "
"RTN","LEX2080B",34,0)
 I $D(^LEXT(757.2,2,0)) N DA,DIK S DA=2,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",35,0)
 Q
"RTN","LEX2080B",36,0)
S3 ; Subset #3
"RTN","LEX2080B",37,0)
 I $D(^LEXT(757.2,3,0)) N DA,DIK S DA=3,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",38,0)
 S ^LEXT(757.2,3,0)="Social Work^SOC"
"RTN","LEX2080B",39,0)
 S ^LEXT(757.2,3,1)="^LEX(757.21,"
"RTN","LEX2080B",40,0)
 S ^LEXT(757.2,3,2)="XTLK^LEXHLP"
"RTN","LEX2080B",41,0)
 S ^LEXT(757.2,3,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",42,0)
 S ^LEXT(757.2,3,4)="ICD/DS4/CPT/ICP"
"RTN","LEX2080B",43,0)
 S ^LEXT(757.2,3,100,0)="^^2^2^3130101^^^"
"RTN","LEX2080B",44,0)
 S ^LEXT(757.2,3,100,1,0)="This subset contains terminology relating to Social Work,"
"RTN","LEX2080B",45,0)
 S ^LEXT(757.2,3,100,2,0)="and is taken from the SWIMS vocabulary."
"RTN","LEX2080B",46,0)
 I $D(^LEXT(757.2,3,0)) N DA,DIK S DA=3,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",47,0)
 Q
"RTN","LEX2080B",48,0)
S4 ; Subset #4
"RTN","LEX2080B",49,0)
 I $D(^LEXT(757.2,4,0)) N DA,DIK S DA=4,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",50,0)
 S ^LEXT(757.2,4,0)="Problem List"
"RTN","LEX2080B",51,0)
 S ^LEXT(757.2,4,1)="^LEX(757.01,"
"RTN","LEX2080B",52,0)
 S ^LEXT(757.2,4,2)="XTLK^LEXHLP"
"RTN","LEX2080B",53,0)
 S ^LEXT(757.2,4,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",54,0)
 S ^LEXT(757.2,4,4)="ICD/ICP/10D/10P/CPT/DS4"
"RTN","LEX2080B",55,0)
 S ^LEXT(757.2,4,5)="PL1^WRD^1^9000011^GMPL^1^0^3"
"RTN","LEX2080B",56,0)
 S ^LEXT(757.2,4,6)="I $$SC^LEXU(Y,""BEH/DIS;999/64/66/73/74/77/82/169/170/171;ICD/ICP/10D/10P/CPT/DS4"",+($G(LEXVDT)))"
"RTN","LEX2080B",57,0)
 S ^LEXT(757.2,4,7)="ICD/ICP/10D/10P/CPT/DS4"
"RTN","LEX2080B",58,0)
 I $D(^LEXT(757.2,4,0)) N DA,DIK S DA=4,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",59,0)
 Q
"RTN","LEX2080B",60,0)
S5 ; Subset #5
"RTN","LEX2080B",61,0)
 I $D(^LEXT(757.2,5,0)) N DA,DIK S DA=5,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",62,0)
 S ^LEXT(757.2,5,0)="Int'l Class Dis/Diag (ICD)"
"RTN","LEX2080B",63,0)
 S ^LEXT(757.2,5,1)="^LEX(757.01,"
"RTN","LEX2080B",64,0)
 S ^LEXT(757.2,5,2)="XTLK^LEXHLP"
"RTN","LEX2080B",65,0)
 S ^LEXT(757.2,5,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",66,0)
 S ^LEXT(757.2,5,4)="ICD/ICP"
"RTN","LEX2080B",67,0)
 S ^LEXT(757.2,5,5)="PL2^WRD^^^^1^1^2"
"RTN","LEX2080B",68,0)
 S ^LEXT(757.2,5,6)="I $$SO^LEXU(Y,""ICD"",+($G(LEXVDT)))"
"RTN","LEX2080B",69,0)
 S ^LEXT(757.2,5,7)="ICD/ICP"
"RTN","LEX2080B",70,0)
 S ^LEXT(757.2,5,100,0)="^^3^3^3130101^^^^"
"RTN","LEX2080B",71,0)
 S ^LEXT(757.2,5,100,1,0)="This subset is artificially created through the use of a "
"RTN","LEX2080B",72,0)
 S ^LEXT(757.2,5,100,2,0)="filter (not a physical subset), and contains only those "
"RTN","LEX2080B",73,0)
 S ^LEXT(757.2,5,100,3,0)="expressions which are linked to an ICD classification code."
"RTN","LEX2080B",74,0)
 I $D(^LEXT(757.2,5,0)) N DA,DIK S DA=5,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",75,0)
 Q
"RTN","LEX2080B",76,0)
S6 ; Subset #6
"RTN","LEX2080B",77,0)
 N DA,DIK S DA=6 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080B",78,0)
 Q
"RTN","LEX2080B",79,0)
S7 ; Subset #7
"RTN","LEX2080B",80,0)
 N DA,DIK S DA=7 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080B",81,0)
 Q
"RTN","LEX2080B",82,0)
S8 ; Subset #8
"RTN","LEX2080B",83,0)
 N DA,DIK S DA=8 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080B",84,0)
 Q
"RTN","LEX2080B",85,0)
S9 ; Subset #9
"RTN","LEX2080B",86,0)
 I $D(^LEXT(757.2,9,0)) N DA,DIK S DA=9,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",87,0)
 S ^LEXT(757.2,9,0)="Immunologic^IMM"
"RTN","LEX2080B",88,0)
 S ^LEXT(757.2,9,1)="^LEX(757.21,"
"RTN","LEX2080B",89,0)
 S ^LEXT(757.2,9,2)="XTLK^LEXHLP"
"RTN","LEX2080B",90,0)
 S ^LEXT(757.2,9,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",91,0)
 S ^LEXT(757.2,9,4)="ICD/ICP/CPT"
"RTN","LEX2080B",92,0)
 S ^LEXT(757.2,9,5)="^^^^^^1"
"RTN","LEX2080B",93,0)
 S ^LEXT(757.2,9,7)="ICD/ICP/CPT"
"RTN","LEX2080B",94,0)
 S ^LEXT(757.2,9,100,0)="^^3^3^3130101^^"
"RTN","LEX2080B",95,0)
 S ^LEXT(757.2,9,100,1,0)="This subset contains expressions relating to immunizations"
"RTN","LEX2080B",96,0)
 S ^LEXT(757.2,9,100,2,0)="and vaccines, including immunologic factors, indicators, "
"RTN","LEX2080B",97,0)
 S ^LEXT(757.2,9,100,3,0)="reagents and pharmacologic substances."
"RTN","LEX2080B",98,0)
 I $D(^LEXT(757.2,9,0)) N DA,DIK S DA=9,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",99,0)
 Q
"RTN","LEX2080B",100,0)
S10 ; Subset #10
"RTN","LEX2080B",101,0)
 I $D(^LEXT(757.2,10,0)) N DA,DIK S DA=10,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",102,0)
 S ^LEXT(757.2,10,0)="Dental^DEN"
"RTN","LEX2080B",103,0)
 S ^LEXT(757.2,10,1)="^LEX(757.21,"
"RTN","LEX2080B",104,0)
 S ^LEXT(757.2,10,2)="XTLK^LEXHLP"
"RTN","LEX2080B",105,0)
 S ^LEXT(757.2,10,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",106,0)
 S ^LEXT(757.2,10,100,0)="^^2^2^3130101^"
"RTN","LEX2080B",107,0)
 S ^LEXT(757.2,10,100,1,0)="This Subset only contains expressions found in the field of"
"RTN","LEX2080B",108,0)
 S ^LEXT(757.2,10,100,2,0)="dentistry, or that overlap general clinical specialities"
"RTN","LEX2080B",109,0)
 I $D(^LEXT(757.2,10,0)) N DA,DIK S DA=10,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",110,0)
 Q
"RTN","LEX2080B",111,0)
S11 ; Subset #11
"RTN","LEX2080B",112,0)
 I $D(^LEXT(757.2,11,0)) N DA,DIK S DA=11,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",113,0)
 S ^LEXT(757.2,11,0)="Nursing Interventions"
"RTN","LEX2080B",114,0)
 S ^LEXT(757.2,11,1)="^LEX(757.21,"
"RTN","LEX2080B",115,0)
 S ^LEXT(757.2,11,2)="XTLK^LEXHLP"
"RTN","LEX2080B",116,0)
 S ^LEXT(757.2,11,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",117,0)
 S ^LEXT(757.2,11,4)="ICD/NAN/NIC/OMA"
"RTN","LEX2080B",118,0)
 S ^LEXT(757.2,11,5)="NIC^NUR^^^^^1"
"RTN","LEX2080B",119,0)
 S ^LEXT(757.2,11,6)="I $$SO^LEXU(Y,""NIC"",+($G(LEXVDT)))"
"RTN","LEX2080B",120,0)
 S ^LEXT(757.2,11,7)="ICD/NAN/NIC/OMA"
"RTN","LEX2080B",121,0)
 I $D(^LEXT(757.2,11,0)) N DA,DIK S DA=11,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",122,0)
 Q
"RTN","LEX2080B",123,0)
S12 ; Subset #12
"RTN","LEX2080B",124,0)
 I $D(^LEXT(757.2,12,0)) N DA,DIK S DA=12,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",125,0)
 S ^LEXT(757.2,12,0)="ICD-9 Diagnosis"
"RTN","LEX2080B",126,0)
 S ^LEXT(757.2,12,1)="^LEX(757.01,"
"RTN","LEX2080B",127,0)
 S ^LEXT(757.2,12,2)="XTLK^LEXHLP"
"RTN","LEX2080B",128,0)
 S ^LEXT(757.2,12,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",129,0)
 S ^LEXT(757.2,12,4)="ICD"
"RTN","LEX2080B",130,0)
 S ^LEXT(757.2,12,5)="ICD^WRD^0^80^ICD^0^1"
"RTN","LEX2080B",131,0)
 S ^LEXT(757.2,12,6)="I $L($$ICDONE^LEXU(+Y,+($G(LEXVDT))))"
"RTN","LEX2080B",132,0)
 S ^LEXT(757.2,12,7)="ICD"
"RTN","LEX2080B",133,0)
 S ^LEXT(757.2,12,100,0)="^^3^3^3130101^"
"RTN","LEX2080B",134,0)
 S ^LEXT(757.2,12,100,1,0)="This subset is artificially created through the use of a filter"
"RTN","LEX2080B",135,0)
 S ^LEXT(757.2,12,100,2,0)="which will not permit the selection of a term which does not "
"RTN","LEX2080B",136,0)
 S ^LEXT(757.2,12,100,3,0)="have a valid ICD-9 Diagnosis code assigned."
"RTN","LEX2080B",137,0)
 I $D(^LEXT(757.2,12,0)) N DA,DIK S DA=12,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",138,0)
 Q
"RTN","LEX2080B",139,0)
S13 ; Subset #13
"RTN","LEX2080B",140,0)
 I $D(^LEXT(757.2,13,0)) N DA,DIK S DA=13,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",141,0)
 S ^LEXT(757.2,13,0)="CPT Procedures"
"RTN","LEX2080B",142,0)
 S ^LEXT(757.2,13,1)="^LEX(757.01,"
"RTN","LEX2080B",143,0)
 S ^LEXT(757.2,13,2)="XTLK^LEXHLP"
"RTN","LEX2080B",144,0)
 S ^LEXT(757.2,13,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",145,0)
 S ^LEXT(757.2,13,4)="CPT"
"RTN","LEX2080B",146,0)
 S ^LEXT(757.2,13,5)="CPT^WRD^0^81^CPT^0^1"
"RTN","LEX2080B",147,0)
 S ^LEXT(757.2,13,6)="I $L($$CPTONE^LEXU(+Y,+($G(LEXVDT))))"
"RTN","LEX2080B",148,0)
 S ^LEXT(757.2,13,7)="CPT"
"RTN","LEX2080B",149,0)
 S ^LEXT(757.2,13,100,0)="^^4^4^3130101^^^^"
"RTN","LEX2080B",150,0)
 S ^LEXT(757.2,13,100,1,0)="This subset is artificially created through the use of a"
"RTN","LEX2080B",151,0)
 S ^LEXT(757.2,13,100,2,0)="filter which will not permit the selection of a term"
"RTN","LEX2080B",152,0)
 S ^LEXT(757.2,13,100,3,0)="which does not have a valid CPT code assigned (CPT code"
"RTN","LEX2080B",153,0)
 S ^LEXT(757.2,13,100,4,0)="in the Lexicon is also in file 81, CPT Procedures)."
"RTN","LEX2080B",154,0)
 I $D(^LEXT(757.2,13,0)) N DA,DIK S DA=13,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",155,0)
 Q
"RTN","LEX2080B",156,0)
S14 ; Subset #14
"RTN","LEX2080B",157,0)
 I $D(^LEXT(757.2,14,0)) N DA,DIK S DA=14,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080B",158,0)
 S ^LEXT(757.2,14,0)="Mental Health (DSM)"
"RTN","LEX2080B",159,0)
 S ^LEXT(757.2,14,1)="^LEX(757.01,"
"RTN","LEX2080B",160,0)
 S ^LEXT(757.2,14,2)="XTLK^LEXHLP"
"RTN","LEX2080B",161,0)
 S ^LEXT(757.2,14,3)="XTLK^LEXPRNT"
"RTN","LEX2080B",162,0)
 S ^LEXT(757.2,14,4)="DS4/ICD"
"RTN","LEX2080B",163,0)
 S ^LEXT(757.2,14,5)="DSM^WRD^0^627.7^DSM^0^1"
"RTN","LEX2080B",164,0)
 S ^LEXT(757.2,14,6)="I $$SO^LEXU(Y,""DS4"",+($G(LEXVDT)))"
"RTN","LEX2080B",165,0)
 S ^LEXT(757.2,14,7)="DS4/ICD"
"RTN","LEX2080B",166,0)
 S ^LEXT(757.2,14,100,0)="^^3^3^3130101^^^^"
"RTN","LEX2080B",167,0)
 S ^LEXT(757.2,14,100,1,0)="This subset is artifically created through the use of a"
"RTN","LEX2080B",168,0)
 S ^LEXT(757.2,14,100,2,0)="filter which will not permit the selection of a term"
"RTN","LEX2080B",169,0)
 S ^LEXT(757.2,14,100,3,0)="which does not have a DSM code assigned."
"RTN","LEX2080B",170,0)
 I $D(^LEXT(757.2,14,0)) N DA,DIK S DA=14,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080B",171,0)
 Q
"RTN","LEX2080C")
0^211^B58859352
"RTN","LEX2080C",1,0)
LEX2080C ;ISL/KER - LEX*2.0*80 Pre/Post Install ;04/21/2014
"RTN","LEX2080C",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX2080C",3,0)
 ;
"RTN","LEX2080C",4,0)
 Q
"RTN","LEX2080C",5,0)
EN ; Main Entry Point
"RTN","LEX2080C",6,0)
 D S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26
"RTN","LEX2080C",7,0)
 Q
"RTN","LEX2080C",8,0)
S15 ; Subset #15
"RTN","LEX2080C",9,0)
 I $D(^LEXT(757.2,15,0)) N DA,DIK S DA=15,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",10,0)
 S ^LEXT(757.2,15,0)="ICD, CPT and DSM Terminology"
"RTN","LEX2080C",11,0)
 S ^LEXT(757.2,15,1)="^LEX(757.01,"
"RTN","LEX2080C",12,0)
 S ^LEXT(757.2,15,2)="XTLK^LEXHLP"
"RTN","LEX2080C",13,0)
 S ^LEXT(757.2,15,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",14,0)
 S ^LEXT(757.2,15,4)="ICD/ICP/CPT/DS4"
"RTN","LEX2080C",15,0)
 S ^LEXT(757.2,15,5)="VAC^WRD^0^757.03^VAC^0^1"
"RTN","LEX2080C",16,0)
 S ^LEXT(757.2,15,6)="I $$SO^LEXU(Y,""ICD/ICP/CPT/DS4"",+($G(LEXVDT)))"
"RTN","LEX2080C",17,0)
 S ^LEXT(757.2,15,7)="ICD/ICP/CPT/DS4"
"RTN","LEX2080C",18,0)
 S ^LEXT(757.2,15,100,0)="^^4^4^3130101^^^^"
"RTN","LEX2080C",19,0)
 S ^LEXT(757.2,15,100,1,0)="This subset is artifically created through the use of a"
"RTN","LEX2080C",20,0)
 S ^LEXT(757.2,15,100,2,0)="filter which will limit the selection of a term to "
"RTN","LEX2080C",21,0)
 S ^LEXT(757.2,15,100,3,0)="those classification systems commonly used by the VA."
"RTN","LEX2080C",22,0)
 S ^LEXT(757.2,15,100,4,0)="These systems include ICD-9-CM, CPT-4, and DSM."
"RTN","LEX2080C",23,0)
 I $D(^LEXT(757.2,15,0)) N DA,DIK S DA=15,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",24,0)
 Q
"RTN","LEX2080C",25,0)
S16 ; Subset #16
"RTN","LEX2080C",26,0)
 I $D(^LEXT(757.2,16,0)) N DA,DIK S DA=16,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",27,0)
 S ^LEXT(757.2,16,0)="Pharmacy (drug/form)"
"RTN","LEX2080C",28,0)
 S ^LEXT(757.2,16,1)="^LEX(757.01,"
"RTN","LEX2080C",29,0)
 S ^LEXT(757.2,16,2)="XTLK^LEXHLP"
"RTN","LEX2080C",30,0)
 S ^LEXT(757.2,16,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",31,0)
 S ^LEXT(757.2,16,5)="DG1^WRD^0^50.6^PSN^0^0"
"RTN","LEX2080C",32,0)
 S ^LEXT(757.2,16,6)="I $$SRC^LEXU(Y,1)"
"RTN","LEX2080C",33,0)
 S ^LEXT(757.2,16,100,0)="^^4^4^2971014^^^^"
"RTN","LEX2080C",34,0)
 S ^LEXT(757.2,16,100,1,0)="This subset is artifically created through the use of a"
"RTN","LEX2080C",35,0)
 S ^LEXT(757.2,16,100,2,0)="filter, only allowing the selection of terms which "
"RTN","LEX2080C",36,0)
 S ^LEXT(757.2,16,100,3,0)="originally came from the VA National Drug File (NDF)."
"RTN","LEX2080C",37,0)
 S ^LEXT(757.2,16,100,4,0)="It returns <drug name><form>."
"RTN","LEX2080C",38,0)
 I $D(^LEXT(757.2,16,0)) N DA,DIK S DA=16,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",39,0)
 Q
"RTN","LEX2080C",40,0)
S17 ; Subset #17
"RTN","LEX2080C",41,0)
 I $D(^LEXT(757.2,17,0)) N DA,DIK S DA=17,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",42,0)
 S ^LEXT(757.2,17,0)="CPT/HCPCS Procedures"
"RTN","LEX2080C",43,0)
 S ^LEXT(757.2,17,1)="^LEX(757.01,"
"RTN","LEX2080C",44,0)
 S ^LEXT(757.2,17,2)="XTLK^LEXHLP"
"RTN","LEX2080C",45,0)
 S ^LEXT(757.2,17,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",46,0)
 S ^LEXT(757.2,17,4)="CPT/CPC"
"RTN","LEX2080C",47,0)
 S ^LEXT(757.2,17,5)="CHP^WRD^0^81^CHP^0^1"
"RTN","LEX2080C",48,0)
 S ^LEXT(757.2,17,6)="I $$SO^LEXU(Y,""CPT/CPC"",+($G(LEXVDT)))"
"RTN","LEX2080C",49,0)
 S ^LEXT(757.2,17,7)="CPT/CPC"
"RTN","LEX2080C",50,0)
 S ^LEXT(757.2,17,100,0)="^^5^5^2980221^^^"
"RTN","LEX2080C",51,0)
 S ^LEXT(757.2,17,100,1,0)="This subset is artificially created through the use of a"
"RTN","LEX2080C",52,0)
 S ^LEXT(757.2,17,100,2,0)="filter which will not permit the selection of a term"
"RTN","LEX2080C",53,0)
 S ^LEXT(757.2,17,100,3,0)="which does not have a valid CPT-4 or HCPCS procedure "
"RTN","LEX2080C",54,0)
 S ^LEXT(757.2,17,100,4,0)="code assigned (A code found in the Lexicon that is also"
"RTN","LEX2080C",55,0)
 S ^LEXT(757.2,17,100,5,0)="in file 81, CPT Procedures)."
"RTN","LEX2080C",56,0)
 I $D(^LEXT(757.2,17,0)) N DA,DIK S DA=17,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",57,0)
 Q
"RTN","LEX2080C",58,0)
S18 ; Subset #18
"RTN","LEX2080C",59,0)
 N DA,DIK S DA=18 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080C",60,0)
 Q
"RTN","LEX2080C",61,0)
S19 ; Subset #19
"RTN","LEX2080C",62,0)
 N DA,DIK S DA=19 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080C",63,0)
 Q
"RTN","LEX2080C",64,0)
S20 ; Subset #20
"RTN","LEX2080C",65,0)
 I $D(^LEXT(757.2,20,0)) N DA,DIK S DA=20,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",66,0)
 S ^LEXT(757.2,20,0)="Brest Imaging Rpt Data Sys BI-RADS"
"RTN","LEX2080C",67,0)
 S ^LEXT(757.2,20,1)="^LEX(757.01,"
"RTN","LEX2080C",68,0)
 S ^LEXT(757.2,20,2)="XTLK^LEXHLP"
"RTN","LEX2080C",69,0)
 S ^LEXT(757.2,20,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",70,0)
 S ^LEXT(757.2,20,4)="BI1"
"RTN","LEX2080C",71,0)
 S ^LEXT(757.2,20,5)="BI1^WRD^0^71^RA^0^1^^0"
"RTN","LEX2080C",72,0)
 S ^LEXT(757.2,20,6)="I +($$SO^LEXU(Y,""BIR"",+($G(LEXVDT))))>0"
"RTN","LEX2080C",73,0)
 S ^LEXT(757.2,20,7)="BIR"
"RTN","LEX2080C",74,0)
 S ^LEXT(757.2,20,100,0)="^757.22^3^3^3130101^^^^"
"RTN","LEX2080C",75,0)
 S ^LEXT(757.2,20,100,1,0)="This subset is artificially created through the use of a"
"RTN","LEX2080C",76,0)
 S ^LEXT(757.2,20,100,2,0)="filter which will not permit the selection of a term which"
"RTN","LEX2080C",77,0)
 S ^LEXT(757.2,20,100,3,0)="does not have a valid BI-RAD code assigned."
"RTN","LEX2080C",78,0)
 I $D(^LEXT(757.2,20,0)) N DA,DIK S DA=20,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",79,0)
 Q
"RTN","LEX2080C",80,0)
S21 ; Subset #21
"RTN","LEX2080C",81,0)
 I $D(^LEXT(757.2,21,0)) N DA,DIK S DA=21,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",82,0)
 S ^LEXT(757.2,21,0)="ICD-10 Diagnosis"
"RTN","LEX2080C",83,0)
 S ^LEXT(757.2,21,1)="^LEX(757.01,"
"RTN","LEX2080C",84,0)
 S ^LEXT(757.2,21,2)="XTLK^LEXHLP"
"RTN","LEX2080C",85,0)
 S ^LEXT(757.2,21,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",86,0)
 S ^LEXT(757.2,21,4)="10D"
"RTN","LEX2080C",87,0)
 S ^LEXT(757.2,21,5)="10D^WRD^0^80^10D^0^1"
"RTN","LEX2080C",88,0)
 S ^LEXT(757.2,21,6)="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10D""))"
"RTN","LEX2080C",89,0)
 S ^LEXT(757.2,21,7)="10D"
"RTN","LEX2080C",90,0)
 S ^LEXT(757.2,21,100,0)="^^3^3^3130101^"
"RTN","LEX2080C",91,0)
 S ^LEXT(757.2,21,100,1,0)="This subset is artificially created through the use of a filter"
"RTN","LEX2080C",92,0)
 S ^LEXT(757.2,21,100,2,0)="which will not permit the selection of a term which does not "
"RTN","LEX2080C",93,0)
 S ^LEXT(757.2,21,100,3,0)="have a valid ICD-10 Diagnosis code assigned."
"RTN","LEX2080C",94,0)
 I $D(^LEXT(757.2,21,0)) N DA,DIK S DA=21,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",95,0)
 Q
"RTN","LEX2080C",96,0)
S22 ; Subset #22
"RTN","LEX2080C",97,0)
 I $D(^LEXT(757.2,22,0)) N DA,DIK S DA=22,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",98,0)
 S ^LEXT(757.2,22,0)="ICD-10 Procedures"
"RTN","LEX2080C",99,0)
 S ^LEXT(757.2,22,1)="^LEX(757.01,"
"RTN","LEX2080C",100,0)
 S ^LEXT(757.2,22,2)="XTLK^LEXHLP"
"RTN","LEX2080C",101,0)
 S ^LEXT(757.2,22,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",102,0)
 S ^LEXT(757.2,22,4)="10P"
"RTN","LEX2080C",103,0)
 S ^LEXT(757.2,22,5)="10P^WRD^0^80^10P^0^1"
"RTN","LEX2080C",104,0)
 S ^LEXT(757.2,22,6)="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10P""))"
"RTN","LEX2080C",105,0)
 S ^LEXT(757.2,22,7)="10P"
"RTN","LEX2080C",106,0)
 S ^LEXT(757.2,22,100,0)="^^3^3^3120622^"
"RTN","LEX2080C",107,0)
 S ^LEXT(757.2,22,100,1,0)="This subset is artificially created through the use of a filter"
"RTN","LEX2080C",108,0)
 S ^LEXT(757.2,22,100,2,0)="which will not permit the selection of a term which does not "
"RTN","LEX2080C",109,0)
 S ^LEXT(757.2,22,100,3,0)="have a valid ICD-10 Procedure code assigned."
"RTN","LEX2080C",110,0)
 I $D(^LEXT(757.2,22,0)) N DA,DIK S DA=22,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",111,0)
 Q
"RTN","LEX2080C",112,0)
S23 ; Subset #23
"RTN","LEX2080C",113,0)
 N DA,DIK S DA=23 I $D(^LEXT(757.2,DA,0)) S DIK="^LEXT(757.2," D ^DIK
"RTN","LEX2080C",114,0)
 Q
"RTN","LEX2080C",115,0)
S24 ; Subset #24
"RTN","LEX2080C",116,0)
 I $D(^LEXT(757.2,24,0)) N DA,DIK S DA=24,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",117,0)
 S ^LEXT(757.2,24,0)="Encounter Forms"
"RTN","LEX2080C",118,0)
 S ^LEXT(757.2,24,1)="^LEX(757.01,"
"RTN","LEX2080C",119,0)
 S ^LEXT(757.2,24,2)="XTLK^LEXHLP"
"RTN","LEX2080C",120,0)
 S ^LEXT(757.2,24,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",121,0)
 S ^LEXT(757.2,24,4)="ICD/ICP/10D/10P/DS4"
"RTN","LEX2080C",122,0)
 S ^LEXT(757.2,24,5)="EF1^WRD^^357^IBD^^1"
"RTN","LEX2080C",123,0)
 S ^LEXT(757.2,24,6)="I $$SC^LEXU(Y,""BEH/DIS;999/64/66/73/74/77/82/169/170/171;ICD/ICP/10D/10P/DS4"",+($G(LEXVDT)))"
"RTN","LEX2080C",124,0)
 S ^LEXT(757.2,24,7)="ICD/ICP/10D/10P/DS4"
"RTN","LEX2080C",125,0)
 S ^LEXT(757.2,24,100,0)="^^4^4^3130101^^^^"
"RTN","LEX2080C",126,0)
 S ^LEXT(757.2,24,100,1,0)="This subset is artificially created through the use of a"
"RTN","LEX2080C",127,0)
 S ^LEXT(757.2,24,100,2,0)="filter (not a physical subset).  It is identical to the"
"RTN","LEX2080C",128,0)
 S ^LEXT(757.2,24,100,3,0)="subset created for Problem List but without the use of"
"RTN","LEX2080C",129,0)
 S ^LEXT(757.2,24,100,4,0)="Unresolved Narratives and User Defaults."
"RTN","LEX2080C",130,0)
 I $D(^LEXT(757.2,24,0)) N DA,DIK S DA=24,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",131,0)
 Q
"RTN","LEX2080C",132,0)
S25 ; Subset #25
"RTN","LEX2080C",133,0)
 I $D(^LEXT(757.2,25,0)) N DA,DIK S DA=25,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",134,0)
 S ^LEXT(757.2,25,0)="Encounters Dx (ICD-9)"
"RTN","LEX2080C",135,0)
 S ^LEXT(757.2,25,1)="^LEX(757.01,"
"RTN","LEX2080C",136,0)
 S ^LEXT(757.2,25,2)="XTLK^LEXHLP"
"RTN","LEX2080C",137,0)
 S ^LEXT(757.2,25,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",138,0)
 S ^LEXT(757.2,25,4)="ICD"
"RTN","LEX2080C",139,0)
 S ^LEXT(757.2,25,5)="EF2^WRD^^^^^1"
"RTN","LEX2080C",140,0)
 S ^LEXT(757.2,25,6)="I $$SO^LEXU(Y,""ICD"",+($G(LEXVDT)))"
"RTN","LEX2080C",141,0)
 S ^LEXT(757.2,25,7)="ICD"
"RTN","LEX2080C",142,0)
 S ^LEXT(757.2,25,100,0)="^^3^3^3130101^^^^"
"RTN","LEX2080C",143,0)
 S ^LEXT(757.2,25,100,1,0)="This subset is artificially created through the use of a "
"RTN","LEX2080C",144,0)
 S ^LEXT(757.2,25,100,2,0)="filter (not a physical subset), and contains only those "
"RTN","LEX2080C",145,0)
 S ^LEXT(757.2,25,100,3,0)="expressions which are linked to an ICD-9 Diagnosis code."
"RTN","LEX2080C",146,0)
 I $D(^LEXT(757.2,25,0)) N DA,DIK S DA=26,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",147,0)
 Q
"RTN","LEX2080C",148,0)
S26 ; Subset #26
"RTN","LEX2080C",149,0)
 I $D(^LEXT(757.2,26,0)) N DA,DIK S DA=26,DIK="^LEXT(757.2," D IX2^DIK
"RTN","LEX2080C",150,0)
 S ^LEXT(757.2,26,0)="Encounters Dx (ICD-10)"
"RTN","LEX2080C",151,0)
 S ^LEXT(757.2,26,1)="^LEX(757.01,"
"RTN","LEX2080C",152,0)
 S ^LEXT(757.2,26,2)="XTLK^LEXHLP"
"RTN","LEX2080C",153,0)
 S ^LEXT(757.2,26,3)="XTLK^LEXPRNT"
"RTN","LEX2080C",154,0)
 S ^LEXT(757.2,26,4)="10D"
"RTN","LEX2080C",155,0)
 S ^LEXT(757.2,26,5)="EF3^WRD^^^^^1"
"RTN","LEX2080C",156,0)
 S ^LEXT(757.2,26,6)="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10D""))"
"RTN","LEX2080C",157,0)
 S ^LEXT(757.2,26,7)="10D"
"RTN","LEX2080C",158,0)
 S ^LEXT(757.2,26,100,0)="^^3^3^3130101^^^^"
"RTN","LEX2080C",159,0)
 S ^LEXT(757.2,26,100,1,0)="This subset is artificially created through the use of a "
"RTN","LEX2080C",160,0)
 S ^LEXT(757.2,26,100,2,0)="filter (not a physical subset), and contains only those "
"RTN","LEX2080C",161,0)
 S ^LEXT(757.2,26,100,3,0)="expressions which are linked to an ICD-10 Diagnosis code."
"RTN","LEX2080C",162,0)
 I $D(^LEXT(757.2,26,0)) N DA,DIK S DA=26,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080C",163,0)
 Q
"RTN","LEX2080P")
0^11^B91320913
"RTN","LEX2080P",1,0)
LEX2080P ;ISL/KER - LEX*2.0*80 Pre/Post Install ;04/21/2014
"RTN","LEX2080P",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEX2080P",3,0)
 ;               
"RTN","LEX2080P",4,0)
 ; Global Variables
"RTN","LEX2080P",5,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","LEX2080P",6,0)
 ;    ^LEX(757.31         N/A
"RTN","LEX2080P",7,0)
 ;    ^LEXM(              N/A
"RTN","LEX2080P",8,0)
 ;    ^ORD(101,           ICR    872
"RTN","LEX2080P",9,0)
 ;    ^TMP("LEXKID")      SACC 2.3.2.5.1
"RTN","LEX2080P",10,0)
 ;    ^TMP(BUILD)         SACC 2.3.2.5.1
"RTN","LEX2080P",11,0)
 ;               
"RTN","LEX2080P",12,0)
 ; External References
"RTN","LEX2080P",13,0)
 ;    $$FIND1^DIC         ICR   2051
"RTN","LEX2080P",14,0)
 ;    FILE^DIE            ICR   2053
"RTN","LEX2080P",15,0)
 ;    ^DIK                ICR  10013
"RTN","LEX2080P",16,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEX2080P",17,0)
 ;    IX2^DIK             ICR  10013
"RTN","LEX2080P",18,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX2080P",19,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX2080P",20,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEX2080P",21,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX2080P",22,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEX2080P",23,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEX2080P",24,0)
 ;    EN^XQOR             ICR  10101
"RTN","LEX2080P",25,0)
 ;               
"RTN","LEX2080P",26,0)
 ; Local Variables NEWed or KILLed by Kernel
"RTN","LEX2080P",27,0)
 ;     XPDNOQUE
"RTN","LEX2080P",28,0)
 ; 
"RTN","LEX2080P",29,0)
 Q
"RTN","LEX2080P",30,0)
PRE ; LEX*2.0*80 Pre-Install
"RTN","LEX2080P",31,0)
 S XPDNOQUE=1 I $D(ZTQUEUED) S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1 Q
"RTN","LEX2080P",32,0)
 Q
"RTN","LEX2080P",33,0)
POST ; LEX*2.0*80 Post-Install
"RTN","LEX2080P",34,0)
 S XPDNOQUE=1 I $D(ZTQUEUED) S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*57")=1,XPDQUIT("LEX*2.0*80")=1 Q
"RTN","LEX2080P",35,0)
 N LEX1,LEX2,LEX3,LEXA,LEXAC,LEXAO,LEXB,LEXBUILD,LEXC,LEXDUZ,LEXFI,LEXLOUD
"RTN","LEX2080P",36,0)
 N LEXFY,LEXH,LEXI,LEXID,LEXIN,LEXNM,LEXP,LEXPH,LEXPRO,LEXNOPRO,LEXPTYPE
"RTN","LEX2080P",37,0)
 N LEXQTR,LEXS,LEXSTR,LEXSCHG,LEXT,LEXU,LEXUSR,X,Y S LEXNOPRO=""
"RTN","LEX2080P",38,0)
 D IMP^LEX2080 Q:'$L(LEXBUILD)  D CON,LOAD,UPD,STATUS^LEX2080A,EN^LEX2080B,DEF S LEXLOUD=1
"RTN","LEX2080P",39,0)
 I '$D(^TMP("LEX*2.0*80",$J,"NODATA")) D:$L($T(POST2^LEXXGP1)) POST2^LEXXGP1
"RTN","LEX2080P",40,0)
 K ^TMP("LEX*2.0*80",$J,"NODATA"),LEXLOUD
"RTN","LEX2080P",41,0)
 Q
"RTN","LEX2080P",42,0)
LOAD ; Load Data
"RTN","LEX2080P",43,0)
 ;             
"RTN","LEX2080P",44,0)
 ;      LEXSHORT   Send Short Message
"RTN","LEX2080P",45,0)
 ;      LEXMSG     Flag to send Message
"RTN","LEX2080P",46,0)
 ;            
"RTN","LEX2080P",47,0)
 N LEXSHORT,LEXMSG,LEXSUBH S LEXSHORT="",LEXMSG=""
"RTN","LEX2080P",48,0)
 S:$L($G(LEXPTYPE)) LEXSUBH=$G(LEXPTYPE) S U="^"
"RTN","LEX2080P",49,0)
 S LEXB=$G(^LEXM(0,"BUILD")) Q:LEXB=""  Q:$G(LEXBUILD)=""
"RTN","LEX2080P",50,0)
 I $D(^TMP("LEX*2.0*80",$J,"NODATA")) Q
"RTN","LEX2080P",51,0)
 D:LEXB=LEXBUILD EN^LEXXGI
"RTN","LEX2080P",52,0)
LQ ; Load Quit
"RTN","LEX2080P",53,0)
 D KLEXM
"RTN","LEX2080P",54,0)
 Q
"RTN","LEX2080P",55,0)
 ;             
"RTN","LEX2080P",56,0)
KLEXM ; Subscripted Kill of ^LEXM
"RTN","LEX2080P",57,0)
 H 2 N DA S DA=0 F  S DA=$O(^LEXM(DA)) Q:+DA=0  K ^LEXM(DA)
"RTN","LEX2080P",58,0)
 N LEX S LEX=$G(^LEXM(0,"PRO")) K ^LEXM(0)
"RTN","LEX2080P",59,0)
 Q
"RTN","LEX2080P",60,0)
 ;             
"RTN","LEX2080P",61,0)
INS ; Install Message
"RTN","LEX2080P",62,0)
 K ^TMP("LEXKID",$J),LEXSCHG N LEXA,LEXAC,LEXAO,LEXB,LEXBUILD,LEXH
"RTN","LEX2080P",63,0)
 N LEXIN,LEXPRO,LEXS,LEXT,LEXU S LEXBUILD="LEX*2.0*80"
"RTN","LEX2080P",64,0)
 S LEXPRO=$$NOT,LEXS="LEX*2.0*80 Installation" H 2
"RTN","LEX2080P",65,0)
 D BL,TL((" "_LEXS)),TL(" ======================="),BL
"RTN","LEX2080P",66,0)
 S LEXAO="   As of:       "_$$ED($$NOW^XLFDT) D TL(LEXAO) S LEXAC=""
"RTN","LEX2080P",67,0)
 S LEXA=$$UCI S:$L($P(LEXA,"^",1)) LEXAC="   In Account:  "
"RTN","LEX2080P",68,0)
 S LEXAC=LEXAC_$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEX2080P",69,0)
 S:$L($P(LEXA,"^",2)) LEXAC=LEXAC_"  "_$P(LEXA,"^",2) D TL(LEXAC) S LEXU=$$USR
"RTN","LEX2080P",70,0)
 S:$L($P(LEXU,"^",1)) LEXU="   Maint By:    "_$P(LEXU,"^",1)_"   "_$P(LEXU,"^",2) D TL(LEXU)
"RTN","LEX2080P",71,0)
 S LEXB="   Build:       "_LEXBUILD D TL(LEXB) S LEXIN=$P($G(LEXPRO),"^",1) I LEXIN>0 D
"RTN","LEX2080P",72,0)
 . S LEXT="   Protocol:    "_"LEXICAL SERVICES UPDATE" D BL,TL(LEXT) S LEXT="   Invoked:     "_$$ED(LEXIN) D TL(LEXT),BL
"RTN","LEX2080P",73,0)
 D:+($G(^TMP("LEXKID",$J,0)))>0 MAIL^LEX2080 K ^TMP("LEXKID",$J)
"RTN","LEX2080P",74,0)
 Q
"RTN","LEX2080P",75,0)
NOT(X) ; Notify by Protocol
"RTN","LEX2080P",76,0)
 N LEXIN,LEXFI,LEXID,LEXP,Y K LEXSCHG S LEXFI=0,LEXIN="",LEXSCHG("LEX")=""
"RTN","LEX2080P",77,0)
 S LEXP=+($O(^ORD(101,"B","LEXICAL SERVICES UPDATE",0))) Q:LEXP=0 ""  S X=LEXP_";ORD(101," D EN^XQOR
"RTN","LEX2080P",78,0)
 S:$P($G(LEXSCHG("LEX")),".",1)?7N LEXIN=$G(LEXSCHG("LEX"))
"RTN","LEX2080P",79,0)
 D:+LEXIN>0 BMES^XPDUTL(("  Protocol 'LEXICAL SERVICES UPDATE' invoked  "_$$ED(LEXIN))),MES^XPDUTL(" ") S X=LEXIN
"RTN","LEX2080P",80,0)
 Q X
"RTN","LEX2080P",81,0)
 ;            
"RTN","LEX2080P",82,0)
 ; Miscellaneous
"RTN","LEX2080P",83,0)
ED(X) ;   External Date
"RTN","LEX2080P",84,0)
 N Y S Y=$$FMTE^XLFDT($G(X)) S:Y["@" Y=$P(Y,"@",1)_"  "_$P(Y,"@",2,299) S:$L(Y) X=Y
"RTN","LEX2080P",85,0)
 Q X
"RTN","LEX2080P",86,0)
UCI(X) ;   UCI where Lexicon is installed
"RTN","LEX2080P",87,0)
 N LEXU,LEXP,LEXT,Y X ^%ZOSF("UCI") S LEXU=Y,LEXP=""
"RTN","LEX2080P",88,0)
 S LEXP=$S($$PROD^XUPROD(1):" (Production)",1:" (Test)")
"RTN","LEX2080P",89,0)
 S:LEXU[","&($L($P(LEXU,",",1))>3) LEXU=$P(LEXU,",",1)
"RTN","LEX2080P",90,0)
 S X="",$P(X,"^",1)=LEXU,$P(X,"^",2)=LEXP
"RTN","LEX2080P",91,0)
 Q X
"RTN","LEX2080P",92,0)
USR(X) ;   User/Person Installing
"RTN","LEX2080P",93,0)
 N LEXDUZ,LEXUSR,LEXPH,LEXNM S LEXDUZ=+($G(DUZ)) Q:+LEXDUZ'>0 "UNKNOWN^"  S LEXNM=$$GET1^DIQ(200,+LEXDUZ,.01) Q:'$L(LEXNM) "UNKNOWN^"
"RTN","LEX2080P",94,0)
 S LEXUSR=LEXDUZ S LEXPH=$$GET1^DIQ(200,+LEXUSR,.132) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXUSR,.131)
"RTN","LEX2080P",95,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXUSR,.133) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXUSR,.134)
"RTN","LEX2080P",96,0)
 S LEXUSR=$$GET1^DIQ(200,+LEXDUZ,.01),X=LEXUSR_"^"_LEXPH
"RTN","LEX2080P",97,0)
 Q X
"RTN","LEX2080P",98,0)
UPD ;   Update to data after load
"RTN","LEX2080P",99,0)
 N DA,DIK S DA=5009688
"RTN","LEX2080P",100,0)
 S ^LEX(757.033,DA,0)="10DS02.0^S02.0^3120324^30"
"RTN","LEX2080P",101,0)
 S ^LEX(757.033,DA,1,0)="^757.331D^^1"
"RTN","LEX2080P",102,0)
 S ^LEX(757.033,DA,1,1,0)="3141001^1"
"RTN","LEX2080P",103,0)
 S ^LEX(757.033,DA,2,0)="^757.332D^1^1"
"RTN","LEX2080P",104,0)
 S ^LEX(757.033,DA,2,1,0)="3141001"
"RTN","LEX2080P",105,0)
 S ^LEX(757.033,DA,2,1,1)="Fracture of vault of skull"
"RTN","LEX2080P",106,0)
 S ^LEX(757.033,DA,3,0)="^757.043D^1^1"
"RTN","LEX2080P",107,0)
 S ^LEX(757.033,DA,3,1,0)="3141001"
"RTN","LEX2080P",108,0)
 S ^LEX(757.033,DA,3,1,1)="Fracture of vault of skull"
"RTN","LEX2080P",109,0)
 S DA=5009688,DIK="^LEX(757.033," D IX1^DIK
"RTN","LEX2080P",110,0)
 I $G(^LEX(757.01,332908,5,2,0))="HYPERTENSION" D
"RTN","LEX2080P",111,0)
 . N DA,DIK S DA(1)=332908,DA=2,DIK="^LEX(757.01,"_DA(1)_",5," D ^DIK
"RTN","LEX2080P",112,0)
 I $G(^LEX(757.01,332908,5,3,0))="HYPERTENSIVE" D
"RTN","LEX2080P",113,0)
 . N DA,DIK S DA(1)=332908,DA=3,DIK="^LEX(757.01,"_DA(1)_",5," D ^DIK
"RTN","LEX2080P",114,0)
 I $G(^ICD9(13450,68,2,2,5,0))="HYPERTENSION" D
"RTN","LEX2080P",115,0)
 . N DA,DIK S DA(2)=13450,DA(1)=2,DA=5,DIK="^ICD9("_DA(2)_",68,"_DA(1)_",2," D ^DIK
"RTN","LEX2080P",116,0)
 I $G(^ICD9(13450,68,2,2,6,0))="HYPERTENSIVE" D
"RTN","LEX2080P",117,0)
 . N DA,DIK S DA(2)=13450,DA(1)=2,DA=6,DIK="^ICD9("_DA(2)_",68,"_DA(1)_",2," D ^DIK
"RTN","LEX2080P",118,0)
 I $G(^ICD9(502758,68,1,2,2,0))="HYPERTENSION" D
"RTN","LEX2080P",119,0)
 . N DA,DIK S DA(2)=502758,DA(1)=1,DA=2,DIK="^ICD9("_DA(2)_",68,"_DA(1)_",2," D ^DIK
"RTN","LEX2080P",120,0)
 I $G(^ICD9(502758,68,1,2,3,0))="HYPERTENSIVE" D
"RTN","LEX2080P",121,0)
 . N DA,DIK S DA(2)=502758,DA(1)=1,DA=3,DIK="^ICD9("_DA(2)_",68,"_DA(1)_",2," D ^DIK
"RTN","LEX2080P",122,0)
 S ^ICD9(509440,68,1,2,0)="^80.682^2^2"
"RTN","LEX2080P",123,0)
 S ^ICD9(509440,68,1,2,1,0)="FARM"
"RTN","LEX2080P",124,0)
 S ^ICD9(509440,68,1,2,2,0)="FARMERS"
"RTN","LEX2080P",125,0)
 S DA=509440,DIK="^ICD9(" D IX1^DIK
"RTN","LEX2080P",126,0)
 S ^ICD9(9127,68,1,2,0)="^80.682^1^1"
"RTN","LEX2080P",127,0)
 S ^ICD9(9127,68,1,2,1,0)="FARM"
"RTN","LEX2080P",128,0)
 S DA=9127,DIK="^ICD9(" D IX1^DIK
"RTN","LEX2080P",129,0)
 Q
"RTN","LEX2080P",130,0)
CON ;   Conversion of Data
"RTN","LEX2080P",131,0)
 D DISP,SUBSET,NARR,OPTS,IMP
"RTN","LEX2080P",132,0)
 Q
"RTN","LEX2080P",133,0)
IMP ; Fix errant Implementation Dates
"RTN","LEX2080P",134,0)
 N CODE F CODE="250.00","294.9" D
"RTN","LEX2080P",135,0)
 . N STA F STA="0",2 K ^LEX(757.02,"ACT",(CODE_" "),STA,3131001)
"RTN","LEX2080P",136,0)
 . N SIEN S SIEN=0 F  S SIEN=$O(^LEX(757.02,"CODE",(CODE_" "),SIEN)) Q:+SIEN'>0  D
"RTN","LEX2080P",137,0)
 . . N HIST S HIST=0 F  S HIST=$O(^LEX(757.02,+SIEN,4,HIST)) Q:+HIST'>0  D
"RTN","LEX2080P",138,0)
 . . . N ND,DA,DIK,STA,EFF S ND=$G(^LEX(757.02,SIEN,4,HIST,0)),STA=$P(ND,"^",2),EFF=$P(ND,"^",1)
"RTN","LEX2080P",139,0)
 . . . Q:STA'?1N  Q:EFF'?7N  Q:STA>0  Q:EFF'=3131001
"RTN","LEX2080P",140,0)
 . . . S DA(1)=SIEN,DA=HIST,DIK="^LEX(757.02,"_DA(1)_",4," D ^DIK
"RTN","LEX2080P",141,0)
 . . K ^LEX(757.02,SIEN,4,"B",3131001)
"RTN","LEX2080P",142,0)
 Q
"RTN","LEX2080P",143,0)
OPTS ; Option Names
"RTN","LEX2080P",144,0)
 N OPT,OIEN,ONAM,FDA,MSG,TIEN,TNM
"RTN","LEX2080P",145,0)
 S OPT="LEX CSV ICD QUERY",OIEN=$$FIND1^DIC(19,,,OPT) I OIEN>0 D
"RTN","LEX2080P",146,0)
 . S ONAM="ICD Diagnosis Code Set Query" S FDA(19,(OIEN_","),1)=ONAM
"RTN","LEX2080P",147,0)
 . S FDA(19,(OIEN_","),1.1)=$$UP^XLFSTR(ONAM)
"RTN","LEX2080P",148,0)
 . D FILE^DIE("E","FDA","MSG")
"RTN","LEX2080P",149,0)
 S OPT="LEX CSV ICP QUERY",OIEN=$$FIND1^DIC(19,,,OPT) I OIEN>0 D
"RTN","LEX2080P",150,0)
 . S ONAM="ICD Procedure Code Set Query" S FDA(19,(OIEN_","),1)=ONAM
"RTN","LEX2080P",151,0)
 . S FDA(19,(OIEN_","),1.1)=$$UP^XLFSTR(ONAM)
"RTN","LEX2080P",152,0)
 . D FILE^DIE("E","FDA","MSG")
"RTN","LEX2080P",153,0)
 S OPT="LEX CSV",OIEN=$$FIND1^DIC(19,,"X",OPT) I OIEN>0 D
"RTN","LEX2080P",154,0)
 . N TID,TIEN,MSG S TID="ICD",TIEN=$$FIND1^DIC(19.01,(","_OIEN_","),"X",TID,"C",,"MSG")
"RTN","LEX2080P",155,0)
 . S:TIEN'>0 TIEN=$$FIND1^DIC(19.01,(","_OIEN_","),"X","DX","C",,"MSG") I TIEN>0 D
"RTN","LEX2080P",156,0)
 . . N TNM,FDA,MSG S TNM="DX",FDA(19.01,(TIEN_","_OIEN_","),2)=TNM
"RTN","LEX2080P",157,0)
 . . D FILE^DIE("E","FDA","MSG")
"RTN","LEX2080P",158,0)
 . S TID="ICP",TIEN=$$FIND1^DIC(19.01,(","_OIEN_","),"X",TID,"C",,"MSG")
"RTN","LEX2080P",159,0)
 . S:TIEN'>0 TIEN=$$FIND1^DIC(19.01,(","_OIEN_","),"X","PR","C",,"MSG") I TIEN>0 D
"RTN","LEX2080P",160,0)
 . . N TNM,FDA,MSG S TNM="PR",FDA(19.01,(TIEN_","_OIEN_","),2)=TNM
"RTN","LEX2080P",161,0)
 . . D FILE^DIE("E","FDA","MSG")
"RTN","LEX2080P",162,0)
 Q
"RTN","LEX2080P",163,0)
DISP ; Displays
"RTN","LEX2080P",164,0)
 D BMES^XPDUTL(" Updating ICD displays to include ICD-10")
"RTN","LEX2080P",165,0)
 N IEN,NEW,OLD S IEN=1,OLD="ICD",NEW="ICD/10D" D USER
"RTN","LEX2080P",166,0)
 S IEN=2,OLD="ICD/ICP",NEW="ICD/ICP/10D/10P" D USER
"RTN","LEX2080P",167,0)
 S IEN=3,OLD="ICD/ICP/CPT/CPC",NEW="ICD/ICP/10D/10P/CPT/CPC" D USER
"RTN","LEX2080P",168,0)
 S IEN=4,OLD="ICD/ICP/CPT/CPC/DS4",NEW="ICD/ICP/10D/10P/CPT/CPC/DS4"
"RTN","LEX2080P",169,0)
 D USER S IEN=7,OLD="ICD/ICP/CPT/CPC/DS4/SNM/NAN/OMA/NIC/SCC/SCT"
"RTN","LEX2080P",170,0)
 S NEW="ICD/ICP/10D/10P/CPT/CPC/DS4/SNM/NAN/OMA/NIC/SCC/SCT" D USER
"RTN","LEX2080P",171,0)
 S IEN=8,OLD="ICP/ICD/CPT/CPC/DS3/DS4/SNM/SCC/NAN/NIC/ACR/AIR/COS/"
"RTN","LEX2080P",172,0)
 S OLD=OLD_"CSP/CST/DXP/MCM/UMD/OMA/UWA/SCT"
"RTN","LEX2080P",173,0)
 S NEW="ICP/ICD/10D/10P/CPT/CPC/DS3/DS4/SNM/SCC/NAN/NIC/ACR/AIR/"
"RTN","LEX2080P",174,0)
 S NEW=NEW_"COS/CSP/CST/DXP/MCM/UMD/OMA/UWA/SCT" D USER
"RTN","LEX2080P",175,0)
 S IEN=9,OLD="DS4/ICD",NEW="DS4/ICD/10D" D USER
"RTN","LEX2080P",176,0)
 Q
"RTN","LEX2080P",177,0)
DEF ; Definitions file hard re-index
"RTN","LEX2080P",178,0)
 K ^LEXT(757.2,"AA"),^LEXT(757.2,"AB"),^LEXT(757.2,"ADEF")
"RTN","LEX2080P",179,0)
 K ^LEXT(757.2,"AN"),^LEXT(757.2,"APPS"),^LEXT(757.2,"AUD")
"RTN","LEX2080P",180,0)
 K ^LEXT(757.2,"B"),^LEXT(757.2,"C"),^LEXT(757.2,"D")
"RTN","LEX2080P",181,0)
 K ^LEXT(757.2,1,200,"B"),^LEXT(757.2,4,200,"B")
"RTN","LEX2080P",182,0)
 N IEN S IEN=0 F  S IEN=$O(^LEXT(757.2,IEN)) Q:+IEN'>0  D
"RTN","LEX2080P",183,0)
 . N DA,DIK S DA=IEN,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2080P",184,0)
 Q
"RTN","LEX2080P",185,0)
USER ; User Display Update
"RTN","LEX2080P",186,0)
 Q:+($G(IEN))'>0  Q:'$L($G(OLD))  Q:'$L($G(NEW))  Q:$L(NEW)'>$L(OLD)
"RTN","LEX2080P",187,0)
 Q:'$D(^LEX(757.31,+IEN,0))  Q:'$D(^LEX(757.31,+IEN,1))
"RTN","LEX2080P",188,0)
 S ^LEX(757.31,+IEN,1)=NEW  N APP,USR,DEF
"RTN","LEX2080P",189,0)
 S APP=0 F  S APP=$O(^LEXT(757.2,APP)) Q:+APP'>0  D
"RTN","LEX2080P",190,0)
 . S USR=0 F  S USR=$O(^LEXT(757.2,APP,200,USR)) Q:+USR'>0  D
"RTN","LEX2080P",191,0)
 . . I $G(^LEXT(757.2,APP,200,USR,2))=OLD D
"RTN","LEX2080P",192,0)
 . . . S ^LEXT(757.2,APP,200,USR,2)=NEW
"RTN","LEX2080P",193,0)
 Q
"RTN","LEX2080P",194,0)
SUBSET ; Sub-Sets
"RTN","LEX2080P",195,0)
 S ^LEXT(757.2,21,0)="ICD-10 Diagnosis",^LEXT(757.2,21,1)="^LEX(757.01,",^LEXT(757.2,21,2)="XTLK^LEXHLP"
"RTN","LEX2080P",196,0)
 S ^LEXT(757.2,21,3)="XTLK^LEXPRNT",^LEXT(757.2,21,4)="10D",^LEXT(757.2,21,5)="10D^WRD^0^80^10D^0^1"
"RTN","LEX2080P",197,0)
 S ^LEXT(757.2,21,6)="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10D""))"
"RTN","LEX2080P",198,0)
 S ^LEXT(757.2,21,7)="10D",^LEXT(757.2,21,100,0)="^^3^3^3111115^^^^"
"RTN","LEX2080P",199,0)
 S ^LEXT(757.2,21,100,1,0)="This subset is artifically created through the use of"
"RTN","LEX2080P",200,0)
 S ^LEXT(757.2,21,100,2,0)="a filter which will not permit the selection of a term"
"RTN","LEX2080P",201,0)
 S ^LEXT(757.2,21,100,3,0)="which does not have a valid ICD-10 Diagnosis code assigned."
"RTN","LEX2080P",202,0)
 S ^LEXT(757.2,22,0)="ICD-10 Procedures",^LEXT(757.2,22,1)="^LEX(757.01,",^LEXT(757.2,22,2)="XTLK^LEXHLP"
"RTN","LEX2080P",203,0)
 S ^LEXT(757.2,22,3)="XTLK^LEXPRNT",^LEXT(757.2,22,4)="10P",^LEXT(757.2,22,5)="10P^WRD^0^80^10P^0^1"
"RTN","LEX2080P",204,0)
 S ^LEXT(757.2,22,6)="I $L($$ONE^LEXU(+Y,+($G(LEXVDT)),""10P""))"
"RTN","LEX2080P",205,0)
 S ^LEXT(757.2,22,7)="10P",^LEXT(757.2,22,100,0)="^^3^3^3111115^^^^"
"RTN","LEX2080P",206,0)
 S ^LEXT(757.2,22,100,1,0)="This subset is artifically created through the use of"
"RTN","LEX2080P",207,0)
 S ^LEXT(757.2,22,100,2,0)="a filter which will not permit the selection of a term"
"RTN","LEX2080P",208,0)
 S ^LEXT(757.2,22,100,3,0)="which does not have a valid ICD-10 Procedure code assigned."
"RTN","LEX2080P",209,0)
 N DA,DIK S DIK="^LEXT(757.2," F DA=21,22 D IX1^DIK
"RTN","LEX2080P",210,0)
 Q
"RTN","LEX2080P",211,0)
NARR ; Narratives
"RTN","LEX2080P",212,0)
 K ^LEX(757.06) S ^LEX(757.06,0)="UNRESOLVED NARRATIVES^757.06^^0"
"RTN","LEX2080P",213,0)
 Q
"RTN","LEX2080P",214,0)
BL ;   Blank Line
"RTN","LEX2080P",215,0)
 D TL(" ")
"RTN","LEX2080P",216,0)
 Q
"RTN","LEX2080P",217,0)
TL(X) ;   Text Line
"RTN","LEX2080P",218,0)
 N LEXI S LEXI=$O(^TMP("LEXKID",$J," "),-1),LEXI=LEXI+1,^TMP("LEXKID",$J,LEXI)=$G(X),^TMP("LEXKID",$J,0)=LEXI
"RTN","LEX2080P",219,0)
 Q
"RTN","LEX2080P",220,0)
M(X) ;   Blank/Text
"RTN","LEX2080P",221,0)
 D MES^XPDUTL($G(X)) Q
"RTN","LEX2080P",222,0)
BM(X) ;   Blank/Text
"RTN","LEX2080P",223,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","LEX2080P",224,0)
CLR ;
"RTN","LEX2080P",225,0)
 N ZTQUEUED,XPDABORT,XPDQUIT,XPDQUIT
"RTN","LEX2080P",226,0)
 Q
"RTN","LEXA")
0^68^B53072237
"RTN","LEXA",1,0)
LEXA ;ISL/KER - Look-up (Silent) ;04/21/2014
"RTN","LEXA",2,0)
 ;;2.0;LEXICON UTILITY;**3,4,6,19,25,36,38,43,55,73,80**;Sep 23, 1996;Build 1
"RTN","LEXA",3,0)
 ;               
"RTN","LEXA",4,0)
 ; Global Variables
"RTN","LEXA",5,0)
 ;    ^LEX(757.13         N/A
"RTN","LEXA",6,0)
 ;    ^LEX(757.14         N/A
"RTN","LEXA",7,0)
 ;    ^LEX(757.41         N/A
"RTN","LEXA",8,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEXA",9,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXA",10,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXA",11,0)
 ;               
"RTN","LEXA",12,0)
 ; External References
"RTN","LEXA",13,0)
 ;    ^DIM                ICR  10016
"RTN","LEXA",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXA",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXA",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXA",17,0)
 ;               
"RTN","LEXA",18,0)
LOOK(LEXX,LEXAP,LEXLL,LEXSUB,LEXCDT,LEXXSR,LEXXCT) ; Main Lexicon Lookup
"RTN","LEXA",19,0)
 ;
"RTN","LEXA",20,0)
 ; Input 
"RTN","LEXA",21,0)
 ; 
"RTN","LEXA",22,0)
 ;   Parameters
"RTN","LEXA",23,0)
 ;     LEXX      User Input
"RTN","LEXA",24,0)
 ;     LEXAP     Application
"RTN","LEXA",25,0)
 ;     LEXLL     Selection List Length
"RTN","LEXA",26,0)
 ;     LEXSUB    Mode/Subset (file 757.2)
"RTN","LEXA",27,0)
 ;     LEXVDT    Date to use for retrieving/displaying codes
"RTN","LEXA",28,0)
 ;     LEXXSR    Source (file 757.14)
"RTN","LEXA",29,0)
 ;     LEXXCT    Category (file 757.13)
"RTN","LEXA",30,0)
 ;                   
"RTN","LEXA",31,0)
 ;   Optional Global search parameters
"RTN","LEXA",32,0)
 ;     ^TMP("LEXSCH",$J,PAR)=VALUE
"RTN","LEXA",33,0)
 ;     
"RTN","LEXA",34,0)
 ; Output
"RTN","LEXA",35,0)
 ;     
"RTN","LEXA",36,0)
 ;   Global Arrays
"RTN","LEXA",37,0)
 ;     Expressions found ^TMP("LEXFND",$J,FQ,IEN)=DT
"RTN","LEXA",38,0)
 ;     Review List       ^TMP("LEXHITS",$J,#)=IEN^DT
"RTN","LEXA",39,0)
 ;     
"RTN","LEXA",40,0)
 ;   Local Array
"RTN","LEXA",41,0)
 ;     Display List      LEX("LIST",#)
"RTN","LEXA",42,0)
 ;                   
"RTN","LEXA",43,0)
 ;                       LEX("LIST",0)=LAST^TOTAL
"RTN","LEXA",44,0)
 ;                       LEX("LIST",#)=IEN^DT
"RTN","LEXA",45,0)
 ; 
"RTN","LEXA",46,0)
 S LEXCDT=$P($G(LEXCDT),".",1) S:LEXCDT?7N LEXVDT=LEXCDT D VDT^LEXU K DIERR,LEX
"RTN","LEXA",47,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",48,0)
 K ^TMP("LEXSCH",$J,"EXC"),^TMP("LEXSCH",$J,"EXM")
"RTN","LEXA",49,0)
 K:+$G(^TMP("LEXSCH",$J,"ADF",0))=0 ^TMP("LEXSCH",$J)
"RTN","LEXA",50,0)
 I $D(DIC(0)) D
"RTN","LEXA",51,0)
 .S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXA",52,0)
 .S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"I",2)
"RTN","LEXA",53,0)
 S LEXQ=1,LEXX=$$UP^XLFSTR($G(LEXX))
"RTN","LEXA",54,0)
 I LEXX=""!(LEXX["^") D EN^LEXAR("^",$G(LEXVDT)) K LEXAP D EXIT Q
"RTN","LEXA",55,0)
 N LEXSC S LEXSC=$$CAT($G(LEXXCT),$G(LEXXSR))
"RTN","LEXA",56,0)
 N LEXXCT,LEXXSR S:+($P(LEXSC,"^",1))>0 LEXXCT=+($P(LEXSC,"^",1)) S:+($P(LEXSC,"^",2))>0 LEXXSR=+($P(LEXSC,"^",2))
"RTN","LEXA",57,0)
 S LEXAP=$$UP^XLFSTR($G(LEXAP))
"RTN","LEXA",58,0)
 S LEXLL=+$G(LEXLL)
"RTN","LEXA",59,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXA",60,0)
 S ^TMP("LEXSCH",$J,"APP",0)=+$$AP^LEXDFN2($G(LEXAP))
"RTN","LEXA",61,0)
 S:^TMP("LEXSCH",$J,"APP",0)=0 ^TMP("LEXSCH",$J,"APP",0)=1
"RTN","LEXA",62,0)
 S:$L($G(LEXDISP)) ^TMP("LEXSCH",$J,"DIS",0)=$G(LEXDISP)
"RTN","LEXA",63,0)
 S:LEXSUB="" LEXSUB=^TMP("LEXSCH",$J,"APP",0)
"RTN","LEXA",64,0)
 S:$L($G(DIC("S"))) ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEXA",65,0)
 S:LEXLL=0 LEXLL=5
"RTN","LEXA",66,0)
 S ^TMP("LEXSCH",$J,"LEN",0)=LEXLL
"RTN","LEXA",67,0)
X ; Search for X
"RTN","LEXA",68,0)
 I '$L($G(LEXX)) D  D EXIT Q
"RTN","LEXA",69,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",70,0)
 .S LEX("ERR",LEX("ERR",0))="User input LEXX missing or invalid"
"RTN","LEXA",71,0)
APP ; Application
"RTN","LEXA",72,0)
 I +$G(^TMP("LEXSCH",$J,"APP",0))=0!('$D(^LEXT(757.2,+$G(^TMP("LEXSCH",$J,"APP",0)),0))) D  D EXIT Q
"RTN","LEXA",73,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",74,0)
 .S LEX("ERR",LEX("ERR",0))="Calling application identification LEXAP missing or invalid"
"RTN","LEXA",75,0)
USR ; User
"RTN","LEXA",76,0)
 I +$G(DUZ)=0!('$L($$GET1^DIQ(200,+($G(DUZ)),.01))) D  D EXIT Q
"RTN","LEXA",77,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",78,0)
 .S LEX("ERR",LEX("ERR",0))="User identification DUZ missing or invalid"
"RTN","LEXA",79,0)
 N LEXFND,LEXISCD
"RTN","LEXA",80,0)
 S (LEXFND,LEXISCD)=0
"RTN","LEXA",81,0)
 S ^TMP("LEXSCH",$J,"USR",0)=+$G(DUZ)
"RTN","LEXA",82,0)
 S ^TMP("LEXSCH",$J,"NAR",0)=LEXX
"RTN","LEXA",83,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$$UP^XLFSTR(LEXX)
"RTN","LEXA",84,0)
DEF ; Defaults                     CONFIG^LEXSET
"RTN","LEXA",85,0)
 N LEXFIL,LEXDSP,LEXFILR S:$L($G(DIC("S"))) LEXFIL=DIC("S")
"RTN","LEXA",86,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",87,0)
 N LEXNS,LEXSS S LEXNS=$$NS^LEXDFN2(LEXAP),LEXSS=$$MD^LEXDFN2(LEXSUB)
"RTN","LEXA",88,0)
 I +$G(^TMP("LEXSCH",$J,"ADF",0))=0 D CONFIG^LEXSET(LEXNS,LEXSS,$G(LEXVDT))
"RTN","LEXA",89,0)
 S:$L($G(LEXDISP)) ^TMP("LEXSCH",$J,"DIS",0)=$G(LEXDISP)
"RTN","LEXA",90,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",91,0)
 S:$L($G(LEXFIL)) LEXFIL=$$FIL(LEXFIL)
"RTN","LEXA",92,0)
 S LEXFIL=$G(LEXFIL)
"RTN","LEXA",93,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",94,0)
 D MAN
"RTN","LEXA",95,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",96,0)
 D SETUP^LEXAM($G(^TMP("LEXSCH",$J,"VOC",0)))
"RTN","LEXA",97,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",98,0)
LK ; Look-up
"RTN","LEXA",99,0)
HLP ; Look-up Help                 ADDL^LEXAL
"RTN","LEXA",100,0)
 I (LEXX["?"&($P(LEXX,"?",2)'?1N.N))!(LEXX["??") D  I $D(LEX("HLP")) D EXIT Q
"RTN","LEXA",101,0)
 . D QMH^LEXAR3(LEXX)
"RTN","LEXA",102,0)
IEN ; Look-up by IEN               ADDL^LEXAL PCH 4
"RTN","LEXA",103,0)
 I ^TMP("LEXSCH",$J,"NAR",0)?1"`"1N.N D  I $D(LEX("LIST")) D EXIT Q
"RTN","LEXA",104,0)
 . N LEXE,LEXUN
"RTN","LEXA",105,0)
 . S LEXE=+$E(^TMP("LEXSCH",$J,"NAR",0),2,$L(^TMP("LEXSCH",$J,"NAR",0))) Q:LEXE=0
"RTN","LEXA",106,0)
 . S LEXUN=+$G(^TMP("LEXSCH",$J,"UNR",0))
"RTN","LEXA",107,0)
 . Q:'$D(^LEX(757.01,LEXE,0))
"RTN","LEXA",108,0)
 . D ADDL^LEXAL(LEXE,$$DES^LEXASC(LEXE),$$SO^LEXASO(LEXE,$G(^TMP("LEXSCH",$J,"DIS",0)),1,$G(LEXVDT)))
"RTN","LEXA",109,0)
 . I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXA",110,0)
 . I LEXUN>0,$L($G(^TMP("LEXSCH",$J,"NAR",0))) S LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXA",111,0)
 . I LEXUN>0,$L($G(^LEX(757.01,+$G(LEXE),0))) S LEX("NAR")=$G(^LEX(757.01,+$G(LEXE),0))
"RTN","LEXA",112,0)
SCT ; Look-up by Shortcuts         EN^LEXASC  
"RTN","LEXA",113,0)
 I +$G(^TMP("LEXSCH",$J,"SCT",0)),$D(^LEX(757.41,^TMP("LEXSCH",$J,"SCT",0))) D
"RTN","LEXA",114,0)
 . S LEXFND=$$EN^LEXASC(^TMP("LEXSCH",$J,"SCH",0),^TMP("LEXSCH",$J,"SCT",0),$G(LEXVDT))
"RTN","LEXA",115,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",116,0)
CODE ; Look-up by Code              EN^LEXABC
"RTN","LEXA",117,0)
 S LEXFND=$$EN^LEXABC(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",118,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",119,0)
 I $L($G(^TMP("LEXSCH",$J,"SCH",0))) D
"RTN","LEXA",120,0)
 . S:$D(^LEX(757.01,"AWRD",^TMP("LEXSCH",$J,"SCH",0))) LEXISCD=0
"RTN","LEXA",121,0)
 I +LEXFND'>0,+($G(LEXISCD))>0 D EXIT Q
"RTN","LEXA",122,0)
EXACT ; Look-up Exact Match          EN^LEXAB
"RTN","LEXA",123,0)
 S LEXFND=$$EN^LEXAB(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",124,0)
 K:+LEXFND=0 ^TMP("LEXFND",$J)
"RTN","LEXA",125,0)
 K ^TMP("LEXHIT",$J)
"RTN","LEXA",126,0)
KEYWRD ; Look-up by word              EN^LEXALK
"RTN","LEXA",127,0)
 D EN^LEXALK
"RTN","LEXA",128,0)
EXIT ; Clean-up and quit
"RTN","LEXA",129,0)
 K LEXQ,LEXDICS,LEXFIL,LEXFILR,LEXDSP,LEXSHOW,LEXSHCT,LEXSUB
"RTN","LEXA",130,0)
 K LEXOVR,LEXUN,LEXLKFL,LEXLKGL,LEXLKIX,LEXLKSH,LEXTKNS,LEXTKN
"RTN","LEXA",131,0)
 K LEXI Q:$D(LEX("HLP"))
"RTN","LEXA",132,0)
 D:$D(LEX("ERR")) CLN
"RTN","LEXA",133,0)
 I $D(LEX),+$G(LEX)=0,'$D(LEX("LIST")),$L($G(LEXX)) D
"RTN","LEXA",134,0)
 .N LEXC,LEXF,LEXV
"RTN","LEXA",135,0)
 .S LEXC=1
"RTN","LEXA",136,0)
 .S LEXF=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXA",137,0)
 .S LEXV=$G(^TMP("LEXSCH",$J,"VOC",0))
"RTN","LEXA",138,0)
 .D:+$G(^TMP("LEXSCH",$J,"UNR",0))>0 EN^LEXAR(LEXX,$G(LEXVDT))
"RTN","LEXA",139,0)
 .S:'$D(LEX("NAR")) LEX("NAR")=LEXX
"RTN","LEXA",140,0)
 .S LEX=0
"RTN","LEXA",141,0)
 .S:'$D(LEX("HLP")) LEX("HLP",LEXC)="    A suitable term could not be found based on user input"
"RTN","LEXA",142,0)
 .S:LEXF="I 1" LEXF=""
"RTN","LEXA",143,0)
 .I $L(LEXF)!(LEXV'="WRD"),'$D(LEX("HLP")) D
"RTN","LEXA",144,0)
 ..S LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_" and "
"RTN","LEXA",145,0)
 ..S LEXC=LEXC+1
"RTN","LEXA",146,0)
 ..S LEX("HLP",LEXC)="    current user defaults"
"RTN","LEXA",147,0)
 ..S LEX("HLP",0)=LEXC
"RTN","LEXA",148,0)
 .S:'$D(LEX("HLP")) LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_"."
"RTN","LEXA",149,0)
 Q
"RTN","LEXA",150,0)
CLN ; Clean
"RTN","LEXA",151,0)
 K LEXQ,LEXTKNS,LEXTKN,LEXI
"RTN","LEXA",152,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEXA",153,0)
 Q
"RTN","LEXA",154,0)
MAN ; Mandatory variables
"RTN","LEXA",155,0)
 N LEXERR
"RTN","LEXA",156,0)
 F LEXERR="SCH","VOC","APP","USR" D
"RTN","LEXA",157,0)
 .I '$L($G(^TMP("LEXSCH",$J,LEXERR,0))) D
"RTN","LEXA",158,0)
 ..S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",159,0)
 ..S LEX("ERR",LEX("ERR",0))="Mandatory variable ^TMP(""LEXSCH"",$J,"""_LEXERR_""",0) missing or invalid"
"RTN","LEXA",160,0)
 Q
"RTN","LEXA",161,0)
CAT(X,Y) ; Source Category
"RTN","LEXA",162,0)
 N LEX,LEXC,LEXI,LEXO,LEXS,LEXU S (X,LEX)=$G(X) Q:'$L(X) ""  Q:X?1N.N&('$D(^LEX(757.13,+X,0))) ""
"RTN","LEXA",163,0)
 S (LEXS,Y)=$G(Y) S:$L(LEXS) LEXS=$$SRC(LEXS) I X?1N.N,$D(^LEX(757.13,+X,0)) S X=+X S:+LEXS>0 X=X_"^"_+LEXS Q X
"RTN","LEXA",164,0)
 S LEXU=$$UP^XLFSTR(LEX),(X,LEXC)=+($O(^LEX(757.13,"C",LEXU,0))) Q:'$D(^LEX(757.13,"C",LEXU)) ""
"RTN","LEXA",165,0)
 I +LEXC>0,LEXC=+($O(^LEX(757.13,"C",LEXU," "),-1)) S X=+LEXC S:+LEXS>0 X=X_"^"_+LEXS Q X
"RTN","LEXA",166,0)
 S LEXO="",LEXI=0 F  S LEXI=$O(^LEX(757.13,"C",LEXU,LEXI)) Q:+LEXI'>0  D  Q:+LEXO>0
"RTN","LEXA",167,0)
 . S:$P($G(^LEX(757.13,LEXI,4)),"^",1)=LEXS LEXO=LEXI
"RTN","LEXA",168,0)
 S X="" S:+LEXO>0 X=+LEXO S:+LEXO>0&(+LEXS>0) X=X_"^"_+LEXS
"RTN","LEXA",169,0)
 Q X
"RTN","LEXA",170,0)
SRC(X) ; Source
"RTN","LEXA",171,0)
 N LEX,LEXU S (LEX,X)=$TR($G(X),"`","") Q:'$L(LEX) ""  Q:X?1N.N&('$D(^LEX(757.14,+X,0))) ""  Q:X?1N.N&($D(^LEX(757.14,+X,0))) +X
"RTN","LEXA",172,0)
 S LEXU=$$UP^XLFSTR(LEX),X=$O(^LEX(757.14,"B",LEX,0)) Q:+X>0 +X  S X=$O(^LEX(757.14,"B",LEXU,0)) Q:+X>0 +X
"RTN","LEXA",173,0)
 Q ""
"RTN","LEXA",174,0)
FIL(X) ; Validate Filter
"RTN","LEXA",175,0)
 S X=$G(X) N DIC Q:'$L(X) X D ^DIM S:'$D(X) X=""
"RTN","LEXA",176,0)
 Q X
"RTN","LEXA",177,0)
 ;                   
"RTN","LEXA",178,0)
INFO(X,LEXVDT) ; Get Information about a Term
"RTN","LEXA",179,0)
 ; 
"RTN","LEXA",180,0)
 ; Input
"RTN","LEXA",181,0)
 ;                   
"RTN","LEXA",182,0)
 ;    X       Internal Entry Number in file 757.01
"RTN","LEXA",183,0)
 ;    LEXVDT  Optional date - retrieves codes active
"RTN","LEXA",184,0)
 ;            on a specified date
"RTN","LEXA",185,0)
 ;      
"RTN","LEXA",186,0)
 ; Output
"RTN","LEXA",187,0)
 ;          
"RTN","LEXA",188,0)
 ;    Local Array LEX("SEL") or null
"RTN","LEXA",189,0)
 ;                   
"RTN","LEXA",190,0)
 ;    LEX("SEL","EXP")   Expressions Concepts/Synonyms/Variants
"RTN","LEXA",191,0)
 ;    LEX("SEL","SIG")   Expression definition
"RTN","LEXA",192,0)
 ;    LEX("SEL","SRC")   Classification Codes
"RTN","LEXA",193,0)
 ;    LEX("SEL"."STY")   Semantic Class/Semantic Types
"RTN","LEXA",194,0)
 ;    LEX("SEL","VAS")   VA Classification Sources
"RTN","LEXA",195,0)
 ;                   
"RTN","LEXA",196,0)
 K LEX("SEL") S X=+$G(X) Q:X=0  Q:'$D(^LEX(757.01,X,0))
"RTN","LEXA",197,0)
 N LEXD S LEXD=$G(LEXVDT) S:+LEXD'>0 LEXD=$$DT^XLFDT
"RTN","LEXA",198,0)
 N LEXVDT S LEXVDT=LEXD D SET^LEXAR4(X,LEXVDT)
"RTN","LEXA",199,0)
 Q
"RTN","LEXA",200,0)
SCH ; Search Parameters
"RTN","LEXA",201,0)
 N NN,NC S NN="^TMP(""LEXSCH"","_$J_")",NC="^TMP(""LEXSCH"","_$J_","
"RTN","LEXA",202,0)
 W ! F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","LEXA",203,0)
 W !
"RTN","LEXA1")
0^118^B69671285
"RTN","LEXA1",1,0)
LEXA1 ;ISL/KER - Lexicon Look-up (Loud) ;04/21/2014
"RTN","LEXA1",2,0)
 ;;2.0;LEXICON UTILITY;**3,4,6,11,15,38,55,73,80**;Sep 23, 1996;Build 1
"RTN","LEXA1",3,0)
 ;               
"RTN","LEXA1",4,0)
 ; Global Variables
"RTN","LEXA1",5,0)
 ;    ^DISV(              ICR    510
"RTN","LEXA1",6,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXA1",7,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXA1",8,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXA1",9,0)
 ;               
"RTN","LEXA1",10,0)
 ; External References
"RTN","LEXA1",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXA1",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXA1",13,0)
 ;               
"RTN","LEXA1",14,0)
 ; Local Variables NEWed or KILLed by calling application
"RTN","LEXA1",15,0)
 ; 
"RTN","LEXA1",16,0)
 ;     DIC,DTOUT,DUOUT,LEXCAT,LEXQUIET,LEXSRC
"RTN","LEXA1",17,0)
 ;     
"RTN","LEXA1",18,0)
EN ; Fileman Special Lookup
"RTN","LEXA1",19,0)
 ;
"RTN","LEXA1",20,0)
 ; ^LEXA1 is the Lexicon's special lookup routine
"RTN","LEXA1",21,0)
 ; established by Fileman Data Dictionary's node:
"RTN","LEXA1",22,0)
 ;
"RTN","LEXA1",23,0)
 ;   ^DD(757.01,0,"DIC")=LEXA1
"RTN","LEXA1",24,0)
 ; 
"RTN","LEXA1",25,0)
 ; Input    All input variables are optional
"RTN","LEXA1",26,0)
 ;
"RTN","LEXA1",27,0)
 ;    X     User's input, if X does not exist the user
"RTN","LEXA1",28,0)
 ;          will be prompted for textto search for.
"RTN","LEXA1",29,0)
 ;  
"RTN","LEXA1",30,0)
 ;    Fileman Variables used:
"RTN","LEXA1",31,0)
 ;    
"RTN","LEXA1",32,0)
 ;          DIC       Global Root (default ^LEX(757.01,)
"RTN","LEXA1",33,0)
 ;          DIC(0)    DIC response string (default AEQM)
"RTN","LEXA1",34,0)
 ;          DIC("A")  Prompt (default "Enter Term/Concept:")
"RTN","LEXA1",35,0)
 ;          DIC("B")  Default lookup value
"RTN","LEXA1",36,0)
 ;          DIC("S")  Screen
"RTN","LEXA1",37,0)
 ;          DIC("W")  Output string
"RTN","LEXA1",38,0)
 ;    
"RTN","LEXA1",39,0)
 ;    Special Input Variables:
"RTN","LEXA1",40,0)
 ;    
"RTN","LEXA1",41,0)
 ;          LEXVDT    Versioning Date - This is a date in
"RTN","LEXA1",42,0)
 ;                    Fileman format.  If set it will force
"RTN","LEXA1",43,0)
 ;                    the lookup to be date sensitive, 
"RTN","LEXA1",44,0)
 ;                    inactive and pending codes and terms 
"RTN","LEXA1",45,0)
 ;                    will not display on the selection 
"RTN","LEXA1",46,0)
 ;                    list. 
"RTN","LEXA1",47,0)
 ;                    
"RTN","LEXA1",48,0)
 ;     Developer Input Variables
"RTN","LEXA1",49,0)
 ;     
"RTN","LEXA1",50,0)
 ;          LEXIGN    Ignore - This flag, if set will ignore
"RTN","LEXA1",51,0)
 ;                    deactivation flags.  Deactivated terms
"RTN","LEXA1",52,0)
 ;                    will appear on the selection list.  This
"RTN","LEXA1",53,0)
 ;                    is used by developers in the mainteance
"RTN","LEXA1",54,0)
 ;                    of the Code Sets.
"RTN","LEXA1",55,0)
 ;                    
"RTN","LEXA1",56,0)
 ;          LEXDISP   Display - Force overwrite of display default
"RTN","LEXA1",57,0)
 ;                    parameter.
"RTN","LEXA1",58,0)
 ;                    
"RTN","LEXA1",59,0)
 ; Output
"RTN","LEXA1",60,0)
 ;
"RTN","LEXA1",61,0)
 ;    Fileman
"RTN","LEXA1",62,0)
 ;
"RTN","LEXA1",63,0)
 ;       Y       2 piece string containing IEN and 
"RTN","LEXA1",64,0)
 ;               expression or -1 if X is not found
"RTN","LEXA1",65,0)
 ;               or selection not made
"RTN","LEXA1",66,0)
 ;
"RTN","LEXA1",67,0)
 ;       Y(0)    If DIC(0) contains a Z this variable 
"RTN","LEXA1",68,0)
 ;               will be equal to the entire zero node
"RTN","LEXA1",69,0)
 ;               of the entry that was selected
"RTN","LEXA1",70,0)
 ;
"RTN","LEXA1",71,0)
 ;       Y(0,0)  If DIC(0) contains a Z this variable 
"RTN","LEXA1",72,0)
 ;               will be equal to the external form of
"RTN","LEXA1",73,0)
 ;               the .01 field of the entry that was
"RTN","LEXA1",74,0)
 ;               selected
"RTN","LEXA1",75,0)
 ; 
"RTN","LEXA1",76,0)
 ;    Non-Fileman
"RTN","LEXA1",77,0)
 ;
"RTN","LEXA1",78,0)
 ;       Y(1)    This is the external form of the ICD-9
"RTN","LEXA1",79,0)
 ;               diagnosis code when found
"RTN","LEXA1",80,0)
 ; 
"RTN","LEXA1",81,0)
 ;       Y(2)    This is the external form of the ICD-9
"RTN","LEXA1",82,0)
 ;               procedure code when found
"RTN","LEXA1",83,0)
 ; 
"RTN","LEXA1",84,0)
 ;       Y(30)   This is the external form of the ICD-10
"RTN","LEXA1",85,0)
 ;               diagnosis code when found
"RTN","LEXA1",86,0)
 ; 
"RTN","LEXA1",87,0)
 ;       Y(31)   This is the external form of the ICD-10
"RTN","LEXA1",88,0)
 ;               procedure code when found
"RTN","LEXA1",89,0)
 ; 
"RTN","LEXA1",90,0)
 ;       Y(81)   This is the external form of the CPT-4
"RTN","LEXA1",91,0)
 ;               or HCPCS code when found
"RTN","LEXA1",92,0)
 ;               
"RTN","LEXA1",93,0)
 I $D(DIC(0)),$G(DIC(0))["A" K X
"RTN","LEXA1",94,0)
 ; Date Check
"RTN","LEXA1",95,0)
 N LEXTD,LEXQ S LEXQ=0 D VDT^LEXU
"RTN","LEXA1",96,0)
 ;
"RTN","LEXA1",97,0)
 ; LEXSUB  Special variable from version 1.0 specifying the
"RTN","LEXA1",98,0)
 ;         vocabulary subset to use during the search.  It is
"RTN","LEXA1",99,0)
 ;         a three character mnemonic taken from the Subset
"RTN","LEXA1",100,0)
 ;         Definition file #757.2.  The default is "WRD"
"RTN","LEXA1",101,0)
 S:'$L($G(LEXSUB)) LEXSUB="WRD"
"RTN","LEXA1",102,0)
 ;
"RTN","LEXA1",103,0)
 ; LEXAP   Special variable from version 1.0 specifying the
"RTN","LEXA1",104,0)
 ;         application using the Lexicon.  It is a pointer
"RTN","LEXA1",105,0)
 ;         value to the Subset Definition file #757.2.
"RTN","LEXA1",106,0)
 ;         The default is 1 (Lexicon)
"RTN","LEXA1",107,0)
 S:'$L($G(LEXAP))&($L($G(^TMP("LEXSCH",$J,"APP",0)))) LEXAP=^TMP("LEXSCH",$J,"APP",0)
"RTN","LEXA1",108,0)
 S:'$L($G(LEXAP)) LEXAP=1
"RTN","LEXA1",109,0)
 ;
"RTN","LEXA1",110,0)
 ; LEXLL   Special variable (new) specifying the length of the
"RTN","LEXA1",111,0)
 ;         displayable list the user is to select from.  Default
"RTN","LEXA1",112,0)
 ;         is 5 (display 5 at a time until the entire list has 
"RTN","LEXA1",113,0)
 ;         been reviewed)
"RTN","LEXA1",114,0)
 S:'$L($G(LEXLL)) LEXLL=5
"RTN","LEXA1",115,0)
 ;
"RTN","LEXA1",116,0)
 ; LEXSRC  Special variable specifying the source of the 
"RTN","LEXA1",117,0)
 ;         vocabulary to use during the search.  It is
"RTN","LEXA1",118,0)
 ;         an Internal Entry Number to the Source File
"RTN","LEXA1",119,0)
 ;         #757.14.  There is no default value.
"RTN","LEXA1",120,0)
 N LEXXSR S:$L($G(LEXSRC)) LEXXSR=$G(LEXSRC)
"RTN","LEXA1",121,0)
 ;         
"RTN","LEXA1",122,0)
 ; LEXCAT  Special variable specifying the source category of
"RTN","LEXA1",123,0)
 ;         the vocabulary to use during the search.  It is
"RTN","LEXA1",124,0)
 ;         an Internal Entry Number in the Source Category
"RTN","LEXA1",125,0)
 ;         file #757.13.  There is no default value.
"RTN","LEXA1",126,0)
 N LEXXCT S:$L($G(LEXCAT)) LEXXCT=$G(LEXCAT)
"RTN","LEXA1",127,0)
 ;         
"RTN","LEXA1",128,0)
 ; Check the DIC variables new LEXUR "user response"
"RTN","LEXA1",129,0)
 N LEXDICA,LEXDICB,LEXO,XTLKGBL,XTLKHLP,XTLKKSCH,XTLKSAY  D CHK N LEXUR
"RTN","LEXA1",130,0)
 ;
"RTN","LEXA1",131,0)
 ; Save the value of X if "Ask" is not specified in DIC(0)
"RTN","LEXA1",132,0)
 I DIC(0)'["A",$L($G(X)) S LEXSAVE=X K X
"RTN","LEXA1",133,0)
 ;
"RTN","LEXA1",134,0)
 ; Save the prompt
"RTN","LEXA1",135,0)
 I $L($G(DIC("A"))) S LEXDICA=DIC("A")
"RTN","LEXA1",136,0)
 ;
"RTN","LEXA1",137,0)
 ; Continue to lookup until the dialog with the application 
"RTN","LEXA1",138,0)
 ; ends.  If there is nothing to lookup (X="") or an uparrow
"RTN","LEXA1",139,0)
 ; is detected, the Lexicon shuts down killing LEX.
"RTN","LEXA1",140,0)
 ;
"RTN","LEXA1",141,0)
 F  D LK Q:'$D(LEX)!($D(LEX("SEL")))
"RTN","LEXA1",142,0)
 G EXIT
"RTN","LEXA1",143,0)
LK ; Start Look-up
"RTN","LEXA1",144,0)
 ; X not provided
"RTN","LEXA1",145,0)
 D:'$D(LEXSAVE) ASK
"RTN","LEXA1",146,0)
 ; X provided
"RTN","LEXA1",147,0)
 S:$D(LEXSAVE) X=LEXSAVE K LEXSAVE
"RTN","LEXA1",148,0)
 ; X was null with a default provided
"RTN","LEXA1",149,0)
 S:$D(DIC("B"))&($G(X)="") X=DIC("B")
"RTN","LEXA1",150,0)
 ; Lookup X - LOOK(LEXX,LEXAP,LEXLL,LEXSUB,LEXVDT,LEXXSR,LEXXCT)
"RTN","LEXA1",151,0)
 D LOOK^LEXA(X,$G(LEXAP),$G(LEXLL),,$G(LEXVDT),$G(LEXXSR),$G(LEXXCT))
"RTN","LEXA1",152,0)
 K DIC("B")
"RTN","LEXA1",153,0)
 ;
"RTN","LEXA1",154,0)
NOTFND ; If X was not found
"RTN","LEXA1",155,0)
 ;
"RTN","LEXA1",156,0)
 ;    Write "??"
"RTN","LEXA1",157,0)
 ;
"RTN","LEXA1",158,0)
 ;    Calling application uses Unresolved Narratives
"RTN","LEXA1",159,0)
 ;      Prompt to "accept or reject" the narrative, if
"RTN","LEXA1",160,0)
 ;      no selection is made continue the search
"RTN","LEXA1",161,0)
 ;
"RTN","LEXA1",162,0)
 ;    Calling application does not use Unresolved Narratives
"RTN","LEXA1",163,0)
 ;      Display help, Re-prompt and Continue search
"RTN","LEXA1",164,0)
 ;
"RTN","LEXA1",165,0)
 I '$D(LEX("LIST")),+($G(LEX))=0,$L(X),X'["^",$E(X,1)'=" " D  K LEX S LEX=0 Q
"RTN","LEXA1",166,0)
 . K DIC("B"),LEX("SEL")
"RTN","LEXA1",167,0)
 . I +($G(^TMP("LEXSCH",$J,"UNR",0)))=0 I +($G(X))'=757.01 W "  ??" D:$D(LEX("HLP")) DH^LEXA3 W ! Q
"RTN","LEXA1",168,0)
 . I +($G(^TMP("LEXSCH",$J,"UNR",0)))=1 W "  ??" D EN^LEXA4 W !
"RTN","LEXA1",169,0)
FOUND ; If X was found
"RTN","LEXA1",170,0)
 ;
"RTN","LEXA1",171,0)
 ;    Begin user selection.  Continue to display the list
"RTN","LEXA1",172,0)
 ;    until the dialog with the user is terminated.  The
"RTN","LEXA1",173,0)
 ;    dialog is considered to be terminated if:
"RTN","LEXA1",174,0)
 ;
"RTN","LEXA1",175,0)
 ;      The selection list does not exist  '$D(LEX("LIST"))
"RTN","LEXA1",176,0)
 ;      The user has made a selection       $D(LEX("SEL")
"RTN","LEXA1",177,0)
 ; 
"RTN","LEXA1",178,0)
 I $D(LEX("LIST")) F  Q:+($G(LEX))=0  D SELECT^LEXA2
"RTN","LEXA1",179,0)
 Q:$D(LEX("SEL"))
"RTN","LEXA1",180,0)
 I '$L($G(LEX)) K LEX Q
"RTN","LEXA1",181,0)
 I $L($G(LEX)),'$D(LEX("SEL")),$D(^TMP("LEXSCH",$J)) D
"RTN","LEXA1",182,0)
 . D EN^LEXA4 S:'$D(LEX("SEL")) LEX=0
"RTN","LEXA1",183,0)
 Q
"RTN","LEXA1",184,0)
EXIT ; Set/Kill variables Y, Y(0,0) from LEX("SEL")
"RTN","LEXA1",185,0)
 S:$L($G(LEXDICA)) DIC("A")=LEXDICA S:$L($G(LEXDICB)) DIC("B")=LEXDICB K Y
"RTN","LEXA1",186,0)
 I '$D(LEX("SEL","EXP",1)) K Y S Y=-1 D CL Q
"RTN","LEXA1",187,0)
 I $D(LEX("SEL","EXP",1)) S Y=LEX("SEL","EXP",1) D Y1,SSBR S:DIC(0)["Z" Y(0)=^LEX(757.01,+(LEX("SEL","EXP",1)),0),Y(0,0)=$P(^LEX(757.01,+(LEX("SEL","EXP",1)),0),"^",1)
"RTN","LEXA1",188,0)
 D CL
"RTN","LEXA1",189,0)
 Q
"RTN","LEXA1",190,0)
CL ; Clear LEX and Multi-Term Lookup XTLK
"RTN","LEXA1",191,0)
 K LEX,LEXSUB,LEXAP,LEXLL D CLR
"RTN","LEXA1",192,0)
 Q
"RTN","LEXA1",193,0)
CLR ; Clear ^TMP Global
"RTN","LEXA1",194,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEXA1",195,0)
 Q
"RTN","LEXA1",196,0)
Y1 ; ICD-9 DX in Y(1), ICD-10 DX in Y(30)
"RTN","LEXA1",197,0)
 N LEXCT,LEXLC,LEXLDR,LEXSY,LEXB,LEXN S LEXB=$G(IOINHI),LEXN=$G(IOINORM)
"RTN","LEXA1",198,0)
 S LEXLC=0,LEXLDR=" >>>  " I '$D(LEXQUIET) F LEXSY=1,2,30,31 D
"RTN","LEXA1",199,0)
 . N LEXI S (LEXCT,LEXI)=0 F  S LEXI=$O(LEX("SEL","VAS","I",LEXSY,LEXI)) Q:+LEXI'>0  D
"RTN","LEXA1",200,0)
 . . N LEXD,LEXC,LEXS,LEXT S LEXD=$G(LEX("SEL","VAS",LEXI)),LEXC=$P(LEXD,"^",3),LEXS=$P(LEXD,"^",6)
"RTN","LEXA1",201,0)
 . . Q:'$L(LEXD)  Q:'$L(LEXS)  S LEXT=LEXLDR_LEXS_" Code:"
"RTN","LEXA1",202,0)
 . . S LEXT=LEXT_$J(" ",(23-$L(LEXT)))_$G(LEXB)_LEXC_$G(LEXN)
"RTN","LEXA1",203,0)
 . . S LEXCT=LEXCT+1,LEXLC=LEXLC+1 S:LEXLC>1 LEXLDR="      "
"RTN","LEXA1",204,0)
 . . Q:LEXCT>1  W:LEXCT=1 ! W !,LEXT
"RTN","LEXA1",205,0)
 . . S:'$L($G(Y(+LEXSY))) Y(+LEXSY)=LEXC
"RTN","LEXA1",206,0)
 Q
"RTN","LEXA1",207,0)
ASK ; Get user input
"RTN","LEXA1",208,0)
 N DIR,DIRUT,DIROUT S:$L($G(LEXDICA)) DIC("A")=LEXDICA
"RTN","LEXA1",209,0)
 S DIR("A")=DIC("A") W:'$L($G(X))&('$L($G(LEXDICB))) !
"RTN","LEXA1",210,0)
 I '$L($G(X)),$L($G(LEXDICB)) S DIR("B")=LEXDICB
"RTN","LEXA1",211,0)
 S DIR("?")="      "_$$SQ^LEXHLP
"RTN","LEXA1",212,0)
 S DIR("??")="^D INPHLP^LEXA1",DIR("?")=$G(DIR("??"))
"RTN","LEXA1",213,0)
 N Y S DIR(0)="FAO^0:245" K X
"RTN","LEXA1",214,0)
 D ^DIR
"RTN","LEXA1",215,0)
 K DIC("B") D:$E(X,1)=" " RSBR
"RTN","LEXA1",216,0)
 W:$E(X,1)'=" " !
"RTN","LEXA1",217,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXA1",218,0)
 W:$D(DTOUT) !,"Try later.",!
"RTN","LEXA1",219,0)
 I $D(DTOUT)!(X="^") S X=""
"RTN","LEXA1",220,0)
 S:X[U DUOUT=1 K DIRUT,DIROUT Q
"RTN","LEXA1",221,0)
INPHLP ; Look-up help
"RTN","LEXA1",222,0)
 N IMP,CUT,FLG,LEXD S IMP=$$IMPDATE^LEXU(30) S CUR=$G(LEXVDT) S:CUR'?7N CUR=$$DT^XLFDT S FLG=$S(CUR<IMP:0,1:1)
"RTN","LEXA1",223,0)
 S LEXD=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXA1",224,0)
 I $G(X)["??",$L(LEXD),LEXD["LEXU(Y,""DS4""," K LEX("HLP") D  Q
"RTN","LEXA1",225,0)
 . D QMH^LEXAR3(X) N LEXI S LEXI=0
"RTN","LEXA1",226,0)
 . F  S LEXI=$O(LEX("HLP",LEXI)) Q:+LEXI'>0  W !,$G(LEX("HLP",LEXI))
"RTN","LEXA1",227,0)
 . K LEX("HLP")
"RTN","LEXA1",228,0)
 W !,"      Enter a ""free text"" term.  Best results occur using one to "
"RTN","LEXA1",229,0)
 W !,"      three full or partial words without a suffix"
"RTN","LEXA1",230,0)
 W:$G(X)'["??" "."
"RTN","LEXA1",231,0)
 W:$G(X)["??" " (i.e., ""DIABETES"","
"RTN","LEXA1",232,0)
 W:$G(X)["??" !,"      ""DIAB MELL"",""DIAB MELL "_$S(FLG:"NEO",1:"INSUL")_")"
"RTN","LEXA1",233,0)
 W !,"  or  "
"RTN","LEXA1",234,0)
 W !,"      Enter a classification code (ICD/DSM/CPT etc) to find the single "
"RTN","LEXA1",235,0)
 W !,"      term associated with the code."
"RTN","LEXA1",236,0)
 W:$G(X)["??" "  Example, a lookup of code "_$S(FLG:"P70.2",1:"239.0")_" "
"RTN","LEXA1",237,0)
 W:$G(X)["??" !,"      returns one and only one term, that is the preferred term for"
"RTN","LEXA1",238,0)
 W:$G(X)["??" !,"      the code "_$S(FLG:"P70.2",1:"239.0")_", "
"RTN","LEXA1",239,0)
 W:$G(X)["??"&(FLG) """Neonatal Diabetes Mellitus"""
"RTN","LEXA1",240,0)
 W:$G(X)["??"&('FLG) """Neoplasm of unspecified nature",!,"      of digestive system"""
"RTN","LEXA1",241,0)
 Q:FLG
"RTN","LEXA1",242,0)
 W !,"  or  "
"RTN","LEXA1",243,0)
 W !,"      Enter a classification code (ICD/DSM/CPT etc) followed by a plus"
"RTN","LEXA1",244,0)
 W !,"      sign (+) to retrieve all terms associated with the code."
"RTN","LEXA1",245,0)
 W:$G(X)["??" "  Example,"
"RTN","LEXA1",246,0)
 W:$G(X)["??" !,"      a lookup of 239.0+ returns all terms that are linked to the "
"RTN","LEXA1",247,0)
 W:$G(X)["??" !,"      code 239.0."
"RTN","LEXA1",248,0)
 Q
"RTN","LEXA1",249,0)
CHK ; Check Fileman look-up variables
"RTN","LEXA1",250,0)
 K DIC("DR"),DIC("P"),DIC("V"),DLAYGO,DINUM
"RTN","LEXA1",251,0)
 S:$L($G(X)) LEXSAVE=X S:$L($G(DIC("B"))) LEXDICB=DIC("B") K DIC("B")
"RTN","LEXA1",252,0)
 I $L($G(DIC(0))) D
"RTN","LEXA1",253,0)
 . F  Q:DIC(0)'["L"  S DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXA1",254,0)
 . F  Q:DIC(0)'["I"  S DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"I",2)
"RTN","LEXA1",255,0)
 S:'$L($G(DIC(0))) DIC(0)="QEAMF" S:'$L($G(DIC)) DIC="^LEX(757.01,"
"RTN","LEXA1",256,0)
 S:DIC(0)'["F" DIC(0)=DIC(0)_"F" S:'$L($G(DIC("A"))) DIC("A")="Enter Term/Concept:  "
"RTN","LEXA1",257,0)
 S LEXDICA=DIC("A")
"RTN","LEXA1",258,0)
 Q
"RTN","LEXA1",259,0)
SSBR ; Store data for Space Bar Return
"RTN","LEXA1",260,0)
 Q:'$L($G(DUZ))  Q:+($G(DUZ))=0  Q:'$L($G(DIC))  Q:$G(DIC)'["757.01,"
"RTN","LEXA1",261,0)
 Q:$G(DIC(0))'["F"  Q:+($G(Y))'>2  Q:$E($G(X),1)=" "  S ^DISV(DUZ,DIC)=+($G(Y))
"RTN","LEXA1",262,0)
 Q
"RTN","LEXA1",263,0)
RSBR ; Retrieve onSpace Bar Return
"RTN","LEXA1",264,0)
 Q:'$L($G(DUZ))  Q:$G(DIC)'="^LEX(757.01,"  Q:$G(DIC(0))'["F"
"RTN","LEXA1",265,0)
 Q:$E($G(X),1)'=" "  S:+($G(^DISV(DUZ,DIC)))>2 X=@(DIC_+($G(^DISV(DUZ,DIC)))_",0)")
"RTN","LEXA1",266,0)
 Q
"RTN","LEXA2")
0^148^B597135
"RTN","LEXA2",1,0)
LEXA2 ;ISL/KER - Look-up (Loud) Select ;04/21/2014
"RTN","LEXA2",2,0)
 ;;2.0;LEXICON UTILITY;**38,80**;Sep 23, 1996;Build 1
"RTN","LEXA2",3,0)
 ;
"RTN","LEXA2",4,0)
SELECT ; Select from List
"RTN","LEXA2",5,0)
 ; Display Help                 DH^LEXA3
"RTN","LEXA2",6,0)
 D DH^LEXA3
"RTN","LEXA2",7,0)
 ; Display List                 DL^LEXA3
"RTN","LEXA2",8,0)
 D DL^LEXA3
"RTN","LEXA2",9,0)
 ; Display Prompt               DP^LEXA3
"RTN","LEXA2",10,0)
 D DP^LEXA3
"RTN","LEXA2",11,0)
 ; Ask user for selection       ASK^LEXA2
"RTN","LEXA2",12,0)
 D ASK
"RTN","LEXA2",13,0)
 ; Interpret user response      EN^LEXAR(user response)
"RTN","LEXA2",14,0)
 D EN^LEXAR(LEXUR,$G(LEXVDT))
"RTN","LEXA2",15,0)
 Q
"RTN","LEXA2",16,0)
ASK ; Get users response
"RTN","LEXA2",17,0)
 R LEXUR:300 I '$T S LEXUR="^"
"RTN","LEXA2",18,0)
 I $L($G(DIC("B"))),LEXUR="" D 
"RTN","LEXA2",19,0)
 . S LEXUR=DIC("B") W " ",LEXUR
"RTN","LEXA2",20,0)
 . I +($G(LEX))=1,$D(LEX("LIST",1)) D
"RTN","LEXA2",21,0)
 . . W:'$D(LEXQUIET) "  ",$P(LEX("LIST",1),"^",2) S LEXUR=1
"RTN","LEXA2",22,0)
 . I +LEXUR K DIC("B")
"RTN","LEXA2",23,0)
 . K DIC("B")
"RTN","LEXA2",24,0)
 Q
"RTN","LEXA3")
0^149^B15059941
"RTN","LEXA3",1,0)
LEXA3 ;ISL/KER - Look-up (Loud) Functions ;04/21/2014
"RTN","LEXA3",2,0)
 ;;2.0;LEXICON UTILITY;**1,4,80**;Sep 23, 1996;Build 1
"RTN","LEXA3",3,0)
 ;
"RTN","LEXA3",4,0)
DH ; Display Help                 LEX("HLP")
"RTN","LEXA3",5,0)
 Q:'$D(LEX("HLP"))  N LEXI S LEXI=0
"RTN","LEXA3",6,0)
 W ! F  S LEXI=$O(LEX("HLP",LEXI)) Q:+LEXI=0  D
"RTN","LEXA3",7,0)
 . W !,"  ",LEX("HLP",LEXI)
"RTN","LEXA3",8,0)
 Q
"RTN","LEXA3",9,0)
DL ; Display List                 LEX("LIST")
"RTN","LEXA3",10,0)
 I +($G(LEX))=1,$D(LEX("LIST",1)) D ONE Q
"RTN","LEXA3",11,0)
 D MULTI Q
"RTN","LEXA3",12,0)
DP ; Display Prompt      Select 1-LEX("MAX") or Ok?
"RTN","LEXA3",13,0)
 N LEXPRMT
"RTN","LEXA3",14,0)
 I +($G(LEX))>1 D
"RTN","LEXA3",15,0)
 . S LEXPRMT="Type ""^"" to STOP or Select:  "
"RTN","LEXA3",16,0)
 . S:+($G(LEX("MAX")))>0 LEXPRMT="Type ""^"" to STOP or Select 1-"_LEX("MAX")_":  "
"RTN","LEXA3",17,0)
 I +($G(LEX))=1 S LEXPRMT="    Ok?  YES//  ",DIC("B")="YES" W:+($G(LEX))>1 !
"RTN","LEXA3",18,0)
 W !!,LEXPRMT Q
"RTN","LEXA3",19,0)
 ;
"RTN","LEXA3",20,0)
MULTI ; Multiple entries       PCH 4 - LEXTP,LEXCT
"RTN","LEXA3",21,0)
 N LEXI,LEXT,LEXTP,LEXCT,LEXL,LEXP
"RTN","LEXA3",22,0)
 S (LEXCT,LEXI)=0,LEXL=70,LEXP=7 D MATCH
"RTN","LEXA3",23,0)
 W ! F  S LEXI=$O(LEX("LIST",LEXI)) Q:+LEXI=0  D
"RTN","LEXA3",24,0)
 . S LEXCT=LEXCT+1,LEXT=$P(LEX("LIST",LEXI),"^",2)
"RTN","LEXA3",25,0)
 . S LEXTP=$P($G(LEX("LIST",(LEXI-1))),"^",2)
"RTN","LEXA3",26,0)
 . ;W:LEXCT>1&($E(LEXT,1)=" ")&($E(LEXTP,1)'=" ")&($E(LEXTP,1)'="") !
"RTN","LEXA3",27,0)
 . ;W:LEXCT>1&($E(LEXT,1)'=" ")&($E(LEXTP,1)=" ") !
"RTN","LEXA3",28,0)
 . W !,$J(LEXI,4),?6
"RTN","LEXA3",29,0)
 . N Y S Y=+($G(LEX("LIST",LEXI))),Y(0)=$G(^LEX(757.01,+Y,0)),Y(0,0)=$P($G(^LEX(757.01,+Y,0)),"^",1)
"RTN","LEXA3",30,0)
 . I $D(DIC("W")),DIC("W")'="" X DIC("W") Q
"RTN","LEXA3",31,0)
 . I $D(DIC("W")),DIC("W")="" W Y(0,0) Q
"RTN","LEXA3",32,0)
 . W:$L(LEXT)<(LEXL+1) ?LEXP,LEXT D:$L(LEXT)>LEXL LONG
"RTN","LEXA3",33,0)
 Q
"RTN","LEXA3",34,0)
MATCH ; Matches found
"RTN","LEXA3",35,0)
 I $D(LEX("MAT")) W !!,LEX("MAT") K LEX("MAT")
"RTN","LEXA3",36,0)
 Q
"RTN","LEXA3",37,0)
ONE ; One entry
"RTN","LEXA3",38,0)
 N LEXI,LEXT,LEXL,LEXP
"RTN","LEXA3",39,0)
 S LEXI=0,LEXL=75,LEXP=2,LEXT=$P(LEX("LIST",1),"^",2) W !!
"RTN","LEXA3",40,0)
 N Y S Y=+($G(LEX("LIST",LEXI))),Y(0)=$G(^LEX(757.01,+Y,0)),Y(0,0)=$P($G(^LEX(757.01,+Y,0)),"^",1)
"RTN","LEXA3",41,0)
 I $D(DIC("W")),DIC("W")'="" W ?LEXP X DIC("W") Q
"RTN","LEXA3",42,0)
 I $D(DIC("W")),DIC("W")="" W ?LEXP,Y(0,0) Q
"RTN","LEXA3",43,0)
 I '$D(DIC("W")) W:$L(LEXT)<(LEXL+1) ?LEXP,LEXT D:$L(LEXT)>LEXL LONG
"RTN","LEXA3",44,0)
 Q
"RTN","LEXA3",45,0)
LONG ; Handle a long string  PCH 4 -> LEXD1,LEXD1
"RTN","LEXA3",46,0)
 N LEXOK,LEXCHR,LEXPSN,LEXSTO,LEXREM,LEXLNN,LEXOLD,LEXC
"RTN","LEXA3",47,0)
 N LEXWW,LEXD1,LEXD2
"RTN","LEXA3",48,0)
 S LEXLNN=0,LEXOLD=LEXT,LEXL=70,LEXP=+($G(LEXP))
"RTN","LEXA3",49,0)
 S LEXD1="" F LEXPSN=1:1 Q:$E(LEXT,LEXPSN)'=" "!(LEXPSN>$L(LEXT))  S LEXD1=LEXD1_" "
"RTN","LEXA3",50,0)
 S LEXD2=LEXD1 S:LEXT[":  "&($L(LEXD1)) LEXD2=LEXD2_"          "
"RTN","LEXA3",51,0)
 D PARSE(LEXT,LEXL,LEXD1,LEXD2)
"RTN","LEXA3",52,0)
 I $D(LEXWW),$O(LEXWW(0))>0 F LEXC=1:1 Q:'$D(LEXWW(LEXC))  D
"RTN","LEXA3",53,0)
 . W:LEXC>1 ! W ?LEXP,LEXWW(LEXC)
"RTN","LEXA3",54,0)
 Q
"RTN","LEXA3",55,0)
PARSE(LEXT,LEXL,LEXD1,LEXD2) ; Parse string
"RTN","LEXA3",56,0)
 S LEXT=$G(LEXT),LEXL=+($G(LEXL)),LEXD1=$G(LEXD1),LEXD2=$G(LEXD2)
"RTN","LEXA3",57,0)
 Q:LEXT=""  S:LEXL=0 LEXL=70 S LEXL=LEXL-$L(LEXD1)
"RTN","LEXA3",58,0)
 N LEXC S LEXC=0 F  Q:$L(LEXT)<(LEXL+1)  D
"RTN","LEXA3",59,0)
 . S LEXOK=0,LEXCHR=""
"RTN","LEXA3",60,0)
 . F LEXPSN=LEXL:-1:0 Q:+LEXOK=1  D  Q:+LEXOK=1
"RTN","LEXA3",61,0)
 . . I $E(LEXT,LEXPSN)=" " S LEXCHR=" ",LEXOK=1 Q
"RTN","LEXA3",62,0)
 . . I $E(LEXT,LEXPSN)="," S LEXCHR=",",LEXOK=1 Q
"RTN","LEXA3",63,0)
 . . I $E(LEXT,LEXPSN)="/"!($E(LEXT,LEXPSN)="-")!($E(LEXT,LEXPSN)=")") S LEXCHR=$E(LEXT,LEXPSN),LEXOK=1 Q
"RTN","LEXA3",64,0)
 . S LEXL=LEXL-($L(LEXD2)-$L(LEXD1)) D:LEXCHR=" " SPL1
"RTN","LEXA3",65,0)
 . D:LEXCHR="/"!(LEXCHR=",")!(LEXCHR="-")!(LEXCHR=")") SPL2
"RTN","LEXA3",66,0)
 . D:'LEXOK SPL4,SPC
"RTN","LEXA3",67,0)
 . S LEXT=LEXREM I $L(LEXSTO) S LEXC=LEXC+1 S:LEXC=1 LEXWW(LEXC)=(LEXD1_LEXSTO) S:LEXC>1 LEXWW(LEXC)=(LEXD2_LEXSTO)
"RTN","LEXA3",68,0)
 I $L(LEXT) S LEXC=LEXC+1 S:LEXC=1 LEXWW(LEXC)=(LEXD1_LEXT) S:LEXC>1 LEXWW(LEXC)=(LEXD2_LEXT)
"RTN","LEXA3",69,0)
 Q
"RTN","LEXA3",70,0)
SPL1 ; Split after character position
"RTN","LEXA3",71,0)
 S LEXSTO=$E(LEXT,1,LEXPSN-1),LEXREM=$E(LEXT,LEXPSN+1,$L(LEXT)) D SPL3,SPC Q
"RTN","LEXA3",72,0)
SPL2 ; Split at character position
"RTN","LEXA3",73,0)
 S LEXSTO=$E(LEXT,1,LEXPSN),LEXREM=$E(LEXT,(LEXPSN+1),$L(LEXT)) D SPL3,SPC Q
"RTN","LEXA3",74,0)
SPL3 ; Re-Split if STO<REM
"RTN","LEXA3",75,0)
 D:$L(LEXSTO)<$L(LEXREM)&($L(LEXL)-$L(LEXSTO)>15) SPL4 Q
"RTN","LEXA3",76,0)
SPL4 ; Split at string length LEXL
"RTN","LEXA3",77,0)
 S LEXSTO=$E(LEXT,1,LEXL),LEXREM=$E(LEXT,(LEXL+1),$L(LEXT)) Q
"RTN","LEXA3",78,0)
SPC ; Remove Spaces
"RTN","LEXA3",79,0)
 S LEXSTO=$$TRIM(LEXSTO),LEXREM=$$TRIM(LEXREM) S LEXOK=1 Q
"RTN","LEXA3",80,0)
TRIM(LEXX) ; Trim Spaces
"RTN","LEXA3",81,0)
 S LEXX=$G(LEXX) Q:LEXX'[" " LEXX Q:LEXX="" LEXX
"RTN","LEXA3",82,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXA3",83,0)
 I $L(LEXX) F  Q:$E(LEXX,$L(LEXX))'=" "  S LEXX=$E(LEXX,1,($L(LEXX)-1))
"RTN","LEXA3",84,0)
 Q LEXX
"RTN","LEXA4")
0^150^B22480783
"RTN","LEXA4",1,0)
LEXA4 ;ISL/KER - Look-up (Loud) Unresolved Narrative ;04/21/2014
"RTN","LEXA4",2,0)
 ;;2.0;LEXICON UTILITY;**3,6,15,80**;Sep 23, 1996;Build 1
"RTN","LEXA4",3,0)
 ;               
"RTN","LEXA4",4,0)
 ; Global Variables
"RTN","LEXA4",5,0)
 ;    ^DISV(              ICR    510
"RTN","LEXA4",6,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXA4",7,0)
 ;               
"RTN","LEXA4",8,0)
 ; External References
"RTN","LEXA4",9,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXA4",10,0)
 ;               
"RTN","LEXA4",11,0)
EN ; User input was not found
"RTN","LEXA4",12,0)
 ; PCH 6 first two lines deleted (Narrative/Exact Match)
"RTN","LEXA4",13,0)
 S LEX("UNR")=+($G(^TMP("LEXSCH",$J,"UNR",0)))
"RTN","LEXA4",14,0)
 ; PCH 3 - Save number of matches found
"RTN","LEXA4",15,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXA4",16,0)
 ; PCH 3 - "not found" flag
"RTN","LEXA4",17,0)
 N LEXNF S LEXNF=$S(LEX=0:1,1:0)
"RTN","LEXA4",18,0)
 ; Comment out next 2 lines to allow for unresolved narratives
"RTN","LEXA4",19,0)
 ; after the user enters an up-arrow ("^")
"RTN","LEXA4",20,0)
 ; S LEX("RES")=$G(^TMP("LEXSCH",$J,"RES",0))
"RTN","LEXA4",21,0)
 ; I LEX("RES")["^" K LEX("RES"),LEX("NAR"),LEX("UNR") Q
"RTN","LEXA4",22,0)
 S LEX("RES")=$G(^TMP("LEXSCH",$J,"RES",0))
"RTN","LEXA4",23,0)
 I LEX("RES")["^" K LEX("RES"),LEX("NAR"),LEX("UNR") Q
"RTN","LEXA4",24,0)
 ; Quit if:
"RTN","LEXA4",25,0)
 ;   User Narrative is NULL   LEX("NAR")=""   or
"RTN","LEXA4",26,0)
 ;   Unresolved not allowed   ^TMP("LEXSCH",$J,"UNR",0)=0
"RTN","LEXA4",27,0)
 I $G(LEX("NAR"))=""!($G(LEX("UNR"))=0) D EN^LEXAR("QUIT") Q
"RTN","LEXA4",28,0)
 N LEXN
"RTN","LEXA4",29,0)
 S:'LEXNF LEXN=$$NNS(LEX("NAR"))  ; PCH 3 - Prompt for user when matches were found
"RTN","LEXA4",30,0)
 S:LEXNF LEXN=$$NNF(LEX("NAR"))  ; PCH 3 - Prompt for user when no matches were found
"RTN","LEXA4",31,0)
 I LEXN["^" D EN^LEXAR(LEXN) Q
"RTN","LEXA4",32,0)
 I +LEXN=1,LEX("UNR")=1 D  Q
"RTN","LEXA4",33,0)
 . ; Unresolved pointer when "not found"  ; PCH 3 - added
"RTN","LEXA4",34,0)
 . I LEXNF,$L($G(LEX("NAR"))),$L($G(DIC)),$L($G(DUZ)) D  Q
"RTN","LEXA4",35,0)
 . . S:+LEXN>0&($G(DIC(0))["F") ^DISV(DUZ,DIC)=LEXN_"^"_LEX("NAR")
"RTN","LEXA4",36,0)
 . . S:DIC(0)["Z" Y(0)=$G(^LEX(757.01,1,0)),Y(0,0)=$P($G(^LEX(757.01,1,0)),"^",1)
"RTN","LEXA4",37,0)
 . . K:'$L($G(Y(0,0))) Y(0,0)
"RTN","LEXA4",38,0)
 . . D SET^LEXAR4(1)
"RTN","LEXA4",39,0)
 . ; Unresolved pointer when not an exact match 
"RTN","LEXA4",40,0)
 . I $L($G(LEX("NAR"))),'$L($G(LEX("EXM"))),$L($G(DIC)),$L($G(DUZ)) D
"RTN","LEXA4",41,0)
 . . S:+LEXN>0&($G(DIC(0))["F") ^DISV(DUZ,DIC)=LEXN_"^"_LEX("NAR")
"RTN","LEXA4",42,0)
 . . S:DIC(0)["Z" Y(0)=$G(^LEX(757.01,1,0)),Y(0,0)=$P($G(^LEX(757.01,1,0)),"^",1)
"RTN","LEXA4",43,0)
 . . K:'$L($G(Y(0,0))) Y(0,0)
"RTN","LEXA4",44,0)
 . . D EN^LEXAR(LEX("NAR")),SET^LEXAR4(1)
"RTN","LEXA4",45,0)
 . ; Resolved the pointer if an exact match is found
"RTN","LEXA4",46,0)
 . I $L($G(LEX("NAR"))),$L($G(LEX("EXM"))),$L($G(DIC)),$L($G(DUZ)) D
"RTN","LEXA4",47,0)
 . . S:+($G(LEX("EXM")))>2&($G(DIC(0))["F") ^DISV(DUZ,DIC)=+($G(LEX("EXM")))
"RTN","LEXA4",48,0)
 . . S:DIC(0)["Z" Y(0)=$G(^LEX(757.01,+(LEX("EXM")),0)),Y(0,0)=$P($G(^LEX(757.01,+(LEX("EXM")),0)),"^",1)
"RTN","LEXA4",49,0)
 . . K:'$L($G(Y(0,0))) Y(0,0)
"RTN","LEXA4",50,0)
 . . D EN^LEXAR(+($G(LEX("EXM")))),SET^LEXAR4(+($G(LEX("EXM"))))
"RTN","LEXA4",51,0)
 Q
"RTN","LEXA4",52,0)
NNS(X) ; Narrative not selected (LEX>0)
"RTN","LEXA4",53,0)
 W ! N LEXNARR,LEXANY,LEXPMT1,LEXPMT2,%,%Y S LEXANY="",LEXNARR=X
"RTN","LEXA4",54,0)
 D NNSA Q X
"RTN","LEXA4",55,0)
NNSA ; Use Narrative (anyway)
"RTN","LEXA4",56,0)
 I +($G(LEX("EXM")))=0 D
"RTN","LEXA4",57,0)
 . S LEXPMT1=">>>  You have not selected a term from the Lexicon"
"RTN","LEXA4",58,0)
 . S LEXPMT2=$S($L(LEXANY):">>>  ",1:"     ")_"Use "_LEXNARR_LEXANY
"RTN","LEXA4",59,0)
 I +($G(LEX("EXM")))>0 D
"RTN","LEXA4",60,0)
 . S LEXPMT1=">>>  Exact match found"
"RTN","LEXA4",61,0)
 . S LEXPMT2=$S($L(LEXANY):">>>  ",1:"     ")_"Use "_LEXNARR
"RTN","LEXA4",62,0)
 W:$L(LEXPMT1)&('$L(LEXANY)) !,LEXPMT1 W:$L(LEXANY) !
"RTN","LEXA4",63,0)
 W:$L(LEXPMT2) !,LEXPMT2
"RTN","LEXA4",64,0)
 S %=$S(+($G(LEX("EXM")))>2:1,1:2)
"RTN","LEXA4",65,0)
 D YN^DICN S:%Y["^" X="^" S:%Y["^^" X="^^" Q:X["^"  I %=-1 S X=0 Q
"RTN","LEXA4",66,0)
 I '%,+($G(LEX("EXM")))>0 D  G NNSA
"RTN","LEXA4",67,0)
 . W !!,"An exact match was found in the Lexicon.  By answering"
"RTN","LEXA4",68,0)
 . W !,"""Yes"" you will be selecting the exact match found in"
"RTN","LEXA4",69,0)
 . W !,"Lexicon.",!
"RTN","LEXA4",70,0)
 I '%,+($G(LEX("EXM")))'>0 D  G NNSA
"RTN","LEXA4",71,0)
 . W !!,"A suitable term was not found in the Lexicon.  By answering"
"RTN","LEXA4",72,0)
 . W !,"""Yes"" you will be keeping your exact text as typed rather than"
"RTN","LEXA4",73,0)
 . W !,"a term from the Lexicon"
"RTN","LEXA4",74,0)
 . S LEXANY=" anyway"
"RTN","LEXA4",75,0)
 I %=1 S X=% Q
"RTN","LEXA4",76,0)
 S X=0 Q
"RTN","LEXA4",77,0)
NNF(X) ; Narrative was not found ; PCH 3 - added
"RTN","LEXA4",78,0)
 W ! N LEXNARR,LEXANY,LEXPMT1,LEXPMT2,LEXPMT3,LEXPMT4,LEXPMT5,%,%Y
"RTN","LEXA4",79,0)
 S LEXANY="",LEXNARR=X
"RTN","LEXA4",80,0)
 D NNFA Q X
"RTN","LEXA4",81,0)
NNFA ; Use Narrative (anyway) ; PCH 3 - added
"RTN","LEXA4",82,0)
 N LEXC,LEXF,LEXV S LEXC=1,LEXF=$G(^TMP("LEXSCH",$J,"FIL",0)),LEXV=$G(^TMP("LEXSCH",$J,"VOC",0))
"RTN","LEXA4",83,0)
 S LEXPMT1=">>>  A suitable term was not found based on user input"
"RTN","LEXA4",84,0)
 S:LEXF="I 1" LEXF="" S:$L(LEXF)!(LEXV'="WRD") LEXPMT1=LEXPMT1_" and current defaults"
"RTN","LEXA4",85,0)
 S LEXPMT1=LEXPMT1_"."
"RTN","LEXA4",86,0)
 S LEXPMT2="NOTE : "_$S($L($G(LEXNARR)):"'"_LEXNARR_"' m",1:"You m")
"RTN","LEXA4",87,0)
 S LEXPMT2=LEXPMT2_"ay have found too many matches."
"RTN","LEXA4",88,0)
 S LEXPMT3="         You can refine your search by entering more descriptive text"
"RTN","LEXA4",89,0)
 S LEXPMT4="         (Eg. 'DISEASE' instead of 'DIS') ..."
"RTN","LEXA4",90,0)
 S LEXPMT5=$S($L(LEXANY):">>>  ",1:"     ")_"Use "_LEXNARR_LEXANY
"RTN","LEXA4",91,0)
 W:$L(LEXPMT1)&('$L(LEXANY)) !,LEXPMT1
"RTN","LEXA4",92,0)
 ; W:$L(LEXANY) !
"RTN","LEXA4",93,0)
 W !!,LEXPMT2,!,LEXPMT3,!,LEXPMT4
"RTN","LEXA4",94,0)
 W:$L(LEXPMT5) !!!,LEXPMT5
"RTN","LEXA4",95,0)
 S %=$S(+($G(LEX("EXM")))>2:1,1:2)
"RTN","LEXA4",96,0)
 D YN^DICN S:%Y["^" X="^" S:%Y["^^" X="^^" Q:X["^"  I %=-1 S X=0 Q
"RTN","LEXA4",97,0)
 I '% D  G NNFA
"RTN","LEXA4",98,0)
 . W !!,"A suitable term was not found in the Lexicon.  By answering"
"RTN","LEXA4",99,0)
 . W !,"""Yes"" you will be keeping the exact text as typed rather than"
"RTN","LEXA4",100,0)
 . W !,"a term from the Lexicon.",!
"RTN","LEXA4",101,0)
 . S LEXANY=" anyway"
"RTN","LEXA4",102,0)
 I %=1 S X=% Q
"RTN","LEXA4",103,0)
 S X=0 Q
"RTN","LEXAB")
0^89^B10463880
"RTN","LEXAB",1,0)
LEXAB ;ISL/KER - Look-up Exact Match "B" index ;04/21/2014
"RTN","LEXAB",2,0)
 ;;2.0;LEXICON UTILITY;**25,80**;Sep 23, 1996;Build 1
"RTN","LEXAB",3,0)
 ;               
"RTN","LEXAB",4,0)
 ; Global Variables
"RTN","LEXAB",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAB",6,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAB",7,0)
 ;               
"RTN","LEXAB",8,0)
 ; External References
"RTN","LEXAB",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXAB",10,0)
 ;               
"RTN","LEXAB",11,0)
 ; Exact match  S X=$$EN^LEXAB("LEXSCH",LEXVDT)
"RTN","LEXAB",12,0)
 ;                   
"RTN","LEXAB",13,0)
 ;   INPUT
"RTN","LEXAB",14,0)
 ;     LEXSCH  User input string to search for
"RTN","LEXAB",15,0)
 ;     LEXVDT  Date used to screen out inactive codes
"RTN","LEXAB",16,0)
 ;                   
"RTN","LEXAB",17,0)
 ;   Notes:
"RTN","LEXAB",18,0)
 ;                   
"RTN","LEXAB",19,0)
 ;     1.  If an exact match is found, it is placed at
"RTN","LEXAB",20,0)
 ;         the top of the selection list at 
"RTN","LEXAB",21,0)
 ;         ^TMP("LEXFND",$J)
"RTN","LEXAB",22,0)
 ;                   
"RTN","LEXAB",23,0)
 ;     2.  Returns
"RTN","LEXAB",24,0)
 ;                   
"RTN","LEXAB",25,0)
 ;         0 - Exact match not found
"RTN","LEXAB",26,0)
 ;         1 - Exact match found
"RTN","LEXAB",27,0)
 ;                   
"RTN","LEXAB",28,0)
EN(LEXSCH,LEXVDT) ; Check "B" index for exact match
"RTN","LEXAB",29,0)
 Q:'$L(LEXSCH) 0
"RTN","LEXAB",30,0)
 N LEXLKGL,LEXEM,LEXEMC,LEXLKT S LEXLKT="AB",LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)),LEXEMC=0
"RTN","LEXAB",31,0)
 Q:$G(LEXLKGL)'["757.01" 0
"RTN","LEXAB",32,0)
 D VDT^LEXU N LEXSHOW S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXAB",33,0)
 N LEXO,LEXE,LEXOK,LEXDES,LEXDSP
"RTN","LEXAB",34,0)
 S (LEXE,LEXOK)=0,LEXO=$$SCH(LEXSCH)
"RTN","LEXAB",35,0)
 F  S LEXO=$O(^LEX(757.01,"B",LEXO)) Q:LEXO=""!(LEXSCH'[LEXO)  D
"RTN","LEXAB",36,0)
 . S (LEXE,LEXOK)=0
"RTN","LEXAB",37,0)
 . F  S LEXE=$O(^LEX(757.01,"B",LEXO,LEXE)) Q:+LEXE=0  D
"RTN","LEXAB",38,0)
 . . Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXAB",39,0)
 . . I $$UP^XLFSTR(LEXSCH)=$$UP^XLFSTR($G(^LEX(757.01,LEXE,0))) D
"RTN","LEXAB",40,0)
 . . . S LEXEMC=+($G(LEXEMC)),LEXEMC=LEXEMC+1,LEXEM=LEXE
"RTN","LEXAB",41,0)
 S:+($G(LEXEMC))=1 LEXOK=$G(LEXEM) S:+($G(LEXEMC))'=1 LEXOK=0
"RTN","LEXAB",42,0)
 ; Exact Match Found
"RTN","LEXAB",43,0)
 I +LEXOK>0 D
"RTN","LEXAB",44,0)
 . S LEXE=LEXOK
"RTN","LEXAB",45,0)
 . ; Filter
"RTN","LEXAB",46,0)
 . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXAB",47,0)
 . ; Deactivated
"RTN","LEXAB",48,0)
 . Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXAB",49,0)
 . S LEXDES=$$DES(LEXE)
"RTN","LEXAB",50,0)
 . S LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",51,0)
 . D ADDE^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXAB",52,0)
 . S ^TMP("LEXSCH",$J,"EXM",0)=LEXE
"RTN","LEXAB",53,0)
 . S ^TMP("LEXSCH",$J,"EXM",1)=$G(^LEX(757.01,+LEXE,0))
"RTN","LEXAB",54,0)
 . I '$D(^LEX(757,"B",LEXE)) D
"RTN","LEXAB",55,0)
 . . N LEXME,LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXAB",56,0)
 . . S LEXME=+($G(^LEX(757,LEXM,0))) Q:LEXM=0  Q:LEXE=LEXME
"RTN","LEXAB",57,0)
 . . I +($G(^LEX(757.01,LEXME,1)))=LEXM D
"RTN","LEXAB",58,0)
 . . . S LEXDES=$$DES(LEXME),LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",59,0)
 . . . D ADDEM^LEXAL(LEXME,LEXDES,LEXDSP)
"RTN","LEXAB",60,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",0)=LEXME
"RTN","LEXAB",61,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",1)=$G(^LEX(757.01,+LEXME,0))
"RTN","LEXAB",62,0)
 Q:$D(^TMP("LEXFND",$J)) 1
"RTN","LEXAB",63,0)
 Q 0
"RTN","LEXAB",64,0)
DES(LEXX) ; Get description flag
"RTN","LEXAB",65,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXAB",66,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXAB",67,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXAB",68,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXAB",69,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXAB",70,0)
TERM(LEXX) ; Get expression
"RTN","LEXAB",71,0)
 Q $G(^LEX(757.01,LEXX,0))
"RTN","LEXAB",72,0)
DSP(LEXX,LEXDSP,LEXVDT) ; Return displayable text
"RTN","LEXAB",73,0)
 N LEXMCE S LEXMCE=+($G(^LEX(757,+($G(^LEX(757.01,LEXX,1))),0)))
"RTN","LEXAB",74,0)
 I +LEXMCE>0,$D(^LEX(757.01,+LEXMCE,0)) S LEXX=$$SO^LEXASO(+LEXMCE,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",75,0)
 S LEXX=$$SO^LEXASO(LEXX,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",76,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXAB",77,0)
 S LEXX=$$UP^XLFSTR($E(LEXX,1,63)) N LEXIGN
"RTN","LEXAB",78,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXABC")
0^7^B68137439
"RTN","LEXABC",1,0)
LEXABC ;ISL/KER - Look-up by Code ;04/21/2014
"RTN","LEXABC",2,0)
 ;;2.0;LEXICON UTILITY;**4,25,26,29,38,73,51,80**;Sep 23, 1996;Build 1
"RTN","LEXABC",3,0)
 ;               
"RTN","LEXABC",4,0)
 ; Global Variables
"RTN","LEXABC",5,0)
 ;    ^ICPT("BA")         ICR   5408
"RTN","LEXABC",6,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEXABC",7,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXABC",8,0)
 ;    ^TMP("LEXL")        SACC 2.3.2.5.1
"RTN","LEXABC",9,0)
 ;    ^TMP("LEXLE")       SACC 2.3.2.5.1
"RTN","LEXABC",10,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXABC",11,0)
 ;               
"RTN","LEXABC",12,0)
 ; External References
"RTN","LEXABC",13,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXABC",14,0)
 ;               
"RTN","LEXABC",15,0)
 ; Local Variables NEWed or KILLed LEXA and LEXA1
"RTN","LEXABC",16,0)
 ;     DIC,LEXFIL,LEXISCD
"RTN","LEXABC",17,0)
 ;               
"RTN","LEXABC",18,0)
 ; INPUT
"RTN","LEXABC",19,0)
 ;   LEXSO   Code     Preferred terms only
"RTN","LEXABC",20,0)
 ;           Code+    All terms
"RTN","LEXABC",21,0)
 ;   LEXVDT  Version  Date to screen against (default = today)
"RTN","LEXABC",22,0)
 ;         
"RTN","LEXABC",23,0)
EN(LEXSO,LEXVDT) ; Entry from LEXA
"RTN","LEXABC",24,0)
 S LEXSO=$$UP^XLFSTR($G(LEXSO)) Q:'$L(LEXSO) 0  Q:$L(LEXSO)>40 0  S:$D(LEXISCD) LEXISCD=$$IS(LEXSO)
"RTN","LEXABC",25,0)
 D VDT^LEXU,BLD S:$L($G(^TMP("LEXSCH",$J,"NAR",0))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0)) Q:$D(^TMP("LEXHIT",$J)) 1
"RTN","LEXABC",26,0)
 Q 0
"RTN","LEXABC",27,0)
BLD ; Build List
"RTN","LEXABC",28,0)
 N LEXSO2 D CLR K ^TMP("LEXSCH",$J,"LST",0),^TMP("LEXSCH",$J,"TOL",0),LEX S ^TMP("LEXSCH",$J,"NUM",0)=0,LEXSO=$G(LEXSO)
"RTN","LEXABC",29,0)
 I $E(LEXSO,$L(LEXSO))'="+"&($L(LEXSO)'>1)!($E(LEXSO,$L(LEXSO))="+"&($L(LEXSO)'>3)) D CLR Q
"RTN","LEXABC",30,0)
 S LEXSO2="" S:$E(LEXSO,$L(LEXSO))="+" LEXSO2=$E(LEXSO,$L(LEXSO)),LEXSO=$E(LEXSO,1,($L(LEXSO)-1)) I '(+($$IN(LEXSO))) D CLR Q
"RTN","LEXABC",31,0)
 Q:$E(LEXSO,1,3)="U00"  D FND D:$D(^TMP("LEXFND",$J)) BEG^LEXAL Q:$D(^TMP("LEXFND",$J))  D:'$D(^TMP("LEXFND",$J)) CLR
"RTN","LEXABC",32,0)
 Q
"RTN","LEXABC",33,0)
FND ; Find expressions
"RTN","LEXABC",34,0)
 K ^TMP("LEXL",$J),^TMP("LEXLE",$J)
"RTN","LEXABC",35,0)
 N LEXSIEN,LEXMIEN,LEXEIEN,LEXDESF,LEXDSPL,LEXDSPLA,LEXFORM,LEXFMTY,LEXS,LEXSAB,LEXSRC,LEXSDATA
"RTN","LEXABC",36,0)
 N LEXP,LEXTP,LEXTYPE,LEXFILR,LEXFORM,LEXC,LEXCSTAT,LEXDSAB,LEXSSAB,LEXLKT S LEXLKT="ABC"
"RTN","LEXABC",37,0)
 S LEXSSAB=$G(^TMP("LEXSCH",$J,"DIS",0)),U="^",LEXS=$$SCH(LEXSO)_" "
"RTN","LEXABC",38,0)
 S:'$L($G(LEXFIL))&($L($G(DIC("S")))) LEXFIL=DIC("S")
"RTN","LEXABC",39,0)
 S:'$L($G(LEXFIL))&($L($G(^TMP("LEXSCH",$J,"LEXFIL",0)))) LEXFIL=$G(^TMP("LEXSCH",$J,"LEXFIL",0))
"RTN","LEXABC",40,0)
 F  S LEXS=$O(^LEX(757.02,"AVA",LEXS)) Q:$E(LEXS,1,$L(LEXSO))'=LEXSO  D
"RTN","LEXABC",41,0)
 . S LEXEIEN=0 F  S LEXEIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN)) Q:+LEXEIEN=0  D
"RTN","LEXABC",42,0)
 . . I $L($G(LEXFIL)) D  Q:+($G(LEXFILR))=0
"RTN","LEXABC",43,0)
 . . . I LEXFIL'["$$SO^LEXU(Y",LEXFIL'["ONE^LEXU" D  Q
"RTN","LEXABC",44,0)
 . . . . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),+($G(^LEX(757,+($G(^LEX(757.01,LEXEIEN,1))),0))))
"RTN","LEXABC",45,0)
 . . . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),+LEXEIEN)
"RTN","LEXABC",46,0)
 . . S LEXSAB="" F  S LEXSAB=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB)) Q:LEXSAB=""  D
"RTN","LEXABC",47,0)
 . . . S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"AVA",LEXS,LEXEIEN,LEXSAB,LEXSIEN)) Q:+LEXSIEN=0  D
"RTN","LEXABC",48,0)
 . . . . N LEXEXI,LEXSTAC,STATI,STATT S LEXSDATA=$G(^LEX(757.02,LEXSIEN,0))
"RTN","LEXABC",49,0)
 . . . . S LEXC=$P(LEXSDATA,"^",2),LEXSRC=$P(LEXSDATA,"^",3),LEXEXI=$P(LEXSDATA,"^",1)
"RTN","LEXABC",50,0)
 . . . . Q:$$INSUB(+LEXSDATA)=0
"RTN","LEXABC",51,0)
 . . . . S LEXSTAC=+$$STATCHK^LEXSRC2(LEXC,$G(LEXVDT),,LEXSRC)
"RTN","LEXABC",52,0)
 . . . . Q:'$D(LEXIGN)&(+LEXSTAC'=1)
"RTN","LEXABC",53,0)
 . . . . S LEXTYPE=+$P(LEXSDATA,"^",3)
"RTN","LEXABC",54,0)
 . . . . S LEXDSAB=$E($G(^LEX(757.03,+LEXTYPE,0)),1,3)
"RTN","LEXABC",55,0)
 . . . . S LEXMIEN=+$P(LEXSDATA,"^",4),(LEXP,LEXTP)=+$P(LEXSDATA,"^",5)
"RTN","LEXABC",56,0)
 . . . . S STATI=$$STATIEN(LEXSIEN)
"RTN","LEXABC",57,0)
 . . . . S STATT=$P(STATI,"^",2),STATI=+($P(STATI,"^",1))
"RTN","LEXABC",58,0)
 . . . . Q:'$D(LEXIGN)&(+STATI=0)
"RTN","LEXABC",59,0)
 . . . . S LEXDESF=$$DC(LEXEIEN,LEXTP)
"RTN","LEXABC",60,0)
 . . . . S LEXDSPL=$$DP(LEXS,LEXTYPE,LEXSSAB)
"RTN","LEXABC",61,0)
 . . . . S LEXDSPLA=$$DSO(+LEXEIEN,$G(LEXVDT),$G(LEXSSAB),$G(LEXDSAB))
"RTN","LEXABC",62,0)
 . . . . S LEXDSPL=$$TM($$MDS(LEXDSPL,LEXDSPLA),"/")
"RTN","LEXABC",63,0)
 . . . . S:$D(LEXIGN)&("^Pending^Inactive^"[("^"_STATT_"^")) LEXDSPL=LEXDSPL_"/"_STATT
"RTN","LEXABC",64,0)
 . . . . S LEXFORM=$$F(LEXEIEN),LEXFMTY=$P(LEXFORM,"^",1),LEXFORM=$P(LEXFORM,"^",2)
"RTN","LEXABC",65,0)
 . . . . I LEXTYPE>3,LEXTYPE'=17 D NP Q
"RTN","LEXABC",66,0)
 . . . . D PF
"RTN","LEXABC",67,0)
 D:$D(^TMP("LEXL",$J)) REO^LEXABC2,ADD^LEXABC2
"RTN","LEXABC",68,0)
 Q
"RTN","LEXABC",69,0)
PF ; Preferred
"RTN","LEXABC",70,0)
 S:LEXP=0 LEXTP=2 Q:LEXTP=2&($G(LEXSO2)'["+")
"RTN","LEXABC",71,0)
 S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM
"RTN","LEXABC",72,0)
 S ^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",73,0)
 Q
"RTN","LEXABC",74,0)
NP ; Not Preferred
"RTN","LEXABC",75,0)
 N LEXICD S:LEXP=0 LEXTP=1
"RTN","LEXABC",76,0)
 I $D(^TMP("LEXLE",$J,LEXEIEN)) D  Q
"RTN","LEXABC",77,0)
 . N LEX1,LEX2,LEX3,LEX4,LEXD,LEXDP
"RTN","LEXABC",78,0)
 . S LEXD=^TMP("LEXLE",$J,LEXEIEN),LEX1=$P(LEXD,"^",1) Q:'$L(LEX1)  S LEX2=$P(LEXD,"^",2) Q:'$L(LEX2)  S LEX3=$P(LEXD,"^",3) Q:'$L(LEX3)  S LEX4=$P(LEXD,"^",4) Q:'$L(LEX4)
"RTN","LEXABC",79,0)
 . S LEXD=$G(^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)) Q:'$L(LEXD)
"RTN","LEXABC",80,0)
 . S LEXDP=$P(LEXD,"^",4) S:$L(LEXDP) LEXDP=LEXDP_"/"_LEXDSPL S:'$L(LEXDP) LEXDP=LEXDSPL
"RTN","LEXABC",81,0)
 . S $P(LEXD,"^",4)=LEXDP,^TMP("LEXL",$J,LEX1,LEX2,LEX3,LEX4)=LEXD
"RTN","LEXABC",82,0)
 S LEXICD=$$ICDONE^LEXU(LEXEIEN)
"RTN","LEXABC",83,0)
 I '$L(LEXICD) S ^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN Q
"RTN","LEXABC",84,0)
 I $L(LEXICD) D  Q
"RTN","LEXABC",85,0)
 . S:$L(LEXDSPL)&(LEXSO2["+") LEXDSPL=LEXDSPL_"/ICD-9-CM "_LEXICD
"RTN","LEXABC",86,0)
 . I LEXSO2["+",$D(^TMP("LEXL",$J,LEXS,1)) S ^TMP("LEXL",$J,LEXS,1,4,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^1^3^"_LEXSIEN Q
"RTN","LEXABC",87,0)
 . S LEXTP=1,^TMP("LEXL",$J,LEXS,LEXTYPE,LEXTP,LEXSIEN)=LEXMIEN_"^"_LEXEIEN_"^"_LEXDESF_"^"_LEXDSPL_"^"_LEXFMTY_"^"_LEXFORM,^TMP("LEXLE",$J,LEXEIEN)=LEXS_"^"_LEXTYPE_"^"_LEXTP_"^"_LEXSIEN
"RTN","LEXABC",88,0)
 Q
"RTN","LEXABC",89,0)
F(LEX) ; Form
"RTN","LEXABC",90,0)
 S LEX=+($G(LEX)),LEX=+($P($G(^LEX(757.01,LEX,1)),"^",2))
"RTN","LEXABC",91,0)
 S LEX=$S(LEX=1:"A^Concept:  ",LEX=2:"B^Synonym:  ",LEX=3:"C^Variant:  ",LEX=4:"D^Related:  ",LEX=5:"E^Modified: ",1:"F^Other:    ")
"RTN","LEXABC",92,0)
 Q LEX
"RTN","LEXABC",93,0)
DE(LEX) ; Deactivated 757.01
"RTN","LEXABC",94,0)
 S LEX=+($G(LEX)) Q:'$D(^LEX(757.01,LEX,0)) 1
"RTN","LEXABC",95,0)
 Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEX,1)),"^",5))=1) 1
"RTN","LEXABC",96,0)
 S LEX=+($G(^LEX(757.01,LEX,1)))
"RTN","LEXABC",97,0)
 Q:'$D(^LEX(757,LEX,0)) 1 S LEX=+($G(^LEX(757,LEX,0)))
"RTN","LEXABC",98,0)
 Q:'$D(^LEX(757.01,LEX,1)) 1
"RTN","LEXABC",99,0)
 Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEX,1)),"^",5))=1) 1
"RTN","LEXABC",100,0)
 Q 0
"RTN","LEXABC",101,0)
DC(LEX,LEXT) ; Description
"RTN","LEXABC",102,0)
 N LEXD,LEXM S LEXD="",LEX=+($G(LEX)),LEXM=$P($G(^LEX(757.01,+($G(LEX)),1)),"^",1),LEXM=+($G(^LEX(757,+($G(LEXM)),0))) S:$D(^LEX(757.01,LEXM,3))&(+($G(LEXT))'=2) LEXD="*" S LEX=$G(LEXD) Q LEX
"RTN","LEXABC",103,0)
DP(LEXS,LEXT,LEXD) ; Display
"RTN","LEXABC",104,0)
 N LEXA S LEXT=+($G(LEXT)),LEXD=$G(LEXD)
"RTN","LEXABC",105,0)
 S LEXA=$E($P($G(^LEX(757.03,LEXT,0)),"^",1),1,3)
"RTN","LEXABC",106,0)
 Q:'$L(LEXD) ""  Q:'$L(LEXA) ""  Q:LEXD'[LEXA ""
"RTN","LEXABC",107,0)
 S LEXT=$P($G(^LEX(757.03,LEXT,0)),"^",2)
"RTN","LEXABC",108,0)
 S LEXS=$G(LEXS) S:$E(LEXS,$L(LEXS))=" " LEXS=$E(LEXS,1,($L(LEXS)-1))
"RTN","LEXABC",109,0)
 S:$L(LEXS)&($L(LEXT)) LEXS=LEXT_" "_LEXS Q:$L(LEXS)&($L(LEXT)) LEXS Q ""
"RTN","LEXABC",110,0)
DSO(X,LEXVDT,LEXS,LEXD) ; Display Sources String
"RTN","LEXABC",111,0)
 N LEXT,LEXIEN,LEXSAB S LEXIEN=+($G(X)) Q:+LEXIEN'>0 ""
"RTN","LEXABC",112,0)
 S LEXT=$G(LEXS),LEXSAB=$G(LEXD)
"RTN","LEXABC",113,0)
 F  Q:$E(LEXT,1)'="/"  S LEXT=$E(LEXT,2,$L(LEXT))
"RTN","LEXABC",114,0)
 S X=$$SO^LEXASO(LEXIEN,LEXT,1,$G(LEXVDT)) Q:$L(X) X
"RTN","LEXABC",115,0)
 S:$L(LEXSAB)=3&(LEXT'[LEXSAB) LEXT=LEXT_"/"_LEXSAB
"RTN","LEXABC",116,0)
 F  Q:$E(LEXT,1)'="/"  S LEXT=$E(LEXT,2,$L(LEXT))
"RTN","LEXABC",117,0)
 Q X
"RTN","LEXABC",118,0)
MDS(LEXD,LEXA) ; Merge Display Strings
"RTN","LEXABC",119,0)
 S LEXA=$G(LEXA) F  Q:LEXA'[") ("  S LEXA=$P(LEXA,") (",1)_"/"_$P(LEXA,") (",2,299)
"RTN","LEXABC",120,0)
 S LEXA=$TR(LEXA,"(",""),LEXA=$TR(LEXA,")","")
"RTN","LEXABC",121,0)
 Q:'$L(LEXD) LEXA
"RTN","LEXABC",122,0)
 S:LEXA'[LEXD LEXA=LEXD_"/"_LEXA
"RTN","LEXABC",123,0)
 Q LEXA
"RTN","LEXABC",124,0)
CLR ; Clear
"RTN","LEXABC",125,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXL",$J),LEX S LEX=0 Q
"RTN","LEXABC",126,0)
CLR2 ; Clear 2
"RTN","LEXABC",127,0)
 N LEXIGN
"RTN","LEXABC",128,0)
 Q
"RTN","LEXABC",129,0)
IN(LEX) ; Flag in/not in file 757.02
"RTN","LEXABC",130,0)
 Q:$O(^LEX(757.02,"AVA",(($$SCH($E(LEX,1,61)))_" ")))[LEX 1 Q 0
"RTN","LEXABC",131,0)
SCH(LEX) ; Search
"RTN","LEXABC",132,0)
 S LEX=$E(LEX,1,($L(LEX)-1))_$C($A($E(LEX,$L(LEX)))-1)_"~" Q LEX
"RTN","LEXABC",133,0)
INSUB(EXIEN) ; Check if selected code in vocab
"RTN","LEXABC",134,0)
 N LEXFLN,LEXVOC,SUBIEN
"RTN","LEXABC",135,0)
 S LEXFLN=$G(^TMP("LEXSCH",$J,"FLN",0)) Q:LEXFLN=""!(LEXFLN="757.01") 1
"RTN","LEXABC",136,0)
 S LEXVOC=$G(^TMP("LEXSCH",$J,"VOC",0)) Q:LEXVOC=""!(LEXVOC="WRD") 1
"RTN","LEXABC",137,0)
 Q:$D(^LEXT(757.2,"AA",LEXVOC))'=10 1
"RTN","LEXABC",138,0)
 S SUBIEN=$O(^LEXT(757.2,"AA",LEXVOC,"")) Q:+SUBIEN'>0 1
"RTN","LEXABC",139,0)
 Q:$$INPSUB(EXIEN,SUBIEN) 1
"RTN","LEXABC",140,0)
 Q 0
"RTN","LEXABC",141,0)
INPSUB(PRF,SUB) ; Check if concept PRF is member of subset SUB
"RTN","LEXABC",142,0)
 S PRF=$G(PRF) Q:'$L(PRF) 0  N IN,SIEN S SIEN="",IN=0
"RTN","LEXABC",143,0)
 F  S SIEN=$O(^LEX(757.21,"B",PRF,SIEN)) Q:SIEN=""  D  Q:IN=1
"RTN","LEXABC",144,0)
 . I $P(^LEX(757.21,SIEN,0),U,2)=$G(SUB) S IN=1
"RTN","LEXABC",145,0)
 Q IN
"RTN","LEXABC",146,0)
STATIEN(LEXCIEN)        ; Determine status of code-expression pairing based
"RTN","LEXABC",147,0)
 ;                 on code IEN
"RTN","LEXABC",148,0)
 N STATDAT,STATIEN,LEXH,LEXI,LEXT,LEXTD S LEXT="",LEXCIEN=+($G(LEXCIEN))
"RTN","LEXABC",149,0)
 Q:'$D(^LEX(757.02,LEXCIEN)) 0
"RTN","LEXABC",150,0)
 I $D(LEXIGN) D
"RTN","LEXABC",151,0)
 . N LEXTD S LEXTD=$G(DT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEXABC",152,0)
 . S LEXH=$O(^LEX(757.02,LEXCIEN,4,"B",(LEXTD+.00001)),-1)
"RTN","LEXABC",153,0)
 . I LEXH'?7N,$O(^LEX(757.02,LEXCIEN,4,"B",(LEXTD-.00001)))>0 S LEXT="Pending" Q
"RTN","LEXABC",154,0)
 . S LEXI=$O(^LEX(757.02,LEXCIEN,4,"B",+LEXH," "),-1)
"RTN","LEXABC",155,0)
 . S LEXT=$P($G(^LEX(757.02,LEXCIEN,4,+LEXI,0)),"^",2)
"RTN","LEXABC",156,0)
 . S LEXT=$S(LEXT="1":"",LEXT="0":"Inactive",1:"")
"RTN","LEXABC",157,0)
 I $D(LEXIGN) Q:LEXT="Pending" "0^Pending"
"RTN","LEXABC",158,0)
 S STATDAT=$O(^LEX(757.02,LEXCIEN,4,"B",$S($G(LEXVDT)'="":(LEXVDT+.001),1:"")),-1)
"RTN","LEXABC",159,0)
 S STATIEN=$O(^LEX(757.02,LEXCIEN,4,"B",+STATDAT,""),-1)
"RTN","LEXABC",160,0)
 S STATDAT=+$P($G(^LEX(757.02,LEXCIEN,4,+STATIEN,0)),"^",2)
"RTN","LEXABC",161,0)
 S:$D(LEXIGN)&($L($G(LEXT))) STATDAT=STATDAT_"^"_LEXT
"RTN","LEXABC",162,0)
 Q STATDAT
"RTN","LEXABC",163,0)
NONPLUS(STRING) ; Remove trialing plus from a string
"RTN","LEXABC",164,0)
 S STRING=$G(STRING)
"RTN","LEXABC",165,0)
 I $E($RE(STRING))="+" Q $RE($E($RE(STRING),2,$L(STRING)))
"RTN","LEXABC",166,0)
 Q STRING
"RTN","LEXABC",167,0)
IS(X) ; Is a Code
"RTN","LEXABC",168,0)
 N CODE,ISACODE S CODE=$G(X),ISACODE=0
"RTN","LEXABC",169,0)
 ; If the user intended to search for a key VA code then ISACODE =1
"RTN","LEXABC",170,0)
 Q:$O(^LEX(757.02,"ADX",(CODE_" ")))[CODE 1
"RTN","LEXABC",171,0)
 Q:$O(^LEX(757.02,"APR",(CODE_" ")))[CODE 1
"RTN","LEXABC",172,0)
 Q:$O(^LEX(757.02,"AVA",(CODE_" ")))[CODE 1
"RTN","LEXABC",173,0)
 ; If the user input is a valid code (active or inactive) ISACODE=1
"RTN","LEXABC",174,0)
 Q:$D(^ICPT("BA",(CODE_" "))) 1
"RTN","LEXABC",175,0)
 Q:$$CODEABA^ICDEX(CODE,80,1)>0 1
"RTN","LEXABC",176,0)
 Q:$$CODEABA^ICDEX(CODE,80,30)>0 1
"RTN","LEXABC",177,0)
 Q:$$CODEABA^ICDEX(CODE,80.1,2)>0 1
"RTN","LEXABC",178,0)
 Q:$$CODEABA^ICDEX(CODE,80.1,31)>0 1
"RTN","LEXABC",179,0)
 ; If the user intended to search for a code (pattern match) with a typo, then ISACODE =1
"RTN","LEXABC",180,0)
 Q:(CODE?5N)!(CODE?1A4N)!(CODE?4N1"T")!(CODE?4N1"F") 1
"RTN","LEXABC",181,0)
 Q:(CODE?3N1"."2N)!(CODE?3N1"."1N)!(CODE?3N1".") 1
"RTN","LEXABC",182,0)
 Q:(CODE?1"E"3N1"."2N)!(CODE?1"E"3N1"."1N)!(CODE?1"E"3N1".") 1
"RTN","LEXABC",183,0)
 Q:(CODE?1"V"2N1"."2N)!(CODE?1"V"2N1"."1N)!(CODE?1"V"2N1".") 1
"RTN","LEXABC",184,0)
 Q:(CODE?2N1"."2N)!(CODE?2N1"."1N)!(CODE?2N1".") 1
"RTN","LEXABC",185,0)
 S X=+ISACODE Q X
"RTN","LEXABC",186,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXABC",187,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXABC",188,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXABC",189,0)
 Q X
"RTN","LEXABC2")
0^151^B25634318
"RTN","LEXABC2",1,0)
LEXABC2 ;ISL/KER - Look-up by Code (part 2) ;04/21/2014
"RTN","LEXABC2",2,0)
 ;;2.0;LEXICON UTILITY;**4,80**;Sep 23, 1996;Build 1
"RTN","LEXABC2",3,0)
 ;               
"RTN","LEXABC2",4,0)
 ; Global Variables
"RTN","LEXABC2",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXABC2",6,0)
 ;    ^TMP("LEXL"         SACC 2.3.2.5.1
"RTN","LEXABC2",7,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXABC2",8,0)
 ;               
"RTN","LEXABC2",9,0)
 ; External References
"RTN","LEXABC2",10,0)
 ;    None
"RTN","LEXABC2",11,0)
 ;               
"RTN","LEXABC2",12,0)
REO ; Reorder list
"RTN","LEXABC2",13,0)
 Q:'$D(^TMP("LEXL",$J))  N LEXS,LEXT,LEXP,LEXE,LEXEX,LEXFT,LEXM,LEXX S LEXS="" F  S LEXS=$O(^TMP("LEXL",$J,LEXS)) Q:LEXS=""  S LEXT=0 F  S LEXT=$O(^TMP("LEXL",$J,LEXS,LEXT)) Q:+LEXT=0  D
"RTN","LEXABC2",14,0)
 . S LEXP=0 F  S LEXP=$O(^TMP("LEXL",$J,LEXS,LEXT,LEXP)) Q:+LEXP=0  S LEXE=0 F  S LEXE=$O(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)) Q:+LEXE=0  D
"RTN","LEXABC2",15,0)
 . . Q:LEXP=3
"RTN","LEXABC2",16,0)
 . . I LEXP=1 D MC Q
"RTN","LEXABC2",17,0)
 . . I LEXP=4,$G(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE))["ICD" D SP Q
"RTN","LEXABC2",18,0)
 . . D OT
"RTN","LEXABC2",19,0)
 Q
"RTN","LEXABC2",20,0)
MC ; Major concept
"RTN","LEXABC2",21,0)
 S LEXM=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",1),LEXFT="A"
"RTN","LEXABC2",22,0)
 S ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXFT,LEXE)=^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)
"RTN","LEXABC2",23,0)
 K ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)
"RTN","LEXABC2",24,0)
 Q
"RTN","LEXABC2",25,0)
SP ; Joint term/code
"RTN","LEXABC2",26,0)
 N LEXS2,LEXT2,LEXP2,LEXF2,LEXE2,LEXEX,LEXFT,LEXM,LEXF
"RTN","LEXABC2",27,0)
 N LEXX,LEXTM,LEXTE,LEXHM,LEXHE,LEXHD,LEXOK
"RTN","LEXABC2",28,0)
 S LEXOK=0,LEXS2="" F  S LEXS2=$O(^TMP("LEXL",$J,LEXS2)) Q:LEXS2=""!(LEXOK)  S LEXT2=0 F  S LEXT2=$O(^TMP("LEXL",$J,LEXS2,LEXT2)) Q:+LEXT2=0!(LEXOK)  D
"RTN","LEXABC2",29,0)
 . S LEXP2=0 F  S LEXP2=$O(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2)) Q:+LEXP2=0!(LEXOK)  S LEXF=99999999999  F  S LEXF=$O(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2,LEXF)) Q:LEXF=""!(LEXOK)  D
"RTN","LEXABC2",30,0)
 . . S LEXE2=0 F  S LEXE2=$O(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2,LEXF,LEXE2)) Q:+LEXE2=0!(LEXOK)  D
"RTN","LEXABC2",31,0)
 . . . S LEXTM=$P(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2,LEXF,LEXE2),"^",1)
"RTN","LEXABC2",32,0)
 . . . S LEXTE=$P(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2,LEXF,LEXE2),"^",2)
"RTN","LEXABC2",33,0)
 . . . S LEXHM=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",1)
"RTN","LEXABC2",34,0)
 . . . S LEXHE=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",2)
"RTN","LEXABC2",35,0)
 . . . S LEXHD=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",4)
"RTN","LEXABC2",36,0)
 . . . I LEXTM=LEXHM,LEXTE=LEXHE S $P(^TMP("LEXL",$J,LEXS2,LEXT2,LEXP2,LEXF,LEXE2),"^",4)=LEXHD K ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE) S LEXOK=1 Q
"RTN","LEXABC2",37,0)
 I 'LEXOK D OT
"RTN","LEXABC2",38,0)
 Q
"RTN","LEXABC2",39,0)
OT ; Other than Major Concept
"RTN","LEXABC2",40,0)
 S:LEXP>1 LEXX=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",1)
"RTN","LEXABC2",41,0)
 S LEXFT=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",5)
"RTN","LEXABC2",42,0)
 ; Primary --> <major concept>=<primary concept>
"RTN","LEXABC2",43,0)
 I +($G(LEXM))=+($G(LEXX)) D  Q
"RTN","LEXABC2",44,0)
 . S:LEXFT="" LEXFT="B"
"RTN","LEXABC2",45,0)
 . S:$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",6)="Other:    " $P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",6)="Synonym: ",LEXFT="B"
"RTN","LEXABC2",46,0)
 . S ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXFT,LEXE)=^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE) K ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)
"RTN","LEXABC2",47,0)
 Q:+($G(LEXM))=+($G(LEXX))
"RTN","LEXABC2",48,0)
 ; Other --> <major concept>'=<primary concept>
"RTN","LEXABC2",49,0)
 S LEXFT="F"
"RTN","LEXABC2",50,0)
 S $P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",7)=$P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",6)
"RTN","LEXABC2",51,0)
 S $P(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE),"^",6)="Other:    "
"RTN","LEXABC2",52,0)
 S ^TMP("LEXL",$J,LEXS,LEXT,3,LEXFT,LEXE)=^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)
"RTN","LEXABC2",53,0)
 K ^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXE)
"RTN","LEXABC2",54,0)
 Q
"RTN","LEXABC2",55,0)
SCH(LEXX) ; $Orderable variable
"RTN","LEXABC2",56,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXABC2",57,0)
ADD ; Add codes expressions to the selection list
"RTN","LEXABC2",58,0)
 ;
"RTN","LEXABC2",59,0)
 ; Use local array LEXL
"RTN","LEXABC2",60,0)
 ;
"RTN","LEXABC2",61,0)
 ;   S ^TMP("LEXL",$J,<Code>,<Type>,<Preference>,<Form>,<IEN>)=
"RTN","LEXABC2",62,0)
 ;  <IEN 757>^<IEN 757.01>^<Description>^<Display>^<Form Type>^<Form>
"RTN","LEXABC2",63,0)
 ;
"RTN","LEXABC2",64,0)
 N LEXS,LEXT,LEXP,LEXFT,LEXSIEN,LEXPM,LEXEXA
"RTN","LEXABC2",65,0)
 S LEXS="" F  S LEXS=$O(^TMP("LEXL",$J,LEXS)) Q:LEXS=""  D
"RTN","LEXABC2",66,0)
 . S LEXT=0 F  S LEXT=$O(^TMP("LEXL",$J,LEXS,LEXT)) Q:+LEXT=0  D
"RTN","LEXABC2",67,0)
 . . S (LEXP,LEXPM)=0 F  S LEXP=$O(^TMP("LEXL",$J,LEXS,LEXT,LEXP)) Q:+LEXP=0  D
"RTN","LEXABC2",68,0)
 . . . S LEXFT="" F  S LEXFT=$O(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXFT)) Q:LEXFT=""  D
"RTN","LEXABC2",69,0)
 . . . . S LEXSIEN=0 F  S LEXSIEN=$O(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXFT,LEXSIEN)) Q:+LEXSIEN=0  D SAVE
"RTN","LEXABC2",70,0)
 Q
"RTN","LEXABC2",71,0)
SAVE ; Save in ^TMP
"RTN","LEXABC2",72,0)
 N LEXMI,LEXEI,LEXDF,LEXDS,LEXFM,LEXTP,LEXPX,LEXSX,LEXFQ,LEXSTR,LEXTMP
"RTN","LEXABC2",73,0)
 S LEXSTR="",LEXTMP=$G(^TMP("LEXL",$J,LEXS,LEXT,LEXP,LEXFT,LEXSIEN)),LEXMI=$P(LEXTMP,"^",1),LEXEI=$P(LEXTMP,"^",2),LEXDF=$P(LEXTMP,"^",3)
"RTN","LEXABC2",74,0)
 S LEXDS=$P(LEXTMP,"^",4),LEXFM=$P(LEXTMP,"^",4),LEXTP=$P(LEXTMP,"^",6),(LEXSX,LEXPX)="" S:LEXP=1 LEXPM=LEXMI
"RTN","LEXABC2",75,0)
 ; Remove the following line of code if Mental Health either begins to use ICD-10 or DSM-V
"RTN","LEXABC2",76,0)
 Q:$D(LEXEXA(+LEXEI))  S LEXEXA(+LEXEI)=""
"RTN","LEXABC2",77,0)
 ; Prefix
"RTN","LEXABC2",78,0)
 I LEXP>1 S LEXPX=LEXTP S:LEXPX["Concept" LEXPX="Synonym:  " S:LEXPX="" LEXPX="Other:    "
"RTN","LEXABC2",79,0)
 ; Suffix
"RTN","LEXABC2",80,0)
 I LEXP>1 S LEXSX="" S:LEXPX["Other:" LEXSX="classified as" S:LEXPX="" LEXSX="classified as",LEXPX="Other:    "
"RTN","LEXABC2",81,0)
 ; Display
"RTN","LEXABC2",82,0)
 S:$L(LEXSX)&($G(LEXSO2)["+") LEXDS=LEXSX_" "_LEXDS S:$L(LEXDS) LEXDS="("_LEXDS_")"
"RTN","LEXABC2",83,0)
 ; String
"RTN","LEXABC2",84,0)
 S LEXSTR=$$TERM(LEXEI) S:$L(LEXDF) LEXSTR=LEXSTR_" "_LEXDF S:$L(LEXDS) LEXSTR=LEXSTR_" "_LEXDS S:$L(LEXPX) LEXSTR=LEXPX_LEXSTR S:LEXP>1 LEXSTR="  "_LEXSTR
"RTN","LEXABC2",85,0)
 ; ^TMP("LEXFND",$J,FQ,IEN)
"RTN","LEXABC2",86,0)
 S LEXFQ=$G(^TMP("LEXFND",$J,0)) S:+LEXFQ=0 LEXFQ=-999999 S LEXFQ=LEXFQ+1
"RTN","LEXABC2",87,0)
 S:'$D(^TMP("LEXFND",$J,-LEXFQ,LEXEI)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXABC2",88,0)
 S ^TMP("LEXFND",$J,LEXFQ,LEXEI)=LEXSTR,^TMP("LEXFND",$J,0)=LEXFQ,LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXABC2",89,0)
 Q
"RTN","LEXABC2",90,0)
TERM(LEXX) ; Get expression
"RTN","LEXABC2",91,0)
 Q $G(^LEX(757.01,+($G(LEXX)),0))
"RTN","LEXAFIL")
0^152^B201610
"RTN","LEXAFIL",1,0)
LEXAFIL ;ISL/KER - Lookup Filter ;04/21/2014
"RTN","LEXAFIL",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAFIL",3,0)
 ;
"RTN","LEXAFIL",4,0)
 ; S LEXFILR=$$EN^LEXAFIL(LEXFIL,LEXE)
"RTN","LEXAFIL",5,0)
 ;
"RTN","LEXAFIL",6,0)
 ;   LEXE    Internal Entry Number (IEN) for an Expression in #757.01
"RTN","LEXAFIL",7,0)
 ;   LEXFIL  DIC("S")
"RTN","LEXAFIL",8,0)
 ;
"RTN","LEXAFIL",9,0)
 ; Returns 1 (true) or 0 (false)
"RTN","LEXAFIL",10,0)
 ;
"RTN","LEXAFIL",11,0)
EN(LEXFIL,Y) ; Process Search Filter
"RTN","LEXAFIL",12,0)
 S LEXFIL=$G(LEXFIL),Y=+($G(Y))
"RTN","LEXAFIL",13,0)
 Q:'$L(LEXFIL) 1 Q:Y=0 0 Q:'$D(^LEX(757.01,Y,0)) 0
"RTN","LEXAFIL",14,0)
 X LEXFIL S Y=$T
"RTN","LEXAFIL",15,0)
 Q Y
"RTN","LEXAL")
0^101^B72078379
"RTN","LEXAL",1,0)
LEXAL ;ISL/KER - Look-up List (Global) ;04/21/2014
"RTN","LEXAL",2,0)
 ;;2.0;LEXICON UTILITY;**6,55,80**;Sep 23, 1996;Build 1
"RTN","LEXAL",3,0)
 ;               
"RTN","LEXAL",4,0)
 ; Global Variables
"RTN","LEXAL",5,0)
 ;    ^LEX(757.13         N/A
"RTN","LEXAL",6,0)
 ;    ^LEX(757.14         N/A
"RTN","LEXAL",7,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAL",8,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXAL",9,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAL",10,0)
 ;               
"RTN","LEXAL",11,0)
 ; External References
"RTN","LEXAL",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXAL",13,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXAL",14,0)
 ;               
"RTN","LEXAL",15,0)
 ; Add to the list
"RTN","LEXAL",16,0)
ADDL(LEXI,LEXDS,LEXDP) ; Add
"RTN","LEXAL",17,0)
 N LEXA S LEXA=$G(LEXI) Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))  S LEXI=$$SIEN(LEXA)
"RTN","LEXAL",18,0)
 S:+LEXI>0&(LEXI'=LEXA) LEXA=LEXI Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))
"RTN","LEXAL",19,0)
 S LEXDS=$G(LEXDS),LEXDP=$G(LEXDP)
"RTN","LEXAL",20,0)
 N LEXF,LEXT,LEXL,LEXC
"RTN","LEXAL",21,0)
 S LEXT=$$DISP(LEXA,LEXDS,LEXDP)
"RTN","LEXAL",22,0)
 S:$D(LEXIGN)&($P($G(^LEX(757.01,LEXA,1)),"^",5)>0) LEXT=LEXT_" (Deactivated Term)"
"RTN","LEXAL",23,0)
 S LEXF=$$LSTN(LEXA,"A")
"RTN","LEXAL",24,0)
 S:'$D(^TMP("LEXFND",$J,-LEXF,LEXA)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAL",25,0)
 S ^TMP("LEXFND",$J,-LEXF,LEXA)=LEXT
"RTN","LEXAL",26,0)
 S:+LEXF'=0 ^TMP("LEXFND",$J,0)=LEXF
"RTN","LEXAL",27,0)
 S LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAL",28,0)
 Q
"RTN","LEXAL",29,0)
ADDN(LEXI,LEXDS,LEXDP) ; Near match
"RTN","LEXAL",30,0)
 N LEXA S LEXA=$G(LEXI) Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))  S LEXI=$$SIEN(LEXA) S:+LEXI>0&(LEXI'=LEXA) LEXA=LEXI Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))
"RTN","LEXAL",31,0)
 N LEXR,LEXN S LEXR=LEXA Q:$D(^TMP("LEXFND",$J,-99999997,LEXA))
"RTN","LEXAL",32,0)
 S LEXN=-99999997
"RTN","LEXAL",33,0)
 F  S LEXN=LEXN+1 Q:'$D(^TMP("LEXFND",$J,LEXN,0))
"RTN","LEXAL",34,0)
 I $P($G(^LEX(757.01,LEXA,1)),"^",2)'=1 D  Q:+LEXA=0
"RTN","LEXAL",35,0)
 . S LEXA=+($G(^LEX(757.01,LEXA,1))),LEXA=+($G(^LEX(757,LEXA,0)))
"RTN","LEXAL",36,0)
 S LEXDS=$G(LEXDS),LEXDP=$G(LEXDP)
"RTN","LEXAL",37,0)
 N LEXT S LEXT=$$DISP(LEXA,LEXDS,LEXDP)
"RTN","LEXAL",38,0)
 S:$D(LEXIGN)&($P($G(^LEX(757.01,LEXA,1)),"^",5)>0) LEXT=LEXT_"(Deactivated Term)"
"RTN","LEXAL",39,0)
 S:'$D(^TMP("LEXFND",$J,-LEXF,LEXA)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAL",40,0)
 S ^TMP("LEXFND",$J,LEXN,LEXA)=LEXT
"RTN","LEXAL",41,0)
 S:LEXN<$G(^TMP("LEXFND",$J,0)) ^TMP("LEXFND",$J,0)=LEXN
"RTN","LEXAL",42,0)
 S LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAL",43,0)
 Q
"RTN","LEXAL",44,0)
ADDE(LEXI,LEXDS,LEXDP) ; Exact match
"RTN","LEXAL",45,0)
 N LEXA S LEXA=$G(LEXI) Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))  S LEXI=$$SIEN(LEXA) S:+LEXI>0&(LEXI'=LEXA) LEXA=LEXI Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))
"RTN","LEXAL",46,0)
 N LEXR,LEXT S LEXR=LEXA,LEXDS=$G(LEXDS),LEXDP=$G(LEXDP),LEXT=$$DISP(LEXA,LEXDS,LEXDP)
"RTN","LEXAL",47,0)
 S:$D(LEXIGN)&($P($G(^LEX(757.01,LEXA,1)),"^",5)>0) LEXT=LEXT_"(Deactivated Term)"
"RTN","LEXAL",48,0)
 S:'$D(^TMP("LEXFND",$J,-99999999,LEXA)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAL",49,0)
 S ^TMP("LEXFND",$J,-99999999,LEXA)=LEXT,^TMP("LEXFND",$J,0)=-99999999
"RTN","LEXAL",50,0)
 S LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAL",51,0)
 Q
"RTN","LEXAL",52,0)
ADDEM(LEXI,LEXDS,LEXDP) ; Exact match Major Concept
"RTN","LEXAL",53,0)
 N LEXA S LEXA=$G(LEXI) Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))  S LEXI=$$SIEN(LEXA) S:+LEXI>0&(LEXI'=LEXA) LEXA=LEXI Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))
"RTN","LEXAL",54,0)
 N LEXR,LEXT S LEXR=LEXA Q:$P($G(^LEX(757.01,LEXA,1)),"^",2)'=1
"RTN","LEXAL",55,0)
 S LEXDS=$G(LEXDS),LEXDP=$G(LEXDP),LEXT=$$DISP(LEXA,LEXDS,LEXDP)
"RTN","LEXAL",56,0)
 S:$D(LEXIGN)&($P($G(^LEX(757.01,LEXA,1)),"^",5)>0) LEXT=LEXT_"(Deactivated Term)"
"RTN","LEXAL",57,0)
 S:'$D(^TMP("LEXFND",$J,-99999998,LEXA)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAL",58,0)
 S ^TMP("LEXFND",$J,-99999998,LEXA)=LEXT,^TMP("LEXFND",$J,0)=-99999998,LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAL",59,0)
 Q
"RTN","LEXAL",60,0)
ADDC(LEXI,LEXDS,LEXDP) ; Code
"RTN","LEXAL",61,0)
 N LEXA S LEXA=$G(LEXI) Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))  S LEXI=$$SIEN(LEXA) S:+LEXI>0&(LEXI'=LEXA) LEXA=LEXI Q:LEXA=0  Q:'$D(^LEX(757.01,LEXA))
"RTN","LEXAL",62,0)
 S LEXDS=$G(LEXDS),LEXDP=$G(LEXDP)
"RTN","LEXAL",63,0)
 N LEXT,LEXF,LEXC S LEXC=+($G(^LEX(757.01,LEXA,1))) Q:LEXC=0
"RTN","LEXAL",64,0)
 S LEXF=$G(^TMP("LEXFND",$J,0)) S:+LEXF=0 LEXF=-999999
"RTN","LEXAL",65,0)
 S LEXF=LEXF+1 S LEXT=$$DISP(LEXA,LEXDS,LEXDP)
"RTN","LEXAL",66,0)
 S:$D(LEXIGN)&($P($G(^LEX(757.01,LEXA,1)),"^",5)>0) LEXT=LEXT_"(Deactivated Term)"
"RTN","LEXAL",67,0)
 S:'$D(^TMP("LEXFND",$J,-LEXF,LEXA)) ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAL",68,0)
 S ^TMP("LEXFND",$J,LEXF,LEXA)=LEXT
"RTN","LEXAL",69,0)
 S ^TMP("LEXFND",$J,0)=LEXF
"RTN","LEXAL",70,0)
 S LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAL",71,0)
 Q
"RTN","LEXAL",72,0)
DISP(LEXX,LEXDS,LEXDP) ; Display Text
"RTN","LEXAL",73,0)
 S LEXX=$G(^LEX(757.01,LEXX,0))
"RTN","LEXAL",74,0)
 S:$L(LEXDS) LEXX=LEXX_" "_LEXDS
"RTN","LEXAL",75,0)
 S:$L(LEXDP) LEXX=LEXX_" "_LEXDP
"RTN","LEXAL",76,0)
 Q LEXX
"RTN","LEXAL",77,0)
BEG ; Begin List
"RTN","LEXAL",78,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAL",79,0)
 Q:'$D(^TMP("LEXFND",$J))
"RTN","LEXAL",80,0)
 N LEXRL,LEXJ,LEXI,LEXA,LEXSTR,LEXDP
"RTN","LEXAL",81,0)
 S LEXRL=0,LEXLL=+($G(^TMP("LEXSCH",$J,"LEN",0)))
"RTN","LEXAL",82,0)
 S:+LEXLL=0 (LEXRL,LEXLL)=5 S LEXJ=0,LEXI=-9999999999
"RTN","LEXAL",83,0)
 ; Hit List      ^TMP("LEXHIT",$J,#)
"RTN","LEXAL",84,0)
 F  S LEXI=$O(^TMP("LEXFND",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXAL",85,0)
 . S LEXA=0
"RTN","LEXAL",86,0)
 . F  S LEXA=$O(^TMP("LEXFND",$J,LEXI,LEXA)) Q:+LEXA=0!(LEXJ=LEXLL)  D  Q:+LEXA=0!(LEXJ=LEXLL)
"RTN","LEXAL",87,0)
 . . S LEXJ=LEXJ+1,LEXDP=^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAL",88,0)
 . . S ^TMP("LEXHIT",$J,0)=LEXJ
"RTN","LEXAL",89,0)
 . . S ^TMP("LEXHIT",$J,LEXJ)=LEXA_"^"_LEXDP
"RTN","LEXAL",90,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXM",0)))=+LEXA ^TMP("LEXSCH",$J,"EXM",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAL",91,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXC",0)))=+LEXA ^TMP("LEXSCH",$J,"EXC",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAL",92,0)
 . . K ^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAL",93,0)
 ; List          LEX("LIST")
"RTN","LEXAL",94,0)
 I $D(^TMP("LEXSCH",$J,"NUM",0)) S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAL",95,0)
 I LEXLL>0 D
"RTN","LEXAL",96,0)
 . N LEXI,LEXJ S (LEXJ,LEXI)=0
"RTN","LEXAL",97,0)
 . F  S LEXJ=$O(^TMP("LEXHIT",$J,LEXJ)) Q:+LEXJ=0!(+LEXI=LEXLL)  D  Q:+LEXI=LEXLL
"RTN","LEXAL",98,0)
 . . S LEXI=LEXI+1,LEX("LIST",LEXI)=^TMP("LEXHIT",$J,LEXJ)
"RTN","LEXAL",99,0)
 . . S LEX("LIST",0)=LEXI_"^"_LEXI
"RTN","LEXAL",100,0)
 . . S (LEX("MAX"),^TMP("LEXSCH",$J,"LST",0))=LEXI
"RTN","LEXAL",101,0)
 S ^TMP("LEXSCH",$J,"TOL",0)=0 S:$D(LEX("LIST",1)) ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAL",102,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAL",103,0)
 S:^TMP("LEXSCH",$J,"TOL",0)=1&(+($G(LEX))>0) LEX("MAT")=+LEX_" match"_$S(+LEX>1:"es",1:"")_" found"
"RTN","LEXAL",104,0)
 ; Establish level of concept (1 = concept, >1= modifier)  PCH 6
"RTN","LEXAL",105,0)
 S LEX("LVL")=+($G(LEX("LVL"))) S:LEX("LVL")=0 LEX("LVL")=1
"RTN","LEXAL",106,0)
 S:+($G(LEX("MAX")))>0 LEX("MIN")=1
"RTN","LEXAL",107,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",2))) S LEX("EXM")=^TMP("LEXSCH",$J,"EXM",2)
"RTN","LEXAL",108,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",2))) S LEX("EXC")=^TMP("LEXSCH",$J,"EXC",2)
"RTN","LEXAL",109,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAL",110,0)
 Q:'$D(^TMP("LEXFND",$J))  K:+($G(LEXRL))>0 LEXLL
"RTN","LEXAL",111,0)
 Q
"RTN","LEXAL",112,0)
LSTN(LEXA,LEXM) ; List Number
"RTN","LEXAL",113,0)
 N LEXC,LEXL,LEXF,LEXK,LEXT,LEXU,LEXN,LEXI S LEXK=0
"RTN","LEXAL",114,0)
 S LEXC=+($G(^LEX(757.01,LEXA,1))) Q:LEXC=0 0
"RTN","LEXAL",115,0)
 S LEXT=$G(^LEX(757.01,LEXA,0)) Q:'$L(LEXT) 0
"RTN","LEXAL",116,0)
 S LEXU=$$UP^XLFSTR(LEXT),LEXL=$L(LEXT) Q:LEXL=0 0
"RTN","LEXAL",117,0)
 S LEXN=$$CON(LEXU,.LEXTKN),LEXI=$P(LEXN,"^",2)
"RTN","LEXAL",118,0)
 S LEXN=+$P(LEXN,"^",1) S:LEXN>9 LEXN=9
"RTN","LEXAL",119,0)
 S LEXL=245-LEXL S:$L(LEXL)=1 LEXL="00"_LEXL
"RTN","LEXAL",120,0)
 N LEXC,LEXL,LEXF,LEXK S LEXK=0
"RTN","LEXAL",121,0)
 S LEXC=+($G(^LEX(757.01,LEXA,1))) Q:LEXC=0 0
"RTN","LEXAL",122,0)
 S LEXL=$L($G(^LEX(757.01,LEXA,0))) Q:LEXL=0 0
"RTN","LEXAL",123,0)
 S LEXL=245-LEXL S:$L(LEXL)=1 LEXL="00"_LEXL
"RTN","LEXAL",124,0)
 S:$L(LEXL)=2 LEXL="0"_LEXL S LEXL=$E(LEXL,1,3)
"RTN","LEXAL",125,0)
 ; Disable until after OCT 1, 2014
"RTN","LEXAL",126,0)
 ; S LEXF=$O(^LEX(757.001,"B",LEXC,0))
"RTN","LEXAL",127,0)
 ; S:+LEXF>0&($L($G(^LEX(757.001,+LEXF,0)))) LEXF=(+($P($G(^LEX(757.001,LEXF,0)),"^",3))+1)
"RTN","LEXAL",128,0)
 S LEXF=+($$FREQ(LEXC,$G(LEXVDT)))+1,LEXN=+($G(LEXN))
"RTN","LEXAL",129,0)
 S LEXK=$E(LEXN,1),LEXM=LEXF_"."_LEXK_LEXL
"RTN","LEXAL",130,0)
 Q LEXM
"RTN","LEXAL",131,0)
CON(X,LEXX) ; Contains
"RTN","LEXAL",132,0)
 ; 
"RTN","LEXAL",133,0)
 ; Input
"RTN","LEXAL",134,0)
 ; 
"RTN","LEXAL",135,0)
 ;    X       Text String
"RTN","LEXAL",136,0)
 ;    LEXX()  An array of words passed by reference
"RTN","LEXAL",137,0)
 ;              LEXX(1)=Word1
"RTN","LEXAL",138,0)
 ;              LEXX(2)=Word2
"RTN","LEXAL",139,0)
 ;              LEXX(n)=Wordn
"RTN","LEXAL",140,0)
 ;           
"RTN","LEXAL",141,0)
 ; Output
"RTN","LEXAL",142,0)
 ; 
"RTN","LEXAL",143,0)
 ;    $$CON    A 2 piece "^" delimited string
"RTN","LEXAL",144,0)
 ;    
"RTN","LEXAL",145,0)
 ;                1  Number of words in LEXX() found in text X
"RTN","LEXAL",146,0)
 ;                2  The total number of words in array LEXX
"RTN","LEXAL",147,0)
 ;                
"RTN","LEXAL",148,0)
 N LEXI,LEXS,LEXN,LEXT S LEXN=0,LEXT=0,LEXU=$$UP^XLFSTR($G(X)) Q:'$L(LEXU) 0
"RTN","LEXAL",149,0)
 S LEXI=0 F  S LEXI=$O(LEXX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXAL",150,0)
 . N LEXS S LEXT=LEXT+1,LEXS=$$UP^XLFSTR($G(LEXX(LEXI))) Q:'$L(LEXS)
"RTN","LEXAL",151,0)
 . I $E(LEXU,1,$L(LEXS))=LEXS S LEXN=LEXN+1 Q
"RTN","LEXAL",152,0)
 . F LEXC=" ","/","-","(","[","<",">","{",":",";" I LEXU[(LEXC_LEXS) S LEXN=LEXN+1 Q
"RTN","LEXAL",153,0)
 S X=LEXN_"^"_LEXT
"RTN","LEXAL",154,0)
 Q X
"RTN","LEXAL",155,0)
 Q
"RTN","LEXAL",156,0)
SIEN(X) ; Sourced IEN (PCH 55)
"RTN","LEXAL",157,0)
 S X=$G(X) Q:+($G(LEXXSR))'>0&(+($G(LEXXCT))'>0) X  Q:+($G(LEXXSR))>0&('$D(^LEX(757.14,+($G(LEXXSR)),0))) X  Q:+($G(LEXXCT))>0&('$D(^LEX(757.13,+($G(LEXXCT)),0))) X
"RTN","LEXAL",158,0)
 N LEXIEN,LEXSX,LEXEX,LEXMC S (X,LEXSX,LEXIEN)=+($G(X)) Q:+LEXIEN'>0 X  Q:'$D(^LEX(757.01,+LEXIEN,1)) X  S LEXMC=+($G(^LEX(757.01,+LEXIEN,1))) Q:+LEXMC'>0 X  Q:'$D(^LEX(757,+LEXMC,0)) X
"RTN","LEXAL",159,0)
 I +LEXXCT>0 D  I LEXSX'=LEXIEN S X=LEXSX Q X
"RTN","LEXAL",160,0)
 . S LEXEX=0 F  S LEXEX=$O(^LEX(757.01,"AMC",+LEXMC,LEXEX)) Q:+LEXEX'>0  D  Q:LEXSX'=LEXIEN
"RTN","LEXAL",161,0)
 . . N LEXC S LEXC=$P($G(^LEX(757.01,+LEXEX,1)),"^",11) S:LEXC=LEXXCT LEXSX=LEXEX
"RTN","LEXAL",162,0)
 I +LEXXSR>0 D  I LEXSX'=LEXIEN S X=LEXSX Q X
"RTN","LEXAL",163,0)
 . S LEXEX=0 F  S LEXEX=$O(^LEX(757.01,"AMC",+LEXMC,LEXEX)) Q:+LEXEX'>0  D  Q:LEXSX'=LEXIEN
"RTN","LEXAL",164,0)
 . . N LEXC S LEXC=$P($G(^LEX(757.01,+LEXEX,1)),"^",12) S:LEXC=LEXXSR LEXSX=LEXEX
"RTN","LEXAL",165,0)
 S X=LEXIEN
"RTN","LEXAL",166,0)
 Q X
"RTN","LEXAL",167,0)
FREQ(X,Y) ; Get frequency based on codes and semantics
"RTN","LEXAL",168,0)
 N LEXBD,LEXBEH,LEXCLA,LEXDIA,LEXEFF,LEXHIS,LEXI10
"RTN","LEXAL",169,0)
 N LEXMC,LEXNF,LEXNUR,LEXPRO,LEXSAB,LEXSIEN,LEXSMC
"RTN","LEXAL",170,0)
 N LEXTD,SA,SIEN S LEXMC=+($G(X)),X=0 Q:'$D(^LEX(757,LEXMC,0)) X
"RTN","LEXAL",171,0)
 S LEXTD=$G(Y) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEXAL",172,0)
 N SA,LEXSAB,LEXSMC,LEXNUR,LEXI10,LEXBEH,LEXPRO,LEXDIA
"RTN","LEXAL",173,0)
 S (SA,LEXNUR,LEXBEH,LEXPRO,LEXDIA,LEXI10,LEXSMC,X)=0,LEXNF=""
"RTN","LEXAL",174,0)
 ;   ICD-10-CM                       6
"RTN","LEXAL",175,0)
 ;   ICD-10-PCS                      5
"RTN","LEXAL",176,0)
 ;   ICD-9 coded Diagnosis           4
"RTN","LEXAL",177,0)
 ;   Behavior or non-ICD diagnosis   3
"RTN","LEXAL",178,0)
 ;   Procedures                      2
"RTN","LEXAL",179,0)
 ;   Nursing                         1
"RTN","LEXAL",180,0)
 D SO I +LEXI10>0 S:+LEXDIA=1 (LEXNF,X)=6 Q X
"RTN","LEXAL",181,0)
 I +LEXI10>0 S:+LEXDIA'=1 (LEXNF,X)=5 Q X
"RTN","LEXAL",182,0)
 I X=0,+LEXDIA=1 S (LEXNF,X)=4 Q X
"RTN","LEXAL",183,0)
 I '$L(LEXNF),+($G(LEXPRO))=1 S (LEXNF,X)=2 Q X
"RTN","LEXAL",184,0)
 I '$L(LEXNF),+($G(LEXNUR))=1 S (LEXNF,X)=1 Q X
"RTN","LEXAL",185,0)
 D SM I '$L(LEXNF),+($G(LEXSMC))>0 S (LEXNF,X)=3 Q X
"RTN","LEXAL",186,0)
 I '$L(LEXNF) S (LEXNF,X)=0
"RTN","LEXAL",187,0)
 Q X
"RTN","LEXAL",188,0)
 ;              
"RTN","LEXAL",189,0)
SO ; Codes
"RTN","LEXAL",190,0)
 N SIEN S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"AMC",LEXMC,LEXSIEN)) Q:+LEXSIEN=0  D SOC
"RTN","LEXAL",191,0)
 Q
"RTN","LEXAL",192,0)
SOC ;   Set frequencey based on code
"RTN","LEXAL",193,0)
 N LEXEFF,LEXHIS
"RTN","LEXAL",194,0)
 S LEXEFF=$O(^LEX(757.02,LEXSIEN,4,"B",(LEXTD+.001)),-1) Q:LEXEFF'?7N
"RTN","LEXAL",195,0)
 S LEXHIS=$O(^LEX(757.02,LEXSIEN,4,"B",LEXEFF," "),-1)
"RTN","LEXAL",196,0)
 Q:$P($G(^LEX(757.02,LEXSIEN,4,+LEXHIS,0)),"^",2)'>0
"RTN","LEXAL",197,0)
 S LEXSAB=$P($G(^LEX(757.02,LEXSIEN,0)),"^",3)
"RTN","LEXAL",198,0)
 Q:LEXSAB=0
"RTN","LEXAL",199,0)
 ;     ICD-10 CM/PCS
"RTN","LEXAL",200,0)
 S:LEXSAB=30!(LEXSAB=31) LEXI10=1
"RTN","LEXAL",201,0)
 ;     Diagnosis    ICD-9 and ICD-10
"RTN","LEXAL",202,0)
 S:LEXSAB=1!(LEXSAB=30) LEXDIA=1
"RTN","LEXAL",203,0)
 ;     Procedures   ICD-9, ICD-10, CPT and HCPCS
"RTN","LEXAL",204,0)
 S:LEXSAB=2!(LEXSAB=31)!(LEXSAB=3)!(LEXSAB=4) LEXPRO=1
"RTN","LEXAL",205,0)
 ;     Behaviors    DSM-III and DSM-IV
"RTN","LEXAL",206,0)
 S:LEXSAB=5!(LEXSAB=6) LEXBEH=1
"RTN","LEXAL",207,0)
 ;     Nursing      NANDA, NIC, NOC, HHC and Omaha
"RTN","LEXAL",208,0)
 S:LEXSAB>10&(LEXSAB<16) LEXNUR=1
"RTN","LEXAL",209,0)
 Q
"RTN","LEXAL",210,0)
 ;          
"RTN","LEXAL",211,0)
SM ; Semantics - LEXBD Behavior and Disorders
"RTN","LEXAL",212,0)
 S LEXSMC=0,LEXMC=+($G(LEXMC)) Q:'$D(^LEX(757,LEXMC,0))  N LEXCLA,LEXBD,LEXSIEN S (LEXBD,LEXSIEN)=0
"RTN","LEXAL",213,0)
 F  S LEXSIEN=$O(^LEX(757.1,"B",LEXMC,LEXSIEN)) Q:+LEXSIEN=0  D SMC
"RTN","LEXAL",214,0)
 S LEXSMC=LEXBD
"RTN","LEXAL",215,0)
 Q
"RTN","LEXAL",216,0)
SMC ;   Set frequency based on semantic class
"RTN","LEXAL",217,0)
 S LEXCLA=+($P($G(^LEX(757.1,LEXSIEN,0)),U,2))
"RTN","LEXAL",218,0)
 ;     Behavior
"RTN","LEXAL",219,0)
 S:LEXCLA=3&(LEXBD'>0) LEXBD=1
"RTN","LEXAL",220,0)
 ;     Disease
"RTN","LEXAL",221,0)
 S:LEXCLA=6 LEXBD=2
"RTN","LEXAL",222,0)
 Q
"RTN","LEXAL",223,0)
CLR ;   Clear
"RTN","LEXAL",224,0)
 N LEXIGN
"RTN","LEXAL",225,0)
 Q
"RTN","LEXAL2")
0^164^B14217830
"RTN","LEXAL2",1,0)
LEXAL2 ;ISL/KER - Look-up List (Array) ;04/21/2014
"RTN","LEXAL2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAL2",3,0)
 ;               
"RTN","LEXAL2",4,0)
 ; Global Variables
"RTN","LEXAL2",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAL2",6,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXAL2",7,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAL2",8,0)
 ;               
"RTN","LEXAL2",9,0)
 ; External References
"RTN","LEXAL2",10,0)
 ;    None
"RTN","LEXAL2",11,0)
 ;               
"RTN","LEXAL2",12,0)
 ;  LEXL        Last on List
"RTN","LEXAL2",13,0)
 ;  LEXT/LEXF  List To/From
"RTN","LEXAL2",14,0)
 ;  LEXA        List position asked for
"RTN","LEXAL2",15,0)
 ;  "HOME"       Position at the begining of List
"RTN","LEXAL2",16,0)
 ;  "END"        Position at the end of List
"RTN","LEXAL2",17,0)
 ;  "PGDN"       Position down the list by #LEXLL
"RTN","LEXAL2",18,0)
 ;  "PGUP"       Position up the list by #LEXLL
"RTN","LEXAL2",19,0)
 ;               
"RTN","LEXAL2",20,0)
LIST(LEXA) ; Continue to build list
"RTN","LEXAL2",21,0)
 N LEXC,LEXDSP,LEXF,LEXI,LEXIEN,LEXL,LEXLL,LEXO
"RTN","LEXAL2",22,0)
 N LEXT
"RTN","LEXAL2",23,0)
 I '$D(^TMP("LEXSCH",$J))!('$D(^TMP("LEXFND",$J)))!('$D(^TMP("LEXHIT",$J))) D EDA^LEXAR Q
"RTN","LEXAL2",24,0)
 ; Positional
"RTN","LEXAL2",25,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0))) S:LEXA="END" LEXA=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAL2",26,0)
 S:LEXA="HOME" LEXA=1 I LEXA="PGDN" S LEXA=+($P($G(LEX("LIST",0)),"^",1))+(+($G(^TMP("LEXSCH",$J,"LEN",0)))) S:LEXA>LEX LEXA=LEX
"RTN","LEXAL2",27,0)
 I LEXA="PGUP" S LEXA=+($P($G(LEX("LIST",0)),"^",1))-(+($G(^TMP("LEXSCH",$J,"LEN",0)))) S:LEXA=0 LEXA=1
"RTN","LEXAL2",28,0)
 ; End listing
"RTN","LEXAL2",29,0)
 I +($G(LEXA))=0 D EDA^LEXAR Q
"RTN","LEXAL2",30,0)
 ; Make List
"RTN","LEXAL2",31,0)
 N LEXL,LEXC,LEXLL,LEXT,LEXF S LEXL=+($G(^TMP("LEXSCH",$J,"LST",0)))
"RTN","LEXAL2",32,0)
 S LEXLL=+($G(^TMP("LEXSCH",$J,"LEN",0))) S:LEXLL=0 LEXLL=5
"RTN","LEXAL2",33,0)
 Q:LEXA>LEX  D HILO Q:+($G(LEXF))>+($G(LEX))  Q:+($G(LEXA))>+($G(LEX))
"RTN","LEXAL2",34,0)
 D:LEXA>LEXL FWD D:LEXA'>LEXL BKW
"RTN","LEXAL2",35,0)
 I $D(LEX("LIST")) D LST^LEXAR
"RTN","LEXAL2",36,0)
 Q
"RTN","LEXAL2",37,0)
HILO ; List From LEXF - To LEXT
"RTN","LEXAL2",38,0)
 I +($G(LEXA))=0 S LEXF=1,LEXT=LEXLL Q
"RTN","LEXAL2",39,0)
 S (LEXA,LEXT)=+($G(LEXA)) Q:LEXT'>0!(LEXT>+($G(LEX)))
"RTN","LEXAL2",40,0)
 S LEXF=LEXT#LEXLL S:LEXF=0 LEXF=LEXLL S LEXF=LEXF-1,LEXF=LEXT-LEXF,LEXT=LEXF+(LEXLL-1)
"RTN","LEXAL2",41,0)
 Q
"RTN","LEXAL2",42,0)
FWD ; Build list Forward (User Response was Null or Jump Forward)
"RTN","LEXAL2",43,0)
 K LEX N LEXI,LEXIEN,LEXDSP S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAL2",44,0)
 Q:LEXT'>0!(LEXF>+($G(LEX)))  D:'$D(^TMP("LEXHIT",$J,LEXT)) ADD D:$D(^TMP("LEXHIT",$J,LEXF)) BLD
"RTN","LEXAL2",45,0)
 Q
"RTN","LEXAL2",46,0)
ADD ; Add to Hit list
"RTN","LEXAL2",47,0)
 N LEXC,LEXI,LEXIEN S LEXC=LEXL,LEXI=-9999999999
"RTN","LEXAL2",48,0)
 F  S LEXI=$O(^TMP("LEXFND",$J,LEXI)) Q:+LEXI=0!(LEXC>LEXT)!(LEXC>LEX)  D  Q:LEXC>LEXT!(LEXC>LEX)  D
"RTN","LEXAL2",49,0)
 . S LEXIEN=0 F  S LEXIEN=$O(^TMP("LEXFND",$J,LEXI,LEXIEN)) Q:+LEXIEN=0!(LEXC>LEXT)!(LEXC>LEX)  D  Q:LEXC>LEXT!(LEXC>LEX)
"RTN","LEXAL2",50,0)
 . . S LEXC=LEXC+1 I LEXC'>LEXT D
"RTN","LEXAL2",51,0)
 . . . S LEXDSP=^TMP("LEXFND",$J,LEXI,LEXIEN),^TMP("LEXHIT",$J,0)=LEXC
"RTN","LEXAL2",52,0)
 . . . S ^TMP("LEXHIT",$J,LEXC)=LEXIEN_"^"_LEXDSP
"RTN","LEXAL2",53,0)
 . . . S:+($G(^TMP("LEXSCH",$J,"EXM",0)))=+LEXIEN ^TMP("LEXSCH",$J,"EXM",2)=LEXC_"^"_$G(^LEX(757.01,+LEXIEN,0))
"RTN","LEXAL2",54,0)
 . . . S:+($G(^TMP("LEXSCH",$J,"EXC",0)))=+LEXIEN ^TMP("LEXSCH",$J,"EXC",2)=LEXC_"^"_$G(^LEX(757.01,+LEXIEN,0))
"RTN","LEXAL2",55,0)
 . . . K ^TMP("LEXFND",$J,LEXI,LEXIEN) S ^TMP("LEXSCH",$J,"LST",0)=$G(^TMP("LEXSCH",$J,"LST",0))+1
"RTN","LEXAL2",56,0)
 Q
"RTN","LEXAL2",57,0)
BLD ; Build LEX("LIST")
"RTN","LEXAL2",58,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0))) S:'$D(^TMP("LEXHIT",$J)) LEX=0
"RTN","LEXAL2",59,0)
 N LEXC,LEXCTR S LEXCTR=0,LEXC=LEXF-1
"RTN","LEXAL2",60,0)
 F  S LEXC=$O(^TMP("LEXHIT",$J,LEXC)) Q:+LEXC=0!(+LEXC>LEXT)  D  Q:+LEXC>LEXT
"RTN","LEXAL2",61,0)
 . S LEXCTR=LEXCTR+1,LEX("LIST",LEXC)=^TMP("LEXHIT",$J,LEXC),LEX("LIST",0)=LEXC_"^"_LEXCTR
"RTN","LEXAL2",62,0)
 . S LEX("MIN")=1,LEX("MAX")=LEXC,(LEXL,^TMP("LEXSCH",$J,"LST",0))=LEXC
"RTN","LEXAL2",63,0)
 Q
"RTN","LEXAL2",64,0)
BKW ; Build list Backwards (User Response was Jump Backwards)
"RTN","LEXAL2",65,0)
 S LEXLL=+($G(LEXLL)),LEXF=+($G(LEXF)),LEXT=+($G(LEXT)) Q:LEXF=0  Q:LEXT=0  Q:LEXLL=0
"RTN","LEXAL2",66,0)
 Q:'$D(^TMP("LEXHIT",$J,LEXF))  N LEXCTR,LEXO,LEXC S LEXCTR=0,LEXO=LEXF-1,LEXC=0
"RTN","LEXAL2",67,0)
 K LEX("LIST") F  S LEXO=$O(^TMP("LEXHIT",$J,LEXO)) Q:+LEXO=0!(LEXC>LEXLL)  D  Q:LEXC>LEXLL
"RTN","LEXAL2",68,0)
 . S LEXCTR=LEXCTR+1,LEXC=LEXC+1
"RTN","LEXAL2",69,0)
 . I LEXC'>LEXLL S LEX("LIST",LEXO)=^TMP("LEXHIT",$J,LEXO),LEX("LIST",0)=LEXO_"^"_LEXCTR
"RTN","LEXAL2",70,0)
 Q
"RTN","LEXALK")
0^8^B35871965
"RTN","LEXALK",1,0)
LEXALK ;ISL/KER - Look-up by Words ;04/21/2014
"RTN","LEXALK",2,0)
 ;;2.0;LEXICON UTILITY;**2,3,6,25,51,80**;Sep 23, 1996;Build 1
"RTN","LEXALK",3,0)
 ;               
"RTN","LEXALK",4,0)
 ; Global Variables
"RTN","LEXALK",5,0)
 ;    ^LEX(               N/A
"RTN","LEXALK",6,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEXALK",7,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXALK",8,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXALK",9,0)
 ;               
"RTN","LEXALK",10,0)
 ; External References
"RTN","LEXALK",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXALK",12,0)
 ;    ^LEX(               ICR   1571
"RTN","LEXALK",13,0)
 ;               
"RTN","LEXALK",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXALK",15,0)
 ;    LEXFIL      NEWed in LEXA
"RTN","LEXALK",16,0)
 ;    LEXFILR     NEWed in LEXA
"RTN","LEXALK",17,0)
 ;    LEXTKN      KILLed in LEXA
"RTN","LEXALK",18,0)
 ;    LEXTKNS     KILLed in LEXA
"RTN","LEXALK",19,0)
 ;    LEXVDT      NEWed in LEXA
"RTN","LEXALK",20,0)
 ;               
"RTN","LEXALK",21,0)
 ; Special Lookup variables
"RTN","LEXALK",22,0)
 ;                    
"RTN","LEXALK",23,0)
 ;    LEXSUB      Vocabulary
"RTN","LEXALK",24,0)
 ;    LEXSHCT     Shortcuts
"RTN","LEXALK",25,0)
 ;    LEXDICS     Screen - DIC("S") Format
"RTN","LEXALK",26,0)
 ;    LEXSHOW     Displayable codes
"RTN","LEXALK",27,0)
 ;    LEXLKFL     File Number
"RTN","LEXALK",28,0)
 ;    LEXLKGL     Global Root
"RTN","LEXALK",29,0)
 ;    LEXLKMD     Use Modifiers
"RTN","LEXALK",30,0)
 ;    LEXLKIX     Index to use during lookup
"RTN","LEXALK",31,0)
 ;    LEXLKSH     User Input (Search String)
"RTN","LEXALK",32,0)
 ;    LEXTKN(     Tokens in order of frequency of use
"RTN","LEXALK",33,0)
 ;    LEXTKNS(    Tokens in order of entry
"RTN","LEXALK",34,0)
 ;                    
"RTN","LEXALK",35,0)
EN ; Look-up user input
"RTN","LEXALK",36,0)
 N LEXSUB,LEXSHCT,LEXDICS,LEXSHOW,LEXLKFL,LEXLKGL,LEXLKMD,LEXLKIX,LEXLKSH
"RTN","LEXALK",37,0)
 D VDT^LEXU S LEXLKSH=$G(^TMP("LEXSCH",$J,"SCH",0)) I $L(LEXLKSH)<2 D  Q
"RTN","LEXALK",38,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="User input missing or invalid"
"RTN","LEXALK",39,0)
 S LEXSUB=$G(^TMP("LEXSCH",$J,"VOC",0)) S:LEXSUB="" LEXSUB="WRD"
"RTN","LEXALK",40,0)
 S LEXLKMD=+($G(^TMP("LEXSCH",$J,"MOD",0)))
"RTN","LEXALK",41,0)
 S LEXLKIX=$G(^TMP("LEXSCH",$J,"IDX",0)) S:LEXLKIX="" LEXLKIX="AWRD"
"RTN","LEXALK",42,0)
 S LEXLKFL=$G(^TMP("LEXSCH",$J,"FLN",0)) I LEXLKFL'["757." D  Q
"RTN","LEXALK",43,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="File number missing or invalid"
"RTN","LEXALK",44,0)
 S LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)) I LEXLKGL'["LEX(757." D  Q
"RTN","LEXALK",45,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1,LEX("ERR",LEX("ERR",0))="Global location missing or invalid"
"RTN","LEXALK",46,0)
 S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXALK",47,0)
 D TOKEN^LEXAM(LEXLKSH)
"RTN","LEXALK",48,0)
 N LEXOK,LEXDES,LEXDSP,LEXT,LEXO,LEXI,LEXE,LEXM,LEXME
"RTN","LEXALK",49,0)
 N LEXSS Q:$G(LEXLKFL)'["757."
"RTN","LEXALK",50,0)
 S LEXSS="" I $D(LEXTKNS(0)) D
"RTN","LEXALK",51,0)
 . N LEXI F LEXI=1:1:LEXTKNS(0) S LEXSS=LEXSS_" "_LEXTKNS(LEXI)
"RTN","LEXALK",52,0)
 . S LEXSS=$E(LEXSS,2,$L(LEXSS))
"RTN","LEXALK",53,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$G(LEXSS)
"RTN","LEXALK",54,0)
 S LEXT=$G(LEXTKN(1)),LEXO=$$SCH(LEXT)
"RTN","LEXALK",55,0)
 I $G(LEXSHCT)="",$G(LEXTKN(0))=1,$D(^LEX(LEXLKFL,LEXLKIX,LEXT)) D EXACT
"RTN","LEXALK",56,0)
 I $G(LEXSHCT)="",$G(LEXTKN(0))=1,$D(^LEX(LEXLKFL,LEXLKIX,LEXT)) D  G END
"RTN","LEXALK",57,0)
 . D EXACT
"RTN","LEXALK",58,0)
 . I +($O(^LEX(757.01,"ASL",LEXT,0)))>6000 Q
"RTN","LEXALK",59,0)
 . D TOKEN
"RTN","LEXALK",60,0)
 D TOKEN
"RTN","LEXALK",61,0)
END ; End look-up by word
"RTN","LEXALK",62,0)
 I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXALK",63,0)
 I '$D(^TMP("LEXFND",$J)) D
"RTN","LEXALK",64,0)
 . K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J) S LEX=0
"RTN","LEXALK",65,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXALK",66,0)
 Q
"RTN","LEXALK",67,0)
EXACT ; Main loop throuth TOKENS that equal LEXT
"RTN","LEXALK",68,0)
 S LEXO=$$SCH(LEXT) F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'=LEXT  D IEN
"RTN","LEXALK",69,0)
 Q
"RTN","LEXALK",70,0)
TOKEN ; Main loop though TOKENS containing LEXT
"RTN","LEXALK",71,0)
 S LEXO=$$SCH(LEXT) F  S LEXO=$O(^LEX(LEXLKFL,LEXLKIX,LEXO)) Q:LEXO'[LEXT!(LEXO="")  D IEN
"RTN","LEXALK",72,0)
 Q
"RTN","LEXALK",73,0)
IEN ; Loop throuth Internal Entry Numbers
"RTN","LEXALK",74,0)
 S LEXI=0 F  S LEXI=$O(^LEX(LEXLKFL,LEXLKIX,LEXO,LEXI)) Q:+LEXI=0  D
"RTN","LEXALK",75,0)
 . I +($G(LEXNOKEY))>0 N LEXK S LEXK=$$KWO($G(LEXO),$G(LEXI)) Q:LEXK>0
"RTN","LEXALK",76,0)
 . D CHK
"RTN","LEXALK",77,0)
 Q
"RTN","LEXALK",78,0)
CHK ; Check each token
"RTN","LEXALK",79,0)
 N LEXOK,LEXO,LEXLKT S LEXLKT="ALK",LEXE=LEXI,LEXOK=1
"RTN","LEXALK",80,0)
 S:LEXLKGL'["757.01" LEXE=+$G(^LEX(LEXLKFL,LEXI,0)) Q:LEXE=0
"RTN","LEXALK",81,0)
 ; Filter
"RTN","LEXALK",82,0)
 S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXALK",83,0)
 ; Deactivated
"RTN","LEXALK",84,0)
 Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXALK",85,0)
 ; Expression has Modifiers
"RTN","LEXALK",86,0)
 N LEXEMOD S LEXEMOD=+($P($G(^LEX(757.01,LEXE,1)),"^",6))
"RTN","LEXALK",87,0)
 S LEXM=+($G(^LEX(757.01,LEXE,1)))
"RTN","LEXALK",88,0)
 S LEXME=+($G(^LEX(757,LEXM,0)))
"RTN","LEXALK",89,0)
 ; Check not exact match
"RTN","LEXALK",90,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",0))),+(^TMP("LEXSCH",$J,"EXM",0))=LEXE Q
"RTN","LEXALK",91,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",0))),+(^TMP("LEXSCH",$J,"EXC",0))=LEXE Q
"RTN","LEXALK",92,0)
 ; Check tokens
"RTN","LEXALK",93,0)
 S LEXOK=1 D CHKTKNS(LEXE)
"RTN","LEXALK",94,0)
 ; If the expression failed the search, and the expression has 
"RTN","LEXALK",95,0)
 ; modifiers then check the modifiers
"RTN","LEXALK",96,0)
 D:+LEXOK=0&(+($G(LEXEMOD))>0)&(+($G(LEXTKN(0)))>1) CHKMOD^LEXAMD2
"RTN","LEXALK",97,0)
 Q:'LEXOK
"RTN","LEXALK",98,0)
 ; Description (*)
"RTN","LEXALK",99,0)
 S LEXDES=$$DES^LEXASC(LEXE)
"RTN","LEXALK",100,0)
 ; Display of codes
"RTN","LEXALK",101,0)
 S LEXDSP=$$SO^LEXASO(LEXE,$G(LEXSHOW),1,$G(LEXVDT))
"RTN","LEXALK",102,0)
 D ADDL^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXALK",103,0)
 Q
"RTN","LEXALK",104,0)
CHKTKNS(LEXE) ; Check tokens
"RTN","LEXALK",105,0)
 N LEXM,LEXNOKEY S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXALK",106,0)
 N LEXI,LEXOE,LEXC S LEXOE=LEXE,LEXI=1
"RTN","LEXALK",107,0)
 F  S LEXI=$O(LEXTKN(LEXI)) Q:+LEXI=0!('LEXOK)  D  Q:'LEXOK
"RTN","LEXALK",108,0)
 . N LEXT,LEXE,LEXORD S LEXT=LEXTKN(LEXI),LEXE=0,LEXOK=0
"RTN","LEXALK",109,0)
 . S LEXC=$$UP(^LEX(757.01,LEXOE,0))
"RTN","LEXALK",110,0)
 . I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",111,0)
 . I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",112,0)
 . I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",113,0)
 . I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",114,0)
 . I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",115,0)
 . S LEXORD=$$SCH(LEXT)
"RTN","LEXALK",116,0)
 . I $L(LEXT),$D(^LEX(757.01,LEXOE,5,"B",LEXT)) S LEXOK=1 Q
"RTN","LEXALK",117,0)
 . I $L(LEXT),$E($O(^LEX(757.01,LEXOE,5,"B",($E(LEXT,1,($L(LEXT)-1))_$C($A($E(LEXT,$L(LEXT)))-1)_"~"))),1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",118,0)
 . I $L(LEXT),$L(LEXORD) D  I $E(LEXORD,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",119,0)
 . . S LEXORD=$O(^LEX(757.01,LEXOE,5,"B",LEXORD))
"RTN","LEXALK",120,0)
 . F  S LEXE=$O(^LEX(757.01,"AMC",LEXM,LEXE)) Q:+LEXE=0!(LEXOK)  D  Q:LEXOK
"RTN","LEXALK",121,0)
 . . Q:+($P($G(^LEX(757.01,LEXE,1)),"^",2))>3
"RTN","LEXALK",122,0)
 . . S LEXC=$$UP(^LEX(757.01,LEXE,0))
"RTN","LEXALK",123,0)
 . . I LEXC[(" "_LEXT) S LEXOK=1 Q
"RTN","LEXALK",124,0)
 . . I LEXC[("-"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",125,0)
 . . I LEXC[("("_LEXT) S LEXOK=1 Q
"RTN","LEXALK",126,0)
 . . I LEXC[("/"_LEXT) S LEXOK=1 Q
"RTN","LEXALK",127,0)
 . . I $E(LEXC,1,$L(LEXT))=LEXT S LEXOK=1 Q
"RTN","LEXALK",128,0)
 Q
"RTN","LEXALK",129,0)
DES(LEXX) ; Get description flag
"RTN","LEXALK",130,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXALK",131,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXALK",132,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXALK",133,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXALK",134,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXALK",135,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXALK",136,0)
 S:$G(LEXX)'?1N.N LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~"
"RTN","LEXALK",137,0)
 S:$G(LEXX)?1N.N LEXX=LEXX-.0000000000000009 N LEXIGN
"RTN","LEXALK",138,0)
 Q LEXX
"RTN","LEXALK",139,0)
 Q
"RTN","LEXALK",140,0)
KWO(X,Y) ; Keyword only (SW)
"RTN","LEXALK",141,0)
 N LEXS,LEXI,LEXE,LEXK,LEXEC,LEXKC S LEXS=$G(X) Q:$L(LEXS)<6 -1
"RTN","LEXALK",142,0)
 Q:'$D(^LEX(757.01,"AWRD",LEXS)) -2
"RTN","LEXALK",143,0)
 S LEXI=+($G(Y)) Q:+LEXI'>0 -3
"RTN","LEXALK",144,0)
 Q:'$D(^LEX(757.01,"AWRD",LEXS,LEXI)) -4
"RTN","LEXALK",145,0)
 Q:"^757.01^"'[("^"_$G(LEXLKFL)_"^") -5
"RTN","LEXALK",146,0)
 S (LEXEC,LEXKC,LEXE)=0 F  S LEXE=$O(^LEX(757.01,"AWRD",LEXS,LEXI,LEXE)) Q:+LEXE=0  D
"RTN","LEXALK",147,0)
 . N LEXD S LEXD=$D(^LEX(757.01,"AWRD",LEXS,LEXI,LEXE))
"RTN","LEXALK",148,0)
 . S:LEXD#10>0 LEXEC=+($G(LEXEC))+1 Q:LEXD=1
"RTN","LEXALK",149,0)
 . S LEXK="" F  S LEXK=$O(^LEX(757.01,"AWRD",LEXS,LEXI,LEXE,LEXK)) Q:'$L(LEXK)  D
"RTN","LEXALK",150,0)
 . . S LEXEC=+($G(LEXEC))+1 S:LEXK?1N.N LEXKC=+($G(LEXKC))+1
"RTN","LEXALK",151,0)
 Q:+($G(LEXKC))>0&($G(LEXKC)=$G(LEXEC)) 1
"RTN","LEXALK",152,0)
 Q 0
"RTN","LEXALK",153,0)
UP(X) ; Uppercase
"RTN","LEXALK",154,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAM")
0^155^B18114833
"RTN","LEXAM",1,0)
LEXAM ;ISL/KER - Look-up Misc (Setup/Parse) ;04/21/2014
"RTN","LEXAM",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAM",3,0)
 ;               
"RTN","LEXAM",4,0)
 ; Global Variables
"RTN","LEXAM",5,0)
 ;    ^DD(                ICR   345
"RTN","LEXAM",6,0)
 ;    ^DIC(               ICR   916
"RTN","LEXAM",7,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAM",8,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXAM",9,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAM",10,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXAM",11,0)
 ;               
"RTN","LEXAM",12,0)
 ; External References
"RTN","LEXAM",13,0)
 ;    None
"RTN","LEXAM",14,0)
 ;               
"RTN","LEXAM",15,0)
SETUP(LEXSUB) ; Set up search variables
"RTN","LEXAM",16,0)
 I '$L($G(LEXSUB)) D  Q
"RTN","LEXAM",17,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAM",18,0)
 . S LEX("ERR",LEX("ERR",0))="Default Vocabulary missing or invalid"
"RTN","LEXAM",19,0)
 S ^TMP("LEXSCH",$J,"VOC",0)=LEXSUB
"RTN","LEXAM",20,0)
 I '$D(^LEXT(757.2,"AA",^TMP("LEXSCH",$J,"VOC",0))) D  Q
"RTN","LEXAM",21,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAM",22,0)
 . S LEX("ERR",LEX("ERR",0))="Default Vocabulary missing or invalid"
"RTN","LEXAM",23,0)
 N LEXSUBS S LEXSUBS=$O(^LEXT(757.2,"AA",^TMP("LEXSCH",$J,"VOC",0),0))
"RTN","LEXAM",24,0)
 S ^TMP("LEXSCH",$J,"IDX",0)="A"_^TMP("LEXSCH",$J,"VOC",0)
"RTN","LEXAM",25,0)
 I $D(^LEXT(757.2,LEXSUBS,1)) D
"RTN","LEXAM",26,0)
 . S ^TMP("LEXSCH",$J,"GBL",0)=^LEXT(757.2,LEXSUBS,1)
"RTN","LEXAM",27,0)
 . S ^TMP("LEXSCH",$J,"FLN",0)=+($P(^TMP("LEXSCH",$J,"GBL",0),"(",2))
"RTN","LEXAM",28,0)
 . I +^TMP("LEXSCH",$J,"FLN",0)=0!('$D(^DD(+^TMP("LEXSCH",$J,"FLN",0)))) D  Q
"RTN","LEXAM",29,0)
 . . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAM",30,0)
 . . S LEX("ERR",LEX("ERR",0))="File Number missing or invalid"
"RTN","LEXAM",31,0)
 . I '$D(^DIC(^TMP("LEXSCH",$J,"FLN",0),0,"GL")) D  Q
"RTN","LEXAM",32,0)
 . . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAM",33,0)
 . . S LEX("ERR",LEX("ERR",0))="Global Location missing or invalid"
"RTN","LEXAM",34,0)
 . I $G(^DIC(^TMP("LEXSCH",$J,"FLN",0),0,"GL"))'=^TMP("LEXSCH",$J,"GBL",0) D  Q
"RTN","LEXAM",35,0)
 . . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAM",36,0)
 . . S LEX("ERR",LEX("ERR",0))="Global Location missing or invalid"
"RTN","LEXAM",37,0)
 . I $D(^TMP("LEXFND",$J)) D
"RTN","LEXAM",38,0)
 . . N LEXI,LEXE S LEXI=-999999999,^TMP("LEXSCH",$J,"EXM",0)=""
"RTN","LEXAM",39,0)
 . . F  S LEXI=$O(^TMP("LEXFND",$J,LEXI)) Q:LEXI=0!(^TMP("LEXSCH",$J,"EXM",0)'="")  D
"RTN","LEXAM",40,0)
 . . . S ^TMP("LEXSCH",$J,"EXM",0)=$O(^TMP("LEXFND",$J,LEXI,0)) S:+(^TMP("LEXSCH",$J,"EXM",0))=0 ^TMP("LEXSCH",$J,"EXM",0)=""
"RTN","LEXAM",41,0)
 Q
"RTN","LEXAM",42,0)
 ;
"RTN","LEXAM",43,0)
 ; Entry      D TOLKEN^LEXAM("USER INPUT")
"RTN","LEXAM",44,0)
 ; Returns    LEXTKN(#)=TOLKEN LIST
"RTN","LEXAM",45,0)
 ; 
"RTN","LEXAM",46,0)
 ; LEXFOC(   Array by frequency of occurance
"RTN","LEXAM",47,0)
 ; LEXTKN(   Array by frequency
"RTN","LEXAM",48,0)
 ; LEXTKNS(  Array by input
"RTN","LEXAM",49,0)
 ;
"RTN","LEXAM",50,0)
 ; LEXLOOK   Flag for PTX^LEXTOKN indicating parse for look-up
"RTN","LEXAM",51,0)
 ; LEXI      Incremental counter
"RTN","LEXAM",52,0)
 ; LEXF      Frequency of occurance
"RTN","LEXAM",53,0)
 ; LEXKEY    Key for spell check
"RTN","LEXAM",54,0)
 ; LEXK      Tolken
"RTN","LEXAM",55,0)
 ; LEXKF     Tolken found
"RTN","LEXAM",56,0)
 ; LEXNK     Next tolken
"RTN","LEXAM",57,0)
 ;
"RTN","LEXAM",58,0)
TOKEN(LEXX) ; Return list of tokens in ascending order of usage
"RTN","LEXAM",59,0)
 Q:'$L($G(LEXX))  D PARSE,ORD K ^TMP("LEXTKN",$J) Q
"RTN","LEXAM",60,0)
PARSE ; Parse user input into tolkens
"RTN","LEXAM",61,0)
 K ^TMP("LEXTKN",$J) N X,LEXLOOK S X=LEXX,LEXLOOK="" D PTX^LEXTOKN Q
"RTN","LEXAM",62,0)
ORD ; tolken list in frequency order
"RTN","LEXAM",63,0)
 Q:'$D(^TMP("LEXTKN",$J,0))  K LEXFOC,LEXTKN N LEXKEY,LEXI,LEXF,LEXK,LEXCT
"RTN","LEXAM",64,0)
 ; Get possible key
"RTN","LEXAM",65,0)
 S (LEXCT,LEXI)=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXAM",66,0)
 . S LEXK=$O(^TMP("LEXTKN",$J,LEXI,""))
"RTN","LEXAM",67,0)
 . I $D(^LEX(757.01,"ASL",LEXK)) S LEXF=$O(^LEX(757.01,"ASL",LEXK,0)),LEXKEY(LEXF)=LEXK
"RTN","LEXAM",68,0)
 I $D(LEXKEY) N LEXKF S LEXKF=$O(LEXKEY(0)),LEXKF=LEXKEY(LEXKF) K LEXKEY S LEXKEY=LEXKF
"RTN","LEXAM",69,0)
 S:'$D(LEXKEY) LEXKEY=""
"RTN","LEXAM",70,0)
 ; Order by frequency
"RTN","LEXAM",71,0)
 S (LEXCT,LEXI)=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXAM",72,0)
 . S LEXK=$O(^TMP("LEXTKN",$J,LEXI,""))
"RTN","LEXAM",73,0)
 . I $D(^LEX(757.01,"ASL",LEXK)) D
"RTN","LEXAM",74,0)
 . . N LEXNK S LEXNK=$$EXP^LEXAS6(LEXK)
"RTN","LEXAM",75,0)
 . . I $D(^LEX(757.01,"ASL",LEXNK)),LEXNK[LEXK,$L(LEXNK)>$L(LEXK) S LEXK=LEXNK
"RTN","LEXAM",76,0)
 . . S LEXCT=LEXCT+1,LEXF=$O(^LEX(757.01,"ASL",LEXK,0))
"RTN","LEXAM",77,0)
 . . S LEXTKNS(LEXCT)=LEXK,LEXFOC(LEXF,LEXK)=""
"RTN","LEXAM",78,0)
 . . S LEXTKNS(0)=LEXCT
"RTN","LEXAM",79,0)
 . I '$D(^LEX(757.01,"ASL",LEXK)),$D(^LEX(757.01,"AWRD",LEXK)) D FRQ(LEXK) Q
"RTN","LEXAM",80,0)
 . I '$D(^LEX(757.01,"ASL",LEXK)),'$D(^LEX(757.01,"AWRD",LEXK)) D
"RTN","LEXAM",81,0)
 . . S LEXK=$$SPL^LEXAS(LEXK)
"RTN","LEXAM",82,0)
 . . I LEXK["^" D  Q
"RTN","LEXAM",83,0)
 . . . N LEXF,LEXT S LEXF=$P(LEXK,"^",1),LEXT=$P(LEXK,"^",2)
"RTN","LEXAM",84,0)
 . . . D FRQ(LEXF),FRQ(LEXT)
"RTN","LEXAM",85,0)
 . . D FRQ(LEXK)
"RTN","LEXAM",86,0)
 K ^TMP("LEXTKN",$J) Q:'$D(LEXFOC)  S LEXI=-999999999,LEXF=0
"RTN","LEXAM",87,0)
 F  S LEXI=$O(LEXFOC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAM",88,0)
 . S LEXK="" F  S LEXK=$O(LEXFOC(LEXI,LEXK)) Q:LEXK=""  D
"RTN","LEXAM",89,0)
 . . S LEXF=LEXF+1,LEXTKN(LEXF)=LEXK K LEXFOC(LEXI,LEXK)
"RTN","LEXAM",90,0)
 S:LEXF>0 LEXTKN(0)=LEXF
"RTN","LEXAM",91,0)
 Q
"RTN","LEXAM",92,0)
FRQ(LEXK) ; Frequency
"RTN","LEXAM",93,0)
 I $D(^LEX(757.01,"ASL",LEXK)) D
"RTN","LEXAM",94,0)
 . S LEXCT=LEXCT+1,LEXF=$O(^LEX(757.01,"ASL",LEXK,0))
"RTN","LEXAM",95,0)
 . S LEXTKNS(LEXCT)=LEXK,LEXFOC(LEXF,LEXK)=""
"RTN","LEXAM",96,0)
 . S LEXTKNS(0)=LEXCT
"RTN","LEXAM",97,0)
 I '$D(^LEX(757.01,"ASL",LEXK)),$D(^LEX(757.01,"AWRD",LEXK)) D
"RTN","LEXAM",98,0)
 . S LEXCT=LEXCT+1 N LEXC,LEXI S (LEXC,LEXI)=0
"RTN","LEXAM",99,0)
 . F  S LEXI=$O(^LEX(757.01,"AWRD",LEXK,LEXI)) Q:+LEXI=0  S LEXC=LEXC+1
"RTN","LEXAM",100,0)
 . S LEXF=LEXC,LEXTKNS(LEXCT)=LEXK,LEXFOC(LEXF,LEXK)=""
"RTN","LEXAM",101,0)
 . S LEXTKNS(0)=LEXCT
"RTN","LEXAM",102,0)
 Q
"RTN","LEXAMD")
0^154^B28007514
"RTN","LEXAMD",1,0)
LEXAMD ;ISL/KER - Look-up Modifiers ;04/21/2014
"RTN","LEXAMD",2,0)
 ;;2.0;LEXICON UTILITY;**6,25,80**;Sep 23, 1996;Build 1
"RTN","LEXAMD",3,0)
 ;               
"RTN","LEXAMD",4,0)
 ; Global Variables
"RTN","LEXAMD",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAMD",6,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXAMD",7,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAMD",8,0)
 ;               
"RTN","LEXAMD",9,0)
 ; External References
"RTN","LEXAMD",10,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXAMD",11,0)
 ;               
"RTN","LEXAMD",12,0)
 ; LEXX     IEN file 757.01 of an expression w/Modifiers
"RTN","LEXAMD",13,0)
 ; LEXVDT   Date to screen against
"RTN","LEXAMD",14,0)
 ;
"RTN","LEXAMD",15,0)
EN(LEXX,LEXVDT) ; Look-up Modifiers
"RTN","LEXAMD",16,0)
 S LEXX=+($G(LEXX)) Q:+($G(^TMP("LEXSCH",$J,"MOD",0)))=0
"RTN","LEXAMD",17,0)
 Q:+($G(LEXX))'>2  Q:'$D(^LEX(757.01,+($G(LEXX)),0))
"RTN","LEXAMD",18,0)
 Q:+($P($G(^LEX(757.01,+LEXX,1)),"^",6))=0
"RTN","LEXAMD",19,0)
 Q:'$D(^LEX(757.01,"APAR",LEXX))  N LEXXN D ARY
"RTN","LEXAMD",20,0)
 Q
"RTN","LEXAMD",21,0)
ARY ; Build Array of Modified Terms
"RTN","LEXAMD",22,0)
 N LEXLVL,LEXO,LEXI,LEXN,LEXA,LEXT,LEXDSP,LEXDES,LEXL
"RTN","LEXAMD",23,0)
 S LEXI=0,LEXXN=$G(^LEX(757.01,LEXX,0)),LEXA(0)=1
"RTN","LEXAMD",24,0)
 S LEXA(1,LEXX)=LEXXN,LEXLVL=+($G(LEX("LVL"))) S:LEXLVL=0 LEXLVL=1
"RTN","LEXAMD",25,0)
 F  S LEXI=$O(^LEX(757.01,"APAR",LEXX,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",26,0)
 . S LEXN=$G(^LEX(757.01,LEXI,1)) Q:LEXN=""  S LEXT=+($P(LEXN,"^",2)) Q:LEXT'=7
"RTN","LEXAMD",27,0)
 . S LEXO=+($P(LEXN,"^",10)) S:LEXO'=0 LEXO=LEXO+1 S:LEXO=0 LEXO=99999 I $D(LEXA(LEXO)) F  Q:'$D(LEXA(LEXO))  S LEXO=LEXO+1
"RTN","LEXAMD",28,0)
 . S LEXA(LEXO,LEXI)=$G(^LEX(757.01,LEXI,0)),LEXA(0)=+($G(LEXA(0)))+1
"RTN","LEXAMD",29,0)
 ; Quit if no Modified Terms Found
"RTN","LEXAMD",30,0)
 Q:+($G(LEXA(0)))'>1  S (LEXO,LEXI)=0 D FND
"RTN","LEXAMD",31,0)
 Q
"RTN","LEXAMD",32,0)
FND ; Build List of Modifiers Found (LEXFND)
"RTN","LEXAMD",33,0)
 K ^TMP("LEXSCH",$J,"EXM"),^TMP("LEXSCH",$J,"NAR"),^TMP("LEXSCH",$J,"SCH"),^TMP("LEXSCH",$J,"TOL"),^TMP("LEXSCH",$J,"NUM"),^TMP("LEXFND",$J)
"RTN","LEXAMD",34,0)
 F  S LEXO=$O(LEXA(LEXO)) Q:+LEXO=0  D
"RTN","LEXAMD",35,0)
 . S LEXI=0 F  S LEXI=$O(LEXA(LEXO,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",36,0)
 . . I LEXO=1 S LEXDES=$$DES(LEXI),LEXDSP=$$SO^LEXASO(LEXI,$G(LEXSHOW),1,$G(LEXVDT))
"RTN","LEXAMD",37,0)
 . . I LEXO>1 S (LEXDES,LEXDSP)=""
"RTN","LEXAMD",38,0)
 . . S LEXT=$G(LEXA(LEXO,LEXI)) Q:'$L(LEXT)
"RTN","LEXAMD",39,0)
 . . S:$L(LEXDES) LEXT=LEXT_" "_LEXDES
"RTN","LEXAMD",40,0)
 . . S:$L(LEXDSP) LEXT=LEXT_" "_LEXDSP
"RTN","LEXAMD",41,0)
 . . S LEXN=-999999999+($G(LEXO))
"RTN","LEXAMD",42,0)
 . . S ^TMP("LEXFND",$J,LEXN,LEXI)=LEXT
"RTN","LEXAMD",43,0)
 . . S ^TMP("LEXSCH",$J,"NUM",0)=$G(^TMP("LEXSCH",$J,"NUM",0))+1
"RTN","LEXAMD",44,0)
HIT ; Build HIT list
"RTN","LEXAMD",45,0)
 I $D(^TMP("LEXFND",$J)) D  Q
"RTN","LEXAMD",46,0)
 . K LEX,^TMP("LEXHIT",$J)
"RTN","LEXAMD",47,0)
 . S LEX=+($G(LEXA(0)))
"RTN","LEXAMD",48,0)
 . S LEX("LVL")=+($G(LEXLVL))+1
"RTN","LEXAMD",49,0)
 . I +LEX>0 D
"RTN","LEXAMD",50,0)
 . . N LEXMAT S LEXMAT=+LEX_" match"_$S(+LEX>1:"es",1:"")_" found for """_LEXXN_""""
"RTN","LEXAMD",51,0)
 . . S:$$UP^XLFSTR($G(LEXSUG))["SUGGEST" LEXMAT=+LEX_" suggestion"_$S(+LEX>1:"s",1:"")_" found for """_LEXXN_""""
"RTN","LEXAMD",52,0)
 . . S (^TMP("LEXSCH",$J,"MAT",0),LEX("MAT"))=LEXMAT D SCH,BEG,NAR N LEXSUG
"RTN","LEXAMD",53,0)
 I '$D(^TMP("LEXFND",$J)) D NOM
"RTN","LEXAMD",54,0)
 Q
"RTN","LEXAMD",55,0)
SCH ; Search Conditions/Results
"RTN","LEXAMD",56,0)
 K ^TMP("LEXSCH",$J,"EXM")
"RTN","LEXAMD",57,0)
 S ^TMP("LEXSCH",$J,"NAR",0)=$$UP(LEXXN)
"RTN","LEXAMD",58,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$$UP(LEXXN)
"RTN","LEXAMD",59,0)
 S ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAMD",60,0)
 S ^TMP("LEXSCH",$J,"NUM",0)=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",61,0)
 Q
"RTN","LEXAMD",62,0)
NOM ; No Modifiers
"RTN","LEXAMD",63,0)
 K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J,"EXM"),^TMP("LEXSCH",$J,"NAR"),^TMP("LEXSCH",$J,"SCH"),^TMP("LEXSCH",$J,"TOL")
"RTN","LEXAMD",64,0)
 S ^TMP("LEXSCH",$J,"NUM",0)=0 S:$L($G(LEXXN)) ^TMP("LEXSCH",$J,"NAR",0)=$$UP(LEXXN) S:$L($G(LEXXN)) ^TMP("LEXSCH",$J,"SCH",0)=$$UP(LEXXN)
"RTN","LEXAMD",65,0)
 Q
"RTN","LEXAMD",66,0)
NAR ; Narrative
"RTN","LEXAMD",67,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",68,0)
 Q
"RTN","LEXAMD",69,0)
DES(LEXX) ; Get description flag
"RTN","LEXAMD",70,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXAMD",71,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1),LEXM=+($G(^LEX(757,+($G(LEXM)),0))) S:$D(^LEX(757.01,LEXM,3)) LEXDES="*" S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXAMD",72,0)
BEG ; Begin List
"RTN","LEXAMD",73,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",74,0)
 Q:'$D(^TMP("LEXFND",$J))
"RTN","LEXAMD",75,0)
 N LEXRL,LEXJ,LEXI,LEXA,LEXSTR,LEXDP,LEXLL
"RTN","LEXAMD",76,0)
 S LEXRL=0,LEXLL=+($G(^TMP("LEXSCH",$J,"LEN",0)))
"RTN","LEXAMD",77,0)
 S:+LEXLL=0 (LEXRL,LEXLL)=5 S LEXJ=0,LEXI=-9999999999
"RTN","LEXAMD",78,0)
 ; Hit List      ^TMP("LEXHIT",$J,#)
"RTN","LEXAMD",79,0)
 F  S LEXI=$O(^TMP("LEXFND",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXAMD",80,0)
 . S LEXA=0
"RTN","LEXAMD",81,0)
 . F  S LEXA=$O(^TMP("LEXFND",$J,LEXI,LEXA)) Q:+LEXA=0!(LEXJ=LEXLL)  D  Q:+LEXA=0!(LEXJ=LEXLL)
"RTN","LEXAMD",82,0)
 . . S LEXJ=LEXJ+1,LEXDP=^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAMD",83,0)
 . . S ^TMP("LEXHIT",$J,0)=LEXJ
"RTN","LEXAMD",84,0)
 . . S ^TMP("LEXHIT",$J,LEXJ)=LEXA_"^"_LEXDP
"RTN","LEXAMD",85,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXM",0)))=+LEXA ^TMP("LEXSCH",$J,"EXM",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAMD",86,0)
 . . S:+($G(^TMP("LEXSCH",$J,"EXC",0)))=+LEXA ^TMP("LEXSCH",$J,"EXC",2)=LEXJ_"^"_$G(^LEX(757.01,+LEXA,0))
"RTN","LEXAMD",87,0)
 . . K ^TMP("LEXFND",$J,LEXI,LEXA)
"RTN","LEXAMD",88,0)
 ; List          LEX("LIST")
"RTN","LEXAMD",89,0)
 I $D(^TMP("LEXSCH",$J,"NUM",0)) S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",90,0)
 I LEXLL>0 D
"RTN","LEXAMD",91,0)
 . N LEXI,LEXJ S (LEXJ,LEXI)=0
"RTN","LEXAMD",92,0)
 . F  S LEXJ=$O(^TMP("LEXHIT",$J,LEXJ)) Q:+LEXJ=0!(+LEXI=LEXLL)  D  Q:+LEXI=LEXLL
"RTN","LEXAMD",93,0)
 . . S LEXI=LEXI+1,LEX("LIST",LEXI)=^TMP("LEXHIT",$J,LEXJ)
"RTN","LEXAMD",94,0)
 . . S LEX("LIST",0)=LEXI_"^"_LEXI
"RTN","LEXAMD",95,0)
 . . S (LEX("MAX"),^TMP("LEXSCH",$J,"LST",0))=LEXI
"RTN","LEXAMD",96,0)
 S ^TMP("LEXSCH",$J,"TOL",0)=0 S:$D(LEX("LIST",1)) ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAMD",97,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAMD",98,0)
 S:^TMP("LEXSCH",$J,"TOL",0)=1&(+($G(LEX))>0) LEX("MAT")=+LEX_" match"_$S(+LEX>1:"es",1:"")_" found"
"RTN","LEXAMD",99,0)
 S:+($G(LEX("MAX")))>0 LEX("MIN")=1
"RTN","LEXAMD",100,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",2))) S LEX("EXM")=^TMP("LEXSCH",$J,"EXM",2)
"RTN","LEXAMD",101,0)
 I $L($G(^TMP("LEXSCH",$J,"EXC",2))) S LEX("EXC")=^TMP("LEXSCH",$J,"EXC",2)
"RTN","LEXAMD",102,0)
 S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAMD",103,0)
 Q:'$D(^TMP("LEXFND",$J))  K:+($G(LEXRL))>0 LEXLL
"RTN","LEXAMD",104,0)
 Q
"RTN","LEXAMD",105,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAMD",106,0)
CLR K X,Y,LEXLL,LEXSHOW,LEX,^TMP("LEXSCH"),^TMP("LEXHIT"),^TMP("LEXFND") Q
"RTN","LEXAMD2")
0^153^B2872185
"RTN","LEXAMD2",1,0)
LEXAMD2 ;ISL/KER - Look-up Check Modifiers ;04/21/2014
"RTN","LEXAMD2",2,0)
 ;;2.0;LEXICON UTILITY;**6,80**;Sep 23, 1996;Build 1
"RTN","LEXAMD2",3,0)
 Q
"RTN","LEXAMD2",4,0)
CHKMOD ; Check Modifiers
"RTN","LEXAMD2",5,0)
 S LEXE=+($G(LEXE)) Q:'$D(^LEX(757.01,LEXE,0))
"RTN","LEXAMD2",6,0)
 N LEXC,LEXMDOK,LEXM,LEXI S (LEXI,LEXC)=0
"RTN","LEXAMD2",7,0)
 F  S LEXC=$O(^LEX(757.01,"APAR",LEXE,LEXC)) Q:+LEXC=0  D
"RTN","LEXAMD2",8,0)
 . S LEXMDOK=1 D CHKTKNS(LEXC) Q:'LEXMDOK
"RTN","LEXAMD2",9,0)
 . S LEXI=LEXI+1,LEXM(0)=LEXI,LEXM(LEXI)=LEXC
"RTN","LEXAMD2",10,0)
 I +($G(LEXM(0)))=1 D
"RTN","LEXAMD2",11,0)
 . Q:+($G(LEXM(1)))=0  Q:'$L($G(^LEX(757.01,+($G(LEXM(1))),0)))
"RTN","LEXAMD2",12,0)
 . S LEXE=+($G(LEXM(1))),LEXOK=1
"RTN","LEXAMD2",13,0)
 Q
"RTN","LEXAMD2",14,0)
CHKTKNS(LEXE) ; Check tolkens
"RTN","LEXAMD2",15,0)
 N LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXAMD2",16,0)
 N LEXI,LEXOE,LEXC,LEXD S LEXOE=LEXE,LEXI=1
"RTN","LEXAMD2",17,0)
 F  S LEXI=$O(LEXTKN(LEXI)) Q:+LEXI=0!('LEXMDOK)  D  Q:'LEXMDOK
"RTN","LEXAMD2",18,0)
 . N LEXT,LEXE S LEXT=LEXTKN(LEXI),LEXE=0,LEXMDOK=0
"RTN","LEXAMD2",19,0)
 . S LEXC=$$UP(^LEX(757.01,LEXOE,0))
"RTN","LEXAMD2",20,0)
 . S LEXD=$$UP(^LEX(757.01,LEXOE,2))
"RTN","LEXAMD2",21,0)
 . I LEXD[LEXT S LEXMDOK=1 Q
"RTN","LEXAMD2",22,0)
 . I LEXC[LEXT S LEXMDOK=1 Q
"RTN","LEXAMD2",23,0)
 . I $L(LEXT),$D(^LEX(757.01,LEXOE,5,"B",LEXT)) S LEXMDOK=1 Q
"RTN","LEXAMD2",24,0)
 . I $L(LEXT),$E($O(^LEX(757.01,LEXOE,5,"B",($E(LEXT,1,($L(LEXT)-1))_$C($A($E(LEXT,$L(LEXT)))-1)_"~"))),1,$L(LEXT))=LEXT S LEXMDOK=1 Q
"RTN","LEXAMD2",25,0)
 Q
"RTN","LEXAMD2",26,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAR")
0^86^B18722296
"RTN","LEXAR",1,0)
LEXAR ;ISL/KER - Look-up (Interpret User Response) ;04/21/2014
"RTN","LEXAR",2,0)
 ;;2.0;LEXICON UTILITY;**3,19,25,55,80**;Sep 23, 1996;Build 1
"RTN","LEXAR",3,0)
 ;               
"RTN","LEXAR",4,0)
 ; Global Variables
"RTN","LEXAR",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAR",6,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXAR",7,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAR",8,0)
 ;               
"RTN","LEXAR",9,0)
 ; External References
"RTN","LEXAR",10,0)
 ;    None
"RTN","LEXAR",11,0)
 ;               
"RTN","LEXAR",12,0)
 ; User Responses
"RTN","LEXAR",13,0)
 ;
"RTN","LEXAR",14,0)
 ; Numeric  -----------------------------------------------
"RTN","LEXAR",15,0)
 ;
"RTN","LEXAR",16,0)
 ; #             Select Entry
"RTN","LEXAR",17,0)
 ;
"RTN","LEXAR",18,0)
 ; Numeric^Comment ----------------------------------------
"RTN","LEXAR",19,0)
 ;
"RTN","LEXAR",20,0)
 ; IEN^COMMENT   Application comment about term
"RTN","LEXAR",21,0)
 ;
"RTN","LEXAR",22,0)
 ; Up-Arrow -----------------------------------------------
"RTN","LEXAR",23,0)
 ;
"RTN","LEXAR",24,0)
 ; ^#            Jump to # on list
"RTN","LEXAR",25,0)
 ; ^             End dialog with the user
"RTN","LEXAR",26,0)
 ; ^^            End dialog with the application
"RTN","LEXAR",27,0)
 ;
"RTN","LEXAR",28,0)
 ; Question -----------------------------------------------
"RTN","LEXAR",29,0)
 ;
"RTN","LEXAR",30,0)
 ; ?             Standard help in LEX("HLP")
"RTN","LEXAR",31,0)
 ; ??            Extended help in LEX("HLP")
"RTN","LEXAR",32,0)
 ; ?#            Definition for # in LEX("HLP")
"RTN","LEXAR",33,0)
 ;
"RTN","LEXAR",34,0)
 ; Null ---------------------------------------------------
"RTN","LEXAR",35,0)
 ;
"RTN","LEXAR",36,0)
 ;               Advance the selection list
"RTN","LEXAR",37,0)
 ;
"RTN","LEXAR",38,0)
 ; String -------------------------------------------------
"RTN","LEXAR",39,0)
 ;
"RTN","LEXAR",40,0)
 ; Narrative     Return and store Unresolved Narrative
"RTN","LEXAR",41,0)
 ;
"RTN","LEXAR",42,0)
 ; --------------------------------------------------------
"RTN","LEXAR",43,0)
EN(LEXUR,LEXVDT) ; Interpret user response
"RTN","LEXAR",44,0)
 D VDT^LEXU I '$D(LEX) D APN Q
"RTN","LEXAR",45,0)
 K LEX("HLP")
"RTN","LEXAR",46,0)
 N LEXLL,LEXMAX
"RTN","LEXAR",47,0)
 I $D(LEX("LIST",0)),+$G(^TMP("LEXSCH",$J,"NUM",0))>0 D
"RTN","LEXAR",48,0)
 .S LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",49,0)
 I LEXUR="END",+LEX>0 S LEXUR="^"_LEX
"RTN","LEXAR",50,0)
 S LEXLL=+$G(^TMP("LEXSCH",$J,"LEN",0))
"RTN","LEXAR",51,0)
 S:LEXLL=0 LEXLL=5
"RTN","LEXAR",52,0)
 S LEXMAX=+$G(^TMP("LEXSCH",$J,"LST",0))
"RTN","LEXAR",53,0)
 S LEXUR=$G(LEXUR)
"RTN","LEXAR",54,0)
 S (LEX("RES"),^TMP("LEXSCH",$J,"RES",0))=LEXUR
"RTN","LEXAR",55,0)
 S ^TMP("LEXSCH",$J,"RES",1)="User Response"
"RTN","LEXAR",56,0)
 ; Timed out/Quit
"RTN","LEXAR",57,0)
 I LEXUR="DTOUT"!(LEXUR="QUIT") D EDA Q
"RTN","LEXAR",58,0)
 ; Yes/No response list has one entry
"RTN","LEXAR",59,0)
 I $G(LEX)=1,+LEXUR=0,LEXUR'["^" D
"RTN","LEXAR",60,0)
 .I $E(LEXUR,1)="Y"!($E(LEXUR,1)="y") S LEXUR=1 Q
"RTN","LEXAR",61,0)
 .I LEXUR["?" D HLP^LEXAR3 Q
"RTN","LEXAR",62,0)
 .S LEXUR=""
"RTN","LEXAR",63,0)
 ; Null (Page Down)
"RTN","LEXAR",64,0)
 I LEXUR="" D NULL^LEXAR2 D END Q
"RTN","LEXAR",65,0)
 ; Minus (Page Up)
"RTN","LEXAR",66,0)
 I $E(LEXUR,1)="-" D LIST^LEXAL2("PGUP") D END Q
"RTN","LEXAR",67,0)
 ; Help
"RTN","LEXAR",68,0)
 I LEXUR["?" D HLP^LEXAR3 D END Q
"RTN","LEXAR",69,0)
 ; Up Arrow
"RTN","LEXAR",70,0)
 I LEXUR["^",$D(^TMP("LEXSCH",$J)) D UPA^LEXAR2(LEXUR) D END Q
"RTN","LEXAR",71,0)
 ; Select
"RTN","LEXAR",72,0)
 I +LEXUR>0,+LEXUR'>LEXMAX D SEL^LEXAR4(+LEXUR,$G(LEXVDT)) D END Q
"RTN","LEXAR",73,0)
 ; User Unresolved Narrative
"RTN","LEXAR",74,0)
 I LEXUR=$G(^TMP("LEXSCH",$J,"NAR",0)),+$G(^TMP("LEXSCH",$J,"UNR",0))=1 D  D END Q
"RTN","LEXAR",75,0)
 .D SAVE^LEXAR6
"RTN","LEXAR",76,0)
APN ; Application Unresolved Narrative
"RTN","LEXAR",77,0)
 I LEXUR["^",'$D(^TMP("LEXSCH",$J)),+LEXUR>0,$D(^LEX(757.01,+LEXUR,0)),$L($P(LEXUR,"^",2)) D  Q
"RTN","LEXAR",78,0)
 .K LEX
"RTN","LEXAR",79,0)
 .D COM^LEXAR6(LEXUR)
"RTN","LEXAR",80,0)
 D END
"RTN","LEXAR",81,0)
 Q
"RTN","LEXAR",82,0)
END ; End of Interpretation of the Users Response
"RTN","LEXAR",83,0)
 I $D(^TMP("LEXSCH",$J)) D
"RTN","LEXAR",84,0)
 .S (LEX("RES"),^TMP("LEXSCH",$J,"RES",0))=LEXUR
"RTN","LEXAR",85,0)
 .S ^TMP("LEXSCH",$J,"RES",1)="User Response"
"RTN","LEXAR",86,0)
 I $D(LEX("LIST",0)),+$G(^TMP("LEXSCH",$J,"NUM",0))>0 D
"RTN","LEXAR",87,0)
 .S LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",88,0)
 Q
"RTN","LEXAR",89,0)
SEL ; Selection made
"RTN","LEXAR",90,0)
 K LEX("RES"),LEX("ERR"),LEX("LIST"),LEX("MIN"),LEX("MAX"),LEX("MAT"),LEX("HLP")
"RTN","LEXAR",91,0)
 D NAR,EMF,KLST,KSCH
"RTN","LEXAR",92,0)
 S:$D(LEX("SEL")) LEX=0
"RTN","LEXAR",93,0)
 Q
"RTN","LEXAR",94,0)
EDU ; End Dialog with the User
"RTN","LEXAR",95,0)
 D NAR,EMF,KLST,KARL,KSCH
"RTN","LEXAR",96,0)
 S LEX=0
"RTN","LEXAR",97,0)
 Q
"RTN","LEXAR",98,0)
EDA ; End Dialog with the Application
"RTN","LEXAR",99,0)
 K LEX
"RTN","LEXAR",100,0)
 D KLST,KSCH
"RTN","LEXAR",101,0)
 Q
"RTN","LEXAR",102,0)
LST ; List exist
"RTN","LEXAR",103,0)
 D NAR,MAX,MIN,MAT,EML
"RTN","LEXAR",104,0)
 Q
"RTN","LEXAR",105,0)
 ;
"RTN","LEXAR",106,0)
KLST ; Kill Global List 
"RTN","LEXAR",107,0)
 ;      ^TMP("LEXFND",$J)
"RTN","LEXAR",108,0)
 ;      ^TMP("LEXHIT",$J)
"RTN","LEXAR",109,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXAR",110,0)
 Q
"RTN","LEXAR",111,0)
KSCH ; Kill Search Variables
"RTN","LEXAR",112,0)
 ;      ^TMP("LEXSCH",$J)
"RTN","LEXAR",113,0)
 ; PCH 55 - The only way to kill ^TMP("LEXSCH",$J) is exiting LEXA1
"RTN","LEXAR",114,0)
 Q
"RTN","LEXAR",115,0)
KARL ; Kill Array List and supporting variables
"RTN","LEXAR",116,0)
 ;       LEX("LIST"),LEX("MAT"),LEX("MIN"),LEX("MAX")
"RTN","LEXAR",117,0)
 K LEX("LIST"),LEX("MAT"),LEX("MIN"),LEX("MAX")
"RTN","LEXAR",118,0)
 K LEX("EXC"),LEX("EXM")
"RTN","LEXAR",119,0)
 Q
"RTN","LEXAR",120,0)
LEX ; Set LEX to the number of entries on the list
"RTN","LEXAR",121,0)
 S:+$G(^TMP("LEXSCH",$J,"NUM",0))>0 LEX=+$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXAR",122,0)
 Q
"RTN","LEXAR",123,0)
NAR ; Set LEX("NAR") to the user narrative
"RTN","LEXAR",124,0)
 K LEX("NAR")
"RTN","LEXAR",125,0)
 S:$L($G(^TMP("LEXSCH",$J,"NAR",0))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXAR",126,0)
 Q
"RTN","LEXAR",127,0)
MAX ; Set LEX("MAX") to the last entry reviewed by the user
"RTN","LEXAR",128,0)
 K LEX("MAX")
"RTN","LEXAR",129,0)
 S:+$G(^TMP("LEXSCH",$J,"LST",0))>0 LEX("MAX")=+$G(^TMP("LEXSCH",$J,"LST",0))
"RTN","LEXAR",130,0)
 Q
"RTN","LEXAR",131,0)
MIN ; Set LEX("MIN") to the first entry reviewed by the user
"RTN","LEXAR",132,0)
 K LEX("MIN")
"RTN","LEXAR",133,0)
 S:+$G(LEX("MAX"))>0 LEX("MIN")=1
"RTN","LEXAR",134,0)
 Q
"RTN","LEXAR",135,0)
EML ; Set LEX("EXM") post-selection IEN^Expression text
"RTN","LEXAR",136,0)
 K LEX("EXM")
"RTN","LEXAR",137,0)
 S:$L($G(^TMP("LEXSCH",$J,"EXM",2))) LEX("EXM")=$G(^TMP("LEXSCH",$J,"EXM",2))
"RTN","LEXAR",138,0)
 Q
"RTN","LEXAR",139,0)
EMF ; Set LEX("EXM") pre-selection LIST#^Expression text
"RTN","LEXAR",140,0)
 K LEX("EXM")
"RTN","LEXAR",141,0)
 I $L($G(^TMP("LEXSCH",$J,"EXM",0))),$L($G(^TMP("LEXSCH",$J,"EXM",1))) D
"RTN","LEXAR",142,0)
 .S LEX("EXM")=$G(^TMP("LEXSCH",$J,"EXM",0))_"^"_$G(^TMP("LEXSCH",$J,"EXM",1))
"RTN","LEXAR",143,0)
 Q
"RTN","LEXAR",144,0)
MAT ; Set "matches found" string and top of list flag
"RTN","LEXAR",145,0)
 ;       LEX("MAT")                 # Matches found
"RTN","LEXAR",146,0)
 ;       ^TMP("LEXSCH",$J,"TOL",0)  1 - Top of list
"RTN","LEXAR",147,0)
 ;                                   0 - Not top of list
"RTN","LEXAR",148,0)
 K LEX("MAT")
"RTN","LEXAR",149,0)
 I $D(LEX("SEL"))!('$D(^TMP("LEXSCH",$J)))!('$D(LEX("LIST"))) Q
"RTN","LEXAR",150,0)
 N LEXOL,LEXL
"RTN","LEXAR",151,0)
 S LEXOL=$G(^TMP("LEXSCH",$J,"TOL",0))
"RTN","LEXAR",152,0)
 S LEXL=$O(LEX("LIST",0))
"RTN","LEXAR",153,0)
 I LEXOL'=0,LEXL=1 S ^TMP("LEXSCH",$J,"TOL",0)=1
"RTN","LEXAR",154,0)
 I LEXOL'=0,LEXL'=1 S ^TMP("LEXSCH",$J,"TOL",0)=0
"RTN","LEXAR",155,0)
 I LEXOL=1,$L($G(^TMP("LEXSCH",$J,"MAT",0))) D
"RTN","LEXAR",156,0)
 .S LEX("MAT")=$G(^TMP("LEXSCH",$J,"MAT",0))
"RTN","LEXAR",157,0)
 Q
"RTN","LEXAR2")
0^156^B1200564
"RTN","LEXAR2",1,0)
LEXAR2 ;ISL/KER - Look-up Response (up arrow/jump/null) ;04/21/2014
"RTN","LEXAR2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAR2",3,0)
 ;               
"RTN","LEXAR2",4,0)
 ; Global Variables
"RTN","LEXAR2",5,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXAR2",6,0)
 ;               
"RTN","LEXAR2",7,0)
 ; External References
"RTN","LEXAR2",8,0)
 ;    None
"RTN","LEXAR2",9,0)
 ;               
"RTN","LEXAR2",10,0)
UPA(LEXUR) ; Up-Arrow Detected
"RTN","LEXAR2",11,0)
 I LEXUR="^^" S X=LEXUR D EDA^LEXAR Q
"RTN","LEXAR2",12,0)
 N LEXR S LEXR=$P(LEXUR,"^",2,299)
"RTN","LEXAR2",13,0)
 I +LEXR>0,+LEXR'>LEX D JMP Q
"RTN","LEXAR2",14,0)
 S LEXUR=$E(LEXUR,1) I LEXUR="^",+LEXR=0 S X=LEXUR D EDU^LEXAR Q
"RTN","LEXAR2",15,0)
 Q
"RTN","LEXAR2",16,0)
NULL ; Null response
"RTN","LEXAR2",17,0)
 N LEXEOA,LEXN S LEXEOA=+($P($G(LEX("LIST",0)),"^",1))
"RTN","LEXAR2",18,0)
 I LEXEOA=0 D EDA^LEXAR Q
"RTN","LEXAR2",19,0)
 S LEX=+($G(^TMP("LEXSCH",$J,"NUM",0))) I LEX=0 D EDA^LEXAR Q
"RTN","LEXAR2",20,0)
 I LEXEOA=LEX!(LEXEOA>LEX) D EDU^LEXAR Q
"RTN","LEXAR2",21,0)
 I LEXEOA'=LEX,LEXEOA<LEX D LIST^LEXAL2("PGDN")
"RTN","LEXAR2",22,0)
 Q
"RTN","LEXAR2",23,0)
JMP ; Jump to # on list
"RTN","LEXAR2",24,0)
 S LEXR=+($G(LEXR)) Q:LEXR'>0!(LEXR>LEX)
"RTN","LEXAR2",25,0)
 D LIST^LEXAL2(LEXR)
"RTN","LEXAR2",26,0)
 Q
"RTN","LEXAR3")
0^9^B79678965
"RTN","LEXAR3",1,0)
LEXAR3 ;ISL/KER - Look-up Response (Help, Def, MAX) ;04/21/2014
"RTN","LEXAR3",2,0)
 ;;2.0;LEXICON UTILITY;**73,80**;Sep 23, 1996;Build 1
"RTN","LEXAR3",3,0)
 ;               
"RTN","LEXAR3",4,0)
 ; Global Variables
"RTN","LEXAR3",5,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXAR3",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXAR3",7,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXAR3",8,0)
 ;               
"RTN","LEXAR3",9,0)
 ; External References
"RTN","LEXAR3",10,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXAR3",11,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEXAR3",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXAR3",13,0)
 ;               
"RTN","LEXAR3",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXAR3",15,0)
 ;     LEXLL   List Length NEWed in LEXAR
"RTN","LEXAR3",16,0)
 ;     LEXUR   User's Response NEWed in LEXAR
"RTN","LEXAR3",17,0)
 ;     LEXVDT  Versioning Date NEWed in LEXAR
"RTN","LEXAR3",18,0)
 ;               
"RTN","LEXAR3",19,0)
HLP ; Help
"RTN","LEXAR3",20,0)
 N LEXRP,LEXMAX K LEX("HLP")
"RTN","LEXAR3",21,0)
 S LEXMAX=+($G(^TMP("LEXSCH",$J,"LST",0)))
"RTN","LEXAR3",22,0)
 I LEXUR["??" D EXT Q
"RTN","LEXAR3",23,0)
 S LEXRP=+($P(LEXUR,"?",2,229))
"RTN","LEXAR3",24,0)
 I LEXRP>0,LEXRP'>LEXMAX D  Q
"RTN","LEXAR3",25,0)
 . S LEXRP=+($G(^TMP("LEXHIT",$J,LEXRP))) D DEF(LEXRP)
"RTN","LEXAR3",26,0)
 I LEXUR["?",LEXRP'["?",+LEXRP'>0 D STD
"RTN","LEXAR3",27,0)
 Q
"RTN","LEXAR3",28,0)
STD ; Standard Help   LEX("HLP",
"RTN","LEXAR3",29,0)
 I +($G(LEX))=1 D STD2 Q
"RTN","LEXAR3",30,0)
 N LEXC S LEXC=+($G(LEX("HLP",0))),LEXC=LEXC+1,LEX("HLP",0)=LEXC
"RTN","LEXAR3",31,0)
 S:LEX'>LEXMAX LEX("HLP",LEXC)="Select 1-"_LEXMAX_", ^ (quit), or ?# (help on a term)"
"RTN","LEXAR3",32,0)
 S:LEX>LEXMAX LEX("HLP",LEXC)="Select 1-"_LEXMAX_", ^ (quit), ^# (jump - "_LEX_"), ?# (term help), or <Return> for more"
"RTN","LEXAR3",33,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR3",34,0)
 Q
"RTN","LEXAR3",35,0)
STD2 ; Standard Help   LEX("HLP",
"RTN","LEXAR3",36,0)
 K LEX("HLP") S LEXRP=+($G(^TMP("LEXHIT",$J,1))) D DEF(LEXRP)
"RTN","LEXAR3",37,0)
 N LEXC S LEXC=+($G(LEX("HLP",0))) I LEXC>0 S LEXC=LEXC+1,LEX("HLP",LEXC)="",LEX("HLP",0)=LEXC
"RTN","LEXAR3",38,0)
 S LEXC=LEXC+1,LEX("HLP",0)=LEXC,LEX("HLP",LEXC)="Enter ""Yes"" to select, ""No"" to ignore, ""^"" to quit or ""?"" for term help"
"RTN","LEXAR3",39,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR3",40,0)
 Q
"RTN","LEXAR3",41,0)
EXT ; Extended Help   LEX("HLP",
"RTN","LEXAR3",42,0)
 Q:+($G(LEX))'>0  Q:+($G(LEXLL))'>0  I +($G(LEX))=1 D EXT2 Q
"RTN","LEXAR3",43,0)
 N LEXCP,LEXTP,LEXM S LEXTP=LEX\LEXLL S:LEX#LEXLL>0 LEXTP=LEXTP+1
"RTN","LEXAR3",44,0)
 S LEXCP=LEXMAX\LEXLL S:LEXMAX#LEXLL>0 LEXCP=LEXCP+1
"RTN","LEXAR3",45,0)
 S LEXM=$S(LEXTP>LEXCP:1,1:0) N LEXS,LEXE,LEXJ,LEXH,LEXR,LEXSTR,LEXC
"RTN","LEXAR3",46,0)
 S LEXC=+($G(LEX("HLP",0))) S LEXC=LEXC+1
"RTN","LEXAR3",47,0)
 S (LEXS,LEXE,LEXJ,LEXH,LEXR,LEXSTR)=""
"RTN","LEXAR3",48,0)
 S LEXS="You may select 1-"_LEXMAX
"RTN","LEXAR3",49,0)
 S LEXE="enter an ^ to quit" S:LEXM LEXJ="enter ^# to jump to another entry on the list (up to "_LEX_")"
"RTN","LEXAR3",50,0)
 S LEXH="enter ?# to display the definition of an entry marked with an asterisk (*)"
"RTN","LEXAR3",51,0)
 S:LEXM LEXR="or press <Return> to continue."
"RTN","LEXAR3",52,0)
 S:'LEXM LEXR="or press <Return> to quit without making a selection."
"RTN","LEXAR3",53,0)
 S LEXSTR=LEXS S:LEXE'="" LEXSTR=LEXSTR_", "_LEXE S:LEXJ'="" LEXSTR=LEXSTR_", "_LEXJ
"RTN","LEXAR3",54,0)
 S:LEXH'="" LEXSTR=LEXSTR_", "_LEXH S:LEXR'="" LEXSTR=LEXSTR_", "_LEXR
"RTN","LEXAR3",55,0)
 I $L(LEXSTR)>74 D
"RTN","LEXAR3",56,0)
 . F  Q:$L(LEXSTR)'>74  D
"RTN","LEXAR3",57,0)
 . . N LEXI F LEXI=74:-1:1 Q:$E(LEXSTR,LEXI)=" "
"RTN","LEXAR3",58,0)
 . . S LEX("HLP",LEXC)=$E(LEXSTR,1,(LEXI-1)),LEX("HLP",0)=LEXC
"RTN","LEXAR3",59,0)
 . . S LEXC=LEXC+1,LEXSTR=$E(LEXSTR,(LEXI+1),$L(LEXSTR))
"RTN","LEXAR3",60,0)
 . I $L(LEXSTR)>0,$L(LEXSTR)'>74 S LEXC=LEXC+1,LEX("HLP",LEXC)=LEXSTR,LEX("HLP",0)=LEXC
"RTN","LEXAR3",61,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR3",62,0)
 Q
"RTN","LEXAR3",63,0)
EXT2 ; Extended help for one
"RTN","LEXAR3",64,0)
 N LEXS,LEXE,LEXH,LEXSTR,LEXC,LEXDEF,LEXRP
"RTN","LEXAR3",65,0)
 S (LEXS,LEXE,LEXJ,LEXC,LEXH,LEXR,LEXSTR)=""
"RTN","LEXAR3",66,0)
 S LEXRP=+($G(^TMP("LEXHIT",$J,1))) D DEF(LEXRP)
"RTN","LEXAR3",67,0)
 S LEXC=+($G(LEX("HLP",0))) I LEXC>0 S LEXC=LEXC+1,LEX("HLP",LEXC)="",LEX("HLP",0)=LEXC
"RTN","LEXAR3",68,0)
 S LEXC=LEXC+1
"RTN","LEXAR3",69,0)
 S LEXDEF=+($G(^TMP("LEXHIT",$J,1)))
"RTN","LEXAR3",70,0)
 S LEXDEF=$S($D(^LEX(757.01,+LEXDEF,3)):1,1:0)
"RTN","LEXAR3",71,0)
 S LEXS="There was only one term found.  Enter ""Yes"" to select, ""No"" to ignore"
"RTN","LEXAR3",72,0)
 S LEXE="or an ""^"" to quit"
"RTN","LEXAR3",73,0)
 S LEXH="" S:+LEXDEF>0 LEXH="""?"" to display the term definition"
"RTN","LEXAR3",74,0)
 S LEXSTR=LEXS
"RTN","LEXAR3",75,0)
 S:LEXH'="" LEXSTR=LEXSTR_", "_LEXH
"RTN","LEXAR3",76,0)
 S:LEXE'="" LEXSTR=LEXSTR_", "_LEXE
"RTN","LEXAR3",77,0)
 I $L(LEXSTR)>74 D
"RTN","LEXAR3",78,0)
 . F  Q:$L(LEXSTR)'>74  D
"RTN","LEXAR3",79,0)
 . . N LEXI F LEXI=74:-1:1 Q:$E(LEXSTR,LEXI)=" "
"RTN","LEXAR3",80,0)
 . . S LEX("HLP",LEXC)=$E(LEXSTR,1,(LEXI-1)),LEX("HLP",0)=LEXC
"RTN","LEXAR3",81,0)
 . . S LEXC=LEXC+1,LEXSTR=$E(LEXSTR,(LEXI+1),$L(LEXSTR))
"RTN","LEXAR3",82,0)
 . I $L(LEXSTR)>0,$L(LEXSTR)'>74 S LEXC=LEXC+1,LEX("HLP",LEXC)=LEXSTR,LEX("HLP",0)=LEXC
"RTN","LEXAR3",83,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR3",84,0)
 Q
"RTN","LEXAR3",85,0)
DH ; Display Help
"RTN","LEXAR3",86,0)
 N LEXI S LEXI=0
"RTN","LEXAR3",87,0)
 F  S LEXI=$O(LEX("HLP",LEXI)) Q:+LEXI=0  W !,"  ",LEX("HLP",LEXI)
"RTN","LEXAR3",88,0)
 Q
"RTN","LEXAR3",89,0)
DA ; Display List
"RTN","LEXAR3",90,0)
 Q
"RTN","LEXAR3",91,0)
 N LEXI S LEXI=0
"RTN","LEXAR3",92,0)
 F  S LEXI=$O(LEX("LIST",LEXI)) Q:+LEXI=0  W !,"  ",LEX("LIST",LEXI)
"RTN","LEXAR3",93,0)
 Q
"RTN","LEXAR3",94,0)
DEF(LEXIEN) ; Definition Help LEX("HLP",
"RTN","LEXAR3",95,0)
 N LEXR,LEXLN,LEXMC,LEXTY,LEXC
"RTN","LEXAR3",96,0)
 S (LEXR,LEXIEN)=+($G(LEXIEN))
"RTN","LEXAR3",97,0)
 S LEXTY=$P($G(^LEX(757.01,LEXIEN,1)),"^",2)
"RTN","LEXAR3",98,0)
 D:$D(LEX("LIST")) LST^LEXAR Q:LEXIEN'>0
"RTN","LEXAR3",99,0)
 N LEXLN,LEXMC,LEXC S (LEXLN,LEXC)=0 K LEX("HLP")
"RTN","LEXAR3",100,0)
 I '$D(^LEX(757.01,LEXIEN,3,1)),LEXTY'=1 D
"RTN","LEXAR3",101,0)
 . S LEXIEN=+($G(^LEX(757.01,LEXIEN,1)))
"RTN","LEXAR3",102,0)
 . S LEXIEN=+($G(^LEX(757,LEXIEN,0)))
"RTN","LEXAR3",103,0)
 I $D(^LEX(757.01,LEXIEN,0)),$L($G(^LEX(757.01,LEXIEN,3,1,0))) D
"RTN","LEXAR3",104,0)
 . S LEXC=1,LEX("HLP",LEXC)=$G(^LEX(757.01,LEXIEN,0)) S LEXC=LEXC+1
"RTN","LEXAR3",105,0)
 . S LEX("HLP",LEXC)="",LEXC("HLP",0)=LEXC
"RTN","LEXAR3",106,0)
 . F  S LEXLN=$O(^LEX(757.01,LEXIEN,3,LEXLN)) Q:+LEXLN=0  D
"RTN","LEXAR3",107,0)
 . . S LEXC=LEXC+1 S LEX("HLP",LEXC)=^LEX(757.01,LEXIEN,3,LEXLN,0)
"RTN","LEXAR3",108,0)
 . . S LEX("HLP",0)=LEXC
"RTN","LEXAR3",109,0)
 I '$D(LEX("HLP")) D
"RTN","LEXAR3",110,0)
 . K LEX("HLP")
"RTN","LEXAR3",111,0)
 . S LEX("HLP",1)="No definition found"
"RTN","LEXAR3",112,0)
 . I $L($G(^LEX(757.01,LEXR,0))) D
"RTN","LEXAR3",113,0)
 . . N LEXEXP S LEXEXP=$G(^LEX(757.01,LEXR,0)) Q:'$L(LEXEXP)
"RTN","LEXAR3",114,0)
 . . S LEX("HLP",1)=LEX("HLP",1)_" found for "_$C(34)_LEXEXP_$C(34)
"RTN","LEXAR3",115,0)
 . S:'$L($G(^LEX(757.01,LEXR,0))) LEX("HLP",1)="No definition found"
"RTN","LEXAR3",116,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR3",117,0)
 Q
"RTN","LEXAR3",118,0)
 ;
"RTN","LEXAR3",119,0)
QMH(X) ; Question Mark Help (system sensitive)
"RTN","LEXAR3",120,0)
 K LEX N LEX2,LEX3,LEX4,LEXA,LEXC,LEXCT,LEXD,LEXEX,LEXF,LEXFIL,LEXHDT
"RTN","LEXAR3",121,0)
 N LEXI,LEXIDT,LEXLEN,LEXO,LEXOK,LEXP,LEXS,LEXSP,LEXT,LEXU,LEXX,LEXY,Y
"RTN","LEXAR3",122,0)
 S LEXHDT=$G(LEXVDT) S:LEXHDT'?7N LEXHDT=$G(^TMP("LEXSCH",$J,"VDT",0))
"RTN","LEXAR3",123,0)
 S:LEXHDT'?7N LEXHDT=$G(DT) S:LEXHDT'?7N LEXHDT=$$DT^XLFDT
"RTN","LEXAR3",124,0)
 S LEXFIL=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXAR3",125,0)
 S LEXY=$$HSYS^LEXHLP2(LEXFIL,LEXHDT),LEXIDT=$$IMP^ICDEX("10D")
"RTN","LEXAR3",126,0)
 S:$L(LEXY,"/")>2 LEXY=LEXY_" etc" S LEXX=$G(X),(LEX2,LEX3,LEX4)=""
"RTN","LEXAR3",127,0)
 S (LEXC,LEXS,LEXEX)="",LEXF=0 D:LEXX["??" HTXT
"RTN","LEXAR3",128,0)
 I LEXX["??"&($L(LEX2))&($L(LEX3))&($L(LEX4)) D
"RTN","LEXAR3",129,0)
 . S:$L(LEXC)&($L(LEXS))&($L(LEXEX)) LEXF=1
"RTN","LEXAR3",130,0)
 S LEXOK=0 I LEXHDT?7N,LEXIDT?7N,LEXHDT<LEXIDT D
"RTN","LEXAR3",131,0)
 . I LEXFIL["$$"&(LEXFIL["ONE^") D
"RTN","LEXAR3",132,0)
 . . D:LEXFIL["$$10P"&(LEXFIL'["$$10D") N10P^LEXHLP2
"RTN","LEXAR3",133,0)
 . . D:LEXFIL'["$$10P"&(LEXFIL["$$10D") N10D^LEXHLP2
"RTN","LEXAR3",134,0)
 . . D:LEXFIL["$$10P"&(LEXFIL["$$10D") N10^LEXHLP2
"RTN","LEXAR3",135,0)
 . I LEXFIL["$$SO^LEXU" D
"RTN","LEXAR3",136,0)
 . . D:LEXFIL["10P"&(LEXFIL'["10D") N10P^LEXHLP2
"RTN","LEXAR3",137,0)
 . . D:LEXFIL'["10P"&(LEXFIL["10D") N10D^LEXHLP2
"RTN","LEXAR3",138,0)
 . . D:LEXFIL["10P"&(LEXFIL["10D") N10^LEXHLP2
"RTN","LEXAR3",139,0)
 I 'LEXOK,LEXX["?"&(LEXX'["^") D
"RTN","LEXAR3",140,0)
 . N LEXP,LEXSP,LEXI,LEXCT S LEXSP="      "
"RTN","LEXAR3",141,0)
 . K LEXP S LEXP(1)="Enter a ""free text"" term.  "
"RTN","LEXAR3",142,0)
 . S LEXP(1)=LEXP(1)_"Best results occur using two to four full "
"RTN","LEXAR3",143,0)
 . S LEXP(1)=LEXP(1)_"or partial words without a suffix"
"RTN","LEXAR3",144,0)
 . S:LEXF>0 LEXP(2)="(i.e., """_LEX2_""", """_LEX3_""", """_LEX4_""")"
"RTN","LEXAR3",145,0)
 . D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXAR3",146,0)
 . F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXAR3",147,0)
 . . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXAR3",148,0)
 . . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXAR3",149,0)
 . S LEXCT=$O(LEX("HLP"," "),-1)+1
"RTN","LEXAR3",150,0)
 . S LEX("HLP",LEXCT)="  or  "
"RTN","LEXAR3",151,0)
 . K LEXP S LEXP(1)="Enter a classification code "
"RTN","LEXAR3",152,0)
 . S:$L(LEXY) LEXP(1)=LEXP(1)_"("_LEXY_") "
"RTN","LEXAR3",153,0)
 . S LEXP(1)=LEXP(1)_"to find the term associated with the code."
"RTN","LEXAR3",154,0)
 . I LEXF>0 D
"RTN","LEXAR3",155,0)
 . . S LEXP(2)="Example; a lookup of "_LEXS_" code "_LEXC_" "
"RTN","LEXAR3",156,0)
 . . S LEXP(2)=LEXP(2)_"returns one and only one term.  "
"RTN","LEXAR3",157,0)
 . . S LEXP(2)=LEXP(2)_"That term is the preferred term for the code "
"RTN","LEXAR3",158,0)
 . . S LEXP(2)=LEXP(2)_LEXC_", """_LEXEX_""""
"RTN","LEXAR3",159,0)
 . D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXAR3",160,0)
 . F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXAR3",161,0)
 . . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXAR3",162,0)
 . . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXAR3",163,0)
 . S LEXCT=$O(LEX("HLP"," "),-1)+1
"RTN","LEXAR3",164,0)
 . S LEX("HLP",LEXCT)="  or  "
"RTN","LEXAR3",165,0)
 . K LEXP S LEXP(1)="Enter a classification code "
"RTN","LEXAR3",166,0)
 . S:$L(LEXY) LEXP(1)=LEXP(1)_"("_LEXY_") "
"RTN","LEXAR3",167,0)
 . S LEXP(1)=LEXP(1)_"followed by a plus sign (+) to retrieve "
"RTN","LEXAR3",168,0)
 . S LEXP(1)=LEXP(1)_"all terms associated with the code."
"RTN","LEXAR3",169,0)
 . I LEXF>0 D
"RTN","LEXAR3",170,0)
 . . S LEXP(2)="Example; a lookup of "_LEXS_" code "_LEXC
"RTN","LEXAR3",171,0)
 . . S LEXP(2)=LEXP(2)_"+ returns all terms that are linked to "
"RTN","LEXAR3",172,0)
 . . S LEXP(2)=LEXP(2)_"the code "_LEXC_"."
"RTN","LEXAR3",173,0)
 . D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXAR3",174,0)
 . F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXAR3",175,0)
 . . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXAR3",176,0)
 . . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXAR3",177,0)
 S LEXC=$O(LEX("HLP"," "),-1) I LEXC>0 D
"RTN","LEXAR3",178,0)
 . S LEX=0,LEX("HLP",0)=LEXC S:$L($G(LEXX)) LEX("NAR")=$G(LEXX)
"RTN","LEXAR3",179,0)
 Q
"RTN","LEXAR3",180,0)
HTXT ;   Help Text (expanded)
"RTN","LEXAR3",181,0)
 N LEXF,LEXOK,LEXU
"RTN","LEXAR3",182,0)
 S LEXOK=0,LEXU=$G(LEXX) S LEXF=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXAR3",183,0)
 S (LEX2,LEX3,LEX4,LEXC,LEXS,LEXEX)="",LEXOK=0 D:'$L(LEXF) HICD^LEXHLP2
"RTN","LEXAR3",184,0)
 Q:LEXOK  D:LEXF["$$DX^LEXU" HICD^LEXHLP2  Q:LEXOK
"RTN","LEXAR3",185,0)
 I LEXF["$$"&(LEXF["ONE^") D  Q:LEXOK
"RTN","LEXAR3",186,0)
 . D:LEXF["$$10P"&(LEXF'["$$10D") H10P^LEXHLP2 D:LEXF["$$10D" H10D^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",187,0)
 . D:LEXF["$$CPC"&(LEXF'["$$CPT") HCPC^LEXHLP2 D:LEXF["$$CPT" HCPT^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",188,0)
 I LEXF["$$SO^LEXU" D  Q:LEXOK
"RTN","LEXAR3",189,0)
 . D:LEXF["10P"&(LEXF'["10D") H10P^LEXHLP2 D:LEXF["10D" H10D^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",190,0)
 . D:LEXF["CPC"&(LEXF'["CPT") HCPC^LEXHLP2 D:LEXF["CPT" HCPT^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",191,0)
 . D:LEXF["SCC" HSCC^LEXHLP2 Q:LEXOK  D:LEXF["DS3"!(LEXF["DS4") HDS4^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",192,0)
 . D:LEXF["OMA"&(LEXF'["NAN") HOMA^LEXHLP2 D:LEXF["NAN" HNAN^LEXHLP2 Q:LEXOK
"RTN","LEXAR3",193,0)
 D HICD^LEXHLP2
"RTN","LEXAR3",194,0)
 Q
"RTN","LEXAR3",195,0)
 ; 
"RTN","LEXAR3",196,0)
 ; Miscellaneous
"RTN","LEXAR3",197,0)
SA ;   Show Array
"RTN","LEXAR3",198,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEX("HLP",LEXI)) Q:+LEXI'>0  D
"RTN","LEXAR3",199,0)
 . W !,LEX("HLP",LEXI)
"RTN","LEXAR3",200,0)
 Q
"RTN","LEXAR3",201,0)
PR(LEXA,X) ;   Parse Array
"RTN","LEXAR3",202,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC
"RTN","LEXAR3",203,0)
 K ^UTILITY($J,"W") Q:'$D(LEXA)  S LEXLEN=+($G(X))
"RTN","LEXAR3",204,0)
 S:+LEXLEN'>0 LEXLEN=79 S LEXC=$O(LEXA(" "),-1) Q:+LEXC'>0
"RTN","LEXAR3",205,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0
"RTN","LEXAR3",206,0)
 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI=0  S X=$G(LEXA(LEXI)) D ^DIWP
"RTN","LEXAR3",207,0)
 K LEXA S (LEXC,LEXI)=0
"RTN","LEXAR3",208,0)
 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXAR3",209,0)
 . S LEXA(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," ")
"RTN","LEXAR3",210,0)
 . S LEXC=LEXC+1
"RTN","LEXAR3",211,0)
 S:$L(LEXC) LEXA=LEXC K ^UTILITY($J,"W")
"RTN","LEXAR3",212,0)
 Q
"RTN","LEXAR3",213,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXAR3",214,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXAR3",215,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXAR3",216,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXAR3",217,0)
 Q X
"RTN","LEXAR4")
0^85^B10464362
"RTN","LEXAR4",1,0)
LEXAR4 ;ISL/KER - Look-up Response (Select Entry) ;04/21/2014
"RTN","LEXAR4",2,0)
 ;;2.0;LEXICON UTILITY;**4,5,6,25,55,80**;Sep 23, 1996;Build 1
"RTN","LEXAR4",3,0)
 ;               
"RTN","LEXAR4",4,0)
 ; Global Variables
"RTN","LEXAR4",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXAR4",6,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXAR4",7,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXAR4",8,0)
 ;               
"RTN","LEXAR4",9,0)
 ; External References
"RTN","LEXAR4",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXAR4",11,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXAR4",12,0)
 ;    ^DIE                ICR  10018
"RTN","LEXAR4",13,0)
 ;               
"RTN","LEXAR4",14,0)
SEL(LEXUR,LEXVDT) ; Select # on list
"RTN","LEXAR4",15,0)
 K LEX("SEL") D VDT^LEXU N LEXLVL,LEXMAX,LEXLF S LEXLF=1,LEXMAX=+($G(^TMP("LEXSCH",$J,"LST",0)))
"RTN","LEXAR4",16,0)
 S LEX=+($G(LEX)),LEXUR=+($G(LEXUR))
"RTN","LEXAR4",17,0)
 I LEXMAX=0!(LEX=0) D EDA^LEXAR G SELQ
"RTN","LEXAR4",18,0)
 K LEX("ERR"),LEX("SEL") I LEXUR'>0!(LEXUR>LEXMAX) D  G SELQ
"RTN","LEXAR4",19,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",20,0)
 . S LEX("ERR",LEX("ERR",0))="User response out of range"
"RTN","LEXAR4",21,0)
 I '$D(^TMP("LEXHIT",$J,LEXUR)) D  G SELQ
"RTN","LEXAR4",22,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",23,0)
 . S LEX("ERR",LEX("ERR",0))="Selection is either out of range or invalid"
"RTN","LEXAR4",24,0)
 N LEXEXP S LEXEXP=+($P(^TMP("LEXHIT",$J,LEXUR),"^",1))
"RTN","LEXAR4",25,0)
 I '$D(^LEX(757.01,LEXEXP,0)) D  G SELQ
"RTN","LEXAR4",26,0)
 . S LEX("ERR",0)=+($G(LEX("ERR",0)))+1
"RTN","LEXAR4",27,0)
 . S LEX("ERR",LEX("ERR",0))="Selection not found in the Lexicon"
"RTN","LEXAR4",28,0)
 ; Set concept level, if modifiers are allowed build list
"RTN","LEXAR4",29,0)
 S LEXLVL=+($G(LEX("LVL"))) I LEXLVL'>1,+LEXEXP>2,$D(^LEX(757.01,+LEXEXP,0)),+($G(^TMP("LEXSCH",$J,"MOD",0)))>0 D EN^LEXAMD(LEXEXP,$G(LEXVDT))
"RTN","LEXAR4",30,0)
 ; Quit if modifiers found at next level
"RTN","LEXAR4",31,0)
 G:+($G(LEX("LVL")))>LEXLVL SELQ
"RTN","LEXAR4",32,0)
 D SET(LEXEXP,$G(LEXVDT)),EDU^LEXAR
"RTN","LEXAR4",33,0)
 G SELQ
"RTN","LEXAR4",34,0)
SET(LEXEXP,LEXVDT) ; Set LEX("SEL") Nodes
"RTN","LEXAR4",35,0)
 K LEX("SEL") D VDT^LEXU D SETEXP^LEXAR5(LEXEXP)
"RTN","LEXAR4",36,0)
 N LEXMC S LEXMC=+($P(^LEX(757.01,LEXEXP,1),"^",1))
"RTN","LEXAR4",37,0)
 ; If selected from the list increment frequency
"RTN","LEXAR4",38,0)
 ; Temporarily deactivated until after Oct 1, 2013
"RTN","LEXAR4",39,0)
 ; D:+($G(^TMP("LEXSCH",$J,"LST",0)))>0&(+($G(^TMP("LEXSCH",$J,"APP",0)))>1) INC(LEXMC)
"RTN","LEXAR4",40,0)
 N LEXMCE S LEXMCE=+(^LEX(757,LEXMC,0))
"RTN","LEXAR4",41,0)
 D SETSRC^LEXAR5(LEXEXP,$G(LEXVDT))
"RTN","LEXAR4",42,0)
 D:'$D(LEX("SEL","SRC","D",LEXMCE))&(LEXMCE'=LEXEXP) SETSRC^LEXAR5(LEXMCE,$G(LEXVDT))
"RTN","LEXAR4",43,0)
 D SETDEF^LEXAR5(LEXMCE)
"RTN","LEXAR4",44,0)
 D SETSTY^LEXAR5(LEXMC)
"RTN","LEXAR4",45,0)
 N LEXE S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AMC",LEXMC,LEXE)) Q:+LEXE=0  D
"RTN","LEXAR4",46,0)
 . Q:LEXE=LEXEXP  D SETEXP^LEXAR5(LEXE),SETSRC^LEXAR5(LEXE,$G(LEXVDT))
"RTN","LEXAR4",47,0)
 G:+($G(LEXLF))=0 SELQ
"RTN","LEXAR4",48,0)
 Q
"RTN","LEXAR4",49,0)
INC(LEXMC) ; Increment frequency counter in ^LEX(757)
"RTN","LEXAR4",50,0)
 N LEXF,LEXFQ S LEXMC=+($G(LEXMC)) Q:LEXMC=0  Q:'$D(^LEX(757,LEXMC))
"RTN","LEXAR4",51,0)
 S ZTSAVE("LEXMC")="",ZTRTN="FQ^LEXAR4",ZTDESC="Updating Lexicon Frequencies",ZTIO="",ZTDTH=$H
"RTN","LEXAR4",52,0)
 D ^%ZTLOAD,HOME^%ZIS K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR4",53,0)
 Q
"RTN","LEXAR4",54,0)
FQ ; Edit Concept Frequency
"RTN","LEXAR4",55,0)
 N LEXA,LEXM,LEXQ,LEXS,DA,DIC,DIE S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXAR4",56,0)
 S LEXM=+($G(LEXMC)) Q:LEXM=0  Q:'$D(^LEX(757,LEXM,0))
"RTN","LEXAR4",57,0)
 I '$D(^LEX(757.001,LEXM,0)) D AFQ G FQQ
"RTN","LEXAR4",58,0)
 S LEXQ=+($P($G(^LEX(757.001,LEXM,0)),"^",3)),LEXQ=LEXQ+1
"RTN","LEXAR4",59,0)
 S DA=+($G(LEXM)) Q:+DA=0  Q:'$D(^LEX(757.001,DA,0))
"RTN","LEXAR4",60,0)
 S LEXM=+($G(LEXMC)) Q:'$D(^LEX(757,LEXMC,0))  S LEXA=0
"RTN","LEXAR4",61,0)
 S (DIC,DIE)="^LEX(757.001,",DR="2////^S X=LEXQ"
"RTN","LEXAR4",62,0)
EFQ ; Lock record and edit frequency record
"RTN","LEXAR4",63,0)
 L +^LEX(757.001,+DA):1 I '$T S LEXA=LEXA+1 H 2 G:LEXA<4 EFQ
"RTN","LEXAR4",64,0)
 D:LEXA<4 ^DIE L -^LEX(757.001,+DA)
"RTN","LEXAR4",65,0)
 G FQQ
"RTN","LEXAR4",66,0)
 Q
"RTN","LEXAR4",67,0)
AFQ ; Add frequency record
"RTN","LEXAR4",68,0)
 N DIC,DA S ^LEX(757.001,LEXM,0)=LEXM_"^0^0" S DIC="^LEX(757.001,",DA=LEXM D SET^LEXNDX2 Q
"RTN","LEXAR4",69,0)
 Q
"RTN","LEXAR4",70,0)
FQQ ; Quit Frequency
"RTN","LEXAR4",71,0)
 Q
"RTN","LEXAR4",72,0)
SELQ ; Quit Selection
"RTN","LEXAR4",73,0)
 D:$D(LEX("SEL")) SEL^LEXAR
"RTN","LEXAR4",74,0)
 D:$D(LEX("LIST")) LST^LEXAR
"RTN","LEXAR4",75,0)
 Q
"RTN","LEXAR5")
0^2^B56192093
"RTN","LEXAR5",1,0)
LEXAR5 ;ISL/KER - Look-up Response (Select Entry) ;04/21/2014
"RTN","LEXAR5",2,0)
 ;;2.0;LEXICON UTILITY;**14,25,26,38,55,73,80**;Sep 23, 1996;Build 1
"RTN","LEXAR5",3,0)
 ;               
"RTN","LEXAR5",4,0)
 ; Global Variables
"RTN","LEXAR5",5,0)
 ;    ^LEX(757.011        N/A
"RTN","LEXAR5",6,0)
 ;    ^YSD(627.7,         ICR   1612
"RTN","LEXAR5",7,0)
 ;               
"RTN","LEXAR5",8,0)
 ; External References
"RTN","LEXAR5",9,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXAR5",10,0)
 ;    $$STATCHK^ICDEX     ICR   5747
"RTN","LEXAR5",11,0)
 ;    $$SYS^ICDEX         ICR   5747
"RTN","LEXAR5",12,0)
 ;    $$STATCHK^ICPTAPIU  ICR   1997
"RTN","LEXAR5",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXAR5",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXAR5",15,0)
 ;               
"RTN","LEXAR5",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXAR5",17,0)
 ;    LEX    LEX is killed in LEXA1
"RTN","LEXAR5",18,0)
 ;               
"RTN","LEXAR5",19,0)
SETEXP(LEXX)   ; Set LEX("SEL","EXP")
"RTN","LEXAR5",20,0)
 S LEXX=+($G(LEXX)) Q:LEXX'>0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",21,0)
 N LEXYPE S LEXYPE=$$TYPE(LEXX)
"RTN","LEXAR5",22,0)
 Q:$D(LEX("SEL","EXP","B",LEXX))
"RTN","LEXAR5",23,0)
 N LEXC S LEXC=+($G(LEX("SEL","EXP",0))),LEXC=LEXC+1
"RTN","LEXAR5",24,0)
 S LEX("SEL","EXP",LEXC)=LEXX_"^"_^LEX(757.01,LEXX,0)
"RTN","LEXAR5",25,0)
 S LEX("SEL","EXP",0)=LEXC
"RTN","LEXAR5",26,0)
 S LEX("SEL","EXP","B",LEXX,LEXC)=""
"RTN","LEXAR5",27,0)
 S:LEXYPE'="" LEX("SEL","EXP","C",LEXYPE,LEXC)=""
"RTN","LEXAR5",28,0)
 Q
"RTN","LEXAR5",29,0)
TYPE(LEXX)     ; Expression Type
"RTN","LEXAR5",30,0)
 N LEXYPE S LEXYPE=$P($G(^LEX(757.01,LEXX,1)),"^",2)
"RTN","LEXAR5",31,0)
 I +LEXYPE'>0!('$D(^LEX(757.011,+LEXYPE,0))) S LEXYPE="OTH"
"RTN","LEXAR5",32,0)
 I +LEXYPE>0,$D(^LEX(757.011,+LEXYPE,0)) D
"RTN","LEXAR5",33,0)
 . S LEXYPE=$P($G(^LEX(757.011,+LEXYPE,0)),"^",1)
"RTN","LEXAR5",34,0)
 . S:$L(LEXYPE)<3 LEXYPE="OTH"
"RTN","LEXAR5",35,0)
 . S LEXYPE=$$UP^XLFSTR($E(LEXYPE,1,3))
"RTN","LEXAR5",36,0)
 S LEXX=LEXYPE Q LEXX
"RTN","LEXAR5",37,0)
SETDEF(LEXX)   ; Set LEX("SEL","SIG")
"RTN","LEXAR5",38,0)
 S LEXX=+($G(LEXX)) Q:LEXX=0
"RTN","LEXAR5",39,0)
 Q:'$D(^LEX(757.01,LEXX,3,1,0))
"RTN","LEXAR5",40,0)
 N LEXC,LEXR S LEXR=0
"RTN","LEXAR5",41,0)
 F  S LEXR=$O(^LEX(757.01,LEXX,3,LEXR)) Q:+LEXR=0  D
"RTN","LEXAR5",42,0)
 . S LEXC=+($G(LEX("SEL","SIG",0))),LEXC=LEXC+1
"RTN","LEXAR5",43,0)
 . S LEX("SEL","SIG",LEXC)=$G(^LEX(757.01,LEXX,3,LEXR,0))
"RTN","LEXAR5",44,0)
 . S LEX("SEL","SIG",0)=LEXC
"RTN","LEXAR5",45,0)
 Q
"RTN","LEXAR5",46,0)
SETSTY(LEXX)   ; Set LEX("SEL","STY")
"RTN","LEXAR5",47,0)
 S LEXX=+($G(LEXX)) Q:LEXX=0
"RTN","LEXAR5",48,0)
 Q:'$D(^LEX(757.1,"B",LEXX))
"RTN","LEXAR5",49,0)
 N LEXC,LEXR,LEXSC,LEXST S LEXR=0
"RTN","LEXAR5",50,0)
 F  S LEXR=$O(^LEX(757.1,"B",LEXX,LEXR)) Q:+LEXR=0  D
"RTN","LEXAR5",51,0)
 . S LEXSC=+($P($G(^LEX(757.1,LEXR,0)),"^",2))
"RTN","LEXAR5",52,0)
 . Q:LEXSC=0  Q:'$D(^LEX(757.11,LEXSC))
"RTN","LEXAR5",53,0)
 . S LEXSC=$P($G(^LEX(757.11,LEXSC,0)),"^",2) Q:'$L(LEXSC)
"RTN","LEXAR5",54,0)
 . S LEXST=+($P($G(^LEX(757.1,LEXR,0)),"^",3))
"RTN","LEXAR5",55,0)
 . Q:LEXST=0  Q:'$D(^LEX(757.12,LEXST))
"RTN","LEXAR5",56,0)
 . S LEXST=$P($G(^LEX(757.12,LEXST,0)),"^",2) Q:'$L(LEXST)
"RTN","LEXAR5",57,0)
 . Q:$D(LEX("SEL","STY","CTL",(LEXSC_"^"_LEXST)))
"RTN","LEXAR5",58,0)
 . S LEXC=+($G(LEX("SEL","STY",0))),LEXC=LEXC+1
"RTN","LEXAR5",59,0)
 . S LEX("SEL","STY",LEXC)=LEXSC_"^"_LEXST
"RTN","LEXAR5",60,0)
 . S LEX("SEL","STY",0)=LEXC
"RTN","LEXAR5",61,0)
 . S LEX("SEL","STY","CTL",(LEXSC_"^"_LEXST))=""
"RTN","LEXAR5",62,0)
 Q
"RTN","LEXAR5",63,0)
SETSRC(LEXX,LEXVDT)     ; Set LEX("SEL","SRC")
"RTN","LEXAR5",64,0)
 D VDT^LEXU N LEXSO,LEXSRC,LEXS,LEXC,LEXLD,LEXLS,LEXSN S LEXS=0
"RTN","LEXAR5",65,0)
 F  S LEXS=$O(^LEX(757.02,"B",LEXX,LEXS)) Q:+LEXS=0  D
"RTN","LEXAR5",66,0)
 . S LEXSN=$G(^LEX(757.02,LEXS,0)),LEXSO=$P(LEXSN,"^",2)
"RTN","LEXAR5",67,0)
 . S LEXSRC=$P(LEXSN,"^",3) Q:LEXSRC=0
"RTN","LEXAR5",68,0)
 . Q:+$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSRC)'=1
"RTN","LEXAR5",69,0)
 . Q:'$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXX))
"RTN","LEXAR5",70,0)
 . S LEXSRC=$P(^LEX(757.03,LEXSRC,0),"^",2) Q:'$L(LEXSRC)
"RTN","LEXAR5",71,0)
 . Q:$D(LEX("SEL","SRC","CTL",(LEXSRC_"^"_LEXSO_"^"_LEXX)))
"RTN","LEXAR5",72,0)
 . S LEXC=+($G(LEX("SEL","SRC",0))),LEXC=LEXC+1
"RTN","LEXAR5",73,0)
 . S LEX("SEL","SRC",LEXC)=LEXSRC_"^"_LEXSO_"^"_LEXX
"RTN","LEXAR5",74,0)
 . S LEX("SEL","SRC","B",LEXSRC,LEXC)=""
"RTN","LEXAR5",75,0)
 . S LEX("SEL","SRC","C",LEXSO,LEXC)=""
"RTN","LEXAR5",76,0)
 . S LEX("SEL","SRC","D",LEXX,LEXC)=""
"RTN","LEXAR5",77,0)
 . S LEX("SEL","SRC",0)=LEXC
"RTN","LEXAR5",78,0)
 . S LEX("SEL","SRC","CTL",(LEXSRC_"^"_LEXSO_"^"_LEXX))=""
"RTN","LEXAR5",79,0)
 D SETVAS(LEXX,+($G(LEXVDT)))
"RTN","LEXAR5",80,0)
 Q
"RTN","LEXAR5",81,0)
SETVAS(LEXX,LEXVDT)     ; Find VA sources for LEX("SEL","VAS")
"RTN","LEXAR5",82,0)
 D VDT^LEXU N LEXSAB,LEXRTN,LEXR,LEXVP
"RTN","LEXAR5",83,0)
 F LEXSAB="ICD","ICP","CPT","CPC","DS4","10D","10P","SCC" D
"RTN","LEXAR5",84,0)
 . N LEXTAG K LEXSRC
"RTN","LEXAR5",85,0)
 . S LEXTAG=$S(LEXSAB="10D":"D10",LEXSAB="10P":"P10",1:LEXSAB)
"RTN","LEXAR5",86,0)
 . S LEXRTN=LEXTAG_"^LEXAR5"
"RTN","LEXAR5",87,0)
 . S:'$L($T(@LEXRTN)) LEXRTN="OTH^LEXAR5"
"RTN","LEXAR5",88,0)
 . D ALL^LEXSRC(LEXX,LEXSAB,LEXVDT)
"RTN","LEXAR5",89,0)
 . I +($G(LEXSRC(0)))>0 D @LEXRTN
"RTN","LEXAR5",90,0)
 Q
"RTN","LEXAR5",91,0)
 ;
"RTN","LEXAR5",92,0)
VA ; VA Sources
"RTN","LEXAR5",93,0)
ICD ;   ICD-9 Diagnosis
"RTN","LEXAR5",94,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",95,0)
 N LEXRT,LEXFI,LEXSY S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",96,0)
 S LEXFI=80,LEXRT=$$ROOT^ICDEX(LEXFI),LEXSY=$$SYS^ICDEX(LEXSAB) D COM
"RTN","LEXAR5",97,0)
 Q
"RTN","LEXAR5",98,0)
ICP ;   ICD-9 Procedures
"RTN","LEXAR5",99,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",100,0)
 N LEXRT,LEXFI,LEXSY S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",101,0)
 S LEXFI=80.1,LEXRT=$$ROOT^ICDEX(LEXFI),LEXSY=$$SYS^ICDEX(LEXSAB) D COM
"RTN","LEXAR5",102,0)
 Q
"RTN","LEXAR5",103,0)
CPT ;   Current Procedural Terminology
"RTN","LEXAR5",104,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",105,0)
 N LEXRT,LEXFI,LEXSY S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",106,0)
 S LEXFI=81,LEXRT="^ICPT(",LEXSY=$O(^LEX(757.02,"ASAB",$E(LEXSAB,1,3),0)) D COM
"RTN","LEXAR5",107,0)
 Q
"RTN","LEXAR5",108,0)
CPC ;   HCPCS Terminology
"RTN","LEXAR5",109,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",110,0)
 N LEXRT,LEXFI S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",111,0)
 S LEXFI=81,LEXRT="^ICPT(",LEXSY=$O(^LEX(757.02,"ASAB",$E(LEXSAB,1,3),0)) D COM
"RTN","LEXAR5",112,0)
 Q
"RTN","LEXAR5",113,0)
D10 ;   ICD-10 Diagnosis
"RTN","LEXAR5",114,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",115,0)
 N LEXRT,LEXFI,LEXSY S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",116,0)
 S LEXFI=80,LEXRT=$$ROOT^ICDEX(LEXFI),LEXSY=$$SYS^ICDEX(LEXSAB) D COM
"RTN","LEXAR5",117,0)
 Q
"RTN","LEXAR5",118,0)
P10 ;   ICD-10 Procedures
"RTN","LEXAR5",119,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",120,0)
 N LEXRT,LEXFI,LEXSY S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",121,0)
 S LEXFI=80.1,LEXRT=$$ROOT^ICDEX(LEXFI),LEXSY=$$SYS^ICDEX(LEXSAB) D COM
"RTN","LEXAR5",122,0)
 Q
"RTN","LEXAR5",123,0)
DS4 ;   DSN-IV Mental Disorders
"RTN","LEXAR5",124,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",125,0)
 N LEXRT,LEXFI S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",126,0)
 S LEXFI=627.7,LEXRT="^YSD(627.7,",LEXSY=$O(^LEX(757.02,"ASAB",$E(LEXSAB,1,3),0)) D COM
"RTN","LEXAR5",127,0)
 Q
"RTN","LEXAR5",128,0)
OTH ;   Other
"RTN","LEXAR5",129,0)
 Q:'$D(LEXX)  S LEXX=+($G(LEXX)) Q:LEXX=0  Q:'$D(^LEX(757.01,LEXX,0))
"RTN","LEXAR5",130,0)
 N LEXRT,LEXFI S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB)
"RTN","LEXAR5",131,0)
 S LEXFI=757.02,LEXRT="^LEX(757.02,",LEXSY=$O(^LEX(757.02,"ASAB",$E(LEXSAB,1,3),0)) D COM
"RTN","LEXAR5",132,0)
 Q
"RTN","LEXAR5",133,0)
COM ; Common MUMPS code for all VA Sources
"RTN","LEXAR5",134,0)
 S LEXRT=$G(LEXRT),LEXFI=+($G(LEXFI)),LEXSY=+($G(LEXSY)),LEXSAB=$E($G(LEXSAB),1,3)
"RTN","LEXAR5",135,0)
 Q:'$L($TR(LEXRT,"^(",""))  Q:+LEXFI'>0  Q:+LEXSY'>0  Q:$L(LEXSAB)'=3  D VDT^LEXU
"RTN","LEXAR5",136,0)
 N LEXI,LEXO,LEXSO,LEXR,LEXVP
"RTN","LEXAR5",137,0)
 S LEXI=0 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXAR5",138,0)
 . S LEXSO=$G(LEXSRC(LEXI)) Q:LEXSO=""
"RTN","LEXAR5",139,0)
 . S LEXO=$$STAT(LEXSO,+LEXFI,+($G(LEXVDT)),LEXSY) Q:+LEXO'>0
"RTN","LEXAR5",140,0)
 . S LEXO=+($P(LEXO,"^",2)) Q:+LEXO'>0
"RTN","LEXAR5",141,0)
 . S LEXC=+($G(LEX("SEL","VAS",0)))+1
"RTN","LEXAR5",142,0)
 . S LEXVP=+LEXO_";"_$TR(LEXRT,"^","")
"RTN","LEXAR5",143,0)
 . D VAS(+LEXFI,LEXSO,LEXX,LEXVP,LEXC,LEXSAB,LEXSY)
"RTN","LEXAR5",144,0)
 Q
"RTN","LEXAR5",145,0)
VAS(LEXFI,LEXSO,LEXIEN,LEXV,LEXCNT,LEXSAB,LEXSY)     ; Set LEX("SEL","VAS")
"RTN","LEXAR5",146,0)
 Q:'$L(LEXV)  Q:$D(LEX("SEL","VAS","V",LEXV))
"RTN","LEXAR5",147,0)
 N LEXT,LEXNAM S LEXSAB=$G(LEXSAB),LEXSY=+($G(LEXSY))
"RTN","LEXAR5",148,0)
 S LEXNAM="" S:+LEXSY>0 LEXNAM=$P($G(^LEX(757.03,+LEXSY,0)),"^",2)
"RTN","LEXAR5",149,0)
 S LEXT=LEXFI_"^"_LEXV_"^"_LEXSO_"^"_LEXIEN
"RTN","LEXAR5",150,0)
 S:$L(LEXSAB)&($L(LEXNAM)) LEXT=LEXT_"^"_LEXSAB_"^"_LEXNAM
"RTN","LEXAR5",151,0)
 S LEX("SEL","VAS",LEXCNT)=LEXT
"RTN","LEXAR5",152,0)
 S LEX("SEL","VAS","B",LEXFI,LEXCNT)=""
"RTN","LEXAR5",153,0)
 S LEX("SEL","VAS","C",LEXSO,LEXCNT)=""
"RTN","LEXAR5",154,0)
 S LEX("SEL","VAS","D",LEXIEN,LEXCNT)=""
"RTN","LEXAR5",155,0)
 S LEX("SEL","VAS","V",LEXV,LEXCNT)=""
"RTN","LEXAR5",156,0)
 S:+LEXSY>0 LEX("SEL","VAS","I",LEXSY,LEXCNT)=""
"RTN","LEXAR5",157,0)
 S LEX("SEL","VAS",0)=LEXCNT
"RTN","LEXAR5",158,0)
 S LEX("SEL","VAS","CTL",LEXT)=""
"RTN","LEXAR5",159,0)
 I $L($G(LEXSAB)) D
"RTN","LEXAR5",160,0)
 . S LEX("SEL","VAS","S",LEXSAB,LEXCNT)=""
"RTN","LEXAR5",161,0)
 . D HIST(LEXSO,LEXSAB,LEXCNT)
"RTN","LEXAR5",162,0)
 Q
"RTN","LEXAR5",163,0)
STAT(LEXX,LEXFI,LEXDT,LEXSY) ; Status
"RTN","LEXAR5",164,0)
 N LEXS,LEXF,LEXV,LEXO S LEXS=$G(LEXX),LEXF=+($G(LEXFI)),LEXV=$G(LEXDT)
"RTN","LEXAR5",165,0)
 Q:'$L(LEXS) 0  Q:+LEXF'>0 0  S:LEXV'?7N LEXV=$$DT^XLFDT S LEXSY=+($G(LEXSY))
"RTN","LEXAR5",166,0)
 I +($G(LEXF))=80!(+($G(LEXF))=80.1) D
"RTN","LEXAR5",167,0)
 . S LEXO=$$STATCHK^ICDEX(LEXS,+($G(LEXV)),LEXSY)
"RTN","LEXAR5",168,0)
 I +($G(LEXF))=81 D
"RTN","LEXAR5",169,0)
 . S LEXO=$$STATCHK^ICPTAPIU(LEXS,+($G(LEXV)))
"RTN","LEXAR5",170,0)
 I +($G(LEXF))=627.7 S LEXO="" D
"RTN","LEXAR5",171,0)
 . N LEXI S LEXI=0
"RTN","LEXAR5",172,0)
 . F  S LEXI=$O(^YSD(627.7,"B",LEXS,LEXI)) Q:+LEXI=0  D  Q:$L($G(LEXO))
"RTN","LEXAR5",173,0)
 . . Q:$P($G(^YSD(627.7,LEXI,0)),"^",2)'=4
"RTN","LEXAR5",174,0)
 . . S LEXO=$$STATCHK^ICDEX(LEXS,+($G(LEXV)),1),$P(LEXO,"^",1)=LEXI
"RTN","LEXAR5",175,0)
 I +($G(LEXF))=757.02 D
"RTN","LEXAR5",176,0)
 . S LEXO=$$STATCHK^LEXSRC2(LEXS,+($G(LEXV)),,$G(LEXSAB))
"RTN","LEXAR5",177,0)
 S X=$G(LEXO)
"RTN","LEXAR5",178,0)
 Q X
"RTN","LEXAR5",179,0)
HIST(LEXSO,LEXSAB,LEXCNT) ; History
"RTN","LEXAR5",180,0)
 Q:'$L($G(LEXSO))  Q:'$L($G(LEXSAB))  Q:+($G(LEXCNT))'>0
"RTN","LEXAR5",181,0)
 N LEXH,LEXE,LEXC,LEXN,LEXT S LEXN=$$HIST^LEXU(LEXSO,LEXSAB,.LEXH)
"RTN","LEXAR5",182,0)
 S LEXC=0,LEXE=0 F  S LEXE=$O(LEXH(LEXE)) Q:LEXE'?7N  D
"RTN","LEXAR5",183,0)
 . S LEXS="" F  S LEXS=$O(LEXH(LEXE,LEXS)) Q:LEXS'?1N  D
"RTN","LEXAR5",184,0)
 . . S LEXT=$G(LEXH(LEXE,LEXS)) Q:'$L(LEXT)  S LEXC=LEXC+1
"RTN","LEXAR5",185,0)
 . . S LEX("SEL","VAS",+LEXCNT,+LEXC)=LEXE_"^"_LEXS_"^"_LEXT
"RTN","LEXAR5",186,0)
 Q
"RTN","LEXAR5",187,0)
UP(X) ; Uppercase
"RTN","LEXAR5",188,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXAR6")
0^50^B38407694
"RTN","LEXAR6",1,0)
LEXAR6 ;ISL/KER - Look-up Response (Unresolved Narr) ;04/21/2014
"RTN","LEXAR6",2,0)
 ;;2.0;LEXICON UTILITY;**3,9,11,80**;Sep 23, 1996;Build 1
"RTN","LEXAR6",3,0)
 ;               
"RTN","LEXAR6",4,0)
 ; Global Variables
"RTN","LEXAR6",5,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXAR6",6,0)
 ;               
"RTN","LEXAR6",7,0)
 ; External References
"RTN","LEXAR6",8,0)
 ;    NOW^%DTC            ICR  10000
"RTN","LEXAR6",9,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXAR6",10,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXAR6",11,0)
 ;    FILE^DICN           ICR  10009
"RTN","LEXAR6",12,0)
 ;    ^DIE                ICR  10018
"RTN","LEXAR6",13,0)
 ;    ^DIM                ICR  10016
"RTN","LEXAR6",14,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXAR6",15,0)
 ;               
"RTN","LEXAR6",16,0)
 Q
"RTN","LEXAR6",17,0)
 ;  This routines saves Unresolved Narratives (terms not found
"RTN","LEXAR6",18,0)
 ;  in the Lexicon) in file 757.06.  It also saves comments about
"RTN","LEXAR6",19,0)
 ;  a term.  Both the Unresolved Narratives and comments are used
"RTN","LEXAR6",20,0)
 ;  as a tool to update the Lexicon Utility.
"RTN","LEXAR6",21,0)
 ;
"RTN","LEXAR6",22,0)
SAVE ; Save Unresolved Narrative
"RTN","LEXAR6",23,0)
 ; Quit saving Unresolved Narratives pch 80
"RTN","LEXAR6",24,0)
 G SAVEQ
"RTN","LEXAR6",25,0)
 G:'$L($G(^TMP("LEXSCH",$J,"NAR",0))) SAVEQ
"RTN","LEXAR6",26,0)
 N Y,DIC,DO,D0,DA,ZTQUEUED,ZTREQ,ZTSAVE,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,%
"RTN","LEXAR6",27,0)
 N LEXUNR S LEXUNR=$$UNR($G(^TMP("LEXSCH",$J,"NAR",0))) G:LEXUNR>0 SAVEQ
"RTN","LEXAR6",28,0)
 S ZTSAVE("^TMP(""LEXSCH"",$J,")="",ZTRTN="SV^LEXAR6",ZTDESC="Saving Unresolved Narrative",ZTIO="",ZTDTH=$H
"RTN","LEXAR6",29,0)
 D ^%ZTLOAD,HOME^%ZIS K ZTSAVE,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR6",30,0)
 D:+($G(^TMP("LEXSCH",$J,"NUM",0)))>0 SET^LEXAR4(1)
"RTN","LEXAR6",31,0)
 G SAVEQ
"RTN","LEXAR6",32,0)
COM(LEXX) ; Save a comment as a Unresolved Narative
"RTN","LEXAR6",33,0)
 D:+($G(LEX))'=0 KSCH^LEXAR K:+($G(LEX))=0 LEX N Y,DIC,DO,D0,DA,LEXCMT,LEXOK,LEXDUP,%,%X,%Y S LEXCMT=$G(LEXX)
"RTN","LEXAR6",34,0)
 ; Internal Entry Number
"RTN","LEXAR6",35,0)
 S ^TMP("LEXSCH",$J,"IEN",0)=+($P(LEXX,"^",1)) G:+($G(^TMP("LEXSCH",$J,"IEN",0)))=0 COMQ G:'$D(^LEX(757.01,+($G(^TMP("LEXSCH",$J,"IEN",0))),0)) COMQ
"RTN","LEXAR6",36,0)
 ; Expression
"RTN","LEXAR6",37,0)
 S ^TMP("LEXSCH",$J,"EXP",0)=$G(^LEX(757.01,+($G(^TMP("LEXSCH",$J,"IEN",0))),0)) G:'$L(^TMP("LEXSCH",$J,"EXP",0)) COMQ
"RTN","LEXAR6",38,0)
 ; Duplicate Comment
"RTN","LEXAR6",39,0)
 S LEXDUP=$$DUP($$UP^XLFSTR($G(^TMP("LEXSCH",$J,"EXP",0)))),LEXOK=$$OK(LEXCMT) G:'LEXOK COMQ
"RTN","LEXAR6",40,0)
 ; Comment
"RTN","LEXAR6",41,0)
 S ^TMP("LEXSCH",$J,"COM",0)=$P(LEXX,"^",2) G:'$L(^TMP("LEXSCH",$J,"COM",0)) COMQ
"RTN","LEXAR6",42,0)
 K LEXCMT,LEXDUP,LEXOK S ZTSAVE("^TMP(""LEXSCH"",$J,")="",ZTRTN="SV^LEXAR6",ZTDESC="Saving Unresolved Narrative Comment",ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXAR6",43,0)
COMQ ; End of Comment
"RTN","LEXAR6",44,0)
 K Y,ZTSAVE,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR6",45,0)
 ;
"RTN","LEXAR6",46,0)
SAVEQ ; End of Save
"RTN","LEXAR6",47,0)
 ;
"RTN","LEXAR6",48,0)
 ; End Dialog with the Application (Unresolved Narrative)
"RTN","LEXAR6",49,0)
 ;    Kill LEX, ^TMP("LEXFND",$J), ^TMP("LEXHIT",$J), ^TMP("LEXSCH",$J)
"RTN","LEXAR6",50,0)
 I +($G(LEX))'=0 D EDA^LEXAR
"RTN","LEXAR6",51,0)
 ;
"RTN","LEXAR6",52,0)
 ; End Dialog with the User
"RTN","LEXAR6",53,0)
 ;    Set LEX("NAR"), LEX("EXM") and LEX=0
"RTN","LEXAR6",54,0)
 ;    Kill ^TMP("LEXFND",$J), ^TMP("LEXHIT",$J)
"RTN","LEXAR6",55,0)
 ;    Kill LEX("LIST"),LEX("MAT"),LEX("MIN"),LEX("MAX")
"RTN","LEXAR6",56,0)
 I +($G(LEX))=0 D EDU^LEXAR
"RTN","LEXAR6",57,0)
 ;
"RTN","LEXAR6",58,0)
 ; End Dialog with the Application (Comment)
"RTN","LEXAR6",59,0)
 I $D(^TMP("LEXSCH",$J,"COM")) K ^TMP("LEXSCH",$J,"COM"),^TMP("LEXSCH",$J,"EXP"),^TMP("LEXSCH",$J,"IEN") K:+($G(LEX))=0 LEX
"RTN","LEXAR6",60,0)
 Q
"RTN","LEXAR6",61,0)
SV ; Save an unresolved narrative (tasked) in file 757.06
"RTN","LEXAR6",62,0)
 ; Quit saving Unresolved Narratives pch 80
"RTN","LEXAR6",63,0)
 Q
"RTN","LEXAR6",64,0)
 N X,Y,DA,DD,DO,D0,DIC,DLAYGO,DI,DIE,DIK,DQ,DR,LEXADD,LEXNAR,LEXDTG,LEXSCH,LEXNUM,LEXAPP,LEXCOM,LEXIEN,LEXSVC,LEXLOC,LEXFLN,LEXIDX,LEXSCT,LEXFIL
"RTN","LEXAR6",65,0)
 S LEXDTG=$$DTG,LEXADD=0
"RTN","LEXAR6",66,0)
 I '$D(^TMP("LEXSCH",$J,"COM",0)) D
"RTN","LEXAR6",67,0)
 . S LEXNAR=$$NAR,LEXSCH=$$SCH,LEXNUM=$$NUM,LEXAPP=$$APP,LEXSVC=$$SVC
"RTN","LEXAR6",68,0)
 . S LEXLOC=$$LOC,LEXFLN=$$FLN,LEXIDX=$$IDX,LEXSCT=$$SCT,LEXFIL=$$FIL
"RTN","LEXAR6",69,0)
 . S (DR,DIC("DR"))=".01////^S X=LEXNAR;1////^S X=LEXDTG;2////^S X=LEXSCH;3////^S X=LEXNUM;4////^S X=LEXAPP;5////^S X=LEXSVC;6////^S X=LEXLOC;7////^S X=LEXFLN;8////^S X=LEXIDX;9////^S X=LEXSCT;10////^S X=LEXFIL"
"RTN","LEXAR6",70,0)
 I $D(^TMP("LEXSCH",$J,"COM",0)) D
"RTN","LEXAR6",71,0)
 . S (X,LEXNAR)=$$EXP,LEXIEN=$$IEN,LEXCOM=$$CMT S:'$L(LEXCOM)!(+LEXIEN=0) LEXNAR=""
"RTN","LEXAR6",72,0)
 . S (DR,DIC("DR"))=".01///^S X=LEXNAR;1///^S X=LEXDTG;11////^S X=LEXIEN;12///^S X=LEXCOM"
"RTN","LEXAR6",73,0)
 I $L($G(LEXNAR)) D
"RTN","LEXAR6",74,0)
 . N X,DIC K DD,DO S DIC="^LEX(757.06,",DIC(0)="L",DLAYGO=757.06,X=LEXNAR
"RTN","LEXAR6",75,0)
 . D FILE^DICN S LEXADD=+($P($G(Y),"^",3)) D:LEXADD ED,SF D:'LEXADD KF K DLAYGO
"RTN","LEXAR6",76,0)
 S:$D(ZTQUEUED) ZTREQ="@" K:+($G(LEX))'=0 ^TMP("LEXSCH",$J) G:'LEXADD SVQ
"RTN","LEXAR6",77,0)
 D:+($$TOT)>49 SEND^LEXAR7
"RTN","LEXAR6",78,0)
SVQ ; End of Narrative Save
"RTN","LEXAR6",79,0)
 Q
"RTN","LEXAR6",80,0)
ED ; Edit fields  PCH 11
"RTN","LEXAR6",81,0)
 S DR=$G(DR),DIE="^LEX(757.06,",DA=+($G(Y)) Q:+DA'>0  Q:'$L(DR)  D ^DIE
"RTN","LEXAR6",82,0)
 Q
"RTN","LEXAR6",83,0)
DTG(LEXX) ; FM Day-Time-Group
"RTN","LEXAR6",84,0)
 N %,%H,%I D NOW^%DTC S LEXX=% Q LEXX
"RTN","LEXAR6",85,0)
NAR(LEXX) ; Narrative (provided by user)
"RTN","LEXAR6",86,0)
 S LEXX=$TR($$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"NAR",0)),1,99)),";"," ") S:$L(LEXX)'>0 LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",87,0)
EXP(LEXX) ; Narrative (provided by user)
"RTN","LEXAR6",88,0)
 S LEXX=$TR($$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"EXP",0)),1,99)),";"," ") S:$L(LEXX)'>0 LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",89,0)
SCH(LEXX) ; String searched for (provided by LEX)
"RTN","LEXAR6",90,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"SCH",0)),1,100)) S:'$L(LEXX) LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",91,0)
NUM(LEXX) ; Number of terms found in search
"RTN","LEXAR6",92,0)
 Q +($G(^TMP("LEXSCH",$J,"NUM",0)))
"RTN","LEXAR6",93,0)
APP(LEXX) ; Application conducting the search
"RTN","LEXAR6",94,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"APP",1)),1,63)) S:'$L(LEXX) LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",95,0)
IEN(LEXX) ; Internal Entry Number of term found (Comments only)
"RTN","LEXAR6",96,0)
 Q +($G(^TMP("LEXSCH",$J,"IEN",0)))
"RTN","LEXAR6",97,0)
SVC(LEXX) ; User's Service
"RTN","LEXAR6",98,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"SVC",0)),1,63)) S:'$L(LEXX) LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",99,0)
LOC(LEXX) ; User's Hospital Location
"RTN","LEXAR6",100,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"LOC",0)),1,63)) S:'$L(LEXX) LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",101,0)
FLN(LEXX) ; File number where search was conducted
"RTN","LEXAR6",102,0)
 S LEXX=$E($G(^TMP("LEXSCH",$J,"FLN",0)),1,7) S:'$L(LEXX)!($E(LEXX,1,3)'="757") LEXX="UNKNOWN" Q LEXX
"RTN","LEXAR6",103,0)
IDX(LEXX) ; Index used during the search
"RTN","LEXAR6",104,0)
 S LEXX=$E($$UP^XLFSTR($G(^TMP("LEXSCH",$J,"IDX",0))),1,8) S:'$L(LEXX) LEXX="UNKNONWN" Q LEXX
"RTN","LEXAR6",105,0)
SCT(LEXX) ; Shortcuts used during the search
"RTN","LEXAR6",106,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"SCT",1)),1,63)) S:'$L(LEXX) LEXX="NONE" Q LEXX
"RTN","LEXAR6",107,0)
FIL(LEXX) ; Filter used during the search - DIC("S")
"RTN","LEXAR6",108,0)
 N X S X=$G(^TMP("LEXSCH",$J,"FIL",0)) D ^DIM S:$L($G(X))>244 X="" S LEXX=$G(X) Q LEXX
"RTN","LEXAR6",109,0)
CMT(LEXX) ; Comment
"RTN","LEXAR6",110,0)
 S LEXX=$$UP^XLFSTR($E($G(^TMP("LEXSCH",$J,"COM",0)),1,199)) Q LEXX
"RTN","LEXAR6",111,0)
TOT(LEXX) ; Total # of narratives to send
"RTN","LEXAR6",112,0)
 N DA S (DA,LEXX)=0 D SF,KF F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  K:'$D(^LEX(757.06,DA,0)) ^LEX(757.06,DA,99) S:+($G(^LEX(757.06,DA,99)))>0 LEXX=LEXX+1
"RTN","LEXAR6",113,0)
 Q LEXX
"RTN","LEXAR6",114,0)
SF ; Set Send flag
"RTN","LEXAR6",115,0)
 N DA S DA=0 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  S:$D(^LEX(757.06,DA,0)) ^LEX(757.06,DA,99)=1
"RTN","LEXAR6",116,0)
 Q
"RTN","LEXAR6",117,0)
KF ; Kill Send flag
"RTN","LEXAR6",118,0)
 N DA S DA=0 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  K:'$D(^LEX(757.06,DA,0)) ^LEX(757.06,DA,99)
"RTN","LEXAR6",119,0)
 Q
"RTN","LEXAR6",120,0)
UNR(LEXX) ; Is the narrative in file 757.06
"RTN","LEXAR6",121,0)
 S LEXX=$G(LEXX) Q:LEXX="" 0
"RTN","LEXAR6",122,0)
 N LEXIN,DA S LEXIN=0,DA=0 F  S DA=$O(^LEX(757.06,"B",$E(LEXX,1,30),DA)) Q:+DA=0  S:$P($G(^LEX(757.06,+DA,0)),"^",1)=LEXX LEXIN=1
"RTN","LEXAR6",123,0)
 S LEXX=LEXIN Q LEXX
"RTN","LEXAR6",124,0)
DUP(LEXX) ; Is the comment narrative a duplicate 
"RTN","LEXAR6",125,0)
 S LEXX=$G(LEXX) Q:LEXX="" 0
"RTN","LEXAR6",126,0)
 N LEXIN,DA S LEXIN=0,DA=0
"RTN","LEXAR6",127,0)
 F  S DA=$O(^LEX(757.06,"B",$E(LEXX,1,30),DA)) Q:+DA=0  D
"RTN","LEXAR6",128,0)
 . S:$E($P($G(^LEX(757.06,+DA,0)),"^",1),1,$L(LEXX))=LEXX LEXIN=LEXIN+1
"RTN","LEXAR6",129,0)
 S LEXX=LEXIN Q LEXX
"RTN","LEXAR6",130,0)
OK(LEXX) ; Ok to process
"RTN","LEXAR6",131,0)
 S LEXX=$G(LEXX) N LEXI,LEXN,LEXC,LEXOK S LEXOK=1,LEXC=$E($$UP^XLFSTR($G(^TMP("LEXSCH",$J,"EXP",0))),1,30)
"RTN","LEXAR6",132,0)
 S LEXN=$E(LEXC,1,($L(LEXC)-1))_$C($A($E(LEXC,$L(LEXC)))-1)_"~"
"RTN","LEXAR6",133,0)
 F  S LEXN=$O(^LEX(757.06,"B",LEXN)) Q:LEXN=""!($E(LEXN,1,$L(LEXC))'=LEXC)  D
"RTN","LEXAR6",134,0)
 . S LEXI=0 F  S LEXI=$O(^LEX(757.06,"B",LEXN,LEXI)) Q:+LEXI=0  D
"RTN","LEXAR6",135,0)
 . . S:$G(^LEX(757.06,LEXI,4))=LEXX LEXOK=0
"RTN","LEXAR6",136,0)
 S LEXX=LEXOK Q LEXX
"RTN","LEXAR7")
0^175^B18786524
"RTN","LEXAR7",1,0)
LEXAR7 ;ISL/KER - Look-up Response (MAIL) ;04/21/2014
"RTN","LEXAR7",2,0)
 ;;2.0;LEXICON UTILITY;**9,25,73,80**;Sep 23, 1996;Build 1
"RTN","LEXAR7",3,0)
 ;               
"RTN","LEXAR7",4,0)
 ; Global Variables
"RTN","LEXAR7",5,0)
 ;    ^TMP("LEXMSG")      SACC 2.3.2.5.1
"RTN","LEXAR7",6,0)
 ;    ^TMP("LEXSEND")     SACC 2.3.2.5.1
"RTN","LEXAR7",7,0)
 ;               
"RTN","LEXAR7",8,0)
 ; External References
"RTN","LEXAR7",9,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXAR7",10,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXAR7",11,0)
 ;    ^DIK                ICR  10013
"RTN","LEXAR7",12,0)
 ;               
"RTN","LEXAR7",13,0)
 ;  This routines sends a Mailman message containing the Unresolved
"RTN","LEXAR7",14,0)
 ;  Narratives and Comments stored in file 757.06 to the Field Office
"RTN","LEXAR7",15,0)
 ;  at G.LEXUNR@ISC.DOMAIN.EXT.  Once sent, the Unresolved Narratives
"RTN","LEXAR7",16,0)
 ;  and comments are purged from file 757.06.  Both the Unresolved 
"RTN","LEXAR7",17,0)
 ;  Narratives and comments are used to update the Lexicon Utility.
"RTN","LEXAR7",18,0)
 ;
"RTN","LEXAR7",19,0)
 Q
"RTN","LEXAR7",20,0)
SEND ; Task MAILMAN to Send Unresolved Narratives to the ISC
"RTN","LEXAR7",21,0)
 I +($$TOT^LEXAR6)'>49!('$L($G(^LEX(757.06,0))))!(+($P($G(^LEX(757.06,0)),"^",4))<1) G SENDQ
"RTN","LEXAR7",22,0)
 G:$D(^TMP("LEXSEND")) SENDQ S ^TMP("LEXSEND",$J)=""
"RTN","LEXAR7",23,0)
 N X,Y,ZTQUEUED,ZTREQ,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,%,%X,%Y
"RTN","LEXAR7",24,0)
 S ZTRTN="ISC^LEXAR7",ZTDESC="Sending Narratives to IRMFO",ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXAR7",25,0)
SENDQ ; End of Send
"RTN","LEXAR7",26,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXAR7",27,0)
 Q
"RTN","LEXAR7",28,0)
DUMP ; Dump Narratives to Developer
"RTN","LEXAR7",29,0)
 D HOME^%ZIS S U="^" Q:+($G(DUZ))=0  Q:+($O(^LEX(757.06,0)))'>0
"RTN","LEXAR7",30,0)
 S ^TMP("LEXSEND",$J)="" K ^TMP("LEXMSG",$J) D ISC K ^TMP("LEXSEND",$J)
"RTN","LEXAR7",31,0)
 Q
"RTN","LEXAR7",32,0)
ISC ; Create MAILMAN Message for the IRMFO
"RTN","LEXAR7",33,0)
 G:'$D(^TMP("LEXSEND")) ISCQ G:$D(^TMP("LEXMSG")) ISCQ
"RTN","LEXAR7",34,0)
 ;
"RTN","LEXAR7",35,0)
 ; LEXT    Narrative Type
"RTN","LEXAR7",36,0)
 ; LEXN    Narrative
"RTN","LEXAR7",37,0)
 ; LEXA    # of Narratives Added to Message
"RTN","LEXAR7",38,0)
 ;
"RTN","LEXAR7",39,0)
 N DA,DIC,DIK,DIE,X,Y,LEXT,LEXN,LEXA S:$D(ZTQUEUED) ZTREQ="@" D INM S DA=0,DIK="^LEX(757.06,",LEXA=0
"RTN","LEXAR7",40,0)
 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  D
"RTN","LEXAR7",41,0)
 . S LEXT="UNR"
"RTN","LEXAR7",42,0)
 . I '$D(^LEX(757.06,DA,1)),'$D(^LEX(757.06,DA,2)),'$D(^LEX(757.06,DA,3)),$D(^LEX(757.06,DA,4)) S LEXT="COM"
"RTN","LEXAR7",43,0)
 . Q:+($G(^LEX(757.06,DA,99)))'>0
"RTN","LEXAR7",44,0)
 . S LEXN=$P($G(^LEX(757.06,DA,0)),"^",1) Q:'$L(LEXN)  Q:'$D(^LEX(757.06,"B",$E(LEXN,1,30),DA))
"RTN","LEXAR7",45,0)
 . Q:+($G(LEXA))>50
"RTN","LEXAR7",46,0)
 . D ADD("   ",LEXT) S LEXA=LEXA+1
"RTN","LEXAR7",47,0)
 . I $L($P($G(^LEX(757.06,DA,0)),U,1)) D
"RTN","LEXAR7",48,0)
 . . I LEXT="UNR" D ADD("NAR",$P($G(^LEX(757.06,DA,0)),U,1,2)) Q
"RTN","LEXAR7",49,0)
 . . D ADD("EXP",$P($G(^LEX(757.06,DA,0)),U,1)) Q
"RTN","LEXAR7",50,0)
 . D:$L($P($G(^LEX(757.06,DA,0)),U,3)) ADD("SCH",$P($G(^LEX(757.06,DA,0)),U,3))
"RTN","LEXAR7",51,0)
 . D:$L($P($G(^LEX(757.06,DA,0)),U,4)) ADD("FND",$P($G(^LEX(757.06,DA,0)),U,4))
"RTN","LEXAR7",52,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,1)) ADD("APP",$P($G(^LEX(757.06,DA,1)),U,1))
"RTN","LEXAR7",53,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,2)) ADD("SER",$P($G(^LEX(757.06,DA,1)),U,2))
"RTN","LEXAR7",54,0)
 . D:$L($P($G(^LEX(757.06,DA,1)),U,3)) ADD("LOC",$P($G(^LEX(757.06,DA,1)),U,3))
"RTN","LEXAR7",55,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,1)) ADD("FLN",$P($G(^LEX(757.06,DA,2)),U,1))
"RTN","LEXAR7",56,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,2)) ADD("IDX",$P($G(^LEX(757.06,DA,2)),U,2))
"RTN","LEXAR7",57,0)
 . D:$L($P($G(^LEX(757.06,DA,2)),U,3)) ADD("SCT",$P($G(^LEX(757.06,DA,2)),U,3))
"RTN","LEXAR7",58,0)
 . D:$L($G(^LEX(757.06,DA,3))) ADD("SCR",$G(^LEX(757.06,DA,3)))
"RTN","LEXAR7",59,0)
 . D:$L($P($G(^LEX(757.06,DA,4)),U,1)) ADD("IEN",$P($G(^LEX(757.06,DA,4)),U,1))
"RTN","LEXAR7",60,0)
 . D:$L($P($G(^LEX(757.06,DA,4)),U,2)) ADD("COM",$P($G(^LEX(757.06,DA,4)),U,2))
"RTN","LEXAR7",61,0)
 . I +($G(DA))>0 K ^LEX(757.06,+($G(DA)),99) D:$D(^LEX(757.06,+($G(DA)),0)) ^DIK
"RTN","LEXAR7",62,0)
 D N0,MAIL S LEXA=$$TOT^LEXAR6
"RTN","LEXAR7",63,0)
ISCQ ; End of Send MAILMAN Message
"RTN","LEXAR7",64,0)
 K LEXA,LEXN,LEXT S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXAR7",65,0)
 Q
"RTN","LEXAR7",66,0)
ADD(LEXI,LEXS) ; Add text to message
"RTN","LEXAR7",67,0)
 ; 
"RTN","LEXAR7",68,0)
 ; LEXI    Narrative Segment ID
"RTN","LEXAR7",69,0)
 ; LEXS    Segment String
"RTN","LEXAR7",70,0)
 ; LEXC    Counter/IEN for ^TMP("LEXMSG",$J,LEXC)
"RTN","LEXAR7",71,0)
 ;
"RTN","LEXAR7",72,0)
 N LEXC S LEXC=+($G(^TMP("LEXMSG",$J,0)))+1,^TMP("LEXMSG",$J,0)=LEXC,^TMP("LEXMSG",$J,LEXC)=LEXI
"RTN","LEXAR7",73,0)
 S:$G(LEXS)'="" ^TMP("LEXMSG",$J,LEXC)=^TMP("LEXMSG",$J,LEXC)_"^"_LEXS
"RTN","LEXAR7",74,0)
 Q
"RTN","LEXAR7",75,0)
MAIL ; MAILMAN
"RTN","LEXAR7",76,0)
 N XCNP,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,Y,LEXADR S LEXADR=$$ADR^LEXU G:'$L(LEXADR) MAILQ
"RTN","LEXAR7",77,0)
 G:'$D(^TMP("LEXMSG",$J)) MAILQ G:+($G(LEXA))=0 MAILQ G:+($G(^TMP("LEXMSG",$J,0)))=0 MAILQ
"RTN","LEXAR7",78,0)
 K XMZ N DIFROM S XMSUB="Unresolved Narratives - "_LEXA_" items"
"RTN","LEXAR7",79,0)
 S XMY(("G.LEXUNR@"_LEXADR))="",XMTEXT="^TMP(""LEXMSG"",$J,",XMDUZ=.5
"RTN","LEXAR7",80,0)
 ; Patch 57, discontinue the transmission of Unresolved Narratives
"RTN","LEXAR7",81,0)
 ; D ^XMD
"RTN","LEXAR7",82,0)
MAILQ ; End of MAILMAN
"RTN","LEXAR7",83,0)
 K ^TMP("LEXSEND",$J),^TMP("LEXMSG",$J),DIFROM,LEXA,XCNP,XMDUZ,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,XMSCR,REF, Q
"RTN","LEXAR7",84,0)
INM ; Initialize Message
"RTN","LEXAR7",85,0)
 N LEXI S (LEXI,^TMP("LEXMSG",$J,0))=0 F  S LEXI=$O(^TMP("LEXMSG",$J,LEXI)) Q:+LEXI=0  K ^TMP("LEXMSG",$J,LEXI)
"RTN","LEXAR7",86,0)
 Q
"RTN","LEXAR7",87,0)
N0 ; ^LEX(757.06,0)
"RTN","LEXAR7",88,0)
 N LEX3,LEX4,DA S (LEX3,LEX4,DA)=0 F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  S LEX3=DA,LEX4=LEX4+1
"RTN","LEXAR7",89,0)
 S LEX3=+LEX3,LEX4=+LEX4 S:+LEX3=0 LEX3="" S:+LEX4=0 LEX4="" S ^LEX(757.06,0)=$P($G(^LEX(757.06,0)),"^",1,2)_"^"_LEX3_"^"_LEX4
"RTN","LEXAR7",90,0)
 Q
"RTN","LEXAR7",91,0)
CLR ; Clear all narratives
"RTN","LEXAR7",92,0)
 N DA,DIK S DA=0,U="^",DIK="^LEX(757.06," F  S DA=$O(^LEX(757.06,DA)) Q:+DA=0  D ^DIK
"RTN","LEXAR7",93,0)
 N LEXN S LEXN=$P(^LEX(757.06,0),"^",1,2)_"^^" S ^LEX(757.06,0)=LEXN
"RTN","LEXAR7",94,0)
 Q
"RTN","LEXAS")
0^157^B6614534
"RTN","LEXAS",1,0)
LEXAS ;ISL/KER - Look-up Check Input ;04/21/2014
"RTN","LEXAS",2,0)
 ;;2.0;LEXICON UTILITY;**4,80**;Sep 23, 1996;Build 1
"RTN","LEXAS",3,0)
 ;
"RTN","LEXAS",4,0)
SPL(LEXX) ; Check word
"RTN","LEXAS",5,0)
 S LEXX=$G(LEXX) Q:LEXX="" LEXX
"RTN","LEXAS",6,0)
 Q:$L(LEXX)<6&(LEXX["/") LEXX   ; PCH 4 - Quit if LEXX=XX/XX 
"RTN","LEXAS",7,0)
 N LEXFQ,LEXFQT,LEXT S LEXFQ=0,LEXFQT=""
"RTN","LEXAS",8,0)
 S LEXT=$$DBL^LEXAS4(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",9,0)
 S LEXT=$$REM^LEXAS4(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",10,0)
 S LEXT=$$LC^LEXAS7(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",11,0)
 S LEXT=$$TP^LEXAS6(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",12,0)
 S LEXT=$$ONE^LEXAS2(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",13,0)
 S LEXT=$$SHIFT^LEXAS3(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",14,0)
 S LEXT=$$SPLIT^LEXAS5(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",15,0)
 S LEXT=$$TRIM^LEXAS6(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",16,0)
 S LEXT=$$TC^LEXAS7(LEXX) D COMP(LEXX,LEXT)
"RTN","LEXAS",17,0)
 S:LEXFQT'="" LEXX=LEXFQT
"RTN","LEXAS",18,0)
 Q LEXX
"RTN","LEXAS",19,0)
COMP(LEXKN,LEXF) ; Compare words
"RTN","LEXAS",20,0)
 Q:'$L($G(LEXF))  N LEXOTKN,LEXCLEN,LEXLEN,LEXI,LEXC,LEXDIF
"RTN","LEXAS",21,0)
 S LEXOTKN=LEXF,LEXCLEN=$L(LEXKN)+$L(LEXF) S:LEXF["^" LEXCLEN=LEXCLEN-1 S LEXC=0
"RTN","LEXAS",22,0)
 S:LEXF'["^"&(+($$W(LEXF))) LEXC=1
"RTN","LEXAS",23,0)
 S:LEXF["^" LEXF=$TR(LEXF,"^"," ")
"RTN","LEXAS",24,0)
 S:$L(LEXKN)>$L(LEXF) LEXLEN=$L(LEXKN)-$L(LEXF) S:$L(LEXF)>$L(LEXKN) LEXLEN=$L(LEXF)-$L(LEXKN)
"RTN","LEXAS",25,0)
 S:$L(LEXF)=$L(LEXKN) LEXLEN=0 S LEXCLEN=LEXCLEN-LEXLEN
"RTN","LEXAS",26,0)
 I LEXKN'=LEXF D
"RTN","LEXAS",27,0)
 . I LEXOTKN'["^" S LEXC=LEXC+$$CNT(LEXKN,LEXF)
"RTN","LEXAS",28,0)
 . I LEXOTKN["^" D
"RTN","LEXAS",29,0)
 . . S LEXC=LEXC+$$CNT($P(LEXOTKN,"^",2),$E(LEXKN,(($L(LEXKN)-$L($P(LEXOTKN,"^",2)))+1),$L(LEXKN)))
"RTN","LEXAS",30,0)
 . . S LEXC=LEXC+($$CNT($P(LEXOTKN,"^",1),$E(LEXKN,1,$L($P(LEXOTKN,"^",1)))))
"RTN","LEXAS",31,0)
 N LEXMUL S LEXMUL=LEXCLEN*LEXC
"RTN","LEXAS",32,0)
 I LEXOTKN'["^",$D(^LEX(757.01,"AWRD",LEXOTKN)) S LEXMUL=LEXMUL*2
"RTN","LEXAS",33,0)
 I LEXOTKN["^",$D(^LEX(757.01,"AWRD",$P(LEXOTKN,"^",2))) S LEXMUL=LEXMUL*2
"RTN","LEXAS",34,0)
 S LEXMUL=0 I LEXC>0,LEXCLEN>0 S LEXMUL=LEXCLEN/LEXC
"RTN","LEXAS",35,0)
 S LEXDIF=0 S:LEXMUL'=0 LEXDIF=LEXCLEN+LEXC
"RTN","LEXAS",36,0)
 I LEXDIF>LEXFQ S LEXFQ=LEXDIF,LEXFQT=LEXOTKN
"RTN","LEXAS",37,0)
 Q
"RTN","LEXAS",38,0)
CNT(LEXX,LEXY) ; Count characters
"RTN","LEXAS",39,0)
 N LEXC,LEXL,LEXI,LEXU S LEXC=0
"RTN","LEXAS",40,0)
 F LEXI=1:1:$L(LEXY)  D
"RTN","LEXAS",41,0)
 . S LEXL=$E(LEXY,LEXI) Q:$D(LEXU(LEXL))  S:$E(LEXX,LEXI)=$E(LEXY,LEXI) LEXC=LEXC+1
"RTN","LEXAS",42,0)
 . I $L(LEXY)<$L(LEXX) S:$E(LEXX,(LEXI+1))=$E(LEXY,LEXI) LEXC=LEXC+1
"RTN","LEXAS",43,0)
 . I $L(LEXY)>$L(LEXX) S:$E(LEXX,(LEXI-1))=$E(LEXY,LEXI) LEXC=LEXC+1
"RTN","LEXAS",44,0)
 . S LEXU(LEXL)=""
"RTN","LEXAS",45,0)
 K LEXU S LEXX=LEXC Q LEXX
"RTN","LEXAS",46,0)
 Q
"RTN","LEXAS",47,0)
W(LEXX) ; Is LEXX a word
"RTN","LEXAS",48,0)
 Q:'$L($G(LEXX)) 0
"RTN","LEXAS",49,0)
 I $D(^LEX(757.01,"AWRD",LEXX)) Q 1
"RTN","LEXAS",50,0)
 Q 0
"RTN","LEXAS2")
0^158^B11730023
"RTN","LEXAS2",1,0)
LEXAS2 ;ISL/KER - Look-up Check Input (ONE) ;04/21/2014
"RTN","LEXAS2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAS2",3,0)
 ;               
"RTN","LEXAS2",4,0)
 ; Global Variables
"RTN","LEXAS2",5,0)
 ;    None
"RTN","LEXAS2",6,0)
 ;               
"RTN","LEXAS2",7,0)
 ; External References
"RTN","LEXAS2",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXAS2",9,0)
 ;               
"RTN","LEXAS2",10,0)
ONE(LEXX) ; One letter missing/incorrect
"RTN","LEXAS2",11,0)
 ;
"RTN","LEXAS2",12,0)
 ; LEXRIM  Trimmed string
"RTN","LEXAS2",13,0)
 ; LEXI    Character position
"RTN","LEXAS2",14,0)
 ; LEXF    First portion
"RTN","LEXAS2",15,0)
 ; LEXT    Trailing portion
"RTN","LEXAS2",16,0)
 ; LEXTL   Trailing letter
"RTN","LEXAS2",17,0)
 ; LEXNF   Strings found
"RTN","LEXAS2",18,0)
 ; LEXO    $O variable
"RTN","LEXAS2",19,0)
 ; LEXNT   Temporary string
"RTN","LEXAS2",20,0)
 ; LEXX    String returned
"RTN","LEXAS2",21,0)
 ;
"RTN","LEXAS2",22,0)
 N LEXI,LEXF,LEXT,LEXTL,LEXNF,LEXO,LEXNT,LEXRIM
"RTN","LEXAS2",23,0)
 S LEXTL=$E(LEXX,$L(LEXX)),LEXRIM=$$TRIM^LEXAS6(LEXX)
"RTN","LEXAS2",24,0)
 S LEXF=$E(LEXRIM,1,($L(LEXRIM)-1)),LEXNF="",LEXKEY=$G(LEXKEY)
"RTN","LEXAS2",25,0)
 F LEXI=1:1:$L(LEXX) D
"RTN","LEXAS2",26,0)
 . S LEXF=$E(LEXX,1,LEXI)
"RTN","LEXAS2",27,0)
 . S LEXT=$E(LEXX,(LEXI+1),$L(LEXX))
"RTN","LEXAS2",28,0)
 . S LEXO=$$SCH^LEXAS6(LEXF)
"RTN","LEXAS2",29,0)
 . F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:LEXO'[LEXF  D
"RTN","LEXAS2",30,0)
 . . S LEXO=$E(LEXO,1,($L(LEXF)+1))
"RTN","LEXAS2",31,0)
 . . Q:$L(LEXO)<($L(LEXF)+1)
"RTN","LEXAS2",32,0)
 . . S LEXNT=LEXO_LEXT
"RTN","LEXAS2",33,0)
 . . I $D(^LEX(757.01,"ASL",LEXNT)) D
"RTN","LEXAS2",34,0)
 . . . S LEXNF=LEXNF_"/"_LEXNT
"RTN","LEXAS2",35,0)
 . . S LEXNT=LEXO_$E(LEXT,2,$L(LEXT))
"RTN","LEXAS2",36,0)
 . . I $D(^LEX(757.01,"ASL",LEXNT)) D
"RTN","LEXAS2",37,0)
 . . . S LEXNF=LEXNF_"/"_LEXNT
"RTN","LEXAS2",38,0)
 . . S LEXO=LEXO_"~"
"RTN","LEXAS2",39,0)
 S:$E(LEXNF,1)="/" LEXNF=$E(LEXNF,2,$L(LEXNF))
"RTN","LEXAS2",40,0)
 I LEXNF'="",LEXNF["/" D PICK
"RTN","LEXAS2",41,0)
 I LEXNF'=""&(LEXNF'["/") S LEXRIM=LEXNF Q LEXRIM
"RTN","LEXAS2",42,0)
 S LEXRIM=$$TRIM^LEXAS6(LEXRIM) Q LEXRIM
"RTN","LEXAS2",43,0)
 Q LEXRIM
"RTN","LEXAS2",44,0)
 ;
"RTN","LEXAS2",45,0)
PICK ; Pick one string
"RTN","LEXAS2",46,0)
 ;
"RTN","LEXAS2",47,0)
 ; LEXNF   Strings found
"RTN","LEXAS2",48,0)
 ; LEXAN   Array of strings by frequency
"RTN","LEXAS2",49,0)
 ; LEXI    Position/Piece in string
"RTN","LEXAS2",50,0)
 ; LEXIN   Position/Piece in altered string
"RTN","LEXAS2",51,0)
 ; LEXEXP  Expression
"RTN","LEXAS2",52,0)
 ; LEXES   Expresseion segment/string
"RTN","LEXAS2",53,0)
 ; LEXKEY  Key for selecting string
"RTN","LEXAS2",54,0)
 ; LEXKEYO $Orderable KEY
"RTN","LEXAS2",55,0)
 ; LEXOK   Flag - Selection is OK
"RTN","LEXAS2",56,0)
 ; LEXC    Control string
"RTN","LEXAS2",57,0)
 ; LEXP    Character position in segment
"RTN","LEXAS2",58,0)
 ; LEXR    Record number for expression
"RTN","LEXAS2",59,0)
 ; LEXN    Altered string
"RTN","LEXAS2",60,0)
 ; LEXM    Maximum string length
"RTN","LEXAS2",61,0)
 ; LEXS    Shortest string length
"RTN","LEXAS2",62,0)
 ;
"RTN","LEXAS2",63,0)
 N LEXOK,LEXI,LEXC,LEXN,LEXS,LEXM S LEXI=0,LEXC=""
"RTN","LEXAS2",64,0)
 S LEXS=$P(LEXNF,"/",1)
"RTN","LEXAS2",65,0)
 F LEXI=1:1:$L(LEXNF,"/") D
"RTN","LEXAS2",66,0)
 . S LEXN=$P(LEXNF,"/",LEXI) I LEXC="" S LEXC=LEXN Q
"RTN","LEXAS2",67,0)
 . S LEXM=$S($L(LEXC)>$L(LEXN):$L(LEXC),1:$L(LEXN))
"RTN","LEXAS2",68,0)
 . N LEXP F LEXP=LEXM:-1:1 Q:$E(LEXC,1,LEXP)=$E(LEXN,1,LEXP)
"RTN","LEXAS2",69,0)
 . S:LEXP<$L(LEXS) LEXS=$E(LEXS,1,LEXP)
"RTN","LEXAS2",70,0)
 S LEXC=$E(LEXX,($L(LEXS)+2),$L(LEXX)),LEXN=""
"RTN","LEXAS2",71,0)
 ; Key supplied
"RTN","LEXAS2",72,0)
 I $L($G(LEXKEY)) S LEXOK=0 D  Q:LEXOK
"RTN","LEXAS2",73,0)
 . ; order through pieces
"RTN","LEXAS2",74,0)
 . N LEXAN,LEXI
"RTN","LEXAS2",75,0)
 . F LEXI=1:1:$L(LEXNF,"/") D  Q:LEXOK
"RTN","LEXAS2",76,0)
 . . S LEXN=$P(LEXNF,"/",LEXI)
"RTN","LEXAS2",77,0)
 . . ; order through expressions
"RTN","LEXAS2",78,0)
 . . N LEXR,LEXKEYO S LEXR=0,LEXKEYO=$$SCH^LEXAS6(LEXKEY)
"RTN","LEXAS2",79,0)
 . . F  S LEXKEYO=$O(^LEX(757.01,"AWRD",LEXKEYO)) Q:LEXKEYO=""!(LEXKEYO'[LEXKEY)!(LEXOK)  D
"RTN","LEXAS2",80,0)
 . . . F  S LEXR=$O(^LEX(757.01,"AWRD",LEXKEYO,LEXR)) Q:+LEXR=0!(LEXOK)  D
"RTN","LEXAS2",81,0)
 . . . . N LEXEXP S LEXEXP=$$UP^XLFSTR(^LEX(757.01,LEXR,0))
"RTN","LEXAS2",82,0)
 . . . . N LEXIN,LEXES F LEXIN=1:1:$L(LEXEXP," ") D  Q:LEXOK
"RTN","LEXAS2",83,0)
 . . . . . S LEXES=$P(LEXEXP," ",LEXIN)
"RTN","LEXAS2",84,0)
 . . . . . Q:$E(LEXES,1)'=$E(LEXN,1)
"RTN","LEXAS2",85,0)
 . . . . . Q:$E(LEXN,$L(LEXN))'=$E(LEXES,$L(LEXN))
"RTN","LEXAS2",86,0)
 . . . . . N LEXP,LEXC S LEXC=0 F LEXP=1:1:$L(LEXN) D  Q:LEXOK
"RTN","LEXAS2",87,0)
 . . . . . . I $E(LEXES,1,$L(LEXN))[$E(LEXN,LEXP) S LEXC=LEXC+1
"RTN","LEXAS2",88,0)
 . . . . . S:LEXC>0 LEXAN(-(LEXC))=LEXN
"RTN","LEXAS2",89,0)
 . S LEXN="" S:$O(LEXAN(-999999))<0 LEXN=$O(LEXAN(-999999)),LEXN=LEXAN(LEXN)
"RTN","LEXAS2",90,0)
 . I LEXN'="" S LEXNF=LEXN,LEXOK=1
"RTN","LEXAS2",91,0)
 ; No key supplied
"RTN","LEXAS2",92,0)
 F LEXI=1:1:$L(LEXNF,"/") D  Q:LEXN[LEXC
"RTN","LEXAS2",93,0)
 . S LEXN=$P(LEXNF,"/",LEXI)
"RTN","LEXAS2",94,0)
 . I LEXN[LEXC,$E(LEXN,$L(LEXN))=LEXTL S LEXNF=LEXN
"RTN","LEXAS2",95,0)
 Q
"RTN","LEXAS3")
0^159^B4196429
"RTN","LEXAS3",1,0)
LEXAS3 ;ISL/KER - Look-up Check Input (SHIFT) ;04/21/2014
"RTN","LEXAS3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAS3",3,0)
 ;
"RTN","LEXAS3",4,0)
SHIFT(LEXX) ; Letters are shifted out of position
"RTN","LEXAS3",5,0)
 ;
"RTN","LEXAS3",6,0)
 ; LEXORG( Array of characters in the ORiGinal string
"RTN","LEXAS3",7,0)
 ; LEXORD( Array of characters in the $O variable
"RTN","LEXAS3",8,0)
 ; LEXE    $E string
"RTN","LEXAS3",9,0)
 ; LEXL    Length
"RTN","LEXAS3",10,0)
 ; LEXD    Flag - Difference of strings
"RTN","LEXAS3",11,0)
 ; LEXOK   Flag - Shifted string is ok to use
"RTN","LEXAS3",12,0)
 ; LEXO    $O variable
"RTN","LEXAS3",13,0)
 ; LEXI    Incremental counter
"RTN","LEXAS3",14,0)
 ; LEXX    Returned value
"RTN","LEXAS3",15,0)
 ;
"RTN","LEXAS3",16,0)
 ;
"RTN","LEXAS3",17,0)
 Q:$L(LEXX)<5 LEXX
"RTN","LEXAS3",18,0)
 N LEXT,LEXE,LEXL,LEXO,LEXOK,LEXORG,LEXORD
"RTN","LEXAS3",19,0)
 S LEXT=LEXX,LEXOK=0
"RTN","LEXAS3",20,0)
 F LEXL=1:1:3 D SHF Q:LEXOK  S LEXT=$E(LEXT,1,($L(LEXT)-1))
"RTN","LEXAS3",21,0)
 K LEXORG,LEXORD
"RTN","LEXAS3",22,0)
 S LEXX=LEXT
"RTN","LEXAS3",23,0)
 Q LEXX
"RTN","LEXAS3",24,0)
 ;
"RTN","LEXAS3",25,0)
SHF ; Shift letters in arrays
"RTN","LEXAS3",26,0)
 K LEXORG D ORG(LEXT)
"RTN","LEXAS3",27,0)
 S LEXE=$E(LEXT,1,2),LEXO=$$SCH^LEXAS6(LEXE)
"RTN","LEXAS3",28,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:LEXO=""!(LEXO'[LEXE)!(LEXOK)  D  Q:LEXOK
"RTN","LEXAS3",29,0)
 . Q:$L(LEXO)<$L(LEXT)!($L(LEXO)>($L(LEXT)+1))
"RTN","LEXAS3",30,0)
 . N LEXD D ORD(LEXO) S LEXD=$$COMP
"RTN","LEXAS3",31,0)
 . I LEXD S LEXOK=0 Q
"RTN","LEXAS3",32,0)
 . I 'LEXD S LEXT=LEXO,LEXOK=1 Q
"RTN","LEXAS3",33,0)
 Q
"RTN","LEXAS3",34,0)
 ;
"RTN","LEXAS3",35,0)
ORG(LEXX) ; Original tolken
"RTN","LEXAS3",36,0)
 K LEXORG N LEXI
"RTN","LEXAS3",37,0)
 F LEXI=1:1:$L(LEXX) D
"RTN","LEXAS3",38,0)
 . I $D(LEXORG($E(LEXX,LEXI))) D  Q
"RTN","LEXAS3",39,0)
 . . S LEXORG($E(LEXX,LEXI))=LEXORG($E(LEXX,LEXI))+1
"RTN","LEXAS3",40,0)
 . S LEXORG($E(LEXX,LEXI))=1
"RTN","LEXAS3",41,0)
 Q
"RTN","LEXAS3",42,0)
ORD(LEXO) ; Ordered tolken
"RTN","LEXAS3",43,0)
 K LEXORD N LEXI
"RTN","LEXAS3",44,0)
 F LEXI=1:1:$L(LEXO) D
"RTN","LEXAS3",45,0)
 . I $D(LEXORD($E(LEXO,LEXI))) D  Q
"RTN","LEXAS3",46,0)
 . . S LEXORD($E(LEXO,LEXI))=LEXORD($E(LEXO,LEXI))+1
"RTN","LEXAS3",47,0)
 . S LEXORD($E(LEXO,LEXI))=1
"RTN","LEXAS3",48,0)
 Q
"RTN","LEXAS3",49,0)
COMP(LEXX) ; Compare Original to Ordered
"RTN","LEXAS3",50,0)
 N LEXI,LEXD S LEXI="",LEXD=1
"RTN","LEXAS3",51,0)
 F  S LEXI=$O(LEXORG(LEXI)) Q:LEXI=""  D  Q:'LEXD
"RTN","LEXAS3",52,0)
 . I '$D(LEXORD(LEXI)) S LEXD=0 Q
"RTN","LEXAS3",53,0)
 . I LEXORG(LEXI)>LEXORD(LEXI) S LEXD=0
"RTN","LEXAS3",54,0)
 I LEXD=0 K LEXORD Q 1
"RTN","LEXAS3",55,0)
 S LEXI="",LEXD=1
"RTN","LEXAS3",56,0)
 F  S LEXI=$O(LEXORD(LEXI)) Q:LEXI=""  D  Q:'LEXD
"RTN","LEXAS3",57,0)
 . ;I '$D(LEXORG(LEXI)) Q
"RTN","LEXAS3",58,0)
 . I LEXORD(LEXI)>($G(LEXORG(LEXI))+1) S LEXD=0
"RTN","LEXAS3",59,0)
 I LEXD=0 K LEXORD Q 1
"RTN","LEXAS3",60,0)
 K LEXORD Q 0
"RTN","LEXAS4")
0^160^B8439698
"RTN","LEXAS4",1,0)
LEXAS4 ;ISL/KER - Look-up Check Input (DBL,REM) ;04/21/2014
"RTN","LEXAS4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAS4",3,0)
 ;
"RTN","LEXAS4",4,0)
DBL(LEXX) ; Excessive Double Characters
"RTN","LEXAS4",5,0)
 ;
"RTN","LEXAS4",6,0)
 ; LEXI    Incremental counter
"RTN","LEXAS4",7,0)
 ; LEXOK   Flag - found word yes/no
"RTN","LEXAS4",8,0)
 ; LEXT    Temporary word
"RTN","LEXAS4",9,0)
 ; LEXD    Temporary word (Double doubles)
"RTN","LEXAS4",10,0)
 ; LEXX    Return string
"RTN","LEXAS4",11,0)
 ;
"RTN","LEXAS4",12,0)
 N LEXI,LEXOK,LEXT,LEXD S LEXOK=0,LEXD=""
"RTN","LEXAS4",13,0)
 F LEXI=1:1:$L(LEXX) D  Q:LEXOK
"RTN","LEXAS4",14,0)
 . S LEXT=LEXX I $E(LEXX,LEXI)=$E(LEXX,(LEXI+1)) D
"RTN","LEXAS4",15,0)
 . . S LEXT=$E(LEXX,1,LEXI)_$E(LEXX,(LEXI+2),$L(LEXX))
"RTN","LEXAS4",16,0)
 . . I $D(^LEX(757.01,"ASL",LEXT)) S LEXX=LEXT,LEXOK=1 Q
"RTN","LEXAS4",17,0)
 . . Q:LEXI=1
"RTN","LEXAS4",18,0)
 . . S LEXT=$E(LEXX,1,(LEXI-1))_$E(LEXX,(LEXI+2),$L(LEXX))
"RTN","LEXAS4",19,0)
 . . I $D(^LEX(757.01,"ASL",LEXT)) S LEXX=LEXT,LEXOK=1 Q
"RTN","LEXAS4",20,0)
 I LEXOK Q LEXX
"RTN","LEXAS4",21,0)
 F LEXI=1:1:$L(LEXX) D
"RTN","LEXAS4",22,0)
 . I $E(LEXX,LEXI)'=$E(LEXX,(LEXI+1)) D
"RTN","LEXAS4",23,0)
 . . S LEXD=LEXD_$E(LEXX,LEXI)
"RTN","LEXAS4",24,0)
 I $D(^LEX(757.01,"ASL",LEXD)) S LEXX=LEXD
"RTN","LEXAS4",25,0)
 Q LEXX
"RTN","LEXAS4",26,0)
 ;
"RTN","LEXAS4",27,0)
REM(LEXX) ; Remove character
"RTN","LEXAS4",28,0)
 ;
"RTN","LEXAS4",29,0)
 ; LEXI    Incremental counter
"RTN","LEXAS4",30,0)
 ; LEXOK   Flag - found word yes/no
"RTN","LEXAS4",31,0)
 ; LEXF    First segment
"RTN","LEXAS4",32,0)
 ; LEXT    Trailing segment
"RTN","LEXAS4",33,0)
 ; LEXN    Altered tolken
"RTN","LEXAS4",34,0)
 ; LEXTN   Temporary altered tolken
"RTN","LEXAS4",35,0)
 ; LEXX    Return string
"RTN","LEXAS4",36,0)
 ;
"RTN","LEXAS4",37,0)
 N LEXI,LEXO,LEXCS,LEXCA,LEXTN,LEXOK,LEXF,LEXT,LEXN,LEXL
"RTN","LEXAS4",38,0)
 S LEXOK=0,LEXO=LEXX
"RTN","LEXAS4",39,0)
 F LEXI=2:1:$L(LEXO) D  Q:LEXOK
"RTN","LEXAS4",40,0)
 . S LEXF=$E(LEXO,1,(LEXI-1)),LEXT=$E(LEXO,(LEXI+1),$L(LEXO))
"RTN","LEXAS4",41,0)
 . I $D(^LEX(757.01,"AWRD",(LEXF_LEXT))),$O(^LEX(757.01,"ASL",(LEXF_LEXT),0))>1 D  Q
"RTN","LEXAS4",42,0)
 . . S LEXX=LEXF_LEXT,LEXOK=1
"RTN","LEXAS4",43,0)
 . S LEXN=$$REM2(LEXO,LEXI) I $D(^LEX(757.01,"AWRD",LEXN)) S LEXX=LEXN,LEXOK=1 Q
"RTN","LEXAS4",44,0)
 . Q:$D(^LEX(757.01,"ASL",$E(LEXO,1,LEXI)))
"RTN","LEXAS4",45,0)
 . S LEXF=$E(LEXO,1,(LEXI-1)),LEXT=$E(LEXO,(LEXI+1),$L(LEXO))
"RTN","LEXAS4",46,0)
 . I '$D(^LEX(757.01,"ASL",LEXF)),$O(^LEX(757.01,"ASL",LEXF,0))>1 D  Q
"RTN","LEXAS4",47,0)
 . . S LEXX=$E(LEXF,1,($L(LEXF)-1)),LEXOK=1
"RTN","LEXAS4",48,0)
 . S LEXCA=LEXF_LEXT
"RTN","LEXAS4",49,0)
 . S LEXCS=LEXF_$E(LEXT,1)
"RTN","LEXAS4",50,0)
 . I $D(^LEX(757.01,"ASL",LEXCS)),$O(^LEX(757.01,"ASL",LEXCS,0))>1 D
"RTN","LEXAS4",51,0)
 . . S LEXO=LEXCA,LEXI=LEXI+1 S:LEXI=$L(LEXO) LEXOK=1
"RTN","LEXAS4",52,0)
 . S LEXTN=$$SHIFT^LEXAS3(LEXO)
"RTN","LEXAS4",53,0)
 . I $D(^LEX(757.01,"AWRD",LEXTN)),$O(^LEX(757.01,"ASL",LEXTN,0))>1 S LEXX=LEXTN,LEXOK=1 Q
"RTN","LEXAS4",54,0)
 . I $D(^LEX(757.01,"ASL",LEXO)),$O(^LEX(757.01,"ASL",LEXO,0))>1 S LEXX=LEXO,LEXOK=1
"RTN","LEXAS4",55,0)
 Q LEXX
"RTN","LEXAS4",56,0)
REM2(LEXO,LEXI) ; Remove character at position LEXI
"RTN","LEXAS4",57,0)
 N LEXOK S LEXOK=0
"RTN","LEXAS4",58,0)
 S LEXF=$E(LEXO,1,LEXI)_$E(LEXO,(LEXI+2),(LEXI+3))
"RTN","LEXAS4",59,0)
 I $L(LEXF)>3 D
"RTN","LEXAS4",60,0)
 . N LEXT,LEXN,LEXP1,LEXP2 S LEXT=$E(LEXX,($L(LEXX)-4),$L(LEXX))
"RTN","LEXAS4",61,0)
 . S LEXN=$E(LEXF,1,($L(LEXF)-1))_$C($A($E(LEXF,$L(LEXF)))-1)_"~"
"RTN","LEXAS4",62,0)
 . F  S LEXN=$O(^LEX(757.01,"AWRD",LEXN)) Q:LEXN=""!($E(LEXN,1,$L(LEXF))'=LEXF)!(LEXOK)  D
"RTN","LEXAS4",63,0)
 . . S LEXP1=$E(LEXN,($L(LEXN)-($L(LEXT)-1)),$L(LEXN))
"RTN","LEXAS4",64,0)
 . . I $E(LEXN,($L(LEXN)-($L(LEXT)-1)),$L(LEXN))=LEXT S LEXO=LEXN,LEXOK=1
"RTN","LEXAS4",65,0)
 Q LEXO
"RTN","LEXAS5")
0^161^B15308783
"RTN","LEXAS5",1,0)
LEXAS5 ;ISL/KER - Look-up Check Input (SPLIT) ;04/21/2014
"RTN","LEXAS5",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAS5",3,0)
 ;               
"RTN","LEXAS5",4,0)
 ; Global Variables
"RTN","LEXAS5",5,0)
 ;    ^LEX(               N/A
"RTN","LEXAS5",6,0)
 ;               
"RTN","LEXAS5",7,0)
 ; External References
"RTN","LEXAS5",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXAS5",9,0)
 ;               
"RTN","LEXAS5",10,0)
SPLIT(LEXX) ; 2 tolkens/no space
"RTN","LEXAS5",11,0)
 ;
"RTN","LEXAS5",12,0)
 ; LEXI    Incremental counter
"RTN","LEXAS5",13,0)
 ; LEXOK   Flag - tolken found
"RTN","LEXAS5",14,0)
 ; LEXF    First segment
"RTN","LEXAS5",15,0)
 ; LEXFR   Remainder of First segment
"RTN","LEXAS5",16,0)
 ; LEXTT   2 Tolkens
"RTN","LEXAS5",17,0)
 ; LEXP1   First piece
"RTN","LEXAS5",18,0)
 ; LEXP2   Second piect
"RTN","LEXAS5",19,0)
 ; LEXX    Value returned
"RTN","LEXAS5",20,0)
 ;
"RTN","LEXAS5",21,0)
 Q:$D(^LEX(757.01,"ASL",LEXX)) LEXX
"RTN","LEXAS5",22,0)
 Q:$L(LEXX)<6 LEXX
"RTN","LEXAS5",23,0)
 N LEXF,LEXFR,LEXTT,LEXP1,LEXP2
"RTN","LEXAS5",24,0)
 ;
"RTN","LEXAS5",25,0)
 S LEXF=$$FS(LEXX)
"RTN","LEXAS5",26,0)
 S LEXFR="" S:$L($G(LEXF)) LEXFR=$$FR(LEXX,.LEXF)
"RTN","LEXAS5",27,0)
 S (LEXTT,LEXP1,LEXP2)=""
"RTN","LEXAS5",28,0)
 S LEXP1=LEXF
"RTN","LEXAS5",29,0)
 ;S:$L(LEXF)>2 LEXP1=$$REP(LEXF)
"RTN","LEXAS5",30,0)
 G:LEXP1="" END
"RTN","LEXAS5",31,0)
 S:$L(LEXFR)>3 LEXP2=LEXFR
"RTN","LEXAS5",32,0)
 G:LEXP2="" END
"RTN","LEXAS5",33,0)
 S LEXTT=LEXP1_"^"_LEXP2
"RTN","LEXAS5",34,0)
END ; Resolve first to a string, second to a tolken
"RTN","LEXAS5",35,0)
 K LEXKEY Q:$G(LEXTT)'["^" LEXX
"RTN","LEXAS5",36,0)
 S:$L(LEXTT) LEXX=LEXTT Q LEXX
"RTN","LEXAS5",37,0)
FS(LEXX) ; First segment
"RTN","LEXAS5",38,0)
 N LEXN,LEXE,LEXF,LEXT,LEXI,LEXOK S LEXN=$$TRIM^LEXAS6(LEXX),LEXOK=0
"RTN","LEXAS5",39,0)
 Q:'$L(LEXN) LEXX
"RTN","LEXAS5",40,0)
 F LEXI=2:1:$L(LEXN) D  Q:LEXOK
"RTN","LEXAS5",41,0)
 . S LEXF=$E(LEXX,1,LEXI) I $L(LEXF)>2,$D(^LEX(757.01,"ASL",LEXF)) S LEXX=LEXF,LEXOK=1 Q
"RTN","LEXAS5",42,0)
 . N LEXFI F LEXFI="757.04","757.041","757.05" D
"RTN","LEXAS5",43,0)
 . . Q:'$L(LEXF)  Q:'$L($P(LEXX,LEXF,2))
"RTN","LEXAS5",44,0)
 . . I $D(^LEX(LEXFI,"B",LEXF)) D
"RTN","LEXAS5",45,0)
 . . . I $D(^LEX(757.01,"AWRD",$P(LEXX,LEXF,2))) S LEXX=LEXF,LEXOK=1 Q
"RTN","LEXAS5",46,0)
 Q LEXX
"RTN","LEXAS5",47,0)
REP(LEXX) ; Replacement
"RTN","LEXAS5",48,0)
 N LEXR Q:'$D(^LEX(757.05,"B",LEXX)) LEXX
"RTN","LEXAS5",49,0)
 S LEXR=$O(^LEX(757.05,"B",LEXX,0)) Q:'$D(^LEX(757.05,LEXR,0)) LEXX
"RTN","LEXAS5",50,0)
 I $P(^LEX(757.05,LEXR,0),"^",3)="R" S LEXX=$P(^LEX(757.05,LEXR,0),"^",2)
"RTN","LEXAS5",51,0)
 Q LEXX
"RTN","LEXAS5",52,0)
FR(LEXX,LEXF) ; Remainder of first segment
"RTN","LEXAS5",53,0)
 N LEXFR,LEXN,LEXOK S LEXFR=$P(LEXX,LEXF,2)
"RTN","LEXAS5",54,0)
 I $L(LEXFR),'$D(^LEX(757.01,"AWRD",LEXFR)) D
"RTN","LEXAS5",55,0)
 . N LEXI,LEXT S LEXT=LEXFR,LEXOK=0 F LEXI=1:1:$L(LEXFR) D  Q:LEXOK
"RTN","LEXAS5",56,0)
 . . S LEXT=$E(LEXFR,LEXI,$L(LEXFR))
"RTN","LEXAS5",57,0)
 . . I $D(^LEX(757.01,"AWRD",LEXT)) D
"RTN","LEXAS5",58,0)
 . . . S LEXFR=LEXT,LEXOK=1
"RTN","LEXAS5",59,0)
 . . . I $P(LEXX,LEXFR,1)'="",$D(^LEX(757.01,"ASL",$P(LEXX,LEXFR,1))) S LEXF=$P(LEXX,LEXFR,1)
"RTN","LEXAS5",60,0)
 I $L(LEXFR),'$D(^LEX(757.01,"AWRD",LEXFR)) S LEXFR=$$COMP(LEXF,LEXFR)
"RTN","LEXAS5",61,0)
 Q:'$L(LEXFR) ""
"RTN","LEXAS5",62,0)
 I '$D(^LEX(757.01,"AWRD",LEXFR)),$L(LEXFR)>4 D
"RTN","LEXAS5",63,0)
 . S LEXN=$E(LEXFR,1,4)
"RTN","LEXAS5",64,0)
 . I $L(LEXN),$D(^LEX(757.01,"AWRD",LEXN)) S LEXFR=LEXN
"RTN","LEXAS5",65,0)
 I $L(LEXFR),$D(^LEX(757.01,"AWRD",LEXFR)) S LEXX=LEXFR Q LEXX
"RTN","LEXAS5",66,0)
 I $L(LEXFR),'$D(^LEX(757.01,"AWRD",LEXFR)) S LEXX="" Q LEXX
"RTN","LEXAS5",67,0)
 I '$L(LEXFR) S LEXX=""
"RTN","LEXAS5",68,0)
 Q LEXX
"RTN","LEXAS5",69,0)
COMP(LEXF,LEXS) ; Compare first segment to second segment
"RTN","LEXAS5",70,0)
 N LEXN,LEXT,LEXO S LEXO=LEXS
"RTN","LEXAS5",71,0)
 S LEXN=$$TP^LEXAS6(LEXO)
"RTN","LEXAS5",72,0)
 I $D(^LEX(757.01,"AWRD",LEXN)),+($$CHK(LEXF,LEXN)) S LEXS=LEXN Q LEXS
"RTN","LEXAS5",73,0)
 S LEXT=$$SHIFT^LEXAS3(LEXO)
"RTN","LEXAS5",74,0)
 I $D(^LEX(757.01,"AWRD",LEXT)),+($$CHK(LEXF,LEXT)) S LEXS=LEXT Q LEXS
"RTN","LEXAS5",75,0)
 S LEXN=$$TP^LEXAS6(LEXN)
"RTN","LEXAS5",76,0)
 I $D(^LEX(757.01,"AWRD",LEXN)),+($$CHK(LEXF,LEXN)) S LEXS=LEXN Q LEXS
"RTN","LEXAS5",77,0)
 S LEXN=$$ONE^LEXAS2(LEXN)
"RTN","LEXAS5",78,0)
 I $L(LEXN)>3,$D(^LEX(757.01,"AWRD",LEXN)),+($$CHK(LEXF,LEXN)) S LEXS=LEXN Q LEXS
"RTN","LEXAS5",79,0)
 Q ""
"RTN","LEXAS5",80,0)
CHK(LEX1,LEX2) ; Check first segment used with second segment
"RTN","LEXAS5",81,0)
 I '$L($G(LEX1))!('$L($G(LEX1))) Q 0
"RTN","LEXAS5",82,0)
 I '$D(^LEX(757.01,"ASL",LEX1))!('$D(^LEX(757.01,"ASL",LEX2))) Q 0
"RTN","LEXAS5",83,0)
 N LEXF1,LEXF2,LEXO,LEXC,LEXS,LEXOK S LEXOK=0
"RTN","LEXAS5",84,0)
 S LEXF1=$O(^LEX(757.01,"ASL",LEX1,0))
"RTN","LEXAS5",85,0)
 S LEXF2=$O(^LEX(757.01,"ASL",LEX2,0))
"RTN","LEXAS5",86,0)
 S:LEXF1<LEXF2 LEXO=$$SCH^LEXAS6(LEX1),LEXC=LEX2,LEXS=LEX1
"RTN","LEXAS5",87,0)
 S:LEXF1'<LEXF2 LEXO=$$SCH^LEXAS6(LEX2),LEXC=LEX1,LEXS=LEX2
"RTN","LEXAS5",88,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:LEXO=""!(LEXO'[LEXS)!(LEXOK)  D
"RTN","LEXAS5",89,0)
 . N LEXR S LEXR=0
"RTN","LEXAS5",90,0)
 . F  S LEXR=$O(^LEX(757.01,"AWRD",LEXO,LEXR)) Q:+LEXR=0!(LEXOK)  D
"RTN","LEXAS5",91,0)
 . . N LEXE S LEXE=$$UP^XLFSTR($G(^LEX(757.01,LEXR,0)))
"RTN","LEXAS5",92,0)
 . . I LEXE[(" "_$$UP^XLFSTR(LEXC)) S LEXOK=1 Q
"RTN","LEXAS5",93,0)
 . . I $E(LEXE,1,$L(LEXC))=$$UP^XLFSTR(LEXC) S LEXOK=1
"RTN","LEXAS5",94,0)
 S LEX1=LEXOK
"RTN","LEXAS5",95,0)
 Q LEX1
"RTN","LEXAS6")
0^162^B6676230
"RTN","LEXAS6",1,0)
LEXAS6 ;ISL/KER - Look-up Check Input (TRIM,EXP,TP,SCH) ;04/21/2014
"RTN","LEXAS6",2,0)
 ;;2.0;LEXICON UTILITY;**41,80**;Sep 23, 1996;Build 1
"RTN","LEXAS6",3,0)
 ;
"RTN","LEXAS6",4,0)
TRIM(LEXX) ; Trim string
"RTN","LEXAS6",5,0)
 ;
"RTN","LEXAS6",6,0)
 ; LEXOK   Flag - string is OK
"RTN","LEXAS6",7,0)
 ; LEXF    Frequency
"RTN","LEXAS6",8,0)
 ; LEXI    Incremental counter
"RTN","LEXAS6",9,0)
 ; LEXT    Temporary string
"RTN","LEXAS6",10,0)
 ; LEXX    Return string
"RTN","LEXAS6",11,0)
 ;
"RTN","LEXAS6",12,0)
 N LEXI,LEXOK,LEXT,LEXF S LEXF=1,LEXOK=0,LEXT=LEXX
"RTN","LEXAS6",13,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXAS6",14,0)
 F LEXI=$L(LEXX):-1:1 Q:LEXOK  D  Q:LEXOK
"RTN","LEXAS6",15,0)
 . S LEXT=$E(LEXT,1,($L(LEXT)-1))
"RTN","LEXAS6",16,0)
 . I $L(LEXT)<3 S LEXOK=1 Q
"RTN","LEXAS6",17,0)
 . I $D(^LEX(757.01,"ASL",LEXT)) S LEXF=$O(^LEX(757.01,"ASL",LEXT,0)) I +(LEXF)>1 S LEXOK=1
"RTN","LEXAS6",18,0)
 S LEXX=LEXT
"RTN","LEXAS6",19,0)
 Q LEXX
"RTN","LEXAS6",20,0)
 ;
"RTN","LEXAS6",21,0)
EXP3(LEXX) ; Expand string up to 3 characters
"RTN","LEXAS6",22,0)
 N LEXT S LEXT=LEXX
"RTN","LEXAS6",23,0)
 S LEXT=$$EXP(LEXT)
"RTN","LEXAS6",24,0)
 I $L(LEXT)-$L(LEXX)'>3 S LEXX=LEXT
"RTN","LEXAS6",25,0)
 Q LEXX
"RTN","LEXAS6",26,0)
EXP(LEXX) ; Expand string
"RTN","LEXAS6",27,0)
 ;
"RTN","LEXAS6",28,0)
 ; LEXF    String found
"RTN","LEXAS6",29,0)
 ; LEXC    Control string
"RTN","LEXAS6",30,0)
 ; LEXCK   Check for string
"RTN","LEXAS6",31,0)
 ; LEXI    Character position
"RTN","LEXAS6",32,0)
 ; LEXLTR  Letter at character position
"RTN","LEXAS6",33,0)
 ; LEXNT   Altered tolken
"RTN","LEXAS6",34,0)
 ; LEXOK   Flag - 1 quit 0 keep checking
"RTN","LEXAS6",35,0)
 ; LEXOKL  Flag - 1 add letter 0 do not add letter
"RTN","LEXAS6",36,0)
 ; LEXX    Return expanded string
"RTN","LEXAS6",37,0)
 ;
"RTN","LEXAS6",38,0)
 Q:$D(^LEX(757.01,"AWRD",LEXX)) LEXX
"RTN","LEXAS6",39,0)
 N LEXF,LEXC,LEXCK,LEXI,LEXLTR,LEXNT,LEXOK,LEXOKL
"RTN","LEXAS6",40,0)
 S (LEXF,LEXC)=LEXX,LEXOK=0
"RTN","LEXAS6",41,0)
 S LEXNT=$O(^LEX(757.01,"ASL",$$SCH(LEXF)))
"RTN","LEXAS6",42,0)
 F LEXI=1:1:63 Q:LEXOK  D  Q:LEXOK!(LEXNT'[LEXC)
"RTN","LEXAS6",43,0)
 . Q:LEXI'>$L(LEXC)
"RTN","LEXAS6",44,0)
 . S LEXNT=$O(^LEX(757.01,"ASL",LEXNT)) Q:LEXNT=LEXF
"RTN","LEXAS6",45,0)
 . S LEXLTR=$E(LEXNT,LEXI) Q:LEXLTR=""
"RTN","LEXAS6",46,0)
 . S LEXOKL=1,LEXCK=$$SCH(LEXNT)
"RTN","LEXAS6",47,0)
 . F  S LEXCK=$O(^LEX(757.01,"ASL",LEXCK)) Q:LEXCK=""!('LEXOKL)  D
"RTN","LEXAS6",48,0)
 . . I $E(LEXCK,LEXI)'="",$E(LEXCK,LEXI)'=LEXLTR S LEXOKL=0 Q
"RTN","LEXAS6",49,0)
 . . I LEXCK'[LEXC,$E(LEXCK,LEXI)'=LEXLTR S LEXCK="~~~~~~~~~~~" Q
"RTN","LEXAS6",50,0)
 . S:LEXOKL LEXF=LEXF_LEXLTR S:'LEXOKL LEXOK=1
"RTN","LEXAS6",51,0)
 . S:$D(^LEX(757.01,"AWRD",LEXF)) LEXOK=1
"RTN","LEXAS6",52,0)
 S LEXX=LEXF Q LEXX
"RTN","LEXAS6",53,0)
 ;
"RTN","LEXAS6",54,0)
TP(LEXX) ; Transposed letters
"RTN","LEXAS6",55,0)
 ;
"RTN","LEXAS6",56,0)
 ; LEXF    Tolken found
"RTN","LEXAS6",57,0)
 ; LEXO    Original tolken
"RTN","LEXAS6",58,0)
 ; LEXN    Concatenated tolken
"RTN","LEXAS6",59,0)
 ; LEXT    Temporary tolken
"RTN","LEXAS6",60,0)
 ; LEXI    Character position
"RTN","LEXAS6",61,0)
 ; LEXX    Return string
"RTN","LEXAS6",62,0)
 ;
"RTN","LEXAS6",63,0)
 N LEXO,LEXN,LEXI,LEXF,LEXT S (LEXF,LEXN)="",LEXO=LEXX
"RTN","LEXAS6",64,0)
 F LEXI=2:1:$L(LEXX) Q:LEXF'=""  D  Q:LEXF'=""
"RTN","LEXAS6",65,0)
 . S LEXN=$E(LEXX,1,(LEXI-1))_$E(LEXX,(LEXI+1))_$E(LEXX,LEXI)_$E(LEXX,(LEXI+2),$L(LEXX))
"RTN","LEXAS6",66,0)
 . I $D(^LEX(757.01,"ASL",LEXN)) S LEXF=LEXN
"RTN","LEXAS6",67,0)
 . S LEXT=$$ONE^LEXAS2(LEXN)
"RTN","LEXAS6",68,0)
 . I $L(LEXT)=$L(LEXN),$D(^LEX(757.01,"ASL",LEXT)) S LEXF=LEXT
"RTN","LEXAS6",69,0)
 S:LEXF'="" LEXX=LEXF
"RTN","LEXAS6",70,0)
 S:LEXF="" LEXX=LEXO
"RTN","LEXAS6",71,0)
 Q LEXX
"RTN","LEXAS6",72,0)
SCH(LEXX) ; Create $O variable
"RTN","LEXAS6",73,0)
 ;
"RTN","LEXAS6",74,0)
 ; LEXX    Return $O variable
"RTN","LEXAS6",75,0)
 ;
"RTN","LEXAS6",76,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~"
"RTN","LEXAS6",77,0)
 Q LEXX
"RTN","LEXAS7")
0^163^B18643877
"RTN","LEXAS7",1,0)
LEXAS7 ;ISL/KER - Look-up Check Input (LC,TC) ;04/21/2014
"RTN","LEXAS7",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXAS7",3,0)
 ;
"RTN","LEXAS7",4,0)
LC(LEXX) ; Leading characters
"RTN","LEXAS7",5,0)
 ;
"RTN","LEXAS7",6,0)
 ; LEXX    Return string
"RTN","LEXAS7",7,0)
 ; LEXL    Letter
"RTN","LEXAS7",8,0)
 ; LEXG    Group of letters
"RTN","LEXAS7",9,0)
 ; LEXI    Incremental counter
"RTN","LEXAS7",10,0)
 ; LEXT    Temporary tolken
"RTN","LEXAS7",11,0)
 ; LEXOK   Flag - found tolken
"RTN","LEXAS7",12,0)
 ; LEXS    Swap character
"RTN","LEXAS7",13,0)
 ; LEXA    Add character
"RTN","LEXAS7",14,0)
 ;
"RTN","LEXAS7",15,0)
 N LEXT
"RTN","LEXAS7",16,0)
 S LEXT=$$LCS(LEXX) I LEXT'=LEXX,$D(^LEX(757.01,"ASL",LEXT)) S LEXX=LEXT Q LEXT
"RTN","LEXAS7",17,0)
 I $L(LEXT)'>5 Q LEXX
"RTN","LEXAS7",18,0)
 S LEXT=$$LCR(LEXX) I $D(^LEX(757.01,"AWRD",LEXT)) S LEXX=LEXT Q LEXX
"RTN","LEXAS7",19,0)
 I $L(LEXT)'>4 Q LEXX
"RTN","LEXAS7",20,0)
 S LEXT=$$LCR(LEXX) I $D(^LEX(757.01,"AWRD",LEXT)) S LEXX=LEXT Q LEXX
"RTN","LEXAS7",21,0)
 Q LEXX
"RTN","LEXAS7",22,0)
 ;
"RTN","LEXAS7",23,0)
LCS(LEXX) ; Swap
"RTN","LEXAS7",24,0)
 N LEXI,LEXF,LEXL,LEXG,LEXOK,LEXS,LEXA S LEXOK=0
"RTN","LEXAS7",25,0)
 S LEXF=$$FIRST(LEXX),LEXS=$$SECOND(LEXX)
"RTN","LEXAS7",26,0)
 I $D(^LEX(757.01,"ASL",LEXS)) S LEXX=LEXS Q LEXX
"RTN","LEXAS7",27,0)
 I $D(^LEX(757.01,"ASL",LEXF)) S LEXX=LEXF Q LEXX
"RTN","LEXAS7",28,0)
 S LEXF=$$FIRST(LEXS)
"RTN","LEXAS7",29,0)
 I $D(^LEX(757.01,"ASL",LEXF)) S LEXX=LEXF Q LEXX
"RTN","LEXAS7",30,0)
 Q LEXX
"RTN","LEXAS7",31,0)
LCR(LEXX) ; Remove/Shift
"RTN","LEXAS7",32,0)
 N LEXT
"RTN","LEXAS7",33,0)
 S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXAS7",34,0)
 S LEXT=$$SHIFT^LEXAS3(LEXX)
"RTN","LEXAS7",35,0)
 I $D(^LEX(757.01,"ASL",LEXT)) S LEXX=LEXT Q LEXX
"RTN","LEXAS7",36,0)
 Q LEXX
"RTN","LEXAS7",37,0)
SECOND(LEXX) ; Second letter (Swap)
"RTN","LEXAS7",38,0)
 N LEXL,LEXG,LEXOK,LEXI,LEXA,LEXS
"RTN","LEXAS7",39,0)
 S LEXL=$E(LEXX,2),LEXG=$$GRP(LEXL),LEXOK=0
"RTN","LEXAS7",40,0)
 F LEXI=1:1:$L(LEXG)  D  Q:LEXOK
"RTN","LEXAS7",41,0)
 . S LEXS=$E(LEXX,1)_$E(LEXG,LEXI)_$E(LEXX,3,$L(LEXX))
"RTN","LEXAS7",42,0)
 . I $D(^LEX(757.01,"ASL",LEXS)) S LEXX=LEXS,LEXOK=1 Q
"RTN","LEXAS7",43,0)
 . S LEXS=$$TP^LEXAS6(LEXS)
"RTN","LEXAS7",44,0)
 . I $D(^LEX(757.01,"ASL",LEXS)),$L(LEXS)=$L(LEXX) S LEXX=LEXS,LEXOK=1 Q
"RTN","LEXAS7",45,0)
 . S LEXS=$$ONE^LEXAS2(LEXS) Q:LEXS=""
"RTN","LEXAS7",46,0)
 . I $D(^LEX(757.01,"ASL",LEXS)),$L(LEXS)=$L(LEXX) S LEXX=LEXS,LEXOK=1 Q
"RTN","LEXAS7",47,0)
 Q:LEXOK LEXX
"RTN","LEXAS7",48,0)
 ; Second letter (Add)
"RTN","LEXAS7",49,0)
 S LEXOK=0 F LEXI=65:1:90 D  Q:LEXOK
"RTN","LEXAS7",50,0)
 . S LEXA=$E(LEXX,1)_$C(LEXI)_$E(LEXX,2,$L(LEXX))
"RTN","LEXAS7",51,0)
 . I $D(^LEX(757.01,"ASL",LEXA)) S LEXX=LEXA,LEXOK=1 Q
"RTN","LEXAS7",52,0)
 Q LEXX
"RTN","LEXAS7",53,0)
 ;
"RTN","LEXAS7",54,0)
FIRST(LEXX) ; First letter (Swap)
"RTN","LEXAS7",55,0)
 N LEXL,LEXG,LEXOK,LEXI,LEXA,LEXS
"RTN","LEXAS7",56,0)
 S LEXL=$E(LEXX,1),LEXG=$$GRP(LEXL),LEXOK=0
"RTN","LEXAS7",57,0)
 F LEXI=1:1:$L(LEXG)  D  Q:LEXOK
"RTN","LEXAS7",58,0)
 . S LEXS=$E(LEXG,LEXI)_$E(LEXX,2,$L(LEXX))
"RTN","LEXAS7",59,0)
 . I $D(^LEX(757.01,"ASL",LEXS)) S LEXX=LEXS,LEXOK=1 Q
"RTN","LEXAS7",60,0)
 . S LEXS=$$LF(LEXS)
"RTN","LEXAS7",61,0)
 . I $D(^LEX(757.01,"ASL",LEXS)) S LEXX=LEXS,LEXOK=1 Q
"RTN","LEXAS7",62,0)
 Q:LEXOK LEXX
"RTN","LEXAS7",63,0)
 ;
"RTN","LEXAS7",64,0)
 ; First letter (Add)
"RTN","LEXAS7",65,0)
 S LEXOK=0 F LEXI=65:1:90 D  Q:LEXOK
"RTN","LEXAS7",66,0)
 . S LEXA=$C(LEXI)_LEXX
"RTN","LEXAS7",67,0)
 . I $D(^LEX(757.01,"ASL",LEXA)) S LEXX=LEXA,LEXOK=1 Q
"RTN","LEXAS7",68,0)
 Q LEXX
"RTN","LEXAS7",69,0)
LF(LEXX) ;
"RTN","LEXAS7",70,0)
 Q:$L($G(LEXX))'>7 LEXX
"RTN","LEXAS7",71,0)
 N LEXN,LEXC,LEXT,LEXF,LEXO,LEXOK
"RTN","LEXAS7",72,0)
 S (LEXN,LEXC)=$E(LEXX,1,4) Q:'$D(^LEX(757.01,"ASL",LEXN)) LEXX
"RTN","LEXAS7",73,0)
 S LEXT=$P(LEXX,LEXN,2) Q:$L(LEXT)<4 LEXX
"RTN","LEXAS7",74,0)
 S LEXOK=0,LEXO=$$SCH^LEXAS6(LEXN)
"RTN","LEXAS7",75,0)
 S LEXT=$E(LEXT,($L(LEXT)-6),$L(LEXT))
"RTN","LEXAS7",76,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:LEXO=""!(LEXO'[LEXC)!(LEXOK)  D
"RTN","LEXAS7",77,0)
 . S LEXF=$E(LEXO,($L(LEXO)-($L(LEXT)-1)),$L(LEXO))
"RTN","LEXAS7",78,0)
 . I LEXF=LEXT S LEXT=LEXO,LEXOK=1
"RTN","LEXAS7",79,0)
 I LEXOK S LEXX=LEXT
"RTN","LEXAS7",80,0)
 Q LEXX
"RTN","LEXAS7",81,0)
TC(LEXX) ; Trailing character
"RTN","LEXAS7",82,0)
 Q:$L(LEXX)<6 LEXX
"RTN","LEXAS7",83,0)
 N LEXC,LEXT,LEXLC,LEXO,LEXOK,LEXCL
"RTN","LEXAS7",84,0)
 S LEXCL=$L(LEXX),LEXC=$$TRIM^LEXAS6(LEXX),LEXC=$E(LEXC,1,($L(LEXC)-1))
"RTN","LEXAS7",85,0)
 S LEXLC=$E(LEXX,$L(LEXX)),LEXO=$$SCH^LEXAS6(LEXC),LEXOK=0,LEXT=""
"RTN","LEXAS7",86,0)
 ;
"RTN","LEXAS7",87,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:LEXO=""!(LEXO'[LEXC)!(LEXOK)  D
"RTN","LEXAS7",88,0)
 . Q:$E(LEXO,$L(LEXO))'=LEXLC
"RTN","LEXAS7",89,0)
 . ; Exact
"RTN","LEXAS7",90,0)
 . I $E(LEXO,LEXCL)=LEXLC S LEXT=LEXO,LEXOK=1 Q
"RTN","LEXAS7",91,0)
 . ; 1 Less
"RTN","LEXAS7",92,0)
 . I $E(LEXO,(LEXCL-1))=LEXLC S LEXT=LEXO,LEXOK=1 Q
"RTN","LEXAS7",93,0)
 I LEXT'="",LEXOK S LEXX=LEXT
"RTN","LEXAS7",94,0)
 Q LEXX
"RTN","LEXAS7",95,0)
 ;
"RTN","LEXAS7",96,0)
GRP(LEXX) ; Letter groups (off the home row QWERTY)
"RTN","LEXAS7",97,0)
 N LEXG S LEXG=LEXX
"RTN","LEXAS7",98,0)
 S:LEXX="A" LEXG="QZOWSX" S:LEXX="B" LEXG="VGHNF"
"RTN","LEXAS7",99,0)
 S:LEXX="C" LEXG="XDVFS" S:LEXX="D" LEXG="ECXRFSWV"
"RTN","LEXAS7",100,0)
 S:LEXX="E" LEXG="RWIDFS" S:LEXX="F" LEXG="GBVDRCET"
"RTN","LEXAS7",101,0)
 S:LEXX="G" LEXG="FBTVRHYN" S:LEXX="H" LEXG="JGNYBUMT"
"RTN","LEXAS7",102,0)
 S:LEXX="I" LEXG="UOYEKJL" S:LEXX="J" LEXG="HNKUMYI"
"RTN","LEXAS7",103,0)
 S:LEXX="K" LEXG="IJLMOU" S:LEXX="L" LEXG="OKPI"
"RTN","LEXAS7",104,0)
 S:LEXX="M" LEXG="NJKH" S:LEXX="N" LEXG="MBJH"
"RTN","LEXAS7",105,0)
 S:LEXX="O" LEXG="LIPAK" S:LEXX="P" LEXG="OL"
"RTN","LEXAS7",106,0)
 S:LEXX="Q" LEXG="AWS" S:LEXX="R" LEXG="TEGFD"
"RTN","LEXAS7",107,0)
 S:LEXX="S" LEXG="XWADZE" S:LEXX="T" LEXG="RGFYH"
"RTN","LEXAS7",108,0)
 S:LEXX="U" LEXG="YHIJK" S:LEXX="V" LEXG="CBFDG"
"RTN","LEXAS7",109,0)
 S:LEXX="W" LEXG="QESAD" S:LEXX="X" LEXG="ZSACD"
"RTN","LEXAS7",110,0)
 S:LEXX="Y" LEXG="UHIJGT" S:LEXX="Z" LEXG="ASX"
"RTN","LEXAS7",111,0)
 S:LEXG'=LEXX LEXX=LEXG
"RTN","LEXAS7",112,0)
 Q LEXX
"RTN","LEXAS7",113,0)
 Q
"RTN","LEXASC")
0^88^B7966749
"RTN","LEXASC",1,0)
LEXASC ;ISL/KER - Look-up by Shortcuts ;04/21/2014
"RTN","LEXASC",2,0)
 ;;2.0;LEXICON UTILITY;**25,80**;Sep 23, 1996;Build 1
"RTN","LEXASC",3,0)
 ;               
"RTN","LEXASC",4,0)
 ; Global Variables
"RTN","LEXASC",5,0)
 ;    ^LEX(757.4)         N/A
"RTN","LEXASC",6,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXASC",7,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEXASC",8,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXASC",9,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXASC",10,0)
 ;               
"RTN","LEXASC",11,0)
 ; External References
"RTN","LEXASC",12,0)
 ;    None
"RTN","LEXASC",13,0)
 ;               
"RTN","LEXASC",14,0)
 ; ^TMP("LEXFND",$J)  Entries found
"RTN","LEXASC",15,0)
 ; ^TMP("LEXHIT",$J)  Entries returned
"RTN","LEXASC",16,0)
 ;
"RTN","LEXASC",17,0)
 ; LEXSCH   User input string to search for
"RTN","LEXASC",18,0)
 ; LEXVDT   Date is used to screen out inactive codes
"RTN","LEXASC",19,0)
 ;
"RTN","LEXASC",20,0)
 ; LEXC     Pointer to Shortcut Context  in file 757.41
"RTN","LEXASC",21,0)
 ; LEXS     Pointer to Shortcut in file 757.4
"RTN","LEXASC",22,0)
 ; LEXE     Pointer to expression in 757.01
"RTN","LEXASC",23,0)
 ; LEXM     Pointer to Major Concept in 757.01
"RTN","LEXASC",24,0)
 ;
"RTN","LEXASC",25,0)
 ; LEXDSP   Source Display string
"RTN","LEXASC",26,0)
 ; LEXDES   Flag - has (*) or doesn't have () a description
"RTN","LEXASC",27,0)
 ; LEXSHOW  Display string from Application/User defaults
"RTN","LEXASC",28,0)
 ; LEXX     Returned variable from functions
"RTN","LEXASC",29,0)
 ;
"RTN","LEXASC",30,0)
EN(LEXSCH,LEXC,LEXVDT) ; Check Shortcuts file 757.4 for LEXSCH
"RTN","LEXASC",31,0)
 S LEXC=+($G(LEXC))
"RTN","LEXASC",32,0)
 Q:'$L(LEXSCH)!(LEXC=0) 0
"RTN","LEXASC",33,0)
 Q:'$D(^LEX(757.41,LEXC)) 0
"RTN","LEXASC",34,0)
 Q:$L(LEXSCH)<2!($L(LEXSCH)>63) 0
"RTN","LEXASC",35,0)
 Q:'$D(^LEX(757.4,"ARA",LEXSCH,LEXC)) 0
"RTN","LEXASC",36,0)
 D VDT^LEXU N LEXS S LEXS=0
"RTN","LEXASC",37,0)
 F  S LEXS=$O(^LEX(757.4,"ARA",LEXSCH,LEXC,LEXS)) Q:+LEXS=0  D
"RTN","LEXASC",38,0)
 . N LEXE,LEXDES,LEXDSP,LEXLKT S LEXLKT="ASC"
"RTN","LEXASC",39,0)
 . S LEXE=+($G(^LEX(757.4,LEXS,0))) Q:LEXE'>0
"RTN","LEXASC",40,0)
 . ; Filter
"RTN","LEXASC",41,0)
 . S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXASC",42,0)
 . ; Deactivated Term
"RTN","LEXASC",43,0)
 . Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXASC",44,0)
 . Q:+($$SUB(LEXE))=0
"RTN","LEXASC",45,0)
 . S LEXDES=$$DES(LEXE)
"RTN","LEXASC",46,0)
 . S LEXDSP="",LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0)) S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXASC",47,0)
 . D ADDL^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXASC",48,0)
 I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXASC",49,0)
 I '$D(^TMP("LEXFND",$J)) D
"RTN","LEXASC",50,0)
 . K LEX,^TMP("LEXFND",$J),^TMP("LEXHIT",$J) S LEX=0
"RTN","LEXASC",51,0)
 . S:+($G(^TMP("LEXSCH",$J,"UNR",0)))>0&($L($G(^TMP("LEXSCH",$J,"NAR",0)))) LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXASC",52,0)
 Q:$D(^TMP("LEXHIT",$J)) 1
"RTN","LEXASC",53,0)
 Q 0
"RTN","LEXASC",54,0)
DES(LEXX) ; Get description flag
"RTN","LEXASC",55,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXASC",56,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXASC",57,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXASC",58,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXASC",59,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXASC",60,0)
TERM(LEXX) ; Get expression
"RTN","LEXASC",61,0)
 Q $G(^LEX(757.01,LEXX,0))
"RTN","LEXASC",62,0)
DSP(LEXX,LEXDSP,LEXVDT) ; Return displayable text
"RTN","LEXASC",63,0)
 S LEXX=$$SO^LEXASO(LEXX,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXASC",64,0)
SUB(LEXX) ;
"RTN","LEXASC",65,0)
 Q:$G(^TMP("LEXSCH",$J,"GBL",0))'="^LEX(757.21," 1
"RTN","LEXASC",66,0)
 Q:'$L($G(^TMP("LEXSCH",$J,"IDX",0))) 1
"RTN","LEXASC",67,0)
 N LEXIDX,LEXSS,LEXSN S LEXIDX=$G(^TMP("LEXSCH",$J,"IDX",0))
"RTN","LEXASC",68,0)
 S LEXSS=$E(LEXIDX,2,$L(LEXIDX))
"RTN","LEXASC",69,0)
 S LEXSN=$O(^LEXT(757.2,"AA",LEXSS,0))
"RTN","LEXASC",70,0)
 Q:+($G(LEXSN))=0 1
"RTN","LEXASC",71,0)
 N LEXOK,LEXR S (LEXR,LEXOK)=0
"RTN","LEXASC",72,0)
 F  S LEXR=$O(^LEX(757.21,"B",LEXX,LEXR)) Q:+LEXR=0  D
"RTN","LEXASC",73,0)
 . I $P($G(^LEX(757.21,LEXR,0)),"^",2)=LEXSN S LEXOK=1
"RTN","LEXASC",74,0)
 S LEXX=LEXOK Q LEXX
"RTN","LEXASC",75,0)
CLR ; Clear
"RTN","LEXASC",76,0)
 N LEXIGN
"RTN","LEXASC",77,0)
 Q
"RTN","LEXASO")
0^87^B18758787
"RTN","LEXASO",1,0)
LEXASO ;ISL/KER - Look-up Display String (Sources) ;04/21/2014
"RTN","LEXASO",2,0)
 ;;2.0;LEXICON UTILITY;**25,32,73,80**;Sep 23, 1996;Build 1
"RTN","LEXASO",3,0)
 ;
"RTN","LEXASO",4,0)
 ; Entry S X=$$SO^LEXASO(IEN,SAB,ALL,DATE)
"RTN","LEXASO",5,0)
 ;
"RTN","LEXASO",6,0)
 ;       IEN is an internal entry number in file 757.01
"RTN","LEXASO",7,0)
 ;           representing an expression
"RTN","LEXASO",8,0)
 ;
"RTN","LEXASO",9,0)
 ;       SAB is the source abbreviation of the classification
"RTN","LEXASO",10,0)
 ;           coding system, i.e., ICD, CPT, DSM, etc.
"RTN","LEXASO",11,0)
 ;
"RTN","LEXASO",12,0)
 ;       ALL is a flag 
"RTN","LEXASO",13,0)
 ;
"RTN","LEXASO",14,0)
 ;           0 - do not display all codes associated of the
"RTN","LEXASO",15,0)
 ;               major concept, display the codes only for the
"RTN","LEXASO",16,0)
 ;               expression
"RTN","LEXASO",17,0)
 ;
"RTN","LEXASO",18,0)
 ;           1 - display all codes associated for the major 
"RTN","LEXASO",19,0)
 ;               concept
"RTN","LEXASO",20,0)
 ;
"RTN","LEXASO",21,0)
 ;       DATE is used to screen out inactive codes
"RTN","LEXASO",22,0)
 ;
"RTN","LEXASO",23,0)
 ; LEXCC(   Array of classification codes
"RTN","LEXASO",24,0)
 ;
"RTN","LEXASO",25,0)
 ; LEXA     Flag - 1 All codes, 0 only the expression codes
"RTN","LEXASO",26,0)
 ; LEXM     Flag - M Major Concept
"RTN","LEXASO",27,0)
 ;
"RTN","LEXASO",28,0)
 ; LEXC     Counter, # $Piece of string LEXSA (SAB)
"RTN","LEXASO",29,0)
 ;
"RTN","LEXASO",30,0)
 ; LEXMC    IEN in file 757      Major Concept
"RTN","LEXASO",31,0)
 ; LEXME    IEN in file 757.01   Major Concept Expression
"RTN","LEXASO",32,0)
 ; LEXEX    IEN in file 757.01   Expression
"RTN","LEXASO",33,0)
 ; LEXSO    IEN in file 757.02   Sources
"RTN","LEXASO",34,0)
 ;
"RTN","LEXASO",35,0)
 ; LEXSA    Source Abbreviation i.e., ICD or ICD/CPT
"RTN","LEXASO",36,0)
 ; LEXSC    Source Classification Code
"RTN","LEXASO",37,0)
 ; LEXSR    Source Abbreviation single only i.e., ICD, CPT
"RTN","LEXASO",38,0)
 ; LEXST    String of classification sources and codes
"RTN","LEXASO",39,0)
 ;
"RTN","LEXASO",40,0)
 ; LEXX     Return value
"RTN","LEXASO",41,0)
 ;
"RTN","LEXASO",42,0)
SO(LEXX,LEXSA,LEXA,LEXVDT) ; Return string of source codes for LEXX SAB
"RTN","LEXASO",43,0)
 Q:+($G(LEXX))=0!('$L($G(LEXSA))) ""  Q:'$L($G(^LEX(757.01,LEXX,0))) ""
"RTN","LEXASO",44,0)
 N LEXCC,LEXM,LEXC,LEXMC,LEXME,LEXEX,LEXSO,LEXSC,LEXSR,LEXST D VDT^LEXU
"RTN","LEXASO",45,0)
 S LEXEX=+LEXX,LEXX="",LEXA=+($G(LEXA)),LEXMC=0
"RTN","LEXASO",46,0)
 S LEXM=$P($G(^LEX(757.01,LEXEX,1)),"^",2),LEXST=""
"RTN","LEXASO",47,0)
 ; Codes for an expression     D EXP
"RTN","LEXASO",48,0)
 I LEXM'=1!(+($G(LEXA))=0) D EXP G EXIT
"RTN","LEXASO",49,0)
 ; Codes for a major concept   D MAJ
"RTN","LEXASO",50,0)
 I LEXM=1 S LEXMC=LEXEX D MAJ
"RTN","LEXASO",51,0)
EXIT ; Clean up and quit
"RTN","LEXASO",52,0)
 Q LEXX
"RTN","LEXASO",53,0)
EXP ; Source string for an expression
"RTN","LEXASO",54,0)
 I LEXSA'["/" D CODES(LEXEX,LEXSA,$G(LEXVDT)) S LEXX=$$ASSEM Q
"RTN","LEXASO",55,0)
 I LEXSA["/" D  S LEXX=$$ASSEM
"RTN","LEXASO",56,0)
 . N LEXC F LEXC=1:1:$L(LEXSA,"/") D
"RTN","LEXASO",57,0)
 . . D CODES(LEXEX,$P(LEXSA,"/",LEXC),$G(LEXVDT))
"RTN","LEXASO",58,0)
 Q
"RTN","LEXASO",59,0)
MAJ ; Source string for a major concept
"RTN","LEXASO",60,0)
 S LEXMC=$P($G(^LEX(757.01,LEXEX,1)),"^",1),LEXEX=0
"RTN","LEXASO",61,0)
 S LEXEX=0 F  S LEXEX=$O(^LEX(757.02,"AMC",LEXMC,LEXEX)) Q:+LEXEX=0  D
"RTN","LEXASO",62,0)
 . N LEXME S LEXME=+($G(^LEX(757.02,LEXEX,0)))
"RTN","LEXASO",63,0)
 . I LEXSA'["/" D CODES(LEXME,LEXSA,$G(LEXVDT)) Q
"RTN","LEXASO",64,0)
 . I LEXSA["/" D  Q
"RTN","LEXASO",65,0)
 . . N LEXC F LEXC=1:1:$L(LEXSA,"/") D
"RTN","LEXASO",66,0)
 . . . D CODES(LEXME,$P(LEXSA,"/",LEXC),$G(LEXVDT))
"RTN","LEXASO",67,0)
 S LEXX=$$ASSEM
"RTN","LEXASO",68,0)
 Q
"RTN","LEXASO",69,0)
CODES(LEXEX,LEXSA,LEXVDT) ; Get Source Codes
"RTN","LEXASO",70,0)
 Q:$L($G(LEXSA))'=3  N LEXCD,LEXCN,LEXCS,LEXHE,LEXHI,LEXHN,LEXHS,LEXSAI,LEXSO,LEXSR,LEXST,LEXSTA
"RTN","LEXASO",71,0)
 S LEXST="",LEXSAI=+($O(^LEX(757.03,"ASAB",LEXSA,0))) Q:+LEXSAI'>0  S LEXSO=0 F  S LEXSO=$O(^LEX(757.02,"B",LEXEX,LEXSO)) Q:+LEXSO=0  D
"RTN","LEXASO",72,0)
 . S LEXCN=$G(^LEX(757.02,LEXSO,0)),LEXCD=$P(LEXCN,"^",2) Q:'$L(LEXCD)  S LEXCS=$P(LEXCN,"^",3) Q:+LEXCS'=+LEXSAI
"RTN","LEXASO",73,0)
 . S LEXHE=$S(+LEXVDT>0:(LEXVDT_".99999"),1:" "),LEXHE=$O(^LEX(757.02,+LEXSO,4,"B",LEXHE),-1) Q:+LEXHE'>0
"RTN","LEXASO",74,0)
 . S LEXHI=$O(^LEX(757.02,+LEXSO,4,"B",+LEXHE," "),-1)
"RTN","LEXASO",75,0)
 . S LEXHN=$G(^LEX(757.02,+LEXSO,4,+LEXHI,0)),LEXHS=$P(LEXHN,"^",2) Q:+($G(LEXHS))'>0
"RTN","LEXASO",76,0)
 . S LEXSR=$P($G(^LEX(757.03,$P($G(^LEX(757.02,LEXSO,0)),"^",3),0)),"^",2)
"RTN","LEXASO",77,0)
 . S LEXCC(LEXSR,(($P($G(^LEX(757.02,LEXSO,0)),"^",2))_" "))=""
"RTN","LEXASO",78,0)
 . ; Primary Code Saved - p32
"RTN","LEXASO",79,0)
 . S:$P($G(^LEX(757.02,LEXSO,0)),"^",7)=1 LEXCC(LEXSR,"P",(($P($G(^LEX(757.02,LEXSO,0)),"^",2))_" "))=""
"RTN","LEXASO",80,0)
 Q
"RTN","LEXASO",81,0)
ASSEM(LEXX) ; Assemble display string  (SOURCE CODE/CODE/CODE)
"RTN","LEXASO",82,0)
 Q:'$D(LEXCC) ""  Q:$O(LEXCC(""))="" ""  N LEXSR,LEXST S LEXSR=""
"RTN","LEXASO",83,0)
 D SHELLY F  S LEXSR=$O(LEXCC(LEXSR)) Q:LEXSR=""  D
"RTN","LEXASO",84,0)
 . N LEXSC S LEXSC="",LEXST="("_LEXSR_" "
"RTN","LEXASO",85,0)
 . ; Primary Code listed first - p32
"RTN","LEXASO",86,0)
 . I $D(LEXCC(LEXSR,"P")) D
"RTN","LEXASO",87,0)
 . . N LEXSC S LEXSC=$O(LEXCC(LEXSR,"P",""))
"RTN","LEXASO",88,0)
 . . S:$L(LEXSC) LEXST=LEXST_$$TRIM(LEXSC)_"/"
"RTN","LEXASO",89,0)
 . . K LEXCC(LEXSR,"P") K:$L(LEXSC) LEXCC(LEXSR,LEXSC)
"RTN","LEXASO",90,0)
 . S LEXSC="" F  S LEXSC=$O(LEXCC(LEXSR,LEXSC)) Q:LEXSC=""  D
"RTN","LEXASO",91,0)
 . . S LEXST=LEXST_$$TRIM(LEXSC)_"/"
"RTN","LEXASO",92,0)
 . . K LEXCC(LEXSR,LEXSC)
"RTN","LEXASO",93,0)
 . S LEXCC(LEXSR)=$E(LEXST,1,($L(LEXST)-1))_")"
"RTN","LEXASO",94,0)
 S (LEXST,LEXSR)=""
"RTN","LEXASO",95,0)
 F  S LEXSR=$O(LEXCC(LEXSR)) Q:LEXSR=""  D
"RTN","LEXASO",96,0)
 . S LEXST=LEXST_" "_LEXCC(LEXSR)
"RTN","LEXASO",97,0)
 F  Q:$E(LEXST,1)'=" "  S LEXST=$E(LEXST,2,$L(LEXST))
"RTN","LEXASO",98,0)
 S LEXX=LEXST Q LEXX
"RTN","LEXASO",99,0)
SHELLY ; Suppress other (non-primary) codes
"RTN","LEXASO",100,0)
 N LEXSY,LEXCD S LEXSY="" F  S LEXSY=$O(LEXCC(LEXSY)) Q:'$L(LEXSY)  D
"RTN","LEXASO",101,0)
 . N LEXPF S LEXPF=$O(LEXCC(LEXSY,"P","")) Q:'$L(LEXPF)
"RTN","LEXASO",102,0)
 . S LEXCD="" F  S LEXCD=$O(LEXCC(LEXSY,LEXCD)) Q:'$L(LEXCD)  D
"RTN","LEXASO",103,0)
 . . Q:LEXCD="P"  K:LEXCD'=LEXPF LEXCC(LEXSY,LEXCD)
"RTN","LEXASO",104,0)
 Q
"RTN","LEXASO",105,0)
TRIM(LEXX) ; Trim spaces
"RTN","LEXASO",106,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXASO",107,0)
 F  Q:$E(LEXX,$L(LEXX))'=" "  S LEXX=$E(LEXX,1,($L(LEXX)-1))
"RTN","LEXASO",108,0)
 Q LEXX
"RTN","LEXCODE")
0^12^B71456026
"RTN","LEXCODE",1,0)
LEXCODE ;ISL/KER - Retrieval of IEN^Term based on Code ;04/21/2014
"RTN","LEXCODE",2,0)
 ;;2.0;LEXICON UTILITY;**25,73,80**;Sep 23, 1996;Build 1
"RTN","LEXCODE",3,0)
 ;               
"RTN","LEXCODE",4,0)
 ; Global Variables
"RTN","LEXCODE",5,0)
 ;    None
"RTN","LEXCODE",6,0)
 ;               
"RTN","LEXCODE",7,0)
 ; External References
"RTN","LEXCODE",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXCODE",9,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXCODE",10,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXCODE",11,0)
 ;               
"RTN","LEXCODE",12,0)
 Q
"RTN","LEXCODE",13,0)
 ; Source Abbreviatioin (SAB) is 3 character mnemonics for a 
"RTN","LEXCODE",14,0)
 ; classification/coding system.  They can be found on the
"RTN","LEXCODE",15,0)
 ; "ASAB" Cross-Reference of the Coding Systems file 757.03.
"RTN","LEXCODE",16,0)
 ; Here are some of the more commonly used SABs:
"RTN","LEXCODE",17,0)
 ;                   
"RTN","LEXCODE",18,0)
 ;     SAB   Nomenclature  Source
"RTN","LEXCODE",19,0)
 ;     -----------------------------------------------------------
"RTN","LEXCODE",20,0)
 ;     ICD   ICD-9-CM      Int'l Class of Diseases, Diagnosis
"RTN","LEXCODE",21,0)
 ;     ICP   ICD-9 Proc    Int'l Class of Diseases, Procedures
"RTN","LEXCODE",22,0)
 ;     10D   ICD-10-CM     Int'l Class of Diseases, Diagnosis
"RTN","LEXCODE",23,0)
 ;     10P   ICD-10-PCS    Int'l Class of Diseases, Procedures
"RTN","LEXCODE",24,0)
 ;     CPT   CPT=4         Current Procedural Terminology
"RTN","LEXCODE",25,0)
 ;     CPC   HCPCS         Healthcare Common Procedure Codes
"RTN","LEXCODE",26,0)
 ;     SSC   Title 38      Service Connected Codes
"RTN","LEXCODE",27,0)
 ;     DS4   DSM-IV        Diag Manual of Mental Disorder
"RTN","LEXCODE",28,0)
 ;     SCT   SNOMED CT     SNOMED Clinical Terms
"RTN","LEXCODE",29,0)
 ;                   
"RTN","LEXCODE",30,0)
 Q
"RTN","LEXCODE",31,0)
EN(LEX,LEXVDT) ; Get terms associated with a Code
"RTN","LEXCODE",32,0)
 ;
"RTN","LEXCODE",33,0)
 ;   Input
"RTN","LEXCODE",34,0)
 ;                   
"RTN","LEXCODE",35,0)
 ;     LEX      (Required) Code
"RTN","LEXCODE",36,0)
 ;                        
"RTN","LEXCODE",37,0)
 ;     LEXVDT   (Optional) The date against which the codes 
"RTN","LEXCODE",38,0)
 ;              found by the search will be compared in order
"RTN","LEXCODE",39,0)
 ;              to determine whether the code is active or 
"RTN","LEXCODE",40,0)
 ;              inactive. If not passed, TODAY's date will 
"RTN","LEXCODE",41,0)
 ;              be used.
"RTN","LEXCODE",42,0)
 ;                   
"RTN","LEXCODE",43,0)
 ;    Output    Local Array LEXS 
"RTN","LEXCODE",44,0)
 ;
"RTN","LEXCODE",45,0)
 ;              LEXS(0)=Code
"RTN","LEXCODE",46,0)
 ;              LEXS(SAB,0)=Number of Terms found for SAB
"RTN","LEXCODE",47,0)
 ;              LEXS(SAB,0,"SAB")=Source Nomenclature ^ Name
"RTN","LEXCODE",48,0)
 ;              LEXS(SAB,#)=IEN file 757.01^Display Text (term)
"RTN","LEXCODE",49,0)
 ;              
"RTN","LEXCODE",50,0)
 ;              Example of returned array LEXS using code V62.4
"RTN","LEXCODE",51,0)
 ;                
"RTN","LEXCODE",52,0)
 ;              LEXS(0)="V62.4"
"RTN","LEXCODE",53,0)
 ;              LEXS("DS4",0)=1
"RTN","LEXCODE",54,0)
 ;              LEXS("DS4",0,"SAB")="DSM-IV^Diagnostic & 
"RTN","LEXCODE",55,0)
 ;                                  Statistical Manual of Mental
"RTN","LEXCODE",56,0)
 ;                                  Disorders"
"RTN","LEXCODE",57,0)
 ;              LEXS("DS4",1)="303722^Acculturation Problem"
"RTN","LEXCODE",58,0)
 ;              LEXS("ICD",0)=5
"RTN","LEXCODE",59,0)
 ;              LEXS("ICD",0,"SAB")="ICD-9-CM^International 
"RTN","LEXCODE",60,0)
 ;                                  Classification of Diseases,
"RTN","LEXCODE",61,0)
 ;                                  Diagnosis"
"RTN","LEXCODE",62,0)
 ;              LEXS("ICD",1)="111638^Social maladjustment"
"RTN","LEXCODE",63,0)
 ;              LEXS("ICD",2)="29696^Cultural Deprivation"
"RTN","LEXCODE",64,0)
 ;              LEXS("ICD",3)="100676^Psychosocial Deprivation"
"RTN","LEXCODE",65,0)
 ;              LEXS("ICD",4)="303722^Acculturation Problem"
"RTN","LEXCODE",66,0)
 ;              LEXS("ICD",5)="111507^Social Behavior
"RTN","LEXCODE",67,0)
 ;                   
"RTN","LEXCODE",68,0)
 K LEXS S LEX=$$UP^XLFSTR($G(LEX)) Q:'$L(LEX)
"RTN","LEXCODE",69,0)
 N LEXSRC,LEXSO,LEXO,LEXEXI,LEXEXP,LEXSAB,LEXDA,LEXPF,LEXINA,LEXSTA
"RTN","LEXCODE",70,0)
 N LEXND D VDT^LEXU S LEXVDT=$G(LEXVDT)
"RTN","LEXCODE",71,0)
 S LEXS(0)=LEX,LEXO=LEX_" ",LEXDA=0 Q:'$D(^LEX(757.02,"CODE",LEXO))
"RTN","LEXCODE",72,0)
 F  S LEXDA=$O(^LEX(757.02,"CODE",LEXO,LEXDA)) Q:+LEXDA=0  D CHK
"RTN","LEXCODE",73,0)
 D ASEM Q
"RTN","LEXCODE",74,0)
CHK ;   Check if Valid
"RTN","LEXCODE",75,0)
 N LEXPD,LEXPI,LEXPH,LEXEX
"RTN","LEXCODE",76,0)
 S LEXND=$G(^LEX(757.02,LEXDA,0)),LEXSO=$P(LEXND,"^",2) Q:LEXSO'=LEX
"RTN","LEXCODE",77,0)
 S LEXSRC=+($P(LEXND,"^",3)) Q:LEXSRC'>0
"RTN","LEXCODE",78,0)
 S LEXPD=$O(^LEX(757.02,+LEXDA,4,"B",(LEXVDT+.0001)),-1) Q:LEXPD'?7N
"RTN","LEXCODE",79,0)
 S LEXPI=$O(^LEX(757.02,+LEXDA,4,"B",LEXPD," "),-1) Q:+LEXPI'>0
"RTN","LEXCODE",80,0)
 S LEXPH=$G(^LEX(757.02,+LEXDA,4,+LEXPI,0)) Q:+($P(LEXPH,"^",2))'>0
"RTN","LEXCODE",81,0)
 S LEXEX=+LEXND Q:+LEXEX'>0  Q:'$D(^LEX(757.01,+LEXEX,0))
"RTN","LEXCODE",82,0)
 S LEXSAB=$E($G(^LEX(757.03,+LEXSRC,0)),1,3) Q:$L(LEXSAB)'=3
"RTN","LEXCODE",83,0)
 S LEXPF=+($P($G(^LEX(757.02,LEXDA,0)),"^",5))
"RTN","LEXCODE",84,0)
 S:LEXPF=1 LEXS(LEXSAB,"PRE")=LEXDA
"RTN","LEXCODE",85,0)
 S:LEXPF'=1 LEXS(LEXSAB,"OTH",LEXDA)=""
"RTN","LEXCODE",86,0)
 Q
"RTN","LEXCODE",87,0)
ASEM ;   Assemble List
"RTN","LEXCODE",88,0)
 Q:'$D(LEXS)  N LEXSAB,LEXCT,LEXDA,LEXEX,LEXEXP,LEXY S LEXSAB=""
"RTN","LEXCODE",89,0)
 F  S LEXSAB=$O(LEXS(LEXSAB)) Q:LEXSAB=""  S LEXCT=0 D
"RTN","LEXCODE",90,0)
 . N LEXSABT S LEXSABT=$O(^LEX(757.03,"ASAB",LEXSAB,0))
"RTN","LEXCODE",91,0)
 . S LEXSABT=$P($G(^LEX(757.03,+LEXSABT,0)),"^",2,3)
"RTN","LEXCODE",92,0)
 . I $D(LEXS(LEXSAB,"PRE")) D
"RTN","LEXCODE",93,0)
 . . S LEXDA=LEXS(LEXSAB,"PRE") D LEXY
"RTN","LEXCODE",94,0)
 . S LEXDA=0
"RTN","LEXCODE",95,0)
 . F  S LEXDA=$O(LEXS(LEXSAB,"OTH",LEXDA)) Q:+LEXDA=0  D LEXY
"RTN","LEXCODE",96,0)
 . I $L(LEXSAB) S:$D(^LEX(757.03,"ASAB",LEXSAB)) LEXS(LEXSAB,0)=LEXCT
"RTN","LEXCODE",97,0)
 . I $L($P($G(LEXSABT),"^",1)),$L($P($G(LEXSABT),"^",1)) D
"RTN","LEXCODE",98,0)
 . . S LEXS(LEXSAB,0,"SAB")=LEXSABT
"RTN","LEXCODE",99,0)
 Q
"RTN","LEXCODE",100,0)
LEXY ;   Get IEN^TERM for Code X
"RTN","LEXCODE",101,0)
 Q:+($G(LEXDA))'>0  Q:'$D(^LEX(757.02,+LEXDA,0))
"RTN","LEXCODE",102,0)
 K LEXS(LEXSAB,"OTH",LEXDA) K LEXS(LEXSAB,"PRE")
"RTN","LEXCODE",103,0)
 S LEXY="" N LEXEXI,LEXEXP
"RTN","LEXCODE",104,0)
 S LEXEXI=+($P($G(^LEX(757.02,+LEXDA,0)),"^",1)) Q:+LEXEXI'>0
"RTN","LEXCODE",105,0)
 Q:'$L($G(^LEX(757.01,+LEXEXI,0)))
"RTN","LEXCODE",106,0)
 S LEXEXP=$G(^LEX(757.01,+LEXEXI,0)),LEXCT=LEXCT+1
"RTN","LEXCODE",107,0)
 S LEXY=LEXEXI_"^"_LEXEXP,LEXS(LEXSAB,LEXCT)=LEXY
"RTN","LEXCODE",108,0)
 Q
"RTN","LEXCODE",109,0)
 ;          
"RTN","LEXCODE",110,0)
CODE(X,LEXVDT,LEXSAB) ; Code for an Expression and Source
"RTN","LEXCODE",111,0)
 ; 
"RTN","LEXCODE",112,0)
 ; Similar to $$ICDDX^ICDEX
"RTN","LEXCODE",113,0)
 ;            $$ICDOP^ICDEX
"RTN","LEXCODE",114,0)
 ;            $$CPT^ICPTCOD
"RTN","LEXCODE",115,0)
 ;            $$DX^ICDXCD
"RTN","LEXCODE",116,0)
 ;            $$PR^ICDXCD
"RTN","LEXCODE",117,0)
 ;            
"RTN","LEXCODE",118,0)
 ;            Except the data comes from the Lexicon and
"RTN","LEXCODE",119,0)
 ;            can be used for any source in file 757.03 and
"RTN","LEXCODE",120,0)
 ;            is not limited to ICD-9, ICD-10 and CPT.
"RTN","LEXCODE",121,0)
 ;            
"RTN","LEXCODE",122,0)
 ; Input
"RTN","LEXCODE",123,0)
 ; 
"RTN","LEXCODE",124,0)
 ;    X       Pointer to an Expression in file 757.01
"RTN","LEXCODE",125,0)
 ;    LEXVDT  Versioning Date
"RTN","LEXCODE",126,0)
 ;    LEXSAB  Source Abbreviation
"RTN","LEXCODE",127,0)
 ;   
"RTN","LEXCODE",128,0)
 ; Output     A 11 piece "^" delimited string
"RTN","LEXCODE",129,0)
 ; 
"RTN","LEXCODE",130,0)
 ;    1  IEN of Code          File ^LEX(757.02)
"RTN","LEXCODE",131,0)
 ;    2  Code                 File ^LEX(757.02) Field #1
"RTN","LEXCODE",132,0)
 ;    3  Expression           Pointer to ^LEX(757.01)
"RTN","LEXCODE",133,0)
 ;    4  Concept Expression   Pointer to ^LEX(757.01)
"RTN","LEXCODE",134,0)
 ;    5  Source               Pointer ^LEX(757.03)
"RTN","LEXCODE",135,0)
 ;    6  Preference           File ^LEX(757.02) Field #4
"RTN","LEXCODE",136,0)
 ;    7  Primary              File ^LEX(757.02) Field #6
"RTN","LEXCODE",137,0)
 ;    8  Status on date       4 multiple
"RTN","LEXCODE",138,0)
 ;    9  Inactive Date        4 multiple
"RTN","LEXCODE",139,0)
 ;   10  Active Date          4 multiple
"RTN","LEXCODE",140,0)
 ;   11  Source Nomenclature  File ^LEX(757.03) Field #1
"RTN","LEXCODE",141,0)
 ;    
"RTN","LEXCODE",142,0)
 N LEXAC,LEXE,LEXEF,LEXEX,LEXEXI,LEXH,LEXHE,LEXHI,LEXHS,LEXI
"RTN","LEXCODE",143,0)
 N LEXIEN,LEXIENS,LEXIN,LEXMC,LEXMCE,LEXN,LEXNAM,LEXND,LEXO
"RTN","LEXCODE",144,0)
 N LEXS,LEXSO,LEXSOI,LEXSRC,LEXST,LEXTY S LEXO="",LEXEX=+($G(X))
"RTN","LEXCODE",145,0)
 Q:'$D(^LEX(757.01,+LEXEX,0)) "-1^Expression not found"
"RTN","LEXCODE",146,0)
 Q:$P($G(^LEX(757.01,+LEXEX,1)),"^",5)>0 "-1^Expression deactivated"
"RTN","LEXCODE",147,0)
 S LEXIENS(LEXEX)=""
"RTN","LEXCODE",148,0)
 S LEXMC=+($G(^LEX(757.01,+LEXEX,1))),LEXMCE=+($G(^LEX(757,+LEXMC,0)))
"RTN","LEXCODE",149,0)
 S LEXTY=$P($G(^LEX(757.01,+LEXEX,1)),"^",2)  I LEXTY=1 D
"RTN","LEXCODE",150,0)
 . N LEXMC,LEXI
"RTN","LEXCODE",151,0)
 . S LEXMC=+($G(^LEX(757.01,+LEXEX,1))),LEXI=0
"RTN","LEXCODE",152,0)
 . F  S LEXI=$O(^LEX(757.01,"AMC",+LEXMC,LEXI)) Q:+LEXI'>0  D
"RTN","LEXCODE",153,0)
 . . Q:$P($G(^LEX(757.01,+LEXI,1)),"^",5)>0
"RTN","LEXCODE",154,0)
 . . S:+LEXI>0 LEXIENS(+LEXI)=""
"RTN","LEXCODE",155,0)
 Q:$O(LEXIENS(0))'>0 "-1^Expression not found"
"RTN","LEXCODE",156,0)
 S LEXVDT=$G(LEXVDT) D VDT^LEXU
"RTN","LEXCODE",157,0)
 S LEXSAB=$G(LEXSAB),LEXSRC=$$SAB^LEXSRC2(LEXSAB)
"RTN","LEXCODE",158,0)
 Q:+LEXSRC'>0 "-1^Invalid Source specified"
"RTN","LEXCODE",159,0)
 S LEXNAM=$P($G(^LEX(757.03,+LEXSRC,0)),"^",2)
"RTN","LEXCODE",160,0)
 Q:'$L(LEXNAM) "-1^Invalid Source specified"
"RTN","LEXCODE",161,0)
 S LEXS=0,LEXO=""
"RTN","LEXCODE",162,0)
 S LEXIEN=0 F  S LEXIEN=$O(LEXIENS(LEXIEN)) Q:+LEXIEN'>0  D  Q:$L(LEXO)
"RTN","LEXCODE",163,0)
 . F  S LEXS=$O(^LEX(757.02,"B",+LEXEX,LEXS)) Q:+LEXS'>0  D  Q:$L(LEXO)
"RTN","LEXCODE",164,0)
 . . N LEXAC,LEXEF,LEXEXI,LEXHE,LEXHI,LEXHS,LEXIN,LEXND,LEXSOI,LEXST
"RTN","LEXCODE",165,0)
 . . S LEXND=$G(^LEX(757.02,+LEXS,0))
"RTN","LEXCODE",166,0)
 . . Q:$P(LEXND,"^",3)'=LEXSRC  S LEXEXI=+LEXND
"RTN","LEXCODE",167,0)
 . . S LEXHE=$O(^LEX(757.02,+LEXS,4,"B",(LEXVDT+.00001)),-1) Q:+LEXHE'>0
"RTN","LEXCODE",168,0)
 . . S LEXHI=$O(^LEX(757.02,+LEXS,4,"B",LEXHE," "),-1) Q:+LEXHI'>0
"RTN","LEXCODE",169,0)
 . . S LEXHS=$G(^LEX(757.02,+LEXS,4,+LEXHI,0)) S LEXST=+$P(LEXHS,"^",2)
"RTN","LEXCODE",170,0)
 . . S LEXEF=LEXHE,LEXSO=$P(LEXND,"^",2)
"RTN","LEXCODE",171,0)
 . . S LEXSOI=+LEXS S:LEXST>0 LEXAC=LEXEF S:LEXST'>0 LEXIN=LEXEF
"RTN","LEXCODE",172,0)
 . . I LEXST'>0,LEXIN?7N S LEXAC=$$PA(LEXS,LEXIN)
"RTN","LEXCODE",173,0)
 . . I LEXST'>0,LEXIN?7N,$G(LEXAC)'?7N Q
"RTN","LEXCODE",174,0)
 . . S LEXO=$G(LEXS)_"^"_$G(LEXSO)_"^"_$G(LEXEXI)_"^"_$G(LEXMCE)_"^"
"RTN","LEXCODE",175,0)
 . . S LEXO=LEXO_$G(LEXSRC)_"^"_$P(LEXND,"^",5)_"^"_$P(LEXND,"^",7)
"RTN","LEXCODE",176,0)
 . . S LEXO=LEXO_"^"_$G(LEXST)_"^"_$G(LEXIN)_"^"_$G(LEXAC)_"^"_LEXNAM
"RTN","LEXCODE",177,0)
 S X=LEXO S:+X'>0 X="-1^"_LEXNAM_" Code not found"
"RTN","LEXCODE",178,0)
 Q X
"RTN","LEXCODE",179,0)
 ;
"RTN","LEXCODE",180,0)
EXP(LEX,LEXS,LEXVDT) ; Get Preferred Expression for an Active Code
"RTN","LEXCODE",181,0)
 ;
"RTN","LEXCODE",182,0)
 ;   Input
"RTN","LEXCODE",183,0)
 ;
"RTN","LEXCODE",184,0)
 ;     LEX      (Required) Code
"RTN","LEXCODE",185,0)
 ;
"RTN","LEXCODE",186,0)
 ;     LEXS     (Required) This is either the three character
"RTN","LEXCODE",187,0)
 ;              Source Abbreviation (see list above) or a pointer
"RTN","LEXCODE",188,0)
 ;              to the Coding Systems file 757.03.
"RTN","LEXCODE",189,0)
 ;
"RTN","LEXCODE",190,0)
 ;     LEXVDT   (Optional) The date against which the codes 
"RTN","LEXCODE",191,0)
 ;              found by the search will be compared in order
"RTN","LEXCODE",192,0)
 ;              to determine whether the code is active or 
"RTN","LEXCODE",193,0)
 ;              inactive. If not passed, TODAY's date will 
"RTN","LEXCODE",194,0)
 ;              be used.
"RTN","LEXCODE",195,0)
 ;
"RTN","LEXCODE",196,0)
 ;   Output
"RTN","LEXCODE",197,0)
 ;
"RTN","LEXCODE",198,0)
 ;     $$EXP    2 Piece "^" delimited string containing
"RTN","LEXCODE",199,0)
 ;
"RTN","LEXCODE",200,0)
 ;              Either:
"RTN","LEXCODE",201,0)
 ;
"RTN","LEXCODE",202,0)
 ;                 1  Pointer to Expression file #757.01
"RTN","LEXCODE",203,0)
 ;                 2  Display Text (Expression)
"RTN","LEXCODE",204,0)
 ;
"RTN","LEXCODE",205,0)
 ;              or:
"RTN","LEXCODE",206,0)
 ;
"RTN","LEXCODE",207,0)
 ;                 1  -1
"RTN","LEXCODE",208,0)
 ;                 2  Error Message
"RTN","LEXCODE",209,0)
 ;
"RTN","LEXCODE",210,0)
 N LEXARY,LEXCDT,LEXCND,LEXEXP,LEXHI,LEXHND,LEXIN,LEXNOM,LEXORD,LEXPD
"RTN","LEXCODE",211,0)
 N LEXPF,LEXSB,LEXSI,LEXSR S (LEX,LEXIN)=$G(LEX)
"RTN","LEXCODE",212,0)
 Q:'$L(LEXIN) "-1^Code not passed"  S LEXS=$G(LEXS)
"RTN","LEXCODE",213,0)
 Q:'$L(LEXS) "-1^Source not passed"
"RTN","LEXCODE",214,0)
 S LEXSR=+($O(^LEX(757.03,"ASAB",LEXS,0)))
"RTN","LEXCODE",215,0)
 S LEXSB=$E($G(^LEX(757.03,+LEXSR,0)),1,3)
"RTN","LEXCODE",216,0)
 I +LEXSR'>0!($L(LEXSB)'=3) D
"RTN","LEXCODE",217,0)
 . S LEXSR=0,LEXSB=$E($G(^LEX(757.03,+LEXS,0)),1,3)
"RTN","LEXCODE",218,0)
 . S:$L(LEXSB) LEXSR=+($O(^LEX(757.03,"ASAB",LEXSB,0)))
"RTN","LEXCODE",219,0)
 Q:+LEXSR'>0!($L(LEXSB)'=3) "-1^Invalid source passed"
"RTN","LEXCODE",220,0)
 I '$D(^LEX(757.03,+LEXSR,0))!('$D(^LEX(757.03,"ASAB",LEXSB))) D  Q LEX
"RTN","LEXCODE",221,0)
 . S LEX="-1^Invalid source passed"
"RTN","LEXCODE",222,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSR,0)),"^",2)
"RTN","LEXCODE",223,0)
 Q:'$L(LEXNOM) "-1^Invalid source on file"
"RTN","LEXCODE",224,0)
 S LEXORD=(LEXIN_" ") D VDT^LEXU S LEXCDT=$G(LEXVDT)
"RTN","LEXCODE",225,0)
 K LEXARY S LEXSI=" "
"RTN","LEXCODE",226,0)
 F  S LEXSI=$O(^LEX(757.02,"CODE",LEXORD,LEXSI),-1) Q:+LEXSI'>0  D
"RTN","LEXCODE",227,0)
 . N LEXCND,LEXHND,LEXPD,LEXHI,LEXPF
"RTN","LEXCODE",228,0)
 . S LEXCND=$G(^LEX(757.02,+LEXSI,0)) Q:$P(LEXCND,"^",3)'=LEXSR
"RTN","LEXCODE",229,0)
 . S LEXPD=$O(^LEX(757.02,+LEXSI,4,"B",(LEXCDT+.0009)),-1) Q:LEXPD'?7N
"RTN","LEXCODE",230,0)
 . S LEXHI=$O(^LEX(757.02,+LEXSI,4,"B",LEXPD," "),-1) Q:+LEXHI'>0
"RTN","LEXCODE",231,0)
 . S LEXHND=$G(^LEX(757.02,+LEXSI,4,+LEXHI,0)) Q:$P(LEXHND,"^",2)'>0
"RTN","LEXCODE",232,0)
 . S LEXPF=+($P($G(^LEX(757.02,+LEXSI,0)),"^",5)) Q:LEXPF'>0
"RTN","LEXCODE",233,0)
 . S LEXARY(LEXSI,0)=LEXCND,LEXARY(LEXSI,4)=LEXHND
"RTN","LEXCODE",234,0)
 I $O(LEXARY(0))'>0 D  Q LEX
"RTN","LEXCODE",235,0)
 . N LEXC S LEXC=LEX
"RTN","LEXCODE",236,0)
 . S LEX="-1^Active code/expression not found for "_LEXNOM_" code "
"RTN","LEXCODE",237,0)
 . S LEX=LEX_LEXC_" on "_$$FMTE^XLFDT(LEXCDT,"5Z")
"RTN","LEXCODE",238,0)
 I $O(LEXARY(0))'=$O(LEXARY(" "),-1) D  Q LEX
"RTN","LEXCODE",239,0)
 . N LEXC S LEXC=LEX
"RTN","LEXCODE",240,0)
 . S LEX="-1^Multiple active preferred expressions for "_LEXNOM
"RTN","LEXCODE",241,0)
 . S LEX=LEX_" code "_LEXC_" on "_$$FMTE^XLFDT(LEXCDT,"5Z")
"RTN","LEXCODE",242,0)
 S LEXEXP=$O(LEXARY(0)),LEXEXP=+($G(LEXARY(+LEXEXP,0)))
"RTN","LEXCODE",243,0)
 Q:'$D(^LEX(757.01,+LEXEXP)) ("-1^Expression not found in file 757.01")
"RTN","LEXCODE",244,0)
 S LEX=LEXEXP_"^"_$P($G(^LEX(757.01,+LEXEXP,0)),"^",1)
"RTN","LEXCODE",245,0)
 Q LEX
"RTN","LEXCODE",246,0)
 ;
"RTN","LEXCODE",247,0)
 ; Miscellaneous
"RTN","LEXCODE",248,0)
PA(X,Y) ;   Previous Activation Date
"RTN","LEXCODE",249,0)
 N LEX,LEXA,LEXE,LEXI,LEXN S LEX=+($G(X)),LEXI=$G(Y)
"RTN","LEXCODE",250,0)
 Q:'$D(^LEX(757.02,LEXS,4))  Q:LEXI'?7N ""
"RTN","LEXCODE",251,0)
 S LEXA="",LEXE=LEXI+.000001
"RTN","LEXCODE",252,0)
 F  S LEXE=$O(^LEX(757.02,+LEX,4,"B",LEXE),-1) Q:+LEXE'>0  D
"RTN","LEXCODE",253,0)
 . Q:LEXA?7N  S LEXH=" "
"RTN","LEXCODE",254,0)
 . F  S LEXH=$O(^LEX(757.02,+LEX,4,"B",LEXE,LEXH),-1) Q:+LEXH'>0  D
"RTN","LEXCODE",255,0)
 . . Q:LEXA?7N  N LEXN S LEXN=$G(^LEX(757.02,+LEX,4,+LEXH,0))
"RTN","LEXCODE",256,0)
 . . S:$P(LEXN,"^",2)>0 LEXA=LEXE
"RTN","LEXCODE",257,0)
 S X="" S:LEXA?7N X=LEXA
"RTN","LEXCODE",258,0)
 Q X
"RTN","LEXDCC")
0^69^B5534473
"RTN","LEXDCC",1,0)
LEXDCC ;ISL/KER - Default Display ;04/21/2014
"RTN","LEXDCC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDCC",3,0)
 ;               
"RTN","LEXDCC",4,0)
 ; Global Variables
"RTN","LEXDCC",5,0)
 ;    None
"RTN","LEXDCC",6,0)
 ;               
"RTN","LEXDCC",7,0)
 ; External References
"RTN","LEXDCC",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDCC",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDCC",10,0)
 ;               
"RTN","LEXDCC",11,0)
 ; Entry:  D EN^LEXDCC            LEXAP is unknown
"RTN","LEXDCC",12,0)
 ;
"RTN","LEXDCC",13,0)
 ; Entry:  D EN1^LEXDCC(LEXAP)    LEXAP is known
"RTN","LEXDCC",14,0)
 ;
"RTN","LEXDCC",15,0)
 ; Single user entry point - Saves Default Display in file 757.2
"RTN","LEXDCC",16,0)
 ;
"RTN","LEXDCC",17,0)
 ; Where 
"RTN","LEXDCC",18,0)
 ;
"RTN","LEXDCC",19,0)
 ;      LEXAP     Pointer to file 757.2
"RTN","LEXDCC",20,0)
 ;      LEXUSER   DUZ of user
"RTN","LEXDCC",21,0)
 ;      LEXCA     Action (modify/delete)
"RTN","LEXDCC",22,0)
 ;      LEXCM     Method (predefined/create)
"RTN","LEXDCC",23,0)
 ;
"RTN","LEXDCC",24,0)
EN ; Single user, LEXAP is unknown
"RTN","LEXDCC",25,0)
 N LEXAP S LEXAP=$$DFI^LEXDM4 Q:+LEXAP=0  W ! D EN1(LEXAP) Q
"RTN","LEXDCC",26,0)
EN1(LEXAP) ; Single user, LEXAP is known
"RTN","LEXDCC",27,0)
 N LEXUSER,LEXX S LEXUSER=$G(DUZ) Q:+LEXUSER'>0  Q:'$L($$GET1^DIQ(200,+($G(DUZ)),.01))
"RTN","LEXDCC",28,0)
 ;
"RTN","LEXDCC",29,0)
 S LEXAP=$G(LEXAP) Q:LEXAP=""
"RTN","LEXDCC",30,0)
 I '$D(^LEXT(757.2,+LEXAP,0))&('$D(^LEXT(757.2,"B",LEXAP)))&('$D(^LEXT(757.2,"C",$$UP^XLFSTR(LEXAP))))&('$D(^LEXT(757.2,"AN",LEXAP))) Q
"RTN","LEXDCC",31,0)
 S:+LEXAP'>0 LEXAP=$$AP^LEXDFN2(LEXAP)
"RTN","LEXDCC",32,0)
 ;
"RTN","LEXDCC",33,0)
 Q:+($G(LEXAP))'>0  Q:+($P($G(^LEXT(757.2,+LEXAP,5)),"^",3))'>0
"RTN","LEXDCC",34,0)
 K LEXFIL N LEXCA,LEXCM,LEXDVAL,LEXDNAM,LEXFLD
"RTN","LEXDCC",35,0)
 S LEXFLD=2,LEXCA=$$MOD^LEXDM(2) Q:LEXCA=0!(LEXCA="^^")
"RTN","LEXDCC",36,0)
 D:LEXCA="@" KILL Q:LEXCA="@"  W ! S LEXCM=$$MTH^LEXDM(2) Q:LEXCM["^"
"RTN","LEXDCC",37,0)
 S:LEXCM=1 LEXDVAL=$$EN^LEXDCCS S:LEXCM=2 LEXDVAL=$$EN^LEXDCCC Q:LEXDVAL="^^"
"RTN","LEXDCC",38,0)
 S LEXDNAM=$P(LEXDVAL,"^",2),LEXDVAL=$P(LEXDVAL,"^",1) D SET
"RTN","LEXDCC",39,0)
 Q
"RTN","LEXDCC",40,0)
MGR(LEXX) ; Multi-user (for Manager options)
"RTN","LEXDCC",41,0)
 ; Do not save display, return value to manager option
"RTN","LEXDCC",42,0)
 N LEXCA,LEXCM,LEXDVAL S LEXCA=$$MOD^LEXDM(2) Q:LEXCA=0 "^" Q:(LEXCA="^^") "^^"
"RTN","LEXDCC",43,0)
 Q:LEXCA="@" "@^Delete display" W ! S LEXCM=$$MTH^LEXDM(2) Q:LEXCM["^" "^No display selected" Q:(LEXCM="^^") "^^"
"RTN","LEXDCC",44,0)
 S:LEXCM=1 LEXDVAL=$$EN^LEXDCCS S:LEXCM=2 LEXDVAL=$$EN^LEXDCCC Q:LEXDVAL="^^" "^^"
"RTN","LEXDCC",45,0)
 S LEXX=LEXDVAL Q LEXX
"RTN","LEXDCC",46,0)
SET ; Set default display
"RTN","LEXDCC",47,0)
 D SET^LEXDSV(LEXUSER,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) Q
"RTN","LEXDCC",48,0)
KILL ; Kill default display
"RTN","LEXDCC",49,0)
 D SET^LEXDSV(LEXUSER,LEXAP,"@","Delete",LEXFLD) Q
"RTN","LEXDCCC")
0^121^B8993729
"RTN","LEXDCCC",1,0)
LEXDCCC ;ISL/KER - Default Display - Create ;04/21/2014
"RTN","LEXDCCC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDCCC",3,0)
 ;               
"RTN","LEXDCCC",4,0)
 ; Global Variables
"RTN","LEXDCCC",5,0)
 ;    ^TMP("LEXX")        SACC 2.3.2.5.1
"RTN","LEXDCCC",6,0)
 ;               
"RTN","LEXDCCC",7,0)
 ; External References
"RTN","LEXDCCC",8,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXDCCC",9,0)
 ;               
"RTN","LEXDCCC",10,0)
 ; Entry:  S X=$$EN^LEXDCCC
"RTN","LEXDCCC",11,0)
 ;
"RTN","LEXDCCC",12,0)
 ; Function returns a two piece string
"RTN","LEXDCCC",13,0)
 ;  
"RTN","LEXDCCC",14,0)
 ; $P 1    String of classifications coding 
"RTN","LEXDCCC",15,0)
 ;         system mnemonics, i.e., "ICD/CPT",
"RTN","LEXDCCC",16,0)
 ;         and a legitimate value for LEXSHOW.
"RTN","LEXDCCC",17,0)
 ;         This will be null if input is "^"
"RTN","LEXDCCC",18,0)
 ;  
"RTN","LEXDCCC",19,0)
 ; $P 2    Name of display string selected i.e., 
"RTN","LEXDCCC",20,0)
 ;         "ICD/CPT only"  This will be null only
"RTN","LEXDCCC",21,0)
 ;         when user input is "^^"
"RTN","LEXDCCC",22,0)
 ;   
"RTN","LEXDCCC",23,0)
 ; LEXA   Answer to prompt (Yes 1 No 0)
"RTN","LEXDCCC",24,0)
 ; LEXC   Counter
"RTN","LEXDCCC",25,0)
 ; LEXI   Incremental Counter
"RTN","LEXDCCC",26,0)
 ; LEXS   Source, i.e., ICD94, NAN90, CPT89
"RTN","LEXDCCC",27,0)
 ; LEXSO  Source abbreviation, i.e., ICD, CPT, DSM
"RTN","LEXDCCC",28,0)
 ; LEXR   Internal Entry (Record) Number in #757.31
"RTN","LEXDCCC",29,0)
 ; 
"RTN","LEXDCCC",30,0)
 ; LEXFIL Flag, indicates that the 
"RTN","LEXDCCC",31,0)
 ;         classification codes selected are 
"RTN","LEXDCCC",32,0)
 ;         for building a filter - DIC("S")
"RTN","LEXDCCC",33,0)
 ;
"RTN","LEXDCCC",34,0)
T S X=$$EN W !!,X Q
"RTN","LEXDCCC",35,0)
EN(LEXX) ; Entry point S X=$$EN^LEXDCCC
"RTN","LEXDCCC",36,0)
BUILD ; Build the list to select from
"RTN","LEXDCCC",37,0)
 K ^TMP("LEXX",$J) W @IOF
"RTN","LEXDCCC",38,0)
 W:$D(LEXFIL) !,"Include terms linked to the following classification systems:",!!
"RTN","LEXDCCC",39,0)
 W:'$D(LEXFIL) !,"Display codes belonging to the following classification systems:",!!
"RTN","LEXDCCC",40,0)
 N LEXA,LEXC,LEXI,LEXSO,LEXR,LEXS
"RTN","LEXDCCC",41,0)
 S LEXS=""
"RTN","LEXDCCC",42,0)
 F  S LEXS=$O(^LEX(757.03,"B",LEXS)) Q:LEXS=""  D
"RTN","LEXDCCC",43,0)
 . Q:'$D(^LEX(757.02,"ASRC",$E(LEXS,1,3)))
"RTN","LEXDCCC",44,0)
 . S LEXSO=$E(LEXS,1,3) I LEXSO="UND" Q
"RTN","LEXDCCC",45,0)
 . S LEXR=$O(^LEX(757.03,"B",LEXS,0))
"RTN","LEXDCCC",46,0)
 . S LEXC=$S($D(^TMP("LEXX",$J,LEXSO)):LEXC+1,1:1)
"RTN","LEXDCCC",47,0)
 . S ^TMP("LEXX",$J,LEXSO,0)=LEXC
"RTN","LEXDCCC",48,0)
 . S ^TMP("LEXX",$J,LEXSO,LEXC)=$P(^LEX(757.03,LEXR,0),U,2,299)
"RTN","LEXDCCC",49,0)
LIST ; Display the list to select from
"RTN","LEXDCCC",50,0)
 S (LEXX,LEXA,LEXSO)=""
"RTN","LEXDCCC",51,0)
 F  S LEXSO=$O(^TMP("LEXX",$J,LEXSO)) Q:LEXSO=""!(LEXA[U)  D
"RTN","LEXDCCC",52,0)
 . W !,LEXSO F LEXI=1:1:^TMP("LEXX",$J,LEXSO,0) D
"RTN","LEXDCCC",53,0)
 . . W ?5,$P(^TMP("LEXX",$J,LEXSO,LEXI),U,2),!
"RTN","LEXDCCC",54,0)
ANS . ; Ask for user selection
"RTN","LEXDCCC",55,0)
 . W:'$D(LEXFIL) "Display these codes during look-up"
"RTN","LEXDCCC",56,0)
 . W:$D(LEXFIL) "Include terms linked to these codes during look-up"
"RTN","LEXDCCC",57,0)
 . S %=2 D YN^DICN S LEXA=%Y I %=2 W ! Q
"RTN","LEXDCCC",58,0)
 . I '%,'$D(LEXFIL) W !,"The codes from the selected coding systems may be displayed with the term.",! G ANS
"RTN","LEXDCCC",59,0)
 . I '%,$D(LEXFIL) W !,"Searches will display terms linked to the selected coding systems",! G ANS
"RTN","LEXDCCC",60,0)
 . I +($G(%))<0 S:%Y["^" LEXA="^" S:%Y["^^" LEXA="^^" W ! Q
"RTN","LEXDCCC",61,0)
 . S LEXX=LEXX_"/"_LEXSO W ! Q
"RTN","LEXDCCC",62,0)
 I $E(LEXX,1)="/" S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXDCCC",63,0)
 S:$D(LEXFIL) LEXX=LEXX_"^" I '$D(LEXFIL) D
"RTN","LEXDCCC",64,0)
 . N LEXNAM S LEXNAM=""
"RTN","LEXDCCC",65,0)
 . S:$P(LEXX,U,1)'="" LEXNAM=$$NAME^LEXDM3
"RTN","LEXDCCC",66,0)
 . S LEXX=LEXX_"^"_$S($L(LEXX):LEXNAM,1:"No display selected")
"RTN","LEXDCCC",67,0)
 S:LEXA["^^" LEXX="^^"
"RTN","LEXDCCC",68,0)
 K ^TMP("LEXX",$J),%,LEXA,LEXC,LEXI,LEXSO,LEXS,LEXR
"RTN","LEXDCCC",69,0)
 Q LEXX
"RTN","LEXDCCS")
0^122^B13152111
"RTN","LEXDCCS",1,0)
LEXDCCS ;ISL/KER - Default Display - Select ;04/21/2014
"RTN","LEXDCCS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDCCS",3,0)
 ;               
"RTN","LEXDCCS",4,0)
 ; Global Variables
"RTN","LEXDCCS",5,0)
 ;    ^LEX(757.31)        N/A
"RTN","LEXDCCS",6,0)
 ;               
"RTN","LEXDCCS",7,0)
 ; External References
"RTN","LEXDCCS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDCCS",9,0)
 ;               
"RTN","LEXDCCS",10,0)
 ; Special Look-up in file 757.31 Display formats
"RTN","LEXDCCS",11,0)
 ; Entry:  S X=$$EN^LEXDCCS
"RTN","LEXDCCS",12,0)
 ;
"RTN","LEXDCCS",13,0)
 ; Function returns a two piece string
"RTN","LEXDCCS",14,0)
 ;  
"RTN","LEXDCCS",15,0)
 ; $P 1    String of classifications coding 
"RTN","LEXDCCS",16,0)
 ;         system mnemonics, i.e., "ICD/CPT",
"RTN","LEXDCCS",17,0)
 ;         and a legitimate value for LEXSHOW.
"RTN","LEXDCCS",18,0)
 ;         This will be null if input is "^"
"RTN","LEXDCCS",19,0)
 ;  
"RTN","LEXDCCS",20,0)
 ; $P 2    Name of display string selected i.e., 
"RTN","LEXDCCS",21,0)
 ;         "ICD/CPT only"  This will be null only
"RTN","LEXDCCS",22,0)
 ;         when user input is "^^"
"RTN","LEXDCCS",23,0)
 ;   
"RTN","LEXDCCS",24,0)
 ; LEX    Array containing pointers to 757.31
"RTN","LEXDCCS",25,0)
 ; LEXA   Users answer to selection
"RTN","LEXDCCS",26,0)
 ; LEXC   Counter
"RTN","LEXDCCS",27,0)
 ; LEXD   Display
"RTN","LEXDCCS",28,0)
 ; LEXF   Re-display starting from #LEXF
"RTN","LEXDCCS",29,0)
 ; LEXI   Incremental Counter
"RTN","LEXDCCS",30,0)
 ; LEXL   Last entry displayed
"RTN","LEXDCCS",31,0)
 ; LEXLN  Line counter
"RTN","LEXDCCS",32,0)
 ; LEXR   Internal Entry Number (Record) in #757.31
"RTN","LEXDCCS",33,0)
 ; LEXS   Selection
"RTN","LEXDCCS",34,0)
 ; LEXT   Re-display up through #LEXT
"RTN","LEXDCCS",35,0)
 ;  
"RTN","LEXDCCS",36,0)
EN(LEXX) ; Select a predefined display string
"RTN","LEXDCCS",37,0)
 N X,Y,LEX,LEXC,LEXL,LEXR,LEXA,LEXD D TOT
"RTN","LEXDCCS",38,0)
 S LEXD="",(LEXA,LEXX,LEXC,LEXR)=0
"RTN","LEXDCCS",39,0)
 F  S LEXD=$O(^LEX(757.31,"B",LEXD)) Q:LEXD=""!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDCCS",40,0)
 . S LEXR=0
"RTN","LEXDCCS",41,0)
 . F  S LEXR=$O(^LEX(757.31,"B",LEXD,LEXR)) Q:+LEXR=0!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDCCS",42,0)
 . . S LEXC=LEXC+1,LEXL=LEXC
"RTN","LEXDCCS",43,0)
 . . S LEX(LEXC)=LEXR,LEX(0)=LEXC
"RTN","LEXDCCS",44,0)
 . . D W(LEXC,LEXR)
"RTN","LEXDCCS",45,0)
 . . I LEXC#5=0,+LEXX=0 S LEXA=$$SEL S:+LEXA>0&(+LEXA<(LEXC+1)) LEXX=+LEXA
"RTN","LEXDCCS",46,0)
 I +LEXX=0,LEXA'["^",LEXC#5'=0 S LEXA=$$SEL S:+LEXA>0&(+LEXA<(LEXC+1)) LEXX=+LEXA
"RTN","LEXDCCS",47,0)
 S LEXX=+LEXX S:LEXX'=0&($D(LEX(LEXX))) LEXX=LEX(LEXX) K LEX
"RTN","LEXDCCS",48,0)
 I +LEXX>0 S LEXX=$G(^LEX(757.31,+LEXX,1))_"^"_$P($G(^LEX(757.31,+LEXX,0)),"^",1) Q LEXX
"RTN","LEXDCCS",49,0)
 S:LEXA'["^^" LEXX="^No display selected" S:LEXA["^^" LEXX="^^"
"RTN","LEXDCCS",50,0)
 Q LEXX
"RTN","LEXDCCS",51,0)
SEL(LEXS) ; Select from the array
"RTN","LEXDCCS",52,0)
 S LEXS="" W ! N X,Y,DIRUT,DTOUT,DUOUT,DIROUT,DIR
"RTN","LEXDCCS",53,0)
 S DIR(0)="NAO^1:"_LEXC
"RTN","LEXDCCS",54,0)
 S DIR("A")="Select 1-"_LEXC_":  ",(DIR("?"),DIR("??"))="^D SH^LEXDCCS"
"RTN","LEXDCCS",55,0)
 D ^DIR W:$G(X)="" ! S LEXS=$S(X["^"&(X'["^^"):"^",X["^^":"^^",X'["^"&(+Y=0):"",1:+Y) Q LEXS
"RTN","LEXDCCS",56,0)
SH ; Show help
"RTN","LEXDCCS",57,0)
 I X'["?" D STD Q
"RTN","LEXDCCS",58,0)
 N LEXR S LEXR=+($E(X,2,$L(X))) I $E(X,1)="?",LEXR>0,LEXR<(LEX(0)+1) D
"RTN","LEXDCCS",59,0)
 . S LEXR=LEX(LEXR) D:'$D(^LEX(757.31,LEXR,2,1)) NODES,STD Q:'$D(^LEX(757.31,LEXR,2,1))  D DES
"RTN","LEXDCCS",60,0)
 D:$E(X,1)="?"&(LEXR<1!(LEXR>LEX(0))) STD D:$E(X,1)'="?" STD D RD
"RTN","LEXDCCS",61,0)
 Q
"RTN","LEXDCCS",62,0)
STD ; Standard Help
"RTN","LEXDCCS",63,0)
 W !!,"Enter 1-",LEXC," to select a Shortcut Context, or ""?"" for help, or ""?#"" for descriptive"
"RTN","LEXDCCS",64,0)
 W !,"help on an entry flagged with an ""*"", or ""^"" to exit or <Return> for more."
"RTN","LEXDCCS",65,0)
 Q
"RTN","LEXDCCS",66,0)
DES ; Description Help
"RTN","LEXDCCS",67,0)
 N LEXLN,LEXI S (LEXLN,LEXI)=0 W !!,?2,$P(^LEX(757.31,LEXR,0),"^",1),!
"RTN","LEXDCCS",68,0)
 F  S LEXI=$O(^LEX(757.31,LEXR,2,LEXI)) Q:+LEXI=0  D
"RTN","LEXDCCS",69,0)
 . W !,?4,^LEX(757.31,LEXR,2,LEXI,0) S LEXLN=LEXLN+1
"RTN","LEXDCCS",70,0)
 D:LEXLN>4 EOP W ! Q
"RTN","LEXDCCS",71,0)
NODES ; No Description Help Available
"RTN","LEXDCCS",72,0)
 W !!,?2,$P(^LEX(757.31,LEXR,0),"^",1)," does not have a description",! Q
"RTN","LEXDCCS",73,0)
RD ; Re-Display List
"RTN","LEXDCCS",74,0)
 N LEXF,LEXT S LEXT=+($G(LEXL)),LEXF=(+(LEXT#5)-1)
"RTN","LEXDCCS",75,0)
 S:LEXF<0 LEXF=4 S LEXF=LEXT-LEXF S LEXF=LEXF-1
"RTN","LEXDCCS",76,0)
 F  S LEXF=$O(LEX(LEXF)) Q:+LEXF=0!(LEXF'<(LEXT+1))  D
"RTN","LEXDCCS",77,0)
 . W:LEXF=1 ! D W(LEXF,LEX(LEXF))
"RTN","LEXDCCS",78,0)
 Q
"RTN","LEXDCCS",79,0)
W(LEXC,LEXR) ; Write entry
"RTN","LEXDCCS",80,0)
 W !,$J(LEXC,4),".  ",$P(^LEX(757.31,LEXR,0),"^",1)
"RTN","LEXDCCS",81,0)
 W $S($D(^LEX(757.31,LEXR,2,1)):"  *",1:"") Q
"RTN","LEXDCCS",82,0)
TOT ; Total displays
"RTN","LEXDCCS",83,0)
 N LEXD,LEXR,LEXC S LEXD="",LEXC=0
"RTN","LEXDCCS",84,0)
 F  S LEXD=$O(^LEX(757.31,"B",LEXD)) Q:LEXD=""  S LEXR=0 D
"RTN","LEXDCCS",85,0)
 . F  S LEXR=$O(^LEX(757.31,"B",LEXD,LEXR)) Q:+LEXR=0  S LEXC=LEXC+1
"RTN","LEXDCCS",86,0)
 W !!,LEXC," Displays found",!
"RTN","LEXDCCS",87,0)
 Q
"RTN","LEXDCCS",88,0)
EOP ; End of Page 
"RTN","LEXDCCS",89,0)
 W ! N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT S DIR(0)="E" D ^DIR S:X[U LEXA="^" W ! Q
"RTN","LEXDCX")
0^70^B4881405
"RTN","LEXDCX",1,0)
LEXDCX ;ISL/KER - Default Shortcut Context ;04/21/2014
"RTN","LEXDCX",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDCX",3,0)
 ;               
"RTN","LEXDCX",4,0)
 ; Global Variables
"RTN","LEXDCX",5,0)
 ;    None
"RTN","LEXDCX",6,0)
 ;               
"RTN","LEXDCX",7,0)
 ; External References
"RTN","LEXDCX",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDCX",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDCX",10,0)
 ;               
"RTN","LEXDCX",11,0)
 ; Entry:  D EN^LEXDCX              LEXAP is unknown
"RTN","LEXDCX",12,0)
 ;
"RTN","LEXDCX",13,0)
 ; Entry:  D EN1^LEXDCX(LEXAP)     LEXAP is known
"RTN","LEXDCX",14,0)
 ;
"RTN","LEXDCX",15,0)
 ; Single user entry point - Saves Default Shortcut 
"RTN","LEXDCX",16,0)
 ;                           Context in file 757.2
"RTN","LEXDCX",17,0)
 ;
"RTN","LEXDCX",18,0)
 ; Where 
"RTN","LEXDCX",19,0)
 ;
"RTN","LEXDCX",20,0)
 ;      LEXAP     Pointer to file 757.2
"RTN","LEXDCX",21,0)
 ;      LEXCA     Action (modify/delete)
"RTN","LEXDCX",22,0)
 ;      LEXDEL    Flag default for Deletion
"RTN","LEXDCX",23,0)
 ;      LEXDNAM   Default Name
"RTN","LEXDCX",24,0)
 ;      LEXDVAL   Default Value
"RTN","LEXDCX",25,0)
 ;      LEXFIL    Flag for Filter
"RTN","LEXDCX",26,0)
 ;      LEXFLD    Default field (1-4) in file 757.201
"RTN","LEXDCX",27,0)
 ;      LEXUSER   DUZ of user
"RTN","LEXDCX",28,0)
 ;      LEXX      Returned value
"RTN","LEXDCX",29,0)
 ;
"RTN","LEXDCX",30,0)
EN ; Single user, LEXAP is unknown
"RTN","LEXDCX",31,0)
 N LEXAP,X,Y S LEXAP=$$DFI^LEXDM4 Q:+LEXAP=0  W ! D EN1(LEXAP) Q
"RTN","LEXDCX",32,0)
EN1(LEXAP) ; Single user, LEXAP is known
"RTN","LEXDCX",33,0)
 N LEXUSER,LEXX S LEXUSER=$G(DUZ) Q:+LEXUSER'>0  Q:'$L($$GET1^DIQ(200,+($G(DUZ)),.01))
"RTN","LEXDCX",34,0)
 ;
"RTN","LEXDCX",35,0)
 S LEXAP=$G(LEXAP) Q:LEXAP=""
"RTN","LEXDCX",36,0)
 I '$D(^LEXT(757.2,+LEXAP,0))&('$D(^LEXT(757.2,"B",LEXAP)))&('$D(^LEXT(757.2,"C",$$UP^XLFSTR(LEXAP))))&('$D(^LEXT(757.2,"AN",LEXAP))) Q
"RTN","LEXDCX",37,0)
 S:+LEXAP'>0 LEXAP=$$AP^LEXDFN2(LEXAP)
"RTN","LEXDCX",38,0)
 ;
"RTN","LEXDCX",39,0)
 Q:+($G(LEXAP))'>0  Q:+($P($G(^LEXT(757.2,+LEXAP,5)),"^",3))'>0
"RTN","LEXDCX",40,0)
 K LEXFIL N LEXDVAL,LEXDNAM,LEXFLD S LEXFLD=4
"RTN","LEXDCX",41,0)
 S LEXDVAL=$$EN^LEXDCXS Q:LEXDVAL="^^"
"RTN","LEXDCX",42,0)
 S LEXDNAM=$P(LEXDVAL,"^",2),LEXDVAL=$P(LEXDVAL,"^",1)
"RTN","LEXDCX",43,0)
 Q:LEXDVAL=""&(LEXDNAM="")  I LEXDVAL="",LEXDNAM'="" D  Q
"RTN","LEXDCX",44,0)
 . N LEXDEL S LEXDEL=$$EN^LEXDM2(LEXUSER,LEXAP,4) I +LEXDEL>0 D KILL
"RTN","LEXDCX",45,0)
 D SET
"RTN","LEXDCX",46,0)
 Q
"RTN","LEXDCX",47,0)
MGR(LEXX) ; Multi-user (for Manager options)
"RTN","LEXDCX",48,0)
 ; Do not save display, return value to manager option
"RTN","LEXDCX",49,0)
 N LEXCA,LEXDVAL S LEXCA=$$MOD^LEXDM(4) Q:LEXCA=0 "^" Q:(LEXCA="^^") "^^"
"RTN","LEXDCX",50,0)
 Q:LEXCA="@" "@^Delete Shortcut Context" W ! S LEXDVAL=$$EN^LEXDCXS Q:LEXDVAL="^^" "^^"
"RTN","LEXDCX",51,0)
 S LEXX=LEXDVAL Q LEXX
"RTN","LEXDCX",52,0)
SET ; Set default Shortcut Context
"RTN","LEXDCX",53,0)
 D SET^LEXDSV(LEXUSER,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) Q
"RTN","LEXDCX",54,0)
KILL ; Kill default Shortcut Context
"RTN","LEXDCX",55,0)
 D SET^LEXDSV(LEXUSER,LEXAP,"@","Delete",LEXFLD) Q
"RTN","LEXDCXS")
0^123^B21843767
"RTN","LEXDCXS",1,0)
LEXDCXS ;ISL/KER - Default Context - Select ;04/21/2014
"RTN","LEXDCXS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDCXS",3,0)
 ;               
"RTN","LEXDCXS",4,0)
 ; Global Variables
"RTN","LEXDCXS",5,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDCXS",6,0)
 ;               
"RTN","LEXDCXS",7,0)
 ; External References
"RTN","LEXDCXS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDCXS",9,0)
 ;               
"RTN","LEXDCXS",10,0)
 ; Special Look-up in file 757.41 Shortcut Context
"RTN","LEXDCXS",11,0)
 ;
"RTN","LEXDCXS",12,0)
 ; Entry:  S X=$$EN^LEXDCXS
"RTN","LEXDCXS",13,0)
 ;
"RTN","LEXDCXS",14,0)
 ; Function returns a two piece string
"RTN","LEXDCXS",15,0)
 ;  
"RTN","LEXDCXS",16,0)
 ; $P 1    Pointer to file 757.41, and a valid
"RTN","LEXDCXS",17,0)
 ;         value for LEXCTX (context user default)
"RTN","LEXDCXS",18,0)
 ;         This will be null if input is "^"
"RTN","LEXDCXS",19,0)
 ;  
"RTN","LEXDCXS",20,0)
 ; $P 2    Name of context selected.  This will
"RTN","LEXDCXS",21,0)
 ;         be null only when user input is "^^"
"RTN","LEXDCXS",22,0)
 ;   
"RTN","LEXDCXS",23,0)
 ; LEX    Array containing pointers to 757.41
"RTN","LEXDCXS",24,0)
 ; LEXA   Users answer to selection
"RTN","LEXDCXS",25,0)
 ; LEXC   Counter
"RTN","LEXDCXS",26,0)
 ; LEXE   Edit/non-edit Counter
"RTN","LEXDCXS",27,0)
 ; LEXF   Re-display starting from #LEXF
"RTN","LEXDCXS",28,0)
 ; LEXI   Incremental Counter
"RTN","LEXDCXS",29,0)
 ; LEXL   Last entry displayed
"RTN","LEXDCXS",30,0)
 ; LEXR   Internal Entry Number (Record) in #757.41
"RTN","LEXDCXS",31,0)
 ; LEXT   Re-display up through #LEXT
"RTN","LEXDCXS",32,0)
 ; LEXX   Returned value
"RTN","LEXDCXS",33,0)
 ;  
"RTN","LEXDCXS",34,0)
EN(LEXX) ; Entry:  S X=$$EN^LEXDCXS
"RTN","LEXDCXS",35,0)
 N X,Y,LEX,LEXC,LEXL,LEXR,LEXA,LEXE S LEXE=$$CNT D TOT
"RTN","LEXDCXS",36,0)
 S LEXA="",(LEXX,LEXC,LEXR)=0
"RTN","LEXDCXS",37,0)
 F  S LEXR=$O(^LEX(757.41,LEXR)) Q:+LEXR=0!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDCXS",38,0)
 . I $D(LEXEDIT),$P($G(^LEX(757.41,LEXR,0)),"^",2)'=1 Q
"RTN","LEXDCXS",39,0)
 . S LEXC=LEXC+1,LEXL=LEXC
"RTN","LEXDCXS",40,0)
 . S LEX(LEXC)=LEXR,LEX(0)=LEXC
"RTN","LEXDCXS",41,0)
 . D:LEXE>1 W(LEXC,LEXR)
"RTN","LEXDCXS",42,0)
 . D:LEXE=1 WO(LEXR)
"RTN","LEXDCXS",43,0)
 ; D ASK
"RTN","LEXDCXS",44,0)
 D ASK I LEXA["^" D UOUT Q LEXX
"RTN","LEXDCXS",45,0)
 D VAL Q LEXX
"RTN","LEXDCXS",46,0)
ASK ; Ask for user input
"RTN","LEXDCXS",47,0)
 Q:+LEXX>0  Q:LEXA["^"  Q:+LEXR>0&(LEXC#5'=0)
"RTN","LEXDCXS",48,0)
 Q:+LEXR=0&(LEXC#5=0)
"RTN","LEXDCXS",49,0)
 D SEL Q:+LEXA'>0  Q:LEXA>LEXE  S LEXX=$G(LEX(+LEXA))
"RTN","LEXDCXS",50,0)
 Q
"RTN","LEXDCXS",51,0)
SEL ; Select from list
"RTN","LEXDCXS",52,0)
 I LEXE=1 D ONE Q
"RTN","LEXDCXS",53,0)
 W ! N X,Y,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDCXS",54,0)
 S DIR(0)="NAO^1:"_LEXC
"RTN","LEXDCXS",55,0)
 S DIR("A")="Select SHORTCUT CONTEXT 1-"_LEXC_":  //  "
"RTN","LEXDCXS",56,0)
 S (DIR("?"),DIR("??"))="^D SH^LEXDCXS"
"RTN","LEXDCXS",57,0)
 D ^DIR S LEXA=Y
"RTN","LEXDCXS",58,0)
 Q
"RTN","LEXDCXS",59,0)
ONE ;
"RTN","LEXDCXS",60,0)
 W ! N X,Y,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDCXS",61,0)
 S DIR(0)="YAO"
"RTN","LEXDCXS",62,0)
 S DIR("A")="  Ok?  //  "
"RTN","LEXDCXS",63,0)
 S (DIR("?"),DIR("??"))="^D SO^LEXDCXS"
"RTN","LEXDCXS",64,0)
 D ^DIR S LEXA=$S(+Y>0:1,1:0)
"RTN","LEXDCXS",65,0)
 Q
"RTN","LEXDCXS",66,0)
UOUT ; Up Arrow detected
"RTN","LEXDCXS",67,0)
 S:LEXA="^^" LEXX="^"
"RTN","LEXDCXS",68,0)
 S:LEXA="^" LEXX="^No context selected"
"RTN","LEXDCXS",69,0)
 Q
"RTN","LEXDCXS",70,0)
VAL ; No Un Arrow (value)
"RTN","LEXDCXS",71,0)
 I +LEXX>0 D  Q
"RTN","LEXDCXS",72,0)
 . I $D(^LEX(757.41,+LEXX)) D  Q
"RTN","LEXDCXS",73,0)
 . . S LEXX=LEXX_"^"_$P($G(^LEX(757.41,+LEXX,0)),"^",1)
"RTN","LEXDCXS",74,0)
 . S LEXX="^No context selected"
"RTN","LEXDCXS",75,0)
 S LEXX="^No context selected"
"RTN","LEXDCXS",76,0)
 Q
"RTN","LEXDCXS",77,0)
SH ; Show help
"RTN","LEXDCXS",78,0)
 N LEXR S LEXR=+($E(X,2,$L(X)))
"RTN","LEXDCXS",79,0)
 I $E(X,1)="?",LEXR>0,LEXR<(LEX(0)+1) D
"RTN","LEXDCXS",80,0)
 . S LEXR=LEX(LEXR) D:'$D(^LEX(757.41,LEXR,1,1)) NODES,STD
"RTN","LEXDCXS",81,0)
 . Q:'$D(^LEX(757.41,LEXR,1,1))  D DES
"RTN","LEXDCXS",82,0)
 D:$E(X,1)="?"&(LEXR<1!(LEXR>LEX(0))) STD
"RTN","LEXDCXS",83,0)
 D:$E(X,1)'="?" STD D RD
"RTN","LEXDCXS",84,0)
 Q
"RTN","LEXDCXS",85,0)
SO ; Show one help
"RTN","LEXDCXS",86,0)
 N LEXR S LEXR=1
"RTN","LEXDCXS",87,0)
 I $E(X,1)="?",LEXR>0,LEXR<(LEX(0)+1) D
"RTN","LEXDCXS",88,0)
 . S LEXR=LEX(LEXR) D:'$D(^LEX(757.41,LEXR,1,1)) NODES,STDO
"RTN","LEXDCXS",89,0)
 . Q:'$D(^LEX(757.41,LEXR,1,1))  D DES
"RTN","LEXDCXS",90,0)
 D:$E(X,1)'="?" STDO D RDO
"RTN","LEXDCXS",91,0)
 Q
"RTN","LEXDCXS",92,0)
STD ; Standard Help
"RTN","LEXDCXS",93,0)
 W !!,"Enter 1-",LEXC," to select a Shortcut Context, "
"RTN","LEXDCXS",94,0)
 W "or ""?"" for help, or ""?#"" for descriptive"
"RTN","LEXDCXS",95,0)
 W !,"help on an entry flagged with an ""*"", or ""^"" "
"RTN","LEXDCXS",96,0)
 W "to exit or <Return> for more."
"RTN","LEXDCXS",97,0)
 Q
"RTN","LEXDCXS",98,0)
STDO ; Standard Help - One
"RTN","LEXDCXS",99,0)
 W !!,"One Shortcut Context available to edit, "
"RTN","LEXDCXS",100,0)
 W "enter ""Yes"" to select, or ""^"" to exit."
"RTN","LEXDCXS",101,0)
 Q
"RTN","LEXDCXS",102,0)
DES ; Description Help
"RTN","LEXDCXS",103,0)
 N LEXI S LEXI=0 W !!,?2,$P(^LEX(757.41,LEXR,0),"^",1),!
"RTN","LEXDCXS",104,0)
 F  S LEXI=$O(^LEX(757.41,LEXR,1,LEXI)) Q:+LEXI=0  D
"RTN","LEXDCXS",105,0)
 . W !,?4,^LEX(757.41,LEXR,1,LEXI,0)
"RTN","LEXDCXS",106,0)
 W ! Q
"RTN","LEXDCXS",107,0)
NODES ; No Description Available
"RTN","LEXDCXS",108,0)
 W !!,?2,$P(^LEX(757.41,LEXR,0),"^",1)
"RTN","LEXDCXS",109,0)
 W " does not have a description",! Q
"RTN","LEXDCXS",110,0)
RD ; Re-Display List (MULTIPLE)
"RTN","LEXDCXS",111,0)
 N LEXF,LEXT S LEXT=+($G(LEXL)),LEXF=(+(LEXT#5)-1)
"RTN","LEXDCXS",112,0)
 S:LEXF<0 LEXF=4 S LEXF=LEXT-LEXF,LEXF=LEXF-1
"RTN","LEXDCXS",113,0)
 F  S LEXF=$O(LEX(LEXF)) Q:+LEXF=0!(LEXF'<(LEXT+1))  D
"RTN","LEXDCXS",114,0)
 . W:LEXF=1 ! D W(LEXF,LEX(LEXF))
"RTN","LEXDCXS",115,0)
 Q
"RTN","LEXDCXS",116,0)
RDO ; Re-Display List (ONE)
"RTN","LEXDCXS",117,0)
 N LEXR S LEXR=LEX(1) W ! D WO(LEXR)
"RTN","LEXDCXS",118,0)
 Q
"RTN","LEXDCXS",119,0)
W(LEXC,LEXR) ; Write entry
"RTN","LEXDCXS",120,0)
 W !,$J(LEXC,4),".  ",$P(^LEX(757.41,LEXR,0),"^",1)
"RTN","LEXDCXS",121,0)
 W $S($D(^LEX(757.41,LEXR,1)):"  *",1:"") Q
"RTN","LEXDCXS",122,0)
WO(LEXR) ; Write one entry
"RTN","LEXDCXS",123,0)
 W !,$P(^LEX(757.41,LEXR,0),"^",1) W $S($D(^LEX(757.41,LEXR,1)):"  *",1:"") Q
"RTN","LEXDCXS",124,0)
TOT ; Total Context
"RTN","LEXDCXS",125,0)
 N LEXR,LEXC S (LEXR,LEXC)=0 F  S LEXR=$O(^LEX(757.41,LEXR)) Q:+LEXR=0  D
"RTN","LEXDCXS",126,0)
 . Q:$D(LEXEDIT)&($P($G(^LEX(757.41,LEXR,0)),"^",2)'=1)  S LEXC=LEXC+1
"RTN","LEXDCXS",127,0)
 I $D(LEXEDIT) D  Q
"RTN","LEXDCXS",128,0)
 . W:LEXC>1 !!,LEXC," SHORTCUT CONTEXT(s) found which can be edited",!
"RTN","LEXDCXS",129,0)
 . W:LEXC=1 !!,"Only ",LEXC," SHORTCUT CONTEXT found which can be edited",!
"RTN","LEXDCXS",130,0)
 W:LEXC>1 !!,LEXC," SHORTCUT CONTEXT(s) found",! W:LEXC=1 !!,"Only ",LEXC," SHORTCUT CONTEXT found",!
"RTN","LEXDCXS",131,0)
 Q
"RTN","LEXDCXS",132,0)
CNT(X) ; Count
"RTN","LEXDCXS",133,0)
 N LEXR,LEXC S (LEXR,LEXC)=0 F  S LEXR=$O(^LEX(757.41,LEXR)) Q:+LEXR=0  D
"RTN","LEXDCXS",134,0)
 . Q:$D(LEXEDIT)&($P($G(^LEX(757.41,LEXR,0)),"^",2)'=1)  S LEXC=LEXC+1
"RTN","LEXDCXS",135,0)
 S X=LEXC Q X
"RTN","LEXDD1")
0^71^B25092584
"RTN","LEXDD1",1,0)
LEXDD1 ;ISL/KER - Display Defaults ;04/21/2014
"RTN","LEXDD1",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDD1",3,0)
 ;               
"RTN","LEXDD1",4,0)
 ; Global Variables
"RTN","LEXDD1",5,0)
 ;    ^DIC(49)            ICR  10093
"RTN","LEXDD1",6,0)
 ;               
"RTN","LEXDD1",7,0)
 ; External References
"RTN","LEXDD1",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDD1",9,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXDD1",10,0)
 ;    ^%ZIS               ICR  10086
"RTN","LEXDD1",11,0)
 ;    ^%ZISC              ICR  10089
"RTN","LEXDD1",12,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXDD1",13,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDD1",14,0)
 ;               
"RTN","LEXDD1",15,0)
SHOW ; Show user defaults
"RTN","LEXDD1",16,0)
 W @IOF
"RTN","LEXDD1",17,0)
 N LEXMODE,LEXUSER,LEXSERV
"RTN","LEXDD1",18,0)
SELUSR ; Select user/user group
"RTN","LEXDD1",19,0)
 K LEXD,LEXMODE
"RTN","LEXDD1",20,0)
 W !!,"Show User Defaults for"
"RTN","LEXDD1",21,0)
 W !!,"  1:  All users with defaults"
"RTN","LEXDD1",22,0)
 W !,"  2:  A Single User"
"RTN","LEXDD1",23,0)
 W !,"  3:  Users in a Service",!
"RTN","LEXDD1",24,0)
BYUSR ; Get response to user/user group
"RTN","LEXDD1",25,0)
 K ZTSAVE S LEXMODE=$$USR G:LEXMODE[U SHOWQ
"RTN","LEXDD1",26,0)
 I LEXMODE=1 D  G SELUSR
"RTN","LEXDD1",27,0)
 . S ZTRTN="ALL^LEXDD1" D DEV,HOME^%ZIS
"RTN","LEXDD1",28,0)
 I LEXMODE=2 D  G:+($G(LEXDUZ))'<1 SELUSR
"RTN","LEXDD1",29,0)
 . W ! S LEXDUZ=$$USER^LEXDM4,LEXDUZ=+LEXDUZ
"RTN","LEXDD1",30,0)
 . I +LEXDUZ'<1 D
"RTN","LEXDD1",31,0)
 . . S ZTRTN="ONE^LEXDD1"
"RTN","LEXDD1",32,0)
 . . S ZTSAVE("LEXDUZ")=""
"RTN","LEXDD1",33,0)
 . . D DEV,HOME^%ZIS
"RTN","LEXDD1",34,0)
 I LEXMODE=3 D  G SELUSR
"RTN","LEXDD1",35,0)
 . W ! S LEXSERV=$$SERV^LEXDM4
"RTN","LEXDD1",36,0)
 . I +LEXSERV>0 D
"RTN","LEXDD1",37,0)
 . . S ZTRTN="SERV^LEXDD1"
"RTN","LEXDD1",38,0)
 . . S ZTSAVE("LEXSERV")=""
"RTN","LEXDD1",39,0)
 . . D DEV,HOME^%ZIS
"RTN","LEXDD1",40,0)
 G SHOWQ
"RTN","LEXDD1",41,0)
 Q
"RTN","LEXDD1",42,0)
DEV ; Request a device
"RTN","LEXDD1",43,0)
 N LEXCNT,LEXLC,LEXC S (LEXCNT,LEXLC)=0,LEXC=""
"RTN","LEXDD1",44,0)
 S (ZTSAVE("LEXC"),ZTSAVE("LEXCNT"),ZTSAVE("LEXLC"))=""
"RTN","LEXDD1",45,0)
 N %ZIS,IOP S %ZIS="PQ" D ^%ZIS Q:POP  I $D(IO("Q")) D QUE Q
"RTN","LEXDD1",46,0)
NOQUE ; Local display
"RTN","LEXDD1",47,0)
 W @IOF D @ZTRTN,^%ZISC K ZTSAVE Q
"RTN","LEXDD1",48,0)
QUE ; Queue task to a selected device
"RTN","LEXDD1",49,0)
 N %,ZTDESC,ZTDTH,ZTIO,ZTSK Q:'$D(ZTRTN)  K IO("Q")
"RTN","LEXDD1",50,0)
 S ZTDESC="Lexicon Defaults",ZTIO=ION,ZTDTH=$H
"RTN","LEXDD1",51,0)
 D ^%ZTLOAD
"RTN","LEXDD1",52,0)
 W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),!
"RTN","LEXDD1",53,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE D ^%ZISC
"RTN","LEXDD1",54,0)
 Q
"RTN","LEXDD1",55,0)
ALL ; Display for all users
"RTN","LEXDD1",56,0)
 N LEXUSR,LEXDUZ,LEXITLE
"RTN","LEXDD1",57,0)
 S LEXUSR=""
"RTN","LEXDD1",58,0)
 S LEXITLE="Lexicon User Defaults (all users with defaults)"
"RTN","LEXDD1",59,0)
 W !,LEXITLE W:IOST["P-" !! S LEXLC=$S(IOST["P-":LEXLC+3,1:LEXLC+1)
"RTN","LEXDD1",60,0)
 F  S LEXUSR=$O(^LEXT(757.2,"AUD",LEXUSR)) Q:LEXUSR=""  D
"RTN","LEXDD1",61,0)
 . N LEXDUZ S LEXDUZ=0
"RTN","LEXDD1",62,0)
 . F  S LEXDUZ=$O(^LEXT(757.2,"AUD",LEXUSR,LEXDUZ)) Q:+LEXDUZ=0  D
"RTN","LEXDD1",63,0)
 . . I +LEXDUZ'<1 D
"RTN","LEXDD1",64,0)
 . . . S LEXOK=$$DEF I LEXOK D BUILD^LEXDD2 S LEXCNT=LEXCNT+1
"RTN","LEXDD1",65,0)
 I +LEXCNT=0 D
"RTN","LEXDD1",66,0)
 . W !!,"No users found with defaults set."
"RTN","LEXDD1",67,0)
 D ^%ZISC I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LEXDD1",68,0)
 Q
"RTN","LEXDD1",69,0)
ONE ; Display for one user
"RTN","LEXDD1",70,0)
 Q:+($G(LEXDUZ))<1  N LEXITLE,LEXOK,LEXNM
"RTN","LEXDD1",71,0)
 S LEXITLE="Lexicon User Defaults (Single User)"
"RTN","LEXDD1",72,0)
 W !,LEXITLE W:IOST["P-" !! S LEXLC=$S(IOST["P-":LEXLC+3,1:LEXLC+1)
"RTN","LEXDD1",73,0)
 S LEXNM=$$GET1^DIQ(200,+($G(LEXDUZ)),.01)
"RTN","LEXDD1",74,0)
 I LEXDUZ'<1,$L(LEXNM) D
"RTN","LEXDD1",75,0)
 . S LEXOK=$$DEF I LEXOK D BUILD^LEXDD2 S LEXCNT=LEXCNT+1
"RTN","LEXDD1",76,0)
 . I 'LEXOK D
"RTN","LEXDD1",77,0)
 . . I LEXNM'="" D
"RTN","LEXDD1",78,0)
 . . . N LEXNAME S LEXNAME=LEXNM
"RTN","LEXDD1",79,0)
 . . . S LEXNAME=$$FL^LEXDD4(LEXNAME)
"RTN","LEXDD1",80,0)
 . . . W !,LEXNAME," has no defaults set",!
"RTN","LEXDD1",81,0)
 . . I LEXNM="" D
"RTN","LEXDD1",82,0)
 . . . W !,"User has no defaults set",!
"RTN","LEXDD1",83,0)
 I LEXDUZ'<1,'$L(LEXNM) D
"RTN","LEXDD1",84,0)
 . W !,"User not found",!
"RTN","LEXDD1",85,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXDD1",86,0)
 Q
"RTN","LEXDD1",87,0)
SERV ; Display for users in a Service
"RTN","LEXDD1",88,0)
 Q:'$D(LEXSERV)  N LEXITLE,LEXNM,LEXSV
"RTN","LEXDD1",89,0)
 S LEXSERV=+LEXSERV
"RTN","LEXDD1",90,0)
 S LEXITLE="Lexicon User Defaults in a Single Service ("_$P(^DIC(49,LEXSERV,0),U,1)_")"
"RTN","LEXDD1",91,0)
 W !,LEXITLE W:IOST["P-" !! S LEXLC=$S(IOST["P-":LEXLC+3,1:LEXLC+1)
"RTN","LEXDD1",92,0)
 S LEXUSR=""
"RTN","LEXDD1",93,0)
 F  S LEXUSR=$O(^LEXT(757.2,"AUD",LEXUSR)) Q:LEXUSR=""  D
"RTN","LEXDD1",94,0)
 . N LEXDUZ S LEXDUZ=0
"RTN","LEXDD1",95,0)
 . F  S LEXDUZ=$O(^LEXT(757.2,"AUD",LEXUSR,LEXDUZ)) Q:+LEXDUZ=0  D
"RTN","LEXDD1",96,0)
 . . I +LEXDUZ'<1 D
"RTN","LEXDD1",97,0)
 . . . N LEXUSV S LEXUSV=$$GET1^DIQ(200,+($G(LEXDUZ)),29,"I")
"RTN","LEXDD1",98,0)
 . . . I LEXUSV=LEXSERV D
"RTN","LEXDD1",99,0)
 . . . . S LEXOK=$$DEF I LEXOK D BUILD^LEXDD2 S LEXCNT=LEXCNT+1
"RTN","LEXDD1",100,0)
 I +LEXCNT=0 D
"RTN","LEXDD1",101,0)
 . W !!,"No users found with defaults set in the ",$P(^DIC(49,LEXSERV,0),U,1)," service."
"RTN","LEXDD1",102,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXDD1",103,0)
 Q
"RTN","LEXDD1",104,0)
SHOWQ ; Quit SHOW
"RTN","LEXDD1",105,0)
 I IOST["P-" D ^%ZISC
"RTN","LEXDD1",106,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTSK,X,Y
"RTN","LEXDD1",107,0)
 K DIR,DIC,DIC("S"),%,%ZIS,POP,IOP
"RTN","LEXDD1",108,0)
 K LEX,LEXA,LEXAP,LEXAPID,LEXC,LEXCNT,LEXCTR,LEXCTX,LEXD
"RTN","LEXDD1",109,0)
 K LEXDATA,LEXDICS,LEXDUZ,LEXFIL,LEXFN,LEXI,LEXIEN,LEXITL
"RTN","LEXDD1",110,0)
 K LEXITLE,LEXT,LEXLC,LEXLN,LEXMODE,LEXNAME,LEXOK,LEXSERV
"RTN","LEXDD1",111,0)
 K LEXSHOW,LEXSPC,LEXSTLN,LEXSTR,LEXSUB,LEXUSER,LEXUSR
"RTN","LEXDD1",112,0)
 Q
"RTN","LEXDD1",113,0)
DEF(X) ; Based on DUZ determines if there are defaults defined
"RTN","LEXDD1",114,0)
 S X=0 Q:+($G(LEXDUZ))=0 X N LEXAPID,LEXIEN S LEXAPID=0
"RTN","LEXDD1",115,0)
 ; Defaults by Application
"RTN","LEXDD1",116,0)
 F  S LEXAPID=$O(^LEXT(757.2,"ADEF",LEXAPID)) Q:+LEXAPID=0!(X)  D  Q:X
"RTN","LEXDD1",117,0)
 . S LEXIEN=0 F  S LEXIEN=$O(^LEXT(757.2,"ADEF",LEXAPID,LEXIEN)) Q:+LEXIEN=0!(X)  D  Q:X
"RTN","LEXDD1",118,0)
 . . S:$L($G(^LEXT(757.2,LEXIEN,200,LEXDUZ,1))) X=1 Q:X
"RTN","LEXDD1",119,0)
 . . S:$L($G(^LEXT(757.2,LEXIEN,200,LEXDUZ,2))) X=1 Q:X
"RTN","LEXDD1",120,0)
 . . S:$L($G(^LEXT(757.2,LEXIEN,200,LEXDUZ,3))) X=1 Q:X
"RTN","LEXDD1",121,0)
 . . S:$L($G(^LEXT(757.2,LEXIEN,200,LEXDUZ,4))) X=1 Q:X
"RTN","LEXDD1",122,0)
 Q X
"RTN","LEXDD1",123,0)
USR(X) ; Get response for user type/group
"RTN","LEXDD1",124,0)
 N Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXDD1",125,0)
 S DIR("A")="Select (1-3):  ",DIR("B")=2
"RTN","LEXDD1",126,0)
 S DIR("?")="Answer must be from 1 to 3"
"RTN","LEXDD1",127,0)
 S DIR(0)="NAO^1:3:0" D ^DIR
"RTN","LEXDD1",128,0)
 S X=$S($D(DTOUT)!(X[U)!(X=""):U,1:X) K DIR Q X
"RTN","LEXDD2")
0^72^B3584925
"RTN","LEXDD2",1,0)
LEXDD2 ;ISL/KER - Display Defaults - Build List ;04/21/2014
"RTN","LEXDD2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDD2",3,0)
 ;               
"RTN","LEXDD2",4,0)
 ; Global Variables
"RTN","LEXDD2",5,0)
 ;    None
"RTN","LEXDD2",6,0)
 ;               
"RTN","LEXDD2",7,0)
 ; External References
"RTN","LEXDD2",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDD2",9,0)
 ;            
"RTN","LEXDD2",10,0)
BUILD ; Display defaults
"RTN","LEXDD2",11,0)
 Q:+($G(LEXDUZ))<1  Q:'$L($$GET1^DIQ(200,+($G(LEXDUZ)),.01))
"RTN","LEXDD2",12,0)
 I '$D(LEXLC) N LEXLC S LEXLC=0
"RTN","LEXDD2",13,0)
 I '$D(LEXC) N LEXC S LEXC=""
"RTN","LEXDD2",14,0)
APPS ; Get applications authorizing user defaults
"RTN","LEXDD2",15,0)
 K LEXD S LEXD(0)=0 N LEXA,LEXAP
"RTN","LEXDD2",16,0)
 D BLANK^LEXDD4,BLANK^LEXDD4,NAME^LEXDD4,BLANK^LEXDD4
"RTN","LEXDD2",17,0)
 D SEV^LEXDD4
"RTN","LEXDD2",18,0)
 S LEXA="" F  S LEXA=$O(^LEXT(757.2,"ADEF",LEXA)) Q:LEXA=""  D
"RTN","LEXDD2",19,0)
 . N LEXAP S LEXAP=0
"RTN","LEXDD2",20,0)
 . F  S LEXAP=$O(^LEXT(757.2,"ADEF",LEXA,LEXAP)) Q:+LEXAP=0  D
"RTN","LEXDD2",21,0)
 . . N LEXOK S LEXOK=$$FLD
"RTN","LEXDD2",22,0)
 . . I LEXOK D
"RTN","LEXDD2",23,0)
 . . . D BLANK^LEXDD4,APP^LEXDD4,BLANK^LEXDD4
"RTN","LEXDD2",24,0)
 . . . S LEXDICS=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,1))
"RTN","LEXDD2",25,0)
 . . . S LEXDICS(0)=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,1.5))
"RTN","LEXDD2",26,0)
 . . . S LEXSHOW=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,2))
"RTN","LEXDD2",27,0)
 . . . S LEXSHOW(0)=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,2.5))
"RTN","LEXDD2",28,0)
 . . . S LEXSUB=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,3))
"RTN","LEXDD2",29,0)
 . . . S LEXSUB(0)=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,3.5))
"RTN","LEXDD2",30,0)
 . . . S LEXCTX=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,4))
"RTN","LEXDD2",31,0)
 . . . S LEXCTX(0)=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,4.5))
"RTN","LEXDD2",32,0)
 . . . D DEF^LEXDD4
"RTN","LEXDD2",33,0)
 D DSPLY^LEXDD3
"RTN","LEXDD2",34,0)
 Q
"RTN","LEXDD2",35,0)
FLD(X) ;    User Defaults
"RTN","LEXDD2",36,0)
 N LEX1,LEX2,LEX3,LEX4 S X=0
"RTN","LEXDD2",37,0)
 S LEX1=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,1))
"RTN","LEXDD2",38,0)
 S LEX2=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,2))
"RTN","LEXDD2",39,0)
 S LEX3=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,3))
"RTN","LEXDD2",40,0)
 S LEX4=$G(^LEXT(757.2,LEXAP,200,LEXDUZ,4))
"RTN","LEXDD2",41,0)
 S:($L(LEX1)+$L(LEX2)+$L(LEX3)+$L(LEX4))>0 X=1
"RTN","LEXDD2",42,0)
 Q X
"RTN","LEXDD3")
0^124^B1122704
"RTN","LEXDD3",1,0)
LEXDD3 ;ISL/KER - Display Defaults - Display List ;04/21/2014
"RTN","LEXDD3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDD3",3,0)
 ;               
"RTN","LEXDD3",4,0)
 ; Global Variables
"RTN","LEXDD3",5,0)
 ;    None
"RTN","LEXDD3",6,0)
 ;               
"RTN","LEXDD3",7,0)
 ; External References
"RTN","LEXDD3",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDD3",9,0)
 ;               
"RTN","LEXDD3",10,0)
DSPLY ; Display Defaults contained in LEXD(
"RTN","LEXDD3",11,0)
 Q:'$D(LEXD(0))
"RTN","LEXDD3",12,0)
 Q:$G(LEXC)[U
"RTN","LEXDD3",13,0)
 N LEXI F LEXI=1:1:LEXD(0) D  Q:$G(LEXC)[U
"RTN","LEXDD3",14,0)
 . W !,LEXD(LEXI) D LF Q:$G(LEXC)[U
"RTN","LEXDD3",15,0)
 K LEXD,LEXI Q
"RTN","LEXDD3",16,0)
LF ; Line Feed
"RTN","LEXDD3",17,0)
 Q:LEXI=LEXD(0)  S LEXLC=LEXLC+1
"RTN","LEXDD3",18,0)
 I IOST["P-",LEXLC>(IOSL-7) D CONT,HDR
"RTN","LEXDD3",19,0)
 I IOST'["P-",LEXLC>(IOSL-4) D CONT
"RTN","LEXDD3",20,0)
 Q
"RTN","LEXDD3",21,0)
CONT ; Page/Form Feed
"RTN","LEXDD3",22,0)
 S LEXLC=0 I IOST["P-" W @IOF Q
"RTN","LEXDD3",23,0)
 W ! S DIR("?")="  Additional information is available"
"RTN","LEXDD3",24,0)
 S LEXC="" N X,Y S DIR(0)="E" D ^DIR
"RTN","LEXDD3",25,0)
 S:$D(DTOUT)!(X[U) LEXC=U
"RTN","LEXDD3",26,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT W ! Q
"RTN","LEXDD3",27,0)
HDR ; Page Title
"RTN","LEXDD3",28,0)
 W !,LEXITLE,!! S LEXLC=3 Q
"RTN","LEXDD4")
0^73^B13932965
"RTN","LEXDD4",1,0)
LEXDD4 ;ISL/KER - Display Defaults - List Elements ;04/21/2014
"RTN","LEXDD4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDD4",3,0)
 ;               
"RTN","LEXDD4",4,0)
 ; Global Variables
"RTN","LEXDD4",5,0)
 ;    ^DIC(49)            ICR  10093
"RTN","LEXDD4",6,0)
 ;               
"RTN","LEXDD4",7,0)
 ; External References
"RTN","LEXDD4",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDD4",9,0)
 ;    $$LOW^XLFSTR        ICR  10103
"RTN","LEXDD4",10,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDD4",11,0)
 ;               
"RTN","LEXDD4",12,0)
 ;
"RTN","LEXDD4",13,0)
 ; Create the Display for a user
"RTN","LEXDD4",14,0)
NAME ;     Name
"RTN","LEXDD4",15,0)
 S:'$D(LEXD(0)) LEXD(0)=0
"RTN","LEXDD4",16,0)
 N LEXDATA,LEXSPC S LEXSPC="",LEXDATA=$$GET1^DIQ(200,+($G(LEXDUZ)),.01)
"RTN","LEXDD4",17,0)
 N LEXLN,LEXFN
"RTN","LEXDD4",18,0)
 S LEXDATA=$$FL(LEXDATA)
"RTN","LEXDD4",19,0)
 K LEXITL D STRING
"RTN","LEXDD4",20,0)
 Q
"RTN","LEXDD4",21,0)
SEV ;     Service
"RTN","LEXDD4",22,0)
 N LEXDATA S LEXDATA=$$GET1^DIQ(200,+($G(LEXDUZ)),29),LEXDATA=+LEXDATA
"RTN","LEXDD4",23,0)
 Q:'LEXDATA  Q:$P($G(^DIC(49,LEXDATA,0)),U,1)=""
"RTN","LEXDD4",24,0)
 S LEXDATA=$P($G(^DIC(49,LEXDATA,0)),U,1)
"RTN","LEXDD4",25,0)
 I $L(LEXDATA) S LEXITL="    Service:   " D STRING
"RTN","LEXDD4",26,0)
 Q
"RTN","LEXDD4",27,0)
APP ;     Application Name
"RTN","LEXDD4",28,0)
 Q:+($G(LEXAP))<1  Q:'$D(^LEXT(757.2,+LEXAP,0))
"RTN","LEXDD4",29,0)
 N LEXDATA,LEXSPC S LEXDATA=$P(^LEXT(757.2,LEXAP,0),U,1)
"RTN","LEXDD4",30,0)
 S LEXDATA=LEXDATA_":",LEXSPC="    " K LEXITL D STRING
"RTN","LEXDD4",31,0)
 Q
"RTN","LEXDD4",32,0)
DEF ; Defaults for user
"RTN","LEXDD4",33,0)
 D:$L($G(LEXSUB)) DEFS($G(LEXSUB),$G(LEXSUB(0)),3),BLANK
"RTN","LEXDD4",34,0)
 D:$L($G(LEXSHOW)) DEFS($G(LEXSHOW),$G(LEXSHOW(0)),2),BLANK
"RTN","LEXDD4",35,0)
 D:$L($G(LEXDICS)) DEFS($G(LEXDICS),$G(LEXDICS(0)),1),BLANK
"RTN","LEXDD4",36,0)
 D:$L($G(LEXCTX)) DEFS($G(LEXCTX),$G(LEXCTX(0)),4)
"RTN","LEXDD4",37,0)
 Q
"RTN","LEXDD4",38,0)
 ;
"RTN","LEXDD4",39,0)
DEFS(LEXV,LEXN,LEXO) ; Create local array
"RTN","LEXDD4",40,0)
 Q:'$L($G(LEXV))  N LEXITL,LEXA,LEXSTLN,LEXSTR
"RTN","LEXDD4",41,0)
 S:$G(LEXN)[" (" LEXN=$P(LEXN," (",1)
"RTN","LEXDD4",42,0)
 K LEX S LEX(0)=0 S LEXSTLN=56
"RTN","LEXDD4",43,0)
 S:$G(LEXO)=1 LEX(1)="        Filter:      "_$G(LEXN),LEX(0)=1
"RTN","LEXDD4",44,0)
 S:$G(LEXO)=2 LEX(1)="        Display:     "_$G(LEXN),LEX(0)=1
"RTN","LEXDD4",45,0)
 S:$G(LEXO)=3 LEX(1)="        Vocabulary:  "_$G(LEXN),LEX(0)=1
"RTN","LEXDD4",46,0)
 S:$G(LEXO)=4 LEX(1)="        Shortcuts:   "_$G(LEXN),LEX(0)=1
"RTN","LEXDD4",47,0)
 S LEXITL="" D:$G(LEX(1))'="" ARRAY K LEX S LEXITL=""
"RTN","LEXDD4",48,0)
 ;
"RTN","LEXDD4",49,0)
 S LEXITL="                     "
"RTN","LEXDD4",50,0)
 D:$G(LEXO)=1 DICS^LEXDDT1 D:$G(LEXO)=2 SHOW^LEXDDT1
"RTN","LEXDD4",51,0)
 D:$G(LEXO)=3 SUB^LEXDDT1 D:$G(LEXO)=4 CON^LEXDDT1
"RTN","LEXDD4",52,0)
 D:$G(LEX(1))'="" ARRAY K LEX
"RTN","LEXDD4",53,0)
 Q
"RTN","LEXDD4",54,0)
 ;
"RTN","LEXDD4",55,0)
 D:$G(LEXO)=1 FV^LEXDDT1 D:$G(LEXO)=2 DV^LEXDDT1
"RTN","LEXDD4",56,0)
 D:$G(LEXO)=3 VV^LEXDDT1 D:$G(LEXO)=4 CV^LEXDDT1
"RTN","LEXDD4",57,0)
 S LEXITL="                     " D:$D(LEX(0)) ARRAY K LEX
"RTN","LEXDD4",58,0)
 Q
"RTN","LEXDD4",59,0)
BLANK ;     Store a blank line
"RTN","LEXDD4",60,0)
 N LEXDATA,LEXSPC S (LEXDATA,LEXSPC)="" K LEXITL D STRING
"RTN","LEXDD4",61,0)
 Q
"RTN","LEXDD4",62,0)
STRING ;     Store a string LEXDATA
"RTN","LEXDD4",63,0)
 S:'$D(LEXD(0)) LEXD(0)=0 N LEXCTR,LEXFIL
"RTN","LEXDD4",64,0)
 S LEXCTR=LEXD(0) S:'$D(LEXSPC) LEXSPC="                     "
"RTN","LEXDD4",65,0)
 S:$D(LEXITL)&($D(LEXDATA)) LEXFIL=LEXITL
"RTN","LEXDD4",66,0)
 S:'$D(LEXITL)&($D(LEXDATA)) LEXFIL=LEXSPC
"RTN","LEXDD4",67,0)
 I $L($G(LEXFIL)) D
"RTN","LEXDD4",68,0)
 . S LEXCTR=LEXCTR+1,LEXD(LEXCTR)=LEXFIL_LEXDATA,LEXD(0)=LEXCTR
"RTN","LEXDD4",69,0)
 I '$L($G(LEXFIL)) D
"RTN","LEXDD4",70,0)
 . S LEXCTR=LEXCTR+1,LEXD(LEXCTR)=LEXDATA,LEXD(0)=LEXCTR
"RTN","LEXDD4",71,0)
 K LEXSPC,LEXDATA,LEXITL
"RTN","LEXDD4",72,0)
 Q
"RTN","LEXDD4",73,0)
ARRAY ;     Store local array LEX
"RTN","LEXDD4",74,0)
 S:'$D(LEXD(0)) LEXD(0)=0
"RTN","LEXDD4",75,0)
 N LEXI,LEXCTR,LEXSPC S LEXCTR=LEXD(0),LEXSPC="                     "
"RTN","LEXDD4",76,0)
 F LEXI=1:1:LEX(0) D
"RTN","LEXDD4",77,0)
 . S LEXCTR=LEXCTR+1
"RTN","LEXDD4",78,0)
 . I LEXI=1 S LEXD(LEXCTR)=LEXITL_LEX(LEXI) Q
"RTN","LEXDD4",79,0)
 . S LEXD(LEXCTR)=LEXSPC_LEX(LEXI)
"RTN","LEXDD4",80,0)
 S LEXD(0)=LEXCTR
"RTN","LEXDD4",81,0)
 Q
"RTN","LEXDD4",82,0)
FL(X) ; First and Last Name, Mixed Case
"RTN","LEXDD4",83,0)
 I X["," D  Q X
"RTN","LEXDD4",84,0)
 . N LEXLN,LEXFN
"RTN","LEXDD4",85,0)
 . S LEXLN=$P(X,",",1)
"RTN","LEXDD4",86,0)
 . S LEXLN=$$UP^XLFSTR($E(LEXLN,1))_$$LOW^XLFSTR($E(LEXLN,2,$L(LEXLN)))
"RTN","LEXDD4",87,0)
 . S LEXFN=$P($P(X,",",2)," ",1)
"RTN","LEXDD4",88,0)
 . S LEXFN=$$UP^XLFSTR($E(LEXFN,1))_$$LOW^XLFSTR($E(LEXFN,2,$L(LEXFN)))
"RTN","LEXDD4",89,0)
 . S X=LEXFN_" "_LEXLN
"RTN","LEXDD4",90,0)
 I X'[",",X[" " D  Q X
"RTN","LEXDD4",91,0)
 . N LEXLN,LEXFN
"RTN","LEXDD4",92,0)
 . S LEXLN=$P($P(X," ",2)," ",1)
"RTN","LEXDD4",93,0)
 . S LEXLN=$$UP^XLFSTR($E(LEXLN,1))_$$LOW^XLFSTR($E(LEXLN,2,$L(LEXLN)))
"RTN","LEXDD4",94,0)
 . S LEXFN=$P(X," ",1)
"RTN","LEXDD4",95,0)
 . S LEXFN=$$UP^XLFSTR($E(LEXFN,1))_$$LOW^XLFSTR($E(LEXFN,2,$L(LEXFN)))
"RTN","LEXDD4",96,0)
 . S X=LEXFN_" "_LEXLN
"RTN","LEXDD4",97,0)
 I X'[",",X'[" " D  Q X
"RTN","LEXDD4",98,0)
 . S X=$$UP^XLFSTR($E(X,1))_$$LOW^XLFSTR($E(X,2,$L(X)))
"RTN","LEXDD4",99,0)
 Q X
"RTN","LEXDDS")
0^74^B2531478
"RTN","LEXDDS",1,0)
LEXDDS ;ISL/KER - Display Defaults - Single User ;04/21/2014
"RTN","LEXDDS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDS",3,0)
 ;               
"RTN","LEXDDS",4,0)
 ; Global Variables
"RTN","LEXDDS",5,0)
 ;    None
"RTN","LEXDDS",6,0)
 ;               
"RTN","LEXDDS",7,0)
 ; External References
"RTN","LEXDDS",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDDS",9,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXDDS",10,0)
 ;    ^%ZIS               ICR  10086
"RTN","LEXDDS",11,0)
 ;    ^%ZISC              ICR  10089
"RTN","LEXDDS",12,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXDDS",13,0)
 ;               
"RTN","LEXDDS",14,0)
 ; Entry:  D EN^LEXDDS              LEXAP is unknown
"RTN","LEXDDS",15,0)
 ;
"RTN","LEXDDS",16,0)
 ; Entry:  D EN1^LEXDDS(LEXAP)     LEXAP is known
"RTN","LEXDDS",17,0)
 ;
"RTN","LEXDDS",18,0)
 ; Print/Display User Defaults - Single User
"RTN","LEXDDS",19,0)
 ;
"RTN","LEXDDS",20,0)
 ; Where 
"RTN","LEXDDS",21,0)
 ;
"RTN","LEXDDS",22,0)
 ;      LEXAP     Pointer to file 757.2
"RTN","LEXDDS",23,0)
 ;
"RTN","LEXDDS",24,0)
 ;
"RTN","LEXDDS",25,0)
EN ; Display Single User Defaults, LEXAP is unknown
"RTN","LEXDDS",26,0)
 N LEXAP,X,Y S LEXAP=$$DFI^LEXDM4 Q:+LEXAP=0  W ! D EN1(LEXAP) Q
"RTN","LEXDDS",27,0)
EN1(LEXAP) ; Display Single User Defaults, LEXAP is unknown
"RTN","LEXDDS",28,0)
 W ! D DEV,HOME^%ZIS
"RTN","LEXDDS",29,0)
 K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE Q
"RTN","LEXDDS",30,0)
DEV ; Select a device
"RTN","LEXDDS",31,0)
 N %,%ZIS,IOP,ZTRTN,ZTSAVE,ZTDESC,ZTDTH,ZTIO,ZTSK
"RTN","LEXDDS",32,0)
 S ZTRTN="DISP^LEXDDSP",(ZTSAVE("LEXAP"),ZTSAVE("DUZ"))=""
"RTN","LEXDDS",33,0)
 S ZTDESC="LEXICON DEFAULTS FOR "_$$GET1^DIQ(200,+($G(DUZ)),.01)
"RTN","LEXDDS",34,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="PQ" D ^%ZIS Q:POP  S ZTIO=ION
"RTN","LEXDDS",35,0)
 I $D(IO("Q")) D QUE,^%ZISC Q
"RTN","LEXDDS",36,0)
 D NOQUE Q
"RTN","LEXDDS",37,0)
NOQUE ; Do not que task
"RTN","LEXDDS",38,0)
 W @IOF W:IOST["P-"&('$D(IO("S"))) !,"< Not queued, printing user defaults >",!
"RTN","LEXDDS",39,0)
 H 2 U:IOST["P-" IO D @ZTRTN,^%ZISC Q
"RTN","LEXDDS",40,0)
QUE ; Task queued to print user defaults
"RTN","LEXDDS",41,0)
 K IO("Q") D ^%ZTLOAD
"RTN","LEXDDS",42,0)
 W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! H 2 Q
"RTN","LEXDDSD")
0^125^B9566423
"RTN","LEXDDSD",1,0)
LEXDDSD ;ISL/KER - Display Defaults - Single User Disp ;04/21/2014
"RTN","LEXDDSD",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDSD",3,0)
 ;               
"RTN","LEXDDSD",4,0)
 ; Global Variables
"RTN","LEXDDSD",5,0)
 ;    ^TMP("LEXDIC")      SACC 2.3.2.5.1
"RTN","LEXDDSD",6,0)
 ;               
"RTN","LEXDDSD",7,0)
 ; External References
"RTN","LEXDDSD",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDDSD",9,0)
 ;               
"RTN","LEXDDSD",10,0)
LEXSHOW ; Translate LEXSHOW
"RTN","LEXDDSD",11,0)
 D:$G(^LEXT(757.2,LEXAP,200,DUZ,2))'=""
"RTN","LEXDDSD",12,0)
 . D DIS^LEXDDSS($G(^LEXT(757.2,LEXAP,200,DUZ,2.5)))
"RTN","LEXDDSD",13,0)
 . D CODES(^LEXT(757.2,LEXAP,200,DUZ,2))
"RTN","LEXDDSD",14,0)
 D:$G(^LEXT(757.2,LEXAP,200,DUZ,2))=""
"RTN","LEXDDSD",15,0)
 . D DIS^LEXDDSS("No default display defined")
"RTN","LEXDDSD",16,0)
 Q
"RTN","LEXDDSD",17,0)
DICS ; Save filter in array LEX(
"RTN","LEXDDSD",18,0)
 N LEXID,LEXIC,LEXEC,LEXCLA
"RTN","LEXDDSD",19,0)
 N LEXCTR,LEXXI,LEXXE,LEXCT
"RTN","LEXDDSD",20,0)
 D LB^LEXDDSS("      Include:                           Exclude:")
"RTN","LEXDDSD",21,0)
 S LEXID="",(LEXIC,LEXEC)=0
"RTN","LEXDDSD",22,0)
 I $D(^TMP("LEXDIC",$J,"INC","CLASS")) D
"RTN","LEXDDSD",23,0)
 . F  S LEXID=$O(^TMP("LEXDIC",$J,"INC","CLASS",LEXID)) Q:LEXID=""  D
"RTN","LEXDDSD",24,0)
 . . Q:'$D(^LEX(757.11,"B",LEXID))
"RTN","LEXDDSD",25,0)
 . . S LEXCLA=$O(^LEX(757.11,"B",LEXID,0)),LEXIC=LEXIC+1
"RTN","LEXDDSD",26,0)
 . . S ^TMP("LEXDIC",$J,"INCLUDE",LEXIC,$P(^LEX(757.11,LEXCLA,0),U,2))=""
"RTN","LEXDDSD",27,0)
 I $D(^TMP("LEXDIC",$J,"INC","TYPE")) D
"RTN","LEXDDSD",28,0)
 . S LEXID=0
"RTN","LEXDDSD",29,0)
 . F  S LEXID=$O(^TMP("LEXDIC",$J,"INC","TYPE",LEXID)) Q:+LEXID=0  D
"RTN","LEXDDSD",30,0)
 . . S LEXIC=LEXIC+1
"RTN","LEXDDSD",31,0)
 . . S ^TMP("LEXDIC",$J,"INCLUDE",LEXIC,$P(^LEX(757.12,LEXID,0),U,2))=""
"RTN","LEXDDSD",32,0)
 I $D(^TMP("LEXDIC",$J,"EXC","CLASS")) D
"RTN","LEXDDSD",33,0)
 . F  S LEXID=$O(^TMP("LEXDIC",$J,"EXC","CLASS",LEXID)) Q:LEXID=""  D
"RTN","LEXDDSD",34,0)
 . . Q:'$D(^LEX(757.11,"B",LEXID))
"RTN","LEXDDSD",35,0)
 . . S LEXCLA=$O(^LEX(757.11,"B",LEXID,0)),LEXEC=LEXEC+1
"RTN","LEXDDSD",36,0)
 . . S ^TMP("LEXDIC",$J,"EXCLUDE",LEXEC,$P(^LEX(757.11,LEXCLA,0),U,2))=""
"RTN","LEXDDSD",37,0)
 I $D(^TMP("LEXDIC",$J,"EXC","TYPE")) D
"RTN","LEXDDSD",38,0)
 . S LEXID=0
"RTN","LEXDDSD",39,0)
 . F  S LEXID=$O(^TMP("LEXDIC",$J,"EXC","TYPE",LEXID)) Q:+LEXID=0  D
"RTN","LEXDDSD",40,0)
 . . S LEXEC=LEXEC+1
"RTN","LEXDDSD",41,0)
 . . S ^TMP("LEXDIC",$J,"EXCLUDE",LEXEC,$P(^LEX(757.12,LEXID,0),U,2))=""
"RTN","LEXDDSD",42,0)
 S LEXCTR=$S(LEXIC>LEXEC:LEXIC,1:LEXEC)
"RTN","LEXDDSD",43,0)
 N LEXXI,LEXXE F LEXCT=1:1:LEXCTR D
"RTN","LEXDDSD",44,0)
 . S (LEXXI,LEXXE)=""
"RTN","LEXDDSD",45,0)
 . S:$D(^TMP("LEXDIC",$J,"INCLUDE",LEXCT)) LEXXI=$E($O(^TMP("LEXDIC",$J,"INCLUDE",LEXCT,"")),1,35)
"RTN","LEXDDSD",46,0)
 . S:$D(^TMP("LEXDIC",$J,"EXCLUDE",LEXCT)) LEXXE=$E($O(^TMP("LEXDIC",$J,"EXCLUDE",LEXCT,"")),1,35)
"RTN","LEXDDSD",47,0)
 . D FIE^LEXDDSS(LEXXI,LEXXE)
"RTN","LEXDDSD",48,0)
 K ^TMP("LEXDIC",$J) Q
"RTN","LEXDDSD",49,0)
 Q
"RTN","LEXDDSD",50,0)
CODES(LEXSTR) ; Save contents of LEXSHOW in local array LEX(
"RTN","LEXDDSD",51,0)
 N LEXCT F LEXCT=1:1:$L(LEXSTR,"/") D DISE^LEXDDSS(($P(LEXSTR,"/",LEXCT)))
"RTN","LEXDDSD",52,0)
 D:$L(LEXSTR,"/")>0 BL^LEXDDSS Q
"RTN","LEXDDSD",53,0)
DP ; Display single user defaults in array LEX( continuous
"RTN","LEXDDSD",54,0)
 N LEXC Q:+($G(LEX(0)))=0  F LEXC=1:1:LEX(0) W !,LEX(LEXC)
"RTN","LEXDDSD",55,0)
 K LEX
"RTN","LEXDDSD",56,0)
 Q
"RTN","LEXDDSD",57,0)
DSPLY ; Display Defaults contained in LEX(
"RTN","LEXDDSD",58,0)
 Q:'$D(LEX(0))  N LEXC,LEXLC,LEXI S LEXC="",LEXLC=0
"RTN","LEXDDSD",59,0)
 F LEXI=1:1:LEX(0) D  Q:$G(LEXC)[U
"RTN","LEXDDSD",60,0)
 . W !,LEX(LEXI) D LF Q:$G(LEXC)[U
"RTN","LEXDDSD",61,0)
 D:LEXC'[U&(IOST["C-") CONT W:IOST["P-" @IOF
"RTN","LEXDDSD",62,0)
 K LEX Q
"RTN","LEXDDSD",63,0)
LF ; Line Feed
"RTN","LEXDDSD",64,0)
 Q:LEXI=LEX(0)  S LEXLC=LEXLC+1
"RTN","LEXDDSD",65,0)
 I IOST["P-",LEXLC>(IOSL-7) D CONT
"RTN","LEXDDSD",66,0)
 I IOST'["P-",LEXLC>(IOSL-4) D CONT
"RTN","LEXDDSD",67,0)
 Q
"RTN","LEXDDSD",68,0)
CONT ; Page/Form Feed
"RTN","LEXDDSD",69,0)
 S LEXLC=0 I IOST["P-" W @IOF Q
"RTN","LEXDDSD",70,0)
 W ! S DIR("?")="  Additional information is available"
"RTN","LEXDDSD",71,0)
 S LEXC="" N X,Y S DIR(0)="E" D ^DIR
"RTN","LEXDDSD",72,0)
 S:$D(DTOUT)!(X[U) LEXC=U
"RTN","LEXDDSD",73,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT W ! Q
"RTN","LEXDDSP")
0^75^B15948891
"RTN","LEXDDSP",1,0)
LEXDDSP ;ISL/KER - Display Defaults - Single User Parse ;04/21/2014
"RTN","LEXDDSP",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDSP",3,0)
 ;               
"RTN","LEXDDSP",4,0)
 ; Global Variables
"RTN","LEXDDSP",5,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDDSP",6,0)
 ;    ^TMP("LEXDIC")      SACC 2.3.2.5.1
"RTN","LEXDDSP",7,0)
 ;               
"RTN","LEXDDSP",8,0)
 ; External References
"RTN","LEXDDSP",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDDSP",10,0)
 ;    $$LOW^XLFSTR        ICR  10104
"RTN","LEXDDSP",11,0)
 ;               
"RTN","LEXDDSP",12,0)
DISP ; Display single user defaults
"RTN","LEXDDSP",13,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXDDSP",14,0)
 G:+($G(LEXAP))=0 EXIT S LEXAP=+LEXAP G:'$L($G(^LEXT(757.2,LEXAP,0))) EXIT
"RTN","LEXDDSP",15,0)
 G:$P($G(^LEXT(757.2,LEXAP,5)),U,3)'=1 EXIT K LEX
"RTN","LEXDDSP",16,0)
 D NAME,VOC,DIS,FIL,CTX,DSPLY^LEXDDSD
"RTN","LEXDDSP",17,0)
EXIT ; Cleanup/quit
"RTN","LEXDDSP",18,0)
 K LEX,LEXV,LEXN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEX,^TMP("LEXDIC",$J) Q
"RTN","LEXDDSP",19,0)
 ;
"RTN","LEXDDSP",20,0)
NAME ; Name
"RTN","LEXDDSP",21,0)
 N LEXV,LEXN S LEXV=$$GET1^DIQ(200,+($G(DUZ)),.01),LEXN=""
"RTN","LEXDDSP",22,0)
 I LEXV["," S LEXN=$P(LEXV,",",2),LEXV=$P(LEXV,",",1)
"RTN","LEXDDSP",23,0)
 S:LEXN'="" LEXN=$$MIXED(LEXN) S:LEXV'="" LEXV=$$MIXED(LEXV)
"RTN","LEXDDSP",24,0)
 D NAME^LEXDDSS((LEXN_" "_LEXV)) Q
"RTN","LEXDDSP",25,0)
 ;
"RTN","LEXDDSP",26,0)
VOC ; Vocabulary
"RTN","LEXDDSP",27,0)
 N LEXV,LEXN S LEXV=$G(^LEXT(757.2,LEXAP,200,DUZ,3)) S:LEXV="" LEXV="WRD"
"RTN","LEXDDSP",28,0)
 S:$D(^LEXT(757.2,"AA",LEXV)) LEXN=$P(^LEXT(757.2,+($O(^LEXT(757.2,"AA",LEXV,0))),0),"^",1)
"RTN","LEXDDSP",29,0)
 D VOC^LEXDDSS(LEXN)
"RTN","LEXDDSP",30,0)
 Q
"RTN","LEXDDSP",31,0)
 ;
"RTN","LEXDDSP",32,0)
DIS ; Display Format
"RTN","LEXDDSP",33,0)
 D LEXSHOW^LEXDDSD Q
"RTN","LEXDDSP",34,0)
 ;
"RTN","LEXDDSP",35,0)
FIL ;     Filter
"RTN","LEXDDSP",36,0)
 N LEXV D DICS($G(^LEXT(757.2,LEXAP,200,DUZ,1)))
"RTN","LEXDDSP",37,0)
 K ^TMP("LEXDIC",$J) W:IOST["C-" @IOF S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXDDSP",38,0)
 Q
"RTN","LEXDDSP",39,0)
 ;
"RTN","LEXDDSP",40,0)
DICS(LEXV) ; Translate filter
"RTN","LEXDDSP",41,0)
 Q:'$D(LEXV)  N LEXS,LEXSHOW,LEXIN,LEXEX
"RTN","LEXDDSP",42,0)
 I $G(LEXV)="" D FIL^LEXDDSS("No search filter defined") Q
"RTN","LEXDDSP",43,0)
 S LEXS=LEXV D PARSE S:LEXV["SO^" LEXSHOW=LEXS
"RTN","LEXDDSP",44,0)
 D FIL^LEXDDSS($G(^LEXT(757.2,LEXAP,200,DUZ,1.5)))
"RTN","LEXDDSP",45,0)
 I $G(LEXS)=""!(LEXV="I 1") D
"RTN","LEXDDSP",46,0)
 . N LEXDA S LEXDA=0
"RTN","LEXDDSP",47,0)
 . F  S LEXDA=$O(^LEX(757.11,LEXDA)) Q:+LEXDA=0  D
"RTN","LEXDDSP",48,0)
 . . S LEXS=LEXS_"/"_$P(^LEX(757.11,LEXDA,0),U,1)
"RTN","LEXDDSP",49,0)
 . S:$E(LEXS,1)="/" LEXS=$E(LEXS,2,$L(LEXS)) S LEXS=LEXS_";"
"RTN","LEXDDSP",50,0)
 I LEXV["SC^"!(LEXV="I 1") D
"RTN","LEXDDSP",51,0)
 . S:$L(LEXS,";")=3 LEXSHOW=$P(LEXS,";",3)
"RTN","LEXDDSP",52,0)
 . D LB^LEXDDSS("    Look-up filter will: ")
"RTN","LEXDDSP",53,0)
 . D INCEXC,DICS^LEXDDSD
"RTN","LEXDDSP",54,0)
 I $G(LEXSHOW)'="" D
"RTN","LEXDDSP",55,0)
 . I LEXV["SC^" D BLB^LEXDDSS("    Look-up filter will also include terms linked to:")
"RTN","LEXDDSP",56,0)
 . I LEXV["SO^" D LB^LEXDDSS("    Look-up filter will include terms linked to: ")
"RTN","LEXDDSP",57,0)
 . D CODES^LEXDDSD(LEXSHOW)
"RTN","LEXDDSP",58,0)
 K ^TMP("LEXDIC",$J)
"RTN","LEXDDSP",59,0)
 Q
"RTN","LEXDDSP",60,0)
PARSE ; Parse DIS("S") string into INCLUDE;EXCLUDE;LEXSHOW
"RTN","LEXDDSP",61,0)
 S (LEXIN,LEXEX)="" S:LEXS["," LEXS=$P(LEXS,",",2)
"RTN","LEXDDSP",62,0)
 S LEXS=$TR(LEXS,"()",""),LEXS=$TR(LEXS,"""","") Q
"RTN","LEXDDSP",63,0)
INCEXC ; Include/Exclude Components
"RTN","LEXDDSP",64,0)
 S LEXIN=$P(LEXS,";",1),LEXEX=$P(LEXS,";",2) K ^TMP("LEXDIC",$J)
"RTN","LEXDDSP",65,0)
 I $D(LEXIN),LEXIN'="",LEXIN["/" D
"RTN","LEXDDSP",66,0)
 . N LEXI F LEXI=1:1:$L(LEXIN,"/") D
"RTN","LEXDDSP",67,0)
 . . I +($P(LEXIN,"/",LEXI))=0 D
"RTN","LEXDDSP",68,0)
 . . . S ^TMP("LEXDIC",$J,"INC","CLASS",$P(LEXIN,"/",LEXI))=""
"RTN","LEXDDSP",69,0)
 . . I +($P(LEXIN,"/",LEXI))'=0 D
"RTN","LEXDDSP",70,0)
 . . . S ^TMP("LEXDIC",$J,"INC","TYPE",$P(LEXIN,"/",LEXI))=""
"RTN","LEXDDSP",71,0)
 I $D(LEXIN),LEXIN'="",LEXIN'["/" D
"RTN","LEXDDSP",72,0)
 . I +LEXIN=0 S ^TMP("LEXDIC",$J,"INC","CLASS",LEXIN)="" Q
"RTN","LEXDDSP",73,0)
 . S ^TMP("LEXDIC",$J,"INC","TYPE",LEXIN)=""
"RTN","LEXDDSP",74,0)
 I $D(LEXEX),LEXEX'="",LEXEX["/" D
"RTN","LEXDDSP",75,0)
 . N LEXI F LEXI=1:1:$L(LEXEX,"/") D
"RTN","LEXDDSP",76,0)
 . . I +($P(LEXEX,"/",LEXI))=0 D
"RTN","LEXDDSP",77,0)
 . . . S ^TMP("LEXDIC",$J,"EXC","CLASS",$P(LEXEX,"/",LEXI))=""
"RTN","LEXDDSP",78,0)
 . . I +($P(LEXEX,"/",LEXI))'=0 D
"RTN","LEXDDSP",79,0)
 . . . S ^TMP("LEXDIC",$J,"EXC","TYPE",$P(LEXEX,"/",LEXI))=""
"RTN","LEXDDSP",80,0)
 I $D(LEXEX),LEXEX'="",LEXEX'["/" D
"RTN","LEXDDSP",81,0)
 . I +LEXEX=0 S ^TMP("LEXDIC",$J,"EXC","CLASS",LEXEX)="" Q
"RTN","LEXDDSP",82,0)
 . S ^TMP("LEXDIC",$J,"EXC","TYPE",LEXEX)=""
"RTN","LEXDDSP",83,0)
 S LEXN="" F  S LEXN=$O(^LEX(757.11,"B",LEXN)) Q:LEXN=""  D
"RTN","LEXDDSP",84,0)
 . Q:LEXIN[LEXN  N LEXTT,LEXTI S LEXTI=1,LEXT=0
"RTN","LEXDDSP",85,0)
 . F  S LEXT=$O(^LEX(757.12,"C",LEXN,LEXT)) Q:+LEXT=0!(+LEXTI=0)  D
"RTN","LEXDDSP",86,0)
 . . I LEXIN[LEXT S LEXTI=0
"RTN","LEXDDSP",87,0)
 . I LEXTI S ^TMP("LEXDIC",$J,"EXC","CLASS",LEXN)=""
"RTN","LEXDDSP",88,0)
 Q
"RTN","LEXDDSP",89,0)
 ;
"RTN","LEXDDSP",90,0)
CTX ; Shortcut Context
"RTN","LEXDDSP",91,0)
 N LEXV S LEXV=$G(^LEXT(757.2,LEXAP,200,DUZ,4.5)) I LEXV="" D
"RTN","LEXDDSP",92,0)
 . N LEXN S LEXN=+($G(^LEXT(757.2,LEXAP,200,DUZ,4.5)))
"RTN","LEXDDSP",93,0)
 . Q:+LEXN'>0  Q:'$D(^LEX(757.41,+LEXN))
"RTN","LEXDDSP",94,0)
 . S LEXV=$P(^LEX(757.41,+LEXN,0),U,1)
"RTN","LEXDDSP",95,0)
 D CON^LEXDDSS(LEXV)
"RTN","LEXDDSP",96,0)
 Q
"RTN","LEXDDSP",97,0)
MIXED(LEXV) ; Convert UPPERCASE to Mixed case
"RTN","LEXDDSP",98,0)
 S LEXV=$E(LEXV,1)_$$LOW^XLFSTR($E(LEXV,2,$L(LEXV)))
"RTN","LEXDDSP",99,0)
 Q LEXV
"RTN","LEXDDSS")
0^126^B3222865
"RTN","LEXDDSS",1,0)
LEXDDSS ;ISL/KER - Display Defaults - Single User Save ;04/21/2014
"RTN","LEXDDSS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDSS",3,0)
 ;               
"RTN","LEXDDSS",4,0)
 ; Global Variables
"RTN","LEXDDSS",5,0)
 ;    None
"RTN","LEXDDSS",6,0)
 ;               
"RTN","LEXDDSS",7,0)
 ; External References
"RTN","LEXDDSS",8,0)
 ;    None
"RTN","LEXDDSS",9,0)
 ;               
"RTN","LEXDDSS",10,0)
 ; Saves default elements into the local array LEX
"RTN","LEXDDSS",11,0)
 ;
"RTN","LEXDDSS",12,0)
BLB(LEXX) ; General blank - line - blank
"RTN","LEXDDSS",13,0)
 N LEXS S LEXS=LEXX D BL,TL,BL Q
"RTN","LEXDDSS",14,0)
LB(LEXX) ; General line - blank
"RTN","LEXDDSS",15,0)
 N LEXS S LEXS=LEXX D TL,BL Q
"RTN","LEXDDSS",16,0)
NAME(LEXX) ; Name
"RTN","LEXDDSS",17,0)
 N LEXS S LEXS="User defaults for:  "_LEXX D BL,TL,BL Q
"RTN","LEXDDSS",18,0)
VOC(LEXX) ; Vocabulary name
"RTN","LEXDDSS",19,0)
 N LEXS S LEXS="1.  Vocabulary:  "_LEXX D TL,BL Q
"RTN","LEXDDSS",20,0)
DIS(LEXX) ; Display name
"RTN","LEXDDSS",21,0)
 N LEXS S LEXS="2.  Display:  "_LEXX D TL,BL Q
"RTN","LEXDDSS",22,0)
DISE(LEXX) ; Display element
"RTN","LEXDDSS",23,0)
 N LEXS,LEXCTL,LEXN S LEXCTL=LEXX Q:'$L(LEXCTL)
"RTN","LEXDDSS",24,0)
 S LEXN=$O(^LEX(757.03,"B",LEXCTL,0))
"RTN","LEXDDSS",25,0)
 S:+LEXN'>0 LEXN=$O(^LEX(757.03,"ASAB",$E(LEXCTL,1,3),0))
"RTN","LEXDDSS",26,0)
 Q:LEXN'>0  S LEXN=$E($P($G(^LEX(757.03,LEXN,0)),"^",3),1,63)
"RTN","LEXDDSS",27,0)
 S LEXS="      "_LEXX_"  "_LEXN D TL
"RTN","LEXDDSS",28,0)
 Q
"RTN","LEXDDSS",29,0)
FIL(LEXX) ; Filter name
"RTN","LEXDDSS",30,0)
 N LEXS S LEXS="3.  Filter:  "_LEXX D TL,BL Q
"RTN","LEXDDSS",31,0)
FIE(LEXI,LEXE) ; Filter element (include/exclude)
"RTN","LEXDDSS",32,0)
 N LEXS,LEXSPC S LEXSPC="                                        "
"RTN","LEXDDSS",33,0)
 S LEXS="      "_$G(LEXI)
"RTN","LEXDDSS",34,0)
 I $L($G(LEXE)) S LEXS=LEXS_$E(LEXSPC,$L(LEXS),$L(LEXSPC))_LEXXE
"RTN","LEXDDSS",35,0)
 D TL Q
"RTN","LEXDDSS",36,0)
CON(LEXX) ; Shortcut Context name
"RTN","LEXDDSS",37,0)
 N LEXS S LEXS="4.  Shortcuts:  "_LEXX D TL,BL Q
"RTN","LEXDDSS",38,0)
TL Q:'$D(LEXS)  N LEXLN S LEXLN=+($G(LEX(0))),LEXLN=LEXLN+1,LEX(LEXLN)=LEXS,LEX(0)=LEXLN Q
"RTN","LEXDDSS",39,0)
BL N LEXLN S LEXLN=+($G(LEX(0))),LEXLN=LEXLN+1,LEX(LEXLN)="",LEX(0)=LEXLN Q
"RTN","LEXDDT1")
0^127^B5978859
"RTN","LEXDDT1",1,0)
LEXDDT1 ;ISL/KER - Display Defaults - Translate String ;04/21/2014
"RTN","LEXDDT1",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDT1",3,0)
 ;               
"RTN","LEXDDT1",4,0)
 ; Global Variables
"RTN","LEXDDT1",5,0)
 ;    None
"RTN","LEXDDT1",6,0)
 ;               
"RTN","LEXDDT1",7,0)
 ; External References
"RTN","LEXDDT1",8,0)
 ;    None
"RTN","LEXDDT1",9,0)
 ;               
"RTN","LEXDDT1",10,0)
EN ; String Type
"RTN","LEXDDT1",11,0)
 K LEX,LEXTSTR I '$D(LEXSTLN) S LEXSTLN=56
"RTN","LEXDDT1",12,0)
 I $L($G(LEXDICS)),'$L($G(LEXSHOW)),'$L($G(LEXSUB)) D DICS G EXIT
"RTN","LEXDDT1",13,0)
 I '$L($G(LEXDICS)),'$L($G(LEXSUB)),$L($G(LEXSHOW)) D SHOW G EXIT
"RTN","LEXDDT1",14,0)
 I $L($G(LEXSUB)),'$L($G(LEXSHOW)) D SUB
"RTN","LEXDDT1",15,0)
 G EXIT
"RTN","LEXDDT1",16,0)
 Q
"RTN","LEXDDT1",17,0)
DICS ;        Filter String              LEXDICS
"RTN","LEXDDT1",18,0)
 N LEXTRTN S LEXTRTN=""
"RTN","LEXDDT1",19,0)
 I LEXDICS="I 1" S LEX(0)=1,LEX=LEXDICS,LEX(1)="Unfiltered" Q
"RTN","LEXDDT1",20,0)
 S:LEXDICS["$$SC^" LEXTRTN="SC^LEXDDTF"
"RTN","LEXDDT1",21,0)
 S:LEXDICS["$$SO^" LEXTRTN="SO^LEXDDTF"
"RTN","LEXDDT1",22,0)
 Q:$G(LEXTRTN)=""
"RTN","LEXDDT1",23,0)
 D @LEXTRTN
"RTN","LEXDDT1",24,0)
 Q
"RTN","LEXDDT1",25,0)
SUB ;        Sub-Set String             LEXSUB
"RTN","LEXDDT1",26,0)
 K LEX S LEX=LEXSUB D ^LEXDDTV
"RTN","LEXDDT1",27,0)
 Q
"RTN","LEXDDT1",28,0)
SHOW ;        Display Codes String       LEXSHOW
"RTN","LEXDDT1",29,0)
 K LEX S LEX=LEXSHOW D ^LEXDDTD
"RTN","LEXDDT1",30,0)
 Q
"RTN","LEXDDT1",31,0)
CON ;        Shortcut Context            LEXCTX
"RTN","LEXDDT1",32,0)
 K LEX S LEX=LEXCTX D ^LEXDDTC
"RTN","LEXDDT1",33,0)
 Q
"RTN","LEXDDT1",34,0)
 ; Values
"RTN","LEXDDT1",35,0)
VV ;        Vocabulary Value
"RTN","LEXDDT1",36,0)
 Q:'$L($G(LEXSUB))  K LEX S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDT1",37,0)
 S LEX(0)=1,LEX(1)="Value:  "_LEXSUB
"RTN","LEXDDT1",38,0)
 Q
"RTN","LEXDDT1",39,0)
FV ;        Filter Value
"RTN","LEXDDT1",40,0)
 Q:'$L($G(LEXDICS))  K LEX  S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDT1",41,0)
 N LEXTSTR,LEXTCTR S LEXTCTR=0,LEXTSTR="Value:  "_LEXDICS
"RTN","LEXDDT1",42,0)
 F  Q:$L(LEXTSTR)'>LEXSTLN  D CONV
"RTN","LEXDDT1",43,0)
 I $L(LEXTSTR) S LEXTCTR=LEXTCTR+1 S LEX(LEXTCTR)=LEXTSTR,LEX(0)=LEXTCTR
"RTN","LEXDDT1",44,0)
 Q
"RTN","LEXDDT1",45,0)
DV ;        Display Value
"RTN","LEXDDT1",46,0)
 Q:'$L($G(LEXSHOW))  K LEX  S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDT1",47,0)
 N LEXTSTR,LEXTCTR S LEXTCTR=0,LEXTSTR="Value:  "_LEXSHOW
"RTN","LEXDDT1",48,0)
 F  Q:$L(LEXTSTR)'>LEXSTLN  D CONV
"RTN","LEXDDT1",49,0)
 I $L(LEXTSTR) S LEXTCTR=LEXTCTR+1 S LEX(LEXTCTR)=LEXTSTR,LEX(0)=LEXTCTR
"RTN","LEXDDT1",50,0)
 Q
"RTN","LEXDDT1",51,0)
CV ;        Vocabulary Value
"RTN","LEXDDT1",52,0)
 Q:'$L($G(LEXCTX))  K LEX S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDT1",53,0)
 S LEX(0)=1,LEX(1)="Value:  "_LEXCTX
"RTN","LEXDDT1",54,0)
 Q
"RTN","LEXDDT1",55,0)
CONV ;        Concatenate VALUE
"RTN","LEXDDT1",56,0)
 N LEXTPSN S LEXTPSN=LEXSTLN
"RTN","LEXDDT1",57,0)
 F LEXTPSN=LEXSTLN:-1:1 Q:$E(LEXTSTR,LEXTPSN)="/"!($E(LEXTSTR,LEXTPSN)=";")
"RTN","LEXDDT1",58,0)
 I $E(LEXTSTR,LEXTPSN)="/" D
"RTN","LEXDDT1",59,0)
 . S LEXTCTR=LEXTCTR+1 S LEX(LEXTCTR)=$E(LEXTSTR,1,LEXTPSN),LEX(0)=LEXTCTR
"RTN","LEXDDT1",60,0)
 . S LEXTSTR=$E(LEXTSTR,(LEXTPSN+1),$L(LEXTSTR))
"RTN","LEXDDT1",61,0)
 Q
"RTN","LEXDDT1",62,0)
EXIT ; Kill all but the array LEX and the Default Variable
"RTN","LEXDDT1",63,0)
 K LEXSTLN
"RTN","LEXDDT1",64,0)
 Q
"RTN","LEXDDT2")
0^128^B4823705
"RTN","LEXDDT2",1,0)
LEXDDT2 ;ISL/KER - Display Defaults - Concatenate Text ;04/21/2014
"RTN","LEXDDT2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDT2",3,0)
 ;               
"RTN","LEXDDT2",4,0)
 ; Global Variables
"RTN","LEXDDT2",5,0)
 ;    None
"RTN","LEXDDT2",6,0)
 ;               
"RTN","LEXDDT2",7,0)
 ; External References
"RTN","LEXDDT2",8,0)
 ;    None
"RTN","LEXDDT2",9,0)
 ;               
"RTN","LEXDDT2",10,0)
CONCAT ; Concatenation of Data Elements
"RTN","LEXDDT2",11,0)
 N LEXTI,LEXTL,LEXTP
"RTN","LEXDDT2",12,0)
PHRASE ; Get Phrase and Parse into Words
"RTN","LEXDDT2",13,0)
 I $D(LEX(LEXT,"H")) S LEXTP=LEX(LEXT,"H"),LEXTI=0 D WORD
"RTN","LEXDDT2",14,0)
 F LEXTI=1:1:LEX(LEXT,0) D
"RTN","LEXDDT2",15,0)
 . S LEXTP=LEX(LEXT,LEXTI)
"RTN","LEXDDT2",16,0)
 . S:LEXTP["/" LEXTP=$P(LEXTP,"/",1)_" or "_$P(LEXTP,"/",2),LEXTP=$$TRIM(LEXTP)
"RTN","LEXDDT2",17,0)
 . I LEXTI=LEX(LEXT,0),LEX(LEXT,0)>1 D
"RTN","LEXDDT2",18,0)
 . . S LEXTP="and "_LEXTP_"."
"RTN","LEXDDT2",19,0)
 . . S:$E(LEXTSTR,$L(LEXTSTR))["," LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDT2",20,0)
 . I LEXTI=LEX(LEXT,0),LEX(LEXT,0)'>1 D
"RTN","LEXDDT2",21,0)
 . . S LEXTP=LEXTP_"."
"RTN","LEXDDT2",22,0)
 . . S:$E(LEXTSTR,$L(LEXTSTR))["," LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDT2",23,0)
 . D WORD I $L(LEXTSTR)>LEXSTLN D SET S LEXTSTR=""
"RTN","LEXDDT2",24,0)
 I $D(LEX(LEXT,"T")) D
"RTN","LEXDDT2",25,0)
 . F  Q:$E(LEXTSTR,$L(LEXTSTR))'?1P  S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1)) Q:$E(LEXTSTR,$L(LEXTSTR))'?1P 
"RTN","LEXDDT2",26,0)
 . S LEXTP=LEX(LEXT,"T"),LEXTI=0 D WORD
"RTN","LEXDDT2",27,0)
 S LEXTSTR=$$TRIM(LEXTSTR)
"RTN","LEXDDT2",28,0)
 Q
"RTN","LEXDDT2",29,0)
WORD ; Concatenate Word
"RTN","LEXDDT2",30,0)
 N LEXTW,LEXTD F LEXTD=1:1:$L(LEXTP," ") D
"RTN","LEXDDT2",31,0)
 . S LEXTW=$P(LEXTP," ",LEXTD),LEXTW=$$TRIM(LEXTW)
"RTN","LEXDDT2",32,0)
 . I LEXTD=$L(LEXTP," "),LEXTI>0 S LEXTW=LEXTW_","
"RTN","LEXDDT2",33,0)
 . I ($L(LEXTSTR)+$L(LEXTW)+1)'>LEXSTLN D  Q
"RTN","LEXDDT2",34,0)
 . . S LEXTSTR=LEXTSTR_" "_LEXTW
"RTN","LEXDDT2",35,0)
 . I ($L(LEXTSTR)+$L(LEXTW)+1)>LEXSTLN D
"RTN","LEXDDT2",36,0)
 . . D SET S LEXTSTR=LEXTW
"RTN","LEXDDT2",37,0)
 Q
"RTN","LEXDDT2",38,0)
EOC ; End of Concatenation
"RTN","LEXDDT2",39,0)
 F  Q:$E(LEXTSTR,$L(LEXTSTR))'=","  S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1)) Q:$E(LEXTSTR,$L(LEXTSTR))'=","
"RTN","LEXDDT2",40,0)
 D SET
"RTN","LEXDDT2",41,0)
 Q
"RTN","LEXDDT2",42,0)
SET ; Set Array Node
"RTN","LEXDDT2",43,0)
 S LEXTCTR=LEXTCTR+1 S LEX(LEXTCTR)=$$TRIM(LEXTSTR),LEX(0)=LEXTCTR
"RTN","LEXDDT2",44,0)
 Q
"RTN","LEXDDT2",45,0)
TRIM(X) ; Remove Spaces
"RTN","LEXDDT2",46,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1)) Q:$E(X,$L(X))'=" "
"RTN","LEXDDT2",47,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X)) Q:$E(X,1)'=" "
"RTN","LEXDDT2",48,0)
 Q X
"RTN","LEXDDTC")
0^129^B1795542
"RTN","LEXDDTC",1,0)
LEXDDTC ;ISL/KER - Display Defaults - Shortcut Context ;04/21/2014
"RTN","LEXDDTC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDTC",3,0)
 ;               
"RTN","LEXDDTC",4,0)
 ; Global Variables
"RTN","LEXDDTC",5,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDDTC",6,0)
 ;               
"RTN","LEXDDTC",7,0)
 ; External References
"RTN","LEXDDTC",8,0)
 ;    None
"RTN","LEXDDTC",9,0)
 ;               
"RTN","LEXDDTC",10,0)
CON ; Shortcut Context
"RTN","LEXDDTC",11,0)
 ; Required LEXCTX
"RTN","LEXDDTC",12,0)
 N LEXTCTR,LEXTD,LEXTI,LEXTIC,LEXTL,LEXTN,LEXTSTR,LEXT,LEXTV
"RTN","LEXDDTC",13,0)
 K LEX Q:'$L($G(LEXCTX))  S LEXCTX=+LEXCTX
"RTN","LEXDDTC",14,0)
 Q:LEXCTX'>0  Q:'$D(^LEX(757.41,LEXCTX))
"RTN","LEXDDTC",15,0)
 S LEX=LEXCTX S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDTC",16,0)
 S LEXTI=0,(LEXTIC,LEXTN,LEXTV,LEXTD)="" D INT
"RTN","LEXDDTC",17,0)
 K:LEXSTLN=56 LEXSTLN Q
"RTN","LEXDDTC",18,0)
INT ; Interpret string
"RTN","LEXDDTC",19,0)
 ; LEXCTX
"RTN","LEXDDTC",20,0)
 S LEXTIC=1
"RTN","LEXDDTC",21,0)
 S LEXTN=LEXTN_$P($G(^LEX(757.41,+LEXCTX,0)),"^",1)
"RTN","LEXDDTC",22,0)
 S LEXTN=LEXTN_" shortcut set"
"RTN","LEXDDTC",23,0)
 ;     Build temporary phrase
"RTN","LEXDDTC",24,0)
 S LEX("V",1)="Use the "_LEXTN
"RTN","LEXDDTC",25,0)
 ;     Process phrase 
"RTN","LEXDDTC",26,0)
 S LEX("V",0)=1,LEXT="V",LEXTCTR=0,LEXTSTR=""
"RTN","LEXDDTC",27,0)
 D CONCAT^LEXDDT2 K LEX("V")
"RTN","LEXDDTC",28,0)
 I $E(LEXTSTR,$L(LEXTSTR))?1P S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTC",29,0)
 I $E(LEXTSTR,$L(LEXTSTR))?1P S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTC",30,0)
 D EOC^LEXDDT2
"RTN","LEXDDTC",31,0)
 Q
"RTN","LEXDDTD")
0^130^B2129676
"RTN","LEXDDTD",1,0)
LEXDDTD ;ISL/KER - Display Defaults - Display ;04/21/2014
"RTN","LEXDDTD",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDTD",3,0)
 ;               
"RTN","LEXDDTD",4,0)
 ; Global Variables
"RTN","LEXDDTD",5,0)
 ;    None
"RTN","LEXDDTD",6,0)
 ;               
"RTN","LEXDDTD",7,0)
 ; External References
"RTN","LEXDDTD",8,0)
 ;    None
"RTN","LEXDDTD",9,0)
 ;               
"RTN","LEXDDTD",10,0)
DSO ; Display Sources
"RTN","LEXDDTD",11,0)
 ; Required LEXSHOW
"RTN","LEXDDTD",12,0)
 K LEX N LEXTCTR,LEXTI,LEXTIC,LEXTSTR,LEXT
"RTN","LEXDDTD",13,0)
 S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDTD",14,0)
 D:'$L($G(LEXSHOW)) NONE D:$L($G(LEXSHOW)) SHOW
"RTN","LEXDDTD",15,0)
 Q
"RTN","LEXDDTD",16,0)
SHOW ; Show Classification Codes (sources)
"RTN","LEXDDTD",17,0)
 S LEX=LEXSHOW,LEXTCTR=0,LEX("L")=LEX
"RTN","LEXDDTD",18,0)
 S LEX("L","H")="Display codes from"
"RTN","LEXDDTD",19,0)
 S LEX("L","T")="coding system",LEXTCTR=0
"RTN","LEXDDTD",20,0)
 F LEXTI=1:1:$L(LEX("L"),"/") D
"RTN","LEXDDTD",21,0)
 . N LEXTIC S LEXTIC=$P(LEX("L"),"/",LEXTI) Q:LEXTIC="UND"
"RTN","LEXDDTD",22,0)
 . S LEXTCTR=LEXTCTR+1,LEX("L",LEXTCTR)=$$CN^LEXDDTF(LEXTIC)
"RTN","LEXDDTD",23,0)
 S:LEXTCTR>1 LEX("L","T")=LEX("L","T")_"s"
"RTN","LEXDDTD",24,0)
 S LEX("L","T")=LEX("L","T")_"."
"RTN","LEXDDTD",25,0)
 S LEX("L",0)=LEXTCTR
"RTN","LEXDDTD",26,0)
 S LEXTCTR=0,LEXTSTR="",LEXT="L"
"RTN","LEXDDTD",27,0)
 D:$G(LEX("L",0)) LNK^LEXDDTF
"RTN","LEXDDTD",28,0)
 D EOC^LEXDDT2
"RTN","LEXDDTD",29,0)
 Q
"RTN","LEXDDTD",30,0)
NONE ; LEXSHOW is Null (nothing to show)
"RTN","LEXDDTD",31,0)
 S LEX=LEXSHOW,LEX("L")=LEX,LEXTCTR=0,LEXTSTR="",LEXT="L"
"RTN","LEXDDTD",32,0)
 S LEX("L","H")="Do not display Classification Codes",LEX("L",0)=0
"RTN","LEXDDTD",33,0)
 D LNK^LEXDDTF,EOC^LEXDDT2
"RTN","LEXDDTD",34,0)
 Q
"RTN","LEXDDTF")
0^131^B14904532
"RTN","LEXDDTF",1,0)
LEXDDTF ;ISL/KER - Display Defaults - Filter ;04/21/2014
"RTN","LEXDDTF",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDTF",3,0)
 ;               
"RTN","LEXDDTF",4,0)
 ; Global Variables
"RTN","LEXDDTF",5,0)
 ;    None
"RTN","LEXDDTF",6,0)
 ;               
"RTN","LEXDDTF",7,0)
 ; External References
"RTN","LEXDDTF",8,0)
 ;    None
"RTN","LEXDDTF",9,0)
 ;               
"RTN","LEXDDTF",10,0)
SC ; Filter by Semantic Classifications
"RTN","LEXDDTF",11,0)
 ; Required LEXDICS in the format I $$SC^LEXU...
"RTN","LEXDDTF",12,0)
 N LEXTC,LEXTCTR,LEXTI,LEXTIC,LEXTIE,LEXTSTR
"RTN","LEXDDTF",13,0)
 Q:'$L($G(LEXDICS))  Q:LEXDICS'["$$SC^LEXU"
"RTN","LEXDDTF",14,0)
 S LEX=$TR($P($P(LEXDICS,"Y,",2),")",1),"""","")
"RTN","LEXDDTF",15,0)
 S LEXTCTR=0,LEX("I")=$P(LEX,";",1)
"RTN","LEXDDTF",16,0)
 S LEX("E")=$P(LEX,";",2),LEX("L")=$P(LEX,";",3)
"RTN","LEXDDTF",17,0)
 S LEX("I","H")="Include expressions which relate to",LEXTCTR=0
"RTN","LEXDDTF",18,0)
 N LEXTIC,LEXTIE,LEXTI F LEXTI=1:1:$L(LEX("I"),"/") D
"RTN","LEXDDTF",19,0)
 . S LEXTIC=$P(LEX("I"),"/",LEXTI) Q:LEXTIC="UNK"
"RTN","LEXDDTF",20,0)
 . S LEXTCTR=LEXTCTR+1,LEX("I",LEXTCTR)=$$SN(LEXTIC)
"RTN","LEXDDTF",21,0)
 S LEX("I",0)=LEXTCTR
"RTN","LEXDDTF",22,0)
 S LEX("E","H")="Exclude expressions which relate to",LEXTCTR=0
"RTN","LEXDDTF",23,0)
 F LEXTI=1:1:$L(LEX("E"),"/") D
"RTN","LEXDDTF",24,0)
 . S LEXTIC=$P(LEX("E"),"/",LEXTI) Q:LEXTIC="UNK"
"RTN","LEXDDTF",25,0)
 . S LEXTCTR=LEXTCTR+1,LEX("E",LEXTCTR)=$$SN(LEXTIC)
"RTN","LEXDDTF",26,0)
 S LEX("E",0)=LEXTCTR
"RTN","LEXDDTF",27,0)
 S LEX("L","H")="Also include expressions which are linked to"
"RTN","LEXDDTF",28,0)
 S LEX("L","T")="coding system",LEXTCTR=0
"RTN","LEXDDTF",29,0)
 F LEXTI=1:1:$L(LEX("L"),"/") D
"RTN","LEXDDTF",30,0)
 . S LEXTIC=$P(LEX("L"),"/",LEXTI) Q:LEXTIC="UND"  S LEXTCTR=LEXTCTR+1,LEX("L",LEXTCTR)=$$CN(LEXTIC)
"RTN","LEXDDTF",31,0)
 S:LEXTCTR>1 LEX("L","T")=LEX("L","T")_"s"
"RTN","LEXDDTF",32,0)
 S LEX("L","T")=LEX("L","T")_"."
"RTN","LEXDDTF",33,0)
 S LEX("L",0)=LEXTCTR
"RTN","LEXDDTF",34,0)
 S:'$D(LEXSTLN) LEXSTLN=56 K LEX("T") S LEXTCTR=0 N LEXT,LEXTSTR
"RTN","LEXDDTF",35,0)
 D:$G(LEX("I",0)) INC
"RTN","LEXDDTF",36,0)
 D:$G(LEX("E",0)) EXC
"RTN","LEXDDTF",37,0)
 D:$G(LEX("L",0)) LNK
"RTN","LEXDDTF",38,0)
 D EOC^LEXDDT2
"RTN","LEXDDTF",39,0)
 Q
"RTN","LEXDDTF",40,0)
SO ; Filter by Sources
"RTN","LEXDDTF",41,0)
 ; Required LEXDICS in the format I $$SO^LEXU...
"RTN","LEXDDTF",42,0)
 N LEXTC,LEXTCTR,LEXTI,LEXTIC,LEXTIE,LEXTSTR
"RTN","LEXDDTF",43,0)
 Q:'$L($G(LEXDICS))  Q:LEXDICS'["$$SO^LEXU"
"RTN","LEXDDTF",44,0)
 S LEX=$TR($P($P(LEXDICS,"Y,",2),")",1),"""","")
"RTN","LEXDDTF",45,0)
 S LEXTCTR=0,LEX("L")=LEX
"RTN","LEXDDTF",46,0)
 S LEX("L","H")="Include expressions which are linked to"
"RTN","LEXDDTF",47,0)
 S LEX("L","T")="coding system",LEXTCTR=0
"RTN","LEXDDTF",48,0)
 F LEXTI=1:1:$L(LEX("L"),"/") D
"RTN","LEXDDTF",49,0)
 . S LEXTIC=$P(LEX("L"),"/",LEXTI) Q:LEXTIC="UND"  S LEXTCTR=LEXTCTR+1,LEX("L",LEXTCTR)=$$CN(LEXTIC)
"RTN","LEXDDTF",50,0)
 S:LEXTCTR>1 LEX("L","T")=LEX("L","T")_"s"
"RTN","LEXDDTF",51,0)
 S LEX("L","T")=LEX("L","T")_"."
"RTN","LEXDDTF",52,0)
 S LEX("L",0)=LEXTCTR
"RTN","LEXDDTF",53,0)
 S:'$D(LEXSTLN) LEXSTLN=56 K LEX("T") S LEXTCTR=0 N LEXT,LEXTSTR
"RTN","LEXDDTF",54,0)
 S LEXTSTR="" D:$G(LEX("L",0)) LNK
"RTN","LEXDDTF",55,0)
 D EOC^LEXDDT2
"RTN","LEXDDTF",56,0)
 Q
"RTN","LEXDDTF",57,0)
INC ; Inclusion Data Elements
"RTN","LEXDDTF",58,0)
 S LEXTSTR="",LEXT="I",LEXTCTR=0 D CONCAT^LEXDDT2 K LEX("I")
"RTN","LEXDDTF",59,0)
 Q
"RTN","LEXDDTF",60,0)
EXC ; Exclusion Data Elements
"RTN","LEXDDTF",61,0)
 S LEXT="E",LEXTCTR=+($G(LEX(0)))
"RTN","LEXDDTF",62,0)
 I $D(LEXTSTR) D
"RTN","LEXDDTF",63,0)
 . S:$E(LEXTSTR,$L(LEXTSTR))["," LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTF",64,0)
 . I $L(LEXTSTR)'>(LEXSTLN+2) S LEXTSTR=LEXTSTR_" " Q
"RTN","LEXDDTF",65,0)
 . D SET^LEXDDT2
"RTN","LEXDDTF",66,0)
 . S LEXTSTR=""
"RTN","LEXDDTF",67,0)
 D CONCAT^LEXDDT2  K LEX("E")
"RTN","LEXDDTF",68,0)
 Q
"RTN","LEXDDTF",69,0)
LNK ; Linked Sources Data Elements
"RTN","LEXDDTF",70,0)
 S LEXT="L",LEXTCTR=+($G(LEX(0)))
"RTN","LEXDDTF",71,0)
 I $D(LEXTSTR) D
"RTN","LEXDDTF",72,0)
 . S:$E(LEXTSTR,$L(LEXTSTR))["," LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTF",73,0)
 . I $L(LEXTSTR)'>(LEXSTLN+2) S LEXTSTR=LEXTSTR_"  " Q
"RTN","LEXDDTF",74,0)
 . D SET^LEXDDT2
"RTN","LEXDDTF",75,0)
 . S LEXTSTR=""
"RTN","LEXDDTF",76,0)
 D CONCAT^LEXDDT2  K LEX("L")
"RTN","LEXDDTF",77,0)
 Q
"RTN","LEXDDTF",78,0)
SN(LEXSTR) ; Get Semantic Data Element Name
"RTN","LEXDDTF",79,0)
 N LEXTEMP S LEXTEMP=LEXSTR I LEXTEMP?3U D
"RTN","LEXDDTF",80,0)
 . S LEXSTR=$O(^LEX(757.11,"B",LEXTEMP,0)) S:+LEXSTR=0 LEXSTR=""
"RTN","LEXDDTF",81,0)
 . S:+LEXSTR>0 LEXSTR=$P($G(^LEX(757.11,+LEXSTR,0)),"^",2)
"RTN","LEXDDTF",82,0)
 I LEXTEMP?1N.N D
"RTN","LEXDDTF",83,0)
 . S LEXSTR=+LEXTEMP
"RTN","LEXDDTF",84,0)
 . S LEXSTR=$S($D(^LEX(757.12,LEXSTR,0)):$P($G(^LEX(757.12,LEXSTR,0)),"^",2),1:"")
"RTN","LEXDDTF",85,0)
 Q LEXSTR
"RTN","LEXDDTF",86,0)
CN(LEXSTR) ; Get Classification System Data Element Name
"RTN","LEXDDTF",87,0)
 N LEXTEMP,LEXTC S LEXTC=LEXSTR,LEXTEMP=$E(LEXSTR,1,2)_$C($A($E(LEXSTR,3))-1)_"~"
"RTN","LEXDDTF",88,0)
 S LEXSTR=""
"RTN","LEXDDTF",89,0)
 F  S LEXTEMP=$O(^LEX(757.03,"B",LEXTEMP)) Q:LEXTEMP=""!(LEXSTR'="")  D  Q:LEXTEMP=""!(LEXSTR'="")
"RTN","LEXDDTF",90,0)
 . I LEXTEMP[LEXTC S LEXSTR=$O(^LEX(757.03,"B",LEXTEMP,0))
"RTN","LEXDDTF",91,0)
 S LEXSTR=+LEXSTR S:LEXSTR=0 LEXSTR=""
"RTN","LEXDDTF",92,0)
 I +LEXSTR>0,$D(^LEX(757.03,+LEXSTR)) S LEXSTR=$P($G(^LEX(757.03,+LEXSTR,0)),"^",2)
"RTN","LEXDDTF",93,0)
 Q LEXSTR
"RTN","LEXDDTV")
0^132^B3758286
"RTN","LEXDDTV",1,0)
LEXDDTV ;ISL/KER - Display Defaults - Vocabulary ;04/21/2014
"RTN","LEXDDTV",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDDTV",3,0)
 ;               
"RTN","LEXDDTV",4,0)
 ; Global Variables
"RTN","LEXDDTV",5,0)
 ;    None
"RTN","LEXDDTV",6,0)
 ;               
"RTN","LEXDDTV",7,0)
 ; External References
"RTN","LEXDDTV",8,0)
 ;    None
"RTN","LEXDDTV",9,0)
 ;               
"RTN","LEXDDTV",10,0)
SUB ; Select between Logical and Physical Subsets
"RTN","LEXDDTV",11,0)
 ; Required LEXSUB  Optional LEXDICS
"RTN","LEXDDTV",12,0)
 N LEXTCTR,LEXTD,LEXTI,LEXTIC,LEXTL,LEXTN,LEXTSTR,LEXT,LEXTV
"RTN","LEXDDTV",13,0)
 K LEX S:'$L($G(LEXSUB)) LEX="WRD"
"RTN","LEXDDTV",14,0)
 S:$L($G(LEXSUB)) LEX=LEXSUB
"RTN","LEXDDTV",15,0)
 S:'$D(LEXSTLN) LEXSTLN=56
"RTN","LEXDDTV",16,0)
 S LEXTI=0,(LEXTIC,LEXTN,LEXTV,LEXTD)="" D INT
"RTN","LEXDDTV",17,0)
 K:LEXSTLN=56 LEXSTLN Q
"RTN","LEXDDTV",18,0)
INT ; Interpret string
"RTN","LEXDDTV",19,0)
 ;     LEXSUB is an Application Subset "AB"
"RTN","LEXDDTV",20,0)
 I $D(^LEXT(757.2,"AB",LEX)) D
"RTN","LEXDDTV",21,0)
 . S LEXTIC=$O(^LEXT(757.2,"AB",LEX,0))
"RTN","LEXDDTV",22,0)
 . S LEXTN=$P($G(^LEXT(757.2,+LEXTIC,0)),"^",1)
"RTN","LEXDDTV",23,0)
 . I +LEXTIC'=1 S LEXTN=LEXTN_" Subset"
"RTN","LEXDDTV",24,0)
 ;     LEXSUB is a Compiled Subset "AA"
"RTN","LEXDDTV",25,0)
 I $D(^LEXT(757.2,"AA",LEX)) D
"RTN","LEXDDTV",26,0)
 . S LEXTIC=$O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXDDTV",27,0)
 . S LEXTN=$P($G(^LEXT(757.2,+LEXTIC,0)),"^",1)
"RTN","LEXDDTV",28,0)
 . I +LEXTIC'=1 S LEXTN=LEXTN_" Subset"
"RTN","LEXDDTV",29,0)
 ;     View of a Subset - DIC("S") with LEXSUB
"RTN","LEXDDTV",30,0)
 I $L($G(LEXDICS)) D
"RTN","LEXDDTV",31,0)
 . S LEXTD=""
"RTN","LEXDDTV",32,0)
 . F  S LEXTD=$O(^LEXT(757.2,"AB",LEXTD)) Q:LEXTD=""!(LEXTV'="")  D
"RTN","LEXDDTV",33,0)
 . . S LEXTL=$O(^LEXT(757.2,"AB",LEXTD,0)) Q:+LEXTL'>0
"RTN","LEXDDTV",34,0)
 . . I $G(^LEXT(757.2,+LEXTL,6))=LEXDICS D
"RTN","LEXDDTV",35,0)
 . . . S LEXTV=$P($G(^LEXT(757.2,+LEXTL,0)),"^",1)
"RTN","LEXDDTV",36,0)
 ;     Build temporary phrase
"RTN","LEXDDTV",37,0)
 I LEXTV'="",LEXTN'="" S LEX("V",1)=LEXTV_" view of the "_LEXTN
"RTN","LEXDDTV",38,0)
 I LEXTV="",LEXTN'="" K LEX("V")
"RTN","LEXDDTV",39,0)
 ;     Process phrase 
"RTN","LEXDDTV",40,0)
 I $D(LEX("V",1)) D
"RTN","LEXDDTV",41,0)
 . S LEX("V",0)=1,LEXT="V",LEXTCTR=0,LEXTSTR=""
"RTN","LEXDDTV",42,0)
 . D CONCAT^LEXDDT2 K LEX("V")
"RTN","LEXDDTV",43,0)
 . I $E(LEXTSTR,$L(LEXTSTR))?1P S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTV",44,0)
 . I $E(LEXTSTR,$L(LEXTSTR))?1P S LEXTSTR=$E(LEXTSTR,1,($L(LEXTSTR)-1))
"RTN","LEXDDTV",45,0)
 . D EOC^LEXDDT2
"RTN","LEXDDTV",46,0)
 Q
"RTN","LEXDFL")
0^76^B5442174
"RTN","LEXDFL",1,0)
LEXDFL ;ISL/KER - Default Filter ;04/21/2014
"RTN","LEXDFL",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFL",3,0)
 ;               
"RTN","LEXDFL",4,0)
 ; Global Variables
"RTN","LEXDFL",5,0)
 ;    None
"RTN","LEXDFL",6,0)
 ;               
"RTN","LEXDFL",7,0)
 ; External References
"RTN","LEXDFL",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDFL",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDFL",10,0)
 ;               
"RTN","LEXDFL",11,0)
 ; Entry:  D EN^LEXDFL             LEXAP is unknown
"RTN","LEXDFL",12,0)
 ;
"RTN","LEXDFL",13,0)
 ; Entry:  D EN1^LEXDFL(LEXAP)    LEXAP is known
"RTN","LEXDFL",14,0)
 ;
"RTN","LEXDFL",15,0)
 ; Single user entry point - Saves Filter in file 757.2
"RTN","LEXDFL",16,0)
 ;
"RTN","LEXDFL",17,0)
 ; Where 
"RTN","LEXDFL",18,0)
 ;
"RTN","LEXDFL",19,0)
 ;      LEXAP     Pointer to file 757.2
"RTN","LEXDFL",20,0)
 ;      LEXUSER   DUZ of user
"RTN","LEXDFL",21,0)
 ;      LEXCA     Action (modify/delete)
"RTN","LEXDFL",22,0)
 ;      LEXCM     Method (predefined/create)
"RTN","LEXDFL",23,0)
 ;
"RTN","LEXDFL",24,0)
EN ; Single user, LEXAP is unknown
"RTN","LEXDFL",25,0)
 N LEXAP S LEXAP=$$DFI^LEXDM4 Q:+LEXAP=0  W ! D EN1(LEXAP) Q
"RTN","LEXDFL",26,0)
EN1(LEXAP) ; Single user, LEXAP is known
"RTN","LEXDFL",27,0)
 N LEXUSER,LEXX S LEXUSER=$G(DUZ) Q:+LEXUSER'>0  Q:'$L($$GET1^DIQ(200,+($G(DUZ)),.01))
"RTN","LEXDFL",28,0)
 ;
"RTN","LEXDFL",29,0)
 S LEXAP=$G(LEXAP) Q:LEXAP=""
"RTN","LEXDFL",30,0)
 I '$D(^LEXT(757.2,+LEXAP,0))&('$D(^LEXT(757.2,"B",LEXAP)))&('$D(^LEXT(757.2,"C",$$UP^XLFSTR(LEXAP))))&('$D(^LEXT(757.2,"AN",LEXAP))) Q
"RTN","LEXDFL",31,0)
 S:+LEXAP'>0 LEXAP=$$AP^LEXDFN2(LEXAP)
"RTN","LEXDFL",32,0)
 ;
"RTN","LEXDFL",33,0)
 Q:+($G(LEXAP))'>0  Q:+($P($G(^LEXT(757.2,+LEXAP,5)),"^",3))'>0
"RTN","LEXDFL",34,0)
 N LEXCA,LEXCM,LEXDVAL,LEXDNAM,LEXFLD,LEXFIL S LEXFIL=""
"RTN","LEXDFL",35,0)
 S LEXFLD=1,LEXCA=$$MOD^LEXDM(1) Q:LEXCA=0!(LEXCA="^^")
"RTN","LEXDFL",36,0)
 D:LEXCA="@" KILL Q:LEXCA="@"  W ! S LEXCM=$$MTH^LEXDM(1) Q:LEXCM["^"
"RTN","LEXDFL",37,0)
 S:LEXCM=1 LEXDVAL=$$EN^LEXDFLS
"RTN","LEXDFL",38,0)
 S:LEXCM=2 LEXDVAL=$$EN^LEXDFLC Q:LEXDVAL="^^"
"RTN","LEXDFL",39,0)
 S LEXDNAM=$P(LEXDVAL,"^",$L(LEXDVAL,"^")),LEXDVAL=$P(LEXDVAL,"^",1,($L(LEXDVAL,"^")-1))
"RTN","LEXDFL",40,0)
 D SET
"RTN","LEXDFL",41,0)
 Q
"RTN","LEXDFL",42,0)
MGR(LEXX) ; Multi-user (for Manager options)
"RTN","LEXDFL",43,0)
 ; Do not save filter, return value to manager option
"RTN","LEXDFL",44,0)
 N LEXCA,LEXCM,LEXDVAL S LEXX=""
"RTN","LEXDFL",45,0)
 S LEXCA=$$MOD^LEXDM(1) Q:LEXCA=0 "^" Q:(LEXCA="^^") "^^"
"RTN","LEXDFL",46,0)
 Q:LEXCA="@" "@^Delete filter"
"RTN","LEXDFL",47,0)
 W ! S LEXCM=$$MTH^LEXDM(1) S:LEXCM[U LEXX=U S:LEXCM["^^" LEXX="^^"
"RTN","LEXDFL",48,0)
 Q:LEXX["^" LEXX
"RTN","LEXDFL",49,0)
 S:LEXCM=1 LEXDVAL=$$EN^LEXDFLS S:LEXCM=2 LEXDVAL=$$EN^LEXDFLC
"RTN","LEXDFL",50,0)
 Q:LEXDVAL="^^" "^^"
"RTN","LEXDFL",51,0)
 S LEXX=LEXDVAL Q LEXX
"RTN","LEXDFL",52,0)
SET ; Set default filter
"RTN","LEXDFL",53,0)
 D SET^LEXDSV(LEXUSER,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) Q
"RTN","LEXDFL",54,0)
KILL ; Kill default filter
"RTN","LEXDFL",55,0)
 D SET^LEXDSV(LEXUSER,LEXAP,"@","Delete",LEXFLD) Q
"RTN","LEXDFLC")
0^133^B911217
"RTN","LEXDFLC",1,0)
LEXDFLC ;ISL/KER - Default Filter - Create ;04/21/2014
"RTN","LEXDFLC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFLC",3,0)
 ;               
"RTN","LEXDFLC",4,0)
 ; Global Variables
"RTN","LEXDFLC",5,0)
 ;    None
"RTN","LEXDFLC",6,0)
 ;               
"RTN","LEXDFLC",7,0)
 ; External References
"RTN","LEXDFLC",8,0)
 ;    None
"RTN","LEXDFLC",9,0)
 ;               
"RTN","LEXDFLC",10,0)
 ; Entry:  S X=$$EN^LEXDFLC
"RTN","LEXDFLC",11,0)
 ;
"RTN","LEXDFLC",12,0)
 ; Function returns a multi piece string
"RTN","LEXDFLC",13,0)
 ;  
"RTN","LEXDFLC",14,0)
 ; $Piece  1-X
"RTN","LEXDFLC",15,0)
 ;
"RTN","LEXDFLC",16,0)
 ;         Executable MUMPS code to be used as
"RTN","LEXDFLC",17,0)
 ;         a filter (screen DIC("S") during
"RTN","LEXDFLC",18,0)
 ;         searches
"RTN","LEXDFLC",19,0)
 ;  
"RTN","LEXDFLC",20,0)
 ; $Piece  Last piece
"RTN","LEXDFLC",21,0)
 ;
"RTN","LEXDFLC",22,0)
 ;         Name of the filter selected i.e., 
"RTN","LEXDFLC",23,0)
 ;         "Problem List"  This will be null only
"RTN","LEXDFLC",24,0)
 ;         when user input is "^^"
"RTN","LEXDFLC",25,0)
 ;
"RTN","LEXDFLC",26,0)
EN(LEXX) ; Entry point S X=$$EN^LEXDFLC
"RTN","LEXDFLC",27,0)
 N LEXFLT S LEXFLT=$$EN^LEXDFLT,LEXX=""
"RTN","LEXDFLC",28,0)
 Q:LEXFLT["^^" "^^" Q:LEXFLT["^" "^"
"RTN","LEXDFLC",29,0)
 Q:LEXFLT=0 "^No filter created"
"RTN","LEXDFLC",30,0)
 S:LEXFLT=1 LEXX=$$EN^LEXDFST
"RTN","LEXDFLC",31,0)
 S:LEXFLT=2 LEXX=$$EN^LEXDFSO
"RTN","LEXDFLC",32,0)
 S:LEXFLT=3 LEXX=$$EN^LEXDFSS
"RTN","LEXDFLC",33,0)
 Q:LEXX["^^" "^No filter created"
"RTN","LEXDFLC",34,0)
 Q:LEXX="" "I 1^User Defined"
"RTN","LEXDFLC",35,0)
 Q LEXX
"RTN","LEXDFLS")
0^134^B15732119
"RTN","LEXDFLS",1,0)
LEXDFLS ;ISL/KER - Default Filter - Select ;04/21/2014
"RTN","LEXDFLS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFLS",3,0)
 ;               
"RTN","LEXDFLS",4,0)
 ; Global Variables
"RTN","LEXDFLS",5,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDFLS",6,0)
 ;               
"RTN","LEXDFLS",7,0)
 ; External References
"RTN","LEXDFLS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFLS",9,0)
 ;               
"RTN","LEXDFLS",10,0)
 ; Special Look-up in file 757.3 Screens
"RTN","LEXDFLS",11,0)
 ; Entry:  S X=$$EN^LEXDFLS
"RTN","LEXDFLS",12,0)
 ;
"RTN","LEXDFLS",13,0)
 ; Function returns a multi piece string
"RTN","LEXDFLS",14,0)
 ;  
"RTN","LEXDFLS",15,0)
 ; $Piece  1-X
"RTN","LEXDFLS",16,0)
 ;
"RTN","LEXDFLS",17,0)
 ;         Executable MUMPS code to be used as
"RTN","LEXDFLS",18,0)
 ;         a filter (screen DIC("S") during
"RTN","LEXDFLS",19,0)
 ;         searches
"RTN","LEXDFLS",20,0)
 ;  
"RTN","LEXDFLS",21,0)
 ; $Piece  Last piece
"RTN","LEXDFLS",22,0)
 ;
"RTN","LEXDFLS",23,0)
 ;         Name of the filter selected i.e., 
"RTN","LEXDFLS",24,0)
 ;         "Problem List"  This will be null only
"RTN","LEXDFLS",25,0)
 ;         when user input is "^^"
"RTN","LEXDFLS",26,0)
 ;   
"RTN","LEXDFLS",27,0)
 ; LEX    Array containing pointers to 757.3
"RTN","LEXDFLS",28,0)
 ; LEXA   Users answer to selection
"RTN","LEXDFLS",29,0)
 ; LEXC   Counter
"RTN","LEXDFLS",30,0)
 ; LEXD   Display
"RTN","LEXDFLS",31,0)
 ; LEXF   Re-display starting from #LEXF
"RTN","LEXDFLS",32,0)
 ; LEXI   Incremental Counter
"RTN","LEXDFLS",33,0)
 ; LEXL   Last entry displayed
"RTN","LEXDFLS",34,0)
 ; LEXLN  Line counter
"RTN","LEXDFLS",35,0)
 ; LEXR   Internal Entry Number (Record) in #757.3
"RTN","LEXDFLS",36,0)
 ; LEXS   Selection
"RTN","LEXDFLS",37,0)
 ; LEXT   Re-display up through #LEXT
"RTN","LEXDFLS",38,0)
 ;  
"RTN","LEXDFLS",39,0)
EN(LEXX) ; Select a predefined filter string
"RTN","LEXDFLS",40,0)
 N X,Y,LEX,LEXC,LEXL,LEXR,LEXA,LEXD D TOT
"RTN","LEXDFLS",41,0)
 S LEXD="",(LEXA,LEXX,LEXC,LEXR)=0
"RTN","LEXDFLS",42,0)
 F  S LEXD=$O(^LEX(757.3,"B",LEXD)) Q:LEXD=""!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDFLS",43,0)
 . S LEXR=0
"RTN","LEXDFLS",44,0)
 . F  S LEXR=$O(^LEX(757.3,"B",LEXD,LEXR)) Q:+LEXR=0!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDFLS",45,0)
 . . Q:$P($G(^LEX(757.3,LEXR,0)),"^",2)'="U"
"RTN","LEXDFLS",46,0)
 . . S LEXC=LEXC+1,LEXL=LEXC
"RTN","LEXDFLS",47,0)
 . . S LEX(LEXC)=LEXR,LEX(0)=LEXC
"RTN","LEXDFLS",48,0)
 . . D W(LEXC,LEXR)
"RTN","LEXDFLS",49,0)
 . . D ASK
"RTN","LEXDFLS",50,0)
 D ASK S LEXX=+LEXX K LEX
"RTN","LEXDFLS",51,0)
 I +LEXX>0 S LEXX=$G(^LEX(757.3,+LEXX,1))_"^"_$P($G(^LEX(757.3,+LEXX,0)),"^",1) Q LEXX
"RTN","LEXDFLS",52,0)
 S:LEXA'["^^" LEXX="^No filter selected" S:LEXA["^^" LEXX="^"
"RTN","LEXDFLS",53,0)
 Q LEXX
"RTN","LEXDFLS",54,0)
ASK ;
"RTN","LEXDFLS",55,0)
 ;I LEXC#5=0,+LEXX=0 S LEXA=$$SEL S:+LEXA>0&(+LEXA<(LEXC+1)) LEXX=+LEXA
"RTN","LEXDFLS",56,0)
 ;I +LEXX=0,LEXA'["^",LEXC#5'=0 S LEXA=$$SEL S:+LEXA>0&(+LEXA<(LEXC+1)) LEXX=+LEXA
"RTN","LEXDFLS",57,0)
 Q:+LEXX>0  Q:LEXA["^"  Q:+LEXR>0&(LEXC#5'=0)
"RTN","LEXDFLS",58,0)
 Q:+LEXR=0&(LEXC#5=0)
"RTN","LEXDFLS",59,0)
 D SEL Q:+LEXA'>0  Q:LEXA>LEXC  S LEXX=$G(LEX(+LEXA))
"RTN","LEXDFLS",60,0)
 Q
"RTN","LEXDFLS",61,0)
SEL ; Select from list
"RTN","LEXDFLS",62,0)
 W ! N X,Y,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDFLS",63,0)
 S DIR(0)="NAO^1:"_LEXC
"RTN","LEXDFLS",64,0)
 S DIR("A")="Select FILTER 1-"_LEXC_":  "
"RTN","LEXDFLS",65,0)
 S (DIR("?"),DIR("??"))="^D SH^LEXDFLS"
"RTN","LEXDFLS",66,0)
 D ^DIR S LEXA=Y
"RTN","LEXDFLS",67,0)
 Q
"RTN","LEXDFLS",68,0)
UOUT ; Up Arrow detected
"RTN","LEXDFLS",69,0)
 S:LEXA="^^" LEXX="^"
"RTN","LEXDFLS",70,0)
 S:LEXA="^" LEXX="^No filter selected"
"RTN","LEXDFLS",71,0)
 Q
"RTN","LEXDFLS",72,0)
VAL ; No Un Arrow (value)
"RTN","LEXDFLS",73,0)
 I +LEXX>0 D  Q
"RTN","LEXDFLS",74,0)
 . I $D(^LEX(757.41,+LEXX)) D  Q
"RTN","LEXDFLS",75,0)
 . . S LEXX=LEXX_"^"_$P($G(^LEX(757.41,+LEXX,0)),"^",1)
"RTN","LEXDFLS",76,0)
 . S LEXX="^No filter selected"
"RTN","LEXDFLS",77,0)
 S LEXX="^No filter selected"
"RTN","LEXDFLS",78,0)
 Q
"RTN","LEXDFLS",79,0)
SH ; Show help
"RTN","LEXDFLS",80,0)
 N LEXR S LEXR=+($E(X,2,$L(X))) I $E(X,1)="?",LEXR>0,LEXR<(LEX(0)+1) D
"RTN","LEXDFLS",81,0)
 . S LEXR=LEX(LEXR) D:'$D(^LEX(757.3,LEXR,2,1)) NODES,STD Q:'$D(^LEX(757.3,LEXR,2,1))  D DES
"RTN","LEXDFLS",82,0)
 D:$E(X,1)="?"&(LEXR<1!(LEXR>LEX(0))) STD D:$E(X,1)'="?" STD D RD
"RTN","LEXDFLS",83,0)
 Q
"RTN","LEXDFLS",84,0)
STD ; Standard Help
"RTN","LEXDFLS",85,0)
 W !!,"Enter 1-",LEXC," to select a filter, or ""?"" for help, or ""?#"" for descriptive"
"RTN","LEXDFLS",86,0)
 W !,"help on an entry flagged with an ""*"", or ""^"" to exit or <Return> for more."
"RTN","LEXDFLS",87,0)
 Q
"RTN","LEXDFLS",88,0)
DES ; Description Help
"RTN","LEXDFLS",89,0)
 N LEXLN,LEXI S (LEXLN,LEXI)=0 W !!,?2,$P(^LEX(757.3,LEXR,0),"^",1),!
"RTN","LEXDFLS",90,0)
 F  S LEXI=$O(^LEX(757.3,LEXR,2,LEXI)) Q:+LEXI=0  D
"RTN","LEXDFLS",91,0)
 . W !,?4,^LEX(757.3,LEXR,2,LEXI,0) S LEXLN=LEXLN+1
"RTN","LEXDFLS",92,0)
 D:LEXLN>4 EOP W ! Q
"RTN","LEXDFLS",93,0)
NODES ; No Description Help Available
"RTN","LEXDFLS",94,0)
 W !!,?2,$P(^LEX(757.3,LEXR,0),"^",1)," does not have a description",! Q
"RTN","LEXDFLS",95,0)
RD ; Re-Display List
"RTN","LEXDFLS",96,0)
 N LEXF,LEXT S LEXT=+($G(LEXL)),LEXF=(+(LEXT#5)-1)
"RTN","LEXDFLS",97,0)
 S:LEXF<0 LEXF=4 S LEXF=LEXT-LEXF S LEXF=LEXF-1
"RTN","LEXDFLS",98,0)
 F  S LEXF=$O(LEX(LEXF)) Q:+LEXF=0!(LEXF'<(LEXT+1))  D
"RTN","LEXDFLS",99,0)
 . W:LEXF=1 ! D W(LEXF,LEX(LEXF))
"RTN","LEXDFLS",100,0)
 Q
"RTN","LEXDFLS",101,0)
TOT ; Total Filters
"RTN","LEXDFLS",102,0)
 N LEXD,LEXR,LEXC S LEXD="",LEXC=0
"RTN","LEXDFLS",103,0)
 F  S LEXD=$O(^LEX(757.3,"B",LEXD)) Q:LEXD=""  S LEXR=0 D
"RTN","LEXDFLS",104,0)
 . F  S LEXR=$O(^LEX(757.3,"B",LEXD,LEXR)) Q:+LEXR=0  D
"RTN","LEXDFLS",105,0)
 . . Q:$P($G(^LEX(757.3,LEXR,0)),"^",2)'="U"
"RTN","LEXDFLS",106,0)
 . . S LEXC=LEXC+1
"RTN","LEXDFLS",107,0)
 W !!,LEXC," Filters found",! Q
"RTN","LEXDFLS",108,0)
W(LEXC,LEXR) ; Write entry
"RTN","LEXDFLS",109,0)
 W !,$J(LEXC,4),".  ",$P(^LEX(757.3,LEXR,0),"^",1)
"RTN","LEXDFLS",110,0)
 W $S($D(^LEX(757.3,LEXR,2,1)):"  *",1:"") Q
"RTN","LEXDFLS",111,0)
EOP ; End of Page 
"RTN","LEXDFLS",112,0)
 W ! N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT S DIR(0)="E" D ^DIR S:X[U LEXA="^" W ! Q
"RTN","LEXDFLT")
0^135^B2257084
"RTN","LEXDFLT",1,0)
LEXDFLT ;ISL-KER - Default Filter - Filter Type ;04/21/2014
"RTN","LEXDFLT",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFLT",3,0)
 ;               
"RTN","LEXDFLT",4,0)
 ; Global Variables
"RTN","LEXDFLT",5,0)
 ;    None
"RTN","LEXDFLT",6,0)
 ;               
"RTN","LEXDFLT",7,0)
 ; External References
"RTN","LEXDFLT",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFLT",9,0)
 ;               
"RTN","LEXDFLT",10,0)
 ; Entry:  S X=$$EN^LEXDFLT
"RTN","LEXDFLT",11,0)
 ;
"RTN","LEXDFLT",12,0)
 ; Function returns
"RTN","LEXDFLT",13,0)
 ;
"RTN","LEXDFLT",14,0)
 ;     "^"     Up-arrow
"RTN","LEXDFLT",15,0)
 ;     "^^"    Double up-arrow
"RTN","LEXDFLT",16,0)
 ;      0      None
"RTN","LEXDFLT",17,0)
 ;      1      Filter by Semantic Types
"RTN","LEXDFLT",18,0)
 ;      2      Filter by Classification Codes
"RTN","LEXDFLT",19,0)
 ;      3      Filter by Semantic Types and Classification Codes
"RTN","LEXDFLT",20,0)
 ;
"RTN","LEXDFLT",21,0)
EN(LEXX) ;
"RTN","LEXDFLT",22,0)
 ;
"RTN","LEXDFLT",23,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDFLT",24,0)
 S DIR("A",1)="Filter based on:"
"RTN","LEXDFLT",25,0)
 S DIR("A",3)="   1.  Semantic Types"
"RTN","LEXDFLT",26,0)
 S DIR("A",4)="   2.  Classification Coding Systems"
"RTN","LEXDFLT",27,0)
 S DIR("A",5)="   3.  Semantic Types and Classification Codes"
"RTN","LEXDFLT",28,0)
 S (DIR("A",2),DIR("A",6))="  "
"RTN","LEXDFLT",29,0)
 S DIR(0)="SAO^1:Filter on Semantic Types;2:Filter on Classification Codes;3:Filter on both Semantic Types and Classification Codes"
"RTN","LEXDFLT",30,0)
 S DIR("A")="Select:  "
"RTN","LEXDFLT",31,0)
 D ^DIR S LEXX=+X S:Y["^" LEXX=Y Q LEXX
"RTN","LEXDFN")
0^136^B17432462
"RTN","LEXDFN",1,0)
LEXDFN ;ISL/KER - Default Names ;04/21/2014
"RTN","LEXDFN",2,0)
 ;;2.0;LEXICON UTILITY;**6,80**;Sep 23, 1996;Build 1
"RTN","LEXDFN",3,0)
 ;               
"RTN","LEXDFN",4,0)
 ; Global Variables
"RTN","LEXDFN",5,0)
 ;    ^LEX(757.31)        N/A
"RTN","LEXDFN",6,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDFN",7,0)
 ;               
"RTN","LEXDFN",8,0)
 ; External References
"RTN","LEXDFN",9,0)
 ;    $$LOW^XLFSTR        ICR  10103
"RTN","LEXDFN",10,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDFN",11,0)
 ;               
"RTN","LEXDFN",12,0)
APPN(X) ; Application Name
"RTN","LEXDFN",13,0)
 N LEXT,LEXA S (LEXA,LEXT)="",X=$G(X)
"RTN","LEXDFN",14,0)
 I +X>0,$D(^LEXT(757.2,+X,0)) D
"RTN","LEXDFN",15,0)
 . S LEXA=$P($G(^LEXT(757.2,+X,5)),"^",4)
"RTN","LEXDFN",16,0)
 . Q:LEXA=""  Q:'$D(^LEXT(757.2,"APPS",LEXA))
"RTN","LEXDFN",17,0)
 . S LEXT=$P($G(^LEXT(757.2,+X,0)),"^",1)
"RTN","LEXDFN",18,0)
 S:X'=""&(LEXT="") X="Unknown Application" S:LEXT'="" X=LEXT Q X
"RTN","LEXDFN",19,0)
DISN(X) ; Display Name
"RTN","LEXDFN",20,0)
 N LEXT S LEXT="" S X=$G(X) I X'="" D
"RTN","LEXDFN",21,0)
 . N LEXO,LEXC,LEXR S LEXC=$E(X,1,63),LEXO=$E(LEXC,1,($L(LEXC)-1))_$C($A($E(LEXC,$L(LEXC)))-1)_"~"
"RTN","LEXDFN",22,0)
 . F  S LEXO=$O(^LEX(757.31,"ADSP",LEXO)) Q:LEXO=""!(LEXO'[LEXC)  D  Q:LEXT'=""
"RTN","LEXDFN",23,0)
 . . S LEXR=0 F  S LEXR=$O(^LEX(757.31,"ADSP",LEXO,LEXR)) Q:+LEXR=0  D  Q:LEXT'=""
"RTN","LEXDFN",24,0)
 . . . I $G(^LEX(757.31,LEXR,1))=X S LEXT=$P($G(^LEX(757.31,LEXR,0)),"^",1)
"RTN","LEXDFN",25,0)
 S:X'=""&(LEXT="") X="User Defined Display" S:LEXT'="" X=LEXT Q X
"RTN","LEXDFN",26,0)
FILN(X) ; Filter Name
"RTN","LEXDFN",27,0)
 N LEXT S LEXT="" S X=$G(X) I X'="" D
"RTN","LEXDFN",28,0)
 . N LEXO,LEXC,LEXR S LEXC=$E(X,1,63)
"RTN","LEXDFN",29,0)
 . S LEXO=$E(LEXC,1,($L(LEXC)-1))_$C($A($E(LEXC,$L(LEXC)))-1)_"~"
"RTN","LEXDFN",30,0)
 . F  S LEXO=$O(^LEX(757.3,"AS",LEXO)) Q:LEXT'=""!(LEXO'[LEXC)  D
"RTN","LEXDFN",31,0)
 . . S LEXR=0 F  S LEXR=$O(^LEX(757.3,"AS",LEXO,LEXR)) Q:+LEXR=0!(LEXT'="")  D  Q:LEXT'=""
"RTN","LEXDFN",32,0)
 . . . S:$G(^LEX(757.3,+LEXR,1))=X LEXT=$P($G(^LEX(757.3,+LEXR,0)),"^",1)
"RTN","LEXDFN",33,0)
 S:X'=""&(LEXT="") X="User Defined Filter" S:LEXT'="" X=LEXT Q X
"RTN","LEXDFN",34,0)
GBLN(X) ; Global Name
"RTN","LEXDFN",35,0)
 S X=$G(X) Q:X="" "Unknown Global" Q:X'["^" "Unknown Global"
"RTN","LEXDFN",36,0)
 Q:X'["(" "Unknown Global" N LEXT S LEXT=$G(@(X_"0)"))
"RTN","LEXDFN",37,0)
 S LEXT=$P(LEXT,"^",1) Q:LEXT="" "Unknown Global"
"RTN","LEXDFN",38,0)
 N LEXS,LEXK,LEXI S LEXS=""
"RTN","LEXDFN",39,0)
 F LEXI=1:1:$L(LEXT," ") D
"RTN","LEXDFN",40,0)
 . S LEXK=$$UP^XLFSTR($E($P(LEXT," ",LEXI),1))_$$LOW^XLFSTR($E($P(LEXT," ",LEXI),2,$L($P(LEXT," ",LEXI))))
"RTN","LEXDFN",41,0)
 . S LEXS=LEXS_" "_LEXK
"RTN","LEXDFN",42,0)
 S:$E(LEXS,1)=" " LEXS=$E(LEXS,2,$L(LEXS))
"RTN","LEXDFN",43,0)
 S LEXT=LEXS Q:LEXT="" "Unknown Global"
"RTN","LEXDFN",44,0)
 S X=LEXT_" Global" Q X
"RTN","LEXDFN",45,0)
IDXN(X) ;
"RTN","LEXDFN",46,0)
 S X=$G(X) Q:X="" "Unknown Index" N LEXT,LEXA S LEXT="",LEXA=$E(X,2,$L(X))
"RTN","LEXDFN",47,0)
 Q:LEXA="" "Unknown Index" Q:'$D(^LEXT(757.2,"AA",LEXA)) "Unknown Index"
"RTN","LEXDFN",48,0)
 N LEXR S LEXR=$O(^LEXT(757.2,"AA",LEXA,0))
"RTN","LEXDFN",49,0)
 Q:+LEXR=0 "Unknown Index" Q:'$D(^LEXT(757.2,+LEXR)) "Unknown Index"
"RTN","LEXDFN",50,0)
 S LEXT=$P($G(^LEXT(757.2,LEXR,0)),"^",1)
"RTN","LEXDFN",51,0)
 I +LEXR=1,LEXT'="" S X="Main "_LEXT_" word index" Q X
"RTN","LEXDFN",52,0)
 I +LEXR>1,LEXT'="" S X=LEXT_" subset word index" Q X
"RTN","LEXDFN",53,0)
 Q X
"RTN","LEXDFN",54,0)
OVRN(X) ; Overwrite
"RTN","LEXDFN",55,0)
 S X=+($G(X)) Q:X=0 "Do not overwrite user defaults"
"RTN","LEXDFN",56,0)
 Q "Overwrite user defaults"
"RTN","LEXDFN",57,0)
 ;
"RTN","LEXDFN",58,0)
SCTN(X) ; Shortcuts Context
"RTN","LEXDFN",59,0)
 N LEXT,LEXA S (LEXA,LEXT)="",X=$G(X)
"RTN","LEXDFN",60,0)
 I +X>0,$D(^LEX(757.41,+X,0)) D
"RTN","LEXDFN",61,0)
 . S LEXA=$P($G(^LEX(757.41,+X,0)),"^",1) Q:LEXA=""  S LEXT=LEXA
"RTN","LEXDFN",62,0)
 S:X'=""&(LEXT="") X="Unknown Shortcut Context" S:LEXT'="" X=LEXT Q X
"RTN","LEXDFN",63,0)
 ;
"RTN","LEXDFN",64,0)
UNRN(X) ; Unresolved Narratives
"RTN","LEXDFN",65,0)
 S X=+($G(X)) Q:X=0 "Do not use unresolved narratives"
"RTN","LEXDFN",66,0)
 Q "Use unresolved narratives"
"RTN","LEXDFN",67,0)
 ;
"RTN","LEXDFN",68,0)
MODI(X) ; Modifiers         PCH 6 (added)
"RTN","LEXDFN",69,0)
 S X=+($G(X)) Q:X=0 "Do not use modifiers"
"RTN","LEXDFN",70,0)
 Q "Use modifiers"
"RTN","LEXDFN",71,0)
 ;
"RTN","LEXDFN",72,0)
VOCN(X) ; Vocabulary
"RTN","LEXDFN",73,0)
 N LEXT,LEXA,LEXR S LEXR=0,LEXT="",LEXA=X,X=""
"RTN","LEXDFN",74,0)
 I +LEXA>0,$D(^LEXT(757.2,+LEXA)) D
"RTN","LEXDFN",75,0)
 . S LEXT=$P($G(^LEXT(757.2,+LEXA,0)),"^",2) S:LEXT'="" LEXA=LEXT
"RTN","LEXDFN",76,0)
 . S LEXT=$P($G(^LEXT(757.2,+LEXA,5)),"^",2) S:LEXT'="" LEXA=LEXT
"RTN","LEXDFN",77,0)
 I $D(^LEXT(757.2,"AA",LEXA)) D  Q X
"RTN","LEXDFN",78,0)
 . S LEXR=$O(^LEXT(757.2,"AA",LEXA,0)) I +LEXR=0 S X="Unknown Vocabulary" Q
"RTN","LEXDFN",79,0)
 . S X=$P($G(^LEXT(757.2,+LEXR,0)),"^",1) I X="" S X="Unknown Vocabulary" Q
"RTN","LEXDFN",80,0)
 I $D(^LEXT(757.2,"AB",LEXA)) D  Q X
"RTN","LEXDFN",81,0)
 . S LEXR=$O(^LEXT(757.2,"AB",LEXA,0)) I +LEXR=0 S X="Unknown Vocabulary" Q
"RTN","LEXDFN",82,0)
 . S LEXA=$P($G(^LEXT(757.2,+LEXR,5)),"^",2)
"RTN","LEXDFN",83,0)
 . I LEXA="" S LEXA=$P($G(^LEXT(757.2,+LEXR,0)),"^",2)
"RTN","LEXDFN",84,0)
 . I LEXA'="",$D(^LEXT(757.2,"AA",LEXA)) D
"RTN","LEXDFN",85,0)
 . . S LEXR=$O(^LEXT(757.2,"AA",LEXA,0)) I +LEXR=0 S X="Unknown Vocabulary" Q
"RTN","LEXDFN",86,0)
 . . S X=$P($G(^LEXT(757.2,+LEXR,0)),"^",1) I X="" S X="Unknown Vocabulary" Q
"RTN","LEXDFN",87,0)
 . I X="" S X="Unknown Vocabulary"
"RTN","LEXDFN",88,0)
 S:X="" X="Unknown Vocabulary" Q X
"RTN","LEXDFN2")
0^90^B11535780
"RTN","LEXDFN2",1,0)
LEXDFN2 ;ISL/KER - Default Names ;04/21/2014
"RTN","LEXDFN2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFN2",3,0)
 ;               
"RTN","LEXDFN2",4,0)
 ; Global Variables
"RTN","LEXDFN2",5,0)
 ;    None
"RTN","LEXDFN2",6,0)
 ;               
"RTN","LEXDFN2",7,0)
 ; External References
"RTN","LEXDFN2",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDFN2",9,0)
 ;               
"RTN","LEXDFN2",10,0)
AP(X) ; Application Pointer
"RTN","LEXDFN2",11,0)
 S X=$G(X) S X=$$NS(X) Q:X="" 1
"RTN","LEXDFN2",12,0)
 N LEXIEN,LEXNS
"RTN","LEXDFN2",13,0)
 I $L($G(X)),$D(^LEXT(757.2,"AN",X)) S X=$O(^LEXT(757.2,"AN",X,0)) Q X
"RTN","LEXDFN2",14,0)
 I $L($G(X)),$D(^LEXT(757.2,"B",X)) D  I LEXNS'="" S X=LEXIEN Q X
"RTN","LEXDFN2",15,0)
 . S LEXIEN=$O(^LEXT(757.2,"B",X,0))
"RTN","LEXDFN2",16,0)
 . S LEXNS=$P($G(^LEXT(757.2,LEXIEN,5)),"^",5)
"RTN","LEXDFN2",17,0)
 I $L($G(X)),$D(^LEXT(757.2,"C",$$UP^XLFSTR(X))) D  I LEXNS'="" S X=LEXIEN Q X
"RTN","LEXDFN2",18,0)
 . S LEXIEN=$O(^LEXT(757.2,"C",$$UP^XLFSTR(X),0))
"RTN","LEXDFN2",19,0)
 . S LEXNS=$P($G(^LEXT(757.2,LEXIEN,5)),"^",5)
"RTN","LEXDFN2",20,0)
 I $L($G(X)),$D(^LEXT(757.2,"APPS",X)) D  I LEXNS'="" S X=LEXIEN Q X
"RTN","LEXDFN2",21,0)
 . S LEXIEN=$O(^LEXT(757.2,"APPS",X,0))
"RTN","LEXDFN2",22,0)
 . S LEXNS=$P($G(^LEXT(757.2,LEXIEN,5)),"^",5)
"RTN","LEXDFN2",23,0)
 Q 1
"RTN","LEXDFN2",24,0)
NS(X) ; Namespace
"RTN","LEXDFN2",25,0)
 S X=$G(X) Q:X="" "LEX"
"RTN","LEXDFN2",26,0)
 I +X>0,X?1N.N,$D(^LEXT(757.2,+X)) S X=$P($G(^LEXT(757.2,+X,5)),"^",5) S:X="" X="LEX" Q X
"RTN","LEXDFN2",27,0)
 I X'="",$D(^LEXT(757.2,"AA",X)) D  S:X="" X="LEX" Q X
"RTN","LEXDFN2",28,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AA",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$P($G(^LEXT(757.2,+LEXR,5)),"^",5)
"RTN","LEXDFN2",29,0)
 I X'="",$D(^LEXT(757.2,"AB",X)) D  S:X="" X="LEX" Q X
"RTN","LEXDFN2",30,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AB",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$P($G(^LEXT(757.2,+LEXR,5)),"^",5)
"RTN","LEXDFN2",31,0)
 I X'="",$D(^LEXT(757.2,"APPS",X)) D  S:X="" X="LEX" Q X
"RTN","LEXDFN2",32,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"APPS",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$P($G(^LEXT(757.2,+LEXR,5)),"^",5)
"RTN","LEXDFN2",33,0)
 I X'="",$D(^LEXT(757.2,"AN",X)) D  S:X="" X="LEX" Q X
"RTN","LEXDFN2",34,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AN",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$P($G(^LEXT(757.2,+LEXR,5)),"^",5)
"RTN","LEXDFN2",35,0)
 I X'="",$D(^LEXT(757.2,"C",$$UP^XLFSTR(X))) D  S:X="" X="LEX" Q X
"RTN","LEXDFN2",36,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"C",$$UP^XLFSTR(X),0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$P($G(^LEXT(757.2,+LEXR,5)),"^",5)
"RTN","LEXDFN2",37,0)
 Q "LEX"
"RTN","LEXDFN2",38,0)
MD(X) ; Mode/Subset
"RTN","LEXDFN2",39,0)
 S X=$G(X) Q:X="" "WRD"
"RTN","LEXDFN2",40,0)
 I $D(^LEXT(757.2,"AA",X)) D  S:X="" X="WRD" Q X
"RTN","LEXDFN2",41,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AA",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$$MODE(+LEXR)
"RTN","LEXDFN2",42,0)
 I $D(^LEXT(757.2,"AB",X)) D  S:X="" X="WRD" Q X
"RTN","LEXDFN2",43,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AB",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$$MODE(+LEXR)
"RTN","LEXDFN2",44,0)
 I $D(^LEXT(757.2,"APPS",X)) D  S:X="" X="WRD" Q X
"RTN","LEXDFN2",45,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"APPS",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$$MODE(+LEXR)
"RTN","LEXDFN2",46,0)
 I $D(^LEXT(757.2,"AN",X)) D  S:X="" X="WRD" Q X
"RTN","LEXDFN2",47,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"AN",X,0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$$MODE(+LEXR)
"RTN","LEXDFN2",48,0)
 I $D(^LEXT(757.2,"C",$$UP^XLFSTR(X))) D  S:X="" X="WRD" Q X
"RTN","LEXDFN2",49,0)
 . N LEXR S LEXR=$O(^LEXT(757.2,"C",$$UP^XLFSTR(X),0)) I +LEXR>0,$D(^LEXT(757.2,+LEXR,0)) S X=$$MODE(+LEXR)
"RTN","LEXDFN2",50,0)
 I +X>0,$D(^LEXT(757.2,+X)) S X=$$MODE(+X) S:X="" X="WRD" Q X
"RTN","LEXDFN2",51,0)
 Q "WRD"
"RTN","LEXDFN2",52,0)
MODE(X) ;
"RTN","LEXDFN2",53,0)
 N LEXMD S X=+($G(X)) Q:X=0 "WRD"
"RTN","LEXDFN2",54,0)
 S LEXMD=$P($G(^LEXT(757.2,X,5)),"^",1) I LEXMD'="" S X=LEXMD Q X
"RTN","LEXDFN2",55,0)
 S LEXMD=$P($G(^LEXT(757.2,X,5)),"^",2) I LEXMD'="" S X=LEXMD Q X
"RTN","LEXDFN2",56,0)
 S LEXMD=$P($G(^LEXT(757.2,X,0)),"^",2) I LEXMD'="" S X=LEXMD Q X
"RTN","LEXDFN2",57,0)
 Q "WRD"
"RTN","LEXDFSB")
0^215^B3384984
"RTN","LEXDFSB",1,0)
LEXDFSB ;ISL/KER - Default Filter - Include/Exclude ;04/21/2014
"RTN","LEXDFSB",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFSB",3,0)
 ;
"RTN","LEXDFSB",4,0)
 ; Entry:  S X=$$EN^LEXDFSB
"RTN","LEXDFSB",5,0)
 ;
"RTN","LEXDFSB",6,0)
 ; Functions returns the Include/Exclude string for filters
"RTN","LEXDFSB",7,0)
 ; which use the semantic class and types.
"RTN","LEXDFSB",8,0)
 ;
"RTN","LEXDFSB",9,0)
 ; String format:
"RTN","LEXDFSB",10,0)
 ;
"RTN","LEXDFSB",11,0)
 ;     INC/INC/INC/INC/...ETC;EXC/EXC/EXC/EXC/...EXC
"RTN","LEXDFSB",12,0)
 ;
"RTN","LEXDFSB",13,0)
 ;     Where INC is a semantic class or type to include
"RTN","LEXDFSB",14,0)
 ;     in searches, and EXC is a semantic class or type to
"RTN","LEXDFSB",15,0)
 ;     exclude from searches
"RTN","LEXDFSB",16,0)
 ;
"RTN","LEXDFSB",17,0)
 ; LEXC     Counter
"RTN","LEXDFSB",18,0)
 ; LEXI     Include String
"RTN","LEXDFSB",19,0)
 ; LEXE     Exclude String
"RTN","LEXDFSB",20,0)
 ; LEXA     Local array containing include/exclude parameters
"RTN","LEXDFSB",21,0)
 ; LEXX     Include;Exclude string to be returned
"RTN","LEXDFSB",22,0)
 ;
"RTN","LEXDFSB",23,0)
EN(LEXX) ; Create the Semantic Type String
"RTN","LEXDFSB",24,0)
 I +$G(LEXA(0))>0 S LEXX="" D SET K LEXA Q LEXX
"RTN","LEXDFSB",25,0)
 S LEXX=$$EN^LEXDFSI K:LEXX[U LEXA
"RTN","LEXDFSB",26,0)
 I LEXX[U D  Q LEXX
"RTN","LEXDFSB",27,0)
 . S:LEXX["^^" LEXX="^^" Q:LEXX["^^"  S:LEXX[U LEXX="^No filter selected" K LEXA
"RTN","LEXDFSB",28,0)
 I $P(LEXX,U,1)="" S LEXX="^No filter selected" K LEXA Q LEXX
"RTN","LEXDFSB",29,0)
 D:+$G(LEXA(0))>0 SET
"RTN","LEXDFSB",30,0)
 K LEXA Q LEXX
"RTN","LEXDFSB",31,0)
 ;
"RTN","LEXDFSB",32,0)
SET ; Create Semantic Include and Exclude strings from the array
"RTN","LEXDFSB",33,0)
 ;
"RTN","LEXDFSB",34,0)
 Q:+($G(LEXA(0)))=0
"RTN","LEXDFSB",35,0)
 N LEXC,LEXT,LEXI,LEXE S (LEXI,LEXE)=""
"RTN","LEXDFSB",36,0)
 F LEXC=1:1:LEXA(0) D
"RTN","LEXDFSB",37,0)
 . I LEXA(LEXC,2,0)<LEXA(LEXC,1,0)!(LEXA(LEXC,2,0)=0) S LEXI=LEXI_"/"_LEXA(LEXC,0)
"RTN","LEXDFSB",38,0)
 . I LEXA(LEXC,2,0)<LEXA(LEXC,1,0)&(LEXA(LEXC,2,0)'=0) D 
"RTN","LEXDFSB",39,0)
 . . F LEXT=1:1:LEXA(LEXC,2,0) D
"RTN","LEXDFSB",40,0)
 . . . S LEXE=LEXE_"/"_LEXA(LEXC,2,LEXT,0)
"RTN","LEXDFSB",41,0)
 . I LEXA(LEXC,2,0)'<LEXA(LEXC,1,0)&(LEXA(LEXC,2,0)'=0) D 
"RTN","LEXDFSB",42,0)
 . . F LEXT=1:1:LEXA(LEXC,1,0) D
"RTN","LEXDFSB",43,0)
 . . . S LEXI=LEXI_"/"_LEXA(LEXC,1,LEXT,0)
"RTN","LEXDFSB",44,0)
 S:LEXI'["UNK" LEXI=LEXI_"/UNK" S:$E(LEXI,1)="/" LEXI=$E(LEXI,2,$L(LEXI))
"RTN","LEXDFSB",45,0)
 S:$E(LEXE,1)="/" LEXE=$E(LEXE,2,$L(LEXE)) S LEXX=LEXI_";"_LEXE
"RTN","LEXDFSB",46,0)
 K LEXA Q
"RTN","LEXDFSE")
0^120^B12795665
"RTN","LEXDFSE",1,0)
LEXDFSE ;ISL/KER - Default Filter - Exclude Semantics ;04/21/2014
"RTN","LEXDFSE",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFSE",3,0)
 ;               
"RTN","LEXDFSE",4,0)
 ; Global Variables
"RTN","LEXDFSE",5,0)
 ;    None
"RTN","LEXDFSE",6,0)
 ;               
"RTN","LEXDFSE",7,0)
 ; External References
"RTN","LEXDFSE",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDFSE",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFSE",10,0)
 ;               
"RTN","LEXDFSE",11,0)
 ; Called from LEXDFSI (set the EXCLUDE string)
"RTN","LEXDFSE",12,0)
 ;
"RTN","LEXDFSE",13,0)
 ; LEXC      Counter
"RTN","LEXDFSE",14,0)
 ; LEXCCOK   Semantic Class OK (Y/N)
"RTN","LEXDFSE",15,0)
 ; LEXCCR    Semantic Class Pointer in # 757.11
"RTN","LEXDFSE",16,0)
 ; LEXCLS    Semantic Class
"RTN","LEXDFSE",17,0)
 ; LEXCMN    Semantic Class Mnemonic
"RTN","LEXDFSE",18,0)
 ; LEXCT     Semantic Type Mnemonic (IEN)
"RTN","LEXDFSE",19,0)
 ; LEXCTN    Semantic Type Counter
"RTN","LEXDFSE",20,0)
 ; LEXCTOK   Semantic Type OK (Y/N)
"RTN","LEXDFSE",21,0)
 ; LEXCTR    Semantic Type Pointer in # 757.12
"RTN","LEXDFSE",22,0)
 ; LEXF      Flag for user input
"RTN","LEXDFSE",23,0)
 ; LEXI      Incremental counter
"RTN","LEXDFSE",24,0)
 ; LEXLST    Array (list) of examples
"RTN","LEXDFSE",25,0)
 ; LEXMC     Pointer to Major Concept in # 757
"RTN","LEXDFSE",26,0)
 ; LEXS      Semantic Type Sources from #757.03
"RTN","LEXDFSE",27,0)
 ; LEXSPL    Sample Term of a Semantic Type
"RTN","LEXDFSE",28,0)
 ; LEXX      String returned to LEXDSTI
"RTN","LEXDFSE",29,0)
 ;
"RTN","LEXDFSE",30,0)
EN(LEXCCR) ; Exclude types
"RTN","LEXDFSE",31,0)
 N LEXF S LEXF=1 D TYPES(LEXCCR) Q
"RTN","LEXDFSE",32,0)
TYPES(LEXCCR) ; Semantic Types
"RTN","LEXDFSE",33,0)
 N LEXCTOK,LEXCT,LEXCTR,LEXCTN,LEXCMN,LEXCLS
"RTN","LEXDFSE",34,0)
 S LEXCTOK="",LEXCT=0,LEXCMN=$$MNEMONIC(LEXCCR)
"RTN","LEXDFSE",35,0)
 F  S (LEXCT,LEXCTR)=$O(^LEX(757.12,"C",LEXCMN,LEXCT)) Q:+LEXCT=0!(LEXCTOK[U)  D  Q:LEXCTOK[U
"RTN","LEXDFSE",36,0)
 . Q:'$D(^LEX(757.12,LEXCTR,1,"B"))
"RTN","LEXDFSE",37,0)
 . Q:'$D(^LEX(757.12,LEXCTR,0))  S LEXCTN=$S('$D(LEXCTN):1,1:LEXCTN+1)
"RTN","LEXDFSE",38,0)
 . W !!,"Semantic Type:  ",$P(^LEX(757.12,LEXCTR,0),U,2)
"RTN","LEXDFSE",39,0)
 . D STYPE(LEXCTR),EXAMPLE(LEXCTR) D:+($G(LEXF)) EXCLUDE
"RTN","LEXDFSE",40,0)
 Q
"RTN","LEXDFSE",41,0)
STYPE(LEXCTR) ; Sources of Semantic Type
"RTN","LEXDFSE",42,0)
 I '$D(^LEX(757.12,LEXCTR,1,"B")) D  Q
"RTN","LEXDFSE",43,0)
 . W !!,?5,"There are no terms with this Semantic Type in "
"RTN","LEXDFSE",44,0)
 . W "the Lexicon"
"RTN","LEXDFSE",45,0)
 W !!,?5,"This Semantic Type contains terms from, or mapped to,"
"RTN","LEXDFSE",46,0)
 W !,?5,"the following classification systems:  ",!
"RTN","LEXDFSE",47,0)
 N LEXS,LEXC S LEXS="",LEXC=0
"RTN","LEXDFSE",48,0)
 F  S LEXS=$O(^LEX(757.12,LEXCTR,1,"B",LEXS)) Q:LEXS=""  D
"RTN","LEXDFSE",49,0)
 . S LEXC=LEXC+1 W:LEXC=1 !,?9,LEXS W:LEXC=2 ?33,LEXS
"RTN","LEXDFSE",50,0)
 . W:LEXC=3 ?57,LEXS S:LEXC=3 LEXC=0
"RTN","LEXDFSE",51,0)
 Q
"RTN","LEXDFSE",52,0)
EXAMPLE(LEXX) ; List examples
"RTN","LEXDFSE",53,0)
 W !!,?5,"Examples of Semantic Type:   ",$$NAME(LEXX),!
"RTN","LEXDFSE",54,0)
 I '$D(^LEX(757.1,"ASTT",LEXX)) D  Q
"RTN","LEXDFSE",55,0)
 . W !,?8,"No examples found"
"RTN","LEXDFSE",56,0)
 N LEXI,LEXSPL,LEXMC,LEXC S LEXMC="",LEXC=0
"RTN","LEXDFSE",57,0)
 F LEXI=1:1:10 D  Q:+LEXC>2
"RTN","LEXDFSE",58,0)
 . S LEXMC=$O(^LEX(757.1,"ASTT",LEXX,LEXMC)) Q:+LEXMC'>0
"RTN","LEXDFSE",59,0)
 . S LEXSPL=$$SAMPLE(LEXMC)
"RTN","LEXDFSE",60,0)
 . I '$D(LEXLST($$UP^XLFSTR(LEXSPL))) D
"RTN","LEXDFSE",61,0)
 . . S LEXC=LEXC+1 W !,?5,$J(LEXC,2),": ",LEXSPL
"RTN","LEXDFSE",62,0)
 . S LEXLST($$UP^XLFSTR(LEXSPL))=""
"RTN","LEXDFSE",63,0)
 K LEXLST
"RTN","LEXDFSE",64,0)
 Q
"RTN","LEXDFSE",65,0)
MNEMONIC(LEXX) ; Semantic Class Mnemonic
"RTN","LEXDFSE",66,0)
 Q $P(^LEX(757.11,LEXX,0),U,1)
"RTN","LEXDFSE",67,0)
CLSNAME(LEXX) ; Semantic Class Name
"RTN","LEXDFSE",68,0)
 Q $P(^LEX(757.11,LEXX,0),U,2)
"RTN","LEXDFSE",69,0)
NAME(LEXX) ; Semantic Type Name
"RTN","LEXDFSE",70,0)
 Q $P($G(^LEX(757.12,LEXX,0)),"^",2)
"RTN","LEXDFSE",71,0)
SAMPLE(LEXX) ; Sample term of a Semantic Type
"RTN","LEXDFSE",72,0)
 N LEXS S LEXS=$E(^LEX(757.01,+(^LEX(757,LEXX,0)),0),1,70)
"RTN","LEXDFSE",73,0)
 S:LEXS[" (" LEXS=$P(LEXS," (",1)
"RTN","LEXDFSE",74,0)
 S:LEXS[" <" LEXS=$P(LEXS," <",1)
"RTN","LEXDFSE",75,0)
 S LEXX=LEXS Q LEXX
"RTN","LEXDFSE",76,0)
EXCLUDE ; Exclude Semantic Type?  (Y/N)
"RTN","LEXDFSE",77,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !
"RTN","LEXDFSE",78,0)
 S DIR("A")="Exclude this type:  "
"RTN","LEXDFSE",79,0)
 S DIR("B")="NO",(DIR("?"),DIR("??"))="^D EXH^LEXDFSE"
"RTN","LEXDFSE",80,0)
 S DIR(0)="YAO" D ^DIR K DIR S:Y["^" LEXCTOK=U
"RTN","LEXDFSE",81,0)
 S:Y["^^" (LEXCCOK,LEXCTOK)="^^" Q:Y["^^"  Q:LEXCTOK[U
"RTN","LEXDFSE",82,0)
 D:+Y>0 REM D:+Y'>0 SAV Q
"RTN","LEXDFSE",83,0)
EXH ; Exclude help
"RTN","LEXDFSE",84,0)
 W !!,?4,"Include semantic class:       "
"RTN","LEXDFSE",85,0)
 W $$MNEMONIC(LEXCCR)," - ",$$CLSNAME(LEXCCR)
"RTN","LEXDFSE",86,0)
 W !,?4,"Excluding the semantic type:  ",$$NAME(LEXCTR) Q
"RTN","LEXDFSE",87,0)
REM ; Remove Semantic Type from the list (excluded)
"RTN","LEXDFSE",88,0)
 Q:+($G(LEXA(0)))=0  S LEXCTOK=0
"RTN","LEXDFSE",89,0)
 N LEXC S LEXC=+($G(LEXA(0)))
"RTN","LEXDFSE",90,0)
 S LEXA(LEXC,2,0)=$S('$D(LEXA(LEXC,2,0)):1,1:LEXA(LEXC,2,0)+1)
"RTN","LEXDFSE",91,0)
 S LEXA(LEXC,2,LEXA(LEXC,2,0),0)=LEXCTR Q
"RTN","LEXDFSE",92,0)
SAV ; Save the Semantic Type (included)
"RTN","LEXDFSE",93,0)
 Q:+($G(LEXA(0)))=0  S LEXCTOK=1
"RTN","LEXDFSE",94,0)
 N LEXC S LEXC=+($G(LEXA(0)))
"RTN","LEXDFSE",95,0)
 S LEXA(LEXC,1,0)=$S('$D(LEXA(LEXC,1,0)):1,1:LEXA(LEXC,1,0)+1)
"RTN","LEXDFSE",96,0)
 S LEXA(LEXC,1,LEXA(LEXC,1,0),0)=LEXCTR Q
"RTN","LEXDFSI")
0^137^B9975036
"RTN","LEXDFSI",1,0)
LEXDFSI ;ISL/KER - Default Filter - Include Semantics ;04/21/2014
"RTN","LEXDFSI",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFSI",3,0)
 ;               
"RTN","LEXDFSI",4,0)
 ; Global Variables
"RTN","LEXDFSI",5,0)
 ;    None
"RTN","LEXDFSI",6,0)
 ;               
"RTN","LEXDFSI",7,0)
 ; External References
"RTN","LEXDFSI",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFSI",9,0)
 ;               
"RTN","LEXDFSI",10,0)
 ; Called from LEXDFSB (set the INCLUDE/EXCLUDE string)
"RTN","LEXDFSI",11,0)
 ;
"RTN","LEXDFSI",12,0)
 ; LEXC      Counter
"RTN","LEXDFSI",13,0)
 ; LEXCC     Semantic Class Mnemonic
"RTN","LEXDFSI",14,0)
 ; LEXCCN    Semantic Class Counter
"RTN","LEXDFSI",15,0)
 ; LEXCCOK   Semantic Class OK (Y/N)
"RTN","LEXDFSI",16,0)
 ; LEXCCR    Semantic Class Pointer in #757.11
"RTN","LEXDFSI",17,0)
 ; LEXF      Flag for user input
"RTN","LEXDFSI",18,0)
 ; LEXS      Semantic Type Sources from #757.03
"RTN","LEXDFSI",19,0)
 ; LEXX      String returned to LEXDSTS
"RTN","LEXDFSI",20,0)
 ;
"RTN","LEXDFSI",21,0)
EN(LEXX) ; Semantic Type string INCLUDE/EXCLUDE
"RTN","LEXDFSI",22,0)
 K LEXA N LEXF S LEXX="",LEXF=1
"RTN","LEXDFSI",23,0)
 D CLASS Q LEXX
"RTN","LEXDFSI",24,0)
 ;
"RTN","LEXDFSI",25,0)
CLASS ; Semantic Classes
"RTN","LEXDFSI",26,0)
 N LEXCCOK,LEXCC,LEXCCR,LEXCCN S (LEXCCOK,LEXCC)=""
"RTN","LEXDFSI",27,0)
 F  S LEXCC=$O(^LEX(757.11,"B",LEXCC)) Q:LEXCC=""!(LEXCCOK[U)  D
"RTN","LEXDFSI",28,0)
 . S LEXCCOK=0 I LEXCC'="UNK" D  Q:LEXCCOK[U
"RTN","LEXDFSI",29,0)
 . . S LEXCCR=$$IEN(LEXCC),LEXCCN=+($G(LEXCCN))+1
"RTN","LEXDFSI",30,0)
 . . W !!,$J(LEXCCN,2),": ",$$CC(LEXCCR),"   ",$$NAME(LEXCCR),!
"RTN","LEXDFSI",31,0)
 . . D SY(LEXCCR),CAT(LEXCCR)
"RTN","LEXDFSI",32,0)
 . . D:+($G(LEXF)) INCLUDE I LEXCCOK D SAVE(LEXCCR)
"RTN","LEXDFSI",33,0)
 . Q:LEXCCOK["^"  I LEXCCOK D EXCLUDE
"RTN","LEXDFSI",34,0)
 I +($G(LEXF))>0 S LEXX=LEXCCOK
"RTN","LEXDFSI",35,0)
 Q
"RTN","LEXDFSI",36,0)
 ;
"RTN","LEXDFSI",37,0)
SY(LEXX) ; List Classification Systems
"RTN","LEXDFSI",38,0)
 N LEXS,LEXC Q:'$D(^LEX(757.11,LEXX,2,"B"))  S LEXS="",LEXC=0
"RTN","LEXDFSI",39,0)
 W !!,?4,"This Semantic Class contains terms from, or mapped to,"
"RTN","LEXDFSI",40,0)
 W !,?4,"the following classification systems:  ",!
"RTN","LEXDFSI",41,0)
 F  S LEXS=$O(^LEX(757.11,LEXX,2,"B",LEXS)) Q:LEXS=""  D
"RTN","LEXDFSI",42,0)
 . S LEXC=LEXC+1 W:LEXC=1 ! W:LEXC=1 ?8,LEXS
"RTN","LEXDFSI",43,0)
 . W:LEXC=2 ?32,LEXS W:LEXC=3 ?56,LEXS S:LEXC=3 LEXC=0
"RTN","LEXDFSI",44,0)
 W ! Q
"RTN","LEXDFSI",45,0)
CAT(LEXX) ; List semantic types
"RTN","LEXDFSI",46,0)
 N LEXC S LEXC=0 Q:'$D(^LEX(757.11,LEXX,1,0))
"RTN","LEXDFSI",47,0)
 W !!,?4,"Semantic Types:  ",!
"RTN","LEXDFSI",48,0)
 F  S LEXC=$O(^LEX(757.11,LEXX,1,LEXC)) Q:+LEXC=0  D
"RTN","LEXDFSI",49,0)
 . W !,?4,^LEX(757.11,LEXX,1,LEXC,0)
"RTN","LEXDFSI",50,0)
 Q
"RTN","LEXDFSI",51,0)
CC(LEXX) ; Semantic Class Mnemonic
"RTN","LEXDFSI",52,0)
 Q $P(^LEX(757.11,LEXX,0),U,1)
"RTN","LEXDFSI",53,0)
NAME(LEXX) ; Semantic Class Name
"RTN","LEXDFSI",54,0)
 Q $P(^LEX(757.11,LEXX,0),U,2)
"RTN","LEXDFSI",55,0)
IEN(LEXX) ; Internal Entry number based on Semantic Class
"RTN","LEXDFSI",56,0)
 S LEXX=$O(^LEX(757.11,"B",LEXX,0)) Q LEXX
"RTN","LEXDFSI",57,0)
 ;
"RTN","LEXDFSI",58,0)
INCLUDE ; Include a Semantic Classes
"RTN","LEXDFSI",59,0)
 W ! N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXDFSI",60,0)
 S DIR("A")="Include this class:  "
"RTN","LEXDFSI",61,0)
 S (DIR("??"),DIR("?"))="^D INH^LEXDFSI"
"RTN","LEXDFSI",62,0)
 S DIR("B")="YES",DIR(0)="YAO"
"RTN","LEXDFSI",63,0)
 D ^DIR K DIR S LEXCCOK=Y Q
"RTN","LEXDFSI",64,0)
 ;
"RTN","LEXDFSI",65,0)
INH ; Include help
"RTN","LEXDFSI",66,0)
 W !!,"    Semantic Class:  "
"RTN","LEXDFSI",67,0)
 W $$CC(LEXCCR)," - ",$$NAME(LEXCCR) Q
"RTN","LEXDFSI",68,0)
 ;
"RTN","LEXDFSI",69,0)
EXCLUDE ; Exclude Semantic Types
"RTN","LEXDFSI",70,0)
 W ! N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXDFSI",71,0)
 S DIR("A",1)="Do you want to ""exclude"" any of"
"RTN","LEXDFSI",72,0)
 S DIR("A")="the semantic types listed above:  "
"RTN","LEXDFSI",73,0)
 S DIR("B")="NO",(DIR("?"),DIR("??"))="^D EXH^LEXDFSI",DIR(0)="YAO"
"RTN","LEXDFSI",74,0)
 D ^DIR K DIR S LEXCCOK=0 S:Y["^^" LEXCCOK=Y D:+Y>0 EN^LEXDFSE(LEXCCR) Q
"RTN","LEXDFSI",75,0)
EXH ; Exclude help
"RTN","LEXDFSI",76,0)
 W !!,"By including the semantical class ",$$CC(LEXCCR)
"RTN","LEXDFSI",77,0)
 W " you will also be including"
"RTN","LEXDFSI",78,0)
 W !,"all of the semantical types contained within the class." Q
"RTN","LEXDFSI",79,0)
 ;
"RTN","LEXDFSI",80,0)
SAVE(LEXX) ; Save Semantic Class
"RTN","LEXDFSI",81,0)
 Q:LEXCCOK[U  N LEXC S LEXCCOK=1,LEXC=$G(LEXA(0))+1
"RTN","LEXDFSI",82,0)
 S LEXA(0)=LEXC,LEXA(LEXC,0)=$$CC(LEXX),LEXA(LEXC,1,0)=0,LEXA(LEXC,2,0)=0 Q
"RTN","LEXDFSO")
0^138^B7103084
"RTN","LEXDFSO",1,0)
LEXDFSO ;ISL/KER - Default Filter - Sources ;04/21/2014
"RTN","LEXDFSO",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFSO",3,0)
 ;               
"RTN","LEXDFSO",4,0)
 ; Global Variables
"RTN","LEXDFSO",5,0)
 ;    ^TMP("LEXTSAB")     SACC 2.3.2.5.1
"RTN","LEXDFSO",6,0)
 ;               
"RTN","LEXDFSO",7,0)
 ; External References
"RTN","LEXDFSO",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFSO",9,0)
 ;               
"RTN","LEXDFSO",10,0)
 ; Entry:  S X=$$EN^LEXDFSO
"RTN","LEXDFSO",11,0)
 ;
"RTN","LEXDFSO",12,0)
 ; LEXFIL    Filter (executable)
"RTN","LEXDFSO",13,0)
 ; LEXNAM    Filter Name
"RTN","LEXDFSO",14,0)
 ; LEXPRO    Y/N response to proceed with building filter
"RTN","LEXDFSO",15,0)
 ; LEXSTR    Filter parameters (string)
"RTN","LEXDFSO",16,0)
 ; LEXX      Filter returned
"RTN","LEXDFSO",17,0)
 ;
"RTN","LEXDFSO",18,0)
EN(LEXX) ; Entry point S X=$$EN^LEXDFSO
"RTN","LEXDFSO",19,0)
 N LEXFIL,LEXPRO S LEXFIL=0 D INTRO S LEXPRO=$$PRO
"RTN","LEXDFSO",20,0)
 Q:LEXPRO["^" LEXPRO Q:LEXPRO'=1 "^No filter selected"
"RTN","LEXDFSO",21,0)
 S LEXX=$$EN^LEXDCCC S:LEXX="^" LEXX="^^"
"RTN","LEXDFSO",22,0)
 Q:LEXX["^^" "^^"
"RTN","LEXDFSO",23,0)
 Q:$P(LEXX,"^",1)="" "^No filter selected"
"RTN","LEXDFSO",24,0)
 D:$P(LEXX,"^",1)'="" ASSEM
"RTN","LEXDFSO",25,0)
 Q LEXX
"RTN","LEXDFSO",26,0)
INTRO ; Introduction/Proceed
"RTN","LEXDFSO",27,0)
 N LEXSAB D SAB
"RTN","LEXDFSO",28,0)
 W !!,"You will be provided with ",LEXSAB," classifications systems to either include"
"RTN","LEXDFSO",29,0)
 W !,"or exclude during Lexicon look-up.  If you select a classification system"
"RTN","LEXDFSO",30,0)
 W !,"(i.e., ICD) to be included, any terms which qualify during the search and are"
"RTN","LEXDFSO",31,0)
 W !,"linked to an ""included"" classification code (example ICD code) will be "
"RTN","LEXDFSO",32,0)
 W !,"included in the selection list."
"RTN","LEXDFSO",33,0)
 Q
"RTN","LEXDFSO",34,0)
SAB N LEXI S LEXI="",LEXSAB=0
"RTN","LEXDFSO",35,0)
 F  S LEXI=$O(^LEX(757.03,"B",LEXI)) Q:LEXI=""  D
"RTN","LEXDFSO",36,0)
 . Q:'$D(^LEX(757.02,"ASRC",$E(LEXI,1,3)))
"RTN","LEXDFSO",37,0)
 . S:'$D(^TMP("LEXTSAB",$J,$E(LEXI,1,3))) ^TMP("LEXTSAB",$J,$E(LEXI,1,3))="",LEXSAB=LEXSAB+1
"RTN","LEXDFSO",38,0)
 K ^TMP("LEXTSAB",$J)
"RTN","LEXDFSO",39,0)
 Q
"RTN","LEXDFSO",40,0)
PRO(LEXX) ; OK to proceed Y/N
"RTN","LEXDFSO",41,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !!
"RTN","LEXDFSO",42,0)
 S DIR("A")="Do you wish to continue:  ",DIR("B")="YES"
"RTN","LEXDFSO",43,0)
 S DIR("?")="Answer Yes or No",DIR("??")="^D PROH^LEXDFSO"
"RTN","LEXDFSO",44,0)
 S DIR(0)="YAO" D ^DIR S LEXX=Y Q LEXX
"RTN","LEXDFSO",45,0)
PROH ; Proceed help
"RTN","LEXDFSO",46,0)
 W !!,?2,"Answer"
"RTN","LEXDFSO",47,0)
 W !!,?4,"Yes     Continue to build a filter based on Classification Codes"
"RTN","LEXDFSO",48,0)
 W !,?4,"No      Exit without building a filter",! Q
"RTN","LEXDFSO",49,0)
ASSEM ; Assemble the return value FILTER^NAME
"RTN","LEXDFSO",50,0)
 N LEXNAM,LEXFIL S (LEXNAM,LEXFIL)="",LEXFIL=$P(LEXX,"^",1)
"RTN","LEXDFSO",51,0)
 I $L($G(LEXFIL)) S LEXFIL="I $$SO^LEXU(Y,"_""""_LEXFIL_""""_")"
"RTN","LEXDFSO",52,0)
 I LEXFIL[U S LEXNAM=$$NAME^LEXDM3 I LEXNAM="^^" S LEXX="^^"
"RTN","LEXDFSO",53,0)
 S:LEXX["^^" LEXFIL="",LEXNAM="^" S LEXX=LEXFIL_"^"_LEXNAM Q
"RTN","LEXDFSS")
0^176^B19790328
"RTN","LEXDFSS",1,0)
LEXDFSS ;ISL/KER - Default Filter - Semantics/Sources ;04/21/2014
"RTN","LEXDFSS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFSS",3,0)
 ;               
"RTN","LEXDFSS",4,0)
 ; Global Variables
"RTN","LEXDFSS",5,0)
 ;    ^TMP("LEXTSAB")     SACC 2.3.2.5.1
"RTN","LEXDFSS",6,0)
 ;               
"RTN","LEXDFSS",7,0)
 ; External References
"RTN","LEXDFSS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFSS",9,0)
 ;               
"RTN","LEXDFSS",10,0)
 ; Entry:  S X=$$EN^LEXDFSS
"RTN","LEXDFSS",11,0)
 ;
"RTN","LEXDFSS",12,0)
 ; LEXFIL    Filter (executable)
"RTN","LEXDFSS",13,0)
 ; LEXNAM    Filter Name
"RTN","LEXDFSS",14,0)
 ; LEXPRO    Y/N response to proceed with building filter
"RTN","LEXDFSS",15,0)
 ; LEXSTR    Filter parameters (string)
"RTN","LEXDFSS",16,0)
 ; LEXSRC    Classification system (sources) portion of filter
"RTN","LEXDFSS",17,0)
 ; LEXSTY    Semantic Class/Type portion of filter
"RTN","LEXDFSS",18,0)
 ; LEXX      Filter returned
"RTN","LEXDFSS",19,0)
 ;
"RTN","LEXDFSS",20,0)
EN(LEXX) ; Entry point S X=$$EN^LEXDFSS
"RTN","LEXDFSS",21,0)
 N LEXSTY,LEXSRC,LEXFIL,LEXPRO
"RTN","LEXDFSS",22,0)
 S (LEXSTY,LEXSRC,LEXX)="",LEXFIL=0 D INTRO S LEXPRO=$$PRO
"RTN","LEXDFSS",23,0)
 Q:LEXPRO["^" LEXPRO Q:LEXPRO'=1 "^No filter selected"
"RTN","LEXDFSS",24,0)
 S LEXSTY=$$EN^LEXDFSB Q:LEXSTY["^^" "^^"
"RTN","LEXDFSS",25,0)
 S LEXFIL=0 S LEXSRC=$$EN^LEXDCCC Q:LEXSRC["^^" "^^"
"RTN","LEXDFSS",26,0)
 Q:$P(LEXSTY,"^",1)="" "^No filter selected"
"RTN","LEXDFSS",27,0)
 S LEXSTY=$P(LEXSTY,"^",1),LEXSRC=$P(LEXSRC,"^",1)
"RTN","LEXDFSS",28,0)
 Q:'$L((LEXSTY_LEXSRC)) "^No filter selected"
"RTN","LEXDFSS",29,0)
 S LEXFIL=1 I $L(LEXSTY),'$L(LEXSRC) D
"RTN","LEXDFSS",30,0)
 . N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !
"RTN","LEXDFSS",31,0)
 . S DIR("A",1)="You have selected semantic classes/types to Include/Exclude in your filter"
"RTN","LEXDFSS",32,0)
 . S DIR("A",2)="but have not selected any classification coding systems to include in the"
"RTN","LEXDFSS",33,0)
 . S DIR("A",3)="filter.  Do you want to contine to build the filter based solely on the"
"RTN","LEXDFSS",34,0)
 . S DIR("A")="semantic classes/types you selected?  "
"RTN","LEXDFSS",35,0)
 . S DIR("B")="YES",DIR("?")="Answer Yes or No",DIR(0)="YAO" D ^DIR
"RTN","LEXDFSS",36,0)
 . K DIR S LEXFIL=0,LEXX="^^" S:+Y>0 LEXFIL=+Y,LEXX=""
"RTN","LEXDFSS",37,0)
 D:LEXFIL ASSEM Q LEXX
"RTN","LEXDFSS",38,0)
INTRO ; Introduction/Proceed
"RTN","LEXDFSS",39,0)
 N LEXSAB D SAB W @IOF
"RTN","LEXDFSS",40,0)
 ;W !,"FILTER BY BOTH SEMANTIC CLASSES/TYPES AND CLASSIFICATION CODES"
"RTN","LEXDFSS",41,0)
 W !!,"This search filter is in two segments.  The first segment limits the search"
"RTN","LEXDFSS",42,0)
 W !,"based on the semantical classification of the terms.  The second segment "
"RTN","LEXDFSS",43,0)
 W !,"limits the search based on classification coding systems."
"RTN","LEXDFSS",44,0)
 W !!,"First, you will be provided with ",($P(^LEX(757.11,0),U,4))-1," semantic classes.  By selecting"
"RTN","LEXDFSS",45,0)
 W !,"a semantic class, each term which is found during a search of the "
"RTN","LEXDFSS",46,0)
 W !,"Lexicon, and belongs to that class, will be displayed for your selection."
"RTN","LEXDFSS",47,0)
 W !,"Additionally, each semantic class contains semantic types (or sub-categories)"
"RTN","LEXDFSS",48,0)
 W !,"which may be excluded during the search  Terms belonging to an ""included"" "
"RTN","LEXDFSS",49,0)
 W !,"semantic class will be displayed unless they also belong to an ""excluded"" "
"RTN","LEXDFSS",50,0)
 W !,"semantic type.  This segment is mandatory (can not be null)."
"RTN","LEXDFSS",51,0)
 ;
"RTN","LEXDFSS",52,0)
 W !!,"Secondly, you will be presented with ",LEXSAB," classification systems to include."
"RTN","LEXDFSS",53,0)
 W !,"By selecting a classification system to include (i.e., ICD), any term which"
"RTN","LEXDFSS",54,0)
 W !,"is linked to a code from that system will be displayed for selection.  "
"RTN","LEXDFSS",55,0)
 W !,"Inclusion by classification code will over ride ""exclusion by sematical"
"RTN","LEXDFSS",56,0)
 W !,"class or type"".  This segment is optional (may be null)."
"RTN","LEXDFSS",57,0)
  K LEXSAB
"RTN","LEXDFSS",58,0)
 Q
"RTN","LEXDFSS",59,0)
SAB N LEXI S LEXI="",LEXSAB=0
"RTN","LEXDFSS",60,0)
 F  S LEXI=$O(^LEX(757.03,"B",LEXI)) Q:LEXI=""  D
"RTN","LEXDFSS",61,0)
 . Q:'$D(^LEX(757.02,"ASRC",$E(LEXI,1,3)))
"RTN","LEXDFSS",62,0)
 . S:'$D(^TMP("LEXTSAB",$J,$E(LEXI,1,3))) ^TMP("LEXTSAB",$J,$E(LEXI,1,3))="",LEXSAB=LEXSAB+1
"RTN","LEXDFSS",63,0)
 K ^TMP("LEXTSAB",$J)
"RTN","LEXDFSS",64,0)
 Q
"RTN","LEXDFSS",65,0)
PRO(LEXX) ; OK to proceed Y/N
"RTN","LEXDFSS",66,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !!
"RTN","LEXDFSS",67,0)
 S DIR("A")="Do you wish to continue:  ",DIR("B")="YES"
"RTN","LEXDFSS",68,0)
 S DIR("?")="Answer Yes or No",DIR("??")="^D PROH^LEXDFSS"
"RTN","LEXDFSS",69,0)
 S DIR(0)="YAO" D ^DIR S LEXX=Y Q LEXX
"RTN","LEXDFSS",70,0)
PROH ; Proceed help
"RTN","LEXDFSS",71,0)
 W !!,?2,"Answer"
"RTN","LEXDFSS",72,0)
 W !!,?4,"Yes     Build a filter based Semantic Types and Classification Codes"
"RTN","LEXDFSS",73,0)
 W !,?4,"No      Exit without building a filter",! Q
"RTN","LEXDFSS",74,0)
ASSEM ; Assemble the return value FILTER^NAME
"RTN","LEXDFSS",75,0)
 N LEXSTR,LEXNAM,LEXFIL S (LEXNAM,LEXFIL)=""
"RTN","LEXDFSS",76,0)
 I $L($G(LEXSTY)),$D(LEXSRC) D
"RTN","LEXDFSS",77,0)
 . S LEXSTR=LEXSTY
"RTN","LEXDFSS",78,0)
 . I $L($G(LEXSRC)),$G(LEXSRC)'[U S LEXSTR=LEXSTY_";"_LEXSRC
"RTN","LEXDFSS",79,0)
 . S LEXFIL="I $$SC^LEXU(Y,"_""""_LEXSTR_""""_")"
"RTN","LEXDFSS",80,0)
 I LEXFIL[U S LEXNAM=$$NAME^LEXDM3 I LEXNAM="^^" S LEXX="^^"
"RTN","LEXDFSS",81,0)
 S:LEXX["^^" LEXFIL="",LEXNAM="^" S LEXX=LEXFIL_"^"_LEXNAM Q
"RTN","LEXDFST")
0^139^B6779396
"RTN","LEXDFST",1,0)
LEXDFST ;ISL/KER - Default Filter - Semantic Types ;04/21/2014
"RTN","LEXDFST",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDFST",3,0)
 ;               
"RTN","LEXDFST",4,0)
 ; Global Variables
"RTN","LEXDFST",5,0)
 ;    None
"RTN","LEXDFST",6,0)
 ;               
"RTN","LEXDFST",7,0)
 ; External References
"RTN","LEXDFST",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDFST",9,0)
 ;               
"RTN","LEXDFST",10,0)
 ; Entry:  S X=$$EN^LEXDFST
"RTN","LEXDFST",11,0)
 ;
"RTN","LEXDFST",12,0)
 ; LEXFIL    Filter (executable)
"RTN","LEXDFST",13,0)
 ; LEXNAM    Filter Name
"RTN","LEXDFST",14,0)
 ; LEXPRO    Y/N response to proceed with building filter
"RTN","LEXDFST",15,0)
 ; LEXSTR    Filter parameters (string)
"RTN","LEXDFST",16,0)
 ; LEXX      Filter returned
"RTN","LEXDFST",17,0)
 ;
"RTN","LEXDFST",18,0)
EN(LEXX) ; Entry point S X=$$EN^LEXDFST
"RTN","LEXDFST",19,0)
 N LEXFIL,LEXPRO S LEXFIL=0 D INTRO S LEXPRO=$$PRO
"RTN","LEXDFST",20,0)
 Q:LEXPRO["^" LEXPRO Q:LEXPRO'=1 "^No filter selected"
"RTN","LEXDFST",21,0)
 S LEXX=$$EN^LEXDFSB Q:LEXX["^^" "^^"
"RTN","LEXDFST",22,0)
 Q:$P(LEXX,"^",1)="" "^No filter selected"
"RTN","LEXDFST",23,0)
 D:$P(LEXX,"^",1)'="" ASSEM
"RTN","LEXDFST",24,0)
 Q LEXX
"RTN","LEXDFST",25,0)
INTRO ; Introduction/Proceed
"RTN","LEXDFST",26,0)
 W @IOF
"RTN","LEXDFST",27,0)
 W !!,"You will be provided with ",($P(^LEX(757.11,0),U,4))-1," semantic classes.  By selecting a semantic"
"RTN","LEXDFST",28,0)
 W !,"class, each term which is found during a search of the Lexicon, and belongs"
"RTN","LEXDFST",29,0)
 W !,"to that class will be displayed for your selection.  Additionally, each"
"RTN","LEXDFST",30,0)
 W !,"semantic class contains semantic types (or sub-category) which may be excluded"
"RTN","LEXDFST",31,0)
 W !,"during the search.  Terms belonging to an ""included"" semantic class will be"
"RTN","LEXDFST",32,0)
 W !,"displayed unless they also belong to an ""excluded"" semantic type."
"RTN","LEXDFST",33,0)
 Q
"RTN","LEXDFST",34,0)
PRO(LEXX) ; OK to proceed Y/N
"RTN","LEXDFST",35,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !!
"RTN","LEXDFST",36,0)
 S DIR("A")="Do you wish to continue:  ",DIR("B")="YES"
"RTN","LEXDFST",37,0)
 S DIR("?")="Answer Yes or No",DIR("??")="^D PROH^LEXDFST"
"RTN","LEXDFST",38,0)
 S DIR(0)="YAO" D ^DIR S LEXX=Y Q LEXX
"RTN","LEXDFST",39,0)
PROH ; Proceed help
"RTN","LEXDFST",40,0)
 W !!,?2,"Answer"
"RTN","LEXDFST",41,0)
 W !!,?4,"Yes     Continue to build a filter based on Semantic Types"
"RTN","LEXDFST",42,0)
 W !,?4,"No      Exit without building a filter",! Q
"RTN","LEXDFST",43,0)
ASSEM ; Assemble the return value FILTER^NAME
"RTN","LEXDFST",44,0)
 N LEXNAM,LEXFIL S (LEXNAM,LEXFIL)="",LEXFIL=$P(LEXX,"^",1)
"RTN","LEXDFST",45,0)
 I $L($G(LEXFIL)) S LEXFIL="I $$SC^LEXU(Y,"_""""_LEXFIL_""""_")"
"RTN","LEXDFST",46,0)
 I LEXFIL[U S LEXNAM=$$NAME^LEXDM3 I LEXNAM="^^" S LEXX="^^"
"RTN","LEXDFST",47,0)
 S:LEXX["^^" LEXFIL="",LEXNAM="^" S LEXX=LEXFIL_"^"_LEXNAM Q
"RTN","LEXDM")
0^177^B15365543
"RTN","LEXDM",1,0)
LEXDM ;ISL/KER - Default Misc - Mod/Del Sel/Create ;04/21/2014
"RTN","LEXDM",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXDM",3,0)
 ;               
"RTN","LEXDM",4,0)
 ; Global Variables
"RTN","LEXDM",5,0)
 ;    None
"RTN","LEXDM",6,0)
 ;               
"RTN","LEXDM",7,0)
 ; External References
"RTN","LEXDM",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDM",9,0)
 ;               
"RTN","LEXDM",10,0)
 ; Entry:  S X=$$MOD^LEXDM(X)
"RTN","LEXDM",11,0)
 ; Input   X  1=Filter, 2=Display, 3=Vocabulary or 4=Context
"RTN","LEXDM",12,0)
 ; Returns  "^^" Double up-arrow, 0 no action taken, 1 Modify
"RTN","LEXDM",13,0)
 ;          default entry or "@" delete default entry
"RTN","LEXDM",14,0)
 ;
"RTN","LEXDM",15,0)
MOD(LEXX) ; Modify or Delete
"RTN","LEXDM",16,0)
 ;
"RTN","LEXDM",17,0)
 S LEXX=+($G(LEXX)) Q:LEXX<0 0 S LEXX=LEXX\1  Q:LEXX>4 0
"RTN","LEXDM",18,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDM",19,0)
 S:LEXX=1 DIR("A",1)="search filter" S:LEXX=2 DIR("A",1)="display format"
"RTN","LEXDM",20,0)
 S:LEXX=3 DIR("A",1)="vocabulary" S:LEXX=4 DIR("A",1)="shortcut context"
"RTN","LEXDM",21,0)
 S:$L($G(DIR("A",1))) DIR("A",1)="User default "_DIR("A",1)
"RTN","LEXDM",22,0)
 S DIR("A",3)="  1  Modify",DIR("A",4)="  2  Delete"
"RTN","LEXDM",23,0)
 S (DIR("A",2),DIR("A",5))="  "
"RTN","LEXDM",24,0)
 S:LEXX=1 DIR(0)="SAO^1:Modify Default Filter;2:Delete Default Filter"
"RTN","LEXDM",25,0)
 S:LEXX=2 DIR(0)="SAO^1:Modify Default Display;2:Delete Default Display"
"RTN","LEXDM",26,0)
 S:LEXX=3 DIR(0)="SAO^1:Modify Default Vocabulary;2:Delete Default Vocabulary"
"RTN","LEXDM",27,0)
 S:LEXX=4 DIR(0)="SAO^1:Modify Default Shortcut Context;2:Delete Default Shortcut Context"
"RTN","LEXDM",28,0)
 S DIR("A")="Select:  ",DIR("B")="1"
"RTN","LEXDM",29,0)
 D ^DIR S LEXX=$S(X=1:1,X=2:"@",X="@":"@",1:0) S:Y="^^" LEXX=Y Q LEXX
"RTN","LEXDM",30,0)
 ;
"RTN","LEXDM",31,0)
 ;-----------------------------------------------------------------
"RTN","LEXDM",32,0)
 ; Entry:  S X=$$MTH^LEXDM(X)
"RTN","LEXDM",33,0)
 ; Input   X  1=Filter, 2=Display
"RTN","LEXDM",34,0)
 ; Returns "^^" Timeout or Double-uparrow, "^" Method not
"RTN","LEXDM",35,0)
 ;         selected, 1 Select default from a predefined list
"RTN","LEXDM",36,0)
 ;         or 2 Create a user defined default
"RTN","LEXDM",37,0)
 ;
"RTN","LEXDM",38,0)
 ; LEXM   Method of building string
"RTN","LEXDM",39,0)
 ; LEXF   Flag, indicates the default type
"RTN","LEXDM",40,0)
 ;
"RTN","LEXDM",41,0)
MTH(LEXX) ; Method - Select a predefined or Create new
"RTN","LEXDM",42,0)
 Q:'$L($G(LEXX)) "" Q:+LEXX'>0 "" Q:+LEXX'<3 ""
"RTN","LEXDM",43,0)
 N LEXF,LEXM S LEXF=+LEXX,LEXM=$$METH W:+LEXM=1!(+LEXM=2) !!
"RTN","LEXDM",44,0)
 S LEXX=LEXM S:"12"[LEXM LEXX=LEXM
"RTN","LEXDM",45,0)
 S:'$L($G(LEXM))!(LEXM="^") LEXX="^" S:LEXM="^^" LEXX="^^"
"RTN","LEXDM",46,0)
 Q LEXX
"RTN","LEXDM",47,0)
METH(LEXX) ; Select method
"RTN","LEXDM",48,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDM",49,0)
 I +LEXF=1 D
"RTN","LEXDM",50,0)
 . S DIR("A",1)="Search filters (screens) to limit the response"
"RTN","LEXDM",51,0)
 . S DIR("A",3)="  1  Select from predefined filters"
"RTN","LEXDM",52,0)
 . S DIR("A",4)="  2  Create your own filter"
"RTN","LEXDM",53,0)
 . S DIR("??")="^D HF^LEXDM"
"RTN","LEXDM",54,0)
 I +LEXF=2 D
"RTN","LEXDM",55,0)
 . S DIR("A",1)="Display format to be used during look-up"
"RTN","LEXDM",56,0)
 . S DIR("A",3)="  1  Select from predefined display formats"
"RTN","LEXDM",57,0)
 . S DIR("A",4)="  2  Create your own display format"
"RTN","LEXDM",58,0)
 . S DIR("??")="^D HD^LEXDM"
"RTN","LEXDM",59,0)
 S (DIR("A",2),DIR("A",5))="  "
"RTN","LEXDM",60,0)
 S DIR(0)="SAO^1:Predefined Set;2:Create your own set"
"RTN","LEXDM",61,0)
 S DIR("A")="Select:  ",DIR("B")="1"
"RTN","LEXDM",62,0)
 D ^DIR S LEXX=$S(+Y>0:+Y,1:Y) S:$D(DTOUT) LEXX="^^" Q LEXX
"RTN","LEXDM",63,0)
HF ; Help for filters - DIC("S")
"RTN","LEXDM",64,0)
 W !!,"When conducting searches in the Lexicon, you may find that many of the"
"RTN","LEXDM",65,0)
 W !,"expressions found are not reasonable in the context of intended use."
"RTN","LEXDM",66,0)
 W !,"Many of these ""unreasonable"" expressions can be filtered out during the"
"RTN","LEXDM",67,0)
 W !,"search, providing a much smaller and more meaningful list of expressions"
"RTN","LEXDM",68,0)
 W !,"to select from.  Several of these filters have been predefined and made "
"RTN","LEXDM",69,0)
 W !,"available.  You may select from this list of predefined filters or create"
"RTN","LEXDM",70,0)
 W !,"your own." Q
"RTN","LEXDM",71,0)
HD ; Help for display - LEXSHOW
"RTN","LEXDM",72,0)
 W !!,"When conducting searches in the Lexicon, you may alter the display format"
"RTN","LEXDM",73,0)
 W !,"of the selection list.  There are several commonly used displays which"
"RTN","LEXDM",74,0)
 W !,"have been predefined and made available.  You may select from this list or"
"RTN","LEXDM",75,0)
 W !,"create your own." Q
"RTN","LEXDM2")
0^77^B14152696
"RTN","LEXDM2",1,0)
LEXDM2 ;ISL/KER - Default Misc - Ask to delete ;04/21/2014
"RTN","LEXDM2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDM2",3,0)
 ;               
"RTN","LEXDM2",4,0)
 ; Global Variables
"RTN","LEXDM2",5,0)
 ;    ^LEX(757.31)        N/A
"RTN","LEXDM2",6,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDM2",7,0)
 ;               
"RTN","LEXDM2",8,0)
 ; External References
"RTN","LEXDM2",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDM2",10,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDM2",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDM2",12,0)
 ;               
"RTN","LEXDM2",13,0)
 ; Entry:  S X=$$EN^LEXDM2(USER,AP,DEF)
"RTN","LEXDM2",14,0)
 ;
"RTN","LEXDM2",15,0)
 ; Input   
"RTN","LEXDM2",16,0)
 ;         USER    DUZ
"RTN","LEXDM2",17,0)
 ;         AP      Application
"RTN","LEXDM2",18,0)
 ;         DEF     Default (1 thru 4)
"RTN","LEXDM2",19,0)
 ;
"RTN","LEXDM2",20,0)
 ; Returns
"RTN","LEXDM2",21,0)
 ;         0       Do not Delete default
"RTN","LEXDM2",22,0)
 ;         1       Delete default
"RTN","LEXDM2",23,0)
 ;
"RTN","LEXDM2",24,0)
EN(LEXUSER,LEXAP,LEXDEF) ;
"RTN","LEXDM2",25,0)
 ; A few good reasons to quit
"RTN","LEXDM2",26,0)
 Q:+($G(LEXUSER))=0 0  Q:'$L($$GET1^DIQ(200,+($G(DUZ)),.01)) 0
"RTN","LEXDM2",27,0)
 Q:+($G(LEXAP))=0 0  Q:'$D(^LEXT(757.2,+($G(LEXAP)))) 0
"RTN","LEXDM2",28,0)
 Q:+($P($G(^LEXT(757.2,+LEXAP,5)),"^",3))'>0 0
"RTN","LEXDM2",29,0)
 Q:+($G(LEXDEF))<1!(+($G(LEXDEF))>4) 0
"RTN","LEXDM2",30,0)
 ; Check for default
"RTN","LEXDM2",31,0)
 N LEXOV,LEXN S LEXN=""
"RTN","LEXDM2",32,0)
 S LEXOV=$G(^LEXT(757.2,LEXAP,200,LEXUSER,LEXDEF))
"RTN","LEXDM2",33,0)
 S LEXN=$G(^LEXT(757.2,LEXAP,200,LEXUSER,(LEXDEF+.5)))
"RTN","LEXDM2",34,0)
 Q:LEXOV="" 0 D:$L(LEXOV) ASK Q LEXDEF
"RTN","LEXDM2",35,0)
 ;
"RTN","LEXDM2",36,0)
ASK ; Ask to delete
"RTN","LEXDM2",37,0)
 W ! N LEXYPE,DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y S LEXYPE=$S(LEXDEF=1:"filter",LEXDEF=2:"display",LEXDEF=3:"vocabulary",1:"shortcut context")
"RTN","LEXDM2",38,0)
 I LEXN="" S:LEXDEF=1 LEXN=$$N1(LEXOV) S:LEXDEF=2 LEXN=$$N2(LEXOV) S:LEXDEF=3 LEXN=$$N3(LEXOV) S:LEXDEF=4 LEXN=$$N4(LEXOV)
"RTN","LEXDM2",39,0)
 S DIR("A",1)="You did not select"_$S(LEXDEF=1:"/create",LEXDEF=2:"/create",1:"")_" a default "_$$UP^XLFSTR(LEXYPE)_", however you already"
"RTN","LEXDM2",40,0)
 S DIR("A",2)="have a default "_$$UP^XLFSTR(LEXYPE)_" on file.  Did you want to delete"
"RTN","LEXDM2",41,0)
 S DIR("A",3)="your current default?",DIR("A",4)="",DIR("A",5)="   "_LEXN,DIR("A",6)=""
"RTN","LEXDM2",42,0)
 S DIR("A")="Delete?  ",DIR("B")="NO",DIR(0)="YAO" D ^DIR K DIR S LEXDEF=+Y Q
"RTN","LEXDM2",43,0)
 ;
"RTN","LEXDM2",44,0)
 ; Get default names (N1, N2, N3, and N4)
"RTN","LEXDM2",45,0)
 ;
"RTN","LEXDM2",46,0)
 ;   Input   LEXX - The actual value for the default
"RTN","LEXDM2",47,0)
 ;   Returns LEXX - The name of the default value
"RTN","LEXDM2",48,0)
 ;
"RTN","LEXDM2",49,0)
N1(LEXX) ; Filter name
"RTN","LEXDM2",50,0)
 Q:'$L($G(LEXX)) "Unknown filter"
"RTN","LEXDM2",51,0)
 N LEXSS,LEXN,LEXSO,LEXI,LEXSP S LEXN="",LEXSP=0,LEXSS=$E(LEXX,1,63)
"RTN","LEXDM2",52,0)
 S LEXSO=$E(LEXSS,1,($L(LEXSS)-1))_$C($A($E(LEXSS,$L(LEXSS)))-1)_"~"
"RTN","LEXDM2",53,0)
 F  S LEXSO=$O(^LEX(757.3,"AS",LEXSO)) Q:+LEXSP!(LEXSO'[LEXSS)  D
"RTN","LEXDM2",54,0)
 . S LEXI=0 F  S LEXI=$O(^LEX(757.3,"AS",LEXSO,LEXI)) Q:+LEXI=0!(+LEXSP'=0)  D
"RTN","LEXDM2",55,0)
 . . S:$G(^LEX(757.3,+LEXI,1))=LEXX LEXSP=LEXI
"RTN","LEXDM2",56,0)
 . . S:+LEXSP>0 LEXN=$P($G(^LEX(757.3,+LEXSP,0)),"^",1)
"RTN","LEXDM2",57,0)
 S LEXX=$S($L(LEXN):LEXN,1:"User defined") Q LEXX
"RTN","LEXDM2",58,0)
N2(LEXX) ; Display name
"RTN","LEXDM2",59,0)
 Q:'$L($G(LEXX)) "Unknown display"
"RTN","LEXDM2",60,0)
 N LEXDP,LEXDS,LEXN S LEXDP=0,LEXN="",LEXDS=$E(LEXX,1,63)
"RTN","LEXDM2",61,0)
 S LEXDS=$E(LEXDS,1,($L(LEXDS)-1))_$C($A($E(LEXDS,1,$L(LEXDS)))-1)_"~"
"RTN","LEXDM2",62,0)
 F  S LEXDS=$O(^LEX(757.31,"ADSP",LEXDS)) Q:LEXDS'[LEXX!($L($G(LEXN)))  D
"RTN","LEXDM2",63,0)
 . S LEXDP=0 F  S LEXDP=$O(^LEX(757.31,"ADSP",LEXDS,LEXDP)) Q:+LEXDP=0!($L($G(LEXN)))  D
"RTN","LEXDM2",64,0)
 . . I ^LEX(757.31,+LEXDP,1)=LEXX S LEXN=$P(^LEX(757.31,+LEXDP,0),"^",1)
"RTN","LEXDM2",65,0)
 S LEXX=$S($L(LEXN):LEXN,1:"User defined") Q LEXX
"RTN","LEXDM2",66,0)
N3(LEXX) ; Vocabulary name
"RTN","LEXDM2",67,0)
 Q:'$L($G(LEXX)) "Unknown vocabulary"
"RTN","LEXDM2",68,0)
 Q:'$D(^LEXT(757.2,"AA",LEXX)) "Unknown vocabulary"
"RTN","LEXDM2",69,0)
 N LEXN S LEXN=$P($G(^LEXT(757.2,$O(^LEXT(757.2,"AA",LEXX,0)),0)),"^",1)
"RTN","LEXDM2",70,0)
 S LEXX=$S($L(LEXN):LEXN,1:"Unknown vocabulary") Q LEXX
"RTN","LEXDM2",71,0)
N4(LEXX) ; Context name
"RTN","LEXDM2",72,0)
 Q:'$L($G(LEXX)) "Unknown context" Q:+LEXX=0 "Unknown context"
"RTN","LEXDM2",73,0)
 Q:'$D(^LEX(757.41,LEXX)) "Unknown context" N LEXN S LEXN=$P($G(^LEX(757.41,+LEXX,0)),"^",1)
"RTN","LEXDM2",74,0)
 S LEXX=$S($L(LEXN):LEXN,1:"Unknown context") Q LEXX
"RTN","LEXDM3")
0^140^B3366699
"RTN","LEXDM3",1,0)
LEXDM3 ;ISL/KER - Default Misc - Name Default ;04/21/2014
"RTN","LEXDM3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDM3",3,0)
 ;               
"RTN","LEXDM3",4,0)
 ; Global Variables
"RTN","LEXDM3",5,0)
 ;    None
"RTN","LEXDM3",6,0)
 ;               
"RTN","LEXDM3",7,0)
 ; External References
"RTN","LEXDM3",8,0)
 ;    $$LOW^XLFSTR        ICR  10103
"RTN","LEXDM3",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDM3",10,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDM3",11,0)
 ;               
"RTN","LEXDM3",12,0)
 ; LEXFIL    Flag for Filter v.s. Display
"RTN","LEXDM3",13,0)
 ; LEXX      Value returned
"RTN","LEXDM3",14,0)
 ; LEXY      Local Value of Y
"RTN","LEXDM3",15,0)
 ;
"RTN","LEXDM3",16,0)
NAME(LEXX) ; Filter/Display name - S X=$$NAME^LEXDM3
"RTN","LEXDM3",17,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT W !!
"RTN","LEXDM3",18,0)
 S LEXX=$S($D(LEXFIL):"User defined filter",1:"User defined display")
"RTN","LEXDM3",19,0)
 S DIR("A")=$S($D(LEXFIL):"Filter name:  ",1:"Display name:  ")
"RTN","LEXDM3",20,0)
 S (DIR("?"),DIR("??"))="^D NH^LEXDM3"
"RTN","LEXDM3",21,0)
 S DIR(0)="FAO^2:30" D ^DIR,NR
"RTN","LEXDM3",22,0)
 Q LEXX
"RTN","LEXDM3",23,0)
NH ; Name Help
"RTN","LEXDM3",24,0)
 W !!,"You may give a name to the ",$S($D(LEXFIL):"filter",1:"display")," you have created.  This name is"
"RTN","LEXDM3",25,0)
 W !,"informational and will only be used if you elect to display your"
"RTN","LEXDM3",26,0)
 W !,"current defaults.  This name should represent the purpose of the"
"RTN","LEXDM3",27,0)
 W !,$S($D(LEXFIL):"filter",1:"display"),", and must be 2-30 characters in length."
"RTN","LEXDM3",28,0)
 Q
"RTN","LEXDM3",29,0)
NR ; Name Reformat
"RTN","LEXDM3",30,0)
 N LEXY S LEXY=Y S:Y["^^" LEXX=LEXY Q:LEXY[U
"RTN","LEXDM3",31,0)
 I $$UP^XLFSTR(Y)'[$$UP^XLFSTR(LEXX) D
"RTN","LEXDM3",32,0)
 . S LEXY=$$UP^XLFSTR($E(Y,1))_$$LOW^XLFSTR($E(Y,2,$L(Y)))
"RTN","LEXDM3",33,0)
 . S:LEXY'="" LEXX=LEXX_"/"_LEXY
"RTN","LEXDM3",34,0)
 Q
"RTN","LEXDM4")
0^114^B31719160
"RTN","LEXDM4",1,0)
LEXDM4 ;ISL/KER - Default Misc - Files/User/Service ;04/21/2014
"RTN","LEXDM4",2,0)
 ;;2.0;LEXICON UTILITY;**4,80**;Sep 23, 1996;Build 1
"RTN","LEXDM4",3,0)
 ;               
"RTN","LEXDM4",4,0)
 ; Global Variables
"RTN","LEXDM4",5,0)
 ;    ^DIC(49)            ICR  10093
"RTN","LEXDM4",6,0)
 ;    ^TMP("LEXIL")       SACC 2.3.2.5.1
"RTN","LEXDM4",7,0)
 ;    ^TMP("LEXMGR")      SACC 2.3.2.5.1
"RTN","LEXDM4",8,0)
 ;    ^TMP("LEXSERV")     SACC 2.3.2.5.1
"RTN","LEXDM4",9,0)
 ;               
"RTN","LEXDM4",10,0)
 ; External References
"RTN","LEXDM4",11,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDM4",12,0)
 ;    MIX^DIC1            ICR  10007
"RTN","LEXDM4",13,0)
 ;    ^DIC                ICR  10006
"RTN","LEXDM4",14,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDM4",15,0)
 ;               
"RTN","LEXDM4",16,0)
DFI(LEXX) ; Select one application
"RTN","LEXDM4",17,0)
 N D,DIC,DTOUT,DUOUT I $D(LEXX),LEXX'="" S X=LEXX,DIC(0)="QM"
"RTN","LEXDM4",18,0)
 I '$D(LEXX) S DIC(0)="AQEM" W !
"RTN","LEXDM4",19,0)
 S DIC("W")="W ?45,$P($G(^(5)),U,5)"
"RTN","LEXDM4",20,0)
 S DIC="^LEXT(757.2,",DIC("S")="I +($P($G(^(5)),U,3))>0"
"RTN","LEXDM4",21,0)
 S D="B^C^AN" S DIC("A")="Select application:  " D MIX^DIC1 K DIC
"RTN","LEXDM4",22,0)
 S LEXX=$S(+Y>0:+Y,1:0)
"RTN","LEXDM4",23,0)
 Q LEXX
"RTN","LEXDM4",24,0)
FI(LEXX) ; Select one or more applications
"RTN","LEXDM4",25,0)
FI2 W ! N LEXMAX,LEXI,LEXA,LEXAI,LEXAN,LEXC,LEXLEN
"RTN","LEXDM4",26,0)
 K ^TMP("LEXIL",$J)
"RTN","LEXDM4",27,0)
 S ^TMP("LEXIL",$J,0)=0
"RTN","LEXDM4",28,0)
FIB ; Build the list of files/applications
"RTN","LEXDM4",29,0)
 S (LEXAI,LEXC,LEXLEN)=0,(LEXAN,LEXA)=""
"RTN","LEXDM4",30,0)
 F  S LEXA=$O(^LEXT(757.2,"ADEF",LEXA)) Q:LEXA=""  D
"RTN","LEXDM4",31,0)
 . S LEXI=$O(^LEXT(757.2,"ADEF",LEXA,0))
"RTN","LEXDM4",32,0)
 . S LEXAN=$P(^LEXT(757.2,LEXI,0),U,1)
"RTN","LEXDM4",33,0)
 . Q:$D(^TMP("LEXIL",$J,"B",LEXAN))
"RTN","LEXDM4",34,0)
 . S:$L(LEXAN)>LEXLEN LEXLEN=$L(LEXAN)
"RTN","LEXDM4",35,0)
 . S LEXC=LEXC+1,^TMP("LEXIL",$J,LEXC)=LEXAN_U_LEXI,^TMP("LEXIL",$J,0)=^TMP("LEXIL",$J,0)+1,^TMP("LEXIL",$J,"B",LEXAN)=LEXC,^TMP("LEXIL",$J,"C",$$UP^XLFSTR(LEXAN))=LEXC
"RTN","LEXDM4",36,0)
 I $D(LEXMGR) D  ; Pch 4
"RTN","LEXDM4",37,0)
 . S LEXC=+($G(^TMP("LEXIL",$J,0)))+1
"RTN","LEXDM4",38,0)
 . S ^TMP("LEXIL",$J,0)=LEXC,^TMP("LEXIL",$J,LEXC)="All of the Above"
"RTN","LEXDM4",39,0)
 . S ^TMP("LEXIL",$J,"B","All of the Above")=LEXC,^TMP("LEXIL",$J,"C","ALL OF THE ABOVE")=LEXC
"RTN","LEXDM4",40,0)
 . S:$L($G(^TMP("LEXIL",$J,LEXC)))>LEXLEN LEXLEN=$L($G(^TMP("LEXIL",$J,LEXC)))
"RTN","LEXDM4",41,0)
FIP ; Prompt user
"RTN","LEXDM4",42,0)
 G:'$D(^TMP("LEXIL",$J)) FIQ
"RTN","LEXDM4",43,0)
 W !,"Applications"
"RTN","LEXDM4",44,0)
FIL ; Display the list
"RTN","LEXDM4",45,0)
 S LEXMAX=^TMP("LEXIL",$J,0)
"RTN","LEXDM4",46,0)
 W ! F LEXI=1:1:^TMP("LEXIL",$J,0) W !,$J(LEXI,6),"   ",$E($P(^TMP("LEXIL",$J,LEXI),U,1),1,50)
"RTN","LEXDM4",47,0)
 S LEXX=$$FIS G:LEXX="" FIQ S LEXX=+LEXX I '$D(LEXMGR),+LEXX>0,+LEXX<LEXMAX+1 S LEXX=$P(^TMP("LEXIL",$J,LEXX),U,2) G FIQ
"RTN","LEXDM4",48,0)
 I $D(LEXMGR),+LEXX>0,+LEXX<LEXMAX D  G FIQ
"RTN","LEXDM4",49,0)
 . S ^TMP("LEXMGR",$J,"FI",0)=1
"RTN","LEXDM4",50,0)
 . S ^TMP("LEXMGR",$J,"FI",1)=$P(^TMP("LEXIL",$J,LEXX),U,2)_U_$S($P(^TMP("LEXIL",$J,LEXX),U,1)'[" (":$P(^TMP("LEXIL",$J,LEXX),U,1),1:$P($P(^TMP("LEXIL",$J,LEXX),U,1)," (",1))
"RTN","LEXDM4",51,0)
 . S LEXX=$P(^TMP("LEXIL",$J,LEXX),U,2)
"RTN","LEXDM4",52,0)
 I $D(LEXMGR),LEXX=LEXMAX S LEXX="" D  G FIQ
"RTN","LEXDM4",53,0)
 . F LEXI=1:1:^TMP("LEXIL",$J,0) D
"RTN","LEXDM4",54,0)
 . . S ^TMP("LEXMGR",$J,"FI",LEXI)=$P(^TMP("LEXIL",$J,LEXI),U,2)_U_$S($P(^TMP("LEXIL",$J,LEXI),U,1)'[" (":$P(^TMP("LEXIL",$J,LEXI),U,1),1:$P($P(^TMP("LEXIL",$J,LEXI),U,1)," (",1))
"RTN","LEXDM4",55,0)
 . . S LEXX=LEXX_";"_$P(^TMP("LEXIL",$J,LEXI),U,2)
"RTN","LEXDM4",56,0)
 . . S ^TMP("LEXMGR",$J,"FI",0)=LEXI
"RTN","LEXDM4",57,0)
 . F  Q:$E(LEXX,1)'=";"  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXDM4",58,0)
 . F  Q:$E(LEXX,$L(LEXX))'=";"  S LEXX=$E(LEXX,1,($L(LEXX)-1))
"RTN","LEXDM4",59,0)
 G FIP Q
"RTN","LEXDM4",60,0)
FIS(X) ; Select from the list
"RTN","LEXDM4",61,0)
 W ! N Y,DIR,DIC,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXDM4",62,0)
 S LEXLEN=+($G(LEXLEN)) S:LEXLEN=0 LEXLEN=15
"RTN","LEXDM4",63,0)
 S DIR("A")="Select (1-"_LEXMAX_"):  "
"RTN","LEXDM4",64,0)
 S DIR("?")="^D FIHLP^LEXDM4"
"RTN","LEXDM4",65,0)
 S DIR(0)="FAO^1:"_LEXLEN_"^S X=+($$FIW^LEXDM4(X)) K:'X X"  ; PCH 4
"RTN","LEXDM4",66,0)
 D ^DIR S:$D(DTOUT)!($D(DUOUT)) X="" S:$L(X) X=$$FIW(X) Q X  ; PCH 4
"RTN","LEXDM4",67,0)
FIHLP ; Help for selection
"RTN","LEXDM4",68,0)
 I $D(LEXMGR) D
"RTN","LEXDM4",69,0)
 . W !!,"User defaults for both the Lexicon and applications using the Lexicon"
"RTN","LEXDM4",70,0)
 . W !,"(by agreement) will be stored along with their application definitions"
"RTN","LEXDM4",71,0)
 . W !,"contained in the Subset Definition File."
"RTN","LEXDM4",72,0)
 . W !!,"You may set user defaults for one or all of the listed applications"
"RTN","LEXDM4",73,0)
 I '$D(LEXMGR) D
"RTN","LEXDM4",74,0)
 . W !!,"User defaults for the Lexicon may be set for individual applications."
"RTN","LEXDM4",75,0)
 . W !!!,"Select an application:"
"RTN","LEXDM4",76,0)
 S LEXMAX=^TMP("LEXIL",$J,0) S:$D(LEXMGR) LEXMAX=LEXMAX+1
"RTN","LEXDM4",77,0)
 W ! F LEXI=1:1:^TMP("LEXIL",$J,0) D
"RTN","LEXDM4",78,0)
 . W !,$J(LEXI,6),"   ",$E($P(^TMP("LEXIL",$J,LEXI),U,1),1,50)
"RTN","LEXDM4",79,0)
 Q
"RTN","LEXDM4",80,0)
FIQ ; Quit application selection
"RTN","LEXDM4",81,0)
 K ^TMP("LEXIL",$J),^TMP("LEXMGR",$J)
"RTN","LEXDM4",82,0)
 K LEXA,LEXAI,LEXAN,LEXC,LEXI,LEXMAX
"RTN","LEXDM4",83,0)
 Q LEXX
"RTN","LEXDM4",84,0)
FIW(LEXX) ; Input transform for DIR  Pch 4
"RTN","LEXDM4",85,0)
 S LEXX=$G(LEXX) S:$G(LEXX)["^" LEXX="^" Q:LEXX["^" LEXX Q:$G(LEXX)="" ""
"RTN","LEXDM4",86,0)
 I +($G(LEXX))>0,$D(^TMP("LEXIL",$J,+($G(LEXX)))) S LEXX=+($G(LEXX)) Q LEXX
"RTN","LEXDM4",87,0)
 N LEXU,LEXO,LEXOC,LEXCT S LEXU=$TR($G(LEXX),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ") Q:'$L(LEXU) LEXX
"RTN","LEXDM4",88,0)
 S LEXCT=0,(LEXO,LEXOC)=$E(LEXU,1,($L(LEXU)-1))_$C($A($E(LEXU,$L(LEXU)))-1)_"~"
"RTN","LEXDM4",89,0)
 F  S LEXOC=$O(^TMP("LEXIL",$J,"C",LEXOC)) Q:LEXOC=""!($E(LEXOC,1,$L(LEXU))'=LEXU)  S LEXCT=LEXCT+1
"RTN","LEXDM4",90,0)
 S LEXOC="" I LEXCT=1 S LEXOC=$O(^TMP("LEXIL",$J,"C",LEXO)),LEXOC=+($G(^TMP("LEXIL",$J,"C",LEXOC)))
"RTN","LEXDM4",91,0)
 I +LEXOC>0,$D(^TMP("LEXIL",$J,+LEXOC)) S LEXX=+LEXOC Q LEXX
"RTN","LEXDM4",92,0)
 Q ""
"RTN","LEXDM4",93,0)
SERV(LEXX) ; Select a service
"RTN","LEXDM4",94,0)
 S DIC="^DIC(49,",DIC("A")="Select users by service:  ",DIC(0)="AMEQ"
"RTN","LEXDM4",95,0)
 N LEXI S LEXI="" F  S LEXI=$O(^DIC(49,"B",LEXI)) Q:LEXI=""  D  Q:LEXI=""
"RTN","LEXDM4",96,0)
 . I LEXI["MEDI",((LEXI["GEN")!(LEXI["INTER")) S ^TMP("LEXSERV",$J,1)=$O(^DIC(49,"B",LEXI,0))
"RTN","LEXDM4",97,0)
 . I LEXI["AMBULAT" S ^TMP("LEXSERV",$J,2)=$O(^DIC(49,"B",LEXI,0))
"RTN","LEXDM4",98,0)
 . I LEXI["OUT",LEXI["PAT" S ^TMP("LEXSERV",$J,2)=$O(^DIC(49,"B",LEXI,0))
"RTN","LEXDM4",99,0)
 I $D(^TMP("LEXSERV",$J,1)) S DIC("B")=$P(^DIC(49,^TMP("LEXSERV",$J,1),0),U,1) K ^TMP("LEXSERV",$J)
"RTN","LEXDM4",100,0)
 I $D(^TMP("LEXSERV",$J,2)) S DIC("B")=$P(^DIC(49,^TMP("LEXSERV",$J,2),0),U,1)
"RTN","LEXDM4",101,0)
 K ^TMP("LEXSERV",$J) D ^DIC S LEXX=Y W:+Y'>0 "  No Service Selected"
"RTN","LEXDM4",102,0)
 S:X["^" LEXX="^" S:X["^^" LEXX="^^" K LEXI,Y,X,DIC,DIC("A"),DIC(0),DIC("B")
"RTN","LEXDM4",103,0)
 S:LEXX'[U&(+LEXX'>0) LEXX=""
"RTN","LEXDM4",104,0)
 Q LEXX
"RTN","LEXDM4",105,0)
USER(LEXX) ; Select a single user
"RTN","LEXDM4",106,0)
 K DIC N X,Y S DIC="^VA(200,",DIC("A")="Select a single user:  ",DIC(0)="AMEQ"
"RTN","LEXDM4",107,0)
 D ^DIC S LEXX=Y W:+Y'>0 "  No User Selected"
"RTN","LEXDM4",108,0)
 S:X["^" LEXX="^" S:X["^^" LEXX="^^" K Y,X,DIC,DIC("A"),DIC(0),DIC("B")
"RTN","LEXDM4",109,0)
 S:LEXX'[U&(+LEXX'>0) LEXX=""
"RTN","LEXDM4",110,0)
 Q LEXX
"RTN","LEXDMG")
0^141^B10875914
"RTN","LEXDMG",1,0)
LEXDMG ;ISL/KER - Defaults - Manager Options ;04/21/2014
"RTN","LEXDMG",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMG",3,0)
 ;               
"RTN","LEXDMG",4,0)
 ; Global Variables
"RTN","LEXDMG",5,0)
 ;    None
"RTN","LEXDMG",6,0)
 ;               
"RTN","LEXDMG",7,0)
 ; External References
"RTN","LEXDMG",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDMG",9,0)
 ;               
"RTN","LEXDMG",10,0)
 ; LEXDICS     Filter
"RTN","LEXDMG",11,0)
 ; LEXDICS(0)  Filter name
"RTN","LEXDMG",12,0)
 ; LEXSHOW     Display
"RTN","LEXDMG",13,0)
 ; LEXSHOW(0)  Display name
"RTN","LEXDMG",14,0)
 ; LEXSUB      Vocabulary
"RTN","LEXDMG",15,0)
 ; LEXSUB(0)   Vocabulary name
"RTN","LEXDMG",16,0)
 ; LEXCTX      Shortcut Context
"RTN","LEXDMG",17,0)
 ; LEXCTX(0)   Shortcut Context name
"RTN","LEXDMG",18,0)
 ;
"RTN","LEXDMG",19,0)
 ; LEXAP       Application
"RTN","LEXDMG",20,0)
 ; LEXCHG      Flag for 1) defaults changed 0) not changed
"RTN","LEXDMG",21,0)
 ; LEXDNAM     Default name
"RTN","LEXDMG",22,0)
 ; LEXDVAL     Default value
"RTN","LEXDMG",23,0)
 ; LEXGET      Executable code which gets the default values
"RTN","LEXDMG",24,0)
 ; LEXMAX      Maximum number of defaults
"RTN","LEXDMG",25,0)
 ; LEXMGR      Flag - Manager
"RTN","LEXDMG",26,0)
 ; LEXRTN      Routine name which sets the defaults values
"RTN","LEXDMG",27,0)
 ; LEXSEL      User input/selection
"RTN","LEXDMG",28,0)
 ;
"RTN","LEXDMG",29,0)
 W @IOF
"RTN","LEXDMG",30,0)
 N LEXDICS,LEXSHOW,LEXSUB,LEXCTX,LEXMAX
"RTN","LEXDMG",31,0)
 N LEXAP,LEXCHG,LEXDNAM,LEXDVAL,LEXGET
"RTN","LEXDMG",32,0)
 N LEXRTN,LEXSEL,LEXMGR
"RTN","LEXDMG",33,0)
 S (LEXMGR,LEXSEL,LEXDICS,LEXDICS(0),LEXSHOW,LEXSHOW(0))=""
"RTN","LEXDMG",34,0)
 S (LEXSUB,LEXSUB(0),LEXCTX,LEXCTX(0))="",LEXMAX=4
"RTN","LEXDMG",35,0)
APPS ; Defaults for an application
"RTN","LEXDMG",36,0)
 S LEXCHG=0
"RTN","LEXDMG",37,0)
APP ; Get the application(s) - $$FI^LEXDM4
"RTN","LEXDMG",38,0)
 S LEXAP=$$FI^LEXDM4
"RTN","LEXDMG",39,0)
 I LEXAP="" W !!,"No application(s) selected",! G EXIT
"RTN","LEXDMG",40,0)
 D DEFMENU G DEFOPT
"RTN","LEXDMG",41,0)
DEFMENU ; Edit Defaults Menu
"RTN","LEXDMG",42,0)
 W !!,"Lexicon Defaults:"
"RTN","LEXDMG",43,0)
 W !!,"  1   Filter     "
"RTN","LEXDMG",44,0)
 W $S($L($G(LEXDICS(0))):"- ",1:""),$G(LEXDICS(0))
"RTN","LEXDMG",45,0)
 W:'$L($G(LEXDICS(0))) "  Unselected"
"RTN","LEXDMG",46,0)
 W !,"  2   Display    "
"RTN","LEXDMG",47,0)
 W $S($L($G(LEXSHOW(0))):"- ",1:""),$G(LEXSHOW(0))
"RTN","LEXDMG",48,0)
 W:'$L($G(LEXSHOW(0))) "  Unselected"
"RTN","LEXDMG",49,0)
 W !,"  3   Vocabulary "
"RTN","LEXDMG",50,0)
 W $S($L($G(LEXSUB(0))):"- ",1:""),$G(LEXSUB(0))
"RTN","LEXDMG",51,0)
 W:'$L($G(LEXSUB(0))) "  Unselected"
"RTN","LEXDMG",52,0)
 W !,"  4   Shortcuts  "
"RTN","LEXDMG",53,0)
 W $S($L($G(LEXCTX(0))):"- ",1:""),$G(LEXCTX(0))
"RTN","LEXDMG",54,0)
 W:'$L($G(LEXCTX(0))) "  Unselected"
"RTN","LEXDMG",55,0)
 W ! Q
"RTN","LEXDMG",56,0)
DEFOPT ; Get user input LEXSEL from ^DIR
"RTN","LEXDMG",57,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","LEXDMG",58,0)
 G:$G(LEXSEL)["^^" EXIT
"RTN","LEXDMG",59,0)
 S DIR("A")="Select default to modify (1-"_LEXMAX_"):  "
"RTN","LEXDMG",60,0)
 S DIR("?")="^D DEFHLP^LEXDMG"
"RTN","LEXDMG",61,0)
 S DIR(0)="NAO^1:"_LEXMAX_":0" D ^DIR
"RTN","LEXDMG",62,0)
 S LEXSEL=$S($D(DTOUT):"",X["^^":"^^",X[U&(X'["^^"):U,1:X) K DIR
"RTN","LEXDMG",63,0)
 G:LEXSEL=U APPS G:LEXSEL="^^" EXIT
"RTN","LEXDMG",64,0)
 G:+LEXSEL=0&(LEXCHG=0) EXIT G:+LEXSEL=0&(LEXCHG>0) USR
"RTN","LEXDMG",65,0)
 ; Get Filter - $$MGR^LEXDFL
"RTN","LEXDMG",66,0)
 I +LEXSEL=1 D  G DEFOPT
"RTN","LEXDMG",67,0)
 . D GETDEF("LEXDICS","LEXDICS(0)","$$MGR^LEXDFL")
"RTN","LEXDMG",68,0)
 ; Get Display - $$MGR^LEXDCC
"RTN","LEXDMG",69,0)
 I +LEXSEL=2 D  G DEFOPT
"RTN","LEXDMG",70,0)
 . D GETDEF("LEXSHOW","LEXSHOW(0)","$$MGR^LEXDCC")
"RTN","LEXDMG",71,0)
 ; Get Vocabulary - $$MGR^LEXDVO
"RTN","LEXDMG",72,0)
 I +LEXSEL=3 D  G DEFOPT
"RTN","LEXDMG",73,0)
 . D GETDEF("LEXSUB","LEXSUB(0)","$$MGR^LEXDVO")
"RTN","LEXDMG",74,0)
 ; Get Shortcut Context - $$MGR^LEXDCX
"RTN","LEXDMG",75,0)
 I +LEXSEL=4 D  G DEFOPT
"RTN","LEXDMG",76,0)
 . D GETDEF("LEXCTX","LEXCTX(0)","$$MGR^LEXDCX")
"RTN","LEXDMG",77,0)
 Q
"RTN","LEXDMG",78,0)
DEFHLP ; Help
"RTN","LEXDMG",79,0)
 W !!,"Enter 1-",LEXMAX," to modify defaults, ""^"" for previous menu,"
"RTN","LEXDMG",80,0)
 W:'LEXCHG " or ""^^""/<Return> to exit"
"RTN","LEXDMG",81,0)
 W:LEXCHG " ""^^"" to exit, or",!,"<Return> to continue."
"RTN","LEXDMG",82,0)
 D DEFMENU Q
"RTN","LEXDMG",83,0)
GETDEF(LEXDVAL,LEXDNAM,LEXRTN) ; Get the default values - X LEXGET
"RTN","LEXDMG",84,0)
 N LEXGET S LEXGET="S "_LEXDVAL_"="_LEXRTN X LEXGET
"RTN","LEXDMG",85,0)
 S:@LEXDVAL="^^" LEXSEL="^^"
"RTN","LEXDMG",86,0)
 S @LEXDNAM=$P(@LEXDVAL,U,$L(@LEXDVAL,U))
"RTN","LEXDMG",87,0)
 S @LEXDVAL=$P(@LEXDVAL,U,1,($L(@LEXDVAL,U)-1))
"RTN","LEXDMG",88,0)
 S:@LEXDVAL="" @LEXDNAM="No Change"
"RTN","LEXDMG",89,0)
 S:@LEXDVAL'="" LEXCHG=1 D:LEXSEL'["^^" DEFMENU Q
"RTN","LEXDMG",90,0)
USR ; Set defaults for a User or User Group - $$USER^LEXDMGU
"RTN","LEXDMG",91,0)
 S LEXSEL=$$USER^LEXDMGU
"RTN","LEXDMG",92,0)
 I $D(LEXSEL),LEXSEL=U D DEFMENU G DEFOPT
"RTN","LEXDMG",93,0)
EXIT ; Cleanup and quit
"RTN","LEXDMG",94,0)
 Q
"RTN","LEXDMGO")
0^178^B6104772
"RTN","LEXDMGO",1,0)
LEXDMGO ;ISL/KER - Defaults - Manager/Overwrite ;04/21/2014
"RTN","LEXDMGO",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMGO",3,0)
 ;               
"RTN","LEXDMGO",4,0)
 ; Global Variables
"RTN","LEXDMGO",5,0)
 ;    None
"RTN","LEXDMGO",6,0)
 ;               
"RTN","LEXDMGO",7,0)
 ; External References
"RTN","LEXDMGO",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDMGO",9,0)
 ;               
"RTN","LEXDMGO",10,0)
 ; LEXOVER     Flag - Overwrite user defaults (Y/N)
"RTN","LEXDMGO",11,0)
 ; LEXDNAM     Default name
"RTN","LEXDMGO",12,0)
 ; LEXDVAL     Default value
"RTN","LEXDMGO",13,0)
 ; LEXX        Return value
"RTN","LEXDMGO",14,0)
 ; 
"RTN","LEXDMGO",15,0)
OVER(LEXX) ; Replace existing defaults
"RTN","LEXDMGO",16,0)
 S LEXX=$$OVERW Q LEXX
"RTN","LEXDMGO",17,0)
OVERW(LEXX) ; Ask to overwrite (replace)
"RTN","LEXDMGO",18,0)
 W !
"RTN","LEXDMGO",19,0)
OVERP ; Get user response
"RTN","LEXDMGO",20,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","LEXDMGO",21,0)
 S DIR("A")="Replace existing user defaults?  "
"RTN","LEXDMGO",22,0)
 S DIR("B")="No",DIR(0)="YAO",DIR("?")="^D OVRH^LEXDMGO"
"RTN","LEXDMGO",23,0)
 S DIR("??")="^D OVRH^LEXDMGO" D ^DIR K DIR I Y[U S LEXX=Y Q LEXX
"RTN","LEXDMGO",24,0)
 S LEXX=0 S:+Y>0 LEXX=1 Q LEXX
"RTN","LEXDMGO",25,0)
OVRH ; Overwrite help
"RTN","LEXDMGO",26,0)
 W !!,"  By answering No:"
"RTN","LEXDMGO",27,0)
 W !!,"    Existing defaults will have precedence over the selected changes"
"RTN","LEXDMGO",28,0)
 W !,"    Replacing or deleting existing defaults will not be allowed"
"RTN","LEXDMGO",29,0)
 W !,"    Adding defaults where none previously existed will be allowed"
"RTN","LEXDMGO",30,0)
 W !!,"  By answering Yes:"
"RTN","LEXDMGO",31,0)
 W !!,"    Selected changes will have precedence over existing defaults"
"RTN","LEXDMGO",32,0)
 W !,"    Adding defaults where none previously existed will be allowed",!
"RTN","LEXDMGO",33,0)
 D DISCHG Q
"RTN","LEXDMGO",34,0)
OVRCHG ; Display effects of overwrite changes
"RTN","LEXDMGO",35,0)
 I +($G(LEXOVER))>0 D  Q
"RTN","LEXDMGO",36,0)
 . W !,"Replace existing defaults:"
"RTN","LEXDMGO",37,0)
 . W "  Yes, existing defaults will be changed",! D DISCHG
"RTN","LEXDMGO",38,0)
 I +($G(LEXOVER))'>0 D  Q
"RTN","LEXDMGO",39,0)
 . W !!,"Replace existing defaults:"
"RTN","LEXDMGO",40,0)
 . W "  No, existing defaults will remain unaltered",!
"RTN","LEXDMGO",41,0)
 Q
"RTN","LEXDMGO",42,0)
DISCHG ; Display changes
"RTN","LEXDMGO",43,0)
 D CHG("LEXDICS","filter"),CHG("LEXSHOW","display")
"RTN","LEXDMGO",44,0)
 D CHG("LEXSUB","vocabulary"),CHG("LEXCTX","shortcuts")
"RTN","LEXDMGO",45,0)
 Q
"RTN","LEXDMGO",46,0)
CHG(LEXDVAL,LEXDNAM) ; Changes
"RTN","LEXDMGO",47,0)
 I $G(@LEXDVAL)="" D  Q
"RTN","LEXDMGO",48,0)
 . W !,"  No changes made to the default ",LEXDNAM
"RTN","LEXDMGO",49,0)
 I $G(@LEXDVAL)'="@" D  Q
"RTN","LEXDMGO",50,0)
 . W !,"  Existing ",LEXDNAM," will be replaced"
"RTN","LEXDMGO",51,0)
 I $G(@LEXDVAL)="@" D
"RTN","LEXDMGO",52,0)
 . W !,"  Existing ",LEXDNAM," will be deleted"
"RTN","LEXDMGO",53,0)
 Q
"RTN","LEXDMGS")
0^112^B7121139
"RTN","LEXDMGS",1,0)
LEXDMGS ;ISL/KER - Defaults - Manager/Search Threshold ;04/21/2014
"RTN","LEXDMGS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMGS",3,0)
 ;               
"RTN","LEXDMGS",4,0)
 ; Global Variables
"RTN","LEXDMGS",5,0)
 ;    None
"RTN","LEXDMGS",6,0)
 ;               
"RTN","LEXDMGS",7,0)
 ; External References
"RTN","LEXDMGS",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXDMGS",9,0)
 ;    ^DIE                ICR  10018
"RTN","LEXDMGS",10,0)
 ;               
"RTN","LEXDMGS",11,0)
 Q
"RTN","LEXDMGS",12,0)
EN ;
"RTN","LEXDMGS",13,0)
 W !!," Coding System Search Threshold Edit",!
"RTN","LEXDMGS",14,0)
 W !," This is the default number of records that should be inspected"
"RTN","LEXDMGS",15,0)
 W !," during a search before the user is prompted to either continue"
"RTN","LEXDMGS",16,0)
 W !," or refine the search.  The search threshold is set for a coding"
"RTN","LEXDMGS",17,0)
 W !," system.  The use of this default parameter is optional.",!
"RTN","LEXDMGS",18,0)
 N LEXCS,LEXN,LEXNM,LEXO,X,Y
"RTN","LEXDMGS",19,0)
 S LEXCS=$$CS I +LEXCS'>0 W !!,"   Coding System not selected" Q
"RTN","LEXDMGS",20,0)
 S LEXNM=$P($G(^LEX(757.03,+LEXCS,0)),"^",2)
"RTN","LEXDMGS",21,0)
 S LEXO=$P($G(^LEX(757.03,+LEXCS,2)),"^",2) D ST(LEXCS)
"RTN","LEXDMGS",22,0)
 S LEXN=$P($G(^LEX(757.03,+LEXCS,2)),"^",2)
"RTN","LEXDMGS",23,0)
 I '$L(LEXO),+LEXN>0 W !!,"   Search Threshold added" W:$L(LEXNM) " for ",LEXNM W ! Q
"RTN","LEXDMGS",24,0)
 I +LEXO>0,+LEXN>0,LEXN'=LEXO W !!,"   Search Threshold changed" W:$L(LEXNM) " for ",LEXNM W ! Q
"RTN","LEXDMGS",25,0)
 I $L(LEXO),'$L(LEXN) W !!,"   Search Threshold deleted" W:$L(LEXNM) " for ",LEXNM W ! Q
"RTN","LEXDMGS",26,0)
 I $L(LEXO)=$L(LEXN) W !!,"   Search Threshold no change made" W:$L(LEXNM) " for ",LEXNM W ! Q
"RTN","LEXDMGS",27,0)
 Q
"RTN","LEXDMGS",28,0)
ST(X) ; Edit Search Threshold
"RTN","LEXDMGS",29,0)
 N DIE,DA,DIC,DR
"RTN","LEXDMGS",30,0)
 S DIE="^LEX(757.03,",DA=+($G(X)) Q:'$D(^LEX(757.03,+DA,0))
"RTN","LEXDMGS",31,0)
 S DIE("A")=" SEARCH THRESHOLD: "
"RTN","LEXDMGS",32,0)
 S DR="12//20000" W ! D ^DIE
"RTN","LEXDMGS",33,0)
 Q
"RTN","LEXDMGS",34,0)
CS(X) ; Coding System
"RTN","LEXDMGS",35,0)
 N DIC,DTOUT,DUOUT
"RTN","LEXDMGS",36,0)
 S DIC="^LEX(757.03,",DIC("A")=" Select a Coding System:  ",DIC(0)="AEQM"
"RTN","LEXDMGS",37,0)
 S DIC("W")="W ?29,""  "",$P($G(^LEX(757.03,+Y,0)),""^"",2),?51,$S($L($P($G(^LEX(757.03,+Y,2)),""^"",2)):"" THRESHOLD:"",1:""""),$J($P($G(^LEX(757.03,+Y,2)),""^"",2),7)"
"RTN","LEXDMGS",38,0)
 D ^DIC
"RTN","LEXDMGS",39,0)
 Q Y
"RTN","LEXDMGS",40,0)
 W !,"W ?51,$S($L($P($G(^LEX(757.03,+Y,2)),""^"",2)):"" THRESHOLD:"",1:""""),$J($P($G(^LEX(757.03,+Y,2)),""^"",2),7)"
"RTN","LEXDMGS",41,0)
 W ?51,$S($L($P($G(^LEX(757.03,+Y,2)),"^",2)):" THRESHOLD:",1:""),$J($P($G(^LEX(757.03,+Y,2)),"^",2),7)
"RTN","LEXDMGS",42,0)
 W ?51," THRESHOLD:",$J($P($G(^LEX(757.03,+Y,2)),"^",2),7)
"RTN","LEXDMGT")
0^78^B14879684
"RTN","LEXDMGT",1,0)
LEXDMGT ;ISL/KER - Defaults - Manager/Update ;04/21/2014
"RTN","LEXDMGT",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMGT",3,0)
 ;               
"RTN","LEXDMGT",4,0)
 ; Global Variables
"RTN","LEXDMGT",5,0)
 ;    None
"RTN","LEXDMGT",6,0)
 ;               
"RTN","LEXDMGT",7,0)
 ; External References
"RTN","LEXDMGT",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDMGT",9,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXDMGT",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXDMGT",11,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXDMGT",12,0)
 ;               
"RTN","LEXDMGT",13,0)
 ; LEXDICS     Filter
"RTN","LEXDMGT",14,0)
 ; LEXDICS(0)  Filter name
"RTN","LEXDMGT",15,0)
 ; LEXSHOW     Display
"RTN","LEXDMGT",16,0)
 ; LEXSHOW(0)  Display name
"RTN","LEXDMGT",17,0)
 ; LEXSUB      Vocabulary
"RTN","LEXDMGT",18,0)
 ; LEXSUB(0)   Vocabulary name
"RTN","LEXDMGT",19,0)
 ; LEXCTX      Shortcut Context
"RTN","LEXDMGT",20,0)
 ; LEXCTX(0)   Shortcut Context name
"RTN","LEXDMGT",21,0)
 ;
"RTN","LEXDMGT",22,0)
 ; LEXAP       Application
"RTN","LEXDMGT",23,0)
 ; LEXAPS      Multiple Applications
"RTN","LEXDMGT",24,0)
 ; LEXDCUR     Current default value (pre-edit)
"RTN","LEXDMGT",25,0)
 ; LEXDNAM     Default name
"RTN","LEXDMGT",26,0)
 ; LEXDVAL     Default value
"RTN","LEXDMGT",27,0)
 ; LEXFLD      Default field # in 757.201
"RTN","LEXDMGT",28,0)
 ; LEXC        Counter
"RTN","LEXDMGT",29,0)
 ; LEXS        User Service
"RTN","LEXDMGT",30,0)
 ; LEXUSER     DUZ of user to update defaults
"RTN","LEXDMGT",31,0)
 ;
"RTN","LEXDMGT",32,0)
 ; Needs:
"RTN","LEXDMGT",33,0)
 ;
"RTN","LEXDMGT",34,0)
 ; LEXAP       Application
"RTN","LEXDMGT",35,0)
 ; LEXOVER     Flag - Overwrite user defaults (Y/N)
"RTN","LEXDMGT",36,0)
 ; LEXLIM      Limits (parameter for LEXMETH)
"RTN","LEXDMGT",37,0)
 ; LEXMETH     Method, singel user, by service or all users
"RTN","LEXDMGT",38,0)
 ;              
"RTN","LEXDMGT",39,0)
 Q
"RTN","LEXDMGT",40,0)
UPDATE ; Update user defaults
"RTN","LEXDMGT",41,0)
 Q:'$L($G(LEXAP))  Q:'$L($G(LEXOVER))  Q:'$L($G(LEXMETH))  Q:'$L($G(LEXLIM))
"RTN","LEXDMGT",42,0)
 N ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK,Y
"RTN","LEXDMGT",43,0)
 S (ZTSAVE("LEXOVER"),ZTSAVE("LEXAP"),ZTSAVE("LEXMETH"),ZTSAVE("LEXLIM"))=""
"RTN","LEXDMGT",44,0)
 S (ZTSAVE("LEXDICS"),ZTSAVE("LEXDICS(0)"),ZTSAVE("LEXSHOW"),ZTSAVE("LEXSHOW(0)"))=""
"RTN","LEXDMGT",45,0)
 S (ZTSAVE("LEXSUB"),ZTSAVE("LEXSUB(0)"),ZTSAVE("LEXCTX"),ZTSAVE("LEXCTX(0)"))=""
"RTN","LEXDMGT",46,0)
 S ZTRTN="UPDT^LEXDMGT",ZTDESC="Up-dating User Defaults"
"RTN","LEXDMGT",47,0)
 S ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","LEXDMGT",48,0)
 W:$D(ZTSK) !!,"Task has been created to update user defaults"
"RTN","LEXDMGT",49,0)
 W:'$D(ZTSK) !!,"Unable to create a task to update user defaults"
"RTN","LEXDMGT",50,0)
 D HOME^%ZIS Q
"RTN","LEXDMGT",51,0)
UPDT ; TaskManager entry point to Update Defaults (tasked)
"RTN","LEXDMGT",52,0)
 N LEXUSER,LEXDVAL,LEXDNAM,LEXFLD
"RTN","LEXDMGT",53,0)
 S LEXMETH=$P(LEXMETH,U,1) Q:LEXMETH=""
"RTN","LEXDMGT",54,0)
ONE ; Single user
"RTN","LEXDMGT",55,0)
 I LEXMETH="ONE" S LEXUSER=+LEXLIM D  G UPDTQ
"RTN","LEXDMGT",56,0)
 . Q:'$L($$GET1^DIQ(200,+($G(LEXUSER)),.01))  D BYAPPS
"RTN","LEXDMGT",57,0)
MULTI ; Multiple users
"RTN","LEXDMGT",58,0)
 N LEXRT,LEX D FILE^DID(200,,"GLOBAL NAME","LEX")
"RTN","LEXDMGT",59,0)
 S LEXRT=$G(LEX("GLOBAL NAME")) Q:'$L(LEXRT)
"RTN","LEXDMGT",60,0)
 S LEXUSER=+($O(@(LEXRT_"1)"),-1))
"RTN","LEXDMGT",61,0)
 F  S LEXUSER=$O(@(LEXRT_LEXUSER_")")) Q:+LEXUSER=0  D
"RTN","LEXDMGT",62,0)
 . Q:'$L($$GET1^DIQ(200,+($G(LEXUSER)),.01))  D BYAPPS
"RTN","LEXDMGT",63,0)
 G UPDTQ
"RTN","LEXDMGT",64,0)
BYAPPS ; Process defaults by application
"RTN","LEXDMGT",65,0)
 I LEXAP'[";" S LEXAP=+LEXAP D:+LEXAP>0 BYUSR Q
"RTN","LEXDMGT",66,0)
 I LEXAP[";" D  Q
"RTN","LEXDMGT",67,0)
 . N LEXC,LEXAPS S LEXAPS=LEXAP
"RTN","LEXDMGT",68,0)
 . F LEXC=1:1:$L(LEXAPS,";") S LEXAP=$P(LEXAPS,";",LEXC) D BYUSR
"RTN","LEXDMGT",69,0)
 . S LEXAP=LEXAPS
"RTN","LEXDMGT",70,0)
BYUSR ; Process defaults by user
"RTN","LEXDMGT",71,0)
 N LEXS S LEXS=$$GET1^DIQ(200,+($G(LEXUSER)),29,"I") S:LEXS="" LEXS=-1
"RTN","LEXDMGT",72,0)
 D:LEXMETH="ALL"!(LEXMETH="ONE") UPUSR
"RTN","LEXDMGT",73,0)
 D:LEXMETH="SEV"&(+LEXLIM=+LEXS) UPUSR
"RTN","LEXDMGT",74,0)
 I LEXMETH="SAL" D
"RTN","LEXDMGT",75,0)
 . I +($P(LEXLIM,U,1))>0,+($P(LEXLIM,U,1))=+LEXS D
"RTN","LEXDMGT",76,0)
 . . I +($P(LEXLIM,U,2))>0,+($P(LEXLIM,U,2))=+LEXL D UPUSR
"RTN","LEXDMGT",77,0)
 Q
"RTN","LEXDMGT",78,0)
UPUSR ; Update user defaults for user LEXUSER
"RTN","LEXDMGT",79,0)
 N LEXDCUR,LEXDVAL,LEXDNAM,LEXFLD
"RTN","LEXDMGT",80,0)
UPDIC ; Filter LEXDICS
"RTN","LEXDMGT",81,0)
 S LEXFLD=1,LEXDCUR=$G(^LEXT(757.2,LEXAP,200,LEXUSER,LEXFLD))
"RTN","LEXDMGT",82,0)
 S LEXDVAL=$G(LEXDICS),LEXDNAM=$G(LEXDICS(0))
"RTN","LEXDMGT",83,0)
 G:LEXDCUR'=""&('LEXOVER) UPSHOW D:LEXDVAL'="" SAVE
"RTN","LEXDMGT",84,0)
 ;
"RTN","LEXDMGT",85,0)
UPSHOW ; Display LEXSHOW
"RTN","LEXDMGT",86,0)
 S LEXFLD=2,LEXDCUR=$G(^LEXT(757.2,LEXAP,200,LEXUSER,LEXFLD))
"RTN","LEXDMGT",87,0)
 S LEXDVAL=$G(LEXSHOW),LEXDNAM=$G(LEXSHOW(0))
"RTN","LEXDMGT",88,0)
 G:LEXDCUR'=""&('LEXOVER) UPSUB D:LEXDVAL'="" SAVE
"RTN","LEXDMGT",89,0)
 ;
"RTN","LEXDMGT",90,0)
UPSUB ; Vocabulary LEXSUB
"RTN","LEXDMGT",91,0)
 S LEXFLD=3,LEXDCUR=$G(^LEXT(757.2,LEXAP,200,LEXUSER,LEXFLD))
"RTN","LEXDMGT",92,0)
 S LEXDVAL=$G(LEXSUB),LEXDNAM=$G(LEXSUB(0))
"RTN","LEXDMGT",93,0)
 G:LEXDCUR'=""&('LEXOVER) UPCON D:LEXDVAL'="" SAVE
"RTN","LEXDMGT",94,0)
 ;
"RTN","LEXDMGT",95,0)
UPCON ; Shortcut Context LEXCTX
"RTN","LEXDMGT",96,0)
 S LEXFLD=4,LEXDCUR=$G(^LEXT(757.2,LEXAP,200,LEXUSER,LEXFLD))
"RTN","LEXDMGT",97,0)
 S LEXDVAL=$G(LEXCTX),LEXDNAM=$G(LEXCTX(0))
"RTN","LEXDMGT",98,0)
 G:LEXDCUR'=""&('LEXOVER) UPQ D:LEXDVAL'="" SAVE
"RTN","LEXDMGT",99,0)
 ;
"RTN","LEXDMGT",100,0)
UPQ ; Quit update
"RTN","LEXDMGT",101,0)
 Q
"RTN","LEXDMGT",102,0)
UPDTQ ; Quit update (tasked)
"RTN","LEXDMGT",103,0)
 S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXDMGT",104,0)
 Q
"RTN","LEXDMGT",105,0)
CLR ; Clear
"RTN","LEXDMGT",106,0)
 N LEXAP,LEXOVER,LEXLIM,LEXMETH
"RTN","LEXDMGT",107,0)
 Q
"RTN","LEXDMGT",108,0)
SAVE ; Save default - SET^LEXDSV(DUZ,APPLICATION,VALUE,NAME,FIELD)
"RTN","LEXDMGT",109,0)
 I LEXDVAL'["@" D  Q
"RTN","LEXDMGT",110,0)
 . D SET^LEXDSV(LEXUSER,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) Q
"RTN","LEXDMGT",111,0)
 ; Kill default - SET^LEXDSV(DUZ,APPLICATION,"@","",FIELD)
"RTN","LEXDMGT",112,0)
 D SET^LEXDSV(LEXUSER,LEXAP,"@","",LEXFLD) Q
"RTN","LEXDMGU")
0^115^B17558143
"RTN","LEXDMGU",1,0)
LEXDMGU ;ISL/KER - Defaults - Manager/User Group ;04/21/2014
"RTN","LEXDMGU",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMGU",3,0)
 ;               
"RTN","LEXDMGU",4,0)
 ; Global Variables
"RTN","LEXDMGU",5,0)
 ;    None
"RTN","LEXDMGU",6,0)
 ;               
"RTN","LEXDMGU",7,0)
 ; External References
"RTN","LEXDMGU",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDMGU",9,0)
 ;               
"RTN","LEXDMGU",10,0)
 ; LEXDICS(0)  Filter name
"RTN","LEXDMGU",11,0)
 ; LEXSHOW(0)  Display name
"RTN","LEXDMGU",12,0)
 ; LEXSUB(0)   Vocabulary name
"RTN","LEXDMGU",13,0)
 ; LEXCTX(0)   Shortcut Context name
"RTN","LEXDMGU",14,0)
 ;
"RTN","LEXDMGU",15,0)
 ; LEXC        Counter
"RTN","LEXDMGU",16,0)
 ; LEXI        Incremental counter
"RTN","LEXDMGU",17,0)
 ; LEXS        Service
"RTN","LEXDMGU",18,0)
 ; LEXMORE     Flag - Select more users (Y/N)
"RTN","LEXDMGU",19,0)
 ; LEXOVER     Flag - Overwrite user defaults (Y/N)
"RTN","LEXDMGU",20,0)
 ; LEXSEL      User input/selection
"RTN","LEXDMGU",21,0)
 ; LEXUSR      Flag - User has been selected
"RTN","LEXDMGU",22,0)
 ; LEXVER      Flag - Default values are verified (Y/N)
"RTN","LEXDMGU",23,0)
 ; LEXX        Return value
"RTN","LEXDMGU",24,0)
 ;
"RTN","LEXDMGU",25,0)
 ; LEXLIM      Limits (parameter for LEXMETH)
"RTN","LEXDMGU",26,0)
 ; LEXMETH     Method, singel user, by service or all users
"RTN","LEXDMGU",27,0)
 ;
"RTN","LEXDMGU",28,0)
USER(LEXX) ; User or user group by name or by type
"RTN","LEXDMGU",29,0)
 N LEXUSR,LEXMETH,LEXLIM,LEXMORE,LEXOVER,LEXVER
"RTN","LEXDMGU",30,0)
GRP ; Get user/user group
"RTN","LEXDMGU",31,0)
 K DIC,DIR S LEXX=""
"RTN","LEXDMGU",32,0)
 W ! D DM S (LEXX,LEXUSR)=$$USR I LEXX[U G EXIT
"RTN","LEXDMGU",33,0)
GETUSER ; Get user or user group type
"RTN","LEXDMGU",34,0)
 S (LEXMETH,LEXLIM)=""
"RTN","LEXDMGU",35,0)
 I +LEXX=1 W ! S LEXLIM=$$USER^LEXDM4,LEXMETH="ONE"
"RTN","LEXDMGU",36,0)
 I +LEXX=2 W ! S LEXLIM=$$SERV^LEXDM4,LEXMETH="SEV"
"RTN","LEXDMGU",37,0)
 I +LEXX=3 S LEXLIM=1,LEXMETH="ALL"
"RTN","LEXDMGU",38,0)
 D LIMIT,METHOD
"RTN","LEXDMGU",39,0)
 Q:+($G(LEXLIM))'>0 LEXLIM
"RTN","LEXDMGU",40,0)
 ; Check defaults - DEFCK^LEXDMGV
"RTN","LEXDMGU",41,0)
 D DEFCK^LEXDMGV
"RTN","LEXDMGU",42,0)
 ; Check user - USERCK^LEXDMGV
"RTN","LEXDMGU",43,0)
 D USERCK^LEXDMGV
"RTN","LEXDMGU",44,0)
 ; Ask to overwrite defaults - $$OVER^LEXDMGO
"RTN","LEXDMGU",45,0)
 S LEXOVER=$$OVER^LEXDMGO
"RTN","LEXDMGU",46,0)
 Q:LEXOVER["^^" "^^"
"RTN","LEXDMGU",47,0)
 ; Verify before setting global - $$VER^LEXDMGV
"RTN","LEXDMGU",48,0)
 S LEXVER=$$VER^LEXDMGV
"RTN","LEXDMGU",49,0)
 S:LEXVER[U LEXS=U S:LEXVER["^^" LEXX="^^" Q:LEXX[U LEXX
"RTN","LEXDMGU",50,0)
 D:+($G(LEXVER))>0 UPDATE^LEXDMGT
"RTN","LEXDMGU",51,0)
 ; More users
"RTN","LEXDMGU",52,0)
 S LEXMORE=0 I +($G(LEXUSR))>0,+($G(LEXUSR))<3 S LEXMORE=1
"RTN","LEXDMGU",53,0)
 I +($G(LEXMORE))>0,LEXX'["^^" D  G:+($G(LEXMORE))>0 GRP
"RTN","LEXDMGU",54,0)
 . S LEXMORE=$$MOREUSR
"RTN","LEXDMGU",55,0)
 Q LEXX
"RTN","LEXDMGU",56,0)
LIMIT ; Check search limits
"RTN","LEXDMGU",57,0)
 Q:+($G(LEXLIM))>0  S:LEXLIM["^^" LEXLIM="^^" Q:LEXLIM[U
"RTN","LEXDMGU",58,0)
 S LEXLIM=U Q
"RTN","LEXDMGU",59,0)
METHOD ; Check search method
"RTN","LEXDMGU",60,0)
 Q:+($G(LEXLIM))>0  S:LEXLIM[U!($G(LEXLIM)="") LEXMETH="" Q
"RTN","LEXDMGU",61,0)
EXIT ; Quit USER selection
"RTN","LEXDMGU",62,0)
 Q LEXX
"RTN","LEXDMGU",63,0)
MOREUSR(LEXX) ; Want to set the current defaults for more users?
"RTN","LEXDMGU",64,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","LEXDMGU",65,0)
 S DIR("A",1)="Do you wish to set the currently selected user"
"RTN","LEXDMGU",66,0)
 S DIR("A")="defaults to another user or group of users?  "
"RTN","LEXDMGU",67,0)
 S DIR("B")="No",(DIR("?"),DIR("??"))="^D MOREHLP^LEXDMGU"
"RTN","LEXDMGU",68,0)
 S DIR(0)="YAO" D ^DIR K DIR S LEXX=+Y Q:$D(DTOUT) "^" S:X[U LEXX=U
"RTN","LEXDMGU",69,0)
 S:X["^^" LEXX="^^" Q:LEXX[U LEXX S LEXX=+Y Q LEXX
"RTN","LEXDMGU",70,0)
MOREHLP ; More user help
"RTN","LEXDMGU",71,0)
 D CD W !,"The defaults you selected may be applied to another user/user group",!
"RTN","LEXDMGU",72,0)
 Q
"RTN","LEXDMGU",73,0)
USR(LEXX) ; Get response for USER
"RTN","LEXDMGU",74,0)
 W ! N Y,DTOUT,DUOUT,DIRUT,DIROUT S DIR("A")="Select 1-3:  "
"RTN","LEXDMGU",75,0)
 S DIR("B")=1,(DIR("?"),DIR("??"))="^D USRHLP^LEXDMGU"
"RTN","LEXDMGU",76,0)
 S DIR(0)="NAO^1:3:0" D ^DIR K DIR S LEXX=+Y
"RTN","LEXDMGU",77,0)
 Q:$D(DTOUT) "^^" S:X[U LEXX=U S:X["^^" LEXX="^^" Q:LEXX[U LEXX
"RTN","LEXDMGU",78,0)
 S:+Y>0&(+Y<6) LEXX=+Y Q LEXX
"RTN","LEXDMGU",79,0)
 Q
"RTN","LEXDMGU",80,0)
USRHLP ; Help for respons to USER
"RTN","LEXDMGU",81,0)
 I X'["?",+X<1!(+X>3) D  Q
"RTN","LEXDMGU",82,0)
 . W !!,"Press <Return> to continue, "
"RTN","LEXDMGU",83,0)
 . W """^"" to exit or select (1-3)" D DM
"RTN","LEXDMGU",84,0)
 I '$L(($G(LEXDICS(0))_$G(LEXSHOW(0))_$G(LEXSUB(0))_$G(LEXCTX(0)))) D  Q
"RTN","LEXDMGU",85,0)
 . W !!,"Press <Return> to continue, "
"RTN","LEXDMGU",86,0)
 . W """^"" to exit or select (1-3)" D DM
"RTN","LEXDMGU",87,0)
 D CD W !,"The default selections listed above may be applied to either"
"RTN","LEXDMGU",88,0)
 W !,"a single user, a user group based on service, or all users."
"RTN","LEXDMGU",89,0)
 W !,"You may either select a user/user group (1-3), or press "
"RTN","LEXDMGU",90,0)
 W !,"<Return> to continue, or ""^"" to exit." D DM
"RTN","LEXDMGU",91,0)
 Q
"RTN","LEXDMGU",92,0)
CD ; Current defaults
"RTN","LEXDMGU",93,0)
 W !!,"Current default selections:",!
"RTN","LEXDMGU",94,0)
 W !,"    Filter     - "
"RTN","LEXDMGU",95,0)
 W $S($L($G(LEXDICS(0))):$G(LEXDICS(0)),1:"Not selected")
"RTN","LEXDMGU",96,0)
 W !,"    Display    - "
"RTN","LEXDMGU",97,0)
 W $S($L($G(LEXSHOW(0))):$G(LEXSHOW(0)),1:"Not selected")
"RTN","LEXDMGU",98,0)
 W !,"    Vocabulary - "
"RTN","LEXDMGU",99,0)
 W $S($L($G(LEXSUB(0))):$G(LEXSUB(0)),1:"Not selected")
"RTN","LEXDMGU",100,0)
 W !,"    Shortcuts  - "
"RTN","LEXDMGU",101,0)
 W $S($L($G(LEXCTX(0))):$G(LEXCTX(0)),1:"Not selected") W !
"RTN","LEXDMGU",102,0)
 Q
"RTN","LEXDMGU",103,0)
DM ; Display menu
"RTN","LEXDMGU",104,0)
 W !!,"User/User groups:",!
"RTN","LEXDMGU",105,0)
 N LEXC F LEXC=1:1:999 Q:$P($T(UM+LEXC^LEXDMGU),";",2)=""  D
"RTN","LEXDMGU",106,0)
 . W !,"   ",$J($P($T(UM+LEXC^LEXDMGU),";",2),2),"  "
"RTN","LEXDMGU",107,0)
 . W $P($T(UM+LEXC^LEXDMGU),";",3)
"RTN","LEXDMGU",108,0)
 Q
"RTN","LEXDMGU",109,0)
UM ;; User/user group menu data
"RTN","LEXDMGU",110,0)
 ;1;Single User
"RTN","LEXDMGU",111,0)
 ;2;Group based on Service
"RTN","LEXDMGU",112,0)
 ;3;All Users
"RTN","LEXDMGU",113,0)
 ;;
"RTN","LEXDMGV")
0^116^B10768836
"RTN","LEXDMGV",1,0)
LEXDMGV ;ISL/KER - Defaults - Manager/Verify ;04/21/2014
"RTN","LEXDMGV",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDMGV",3,0)
 ;               
"RTN","LEXDMGV",4,0)
 ; Global Variables
"RTN","LEXDMGV",5,0)
 ;    None
"RTN","LEXDMGV",6,0)
 ;               
"RTN","LEXDMGV",7,0)
 ; External References
"RTN","LEXDMGV",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDMGV",9,0)
 ;               
"RTN","LEXDMGV",10,0)
 ; LEXDICS     Filter
"RTN","LEXDMGV",11,0)
 ; LEXDICS(0)  Filter name
"RTN","LEXDMGV",12,0)
 ; LEXDICS(1)  Filter - Add, Delete, No Change
"RTN","LEXDMGV",13,0)
 ; LEXSHOW     Display
"RTN","LEXDMGV",14,0)
 ; LEXSHOW(0)  Display name
"RTN","LEXDMGV",15,0)
 ; LEXSHOW(1)  Display - Add, Delete, No Change
"RTN","LEXDMGV",16,0)
 ; LEXSUB      Vocabulary
"RTN","LEXDMGV",17,0)
 ; LEXSUB(0)   Vocabulary name
"RTN","LEXDMGV",18,0)
 ; LEXSUB(1)   Vocabulary - Add, Delete, No Change
"RTN","LEXDMGV",19,0)
 ; LEXCTX      Shortcut Context
"RTN","LEXDMGV",20,0)
 ; LEXCTX(0)   Shortcut Context name
"RTN","LEXDMGV",21,0)
 ; LEXCTX(1)   Shortcut Context - Add, Delete, No Change
"RTN","LEXDMGV",22,0)
 ;
"RTN","LEXDMGV",23,0)
 ; LEXUSER     User (text, not pointer)
"RTN","LEXDMGV",24,0)
 ; LEXX        Returned value
"RTN","LEXDMGV",25,0)
 ; LEXLIM      Limits (parameter for LEXMETH)
"RTN","LEXDMGV",26,0)
 ; LEXMETH     Method, singel user, by service or all users
"RTN","LEXDMGV",27,0)
 ;
"RTN","LEXDMGV",28,0)
VER(LEXX) ; Verify defaults before commiting to the global
"RTN","LEXDMGV",29,0)
 W @IOF
"RTN","LEXDMGV",30,0)
 D DDEF,DDU,OVRCHG^LEXDMGO
"RTN","LEXDMGV",31,0)
 W ! N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","LEXDMGV",32,0)
 S DIR("A")="Is this correct?  "
"RTN","LEXDMGV",33,0)
 S DIR("B")="Yes"
"RTN","LEXDMGV",34,0)
 S (DIR("?"),DIR("??"))="^D VERH^LEXDMGV"
"RTN","LEXDMGV",35,0)
 S DIR(0)="YAO" D ^DIR K DIR I X["^^" Q "^^"
"RTN","LEXDMGV",36,0)
 Q:X[U U S LEXX=+Y Q LEXX
"RTN","LEXDMGV",37,0)
VERH ; Verify help
"RTN","LEXDMGV",38,0)
 W !!,"By answering ""Yes"" you will be setting the look-up defaults for the Clinical"
"RTN","LEXDMGV",39,0)
 W !,"Lexicon for the selected applications and users."
"RTN","LEXDMGV",40,0)
 W !!,"Is this correct"
"RTN","LEXDMGV",41,0)
 Q
"RTN","LEXDMGV",42,0)
DDEF ; Display defaults
"RTN","LEXDMGV",43,0)
 N LEXC S LEXC=0
"RTN","LEXDMGV",44,0)
 I (+($$ACT)) D
"RTN","LEXDMGV",45,0)
 . W !,"Set user defaults:",!
"RTN","LEXDMGV",46,0)
 I $D(LEXDICS(1)) D
"RTN","LEXDMGV",47,0)
 . S LEXC=LEXC+1 W !,"  ",LEXC,"  Filter      ",LEXDICS(1)
"RTN","LEXDMGV",48,0)
 . W:$G(LEXDICS(1))["Add" ", ",$P($G(LEXDICS(0))," (",1)
"RTN","LEXDMGV",49,0)
 I $D(LEXSHOW(1)) D
"RTN","LEXDMGV",50,0)
 . S LEXC=LEXC+1 W !,"  ",LEXC,"  Display     ",$G(LEXSHOW(1))
"RTN","LEXDMGV",51,0)
 . W:$G(LEXSHOW(1))["Add" ", ",$P($G(LEXSHOW(0))," (",1)
"RTN","LEXDMGV",52,0)
 I $D(LEXSUB(1)) D
"RTN","LEXDMGV",53,0)
 . S LEXC=LEXC+1 W !,"  ",LEXC,"  Vocabulary  ",$G(LEXSUB(1))
"RTN","LEXDMGV",54,0)
 . W:$G(LEXSUB(1))["Add" ", ",$P($G(LEXSUB(0))," (",1)
"RTN","LEXDMGV",55,0)
 I $D(LEXCTX(1)) D
"RTN","LEXDMGV",56,0)
 . S LEXC=LEXC+1 W !,"  ",LEXC,"  Shortcuts   ",$G(LEXCTX(1))
"RTN","LEXDMGV",57,0)
 . W:$G(LEXCTX(1))["Add" ", ",$P($G(LEXCTX(0))," (",1)
"RTN","LEXDMGV",58,0)
 W:(+($$ACT)) !
"RTN","LEXDMGV",59,0)
 Q
"RTN","LEXDMGV",60,0)
ACT(LEXX) ; Check for Default Action
"RTN","LEXDMGV",61,0)
 I $D(LEXDICS(1))!($D(LEXSHOW(1))) Q 1
"RTN","LEXDMGV",62,0)
 I $D(LEXSUB(1))!($D(LEXCTX(1))) Q 1
"RTN","LEXDMGV",63,0)
 Q 0
"RTN","LEXDMGV",64,0)
NAM(LEXX) ; Check for Default Names
"RTN","LEXDMGV",65,0)
 I $D(LEXDICS(0))!($D(LEXSHOW(0))) Q 1
"RTN","LEXDMGV",66,0)
 I $D(LEXSUB(0))!($D(LEXCTX(0))) Q 1
"RTN","LEXDMGV",67,0)
 Q 0
"RTN","LEXDMGV",68,0)
VAL(LEXX) ; Check for Default Values
"RTN","LEXDMGV",69,0)
 I $D(LEXDICS)!($D(LEXSHOW)) Q 1
"RTN","LEXDMGV",70,0)
 I $D(LEXSUB)!($D(LEXCTX)) Q 1
"RTN","LEXDMGV",71,0)
 Q 0
"RTN","LEXDMGV",72,0)
DDU ; Display users
"RTN","LEXDMGV",73,0)
 Q:'$D(LEXMETH)  N LEXUSER S LEXUSER=$P(LEXMETH,U,2) Q:'$L(LEXUSER)
"RTN","LEXDMGV",74,0)
 W !,"For ",LEXUSER,! Q
"RTN","LEXDMGV",75,0)
DEFCK ; Check defaults
"RTN","LEXDMGV",76,0)
 S LEXDICS(1)=$S($G(LEXDICS)="":"No Change",$G(LEXDICS)="@":"Deleted",1:"Added")
"RTN","LEXDMGV",77,0)
 S LEXSHOW(1)=$S($G(LEXSHOW)="":"No Change",$G(LEXSHOW)="@":"Deleted",1:"Added")
"RTN","LEXDMGV",78,0)
 S LEXSUB(1)=$S($G(LEXSUB)="":"No Change",$G(LEXSUB)="@":"Deleted",1:"Added")
"RTN","LEXDMGV",79,0)
 S LEXCTX(1)=$S($G(LEXCTX)="":"No Change",$G(LEXCTX)="@":"Deleted",1:"Added")
"RTN","LEXDMGV",80,0)
 Q
"RTN","LEXDMGV",81,0)
USERCK ; Check user
"RTN","LEXDMGV",82,0)
 I LEXMETH="ONE",+LEXLIM>0 S $P(LEXMETH,U,2)="user:  "_$P(LEXLIM,U,2)
"RTN","LEXDMGV",83,0)
 I LEXMETH="SEV",+LEXLIM>0 S $P(LEXMETH,U,2)="users in Service/Section:  "_$P(LEXLIM,U,2)
"RTN","LEXDMGV",84,0)
 I LEXMETH="ALL",+LEXLIM>0 S $P(LEXMETH,U,2)="users:  All Users"
"RTN","LEXDMGV",85,0)
 Q
"RTN","LEXDSV")
0^117^B6361439
"RTN","LEXDSV",1,0)
LEXDSV ;ISL/KER - Defaults - Save ;04/21/2014
"RTN","LEXDSV",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDSV",3,0)
 ;               
"RTN","LEXDSV",4,0)
 ; Global Variables
"RTN","LEXDSV",5,0)
 ;    None
"RTN","LEXDSV",6,0)
 ;               
"RTN","LEXDSV",7,0)
 ; External References
"RTN","LEXDSV",8,0)
 ;    FILE^DICN           ICR  10009
"RTN","LEXDSV",9,0)
 ;    ^DIE                ICR  10018
"RTN","LEXDSV",10,0)
 ;    ^DIK                ICR  10013
"RTN","LEXDSV",11,0)
 ;               
"RTN","LEXDSV",12,0)
 ; Needs
"RTN","LEXDSV",13,0)
 ;
"RTN","LEXDSV",14,0)
 ;   Application      File DA, Subfile DA(1)  LEXAP
"RTN","LEXDSV",15,0)
 ;   User DUZ         Sub-file .01 DINUM      LEXDUZ
"RTN","LEXDSV",16,0)
 ;   Default value                            LEXDVAL
"RTN","LEXDSV",17,0)
 ;   Defualt name                             LEXDNAM
"RTN","LEXDSV",18,0)
 ;   Default field    Sub-file field          LEXFLD
"RTN","LEXDSV",19,0)
 ;         
"RTN","LEXDSV",20,0)
 ; Sets ^LEXT(757.2,LEXAP,200,LEXDUZ,LEXFLD)=LEXDVAL
"RTN","LEXDSV",21,0)
 ; and  ^LEXT(757.2,LEXAP,200,LEXDUZ,(LEXFLD+.5))=LEXDNAM
"RTN","LEXDSV",22,0)
 ;
"RTN","LEXDSV",23,0)
 Q
"RTN","LEXDSV",24,0)
SET(LEXDUZ,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) ; 
"RTN","LEXDSV",25,0)
 ;
"RTN","LEXDSV",26,0)
 Q:'$L($G(LEXDVAL))  S:LEXDVAL["@" LEXDVAL="@",LEXDNAM="@" S DIC("P")="757.201PA"
"RTN","LEXDSV",27,0)
 N LEXWARN S LEXWARN=0,(DIC,DIE)="^LEXT(757.2,"_LEXAP_",200,"
"RTN","LEXDSV",28,0)
 S DA(1)=LEXAP,DA=LEXDUZ
"RTN","LEXDSV",29,0)
 S DLAYGO=757.2,(DINUM,X)=LEXDUZ,DIC(0)="L"
"RTN","LEXDSV",30,0)
 S DIC("DR")=LEXFLD_"////^S X=LEXDVAL" K DD,DO D FILE^DICN
"RTN","LEXDSV",31,0)
EDIT ; Lock record and edit user default
"RTN","LEXDSV",32,0)
 L +^LEXT(757.2,+LEXAP,200):1
"RTN","LEXDSV",33,0)
 I '$T D  G EDIT
"RTN","LEXDSV",34,0)
 . W:'$D(ZTQUEUED)&('LEXWARN) !,"Another user is editing this entry, please wait"
"RTN","LEXDSV",35,0)
 . S LEXWARN=1 H 2
"RTN","LEXDSV",36,0)
 S DA(1)=LEXAP,DA=LEXDUZ,DR=LEXFLD_"////^S X=LEXDVAL"
"RTN","LEXDSV",37,0)
 D ^DIE I $L($G(LEXDNAM)) S DR=(LEXFLD+.5)_"////^S X=LEXDNAM" D ^DIE
"RTN","LEXDSV",38,0)
 K DA,DR,DIE,DIC
"RTN","LEXDSV",39,0)
 L -^LEXT(757.2,+LEXAP,200)
"RTN","LEXDSV",40,0)
 ;
"RTN","LEXDSV",41,0)
 ; Delete name if default is null
"RTN","LEXDSV",42,0)
 ;
"RTN","LEXDSV",43,0)
 N LEXX,LEXDEL S LEXX=0,LEXDEL=1
"RTN","LEXDSV",44,0)
 F  S LEXX=$O(^LEXT(757.2,LEXAP,200,LEXDUZ,LEXX)) Q:+LEXX=0  D
"RTN","LEXDSV",45,0)
 . I '$L($G(^LEXT(757.2,LEXAP,200,LEXDUZ,LEXX))) D
"RTN","LEXDSV",46,0)
 . . I $L($G(^LEXT(757.2,LEXAP,200,LEXDUZ,(LEXX+.5)))) D
"RTN","LEXDSV",47,0)
 . . . S LEXDVAL="@",DIC("P")="757.201PA"
"RTN","LEXDSV",48,0)
 . . . S (DIC,DIE)="^LEXT(757.2,"_LEXAP_",200,",DA(1)=LEXAP,DA=LEXDUZ
"RTN","LEXDSV",49,0)
 . . . S DLAYGO=757.2,(DINUM,X)=LEXDUZ,DIC(0)="L"
"RTN","LEXDSV",50,0)
 . . . L +^LEXT(757.2,+LEXAP,200):1 I '$T H 2 S LEXX=LEXX-.05 Q
"RTN","LEXDSV",51,0)
 . . . S DR=(LEXX+.5)_"////^S X=LEXDVAL"
"RTN","LEXDSV",52,0)
 . . . D ^DIE S LEXX=LEXX+.5 K DA,DR,DIE,DIC
"RTN","LEXDSV",53,0)
 . . . L -^LEXT(757.2,+LEXAP,200)
"RTN","LEXDSV",54,0)
 . . I '$L($G(^LEXT(757.2,LEXAP,200,LEXDUZ,(LEXX+.5)))) D
"RTN","LEXDSV",55,0)
 . . . K ^LEXT(757.2,LEXAP,200,LEXDUZ,LEXX),^LEXT(757.2,LEXAP,200,LEXDUZ,(LEXX+.5))
"RTN","LEXDSV",56,0)
 . I $L($G(^LEXT(757.2,LEXAP,200,LEXDUZ,LEXX))) S LEXDEL=0
"RTN","LEXDSV",57,0)
 ;
"RTN","LEXDSV",58,0)
 ; Delete record if all defaults are null
"RTN","LEXDSV",59,0)
 ;
"RTN","LEXDSV",60,0)
 I LEXDEL D
"RTN","LEXDSV",61,0)
 . S (DIC,DIE,DIK)="^LEXT(757.2,"_LEXAP_",200,"
"RTN","LEXDSV",62,0)
 . S DA(1)=LEXAP,DA=LEXDUZ D ^DIK
"RTN","LEXDSV",63,0)
 Q
"RTN","LEXDVO")
0^79^B4750248
"RTN","LEXDVO",1,0)
LEXDVO ;ISL/KER - Default Vocabulary ;04/21/2014
"RTN","LEXDVO",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDVO",3,0)
 ;               
"RTN","LEXDVO",4,0)
 ; Global Variables
"RTN","LEXDVO",5,0)
 ;    None
"RTN","LEXDVO",6,0)
 ;               
"RTN","LEXDVO",7,0)
 ; External References
"RTN","LEXDVO",8,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXDVO",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXDVO",10,0)
 ;               
"RTN","LEXDVO",11,0)
 ; Entry:  D EN^LEXDVO              LEXAP is unknown
"RTN","LEXDVO",12,0)
 ;
"RTN","LEXDVO",13,0)
 ; Entry:  D EN1^LEXDVO(LEXAP)     LEXAP is known
"RTN","LEXDVO",14,0)
 ;
"RTN","LEXDVO",15,0)
 ; Single user entry point - Saves Default Vocabulary in file 757.2
"RTN","LEXDVO",16,0)
 ;
"RTN","LEXDVO",17,0)
 ; Where 
"RTN","LEXDVO",18,0)
 ;
"RTN","LEXDVO",19,0)
 ;      LEXAP     Pointer to file 757.2
"RTN","LEXDVO",20,0)
 ;      LEXCA     Action (modify/delete)
"RTN","LEXDVO",21,0)
 ;      LEXDEL    Flag default for Deletion
"RTN","LEXDVO",22,0)
 ;      LEXDNAM   Default Name
"RTN","LEXDVO",23,0)
 ;      LEXDVAL   Default Value
"RTN","LEXDVO",24,0)
 ;      LEXFIL    Flag for Filter
"RTN","LEXDVO",25,0)
 ;      LEXFLD    Default field (1-4) in file 757.201
"RTN","LEXDVO",26,0)
 ;      LEXUSER   DUZ of user
"RTN","LEXDVO",27,0)
 ;      LEXX      Returned value
"RTN","LEXDVO",28,0)
 ;
"RTN","LEXDVO",29,0)
EN ; Single user, LEXAP is unknown
"RTN","LEXDVO",30,0)
 N LEXAP S LEXAP=$$DFI^LEXDM4 Q:+LEXAP=0  W ! D EN1(LEXAP) Q
"RTN","LEXDVO",31,0)
EN1(LEXAP) ; Single user, LEXAP is known
"RTN","LEXDVO",32,0)
 N X,Y,LEXUSER,LEXX S LEXUSER=$G(DUZ) Q:+LEXUSER'>0  Q:'$L($$GET1^DIQ(200,+($G(DUZ)),.01))
"RTN","LEXDVO",33,0)
 ;
"RTN","LEXDVO",34,0)
 S LEXAP=$G(LEXAP) Q:LEXAP=""
"RTN","LEXDVO",35,0)
 I '$D(^LEXT(757.2,+LEXAP,0))&('$D(^LEXT(757.2,"B",LEXAP)))&('$D(^LEXT(757.2,"C",$$UP^XLFSTR(LEXAP))))&('$D(^LEXT(757.2,"AN",LEXAP))) Q
"RTN","LEXDVO",36,0)
 S:+LEXAP'>0 LEXAP=$$AP^LEXDFN2(LEXAP)
"RTN","LEXDVO",37,0)
 ;
"RTN","LEXDVO",38,0)
 Q:+($G(LEXAP))'>0  Q:+($P($G(^LEXT(757.2,+LEXAP,5)),"^",3))'>0
"RTN","LEXDVO",39,0)
 K LEXFIL N LEXCA,LEXDVAL,LEXDNAM,LEXFLD S LEXFLD=3
"RTN","LEXDVO",40,0)
 S LEXDVAL=$$EN^LEXDVOS Q:LEXDVAL="^^"
"RTN","LEXDVO",41,0)
 S LEXDNAM=$P(LEXDVAL,"^",2),LEXDVAL=$P(LEXDVAL,"^",1)
"RTN","LEXDVO",42,0)
 Q:LEXDVAL=""&(LEXDNAM="")  I LEXDVAL="",LEXDNAM'="" D  Q
"RTN","LEXDVO",43,0)
 . N LEXDEL S LEXDEL=$$EN^LEXDM2(LEXUSER,LEXAP,3) I +LEXDEL>0 D KILL
"RTN","LEXDVO",44,0)
 D SET
"RTN","LEXDVO",45,0)
 Q
"RTN","LEXDVO",46,0)
MGR(LEXX) ; Multi-user (for Manager options)
"RTN","LEXDVO",47,0)
 ; Do not save vocabulary, return value to manager option
"RTN","LEXDVO",48,0)
 N LEXCA,LEXDVAL,LEXDNAM S LEXCA=$$MOD^LEXDM(3) Q:LEXCA=0 "^"
"RTN","LEXDVO",49,0)
 Q:(LEXCA="^^") "^^" Q:LEXCA="@" "@^Delete vocabulary"
"RTN","LEXDVO",50,0)
 W ! S LEXDVAL=$$EN^LEXDVOS Q:LEXDVAL="^^" "^^"
"RTN","LEXDVO",51,0)
 S LEXX=LEXDVAL Q LEXX
"RTN","LEXDVO",52,0)
SET ; Set default vocabulary
"RTN","LEXDVO",53,0)
 D SET^LEXDSV(LEXUSER,LEXAP,LEXDVAL,LEXDNAM,LEXFLD) Q
"RTN","LEXDVO",54,0)
KILL ; Kill default vocabulary
"RTN","LEXDVO",55,0)
 D SET^LEXDSV(LEXUSER,LEXAP,"@","Delete",LEXFLD) Q
"RTN","LEXDVOS")
0^142^B14773585
"RTN","LEXDVOS",1,0)
LEXDVOS ;ISL/KER - Default Vocabulary - Select ;04/21/2014
"RTN","LEXDVOS",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXDVOS",3,0)
 ;               
"RTN","LEXDVOS",4,0)
 ; Global Variables
"RTN","LEXDVOS",5,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXDVOS",6,0)
 ;               
"RTN","LEXDVOS",7,0)
 ; External References
"RTN","LEXDVOS",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXDVOS",9,0)
 ;               
"RTN","LEXDVOS",10,0)
 ; Special Look-up in file 757.2 Subset Definitions
"RTN","LEXDVOS",11,0)
 ; Entry:  S X=$$EN^LEXDVOS
"RTN","LEXDVOS",12,0)
 ;
"RTN","LEXDVOS",13,0)
 ; Function returns a 2 piece string
"RTN","LEXDVOS",14,0)
 ;  
"RTN","LEXDVOS",15,0)
 ; $P 1    3 character subset mnemonic
"RTN","LEXDVOS",16,0)
 ;  
"RTN","LEXDVOS",17,0)
 ; $P 2    Name of the subset
"RTN","LEXDVOS",18,0)
 ;   
"RTN","LEXDVOS",19,0)
 ; LEX    Array containing pointers to 757.2
"RTN","LEXDVOS",20,0)
 ; LEXA   Users answer to selection
"RTN","LEXDVOS",21,0)
 ; LEXC   Counter
"RTN","LEXDVOS",22,0)
 ; LEXD   Display
"RTN","LEXDVOS",23,0)
 ; LEXF   Re-display starting from #LEXF
"RTN","LEXDVOS",24,0)
 ; LEXI   Incremental Counter
"RTN","LEXDVOS",25,0)
 ; LEXL   Last entry displayed
"RTN","LEXDVOS",26,0)
 ; LEXLN  Line counter
"RTN","LEXDVOS",27,0)
 ; LEXR   Internal Entry Number (Record) in #757.2
"RTN","LEXDVOS",28,0)
 ; LEXT   Re-display up through #LEXT
"RTN","LEXDVOS",29,0)
 ; LEXX   Return value
"RTN","LEXDVOS",30,0)
 ;
"RTN","LEXDVOS",31,0)
EN(LEXX) ; Select a Vocabulary/Subset
"RTN","LEXDVOS",32,0)
 N X,Y,LEX,LEXC,LEXL,LEXR,LEXA,LEXD D TOT
"RTN","LEXDVOS",33,0)
 S LEXD="",(LEXA,LEXX,LEXC,LEXR)=0
"RTN","LEXDVOS",34,0)
 F  S LEXD=$O(^LEXT(757.2,"AA",LEXD)) Q:LEXD=""!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDVOS",35,0)
 . S LEXR=0
"RTN","LEXDVOS",36,0)
 . F  S LEXR=$O(^LEXT(757.2,"AA",LEXD,LEXR)) Q:+LEXR=0!(LEXA["^")!(+LEXX>0)  D
"RTN","LEXDVOS",37,0)
 . . Q:$P($G(^LEXT(757.2,LEXR,0)),"^",2)=""
"RTN","LEXDVOS",38,0)
 . . Q:$L($P($G(^LEXT(757.2,LEXR,0)),"^",2))'=3
"RTN","LEXDVOS",39,0)
 . . S LEXC=LEXC+1,LEXL=LEXC
"RTN","LEXDVOS",40,0)
 . . S LEX(LEXC)=LEXR,LEX(0)=LEXC
"RTN","LEXDVOS",41,0)
 . . D W(LEXC,LEXR)
"RTN","LEXDVOS",42,0)
 . . D ASK
"RTN","LEXDVOS",43,0)
 D ASK S LEXX=+LEXX K LEX
"RTN","LEXDVOS",44,0)
 I +LEXX>0 S LEXX=$P($G(^LEXT(757.2,+LEXX,0)),"^",2)_"^"_$P($G(^LEXT(757.2,+LEXX,0)),"^",1) Q LEXX
"RTN","LEXDVOS",45,0)
 S:LEXA'["^^" LEXX="^No vocabulary selected" S:LEXA["^^" LEXX="^^"
"RTN","LEXDVOS",46,0)
 Q LEXX
"RTN","LEXDVOS",47,0)
ASK ; Ask for user input
"RTN","LEXDVOS",48,0)
 Q:+LEXX>0  Q:LEXA["^"  Q:+LEXR>0&(LEXC#5'=0)  Q:+LEXR=0&(LEXC#5=0)
"RTN","LEXDVOS",49,0)
 D SEL Q:+LEXA'>0  Q:LEXA>LEXC  S LEXX=$G(LEX(+LEXA))
"RTN","LEXDVOS",50,0)
 Q
"RTN","LEXDVOS",51,0)
SEL ; Select from list
"RTN","LEXDVOS",52,0)
 W ! N X,Y,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","LEXDVOS",53,0)
 S DIR(0)="NAO^1:"_LEXC
"RTN","LEXDVOS",54,0)
 S DIR("A")="Select SUBSET 1-"_LEXC_":  "
"RTN","LEXDVOS",55,0)
 S (DIR("?"),DIR("??"))="^D SH^LEXDVOS"
"RTN","LEXDVOS",56,0)
 D ^DIR S LEXA=Y
"RTN","LEXDVOS",57,0)
 Q
"RTN","LEXDVOS",58,0)
UOUT ; Up Arrow detected
"RTN","LEXDVOS",59,0)
 S:LEXA["^^" LEXX="^^"
"RTN","LEXDVOS",60,0)
 S:LEXA="^" LEXX="^No vocabulary selected"
"RTN","LEXDVOS",61,0)
 Q
"RTN","LEXDVOS",62,0)
VAL ; No Un Arrow (value)
"RTN","LEXDVOS",63,0)
 I +LEXX>0 D  Q
"RTN","LEXDVOS",64,0)
 . I $D(^LEX(757.41,+LEXX)) D  Q
"RTN","LEXDVOS",65,0)
 . . S LEXX=LEXX_"^"_$P($G(^LEX(757.41,+LEXX,0)),"^",1)
"RTN","LEXDVOS",66,0)
 . S LEXX="^No vocabulary selected"
"RTN","LEXDVOS",67,0)
 S LEXX="^No vocabulary selected"
"RTN","LEXDVOS",68,0)
 Q
"RTN","LEXDVOS",69,0)
SH ; Show help
"RTN","LEXDVOS",70,0)
 N LEXR S LEXR=+($E(X,2,$L(X)))
"RTN","LEXDVOS",71,0)
 I $E(X,1)="?",LEXR>0,LEXR<(LEX(0)+1) D
"RTN","LEXDVOS",72,0)
 . S LEXR=LEX(LEXR) D:'$D(^LEXT(757.2,LEXR,100,1)) NODES,STD Q:'$D(^LEXT(757.2,LEXR,100,1))  D DES
"RTN","LEXDVOS",73,0)
 D:$E(X,1)="?"&(LEXR<1!(LEXR>LEX(0))) STD D:$E(X,1)'="?" STD D RD
"RTN","LEXDVOS",74,0)
 Q
"RTN","LEXDVOS",75,0)
STD ; Standard Help
"RTN","LEXDVOS",76,0)
 W !!,"Enter 1-",LEXC," to select a subset, or ""?"" for help, or ""?#"" for descriptive"
"RTN","LEXDVOS",77,0)
 W !,"help on an entry flagged with an ""*"", or ""^"" to exit or <Return> for more."
"RTN","LEXDVOS",78,0)
 Q
"RTN","LEXDVOS",79,0)
DES ; Description Help
"RTN","LEXDVOS",80,0)
 N LEXLN,LEXI S (LEXLN,LEXI)=0
"RTN","LEXDVOS",81,0)
 W !!,?2,$P(^LEXT(757.2,LEXR,0),"^",1),!
"RTN","LEXDVOS",82,0)
 F  S LEXI=$O(^LEXT(757.2,LEXR,100,LEXI)) Q:+LEXI=0  D
"RTN","LEXDVOS",83,0)
 . W !,?4,^LEXT(757.2,LEXR,100,LEXI,0) S LEXLN=LEXLN+1
"RTN","LEXDVOS",84,0)
 D:LEXLN>4 EOP W ! Q
"RTN","LEXDVOS",85,0)
NODES ; No Description Help Available
"RTN","LEXDVOS",86,0)
 W !!,?2,$P(^LEXT(757.2,LEXR,0),"^",1)," does not have a description",! Q
"RTN","LEXDVOS",87,0)
RD ; Re-Display List
"RTN","LEXDVOS",88,0)
 N LEXF,LEXT S LEXT=+($G(LEXL)),LEXF=(+(LEXT#5)-1)
"RTN","LEXDVOS",89,0)
 S:LEXF<0 LEXF=4 S LEXF=LEXT-LEXF S LEXF=LEXF-1
"RTN","LEXDVOS",90,0)
 F  S LEXF=$O(LEX(LEXF)) Q:+LEXF=0!(LEXF'<(LEXT+1))  D
"RTN","LEXDVOS",91,0)
 . W:LEXF=1 ! D W(LEXF,LEX(LEXF))
"RTN","LEXDVOS",92,0)
 Q
"RTN","LEXDVOS",93,0)
W(LEXC,LEXR) ; Write entry
"RTN","LEXDVOS",94,0)
 W !,$J(LEXC,4),".  ",$P(^LEXT(757.2,LEXR,0),"^",1)
"RTN","LEXDVOS",95,0)
 W $S($D(^LEXT(757.2,LEXR,100,1)):"  *",1:"") Q
"RTN","LEXDVOS",96,0)
TOT ; Total Subsets
"RTN","LEXDVOS",97,0)
 N LEXD,LEXR,LEXC S LEXD="",LEXC=0
"RTN","LEXDVOS",98,0)
 F  S LEXD=$O(^LEXT(757.2,"AA",LEXD)) Q:LEXD=""  S LEXR=0 D
"RTN","LEXDVOS",99,0)
 . F  S LEXR=$O(^LEXT(757.2,"AA",LEXD,LEXR)) Q:+LEXR=0  S LEXC=LEXC+1
"RTN","LEXDVOS",100,0)
 W !!,LEXC," Subsets found",!
"RTN","LEXDVOS",101,0)
 Q
"RTN","LEXDVOS",102,0)
EOP ; End of Page 
"RTN","LEXDVOS",103,0)
 W ! N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT S DIR(0)="E" D ^DIR S:X[U LEXA="^" W ! Q
"RTN","LEXEDF1")
0^179^B16274240
"RTN","LEXEDF1",1,0)
LEXEDF1 ;ISL/KER - Edit/Display a Definition (Part 1) ;04/21/2014
"RTN","LEXEDF1",2,0)
 ;;2.0;LEXICON UTILITY;**3,25,80**;Sep 23, 1996;Build 1
"RTN","LEXEDF1",3,0)
 ;               
"RTN","LEXEDF1",4,0)
 ; Global Variables
"RTN","LEXEDF1",5,0)
 ;    ^TMP("LEXDEF")      SACC 2.3.2.5.1
"RTN","LEXEDF1",6,0)
 ;               
"RTN","LEXEDF1",7,0)
 ; External References
"RTN","LEXEDF1",8,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXEDF1",9,0)
 ;    ^DIE                ICR  10018
"RTN","LEXEDF1",10,0)
 ;    ^XMD                ICR  10070
"RTN","LEXEDF1",11,0)
 ;               
"RTN","LEXEDF1",12,0)
 N DIC,DIE,DIR,DIROUT,DIRUT,DLAYGO,DR,DTOUT,DUOUT,DA,X,Y
"RTN","LEXEDF1",13,0)
 N LEX,LEXAID,LEXC,LEXDIC0,LEXE,LEXI,LEXL,LEXLC
"RTN","LEXEDF1",14,0)
 N LEXMC,LEXME,LEXMP,LEXS,LEXSAV,LEXST,LEXTY,LEXX
"RTN","LEXEDF1",15,0)
 K X I $D(DUZ)#2=0 G EXIT
"RTN","LEXEDF1",16,0)
ASK ; Ask user to select an expression to edit the definition
"RTN","LEXEDF1",17,0)
 N LEXAP S DIC("A")="Enter a concept to edit definition:  "
"RTN","LEXEDF1",18,0)
 S:'$D(DIC(0)) DIC(0)="QEAM" S LEXAP=1 D ^LEXA1 I X=""!(+Y'>0) G EXIT
"RTN","LEXEDF1",19,0)
 I +Y<3,+Y>0 D  G EXIT
"RTN","LEXEDF1",20,0)
 . W !,"The definition for ",^LEX(757.01,+Y,0)," is not editable"
"RTN","LEXEDF1",21,0)
 S LEXE=$$EXP^LEXEDF2(+Y) G:'$D(LEXE) EXIT
"RTN","LEXEDF1",22,0)
 ;
"RTN","LEXEDF1",23,0)
 I LEXE="" D  G:'$D(LEXE) ASK G:LEXE="" EXIT
"RTN","LEXEDF1",24,0)
 . W !!,"No selection made, try again using the same concept"
"RTN","LEXEDF1",25,0)
AGAIN . ; Ask user to try again using the same expression
"RTN","LEXEDF1",26,0)
 . S %=2 D YN^DICN S DIC(0)=$S(%=1:"QEM",1:"QEAM")
"RTN","LEXEDF1",27,0)
 . S LEXE=$S(%=-1:"",%=2:"",1:%) K:LEXE=% LEXE W:%=1 ! Q:%'=0
"RTN","LEXEDF1",28,0)
 . I '% D  G AGAIN
"RTN","LEXEDF1",29,0)
 . . W !!,"You were given various forms of an expression "
"RTN","LEXEDF1",30,0)
 . . W "(concept, synonyms and"
"RTN","LEXEDF1",31,0)
 . . W !,"lexical variants) to select from.  "
"RTN","LEXEDF1",32,0)
 . . W "Do you wish to try again using"
"RTN","LEXEDF1",33,0)
 . . W !,"the same concept"
"RTN","LEXEDF1",34,0)
 D:+($G(LEXE))>1&($D(^LEX(757.01,+($G(LEXE)),0))) EDIT(LEXE) G EXIT  ; PCH 3
"RTN","LEXEDF1",35,0)
EDIT(LEXE) ; Edit the expression definition
"RTN","LEXEDF1",36,0)
 W !,$E(^LEX(757.01,LEXE,0),1,78),! K ^TMP("LEXDEF",$J)
"RTN","LEXEDF1",37,0)
 G:'$D(LEXE) EDITQ
"RTN","LEXEDF1",38,0)
 S LEXMP=0 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",39,0)
 . S ^TMP("LEXDEF",$J,4)="Old Definition:"
"RTN","LEXEDF1",40,0)
 . S ^TMP("LEXDEF",$J,5)=^LEX(757.01,LEXE,3,0),(LEXMP,LEXLC)=0
"RTN","LEXEDF1",41,0)
 . F  S LEXLC=$O(^LEX(757.01,LEXE,3,LEXLC)) Q:+LEXLC=0  D
"RTN","LEXEDF1",42,0)
 . . S LEXMP=LEXLC+5
"RTN","LEXEDF1",43,0)
 . . S ^TMP("LEXDEF",$J,LEXMP)=^LEX(757.01,LEXE,3,LEXLC,0)
"RTN","LEXEDF1",44,0)
 N LEXDIC0 S DA=+LEXE,DIE="^LEX(757.01,",DR="6"
"RTN","LEXEDF1",45,0)
 S:DIC(0)'["L" DIC(0)=DIC(0)_"L" S LEXDIC0=DIC(0),DLAYGO=757
"RTN","LEXEDF1",46,0)
 L +^LEX(757.01,LEXE):1
"RTN","LEXEDF1",47,0)
 I '$T D  G EDITQ
"RTN","LEXEDF1",48,0)
 . W !,"This record is being edited by "
"RTN","LEXEDF1",49,0)
 . W "another user, try again later"
"RTN","LEXEDF1",50,0)
 S LEXSAV=0 D SNAP^LEXEDF2(+LEXE),^DIE,SHOT^LEXEDF2(+LEXE)
"RTN","LEXEDF1",51,0)
 S LEX=$$CHANGE^LEXEDF2
"RTN","LEXEDF1",52,0)
 I +LEX>0 S LEXSAV=$$SAVE^LEXEDF2
"RTN","LEXEDF1",53,0)
 I 'LEXSAV,+LEX>0 D RESTORE^LEXEDF2(+LEXE)
"RTN","LEXEDF1",54,0)
 K DLAYGO,LEXDIC0 L -^LEX(757.01,LEXE) G:+LEX=0!(+LEXSAV=0) RESULTS
"RTN","LEXEDF1",55,0)
 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",56,0)
 . S ^TMP("LEXDEF",$J,1)="TXT:  "_^LEX(757.01,LEXE,0)
"RTN","LEXEDF1",57,0)
 . S ^TMP("LEXDEF",$J,2)="IFN:  "_LEXE,^TMP("LEXDEF",$J,3)=""
"RTN","LEXEDF1",58,0)
 S:LEXMP=0 LEXMP=2
"RTN","LEXEDF1",59,0)
 I $D(^LEX(757.01,LEXE,3,0)) D
"RTN","LEXEDF1",60,0)
 . S ^TMP("LEXDEF",$J,(LEXMP+1))=""
"RTN","LEXEDF1",61,0)
 . S ^TMP("LEXDEF",$J,LEXMP+2)="New Definition:"
"RTN","LEXEDF1",62,0)
 . S ^TMP("LEXDEF",$J,LEXMP+3)=^LEX(757.01,LEXE,3,0)
"RTN","LEXEDF1",63,0)
 . S LEXMP=LEXMP+4
"RTN","LEXEDF1",64,0)
 . S LEXLC=0 F  S LEXLC=$O(^LEX(757.01,LEXE,3,LEXLC)) Q:+LEXLC=0  D
"RTN","LEXEDF1",65,0)
 . . S ^TMP("LEXDEF",$J,LEXMP)=^LEX(757.01,LEXE,3,LEXLC,0)
"RTN","LEXEDF1",66,0)
 . . S LEXMP=LEXMP+1
"RTN","LEXEDF1",67,0)
 D:+LEX>0&(+LEXSAV>0) SENDDEF
"RTN","LEXEDF1",68,0)
RESULTS ; Display results of edit
"RTN","LEXEDF1",69,0)
 I +LEXSAV=0 D
"RTN","LEXEDF1",70,0)
 . I +LEX W !,"Changes to the definition were not saved" Q
"RTN","LEXEDF1",71,0)
 . W !,"No changes made"
"RTN","LEXEDF1",72,0)
 I +LEXSAV>0 W !,$P(LEX,U,2)
"RTN","LEXEDF1",73,0)
EDITQ ; Quit edit
"RTN","LEXEDF1",74,0)
 K DIC,DIE,DIR,DLAYGO,DR,LEX,LEXAID,LEXC,LEXDIC0
"RTN","LEXEDF1",75,0)
 K LEXE,LEXI,LEXL,LEXLC,LEXMC,LEXME,LEXMP,LEXS
"RTN","LEXEDF1",76,0)
 K LEXSAV,LEXST,LEXTY,LEXX,^TMP("LEXDEF",$J) Q
"RTN","LEXEDF1",77,0)
DISP(LEXX) ; Display a definition
"RTN","LEXEDF1",78,0)
 Q:+($G(LEXX))=0  I '$D(^LEX(757.01,LEXX,3,1,0)) Q
"RTN","LEXEDF1",79,0)
 N X S X=0 F  S X=$O(^LEX(757.01,LEXX,3,X)) Q:+X=0  D
"RTN","LEXEDF1",80,0)
 . W:X=1 !!,"Definition:  ",! W !,^LEX(757.01,LEXX,3,X,0)
"RTN","LEXEDF1",81,0)
 Q
"RTN","LEXEDF1",82,0)
EXIT ; Clean up and exit
"RTN","LEXEDF1",83,0)
 K DIC,DIE,DIR,DLAYGO,DR,DA,X,Y,LEX,LEXAID,LEXC,LEXDIC0
"RTN","LEXEDF1",84,0)
 K LEXE,LEXI,LEXL,LEXLC,LEXMC,LEXME,LEXMP,LEXS
"RTN","LEXEDF1",85,0)
 K LEXSAV,LEXST,LEXTY,LEXX,^TMP("LEXDEF",$J) Q
"RTN","LEXEDF1",86,0)
SENDDEF ; Send edited definition to ISC
"RTN","LEXEDF1",87,0)
 N DIFROM,LEXADR K XMZ Q:'$D(^TMP("LEXDEF",$J))  S LEXADR=$$ADR^LEXU Q:'$L(LEXADR)
"RTN","LEXEDF1",88,0)
 S XMSUB=$P(LEX,U,2)_" in Expression File (#757.01)"
"RTN","LEXEDF1",89,0)
 S XMY(("G.LEXICON@"_LEXADR))=""
"RTN","LEXEDF1",90,0)
 S XMTEXT="^TMP(""LEXDEF"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEXEDF1",91,0)
 K ^TMP("LEXDEF",$J),XCNP,XMDUZ,XMY("G.LEXICON@ISC.DOMAIN.EXT"),XMZ
"RTN","LEXEDF1",92,0)
 K XMSUB,XMY,XMTEXT
"RTN","LEXEDF1",93,0)
 Q
"RTN","LEXEDF2")
0^180^B23335121
"RTN","LEXEDF2",1,0)
LEXEDF2 ;ISL/KER - Edit/Display a Definition (Part 2) ;04/21/2014
"RTN","LEXEDF2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXEDF2",3,0)
 ;               
"RTN","LEXEDF2",4,0)
 ; Global Variables
"RTN","LEXEDF2",5,0)
 ;    ^TMP("LEXE")        SACC 2.3.2.5.1
"RTN","LEXEDF2",6,0)
 ;               
"RTN","LEXEDF2",7,0)
 ; External References
"RTN","LEXEDF2",8,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXEDF2",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEXEDF2",10,0)
 ;               
"RTN","LEXEDF2",11,0)
EXP(LEXX) ; Select an expression
"RTN","LEXEDF2",12,0)
 N Y,LEXS,LEXC,LEXMC,LEXE,LEXI,LEXME S Y=LEXX,(LEXS,LEXC)=0
"RTN","LEXEDF2",13,0)
 S LEXMC=$P($G(^LEX(757.01,+Y,1)),U,1),LEXME=$P(^LEX(757,LEXMC,0),U,1)
"RTN","LEXEDF2",14,0)
 S ^TMP("LEXE",$J,0)=1,^TMP("LEXE",$J,1)=LEXME,(LEXI,LEXE)=0
"RTN","LEXEDF2",15,0)
 F  S LEXI=$O(^LEX(757.01,"AMC",LEXMC,LEXI)) Q:+LEXI=0  D
"RTN","LEXEDF2",16,0)
 . I +($P($G(^LEX(757.01,LEXI,1)),U,2))>1,+($P($G(^LEX(757.01,LEXI,1)),U,2))<4 D
"RTN","LEXEDF2",17,0)
 . . S ^TMP("LEXE",$J,0)=^TMP("LEXE",$J,0)+1
"RTN","LEXEDF2",18,0)
 . . S ^TMP("LEXE",$J,^TMP("LEXE",$J,0))=LEXI
"RTN","LEXEDF2",19,0)
 W ! W $S(^TMP("LEXE",$J,0)>1:"",1:"Only "),^TMP("LEXE",$J,0)
"RTN","LEXEDF2",20,0)
 W $S(^TMP("LEXE",$J,0)>1:" expressions were ",1:" expression was ")
"RTN","LEXEDF2",21,0)
 W "found representing the selected concept:"
"RTN","LEXEDF2",22,0)
 W:^TMP("LEXE",$J,0)=1 !
"RTN","LEXEDF2",23,0)
 I $D(^TMP("LEXE",$J,0)),^TMP("LEXE",$J,0)>1 D
"RTN","LEXEDF2",24,0)
MULTI . ; Multiple expression found
"RTN","LEXEDF2",25,0)
 . K LEXE
"RTN","LEXEDF2",26,0)
 . F LEXC=1:1:^TMP("LEXE",$J,0) Q:((LEXS>0)&(LEXS<LEXC+1))  D
"RTN","LEXEDF2",27,0)
 . . W:LEXC#5=1 ! W !,$J(LEXC,4),": "
"RTN","LEXEDF2",28,0)
 . . N LEXTY S LEXTY=$$TYPE(^TMP("LEXE",$J,LEXC)) W LEXTY
"RTN","LEXEDF2",29,0)
 . . W $E(^LEX(757.01,^TMP("LEXE",$J,LEXC),0),1,64)
"RTN","LEXEDF2",30,0)
 . . W:LEXC#5=0 ! S:LEXC#5=0 LEXS=$$SEL
"RTN","LEXEDF2",31,0)
 . . I LEXS>0&(LEXS<LEXC+1) S LEXE=^TMP("LEXE",$J,LEXS) Q
"RTN","LEXEDF2",32,0)
 . I LEXC#5'=0,+LEXS=0 D
"RTN","LEXEDF2",33,0)
 . . W ! S LEXS=$$SEL
"RTN","LEXEDF2",34,0)
 . . I LEXS>0&(LEXS<LEXC+1) S LEXE=^TMP("LEXE",$J,LEXS)
"RTN","LEXEDF2",35,0)
 I $D(^TMP("LEXE",$J,0)),^TMP("LEXE",$J,0)=1 D
"RTN","LEXEDF2",36,0)
ONE . ; One expression found
"RTN","LEXEDF2",37,0)
 . K LEXE N LEXTY
"RTN","LEXEDF2",38,0)
 . S LEXTY=$$TYPE(^TMP("LEXE",$J,1)) W LEXTY
"RTN","LEXEDF2",39,0)
 . W $E(^LEX(757.01,^TMP("LEXE",$J,1),0),1,69)
"RTN","LEXEDF2",40,0)
 . W !," OK" S %=1 D YN^DICN D:'% EXPHLP G:'% ONE
"RTN","LEXEDF2",41,0)
 . S:%=1 LEXE=^TMP("LEXE",$J,1) S:%=-1!(%=2) LEXE="" K %,%Y
"RTN","LEXEDF2",42,0)
 S:'$D(LEXE) LEXE=0 K ^TMP("LEXE",$J),LEXC,LEXS,LEXMC
"RTN","LEXEDF2",43,0)
 S LEXX=LEXE Q LEXX
"RTN","LEXEDF2",44,0)
SEL(X) ; Select expression
"RTN","LEXEDF2",45,0)
 N Y,DTOUT,DUOUT,DIRUT,DIROUT S DIR("A")="Select 1-"_LEXC_":  "
"RTN","LEXEDF2",46,0)
 S DIR("?")="Answer must be from 1 to "_LEXC_", or <Return> to continue"
"RTN","LEXEDF2",47,0)
 S DIR("??")="^D EXPHLP^LEXEDF2"
"RTN","LEXEDF2",48,0)
 S DIR(0)="NAO^1:"_LEXC_":0" D ^DIR S:$D(DTOUT)!(X[U) X=U K DIR Q X
"RTN","LEXEDF2",49,0)
EXPHLP ; Selection help
"RTN","LEXEDF2",50,0)
 W !!,"There are several types of expressions "
"RTN","LEXEDF2",51,0)
 W "which can represent a concept:"
"RTN","LEXEDF2",52,0)
 W !!,"    Major Concept"
"RTN","LEXEDF2",53,0)
 W !,"    Synonym of the Concept"
"RTN","LEXEDF2",54,0)
 W !,"    Lexical Variant of the Concept"
"RTN","LEXEDF2",55,0)
 W !,"    Lexical Variant of a Synonym of the Concept"
"RTN","LEXEDF2",56,0)
 I $D(^TMP("LEXE",$J,0)),^TMP("LEXE",$J,0)>1 D
"RTN","LEXEDF2",57,0)
 . W !!,"You may edit any of these forms of expressions.",!
"RTN","LEXEDF2",58,0)
 . N LEXST,LEXI S:LEXC#5<1 LEXST=1
"RTN","LEXEDF2",59,0)
 . S:LEXC#5>0 LEXST=(((LEXC\5)*5)+1)
"RTN","LEXEDF2",60,0)
 . F LEXI=LEXST:1:LEXC D
"RTN","LEXEDF2",61,0)
 . . W !,$J(LEXI,4),": "
"RTN","LEXEDF2",62,0)
 . . N LEXTY S LEXTY=$$TYPE(^TMP("LEXE",$J,LEXI)) W LEXTY
"RTN","LEXEDF2",63,0)
 . . W $E(^LEX(757.01,^TMP("LEXE",$J,LEXI),0),1,64)
"RTN","LEXEDF2",64,0)
 I $D(^TMP("LEXE",$J,0)),^TMP("LEXE",$J,0)=1 D
"RTN","LEXEDF2",65,0)
 . W !!,"In this case, there are no Synonyms or "
"RTN","LEXEDF2",66,0)
 . W "Lexical Variants to select from,"
"RTN","LEXEDF2",67,0)
 . W !,"you can only edit the Concept",!
"RTN","LEXEDF2",68,0)
 Q
"RTN","LEXEDF2",69,0)
TYPE(LEXX) ; Expression type
"RTN","LEXEDF2",70,0)
 S LEXX=$P(^LEX(757.01,LEXX,1),U,2)
"RTN","LEXEDF2",71,0)
 S:LEXX=1 LEXX="Concept  - " S:LEXX=2 LEXX="Synonym  - " S:LEXX=3 LEXX="Variant  - "
"RTN","LEXEDF2",72,0)
 S:LEXX=991 LEXX="Related  - " S:LEXX=992 LEXX="Modified - " S:LEXX'["-" LEXX="Other    - "
"RTN","LEXEDF2",73,0)
 Q LEXX
"RTN","LEXEDF2",74,0)
SNAP(LEXX) ; Picture of definition before edit
"RTN","LEXEDF2",75,0)
 Q:+($G(LEXX))'>2  S LEXX=+LEXX
"RTN","LEXEDF2",76,0)
 S:'$D(LEXAID) LEXAID="SNAP" K LEX(LEXAID)
"RTN","LEXEDF2",77,0)
 I '$D(^LEX(757.01,LEXX,3,0)) K LEXAID Q
"RTN","LEXEDF2",78,0)
 N LEXC,LEXL S (LEXC,LEXL)=0
"RTN","LEXEDF2",79,0)
 S:$D(^LEX(757.01,LEXX,3,0)) LEX(LEXAID)=^LEX(757.01,LEXX,3,0)
"RTN","LEXEDF2",80,0)
 F  S LEXC=$O(^LEX(757.01,LEXX,3,LEXC)) Q:+LEXC=0  D
"RTN","LEXEDF2",81,0)
 . S LEXL=LEXL+1,LEX(LEXAID,LEXL)=^LEX(757.01,LEXX,3,LEXC,0)
"RTN","LEXEDF2",82,0)
 S:+LEXL>0 LEX(LEXAID,0)=LEXL K LEXAID
"RTN","LEXEDF2",83,0)
 Q
"RTN","LEXEDF2",84,0)
SHOT(LEXX) ; Picture of definition after edit
"RTN","LEXEDF2",85,0)
 S LEXAID="SHOT" D SNAP(LEXX) K LEXAID Q
"RTN","LEXEDF2",86,0)
CHANGE(LEXX) ; Detect change in definition before/after edit
"RTN","LEXEDF2",87,0)
 S LEXX=""
"RTN","LEXEDF2",88,0)
 I '$D(LEX("SNAP")),'$D(LEX("SHOT")) Q "0^Definition not Change"
"RTN","LEXEDF2",89,0)
 I '$D(LEX("SNAP")),$D(LEX("SHOT")) Q "1^Definition Added"
"RTN","LEXEDF2",90,0)
 I $D(LEX("SNAP")),'$D(LEX("SHOT")) Q "1^Definition Deleted"
"RTN","LEXEDF2",91,0)
 I LEX("SNAP",0)'=LEX("SHOT",0) Q "1^Definition Changed"
"RTN","LEXEDF2",92,0)
 N LEXC F LEXC=1:1:LEX("SNAP",0) Q:+LEXC=0!($L($G(LEXX),"^")>1)  D
"RTN","LEXEDF2",93,0)
 . I LEX("SNAP",LEXC)'=LEX("SHOT",LEXC) D
"RTN","LEXEDF2",94,0)
 . . S LEXX="1^Definition Changed"
"RTN","LEXEDF2",95,0)
 I $L($G(LEXX),"^")'>1 S LEXX="0^Definition not Changed"
"RTN","LEXEDF2",96,0)
 Q LEXX
"RTN","LEXEDF2",97,0)
RESTORE(LEXX) ; Restore original definition
"RTN","LEXEDF2",98,0)
 I '$D(LEX("SNAP")) K ^LEX(757.01,LEXX,3) Q
"RTN","LEXEDF2",99,0)
 N LEXC S LEXC=0 K ^LEX(757.01,LEXX,3)
"RTN","LEXEDF2",100,0)
 S ^LEX(757.01,LEXX,3,0)=LEX("SNAP")
"RTN","LEXEDF2",101,0)
 F  S LEXC=$O(LEX("SNAP",LEXC)) Q:+LEXC=0  D
"RTN","LEXEDF2",102,0)
 . S ^LEX(757.01,LEXX,3,LEXC,0)=LEX("SNAP",LEXC)
"RTN","LEXEDF2",103,0)
 Q
"RTN","LEXEDF2",104,0)
SAVE(LEXX) ; Save the edit
"RTN","LEXEDF2",105,0)
 N DTOUT,DUOUT,DIR S DIR(0)="Y^AO"
"RTN","LEXEDF2",106,0)
 S DIR("?",1)="By answering ""Yes"" the proposed changes you have made to"
"RTN","LEXEDF2",107,0)
 S DIR("?")="the definition during this edit session will be stored."
"RTN","LEXEDF2",108,0)
 S DIR("A")="Make changes permanent",DIR("B")="YES"
"RTN","LEXEDF2",109,0)
 D ^DIR K DIR S LEXX=+Y S:$D(DTOUT)!($D(DUOUT)) LEXX=0 Q LEXX
"RTN","LEXERF")
0^181^B6876897
"RTN","LEXERF",1,0)
LEXERF ;ISL/KER - Functions for Exc/Rep Words ;04/21/2014
"RTN","LEXERF",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXERF",3,0)
 ;               
"RTN","LEXERF",4,0)
 ; Global Variables
"RTN","LEXERF",5,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXERF",6,0)
 ;               
"RTN","LEXERF",7,0)
 ; External References
"RTN","LEXERF",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXERF",9,0)
 ;               
"RTN","LEXERF",10,0)
EXIST(X) ; Boolean function returns:
"RTN","LEXERF",11,0)
 ;    0    If X will result in a unsuccessful search (not found)
"RTN","LEXERF",12,0)
 ;    1    If X will result in a successful search (found)
"RTN","LEXERF",13,0)
 ;   IFN   If X has an exact match (found)
"RTN","LEXERF",14,0)
 Q:'$D(X) 0 Q:X="" 0
"RTN","LEXERF",15,0)
 I $D(^LEX(757.01,"AB",$$UP^XLFSTR(X))) Q $O(^LEX(757.01,"AB",$$UP^XLFSTR(X),0))
"RTN","LEXERF",16,0)
 N LEXOK D PTX^LEXTOKN S LEXOK=1
"RTN","LEXERF",17,0)
 I '$D(^TMP("LEXTKN",$J,0)) K ^TMP("LEXTKN"),LEXOK Q 0
"RTN","LEXERF",18,0)
 I ^TMP("LEXTKN",$J,0)<1 K ^TMP("LEXTKN"),LEXOK Q 0
"RTN","LEXERF",19,0)
 I ^TMP("LEXTKN",$J,0)=1 D  K ^TMP("LEXTKN"),LEXKEY,LEXKEY2 Q LEXOK
"RTN","LEXERF",20,0)
 . S LEXKEY=$O(^TMP("LEXTKN",$J,1,""))
"RTN","LEXERF",21,0)
 . S:$L(LEXKEY)>1 LEXKEY2=$E(LEXKEY,1,$L(LEXKEY)-1)_$C($A($E(LEXKEY,$L(LEXKEY)))-1)_"~"
"RTN","LEXERF",22,0)
 . S:$L(LEXKEY)=1 LEXKEY2=$C($A(LEXKEY)-1)_"~"
"RTN","LEXERF",23,0)
 . S:$G(LEXKEY2)="" LEXKEY2=""
"RTN","LEXERF",24,0)
 . S:LEXKEY="" LEXOK=0 Q:LEXKEY=""
"RTN","LEXERF",25,0)
 . I $O(^LEX(757.01,"AWRD",LEXKEY2))[LEXKEY S LEXOK=1 Q
"RTN","LEXERF",26,0)
 . S LEXOK=0
"RTN","LEXERF",27,0)
 N LEXKEY,LEXKEY2,LEXREC,LEXWRD,LEXOTH,LEXCNT
"RTN","LEXERF",28,0)
 S (LEXOK,LEXREC)=0,LEXKEY=$O(^TMP("LEXTKN",$J,1,""))
"RTN","LEXERF",29,0)
 S LEXKEY2=$S($L(LEXKEY)>1:$E(LEXKEY,1,$L(LEXKEY)-1)_$C($A($E(LEXKEY,$L(LEXKEY)))-1)_"~",$L(LEXKEY)=1:$C($A(LEXKEY)-1)_"~",1:"")
"RTN","LEXERF",30,0)
 I LEXKEY2="" K LEXKEY,LEXKEY2,LEXREC,LEXWRD,LEXOTH,LEXCNT Q 0
"RTN","LEXERF",31,0)
 F  S LEXKEY2=$O(^LEX(757.01,"AWRD",LEXKEY2)) Q:LEXKEY2'[LEXKEY!(LEXOK)  D
"RTN","LEXERF",32,0)
 . S LEXREC=0 F  S LEXREC=$O(^LEX(757.01,"AWRD",LEXKEY2,LEXREC)) Q:+LEXREC=0!(LEXOK)  D
"RTN","LEXERF",33,0)
 . . S (LEXCNT,LEXWRD)=1,LEXOTH="" F  S LEXWRD=$O(^TMP("LEXTKN",$J,LEXWRD)) Q:+LEXWRD=0  D
"RTN","LEXERF",34,0)
 . . . S LEXOTH=$O(^TMP("LEXTKN",$J,LEXWRD,""))
"RTN","LEXERF",35,0)
 . . . S:$$UP^XLFSTR($G(^LEX(757.01,LEXREC,0)))[$$UP^XLFSTR(LEXOTH) LEXCNT=LEXCNT+1
"RTN","LEXERF",36,0)
 . . . S:LEXCNT=^TMP("LEXTKN",$J,0) LEXOK=1 S:LEXCNT'=^TMP("LEXTKN",$J,0) LEXOK=0
"RTN","LEXERF",37,0)
 K ^TMP("LEXTKN"),LEXKEY,LEXWRD,LEXREC,LEXCNT,LEXOTH Q LEXOK
"RTN","LEXERF",38,0)
ADDEXC(X) ; Boolean function returns:
"RTN","LEXERF",39,0)
 ;    0    Not OK to add X to the Excluded Words file #757.04
"RTN","LEXERF",40,0)
 ;    1    OK to add X to the Excluded Words file #757.04
"RTN","LEXERF",41,0)
 Q:X="" 0
"RTN","LEXERF",42,0)
 I +(+($$ISEXC(X))+($$ISREP(X))+($$ISBY(X)))>0 Q 0
"RTN","LEXERF",43,0)
 Q 1
"RTN","LEXERF",44,0)
ISREP(X) ; Boolean function returns:
"RTN","LEXERF",45,0)
 ;    0    If X is not a "Replacement" word
"RTN","LEXERF",46,0)
 ;    1    If X is a "Replacement" word
"RTN","LEXERF",47,0)
 Q:X="" 0 Q:$D(^LEX(757.05,"AB",$$UP^XLFSTR(X))) 1 Q 0
"RTN","LEXERF",48,0)
ISBY(X) ; Boolean function returns:
"RTN","LEXERF",49,0)
 ;    0    If X is not a "Replacement" term
"RTN","LEXERF",50,0)
 ;    1    If X is a "Replacement" term
"RTN","LEXERF",51,0)
 Q:X="" 0 Q:$D(^LEX(757.04,"C",$$UP^XLFSTR(X))) 1 Q 0
"RTN","LEXERF",52,0)
ISEXC(X) ; Boolean function returns:
"RTN","LEXERF",53,0)
 ;    0    If X is not an "Excluded" word
"RTN","LEXERF",54,0)
 ;   IFN   If X is an "Excluded" word
"RTN","LEXERF",55,0)
 Q:X="" 0
"RTN","LEXERF",56,0)
 I $D(^LEX(757.04,"AB",$$UP^XLFSTR(X))) Q $O(^LEX(757.04,"AB",$$UP^XLFSTR(X),0))
"RTN","LEXERF",57,0)
 Q 0
"RTN","LEXERI")
0^182^B28387082
"RTN","LEXERI",1,0)
LEXERI ;ISL/KER - Exc/Rep Word Input Transformations ;04/21/2014
"RTN","LEXERI",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXERI",3,0)
 ;               
"RTN","LEXERI",4,0)
 ; Global Variables
"RTN","LEXERI",5,0)
 ;    None
"RTN","LEXERI",6,0)
 ;               
"RTN","LEXERI",7,0)
 ; External References
"RTN","LEXERI",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXERI",9,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXERI",10,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXERI",11,0)
 ;    ^DIK                ICR  10013
"RTN","LEXERI",12,0)
 ;               
"RTN","LEXERI",13,0)
 Q
"RTN","LEXERI",14,0)
EXC ; Input transformation for ^LEX(757.04, - .01
"RTN","LEXERI",15,0)
 Q:'$D(X)  S LEXX=X
"RTN","LEXERI",16,0)
 I LEXX[" " D  K X Q
"RTN","LEXERI",17,0)
 . W !,$C(34),X,$C(34)," contains a space"
"RTN","LEXERI",18,0)
 S LEXX=$$CVT(LEXX)
"RTN","LEXERI",19,0)
 I $D(^LEX(757.04,"AB",$E(LEXX,1,40))) D  Q
"RTN","LEXERI",20,0)
 . N LEXDA S LEXDA=$G(DA) I +LEXDA>0,$D(^LEX(757.04,"AB",$E(LEXX,1,40),LEXDA)) Q
"RTN","LEXERI",21,0)
 . W !,$C(34),LEXX,$C(34)," is already defined as an excluded word" K X
"RTN","LEXERI",22,0)
 I $D(^LEX(757.05,"AB",$E(LEXX,1,40))) D  Q
"RTN","LEXERI",23,0)
 . W !,$C(34),LEXX,$C(34)," has been defined as a replacement word (file #757.05)"
"RTN","LEXERI",24,0)
 . W !!,"You can not exclude a word from a search which is to be replaced"
"RTN","LEXERI",25,0)
 . W !,"by another expression prior to performing the search"
"RTN","LEXERI",26,0)
 I $D(^LEX(757.05,"C",$E($$UP^XLFSTR(LEXX),1,40))) D  K X Q
"RTN","LEXERI",27,0)
 . W !,$C(34),LEXX,$C(34)," has been defined as a replacement word (file #757.05)"
"RTN","LEXERI",28,0)
 . W !!,"You can not exclude a word from a search which is to be inserted"
"RTN","LEXERI",29,0)
 . W !,"as replacement text prior to performing the search"
"RTN","LEXERI",30,0)
 S X=LEXX
"RTN","LEXERI",31,0)
 Q
"RTN","LEXERI",32,0)
REP ; Input Transformation for ^LEX(757.05, - .01
"RTN","LEXERI",33,0)
 Q:'$D(X)  S LEXX=X
"RTN","LEXERI",34,0)
 N LEXOK,LEXPSN S LEXOK=1 F LEXPSN=1:1:$L(LEXX) D
"RTN","LEXERI",35,0)
 . I $E(LEXX,LEXPSN)'?1A&($E(LEXX,LEXPSN)'="/") S LEXOK=0
"RTN","LEXERI",36,0)
 I 'LEXOK D  K X Q
"RTN","LEXERI",37,0)
 . W !,"Alpha-numeric expression.  The only punctuation allowed is the slash ""/"""
"RTN","LEXERI",38,0)
 S LEXX=$$CVT(LEXX)
"RTN","LEXERI",39,0)
 I $D(^LEX(757.04,"AB",$E(X,1,40))) N LEX S LEX=0 D  I 'LEX K X Q
"RTN","LEXERI",40,0)
 . W !!,$C(7),$C(34),LEXX,$C(34)," already exist in the Excluded Words file."
"RTN","LEXERI",41,0)
 . W !,"Do you want to delete it from the Excluded Words file"
"RTN","LEXERI",42,0)
 . W !,"and continue to add it as a replacement word?  No//  "
"RTN","LEXERI",43,0)
REP2 . R LEX:300 I '$T!(LEX="")!(LEX[U) S LEX=0 Q
"RTN","LEXERI",44,0)
 . I LEX["?" D  G REP2
"RTN","LEXERI",45,0)
 . . W !!,"Yes",!,"Add ",LEXX," to the Replacement Words file and delete it",!,"from the Excluded Words file"
"RTN","LEXERI",46,0)
 . . W !!,"No",!,"Do not add ",LEXX," to the Replacement Words file and ",!,"retain it in the Excluded Words file"
"RTN","LEXERI",47,0)
 . . W !!,"",!,"Delete?  No//  "
"RTN","LEXERI",48,0)
 . I $E(LEX,1)'="Y"&($E(LEX,1)'="N")&($E(LEX,1)'="y")&($E(LEX,1)'="n") W !!,"",!,"Delete?  No//  " G REP2
"RTN","LEXERI",49,0)
 . I $E(LEX,1)="Y"!($E(LEX,1)="y") S LEX=1 D  Q
"RTN","LEXERI",50,0)
 . . S ZTSAVE("X")="",ZTRTN="DEXC^LEXERI",ZTDESC="Deleting "_X_" from Excluded Words file #757.04"
"RTN","LEXERI",51,0)
 . . S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS W:$D(ZTSK) !!,"Deleting "_X_" from Excluded Words file #757.04" K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXERI",52,0)
 . S LEX=0
"RTN","LEXERI",53,0)
 I $D(^LEX(757.05,"AB",$E(X,1,40))) D  K:+($G(LEX)) LEX,LEXR Q
"RTN","LEXERI",54,0)
 . I $O(^LEX(757.05,"AB",$E(X,1,40),0))=+DA Q
"RTN","LEXERI",55,0)
 . S (LEX,LEXR)=0 F  S LEXR=$O(^LEX(757.05,"AB",$E(X,1,40),LEXR)) D  Q:+LEXR=0
"RTN","LEXERI",56,0)
 . . I +LEXR>0,$D(^LEX(757.05,LEXR,0)),$P(^LEX(757.05,LEXR,0),"^",3)="R" D  S LEXR=0
"RTN","LEXERI",57,0)
 . . . W !!,$C(34),LEXX,$C(34)," already exist in the Replacement Words file (#757.05)"
"RTN","LEXERI",58,0)
 . . . W !,"as a (R)eplaced word.  You may alter the original entry to be a"
"RTN","LEXERI",59,0)
 . . . W !,"(L)inked word, but you can not (R)eplace ",$C(34),LEXX,$C(34)," with multiple"
"RTN","LEXERI",60,0)
 . . . W !,"expressions/concepts",!!
"RTN","LEXERI",61,0)
 . . . S LEX=1
"RTN","LEXERI",62,0)
 S X=LEXX
"RTN","LEXERI",63,0)
 Q
"RTN","LEXERI",64,0)
DEXC ; Delete entry from Excluded Words file #757.04
"RTN","LEXERI",65,0)
 Q:'$D(X)  Q:'$D(^LEX(757.04,"AB",$E(X,1,40)))  S DA=$O(^LEX(757.04,"AB",$E(X,1,40),0)),DIK="^LEX(757.04," D ^DIK K DA,DIK S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXERI",66,0)
REPBY ; Input Transformation for ^LEX(757.05, - 1
"RTN","LEXERI",67,0)
 Q:'$D(X)  N LEXX S LEXX=$$CVT(X)
"RTN","LEXERI",68,0)
 Q:$D(^LEX(757.05,"C",$E(LEXX,1,40),DA))
"RTN","LEXERI",69,0)
 I '+($$EXIST^LEXERF(LEXX)) D  K X,LEXX Q
"RTN","LEXERI",70,0)
 . W !!,$C(34),LEXX,$C(34)," does not exist in the Lexicon.  You"
"RTN","LEXERI",71,0)
 . W !,"may not replace a word with text not found in the Lexicon,"
"RTN","LEXERI",72,0)
 . W !,"resulting in unsuccessful searches."
"RTN","LEXERI",73,0)
 N LEXOK,LEXJ,LEXI S (LEXOK,LEXJ)=1,LEXI=""
"RTN","LEXERI",74,0)
 F  S LEXI=$P(LEXX," ",LEXJ) D  S LEXJ=LEXJ+1 I 'LEXOK!($P(LEXX," ",LEXJ)="") Q
"RTN","LEXERI",75,0)
 . I $D(^LEX(757.05,"AB",$E(LEXI,1,40))) D
"RTN","LEXERI",76,0)
 . . N LEXR S LEXR=0 W !,LEXI
"RTN","LEXERI",77,0)
 . . F  S LEXR=$O(^LEX(757.05,"AB",$E(LEXI,1,40),LEXR)) D  Q:+LEXR=0
"RTN","LEXERI",78,0)
 . . . I +LEXR'=0,$D(^LEX(757.05,LEXR,0)),$P(^LEX(757.05,LEXR,0),"^",3)="R" D  S LEXR=0
"RTN","LEXERI",79,0)
 . . . . W !!,"WARNING:  Your input contains the word ",$C(34),LEXI,$C(34)," which is"
"RTN","LEXERI",80,0)
 . . . . W !,"already defined in the Replacement Words file (#757.05) as a (R)eplaced"
"RTN","LEXERI",81,0)
 . . . . W !,"word.  This may cause problems (i.e., circular definition of a word) "
"RTN","LEXERI",82,0)
 . . . . W !,"resulting in an unsuccessful search in the Lexicon."
"RTN","LEXERI",83,0)
 . . . . W !!,"   Example of a circular definition:"
"RTN","LEXERI",84,0)
 . . . . W !!,"        Replace:  CA        with   CANCER          and"
"RTN","LEXERI",85,0)
 . . . . W !,"        Replace:  CALCIUM   with   CA         ",!!
"RTN","LEXERI",86,0)
 . . . . W !!,"   Searching for ",$C(34),"CALCIUM",$C(34)," may result in a listing of CANCER's,"
"RTN","LEXERI",87,0)
 . . . . W !,"   depending on the order of replacement."
"RTN","LEXERI",88,0)
 . . . . S LEXOK=0
"RTN","LEXERI",89,0)
 S X=LEXX K:'LEXOK X K LEXOK,LEXI,LEXJ,LEXR,LEXX
"RTN","LEXERI",90,0)
 Q
"RTN","LEXERI",91,0)
CVT(LEXX) ; Convert Text
"RTN","LEXERI",92,0)
 S LEXX=$$UP^XLFSTR(LEXX) N LEXI,LEXJ S LEXJ="" F LEXI=1:1:$L(LEXX) D
"RTN","LEXERI",93,0)
 . I $A($E(LEXX,LEXI))=47!($A($E(LEXX,LEXI))>64&($A($E(LEXX,LEXI))<91)) S LEXJ=LEXJ_$E(LEXX,LEXI)
"RTN","LEXERI",94,0)
 . E  S LEXJ=LEXJ_" "
"RTN","LEXERI",95,0)
 S LEXX=LEXJ K LEXI,LEXJ Q LEXX
"RTN","LEXHLP")
0^183^B49116460
"RTN","LEXHLP",1,0)
LEXHLP ;ISL/KER - Help/input transformations ;04/21/2014
"RTN","LEXHLP",2,0)
 ;;2.0;LEXICON UTILITY;**11,80**;Sep 23, 1996;Build 1
"RTN","LEXHLP",3,0)
 ;               
"RTN","LEXHLP",4,0)
 ; Global Variables
"RTN","LEXHLP",5,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXHLP",6,0)
 ;    ^TMP("XTLKHITS")    SACC 2.3.2.5.1
"RTN","LEXHLP",7,0)
 ;               
"RTN","LEXHLP",8,0)
 ; External References
"RTN","LEXHLP",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXHLP",10,0)
 ;    ^DIC                ICR  10006
"RTN","LEXHLP",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXHLP",12,0)
 ;               
"RTN","LEXHLP",13,0)
EXC ; Excluded Word Help
"RTN","LEXHLP",14,0)
 I '$D(X) Q
"RTN","LEXHLP",15,0)
 S X=$$UP^XLFSTR(X) I $D(^LEX(757.05,"AB",$E(X,1,40))) D  Q
"RTN","LEXHLP",16,0)
 . W !!,$C(7),"""",X,""""," already exist in the Replacement Words file."
"RTN","LEXHLP",17,0)
 . W !,"You can not exclude a word which is to be replaced",!!
"RTN","LEXHLP",18,0)
 . K X
"RTN","LEXHLP",19,0)
 S X=$$UP^XLFSTR(X) I $D(^LEX(757.04,"C",$E(X,1,40))) D  Q
"RTN","LEXHLP",20,0)
 . W !!,$C(7),"""",X,""""," already exist in the Replacement Words file."
"RTN","LEXHLP",21,0)
 . W !,"You can not exclude a replacement word",!!
"RTN","LEXHLP",22,0)
 . K X
"RTN","LEXHLP",23,0)
 Q
"RTN","LEXHLP",24,0)
REP ; Replacement Words Help (replace)
"RTN","LEXHLP",25,0)
 I '$D(X) Q
"RTN","LEXHLP",26,0)
 S X=$$UP^XLFSTR(X) I $D(^LEX(757.04,"AB",$E(X,1,40))) D  Q
"RTN","LEXHLP",27,0)
 . W !!,$C(7),"""",X,""""," already exist in the Excluded Words file."
"RTN","LEXHLP",28,0)
 . W !,"You can not replace an excluded word.",!!
"RTN","LEXHLP",29,0)
 . K X
"RTN","LEXHLP",30,0)
 I $D(^LEX(757.01,"AWRD",X)) D  Q
"RTN","LEXHLP",31,0)
 . W !!,$C(7),"""",X,""""," is indexed as a key word for: ",!
"RTN","LEXHLP",32,0)
 . S LEXREC=0 F  S LEXREC=$O(^LEX(757.01,"AWRD",X,LEXREC)) Q:+LEXREC=0  D
"RTN","LEXHLP",33,0)
 . . W !,?2,^LEX(757.01,LEXREC,0)
"RTN","LEXHLP",34,0)
 . W !!,"You can not alter this keyword/term linkage.",!!
"RTN","LEXHLP",35,0)
 . K LEXREC,X
"RTN","LEXHLP",36,0)
 Q
"RTN","LEXHLP",37,0)
REPBY ; Replacement Words Help (insert)
"RTN","LEXHLP",38,0)
 I '$D(X) Q
"RTN","LEXHLP",39,0)
 S X=$$UP^XLFSTR(X) I $D(^LEX(757.04,"AB",$E(X,1,40))) D  Q
"RTN","LEXHLP",40,0)
 . W !!,$C(7),"""",X,""""," already exist in the Excluded Words file."
"RTN","LEXHLP",41,0)
 . W !,"You can not replace an excluded word.",!!
"RTN","LEXHLP",42,0)
 . K X
"RTN","LEXHLP",43,0)
 Q
"RTN","LEXHLP",44,0)
APPS(X) ; Input Help for ^LEX(757.2 field 8
"RTN","LEXHLP",45,0)
 N LEXOK S LEXOK=1
"RTN","LEXHLP",46,0)
 I '$D(X)!('$D(DA)) Q 0
"RTN","LEXHLP",47,0)
 I $L(X)>3!($L(X)<3) W !,"3 characters, please ",! Q 0
"RTN","LEXHLP",48,0)
 N LEXI,LEXC F LEXI=1:1:3 S LEXC=$A($E(X,LEXI)) D
"RTN","LEXHLP",49,0)
 . I ((LEXC>64)&(LEXC<91))!((LEXC>47)&(LEXC<58)) Q
"RTN","LEXHLP",50,0)
 . S LEXOK=0
"RTN","LEXHLP",51,0)
 K LEXI,LEXC
"RTN","LEXHLP",52,0)
 I 'LEXOK K LEXOK W !,"Invalid characters detected, use any combination of uppercase or numeric ",! Q 0
"RTN","LEXHLP",53,0)
 I X=$P(^LEXT(757.2,DA,0),"^",2) W !,"Cannot be the same as the Short TitLe",LEXOK,! Q 0
"RTN","LEXHLP",54,0)
 Q 1
"RTN","LEXHLP",55,0)
XTLK ; MTLY Help
"RTN","LEXHLP",56,0)
 ;      Uses ^TMP("XTLKHITS",$J), XTLKH, XTLKI, XTLKKSCH("DSPLY"),
"RTN","LEXHLP",57,0)
 ;      XTLKKSCH("GBL"), XTLKMULT, XTLKREF0 and XTLKREF1
"RTN","LEXHLP",58,0)
 N LEXHLPF S LEXHLPF=1
"RTN","LEXHLP",59,0)
 Q:'$D(XTLKHLP)  D XTLKONE:^TMP("XTLKHITS",$J)=1,XTLKSEL:^TMP("XTLKHITS",$J)>1 Q
"RTN","LEXHLP",60,0)
XTLKONE ; Help for a single entry on the selection list
"RTN","LEXHLP",61,0)
 N LEXMC,LEXLN
"RTN","LEXHLP",62,0)
 S LEXMC=$S(LEXSUB="WRD":$P(^LEX(757.01,XTLKI,1),U,1),1:$P(^LEX(757.01,+(@(DIC_XTLKI_",0)")),1),U,1))
"RTN","LEXHLP",63,0)
 S LEXEXP=0 S:+LEXMC>0 LEXEXP=+(^LEX(757,LEXMC,0))
"RTN","LEXHLP",64,0)
 I +LEXEXP'=0,$D(^LEX(757.01,LEXEXP,3,0)) D
"RTN","LEXHLP",65,0)
 . F LEXLN=1:1:$P(^LEX(757.01,LEXEXP,3,0),U,4) D
"RTN","LEXHLP",66,0)
 . . I $D(^LEX(757.01,LEXEXP,3,LEXLN,0)) W !,?2,^LEX(757.01,LEXEXP,3,LEXLN,0)
"RTN","LEXHLP",67,0)
 . . I '(+(LEXLN#5)) D XTLKCON
"RTN","LEXHLP",68,0)
 I $D(LEXLN),(+(LEXLN#5)) D XTLKCON W !
"RTN","LEXHLP",69,0)
 I +LEXEXP'=0,'$D(^LEX(757.01,LEXEXP,3,0)) W !,"Only one match found, select:  ",^LEX(757.01,$S(LEXSUB="WRD":XTLKI,1:+(@(DIC_XTLKI_",0)"))),0),!
"RTN","LEXHLP",70,0)
 K LEXEXP,LEXMC,LEXLN Q
"RTN","LEXHLP",71,0)
XTLKSEL ; Help for a multiple entries on the selection list
"RTN","LEXHLP",72,0)
 I X?1"?"1N.N!(X?2"?"1N.N) D XTLKDEF,XTLKEND W:XTLKH<6 !! Q
"RTN","LEXHLP",73,0)
 D XTLKEND,XTLKRED Q
"RTN","LEXHLP",74,0)
XTLKDEF ; Display an Expression Defintion as part of the Help
"RTN","LEXHLP",75,0)
 S X=$E(X,2,$L(X)) G:X["?" XTLKDEF I +X<1!(+X>XTLKH) Q
"RTN","LEXHLP",76,0)
 N LEXMC,LEXLN,LEXEXP
"RTN","LEXHLP",77,0)
 S LEXMC=$S(LEXSUB="WRD":$P(^LEX(757.01,^TMP("XTLKHITS",$J,+X),1),U,1),1:$P(^LEX(757.01,+(@(DIC_^TMP("XTLKHITS",$J,+X)_",0)")),1),U,1))
"RTN","LEXHLP",78,0)
 S LEXEXP=0 S:+LEXMC>0 LEXEXP=+(^LEX(757,LEXMC,0)) I +LEXEXP'=0,$D(^LEX(757.01,LEXEXP,3,0)) D
"RTN","LEXHLP",79,0)
 . F LEXLN=1:1:$P(^LEX(757.01,LEXEXP,3,0),U,4) D
"RTN","LEXHLP",80,0)
 . . I $D(^LEX(757.01,LEXEXP,3,LEXLN,0)) D
"RTN","LEXHLP",81,0)
 . . . W:LEXLN=1 ! W !,?2,^LEX(757.01,LEXEXP,3,LEXLN,0)
"RTN","LEXHLP",82,0)
 . . I '(+(LEXLN#5)) D XTLKCON
"RTN","LEXHLP",83,0)
 I $D(LEXLN),(+(LEXLN#5)) D XTLKCON
"RTN","LEXHLP",84,0)
 ; W !
"RTN","LEXHLP",85,0)
 K LEXMC,LEXLN,LEXEXP Q
"RTN","LEXHLP",86,0)
XTLKCON ; End of Page
"RTN","LEXHLP",87,0)
 Q:'$D(VALM)  W ! N X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","LEXHLP",88,0)
 S DIR("A")="Press <Return> to continue  "
"RTN","LEXHLP",89,0)
 S DIR("?")="Press the <Return> key to continue  ",DIR(0)="EA" D ^DIR Q
"RTN","LEXHLP",90,0)
XTLKEND ; End of Help
"RTN","LEXHLP",91,0)
 W !!,"Answer with # (1-",XTLKH,"), ^ (quit), ^# (jump - ",^TMP("XTLKHITS",$J)," choices), or ?# (help on a term)" Q
"RTN","LEXHLP",92,0)
XTLKRED ; Post-Help, redisplay the last segment of the list
"RTN","LEXHLP",93,0)
 N LEXSTRT,LEXEND S LEXSTRT=(((XTLKH-1)\5)*5)+1,LEXEND=XTLKH
"RTN","LEXHLP",94,0)
 F XTLKH=LEXSTRT:1:LEXEND D
"RTN","LEXHLP",95,0)
 . S (Y,XTLKI)=^TMP("XTLKHITS",$J,XTLKH)
"RTN","LEXHLP",96,0)
 . S XTLKREF0=XTLKREF1_XTLKI_",0)" W:XTLKH=1 !!
"RTN","LEXHLP",97,0)
 . I $D(XTLKKSCH("DSPLY")) D @XTLKKSCH("DSPLY") Q
"RTN","LEXHLP",98,0)
 . W:XTLKMULT $J(XTLKH,4),": " W $P(@(XTLKREF1_"XTLKI,0)"),"^",1),!
"RTN","LEXHLP",99,0)
 W ! K LEXSTRT,LEXEND Q
"RTN","LEXHLP",100,0)
XTLKC ;
"RTN","LEXHLP",101,0)
 N DA,DIC,LEXAP,LEXSUB,VALM,XTLKH,XTLKHLP,XTLKI,XTLKKSCH,XTLKMULT,XTLKREF0,XTLKREF1
"RTN","LEXHLP",102,0)
 Q
"RTN","LEXHLP",103,0)
SUB(LEXS) ; Subset help
"RTN","LEXHLP",104,0)
 W ! N X,Y,LEXDICA,LEXDIC0,LEXDICW,LEXDIC S LEXS=""
"RTN","LEXHLP",105,0)
 S:$D(DIC)#2>0 LEXDIC=DIC S:$D(DIC(0)) LEXDIC0=DIC(0) S:$D(DIC("A")) LEXDICA=DIC("A") S:$D(DIC("W")) LEXDICW=DIC("W")
"RTN","LEXHLP",106,0)
 S DIC("A")="Enter the name of a vocabulary to use:  ",DIC("W")="",DIC(0)="AEQM",DIC="^LEXT(757.2," D ^DIC
"RTN","LEXHLP",107,0)
 I +Y>0,$D(^LEXT(757.2,+Y,0)) D
"RTN","LEXHLP",108,0)
 . I $P(^LEXT(757.2,+Y,0),"^",2)'="" S LEXS=$P(^LEXT(757.2,+Y,0),"^",2) Q
"RTN","LEXHLP",109,0)
 . I $D(^LEXT(757.2,+Y,5)),$P(^LEXT(757.2,+Y,5),"^",1)'="" S LEXS=$P(^LEXT(757.2,+Y,5),"^",1) Q
"RTN","LEXHLP",110,0)
 S:$D(LEXDIC) DIC=LEXDIC S:$D(LEXDICW) DIC("W")=LEXDICW S:$D(LEXDIC0) DIC(0)=LEXDIC0 S:$D(LEXDICA) DIC("A")=LEXDICA K:'$D(LEXDICA) DIC("A")
"RTN","LEXHLP",111,0)
 Q LEXS
"RTN","LEXHLP",112,0)
SQ(X) ; Single question mark help for DIR("?") based on DIC("S")  PCH 11
"RTN","LEXHLP",113,0)
 N LEXD,LEXI,LEXA,LEXT,LEXC,LEXN,LEXJ
"RTN","LEXHLP",114,0)
 I $D(^TMP("LEXSCH",$J)) D
"RTN","LEXHLP",115,0)
 . S LEXD=$G(^TMP("LEXSCH",$J,"FIL",0)),LEXI=$G(^TMP("LEXSCH",$J,"IDX",0)),LEXA=$G(^TMP("LEXSCH",$J,"APP",1))
"RTN","LEXHLP",116,0)
 I '$D(^TMP("LEXSCH",$J)) D
"RTN","LEXHLP",117,0)
 . N LEXTNS,LEXTSS,LEXONS,LEXOSS
"RTN","LEXHLP",118,0)
 . S (LEXONS,LEXTNS)=$G(LEXAP),LEXTNS=+LEXTNS S:LEXTNS=0 LEXTNS=1
"RTN","LEXHLP",119,0)
 . S (LEXOSS,LEXTSS)=$G(LEXSUB) S:LEXTSS="" LEXTSS="WRD"
"RTN","LEXHLP",120,0)
 . D CONFIG^LEXSET(LEXTNS,LEXTSS)
"RTN","LEXHLP",121,0)
 . S LEXD=$G(^TMP("LEXSCH",$J,"FIL",0)),LEXI=$G(^TMP("LEXSCH",$J,"IDX",0)),LEXA=$G(^TMP("LEXSCH",$J,"APP",1))
"RTN","LEXHLP",122,0)
 . K ^TMP("LEXSCH",$J) S:$L(LEXONS) LEXAP=LEXONS S:$L(LEXOSS) LEXSUB=LEXOSS
"RTN","LEXHLP",123,0)
 S (LEXT,LEXC)="",X=""
"RTN","LEXHLP",124,0)
 S:'$L($G(LEXD))&($L($G(DIC("S")))) LEXD=$G(DIC("S"))
"RTN","LEXHLP",125,0)
 I $L($G(LEXI)),$G(LEXI)'["WRD" D  Q X
"RTN","LEXHLP",126,0)
 . F LEXJ="DEN;Dental","IMM;Immunologic","NUR;Nursing","SOC;Social Work" S:LEXI[$P(LEXJ,";",1) LEXT=" "_$P(LEXJ,";",2)
"RTN","LEXHLP",127,0)
 . S X="Enter a ""free text"""_LEXT_" term"
"RTN","LEXHLP",128,0)
 I $L($G(LEXD)) D  Q X
"RTN","LEXHLP",129,0)
 . I LEXD'["SRC^LEXU" D  Q
"RTN","LEXHLP",130,0)
 . . F LEXJ="ICD;ICD","CPT;CPT","CPC;HCPCS","DS4;DSM","NAN;NANDA" D
"RTN","LEXHLP",131,0)
 . . . S:LEXD[$P(LEXJ,";",1)&(LEXC'[$P(LEXJ,";",2)) LEXC=LEXC_", "_$P(LEXJ,";",2)
"RTN","LEXHLP",132,0)
 . . . S:LEXD[$P(LEXJ,";",1)&("NAN^ICD^DSM^DS4^DS3"[$P(LEXJ,";",1))&(LEXT'["diagnosis") LEXT=LEXT_"/diagnosis"
"RTN","LEXHLP",133,0)
 . . . S:LEXD[$P(LEXJ,";",1)&("CPT^CPC"[$P(LEXJ,";",1))&(LEXT'["procedure") LEXT=LEXT_"/procedure"
"RTN","LEXHLP",134,0)
 . . S:$E(LEXT,1)="/" LEXT=$E(LEXT,2,$L(LEXT)) S:$E(LEXC,1,2)=", " LEXC=$E(LEXC,3,$L(LEXC))
"RTN","LEXHLP",135,0)
 . . S:$L(LEXC,", ")>1 LEXC=$P(LEXC,", ",1,($L(LEXC,", ")-1))_" or "_$P(LEXC,", ",$L(LEXC,", ")) S:$L(LEXC) LEXC=$S($E(LEXC,1)="I":("an "_LEXC),1:("a "_LEXC)) S:$L(LEXC) LEXC=LEXC_" code"
"RTN","LEXHLP",136,0)
 . . S X="Enter a ""free text""" S:$L(LEXT) X=X_" "_LEXT S:'$L(LEXT) X=X_" term" S:$L(LEXC) X=X_" or "_LEXC
"RTN","LEXHLP",137,0)
 . I LEXD["SRC^LEXU",$L(LEXA) D  Q
"RTN","LEXHLP",138,0)
 . . N LEXN1,LEXN2 S LEXN1=LEXA,LEXN2="" I LEXA[" (",$L($P($P(LEXA," (",2),")",1)) D
"RTN","LEXHLP",139,0)
 . . . S LEXN1=$P(LEXA," (",1),LEXN2="("_$P(LEXA," (",2),LEXN2=$P(LEXN2,")",1)_")"
"RTN","LEXHLP",140,0)
 . . S X="Enter a ""free text""" S:$L(LEXN1) X=X_" "_LEXN1 S:$L(LEXN2) X=X_" "_LEXN2 S X=X_" term"
"RTN","LEXHLP",141,0)
 S X="Enter a ""free text"" term"
"RTN","LEXHLP",142,0)
 Q X
"RTN","LEXHLP2")
0^14^B43406586
"RTN","LEXHLP2",1,0)
LEXHLP2 ;ISL/KER - Look-up Response (Help Text) ;04/21/2014
"RTN","LEXHLP2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXHLP2",3,0)
 ;               
"RTN","LEXHLP2",4,0)
 ; Global Variables
"RTN","LEXHLP2",5,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXHLP2",6,0)
 ;               
"RTN","LEXHLP2",7,0)
 ; External References
"RTN","LEXHLP2",8,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXHLP2",9,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXHLP2",10,0)
 ;               
"RTN","LEXHLP2",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXHLP2",12,0)
 ;     LEX     Help Array KILLed in LEXAR3
"RTN","LEXHLP2",13,0)
 ;     LEX2    Example Text NEWed in LEXAR3
"RTN","LEXHLP2",14,0)
 ;     LEX3    Example Text NEWed in LEXAR3
"RTN","LEXHLP2",15,0)
 ;     LEX4    Example Text NEWed in LEXAR3
"RTN","LEXHLP2",16,0)
 ;     LEXCT   Counter NEWed in LEXAR3
"RTN","LEXHLP2",17,0)
 ;     LEXEX   Expression NEWed in LEXAR3
"RTN","LEXHLP2",18,0)
 ;     LEXFIL  Search Filter NEWed in LEXAR3
"RTN","LEXHLP2",19,0)
 ;     LEXHDT  Search Date NEWed in LEXAR3
"RTN","LEXHLP2",20,0)
 ;     LEXIDT  Implementation Date NEWed in LEXAR3
"RTN","LEXHLP2",21,0)
 ;     LEXOK   Text OK NEWed in LEXAR3
"RTN","LEXHLP2",22,0)
 ;     LEXY    Help System  NEWed in LEXAR3
"RTN","LEXHLP2",23,0)
 ;               
"RTN","LEXHLP2",24,0)
HICD ;     ICD-9 Dx Help
"RTN","LEXHLP2",25,0)
 S LEXC="V18.0",LEXS="ICD-9-CM",LEX2="DIABETES MELL"
"RTN","LEXHLP2",26,0)
 S LEX3="HIST DIAB MELL",LEX4="FAM HIST DIAB MELL" S LEXOK=1
"RTN","LEXHLP2",27,0)
 S LEXEX="Family History of Diabetes Mellitus"
"RTN","LEXHLP2",28,0)
 N ICD10 S ICD10=$$IMPDATE^LEXU("10D")
"RTN","LEXHLP2",29,0)
 I +($G(LEXHDT))>0&($G(LEXHDT)?7N)&(+($G(LEXHDT))'<ICD10) D
"RTN","LEXHLP2",30,0)
 . D:$G(LEXFIL)["$$DX^LEXU" H10D
"RTN","LEXHLP2",31,0)
 Q
"RTN","LEXHLP2",32,0)
N10D ;     No ICD-10 Dx
"RTN","LEXHLP2",33,0)
 N LEXSD,LEXED,LEXSP S LEXSP="      "
"RTN","LEXHLP2",34,0)
 S LEXSD=$TR($$FMTE^XLFDT($G(LEXHDT),"5DZ"),"@"," ") Q:$L(LEXSD)'=10
"RTN","LEXHLP2",35,0)
 S LEXED=$TR($$FMTE^XLFDT($G(LEXIDT),"5DZ"),"@"," ") Q:$L(LEXED)'=10
"RTN","LEXHLP2",36,0)
 K LEXP S LEXP(1)="This is not a valid search.  You are searching "
"RTN","LEXHLP2",37,0)
 S LEXP(1)=LEXP(1)_"for terminology that is linked to an ICD-10 "
"RTN","LEXHLP2",38,0)
 S LEXP(1)=LEXP(1)_"diagnosis code on "_LEXSD_".  There are no "
"RTN","LEXHLP2",39,0)
 S LEXP(1)=LEXP(1)_"ICD-10-CM codes active before "_LEXED_"."
"RTN","LEXHLP2",40,0)
 K LEX("HLP") D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXHLP2",41,0)
 F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXHLP2",42,0)
 . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXHLP2",43,0)
 . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXHLP2",44,0)
 . S LEX("HLP",0)=LEXCT,LEXOK=1
"RTN","LEXHLP2",45,0)
 Q
"RTN","LEXHLP2",46,0)
N10P ;     No ICD-10 Pr
"RTN","LEXHLP2",47,0)
 N LEXSD,LEXED,LEXSP S LEXSP="      "
"RTN","LEXHLP2",48,0)
 S LEXSD=$TR($$FMTE^XLFDT($G(LEXHDT),"5DZ"),"@"," ") Q:$L(LEXSD)'=10
"RTN","LEXHLP2",49,0)
 S LEXED=$TR($$FMTE^XLFDT($G(LEXIDT),"5DZ"),"@"," ") Q:$L(LEXED)'=10
"RTN","LEXHLP2",50,0)
 K LEXP S LEXP(1)="This is not a valid search.  You are searching "
"RTN","LEXHLP2",51,0)
 S LEXP(1)=LEXP(1)_"for terminology that is linked to an ICD-10 "
"RTN","LEXHLP2",52,0)
 S LEXP(1)=LEXP(1)_"procedure code on "_LEXSD_".  There are no "
"RTN","LEXHLP2",53,0)
 S LEXP(1)=LEXP(1)_"ICD-10-PCS codes active before "_LEXED_"."
"RTN","LEXHLP2",54,0)
 K LEX("HLP") D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXHLP2",55,0)
 F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXHLP2",56,0)
 . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXHLP2",57,0)
 . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXHLP2",58,0)
 . S LEX("HLP",0)=LEXCT,LEXOK=1
"RTN","LEXHLP2",59,0)
 Q
"RTN","LEXHLP2",60,0)
N10 ;     No ICD-10 Dx/Pr
"RTN","LEXHLP2",61,0)
 N LEXSD,LEXED,LEXSP S LEXSP="      "
"RTN","LEXHLP2",62,0)
 S LEXSD=$TR($$FMTE^XLFDT($G(LEXHDT),"5DZ"),"@"," ") Q:$L(LEXSD)'=10
"RTN","LEXHLP2",63,0)
 S LEXED=$TR($$FMTE^XLFDT($G(LEXIDT),"5DZ"),"@"," ") Q:$L(LEXED)'=10
"RTN","LEXHLP2",64,0)
 K LEXP S LEXP(1)="This is not a valid search.  You are searching "
"RTN","LEXHLP2",65,0)
 S LEXP(1)=LEXP(1)_"for terminology that is linked to an ICD-10 "
"RTN","LEXHLP2",66,0)
 S LEXP(1)=LEXP(1)_"diagnosis or procedure code on "_LEXSD_".  "
"RTN","LEXHLP2",67,0)
 S LEXP(1)=LEXP(1)_"There are no ICD-10-CM or ICD-10-PCS codes "
"RTN","LEXHLP2",68,0)
 S LEXP(1)=LEXP(1)_"active before "_LEXED_"."
"RTN","LEXHLP2",69,0)
 K LEX("HLP") D PR(.LEXP,70) S LEXCT=$O(LEX("HLP"," "),-1),LEXI=0
"RTN","LEXHLP2",70,0)
 F  S LEXI=$O(LEXP(LEXI)) Q:+LEXI'>0  D
"RTN","LEXHLP2",71,0)
 . N LEXT S LEXT=$G(LEXP(LEXI)),LEXCT=LEXCT+1
"RTN","LEXHLP2",72,0)
 . S LEX("HLP",LEXCT)=LEXSP_LEXT
"RTN","LEXHLP2",73,0)
 . S LEX("HLP",0)=LEXCT,LEXOK=1
"RTN","LEXHLP2",74,0)
 Q
"RTN","LEXHLP2",75,0)
 ; P70.2     NEONATAL DIABETES MELLITUS
"RTN","LEXHLP2",76,0)
H10D ;     ICD-10 Dx Help
"RTN","LEXHLP2",77,0)
 S LEXC="P70.2",LEXS="ICD-10-CM",LEX2="NEO DIAB MELL"
"RTN","LEXHLP2",78,0)
 S LEX3="DIABE MELL NEO",LEX4="NEONATAL DIAB" S LEXOK=1
"RTN","LEXHLP2",79,0)
 S LEXEX="Neonatal diabetes mellitus"
"RTN","LEXHLP2",80,0)
 Q
"RTN","LEXHLP2",81,0)
HCPT ;     CPT-4 Help
"RTN","LEXHLP2",82,0)
 S LEXC="49560",LEXS="CPT-4",LEX2="REPAIR HERNIA"
"RTN","LEXHLP2",83,0)
 S LEX3="REP VENT HERNIA",LEX4="REP VENT HERNIA REDUC" S LEXOK=1
"RTN","LEXHLP2",84,0)
 S LEXEX="Repair Reducible Incisional or Ventral Hernia"
"RTN","LEXHLP2",85,0)
 Q
"RTN","LEXHLP2",86,0)
HCPC ;     HCPCS Help
"RTN","LEXHLP2",87,0)
 S LEXC="L2680",LEXS="HCPCS",LEX2="THORAC CONTROL"
"RTN","LEXHLP2",88,0)
 S LEX3="THORA CONTROL LAT",LEX4="THORA CONTROL LAT SUPP" S LEXOK=1
"RTN","LEXHLP2",89,0)
 S LEXEX="Lateral Support Uprights for Thoracic Control"
"RTN","LEXHLP2",90,0)
 Q
"RTN","LEXHLP2",91,0)
H10P ;     ICD-10 Pr Help
"RTN","LEXHLP2",92,0)
 S LEXC="6A550ZT",LEXS="ICD-10-PCS",LEX2="STEM CELL"
"RTN","LEXHLP2",93,0)
 S LEX3="CORD STEM CELL",LEX4="PHERESIS CORD STEM CELL" S LEXOK=1
"RTN","LEXHLP2",94,0)
 S LEXEX="Pheresis of Cord Blood Stem Cells, single"
"RTN","LEXHLP2",95,0)
 Q
"RTN","LEXHLP2",96,0)
HDS4 ;     DSM-IV Dx Help
"RTN","LEXHLP2",97,0)
 S LEXC="296.32",LEXS="DSM-IV",LEX2="MAJOR DEPRESSION"
"RTN","LEXHLP2",98,0)
 S LEX3="MAJ DEPRESS RECCUR",LEX4="MAJ DEP RECCUR MOD" S LEXOK=1
"RTN","LEXHLP2",99,0)
 S LEXEX="Major Depressive Disorder, Recurrent, Moderate"
"RTN","LEXHLP2",100,0)
 Q
"RTN","LEXHLP2",101,0)
HNAN ;     Nanda
"RTN","LEXHLP2",102,0)
 S LEXC="1.2.2.1",LEXS="NANDA",LEX2="BODY TEMPERATURE"
"RTN","LEXHLP2",103,0)
 S LEX3="BODY TEMP ALT",LEX4="BODY TEMP POT ALTER" S LEXOK=1
"RTN","LEXHLP2",104,0)
 S LEXEX="Body Temperature, Potential Altered"
"RTN","LEXHLP2",105,0)
 Q
"RTN","LEXHLP2",106,0)
HSCC ;     Title 38
"RTN","LEXHLP2",107,0)
 S LEXC="7914",LEXS="Title 38",LEX2="MALIGANT GROW"
"RTN","LEXHLP2",108,0)
 S LEX3="MALIG NEW GROW",LEX4="MALIG NEW GROW ENDOCRINE" S LEXOK=1
"RTN","LEXHLP2",109,0)
 S LEXEX="Malignant new Growth of the Endocrine System"
"RTN","LEXHLP2",110,0)
 Q
"RTN","LEXHLP2",111,0)
HOMA ;     Omaha
"RTN","LEXHLP2",112,0)
 S LEXC="H36.02",LEXS="Omaha Diagnosis",LEX2="SLEEP PATTERN"
"RTN","LEXHLP2",113,0)
 S LEX3="SLEEP REST PATTERN",LEX4="SLEEP REST PATTERN IMPAIR" S LEXOK=1
"RTN","LEXHLP2",114,0)
 S LEXEX="Sleep and Rest Patterns, Impairment"
"RTN","LEXHLP2",115,0)
 Q
"RTN","LEXHLP2",116,0)
HSYS(X,Y) ;   Help System
"RTN","LEXHLP2",117,0)
 N LEXF,LEXD,ICD10 S LEXF=$G(X),LEXD=$G(Y),ICD10=$$IMPDATE^LEXU("10D")
"RTN","LEXHLP2",118,0)
 Q:'$L(LEXF) ""  I LEXF["$$SC^LEXU" D
"RTN","LEXHLP2",119,0)
 . S LEXY=$TR($P($P(LEXF,",",2),";",3),"""","")
"RTN","LEXHLP2",120,0)
 . S:LEXF["BEH" LEXY=LEXY_"/DS4" S:LEXF["DIS" LEXY=LEXY_"/SCC"
"RTN","LEXHLP2",121,0)
 I LEXF["$$",LEXF["ONE^" D
"RTN","LEXHLP2",122,0)
 . S LEXY="" S:LEXF["$$ICDONE" LEXY=LEXY_"/ICD"
"RTN","LEXHLP2",123,0)
 . S:LEXF["$$10DO" LEXY=LEXY_"/10D" S:LEXF["$$10PO" LEXY=LEXY_"/10P"
"RTN","LEXHLP2",124,0)
 . S:LEXF["$$CPTO" LEXY=LEXY_"/CPT" S:LEXF["$$CPCO" LEXY=LEXY_"/CPC"
"RTN","LEXHLP2",125,0)
 . S:LEXF["$$DSMO" LEXY=LEXY_"/DS4"
"RTN","LEXHLP2",126,0)
 S:LEXF["$$DX^LEXU"&(+LEXD<ICD10) LEXY="ICD"
"RTN","LEXHLP2",127,0)
 S:LEXF["$$DX^LEXU"&(+LEXD'<ICD10) LEXY="10D"
"RTN","LEXHLP2",128,0)
 S:LEXF["$$SO^LEXU" LEXY=$TR($P(LEXF,",",2),"""","")
"RTN","LEXHLP2",129,0)
 S LEXT="" I $L($G(LEXY)) F LEXI=1:1:$L(LEXY,"/") D
"RTN","LEXHLP2",130,0)
 . N LEXS,LEXO S LEXS=$P(LEXY,"/",LEXI) Q:'$L(LEXS)  Q:$L(LEXS)'=3
"RTN","LEXHLP2",131,0)
 . S:LEXS="ICD" LEXO="ICD-9"
"RTN","LEXHLP2",132,0)
 . S:LEXS="10D"&(LEXY'["10P") LEXO="ICD-10"
"RTN","LEXHLP2",133,0)
 . S:LEXS="10D"&(LEXY["10P") LEXO="ICD-10-CM"
"RTN","LEXHLP2",134,0)
 . S:LEXS="10D"&($L(LEXY,"/")=1) LEXO="ICD-10-CM"
"RTN","LEXHLP2",135,0)
 . S:LEXS="10P"&(LEXY'["10D") LEXO="ICD-10"
"RTN","LEXHLP2",136,0)
 . S:LEXS="10P"&(LEXY["10D") LEXO="ICD-10-PCS"
"RTN","LEXHLP2",137,0)
 . S:LEXS="10P"&($L(LEXY,"/")=1) LEXO="ICD-10-PCS"
"RTN","LEXHLP2",138,0)
 . S:LEXS="CPT" LEXO="CPT-4" S:LEXS="CPC" LEXO="HCPCS"
"RTN","LEXHLP2",139,0)
 . S:LEXS="SCC" LEXO="Title 38" S:LEXS="SCT" LEXO="SNOMED CT"
"RTN","LEXHLP2",140,0)
 . S:LEXS="DS4" LEXO="DSM-IV" S:LEXS="NAN"!(LEXS="OMA") LEXO="Nursing"
"RTN","LEXHLP2",141,0)
 . Q:'$L($G(LEXO))  S:LEXT'[LEXO LEXT=LEXT_"/"_LEXO
"RTN","LEXHLP2",142,0)
 S LEXT=$$TM(LEXT,"/") S X="" S:$L(LEXT) X=LEXT
"RTN","LEXHLP2",143,0)
 Q X
"RTN","LEXHLP2",144,0)
 Q
"RTN","LEXHLP2",145,0)
 ; 
"RTN","LEXHLP2",146,0)
 ; Miscellaneous
"RTN","LEXHLP2",147,0)
PR(LEXA,X) ;   Parse Array
"RTN","LEXHLP2",148,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC
"RTN","LEXHLP2",149,0)
 K ^UTILITY($J,"W") Q:'$D(LEXA)  S LEXLEN=+($G(X))
"RTN","LEXHLP2",150,0)
 S:+LEXLEN'>0 LEXLEN=79 S LEXC=$O(LEXA(" "),-1) Q:+LEXC'>0
"RTN","LEXHLP2",151,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0
"RTN","LEXHLP2",152,0)
 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI=0  S X=$G(LEXA(LEXI)) D ^DIWP
"RTN","LEXHLP2",153,0)
 K LEXA S (LEXC,LEXI)=0
"RTN","LEXHLP2",154,0)
 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXHLP2",155,0)
 . S LEXA(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," ")
"RTN","LEXHLP2",156,0)
 . S LEXC=LEXC+1
"RTN","LEXHLP2",157,0)
 S:$L(LEXC) LEXA=LEXC K ^UTILITY($J,"W")
"RTN","LEXHLP2",158,0)
 Q
"RTN","LEXHLP2",159,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXHLP2",160,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXHLP2",161,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXHLP2",162,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXHLP2",163,0)
 Q X
"RTN","LEXIENV")
1^119
"RTN","LEXILG")
1^51
"RTN","LEXILGD")
1^52
"RTN","LEXILGO")
1^53
"RTN","LEXILGP")
1^54
"RTN","LEXILGU")
1^55
"RTN","LEXILGX")
1^56
"RTN","LEXLGM")
1^57
"RTN","LEXLGM2")
1^58
"RTN","LEXLGM3")
1^59
"RTN","LEXLK")
0^143^B4772038
"RTN","LEXLK",1,0)
LEXLK ;ISL/KER - Demo Look Up ;04/21/2014
"RTN","LEXLK",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXLK",3,0)
 ;               
"RTN","LEXLK",4,0)
 ; Global Variables
"RTN","LEXLK",5,0)
 ;    None
"RTN","LEXLK",6,0)
 ;               
"RTN","LEXLK",7,0)
 ; External References
"RTN","LEXLK",8,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXLK",9,0)
 ;               
"RTN","LEXLK",10,0)
EN ; Initialize variables
"RTN","LEXLK",11,0)
 W @IOF N LEXSF,LEXCONT,LEXCLAS,LEXDEF,LEXDIS,LEXEXP,LEXFORM
"RTN","LEXLK",12,0)
 N LEXFM,LEXMC,LEXCODE,LEXSRC,LEXSO,LEXLINE,LEXSPC,LEXNOM
"RTN","LEXLK",13,0)
 N LEXX,LEXY,LEXYPE,LEXEMP,LEXCHK,X,Y,LEXAP S LEXSF=1
"RTN","LEXLK",14,0)
 W @IOF D LOOK G EXIT
"RTN","LEXLK",15,0)
LOOK ; Look-up term
"RTN","LEXLK",16,0)
 W !! K X S LEXAP=1 D ^LEXA1 K DIC D:+($$Y) MORE
"RTN","LEXLK",17,0)
AGAIN ; Try again?
"RTN","LEXLK",18,0)
 W !,"Try another" S %=$S(+($$X):1,1:2)
"RTN","LEXLK",19,0)
 D YN^DICN I %=-1!(%=2) Q
"RTN","LEXLK",20,0)
 I '% W !!,"You have searched for a term in the Lexicon, do you want to" G AGAIN
"RTN","LEXLK",21,0)
 I +($$X)&(%=1) G LOOK
"RTN","LEXLK",22,0)
 I '+($$X)&(%=1) G LOOK
"RTN","LEXLK",23,0)
 I (+($$X)&(%=2))!('+($$X)&(%=1)) Q
"RTN","LEXLK",24,0)
 G LOOK Q
"RTN","LEXLK",25,0)
MORE ; Do you want more information?
"RTN","LEXLK",26,0)
 W !!,"Do you want more information" S %=1 D YN^DICN Q:%=-1
"RTN","LEXLK",27,0)
 I '% D  G MORE
"RTN","LEXLK",28,0)
 . W !!,"The Lexicon also contains definitions (on most major concepts),"
"RTN","LEXLK",29,0)
 . W !,"codes (from major coding systems, i.e., ICD, CPT, NANDA, etc.),"
"RTN","LEXLK",30,0)
 . W !,"synonyms, lexical variants, and semantic classifications for each"
"RTN","LEXLK",31,0)
 . W !,"term by class and type."
"RTN","LEXLK",32,0)
 Q:%=2  D:%=1 DISP
"RTN","LEXLK",33,0)
 Q
"RTN","LEXLK",34,0)
DISP ; If requested, get and display information
"RTN","LEXLK",35,0)
 Q:'+($$Y)  D GET^LEXLK2(Y) Q:'$G(LEX(0))
"RTN","LEXLK",36,0)
 D LIST^LEXLK2
"RTN","LEXLK",37,0)
 Q
"RTN","LEXLK",38,0)
EXIT ; Clean up environment and quit
"RTN","LEXLK",39,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEX,LEXB,LEXC,LEXCHK,LEXCL
"RTN","LEXLK",40,0)
 K LEXCLAS,LEXCODE,LEXCT,LEXCONT,LEXDEF,LEXDIS,LEXE,LEXEMP
"RTN","LEXLK",41,0)
 K LEXEXP,LEXF,LEXFM,LEXFORM,LEXLC,LEXLINE,LEXLN,LEXMC,LEXMCE
"RTN","LEXLK",42,0)
 K LEXNOM,LEXSCP,LEXSF,LEXSO,LEXSPC,LEXSPCR,LEXSR,LEXSRC
"RTN","LEXLK",43,0)
 K LEXSTR,LEXT,LEXTT,LEXX,LEXY,LEXYPE,X,Y
"RTN","LEXLK",44,0)
 Q
"RTN","LEXLK",45,0)
X(LEX) ; Evaluate X
"RTN","LEXLK",46,0)
 Q:$L($G(X)) 1  Q 0
"RTN","LEXLK",47,0)
Y(LEX) ; Evaluate Y
"RTN","LEXLK",48,0)
 Q:+($G(Y))>1 1  Q 0
"RTN","LEXLK2")
0^184^B35967054
"RTN","LEXLK2",1,0)
LEXLK2 ;ISL/KER - Look Up - Expression Attributes ;04/21/2014
"RTN","LEXLK2",2,0)
 ;;2.0;LEXICON UTILITY;**6,19,80**;Sep 23, 1996;Build 1
"RTN","LEXLK2",3,0)
 ;               
"RTN","LEXLK2",4,0)
 ; Global Variables
"RTN","LEXLK2",5,0)
 ;    ^LEX(757.13)        N/A
"RTN","LEXLK2",6,0)
 ;               
"RTN","LEXLK2",7,0)
 ; External References
"RTN","LEXLK2",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXLK2",9,0)
 ;               
"RTN","LEXLK2",10,0)
GET(Y) ; Build list in array LEX
"RTN","LEXLK2",11,0)
 N LEXSPC,LEXSPCR,LEXSTR,LEXDIS,LEXMC,LEXMCE,LEXEXP
"RTN","LEXLK2",12,0)
 S $E(LEXSPC,42)=" "
"RTN","LEXLK2",13,0)
 K LEX
"RTN","LEXLK2",14,0)
 ; PCH 6  add MD and CLC
"RTN","LEXLK2",15,0)
 D MC,SY,LV,MD,DEF,STY,CLC,SRC
"RTN","LEXLK2",16,0)
 K LEXC,LEXCODE,LEXCT,LEXDEF,LEXDIS,LEXEXP,LEXF
"RTN","LEXLK2",17,0)
 K LEXFORM,LEXMC,LEXMCE,LEXNOM,LEXSCP,LEXSO,LEXSPC,LEXSPCR
"RTN","LEXLK2",18,0)
 K LEXSR,LEXSRC,LEXSTR
"RTN","LEXLK2",19,0)
 Q
"RTN","LEXLK2",20,0)
MC ;    Major Concept
"RTN","LEXLK2",21,0)
 N LEXMEX
"RTN","LEXLK2",22,0)
 S LEXMC=+^LEX(757.01,+Y,1)
"RTN","LEXLK2",23,0)
 S LEXMCE=+Y
"RTN","LEXLK2",24,0)
 S LEXMEX=+^LEX(757,LEXMC,0)
"RTN","LEXLK2",25,0)
 D BL,BL
"RTN","LEXLK2",26,0)
 S LEXSTR="TERMS:" D TL,BL
"RTN","LEXLK2",27,0)
 S LEXSTR="  Concept:  "_$E(^LEX(757.01,LEXMEX,0),1,66) D TL
"RTN","LEXLK2",28,0)
 S LEXDIS=$$T(+Y) S LEXSTR="            "_LEXDIS D TL
"RTN","LEXLK2",29,0)
 Q
"RTN","LEXLK2",30,0)
SY ;    Synonyms
"RTN","LEXLK2",31,0)
 N LEXEXP
"RTN","LEXLK2",32,0)
 S LEXEXP=0
"RTN","LEXLK2",33,0)
 F  S LEXEXP=$O(^LEX(757.01,"AMC",+LEXMC,LEXEXP)) Q:+LEXEXP=0  D
"RTN","LEXLK2",34,0)
 .I $P(^LEX(757.01,LEXEXP,1),U,2)=2 D
"RTN","LEXLK2",35,0)
 ..S LEXDIS=$$T(LEXEXP) D BL
"RTN","LEXLK2",36,0)
 ..S LEXSTR="  Synonym:  "_$E(^LEX(757.01,LEXEXP,0),1,66) D TL
"RTN","LEXLK2",37,0)
 ..S LEXSTR="            "_LEXDIS D TL
"RTN","LEXLK2",38,0)
 Q
"RTN","LEXLK2",39,0)
LV ;    Lexical Variants
"RTN","LEXLK2",40,0)
 N LEXEXP
"RTN","LEXLK2",41,0)
 S LEXEXP=0
"RTN","LEXLK2",42,0)
 F  S LEXEXP=$O(^LEX(757.01,"AMC",+LEXMC,LEXEXP)) Q:+LEXEXP=0  D
"RTN","LEXLK2",43,0)
 .I $P(^LEX(757.01,LEXEXP,1),U,2)=3 D
"RTN","LEXLK2",44,0)
 ..S LEXDIS=$$T(LEXEXP) D BL
"RTN","LEXLK2",45,0)
 ..S LEXSTR="  Variant:  "_$E(^LEX(757.01,LEXEXP,0),1,66) D TL
"RTN","LEXLK2",46,0)
 ..S LEXSTR="            "_LEXDIS D TL
"RTN","LEXLK2",47,0)
 Q
"RTN","LEXLK2",48,0)
MD ;    Modifiers/Descendants    PCH 6  added
"RTN","LEXLK2",49,0)
 Q:'$D(^LEX(757.01,"APAR",LEXMCE))
"RTN","LEXLK2",50,0)
 D BL
"RTN","LEXLK2",51,0)
 N LEXCHD,LEXORD,LEXSTR,LEXNO,LEXE,LEXCT,LEXTY,LEXL
"RTN","LEXLK2",52,0)
 S (LEXCHD,LEXCT)=0
"RTN","LEXLK2",53,0)
 S LEXSTR="  Modified/Descendant Terms" D TL,BL
"RTN","LEXLK2",54,0)
 F  S LEXCHD=$O(^LEX(757.01,"APAR",LEXMCE,LEXCHD)) Q:+LEXCHD=0  D
"RTN","LEXLK2",55,0)
 .S LEXE=$P($G(^LEX(757.01,LEXCHD,0)),"^") Q:'$L(LEXE)
"RTN","LEXLK2",56,0)
 .S LEXTY=+$P($G(^LEX(757.01,LEXCHD,1)),"^",2) Q:LEXTY=0
"RTN","LEXLK2",57,0)
 .S LEXCT=LEXCT+1
"RTN","LEXLK2",58,0)
 .S LEXORD=+$P($G(^LEX(757.01,LEXCHD,1)),"^",10)
"RTN","LEXLK2",59,0)
 .S LEXNO=$S(LEXORD>0:LEXORD,1:(9999+LEXCT))
"RTN","LEXLK2",60,0)
 .S LEXL(LEXTY,LEXNO)=LEXE
"RTN","LEXLK2",61,0)
 S LEXTY=0 F  S LEXTY=$O(LEXL(LEXTY)) Q:+LEXTY=0  D
"RTN","LEXLK2",62,0)
 .S LEXNO=0 F  S LEXNO=$O(LEXL(LEXTY,LEXNO)) Q:+LEXNO=0  D
"RTN","LEXLK2",63,0)
 ..S LEXSTR="            "_LEXL(LEXTY,LEXNO) D TL
"RTN","LEXLK2",64,0)
 Q
"RTN","LEXLK2",65,0)
DEF ;    Definition
"RTN","LEXLK2",66,0)
 D BL
"RTN","LEXLK2",67,0)
 I $D(^LEX(757.01,+Y,3)) D  D BL
"RTN","LEXLK2",68,0)
 .S LEXSTR="DEFINITION:" D TL,BL
"RTN","LEXLK2",69,0)
 .N LEXDEF S LEXDEF=0
"RTN","LEXLK2",70,0)
 .F  S LEXDEF=$O(^LEX(757.01,+Y,3,LEXDEF)) Q:+LEXDEF=0  D
"RTN","LEXLK2",71,0)
 ..S LEXSTR="  "_^LEX(757.01,+Y,3,LEXDEF,0) D TL
"RTN","LEXLK2",72,0)
 Q
"RTN","LEXLK2",73,0)
STY ;    Semantic Classes/Types
"RTN","LEXLK2",74,0)
 S LEXSTR="SEMANTICS:" D TL,BL
"RTN","LEXLK2",75,0)
 S LEXSTR="  CLASS                                 TYPE" D TL,BL
"RTN","LEXLK2",76,0)
 N LEXC,LEXT,LEXCT,LEXTT S LEXC="",LEXT=0
"RTN","LEXLK2",77,0)
 F  S LEXC=$O(^LEX(757.1,"AMCC",LEXMC,LEXC)) Q:LEXC=""  D
"RTN","LEXLK2",78,0)
 .S LEXCT=$E($P(^LEX(757.11,+$O(^LEX(757.11,"B",LEXC,0)),0),U,2),1,38)
"RTN","LEXLK2",79,0)
 .S LEXSTR="  "_LEXCT
"RTN","LEXLK2",80,0)
 .S LEXT=0
"RTN","LEXLK2",81,0)
 .F  S LEXT=$O(^LEX(757.1,"AMCC",LEXMC,LEXC,LEXT)) Q:+LEXT=0  D
"RTN","LEXLK2",82,0)
 ..S LEXTT=$E($P(^LEX(757.12,+$P(^LEX(757.1,LEXT,0),U,3),0),U,2),1,38)
"RTN","LEXLK2",83,0)
 ..S LEXSPCR=$E(LEXSPC,1,(40-$L(LEXSTR)))
"RTN","LEXLK2",84,0)
 ..S LEXSTR=LEXSTR_LEXSPCR_LEXTT D TL S LEXSTR=""
"RTN","LEXLK2",85,0)
 Q
"RTN","LEXLK2",86,0)
CLC ;    Clinical Class   PCH 6  added
"RTN","LEXLK2",87,0)
 N LEXCL,LEXGP,LEXSTR,LEXFM,LEXIND,LEXP,LEXMEM,LEXT,LEXTC
"RTN","LEXLK2",88,0)
 S LEXCL=+$P($G(^LEX(757.01,+Y,1)),"^",11)
"RTN","LEXLK2",89,0)
 S:LEXCL=0 LEXCL=+$P($G(^LEX(757.01,LEXMCE,1)),"^",11)
"RTN","LEXLK2",90,0)
 Q:LEXCL=0  Q:'$D(^LEX(757.13,LEXCL,0))
"RTN","LEXLK2",91,0)
 S LEXGP=$G(^LEX(757.13,LEXCL,5)) Q:'$L(LEXGP)
"RTN","LEXLK2",92,0)
 D BL
"RTN","LEXLK2",93,0)
 S LEXSTR="SOURCE CATEGORY:  "_LEXGP D TL,BL
"RTN","LEXLK2",94,0)
 S LEXFM=$P($G(^LEX(757.13,LEXCL,3)),"^") Q:'$L(LEXFM)
"RTN","LEXLK2",95,0)
 S LEXIND="  "
"RTN","LEXLK2",96,0)
 F LEXP=1:1:$L(LEXFM,"~") D
"RTN","LEXLK2",97,0)
 .S LEXMEM=+$P(LEXFM,"~",LEXP) Q:LEXMEM=0  Q:'$D(^LEX(757.13,LEXMEM,0))
"RTN","LEXLK2",98,0)
 .S LEXT=$P($G(^LEX(757.13,LEXMEM,0)),"^") Q:LEXT=""
"RTN","LEXLK2",99,0)
 .S LEXTC=$P($G(^LEX(757.13,LEXMEM,0)),"^",2)
"RTN","LEXLK2",100,0)
 .S LEXIND=LEXIND_"  "
"RTN","LEXLK2",101,0)
 .S LEXSTR=LEXIND_LEXT D TL
"RTN","LEXLK2",102,0)
 Q
"RTN","LEXLK2",103,0)
SRC ;    Classification Systems/Codes
"RTN","LEXLK2",104,0)
 N LEXSR,LEXSO,LEXSPC
"RTN","LEXLK2",105,0)
 K LEXSRC
"RTN","LEXLK2",106,0)
 S LEXSO=0
"RTN","LEXLK2",107,0)
 F  S LEXSO=$O(^LEX(757.02,"AMC",LEXMC,LEXSO)) Q:+LEXSO=0  D
"RTN","LEXLK2",108,0)
 .Q:$P(^LEX(757.02,LEXSO,0),"^",6)=1
"RTN","LEXLK2",109,0)
 .S LEXNOM=$P(^LEX(757.03,+$P(^LEX(757.02,LEXSO,0),U,3),0),U,2)
"RTN","LEXLK2",110,0)
 .S LEXSR=$P(^LEX(757.03,+$P(^LEX(757.02,LEXSO,0),U,3),0),U,3)
"RTN","LEXLK2",111,0)
 .S $E(LEXSPC,16)=" "
"RTN","LEXLK2",112,0)
 .S LEXSPC=$E(LEXSPC,1,$L(LEXSPC)-$L(LEXNOM))
"RTN","LEXLK2",113,0)
 .S LEXSR=LEXNOM_LEXSPC_LEXSR
"RTN","LEXLK2",114,0)
 .S LEXCODE=$P(^LEX(757.02,LEXSO,0),U,2)
"RTN","LEXLK2",115,0)
 .S LEXSRC(LEXSR,LEXCODE)=""
"RTN","LEXLK2",116,0)
 I $D(LEXSRC) D  K LEXSRC
"RTN","LEXLK2",117,0)
 .D BL S LEXSTR="CLASSIFICATION SYSTEMS/CODES:" D TL,BL
"RTN","LEXLK2",118,0)
 .S LEXSR=""
"RTN","LEXLK2",119,0)
 .F  S LEXSR=$O(LEXSRC(LEXSR)) Q:LEXSR=""  D
"RTN","LEXLK2",120,0)
 ..D BL S LEXSTR="  "_LEXSR D TL
"RTN","LEXLK2",121,0)
 ..S (LEXSTR,LEXCODE)=""
"RTN","LEXLK2",122,0)
 ..F  S LEXCODE=$O(LEXSRC(LEXSR,LEXCODE)) Q:LEXCODE=""  D
"RTN","LEXLK2",123,0)
 ...S LEXSTR=LEXSTR_"/"_LEXCODE
"RTN","LEXLK2",124,0)
 ..S:$E(LEXSTR)="/" LEXSTR=$E(LEXSTR,2,$L(LEXSTR))
"RTN","LEXLK2",125,0)
 ..S LEXSTR="                  "_LEXSTR
"RTN","LEXLK2",126,0)
 ..D:$L(LEXSTR)>18 TL
"RTN","LEXLK2",127,0)
 Q
"RTN","LEXLK2",128,0)
T(X) ; Get Term Type
"RTN","LEXLK2",129,0)
 N LEXSCP,LEXF
"RTN","LEXLK2",130,0)
 S LEXF="",LEXFORM="",LEXEXP=+X,X=""
"RTN","LEXLK2",131,0)
 S LEXSCP=$P(^LEX(757.01,LEXEXP,1),U,3)
"RTN","LEXLK2",132,0)
 S LEXSCP=$S(LEXSCP="D":"Directly Linked to Concept",LEXSCP="I":"Indirectly Linked (via Synonym)",LEXSCP="B":"Broader View of Concept",LEXSCP="N":"Narrower View of Concept",LEXSCP="O":"Other View of Concept",1:"")
"RTN","LEXLK2",133,0)
 S LEXF=$P(^LEX(757.01,LEXEXP,1),U,4) S:+LEXF=0 LEXF=""
"RTN","LEXLK2",134,0)
 S:+LEXF>0 LEXF=$P($G(^LEX(757.014,+LEXF,0)),U,2)
"RTN","LEXLK2",135,0)
 S X=LEXSCP_"/"_LEXF S:$P(X,"/",2)="" X=$P(X,"/",1)
"RTN","LEXLK2",136,0)
 S:$E(X)="/" X=$E(X,2,$L(X))
"RTN","LEXLK2",137,0)
 K LEXSCP,LEXF
"RTN","LEXLK2",138,0)
 Q X
"RTN","LEXLK2",139,0)
TL ; Create a Text Line
"RTN","LEXLK2",140,0)
 Q:'$L($G(LEXSTR))
"RTN","LEXLK2",141,0)
 N LEXC
"RTN","LEXLK2",142,0)
 S LEXC=+$G(LEX(0)),LEXC=LEXC+1
"RTN","LEXLK2",143,0)
 S LEX(LEXC)=LEXSTR
"RTN","LEXLK2",144,0)
 S LEX(0)=LEXC
"RTN","LEXLK2",145,0)
 Q
"RTN","LEXLK2",146,0)
BL ; Create a Blank Line
"RTN","LEXLK2",147,0)
 N LEXC
"RTN","LEXLK2",148,0)
 S LEXC=+$G(LEX(0)),LEXC=LEXC+1
"RTN","LEXLK2",149,0)
 S LEX(LEXC)="",LEX(0)=LEXC
"RTN","LEXLK2",150,0)
 Q
"RTN","LEXLK2",151,0)
LIST ; List the contents of the LEX array
"RTN","LEXLK2",152,0)
 Q:'$G(LEX(0))  N LEXLC,LEXLN,LEXCONT,LEXCL,LEXE,LEXB
"RTN","LEXLK2",153,0)
 S (LEXLN,LEXLC)=0,LEXCONT=""
"RTN","LEXLK2",154,0)
 F  Q:LEXLN=LEX(0)!(LEXCONT["^")  D  Q:LEXLN=LEX(0)!(LEXCONT["^")
"RTN","LEXLK2",155,0)
 .S LEXB=LEXLN+1,LEXE=LEXB+(IOSL-3)
"RTN","LEXLK2",156,0)
 .F LEXCL=LEXB:1:LEXE D
"RTN","LEXLK2",157,0)
 ..I $D(LEX(LEXCL)) W !,LEX(LEXCL) S LEXLN=LEXCL,LEXLC=LEXLC+1
"RTN","LEXLK2",158,0)
 .I LEXLN'=LEX(0) D CONT Q
"RTN","LEXLK2",159,0)
 W !
"RTN","LEXLK2",160,0)
 S LEXLC=LEXLC+1
"RTN","LEXLK2",161,0)
 I LEXLC=(IOSL-3) D CONT
"RTN","LEXLK2",162,0)
 K LEXLC,LEXLN,LEXCONT,LEXCL,LEXE,LEXB
"RTN","LEXLK2",163,0)
 Q
"RTN","LEXLK2",164,0)
CONT ; Continue listing - Press <Return> to Continue
"RTN","LEXLK2",165,0)
 W ! N X,Y S DIR(0)="E" D ^DIR S LEXLC=0,LEXCONT=X
"RTN","LEXLK2",166,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT W !
"RTN","LEXLK2",167,0)
 Q
"RTN","LEXMTLU")
0^185^B4465457
"RTN","LEXMTLU",1,0)
LEXMTLU ;ISL/KER - Setup Appl/User Defaults for Look-up ;04/21/2014
"RTN","LEXMTLU",2,0)
 ;;2.0;LEXICON UTILITY;**11,80**;Sep 23, 1996;Build 1
"RTN","LEXMTLU",3,0)
 ;               
"RTN","LEXMTLU",4,0)
 ; Global Variables
"RTN","LEXMTLU",5,0)
 ;    ^DISV(              ICR    510
"RTN","LEXMTLU",6,0)
 ;               
"RTN","LEXMTLU",7,0)
 ; External References
"RTN","LEXMTLU",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXMTLU",9,0)
 ;    ^XTLKKWL            ICR  10122
"RTN","LEXMTLU",10,0)
 ;               
"RTN","LEXMTLU",11,0)
EN ; X not set
"RTN","LEXMTLU",12,0)
 D MTLU^LEXSET5 S X=$$TERM Q:X=""!(X["^")
"RTN","LEXMTLU",13,0)
 I $D(X),$G(X)'[U,$G(X)'="",$G(X)'=" " D XTLK
"RTN","LEXMTLU",14,0)
 Q
"RTN","LEXMTLU",15,0)
XTLK ;
"RTN","LEXMTLU",16,0)
 N LEXQ S LEXQ=0 D MTLU^LEXSET5
"RTN","LEXMTLU",17,0)
 I '$D(X)!($G(X)[U)!($G(X)="")!($G(X)=" ") S X=$$TERM
"RTN","LEXMTLU",18,0)
 Q:X=""!(X["^")  S XTLKX=X D ^XTLKKWL
"RTN","LEXMTLU",19,0)
 K DIC,LEXAP,LEXLL,LEXSHOW,LEXSUB,LEXUN
"RTN","LEXMTLU",20,0)
 K XTLKKSCH,XTLKSAY,XTLKWD2,XTLKX,XTLKHLP S:+Y'>0 X=""
"RTN","LEXMTLU",21,0)
 Q
"RTN","LEXMTLU",22,0)
TERM(X) ; Get expression
"RTN","LEXMTLU",23,0)
 N DIR,Y S DIR("A")="Enter an expression:  "
"RTN","LEXMTLU",24,0)
 S DIR("?")="    "_$$SQ^LEXHLP  ; PCH 11
"RTN","LEXMTLU",25,0)
 S DIR("??")="^D TERMHLP^LEXMTLU" N Y S DIR(0)="FAO^2:245" D ^DIR
"RTN","LEXMTLU",26,0)
 S DIC="^LEX(757.01," S:X[U&(X'["^^") X=U S:X["^^" X="^^" Q:X[U "^"
"RTN","LEXMTLU",27,0)
 I X=" ",+($G(^DISV(DUZ,DIC)))>0 S X=@(DIC_+($G(^DISV(DUZ,DIC)))_",0)") W " ",X
"RTN","LEXMTLU",28,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXMTLU",29,0)
 W:$D(DTOUT) !,"Try later.",! S:$D(DTOUT) X=""
"RTN","LEXMTLU",30,0)
 S:X[U DUOUT=1 K DIR,DIRUT,DIROUT Q X
"RTN","LEXMTLU",31,0)
TERMHLP ; Look-up help  PCH 11
"RTN","LEXMTLU",32,0)
 N X S X="" S:$L($G(DIR("?"))) X=$G(DIR("?")) S:'$L(X) X="    "_$$SQ^LEXHLP
"RTN","LEXMTLU",33,0)
 W:$L(X) !!,X,!
"RTN","LEXMTLU",34,0)
 W !,"    Best results occur using one to three full or partial words without"
"RTN","LEXMTLU",35,0)
 W !,"    a suffix (i.e., ""DIABETES"",""DIAB MELL"",""DIAB MELL INSUL"") or"
"RTN","LEXMTLU",36,0)
 W !,"    a classification code (ICD, CPT, HCPCS, etc)"
"RTN","LEXMTLU",37,0)
 Q
"RTN","LEXMTLU",38,0)
DD ; Display Defaults in ^TMP("LEXSCH",$J)
"RTN","LEXMTLU",39,0)
 N LEXNODE S LEXNODE="^TMP(""LEXSCH"","_$J_")"
"RTN","LEXMTLU",40,0)
 N LEXOK S LEXOK=1 F  S LEXNODE=$Q(@LEXNODE) Q:'LEXOK  D  Q:'LEXOK
"RTN","LEXMTLU",41,0)
 . I LEXNODE'["LEXSCH" S LEXOK=0 Q
"RTN","LEXMTLU",42,0)
 . I LEXNODE'[$J S LEXOK=0 Q
"RTN","LEXMTLU",43,0)
 . W !,LEXNODE,"=",@LEXNODE
"RTN","LEXMTLU",44,0)
 Q
"RTN","LEXNDX1")
0^186^B15300301
"RTN","LEXNDX1",1,0)
LEXNDX1 ;ISL/KER - Set/kill indexes (Part 1) ;04/21/2014
"RTN","LEXNDX1",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXNDX1",3,0)
 ;               
"RTN","LEXNDX1",4,0)
 ; Global Variables
"RTN","LEXNDX1",5,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXNDX1",6,0)
 ;    ^TMP("LEXSTOP")     SACC 2.3.2.5.1
"RTN","LEXNDX1",7,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX1",8,0)
 ;               
"RTN","LEXNDX1",9,0)
 ; External References
"RTN","LEXNDX1",10,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXNDX1",11,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXNDX1",12,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXNDX1",13,0)
 ;               
"RTN","LEXNDX1",14,0)
S ; Set Expression file (#757.01) word index node AWRD
"RTN","LEXNDX1",15,0)
 Q:'$D(X)!('$D(DA))  Q:$D(DIC)#2=0
"RTN","LEXNDX1",16,0)
 Q:'$D(@(DIC_DA_",0)"))  Q:'$D(@(DIC_DA_",1)"))  Q:+($P(@(DIC_DA_",1)"),U,1))=0
"RTN","LEXNDX1",17,0)
 N LEXIDX,LEXJ,LEXI,LEXTYPE,LEXT S LEXTYPE=+X Q:LEXTYPE'>0
"RTN","LEXNDX1",18,0)
 S LEXT=$P($G(^LEX(757.011,LEXTYPE,0)),"^",2) Q:+LEXT=0
"RTN","LEXNDX1",19,0)
 S LEXTYPE=$P($G(^LEX(757.011,LEXTYPE,0)),"^",1) D:LEXTYPE["DELETED" U
"RTN","LEXNDX1",20,0)
 S X=@(DIC_DA_",0)") S:X'="" ^LEX(757.01,"B",$$UP^XLFSTR($E(X,1,63)),DA)=""
"RTN","LEXNDX1",21,0)
 S LEXEX=$P(^LEX(757,$P(^LEX(757.01,DA,1),U,1),0),U,1),LEXIDX=""
"RTN","LEXNDX1",22,0)
 D PTX^LEXTOKN I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX1",23,0)
 . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D
"RTN","LEXNDX1",24,0)
 . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)
"RTN","LEXNDX1",25,0)
 . . I '$D(^LEX(757.01,"AWRD",LEXI,LEXEX)) D
"RTN","LEXNDX1",26,0)
 . . . S:'$D(^LEX(757.01,DA,4,"B",LEXI)) ^LEX(757.01,"AWRD",LEXI,LEXEX,DA)=""
"RTN","LEXNDX1",27,0)
 D L K LEXIDX,LEXEX,LEXI,LEXTYPE,LEXT,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX1",28,0)
 ;
"RTN","LEXNDX1",29,0)
K ; Kill Expression file (#757.01) word index node AWRD
"RTN","LEXNDX1",30,0)
 Q:'$D(X)!('$D(DA))  D U
"RTN","LEXNDX1",31,0)
 Q:'$D(^LEX(757.01,DA,0))  Q:+($P(^LEX(757.01,DA,1),U,1))=0
"RTN","LEXNDX1",32,0)
 N LEXTYPE,LEXT S LEXTYPE=+X Q:LEXTYPE'>0
"RTN","LEXNDX1",33,0)
 S LEXT=$P($G(^LEX(757.011,LEXTYPE,0)),"^",2) Q:+LEXT=0
"RTN","LEXNDX1",34,0)
 N LEXIDX,LEXJ,LEXI S X=^LEX(757.01,DA,0),LEXIDX=""
"RTN","LEXNDX1",35,0)
 D PTX^LEXTOKN I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX1",36,0)
 . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D 
"RTN","LEXNDX1",37,0)
 . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)  K ^LEX(757.01,"AWRD",LEXI,DA)
"RTN","LEXNDX1",38,0)
 K LEXIDX,LEXTYPE,LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX1",39,0)
L ; Link words
"RTN","LEXNDX1",40,0)
 N DIC,LEXDEXP D KILL^LEXNDX2 S LEXDEXP=DA
"RTN","LEXNDX1",41,0)
 ;     For Subsets
"RTN","LEXNDX1",42,0)
 I $D(^LEX(757.21,"B",LEXDEXP)) D
"RTN","LEXNDX1",43,0)
 . S DA=0 F  S DA=$O(^LEX(757.21,"B",LEXDEXP,DA)) Q:+DA=0  D
"RTN","LEXNDX1",44,0)
 . . N X S X=$P(^LEX(757.21,DA,0),U,2) Q:+X<1  D SS^LEXNDX2
"RTN","LEXNDX1",45,0)
 ;     For Replacement Words
"RTN","LEXNDX1",46,0)
 I $D(^LEX(757.05,"AEXP",LEXDEXP)) D
"RTN","LEXNDX1",47,0)
 . S DA=0 F  S DA=$O(^LEX(757.05,"AEXP",LEXDEXP,DA)) Q:+DA=0  D
"RTN","LEXNDX1",48,0)
 . . N X,LEXMC S X=$P(^LEX(757.05,DA,0),U,1) Q:X=""
"RTN","LEXNDX1",49,0)
 . . S LEXMC=$P($G(^LEX(757.01,LEXDEXP,1)),U,1) Q:+LEXMC'>0
"RTN","LEXNDX1",50,0)
 . . S ^LEX(757.01,"AWRD",X,LEXDEXP,"LINKED")=""
"RTN","LEXNDX1",51,0)
 S DA=LEXDEXP
"RTN","LEXNDX1",52,0)
 Q
"RTN","LEXNDX1",53,0)
U ; Unlink words
"RTN","LEXNDX1",54,0)
 N DIC,LEXDEXP D KILL^LEXNDX2 S LEXDEXP=DA
"RTN","LEXNDX1",55,0)
 ;     For Subsets
"RTN","LEXNDX1",56,0)
 I $D(^LEX(757.21,"B",LEXDEXP)) D
"RTN","LEXNDX1",57,0)
 . S DA=0 F  S DA=$O(^LEX(757.21,"B",LEXDEXP,DA)) Q:+DA=0  D
"RTN","LEXNDX1",58,0)
 . . N X S X=$P(^LEX(757.21,DA,0),U,2) Q:+X<1  D SK^LEXNDX2
"RTN","LEXNDX1",59,0)
 ;     For Replacement Words
"RTN","LEXNDX1",60,0)
 I $D(^LEX(757.05,"AEXP",LEXDEXP)) D
"RTN","LEXNDX1",61,0)
 . S DA=0 F  S DA=$O(^LEX(757.05,"AEXP",LEXDEXP,DA)) Q:+DA=0  D
"RTN","LEXNDX1",62,0)
 . . N X,LEXMC S X=$P(^LEX(757.05,DA,0),U,1) Q:X=""
"RTN","LEXNDX1",63,0)
 . . S LEXMC=$P($G(^LEX(757.01,LEXDEXP,1)),U,1) Q:+LEXMC'>0
"RTN","LEXNDX1",64,0)
 . . K ^LEX(757.01,"AWRD",X,LEXDEXP,"LINKED")
"RTN","LEXNDX1",65,0)
 S DA=LEXDEXP
"RTN","LEXNDX1",66,0)
 Q
"RTN","LEXNDX1",67,0)
REIDXMC ; Re-Index Expression file word index AWRD
"RTN","LEXNDX1",68,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXNDX1",69,0)
 N LEXIDX,LEXREIX,DA,X S DA=0,X="",(LEXREIX,LEXIDX)="" K ^TMP("LEXSTOP","REIDXMC")
"RTN","LEXNDX1",70,0)
 F  S DA=$O(^LEX(757.01,DA)) Q:+DA=0!($D(^TMP("LEXSTOP","REIDXMC")))  D
"RTN","LEXNDX1",71,0)
 . S X=$P(^LEX(757.01,DA,1),U,2) D S
"RTN","LEXNDX1",72,0)
 K ^TMP("LEXSTOP","REIDXMC"),LEXIDX,DA,X
"RTN","LEXNDX1",73,0)
 Q
"RTN","LEXNDX1",74,0)
RMC ; Re-Index Expression file word index AWRD (Task Manager)
"RTN","LEXNDX1",75,0)
 S ZTRTN="REIDXMC^LEXNDX1"
"RTN","LEXNDX1",76,0)
 S ZTDESC="Re-Indexing Major Concept Words in ""AWRD"" index"
"RTN","LEXNDX1",77,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS W:$D(ZTSK) !!,"Re-Indexing Major Concept Words in ""AWRD"" index" W:'$D(ZTSK) !!,"Task to re-index Major Concept not created"
"RTN","LEXNDX1",78,0)
 K ZTDTH,ZTDESC,ZTIO,ZTRTN
"RTN","LEXNDX1",79,0)
 Q
"RTN","LEXNDX1",80,0)
RALL ; Re-Index entire file (needs DIC)
"RTN","LEXNDX1",81,0)
 S DIK=$G(DIC) Q:DIK=""  Q:'$D(@(DIK_"0)"))
"RTN","LEXNDX1",82,0)
 S ZTREQ="@",(ZTSAVE("ZTREQ"),ZTSAVE("DIK"))="",ZTRTN="IXALL^DIK"
"RTN","LEXNDX1",83,0)
 S ZTDESC="Re-Indexing "_DIK
"RTN","LEXNDX1",84,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXNDX1",85,0)
 K ZTDTH,ZTDESC,ZTIO,ZTRTN,ZTREQ,ZTSAVE
"RTN","LEXNDX1",86,0)
 Q
"RTN","LEXNDX2")
0^187^B24352657
"RTN","LEXNDX2",1,0)
LEXNDX2 ;ISL/KER - Set/kill indexes (Part 2) ;04/21/2014
"RTN","LEXNDX2",2,0)
 ;;2.0;LEXICON UTILITY;**51,80**;Sep 23, 1996;Build 1
"RTN","LEXNDX2",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","LEXNDX2",4,0)
 ;               
"RTN","LEXNDX2",5,0)
 ; Global Variables
"RTN","LEXNDX2",6,0)
 ;    ^DD(                ICR    345
"RTN","LEXNDX2",7,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXNDX2",8,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX2",9,0)
 ;               
"RTN","LEXNDX2",10,0)
 ; External References
"RTN","LEXNDX2",11,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXNDX2",12,0)
 ;               
"RTN","LEXNDX2",13,0)
SS ; Get (unique) text for an expression in the Subset file
"RTN","LEXNDX2",14,0)
 Q:'$D(X)!('$D(DA))
"RTN","LEXNDX2",15,0)
 N LEXEXP,LEXMC,LEXTEXP,LEXOLDX S LEXOLDX=X
"RTN","LEXNDX2",16,0)
 S LEXEXP=+(^LEX(757.21,DA,0)),LEXMC=$P(^LEX(757.01,LEXEXP,1),U,1)
"RTN","LEXNDX2",17,0)
 S LEXTEXP=0 F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMC,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXNDX2",18,0)
 . S X=^LEX(757.01,LEXTEXP,0) D SS2
"RTN","LEXNDX2",19,0)
 S X=LEXOLDX K LEXOLDX,LEXEXP,LEXMC,LEXTEXP
"RTN","LEXNDX2",20,0)
 Q
"RTN","LEXNDX2",21,0)
SS2 ; Parse text and set node for each word
"RTN","LEXNDX2",22,0)
 N LEXYPE,LEXT,LEXSIDX,LEXIDX,LEXD,LEXJ,LEXI S LEXIDX=""
"RTN","LEXNDX2",23,0)
 S LEXYPE=+($P($G(^LEX(757.01,LEXTEXP,1)),U,2)) Q:LEXYPE'>0
"RTN","LEXNDX2",24,0)
 S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),"^",2)) Q:LEXT=0
"RTN","LEXNDX2",25,0)
 S LEXSIDX="A"_$P(^LEXT(757.2,LEXOLDX,0),U,2)
"RTN","LEXNDX2",26,0)
 D PTX^LEXTOKN
"RTN","LEXNDX2",27,0)
 D KNR
"RTN","LEXNDX2",28,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX2",29,0)
 . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D
"RTN","LEXNDX2",30,0)
 . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)
"RTN","LEXNDX2",31,0)
 . . S:'$D(^LEX(757.21,LEXSIDX,LEXI,DA)) ^LEX(757.21,LEXSIDX,LEXI,DA)=""
"RTN","LEXNDX2",32,0)
 K LEXSIDX,LEXIDX,LEXD,LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX2",33,0)
SK ; Get (all) text for an expression in the Subset file
"RTN","LEXNDX2",34,0)
 Q:'$D(X)!('$D(DA))
"RTN","LEXNDX2",35,0)
 N LEXEXP,LEXMC,LEXTEXP,LEXOLDX S LEXOLDX=X
"RTN","LEXNDX2",36,0)
 S LEXEXP=+(^LEX(757.21,DA,0)),LEXMC=$P(^LEX(757.01,LEXEXP,1),U,1)
"RTN","LEXNDX2",37,0)
 S LEXTEXP=0 F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMC,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXNDX2",38,0)
 . S X=^LEX(757.01,LEXTEXP,0) D SK2
"RTN","LEXNDX2",39,0)
 S X=LEXOLDX K LEXOLDX,LEXEXP,LEXMC,LEXTEXP Q
"RTN","LEXNDX2",40,0)
SK2 ; Parse text and kill node for each word
"RTN","LEXNDX2",41,0)
 N LEXSIDX,LEXIDX,LEXD,LEXJ,LEXI S LEXIDX=""
"RTN","LEXNDX2",42,0)
 S LEXSIDX="A"_$P(^LEXT(757.2,LEXOLDX,0),U,2)
"RTN","LEXNDX2",43,0)
 D PTX^LEXTOKN
"RTN","LEXNDX2",44,0)
 D KNR
"RTN","LEXNDX2",45,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX2",46,0)
 . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D
"RTN","LEXNDX2",47,0)
 . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)
"RTN","LEXNDX2",48,0)
 . . K ^LEX(757.21,LEXSIDX,LEXI,DA)
"RTN","LEXNDX2",49,0)
 K LEXSIDX,LEXIDX,LEXD,LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J) Q
"RTN","LEXNDX2",50,0)
SET ; Given DIC and DA set indexes
"RTN","LEXNDX2",51,0)
 Q:$D(DIC)#2=0!('$D(DA))  Q:DIC'["LEX("&(DIC'["LEX(")
"RTN","LEXNDX2",52,0)
 N LEXRT,LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",53,0)
 S LEXFN=+($P(DIC,"(",2)),LEXRT=$TR($P(DIC,"(",1),"^","")
"RTN","LEXNDX2",54,0)
 S LEXFL=0 F  S LEXFL=$O(^DD(LEXFN,LEXFL)) Q:+LEXFL=0  D
"RTN","LEXNDX2",55,0)
 . S LEXN=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",1)
"RTN","LEXNDX2",56,0)
 . S LEXP=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",2),LEXRIDX=0
"RTN","LEXNDX2",57,0)
 . F  S LEXRIDX=$O(^DD(LEXFN,LEXFL,1,LEXRIDX)) Q:+LEXRIDX=0  D
"RTN","LEXNDX2",58,0)
 . . I $L($P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)) D
"RTN","LEXNDX2",59,0)
 . . . S X=$P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)
"RTN","LEXNDX2",60,0)
 . . . X:X'="" ^DD(LEXFN,LEXFL,1,LEXRIDX,1)
"RTN","LEXNDX2",61,0)
 . . I DA>$P($G(@("^"_LEXRT_"("_LEXFN_",0)")),"^",3) S $P(@("^"_LEXRT_"("_LEXFN_",0)"),"^",3)=DA
"RTN","LEXNDX2",62,0)
 K LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",63,0)
 Q
"RTN","LEXNDX2",64,0)
KILL ; Given DIC and DA kill indexes
"RTN","LEXNDX2",65,0)
 Q:$D(DIC)#2=0!('$D(DA))  Q:DIC'["LEX("&(DIC'["LEX(")
"RTN","LEXNDX2",66,0)
 N LEXRT,LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",67,0)
 S LEXFN=+($P(DIC,"(",2)),LEXRT=$TR($P(DIC,"(",1),"^","")
"RTN","LEXNDX2",68,0)
 S LEXFL=0 F  S LEXFL=$O(^DD(LEXFN,LEXFL)) Q:+LEXFL=0  D
"RTN","LEXNDX2",69,0)
 . S LEXN=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",1)
"RTN","LEXNDX2",70,0)
 . S LEXP=$P($P(^DD(LEXFN,LEXFL,0),U,4),";",2),LEXRIDX=0
"RTN","LEXNDX2",71,0)
 . F  S LEXRIDX=$O(^DD(LEXFN,LEXFL,1,LEXRIDX)) Q:+LEXRIDX=0  D
"RTN","LEXNDX2",72,0)
 . . I $L($P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)) D
"RTN","LEXNDX2",73,0)
 . . . S X=$P($G(@("^"_LEXRT_"("_LEXFN_","_DA_","_LEXN_")")),U,LEXP)
"RTN","LEXNDX2",74,0)
 . . . X:X'="" ^DD(LEXFN,LEXFL,1,LEXRIDX,2)
"RTN","LEXNDX2",75,0)
 K LEXFN,LEXFL,LEXRIDX,LEXN,LEXP,X
"RTN","LEXNDX2",76,0)
 Q
"RTN","LEXNDX2",77,0)
SAPP ; Set application subset definition index
"RTN","LEXNDX2",78,0)
 I X'="" D
"RTN","LEXNDX2",79,0)
 . N LEXIDX S LEXIDX=$P(^LEXT(757.2,DA,0),U,2) I LEXIDX'="" D
"RTN","LEXNDX2",80,0)
 . . K ^LEXT(757.2,"AA",LEXIDX) S $P(^LEXT(757.2,DA,0),U,2)="" K LEXIDX
"RTN","LEXNDX2",81,0)
 . S ^LEXT(757.2,"AB",X,DA)=""
"RTN","LEXNDX2",82,0)
 Q
"RTN","LEXNDX2",83,0)
KAPP ; Kill application subset definition index
"RTN","LEXNDX2",84,0)
 K ^LEXT(757.2,"AB",X,DA) Q
"RTN","LEXNDX2",85,0)
SSM ; Set index for Subset Mnemonic
"RTN","LEXNDX2",86,0)
 S ^LEXT(757.2,"AA",X,DA)="" N LEXX,LEXLOW
"RTN","LEXNDX2",87,0)
 S LEXX=$P($G(^LEXT(757.2,DA,0)),U,1)
"RTN","LEXNDX2",88,0)
 S:$L(LEXX) ^LEXT(757.2,"AA",LEXX,DA)="",^LEXT(757.2,"AA",$$UP^XLFSTR(LEXX),DA)=""
"RTN","LEXNDX2",89,0)
 I $L(LEXX) D
"RTN","LEXNDX2",90,0)
 . N X,LEXI S X=LEXX,LEXLOW="" D PTX^LEXTOKN
"RTN","LEXNDX2",91,0)
 . I +($G(^TMP("LEXTKN",$J,0)))>0 F LEXI=1:1:+($G(^TMP("LEXTKN",$J,0))) D
"RTN","LEXNDX2",92,0)
 . . S ^LEXT(757.2,"AA",$O(^TMP("LEXTKN",$J,LEXI,"")),DA)=""
"RTN","LEXNDX2",93,0)
 . . S ^LEXT(757.2,"AA",$$UP^XLFSTR($O(^TMP("LEXTKN",$J,LEXI,""))),DA)=""
"RTN","LEXNDX2",94,0)
 Q
"RTN","LEXNDX2",95,0)
KSM ; Kill index for Subset Mnemonic
"RTN","LEXNDX2",96,0)
 K ^LEXT(757.2,"AA",X,DA) N LEXX,LEXLOW
"RTN","LEXNDX2",97,0)
 S LEXX=$P($G(^LEXT(757.2,DA,0)),U,1)
"RTN","LEXNDX2",98,0)
 K:$L(LEXX) ^LEXT(757.2,"AA",LEXX,DA),^LEXT(757.2,"AA",$$UP^XLFSTR(LEXX),DA)
"RTN","LEXNDX2",99,0)
 I $L(LEXX) D
"RTN","LEXNDX2",100,0)
 . N X,LEXI S X=LEXX,LEXLOW="" D PTX^LEXTOKN
"RTN","LEXNDX2",101,0)
 . I +($G(^TMP("LEXTKN",$J,0)))>0 F LEXI=1:1:+($G(^TMP("LEXTKN",$J,0))) D
"RTN","LEXNDX2",102,0)
 . . K ^LEXT(757.2,"AA",$O(^TMP("LEXTKN",$J,LEXI,"")),DA)
"RTN","LEXNDX2",103,0)
 . . K ^LEXT(757.2,"AA",$$UP^XLFSTR($O(^TMP("LEXTKN",$J,LEXI,""))),DA)
"RTN","LEXNDX2",104,0)
 Q
"RTN","LEXNDX2",105,0)
KNR ; keywords and replacement words
"RTN","LEXNDX2",106,0)
 N LEXV,LEXN
"RTN","LEXNDX2",107,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX2",108,0)
 .I $D(^LEX(757.01,LEXTEXP,5)) D
"RTN","LEXNDX2",109,0)
 ..S LEXV=""
"RTN","LEXNDX2",110,0)
 ..F  S LEXV=$O(^LEX(757.01,LEXTEXP,5,"B",LEXV)) Q:LEXV=""  D
"RTN","LEXNDX2",111,0)
 ...D ADDTKN(LEXV)
"RTN","LEXNDX2",112,0)
 .I $D(^LEX(757.05,"AEXP",LEXTEXP)) D
"RTN","LEXNDX2",113,0)
 ..S LEXN=""
"RTN","LEXNDX2",114,0)
 ..F  S LEXN=$O(^LEX(757.05,"AEXP",LEXTEXP,LEXN)) Q:LEXN=""  D
"RTN","LEXNDX2",115,0)
 ...S LEXV=$P(^LEX(757.05,LEXN,0),U)
"RTN","LEXNDX2",116,0)
 ...D ADDTKN(LEXV)
"RTN","LEXNDX2",117,0)
 Q
"RTN","LEXNDX2",118,0)
ADDTKN(LEXV) ; add to LEXTKN
"RTN","LEXNDX2",119,0)
 N LEXC
"RTN","LEXNDX2",120,0)
 S LEXC=^TMP("LEXTKN",$J,0)+1
"RTN","LEXNDX2",121,0)
 S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXNDX2",122,0)
 S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXNDX2",123,0)
 Q
"RTN","LEXNDX3")
0^188^B10557269
"RTN","LEXNDX3",1,0)
LEXNDX3 ;ISL/KER - Set/kill indexes (Part 3) Link ;04/21/2014
"RTN","LEXNDX3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXNDX3",3,0)
 ;               
"RTN","LEXNDX3",4,0)
 ; Global Variables
"RTN","LEXNDX3",5,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXNDX3",6,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX3",7,0)
 ;               
"RTN","LEXNDX3",8,0)
 ; External References
"RTN","LEXNDX3",9,0)
 ;    None
"RTN","LEXNDX3",10,0)
 ;               
"RTN","LEXNDX3",11,0)
S ; Set indexes for file 757.05
"RTN","LEXNDX3",12,0)
 Q:('$D(DA))!('$D(X))
"RTN","LEXNDX3",13,0)
 S DIC="^LEX(757.05,"
"RTN","LEXNDX3",14,0)
 N LEXREP,LEXBY,LEXOLDX,LEXEXCL,LEXCTR,LEXREC
"RTN","LEXNDX3",15,0)
 S LEXOLDX=X I X="R" D SREP Q
"RTN","LEXNDX3",16,0)
 S LEXREP=$P(@(DIC_DA_",0)"),U,1),LEXBY=$P(@(DIC_DA_",0)"),U,2)
"RTN","LEXNDX3",17,0)
 Q:LEXREP=""!(LEXBY="")
"RTN","LEXNDX3",18,0)
 I X="N" D UNLINK^LEXNDX4 Q
"RTN","LEXNDX3",19,0)
 I X="L",$D(^LEX(757.05,DA,1,1,0)) D RELINK^LEXNDX4 Q
"RTN","LEXNDX3",20,0)
 D EXCL^LEXNDX5 I 'LEXEXCL S LEXOLDX="L" D LINK^LEXNDX4
"RTN","LEXNDX3",21,0)
 I LEXEXCL,'$D(^LEX(757.01,"AWRD",LEXREP)) D ANYWAY^LEXNDX5 I 'LEXEXCL S LEXOLDX="L" D LINK^LEXNDX4
"RTN","LEXNDX3",22,0)
 S:LEXEXCL LEXOLDX="R" S X=LEXOLDX,$P(^LEX(757.05,DA,0),U,3)=X
"RTN","LEXNDX3",23,0)
 K LEXREP,LEXBY,LEXOLDX,LEXEXCL,LEXCTR,LEXREC
"RTN","LEXNDX3",24,0)
 Q
"RTN","LEXNDX3",25,0)
SREP ; Set indexes for Replacement Words
"RTN","LEXNDX3",26,0)
 N LEXEX,LEXRE S LEXEX=$P(^LEX(757.05,DA,0),U,2),LEXRE=$P(^LEX(757.05,DA,0),U,1) I LEXEX=""!(LEXRE="") K LEXRE,LEXEX Q
"RTN","LEXNDX3",27,0)
 I $D(^LEX(757.01,"B",LEXEX)) D
"RTN","LEXNDX3",28,0)
 . S LEXEXR=$O(^LEX(757.01,"B",LEXEX,0))
"RTN","LEXNDX3",29,0)
 . I +LEXEXR>0,$D(^LEX(757.01,LEXEXR)),+(^LEX(757,+(^LEX(757.01,LEXEXR,1)),0))'=LEXEXR D
"RTN","LEXNDX3",30,0)
 . . S X=LEXEX D PTX^LEXTOKN
"RTN","LEXNDX3",31,0)
 . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX3",32,0)
 . . . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D
"RTN","LEXNDX3",33,0)
 . . . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)  I '$D(^LEX(757.01,"AWRD",LEXI,LEXEXR)) D
"RTN","LEXNDX3",34,0)
 . . . . . N LEXYPE,LEXT S LEXYPE=+($P($G(^LEX(757.01,LEXEXR,1)),U,2)) Q:LEXYPE'>0
"RTN","LEXNDX3",35,0)
 . . . . . S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),"^",2)) Q:LEXT=0
"RTN","LEXNDX3",36,0)
 . . . . . S ^LEX(757.01,"AWRD",LEXI,LEXEXR,"LINKED")=""
"RTN","LEXNDX3",37,0)
 . . K LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J)
"RTN","LEXNDX3",38,0)
 K LEXRE,LEXEX,LEXEXR
"RTN","LEXNDX3",39,0)
 Q
"RTN","LEXNDX3",40,0)
K ; Kill indexes for file 757.05
"RTN","LEXNDX3",41,0)
 Q:$D(DIC)#2=0!('$D(DA))!('$D(X))
"RTN","LEXNDX3",42,0)
 N LEXREP,LEXBY,LEXOLDX
"RTN","LEXNDX3",43,0)
 S LEXOLDX=X I X="R" D KREP Q
"RTN","LEXNDX3",44,0)
 S LEXREP=$P(@(DIC_DA_",0)"),U,1),LEXBY=$P(@(DIC_DA_",0)"),U,2)
"RTN","LEXNDX3",45,0)
 D UNLINK^LEXNDX4
"RTN","LEXNDX3",46,0)
 K LEXREP,LEXBY,LEXOLDX
"RTN","LEXNDX3",47,0)
 Q
"RTN","LEXNDX3",48,0)
KREP ; Kill indexes for Replacement Words
"RTN","LEXNDX3",49,0)
 N LEXEX,LEXRE S LEXEX=$P(^LEX(757.05,DA,0),U,2),LEXRE=$P(^LEX(757.05,DA,0),U,1) I LEXEX=""!(LEXRE="") K LEXRE,LEXEX Q
"RTN","LEXNDX3",50,0)
 I $D(^LEX(757.01,"B",LEXEX)) D
"RTN","LEXNDX3",51,0)
 . S LEXEXR=$O(^LEX(757.01,"B",LEXEX,0))
"RTN","LEXNDX3",52,0)
 . I +LEXEXR>0,$D(^LEX(757.01,LEXEXR)),+(^LEX(757,+(^LEX(757.01,LEXEXR,1)),0))'=LEXEXR D
"RTN","LEXNDX3",53,0)
 . . S X=LEXEX D PTX^LEXTOKN
"RTN","LEXNDX3",54,0)
 . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI="",LEXJ=0 D
"RTN","LEXNDX3",55,0)
 . . . F  S LEXJ=$O(^TMP("LEXTKN",$J,LEXJ)) Q:+LEXJ'>0  D
"RTN","LEXNDX3",56,0)
 . . . . S LEXI=$O(^TMP("LEXTKN",$J,LEXJ,"")) Q:'$L(LEXI)
"RTN","LEXNDX3",57,0)
 . . . . I $D(^LEX(757.01,"AWRD",LEXI,LEXEXR)) K ^LEX(757.01,"AWRD",LEXI,LEXEXR,"LINKED")
"RTN","LEXNDX3",58,0)
 . . K LEXI,LEXJ,^TMP("LEXTKN",$J,0),^TMP("LEXTKN",$J)
"RTN","LEXNDX3",59,0)
 K LEXRE,LEXEX,LEXEXR
"RTN","LEXNDX3",60,0)
 Q
"RTN","LEXNDX3",61,0)
RE ; Reindex (Kill/Set) Replacement Words
"RTN","LEXNDX3",62,0)
 N LEXDA,LEXDIC S LEXDA=0,LEXDIC="^LEX(757.05,"
"RTN","LEXNDX3",63,0)
 F  S LEXDA=$O(^LEX(757.05,LEXDA)) Q:+LEXDA=0  D
"RTN","LEXNDX3",64,0)
 . S DA=LEXDA,DIC=LEXDIC D KILL^LEXNDX2 S DA=LEXDA,DIC=LEXDIC D SET^LEXNDX2
"RTN","LEXNDX3",65,0)
 K LEXDA,LEXDIC,DA,DIC
"RTN","LEXNDX3",66,0)
 Q
"RTN","LEXNDX4")
0^166^B25651972
"RTN","LEXNDX4",1,0)
LEXNDX4 ;ISL/KER - Set/kill indexes (Part 4) Link ;04/21/2014
"RTN","LEXNDX4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXNDX4",3,0)
 ;               
"RTN","LEXNDX4",4,0)
 ; Global Variables
"RTN","LEXNDX4",5,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXNDX4",6,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX4",7,0)
 ;               
"RTN","LEXNDX4",8,0)
 ; External References
"RTN","LEXNDX4",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXNDX4",10,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXNDX4",11,0)
 ;               
"RTN","LEXNDX4",12,0)
LINK ; Link a Keyword to an expression
"RTN","LEXNDX4",13,0)
 I $D(^LEX(757.05,DA,1,"B",1)) Q
"RTN","LEXNDX4",14,0)
 W !,"LINK" S X=LEXBY D PTX^LEXTOKN N LEXTMP
"RTN","LEXNDX4",15,0)
 S (LEXTMP,LEXLINK,LEXKEY)=""
"RTN","LEXNDX4",16,0)
 I ^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX4",17,0)
 . N LEXTMP S LEXTMP=$O(^TMP("LEXTKN",$J,0)) Q:LEXTMP'>0
"RTN","LEXNDX4",18,0)
 . S LEXKEY=$O(^TMP("LEXTKN",$J,LEXTMP,LEXKEY))
"RTN","LEXNDX4",19,0)
 Q:'$L(LEXKEY)  S LEXREC=0 F  S LEXREC=$O(^LEX(757.01,"AWRD",LEXKEY,LEXREC)) Q:+LEXREC=0!(LEXLINK[U)  D
"RTN","LEXNDX4",20,0)
 . I ^TMP("LEXTKN",$J,0)=1 S LEXASK=1
"RTN","LEXNDX4",21,0)
 . I ^TMP("LEXTKN",$J,0)>1 S LEXASK=1 D
"RTN","LEXNDX4",22,0)
 . . S LEXA=1 F  S LEXA=$O(^TMP("LEXTKN",$J,LEXA)) Q:+LEXA'>0  D
"RTN","LEXNDX4",23,0)
 . . . S LEXAKEY="",LEXAKEY=$O(^TMP("LEXTKN",$J,LEXA,LEXAKEY)) Q:'$L($G(LEXAKEY))
"RTN","LEXNDX4",24,0)
 . . . S LEXSRC=$$UP^XLFSTR(^LEX(757.01,LEXREC,0))
"RTN","LEXNDX4",25,0)
 . . . I LEXSRC'[$E(LEXAKEY,1,4) S LEXASK=0
"RTN","LEXNDX4",26,0)
 . S LEXLINK="" I LEXASK D
"RTN","LEXNDX4",27,0)
 . . I $D(^LEX(757.05,DA,1,"B",LEXREC)) Q
"RTN","LEXNDX4",28,0)
MOK . . ; Prompt to Map/Link a keyword to an expression
"RTN","LEXNDX4",29,0)
 . . W !!,"Map       ",^LEX(757.01,LEXREC,0),!,"To        ",LEXREP,!,"OK" S %=1 D YN^DICN S LEXLINK=% I %=-1 W ! S LEXLINK=U Q
"RTN","LEXNDX4",30,0)
 . . I '% W !!,"By answering ""Yes"", an index reference will be made to link the",!,"term to the key word ",LEXREP G MOK
"RTN","LEXNDX4",31,0)
 . I +LEXLINK=1 D
"RTN","LEXNDX4",32,0)
 . . N LEXYPE,LEXT S ^LEX(757.05,"ALINK",DA,LEXREC)=""
"RTN","LEXNDX4",33,0)
 . . S LEXYPE=+($P($G(^LEX(757.01,LEXREC,1)),U,2))
"RTN","LEXNDX4",34,0)
 . . S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),U,2))
"RTN","LEXNDX4",35,0)
 . . S:+LEXT>0 ^LEX(757.01,"AWRD",LEXREP,LEXREC,"LINKED")="" W !
"RTN","LEXNDX4",36,0)
 . . I $D(^LEX(757.05,DA,1,0)) D
"RTN","LEXNDX4",37,0)
 . . . S LEXSREC=0 F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  D
"RTN","LEXNDX4",38,0)
 . . . . S ^LEX(757.05,DA,1,"B",^LEX(757.05,DA,1,LEXSREC,0),LEXSREC)=""
"RTN","LEXNDX4",39,0)
 . . . I '$D(^LEX(757.05,DA,1,"B",LEXREC)) D
"RTN","LEXNDX4",40,0)
 . . . . S LEXSREC=0  F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  S LEXLNK=LEXSREC+1
"RTN","LEXNDX4",41,0)
 . . . . K LEXSREC S ^LEX(757.05,DA,1,LEXLNK,0)=LEXREC
"RTN","LEXNDX4",42,0)
 . . . . S ^LEX(757.05,DA,1,"B",LEXREC,LEXLNK)="",$P(^LEX(757.05,DA,1,0),U,4)=$P(^LEX(757.05,DA,1,0),U,4)+1
"RTN","LEXNDX4",43,0)
 . . . . S $P(^LEX(757.05,DA,1,0),U,3)=LEXLNK K LEXLNK
"RTN","LEXNDX4",44,0)
 . . I '$D(^LEX(757.05,DA,1,0)) S ^LEX(757.05,DA,1,1,0)=LEXREC,^LEX(757.05,DA,1,"B",LEXREC,1)="",^LEX(757.05,DA,1,0)="^757.53P^1^1"
"RTN","LEXNDX4",45,0)
 D VERIFY K ^TMP("LEXTKN",$J),^TMP("LEXTKN",$J,0),LEXSRC,LEXKEY,LEXA,LEXAKEY,LEXREC,LEXASK,LEXLINK
"RTN","LEXNDX4",46,0)
 Q
"RTN","LEXNDX4",47,0)
VERIFY ; Display linkages made for user verification
"RTN","LEXNDX4",48,0)
 Q:'$D(DA)
"RTN","LEXNDX4",49,0)
 I '$D(^LEX(757.05,DA,1,0)) W !,"No Word Linkages Created",! Q
"RTN","LEXNDX4",50,0)
 W !!,$P(^LEX(757.05,DA,0),"^",1)," has been linked to:  ",!
"RTN","LEXNDX4",51,0)
 N LEXSREC S LEXSREC=0
"RTN","LEXNDX4",52,0)
 F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  D
"RTN","LEXNDX4",53,0)
 . W !,?4,$E(^LEX(757.01,^LEX(757.05,DA,1,LEXSREC,0),0),1,75)
"RTN","LEXNDX4",54,0)
 W ! I +$$OK D  K LEXSREC,LEXLNK Q
"RTN","LEXNDX4",55,0)
 . S LEXSREC=0  F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  S LEXLNK=LEXSREC+1
"RTN","LEXNDX4",56,0)
 . K LEXSREC S ^LEX(757.05,DA,1,LEXLNK,0)=1,^LEX(757.05,DA,1,"B",1,LEXLNK)=""
"RTN","LEXNDX4",57,0)
 . S $P(^LEX(757.05,DA,1,0),U,4)=$P(^LEX(757.05,DA,1,0),U,4)+1
"RTN","LEXNDX4",58,0)
 . S $P(^LEX(757.05,DA,1,0),U,3)=LEXLNK K LEXLNK
"RTN","LEXNDX4",59,0)
 D UNLINK
"RTN","LEXNDX4",60,0)
 Q
"RTN","LEXNDX4",61,0)
OK(LEXOK) ; Get user response
"RTN","LEXNDX4",62,0)
OK1 ; Prompt "Is this correct"
"RTN","LEXNDX4",63,0)
 W !,"Is this correct" S %=1 D YN^DICN
"RTN","LEXNDX4",64,0)
 I %=-1!(%=2) K %,%Y Q 0
"RTN","LEXNDX4",65,0)
 I %=1 K %,%Y Q 1
"RTN","LEXNDX4",66,0)
 I '% D  G OK1
"RTN","LEXNDX4",67,0)
 . W !,"By confirming the word linkages displayed above, a look-up"
"RTN","LEXNDX4",68,0)
 . W !,"conducted on ",$P(^LEX(757.05,DA,0),"^",1)
"RTN","LEXNDX4",69,0)
 . W " will retrieve the linked terms."
"RTN","LEXNDX4",70,0)
 Q 0
"RTN","LEXNDX4",71,0)
RELINK ; Relink Keywords to expressions
"RTN","LEXNDX4",72,0)
 Q:'$D(DA)  Q:'$D(^LEX(757.05,DA,1,1,0))
"RTN","LEXNDX4",73,0)
 D SUB N LEXMC,LEXCTR,LEXSREC,LEXERM S (LEXCTR,LEXSREC)=0,LEXERM=$P(^LEX(757.05,DA,0),"^",1)
"RTN","LEXNDX4",74,0)
 F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  D
"RTN","LEXNDX4",75,0)
 . S LEXCTR=LEXCTR+1
"RTN","LEXNDX4",76,0)
 . S ^LEX(757.05,DA,1,0)="^757.53P^"_LEXCTR_"^"_LEXCTR
"RTN","LEXNDX4",77,0)
 . S ^LEX(757.05,DA,1,"B",^LEX(757.05,DA,1,LEXSREC,0),LEXSREC)=""
"RTN","LEXNDX4",78,0)
 . I ^LEX(757.05,DA,1,LEXSREC,0)'=1 D
"RTN","LEXNDX4",79,0)
 . . S LEXMC=^LEX(757.05,DA,1,LEXSREC,0)
"RTN","LEXNDX4",80,0)
 . . N LEXYPE,LEXT S LEXYPE=+($P($G(^LEX(757.01,LEXMC,1)),U,2))
"RTN","LEXNDX4",81,0)
 . . S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),U,2))
"RTN","LEXNDX4",82,0)
 . . I +LEXT>0 D
"RTN","LEXNDX4",83,0)
 . . . S ^LEX(757.01,"AWRD",LEXERM,LEXMC,"LINKED")=""
"RTN","LEXNDX4",84,0)
 . . . N X S X=LEXERM I $L(X) D
"RTN","LEXNDX4",85,0)
 . . . . Q:$D(DCNT)&($G(DIKSAVE(1))["ASL")
"RTN","LEXNDX4",86,0)
 . . . . Q:$D(DCNT)&($G(DIK(1))["ASL")
"RTN","LEXNDX4",87,0)
 . . . . Q:$D(DCNT)&('$D(DIK(1)))
"RTN","LEXNDX4",88,0)
 . . . . D SSF^LEXNDX6
"RTN","LEXNDX4",89,0)
 . . S ^LEX(757.05,"ALINK",DA,LEXMC)=""
"RTN","LEXNDX4",90,0)
 K LEXSREC,LEXERM N DCNT,DIKSAVE
"RTN","LEXNDX4",91,0)
 Q
"RTN","LEXNDX4",92,0)
UNLINK ; Unlink a Keyword from an expression
"RTN","LEXNDX4",93,0)
 Q:'$D(^LEX(757.05,DA,1,0))  N LEXMC,LEXLNK
"RTN","LEXNDX4",94,0)
 S LEXMC=0  F  S LEXMC=$O(^LEX(757.05,DA,1,"B",LEXMC)) Q:+LEXMC=0  D
"RTN","LEXNDX4",95,0)
 . S LEXLNK=0  F  S LEXLNK=$O(^LEX(757.05,DA,1,"B",LEXMC,LEXLNK)) Q:+LEXLNK=0  D
"RTN","LEXNDX4",96,0)
 . . S LEXWRD=$P(^LEX(757.05,DA,0),U,1)
"RTN","LEXNDX4",97,0)
 . . K ^LEX(757.01,"AWRD",LEXWRD,LEXMC,"LINKED")
"RTN","LEXNDX4",98,0)
 . . N X S X=LEXWRD
"RTN","LEXNDX4",99,0)
 . . I $D(X),X=0 D
"RTN","LEXNDX4",100,0)
 . . . K ^LEX(757.05,DA,1,LEXLNK,0)
"RTN","LEXNDX4",101,0)
 . . . K ^LEX(757.05,DA,1,"B",LEXMC,LEXLNK)
"RTN","LEXNDX4",102,0)
 . . . K ^LEX(757.05,DA,1,0)
"RTN","LEXNDX4",103,0)
 . . I $L(X) D
"RTN","LEXNDX4",104,0)
 . . . Q:$D(DCNT)&($G(DIKSAVE(1))["ASL")
"RTN","LEXNDX4",105,0)
 . . . Q:$D(DCNT)&($G(DIK(1))["ASL")
"RTN","LEXNDX4",106,0)
 . . . Q:$D(DCNT)&('$D(DIK(1)))
"RTN","LEXNDX4",107,0)
 . . . D KSF^LEXNDX6
"RTN","LEXNDX4",108,0)
 . . K ^LEX(757.05,"ALINK",DA,LEXMC)
"RTN","LEXNDX4",109,0)
 K LEXLNK,LEXMC N DCNT,DIKSAVE
"RTN","LEXNDX4",110,0)
 Q
"RTN","LEXNDX4",111,0)
SUB ; Index linked words in sub-file before UNLINK and RELINK
"RTN","LEXNDX4",112,0)
 Q:'$D(DA)  I $D(^LEX(757.05,DA,1,1,0)) N LEXSREC,LEXMC S LEXSREC=0 F  S LEXSREC=$O(^LEX(757.05,DA,1,LEXSREC)) Q:+LEXSREC=0  S ^LEX(757.05,DA,1,"B",^LEX(757.05,DA,1,LEXSREC,0),LEXSREC)=""
"RTN","LEXNDX4",113,0)
 Q
"RTN","LEXNDX5")
0^189^B7594232
"RTN","LEXNDX5",1,0)
LEXNDX5 ;ISL/KER - Set/kill indexes (Part 5) Link ;04/21/2014
"RTN","LEXNDX5",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXNDX5",3,0)
 ;               
"RTN","LEXNDX5",4,0)
 ; Global Variables
"RTN","LEXNDX5",5,0)
 ;    None
"RTN","LEXNDX5",6,0)
 ;               
"RTN","LEXNDX5",7,0)
 ; External References
"RTN","LEXNDX5",8,0)
 ;    YN^DICN             ICR  10009
"RTN","LEXNDX5",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEXNDX5",10,0)
 ;               
"RTN","LEXNDX5",11,0)
EXCL ; Is a term used with an "Exclusive" meaning?
"RTN","LEXNDX5",12,0)
 Q:'$D(LEXREP)!('$D(LEXBY))
"RTN","LEXNDX5",13,0)
 S LEXEXCL=1 I $D(^LEX(757.01,"AWRD",LEXREP)) D
"RTN","LEXNDX5",14,0)
 . W !,LEXREP," is used as follows:  ",!
"RTN","LEXNDX5",15,0)
 . S (LEXCTR,LEXREC)=0 F  S LEXREC=$O(^LEX(757.01,"AWRD",LEXREP,LEXREC)) Q:+LEXREC=0  D
"RTN","LEXNDX5",16,0)
 . . S LEXCTR=LEXCTR+1 W !,$J(LEXCTR,4),": ",^LEX(757.01,LEXREC,0)
"RTN","LEXNDX5",17,0)
 . . I LEXCTR#16=0 D CONT
"RTN","LEXNDX5",18,0)
ASKEX . ; Ask, "is it exclusive?"
"RTN","LEXNDX5",19,0)
 . W !!,"Based on the reference",$S(LEXCTR>1:"s",1:"")," shown above, does ",LEXREP
"RTN","LEXNDX5",20,0)
 . W !,"exclusively refer to ",LEXBY
"RTN","LEXNDX5",21,0)
ASKEX2 . ; Get response
"RTN","LEXNDX5",22,0)
 . S %=2 D YN^DICN S LEXEXCL=$S(%=2:0,%=-1:0,1:%) Q:%'=0
"RTN","LEXNDX5",23,0)
 . I '% D EXCLHLP G ASKEX2
"RTN","LEXNDX5",24,0)
 . G ASKEX
"RTN","LEXNDX5",25,0)
 Q
"RTN","LEXNDX5",26,0)
EXCLHLP ; Help to decide if the term use is "Exclusive"
"RTN","LEXNDX5",27,0)
 W !!,"If ",LEXREP," exclusively refers to ",LEXBY,", answer"
"RTN","LEXNDX5",28,0)
 W !,"""Yes"" and ",LEXREP," will always be replaced by",LEXBY,"."
"RTN","LEXNDX5",29,0)
 W !!,"If ",LEXREP," refers to concepts other than",LEXBY,", answer"
"RTN","LEXNDX5",30,0)
 W !,"""No"" and begin linking ",LEXREP," to ",LEXBY," (in each"
"RTN","LEXNDX5",31,0)
 W !,"occurrence where the two terms have the same meaning)"
"RTN","LEXNDX5",32,0)
 W !!,"Is ",LEXREP," used exclusively"
"RTN","LEXNDX5",33,0)
 Q
"RTN","LEXNDX5",34,0)
CONT ; Continue?
"RTN","LEXNDX5",35,0)
 W ! N X,Y,DTOUT,DUOUT,DIRUT,DIROUT S DIR("A")="Press <Return> to continue  ",DIR("?")="Additional information is available, press <Return> to continue ",DIR(0)="EA" D ^DIR K DIR W ! Q
"RTN","LEXNDX5",36,0)
ANYWAY ; Term was not found, ask to link the term anyway
"RTN","LEXNDX5",37,0)
 Q:'$D(LEXREP)!('$D(LEXBY))  Q:$D(^LEX(757.01,"AWRD",LEXREP))  N LEXANYW S LEXEXCL=0
"RTN","LEXNDX5",38,0)
 W !!,LEXREP," was not found in the Lexicon"
"RTN","LEXNDX5",39,0)
ANY2 ; Get response
"RTN","LEXNDX5",40,0)
 W !,"Do you wish to link ",LEXREP," to terms",!,"containing ",LEXBY
"RTN","LEXNDX5",41,0)
 S %=1,LEXEXCL=0 D YN^DICN S:%=-1!(%=2) LEXEXCL=1 Q:%'=0
"RTN","LEXNDX5",42,0)
 I '% D ANYHLP G ANY2
"RTN","LEXNDX5",43,0)
 W ! G ANY2
"RTN","LEXNDX5",44,0)
ANYHLP ; Help to decide whether to continue with the linkage
"RTN","LEXNDX5",45,0)
 W !!,"Linking ",LEXREP," to ",LEXREP," will cause the "
"RTN","LEXNDX5",46,0)
 W !,"look-up to include all linked occurences of ",LEXREP
"RTN","LEXNDX5",47,0)
 W !,"to be listed when searching for ",LEXREP,!
"RTN","LEXNDX5",48,0)
 Q
"RTN","LEXNDX6")
0^165^B13564352
"RTN","LEXNDX6",1,0)
LEXNDX6 ;ISL/KER - Set/kill indexes (Misc) ;04/21/2014
"RTN","LEXNDX6",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXNDX6",3,0)
 ;               
"RTN","LEXNDX6",4,0)
 ; Global Variables
"RTN","LEXNDX6",5,0)
 ;    ^LEX(757.4)         N/A
"RTN","LEXNDX6",6,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX6",7,0)
 ;               
"RTN","LEXNDX6",8,0)
 ; External References
"RTN","LEXNDX6",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXNDX6",10,0)
 ;               
"RTN","LEXNDX6",11,0)
SRA ; Set Shortcut index
"RTN","LEXNDX6",12,0)
 Q:'$D(X)!('$D(DA))!('$D(DA(1)))  N LEXKW S LEXKW=$P($G(^LEX(757.4,DA(1),1,DA,0)),U,1) S:$L(LEXKW) ^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXKW),1,63),X,DA(1),DA)="" Q
"RTN","LEXNDX6",13,0)
KRA ; Kill Shortcut index
"RTN","LEXNDX6",14,0)
 Q:'$D(X)!('$D(DA))!('$D(DA(1)))  N LEXKW S LEXKW=$P($G(^LEX(757.4,DA(1),1,DA,0)),U,1) K:$L(LEXKW) ^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXKW),1,63),X,DA(1),DA) Q
"RTN","LEXNDX6",15,0)
 ;
"RTN","LEXNDX6",16,0)
SSF ; Set String Frequency
"RTN","LEXNDX6",17,0)
 Q:'$L($G(X))  N LEXIDX,LEXE
"RTN","LEXNDX6",18,0)
 S LEXIDX="",LEXE=X,X=$$UP^XLFSTR(X) D PTX^LEXTOKN
"RTN","LEXNDX6",19,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX6",20,0)
 . N LEXNT,LEXT,LEXW,LEXI,LEXP,LEXS S LEXI=""
"RTN","LEXNDX6",21,0)
 . S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXNDX6",22,0)
 . . S LEXW=$O(^TMP("LEXTKN",$J,LEXI,"")) Q:'$L(LEXW)
"RTN","LEXNDX6",23,0)
 . . F LEXP=1:1:$L(LEXW) D
"RTN","LEXNDX6",24,0)
 . . . S LEXS=$E(LEXW,1,LEXP)
"RTN","LEXNDX6",25,0)
 . . . ; Re-indexing All Entries of the file
"RTN","LEXNDX6",26,0)
 . . . I $D(DICNT)!($D(DIKDASV))!($D(DIKSAVE)) D  Q
"RTN","LEXNDX6",27,0)
 . . . . S LEXT=0 I $D(^LEX(757.01,"ASL",LEXS)) D
"RTN","LEXNDX6",28,0)
 . . . . . S LEXT=$O(^LEX(757.01,"ASL",LEXS,0))
"RTN","LEXNDX6",29,0)
 . . . . S LEXNT=LEXT+1 Q:LEXNT'>0
"RTN","LEXNDX6",30,0)
 . . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",31,0)
 . . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",32,0)
 . . . ; Re-indexing One Entry of the file
"RTN","LEXNDX6",33,0)
 . . . S LEXNT=$$FRE(LEXS) Q:LEXNT'>0
"RTN","LEXNDX6",34,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",35,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",36,0)
 S X=LEXE K ^TMP("LEXTKN",$J) N DICNT,DIKDASV,DIKSAVE
"RTN","LEXNDX6",37,0)
 Q
"RTN","LEXNDX6",38,0)
KSF ; Kill String Frequency
"RTN","LEXNDX6",39,0)
 Q:'$L($G(X))  N LEXIDX,LEXE
"RTN","LEXNDX6",40,0)
 S LEXIDX="",LEXE=X,X=$$UP^XLFSTR(X) D PTX^LEXTOKN
"RTN","LEXNDX6",41,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX6",42,0)
 . N LEXNT,LEXT,LEXW,LEXI,LEXP,LEXS S LEXI=""
"RTN","LEXNDX6",43,0)
 . S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXNDX6",44,0)
 . . S LEXW=$O(^TMP("LEXTKN",$J,LEXI,""))
"RTN","LEXNDX6",45,0)
 . . I $L(LEXW) F LEXP=1:1:$L(LEXW) D
"RTN","LEXNDX6",46,0)
 . . . S LEXS=$E(LEXW,1,LEXP),LEXT=0
"RTN","LEXNDX6",47,0)
 . . . I $D(^LEX(757.01,"ASL",LEXS)) D
"RTN","LEXNDX6",48,0)
 . . . . S LEXT=$O(^LEX(757.01,"ASL",LEXS,0))
"RTN","LEXNDX6",49,0)
 . . . S LEXNT=LEXT-1
"RTN","LEXNDX6",50,0)
 . . . I LEXNT'>0 K ^LEX(757.01,"ASL",LEXS) Q
"RTN","LEXNDX6",51,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",52,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",53,0)
 . . . 
"RTN","LEXNDX6",54,0)
 S X=LEXE K ^TMP("LEXTKN",$J)
"RTN","LEXNDX6",55,0)
 Q
"RTN","LEXNDX6",56,0)
FRE(X) ; Frequency Counter of String
"RTN","LEXNDX6",57,0)
 N LEXC,LEXTK,LEXTKN,LEXO,LEXT,LEXS,LEXP
"RTN","LEXNDX6",58,0)
 S (LEXC,LEXTK)=$$UP^XLFSTR($G(X)),LEXT=0  Q:'$L(LEXTK) 0
"RTN","LEXNDX6",59,0)
 S:$L(LEXTK)>1 LEXO=$E(LEXTK,1,($L(LEXTK)-1))_$C(($A($E(LEXTK,$L(LEXTK)))-1))_"~"
"RTN","LEXNDX6",60,0)
 S:$L(LEXTK)=1 LEXO=$C(($A(LEXTK)-1))_"~"
"RTN","LEXNDX6",61,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXC))'=LEXC  D
"RTN","LEXNDX6",62,0)
 . N LEXM S LEXM=0 F  S LEXM=$O(^LEX(757.01,"AWRD",LEXO,LEXM)) Q:+LEXM'>0  D
"RTN","LEXNDX6",63,0)
 . . N LEXE S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AWRD",LEXO,LEXM,LEXE)) Q:+LEXE'>0  D
"RTN","LEXNDX6",64,0)
 . . . S LEXT=LEXT+1
"RTN","LEXNDX6",65,0)
 S X=LEXT
"RTN","LEXNDX6",66,0)
 Q X
"RTN","LEXNDX6",67,0)
 ;
"RTN","LEXNDX6",68,0)
SSUP ; Set Supplemental Words
"RTN","LEXNDX6",69,0)
 N LEXX,LEXDA1,LEXDA,LEXMC
"RTN","LEXNDX6",70,0)
 S LEXX=$G(X) Q:'$L(LEXX)  S LEXDA1=+($G(DA(1)))
"RTN","LEXNDX6",71,0)
 Q:LEXDA1=0  S LEXDA=+($G(DA)) Q:LEXDA=0
"RTN","LEXNDX6",72,0)
 S LEXMC=$$MC(LEXDA1) Q:LEXMC=0
"RTN","LEXNDX6",73,0)
 S ^LEX(757.01,"AWRD",$$UP^XLFSTR(LEXX),LEXDA1,LEXMC,LEXDA)=""
"RTN","LEXNDX6",74,0)
 Q
"RTN","LEXNDX6",75,0)
KSUP ; Kill Supplemental Words
"RTN","LEXNDX6",76,0)
 N LEXX,LEXDA1,LEXDA,LEXMC
"RTN","LEXNDX6",77,0)
 S LEXX=$G(X) Q:'$L(LEXX)  S LEXDA1=+($G(DA(1))) Q:LEXDA1=0  S LEXDA=+($G(DA)) Q:LEXDA=0
"RTN","LEXNDX6",78,0)
 S LEXMC=$$MC(LEXDA1) Q:LEXMC=0
"RTN","LEXNDX6",79,0)
 K ^LEX(757.01,"AWRD",LEXX,LEXDA1,LEXMC,LEXDA)
"RTN","LEXNDX6",80,0)
 K ^LEX(757.01,"AWRD",$$UP^XLFSTR(LEXX),LEXDA1,LEXMC,LEXDA)
"RTN","LEXNDX6",81,0)
 Q
"RTN","LEXNDX6",82,0)
 ; 
"RTN","LEXNDX6",83,0)
 ; Miscellaneous
"RTN","LEXNDX6",84,0)
MC(X) ; Major Concept IEN
"RTN","LEXNDX6",85,0)
 N LEXX S LEXX=+($G(X)) Q:LEXX=0 0
"RTN","LEXNDX6",86,0)
 S LEXX=+($G(^LEX(757.01,LEXX,1))) Q:LEXX=0 0
"RTN","LEXNDX6",87,0)
 S LEXX=+($G(^LEX(757,LEXX,0))) Q:LEXX=0 0
"RTN","LEXNDX6",88,0)
 S X=LEXX Q X
"RTN","LEXNDX8")
0^15^B57045957
"RTN","LEXNDX8",1,0)
LEXNDX8 ;ISL/KER - Set/kill indexes 757.02 ;04/21/2014
"RTN","LEXNDX8",2,0)
 ;;2.0;LEXICON UTILITY;**25,73,80**;Sep 23, 1996;Build 1
"RTN","LEXNDX8",3,0)
 ;               
"RTN","LEXNDX8",4,0)
 ; Global Variables
"RTN","LEXNDX8",5,0)
 ;    None
"RTN","LEXNDX8",6,0)
 ;               
"RTN","LEXNDX8",7,0)
 ; External References
"RTN","LEXNDX8",8,0)
 ;    None
"RTN","LEXNDX8",9,0)
 ;               
"RTN","LEXNDX8",10,0)
  ; Set and Kill Activation History
"RTN","LEXNDX8",11,0)
 ;   File 757.02, field 1
"RTN","LEXNDX8",12,0)
SAHC ;     Set new value when Code is Edited
"RTN","LEXNDX8",13,0)
 ;          ^DD(757.02,1,1,D0,1) = D SAHC^LEXNDX8
"RTN","LEXNDX8",14,0)
 N LEXCOD,LEXCODX,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",15,0)
 S LEXCODX=$G(X) Q:'$L(LEXCODX)  S LEXIEN=+($G(DA)) Q:+LEXIEN'>0
"RTN","LEXNDX8",16,0)
 S LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3)) Q:LEXSYS'>0
"RTN","LEXNDX8",17,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",18,0)
 S LEXSYS=$E($G(^LEX(757.03,+LEXSYS,0)),1,3) Q:$L(LEXSYS)'=3
"RTN","LEXNDX8",19,0)
 I $D(^LEX(757.02,+LEXIEN,4,"B")) S LEXHIS=0 D  Q
"RTN","LEXNDX8",20,0)
 . F  S LEXHIS=$O(^LEX(757.02,+LEXIEN,4,LEXHIS)) Q:+LEXHIS=0  D
"RTN","LEXNDX8",21,0)
 . . N DA,X S DA=+LEXHIS,DA(1)=+LEXIEN D HDC
"RTN","LEXNDX8",22,0)
 . . S LEXCOD=LEXCODX Q:'$L($G(LEXCOD))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",23,0)
 . . Q:'$L($G(LEXSTA))  D SHIS
"RTN","LEXNDX8",24,0)
 Q
"RTN","LEXNDX8",25,0)
KAHC ;   Kill old value when Code is Edited
"RTN","LEXNDX8",26,0)
 ;   ^DD(757.02,1,1,D0,2) = D KAHC^LEXNDX8
"RTN","LEXNDX8",27,0)
 N LEXCOD,LEXCODX,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",28,0)
 S LEXCODX=$G(X) Q:'$L(LEXCODX)  S LEXIEN=+($G(DA)) Q:+LEXIEN'>0
"RTN","LEXNDX8",29,0)
 S LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3)) Q:LEXSYS'>0
"RTN","LEXNDX8",30,0)
 S LEXSYS=$E($G(^LEX(757.03,+LEXSYS,0)),1,3) Q:$L(LEXSYS)'=3
"RTN","LEXNDX8",31,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",32,0)
 I $D(^LEX(757.02,+LEXIEN,4,"B")) S LEXHIS=0 D  Q
"RTN","LEXNDX8",33,0)
 . F  S LEXHIS=$O(^LEX(757.02,+LEXIEN,4,LEXHIS)) Q:+LEXHIS=0  D
"RTN","LEXNDX8",34,0)
 . . N DA,X S DA=+LEXHIS,DA(1)=+LEXIEN D HDC
"RTN","LEXNDX8",35,0)
 . . S LEXCOD=LEXCODX Q:'$L($G(LEXCOD))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",36,0)
 . . Q:'$L($G(LEXSTA))  D KHIS
"RTN","LEXNDX8",37,0)
 Q
"RTN","LEXNDX8",38,0)
 ;                    
"RTN","LEXNDX8",39,0)
 ;   File 757.28, field .01
"RTN","LEXNDX8",40,0)
SAHD ;   Set new value when Effective Date is Edited
"RTN","LEXNDX8",41,0)
 ;   ^DD(757.28,.01,1,D0,1) = D SAHD^LEXNDX8
"RTN","LEXNDX8",42,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",43,0)
 D HDC Q:'$L($G(LEXCOD))
"RTN","LEXNDX8",44,0)
 Q:'$L($G(LEXSTA))  S LEXEFF=+($G(X)) Q:+LEXEFF=0  D SHIS
"RTN","LEXNDX8",45,0)
 Q
"RTN","LEXNDX8",46,0)
KAHD ;   Kill old value when Effective Date is Edited
"RTN","LEXNDX8",47,0)
 ;   ^DD(757.28,.01,1,D0,2) = D KAHD^LEXIDX8
"RTN","LEXNDX8",48,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",49,0)
 D HDC Q:'$L($G(LEXCOD))
"RTN","LEXNDX8",50,0)
 Q:'$L($G(LEXSTA))  S LEXEFF=+($G(X)) Q:+LEXEFF=0  D KHIS
"RTN","LEXNDX8",51,0)
 Q
"RTN","LEXNDX8",52,0)
 ;                    
"RTN","LEXNDX8",53,0)
 ;   File 757.28 field 1
"RTN","LEXNDX8",54,0)
SAHS ;   Set new value when Status is Edited
"RTN","LEXNDX8",55,0)
 ;   ^DD(757.28,1,1,D0,1) = D SAHS^LEXNDX8
"RTN","LEXNDX8",56,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",57,0)
 D HDC Q:'$L($G(LEXCOD))  Q:+LEXEFF=0
"RTN","LEXNDX8",58,0)
 S LEXSTA=$G(X) Q:'$L(LEXSTA)  D SHIS
"RTN","LEXNDX8",59,0)
 Q
"RTN","LEXNDX8",60,0)
KAHS ;   Kill old value when Status is Edited
"RTN","LEXNDX8",61,0)
 ;   ^DD(757.28,1,1,D0,2) = D KAHS^LEXIDX8
"RTN","LEXNDX8",62,0)
 N LEXCOD,LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXEFF,LEXHIS,LEXIEN,LEXNOD,LEXSTA,LEXSYS,LEXPRF
"RTN","LEXNDX8",63,0)
 D HDC Q:'$L($G(LEXCOD))  Q:+LEXEFF=0
"RTN","LEXNDX8",64,0)
 S LEXSTA=$G(X)  Q:'$L(LEXSTA)  D KHIS
"RTN","LEXNDX8",65,0)
 Q
"RTN","LEXNDX8",66,0)
 ;                    
"RTN","LEXNDX8",67,0)
HDC ;  Set Common Variables (Code, Status and Effective Date)
"RTN","LEXNDX8",68,0)
 S (LEXDDT,LEXDSYS,LEXDF,LEXDSTA,LEXCOD,LEXSTA,LEXEFF)=""  Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",69,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",70,0)
 S LEXCOD=$P($G(^LEX(757.02,+($G(DA(1))),0)),"^",2)
"RTN","LEXNDX8",71,0)
 S LEXPRF=+($P($G(^LEX(757.02,+($G(DA(1))),0)),"^",5))
"RTN","LEXNDX8",72,0)
 S LEXNOD=$G(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",73,0)
 S LEXSTA=$P(LEXNOD,"^",2),LEXEFF=$P(LEXNOD,"^",1)
"RTN","LEXNDX8",74,0)
 S LEXSTA=$S(LEXSTA="A":1,LEXSTA="I":0,1:LEXSTA)
"RTN","LEXNDX8",75,0)
 S LEXDSYS=+($P($G(^LEX(757.02,+($G(DA(1))),0)),"^",3))
"RTN","LEXNDX8",76,0)
 S LEXDSYS=$E($G(^LEX(757.03,+LEXDSYS,0)),1,3)
"RTN","LEXNDX8",77,0)
 S LEXDSTA=$$DF(+($G(DA(1))),$G(LEXCOD))
"RTN","LEXNDX8",78,0)
 S LEXDSTA=$S(+LEXDSTA'>0:1,1:0)
"RTN","LEXNDX8",79,0)
 S LEXDDT=$$DDTBR(LEXDSYS,LEXDSTA)
"RTN","LEXNDX8",80,0)
 Q
"RTN","LEXNDX8",81,0)
DHDC ;  Set Default Common Variables (Code, Status and Effective Date)
"RTN","LEXNDX8",82,0)
 ;    0 node
"RTN","LEXNDX8",83,0)
 S LEXCOD=$G(LEXCODX),LEXSYS=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",3))
"RTN","LEXNDX8",84,0)
 S (LEXSYS,LEXDSYS)=$E($G(^LEX(757.03,+LEXSYS,0)),1,3)
"RTN","LEXNDX8",85,0)
 S LEXPRF=+($P($G(^LEX(757.02,+LEXIEN,0)),"^",5))
"RTN","LEXNDX8",86,0)
 S LEXSTA=$$DF(+($G(DA(1))),$G(LEXCOD))
"RTN","LEXNDX8",87,0)
 S (LEXSTA,LEXDSTA)=$S(+LEXSTA'>0:1,1:0)
"RTN","LEXNDX8",88,0)
 S LEXEFF=$$DDTBR(LEXSYS,LEXSTA)
"RTN","LEXNDX8",89,0)
 S LEXDDT=$$DDTBR(LEXDSYS,LEXDSTA)
"RTN","LEXNDX8",90,0)
 Q
"RTN","LEXNDX8",91,0)
SHIS ;  Set Index 
"RTN","LEXNDX8",92,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",93,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF)) 
"RTN","LEXNDX8",94,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",95,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",96,0)
 K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXDDT,DA(1),0)
"RTN","LEXNDX8",97,0)
 S ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,DA(1),DA)=""
"RTN","LEXNDX8",98,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",99,0)
 . K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,DA(1),0)
"RTN","LEXNDX8",100,0)
 . S ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,DA(1),DA)=""
"RTN","LEXNDX8",101,0)
 Q
"RTN","LEXNDX8",102,0)
SDHIS ;  Set Default Index 
"RTN","LEXNDX8",103,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",104,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",105,0)
 Q:+($G(LEXIEN))'>0  Q:'$D(^LEX(757.02,+($G(LEXIEN)),0))
"RTN","LEXNDX8",106,0)
 S ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,+LEXIEN,0)=""
"RTN","LEXNDX8",107,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",108,0)
 . S ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,+LEXIEN,0)=""
"RTN","LEXNDX8",109,0)
 Q
"RTN","LEXNDX8",110,0)
KHIS ;  Kill Index
"RTN","LEXNDX8",111,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",112,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",113,0)
 Q:+($G(DA(1)))'>0  Q:+($G(DA))'>0
"RTN","LEXNDX8",114,0)
 Q:'$D(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0))
"RTN","LEXNDX8",115,0)
 K ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,DA(1),DA)
"RTN","LEXNDX8",116,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",117,0)
 . K:$L($G(LEXDDT)) ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,DA(1),0)
"RTN","LEXNDX8",118,0)
 . K ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXEFF,DA(1),DA)
"RTN","LEXNDX8",119,0)
 Q
"RTN","LEXNDX8",120,0)
KDHIS ;  Kill Default Index
"RTN","LEXNDX8",121,0)
 ;  ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>,<history>)
"RTN","LEXNDX8",122,0)
 Q:'$L($G(LEXCOD))  Q:'$L($G(LEXSTA))  Q:'$L($G(LEXEFF))
"RTN","LEXNDX8",123,0)
 Q:+($G(LEXIEN))'>0  Q:'$D(^LEX(757.02,+($G(LEXIEN)),0))
"RTN","LEXNDX8",124,0)
 K ^LEX(757.02,"ACT",(LEXCOD_" "),LEXSTA,LEXEFF,+LEXIEN,0)
"RTN","LEXNDX8",125,0)
 I +($G(LEXPRF))>0 D
"RTN","LEXNDX8",126,0)
 . K ^LEX(757.02,"ACT",(LEXCOD_" "),(+LEXSTA+2),LEXDDT,+LEXIEN,0)
"RTN","LEXNDX8",127,0)
 Q
"RTN","LEXNDX8",128,0)
S10 ;  Set ICD-10 Index 
"RTN","LEXNDX8",129,0)
 ;  ^LEX(757.02,"ADX",<dx code>,<date>,<status>,<ien>,<history>)
"RTN","LEXNDX8",130,0)
 ;  ^LEX(757.02,"APR",<pr code>,<date>,<status>,<ien>,<history>)
"RTN","LEXNDX8",131,0)
 N LEXEF,LEXIX,LEXND,LEXSB,LEXSO,LEXSR,LEXST
"RTN","LEXNDX8",132,0)
 S LEXND=$G(^LEX(757.02,+($G(DA(1))),0)) Q:'$L(LEXND)
"RTN","LEXNDX8",133,0)
 S LEXSR=$P(LEXND,"^",3) Q:+LEXSR'>0
"RTN","LEXNDX8",134,0)
 S LEXSB=$E($G(^LEX(757.03,+LEXSR,0)),1,3) Q:"^10D^10P^"'[("^"_LEXSB_"^")
"RTN","LEXNDX8",135,0)
 S LEXIX=$S(LEXSB="10D":"ADX",LEXSB="10P":"APR",1:"") Q:'$L(LEXIX)
"RTN","LEXNDX8",136,0)
 S LEXSO=$P(LEXND,"^",2) Q:'$L(LEXSO)
"RTN","LEXNDX8",137,0)
 S LEXND=$G(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0)) Q:'$L(LEXND)
"RTN","LEXNDX8",138,0)
 S LEXEF=$P(LEXND,"^",1) Q:LEXEF'?7N
"RTN","LEXNDX8",139,0)
 S LEXST=$P(LEXND,"^",2) Q:LEXST'?1N
"RTN","LEXNDX8",140,0)
 S ^LEX(757.02,LEXIX,(LEXSO_" "),LEXEF,LEXST,+($G(DA(1))),+($G(DA)))=""
"RTN","LEXNDX8",141,0)
 Q
"RTN","LEXNDX8",142,0)
K10 ;  Kill ICD-10 Index
"RTN","LEXNDX8",143,0)
 ;  ^LEX(757.02,"ADX",<dx code>,<date>,<status>,<ien>,<history>)
"RTN","LEXNDX8",144,0)
 ;  ^LEX(757.02,"APR",<pr code>,<date>,<status>,<ien>,<history>)
"RTN","LEXNDX8",145,0)
 N LEXEF,LEXIX,LEXND,LEXSB,LEXSO,LEXSR,LEXST
"RTN","LEXNDX8",146,0)
 S LEXND=$G(^LEX(757.02,+($G(DA(1))),0)) Q:'$L(LEXND)
"RTN","LEXNDX8",147,0)
 S LEXSR=$P(LEXND,"^",3) Q:+LEXSR'>0
"RTN","LEXNDX8",148,0)
 S LEXSB=$E($G(^LEX(757.03,+LEXSR,0)),1,3) Q:"^10D^10P^"'[("^"_LEXSB_"^")
"RTN","LEXNDX8",149,0)
 S LEXIX=$S(LEXSB="10D":"ADX",LEXSB="10P":"APR",1:"") Q:'$L(LEXIX)
"RTN","LEXNDX8",150,0)
 S LEXSO=$P(LEXND,"^",2) Q:'$L(LEXSO)
"RTN","LEXNDX8",151,0)
 S LEXND=$G(^LEX(757.02,+($G(DA(1))),4,+($G(DA)),0)) Q:'$L(LEXND)
"RTN","LEXNDX8",152,0)
 S LEXEF=$P(LEXND,"^",1) Q:LEXEF'?7N
"RTN","LEXNDX8",153,0)
 S LEXST=$P(LEXND,"^",2) Q:LEXST'?1N
"RTN","LEXNDX8",154,0)
 K ^LEX(757.02,LEXIX,(LEXSO_" "),LEXEF,LEXST,+($G(DA(1))),+($G(DA)))
"RTN","LEXNDX8",155,0)
 Q
"RTN","LEXNDX8",156,0)
DF(X,CODE) ; Default Status
"RTN","LEXNDX8",157,0)
 N LEXI,LEXDF,LEXNF,LEXL,LEXEFF,LEXC,LEXO,LEXND,LEXSRC
"RTN","LEXNDX8",158,0)
 S LEXI=+($G(X)) Q:+LEXI'>0 ""
"RTN","LEXNDX8",159,0)
 S LEXND=$G(^LEX(757.02,+LEXI,0)),LEXSRC=$P(LEXND,"^",3)
"RTN","LEXNDX8",160,0)
 S LEXEFF=$O(^LEX(757.02,+LEXI,4,"B"," "),-1)
"RTN","LEXNDX8",161,0)
 S LEXL=$O(^LEX(757.02,+LEXI,4,"B",+LEXEFF,0))
"RTN","LEXNDX8",162,0)
 S LEXL=$P($G(^LEX(757.02,+LEXI,4,+LEXL,0)),"^",2)
"RTN","LEXNDX8",163,0)
 S LEXC=$G(CODE) S:'$L(LEXC) LEXC=$P($G(^LEX(757.02,LEXI,0)),U,2)
"RTN","LEXNDX8",164,0)
 S LEXDF='+$$STATCHK^LEXSRC2(LEXC,,,LEXSRC)
"RTN","LEXNDX8",165,0)
 S LEXO=$P($G(^LEX(757.02,LEXI,0)),U,2)
"RTN","LEXNDX8",166,0)
 S LEXNF=$S(+LEXL=1:"",1:LEXDF)
"RTN","LEXNDX8",167,0)
 S X=LEXNF
"RTN","LEXNDX8",168,0)
 Q X
"RTN","LEXNDX8",169,0)
SAUPD ; Set Update Date
"RTN","LEXNDX8",170,0)
 N LEXSRC,LEXSAB,LEXDT,LEXIEN,LEXHIS
"RTN","LEXNDX8",171,0)
 S LEXDT=$G(X) Q:'$L(LEXDT)  Q:LEXDT'?7N  Q:LEXDT'>2770101
"RTN","LEXNDX8",172,0)
 S LEXHIS=+($G(DA)) Q:+LEXHIS'>0
"RTN","LEXNDX8",173,0)
 S LEXIEN=+($G(DA(1))) Q:+LEXIEN'>0
"RTN","LEXNDX8",174,0)
 S LEXSRC=$P($G(^LEX(757.02,+LEXIEN,0)),"^",3) Q:LEXSRC'>0
"RTN","LEXNDX8",175,0)
 S LEXSAB=$E($P($G(^LEX(757.03,+LEXSRC,0)),"^",1),1,3) Q:$L(LEXSAB)'=3
"RTN","LEXNDX8",176,0)
 S ^LEX(757.02,"AUPD",LEXSAB,LEXDT,LEXIEN)=""
"RTN","LEXNDX8",177,0)
 Q
"RTN","LEXNDX8",178,0)
KAUPD ; Kill Update Date
"RTN","LEXNDX8",179,0)
 N LEXSRC,LEXSAB,LEXDT,LEXIEN,LEXHIS
"RTN","LEXNDX8",180,0)
 S LEXDT=$G(X) Q:'$L(LEXDT)  Q:LEXDT'?7N  Q:LEXDT'>2770101
"RTN","LEXNDX8",181,0)
 S LEXHIS=+($G(DA)) Q:+LEXHIS'>0
"RTN","LEXNDX8",182,0)
 S LEXIEN=+($G(DA(1))) Q:+LEXIEN'>0
"RTN","LEXNDX8",183,0)
 S LEXSRC=$P($G(^LEX(757.02,+LEXIEN,0)),"^",3) Q:LEXSRC'>0
"RTN","LEXNDX8",184,0)
 S LEXSAB=$E($P($G(^LEX(757.03,+LEXSRC,0)),"^",1),1,3) Q:$L(LEXSAB)'=3
"RTN","LEXNDX8",185,0)
 K ^LEX(757.02,"AUPD",LEXSAB,LEXDT,LEXIEN)
"RTN","LEXNDX8",186,0)
 Q
"RTN","LEXNDX8",187,0)
DDTBR(SYS,STA) ; Default Date Business Rules
"RTN","LEXNDX8",188,0)
 ; Input:
"RTN","LEXNDX8",189,0)
 ;   SYS - System
"RTN","LEXNDX8",190,0)
 ;   STA - Status
"RTN","LEXNDX8",191,0)
 ; Output:
"RTN","LEXNDX8",192,0)
 ;   If Status = 1 (Active)
"RTN","LEXNDX8",193,0)
 ;      If SYS = ICD/ICP  use October 1, 1978      2781001
"RTN","LEXNDX8",194,0)
 ;      If SYS = CPT/CPC  use January 1, 1989      2890101
"RTN","LEXNDX8",195,0)
 ;      If SYS is not listed above, use            2960923
"RTN","LEXNDX8",196,0)
 ;   If Status = 0 (Inactive)
"RTN","LEXNDX8",197,0)
 ;      If SYS = ICD/ICP  use October 2, 1978      2791001
"RTN","LEXNDX8",198,0)
 ;      If SYS = CPT/CPC  use January 2, 1989      2900101
"RTN","LEXNDX8",199,0)
 ;      If SYS is not listed above, use            2960924
"RTN","LEXNDX8",200,0)
 N LEXSTA,LEXSYS,LEXDT
"RTN","LEXNDX8",201,0)
 S LEXSTA=+($G(STA)),LEXSYS=$G(SYS),LEXDT=0
"RTN","LEXNDX8",202,0)
 S:$L(LEXSYS)=3&("^ICD^ICP^CPT^CPC^"'[LEXSYS) LEXSTA=1
"RTN","LEXNDX8",203,0)
 ;   No System, use Lexicon Release Date
"RTN","LEXNDX8",204,0)
 I $L(LEXSYS)'=3 D  Q LEXDT
"RTN","LEXNDX8",205,0)
 . S:+LEXSTA>0 LEXDT=2960923 S:+LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",206,0)
 ;   System is ICD, use 2781001/2791001
"RTN","LEXNDX8",207,0)
 I LEXSYS="ICD"!(LEXSYS="ICP") D  Q LEXDT
"RTN","LEXNDX8",208,0)
 . S:LEXSTA>0 LEXDT=2781001 S:LEXSTA'>0 LEXDT=2791001
"RTN","LEXNDX8",209,0)
 ;   System is CPT, use 2890101/2900101
"RTN","LEXNDX8",210,0)
 I LEXSYS="CPT"!(LEXSYS="CPC") D  Q LEXDT
"RTN","LEXNDX8",211,0)
 . S:LEXSTA>0 LEXDT=2890101 S:LEXSTA'>0 LEXDT=2900101
"RTN","LEXNDX8",212,0)
 ;   System is neither ICD or CPT, use 2960923/2970923
"RTN","LEXNDX8",213,0)
 I "^ICD^ICP^CPT^CPC^"'[LEXSYS D  Q LEXDT
"RTN","LEXNDX8",214,0)
 . S:LEXSTA>0 LEXDT=2960923 S:LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",215,0)
 ;   None of the Above
"RTN","LEXNDX8",216,0)
 S:+LEXSTA>0 LEXDT=2960923 S:+LEXSTA'>0 LEXDT=2970923
"RTN","LEXNDX8",217,0)
 Q LEXDT
"RTN","LEXPL")
1^60
"RTN","LEXPLEM")
1^48
"RTN","LEXPLIA")
1^47
"RTN","LEXPLUP")
1^61
"RTN","LEXPRNT")
0^144^B16064767
"RTN","LEXPRNT",1,0)
LEXPRNT ;ISL/KER - Print Utilities for the Lexicon ;04/21/2014
"RTN","LEXPRNT",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXPRNT",3,0)
 ;               
"RTN","LEXPRNT",4,0)
 ; Global Variables
"RTN","LEXPRNT",5,0)
 ;    ^TMP("XTLKHITS")    SACC 2.3.2.5.1
"RTN","LEXPRNT",6,0)
 ;               
"RTN","LEXPRNT",7,0)
 ; External References
"RTN","LEXPRNT",8,0)
 ;    None
"RTN","LEXPRNT",9,0)
 ;               
"RTN","LEXPRNT",10,0)
XTLK ; XTLK  Display format for MTLU 
"RTN","LEXPRNT",11,0)
 ; Uses   XTLKH, XTLKMULT, XTLKREF0, LEXSHOW
"RTN","LEXPRNT",12,0)
 N LEXIFN,LEXEXP,LEXCODE,LEXSOID
"RTN","LEXPRNT",13,0)
 S LEXIFN=0,LEXEXP=-1 S:'$D(LEXSHOW) LEXSHOW=""
"RTN","LEXPRNT",14,0)
 S:'$D(LEXSUB) LEXSUB="WRD"
"RTN","LEXPRNT",15,0)
 S (LEXEXP,LEXIFN)=+($P(XTLKREF0,",",2)) G:+LEXIFN'>0 XTQ
"RTN","LEXPRNT",16,0)
 D:XTLKMULT MULTI
"RTN","LEXPRNT",17,0)
 D:'XTLKMULT ONE
"RTN","LEXPRNT",18,0)
XTQ K LEXCODE,LEXSOID,LEXIFN,LEXEXP
"RTN","LEXPRNT",19,0)
 Q
"RTN","LEXPRNT",20,0)
MULTI ; Multiple entries on the selection list 
"RTN","LEXPRNT",21,0)
 N LEXNUM,LEXSTR,LEXDP,LEXCCS,LEXL,LEXP
"RTN","LEXPRNT",22,0)
 S LEXNUM=XTLKH,(LEXSTR,LEXDP,LEXCCS)="",LEXL=70,LEXP=7
"RTN","LEXPRNT",23,0)
 D COMMON
"RTN","LEXPRNT",24,0)
 W:LEXNUM>1 ! W:LEXNUM>1&(LEXNUM#5=1) !
"RTN","LEXPRNT",25,0)
 W $J(LEXNUM,4),":" W:$L(LEXSTR)<(LEXL+1) ?LEXP,LEXSTR
"RTN","LEXPRNT",26,0)
 D:$L(LEXSTR)>LEXL LONG
"RTN","LEXPRNT",27,0)
 W:LEXNUM#5=0&(+($G(LEXHLPF))=0) !
"RTN","LEXPRNT",28,0)
 W:LEXNUM#5'=0&(LEXNUM=+($G(^TMP("XTLKHITS",$J))))&(+($G(LEXHLPF))=0) !
"RTN","LEXPRNT",29,0)
 Q
"RTN","LEXPRNT",30,0)
ONE ; One entry on the selection list
"RTN","LEXPRNT",31,0)
 N LEXSTR,LEXDP,LEXCCS,LEXL,LEXP
"RTN","LEXPRNT",32,0)
 S (LEXSTR,LEXDP,LEXCCS)="",LEXL=75,LEXP=2
"RTN","LEXPRNT",33,0)
 D COMMON
"RTN","LEXPRNT",34,0)
 W:$L(LEXSTR)<(LEXL+1) ?LEXP,LEXSTR
"RTN","LEXPRNT",35,0)
 D:$L(LEXSTR)>LEXL LONG
"RTN","LEXPRNT",36,0)
 Q
"RTN","LEXPRNT",37,0)
COMMON ; Parse LEXSHOW for both MULTI and ONE
"RTN","LEXPRNT",38,0)
 S:LEXSUB="WRD" LEXSTR=^LEX(757.01,LEXEXP,0)
"RTN","LEXPRNT",39,0)
 S:LEXSUB'="WRD" LEXSTR=^LEX(757.01,+(@(DIC_LEXEXP_",0)")),0)
"RTN","LEXPRNT",40,0)
 S LEXDP=$S($D(^LEX(757.01,$S(LEXSUB="WRD":LEXEXP,1:+(@(DIC_LEXEXP_",0)"))),3)):" *",1:"")
"RTN","LEXPRNT",41,0)
 I LEXSUB'="WRD" S LEXEXP=+(@(DIC_LEXEXP_",0)"))
"RTN","LEXPRNT",42,0)
 I $D(LEXSHOW),LEXSHOW'="" F LEXSOID=1:1:$L(LEXSHOW,"/") D
"RTN","LEXPRNT",43,0)
 . S LEXCODE=$P(LEXSHOW,"/",LEXSOID) N @LEXCODE S @LEXCODE=""
"RTN","LEXPRNT",44,0)
 . S @LEXCODE=$S(LEXSUB="WRD":$$CODE(LEXIFN,LEXCODE),1:$$CODE(LEXEXP,LEXCODE))
"RTN","LEXPRNT",45,0)
 . I @LEXCODE'="" S LEXCCS=LEXCCS_" ("_@LEXCODE_")"
"RTN","LEXPRNT",46,0)
 S LEXSTR=LEXSTR_LEXDP_LEXCCS
"RTN","LEXPRNT",47,0)
 Q
"RTN","LEXPRNT",48,0)
LONG ; Handle a long string
"RTN","LEXPRNT",49,0)
 N LEXOK,LEXCHR,LEXPSN,LEXSTO,LEXREM,LEXLNN,LEXOLD S LEXLNN=0,LEXOLD=LEXSTR
"RTN","LEXPRNT",50,0)
 F  Q:$L(LEXSTR)<(LEXL+1)  D PARSE Q:$L(LEXSTR)<(LEXL+1)
"RTN","LEXPRNT",51,0)
 S LEXLNN=LEXLNN+1
"RTN","LEXPRNT",52,0)
 W:LEXLNN>1 ! W ?LEXP,LEXSTR
"RTN","LEXPRNT",53,0)
 Q
"RTN","LEXPRNT",54,0)
PARSE ; Parse a long string into screen length strings
"RTN","LEXPRNT",55,0)
 S LEXOK=0,LEXCHR=""
"RTN","LEXPRNT",56,0)
 F LEXPSN=LEXL:-1:0 Q:+LEXOK=1  D  Q:+LEXOK=1
"RTN","LEXPRNT",57,0)
 . I $E(LEXSTR,LEXPSN)=" " S LEXCHR=" ",LEXOK=1 Q
"RTN","LEXPRNT",58,0)
 . I $E(LEXSTR,LEXPSN)="," S LEXCHR=",",LEXOK=1 Q
"RTN","LEXPRNT",59,0)
 . I $E(LEXSTR,LEXPSN)="/" S LEXCHR="/",LEXOK=1 Q
"RTN","LEXPRNT",60,0)
 . I $E(LEXSTR,LEXPSN)="-" S LEXCHR="-",LEXOK=1 Q
"RTN","LEXPRNT",61,0)
 I LEXCHR=" " S LEXSTO=$E(LEXSTR,1,LEXPSN-1),LEXREM=$E(LEXSTR,LEXPSN+1,$L(LEXSTR))
"RTN","LEXPRNT",62,0)
 I LEXCHR="," S LEXSTO=$E(LEXSTR,1,LEXPSN),LEXREM=$E(LEXSTR,(LEXPSN+1),$L(LEXSTR)) S:$E(LEXREM,1)=" " LEXREM=$E(LEXREM,2,$L(LEXREM))
"RTN","LEXPRNT",63,0)
 I LEXCHR="/" S LEXSTO=$E(LEXSTR,1,LEXPSN),LEXREM=$E(LEXSTR,(LEXPSN+1),$L(LEXSTR)) S:$E(LEXREM,1)=" " LEXREM=$E(LEXREM,2,$L(LEXREM))
"RTN","LEXPRNT",64,0)
 I LEXCHR="-" S LEXSTO=$E(LEXSTR,1,LEXPSN),LEXREM=$E(LEXSTR,(LEXPSN+1),$L(LEXSTR)) S:$E(LEXREM,1)=" " LEXREM=$E(LEXREM,2,$L(LEXREM))
"RTN","LEXPRNT",65,0)
 S LEXSTR=LEXREM
"RTN","LEXPRNT",66,0)
 S LEXLNN=LEXLNN+1
"RTN","LEXPRNT",67,0)
 W:LEXLNN>1 ! W ?LEXP,LEXSTO
"RTN","LEXPRNT",68,0)
 Q
"RTN","LEXPRNT",69,0)
CODE(LEXEX,LEXSO) ; Returns codes (defined in XTLK^LEXPRNT) for a Term
"RTN","LEXPRNT",70,0)
 N LEXMC,LEXCREC,LEXI,LEXCID S (LEXI,LEXCID)="",LEXCREC=0
"RTN","LEXPRNT",71,0)
 I '$D(^LEX(757.01,LEXEX)) Q LEXCID
"RTN","LEXPRNT",72,0)
 S LEXMC=$P(^LEX(757.01,LEXEX,1),U,1)
"RTN","LEXPRNT",73,0)
 I LEXSUB="WRD" D
"RTN","LEXPRNT",74,0)
 . F  S LEXCREC=$O(^LEX(757.02,"AMC",LEXMC,LEXCREC)) Q:+LEXCREC=0  D
"RTN","LEXPRNT",75,0)
 . . I $D(^LEX(757.02,"ASRC",LEXSO,LEXCREC)) D
"RTN","LEXPRNT",76,0)
 . . . S LEXI=$P(^LEX(757.02,LEXCREC,0),U,2)
"RTN","LEXPRNT",77,0)
 . . . I LEXI'="NOCODE",LEXI'?1"U"2"0"4N,LEXCID'[LEXI D
"RTN","LEXPRNT",78,0)
 . . . . S LEXCID=LEXCID_"/"_LEXI
"RTN","LEXPRNT",79,0)
 I LEXSUB'="WRD" D
"RTN","LEXPRNT",80,0)
 . F  S LEXCREC=$O(^LEX(757.02,"B",LEXEX,LEXCREC)) Q:+LEXCREC=0  D
"RTN","LEXPRNT",81,0)
 . . I $D(^LEX(757.02,"ASRC",LEXSO,LEXCREC)) S LEXI=$P(^LEX(757.02,LEXCREC,0),U,2) I LEXI'="NOCODE",LEXI'?1"U"2"0"4N,LEXCID'[LEXI S LEXCID=LEXCID_"/"_LEXI
"RTN","LEXPRNT",82,0)
 S:LEXCID'="" LEXCID=LEXSO_" "_$E(LEXCID,2,999)
"RTN","LEXPRNT",83,0)
 K LEXCREC,LEXMC,LEXI
"RTN","LEXPRNT",84,0)
 S LEXEX=LEXCID Q LEXEX
"RTN","LEXQC")
0^3^B5018665
"RTN","LEXQC",1,0)
LEXQC ;ISL/KER - Query - Changes - Extract ;04/21/2014
"RTN","LEXQC",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQC",3,0)
 ;               
"RTN","LEXQC",4,0)
 ; Global Variables
"RTN","LEXQC",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQC",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQC",7,0)
 ;    ^ICPT(0)            ICR   4489
"RTN","LEXQC",8,0)
 ;    ^TMP("LEXQC")       SACC 2.3.2.5.1
"RTN","LEXQC",9,0)
 ;    ^TMP("LEXQCO")      SACC 2.3.2.5.1
"RTN","LEXQC",10,0)
 ;               
"RTN","LEXQC",11,0)
 ; External References
"RTN","LEXQC",12,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXQC",13,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQC",14,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXQC",15,0)
 ;               
"RTN","LEXQC",16,0)
EN ; Main Entry Point
"RTN","LEXQC",17,0)
 N LEXENV S LEXENV=$$EV^LEXQM Q:+LEXENV'>0
"RTN","LEXQC",18,0)
 K ^TMP("LEXQCO",$J),^TMP("LEXQC",$J)
"RTN","LEXQC",19,0)
 N LEXCDT,LEXEDT,LEXEXIT S LEXCDT=$$CSD^LEXQM Q:'$L(LEXCDT)
"RTN","LEXQC",20,0)
 Q:+($G(LEXEXIT))>0  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2)
"RTN","LEXQC",21,0)
 Q:LEXCDT'?7N  D TASK
"RTN","LEXQC",22,0)
 Q
"RTN","LEXQC",23,0)
TASK ; Task Re-indexing
"RTN","LEXQC",24,0)
 N X,Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTQUEUED,ZTREQ
"RTN","LEXQC",25,0)
 S LEXCDT=+($G(LEXCDT)) Q:LEXCDT'?7N  S LEXEDT=$G(LEXEDT) Q:'$L(LEXEDT)
"RTN","LEXQC",26,0)
 S ZTRTN="SEARCH^LEXQC",ZTSAVE("LEXCDT")="",ZTIO="",ZTDTH=$H
"RTN","LEXQC",27,0)
 S ZTDESC="Search for CSV Changes on "_LEXEDT
"RTN","LEXQC",28,0)
 D @ZTRTN D HOME^%ZIS S X=+($G(ZTSK))
"RTN","LEXQC",29,0)
 W:+X>0 !!,"   A search for CSV changes on ",LEXEDT
"RTN","LEXQC",30,0)
 W:+X>0 " has been queued (task ",+X,")",!
"RTN","LEXQC",31,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXQC",32,0)
 Q
"RTN","LEXQC",33,0)
SEARCH ; Search for CSV changes
"RTN","LEXQC",34,0)
 S:$D(ZTQUEUED) ZTREQ="@" S LEXCDT=$G(LEXCDT) Q:LEXCDT'?7N
"RTN","LEXQC",35,0)
 N LEXBDT,LEXADT,LEXRT,LEXQTOT,LEXQLEN,LEXQSTR
"RTN","LEXQC",36,0)
 S LEXBDT=$$FMADD^XLFDT(LEXCDT,-1),LEXADT=$$FMADD^XLFDT(DT,+1)
"RTN","LEXQC",37,0)
 Q:LEXBDT'?7N  Q:LEXADT'?7N  K ^TMP("LEXQC",$J) W !!,"   "
"RTN","LEXQC",38,0)
 S LEXQTOT=$P($G(^ICPT(0)),"^",4)
"RTN","LEXQC",39,0)
 S LEXRT=$$ROOT^ICDEX(80) S LEXQTOT=LEXQTOT+$P($G(@(LEXRT_"0)")),"^",4)
"RTN","LEXQC",40,0)
 S LEXRT=$$ROOT^ICDEX(80.1) S LEXQTOT=LEXQTOT+$P($G(@(LEXRT_"0)")),"^",4)
"RTN","LEXQC",41,0)
 S LEXQTOT=LEXQTOT+$P($G(^DIC(81.3,0)),"^",4)
"RTN","LEXQC",42,0)
 S LEXQLEN=68,LEXQSTR=+(LEXQTOT\LEXQLEN) S:LEXQSTR=0 LEXQSTR=1
"RTN","LEXQC",43,0)
 D D09^LEXQC3,P09^LEXQC3,D10^LEXQC3,P10^LEXQC3,CPT^LEXQC4,MOD^LEXQC4
"RTN","LEXQC",44,0)
 D EN^LEXQC2 D:$D(^TMP("LEXQCO",$J)) DSP^LEXQO("LEXQCO")
"RTN","LEXQC",45,0)
 Q
"RTN","LEXQC2")
0^4^B13016948
"RTN","LEXQC2",1,0)
LEXQC2 ;ISL/KER - Query - Changes - Save ;04/21/2014
"RTN","LEXQC2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQC2",3,0)
 ;               
"RTN","LEXQC2",4,0)
 ; Global Variables
"RTN","LEXQC2",5,0)
 ;    ^TMP("LEXQC")       SACC 2.3.2.5.1
"RTN","LEXQC2",6,0)
 ;    ^TMP("LEXQCO")      SACC 2.3.2.5.1
"RTN","LEXQC2",7,0)
 ;               
"RTN","LEXQC2",8,0)
 ; External References
"RTN","LEXQC2",9,0)
 ;    None
"RTN","LEXQC2",10,0)
 ;               
"RTN","LEXQC2",11,0)
 ; Local Variables NEWed in LEXQC
"RTN","LEXQC2",12,0)
 ;    LEXCDT              Versioning Date
"RTN","LEXQC2",13,0)
 ;               
"RTN","LEXQC2",14,0)
EN ; Code Set Changes Main Entry Point
"RTN","LEXQC2",15,0)
 Q:'$D(^TMP("LEXQC",$J))  N LEXTC S LEXTC=$$TC Q:+LEXTC'>0
"RTN","LEXQC2",16,0)
 Q:$G(LEXCDT)'?7N  N LEXSID,LEXT S LEXT=" "_LEXTC_" Code Set change"
"RTN","LEXQC2",17,0)
 S:+LEXTC>1!(LEXTC<1) LEXT=LEXT_"s"
"RTN","LEXQC2",18,0)
 S LEXT=LEXT_" found for "_$$SD^LEXQM($G(LEXCDT)) D BL,TL(LEXT)
"RTN","LEXQC2",19,0)
 F LEXSID="ICD","ICC","ICP","10D","10P","CPT","CPC","MOD","RAN" D SRC
"RTN","LEXQC2",20,0)
 Q
"RTN","LEXQC2",21,0)
SRC ;   By Source - ICD/ICC/ICP/10D/10P/CPT/CPC/MOD/RAN
"RTN","LEXQC2",22,0)
 Q:"^ICD^ICC^10D^10P^ICP^CPT^CPC^MOD^RAN^"'[("^"_$G(LEXSID)_"^")
"RTN","LEXQC2",23,0)
 Q:'$D(^TMP("LEXQC",$J,LEXSID))  N LEXCHG S LEXCHG=""
"RTN","LEXQC2",24,0)
 F  S LEXCHG=$O(^TMP("LEXQC",$J,LEXSID,LEXCHG)) Q:'$L(LEXCHG)  D CHG
"RTN","LEXQC2",25,0)
 Q
"RTN","LEXQC2",26,0)
CHG ;   By Change - ACT/INA/REV/REU/REA
"RTN","LEXQC2",27,0)
 Q:"^ICD^ICP^10D^10P^CPT^CPC^MOD^RAN^"'[("^"_$G(LEXSID)_"^")
"RTN","LEXQC2",28,0)
 Q:'$L($G(LEXCHG))  N LEXCNAM,LEXSCT,LEXSNAM S LEXSNAM=""
"RTN","LEXQC2",29,0)
 S LEXSNAM=$$NAM(LEXSID) Q:'$L($G(LEXSNAM))  S LEXCNAM=$$CHT(LEXCHG)
"RTN","LEXQC2",30,0)
 Q:'$L(LEXCNAM)  S LEXSCT=+($G(^TMP("LEXQC",$J,LEXSID,LEXCHG,0)))
"RTN","LEXQC2",31,0)
 Q:LEXSCT'>0  S:LEXSCT>1 LEXSNAM=LEXSNAM_"s" S LEXT=LEXSNAM_" "_LEXCNAM
"RTN","LEXQC2",32,0)
 S LEXT=LEXT_$J(" ",(67-$L(LEXT)))_$J(LEXSCT,5) D BL,TL(("   "_LEXT))
"RTN","LEXQC2",33,0)
 D LST
"RTN","LEXQC2",34,0)
 Q
"RTN","LEXQC2",35,0)
LST ;   List Codes
"RTN","LEXQC2",36,0)
 Q:'$L($G(LEXSID))  Q:'$L($G(LEXCHG))
"RTN","LEXQC2",37,0)
 Q:'$D(^TMP("LEXQC",$J,LEXSID,LEXCHG,1))
"RTN","LEXQC2",38,0)
 N LEXS,LEXSC,LEXSO,LEXSOE,LEXLC,LEXSTR,LEXMAX,LEXLEN
"RTN","LEXQC2",39,0)
 S LEXLEN=8 S:LEXSID="10D"!(LEXSID="10P") LEXLEN=10
"RTN","LEXQC2",40,0)
 S (LEXLC,LEXSC)=0,(LEXS,LEXSTR)="",LEXMAX=10 S:LEXLEN=10 LEXMAX=8
"RTN","LEXQC2",41,0)
 F  S LEXS=$O(^TMP("LEXQC",$J,LEXSID,LEXCHG,1,LEXS))  Q:'$L(LEXS)  D
"RTN","LEXQC2",42,0)
 . N LEXN S LEXN=$G(^TMP("LEXQC",$J,LEXSID,LEXCHG,1,LEXS))
"RTN","LEXQC2",43,0)
 . S LEXSO=$$TM^LEXQM($P(LEXN,"^",2)) Q:'$L(LEXSO)
"RTN","LEXQC2",44,0)
 . S LEXSOE=$$FM(LEXSO,LEXLEN) S LEXSC=LEXSC+1
"RTN","LEXQC2",45,0)
 . I LEXSC<LEXMAX S LEXSTR=LEXSTR_LEXSOE Q
"RTN","LEXQC2",46,0)
 . I LEXSC'<LEXMAX D  Q
"RTN","LEXQC2",47,0)
 . . S LEXSTR=$$TM^LEXQM(LEXSTR)
"RTN","LEXQC2",48,0)
 . . S LEXLC=+LEXLC+1 D:LEXLC=1 BL D TL(("      "_LEXSTR))
"RTN","LEXQC2",49,0)
 . . S LEXSC=1,LEXSTR=LEXSOE Q
"RTN","LEXQC2",50,0)
 S LEXSTR=$$TM^LEXQM(LEXSTR)
"RTN","LEXQC2",51,0)
 I $L(LEXSTR) S LEXLC=+LEXLC+1 D:LEXLC=1 BL D TL(("      "_LEXSTR))
"RTN","LEXQC2",52,0)
 Q
"RTN","LEXQC2",53,0)
 ;
"RTN","LEXQC2",54,0)
 ; Miscellaneous
"RTN","LEXQC2",55,0)
FM(X,Y) ;   Format
"RTN","LEXQC2",56,0)
 S X=$G(X),Y=+($G(Y)) Q:+Y'>0 X  S X=X_$J(" ",(Y-$L(X)))
"RTN","LEXQC2",57,0)
 Q X
"RTN","LEXQC2",58,0)
BL ;   Blank Line
"RTN","LEXQC2",59,0)
 D TL(" ") Q
"RTN","LEXQC2",60,0)
TL(X) ;   Text Line
"RTN","LEXQC2",61,0)
 N LEXI S LEXI=+($O(^TMP("LEXQCO",$J," "),-1))+1
"RTN","LEXQC2",62,0)
 S ^TMP("LEXQCO",$J,LEXI)=$G(X),^TMP("LEXQCO",$J,0)=LEXI
"RTN","LEXQC2",63,0)
 Q
"RTN","LEXQC2",64,0)
TC(X) ;   Total Changes Found
"RTN","LEXQC2",65,0)
 N LEXNN,LEXNC,LEXT S LEXT=0 S LEXNN="^TMP(""LEXQC"","_$J_")"
"RTN","LEXQC2",66,0)
 S LEXNC="^TMP(""LEXQC"","_$J_","
"RTN","LEXQC2",67,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEXQC2",68,0)
 . I LEXNN[",0)" S LEXT=LEXT+($G(@LEXNN))
"RTN","LEXQC2",69,0)
 S X=LEXT
"RTN","LEXQC2",70,0)
 Q X
"RTN","LEXQC2",71,0)
SH ;   Show Temp Global
"RTN","LEXQC2",72,0)
 N NN,NC W !! S NN="^TMP(""LEXQC"","_$J_")",NC="^TMP(""LEXQC"","_$J_","
"RTN","LEXQC2",73,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","LEXQC2",74,0)
 Q
"RTN","LEXQC2",75,0)
NAM(X) ; Source Name
"RTN","LEXQC2",76,0)
 Q:$G(X)="ICD" "ICD-9 Diagnosis Code"
"RTN","LEXQC2",77,0)
 Q:$G(X)="ICP" "ICD-9 Procedure Code"
"RTN","LEXQC2",78,0)
 Q:$G(X)="ICC" "ICD Complication/Comorbidity (CC) Flag"
"RTN","LEXQC2",79,0)
 Q:$G(X)="10D" "ICD-10 Diagnosis Code"
"RTN","LEXQC2",80,0)
 Q:$G(X)="10P" "ICD-10 Procedure Code"
"RTN","LEXQC2",81,0)
 Q:$G(X)="CPT" "CPT-4 Procedure Code"
"RTN","LEXQC2",82,0)
 Q:$G(X)="CPC" "HCPCS Procedure Code"
"RTN","LEXQC2",83,0)
 Q:$G(X)="MOD" "CPT Modifier Code"
"RTN","LEXQC2",84,0)
 Q:$G(X)="RAN" "CPT Modifier Range"
"RTN","LEXQC2",85,0)
 Q ""
"RTN","LEXQC2",86,0)
CHT(X) ; Change Text
"RTN","LEXQC2",87,0)
 Q:$G(X)="ACT" "Added"
"RTN","LEXQC2",88,0)
 Q:$G(X)="INA" "Inactivated"
"RTN","LEXQC2",89,0)
 Q:$G(X)="REV" "Revised"
"RTN","LEXQC2",90,0)
 Q:$G(X)="UPD" "Updated"
"RTN","LEXQC2",91,0)
 Q:$G(X)="REU" "Re-used"
"RTN","LEXQC2",92,0)
 Q:$G(X)="REA" "Re-Activated"
"RTN","LEXQC2",93,0)
 Q ""
"RTN","LEXQC3")
0^5^B22152952
"RTN","LEXQC3",1,0)
LEXQC3 ;ISL/KER - Query - Changes - ICD/ICP/10D/10P ;04/21/2014
"RTN","LEXQC3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXQC3",3,0)
 ;               
"RTN","LEXQC3",4,0)
 ; Global Variables
"RTN","LEXQC3",5,0)
 ;    ^TMP("LEXQC")       SACC 2.3.2.5.1
"RTN","LEXQC3",6,0)
 ;               
"RTN","LEXQC3",7,0)
 ; External References
"RTN","LEXQC3",8,0)
 ;    $$FILE^ICDEX        ICR   5747
"RTN","LEXQC3",9,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQC3",10,0)
 ;    $$SINFO^ICDEX       ICR   5747
"RTN","LEXQC3",11,0)
 ;               
"RTN","LEXQC3",12,0)
 ; Local Variables NEWed in LEXQC
"RTN","LEXQC3",13,0)
 ;    LEXADT              After Date
"RTN","LEXQC3",14,0)
 ;    LEXBDT              Before Date
"RTN","LEXQC3",15,0)
 ;    LEXCDT              Versioning Date
"RTN","LEXQC3",16,0)
 ;    LEXQLEN             Length of Display
"RTN","LEXQC3",17,0)
 ;    LEXQSTR             Length of String
"RTN","LEXQC3",18,0)
 ;    LEXQTOT             Total Records
"RTN","LEXQC3",19,0)
 ;               
"RTN","LEXQC3",20,0)
D09 ; ICD-9 Diagnosis Changes
"RTN","LEXQC3",21,0)
 D CK("80",1)
"RTN","LEXQC3",22,0)
 Q
"RTN","LEXQC3",23,0)
P09 ; ICD-9 Procedure Changes
"RTN","LEXQC3",24,0)
 D CK("80.1",2)
"RTN","LEXQC3",25,0)
 Q
"RTN","LEXQC3",26,0)
D10 ; ICD-10 Diagnosis Changes
"RTN","LEXQC3",27,0)
 D CK("80",30)
"RTN","LEXQC3",28,0)
 Q
"RTN","LEXQC3",29,0)
P10 ; ICD-10 Procedure Changes
"RTN","LEXQC3",30,0)
 D CK("80.1",31)
"RTN","LEXQC3",31,0)
 Q
"RTN","LEXQC3",32,0)
CK(X,Y) ; Check File X for Changes
"RTN","LEXQC3",33,0)
 N LEXFI,LEXRT,LEXSAB,LEXIDT,LEXSYS,LEXSINF S LEXFI=$$FILE^ICDEX($G(X)) Q:+LEXFI'>0
"RTN","LEXQC3",34,0)
 S LEXRT=$$ROOT^ICDEX(LEXFI) Q:$E(LEXRT,1)'="^"  Q:$E(LEXRT,$L(LEXRT))'="("  Q:'$L($P($P(LEXRT,"^",2),"(",1))
"RTN","LEXQC3",35,0)
 S LEXSYS=+($G(Y)) Q:+LEXSYS'>0  S LEXSINF=$$SINFO^ICDEX(LEXSYS)
"RTN","LEXQC3",36,0)
 S LEXSAB=$P(LEXSINF,"^",3) Q:'$L(LEXSAB)  S LEXIDT=$P(LEXSINF,"^",5)
"RTN","LEXQC3",37,0)
 S LEXCDT=$G(LEXCDT) Q:LEXCDT'?7N  Q:LEXCDT<LEXIDT  Q:$P($G(LEXBDT),".",1)'?7N
"RTN","LEXQC3",38,0)
 Q:$P($G(LEXADT),".",1)'?7N  Q:+LEXCDT'>+LEXBDT  K ^TMP("LEXQC",$J,LEXSAB) N LEX1,LEX2,LEX3
"RTN","LEXQC3",39,0)
 N LEX4,LEX5,LEX6,LEXAEF,LEXAST,LEXBEF,LEXBST,LEXCEF,LEXCNT,LEXCST
"RTN","LEXQC3",40,0)
 N LEXH,LEXIEN,LEXLC,LEXND,LEXORD,LEXPEF,LEXPST,LEXQL,LEXSO,LEXSTID
"RTN","LEXQC3",41,0)
 S LEXQLEN=+($G(LEXQLEN)),LEXQTOT=+($G(LEXQTOT))
"RTN","LEXQC3",42,0)
 S LEXQSTR=+($G(LEXQSTR)),LEXCNT=0,LEXLC=0
"RTN","LEXQC3",43,0)
 S LEXORD="" F  S LEXORD=$O(@(LEXRT_"""ABA"","_+LEXSYS_","""_LEXORD_""")")) Q:'$L(LEXORD)  D
"RTN","LEXQC3",44,0)
 . S LEXIEN=0 F  S LEXIEN=$O(@(LEXRT_"""ABA"","_+LEXSYS_","""_LEXORD_""","_+LEXIEN_")")) Q:+LEXIEN'>0  D CE
"RTN","LEXQC3",45,0)
 Q
"RTN","LEXQC3",46,0)
CE ;   Check Entry
"RTN","LEXQC3",47,0)
 Q:'$L($G(LEXRT))  Q:+($G(LEXIEN))'>0
"RTN","LEXQC3",48,0)
 N LEX1,LEX2,LEX3,LEX4,LEXAEF,LEXAST,LEXBEF,LEXBST,LEXCEF,LEXCST,LEXH
"RTN","LEXQC3",49,0)
 N LEXND,LEXPEF,LEXPST,LEXQL,LEXSO,LEXSTID S LEXCNT=LEXCNT+1
"RTN","LEXQC3",50,0)
 I LEXCNT'<+($G(LEXQSTR)) D
"RTN","LEXQC3",51,0)
 . S LEXLC=+($G(LEXLC))+1 W:LEXLC'>+($G(LEXQLEN)) "." S LEXCNT=0
"RTN","LEXQC3",52,0)
 S LEXSO=$P($G(@(LEXRT_+LEXIEN_",0)")),"^",1) Q:'$L(LEXSO)
"RTN","LEXQC3",53,0)
 S LEXH=$O(@(LEXRT_+LEXIEN_",66,""B"","_+LEXCDT_","" "")"),-1)
"RTN","LEXQC3",54,0)
 S LEXND=$G(@(LEXRT_+LEXIEN_",66,"_+LEXH_",0)"))
"RTN","LEXQC3",55,0)
 S LEXCEF=$P(LEXND,"^",1),LEXCST=$P(LEXND,"^",2)
"RTN","LEXQC3",56,0)
 S LEXH=$O(@(LEXRT_+LEXIEN_",66,""B"","_+LEXBDT_","" "")"),-1)
"RTN","LEXQC3",57,0)
 S LEXND=$G(@(LEXRT_+LEXIEN_",66,"_+LEXH_",0)"))
"RTN","LEXQC3",58,0)
 S LEXBEF=$P(LEXND,"^",1),LEXBST=$P(LEXND,"^",2)
"RTN","LEXQC3",59,0)
 S LEXH=$O(@(LEXRT_+LEXIEN_",66,""B"","_+LEXADT_","" "")"),-1)
"RTN","LEXQC3",60,0)
 S LEXND=$G(@(LEXRT_+LEXIEN_",66,"_+LEXH_",0)"))
"RTN","LEXQC3",61,0)
 S LEXAEF=$P(LEXND,"^",1),LEXAST=$P(LEXND,"^",2)
"RTN","LEXQC3",62,0)
 S LEXH=$O(@(LEXRT_+LEXIEN_",66,""B"","_+LEXCDT_")"),-1)
"RTN","LEXQC3",63,0)
 S LEXH=$O(@(LEXRT_+LEXIEN_",66,""B"","_+LEXH_","" "")"),-1)
"RTN","LEXQC3",64,0)
 S LEXND=$G(@(LEXRT_+LEXIEN_",66,"_+LEXH_",0)"))
"RTN","LEXQC3",65,0)
 S LEXPEF=$P(LEXND,"^",1),LEXPST=$P(LEXND,"^",2)
"RTN","LEXQC3",66,0)
 S LEX1=$D(@(LEXRT_+LEXIEN_",67,""B"","_+LEXCDT_")"))>0
"RTN","LEXQC3",67,0)
 S LEX2=$D(@(LEXRT_+LEXIEN_",68,""B"","_+LEXCDT_")"))>0
"RTN","LEXQC3",68,0)
 S LEX3=$O(@(LEXRT_+LEXIEN_",67,""B"","_+LEXCDT_")"),-1)
"RTN","LEXQC3",69,0)
 S LEX4=$O(@(LEXRT_+LEXIEN_",68,""B"","_+LEXCDT_")"),-1)
"RTN","LEXQC3",70,0)
 S LEX5=$D(@(LEXRT_+LEXIEN_",67,""B"","_+LEXCDT_")"))
"RTN","LEXQC3",71,0)
 S LEX6=$D(@(LEXRT_+LEXIEN_",68,""B"","_+LEXCDT_")"))
"RTN","LEXQC3",72,0)
 S LEXQL=0 I $L(LEXCST),$L(LEXCEF) D
"RTN","LEXQC3",73,0)
 . N LEXCT,LEXO Q:$L(LEXBEF)&($L(LEXBST))&(LEXBST'=LEXCST)
"RTN","LEXQC3",74,0)
 . Q:$L(LEXAEF)&($L(LEXAST))&(LEXAST'=LEXCST)
"RTN","LEXQC3",75,0)
 . Q:(LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))
"RTN","LEXQC3",76,0)
 . N LEXSTID Q:'$L($G(LEXSO))  S LEXSTID=$S(+LEXCST>0:"ACT",1:"INA")
"RTN","LEXQC3",77,0)
 . S LEXQL=1 I LEXSTID="ACT",$G(LEXPEF)?7N,+($G(LEXPST))'>0 D
"RTN","LEXQC3",78,0)
 . . I +($G(LEX5))'>0,+($G(LEX6))'>0 S LEXSTID="REA"
"RTN","LEXQC3",79,0)
 . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC3",80,0)
 . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSAB,LEXSTID,0)))+1
"RTN","LEXQC3",81,0)
 . S ^TMP("LEXQC",$J,LEXSAB,LEXSTID,1,(LEXSO_" "))=LEXO
"RTN","LEXQC3",82,0)
 . S ^TMP("LEXQC",$J,LEXSAB,LEXSTID,0)=LEXCT
"RTN","LEXQC3",83,0)
 I 'LEXQL I +LEXPST>0,((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D
"RTN","LEXQC3",84,0)
 . N LEXCT,LEXO Q:'$L($G(LEXSO))  S LEXQL=1
"RTN","LEXQC3",85,0)
 . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC3",86,0)
 . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSAB,"REV",0)))+1
"RTN","LEXQC3",87,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"REV",1,(LEXSO_" "))=LEXO
"RTN","LEXQC3",88,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"REV",0)=LEXCT
"RTN","LEXQC3",89,0)
 I 'LEXQL S LEXQL=0 I ((LEXCEF?7N&(LEXCST>0))!(LEXPEF?7N&(LEXPST>0))),((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D
"RTN","LEXQC3",90,0)
 . N LEXCT,LEXO S LEXQL=1
"RTN","LEXQC3",91,0)
 . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC3",92,0)
 . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSAB,"REU",0)))+1
"RTN","LEXQC3",93,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"REU",1,(LEXSO_" "))=LEXO
"RTN","LEXQC3",94,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"REU",0)=LEXCT
"RTN","LEXQC3",95,0)
 I 'LEXQL I $D(@(LEXRT_+LEXIEN_",69,""B"","_+($G(LEXCDT))_")")) D
"RTN","LEXQC3",96,0)
 . ;^ICD9(+($G(LEXIEN)),69,"B",+($G(LEXCDT)))) D
"RTN","LEXQC3",97,0)
 . N LEXCT,LEXO S LEXQL=1
"RTN","LEXQC3",98,0)
 . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC3",99,0)
 . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSAB,"UPD",0)))+1
"RTN","LEXQC3",100,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"UPD",1,(LEXSO_" "))=LEXO
"RTN","LEXQC3",101,0)
 . S ^TMP("LEXQC",$J,LEXSAB,"UPD",0)=LEXCT
"RTN","LEXQC3",102,0)
 Q
"RTN","LEXQC4")
0^6^B47380274
"RTN","LEXQC4",1,0)
LEXQC4 ;ISL/KER - Query - Changes - CPT/MOD ;04/21/2014
"RTN","LEXQC4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXQC4",3,0)
 ;               
"RTN","LEXQC4",4,0)
 ; Global Variables
"RTN","LEXQC4",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQC4",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQC4",7,0)
 ;    ^TMP("LEXQC")       SACC 2.3.2.5.1
"RTN","LEXQC4",8,0)
 ;               
"RTN","LEXQC4",9,0)
 ; External References
"RTN","LEXQC4",10,0)
 ;    None
"RTN","LEXQC4",11,0)
 ;               
"RTN","LEXQC4",12,0)
 ; Local Variables NEWed in LEXQC
"RTN","LEXQC4",13,0)
 ;    LEXADT              After Date
"RTN","LEXQC4",14,0)
 ;    LEXBDT              Before Date
"RTN","LEXQC4",15,0)
 ;    LEXCDT              Versioning Date
"RTN","LEXQC4",16,0)
 ;    LEXQLEN             Length of Display
"RTN","LEXQC4",17,0)
 ;    LEXQSTR             Length of String
"RTN","LEXQC4",18,0)
 ;    LEXQTOT             Total Records
"RTN","LEXQC4",19,0)
 ;               
"RTN","LEXQC4",20,0)
CPT ; CPT Procedures Changes
"RTN","LEXQC4",21,0)
 K ^TMP("LEXQC",$J,"CPT"),^TMP("LEXQC",$J,"CPC") N LEX1,LEX2,LEX3,LEX4
"RTN","LEXQC4",22,0)
 N LEX5,LEX6,LEXAEF,LEXAST,LEXBEF,LEXBST,LEXCEF,LEXCNT,LEXCST,LEXH
"RTN","LEXQC4",23,0)
 N LEXIDT,LEXIEN,LEXLC,LEXND,LEXPEF,LEXPST,LEXQL,LEXSO,LEXSTID
"RTN","LEXQC4",24,0)
 S LEXQLEN=+($G(LEXQLEN)),LEXQTOT=+($G(LEXQTOT))
"RTN","LEXQC4",25,0)
 S LEXQSTR=+($G(LEXQSTR)),LEXCNT=0,LEXLC=0
"RTN","LEXQC4",26,0)
 S LEXIDT=$$IMPDATE^LEXU("CPT"),LEXCDT=$G(LEXCDT)
"RTN","LEXQC4",27,0)
 Q:LEXCDT'?7N  Q:LEXCDT'>LEXIDT  S LEXIEN=0
"RTN","LEXQC4",28,0)
 F  S LEXIEN=$O(^ICPT(LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXQC4",29,0)
 . N LEX1,LEX2,LEX3,LEX4,LEX5,LEX6,LEXAEF,LEXAST,LEXBEF,LEXBST,LEXCEF
"RTN","LEXQC4",30,0)
 . N LEXCST,LEXH,LEXND,LEXPEF,LEXPST,LEXQL,LEXSO,LEXSTID,LEXSID
"RTN","LEXQC4",31,0)
 . S LEXCNT=LEXCNT+1 I LEXCNT'<+($G(LEXQSTR)) S LEXLC=+($G(LEXLC))+1 D
"RTN","LEXQC4",32,0)
 . . W:LEXLC'>+($G(LEXQLEN)) "." S LEXCNT=0
"RTN","LEXQC4",33,0)
 . S LEXSID="CPT",LEXSO=$P($G(^ICPT(LEXIEN,0)),"^",1) Q:'$L(LEXSO)
"RTN","LEXQC4",34,0)
 . S:$E(LEXSO,1)?1U LEXSID="CPC"
"RTN","LEXQC4",35,0)
 . S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXCDT," "),-1)
"RTN","LEXQC4",36,0)
 . S LEXND=$G(^ICPT(+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",37,0)
 . S LEXCEF=$P(LEXND,"^",1),LEXCST=$P(LEXND,"^",2)
"RTN","LEXQC4",38,0)
 . S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXBDT," "),-1)
"RTN","LEXQC4",39,0)
 . S LEXND=$G(^ICPT(+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",40,0)
 . S LEXBEF=$P(LEXND,"^",1),LEXBST=$P(LEXND,"^",2)
"RTN","LEXQC4",41,0)
 . S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXADT," "),-1)
"RTN","LEXQC4",42,0)
 . S LEXND=$G(^ICPT(+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",43,0)
 . S LEXAEF=$P(LEXND,"^",1),LEXAST=$P(LEXND,"^",2)
"RTN","LEXQC4",44,0)
 . S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXCDT),-1)
"RTN","LEXQC4",45,0)
 . S LEXH=$O(^ICPT(+LEXIEN,60,"B",+LEXH," "),-1)
"RTN","LEXQC4",46,0)
 . S LEXND=$G(^ICPT(+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",47,0)
 . S LEXPEF=$P(LEXND,"^",1),LEXPST=$P(LEXND,"^",2)
"RTN","LEXQC4",48,0)
 . S LEX1=$D(^ICPT(+LEXIEN,61,"B",LEXCDT))>0
"RTN","LEXQC4",49,0)
 . S LEX2=$D(^ICPT(+LEXIEN,62,"B",LEXCDT))>0
"RTN","LEXQC4",50,0)
 . S LEX3=$O(^ICPT(+LEXIEN,61,"B",LEXCDT),-1)
"RTN","LEXQC4",51,0)
 . S LEX4=$O(^ICPT(+LEXIEN,62,"B",LEXCDT),-1)
"RTN","LEXQC4",52,0)
 . S LEX5=$D(^ICPT(+LEXIEN,61,"B",LEXCDT))
"RTN","LEXQC4",53,0)
 . S LEX6=$D(^ICPT(+LEXIEN,62,"B",LEXCDT))
"RTN","LEXQC4",54,0)
 . S LEXQL=0 I $L(LEXCST),$L(LEXCEF) D  Q:LEXQL
"RTN","LEXQC4",55,0)
 . . Q:$L(LEXBEF)&($L(LEXBST))&(LEXBST'=LEXCST)
"RTN","LEXQC4",56,0)
 . . Q:$L(LEXAEF)&($L(LEXAST))&(LEXAST'=LEXCST)
"RTN","LEXQC4",57,0)
 . . Q:(LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))  Q:'$L($G(LEXSO))
"RTN","LEXQC4",58,0)
 . . N LEXCT,LEXO,LEXSTID S LEXSTID=$S(+LEXCST>0:"ACT",1:"INA")
"RTN","LEXQC4",59,0)
 . . I LEXSTID="ACT",$G(LEXPEF)?7N,+($G(LEXPST))'>0 D
"RTN","LEXQC4",60,0)
 . . . I +($G(LEX5))'>0,+($G(LEX6))'>0 S LEXSTID="REA"
"RTN","LEXQC4",61,0)
 . . S LEXQL=1
"RTN","LEXQC4",62,0)
 . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",63,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,LEXSTID,0)))+1
"RTN","LEXQC4",64,0)
 . . S ^TMP("LEXQC",$J,LEXSID,LEXSTID,1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",65,0)
 . . S ^TMP("LEXQC",$J,LEXSID,LEXSTID,0)=LEXCT
"RTN","LEXQC4",66,0)
 . S LEXQL=0 I +LEXPST>0,((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D  Q:LEXQL
"RTN","LEXQC4",67,0)
 . . N LEXCT,LEXO Q:'$L($G(LEXSO))
"RTN","LEXQC4",68,0)
 . . S LEXQL=1,LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",69,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"REV",0)))+1
"RTN","LEXQC4",70,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REV",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",71,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REV",0)=LEXCT
"RTN","LEXQC4",72,0)
 . S LEXQL=0 I ((LEXCEF?7N&(LEXCST>0))!(LEXPEF?7N&(LEXPST>0))),((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D
"RTN","LEXQC4",73,0)
 . . N LEXCT,LEXO S LEXQL=1
"RTN","LEXQC4",74,0)
 . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",75,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"REU",0)))+1
"RTN","LEXQC4",76,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REU",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",77,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REU",0)=LEXCT
"RTN","LEXQC4",78,0)
 Q
"RTN","LEXQC4",79,0)
MOD ; CPT Modifier Changes
"RTN","LEXQC4",80,0)
 K ^TMP("LEXQC",$J,"MOD") N LEX1,LEX2,LEX3,LEX4,LEX5,LEX6,LEXAEF
"RTN","LEXQC4",81,0)
 N LEXAST,LEXBEF,LEXBST,LEXCEF,LEXCNT,LEXCST,LEXH,LEXIDT,LEXIEN
"RTN","LEXQC4",82,0)
 N LEXLC,LEXND,LEXPEF,LEXPST,LEXQL,LEXSO,LEXSTID
"RTN","LEXQC4",83,0)
 S LEXQLEN=+($G(LEXQLEN)) S LEXQTOT=+($G(LEXQTOT))
"RTN","LEXQC4",84,0)
 S LEXQSTR=+($G(LEXQSTR)),LEXCNT=0,LEXLC=0
"RTN","LEXQC4",85,0)
 S LEXIDT=$$IMPDATE^LEXU("CPT"),LEXCDT=$G(LEXCDT)
"RTN","LEXQC4",86,0)
 Q:LEXCDT'?7N  Q:LEXCDT'>LEXIDT  S LEXIEN=0
"RTN","LEXQC4",87,0)
 F  S LEXIEN=$O(^DIC(81.3,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXQC4",88,0)
 . Q:$O(^DIC(81.3,+LEXIEN,60,0))'>0  N LEX1,LEX2,LEX3,LEX4,LEX5
"RTN","LEXQC4",89,0)
 . N LEX6,LEXAEF,LEXAF,LEXAST,LEXACT,LEXBEF,LEXBST,LEXCEF,LEXCST
"RTN","LEXQC4",90,0)
 . N LEXH,LEXIF,LEXINA,LEXND,LEXPEF,LEXPST,LEXQL,LEXR,LEXRI,LEXSO
"RTN","LEXQC4",91,0)
 . N LEXSTID,LEXSID S LEXCNT=LEXCNT+1
"RTN","LEXQC4",92,0)
 . I LEXCNT'<+($G(LEXQSTR)) S LEXLC=+($G(LEXLC))+1 D
"RTN","LEXQC4",93,0)
 . . W:LEXLC'>+($G(LEXQLEN)) "." S LEXCNT=0
"RTN","LEXQC4",94,0)
 . S LEXSID="MOD" S LEXSO=$P($G(^DIC(81.3,LEXIEN,0)),"^",1)
"RTN","LEXQC4",95,0)
 . Q:'$L(LEXSO)  S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXCDT," "),-1)
"RTN","LEXQC4",96,0)
 . S LEXND=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",97,0)
 . S LEXCEF=$P(LEXND,"^",1),LEXCST=$P(LEXND,"^",2)
"RTN","LEXQC4",98,0)
 . S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXBDT," "),-1)
"RTN","LEXQC4",99,0)
 . S LEXND=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",100,0)
 . S LEXBEF=$P(LEXND,"^",1),LEXBST=$P(LEXND,"^",2)
"RTN","LEXQC4",101,0)
 . S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXADT," "),-1)
"RTN","LEXQC4",102,0)
 . S LEXND=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",103,0)
 . S LEXAEF=$P(LEXND,"^",1),LEXAST=$P(LEXND,"^",2)
"RTN","LEXQC4",104,0)
 . S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXCDT),-1)
"RTN","LEXQC4",105,0)
 . S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",+LEXH," "),-1)
"RTN","LEXQC4",106,0)
 . S LEXND=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0))
"RTN","LEXQC4",107,0)
 . S LEXPEF=$P(LEXND,"^",1),LEXPST=$P(LEXND,"^",2)
"RTN","LEXQC4",108,0)
 . S LEX1=$D(^DIC(81.3,+LEXIEN,61,"B",LEXCDT))>0
"RTN","LEXQC4",109,0)
 . S LEX2=$D(^DIC(81.3,+LEXIEN,62,"B",LEXCDT))>0
"RTN","LEXQC4",110,0)
 . S LEX3=$O(^DIC(81.3,+LEXIEN,61,"B",LEXCDT),-1)
"RTN","LEXQC4",111,0)
 . S LEX4=$O(^DIC(81.3,+LEXIEN,62,"B",LEXCDT),-1)
"RTN","LEXQC4",112,0)
 . S LEX5=$D(^DIC(81.3,+LEXIEN,61,"B",LEXCDT))
"RTN","LEXQC4",113,0)
 . S LEX6=$D(^DIC(81.3,+LEXIEN,62,"B",LEXCDT))
"RTN","LEXQC4",114,0)
 . S LEXQL=0 I $L(LEXCST),$L(LEXCEF) D
"RTN","LEXQC4",115,0)
 . . Q:$L(LEXBEF)&($L(LEXBST))&(LEXBST'=LEXCST)
"RTN","LEXQC4",116,0)
 . . Q:$L(LEXAEF)&($L(LEXAST))&(LEXAST'=LEXCST)
"RTN","LEXQC4",117,0)
 . . Q:(LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))
"RTN","LEXQC4",118,0)
 . . N LEXSTID Q:'$L($G(LEXSO))
"RTN","LEXQC4",119,0)
 . . N LEXCT,LEXO S LEXSTID=$S(+LEXCST>0:"ACT",1:"INA")
"RTN","LEXQC4",120,0)
 . . I LEXSTID="ACT",$G(LEXPEF)?7N,+($G(LEXPST))'>0 D
"RTN","LEXQC4",121,0)
 . . . I +($G(LEX5))'>0,+($G(LEX6))'>0 S LEXSTID="REA"
"RTN","LEXQC4",122,0)
 . . S LEXQL=1,LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",123,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,LEXSTID,0)))+1
"RTN","LEXQC4",124,0)
 . . S ^TMP("LEXQC",$J,LEXSID,LEXSTID,1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",125,0)
 . . S ^TMP("LEXQC",$J,LEXSID,LEXSTID,0)=LEXCT
"RTN","LEXQC4",126,0)
 . I 'LEXQL I +LEXPST>0,((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D  Q:LEXQL
"RTN","LEXQC4",127,0)
 . . N LEXCT,LEXO Q:'$L($G(LEXSO))  S LEXQL=1
"RTN","LEXQC4",128,0)
 . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",129,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"REV",0)))+1
"RTN","LEXQC4",130,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REV",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",131,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REV",0)=LEXCT
"RTN","LEXQC4",132,0)
 . I 'LEXQL S LEXQL=0 I ((LEXCEF?7N&(LEXCST>0))!(LEXPEF?7N&(LEXPST>0))),((LEX1>0&(LEX3?7N))!(LEX2>0&(LEX4?7N))) D
"RTN","LEXQC4",133,0)
 . . N LEXCT,LEXO S LEXQL=1
"RTN","LEXQC4",134,0)
 . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",135,0)
 . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"REU",0)))+1
"RTN","LEXQC4",136,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REU",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",137,0)
 . . S ^TMP("LEXQC",$J,LEXSID,"REU",0)=LEXCT
"RTN","LEXQC4",138,0)
 . S (LEXAF,LEXIF,LEXRI)=0,LEXSID="RAN",LEXR=0
"RTN","LEXQC4",139,0)
 . F  S LEXRI=$O(^DIC(81.3,+LEXIEN,10,LEXRI)) Q:+LEXRI'>0  D  Q:LEXR>1
"RTN","LEXQC4",140,0)
 . . S LEXND=$G(^DIC(81.3,+LEXIEN,10,LEXRI,0))
"RTN","LEXQC4",141,0)
 . . S LEXACT=$P(LEXND,"^",3),LEXINA=$P(LEXND,"^",4)
"RTN","LEXQC4",142,0)
 . . I LEXACT=LEXCDT,'$L(LEXINA) D
"RTN","LEXQC4",143,0)
 . . . N LEXCT,LEXO Q:$D(^TMP("LEXQC",$J,LEXSID,"ACT",1,(LEXSO_" ")))
"RTN","LEXQC4",144,0)
 . . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",145,0)
 . . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"ACT",0)))+1
"RTN","LEXQC4",146,0)
 . . . S ^TMP("LEXQC",$J,LEXSID,"ACT",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",147,0)
 . . . S ^TMP("LEXQC",$J,LEXSID,"ACT",0)=LEXCT,LEXAF=1
"RTN","LEXQC4",148,0)
 . . I LEXINA=LEXCDT,$L(LEXACT),LEXINA>LEXACT,(LEXINA-LEXACT)>1 D
"RTN","LEXQC4",149,0)
 . . . N LEXCT,LEXO Q:$D(^TMP("LEXQC",$J,LEXSID,"INA",1,(LEXSO_" ")))
"RTN","LEXQC4",150,0)
 . . . S LEXO=LEXIEN_"^"_LEXSO_"^"_LEXCDT
"RTN","LEXQC4",151,0)
 . . . S LEXCT=+($G(^TMP("LEXQC",$J,LEXSID,"INA",0)))+1
"RTN","LEXQC4",152,0)
 . . . S ^TMP("LEXQC",$J,LEXSID,"INA",1,(LEXSO_" "))=LEXO
"RTN","LEXQC4",153,0)
 . . . S ^TMP("LEXQC",$J,LEXSID,"INA",0)=LEXCT,LEXIF=1
"RTN","LEXQC4",154,0)
 . . S LEXR=+LEXAF+LEXIF
"RTN","LEXQC4",155,0)
 Q
"RTN","LEXQCM")
0^64^B69421811
"RTN","LEXQCM",1,0)
LEXQCM ;ISL/KER - Query - CPT Modifiers - Extract ;04/21/2014
"RTN","LEXQCM",2,0)
 ;;2.0;LEXICON UTILITY;**62,68,80**;Sep 23, 1996;Build 1
"RTN","LEXQCM",3,0)
 ;               
"RTN","LEXQCM",4,0)
 ; Global Variables
"RTN","LEXQCM",5,0)
 ;    ^DIC(81.3)          ICR   4492
"RTN","LEXQCM",6,0)
 ;               
"RTN","LEXQCM",7,0)
 ; External References
"RTN","LEXQCM",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQCM",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQCM",10,0)
 ;    $$MODD^ICPTMOD      ICR   1996
"RTN","LEXQCM",11,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXQCM",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQCM",13,0)
 ;    GETS^DIQ            ICR   2056
"RTN","LEXQCM",14,0)
 ;    HIST^ICPTAPIU       ICR   1997
"RTN","LEXQCM",15,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXQCM",16,0)
 ;    MODD^ICPTMOD        ICR   1996
"RTN","LEXQCM",17,0)
 ;               
"RTN","LEXQCM",18,0)
EN ; Main Entry Point
"RTN","LEXQCM",19,0)
 N LEXENV S LEXENV=$$EV Q:+LEXENV'>0
"RTN","LEXQCM",20,0)
 N LEXAD,LEXEDT,LEXCDT,LEXEXIT,LEXTEST S LEXEXIT=0,LEXCDT=""
"RTN","LEXQCM",21,0)
 F  S LEXCDT=$$AD^LEXQM,LEXAD=LEXCDT Q:'$L(LEXCDT)  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2) Q:LEXCDT'?7N  D LOOK Q:LEXCDT'?7N  Q:+LEXEXIT>0
"RTN","LEXQCM",22,0)
 Q
"RTN","LEXQCM",23,0)
LOOK ; CPT Modifier Lookup Loop
"RTN","LEXQCM",24,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S LEXCDT="" Q
"RTN","LEXQCM",25,0)
 N LEXMOD,LEXMODC S LEXLEN=62
"RTN","LEXQCM",26,0)
 F  S LEXMOD=$$MOD^LEXQCMA S:LEXMOD="^^" LEXEXIT=1 Q:LEXMOD="^"!(LEXMOD="^^")  D  Q:LEXMOD="^"!(LEXMOD="^^")
"RTN","LEXQCM",27,0)
 . K LEXGET,LEXST,LEXSD,LEXLD,LEXMD,LEXRAN,LEXLX,LEXWN,LEXFA N LEXIEN,LEXLDT,LEXELDT,LEXINC,LEXINCI,LEXINCF S (LEXINC,LEXINCI,LEXINCF)=0
"RTN","LEXQCM",28,0)
 . S LEXIEN=+($G(LEXMOD)),LEXLDT=+($G(LEXCDT)),LEXFA=$$FA(LEXIEN) Q:+LEXIEN'>0  Q:LEXLDT'?7N  S LEXELDT=$$SD^LEXQM(LEXLDT) Q:'$L(LEXELDT)
"RTN","LEXQCM",29,0)
 . S (LEXINC,LEXINCI,LEXINCF)=0 I LEXFA?7N,LEXCDT?7N,LEXFA'>LEXCDT D
"RTN","LEXQCM",30,0)
 . . S LEXINC=$$INC^LEXQCMA Q:LEXINC["^"  S:+LEXINC>0 LEXINCI=$$INCI^LEXQCMA S:+LEXINC>0 LEXINCF=$$INCF^LEXQCMA
"RTN","LEXQCM",31,0)
 . D CSV,EN^LEXQCM2
"RTN","LEXQCM",32,0)
 Q
"RTN","LEXQCM",33,0)
CSV ; Code Set Versioning Display
"RTN","LEXQCM",34,0)
 ; Needs LEXCDT Date 
"RTN","LEXQCM",35,0)
 ;       LEXMOD CPT Modifier Internal Entry Number
"RTN","LEXQCM",36,0)
 N LEXEDT,LEXIEN,LEXIENS,LEXLTXT,LEXSO,LEXSTA
"RTN","LEXQCM",37,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S (LEXMOD,LEXCDT)="" Q
"RTN","LEXQCM",38,0)
 S LEXINC=+($G(LEXINC)),LEXINCI=+($G(LEXINCI)),LEXIEN=+($G(LEXMOD)),LEXSO=$P($G(LEXMOD),"^",2),LEXLTXT=$P($G(LEXMOD),"^",3)
"RTN","LEXQCM",39,0)
 Q:+LEXIEN'>0  Q:'$L(LEXSO)
"RTN","LEXQCM",40,0)
 ;
"RTN","LEXQCM",41,0)
 ; Get the "Unversioned" Fields
"RTN","LEXQCM",42,0)
 ;   Modifier                    Field .01
"RTN","LEXQCM",43,0)
 S LEXIENS=LEXIEN_"," D GETS^DIQ(81.3,LEXIENS,".01","IE","LEXGET","LEXMSG")
"RTN","LEXQCM",44,0)
 ; Get the "Versioned" Fields
"RTN","LEXQCM",45,0)
 ;   Effective Date and Status   Sub-File 81.33   (60)
"RTN","LEXQCM",46,0)
 S LEXST=$$EF(+($G(LEXIEN)),+LEXCDT),LEXSTA=+($P(LEXST,"^",2))
"RTN","LEXQCM",47,0)
 ;   Modifier Name               Sub-File 81.361  (61)
"RTN","LEXQCM",48,0)
 D SDS(+($G(LEXIEN)),+LEXCDT,.LEXSD,62,LEXSTA)
"RTN","LEXQCM",49,0)
 ;   Description                 Sub-File 81.362  (62)
"RTN","LEXQCM",50,0)
 D LDS(+($G(LEXIEN)),+LEXCDT,.LEXLD,62)
"RTN","LEXQCM",51,0)
 D WN(+LEXCDT,.LEXWN,62)
"RTN","LEXQCM",52,0)
 D:+($G(LEXINC))>0 CCR^LEXQCM2(+($G(LEXIEN)),+LEXCDT,.LEXRAN,62,+($G(LEXINCI)),+($G(LEXINCF)))
"RTN","LEXQCM",53,0)
 Q
"RTN","LEXQCM",54,0)
 ;            
"RTN","LEXQCM",55,0)
EF(X,LEXCDT) ; Effective Dates
"RTN","LEXQCM",56,0)
 N LEX,LEXAD,LEXBRD,LEXBRW,LEXEE,LEXEF,LEXES,LEXFA,LEXH,LEXI,LEXID,LEXIEN,LEXLS,LEXPE,LEXPH,LEXPI,LEXP0,LEXPS,LEXSO,LEXST
"RTN","LEXQCM",57,0)
 S LEXIEN=+($G(X)),LEXCDT=+($G(LEXCDT)),LEXBRD=2890101,LEXBRW=""
"RTN","LEXQCM",58,0)
 Q:+LEXIEN'>0 "^^"  Q:'$L($G(^DIC(81.3,+LEXIEN,0))) "^^"  Q:LEXCDT'?7N "^^"  S LEXSO=$P($G(^DIC(81.3,+LEXIEN,0)),"^",1)
"RTN","LEXQCM",59,0)
 S LEXFA=$$FA(+LEXIEN),LEXPI=$O(^DIC(81.3,+LEXIEN,60,"B",(LEXCDT+.999999)),-1),LEXPH=$O(^DIC(81.3,+LEXIEN,60,"B",+LEXPI," "),-1)
"RTN","LEXQCM",60,0)
 S LEXP0=$G(^DIC(81.3,+LEXIEN,60,+LEXPH,0)),LEXPS=$P(LEXP0,"^",2),LEXPE=$P(LEXP0,"^",1)
"RTN","LEXQCM",61,0)
 S:LEXCDT<LEXBRD&(+LEXFA=LEXBRD) LEXBRW="Warning:  The 'Based on Date' provided precedes the initial Code Set Business Rule date of "_$$SD^LEXQM(LEXBRD)_", the Effective date may be inaccurate."
"RTN","LEXQCM",62,0)
 S:LEXFA?7N&('$L(LEXPE))&('$L(LEXPS))&(LEXFA=LEXBRD) LEXPE=LEXFA,LEXPS=1
"RTN","LEXQCM",63,0)
 I '$L(LEXPE),'$L(LEXPS) D  Q X
"RTN","LEXQCM",64,0)
 . N LEXFA S LEXFA=$$FA(+LEXIEN)
"RTN","LEXQCM",65,0)
 . S LEXST="",LEXEF="",LEXES="Not Applicable",LEXLS=-1
"RTN","LEXQCM",66,0)
 . S:+LEXFA>0&(+LEXCDT>0)&(LEXFA>LEXCDT) LEXES="Pending",LEXLS=-1,LEXST=0,LEXBRW=""
"RTN","LEXQCM",67,0)
 . S LEXEE="" S:LEXFA?7N LEXEE="(future activation of "_$$SD^LEXQM(LEXFA)_")"
"RTN","LEXQCM",68,0)
 . S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQCM",69,0)
 S (LEXLS,LEXST)=LEXPS,LEXEF=LEXPE,LEXES=$S(+LEXST>0:"Active",1:"Inactive"),LEXEE=$$SD^LEXQM(LEXEF)
"RTN","LEXQCM",70,0)
 S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQCM",71,0)
 Q X
"RTN","LEXQCM",72,0)
 ;            
"RTN","LEXQCM",73,0)
SDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Modifier Name (short description)
"RTN","LEXQCM",74,0)
 ;            
"RTN","LEXQCM",75,0)
 ; LEX=# of Lines
"RTN","LEXQCM",76,0)
 ; LEX(0)=External Date of Modifier Name
"RTN","LEXQCM",77,0)
 ; LEX(#)=Modifier Name
"RTN","LEXQCM",78,0)
 ;            
"RTN","LEXQCM",79,0)
 N LEXD,LEXBRD,LEXBRW,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA,LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLAST,LEXLEF,LEXLHI,LEXM,LEXR,LEXSDT,LEXSO,LEXLSD,LEXT
"RTN","LEXQCM",80,0)
 S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^DIC(81.3,+LEXIEN,61))  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQCM",81,0)
 S LEXSO=$P($G(^DIC(81.3,+LEXIEN,0)),"^",1),LEXLAST=$$MOD^ICPTMOD(+LEXIEN,"I",LEXVDT),LEXLSD=$P(LEXLAST,"^",3),LEXBRD=2890101
"RTN","LEXQCM",82,0)
 S:$D(LEXGET)&($L(LEXLSD)) LEXGET(81.3,(+LEXIEN_","),"B")=LEXLSD
"RTN","LEXQCM",83,0)
 S LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62 S LEXFA=$$FA(+LEXIEN),LEXM=""
"RTN","LEXQCM",84,0)
 S LEXM="" S:+LEXVDT<LEXFA&(LEXFA'=LEXBRD) LEXM="CPT Modifier Short Name is not available.  The date provided precedes the initial activation of the code"
"RTN","LEXQCM",85,0)
 I $L(LEXM) D  Q
"RTN","LEXQCM",86,0)
 . K LEX N LEXT,LEXI S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQCM",87,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQCM",88,0)
 . S:$D(LEX(1)) LEX(0)="--/--/----" S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCM",89,0)
 S LEXM="" S LEXEFF=$O(^DIC(81.3,LEXIEN,61,"B",(LEXVDT+.001)),-1),LEXHIS=$O(^DIC(81.3,LEXIEN,61,"B",+LEXEFF," "),-1),LEXSDT=$P($G(^DIC(81.3,+LEXIEN,61,+LEXHIS,0)),"^",2)
"RTN","LEXQCM",90,0)
 S LEXLEF=$O(^DIC(81.3,LEXIEN,61,"B",(9999999+.001)),-1),LEXLHI=$O(^DIC(81.3,LEXIEN,61,"B",+LEXLEF," "),-1),LEXDDT=$P($G(^DIC(81.3,+LEXIEN,61,+LEXLHI,0)),"^",2)
"RTN","LEXQCM",91,0)
 S (LEXD,LEXE,LEXR)="" S:$L(LEXSDT)&(LEXEFF?7N) LEXD=LEXSDT,LEXE=LEXEFF
"RTN","LEXQCM",92,0)
 S:$L(LEXDDT)&(LEXLEF?7N)&('$L(LEXD))&('$L(LEXE)) LEXD=LEXDDT,LEXE=LEXLEF,LEXR="No Text Available for Date Provided"
"RTN","LEXQCM",93,0)
 K LEX S LEX(1)=LEXD S:$L(LEXD) LEXGET(81.3,(+LEXIEN_","),"B")=LEXD S LEXEE=$$SD^LEXQM(LEXE)
"RTN","LEXQCM",94,0)
 S:$D(LEXTEST)&(+($G(LEXSTA))'>0) LEXEE="--/--/----" S:$L(LEX(1)) LEX(0)=LEXEE
"RTN","LEXQCM",95,0)
 S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCM",96,0)
 Q
"RTN","LEXQCM",97,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Long Description
"RTN","LEXQCM",98,0)
 ;            
"RTN","LEXQCM",99,0)
 ; LEX=# of Lines
"RTN","LEXQCM",100,0)
 ; LEX(0)=External Date of Description
"RTN","LEXQCM",101,0)
 ; LEX(#)=Description
"RTN","LEXQCM",102,0)
 ; LEX(#)=Description continued
"RTN","LEXQCM",103,0)
 ;            
"RTN","LEXQCM",104,0)
 N LEXC,LEXBRD,LEXDDT,LEXEVDT,LEXFA,LEXI,LEXIEN,LEXL,LEXLT,LEXLN,LEXM,LEXT,LEXSO,LEXTL,LEXTMP S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^DIC(81.3,+LEXIEN,62))
"RTN","LEXQCM",105,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62
"RTN","LEXQCM",106,0)
 S LEXSO=$P($G(^DIC(81.3,+LEXIEN,0)),"^",1) S LEXFA=$$FA(+LEXIEN),LEXM=""  S LEXSTA=+($G(LEXSTA)),LEXBRD=2890101
"RTN","LEXQCM",107,0)
 S LEXM="" S:+LEXVDT<LEXFA&(LEXFA'=LEXBRD) LEXM=" Modifier description is not available.  The date provided precedes the initial activation of the code" I $L(LEXM) D  Q
"RTN","LEXQCM",108,0)
 . K LEX N LEXT,LEXI S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7)) S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQCM",109,0)
 . S:$D(LEX(1)) LEX(0)="--/--/----" S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCM",110,0)
 K LEXTMP S LEXLT=$$MODD^ICPTMOD(LEXIEN,"LEXTMP",,LEXVDT) S LEXL=+($O(LEXTMP(" "),-1)),LEXLN=$G(LEXTMP(+LEXL))
"RTN","LEXQCM",111,0)
 S LEXM="" K:LEXL>0&(LEXLN["CODE TEXT MAY BE INACCURATE") LEXTMP(+LEXL)
"RTN","LEXQCM",112,0)
 F LEXI=1:1:2 S LEXL=+($O(LEXTMP(" "),-1)),LEXLN=$$TM^LEXQM($G(LEXTMP(+LEXL))) K:LEXL>0&('$L(LEXLN)) LEXTMP(+LEXL)
"RTN","LEXQCM",113,0)
 S LEXDDT=$O(^DIC(81.3,+LEXIEN,62,"B",(LEXVDT+.999999)),-1) S:LEXDDT'?7N LEXDDT=$O(^DIC(81.3,+LEXIEN,62,"B",0)) S:LEXDDT?7N LEXEVDT=$$SD^LEXQM(LEXDDT)
"RTN","LEXQCM",114,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX F LEXI=1:1:+($G(LEXTMP)) D
"RTN","LEXQCM",115,0)
 . Q:'$D(LEXTMP(LEXI))  S LEXT=$$TM^LEXQM($G(LEXTMP(LEXI))),LEX(LEXI)=$$UP^XLFSTR(LEXT)
"RTN","LEXQCM",116,0)
 I $L(LEXM) D
"RTN","LEXQCM",117,0)
 . N LEXT,LEXI,LEXL,LEXC S LEXL=+($O(LEX(" "),-1)),LEXC=0 S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQCM",118,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCM",119,0)
 . . S LEXT=$G(LEXT(LEXI)) S:$L(LEXT) LEXC=LEXC+1 S LEXL=LEXL+1,LEX(LEXL)=LEXT
"RTN","LEXQCM",120,0)
 S:$D(LEXTEST)&(+($G(LEXSTA))'>0) LEXEVDT="--/--/----" S:$D(LEX(1)) LEX(0)=LEXEVDT S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCM",121,0)
 Q
"RTN","LEXQCM",122,0)
WN(X,LEX,LEXLEN) ;   Warning
"RTN","LEXQCM",123,0)
 ;            
"RTN","LEXQCM",124,0)
 ; LEX=# of Lines
"RTN","LEXQCM",125,0)
 ; LEX(0)=External Date
"RTN","LEXQCM",126,0)
 ; LEX(#)=Warning
"RTN","LEXQCM",127,0)
 ;            
"RTN","LEXQCM",128,0)
 N LEXVDT,LEXIA,LEXTMP K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXIA=$$IA(LEXVDT) Q:+LEXIA'>0  S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQCM",129,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The Modifier Name and Description may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQCM",130,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQCM",131,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQCM",132,0)
 Q
"RTN","LEXQCM",133,0)
 ; Miscellaneous
"RTN","LEXQCM",134,0)
FA(X) ;   First Activation
"RTN","LEXQCM",135,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO S LEXIEN=+($G(X)) S X="",LEXSO=$P($G(^DIC(81.3,+LEXIEN,0)),"^",1) D HIST^ICPTAPIU(LEXSO,.LEXH) S LEXFA="",LEXI=0
"RTN","LEXQCM",136,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQCM",137,0)
 S X=LEXFA
"RTN","LEXQCM",138,0)
 Q X
"RTN","LEXQCM",139,0)
IA(X) ;   Inaccurate
"RTN","LEXQCM",140,0)
 N LEXBRD,LEXVDT,LEXSYS S LEXVDT=+($G(X)),LEXSYS=1,LEXVDT=$S($G(LEXVDT)="":$$DT^XLFDT,1:$$DBR(LEXVDT)),LEXBRD=3021001,X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQCM",141,0)
 Q X
"RTN","LEXQCM",142,0)
DBR(X) ;   Date Business Rules
"RTN","LEXQCM",143,0)
 N LEXVDT S LEXVDT=$G(X) Q:'$G(LEXVDT)!($P(LEXVDT,".")'?7N) $$DT^XLFDT
"RTN","LEXQCM",144,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1 S X=$S(LEXVDT<2890101:2890101,1:LEXVDT)
"RTN","LEXQCM",145,0)
 Q X
"RTN","LEXQCM",146,0)
EV(X) ;   Check environment
"RTN","LEXQCM",147,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEXQCM",148,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEXQCM",149,0)
 Q 1
"RTN","LEXQCM2")
0^65^B59164466
"RTN","LEXQCM2",1,0)
LEXQCM2 ;ISL/KER - Query - CPT Modifiers - Save ;04/21/2014
"RTN","LEXQCM2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQCM2",3,0)
 ;               
"RTN","LEXQCM2",4,0)
 ; Global Variables
"RTN","LEXQCM2",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQCM2",6,0)
 ;    ^TMP("LEXQCM"       SACC 2.3.2.5.1
"RTN","LEXQCM2",7,0)
 ;    ^TMP("LEXQCMO"      SACC 2.3.2.5.1
"RTN","LEXQCM2",8,0)
 ;               
"RTN","LEXQCM2",9,0)
 ; External References
"RTN","LEXQCM2",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQCM2",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQCM2",12,0)
 ;               
"RTN","LEXQCM2",13,0)
 ; Variables NEWed or KILLed Elsewhere
"RTN","LEXQCM2",14,0)
 ;    LEXIEN              Modifier IEN
"RTN","LEXQCM2",15,0)
 ;    LEXELDT             External Last Date
"RTN","LEXQCM2",16,0)
 ;    LEXLEN              Offset Length
"RTN","LEXQCM2",17,0)
 ;    LEXINC              Include Modifier Ranges flag
"RTN","LEXQCM2",18,0)
 ;    LEXINCI             Include Inactive Modifier Ranges flag
"RTN","LEXQCM2",19,0)
 ;    LEXINCF             Include Future Modifier Ranges flag
"RTN","LEXQCM2",20,0)
 ;    LEXGET              Array of Non-Versioned Data
"RTN","LEXQCM2",21,0)
 ;    LEXST               CPT Status and Effective Dates
"RTN","LEXQCM2",22,0)
 ;    LEXSD               Versioned Short Description
"RTN","LEXQCM2",23,0)
 ;    LEXLD               Versioned Long Description
"RTN","LEXQCM2",24,0)
 ;    LEXRAN              Number of Ranges/Comment
"RTN","LEXQCM2",25,0)
 ;    ^TMP("LEXQCM",$J,"RANGES",#)  List of Ranges
"RTN","LEXQCM2",26,0)
 ;               
"RTN","LEXQCM2",27,0)
EN ; Main Entry Point
"RTN","LEXQCM2",28,0)
 ;            
"RTN","LEXQCM2",29,0)
 K ^TMP("LEXQCMO",$J) Q:'$L($G(LEXELDT))
"RTN","LEXQCM2",30,0)
 I +($G(LEXST))<0 D FUT D:$D(^TMP("LEXQCMO",$J)) DSP^LEXQO("LEXQCMO") Q
"RTN","LEXQCM2",31,0)
 D FUL D:$D(^TMP("LEXQCMO",$J)) DSP^LEXQO("LEXQCMO")
"RTN","LEXQCM2",32,0)
 Q
"RTN","LEXQCM2",33,0)
FUT ; Future Activation
"RTN","LEXQCM2",34,0)
 N LEX1,LEX2,LEX3,LEXEFF,LEXI,LEXL,LEXNAM,LEXSO,LEXSTA S LEXI=+($G(LEXIEN)) Q:+LEXI'>0  Q:'$D(^DIC(81.3,+LEXI,0))  S LEXL=+($G(LEXLEN)) Q:+LEXL'>0
"RTN","LEXQCM2",35,0)
 S:LEXL>62 LEXL=62 S LEXSO=$G(LEXGET(81.3,(+LEXI_","),.01,"E")) Q:'$L(LEXSO)  S LEXNAM=$G(LEXGET(81.3,(+LEXI_","),"B")) Q:'$L(LEXNAM)
"RTN","LEXQCM2",36,0)
 S LEXSTA=$G(LEXST),LEXEFF=$P(LEXSTA,"^",5),LEXSTA=$P(LEXSTA,"^",4) Q:'$L(LEXSTA)  Q:'$L(LEXEFF)  S (LEX1,LEX2,LEX3)=""
"RTN","LEXQCM2",37,0)
 D BOD(LEXELDT),COD(LEXSO,LEXNAM,+($G(LEXL))),STA(.LEXST,+($G(LEXL)))
"RTN","LEXQCM2",38,0)
 Q
"RTN","LEXQCM2",39,0)
BOD(X) ;   Based on Date
"RTN","LEXQCM2",40,0)
 N LEXBOD S LEXBOD=$G(X) Q:'$L(LEXBOD)  Q:LEXBOD'["/"  S X="Display based on date:  "_LEXBOD D BL,TL(X)
"RTN","LEXQCM2",41,0)
 Q
"RTN","LEXQCM2",42,0)
COD(X,Y,LEXLEN) ;   Code Line
"RTN","LEXQCM2",43,0)
 N LEXC,LEXN,LEXT S LEXC=$G(X),LEXN=$G(Y) S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCM2",44,0)
 Q
"RTN","LEXQCM2",45,0)
STA(X,LEXLEN) ;   Status Line
"RTN","LEXQCM2",46,0)
 N LEX,LEXC,LEXI,LEXN,LEXX,LEXE,LEXS,LEXT,LEXW,LEXEFF,LEXSTA S LEXX=$G(X),LEXEFF=$P(LEXX,"^",5),LEXSTA=$P(LEXX,"^",4),LEXEFF=$TR(LEXEFF,"()","")
"RTN","LEXQCM2",47,0)
 S LEXW=$P(LEXX,"^",6),LEXT="  Status:  ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT))),LEXT=LEXT_LEXSTA
"RTN","LEXQCM2",48,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))
"RTN","LEXQCM2",49,0)
 S:LEXEFF'["future" LEXT=LEXT_"Effective:  "
"RTN","LEXQCM2",50,0)
 S LEXT=LEXT_$$UP^XLFSTR($E(LEXEFF,1))_$E(LEXEFF,2,$L(LEXEFF)) D BL,TL(LEXT)
"RTN","LEXQCM2",51,0)
 I $L(LEXW) D
"RTN","LEXQCM2",52,0)
 . N LEX,LEXT,LEXC,LEXI,LEXN S LEX(1)=LEXW D PR^LEXQM(.LEX,(+($G(LEXLEN))-7)) Q:+($O(LEX(" "),-1))'>0
"RTN","LEXQCM2",53,0)
 . S LEXT=$J(" ",((79-+($G(LEXLEN)))))
"RTN","LEXQCM2",54,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCM2",55,0)
 . . N LEXN S LEXN=$$TM^LEXQM($G(LEX(LEXI))) S:$L(LEXN) LEXC=LEXC+1 D:LEXC=1 BL D TL((LEXT_LEXN))
"RTN","LEXQCM2",56,0)
 Q
"RTN","LEXQCM2",57,0)
 ;            
"RTN","LEXQCM2",58,0)
FUL ; Full Display
"RTN","LEXQCM2",59,0)
 N LEXFUL,LEX,LEXL S LEXL=+($G(LEXLEN)) S:LEXL>62 LEXL=62
"RTN","LEXQCM2",60,0)
 S LEXFUL=""  D FUT
"RTN","LEXQCM2",61,0)
 D SD(.LEXSD,+($G(LEXL))),LD(.LEXLD,+($G(LEXL))),WN(.LEXWN,+($G(LEXL)))
"RTN","LEXQCM2",62,0)
 D:+($G(LEXRAN))>0&($L($P($G(LEXRAN),"^",2)))&($O(^TMP("LEXQCM",$J,"RANGES",0))>0) RAN(.LEXRAN,+($G(LEXL)))
"RTN","LEXQCM2",63,0)
 Q
"RTN","LEXQCM2",64,0)
SD(X,LEXLEN) ;   Short Description
"RTN","LEXQCM2",65,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Short Name: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCM2",66,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCM2",67,0)
 Q
"RTN","LEXQCM2",68,0)
LD(X,LEXLEN) ;   Long Description
"RTN","LEXQCM2",69,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Description: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCM2",70,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCM2",71,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))) S LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCM2",72,0)
 Q
"RTN","LEXQCM2",73,0)
WN(X,LEXLEN) ;   Warning
"RTN","LEXQCM2",74,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT,LEXC Q:'$D(X(1))  S LEXC=0,LEXN=$G(X(1)),LEXT="",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCM2",75,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCM2",76,0)
 Q
"RTN","LEXQCM2",77,0)
RAN(X,LEXLEN) ;   Code Ranges
"RTN","LEXQCM2",78,0)
 N LEXC,LEXH,LEXI,LEXN,LEXS,LEXT S LEXH=$G(X),LEXN=+LEXH,LEXH=$P(LEXH,"^",2) Q:+LEXN'>0  Q:'$L(LEXH)
"RTN","LEXQCM2",79,0)
 S LEXT="  Code Ranges: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXH,LEXN=$J(" ",((79-+($G(LEXLEN))))) D BL,TL(LEXT)
"RTN","LEXQCM2",80,0)
 S (LEXC,LEXI)=0 F  S LEXI=$O(^TMP("LEXQCM",$J,"RANGES",LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCM2",81,0)
 . S LEXC=LEXC+1 D:LEXC=1 BL S LEXT=$G(^TMP("LEXQCM",$J,"RANGES",LEXI)) Q:'$L(LEXT)  D TL((LEXN_LEXT))
"RTN","LEXQCM2",82,0)
 Q
"RTN","LEXQCM2",83,0)
CCR(X,LEXVDT,LEX,LEXLEN,LEXINCI,LEXINCF) ;   CPT Code Ranges
"RTN","LEXQCM2",84,0)
 ;            
"RTN","LEXQCM2",85,0)
 ; LEX=# of Ranges
"RTN","LEXQCM2",86,0)
 ; ^TMP("LEXQCM",$J,"RANGES",#)=Begin_End_Act_Inact
"RTN","LEXQCM2",87,0)
 ;            
"RTN","LEXQCM2",88,0)
 K ^TMP("LEXQCM",$J,"RAN"),^TMP("LEXQCM",$J,"RANGES")
"RTN","LEXQCM2",89,0)
 N LEXC,LEXEVDT,LEXFD,LEXFN,LEXH1,LEXH2,LEXH3,LEXIEN,LEXL,LEXN,LEXP,LEXR0,LEXRA,LEXRA1,LEXRA2,LEXRB,LEXRDA,LEXRDI,LEXRE,LEXRI,LEXRI1,LEXRI2,LEXRN,LEXRT,LEXRX,LEXT
"RTN","LEXQCM2",90,0)
 S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^DIC(81.3,+LEXIEN,0))  Q:$O(^DIC(81.3,+LEXIEN,10,0))'>0  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN))
"RTN","LEXQCM2",91,0)
 S:+LEXLEN'>0 LEXLEN=62 Q:'$L(LEXEVDT)  S LEXINCI=+($G(LEXINCI)),LEXINCF=+($G(LEXINCF)) S (LEXFD,LEXRX)=0 F  S LEXRX=$O(^DIC(81.3,+LEXIEN,10,LEXRX)) Q:+LEXRX'>0  D
"RTN","LEXQCM2",92,0)
 . S LEXR0=$G(^DIC(81.3,+LEXIEN,10,LEXRX,0)),LEXRB=$P(LEXR0,"^",1) Q:$L(LEXRB)'=5  S LEXRE=$P(LEXR0,"^",2) S:$L(LEXRB)&('$L(LEXRE)) LEXRE=LEXRB Q:$L(LEXRE)'=5
"RTN","LEXQCM2",93,0)
 . S LEXRA=$P(LEXR0,"^",3) Q:LEXRA'?7N  S LEXRI=$P(LEXR0,"^",4) Q:+LEXRA>0&(LEXVDT<+($G(LEXRA)))&(+($G(LEXINCF))'>0)  Q:+LEXRI>0&(LEXVDT>+($G(LEXRI)))&(+($G(LEXINCI))'>0)
"RTN","LEXQCM2",94,0)
 . S LEXRN=$$NUM(LEXRB),LEXRT=LEXRB_"^"_LEXRE_"^"_LEXRA_"^"_LEXRI,LEXRA1=$S(LEXVDT<LEXRA:"<",1:" "),LEXRA2=$S(LEXVDT<LEXRA:">",1:" ")
"RTN","LEXQCM2",95,0)
 . S LEXRI1=$S(LEXVDT<LEXRI:"<",1:" "),LEXRI2=$S(LEXVDT<LEXRI:">",1:" ") S:LEXRA1["<"!(LEXRA2[">")!(LEXRI1["<")!(LEXRI2[">") LEXFD=1
"RTN","LEXQCM2",96,0)
 . S LEXRDA=$S($L(LEXRA):(LEXRA1_$$SD^LEXQM(LEXRA)_LEXRA2),1:""),LEXRDI=$S($L(LEXRI):(LEXRI1_$$SD^LEXQM(LEXRI)_LEXRI2),1:"")
"RTN","LEXQCM2",97,0)
 . S ^TMP("LEXQCM",$J,"RAN",LEXRN,LEXRT)=LEXRB_"    "_LEXRE_"   "_LEXRDA_"  "_LEXRDI
"RTN","LEXQCM2",98,0)
 S LEXH1="CPT Code Range         Effective Dates",LEXH2="Begin     End       Active       Inactive",LEXH3="-----    -----    ----------    ----------"
"RTN","LEXQCM2",99,0)
 K LEX S (LEX,LEXL,LEXC,LEXRN)=0 S LEXFN="" S:+($G(LEXFD))>0 LEXFN="   Future dates indicated as  '<mm/dd/yyyy>'"
"RTN","LEXQCM2",100,0)
 S LEXC=0 F  S LEXRN=$O(^TMP("LEXQCM",$J,"RAN",LEXRN)) Q:+LEXRN'>0  S LEXRT="" F  S LEXRT=$O(^TMP("LEXQCM",$J,"RAN",LEXRN,LEXRT)) Q:'$L(LEXRT)  D
"RTN","LEXQCM2",101,0)
 . S LEXT=$G(^TMP("LEXQCM",$J,"RAN",LEXRN,LEXRT)) Q:'$L(LEXT)  S LEXC=LEXC+1 I LEXC=1 D
"RTN","LEXQCM2",102,0)
 . . S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)=LEXH1 S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)=LEXH2
"RTN","LEXQCM2",103,0)
 . . S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)=LEXH3 S ^TMP("LEXQCM",$J,"RANGES",0)=LEXN
"RTN","LEXQCM2",104,0)
 . S LEX=+($G(LEX))+1 S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)=LEXT,^TMP("LEXQCM",$J,"RANGES",0)=LEXN
"RTN","LEXQCM2",105,0)
 I $L(LEXFN) D
"RTN","LEXQCM2",106,0)
 . S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)="      ",^TMP("LEXQCM",$J,"RANGES",0)=LEXN
"RTN","LEXQCM2",107,0)
 . S LEXN=$O(^TMP("LEXQCM",$J,"RANGES"," "),-1)+1,^TMP("LEXQCM",$J,"RANGES",LEXN)=LEXFN,^TMP("LEXQCM",$J,"RANGES",0)=LEXN
"RTN","LEXQCM2",108,0)
 K ^TMP("LEXQCM",$J,"RAN") S LEXT="" I +LEX>0 D
"RTN","LEXQCM2",109,0)
 . N LEXP,LEXT S LEXP=$S(+LEX>1:"s",1:""),LEXT="" S:+($G(LEXINCI))>0&(+($G(LEXINCF))>0) LEXT=+LEX_" Current and future Active or Inactive range"_LEXP_" found"
"RTN","LEXQCM2",110,0)
 . S:+($G(LEXINCI))>0&(+($G(LEXINCF))'>0) LEXT=+LEX_" Currently Active or Inactive range"_LEXP_" found" S:+($G(LEXINCI))'>0&(+($G(LEXINCF))>0) LEXT=+LEX_" Current and future Active range"_LEXP_" found"
"RTN","LEXQCM2",111,0)
 . S:+($G(LEXINCI))'>0&(+($G(LEXINCF))'>0) LEXT=+LEX_" Currently Active range"_LEXP_" found" S:$L(LEXT) LEX=LEX_"^"_LEXT
"RTN","LEXQCM2",112,0)
 Q
"RTN","LEXQCM2",113,0)
 ;
"RTN","LEXQCM2",114,0)
 ; Miscellaneous
"RTN","LEXQCM2",115,0)
BL ;   Blank Line
"RTN","LEXQCM2",116,0)
 D TL(" ") Q
"RTN","LEXQCM2",117,0)
TL(X) ;   Text Line
"RTN","LEXQCM2",118,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQCM2",119,0)
 N LEXI S LEXI=+($O(^TMP("LEXQCMO",$J," "),-1))+1 S ^TMP("LEXQCMO",$J,LEXI)=$G(X),^TMP("LEXQCMO",$J,0)=LEXI
"RTN","LEXQCM2",120,0)
 Q
"RTN","LEXQCM2",121,0)
NUM(X) ;   Convert Code to Numeric
"RTN","LEXQCM2",122,0)
 Q $S(X?1.N:+X,X?4N1A:$A($E(X,5))*10_$E(X,1,4),1:$A(X)_$E(X,2,5))
"RTN","LEXQCM2",123,0)
CLR ;   Clear
"RTN","LEXQCM2",124,0)
 N LEXELDT,LEXGET,LEXLD,LEXRAN,LEXSD,LEXST,LEXTEST,LEXWN
"RTN","LEXQCM2",125,0)
 Q
"RTN","LEXQCP")
0^66^B79602950
"RTN","LEXQCP",1,0)
LEXQCP ;ISL/KER - Query - CPT Procedures - Extract ;04/21/2014
"RTN","LEXQCP",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQCP",3,0)
 ;               
"RTN","LEXQCP",4,0)
 ; Global Variables
"RTN","LEXQCP",5,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQCP",6,0)
 ;               
"RTN","LEXQCP",7,0)
 ; External References
"RTN","LEXQCP",8,0)
 ;    $$CPTD^ICPTCOD      ICR   1995
"RTN","LEXQCP",9,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQCP",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQCP",11,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQCP",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQCP",13,0)
 ;    GETS^DIQ            ICR   2056
"RTN","LEXQCP",14,0)
 ;               
"RTN","LEXQCP",15,0)
EN ; Main Entry Point
"RTN","LEXQCP",16,0)
 N LEXENV S LEXENV=$$EV^LEXQM Q:+LEXENV'>0
"RTN","LEXQCP",17,0)
 N LEXAD,LEXEDT,LEXCDT,LEXEXIT,LEXTEST S LEXEXIT=0,LEXCDT=""
"RTN","LEXQCP",18,0)
 W ! F  S LEXCDT=$$AD^LEXQM,LEXAD=LEXCDT Q:'$L(LEXCDT)  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2) Q:LEXCDT'?7N  D LOOK Q:LEXCDT'?7N  Q:+LEXEXIT>0
"RTN","LEXQCP",19,0)
 Q
"RTN","LEXQCP",20,0)
LOOK ; CPT Lookup Loop
"RTN","LEXQCP",21,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S LEXCDT="" Q
"RTN","LEXQCP",22,0)
 N LEXCPT,LEXCPTC S LEXLEN=62
"RTN","LEXQCP",23,0)
 F  S LEXCPT=$$CPT^LEXQCPA S:LEXCPT="^^" LEXEXIT=1 Q:LEXCPT="^"!(LEXCPT="^^")  D  Q:LEXCPT="^"!(LEXCPT="^^")
"RTN","LEXQCP",24,0)
 . K LEXGET,LEXST,LEXSD,LEXLD,LEXMD,LEXLX,LEXWN N LEXIEN,LEXLDT,LEXELDT,LEXINC,LEXFA
"RTN","LEXQCP",25,0)
 . S LEXIEN=+($G(LEXCPT)),LEXLDT=+($G(LEXCDT)),LEXFA=$$FA^LEXQCP2(+LEXIEN)
"RTN","LEXQCP",26,0)
 . Q:+LEXIEN'>0  Q:LEXLDT'?7N  S LEXELDT=$$SD^LEXQM(LEXLDT) Q:'$L(LEXELDT)
"RTN","LEXQCP",27,0)
 . S LEXINC=0 I LEXFA?7N,LEXCDT?7N,LEXFA'>LEXCDT D
"RTN","LEXQCP",28,0)
 . . S LEXINC=$$INC^LEXQCPA Q:LEXINC["^"
"RTN","LEXQCP",29,0)
 . D CSV,EN^LEXQCP2
"RTN","LEXQCP",30,0)
 Q
"RTN","LEXQCP",31,0)
CSV ; Code Set Versioning Display
"RTN","LEXQCP",32,0)
 N LEXEDT,LEXIEN,LEXIENS,LEXLTXT,LEXSO,LEXSTAT
"RTN","LEXQCP",33,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S (LEXCPT,LEXCDT)="" Q
"RTN","LEXQCP",34,0)
 S LEXIEN=+($G(LEXCPT)),LEXSO=$P($G(LEXCPT),"^",2),LEXLTXT=$P($G(LEXCPT),"^",3) Q:+LEXIEN'>0  Q:'$L(LEXSO)
"RTN","LEXQCP",35,0)
 ;
"RTN","LEXQCP",36,0)
 ; Get the "Unversioned" Fields
"RTN","LEXQCP",37,0)
 ;   
"RTN","LEXQCP",38,0)
 ;   CPT Code                    Field .01
"RTN","LEXQCP",39,0)
 ;   CPT Major Category          Field 3
"RTN","LEXQCP",40,0)
 ;   CPT Sub-Category            Field 3
"RTN","LEXQCP",41,0)
 ;   Age Low                     Field 10.01
"RTN","LEXQCP",42,0)
 ;   Age High                    Field 10.02
"RTN","LEXQCP",43,0)
 ;   Sex                         Field 10.03
"RTN","LEXQCP",44,0)
 ;
"RTN","LEXQCP",45,0)
 S LEXIENS=LEXIEN_"," D GETS^DIQ(81,LEXIENS,".01;3;10.01;10.02;10.03","IE","LEXGET","LEXMSG")
"RTN","LEXQCP",46,0)
 I $G(LEXGET(81,LEXIENS,3,"I"))>0,$L($G(LEXGET(81,LEXIENS,3,"I"))) D
"RTN","LEXQCP",47,0)
 . S LEXGET(81,LEXIENS,3,2)=$$GET1^DIQ(81.1,(+($G(LEXGET(81,LEXIENS,3,"I")))_","),.01)
"RTN","LEXQCP",48,0)
 . S LEXGET(81,LEXIENS,3,1)=$$GET1^DIQ(81.1,(+($G(LEXGET(81,LEXIENS,3,"I")))_","),3)
"RTN","LEXQCP",49,0)
 . I $L($G(LEXGET(81,LEXIENS,3,2))),'$L($G(LEXGET(81,LEXIENS,3,1))) S LEXGET(81,LEXIENS,3,1)=$G(LEXGET(81,LEXIENS,3,2)) K LEXGET(81,LEXIENS,3,2)
"RTN","LEXQCP",50,0)
 . I $G(LEXGET(81,LEXIENS,3,2))=$G(LEXGET(81,LEXIENS,3,1)) K LEXGET(81,LEXIENS,3,2)
"RTN","LEXQCP",51,0)
 . I '$L($G(LEXGET(81,LEXIENS,3,2))),'$L($G(LEXGET(81,LEXIENS,3,1))) K LEXGET(81,LEXIENS,3,1),LEXGET(81,LEXIENS,3,2)
"RTN","LEXQCP",52,0)
 ; Get the "Versioned" Fields
"RTN","LEXQCP",53,0)
 ;                
"RTN","LEXQCP",54,0)
 ;   Effective Date and Status   Sub-File 81.02   (60)
"RTN","LEXQCP",55,0)
 S LEXST=$$EF(+($G(LEXIEN)),+LEXCDT),LEXSTAT=+($P(LEXST,"^",2))
"RTN","LEXQCP",56,0)
 ;   Procedure Name              Sub-File 81.061  (61)
"RTN","LEXQCP",57,0)
 D SDS(+($G(LEXIEN)),+LEXCDT,.LEXSD,62,LEXSTAT)
"RTN","LEXQCP",58,0)
 ;   Description                 Sub-File 81.062  (62)
"RTN","LEXQCP",59,0)
 D LDS(+($G(LEXIEN)),+LEXCDT,.LEXLD,62,LEXSTAT)
"RTN","LEXQCP",60,0)
 ;   Lexicon Expression          
"RTN","LEXQCP",61,0)
 D LX(+($G(LEXIEN)),+LEXCDT,.LEXLX,62,LEXSTAT)
"RTN","LEXQCP",62,0)
 D WN^LEXQCP2(+LEXCDT,.LEXWN,62)
"RTN","LEXQCP",63,0)
 D MOD^LEXQCP2(+($G(LEXIEN)),+LEXCDT,.LEXMD,62,LEXSTAT)
"RTN","LEXQCP",64,0)
 Q
"RTN","LEXQCP",65,0)
 ;            
"RTN","LEXQCP",66,0)
EF(X,LEXCDT) ; Effective Dates
"RTN","LEXQCP",67,0)
 N LEX,LEXBRD,LEXBRW,LEXAD,LEXEE,LEXEF,LEXES,LEXFA,LEXH,LEXI,LEXID,LEXIEN,LEXLS,LEXSO,LEXST S LEXIEN=+($G(X)),LEXCDT=+($G(LEXCDT))
"RTN","LEXQCP",68,0)
 Q:+LEXIEN'>0 "^^"  Q:'$L(^ICPT(+LEXIEN,0)) "^^"  Q:LEXCDT'?7N "^^"  S LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1),LEXBRD=2890101,LEXBRW=""
"RTN","LEXQCP",69,0)
 S LEX=$$CPT^ICPTCOD(LEXSO,LEXCDT) S LEXFA=$$FA^LEXQCP2(+LEXIEN) S (LEXLS,LEXST)=$P(LEX,"^",7),LEXID=$P(LEX,"^",8)
"RTN","LEXQCP",70,0)
 S:LEXCDT<LEXBRD&(+LEXFA=LEXBRD) LEXBRW="Warning:  The 'Based on Date' provided precedes the initial Code Set Business Rule date of "_$$SD^LEXQM(LEXBRD)_", the Effective date may be inaccurate."
"RTN","LEXQCP",71,0)
 S LEXAD=$P(LEX,"^",9),LEXES=$S(+LEXST>0:"Active",1:"Inactive")
"RTN","LEXQCP",72,0)
 S:+LEXST'>0&(+LEXAD'>0) LEXES="Not Applicable",LEXLS=-1
"RTN","LEXQCP",73,0)
 S:+LEXFA>0&(+LEXCDT>0)&(LEXFA>LEXCDT) LEXES="Pending",LEXLS=-1,LEXST=0,LEXBRW=""
"RTN","LEXQCP",74,0)
 S:LEXST>0 LEXEF=LEXAD S:LEXST'>0 LEXEF=LEXID
"RTN","LEXQCP",75,0)
 S:LEXST'>0&(+LEXID'>0) LEXEF=LEXFA S LEXEE=$$SD^LEXQM(LEXEF)
"RTN","LEXQCP",76,0)
 I LEXST'>0,+LEXID'>0,$L(LEXEE),+LEXEF>LEXCDT S LEXEE="(future activation of "_LEXEE_")",LEXEF=""
"RTN","LEXQCP",77,0)
 S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQCP",78,0)
 Q X
"RTN","LEXQCP",79,0)
 ;            
"RTN","LEXQCP",80,0)
SDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Procedure Name (short description)
"RTN","LEXQCP",81,0)
 ;            
"RTN","LEXQCP",82,0)
 ; LEX=# of Lines
"RTN","LEXQCP",83,0)
 ; LEX(0)=External Date of Procedure Name
"RTN","LEXQCP",84,0)
 ; LEX(#)=Procedure Name
"RTN","LEXQCP",85,0)
 ;            
"RTN","LEXQCP",86,0)
 N LEXD,LEXBRD,LEXBRW,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA,LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLAST,LEXLEF,LEXLHI,LEXM,LEXR,LEXSDT,LEXSO,LEXLSD,LEXT
"RTN","LEXQCP",87,0)
 S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^ICPT(+LEXIEN,61))  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQCP",88,0)
 S LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1),LEXLAST=$$CPT^ICPTCOD(LEXSO),LEXLSD=$P(LEXLAST,"^",3),LEXBRD=2890101,LEXBRW=""
"RTN","LEXQCP",89,0)
 S:$D(LEXGET)&($L(LEXLSD)) LEXGET(81,(+LEXIEN_","),"B")=LEXLSD
"RTN","LEXQCP",90,0)
 S LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62 S LEXFA=$$FA^LEXQCP2(+LEXIEN),LEXM=""
"RTN","LEXQCP",91,0)
 S LEXM="" S:+LEXVDT<LEXFA&(LEXFA'=LEXBRD) LEXM="Procedure Short Name is not available.  The date provided precedes the initial activation of the code"
"RTN","LEXQCP",92,0)
 I $L(LEXM) D  Q
"RTN","LEXQCP",93,0)
 . K LEX N LEXT,LEXI S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQCP",94,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQCP",95,0)
 . S:$D(LEX(1)) LEX(0)="--/--/----" S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCP",96,0)
 S LEXM="" S LEXEFF=$O(^ICPT(LEXIEN,61,"B",(LEXVDT+.001)),-1),LEXHIS=$O(^ICPT(LEXIEN,61,"B",+LEXEFF," "),-1),LEXSDT=$P($G(^ICPT(+LEXIEN,61,+LEXHIS,0)),"^",2)
"RTN","LEXQCP",97,0)
 S LEXLEF=$O(^ICPT(LEXIEN,61,"B",(9999999+.001)),-1),LEXLHI=$O(^ICPT(LEXIEN,61,"B",+LEXLEF," "),-1),LEXDDT=$P($G(^ICPT(+LEXIEN,61,+LEXLHI,0)),"^",2)
"RTN","LEXQCP",98,0)
 S (LEXD,LEXE,LEXR)="" S:$L(LEXSDT)&(LEXEFF?7N) LEXD=LEXSDT,LEXE=LEXEFF
"RTN","LEXQCP",99,0)
 S:$L(LEXDDT)&(LEXLEF?7N)&('$L(LEXD))&('$L(LEXE)) LEXD=LEXDDT,LEXE=LEXLEF,LEXR="No Text Available for Date Provided"
"RTN","LEXQCP",100,0)
 K LEX S LEX(1)=LEXD S:$L(LEXD) LEXGET(81,(+LEXIEN_","),"B")=LEXD
"RTN","LEXQCP",101,0)
 S LEXEE=$$SD^LEXQM(LEXE) S:$D(LEXTEST)&(+LEXSTA'>0) LEXEE="--/--/----" S:$L(LEX(1)) LEX(0)=LEXEE
"RTN","LEXQCP",102,0)
 S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCP",103,0)
 Q
"RTN","LEXQCP",104,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Long Description
"RTN","LEXQCP",105,0)
 ;            
"RTN","LEXQCP",106,0)
 ; LEX=# of Lines
"RTN","LEXQCP",107,0)
 ; LEX(0)=External Date of Description
"RTN","LEXQCP",108,0)
 ; LEX(#)=Description
"RTN","LEXQCP",109,0)
 ; LEX(#)=Description continued
"RTN","LEXQCP",110,0)
 ;            
"RTN","LEXQCP",111,0)
 N LEXC,LEXBRD,LEXBRW,LEXDDT,LEXEVDT,LEXFA,LEXI,LEXIEN,LEXL,LEXLN,LEXM,LEXT,LEXSO,LEXTL,LEXTMP S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^ICPT(+LEXIEN,62))
"RTN","LEXQCP",112,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62
"RTN","LEXQCP",113,0)
 S LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1) S LEXFA=$$FA^LEXQCP2(+LEXIEN),LEXM="" S LEXSTA=+($G(LEXSTA)),LEXBRD=2890101,LEXBRW=""
"RTN","LEXQCP",114,0)
 S LEXM="" S:+LEXVDT<LEXFA&(LEXFA'=LEXBRD) LEXM="Description is not available.  The date provided precedes the initial activation of the code"
"RTN","LEXQCP",115,0)
 I $L(LEXM) D  Q
"RTN","LEXQCP",116,0)
 . K LEX N LEXT,LEXI S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7)) S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQCP",117,0)
 . S:$D(LEX(1)) LEX(0)="--/--/----" S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCP",118,0)
 K LEXTMP S LEXTL=$$CPTD^ICPTCOD(LEXSO,"LEXTMP",,LEXVDT) S LEXL=+($O(LEXTMP(" "),-1)),LEXLN=$G(LEXTMP(+LEXL))
"RTN","LEXQCP",119,0)
 S LEXM="" K:LEXL>0&(LEXLN["CODE TEXT MAY BE INACCURATE") LEXTMP(+LEXL)
"RTN","LEXQCP",120,0)
 F LEXI=1:1:2 S LEXL=+($O(LEXTMP(" "),-1)),LEXLN=$$TM^LEXQM($G(LEXTMP(+LEXL))) K:LEXL>0&('$L(LEXLN)) LEXTMP(+LEXL)
"RTN","LEXQCP",121,0)
 S LEXDDT=$O(^ICPT(+LEXIEN,62,"B",(LEXVDT+.999999)),-1) S:LEXDDT'?7N LEXDDT=$O(^ICPT(+LEXIEN,62,"B",0)) S:LEXDDT?7N LEXEVDT=$$SD^LEXQM(LEXDDT)
"RTN","LEXQCP",122,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX F LEXI=1:1:13 D
"RTN","LEXQCP",123,0)
 . Q:'$D(LEXTMP(LEXI))  S LEXT=$$TM^LEXQM($G(LEXTMP(LEXI))),LEX(LEXI)=$$UP^XLFSTR(LEXT)
"RTN","LEXQCP",124,0)
 I $L(LEXM) D
"RTN","LEXQCP",125,0)
 . N LEXT,LEXI,LEXL,LEXC S LEXL=+($O(LEX(" "),-1)),LEXC=0 S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQCP",126,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCP",127,0)
 . . S LEXT=$G(LEXT(LEXI)) S:$L(LEXT) LEXC=LEXC+1 S LEXL=LEXL+1,LEX(LEXL)=LEXT
"RTN","LEXQCP",128,0)
 S:$D(LEXTEST)&(+LEXSTA'>0) LEXEVDT="--/--/----" S:$D(LEX(1)) LEX(0)=LEXEVDT S LEX=+($O(LEX(" "),-1))
"RTN","LEXQCP",129,0)
 Q
"RTN","LEXQCP",130,0)
LX(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Lexicon Expression
"RTN","LEXQCP",131,0)
 ;            
"RTN","LEXQCP",132,0)
 ; LEX=# of Lines
"RTN","LEXQCP",133,0)
 ; LEX(0)=External Date of Expression
"RTN","LEXQCP",134,0)
 ; LEX(#)=Expression
"RTN","LEXQCP",135,0)
 ; LEX(#)=Expression continued
"RTN","LEXQCP",136,0)
 ;            
"RTN","LEXQCP",137,0)
 N LEXEF,LEXEVDT,LEXLEX,LEXEE,LEXFA,LEXI,LEXIA,LEXIEN,LEXLEF,LEXLHS,LEXLST,LEXM,LEXN0,LEXPF,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXVTMP
"RTN","LEXQCP",138,0)
 S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^ICPT(+LEXIEN,0))  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQCP",139,0)
 S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62  Q:'$L(LEXEVDT)
"RTN","LEXQCP",140,0)
 S LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1) Q:'$L(LEXSO)  S LEXFA=$$FA^LEXQCP2(+LEXIEN),LEXM="",LEXIA=$$IA(LEXVDT)
"RTN","LEXQCP",141,0)
 S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQCP",142,0)
 . N LEXN0 S LEXN0=$G(^LEX(757.02,+LEXSIEN,0)),LEXSAB=$P(LEXN0,"^",3)
"RTN","LEXQCP",143,0)
 . Q:"^3^4^"'[("^"_LEXSAB_"^")  S LEXPF=+($P(LEXN0,"^",5)) S LEXLEF=$O(^LEX(757.02,+LEXSIEN,4,"B",(LEXVDT+.99999)),-1) I LEXLEF?7N D
"RTN","LEXQCP",144,0)
 . . S LEXLHS=$O(^LEX(757.02,+LEXSIEN,4,"B",+LEXLEF," "),-1) I +LEXLHS>0 D
"RTN","LEXQCP",145,0)
 . . . S LEXLST=$G(^LEX(757.02,+LEXSIEN,4,+LEXLHS,0)),LEXLST=$P(LEXLST,"^",2)
"RTN","LEXQCP",146,0)
 . . . S:LEXLST>0 LEXVTMP(+LEXPF,LEXSIEN)=+LEXN0_"^"_LEXLEF
"RTN","LEXQCP",147,0)
 S (LEXLEX,LEXEF)="",LEXSIEN=$O(LEXVTMP(1,0)),LEXLEX=+($G(LEXVTMP(1,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(1,+LEXSIEN)),"^",2)
"RTN","LEXQCP",148,0)
 S:+LEXSIEN'>0!(+LEXLEX'>0) LEXSIEN=$O(LEXVTMP(0,0)),LEXLEX=+($G(LEXVTMP(0,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(0,+LEXSIEN)),"^",2)
"RTN","LEXQCP",149,0)
 K LEX I +LEXLEX>0,$L($G(^LEX(757.01,+LEXLEX,0))),$L(LEXEF),LEXEF?7N  D  Q
"RTN","LEXQCP",150,0)
 . K LEX N LEXT,LEXM,LEXI S LEXT(1)=$G(^LEX(757.01,+LEXLEX,0)) D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQCP",151,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S:$L($G(LEXT(LEXI))) LEX(+LEXI)=$G(LEXT(LEXI))
"RTN","LEXQCP",152,0)
 . S LEX=+($O(LEX(" "),-1)) S LEXEE=$$SD^LEXQM(LEXEF) S:$D(LEXTEST)&(+LEXSTA'>0) LEXEE="--/--/----" S LEX(0)=LEXEE
"RTN","LEXQCP",153,0)
 Q
"RTN","LEXQCP",154,0)
 ; Miscellaneous
"RTN","LEXQCP",155,0)
IA(X) ;   Inaccurate
"RTN","LEXQCP",156,0)
 N LEXBRD,LEXVDT,LEXSYS S LEXVDT=+($G(X)),LEXSYS=1,LEXVDT=$S($G(LEXVDT)="":$$DT^XLFDT,1:$$DBR(LEXVDT)),LEXBRD=3021001,X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQCP",157,0)
 Q X
"RTN","LEXQCP",158,0)
DBR(X) ;   Date Business Rules
"RTN","LEXQCP",159,0)
 N LEXVDT S LEXVDT=$G(X) Q:'$G(LEXVDT)!($P(LEXVDT,".")'?7N) $$DT^XLFDT
"RTN","LEXQCP",160,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1 S X=$S(LEXVDT<2890101:2890101,1:LEXVDT)
"RTN","LEXQCP",161,0)
 Q X
"RTN","LEXQCP2")
0^67^B57182153
"RTN","LEXQCP2",1,0)
LEXQCP2 ;ISL/KER - Query - CPT Procedures - Save ;04/21/2014
"RTN","LEXQCP2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQCP2",3,0)
 ;               
"RTN","LEXQCP2",4,0)
 ; Global Variables
"RTN","LEXQCP2",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQCP2",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQCP2",7,0)
 ;    ^TMP("LEXQCPO")     SACC 2.3.2.5.1
"RTN","LEXQCP2",8,0)
 ;               
"RTN","LEXQCP2",9,0)
 ; External References
"RTN","LEXQCP2",10,0)
 ;    HIST^ICPTAPIU       ICR   1997
"RTN","LEXQCP2",11,0)
 ;    $$MODA^ICPTMOD      ICR   1996
"RTN","LEXQCP2",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQCP2",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQCP2",14,0)
 ;               
"RTN","LEXQCP2",15,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQCP2",16,0)
 ;     LEXIEN             CPT Internal Entry Number
"RTN","LEXQCP2",17,0)
 ;     LEXLEN             Offset Length
"RTN","LEXQCP2",18,0)
 ;     LEXGET             Array of Non-Versioned Data
"RTN","LEXQCP2",19,0)
 ;     LEXST              CPT Status and Effective Dates
"RTN","LEXQCP2",20,0)
 ;     LEXSD              Versioned Short Description
"RTN","LEXQCP2",21,0)
 ;     LEXLD              Versioned Long Description
"RTN","LEXQCP2",22,0)
 ;     LEXMD              Versioned Modifiers
"RTN","LEXQCP2",23,0)
 ;     LEXLX              Versioned Lexicon Term
"RTN","LEXQCP2",24,0)
 ;     LEXWN              Warning
"RTN","LEXQCP2",25,0)
 ;     LEXINC             Flag to Display Modifiers
"RTN","LEXQCP2",26,0)
 ;     LEXELDT            External Last Date
"RTN","LEXQCP2",27,0)
 ;               
"RTN","LEXQCP2",28,0)
EN ; Main Entry Point
"RTN","LEXQCP2",29,0)
 K ^TMP("LEXQCPO",$J) Q:'$L($G(LEXELDT))  I +($G(LEXST))<0 D FUT D:$D(^TMP("LEXQCPO",$J)) DSP^LEXQO("LEXQCPO") Q
"RTN","LEXQCP2",30,0)
 D FUL D:$D(^TMP("LEXQCPO",$J)) DSP^LEXQO("LEXQCPO")
"RTN","LEXQCP2",31,0)
 Q
"RTN","LEXQCP2",32,0)
FUT ; Future Activation
"RTN","LEXQCP2",33,0)
 N LEX1,LEX2,LEX3,LEXEFF,LEXI,LEXL,LEXNAM,LEXSO,LEXSTA S LEXI=+($G(LEXIEN)) Q:+LEXI'>0  Q:'$D(^ICPT(+LEXI,0))  S LEXL=+($G(LEXLEN)) Q:+LEXL'>0
"RTN","LEXQCP2",34,0)
 S:LEXL>62 LEXL=62 S LEXSO=$G(LEXGET(81,(+LEXI_","),.01,"E")) Q:'$L(LEXSO)  S LEXNAM=$G(LEXGET(81,(+LEXI_","),"B")) Q:'$L(LEXNAM)
"RTN","LEXQCP2",35,0)
 S LEXSTA=$G(LEXST),LEXEFF=$P(LEXSTA,"^",5),LEXSTA=$P(LEXSTA,"^",4) Q:'$L(LEXSTA)  Q:'$L(LEXEFF)  S (LEX1,LEX2,LEX3)=""
"RTN","LEXQCP2",36,0)
 D BOD(LEXELDT),COD(LEXSO,LEXNAM,+($G(LEXL))),STA(.LEXST,+($G(LEXL)))
"RTN","LEXQCP2",37,0)
 Q
"RTN","LEXQCP2",38,0)
BOD(X) ;   Based on Date
"RTN","LEXQCP2",39,0)
 N LEXBOD,LEXT S LEXBOD=$G(X),LEXT="Display based on date:  "_LEXBOD D BL,TL(LEXT)
"RTN","LEXQCP2",40,0)
 Q
"RTN","LEXQCP2",41,0)
COD(X,Y,LEXLEN) ;   Code Line
"RTN","LEXQCP2",42,0)
 N LEXC,LEXN,LEXT S LEXC=$G(X),LEXN=$G(Y),LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",43,0)
 Q
"RTN","LEXQCP2",44,0)
STA(X,LEXLEN) ;   Status Line
"RTN","LEXQCP2",45,0)
 N LEX,LEXC,LEXI,LEXN,LEXX,LEXE,LEXS,LEXT,LEXW,LEXEFF,LEXSTA S LEXX=$G(X),LEXEFF=$P(LEXX,"^",5),LEXSTA=$P(LEXX,"^",4),LEXEFF=$TR(LEXEFF,"()","")
"RTN","LEXQCP2",46,0)
 S LEXW=$P(LEXX,"^",6),LEXT="  Status:  ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT))),LEXT=LEXT_LEXSTA
"RTN","LEXQCP2",47,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))
"RTN","LEXQCP2",48,0)
 S:LEXEFF'["future" LEXT=LEXT_"Effective:  "
"RTN","LEXQCP2",49,0)
 S LEXT=LEXT_$$UP^XLFSTR($E(LEXEFF,1))_$E(LEXEFF,2,$L(LEXEFF)) D BL,TL(LEXT)
"RTN","LEXQCP2",50,0)
 I $L(LEXW) D
"RTN","LEXQCP2",51,0)
 . N LEX,LEXT,LEXC,LEXI,LEXN S LEX(1)=LEXW D PR^LEXQM(.LEX,(+($G(LEXLEN))-7)) Q:+($O(LEX(" "),-1))'>0
"RTN","LEXQCP2",52,0)
 . S LEXT=$J(" ",((79-+($G(LEXLEN)))))
"RTN","LEXQCP2",53,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCP2",54,0)
 . . N LEXN S LEXN=$$TM^LEXQM($G(LEX(LEXI))) S:$L(LEXN) LEXC=LEXC+1 D:LEXC=1 BL D TL((LEXT_LEXN))
"RTN","LEXQCP2",55,0)
 Q
"RTN","LEXQCP2",56,0)
FUL ; Full Display
"RTN","LEXQCP2",57,0)
 N LEXFUL,LEX,LEXL S LEXL=+($G(LEXLEN)) S:LEXL>62 LEXL=62
"RTN","LEXQCP2",58,0)
 S LEXFUL=""  D FUT,CAT(+($G(LEXIEN)),+($G(LEXL))),LIM(+($G(LEXIEN)),+($G(LEXL)))
"RTN","LEXQCP2",59,0)
 D SD(.LEXSD,+($G(LEXL))),LD(.LEXLD,+($G(LEXL))),LX(.LEXLX,+($G(LEXL))),WR(.LEXWN,+($G(LEXL)))
"RTN","LEXQCP2",60,0)
 D:+($G(LEXINC))>0 MD(.LEXMD,+($G(LEXL)))
"RTN","LEXQCP2",61,0)
 Q
"RTN","LEXQCP2",62,0)
CAT(X,LEXLEN) ;   CPT Categories
"RTN","LEXQCP2",63,0)
 N LEXI,LEX1,LEX2,LEXT,LEXH1,LEXH2,LEXV1,LEXV2,LEXT,LEXTC S LEXI=+($G(X)),LEX1=$G(LEXGET(81,(+LEXI_","),3,1)),LEX2=$G(LEXGET(81,(+LEXI_","),3,2)) Q:'$L((LEX1_LEX2))
"RTN","LEXQCP2",64,0)
 S LEXT="  Categories: " S:$L(LEX1)&('$L(LEX2)) LEXT="  Category: " S:'$L(LEX1)&($L(LEX2)) LEXT="  Category: " S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))
"RTN","LEXQCP2",65,0)
 S:$L(LEX1)&($L(LEX2)) LEXH1="Major Category:   "_LEX1,LEXH2="Sub-Category:     "_LEX2 S LEXH2=$J(" ",(79-+($G(LEXLEN))))_$G(LEXH2) S:$L(LEX1)&('$L(LEX2)) LEXH1=LEX1,LEXH2=""
"RTN","LEXQCP2",66,0)
 S:'$L(LEX1)&('$L(LEX2)) LEXH1="",LEXH2="" S LEX=LEXT_LEXH1_"^"_LEXH2
"RTN","LEXQCP2",67,0)
 D:$L($P(LEX,"^",1))!($L($P(LEX,"^",2))) BL D:$L($P(LEX,"^",1)) TL($P(LEX,"^",1)) D:$L($P(LEX,"^",2)) TL($P(LEX,"^",2))
"RTN","LEXQCP2",68,0)
 Q
"RTN","LEXQCP2",69,0)
LIM(X,LEXLEN) ;   Limitations
"RTN","LEXQCP2",70,0)
 N LEXI,LEXH,LEXL,LEXS,LEXT S LEXI=+($G(X)),LEXL=$G(LEXGET(81,(+LEXI_","),10.01,"E")) S:'$L(LEXL) LEXL="N/A"
"RTN","LEXQCP2",71,0)
 S LEXH=$G(LEXGET(81,(+LEXI_","),10.02,"E")) S:'$L(LEXH) LEXH="N/A" S LEXS=$G(LEXGET(81,(+LEXI_","),10.03,"E")) S:'$L(LEXS) LEXS="N/A"
"RTN","LEXQCP2",72,0)
 Q:(LEXH_LEXL_LEXS)="N/AN/AN/A"  S LEXT="  Limitations: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_"Age Low:  "_LEXL
"RTN","LEXQCP2",73,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))_"Age High:  "_LEXH,LEXT=LEXT_$J(" ",(56-$L(LEXT)))_"Sex:  "_LEXS D BL,TL(LEXT)
"RTN","LEXQCP2",74,0)
 Q
"RTN","LEXQCP2",75,0)
SD(X,LEXLEN) ;   Short Description
"RTN","LEXQCP2",76,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Short Name: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",77,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCP2",78,0)
 Q
"RTN","LEXQCP2",79,0)
LD(X,LEXLEN) ;   Long Description
"RTN","LEXQCP2",80,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Description: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",81,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCP2",82,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))) S LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCP2",83,0)
 Q
"RTN","LEXQCP2",84,0)
LX(X,LEXLEN) ;   Lexicon Expression
"RTN","LEXQCP2",85,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Lexicon Term:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",86,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCP2",87,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCP2",88,0)
 Q
"RTN","LEXQCP2",89,0)
WR(X,LEXLEN) ;   Warning
"RTN","LEXQCP2",90,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT,LEXC Q:'$D(X(1))  S LEXC=0,LEXN=$G(X(1)),LEXT="",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",91,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCP2",92,0)
 Q
"RTN","LEXQCP2",93,0)
MD(X,LEXLEN) ;   CPT Modifiers
"RTN","LEXQCP2",94,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXE=$G(X(0)),LEXN=$G(X(1)),LEXT="  Modifiers:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQCP2",95,0)
 S LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQCP2",96,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQCP2",97,0)
 . S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQCP2",98,0)
 Q
"RTN","LEXQCP2",99,0)
MOD(X,LEXVDT,LEX,LEXLEN,LEXSTA) ;   CPT Modifiers
"RTN","LEXQCP2",100,0)
 ;            
"RTN","LEXQCP2",101,0)
 ; LEX=# of Lines
"RTN","LEXQCP2",102,0)
 ; LEX(0)=External Date
"RTN","LEXQCP2",103,0)
 ; LEX(#)=Modifier List
"RTN","LEXQCP2",104,0)
 ;            
"RTN","LEXQCP2",105,0)
 N LEXA,LEXEVDT,LEXFA,LEXI,LEXIEN,LEXM,LEXS,LEXSO S LEXIEN=$G(X) Q:+LEXIEN'>0  Q:'$D(^ICPT(+LEXIEN,0))  S LEXSTA=+($G(LEXSTA))
"RTN","LEXQCP2",106,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62  Q:'$L(LEXEVDT)
"RTN","LEXQCP2",107,0)
 S LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1) Q:'$L(LEXSO)  S LEXFA=$$FA(+LEXIEN) Q:LEXVDT<LEXFA
"RTN","LEXQCP2",108,0)
 K LEX D MODA^ICPTMOD(LEXSO,LEXVDT,.LEXA) S (LEXS,LEXM)="" F  S LEXM=$O(LEXA("A",LEXM)) Q:'$L(LEXM)  D
"RTN","LEXQCP2",109,0)
 . Q:'$D(^DIC(81.3,"B",LEXM))  I ($L(LEXS)+$L(LEXM)+3)'>62 S LEXS=LEXS_LEXM_"   " Q
"RTN","LEXQCP2",110,0)
 . I ($L(LEXS)+$L(LEXM)+3)>62 S LEXI=$O(LEX(" "),-1)+1,LEX(LEXI)=$$TM^LEXQM(LEXS),LEXS=LEXM_"   " Q
"RTN","LEXQCP2",111,0)
 I $L(LEXS) S LEXI=$O(LEX(" "),-1)+1,LEX(LEXI)=$$TM^LEXQM(LEXS)
"RTN","LEXQCP2",112,0)
 S LEX=$O(LEX(" "),-1) S:$D(LEXTEST)&(+LEXSTA'>0) LEXEVDT="--/--/----" S LEX(0)=LEXEVDT
"RTN","LEXQCP2",113,0)
 Q
"RTN","LEXQCP2",114,0)
WN(X,LEX,LEXLEN) ;   Warning
"RTN","LEXQCP2",115,0)
 ;            
"RTN","LEXQCP2",116,0)
 ; LEX=# of Lines
"RTN","LEXQCP2",117,0)
 ; LEX(0)=External Date
"RTN","LEXQCP2",118,0)
 ; LEX(#)=Warning
"RTN","LEXQCP2",119,0)
 ;            
"RTN","LEXQCP2",120,0)
 N LEXVDT,LEXIA,LEXTMP,LEXREF K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXIA=$$IA^LEXQCP(LEXVDT) Q:+LEXIA'>0
"RTN","LEXQCP2",121,0)
 S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62 S LEXREF="Short Name and Description" S:$D(LEXLX) LEXREF="Short Name, Description and Lexicon Term"
"RTN","LEXQCP2",122,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The "_LEXREF_" may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQCP2",123,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQCP2",124,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQCP2",125,0)
 Q
"RTN","LEXQCP2",126,0)
 ;
"RTN","LEXQCP2",127,0)
 ; Miscellaneous
"RTN","LEXQCP2",128,0)
FA(X) ;   First Activation
"RTN","LEXQCP2",129,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO
"RTN","LEXQCP2",130,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$P($G(^ICPT(+LEXIEN,0)),"^",1) D HIST^ICPTAPIU(LEXSO,.LEXH) S LEXFA="",LEXI=0
"RTN","LEXQCP2",131,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQCP2",132,0)
 S X=LEXFA
"RTN","LEXQCP2",133,0)
 Q X
"RTN","LEXQCP2",134,0)
BL ;   Blank Line
"RTN","LEXQCP2",135,0)
 D TL(" ") Q
"RTN","LEXQCP2",136,0)
TL(X) ;   Text Line
"RTN","LEXQCP2",137,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQCP2",138,0)
 N LEXI S LEXI=+($O(^TMP("LEXQCPO",$J," "),-1))+1 S ^TMP("LEXQCPO",$J,LEXI)=$G(X),^TMP("LEXQCPO",$J,0)=LEXI
"RTN","LEXQCP2",139,0)
 Q
"RTN","LEXQCP2",140,0)
CLR ;   Clear
"RTN","LEXQCP2",141,0)
 N LEXIEN,LEXLEN,LEXGET,LEXSD,LEXLD,LEXMD,LEXLX,LEXINC,LEXELDT,LEXST,LEXTEST,LEXWN
"RTN","LEXQCP2",142,0)
 Q
"RTN","LEXQCPA")
0^218^B9841880
"RTN","LEXQCPA",1,0)
LEXQCPA ;ISL/KER - Query - CPT Procedures - Ask ;04/21/2014
"RTN","LEXQCPA",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQCPA",3,0)
 ;               
"RTN","LEXQCPA",4,0)
 ; Global Variables
"RTN","LEXQCPA",5,0)
 ;    None
"RTN","LEXQCPA",6,0)
 ;               
"RTN","LEXQCPA",7,0)
 ; External References
"RTN","LEXQCPA",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXQCPA",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQCPA",10,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQCPA",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQCPA",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQCPA",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQCPA",14,0)
 ;               
"RTN","LEXQCPA",15,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQCPA",16,0)
 ;    LEXCDT              Code Set Date
"RTN","LEXQCPA",17,0)
 ;    LEXEXIT             Exit Flag
"RTN","LEXQCPA",18,0)
 ;    LEXCPT              CPT Code IEN^Text
"RTN","LEXQCPA",19,0)
 ;           
"RTN","LEXQCPA",20,0)
 Q
"RTN","LEXQCPA",21,0)
CPT(X) ; CPT Code
"RTN","LEXQCPA",22,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIC,DTOUT,DUOUT,LEXCP,LEXSO,LEXDTXT,LEXVTXT,LEXVDT,Y,ICPTVDT S:$G(LEXCDT)?7N ICPTVDT=$G(LEXCDT)
"RTN","LEXQCPA",23,0)
 S DIC(0)="AEQMZ",DIC="^ICPT(",DIC("A")=" Select a CPT/HCPCS Procedure code:  " W !
"RTN","LEXQCPA",24,0)
 D ^DIC S:$G(X)["^^"!($D(DTOUT)) LEXEXIT=1 Q:$G(X)["^^"!(+($G(LEXEXIT))>0) "^^"
"RTN","LEXQCPA",25,0)
 Q:$G(X)="^" "^"  Q:$G(X)["^^" "^^"  Q:$D(DTOUT)!($D(DUOUT)) "^"  S LEXSO=$P($G(Y),"^",2) S X="" I +Y>0,$L(LEXSO) D
"RTN","LEXQCPA",26,0)
 . S LEXVDT=$G(LEXCDT) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S X=Y,LEXDTXT=$P($G(Y(0)),"^",2),LEXCP=$$CPT^ICPTCOD(LEXSO,LEXVDT)
"RTN","LEXQCPA",27,0)
 . S:$L($G(LEXDTXT)) LEXDTXT=LEXDTXT_" (Text not Versioned)" S LEXVTXT=$P(LEXCP,"^",3) S:'$L(LEXVTXT) LEXVTXT=LEXDTXT
"RTN","LEXQCPA",28,0)
 . S X=+Y_"^"_LEXSO S:$L(LEXVTXT) X=X_"^"_LEXVTXT
"RTN","LEXQCPA",29,0)
 S X=$$UP^XLFSTR(X) Q:'$L(X) "^"
"RTN","LEXQCPA",30,0)
 Q X
"RTN","LEXQCPA",31,0)
INC(X) ; Include CPT Modifiers
"RTN","LEXQCPA",32,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,DIRB S DIRB=$$RET^LEXQD("LEXQCPA","INC",+($G(DUZ)),"Include Modifiers") S:'$L(DIRB) DIRB="Yes"
"RTN","LEXQCPA",33,0)
 S DIR(0)="YAO",DIR("A")=" Include CPT Modifiers?  (Y/N)  " S:"^YES^NO^Yes^No^"[("^"_DIRB_"^") DIR("B")=DIRB
"RTN","LEXQCPA",34,0)
 S DIR("PRE")="S:X[""?"" X=""??""" S (DIR("?"),DIR("??"))="^D INCH^LEXQCPA"
"RTN","LEXQCPA",35,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:$D(DIRUT)!($D(DIROUT))!($D(DTOUT))!($D(DUOUT)) "^" S DIRB=$S(Y=1:"Yes",Y=0:"No",X["^":"",1:"")
"RTN","LEXQCPA",36,0)
 D:$L(DIRB) SAV^LEXQD("LEXQCPA","INC",+($G(DUZ)),"Include Modifiers",$G(DIRB)) S X=+Y
"RTN","LEXQCPA",37,0)
 Q X
"RTN","LEXQCPA",38,0)
INCH ;   Include Help
"RTN","LEXQCPA",39,0)
 I $L($P($G(LEXCPT),"^",2)),$G(LEXCDT)?7N D  Q
"RTN","LEXQCPA",40,0)
 . W !,?5,"Answer 'Yes' to include active CPT Modifiers that are appropriate for"
"RTN","LEXQCPA",41,0)
 . W !,?5,"CPT code ",$P($G(LEXCPT),"^",2)," on ",$$SD($G(LEXCDT))
"RTN","LEXQCPA",42,0)
 W !,?5,"Answer 'Yes' to include active CPT Modifiers that are appropriate"
"RTN","LEXQCPA",43,0)
 W !,?5,"for the CPT code, 'No' to exclude CPT Modifiers from the display"
"RTN","LEXQCPA",44,0)
 Q
"RTN","LEXQCPA",45,0)
SD(X) ; Short Date
"RTN","LEXQCPA",46,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQCPA",47,0)
CLR ; Clear
"RTN","LEXQCPA",48,0)
 N LEXCDT,LEXCPT,LEXEXIT
"RTN","LEXQCPA",49,0)
 Q
"RTN","LEXQH")
0^20^B20466600
"RTN","LEXQH",1,0)
LEXQH ;ISL/KER - Query History - Main ;04/21/2014
"RTN","LEXQH",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQH",3,0)
 ;               
"RTN","LEXQH",4,0)
 ; Global Variables
"RTN","LEXQH",5,0)
 ;    ^TMP("LEXQH")       SACC 2.3.2.5.1
"RTN","LEXQH",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQH",7,0)
 ;    ^TMP("LEXQHLA")     SACC 2.3.2.5.1
"RTN","LEXQH",8,0)
 ;    ^TMP("LEXQHO")      SACC 2.3.2.5.1
"RTN","LEXQH",9,0)
 ;               
"RTN","LEXQH",10,0)
 ; External References
"RTN","LEXQH",11,0)
 ;    ^DIM                ICR  10016
"RTN","LEXQH",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQH",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQH",14,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXQH",15,0)
 ;               
"RTN","LEXQH",16,0)
EN ; Main Entry Point
"RTN","LEXQH",17,0)
 N DIR,DIRB,DIROUT,DIRUT,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,DTOUT,DUOUT,LEX,LEX1,LEX2,LEX3,LEXACT,LEXAT,LEXATD,LEXB,LEXC,LEXC1,LEXC2,LEXCMD
"RTN","LEXQH",18,0)
 N LEXCODE,LEXCOM,LEXCT,LEXCTY,LEXD,LEXDC,LEXDG,LEXDI,LEXDISP,LEXDR,LEXDRG,LEXDS,LEXDT,LEXE,LEXEC,LEXEF,LEXEIEN,LEXENT,LEXEX,LEXFD,LEXEXIT,LEXFI
"RTN","LEXQH",19,0)
 N LEXFILE,LEXFIRST,LEXG,LEXH,LEXHD,LEXHDR,LEXI,LEXIA,LEXIAD,LEXICT,LEXID,LEXIEN,LEXIN,LEXIT,LEXIX,LEXKEY,LEXL,LEXL1,LEXL2,LEXL3,LEXLAST,LEXLEN
"RTN","LEXQH",20,0)
 N LEXM,LEXMAX,LEXMC,LEXMCI,LEXMCT,LEXMD,LEXMDG,LEXMDRG,LEXMOD,LEXMS,LEXN,LEXN1,LEXN2,LEXN3,LEXNAME,LEXNC,LEXNM,LEXNMD,LEXNN,LEXNODE,LEXO,LEXO1
"RTN","LEXQH",21,0)
 N LEXO2,LEXO3,LEXOC,LEXOMD,LEXP,LEXRAN,LEXROOT,LEXRTN,LEXS,LEXSAB,LEXSEL,LEXSIEN,LEXSO,LEXSS,LEXSTR,LEXT,LEXT1,LEXT2,LEXT3,LEXTAG,LEXTD,LEXTN
"RTN","LEXQH",22,0)
 N LEXTOT,LEXTQ,LEXTS,LEXTTT,LEXTY,LEXTYPE,LEXUN,LEXUND,LEXUSR,LEXV,LEXVAL,LEXVDT,LEXVT,LEXX,X,Y
"RTN","LEXQH",23,0)
 K ^TMP("LEXQH",$J),^TMP("LEXQHL",$J),^TMP("LEXQHLA"),^TMP("LEXQHO",$J) S LEXEXIT=0,LEXTD=$$DT^XLFDT W ! S LEXSO=$$SO^LEXQL
"RTN","LEXQH",24,0)
 K ^TMP("LEXQH",$J) I +LEXEXIT>0!('$L(LEXSO)) W !!,?4,"Code not selected" G ABT
"RTN","LEXQH",25,0)
 S LEXIEN=+LEXSO,LEXROOT=$P(LEXSO,U,2),LEXFILE=$P(LEXSO,U,3),LEXSYS=$P(LEXSO,U,4),LEXCODE=$P(LEXSO,U,5),LEXNAME=$P(LEXSO,U,6)
"RTN","LEXQH",26,0)
 S LEXTYPE=$$TY(LEXFILE,LEXSYS)
"RTN","LEXQH",27,0)
 I '$L(LEXCODE)!('$L(LEXFILE))!('$L(LEXNAME))!('$L(LEXIEN))!('$L(LEXTYPE))!('$L(LEXROOT))!(+LEXIEN'>0) W !!,?4,"Valid Code not selected" G ABT
"RTN","LEXQH",28,0)
 S LEXROOT="^"_LEXROOT S LEXNODE=@(LEXROOT_LEXIEN_",0)") I '$L(LEXNODE) W !!,?4,"Record for code not found" G ABT
"RTN","LEXQH",29,0)
 S LEXDISP=$$DIS^LEXQHA I +($G(LEXEXIT))>0!("^CH^SB^"'[("^"_LEXDISP_"^")) W !!,?4,"Display not selected" G ABT
"RTN","LEXQH",30,0)
 S (LEXTAG,LEXRTN,LEXENT)=""
"RTN","LEXQH",31,0)
 S:LEXFILE=80 LEXENT="D EN^LEXQHL1("_+LEXIEN_",$G(LEXDISP))"
"RTN","LEXQH",32,0)
 S:LEXFILE=80.1 LEXENT="D EN^LEXQHL2("_+LEXIEN_",$G(LEXDISP))"
"RTN","LEXQH",33,0)
 S:LEXFILE=81 LEXENT="D EN^LEXQHL3("_+LEXIEN_",$G(LEXDISP))" S LEXEXIT=0
"RTN","LEXQH",34,0)
 S:LEXFILE=81.3 LEXENT="D EN^LEXQHL4("_+LEXIEN_",$G(LEXDISP),$G(LEXRAN))"
"RTN","LEXQH",35,0)
 S LEXRAN=0 S:LEXFILE=81.3 LEXRAN=$$RAN^LEXQHA
"RTN","LEXQH",36,0)
 I +($G(LEXEXIT))>0!(LEXFILE=81.3&($G(LEXRAN)["^")) W !!,?4,"Range not selected" G ABT
"RTN","LEXQH",37,0)
 S LEXT=$S(LEXDISP="CH":"Chronological ",LEXDISP="SB":"Subjective ",1:"")
"RTN","LEXQH",38,0)
 S LEXT=LEXT_"Display of "_LEXTYPE_" "_LEXCODE
"RTN","LEXQH",39,0)
 S:$L(LEXNAME) LEXT=LEXT_", """_LEXNAME
"RTN","LEXQH",40,0)
 S:$L(LEXNAME)&((LEXFILE'=81.3)!(LEXFILE=81.3&(+($G(LEXRAN))'>0))) LEXT=LEXT_""""
"RTN","LEXQH",41,0)
 S:$L(LEXNAME)&(LEXFILE=81.3&(+($G(LEXRAN))>0)) LEXT=LEXT_","""
"RTN","LEXQH",42,0)
 S:LEXFILE=81.3&(+($G(LEXRAN))>0) LEXT=LEXT_" with CPT Code Ranges"
"RTN","LEXQH",43,0)
 W !!,?2,"Display a ",$S(LEXDISP="CH":"Chronological ",LEXDISP="SB":"Subjective ",1:""),"History of ",LEXTYPE," ",LEXCODE
"RTN","LEXQH",44,0)
 W !,?4,LEXNAME W:LEXFILE=81.3&(+($G(LEXRAN))>0) !,?6,"with CPT Code Ranges" W !
"RTN","LEXQH",45,0)
 S LEXTAG=$P(LEXENT,U,1) S:LEXTAG[" " LEXTAG=$P(LEXTAG," ",2) S LEXRTN=$P(LEXENT,U,2) S:LEXRTN["(" LEXRTN=$P(LEXRTN,"(",1)
"RTN","LEXQH",46,0)
 K ^TMP("LEXQHO",$J) S X=LEXENT D ^DIM S:'$D(X) LEXEXIT=1
"RTN","LEXQH",47,0)
 I +($$TAG^LEXQD((LEXTAG_"^"_LEXRTN)))'>0!(+($G(LEXEXIT))>0) W !!,?4,"Invalid Code or Display selected" G ABT
"RTN","LEXQH",48,0)
 X LEXENT I '$D(^TMP("LEXQHO",$J)) W !!,?4,"No history to display" G ABT
"RTN","LEXQH",49,0)
 D:$D(^TMP("LEXQHO",$J)) DSP^LEXQO("LEXQHO") K ^TMP("LEXQH",$J),^TMP("LEXQHL",$J),^TMP("LEXQHLA",$J)
"RTN","LEXQH",50,0)
 Q
"RTN","LEXQH",51,0)
ABT ;   Abort
"RTN","LEXQH",52,0)
 K ^TMP("LEXQH",$J),^TMP("LEXQHL",$J),^TMP("LEXQHLA",$J),^TMP("LEXQHO",$J)
"RTN","LEXQH",53,0)
 Q
"RTN","LEXQH",54,0)
TY(X,Y) ;   Code Type
"RTN","LEXQH",55,0)
 N LEXF,LEXS S LEXF=+($G(X)),LEXS=+($G(Y))
"RTN","LEXQH",56,0)
 Q:LEXF=80&(LEXS=1) "ICD-9 Diagnostic Code"
"RTN","LEXQH",57,0)
 Q:LEXF=80.1&(LEXS=2) "ICD-9 Procedural Code"
"RTN","LEXQH",58,0)
 Q:LEXF=80&(LEXS=30) "ICD-10 Diagnostic Code"
"RTN","LEXQH",59,0)
 Q:LEXF=80.1&(LEXS=31) "ICD-10 Procedural Code"
"RTN","LEXQH",60,0)
 Q:LEXF=81 "CPT/HCPCS Procedural Code"
"RTN","LEXQH",61,0)
 Q:LEXF=81.3 "CPT Modifier Code"
"RTN","LEXQH",62,0)
 Q ""
"RTN","LEXQH",63,0)
EV(X) ;   Check environment
"RTN","LEXQH",64,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEXQH",65,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEXQH",66,0)
 Q 1
"RTN","LEXQHL1")
0^21^B95304509
"RTN","LEXQHL1",1,0)
LEXQHL1 ;ISL/KER - Query History - ICD-9/10 Diagnosis Extract ;04/21/2014
"RTN","LEXQHL1",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHL1",3,0)
 ;               
"RTN","LEXQHL1",4,0)
 ; Global Variables
"RTN","LEXQHL1",5,0)
 ;    ^ICM(               ICR   4488
"RTN","LEXQHL1",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL1",7,0)
 ;               
"RTN","LEXQHL1",8,0)
 ; External References
"RTN","LEXQHL1",9,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQHL1",10,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQHL1",11,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQHL1",12,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQHL1",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQHL1",14,0)
 ;               
"RTN","LEXQHL1",15,0)
 Q
"RTN","LEXQHL1",16,0)
EN(X,Y) ; ICD-9 Diagnosis File
"RTN","LEXQHL1",17,0)
 N LEXIEN,LEXTIEN,LEXDISP,LEXIA,LEXEF,LEXCT,LEXC,LEXSYS,LEXTMP S LEXIEN=$G(X),LEXDISP=$G(Y),LEXIA="" Q:+LEXIEN'>0
"RTN","LEXQHL1",18,0)
 S LEXC=$$CODEC^ICDEX(80,+LEXIEN) Q:'$L(LEXC)  S LEXSYS=0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80,1) I LEXTIEN>0 S LEXSYS=1 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL1",19,0)
 I LEXSYS'>0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80,30) I LEXTIEN>0 S LEXSYS=30 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL1",20,0)
 Q:+($G(LEXSYS))'>0  K ^TMP("LEXQHL",$J) S ^TMP("LEXQHL",$J,"IEN")=LEXIEN,^TMP("LEXQHL",$J,"CODE")=LEXC
"RTN","LEXQHL1",21,0)
 S LEXTMP=$$ICDDX^ICDEX(LEXIEN,,LEXSYS,"I"),^TMP("LEXQHL",$J,"NAME")=$P(LEXTMP,U,4)
"RTN","LEXQHL1",22,0)
 S:'$L(LEXDISP) LEXDISP="SB" D ST,DX,DS,ID^LEXQHL5(LEXC),DG,MC,CC D:$L($G(LEXDISP)) DP K ^TMP("LEXQHL",$J)
"RTN","LEXQHL1",23,0)
 Q
"RTN","LEXQHL1",24,0)
ST ;   1  Status
"RTN","LEXQHL1",25,0)
 N LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXMS,LEXN,LEXRT,LEXS,LEXT,LEXARY S LEXRT=$$ROOT^ICDEX(80)
"RTN","LEXQHL1",26,0)
 M LEXARY=@(LEXRT_+LEXIEN_",66)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",27,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",28,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEXMS S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL1",29,0)
 . . Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1,LEXMS=$$MS^LEXQHLM(LEXE,0),LEXT=$S(+LEXS>0:"Activation",1:"Inactivation")
"RTN","LEXQHL1",30,0)
 . . S:+LEXS>0&(LEXCT=1) LEXT="Initial Activation"_LEXMS,LEXIA=LEXE
"RTN","LEXQHL1",31,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final status change)"
"RTN","LEXQHL1",32,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,1,1)=LEXD_U_LEXT
"RTN","LEXQHL1",33,0)
 Q
"RTN","LEXQHL1",34,0)
DX ;   2  Diagnosis
"RTN","LEXQHL1",35,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXRT,LEXS,LEXT,LEXARY S LEXRT=$$ROOT^ICDEX(80)
"RTN","LEXQHL1",36,0)
 M LEXARY=@(LEXRT_+LEXIEN_",67)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",37,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",38,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($P(LEXN,U,2))
"RTN","LEXQHL1",39,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL1",40,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Diagnosis",+LEXCT>1:"Updated Diagnosis",1:"Diagnosis")
"RTN","LEXQHL1",41,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final diagnosis change)"
"RTN","LEXQHL1",42,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,2,1)=LEXD_U_LEXS
"RTN","LEXQHL1",43,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",44,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,2," "),-1)+1
"RTN","LEXQHL1",45,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,2,LEXC)=U_LEXT
"RTN","LEXQHL1",46,0)
 Q
"RTN","LEXQHL1",47,0)
DS ;   3  Description
"RTN","LEXQHL1",48,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXRT,LEXS,LEXT,LEXARY S LEXRT=$$ROOT^ICDEX(80)
"RTN","LEXQHL1",49,0)
 M LEXARY=@(LEXRT_+LEXIEN_",68)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",50,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",51,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0))
"RTN","LEXQHL1",52,0)
 . . S LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($G(LEXARY(+LEXH,1)))
"RTN","LEXQHL1",53,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL1",54,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Description",+LEXCT>1:"Updated Description",1:"Description")
"RTN","LEXQHL1",55,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final description change)"
"RTN","LEXQHL1",56,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,3,1)=LEXD_U_LEXS
"RTN","LEXQHL1",57,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",58,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,3," "),-1)+1
"RTN","LEXQHL1",59,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,3,LEXC)=U_LEXT
"RTN","LEXQHL1",60,0)
 Q
"RTN","LEXQHL1",61,0)
DG ;   5  DRG Groups
"RTN","LEXQHL1",62,0)
 N LEX,LEXCT,LEXD,LEXDI,LEXDR,LEXDRG,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXRT,LEXS,LEXT,LEXUN,LEXUND,LEXARY
"RTN","LEXQHL1",63,0)
 S LEXRT=$$ROOT^ICDEX(80) M LEXARY=@(LEXRT_+LEXIEN_",3)")
"RTN","LEXQHL1",64,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",65,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",66,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0))
"RTN","LEXQHL1",67,0)
 . . S LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($G(LEXARY(+LEXH,1)))
"RTN","LEXQHL1",68,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63) S:LEXE=$G(LEXIA) LEXUN=0
"RTN","LEXQHL1",69,0)
 . . S LEXS=$S(+LEXCT=1&(LEXE'=$G(LEXIA)):"Initial Versioned DRG Groups",+LEXCT=1&(LEXE=$G(LEXIA)):"Initial DRG Groups",+LEXCT>1:"Updated DRG Groups",1:"DRG Groups")
"RTN","LEXQHL1",70,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final DRG change)"
"RTN","LEXQHL1",71,0)
 . . N LEXDRG,LEXDR,LEXDI
"RTN","LEXQHL1",72,0)
 . . S LEXDRG="",LEXDR="" F  S LEXDR=$O(LEXARY(+LEXH,1,"B",LEXDR)) Q:'$L(LEXDR)  D
"RTN","LEXQHL1",73,0)
 . . . S LEXDI=0 F  S LEXDI=$O(LEXARY(+LEXH,1,"B",LEXDR,LEXDI)) Q:+LEXDI'>0  D
"RTN","LEXQHL1",74,0)
 . . . . N LEXN,LEXD S LEXN=+($G(LEXARY(+LEXH,1,+LEXDI,0)))
"RTN","LEXQHL1",75,0)
 . . . . S LEXDRG=LEXDRG_", "_LEXN S:$E(LEXDRG,1,2)=", " LEXDRG=$E(LEXDRG,3,$L(LEXDRG))
"RTN","LEXQHL1",76,0)
 . . S LEXDRG=$$CS^LEXQHLM(LEXDRG),LEXDRG=$$AND^LEXQHLM(LEXDRG) S:$L(LEXDRG) LEXDRG="DRG "_LEXDRG Q:'$L(LEXDRG)
"RTN","LEXQHL1",77,0)
 . . K LEX S LEX(1)=LEXDRG D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL1",78,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,5,1)=LEXD_U_LEXS
"RTN","LEXQHL1",79,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",80,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,5," "),-1)+1
"RTN","LEXQHL1",81,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,5,LEXC)=U_LEXT
"RTN","LEXQHL1",82,0)
 I +($G(LEXUN))>0,$L($G(LEXUND)),+($G(LEXIA))?7N D
"RTN","LEXQHL1",83,0)
 . N LEXI,LEXD,LEXS,LEX S LEXD=$$SD^LEXQHLM(+($G(LEXIA))),LEXS="Initial Unversioned DRG Groups"
"RTN","LEXQHL1",84,0)
 . K LEX S LEX(1)=LEXUND D PR^LEXQHLM(.LEX,63) S ^TMP("LEXQHL",$J,LEXIA,5,1)=LEXD_U_LEXS
"RTN","LEXQHL1",85,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",86,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXIA,5," "),-1)+1
"RTN","LEXQHL1",87,0)
 . . S ^TMP("LEXQHL",$J,LEXIA,5,LEXC)=U_LEXT
"RTN","LEXQHL1",88,0)
 Q
"RTN","LEXQHL1",89,0)
MC ;   6  Major Diagnostic Category
"RTN","LEXQHL1",90,0)
 N LEX,LEXB,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXM,LEXN,LEXRT,LEXS,LEXT,LEXUN,LEXUND,LEXARY
"RTN","LEXQHL1",91,0)
 S LEXRT=$$ROOT^ICDEX(80) M LEXARY=@(LEXRT_+LEXIEN_",4)")
"RTN","LEXQHL1",92,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",93,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",94,0)
 . . N LEXB,LEXN,LEXS,LEXE,LEXT,LEXD,LEXM S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL1",95,0)
 . . S LEXM=$$UP^XLFSTR($P($G(^ICM(+LEXS,0)),U,1)) Q:'$L(LEXM)  Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1
"RTN","LEXQHL1",96,0)
 . . S:LEXE=$G(LEXIA) LEXUN=0 S LEXT=""
"RTN","LEXQHL1",97,0)
 . . S:+LEXCT=1&(LEXE'=$G(LEXIA)) LEXT="Initial Versioned Major Diagnostic Category"
"RTN","LEXQHL1",98,0)
 . . S:'$L(LEXT)&(+LEXCT=1)&(LEXE=$G(LEXIA)) LEXT="Initial Major Diagnostic Category"
"RTN","LEXQHL1",99,0)
 . . S:'$L(LEXT)&(+LEXCT>1) LEXT="Updated Major Diagnostic Category"
"RTN","LEXQHL1",100,0)
 . . S:'$L(LEXT) LEXT="Major Diagnostic Category"
"RTN","LEXQHL1",101,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final category change)"
"RTN","LEXQHL1",102,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,6,1)=LEXD_U_LEXT
"RTN","LEXQHL1",103,0)
 . .  S ^TMP("LEXQHL",$J,LEXEF,6,2)=U_LEXM
"RTN","LEXQHL1",104,0)
 I +($G(LEXUN))>0,$L($G(LEXUND)),+($G(LEXIA))?7N D
"RTN","LEXQHL1",105,0)
 . N LEXI,LEXD,LEXS,LEX S LEXD=$$SD^LEXQHLM(+($G(LEXIA))),LEXS="Initial Unversioned Major Diagnostic Category"
"RTN","LEXQHL1",106,0)
 . K LEX S LEX(1)=LEXUND D PR^LEXQHLM(.LEX,63) S ^TMP("LEXQHL",$J,LEXIA,6,1)=LEXD_U_LEXS
"RTN","LEXQHL1",107,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",108,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXIA,6," "),-1)+1
"RTN","LEXQHL1",109,0)
 . . S ^TMP("LEXQHL",$J,LEXIA,6,LEXC)=U_LEXT
"RTN","LEXQHL1",110,0)
 Q
"RTN","LEXQHL1",111,0)
CC ;   7  Complication/Comorbidity
"RTN","LEXQHL1",112,0)
 N LEX,LEXB,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXM,LEXN,LEXRT,LEXS,LEXT,LEXUN,LEXUND,LEXARY
"RTN","LEXQHL1",113,0)
 S LEXRT=$$ROOT^ICDEX(80) M LEXARY=@(LEXRT_+LEXIEN_",69)")
"RTN","LEXQHL1",114,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL1",115,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL1",116,0)
 . . N LEXB,LEXN,LEXS,LEXE,LEXT,LEXD,LEXM S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL1",117,0)
 . . S LEXM=$S(LEXS=1:"COMPLICATION/COMORBIDITY",LEXS=2:"MAJOR COMPLICATION/COMORBIDITY",LEXS="0":"NON-COMPLICATION/COMORBIDITY",1:"") Q:'$L(LEXM)
"RTN","LEXQHL1",118,0)
 . . Q:'$L(LEXS)&(LEXCT'>0)  S LEXCT=LEXCT+1
"RTN","LEXQHL1",119,0)
 . . S:LEXE=$G(LEXIA) LEXUN=0
"RTN","LEXQHL1",120,0)
 . . S LEXT=$S(+LEXCT=1&(LEXE'=$G(LEXIA)):"Initial Versioned Complication/Comorbidity",+LEXCT=1&(LEXE=$G(LEXIA)):"Initial Complication/Comorbidity",+LEXCT>1:"Updated Complication/Comorbidity",1:"Complication/Comorbidity")
"RTN","LEXQHL1",121,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final CC change)"
"RTN","LEXQHL1",122,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,7,1)=LEXD_U_LEXT
"RTN","LEXQHL1",123,0)
 . .  S ^TMP("LEXQHL",$J,LEXEF,7,2)=U_LEXM
"RTN","LEXQHL1",124,0)
 I +($G(LEXUN))>0,$L($G(LEXUND)),+($G(LEXIA))?7N D
"RTN","LEXQHL1",125,0)
 . N LEXI,LEXD,LEXS,LEX S LEXD=$$SD^LEXQHLM(+($G(LEXIA))),LEXS="Initial Unversioned Complication/Comorbidity"
"RTN","LEXQHL1",126,0)
 . K LEX S LEX(1)=LEXUND D PR^LEXQHLM(.LEX,63) S ^TMP("LEXQHL",$J,LEXIA,7,1)=LEXD_U_LEXS
"RTN","LEXQHL1",127,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL1",128,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXIA,7," "),-1)+1
"RTN","LEXQHL1",129,0)
 . . S ^TMP("LEXQHL",$J,LEXIA,7,LEXC)=U_LEXT
"RTN","LEXQHL1",130,0)
 Q
"RTN","LEXQHL1",131,0)
 ; 
"RTN","LEXQHL1",132,0)
DP ; Display
"RTN","LEXQHL1",133,0)
 S LEXDISP=$G(LEXDISP) Q:$L(LEXDISP)>8  Q:$L(LEXDISP)<2  Q:LEXDISP["^"  N LEXL S LEXL=$T(@LEXDISP+0) Q:'$L(LEXL)  D @LEXDISP
"RTN","LEXQHL1",134,0)
 Q
"RTN","LEXQHL1",135,0)
SB ;   Subjective
"RTN","LEXQHL1",136,0)
 N LEX1,LEX2,LEX3,LEXC,LEXCT,LEXE,LEXHDR,LEXI,LEXID,LEXN,LEXP,LEXS,LEXT
"RTN","LEXQHL1",137,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL1",138,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL1",139,0)
 F LEXID=1:1:7 D
"RTN","LEXQHL1",140,0)
 . N LEXHDR,LEXCT S LEXCT=0,LEXHDR=$$HD(LEXID) Q:'$L(LEXHDR)  S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL1",141,0)
 . . I LEXID=1 D  Q
"RTN","LEXQHL1",142,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,1)) Q:'$L(LEXN)  S LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2) Q:'$L(LEXE)  Q:'$L(LEXS)  S LEXCT=LEXCT+1
"RTN","LEXQHL1",143,0)
 . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) S LEXT=LEXE,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL1",144,0)
 . . N LEX2 S LEX2=0,LEXE="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL1",145,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) S:LEX2=1 LEXE=$P(LEXN,U,1) Q:LEX2=1  Q:'$L(LEXE)
"RTN","LEXQHL1",146,0)
 . . . I LEX2=2 D  Q
"RTN","LEXQHL1",147,0)
 . . . . S LEXCT=LEXCT+1,LEXT=$G(LEXE),LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL1",148,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL1",149,0)
 . . . I LEX2>2 D  Q
"RTN","LEXQHL1",150,0)
 . . . . S LEXCT=LEXCT+1,LEXT="",LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL1",151,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL1",152,0)
 Q
"RTN","LEXQHL1",153,0)
CH ;   Chronological
"RTN","LEXQHL1",154,0)
 N LEX1,LEX2,LEX3,LEXC,LEXD,LEXI,LEXN,LEXP,LEXS,LEXT
"RTN","LEXQHL1",155,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL1",156,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL1",157,0)
 S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL1",158,0)
 . D BL^LEXQHLM N LEX2 S LEX2=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL1",159,0)
 . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL1",160,0)
 . . . N LEXN,LEXD,LEXS S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL1",161,0)
 . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXS S LEXT="   "_LEXT D TL^LEXQHLM(LEXT) S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL1",162,0)
 Q
"RTN","LEXQHL1",163,0)
 ; 
"RTN","LEXQHL1",164,0)
 ; Miscellaneous
"RTN","LEXQHL1",165,0)
HD(X) ;   Header
"RTN","LEXQHL1",166,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Diagnosis"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Lexicon Expression"  Q:+($G(X))=5 "DRG Groups"
"RTN","LEXQHL1",167,0)
 Q:+($G(X))=6 "Major Diagnostic Category"  Q:+($G(X))=7 "Complication/Comorbidity"
"RTN","LEXQHL1",168,0)
 Q ""
"RTN","LEXQHL2")
0^22^B90489365
"RTN","LEXQHL2",1,0)
LEXQHL2 ;ISL/KER - Query History - ICD-9/10 Procedure Extract ;04/21/2014
"RTN","LEXQHL2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHL2",3,0)
 ;           
"RTN","LEXQHL2",4,0)
 ; Global Variables
"RTN","LEXQHL2",5,0)
 ;    ^ICM(               ICR   4488
"RTN","LEXQHL2",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL2",7,0)
 ;               
"RTN","LEXQHL2",8,0)
 ; External References
"RTN","LEXQHL2",9,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQHL2",10,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQHL2",11,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQHL2",12,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQHL2",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQHL2",14,0)
 ;               
"RTN","LEXQHL2",15,0)
 Q
"RTN","LEXQHL2",16,0)
EN(X,Y) ; ICD Procedure File
"RTN","LEXQHL2",17,0)
 N LEXIEN,LEXTIEN,LEXDISP,LEXIA,LEXEF,LEXCT,LEXC,LEXSYS,LEXTMP S LEXIEN=$G(X),LEXDISP=$G(Y),LEXIA="" Q:+LEXIEN'>0
"RTN","LEXQHL2",18,0)
 S LEXC=$$CODEC^ICDEX(80.1,+LEXIEN) Q:'$L(LEXC)  S LEXSYS=0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80.1,2) I LEXTIEN>0 S LEXSYS=2 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL2",19,0)
 I LEXSYS'>0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80.1,31) I LEXTIEN>0 S LEXSYS=31 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL2",20,0)
 Q:+($G(LEXSYS))'>0  K ^TMP("LEXQHL",$J) S ^TMP("LEXQHL",$J,"IEN")=LEXIEN,^TMP("LEXQHL",$J,"CODE")=LEXC
"RTN","LEXQHL2",21,0)
 S LEXTMP=$$ICDOP^ICDEX(LEXIEN,,LEXSYS,"I"),^TMP("LEXQHL",$J,"NAME")=$P(LEXTMP,U,5)
"RTN","LEXQHL2",22,0)
 S:'$L(LEXDISP) LEXDISP="SB" D ST,OP,DS,MD D:$L($G(LEXDISP)) DP K ^TMP("LEXQHL",$J)
"RTN","LEXQHL2",23,0)
 Q
"RTN","LEXQHL2",24,0)
ST ;   1  Status
"RTN","LEXQHL2",25,0)
 N LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXMS,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",26,0)
 M LEXARY=@(LEXRT_+LEXIEN_",66)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",27,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",28,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEXMS S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL2",29,0)
 . . Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1,LEXMS=$$MS^LEXQHLM(LEXE,0),LEXT=$S(+LEXS>0:"Activation",1:"Inactivation")
"RTN","LEXQHL2",30,0)
 . . S:+LEXS>0&(LEXCT=1) LEXT="Initial Activation"_LEXMS,LEXIA=LEXE
"RTN","LEXQHL2",31,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final status change)"
"RTN","LEXQHL2",32,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,1,1)=LEXD_U_LEXT
"RTN","LEXQHL2",33,0)
 Q
"RTN","LEXQHL2",34,0)
OP ;   2  Operation/Procedure
"RTN","LEXQHL2",35,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",36,0)
 M LEXARY=@(LEXRT_+LEXIEN_",67)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",37,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",38,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($P(LEXN,U,2))
"RTN","LEXQHL2",39,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL2",40,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Operation/Procedure",+LEXCT>1:"Updated Operation/Procedure",1:"Operation/Procedure")
"RTN","LEXQHL2",41,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final operation/procedure change)"
"RTN","LEXQHL2",42,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,2,1)=LEXD_U_LEXS
"RTN","LEXQHL2",43,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL2",44,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,2," "),-1)+1
"RTN","LEXQHL2",45,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,2,LEXC)=U_LEXT
"RTN","LEXQHL2",46,0)
 Q
"RTN","LEXQHL2",47,0)
DS ;   3  Description
"RTN","LEXQHL2",48,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",49,0)
 M LEXARY=@(LEXRT_+LEXIEN_",68)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",50,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",51,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0))
"RTN","LEXQHL2",52,0)
 . . S LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($G(LEXARY(+LEXH,1)))
"RTN","LEXQHL2",53,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL2",54,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Description",+LEXCT>1:"Updated Description",1:"Description")
"RTN","LEXQHL2",55,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final description change)"
"RTN","LEXQHL2",56,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,3,1)=LEXD_U_LEXS
"RTN","LEXQHL2",57,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL2",58,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,3," "),-1)+1
"RTN","LEXQHL2",59,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,3,LEXC)=U_LEXT
"RTN","LEXQHL2",60,0)
 Q
"RTN","LEXQHL2",61,0)
MD ;   4  MDC/DRG Groups
"RTN","LEXQHL2",62,0)
 N LEX1,LEX2,LEX,LEXC1,LEXC2,LEXCMD,LEXCT,LEXD,LEXDG,LEXDI,LEXDR,LEXDRG,LEXE,LEXEF,LEXG
"RTN","LEXQHL2",63,0)
 N EXH,LEXI,LEXM,LEXMC,LEXMCI,LEXMCT,LEXMD,LEXMDG,LEXMDRG,LEXN,LEXNMD,LEXOMD,LEXP,LEXS
"RTN","LEXQHL2",64,0)
 N LEXT,LEXUN,LEXUND,LEXVT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",65,0)
 S:$G(LEXIA)'?7N LEXIA=$$IA(+LEXIEN) S LEXUND="",LEXUN=1,(LEXMCT,LEXMC)=0 K LEXMCI
"RTN","LEXQHL2",66,0)
 M LEXARY=@(LEXRT_+LEXIEN_",2)") S (LEXMCT,LEXCT)=0,(LEXP,LEXEF)=""
"RTN","LEXQHL2",67,0)
 F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",68,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",69,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1) Q:LEXE'?7N  S:LEXE=$G(LEXIA) LEXUN=0
"RTN","LEXQHL2",70,0)
 . . S LEXMC=0 F  S LEXMC=$O(LEXARY(+LEXH,1,LEXMC))  Q:+LEXMC'>0  D
"RTN","LEXQHL2",71,0)
 . . . N LEXDG,LEXDRG,LEXN,LEXM S LEXN=$G(LEXARY(+LEXH,1,LEXMC,0)),LEXM=$P(LEXN,U,1)
"RTN","LEXQHL2",72,0)
 . . . Q:+LEXM'>0  S LEXM=$$UP^XLFSTR($P($G(^ICM(+LEXM,0)),U,1)) Q:'$L(LEXM)
"RTN","LEXQHL2",73,0)
 . . . S LEXDRG="",LEXDG=0 F  S LEXDG=$O(LEXARY(+LEXH,1,LEXMC,1,LEXDG))  Q:+LEXDG'>0  D
"RTN","LEXQHL2",74,0)
 . . . . S LEXN=$G(LEXARY(+LEXH,1,LEXMC,1,LEXDG,0)),LEXD=$P(LEXN,U,1) Q:'$L(LEXD)
"RTN","LEXQHL2",75,0)
 . . . . S:$E(LEXDRG,1,$L(LEXD))'=LEXD&(LEXDRG'[(" "_LEXD)) LEXDRG=$G(LEXDRG)_", "_LEXD
"RTN","LEXQHL2",76,0)
 . . . S LEXDRG=$$TM^LEXQHLM($$AND^LEXQHLM($$CS^LEXQHLM(LEXDRG))) S:$L(LEXDRG) LEXDRG="DRG "_LEXDRG Q:'$L(LEXDRG)
"RTN","LEXQHL2",77,0)
 . . . S LEXMCT=+($G(LEXMCT))+1 S LEXNMD(LEXE,LEXMCT,1)=LEXM,LEXNMD(LEXE,LEXMCT,2)=LEXDRG
"RTN","LEXQHL2",78,0)
 K LEXCMD S LEXEF="",(LEXC1,LEXC2)=0 I LEXIA?7N,+($G(LEXUN))>0 F  S LEXEF=$O(LEXOMD(LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",79,0)
 . K LEXNMD(LEXEF) S LEX1=0 F  S LEX1=$O(LEXOMD(LEXEF,LEX1)) Q:+LEX1'>0  S LEXC1=LEXC1+1,LEX2=0 F  S LEX2=$O(LEXOMD(LEXEF,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",80,0)
 . . S LEXC2=LEXC2+1 S:LEX2=1 LEXCMD(+LEXC1,1)=LEXEF_U_$G(LEXOMD(LEXEF,LEX1,LEX2)) S:LEX2=2 LEXCMD(+LEXC1,2)=$G(LEXOMD(LEXEF,LEX1,LEX2))
"RTN","LEXQHL2",81,0)
 S LEXEF="" F  S LEXEF=$O(LEXNMD(LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",82,0)
 . S LEX1=0 F  S LEX1=$O(LEXNMD(LEXEF,LEX1)) Q:+LEX1'>0  S LEXC1=LEXC1+1,LEX2=0,LEXC2=0 F  S LEX2=$O(LEXNMD(LEXEF,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",83,0)
 . . S LEXC2=LEXC2+1 S:LEX2=1 LEXCMD(+LEXC1,1)=LEXEF_U_$G(LEXNMD(LEXEF,LEX1,LEX2)) S:LEX2=2 LEXCMD(+LEXC1,2)=$G(LEXNMD(LEXEF,LEX1,LEX2))
"RTN","LEXQHL2",84,0)
 S (LEXCT,LEXVT,LEXMC,LEX1)=0,LEXP="" F  S LEX1=$O(LEXCMD(LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",85,0)
 . S LEXN=$G(LEXCMD(LEX1,1)) S LEXE=$P(LEXN,U,1),LEXM=$P(LEXN,U,2) Q:LEXE'?7N  Q:'$L(LEXM)  S LEXG=$G(LEXCMD(LEX1,2)) Q:'$L(LEXG)
"RTN","LEXQHL2",86,0)
 . I LEXE'=LEXP S LEXCT=LEXCT+1 S:LEXE'=LEXIA LEXVT=LEXVT+1
"RTN","LEXQHL2",87,0)
 . S LEXMC=0,LEXMC=LEXMC+1 I +($G(LEXUN))>0,LEXE=LEXIA S LEXS="Initial Unversioned Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",88,0)
 . I +($G(LEXUN))>0,LEXE'=LEXIA,LEXVT=1 S LEXS="Initial Versioned Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",89,0)
 . I LEXCT>1,LEXVT>1 S LEXS="Updated Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",90,0)
 . S LEXD=$$SD^LEXQHLM(LEXE),^TMP("LEXQHL",$J,LEXE,4,LEX1,1)=LEXD_U_LEXS,^TMP("LEXQHL",$J,LEXE,4,LEX1,2)=U_LEXM,^TMP("LEXQHL",$J,LEXE,4,LEX1,3)=U_("  "_LEXG)
"RTN","LEXQHL2",91,0)
 . S LEXP=LEXE
"RTN","LEXQHL2",92,0)
 Q
"RTN","LEXQHL2",93,0)
 ;     
"RTN","LEXQHL2",94,0)
DP ; Display
"RTN","LEXQHL2",95,0)
 S LEXDISP=$G(LEXDISP) Q:$L(LEXDISP)>8  Q:$L(LEXDISP)<2  Q:LEXDISP["^"  N LEXL S LEXL=$T(@LEXDISP+0) Q:'$L(LEXL)
"RTN","LEXQHL2",96,0)
 D @LEXDISP
"RTN","LEXQHL2",97,0)
 Q
"RTN","LEXQHL2",98,0)
SB ;   Subjective
"RTN","LEXQHL2",99,0)
 N LEX1,LEX2,LEX3,LEXC,LEXCT,LEXD,LEXE,LEXEC,LEXG,LEXHDR,LEXI,LEXID,LEXM,LEXN,LEXN1,LEXN2,LEXN3,LEXO1,LEXO2,LEXO3,LEXP,LEXS,LEXT
"RTN","LEXQHL2",100,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL2",101,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",102,0)
 F LEXID=1:1:4 D
"RTN","LEXQHL2",103,0)
 . N LEXHDR,LEXCT,LEXEC S (LEXEC,LEXCT)=0,LEXHDR=$$HD(LEXID) Q:'$L(LEXHDR)  S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",104,0)
 . . S LEXEC=LEXEC+1 I LEXID=1 D  Q
"RTN","LEXQHL2",105,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,1)) Q:'$L(LEXN)  S LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2) Q:'$L(LEXE)  Q:'$L(LEXS)  S LEXCT=LEXCT+1
"RTN","LEXQHL2",106,0)
 . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) S LEXT=LEXE,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",107,0)
 . . I LEXID=4 D  Q
"RTN","LEXQHL2",108,0)
 . . . N LEX2,LEXHDR,LEXC,LEXP,LEXO1,LEXO2,LEXO3 S LEXHDR=$$HD(4),(LEXC,LEX2)=0,LEXP="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,4,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",109,0)
 . . . . N LEXN1,LEXN2,LEXN3,LEXD,LEXS,LEXM,LEXG
"RTN","LEXQHL2",110,0)
 . . . . S LEXN1=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,1)) S LEXD=$P(LEXN1,U,1),LEXS=$P(LEXN1,U,2) Q:'$L(LEXD)  Q:'$L(LEXS)
"RTN","LEXQHL2",111,0)
 . . . . S LEXN2=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,2)) S LEXM=$P(LEXN2,U,2) Q:'$L(LEXM)
"RTN","LEXQHL2",112,0)
 . . . . S LEXN3=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,3)) S LEXG=$P(LEXN3,U,2) Q:'$L(LEXG)
"RTN","LEXQHL2",113,0)
 . . . . S LEXO1=$G(LEXD),LEXO1=LEXO1_$J(" ",(11-$L(LEXO1)))_"  "_LEXS,LEXO1="   "_LEXO1
"RTN","LEXQHL2",114,0)
 . . . . S LEXO2=$J(" ",11)_"  "_LEXM,LEXO2="   "_LEXO2
"RTN","LEXQHL2",115,0)
 . . . . S LEXO3=$J(" ",11)_"  "_LEXG,LEXO3="   "_LEXO3
"RTN","LEXQHL2",116,0)
 . . . . S LEXC=LEXC+1 I LEXEC=1,LEXC=1 D BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR))
"RTN","LEXQHL2",117,0)
 . . . . D:LEXP'=LEXD TL^LEXQHLM(LEXO1) D TL^LEXQHLM(LEXO2),TL^LEXQHLM(LEXO3)
"RTN","LEXQHL2",118,0)
 . . . . S LEXP=LEXD
"RTN","LEXQHL2",119,0)
 . . N LEX2 S LEX2=0,LEXE="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",120,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) S:LEX2=1 LEXE=$P(LEXN,U,1) Q:LEX2=1  Q:'$L(LEXE)
"RTN","LEXQHL2",121,0)
 . . . I LEX2=2 D  Q
"RTN","LEXQHL2",122,0)
 . . . . S LEXCT=LEXCT+1,LEXT=$G(LEXE),LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL2",123,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",124,0)
 . . . I LEX2>2 D  Q
"RTN","LEXQHL2",125,0)
 . . . . S LEXCT=LEXCT+1,LEXT="",LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL2",126,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",127,0)
 Q
"RTN","LEXQHL2",128,0)
CH ;   Chronological
"RTN","LEXQHL2",129,0)
 N LEX1,LEX2,LEX3,LEXC,LEXD,LEXDC,LEXI,LEXL1,LEXL2,LEXL3,LEXN,LEXP,LEXS,LEXT,LEXT1,LEXT2,LEXT3
"RTN","LEXQHL2",130,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL2",131,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",132,0)
 S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",133,0)
 . D BL^LEXQHLM N LEX2,LEXDC S (LEXDC,LEX2)=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",134,0)
 . . I LEX2=4 D  Q
"RTN","LEXQHL2",135,0)
 . . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL2",136,0)
 . . . . S LEXL1=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,1))
"RTN","LEXQHL2",137,0)
 . . . . S LEXD=$P(LEXL1,U,1),LEXS=$P(LEXL1,U,2) Q:'$L(LEXD)  Q:'$L(LEXS)
"RTN","LEXQHL2",138,0)
 . . . . S LEXL2=$P($G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,2)),U,2) Q:'$L(LEXL2)
"RTN","LEXQHL2",139,0)
 . . . . S LEXL3=$P($G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,3)),U,2) Q:'$L(LEXL3)
"RTN","LEXQHL2",140,0)
 . . . . S LEXT1=$S(LEXD'=LEXP:LEXD,1:""),LEXT1=LEXT1_$J(" ",(11-$L(LEXT1)))_$S($L(LEXD):"- ",1:"  ")_LEXS
"RTN","LEXQHL2",141,0)
 . . . . S LEXDC=LEXDC+1,LEXT1="   "_LEXT1 D:LEXDC=1 TL^LEXQHLM(LEXT1)
"RTN","LEXQHL2",142,0)
 . . . . S LEXT2=$J(" ",16)_LEXL2 D TL^LEXQHLM(LEXT2)
"RTN","LEXQHL2",143,0)
 . . . . S LEXT3=$J(" ",16)_LEXL3 D TL^LEXQHLM(LEXT3)
"RTN","LEXQHL2",144,0)
 . . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL2",145,0)
 . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL2",146,0)
 . . . N LEXN,LEXD,LEXS S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL2",147,0)
 . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXS S LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",148,0)
 . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL2",149,0)
 Q
"RTN","LEXQHL2",150,0)
 ; 
"RTN","LEXQHL2",151,0)
 ; Miscellaneous
"RTN","LEXQHL2",152,0)
IA(X) ;   Initial Activation
"RTN","LEXQHL2",153,0)
 N LEXEF,LEXH,LEXN,LEXS,LEXE,LEXIEN,LEXRT,LEXARY S LEXIEN=+($G(X)),LEXE="" Q:+LEXIEN'>0 ""
"RTN","LEXQHL2",154,0)
 S LEXRT=$$ROOT^ICDEX(80.1) M LEXARY=@(LEXRT_+LEXIEN_",66)") Q:'$D(LEXARY(0)) ""
"RTN","LEXQHL2",155,0)
 S LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D  Q:$G(LEXE)?7N
"RTN","LEXQHL2",156,0)
 . S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",157,0)
 . . S LEXN=$G(LEXARY(+LEXH,0)) S:+($P(LEXN,U,2))>0 LEXE=$P(LEXN,U,1) Q:$G(LEXE)?7N
"RTN","LEXQHL2",158,0)
 S X="" S:$G(LEXE)?7N X=$G(LEXE)
"RTN","LEXQHL2",159,0)
 Q X
"RTN","LEXQHL2",160,0)
HD(X) ;   Header
"RTN","LEXQHL2",161,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Operation/Procedure"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",162,0)
 Q ""
"RTN","LEXQHL3")
0^23^B40434251
"RTN","LEXQHL3",1,0)
LEXQHL3 ;ISL/KER - Query History - CPT/HCPCS Extract ;04/21/2014
"RTN","LEXQHL3",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHL3",3,0)
 ;               
"RTN","LEXQHL3",4,0)
 ; Global Variables
"RTN","LEXQHL3",5,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQHL3",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL3",7,0)
 ;               
"RTN","LEXQHL3",8,0)
 ; External References
"RTN","LEXQHL3",9,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQHL3",10,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQHL3",11,0)
 ;               
"RTN","LEXQHL3",12,0)
 Q
"RTN","LEXQHL3",13,0)
EN(X,Y) ; CPT/HCPCS Procedure File
"RTN","LEXQHL3",14,0)
 N LEXIEN,LEXDISP,LEXIA,LEXEF,LEXCT,LEXC S LEXIEN=$G(X),LEXDISP=$G(Y),LEXIA="" Q:+LEXIEN'>0  Q:'$D(^ICPT(+LEXIEN,0))  S LEXC=$P($G(^ICPT(+LEXIEN,0)),U,1)
"RTN","LEXQHL3",15,0)
 K ^TMP("LEXQHL",$J) S ^TMP("LEXQHL",$J,"IEN")=LEXIEN,^TMP("LEXQHL",$J,"CODE")=LEXC,^TMP("LEXQHL",$J,"NAME")=$P($$CPT^ICPTCOD(LEXC),U,3)
"RTN","LEXQHL3",16,0)
 S:'$L(LEXDISP) LEXDISP="SB" D ST,NM,DS,CP^LEXQHL5(LEXC) D:$L($G(LEXDISP)) DP K ^TMP("LEXQHL",$J)
"RTN","LEXQHL3",17,0)
 Q
"RTN","LEXQHL3",18,0)
ST ;   1  Status
"RTN","LEXQHL3",19,0)
 N LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXMS,LEXN,LEXS,LEXT
"RTN","LEXQHL3",20,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^ICPT(+LEXIEN,60,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL3",21,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL3",22,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEXMS S LEXN=$G(^ICPT(+LEXIEN,60,+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL3",23,0)
 . . Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1,LEXMS=$$MS^LEXQHLM(LEXE,1),LEXT=$S(+LEXS>0:"Activation",1:"Inactivation")
"RTN","LEXQHL3",24,0)
 . . S:+LEXS>0&(LEXCT=1) LEXT="Initial Activation"_LEXMS,LEXIA=LEXE
"RTN","LEXQHL3",25,0)
 . . S:$O(^ICPT(+LEXIEN,60,"B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final status change)"
"RTN","LEXQHL3",26,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,1,1)=LEXD_U_LEXT
"RTN","LEXQHL3",27,0)
 Q
"RTN","LEXQHL3",28,0)
NM ;   2  Procedure Name
"RTN","LEXQHL3",29,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT
"RTN","LEXQHL3",30,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^ICPT(+LEXIEN,61,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL3",31,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^ICPT(+LEXIEN,61,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL3",32,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(^ICPT(+LEXIEN,61,+LEXH,0)),LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($P(LEXN,U,2))
"RTN","LEXQHL3",33,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL3",34,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Procedure Name",+LEXCT>1:"Updated Procedure Name",1:"Procedure Name")
"RTN","LEXQHL3",35,0)
 . . S:$O(^ICPT(+LEXIEN,61,"B",LEXEF))=""&(LEXCT>1) LEXS=LEXS_" (final change)"
"RTN","LEXQHL3",36,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,2,1)=LEXD_U_LEXS
"RTN","LEXQHL3",37,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL3",38,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,2," "),-1)+1
"RTN","LEXQHL3",39,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,2,LEXC)=U_LEXT
"RTN","LEXQHL3",40,0)
 Q
"RTN","LEXQHL3",41,0)
DS ;   3  Description
"RTN","LEXQHL3",42,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT
"RTN","LEXQHL3",43,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^ICPT(+LEXIEN,62,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL3",44,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^ICPT(+LEXIEN,62,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL3",45,0)
 . . N LEXC,LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(^ICPT(+LEXIEN,62,+LEXH,0))
"RTN","LEXQHL3",46,0)
 . . S LEXE=$P(LEXN,U,1) S (LEXC,LEXI)=0 F  S LEXI=$O(^ICPT(+LEXIEN,62,+LEXH,1,LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL3",47,0)
 . . . S LEXT=$$TM^LEXQHLM($$UP^XLFSTR($G(^ICPT(+LEXIEN,62,+LEXH,1,LEXI,0)))) Q:'$L(LEXT)  S LEXC=LEXC+1,LEX(LEXC)=LEXT
"RTN","LEXQHL3",48,0)
 . . S LEXCT=LEXCT+1 D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL3",49,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Description",+LEXCT>1:"Updated Description",1:"Description")
"RTN","LEXQHL3",50,0)
 . . S:$O(^ICPT(+LEXIEN,62,"B",LEXEF))=""&(LEXCT>1) LEXS=LEXS_" (final change)"
"RTN","LEXQHL3",51,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,3,1)=LEXD_U_LEXS
"RTN","LEXQHL3",52,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL3",53,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,3," "),-1)+1
"RTN","LEXQHL3",54,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,3,LEXC)=U_LEXT
"RTN","LEXQHL3",55,0)
 Q
"RTN","LEXQHL3",56,0)
 ;     
"RTN","LEXQHL3",57,0)
DP ; Display
"RTN","LEXQHL3",58,0)
 S LEXDISP=$G(LEXDISP) Q:$L(LEXDISP)>8  Q:$L(LEXDISP)<2  Q:LEXDISP["^"  N LEXL S LEXL=$T(@LEXDISP+0) Q:'$L(LEXL)
"RTN","LEXQHL3",59,0)
 D @LEXDISP
"RTN","LEXQHL3",60,0)
 Q
"RTN","LEXQHL3",61,0)
SB ;   Subjective
"RTN","LEXQHL3",62,0)
 N LEX1,LEX2,LEX3,LEXC,LEXCT,LEXD,LEXE,LEXEC,LEXG,LEXHDR,LEXI,LEXID,LEXM,LEXN,LEXN1,LEXN2,LEXN3,LEXO1,LEXO2,LEXO3,LEXP,LEXS,LEXT
"RTN","LEXQHL3",63,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL3",64,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",65,0)
 F LEXID=1:1:4 D
"RTN","LEXQHL3",66,0)
 . N LEXHDR,LEXCT,LEXEC S (LEXEC,LEXCT)=0,LEXHDR=$$HD(LEXID) Q:'$L(LEXHDR)  S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL3",67,0)
 . . S LEXEC=LEXEC+1 I LEXID=1 D  Q
"RTN","LEXQHL3",68,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,1)) Q:'$L(LEXN)  S LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2) Q:'$L(LEXE)  Q:'$L(LEXS)  S LEXCT=LEXCT+1
"RTN","LEXQHL3",69,0)
 . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) S LEXT=LEXE,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",70,0)
 . . N LEX2 S LEX2=0,LEXE="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL3",71,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) S:LEX2=1 LEXE=$P(LEXN,U,1) Q:LEX2=1  Q:'$L(LEXE)
"RTN","LEXQHL3",72,0)
 . . . I LEX2=2 D  Q
"RTN","LEXQHL3",73,0)
 . . . . S LEXCT=LEXCT+1,LEXT=$G(LEXE),LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL3",74,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",75,0)
 . . . I LEX2>2 D  Q
"RTN","LEXQHL3",76,0)
 . . . . S LEXCT=LEXCT+1,LEXT="",LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL3",77,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",78,0)
 Q
"RTN","LEXQHL3",79,0)
CH ;   Chronological
"RTN","LEXQHL3",80,0)
 N LEX1,LEX2,LEX3,LEXC,LEXD,LEXDC,LEXI,LEXL1,LEXL2,LEXL3,LEXN,LEXP,LEXS,LEXT,LEXT1,LEXT2,LEXT3
"RTN","LEXQHL3",81,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL3",82,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",83,0)
 S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL3",84,0)
 . D BL^LEXQHLM N LEX2,LEXDC S (LEXDC,LEX2)=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL3",85,0)
 . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL3",86,0)
 . . . N LEXN,LEXD,LEXS S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL3",87,0)
 . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXS S LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL3",88,0)
 . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL3",89,0)
 Q
"RTN","LEXQHL3",90,0)
 ; 
"RTN","LEXQHL3",91,0)
 ; Miscellaneous
"RTN","LEXQHL3",92,0)
IA(X) ;   Initial Activation
"RTN","LEXQHL3",93,0)
 N LEXEF,LEXH,LEXN,LEXS,LEXE,LEXIEN S LEXIEN=+($G(X)),LEXE="" Q:+LEXIEN'>0 ""  Q:'$D(^ICPT(+LEXIEN,60,0)) ""  S LEXEF="" F  S LEXEF=$O(^ICPT(+LEXIEN,60,"B",LEXEF)) Q:'$L(LEXEF)  D  Q:$G(LEXE)?7N
"RTN","LEXQHL3",94,0)
 . S LEXH=0 F  S LEXH=$O(^ICPT(+LEXIEN,60,"B",LEXEF,LEXH)) Q:+LEXH'>0  S LEXN=$G(^ICPT(+LEXIEN,60,+LEXH,0)) S:+($P(LEXN,U,2))>0 LEXE=$P(LEXN,U,1) Q:$G(LEXE)?7N
"RTN","LEXQHL3",95,0)
 S X="" S:$G(LEXE)?7N X=$G(LEXE)
"RTN","LEXQHL3",96,0)
 Q X
"RTN","LEXQHL3",97,0)
HD(X) ;   Header
"RTN","LEXQHL3",98,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Procedure Name"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Lexicon Expression"
"RTN","LEXQHL3",99,0)
 Q ""
"RTN","LEXQHL4")
0^24^B100552373
"RTN","LEXQHL4",1,0)
LEXQHL4 ;ISL/KER - Query History - CPT Modifier Extract ;04/21/2014
"RTN","LEXQHL4",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHL4",3,0)
 ;               
"RTN","LEXQHL4",4,0)
 ; Global Variables
"RTN","LEXQHL4",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQHL4",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL4",7,0)
 ;    ^TMP("LEXQHLA")     SACC 2.3.2.5.1
"RTN","LEXQHL4",8,0)
 ;               
"RTN","LEXQHL4",9,0)
 ; External References
"RTN","LEXQHL4",10,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXQHL4",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQHL4",12,0)
 ;               
"RTN","LEXQHL4",13,0)
 Q
"RTN","LEXQHL4",14,0)
EN(X,Y,LEX) ; CPT Modifier File
"RTN","LEXQHL4",15,0)
 N LEXDISP,LEXRAN,LEXIEN,LEXIA,LEXEF,LEXCT,LEXC S LEXIEN=$G(X),LEXDISP=$G(Y),LEXRAN=$G(LEX),LEXIA="" Q:+LEXIEN'>0  Q:'$D(^DIC(81.3,+LEXIEN,0))
"RTN","LEXQHL4",16,0)
 S LEXC=$P($G(^DIC(81.3,+LEXIEN,0)),U,1) K ^TMP("LEXQHL",$J) S ^TMP("LEXQHL",$J,"IEN")=LEXIEN,^TMP("LEXQHL",$J,"CODE")=LEXC
"RTN","LEXQHL4",17,0)
 S ^TMP("LEXQHL",$J,"NAME")=$P($$MOD^ICPTMOD(LEXIEN,"I"),U,3) S:'$L(LEXDISP) LEXDISP="SB" D ST,NM,DS,AR,IR D:$L($G(LEXDISP)) DP
"RTN","LEXQHL4",18,0)
 Q
"RTN","LEXQHL4",19,0)
ST ;   1  Status
"RTN","LEXQHL4",20,0)
 N LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXMS,LEXN,LEXS,LEXT
"RTN","LEXQHL4",21,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^DIC(81.3,+LEXIEN,60,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL4",22,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL4",23,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEXMS S LEXN=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL4",24,0)
 . . Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1,LEXMS=$$MS^LEXQHLM(LEXE,1),LEXT=$S(+LEXS>0:"Activation",1:"Inactivation")
"RTN","LEXQHL4",25,0)
 . . S:+LEXS>0&(LEXCT=1) LEXT="Initial Activation"_LEXMS,LEXIA=LEXE
"RTN","LEXQHL4",26,0)
 . . S:$O(^DIC(81.3,+LEXIEN,60,"B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final status change)"
"RTN","LEXQHL4",27,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,1,1)=LEXD_U_LEXT
"RTN","LEXQHL4",28,0)
 Q
"RTN","LEXQHL4",29,0)
NM ;   2  Modifier Name
"RTN","LEXQHL4",30,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT
"RTN","LEXQHL4",31,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^DIC(81.3,+LEXIEN,61,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL4",32,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^DIC(81.3,+LEXIEN,61,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL4",33,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(^DIC(81.3,+LEXIEN,61,+LEXH,0)),LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($P(LEXN,U,2))
"RTN","LEXQHL4",34,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL4",35,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Modifier Name",+LEXCT>1:"Updated Modifier Name",1:"Modifier Name")
"RTN","LEXQHL4",36,0)
 . . S:$O(^DIC(81.3,+LEXIEN,61,"B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final Modifier Name change)"
"RTN","LEXQHL4",37,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,2,1)=LEXD_U_LEXS
"RTN","LEXQHL4",38,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL4",39,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,2," "),-1)+1
"RTN","LEXQHL4",40,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,2,LEXC)=U_LEXT
"RTN","LEXQHL4",41,0)
 Q
"RTN","LEXQHL4",42,0)
DS ;   3  Description
"RTN","LEXQHL4",43,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT
"RTN","LEXQHL4",44,0)
 S LEXCT=0,LEXEF="" F  S LEXEF=$O(^DIC(81.3,+LEXIEN,62,"B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL4",45,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(^DIC(81.3,+LEXIEN,62,"B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL4",46,0)
 . . N LEXC,LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(^DIC(81.3,+LEXIEN,62,+LEXH,0))
"RTN","LEXQHL4",47,0)
 . . S LEXE=$P(LEXN,U,1) S (LEXC,LEXI)=0 F  S LEXI=$O(^DIC(81.3,+LEXIEN,62,+LEXH,1,LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL4",48,0)
 . . . S LEXT=$$TM^LEXQHLM($$UP^XLFSTR($G(^DIC(81.3,+LEXIEN,62,+LEXH,1,LEXI,0)))) Q:'$L(LEXT)  S LEXC=LEXC+1,LEX(LEXC)=LEXT
"RTN","LEXQHL4",49,0)
 . . S LEXCT=LEXCT+1 D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL4",50,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Description",+LEXCT>1:"Updated Description",1:"Description")
"RTN","LEXQHL4",51,0)
 . . S:$O(^DIC(81.3,+LEXIEN,62,"B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final description change)"
"RTN","LEXQHL4",52,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,3,1)=LEXD_U_LEXS
"RTN","LEXQHL4",53,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL4",54,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,3," "),-1)+1
"RTN","LEXQHL4",55,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,3,LEXC)=U_LEXT
"RTN","LEXQHL4",56,0)
 Q
"RTN","LEXQHL4",57,0)
AR ;   4  Active Ranges
"RTN","LEXQHL4",58,0)
 K ^TMP("LEXQHLA",$J) N LEXACT,LEXAT,LEXATD,LEXB,LEXC,LEXD,LEXE,LEXI,LEXIA,LEXIAD,LEXICT,LEXN,LEXR
"RTN","LEXQHL4",59,0)
 S (LEXACT,LEXICT)=0,LEXI=0 F  S LEXI=$O(^DIC(81.3,+LEXIEN,10,LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL4",60,0)
 . N LEXN,LEXAT,LEXATD,LEXIA,LEXIAD,LEXB,LEXE,LEXR S LEXN=$G(^DIC(81.3,+LEXIEN,10,+LEXI,0)),LEXB=$P(LEXN,U,1) Q:$L(LEXB)'=5
"RTN","LEXQHL4",61,0)
 . S LEXE=$P(LEXN,U,2) S:'$L(LEXE) LEXE=LEXB S LEXAT=$P(LEXN,U,3) Q:'$L(LEXAT)  Q:LEXAT'?7N  S LEXATD=$$SD^LEXQHLM(LEXAT) Q:'$L(LEXATD)
"RTN","LEXQHL4",62,0)
 . S LEXIA=$P(LEXN,U,4) S:$L(LEXIA) LEXIAD=$$SD^LEXQHLM(LEXIA) Q:$L($G(LEXIA))&('$L($G(LEXIAD)))  S LEXR=LEXB_" - "_LEXE Q:LEXIA?7N
"RTN","LEXQHL4",63,0)
 . S LEXACT=LEXACT+1,^TMP("LEXQHLA",$J,LEXAT,LEXACT)=LEXATD_U_LEXR,^TMP("LEXQHLA",$J,"B",LEXR,LEXAT,LEXACT)=""
"RTN","LEXQHL4",64,0)
 S LEXC=0,LEXB="" F  S LEXB=$O(^TMP("LEXQHLA",$J,"B",LEXB)) Q:'$L(LEXB)  D
"RTN","LEXQHL4",65,0)
 . N LEXAT S LEXAT="" F  S LEXAT=$O(^TMP("LEXQHLA",$J,"B",LEXB,LEXAT)) Q:'$L(LEXAT)  D
"RTN","LEXQHL4",66,0)
 . . N LEXACT S LEXACT=0 F  S LEXACT=$O(^TMP("LEXQHLA",$J,"B",LEXB,LEXAT,LEXACT)) Q:+LEXACT'>0  D
"RTN","LEXQHL4",67,0)
 . . . N LEXN,LEXD,LEXR S LEXN=$G(^TMP("LEXQHLA",$J,LEXAT,LEXACT)),LEXD=$P(LEXN,U,1),LEXR=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXR)
"RTN","LEXQHL4",68,0)
 . . . S LEXC=LEXC+1,^TMP("LEXQHL",$J,LEXAT,4,LEXC)=LEXN
"RTN","LEXQHL4",69,0)
 K ^TMP("LEXQHLA",$J)
"RTN","LEXQHL4",70,0)
 Q
"RTN","LEXQHL4",71,0)
IR ;   5  Inactive Ranges
"RTN","LEXQHL4",72,0)
 K ^TMP("LEXQHLA",$J) N LEXACT,LEXAT,LEXATD,LEXB,LEXC,LEXD,LEXE,LEXI,LEXIA,LEXIAD,LEXICT,LEXN,LEXR
"RTN","LEXQHL4",73,0)
 S (LEXACT,LEXICT)=0,LEXI=0 F  S LEXI=$O(^DIC(81.3,+LEXIEN,10,LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL4",74,0)
 . N LEXN,LEXAT,LEXATD,LEXIA,LEXIAD,LEXB,LEXE,LEXR S LEXN=$G(^DIC(81.3,+LEXIEN,10,+LEXI,0)),LEXB=$P(LEXN,U,1) Q:$L(LEXB)'=5
"RTN","LEXQHL4",75,0)
 . S LEXE=$P(LEXN,U,2) S:'$L(LEXE) LEXE=LEXB S LEXAT=$P(LEXN,U,3) Q:'$L(LEXAT)  Q:LEXAT'?7N  S LEXATD=$$SD^LEXQHLM(LEXAT) Q:'$L(LEXATD)
"RTN","LEXQHL4",76,0)
 . S LEXIA=$P(LEXN,U,4) S:$L(LEXIA) LEXIAD=$$SD^LEXQHLM(LEXIA) Q:$L($G(LEXIA))&('$L($G(LEXIAD)))  S LEXR=LEXB_" - "_LEXE Q:LEXIA'?7N
"RTN","LEXQHL4",77,0)
 . S LEXACT=LEXACT+1,^TMP("LEXQHLA",$J,LEXAT,LEXACT)=LEXATD_U_LEXR,^TMP("LEXQHLA",$J,"B",LEXR,LEXAT,LEXACT)=""
"RTN","LEXQHL4",78,0)
 S LEXC=0,LEXB="" F  S LEXB=$O(^TMP("LEXQHLA",$J,"B",LEXB)) Q:'$L(LEXB)  D
"RTN","LEXQHL4",79,0)
 . N LEXAT S LEXAT="" F  S LEXAT=$O(^TMP("LEXQHLA",$J,"B",LEXB,LEXAT)) Q:'$L(LEXAT)  D
"RTN","LEXQHL4",80,0)
 . . N LEXACT S LEXACT=0 F  S LEXACT=$O(^TMP("LEXQHLA",$J,"B",LEXB,LEXAT,LEXACT)) Q:+LEXACT'>0  D
"RTN","LEXQHL4",81,0)
 . . . N LEXN,LEXD,LEXR S LEXN=$G(^TMP("LEXQHLA",$J,LEXAT,LEXACT)),LEXD=$P(LEXN,U,1),LEXR=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXR)
"RTN","LEXQHL4",82,0)
 . . . S LEXC=LEXC+1,^TMP("LEXQHL",$J,LEXAT,5,LEXC)=LEXN
"RTN","LEXQHL4",83,0)
 K ^TMP("LEXQHLA",$J)
"RTN","LEXQHL4",84,0)
 Q
"RTN","LEXQHL4",85,0)
 ;     
"RTN","LEXQHL4",86,0)
DP ; Display
"RTN","LEXQHL4",87,0)
 S LEXDISP=$G(LEXDISP) Q:$L(LEXDISP)>8  Q:$L(LEXDISP)<2  Q:LEXDISP["^"  N LEXL S LEXL=$T(@LEXDISP+0) Q:'$L(LEXL)
"RTN","LEXQHL4",88,0)
 D @LEXDISP
"RTN","LEXQHL4",89,0)
 Q
"RTN","LEXQHL4",90,0)
SB ;   Subjective
"RTN","LEXQHL4",91,0)
 N LEX1,LEX2,LEX3,LEXC,LEXCT,LEXD,LEXE,LEXEC,LEXG,LEXHD,LEXI,LEXID,LEXM,LEXN,LEXN1,LEXN2,LEXN3,LEXO1,LEXO2,LEXO3,LEXP,LEXS,LEXT
"RTN","LEXQHL4",92,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL4",93,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",94,0)
 F LEXID=1:1:5 D
"RTN","LEXQHL4",95,0)
 . N LEXHD,LEXCT,LEXEC S (LEXEC,LEXCT)=0,LEXHD=$$HD(LEXID) Q:'$L(LEXHD)  S LEXP=""
"RTN","LEXQHL4",96,0)
 . S LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL4",97,0)
 . . S LEXEC=LEXEC+1 I LEXID=1 D  Q
"RTN","LEXQHL4",98,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,1)) Q:'$L(LEXN)  S LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2) Q:'$L(LEXE)  Q:'$L(LEXS)  S LEXCT=LEXCT+1
"RTN","LEXQHL4",99,0)
 . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) S LEXT=LEXE,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",100,0)
 . . I LEXID=4 D  Q
"RTN","LEXQHL4",101,0)
 . . . Q:+($G(LEXRAN))'>0  N LEXP,LEX2,LEXSTR,LEXL S LEXSTR="",(LEXL,LEXP)="",LEX2=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,4,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL4",102,0)
 . . . . N LEXN,LEXD,LEXE,LEXM,LEXT S LEXN=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2)) S (LEXE,LEXD,LEXL)=$P(LEXN,U,1),LEXM=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXM)
"RTN","LEXQHL4",103,0)
 . . . . I ($L(LEXSTR)+$L(LEXM)+3)'>63 S LEXSTR=$$TM^LEXQHLM(LEXSTR_"   "_LEXM) Q
"RTN","LEXQHL4",104,0)
 . . . . I ($L(LEXSTR)+$L(LEXM)+3)>63 D
"RTN","LEXQHL4",105,0)
 . . . . . S LEXSTR=$$TM^LEXQHLM(LEXSTR) S:LEXD=LEXP LEXD="" S:$L(LEXE) LEXP=LEXE S LEXT=LEXD,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXSTR,LEXT="   "_LEXT
"RTN","LEXQHL4",106,0)
 . . . . . S LEXCT=LEXCT+1 D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT) S LEXSTR=LEXM
"RTN","LEXQHL4",107,0)
 . . . S LEXSTR=$$TM^LEXQHLM(LEXSTR) I $L(LEXSTR) D
"RTN","LEXQHL4",108,0)
 . . . . S:$G(LEXL)=$G(LEXP)&($L(LEXP)) LEXL="" S:$L(LEXL) LEXP=LEXL S LEXT=LEXL,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXSTR,LEXT="   "_LEXT
"RTN","LEXQHL4",109,0)
 . . . . S LEXCT=LEXCT+1 D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",110,0)
 . . I LEXID=5 D  Q
"RTN","LEXQHL4",111,0)
 . . . Q:+($G(LEXRAN))'>0  N LEXP,LEX2,LEXSTR,LEXL S LEXSTR="",(LEXL,LEXP)="",LEX2=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,5,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL4",112,0)
 . . . . N LEXN,LEXD,LEXE,LEXM,LEXT S LEXN=$G(^TMP("LEXQHL",$J,LEX1,5,LEX2))
"RTN","LEXQHL4",113,0)
 . . . . S (LEXE,LEXD,LEXL)=$P(LEXN,U,1),LEXM=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXM)
"RTN","LEXQHL4",114,0)
 . . . . I ($L(LEXSTR)+$L(LEXM)+3)'>63 S LEXSTR=$$TM^LEXQHLM(LEXSTR_"   "_LEXM) Q
"RTN","LEXQHL4",115,0)
 . . . . I ($L(LEXSTR)+$L(LEXM)+3)>63 D
"RTN","LEXQHL4",116,0)
 . . . . . S LEXSTR=$$TM^LEXQHLM(LEXSTR) S:LEXD=LEXP LEXD="" S:$L(LEXE) LEXP=LEXE S LEXT=LEXD,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXSTR,LEXT="   "_LEXT
"RTN","LEXQHL4",117,0)
 . . . . . S LEXCT=LEXCT+1 D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT) S LEXSTR=LEXM
"RTN","LEXQHL4",118,0)
 . . . S LEXSTR=$$TM^LEXQHLM(LEXSTR) I $L(LEXSTR) D
"RTN","LEXQHL4",119,0)
 . . . . S:$G(LEXL)=$G(LEXP)&($L(LEXP)) LEXL="" S:$L(LEXL) LEXP=LEXL S LEXT=LEXL,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXSTR,LEXT="   "_LEXT
"RTN","LEXQHL4",120,0)
 . . . . S LEXCT=LEXCT+1 D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",121,0)
 . . N LEX2 S LEX2=0,LEXE="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL4",122,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) S:LEX2=1 LEXE=$P(LEXN,U,1) Q:LEX2=1  Q:'$L(LEXE)
"RTN","LEXQHL4",123,0)
 . . . I LEX2=2 D  Q
"RTN","LEXQHL4",124,0)
 . . . . S LEXCT=LEXCT+1,LEXT=$G(LEXE),LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL4",125,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",126,0)
 . . . I LEX2>2 D  Q
"RTN","LEXQHL4",127,0)
 . . . . S LEXCT=LEXCT+1,LEXT="",LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL4",128,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHD)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",129,0)
 Q
"RTN","LEXQHL4",130,0)
CH ;   Chronological
"RTN","LEXQHL4",131,0)
 N LEX1,LEX2,LEX3,LEXC,LEXD,LEXDC,LEXI,LEXL1,LEXL2,LEXL3,LEXN,LEXP,LEXS,LEXT,LEXT1,LEXT2,LEXT3
"RTN","LEXQHL4",132,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL4",133,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",134,0)
 S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL4",135,0)
 . D BL^LEXQHLM N LEX2,LEXDC S (LEXDC,LEX2)=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL4",136,0)
 . . I LEX2=4!(LEX2=5) D  Q
"RTN","LEXQHL4",137,0)
 . . . Q:+($G(LEXRAN))'>0  N LEXHD,LEXEC,LEXSTR,LEXCT S LEXHD=$$HD(LEX2),(LEXCT,LEXEC)=0,LEXSTR=""
"RTN","LEXQHL4",138,0)
 . . . S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL4",139,0)
 . . . . N LEXN,LEXD,LEXM S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXM=$P(LEXN,U,2)
"RTN","LEXQHL4",140,0)
 . . . . S LEXEC=LEXEC+1 I LEXEC=1 D
"RTN","LEXQHL4",141,0)
 . . . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXHD,LEXT="   "_LEXT D TL^LEXQHLM(LEXT) S LEXCT=LEXCT+1
"RTN","LEXQHL4",142,0)
 . . . . S:LEXD'="" LEXP=LEXD I ($L(LEXSTR)+$L(LEXM)+3)'>63 S LEXSTR=$$TM^LEXQHLM(LEXSTR_"   "_LEXM) Q
"RTN","LEXQHL4",143,0)
 . . . . I ($L(LEXSTR)+$L(LEXM)+3)>63 S LEXSTR=$$TM^LEXQHLM(LEXSTR),LEXT=$J(" ",11)_"  "_LEXSTR,LEXT="   "_LEXT D TL^LEXQHLM(LEXT) S LEXCT=LEXCT+1 S LEXSTR=LEXM
"RTN","LEXQHL4",144,0)
 . . . S LEXSTR=$$TM^LEXQHLM(LEXSTR) I $L(LEXSTR) D
"RTN","LEXQHL4",145,0)
 . . . . S:$G(LEXL)=$G(LEXP)&($L(LEXP)) LEXL="" S:$L(LEXL) LEXP=LEXL S LEXT=$J(" ",11)_"  "_LEXSTR,LEXT="   "_LEXT S LEXCT=LEXCT+1 D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",146,0)
 . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL4",147,0)
 . . . N LEXN,LEXD,LEXS S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL4",148,0)
 . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXS S LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL4",149,0)
 . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL4",150,0)
 Q
"RTN","LEXQHL4",151,0)
 ; 
"RTN","LEXQHL4",152,0)
 ; Miscellaneous
"RTN","LEXQHL4",153,0)
IA(X) ;   Initial Activation
"RTN","LEXQHL4",154,0)
 N LEXEF,LEXH,LEXN,LEXS,LEXE,LEXIEN S LEXIEN=+($G(X)),LEXE="" Q:+LEXIEN'>0 ""  Q:'$D(^DIC(81.3,+LEXIEN,60,0)) ""  S LEXEF="" F  S LEXEF=$O(^DIC(81.3,+LEXIEN,60,"B",LEXEF)) Q:'$L(LEXEF)  D  Q:$G(LEXE)?7N
"RTN","LEXQHL4",155,0)
 . S LEXH=0 F  S LEXH=$O(^DIC(81.3,+LEXIEN,60,"B",LEXEF,LEXH)) Q:+LEXH'>0  S LEXN=$G(^DIC(81.3,+LEXIEN,60,+LEXH,0)) S:+($P(LEXN,U,2))>0 LEXE=$P(LEXN,U,1) Q:$G(LEXE)?7N
"RTN","LEXQHL4",156,0)
 S X="" S:$G(LEXE)?7N X=$G(LEXE)
"RTN","LEXQHL4",157,0)
 Q X
"RTN","LEXQHL4",158,0)
HD(X) ;   Header
"RTN","LEXQHL4",159,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Modifier Name"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Activated Ranges"  Q:+($G(X))=5 "Inactivated Ranges"
"RTN","LEXQHL4",160,0)
 Q ""
"RTN","LEXQHL5")
0^25^B21983988
"RTN","LEXQHL5",1,0)
LEXQHL5 ;ISL/KER - Query History - Lexicon ICD/CPT Extract ;04/21/2014
"RTN","LEXQHL5",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHL5",3,0)
 ;               
"RTN","LEXQHL5",4,0)
 ; Global Variables
"RTN","LEXQHL5",5,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL5",6,0)
 ;               
"RTN","LEXQHL5",7,0)
 ; External References
"RTN","LEXQHL5",8,0)
 ;    None
"RTN","LEXQHL5",9,0)
 ;               
"RTN","LEXQHL5",10,0)
 Q
"RTN","LEXQHL5",11,0)
CP(X) ;    4  Lexicon CPT
"RTN","LEXQHL5",12,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEIEN,LEXLEX,LEXH,LEXI,LEXN,LEXS,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXX S LEXSO=$G(X),(LEXCT,LEXSIEN)=0
"RTN","LEXQHL5",13,0)
 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQHL5",14,0)
 . N LEXN,LEXEIEN,LEXSAB,LEXLEX,LEXH,LEXD,LEXE S LEXN=$G(^LEX(757.02,+LEXSIEN,0)),LEXEIEN=+LEXN,LEXSAB=$P(LEXN,U,3) Q:"^3^4^"'[("^"_+LEXSAB_"^")
"RTN","LEXQHL5",15,0)
 . Q:+$P(LEXN,U,5)'>0  S LEXLEX=$P($G(^LEX(757.01,+LEXEIEN,0)),U,1),LEXH=0 F  S LEXH=$O(^LEX(757.02,+LEXSIEN,4,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL5",16,0)
 . . N LEXN S LEXN=$G(^LEX(757.02,+LEXSIEN,4,LEXH,0))  Q:+($P(LEXN,U,2))'>0
"RTN","LEXQHL5",17,0)
 . . S LEXE=$P(LEXN,U,1) Q:LEXE'?7N  S LEXD=$$SD^LEXQHLM(LEXE),LEXX(LEXE)=LEXD_U_LEXLEX
"RTN","LEXQHL5",18,0)
 S LEXCT=0,LEXE="" F  S LEXE=$O(LEXX(LEXE)) Q:'$L(LEXE)  D
"RTN","LEXQHL5",19,0)
 . N LEXN,LEXD,LEXT,LEXS,LEX S LEXN=$G(LEXX(LEXE)),LEXD=$P(LEXN,U,1),LEXT=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXT)
"RTN","LEXQHL5",20,0)
 . S LEX(1)=LEXT D PR^LEXQHLM(.LEX,63) Q:'$L($G(LEX(1)))  S LEXCT=LEXCT+1
"RTN","LEXQHL5",21,0)
 . S LEXS=$S(+LEXCT=1:"Initial Lexicon Expression",+LEXCT>1:"Updated Lexicon Expression",1:"Lexicon Expression")
"RTN","LEXQHL5",22,0)
 . S:$O(LEXX(LEXE))=""&(LEXCT>1) LEXS=LEXS_" (final change)"
"RTN","LEXQHL5",23,0)
 . S ^TMP("LEXQHL",$J,LEXE,4,1)=LEXD_U_LEXS
"RTN","LEXQHL5",24,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL5",25,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXE,4," "),-1)+1 S ^TMP("LEXQHL",$J,LEXE,4,LEXC)=U_LEXT
"RTN","LEXQHL5",26,0)
 Q
"RTN","LEXQHL5",27,0)
ID(X) ;    4  Lexicon ICD
"RTN","LEXQHL5",28,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEIEN,LEXLEX,LEXH,LEXI,LEXN,LEXS,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXX S LEXSO=$G(X),(LEXCT,LEXSIEN)=0
"RTN","LEXQHL5",29,0)
 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQHL5",30,0)
 . N LEXN,LEXEIEN,LEXSAB,LEXLEX,LEXH,LEXD,LEXE S LEXN=$G(^LEX(757.02,+LEXSIEN,0)),LEXEIEN=+LEXN,LEXSAB=$P(LEXN,U,3) Q:"^1^"'[("^"_+LEXSAB_"^")
"RTN","LEXQHL5",31,0)
 . Q:+$P(LEXN,U,5)'>0  S LEXLEX=$P($G(^LEX(757.01,+LEXEIEN,0)),U,1),LEXH=0 F  S LEXH=$O(^LEX(757.02,+LEXSIEN,4,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL5",32,0)
 . . N LEXN S LEXN=$G(^LEX(757.02,+LEXSIEN,4,LEXH,0))  Q:+($P(LEXN,U,2))'>0
"RTN","LEXQHL5",33,0)
 . . S LEXE=$P(LEXN,U,1) Q:LEXE'?7N  S LEXD=$$SD^LEXQHLM(LEXE),LEXX(LEXE)=LEXD_U_LEXLEX
"RTN","LEXQHL5",34,0)
 S LEXCT=0,LEXE="" F  S LEXE=$O(LEXX(LEXE)) Q:'$L(LEXE)  D
"RTN","LEXQHL5",35,0)
 . N LEXN,LEXD,LEXT,LEXS,LEX S LEXN=$G(LEXX(LEXE)),LEXD=$P(LEXN,U,1),LEXT=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXT)
"RTN","LEXQHL5",36,0)
 . S LEX(1)=LEXT D PR^LEXQHLM(.LEX,63) Q:'$L($G(LEX(1)))  S LEXCT=LEXCT+1
"RTN","LEXQHL5",37,0)
 . S LEXS=$S(+LEXCT=1:"Initial Lexicon Expression",+LEXCT>1:"Updated Lexicon Expression",1:"Lexicon Expression")
"RTN","LEXQHL5",38,0)
 . S:$O(LEXX(LEXE))=""&(LEXCT>1) LEXS=LEXS_" (final change)"
"RTN","LEXQHL5",39,0)
 . S ^TMP("LEXQHL",$J,LEXE,4,1)=LEXD_U_LEXS
"RTN","LEXQHL5",40,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL5",41,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXE,4," "),-1)+1 S ^TMP("LEXQHL",$J,LEXE,4,LEXC)=U_LEXT
"RTN","LEXQHL5",42,0)
 Q
"RTN","LEXQHL5",43,0)
IX(X,Y) ;    4  Lexicon ICD 10
"RTN","LEXQHL5",44,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEIEN,LEXLEX,LEXH,LEXI,LEXN,LEXS,LEXSR,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXX S LEXSO=$G(X),(LEXCT,LEXSIEN)=0
"RTN","LEXQHL5",45,0)
 S LEXSR=$G(Y) S:'$L(LEXSR) LEXSR="30^31" S LEXSR="^"_LEXSR_"^" F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQHL5",46,0)
 . N LEXN,LEXEIEN,LEXSAB,LEXLEX,LEXH,LEXD,LEXE S LEXN=$G(^LEX(757.02,+LEXSIEN,0)),LEXEIEN=+LEXN,LEXSAB=$P(LEXN,U,3)
"RTN","LEXQHL5",47,0)
 . Q:LEXSR'[("^"_+LEXSAB_"^")
"RTN","LEXQHL5",48,0)
 . Q:+$P(LEXN,U,5)'>0  S LEXLEX=$P($G(^LEX(757.01,+LEXEIEN,0)),U,1),LEXH=0 F  S LEXH=$O(^LEX(757.02,+LEXSIEN,4,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL5",49,0)
 . . N LEXN S LEXN=$G(^LEX(757.02,+LEXSIEN,4,LEXH,0))  Q:+($P(LEXN,U,2))'>0
"RTN","LEXQHL5",50,0)
 . . S LEXE=$P(LEXN,U,1) Q:LEXE'?7N  S LEXD=$$SD^LEXQHLM(LEXE),LEXX(LEXE)=LEXD_U_LEXLEX
"RTN","LEXQHL5",51,0)
 S LEXCT=0,LEXE="" F  S LEXE=$O(LEXX(LEXE)) Q:'$L(LEXE)  D
"RTN","LEXQHL5",52,0)
 . N LEXN,LEXD,LEXT,LEXS,LEX S LEXN=$G(LEXX(LEXE)),LEXD=$P(LEXN,U,1),LEXT=$P(LEXN,U,2) Q:'$L(LEXD)  Q:'$L(LEXT)
"RTN","LEXQHL5",53,0)
 . S LEX(1)=LEXT D PR^LEXQHLM(.LEX,63) Q:'$L($G(LEX(1)))  S LEXCT=LEXCT+1
"RTN","LEXQHL5",54,0)
 . S LEXS=$S(+LEXCT=1:"Initial Lexicon Expression",+LEXCT>1:"Updated Lexicon Expression",1:"Lexicon Expression")
"RTN","LEXQHL5",55,0)
 . S:$O(LEXX(LEXE))=""&(LEXCT>1) LEXS=LEXS_" (final change)"
"RTN","LEXQHL5",56,0)
 . S ^TMP("LEXQHL",$J,LEXE,4,1)=LEXD_U_LEXS
"RTN","LEXQHL5",57,0)
 . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL5",58,0)
 . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXE,4," "),-1)+1 S ^TMP("LEXQHL",$J,LEXE,4,LEXC)=U_LEXT
"RTN","LEXQHL5",59,0)
 Q
"RTN","LEXQHLM")
0^26^B7914203
"RTN","LEXQHLM",1,0)
LEXQHLM ;ISL/KER - Query History - Extract Misc ;04/21/2014
"RTN","LEXQHLM",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQHLM",3,0)
 ;               
"RTN","LEXQHLM",4,0)
 ; Global Variables
"RTN","LEXQHLM",5,0)
 ;    ^TMP("LEXQHO")      SACC 2.3.2.5.1
"RTN","LEXQHLM",6,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXQHLM",7,0)
 ;               
"RTN","LEXQHLM",8,0)
 ; External References
"RTN","LEXQHLM",9,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXQHLM",10,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQHLM",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQHLM",12,0)
 ;               
"RTN","LEXQHLM",13,0)
 Q
"RTN","LEXQHLM",14,0)
 ; Miscellaneous
"RTN","LEXQHLM",15,0)
BL ;   Blank Line
"RTN","LEXQHLM",16,0)
 D TL(" ")
"RTN","LEXQHLM",17,0)
 Q
"RTN","LEXQHLM",18,0)
TL(X) ;   Text Line
"RTN","LEXQHLM",19,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQHLM",20,0)
 N LEXI S LEXI=$O(^TMP("LEXQHO",$J," "),-1)+1,^TMP("LEXQHO",$J,LEXI)=$G(X),^TMP("LEXQHO",$J,0)=LEXI
"RTN","LEXQHLM",21,0)
 Q
"RTN","LEXQHLM",22,0)
SD(X) ;   Short Date
"RTN","LEXQHLM",23,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQHLM",24,0)
IA(X) ;   Initial Activation
"RTN","LEXQHLM",25,0)
 N LEXEF,LEXH,LEXN,LEXS,LEXE,LEXIEN,LEXRT,LEXARY S LEXIEN=+($G(X)),LEXE="" Q:+LEXIEN'>0 ""
"RTN","LEXQHLM",26,0)
 S LEXRT=$$ROOT^ICDEX(80.1) M LEXARY=@(LEXRT_+LEXIEN_",66)") Q:'$D(LEXARY(0)) ""
"RTN","LEXQHLM",27,0)
 S LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D  Q:$G(LEXE)?7N
"RTN","LEXQHLM",28,0)
 . S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHLM",29,0)
 . . S LEXN=$G(LEXARY(+LEXH,0)) S:+($P(LEXN,U,2))>0 LEXE=$P(LEXN,U,1) Q:$G(LEXE)?7N
"RTN","LEXQHLM",30,0)
 S X="" S:$G(LEXE)?7N X=$G(LEXE)
"RTN","LEXQHLM",31,0)
 Q X
"RTN","LEXQHLM",32,0)
MS(X,Y) ;   Date Message
"RTN","LEXQHLM",33,0)
 Q:$G(X)'>2781001&($G(Y)=0) " (business rule date used)"
"RTN","LEXQHLM",34,0)
 Q:$G(X)'>2890101&($G(Y)=1) " (business rule date used)"
"RTN","LEXQHLM",35,0)
 Q ""
"RTN","LEXQHLM",36,0)
PR(LEX,X) ;   Parse Array
"RTN","LEXQHLM",37,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXQHLM",38,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXQHLM",39,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXQHLM",40,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXQHLM",41,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXQHLM",42,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXQHLM",43,0)
 Q
"RTN","LEXQHLM",44,0)
HD(X) ;   Header
"RTN","LEXQHLM",45,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Operation/Procedure"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Major Diagnostic Category/DRG Groups"
"RTN","LEXQHLM",46,0)
 Q ""
"RTN","LEXQHLM",47,0)
AND(X) ;   Substitute 'and'
"RTN","LEXQHLM",48,0)
 S X=$G(X) Q:$L(X,", ")'>1 X
"RTN","LEXQHLM",49,0)
 S X=$P(X,", ",1,($L(X,", ")-1))_" and "_$P(X,", ",$L(X,", "))
"RTN","LEXQHLM",50,0)
 Q X
"RTN","LEXQHLM",51,0)
CS(X) ;   Trim Comma/Space
"RTN","LEXQHLM",52,0)
 S X=$$TM($G(X),","),X=$$TM($G(X)," "),X=$$TM($G(X),","),X=$$TM($G(X)," ")
"RTN","LEXQHLM",53,0)
 Q X
"RTN","LEXQHLM",54,0)
CL ;   Clear
"RTN","LEXQHLM",55,0)
 K LEXTEST
"RTN","LEXQHLM",56,0)
 Q X
"RTN","LEXQHLM",57,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXQHLM",58,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXQHLM",59,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXQHLM",60,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXQHLM",61,0)
 Q X
"RTN","LEXQID")
0^35^B59190420
"RTN","LEXQID",1,0)
LEXQID ;ISL/KER - Query - ICD Diagnosis - Extract ;04/21/2014
"RTN","LEXQID",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80**;Sep 23, 1996;Build 1
"RTN","LEXQID",3,0)
 ;               
"RTN","LEXQID",4,0)
 ; Global Variables
"RTN","LEXQID",5,0)
 ;    ^TMP("LEXQID")      SACC 2.3.2.5.1
"RTN","LEXQID",6,0)
 ;    ^TMP("LEXQIDA"      SACC 2.3.2.5.1
"RTN","LEXQID",7,0)
 ;    ^TMP("LEXQIDC"      SACC 2.3.2.5.1
"RTN","LEXQID",8,0)
 ;    ^TMP("LEXQIDN"      SACC 2.3.2.5.1
"RTN","LEXQID",9,0)
 ;    ^TMP("LEXQIDO"      SACC 2.3.2.5.1
"RTN","LEXQID",10,0)
 ;    ^TMP("LEXQIDR"      SACC 2.3.2.5.1
"RTN","LEXQID",11,0)
 ;               
"RTN","LEXQID",12,0)
 ; External References
"RTN","LEXQID",13,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQID",14,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQID",15,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEXQID",16,0)
 ;    $$EXIST^ICDEX       ICR   5747
"RTN","LEXQID",17,0)
 ;    $$HIST^ICDEX        ICR   5747
"RTN","LEXQID",18,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQID",19,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEXQID",20,0)
 ;    $$SD^ICDEX          ICR   5747
"RTN","LEXQID",21,0)
 ;    $$SYS^ICDEX         ICR   5747
"RTN","LEXQID",22,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQID",23,0)
 ;               
"RTN","LEXQID",24,0)
EN ; Main Entry Point
"RTN","LEXQID",25,0)
 N LEXENV S LEXENV=$$EV^LEXQM Q:+LEXENV'>0
"RTN","LEXQID",26,0)
 N DIC,DIR,DIRB,DIROUT,DIRUT,DTOUT,DUOUT,EXD,ICDFMT,ICDSYS,ICDVDT,LEX,LEX1,LEX2,LEX3,LEXAD,LEXBOD,LEXBRD,LEXBRW,LEXC,LEXCC,LEXCCD,LEXCCE,LEXCCI,LEXCDT
"RTN","LEXQID",27,0)
 N LEXCT,LEXCTE,LEXD,LEXDAT,LEXDDD,LEXDDE,LEXDDI,LEXDDT,LEXDEF,LEXDRG,LEXDRG1,LEXDRG2,LEXDRGC,LEXDRGD,LEXDRP,LEXDTXT,LEXDX,LEXE,LEXEDT,LEXEE,LEXEF
"RTN","LEXQID",28,0)
 N LEXEFF,LEXELDT,LEXENV,LEXES,LEXEVDT,LEXEXIT,LEXFA,LEXFUL,LEXGET,LEXH,LEXHIS,LEXI,LEXIA,LEXICD,LEXICDC,LEXID,LEXIEN,LEXIENS,LEXINC,LEXINCC
"RTN","LEXQID",29,0)
 N LEXINOT,LEXIREQ,LEXISO,LEXL,LEXLA,LEXLAST,LEXLD,LEXLDD,LEXLDR,LEXLDT,LEXLEF,LEXLEN,LEXLHI,LEXLHS,LEXLS,LEXLSD,LEXLSO,LEXLST,LEXLTXT,LEXLX,LEXM
"RTN","LEXQID",30,0)
 N LEXMC,LEXMD,LEXMDC,LEXMH,LEXN,LEXN0,LEXNAM,LEXNCC,LEXO,LEXOD,LEXODD,LEXP,LEXPF,LEXPIE,LEXR,LEXREF,LEXS,LEXSAB,LEXSD,LEXSDD,LEXSDT,LEXSIEN,LEXSO
"RTN","LEXQID",31,0)
 N LEXST,LEXSTA,LEXSTAT,LEXSTR,LEXSY,LEXSYS,LEXT,LEXTMP,LEXU,LEXVDT,LEXVTMP,LEXVTXT,LEXW,LEXWN,LEXX,X,Y S LEXEXIT=0
"RTN","LEXQID",32,0)
 K ^TMP("LEXQID",$J),^TMP("LEXQIDO",$J),^TMP("LEXQIDA",$J),^TMP("LEXQIDN",$J),^TMP("LEXQIDR",$J),^TMP("LEXQIDC",$J)
"RTN","LEXQID",33,0)
 W ! F  S LEXCDT=$$AD^LEXQM,LEXAD=LEXCDT Q:'$L(LEXCDT)  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2) Q:LEXCDT'?7N  D LOOK Q:LEXCDT'?7N  Q:+LEXEXIT>0
"RTN","LEXQID",34,0)
 K ^TMP("LEXQID",$J),^TMP("LEXQIDO",$J),^TMP("LEXQIDA",$J),^TMP("LEXQIDN",$J),^TMP("LEXQIDR",$J),^TMP("LEXQIDC",$J)
"RTN","LEXQID",35,0)
 Q 
"RTN","LEXQID",36,0)
LOOK ; ICD Lookup Loop
"RTN","LEXQID",37,0)
 N LEXGET,LEXST,LEXSD,LEXLD,LEXMD,LEXLX,LEXWN,LEXCC,LEXMC,LEXICD,LEXICDC
"RTN","LEXQID",38,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S LEXCDT="" Q
"RTN","LEXQID",39,0)
 S LEXLEN=62 F  S LEXICD=$$ICD^LEXQIDA D  Q:LEXICD="^"!(LEXICD="^^")
"RTN","LEXQID",40,0)
 . S:LEXICD="^^" LEXEXIT=1 Q:+($G(LEXEXIT))>0  Q:LEXICD="^"!(LEXICD="^^")
"RTN","LEXQID",41,0)
 . K LEXGET,LEXST,LEXSD,LEXLD,LEXMD,LEXLX,LEXWN,LEXCC,LEXMC,^TMP("LEXQID",$J)
"RTN","LEXQID",42,0)
 . N LEXIEN,LEXLDT,LEXELDT,LEXINC,LEXINOT,LEXIREQ,LEXINCC,LEXFA
"RTN","LEXQID",43,0)
 . S LEXIEN=+($G(LEXICD)),LEXLDT=+($G(LEXCDT)),LEXFA=$$FA(+LEXIEN) Q:+LEXIEN'>0  Q:LEXLDT'?7N
"RTN","LEXQID",44,0)
 . S LEXELDT=$$SD^LEXQM(LEXLDT) Q:'$L(LEXELDT)
"RTN","LEXQID",45,0)
 . S (LEXINOT,LEXIREQ,LEXINCC)=0 I LEXFA?7N,LEXCDT?7N,LEXFA'>LEXCDT D
"RTN","LEXQID",46,0)
 . . S LEXINOT=$$EXIST^ICDEX(+($G(LEXIEN)),20) S:+LEXINOT>0 LEXINOT=$$NOT^LEXQIDA(+($G(LEXIEN))) S:LEXINOT["^^" LEXEXIT=1 Q:LEXINOT["^"
"RTN","LEXQID",47,0)
 . . S LEXIREQ=$$EXIST^ICDEX(+($G(LEXIEN)),30) S:+LEXIREQ>0 LEXIREQ=$$REQ^LEXQIDA(+($G(LEXIEN))) S:LEXIREQ["^^" LEXEXIT=1 Q:LEXIREQ["^"
"RTN","LEXQID",48,0)
 . . S LEXINCC=$$EXIST^ICDEX(+($G(LEXIEN)),40) S:LEXINCC>0 LEXINCC=$$NCC^LEXQIDA(+($G(LEXIEN))) S:LEXINCC["^^" LEXEXIT=1 Q:LEXINCC["^"
"RTN","LEXQID",49,0)
 . D CSV,EN^LEXQID4
"RTN","LEXQID",50,0)
 Q
"RTN","LEXQID",51,0)
CSV ; Code Set Versioning Display
"RTN","LEXQID",52,0)
 N LEXEDT,LEXIEN,LEXIENS,LEXLTXT,LEXSTAT,LEXDAT
"RTN","LEXQID",53,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S (LEXICD,LEXCDT)="" Q
"RTN","LEXQID",54,0)
 S LEXIEN=+($G(LEXICD)),LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID",55,0)
 S LEXLTXT=$P($G(LEXICD),"^",3) S LEXSYS=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID",56,0)
 Q:+LEXIEN'>0  Q:'$L(LEXSO)  Q:+LEXSYS'>0
"RTN","LEXQID",57,0)
 S LEXDAT=$$ICDDX^ICDEX(LEXSO,LEXCDT,LEXSYS,"E")
"RTN","LEXQID",58,0)
 S LEXSO=$P(LEXDAT,"^",2),LEXNAM=$P(LEXDAT,"^",4)
"RTN","LEXQID",59,0)
 I '$L(LEXNAM) D
"RTN","LEXQID",60,0)
 . N LEXLA S LEXLA=$$LA^ICDEX(80,+LEXIEN,9999999)
"RTN","LEXQID",61,0)
 . S LEXNAM=$$SD^ICDEX(80,+LEXIEN,LEXLA)
"RTN","LEXQID",62,0)
 Q:'$L($G(LEXNAM))
"RTN","LEXQID",63,0)
 ; 
"RTN","LEXQID",64,0)
 ; Get the "Versioned" Fields
"RTN","LEXQID",65,0)
 ;            
"RTN","LEXQID",66,0)
 ;   Date/Status          80.066  (66)
"RTN","LEXQID",67,0)
 S LEXST=$$EF(+($G(LEXIEN)),+LEXCDT),LEXSTAT=+($P(LEXST,"^",2))
"RTN","LEXQID",68,0)
 ;   Diagnosis Name       80.067  (67)
"RTN","LEXQID",69,0)
 D SDS(+($G(LEXIEN)),+LEXCDT,.LEXSD,62,LEXSTAT)
"RTN","LEXQID",70,0)
 ;   Description          80.068  (68)
"RTN","LEXQID",71,0)
 D LDS^LEXQID2(+($G(LEXIEN)),+LEXCDT,.LEXLD,62,LEXSTAT)
"RTN","LEXQID",72,0)
 ;   Lexicon Expression          
"RTN","LEXQID",73,0)
 D LX^LEXQID2(+($G(LEXIEN)),+LEXCDT,.LEXLX,62,LEXSTAT)
"RTN","LEXQID",74,0)
 ;   Warning Message
"RTN","LEXQID",75,0)
 D WN^LEXQID2(+LEXCDT,.LEXWN,62)
"RTN","LEXQID",76,0)
 ;   DRG Groups           80.071  (71)
"RTN","LEXQID",77,0)
 D DRG^LEXQID3(+LEXIEN,+LEXCDT,LEXLEN)
"RTN","LEXQID",78,0)
 ;   CC                   80.0103 (103)
"RTN","LEXQID",79,0)
 D CC^LEXQID3(+($G(LEXIEN)),+LEXCDT,.LEXCC)
"RTN","LEXQID",80,0)
 ;   MDC                  80.072  (72)
"RTN","LEXQID",81,0)
 D MDC^LEXQID2(+($G(LEXIEN)),LEXCDT,.LEXMC)
"RTN","LEXQID",82,0)
 ;            
"RTN","LEXQID",83,0)
 ; Get the "Asked for" Fields
"RTN","LEXQID",84,0)
 ;            
"RTN","LEXQID",85,0)
 ;   Codes not to use     80.01   (20) 
"RTN","LEXQID",86,0)
 D:+($G(LEXINOT))>0 NOT^LEXQID3(+LEXIEN,+LEXCDT,LEXLEN)
"RTN","LEXQID",87,0)
 ;   Codes required with  80.02   (30) 
"RTN","LEXQID",88,0)
 D:+($G(LEXIREQ))>0 REQ^LEXQID3(+LEXIEN,+LEXCDT,LEXLEN)
"RTN","LEXQID",89,0)
 ;   Codes not CC with    80.03   (40)
"RTN","LEXQID",90,0)
 D:+($G(LEXINCC))>0 NCC^LEXQID3(+LEXIEN,+LEXCDT,LEXLEN)
"RTN","LEXQID",91,0)
 Q
"RTN","LEXQID",92,0)
 ; 
"RTN","LEXQID",93,0)
EF(X,LEXCDT) ; Effective Dates
"RTN","LEXQID",94,0)
 N LEX,LEXAD,LEXBRD,LEXBRW,LEXEE,LEXEF,LEXES,LEXFA,LEXH,LEXI,LEXID,LEXIEN,LEXLS,LEXSO,LEXST,LEXSY S LEXIEN=+($G(X)),LEXCDT=+($G(LEXCDT))
"RTN","LEXQID",95,0)
 Q:+LEXIEN'>0 "^^"  Q:LEXCDT'?7N "^^"  S LEXSO=$$CODEC^ICDEX(80,+LEXIEN),LEXSY=$$SYS^ICDEX(LEXSO,LEXCDT),LEX=$$ICDDX^ICDEX(LEXSO,LEXCDT,LEXSY,"E")
"RTN","LEXQID",96,0)
 S LEXFA=$$FA(+LEXIEN),(LEXLS,LEXST)=$P(LEX,"^",10),LEXID=$P(LEX,"^",12),LEXBRD=$$IMPDATE^LEXU("ICD"),LEXBRW=""
"RTN","LEXQID",97,0)
 I LEXCDT<LEXBRD&(+LEXFA=LEXBRD) D
"RTN","LEXQID",98,0)
 . S LEXBRW="Warning:  The 'Based on Date' provided precedes the initial Code Set Business Rule date of "
"RTN","LEXQID",99,0)
 . S LEXBRW=LEXBRW_$$SD^LEXQM(LEXBRD)_", the Effective date may be inaccurate."
"RTN","LEXQID",100,0)
 S LEXAD=$P(LEX,"^",17),LEXES=$S(+LEXST>0:"Active",1:"Inactive")
"RTN","LEXQID",101,0)
 S:+LEXST'>0&(+LEXAD'>0) LEXES="Not Applicable",LEXLS=-1
"RTN","LEXQID",102,0)
 S:+LEXFA>0&(+LEXCDT>0)&(LEXFA>LEXCDT) LEXES="Pending",LEXLS=-1,LEXST=0,LEXBRW=""
"RTN","LEXQID",103,0)
 S:LEXST>0 LEXEF=LEXAD S:LEXST'>0 LEXEF=LEXID
"RTN","LEXQID",104,0)
 S:LEXST'>0&(+LEXID'>0) LEXEF=LEXFA S LEXEE=$$SD^LEXQM(LEXEF)
"RTN","LEXQID",105,0)
 I LEXST'>0,+LEXID'>0,$L(LEXEE),+LEXEF>LEXCDT S LEXEE="(future activation of "_LEXEE_")",LEXEF=""
"RTN","LEXQID",106,0)
 S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQID",107,0)
 Q X
"RTN","LEXQID",108,0)
 ; 
"RTN","LEXQID",109,0)
SDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Diagnosis (short description)
"RTN","LEXQID",110,0)
 ; 
"RTN","LEXQID",111,0)
 ; LEX=# of Lines
"RTN","LEXQID",112,0)
 ; LEX(0)=External Date of Diagnosis Name
"RTN","LEXQID",113,0)
 ; LEX(#)=Diagnosis Name
"RTN","LEXQID",114,0)
 ; 
"RTN","LEXQID",115,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQID",116,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQID",117,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXSD,LEXSDD
"RTN","LEXQID",118,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQID",119,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID",120,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID",121,0)
 S LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID",122,0)
 S LEXLA=$$LA^ICDEX(80,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQID",123,0)
 S LEXLAST=$$ICDDX^ICDEX(LEXSO,LEXLA,LEXSY,"E")
"RTN","LEXQID",124,0)
 S LEXLSD=$P(LEXLAST,"^",5),LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQID",125,0)
 S LEXSD=$$SD^ICDEX(80,+LEXIEN,LEXVDT,.LEXS)
"RTN","LEXQID",126,0)
 S LEXSD=$G(LEXS(1)),LEXSDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQID",127,0)
 S:'$L(LEXSD) LEXSDD="--/--/----" S LEXM=""
"RTN","LEXQID",128,0)
 I $P(LEXSD,"^",1)="-1"!('$L(LEXSD)) D
"RTN","LEXQID",129,0)
 . S LEXM="Diagnosis Short Name is not available."
"RTN","LEXQID",130,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQID",131,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQID",132,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQID",133,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQID",134,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQID",135,0)
 I $L(LEXSD)&($P(LEXSD,"^",1)'="-1") D
"RTN","LEXQID",136,0)
 . S LEXM="" S LEXOD=LEXSD,LEXODD=$S(LEXSDD?7N:$$ED^LEXQM(LEXSDD),1:"--/--/----")
"RTN","LEXQID",137,0)
 S:'$L(LEXOD) LEXOD="Diagnosis Short Name not found"
"RTN","LEXQID",138,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQID",139,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID",140,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQID",141,0)
 I $L($G(LEXM)) D
"RTN","LEXQID",142,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID",143,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQID",144,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQID",145,0)
 Q
"RTN","LEXQID",146,0)
 ; 
"RTN","LEXQID",147,0)
 ; Miscellaneous
"RTN","LEXQID",148,0)
FA(X) ;   First Activation
"RTN","LEXQID",149,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQID",150,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80,+LEXIEN),LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID",151,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQID",152,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQID",153,0)
 S X=LEXFA
"RTN","LEXQID",154,0)
 Q X
"RTN","LEXQID",155,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQID",156,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQID",157,0)
 S LEXSYS=$$CSI^ICDEX(80,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQID",158,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQID",159,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQID",160,0)
 Q X
"RTN","LEXQID2")
0^36^B35722447
"RTN","LEXQID2",1,0)
LEXQID2 ;ISL/KER - Query - ICD Diagnosis - Extract (cont) ;04/21/2014
"RTN","LEXQID2",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80**;Sep 23, 1996;Build 1
"RTN","LEXQID2",3,0)
 ;               
"RTN","LEXQID2",4,0)
 ; Global Variables
"RTN","LEXQID2",5,0)
 ;    ^ICM(               ICR   4488
"RTN","LEXQID2",6,0)
 ;               
"RTN","LEXQID2",7,0)
 ; External References
"RTN","LEXQID2",8,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQID2",9,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQID2",10,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEXQID2",11,0)
 ;    $$HIST^ICDEX        ICR   5747
"RTN","LEXQID2",12,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEXQID2",13,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEXQID2",14,0)
 ;    $$VMDC^ICDEX        ICR   5747
"RTN","LEXQID2",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQID2",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQID2",17,0)
 ;               
"RTN","LEXQID2",18,0)
 ; Local Variables NEWed or KILLed in LEXQID
"RTN","LEXQID2",19,0)
 ;    LEXLX               Local Array containing Lexicon term
"RTN","LEXQID2",20,0)
 ;               
"RTN","LEXQID2",21,0)
 Q
"RTN","LEXQID2",22,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Long Description
"RTN","LEXQID2",23,0)
 ; 
"RTN","LEXQID2",24,0)
 ; LEX=# of Lines
"RTN","LEXQID2",25,0)
 ; LEX(0)=External Date of Description
"RTN","LEXQID2",26,0)
 ; LEX(#)=Description
"RTN","LEXQID2",27,0)
 ; 
"RTN","LEXQID2",28,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQID2",29,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQID2",30,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXLD,LEXLDD
"RTN","LEXQID2",31,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQID2",32,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",33,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",34,0)
 S LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",35,0)
 S LEXLA=$$LA^ICDEX(80,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQID2",36,0)
 S LEXLSD=$$LD^ICDEX(80,+LEXIEN,LEXLA)
"RTN","LEXQID2",37,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQID2",38,0)
 S LEXLD=$$LD^ICDEX(80,+LEXIEN,LEXVDT,.LEXS,245)
"RTN","LEXQID2",39,0)
 S LEXLD=$G(LEXS(1)),LEXLDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQID2",40,0)
 S:'$L(LEXLD) LEXLDD="--/--/----" S LEXM=""
"RTN","LEXQID2",41,0)
 I $P(LEXLD,"^",1)="-1"!('$L(LEXLD)) D
"RTN","LEXQID2",42,0)
 . S LEXM="Diagnosis Description is not available."
"RTN","LEXQID2",43,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQID2",44,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQID2",45,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQID2",46,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQID2",47,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQID2",48,0)
 I $L(LEXLD)&($P(LEXLD,"^",1)'="-1") D
"RTN","LEXQID2",49,0)
 . S LEXM="" S LEXOD=LEXLD,LEXODD=$S(LEXLDD?7N:$$ED^LEXQM(LEXLDD),1:"--/--/----")
"RTN","LEXQID2",50,0)
 S:'$L(LEXOD) LEXOD="Diagnosis Description not found"
"RTN","LEXQID2",51,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQID2",52,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",53,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQID2",54,0)
 I $L($G(LEXM)) D
"RTN","LEXQID2",55,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",56,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQID2",57,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQID2",58,0)
 Q
"RTN","LEXQID2",59,0)
LX(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Lexicon Expression
"RTN","LEXQID2",60,0)
 ; 
"RTN","LEXQID2",61,0)
 ; LEX=# of Lines
"RTN","LEXQID2",62,0)
 ; LEX(0)=External Date of Expression
"RTN","LEXQID2",63,0)
 ; LEX(#)=Expression
"RTN","LEXQID2",64,0)
 ; 
"RTN","LEXQID2",65,0)
 N LEXEF,LEXEVDT,LEXLEX,LEXEE,LEXFA,LEXI,LEXIA,LEXIEN,LEXLEF,LEXLHS,LEXLST,LEXM,LEXN0
"RTN","LEXQID2",66,0)
 N LEXPF,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXVTMP S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQID2",67,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQID2",68,0)
 S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62
"RTN","LEXQID2",69,0)
 Q:'$L(LEXEVDT)  S LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",70,0)
 Q:'$L(LEXSO)  S LEXFA=$$FA(+LEXIEN),LEXM="",LEXIA=$$IA(LEXVDT) S LEXSIEN=0
"RTN","LEXQID2",71,0)
 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQID2",72,0)
 . N LEXN0 S LEXN0=$G(^LEX(757.02,+LEXSIEN,0)),LEXSAB=$P(LEXN0,"^",3)
"RTN","LEXQID2",73,0)
 . Q:"^1^"'[("^"_LEXSAB_"^")  S LEXPF=+($P(LEXN0,"^",5)) S LEXLEF=$O(^LEX(757.02,+LEXSIEN,4,"B",(LEXVDT+.99999)),-1) I LEXLEF?7N D
"RTN","LEXQID2",74,0)
 . . S LEXLHS=$O(^LEX(757.02,+LEXSIEN,4,"B",+LEXLEF," "),-1) I +LEXLHS>0 D
"RTN","LEXQID2",75,0)
 . . . S LEXLST=$G(^LEX(757.02,+LEXSIEN,4,+LEXLHS,0)),LEXLST=$P(LEXLST,"^",2)
"RTN","LEXQID2",76,0)
 . . . S:LEXLST>0 LEXVTMP(+LEXPF,LEXSIEN)=+LEXN0_"^"_LEXLEF
"RTN","LEXQID2",77,0)
 S (LEXLEX,LEXEF)="",LEXSIEN=$O(LEXVTMP(1,0)),LEXLEX=+($G(LEXVTMP(1,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(1,+LEXSIEN)),"^",2)
"RTN","LEXQID2",78,0)
 S:+LEXSIEN'>0!(+LEXLEX'>0) LEXSIEN=$O(LEXVTMP(0,0)),LEXLEX=+($G(LEXVTMP(0,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(0,+LEXSIEN)),"^",2)
"RTN","LEXQID2",79,0)
 K LEX I +LEXLEX>0,$L($G(^LEX(757.01,+LEXLEX,0))),$L(LEXEF),LEXEF?7N  D  Q
"RTN","LEXQID2",80,0)
 . K LEX N LEXT,LEXM,LEXI S LEXT(1)=$G(^LEX(757.01,+LEXLEX,0)) D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",81,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S:$L($G(LEXT(LEXI))) LEX(+LEXI)=$G(LEXT(LEXI))
"RTN","LEXQID2",82,0)
 . S LEX=+($O(LEX(" "),-1)) S LEXEE=$$SD^LEXQM(LEXEF) S LEX(0)=LEXEE
"RTN","LEXQID2",83,0)
 Q
"RTN","LEXQID2",84,0)
WN(X,LEX,LEXLEN) ; Warning
"RTN","LEXQID2",85,0)
 ;            
"RTN","LEXQID2",86,0)
 ; LEX=# of Lines
"RTN","LEXQID2",87,0)
 ; LEX(0)=External Date
"RTN","LEXQID2",88,0)
 ; LEX(#)=Warning
"RTN","LEXQID2",89,0)
 ;            
"RTN","LEXQID2",90,0)
 N LEXVDT,LEXREF,LEXIA,LEXTMP K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXIA=$$IA(LEXVDT) Q:+LEXIA'>0  S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQID2",91,0)
 S LEXREF="Diagnosis (Short Name) and Description" S:$D(LEXLX) LEXREF="Diagnosis (Short Name), Description and Lexicon Term"
"RTN","LEXQID2",92,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The "_LEXREF_" may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQID2",93,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQID2",94,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQID2",95,0)
 Q
"RTN","LEXQID2",96,0)
MDC(X,LEXVDT,LEX) ; Major Diagnostic Category
"RTN","LEXQID2",97,0)
 ; 
"RTN","LEXQID2",98,0)
 ; LEX=# of Lines
"RTN","LEXQID2",99,0)
 ; LEX(0)=External Date of MDC
"RTN","LEXQID2",100,0)
 ; LEX(#)=MDC
"RTN","LEXQID2",101,0)
 ; 
"RTN","LEXQID2",102,0)
 N LEXEF,LEXMDC,LEXMH,LEXN0,LEXNAM
"RTN","LEXQID2",103,0)
 K LEX S LEX=0,LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXQID2",104,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",105,0)
 S LEXMDC=$$VMDC^ICDEX(+LEXIEN,+LEXVDT,1)
"RTN","LEXQID2",106,0)
 S LEXEF=$P(LEXMDC,"^",2),LEXMDC=$P(LEXMDC,"^",1)
"RTN","LEXQID2",107,0)
 Q:+LEXMDC'>0  Q:'$D(^ICM(+LEXMDC,0))
"RTN","LEXQID2",108,0)
 S LEXNAM=$P($G(^ICM(+LEXMDC,0)),"^",1) Q:'$L(LEXNAM)
"RTN","LEXQID2",109,0)
 S LEX=1,LEX(0)=$$SD^LEXQM(LEXEF),LEX(1)=$$UP^XLFSTR(LEXNAM)
"RTN","LEXQID2",110,0)
 Q
"RTN","LEXQID2",111,0)
 ; Miscellaneous
"RTN","LEXQID2",112,0)
FA(X) ;   First Activation
"RTN","LEXQID2",113,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQID2",114,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80,+LEXIEN),LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",115,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQID2",116,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQID2",117,0)
 S X=LEXFA
"RTN","LEXQID2",118,0)
 Q X
"RTN","LEXQID2",119,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQID2",120,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQID2",121,0)
 S LEXSYS=$$CSI^ICDEX(80,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",122,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQID2",123,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQID2",124,0)
 Q X
"RTN","LEXQID3")
0^37^B74079700
"RTN","LEXQID3",1,0)
LEXQID3 ;ISL/KER - Query - ICD Diagnosis - Extract (cont) ;04/21/2014
"RTN","LEXQID3",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQID3",3,0)
 ;               
"RTN","LEXQID3",4,0)
 ; Global Variables
"RTN","LEXQID3",5,0)
 ;    ^ICD(               ICR   4487
"RTN","LEXQID3",6,0)
 ;    ^TMP("LEXQID"       SACC 2.3.2.5.1
"RTN","LEXQID3",7,0)
 ;    ^TMP("LEXQIDC"      SACC 2.3.2.5.1
"RTN","LEXQID3",8,0)
 ;    ^TMP("LEXQIDN"      SACC 2.3.2.5.1
"RTN","LEXQID3",9,0)
 ;    ^TMP("LEXQIDR"      SACC 2.3.2.5.1
"RTN","LEXQID3",10,0)
 ;               
"RTN","LEXQID3",11,0)
 ; External References
"RTN","LEXQID3",12,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQID3",13,0)
 ;    $$CODECS^ICDEX      ICR   5747
"RTN","LEXQID3",14,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQID3",15,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQID3",16,0)
 ;    $$GETDRG^ICDEX      ICR   5747
"RTN","LEXQID3",17,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQID3",18,0)
 ;    $$NCC^ICDEX         ICR   5747
"RTN","LEXQID3",19,0)
 ;    $$NOT^ICDEX         ICR   5747
"RTN","LEXQID3",20,0)
 ;    $$REQ^ICDEX         ICR   5747
"RTN","LEXQID3",21,0)
 ;    $$VCC^ICDEX         ICR   5747
"RTN","LEXQID3",22,0)
 ;    DRGD^ICDGTDRG       ICR   4052
"RTN","LEXQID3",23,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQID3",24,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQID3",25,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQID3",26,0)
 ;               
"RTN","LEXQID3",27,0)
 Q
"RTN","LEXQID3",28,0)
NOT(X,LEXVDT,LEXLEN) ; Include ICD Codes not to use with ***.**
"RTN","LEXQID3",29,0)
 ; 
"RTN","LEXQID3",30,0)
 ; ^TMP("LEXQIDN",$J,IEN)=CODE
"RTN","LEXQID3",31,0)
 ; ^TMP("LEXQIDN",$J,"B",(CODE_" "),IEN)=""
"RTN","LEXQID3",32,0)
 ; 
"RTN","LEXQID3",33,0)
 ; ^TMP("LEXQID",$J,"NOT",0)=<total>
"RTN","LEXQID3",34,0)
 ; ^TMP("LEXQID",$J,"NOT",1,1)=<header>
"RTN","LEXQID3",35,0)
 ; ^TMP("LEXQID",$J,"NOT",2,#)=<header text>
"RTN","LEXQID3",36,0)
 ; ^TMP("LEXQID",$J,"NOT",3,<code >)=<code>_"  "_<diagnosis>
"RTN","LEXQID3",37,0)
 ; 
"RTN","LEXQID3",38,0)
 K ^TMP("LEXQIDN",$J),^TMP("LEXQID",$J,"NOT")
"RTN","LEXQID3",39,0)
 N LEX,LEXI,LEXC,LEXICD,LEXIEN,LEXISO,LEXSO,LEXSD,EXD,LEXT,LEXSTR,LEXO
"RTN","LEXQID3",40,0)
 S LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID3",41,0)
 S LEXISO=$$CODEC^ICDEX(80,+LEXIEN) Q:'$L(LEXISO)
"RTN","LEXQID3",42,0)
 S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62 S X=$$NOT^ICDEX(+($G(LEXIEN)),"LEXQIDN",1)
"RTN","LEXQID3",43,0)
 S LEXO="" F  S LEXO=$O(^TMP("LEXQIDN",$J,"B",LEXO)) Q:'$L(LEXO)  D
"RTN","LEXQID3",44,0)
 . N LEXD S LEXICD=$O(^TMP("LEXQIDN",$J,"B",LEXO,0)) Q:+LEXICD'>0
"RTN","LEXQID3",45,0)
 . S LEXSYS=$$CSI^ICDEX(80,+LEXICD)
"RTN","LEXQID3",46,0)
 . S LEXD=$$ICDDX^ICDEX(+LEXICD,LEXVDT,LEXSYS,"I")
"RTN","LEXQID3",47,0)
 . S LEXSO=$P(LEXD,"^",2),LEXSD=$$UP^XLFSTR($P(LEXD,"^",4)) Q:'$L(LEXSO)  Q:'$L(LEXSD)
"RTN","LEXQID3",48,0)
 . S LEXT=LEXSO,LEXT=LEXT_$J(" ",(9-$L(LEXT)))_LEXSD
"RTN","LEXQID3",49,0)
 . S ^TMP("LEXQID",$J,"NOT",3,(LEXSO_" "))=LEXT
"RTN","LEXQID3",50,0)
 K ^TMP("LEXQIDN",$J) S LEXC=0,LEXI=""
"RTN","LEXQID3",51,0)
 F  S LEXI=$O(^TMP("LEXQID",$J,"NOT",3,LEXI)) Q:'$L(LEXI)  S LEXC=LEXC+1
"RTN","LEXQID3",52,0)
 S ^TMP("LEXQID",$J,"NOT",0)=+($G(LEXC))
"RTN","LEXQID3",53,0)
 S LEXI=+($G(^TMP("LEXQID",$J,"NOT",0))) I LEXI>0 D
"RTN","LEXQID3",54,0)
 . N LEX,LEXC,LEXSTR,LEXT S LEXSTR="The following code"_$S(LEXI>1:"s ",1:" ")_"cannot be used in conjunction with "
"RTN","LEXQID3",55,0)
 . S:$L($G(LEXISO)) LEXSTR=LEXSTR_"ICD Code "_LEXISO S:'$L($G(LEXISO)) LEXSTR=LEXSTR_"this ICD Code"
"RTN","LEXQID3",56,0)
 . S LEX(1)=LEXSTR D PR^LEXQM(.LEX,(LEXLEN-7)) S (LEXC,LEXT)=0 F  S LEXT=$O(LEX(LEXT)) Q:+LEXT'>0  D
"RTN","LEXQID3",57,0)
 . . S LEXSTR=$$TM^LEXQM($G(LEX(LEXT))) S:$L(LEXSTR) LEXC=LEXC+1,^TMP("LEXQID",$J,"NOT",2,LEXC)=LEXSTR
"RTN","LEXQID3",58,0)
 S:$D(^TMP("LEXQID",$J,"NOT",2)) ^TMP("LEXQID",$J,"NOT",1,1)="Not used"
"RTN","LEXQID3",59,0)
 Q
"RTN","LEXQID3",60,0)
REQ(X,LEXVDT,LEXLEN) ; Include ICD Codes required with ***.**
"RTN","LEXQID3",61,0)
 ; 
"RTN","LEXQID3",62,0)
 ; ^TMP("LEXQIDR",$J,IEN)=CODE
"RTN","LEXQID3",63,0)
 ; ^TMP("LEXQIDR",$J,"B",(CODE_" "),IEN)=""
"RTN","LEXQID3",64,0)
 ; 
"RTN","LEXQID3",65,0)
 ; ^TMP("LEXQID",$J,"REQ",0)=<total>
"RTN","LEXQID3",66,0)
 ; ^TMP("LEXQID",$J,"REQ",1,1)=<header>
"RTN","LEXQID3",67,0)
 ; ^TMP("LEXQID",$J,"REQ",2,#)=<header text>
"RTN","LEXQID3",68,0)
 ; ^TMP("LEXQID",$J,"REQ",3,<code >)=<code>_"  "_<diagnosis>
"RTN","LEXQID3",69,0)
 ; 
"RTN","LEXQID3",70,0)
 K ^TMP("LEXQIDR",$J),^TMP("LEXQID",$J,"NOT")
"RTN","LEXQID3",71,0)
 N LEX,LEXI,LEXC,LEXICD,LEXIEN,LEXISO,LEXSO,LEXSD,EXD,LEXT,LEXSTR,LEXO
"RTN","LEXQID3",72,0)
 S LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID3",73,0)
 S LEXISO=$$CODEC^ICDEX(80,+LEXIEN) Q:'$L(LEXISO)
"RTN","LEXQID3",74,0)
 S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62 S X=$$REQ^ICDEX(+($G(LEXIEN)),"LEXQIDR",1)
"RTN","LEXQID3",75,0)
 S LEXO="" F  S LEXO=$O(^TMP("LEXQIDR",$J,"B",LEXO)) Q:'$L(LEXO)  D
"RTN","LEXQID3",76,0)
 . N LEXD S LEXICD=$O(^TMP("LEXQIDR",$J,"B",LEXO,0)) Q:+LEXICD'>0
"RTN","LEXQID3",77,0)
 . S LEXSYS=$$CSI^ICDEX(80,+LEXICD)
"RTN","LEXQID3",78,0)
 . S LEXD=$$ICDDX^ICDEX(+LEXICD,LEXVDT,LEXSYS,"I")
"RTN","LEXQID3",79,0)
 . S LEXSO=$P(LEXD,"^",2),LEXSD=$$UP^XLFSTR($P(LEXD,"^",4)) Q:'$L(LEXSO)  Q:'$L(LEXSD)
"RTN","LEXQID3",80,0)
 . S LEXT=LEXSO,LEXT=LEXT_$J(" ",(9-$L(LEXT)))_LEXSD
"RTN","LEXQID3",81,0)
 . S ^TMP("LEXQID",$J,"REQ",3,(LEXSO_" "))=LEXT
"RTN","LEXQID3",82,0)
 K ^TMP("LEXQIDR",$J) S LEXC=0,LEXI=""
"RTN","LEXQID3",83,0)
 F  S LEXI=$O(^TMP("LEXQID",$J,"REQ",3,LEXI)) Q:'$L(LEXI)  S LEXC=LEXC+1
"RTN","LEXQID3",84,0)
 S ^TMP("LEXQID",$J,"REQ",0)=+($G(LEXC))
"RTN","LEXQID3",85,0)
 S LEXI=+($G(^TMP("LEXQID",$J,"REQ",0))) I LEXI>0 D
"RTN","LEXQID3",86,0)
 . N LEX,LEXC,LEXSTR,LEXT S:LEXI>1 LEXSTR="One of the following codes is required when "
"RTN","LEXQID3",87,0)
 . S:LEXI>1 LEXSTR="One of the following codes is required when " S:LEXI'>1 LEXSTR="The following code is required when "
"RTN","LEXQID3",88,0)
 . S:$L($G(LEXISO)) LEXSTR=LEXSTR_"ICD Code "_LEXISO_" "
"RTN","LEXQID3",89,0)
 . S:'$L($G(LEXISO)) LEXSTR=LEXSTR_"this ICD Code " S LEXSTR=LEXSTR_"is used"
"RTN","LEXQID3",90,0)
 . S LEX(1)=LEXSTR D PR^LEXQM(.LEX,(LEXLEN-7)) S (LEXC,LEXT)=0 F  S LEXT=$O(LEX(LEXT)) Q:+LEXT'>0  D
"RTN","LEXQID3",91,0)
 . . S LEXSTR=$$TM^LEXQM($G(LEX(LEXT))) S:$L(LEXSTR) LEXC=LEXC+1,^TMP("LEXQID",$J,"REQ",2,LEXC)=LEXSTR
"RTN","LEXQID3",92,0)
 S:$D(^TMP("LEXQID",$J,"REQ",2)) ^TMP("LEXQID",$J,"REQ",1,1)="Required with"
"RTN","LEXQID3",93,0)
 Q
"RTN","LEXQID3",94,0)
NCC(X,LEXVDT,LEXLEN) ; Include the codes that ***.** is not CC with
"RTN","LEXQID3",95,0)
 ; 
"RTN","LEXQID3",96,0)
 ; ^TMP("LEXQIDC",$J,IEN)=CODE
"RTN","LEXQID3",97,0)
 ; ^TMP("LEXQIDC",$J,"B",(CODE_" "),IEN)=""
"RTN","LEXQID3",98,0)
 ; 
"RTN","LEXQID3",99,0)
 ; ^TMP("LEXQID",$J,"NCC",0)=<total>
"RTN","LEXQID3",100,0)
 ; ^TMP("LEXQID",$J,"NCC",1,1)=<header>
"RTN","LEXQID3",101,0)
 ; ^TMP("LEXQID",$J,"NCC",2,#)=<header text>
"RTN","LEXQID3",102,0)
 ; ^TMP("LEXQID",$J,"NCC",3,<code >)=<code>_"  "_<diagnosis>
"RTN","LEXQID3",103,0)
 ; 
"RTN","LEXQID3",104,0)
 K ^TMP("LEXQIDC",$J),^TMP("LEXQID",$J,"NOT")
"RTN","LEXQID3",105,0)
 N LEX,LEXI,LEXC,LEXICD,LEXIEN,LEXISO,LEXSO,LEXSD,EXD,LEXT,LEXSTR,LEXO
"RTN","LEXQID3",106,0)
 S LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID3",107,0)
 S LEXISO=$$CODEC^ICDEX(80,+LEXIEN) Q:'$L(LEXISO)
"RTN","LEXQID3",108,0)
 S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62 S X=$$NCC^ICDEX(+($G(LEXIEN)),"LEXQIDC",1)
"RTN","LEXQID3",109,0)
 S LEXO="" F  S LEXO=$O(^TMP("LEXQIDC",$J,"B",LEXO)) Q:'$L(LEXO)  D
"RTN","LEXQID3",110,0)
 . N LEXD,LEXI,LEXC
"RTN","LEXQID3",111,0)
 . S LEXI=$O(^TMP("LEXQIDC",$J,"B",LEXO,0)) Q:+LEXI'>0
"RTN","LEXQID3",112,0)
 . S LEXC=$G(^TMP("LEXQIDC",$J,LEXI)) Q:'$L(LEXC)
"RTN","LEXQID3",113,0)
 . S LEXSYS=+($$CODECS^ICDEX(LEXC,80)) Q:+LEXSYS'>0
"RTN","LEXQID3",114,0)
 . S LEXICD=$$CODEABA^ICDEX(LEXC,80,+LEXSYS)
"RTN","LEXQID3",115,0)
 . ; S LEXICD=$O(^TMP("LEXQIDC",$J,"B",LEXO,0)) Q:+LEXICD'>0
"RTN","LEXQID3",116,0)
 . ; S LEXSYS=$$CSI^ICDEX(80,+LEXICD)
"RTN","LEXQID3",117,0)
 . S LEXD=$$ICDDX^ICDEX(+LEXICD,LEXVDT,LEXSYS,"I")
"RTN","LEXQID3",118,0)
 . S LEXSO=$P(LEXD,"^",2),LEXSD=$$UP^XLFSTR($P(LEXD,"^",4)) Q:'$L(LEXSO)  Q:'$L(LEXSD)
"RTN","LEXQID3",119,0)
 . S LEXT=LEXSO,LEXT=LEXT_$J(" ",(9-$L(LEXT)))_LEXSD
"RTN","LEXQID3",120,0)
 . S ^TMP("LEXQID",$J,"NCC",3,(LEXSO_" "))=LEXT
"RTN","LEXQID3",121,0)
 K ^TMP("LEXQIDC",$J) S LEXC=0,LEXI=""
"RTN","LEXQID3",122,0)
 F  S LEXI=$O(^TMP("LEXQID",$J,"NCC",3,LEXI)) Q:'$L(LEXI)  S LEXC=LEXC+1
"RTN","LEXQID3",123,0)
 S ^TMP("LEXQID",$J,"NCC",0)=+($G(LEXC))
"RTN","LEXQID3",124,0)
 S LEXI=+($G(^TMP("LEXQID",$J,"NCC",0))) I LEXI>0 D
"RTN","LEXQID3",125,0)
 . N LEX,LEXC,LEXSTR,LEXT S LEXSTR="ICD Code " S:$L($G(LEXISO)) LEXSTR=LEXSTR_LEXISO_" "
"RTN","LEXQID3",126,0)
 . S LEXSTR=LEXSTR_"is not considered as Complication Comorbidity (CC) with the following code"_$S(LEXI>1:"s",1:"")
"RTN","LEXQID3",127,0)
 . S LEX(1)=LEXSTR D PR^LEXQM(.LEX,(LEXLEN-7)) S (LEXC,LEXT)=0 F  S LEXT=$O(LEX(LEXT)) Q:+LEXT'>0  D
"RTN","LEXQID3",128,0)
 . . S LEXSTR=$$TM^LEXQM($G(LEX(LEXT))) S:$L(LEXSTR) LEXC=LEXC+1,^TMP("LEXQID",$J,"NCC",2,LEXC)=LEXSTR
"RTN","LEXQID3",129,0)
 S:$D(^TMP("LEXQID",$J,"NCC",2)) ^TMP("LEXQID",$J,"NCC",1,1)="Not CC with"
"RTN","LEXQID3",130,0)
 Q
"RTN","LEXQID3",131,0)
DRG(X,LEXVDT,LEXLEN) ; Diagnosis Related Group
"RTN","LEXQID3",132,0)
 ;               
"RTN","LEXQID3",133,0)
 ; ^TMP("LEXQID",$J,"DRG",0)=<total>
"RTN","LEXQID3",134,0)
 ; ^TMP("LEXQID",$J,"DRG",1,1)=<header>
"RTN","LEXQID3",135,0)
 ; ^TMP("LEXQID",$J,"DRG",1,2)=<effective date>
"RTN","LEXQID3",136,0)
 ; ^TMP("LEXQID",$J,"DRG",2,1)=<header text>
"RTN","LEXQID3",137,0)
 ; ^TMP("LEXQID",$J,"DRG",3,#)=<DRG list>
"RTN","LEXQID3",138,0)
 ;               
"RTN","LEXQID3",139,0)
 N LEXC,LEXDDD,LEXDDE,LEXDEF,LEXDDI,LEXDDT,LEXDRG,LEXDRG1,LEXDRG2,LEXDRGC,LEXDRGD,LEXDRP,LEXI,LEXIEN,LEXL,LEXN,LEXN0,LEXT
"RTN","LEXQID3",140,0)
 N LEXEFF,LEXPIE,LEXSTA S LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXQID3",141,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQID3",142,0)
 S LEXSTR=$$GETDRG^ICDEX(80,LEXIEN,LEXVDT),LEXSTA=$P(LEXSTR,";",3) Q:LEXSTA'>0  S LEXEFF=$P(LEXSTR,";",2) Q:LEXEFF'?7N  S LEXSTR=$P(LEXSTR,";",1)
"RTN","LEXQID3",143,0)
 I '$L($TR(LEXSTR,"^","")) D  Q
"RTN","LEXQID3",144,0)
 . S ^TMP("LEXQID",$J,"DRG",0)=0,^TMP("LEXQID",$J,"DRG",1,1)="DRG Groups"
"RTN","LEXQID3",145,0)
 . S ^TMP("LEXQID",$J,"DRG",2,1)="No DRG Groups found to be active for the date provided"
"RTN","LEXQID3",146,0)
 . S:LEXVDT?7N ^TMP("LEXQID",$J,"DRG",2,1)="No DRG Groups found to be active on "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQID3",147,0)
 F LEXPIE=1:1 Q:'$L($P(LEXSTR,"^",LEXPIE))  S LEXDRP=$P(LEXSTR,"^",LEXPIE) D
"RTN","LEXQID3",148,0)
 . S LEXDRG=$P($G(^ICD(+LEXDRP,0)),"^",1)
"RTN","LEXQID3",149,0)
 . K LEXDRGD D DRGD^ICDGTDRG(LEXDRG,"LEXDRGD",,+LEXVDT)
"RTN","LEXQID3",150,0)
 . S LEXDRG=$TR(LEXDRG,"DRG",""),LEXDRG=+LEXDRG Q:+LEXDRG'>0
"RTN","LEXQID3",151,0)
 . S LEXI=0 F  S LEXI=$O(LEXDRGD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQID3",152,0)
 . . N LEXT S LEXT=$$TM^LEXQM($G(LEXDRGD(LEXI)))
"RTN","LEXQID3",153,0)
 . . I '$L(LEXT)!(LEXT["CODE TEXT MAY BE INACCURATE") K LEXDRGD(LEXI) Q
"RTN","LEXQID3",154,0)
 . . S LEXDRGD(LEXI)=LEXT
"RTN","LEXQID3",155,0)
 . S LEXDRG1=LEXDRG,LEXDRG1=LEXDRG1_$J(" ",(6-$L(LEXDRG1))),LEXDRG2=$J(" ",6) D PR^LEXQM(.LEXDRGD,(LEXLEN-8))
"RTN","LEXQID3",156,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEXDRGD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQID3",157,0)
 . . N LEXT,LEXL,LEXN S LEXT=$$TM^LEXQM($G(LEXDRGD(LEXI)))
"RTN","LEXQID3",158,0)
 . . Q:'$L(LEXT)  S LEXC=LEXC+1
"RTN","LEXQID3",159,0)
 . . S:LEXC=1 LEXL=LEXDRG1_LEXT,LEXDRGC=+($G(LEXDRGC))+1
"RTN","LEXQID3",160,0)
 . . S:LEXC>1 LEXL=LEXDRG2_LEXT
"RTN","LEXQID3",161,0)
 . . S LEXN=$O(^TMP("LEXQID",$J,"DRG",3," "),-1)+1
"RTN","LEXQID3",162,0)
 . . S ^TMP("LEXQID",$J,"DRG",3,LEXN)=LEXL
"RTN","LEXQID3",163,0)
 S ^TMP("LEXQID",$J,"DRG",0)=+($G(LEXDRGC)),^TMP("LEXQID",$J,"DRG",1,1)="DRG Groups"
"RTN","LEXQID3",164,0)
 S:$G(LEXEFF)?7N ^TMP("LEXQID",$J,"DRG",1,2)=$$SD^LEXQM(LEXEFF)
"RTN","LEXQID3",165,0)
 S:+($G(LEXDRGC))>0 ^TMP("LEXQID",$J,"DRG",2,1)=+($G(LEXDRGC))_" Diagnosis Related Group"_$S(+($G(LEXDRGC))>1:"s",1:"")_" (DRG)"
"RTN","LEXQID3",166,0)
 Q
"RTN","LEXQID3",167,0)
CC(X,LEXVDT,LEX) ; Complication/Comorbidity
"RTN","LEXQID3",168,0)
 N LEXCCE,LEXCCI,LEXCCD K LEX S LEX=0,LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID3",169,0)
 S LEXCCI=$$VCC^ICDEX(+LEXIEN,LEXVDT,1),LEXCCD=$P(LEXCCI,"^",2),LEXCCI=$P(LEXCCI,"^",1) Q:"^0^1^2^"'[("^"_LEXCCI_"^")
"RTN","LEXQID3",170,0)
 Q:LEXCCD'?7N  S LEXCCE=$S(+LEXCCI=0:"Non-Complication/Comorbidity (Non-CC)",+LEXCCI=1:"Complication/Comorbidity (CC)",+LEXCCI=2:"Major Complication/Comorbidity (MCC)",1:"")
"RTN","LEXQID3",171,0)
 Q:'$L(LEXCCE)  S LEX=1,LEX(0)=$$SD^LEXQM(LEXCCD),LEX(1)=LEXCCE
"RTN","LEXQID3",172,0)
 Q
"RTN","LEXQID3",173,0)
 ; 
"RTN","LEXQID3",174,0)
 ; Miscellaneous            
"RTN","LEXQID3",175,0)
SD(X) ;   Short Date
"RTN","LEXQID3",176,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQID3",177,0)
IA(X) ;   Inaccurate
"RTN","LEXQID3",178,0)
 N LEXBRD,LEXVDT,LEXSYS S LEXVDT=+($G(X)),LEXSYS=1,LEXVDT=$S($G(LEXVDT)="":$$DT^XLFDT,1:$$DBR(LEXVDT)),LEXBRD=3021001,X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQID3",179,0)
 Q X
"RTN","LEXQID3",180,0)
DBR(X) ;   Date Business Rules
"RTN","LEXQID3",181,0)
 N LEXVDT S LEXVDT=$G(X) Q:'$G(LEXVDT)!($P(LEXVDT,".")'?7N) $$DT^XLFDT
"RTN","LEXQID3",182,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1 S X=$S(LEXVDT<2781001:2781001,1:LEXVDT)
"RTN","LEXQID3",183,0)
 Q X
"RTN","LEXQID4")
0^38^B67283614
"RTN","LEXQID4",1,0)
LEXQID4 ;ISL/KER - Query - ICD Diagnosis - Save ;04/21/2014
"RTN","LEXQID4",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQID4",3,0)
 ;               
"RTN","LEXQID4",4,0)
 ; Global Variables
"RTN","LEXQID4",5,0)
 ;    ^TMP("LEXQID")      SACC 2.3.2.5.1
"RTN","LEXQID4",6,0)
 ;    ^TMP("LEXQIDO")     SACC 2.3.2.5.1
"RTN","LEXQID4",7,0)
 ;               
"RTN","LEXQID4",8,0)
 ; External References
"RTN","LEXQID4",9,0)
 ;    $$UPDX^ICDEX        ICR   5747
"RTN","LEXQID4",10,0)
 ;    $$VAGEH^ICDEXD      ICR   5747
"RTN","LEXQID4",11,0)
 ;    $$VAGEL^ICDEXD      ICR   5747
"RTN","LEXQID4",12,0)
 ;    $$VSEX^ICDEXD       ICR   5747
"RTN","LEXQID4",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQID4",14,0)
 ;               
"RTN","LEXQID4",15,0)
 ; Local Variables NEWed or KILLed in LEXQID
"RTN","LEXQID4",16,0)
 ;     LEXIEN             ICD Internal Entry Number
"RTN","LEXQID4",17,0)
 ;     LEXCDT             Code Set Date
"RTN","LEXQID4",18,0)
 ;     LEXLEN             Offset Length
"RTN","LEXQID4",19,0)
 ;     LEXST              ICD Status and Effective Dates
"RTN","LEXQID4",20,0)
 ;     LEXSD              Versioned Short Description
"RTN","LEXQID4",21,0)
 ;     LEXLD              Versioned Long Description
"RTN","LEXQID4",22,0)
 ;     LEXLX              Versioned Lexicon Term
"RTN","LEXQID4",23,0)
 ;     LEXWN              Warning
"RTN","LEXQID4",24,0)
 ;     LEXCC              Code CC Status
"RTN","LEXQID4",25,0)
 ;     LEXMC              Major Diagnostic Category
"RTN","LEXQID4",26,0)
 ;     LEXELDT            External Last Date
"RTN","LEXQID4",27,0)
 ;               
"RTN","LEXQID4",28,0)
EN ; Main Entry Point
"RTN","LEXQID4",29,0)
 K ^TMP("LEXQIDO",$J) Q:'$L($G(LEXELDT))  I +($G(LEXST))<0 D FUT D:$D(^TMP("LEXQIDO",$J)) DSP^LEXQO("LEXQIDO") Q
"RTN","LEXQID4",30,0)
 D FUL D:$D(^TMP("LEXQIDO",$J)) DSP^LEXQO("LEXQIDO")
"RTN","LEXQID4",31,0)
 Q
"RTN","LEXQID4",32,0)
FUT ; Future Activation
"RTN","LEXQID4",33,0)
 N LEX1,LEX2,LEX3,LEXEFF,LEXI,LEXL,LEXSTA S LEXI=+($G(LEXIEN)) Q:+LEXI'>0
"RTN","LEXQID4",34,0)
 S LEXL=+($G(LEXLEN)) Q:+LEXL'>0  S:LEXL>62 LEXL=62
"RTN","LEXQID4",35,0)
 Q:'$L($G(LEXSO))  Q:'$L($G(LEXNAM))  S LEXSTA=$G(LEXST)
"RTN","LEXQID4",36,0)
 S LEXEFF=$P(LEXSTA,"^",5),LEXSTA=$P(LEXSTA,"^",4)
"RTN","LEXQID4",37,0)
 Q:'$L(LEXSTA)  Q:'$L(LEXEFF)  S (LEX1,LEX2,LEX3)=""
"RTN","LEXQID4",38,0)
 D BOD(LEXELDT),COD(LEXSO,LEXNAM,+($G(LEXL))),STA(.LEXST,+($G(LEXL)))
"RTN","LEXQID4",39,0)
 Q
"RTN","LEXQID4",40,0)
BOD(X) ;   Based on Date
"RTN","LEXQID4",41,0)
 N LEXBOD S LEXBOD=$G(X),X="Display based on date:  "_LEXBOD D BL,TL(X)
"RTN","LEXQID4",42,0)
 Q
"RTN","LEXQID4",43,0)
COD(X,Y,LEXLEN) ;   Code Line
"RTN","LEXQID4",44,0)
 N LEXC,LEXN,LEXT S LEXC=$G(X),LEXN=$G(Y),LEXT="Code:  "_LEXC
"RTN","LEXQID4",45,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",46,0)
 Q
"RTN","LEXQID4",47,0)
STA(X,LEXLEN) ;   Status Line
"RTN","LEXQID4",48,0)
 N LEX,LEXC,LEXX,LEXE,LEXI,LEXN,LEXS,LEXT,LEXW,LEXEFF,LEXSTA
"RTN","LEXQID4",49,0)
 S LEXX=$G(X),LEXSTA=$P(LEXX,"^",4),LEXEFF=$P(LEXX,"^",5)
"RTN","LEXQID4",50,0)
 S LEXEFF=$TR(LEXEFF,"()",""),LEXW=$P(LEXX,"^",6)
"RTN","LEXQID4",51,0)
 S LEXT="  Status:  ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXSTA
"RTN","LEXQID4",52,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))
"RTN","LEXQID4",53,0)
 S:LEXEFF'["future" LEXT=LEXT_"Effective:  "
"RTN","LEXQID4",54,0)
 S LEXT=LEXT_$$UP^XLFSTR($E(LEXEFF,1))_$E(LEXEFF,2,$L(LEXEFF)) D BL,TL(LEXT)
"RTN","LEXQID4",55,0)
 I $L(LEXW) D
"RTN","LEXQID4",56,0)
 . N LEX,LEXT,LEXC,LEXI,LEXN S LEX(1)=LEXW D PR^LEXQM(.LEX,(LEXLEN-7))
"RTN","LEXQID4",57,0)
 . Q:+($O(LEX(" "),-1))'>0  S LEXT=$J(" ",((79-+($G(LEXLEN)))))
"RTN","LEXQID4",58,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQID4",59,0)
 . . N LEXN S LEXN=$$TM^LEXQM($G(LEX(LEXI))) S:$L(LEXN) LEXC=LEXC+1
"RTN","LEXQID4",60,0)
 . . D:LEXC=1 BL D TL((LEXT_LEXN))
"RTN","LEXQID4",61,0)
 Q
"RTN","LEXQID4",62,0)
FUL ; Full Display
"RTN","LEXQID4",63,0)
 N LEXFUL,LEX,LEXL S LEXL=+($G(LEXLEN)) S:LEXL>62 LEXL=62
"RTN","LEXQID4",64,0)
 S LEXFUL=""  D FUT
"RTN","LEXQID4",65,0)
 D LIM(+($G(LEXIEN)),+($G(LEXL)))
"RTN","LEXQID4",66,0)
 D SD(.LEXSD,+($G(LEXL)))
"RTN","LEXQID4",67,0)
 D LD(.LEXLD,+($G(LEXL)))
"RTN","LEXQID4",68,0)
 D LX(.LEXLX,+($G(LEXL)))
"RTN","LEXQID4",69,0)
 D WN(.LEXWN,+($G(LEXL)))
"RTN","LEXQID4",70,0)
 D:$L($G(LEXCC(1)))!($L($G(LEXMC(1)))) BL
"RTN","LEXQID4",71,0)
 D CC(.LEXCC,+($G(LEXL)))
"RTN","LEXQID4",72,0)
 D MC(.LEXMC,+($G(LEXL)))
"RTN","LEXQID4",73,0)
 D DRG(+($G(LEXL)))
"RTN","LEXQID4",74,0)
 D NOT(+($G(LEXL)))
"RTN","LEXQID4",75,0)
 D REQ(+($G(LEXL)))
"RTN","LEXQID4",76,0)
 D NCC(+($G(LEXL)))
"RTN","LEXQID4",77,0)
 Q
"RTN","LEXQID4",78,0)
LIM(X,LEXLEN) ;   Limitations - Age Low, Age High and Sex
"RTN","LEXQID4",79,0)
 N LEXC,LEXI,LEXH,LEXL,LEXS,LEXT,LEXU,LEXP S LEXC=0,LEXI=+($G(X))
"RTN","LEXQID4",80,0)
 S LEXL=$$VAGEL^ICDEX(+($G(LEXIEN)),$G(LEXCDT)) S:'$L(LEXL) LEXL="N/A"
"RTN","LEXQID4",81,0)
 S LEXH=$$VAGEH^ICDEX(+($G(LEXIEN)),$G(LEXCDT)) S:'$L(LEXH) LEXH="N/A"
"RTN","LEXQID4",82,0)
 S LEXS=$$VSEX^ICDEX(80,+($G(LEXIEN)),$G(LEXCDT))
"RTN","LEXQID4",83,0)
 S LEXS=$S(LEXS="M":"Male",LEXS="F":"Female",1:"") S:'$L(LEXS) LEXS="N/A"
"RTN","LEXQID4",84,0)
 S LEXU=$$UPDX^ICDEX(+($G(LEXIEN))) S:'$L(LEXU)!(LEXU=0) LEXU="N/A"
"RTN","LEXQID4",85,0)
 I (LEXH_LEXL_LEXS+LEXU)'="N/AN/AN/AN/A" D
"RTN","LEXQID4",86,0)
 . N LEXLDR S LEXLDR="  Limitations: ",LEXC=0
"RTN","LEXQID4",87,0)
 . I LEXL'="N/A" D
"RTN","LEXQID4",88,0)
 . . S LEXT="" S LEXT=LEXLDR_$J(" ",((79-+($G(LEXLEN)))-$L(LEXLDR)))_"Minimum Age:   "_LEXL
"RTN","LEXQID4",89,0)
 . . S LEXLDR="               " I $L(LEXT) D BL,TL(LEXT) S LEXC=1
"RTN","LEXQID4",90,0)
 . I LEXH'="N/A" D
"RTN","LEXQID4",91,0)
 . . S LEXT="" S LEXT=LEXLDR_$J(" ",((79-+($G(LEXLEN)))-$L(LEXLDR)))_"Maximum Age:   "_LEXH
"RTN","LEXQID4",92,0)
 . . S LEXLDR="               " I $L(LEXT) D:'LEXC BL D TL(LEXT) S LEXC=1
"RTN","LEXQID4",93,0)
 . I LEXS'="N/A" D
"RTN","LEXQID4",94,0)
 . . S LEXT="" S LEXT=LEXLDR_$J(" ",((79-+($G(LEXLEN)))-$L(LEXLDR)))_"Applies to:    "_LEXS_" patients"
"RTN","LEXQID4",95,0)
 . . S LEXLDR="               " I $L(LEXT) D:'LEXC BL D TL(LEXT) S LEXC=1
"RTN","LEXQID4",96,0)
 . I LEXU'="N/A" D
"RTN","LEXQID4",97,0)
 . . S LEXT="" S LEXT=LEXLDR_$J(" ",((79-+($G(LEXLEN)))-$L(LEXLDR)))_"Principle DX:  "_"Code is unacceptable as a principal DX"
"RTN","LEXQID4",98,0)
 . . S LEXLDR="               " I $L(LEXT) D:'LEXC BL D TL(LEXT) S LEXC=1
"RTN","LEXQID4",99,0)
 Q
"RTN","LEXQID4",100,0)
SD(X,LEXLEN) ;   Short Description
"RTN","LEXQID4",101,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Short Name: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",102,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQID4",103,0)
 Q
"RTN","LEXQID4",104,0)
LD(X,LEXLEN) ;   Long Description
"RTN","LEXQID4",105,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Description: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",106,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQID4",107,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))) S LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQID4",108,0)
 Q
"RTN","LEXQID4",109,0)
LX(X,LEXLEN) ;   Lexicon Expression
"RTN","LEXQID4",110,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Lexicon Term:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",111,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQID4",112,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQID4",113,0)
 Q
"RTN","LEXQID4",114,0)
WN(X,LEXLEN) ;   Warning
"RTN","LEXQID4",115,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT,LEXC Q:'$D(X(1))  S LEXC=0,LEXN=$G(X(1)),LEXT="",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",116,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQID4",117,0)
 Q
"RTN","LEXQID4",118,0)
CC(X,LEXLEN) ;   Complication/Comorbidity
"RTN","LEXQID4",119,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXE=$G(X(0)),LEXT="  CC:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN
"RTN","LEXQID4",120,0)
 S LEXT=LEXT_$J(" ",(66-$L(LEXT)))_LEXE D TL(LEXT)
"RTN","LEXQID4",121,0)
 Q
"RTN","LEXQID4",122,0)
MC(X,LEXLEN) ;   Major Diagnostic Category
"RTN","LEXQID4",123,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXE=$G(X(0)),LEXT="  MDC:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN
"RTN","LEXQID4",124,0)
 S LEXT=LEXT_$J(" ",(66-$L(LEXT)))_LEXE D TL(LEXT)
"RTN","LEXQID4",125,0)
 Q
"RTN","LEXQID4",126,0)
DRG(LEXLEN) ;   Diagnosis Related Groups
"RTN","LEXQID4",127,0)
 Q:$O(^TMP("LEXQID",$J,"DRG",3,0))'>0  Q:'$D(^TMP("LEXQID",$J,"DRG",3,1))  Q:'$D(^TMP("LEXQID",$J,"DRG",1,1))
"RTN","LEXQID4",128,0)
 Q:'$D(^TMP("LEXQID",$J,"DRG",1,2))  Q:'$D(^TMP("LEXQID",$J,"DRG",2,1))  N LEXI,LEXH,LEXE,LEXN,LEXT
"RTN","LEXQID4",129,0)
 S LEXT="  "_$G(^TMP("LEXQID",$J,"DRG",1,1))_":",LEXN=$G(^TMP("LEXQID",$J,"DRG",2,1)) S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",130,0)
 S LEXE=$G(^TMP("LEXQID",$J,"DRG",1,2)),LEXT="    "_LEXE,LEXN=$G(^TMP("LEXQID",$J,"DRG",3,1)) S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQID4",131,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(^TMP("LEXQID",$J,"DRG",3,LEXI)) Q:+LEXI'>0  D
"RTN","LEXQID4",132,0)
 . S LEXN=LEXT_$G(^TMP("LEXQID",$J,"DRG",3,LEXI)) D TL(LEXN)
"RTN","LEXQID4",133,0)
 K ^TMP("LEXQID",$J,"DRG")
"RTN","LEXQID4",134,0)
 Q
"RTN","LEXQID4",135,0)
NOT(LEXLEN) ;   ICD codes not used with
"RTN","LEXQID4",136,0)
 Q:'$L($O(^TMP("LEXQID",$J,"NOT",3,"")))  Q:'$D(^TMP("LEXQID",$J,"NOT",1,1))  Q:'$D(^TMP("LEXQID",$J,"NOT",2,1))
"RTN","LEXQID4",137,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT S LEXT="  "_$G(^TMP("LEXQID",$J,"NOT",1,1))_":",LEXN=$G(^TMP("LEXQID",$J,"NOT",2,1))
"RTN","LEXQID4",138,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",139,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXN=$$TM^LEXQM($G(^TMP("LEXQID",$J,"NOT",2,2))) I $L(LEXN) D TL((LEXT_LEXN))
"RTN","LEXQID4",140,0)
 S LEXI=" " F  S LEXI=$O(^TMP("LEXQID",$J,"NOT",3,LEXI)) Q:'$L(LEXI)  D
"RTN","LEXQID4",141,0)
 . S LEXN=$G(^TMP("LEXQID",$J,"NOT",3,LEXI)) D TL((LEXT_LEXN))
"RTN","LEXQID4",142,0)
 K ^TMP("LEXQID",$J,"NOT")
"RTN","LEXQID4",143,0)
 Q
"RTN","LEXQID4",144,0)
REQ(LEXLEN) ;   ICD codes requried with
"RTN","LEXQID4",145,0)
 Q:'$L($O(^TMP("LEXQID",$J,"REQ",3,"")))  Q:'$D(^TMP("LEXQID",$J,"REQ",1,1))  Q:'$D(^TMP("LEXQID",$J,"REQ",2,1))
"RTN","LEXQID4",146,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT S LEXT="  "_$G(^TMP("LEXQID",$J,"REQ",1,1))_":",LEXN=$G(^TMP("LEXQID",$J,"REQ",2,1))
"RTN","LEXQID4",147,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",148,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXN=$$TM^LEXQM($G(^TMP("LEXQID",$J,"REQ",2,2))) I $L(LEXN) D TL((LEXT_LEXN))
"RTN","LEXQID4",149,0)
 S LEXI=" " F  S LEXI=$O(^TMP("LEXQID",$J,"REQ",3,LEXI)) Q:'$L(LEXI)  D
"RTN","LEXQID4",150,0)
 . S LEXN=$G(^TMP("LEXQID",$J,"REQ",3,LEXI)) D TL((LEXT_LEXN))
"RTN","LEXQID4",151,0)
 K ^TMP("LEXQID",$J,"REQ")
"RTN","LEXQID4",152,0)
 Q
"RTN","LEXQID4",153,0)
NCC(LEXLEN) ;   Not CC with
"RTN","LEXQID4",154,0)
 Q:'$L($O(^TMP("LEXQID",$J,"NCC",3,"")))  Q:'$D(^TMP("LEXQID",$J,"NCC",1,1))  Q:'$D(^TMP("LEXQID",$J,"NCC",2,1))
"RTN","LEXQID4",155,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT S LEXT="  "_$G(^TMP("LEXQID",$J,"NCC",1,1))_":",LEXN=$G(^TMP("LEXQID",$J,"NCC",2,1))
"RTN","LEXQID4",156,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQID4",157,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXN=$$TM^LEXQM($G(^TMP("LEXQID",$J,"NCC",2,2))) I $L(LEXN) D TL((LEXT_LEXN))
"RTN","LEXQID4",158,0)
 S LEXI=" " F  S LEXI=$O(^TMP("LEXQID",$J,"NCC",3,LEXI)) Q:'$L(LEXI)  D
"RTN","LEXQID4",159,0)
 . S LEXN=$G(^TMP("LEXQID",$J,"NCC",3,LEXI)) D TL((LEXT_LEXN))
"RTN","LEXQID4",160,0)
 K ^TMP("LEXQID",$J,"NCC")
"RTN","LEXQID4",161,0)
 Q
"RTN","LEXQID4",162,0)
 ;
"RTN","LEXQID4",163,0)
 ; Miscellaneous
"RTN","LEXQID4",164,0)
BL ;   Blank Line
"RTN","LEXQID4",165,0)
 D TL(" ") Q
"RTN","LEXQID4",166,0)
TL(X) ;   Text Line
"RTN","LEXQID4",167,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQID4",168,0)
 N LEXI,LEXTEST S LEXI=+($O(^TMP("LEXQIDO",$J," "),-1))+1 S ^TMP("LEXQIDO",$J,LEXI)=$G(X),^TMP("LEXQIDO",$J,0)=LEXI
"RTN","LEXQID4",169,0)
 Q
"RTN","LEXQIDA")
0^39^B51204614
"RTN","LEXQIDA",1,0)
LEXQIDA ;ISL/KER - Query - ICD Diagnosis - Ask ;04/21/2014
"RTN","LEXQIDA",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQIDA",3,0)
 ;               
"RTN","LEXQIDA",4,0)
 ; Global Variables
"RTN","LEXQIDA",5,0)
 ;    None
"RTN","LEXQIDA",6,0)
 ;               
"RTN","LEXQIDA",7,0)
 ; External References
"RTN","LEXQIDA",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXQIDA",9,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQIDA",10,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQIDA",11,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQIDA",12,0)
 ;    $$NCC^ICDEX         ICR   5747
"RTN","LEXQIDA",13,0)
 ;    $$NOT^ICDEX         ICR   5747
"RTN","LEXQIDA",14,0)
 ;    $$REQ^ICDEX         ICR   5747
"RTN","LEXQIDA",15,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQIDA",16,0)
 ;    $$SYS^ICDEX         ICR   5747
"RTN","LEXQIDA",17,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIDA",18,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQIDA",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIDA",20,0)
 ;               
"RTN","LEXQIDA",21,0)
 ; Local Variables NEWed or KILLed in LEXQID
"RTN","LEXQIDA",22,0)
 ;    LEXCDT              Code Set Date
"RTN","LEXQIDA",23,0)
 ;    LEXEXIT             Exit Flag
"RTN","LEXQIDA",24,0)
 ;               
"RTN","LEXQIDA",25,0)
 Q
"RTN","LEXQIDA",26,0)
ICD(X) ; ICD DX Code
"RTN","LEXQIDA",27,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIC,DTOUT,DUOUT,LEXDX,LEXSO,LEXVDT,LEXDTXT,LEXVTXT,Y,ICDVDT,ICDSYS,ICDFMT S ICDFMT=2
"RTN","LEXQIDA",28,0)
 S DIC(0)="AEQMZ",DIC=$$ROOT^ICDEX(80),DIC("A")=" Select an ICD Diagnosis code:  " W !
"RTN","LEXQIDA",29,0)
 D ^DIC S:$G(X)["^^"!($D(DTOUT)) LEXEXIT=1 Q:$G(X)["^^"!(+($G(LEXEXIT))>0) "^^"
"RTN","LEXQIDA",30,0)
 Q:$G(X)="^" "^"  Q:$G(X)["^^" "^^"  Q:$D(DTOUT)!($D(DUOUT)) "^"  S LEXSO=$P($G(Y),"^",2) S X="" I +Y>0,$L(LEXSO) D
"RTN","LEXQIDA",31,0)
 . N LEXSYS S LEXSYS=$$SYS^ICDEX(LEXSO) S:+LEXSYS'>0 LEXSYS="" S LEXVDT=$G(LEXCDT) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQIDA",32,0)
 . S X=Y,LEXDTXT=$P($G(Y(0)),"^",2),LEXDX=$$ICDDX^ICDEX(LEXSO,LEXVDT,LEXSYS,"E")
"RTN","LEXQIDA",33,0)
 . S:$L($G(LEXDTXT)) LEXDTXT=LEXDTXT_" (Text not Versioned)" S LEXVTXT=$P(LEXDX,"^",4) S:'$L(LEXVTXT) LEXVTXT=LEXDTXT
"RTN","LEXQIDA",34,0)
 . S X=+Y_"^"_LEXSO S:$L(LEXVTXT) X=X_"^"_LEXVTXT
"RTN","LEXQIDA",35,0)
 S X=$$UP^XLFSTR(X) Q:'$L(X) "^"
"RTN","LEXQIDA",36,0)
 Q X
"RTN","LEXQIDA",37,0)
 ;          
"RTN","LEXQIDA",38,0)
NOT(X) ; Include ICD Codes not to use with ***.**
"RTN","LEXQIDA",39,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,DIRB,LEXIEN,LEXLSO,LEXCT,LEXCTE,LEXI S LEXIEN=+($G(X))
"RTN","LEXQIDA",40,0)
 S LEXCT=$$NOT^ICDEX(+LEXIEN,,0) Q:LEXCT'>0 0  S LEXLSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQIDA",41,0)
 S LEXCTE=$S(LEXCT=1:"one",LEXCT=2:"two",LEXCT=3:"three",LEXCT=4:"four",LEXCT=5:"five",LEXCT=6:"six",LEXCT=7:"seven",LEXCT=8:"eight",LEXCT=9:"nine",1:LEXCT)
"RTN","LEXQIDA",42,0)
 S DIRB=$$RET^LEXQD("LEXQIDA","NOT",+($G(DUZ)),"Include ICD Codes not to use with") S:'$L(DIRB) DIRB="No"
"RTN","LEXQIDA",43,0)
 S DIR(0)="YAO" S:LEXCT=1 DIR("A")=" Include the single ICD Code that can not be used with "_LEXLSO_"?  (Y/N)  "
"RTN","LEXQIDA",44,0)
 S:LEXCT>1 DIR("A")=" Include the "_LEXCTE_" ICD Codes that can not be used with "_LEXLSO_"?  (Y/N)  "
"RTN","LEXQIDA",45,0)
 S:"^YES^NO^Yes^No^"[("^"_DIRB_"^") DIR("B")=DIRB
"RTN","LEXQIDA",46,0)
 S DIR("PRE")="S:X[""?"" X=""??""" S (DIR("?"),DIR("??"))="^D NOTH^LEXQIDA"
"RTN","LEXQIDA",47,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:$D(DIRUT)!($D(DIROUT))!($D(DTOUT))!($D(DUOUT)) "^" S DIRB=$S(Y=1:"Yes",Y=0:"No",X["^":"",1:"")
"RTN","LEXQIDA",48,0)
 D:$L(DIRB) SAV^LEXQD("LEXQIDA","NOT",+($G(DUZ)),"Include ICD Codes not to use with",$G(DIRB)) S X=+Y
"RTN","LEXQIDA",49,0)
 Q X
"RTN","LEXQIDA",50,0)
NOTH ;   Include NOT Help
"RTN","LEXQIDA",51,0)
 W:'$L($G(LEXLSO)) !,?5,"Answer 'Yes' to include in the display all ICD Code(s) that can",!,?5,"not be used with the selected ICD code.  Answer 'No' to exclude",!,?5,"codes that can not not be used with the selected ICD code."
"RTN","LEXQIDA",52,0)
 W:$L($G(LEXLSO)) !,?5,"Answer 'Yes' to include all ICD Code(s) that can not be used with",!,?5,"ICD Code "_$G(LEXLSO)_".  Answer 'No' to exclude codes that can not be",!,?5,"used with ICD code "_$G(LEXLSO)_"."
"RTN","LEXQIDA",53,0)
 Q
"RTN","LEXQIDA",54,0)
 ;          
"RTN","LEXQIDA",55,0)
REQ(X) ; Include ICD Codes required with ***.**
"RTN","LEXQIDA",56,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,DIRB,LEXIEN,LEXLSO,LEXCT,LEXCTE,LEXI S LEXIEN=+($G(X))
"RTN","LEXQIDA",57,0)
 S LEXCT=$$REQ^ICDEX(+LEXIEN,,0) Q:LEXCT'>0 0  S LEXLSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQIDA",58,0)
 S LEXCTE=$S(LEXCT=1:"one",LEXCT=2:"two",LEXCT=3:"three",LEXCT=4:"four",LEXCT=5:"five",LEXCT=6:"six",LEXCT=7:"seven",LEXCT=8:"eight",LEXCT=9:"nine",1:LEXCT)
"RTN","LEXQIDA",59,0)
 S DIRB=$$RET^LEXQD("LEXQIDA","REQ",+($G(DUZ)),"Include ICD Required with") S:'$L(DIRB) DIRB="No"
"RTN","LEXQIDA",60,0)
 S DIR(0)="YAO" S:LEXCT=1 DIR("A")=" Include the one ICD Code that is required with "_LEXLSO_"?  (Y/N)  "
"RTN","LEXQIDA",61,0)
 S:LEXCT>1 DIR("A")=" Include the "_LEXCTE_" ICD Codes that are required with "_LEXLSO_"?  (Y/N)  "
"RTN","LEXQIDA",62,0)
 S:"^YES^NO^Yes^No^"[("^"_DIRB_"^") DIR("B")=DIRB
"RTN","LEXQIDA",63,0)
 S DIR("PRE")="S:X[""?"" X=""??""" S (DIR("?"),DIR("??"))="^D REQH^LEXQIDA"
"RTN","LEXQIDA",64,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:$D(DIRUT)!($D(DIROUT))!($D(DTOUT))!($D(DUOUT)) "^" S DIRB=$S(Y=1:"Yes",Y=0:"No",X["^":"",1:"")
"RTN","LEXQIDA",65,0)
 D:$L(DIRB) SAV^LEXQD("LEXQIDA","REQ",+($G(DUZ)),"Include ICD Required with",$G(DIRB)) S X=+Y
"RTN","LEXQIDA",66,0)
 Q X
"RTN","LEXQIDA",67,0)
REQH ;   Include REQ Help
"RTN","LEXQIDA",68,0)
 W:'$L($G(LEXLSO)) !,?5,"Answer 'Yes' to include in the display all ICD Code(s) that are",!,?5,"required with the selected ICD code.  Answer 'No' to exclude",!,?5,"codes that are required with the selected ICD code."
"RTN","LEXQIDA",69,0)
 W:$L($G(LEXLSO)) !,?5,"Answer 'Yes' to include all ICD Code(s) that are required with",!,?5,"ICD Code "_$G(LEXLSO)_".  Answer 'No' to exclude codes that are requried",!,?5,"with ICD code "_$G(LEXLSO)_"."
"RTN","LEXQIDA",70,0)
 Q
"RTN","LEXQIDA",71,0)
 Q
"RTN","LEXQIDA",72,0)
 ;          
"RTN","LEXQIDA",73,0)
NCC(X) ; Include the codes that ***.** is not CC with
"RTN","LEXQIDA",74,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,DIRB,LEXIEN,LEXLSO,LEXCT,LEXCTE,LEXI,LEXNCC S LEXIEN=+($G(X))
"RTN","LEXQIDA",75,0)
 S LEXCT=$$NCC^ICDEX(+LEXIEN,,0) Q:LEXCT'>0 0  S LEXLSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQIDA",76,0)
 S LEXCTE=$S(LEXCT=1:"one",LEXCT=2:"two",LEXCT=3:"three",LEXCT=4:"four",LEXCT=5:"five",LEXCT=6:"six",LEXCT=7:"seven",LEXCT=8:"eight",LEXCT=9:"nine",1:LEXCT)
"RTN","LEXQIDA",77,0)
 S DIRB=$$RET^LEXQD("LEXQIDA","NCC",+($G(DUZ)),"Include Codes not CC with") S:'$L(DIRB) DIRB="No"
"RTN","LEXQIDA",78,0)
 S DIR(0)="YAO" S:LEXCT=1 DIR("A")=" Include the one ICD Code that "_LEXLSO_" is not CC with?  (Y/N)  "
"RTN","LEXQIDA",79,0)
 S:LEXCT>1 DIR("A")=" Include the "_LEXCTE_" ICD Codes that "_LEXLSO_" are not CC with?  (Y/N)  "
"RTN","LEXQIDA",80,0)
 S:"^YES^NO^Yes^No^"[("^"_DIRB_"^") DIR("B")=DIRB
"RTN","LEXQIDA",81,0)
 S DIR("PRE")="S:X[""?"" X=""??""" S (DIR("?"),DIR("??"))="^D NCCH^LEXQIDA"
"RTN","LEXQIDA",82,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:$D(DIRUT)!($D(DIROUT))!($D(DTOUT))!($D(DUOUT)) "^" S DIRB=$S(Y=1:"Yes",Y=0:"No",X["^":"",1:"")
"RTN","LEXQIDA",83,0)
 D:$L(DIRB) SAV^LEXQD("LEXQIDA","NCC",+($G(DUZ)),"Include Codes not CC with",$G(DIRB)) S X=+Y
"RTN","LEXQIDA",84,0)
 Q X
"RTN","LEXQIDA",85,0)
NCCH ;   Include NCC Help
"RTN","LEXQIDA",86,0)
 I $L($G(LEXLSO)),$L($G(LEXCT)) D
"RTN","LEXQIDA",87,0)
 . W !,?5,"Code ",LEXLSO," is not considered as Complication/Comorbidity (CC)"
"RTN","LEXQIDA",88,0)
 . W !,?5,"with ",$S(+($G(LEXCT))>1:"some codes.",1:"one code."),"  Answer 'Yes' to include "
"RTN","LEXQIDA",89,0)
 . I +($G(LEXCT))>1 W "these codes.  Answer",!,?5,"'No' to exclude these codes."
"RTN","LEXQIDA",90,0)
 . I +($G(LEXCT))'>1 W "this code.  Answer 'No'",!,?5,"to exclude this code."
"RTN","LEXQIDA",91,0)
 . Q
"RTN","LEXQIDA",92,0)
 . W $S(+($G(LEXCT))>1:"these codes.  Answer 'No'",1:"this code.  Answer 'No'")
"RTN","LEXQIDA",93,0)
 . W $S(+($G(LEXCT))>1:"these codes.  Answer 'No'",1:"this code.  Answer 'No'")
"RTN","LEXQIDA",94,0)
 I $L($G(LEXLSO)),'$L($G(LEXCT)) D
"RTN","LEXQIDA",95,0)
 . W !,?5,"Code "_LEXLSO_" is not considered as Complication/Comorbidity (CC)"
"RTN","LEXQIDA",96,0)
 . W !,?5,"with some codes.  Answer 'Yes' to include these codes.  Answer",!,?5,"'No' to exclude these codes."
"RTN","LEXQIDA",97,0)
 I '$L($G(LEXLSO)),'$L($G(LEXCT)) D
"RTN","LEXQIDA",98,0)
 . W !,?5,"This code is not considered as Complication/Comorbidity (CC)"
"RTN","LEXQIDA",99,0)
 . W !,?5,"with some codes.  Answer 'Yes' to include these codes.  Answer ",!,?5,"'No' to exclude these codes."
"RTN","LEXQIDA",100,0)
 Q
"RTN","LEXQIDA",101,0)
 ;          
"RTN","LEXQIDA",102,0)
SD(X) ; Short Date
"RTN","LEXQIDA",103,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQIP")
0^31^B87751371
"RTN","LEXQIP",1,0)
LEXQIP ;ISL/KER - Query - ICD Procedure - Extract ;04/21/2014
"RTN","LEXQIP",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80**;Sep 23, 1996;Build 1
"RTN","LEXQIP",3,0)
 ;               
"RTN","LEXQIP",4,0)
 ; Global Variables
"RTN","LEXQIP",5,0)
 ;    ^TMP("LEXQIP")      SACC 2.3.2.5.1
"RTN","LEXQIP",6,0)
 ;    ^TMP("LEXQIPA")     SACC 2.3.2.5.1
"RTN","LEXQIP",7,0)
 ;    ^TMP("LEXQIPO")     SACC 2.3.2.5.1
"RTN","LEXQIP",8,0)
 ;               
"RTN","LEXQIP",9,0)
 ; External References
"RTN","LEXQIP",10,0)
 ;    GETS^DIQ            ICR   2056
"RTN","LEXQIP",11,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQIP",12,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQIP",13,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEXQIP",14,0)
 ;    $$HIST^ICDEX        ICR   5747
"RTN","LEXQIP",15,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQIP",16,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEXQIP",17,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEXQIP",18,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXQIP",19,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQIP",20,0)
 ;    $$SD^ICDEX          ICR   5747
"RTN","LEXQIP",21,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIP",22,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP",23,0)
 ;               
"RTN","LEXQIP",24,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQIP",25,0)
 ;    None
"RTN","LEXQIP",26,0)
 ; 
"RTN","LEXQIP",27,0)
EN ; Main Entry Point
"RTN","LEXQIP",28,0)
 N LEXENV S LEXENV=$$EV^LEXQM Q:+LEXENV'>0  N DIC,DTOUT,DUOUT,ICDFMT,ICDSYS,ICDVDT,LEX,LEX1,LEX2,LEX3,LEXAD,LEXBOD,LEXBRD
"RTN","LEXQIP",29,0)
 N LEXBRW,LEXC,LEXCC,LEXCDT,LEXCHR,LEXD,LEXDAT,LEXDDT,LEXDG,LEXDI,LEXDR,LEXDRG,LEXDRG1,LEXDRG2,LEXDRGC,LEXDRGD,LEXDRGI
"RTN","LEXQIP",30,0)
 N LEXDRI,LEXDTXT,LEXDX,LEXE,LEXEDT,LEXEE,LEXEF,LEXEFF,LEXELDT,LEXENV,LEXES,LEXEXIT,LEXFA,LEXFUL,LEXH,LEXHDR,LEXHIS,LEXHR
"RTN","LEXQIP",31,0)
 N LEXI,LEXI1,LEXI2,LEXIA,LEXICP,LEXICPC,LEXID,LEXIDI,LEXIEN,LEXIENS,LEXINC,LEXINCC,LEXINOT,LEXINT,LEXIREQ,LEXL,LEXLA
"RTN","LEXQIP",32,0)
 N LEXLAST,LEXLC,LEXLD,LEXLDD,LEXLDT,LEXLEF,LEXLEN,LEXLHI,LEXLS,LEXLSD,LEXLTXT,LEXM,LEXMC,LEXMDCC,LEXMDCE,LEXMDCI,LEXMI
"RTN","LEXQIP",33,0)
 N LEXMOR,LEXMR,LEXMSG,LEXN,LEXNAM,LEXOD,LEXODD,LEXPC,LEXR,LEXREF,LEXRT,LEXS,LEXSD,LEXSDD,LEXSDT,LEXSO,LEXST,LEXSTA
"RTN","LEXQIP",34,0)
 N LEXSTAT,LEXSTR,LEXSY,LEXSYS,LEXT,LEXTEST,LEXTMP,LEXUD,LEXUM,LEXVDT,LEXVTXT,LEXW,LEXWN,LEXX,X,Y S LEXEXIT=0,LEXCDT=""
"RTN","LEXQIP",35,0)
 K ^TMP("LEXQIP",$J),^TMP("LEXQIPO",$J),^TMP("LEXQIPA",$J)
"RTN","LEXQIP",36,0)
 F  S LEXCDT=$$AD^LEXQM,LEXAD=LEXCDT Q:'$L(LEXCDT)  Q:+($G(LEXEXIT))>0  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2) Q:LEXCDT'?7N  D LOOK Q:LEXCDT'?7N  Q:+($G(LEXEXIT))>0
"RTN","LEXQIP",37,0)
 K ^TMP("LEXQIP",$J),^TMP("LEXQIPO",$J),^TMP("LEXQIPA",$J)
"RTN","LEXQIP",38,0)
 Q
"RTN","LEXQIP",39,0)
LOOK ; ICD Lookup Loop
"RTN","LEXQIP",40,0)
 N LEXDG,LEXST,LEXSD,LEXLD,LEXMOR,LEXWN,LEXCC,LEXMC,LEXICP,LEXICPC
"RTN","LEXQIP",41,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S LEXCDT="" Q
"RTN","LEXQIP",42,0)
 S LEXLEN=62 F  S LEXICP=$$ICP^LEXQIPA  D  Q:LEXICP="^"!(LEXICP="^^")
"RTN","LEXQIP",43,0)
 . S:LEXICP="^^" LEXEXIT=1 Q:LEXICP="^"!(LEXICP="^^")
"RTN","LEXQIP",44,0)
 . K LEXST,LEXSD,LEXLD,LEXWN,LEXCC,LEXMOR,LEXMC,^TMP("LEXQIP",$J)
"RTN","LEXQIP",45,0)
 . N LEXIEN,LEXLDT,LEXELDT,LEXINC,LEXINOT,LEXIREQ,LEXINCC,LEXSO,LEXNAM
"RTN","LEXQIP",46,0)
 . S LEXIEN=+($G(LEXICP)),LEXLDT=+($G(LEXCDT)) Q:+LEXIEN'>0  Q:LEXLDT'?7N
"RTN","LEXQIP",47,0)
 . S LEXELDT=$$SD^LEXQM(LEXLDT) Q:'$L(LEXELDT)
"RTN","LEXQIP",48,0)
 . D CSV,EN^LEXQIP3
"RTN","LEXQIP",49,0)
 Q
"RTN","LEXQIP",50,0)
CSV ; Code Set Versioning Display
"RTN","LEXQIP",51,0)
 N LEXEDT,LEXIEN,LEXIENS,LEXLTXT,LEXSTAT,LEXSYS,LEXMSG,LEXDAT
"RTN","LEXQIP",52,0)
 N LEXT,LEXTMP S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT)
"RTN","LEXQIP",53,0)
 I LEXCDT'?7N S (LEXICP,LEXCDT)="" Q
"RTN","LEXQIP",54,0)
 S LEXIEN=+($G(LEXICP)),LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",55,0)
 S LEXLTXT=$P($G(LEXICP),"^",3) S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",56,0)
 Q:+LEXIEN'>0  Q:'$L(LEXSO)  Q:+LEXSYS'>0
"RTN","LEXQIP",57,0)
 S LEXDAT=$$ICDOP^ICDEX(LEXSO,LEXCDT,LEXSYS,"E")
"RTN","LEXQIP",58,0)
 S LEXSO=$P(LEXDAT,"^",2),LEXNAM=$P(LEXDAT,"^",5)
"RTN","LEXQIP",59,0)
 I '$L(LEXNAM)!($P(LEXNAM,"^",1)=-1) D
"RTN","LEXQIP",60,0)
 . N LEXLA S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999)
"RTN","LEXQIP",61,0)
 . S LEXNAM=$$SD^ICDEX(80.1,+LEXIEN,LEXLA)
"RTN","LEXQIP",62,0)
 Q:'$L($G(LEXNAM))
"RTN","LEXQIP",63,0)
 ;
"RTN","LEXQIP",64,0)
 ; "Unversioned" Fields
"RTN","LEXQIP",65,0)
 ; 
"RTN","LEXQIP",66,0)
 ;   ,01   Code
"RTN","LEXQIP",67,0)
 ;   1.1   Coding System
"RTN","LEXQIP",68,0)
 ;   1.2   Identifier
"RTN","LEXQIP",69,0)
 ;   1.4   MDC24
"RTN","LEXQIP",70,0)
 ;   1.7   ICD Expanded
"RTN","LEXQIP",71,0)
 ;   1.8   Exclude from Lookup
"RTN","LEXQIP",72,0)
 ;   20    MAJOR O.R. PROC
"RTN","LEXQIP",73,0)
 ;   
"RTN","LEXQIP",74,0)
 S LEXTMP=$$MOR^ICDEX(+LEXIEN) D:$L(LEXTMP) OR^LEXQIP2(LEXTMP,.LEXMOR)
"RTN","LEXQIP",75,0)
 ;            
"RTN","LEXQIP",76,0)
 ; Get the "Versioned" Fields
"RTN","LEXQIP",77,0)
 ;            
"RTN","LEXQIP",78,0)
 ;   Date/Status          80.166  (66)
"RTN","LEXQIP",79,0)
 S LEXST=$$EF(+($G(LEXIEN)),+LEXCDT),LEXSTAT=+($P(LEXST,"^",2))
"RTN","LEXQIP",80,0)
 ;   Procedure Name       80.167  (67)
"RTN","LEXQIP",81,0)
 D SDS(+($G(LEXIEN)),+LEXCDT,.LEXSD,62,LEXSTAT)
"RTN","LEXQIP",82,0)
 ;   Description          80.168  (68)
"RTN","LEXQIP",83,0)
 D LDS(+($G(LEXIEN)),+LEXCDT,.LEXLD,62,LEXSTAT)
"RTN","LEXQIP",84,0)
 ;   Warning Message
"RTN","LEXQIP",85,0)
 D WN(+LEXCDT,.LEXWN,62)
"RTN","LEXQIP",86,0)
 ;   MDC/DRG Groups       80.171  (71)
"RTN","LEXQIP",87,0)
 D MDCDRG^LEXQIP2(+LEXIEN,+LEXCDT,.LEXDG,LEXLEN)
"RTN","LEXQIP",88,0)
 Q
"RTN","LEXQIP",89,0)
 ;      
"RTN","LEXQIP",90,0)
EF(X,LEXCDT) ; Effective Dates
"RTN","LEXQIP",91,0)
 N LEX,LEXAD,LEXBRD,LEXBRW,LEXEE,LEXEF,LEXES,LEXFA,LEXH,LEXI,LEXID,LEXIEN,LEXRT,LEXLS,LEXSO,LEXSYS,LEXST S LEXIEN=+($G(X)),LEXCDT=+($G(LEXCDT))
"RTN","LEXQIP",92,0)
 S LEXRT=$$ROOT^ICDEX(80.1) Q:+LEXIEN'>0 "^^"  S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN) Q:'$L(LEXSO)!($P(LEXSO,"^",1)="-1")  Q:LEXCDT'?7N "^^"
"RTN","LEXQIP",93,0)
 S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN),LEX=$$ICDOP^ICDEX(LEXSO,LEXCDT,LEXSYS,"E")
"RTN","LEXQIP",94,0)
 S LEXFA=$$FA(+LEXIEN),(LEXLS,LEXST)=$P(LEX,"^",10),LEXID=$P(LEX,"^",12),LEXAD=$P(LEX,"^",13),LEXBRD=2781001,LEXBRW=""
"RTN","LEXQIP",95,0)
 I LEXCDT<LEXBRD&(+LEXFA=LEXBRD) D
"RTN","LEXQIP",96,0)
 . S LEXBRW="Warning:  The 'Based on Date' provided precedes the initial Code Set Business Rule date of "
"RTN","LEXQIP",97,0)
 . S LEXBRW=LEXBRW_$$SD^LEXQM(LEXBRD)_", the Effective date may be inaccurate."
"RTN","LEXQIP",98,0)
 S LEXES=$S(+LEXST>0:"Active",1:"Inactive")
"RTN","LEXQIP",99,0)
 S:+LEXST'>0&(+LEXAD'>0) LEXES="Not Applicable",LEXLS=-1
"RTN","LEXQIP",100,0)
 S:+LEXFA>0&(+LEXCDT>0)&(LEXFA>LEXCDT) LEXES="Pending",LEXLS=-1,LEXST=0,LEXBRW=""
"RTN","LEXQIP",101,0)
 S:LEXST>0 LEXEF=LEXAD S:LEXST'>0 LEXEF=LEXID
"RTN","LEXQIP",102,0)
 S:LEXST'>0&(+LEXID'>0) LEXEF=LEXFA S LEXEE=$$SD^LEXQM(LEXEF)
"RTN","LEXQIP",103,0)
 I LEXST'>0,+LEXID'>0,$L(LEXEE),+LEXEF>LEXCDT S LEXEE="(future activation of "_LEXEE_")",LEXEF=""
"RTN","LEXQIP",104,0)
 S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQIP",105,0)
 Q X
"RTN","LEXQIP",106,0)
 ; 
"RTN","LEXQIP",107,0)
SDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Operation/Procedure (short description)
"RTN","LEXQIP",108,0)
 ; 
"RTN","LEXQIP",109,0)
 ; LEX=# of Lines
"RTN","LEXQIP",110,0)
 ; LEX(0)=External Date of Operation/Procedure Name
"RTN","LEXQIP",111,0)
 ; LEX(#)=Operation/Procedure Name
"RTN","LEXQIP",112,0)
 ; 
"RTN","LEXQIP",113,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQIP",114,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQIP",115,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXSD,LEXSDD
"RTN","LEXQIP",116,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQIP",117,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",118,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",119,0)
 S LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",120,0)
 S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQIP",121,0)
 S LEXLAST=$$ICDOP^ICDEX(LEXSO,LEXLA,LEXSY,"E")
"RTN","LEXQIP",122,0)
 S LEXLSD=$P(LEXLAST,"^",5),LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQIP",123,0)
 S LEXSD=$$SD^ICDEX(80.1,+LEXIEN,LEXVDT,.LEXS)
"RTN","LEXQIP",124,0)
 S LEXSD=$G(LEXS(1)),LEXSDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQIP",125,0)
 S:'$L(LEXSD) LEXSDD="--/--/----" S LEXM=""
"RTN","LEXQIP",126,0)
 I $P(LEXSD,"^",1)="-1"!('$L(LEXSD)) D
"RTN","LEXQIP",127,0)
 . S LEXM="Operation/Procedure Short Name is not available."
"RTN","LEXQIP",128,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQIP",129,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQIP",130,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQIP",131,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQIP",132,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQIP",133,0)
 I $L(LEXSD)&($P(LEXSD,"^",1)'="-1") D
"RTN","LEXQIP",134,0)
 . S LEXM="" S LEXOD=LEXSD,LEXODD=$S(LEXSDD?7N:$$ED^LEXQM(LEXSDD),1:"--/--/----")
"RTN","LEXQIP",135,0)
 S:'$L(LEXOD) LEXOD="Operation/Procedure Short Name not found"
"RTN","LEXQIP",136,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQIP",137,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",138,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQIP",139,0)
 I $L($G(LEXM)) D
"RTN","LEXQIP",140,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",141,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQIP",142,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQIP",143,0)
 Q
"RTN","LEXQIP",144,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Operation/Procedure (short description)
"RTN","LEXQIP",145,0)
 ; 
"RTN","LEXQIP",146,0)
 ; LEX=# of Lines
"RTN","LEXQIP",147,0)
 ; LEX(0)=External Date of Operation/Procedure Name
"RTN","LEXQIP",148,0)
 ; LEX(#)=Operation/Procedure Name
"RTN","LEXQIP",149,0)
 ; 
"RTN","LEXQIP",150,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQIP",151,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQIP",152,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXLD,LEXLDD
"RTN","LEXQIP",153,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQIP",154,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",155,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",156,0)
 S LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",157,0)
 S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQIP",158,0)
 S LEXLSD=$$LD^ICDEX(80.1,+LEXIEN,LEXLA)
"RTN","LEXQIP",159,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQIP",160,0)
 S LEXLD=$$LD^ICDEX(80.1,+LEXIEN,LEXVDT,.LEXS,245)
"RTN","LEXQIP",161,0)
 S LEXLD=$G(LEXS(1)),LEXLDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQIP",162,0)
 S:'$L(LEXLD) LEXLDD="--/--/----" S LEXM=""
"RTN","LEXQIP",163,0)
 I $P(LEXLD,"^",1)="-1"!('$L(LEXLD)) D
"RTN","LEXQIP",164,0)
 . S LEXM="Operation/Procedure Description is not available."
"RTN","LEXQIP",165,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQIP",166,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQIP",167,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQIP",168,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQIP",169,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQIP",170,0)
 I $L(LEXLD)&($P(LEXLD,"^",1)'="-1") D
"RTN","LEXQIP",171,0)
 . S LEXM="" S LEXOD=LEXLD,LEXODD=$S(LEXLDD?7N:$$ED^LEXQM(LEXLDD),1:"--/--/----")
"RTN","LEXQIP",172,0)
 S:'$L(LEXOD) LEXOD="Operation/Procedure Description not found"
"RTN","LEXQIP",173,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQIP",174,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",175,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQIP",176,0)
 I $L($G(LEXM)) D
"RTN","LEXQIP",177,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",178,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQIP",179,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQIP",180,0)
 Q
"RTN","LEXQIP",181,0)
 ;
"RTN","LEXQIP",182,0)
WN(X,LEX,LEXLEN) ; Warning
"RTN","LEXQIP",183,0)
 ;            
"RTN","LEXQIP",184,0)
 ; LEX=# of Lines
"RTN","LEXQIP",185,0)
 ; LEX(0)=External Date
"RTN","LEXQIP",186,0)
 ; LEX(#)=Warning
"RTN","LEXQIP",187,0)
 ;            
"RTN","LEXQIP",188,0)
 N LEXVDT,LEXREF,LEXIA,LEXTMP K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXLEN=+$G(LEXLEN) S LEXIA=$$IA(LEXVDT,LEXIEN) Q:+LEXIA'>0  S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQIP",189,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The Operation/Procedure (Short Name) and Description may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQIP",190,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQIP",191,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQIP",192,0)
 Q
"RTN","LEXQIP",193,0)
 ; Miscellaneous
"RTN","LEXQIP",194,0)
FA(X) ;   First Activation
"RTN","LEXQIP",195,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQIP",196,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN),LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",197,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQIP",198,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQIP",199,0)
 S X=LEXFA
"RTN","LEXQIP",200,0)
 Q X
"RTN","LEXQIP",201,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQIP",202,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQIP",203,0)
 S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",204,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQIP",205,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQIP",206,0)
 Q X
"RTN","LEXQIP2")
0^32^B10742392
"RTN","LEXQIP2",1,0)
LEXQIP2 ;ISL/KER - Query - ICD Procedure - Extract ;04/21/2014
"RTN","LEXQIP2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQIP2",3,0)
 ;               
"RTN","LEXQIP2",4,0)
 ; Global Variables
"RTN","LEXQIP2",5,0)
 ;    None
"RTN","LEXQIP2",6,0)
 ;               
"RTN","LEXQIP2",7,0)
 ; External References
"RTN","LEXQIP2",8,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXQIP2",9,0)
 ;    MD^ICDEX            ICR   5747
"RTN","LEXQIP2",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIP2",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP2",12,0)
 ;               
"RTN","LEXQIP2",13,0)
 ; Documented Integration Agreements
"RTN","LEXQIP2",14,0)
 ;               
"RTN","LEXQIP2",15,0)
 ; Local Variables NEWed or KILLed in LEXQIP
"RTN","LEXQIP2",16,0)
 ;     LEXINT
"RTN","LEXQIP2",17,0)
 ;               
"RTN","LEXQIP2",18,0)
 Q
"RTN","LEXQIP2",19,0)
MDCDRG(X,LEXCDT,LEX,LEXLEN) ; Major Diagnostic Category/DRG
"RTN","LEXQIP2",20,0)
 N LEXAI,LEXC,LEXDA,LEXDI,LEXEF,LEXFY,LEXI,LEXIEN,LEXL,LEXLC,LEXMDCC,LEXMDCS,LEXME,LEXMI,LEXN,LEXT
"RTN","LEXQIP2",21,0)
 N LEXT1,LEXT2,LEXUD,LEXUM,LEXVDT S LEXVDT=+($G(LEXCDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT K LEXUM,LEXUD,LEX
"RTN","LEXQIP2",22,0)
 S LEXLC=0,LEXIEN=+($G(X)),LEXCDT=$G(LEXCDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62 Q:LEXCDT'?7N
"RTN","LEXQIP2",23,0)
 D MD^ICDEX(80.1,+LEXIEN,$G(LEXCDT),.LEXMDCS,"IE")
"RTN","LEXQIP2",24,0)
 S LEXMDCC=0,LEXMI=0,(LEXEF,LEXFY)=$O(LEXMDCS(0)) Q:LEXFY'>0
"RTN","LEXQIP2",25,0)
 S LEXMI=0 F  S LEXMI=$O(LEXMDCS(LEXFY,"E",LEXMI)) Q:+LEXMI'>0  D
"RTN","LEXQIP2",26,0)
 . S LEXME=$G(LEXMDCS(LEXFY,"E",LEXMI)) Q:'$L(LEXME)
"RTN","LEXQIP2",27,0)
 . S LEXI=$O(LEX(" "),-1)+1,LEX(LEXI)=LEXME
"RTN","LEXQIP2",28,0)
 . S LEXDI=0 F  S LEXDI=$O(LEXMDCS(LEXFY,"E",LEXMI,LEXDI)) Q:+LEXDI'>0  D
"RTN","LEXQIP2",29,0)
 . . K LEXDA S LEXDA(1)=$G(LEXMDCS(LEXFY,"E",LEXMI,LEXDI))
"RTN","LEXQIP2",30,0)
 . . D PR^LEXQM(.LEXDA,(LEXLEN-14)) S LEXT1="    DRG "_LEXDI
"RTN","LEXQIP2",31,0)
 . . S LEXT1=LEXT1_$J(" ",(14-$L(LEXT1))),LEXT2=$J(" ",14)
"RTN","LEXQIP2",32,0)
 . . S (LEXC,LEXI)=0 F  S LEXI=$O(LEXDA(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQIP2",33,0)
 . . . N LEXT,LEXL,LEXN,LEXAI S LEXT=$$TM^LEXQM($G(LEXDA(LEXI)))
"RTN","LEXQIP2",34,0)
 . . . Q:'$L(LEXT)  S LEXC=LEXC+1 S:LEXC=1 LEXL=LEXT1_LEXT S:LEXC>1 LEXL=LEXT2_LEXT
"RTN","LEXQIP2",35,0)
 . . . S LEXAI=$O(LEX(" "),-1)+1,LEX(LEXAI)=LEXL
"RTN","LEXQIP2",36,0)
 S:LEXEF?7N&($L(LEX(1))) LEX(0)=$$SD^LEXQM(LEXEF) S LEX=+($O(LEX(" "),-1))
"RTN","LEXQIP2",37,0)
 Q
"RTN","LEXQIP2",38,0)
MAJ(X,LEX) ; Major O.R. Procedures
"RTN","LEXQIP2",39,0)
 N LEXC,LEXCHR,LEXHDR,LEXI,LEXI1,LEXI2,LEXIDI,LEXIEN,LEXPC,LEXSTR,LEXT S LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXQIP2",40,0)
 S LEXSTR=$$MOR^ICDEX(+LEXIEN) Q:'$L(LEXSTR)  D OR(LEXSTR,.LEX)
"RTN","LEXQIP2",41,0)
 Q
"RTN","LEXQIP2",42,0)
OR(X,LEX) ; O.R. Procedures
"RTN","LEXQIP2",43,0)
 K LEX N LEXC,LEXCHR,LEXHDR,LEXI,LEXI1,LEXI2,LEXIDI,LEXPC,LEXSTR,LEXT S LEXSTR=$G(X) Q:'$L(LEXSTR)
"RTN","LEXQIP2",44,0)
 S LEXHDR="Major O.R. ID",LEXPC=0,LEXCHR="" F LEXC=1:1  Q:'$L($E(LEXSTR,LEXC))  D
"RTN","LEXQIP2",45,0)
 . S LEXCHR=$E(LEXSTR,LEXC) Q:LEXCHR=""  F LEXI=1:1 S LEXIDI=$T(MID+LEXI),LEXIDI=$P(LEXIDI,";;",2) Q:LEXIDI="EXIT"  D
"RTN","LEXQIP2",46,0)
 . . S LEXI1=$$TM^LEXQM($P(LEXIDI,"=")),LEXI2=$$TM^LEXQM($P(LEXIDI,"=",2)) Q:$L(LEXI1)'=1  Q:LEXI1'=LEXCHR  Q:'$L(LEXI2)
"RTN","LEXQIP2",47,0)
 . . S LEXT=LEXI2 S:$D(LEXINT) LEXT=LEXT_$J(" ",(22-$L(LEXT)))_"("_LEXI1_")" S LEXPC=LEXPC+1,LEX(1,LEXPC)=$$UP^XLFSTR(LEXT)
"RTN","LEXQIP2",48,0)
 S:+($O(LEX(1," "),-1))>0 LEX(0)=$$UP^XLFSTR(LEXHDR),LEX(1)=$$UP^XLFSTR(LEXSTR),LEX=+($O(LEX(1," "),-1))
"RTN","LEXQIP2",49,0)
 Q
"RTN","LEXQIP2",50,0)
MID ; Major O.R. Procedures Text
"RTN","LEXQIP2",51,0)
 ;;1=Bowel
"RTN","LEXQIP2",52,0)
 ;;2=Chest
"RTN","LEXQIP2",53,0)
 ;;3=Lymphoma/Leukemia
"RTN","LEXQIP2",54,0)
 ;;4=Joint
"RTN","LEXQIP2",55,0)
 ;;5=Pancreas/Liver
"RTN","LEXQIP2",56,0)
 ;;6=Pelvic
"RTN","LEXQIP2",57,0)
 ;;7=Shoulder/Elbow
"RTN","LEXQIP2",58,0)
 ;;8=Thumb/Joint
"RTN","LEXQIP2",59,0)
 ;;9=Head/Neck
"RTN","LEXQIP2",60,0)
 ;;A=Cardio
"RTN","LEXQIP2",61,0)
 ;;M=Musculoskeletal
"RTN","LEXQIP2",62,0)
 ;;EXIT
"RTN","LEXQIP2",63,0)
 Q
"RTN","LEXQIP3")
0^33^B28040002
"RTN","LEXQIP3",1,0)
LEXQIP3 ;ISL/KER - Query - ICD Procedure - Save ;04/21/2014
"RTN","LEXQIP3",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80**;Sep 23, 1996;Build 1
"RTN","LEXQIP3",3,0)
 ;               
"RTN","LEXQIP3",4,0)
 ; Global Variables
"RTN","LEXQIP3",5,0)
 ;    ^TMP("LEXQIPO")     SACC 2.3.2.5.1
"RTN","LEXQIP3",6,0)
 ;               
"RTN","LEXQIP3",7,0)
 ; External References
"RTN","LEXQIP3",8,0)
 ;    $$VSEX^ICDEX        ICR   5747
"RTN","LEXQIP3",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP3",10,0)
 ;               
"RTN","LEXQIP3",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQIP3",12,0)
 ;    LEXCDT             Code Set Versioning Date
"RTN","LEXQIP3",13,0)
 ;    LEXDG              DRG Array
"RTN","LEXQIP3",14,0)
 ;    LEXIEN             Internal Entry Number
"RTN","LEXQIP3",15,0)
 ;    LEXLEN             Offset Length
"RTN","LEXQIP3",16,0)
 ;    LEXSO              Code
"RTN","LEXQIP3",17,0)
 ;    LEXNAM             Unversioned Name
"RTN","LEXQIP3",18,0)
 ;    LEXST              Status and Effective Dates
"RTN","LEXQIP3",19,0)
 ;    LEXSD              Versioned Short Description
"RTN","LEXQIP3",20,0)
 ;    LEXLD              Versioned Long Description
"RTN","LEXQIP3",21,0)
 ;    LEXWN              Warning
"RTN","LEXQIP3",22,0)
 ;    LEXMOR             Major O.R. Procedure
"RTN","LEXQIP3",23,0)
 ;    LEXDG              MDC/DRG
"RTN","LEXQIP3",24,0)
 ;    LEXELDT            External Last Date
"RTN","LEXQIP3",25,0)
 ;              
"RTN","LEXQIP3",26,0)
EN ; Main Entry Point
"RTN","LEXQIP3",27,0)
 K ^TMP("LEXQIPO",$J) Q:'$L($G(LEXELDT))  I +($G(LEXST))<0 D FUT D:$D(^TMP("LEXQIPO",$J)) DSP^LEXQO("LEXQIPO") Q
"RTN","LEXQIP3",28,0)
 D FUL D:$D(^TMP("LEXQIPO",$J)) DSP^LEXQO("LEXQIPO")
"RTN","LEXQIP3",29,0)
 Q
"RTN","LEXQIP3",30,0)
FUT ; Future Activation
"RTN","LEXQIP3",31,0)
 N LEX1,LEX2,LEX3,LEXEFF,LEXI,LEXL,LEXSTA S LEXI=+($G(LEXIEN)) Q:+LEXI'>0
"RTN","LEXQIP3",32,0)
 S LEXL=+($G(LEXLEN)) Q:+LEXL'>0  S:LEXL>62 LEXL=62
"RTN","LEXQIP3",33,0)
 Q:'$L(LEXSO)  Q:'$L(LEXNAM)  S LEXSTA=$G(LEXST)
"RTN","LEXQIP3",34,0)
 S LEXEFF=$P(LEXSTA,"^",5),LEXSTA=$P(LEXSTA,"^",4)
"RTN","LEXQIP3",35,0)
 Q:'$L(LEXSTA)  Q:'$L(LEXEFF)  S (LEX1,LEX2,LEX3)=""
"RTN","LEXQIP3",36,0)
 D BOD(LEXELDT),COD(LEXSO,LEXNAM,+($G(LEXL))),STA(.LEXST,+($G(LEXL)))
"RTN","LEXQIP3",37,0)
 Q
"RTN","LEXQIP3",38,0)
BOD(X) ;   Based on Date
"RTN","LEXQIP3",39,0)
 N LEXBOD S LEXBOD=$G(X),X="Display based on date:  "_LEXBOD D BL,TL(X)
"RTN","LEXQIP3",40,0)
 Q
"RTN","LEXQIP3",41,0)
COD(X,Y,LEXLEN) ;   Code Line
"RTN","LEXQIP3",42,0)
 N LEXC,LEXN,LEXT S LEXC=$G(X),LEXN=$G(Y),LEXT="Code:  "_LEXC
"RTN","LEXQIP3",43,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",44,0)
 Q
"RTN","LEXQIP3",45,0)
STA(X,LEXLEN) ;   Status Line
"RTN","LEXQIP3",46,0)
 N LEX,LEXC,LEXX,LEXE,LEXI,LEXN,LEXS,LEXT,LEXW,LEXEFF,LEXSTA
"RTN","LEXQIP3",47,0)
 S LEXX=$G(X),LEXSTA=$P(LEXX,"^",4),LEXEFF=$P(LEXX,"^",5)
"RTN","LEXQIP3",48,0)
 S LEXEFF=$TR(LEXEFF,"()",""),LEXW=$P(LEXX,"^",6)
"RTN","LEXQIP3",49,0)
 S LEXT="  Status:  ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXSTA
"RTN","LEXQIP3",50,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))
"RTN","LEXQIP3",51,0)
 S:LEXEFF'["future" LEXT=LEXT_"Effective:  "
"RTN","LEXQIP3",52,0)
 S LEXT=LEXT_$$UP^XLFSTR($E(LEXEFF,1))_$E(LEXEFF,2,$L(LEXEFF)) D BL,TL(LEXT)
"RTN","LEXQIP3",53,0)
 I $L(LEXW) D
"RTN","LEXQIP3",54,0)
 . N LEX,LEXT,LEXC,LEXI,LEXN S LEX(1)=LEXW D PR^LEXQM(.LEX,(LEXLEN-7))
"RTN","LEXQIP3",55,0)
 . Q:+($O(LEX(" "),-1))'>0  S LEXT=$J(" ",((79-+($G(LEXLEN)))))
"RTN","LEXQIP3",56,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQIP3",57,0)
 . . N LEXN S LEXN=$$TM^LEXQM($G(LEX(LEXI))) S:$L(LEXN) LEXC=LEXC+1
"RTN","LEXQIP3",58,0)
 . . D:LEXC=1 BL D TL((LEXT_LEXN))
"RTN","LEXQIP3",59,0)
 Q
"RTN","LEXQIP3",60,0)
FUL ; Full Display
"RTN","LEXQIP3",61,0)
 N LEXFUL,LEX,LEXL S LEXL=+($G(LEXLEN)) S:LEXL>62 LEXL=62
"RTN","LEXQIP3",62,0)
 S LEXFUL=""  D FUT
"RTN","LEXQIP3",63,0)
 D LIM(+($G(LEXIEN)),+($G(LEXL)))
"RTN","LEXQIP3",64,0)
 D SD(.LEXSD,+($G(LEXL)))
"RTN","LEXQIP3",65,0)
 D LD(.LEXLD,+($G(LEXL)))
"RTN","LEXQIP3",66,0)
 D WN(.LEXWN,+($G(LEXL)))
"RTN","LEXQIP3",67,0)
 D MOR(.LEXMOR,+($G(LEXL)))
"RTN","LEXQIP3",68,0)
 D DRG(.LEXDG,+($G(LEXL)))
"RTN","LEXQIP3",69,0)
 Q
"RTN","LEXQIP3",70,0)
LIM(X,LEXLEN) ;   Limitations - Sex
"RTN","LEXQIP3",71,0)
 N LEXC,LEXH,LEXI,LEXS,LEXT S LEXC=0,LEXI=+($G(X)) S LEXS=$$VSEX^ICDEX(80.1,+LEXI,$G(LEXCDT)) Q:"^M^F^"'[("^"_LEXS_"^")
"RTN","LEXQIP3",72,0)
 S LEXH="Use only with the " S:LEXS="F" LEXH=LEXH_"female sex" S:LEXS="M" LEXH=LEXH_"male sex"
"RTN","LEXQIP3",73,0)
 S LEXT="  Limitations: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXH
"RTN","LEXQIP3",74,0)
 D BL,TL(LEXT) S LEXC=1
"RTN","LEXQIP3",75,0)
 Q
"RTN","LEXQIP3",76,0)
SD(X,LEXLEN) ;   Short Description
"RTN","LEXQIP3",77,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Short Name: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",78,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQIP3",79,0)
 Q
"RTN","LEXQIP3",80,0)
LD(X,LEXLEN) ;   Long Description
"RTN","LEXQIP3",81,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Description: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",82,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQIP3",83,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))) S LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQIP3",84,0)
 Q
"RTN","LEXQIP3",85,0)
WN(X,LEXLEN) ;   Warning
"RTN","LEXQIP3",86,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT,LEXC Q:'$D(X(1))  S LEXC=0,LEXN=$G(X(1)),LEXT="",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN
"RTN","LEXQIP3",87,0)
 D:$L($G(LEXLD(2))) BL D TL(LEXT)
"RTN","LEXQIP3",88,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQIP3",89,0)
 Q
"RTN","LEXQIP3",90,0)
MOR(X,LEXLEN) ;   Major OR Procedure
"RTN","LEXQIP3",91,0)
 N LEXE,LEXH,LEXI,LEXID,LEXN,LEXT Q:'$D(X(1))  Q:'$D(X(1,1))  S LEXID=$G(X(1)) Q:'$L(LEXID)  S LEXN=$G(X(1,1)) Q:'$L(LEXN)
"RTN","LEXQIP3",92,0)
 S LEXT="  Major OR Proc",LEXE="Major O.R. Procedure",LEXE=LEXN,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXE D BL,TL(LEXT)
"RTN","LEXQIP3",93,0)
 S LEXI=1 F  S LEXI=$O(X(1,LEXI)) Q:+LEXI'>0  S LEXE=$G(X(1,LEXI)) I $L(LEXE) S LEXT=$J(" ",((79-+($G(LEXLEN)))))_LEXE D TL(LEXT)
"RTN","LEXQIP3",94,0)
 Q
"RTN","LEXQIP3",95,0)
DRG(X,LEXLEN) ;   Major Diagnostic Category/DRG
"RTN","LEXQIP3",96,0)
 N LEXE,LEXH,LEXI,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)) Q:'$L(LEXN)  S LEXE=$G(X(0)) S:$L(LEXE,"/")'=3 LEXE=""
"RTN","LEXQIP3",97,0)
 S LEXT="  MDC/DRG:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT) S LEXN=$G(X(2))
"RTN","LEXQIP3",98,0)
 S LEXT="    "_LEXE,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT))) D TL((LEXT_LEXN)) S LEXT=$J(" ",(79-+($G(LEXLEN)))),LEXI=2
"RTN","LEXQIP3",99,0)
 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=$G(X(LEXI)) D:$L(LEXN) TL((LEXT_LEXN))
"RTN","LEXQIP3",100,0)
 Q
"RTN","LEXQIP3",101,0)
 ;
"RTN","LEXQIP3",102,0)
 ; Miscellaneous
"RTN","LEXQIP3",103,0)
BL ;   Blank Line
"RTN","LEXQIP3",104,0)
 D TL(" ") Q
"RTN","LEXQIP3",105,0)
TL(X) ;   Text Line
"RTN","LEXQIP3",106,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQIP3",107,0)
 N LEXI,LEXTEST S LEXI=+($O(^TMP("LEXQIPO",$J," "),-1))+1 S ^TMP("LEXQIPO",$J,LEXI)=$G(X),^TMP("LEXQIPO",$J,0)=LEXI
"RTN","LEXQIP3",108,0)
 Q
"RTN","LEXQIPA")
0^34^B3640982
"RTN","LEXQIPA",1,0)
LEXQIPA ;ISL/KER - Query - ICD Procedure - Ask ;04/21/2014
"RTN","LEXQIPA",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQIPA",3,0)
 ;               
"RTN","LEXQIPA",4,0)
 ; Global Variables
"RTN","LEXQIPA",5,0)
 ;    None
"RTN","LEXQIPA",6,0)
 ;               
"RTN","LEXQIPA",7,0)
 ; External References
"RTN","LEXQIPA",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXQIPA",9,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQIPA",10,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQIPA",11,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQIPA",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIPA",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIPA",14,0)
 ;               
"RTN","LEXQIPA",15,0)
 ; Local Variables NEWed or KILLed in LEXQIP
"RTN","LEXQIPA",16,0)
 ;     LEXCDT,LEXEXIT
"RTN","LEXQIPA",17,0)
 ;               
"RTN","LEXQIPA",18,0)
 Q
"RTN","LEXQIPA",19,0)
ICP(X) ; ICD DX Code
"RTN","LEXQIPA",20,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIC,DTOUT,DUOUT,LEXDX,LEXSO,LEXDTXT,LEXVTXT,LEXVDT,Y,ICDVDT,ICDSYS,ICDFMT S ICDFMT=2
"RTN","LEXQIPA",21,0)
 S DIC(0)="AEQMZ",DIC=$$ROOT^ICDEX(80.1),DIC("A")=" Select an ICD Procedure code:  " W !
"RTN","LEXQIPA",22,0)
 D ^DIC  S:$G(X)["^^"!($D(DTOUT)) LEXEXIT=1 Q:$G(X)["^^"!(+($G(LEXEXIT))>0) "^^"
"RTN","LEXQIPA",23,0)
 Q:$G(X)="^" "^"  Q:$G(X)["^^" "^^"  Q:$D(DTOUT)!($D(DUOUT)) "^"  S LEXSO=$P($G(Y),"^",2) S X="" I +Y>0,$L(LEXSO) D
"RTN","LEXQIPA",24,0)
 . N LEXSYS S LEXSYS=$$CSI^ICDEX(80.1,+Y),LEXVDT=$G(LEXCDT) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S X=Y,LEXDTXT=$P($G(Y(0)),"^",2)
"RTN","LEXQIPA",25,0)
 . S LEXDX=$$ICDOP^ICDEX(LEXSO,LEXVDT,LEXSYS,"E") S:$L($G(LEXDTXT)) LEXDTXT=LEXDTXT_" (Text not Versioned)"
"RTN","LEXQIPA",26,0)
 . S LEXVTXT=$P(LEXDX,"^",5) S:'$L(LEXVTXT) LEXVTXT=LEXDTXT
"RTN","LEXQIPA",27,0)
 . S X=+Y_"^"_LEXSO S:$L(LEXVTXT) X=X_"^"_LEXVTXT
"RTN","LEXQIPA",28,0)
 S X=$$UP^XLFSTR(X) Q:'$L(X) "^"
"RTN","LEXQIPA",29,0)
 Q X
"RTN","LEXQL")
0^16^B69016427
"RTN","LEXQL",1,0)
LEXQL ;ISL/KER - Query - Lookup Code ;04/21/2014
"RTN","LEXQL",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQL",3,0)
 ;               
"RTN","LEXQL",4,0)
 ; Global Variables
"RTN","LEXQL",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQL",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQL",7,0)
 ;    ^ICPT("BA")         ICR   4489
"RTN","LEXQL",8,0)
 ;    ^TMP("LEXQL")       SACC 2.3.2.5.1
"RTN","LEXQL",9,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","LEXQL",10,0)
 ;               
"RTN","LEXQL",11,0)
 ; External References
"RTN","LEXQL",12,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQL",13,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQL",14,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQL",15,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQL",16,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQL",17,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQL",18,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXQL",19,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQL",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQL",21,0)
 ;               
"RTN","LEXQL",22,0)
 N DIR,DIRB,DIROUT,DIRUT,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,DTOUT,DUOUT,LEX,LEXC,LEXCOM,LEXCT,LEXCTY,LEXD,LEXDS,LEXDT,LEXE,LEXENT,LEXFD
"RTN","LEXQL",23,0)
 N LEXFI,LEXI,LEXIEN,LEXIN,LEXIT,LEXIX,LEXKEY,LEXL,LEXLAST,LEXLEN,LEXMAX,LEXN,LEXNM,LEXO,LEXOC,LEXRTN,LEXS,LEXSEL,LEXSO,LEXSS,LEXSTR,LEXT
"RTN","LEXQL",24,0)
 N LEXT1,LEXT2,LEXT3,LEXTAG,LEXTD,LEXTMP,LEXTN,LEXTOT,LEXTQ,LEXTS,LEXTTT,LEXTY,LEXUSR,LEXV,LEXVAL,LEXX,Y
"RTN","LEXQL",25,0)
 K ^TMP("LEXQL",$J),^UTILITY($J) S X=$$SO K ^TMP("LEXQL",$J),^UTILITY($J)
"RTN","LEXQL",26,0)
 Q
"RTN","LEXQL",27,0)
SO(X) ; Select a Code
"RTN","LEXQL",28,0)
 ;               
"RTN","LEXQL",29,0)
 ; Input    None
"RTN","LEXQL",30,0)
 ;             
"RTN","LEXQL",31,0)
 ; Output   X - "^" delimited string
"RTN","LEXQL",32,0)
 ;              1 - IEN
"RTN","LEXQL",33,0)
 ;              2 - Global Root
"RTN","LEXQL",34,0)
 ;              3 - File #
"RTN","LEXQL",35,0)
 ;              4 - Coding System (if available)
"RTN","LEXQL",36,0)
 ;              5 - Code
"RTN","LEXQL",37,0)
 ;              6 - Short Name
"RTN","LEXQL",38,0)
 ;            
"RTN","LEXQL",39,0)
 ;            or "^" if no code is found/selected
"RTN","LEXQL",40,0)
 ;               
"RTN","LEXQL",41,0)
 K ^TMP("LEXQL",$J) Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEXQL",42,0)
 S DIR(0)="FAO^1:30",DIR("A")=" Select a Code:  "
"RTN","LEXQL",43,0)
 S DIRB=$$RET^LEXQD("LEXQL","SO",+($G(DUZ)),"Select a Code") S:$L(DIRB) DIR("B")=DIRB
"RTN","LEXQL",44,0)
 S DIR("PRE")="S:'$L(X)&($L($G(DIR(""B"")))) X=$G(DIR(""B"")) S X=$TR($$UP^XLFSTR(X),""#"""""",""""),X=$$VSO^LEXQL2(X) S X=$$SEL^LEXQL(X)"
"RTN","LEXQL",45,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEXQL" D ^DIR S X=$TR(X,"#""",""),Y=$TR(Y,"#""","")
"RTN","LEXQL",46,0)
 I X="^^"!($D(DTOUT))!(+($G(LEXEXIT))) K ^TMP("LEXQL",$J) Q "^^"
"RTN","LEXQL",47,0)
 I '$D(^TMP("LEXQL",$J,"X")) S:$L(Y)&(Y=$P(DIRB,U,4)) ^TMP("LEXQL",$J,"X")=DIRB
"RTN","LEXQL",48,0)
 S:$D(DIROUT)!($D(DIRUT))!($D(DTOUT))!($D(DUOUT)) X="^" Q:$E(X,1)="^" X
"RTN","LEXQL",49,0)
 S X="" S:$L($G(^TMP("LEXQL",$J,"X"))) X=$G(^TMP("LEXQL",$J,"X"))
"RTN","LEXQL",50,0)
 S LEX=$P(X,U,5) D:$L(LEX) SAV^LEXQD("LEXQL","SO",+($G(DUZ)),"Select a Code",LEX) K ^TMP("LEXQL",$J)
"RTN","LEXQL",51,0)
 Q X
"RTN","LEXQL",52,0)
SOH ;   Select a Code Help
"RTN","LEXQL",53,0)
 W !,"     Enter a code from either:",!
"RTN","LEXQL",54,0)
 W !,"       ICD-9 Diagnosis file       #80       4-7 Characters"
"RTN","LEXQL",55,0)
 W !,"       ICD-9 Procedure file       #80.1     3-5 Characters"
"RTN","LEXQL",56,0)
 W !,"       ICD-10 Diagnosis file      #80       4-8 Characters"
"RTN","LEXQL",57,0)
 W !,"       ICD-10 Procedure file      #80.1     7 Characters"
"RTN","LEXQL",58,0)
 W !,"       CPT/HCPCS Procedure file   #81       5 Characters"
"RTN","LEXQL",59,0)
 W !,"       CPT Modifier file          #81.3     2 Characters",!
"RTN","LEXQL",60,0)
 W !,"     Or enter keywords, 2-30 characters, to search for in"
"RTN","LEXQL",61,0)
 W !,"     the above files.",!
"RTN","LEXQL",62,0)
 Q
"RTN","LEXQL",63,0)
SOGD(X) ;   Select a Code Global/Data
"RTN","LEXQL",64,0)
 N LEX,LEXTD S LEX=$G(X) Q:'$L(LEX) "^"  S LEXTD=$$DT^XLFDT
"RTN","LEXQL",65,0)
 ; 80 ICD-9
"RTN","LEXQL",66,0)
 Q:$$CODEABA^ICDEX(X,80,1)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX(X,LEXTD,1,"E"))
"RTN","LEXQL",67,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80,1)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX($$UP^XLFSTR(X),LEXTD,1,"E"))
"RTN","LEXQL",68,0)
 ; 80 ICD-10
"RTN","LEXQL",69,0)
 Q:$$CODEABA^ICDEX(X,80,30)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX(X,LEXTD,30,"E"))
"RTN","LEXQL",70,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80,30)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX($$UP^XLFSTR(X),LEXTD,30,"E"))
"RTN","LEXQL",71,0)
 ; 80.1 ICD-9
"RTN","LEXQL",72,0)
 Q:$$CODEABA^ICDEX(X,80.1,2)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX(X,LEXTD,2,"E"))
"RTN","LEXQL",73,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80.1,2)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX($$UP^XLFSTR(X),LEXTD,2,"E"))
"RTN","LEXQL",74,0)
 ; 80.1 ICD-10
"RTN","LEXQL",75,0)
 Q:$$CODEABA^ICDEX(X,80.1,31)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX(X,LEXTD,31,"E"))
"RTN","LEXQL",76,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80.1,31)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX($$UP^XLFSTR(X),LEXTD,31,"E"))
"RTN","LEXQL",77,0)
 ; 81 CPT
"RTN","LEXQL",78,0)
 Q:$D(^ICPT("BA",(X_" "))) ("ICPT("_"^"_$$CPT^ICPTCOD(X,$G(LEXTD)))
"RTN","LEXQL",79,0)
 Q:$D(^ICPT("BA",($$UP^XLFSTR(X)_" "))) ("ICPT("_"^"_$$CPT^ICPTCOD($$UP^XLFSTR(X),$G(LEXTD)))
"RTN","LEXQL",80,0)
 ; 81.3 CPT Modifier
"RTN","LEXQL",81,0)
 Q:$D(^DIC(81.3,"BA",(X_" "))) ("DIC(81.3,"_"^"_$$MOD^ICPTMOD(X,"E",$G(LEXTD)))
"RTN","LEXQL",82,0)
 Q:$D(^DIC(81.3,"BA",($$UP^XLFSTR(X)_" "))) ("DIC(81.3,"_"^"_$$MOD^ICPTMOD($$UP^XLFSTR(X),"E",$G(LEXTD)))
"RTN","LEXQL",83,0)
 Q ""
"RTN","LEXQL",84,0)
 ;            
"RTN","LEXQL",85,0)
SEL(X) ; Select from List
"RTN","LEXQL",86,0)
 Q:'$L($G(X)) ""  Q:$G(X)["^" $G(X)  Q:$G(X)["?" "??"  K ^TMP("LEXQL",$J) D ADD^LEXQL2($G(X)) Q:'$D(^TMP("LEXQL",$J)) "??"  D ASK
"RTN","LEXQL",87,0)
 K ^TMP("LEXQL",$J) Q:+X'>0 "??"  S:+($G(X))>0 ^TMP("LEXQL",$J,"X")=X S:+($G(X))>0 X=$P($G(X),"^",4)
"RTN","LEXQL",88,0)
 Q X
"RTN","LEXQL",89,0)
ASK ;   Ask for Selection
"RTN","LEXQL",90,0)
 K X N LEXTOT S LEXTOT=+($G(^TMP("LEXQL",$J,0))) S:+LEXTOT'>0 X="^" Q:+LEXTOT'>0  K X
"RTN","LEXQL",91,0)
 S:+LEXTOT=1 X=$$ONE Q:+LEXTOT=1  S:+LEXTOT>1 X=$$MUL
"RTN","LEXQL",92,0)
 Q
"RTN","LEXQL",93,0)
ONE(X) ;     One Entry Found
"RTN","LEXQL",94,0)
 Q:+($G(LEXEXIT))>0 "^^"  N LEXT1,LEXT2,LEXT3,LEX,LEXC,LEXCT,LEXIEN,LEXX,DIR,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","LEXQL",95,0)
 S LEXT1=$G(^TMP("LEXQL",$J,1)),LEXCT=$$CT(LEXT1),LEXIEN=+LEXT1,LEXT1=$P(LEXT1,U,2),LEXT2=$G(^TMP("LEXQL",$J,1,2))
"RTN","LEXQL",96,0)
 S:$L(LEXT1)&($L(LEXT2)) LEXT1=LEXT1_" "_LEXT2 S (LEXT3,LEX(1))=LEXT1
"RTN","LEXQL",97,0)
 S LEXX=LEXIEN_U_$$FI(LEXT3)_U_LEXCT D PR^LEXQL2(.LEX,64)
"RTN","LEXQL",98,0)
 S DIR("A",1)=" One code found",DIR("A",2)=" ",DIR("A",3)="     "_$G(LEX(1)),LEXC=3
"RTN","LEXQL",99,0)
 S:$L($G(LEX(2))) LEXC=LEXC+1,DIR("A",LEXC)="                         "_$G(LEX(2))
"RTN","LEXQL",100,0)
 S LEXC=LEXC+1,DIR("A",LEXC)=" ",LEXC=LEXC+1,DIR("A")="   OK?  (Yes/No)  ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","LEXQL",101,0)
 D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1,X="^^" I X["^^"!(+($G(LEXEXIT))>0) K ^TMP("LEXQL",$J) Q "^^"
"RTN","LEXQL",102,0)
 S X=$S(+Y>0:$$X(1),1:-1)
"RTN","LEXQL",103,0)
 Q X
"RTN","LEXQL",104,0)
MUL(X) ;     Multiple Entries Found
"RTN","LEXQL",105,0)
 Q:+($G(LEXEXIT))>0 "^^"  N LEXIEN,LEXENT,LEXT1,LEXTTT,LEXMAX,LEXI,LEXSS,LEXIT,LEXSTR,Y S (LEXMAX,LEXI,LEXSS,LEXIT)=0 S U="^"
"RTN","LEXQL",106,0)
 S LEXTTT=$G(^TMP("LEXQL",$J,0)),LEXSS=0 G:+LEXTTT=0 MULQ W ! W:+LEXTTT>1 !," ",LEXTTT," matches found"
"RTN","LEXQL",107,0)
 F LEXI=1:1:LEXTTT Q:((LEXSS>0)&(LEXSS<LEXI+1))  Q:LEXIT  D  Q:LEXIT
"RTN","LEXQL",108,0)
 . S LEXENT=$G(^TMP("LEXQL",$J,LEXI)) S LEXSTR=$P(LEXENT,U,1) Q:'$L(LEXSTR)  S LEXMAX=LEXI W:LEXI#5=1 ! D MULW
"RTN","LEXQL",109,0)
 . W:LEXI#5=0 ! S:LEXI#5=0 LEXSS=$$MULS(LEXMAX,LEXI) S:LEXSS["^" LEXIT=1
"RTN","LEXQL",110,0)
 I LEXI#5'=0,+LEXSS=0 W ! S LEXSS=$$MULS(LEXMAX,LEXI) S:LEXSS["^" LEXIT=1
"RTN","LEXQL",111,0)
 G MULQ
"RTN","LEXQL",112,0)
 Q X
"RTN","LEXQL",113,0)
MULW ;       Write Multiple
"RTN","LEXQL",114,0)
 N LEXT1,LEXT2,LEXT3,LEXIEN,LEX S LEXT1=$P(LEXENT,U,2),LEXT2=$G(^TMP("LEXQL",$J,LEXI,2)),LEXCT=$$CT(LEXT1),LEXIEN=+LEXENT
"RTN","LEXQL",115,0)
 K LEX S:$L(LEXT1)&($L(LEXT2)) LEXT1=LEXT1_" "_LEXT2
"RTN","LEXQL",116,0)
 S (LEXT3,LEX(1))=LEXT1 D PR^LEXQL2(.LEX,63)
"RTN","LEXQL",117,0)
 W !,$J(LEXI,5),".  ",$G(LEX(1)) F LEXT1=2:1:5 S LEXT2=$G(LEX(LEXT1)) W:$L(LEXT2) !,"                            ",LEXT2
"RTN","LEXQL",118,0)
 Q
"RTN","LEXQL",119,0)
MULS(LEXS,LEXI) ;       Select Multiple
"RTN","LEXQL",120,0)
 Q:+($G(LEXEXIT))>0 "^^"  N X,Y,LEXMAX,LEXLAST,DIR,DIRB,DTOUT,DUOUT,DIRUT,DIROUT,LEXTQ S LEXMAX=+($G(LEXS)),LEXLAST=+($G(LEXI)) Q:LEXMAX=0 -1
"RTN","LEXQL",121,0)
 S:+($O(^TMP("LEXQL",$J,+LEXLAST)))>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or Select 1-"_LEXMAX_":  "
"RTN","LEXQL",122,0)
 S:+($O(^TMP("LEXQL",$J,+LEXLAST)))'>0 DIR("A")=" Select 1-"_LEXMAX_":  "
"RTN","LEXQL",123,0)
 S LEXTQ="    Answer must be from 1 to "_LEXMAX_", or <Return> to continue"
"RTN","LEXQL",124,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D MULSH^LEXQL"
"RTN","LEXQL",125,0)
 S DIR(0)="NAO^1:"_LEXMAX_":0" D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1,X="^^" I X["^^"!(+($G(LEXEXIT))>0) K ^TMP("LEXQL",$J) Q "^^"
"RTN","LEXQL",126,0)
 S LEXS=+Y S:$D(DTOUT)!(X[U) LEXS=U K DIR
"RTN","LEXQL",127,0)
 Q LEXS
"RTN","LEXQL",128,0)
MULSH ;       Select Multiple Help
"RTN","LEXQL",129,0)
 I $L($G(LEXTQ)) W !,$G(LEXTQ) Q
"RTN","LEXQL",130,0)
 Q
"RTN","LEXQL",131,0)
MULQ ;       Quit Multiple
"RTN","LEXQL",132,0)
 Q:+LEXSS'>0 -1  S X=-1 S:+($G(LEXIT))'>0 X=$$X(+LEXSS)
"RTN","LEXQL",133,0)
 Q X
"RTN","LEXQL",134,0)
 ; 
"RTN","LEXQL",135,0)
 ; Miscellaneous
"RTN","LEXQL",136,0)
X(X) ;   Set X
"RTN","LEXQL",137,0)
 N LEXCT,LEXFI,LEXIEN,LEXSEL,LEXT1,LEXT2,LEXT3 S LEXSEL=+($G(X))
"RTN","LEXQL",138,0)
 S LEXT1=$G(^TMP("LEXQL",$J,+($G(LEXSEL)))),LEXT2=$G(^TMP("LEXQL",$J,+($G(LEXSEL)),2))
"RTN","LEXQL",139,0)
 S LEXT3=LEXT1 S:$L(LEXT2) LEXT3=LEXT3_" "_LEXT2 S LEXCT=$$CT(LEXT3),LEXFI=$$FI(LEXT3)
"RTN","LEXQL",140,0)
 S LEXIEN=+LEXT1 S X=$$UP^XLFSTR((LEXIEN_U_LEXFI_U_LEXCT))
"RTN","LEXQL",141,0)
 Q X
"RTN","LEXQL",142,0)
CT(X) ;   Code and Text
"RTN","LEXQL",143,0)
 S X=$G(X) N LEXIEN,LEXC,LEXN,LEXT S LEXIEN=+X Q:+LEXIEN'>0 ""  S LEXT=$P(X,U,2) Q:'$L(LEXT) ""
"RTN","LEXQL",144,0)
 I LEXT["ICD-9 Dx"!(LEXT["ICD-9 Diag") D
"RTN","LEXQL",145,0)
 . S LEXN=$$ICDDX^ICDEX(LEXIEN,$G(LEXVDT),1,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",4)
"RTN","LEXQL",146,0)
 I LEXT["ICD-9 Op"!(LEXT["ICD-9 Proc") D
"RTN","LEXQL",147,0)
 . S LEXN=$$ICDOP^ICDEX(LEXIEN,$G(LEXVDT),2,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",5)
"RTN","LEXQL",148,0)
 I LEXT["ICD-10 Dx"!(LEXT["ICD-10 Diag") D
"RTN","LEXQL",149,0)
 . S LEXN=$$ICDDX^ICDEX(LEXIEN,$G(LEXVDT),30,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",4)
"RTN","LEXQL",150,0)
 I LEXT["ICD-10 Op"!(LEXT["ICD-10 Proc") D
"RTN","LEXQL",151,0)
 . S LEXN=$$ICDOP^ICDEX(LEXIEN,$G(LEXVDT),31,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",5)
"RTN","LEXQL",152,0)
 I LEXT["CPT-4"!(LEXT["CPT P")!(LEXT["HCPCS") D
"RTN","LEXQL",153,0)
 . S LEXC=$P($G(^ICPT(+LEXIEN,0)),U,1),LEXN=$P($$CPT^ICPTCOD(LEXC,$G(LEXVDT)),U,3)
"RTN","LEXQL",154,0)
 I LEXT["CPT Mod" D
"RTN","LEXQL",155,0)
 . S LEXC=$P($G(^DIC(81.3,+LEXIEN,0)),U,1),LEXN=$P($$MOD^ICPTMOD(LEXIEN,"I",$G(LEXVDT)),U,3)
"RTN","LEXQL",156,0)
 S X="" S:$L($G(LEXC))&($L($G(LEXN))) X=LEXC_U_LEXN
"RTN","LEXQL",157,0)
 Q X
"RTN","LEXQL",158,0)
FI(X) ;   File
"RTN","LEXQL",159,0)
 S X=$G(X)
"RTN","LEXQL",160,0)
 Q:X["ICD-9 Dx"!(X["ICD-9 Diag") ($TR($$ROOT^ICDEX(80),"^","")_"^80^1")
"RTN","LEXQL",161,0)
 Q:X["ICD-9 Op"!(X["ICD-9 Proc") ($TR($$ROOT^ICDEX(80.1),"^","")_"^80.1^2")
"RTN","LEXQL",162,0)
 Q:X["ICD-10 Dx"!(X["ICD-10 Diag") ($TR($$ROOT^ICDEX(80),"^","")_"^80^30")
"RTN","LEXQL",163,0)
 Q:X["ICD-10 Op"!(X["ICD-10 Proc") ($TR($$ROOT^ICDEX(80.1),"^","")_"^80.1^31")
"RTN","LEXQL",164,0)
 Q:X["CPT-4"!(X["CPT Proc") "ICPT(^81^3"  Q:X["HCPCS" "ICPT(^81^4"
"RTN","LEXQL",165,0)
 Q:X["CPT Mod" "DIC(81.3,^81.3^"
"RTN","LEXQL",166,0)
 Q ""
"RTN","LEXQL",167,0)
SHO ;   Show TMP
"RTN","LEXQL",168,0)
 N LEXNN,LEXNC S LEXNN="^TMP(""LEXQL"","_$J_")",LEXNC="^TMP(""LEXQL"","_$J_","
"RTN","LEXQL",169,0)
 W ! F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEXQL",170,0)
 W !
"RTN","LEXQL",171,0)
 Q
"RTN","LEXQL",172,0)
 ; Miscellaneous
"RTN","LEXQL",173,0)
CL ;   Clear
"RTN","LEXQL",174,0)
 K LEXVDT,LEXEXIT
"RTN","LEXQL",175,0)
 Q
"RTN","LEXQL2")
0^17^B49164602
"RTN","LEXQL2",1,0)
LEXQL2 ;ISL/KER - Query - Lookup Code (Build List) ;04/21/2014
"RTN","LEXQL2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQL2",3,0)
 ;               
"RTN","LEXQL2",4,0)
 ; Global Variables
"RTN","LEXQL2",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQL2",6,0)
 ;    ^ICD0("BA"          ICR   4486
"RTN","LEXQL2",7,0)
 ;    ^ICD9("BA"          ICR   4485
"RTN","LEXQL2",8,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQL2",9,0)
 ;    ^ICPT("BA"          ICR   4489
"RTN","LEXQL2",10,0)
 ;    ^TMP("LEXQL")       SACC 2.3.2.5.1
"RTN","LEXQL2",11,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXQL2",12,0)
 ;    
"RTN","LEXQL2",13,0)
 ; External References
"RTN","LEXQL2",14,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXQL2",15,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQL2",16,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQL2",17,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQL2",18,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQL2",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQL2",20,0)
 ;               
"RTN","LEXQL2",21,0)
ADD(X) ; Add to List
"RTN","LEXQL2",22,0)
 N LEXIN,LEXINU,LEXO,LEXCO,LEXCT,LEXCS,LEXTO,LEXTT,LEXOC,LEXCT,LEXTY,LEXTD,LEXTMP
"RTN","LEXQL2",23,0)
 N LEXKEY,LEXLEN,LEXRT,LEXSO,LEXTKNS S LEXTD=$$DT^XLFDT,U="^"
"RTN","LEXQL2",24,0)
 S LEXIN=$G(X),LEXINU=$$UP^XLFSTR($$TM($G(LEXIN))) K LEXTKNS S LEXTTK=$$TOKN(LEXINU)
"RTN","LEXQL2",25,0)
 S LEXLEN=$O(LEXTKNS(" "),-1)
"RTN","LEXQL2",26,0)
 F LEXTMP="~","!","@","#","$","%","&","*","(",")","_","+","`","-","="," " S LEXSO=$P(LEXIN,LEXTMP,1)
"RTN","LEXQL2",27,0)
 F LEXTMP="[","]","{","}",";","'","\",":","|",",","/","?","<",">" S LEXSO=$P(LEXSO,LEXTMP,1)
"RTN","LEXQL2",28,0)
 S:+LEXLEN'>0 LEXLEN=$L(LEXSO)
"RTN","LEXQL2",29,0)
 S LEXKEY=$O(LEXTKNS(LEXLEN,""),-1) S:'$L(LEXKEY) LEXKEY=LEXSO S LEXKEY=$TR(LEXKEY,"#","") Q:'$L(LEXKEY)
"RTN","LEXQL2",30,0)
 K LEXTKNS(+LEXLEN,LEXKEY) S:+LEXTTK>0 LEXTTK=LEXTTK-1
"RTN","LEXQL2",31,0)
 S LEXTT=LEXKEY
"RTN","LEXQL2",32,0)
 S LEXTO=$E(LEXKEY,1,($L(LEXKEY)-1))_$C(($A($E(LEXKEY,$L(LEXKEY)))-1))_"~"
"RTN","LEXQL2",33,0)
 S LEXCT=$TR(LEXSO,"#","")
"RTN","LEXQL2",34,0)
 S LEXCO=$E(LEXSO,1,($L(LEXSO)-1))_$C(($A($E(LEXSO,$L(LEXSO)))-1))_"~"
"RTN","LEXQL2",35,0)
 ;   ICD-10 DX
"RTN","LEXQL2",36,0)
 S LEXRT=$$ROOT^ICDEX(80),LEXCS=30
"RTN","LEXQL2",37,0)
 I ($L(LEXTT)>2&$$OK(LEXTT,LEXRT,"AD",LEXCS))!($L(LEXCT)>2&($$OK(LEXCT,LEXRT,"ABA",LEXCS))) D
"RTN","LEXQL2",38,0)
 . S LEXTY=1 D ICD^LEXQL3($G(LEXINU),LEXCS)
"RTN","LEXQL2",39,0)
 ;   ICD-10 PR
"RTN","LEXQL2",40,0)
 S LEXRT=$$ROOT^ICDEX(80.1),LEXCS=31
"RTN","LEXQL2",41,0)
 I ($L(LEXTT)>2&$$OK(LEXTT,LEXRT,"AD",LEXCS))!($L(LEXCT)>2&($$OK(LEXCT,LEXRT,"ABA",LEXCS))) D
"RTN","LEXQL2",42,0)
 . S LEXTY=2 D ICD^LEXQL3($G(LEXINU),LEXCS)
"RTN","LEXQL2",43,0)
 ;   ICD-9 DX
"RTN","LEXQL2",44,0)
 S LEXRT=$$ROOT^ICDEX(80),LEXCS=1
"RTN","LEXQL2",45,0)
 I ($L(LEXTT)>2&$$OK(LEXTT,LEXRT,"AD",LEXCS))!($L(LEXCT)>2&($$OK(LEXCT,LEXRT,"ABA",LEXCS))) D
"RTN","LEXQL2",46,0)
 . S LEXTY=3 D ICD^LEXQL3($G(LEXINU),LEXCS)
"RTN","LEXQL2",47,0)
 ;   ICD-9 PR
"RTN","LEXQL2",48,0)
 S LEXRT=$$ROOT^ICDEX(80.1),LEXCS=2
"RTN","LEXQL2",49,0)
 I ($L(LEXTT)>2&$$OK(LEXTT,LEXRT,"AD",LEXCS))!($L(LEXCT)>2&($$OK(LEXCT,LEXRT,"ABA",LEXCS))) D
"RTN","LEXQL2",50,0)
 . S LEXTY=4 D ICD^LEXQL3($G(LEXINU),LEXCS)
"RTN","LEXQL2",51,0)
 ;   CPT/HCPCS
"RTN","LEXQL2",52,0)
 I ($L(LEXTT)>2&$$OK(LEXTT,"^ICPT(","C"))!($L(LEXCT)>2&($$OK(LEXCT,"^ICPT(","BA"))) D
"RTN","LEXQL2",53,0)
 . S LEXTY=5 D CP^LEXQL4
"RTN","LEXQL2",54,0)
 ;   CPT MOD
"RTN","LEXQL2",55,0)
 I ($L(LEXCT)>0&($$OK(LEXCT,"^DIC(81.3,","BA"))) D
"RTN","LEXQL2",56,0)
 . S LEXTY=6 D CM^LEXQL4
"RTN","LEXQL2",57,0)
 ;   Re-Order List
"RTN","LEXQL2",58,0)
 N LEXCT,LEXO,LEXT1,LEXT2,LEX S LEXO="" F  S LEXO=$O(^TMP("LEXQL",$J,"ADDLIST",LEXO)) Q:'$L(LEXO)  D
"RTN","LEXQL2",59,0)
 . K LEX N LEXT1,LEXT2 S LEXT1=$$TM($G(^TMP("LEXQL",$J,"ADDLIST",LEXO)))
"RTN","LEXQL2",60,0)
 . S LEXT2=$$TM($G(^TMP("LEXQL",$J,"ADDLIST",LEXO,2))) Q:'$L(LEXT2)
"RTN","LEXQL2",61,0)
 . I $L(LEXT2) K LEX S LEX(1)=LEXT2 D PR(.LEX,70) Q:'$L($G(LEX(1)))
"RTN","LEXQL2",62,0)
 . S LEXCT=+($G(LEXCT))+1 K ^TMP("LEXQL",$J,+LEXCT)
"RTN","LEXQL2",63,0)
 . S ^TMP("LEXQL",$J,+LEXCT)=$G(LEX(1)),^TMP("LEXQL",$J,0)=+LEXCT
"RTN","LEXQL2",64,0)
 . S:$L($G(LEX(2))) ^TMP("LEXQL",$J,+LEXCT,2)=$G(LEX(2))
"RTN","LEXQL2",65,0)
 K ^TMP("LEXQL",$J,"ADDLIST")
"RTN","LEXQL2",66,0)
 Q
"RTN","LEXQL2",67,0)
 ;    
"RTN","LEXQL2",68,0)
 ; Miscellaneous
"RTN","LEXQL2",69,0)
VSO(X) ;   Verify Input
"RTN","LEXQL2",70,0)
 N LEX,LEXIO,LEXIC,LEXUC,LEXUO S LEX=$G(X) Q:'$L(LEX) ""  Q:$L(LEX)'>1 $$UP^XLFSTR(LEX)
"RTN","LEXQL2",71,0)
 S LEXIC=$G(LEX),LEXIO=$E(LEX,1,($L(LEX)-1))_$C(($A($E(LEX,$L(LEX)))-1))_"~ "
"RTN","LEXQL2",72,0)
 S LEXUC=$$UP^XLFSTR(LEXIC),LEXUO=$$UP^XLFSTR(LEXIO)
"RTN","LEXQL2",73,0)
 ; 80 ICD-9/10
"RTN","LEXQL2",74,0)
 I $E($O(^ICD9("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL2",75,0)
 I $E($O(^ICD9("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL2",76,0)
 ; 80.1 ICD-9.10
"RTN","LEXQL2",77,0)
 I $E($O(^ICD0("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL2",78,0)
 I $E($O(^ICD0("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL2",79,0)
 ; 81 CPT
"RTN","LEXQL2",80,0)
 I $E($O(^ICPT("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL2",81,0)
 I $E($O(^ICPT("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL2",82,0)
 ; 81.3 CPT Modifier
"RTN","LEXQL2",83,0)
 I $E($O(^DIC(81.3,"BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL2",84,0)
 I $E($O(^DIC(81.3,"BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL2",85,0)
 Q LEX
"RTN","LEXQL2",86,0)
SD(X) ;   Short Date
"RTN","LEXQL2",87,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQL2",88,0)
FT(X,Y,LEX) ;   Format Text First
"RTN","LEXQL2",89,0)
 N LEXT,LEXC,LEXD,LEXS S LEXC=$G(X),LEXD=$G(Y),LEXS=$G(LEX) S LEXC=$G(LEXC) Q:'$L(LEXC) ""
"RTN","LEXQL2",90,0)
 S LEXT=$P($$STY(LEXC),U,2) Q:'$L(LEXT)  S LEXD=$G(LEXD) Q:'$L(LEXD) ""
"RTN","LEXQL2",91,0)
 S LEXS=$G(LEXS),LEXT=$G(LEXT) S:$L(LEXD)&($L(LEXS)) LEXD=LEXD_" ("_LEXS_")" N LEXO
"RTN","LEXQL2",92,0)
 S LEXO=LEXC S LEXO=LEXO_$J(" ",(9-$L(LEXO)))_$E(LEXD,1,54)
"RTN","LEXQL2",93,0)
 S LEXO=LEXO_$J(" ",(63-$L(LEXO)))_LEXT S X=LEXO
"RTN","LEXQL2",94,0)
 Q X
"RTN","LEXQL2",95,0)
FC(X,Y,LEX) ;   Format Code First
"RTN","LEXQL2",96,0)
 N LEXO,LEXT,LEXC,LEXD,LEXS S LEXC=$G(X),LEXD=$G(Y),LEXS=$G(LEX) Q:'$L(LEXC) ""
"RTN","LEXQL2",97,0)
 S LEXT=$P($$STY(LEXC),"^",2) Q:'$L(LEXT) ""  Q:'$L(LEXD) ""
"RTN","LEXQL2",98,0)
 S LEXS=$G(LEX),LEXO=LEXT_" "_LEXC_" ",LEXO=LEXO_$J(" ",(19-$L(LEXO))),LEXO=LEXO_" "_LEXD
"RTN","LEXQL2",99,0)
 S:$L(LEXS)&(LEXO'[LEXS) LEXO=$E(LEXO,1,56)_" ("_LEXS_")" S X=LEXO
"RTN","LEXQL2",100,0)
 Q X
"RTN","LEXQL2",101,0)
STY(X) ;   Short Type
"RTN","LEXQL2",102,0)
 N LEXSO S LEXSO=$G(X) Q:$L(LEXSO)'>1 ""
"RTN","LEXQL2",103,0)
 Q:$$CODEABA^ICDEX(LEXSO,80,30)>0 "1^ICD-10 Dx"
"RTN","LEXQL2",104,0)
 Q:$$CODEABA^ICDEX(LEXSO,80.1,31)>0 "2^ICD-10 Op"
"RTN","LEXQL2",105,0)
 Q:$$CODEABA^ICDEX(LEXSO,80,1)>0 "3^ICD-9 Dx"
"RTN","LEXQL2",106,0)
 Q:$$CODEABA^ICDEX(LEXSO,80.1,2)>0 "4^ICD-9 Op"
"RTN","LEXQL2",107,0)
 Q:$D(^ICPT("BA",(LEXSO_" "))) "5^CPT-4/HCPCS"
"RTN","LEXQL2",108,0)
 Q:$D(^DIC(81.3,"BA",(LEXSO_" "))) "6^CPT Mod"
"RTN","LEXQL2",109,0)
 Q ""
"RTN","LEXQL2",110,0)
LTY(X) ;   Long Type
"RTN","LEXQL2",111,0)
 N LEXSO,LEX S LEXSO=$G(X) Q:$L(LEXSO)'>1 ""
"RTN","LEXQL2",112,0)
 Q:$$CODEABA^ICDEX(LEXSO,80,30)>0 "1^ICD-10 Diagnosis Code"
"RTN","LEXQL2",113,0)
 Q:$$CODEABA^ICDEX(LEXSO,80.1,31)>0 "2^ICD-10 Procedure Code"
"RTN","LEXQL2",114,0)
 Q:$$CODEABA^ICDEX(LEXSO,80,1)>0 "3^ICD-9 Diagnosis Code"
"RTN","LEXQL2",115,0)
 Q:$$CODEABA^ICDEX(LEXSO,80.1,2)>0 "4^ICD-9 Procedure Code"
"RTN","LEXQL2",116,0)
 S LEX=$O(^ICPT("BA",(LEXSO_" "),0)) I LEX>0 D  Q:LEX["^" LEX
"RTN","LEXQL2",117,0)
 . N LEXS S LEXS=$P($G(^ICPT(+LEX,0)),"^",6)
"RTN","LEXQL2",118,0)
 . I LEXS="C" S LEX="5^CPT Procedure Code" Q
"RTN","LEXQL2",119,0)
 . I LEXS="H" S LEX="6^HCPCS Procedure Code" Q
"RTN","LEXQL2",120,0)
 . I LEXSO?5N S LEX="5^CPT Procedure Code" Q
"RTN","LEXQL2",121,0)
 . S LEX="6^HCPCS Procedure Code"
"RTN","LEXQL2",122,0)
 Q:$D(^DIC(81.3,"BA",(LEXSO_" "))) "7^CPT Modifier Code"
"RTN","LEXQL2",123,0)
 Q ""
"RTN","LEXQL2",124,0)
DS(X) ;   Trim Dubble Space Character
"RTN","LEXQL2",125,0)
 S X=$G(X) Q:X'["  " X  F  Q:X'["  "  S X=$P(X,"  ",1)_" "_$P(X,"  ",2,299)
"RTN","LEXQL2",126,0)
 Q X
"RTN","LEXQL2",127,0)
PR(LEX,X) ;   Parse Array
"RTN","LEXQL2",128,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXQL2",129,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXQL2",130,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXQL2",131,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXQL2",132,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXQL2",133,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXQL2",134,0)
 Q
"RTN","LEXQL2",135,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXQL2",136,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXQL2",137,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXQL2",138,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXQL2",139,0)
 Q X
"RTN","LEXQL2",140,0)
OK(X,Y,LEX,LEXS) ;   User Input is Ok
"RTN","LEXQL2",141,0)
 N LEXIX,LEXX,LEXO,LEXCT,LEXNX,LEXROOT
"RTN","LEXQL2",142,0)
 S (LEXCT,LEXX)=$TR($G(X),"#","") Q:$L(LEXX)'>0 0  S LEXROOT=$G(Y),LEXIX=$G(LEX),LEXS=+($G(LEXS))
"RTN","LEXQL2",143,0)
 Q:'$L(LEXROOT) 0  Q:"^D^AD^BA^ABA^C^"'[("^"_LEXIX_"^") 0
"RTN","LEXQL2",144,0)
 S LEXO=$E(LEXX,1,($L(LEXX)-1))_$C(($A($E(LEXX,$L(LEXX)))-1))_"~"
"RTN","LEXQL2",145,0)
 S:+LEXS'>0 LEXNX=$O(@(LEXROOT_""""_LEXIX_""","""_LEXO_""")"))
"RTN","LEXQL2",146,0)
 S:+LEXS>0 LEXNX=$O(@(LEXROOT_""""_LEXIX_""","_+LEXS_","""_LEXO_""")"))
"RTN","LEXQL2",147,0)
 Q:$E(LEXNX,1,$L(LEXCT))=LEXCT 1
"RTN","LEXQL2",148,0)
 Q 0
"RTN","LEXQL2",149,0)
TOKN(X) ;   Parse Tolkens
"RTN","LEXQL2",150,0)
 N LEXX,LEXBEG,LEXEND,LEXCHR,LEXTTK,LEXTKN,LEXNOT K LEXTKNS S LEXX=$G(X),LEXBEG=1,LEXTTK=0
"RTN","LEXQL2",151,0)
 S LEXNOT="^AND^THE^THEN^FOR^FROM^OTHER^THAN^WITH^THEIR^SOME^THIS^" F LEXEND=1:1:$L(LEXX)+1 D
"RTN","LEXQL2",152,0)
 . S LEXCHR=$E(LEXX,LEXEND) I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[LEXCHR D
"RTN","LEXQL2",153,0)
 . . S LEXTKN=$E(LEXX,LEXBEG,LEXEND-1),LEXBEG=LEXEND+1 I $L(LEXTKN)>2,$L(LEXTKN)<31,LEXNOT'[LEXTKN D
"RTN","LEXQL2",154,0)
 . . . S:'$D(LEXTKNS($L(LEXTKN),LEXTKN)) LEXTTK=+($G(LEXTTK))+1
"RTN","LEXQL2",155,0)
 . . . S LEXTKNS($L(LEXTKN),LEXTKN)=""
"RTN","LEXQL2",156,0)
 S X=+($G(LEXTTK))
"RTN","LEXQL2",157,0)
 Q X
"RTN","LEXQL2",158,0)
SHO ;   Show TMP
"RTN","LEXQL2",159,0)
 N LEXNN,LEXNC S LEXNN="^TMP(""LEXQL"","_$J_")",LEXNC="^TMP(""LEXQL"","_$J_","
"RTN","LEXQL2",160,0)
 W ! F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEXQL2",161,0)
 W !
"RTN","LEXQL2",162,0)
 Q
"RTN","LEXQL3")
0^18^B12608656
"RTN","LEXQL3",1,0)
LEXQL3 ;ISL/KER - Query - Lookup ICD Code ;04/21/2014
"RTN","LEXQL3",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQL3",3,0)
 ;               
"RTN","LEXQL3",4,0)
 ;               
"RTN","LEXQL3",5,0)
 ; Global Variables
"RTN","LEXQL3",6,0)
 ;    ^ICD0("BA"          ICR   4486
"RTN","LEXQL3",7,0)
 ;    ^ICD9("BA"          ICR   4485
"RTN","LEXQL3",8,0)
 ;    ^TMP(               SACC 2.3.2.5.1
"RTN","LEXQL3",9,0)
 ;    ^TMP("LEXQL")       SACC 2.3.2.5.1
"RTN","LEXQL3",10,0)
 ;               
"RTN","LEXQL3",11,0)
 ; External References
"RTN","LEXQL3",12,0)
 ;    $$FILE^ICDEX        ICR   5747
"RTN","LEXQL3",13,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQL3",14,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQL3",15,0)
 ;    $$LEXFI^ICDEX       ICR   5747
"RTN","LEXQL3",16,0)
 ;    $$LKTX^ICDEX        ICR   5747
"RTN","LEXQL3",17,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQL3",18,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQL3",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQL3",20,0)
 ;               
"RTN","LEXQL3",21,0)
ICD(X,Y) ;
"RTN","LEXQL3",22,0)
 ; 
"RTN","LEXQL3",23,0)
 ; Input
"RTN","LEXQL3",24,0)
 ; 
"RTN","LEXQL3",25,0)
 ;   X       User input, Uppercase
"RTN","LEXQL3",26,0)
 ;   Y       ICD Coding System (1, 2, 30, 31)
"RTN","LEXQL3",27,0)
 ; 
"RTN","LEXQL3",28,0)
 ; Output
"RTN","LEXQL3",29,0)
 ; 
"RTN","LEXQL3",30,0)
 ;   TMP Global Array
"RTN","LEXQL3",31,0)
 ;   
"RTN","LEXQL3",32,0)
 ;           ^TMP("LEXQL",$J,"ADDLIST",ID)=LEXIEN_U_Menu Text
"RTN","LEXQL3",33,0)
 ;
"RTN","LEXQL3",34,0)
 N LEXSUB,LEXRT,LEXFI,LEXINP,LEXVER,LEXCDT,LEXOUT,LEXPIE,LEXENT,LEXINP,LEXSYS,LEXTD
"RTN","LEXQL3",35,0)
 S LEXINP=$$VI($G(X)) Q:'$L(LEXINP)  S LEXSYS=+($G(Y)) Q:LEXSYS'?1N.N  S LEXTD=$$DT^XLFDT
"RTN","LEXQL3",36,0)
 S LEXRT=$$ROOT^ICDEX(LEXSYS),LEXFI=$$FILE^ICDEX(LEXRT)
"RTN","LEXQL3",37,0)
 I +LEXFI'>0 S LEXFI=$$FILE^ICDEX(LEXS),LEXRT=$$ROOT^ICDEX(LEXFI)
"RTN","LEXQL3",38,0)
 S LEXPIE=$S((LEXSYS=1)!(LEXSYS=30):4,(LEXSYS=2)!(LEXSYS=31):5,1:"") Q:LEXPIE'?1N
"RTN","LEXQL3",39,0)
 Q:+LEXFI'>0  Q:'$L(LEXRT)  Q:+LEXSYS'>0  S LEXSUB=$TR(LEXRT,"^(","")
"RTN","LEXQL3",40,0)
 S LEXVER=0,LEXOUT=1,LEXCDT="" Q:'$L(LEXSUB)  K:$L($G(LEXSUB)) ^TMP(LEXSUB,$J)
"RTN","LEXQL3",41,0)
 K ICDBYCD S X=$$LKTX^ICDEX(LEXINP,LEXRT,,LEXSYS,LEXVER,LEXOUT)
"RTN","LEXQL3",42,0)
 Q:+X'>0  S LEXENT=0 F  S LEXENT=$O(^TMP(LEXSUB,$J,"SEL",LEXENT)) Q:+LEXENT'>0  D
"RTN","LEXQL3",43,0)
 . N LEXITEM,LEXIEN,LEXOK,LEXT,LEXD,LEXC,LEXD,LEXN,LEXS,LEXE,LEXDS,LEXTN,LEXTS,LEXSS,LEXDT
"RTN","LEXQL3",44,0)
 . S LEXITEM=$G(^TMP(LEXSUB,$J,"SEL",LEXENT)),LEXIEN=+LEXITEM,LEXD=$G(LEXVDT) S:LEXD'?7N LEXD=$G(LEXTD)
"RTN","LEXQL3",45,0)
 . S:LEXPIE=4 LEXT=$$ICDDX^ICDEX(LEXIEN,LEXD,LEXSYS,"I") S:LEXPIE=5 LEXT=$$ICDOP^ICDEX(LEXIEN,LEXD,LEXSYS,"I")
"RTN","LEXQL3",46,0)
 . S LEXC=$P(LEXT,U,2) Q:'$L(LEXC)  S LEXN=$$UP^XLFSTR($P(LEXT,U,LEXPIE)),LEXS=$P(LEXT,U,10)
"RTN","LEXQL3",47,0)
 . Q:'$L(LEXC)  Q:'$L(LEXN)  Q:'$L(LEXS)  S:+LEXS'>0 LEXE=$P(LEXT,U,12)
"RTN","LEXQL3",48,0)
 . S:LEXPIE=4&(+LEXS>0) LEXE=$P(LEXT,U,17) S:LEXPIE=5&(+LEXS>0) LEXE=$P(LEXT,U,13)
"RTN","LEXQL3",49,0)
 . S LEXTS=$$STY^LEXQL2(LEXC),LEXTN=+LEXTS,LEXTS=$P(LEXTS,U,2) Q:'$L(LEXTS)
"RTN","LEXQL3",50,0)
 . S LEXSS="" S:+LEXS'>0&($L($G(LEXE))) LEXSS="(Inactive)" S LEXDS=LEXN S:$L(LEXSS)&(LEXDS'[LEXSS) LEXDS=LEXDS_" "_LEXSS
"RTN","LEXQL3",51,0)
 . S LEXDT=LEXC,LEXDT=LEXDT_$J(" ",(8-$L(LEXDT)))_LEXDS S:$L(LEXTS) LEXDT=LEXDT_" ("_LEXTS_")"
"RTN","LEXQL3",52,0)
 . S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_" "))=LEXIEN_U_$$FT^LEXQL2(LEXC,LEXN,$TR(LEXSS,"()",""))
"RTN","LEXQL3",53,0)
 . S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_" "),2)=LEXIEN_U_$$FC^LEXQL2(LEXC,LEXN,$TR(LEXSS,"()",""))
"RTN","LEXQL3",54,0)
 K ^TMP(LEXSUB,$J) N LEXVDT
"RTN","LEXQL3",55,0)
 Q
"RTN","LEXQL3",56,0)
VI(X) ;   Verify Input
"RTN","LEXQL3",57,0)
 N LEX,LEXIO,LEXIC,LEXUC,LEXUO S LEX=$G(X) Q:'$L(LEX) ""  Q:$L(LEX)'>1 $$UP^XLFSTR(LEX)
"RTN","LEXQL3",58,0)
 S LEXIC=$G(LEX),LEXIO=$E(LEX,1,($L(LEX)-1))_$C(($A($E(LEX,$L(LEX)))-1))_"~ "
"RTN","LEXQL3",59,0)
 S LEXUC=$$UP^XLFSTR(LEXIC),LEXUO=$$UP^XLFSTR(LEXIO)
"RTN","LEXQL3",60,0)
 ; 80 ICD-9/10
"RTN","LEXQL3",61,0)
 I $E($O(^ICD9("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL3",62,0)
 I $E($O(^ICD9("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL3",63,0)
 ; 80.1 ICD-9.10
"RTN","LEXQL3",64,0)
 I $E($O(^ICD0("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL3",65,0)
 I $E($O(^ICD0("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL3",66,0)
 Q LEX
"RTN","LEXQL4")
0^19^B39546926
"RTN","LEXQL4",1,0)
LEXQL4 ;ISL/KER - Query - Lookup Code (CPT/MOD) ;04/21/2014
"RTN","LEXQL4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXQL4",3,0)
 ;               
"RTN","LEXQL4",4,0)
 ; Global Variables
"RTN","LEXQL4",5,0)
 ;    ^DIC(81.3)          ICR   4492
"RTN","LEXQL4",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQL4",7,0)
 ;    ^ICPT("BA")         ICR   4489
"RTN","LEXQL4",8,0)
 ;    ^TMP("LEXQL")       SACC 2.3.2.5.1
"RTN","LEXQL4",9,0)
 ;               
"RTN","LEXQL4",10,0)
 ; External References
"RTN","LEXQL4",11,0)
 ;    $$CPTD^ICPTCOD      ICR   1995
"RTN","LEXQL4",12,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQL4",13,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXQL4",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQL4",15,0)
 ;               
"RTN","LEXQL4",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQL4",17,0)
 ;    LEXVDT              Version Date - default TODAY
"RTN","LEXQL4",18,0)
 ;    LEXTT               Text String
"RTN","LEXQL4",19,0)
 ;    LEXTO               $Order Text Variable
"RTN","LEXQL4",20,0)
 ;    LEXCT               Code String
"RTN","LEXQL4",21,0)
 ;    LEXCO               $Order Text Variable
"RTN","LEXQL4",22,0)
 ;    LEXTD               TODAY's Date
"RTN","LEXQL4",23,0)
 ;    LEXTKNS             Local Array of Tolkens
"RTN","LEXQL4",24,0)
 ;    LEXTTK              Total # Tolkens
"RTN","LEXQL4",25,0)
 ;               
"RTN","LEXQL4",26,0)
 Q
"RTN","LEXQL4",27,0)
CP ; $$CPT^ICPTCOD(CODE,DATE)
"RTN","LEXQL4",28,0)
 ; 
"RTN","LEXQL4",29,0)
 ;     1  IEN of code in ^ICPT         1-6
"RTN","LEXQL4",30,0)
 ;     2  CPT Code (.01)               5
"RTN","LEXQL4",31,0)
 ;     3  Versioned Short Name (#61)   1-28
"RTN","LEXQL4",32,0)
 ;     6  Effective Date (#60)         10 (external)
"RTN","LEXQL4",33,0)
 ;     7  Status (#60)                 6-8 (external)
"RTN","LEXQL4",34,0)
 ;     8  Inactivation Date (#60)      10 (external)
"RTN","LEXQL4",35,0)
 ;     9  Activation Date (#60)        10 (external)
"RTN","LEXQL4",36,0)
 ;
"RTN","LEXQL4",37,0)
 Q:'$L($G(LEXTT))  Q:'$L($G(LEXTO))  Q:'$L($G(LEXCT))  Q:'$L($G(LEXCO))
"RTN","LEXQL4",38,0)
 S LEXCT=$$VI(LEXCT)
"RTN","LEXQL4",39,0)
 S LEXCO=$E(LEXCT,1,($L(LEXCT)-1))_$C(($A($E(LEXCT,$L(LEXCT)))-1))_"~"
"RTN","LEXQL4",40,0)
 N LEXNUM D PUR N LEXIX F LEXIX="BA","C" D
"RTN","LEXQL4",41,0)
 . N LEXO,LEXOC Q:LEXIX="C"&(LEXTT?1N.NP)
"RTN","LEXQL4",42,0)
 . S LEXO=$S(LEXIX="BA":($G(LEXCO)_" "),1:$G(LEXTO)) Q:'$L(LEXO)
"RTN","LEXQL4",43,0)
 . S LEXOC=$S(LEXIX="BA":$G(LEXCT),1:$G(LEXTT)) Q:'$L(LEXOC)
"RTN","LEXQL4",44,0)
 . F  S LEXO=$O(^ICPT(LEXIX,LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXOC))'=LEXOC  D
"RTN","LEXQL4",45,0)
 . . N LEXIEN S LEXIEN=0  F  S LEXIEN=$O(^ICPT(LEXIX,LEXO,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXQL4",46,0)
 . . . N LEXOK S LEXOK=1 S:$O(LEXTKNS(0))>0&($G(LEXIX)="C") LEXOK=0
"RTN","LEXQL4",47,0)
 . . . I $G(LEXIX)="C"&($O(LEXTKNS(0))>0) D
"RTN","LEXQL4",48,0)
 . . . . N LEXN,LEXT,LEXC S (LEXC,LEXN)=0 F  S LEXN=$O(LEXTKNS(LEXN)) Q:+LEXN'>0  D
"RTN","LEXQL4",49,0)
 . . . . . S LEXT="" F  S LEXT=$O(LEXTKNS(LEXN,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXQL4",50,0)
 . . . . . . N LEXOT,LEXKT,LEXF S LEXF=0,LEXOT=$E(LEXT,1,($L(LEXT)-1))_$C(($A($E(LEXT,$L(LEXT)))-1))_"~"
"RTN","LEXQL4",51,0)
 . . . . . . F  S LEXOT=$O(^ICPT(LEXIX,LEXOT)) Q:'$L(LEXOT)  Q:$E(LEXOT,1,$L(LEXT))'=LEXT  D
"RTN","LEXQL4",52,0)
 . . . . . . . S:$D(^ICPT(LEXIX,LEXOT,LEXIEN)) LEXF=1
"RTN","LEXQL4",53,0)
 . . . . . . S:LEXF LEXC=LEXC+1
"RTN","LEXQL4",54,0)
 . . . . S:+LEXC>0&(+LEXC=+($G(LEXTTK))) LEXOK=1
"RTN","LEXQL4",55,0)
 . . . I $G(LEXIX)="C"&($O(LEXNUM(0))>0) D
"RTN","LEXQL4",56,0)
 . . . . N LEXD,LEXC,LEXF,LEXN,LEXO S LEXO=$$CPTD^ICPTCOD(+LEXIEN,"LEXD") S (LEXC,LEXF,LEXN)=0
"RTN","LEXQL4",57,0)
 . . . . F  S LEXN=$O(LEXNUM(LEXN)) Q:+LEXN'>0  D
"RTN","LEXQL4",58,0)
 . . . . . S LEXC=LEXC+1
"RTN","LEXQL4",59,0)
 . . . . . N LEXI S LEXI=0 F  S LEXI=$O(LEXD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQL4",60,0)
 . . . . . . N LEXT S LEXT=$G(LEXD(LEXI)) S:LEXT[LEXN LEXF=LEXF+1
"RTN","LEXQL4",61,0)
 . . . . I LEXC>0&(LEXC'=LEXF) S LEXOK=0
"RTN","LEXQL4",62,0)
 . . . Q:'LEXOK  N LEXT,LEXD,LEXC,LEXD,LEXN,LEXS,LEXE,LEXDS,LEXTN,LEXTS,LEXSS,LEXDT
"RTN","LEXQL4",63,0)
 . . . S LEXC=$P($G(^ICPT(+LEXIEN,0)),U,1) Q:'$L(LEXC)  S LEXD=$G(LEXVDT) S:LEXD'?7N LEXD=$G(LEXTD) S LEXT=$$CPT^ICPTCOD(LEXC,LEXD)
"RTN","LEXQL4",64,0)
 . . . S LEXC=$P(LEXT,U,2),LEXN=$$UP^XLFSTR($P(LEXT,U,3)),LEXS=$P(LEXT,U,7)
"RTN","LEXQL4",65,0)
 . . . Q:'$L(LEXC)  Q:'$L(LEXN)  Q:'$L(LEXS)
"RTN","LEXQL4",66,0)
 . . . S LEXE=$P(LEXT,U,6) I LEXE'?7N S:+LEXS'>0 LEXE=$P(LEXT,U,8) S:+LEXS>0 LEXE=$P(LEXT,U,9)
"RTN","LEXQL4",67,0)
 . . . S LEXTS=$$STY^LEXQL2(LEXC)
"RTN","LEXQL4",68,0)
 . . . S LEXTN=+LEXTS,LEXTS=$P(LEXTS,U,2) Q:'$L(LEXTS)
"RTN","LEXQL4",69,0)
 . . . S LEXSS="" S:+LEXS'>0&($L($G(LEXE))) LEXSS="Inactive" S LEXDS=LEXN S:$L(LEXSS) LEXDS=LEXDS_" "_LEXSS
"RTN","LEXQL4",70,0)
 . . . S LEXDT=LEXC,LEXDT=LEXDT_$J(" ",(8-$L(LEXDT)))_LEXDS S:$L(LEXTS) LEXDT=LEXDT_" ("_LEXTS_")"
"RTN","LEXQL4",71,0)
 . . . S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_" "))=LEXIEN_U_$$FT^LEXQL2(LEXC,LEXN,LEXSS)
"RTN","LEXQL4",72,0)
 . . . S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_" "),2)=LEXIEN_U_$$FC^LEXQL2(LEXC,LEXN,LEXSS)
"RTN","LEXQL4",73,0)
 Q
"RTN","LEXQL4",74,0)
CM ; $$MOD(CODE,FORMAT,DATE)
"RTN","LEXQL4",75,0)
 ;
"RTN","LEXQL4",76,0)
 ;     1  IEN of code in ^DIC(81.3,    1-3
"RTN","LEXQL4",77,0)
 ;     2  Modifier (.01)               2
"RTN","LEXQL4",78,0)
 ;     3  Versioned Name (61)          1-60
"RTN","LEXQL4",79,0)
 ;     6  Effective Date (60)          10 (external)
"RTN","LEXQL4",80,0)
 ;     7  Status (60)                  6-8 (external)
"RTN","LEXQL4",81,0)
 ;     8  Inactivation Date (60)       10 (external)
"RTN","LEXQL4",82,0)
 ;     9  Activation Date (60)         10 (external)
"RTN","LEXQL4",83,0)
 ;            
"RTN","LEXQL4",84,0)
 Q:'$L($G(LEXTT))  Q:'$L($G(LEXTO))  Q:'$L($G(LEXCT))  Q:'$L($G(LEXCO))
"RTN","LEXQL4",85,0)
 N LEXIX F LEXIX="BA" D
"RTN","LEXQL4",86,0)
 . N LEXO,LEXOC Q:LEXIX="C"&(LEXTT?1N.NP)
"RTN","LEXQL4",87,0)
 . S LEXO=$S(LEXIX="BA":($G(LEXCO)_" "),1:$G(LEXTO)) Q:'$L(LEXO)
"RTN","LEXQL4",88,0)
 . S LEXOC=$S(LEXIX="BA":$G(LEXCT),1:$G(LEXTT)) Q:'$L(LEXOC)
"RTN","LEXQL4",89,0)
 . F  S LEXO=$O(^DIC(81.3,LEXIX,LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXOC))'=LEXOC  D
"RTN","LEXQL4",90,0)
 . . N LEXIEN S LEXIEN=0  F  S LEXIEN=$O(^DIC(81.3,LEXIX,LEXO,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXQL4",91,0)
 . . . N LEXOK S LEXOK=1 S:$O(LEXTKNS(0))>0&($G(LEXIX)="C") LEXOK=0
"RTN","LEXQL4",92,0)
 . . . Q:'LEXOK  N LEXT,LEXD,LEXC,LEXD,LEXN,LEXS,LEXE,LEXDS,LEXTN,LEXTS,LEXSS,LEXDT
"RTN","LEXQL4",93,0)
 . . . S LEXC=$P($G(^DIC(81.3,+LEXIEN,0)),U,1) Q:'$L(LEXC)  S LEXD=$G(LEXVDT) S:LEXD'?7N LEXD=$G(LEXTD) S LEXT=$$MOD^ICPTMOD(LEXIEN,"I",LEXD)
"RTN","LEXQL4",94,0)
 . . . S LEXC=$P(LEXT,U,2),LEXN=$$UP^XLFSTR($P(LEXT,U,3)),LEXS=$P(LEXT,U,7) Q:'$L(LEXC)  Q:'$L(LEXN)  Q:'$L(LEXS)
"RTN","LEXQL4",95,0)
 . . . S LEXE=$P(LEXT,U,6) I LEXE'?7N S:+LEXS'>0 LEXE=$P(LEXT,U,8) S:+LEXS>0 LEXE=$P(LEXT,U,9)
"RTN","LEXQL4",96,0)
 . . . S LEXTS=$$STY^LEXQL2(LEXC),LEXTN=+LEXTS,LEXTS=$P(LEXTS,U,2) Q:'$L(LEXTS)  S LEXSS="" S:+LEXS'>0&($L($G(LEXE))) LEXSS="(Inactive)"
"RTN","LEXQL4",97,0)
 . . . S LEXDS=LEXN S:$L(LEXSS) LEXDS=LEXDS_" "_LEXSS S LEXDT=LEXC,LEXDT=LEXDT_$J(" ",(8-$L(LEXDT)))_LEXDS S:$L(LEXTS) LEXDT=LEXDT_" ("_LEXTS_")"
"RTN","LEXQL4",98,0)
 . . . S LEXCT=LEXCT+1 S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_LEXCT_" "))=LEXIEN_U_$$FT^LEXQL2(LEXC,LEXN,$TR(LEXSS,"()",""))
"RTN","LEXQL4",99,0)
 . . . S ^TMP("LEXQL",$J,"ADDLIST",(LEXTN_" "_LEXC_LEXCT_" "),2)=LEXIEN_U_$$FC^LEXQL2(LEXC,LEXN,$TR(LEXSS,"()",""))
"RTN","LEXQL4",100,0)
 Q
"RTN","LEXQL4",101,0)
VI(X) ;   Verify Input
"RTN","LEXQL4",102,0)
 N LEX,LEXIO,LEXIC,LEXUC,LEXUO S LEX=$G(X) Q:'$L(LEX) ""  Q:$L(LEX)'>1 $$UP^XLFSTR(LEX)
"RTN","LEXQL4",103,0)
 S LEXIC=$G(LEX),LEXIO=$E(LEX,1,($L(LEX)-1))_$C(($A($E(LEX,$L(LEX)))-1))_"~ "
"RTN","LEXQL4",104,0)
 S LEXUC=$$UP^XLFSTR(LEXIC),LEXUO=$$UP^XLFSTR(LEXIO)
"RTN","LEXQL4",105,0)
 ; 81 CPT
"RTN","LEXQL4",106,0)
 I $E($O(^ICPT("BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL4",107,0)
 I $E($O(^ICPT("BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL4",108,0)
 ; 81.3 CPT Modifier
"RTN","LEXQL4",109,0)
 I $E($O(^DIC(81.3,"BA",LEXIO)),1,$L(LEXIC))=LEXIC Q LEXIC
"RTN","LEXQL4",110,0)
 I $E($O(^DIC(81.3,"BA",LEXUO)),1,$L(LEXUC))=LEXUC Q LEXUC
"RTN","LEXQL4",111,0)
 Q LEX
"RTN","LEXQL4",112,0)
PUR ; Purge for CPT
"RTN","LEXQL4",113,0)
 N LEXL,LEXN,LEXC S (LEXC,LEXL)=0 F  S LEXL=$O(LEXTKNS(LEXL)) Q:+LEXL'>0  D
"RTN","LEXQL4",114,0)
 . S LEXN="" F  S LEXN=$O(LEXTKNS(LEXL,LEXN)) Q:'$L(LEXN)  D
"RTN","LEXQL4",115,0)
 . . S LEXOK=$$NOT(LEXN) S:LEXN?1N.N LEXNUM(LEXN)="" S:LEXOK>0 LEXC=LEXC+1
"RTN","LEXQL4",116,0)
 . . K:'LEXOK LEXTKNS(LEXL,LEXN)
"RTN","LEXQL4",117,0)
 S LEXTTK=LEXC
"RTN","LEXQL4",118,0)
 Q
"RTN","LEXQL4",119,0)
NOT(X) ; Word not to use
"RTN","LEXQL4",120,0)
 N LEXF,LEXN S LEXF=0 S:$E(X,1)?1N LEXF=1
"RTN","LEXQL4",121,0)
 S LEXN="^AND^THE^THEN^FOR^FROM^OTHER^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",122,0)
 S LEXN="^THAN^WITH^THEIR^SOME^THIS^INCLUDING^ALL^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",123,0)
 S LEXN="^OTHERWISE^SPECIFIED^ANY^NOT^ONLY^EACH^MORE^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",124,0)
 S LEXN="^ONE^TWO^LESS^PROCEDURES^WITH^OUT^TYPE^AREA^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",125,0)
 S LEXN="^EXCEPT^INVOLVING^SAME^PER^DAYS^BUT^ALA^III^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",126,0)
 S LEXN="^EXCEPT^NUMBERS^UNLESS^" S:LEXN[("^"_X_"^") LEXF=1
"RTN","LEXQL4",127,0)
 S:$E(X,1)?1N LEXF=1
"RTN","LEXQL4",128,0)
 Q:LEXF>0 0
"RTN","LEXQL4",129,0)
 Q 1
"RTN","LEXQM")
0^40^B27832926
"RTN","LEXQM",1,0)
LEXQM ;ISL/KER - Query - Miscellaneous ;04/21/2014
"RTN","LEXQM",2,0)
 ;;2.0;LEXICON UTILITY;**62,80**;Sep 23, 1996;Build 1
"RTN","LEXQM",3,0)
 ;               
"RTN","LEXQM",4,0)
 ; Global Variables
"RTN","LEXQM",5,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","LEXQM",6,0)
 ;               
"RTN","LEXQM",7,0)
 ; External References
"RTN","LEXQM",8,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXQM",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQM",10,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQM",11,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXQM",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQM",13,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXQM",14,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQM",15,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQM",16,0)
 ;               
"RTN","LEXQM",17,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQM",18,0)
 ;    LEXEXIT             Exit Flag
"RTN","LEXQM",19,0)
 ;               
"RTN","LEXQM",20,0)
AD(X) ; Assumed Date
"RTN","LEXQM",21,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,DIRB,LEXPAS,LEXNOW,LEXFUT,Y
"RTN","LEXQM",22,0)
 S LEXNOW=$$UP^XLFSTR($$FMTE^XLFDT($$DT^XLFDT)),LEXPAS=2760101,LEXFUT=$$FMADD^XLFDT($$DT^XLFDT,(365*5))
"RTN","LEXQM",23,0)
 S DIRB=$$RET^LEXQD("LEXQM","AD",+($G(DUZ)),"Assumed Date") S:'$L(DIRB) DIRB=LEXNOW S:$L($G(LEXAD)) DIRB=""
"RTN","LEXQM",24,0)
 S:$L(DIRB) DIR("B")=DIRB S DIR("A")=" Assumed Date of Service:  "
"RTN","LEXQM",25,0)
 S DIR(0)="DAO^"_LEXPAS_":"_LEXFUT_":EX",(DIR("?"),DIR("??"))="^D ADH^LEXQM"
"RTN","LEXQM",26,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","LEXQM",27,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) X="^^",LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:X["^" "^"
"RTN","LEXQM",28,0)
 S X="" S:$E(Y,1,7)?7N X=$$UP^XLFSTR($$FMTE^XLFDT($E(Y,1,7)))_"^"_$E(Y,1,7)
"RTN","LEXQM",29,0)
 D:$L($P(X,"^",1)) SAV^LEXQD("LEXQM","AD",+($G(DUZ)),"Assumed Date",$P(X,"^",1))
"RTN","LEXQM",30,0)
 Q X
"RTN","LEXQM",31,0)
ADH ;   Assumed Date Help
"RTN","LEXQM",32,0)
 W !,?5,"This is the date of a fictitious healthcare transaction.  It is the"
"RTN","LEXQM",33,0)
 W !,?5,"date that service was provided to a patient and the date that will  "
"RTN","LEXQM",34,0)
 W !,?5,"be used during the lookup of a code (ICD/CPT/CPT Modifier)."
"RTN","LEXQM",35,0)
 I $L($G(LEXFUT)),$G(LEXFUT)?7N D
"RTN","LEXQM",36,0)
 . W !!,?5,"Enter a date from  ",$$UP^XLFSTR($$FMTE^XLFDT(LEXPAS)),"  to  ",$$UP^XLFSTR($$FMTE^XLFDT(LEXFUT))," or"
"RTN","LEXQM",37,0)
 . W !,?5,"T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc.",!,?5,"T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc."
"RTN","LEXQM",38,0)
 Q
"RTN","LEXQM",39,0)
 ;            
"RTN","LEXQM",40,0)
CSD(X) ; Code Set Date
"RTN","LEXQM",41,0)
 Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIRUT,DIROUT,DTOUT,DUOUT,DIRB,LEXPAS,LEXNOW,LEXFUT,Y
"RTN","LEXQM",42,0)
 S LEXNOW=$$UP^XLFSTR($$FMTE^XLFDT($$DT^XLFDT)),LEXPAS=2760101,LEXFUT=$$FMADD^XLFDT($$DT^XLFDT,(365*2)) S:LEXFUT?7N LEXFUT=$E(LEXFUT,1,3)_"1001"
"RTN","LEXQM",43,0)
 S DIRB=$$RET^LEXQD("LEXQM","CSD",+($G(DUZ)),"Code Set Date") S:'$L(DIRB) DIRB=LEXNOW S:$L($G(LEXAD)) DIRB=""
"RTN","LEXQM",44,0)
 S:$L(DIRB) DIR("B")=DIRB S DIR("A")=" Enter Code Set Update Date:  "
"RTN","LEXQM",45,0)
 S DIR(0)="DAO^"_LEXPAS_":"_LEXFUT_":EX",(DIR("?"),DIR("??"))="^D CSDH^LEXQM",DIR("PRE")="S X=$$CSDX^LEXQM(X)"
"RTN","LEXQM",46,0)
 W ! D ^DIR S:X["^^"!($D(DTOUT)) X="^^",LEXEXIT=1 Q:X["^^"!(+($G(LEXEXIT))>0) "^^"  Q:X["^" "^"
"RTN","LEXQM",47,0)
 S X="" S:$E(Y,1,7)?7N X=$$UP^XLFSTR($$FMTE^XLFDT($E(Y,1,7)))_"^"_$E(Y,1,7)
"RTN","LEXQM",48,0)
 D:$L($P(X,"^",1)) SAV^LEXQD("LEXQM","CSD",+($G(DUZ)),"Code Set Date",$P(X,"^",1))
"RTN","LEXQM",49,0)
 Q X
"RTN","LEXQM",50,0)
CSDH ;   Code Set Date Help
"RTN","LEXQM",51,0)
 W !,?3,"This is a date to used to search for Code Set changes in the ICD and CPT"
"RTN","LEXQM",52,0)
 W !,?3,"files.  A future date may be used to search for changes in the Code Sets"
"RTN","LEXQM",53,0)
 W !,?3,"with future effective dates.  (HINT:  Most Code Set effective dates are"
"RTN","LEXQM",54,0)
 W !,?3,"quarterly, the first of January, April, July or October)"
"RTN","LEXQM",55,0)
 I $L($G(LEXFUT)),$G(LEXFUT)?7N D
"RTN","LEXQM",56,0)
 . W !!,?5,"Enter a date from  ",$$UP^XLFSTR($$FMTE^XLFDT(LEXPAS)),"  to  ",$$UP^XLFSTR($$FMTE^XLFDT(LEXFUT))," or"
"RTN","LEXQM",57,0)
 . W !,?5,"T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc."
"RTN","LEXQM",58,0)
 . W !,?5,"T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc."
"RTN","LEXQM",59,0)
 . W !,?5,"Q1 (for first quarter),  Q109 (for first quarter of FY09), etc."
"RTN","LEXQM",60,0)
 Q
"RTN","LEXQM",61,0)
CSDX(X) ;   Code Set Date Pre-Processing
"RTN","LEXQM",62,0)
 Q:$G(X)["?" "??"  N LEXN,LEXY,LEXT,LEXX,LEXQ,LEXF S LEXN=$$DT^XLFDT,LEXY=$E(LEXN,1,3),LEXT=LEXY+1700 S:+($E(LEXN,4,5))>9 LEXY=LEXY+1
"RTN","LEXQM",63,0)
 Q:X="Q2" (LEXY_"0101") Q:X="Q3" (LEXY_"0401") Q:X="Q4" (LEXY_"0701") Q:X="Q1" ((LEXY-1)_"1001")
"RTN","LEXQM",64,0)
 S LEXX="" I $E(X,1)="Q",$E(X,2,4)?3N D
"RTN","LEXQM",65,0)
 . N LEXQ,LEXF S LEXQ=$E(X,2),LEXF=$E(X,3,4) S:LEXF>70 LEXF="19"_LEXF S:LEXF'>70 LEXF="20"_LEXF S:LEXQ=1 LEXF=LEXF-1
"RTN","LEXQM",66,0)
 . S LEXQ=$S(+LEXQ=1:"1001",+LEXQ=2:"0101",+LEXQ=3:"0401",+LEXQ=4:"0701",1:"") Q:'$L(LEXQ)
"RTN","LEXQM",67,0)
 . S:LEXF?4N&(LEXF>1976)&(LEXF<(+($G(LEXT))+3))&(LEXQ?4N) LEXX=(LEXF-1700)_LEXQ
"RTN","LEXQM",68,0)
 S:$L(LEXX) X=LEXX
"RTN","LEXQM",69,0)
 Q X
"RTN","LEXQM",70,0)
 ;            
"RTN","LEXQM",71,0)
PR(LEX,X) ; Parse Array
"RTN","LEXQM",72,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXQM",73,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXQM",74,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXQM",75,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXQM",76,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXQM",77,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXQM",78,0)
 Q
"RTN","LEXQM",79,0)
 ;            
"RTN","LEXQM",80,0)
 ; Miscellaneous
"RTN","LEXQM",81,0)
AND(X) ;   Substitute 'and'
"RTN","LEXQM",82,0)
 S X=$G(X) Q:$L(X,", ")'>1 X
"RTN","LEXQM",83,0)
 S X=$P(X,", ",1,($L(X,", ")-1))_" and "_$P(X,", ",$L(X,", "))
"RTN","LEXQM",84,0)
 Q X
"RTN","LEXQM",85,0)
CS(X) ;   Trim Comma/Space
"RTN","LEXQM",86,0)
 S X=$$TM($G(X),","),X=$$TM($G(X)," "),X=$$TM($G(X),","),X=$$TM($G(X)," ")
"RTN","LEXQM",87,0)
 Q X
"RTN","LEXQM",88,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXQM",89,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXQM",90,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXQM",91,0)
 Q X
"RTN","LEXQM",92,0)
SD(X) ;   Short Date
"RTN","LEXQM",93,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQM",94,0)
ED(X) ;   External Date
"RTN","LEXQM",95,0)
 Q:+($G(X))'>0 "--/--/----"
"RTN","LEXQM",96,0)
 Q $TR($$FMTE^XLFDT(+($G(X)),"5DZ"),"@"," ")
"RTN","LEXQM",97,0)
ES(X) ;   External Status
"RTN","LEXQM",98,0)
 Q $S(+($G(X))="1":"Active",$G(X)="0":"Inactive",1:"")
"RTN","LEXQM",99,0)
CLR ;   Clear
"RTN","LEXQM",100,0)
 N LEXAD,LEXEXIT
"RTN","LEXQM",101,0)
 Q
"RTN","LEXQM",102,0)
EV(X) ;   Check environment
"RTN","LEXQM",103,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEXQM",104,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEXQM",105,0)
 Q 1
"RTN","LEXRX")
0^190^B29831306
"RTN","LEXRX",1,0)
LEXRX ;ISL/KER - Re-Index Lexicon ;04/21/2014
"RTN","LEXRX",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRX",3,0)
 ;               
"RTN","LEXRX",4,0)
 ; Global Variables
"RTN","LEXRX",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRX",6,0)
 ;    ^LEXT(              SACC 1.3
"RTN","LEXRX",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRX",8,0)
 ;    ^XTMP("LEXRXALL")   SACC 2.3.2.5.2
"RTN","LEXRX",9,0)
 ;    ^XTMP("LEXRXFIX")   SACC 2.3.2.5.2
"RTN","LEXRX",10,0)
 ;    ^XTMP("LEXRXMAJ")   SACC 2.3.2.5.2
"RTN","LEXRX",11,0)
 ;    ^XTMP("LEXRXONE")   SACC 2.3.2.5.2
"RTN","LEXRX",12,0)
 ;    ^XTMP("LEXRXSET")   SACC 2.3.2.5.2
"RTN","LEXRX",13,0)
 ;    ^XTMP("LEXRXSUP")   SACC 2.3.2.5.2
"RTN","LEXRX",14,0)
 ;               
"RTN","LEXRX",15,0)
 ; External References
"RTN","LEXRX",16,0)
 ;    ^DIC                ICR  10006
"RTN","LEXRX",17,0)
 ;    ^DIR                ICR  10026
"RTN","LEXRX",18,0)
 ;               
"RTN","LEXRX",19,0)
 ;               
"RTN","LEXRX",20,0)
 ; Global Variables
"RTN","LEXRX",21,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRX",22,0)
 ;    ^LEXT(              SACC 1.3
"RTN","LEXRX",23,0)
 ;               
"RTN","LEXRX",24,0)
 ; External References
"RTN","LEXRX",25,0)
 ;    ^DIC                ICR  10006
"RTN","LEXRX",26,0)
 ;    ^DIR                ICR  10026
"RTN","LEXRX",27,0)
 ;               
"RTN","LEXRX",28,0)
 ; Callable Entry Points in this Routine
"RTN","LEXRX",29,0)
 ;               
"RTN","LEXRX",30,0)
 ;   EN^LEXRX     Task the Repair/Re-Index of one or more Files
"RTN","LEXRX",31,0)
 ;   CHECK^LEXRX  Check if a Repair/Re-Index Task is Running
"RTN","LEXRX",32,0)
 ;   MON^LEXRX    Monitor Progress of a Running Task
"RTN","LEXRX",33,0)
 ;               
"RTN","LEXRX",34,0)
EN ; Main Entry Point
"RTN","LEXRX",35,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEX,LEXAC,LEXAMSO,LEXENV
"RTN","LEXRX",36,0)
 N LEXFI,LEXFN,LEXMON,LEXOK,LEXRUN,LEXSTA,LEXT,LEXTY,X,Y
"RTN","LEXRX",37,0)
 K LEXMON S LEXENV=$$ENV^LEXRXXM Q:'LEXENV
"RTN","LEXRX",38,0)
 W !," Repair/Re-Index Lexicon cross-references"
"RTN","LEXRX",39,0)
 S LEXRUN=$$CHECK^LEXRXXM2 I +LEXRUN>0 D  Q
"RTN","LEXRX",40,0)
 . W "     Try again later",!
"RTN","LEXRX",41,0)
 N LEXAMSO,LEXFI,LEXOK S LEXOK=0,LEXAMSO=$$AMSO^LEXRXXA
"RTN","LEXRX",42,0)
 I "^A^M^S^O^"'[("^"_LEXAMSO_"^") D  Q
"RTN","LEXRX",43,0)
 . W !!,?3,"Lexicon index Repair/Re-Index method not selected, aborting"
"RTN","LEXRX",44,0)
 D:"^A^"[("^"_LEXAMSO_"^") ALL D:"^M^"[("^"_LEXAMSO_"^") MAJ
"RTN","LEXRX",45,0)
 D:"^S^"[("^"_LEXAMSO_"^") SUP  D:"^O^"[("^"_LEXAMSO_"^") ONE
"RTN","LEXRX",46,0)
 Q
"RTN","LEXRX",47,0)
 ;               
"RTN","LEXRX",48,0)
ALL ;   All Files
"RTN","LEXRX",49,0)
 N LEXOK,LEXTY,LEXAMSO K LEXFI S LEXOK=0,LEXAMSO="A"
"RTN","LEXRX",50,0)
 W !!," ",$$BOLD^LEXRXXM,"Repair/Re-Index the Cross-References for all Lexicon Files",$$NORM^LEXRXXM,!
"RTN","LEXRX",51,0)
 W !,"   The cross-references for the larger files will be repaired and the "
"RTN","LEXRX",52,0)
 W !,"   smaller files will be re-indexed.",!
"RTN","LEXRX",53,0)
 W !,"   Users may be on the system since the cross-references of the larger"
"RTN","LEXRX",54,0)
 W !,"   files are not deleted and the re-indexing of the smaller files does"
"RTN","LEXRX",55,0)
 W !,"   not involve the Lexicon look-up."
"RTN","LEXRX",56,0)
 S LEXTY=3 S LEXOK=$$CO^LEXRXXA W ! I +LEXOK>0 K LEXFI D ALL^LEXRXXT
"RTN","LEXRX",57,0)
 Q
"RTN","LEXRX",58,0)
MAJ ;   Major Files
"RTN","LEXRX",59,0)
 N LEXOK,LEXTY,LEXAMSO K LEXFI S LEXOK=0,LEXAMSO="M"
"RTN","LEXRX",60,0)
 W !!," ",$$BOLD^LEXRXXM,"Repair the Cross-References for the Major Lexicon Files",$$NORM^LEXRXXM,!
"RTN","LEXRX",61,0)
 W !,"   The cross-references of the larger files will be repaired by "
"RTN","LEXRX",62,0)
 W !,"   verifying the individual subscripts in the cross-reference.  Only"
"RTN","LEXRX",63,0)
 W !,"   the entries that fail verification will be deleted.",!
"RTN","LEXRX",64,0)
 W !,"   Users may be on the system since the cross-references are not"
"RTN","LEXRX",65,0)
 W !,"   deleted."
"RTN","LEXRX",66,0)
 S LEXTY=1 S LEXOK=$$CO^LEXRXXA W ! I +LEXOK>0 K LEXFI D MAJ^LEXRXXT
"RTN","LEXRX",67,0)
 Q
"RTN","LEXRX",68,0)
SUP ;   Supporting Files
"RTN","LEXRX",69,0)
 N LEXOK,LEXTY,LEXAMSO K LEXFI S LEXOK=0,LEXAMSO="S"
"RTN","LEXRX",70,0)
 W !!," ",$$BOLD^LEXRXXM,"Re-Index the Cross-References for the Supporting Lexicon Files",$$NORM^LEXRXXM,!
"RTN","LEXRX",71,0)
 W !,"   The cross-references for the smaller files will be re-indexed.",!
"RTN","LEXRX",72,0)
 W !,"   Users may be on the system since the cross-references of the smaller"
"RTN","LEXRX",73,0)
 W !,"   files are not involve the Lexicon look-up."
"RTN","LEXRX",74,0)
 S LEXTY=3 S LEXOK=$$CO^LEXRXXA W ! I +LEXOK>0 K LEXFI D SUP^LEXRXXT
"RTN","LEXRX",75,0)
 Q
"RTN","LEXRX",76,0)
ONE ;   One File
"RTN","LEXRX",77,0)
 N LEXOK,LEXFI,LEXFN,LEXT,LEXTY,LEXAMSO S LEXAMSO="O",LEXFI=$$FI^LEXRXXA I '$L(LEXFI)!(LEXFI["^") W !!,"   Lexicon file not selected, aborting" Q
"RTN","LEXRX",78,0)
 I +($$FV^LEXRXXM(($G(LEXFI))))'>0 W !!,"   Invalid file selected, aborting" Q
"RTN","LEXRX",79,0)
 S LEXOK=0,LEXFN=$$FN^LEXRXXM(LEXFI) Q:'$L(LEXFN)
"RTN","LEXRX",80,0)
 S LEXT=LEXFI,LEXT=LEXT_$J(" ",(8-$L(LEXT)))_LEXFN S LEXT=LEXFI_" ("_LEXFN_")" W !
"RTN","LEXRX",81,0)
 I "^757^757.001^757.01^757.02^757.1^757.21^"[("^"_LEXFI_"^") D
"RTN","LEXRX",82,0)
 . S LEXTY=1 W !," ",$$BOLD^LEXRXXM,"Repair Cross-References for file ",LEXT,$$NORM^LEXRXXM,! D
"RTN","LEXRX",83,0)
 . . W !,"   The cross-references of file "_+LEXFI_" will be repaired by verifying"
"RTN","LEXRX",84,0)
 . . W !,"   the individual subscripts in the cross-reference.  Only the entries"
"RTN","LEXRX",85,0)
 . . W !,"   that fail verification will be deleted.  Users may be on the system"
"RTN","LEXRX",86,0)
 . . W !,"   since the cross-references are not deleted."
"RTN","LEXRX",87,0)
 I "^757^757.001^757.01^757.02^757.1^757.21^"'[("^"_LEXFI_"^") D
"RTN","LEXRX",88,0)
 . S LEXTY=2 W !," ",$$BOLD^LEXRXXM,"Re-Index Cross-References for file ",LEXT,$$NORM^LEXRXXM,! D
"RTN","LEXRX",89,0)
 . . W !,"   The cross-references of file "_+LEXFI_" will be re-indexed.  Users may"
"RTN","LEXRX",90,0)
 . . W !,"   be on the system since this file is not involved in the Lexicon "
"RTN","LEXRX",91,0)
 . . W !,"   look-up."
"RTN","LEXRX",92,0)
 S LEXOK=$$CO^LEXRXXA W ! I +LEXOK>0,$L($G(LEXFI)) D ONE^LEXRXXT
"RTN","LEXRX",93,0)
 Q
"RTN","LEXRX",94,0)
 ;
"RTN","LEXRX",95,0)
CHECK ; Check if a Repair/Re-Index Task is Running
"RTN","LEXRX",96,0)
 N LEXSTA K LEXMON S LEXSTA=$$CHECK^LEXRXXM2
"RTN","LEXRX",97,0)
 I +($G(LEXSTA))'>0 W !!,"   Lexicon cross-reference repair is not running",!
"RTN","LEXRX",98,0)
 Q
"RTN","LEXRX",99,0)
 ;
"RTN","LEXRX",100,0)
MON ; Monitor Progress of a Running Task
"RTN","LEXRX",101,0)
 N LEXMON S LEXMON="" D MON^LEXRXXM2
"RTN","LEXRX",102,0)
 Q
"RTN","LEXRX",103,0)
 ;              
"RTN","LEXRX",104,0)
 ; Miscellaneous
"RTN","LEXRX",105,0)
FORCE ;   Forced Repair/Re-Index
"RTN","LEXRX",106,0)
 K ^TMP("LEXRX",$J),^XTMP("LEXRXALL"),^XTMP("LEXRXMAJ"),^XTMP("LEXRXSUP"),^XTMP("LEXRXONE"),^XTMP("LEXRXSET"),^XTMP("LEXRXFIX")
"RTN","LEXRX",107,0)
 D CLR,EN
"RTN","LEXRX",108,0)
 Q
"RTN","LEXRX",109,0)
CLR ;   Clear
"RTN","LEXRX",110,0)
 N LEXID K LEXFIX,LEXSET,LEXTEST
"RTN","LEXRX",111,0)
 Q
"RTN","LEXRXB")
0^191^B53080223
"RTN","LEXRXB",1,0)
LEXRXB ;ISL/KER - Re-Index 757.001 B/AF ;04/21/2014
"RTN","LEXRXB",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXB",3,0)
 ;               
"RTN","LEXRXB",4,0)
 ; Global Variables
"RTN","LEXRXB",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXB",6,0)
 ;    ^LEX(757.001)       SACC 1.3
"RTN","LEXRXB",7,0)
 ;    ^LEX(757.02)        SACC 1.3
"RTN","LEXRXB",8,0)
 ;    ^LEX(757.1)         SACC 1.3
"RTN","LEXRXB",9,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXB",10,0)
 ;               
"RTN","LEXRXB",11,0)
 ; External References
"RTN","LEXRXB",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXB",13,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXB",14,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXB",15,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXB",16,0)
 ;    IX2^DIK             ICR  10013
"RTN","LEXRXB",17,0)
 ;               
"RTN","LEXRXB",18,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXB",19,0)
 ;     LEXFIX     Fix Flag        NEWed/KILLed by LEXRXXT
"RTN","LEXRXB",20,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXB",21,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXB",22,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXB",23,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXB",24,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXB",25,0)
 ;               
"RTN","LEXRXB",26,0)
 Q
"RTN","LEXRXB",27,0)
EN ; Main Entry Point
"RTN","LEXRXB",28,0)
R757001 ; Repair file 757.001
"RTN","LEXRXB",29,0)
 D RB,RAF,SET Q
"RTN","LEXRXB",30,0)
RB ;   Index    ^LEX(757.001,"B",MC,IEN) 
"RTN","LEXRXB",31,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR,X
"RTN","LEXRXB",32,0)
 S LEXFI="757.001"
"RTN","LEXRXB",33,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.001 ""B""") Q:LEXTC=1
"RTN","LEXRXB",34,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXIDX="B",LEXIDXT="^LEX(757.001,""B"",MC,IEN)"
"RTN","LEXRXB",35,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXB",36,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXB",37,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXB",38,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXB",39,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXB",40,0)
 . . Q:+LEXSTR>0&(LEXSTR=LEXIEN)  N LEXOK,LEXMC S LEXMC=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXB",41,0)
 . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXB",42,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXMC) ^LEX(LEXFI,LEXIDX,LEXMC,LEXIEN)=""
"RTN","LEXRXB",43,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXB",44,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXB",45,0)
 . N DA,DIK,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXB",46,0)
 . I '$D(^LEX(LEXFI,"B",X,DA)) D
"RTN","LEXRXB",47,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXB",48,0)
 . S:$L(X) ^LEX(LEXFI,"B",X,DA)=""
"RTN","LEXRXB",49,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXB",50,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXB",51,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXB",52,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXB",53,0)
 Q
"RTN","LEXRXB",54,0)
RAF ;   Index    ^LEX(757.001,"AF",FREQ,IEN)
"RTN","LEXRXB",55,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXAF,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXFQ,LEXIEN,LEXNDS,LEXOF,LEXOK,LEXSTR,X
"RTN","LEXRXB",56,0)
 S LEXFI="757.001"
"RTN","LEXRXB",57,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.001 ""AF""") Q:LEXTC=1
"RTN","LEXRXB",58,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXIDX="AF",LEXIDXT="^LEX(757.001,""AF"",FREQ,IEN)"
"RTN","LEXRXB",59,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXB",60,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXB",61,0)
 . . S LEXNDS=LEXNDS+1
"RTN","LEXRXB",62,0)
 . . I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXB",63,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXB",64,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXB",65,0)
 . . N LEXOK,LEXFQ,LEXOF,LEXAF,LEXF S LEXFQ=+($P($G(^LEX(LEXFI,LEXIEN,0)),"^",3))
"RTN","LEXRXB",66,0)
 . . S LEXOF=+($P($G(^LEX(LEXFI,LEXIEN,0)),"^",2)) I LEXOF>LEXFQ D
"RTN","LEXRXB",67,0)
 . . . S LEXF=$$FREQ^LEXRXXM(LEXIEN) S:LEXF'>LEXFQ $P(^LEX(LEXFI,LEXIEN,0),"^",2)=LEXF,LEXOF=LEXF
"RTN","LEXRXB",68,0)
 . . . S:LEXF>LEXFQ $P(^LEX(LEXFI,LEXIEN,0),"^",2)=LEXF,$P(^LEX(LEXFI,LEXIEN,0),"^",3)=LEXF,(LEXOF,LEXFQ)=LEXF
"RTN","LEXRXB",69,0)
 . . S LEXAF=LEXFQ-LEXOF S:LEXAF>0 LEXAF=LEXAF*(-1)
"RTN","LEXRXB",70,0)
 . . S LEXOK=0 S:LEXAF=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXB",71,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXAF) ^LEX(LEXFI,LEXIDX,LEXAF,LEXIEN)=""
"RTN","LEXRXB",72,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXB",73,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXB",74,0)
 . N DA,DIK,X,LEXF S DA=LEXIEN,X=+($P($G(^LEX(LEXFI,DA,0)),"^",3)),LEXF=-(X-(+($P(^LEX(LEXFI,DA,0),"^",2))))
"RTN","LEXRXB",75,0)
 . I '$D(^LEX(LEXFI,"AF",LEXF,DA)) D
"RTN","LEXRXB",76,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXB",77,0)
 . S:$L(LEXF) ^LEX(LEXFI,"AF",LEXF,DA)=""
"RTN","LEXRXB",78,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXB",79,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXB",80,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXB",81,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXB",82,0)
 Q
"RTN","LEXRXB",83,0)
 ;              
"RTN","LEXRXB",84,0)
 ; Miscellaneous
"RTN","LEXRXB",85,0)
SET ;   Re-Index Concept Usage file 757.001 (Set logic only)
"RTN","LEXRXB",86,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXB",87,0)
 N LEXOUT,LEXMSG S LEXFI=757.001
"RTN","LEXRXB",88,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXB",89,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXB",90,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXB",91,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXB",92,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXB",93,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXB",94,0)
 N LEXIEN,LEXP3,LEXP4 S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXB",95,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXB",96,0)
 . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXB",97,0)
 . N DA,DIK,LEXCFQ,LEXCMC,LEXCND,LEXCOV,LEXNFQ,LEXNND,LEXNOV
"RTN","LEXRXB",98,0)
 . S LEXCND=$G(^LEX(LEXFI,LEXIEN,0)),LEXCMC=+LEXCND,LEXCOV=$P(LEXCND,"^",2)
"RTN","LEXRXB",99,0)
 . S (LEXCFQ,LEXNFQ)=$P(LEXCND,"^",3),LEXNOV=$$FREQ(LEXIEN)
"RTN","LEXRXB",100,0)
 . S:LEXNOV>LEXNFQ LEXNFQ=LEXNOV S:LEXNOV'=LEXCOV LEXNFQ=LEXNOV
"RTN","LEXRXB",101,0)
 . I $D(LEXFIX) D  Q
"RTN","LEXRXB",102,0)
 . . Q:LEXCOV=LEXNOV&(LEXCFQ=LEXNFQ)
"RTN","LEXRXB",103,0)
 . . S DA=+($G(LEXIEN)),DIK=LEXRT D IX2^DIK
"RTN","LEXRXB",104,0)
 . . S ^LEX(LEXFI,LEXIEN,0)=LEXCMC_"^"_LEXNOV_"^"_LEXNFQ
"RTN","LEXRXB",105,0)
 . . D IX1^DIK
"RTN","LEXRXB",106,0)
 . S DA=+($G(LEXIEN)),DIK=LEXRT D IX1^DIK
"RTN","LEXRXB",107,0)
 S $P(^LEX(LEXFI,0),"^",3)=LEXP3,$P(^LEX(LEXFI,0),"^",4)=LEXP4
"RTN","LEXRXB",108,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXB",109,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXB",110,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXB",111,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXB",112,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXB",113,0)
 Q
"RTN","LEXRXB",114,0)
FREQ(X) ;   Get frequency based on codes and semantics
"RTN","LEXRXB",115,0)
 N LEXMC,LEXMCE,LEXND,LEXOF,LEXNF S LEXMC=+($G(X)),X=0 Q:'$D(^LEX(757,LEXMC,0)) X
"RTN","LEXRXB",116,0)
 S LEXMCE=$P($G(^LEX(757,+LEXMC,0)),"^",1)
"RTN","LEXRXB",117,0)
 S LEXOF=$P($G(^LEX(757.001,LEXMC,0)),"^",2)
"RTN","LEXRXB",118,0)
 N LEXSA,LEXSAB,LEXACT,LEXSMC,LEXNUR,LEXBEH,LEXI10,LEXPRO,LEXDIA
"RTN","LEXRXB",119,0)
 S (LEXSA,LEXNUR,LEXBEH,LEXPRO,LEXDIA,LEXI10,LEXSMC)=0 D SO,SM S X=0
"RTN","LEXRXB",120,0)
 S LEXNF="",X=0
"RTN","LEXRXB",121,0)
 ;     ICD-10-CM                       6
"RTN","LEXRXB",122,0)
 S:+LEXI10=1&(+LEXDIA=1) (LEXNF,X)=6 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",123,0)
 ;     ICD-10-PCS                      5
"RTN","LEXRXB",124,0)
 S:+LEXI10=1&(+LEXDIA'=1) (LEXNF,X)=5 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",125,0)
 ;     ICD-9 coded Diagnosis           4
"RTN","LEXRXB",126,0)
 S:LEXI10=0&(+LEXDIA=1)&(X=0) (LEXNF,X)=4 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",127,0)
 ;     Behavior or non-ICD Diagnosis   3
"RTN","LEXRXB",128,0)
 S:'$L(LEXNF)&(+($G(LEXBEH))=1)&($G(LEXSMC)>0) (LEXNF,X)=3 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",129,0)
 ;     Procedures                      2
"RTN","LEXRXB",130,0)
 S:'$L(LEXNF)&(+($G(LEXPRO))=1) (LEXNF,X)=2 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",131,0)
 ;     Nursing                         1
"RTN","LEXRXB",132,0)
 S:'$L(LEXNF)&(+($G(LEXNUR))=1) (LEXNF,X)=1 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",133,0)
 ;     Diseases                        3
"RTN","LEXRXB",134,0)
 S:'$L(LEXNF)&(+($G(LEXSMC))>1) (LEXNF,X)=3 Q:$L(LEXNF)&(LEXNF'=LEXOF)&(X>0) X
"RTN","LEXRXB",135,0)
 ;     Non-Critical                    0
"RTN","LEXRXB",136,0)
 S:'$L(LEXNF) (LEXNF,X)=0
"RTN","LEXRXB",137,0)
 Q X
"RTN","LEXRXB",138,0)
SO ;   Codes
"RTN","LEXRXB",139,0)
 N LEXSA S LEXSA=0 F  S LEXSA=$O(^LEX(757.02,"AMC",LEXMC,LEXSA)) Q:+LEXSA=0  D SOC
"RTN","LEXRXB",140,0)
 Q
"RTN","LEXRXB",141,0)
SOC ;     Code Type
"RTN","LEXRXB",142,0)
 N LEXCOD,LEXEFF,LEXHIS,LEXND,LEXSAB
"RTN","LEXRXB",143,0)
 S LEXEFF=$O(^LEX(757.02,LEXSA,4,"B"," "),-1) Q:LEXEFF'?7N
"RTN","LEXRXB",144,0)
 S LEXHIS=$O(^LEX(757.02,LEXSA,4,"B",LEXEFF," "),-1) Q:+LEXHIS'>0
"RTN","LEXRXB",145,0)
 S LEXND=$G(^LEX(757.02,LEXSA,4,+LEXHIS,0)) Q:+($P(LEXND,"^",2))'>0
"RTN","LEXRXB",146,0)
 S LEXND=$G(^LEX(757.02,LEXSA,0)),LEXSAB=+($P(LEXND,U,3)),LEXCOD=$P(LEXND,U,2)
"RTN","LEXRXB",147,0)
 Q:LEXSAB=0
"RTN","LEXRXB",148,0)
 ;       ICD-10       CM/PCS
"RTN","LEXRXB",149,0)
 S:LEXSAB=30!(LEXSAB=31) LEXI10=1_"^"_LEXCOD
"RTN","LEXRXB",150,0)
 ;       Diagnosis    ICD-9 and ICD-10
"RTN","LEXRXB",151,0)
 S:LEXSAB=1!(LEXSAB=30) LEXDIA=1_"^"_LEXCOD
"RTN","LEXRXB",152,0)
 ;       Procedures   ICD-9, ICD-10, CPT and HCPCS
"RTN","LEXRXB",153,0)
 S:LEXSAB=2!(LEXSAB=31)!(LEXSAB=3)!(LEXSAB=4) LEXPRO=1_"^"_LEXCOD
"RTN","LEXRXB",154,0)
 ;       Behaviors    DSM-III and DSM-IV
"RTN","LEXRXB",155,0)
 S:LEXSAB=5!(LEXSAB=6) LEXBEH=1_"^"_LEXCOD
"RTN","LEXRXB",156,0)
 ;       Nursing      NANDA, NIC, NOC, HHC and Omaha
"RTN","LEXRXB",157,0)
 S:LEXSAB>10&(LEXSAB<16) LEXNUR=1_"^"_LEXCOD
"RTN","LEXRXB",158,0)
 Q
"RTN","LEXRXB",159,0)
SM ;   Semantics - BEH Behavior and DIS Disorders
"RTN","LEXRXB",160,0)
 N LEXBD,LEXCLA,LEXSM S LEXSMC=0,LEXMC=+($G(LEXMC)) Q:'$D(^LEX(757,LEXMC,0))
"RTN","LEXRXB",161,0)
 S (LEXBD,LEXSM)=0 F  S LEXSM=$O(^LEX(757.1,"B",LEXMC,LEXSM)) Q:+LEXSM=0  D SMC
"RTN","LEXRXB",162,0)
 S LEXSMC=LEXBD
"RTN","LEXRXB",163,0)
 Q
"RTN","LEXRXB",164,0)
SMC ;     Semantic Class
"RTN","LEXRXB",165,0)
 S LEXCLA=+($P($G(^LEX(757.1,LEXSM,0)),U,2))
"RTN","LEXRXB",166,0)
 ;       Behavior
"RTN","LEXRXB",167,0)
 S:LEXCLA=3&(LEXBD'>0) LEXBD=1
"RTN","LEXRXB",168,0)
 ;       Disease
"RTN","LEXRXB",169,0)
 S:LEXCLA=6 LEXBD=2
"RTN","LEXRXB",170,0)
 Q
"RTN","LEXRXB",171,0)
CLR ;   Clear
"RTN","LEXRXB",172,0)
 K LEXFIX,LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXB",173,0)
 Q
"RTN","LEXRXC")
0^192^B105521717
"RTN","LEXRXC",1,0)
LEXRXC ;ISL/KER - Re-Index 757.01 B/ADC/ADTERM ;04/21/2014
"RTN","LEXRXC",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXC",3,0)
 ;               
"RTN","LEXRXC",4,0)
 ; Global Variables
"RTN","LEXRXC",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXC",6,0)
 ;    ^LEX(757.01)        SACC 1.3
"RTN","LEXRXC",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXC",8,0)
 ;               
"RTN","LEXRXC",9,0)
 ; External References
"RTN","LEXRXC",10,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXC",11,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXC",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXC",13,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXC",14,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXC",15,0)
 ;               
"RTN","LEXRXC",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXC",17,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXC",18,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXC",19,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXC",20,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXC",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXC",22,0)
 ;     
"RTN","LEXRXC",23,0)
 Q
"RTN","LEXRXC",24,0)
 ; NOTES:
"RTN","LEXRXC",25,0)
 ;               
"RTN","LEXRXC",26,0)
 ;   The Major Concept Map file #757 is used to re-index
"RTN","LEXRXC",27,0)
 ;   the Expression file #757.01. hence file #757 must be 
"RTN","LEXRXC",28,0)
 ;   repaired/re-indexed before file 757.01.
"RTN","LEXRXC",29,0)
 ;                 
"RTN","LEXRXC",30,0)
EN ; Main Entry Point
"RTN","LEXRXC",31,0)
R75701 ; Repair file 757.01
"RTN","LEXRXC",32,0)
 D MC,RB,RADC,RADTERM,R75701^LEXRXC2,R75701^LEXRXC3,SET Q
"RTN","LEXRXC",33,0)
RB ;   Index    ^LEX(757.01,"B",TXT,IEN) 
"RTN","LEXRXC",34,0)
 ;            ^LEX(757.01,IEN,4,"B",NEG,IEN2)
"RTN","LEXRXC",35,0)
 ;            ^LEX(757.01,IEN,5,"B",WORD,IEN2)
"RTN","LEXRXC",36,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXEXP,LEXFI,LEXIDX,LEXIDXT,LEXIDNT,LEXIDST,LEXIEN,LEXMC,LEXNDS,LEXNDSN,LEXNDSS,LEXNER,LEXOK,LEXS,LEXSER,LEXSTR
"RTN","LEXRXC",37,0)
 S LEXFI="757.01"
"RTN","LEXRXC",38,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""B""") Q:LEXTC=1
"RTN","LEXRXC",39,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXNDSN,LEXNDSS,LEXERR,LEXSER,LEXNER)=0,LEXSTR="",LEXFI="757.01",LEXIDX="B"
"RTN","LEXRXC",40,0)
 S LEXIDXT="^LEX(757.01,""B"",TXT,IEN)",LEXIDNT="^LEX(757.01,IEN,4,""B"",NEG,IEN2)",LEXIDST="^LEX(757.01,IEN,5,""B"",WORD,IEN2)"
"RTN","LEXRXC",41,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",42,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",43,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",44,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",45,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",46,0)
 . . N LEXOK,LEXEXP S LEXEXP=$$UP^XLFSTR($G(^LEX(LEXFI,LEXIEN,0)))
"RTN","LEXRXC",47,0)
 . . S LEXOK=0 S:$E(LEXEXP,1,63)=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",48,0)
 . . . S LEXERR=LEXERR+1
"RTN","LEXRXC",49,0)
 . . . K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXEXP) ^LEX(LEXFI,LEXIDX,$E(LEXEXP,1,63),LEXIEN)=""
"RTN","LEXRXC",50,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN
"RTN","LEXRXC",51,0)
 . . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXC",52,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",53,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",54,0)
 . . . . . S LEXNDSN=LEXNDSN+1 N LEXOK,LEXMC S LEXMC=$G(^LEX(LEXFI,LEXIEN,4,LEXS,0))
"RTN","LEXRXC",55,0)
 . . . . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",56,0)
 . . . . . . S LEXNER=LEXNER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)
"RTN","LEXRXC",57,0)
 . . . . . . S:$L(LEXMC) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXMC,LEXS)=""
"RTN","LEXRXC",58,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXC",59,0)
 . . . S LEXSTR=0 F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXSTR)) Q:+LEXSTR'>0  D
"RTN","LEXRXC",60,0)
 . . . . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,4,LEXSTR,0)),"^",1),DA(1)=LEXIEN,DA=LEXSTR
"RTN","LEXRXC",61,0)
 . . . . I $L(X) I '$D(^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)) D  Q
"RTN","LEXRXC",62,0)
 . . . . . S LEXNER=LEXNER+1,^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)=""
"RTN","LEXRXC",63,0)
 . . . . . I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",64,0)
 . . I $D(^LEX(LEXFI,LEXIEN,5)) D
"RTN","LEXRXC",65,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",66,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",67,0)
 . . . . . S LEXNDSS=LEXNDSS+1 N LEXOK,LEXMC S LEXMC=$G(^LEX(LEXFI,LEXIEN,5,LEXS,0))
"RTN","LEXRXC",68,0)
 . . . . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",69,0)
 . . . . . . S LEXSER=LEXSER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR,LEXS) S:$L(LEXMC) ^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXMC,LEXS)=""
"RTN","LEXRXC",70,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXC",71,0)
 . . . S LEXSTR=0 F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,5,LEXSTR)) Q:+LEXSTR'>0  D
"RTN","LEXRXC",72,0)
 . . . . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,5,LEXSTR,0)),"^",1),DA(1)=LEXIEN,DA=LEXSTR
"RTN","LEXRXC",73,0)
 . . . . I $L(X) I '$D(^LEX(LEXFI,DA(1),5,LEXIDX,X,DA)) D  Q
"RTN","LEXRXC",74,0)
 . . . . . S LEXSER=LEXSER+1,^LEX(LEXFI,DA(1),5,LEXIDX,X,DA)=""
"RTN","LEXRXC",75,0)
 . . . . . I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",76,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",77,0)
 . N DA,DIK,X S DA=LEXIEN,X=$$UP^XLFSTR($G(^LEX(LEXFI,LEXIEN,0))) Q:'$L(X)
"RTN","LEXRXC",78,0)
 . I '$D(^LEX(LEXFI,"B",$E(X,1,63),DA)) D
"RTN","LEXRXC",79,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",80,0)
 . S:$L(X) ^LEX(LEXFI,"B",$E(X,1,63),DA)=""
"RTN","LEXRXC",81,0)
 . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",82,0)
 . . N DA,DIK,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",83,0)
 . . I '$D(^LEX(LEXFI,DA(1),4,"B",X,DA)) D
"RTN","LEXRXC",84,0)
 . . . S LEXNER=LEXNER+1 I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",85,0)
 . . S:$L(X) ^LEX(LEXFI,DA(1),4,"B",X,DA)=""
"RTN","LEXRXC",86,0)
 . S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,5,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",87,0)
 . . N DA,DIK,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),5,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",88,0)
 . . I '$D(^LEX(LEXFI,DA(1),5,"B",X,DA)) D
"RTN","LEXRXC",89,0)
 . . . S LEXSER=LEXSER+1 I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",90,0)
 . . S:$L(X) ^LEX(LEXFI,DA(1),5,"B",X,DA)=""
"RTN","LEXRXC",91,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",92,0)
 S LEXNER=$S(+LEXNER>0:LEXNER,1:"") I '$D(ZTQUEUED) W !,$J(LEXNER,5),?10,757.17,?19,LEXIDX,?30,LEXIDNT
"RTN","LEXRXC",93,0)
 S LEXSER=$S(+LEXSER>0:LEXSER,1:"") I '$D(ZTQUEUED) W !,$J(LEXSER,5),?10,757.18,?19,LEXIDX,?30,LEXIDST
"RTN","LEXRXC",94,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",95,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",96,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",97,0)
 D REP^LEXRXXS(LEXFI,757.17,LEXIDX,LEXNDSN,LEXNER,LEXIDNT)
"RTN","LEXRXC",98,0)
 D REP^LEXRXXS(LEXFI,757.18,LEXIDX,LEXNDSS,LEXSER,LEXIDST)
"RTN","LEXRXC",99,0)
 Q
"RTN","LEXRXC",100,0)
RADC ;   Index    ^LEX(757.01,"ADC",1,IEN)
"RTN","LEXRXC",101,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXBEG,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXC",102,0)
 S LEXFI="757.01"
"RTN","LEXRXC",103,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""ADC""") Q:LEXTC=1
"RTN","LEXRXC",104,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="ADC",LEXIDXT="^LEX(757.01,""ADC"",1,IEN)"
"RTN","LEXRXC",105,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",106,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",107,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",108,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",109,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",110,0)
 . . N LEXOK,LEXDF S LEXDF=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",5))
"RTN","LEXRXC",111,0)
 . . S LEXOK=0 S:LEXDF=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",112,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXDF) ^LEX(LEXFI,LEXIDX,LEXDF,LEXIEN)=""
"RTN","LEXRXC",113,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",114,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",115,0)
 . N DA,DIK,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,+DA,1)),"^",5)
"RTN","LEXRXC",116,0)
 . I +X'>0,$D(^LEX(LEXFI,"ADC",+X,+DA)) D  Q
"RTN","LEXRXC",117,0)
 . . S LEXERR=LEXERR+1
"RTN","LEXRXC",118,0)
 . . K:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA),^LEX(LEXFI,"ADC",1,+DA)
"RTN","LEXRXC",119,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (0)",?58,"  ",DA
"RTN","LEXRXC",120,0)
 . I +X>0,'$D(^LEX(LEXFI,"ADC",+X,+DA)) D  Q
"RTN","LEXRXC",121,0)
 . . Q:+X'=1  S LEXERR=LEXERR+1
"RTN","LEXRXC",122,0)
 . . S:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA)=""
"RTN","LEXRXC",123,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",124,0)
 . S:+X>0 ^LEX(LEXFI,"ADC",+X,+DA)=""
"RTN","LEXRXC",125,0)
 . I +X>0,+X'=1 D  Q
"RTN","LEXRXC",126,0)
 . . S LEXERR=LEXERR+1
"RTN","LEXRXC",127,0)
 . . K:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA)
"RTN","LEXRXC",128,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (>1)",?58,"  ",DA
"RTN","LEXRXC",129,0)
 . K:'$D(LEXTEST)&(+X'=1) ^LEX(LEXFI,"ADC",+X,+DA),^LEX(LEXFI,"ADC",1,+DA)
"RTN","LEXRXC",130,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",131,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",132,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",133,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",134,0)
 Q
"RTN","LEXRXC",135,0)
RADTERM ;   Index    ^LEX(757.01,"ADTERM",DT,IEN) 
"RTN","LEXRXC",136,0)
 N DA,DIK,LEXBEG,LEXDE,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXC",137,0)
 S LEXFI="757.01"
"RTN","LEXRXC",138,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""ADTERM""") Q:LEXTC=1
"RTN","LEXRXC",139,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="ADTERM",LEXIDXT="^LEX(757.01,""ADTERM"",EXP,IEN)"
"RTN","LEXRXC",140,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",141,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",142,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",143,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",144,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",145,0)
 . . N LEXOK,LEXDF,LEXDE S LEXDF=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",5))
"RTN","LEXRXC",146,0)
 . . S LEXDE=$E($P($G(^LEX(LEXFI,LEXIEN,0)),U,1),1,63)
"RTN","LEXRXC",147,0)
 . . S LEXOK=0 S:LEXDE=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",148,0)
 . . . S LEXERR=LEXERR+1
"RTN","LEXRXC",149,0)
 . . . K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXDF>0&($L(LEXDE)) ^LEX(LEXFI,LEXIDX,LEXDE,LEXIEN)=""
"RTN","LEXRXC",150,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,$E(LEXSTR,1,20),$S($L(LEXSTR)>20:"...",1:""),?58,"  ",LEXIEN
"RTN","LEXRXC",151,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",152,0)
 . N DA,DIK,LEXDF,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",153,0)
 . S LEXDF=+($P($G(^LEX(LEXFI,DA,1)),"^",5))
"RTN","LEXRXC",154,0)
 . I +LEXDF>0,'$D(^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)) D
"RTN","LEXRXC",155,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",156,0)
 . I +LEXDF'>0,$D(^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)) D
"RTN","LEXRXC",157,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (deleted)",?58,"  ",DA
"RTN","LEXRXC",158,0)
 . S:$L(X)&(+LEXDF>0) ^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)=""
"RTN","LEXRXC",159,0)
 . K:$L(X)&(+LEXDF'>0) ^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)
"RTN","LEXRXC",160,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",161,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",162,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",163,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",164,0)
 Q
"RTN","LEXRXC",165,0)
 ;              
"RTN","LEXRXC",166,0)
 ; Miscellaneous
"RTN","LEXRXC",167,0)
SET ;   Re-Index Expression file 757.01 (Set logic only)
"RTN","LEXRXC",168,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXC",169,0)
 N LEXOUT,LEXMSG S LEXFI=757.01
"RTN","LEXRXC",170,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXC",171,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXC",172,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXC",173,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXC",174,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXC",175,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXC",176,0)
 D DL,MC
"RTN","LEXRXC",177,0)
 N LEXIEN,LEXP3,LEXP4 S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXC",178,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",179,0)
 . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXC",180,0)
 . N DA,DIK S DA=LEXIEN,DIK=LEXRT D IX1^DIK
"RTN","LEXRXC",181,0)
 D RL,SL S $P(^LEX(LEXFI,0),"^",3)=LEXP3,$P(^LEX(LEXFI,0),"^",4)=LEXP4
"RTN","LEXRXC",182,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",183,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",184,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXC",185,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXC",186,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXC",187,0)
 Q
"RTN","LEXRXC",188,0)
DL ;     De-Link AWRD
"RTN","LEXRXC",189,0)
 N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",190,0)
 . N LEXNC,LEXND,LEXNN,LEXWRD S LEXND=$G(^LEX(757.05,+LEXIEN,0)) Q:$P(LEXND,"^",3)'="L"  S LEXWRD=$P(LEXND,"^",1)
"RTN","LEXRXC",191,0)
 . S LEXNN="^LEX(757.01,""AWRD"","""_LEXWRD_""")",LEXNC="^LEX(757.01,""AWRD"","""_LEXWRD_""","
"RTN","LEXRXC",192,0)
 . F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  K:LEXNN[",""LINKED"")" @LEXNN
"RTN","LEXRXC",193,0)
 Q
"RTN","LEXRXC",194,0)
MC ;     Major Concept Map File
"RTN","LEXRXC",195,0)
 N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",196,0)
 . N DA,DIK S DA=LEXIEN,DIK="^LEX(757," D IX1^DIK
"RTN","LEXRXC",197,0)
 Q
"RTN","LEXRXC",198,0)
RL ;     Re-Link 757.05
"RTN","LEXRXC",199,0)
 N LEXIEN S LEXIEN=" " F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:'$L(LEXIEN)  K:LEXIEN?1U.U ^LEX(757.05,LEXIEN)
"RTN","LEXRXC",200,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",201,0)
 . N DA,DIK S DA=LEXIEN K ^LEX(757.05,DA,1,"B") S DA=LEXIEN,DIK="^LEX(757.05," D IX1^DIK
"RTN","LEXRXC",202,0)
 Q
"RTN","LEXRXC",203,0)
SL ;     String Length ASL
"RTN","LEXRXC",204,0)
 N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(757.01,"ASL",LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",205,0)
 . N LEXSCT,LEXPSCT S LEXSCT=$$SCT^LEXRXC3(LEXSTR)
"RTN","LEXRXC",206,0)
 . S LEXPSCT=$O(^LEX(757.01,"ASL",LEXSTR,0))
"RTN","LEXRXC",207,0)
 . I +LEXPSCT>0,+LEXSCT'>0 K ^LEX(757.01,"ASL",LEXSTR,+LEXPSCT)
"RTN","LEXRXC",208,0)
 . I +LEXPSCT>0,+LEXSCT>0,+LEXPSCT'=LEXSCT D
"RTN","LEXRXC",209,0)
 . . K ^LEX(757.01,"ASL",LEXSTR,+LEXPSCT) S ^LEX(757.01,"ASL",LEXSTR,+LEXSCT)=""
"RTN","LEXRXC",210,0)
 Q
"RTN","LEXRXC",211,0)
CLR ;   Clear
"RTN","LEXRXC",212,0)
 K LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXC",213,0)
 Q
"RTN","LEXRXD")
0^193^B72709975
"RTN","LEXRXD",1,0)
LEXRXD ;ISL/KER - Re-Index 757.02 B/ACODE/ACT ;04/21/2014
"RTN","LEXRXD",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXD",3,0)
 ;               
"RTN","LEXRXD",4,0)
 ; Global Variables
"RTN","LEXRXD",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXD",6,0)
 ;    ^LEX(757.02)        SACC 1.3
"RTN","LEXRXD",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXD",8,0)
 ;               
"RTN","LEXRXD",9,0)
 ; External References
"RTN","LEXRXD",10,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXD",11,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXD",12,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXD",13,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXD",14,0)
 ;    ^DIM                ICR  10016
"RTN","LEXRXD",15,0)
 ;               
"RTN","LEXRXD",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXD",17,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXD",18,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXD",19,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXD",20,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXD",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXD",22,0)
 ;               
"RTN","LEXRXD",23,0)
 Q
"RTN","LEXRXD",24,0)
EN ; Main Entry Point
"RTN","LEXRXD",25,0)
R75702 ; Repair file 757.02
"RTN","LEXRXD",26,0)
 D RB,RACODE,RACT,R75702^LEXRXD2,R75702^LEXRXD3,R75702^LEXRXD4,SET
"RTN","LEXRXD",27,0)
 Q
"RTN","LEXRXD",28,0)
RB ;   Index    ^LEX(757.02,"B",EXP,IEN) 
"RTN","LEXRXD",29,0)
 ;            ^LEX(757.02,IEN,4,"B",EFF,IEN2)
"RTN","LEXRXD",30,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXED,LEXELP,LEXEND,LEXERR,LEXEXP,LEXFI,LEXIDX,LEXIDXT,LEXIDST,LEXIEN,LEXMC,LEXNDS,LEXNDSS,LEXOK,LEXS,LEXSER,LEXSTR
"RTN","LEXRXD",31,0)
 S LEXFI="757.02"
"RTN","LEXRXD",32,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""B""") Q:LEXTC=1
"RTN","LEXRXD",33,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXNDSS,LEXERR,LEXSER)=0,LEXSTR="",LEXFI="757.02",LEXIDX="B",LEXIDXT="^LEX(757.02,""B"",EXP,IEN)"
"RTN","LEXRXD",34,0)
 S LEXIDST="^LEX(757.02,IEN,4,""B"",EFF,IEN2)" F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",35,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",36,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXEXP S LEXEXP=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXD",37,0)
 . . S LEXOK=0 S:LEXEXP=LEXSTR LEXOK=1
"RTN","LEXRXD",38,0)
 . . I 'LEXOK  D
"RTN","LEXRXD",39,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXD",40,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD",41,0)
 . . S:$L(LEXEXP) ^LEX(LEXFI,LEXIDX,LEXEXP,LEXIEN)=""
"RTN","LEXRXD",42,0)
 . . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXD",43,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",44,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXD",45,0)
 . . . . . S LEXNDSS=+($G(LEXNDSS))+1 N LEXOK,LEXED S LEXED=$P($G(^LEX(LEXFI,LEXIEN,4,LEXS,0)),"^",1)
"RTN","LEXRXD",46,0)
 . . . . . S LEXOK=0 S:LEXED=LEXSTR LEXOK=1
"RTN","LEXRXD",47,0)
 . . . . . I 'LEXOK D
"RTN","LEXRXD",48,0)
 . . . . . . S LEXSER=LEXSER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)
"RTN","LEXRXD",49,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.28,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXD",50,0)
 . . . . . S:$L(LEXED) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXED,LEXS)=""
"RTN","LEXRXD",51,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",52,0)
 . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1) I $L(X) D
"RTN","LEXRXD",53,0)
 . . S DA=LEXIEN
"RTN","LEXRXD",54,0)
 . . I '$D(^LEX(LEXFI,LEXIDX,X,DA)) D
"RTN","LEXRXD",55,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXD",56,0)
 . . S:$L(X) ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXD",57,0)
 . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXD",58,0)
 . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXD",59,0)
 . . . N DA,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),"^",1) I $L(X) D
"RTN","LEXRXD",60,0)
 . . . . I '$D(^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)) D
"RTN","LEXRXD",61,0)
 . . . . . S LEXSER=LEXSER+1 I '$D(ZTQUEUED) W !,?10,757.28,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",62,0)
 . . . . S:$L(X) ^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)=""
"RTN","LEXRXD",63,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",64,0)
 S LEXSER=$S(+LEXSER>0:LEXSER,1:"") I '$D(ZTQUEUED) W !,$J(LEXSER,5),?10,757.28,?19,LEXIDX,?30,LEXIDST
"RTN","LEXRXD",65,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",66,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",67,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",68,0)
 D REP^LEXRXXS(LEXFI,757.28,LEXIDX,LEXNDSS,LEXSER,LEXIDST)
"RTN","LEXRXD",69,0)
 Q
"RTN","LEXRXD",70,0)
RACODE ;   Index    ^LEX(757.02,"ACODE",CODE,IEN) 
"RTN","LEXRXD",71,0)
 N DA,DIK,LEXBEG,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD",72,0)
 S LEXFI="757.02"
"RTN","LEXRXD",73,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ACODE""") Q:LEXTC=1
"RTN","LEXRXD",74,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="ACODE",LEXIDXT="^LEX(757.02,""ACODE"",CODE,IEN)"
"RTN","LEXRXD",75,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",76,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",77,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXDF,LEXSO S LEXDF=+$P($G(^LEX(757.02,LEXIEN,0)),U,6)
"RTN","LEXRXD",78,0)
 . . S LEXSO=$P($G(^LEX(757.02,LEXIEN,0)),U,2)
"RTN","LEXRXD",79,0)
 . . K:'$D(LEXTEST)&(+LEXDF>0) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) Q:+LEXDF>0
"RTN","LEXRXD",80,0)
 . . S LEXOK=0 S:(LEXSO_" ")=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXD",81,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXDF'>0&($L(LEXSO)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD",82,0)
 . . . I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD",83,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",84,0)
 . Q:+($P($G(^LEX(LEXFI,LEXIEN,0)),"^",6))>0
"RTN","LEXRXD",85,0)
 . N DA,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",2) Q:'$L(X)
"RTN","LEXRXD",86,0)
 . I '$D(^LEX(LEXFI,LEXIDX,(X_" "),DA)) D
"RTN","LEXRXD",87,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXD",88,0)
 . S ^LEX(LEXFI,LEXIDX,(X_" "),DA)=""
"RTN","LEXRXD",89,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",90,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",91,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",92,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",93,0)
 Q
"RTN","LEXRXD",94,0)
RACT ;   Index    ^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS)
"RTN","LEXRXD",95,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXDT,LEXEF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDT,LEXIDX,LEXIDXT,LEXIEN,LEXIHS,LEXISO,LEXIST,LEXN0,LEXN1
"RTN","LEXRXD",96,0)
 N LEXN1X,LEXN2,LEXN2X,LEXNDS,LEXNH,LEXNI,LEXNIX,LEXPF,LEXSO,LEXST,LEXTS,X
"RTN","LEXRXD",97,0)
 S LEXFI="757.02"
"RTN","LEXRXD",98,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ACT""") Q:LEXTC=1
"RTN","LEXRXD",99,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXFI=757.02,LEXIDX="ACT",LEXISO="",LEXIDXT="^LEX(757.02,""ACT"",CODE,ST,DT,IEN,HIS)"
"RTN","LEXRXD",100,0)
 F  S LEXISO=$O(^LEX(LEXFI,LEXIDX,LEXISO)) Q:'$L(LEXISO)  D
"RTN","LEXRXD",101,0)
 . N LEXIST S LEXIST="" F  S LEXIST=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST)) Q:'$L(LEXIST)  D
"RTN","LEXRXD",102,0)
 . . N LEXIDT S LEXIDT=0 F  S LEXIDT=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT)) Q:+LEXIDT'>0  D
"RTN","LEXRXD",103,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",104,0)
 . . . . N LEXIHS S LEXIHS=0 F  S LEXIHS=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT,LEXIEN,LEXIHS)) Q:+LEXIHS'>0  D
"RTN","LEXRXD",105,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXSO,LEXST,LEXTS,LEXDT,LEXPF,LEXN0,LEXNH,LEXEF,LEXNI,LEXNIX,LEXN1,LEXN1X,LEXN2,LEXN2X S LEXEF=0
"RTN","LEXRXD",106,0)
 . . . . . S LEXN0=$G(^LEX(757.02,LEXIEN,0)),LEXNH=$G(^LEX(757.02,LEXIEN,4,LEXIHS,0))
"RTN","LEXRXD",107,0)
 . . . . . S LEXSO=$P(LEXN0,U,2),LEXPF=$P(LEXN0,U,5),LEXDT=$P(LEXNH,U,1),LEXST=$P(LEXNH,U,2)
"RTN","LEXRXD",108,0)
 . . . . . S LEXTS=LEXST S:+LEXPF>0 LEXTS=LEXTS+2
"RTN","LEXRXD",109,0)
 . . . . . S LEXNI="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXISO_""","_LEXIST_","_LEXIDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",110,0)
 . . . . . S LEXN1="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXSO_" "","_LEXST_","_LEXDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",111,0)
 . . . . . S LEXN2="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXSO_" "","_LEXTS_","_LEXDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",112,0)
 . . . . . S X="K "_LEXNI D ^DIM Q:'$L($G(X))  S LEXNIX=$G(X)
"RTN","LEXRXD",113,0)
 . . . . . S X="S "_LEXN1_"=""""" D ^DIM Q:'$L($G(X))  S LEXN1X=$G(X)
"RTN","LEXRXD",114,0)
 . . . . . S X="S "_LEXN2_"=""""" D ^DIM Q:'$L($G(X))  S LEXN2X=$G(X)
"RTN","LEXRXD",115,0)
 . . . . . X:'$D(LEXTEST)&(LEXNI'=LEXN1)&(LEXNI'=LEXN2) LEXNIX
"RTN","LEXRXD",116,0)
 . . . . . I LEXNI'=LEXN1,LEXNI'=LEXN2 D
"RTN","LEXRXD",117,0)
 . . . . . . S LEXERR=LEXERR+1
"RTN","LEXRXD",118,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSO,?58,"  ",LEXIEN W:+LEXIHS>0 "/",+LEXIHS
"RTN","LEXRXD",119,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",120,0)
 . N LEXIHS S LEXIHS=0 F  S LEXIHS=$O(^LEX(LEXFI,LEXIEN,4,LEXIHS)) Q:+LEXIHS'>0  D
"RTN","LEXRXD",121,0)
 . . N DA,DIK,LEXSO,LEXPF,LEXDT,LEXST,LEXTS S DA(1)=LEXIEN,DA=LEXIHS
"RTN","LEXRXD",122,0)
 . . S LEXSO=$P($G(^LEX(LEXFI,DA(1),0)),U,2),LEXPF=$P($G(^LEX(LEXFI,DA(1),0)),U,5)
"RTN","LEXRXD",123,0)
 . . S LEXDT=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),U,1) Q:LEXDT'?7N  S LEXST=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),U,2) Q:LEXST'?1N
"RTN","LEXRXD",124,0)
 . . S LEXTS=LEXST S:+LEXPF>0 LEXTS=LEXTS+2
"RTN","LEXRXD",125,0)
 . . I '$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXST,+LEXDT,DA(1),DA)) D
"RTN","LEXRXD",126,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXST,"/",LEXDT,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",127,0)
 . . I LEXTS>LEXST,'$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXTS,+LEXDT,DA(1),DA)) D
"RTN","LEXRXD",128,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXTS,"/",LEXDT,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",129,0)
 . . S:$L(LEXSO)&($L(LEXST))&($L(LEXDT)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXST,+LEXDT,DA(1),DA)=""
"RTN","LEXRXD",130,0)
 . . I LEXTS>LEXST S:$L(LEXSO)&($L(LEXTS))&($L(LEXDT)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXTS,+LEXDT,DA(1),DA)=""
"RTN","LEXRXD",131,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",132,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",133,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",134,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",135,0)
 Q
"RTN","LEXRXD",136,0)
 ;              
"RTN","LEXRXD",137,0)
 ; Miscellaneous
"RTN","LEXRXD",138,0)
SET ;   Re-Index (Set logic only)
"RTN","LEXRXD",139,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXD",140,0)
 N LEXOUT,LEXMSG S LEXFI=757.02
"RTN","LEXRXD",141,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXD",142,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXD",143,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXD",144,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXD",145,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXD",146,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXD",147,0)
 N LEXIEN,LEXP3,LEXP4 S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXD",148,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",149,0)
 . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXD",150,0)
 . N DA,DIK S DA=LEXIEN,DIK=LEXRT D IX1^DIK
"RTN","LEXRXD",151,0)
 S $P(^LEX(LEXFI,0),"^",3)=LEXP3,$P(^LEX(LEXFI,0),"^",4)=LEXP4
"RTN","LEXRXD",152,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",153,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",154,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXD",155,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXD",156,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXD",157,0)
 Q
"RTN","LEXRXD",158,0)
CLR ;   Clear
"RTN","LEXRXD",159,0)
 K LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXD",160,0)
 Q
"RTN","LEXRXD4")
0^49^B78250103
"RTN","LEXRXD4",1,0)
LEXRXD4 ;ISL/KER - Re-Index 757.02 AVA/CODE/ADX/APR ;04/21/2014
"RTN","LEXRXD4",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXD4",3,0)
 ;               
"RTN","LEXRXD4",4,0)
 ; Global Variables
"RTN","LEXRXD4",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXD4",6,0)
 ;    ^LEX(757.02,        SACC 1.3
"RTN","LEXRXD4",7,0)
 ;    ^LEX(757,           SACC 1.3
"RTN","LEXRXD4",8,0)
 ;    ^LEX(757.03,        SACC 1.3
"RTN","LEXRXD4",9,0)
 ;               
"RTN","LEXRXD4",10,0)
 ; External References
"RTN","LEXRXD4",11,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXD4",12,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXD4",13,0)
 ;               
"RTN","LEXRXD4",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXD4",15,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXD4",16,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXD4",17,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXD4",18,0)
 ;               
"RTN","LEXRXD4",19,0)
 Q
"RTN","LEXRXD4",20,0)
EN ; Main Entry Point
"RTN","LEXRXD4",21,0)
R75702 ; Repair file 757.02
"RTN","LEXRXD4",22,0)
 D RAVA,RCODE,RI10 Q
"RTN","LEXRXD4",23,0)
RAVA ;   Index    ^LEX(757.02,"AVA",CODE,EXP,SAB,IEN) 
"RTN","LEXRXD4",24,0)
 N DA,DIK,LEXBEG,LEXCK,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",25,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",26,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""AVA""") Q:LEXTC=1
"RTN","LEXRXD4",27,0)
 S LEXCK=$$SABS^LEXRXXM S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0
"RTN","LEXRXD4",28,0)
 S LEXSTR="",LEXFI=757.02,LEXIDX="AVA",LEXIDXT="^LEX(757.02,""AVA"",CODE,EXP,SAB,IEN)"
"RTN","LEXRXD4",29,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",30,0)
 . N LEXEXP S LEXEXP=0  F  S LEXEXP=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP)) Q:+LEXEXP'>0  D
"RTN","LEXRXD4",31,0)
 . . N LEXSAB S LEXSAB="" F  S LEXSAB=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB)) Q:'$L(LEXSAB)  D
"RTN","LEXRXD4",32,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",33,0)
 . . . . N LEXOK,LEXSO,LEXEX,LEXSR,LEXSB S LEXNDS=LEXNDS+1
"RTN","LEXRXD4",34,0)
 . . . . S LEXEX=$P($G(^LEX(757.02,+LEXIEN,0)),"^",1),LEXSO=$P($G(^LEX(757.02,+LEXIEN,0)),"^",2)
"RTN","LEXRXD4",35,0)
 . . . . S LEXSR=$P($G(^LEX(757.02,+LEXIEN,0)),"^",3),LEXSB=$E($P($G(^LEX(757.03,+LEXSR,0)),"^",1),1,3)
"RTN","LEXRXD4",36,0)
 . . . . I $L(LEXSAB)'=3!(LEXCK'[LEXSAB) D  Q
"RTN","LEXRXD4",37,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",38,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid SAB ",LEXSAB,?58,"  ",LEXIEN,!,?30,LEXCK
"RTN","LEXRXD4",39,0)
 . . . . I '$L(LEXEX)!('$L(LEXSO))!($L(LEXSB)'=3) D  Q
"RTN","LEXRXD4",40,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",41,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",42,0)
 . . . . S LEXOK=1 S:LEXSTR='(LEXSO_" ") LEXOK=0 S:LEXEXP'=LEXEX LEXOK=0 S:LEXSAB'=LEXSB LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",43,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",44,0)
 . . . . . S:$L(LEXSO)&($L(LEXEX))&($L(LEXSB))&(LEXCK[("^"_LEXSB_"^")) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXEX,LEXSB,LEXIEN)=""
"RTN","LEXRXD4",45,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",46,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",47,0)
 . N DA,DIK,LEXEX,LEXSO,LEXSR,LEXSB S DA=LEXIEN,LEXSR=$P($G(^LEX(LEXFI,+DA,0)),"^",3),LEXSO=$P($G(^LEX(LEXFI,DA,0)),U,2)
"RTN","LEXRXD4",48,0)
 . S LEXEX=$P($G(^LEX(LEXFI,DA,0)),U,1),LEXSB=$E($P($G(^LEX(757.03,+LEXSR,0)),"^",1),1,3) Q:$L(LEXSB)'=3  Q:'$L(LEXSO)  Q:+LEXEX'>0
"RTN","LEXRXD4",49,0)
 . I LEXCK[("^"_LEXSB_"^"),'$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)) D
"RTN","LEXRXD4",50,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,"/",LEXSB,?58,"  ",DA
"RTN","LEXRXD4",51,0)
 . I LEXCK'[("^"_LEXSB_"^"),$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)) D
"RTN","LEXRXD4",52,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (deleted) ",LEXSO,"/",LEXSB,?58,"  ",DA
"RTN","LEXRXD4",53,0)
 . . K:'$D(LEXTEST) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)
"RTN","LEXRXD4",54,0)
 . S:LEXCK[("^"_LEXSB_"^")&($L(LEXSO))&($L(LEXEX)) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)=""
"RTN","LEXRXD4",55,0)
 . K:LEXCK'[("^"_LEXSB_"^")&('$D(LEXTEST))&($L(LEXSO))&($L(LEXEX)) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)
"RTN","LEXRXD4",56,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",57,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",58,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",59,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",60,0)
 Q
"RTN","LEXRXD4",61,0)
RCODE ;   Index    ^LEX(757.02,"CODE",CODE,IEN) 
"RTN","LEXRXD4",62,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",63,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",64,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""CODE""") Q:LEXTC=1
"RTN","LEXRXD4",65,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="CODE",LEXIDXT="^LEX(757.02,""CODE"",CODE,IEN)"
"RTN","LEXRXD4",66,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",67,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",68,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXSO S LEXSO=$P($G(^LEX(757.02,LEXIEN,0)),U,2)
"RTN","LEXRXD4",69,0)
 . . S LEXOK=0 S:(LEXSO_" ")=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXD4",70,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",71,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",72,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",73,0)
 . N DA,DIK,LEXSO S DA=LEXIEN,LEXSO=$P($G(^LEX(LEXFI,DA,0)),U,2) Q:'$L(LEXSO)
"RTN","LEXRXD4",74,0)
 . I '$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),DA)) D
"RTN","LEXRXD4",75,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA
"RTN","LEXRXD4",76,0)
 . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),DA)=""
"RTN","LEXRXD4",77,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",78,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",79,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",80,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",81,0)
 Q
"RTN","LEXRXD4",82,0)
RI10 ;   Index    ^LEX(757.02 "ADX" amd "APR"
"RTN","LEXRXD4",83,0)
 D:$D(^LEX(757.02,"ADX")) RADX D:$D(^LEX(757.02,"APR")) RAPR
"RTN","LEXRXD4",84,0)
 Q
"RTN","LEXRXD4",85,0)
RADX ;   Index    ^LEX(757.02,"ADX",CODE,DATE,STA,IEN,HIS)
"RTN","LEXRXD4",86,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",87,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",88,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ADX""") Q:LEXTC=1
"RTN","LEXRXD4",89,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="ADX",LEXIDXT="^LEX(757.02,""ADX"",CODE,DT,STA,IEN,HIS)"
"RTN","LEXRXD4",90,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",91,0)
 . N LEXEFF S LEXEFF=0 F  S LEXEFF=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF)) Q:+LEXEFF'>0  D
"RTN","LEXRXD4",92,0)
 . . N LEXSTA S LEXSTA="" F  S LEXSTA=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA)) Q:'$L(LEXSTA)  D
"RTN","LEXRXD4",93,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",94,0)
 . . . . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXD4",95,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXOK,LEX0,LEXH,LEXSO,LEXSR,LEXST,LEXEF
"RTN","LEXRXD4",96,0)
 . . . . . S LEX0=$G(^LEX(757.02,LEXIEN,0)),LEXH=$G(^LEX(757.02,LEXIEN,4,LEXHIS,0)),LEXSO=$P(LEX0,"^",2)
"RTN","LEXRXD4",97,0)
 . . . . . S LEXSR=$P(LEX0,"^",3),LEXST=$P(LEXH,"^",2),LEXEF=$P(LEXH,"^",1)
"RTN","LEXRXD4",98,0)
 . . . . . S LEXOK=1 S:(LEXSO_" ")'=LEXSTR LEXOK=0 S:LEXSR'=30 LEXOK=0
"RTN","LEXRXD4",99,0)
 . . . . . S:LEXEFF'=LEXEF LEXOK=0 S:LEXSTA'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",100,0)
 . . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)
"RTN","LEXRXD4",101,0)
 . . . . . . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",102,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",103,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",104,0)
 . N DA,DIK,LEX0,LEXHI,LEXSO,LEXSR
"RTN","LEXRXD4",105,0)
 . S LEX0=$G(^LEX(LEXFI,LEXIEN,0)) S LEXSO=$P(LEX0,U,2) Q:'$L(LEXSO)  S LEXSR=$P(LEX0,U,3) Q:+LEXSR'=30
"RTN","LEXRXD4",106,0)
 . S LEXHI=0 F  S LEXHI=$O(^LEX(757.02,LEXIEN,4,LEXHI)) Q:+LEXHI'>0  D
"RTN","LEXRXD4",107,0)
 . . N LEXH,LEXEF,LEXST S LEXH=$G(^LEX(LEXFI,LEXIEN,4,LEXHI,0))
"RTN","LEXRXD4",108,0)
 . . S LEXEF=$P(LEXH,U,1) Q:'$L(LEXEF)
"RTN","LEXRXD4",109,0)
 . . S LEXST=$P(LEXH,U,2) Q:'$L(LEXST)
"RTN","LEXRXD4",110,0)
 . . S DA(1)=LEXIEN,DA=LEXHI
"RTN","LEXRXD4",111,0)
 . . I '$D(^LEX(757.02,"ADX",(LEXSO_" "),LEXEF,LEXST,DA(1),DA)) D
"RTN","LEXRXD4",112,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA(1),", ",DA
"RTN","LEXRXD4",113,0)
 . . . S:$L(LEXSO)&($L(LEXEF))&($L(LEXST))&(+($G(DA(1)))>0)&(+($G(DA))>0) ^LEX(757.02,"ADX",(LEXSO_" "),LEXEF,LEXST,DA(1),DA)=""
"RTN","LEXRXD4",114,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",115,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",116,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",117,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",118,0)
 Q
"RTN","LEXRXD4",119,0)
RAPR ;   Index    ^LEX(757.02,"APR",CODE,DATE,STA,IEN,HIS)
"RTN","LEXRXD4",120,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",121,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",122,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""APR""") Q:LEXTC=1
"RTN","LEXRXD4",123,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="APR",LEXIDXT="^LEX(757.02,""APR"",CODE,DT,STA,IEN,HIS)"
"RTN","LEXRXD4",124,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",125,0)
 . N LEXEFF S LEXEFF=0 F  S LEXEFF=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF)) Q:+LEXEFF'>0  D
"RTN","LEXRXD4",126,0)
 . . N LEXSTA S LEXSTA="" F  S LEXSTA=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA)) Q:'$L(LEXSTA)  D
"RTN","LEXRXD4",127,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",128,0)
 . . . . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXD4",129,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXOK,LEX0,LEXH,LEXSO,LEXSR,LEXST,LEXEF
"RTN","LEXRXD4",130,0)
 . . . . . S LEX0=$G(^LEX(757.02,LEXIEN,0)),LEXH=$G(^LEX(757.02,LEXIEN,4,LEXHIS,0)),LEXSO=$P(LEX0,"^",2)
"RTN","LEXRXD4",131,0)
 . . . . . S LEXSR=$P(LEX0,"^",3),LEXST=$P(LEXH,"^",2),LEXEF=$P(LEXH,"^",1)
"RTN","LEXRXD4",132,0)
 . . . . . S LEXOK=1 S:(LEXSO_" ")'=LEXSTR LEXOK=0 S:LEXSR'=31 LEXOK=0
"RTN","LEXRXD4",133,0)
 . . . . . S:LEXEFF'=LEXEF LEXOK=0 S:LEXSTA'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",134,0)
 . . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)
"RTN","LEXRXD4",135,0)
 . . . . . . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",136,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",137,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",138,0)
 . N DA,DIK,LEX0,LEXHI,LEXSO,LEXSR
"RTN","LEXRXD4",139,0)
 . S LEX0=$G(^LEX(LEXFI,LEXIEN,0)) S LEXSO=$P(LEX0,U,2) Q:'$L(LEXSO)  S LEXSR=$P(LEX0,U,3) Q:+LEXSR'=30
"RTN","LEXRXD4",140,0)
 . S LEXHI=0 F  S LEXHI=$O(^LEX(757.02,LEXIEN,4,LEXHI)) Q:+LEXHI'>0  D
"RTN","LEXRXD4",141,0)
 . . N LEXH,LEXEF,LEXST S LEXH=$G(^LEX(LEXFI,LEXIEN,4,LEXHI,0))
"RTN","LEXRXD4",142,0)
 . . S LEXEF=$P(LEXH,U,1) Q:'$L(LEXEF)
"RTN","LEXRXD4",143,0)
 . . S LEXST=$P(LEXH,U,2) Q:'$L(LEXST)
"RTN","LEXRXD4",144,0)
 . . S DA(1)=LEXIEN,DA=LEXHI
"RTN","LEXRXD4",145,0)
 . . I '$D(^LEX(757.02,LEXIDX,(LEXSO_" "),LEXEF,LEXST,DA(1),DA)) D
"RTN","LEXRXD4",146,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA(1),", ",DA
"RTN","LEXRXD4",147,0)
 . . . S:$L(LEXSO)&($L(LEXEF))&($L(LEXST))&(+($G(DA(1)))>0)&(+($G(DA))>0) ^LEX(757.02,LEXIDX,(LEXSO_" "),LEXEF,LEXST,DA(1),DA)=""
"RTN","LEXRXD4",148,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",149,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",150,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",151,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",152,0)
 Q
"RTN","LEXRXD4",153,0)
 ;              
"RTN","LEXRXD4",154,0)
 ; Miscellaneous
"RTN","LEXRXD4",155,0)
CLR ;   Clear
"RTN","LEXRXD4",156,0)
 K LEXNAM,LEXTEST,ZTQUEUED
"RTN","LEXRXD4",157,0)
 Q
"RTN","LEXRXE")
0^194^B60291807
"RTN","LEXRXE",1,0)
LEXRXE ;ISL/KER - Re-Index 757.1 B/AMCC/AMCT/ASTT ;04/21/2014
"RTN","LEXRXE",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXE",3,0)
 ;               
"RTN","LEXRXE",4,0)
 ; Global Variables
"RTN","LEXRXE",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXE",6,0)
 ;    ^LEX(757)           SACC 1.3
"RTN","LEXRXE",7,0)
 ;    ^LEX(757.1)         SACC 1.3
"RTN","LEXRXE",8,0)
 ;    ^LEX(757.11)        SACC 1.3
"RTN","LEXRXE",9,0)
 ;    ^LEX(757.12)        SACC 1.3
"RTN","LEXRXE",10,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXE",11,0)
 ;               
"RTN","LEXRXE",12,0)
 ; External References
"RTN","LEXRXE",13,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXE",14,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXE",15,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXE",16,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXE",17,0)
 ;               
"RTN","LEXRXE",18,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXE",19,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXE",20,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXE",21,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXE",22,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXE",23,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXE",24,0)
 ;               
"RTN","LEXRXE",25,0)
 Q
"RTN","LEXRXE",26,0)
EN ; Main Entry Point
"RTN","LEXRXE",27,0)
R7571 ; Repair file 757.1
"RTN","LEXRXE",28,0)
 D RB,RAMCC,RAMCT,RASTT,SET
"RTN","LEXRXE",29,0)
 Q
"RTN","LEXRXE",30,0)
RB ;   Index    ^LEX(757.1,"B",MC,IEN) 
"RTN","LEXRXE",31,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXE",32,0)
 S LEXFI="757.1"
"RTN","LEXRXE",33,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.1 ""B""") Q:LEXTC=1
"RTN","LEXRXE",34,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI="757.1",LEXIDX="B",LEXIDXT="^LEX(757.1,""B"",MC,IEN)"
"RTN","LEXRXE",35,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXE",36,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",37,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXMC S LEXMC=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXE",38,0)
 . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXE",39,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXMC) ^LEX(LEXFI,LEXIDX,LEXMC,LEXIEN)=""
"RTN","LEXRXE",40,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXE",41,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",42,0)
 . N DA,DIK,LEXMC S DA=LEXIEN,LEXMC=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:+LEXMC'>0  Q:'$D(^LEX(757,+LEXMC,0))
"RTN","LEXRXE",43,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXMC,DA)) D
"RTN","LEXRXE",44,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXMC,?58,"  ",DA
"RTN","LEXRXE",45,0)
 . S:$L(LEXMC) ^LEX(LEXFI,LEXIDX,LEXMC,DA)=""
"RTN","LEXRXE",46,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXE",47,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXE",48,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXE",49,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXE",50,0)
 Q
"RTN","LEXRXE",51,0)
RAMCC ;   Index    ^LEX(757.1,"AMCC",MC,SC,IEN) 
"RTN","LEXRXE",52,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMAJ,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXE",53,0)
 S LEXFI="757.1"
"RTN","LEXRXE",54,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.1 ""AMCC""") Q:LEXTC=1
"RTN","LEXRXE",55,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR=0,LEXFI=757.1,LEXIDX="AMCC",LEXIDXT="^LEX(757.1,""AMCC"",MC,SC,IEN) "
"RTN","LEXRXE",56,0)
 S LEXMAJ=0 F  S LEXMAJ=$O(^LEX(LEXFI,LEXIDX,LEXMAJ)) Q:+LEXMAJ'>0  D
"RTN","LEXRXE",57,0)
 . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXE",58,0)
 . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",59,0)
 . . . S LEXNDS=LEXNDS+1 N LEXOK,LEXMC,LEXSC S LEXMC=$P($G(^LEX(LEXFI,LEXIEN,0)),U,1)
"RTN","LEXRXE",60,0)
 . . . S LEXSC=$P($G(^LEX(LEXFI,LEXIEN,0)),U,2),LEXSC=$P($G(^LEX(757.11,+LEXSC,0)),U,1)
"RTN","LEXRXE",61,0)
 . . . S LEXOK=1 S:LEXMC'=LEXMAJ LEXOK=0 S:LEXSTR'=LEXSC LEXOK=0 I 'LEXOK D
"RTN","LEXRXE",62,0)
 . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR,LEXIEN)
"RTN","LEXRXE",63,0)
 . . . . S:$L(LEXSC)&(+LEXMC>0) ^LEX(LEXFI,LEXIDX,LEXMC,LEXSC,LEXIEN)=""
"RTN","LEXRXE",64,0)
 . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXMC,"/",LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXE",65,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",66,0)
 . N DA,LEXMC,LEXSC,DIK S DA=LEXIEN,LEXMC=$P($G(^LEX(LEXFI,DA,0)),U,1) Q:+LEXMC'>0
"RTN","LEXRXE",67,0)
 . S LEXSC=$P($G(^LEX(LEXFI,DA,0)),U,2),LEXSC=$E($P($G(^LEX(757.11,+LEXSC,0)),U,1),1,3) Q:$L(LEXSC)'=3
"RTN","LEXRXE",68,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXMC,LEXSC,DA)) D
"RTN","LEXRXE",69,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXMC,"/",LEXSC,?58,"  ",DA
"RTN","LEXRXE",70,0)
 . S:$L(LEXMC)&($L(LEXSC)) ^LEX(LEXFI,LEXIDX,LEXMC,LEXSC,DA)=""
"RTN","LEXRXE",71,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXE",72,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXE",73,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXE",74,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXE",75,0)
 Q
"RTN","LEXRXE",76,0)
RAMCT ;   Index    ^LEX(757.1,"AMCT",MC,ST,IEN) 
"RTN","LEXRXE",77,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMAJ,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXE",78,0)
 S LEXFI="757.1"
"RTN","LEXRXE",79,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.1 ""AMCT""") Q:LEXTC=1
"RTN","LEXRXE",80,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR=0,LEXFI=757.1,LEXIDX="AMCT",LEXIDXT="^LEX(757.1,""AMCT"",MC,ST,IEN)"
"RTN","LEXRXE",81,0)
 S LEXMAJ=0 F  S LEXMAJ=$O(^LEX(LEXFI,LEXIDX,LEXMAJ)) Q:+LEXMAJ'>0  D
"RTN","LEXRXE",82,0)
 . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXE",83,0)
 . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",84,0)
 . . . S LEXNDS=LEXNDS+1 N LEXOK,LEXMC,LEXST S LEXOK=1,LEXMC=$P($G(^LEX(LEXFI,LEXIEN,0)),U,1)
"RTN","LEXRXE",85,0)
 . . . S LEXST=$P($G(^LEX(LEXFI,LEXIEN,0)),U,3) S:LEXMC'=LEXMAJ LEXOK=0 S:LEXSTR'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXE",86,0)
 . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXMAJ,LEXSTR,LEXIEN)
"RTN","LEXRXE",87,0)
 . . . . S:$L(LEXST)&(+LEXMC>0) ^LEX(LEXFI,LEXIDX,LEXMC,LEXST,LEXIEN)=""
"RTN","LEXRXE",88,0)
 . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXMC,"/",LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXE",89,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",90,0)
 . N DA,DIK,LEXMC,LEXTY S DA=LEXIEN,LEXMC=$P($G(^LEX(LEXFI,DA,0)),U,1) Q:+LEXMC'>0
"RTN","LEXRXE",91,0)
 . S LEXTY=$P($G(^LEX(LEXFI,DA,0)),U,3) Q:'$L(LEXTY)
"RTN","LEXRXE",92,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXMC,LEXTY,DA)) D
"RTN","LEXRXE",93,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXMC,"/",LEXTY,?58,"  ",DA
"RTN","LEXRXE",94,0)
 . S:$L(LEXMC)&($L(LEXTY)) ^LEX(LEXFI,LEXIDX,LEXMC,LEXTY,DA)=""
"RTN","LEXRXE",95,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXE",96,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXE",97,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXE",98,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXE",99,0)
 Q
"RTN","LEXRXE",100,0)
RASTT ;   Index    ^LEX(757.1,"ASTT",ST,MC,IEN) 
"RTN","LEXRXE",101,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMAJ,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXE",102,0)
 S LEXFI="757.1"
"RTN","LEXRXE",103,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.1 ""ASTT""") Q:LEXTC=1
"RTN","LEXRXE",104,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR=0,LEXFI=757.1,LEXIDX="ASTT",LEXIDXT="^LEX(757.1,""ASTT"",ST,MC,IEN)"
"RTN","LEXRXE",105,0)
 N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXE",106,0)
 . N LEXMAJ S LEXMAJ=0 F  S LEXMAJ=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXMAJ)) Q:+LEXMAJ'>0  D
"RTN","LEXRXE",107,0)
 . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXMAJ,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",108,0)
 . . . S LEXNDS=LEXNDS+1 N LEXOK,LEXMC,LEXST S LEXOK=1,LEXMC=$P($G(^LEX(LEXFI,LEXIEN,0)),U,1)
"RTN","LEXRXE",109,0)
 . . . S LEXST=$P($G(^LEX(LEXFI,LEXIEN,0)),U,3) S:LEXMC'=LEXMAJ LEXOK=0 S:LEXSTR'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXE",110,0)
 . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXMAJ,LEXIEN)
"RTN","LEXRXE",111,0)
 . . . . S:$L(LEXST)&(+LEXMC>0) ^LEX(LEXFI,LEXIDX,LEXST,LEXMC,LEXIEN)=""
"RTN","LEXRXE",112,0)
 . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,"/",LEXMC,?58,"  ",LEXIEN
"RTN","LEXRXE",113,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",114,0)
 . N DA,DIK,LEXMC,LEXTY S DA=LEXIEN,LEXMC=$P($G(^LEX(LEXFI,DA,0)),U,1) Q:+LEXMC'>0
"RTN","LEXRXE",115,0)
 . S LEXTY=$P($G(^LEX(LEXFI,DA,0)),U,3) Q:'$L(LEXTY)
"RTN","LEXRXE",116,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXTY,LEXMC,DA)) D
"RTN","LEXRXE",117,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXTY,"/",LEXMC,?58,"  ",DA
"RTN","LEXRXE",118,0)
 . S:$L(LEXTY)&($L(LEXMC)) ^LEX(LEXFI,LEXIDX,LEXTY,LEXMC,DA)=""
"RTN","LEXRXE",119,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXE",120,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXE",121,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXE",122,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXE",123,0)
 Q
"RTN","LEXRXE",124,0)
 ;              
"RTN","LEXRXE",125,0)
 ; Miscellaneous
"RTN","LEXRXE",126,0)
SET ;   Re-Index Semantic Map file 757.1 (Set logic only)
"RTN","LEXRXE",127,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXE",128,0)
 N LEXOUT,LEXMSG S LEXFI=757.1
"RTN","LEXRXE",129,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXE",130,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXE",131,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXE",132,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXE",133,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXE",134,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXE",135,0)
 N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXE",136,0)
 . N DA,DIK S DA=+($G(LEXIEN)),DIK=LEXRT D IX1^DIK
"RTN","LEXRXE",137,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXE",138,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXE",139,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXE",140,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXE",141,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXE",142,0)
 Q
"RTN","LEXRXE",143,0)
CLR ;   Clear
"RTN","LEXRXE",144,0)
 K LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXE",145,0)
 Q
"RTN","LEXRXF")
0^195^B90798435
"RTN","LEXRXF",1,0)
LEXRXF ;ISL/KER - Re-Index 757.21 B/C/AA ;04/21/2014
"RTN","LEXRXF",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXF",3,0)
 ;               
"RTN","LEXRXF",4,0)
 ; Global Variables
"RTN","LEXRXF",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXF",6,0)
 ;    ^LEX(757)           SACC 1.3
"RTN","LEXRXF",7,0)
 ;    ^LEX(757.01)        SACC 1.3
"RTN","LEXRXF",8,0)
 ;    ^LEX(757.011)       SACC 1.3
"RTN","LEXRXF",9,0)
 ;    ^LEX(757.21)        SACC 1.3
"RTN","LEXRXF",10,0)
 ;    ^LEXT(757.2)        SACC 1.3
"RTN","LEXRXF",11,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXF",12,0)
 ;    ^TMP("LEXRXF")      SACC 2.3.2.5.1
"RTN","LEXRXF",13,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXRXF",14,0)
 ;    ^TMP("LEXWRD")      SACC 2.3.2.5.1
"RTN","LEXRXF",15,0)
 ;               
"RTN","LEXRXF",16,0)
 ; External References
"RTN","LEXRXF",17,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXF",18,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXF",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXF",20,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXF",21,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXF",22,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXF",23,0)
 ;               
"RTN","LEXRXF",24,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXF",25,0)
 ;     LEXFIX     Fix Index flag  NEWed/KILLed by LEXRXXT
"RTN","LEXRXF",26,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXF",27,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXF",28,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXF",29,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXF",30,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXF",31,0)
 ;               
"RTN","LEXRXF",32,0)
 Q
"RTN","LEXRXF",33,0)
EN ; Main Entry Point
"RTN","LEXRXF",34,0)
R75721 ; Repair file 757.21
"RTN","LEXRXF",35,0)
 K ^TMP("LEXRXF",$J) D RB,RC,RAA,SET K ^TMP("LEXRXF",$J)
"RTN","LEXRXF",36,0)
 Q
"RTN","LEXRXF",37,0)
RB ;   Index    ^LEX(757.21,"B",EXP,IEN) 
"RTN","LEXRXF",38,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXF",39,0)
 S LEXFI="757.21"
"RTN","LEXRXF",40,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.21 ""B""") Q:LEXTC=1
"RTN","LEXRXF",41,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.21,LEXIDX="B",LEXIDXT="^LEX(757.21,""B"",EXP,IEN)"
"RTN","LEXRXF",42,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXF",43,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",44,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXEX S LEXEX=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXF",45,0)
 . . S LEXOK=0 S:LEXEX=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXF",46,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXEX) ^LEX(LEXFI,LEXIDX,LEXEX,LEXIEN)=""
"RTN","LEXRXF",47,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXF",48,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",49,0)
 . N DA,DIK,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXF",50,0)
 . I '$D(^LEX(LEXFI,LEXIDX,X,DA)) D
"RTN","LEXRXF",51,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXF",52,0)
 . S:$L(X) ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXF",53,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXF",54,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXF",55,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXF",56,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXF",57,0)
 Q
"RTN","LEXRXF",58,0)
RC ;   Index    ^LEX(757.21,"C",EXP,IEN) 
"RTN","LEXRXF",59,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXF",60,0)
 S LEXFI="757.21"
"RTN","LEXRXF",61,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.21 ""C""") Q:LEXTC=1
"RTN","LEXRXF",62,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.21,LEXIDX="C",LEXIDXT="^LEX(757.21,""C"",EXP,IEN)"
"RTN","LEXRXF",63,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXF",64,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",65,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXEX,LEXEXP
"RTN","LEXRXF",66,0)
 . . S LEXEX=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXF",67,0)
 . . S LEXEXP=$E($$UP^XLFSTR($G(^LEX(757.01,+($G(LEXEX)),0))),1,63)
"RTN","LEXRXF",68,0)
 . . S LEXOK=0 S:LEXEXP=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXF",69,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,"C",LEXSTR,LEXIEN) S:$L(LEXEXP) ^LEX(LEXFI,"C",LEXEXP,LEXIEN)=""
"RTN","LEXRXF",70,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,$E(LEXSTR,1,28),?58,"  ",LEXIEN
"RTN","LEXRXF",71,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",72,0)
 . N DA,DIK,X,LEXEXP S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1),LEXEXP=$E($$UP^XLFSTR(^LEX(757.01,X,0)),1,63)
"RTN","LEXRXF",73,0)
 . Q:+X'>0  Q:'$L(LEXEXP)
"RTN","LEXRXF",74,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXEXP,DA)) D
"RTN","LEXRXF",75,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",$E(LEXEXP,1,20),?58,"  ",DA
"RTN","LEXRXF",76,0)
 . S ^LEX(LEXFI,LEXIDX,LEXEXP,DA)=""
"RTN","LEXRXF",77,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXF",78,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXF",79,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXF",80,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXF",81,0)
 Q
"RTN","LEXRXF",82,0)
RAA ;   Index    ^LEX(757.21,("A"_SUBSET),WORD,IEN) 
"RTN","LEXRXF",83,0)
 ;            ^LEX(757.21,"ADEN",WORD,IEN)
"RTN","LEXRXF",84,0)
 ;            ^LEX(757.21,"AIMM",WORD,IEN)
"RTN","LEXRXF",85,0)
 ;            ^LEX(757.21,"ANUR",WORD,IEN)
"RTN","LEXRXF",86,0)
 ;            ^LEX(757.21,"ASOC",WORD,IEN)
"RTN","LEXRXF",87,0)
 ;            ^LEX(757.21,[etc],WORD,IEN)
"RTN","LEXRXF",88,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXEX,LEXEXI,LEXELP,LEXEXP,LEXEXPS,LEXFI,LEXI,LEXID,LEXIDX,LEXIDXT,LEXIEN,LEXJ
"RTN","LEXRXF",89,0)
 N LEXMC,LEXNDS,LEXOK,LEXSIDX,LEXSTR,LEXT,LEXTY,LEXW,LEXDENE,LEXIMME,LEXNURE,LEXSOCE,LEXDENN,LEXIMMN,LEXNURN,LEXSOCN,X
"RTN","LEXRXF",90,0)
 S LEXFI="757.21" K ^TMP("LEXRXF",$J)
"RTN","LEXRXF",91,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.21 ""AA""") Q:LEXTC=1
"RTN","LEXRXF",92,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS)=0,LEXSTR="",LEXFI=757.21,LEXIDX=" "
"RTN","LEXRXF",93,0)
 S LEXIDX=" " F  S LEXIDX=$O(^LEX(757.21,LEXIDX)) Q:'$L(LEXIDX)  D
"RTN","LEXRXF",94,0)
 . Q:LEXIDX="B"  Q:LEXIDX="C"  Q:LEXIDX?1N.N
"RTN","LEXRXF",95,0)
 . S LEXIDXT="^LEX(757.21,"""_LEXIDX_""",WORD,IEN)"
"RTN","LEXRXF",96,0)
 . N LEXBEG,LEXEND,LEXTIM,LEXERR,LEXNDS,LEXELP
"RTN","LEXRXF",97,0)
 . S LEXERR=$G(^TMP("LEXRXF",$J,LEXIDX,"E"))
"RTN","LEXRXF",98,0)
 . S LEXNDS=$G(^TMP("LEXRXF",$J,LEXIDX,"N"))
"RTN","LEXRXF",99,0)
 . S LEXELP=$G(^TMP("LEXRXF",$J,LEXIDX,"T"))
"RTN","LEXRXF",100,0)
 . S LEXBEG=$$NOW^XLFDT H 2
"RTN","LEXRXF",101,0)
 . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXF",102,0)
 . N LEXTNG,LEXTC S LEXFI="757.21",LEXTNG="Repairing"
"RTN","LEXRXF",103,0)
 . I +($G(LEXFI))>0,$D(ZTQUEUED) D  Q:LEXTC=1
"RTN","LEXRXF",104,0)
 . . S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Repairing File #757.21 """_LEXIDX_""""))
"RTN","LEXRXF",105,0)
 . F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXF",106,0)
 . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",107,0)
 . . . S LEXNDS=+($G(LEXNDS))+1,^TMP("LEXRXF",$J,LEXIDX,"N")=LEXNDS
"RTN","LEXRXF",108,0)
 . . . I '$D(^LEX(757.21,LEXIEN,0)) D  Q
"RTN","LEXRXF",109,0)
 . . . . S LEXERR=+($G(LEXERR))+1,^TMP("LEXRXF",$J,LEXIDX,"E")=LEXERR
"RTN","LEXRXF",110,0)
 . . . . K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXF",111,0)
 . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXF",112,0)
 . . . N LEXI,LEXIX K LEXEXPS
"RTN","LEXRXF",113,0)
 . . . S LEXEX=+($G(^LEX(757.21,LEXIEN,0)))
"RTN","LEXRXF",114,0)
 . . . S LEXMC=$P(^LEX(757.01,LEXEX,1),U,1)
"RTN","LEXRXF",115,0)
 . . . S LEXID=$P($G(^LEX(757.21,LEXIEN,0)),U,2)
"RTN","LEXRXF",116,0)
 . . . S LEXID=$P(^LEXT(757.2,LEXID,0),U,2) S:$L(LEXID) LEXID="A"_LEXID Q:'$L(LEXID)
"RTN","LEXRXF",117,0)
 . . . S LEXEXI=0 F  S LEXEXI=$O(^LEX(757.01,"AMC",LEXMC,LEXEXI)) Q:+LEXEXI'>0  D
"RTN","LEXRXF",118,0)
 . . . . N LEXTY,LEXT,LEXW,LEXJ,LEXEXP,LEXSIDX S LEXEXP=$G(^LEX(757.01,LEXEXI,0))
"RTN","LEXRXF",119,0)
 . . . . S LEXTY=+($P($G(^LEX(757.01,LEXEXI,1)),U,2)) Q:LEXTY'>0
"RTN","LEXRXF",120,0)
 . . . . S LEXT=+($P($G(^LEX(757.011,LEXTY,0)),"^",2)) Q:LEXT=0
"RTN","LEXRXF",121,0)
 . . . . S LEXSIDX=LEXID K ^TMP("LEXTKN",$J) S X=LEXEXP,LEXIX=LEXIDX,LEXIDX="" D PTX^LEXTOKN S LEXIDX=LEXIX
"RTN","LEXRXF",122,0)
 . . . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXRXF",123,0)
 . . . . . N LEXI S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXF",124,0)
 . . . . . . N LEXW S LEXW=$O(^TMP("LEXTKN",$J,LEXI,"")) Q:'$L(LEXW)  S LEXEXPS(LEXID,LEXW,LEXIEN)=""
"RTN","LEXRXF",125,0)
 . . . . K ^TMP("LEXTKN",$J)
"RTN","LEXRXF",126,0)
 . . . I $L(LEXIDX),$L(LEXSTR),$L(LEXIEN) D
"RTN","LEXRXF",127,0)
 . . . . I '$D(LEXEXPS(LEXIDX,LEXSTR,LEXIEN)) D
"RTN","LEXRXF",128,0)
 . . . . . S LEXERR=+($G(LEXERR))+1,^TMP("LEXRXF",$J,LEXIDX,"E")=LEXERR
"RTN","LEXRXF",129,0)
 . . . . . K:'$D(LEXTEST) ^LEX(757.21,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXF",130,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXF",131,0)
 . . . . . N LEXW S LEXW="" F  S LEXW=$O(LEXEXPS(LEXIDX,LEXW)) Q:'$L(LEXW)  D
"RTN","LEXRXF",132,0)
 . . . . . . N LEXI S LEXI=0 F  S LEXI=$O(LEXEXPS(LEXIDX,LEXW,LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXF",133,0)
 . . . . . . . S ^LEX(757.21,LEXID,LEXW,LEXI)=""
"RTN","LEXRXF",134,0)
 . . . K LEXEXPS
"RTN","LEXRXF",135,0)
 . S LEXEND=$$NOW^XLFDT,LEXTIM=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXF",136,0)
 . S:$E(LEXTIM,1)=" "&($E(LEXTIM,3)=":") LEXTIM=$TR(LEXTIM," ","0")
"RTN","LEXRXF",137,0)
 . S ^TMP("LEXRXF",$J,LEXIDX,"T")=LEXTIM
"RTN","LEXRXF",138,0)
 I '$D(ZTQUEUED) W !,?8,"Check for missing records"
"RTN","LEXRXF",139,0)
 N LEXIEN,LEXNDS,LEXBEG,LEXEND,LEXELP,LEXMIS
"RTN","LEXRXF",140,0)
 S LEXBEG=$$NOW^XLFDT,LEXNDS=0,LEXMIS=0
"RTN","LEXRXF",141,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",142,0)
 . N DA,LEXIX,LEXAIX,LEXERR,LEXEXP,LEXMC,LEXTEXP,LEXW S DA=LEXIEN
"RTN","LEXRXF",143,0)
 . S LEXIX=$P($G(^LEX(LEXFI,DA,0)),"^",2),LEXIX=$P($G(^LEXT(757.2,+LEXIX,0)),"^",2)
"RTN","LEXRXF",144,0)
 . S LEXAIX="A"_LEXIX
"RTN","LEXRXF",145,0)
 . S LEXERR=$G(^TMP("LEXRXF",$J,LEXAIX,"E"))
"RTN","LEXRXF",146,0)
 . K ^TMP("LEXWRD",$J)
"RTN","LEXRXF",147,0)
 . S LEXEXP=+(^LEX(757.21,DA,0)),LEXMC=$P(^LEX(757.01,LEXEXP,1),U,1)
"RTN","LEXRXF",148,0)
 . K ^TMP("LEXTKN",$J),^TMP("LEXWRD",$J)
"RTN","LEXRXF",149,0)
 . S LEXNDS=LEXNDS+1
"RTN","LEXRXF",150,0)
 . S LEXTEXP=0 F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMC,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXRXF",151,0)
 . . N X,LEXIDX,LEXYPE,LEXT,LEXJ S X=$G(^LEX(757.01,LEXTEXP,0)),LEXIDX="" Q:'$L(X)
"RTN","LEXRXF",152,0)
 . . S LEXYPE=+($P($G(^LEX(757.01,LEXTEXP,1)),U,2)) Q:LEXYPE'>0
"RTN","LEXRXF",153,0)
 . . S LEXT=+($P($G(^LEX(757.011,LEXYPE,0)),"^",2)) Q:LEXT=0
"RTN","LEXRXF",154,0)
 . . D PTX^LEXTOKN I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 F LEXJ=1:1:^TMP("LEXTKN",$J,0) D
"RTN","LEXRXF",155,0)
 . . . N LEXW S LEXW=$O(^TMP("LEXTKN",$J,LEXJ,"")) S:$L(LEXW) ^TMP("LEXWRD",$J,LEXW)=""
"RTN","LEXRXF",156,0)
 . . K ^TMP("LEXTKN",$J) Q
"RTN","LEXRXF",157,0)
 . S LEXW="" F  S LEXW=$O(^TMP("LEXWRD",$J,LEXW)) Q:'$L(LEXW)  D
"RTN","LEXRXF",158,0)
 . . I '$D(^LEX(LEXFI,LEXAIX,LEXW,DA)) D
"RTN","LEXRXF",159,0)
 . . . S LEXMIS=LEXMIS+0
"RTN","LEXRXF",160,0)
 . . . S LEXERR=+($G(LEXERR))+1,^TMP("LEXRXF",$J,LEXAIX,"E")=LEXERR
"RTN","LEXRXF",161,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXAIX,?30,"Missing ",$E(LEXW,1,18),?58,"  ",DA
"RTN","LEXRXF",162,0)
 . . S:$L(LEXW)&(+DA>0)&($L(LEXAIX))&($L(LEXFI)) ^LEX(LEXFI,LEXAIX,LEXW,DA)=""
"RTN","LEXRXF",163,0)
 . K ^TMP("LEXWRD",$J),^TMP("LEXTKN",$J)
"RTN","LEXRXF",164,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXF",165,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXF",166,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"AAAA",LEXNDS,LEXMIS,"^LEX(757.21,""ASUB"",WORD,IEN)",LEXELP)
"RTN","LEXRXF",167,0)
 S LEXIDX=" " F  S LEXIDX=$O(^LEX(757.21,LEXIDX)) Q:'$L(LEXIDX)  D
"RTN","LEXRXF",168,0)
 . Q:LEXIDX="B"  Q:LEXIDX="C"
"RTN","LEXRXF",169,0)
 . N LEXFI,LEXERR,LEXELP,LEXNDS,LEXIDXT S LEXFI=757.21
"RTN","LEXRXF",170,0)
 . S LEXERR=$G(^TMP("LEXRXF",$J,LEXIDX,"E"))
"RTN","LEXRXF",171,0)
 . S LEXNDS=$G(^TMP("LEXRXF",$J,LEXIDX,"N"))
"RTN","LEXRXF",172,0)
 . S LEXELP=$G(^TMP("LEXRXF",$J,LEXIDX,"T"))
"RTN","LEXRXF",173,0)
 . S LEXIDXT="^LEX(757.21,"""_LEXIDX_""",WORD,IEN)"
"RTN","LEXRXF",174,0)
 . S LEXERR=$S(+($G(LEXERR))>0:LEXERR,1:"")
"RTN","LEXRXF",175,0)
 . S LEXNDS=$S(+($G(LEXNDS))>0:LEXNDS,1:"")
"RTN","LEXRXF",176,0)
 . S LEXELP=$S($L($G(LEXELP))>0:LEXELP,1:"")
"RTN","LEXRXF",177,0)
 . D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXF",178,0)
 K ^TMP("LEXRXF",$J)
"RTN","LEXRXF",179,0)
 Q
"RTN","LEXRXF",180,0)
 ;              
"RTN","LEXRXF",181,0)
 ; Miscellaneous
"RTN","LEXRXF",182,0)
SET ;   Re-Index Subset file 757.21 (Set logic only)
"RTN","LEXRXF",183,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXF",184,0)
 N LEXOUT,LEXMSG S LEXFI=757.21
"RTN","LEXRXF",185,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXF",186,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXF",187,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXF",188,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXF",189,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXF",190,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXF",191,0)
 N LEXIEN,LEXP3,LEXP4 S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXF",192,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXF",193,0)
 . N DA,DIK S DA=+($G(LEXIEN))  D:$D(LEXFIX) FIX(DA)
"RTN","LEXRXF",194,0)
 . I $D(^LEX(LEXFI,+LEXIEN,0)) D
"RTN","LEXRXF",195,0)
 . . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXF",196,0)
 . . S DA=LEXIEN,DIK=LEXRT D IX1^DIK
"RTN","LEXRXF",197,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXF",198,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXF",199,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXF",200,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXF",201,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXF",202,0)
 Q
"RTN","LEXRXF",203,0)
FIX(X) ;   Fix Deactivated Expressions in 757.21
"RTN","LEXRXF",204,0)
 N DA,DIK,LEXEXP,LEXDFL Q:'$D(LEXFIX)  S DA=+($G(X)) Q:+DA'>0  Q:'$D(^LEX(757.21,+DA,0))
"RTN","LEXRXF",205,0)
 S LEXEXP=+$G(^LEX(757.21,+DA,0)) Q:+LEXEXP'>0
"RTN","LEXRXF",206,0)
 S LEXDFL=$P($G(^LEX(757.01,+LEXEXP,1)),"^",5) Q:+LEXDFL'>0
"RTN","LEXRXF",207,0)
 I $D(LEXFIX) S DIK="^LEX(757.21," D ^DIK
"RTN","LEXRXF",208,0)
 Q
"RTN","LEXRXF",209,0)
CLR ;   Clear
"RTN","LEXRXF",210,0)
 N LEXFIX,LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXF",211,0)
 Q
"RTN","LEXRXG")
0^196^B76130411
"RTN","LEXRXG",1,0)
LEXRXG ;ISL/KER - Re-Index 757.33 B/C/G ;04/21/2014
"RTN","LEXRXG",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXG",3,0)
 ;               
"RTN","LEXRXG",4,0)
 ; Global Variables
"RTN","LEXRXG",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXG",6,0)
 ;    ^LEX(757.32)        SACC 1.3
"RTN","LEXRXG",7,0)
 ;    ^LEX(757.33)        SACC 1.3
"RTN","LEXRXG",8,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXG",9,0)
 ;               
"RTN","LEXRXG",10,0)
 ; External References
"RTN","LEXRXG",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXRXG",12,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXRXG",13,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXG",14,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXRXG",15,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXG",16,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXG",17,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXG",18,0)
 ;    IX2^DIK             ICR  10013
"RTN","LEXRXG",19,0)
 ;               
"RTN","LEXRXG",20,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXG",21,0)
 ;     LEXFIX     Fix Index flag  NEWed/KILLed by LEXRXXT
"RTN","LEXRXG",22,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXG",23,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXG",24,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXG",25,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXG",26,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXG",27,0)
 ;               
"RTN","LEXRXG",28,0)
 Q
"RTN","LEXRXG",29,0)
EN ; Main Entry Point
"RTN","LEXRXG",30,0)
R75733 ; Repair file 757.33
"RTN","LEXRXG",31,0)
 D RB,RC,RG,R75733^LEXRXG2,R75733^LEXRXG3,SET
"RTN","LEXRXG",32,0)
 Q
"RTN","LEXRXG",33,0)
RB ;   Index    ^LEX(757.33,"B",MID,IEN) 
"RTN","LEXRXG",34,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXG",35,0)
 S LEXFI="757.33"
"RTN","LEXRXG",36,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.33 ""B""") Q:LEXTC=1
"RTN","LEXRXG",37,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.33,LEXIDX="B",LEXIDXT="^LEX(757.33,""B"",MID,IEN)"
"RTN","LEXRXG",38,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXG",39,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",40,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXID S LEXID=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXG",41,0)
 . . S LEXOK=0 S:LEXID=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXG",42,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXG",43,0)
 . . . S:$L(LEXID) ^LEX(LEXFI,LEXIDX,LEXID,LEXIEN)=""
"RTN","LEXRXG",44,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXG",45,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",46,0)
 . N DA,DIK,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXG",47,0)
 . I '$D(^LEX(LEXFI,LEXIDX,X,DA)) D
"RTN","LEXRXG",48,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXG",49,0)
 . S:$L(X) ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXG",50,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXG",51,0)
 H 2 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXG",52,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXG",53,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXG",54,0)
 Q
"RTN","LEXRXG",55,0)
RC ;   Index    ^LEX(757.33,"C",DEF,SRC,ORD,TAR,IEN)
"RTN","LEXRXG",56,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXDEF
"RTN","LEXRXG",57,0)
 S LEXFI="757.33"
"RTN","LEXRXG",58,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.33 ""C""") Q:LEXTC=1
"RTN","LEXRXG",59,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXDEF="",LEXFI=757.33,LEXIDX="C",LEXIDXT="^LEX(757.33,""C"",EXP,IEN)"
"RTN","LEXRXG",60,0)
 F  S LEXDEF=$O(^LEX(LEXFI,LEXIDX,LEXDEF)) Q:'$L(LEXDEF)  D
"RTN","LEXRXG",61,0)
 . N LEXSRC S LEXSRC="" F  S LEXSRC=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXSRC)) Q:'$L(LEXSRC)  D
"RTN","LEXRXG",62,0)
 . . N LEXORD S LEXORD="" F  S LEXORD=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXSRC,LEXORD)) Q:'$L(LEXORD)  D
"RTN","LEXRXG",63,0)
 . . . N LEXTAR S LEXTAR="" F  S LEXTAR=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXSRC,LEXORD,LEXTAR)) Q:'$L(LEXTAR)  D
"RTN","LEXRXG",64,0)
 . . . . N LEXIEN S LEXIEN="" F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXSRC,LEXORD,LEXTAR,LEXIEN)) Q:'$L(LEXIEN)  D
"RTN","LEXRXG",65,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXN0,LEXN3,LEXD,LEXS,LEXO,LEXT S LEXN0=$G(^LEX(757.33,+LEXIEN,0)),LEXN3=$G(^LEX(757.33,+LEXIEN,3))
"RTN","LEXRXG",66,0)
 . . . . . S LEXD=$P(LEXN0,"^",4),LEXS=$P(LEXN0,"^",2),LEXO=$P(LEXN3,"^",1),LEXT=$P(LEXN0,"^",3)
"RTN","LEXRXG",67,0)
 . . . . . Q:'$L(LEXD)  Q:'$L(LEXS)  Q:'$L(LEXO)  Q:'$L(LEXT)
"RTN","LEXRXG",68,0)
 . . . . . I LEXDEF'=LEXD!(LEXSRC'=LEXS)!(LEXORD'=LEXO)!(LEXTAR'=LEXT) D
"RTN","LEXRXG",69,0)
 . . . . . . N DA S DA=LEXIEN S LEXERR=LEXERR+1
"RTN","LEXRXG",70,0)
 . . . . . . K ^LEX(LEXFI,LEXIDX,LEXDEF,LEXSRC,LEXORD,LEXTAR,LEXIEN)
"RTN","LEXRXG",71,0)
 . . . . . . S ^LEX(LEXFI,LEXIDX,LEXD,LEXS,LEXO,LEXT,DA)=""
"RTN","LEXRXG",72,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid ",LEXSRC,"/",LEXTAR,?58,"  ",DA
"RTN","LEXRXG",73,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",74,0)
 . N DA,DIK,X,LEXN0,LEXN3,LEXD,LEXS,LEXO,LEXT S DA=LEXIEN,LEXN0=$G(^LEX(757.33,+LEXIEN,0)),LEXN3=$G(^LEX(757.33,+LEXIEN,3))
"RTN","LEXRXG",75,0)
 . S LEXD=$P(LEXN0,"^",4),LEXS=$P(LEXN0,"^",2),LEXO=$P(LEXN3,"^",1),LEXT=$P(LEXN0,"^",3) Q:'$L(LEXD)  Q:'$L(LEXS)  Q:'$L(LEXO)  Q:'$L(LEXT)
"RTN","LEXRXG",76,0)
 . I '$D(^LEX(LEXFI,LEXIDX,LEXD,LEXS,LEXO,LEXT,DA)) D
"RTN","LEXRXG",77,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXS,"/",LEXT,?58,"  ",DA
"RTN","LEXRXG",78,0)
 . S ^LEX(LEXFI,LEXIDX,LEXD,LEXS,LEXO,LEXT,DA)=""
"RTN","LEXRXG",79,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXG",80,0)
 H 2 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXG",81,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXG",82,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXG",83,0)
 Q
"RTN","LEXRXG",84,0)
RG ;   Index    ^LEX(757.33,"G",MAP,EFF,STA,IEN,HIS)
"RTN","LEXRXG",85,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXDEF
"RTN","LEXRXG",86,0)
 S LEXFI="757.33"
"RTN","LEXRXG",87,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.33 ""G""") Q:LEXTC=1
"RTN","LEXRXG",88,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXDEF="",LEXFI=757.33,LEXIDX="G",LEXIDXT="^LEX(757.33,""G"",EXP,IEN)"
"RTN","LEXRXG",89,0)
 F  S LEXDEF=$O(^LEX(LEXFI,LEXIDX,LEXDEF)) Q:'$L(LEXDEF)  D
"RTN","LEXRXG",90,0)
 . N LEXEFF S LEXEFF="" F  S LEXEFF=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXEFF)) Q:'$L(LEXEFF)  D
"RTN","LEXRXG",91,0)
 . . N LEXSTA S LEXSTA="" F  S LEXSTA=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXEFF,LEXSTA)) Q:'$L(LEXSTA)  D
"RTN","LEXRXG",92,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXEFF,LEXSTA,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",93,0)
 . . . . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIDX,LEXDEF,LEXEFF,LEXSTA,LEXIEN,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXG",94,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXN0,LEXHN,LEXD,LEXE,LEXS
"RTN","LEXRXG",95,0)
 . . . . . S LEXN0=$G(^LEX(757.33,+LEXIEN,0)),LEXNH=$G(^LEX(757.33,+LEXIEN,2,+LEXHIS,0))
"RTN","LEXRXG",96,0)
 . . . . . S LEXD=$P(LEXN0,"^",1),LEXE=$P(LEXNH,"^",1),LEXS=$P(LEXNH,"^",2)
"RTN","LEXRXG",97,0)
 . . . . . Q:'$L(LEXD)  Q:'$L(LEXE)  Q:'$L(LEXS)
"RTN","LEXRXG",98,0)
 . . . . . I LEXDEF'=LEXD!(LEXEFF'=LEXE)!(LEXSTA'=LEXS) D
"RTN","LEXRXG",99,0)
 . . . . . . N DA,LEXED,LEXSD S DA(1)=LEXIEN,DA=LEXHIS S LEXERR=LEXERR+1
"RTN","LEXRXG",100,0)
 . . . . . . S LEXED=$TR($$FMTE^XLFDT(LEXEFF,"5DZ"),"@"," ")
"RTN","LEXRXG",101,0)
 . . . . . . S LEXSD=$S(+LEXSTA>0:"Active",1:"Inactive")
"RTN","LEXRXG",102,0)
 . . . . . . K ^LEX(757.33,"G",LEXDEF,LEXEFF,LEXSTA,DA(1))
"RTN","LEXRXG",103,0)
 . . . . . . S ^LEX(757.33,"G",LEXD,LEXE,LEXS,DA(1))=""
"RTN","LEXRXG",104,0)
 . . . . . . S ^LEX(757.33,"G",LEXD,LEXE,LEXS,DA(1),DA)=""
"RTN","LEXRXG",105,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid ",LEXED," ",LEXSD,?58,"  ",DA(1),"/",DA
"RTN","LEXRXG",106,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",107,0)
 . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIEN,2,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXG",108,0)
 . . N DA,DIK,X,LEXN0,LEXHN,LEXD,LEXE,LEXS,LEXED,LEXSD
"RTN","LEXRXG",109,0)
 . . S DA(1)=LEXIEN,DA=LEXHIS
"RTN","LEXRXG",110,0)
 . . S LEXN0=$G(^LEX(757.33,+LEXIEN,0))
"RTN","LEXRXG",111,0)
 . . S LEXNH=$G(^LEX(757.33,+LEXIEN,2,+LEXHIS,0))
"RTN","LEXRXG",112,0)
 . . S LEXD=$P(LEXN0,"^",1),LEXE=$P(LEXNH,"^",1),LEXS=$P(LEXNH,"^",2) Q:'$L(LEXD)  Q:'$L(LEXE)  Q:'$L(LEXS)
"RTN","LEXRXG",113,0)
 . . S LEXED=$TR($$FMTE^XLFDT(LEXE,"5DZ"),"@"," ")
"RTN","LEXRXG",114,0)
 . . S LEXSD=$S(+LEXS>0:"Active",1:"Inactive")
"RTN","LEXRXG",115,0)
 . . I $D(^LEX(LEXFI,LEXIDX,LEXD,LEXE,LEXS,DA(1)))<11 D
"RTN","LEXRXG",116,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXED," ",LEXSD,?58,"  ",DA(1),"/",DA
"RTN","LEXRXG",117,0)
 . . S ^LEX(LEXFI,LEXIDX,LEXD,LEXE,LEXS,DA(1))=""
"RTN","LEXRXG",118,0)
 . . S ^LEX(LEXFI,LEXIDX,LEXD,LEXE,LEXS,DA(1),DA)=""
"RTN","LEXRXG",119,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXG",120,0)
 H 2 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXG",121,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXG",122,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXG",123,0)
 Q
"RTN","LEXRXG",124,0)
 ;              
"RTN","LEXRXG",125,0)
 ; Miscellaneous
"RTN","LEXRXG",126,0)
SET ;   Re-Index Subset file 757.33 (Set logic only)
"RTN","LEXRXG",127,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT
"RTN","LEXRXG",128,0)
 N LEXOUT,LEXMSG S LEXFI=757.33
"RTN","LEXRXG",129,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG")
"RTN","LEXRXG",130,0)
 S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXG",131,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXG",132,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXG",133,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI))
"RTN","LEXRXG",134,0)
 Q:LEXTC=1  I '$D(ZTQUEUED) W !,?8,"Re-Indexing",!
"RTN","LEXRXG",135,0)
 N LEXIEN,LEXP3,LEXP4 S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXG",136,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXG",137,0)
 . N DA,DIK S DA=+($G(LEXIEN)) I $D(LEXFIX) D FIX(DA)
"RTN","LEXRXG",138,0)
 . I $D(^LEX(LEXFI,LEXIEN)) D
"RTN","LEXRXG",139,0)
 . . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXG",140,0)
 . . S DA=LEXIEN,DIK=LEXRT D IX1^DIK
"RTN","LEXRXG",141,0)
 S $P(^LEX(LEXFI,0),"^",3)=LEXP3,$P(^LEX(LEXFI,0),"^",4)=LEXP4
"RTN","LEXRXG",142,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXG",143,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXG",144,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXG",145,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXG",146,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXG",147,0)
 Q
"RTN","LEXRXG",148,0)
FIX(X) ;   Fix Inactive Mappings 757.33
"RTN","LEXRXG",149,0)
 N DA,DIK,LEXDEF,LEXEF,LEXEF1,LEXHIS,LEXMAP,LEXN0,LEXNC,LEXNE,LEXNEXT
"RTN","LEXRXG",150,0)
 N LEXNH,LEXNS,LEXSCODE,LEXSEFF,LEXSIEN,LEXSNOM,LEXSRC,LEXSSAB,LEXSSTA
"RTN","LEXRXG",151,0)
 N LEXSSYS,LEXST,LEXTCODE,LEXTD,LEXTEFF,LEXTIEN,LEXTNON,LEXTSAB
"RTN","LEXRXG",152,0)
 N LEXTSTA,LEXTSYS S LEXTD=$$DT^XLFDT,DA=+($G(X)) Q:+DA'>0
"RTN","LEXRXG",153,0)
 Q:'$D(^LEX(757.33,DA,0))  Q:'$D(^LEX(757.33,DA,2))
"RTN","LEXRXG",154,0)
 S LEXN0=$G(^LEX(757.33,DA,0))
"RTN","LEXRXG",155,0)
 S LEXEF=$O(^LEX(757.33,+DA,2,"B",(LEXTD+.001)),-1) Q:LEXEF'?7N
"RTN","LEXRXG",156,0)
 S LEXEF1=$$FMADD^XLFDT(LEXEF,1) Q:LEXEF1'?7N  Q:LEXEF1'<LEXTD
"RTN","LEXRXG",157,0)
 S LEXHIS=$O(^LEX(757.33,+DA,2,"B",+LEXEF," "),-1)
"RTN","LEXRXG",158,0)
 S LEXNH=$G(^LEX(757.33,+DA,2,+LEXHIS,0)) S LEXST=$P(LEXNH,"^",2)
"RTN","LEXRXG",159,0)
 Q:LEXST'>0  S LEXSCODE=$P(LEXN0,"^",2) S LEXTCODE=$P(LEXN0,"^",3)
"RTN","LEXRXG",160,0)
 S LEXMAP=$P(LEXN0,"^",4) S LEXDEF=$G(^LEX(757.32,+LEXMAP,2))
"RTN","LEXRXG",161,0)
 S LEXSSYS=$P(LEXDEF,"^",1),LEXTSYS=$P(LEXDEF,"^",2)
"RTN","LEXRXG",162,0)
 S LEXSRC=$G(^LEX(757.03,LEXSSYS,0))
"RTN","LEXRXG",163,0)
 S LEXSSAB=$E(LEXSRC,1,3),LEXSNOM=$P(LEXSRC,"^",2)
"RTN","LEXRXG",164,0)
 S LEXSRC=$G(^LEX(757.03,LEXTSYS,0))
"RTN","LEXRXG",165,0)
 S LEXTSAB=$E(LEXSRC,1,3),LEXTNON=$P(LEXSRC,"^",2)
"RTN","LEXRXG",166,0)
 S LEXSSTA=$$STATCHK^LEXSRC2(LEXSCODE,LEXTD,,LEXSSAB)
"RTN","LEXRXG",167,0)
 S LEXSIEN=$P(LEXSSTA,"^",2),LEXSEFF=$P(LEXSSTA,"^",3)
"RTN","LEXRXG",168,0)
 S LEXTSTA=$$STATCHK^LEXSRC2(LEXTCODE,LEXTD,,LEXTSAB)
"RTN","LEXRXG",169,0)
 S LEXTIEN=$P(LEXTSTA,"^",2),LEXTEFF=$P(LEXSSTA,"^",3)
"RTN","LEXRXG",170,0)
 Q:+LEXSSTA>0&(+LEXTSTA>0)  S LEXNEXT=$O(^LEX(757.33,+DA,2," "),-1)+1
"RTN","LEXRXG",171,0)
 S LEXNS=0,LEXNE=LEXEF1,LEXNC=$$NOW^XLFDT I $D(LEXFIX) D
"RTN","LEXRXG",172,0)
 . N DIK S DIK="^LEX(757.33," D IX2^DIK
"RTN","LEXRXG",173,0)
 . S ^LEX(757.33,+DA,2,0)="^757.333D^"_LEXNEXT_"^"_LEXNEXT
"RTN","LEXRXG",174,0)
 . S ^LEX(757.33,+DA,2,+LEXNEXT,0)=LEXNE_"^"_LEXNS_"^"_LEXNC
"RTN","LEXRXG",175,0)
 . W "."
"RTN","LEXRXG",176,0)
 . S DIK="^LEX(757.33," D IX1^DIK
"RTN","LEXRXG",177,0)
 Q
"RTN","LEXRXG",178,0)
CLR ;   Clear
"RTN","LEXRXG",179,0)
 K LEXFIX,LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXG",180,0)
 Q
"RTN","LEXRXXP")
0^221^B22155217
"RTN","LEXRXXP",1,0)
LEXRXXP ;ISL/KER - Re-Index Parse ;04/21/2014
"RTN","LEXRXXP",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXXP",3,0)
 ;               
"RTN","LEXRXXP",4,0)
 ; Global Variables
"RTN","LEXRXXP",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXXP",6,0)
 ;    ^LEX(757,           SACC 1.3
"RTN","LEXRXXP",7,0)
 ;    ^LEX(757.01,        SACC 1.3 
"RTN","LEXRXXP",8,0)
 ;    ^LEX(757.05,        SACC 1.3 
"RTN","LEXRXXP",9,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXRXXP",10,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXRXXP",11,0)
 ;               
"RTN","LEXRXXP",12,0)
 ; External References
"RTN","LEXRXXP",13,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXRXXP",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXXP",15,0)
 ;               
"RTN","LEXRXXP",16,0)
 Q
"RTN","LEXRXXP",17,0)
AWRD(X,LEX1,LEXI) ;   Get Words
"RTN","LEXRXXP",18,0)
 N LEXEX,LEXE,LEXT,LEXMC,LEXMCE,LEXW K LEX1 S LEX1(0)=0 S LEXEX=+($G(X)) Q:+LEXEX'>0!('$D(^LEX(757.01,+LEXEX,0)))
"RTN","LEXRXXP",19,0)
 S LEXMC=+($G(^LEX(757.01,+LEXEX,1))),LEXMCE=$$MCE(LEXEX) Q:'$D(^LEX(757,+LEXMC,0))  Q:'$D(^LEX(757.01,+LEXMCE,0))
"RTN","LEXRXXP",20,0)
 S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AMC",LEXMC,LEXE)) Q:+LEXE'>0  D
"RTN","LEXRXXP",21,0)
 . N LEX2,LEXT S LEXT=$P($G(^LEX(757.01,+LEXE,0)),"^",1)
"RTN","LEXRXXP",22,0)
 . D WORDS(LEXT,.LEX2) S LEXT="" F  S LEXT=$O(LEX2(LEXT)) Q:'$L(LEXT)  D
"RTN","LEXRXXP",23,0)
 . . S LEX1("W",LEXT,LEXMCE,LEXE)=""
"RTN","LEXRXXP",24,0)
 S LEX1(0)="Word^Major Concept Expression IEN^Expression IEN"
"RTN","LEXRXXP",25,0)
 Q
"RTN","LEXRXXP",26,0)
WORDS(X,LEXA) ;
"RTN","LEXRXXP",27,0)
 K LEXA N LEXIDX,LEXI1,LEXI2,LEX1,LEXW S X=$$UP^XLFSTR(X) S:+($G(LEXI))>0 LEXIDX="" K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEXRXXP",28,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXI1=0 F  S LEXI1=$O(^TMP("LEXTKN",$J,LEXI1)) Q:+LEXI1'>0  D
"RTN","LEXRXXP",29,0)
 . S LEXI2="" F LEXI2=$O(^TMP("LEXTKN",$J,LEXI1,LEXI2)) Q:'$L(LEXI2)  S LEXA(LEXI2)=""
"RTN","LEXRXXP",30,0)
 K ^TMP("LEXTKN",$J)
"RTN","LEXRXXP",31,0)
 Q 
"RTN","LEXRXXP",32,0)
SUP(X,LEX1,LEXI) ;   Get Supplemental Words
"RTN","LEXRXXP",33,0)
 N LEXEX,LEXE,LEXT,LEXMC,LEXMCE,LEXW K LEX1 S LEX1(0)=0 S LEXEX=+($G(X)) Q:+LEXEX'>0!('$D(^LEX(757.01,+LEXEX,0)))
"RTN","LEXRXXP",34,0)
 S LEXMC=+($G(^LEX(757.01,+LEXEX,1))),LEXMCE=$$MCE(LEXEX) Q:'$D(^LEX(757,+LEXMC,0))  Q:'$D(^LEX(757.01,+LEXMCE,0))
"RTN","LEXRXXP",35,0)
 S LEXE=0 F  S LEXE=$O(^LEX(757.01,LEXEX,5,LEXE)) Q:+LEXE'>0  D
"RTN","LEXRXXP",36,0)
 . N LEX2,LEXT S LEXT=$P($G(^LEX(757.01,LEXEX,5,+LEXE,0)),"^",1)
"RTN","LEXRXXP",37,0)
 . S:$L(LEXT) LEX1("S",LEXT,LEXEX,LEXMCE,+LEXE)=""
"RTN","LEXRXXP",38,0)
 S LEX1(0)="Word^Expression IEN^Major Concept Expression IEN"
"RTN","LEXRXXP",39,0)
 Q
"RTN","LEXRXXP",40,0)
LINK(X,LEX1) ;   Get Linked Words
"RTN","LEXRXXP",41,0)
 K LEX1 N LEXE,LEXEX,LEXMC,LEXMCE,LEXW,LEXTK,LEXB,LEXC,LEXI,LEXIEN S LEXEX=$G(X) Q:'$D(^LEX(757.01,+LEXEX,0))
"RTN","LEXRXXP",42,0)
 S LEXMC=+($P($G(^LEX(757.01,+LEXEX,1)),"^",1)) Q:'$D(^LEX(757,+LEXMC,0))  S LEXMCE=$$MCE(LEXEX) Q:'$D(^LEX(757.01,+LEXMCE,0))
"RTN","LEXRXXP",43,0)
 ;       Physical
"RTN","LEXRXXP",44,0)
 D AWRD(LEXEX,.LEXW,0) S LEXE=0 F  S LEXE=$O(^LEX(757.01,LEXEX,5,LEXE)) Q:+LEXE'>0  D
"RTN","LEXRXXP",45,0)
 . N LEXT S LEXT=$P($G(^LEX(757.01,LEXEX,5,+LEXE,0)),"^",1) S:$L(LEXT) LEXW("W",LEXT,LEXEX,LEXMCE,+LEXE)=""
"RTN","LEXRXXP",46,0)
 S LEXB=$E($$UP^XLFSTR($P($G(^LEX(757.01,+LEXEX,0)),"^",1)),1,63)
"RTN","LEXRXXP",47,0)
 S LEXI=0 S:$L(LEXB) LEXI=$O(^LEX(757.05,"C",LEXB,0))
"RTN","LEXRXXP",48,0)
 S:+LEXI>0&($L(LEXB)) LEXW("W",LEXB,LEXEX,LEXMCE)=LEXI
"RTN","LEXRXXP",49,0)
 S LEXTK="" F  S LEXTK=$O(LEXW("W",LEXTK)) Q:'$L(LEXTK)  D
"RTN","LEXRXXP",50,0)
 . N LEXI,LEXIEN,LEXPH S LEXPH=$$UP^XLFSTR($E(LEXTK,1,40)),LEXIEN=+($G(LEXW("W",LEXTK,LEXEX,LEXMCE)))
"RTN","LEXRXXP",51,0)
 . S LEXI=0 F  S LEXI=$O(^LEX(757.05,"B",LEXPH,LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXXP",52,0)
 . . N LEXT S LEXT="" S:+LEXI>0 LEXT=$P($G(^LEX(757.05,+LEXI,0)),"^",3)
"RTN","LEXRXXP",53,0)
 . . S:$L(LEXPH)&(+LEXI>0) LEX1("TXT",LEXPH)=LEXI,LEX1("IEN",+LEXI,LEXPH)=LEXT
"RTN","LEXRXXP",54,0)
 . . I $D(^LEX(757.05,+LEXI,1,"B",+LEXEX)),$L(LEXT) D
"RTN","LEXRXXP",55,0)
 . . . S LEX1(LEXT,LEXPH,LEXEX,"LINKED")=LEXI_"^"_$G(^LEX(757.05,+LEXI,0))
"RTN","LEXRXXP",56,0)
 . . . K:$L(LEXT) LEX1("IEN"),LEX1("TXT")
"RTN","LEXRXXP",57,0)
 . I LEXIEN>0 S LEXT=$P($G(^LEX(757.05,+LEXIEN,0)),"^",3) S:$L(LEXT) LEX1("TXT",$$UP^XLFSTR(LEXTK))=LEXIEN,LEX1("IEN",+LEXIEN,$$UP^XLFSTR(LEXTK))=LEXT
"RTN","LEXRXXP",58,0)
 ;       Replacement
"RTN","LEXRXXP",59,0)
 S LEXI=0 F  S LEXI=$O(LEX1("IEN",LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXXP",60,0)
 . N LEXPH S LEXPH="" F  S LEXPH=$O(LEX1("IEN",LEXI,LEXPH)) Q:'$L(LEXPH)  D
"RTN","LEXRXXP",61,0)
 . . N LEXT S LEXT=$G(LEX1("IEN",LEXI,LEXPH)) D:LEXT="R"
"RTN","LEXRXXP",62,0)
 . . . N LEXA,LEXB S X=LEXPH N LEXIDX D PTX^LEXTOKN
"RTN","LEXRXXP",63,0)
 . . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 S LEXA=0 F  S LEXA=$O(^TMP("LEXTKN",$J,LEXA)) Q:+LEXA'>0  D
"RTN","LEXRXXP",64,0)
 . . . . N LEXB S LEXB="" F  S LEXB=$O(^TMP("LEXTKN",$J,LEXA,LEXB)) Q:'$L(LEXB)  D
"RTN","LEXRXXP",65,0)
 . . . . . N LEXMCE S LEXMCE=$$MCE(LEXEX)
"RTN","LEXRXXP",66,0)
 . . . . . S LEX1("IEN",LEXI,LEXPH,"W",LEXB)="",LEX1(LEXT,LEXB,LEXMCE,"LINKED")=LEXI_"^"_$G(^LEX(757.05,+LEXI,0))
"RTN","LEXRXXP",67,0)
 . . K:$L(LEXT) LEX1("IEN"),LEX1("TXT")
"RTN","LEXRXXP",68,0)
 Q
"RTN","LEXRXXP",69,0)
PR(LEX,X) ; Parse Array LEX in X Length Strings (default 79)
"RTN","LEXRXXP",70,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXRXXP",71,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXRXXP",72,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXRXXP",73,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXRXXP",74,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXRXXP",75,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXRXXP",76,0)
 Q
"RTN","LEXRXXP",77,0)
MCE(X) ; Major Concept Expression
"RTN","LEXRXXP",78,0)
 S X=+($G(^LEX(757,+($G(^LEX(757.01,+($G(X)),1))),0)))
"RTN","LEXRXXP",79,0)
 Q X
"RTN","LEXRXXP",80,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","LEXRXXP",81,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXRXXP",82,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXRXXP",83,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXRXXP",84,0)
 Q X
"RTN","LEXRXXS")
0^197^B125584554
"RTN","LEXRXXS",1,0)
LEXRXXS ;ISL/KER - Re-Index Save/Send ;04/21/2014
"RTN","LEXRXXS",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXXS",3,0)
 ;               
"RTN","LEXRXXS",4,0)
 ; Global Variables
"RTN","LEXRXXS",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXXS",6,0)
 ;    ^LEXT(              SACC 1.3
"RTN","LEXRXXS",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXXS",8,0)
 ;               
"RTN","LEXRXXS",9,0)
 ; External References
"RTN","LEXRXXS",10,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXXS",11,0)
 ;    $$TITLE^XLFSTR      ICR  10104
"RTN","LEXRXXS",12,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXRXXS",13,0)
 ;    ^DIC                ICR  10006
"RTN","LEXRXXS",14,0)
 ;    ^XMD                ICR  10070
"RTN","LEXRXXS",15,0)
 ;               
"RTN","LEXRXXS",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXXS",17,0)
 ;     LEXAMSO    User Selection  NEWed/KILLed by LEXRX
"RTN","LEXRXXS",18,0)
 ;     LEXSUBJ    Msg Subject     NEWed/KILLed by LEXRXXT
"RTN","LEXRXXS",19,0)
 ;     LEXTITL    Msg Title       NEWed/KILLed by LEXRXXT
"RTN","LEXRXXS",20,0)
 ;     LEXFMT     Display format  NEWed/KILLed by LEXRXXT2
"RTN","LEXRXXS",21,0)
 ;     LEXQ       Quiet flag      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXXS",22,0)
 ;     LEXNAM     Task Name       NEWed/KILLed by LEXRXXT2
"RTN","LEXRXXS",23,0)
 ;     LEXINS     Install Flag    NEWed/KILLed by Post-Install
"RTN","LEXRXXS",24,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXXS",25,0)
 ;
"RTN","LEXRXXS",26,0)
 Q
"RTN","LEXRXXS",27,0)
 ; Repair Index Report
"RTN","LEXRXXS",28,0)
REP(LEXFI,LEXFS,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP) ;   Build
"RTN","LEXRXXS",29,0)
 S LEXFI=$G(LEXFI),LEXFS=$G(LEXFS),LEXIDX=$G(LEXIDX),LEXNDS=+($G(LEXNDS))
"RTN","LEXRXXS",30,0)
 S LEXERR=+($G(LEXERR)),LEXIDXT=$G(LEXIDXT),LEXELP=$G(LEXELP) H 1
"RTN","LEXRXXS",31,0)
 S:+($G(LEXFI))>0&('$L($G(LEXELP))) LEXELP="00:00:01"
"RTN","LEXRXXS",32,0)
 N LEXT,LEXNM,LEXTELP,LEXTERR,LEXTFI,LEXTFS,LEXTIDT,LEXTIDX,LEXTNDS,LEXIDXN
"RTN","LEXRXXS",33,0)
 S LEXTFI=+LEXFI Q:+LEXTFI'>0  Q:$P(LEXTFI,".",1)'="757"  S LEXNM=$$FN(+LEXFI)
"RTN","LEXRXXS",34,0)
 S:'$L(LEXNM) LEXTFI="  "_LEXTFI
"RTN","LEXRXXS",35,0)
 S LEXTFS=+($G(LEXFS))
"RTN","LEXRXXS",36,0)
 Q:+LEXTFS'>0  Q:$P(LEXTFS,".",1)'="757"
"RTN","LEXRXXS",37,0)
 S:'$L(LEXNM) LEXTFS="  "_LEXTFS
"RTN","LEXRXXS",38,0)
 S LEXTIDX=$G(LEXIDX)  Q:'$L(LEXTIDX)
"RTN","LEXRXXS",39,0)
 S LEXTNDS=LEXNDS S:+LEXTNDS'>0 LEXTNDS=""
"RTN","LEXRXXS",40,0)
 I +LEXNDS'>0,+LEXFI>0,+LEXFS>0,$L(LEXIDX),LEXIDX'="ALLIX" D  Q
"RTN","LEXRXXS",41,0)
 . K ^TMP("LEXRX",$J,"D",1,+LEXFI,+LEXFS,LEXIDX)
"RTN","LEXRXXS",42,0)
 . D REPS
"RTN","LEXRXXS",43,0)
 S LEXTERR=+($G(LEXERR)) S:+LEXTERR'>0 LEXTERR=""
"RTN","LEXRXXS",44,0)
 S:+($G(LEXERR))>0 LEXTERR=$J(LEXTERR,7)_" "
"RTN","LEXRXXS",45,0)
 S:+($G(LEXERR))'>0 LEXTERR=" ------ "
"RTN","LEXRXXS",46,0)
 S:+($G(LEXERR))'>0&(LEXIDX="ALLIX") LEXTERR="        "
"RTN","LEXRXXS",47,0)
 S:LEXIDX="ALLIX" LEXTNDS=""
"RTN","LEXRXXS",48,0)
 S LEXTNDS=$J(LEXTNDS,8)_" "
"RTN","LEXRXXS",49,0)
 S LEXTIDT=$G(LEXIDXT)
"RTN","LEXRXXS",50,0)
 S:LEXIDX="ALLIX" LEXIDXT="All Cross-References"
"RTN","LEXRXXS",51,0)
 S LEXIDXT=$E(LEXIDXT,1,35)
"RTN","LEXRXXS",52,0)
 Q:'$L(LEXTIDT)
"RTN","LEXRXXS",53,0)
 S LEXTELP=LEXELP
"RTN","LEXRXXS",54,0)
 S LEXTELP=LEXTELP_$J(" ",(9-$L(LEXTELP)))
"RTN","LEXRXXS",55,0)
 S LEXTFI=LEXTFI_$J(" ",(9-$L(LEXTFI)))
"RTN","LEXRXXS",56,0)
 S LEXTFS=LEXTFS_$J(" ",(9-$L(LEXTFS)))
"RTN","LEXRXXS",57,0)
 S:LEXIDX="ALLIX" LEXTIDX="Re-Index"
"RTN","LEXRXXS",58,0)
 S LEXTIDX=LEXTIDX_$J(" ",(9-$L(LEXTIDX)))
"RTN","LEXRXXS",59,0)
 S:LEXTFI=LEXTFS LEXT=LEXTFI_LEXTIDX_LEXTNDS_LEXTERR_LEXTELP_LEXIDXT
"RTN","LEXRXXS",60,0)
 S:LEXTFI'=LEXTFS LEXT=LEXTFS_LEXTIDX_LEXTNDS_LEXTERR_LEXTELP_LEXIDXT
"RTN","LEXRXXS",61,0)
 S:+($G(LEXERR)) ^TMP("LEXRX",$J,"ERR")=+($G(^TMP("LEXRX",$J,"ERR")))+($G(LEXERR))
"RTN","LEXRXXS",62,0)
 I $L($G(LEXELP)) D
"RTN","LEXRXXS",63,0)
 . N LEXT S LEXT=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXXS",64,0)
 . S ^TMP("LEXRX",$J,"T",1,"ELAP")=$$ADDT^LEXRXXM(LEXT,$G(LEXELP))
"RTN","LEXRXXS",65,0)
 S LEXIDXN=LEXIDX S:LEXIDX="ALLIX" LEXIDXN="~"
"RTN","LEXRXXS",66,0)
 I LEXT["Re-Index"&(LEXT["All Cross-References") D
"RTN","LEXRXXS",67,0)
 . S ^TMP("LEXRX",$J,"D",1,+LEXFI,"~",LEXIDXN)=LEXT
"RTN","LEXRXXS",68,0)
 I LEXT'["Re-Index"!(LEXT'["All Cross-References") D
"RTN","LEXRXXS",69,0)
 . S ^TMP("LEXRX",$J,"D",1,+LEXFI,+LEXFS,LEXIDXN)=LEXT
"RTN","LEXRXXS",70,0)
 D REPS
"RTN","LEXRXXS",71,0)
 Q
"RTN","LEXRXXS",72,0)
REPS ;   Save
"RTN","LEXRXXS",73,0)
 K ^TMP("LEXRX",$J,"R",1)
"RTN","LEXRXXS",74,0)
 N LEXALL,LEXTFI,LEXTFS,LEXTIX,LEXC,LEXT K LEXALL S LEXC=0,LEXTFI="" F  S LEXTFI=$O(^TMP("LEXRX",$J,"D",1,LEXTFI)) Q:'$L(LEXTFI)  D
"RTN","LEXRXXS",75,0)
 . S LEXTFS="" F  S LEXTFS=$O(^TMP("LEXRX",$J,"D",1,LEXTFI,LEXTFS)) Q:'$L(LEXTFS)  D
"RTN","LEXRXXS",76,0)
 . . K LEXALL S LEXTIX="" F  S LEXTIX=$O(^TMP("LEXRX",$J,"D",1,LEXTFI,LEXTFS,LEXTIX)) Q:'$L(LEXTIX)  D
"RTN","LEXRXXS",77,0)
 . . . S LEXT=$G(^TMP("LEXRX",$J,"D",1,LEXTFI,LEXTFS,LEXTIX)) Q:'$L(LEXT)  S LEXC=LEXC+1
"RTN","LEXRXXS",78,0)
 . . . I LEXT["Re-Index"&(LEXT["All Cross-References") S LEXALL=LEXT Q
"RTN","LEXRXXS",79,0)
 . . . I LEXC=1 D
"RTN","LEXRXXS",80,0)
 . . . . S ^TMP("LEXRX",$J,"R",1,1)="Repair Summary (large files only)"
"RTN","LEXRXXS",81,0)
 . . . . S:$G(LEXNAM)="LEXRXONE" ^TMP("LEXRX",$J,"R",1,1)="Repair File"
"RTN","LEXRXXS",82,0)
 . . . . S ^TMP("LEXRX",$J,"R",1,2)="   "
"RTN","LEXRXXS",83,0)
 . . . . S ^TMP("LEXRX",$J,"R",1,3)="File     Index    Nodes    Errors    Time   Index Format"
"RTN","LEXRXXS",84,0)
 . . . . S ^TMP("LEXRX",$J,"R",1,4)="-------- ------   -------- ------- -------- -----------------------------------"
"RTN","LEXRXXS",85,0)
 . . . . S ^TMP("LEXRX",$J,"R",1,0)=4,LEXC=5
"RTN","LEXRXXS",86,0)
 . . . S ^TMP("LEXRX",$J,"R",1,LEXC)=LEXT,^TMP("LEXRX",$J,"R",1,0)=LEXC
"RTN","LEXRXXS",87,0)
 . . I $L($G(LEXALL)) D
"RTN","LEXRXXS",88,0)
 . . . N LEXC S LEXC=$O(^TMP("LEXRX",$J,"R",1," "),-1)+1
"RTN","LEXRXXS",89,0)
 . . . S ^TMP("LEXRX",$J,"R",1,LEXC)=LEXALL,^TMP("LEXRX",$J,"R",1,0)=LEXC
"RTN","LEXRXXS",90,0)
 D RCMP
"RTN","LEXRXXS",91,0)
 Q
"RTN","LEXRXXS",92,0)
REPD ;   Display
"RTN","LEXRXXS",93,0)
 N LEXC W ! S LEXC=0 F  S LEXC=$O(^TMP("LEXRX",$J,"R",1,LEXC)) Q:+LEXC'>0  W !,$G(^TMP("LEXRX",$J,"R",1,LEXC))
"RTN","LEXRXXS",94,0)
 W !
"RTN","LEXRXXS",95,0)
 Q
"RTN","LEXRXXS",96,0)
 ;               
"RTN","LEXRXXS",97,0)
 ; Re-Index Report
"RTN","LEXRXXS",98,0)
REX(LEXFI,LEXNM,LEXELP,LEXIX) ;    Build
"RTN","LEXRXXS",99,0)
 K ^TMP("LEXRX",$J,"R",2)
"RTN","LEXRXXS",100,0)
 N LEXI,LEXSP,LEXTFI,LEXTNM,LEXTELP,LEXC S $P(LEXSP," ",40)=" ",LEXFI=+($G(LEXFI))
"RTN","LEXRXXS",101,0)
 S:+($G(LEXFI))>0&($L($G(LEXNM)))&('$L($G(LEXELP))) LEXELP="00:00:01"
"RTN","LEXRXXS",102,0)
 K:+LEXFI>0 ^TMP("LEXRX",$J,"D",2,+LEXFI)
"RTN","LEXRXXS",103,0)
 S LEXTFI=+($G(LEXFI)) Q:+LEXTFI'>0  Q:$P(LEXTFI,".",1)'="757"
"RTN","LEXRXXS",104,0)
 S LEXTFI=LEXTFI_$J(" ",(8-$L(LEXTFI))) S LEXTNM=$G(LEXNM) S LEXTNM=LEXTNM_$J(" ",(22-$L(LEXTNM)))
"RTN","LEXRXXS",105,0)
 S LEXTELP=$G(LEXELP) S LEXTELP=LEXTELP_$J(" ",(10-$L(LEXTELP)))
"RTN","LEXRXXS",106,0)
 S LEXT=LEXTFI_LEXTNM_LEXTELP_$G(LEXIX(1))
"RTN","LEXRXXS",107,0)
 I $L($G(LEXELP)) D
"RTN","LEXRXXS",108,0)
 . S ^TMP("LEXRX",$J,"T",2,"ELAP")=$$ADDT^LEXRXXM($G(^TMP("LEXRX",$J,"T",2,"ELAP")),$G(LEXELP))
"RTN","LEXRXXS",109,0)
 S ^TMP("LEXRX",$J,"D",2,LEXFI,1)=LEXT
"RTN","LEXRXXS",110,0)
 S LEXC=1 I $O(LEXIX(1))>0 D
"RTN","LEXRXXS",111,0)
 . S LEXI=1 F  S LEXI=$O(LEXIX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXXS",112,0)
 . . N LEX S LEX=$G(LEXIX(LEXI)) Q:'$L(LEX)
"RTN","LEXRXXS",113,0)
 . . S LEXT=LEXSP_LEX,LEXC=LEXC+1
"RTN","LEXRXXS",114,0)
 . . W !,LEXT S ^TMP("LEXRX",$J,"D",2,+LEXFI,LEXC)=LEXT
"RTN","LEXRXXS",115,0)
 D REXS
"RTN","LEXRXXS",116,0)
 Q
"RTN","LEXRXXS",117,0)
REXS ;   Save
"RTN","LEXRXXS",118,0)
 K ^TMP("LEXRX",$J,"R",2)
"RTN","LEXRXXS",119,0)
 N LEXFIT,LEXI,LEXC,LEXT,LEXE S LEXC=0,LEXFIT="" F  S LEXFIT=$O(^TMP("LEXRX",$J,"D",2,LEXFIT)) Q:'$L(LEXFIT)  D
"RTN","LEXRXXS",120,0)
 . S LEXI=0 F  S LEXI=$O(^TMP("LEXRX",$J,"D",2,LEXFIT,LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXXS",121,0)
 . . S LEXT=$G(^TMP("LEXRX",$J,"D",2,LEXFIT,LEXI)) Q:'$L(LEXT)  S LEXC=LEXC+1 I LEXC=1 D
"RTN","LEXRXXS",122,0)
 . . . S ^TMP("LEXRX",$J,"R",2,1)="Re-Index Summary (small files only)"
"RTN","LEXRXXS",123,0)
 . . . S:$G(LEXNAM)="LEXRXONE" ^TMP("LEXRX",$J,"R",2,1)="Re-Index File"
"RTN","LEXRXXS",124,0)
 . . . S ^TMP("LEXRX",$J,"R",2,2)=" "
"RTN","LEXRXXS",125,0)
 . . . S ^TMP("LEXRX",$J,"R",2,3)="File    File Name               Time    Cross-References"
"RTN","LEXRXXS",126,0)
 . . . S ^TMP("LEXRX",$J,"R",2,4)="------- --------------------- --------  -------------------------------------"
"RTN","LEXRXXS",127,0)
 . . . S ^TMP("LEXRX",$J,"R",2,0)=4,LEXC=5
"RTN","LEXRXXS",128,0)
 . . S ^TMP("LEXRX",$J,"R",2,LEXC)=LEXT,^TMP("LEXRX",$J,"R",2,0)=LEXC
"RTN","LEXRXXS",129,0)
 D RCMP
"RTN","LEXRXXS",130,0)
 Q
"RTN","LEXRXXS",131,0)
REXD ;   Display
"RTN","LEXRXXS",132,0)
 N LEXC W ! S LEXC=0 F  S LEXC=$O(^TMP("LEXRX",$J,"R",2,LEXC)) Q:+LEXC'>0  W !,$G(^TMP("LEXRX",$J,"R",2,LEXC))
"RTN","LEXRXXS",133,0)
 W !
"RTN","LEXRXXS",134,0)
 Q
"RTN","LEXRXXS",135,0)
 ;               
"RTN","LEXRXXS",136,0)
 ; Compile Report (Repair/Re-Index)
"RTN","LEXRXXS",137,0)
RCMP ;   Compile
"RTN","LEXRXXS",138,0)
 K ^TMP("LEXRX",$J,"R",3)
"RTN","LEXRXXS",139,0)
 N LEXI,LEXC,LEXE,LEXN1,LEXN2,LEXTT,LEXT1,LEXT2,LEXLEN
"RTN","LEXRXXS",140,0)
 S LEXLEN=33 S:$G(LEXFMT)=2!($G(LEXFMT)=0) LEXLEN=30
"RTN","LEXRXXS",141,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(^TMP("LEXRX",$J,"R",1,LEXI))  Q:+LEXI'>0  D
"RTN","LEXRXXS",142,0)
 . N LEXT S LEXC=LEXC+1,LEXT=$G(^TMP("LEXRX",$J,"R",1,LEXI)),^TMP("LEXRX",$J,"R",3,LEXC)=LEXT
"RTN","LEXRXXS",143,0)
 I $O(^TMP("LEXRX",$J,"R",1,0))>0,$O(^TMP("LEXRX",$J,"R",2,0))>0 D
"RTN","LEXRXXS",144,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1,^TMP("LEXRX",$J,"R",3,LEXC)=" "
"RTN","LEXRXXS",145,0)
 S LEXI=0 F  S LEXI=$O(^TMP("LEXRX",$J,"R",2,LEXI))  Q:+LEXI'>0  D
"RTN","LEXRXXS",146,0)
 . N LEXT S LEXC=LEXC+1,LEXT=$G(^TMP("LEXRX",$J,"R",2,LEXI)),^TMP("LEXRX",$J,"R",3,LEXC)=LEXT
"RTN","LEXRXXS",147,0)
 S LEXTT=$$TOT^LEXRXXM
"RTN","LEXRXXS",148,0)
 S LEXT1=$G(^TMP("LEXRX",$J,"T",1,"ELAP")),LEXT2=$G(^TMP("LEXRX",$J,"T",2,"ELAP"))
"RTN","LEXRXXS",149,0)
 S LEXN1=+($P(LEXT1,":",1))+($P(LEXT1,":",2))+($P(LEXT1,":",3))
"RTN","LEXRXXS",150,0)
 S LEXN2=+($P(LEXT2,":",1))+($P(LEXT2,":",2))+($P(LEXT2,":",3))
"RTN","LEXRXXS",151,0)
 S:LEXN1'>0&($G(LEXAMSO)="O")&(+($G(LEXFI))>0) LEXTT=$$ADD^LEXRXXM(LEXT1,1)
"RTN","LEXRXXS",152,0)
 S:LEXN2'>0&($G(LEXAMSO)="O")&(+($G(LEXFI))>0) LEXTT=$$ADD^LEXRXXM(LEXT2,1)
"RTN","LEXRXXS",153,0)
 S:LEXN1>0&(LEXN2'>0) LEXTT=$$ADD^LEXRXXM(LEXT1,1)
"RTN","LEXRXXS",154,0)
 S:LEXN1'>0&(LEXN2>0) LEXTT=$$ADD^LEXRXXM(LEXT2,1)
"RTN","LEXRXXS",155,0)
 S:LEXN1>0&(LEXN2>0) LEXTT=$$ADDT^LEXRXXM(LEXT1,LEXT2)
"RTN","LEXRXXS",156,0)
 S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1,^TMP("LEXRX",$J,"R",3,LEXC)=" "
"RTN","LEXRXXS",157,0)
 I $G(LEXFMT)=3 D
"RTN","LEXRXXS",158,0)
 . Q  S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1,^TMP("LEXRX",$J,"R",3,LEXC)=" Elapsed Time"
"RTN","LEXRXXS",159,0)
 . I +($G(LEXN1))>0 D
"RTN","LEXRXXS",160,0)
 . . N LEXT S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1,LEXT="     Repair Large Files:",LEXT=LEXT_$J(" ",(LEXLEN-$L(LEXT)))
"RTN","LEXRXXS",161,0)
 . . S ^TMP("LEXRX",$J,"R",3,LEXC)=LEXT_$G(LEXT1)
"RTN","LEXRXXS",162,0)
 . I +($G(LEXN2))>0 D
"RTN","LEXRXXS",163,0)
 . . N LEXT S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1
"RTN","LEXRXXS",164,0)
 . . S LEXT="     Re-Index Small Files:",LEXT=LEXT_$J(" ",(LEXLEN-$L(LEXT)))
"RTN","LEXRXXS",165,0)
 . . S ^TMP("LEXRX",$J,"R",3,LEXC)=LEXT_$G(LEXT2)
"RTN","LEXRXXS",166,0)
 . I +LEXN1>0!(LEXN2>0) D
"RTN","LEXRXXS",167,0)
 . . N LEXT S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1,LEXT="     Total All Files:",LEXT=LEXT_$J(" ",(LEXLEN-$L(LEXT)))
"RTN","LEXRXXS",168,0)
 . . S ^TMP("LEXRX",$J,"R",3,LEXC)=LEXT_$G(LEXTT)
"RTN","LEXRXXS",169,0)
 I $G(LEXFMT)=1 D
"RTN","LEXRXXS",170,0)
 . Q  N LEXE,LEXT S LEXT=" Repair Large Files:"
"RTN","LEXRXXS",171,0)
 . S:$G(LEXAMSO)="O"&(+($G(LEXFI))>0) LEXT=" Repair File "_+($G(LEXFI))_":"
"RTN","LEXRXXS",172,0)
 . S LEXT=LEXT_$J(" ",(LEXLEN-$L(LEXT)))
"RTN","LEXRXXS",173,0)
 . S LEXE=$$ADD^LEXRXXM($G(LEXT1),1) I +($G(LEXN1))>0!(LEXAMSO="O") D
"RTN","LEXRXXS",174,0)
 . . S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1
"RTN","LEXRXXS",175,0)
 . . S ^TMP("LEXRX",$J,"R",3,LEXC)=LEXT_$G(LEXE)
"RTN","LEXRXXS",176,0)
 I $G(LEXFMT)=2 D
"RTN","LEXRXXS",177,0)
 . Q  N LEXE,LEXT S LEXT=" Re-Index Small Files:"
"RTN","LEXRXXS",178,0)
 . S:$G(LEXAMSO)="O"&(+($G(LEXFI))>0) LEXT=" Re-Index File "_+($G(LEXFI))_":"
"RTN","LEXRXXS",179,0)
 . S:$G(LEXTITL)["Kill" LEXT=" Kill/Re-Index All Files:"
"RTN","LEXRXXS",180,0)
 . S LEXT=LEXT_$J(" ",(LEXLEN-$L(LEXT)))
"RTN","LEXRXXS",181,0)
 . N LEXE S LEXE=$$ADD^LEXRXXM(LEXT2,1) I +LEXN2>0!($G(LEXAMSO)="O") D
"RTN","LEXRXXS",182,0)
 . . S LEXC=$O(^TMP("LEXRX",$J,"R",3," "),-1)+1
"RTN","LEXRXXS",183,0)
 . . S ^TMP("LEXRX",$J,"R",3,LEXC)=LEXT_$G(LEXE)
"RTN","LEXRXXS",184,0)
 Q
"RTN","LEXRXXS",185,0)
RCMD ;   Display
"RTN","LEXRXXS",186,0)
 N LEXC W ! S LEXC=0 F  S LEXC=$O(^TMP("LEXRX",$J,"R",3,LEXC)) Q:+LEXC'>0  W !,$G(^TMP("LEXRX",$J,"R",3,LEXC))
"RTN","LEXRXXS",187,0)
 W !
"RTN","LEXRXXS",188,0)
 Q
"RTN","LEXRXXS",189,0)
 ;                
"RTN","LEXRXXS",190,0)
SEND ; Task MAILMAN to Send Message
"RTN","LEXRXXS",191,0)
 G:$D(LEXQ) MAILQ N LEX,LEXC,LEXI,LEXS,LEXT
"RTN","LEXRXXS",192,0)
 K ^TMP("LEXRX",$J,"MSG")
"RTN","LEXRXXS",193,0)
 S LEXC=1,LEXI=0 F  S LEXI=$O(^TMP("LEXRX",$J,"R",3,LEXI)) Q:+LEXI'>0  D
"RTN","LEXRXXS",194,0)
 . S LEXT=$E($G(^TMP("LEXRX",$J,"R",3,LEXI)),1,79)
"RTN","LEXRXXS",195,0)
 . I LEXT[" (large files only)"!(LEXT[" (small files only)") D  Q
"RTN","LEXRXXS",196,0)
 . . S LEXC=LEXC+1,^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",197,0)
 . S LEXC=LEXC+1,^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",198,0)
 D ERR,SUM S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)
"RTN","LEXRXXS",199,0)
 I +LEXC>1 S ^TMP("LEXRX",$J,"MSG",1,0)=" ",^TMP("LEXRX",$J,"MSG",(LEXC+1),0)=" "
"RTN","LEXRXXS",200,0)
 S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1),^TMP("LEXRX",$J,"MSG",0)=+LEXC
"RTN","LEXRXXS",201,0)
 S LEXS="Lexicon Index Repair/Re-Index Report" S:$L($G(LEXSUBJ)) LEXS=$G(LEXSUBJ)
"RTN","LEXRXXS",202,0)
 D PRG,MAIL,HOME^%ZIS
"RTN","LEXRXXS",203,0)
 Q
"RTN","LEXRXXS",204,0)
MAIL ;   MAILMAN
"RTN","LEXRXXS",205,0)
 N DIFROM,XCNP,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,Y
"RTN","LEXRXXS",206,0)
 G:'$D(^TMP("LEXRX",$J,"MSG")) MAILQ G:+($G(^TMP("LEXRX",$J,"MSG",0)))=0 MAILQ
"RTN","LEXRXXS",207,0)
 K XMZ N DIFROM S XMSUB="Lexicon Cross-Reference Repair/Re-Index"
"RTN","LEXRXXS",208,0)
 S:$L($G(LEXSUBJ)) XMSUB=$G(LEXSUBJ)
"RTN","LEXRXXS",209,0)
 K XMY S:+($G(DUZ))>0 XMY(+($G(DUZ)))=""
"RTN","LEXRXXS",210,0)
 I $D(LEXINS) D
"RTN","LEXRXXS",211,0)
 . K XMY N LEXADR S LEXADR=$$ADR Q:'$L(LEXADR)
"RTN","LEXRXXS",212,0)
 . S LEXADR="G.LEXINS@"_LEXADR S XMY(LEXADR)=""
"RTN","LEXRXXS",213,0)
 G:'$D(XMY) MAILQ
"RTN","LEXRXXS",214,0)
 S XMTEXT="^TMP(""LEXRX"",$J,""MSG"",",XMDUZ=.5 D ^XMD
"RTN","LEXRXXS",215,0)
 I '$D(ZTQUEUED),+($G(XMZ))>0,'$D(LEXINS) D
"RTN","LEXRXXS",216,0)
 . W !!," Lexicon Cross-Reference Repair/Re-Index message (#",+($G(XMZ)),") sent"
"RTN","LEXRXXS",217,0)
MAILQ ;   End of MAILMAN
"RTN","LEXRXXS",218,0)
 K ^TMP("LEXRX",$J) K DIFROM,XCNP,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,Y
"RTN","LEXRXXS",219,0)
 Q
"RTN","LEXRXXS",220,0)
 ;
"RTN","LEXRXXS",221,0)
 ; Miscellaneous
"RTN","LEXRXXS",222,0)
SUM ;   Timing Summary 
"RTN","LEXRXXS",223,0)
 I $O(^TMP("LEXRX",$J,"MSG",0))>0 D
"RTN","LEXRXXS",224,0)
 . N LEXBEG,LEXEND,LEXELP,LEXC
"RTN","LEXRXXS",225,0)
 . S LEXBEG=+($G(^TMP("LEXRX",$J,"P",1))) Q:$P(LEXBEG,".",1)'?7N
"RTN","LEXRXXS",226,0)
 . S LEXEND=+($G(^TMP("LEXRX",$J,"P",2))) Q:$P(LEXEND,".",1)'?7N
"RTN","LEXRXXS",227,0)
 . Q:LEXBEG=LEXEND  S LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3) Q:$L(LEXELP,":")'=3
"RTN","LEXRXXS",228,0)
 . S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXXS",229,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)
"RTN","LEXRXXS",230,0)
 . S LEXT=$$TM^LEXRXXM($G(^TMP("LEXRX",$J,"MSG",LEXC,0)))
"RTN","LEXRXXS",231,0)
 . I $L(LEXT) D
"RTN","LEXRXXS",232,0)
 . . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",233,0)
 . . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=" "
"RTN","LEXRXXS",234,0)
 . S LEXT="Re-Index Started:   "_$$ED^LEXRXXM(LEXBEG)
"RTN","LEXRXXS",235,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",236,0)
 . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",237,0)
 . S LEXT="Re-Index Finished:  "_$$ED^LEXRXXM(LEXEND)
"RTN","LEXRXXS",238,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",239,0)
 . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",240,0)
 . S LEXT="Elapsed Time:       "_LEXELP
"RTN","LEXRXXS",241,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",242,0)
 . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",243,0)
 Q
"RTN","LEXRXXS",244,0)
ERR ;   Error Summary 
"RTN","LEXRXXS",245,0)
 I $O(^TMP("LEXRX",$J,"MSG",0))>0 D
"RTN","LEXRXXS",246,0)
 . N LEXE,LEXT,LEXC
"RTN","LEXRXXS",247,0)
 . S LEXE=+($G(^TMP("LEXRX",$J,"ERR"))) Q:LEXE'>0
"RTN","LEXRXXS",248,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)
"RTN","LEXRXXS",249,0)
 . S LEXT=$$TM^LEXRXXM($G(^TMP("LEXRX",$J,"MSG",LEXC,0)))
"RTN","LEXRXXS",250,0)
 . I $L(LEXT) D
"RTN","LEXRXXS",251,0)
 . . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",252,0)
 . . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=" "
"RTN","LEXRXXS",253,0)
 . S LEXT="Errors Repaired:    "
"RTN","LEXRXXS",254,0)
 . S LEXT=LEXT_LEXE
"RTN","LEXRXXS",255,0)
 . S LEXC=$O(^TMP("LEXRX",$J,"MSG"," "),-1)+1
"RTN","LEXRXXS",256,0)
 . S ^TMP("LEXRX",$J,"MSG",LEXC,0)=LEXT
"RTN","LEXRXXS",257,0)
 Q
"RTN","LEXRXXS",258,0)
ADR(LEX) ; Mailing Address -G.LEXINS@FO.DOMAIN.EXT,
"RTN","LEXRXXS",259,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","LEXRXXS",260,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXRXXS",261,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXRXXS",262,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXRXXS",263,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEXRXXS",264,0)
FN(X) ;   Filename
"RTN","LEXRXXS",265,0)
 Q:$D(^LEX(+($G(X)),0)) $$TITLE^XLFSTR($P($G(^LEX(+($G(X)),0)),"^",1))
"RTN","LEXRXXS",266,0)
 Q:$D(^LEXT(+($G(X)),0)) $$TITLE^XLFSTR($P($G(^LEXT(+($G(X)),0)),"^",1))
"RTN","LEXRXXS",267,0)
 Q ""
"RTN","LEXRXXS",268,0)
PRG ;   Purge ^TMP("LEXRX"
"RTN","LEXRXXS",269,0)
 N LEX S LEX="" F  S LEX=$O(^TMP("LEXRX",$J,LEX)) Q:'$L(LEX)  K:LEX'="MSG" ^TMP("LEXRX",$J,LEX)
"RTN","LEXRXXS",270,0)
 Q
"RTN","LEXRXXS",271,0)
ST ;   Show ^TMP
"RTN","LEXRXXS",272,0)
 N LEXNN,LEXNC S LEXNN="^TMP(""LEXRX"","_$J_")",LEXNC="^TMP(""LEXRX"","_$J_","
"RTN","LEXRXXS",273,0)
 W !! F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEXRXXS",274,0)
 W !!
"RTN","LEXRXXS",275,0)
 Q
"RTN","LEXRXXS",276,0)
CLR ;   Clear
"RTN","LEXRXXS",277,0)
 K LEXAMSO,LEXFMT,LEXQ,LEXSUBJ,LEXTITL,LEXINS,ZTQUEUED,LEXNAM
"RTN","LEXRXXS",278,0)
 Q
"RTN","LEXRXXT3")
0^169^B2474933
"RTN","LEXRXXT3",1,0)
LEXRXXT3 ;ISL/KER - Repair/Re-Index - Task (cont) ;04/21/2014
"RTN","LEXRXXT3",2,0)
 ;;2.0;LEXICON UTILITY;**81,80**;Sep 23, 1996;Build 1
"RTN","LEXRXXT3",3,0)
 ;               
"RTN","LEXRXXT3",4,0)
 ; Global Variables
"RTN","LEXRXXT3",5,0)
 ;    ^XTMP("LEXRX")      SACC 2.3.2.5.2
"RTN","LEXRXXT3",6,0)
 ;               
"RTN","LEXRXXT3",7,0)
 ; External References
"RTN","LEXRXXT3",8,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXRXXT3",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXRXXT3",10,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXRXXT3",11,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXXT3",12,0)
 ;               
"RTN","LEXRXXT3",13,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXXT3",14,0)
 ;     LEXQ       Quiet flag      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXXT3",15,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXXT3",16,0)
 ;     ZTSK       Task Number     NEWed/KILLed by Taskman
"RTN","LEXRXXT3",17,0)
 ;
"RTN","LEXRXXT3",18,0)
 Q
"RTN","LEXRXXT3",19,0)
UPD(X,LEXDES,LEXUPD) ; Update Task ^XTMP and ^%ZTSK
"RTN","LEXRXXT3",20,0)
 Q:$D(LEXQ) 0  N LEXNAM,LEXCRE,LEXPRG,LEXTC S LEXTC=0
"RTN","LEXRXXT3",21,0)
 S LEXNAM=$G(X),LEXDES=$G(LEXDES),LEXUPD=$G(LEXUPD)
"RTN","LEXRXXT3",22,0)
 S LEXCRE=$$DT^XLFDT,LEXPRG=$$FMADD^XLFDT(LEXCRE,1)
"RTN","LEXRXXT3",23,0)
 I $L(LEXNAM),'$L(LEXDES),'$L(LEXUPD) K ^XTMP(LEXNAM) Q 0
"RTN","LEXRXXT3",24,0)
 I $L(LEXNAM) I '$D(^XTMP(LEXNAM,0)) D
"RTN","LEXRXXT3",25,0)
 . S ^XTMP(LEXNAM,0)=LEXPRG_"^"_LEXCRE I $L(LEXDES) D
"RTN","LEXRXXT3",26,0)
 . . S $P(^XTMP(LEXNAM,0),"^",3)=$$NOW^XLFDT
"RTN","LEXRXXT3",27,0)
 . . S $P(^XTMP(LEXNAM,0),"^",4)=LEXDES
"RTN","LEXRXXT3",28,0)
 . S:+($G(ZTSK))>0 ^XTMP(LEXNAM,1)=+($G(ZTSK))
"RTN","LEXRXXT3",29,0)
 I $L(LEXNAM),$L(LEXUPD) I $D(^XTMP(LEXNAM,0)) D
"RTN","LEXRXXT3",30,0)
 . S ^XTMP(LEXNAM,2)=$$NOW^XLFDT_"^"_LEXUPD
"RTN","LEXRXXT3",31,0)
 I $D(ZTQUEUED) D
"RTN","LEXRXXT3",32,0)
 . S:$L(LEXDES)&('$L(LEXUPD)) LEXTC=$$S^%ZTLOAD(LEXDES)
"RTN","LEXRXXT3",33,0)
 . S:$L(LEXUPD) LEXTC=$$S^%ZTLOAD(LEXUPD)
"RTN","LEXRXXT3",34,0)
 . S:+($G(ZTSK))>0&($L(LEXNAM)) ^XTMP(LEXNAM,1)=+($G(ZTSK))
"RTN","LEXRXXT3",35,0)
 S X=LEXTC
"RTN","LEXRXXT3",36,0)
 Q X
"RTN","LEXRXXT3",37,0)
 ;              
"RTN","LEXRXXT3",38,0)
 ; Miscellaneous
"RTN","LEXRXXT3",39,0)
CLR ;   Clear
"RTN","LEXRXXT3",40,0)
 K LEXQ,ZTQUEUED,ZTSK
"RTN","LEXRXXT3",41,0)
 Q
"RTN","LEXSC")
0^198^B3537512
"RTN","LEXSC",1,0)
LEXSC ;ISL/KER - Shortcuts Add/Delete ;04/21/2014
"RTN","LEXSC",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXSC",3,0)
 ;               
"RTN","LEXSC",4,0)
 ; Global Variables
"RTN","LEXSC",5,0)
 ;    ^LEX(757.4)         N/A
"RTN","LEXSC",6,0)
 ;    ^LEX(757.41)        N/A
"RTN","LEXSC",7,0)
 ;               
"RTN","LEXSC",8,0)
 ; External References
"RTN","LEXSC",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXSC",10,0)
 ;               
"RTN","LEXSC",11,0)
EN N LEXCX,LEXCXN,LEXDICS,LEXEDIT,LEXRP,LEXE
"RTN","LEXSC",12,0)
CTX S LEXRP="",LEXEDIT=1,LEXE=$$CNT^LEXDCXS,LEXCX=$$EN^LEXDCXS
"RTN","LEXSC",13,0)
 S LEXCXN=$P(LEXCX,"^",2),LEXCX=+LEXCX Q:LEXCX=0
"RTN","LEXSC",14,0)
 W !! W:LEXCX>0 "Edit shortcuts for:  ",$P($G(^LEX(757.41,LEXCX,0)),"^",1),!
"RTN","LEXSC",15,0)
 S:$L($G(^LEX(757.41,LEXCX,2))) LEXDICS=^LEX(757.41,LEXCX,2)
"RTN","LEXSC",16,0)
 F  D EDIT Q:LEXRP[U
"RTN","LEXSC",17,0)
 G:LEXRP[U&(LEXRP'["^^")&(+($G(LEXE))>1) CTX
"RTN","LEXSC",18,0)
 K LEXEDIT,LEXEND,LEXERM,LEXRP,LEXSC,LEXCX,LEX
"RTN","LEXSC",19,0)
 Q
"RTN","LEXSC",20,0)
EDIT ;
"RTN","LEXSC",21,0)
 S LEXSC=$$SC^LEXSC2 Q:LEXRP[U  S LEXSC=$$UP^XLFSTR(LEXSC)
"RTN","LEXSC",22,0)
 I '$L($G(LEXSC))!('$L($G(LEXCX))) S LEXRP=U Q
"RTN","LEXSC",23,0)
 I $D(^LEX(757.4,"ARA",LEXSC,LEXCX)) D FND Q
"RTN","LEXSC",24,0)
 D ADD^LEXSC3
"RTN","LEXSC",25,0)
 Q
"RTN","LEXSC",26,0)
FND ;
"RTN","LEXSC",27,0)
 N LEXDEL,LEXERM,LEXSTR S LEXERM=$O(^LEX(757.4,"ARA",LEXSC,LEXCX,0))
"RTN","LEXSC",28,0)
 S LEXERM=+LEXERM S:LEXERM>0 LEXERM=+($G(^LEX(757.4,LEXERM,0)))
"RTN","LEXSC",29,0)
 S LEXERM=$S(+LEXERM=0:"",1:$G(^LEX(757.01,LEXERM,0)))
"RTN","LEXSC",30,0)
 S LEXSTR=""""_LEXSC_""" already exist as a shortcut "
"RTN","LEXSC",31,0)
 S LEXSTR=LEXSTR_"(in the context of "_LEXCXN_")"
"RTN","LEXSC",32,0)
 S:LEXERM'="" LEXSTR=LEXSTR_" pointing to the term """_LEXERM_""""
"RTN","LEXSC",33,0)
 D WRT^LEXSC2(LEXSTR)
"RTN","LEXSC",34,0)
 S LEXDEL=$$DELOK^LEXSC2 I +LEXDEL>0 D DELS^LEXSC3
"RTN","LEXSC",35,0)
 I '$D(^LEX(757.4,"ARA",LEXSC,LEXCX)) D ADD^LEXSC3
"RTN","LEXSC",36,0)
 Q
"RTN","LEXSC2")
0^199^B9055298
"RTN","LEXSC2",1,0)
LEXSC2 ;ISL/KER - Shortcuts Add/Delete ;04/21/2014
"RTN","LEXSC2",2,0)
 ;;2.0;LEXICON UTILITY;**11,80**;Sep 23, 1996;Build 1
"RTN","LEXSC2",3,0)
 ;               
"RTN","LEXSC2",4,0)
 ; Global Variables
"RTN","LEXSC2",5,0)
 ;    ^DISV(              ICR    510
"RTN","LEXSC2",6,0)
 ;               
"RTN","LEXSC2",7,0)
 ; External References
"RTN","LEXSC2",8,0)
 ;    ^DIR                ICR  10026
"RTN","LEXSC2",9,0)
 ;               
"RTN","LEXSC2",10,0)
WRT(LEXSTR) ;
"RTN","LEXSC2",11,0)
 W ! N LEXI,LEXLEN S LEXLEN=70 F  D  Q:$L(LEXSTR)<LEXLEN
"RTN","LEXSC2",12,0)
 . F LEXI=(LEXLEN+1):-1:0 Q:$E(LEXSTR,LEXI)=" "!(LEXI=0)
"RTN","LEXSC2",13,0)
 . I LEXI>0 W !,?2,$E(LEXSTR,1,(LEXI-1)) S LEXSTR=$E(LEXSTR,(LEXI+1),$L(LEXSTR)) Q
"RTN","LEXSC2",14,0)
 . I LEXI=0 W:$L(LEXSTR) !,?2,LEXSTR S LEXSTR=""
"RTN","LEXSC2",15,0)
 I $L(LEXSTR) W !,?2,LEXSTR
"RTN","LEXSC2",16,0)
 W !
"RTN","LEXSC2",17,0)
 Q
"RTN","LEXSC2",18,0)
DELOK(X) ; Ok to delete?
"RTN","LEXSC2",19,0)
 N DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXSC2",20,0)
 S DIR("A")="Delete current shortcut:  ",DIR("B")="NO",DIR(0)="YAO" D ^DIR
"RTN","LEXSC2",21,0)
 S:X[U LEXRP=U S:X["^^" LEXRP="^^" W ! S X=$S(+($G(Y))=1:1,1:0) Q X
"RTN","LEXSC2",22,0)
 Q
"RTN","LEXSC2",23,0)
ADDOK(X) ; Ok to add?
"RTN","LEXSC2",24,0)
 N DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LEXSC2",25,0)
 S DIR("A")="Add shortcut:  ",DIR("B")="NO",DIR(0)="YAO" D ^DIR
"RTN","LEXSC2",26,0)
 S:X[U LEXRP=U S:X["^^" LEXRP="^^" W ! S X=$S(+($G(Y))=1:1,1:0) Q X
"RTN","LEXSC2",27,0)
SC(X) ; Get shortcut
"RTN","LEXSC2",28,0)
 S DIR("A")="Enter shortcut keyword(s):  "
"RTN","LEXSC2",29,0)
 S DIR("?")="Enter one or more words (up to 63 characters) to use as a shortcut for a term"
"RTN","LEXSC2",30,0)
 S DIR("??")="^D SCHLP^LEXSC2" N Y S DIR(0)="FAO^2:63" D ^DIR
"RTN","LEXSC2",31,0)
 S:X="" LEXRP=U S:X[U LEXRP=U S:X["^^" LEXRP="^^" F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXSC2",32,0)
 W:$D(DTOUT) !,"Try later.",! S:$D(DTOUT) X="",LEXRP=U
"RTN","LEXSC2",33,0)
 S:X[U DUOUT=1 K DIR,DIRUT,DIROUT
"RTN","LEXSC2",34,0)
 Q X
"RTN","LEXSC2",35,0)
SCHLP ; Look-up help
"RTN","LEXSC2",36,0)
 W !!,"Enter one or more words (up to 63 characters) to use as a shortcut to quickly"
"RTN","LEXSC2",37,0)
 W !,"locate a single term without conducting a word search.  This shortcut should"
"RTN","LEXSC2",38,0)
 W !,"be unique to the term as used in the context """,LEXCXN,""""
"RTN","LEXSC2",39,0)
 Q
"RTN","LEXSC2",40,0)
TERM(X) ; Get expression
"RTN","LEXSC2",41,0)
 N DIR,Y S DIR("A")="Select a term for the shortcut:  "
"RTN","LEXSC2",42,0)
 S DIR("?")="    "_$$SQ^LEXHLP  ; PCH 11
"RTN","LEXSC2",43,0)
 S DIR("??")="^D TERMHLP^LEXSC2" N Y S DIR(0)="FAO^2:245" D ^DIR
"RTN","LEXSC2",44,0)
 S DIC="^LEX(757.01," S:X[U LEXRP=U S:X["^^" LEXRP="^^" Q:LEXRP[U "^"
"RTN","LEXSC2",45,0)
 I X=" ",+($G(^DISV(DUZ,DIC)))>0 S X=@(DIC_+($G(^DISV(DUZ,DIC)))_",0)") W " ",X
"RTN","LEXSC2",46,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXSC2",47,0)
 W:$D(DTOUT) !,"Try later.",! S:$D(DTOUT) X=""
"RTN","LEXSC2",48,0)
 S:X[U DUOUT=1 K DIR,DIRUT,DIROUT Q X
"RTN","LEXSC2",49,0)
TERMHLP ; Look-up help  PCH 11
"RTN","LEXSC2",50,0)
 N X S X="" S:$L($G(DIR("?"))) X=$G(DIR("?")) S:'$L(X) X="    "_$$SQ^LEXHLP
"RTN","LEXSC2",51,0)
 W:$L(X) !!,X,!
"RTN","LEXSC2",52,0)
 W !,"    Best results occur using one to three full or partial words without"
"RTN","LEXSC2",53,0)
 W !,"    a suffix (i.e., ""DIABETES"",""DIAB MELL"",""DIAB MELL INSUL"") or"
"RTN","LEXSC2",54,0)
 W !,"    a classification code (ICD, CPT, HCPCS, etc)"
"RTN","LEXSC2",55,0)
 Q
"RTN","LEXSC3")
0^200^B10957166
"RTN","LEXSC3",1,0)
LEXSC3 ;ISL/KER - Shortcuts Add/Delete ;04/21/2014
"RTN","LEXSC3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXSC3",3,0)
 ;               
"RTN","LEXSC3",4,0)
 ; Global Variables
"RTN","LEXSC3",5,0)
 ;    ^LEX(757.4)         N/A
"RTN","LEXSC3",6,0)
 ;               
"RTN","LEXSC3",7,0)
 ; External References
"RTN","LEXSC3",8,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXSC3",9,0)
 ;    FILE^DICN           ICR  10009
"RTN","LEXSC3",10,0)
 ;    ^DIK                ICR  10013
"RTN","LEXSC3",11,0)
 ;    ^XTLKKWL            ICR  10122
"RTN","LEXSC3",12,0)
 ;               
"RTN","LEXSC3",13,0)
ADD ; Add a shortcut
"RTN","LEXSC3",14,0)
 N LEXADD,LEXERM
"RTN","LEXSC3",15,0)
ADD2 F  D  Q:$G(LEXRP)[U!(+($G(Y))>0)
"RTN","LEXSC3",16,0)
 . W ! S LEXERM=$$TERM^LEXSC2 Q:LEXRP[U
"RTN","LEXSC3",17,0)
 . D LK(LEXERM)
"RTN","LEXSC3",18,0)
 I LEXRP[U,LEXRP'["^^" W ! S LEXRP="" Q
"RTN","LEXSC3",19,0)
 Q:LEXRP["^^"  I +Y>0 D ASKADD I $G(LEXADD)>0 D ADDSC(+Y,LEXSC,LEXCX)
"RTN","LEXSC3",20,0)
 I LEXRP[U,LEXRP'["^^" S LEXRP="" G ADD2
"RTN","LEXSC3",21,0)
 Q
"RTN","LEXSC3",22,0)
ASKADD ;
"RTN","LEXSC3",23,0)
 N LEXERM,LEXSTR S LEXERM=+Y
"RTN","LEXSC3",24,0)
 S LEXERM=$S(+LEXERM'>0:"",1:$G(^LEX(757.01,LEXERM,0)))
"RTN","LEXSC3",25,0)
 S LEXSTR="Add """_LEXSC_""" as a short cut "
"RTN","LEXSC3",26,0)
 S LEXSTR=LEXSTR_"(in the context of "_LEXCXN_")"
"RTN","LEXSC3",27,0)
 S:LEXERM'="" LEXSTR=LEXSTR_" pointing to the term """_LEXERM_""""
"RTN","LEXSC3",28,0)
 D WRT^LEXSC2(LEXSTR) S LEXADD=$$ADDOK^LEXSC2
"RTN","LEXSC3",29,0)
 Q
"RTN","LEXSC3",30,0)
ADDSC(LEXEXP,LEXSC,LEXCX) ; Add shortcut
"RTN","LEXSC3",31,0)
 I '$D(^LEX(757.4,"B",LEXEXP)) D ADDR
"RTN","LEXSC3",32,0)
 I $D(^LEX(757.4,"B",LEXEXP)) D ADDS
"RTN","LEXSC3",33,0)
 Q
"RTN","LEXSC3",34,0)
ADDS ; Add Shortcut to sub-file
"RTN","LEXSC3",35,0)
 N DIC,DLAYGO,X,Y,DTOUT,DUOUT
"RTN","LEXSC3",36,0)
 N LEXR S LEXR=$O(^LEX(757.4,"B",LEXEXP,0)) Q:'$D(^LEX(757.4,LEXR,0))  K DD,DO S DA(1)=LEXR,X=LEXSC
"RTN","LEXSC3",37,0)
 S DLAYGO=757.401,DIC="^LEX(757.4,"_DA(1)_",1,",DIC(0)="AEMQL",DIC("P")="757.401",DIC("DR")="1////^S X=LEXCX" D FILE^DICN
"RTN","LEXSC3",38,0)
 Q
"RTN","LEXSC3",39,0)
ADDR ; Add record
"RTN","LEXSC3",40,0)
 N DIC,DLAYGO,X,Y,DTOUT,DUOUT
"RTN","LEXSC3",41,0)
 N LEXERM S LEXERM=$G(^LEX(757.01,LEXEXP,0))
"RTN","LEXSC3",42,0)
 K DD,DO S X=LEXEXP,DIC="^LEX(757.4,",DLAYGO=757.4,DIC(0)="AEMQL" D FILE^DICN
"RTN","LEXSC3",43,0)
 Q
"RTN","LEXSC3",44,0)
LK(X) ; Set up Lookup
"RTN","LEXSC3",45,0)
 S X=$G(X) K DLAYGO N DIC,DIPGM,DO G:X=""!(X["^") LKQ S:$L($G(LEXDICS)) DIC("S")=LEXDICS
"RTN","LEXSC3",46,0)
 S XTLKKSCH("INDEX")="AWRD",(DIC,XTLKGBL,XTLKKSCH("GBL"))="^LEX(757.01,"
"RTN","LEXSC3",47,0)
 S LEXSHOW="ICD/CPT/DSM/NAN/OMA/NIC"
"RTN","LEXSC3",48,0)
 S:$L($G(^LEXT(757.2,1,2))) XTLKHLP="D "_^LEXT(757.2,1,2)
"RTN","LEXSC3",49,0)
 S:$L($G(^LEXT(757.2,1,3))) XTLKKSCH("DSPLY")=^LEXT(757.2,1,3)
"RTN","LEXSC3",50,0)
 S:'$L($G(XTLKHLP)) XTLKHLP="D XTLK^LEXHLP" S:'$L($G(XTLKKSCH("DSPLY"))) XTLKKSCH="XTLK^LEXPRNT"
"RTN","LEXSC3",51,0)
 S (X,XTLKX)=$$UP^XLFSTR(LEXERM),DO=@(DIC_"0)"),DIC(0)="EMQ",XTLKSAY=0
"RTN","LEXSC3",52,0)
 W !,"Searching ...  "
"RTN","LEXSC3",53,0)
 D ^XTLKKWL K XTLKSAY,XTLKHLP S LEXRP=X
"RTN","LEXSC3",54,0)
LKQ ;
"RTN","LEXSC3",55,0)
 K LEXSUB,LEXU,LEXAP,LEXUN,LEXLST,LEXLL,LEXSHOW
"RTN","LEXSC3",56,0)
 K XTLKX,XTLKKSCH,XTLKHLP,XTLKSAY,XTLKGBL,XTLKWD2
"RTN","LEXSC3",57,0)
 Q
"RTN","LEXSC3",58,0)
DELS ;
"RTN","LEXSC3",59,0)
 N DIK,LEXC S LEXCX=+($G(LEXCX)) Q:'$L($G(LEXSC))  Q:LEXCX=0  N LEXR,LEXS
"RTN","LEXSC3",60,0)
 S LEXR=$O(^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXSC),1,63),LEXCX,0)) Q:+LEXR=0
"RTN","LEXSC3",61,0)
 S LEXS=$O(^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXSC),1,63),LEXCX,+LEXR,0)) Q:+LEXS=0
"RTN","LEXSC3",62,0)
 S DA(1)=+LEXR,DA=+LEXS,DIK="^LEX(757.4,"_DA(1)_",1," D ^DIK
"RTN","LEXSC3",63,0)
 S LEXC=$$CNT(LEXR) I LEXC'[U,+LEXC=0 D DELR(LEXR)
"RTN","LEXSC3",64,0)
 Q
"RTN","LEXSC3",65,0)
DELR(DA) ;
"RTN","LEXSC3",66,0)
 S DA=+($G(DA)) Q:DA=0  Q:'$D(^LEX(757.4,DA))  N DIK S DIK="^LEX(757.4," D ^DIK
"RTN","LEXSC3",67,0)
 Q
"RTN","LEXSC3",68,0)
CNT(X) ;
"RTN","LEXSC3",69,0)
 N LEXR,LEXC,LEXI S (LEXC,LEXI)=0,LEXR=+$G(X)
"RTN","LEXSC3",70,0)
 Q:'$L($G(^LEX(757.4,LEXR,0))) "^"
"RTN","LEXSC3",71,0)
 F  S LEXI=$O(^LEX(757.4,LEXR,1,LEXI)) Q:+LEXI=0  D
"RTN","LEXSC3",72,0)
 . S LEXC=LEXC+1
"RTN","LEXSC3",73,0)
 S X=LEXC Q X
"RTN","LEXSET")
0^30^B17938997
"RTN","LEXSET",1,0)
LEXSET ;ISL/KER - Setup Appl/User Defaults for Look-up ;04/21/2014
"RTN","LEXSET",2,0)
 ;;2.0;LEXICON UTILITY;**25,80**;Sep 23, 1996;Build 1
"RTN","LEXSET",3,0)
 ;               
"RTN","LEXSET",4,0)
 ; Global Variables
"RTN","LEXSET",5,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXSET",6,0)
 ;               
"RTN","LEXSET",7,0)
 ; External References
"RTN","LEXSET",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXSET",9,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXSET",10,0)
 ;               
"RTN","LEXSET",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXSET",12,0)
 ;     DIC,x              Killed by calling application
"RTN","LEXSET",13,0)
 ;     LEXLL,LEXQ,LEXVDT  Killed by Speicial Lookup LEXA1
"RTN","LEXSET",14,0)
 ;     XTLKGBL,XTLKHLP    Killed by MTLU
"RTN","LEXSET",15,0)
 ;     XTLKKSCH,XTLKSAY   Killed by MTLU
"RTN","LEXSET",16,0)
 ;               
"RTN","LEXSET",17,0)
EN ; Namespace/subset are not known
"RTN","LEXSET",18,0)
 N DTOUT,DUOUT,LEXNS,LEXSS,LEXDS,LEXDW,LEXDR,LEXDP,LEXDA,LEXDB,LEXD0,LEXD,LEXDX
"RTN","LEXSET",19,0)
 S LEXNS=$$NS^LEXSET4 Q:LEXNS[U!($D(DTOUT))!($D(DUOUT))
"RTN","LEXSET",20,0)
 S LEXSS=$$SS^LEXSET4(LEXNS) Q:LEXSS[U!($D(DTOUT))!($D(DUOUT))
"RTN","LEXSET",21,0)
 D CONFIG(LEXNS,LEXSS)
"RTN","LEXSET",22,0)
 Q
"RTN","LEXSET",23,0)
CONFIG(LEXNS,LEXSS,LEXCDT) ;  Namespace/subset are known
"RTN","LEXSET",24,0)
 ;
"RTN","LEXSET",25,0)
 ; Input
"RTN","LEXSET",26,0)
 ; 
"RTN","LEXSET",27,0)
 ;   LEXNS   Namespace from file 757.2 'AN' index
"RTN","LEXSET",28,0)
 ;   LEXSS   Subset from file 757.2, 'AA' or 'AB' index
"RTN","LEXSET",29,0)
 ;   LEXCDT  Date to used to configure lookp
"RTN","LEXSET",30,0)
 ;   
"RTN","LEXSET",31,0)
 ; Output
"RTN","LEXSET",32,0)
 ; 
"RTN","LEXSET",33,0)
 ;   ^TMP(LEXSCH,$J) 
"RTN","LEXSET",34,0)
 ;   
"RTN","LEXSET",35,0)
 ;           Global array containing the following parameters
"RTN","LEXSET",36,0)
 ;              APP    Application (from LEXNS) 
"RTN","LEXSET",37,0)
 ;              DIS    Display format 
"RTN","LEXSET",38,0)
 ;              FIL    Filter 
"RTN","LEXSET",39,0)
 ;              FLN    File Number 
"RTN","LEXSET",40,0)
 ;              GBL    Global (Fileman DIC) 
"RTN","LEXSET",41,0)
 ;              IDX    Index used during the search 
"RTN","LEXSET",42,0)
 ;              LEN    Length of list to display 
"RTN","LEXSET",43,0)
 ;              LOC    Hospital Location 
"RTN","LEXSET",44,0)
 ;              OVR    Overwrite User Defaults flag 
"RTN","LEXSET",45,0)
 ;              SCT    Shortcuts 
"RTN","LEXSET",46,0)
 ;              SVC    Service 
"RTN","LEXSET",47,0)
 ;              UNR    Unresolved Narrative flag 
"RTN","LEXSET",48,0)
 ;              USR    User (DUZ) 
"RTN","LEXSET",49,0)
 ;              VDT    Versioning Date
"RTN","LEXSET",50,0)
 ;              VOC    Vocabulary 
"RTN","LEXSET",51,0)
 ;
"RTN","LEXSET",52,0)
 N LEXD,LEXSUB,LEXAP,LEXSHOW,LEXSCT,LEXUN,LEXQOK S LEXCDT=$P($G(LEXCDT),".",1)
"RTN","LEXSET",53,0)
 S:LEXCDT?7N LEXVDT=LEXCDT D VDT^LEXU S LEXCDT=$G(LEXVDT),LEXQOK=$D(LEXQ)
"RTN","LEXSET",54,0)
 N LEXA,LEXL,LEXS,LEXM,LEXD S LEXNS=$G(LEXNS),LEXSS=$G(LEXSS)
"RTN","LEXSET",55,0)
 S LEXQ=$S($D(LEXQ):+LEXQ,1:1) S:LEXNS="" LEXNS="LEX" S:LEXSS="" LEXSS="WRD"
"RTN","LEXSET",56,0)
 S:'$D(^LEXT(757.2,"AN",LEXNS)) LEXNS=$$NS^LEXDFN2(LEXNS)
"RTN","LEXSET",57,0)
 S:'$D(^LEXT(757.2,"AA",LEXSS))&('$D(^LEXT(757.2,"AB",LEXSS))) LEXSS=$$MD^LEXDFN2(LEXSS)
"RTN","LEXSET",58,0)
 N LEXUS,LEXO,LEXT
"RTN","LEXSET",59,0)
 S LEXA=$$NSIEN(LEXNS),LEXS=$$SSIEN(LEXSS)
"RTN","LEXSET",60,0)
 S LEXM=$$MDIEN(LEXSS),LEXL=$$ASIEN(LEXA)
"RTN","LEXSET",61,0)
 I +LEXA=0!(+LEXS=0) D DEF G SET
"RTN","LEXSET",62,0)
 D APP^LEXSET2(LEXA)
"RTN","LEXSET",63,0)
 I LEXM=0!(LEXM>0&(LEXM=LEXA)) D SUB^LEXSET2(LEXS)
"RTN","LEXSET",64,0)
 I LEXM>0,LEXM'=LEXA D MOD^LEXSET2(LEXM)
"RTN","LEXSET",65,0)
 D USR^LEXSET2(LEXA)
"RTN","LEXSET",66,0)
 D GEN^LEXSET2
"RTN","LEXSET",67,0)
 I +($G(LEXD("DF","OVR")))>0 D OVER^LEXSET3
"RTN","LEXSET",68,0)
 I +($G(LEXD("DF","OVR")))=0 D USER^LEXSET3
"RTN","LEXSET",69,0)
 S:$G(LEXCDT)?7N ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXCDT))
"RTN","LEXSET",70,0)
 S:$G(LEXCDT)?7N ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXCDT))
"RTN","LEXSET",71,0)
 D EN^LEXSET5 S:+($G(LEXQ))=1 ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","LEXSET",72,0)
SET ; Quit Setting Defaults
"RTN","LEXSET",73,0)
 I LEXQOK'>0 K LEXLL,LEXQ,LEXVDT
"RTN","LEXSET",74,0)
 Q
"RTN","LEXSET",75,0)
DEF ; Defaults if LEXNS or LEXSS are invalid
"RTN","LEXSET",76,0)
 S LEXD("DF","DIS")="ICD/CPT",LEXD("DF","DSP")="XTLK^LEXPRNT"
"RTN","LEXSET",77,0)
 S LEXD("DF","FLN")=757.01,LEXD("DF","GBL")="^LEX(757.01,"
"RTN","LEXSET",78,0)
 S LEXD("DF","LEXAP")=1,LEXD("DF","UNR")=0
"RTN","LEXSET",79,0)
 S LEXD("DF","HLP")="D XTLK^LEXHLP",LEXD("DF","IDX")="AWRD"
"RTN","LEXSET",80,0)
 S LEXD("DF","NAM")="Lexicon",LEXD("DF","OVR")=0
"RTN","LEXSET",81,0)
 S LEXD("DF","SUB")="WRD"
"RTN","LEXSET",82,0)
 Q
"RTN","LEXSET",83,0)
ALTDEF ; Defaults if LEXNS or LEXSS are invalid
"RTN","LEXSET",84,0)
 S (DIC,XTLKGBL,XTLKKSCH("GBL"))="^LEX(757.01,"
"RTN","LEXSET",85,0)
 S XTLKKSCH("DSPLY")="XTLK^LEXPRNT",XTLKKSCH("INDEX")="AWRD",XTLKHLP="D XTLK^LEXHLP"
"RTN","LEXSET",86,0)
 S XTLKSAY=1 S:'$L($G(DIC(0))) DIC(0)="EQM" S:'$L($G(X))&(DIC(0)'["A") DIC(0)="A"_DIC(0)
"RTN","LEXSET",87,0)
 S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2) S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"L",2)
"RTN","LEXSET",88,0)
 S LEXAP=1,LEXLL=5,LEXUN=0,LEXSUB="WRD",LEXSHOW="ICD/CPT"
"RTN","LEXSET",89,0)
 Q
"RTN","LEXSET",90,0)
NSIEN(LEX) ; Get IEN for application based on namespace
"RTN","LEXSET",91,0)
 Q:'$L($G(LEX)) 0 Q:$D(^LEXT(757.2,"AN",LEX)) $O(^LEXT(757.2,"AN",LEX,0)) Q 0
"RTN","LEXSET",92,0)
SSIEN(LEX) ; Get IEN for subset based on subset
"RTN","LEXSET",93,0)
 Q:'$L($G(LEX)) 0
"RTN","LEXSET",94,0)
 Q:$D(^LEXT(757.2,"AA",LEX)) $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",95,0)
 S:$D(^LEXT(757.2,"AB",LEX)) LEX=$O(^LEXT(757.2,"AB",LEX,0))
"RTN","LEXSET",96,0)
 I +LEX>0,$D(^LEXT(757.2,LEX,5)) S LEX=$P(^LEXT(757.2,LEX,5),"^",2)
"RTN","LEXSET",97,0)
 I LEX'="",$D(^LEXT(757.2,"AA",LEX)) Q $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",98,0)
 Q 0
"RTN","LEXSET",99,0)
MDIEN(LEX) ; Get IEN for mode based on subset
"RTN","LEXSET",100,0)
 Q:'$L($G(LEX)) 0
"RTN","LEXSET",101,0)
 I $D(^LEXT(757.2,"AB",LEX)) S LEX=$O(^LEXT(757.2,"AB",LEX,0)) S LEX=+LEX Q LEX
"RTN","LEXSET",102,0)
 Q 0
"RTN","LEXSET",103,0)
ASIEN(LEX) ; Get IEN for application 
"RTN","LEXSET",104,0)
 Q:+($G(LEX))=0 0
"RTN","LEXSET",105,0)
 S LEX=+LEX Q:'$L($P($G(^LEXT(757.2,LEX,5)),"^",2))&('$L($P($G(^LEXT(757.2,LEX,0)),"^",2))) 0
"RTN","LEXSET",106,0)
 S:$L($P($G(^LEXT(757.2,LEX,5)),"^",2)) LEX=$P($G(^LEXT(757.2,LEX,5)),"^",2)
"RTN","LEXSET",107,0)
 S:$L($P($G(^LEXT(757.2,LEX,0)),"^",2)) LEX=$P($G(^LEXT(757.2,LEX,0)),"^",2)
"RTN","LEXSET",108,0)
 Q:$D(^LEXT(757.2,"AA",LEX)) $O(^LEXT(757.2,"AA",LEX,0))
"RTN","LEXSET",109,0)
 Q 0
"RTN","LEXSET2")
0^217^B18221774
"RTN","LEXSET2",1,0)
LEXSET2 ;ISL/KER - Retrieve Appl/Sub/Mode/User Defaults ;04/21/2014
"RTN","LEXSET2",2,0)
 ;;2.0;LEXICON UTILITY;**6,80**;Sep 23, 1996;Build 1
"RTN","LEXSET2",3,0)
 ;
"RTN","LEXSET2",4,0)
APP(LEXA) ; Application
"RTN","LEXSET2",5,0)
 K LEXD("AP") N LEXT,LEXI S LEXA=+($G(LEXA))
"RTN","LEXSET2",6,0)
 Q:LEXA=0  Q:'$D(^LEXT(757.2,LEXA))  Q:$P($G(^LEXT(757.2,LEXA,5)),"^",5)=""
"RTN","LEXSET2",7,0)
 S LEXT="AP",LEXI=LEXA D COMMON
"RTN","LEXSET2",8,0)
 S:$L($G(^LEXT(757.2,LEXI,7))) LEXD(LEXT,"DIS")=$G(^LEXT(757.2,LEXI,7))
"RTN","LEXSET2",9,0)
 S LEXD(LEXT,"UNR")=+($P($G(^LEXT(757.2,LEXI,5)),"^",6))
"RTN","LEXSET2",10,0)
 S LEXD(LEXT,"DEF")=+($P($G(^LEXT(757.2,LEXI,5)),"^",3))
"RTN","LEXSET2",11,0)
 S LEXD(LEXT,"SCT")=+($P($G(^LEXT(757.2,LEXI,5)),"^",8))
"RTN","LEXSET2",12,0)
 ; Modifiers   PCH 6
"RTN","LEXSET2",13,0)
 S LEXD(LEXT,"MOD")=+($P($G(^LEXT(757.2,LEXI,5)),"^",9))
"RTN","LEXSET2",14,0)
 K:+(LEXD(LEXT,"SCT"))=0 LEXD(LEXT,"SCT")
"RTN","LEXSET2",15,0)
 S LEXD(LEXT,"FIL")=$G(^LEXT(757.2,LEXI,6))
"RTN","LEXSET2",16,0)
 S LEXD("DF","UNR")=+($P($G(^LEXT(757.2,LEXI,5)),"^",6))
"RTN","LEXSET2",17,0)
 S LEXD(LEXT,"SUB")=$P($G(^LEXT(757.2,LEXI,5)),"^",2)
"RTN","LEXSET2",18,0)
 S:LEXD(LEXT,"SUB")="" LEXD(LEXT,"SUB")="WRD"
"RTN","LEXSET2",19,0)
 S LEXD(LEXT,"IDX")="A"_LEXD(LEXT,"SUB")
"RTN","LEXSET2",20,0)
 Q
"RTN","LEXSET2",21,0)
SUB(LEXS) ; Subset
"RTN","LEXSET2",22,0)
 K LEXD("SS") N LEXT,LEXI S LEXS=+($G(LEXS))
"RTN","LEXSET2",23,0)
 Q:LEXS=0  Q:'$D(^LEXT(757.2,LEXS))  Q:$P($G(^LEXT(757.2,LEXS,0)),"^",2)=""
"RTN","LEXSET2",24,0)
 S LEXT="SS",LEXI=LEXS D COMMON
"RTN","LEXSET2",25,0)
 S:$L($G(^LEXT(757.2,LEXI,4))) LEXD(LEXT,"DIS")=$G(^LEXT(757.2,LEXI,4))
"RTN","LEXSET2",26,0)
 S LEXD(LEXT,"SCT")=+($P($G(^LEXT(757.2,LEXI,5)),"^",8))
"RTN","LEXSET2",27,0)
 K:+(LEXD(LEXT,"SCT"))=0 LEXD(LEXT,"SCT")
"RTN","LEXSET2",28,0)
 ; Modifiers   PCH 6
"RTN","LEXSET2",29,0)
 S LEXD(LEXT,"MOD")=+($P($G(^LEXT(757.2,LEXI,5)),"^",9))
"RTN","LEXSET2",30,0)
 S LEXD(LEXT,"FIL")=$G(^LEXT(757.2,LEXI,6))
"RTN","LEXSET2",31,0)
 S LEXD(LEXT,"SUB")=$P($G(^LEXT(757.2,LEXI,0)),"^",2)
"RTN","LEXSET2",32,0)
 S:LEXD(LEXT,"SUB")="" LEXD(LEXT,"SUB")="WRD"
"RTN","LEXSET2",33,0)
 S LEXD(LEXT,"IDX")="A"_LEXD(LEXT,"SUB")
"RTN","LEXSET2",34,0)
 Q
"RTN","LEXSET2",35,0)
GEN S LEXD("DF","OVR")=0 S:$G(LEXD("AP","OVR"))=1!($G(LEXD("SS","OVR"))=1) LEXD("DF","OVR")=1
"RTN","LEXSET2",36,0)
 Q
"RTN","LEXSET2",37,0)
MOD(LEXM) ; Mode
"RTN","LEXSET2",38,0)
 K LEXD("SS") N LEXT,LEXI S LEXM=+($G(LEXM))
"RTN","LEXSET2",39,0)
 Q:LEXM=0  Q:'$D(^LEXT(757.2,LEXM,5))  Q:$P(^LEXT(757.2,LEXM,5),"^",1)=""  Q:$P(^LEXT(757.2,LEXM,5),"^",5)'=""  Q:$P($G(^LEXT(757.2,LEXM,5)),"^",1)=""  S LEXT="SS",LEXI=LEXM D COMMON
"RTN","LEXSET2",40,0)
 S:$L($G(^LEXT(757.2,LEXI,7))) LEXD(LEXT,"DIS")=$G(^LEXT(757.2,LEXI,7))
"RTN","LEXSET2",41,0)
 S LEXD(LEXT,"FIL")=$G(^LEXT(757.2,LEXI,6))
"RTN","LEXSET2",42,0)
 S LEXD(LEXT,"SCT")=+($P($G(^LEXT(757.2,LEXI,5)),"^",8))
"RTN","LEXSET2",43,0)
 ; Modifiers   PCH 6
"RTN","LEXSET2",44,0)
 S LEXD(LEXT,"MOD")=+($P($G(^LEXT(757.2,LEXI,5)),"^",9))
"RTN","LEXSET2",45,0)
 K:+(LEXD(LEXT,"SCT"))=0 LEXD(LEXT,"SCT")
"RTN","LEXSET2",46,0)
 S LEXD(LEXT,"SUB")=$P($G(^LEXT(757.2,LEXI,5)),"^",2)
"RTN","LEXSET2",47,0)
 S:LEXD(LEXT,"SUB")="" LEXD(LEXT,"SUB")="WRD"
"RTN","LEXSET2",48,0)
 S LEXD(LEXT,"IDX")="A"_LEXD(LEXT,"SUB")
"RTN","LEXSET2",49,0)
 Q
"RTN","LEXSET2",50,0)
IND ;
"RTN","LEXSET2",51,0)
 S LEXD("DF","XTLKSAY")=1 S:'$L($G(DIC(0))) DIC(0)="EQM" S:'$L($G(X))&(DIC(0)'["A") DIC(0)="A"_DIC(0)
"RTN","LEXSET2",52,0)
 S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2) S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"L",2)
"RTN","LEXSET2",53,0)
 S LEXD("DF","DIC(0)")=DIC(0) K DIC(0)
"RTN","LEXSET2",54,0)
 Q
"RTN","LEXSET2",55,0)
COMMON ; Common Values
"RTN","LEXSET2",56,0)
 S LEXD(LEXT,"IEN")=LEXI S:LEXT="AP" LEXD("DF","LEXAP")=LEXI
"RTN","LEXSET2",57,0)
 S LEXD(LEXT,"NAM")=$P($G(^LEXT(757.2,LEXI,0)),"^",1)
"RTN","LEXSET2",58,0)
 S LEXD(LEXT,"GBL")=$G(^LEXT(757.2,LEXI,1))
"RTN","LEXSET2",59,0)
 S LEXD(LEXT,"OVR")=+($P($G(^LEXT(757.2,LEXI,5)),"^",7))
"RTN","LEXSET2",60,0)
 S:$G(^LEXT(757.2,LEXI,2))'="" LEXD(LEXT,"DSP")=$G(^LEXT(757.2,LEXI,3))
"RTN","LEXSET2",61,0)
 S:$G(^LEXT(757.2,LEXI,3))'="" LEXD(LEXT,"HLP")="D "_$G(^LEXT(757.2,LEXI,2))
"RTN","LEXSET2",62,0)
 Q
"RTN","LEXSET2",63,0)
USR(LEXI) ; User defaults
"RTN","LEXSET2",64,0)
 Q:+($G(LEXI))=0  Q:+($G(DUZ))=0  Q:'$D(^LEXT(757.2,+LEXI,200,DUZ))
"RTN","LEXSET2",65,0)
 N LEXEMP S LEXEMP=$G(^LEXT(757.2,+LEXI,200,DUZ,1)) S:LEXEMP'="" LEXD("UD","FIL")=LEXEMP
"RTN","LEXSET2",66,0)
 S LEXEMP=$G(^LEXT(757.2,+LEXI,200,DUZ,2)) S:LEXEMP'="" LEXD("UD","DIS")=LEXEMP
"RTN","LEXSET2",67,0)
 S LEXEMP=$G(^LEXT(757.2,+LEXI,200,DUZ,3)) S:LEXEMP'="" LEXD("UD","SUB")=LEXEMP,LEXD("UD","IDX")="A"_LEXEMP
"RTN","LEXSET2",68,0)
 S LEXEMP=$G(^LEXT(757.2,+LEXI,200,DUZ,4)) S:LEXEMP'="" LEXD("UD","SCT")=LEXEMP
"RTN","LEXSET2",69,0)
 I $L($G(LEXD("UD","SUB"))) D
"RTN","LEXSET2",70,0)
 . I $D(^LEXT(757.2,"AA",LEXD("UD","SUB"))) S LEXD("UD","IEN")=$O(^LEXT(757.2,"AA",LEXD("UD","SUB"),0))
"RTN","LEXSET2",71,0)
 . I $D(^LEXT(757.2,"AB",LEXD("UD","SUB"))) S LEXD("UD","IEN")=$O(^LEXT(757.2,"AB",LEXD("UD","SUB"),0))
"RTN","LEXSET2",72,0)
 . I +($G(LEXD("UD","IEN")))>0,$D(^LEXT(757.2,+($G(LEXD("UD","IEN"))))) D
"RTN","LEXSET2",73,0)
 . . S:$L($G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),1))) LEXD("UD","GBL")=$G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),1))
"RTN","LEXSET2",74,0)
 . . S:$L($G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),2))) LEXD("UD","DSP")=$G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),2))
"RTN","LEXSET2",75,0)
 . . S:$L($G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),3))) LEXD("UD","HLP")=$G(^LEXT(757.2,+($G(LEXD("UD","IEN"))),3))
"RTN","LEXSET2",76,0)
 . I '$L($G(LEXD("UD","GBL"))) K LEXD("UD","SUB"),LEXD("UD","IDX")
"RTN","LEXSET2",77,0)
 Q
"RTN","LEXSET3")
0^216^B12976280
"RTN","LEXSET3",1,0)
LEXSET3 ;ISL/KER - Overwrite/Merge Appl/User Defaults ;04/21/2014
"RTN","LEXSET3",2,0)
 ;;2.0;LEXICON UTILITY;**6,80**;Sep 23, 1996;Build 1
"RTN","LEXSET3",3,0)
 ;
"RTN","LEXSET3",4,0)
OVER ;
"RTN","LEXSET3",5,0)
 N LEXT
"RTN","LEXSET3",6,0)
 S:LEXM=0&(LEXL=LEXS) LEXT="AP"
"RTN","LEXSET3",7,0)
 S:LEXM=0&(LEXL'=LEXS) LEXT="SS"
"RTN","LEXSET3",8,0)
 I LEXM>0 S:LEXM>0 LEXT="SS"
"RTN","LEXSET3",9,0)
 I $L($G(LEXD("AP","DEF"))),+($G(LEXD("AP","DEF")))=0 S LEXT="AP"
"RTN","LEXSET3",10,0)
 S:$L($G(LEXD(LEXT,"DIS"))) LEXD("DF","DIS")=LEXD(LEXT,"DIS")
"RTN","LEXSET3",11,0)
 S:$L($G(LEXD(LEXT,"DSP"))) LEXD("DF","DSP")=LEXD(LEXT,"DSP")
"RTN","LEXSET3",12,0)
 S:$L($G(LEXD(LEXT,"FIL"))) LEXD("DF","FIL")=LEXD(LEXT,"FIL")
"RTN","LEXSET3",13,0)
 S:$L($G(LEXD(LEXT,"GBL"))) LEXD("DF","GBL")=LEXD(LEXT,"GBL")
"RTN","LEXSET3",14,0)
 S:$L($G(LEXD(LEXT,"HLP"))) LEXD("DF","HLP")=LEXD(LEXT,"HLP")
"RTN","LEXSET3",15,0)
 S:$L($G(LEXD(LEXT,"IDX"))) LEXD("DF","IDX")=LEXD(LEXT,"IDX")
"RTN","LEXSET3",16,0)
 ; Modifiers     PCH 6
"RTN","LEXSET3",17,0)
 S:$L($G(LEXD(LEXT,"MOD"))) LEXD("DF","MOD")=LEXD(LEXT,"MOD")
"RTN","LEXSET3",18,0)
 S:'$D(LEXD(LEXT,"IDX")) LEXD(LEXT,"IDX")="AWRD",LEXD(LEXT,"GBL")="^LEX(757.01,"
"RTN","LEXSET3",19,0)
 I '$D(LEXD(LEXT,"GBL")) D
"RTN","LEXSET3",20,0)
 . I $D(^LEX(757.01,LEXD(LEXT,"IDX"))) S LEXD(LEXT,"GBL")="^LEX(757.01," Q
"RTN","LEXSET3",21,0)
 . I $D(^LEX(757.21,LEXD(LEXT,"IDX"))) S LEXD(LEXT,"GBL")="^LEX(757.21," Q
"RTN","LEXSET3",22,0)
 . S LEXD(LEXT,"IDX")="AWRD",LEXD(LEXT,"GBL")="^LEX(757.01,"
"RTN","LEXSET3",23,0)
 S:$L($G(LEXD(LEXT,"NAM"))) LEXD("DF","NAM")=LEXD(LEXT,"NAM")
"RTN","LEXSET3",24,0)
 S LEXD("DF","SUB")=$E($G(LEXD(LEXT,"IDX")),2,$L($G(LEXD(LEXT,"IDX"))))
"RTN","LEXSET3",25,0)
 S LEXD("DF","FLN")=$P($P($G(LEXD(LEXT,"GBL")),"(",2),",",1)
"RTN","LEXSET3",26,0)
 I 'LEXD("DF","FLN") D
"RTN","LEXSET3",27,0)
 . S LEXD("DF","FLN")=757.01,LEXD("DF","GBL")="^LEX(757.01,"
"RTN","LEXSET3",28,0)
 . S LEXD("DF","IDX")="AWRD",LEXD("DF","SUB")="WRD"
"RTN","LEXSET3",29,0)
 S:$L($G(LEXD(LEXT,"SCT"))) LEXD("DF","SCT")=LEXD(LEXT,"SCT")
"RTN","LEXSET3",30,0)
 Q
"RTN","LEXSET3",31,0)
USER ;
"RTN","LEXSET3",32,0)
 N LEXT
"RTN","LEXSET3",33,0)
 S:LEXM=0&(LEXL=LEXS) LEXT="AP"
"RTN","LEXSET3",34,0)
 S:LEXM=0&(LEXL'=LEXS) LEXT="SS"
"RTN","LEXSET3",35,0)
 S:LEXM>0&(LEXM=LEXA) LEXT="AP"
"RTN","LEXSET3",36,0)
 S:LEXM>0&(LEXM'=LEXA) LEXT="SS"
"RTN","LEXSET3",37,0)
 S:$L($G(LEXD(LEXT,"DIS"))) LEXD("DF","DIS")=LEXD(LEXT,"DIS")
"RTN","LEXSET3",38,0)
 S:$L($G(LEXD(LEXT,"DSP"))) LEXD("DF","DSP")=LEXD(LEXT,"DSP")
"RTN","LEXSET3",39,0)
 S:$L($G(LEXD(LEXT,"FIL"))) LEXD("DF","FIL")=LEXD(LEXT,"FIL")
"RTN","LEXSET3",40,0)
 S:$L($G(LEXD(LEXT,"GBL"))) LEXD("DF","GBL")=LEXD(LEXT,"GBL")
"RTN","LEXSET3",41,0)
 S:$L($G(LEXD(LEXT,"HLP"))) LEXD("DF","HLP")=LEXD(LEXT,"HLP")
"RTN","LEXSET3",42,0)
 S:$L($G(LEXD(LEXT,"IDX"))) LEXD("DF","IDX")=LEXD(LEXT,"IDX")
"RTN","LEXSET3",43,0)
 ; Modifiers     PCH 6
"RTN","LEXSET3",44,0)
 S:$L($G(LEXD(LEXT,"MOD"))) LEXD("DF","MOD")=LEXD(LEXT,"MOD")
"RTN","LEXSET3",45,0)
 S:'$D(LEXD(LEXT,"IDX")) LEXD(LEXT,"IDX")="AWRD",LEXD(LEXT,"GBL")="^LEX(757.01,"
"RTN","LEXSET3",46,0)
 I '$D(LEXD(LEXT,"GBL")) D
"RTN","LEXSET3",47,0)
 . I $D(^LEX(757.01,LEXD(LEXT,"IDX"))) S LEXD(LEXT,"GBL")="^LEX(757.01," Q
"RTN","LEXSET3",48,0)
 . I $D(^LEX(757.21,LEXD(LEXT,"IDX"))) S LEXD(LEXT,"GBL")="^LEX(757.21," Q
"RTN","LEXSET3",49,0)
 . S LEXD(LEXT,"IDX")="AWRD",LEXD(LEXT,"GBL")="^LEX(757.01,"
"RTN","LEXSET3",50,0)
 S:$L($G(LEXD(LEXT,"NAM"))) LEXD("DF","NAM")=LEXD(LEXT,"NAM")
"RTN","LEXSET3",51,0)
 S LEXD("DF","SUB")=$E($G(LEXD(LEXT,"IDX")),2,$L($G(LEXD(LEXT,"IDX"))))
"RTN","LEXSET3",52,0)
 S LEXD("DF","FLN")=$P($P($G(LEXD(LEXT,"GBL")),"(",2),",",1)
"RTN","LEXSET3",53,0)
 I LEXD("DF","FLN")="" D
"RTN","LEXSET3",54,0)
 . S LEXD("DF","FLN")=757.01,LEXD("DF","GBL")="^LEX(757.01,"
"RTN","LEXSET3",55,0)
 . S LEXD("DF","IDX")="AWRD",LEXD("DF","SUB")="WRD"
"RTN","LEXSET3",56,0)
 S:$L($G(LEXD("UD","DIS"))) LEXD("DF","DIS")=LEXD("UD","DIS")
"RTN","LEXSET3",57,0)
 S:$L($G(LEXD("UD","SCT"))) LEXD("DF","SCT")=LEXD("UD","SCT")
"RTN","LEXSET3",58,0)
 I LEXT="AP" D
"RTN","LEXSET3",59,0)
 . S:$L($G(LEXD("UD","FIL"))) LEXD("DF","FIL")=LEXD("UD","FIL")
"RTN","LEXSET3",60,0)
 . S:$L($G(LEXD("UD","DSP"))) LEXD("DF","DSP")=LEXD("UD","DSP")
"RTN","LEXSET3",61,0)
 . S:$L($G(LEXD("UD","HLP"))) LEXD("DF","HLP")=LEXD("UD","HLP")
"RTN","LEXSET3",62,0)
 . S:$L($G(LEXD("UD","IDX"))) LEXD("DF","IDX")=LEXD("UD","IDX")
"RTN","LEXSET3",63,0)
 . S:$L($G(LEXD("UD","SUB"))) LEXD("DF","SUB")=LEXD("UD","SUB")
"RTN","LEXSET3",64,0)
 I $L($G(LEXD("DF","IDX"))),$D(^LEX(757.01,LEXD("DF","IDX"))) S LEXD("DF","GBL")="^LEX(757.01,",LEXD("DF","FLN")="757.01"
"RTN","LEXSET3",65,0)
 I $L($G(LEXD("DF","IDX"))),$D(^LEX(757.21,LEXD("DF","IDX"))) S LEXD("DF","GBL")="^LEX(757.21,",LEXD("DF","FLN")="757.21"
"RTN","LEXSET3",66,0)
 Q
"RTN","LEXSET4")
0^145^B3440677
"RTN","LEXSET4",1,0)
LEXSET4 ;ISL/KER - Setup Functions ;04/21/2014
"RTN","LEXSET4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXSET4",3,0)
 ;               
"RTN","LEXSET4",4,0)
 ; Global Variables
"RTN","LEXSET4",5,0)
 ;    None
"RTN","LEXSET4",6,0)
 ;               
"RTN","LEXSET4",7,0)
 ; External References
"RTN","LEXSET4",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXSET4",9,0)
 ;               
"RTN","LEXSET4",10,0)
NS(LEX) ; Look-up application namespace
"RTN","LEXSET4",11,0)
 N D,DIC,DTOUT,DUOUT D:'$D(LEXSAVE) SAVE K DIC S DIC("A")="Select APPLICATION:  "
"RTN","LEXSET4",12,0)
 S DIC("W")="W ?35,$P($G(^LEXT(757.2,+Y,5)),U,5)"
"RTN","LEXSET4",13,0)
 S DIC="^LEXT(757.2,",DIC(0)="AEQM",D="AN"
"RTN","LEXSET4",14,0)
 S DIC("S")="I $L($P($G(^LEXT(757.2,Y,5)),U,5))"
"RTN","LEXSET4",15,0)
 D ^DIC S LEX="" S:+Y>0 LEX=$P($G(^LEXT(757.2,+Y,5)),U,5)
"RTN","LEXSET4",16,0)
 S:LEX="" LEX="LEX" K DIC,X,Y D:$D(LEXSAVE) RESTORE Q LEX
"RTN","LEXSET4",17,0)
SS(LEX) ; Look-up subset (vocabulary)
"RTN","LEXSET4",18,0)
 D:'$D(LEXSAVE) SAVE
"RTN","LEXSET4",19,0)
 S:'$D(DIC("B")) DIC("B")="Lexicon" S DIC("A")="Select VOCABULARY:  "
"RTN","LEXSET4",20,0)
 S DIC="^LEXT(757.2,",DIC(0)="AEQM",D="AA"
"RTN","LEXSET4",21,0)
 S DIC("S")="I $L($P($G(^LEXT(757.2,Y,0)),U,2))"
"RTN","LEXSET4",22,0)
 D ^DIC S LEX="" S:+Y>0 LEX=$P($G(^LEXT(757.2,+Y,0)),U,2)
"RTN","LEXSET4",23,0)
 S:LEX="" LEX="WRD" K DIC,X,Y D:$D(LEXSAVE) RESTORE Q LEX
"RTN","LEXSET4",24,0)
SAVE ; Save look-up variables
"RTN","LEXSET4",25,0)
 S LEXSAVE="" S:$L($G(X)) LEXDX=X S:$L($G(DIC("A"))) LEXDA=DIC("A")
"RTN","LEXSET4",26,0)
 S:$L($G(DIC("B"))) LEXDB=DIC("B") S:$L($G(DIC("W"))) LEXDW=DIC("W") S:$L($G(DIC(0))) LEXD0=DIC(0)
"RTN","LEXSET4",27,0)
 Q
"RTN","LEXSET4",28,0)
RESTORE ; Restore look-up variables
"RTN","LEXSET4",29,0)
 S:$L($G(LEXDX)) X=LEXDX K:'$L($G(LEXDX)) X S:$L($G(LEXD0)) DIC(0)=LEXD0 S:$L($G(LEXDA)) DIC("A")=LEXDA
"RTN","LEXSET4",30,0)
 S:$L($G(LEXDB)) DIC("B")=LEXDB S:$L($G(LEXDW)) DIC("W")=LEXDW K LEXDA,LEXD0,LEXDX,LEXDB,LEXDW,LEXSAVE
"RTN","LEXSET4",31,0)
 Q
"RTN","LEXSET5")
0^80^B25961242
"RTN","LEXSET5",1,0)
LEXSET5 ;ISL/KER - Setup Appl/User Defaults for Look-up ;04/21/2014
"RTN","LEXSET5",2,0)
 ;;2.0;LEXICON UTILITY;**6,11,80**;Sep 23, 1996;Build 1
"RTN","LEXSET5",3,0)
 ;               
"RTN","LEXSET5",4,0)
 ; Global Variables
"RTN","LEXSET5",5,0)
 ;    ^DIC(49)            ICR  10093
"RTN","LEXSET5",6,0)
 ;    ^DISV(              ICR    510
"RTN","LEXSET5",7,0)
 ;    ^SC(                ICR  10040
"RTN","LEXSET5",8,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXSET5",9,0)
 ;               
"RTN","LEXSET5",10,0)
 ; External References
"RTN","LEXSET5",11,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXSET5",12,0)
 ;    ^DIR                ICR  10026
"RTN","LEXSET5",13,0)
 ;    ^XTLKKWL            ICR  10122
"RTN","LEXSET5",14,0)
 ;               
"RTN","LEXSET5",15,0)
EN ; Set variables
"RTN","LEXSET5",16,0)
 D:+($G(LEXQ))=0 MTLU
"RTN","LEXSET5",17,0)
 D:+($G(LEXQ))=1 QUIET
"RTN","LEXSET5",18,0)
 K LEXD
"RTN","LEXSET5",19,0)
 Q
"RTN","LEXSET5",20,0)
QUIET ;
"RTN","LEXSET5",21,0)
 N LEXMP S LEXMP="" D DIC0
"RTN","LEXSET5",22,0)
 I $L($G(LEXD("DF","LEXAP"))) S ^TMP("LEXSCH",$J,"APP",0)=LEXD("DF","LEXAP"),^TMP("LEXSCH",$J,"APP",1)=$$APPN^LEXDFN(LEXD("DF","LEXAP"))
"RTN","LEXSET5",23,0)
 I $L($G(LEXD("DF","DIS"))) S ^TMP("LEXSCH",$J,"DIS",0)=LEXD("DF","DIS"),^TMP("LEXSCH",$J,"DIS",1)=$$DISN^LEXDFN(LEXD("DF","DIS"))
"RTN","LEXSET5",24,0)
 I $L($G(LEXD("DF","FIL"))) S ^TMP("LEXSCH",$J,"FIL",0)=LEXD("DF","FIL"),^TMP("LEXSCH",$J,"FIL",1)=$$FILN^LEXDFN(LEXD("DF","FIL"))
"RTN","LEXSET5",25,0)
 I $L($G(LEXD("DF","GBL"))) S (DIC,^TMP("LEXSCH",$J,"GBL",0))=LEXD("DF","GBL"),^TMP("LEXSCH",$J,"GBL",1)=$$GBLN^LEXDFN(LEXD("DF","GBL"))
"RTN","LEXSET5",26,0)
 I $L($G(LEXD("DF","IDX"))) S ^TMP("LEXSCH",$J,"IDX",0)=LEXD("DF","IDX"),^TMP("LEXSCH",$J,"IDX",1)=$$IDXN^LEXDFN(LEXD("DF","IDX"))
"RTN","LEXSET5",27,0)
 I $L($G(LEXD("DF","OVR"))) S ^TMP("LEXSCH",$J,"OVR",0)=LEXD("DF","OVR"),^TMP("LEXSCH",$J,"OVR",1)=$$OVRN^LEXDFN(LEXD("DF","OVR"))
"RTN","LEXSET5",28,0)
 I $L($G(LEXD("DF","SCT"))) S ^TMP("LEXSCH",$J,"SCT",0)=LEXD("DF","SCT"),^TMP("LEXSCH",$J,"SCT",1)=$$SCTN^LEXDFN(LEXD("DF","SCT"))
"RTN","LEXSET5",29,0)
 I $L($G(LEXD("DF","UNR"))) S ^TMP("LEXSCH",$J,"UNR",0)=LEXD("DF","UNR"),^TMP("LEXSCH",$J,"UNR",1)=$$UNRN^LEXDFN(LEXD("DF","UNR"))
"RTN","LEXSET5",30,0)
 ; Modifiers       PCH 6
"RTN","LEXSET5",31,0)
 I $L($G(LEXD("DF","MOD"))) S ^TMP("LEXSCH",$J,"MOD",0)=LEXD("DF","MOD"),^TMP("LEXSCH",$J,"MOD",1)=$$MODI^LEXDFN(LEXD("DF","MOD"))
"RTN","LEXSET5",32,0)
 I $L($G(LEXD("DF","VOC"))) S ^TMP("LEXSCH",$J,"VOC",0)=LEXD("DF","VOC"),^TMP("LEXSCH",$J,"VOC",1)=$$VOCN^LEXDFN(LEXD("DF","VOC"))
"RTN","LEXSET5",33,0)
 I '$L($G(LEXD("DF","VOC"))),$L($G(LEXD("DF","SUB"))) S ^TMP("LEXSCH",$J,"VOC",0)=LEXD("DF","SUB"),^TMP("LEXSCH",$J,"VOC",1)=$$VOCN^LEXDFN(LEXD("DF","SUB"))
"RTN","LEXSET5",34,0)
 I $L($G(LEXD("DF","FLN"))) S ^TMP("LEXSCH",$J,"FLN",0)=LEXD("DF","FLN"),^TMP("LEXSCH",$J,"FLN",1)="File Number"
"RTN","LEXSET5",35,0)
 I +($G(LEXLL))>0 S ^TMP("LEXSCH",$J,"LEN",0)=+LEXLL
"RTN","LEXSET5",36,0)
 I +($G(LEXLL))'>0 S ^TMP("LEXSCH",$J,"LEN",0)=5
"RTN","LEXSET5",37,0)
 S ^TMP("LEXSCH",$J,"LEN",1)="List Length"
"RTN","LEXSET5",38,0)
 N LEXLOC,LEXSVC S (LEXLOC,LEXSVC)=""
"RTN","LEXSET5",39,0)
 I +($G(DUZ))>0,'$L($$GET1^DIQ(200,+($G(DUZ)),.01)) D
"RTN","LEXSET5",40,0)
 . S LEXLOC="" S:+($G(LEXLOC))=0 LEXLOC=""
"RTN","LEXSET5",41,0)
 . S:$L($G(LEXLOC))&(+($G(LEXLOC))>0) LEXLOC=$P($G(^SC(LEXLOC,0)),U,1)
"RTN","LEXSET5",42,0)
 . S LEXSVC=$$GET1^DIQ(200,+($G(DUZ)),29) S:+($G(LEXSVC))=0 LEXSVC=""
"RTN","LEXSET5",43,0)
 . S:$L($G(LEXSVC))&(+($G(LEXSVC))>0) LEXSVC=$P($G(^DIC(49,LEXSVC,0)),U,1)
"RTN","LEXSET5",44,0)
 S ^TMP("LEXSCH",$J,"LOC",0)=$E(LEXLOC,1,40),^TMP("LEXSCH",$J,"LOC",1)="User Hospital Location"
"RTN","LEXSET5",45,0)
 S ^TMP("LEXSCH",$J,"SVC",0)=$E(LEXSVC,1,40),^TMP("LEXSCH",$J,"SVC",1)="User Service"
"RTN","LEXSET5",46,0)
 S ^TMP("LEXSCH",$J,"USR",0)=+($G(DUZ)),^TMP("LEXSCH",$J,"USR",1)="User"
"RTN","LEXSET5",47,0)
 Q
"RTN","LEXSET5",48,0)
 Q
"RTN","LEXSET5",49,0)
MTLU ; MTLU Defaults
"RTN","LEXSET5",50,0)
 K LEXSHOW,LEXSUB,XTLKGBL,XTLKKSCH S DIC=""
"RTN","LEXSET5",51,0)
 S:$L($G(LEXD("DF","GBL"))) (DIC,XTLKGBL,XTLKKSCH("GBL"))=LEXD("DF","GBL")
"RTN","LEXSET5",52,0)
 S:$L($G(LEXD("DF","DSP"))) XTLKKSCH("DSPLY")=LEXD("DF","DSP")
"RTN","LEXSET5",53,0)
 S:$L($G(LEXD("DF","IDX"))) XTLKKSCH("INDEX")=LEXD("DF","IDX")
"RTN","LEXSET5",54,0)
 S:$L($G(LEXD("DF","HLP"))) XTLKHLP=LEXD("DF","HLP")
"RTN","LEXSET5",55,0)
 S:$L($G(LEXD("DF","LEXAP"))) LEXAP=LEXD("DF","LEXAP")
"RTN","LEXSET5",56,0)
 S:$L($G(LEXD("DF","UNR"))) LEXUN=LEXD("DF","UNR")
"RTN","LEXSET5",57,0)
 S:$L($G(LEXD("DF","DIS"))) LEXSHOW=LEXD("DF","DIS")
"RTN","LEXSET5",58,0)
 S:$L($G(LEXD("DF","SUB"))) LEXSUB=LEXD("DF","SUB")
"RTN","LEXSET5",59,0)
 S:$L($G(LEXD("DF","FIL"))) DIC("S")=LEXD("DF","FIL")
"RTN","LEXSET5",60,0)
 I DIC=""!('$D(LEXSUB)) D
"RTN","LEXSET5",61,0)
 . S (DIC,XTLKGBL,XTLKKSCH("GBL"))="^LEX(757.01,"
"RTN","LEXSET5",62,0)
 . S XTLKKSCH("INDEX")="AWRD",XTLKKSCH("DSPLY")="XTLK^LEXPRNT"
"RTN","LEXSET5",63,0)
 . S XTLKHLP="D XTLK^LEXHLP",LEXAP=1,LEXLL=5,LEXUN=0
"RTN","LEXSET5",64,0)
 . S:$L($G(^LEXT(757.2,1,200,+($G(DUZ)),1))) DIC("S")=$G(^LEXT(757.2,1,200,+($G(DUZ)),1))
"RTN","LEXSET5",65,0)
 . S LEXSUB="WRD",LEXSHOW="ICD/CPT"
"RTN","LEXSET5",66,0)
 . S:$L($G(^LEXT(757.2,1,200,+($G(DUZ)),2))) LEXSHOW=$G(^LEXT(757.2,1,200,+($G(DUZ)),2))
"RTN","LEXSET5",67,0)
 S XTLKSAY=0 D DIC0 S:$L($G(X)) XTLKX=X
"RTN","LEXSET5",68,0)
 Q
"RTN","LEXSET5",69,0)
DIC0 S:'$L($G(DIC(0))) DIC(0)="EQM"
"RTN","LEXSET5",70,0)
 S:'$L($G(X))&(DIC(0)'["A") DIC(0)="A"_DIC(0)
"RTN","LEXSET5",71,0)
 S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXSET5",72,0)
 S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"L",2)
"RTN","LEXSET5",73,0)
 Q
"RTN","LEXSET5",74,0)
XTLK ; MTLU
"RTN","LEXSET5",75,0)
 N LEXQ S LEXQ=0 D MTLU
"RTN","LEXSET5",76,0)
 I '$D(X)!($G(X)[U)!($G(X)="")!($G(X)=" ") S X=$$TERM
"RTN","LEXSET5",77,0)
 Q:X=""!(X["^")  S XTLKX=X D ^XTLKKWL
"RTN","LEXSET5",78,0)
 K DIC,LEXAP,LEXLL,LEXSHOW,LEXSUB,LEXUN
"RTN","LEXSET5",79,0)
 K XTLKKSCH,XTLKSAY,XTLKWD2,XTLKX,XTLKHLP S:+Y'>0 X=""
"RTN","LEXSET5",80,0)
 Q
"RTN","LEXSET5",81,0)
TERM(X) ; Expression
"RTN","LEXSET5",82,0)
 N DIR,Y S DIR("A")="Enter an expression:  "
"RTN","LEXSET5",83,0)
 S DIR("?")="    "_$$SQ^LEXHLP  ; PCH 11
"RTN","LEXSET5",84,0)
 S DIR("??")="^D TERMHLP^LEXSET5" N Y S DIR(0)="FAO^2:245" D ^DIR
"RTN","LEXSET5",85,0)
 S DIC="^LEX(757.01," S:X[U&(X'["^^") X=U S:X["^^" X="^^" Q:X[U "^"
"RTN","LEXSET5",86,0)
 I X=" ",+($G(^DISV(+($G(DUZ)),DIC)))>0 S X=@(DIC_+($G(^DISV(+($G(DUZ)),DIC)))_",0)") W " ",X
"RTN","LEXSET5",87,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXSET5",88,0)
 W:$D(DTOUT) !,"Try later.",! S:$D(DTOUT) X=""
"RTN","LEXSET5",89,0)
 S:X[U DUOUT=1 K DIR,DIRUT,DIROUT Q X
"RTN","LEXSET5",90,0)
TERMHLP ; Help  PCH 11
"RTN","LEXSET5",91,0)
 N X S X="" S:$L($G(DIR("?"))) X=$G(DIR("?")) S:'$L(X) X="    "_$$SQ^LEXHLP
"RTN","LEXSET5",92,0)
 W:$L(X) !!,X,!
"RTN","LEXSET5",93,0)
 W !,"    Best results occur using one to three full or partial words without"
"RTN","LEXSET5",94,0)
 W !,"    a suffix (i.e., ""DIABETES"",""DIAB MELL"",""DIAB MELL INSUL"") or"
"RTN","LEXSET5",95,0)
 W !,"    a classification code (ICD, CPT, HCPCS, etc)"
"RTN","LEXSET5",96,0)
 Q
"RTN","LEXSRC2")
0^41^B52534156
"RTN","LEXSRC2",1,0)
LEXSRC2 ;ISL/KER - Classification Code Source Util ;04/21/2014
"RTN","LEXSRC2",2,0)
 ;;2.0;LEXICON UTILITY;**25,28,73,80**;Sep 23, 1996;Build 1
"RTN","LEXSRC2",3,0)
 ;               
"RTN","LEXSRC2",4,0)
 ; Global Variables
"RTN","LEXSRC2",5,0)
 ;    None
"RTN","LEXSRC2",6,0)
 ;               
"RTN","LEXSRC2",7,0)
 ; External References
"RTN","LEXSRC2",8,0)
 ;    $$STATCHK^ICDEX     ICR   5747
"RTN","LEXSRC2",9,0)
 ;    $$SYS^ICDEX         ICR   5747
"RTN","LEXSRC2",10,0)
 ;    $$STATCHK^ICPTAPIU  ICR   1997
"RTN","LEXSRC2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXSRC2",12,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXSRC2",13,0)
 ;               
"RTN","LEXSRC2",14,0)
 Q
"RTN","LEXSRC2",15,0)
CPT(LEXC,LEXVDT) ; Return Pointer to Active CPT
"RTN","LEXSRC2",16,0)
 ;                 
"RTN","LEXSRC2",17,0)
 ; Input  CPT Code
"RTN","LEXSRC2",18,0)
 ; Output IEN file 81 of Active Codes only
"RTN","LEXSRC2",19,0)
 S LEXC=$G(LEXC) Q:'$L(LEXC) ""  S LEXVDT=$G(LEXVDT) S:+LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXSRC2",20,0)
 S LEXC=$$STATCHK^ICPTAPIU(LEXC,LEXVDT) Q:+LEXC'>0 ""  S LEXC=$P(LEXC,"^",2) Q:+LEXC'>0 ""
"RTN","LEXSRC2",21,0)
 Q +LEXC
"RTN","LEXSRC2",22,0)
 ;                
"RTN","LEXSRC2",23,0)
ICD(LEXC,LEXVDT) ; Return Pointer to Active ICD/ICP
"RTN","LEXSRC2",24,0)
 ;                 
"RTN","LEXSRC2",25,0)
 ; Input ICD Diagnosis or Procedure
"RTN","LEXSRC2",26,0)
 ; Output IEN file 80 or 80.1 of Active Codes only
"RTN","LEXSRC2",27,0)
 N LEXS S LEXC=$G(LEXC) Q:'$L(LEXC) ""  S LEXVDT=$G(LEXVDT) S:+LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXSRC2",28,0)
 S LEXS=$$SYS^ICDEX(LEXC,LEXVDT),LEXC=$$STATCHK^ICDEX(LEXC,LEXVDT,$G(LEXS))
"RTN","LEXSRC2",29,0)
 Q:+LEXC'>0 ""  S LEXC=$P(LEXC,"^",2) Q:+LEXC'>0 ""
"RTN","LEXSRC2",30,0)
 Q +LEXC
"RTN","LEXSRC2",31,0)
 ;                
"RTN","LEXSRC2",32,0)
STATCHK(CODE,CDT,LEX,SAB) ; Check Status of a Code
"RTN","LEXSRC2",33,0)
 ;                      
"RTN","LEXSRC2",34,0)
 ; Input:
"RTN","LEXSRC2",35,0)
 ;   CODE - Any Code (ICD/CPT/DSM etc) (Required)
"RTN","LEXSRC2",36,0)
 ;   CDT  - Date to screen against (Optional, default TODAY)
"RTN","LEXSRC2",37,0)
 ;   LEX  - Output Array, passed by reference (Optional)
"RTN","LEXSRC2",38,0)
 ;   SAB  - Source Abbreviation or pointer to 757.03 (Optional)
"RTN","LEXSRC2",39,0)
 ;                      
"RTN","LEXSRC2",40,0)
 ; Output:
"RTN","LEXSRC2",41,0)
 ;                      
"RTN","LEXSRC2",42,0)
 ;   2, 3 or 4 Piece String containing the code's status,
"RTN","LEXSRC2",43,0)
 ;   the IEN, and if the status exist, the effective
"RTN","LEXSRC2",44,0)
 ;   date, else -1 in lieu of the IEN.
"RTN","LEXSRC2",45,0)
 ;           
"RTN","LEXSRC2",46,0)
 ;   The following are possible outputs:
"RTN","LEXSRC2",47,0)
 ;           
"RTN","LEXSRC2",48,0)
 ;       1 ^ IEN ^ Active Date   ^ Initial Date    Active Code
"RTN","LEXSRC2",49,0)
 ;       1 ^ IEN ^ Revision Date ^ Initial Date    Revised Code
"RTN","LEXSRC2",50,0)
 ;       0 ^ IEN ^ Effective Date                  Inactive Code
"RTN","LEXSRC2",51,0)
 ;       0 ^ IEN                                   Not Yet Active
"RTN","LEXSRC2",52,0)
 ;       0 ^ -1                                    Code not Found
"RTN","LEXSRC2",53,0)
 ;                      
"RTN","LEXSRC2",54,0)
 ;   ASTM Triplet in array LEX passed by reference (optional)
"RTN","LEXSRC2",55,0)
 ;                      
"RTN","LEXSRC2",56,0)
 ;   ASTM Triplet with Major Concept Map and Semantic
"RTN","LEXSRC2",57,0)
 ;   Map in array LEX passed by reference (optional)
"RTN","LEXSRC2",58,0)
 ;                    
"RTN","LEXSRC2",59,0)
 ;
"RTN","LEXSRC2",60,0)
 ;     LEX(0)  =  Code, a 2 Piece String containing:
"RTN","LEXSRC2",61,0)
 ;
"RTN","LEXSRC2",62,0)
 ;         1 - IEN in the CODES file #757.02
"RTN","LEXSRC2",63,0)
 ;         2 - the code (external)
"RTN","LEXSRC2",64,0)
 ;                    
"RTN","LEXSRC2",65,0)
 ;     LEX(1)  =  Expression, a 2 Piece String containing:
"RTN","LEXSRC2",66,0)
 ;
"RTN","LEXSRC2",67,0)
 ;         1 - IEN in the EXPRESSION file #757.01
"RTN","LEXSRC2",68,0)
 ;         2 - the code expression (external)
"RTN","LEXSRC2",69,0)
 ;
"RTN","LEXSRC2",70,0)
 ;     LEX(2)  =  Coding System, a 4 Piece String containing:
"RTN","LEXSRC2",71,0)
 ;
"RTN","LEXSRC2",72,0)
 ;         1 - IEN in the CODING SYSTEMS file #757.03
"RTN","LEXSRC2",73,0)
 ;         2 - Source Abbreviation (i.e., ICD or CPT)
"RTN","LEXSRC2",74,0)
 ;         3 - Source Nomenclature (i.e., ICD-9-CM or CPT-4)
"RTN","LEXSRC2",75,0)
 ;         4 - Source Full Name
"RTN","LEXSRC2",76,0)
 ;                    
"RTN","LEXSRC2",77,0)
 ;     LEX(3)  =  Major Concept, a 3 Piece String containing:
"RTN","LEXSRC2",78,0)
 ;
"RTN","LEXSRC2",79,0)
 ;         1 - IEN in the MAJOR CONCEPT MAP file #757
"RTN","LEXSRC2",80,0)
 ;         2 - IEN in the EXPRESSIONS file #757.01
"RTN","LEXSRC2",81,0)
 ;         3 - The Major Concept expression, which may be
"RTN","LEXSRC2",82,0)
 ;             different from the code's expression in LEX(1)
"RTN","LEXSRC2",83,0)
 ;                    
"RTN","LEXSRC2",84,0)
 ;     LEX(4,#)=  Semantics (multiple), a 5 Piece String:
"RTN","LEXSRC2",85,0)
 ;
"RTN","LEXSRC2",86,0)
 ;         1 - IEN in the SEMANTIC MAP file #757.1
"RTN","LEXSRC2",87,0)
 ;         2 - IEN in the SEMANTIC CLASS file #757.11
"RTN","LEXSRC2",88,0)
 ;         3 - IEN in the SEMANTIC TYPE file #757.12
"RTN","LEXSRC2",89,0)
 ;         4 - External Semantic Class
"RTN","LEXSRC2",90,0)
 ;         5 - External Semantic Type 
"RTN","LEXSRC2",91,0)
 ;     
"RTN","LEXSRC2",92,0)
 ; This API requires the ACT Cross-Reference
"RTN","LEXSRC2",93,0)
 ;       ^LEX(757.02,"ACT",<code>,<status>,<date>,<ien>)
"RTN","LEXSRC2",94,0)
 ;
"RTN","LEXSRC2",95,0)
 ; Variables used
"RTN","LEXSRC2",96,0)
 ;   LEXC      Code     from input parameter
"RTN","LEXSRC2",97,0)
 ;   LEXDT     Date     from input parameter
"RTN","LEXSRC2",98,0)
 ;   LEXSAB    Source   from input parameter (patch 57)
"RTN","LEXSRC2",99,0)
 ;   LEXAE     Last Activation IEN for SAB
"RTN","LEXSRC2",100,0)
 ;   LEXAP     Last Activation Date for SAB
"RTN","LEXSRC2",101,0)
 ;   LEXIE     Last Inactivation IEN for SAB
"RTN","LEXSRC2",102,0)
 ;   LEXIP     Last Inactivation Date for SAB
"RTN","LEXSRC2",103,0)
 ;   LEXED     Earliest Date Possible for SAB
"RTN","LEXSRC2",104,0)
 ;   LEXEE     Earliest Date IEN for SAB
"RTN","LEXSRC2",105,0)
 ;   LEXE      Counter (for Earliest loop)
"RTN","LEXSRC2",106,0)
 ;   LEXI      Counter (for IEN loop)
"RTN","LEXSRC2",107,0)
 ;   LEXMR     Most Recent Date
"RTN","LEXSRC2",108,0)
 ;   LEXMRI    IEN for Most Recent Date for SAB
"RTN","LEXSRC2",109,0)
 ;   LEXN      Data Node
"RTN","LEXSRC2",110,0)
 ;   LEXO      Temporary Value for $O Loops
"RTN","LEXSRC2",111,0)
 ;   LEXSTAT   Status
"RTN","LEXSRC2",112,0)
 ;   LEXTDT    Input Date Offset
"RTN","LEXSRC2",113,0)
 ;   X         Output
"RTN","LEXSRC2",114,0)
 ;   LEX       Output Array (when passed)
"RTN","LEXSRC2",115,0)
 ;   
"RTN","LEXSRC2",116,0)
 ; Integration Agreement
"RTN","LEXSRC2",117,0)
 ;   4083     $$STATCHK^LEXSRC2()
"RTN","LEXSRC2",118,0)
 ;              
"RTN","LEXSRC2",119,0)
 N LEXAE,LEXAP,LEXC,LEXDT,LEXE,LEXED,LEXEE,LEXI,LEXIE,LEXIP,LEXMR
"RTN","LEXSRC2",120,0)
 N LEXMRI,LEXN,LEXINIT,LEXO,LEXSAB,LEXSTAT,LEXTDT,X
"RTN","LEXSRC2",121,0)
 S LEXC=$G(CODE) I '$L(LEXC) S (LEX,X)="0^-1" D UPD Q X
"RTN","LEXSRC2",122,0)
 S LEXDT=$P($G(CDT),".",1),LEXDT=$S(+LEXDT>0:LEXDT,1:$$DT^XLFDT)
"RTN","LEXSRC2",123,0)
 S LEXSAB=$$SAB($G(SAB)),LEXTDT=LEXDT+.00001
"RTN","LEXSRC2",124,0)
 ; Find preceding active date/IEN for SAB           LEXAP/LEXAE
"RTN","LEXSRC2",125,0)
 ;   and earliest possible active date/IEN for SAB  LEXED/LEXEE
"RTN","LEXSRC2",126,0)
 S (LEXED,LEXEE,LEXAE,LEXAP)="",LEXO=LEXTDT F  S LEXO=$O(^LEX(757.02,"ACT",(LEXC_" "),3,LEXO),-1) D  Q:+LEXO'>0
"RTN","LEXSRC2",127,0)
 . I '$L(LEXO)!(+LEXO'>0) D  Q
"RTN","LEXSRC2",128,0)
 . . N LEXE S LEXE=LEXTDT F  S LEXE=$O(^LEX(757.02,"ACT",(LEXC_" "),1,LEXE)) Q:+LEXE'>0  D  Q:+LEXED>0&(+LEXEE>0)
"RTN","LEXSRC2",129,0)
 . . . N LEXI S LEXI=0 F  S LEXI=$O(^LEX(757.02,"ACT",(LEXC_" "),1,LEXE,LEXI)) Q:+LEXI'>0  D  Q:+LEXED>0&(+LEXEE>0)
"RTN","LEXSRC2",130,0)
 . . . . Q:+LEXED>0&(+LEXEE>0)  N LEXN S LEXN=$G(^LEX(757.02,+LEXI,0)) Q:+LEXSAB>0&($P(LEXN,"^",3)'=+LEXSAB)
"RTN","LEXSRC2",131,0)
 . . . . S:'$L(LEXED) LEXED=LEXE S:'$L(LEXEE) LEXEE=LEXI
"RTN","LEXSRC2",132,0)
 . N LEXI S LEXI=" " F  S LEXI=$O(^LEX(757.02,"ACT",(LEXC_" "),3,LEXO,LEXI),-1) Q:+LEXI'>0  D
"RTN","LEXSRC2",133,0)
 . . N LEXN S LEXN=$G(^LEX(757.02,+LEXI,0)) Q:+LEXSAB>0&($P(LEXN,"^",3)'=+LEXSAB)
"RTN","LEXSRC2",134,0)
 . . S:'$L(LEXAP) LEXAP=LEXO S:'$L(LEXAE) LEXAE=LEXI
"RTN","LEXSRC2",135,0)
 ; Find preceding inactive date/IEN for SAB         LEXIP/LEXIE
"RTN","LEXSRC2",136,0)
 N LEXO,LEXIP,LEXIE S (LEXIE,LEXIP)="",LEXO=LEXTDT F  S LEXO=$O(^LEX(757.02,"ACT",LEXC_" ",2,LEXO),-1) Q:+LEXO'>0  D
"RTN","LEXSRC2",137,0)
 . N LEXI S LEXI=" " F  S LEXI=$O(^LEX(757.02,"ACT",LEXC_" ",2,LEXO,LEXI),-1) Q:+LEXI'>0  D
"RTN","LEXSRC2",138,0)
 . . N LEXN S LEXN=$G(^LEX(757.02,+LEXI,0)) Q:+LEXSAB>0&($P(LEXN,"^",3)'=+LEXSAB)
"RTN","LEXSRC2",139,0)
 . . S:'$L(LEXIP) LEXIP=LEXO S:'$L(LEXIE) LEXIE=LEXI
"RTN","LEXSRC2",140,0)
 ; Quit if input date is before earliest date
"RTN","LEXSRC2",141,0)
 I +LEXAP'>0,+LEXIP'>0,+LEXEE>0,+LEXED>0,LEXED?7N,LEXED>LEXDT S X="0^"_LEXEE D UPD Q X
"RTN","LEXSRC2",142,0)
 ; Quit if both active/inactive dates are zero
"RTN","LEXSRC2",143,0)
 I +LEXAP=0,+LEXIP=0 S (LEX,X)="0^-1" D UPD Q X
"RTN","LEXSRC2",144,0)
 ; Find the most recent date/IEN/Status LEXMR/LEXMRI/LEXSTAT
"RTN","LEXSRC2",145,0)
 S:LEXAP>LEXIP!(LEXAP=LEXIP) LEXMR=LEXAP,LEXMRI=LEXAE,LEXSTAT=1
"RTN","LEXSRC2",146,0)
 S:LEXAP<LEXIP LEXMR=LEXIP,LEXMRI=LEXIE,LEXSTAT=0
"RTN","LEXSRC2",147,0)
 ; Check for difficulties from date errors for SAB
"RTN","LEXSRC2",148,0)
 D ADJ
"RTN","LEXSRC2",149,0)
 S LEXINIT="" I LEXMR?7N,LEXSTAT>0 S LEXINIT=$$INIT(LEXC,LEXMR)
"RTN","LEXSRC2",150,0)
 ; Quit with status, code IEN and effective date
"RTN","LEXSRC2",151,0)
 S (LEX,X)=LEXSTAT_"^"_LEXMRI_"^"_LEXMR D UPD
"RTN","LEXSRC2",152,0)
 S:(LEXMR?7N)&(LEXSTAT>0)&(LEXINIT?7N)&(LEXMR'=LEXINIT) $P(LEX,"^",4)=LEXINIT,X=LEX
"RTN","LEXSRC2",153,0)
 Q X
"RTN","LEXSRC2",154,0)
SAB(X) ; Resolve SAB
"RTN","LEXSRC2",155,0)
 N Y S Y=$G(X) Q:'$L($G(Y)) ""  S X=+($O(^LEX(757.03,"ASAB",$E($G(Y),1,3),0))) Q:+X>0 X  S X=+Y Q:$D(^LEX(757.03,+Y,0)) X
"RTN","LEXSRC2",156,0)
 Q ""
"RTN","LEXSRC2",157,0)
ADJ ; Do we have adjacent dates for SAB
"RTN","LEXSRC2",158,0)
 N LEXND,LEXNI,LEXNS,LEXNO,LEXN S LEXND=$$FMADD^XLFDT($G(LEXMR),1)
"RTN","LEXSRC2",159,0)
 S LEXNO='LEXSTAT,LEXNS=2+LEXNO Q:LEXND'?7N
"RTN","LEXSRC2",160,0)
 S LEXNI=$O(^LEX(757.02,"ACT",(LEXC_" "),LEXNS,LEXND," "),-1)
"RTN","LEXSRC2",161,0)
 Q:+LEXNI'>0  S LEXN=$G(^LEX(757.02,+LEXMRI,0))
"RTN","LEXSRC2",162,0)
 I +($G(LEXSAB))>0&($P(LEXN,"^",3)=+($G(LEXSAB))) S LEXSTAT=LEXNO,LEXMR=LEXND,LEXMRI=LEXNI
"RTN","LEXSRC2",163,0)
 Q
"RTN","LEXSRC2",164,0)
INIT(X,Y) ; Inital Activation Dates (revised codes only)
"RTN","LEXSRC2",165,0)
 N LEXA,LEXC,LEXI,LEXOFF,LEXMR S LEXC=$G(X),LEXMR=$G(Y),X="" Q:'$L($G(LEXC))  Q:$G(LEXMR)'?7N
"RTN","LEXSRC2",166,0)
 I '$D(^LEX(757.02,"ACT",(LEXC_" "),1,LEXMR)) S LEXMR=$O(^LEX(757.02,"ACT",(LEXC_" "),1,LEXMR),-1)
"RTN","LEXSRC2",167,0)
 Q:$G(LEXMR)'?7N  S LEXA=(LEXMR-.001)
"RTN","LEXSRC2",168,0)
 S LEXOFF=$$FMADD^XLFDT(LEXMR,-1)
"RTN","LEXSRC2",169,0)
 F  S LEXA=$O(^LEX(757.02,"ACT",(LEXC_" "),1,LEXA),-1) Q:LEXA'?7N  D
"RTN","LEXSRC2",170,0)
 . S LEXI=$O(^LEX(757.02,"ACT",(LEXC_" "),0,LEXA))
"RTN","LEXSRC2",171,0)
 . I LEXI>LEXA,LEXI?7N,LEXI'<LEXOFF S X=LEXA
"RTN","LEXSRC2",172,0)
 S:'$L(X)&(LEXMR?7N) X=LEXMR
"RTN","LEXSRC2",173,0)
 Q X
"RTN","LEXSRC2",174,0)
UPD ; Update Array
"RTN","LEXSRC2",175,0)
 N LEXI,LEXC,LEXN,LEXM,LEXE,LEXS,LEXC S LEXI=+($P($G(X),"^",2)) Q:+LEXI'>0
"RTN","LEXSRC2",176,0)
 S LEXN=$G(^LEX(757.02,+LEXI,0)),LEXE=+LEXN,LEXC=$P(LEXN,"^",2)
"RTN","LEXSRC2",177,0)
 S LEXS=+($P(LEXN,"^",3)),LEXM=+($P(LEXN,"^",4)),LEX(0)=+LEXI_"^"_LEXC
"RTN","LEXSRC2",178,0)
 S LEX(1)=LEXE_"^"_$P($G(^LEX(757.01,+LEXE,0)),"^",1)
"RTN","LEXSRC2",179,0)
 S LEX(2)=LEXS_"^"_$P($G(^LEX(757.03,+LEXS,0)),"^",1,3)
"RTN","LEXSRC2",180,0)
 S LEX(3)=LEXM_"^"_$P($G(^LEX(757,+LEXM,0)),"^",1)_"^"_$G(^LEX(757.01,+($P($G(^LEX(757,+LEXM,0)),"^",1)),0))
"RTN","LEXSRC2",181,0)
 S (LEXI,LEXS)=0 F  S LEXS=$O(^LEX(757.1,"B",+LEXM,LEXS)) Q:+LEXS'>0  D
"RTN","LEXSRC2",182,0)
 . N LEXN,LEXC,LEXT,LEXCT,LEXTT S LEXN=$G(^LEX(757.1,+LEXS,0)),LEXC=$P(LEXN,"^",2),LEXT=$P(LEXN,"^",3)
"RTN","LEXSRC2",183,0)
 . S LEXCT=$P($G(^LEX(757.11,+LEXC,0)),"^",2),LEXTT=$P($G(^LEX(757.12,+LEXT,0)),"^",2)
"RTN","LEXSRC2",184,0)
 . I LEXC>0,LEXT>0,$L(LEXCT),$L(LEXTT)  D
"RTN","LEXSRC2",185,0)
 . . S LEXI=LEXI+1,LEX(4,LEXI)=LEXS_"^"_LEXC_"^"_LEXT_"^"_LEXCT_"^"_LEXTT
"RTN","LEXSRC2",186,0)
 Q
"RTN","LEXSRC2",187,0)
PI(X) ; Preferred IEN for code X
"RTN","LEXSRC2",188,0)
 N LEXE,LEXLA,LEXA,LEXS,LEXC,LEXP,LEXPF,LEXF,LEXI,LEXC,LEXFL
"RTN","LEXSRC2",189,0)
 S LEXC=$G(X) Q:'$L(LEXC) ""  S (LEXP,LEXF,LEXI)=0,LEXPF(0)=LEXC
"RTN","LEXSRC2",190,0)
 F  S LEXI=$O(^LEX(757.02,"CODE",(LEXC_" "),LEXI)) Q:+LEXI=0!(LEXP>0)  D
"RTN","LEXSRC2",191,0)
 . S:+LEXF'>0 LEXF=LEXI S LEXFL=$S(+($P($G(^LEX(757.02,+LEXI,0)),"^",5))>0:1,1:0)
"RTN","LEXSRC2",192,0)
 . S LEXE=0,LEXLA="" F  S LEXE=$O(^LEX(757.02,+LEXI,4,LEXE)) Q:+LEXE=0  D
"RTN","LEXSRC2",193,0)
 . . S LEXS=$P($G(^LEX(757.02,+LEXI,4,LEXE,0)),"^",2) Q:+LEXS'>0
"RTN","LEXSRC2",194,0)
 . . S LEXA=$P($G(^LEX(757.02,+LEXI,4,LEXE,0)),"^",1)
"RTN","LEXSRC2",195,0)
 . . S:+LEXA>+LEXLA LEXLA=+LEXA
"RTN","LEXSRC2",196,0)
 . S:+LEXLA>0 LEXPF(LEXFL,LEXLA,LEXI)=""
"RTN","LEXSRC2",197,0)
 S X="" I $D(LEXPF(1)) S X=$O(LEXPF(1," "),-1),X=$O(LEXPF(1,+X," "),-1)
"RTN","LEXSRC2",198,0)
 I '$D(LEXPF(1)),$D(LEXPF(0)) S X=$O(LEXPF(0," "),-1),X=$O(LEXPF(0,+X," "),-1)
"RTN","LEXSRC2",199,0)
 Q X
"RTN","LEXTOKN")
0^219^B54550782
"RTN","LEXTOKN",1,0)
LEXTOKN ;ISL/KER - Parse term into words ;04/21/2014
"RTN","LEXTOKN",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXTOKN",3,0)
 ;               
"RTN","LEXTOKN",4,0)
 ; Global Variables
"RTN","LEXTOKN",5,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXTOKN",6,0)
 ;               
"RTN","LEXTOKN",7,0)
 ; External References
"RTN","LEXTOKN",8,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXTOKN",9,0)
 ;               
"RTN","LEXTOKN",10,0)
 ;               
"RTN","LEXTOKN",11,0)
 ; External References
"RTN","LEXTOKN",12,0)
 ;    $$SW^LEXTOKN2
"RTN","LEXTOKN",13,0)
 ;    ORD^LEXTOKN2
"RTN","LEXTOKN",14,0)
 ;    ST^LEXTOKN2
"RTN","LEXTOKN",15,0)
 ;    $$UP^XLFSTR
"RTN","LEXTOKN",16,0)
 ;               
"RTN","LEXTOKN",17,0)
 ; Lexicon files accessed
"RTN","LEXTOKN",18,0)
 ;    ^LEX(757.01         Expression File
"RTN","LEXTOKN",19,0)
 ;    ^LEX(757.04         Excluded Words
"RTN","LEXTOKN",20,0)
 ;    ^LEX(757.05         Replacement Words
"RTN","LEXTOKN",21,0)
 ;    
"RTN","LEXTOKN",22,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXTOKN",23,0)
 ;     DA       Set and Killed by Fileman
"RTN","LEXTOKN",24,0)
 ;     LEXIDX   Set if parsing for indexing logic (LEXNDX*)
"RTN","LEXTOKN",25,0)
 ;     LEXLOOK  Set if parsing for Lookup logic (LEXA)
"RTN","LEXTOKN",26,0)
 ;     LEXLOW   Set of lower case is needed (LEXNDX2)
"RTN","LEXTOKN",27,0)
 ;               
"RTN","LEXTOKN",28,0)
 ; Returns ^TMP("LEXTKN",$J,#,WORD) containing words
"RTN","LEXTOKN",29,0)
 ; 
"RTN","LEXTOKN",30,0)
 ; Special variables:
"RTN","LEXTOKN",31,0)
 ; 
"RTN","LEXTOKN",32,0)
 ; LEXIDX    If set, then the Excluded Words file is used 
"RTN","LEXTOKN",33,0)
 ;           to selectively exclude words from the indexing
"RTN","LEXTOKN",34,0)
 ;           process and both singular and plural forms are
"RTN","LEXTOKN",35,0)
 ;           indexed.
"RTN","LEXTOKN",36,0)
 ; 
"RTN","LEXTOKN",37,0)
 ; LEXLOOK   If set, then the Excluded Words file is used
"RTN","LEXTOKN",38,0)
 ;           to selectively exclude words from the look-up
"RTN","LEXTOKN",39,0)
 ;           process and only singular forms are used when
"RTN","LEXTOKN",40,0)
 ;           one is found.
"RTN","LEXTOKN",41,0)
 ; 
"RTN","LEXTOKN",42,0)
 ; If LEXIDX or LEXLOOK exist, then LEXLOW is ignored.
"RTN","LEXTOKN",43,0)
 ; 
"RTN","LEXTOKN",44,0)
 ; If LEXIDX and LEXLOOK do not exist then ALL words are 
"RTN","LEXTOKN",45,0)
 ; parsed and returned in the global array.
"RTN","LEXTOKN",46,0)
 ;
"RTN","LEXTOKN",47,0)
PT ; Entry point where DA is defined and X is unknown
"RTN","LEXTOKN",48,0)
 Q:'$D(DA)  S X=^LEX(757.01,DA,0)
"RTN","LEXTOKN",49,0)
PTX ; Entry point to parse string (X must exist)
"RTN","LEXTOKN",50,0)
 N LEXOK,LEXTOKS,LEXTOKS2,LEXTOKI,LEXTOKW,LEXTOLKN
"RTN","LEXTOKN",51,0)
 N LEXOKC,LEXOKN,LEXOKP,LEXTOKAA,LEXTOKAB,LEXTOKAC
"RTN","LEXTOKN",52,0)
 ;   Prevent lowercase indexing and lookup
"RTN","LEXTOKN",53,0)
 I $D(LEXIDX)!($D(LEXLOOK)) K LEXLOW
"RTN","LEXTOKN",54,0)
 K ^TMP("LEXTKN",$J) Q:'$L($G(X))  S X=$$SW^LEXTOKN2($G(X))
"RTN","LEXTOKN",55,0)
 S LEXTOKS=$TR(X,"-"," "),LEXTOKS=$TR(LEXTOKS,$C(9)," ")
"RTN","LEXTOKN",56,0)
 ;   Remove leading blanks from string
"RTN","LEXTOKN",57,0)
 F LEXOKP=1:1:$L(LEXTOKS) Q:$E(LEXTOKS,LEXOKP)'[" "
"RTN","LEXTOKN",58,0)
 S LEXTOKS=$E(LEXTOKS,LEXOKP,$L(LEXTOKS))
"RTN","LEXTOKN",59,0)
 ;   Remove trailing blanks from string
"RTN","LEXTOKN",60,0)
 F LEXOKP=$L(LEXTOKS):-1:1 Q:$E(LEXTOKS,LEXOKP)'[" "
"RTN","LEXTOKN",61,0)
 S LEXTOKS=$E(LEXTOKS,1,LEXOKP)
"RTN","LEXTOKN",62,0)
 ;   Remove Punctuation (less slashes)
"RTN","LEXTOKN",63,0)
 S LEXTOKS=$TR(LEXTOKS,"?`~!@#$%^&*()_-+={}[]\:;,<>","                            ")
"RTN","LEXTOKN",64,0)
 ;   Conditionally remove slashes
"RTN","LEXTOKN",65,0)
 S:$D(LEXIDX) LEXTOKS=$TR(LEXTOKS,"/"," ")
"RTN","LEXTOKN",66,0)
 S:$E($P(LEXTOKS,".",2),1)'?1N LEXTOKS=$TR(LEXTOKS,"."," ")
"RTN","LEXTOKN",67,0)
 S LEXTOKS=$TR(LEXTOKS,"""","")
"RTN","LEXTOKN",68,0)
 ;   Swtich to UPPERCASE (lower case is not specified by LEXLOW)
"RTN","LEXTOKN",69,0)
 S:'$D(LEXLOW) LEXTOKS=$$UP^XLFSTR(LEXTOKS)
"RTN","LEXTOKN",70,0)
 ;   Store in temporary array (based on space character)
"RTN","LEXTOKN",71,0)
 S LEXOKC=0 F LEXTOKI=1:1:$L(LEXTOKS," ") D
"RTN","LEXTOKN",72,0)
 . N LEXTOKW S LEXTOKW=$P(LEXTOKS," ",LEXTOKI) Q:LEXTOKW=""
"RTN","LEXTOKN",73,0)
 . I LEXTOKW'["/" D
"RTN","LEXTOKN",74,0)
 . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=LEXTOKW
"RTN","LEXTOKN",75,0)
 . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOKN",76,0)
 . I LEXTOKW["/"&('$D(^LEX(757.05,"B",LEXTOKW))) D  Q
"RTN","LEXTOKN",77,0)
 . . N LEXP S LEXP=0 F  S LEXP=LEXP+1 Q:$P(LEXTOKW,"/",LEXP)=""  D
"RTN","LEXTOKN",78,0)
 . . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=$P(LEXTOKW,"/",LEXP)
"RTN","LEXTOKN",79,0)
 . . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOKN",80,0)
 . I LEXTOKW["/"&($D(^LEX(757.05,"B",LEXTOKW))) D
"RTN","LEXTOKN",81,0)
 . . N LEXOKR S LEXOKR=$O(^LEX(757.05,"B",LEXTOKW,0))
"RTN","LEXTOKN",82,0)
 . . I $P($G(^LEX(757.05,LEXOKR,0)),U,3)="R" D
"RTN","LEXTOKN",83,0)
 . . . S LEXOKC=LEXOKC+1,LEXTOLKN(LEXOKC)=LEXTOKW
"RTN","LEXTOKN",84,0)
 . . . S LEXTOLKN(0)=LEXOKC
"RTN","LEXTOKN",85,0)
 K LEXOKC,LEXOKR
"RTN","LEXTOKN",86,0)
 I +($G(LEXTOLKN(0)))=0 K LEXTOLKN S ^TMP("LEXTKN",$J,0)=0 G EXIT
"RTN","LEXTOKN",87,0)
 S LEXTOKW="",LEXOKN=0 F LEXTOKI=1:1:LEXTOLKN(0) D
"RTN","LEXTOKN",88,0)
 . S LEXTOKW=$G(LEXTOLKN(LEXTOKI))
"RTN","LEXTOKN",89,0)
 . ;   Remove leading blanks
"RTN","LEXTOKN",90,0)
 . F LEXOKP=1:1:$L(LEXTOKW) Q:$E(LEXTOKW,LEXOKP)'[" "
"RTN","LEXTOKN",91,0)
 . S LEXTOKW=$E(LEXTOKW,LEXOKP,$L(LEXTOKW))
"RTN","LEXTOKN",92,0)
 . ;   Remove trailing blanks
"RTN","LEXTOKN",93,0)
 . F LEXOKP=$L(LEXTOKW):-1:1 Q:$E(LEXTOKW,LEXOKP)'[" "
"RTN","LEXTOKN",94,0)
 . S LEXTOKW=$E(LEXTOKW,1,LEXOKP)
"RTN","LEXTOKN",95,0)
 . ;   Apostrophy "S"
"RTN","LEXTOKN",96,0)
 . I $E(LEXTOKW,($L(LEXTOKW)-1),$L(LEXTOKW))["'S" S LEXTOKW=$E(LEXTOKW,1,($L(LEXTOKW)-2))
"RTN","LEXTOKN",97,0)
 . ;   Apostrophies and spaces
"RTN","LEXTOKN",98,0)
 . S LEXTOKW=$TR(LEXTOKW,"'",""),LEXTOKW=$TR(LEXTOKW," ","")
"RTN","LEXTOKN",99,0)
 . ;   Excluded Words
"RTN","LEXTOKN",100,0)
 . ;     Exclude from Indexing
"RTN","LEXTOKN",101,0)
 . I $D(LEXIDX) D
"RTN","LEXTOKN",102,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"I")) LEXTOKW=""
"RTN","LEXTOKN",103,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"B")) LEXTOKW=""
"RTN","LEXTOKN",104,0)
 . ;     Exclude from Lookup
"RTN","LEXTOKN",105,0)
 . I $D(LEXLOOK) D
"RTN","LEXTOKN",106,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"L")) LEXTOKW=""
"RTN","LEXTOKN",107,0)
 . . I LEXTOKW'="" S:$D(^LEX(757.04,"ACTION",LEXTOKW,"B")) LEXTOKW=""
"RTN","LEXTOKN",108,0)
 . I $D(LEXOKN),$L($G(LEXTOKW)) D
"RTN","LEXTOKN",109,0)
 . . ;   Replacement Words
"RTN","LEXTOKN",110,0)
 . . I $P($G(^LEX(757.05,+($O(^LEX(757.05,"B",LEXTOKW,0))),0)),"^",3)="R" D REP(LEXTOKW) Q
"RTN","LEXTOKN",111,0)
 . . I '$D(^TMP("LEXTKN",$J,"B",LEXTOKW)) D
"RTN","LEXTOKN",112,0)
 . . . S LEXOKN=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXTOKN",113,0)
 . . . S ^TMP("LEXTKN",$J,LEXOKN,LEXTOKW)=""
"RTN","LEXTOKN",114,0)
 . . . S ^TMP("LEXTKN",$J,"B",LEXTOKW)=""
"RTN","LEXTOKN",115,0)
 . S LEXTOKW=""
"RTN","LEXTOKN",116,0)
 S LEXOKC=0 F  S LEXOKC=$O(^TMP("LEXTKN",$J,LEXOKC)) Q:+LEXOKC'>0  D
"RTN","LEXTOKN",117,0)
 . S LEXTOKW="" F  S LEXTOKW=$O(^TMP("LEXTKN",$J,LEXOKC,LEXTOKW)) Q:'$L(LEXTOKW)  D
"RTN","LEXTOKN",118,0)
 . . N LEXSIN S LEXSIN=$$SIN(LEXTOKW) Q:'$L(LEXSIN)
"RTN","LEXTOKN",119,0)
 . . I $D(LEXIDX) D
"RTN","LEXTOKN",120,0)
 . . . S LEXI=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXTOKN",121,0)
 . . . S ^TMP("LEXTKN",$J,LEXI,LEXSIN)="",^TMP("LEXTKN",$J,"B",LEXSIN)=""
"RTN","LEXTOKN",122,0)
 . . I $D(LEXLOOK) D
"RTN","LEXTOKN",123,0)
 . . . K ^TMP("LEXTKN",$J,LEXOKC,LEXTOKW),^TMP("LEXTKN",$J,"B",LEXTOKW)
"RTN","LEXTOKN",124,0)
 . . . S ^TMP("LEXTKN",$J,LEXOKC,LEXSIN)="",^TMP("LEXTKN",$J,"B",LEXSIN)=""
"RTN","LEXTOKN",125,0)
 S (LEXOKN,LEXOKC)=0 F  S LEXOKC=$O(^TMP("LEXTKN",$J,LEXOKC)) Q:+LEXOKC'>0  S LEXOKN=LEXOKN+1
"RTN","LEXTOKN",126,0)
 S ^TMP("LEXTKN",$J,0)=LEXOKN
"RTN","LEXTOKN",127,0)
 K ^TMP("LEXTKN",$J,"B")
"RTN","LEXTOKN",128,0)
EXIT ; Clean up and quit PTX
"RTN","LEXTOKN",129,0)
 K LEXOK,LEXTOKI,LEXOKN,LEXOKP,LEXOKR,LEXTOKS,LEXTOKS2,LEXTOKW,LEXTOLKN
"RTN","LEXTOKN",130,0)
 Q
"RTN","LEXTOKN",131,0)
 ; 
"RTN","LEXTOKN",132,0)
 ; Miscellaneous
"RTN","LEXTOKN",133,0)
ORD ;   Reorder Global Array
"RTN","LEXTOKN",134,0)
 D ORD^LEXTOKN2
"RTN","LEXTOKN",135,0)
 Q
"RTN","LEXTOKN",136,0)
REP(X) ;   Replace
"RTN","LEXTOKN",137,0)
 N LEXREP,LEXTXT,LEXREF,LEXFLG,LEXARY,LEXIN,LEXWITH,LEXI,LEXO
"RTN","LEXTOKN",138,0)
 S (LEXO,LEXFLG)=0,LEXIN=$G(X) Q:'$L(LEXIN)
"RTN","LEXTOKN",139,0)
 S:$D(LEXIDX)&'$D(LEXLOOK) LEXFLG=1
"RTN","LEXTOKN",140,0)
 S:'$D(LEXIDX)&$D(LEXLOOK) LEXFLG=2
"RTN","LEXTOKN",141,0)
 S:$D(LEXIDX)&$D(LEXLOOK) LEXFLG=3
"RTN","LEXTOKN",142,0)
 S LEXTXT=$P($G(^LEX(757.05,+($O(^LEX(757.05,"B",LEXIN,0))),0)),"^",2)
"RTN","LEXTOKN",143,0)
 S LEXWITH=$$WITH(LEXTXT,.LEXARY,LEXFLG)
"RTN","LEXTOKN",144,0)
 I LEXFLG=1 D
"RTN","LEXTOKN",145,0)
 . Q:$D(LEXLOOK)  Q:'$L(LEXIN)
"RTN","LEXTOKN",146,0)
 . I '$D(^TMP("LEXTKN",$J,"B",LEXIN)) D
"RTN","LEXTOKN",147,0)
 . . S LEXOKN=+($G(LEXOKN))+1
"RTN","LEXTOKN",148,0)
 . . S ^TMP("LEXTKN",$J,LEXOKN,LEXIN)="",LEXO=1
"RTN","LEXTOKN",149,0)
 . . S ^TMP("LEXTKN",$J,"B",LEXIN)=""
"RTN","LEXTOKN",150,0)
 I LEXWITH>0 D
"RTN","LEXTOKN",151,0)
 . N LEXI,LEXW S LEXI=0 F  S LEXI=$O(LEXARY(LEXI)) Q:+LEXI'>0  D
"RTN","LEXTOKN",152,0)
 . . S LEXW=$G(LEXARY(LEXI)) Q:'$L(LEXW)
"RTN","LEXTOKN",153,0)
 . . I '$D(^TMP("LEXTKN",$J,"B",LEXW)) D
"RTN","LEXTOKN",154,0)
 . . . S LEXOKN=+($G(LEXOKN))+1
"RTN","LEXTOKN",155,0)
 . . . S ^TMP("LEXTKN",$J,LEXOKN,LEXW)="",LEXO=1
"RTN","LEXTOKN",156,0)
 . . . S ^TMP("LEXTKN",$J,"B",LEXW)=""
"RTN","LEXTOKN",157,0)
 Q LEXO
"RTN","LEXTOKN",158,0)
WITH(X,LEX,Y) ;   Parse Replacement Words (replace with)
"RTN","LEXTOKN",159,0)
 N LEXBEG,LEXEND,LEXCHR,LEXI,LEXNUM,LEXTXT,LEXWRD,LEXFLG
"RTN","LEXTOKN",160,0)
 S LEXTXT=$$UP^XLFSTR(X) S LEXFLG=+($G(Y))
"RTN","LEXTOKN",161,0)
 K LEX S LEXBEG=1 F LEXEND=1:1:$L(LEXTXT)+1 D
"RTN","LEXTOKN",162,0)
 . S LEXCHR=$E(LEXTXT,LEXEND)
"RTN","LEXTOKN",163,0)
 . I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[LEXCHR D
"RTN","LEXTOKN",164,0)
 . . S LEXWRD=$E(LEXTXT,LEXBEG,LEXEND-1),LEXBEG=LEXEND+1
"RTN","LEXTOKN",165,0)
 . . I $L(LEXWRD)>1,$L(LEXWRD)<31,'$$EWD(LEXWRD,LEXFLG) D
"RTN","LEXTOKN",166,0)
 . . . N LEXI S LEXI=$O(LEX(" "),-1)+1
"RTN","LEXTOKN",167,0)
 . . . S LEX(LEXI)=LEXWRD,LEX(0)=LEXI
"RTN","LEXTOKN",168,0)
 Q $G(LEX(0))
"RTN","LEXTOKN",169,0)
EWD(X,Y) ;   Exclude from Replacement Words
"RTN","LEXTOKN",170,0)
 N LEXW,LEXF,LEXO S LEXW=$G(X),LEXF=+($G(Y)),LEXO=0
"RTN","LEXTOKN",171,0)
 I LEXF=1 S:$D(^LEX(757.04,"ACTION",LEXW,"I")) LEXO=1
"RTN","LEXTOKN",172,0)
 I LEXF=2 S:$D(^LEX(757.04,"ACTION",LEXW,"L")) LEXO=1
"RTN","LEXTOKN",173,0)
 I LEXF=3 D
"RTN","LEXTOKN",174,0)
 . S:$D(^LEX(757.04,"ACTION",LEXW,"I")) LEXO=1
"RTN","LEXTOKN",175,0)
 . S:$D(^LEX(757.04,"ACTION",LEXW,"L")) LEXO=1
"RTN","LEXTOKN",176,0)
 I LEXF>0 S:$D(^LEX(757.04,"ACTION",LEXW,"B")) LEXO=1
"RTN","LEXTOKN",177,0)
 Q LEXO
"RTN","LEXTOKN",178,0)
SIN(X) ;   Singular
"RTN","LEXTOKN",179,0)
 N LEXTMP,LEXI,LEXPW,LEXPC,LEXNW,LEXNC,LEXT
"RTN","LEXTOKN",180,0)
 N LEXT S LEXT=$G(X) Q:$L(LEXT)'>4 ""  Q:$E(LEXT,$L(LEXT))'="S" ""
"RTN","LEXTOKN",181,0)
 S (X,LEXTMP)=$E(LEXT,1,($L(LEXT)-1)) Q:$D(LEXIDX) X  S X="",LEXTMP=$E(LEXT,1,($L(LEXT)-1))
"RTN","LEXTOKN",182,0)
 S LEXPW=$O(^LEX(757.01,"AWRD",LEXTMP),-1) S LEXNW=$O(^LEX(757.01,"AWRD",LEXTMP))
"RTN","LEXTOKN",183,0)
 S LEXPC="" I $E(LEXPW,$L(LEXTMP))=$E(LEXTMP,$L(LEXTMP)) S LEXPC=$E(LEXPW,($L(LEXTMP)+1))
"RTN","LEXTOKN",184,0)
 S LEXNC="" I $E(LEXNW,$L(LEXTMP))=$E(LEXTMP,$L(LEXTMP)) S LEXNC=$E(LEXNW,($L(LEXTMP)+1))
"RTN","LEXTOKN",185,0)
 S X="" I $L((LEXPC_LEXNC)),((LEXPC="S")!(LEXNC="S")) S X=LEXTMP
"RTN","LEXTOKN",186,0)
 I $L(LEXT)>4,$E(LEXT,$L(LEXT))="S",$E(LEXT,($L(LEXT)-1))'="S",$D(LEXLOOK) D
"RTN","LEXTOKN",187,0)
 . N LEXTMP S LEXTMP=$E(LEXT,1,($L(LEXT)-1))
"RTN","LEXTOKN",188,0)
 . I $L($G(LEXNW))>0,$L($G(LEXNW))=$L($G(LEXT)),$D(^LEX(757.01,"AWRD",LEXNW)) Q
"RTN","LEXTOKN",189,0)
 . S:$D(^LEX(757.01,"AWRD",LEXTMP)) X=LEXTMP
"RTN","LEXTOKN",190,0)
 Q X
"RTN","LEXTOKN",191,0)
ST ;   Show ^TMP global array
"RTN","LEXTOKN",192,0)
 N DA,LEXIDX,LEXLOOK,LEXLOW D ST^LEXTOKN2
"RTN","LEXTOKN",193,0)
 Q
"RTN","LEXTOKN2")
0^220^B13220121
"RTN","LEXTOKN2",1,0)
LEXTOKN2 ;ISL/KER - Parse term into words - Special Case ;04/21/2014
"RTN","LEXTOKN2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXTOKN2",3,0)
 ;               
"RTN","LEXTOKN2",4,0)
 ;               
"RTN","LEXTOKN2",5,0)
 ; Global Variables
"RTN","LEXTOKN2",6,0)
 ;    None
"RTN","LEXTOKN2",7,0)
 ;               
"RTN","LEXTOKN2",8,0)
 ; External References
"RTN","LEXTOKN2",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXTOKN2",10,0)
 ;               
"RTN","LEXTOKN2",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXTOKN2",12,0)
 ;     LEXLOW   Set of lower case is needed (LEXNDX2)
"RTN","LEXTOKN2",13,0)
 ;               
"RTN","LEXTOKN2",14,0)
 Q
"RTN","LEXTOKN2",15,0)
SW(X) ; Special Case Word Swap
"RTN","LEXTOKN2",16,0)
 ;
"RTN","LEXTOKN2",17,0)
 ;   This sub-routine swaps one word for another
"RTN","LEXTOKN2",18,0)
 ;   This swap must apply to both Lookup and Indexing
"RTN","LEXTOKN2",19,0)
 ;   This swap only applies to uppercase text
"RTN","LEXTOKN2",20,0)
 ;   These words cannot be Replacement Words in file 757.05
"RTN","LEXTOKN2",21,0)
 ;   
"RTN","LEXTOKN2",22,0)
 N LEXTXT S (X,LEXTXT)=$G(X) Q:'$L(LEXTXT) X
"RTN","LEXTOKN2",23,0)
 I '$D(LEXLOW) D  Q X
"RTN","LEXTOKN2",24,0)
 . S (X,LEXTXT)=$$UP^XLFSTR(X) N LEXI
"RTN","LEXTOKN2",25,0)
 . F LEXI="X-RAY","X RAY" D
"RTN","LEXTOKN2",26,0)
 . . I LEXTXT[LEXI S LEXTXT=$$SWAP(LEXTXT,LEXI,"XRAY")
"RTN","LEXTOKN2",27,0)
 . F LEXI="E.COLI","E COLI","E. COLI" D
"RTN","LEXTOKN2",28,0)
 . . I LEXTXT[LEXI S LEXTXT=$$SWAP(LEXTXT,LEXI,"ECOLI")
"RTN","LEXTOKN2",29,0)
 . S X=$G(LEXTXT)
"RTN","LEXTOKN2",30,0)
 I $D(LEXLOW) D
"RTN","LEXTOKN2",31,0)
 . S (X,LEXTXT)=X N LEXI
"RTN","LEXTOKN2",32,0)
 . F LEXI="X-RAY","X RAY","X-Ray","X Ray","X-ray","X ray","x-ray","x ray" D
"RTN","LEXTOKN2",33,0)
 . . I LEXTXT[LEXI S LEXTXT=$$SWAP(LEXTXT,LEXI,"XRay")
"RTN","LEXTOKN2",34,0)
 . F LEXI="E COLI","E. COLI","E.COLI","ECOLI","E Coli","E. Coli","E.Coli","EColi" D
"RTN","LEXTOKN2",35,0)
 . . I LEXTXT[LEXI S LEXTXT=$$SWAP(LEXTXT,LEXI,"EColi")
"RTN","LEXTOKN2",36,0)
 . F LEXI="E coli","E. coli","E.coli","Ecoli","e coli","e. coli","e.coli","ecoli" D
"RTN","LEXTOKN2",37,0)
 . . I LEXTXT[LEXI S LEXTXT=$$SWAP(LEXTXT,LEXI,"EColi")
"RTN","LEXTOKN2",38,0)
 S X=LEXTXT
"RTN","LEXTOKN2",39,0)
 Q X
"RTN","LEXTOKN2",40,0)
SWAP(X,LEX1,LEX2) ; Swap text LEX1 for LEX2 in X
"RTN","LEXTOKN2",41,0)
 ; 
"RTN","LEXTOKN2",42,0)
 ; Input
"RTN","LEXTOKN2",43,0)
 ; 
"RTN","LEXTOKN2",44,0)
 ;    X      Text string
"RTN","LEXTOKN2",45,0)
 ;    LEX1   Word to remove in string (replace)
"RTN","LEXTOKN2",46,0)
 ;    LEX2   Word to insert in string (with)
"RTN","LEXTOKN2",47,0)
 ;    
"RTN","LEXTOKN2",48,0)
 ; Output
"RTN","LEXTOKN2",49,0)
 ; 
"RTN","LEXTOKN2",50,0)
 ;    X      Text string without LEX1
"RTN","LEXTOKN2",51,0)
 ;    
"RTN","LEXTOKN2",52,0)
 N LEXTXT,LEXNOT,LEXC,LEXLC,LEXTC S (X,LEXTXT)=$G(X) Q:'$L(LEXTXT) X  S LEX1=$G(LEX1)
"RTN","LEXTOKN2",53,0)
 Q:'$L(LEX1) X  S LEX2=$G(LEX2) Q:'$L(LEX2) X  Q:LEXTXT'[LEX1 X
"RTN","LEXTOKN2",54,0)
 S LEXNOT="~!@#$%^&*()_+`{}|[]\:;'<>?,./" I LEXTXT=LEX1 S X=LEX2 Q X
"RTN","LEXTOKN2",55,0)
 I $E(LEXTXT,1,$L(LEX1))=LEX1 D
"RTN","LEXTOKN2",56,0)
 . N LEXC S LEXC=$E(LEXTXT,($L(LEX1)+1)) Q:LEXC'=" "
"RTN","LEXTOKN2",57,0)
 . S LEXTXT=LEX2_$E(LEXTXT,($L(LEX1)+1),$L(LEXTXT))
"RTN","LEXTOKN2",58,0)
 F LEXLC=" ","-","(","<","{","[","," D
"RTN","LEXTOKN2",59,0)
 . N LEXO,LEXN F LEXTC=" ","-",")",">","}","]","," D
"RTN","LEXTOKN2",60,0)
 . . N LEXO,LEXN
"RTN","LEXTOKN2",61,0)
 . . S LEXO=LEXLC_LEX1_LEXTC,LEXN=LEXLC_LEX2_LEXTC
"RTN","LEXTOKN2",62,0)
 . . Q:LEXTXT'[LEXO
"RTN","LEXTOKN2",63,0)
 . . F  Q:LEXTXT'[LEXO  S LEXTXT=$P(LEXTXT,LEXO,1)_LEXN_$P(LEXTXT,LEXO,2)
"RTN","LEXTOKN2",64,0)
 . S LEXO=LEXLC_LEX1,LEXN=LEXLC_LEX2
"RTN","LEXTOKN2",65,0)
 . I LEXTXT[LEXO,$L($P(LEXTXT,LEXO,1)),'$L($P(LEXTXT,LEXO,2)) D
"RTN","LEXTOKN2",66,0)
 . . S LEXTXT=$P(LEXTXT,LEXO,1)_LEXN
"RTN","LEXTOKN2",67,0)
 S X=$G(LEXTXT)
"RTN","LEXTOKN2",68,0)
 Q X
"RTN","LEXTOKN2",69,0)
ORD ; Arrange in Frequency Order
"RTN","LEXTOKN2",70,0)
 ; 
"RTN","LEXTOKN2",71,0)
 ; Input
"RTN","LEXTOKN2",72,0)
 ;  
"RTN","LEXTOKN2",73,0)
 ;    ^TMP("LEXTKN",$J,#,WORD)=""
"RTN","LEXTOKN2",74,0)
 ;    
"RTN","LEXTOKN2",75,0)
 ;    Global array containing words parsed from text from
"RTN","LEXTOKN2",76,0)
 ;    API PTX^LEXTOKN
"RTN","LEXTOKN2",77,0)
 ;    
"RTN","LEXTOKN2",78,0)
 ;    "DIABETES MELLITUS KETOACIDOSIS" Parsed as:
"RTN","LEXTOKN2",79,0)
 ;    
"RTN","LEXTOKN2",80,0)
 ;       ^TMP("LEXTKN",$J,0)=3
"RTN","LEXTOKN2",81,0)
 ;       ^TMP("LEXTKN",$J,1,"DIABETES")=
"RTN","LEXTOKN2",82,0)
 ;       ^TMP("LEXTKN",$J,2,"MELLITUS")=
"RTN","LEXTOKN2",83,0)
 ;       ^TMP("LEXTKN",$J,3,"KETOACIDOSIS")=
"RTN","LEXTOKN2",84,0)
 ;    
"RTN","LEXTOKN2",85,0)
 ; Output
"RTN","LEXTOKN2",86,0)
 ; 
"RTN","LEXTOKN2",87,0)
 ;    ^TMP("LEXTKN",$J,#,WORD)=FREQ
"RTN","LEXTOKN2",88,0)
 ;    
"RTN","LEXTOKN2",89,0)
 ;    Global array containing words parsed from text arranged
"RTN","LEXTOKN2",90,0)
 ;    in order of the frequency of use, the least used word is
"RTN","LEXTOKN2",91,0)
 ;    first and the most frequently used word is last.
"RTN","LEXTOKN2",92,0)
 ;
"RTN","LEXTOKN2",93,0)
 ;    "DIABETES MELLITUS KETOACIDOSIS" Reordered to:
"RTN","LEXTOKN2",94,0)
 ;    
"RTN","LEXTOKN2",95,0)
 ;       ^TMP("LEXTKN",$J,0)=3
"RTN","LEXTOKN2",96,0)
 ;       ^TMP("LEXTKN",$J,1,"KETOACIDOSIS")=60
"RTN","LEXTOKN2",97,0)
 ;       ^TMP("LEXTKN",$J,2,"MELLITUS")=811
"RTN","LEXTOKN2",98,0)
 ;       ^TMP("LEXTKN",$J,3,"DIABETES")=1101
"RTN","LEXTOKN2",99,0)
 ;    
"RTN","LEXTOKN2",100,0)
 ; The Lexicon searches terms containing the least used word 
"RTN","LEXTOKN2",101,0)
 ; and checks to see if the remaining words are found in the
"RTN","LEXTOKN2",102,0)
 ; term.  Instead of checking 1101 terms for MELLITUS and 
"RTN","LEXTOKN2",103,0)
 ; KETOACIDOSIS, it will check 60 terms for DIABETES and MELLITUS.
"RTN","LEXTOKN2",104,0)
 ; 
"RTN","LEXTOKN2",105,0)
 N LEXI,LEXA,LEXC,LEXF S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXTOKN2",106,0)
 . N LEXT S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXTOKN2",107,0)
 . . N LEXF S LEXF=+($O(^LEX(757.01,"ASL",LEXT,0))) Q:LEXF'>0  S LEXA(+LEXF,LEXT)=LEXF
"RTN","LEXTOKN2",108,0)
 K ^TMP("LEXTKN",$J) S LEXI=0 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI'>0  D
"RTN","LEXTOKN2",109,0)
 . N LEXT S LEXT="" F  S LEXT=$O(LEXA(LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXTOKN2",110,0)
 . . N LEXC S LEXC=$O(^TMP("LEXTKN",$J," "),-1)+1,^TMP("LEXTKN",$J,LEXC,LEXT)=LEXI,^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXTOKN2",111,0)
 Q
"RTN","LEXTOKN2",112,0)
ST ; Show ^TMP("LEXTKN")
"RTN","LEXTOKN2",113,0)
 N LEXNN,LEXNC,LEXLOW S LEXNN="^TMP(""LEXTKN"","_$J_")",LEXNC="^TMP(""LEXTKN"","_$J_","
"RTN","LEXTOKN2",114,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEXTOKN2",115,0)
 Q 
"RTN","LEXTOLKN")
1^168
"RTN","LEXTRAN")
0^42^B77492995
"RTN","LEXTRAN",1,0)
LEXTRAN ;ISL/KER - Lexicon code and text wrapper API's ;04/21/2014
"RTN","LEXTRAN",2,0)
 ;;2.0;LEXICON UTILITY;**41,59,73,80**;Sep 23, 1996;Build 1
"RTN","LEXTRAN",3,0)
 ;               
"RTN","LEXTRAN",4,0)
 ; Global Variables
"RTN","LEXTRAN",5,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXTRAN",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXTRAN",7,0)
 ;               
"RTN","LEXTRAN",8,0)
 ; External References
"RTN","LEXTRAN",9,0)
 ;    ^%DT                ICR  10003
"RTN","LEXTRAN",10,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXTRAN",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXTRAN",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXTRAN",13,0)
 ;               
"RTN","LEXTRAN",14,0)
CODE(CODE,SRC,CDT,LEXRAY) ; Get the Concept for a Code and Source
"RTN","LEXTRAN",15,0)
 ;
"RTN","LEXTRAN",16,0)
 ; Input
"RTN","LEXTRAN",17,0)
 ;
"RTN","LEXTRAN",18,0)
 ;   CODE     Code (required)
"RTN","LEXTRAN",19,0)
 ;   SRC      Code System source abbreviation (required)
"RTN","LEXTRAN",20,0)
 ;   CDT      Effective Date (optional, default TODAY)
"RTN","LEXTRAN",21,0)
 ;   LEXRAY   Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",22,0)
 ;   
"RTN","LEXTRAN",23,0)
 ; Output
"RTN","LEXTRAN",24,0)
 ; 
"RTN","LEXTRAN",25,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN",26,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN",27,0)
 ;     LEX     -   an array containing information about the code
"RTN","LEXTRAN",28,0)
 ;     LEX(0)  -   a five piece string:
"RTN","LEXTRAN",29,0)
 ;                 1. code
"RTN","LEXTRAN",30,0)
 ;                 2. hierarchy
"RTN","LEXTRAN",31,0)
 ;                 3. version
"RTN","LEXTRAN",32,0)
 ;                 4. legacy code
"RTN","LEXTRAN",33,0)
 ;                 5. code status
"RTN","LEXTRAN",34,0)
 ;     LEX("F")    fully specified name
"RTN","LEXTRAN",35,0)
 ;     LEX("P")    preferred term
"RTN","LEXTRAN",36,0)
 ;     LEX("S",n)  synonyms (n is the nth synonym)
"RTN","LEXTRAN",37,0)
 ;     
"RTN","LEXTRAN",38,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN",39,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",40,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN",41,0)
 ;           LEXCODE is the code
"RTN","LEXTRAN",42,0)
 ;                 
"RTN","LEXTRAN",43,0)
 ;   if call finds an inactive code for the source
"RTN","LEXTRAN",44,0)
 ;     "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",45,0)
 ;     LEX    - an array containing information about the code
"RTN","LEXTRAN",46,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",47,0)
 ;               1. code
"RTN","LEXTRAN",48,0)
 ;               2. hierarchy
"RTN","LEXTRAN",49,0)
 ;               3. version
"RTN","LEXTRAN",50,0)
 ;               4. legacy code
"RTN","LEXTRAN",51,0)
 ;               5. code status
"RTN","LEXTRAN",52,0)
 ;     
"RTN","LEXTRAN",53,0)
 ;   otherwise
"RTN","LEXTRAN",54,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",55,0)
 ; 
"RTN","LEXTRAN",56,0)
 ;   example of LEX array:
"RTN","LEXTRAN",57,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",58,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",59,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",60,0)
 ;                        
"RTN","LEXTRAN",61,0)
 N LEXCODE,LEXSRC,LEXVDT S LEXCODE=$G(CODE),LEXSRC=$G(SRC),LEXVDT=$G(CDT)
"RTN","LEXTRAN",62,0)
 I $G(LEXCODE)="" Q "-1^no code specified"
"RTN","LEXTRAN",63,0)
 S LEXSRC=$E($G(LEXSRC),1,3) I $G(LEXSRC)="" Q "-1^no source specified"
"RTN","LEXTRAN",64,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q "-1^source not recognized"
"RTN","LEXTRAN",65,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN",66,0)
 D:'$L($G(LEXVDT)) VDT^LEXU
"RTN","LEXTRAN",67,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",68,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",69,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",70,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",71,0)
 N LEXSCNM,LEXSIEN,LEXASAB,LEXCIEN,VALCODE,LEXSTAT,LEXPIEN,LEXST
"RTN","LEXTRAN",72,0)
 S LEXSIEN=+($$CSYS^LEXU(LEXSRC))
"RTN","LEXTRAN",73,0)
 S LEXST=^LEX(757.03,LEXSIEN,0)
"RTN","LEXTRAN",74,0)
 S LEXSCNM=$P(LEXST,U,2)
"RTN","LEXTRAN",75,0)
 S LEXASAB=$E($P(LEXST,U),1,3)
"RTN","LEXTRAN",76,0)
 S LEXCIEN="",VALCODE=0
"RTN","LEXTRAN",77,0)
 F  Q:VALCODE=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN",78,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN",79,0)
 .I $D(^LEX(757.02,"ASRC",LEXASAB,LEXCIEN)) S VALCODE=1 Q
"RTN","LEXTRAN",80,0)
 I 'VALCODE Q "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",81,0)
 K LEXSTAT,LEX
"RTN","LEXTRAN",82,0)
 K ^TMP("LEXSCH",$J)
"RTN","LEXTRAN",83,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E($G(LEXSRC),1,3)) ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN",84,0)
 I +LEXSTAT=0 D  Q "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",85,0)
 .S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",86,0)
 .D GETINFO
"RTN","LEXTRAN",87,0)
 .I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",88,0)
 S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",89,0)
 D GETINFO
"RTN","LEXTRAN",90,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",91,0)
 Q "1^"_LEXCODE
"RTN","LEXTRAN",92,0)
 ;
"RTN","LEXTRAN",93,0)
GETINFO ; Get Information for a Code
"RTN","LEXTRAN",94,0)
 N LEXFSN,LEXHIER,LEXLGY,LEXVER,N,LEXSEP,I
"RTN","LEXTRAN",95,0)
 S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN",96,0)
 S LEX=$$GETSYN^LEXTRAN1(LEXSRC,LEXCODE,LEXVDT)
"RTN","LEXTRAN",97,0)
 S LEXLGY=$$GET1^DIQ(757.02,LEXCIEN_",",13)
"RTN","LEXTRAN",98,0)
 I $D(LEX("F")) S LEXHIER=$P($P(LEX("F"),"(",$L(LEX("F"),"(")),")")
"RTN","LEXTRAN",99,0)
 S LEXVER=$$VERSION(LEXSRC,LEXCODE,LEXVDT)
"RTN","LEXTRAN",100,0)
 S LEX(0)=LEXCODE_U_$G(LEXHIER)_U_$S(+LEXVER=-1:"",1:$P(LEXVER,U,3))
"RTN","LEXTRAN",101,0)
 S LEX(0)=LEX(0)_U_LEXLGY_U_+LEXSTAT
"RTN","LEXTRAN",102,0)
 I $D(LEX("F")) S LEXHIER=$P($P(LEX("F"),"(",$L(LEX("F"),"(")),")")
"RTN","LEXTRAN",103,0)
 K LEX("SEL")
"RTN","LEXTRAN",104,0)
 Q
"RTN","LEXTRAN",105,0)
 ;
"RTN","LEXTRAN",106,0)
TEXT(TEXT,CDT,SUB,SRC,LEXRAY) ; Get the Concept for a text and source
"RTN","LEXTRAN",107,0)
 ; 
"RTN","LEXTRAN",108,0)
 ; Input
"RTN","LEXTRAN",109,0)
 ;   
"RTN","LEXTRAN",110,0)
 ;   TEXT     The search string (required)
"RTN","LEXTRAN",111,0)
 ;   CDT      Effective date (optional, default is TODAY)
"RTN","LEXTRAN",112,0)
 ;   SUB      Subset or 'hierarchy' (optional)
"RTN","LEXTRAN",113,0)
 ;   SRC      Code System source abbreviation
"RTN","LEXTRAN",114,0)
 ;   LEXRAY   Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",115,0)
 ;   
"RTN","LEXTRAN",116,0)
 ; Output
"RTN","LEXTRAN",117,0)
 ;    
"RTN","LEXTRAN",118,0)
 ;   LEX or passed array name    - an array containing information
"RTN","LEXTRAN",119,0)
 ;                                 about the code
"RTN","LEXTRAN",120,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",121,0)
 ;               1. code
"RTN","LEXTRAN",122,0)
 ;               2. hierarchy
"RTN","LEXTRAN",123,0)
 ;               3. version
"RTN","LEXTRAN",124,0)
 ;               4. legacy code
"RTN","LEXTRAN",125,0)
 ;               5. code status
"RTN","LEXTRAN",126,0)
 ;               
"RTN","LEXTRAN",127,0)
 ;     LEX("F")    fully specified name ^ internal entry number
"RTN","LEXTRAN",128,0)
 ;     LEX("P")    preferred term ^ internal entry number
"RTN","LEXTRAN",129,0)
 ;     LEX("S",n)  synonyms (n is the nth synonym) ^ internal entry number
"RTN","LEXTRAN",130,0)
 ;     
"RTN","LEXTRAN",131,0)
 ;   otherwise
"RTN","LEXTRAN",132,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",133,0)
 ; 
"RTN","LEXTRAN",134,0)
 ;   example of LEX array:
"RTN","LEXTRAN",135,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",136,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",137,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",138,0)
 ;     
"RTN","LEXTRAN",139,0)
 N LEXTEXT,LEXVDT,LEXTD,LEXSUB,LEXSRC,LEXNOM,LEXID,DIC K LEX
"RTN","LEXTRAN",140,0)
 S LEXTEXT=$G(TEXT),LEXVDT=$G(CDT),LEXSUB=$G(SUB),LEXSRC=$G(SRC)
"RTN","LEXTRAN",141,0)
 I $G(LEXTEXT)="" Q "-1^no search string specified"
"RTN","LEXTRAN",142,0)
 S LEXSRC=$P($$CSYS^LEXU3(LEXSRC),"^",2),LEXNOM=""
"RTN","LEXTRAN",143,0)
 S:$L(LEXSRC) LEXNOM=$P($G(^LEX(757.03,+($O(^LEX(757.03,"ASAB",LEXSRC,0))),0)),"^",2)
"RTN","LEXTRAN",144,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",145,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",146,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",147,0)
 S LEXSUB=$G(LEXSUB) I LEXSUB="" S LEXSUB=LEXSRC
"RTN","LEXTRAN",148,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",149,0)
 N X,LEXPIEN,LEXCODE,LEXSTAT,LEXCIEN,Y
"RTN","LEXTRAN",150,0)
 K ^TMP("LEXSCH",$J),LEX
"RTN","LEXTRAN",151,0)
 S X=LEXTEXT
"RTN","LEXTRAN",152,0)
 D CONFIG^LEXSET(LEXSRC,LEXSUB,LEXVDT)
"RTN","LEXTRAN",153,0)
 D EN^LEXA1
"RTN","LEXTRAN",154,0)
 I +Y=-1 Q "-1^search could not find term"
"RTN","LEXTRAN",155,0)
 S LEXPIEN=+Y
"RTN","LEXTRAN",156,0)
 D INFO^LEXA(LEXPIEN)
"RTN","LEXTRAN",157,0)
 S LEXCODE="",LEXSTAT=-1 I $L(LEXNOM) D
"RTN","LEXTRAN",158,0)
 . S LEXID=$O(LEX("SEL","SRC","B",LEXNOM,0))
"RTN","LEXTRAN",159,0)
 . S LEXCODE=$P($G(LEX("SEL","SRC",+LEXID)),"^",2)
"RTN","LEXTRAN",160,0)
 I '$L(LEXCODE),$D(LEX("SEL","SRC","C")) D
"RTN","LEXTRAN",161,0)
 . S LEXCODE=$O(LEX("SEL","SRC","C",""))
"RTN","LEXTRAN",162,0)
 S LEXCIEN=0 I $L(LEXCODE) D
"RTN","LEXTRAN",163,0)
 . S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E(LEXSRC,1,3))
"RTN","LEXTRAN",164,0)
 . S LEXCIEN=$P(LEXSTAT,U,2),LEXSRC=$E($P($G(LEXSTAT(2)),U,2),1,3)
"RTN","LEXTRAN",165,0)
 D GETINFO
"RTN","LEXTRAN",166,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",167,0)
 Q "1^"_LEXPIEN
"RTN","LEXTRAN",168,0)
 ;
"RTN","LEXTRAN",169,0)
VERSION(SRC,CODE,VDT) ; Get the Code Version Number
"RTN","LEXTRAN",170,0)
 ;
"RTN","LEXTRAN",171,0)
 ; Input
"RTN","LEXTRAN",172,0)
 ;   
"RTN","LEXTRAN",173,0)
 ;   SRC      Code System source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN",174,0)
 ;   CODE     Code - mandatory
"RTN","LEXTRAN",175,0)
 ;   VDT      Effective date (defaults to current date) - optional
"RTN","LEXTRAN",176,0)
 ;             - optional
"RTN","LEXTRAN",177,0)
 ;   
"RTN","LEXTRAN",178,0)
 ; Output
"RTN","LEXTRAN",179,0)
 ; 
"RTN","LEXTRAN",180,0)
 ;   1^Version
"RTN","LEXTRAN",181,0)
 ;     or
"RTN","LEXTRAN",182,0)
 ;   -1^error message
"RTN","LEXTRAN",183,0)
 ;      
"RTN","LEXTRAN",184,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(VDT)
"RTN","LEXTRAN",185,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",186,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",187,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",188,0)
 S LEXSRC=$E($G(LEXSRC),1,3) I $G(LEXSRC)="" Q "-1^invalid source"
"RTN","LEXTRAN",189,0)
 N SIEN,VIEN,VDAT,LEXSTAT
"RTN","LEXTRAN",190,0)
 S SIEN=+($$CSYS^LEXU(LEXSRC))
"RTN","LEXTRAN",191,0)
 I '$D(^LEX(757.03,+SIEN,1)) Q "-1^No source version data available"
"RTN","LEXTRAN",192,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E($G(LEXSRC),1,3)) ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN",193,0)
 I +LEXSTAT=0 Q "-1^Code not active for date specified"
"RTN","LEXTRAN",194,0)
 S VDAT=$O(^LEX(757.03,SIEN,1,"B",LEXVDT+1),-1)
"RTN","LEXTRAN",195,0)
 S VIEN=$O(^LEX(757.03,SIEN,1,"B",VDAT,""))
"RTN","LEXTRAN",196,0)
 Q "1^"_^LEX(757.03,SIEN,1,VIEN,0)
"RTN","LEXTRAN",197,0)
 ;
"RTN","LEXTRAN",198,0)
TXT4CS(TEXT,SRC,LEXRAY,SUB) ; Is text valid for an SCT code
"RTN","LEXTRAN",199,0)
 ;
"RTN","LEXTRAN",200,0)
 ; Input
"RTN","LEXTRAN",201,0)
 ; 
"RTN","LEXTRAN",202,0)
 ;   TEXT      Text to check
"RTN","LEXTRAN",203,0)
 ;   SRC       Coding System Mnemonic or IEN
"RTN","LEXTRAN",204,0)
 ;   LEXRAY    Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",205,0)
 ;   SUB       Subset or 'hierarchy' (optional)
"RTN","LEXTRAN",206,0)
 ;   
"RTN","LEXTRAN",207,0)
 ; Output
"RTN","LEXTRAN",208,0)
 ; 
"RTN","LEXTRAN",209,0)
 ;   1^no of finds
"RTN","LEXTRAN",210,0)
 ;   
"RTN","LEXTRAN",211,0)
 ;     plus
"RTN","LEXTRAN",212,0)
 ;     
"RTN","LEXTRAN",213,0)
 ;   LEX or passed array name - an array containing
"RTN","LEXTRAN",214,0)
 ;   
"RTN","LEXTRAN",215,0)
 ;          LEX(<code>,<seq>)= expression type ^ code IEN ^ expression IEN
"RTN","LEXTRAN",216,0)
 ;          
"RTN","LEXTRAN",217,0)
 ;     e.g. LEX(123.5,1)="MAJOR CONCEPT^119085^112525"
"RTN","LEXTRAN",218,0)
 ;          LEX(123.5,2)="SYNONYM^119094^112526"
"RTN","LEXTRAN",219,0)
 ;      or
"RTN","LEXTRAN",220,0)
 ;      
"RTN","LEXTRAN",221,0)
 ;   -1^error message
"RTN","LEXTRAN",222,0)
 ;   
"RTN","LEXTRAN",223,0)
 N LEXTEXT,LEXSRC,LEXSUB S LEXTEXT=$G(TEXT),LEXSRC=$G(SRC),LEXSUB=$G(SUB)
"RTN","LEXTRAN",224,0)
 N CODEC,EXP,EXIEN,MCIEN,FOUND,CIEN,CODE,EXPTYP,FINDS,LAR,HIER,HIERNAM,LEXW ; Pch 73 adds variable CODEC
"RTN","LEXTRAN",225,0)
 I $G(LEXTEXT)="" Q "-1^text not specified"
"RTN","LEXTRAN",226,0)
 I $G(LEXSRC)="" Q "-1^code system not specified"
"RTN","LEXTRAN",227,0)
 I $$CSYSIEN(LEXSRC)+$$CSYSMNEM(LEXSRC)=-2 Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",228,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",229,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXTRAN",230,0)
 I LEXSUB'="",'$D(^LEXT(757.2,"AA",LEXSUB)) Q "-1^hierarchy unknown in Lexicon"
"RTN","LEXTRAN",231,0)
 S:LEXSRC?.N LEXSRC=$P($$CSYSMNEM(LEXSRC),"^",2)
"RTN","LEXTRAN",232,0)
 ; text IEN's in 757.01
"RTN","LEXTRAN",233,0)
 I '$D(^LEX(757.01,"B",$E($$UP^XLFSTR(LEXTEXT),1,63))) Q "-1^expression unknown in Lexicon"
"RTN","LEXTRAN",234,0)
 ; build an array of expression IENs for text
"RTN","LEXTRAN",235,0)
 S EXIEN=""
"RTN","LEXTRAN",236,0)
 F  S EXIEN=$O(^LEX(757.01,"B",$E($$UP^XLFSTR(LEXTEXT),1,63),EXIEN)) Q:EXIEN=""  D   ; Pch 73 adds $Extract
"RTN","LEXTRAN",237,0)
 .S:$$UP^XLFSTR($G(^LEX(757.01,+EXIEN,0)))=$$UP^XLFSTR(LEXTEXT) EXP(EXIEN)="" ; Pch 73 adds exact match check
"RTN","LEXTRAN",238,0)
 ; scan array to find code for expression (LEXTEXT) for code system (LEXSRC)
"RTN","LEXTRAN",239,0)
 S EXIEN=""
"RTN","LEXTRAN",240,0)
 K LEXW
"RTN","LEXTRAN",241,0)
 S (FOUND,FINDS)=0
"RTN","LEXTRAN",242,0)
 F  S EXIEN=$O(EXP(EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN",243,0)
 .S MCIEN=$P(^LEX(757.01,EXIEN,1),U)
"RTN","LEXTRAN",244,0)
 .; Pch 73 moved EXPTYP into CIEN loop
"RTN","LEXTRAN",245,0)
 .S CIEN="" F  S CIEN=$O(^LEX(757.02,"AMC",MCIEN,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN",246,0)
 ..I $P($$CSYSMNEM($P(^LEX(757.02,CIEN,0),U,3)),U,2)=LEXSRC D
"RTN","LEXTRAN",247,0)
 ...S CODE=$P(^LEX(757.02,CIEN,0),U,2)
"RTN","LEXTRAN",248,0)
 ...S (HIER,HIERNAM)=""
"RTN","LEXTRAN",249,0)
 ...I LEXSUB'="" D
"RTN","LEXTRAN",250,0)
 ....K LAR
"RTN","LEXTRAN",251,0)
 ....S LAR=$$CODE(CODE,"SCT",,"LAR")
"RTN","LEXTRAN",252,0)
 ....S HIER=$P($G(LAR(0)),U,2)
"RTN","LEXTRAN",253,0)
 ....S HIERNAM=$P(^LEXT(757.2,$O(^LEXT(757.2,"AA",LEXSUB,"")),0),U)
"RTN","LEXTRAN",254,0)
 ...I LEXSUB'="",HIER'=HIERNAM Q
"RTN","LEXTRAN",255,0)
 ...S FOUND=1
"RTN","LEXTRAN",256,0)
 ...S FINDS=FINDS+1
"RTN","LEXTRAN",257,0)
 ...S CODEC=$O(LEXW(CODE," "),-1)+1 ; Pch 73 adds counter for multiple entries for code
"RTN","LEXTRAN",258,0)
 ...S EXPTYP=$P(^LEX(757.011,$P(^LEX(757.01,+($G(^LEX(757.02,CIEN,0))),1),U,2),0),U) ; Pch 73 moved from EXIEN loop
"RTN","LEXTRAN",259,0)
 ...S LEXW(CODE,CODEC)=EXPTYP_"^"_CIEN_"^"_+($G(^LEX(757.02,CIEN,0))) ; Pch 73 adds code IEN and expression IEN to output
"RTN","LEXTRAN",260,0)
 M LEX=LEXW
"RTN","LEXTRAN",261,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",262,0)
 Q FOUND_"^"_FINDS
"RTN","LEXTRAN",263,0)
 ;
"RTN","LEXTRAN",264,0)
CSYSIEN(MNEM) ; Return code system IEN for mnemonic
"RTN","LEXTRAN",265,0)
 Q:'$L($G(MNEM)) "-1^invalid code system" N LEXIEN
"RTN","LEXTRAN",266,0)
 S LEXIEN=+($$CSYS^LEXU(MNEM)) Q:LEXIEN>0 "1^"_LEXIEN
"RTN","LEXTRAN",267,0)
 Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",268,0)
 ;
"RTN","LEXTRAN",269,0)
CSYSMNEM(SIEN) ; Return code system mnemonic for IEN
"RTN","LEXTRAN",270,0)
 S SIEN=+($$CSYS^LEXU($G(SIEN)))
"RTN","LEXTRAN",271,0)
 I '$D(^LEX(757.03,+($G(SIEN)),0)) Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",272,0)
 Q "1^"_$E($P(^LEX(757.03,SIEN,0),"^"),1,3)
"RTN","LEXTRAN",273,0)
 ;
"RTN","LEXTRAN",274,0)
INTDAT(X) ; Convert date from external format to VA internal format
"RTN","LEXTRAN",275,0)
 N Y,%DT
"RTN","LEXTRAN",276,0)
 D ^%DT
"RTN","LEXTRAN",277,0)
 Q Y
"RTN","LEXTRAN1")
0^43^B109851516
"RTN","LEXTRAN1",1,0)
LEXTRAN1 ;ISL/KER - Lexicon code and text wrapper API's ;04/21/2014
"RTN","LEXTRAN1",2,0)
 ;;2.0;LEXICON UTILITY;**59,73,51,80**;Sep 23, 1996;Build 1
"RTN","LEXTRAN1",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","LEXTRAN1",4,0)
 ;               
"RTN","LEXTRAN1",5,0)
 ; Global Variables
"RTN","LEXTRAN1",6,0)
 ;    ^LEX(757.32)        N/A
"RTN","LEXTRAN1",7,0)
 ;    ^LEX(757.33)        N/A
"RTN","LEXTRAN1",8,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXTRAN1",9,0)
 ;               
"RTN","LEXTRAN1",10,0)
 ; External References
"RTN","LEXTRAN1",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXTRAN1",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXTRAN1",13,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXTRAN1",14,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXTRAN1",15,0)
 ;    ^%DT                ICR  10003
"RTN","LEXTRAN1",16,0)
 ;               
"RTN","LEXTRAN1",17,0)
GETSYN(SRC,CODE,CDT,LEXARY,IENS) ; Get Synonyms for a Concept
"RTN","LEXTRAN1",18,0)
 ;               
"RTN","LEXTRAN1",19,0)
 ; Local Variables
"RTN","LEXTRAN1",20,0)
 ;
"RTN","LEXTRAN1",21,0)
 ;
"RTN","LEXTRAN1",22,0)
 ; Input
"RTN","LEXTRAN1",23,0)
 ;
"RTN","LEXTRAN1",24,0)
 ;   SRC     Code System source abbreviation (required)
"RTN","LEXTRAN1",25,0)
 ;   CODE    Code (required)
"RTN","LEXTRAN1",26,0)
 ;   CDT     Effective date (optoinal, default TODAY)
"RTN","LEXTRAN1",27,0)
 ;   LEXARY  Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN1",28,0)
 ;   IENS    Include expression IENs in output array
"RTN","LEXTRAN1",29,0)
 ;            - optional
"RTN","LEXTRAN1",30,0)
 ;              1 include IENS
"RTN","LEXTRAN1",31,0)
 ;              0 exclude IENS (default)
"RTN","LEXTRAN1",32,0)
 ;
"RTN","LEXTRAN1",33,0)
 ; Output
"RTN","LEXTRAN1",34,0)
 ;
"RTN","LEXTRAN1",35,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",36,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN1",37,0)
 ;     LEX     -   an array containing information about the code
"RTN","LEXTRAN1",38,0)
 ;     LEX("F")    fully specified name^IEN
"RTN","LEXTRAN1",39,0)
 ;     LEX("P")    preferred term^IEN
"RTN","LEXTRAN1",40,0)
 ;     LEX("S",n)  synonyms^IEN (n is the nth synonym)
"RTN","LEXTRAN1",41,0)
 ;
"RTN","LEXTRAN1",42,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",43,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",44,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",45,0)
 ;
"RTN","LEXTRAN1",46,0)
 N LEXSRC,LEXCODE,LEXVDT,LEXIENS S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(CDT),LEXIENS=$G(IENS)
"RTN","LEXTRAN1",47,0)
 N LEX1,LEX2,LEX3,LEX4,LEXCIEN,LEXD,LEXDOW,LEXEX,LEXEXI,LEXFND,LEXI
"RTN","LEXTRAN1",48,0)
 N LEXMCI,LEXOUT,LEXS,LEXSAB,LEXSNM,LEXSRD,LEXSTAT,LEXTY
"RTN","LEXTRAN1",49,0)
 N LEXVAL S LEXSRC=$E($G(LEXSRC),1,3) S:'$L($G(LEXARY)) LEXARY="LEX"
"RTN","LEXTRAN1",50,0)
 Q:'$L($G(LEXSRC)) (-1_U_"source not recognized")
"RTN","LEXTRAN1",51,0)
 S LEXSRD=$$CSYS^LEXU(LEXSRC) Q:+LEXSRD'>0 (-1_U_"source not recognized")
"RTN","LEXTRAN1",52,0)
 S LEXSAB=$P(LEXSRD,"^",2),LEXSNM=$P(LEXSRD,"^",4)
"RTN","LEXTRAN1",53,0)
 Q:($L(LEXSAB)'=3)!('$L(LEXSNM)) (-1_U_"source not recognized")
"RTN","LEXTRAN1",54,0)
 Q:'$L($G(LEXCODE)) -1_U_"no code specified"
"RTN","LEXTRAN1",55,0)
 D VDT^LEXU Q:$P(LEXVDT,".",1)'?7N (-1_U_"invalid date format")
"RTN","LEXTRAN1",56,0)
 K:$G(LEXARY)="" LEXARY
"RTN","LEXTRAN1",57,0)
 S LEXIENS=+$G(LEXIENS) S:LEXIENS'=1 LEXIENS=0
"RTN","LEXTRAN1",58,0)
 S LEXCIEN="",LEXVAL=0
"RTN","LEXTRAN1",59,0)
 F  Q:LEXVAL=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN1",60,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN1",61,0)
 .I $D(^LEX(757.02,"ASRC",LEXSAB,LEXCIEN)) S LEXVAL=1 Q
"RTN","LEXTRAN1",62,0)
 I 'LEXVAL Q -2_U_LEXSNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",63,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,LEXSAB)
"RTN","LEXTRAN1",64,0)
 S:+LEXSTAT>0&($P(LEXSTAT,"^",2)>0) LEXCIEN=$P(LEXSTAT,"^",2)
"RTN","LEXTRAN1",65,0)
 S LEXOUT=0 I +LEXSTAT=0 D
"RTN","LEXTRAN1",66,0)
 . S LEXOUT=-4_U_LEXSNM_" code "_LEXCODE_" not active for "
"RTN","LEXTRAN1",67,0)
 . S LEXOUT=LEXOUT_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",68,0)
 I +LEXSTAT=-1 D
"RTN","LEXTRAN1",69,0)
 . S LEXOUT=-8_U_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",70,0)
 . S LEXOUT=LEXOUT_" precedes earliest activation date for code"
"RTN","LEXTRAN1",71,0)
 I +($G(LEXCIEN))'>0 D
"RTN","LEXTRAN1",72,0)
 . N LEXS,LEXD,LEXI,LEX1 S LEXCIEN=-1,(LEXS,LEXD,LEXI)=""
"RTN","LEXTRAN1",73,0)
 . F  S LEXS=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS)) Q:LEXS=""  D
"RTN","LEXTRAN1",74,0)
 . . Q:(LEXS+1)>2  S LEXD=""
"RTN","LEXTRAN1",75,0)
 . . F  S LEXD=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS,LEXD)) Q:LEXD=""  S LEXI="" D
"RTN","LEXTRAN1",76,0)
 . . . F  S LEXI=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS,LEXD,LEXI)) Q:LEXI=""  D
"RTN","LEXTRAN1",77,0)
 . . . . S LEX1(LEXD,LEXI)=""
"RTN","LEXTRAN1",78,0)
 . Q:'$D(LEX1)  S LEXI=$O(LEX1(LEXVDT+.001),-1) Q:'$L(LEXI)
"RTN","LEXTRAN1",79,0)
 . S LEXI=$O(LEX1(LEXI,""),-1) Q:'$D(^LEX(757.02,+LEXI,0))  S LEXCIEN=LEXI
"RTN","LEXTRAN1",80,0)
 I '$D(^LEX(757.02,+($G(LEXCIEN)),0)) D  Q LEXOUT
"RTN","LEXTRAN1",81,0)
 . S LEXOUT="-1^Code "_LEXCODE_" not yet active for "
"RTN","LEXTRAN1",82,0)
 . S LEXOUT=LEXOUT_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",83,0)
 S LEXMCI=$P(^LEX(757.02,+LEXCIEN,0),U,4)
"RTN","LEXTRAN1",84,0)
 S LEXEXI="",LEXFND=0
"RTN","LEXTRAN1",85,0)
 K LEX2 F  S LEXEXI=$O(^LEX(757.01,"AMC",LEXMCI,LEXEXI)) Q:LEXEXI=""  D
"RTN","LEXTRAN1",86,0)
 .S LEXFND=LEXFND+1,LEX2(LEXEXI)=""
"RTN","LEXTRAN1",87,0)
 K LEX3 S LEXEXI="" F  S LEXEXI=$O(LEX2(LEXEXI)) Q:LEXEXI=""  D
"RTN","LEXTRAN1",88,0)
 .S LEXEX=^LEX(757.01,LEXEXI,0)
"RTN","LEXTRAN1",89,0)
 .S LEXTY=$P(^LEX(757.01,LEXEXI,1),U,2)
"RTN","LEXTRAN1",90,0)
 .I LEXTY=1 S LEX3("P")=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"") Q
"RTN","LEXTRAN1",91,0)
 .I LEXTY=8 S LEX3("F")=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"") Q
"RTN","LEXTRAN1",92,0)
 .S LEX3("S",($O(LEX3("S"," "),-1)+1))=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"")
"RTN","LEXTRAN1",93,0)
 K LEX4 M LEX4=LEX3
"RTN","LEXTRAN1",94,0)
 S LEXFND=''$D(LEX4("F"))+''$D(LEX4("P"))+$O(LEX4("S"," "),-1)
"RTN","LEXTRAN1",95,0)
 I $D(LEXARY),LEXARY'="LEX4" M @LEXARY=LEX4
"RTN","LEXTRAN1",96,0)
 K LEX4 I LEXOUT=0 S LEXOUT=''LEXFND_U_LEXFND
"RTN","LEXTRAN1",97,0)
 Q LEXOUT
"RTN","LEXTRAN1",98,0)
 ;
"RTN","LEXTRAN1",99,0)
GETFSN(SRC,CODE,CDT) ; Get Fully Specified Name for a Concept
"RTN","LEXTRAN1",100,0)
 ;
"RTN","LEXTRAN1",101,0)
 ; Input
"RTN","LEXTRAN1",102,0)
 ;
"RTN","LEXTRAN1",103,0)
 ;   SRC   Code System source abbreviation (required)
"RTN","LEXTRAN1",104,0)
 ;   CODE  Code (required)
"RTN","LEXTRAN1",105,0)
 ;   CDT   Effective date (optional, default TODAY)
"RTN","LEXTRAN1",106,0)
 ;
"RTN","LEXTRAN1",107,0)
 ; Output
"RTN","LEXTRAN1",108,0)
 ;
"RTN","LEXTRAN1",109,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",110,0)
 ;     "1^LEXFSN"
"RTN","LEXTRAN1",111,0)
 ;     where LEXFSN is the fully specified name
"RTN","LEXTRAN1",112,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",113,0)
 ;     "-8^"_LEXSCNM_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",114,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",115,0)
 ;       
"RTN","LEXTRAN1",116,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",117,0)
 N SYNS,LEX S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",118,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",119,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",120,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q -1_U_"source not recognized"
"RTN","LEXTRAN1",121,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",122,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",123,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",124,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",125,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",126,0)
 I $D(LEX("F")) Q 1_U_LEX("F")
"RTN","LEXTRAN1",127,0)
 Q -8_U_$$LEXSCNM(LEXSRC)_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",128,0)
 ;
"RTN","LEXTRAN1",129,0)
GETPREF(SRC,CODE,CDT) ; Get the Preferred Term for a Code
"RTN","LEXTRAN1",130,0)
 ;
"RTN","LEXTRAN1",131,0)
 ; Input
"RTN","LEXTRAN1",132,0)
 ;
"RTN","LEXTRAN1",133,0)
 ;   SRC    Code System source abbreviation (required)
"RTN","LEXTRAN1",134,0)
 ;   CODE   Code (required)
"RTN","LEXTRAN1",135,0)
 ;   CDT    Effective date (optional, default TODAY)
"RTN","LEXTRAN1",136,0)
 ;
"RTN","LEXTRAN1",137,0)
 ; Output
"RTN","LEXTRAN1",138,0)
 ;
"RTN","LEXTRAN1",139,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",140,0)
 ;     "1^LEXPREF"
"RTN","LEXTRAN1",141,0)
 ;     where LEXPREF is the preferred name
"RTN","LEXTRAN1",142,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",143,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",144,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",145,0)
 ;
"RTN","LEXTRAN1",146,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",147,0)
 N SYNS,LEX S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",148,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",149,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",150,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q -1_U_"source not recognized"
"RTN","LEXTRAN1",151,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",152,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",153,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",154,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",155,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",156,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",157,0)
 Q 1_U_LEX("P")
"RTN","LEXTRAN1",158,0)
 ;
"RTN","LEXTRAN1",159,0)
GETDES(SRC,TEXT,CDT) ; Get the Designation Code for a Concept/Synonym
"RTN","LEXTRAN1",160,0)
 ;
"RTN","LEXTRAN1",161,0)
 ; Input
"RTN","LEXTRAN1",162,0)
 ;
"RTN","LEXTRAN1",163,0)
 ;   SRC    Code System source abbreviation (required)
"RTN","LEXTRAN1",164,0)
 ;   TEXT   Text (required)
"RTN","LEXTRAN1",165,0)
 ;   CDT    Effective date (optional, default TODAY)
"RTN","LEXTRAN1",166,0)
 ;
"RTN","LEXTRAN1",167,0)
 ; Output
"RTN","LEXTRAN1",168,0)
 ;
"RTN","LEXTRAN1",169,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN1",170,0)
 ;     "1^LEXDSG"
"RTN","LEXTRAN1",171,0)
 ;     where LEXDSG is the designation code
"RTN","LEXTRAN1",172,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",173,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",174,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",175,0)
 ;
"RTN","LEXTRAN1",176,0)
 N LEXSRC,LEXTEXT,LEXVDT S LEXSRC=$G(SRC),LEXTEXT=$G(TEXT),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",177,0)
 N LEXA,LEXCIEN,LEXDSG,LEXIEN,LEXMC,LEXSAB,LEXSIEN,LEXSO
"RTN","LEXTRAN1",178,0)
 N LEXSR,LEXSRD,LEXSRI,LEXSUB,LEXTMP S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",179,0)
 S LEXSRD=$$CSYS^LEXU(LEXSRC),LEXSAB=$P(LEXSRD,"^",2)
"RTN","LEXTRAN1",180,0)
 S LEXSRI=+LEXSRD Q:$G(LEXSRC)="" -1_U_"no source specified"
"RTN","LEXTRAN1",181,0)
 Q:+LEXSRI'>0 -1_U_"source not recognized"
"RTN","LEXTRAN1",182,0)
 Q:'$L($G(LEXTEXT)) -1_U_"no text specified"
"RTN","LEXTRAN1",183,0)
 S LEXTMP=$G(^TMP("LEXSCH",$J,"VDT",0))
"RTN","LEXTRAN1",184,0)
 S:LEXTMP?7N LEXVDT=LEXTMP
"RTN","LEXTRAN1",185,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",186,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",187,0)
 ;
"RTN","LEXTRAN1",188,0)
 ; find candidate designations
"RTN","LEXTRAN1",189,0)
 ;
"RTN","LEXTRAN1",190,0)
 S LEXSUB=$E($$UP^XLFSTR(LEXTEXT),1,63)
"RTN","LEXTRAN1",191,0)
 S LEXIEN=""
"RTN","LEXTRAN1",192,0)
 F  S LEXIEN=$O(^LEX(757.01,"B",LEXSUB,LEXIEN)) Q:LEXIEN=""  D
"RTN","LEXTRAN1",193,0)
 .I $$UP^XLFSTR(^LEX(757.01,LEXIEN,0))=$$UP^XLFSTR(LEXTEXT) S LEXA(LEXIEN)=$P(^LEX(757.01,LEXIEN,1),U)
"RTN","LEXTRAN1",194,0)
 S LEXIEN=""
"RTN","LEXTRAN1",195,0)
 F  S LEXIEN=$O(LEXA(LEXIEN)) Q:LEXIEN=""  D
"RTN","LEXTRAN1",196,0)
 . N LEXSR S LEXMC=LEXA(LEXIEN)
"RTN","LEXTRAN1",197,0)
 . S (LEXCIEN,LEXSIEN)=""
"RTN","LEXTRAN1",198,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"AMC",LEXMC,LEXSIEN)) Q:LEXSIEN=""  D
"RTN","LEXTRAN1",199,0)
 . . S LEXSR=$P(^LEX(757.02,LEXSIEN,0),U,3)
"RTN","LEXTRAN1",200,0)
 . . I +($$CSYS^LEXU(LEXSRC))'=LEXSR Q
"RTN","LEXTRAN1",201,0)
 . . I $P(^LEX(757.02,LEXSIEN,0),U,5)'=1 Q
"RTN","LEXTRAN1",202,0)
 . . S LEXCIEN=LEXSIEN
"RTN","LEXTRAN1",203,0)
 . I LEXCIEN="" K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",204,0)
 . ; eliminate if wrong source
"RTN","LEXTRAN1",205,0)
 . S LEXSO=$P(^LEX(757.02,LEXCIEN,0),U,2)
"RTN","LEXTRAN1",206,0)
 . S LEXSR=$P(^LEX(757.02,LEXCIEN,0),U,3)
"RTN","LEXTRAN1",207,0)
 . I +($$CSYS^LEXU(LEXSRC))'=LEXSR K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",208,0)
 . ; eliminate if inactive for LEXVDT
"RTN","LEXTRAN1",209,0)
 . I '+$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,$E(LEXSRC,1,3)) K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",210,0)
 ; get the designation code
"RTN","LEXTRAN1",211,0)
 S LEXIEN=$O(LEXA(""))
"RTN","LEXTRAN1",212,0)
 I LEXIEN="" Q -1_U_"text not recognized for source"
"RTN","LEXTRAN1",213,0)
 S LEXDSG=$O(^LEX(757.01,LEXIEN,7,"C",+LEXSRI,""))
"RTN","LEXTRAN1",214,0)
 I LEXDSG="" Q -1_U_"no designation code for text and source"
"RTN","LEXTRAN1",215,0)
 Q 1_U_LEXDSG
"RTN","LEXTRAN1",216,0)
 ;
"RTN","LEXTRAN1",217,0)
GETASSN(CODE,MAP,CDT,LEXRAY) ; Get Mapped Associated Codes
"RTN","LEXTRAN1",218,0)
 ;
"RTN","LEXTRAN1",219,0)
 ; Input
"RTN","LEXTRAN1",220,0)
 ;
"RTN","LEXTRAN1",221,0)
 ;   CODE     Code (required)
"RTN","LEXTRAN1",222,0)
 ;   MAP      Mapping Identifier (VUID) or mnemonic (required)
"RTN","LEXTRAN1",223,0)
 ;   CDT      Effective date (optional, default TODAY)
"RTN","LEXTRAN1",224,0)
 ;   LEXRAY   Output array (defaults to 'LEX') optional
"RTN","LEXTRAN1",225,0)
 ;
"RTN","LEXTRAN1",226,0)
 ; Output
"RTN","LEXTRAN1",227,0)
 ;
"RTN","LEXTRAN1",228,0)
 ;   if call finds active mappings for passed arguments
"RTN","LEXTRAN1",229,0)
 ;     "1^"_number_of_mappings
"RTN","LEXTRAN1",230,0)
 ;     LEX     -        an array containing the mapping target codes
"RTN","LEXTRAN1",231,0)
 ;     LEX = number of mappings
"RTN","LEXTRAN1",232,0)
 ;     LEX(order,code)  mapped codes (order is the order of the mapping)
"RTN","LEXTRAN1",233,0)
 ;                                   (code is the mapping target code)
"RTN","LEXTRAN1",234,0)
 ;
"RTN","LEXTRAN1",235,0)
 ;   if call finds no active mappings for passed arguments
"RTN","LEXTRAN1",236,0)
 ;     "0^0"
"RTN","LEXTRAN1",237,0)
 ;
"RTN","LEXTRAN1",238,0)
 ;   if a bad argument is passed for a parameter then the call returns
"RTN","LEXTRAN1",239,0)
 ;     "-1^"_error_message
"RTN","LEXTRAN1",240,0)
 ;
"RTN","LEXTRAN1",241,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN1",242,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",243,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",244,0)
 ;   
"RTN","LEXTRAN1",245,0)
 ;   Caution
"RTN","LEXTRAN1",246,0)
 ;   -------
"RTN","LEXTRAN1",247,0)
 ;   When the API is invoked in the following way
"RTN","LEXTRAN1",248,0)
 ;   S VAR=$$GETASSN^LEXTRAN1(CODE,MAP,[DATE],[ARR])
"RTN","LEXTRAN1",249,0)
 ;   make sure that ARR'="VAR"
"RTN","LEXTRAN1",250,0)
 ;   e.g. S ORY=$$GETASSN^LEXTRAN1(44452003,"SCT2ICD",,"VAR") is OK
"RTN","LEXTRAN1",251,0)
 ;   but  S VAR=$$GETASSN^LEXTRAN1(44452003,"SCT2ICD",,"VAR") is not OK
"RTN","LEXTRAN1",252,0)
 ;        this would be akin to using the same variable for two purposes. 
"RTN","LEXTRAN1",253,0)
 ;
"RTN","LEXTRAN1",254,0)
 N LEXCODE,LEXMAP,LEXVDT S LEXCODE=$G(CODE),LEXMAP=$G(MAP),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",255,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",256,0)
 I $G(LEXMAP)="" Q -1_U_"no mapping specified"
"RTN","LEXTRAN1",257,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",258,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",259,0)
 S LEXRAY=$G(LEXRAY,"LEX")
"RTN","LEXTRAN1",260,0)
 ;
"RTN","LEXTRAN1",261,0)
 N MIDIEN,CSYS,CIEN,VALCD,MORD,MTAR,MIEN,EFDT,STAT,CT,VUID
"RTN","LEXTRAN1",262,0)
 ;
"RTN","LEXTRAN1",263,0)
 I '$D(^LEX(757.32,"B",LEXMAP)),'$D(^LEX(757.32,"C",LEXMAP)) Q -1_U_"unrecognized mapping identifier"
"RTN","LEXTRAN1",264,0)
 I $D(^LEX(757.32,"C",LEXMAP)) D
"RTN","LEXTRAN1",265,0)
 .S MIDIEN=$O(^LEX(757.32,"C",LEXMAP,""))
"RTN","LEXTRAN1",266,0)
 I $D(^LEX(757.32,"B",LEXMAP)) D
"RTN","LEXTRAN1",267,0)
 .S MIDIEN=$O(^LEX(757.32,"B",LEXMAP,""))
"RTN","LEXTRAN1",268,0)
 I '$D(MIDIEN) Q -1_U_"not a recognized mapping identifier"
"RTN","LEXTRAN1",269,0)
 S CSYS=$$GET1^DIQ(757.32,MIDIEN_",",3)
"RTN","LEXTRAN1",270,0)
 ;
"RTN","LEXTRAN1",271,0)
 ; check that code exists for coding system
"RTN","LEXTRAN1",272,0)
 ;
"RTN","LEXTRAN1",273,0)
 S CIEN="",VALCD=0
"RTN","LEXTRAN1",274,0)
 F  Q:VALCD=1  D  Q:CIEN=""
"RTN","LEXTRAN1",275,0)
 .S CIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",276,0)
 .S VALCD=''$D(^LEX(757.02,"ASRC",$$LEXASAB(CSYS),CIEN))
"RTN","LEXTRAN1",277,0)
 I 'VALCD Q -2_U_$$LEXSCNM(CSYS)_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",278,0)
 ;
"RTN","LEXTRAN1",279,0)
 ; obtain mappings that are valid for date passed
"RTN","LEXTRAN1",280,0)
 ;
"RTN","LEXTRAN1",281,0)
 S (MORD,MTAR,MIEN)=""
"RTN","LEXTRAN1",282,0)
 K LEX
"RTN","LEXTRAN1",283,0)
 S LEX=0
"RTN","LEXTRAN1",284,0)
 F  S MORD=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD)) Q:MORD=""  D
"RTN","LEXTRAN1",285,0)
 .F  S MTAR=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR)) Q:MTAR=""  D
"RTN","LEXTRAN1",286,0)
 ..F  S MIEN=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR,MIEN)) Q:MIEN=""  D
"RTN","LEXTRAN1",287,0)
 ...N MAT S MAT=$P($G(^LEX(757.33,+MIEN,0)),U,5) ; Pch 73 adds variable MAT for match
"RTN","LEXTRAN1",288,0)
 ...S VUID=$P(^LEX(757.33,MIEN,0),U)
"RTN","LEXTRAN1",289,0)
 ...S EFDT=+$O(^LEX(757.33,"G",VUID,LEXVDT+.0001),-1)
"RTN","LEXTRAN1",290,0)
 ...Q:EFDT=0
"RTN","LEXTRAN1",291,0)
 ...S STAT=+$O(^LEX(757.33,"G",VUID,EFDT,""))
"RTN","LEXTRAN1",292,0)
 ...Q:STAT=0
"RTN","LEXTRAN1",293,0)
 ...S LEX=LEX+1
"RTN","LEXTRAN1",294,0)
 ...S LEX(MORD,MTAR)=MAT ; Pch 73 adds variable MAT for match
"RTN","LEXTRAN1",295,0)
 I LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN1",296,0)
 Q ''@LEXRAY_U_@LEXRAY
"RTN","LEXTRAN1",297,0)
 ;
"RTN","LEXTRAN1",298,0)
LEXSCNM(LEXSRC) ; get source name
"RTN","LEXTRAN1",299,0)
 N LEXI Q:'$L(LEXSRC) ""  S LEXI=+($$CSYS^LEXU(LEXSRC))'>0 Q:LEXI'>0 ""
"RTN","LEXTRAN1",300,0)
 Q $P(^LEX(757.03,+LEXI,0),U,2)
"RTN","LEXTRAN1",301,0)
 ;
"RTN","LEXTRAN1",302,0)
LEXASAB(LEXSRC) ; get source abbreviation
"RTN","LEXTRAN1",303,0)
 N LEXI Q:'$L(LEXSRC) ""  S LEXI=+($$CSYS^LEXU(LEXSRC)) Q:LEXI'>0 ""
"RTN","LEXTRAN1",304,0)
 Q $E($P($G(^LEX(757.03,+LEXI,0)),U),1,3)
"RTN","LEXTRAN1",305,0)
CSI(LEXSRC) ; get source IEN
"RTN","LEXTRAN1",306,0)
 Q:'$L($E($G(LEXSRC),1,3)) -1  N LEXI S LEXI=+($$CSYS^LEXU(LEXSRC)) S:LEXI'>0 LEXI=-2
"RTN","LEXTRAN1",307,0)
 Q +LEXI
"RTN","LEXTRAN1",308,0)
 ;
"RTN","LEXTRAN1",309,0)
INTDAT(X) ; convert date from external format to VA internal format
"RTN","LEXTRAN1",310,0)
 S X=$G(X) Q:$P(X,".",1)?7N $P(X,".",1)
"RTN","LEXTRAN1",311,0)
 N Y,%DT
"RTN","LEXTRAN1",312,0)
 D ^%DT
"RTN","LEXTRAN1",313,0)
 Q Y
"RTN","LEXTRAN1",314,0)
 ;
"RTN","LEXTRAN1",315,0)
GETCIEN(CODE) ; get correct code ien for code and date
"RTN","LEXTRAN1",316,0)
 ; CODE must be defined
"RTN","LEXTRAN1",317,0)
 ; LEXVDT must be defined
"RTN","LEXTRAN1",318,0)
 N STA,DAT,CIEN,ARR,CDT S CDT=$G(LEXVDT)
"RTN","LEXTRAN1",319,0)
 S (STA,DAT,CIEN)=""
"RTN","LEXTRAN1",320,0)
 F  S STA=$O(^LEX(757.02,"ACT",CODE_" ",STA)) Q:STA=""  D
"RTN","LEXTRAN1",321,0)
 .Q:(STA+1)>2
"RTN","LEXTRAN1",322,0)
 .F  S DAT=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT)) Q:DAT=""  D
"RTN","LEXTRAN1",323,0)
 ..F  S CIEN=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",324,0)
 ...S ARR(DAT,CIEN)=""
"RTN","LEXTRAN1",325,0)
 Q:'$D(ARR) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",326,0)
 S CIEN=$O(ARR(CDT+.001),-1)
"RTN","LEXTRAN1",327,0)
 Q:'$L(CIEN) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",328,0)
 S CIEN=$O(ARR(CIEN,""),-1)
"RTN","LEXTRAN1",329,0)
 Q:'$D(^LEX(757.02,+CIEN,0)) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",330,0)
 Q CIEN
"RTN","LEXU")
0^44^B137452070
"RTN","LEXU",1,0)
LEXU ;ISL/KER - Miscellaneous Lexicon Utilities ;04/21/2014
"RTN","LEXU",2,0)
 ;;2.0;LEXICON UTILITY;**2,6,9,15,25,36,73,51,80**;Sep 23, 1996;Build 1
"RTN","LEXU",3,0)
 ;               
"RTN","LEXU",4,0)
 ; Global Variables
"RTN","LEXU",5,0)
 ;    None
"RTN","LEXU",6,0)
 ;               
"RTN","LEXU",7,0)
 ; External References
"RTN","LEXU",8,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU",9,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU",10,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU",11,0)
 ;               
"RTN","LEXU",12,0)
HELP ; API Help
"RTN","LEXU",13,0)
 D EN^LEXUH
"RTN","LEXU",14,0)
 Q
"RTN","LEXU",15,0)
SC(LEX,LEXS,LEXVDT) ; Filter by Semantic Class
"RTN","LEXU",16,0)
 ;
"RTN","LEXU",17,0)
 ; Input
"RTN","LEXU",18,0)
 ;
"RTN","LEXU",19,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",20,0)
 ;    LEXS     Filter
"RTN","LEXU",21,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",22,0)
 ;
"RTN","LEXU",23,0)
 ; Output
"RTN","LEXU",24,0)
 ;
"RTN","LEXU",25,0)
 ;    $$SC     1/0
"RTN","LEXU",26,0)
 ;
"RTN","LEXU",27,0)
 N LEXINC,LEXEXC,LEXIC,LEXEC,LEXRREC,X D VDT
"RTN","LEXU",28,0)
 S LEXRREC=LEX Q:'$D(^LEX(757.01,LEXRREC,0)) 0
"RTN","LEXU",29,0)
 I $L(LEXS,";")=3,$P(LEXS,";",3)'="" D  Q:+LEXINC>0 LEXINC
"RTN","LEXU",30,0)
 . S LEXINC=0 S LEXINC=$$SO(LEXRREC,$P(LEXS,";",3),$G(LEXVDT))
"RTN","LEXU",31,0)
 S LEXRREC=$P(^LEX(757.01,LEXRREC,1),U,1)
"RTN","LEXU",32,0)
 S LEXINC=0 F LEXIC=1:1:$L($P(LEXS,";",1),"/") D
"RTN","LEXU",33,0)
 . N LEXP,LEX1,LEX2 S LEXP=$P($P(LEXS,";",1),"/",LEXIC)
"RTN","LEXU",34,0)
 . S LEX1=$D(^LEX(757.1,"AMCC",LEXRREC,LEXP))
"RTN","LEXU",35,0)
 . S LEX2=$D(^LEX(757.1,"AMCT",LEXRREC,LEXP))
"RTN","LEXU",36,0)
 . I LEX1!(LEX2) D
"RTN","LEXU",37,0)
 . . S LEXINC=1,LEXIC=$L($P(LEXS,";",1),"/")+1
"RTN","LEXU",38,0)
 I LEXINC=0!($P(LEXS,";",2)="") K LEXIC,LEXS,LEXEC Q LEXINC
"RTN","LEXU",39,0)
 S LEXEXC=0 F LEXEC=1:1:$L($P(LEXS,";",2),"/") D
"RTN","LEXU",40,0)
 . N LEXP,LEX1,LEX2 S LEXP=$P($P(LEXS,";",2),"/",LEXEC)
"RTN","LEXU",41,0)
 . S LEX1=$D(^LEX(757.1,"AMCC",LEXRREC,LEXP))
"RTN","LEXU",42,0)
 . S LEX2=$D(^LEX(757.1,"AMCT",LEXRREC,LEXP))
"RTN","LEXU",43,0)
 . I LEX1!(LEX2) D
"RTN","LEXU",44,0)
 . . S LEXEXC=1,LEXEC=$L($P(LEXS,";",2),"/")+1
"RTN","LEXU",45,0)
 I LEXINC,'LEXEXC K LEXIC,LEXS,LEXEC Q 1
"RTN","LEXU",46,0)
 K LEXIC,LEXS,LEXEC
"RTN","LEXU",47,0)
 Q 0
"RTN","LEXU",48,0)
ICDDP(LEX,LEXT,LEXVDT) ; Filter by ICD Diagnosis/Procedure System
"RTN","LEXU",49,0)
 ;
"RTN","LEXU",50,0)
 ; Input
"RTN","LEXU",51,0)
 ;
"RTN","LEXU",52,0)
 ;    LEX      IEN of file 757.01 (required)
"RTN","LEXU",53,0)
 ;    LEXT     ICD Type (optional)
"RTN","LEXU",54,0)
 ;                 1  ICD Diagnosis (default)
"RTN","LEXU",55,0)
 ;                 2  ICD Procedures
"RTN","LEXU",56,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",57,0)
 ;                 Date before Oct 1, 2013, ICD-9 assumed
"RTN","LEXU",58,0)
 ;                 Date after Sep 30, 2013, ICD-10 assumed
"RTN","LEXU",59,0)
 ; Output
"RTN","LEXU",60,0)
 ;
"RTN","LEXU",61,0)
 ;    $$ICDDP  1/0
"RTN","LEXU",62,0)
 ;
"RTN","LEXU",63,0)
 N LEXEI,LEXF,LEXMC,LEXMCE,LEXSRC,LEXSRI,ICD10 S (LEXSRC,LEXSRI)=""
"RTN","LEXU",64,0)
 S LEXEI=+LEX Q:'$D(^LEX(757.01,LEXEI,0)) 0  S ICD10=$$IMPDATE("10D")
"RTN","LEXU",65,0)
 S LEXT=$G(LEXT) S:+LEXT<0!(LEXT>2) LEXT=1 D VDT
"RTN","LEXU",66,0)
 S:LEXT=1&(LEXVDT<ICD10) LEXSRC="ICD",LEXSRI=1
"RTN","LEXU",67,0)
 S:LEXT=1&(LEXVDT'<ICD10) LEXSRC="10D",LEXSRI=30
"RTN","LEXU",68,0)
 S:LEXT=2&(LEXVDT<ICD10) LEXSRC="ICP",LEXSRI=2
"RTN","LEXU",69,0)
 S:LEXT=2&(LEXVDT'<ICD10) LEXSRC="10P",LEXSRI=31
"RTN","LEXU",70,0)
 Q:'$L(LEXSRC) 0  Q:LEXSRI'>0 0
"RTN","LEXU",71,0)
 S LEXF=0,LEXMC=+($P(^LEX(757.01,LEXEI,1),U,1)) Q:LEXMC'>0 0
"RTN","LEXU",72,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXEI,1),U,1)),0)) Q:LEXMCE'>0 0
"RTN","LEXU",73,0)
 S LEXF=0 I LEXEI+LEXMCE>0 D
"RTN","LEXU",74,0)
 . N LEXSI S LEXSI=0
"RTN","LEXU",75,0)
 . F  S LEXSI=$O(^LEX(757.02,"AMC",LEXMC,LEXSI)) Q:+LEXSI=0!(LEXF)  D  Q:LEXF
"RTN","LEXU",76,0)
 . . N LEXN0,LEXSAB,LEXSO,LEXSTA
"RTN","LEXU",77,0)
 . . S LEXN0=$G(^LEX(757.02,LEXSI,0)),LEXSAB=+($P(LEXN0,U,3))
"RTN","LEXU",78,0)
 . . Q:LEXSAB'=LEXSRI  Q:"^1^2^30^31^"'[("^"_LEXSAB_"^")
"RTN","LEXU",79,0)
 . . S LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",80,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,LEXSAB)
"RTN","LEXU",81,0)
 . . Q:+LEXSTA'>0  S LEXF=1
"RTN","LEXU",82,0)
 S LEX=$G(LEXF)
"RTN","LEXU",83,0)
 Q LEX
"RTN","LEXU",84,0)
DX(LEX,LEXVDT) ; Filter by Diagnosis System
"RTN","LEXU",85,0)
 ; 
"RTN","LEXU",86,0)
 ; Input
"RTN","LEXU",87,0)
 ; 
"RTN","LEXU",88,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",89,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",90,0)
 ;
"RTN","LEXU",91,0)
 ; Output
"RTN","LEXU",92,0)
 ;
"RTN","LEXU",93,0)
 ;    $$DX     1/0
"RTN","LEXU",94,0)
 ;
"RTN","LEXU",95,0)
 N LEXEI,LEXF,LEXMC,LEXMCE,LEXSRC,LEXSRI,ICD10
"RTN","LEXU",96,0)
 S LEXEI=+LEX Q:'$D(^LEX(757.01,LEXEI,0)) 0
"RTN","LEXU",97,0)
 D VDT S LEXSRC="ICD",LEXSRI=1 S ICD10=$$IMPDATE("10D")
"RTN","LEXU",98,0)
 S:+($G(LEXVDT))'<ICD10 LEXSRC="10D",LEXSRI=30
"RTN","LEXU",99,0)
 S LEXF=0,LEXMC=+($P(^LEX(757.01,LEXEI,1),U,1)) Q:LEXMC'>0 0
"RTN","LEXU",100,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXEI,1),U,1)),0)) Q:LEXMCE'>0 0
"RTN","LEXU",101,0)
 S LEXF=0 I LEXEI+LEXMCE>0 D
"RTN","LEXU",102,0)
 . N LEXSI S LEXSI=0
"RTN","LEXU",103,0)
 . F  S LEXSI=$O(^LEX(757.02,"AMC",LEXMC,LEXSI)) Q:+LEXSI=0!(LEXF)  D
"RTN","LEXU",104,0)
 . . N LEXN0,LEXSAB,LEXSO,LEXSTA
"RTN","LEXU",105,0)
 . . S LEXN0=$G(^LEX(757.02,LEXSI,0)),LEXSAB=+($P(LEXN0,U,3))
"RTN","LEXU",106,0)
 . . Q:LEXSAB'=LEXSRI  Q:"^1^30^"'[("^"_LEXSAB_"^")
"RTN","LEXU",107,0)
 . . S LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",108,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,LEXSAB)
"RTN","LEXU",109,0)
 . . Q:+LEXSTA'>0  S LEXF=1
"RTN","LEXU",110,0)
 K LEX S LEX=$G(LEXF)
"RTN","LEXU",111,0)
 Q LEX
"RTN","LEXU",112,0)
SO(LEX,LEXS,LEXVDT) ; Filter by Source
"RTN","LEXU",113,0)
 ;
"RTN","LEXU",114,0)
 ; Input
"RTN","LEXU",115,0)
 ; 
"RTN","LEXU",116,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",117,0)
 ;    LEXS     Filter
"RTN","LEXU",118,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",119,0)
 ;
"RTN","LEXU",120,0)
 ; Output
"RTN","LEXU",121,0)
 ;
"RTN","LEXU",122,0)
 ;    $$SO     1/0
"RTN","LEXU",123,0)
 ;
"RTN","LEXU",124,0)
 N LEXABR,LEXCR,LEXF,LEXMC,LEXMCE,LEXN0,LEXSAB,LEXSO,LEXSR,LEXSTA,LEXTR
"RTN","LEXU",125,0)
 S LEXTR=+LEX,LEXF=0 Q:'$D(^LEX(757.01,LEXTR,0)) LEXF
"RTN","LEXU",126,0)
 Q:'$D(^LEX(757.01,LEXTR)) LEXF
"RTN","LEXU",127,0)
 S LEXMC=$P(^LEX(757.01,LEXTR,1),U,1)
"RTN","LEXU",128,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXTR,1),U,1)),0))
"RTN","LEXU",129,0)
 D VDT I LEXTR>0,LEXMCE>0,LEXTR=LEXMCE D  G SOQ
"RTN","LEXU",130,0)
 . S LEXF=0 F LEXSR=1:1:$L(LEXS,"/") D  Q:LEXF>0
"RTN","LEXU",131,0)
 . . S LEXABR=$P(LEXS,"/",LEXSR),LEXCR=0
"RTN","LEXU",132,0)
 . . F  S LEXCR=$O(^LEX(757.02,"AMC",LEXMC,LEXCR)) Q:+LEXCR=0  D  Q:LEXF>0
"RTN","LEXU",133,0)
 . . . N LEXN0,LEXSAB,LEXQ S LEXQ=0
"RTN","LEXU",134,0)
 . . . S LEXN0=$G(^LEX(757.02,LEXCR,0))
"RTN","LEXU",135,0)
 . . . S LEXSAB=+($P(LEXN0,U,3)),LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",136,0)
 . . . I $G(LEXLKT)["BC" D  Q:LEXQ
"RTN","LEXU",137,0)
 . . . . N LEXNAR S LEXNAR=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXU",138,0)
 . . . . I $L($G(LEXNAR)) S:$E(LEXSO,1,$L($G(LEXNAR)))'=$G(LEXNAR) LEXQ=1
"RTN","LEXU",139,0)
 . . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSAB)
"RTN","LEXU",140,0)
 . . . Q:+LEXSTA'>0  Q:$P(LEXSTA,U,2)'=LEXCR
"RTN","LEXU",141,0)
 . . . Q:'$D(^LEX(757.03,LEXSAB,0))
"RTN","LEXU",142,0)
 . . . S LEXSAB=$E(^LEX(757.03,LEXSAB,0),1,3)
"RTN","LEXU",143,0)
 . . . I LEXSAB=LEXABR S LEXF=1
"RTN","LEXU",144,0)
SOQ ; Quit Source Filter
"RTN","LEXU",145,0)
 K LEXCR,LEXMC,LEXMCE,LEXN0,LEXSAB,LEXABR,LEXSO,LEXSR,LEXSTA,LEXTR
"RTN","LEXU",146,0)
 Q LEXF
"RTN","LEXU",147,0)
SRC(LEX,LEXS) ; Filter by Expression Source
"RTN","LEXU",148,0)
 ;    LEX      Expression  IEN of file 757.01
"RTN","LEXU",149,0)
 ;    LEXS     Source      IEN of 757.14
"RTN","LEXU",150,0)
 S LEX=+($G(LEX)),LEXS=+($G(LEXS)) Q:LEX=0 0  Q:LEXS=0 0
"RTN","LEXU",151,0)
 Q:'$D(^LEX(757.01,LEX,0)) 0 Q:'$D(^LEX(757.14,LEXS,0)) 0
"RTN","LEXU",152,0)
 S LEXSR=$P($G(^LEX(757.01,LEX,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",153,0)
 N LEXSR,LEXMC,LEXMCE S LEXMC=+($G(^LEX(757.01,LEX,1)))
"RTN","LEXU",154,0)
 S LEXMCE=+($G(^LEX(757,+LEXMC,0)))
"RTN","LEXU",155,0)
 S LEXSR=$P($G(^LEX(757.01,LEXMCE,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",156,0)
 Q 0
"RTN","LEXU",157,0)
DEF(LEX) ; Display expression definition
"RTN","LEXU",158,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",159,0)
 I $D(^LEX(757.01,LEX,3,0)) D
"RTN","LEXU",160,0)
 . N LEXLN F LEXLN=1:1:$P(^LEX(757.01,LEX,3,0),U,4) D
"RTN","LEXU",161,0)
 . . I $D(^LEX(757.01,LEX,3,LEXLN,0)) W !,?2,^LEX(757.01,LEX,3,LEXLN,0)
"RTN","LEXU",162,0)
 . K LEX,LEXLN W !
"RTN","LEXU",163,0)
 Q
"RTN","LEXU",164,0)
ID(LEX) ; ICD Diagnosis retained - ICD procedures ignored
"RTN","LEXU",165,0)
 ;    LEX      Code
"RTN","LEXU",166,0)
 Q:'$L($G(LEX)) ""  Q:$L($P(LEX,".",1))<3 ""
"RTN","LEXU",167,0)
 Q:'$D(^LEX(757.02,"AVA",(LEX_" "))) ""
"RTN","LEXU",168,0)
 N LEXO,LEXR S (LEXO,LEXR)=0
"RTN","LEXU",169,0)
 F  S LEXR=$O(^LEX(757.02,"AVA",(LEX_" "),LEXR)) Q:+LEXR=0  D  Q:LEXO=1
"RTN","LEXU",170,0)
 . I $D(^LEX(757.02,"AVA",(LEX_" "),LEXR,"ICD")) S LEXO=1
"RTN","LEXU",171,0)
 Q:'LEXO "" Q LEX
"RTN","LEXU",172,0)
ICDONE(LEX,LEXVDT) ; Get One ICD-9 Diagnosis Code for a Term
"RTN","LEXU",173,0)
 ; 
"RTN","LEXU",174,0)
 ; Input
"RTN","LEXU",175,0)
 ; 
"RTN","LEXU",176,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",177,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",178,0)
 ;
"RTN","LEXU",179,0)
 ; Output
"RTN","LEXU",180,0)
 ;
"RTN","LEXU",181,0)
 ;    $$ICDONE ICD-9 Code
"RTN","LEXU",182,0)
 ;
"RTN","LEXU",183,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"ICD")
"RTN","LEXU",184,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",185,0)
 Q LEX
"RTN","LEXU",186,0)
D10ONE(LEX,LEXVDT) ; Get One ICD-10 Diagosis Code for a Term
"RTN","LEXU",187,0)
 ; 
"RTN","LEXU",188,0)
 ; Input
"RTN","LEXU",189,0)
 ; 
"RTN","LEXU",190,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",191,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",192,0)
 ;
"RTN","LEXU",193,0)
 ; Output
"RTN","LEXU",194,0)
 ;
"RTN","LEXU",195,0)
 ;    $$D10ONE ICD-10-CM Diagnosis Code or Null
"RTN","LEXU",196,0)
 ;
"RTN","LEXU",197,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"10D")
"RTN","LEXU",198,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",199,0)
 Q LEX
"RTN","LEXU",200,0)
P10ONE(LEX,LEXVDT) ; Get One ICD-10 Procedure Code for a Term
"RTN","LEXU",201,0)
 ; 
"RTN","LEXU",202,0)
 ; Input
"RTN","LEXU",203,0)
 ; 
"RTN","LEXU",204,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",205,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",206,0)
 ;
"RTN","LEXU",207,0)
 ; Output
"RTN","LEXU",208,0)
 ;
"RTN","LEXU",209,0)
 ;    $$P10ONE ICD-10-PCS Procedure Code or Null
"RTN","LEXU",210,0)
 ;
"RTN","LEXU",211,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"10P")
"RTN","LEXU",212,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",213,0)
 Q LEX
"RTN","LEXU",214,0)
CPTONE(LEX,LEXVDT) ; Get One CPT Code for a Term
"RTN","LEXU",215,0)
 ; 
"RTN","LEXU",216,0)
 ; Input
"RTN","LEXU",217,0)
 ; 
"RTN","LEXU",218,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",219,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",220,0)
 ;
"RTN","LEXU",221,0)
 ; Output
"RTN","LEXU",222,0)
 ;
"RTN","LEXU",223,0)
 ;    $$CPTONE CPT Code or Null
"RTN","LEXU",224,0)
 ;
"RTN","LEXU",225,0)
 N LEXCPT D VDT S LEXCPT=$$ONE($G(LEX),$G(LEXVDT),"CPT")
"RTN","LEXU",226,0)
 Q:'$L($P(LEXCPT,"^",1)) ""  S LEX=LEXCPT
"RTN","LEXU",227,0)
 Q LEX
"RTN","LEXU",228,0)
CPCONE(LEX,LEXVDT) ; Get One HCPCS Code for a Term
"RTN","LEXU",229,0)
 ; 
"RTN","LEXU",230,0)
 ; Input
"RTN","LEXU",231,0)
 ; 
"RTN","LEXU",232,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",233,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",234,0)
 ;
"RTN","LEXU",235,0)
 ; Output
"RTN","LEXU",236,0)
 ;
"RTN","LEXU",237,0)
 ;    $$CPCONE HCPCS Code or Null
"RTN","LEXU",238,0)
 ;
"RTN","LEXU",239,0)
 N LEXCPT D VDT S LEXCPT=$$ONE($G(LEX),$G(LEXVDT),"CPC")
"RTN","LEXU",240,0)
 Q:'$L($P(LEXCPT,"^",1)) ""  S LEX=LEXCPT
"RTN","LEXU",241,0)
 Q LEX
"RTN","LEXU",242,0)
DSMONE(LEX,LEXVDT) ; Get One DSM Code for a Term
"RTN","LEXU",243,0)
 ; 
"RTN","LEXU",244,0)
 ; Input
"RTN","LEXU",245,0)
 ; 
"RTN","LEXU",246,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",247,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",248,0)
 ;
"RTN","LEXU",249,0)
 ; Output
"RTN","LEXU",250,0)
 ;
"RTN","LEXU",251,0)
 ;    $$DSMONE DSM-IV Code or Null
"RTN","LEXU",252,0)
 ;
"RTN","LEXU",253,0)
 N LEXDSM D VDT S LEXDSM=$$ONE^LEXSRC(LEX,"DS4")
"RTN","LEXU",254,0)
 I LEXDSM'="" D  Q LEX
"RTN","LEXU",255,0)
 . S LEX=LEXDSM N LEXDAT S LEXDAT=$$ICDDX^ICDEX(LEXDSM,$G(LEXVDT),1,"E")
"RTN","LEXU",256,0)
 . S:$P(LEXDAT,"^",10)'>0 LEX=""
"RTN","LEXU",257,0)
 S LEXDSM=$$ONE^LEXSRC(LEX,"DS3") I LEXDSM'="" D  Q LEX
"RTN","LEXU",258,0)
 . S LEX=LEXDSM N LEXDAT S LEXDAT=$$ICDDX^ICDEX(LEXDSM,$G(LEXVDT),1,"E")
"RTN","LEXU",259,0)
 . S:$P(LEXDAT,"^",10)'>0 LEX=""
"RTN","LEXU",260,0)
 Q ""
"RTN","LEXU",261,0)
 ;
"RTN","LEXU",262,0)
SCT(X,LEXVDT) ;   Filter by SNOMED CT (SCT) (Human only)
"RTN","LEXU",263,0)
 ; 
"RTN","LEXU",264,0)
 ; Input
"RTN","LEXU",265,0)
 ; 
"RTN","LEXU",266,0)
 ;    X        IEN of file 757.01
"RTN","LEXU",267,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",268,0)
 ;
"RTN","LEXU",269,0)
 ; Output
"RTN","LEXU",270,0)
 ;
"RTN","LEXU",271,0)
 ;    $$SCT    Human SNOMED Code or Null
"RTN","LEXU",272,0)
 ;             Excludes Veterinary SNOMED codes
"RTN","LEXU",273,0)
 ;
"RTN","LEXU",274,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO,LEXPL,LEXVT S LEXEX=+($G(X)),LEXD=$G(LEXVDT) Q:LEXEX'>0 0
"RTN","LEXU",275,0)
 S LEXC=$S(LEXD?7N:$$ONE^LEXU(+LEXEX,LEXD,"SCT"),1:$$ONE^LEXU(+LEXEX,,"SCT"))
"RTN","LEXU",276,0)
 Q:'$L(LEXC) 0  S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 0  Q:'$D(^LEX(757.1,"B",LEXMC)) 0
"RTN","LEXU",277,0)
 S LEXVT=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D  Q:LEXVT>0
"RTN","LEXU",278,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3),LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2)) S:LEXN["VETERINARY" LEXVT=1
"RTN","LEXU",279,0)
 S LEXPL=0,LEXI=0 F  S LEXI=$O(^LEX(757.21,"B",LEXEX,LEXI)) Q:+LEXI'>0  D  Q:LEXPL>0
"RTN","LEXU",280,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.21,LEXI,0)),"^",2),LEXN=$P($G(^LEXT(757.2,+LEXT,0)),"^",2) S:LEXN="PLS" LEXPL=1
"RTN","LEXU",281,0)
 S LEXO=1 S:LEXVT=1 LEXO=0 S:LEXPL'>0 LEXO=0
"RTN","LEXU",282,0)
 S X=LEXO
"RTN","LEXU",283,0)
 Q X
"RTN","LEXU",284,0)
ONE(LEX,LEXVDT,LEXSAB) ; Get One Code for a Term by Source
"RTN","LEXU",285,0)
 ; 
"RTN","LEXU",286,0)
 ; Input
"RTN","LEXU",287,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",288,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",289,0)
 ;    LEXSAB   Source Abbreviation
"RTN","LEXU",290,0)
 ;
"RTN","LEXU",291,0)
 ; Output
"RTN","LEXU",292,0)
 ;
"RTN","LEXU",293,0)
 ;    $$ONE    Code or Null
"RTN","LEXU",294,0)
 ;
"RTN","LEXU",295,0)
 N LEXDAT,LEXIEN D VDT S LEXIEN=$G(LEX) Q:+($G(LEXIEN))'>0 ""
"RTN","LEXU",296,0)
 S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB) ""
"RTN","LEXU",297,0)
 I LEXSAB?1N.N,'$D(^LEX(757.03,"ASAB",LEXSAB)),$D(^LEX(757.03,+LEXSAB,0)) D
"RTN","LEXU",298,0)
 . S LEXSAB=$P($G(^LEX(757.03,+LEXSAB,0)),"^",1)
"RTN","LEXU",299,0)
 S LEXSAB=$E($G(LEXSAB),1,3) Q:$L(LEXSAB)'=3 ""
"RTN","LEXU",300,0)
 S LEX=$$ONE^LEXSRC(LEXIEN,LEXSAB,LEXVDT),LEXDAT=""
"RTN","LEXU",301,0)
 S:LEXSAB="ICD"!(LEXSAB="DS4") LEXDAT=$$ICDDX^ICDEX(LEX,LEXVDT,1,"E")
"RTN","LEXU",302,0)
 S:LEXSAB="10D" LEXDAT=$$ICDDX^ICDEX(LEX,LEXVDT,30,"E")
"RTN","LEXU",303,0)
 S:LEXSAB="ICP" LEXDAT=$$ICDOP^ICDEX(LEX,LEXVDT,2,"E")
"RTN","LEXU",304,0)
 S:LEXSAB="10P" LEXDAT=$$ICDOP^ICDEX(LEX,LEXVDT,31,"E")
"RTN","LEXU",305,0)
 S:LEXSAB="CPT" LEXDAT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",306,0)
 S:LEXSAB="CPC" LEXDAT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",307,0)
 Q:"^CPT^CPC"[("^"_LEXSAB_"^")&($P(LEXDAT,"^",7)'>0) ""
"RTN","LEXU",308,0)
 Q:"^ICD^ICP^10D^10P^"[("^"_LEXSAB_"^")&($P(LEXDAT,"^",10)'>0) ""
"RTN","LEXU",309,0)
 S LEX="" I +LEXDAT'>0 D
"RTN","LEXU",310,0)
 . N LEXSIEN S LEXSIEN=0
"RTN","LEXU",311,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"B",LEXIEN,LEXSIEN)) Q:+LEXSIEN'>0  D  Q:+LEXDAT>0
"RTN","LEXU",312,0)
 . . Q:'$D(^LEX(757.02,"ASRC",LEXSAB,LEXSIEN))  N LEXEF,LEXHI,LEXST,LEXCD
"RTN","LEXU",313,0)
 . . S LEXEF=$O(^LEX(757.02,LEXSIEN,4,"B",(LEXVDT+.001)),-1) Q:'$L(LEXEF)
"RTN","LEXU",314,0)
 . . S LEXHI=$O(^LEX(757.02,LEXSIEN,4,"B",+LEXEF," "),-1)
"RTN","LEXU",315,0)
 . . S LEXST=$P($G(^LEX(757.02,LEXSIEN,4,+LEXHI,0)),"^",2) Q:LEXST'>0
"RTN","LEXU",316,0)
 . . S LEXCD=$P($G(^LEX(757.02,+LEXSIEN,0)),"^",2)
"RTN","LEXU",317,0)
 . . S:$L(LEXCD)&(+LEXIEN>0) LEXDAT=LEXIEN_"^"_LEXCD
"RTN","LEXU",318,0)
 Q:+LEXDAT'>0 "" S LEX=$P(LEXDAT,"^",2)
"RTN","LEXU",319,0)
 I $G(LEXLKT)["BC" D
"RTN","LEXU",320,0)
 . N LEXNAR S LEXNAR=$$UP^XLFSTR($G(^TMP("LEXSCH",$J,"NAR",0)))
"RTN","LEXU",321,0)
 . I $L($G(LEXNAR)) S:$E(LEX,1,$L($G(LEXNAR)))'=$G(LEXNAR) LEX=""
"RTN","LEXU",322,0)
 Q LEX
"RTN","LEXU",323,0)
ICD(LEX,LEXVDT) ; Get All ICD-9 Diagnosis Codes for a Term
"RTN","LEXU",324,0)
 ; 
"RTN","LEXU",325,0)
 ;   Input  
"RTN","LEXU",326,0)
 ;   
"RTN","LEXU",327,0)
 ;     LEX       IEN of file 757.01
"RTN","LEXU",328,0)
 ;     LEXVDT    Date to use for screening by codes
"RTN","LEXU",329,0)
 ;          
"RTN","LEXU",330,0)
 ;   Output 
"RTN","LEXU",331,0)
 ;   
"RTN","LEXU",332,0)
 ;     $$ICD     <ICD-9 code>;<ICD-9 code>;<etc>
"RTN","LEXU",333,0)
 ; 
"RTN","LEXU",334,0)
 D VDT S LEX=$$ALL^LEXU($G(LEX),$G(LEXVDT),"ICD")
"RTN","LEXU",335,0)
 Q LEX
"RTN","LEXU",336,0)
D10(LEX,LEXVDT) ; Get All ICD-10 Diagnosis Codes for a Term
"RTN","LEXU",337,0)
 ;
"RTN","LEXU",338,0)
 ;   Input  
"RTN","LEXU",339,0)
 ;   
"RTN","LEXU",340,0)
 ;      LEX       IEN of file 757.01
"RTN","LEXU",341,0)
 ;      LEXVDT    Date to use for screening by codes
"RTN","LEXU",342,0)
 ;          
"RTN","LEXU",343,0)
 ;   Output 
"RTN","LEXU",344,0)
 ;   
"RTN","LEXU",345,0)
 ;      $$D10     <ICD-10 code>;<ICD-10 code>;<etc>
"RTN","LEXU",346,0)
 ;          
"RTN","LEXU",347,0)
 D VDT S LEX=$$ALL^LEXU($G(LEX),$G(LEXVDT),"10D")
"RTN","LEXU",348,0)
 Q LEX
"RTN","LEXU",349,0)
 ;
"RTN","LEXU",350,0)
ALL(LEX,LEXVDT,LEXSAB) ; Get All Codes for a Term by Source
"RTN","LEXU",351,0)
 ; 
"RTN","LEXU",352,0)
 ; Input
"RTN","LEXU",353,0)
 ; 
"RTN","LEXU",354,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",355,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",356,0)
 ;    LEXSAB   Source Abbreviation
"RTN","LEXU",357,0)
 ;    
"RTN","LEXU",358,0)
 ; Output
"RTN","LEXU",359,0)
 ; 
"RTN","LEXU",360,0)
 ;    $$ALL    A ";" delimited string of codes
"RTN","LEXU",361,0)
 ;             of the specified coding system
"RTN","LEXU",362,0)
 ;             for the term
"RTN","LEXU",363,0)
 ;             
"RTN","LEXU",364,0)
 N LEXDAT,LEXIEN,LEXSRC,LEXI,LEXT,LEXS D VDT
"RTN","LEXU",365,0)
 S LEXIEN=+($G(LEX)) Q:+($G(LEXIEN))'>0 ""
"RTN","LEXU",366,0)
 S LEXSAB=$E($G(LEXSAB),1,3) Q:$L(LEXSAB)'=3 ""
"RTN","LEXU",367,0)
 D ALL^LEXSRC(LEX,LEXSAB,LEXVDT)
"RTN","LEXU",368,0)
 Q:+$G(LEXSRC(0))'>0 ""  S LEXI=0,LEXT=""
"RTN","LEXU",369,0)
 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXU",370,0)
 . S LEXS=LEXSRC(LEXI)
"RTN","LEXU",371,0)
 . S:LEXSAB="ICD" LEXDAT=$$ICDDX^ICDEX(LEXS,$G(LEXVDT),1,"E")
"RTN","LEXU",372,0)
 . S:LEXSAB="10D" LEXDAT=$$ICDDX^ICDEX(LEXS,$G(LEXVDT),30,"E")
"RTN","LEXU",373,0)
 . S:LEXSAB="10P" LEXDAT=$$ICDOP^ICDEX(LEXS,$G(LEXVDT),31,"E")
"RTN","LEXU",374,0)
 . S:LEXSAB="CPT" LEXDAT=$$CPT^ICPTCOD(LEXS,LEXVDT)
"RTN","LEXU",375,0)
 . S:LEXSAB="CPC" LEXDAT=$$CPT^ICPTCOD(LEXS,LEXVDT)
"RTN","LEXU",376,0)
 . Q:+($G(LEXDAT))'>0
"RTN","LEXU",377,0)
 . Q:"^CPT^CPT"[("^"_LEXSAB_"^")&($P($G(LEXDAT),"^",7)'>0)
"RTN","LEXU",378,0)
 . Q:"^ICD^ICP^10D^10P^"[("^"_LEXSAB_"^")&($P($G(LEXDAT),"^",10)'>0)
"RTN","LEXU",379,0)
 . Q:(LEXT_";")[(";"_LEXS_";")  S LEXT=LEXT_";"_LEXS
"RTN","LEXU",380,0)
 S LEX="" S:$E(LEXT,1)=";" LEXT=$E(LEXT,2,$L(LEXT)) S LEX=LEXT
"RTN","LEXU",381,0)
 Q LEX
"RTN","LEXU",382,0)
HIST(CODE,SYS,ARY) ; Activation History
"RTN","LEXU",383,0)
 Q $$HIST^LEXU4($G(CODE),$G(SYS),.ARY)
"RTN","LEXU",384,0)
PERIOD(CODE,SYS,ARY) ; Return Activation Periods
"RTN","LEXU",385,0)
 Q $$PERIOD^LEXU4($G(CODE),$G(SYS),.ARY)
"RTN","LEXU",386,0)
CSDATA(CODE,CSYS,CDT,ARY) ; Code Data
"RTN","LEXU",387,0)
 N X S X=$$CSDATA^LEXU2($G(CODE),$G(CSYS),$G(CDT),.ARY) Q X
"RTN","LEXU",388,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU",389,0)
 Q $$ADR^LEXU3($G(LEX))
"RTN","LEXU",390,0)
VDT ; Resolve LEXVDT
"RTN","LEXU",391,0)
 D VDT^LEXU3 Q
"RTN","LEXU",392,0)
IMPDATE(CSYS) ; Return the implementation date for a coding system
"RTN","LEXU",393,0)
 Q $$IMPDATE^LEXU3($G(CSYS))
"RTN","LEXU",394,0)
CSYS(SYS) ; Coding System Info
"RTN","LEXU",395,0)
 Q $$CSYS^LEXU3($G(SYS))
"RTN","LEXU",396,0)
FREQ(TXT) ; Frequency of text - ICR 5679
"RTN","LEXU",397,0)
 Q $$FREQ^LEXU3($G(TXT))
"RTN","LEXU",398,0)
MAX(SYS) ; Coding System search Threshold - ICR 5679
"RTN","LEXU",399,0)
 Q $$MAX^LEXU3($G(SYS))
"RTN","LEXU",400,0)
PAR(TXT,ARY) ; Parse Text into Words (for indexing)
"RTN","LEXU",401,0)
 Q $$PAR^LEXU3(TXT,.ARY)
"RTN","LEXU",402,0)
CAT(CODE) ; Get Category of Dx Code - ICR 5679
"RTN","LEXU",403,0)
 Q $$CAT^LEX10DU($G(CODE))
"RTN","LEXU",404,0)
ISCAT(CODE) ; Get Category of Dx Code - ICR 5679
"RTN","LEXU",405,0)
 Q $$ISCAT^LEX10DU($G(CODE))
"RTN","LEXU",406,0)
PFI(FRAG,CDT,ARY) ; ICD-10 Procedure Code Fragment Information - ICR 5679
"RTN","LEXU",407,0)
 Q $$PFI^LEXU4($G(FRAG),$G(CDT),.ARY)
"RTN","LEXU",408,0)
NXSAB(X,Y) ; Next Source Abbreviation
"RTN","LEXU",409,0)
 Q $$NXSAB^LEXU3($G(X),$G(Y))
"RTN","LEXU",410,0)
INC(X) ; Increment Concept Usage for a term (by subscription only)
"RTN","LEXU",411,0)
 D INC^LEXU3($G(X))
"RTN","LEXU",412,0)
 Q
"RTN","LEXU",413,0)
RECENT(X) ; Recently Updated (90 day window)
"RTN","LEXU",414,0)
 Q $$RECENT^LEXU3($G(X))
"RTN","LEXU",415,0)
RUPD(X) ; Recent Update Date
"RTN","LEXU",416,0)
 Q $$RUPD^LEXU3($G(X))
"RTN","LEXU",417,0)
LUPD(X,Y) ; Last Update
"RTN","LEXU",418,0)
 Q $$LUPD^LEXU3($G(X),$G(Y))
"RTN","LEXU2")
0^45^B131844732
"RTN","LEXU2",1,0)
LEXU2 ;ISL/KER - Miscellaneous Lexicon Utilities ;04/21/2014
"RTN","LEXU2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXU2",3,0)
 ;               
"RTN","LEXU2",4,0)
 ; Global Variables
"RTN","LEXU2",5,0)
 ;    ^ICPT(              ICR   5408
"RTN","LEXU2",6,0)
 ;    ^TMP("ICPTD")       ICR   1995
"RTN","LEXU2",7,0)
 ;               
"RTN","LEXU2",8,0)
 ; External References
"RTN","LEXU2",9,0)
 ;    $$CPTD^ICPTCOD      ICR   1995
"RTN","LEXU2",10,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU2",12,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU2",13,0)
 ;    $$ICDD^ICDEX        ICR   5747
"RTN","LEXU2",14,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU2",15,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXU2",16,0)
 ;    $$TITLE^XLFSTR      ICR  10104
"RTN","LEXU2",17,0)
 ;    CPTD^ICPTCOD        ICR   1995
"RTN","LEXU2",18,0)
 ;    MD^ICDEX            ICR   5747
"RTN","LEXU2",19,0)
 ;    MODA^ICPTMOD        ICR   1996
"RTN","LEXU2",20,0)
 ;               
"RTN","LEXU2",21,0)
CSDATA(CODE,CSYS,CDT,ARY) ; Get Information about a Code
"RTN","LEXU2",22,0)
 ;
"RTN","LEXU2",23,0)
 ; Input:
"RTN","LEXU2",24,0)
 ;
"RTN","LEXU2",25,0)
 ;   CODE   Classification Code (Required)
"RTN","LEXU2",26,0)
 ;   CSYS   Coding System (taken from file 757.03)
"RTN","LEXU2",27,0)
 ;             Acceptable values include
"RTN","LEXU2",28,0)
 ;             Pointer to file  757.03
"RTN","LEXU2",29,0)
 ;             SOURCE ABBREVIATION field .01
"RTN","LEXU2",30,0)
 ;             Mnemonic (3 character SOURCE ABBREVIATION 
"RTN","LEXU2",31,0)
 ;                from ASAB cross-reference)
"RTN","LEXU2",32,0)
 ;    CDT   Code Set Versioning Date (default = TODAY)
"RTN","LEXU2",33,0)
 ;   .ARY   Output array passed by reference
"RTN","LEXU2",34,0)
 ;
"RTN","LEXU2",35,0)
 ; Output: 
"RTN","LEXU2",36,0)
 ; 
"RTN","LEXU2",37,0)
 ;   $$CSDATA   1 if successful (fully or partial)
"RTN","LEXU2",38,0)
 ;              0 if unsuccessful
"RTN","LEXU2",39,0)
 ;               
"RTN","LEXU2",40,0)
 ;               or
"RTN","LEXU2",41,0)
 ;               
"RTN","LEXU2",42,0)
 ;              -1 ^ Error Message
"RTN","LEXU2",43,0)
 ;              
"RTN","LEXU2",44,0)
 ;       It is considered partially successful if:
"RTN","LEXU2",45,0)
 ;              
"RTN","LEXU2",46,0)
 ;          1)  It is in the Lexicon and not in an SDO file 
"RTN","LEXU2",47,0)
 ;          2)  It is in am SDP file and not in the Lexicon
"RTN","LEXU2",48,0)
 ;          
"RTN","LEXU2",49,0)
 ;   ARY()
"RTN","LEXU2",50,0)
 ; 
"RTN","LEXU2",51,0)
 ;
"RTN","LEXU2",52,0)
 ;    Lexicon Data
"RTN","LEXU2",53,0)
 ;    
"RTN","LEXU2",54,0)
 ;       ARY("LEX",1)         IEN ^ Preferred Term
"RTN","LEXU2",55,0)
 ;       ARY("LEX",2)         Status ^ Effective Date
"RTN","LEXU2",56,0)
 ;       ARY("LEX",3)         IEN ^ Major Concept Term
"RTN","LEXU2",57,0)
 ;       ARY("LEX",4)         IEN ^ Fully Specified Name
"RTN","LEXU2",58,0)
 ;       ARY("LEX",5)         Hierarchy (if it exists)
"RTN","LEXU2",59,0)
 ;       ARY("LEX",6,0)       Synonyms/Other Forms
"RTN","LEXU2",60,0)
 ;       ARY("LEX",6,1)         Synonym #1
"RTN","LEXU2",61,0)
 ;       ARY("LEX",6,n)         #n
"RTN","LEXU2",62,0)
 ;       ARY("LEX",7,0)       Semantic Map
"RTN","LEXU2",63,0)
 ;       ARY("LEX",7,1,1)       Class ^ Type (internal)
"RTN","LEXU2",64,0)
 ;       ARY("LEX",7,1,2)       Class ^ Type (external)
"RTN","LEXU2",65,0)
 ;       ARY("LEX",7,1,n)       #n
"RTN","LEXU2",66,0)
 ;       ARY("LEX",7,1,n)       #n
"RTN","LEXU2",67,0)
 ;       ARY("LEX",8)         Deactivated Concept Flag
"RTN","LEXU2",68,0)
 ;      
"RTN","LEXU2",69,0)
 ;    Coding System Data
"RTN","LEXU2",70,0)
 ;    
"RTN","LEXU2",71,0)
 ;       ARY("SYS",1)         IEN
"RTN","LEXU2",72,0)
 ;       ARY("SYS",2)         Short Name
"RTN","LEXU2",73,0)
 ;       ARY("SYS",3)         Age High
"RTN","LEXU2",74,0)
 ;       ARY("SYS",4)         Age Low
"RTN","LEXU2",75,0)
 ;       ARY("SYS",5)         Sex
"RTN","LEXU2",76,0)
 ;       ARY("SYS",6,0)       MDC/DRG Pairing
"RTN","LEXU2",77,0)
 ;       ARY("SYS",6,1,1)       MDC
"RTN","LEXU2",78,0)
 ;       ARY("SYS",6,1,2)       DRGs
"RTN","LEXU2",79,0)
 ;       ARY("SYS",6,n,1)       #n
"RTN","LEXU2",80,0)
 ;       ARY("SYS",6,n,2)       #n
"RTN","LEXU2",81,0)
 ;       ARY("SYS",7)         Complication/Comorbidity
"RTN","LEXU2",82,0)
 ;       ARY("SYS",8)         MDC13
"RTN","LEXU2",83,0)
 ;       ARY("SYS",9)         MDC24
"RTN","LEXU2",84,0)
 ;       ARY("SYS",10)        MDC24
"RTN","LEXU2",85,0)
 ;       ARY("SYS",11)        Unacceptable as Principal Dx
"RTN","LEXU2",86,0)
 ;       ARY("SYS",12)        Major O.R. Procedure
"RTN","LEXU2",87,0)
 ;       ARY("SYS",13)        Procedure Category
"RTN","LEXU2",88,0)
 ;       ARY("SYS",14,0)      Description
"RTN","LEXU2",89,0)
 ;       ARY("SYS",14,1)        Text 1
"RTN","LEXU2",90,0)
 ;       ARY("SYS",14,n)        #n
"RTN","LEXU2",91,0)
 ;      
"RTN","LEXU2",92,0)
 ;    Each data element will be in the following format:
"RTN","LEXU2",93,0)
 ;      
"RTN","LEXU2",94,0)
 ;       ARY(ID,SUB) = DATA
"RTN","LEXU2",95,0)
 ;       ARY(ID,SUB,"N") = NAME
"RTN","LEXU2",96,0)
 ; 
"RTN","LEXU2",97,0)
 ;         Where
"RTN","LEXU2",98,0)
 ;
"RTN","LEXU2",99,0)
 ;           ID      Identifier, may be:
"RTN","LEXU2",100,0)
 ;           
"RTN","LEXU2",101,0)
 ;                       "LEX" for Lexicon data
"RTN","LEXU2",102,0)
 ;                       "SYS" for Coding System data
"RTN","LEXU2",103,0)
 ;                     
"RTN","LEXU2",104,0)
 ;           SUB     Numeric Subscript
"RTN","LEXU2",105,0)
 ;           
"RTN","LEXU2",106,0)
 ;           DATA    This may be:
"RTN","LEXU2",107,0)
 ;           
"RTN","LEXU2",108,0)
 ;                       A value if it applies and is found
"RTN","LEXU2",109,0)
 ;                       Null if it applies but not found
"RTN","LEXU2",110,0)
 ;                       N/A if it does not apply
"RTN","LEXU2",111,0)
 ;                     
"RTN","LEXU2",112,0)
 ;           NAME    This is the common name given to the 
"RTN","LEXU2",113,0)
 ;                   data element
"RTN","LEXU2",114,0)
 ;       
"RTN","LEXU2",115,0)
 N LEXSO,LEXSRC,LEXSAB,LEXVDT,LEXSCK,LEXSTA,LEXSIEN,LEXEIEN,LEXMIEN,LEXEFF
"RTN","LEXU2",116,0)
 S LEXSO=$G(CODE) Q:'$L(LEXSO) "-1^Code missing"  S LEXSAB=$G(CSYS)
"RTN","LEXU2",117,0)
 S LEXSRC=+($$CSYS^LEXU(LEXSAB)) S:LEXSRC'>0 LEXSRC=$$SYSC^LEXU4(LEXSO)
"RTN","LEXU2",118,0)
 Q:+LEXSRC'>0 "-1^Invalid source"  S LEXSAB=$P($$CSYS^LEXU(+LEXSRC),"^",2)
"RTN","LEXU2",119,0)
 Q:$L(LEXSAB)'=3 "-1^Invalid source"  S LEXVDT=$G(CDT) D VDT^LEXU3 D LEX
"RTN","LEXU2",120,0)
 I LEXSRC=1!(LEXSRC=30) D ICDDX
"RTN","LEXU2",121,0)
 I LEXSRC=2!(LEXSRC=31) D ICDOP
"RTN","LEXU2",122,0)
 I LEXSRC=3!(LEXSRC=4) D CPTCPC
"RTN","LEXU2",123,0)
 D CS,LX
"RTN","LEXU2",124,0)
 Q:$D(ARY("LEX"))!($D(ARY("SYS"))) 1
"RTN","LEXU2",125,0)
 Q 0
"RTN","LEXU2",126,0)
LEX ; Lexicon
"RTN","LEXU2",127,0)
 Q:'$D(^LEX(757.02,"ACT",(LEXSO_" ")))  S LEXSCK=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSAB)
"RTN","LEXU2",128,0)
 S LEXSTA=$P(LEXSCK,"^",1),LEXSIEN=$P(LEXSCK,"^",2),LEXEFF=$P(LEXSCK,"^",3)
"RTN","LEXU2",129,0)
 S LEXEIEN=+($G(^LEX(757.02,+LEXSIEN,0))),LEXMIEN=+($P($G(^LEX(757.02,+LEXSIEN,0)),"^",4))
"RTN","LEXU2",130,0)
 Q:LEXSIEN<0  S:LEXSTA'>0&(LEXSIEN>0)&(LEXEFF'?7N) ARY("LEX",2)=0
"RTN","LEXU2",131,0)
 S:LEXSTA?1N&(LEXSIEN>0)&(LEXEFF?7N) ARY("LEX",2)=LEXSTA_"^"_LEXEFF
"RTN","LEXU2",132,0)
 S ARY("LEX",1)=LEXEIEN_"^"_$G(^LEX(757.01,+LEXEIEN,0))
"RTN","LEXU2",133,0)
 N LEXFLG,LEXSM,LEXTIEN,LEXMC
"RTN","LEXU2",134,0)
 S LEXSM=0 F  S LEXSM=$O(^LEX(757.1,"B",LEXMIEN,LEXSM)) Q:+LEXSM'>0  D
"RTN","LEXU2",135,0)
 . N LEXN,LEXI,LEXC,LEXCE,LEXT,LEXTE S LEXN=$G(^LEX(757.1,+LEXSM,0))
"RTN","LEXU2",136,0)
 . S LEXC=$P(LEXN,"^",2),LEXT=$P(LEXN,"^",3) Q:LEXC'>0  Q:LEXT'>0
"RTN","LEXU2",137,0)
 . S LEXCE=$P($G(^LEX(757.11,+LEXC,0)),"^",2) Q:'$L(LEXCE)
"RTN","LEXU2",138,0)
 . S LEXTE=$P($G(^LEX(757.12,+LEXT,0)),"^",2) Q:'$L(LEXTE)
"RTN","LEXU2",139,0)
 . S LEXI=$O(ARY("LEX",7," "),-1)+1
"RTN","LEXU2",140,0)
 . S ARY("LEX",7,LEXI,1)=LEXC_"^"_LEXT
"RTN","LEXU2",141,0)
 . S ARY("LEX",7,LEXI,2)=LEXCE_"^"_LEXTE
"RTN","LEXU2",142,0)
 S ARY("LEX",7,0)=+($O(ARY("LEX",7," "),-1))
"RTN","LEXU2",143,0)
 S LEXTIEN=0,LEXFLG="",LEXMC="" F  S LEXTIEN=$O(^LEX(757.01,"AMC",LEXMIEN,LEXTIEN)) Q:+LEXTIEN'>0  D
"RTN","LEXU2",144,0)
 . N LEX0,LEX1,LEXT,LEXF
"RTN","LEXU2",145,0)
 . S LEX0=$G(^LEX(757.01,LEXTIEN,0)),LEX1=$G(^LEX(757.01,LEXTIEN,1)),LEXT=$P(LEX1,"^",2),LEXF=$P(LEX1,"^",5)
"RTN","LEXU2",146,0)
 . S:LEXF>0 LEXFLG=1 I LEXT=8 D
"RTN","LEXU2",147,0)
 . . N LEXE,LEXH S LEXE=$G(^LEX(757.01,+LEXTIEN,0)) S ARY("LEX",4)=LEXTIEN_"^"_LEXE
"RTN","LEXU2",148,0)
 . . S LEXH=$P($P(LEXE,"(",$L(LEXE,"(")),")") S:$L(LEXH) LEXH=$$TITLE^XLFSTR(LEXH)
"RTN","LEXU2",149,0)
 . . S:$L(LEXH) ARY("LEX",5)=LEXH
"RTN","LEXU2",150,0)
 . I LEXT=1 S LEXMC=LEXTIEN
"RTN","LEXU2",151,0)
 . I LEXT'=1,LEXT'=8,LEXTIEN'=LEXEIEN D
"RTN","LEXU2",152,0)
 . . N LEXI S LEXI=$O(ARY("LEX",6," "),-1)+1
"RTN","LEXU2",153,0)
 . . S ARY("LEX",6,LEXI)=LEXTIEN_"^"_$G(^LEX(757.01,+LEXTIEN,0)),ARY("LEX",6,0)=LEXI
"RTN","LEXU2",154,0)
 S:+LEXMC>0 ARY("LEX",3)=LEXMC_"^"_$G(^LEX(757.01,+LEXMC,0))
"RTN","LEXU2",155,0)
 S:+LEXFLG>0 ARY("LEX",8)="Deactivated Concept"
"RTN","LEXU2",156,0)
 Q
"RTN","LEXU2",157,0)
ICDDX ; ICD DX CS array
"RTN","LEXU2",158,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXOUT,LEXSDO
"RTN","LEXU2",159,0)
 S LEXDAT=$$ICDDX^ICDEX(LEXSO,LEXVDT,LEXSRC,"E") Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",160,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",4),ARY("SYS",3)=$P(LEXDAT,"^",16)
"RTN","LEXU2",161,0)
 S ARY("SYS",4)=$P(LEXDAT,"^",15),ARY("SYS",5)=$P(LEXDAT,"^",11)
"RTN","LEXU2",162,0)
 D MD^ICDEX(80,LEXSDO,LEXVDT,.LEXMD)
"RTN","LEXU2",163,0)
 S LEXFY="" F  S LEXFY=$O(LEXMD(LEXFY)) Q:'$L(LEXFY)  D
"RTN","LEXU2",164,0)
 . N LEXNDC S LEXMDC=0 F  S LEXMDC=$O(LEXMD(LEXFY,LEXMDC)) Q:+LEXMDC'>0  D
"RTN","LEXU2",165,0)
 . . N LEXDRG,LEXLEXI S LEXDRG=$G(LEXMD(LEXFY,LEXMDC)),LEXDRG=$P(LEXDRG,";",1),LEXDRG=$TR(LEXDRG,"^",";")
"RTN","LEXU2",166,0)
 . . S LEXI=$O(ARY("SYS",6," "),-1)+1,ARY("SYS",6,LEXI,1)=LEXMDC
"RTN","LEXU2",167,0)
 . . S ARY("SYS",6,LEXI,2)=$$TM(LEXDRG,";")
"RTN","LEXU2",168,0)
 . . S ARY("SYS",6,0)=LEXI
"RTN","LEXU2",169,0)
 S ARY("SYS",7)=$P(LEXDAT,"^",19),ARY("SYS",8)=$P(LEXDAT,"^",7),ARY("SYS",9)=$P(LEXDAT,"^",13)
"RTN","LEXU2",170,0)
 S ARY("SYS",10)=$P(LEXDAT,"^",14),ARY("SYS",11)=$P(LEXDAT,"^",5)
"RTN","LEXU2",171,0)
 K LEXDD S LEXOUT=$$ICDD^ICDEX(LEXSO,.LEXDD,LEXVDT,LEXSRC) I +LEXOUT>0 D
"RTN","LEXU2",172,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(LEXDD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",173,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(LEXDD(LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",174,0)
 Q
"RTN","LEXU2",175,0)
ICDOP ; ICD OP CS array
"RTN","LEXU2",176,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXMOR,LEXOUT,LEXSDO
"RTN","LEXU2",177,0)
 S LEXDAT=$$ICDOP^ICDEX(LEXSO,LEXVDT,LEXSRC,"E") Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",178,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",5),ARY("SYS",5)=$P(LEXDAT,"^",11)
"RTN","LEXU2",179,0)
 D MD^ICDEX(80.1,LEXSDO,LEXVDT,.LEXMD)
"RTN","LEXU2",180,0)
 S LEXFY="" F  S LEXFY=$O(LEXMD(LEXFY)) Q:'$L(LEXFY)  D
"RTN","LEXU2",181,0)
 . N LEXNDC S LEXMDC=0 F  S LEXMDC=$O(LEXMD(LEXFY,LEXMDC)) Q:+LEXMDC'>0  D
"RTN","LEXU2",182,0)
 . . N LEXDRG,LEXLEXI S LEXDRG=$G(LEXMD(LEXFY,LEXMDC)),LEXDRG=$P(LEXDRG,";",1),LEXDRG=$TR(LEXDRG,"^",";")
"RTN","LEXU2",183,0)
 . . S LEXI=$O(ARY("SYS",6," "),-1)+1,ARY("SYS",6,LEXI,1)=LEXMDC
"RTN","LEXU2",184,0)
 . . S ARY("SYS",6,LEXI,2)=$$TM(LEXDRG,";")
"RTN","LEXU2",185,0)
 . . S ARY("SYS",6,0)=LEXI
"RTN","LEXU2",186,0)
 S ARY("SYS",10)=$P(LEXDAT,"^",4)
"RTN","LEXU2",187,0)
 S LEXMOR=$$MOR^ICDEX(LEXSDO)
"RTN","LEXU2",188,0)
 S ARY("SYS",12)=LEXMOR
"RTN","LEXU2",189,0)
 K LEXDD S LEXOUT=$$ICDD^ICDEX(LEXSO,.LEXDD,LEXVDT,LEXSRC)
"RTN","LEXU2",190,0)
 I +LEXOUT>0 D
"RTN","LEXU2",191,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(LEXDD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",192,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(LEXDD(LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",193,0)
 Q
"RTN","LEXU2",194,0)
CPTCPC ; CPT-4/HCPCS
"RTN","LEXU2",195,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXMOR,LEXOUT,LEXSDO
"RTN","LEXU2",196,0)
 S LEXDAT=$$CPT^ICPTCOD(LEXSO,LEXVDT) Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",197,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",3)
"RTN","LEXU2",198,0)
 S ARY("SYS",13)=$P(LEXDAT,"^",4) K ^TMP("ICPTD",$J)
"RTN","LEXU2",199,0)
 S LEXOUT=$$CPTD^ICPTCOD(LEXSO,,,$G(LEXVDT))
"RTN","LEXU2",200,0)
 I +LEXOUT>2,'$L($$TM($G(^TMP("ICPTD",$J,(LEXOUT-1))))) D
"RTN","LEXU2",201,0)
 . K ^TMP("ICPTD",$J,(LEXOUT-1)),^TMP("ICPTD",$J,LEXOUT)
"RTN","LEXU2",202,0)
 I +LEXOUT>0 D
"RTN","LEXU2",203,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(^TMP("ICPTD",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",204,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(^TMP("ICPTD",$J,LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",205,0)
 K ^TMP("ICPTD",$J)
"RTN","LEXU2",206,0)
 Q
"RTN","LEXU2",207,0)
CS ; CS Segment if CS is NULL
"RTN","LEXU2",208,0)
 N LEXI,LEXC S LEXSRC=+($G(LEXSRC))
"RTN","LEXU2",209,0)
 S ARY("SYS",1)=$G(ARY("SYS",1)),ARY("SYS",1,"N")="IEN"
"RTN","LEXU2",210,0)
 S ARY("SYS",2)=$G(ARY("SYS",2)),ARY("SYS",2,"N")="Short Name"
"RTN","LEXU2",211,0)
 S ARY("SYS",3)=$G(ARY("SYS",3)),ARY("SYS",3,"N")="Age High"
"RTN","LEXU2",212,0)
 S ARY("SYS",4)=$G(ARY("SYS",4)),ARY("SYS",4,"N")="Age Low"
"RTN","LEXU2",213,0)
 S ARY("SYS",5)=$G(ARY("SYS",5)),ARY("SYS",5,"N")="Sex"
"RTN","LEXU2",214,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("SYS",6,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",215,0)
 . S LEXC=LEXC+1 S ARY("SYS",6,LEXC,1)=$G(ARY("SYS",6,LEXC,1)),ARY("SYS",6,LEXC,1,"N")="MDC"
"RTN","LEXU2",216,0)
 . S ARY("SYS",6,LEXC,2)=$G(ARY("SYS",6,LEXC,2)),ARY("SYS",6,LEXC,2,"N")="DRGs"
"RTN","LEXU2",217,0)
 S ARY("SYS",6,0)=LEXC,ARY("SYS",6,0,"N")="MDC/DRG"
"RTN","LEXU2",218,0)
 S ARY("SYS",7)=$G(ARY("SYS",7)),ARY("SYS",7,"N")="Complication/Comorbidity"
"RTN","LEXU2",219,0)
 S ARY("SYS",8)=$G(ARY("SYS",8)),ARY("SYS",8,"N")="MDC13"
"RTN","LEXU2",220,0)
 S ARY("SYS",9)=$G(ARY("SYS",9)),ARY("SYS",9,"N")="MDC24"
"RTN","LEXU2",221,0)
 S ARY("SYS",10)=$G(ARY("SYS",10)),ARY("SYS",10,"N")="MDC24"
"RTN","LEXU2",222,0)
 S ARY("SYS",11)=$G(ARY("SYS",11)),ARY("SYS",11,"N")="Unacceptable as Principal Dx"
"RTN","LEXU2",223,0)
 S ARY("SYS",12)=$G(ARY("SYS",12)),ARY("SYS",12,"N")="Major O.R Procedure"
"RTN","LEXU2",224,0)
 S ARY("SYS",13)=$G(ARY("SYS",13)),ARY("SYS",13,"N")="CPT Category"
"RTN","LEXU2",225,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("SYS",14,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",226,0)
 . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(ARY("SYS",14,LEXC))
"RTN","LEXU2",227,0)
 S ARY("SYS",14,0)=LEXC,ARY("SYS",14,0,"N")="Description"
"RTN","LEXU2",228,0)
 I LEXSRC=1!(LEXSRC=30) D  Q
"RTN","LEXU2",229,0)
 . K ARY("SYS",12) S ARY("SYS",12)="N/A" K ARY("SYS",13) S ARY("SYS",13)="N/A"
"RTN","LEXU2",230,0)
 I LEXSRC=2!(LEXSRC=31) D  Q
"RTN","LEXU2",231,0)
 . K ARY("SYS",3) S ARY("SYS",2)="N/A" K ARY("SYS",4) S ARY("SYS",4)="N/A" K ARY("SYS",7) S ARY("SYS",7)="N/A"
"RTN","LEXU2",232,0)
 . K ARY("SYS",8) S ARY("SYS",8)="N/A" K ARY("SYS",10) S ARY("SYS",10)="N/A" K ARY("SYS",11) S ARY("SYS",11)="N/A"
"RTN","LEXU2",233,0)
 . K ARY("SYS",13) S ARY("SYS",13)="N/A"
"RTN","LEXU2",234,0)
 I LEXSRC=3!(LEXSRC=4) D  Q
"RTN","LEXU2",235,0)
 . K ARY("SYS",3) S ARY("SYS",2)="N/A" K ARY("SYS",4) S ARY("SYS",4)="N/A" K ARY("SYS",5) S ARY("SYS",5)="N/A"
"RTN","LEXU2",236,0)
 . K ARY("SYS",6) S ARY("SYS",6)="N/A" K ARY("SYS",7) S ARY("SYS",7)="N/A" K ARY("SYS",8) S ARY("SYS",8)="N/A"
"RTN","LEXU2",237,0)
 . K ARY("SYS",9) S ARY("SYS",9)="N/A" K ARY("SYS",10) S ARY("SYS",10)="N/A"  K ARY("SYS",11) S ARY("SYS",11)="N/A"
"RTN","LEXU2",238,0)
 . K ARY("SYS",12) S ARY("SYS",12)="N/A"
"RTN","LEXU2",239,0)
 K ARY("SYS") S ARY("SYS",1)="N/A",ARY("SYS",2)="N/A",ARY("SYS",3)="N/A",ARY("SYS",4)="N/A",ARY("SYS",5)="N/A"
"RTN","LEXU2",240,0)
 S ARY("SYS",6)="N/A",ARY("SYS",7)="N/A",ARY("SYS",8)="N/A",ARY("SYS",9)="N/A",ARY("SYS",10)="N/A"
"RTN","LEXU2",241,0)
 S ARY("SYS",11)="N/A",ARY("SYS",12)="N/A",ARY("SYS",13)="N/A",ARY("SYS",14)="N/A"
"RTN","LEXU2",242,0)
 Q
"RTN","LEXU2",243,0)
LX ; Lexicon Segment 
"RTN","LEXU2",244,0)
 N LEXC,LEXI S ARY("LEX",1)=$G(ARY("LEX",1)),ARY("LEX",1,"N")="IEN ^ Preferred Term"
"RTN","LEXU2",245,0)
 S ARY("LEX",2)=$G(ARY("LEX",2)),ARY("LEX",2,"N")="Status ^ Effective Date"
"RTN","LEXU2",246,0)
 S ARY("LEX",3)=$G(ARY("LEX",3)),ARY("LEX",3,"N")="IEN ^ Major Concept Term"
"RTN","LEXU2",247,0)
 S ARY("LEX",4)=$G(ARY("LEX",4)),ARY("LEX",4,"N")="IEN ^ Fully Specified Name"
"RTN","LEXU2",248,0)
 S ARY("LEX",5)=$G(ARY("LEX",5)),ARY("LEX",5,"N")="Hierarchy (if exists)"
"RTN","LEXU2",249,0)
 S ARY("LEX",6,0)=$G(ARY("LEX",6,0)),ARY("LEX",6,0,"N")="Synonyms and Other Forms"
"RTN","LEXU2",250,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("LEX",6,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",251,0)
 . S LEXC=LEXC+1 S ARY("LEX",6,LEXC)=$G(ARY("LEX",6,LEXC))
"RTN","LEXU2",252,0)
 S ARY("LEX",6,0)=LEXC
"RTN","LEXU2",253,0)
 S ARY("LEX",7,0)=$G(ARY("LEX",7,0)),ARY("LEX",7,0,"N")="Semantic Map"
"RTN","LEXU2",254,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("LEX",7,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",255,0)
 . S LEXC=LEXC+1 S ARY("LEX",7,LEXC,1)=$G(ARY("LEX",7,LEXC,1))
"RTN","LEXU2",256,0)
 . S ARY("LEX",7,LEXC,1,"N")="Semantic Class ^ Semantic Type (internal)"
"RTN","LEXU2",257,0)
 . S ARY("LEX",7,LEXC,2)=$G(ARY("LEX",7,LEXC,2))
"RTN","LEXU2",258,0)
 . S ARY("LEX",7,LEXC,2,"N")="Semantic Class ^ Semantic Type (external)"
"RTN","LEXU2",259,0)
 S ARY("LEX",7,0)=LEXC
"RTN","LEXU2",260,0)
 S ARY("LEX",8)=$G(ARY("LEX",8)),ARY("LEX",8,"N")="Deactivated Concept Flag"
"RTN","LEXU2",261,0)
 Q
"RTN","LEXU2",262,0)
 ;       
"RTN","LEXU2",263,0)
MODS ; CPT Modifiers
"RTN","LEXU2",264,0)
 N IEN,STR,MAX,OUT,LEN,CODE,TD S TD=$$DT^XLFDT,MAX=0,OUT=""
"RTN","LEXU2",265,0)
 S IEN=0 F  S IEN=$O(^ICPT(IEN)) Q:+IEN'>0  D
"RTN","LEXU2",266,0)
 . S CODE=$P($G(^ICPT(IEN,0)),"^",1)
"RTN","LEXU2",267,0)
 . K ARY D MS(CODE,TD,.ARY)
"RTN","LEXU2",268,0)
 Q
"RTN","LEXU2",269,0)
MS(X,CDT,LEXS) ; Modifier Strings
"RTN","LEXU2",270,0)
 N LEXDT,LEXSO,LEXCT,LEX,LEXM,LEXMOD K LEXS S LEXSO=$G(X),LEXDT=$G(CDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT D MODA^ICPTMOD(LEXSO,LEXDT,.LEX)
"RTN","LEXU2",271,0)
 S LEXMOD="",LEXM="",LEXCT=0 F  S LEXM=$O(LEX("A",LEXM)) Q:'$L(LEXM)  D
"RTN","LEXU2",272,0)
 . Q:$L(LEXM)'=2  S LEXCT=LEXCT+1,LEXMOD=LEXMOD_"^"_LEXM
"RTN","LEXU2",273,0)
 . I LEXCT>19 D
"RTN","LEXU2",274,0)
 . . N LEXI S LEXI=$O(LEXS(" "),-1)+1
"RTN","LEXU2",275,0)
 . . S LEXS(LEXI)=$$TM(LEXMOD,"^") S LEXMOD="",LEXCT=0
"RTN","LEXU2",276,0)
 I $L($G(LEXMOD)) D
"RTN","LEXU2",277,0)
 . N LEXI S LEXI=$O(LEXS(" "),-1)+1 S LEXS(LEXI)=$$TM(LEXMOD,"^")
"RTN","LEXU2",278,0)
 Q
"RTN","LEXU2",279,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXU2",280,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXU2",281,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXU2",282,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXU2",283,0)
 Q X
"RTN","LEXU3")
0^63^B65261771
"RTN","LEXU3",1,0)
LEXU3 ;ISL/KER - Miscellaneous Lexicon Utilities ;04/21/2014
"RTN","LEXU3",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXU3",3,0)
 ;               
"RTN","LEXU3",4,0)
 ; Global Variables
"RTN","LEXU3",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXU3",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXU3",7,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXU3",8,0)
 ;               
"RTN","LEXU3",9,0)
 ; External References
"RTN","LEXU3",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU3",11,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXU3",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXU3",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXU3",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXU3",15,0)
 ;    ^DIC                ICR  10006
"RTN","LEXU3",16,0)
 ;               
"RTN","LEXU3",17,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU3",18,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M"
"RTN","LEXU3",19,0)
 S (LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXU3",20,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT"
"RTN","LEXU3",21,0)
 D ^DIC Q:+Y>0 LEX
"RTN","LEXU3",22,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEXU3",23,0)
VDT ; Resolve LEXVDT
"RTN","LEXU3",24,0)
 ;   Check Environment First
"RTN","LEXU3",25,0)
 N LEXSD I $P($G(LEXVDT),".",1)?7N D  Q
"RTN","LEXU3",26,0)
 . S LEXVDT=$P($G(LEXVDT),".",1)
"RTN","LEXU3",27,0)
 . S LEXVDT=$$FMADD^XLFDT(LEXVDT,0)
"RTN","LEXU3",28,0)
 . S:LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXU3",29,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",30,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",31,0)
 ;   Check Lookup Environment Second
"RTN","LEXU3",32,0)
 S LEXSD=$P($G(^TMP("LEXSCH",$J,"VDT",0)),".",1)
"RTN","LEXU3",33,0)
 I $P($G(LEXVDT),".",1)'?7N,LEXSD?7N D
"RTN","LEXU3",34,0)
 . S LEXVDT=$P($G(LEXSD),".",1)
"RTN","LEXU3",35,0)
 . S LEXVDT=$$FMADD^XLFDT(LEXVDT,0)
"RTN","LEXU3",36,0)
 . S:LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXU3",37,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",38,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",39,0)
 ;   Check System Clock Last
"RTN","LEXU3",40,0)
 I $P($G(LEXVDT),".",1)'?7N D
"RTN","LEXU3",41,0)
 . S LEXVDT=$$DT^XLFDT
"RTN","LEXU3",42,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",43,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",44,0)
 Q
"RTN","LEXU3",45,0)
IMPDATE(SYS) ; Get the Implementation Date for a Coding System
"RTN","LEXU3",46,0)
 ; 
"RTN","LEXU3",47,0)
 ; Input
"RTN","LEXU3",48,0)
 ; 
"RTN","LEXU3",49,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",50,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",51,0)
 ;   
"RTN","LEXU3",52,0)
 ; Output
"RTN","LEXU3",53,0)
 ; 
"RTN","LEXU3",54,0)
 ;   $$IMPDATE  Implementation Date in FileMan format
"RTN","LEXU3",55,0)
 ;   
"RTN","LEXU3",56,0)
 N FRMT,CSIEN,IMPDATE S FRMT="I" S CSIEN=$$CSYSIEN^LEXTRAN($G(SYS)) I +CSIEN<0 Q CSIEN
"RTN","LEXU3",57,0)
 S CSIEN=$P(CSIEN,U,2) S IMPDATE=$$GET1^DIQ(757.03,CSIEN,11,FRMT)
"RTN","LEXU3",58,0)
 Q IMPDATE
"RTN","LEXU3",59,0)
CSYS(SYS) ; Get Coding System Info
"RTN","LEXU3",60,0)
 ; 
"RTN","LEXU3",61,0)
 ; Input
"RTN","LEXU3",62,0)
 ; 
"RTN","LEXU3",63,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",64,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",65,0)
 ;    
"RTN","LEXU3",66,0)
 ; Output
"RTN","LEXU3",67,0)
 ; 
"RTN","LEXU3",68,0)
 ;     A 13 piece caret (^) delimited string 
"RTN","LEXU3",69,0)
 ;     
"RTN","LEXU3",70,0)
 ;      1    IEN 
"RTN","LEXU3",71,0)
 ;      2    SAB (3 character source abbreviation) 
"RTN","LEXU3",72,0)
 ;      3    Source Abbreviation (3-7 char)  (#.01) 
"RTN","LEXU3",73,0)
 ;      4    Nomenclature (2-11 char) (#1) 
"RTN","LEXU3",74,0)
 ;      5    Source Title (2-52 char) (#2) 
"RTN","LEXU3",75,0)
 ;      6    Source (2-50 char) (#3) 
"RTN","LEXU3",76,0)
 ;      7    Entries (numeric) (#4) 
"RTN","LEXU3",77,0)
 ;      8    Unique Entries (numeric) (#5) 
"RTN","LEXU3",78,0)
 ;      9    Inactive Version (1-20 char) (#6) 
"RTN","LEXU3",79,0)
 ;     10    HL7 Coding System (2-40 char) (#7) 
"RTN","LEXU3",80,0)
 ;     11    SDO Version Date (date) (757.08 #.01) 
"RTN","LEXU3",81,0)
 ;     12    SDO Version Id (1-40 char) (757.08 #1) 
"RTN","LEXU3",82,0)
 ;     13    Implementation Date (date) (#11)
"RTN","LEXU3",83,0)
 ;     14    Lookup Threshold (#12)
"RTN","LEXU3",84,0)
 ;     
"RTN","LEXU3",85,0)
 N LEXSYS,LEXOUT,LEXND,LEXIEN,LEXEFF,LEXVER,LEXIMP,LEXTHR
"RTN","LEXU3",86,0)
 S LEXSYS=$G(SYS) Q:'$L(LEXSYS) "-1^Coding System missing"
"RTN","LEXU3",87,0)
 S LEXIEN=$$SIEN(LEXSYS)
"RTN","LEXU3",88,0)
 Q:+LEXIEN'>0!('$D(^LEX(757.03,+LEXIEN,0))) "-1^Coding System not found"
"RTN","LEXU3",89,0)
 S LEXSYS=$$SMNEM(+LEXIEN)
"RTN","LEXU3",90,0)
 S LEXND=$G(^LEX(757.03,+LEXIEN,0))
"RTN","LEXU3",91,0)
 Q:$L(LEXND)'>3 "-1^Invalid Coding System HUH"
"RTN","LEXU3",92,0)
 S $P(LEXND,"^",8)=$P(LEXND,"^",8)
"RTN","LEXU3",93,0)
 S LEXEFF=$O(^LEX(757.03,LEXIEN,1,"B"," "),-1)
"RTN","LEXU3",94,0)
 S LEXVER=$O(^LEX(757.03,LEXIEN,1,"B",+LEXEFF),-1)
"RTN","LEXU3",95,0)
 S LEXVER=$P($G(^LEX(757.03,LEXIEN,1,+LEXVER,0)),"^",2)
"RTN","LEXU3",96,0)
 S LEXIMP=$P($G(^LEX(757.03,LEXIEN,2)),"^",1)
"RTN","LEXU3",97,0)
 S LEXTHR=$P($G(^LEX(757.03,LEXIEN,2)),"^",2)
"RTN","LEXU3",98,0)
 S LEXOUT=LEXIEN_"^"_$E(LEXND,1,3)_"^"_LEXND_"^"_LEXEFF_"^"_LEXVER_"^"_LEXIMP_"^"_LEXTHR
"RTN","LEXU3",99,0)
 Q LEXOUT
"RTN","LEXU3",100,0)
SIEN(MNEM) ; Return code system IEN for mnemonic
"RTN","LEXU3",101,0)
 Q:'$L($G(MNEM)) "-1"
"RTN","LEXU3",102,0)
 Q:$D(^LEX(757.03,"ASAB",MNEM)) $O(^LEX(757.03,"ASAB",MNEM,""))
"RTN","LEXU3",103,0)
 Q:$D(^LEX(757.03,"B",MNEM)) $O(^LEX(757.03,"B",MNEM,""))
"RTN","LEXU3",104,0)
 Q:$D(^LEX(757.03,"B",$E(MNEM,1,3))) $O(^LEX(757.03,"B",$E(MNEM,1,3),""))
"RTN","LEXU3",105,0)
 Q:$D(^LEX(757.03,"C",MNEM)) $O(^LEX(757.03,"C",MNEM,""))
"RTN","LEXU3",106,0)
 Q:MNEM?1N.N&($D(^LEX(757.03,+MNEM,0))) +MNEM
"RTN","LEXU3",107,0)
 Q "-1"
"RTN","LEXU3",108,0)
SMNEM(SIEN) ; Return code system mnemonic for IEN
"RTN","LEXU3",109,0)
 I '$D(^LEX(757.03,+($G(SIEN)),0)) Q ""
"RTN","LEXU3",110,0)
 Q $P(^LEX(757.03,SIEN,0),"^")
"RTN","LEXU3",111,0)
INC(X) ; Increment Concept Usage for a term
"RTN","LEXU3",112,0)
 N LEXIEN,LEXMC S LEXIEN=+($G(X)) Q:'$D(^LEX(757.01,+LEXIEN,0))
"RTN","LEXU3",113,0)
 S LEXMC=+($G(^LEX(757.01,+LEXIEN,1))) Q:+LEXMC'>0
"RTN","LEXU3",114,0)
 Q:'$D(^LEX(757,+LEXMC,0))  Q:+($G(^LEX(757,+LEXMC,0)))'=LEXIEN
"RTN","LEXU3",115,0)
 Q:'$D(^LEX(757.001,+LEXMC,0))
"RTN","LEXU3",116,0)
 D INC^LEXAR4(LEXMC)
"RTN","LEXU3",117,0)
 Q
"RTN","LEXU3",118,0)
FREQ(TEXT) ; Get the Frequency of use for a Text String
"RTN","LEXU3",119,0)
 ; 
"RTN","LEXU3",120,0)
 ; Input   
"RTN","LEXU3",121,0)
 ; 
"RTN","LEXU3",122,0)
 ;   TEXT     Text String
"RTN","LEXU3",123,0)
 ;   
"RTN","LEXU3",124,0)
 ; Output
"RTN","LEXU3",125,0)
 ; 
"RTN","LEXU3",126,0)
 ;   $$FREQ   Frequency of Text
"RTN","LEXU3",127,0)
 ;             
"RTN","LEXU3",128,0)
 S TEXT=$G(TEXT) Q:'$L(TEXT) 0  N X S X=TEXT K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEXU3",129,0)
 N LEXI,LEXT,LEXF,LEXA S LEXI=0
"RTN","LEXU3",130,0)
 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",131,0)
 . S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXU3",132,0)
 . . S LEXF=+($O(^LEX(757.01,"ASL",LEXT,0))) Q:LEXF'>0  S LEXA(LEXF)=LEXT
"RTN","LEXU3",133,0)
 S TEXT=+($O(LEXA(0))) K ^TMP("LEXTKN",$J)
"RTN","LEXU3",134,0)
 Q TEXT
"RTN","LEXU3",135,0)
PAR(TEXT,ARY) ; Parse Text into Words
"RTN","LEXU3",136,0)
 ;
"RTN","LEXU3",137,0)
 ; Input   
"RTN","LEXU3",138,0)
 ; 
"RTN","LEXU3",139,0)
 ;   TEXT    Text String to be parsed
"RTN","LEXU3",140,0)
 ;   ARY     Local array passed by reference
"RTN","LEXU3",141,0)
 ; 
"RTN","LEXU3",142,0)
 ; Output  
"RTN","LEXU3",143,0)
 ; 
"RTN","LEXU3",144,0)
 ;   $$PAR   Number of Words
"RTN","LEXU3",145,0)
 ;   ARY     Output array
"RTN","LEXU3",146,0)
 ;         
"RTN","LEXU3",147,0)
 ;              Words Found
"RTN","LEXU3",148,0)
 ;                 ARY(0)=#
"RTN","LEXU3",149,0)
 ;                 
"RTN","LEXU3",150,0)
 ;              Word List in the order they appear in the input variable
"RTN","LEXU3",151,0)
 ;                 ARY(1)=WORD1
"RTN","LEXU3",152,0)
 ;                 ARY(n)=WORDn
"RTN","LEXU3",153,0)
 ;                 
"RTN","LEXU3",154,0)
 ;              Words listed alphabetically with the frequency of occurrence
"RTN","LEXU3",155,0)
 ;                 ARY("B",WORDA)=# (Frequency of Use)
"RTN","LEXU3",156,0)
 ;                 ARY("B",WORDB)=#
"RTN","LEXU3",157,0)
 ;                 
"RTN","LEXU3",158,0)
 ;              Words listed in the frequency order (the order used by the search)
"RTN","LEXU3",159,0)
 ;                 ARY("L",1)=SEARCHWORD1
"RTN","LEXU3",160,0)
 ;                 ARY("L",n)=SEARCHWORDn
"RTN","LEXU3",161,0)
 ; 
"RTN","LEXU3",162,0)
 ; Special Variables used by the parsing logic:
"RTN","LEXU3",163,0)
 ; 
"RTN","LEXU3",164,0)
 ;   LEXIDX    If this variable is set, the text will use the
"RTN","LEXU3",165,0)
 ;             parsing logic used for setting cross-references.
"RTN","LEXU3",166,0)
 ;             This is the default method.
"RTN","LEXU3",167,0)
 ;             
"RTN","LEXU3",168,0)
 ;   LEXLOOK   If this variable is set, the text will use the
"RTN","LEXU3",169,0)
 ;             parsing logic used for settup up for a Lexicon
"RTN","LEXU3",170,0)
 ;             search (lookup).
"RTN","LEXU3",171,0)
 ;             
"RTN","LEXU3",172,0)
 N LEXTI,LEXTL,X S LEXTI=$D(LEXIDX),LEXTL=$D(LEXLOOK) N LEXIDX,LEXLOOK
"RTN","LEXU3",173,0)
 I LEXTI>0 S LEXIDX="",LEXTL=0 K LEXLOOK
"RTN","LEXU3",174,0)
 I LEXTL>0 S LEXLOOK="",LEXTI=0 K LEXIDX
"RTN","LEXU3",175,0)
 S:'$D(LEXLOOK)&('$D(LEXIDX)) LEXIDX=""
"RTN","LEXU3",176,0)
 S (X,TEXT)=$G(TEXT) K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEXU3",177,0)
 N LEXI,LEXT,LEXF,LEXA,LEXC S LEXI=0 K ARY
"RTN","LEXU3",178,0)
 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",179,0)
 . S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXU3",180,0)
 . . S LEXF=+($O(^LEX(757.01,"ASL",LEXT,0)))
"RTN","LEXU3",181,0)
 . . I '$D(ARY("B",LEXT)) D
"RTN","LEXU3",182,0)
 . . . N LEXC S LEXC=$O(ARY(" "),-1)+1
"RTN","LEXU3",183,0)
 . . . S ARY(+LEXC)=LEXT,ARY(0)=LEXC
"RTN","LEXU3",184,0)
 . . . S:+LEXF>0 ARY("F",+LEXF)=LEXT
"RTN","LEXU3",185,0)
 . . . S ARY("B",LEXT)=LEXF
"RTN","LEXU3",186,0)
 S LEXI=0 F  S LEXI=$O(ARY("F",LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",187,0)
 . N LEXT,LEXC S LEXT=$G(ARY("F",LEXI))
"RTN","LEXU3",188,0)
 . S LEXC=$O(ARY("L"," "),-1)+1
"RTN","LEXU3",189,0)
 . S:$L(LEXT) ARY("L",LEXC)=LEXT
"RTN","LEXU3",190,0)
 K ARY("F") S X=+($G(ARY(0))) K ^TMP("LEXTKN",$J)
"RTN","LEXU3",191,0)
 Q X
"RTN","LEXU3",192,0)
 ;
"RTN","LEXU3",193,0)
MAX(SYS) ; Get the Maximum Number of Terms to Search
"RTN","LEXU3",194,0)
 ; 
"RTN","LEXU3",195,0)
 ; Input   
"RTN","LEXU3",196,0)
 ; 
"RTN","LEXU3",197,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",198,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",199,0)
 ;  
"RTN","LEXU3",200,0)
 ; Output  
"RTN","LEXU3",201,0)
 ; 
"RTN","LEXU3",202,0)
 ;   $$MAX   Maximum number of term to look at before
"RTN","LEXU3",203,0)
 ;           issuing a warning to the user
"RTN","LEXU3",204,0)
 ;           
"RTN","LEXU3",205,0)
 N LEX S LEX=0,SYS=($G(SYS)) Q:'$L(SYS) 100000  S:SYS?1N.N LEX=+SYS
"RTN","LEXU3",206,0)
 S:+LEX'>0&($D(^LEX(757.03,"ASAB",SYS))) LEX=$O(^LEX(757.03,"ASAB",SYS,0))
"RTN","LEXU3",207,0)
 S:+LEX'>0&($D(^LEX(757.03,"B",SYS))) LEX=$O(^LEX(757.03,"B",SYS,0))
"RTN","LEXU3",208,0)
 S:+LEX'>0&($D(^LEX(757.03,"C",SYS))) LEX=$O(^LEX(757.03,"C",SYS,0))
"RTN","LEXU3",209,0)
 N Y S Y=$P($G(^LEX(757.03,+LEX,2)),"^",2) S SYS=$S(+Y>0:+Y,1:100000)
"RTN","LEXU3",210,0)
 Q SYS
"RTN","LEXU3",211,0)
NXSAB(SYS,REV) ; Get the Next/Previous Source Abbreviation
"RTN","LEXU3",212,0)
 ; 
"RTN","LEXU3",213,0)
 ; Input   
"RTN","LEXU3",214,0)
 ; 
"RTN","LEXU3",215,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",216,0)
 ;               or pointer to file 757.03
"RTN","LEXU3",217,0)
 ;               or null
"RTN","LEXU3",218,0)
 ;   REV       Direction flag (optional)
"RTN","LEXU3",219,0)
 ;                0 or null finds next in a forward direction
"RTN","LEXU3",220,0)
 ;                1 finds next in a reverse direction
"RTN","LEXU3",221,0)
 ;                 
"RTN","LEXU3",222,0)
 ; Output  
"RTN","LEXU3",223,0)
 ; 
"RTN","LEXU3",224,0)
 ;   $$NXSAB   Next Source Abbreviation in the file
"RTN","LEXU3",225,0)
 ;
"RTN","LEXU3",226,0)
 N LEXS,LEXO,LEXR,X S (LEXS,LEXO)=$G(SYS),LEXR=+($G(REV)),X=""
"RTN","LEXU3",227,0)
 I LEXS?1N.N S:$D(^LEX(757.03,+LEXS,0)) LEXO=$E($G(^LEX(757.03,+LEXS,0)),1,3)
"RTN","LEXU3",228,0)
 S:LEXR>0&(LEXO="") LEXO=" "
"RTN","LEXU3",229,0)
 S:LEXR'>0 X=$O(^LEX(757.03,"ASAB",LEXO))
"RTN","LEXU3",230,0)
 S:LEXR>0 X=$O(^LEX(757.03,"ASAB",LEXO),-1)
"RTN","LEXU3",231,0)
 Q X
"RTN","LEXU3",232,0)
RECENT(X) ; Recently Updated (90 day window)
"RTN","LEXU3",233,0)
 ;
"RTN","LEXU3",234,0)
 ; Input
"RTN","LEXU3",235,0)
 ; 
"RTN","LEXU3",236,0)
 ;    X        Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",237,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",238,0)
 ;    
"RTN","LEXU3",239,0)
 ; Output
"RTN","LEXU3",240,0)
 ; 
"RTN","LEXU3",241,0)
 ;    X        Boolean flag
"RTN","LEXU3",242,0)
 ;    
"RTN","LEXU3",243,0)
 ;             1  =  Coding system has been recently updated
"RTN","LEXU3",244,0)
 ;                     Checks for a quarterly update by
"RTN","LEXU3",245,0)
 ;                     Looking 30 days into the future
"RTN","LEXU3",246,0)
 ;                     Looking 60 days into the past
"RTN","LEXU3",247,0)
 ;                
"RTN","LEXU3",248,0)
 ;             0  =  Coding system has NOT been recently updated
"RTN","LEXU3",249,0)
 ;         
"RTN","LEXU3",250,0)
 ; This API can be used to trigger code set update protocols
"RTN","LEXU3",251,0)
 N LEXCD,LEXDF,LEXSRC,LEXTD S LEXSRC=$G(X),LEXCD=$$RUPD(LEXSRC)
"RTN","LEXU3",252,0)
 Q:LEXCD'?7N 0  S X=0 S LEXTD=$$DT^XLFDT
"RTN","LEXU3",253,0)
 I LEXCD>LEXTD S LEXDF=$$FMDIFF^XLFDT(LEXCD,LEXTD) S:LEXDF<31 X=1 Q X
"RTN","LEXU3",254,0)
 I LEXTD>LEXCD S LEXDF=$$FMDIFF^XLFDT(LEXTD,LEXCD) S:LEXDF<61 X=1 Q X
"RTN","LEXU3",255,0)
 Q:LEXTD=LEXCD 1
"RTN","LEXU3",256,0)
 Q 0
"RTN","LEXU3",257,0)
RUPD(SYS) ; Get the Date the Coding System was most Recently Updated
"RTN","LEXU3",258,0)
 ;
"RTN","LEXU3",259,0)
 ; Input
"RTN","LEXU3",260,0)
 ; 
"RTN","LEXU3",261,0)
 ;    SYS      Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",262,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",263,0)
 ;    
"RTN","LEXU3",264,0)
 ; Output
"RTN","LEXU3",265,0)
 ; 
"RTN","LEXU3",266,0)
 ;    $$RUPD   Date of most recent update based on Today+30
"RTN","LEXU3",267,0)
 ;         
"RTN","LEXU3",268,0)
 ;              or
"RTN","LEXU3",269,0)
 ;         
"RTN","LEXU3",270,0)
 ;             -1 ^ error message 
"RTN","LEXU3",271,0)
 ;    
"RTN","LEXU3",272,0)
 N LEXCDT,LEXSRC S LEXCDT=$$FMADD^XLFDT($$DT^XLFDT,30),LEXSRC=$G(SYS)
"RTN","LEXU3",273,0)
 S SYS=$$LUPD(LEXSRC,LEXCDT)
"RTN","LEXU3",274,0)
 Q SYS
"RTN","LEXU3",275,0)
LUPD(SYS,LEXVDT) ; Get the date the Coding System was Last Updated
"RTN","LEXU3",276,0)
 ;
"RTN","LEXU3",277,0)
 ; Input
"RTN","LEXU3",278,0)
 ; 
"RTN","LEXU3",279,0)
 ;    SYS      Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",280,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",281,0)
 ;    LEXVDT   Date used to determine last update from (optional)
"RTN","LEXU3",282,0)
 ;    
"RTN","LEXU3",283,0)
 ; Output
"RTN","LEXU3",284,0)
 ; 
"RTN","LEXU3",285,0)
 ;    $$LUPD   Date of last update based on date provided
"RTN","LEXU3",286,0)
 ;    
"RTN","LEXU3",287,0)
 ;             or
"RTN","LEXU3",288,0)
 ;         
"RTN","LEXU3",289,0)
 ;             The last date updated (ever) if a date is not supplied
"RTN","LEXU3",290,0)
 ;         
"RTN","LEXU3",291,0)
 ;             or
"RTN","LEXU3",292,0)
 ;         
"RTN","LEXU3",293,0)
 ;             -1 ^ error message 
"RTN","LEXU3",294,0)
 ;    
"RTN","LEXU3",295,0)
 N LEXCDT,LEXSAB,LEXSRC,LEXDT,LEXLUPD,LEXSYS S LEXCDT=$G(LEXVDT),LEXSRC=$G(SYS) Q:'$L(LEXSRC) "-1^Invalid coding system"
"RTN","LEXU3",296,0)
 S LEXSAB=$$CSYS^LEXU(LEXSRC) Q:+LEXSAB'>0 "-1^Invalid coding system abbreviation"
"RTN","LEXU3",297,0)
 S LEXSYS=$P(LEXSAB,"^",4) Q:'$D(LEXSYS) "-1^Invalid coding system"
"RTN","LEXU3",298,0)
 S LEXSAB=$P(LEXSAB,"^",2) Q:$L(LEXSAB)'=3 "-1^Invalid coding system abbreviation length"
"RTN","LEXU3",299,0)
 S LEXDT=$O(^LEX(757.02,"AUPD",LEXSAB,9999999),-1)
"RTN","LEXU3",300,0)
 S LEXLUPD=$O(^LEX(757.02,"AUPD",LEXSAB,(9999999+.00001)),-1)
"RTN","LEXU3",301,0)
 S:LEXCDT?7N LEXDT=$O(^LEX(757.02,"AUPD",LEXSAB,(LEXCDT+.00001)),-1)
"RTN","LEXU3",302,0)
 S SYS="-1^Invalid date" I LEXLUPD>LEXCDT D
"RTN","LEXU3",303,0)
 . S:LEXCDT?7N SYS="-1^"_LEXSYS_" coding system not implemented on "_$$FMTE^XLFDT(LEXCDT,"5Z")
"RTN","LEXU3",304,0)
 . S:LEXCDT'?7N SYS="-1^"_LEXSYS_" coding system not implemented"
"RTN","LEXU3",305,0)
 S:LEXDT?7N SYS=LEXDT
"RTN","LEXU3",306,0)
 Q SYS
"RTN","LEXU4")
0^113^B63972250
"RTN","LEXU4",1,0)
LEXU4 ;ISL/KER - Miscellaneous Lexicon Utilities ;04/21/2014
"RTN","LEXU4",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXU4",3,0)
 ;               
"RTN","LEXU4",4,0)
 ;               
"RTN","LEXU4",5,0)
 ; Global Variables
"RTN","LEXU4",6,0)
 ;    ^ICPT("BA"
"RTN","LEXU4",7,0)
 ;               
"RTN","LEXU4",8,0)
 ; External References
"RTN","LEXU4",9,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXU4",10,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU4",11,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU4",12,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXU4",13,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU4",14,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU4",15,0)
 ;               
"RTN","LEXU4",16,0)
HIST(CODE,SYS,ARY) ; Get Activation History for a Code
"RTN","LEXU4",17,0)
 ;                      
"RTN","LEXU4",18,0)
 ; Input:
"RTN","LEXU4",19,0)
 ; 
"RTN","LEXU4",20,0)
 ;    CODE   ICD Code (required)
"RTN","LEXU4",21,0)
 ;    SYS    Coding System
"RTN","LEXU4",22,0)
 ;   .ARY    Array, passed by Reference (required)
"RTN","LEXU4",23,0)
 ;                      
"RTN","LEXU4",24,0)
 ; Output:
"RTN","LEXU4",25,0)
 ;    
"RTN","LEXU4",26,0)
 ;    $$HIST  Number of Histories Found
"RTN","LEXU4",27,0)
 ;              or
"RTN","LEXU4",28,0)
 ;            -1 ^ error message
"RTN","LEXU4",29,0)
 ;    
"RTN","LEXU4",30,0)
 ;    ARY(0) = Number of Activation History
"RTN","LEXU4",31,0)
 ;    ARY(0,0) = Code ^ Source Abbreviation ^ Source Nomenclature
"RTN","LEXU4",32,0)
 ;    ARY(<date>,<status>) = Comment
"RTN","LEXU4",33,0)
 ;
"RTN","LEXU4",34,0)
 N LEXA,LEXC,LEXE,LEXI,LEXN,LEXNOM,LEXP,LEXS,LEXSAB,LEXSI,LEXSO,LEXSRC,LEXTD,X
"RTN","LEXU4",35,0)
 S LEXSO=$G(CODE) K ARY Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU4",36,0)
 Q:'$D(^LEX(757.02,"ACT",(LEXSO_" "))) "-1^Invalid code missing"
"RTN","LEXU4",37,0)
 S LEXSAB=$G(SYS),LEXSRC=+($$CSYS^LEXU(LEXSAB))
"RTN","LEXU4",38,0)
 S:LEXSRC'>0 LEXSRC=$$SYSC(LEXSO) Q:+LEXSRC'>0 "-1^Invalid source"
"RTN","LEXU4",39,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRC,0)),"^",2)
"RTN","LEXU4",40,0)
 S (LEXSI,LEXSAB)=$$CSYS^LEXU(+LEXSRC)
"RTN","LEXU4",41,0)
 S LEXSI=$P(LEXSI,"^",3,4)
"RTN","LEXU4",42,0)
 S LEXSAB=$P(LEXSAB,"^",2) Q:$L(LEXSAB)'=3 "-1^Invalid source"
"RTN","LEXU4",43,0)
 S LEXTD=$$DT^XLFDT F LEXI=0,1 D
"RTN","LEXU4",44,0)
 . N LEXE S LEXE=0
"RTN","LEXU4",45,0)
 . F  S LEXE=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",46,0)
 . . N LEXS S LEXS=0
"RTN","LEXU4",47,0)
 . . F  S LEXS=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE,LEXS)) Q:+LEXS'>0  D
"RTN","LEXU4",48,0)
 . . . N LEXN,LEXC S LEXN=$G(^LEX(757.02,LEXS,0))
"RTN","LEXU4",49,0)
 . . . S LEXC=+($P(LEXN,"^",3)) Q:+LEXC'=LEXSRC
"RTN","LEXU4",50,0)
 . . . S:'$D(ARY(LEXE,LEXI)) ARY(0)=+($G(ARY(0)))+1
"RTN","LEXU4",51,0)
 . . . S ARY(LEXE,LEXI)=""
"RTN","LEXU4",52,0)
 S LEXA=0,LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",53,0)
 . S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  D
"RTN","LEXU4",54,0)
 . . S:+LEXS>0 LEXA=1  K:+LEXA'>0 ARY(LEXE,LEXS)
"RTN","LEXU4",55,0)
 S LEXA=0,LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",56,0)
 . S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  D
"RTN","LEXU4",57,0)
 . . S:+LEXS>0 LEXA=LEXA+1
"RTN","LEXU4",58,0)
 . . I +LEXS>0,LEXA=1 S ARY(LEXE,LEXS)="Activated" Q
"RTN","LEXU4",59,0)
 . . I +LEXS'>0 S ARY(LEXE,LEXS)="Inactivated" Q
"RTN","LEXU4",60,0)
 . . I +LEXS>0 D
"RTN","LEXU4",61,0)
 . . . S ARY(LEXE,LEXS)="Re-activated"
"RTN","LEXU4",62,0)
 . . . I $D(ARY(LEXE,0)) D  Q
"RTN","LEXU4",63,0)
 . . . . S ARY(LEXE,LEXS)="Revised" K ARY(LEXE,0)
"RTN","LEXU4",64,0)
 . . . S LEXP=$O(ARY(LEXE),-1) I +LEXP>0 D
"RTN","LEXU4",65,0)
 . . . . I $O(ARY(LEXE," "),-1)'>0 S ARY(LEXE,LEXS)="Re-Used" K ARY(LEXE,0)
"RTN","LEXU4",66,0)
 K ARY(0) S LEXN=0,LEXC="" F  S LEXC=$O(ARY(LEXC)) Q:'$L(LEXC)  D
"RTN","LEXU4",67,0)
 . S LEXI="" F  S LEXI=$O(ARY(LEXC,LEXI)) Q:'$L(LEXI)  D
"RTN","LEXU4",68,0)
 . . I LEXI?1N,LEXC?7N,LEXC>LEXTD,$L($G(ARY(LEXC,LEXI))) D
"RTN","LEXU4",69,0)
 . . . S ARY(LEXC,LEXI)=$G(ARY(LEXC,LEXI))_" (Pending)"
"RTN","LEXU4",70,0)
 . . S LEXN=LEXN+1
"RTN","LEXU4",71,0)
 S X=+($G(LEXN)) S:LEXN>0 ARY(0)=+($G(LEXN)) S:X'>0 X="-1^No History Found"
"RTN","LEXU4",72,0)
 S:LEXN>0&($L(LEXSI))&($L(LEXSO)) ARY(0,0)=LEXSO_"^"_LEXSI
"RTN","LEXU4",73,0)
 Q X
"RTN","LEXU4",74,0)
PERIOD(CODE,SYS,ARY) ; Get Activation/Inactivation Periods for a Code
"RTN","LEXU4",75,0)
 ;
"RTN","LEXU4",76,0)
 ; Input:
"RTN","LEXU4",77,0)
 ; 
"RTN","LEXU4",78,0)
 ;    CODE   ICD Code (required)
"RTN","LEXU4",79,0)
 ;    SYS    Coding System
"RTN","LEXU4",80,0)
 ;   .ARY    Array, passed by Reference (required)
"RTN","LEXU4",81,0)
 ;
"RTN","LEXU4",82,0)
 ; Output:
"RTN","LEXU4",83,0)
 ; 
"RTN","LEXU4",84,0)
 ;   $$PERIOD   Multiple piece "^" delimited string
"RTN","LEXU4",85,0)
 ;   
"RTN","LEXU4",86,0)
 ;              1  Number of Activation Periods found
"RTN","LEXU4",87,0)
 ;              2  Coding System (interal)
"RTN","LEXU4",88,0)
 ;              3  Source Abbreviation
"RTN","LEXU4",89,0)
 ;              4  Coding System Nomenclature
"RTN","LEXU4",90,0)
 ;              5  Coding System Name
"RTN","LEXU4",91,0)
 ;              
"RTN","LEXU4",92,0)
 ;                or
"RTN","LEXU4",93,0)
 ;              
"RTN","LEXU4",94,0)
 ;              -1^ Message (no period or error message)
"RTN","LEXU4",95,0)
 ;            
"RTN","LEXU4",96,0)
 ;   ARY(0)     Same as $$PERIOD (above)
"RTN","LEXU4",97,0)
 ;   
"RTN","LEXU4",98,0)
 ;   ARY(Activation Date) = 4 piece "^" delimited string
"RTN","LEXU4",99,0)
 ;   
"RTN","LEXU4",100,0)
 ;              1  Inactivation Date
"RTN","LEXU4",101,0)
 ;                 (conditional)
"RTN","LEXU4",102,0)
 ;            
"RTN","LEXU4",103,0)
 ;              2  Pointer to Expression file 757.01
"RTN","LEXU4",104,0)
 ;                 for the code in piece #2 above 
"RTN","LEXU4",105,0)
 ;                 (required)
"RTN","LEXU4",106,0)
 ;               
"RTN","LEXU4",107,0)
 ;              3  Variable Pointer IEN;Root of a 
"RTN","LEXU4",108,0)
 ;                 national file (see below)  Include
"RTN","LEXU4",109,0)
 ;                 when the code exist in an national
"RTN","LEXU4",110,0)
 ;                 file (conditional)
"RTN","LEXU4",111,0)
 ;                
"RTN","LEXU4",112,0)
 ;                   CPT/HCPCS Procedure code  IEN;ICPT(
"RTN","LEXU4",113,0)
 ;                   ICD Diagnosis code        IEN;ICD9(
"RTN","LEXU4",114,0)
 ;                   ICD Procedure code        IEN;ICD0(
"RTN","LEXU4",115,0)
 ;                  
"RTN","LEXU4",116,0)
 ;              4  Short Description from the SDO file
"RTN","LEXU4",117,0)
 ;                 (CPT or ICD)
"RTN","LEXU4",118,0)
 ;
"RTN","LEXU4",119,0)
 ;   ARY(Activation Date,0) = Lexicon Expression
"RTN","LEXU4",120,0)
 ;   
"RTN","LEXU4",121,0)
 ; Functions like PERIOD^ICDAPIU, except it can include
"RTN","LEXU4",122,0)
 ; any coding system in the Lexicon, not just ICD.
"RTN","LEXU4",123,0)
 ; 
"RTN","LEXU4",124,0)
 N LEXACT,LEXD,LEXDT,LEXEF,LEXEXI,LEXEXP,LEXI,LEXIDT,LEXIEN
"RTN","LEXU4",125,0)
 N LEXINA,LEXND,LEXPDT,LEXPER,LEXSD,LEXSO,LEXSY,LEXSYS,LEXVP
"RTN","LEXU4",126,0)
 S LEXSO=$G(CODE) Q:'$L(LEXSO) "-1^Missing Code"
"RTN","LEXU4",127,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) "-1^Invalid Code"
"RTN","LEXU4",128,0)
 S (LEXSD,LEXSYS)=$$CSYS^LEXU(SYS),LEXSYS=+LEXSYS
"RTN","LEXU4",129,0)
 Q:+LEXSYS'>0 "-1^Missing/Invalid Coding System"
"RTN","LEXU4",130,0)
 Q:'$D(^LEX(757.03,+LEXSYS,0)) "-1^Invalid Coding System"
"RTN","LEXU4",131,0)
 K ARY,LEXACT,LEXINA
"RTN","LEXU4",132,0)
 S LEXDT="" F  S LEXDT=$O(^LEX(757.02,"ACT",(LEXSO_" "),3,LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",133,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.02,"ACT",(LEXSO_" "),3,LEXDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXU4",134,0)
 . . N LEXND,LEXSY,LEXEXI S LEXND=$G(^LEX(757.02,+LEXIEN,0)),LEXSY=$P(LEXND,"^",3),LEXEXI=+LEXND
"RTN","LEXU4",135,0)
 . . Q:LEXSY'=LEXSYS  S LEXACT(LEXDT)=LEXEXI
"RTN","LEXU4",136,0)
 S LEXDT="" F  S LEXDT=$O(^LEX(757.02,"ACT",(LEXSO_" "),2,LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",137,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.02,"ACT",(LEXSO_" "),2,LEXDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXU4",138,0)
 . . N LEXND,LEXSY,LEXEXI S LEXND=$G(^LEX(757.02,+LEXIEN,0)),LEXSY=$P(LEXND,"^",3),LEXEXI=+LEXND
"RTN","LEXU4",139,0)
 . . Q:LEXSY'=LEXSYS  S LEXINA(LEXDT)=LEXEXI
"RTN","LEXU4",140,0)
 S LEXDT="" F  S LEXDT=$O(LEXACT(LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",141,0)
 . I $D(LEXINA(LEXDT)) D
"RTN","LEXU4",142,0)
 . . N LEXEXI,LEXPDT
"RTN","LEXU4",143,0)
 . . S LEXEXI=$G(LEXACT(LEXDT)),LEXPDT=$O(LEXACT(LEXDT),-1)
"RTN","LEXU4",144,0)
 . . S:LEXPDT?7N&(LEXEXI>0) LEXACT(LEXPDT)=LEXEXI
"RTN","LEXU4",145,0)
 . . K LEXACT(LEXDT),LEXINA(LEXDT)
"RTN","LEXU4",146,0)
 S LEXDT="" F  S LEXDT=$O(LEXACT(LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",147,0)
 . N LEXIDT,LEXEXI,LEXEXP,LEXEF,LEXVP
"RTN","LEXU4",148,0)
 . ; Inactive Date
"RTN","LEXU4",149,0)
 . S LEXIDT=$O(LEXINA(LEXDT))
"RTN","LEXU4",150,0)
 . ; Lexicon Expression
"RTN","LEXU4",151,0)
 . S LEXEXI=$G(LEXACT(LEXDT))
"RTN","LEXU4",152,0)
 . S:LEXIDT?7N LEXEXI=$G(LEXINA(LEXIDT))
"RTN","LEXU4",153,0)
 . S LEXEXP="" S:+LEXEXI>0 LEXEXP=$G(^LEX(757.01,+LEXEXI,0))
"RTN","LEXU4",154,0)
 . ; Kill
"RTN","LEXU4",155,0)
 . K:LEXIDT?7N LEXINA(LEXIDT)
"RTN","LEXU4",156,0)
 . ; Effective Date
"RTN","LEXU4",157,0)
 . S LEXEF=$$DT^XLFDT S:LEXIDT?7N LEXEF=LEXIDT
"RTN","LEXU4",158,0)
 . ; Variable Pointer
"RTN","LEXU4",159,0)
 . S LEXVP=$$VP(LEXSO,LEXSYS,LEXEF)
"RTN","LEXU4",160,0)
 . ; Set array
"RTN","LEXU4",161,0)
 . S:LEXIDT'?7N LEXIDT=""
"RTN","LEXU4",162,0)
 . S LEXPER(LEXDT)=LEXIDT_"^"_LEXEXI_"^"_LEXVP
"RTN","LEXU4",163,0)
 . S:$L(LEXEXP) LEXPER(LEXDT,0)=LEXEXP
"RTN","LEXU4",164,0)
 K ARY M ARY=LEXPER
"RTN","LEXU4",165,0)
 S (LEXEF,LEXC)=0 F  S LEXEF=$O(ARY(LEXEF)) Q:LEXEF'?7N  S LEXC=LEXC+1
"RTN","LEXU4",166,0)
 S:+LEXC>0 ARY(0)=LEXC S:+LEXC'>0 ARY(0)="-1^No activation periods found for code"
"RTN","LEXU4",167,0)
 S:LEXSYS>0&($L($P($G(LEXSD),"^",3,5)))&(LEXC>0) ARY(0)=LEXC_U_LEXSYS_U_$P($G(LEXSD),"^",3,5)
"RTN","LEXU4",168,0)
 Q $G(ARY(0))
"RTN","LEXU4",169,0)
VP(CODE,SYS,EFF) ; Variable Pointer ^ Description
"RTN","LEXU4",170,0)
 N LEXDES,LEXEF,LEXI,LEXR,LEXSO,LEXSYS,LEXVP
"RTN","LEXU4",171,0)
 S LEXSO=$G(CODE),LEXSYS=+($G(SYS))
"RTN","LEXU4",172,0)
 Q:'$L(LEXSO) ""  Q:"^1^2^3^4^30^31^"'[("^"_LEXSYS_"^") ""
"RTN","LEXU4",173,0)
 S (LEXVP,LEXDES)="" S LEXEF=$G(EFF) S:LEXEF'?7N LEXEF=$$DT^XLFDT
"RTN","LEXU4",174,0)
 I LEXSYS=1!(LEXSYS=30) D
"RTN","LEXU4",175,0)
 . N LEXI,LEXR S LEXI=+($$CODEABA^ICDEX(LEXSO,80,LEXSYS)) Q:+LEXI'>0
"RTN","LEXU4",176,0)
 . S LEXR=$TR($$ROOT^ICDEX(80),"^","") Q:'$L(LEXR)
"RTN","LEXU4",177,0)
 . S LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",178,0)
 . S LEXDES=$P($$ICDDX^ICDEX(LEXSO,(LEXEF+.001),LEXSYS,"E"),U,4)
"RTN","LEXU4",179,0)
 I LEXSYS=2!(LEXSYS=31) D
"RTN","LEXU4",180,0)
 . N LEXI,LEXR S LEXI=+($$CODEABA^ICDEX(LEXSO,80.1,LEXSYS)) Q:+LEXI'>0
"RTN","LEXU4",181,0)
 . S LEXR=$TR($$ROOT^ICDEX(80.1),"^","") Q:'$L(LEXR)  S LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",182,0)
 . S LEXDES=$P($$ICDOP^ICDEX(LEXSO,(LEXEF+.001),LEXSYS,"E"),U,5)
"RTN","LEXU4",183,0)
 I LEXSYS=3!(LEXSYS=4) D
"RTN","LEXU4",184,0)
 . N LEXI,LEXR S LEXI=$O(^ICPT("BA",(LEXSO_" "),0)) Q:+LEXI'>0
"RTN","LEXU4",185,0)
 . S LEXR="ICPT(",LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",186,0)
 . S LEXDES=$P($$CPT^ICPTCOD(LEXSO,(LEXEF+.001)),U,3)
"RTN","LEXU4",187,0)
 Q:$L(LEXVP)&($L(LEXDES)) (LEXVP_"^"_LEXDES)
"RTN","LEXU4",188,0)
 Q ""
"RTN","LEXU4",189,0)
PFI(FRAG,CDT,ARY) ; Get Procedure Fragment Info
"RTN","LEXU4",190,0)
 ;
"RTN","LEXU4",191,0)
 ; Input
"RTN","LEXU4",192,0)
 ; 
"RTN","LEXU4",193,0)
 ;   FRAG    ICD-10-PCS Code Fragment
"RTN","LEXU4",194,0)
 ;    CDT    Versioning date (busines rules apply)
"RTN","LEXU4",195,0)
 ;   .ARY    Local Array passed by reference
"RTN","LEXU4",196,0)
 ;   
"RTN","LEXU4",197,0)
 ; Output
"RTN","LEXU4",198,0)
 ; 
"RTN","LEXU4",199,0)
 ;   $$PFI   1 if successful
"RTN","LEXU4",200,0)
 ;          -1 ^ Error Message if unsuccessful
"RTN","LEXU4",201,0)
 ;   ARY
"RTN","LEXU4",202,0)
 ;    
"RTN","LEXU4",203,0)
 ;          ARY(0)   5 piece "^" delimited strig
"RTN","LEXU4",204,0)
 ;                   1  Unique Id
"RTN","LEXU4",205,0)
 ;                   2  Code Fragment
"RTN","LEXU4",206,0)
 ;                   3  Date Entered
"RTN","LEXU4",207,0)
 ;                   4  Source
"RTN","LEXU4",208,0)
 ;                   5  Details
"RTN","LEXU4",209,0)
 ;                
"RTN","LEXU4",210,0)
 ;          ARY(1)   4 piece "^" delimited string
"RTN","LEXU4",211,0)
 ;                   1  Effective Date
"RTN","LEXU4",212,0)
 ;                   2  Status
"RTN","LEXU4",213,0)
 ;                   3  Effective Date External
"RTN","LEXU4",214,0)
 ;                   4  Status External
"RTN","LEXU4",215,0)
 ;                
"RTN","LEXU4",216,0)
 ;          ARY(2)    Name/Title
"RTN","LEXU4",217,0)
 ;          ARY(3)    Description
"RTN","LEXU4",218,0)
 ;          ARY(4)    Explanation
"RTN","LEXU4",219,0)
 ;          ARY(5,0)  # of synonyms included
"RTN","LEXU4",220,0)
 ;          ARY(5,n)  included synonyms
"RTN","LEXU4",221,0)
 ;    
"RTN","LEXU4",222,0)
 N LEXF,LEXI,LEXE,LEXC,LEXD,LEXN,X S LEXF=$G(FRAG) K ARY
"RTN","LEXU4",223,0)
 S LEXI=$$IMPDATE^LEXU(31) S LEXD=$G(CDT) S:'$L(LEXD) LEXD=$$DT^XLFDT
"RTN","LEXU4",224,0)
 S:LEXD?7N&(LEXI?7N)&(LEXD<LEXI) LEXD=LEXI
"RTN","LEXU4",225,0)
 Q:'$D(^LEX(757.033,"AFRAG",31,(LEXF_" "))) "-1^Invalid procedure code fragment"
"RTN","LEXU4",226,0)
 S LEXE=$O(^LEX(757.033,"AFRAG",31,(LEXF_" "),(LEXD+.001)),-1)
"RTN","LEXU4",227,0)
 Q:LEXE'?7N "-1^Fragment not active"
"RTN","LEXU4",228,0)
 S LEXN=$O(^LEX(757.033,"AFRAG",31,(LEXF_" "),+LEXE," "),-1)
"RTN","LEXU4",229,0)
 Q:+LEXN'>0 "-1^Fragment not found"
"RTN","LEXU4",230,0)
 K ARY S X=$$FIN^LEX10PR(LEXN,LEXD,.ARY)
"RTN","LEXU4",231,0)
 Q X
"RTN","LEXU4",232,0)
SYSC(X) ; System from Code (must be unique)
"RTN","LEXU4",233,0)
 ;
"RTN","LEXU4",234,0)
 ; Input:
"RTN","LEXU4",235,0)
 ;
"RTN","LEXU4",236,0)
 ;   X       Classification Code (required)
"RTN","LEXU4",237,0)
 ;
"RTN","LEXU4",238,0)
 ; Output: 
"RTN","LEXU4",239,0)
 ; 
"RTN","LEXU4",240,0)
 ;   $$SYSC  Pointer to CODING SYSTEMS file 757.03
"RTN","LEXU4",241,0)
 ;   
"RTN","LEXU4",242,0)
 ;   or 
"RTN","LEXU4",243,0)
 ;   
"RTN","LEXU4",244,0)
 ;   -1 ^ error message
"RTN","LEXU4",245,0)
 ;  
"RTN","LEXU4",246,0)
 N LEXS,LEXSIEN,LEXSO S LEXSO=$G(X) Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU4",247,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) "-1^Invalid code missing"
"RTN","LEXU4",248,0)
 K LEXS S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXU4",249,0)
 . S LEXS(+($P($G(^LEX(757.02,+LEXSIEN,0)),"^",3)))=""
"RTN","LEXU4",250,0)
 I $O(LEXS(0))>0,$O(LEXS(0))=$O(LEXS(" "),-1) S X=$O(LEXS(0)) Q X
"RTN","LEXU4",251,0)
 Q "-1^Unable to resolve coding system"
"RTN","LEXU4",252,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXU4",253,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXU4",254,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXU4",255,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXU4",256,0)
 Q X
"RTN","LEXUH")
0^212^B105430964
"RTN","LEXUH",1,0)
LEXUH ;ISL/KER - Miscellaneous Lexicon Utilities (Help) ;04/21/2014
"RTN","LEXUH",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXUH",3,0)
 ;               
"RTN","LEXUH",4,0)
EN ; Main Entry Point
"RTN","LEXUH",5,0)
 N %ZIS,ACT,ANS,CAL,CF,COM,CONT,CT,DIR,DIRB,DIROUT,DIRUT,DNC,DTOUT,DUOUT,ENT,EOP,EXEC,EXIT
"RTN","LEXUH",6,0)
 N HDR,HLP,I,ICR,IEN,INC,INT,ITEM,LAST,LC,LEN,LIN,LINE,LOC,MAX,MEN,NAM,NEXT,PAR,POP,PRE
"RTN","LEXUH",7,0)
 N RAN,ROOT,RTN,SEL,TAG,TEXT,TOT,TXT,TXT1,TXT2,TXT3,X,Y,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ
"RTN","LEXUH",8,0)
 N ZTRTN,ZTSAVE,ZTSK K TEXT D MA W ! S ENT=$$ASK
"RTN","LEXUH",9,0)
 S MEN=$$TM($G(SEL(+ENT))) Q:'$L(MEN)  S LOC=$$TM($G(SEL(+ENT,"A"))),NAM=$$TM($G(SEL(+ENT,"C")))
"RTN","LEXUH",10,0)
 S ICR=$$TM($G(SEL(+ENT,"I"))) S:$L(ICR) ICR="(ICR "_ICR_")" S CAL=$$TM($G(SEL(+ENT,"X")))
"RTN","LEXUH",11,0)
 K TEXT D:ENT>0 OA D:$O(TEXT(0))>0 DHLP K TEXT,COM,SEL
"RTN","LEXUH",12,0)
 Q
"RTN","LEXUH",13,0)
 ;
"RTN","LEXUH",14,0)
DHLP ;   Display Help
"RTN","LEXUH",15,0)
 N %ZIS,CF,CONT,DNC,EOP,I,LC,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,POP
"RTN","LEXUH",16,0)
 S %ZIS("A")=" Device:  ",ZTRTN="DISP^LEXUH",ZTDESC="Display Lexicon API Help"
"RTN","LEXUH",17,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="Q",ZTSAVE("SEL(")="",ZTSAVE("ANS")="" W ! D ^%ZIS I POP K %ZIS("A") Q
"RTN","LEXUH",18,0)
 S ZTIO=ION I $D(IO("Q")) D QUE,^%ZISC,HOME^%ZIS K %ZIS("A") Q
"RTN","LEXUH",19,0)
 K %ZIS("A") D NOQUE Q
"RTN","LEXUH",20,0)
NOQUE ;   Do not queue Display
"RTN","LEXUH",21,0)
 W @IOF W:IOST["P-" !,"< Not queued, printing Lexicon API Help >",! U:IOST["P-" IO D @ZTRTN,^%ZISC,HOME^%ZIS Q
"RTN","LEXUH",22,0)
QUE ;   Task queued to print Help
"RTN","LEXUH",23,0)
 K IO("Q") D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! Q
"RTN","LEXUH",24,0)
 Q
"RTN","LEXUH",25,0)
DISP ; Display
"RTN","LEXUH",26,0)
 W:$L($G(IOF)) @IOF N LINE,LC,CF,CONT,EOP,EXIT S EXIT=0,EOP=+($G(IOSL))
"RTN","LEXUH",27,0)
 S:EOP=0 EOP=24 S EOP=EOP-2 S (LC,LINE)=0 F  S LINE=$O(TEXT(LINE)) Q:+LINE'>0  D  Q:EXIT
"RTN","LEXUH",28,0)
 . N TXT S TXT=$G(TEXT(LINE)) W !," ",TXT S CF=0 D LF
"RTN","LEXUH",29,0)
 I CF,EXIT>0 D EOP W:$L($G(IOF)) @IOF Q
"RTN","LEXUH",30,0)
 I 'CF D EOP W:$L($G(IOF)) @IOF
"RTN","LEXUH",31,0)
 Q
"RTN","LEXUH",32,0)
LF ;   Line Feed
"RTN","LEXUH",33,0)
 S LC=LC+1 D:IOST["P-"&(LC>(EOP-7)) EOP D:IOST'["P-"&(LC>(EOP-4)) EOP
"RTN","LEXUH",34,0)
 Q
"RTN","LEXUH",35,0)
EOP ;   End of Page
"RTN","LEXUH",36,0)
 N CONT S LC=0 W:IOST["P-" @IOF Q:IOST["P-"  W !! S CONT=$$CONT S CF=1
"RTN","LEXUH",37,0)
 Q
"RTN","LEXUH",38,0)
CONT(X) ;   Ask to Continue
"RTN","LEXUH",39,0)
 Q:+($G(EXIT))>0 "^^"  N DIR,DIROUT,DIRUT,DUOUT,DTOUT,Y S DIR(0)="EAO",DIR("A")=" Enter RETURN to continue or '^' to exit: "
"RTN","LEXUH",40,0)
 S DIR("PRE")="S:X[""?"" X=""??"" S:X[""^"" X=""^""",(DIR("?"),DIR("??"))="^D CONTH^LEXUH"
"RTN","LEXUH",41,0)
 D ^DIR S:X["^"!($D(DTOUT)) EXIT=1 Q:$D(DIROUT)!($D(DIRUT))!($D(DUOUT))!($D(DTOUT))!(X["^") "^"
"RTN","LEXUH",42,0)
 Q ""
"RTN","LEXUH",43,0)
CONTH ;      Ask to Continue Help
"RTN","LEXUH",44,0)
 W !,"     Enter either RETURN or '^'."
"RTN","LEXUH",45,0)
 Q
"RTN","LEXUH",46,0)
 ; 
"RTN","LEXUH",47,0)
ASK(X) ; Ask to Select an API
"RTN","LEXUH",48,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","LEXUH",49,0)
 N IEN,ITEM,TOT,MAX,ENT,ANS,EXIT,LEN,ROOT,Y,INT S INT=" API Help available for:"
"RTN","LEXUH",50,0)
 S:$L($G(HDR)) INT=$G(HDR) S LEN=+($G(LEN)) S:+LEN'>0 LEN=10 S (MAX,ENT,ANS,EXIT)=0,U="^"
"RTN","LEXUH",51,0)
 S TOT=$O(SEL(" "),-1) G:+TOT=0 ASKQ S ANS=0 W:+TOT>1 !,INT
"RTN","LEXUH",52,0)
 S ENT=0 F  S ENT=$O(SEL(ENT)) Q:+ENT'>0  Q:((ANS>0)&(ANS'>ENT))  Q:EXIT  D  Q:EXIT
"RTN","LEXUH",53,0)
 . N ITEM,IEN,TEXT S (TEXT,ITEM)=$$TM($G(SEL(ENT))) Q:'$L(ITEM)
"RTN","LEXUH",54,0)
 . S MAX=ENT W:ENT#LEN=1 ! W !,$J(ENT,3),".  ",ITEM
"RTN","LEXUH",55,0)
 . W:TOT#LEN=0 ! S:ENT#LEN=0 ANS=$$ASKS(MAX,ENT) S:ANS["^" EXIT=1
"RTN","LEXUH",56,0)
 I TOT#LEN'=0,+ANS=0 W ! S ANS=$$ASKS(MAX,TOT) S:ANS["^" EXIT=1
"RTN","LEXUH",57,0)
 G ASKQ
"RTN","LEXUH",58,0)
 Q X
"RTN","LEXUH",59,0)
ASKS(MAX,ENT) ;   Select Multiple
"RTN","LEXUH",60,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","LEXUH",61,0)
 N X,Y,LAST,NEXT,RAN,DIR,DTOUT,DUOUT,DIROUT,DIRUT,DIRB,HLP
"RTN","LEXUH",62,0)
 S MAX=+($G(MAX)),LAST=+($G(ENT)) Q:MAX'>0 -1
"RTN","LEXUH",63,0)
 S RAN=" Select 1-"_MAX_":  ",NEXT=$O(SEL(+LAST))
"RTN","LEXUH",64,0)
 S:+NEXT>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or"_RAN
"RTN","LEXUH",65,0)
 S:+NEXT'>0 DIR("A")=RAN
"RTN","LEXUH",66,0)
 S HLP="    Answer must be from 1 to "_MAX_", or <Return> to continue"
"RTN","LEXUH",67,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","LEXUH",68,0)
 S (DIR("?"),DIR("??"))="^D ASKSH^LEXUH"
"RTN","LEXUH",69,0)
 S DIR(0)="NAO^1:"_MAX_":0" D ^DIR
"RTN","LEXUH",70,0)
 S:X["^^"!($D(DTOUT)) EXIT=1,X="^^"
"RTN","LEXUH",71,0)
 I X["^^"!(+($G(EXIT))>0) Q "^^"
"RTN","LEXUH",72,0)
 S Y=+Y S:$D(DTOUT)!(X["^") Y="^" K DIR
"RTN","LEXUH",73,0)
 Q Y
"RTN","LEXUH",74,0)
ASKSH ;   Select Multiple Help
"RTN","LEXUH",75,0)
 I $L($G(HLP)) W !,$G(HLP) Q
"RTN","LEXUH",76,0)
 Q
"RTN","LEXUH",77,0)
ASKQ ;   Quit Multiple
"RTN","LEXUH",78,0)
 Q:+($G(ANS))'>0 -1  S X=+($G(ANS))
"RTN","LEXUH",79,0)
 Q X
"RTN","LEXUH",80,0)
 ;
"RTN","LEXUH",81,0)
 ; Build Arrays
"RTN","LEXUH",82,0)
MA ;   Menu Array
"RTN","LEXUH",83,0)
 N MAX,TXT,LINE S MAX=0,TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","LEXUH",84,0)
 . N ACT,CAL,COM,CT,EXEC,ICR,LIN,PAR,PRE,RTN,TAG,TAGL,TXT1,TXT2,TXT3
"RTN","LEXUH",85,0)
 . S (TXT,TXT1,TXT2)="",EXEC="S TXT1=$T(APIS+"_LINE_"^LEXUH)" X EXEC
"RTN","LEXUH",86,0)
 . S TXT1=$TR($G(TXT1),"""",""),TXT=$P($G(TXT1),2) Q:'$L(TXT)
"RTN","LEXUH",87,0)
 . Q:'$L($P($G(TXT1),";;",3))  S TAG=$P($G(TXT1),";;",8),TAGL=$P($G(TXT1),";;",2)
"RTN","LEXUH",88,0)
 . S RTN=$P($G(TXT1),";;",3),ACT=$P($G(TXT1),";;",9),PAR=$P($G(TXT1),";;",10)
"RTN","LEXUH",89,0)
 . S LIN=$T(@(TAG_"^"_ACT)),ICR=$P($G(TXT1),";;",5),COM=$$TM($P(LIN,";",2,299))
"RTN","LEXUH",90,0)
 . S PRE=$P($G(TXT1),";;",7),CAL=$$TM($P(LIN,";",1))
"RTN","LEXUH",91,0)
 . S:CAL["(" CAL=$P(CAL,"(",1)_"^"_RTN_"("_$P(CAL,"(",2,299)
"RTN","LEXUH",92,0)
 . S:CAL'["(" CAL=CAL_"^"_RTN S:PRE["$$"&(CAL'["$$") CAL="$$"_CAL
"RTN","LEXUH",93,0)
 . Q:'$L(LIN)  Q:'$L(CAL)  Q:'$L(COM)
"RTN","LEXUH",94,0)
 . S TXT2=$P($G(TXT1),";;",7)_$S('$L($G(TAGL)):TAGL,1:TAG)_"^"_RTN_PAR
"RTN","LEXUH",95,0)
 . S TXT3=$P($G(TXT1),";;",11) S:$L(TXT2)>+(MAX) MAX=$L(TXT2)_"^"_TXT2
"RTN","LEXUH",96,0)
 . S TXT=TXT2,TXT=TXT_$J(" ",(43-$L(TXT)))_TXT3 S CT=$O(SEL(" "),-1)+1
"RTN","LEXUH",97,0)
 . S SEL(CT)=TXT,SEL(CT,"A")=TAG_"^"_ACT,SEL(CT,"I")=ICR,SEL(CT,"C")=COM,SEL(CT,"X")=CAL
"RTN","LEXUH",98,0)
 Q
"RTN","LEXUH",99,0)
OA ;   Output Array
"RTN","LEXUH",100,0)
 Q:'$L($G(LOC))  N TAG,RTN,COM,TXT,LINE,HDR S TAG=$P(LOC,"^",1),RTN=$P(LOC,"^",2)
"RTN","LEXUH",101,0)
 Q:'$L(TAG)  Q:'$L(RTN)  Q:'$L($$TM($T(@(TAG_"^"_RTN))))  Q:'$L(NAM)  Q:'$L(CAL)
"RTN","LEXUH",102,0)
 S:CAL="EN^LEXA1" CAL="^LEXA1" I $L($G(ICR)) S CAL=CAL_$J(" ",(65-$L(CAL)))_$G(ICR)
"RTN","LEXUH",103,0)
 S TEXT(1)=" "_CAL,TEXT(2)=" ",TEXT(3)=" "_NAM,TEXT(4)=" "
"RTN","LEXUH",104,0)
 S TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","LEXUH",105,0)
 . N EXEC,TXT2,TXT3,INC S (TXT,TXT2,TXT3)=""
"RTN","LEXUH",106,0)
 . S EXEC="S (TXT,TXT2)=$T("_TAG_"+"_LINE_"^"_RTN_")" X EXEC
"RTN","LEXUH",107,0)
 . S EXEC="S TXT3=$T("_TAG_"+"_(LINE+1)_"^"_RTN_")" X EXEC
"RTN","LEXUH",108,0)
 . S TXT2=$$TM(TXT2) I TXT2="Q"!(TXT2'[";") S TXT="" Q
"RTN","LEXUH",109,0)
 . S:TXT3'[";" TXT3="" S:TXT2[";" TXT2=" "_$P(TXT2,";",2,299)
"RTN","LEXUH",110,0)
 . I $L(TXT2),$L(TXT3) S INC=$O(COM(" "),-1)+1,COM(INC)=TXT2
"RTN","LEXUH",111,0)
 S LINE=0 F  S LINE=$O(COM(LINE)) Q:$L($$TM($G(COM(LINE))))  K COM(LINE)
"RTN","LEXUH",112,0)
 S LINE=999999 F  S LINE=$O(COM(LINE),-1) Q:$L($$TM($G(COM(LINE))))  K COM(LINE)
"RTN","LEXUH",113,0)
 S LINE=0 F  S LINE=$O(COM(LINE)) Q:+LINE'>0  D
"RTN","LEXUH",114,0)
 . N INC S INC=$O(TEXT(" "),-1)+1,TEXT(INC)=$G(COM(LINE))
"RTN","LEXUH",115,0)
 S LINE=$O(TEXT(" "),-1) S:+LINE>0 TEXT(0)=LINE
"RTN","LEXUH",116,0)
 K COM
"RTN","LEXUH",117,0)
 Q
"RTN","LEXUH",118,0)
 ; 
"RTN","LEXUH",119,0)
 ; Miscellaneous
"RTN","LEXUH",120,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXUH",121,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXUH",122,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXUH",123,0)
 Q X
"RTN","LEXUH",124,0)
APIS ;   List of APIs
"RTN","LEXUH",125,0)
 ;;LOOK;;LEXA;;"(LEXX,LEXAP,LEXLL,LEXSUB,DATE)";;2950;;1;;;;LOOK;;LEXA;;"(X,AP,LEN,SUB,CDT,SRC,CAT)";;Main Lexicon Lookup
"RTN","LEXUH",126,0)
 ;;;;LEXA1;;;;10006;;1;;;;EN;;LEXA1;;;;Lexicon Special Lookup
"RTN","LEXUH",127,0)
 ;;$$ICDSRCH;;LEX10CS;;"(TEXT,.ARRAY,DATE,LEN,FILTER)";;5681;;2;;$$;;ICDSRCH;;LEX10CS;;"(X,ARRAY,CDT,LEN,FIL)";;ICD-9/ICD-10 Diagnosis Lookup
"RTN","LEXUH",128,0)
 ;;$$DIAGSRCH;;LEX10CS;;"(TEXT,.ARRAY,DATE,LEN,FILTER)";;5681;;2;;$$;;DIAGSRCH;;LEX10CS;;"(X,ARRAY,CDT,LEN,FIL)";;ICD-10 Diagnosis Lookup
"RTN","LEXUH",129,0)
 ;;$$PCSDIG;;LEX10CS;;"(FRAG,DATE)";;5681;;2;;$$;;PCSDIG;;LEX10CS;;"(X,CDT)";;ICD-10 Procedure Lookup
"RTN","LEXUH",130,0)
 ;;$$CODELIST;;LEX10CS;;"(SYS,SPEC,SUB,DATE,LEN,FMT)";;5681;;2;;$$;;CODELIST;;LEX10CS2;;"(X,SPEC,SUB,CDT,LEN,FIL)";;Wild Card Code Lookup
"RTN","LEXUH",131,0)
 ;;CONFIG;;LEXSET;;"(LEXNS,LEXSS,DATE)";;1609;;1;;;;CONFIG;;LEXSET;;"(NS,SS,CDT)";;Setup Search Parameters
"RTN","LEXUH",132,0)
 ;;$$SC;;LEXU;;"(Y,STRING,DATE)";;5386;;1;;$$;;SC;;LEXU;;"(IEN,SEM,CDT)";;Filter Search by Semantics
"RTN","LEXUH",133,0)
 ;;$$SO;;LEXU;;"(Y,STRING,DATE)";;5386;;1;;$$;;SO;;LEXU;;"(IEN,SRC,CDT)";;Filter Search by Coding System
"RTN","LEXUH",134,0)
 ;;$$SCT;;LEXU;;"(Y,DATE)";;5679;;1;;$$;;SCT;;LEXU;;"(IEN,CDT)";;Filter by SNOMED CT (Human)
"RTN","LEXUH",135,0)
 ;;$$DX;;LEXU;;"(IEN,VDT)";;5679;;3;;$$;;DX;;LEXU;;"(IEN,CDT)";;Filter by Diagnosis System
"RTN","LEXUH",136,0)
 ;;$$ONE;;LEXU;;"(IEN,DATE,SAB)";;5679;;2;;$$;;ONE;;LEXU;;"(IEN,CDT,SAB)";;One Code for Source
"RTN","LEXUH",137,0)
 ;;$$ALL;;LEXU;;"(IEN,DATE,SAB)";;5679;;3;;$$;;ALL;;LEXU;;"(IEN,CDT,SAB)";;Get all Codes for a Source
"RTN","LEXUH",138,0)
 ;;$$CPTONE;;LEXU;;"(IEN,DATE)";;1573;;1;;$$;;CPTONE;;LEXU;;"(IEN,CDT)";;Get CPT Code
"RTN","LEXUH",139,0)
 ;;$$CPCONE;;LEXU;;"(IEN,DATE)";;1573;;3;;$$;;CPCONE;;LEXU;;"(IEN,CDT)";;Get HCPCS Code
"RTN","LEXUH",140,0)
 ;;$$ICDONE;;LEXU;;"(IEN,DATE)";;1573;;1;;$$;;ICDONE;;LEXU;;"(IEN,CDT)";;Get one ICD-9-CM Code
"RTN","LEXUH",141,0)
 ;;$$ICD;;LEXU;;"(IEN,DATE)";;1573;;3;;$$;;ICD;;LEXU;;"(IEN,CDT)";;Get all ICD-9-CM Codes
"RTN","LEXUH",142,0)
 ;;$$D10ONE;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;D10ONE;;LEXU;;"(IEN,CDT)";;Get one ICD-10-CM
"RTN","LEXUH",143,0)
 ;;$$D10;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;D10;;LEXU;;"(IEN,CDT)";;Get all ICD-10-CM Codes
"RTN","LEXUH",144,0)
 ;;$$P10ONE;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;P10ONE;;LEXU;;"(IEN,CDT)";;Get one ICD-10-PCS Code
"RTN","LEXUH",145,0)
 ;;$$DSMONE;;LEXU;;(IEN);;1573;;3;;$$;;DSMONE;;LEXU;;"(IEN,CDT)";;Get one DSM-IV Code
"RTN","LEXUH",146,0)
 ;;INFO;;LEXA;;"(IEN,DATE)";;1597;;3;;;;INFO;;LEXA;;"(X,CDT)";;Get Information about a Term
"RTN","LEXUH",147,0)
 ;;EN;;LEXCODE;;"(LEXSO,DATE)";;1614;;3;;;;EN;;LEXCODE;;"(SO,CDT)";;Get Terms associated with Code
"RTN","LEXUH",148,0)
 ;;$$HIST;;LEXU;;"(CODE,SYS,.ARY)";;5679;;2;;$$;;HIST;;LEXU4;;"(CODE,SYS,.ARY)";;Get Activation History
"RTN","LEXUH",149,0)
 ;;$$PERIOD;;LEXU;;"(CODE,SYS,ARY)";;5679;;2;;$$;;PERIOD;;LEXU4;;"(CODE,SYS,.ARY)";;Get Activation Periods
"RTN","LEXUH",150,0)
 ;;$$TAX;;LEX10CS;;"(TEXT,SRC,CDT,SUB,VER)";;5681;;2;;$$;;TAX;;LEX10TAX;;"(X,SRC,CDT,SUB,VER)";;Get Taxonomies
"RTN","LEXUH",151,0)
 ;;$$CSDATA;;LEXU;;"(CODE,CSYS,VDT,.ARY)";;5679;;2;;$$;;CSDATA;;LEXU2;;"(CODE,CSYS,CDT,ARY)";;Get Code Data
"RTN","LEXUH",152,0)
 ;;$$EXP;;LEXCODE;;"(CODE,SAB,DATE)";;5680;;3;;$$;;EXP;;LEXCODE;;"(SO,SAB,CDT)";;Get the Term for a Code
"RTN","LEXUH",153,0)
 ;;$$CAT;;LEXU;;(CODE);;5679;;2;;$$;;CAT;;LEX10DU;;(CODE);;Get ICD-10 Category
"RTN","LEXUH",154,0)
 ;;$$ISCAT;;LEXU;;(CODE);;5679;;2;;$$;;ISCAT;;LEX10DU;;(CODE);;Is an ICD-10 Code a Category
"RTN","LEXUH",155,0)
 ;;$$FREQ;;LEXU;;(TEXT);;5679;;2;;$$;;FREQ;;LEXU3;;(TEXT);;Get Frequency of Text
"RTN","LEXUH",156,0)
 ;;$$MAX;;LEXU;;(SYS);;5679;;2;;$$;;MAX;;LEXU3;;(SYS);;Maximum Number to Search
"RTN","LEXUH",157,0)
 ;;$$NXSAB;;LEXU;;"(SAB,REV)";;5679;;3;;$$;;NXSAB;;LEXU3;;"(SYS,REV)";;Get Next Source Abbrievation
"RTN","LEXUH",158,0)
 ;;$$PFI;;LEXU;;"(FRAG,CDT,.ARY)";;5679;;3;;$$;;PFI;;LEXU4;;"(FRAG,CDT,.ARY)";;Get Procedure Fragment Info
"RTN","LEXUH",159,0)
 ;;$$CSYS;;LEXU;;"(SYS)";;5679;;2;;$$;;CSYS;;LEXU3;;(SYS);;Get Coding System Info
"RTN","LEXUH",160,0)
 ;;$$IMPDATE;;LEXU;;(SAB);;5679;;2;;$$;;IMPDATE;;LEXU3;;(SYS);;Get System Implementation Date
"RTN","LEXUH",161,0)
 ;;$$LUPD;;LEXU;;"(SAB,DATE)";;5679;;3;;$$;;LUPD;;LEXU3;;"(SYS,CDT)";;Get System Last Updated
"RTN","LEXUH",162,0)
 ;;$$RUPD;;LEXU;;(SAB);;5679;;3;;$$;;RUPD;;LEXU3;;(SYS);;Get System Recent Update
"RTN","LEXUH",163,0)
 ;;$$CODE;;LEXTRAN;;"(CODE,SOURCE,DATE,ARRAY)";;4912;;3;;$$;;CODE;;LEXTRAN;;"(CODE,SRC,CDT,ARRAY)";;Get Concept for Code/Source
"RTN","LEXUH",164,0)
 ;;$$TEXT;;LEXTRAN;;"(TEXT,DATE,SUBSET,SOURCE,ARRAY)";;4913;;3;;$$;;TEXT;;LEXTRAN;;"(TEXT,CDT,SUB,SRC,ARRAY)";;Get Concept for Text/Source
"RTN","LEXUH",165,0)
 ;;$$TXT4CS;;LEXTRAN;;"(TEXT,SOURCE)";;4914;;3;;$$;;TXT4CS;;LEXTRAN;;"(TEXT,SRC,ARRAY,SUB)";;Is Text valid for an SCT code
"RTN","LEXUH",166,0)
 ;;$$VERSION;;LEXTRAN;;"(LEXSRC,LEXCODE,CDT)";;5011;;3;;$$;;VERSION;;LEXTRAN;;"(SRC,CODE,VDT)";;Get a Code's Version
"RTN","LEXUH",167,0)
 ;;$$GETASSN;;LEXTRAN1;;"(LEXCODE,LEXMAP,CDT,LEXRAY)";;5010;;3;;$$;;GETASSN;;LEXTRAN1;;"(CODE,MAP,CDT,ARRAY)";;Get Mapped Associations
"RTN","LEXUH",168,0)
 ;;$$GETFSN;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT)";;5007;;3;;$$;;GETFSN;;LEXTRAN1;;"(SRC,CODE,CDT)";;Get Fully Specified Name
"RTN","LEXUH",169,0)
 ;;$$GETPREF;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT)";;5008;;3;;$$;;GETPREF;;LEXTRAN1;;"(SRC,CODE,CDT)";;Get Preferred Term
"RTN","LEXUH",170,0)
 ;;$$GETSYN;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT,LEXRAY,LEXIENS)";;5006;;3;;$$;;GETSYN;;LEXTRAN1;;"(SRC,CODE,CDT,ARARY,IENS)";;Get Concept Synonyms
"RTN","LEXUH",171,0)
 ;;$$GETDES;;LEXTRAN1;;"(LEXSRC,LEXTEXT,CDT)";;5009;;3;;$$;;GETDES;;LEXTRAN1;;"(SRC,TEXT,CDT)";;Get Designation Code
"RTN","LEXUH",172,0)
 ;;EN;;LEX10CX;;;;5840;;4;;;;EN;;LEX10CX;;;;Get Suggested Code
"RTN","LEXUH",173,0)
 ;;EN2;;LEX10CX;;"(CODE,SAB)";;5840;;4;;;;EN2;;LEX10CX;;"(CODE,SYS)";;Get Suggested Code/Source
"RTN","LEXUH",174,0)
 ;;EN3;;LEX10CX;;"(CODE,SAB,.ARY,MAX)";;5840;;4;;;;EN3;;LEX10CX;;"(CODE,SYS,.ARY,MAX)";;Get Suggested Code (silent)
"RTN","LEXUH",175,0)
 ;;$$PAR;;LEXU;;"(TXT,.ARY)";;5679;;3;;$$;;PAR;;LEXU3;;"(TEXT,.ARY)";;Get Words from Text String
"RTN","LEXUH",176,0)
 ;;;;;;
"RTN","LEXXFI")
0^201^B61706578
"RTN","LEXXFI",1,0)
LEXXFI ;ISL/KER - File Info ;04/21/2014
"RTN","LEXXFI",2,0)
 ;;2.0;LEXICON UTILITY;**32,46,49,41,59,73,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI",3,0)
 ;               
"RTN","LEXXFI",4,0)
 ; Global Variables
"RTN","LEXXFI",5,0)
 ;    ^LEXM(0)            N/A
"RTN","LEXXFI",6,0)
 ;    ^TMP("LEX*",$J)     SACC 2.3.2.5.1
"RTN","LEXXFI",7,0)
 ;    ^TMP("LEXCNT")      SACC 2.3.2.5.1
"RTN","LEXXFI",8,0)
 ;    ^TMP("LEXCS")       SACC 2.3.2.5.1
"RTN","LEXXFI",9,0)
 ;    ^TMP("LEXI")        SACC 2.3.2.5.1
"RTN","LEXXFI",10,0)
 ;    ^TMP("LEXINS")      SACC 2.3.2.5.1
"RTN","LEXXFI",11,0)
 ;    ^TMP("LEXKID")      SACC 2.3.2.5.1
"RTN","LEXXFI",12,0)
 ;    ^TMP("LEXMSG")      SACC 2.3.2.5.1
"RTN","LEXXFI",13,0)
 ;               
"RTN","LEXXFI",14,0)
 ; External References
"RTN","LEXXFI",15,0)
 ;    $$DTIME^XUP         ICR   4409
"RTN","LEXXFI",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXXFI",17,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXFI",18,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXFI",19,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXFI",20,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXFI",21,0)
 ;    ^%ZISC              ICR  10089
"RTN","LEXXFI",22,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXFI",23,0)
 ;    ^XMD                ICR  10070
"RTN","LEXXFI",24,0)
 ;               
"RTN","LEXXFI",25,0)
 ; Newed by Post-Install LEX20nnP
"RTN","LEXXFI",26,0)
 ;   LEXBUILD  Build
"RTN","LEXXFI",27,0)
 ;   LEXCRE    Import Global Creation Date
"RTN","LEXXFI",28,0)
 ;   LEXIGHF   Import Global Host File
"RTN","LEXXFI",29,0)
 ;   LEXLREV   Revision
"RTN","LEXXFI",30,0)
 ;   LEXREQP   Required Patches
"RTN","LEXXFI",31,0)
 ;   LEXSHORT  Flag for Summary Install Message
"RTN","LEXXFI",32,0)
 ;
"RTN","LEXXFI",33,0)
 ; Newed by Post-Install LEXXGI
"RTN","LEXXFI",34,0)
 ;   LEXPROC   Protocol Name
"RTN","LEXXFI",35,0)
 ;   LEXRES    Install Results
"RTN","LEXXFI",36,0)
 ;   LEXSTART  Install Start Time
"RTN","LEXXFI",37,0)
 ;   
"RTN","LEXXFI",38,0)
 ; Other
"RTN","LEXXFI",39,0)
 ;   XPDA      Newed by KIDS during Install
"RTN","LEXXFI",40,0)
 ;   LEXCOUNT  Flag Checked $D() and not used
"RTN","LEXXFI",41,0)
 ;
"RTN","LEXXFI",42,0)
 Q
"RTN","LEXXFI",43,0)
 ; Checksums/Counts
"RTN","LEXXFI",44,0)
EN ;   For One or More File(s)
"RTN","LEXXFI",45,0)
 N LEXENV,LEXMET,LEXID
"RTN","LEXXFI",46,0)
 S LEXENV=$$ENV
"RTN","LEXXFI",47,0)
 Q:+LEXENV'>0
"RTN","LEXXFI",48,0)
 S LEXMET=$$MT^LEXXFI7
"RTN","LEXXFI",49,0)
 I '$L(LEXMET) W !!," Checksum Files (One or All) not Selected" Q
"RTN","LEXXFI",50,0)
 I $L($T(@(LEXMET_"^LEXXFI")))>0 W ! D @LEXMET
"RTN","LEXXFI",51,0)
 Q
"RTN","LEXXFI",52,0)
ONE ;   For ONE file
"RTN","LEXXFI",53,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",54,0)
 N LEXBEG,LEXELP,LEXEND,LEXFC,LEXFI,LEXLDR,LEXMOD,LEXMUL,LEXNM,LEXTCS
"RTN","LEXXFI",55,0)
 N LEXTND,LEXTT,LEXTXT
"RTN","LEXXFI",56,0)
 S LEXBEG=$$TIC^LEXXFI8,LEXMUL=0,LEXMOD=0
"RTN","LEXXFI",57,0)
 S LEXFI=$$FI^LEXXFI7 I +LEXFI'>0 W !!," Checksum File not Selected" Q
"RTN","LEXXFI",58,0)
 S LEXLDR=$$LDR^LEXXFI8(LEXFI),LEXMOD=LEXMOD+($$MOD^LEXXFI8(LEXFI))
"RTN","LEXXFI",59,0)
 S LEXNM=$$FN^LEXXFI8(LEXFI),LEXTT=" "
"RTN","LEXXFI",60,0)
 W !
"RTN","LEXXFI",61,0)
 D ONE^LEXXFI2(LEXFI),ONE^LEXXFI3(LEXFI),ONE^LEXXFI5(LEXFI)
"RTN","LEXXFI",62,0)
 S LEXEND=$$TIC^LEXXFI8,LEXELP=$$ELAP^LEXXFI8(LEXBEG,LEXEND)
"RTN","LEXXFI",63,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXFI",64,0)
 I +LEXBEG>0,LEXEND>0,$L(LEXELP) D TIM
"RTN","LEXXFI",65,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",66,0)
 Q
"RTN","LEXXFI",67,0)
ALL ;   For ALL files
"RTN","LEXXFI",68,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",69,0)
 K ^TMP("LEXINS",$J),^TMP("LEXKID",$J) S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFI",70,0)
 N LEXBEG,LEXELP,LEXEND,LEXFC,LEXMOD,LEXMUL,LEXTCS,LEXTND,LEXID
"RTN","LEXXFI",71,0)
 S LEXID="LEXKID",LEXBEG=$$TIC^LEXXFI8,LEXMUL=1,(LEXTND,LEXTCS,LEXMOD,LEXFC)=0
"RTN","LEXXFI",72,0)
 D:'$D(LEXPOST) HDR
"RTN","LEXXFI",73,0)
 I '$D(LEXSHORT) D ALL^LEXXFI5,ALL^LEXXFI2,ALL^LEXXFI3
"RTN","LEXXFI",74,0)
 S LEXEND=$$TIC^LEXXFI8 S LEXELP=$$ELAP^LEXXFI8(LEXBEG,LEXEND)
"RTN","LEXXFI",75,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXFI",76,0)
 I +LEXBEG>0,LEXEND>0,$L(LEXELP) D TIM
"RTN","LEXXFI",77,0)
 D:$D(LEXSEND)!($D(LEXPOST)) EN^LEXXII K ^LEXM(0,"PRO") D:$D(ZTQUEUED) MAIL
"RTN","LEXXFI",78,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFI",79,0)
 . N LEXI S LEXI=0 F  S LEXI=$O(^TMP("LEXKID",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",80,0)
 . . W !,$E($G(^TMP("LEXKID",$J,LEXI)),1,79)
"RTN","LEXXFI",81,0)
 D KILL
"RTN","LEXXFI",82,0)
 Q
"RTN","LEXXFI",83,0)
 ;
"RTN","LEXXFI",84,0)
POST ; Entry Point for Post-Install Message
"RTN","LEXXFI",85,0)
 N LEXPOST S LEXPOST=""
"RTN","LEXXFI",86,0)
 ;
"RTN","LEXXFI",87,0)
SEND ; Send Message
"RTN","LEXXFI",88,0)
 N LEXDESC,LEXENV,LEXP,LEXACCT,LEXPRO,LEXPRON,LEXSEND,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTQUEUED,ZTREQ
"RTN","LEXXFI",89,0)
 S LEXP=0,LEXENV=$$ENV Q:+LEXENV'>0  S LEXSEND="",LEXPRON="LEXICAL SERVICES UPDATE",LEXPRO=$G(^LEXM(0,"PRO"))
"RTN","LEXXFI",90,0)
 S:+LEXPRO>0 LEXPRO=$$FMTE^XLFDT(LEXPRO,"1"),LEXP=1
"RTN","LEXXFI",91,0)
 S LEXACCT=$$U^LEXXFI7 S ZTSAVE("LEXACCT")=""
"RTN","LEXXFI",92,0)
 S ZTRTN="ALL^LEXXFI",ZTSAVE("LEXSEND")="",ZTSAVE("LEXPOST")=""
"RTN","LEXXFI",93,0)
 S:$D(LEXCOUNT) ZTSAVE("LEXCOUNT")=""
"RTN","LEXXFI",94,0)
 I $L($G(LEXPRO)),$L($G(LEXPRON)),+$G(LEXP)>0 S ZTSAVE("LEXPRO")="",ZTSAVE("LEXPRON")=""
"RTN","LEXXFI",95,0)
 S:$D(LEXPROC)&($O(LEXPROC(0))>0) ZTSAVE("LEXPROC(")=""
"RTN","LEXXFI",96,0)
 S:$D(LEXLREV) ZTSAVE("LEXLREV")=""
"RTN","LEXXFI",97,0)
 S:$D(LEXREQP) ZTSAVE("LEXREQP")=""
"RTN","LEXXFI",98,0)
 S:$L($G(LEXSUBH)) ZTSAVE("LEXSUBH")=""
"RTN","LEXXFI",99,0)
 S:$D(LEXPTYPE) ZTSAVE("LEXPTYPE")=""
"RTN","LEXXFI",100,0)
 S:$D(LEXBUILD) ZTSAVE("LEXBUILD")=""
"RTN","LEXXFI",101,0)
 S:$D(LEXSHORT) ZTSAVE("LEXSHORT")=""
"RTN","LEXXFI",102,0)
 S:$D(LEXIGHF) ZTSAVE("LEXIGHF")=""
"RTN","LEXXFI",103,0)
 S:$D(LEXCRE) ZTSAVE("LEXCRE")=""
"RTN","LEXXFI",104,0)
 S:$D(LEXSTART) ZTSAVE("LEXSTART")=""
"RTN","LEXXFI",105,0)
 S:$D(LEXID) ZTSAVE("LEXID")=""
"RTN","LEXXFI",106,0)
 S:$D(LEXRES) ZTSAVE("LEXRES")=""
"RTN","LEXXFI",107,0)
 S:$D(XPDA) ZTSAVE("XPDA")=""
"RTN","LEXXFI",108,0)
 S (LEXDESC,ZTDESC)="Post-Install File Counts "
"RTN","LEXXFI",109,0)
 S:$D(LEXSHORT) (LEXDESC,ZTDESC)="Post-Install Summary"
"RTN","LEXXFI",110,0)
 S ZTDTH=$H,ZTIO=""
"RTN","LEXXFI",111,0)
 D ^%ZTLOAD
"RTN","LEXXFI",112,0)
 W:+($G(ZTSK))>0 !!,"  ",LEXDESC,!,"  Queued Task #",+($G(ZTSK)) W !
"RTN","LEXXFI",113,0)
 D ^%ZISC
"RTN","LEXXFI",114,0)
 Q
"RTN","LEXXFI",115,0)
MAIL ; Mail global array in message
"RTN","LEXXFI",116,0)
 N DIFROM,LEXPRI,LEXADR,LEXI,LEXM,LEXSUB,XCNP,XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ
"RTN","LEXXFI",117,0)
 I '$D(LEXSHORT),+$G(^TMP("LEXCS",$J,0))'>0 G MAILQ
"RTN","LEXXFI",118,0)
 K ^TMP("LEXMSG",$J)
"RTN","LEXXFI",119,0)
 S LEXSUB="Lexicon/ICD/CPT Installation"
"RTN","LEXXFI",120,0)
 S:$L($G(LEXBUILD)) LEXSUB=$G(LEXBUILD)_" Installation"
"RTN","LEXXFI",121,0)
 S LEXPRI=$$ADR^LEXXFI8
"RTN","LEXXFI",122,0)
 G:'$L(LEXPRI) MAILQ
"RTN","LEXXFI",123,0)
 S LEXPRI="G.LEXINS@"_LEXPRI
"RTN","LEXXFI",124,0)
 S LEXADR=$$GET1^DIQ(200,+($G(DUZ)),.01)
"RTN","LEXXFI",125,0)
 G:'$L(LEXADR) MAILQ
"RTN","LEXXFI",126,0)
 S U="^",XMSUB="LEX/ICD/CPT File Checksums - "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","LEXXFI",127,0)
 S:$D(LEXCOUNT) XMSUB="LEX/ICD/CPT File Checksums/Counts - "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","LEXXFI",128,0)
 S:$L($G(LEXBUILD)) XMSUB=$G(LEXBUILD)_" File Checksums"
"RTN","LEXXFI",129,0)
 I $L($G(LEXBUILD)),$D(LEXCOUNT) S XMSUB=$G(LEXBUILD)_" File Checksums/Counts"
"RTN","LEXXFI",130,0)
 S:$D(LEXPOST) XMSUB=LEXSUB
"RTN","LEXXFI",131,0)
 S LEXI=0 F  S LEXI=$O(^TMP("LEXKID",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",132,0)
 . S LEXM=+($O(^TMP("LEXMSG",$J," "),-1))+1
"RTN","LEXXFI",133,0)
 . S ^TMP("LEXMSG",$J,LEXM,0)=$E($G(^TMP("LEXKID",$J,LEXI)),1,79)
"RTN","LEXXFI",134,0)
 . S ^TMP("LEXMSG",$J,0)=LEXM
"RTN","LEXXFI",135,0)
 K ^TMP("LEXKID",$J)
"RTN","LEXXFI",136,0)
 I '$D(LEXSHORT) S LEXI=0 F  S LEXI=$O(^TMP("LEXCS",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",137,0)
 . S LEXM=+($O(^TMP("LEXMSG",$J," "),-1))+1
"RTN","LEXXFI",138,0)
 . S ^TMP("LEXMSG",$J,LEXM,0)=$E($G(^TMP("LEXCS",$J,LEXI)),1,79)
"RTN","LEXXFI",139,0)
 . S ^TMP("LEXMSG",$J,0)=LEXM
"RTN","LEXXFI",140,0)
 K ^TMP("LEXCS",$J) G:'$D(^TMP("LEXMSG",$J)) MAILQ G:+($G(^TMP("LEXMSG",$J,0)))'>0 MAILQ
"RTN","LEXXFI",141,0)
 S XMY(LEXPRI)="",XMY(LEXADR)="",XMTEXT="^TMP(""LEXMSG"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEXXFI",142,0)
MAILQ ; Quit Mail
"RTN","LEXXFI",143,0)
 D KILL K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","LEXXFI",144,0)
 Q
"RTN","LEXXFI",145,0)
 ;
"RTN","LEXXFI",146,0)
 ; Miscellaneous
"RTN","LEXXFI",147,0)
HDR ;   Header
"RTN","LEXXFI",148,0)
 N LEXD,LEXP,LEXN,LEXT,LEXU,LEXA,LEXACT,LEXI,LEXF,LEXMUL S LEXF=0 S LEXACT=$G(LEXACCT),LEXA=""
"RTN","LEXXFI",149,0)
 S:$L($P(LEXACT,"^",1))&($L($P(LEXACT,"^",1))) LEXA=LEXACT
"RTN","LEXXFI",150,0)
 S:'$L($G(LEXA)) LEXA=$$U^LEXXFI7 S LEXU=$$P^LEXXFI7,LEXD=$$A^LEXXFI7 D TT^LEXXFI8("","Status")
"RTN","LEXXFI",151,0)
 S LEXT="" S:$L(LEXD) LEXT="   As of:       "_LEXD
"RTN","LEXXFI",152,0)
 I $L(LEXD) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",153,0)
 S LEXT="",LEXI=$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXFI",154,0)
 I $L($P(LEXA,",",1))>3,$L($P(LEXA,"^",2)) S LEXI="["_$P(LEXA,",",1)_"]"
"RTN","LEXXFI",155,0)
 S:$L(LEXI)&($L($P(LEXA,"^",2))) LEXI=LEXI_"  "_$P(LEXA,"^",2)
"RTN","LEXXFI",156,0)
 S LEXT="" S:$L(LEXI) LEXT="   In Account:  "_LEXI
"RTN","LEXXFI",157,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",158,0)
 S LEXN=$P(LEXU,"^",1),LEXP=$P(LEXU,"^",2)
"RTN","LEXXFI",159,0)
 S LEXT="" S:$L(LEXN) LEXT="   Maint By:    "
"RTN","LEXXFI",160,0)
 S:$L(LEXN) LEXT=LEXT_LEXN S:$L(LEXP)&($L(LEXN)) LEXT=LEXT_"   "_LEXP
"RTN","LEXXFI",161,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",162,0)
 S LEXT="" S:$L($G(LEXBUILD)) LEXT="   Build:       "_$G(LEXBUILD)
"RTN","LEXXFI",163,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",164,0)
 S LEXT="" I $L($G(LEXPRO))&($L($G(LEXPRON))) D
"RTN","LEXXFI",165,0)
 . S LEXT="   Protocol:    "_LEXPRON_" invoked "_LEXPRO
"RTN","LEXXFI",166,0)
 . I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",167,0)
 D BL^LEXXFI8
"RTN","LEXXFI",168,0)
 Q
"RTN","LEXXFI",169,0)
TIM ;   Time
"RTN","LEXXFI",170,0)
 Q:$D(LEXPOST)  Q:+($G(LEXBEG))'>0  Q:+($G(LEXEND))'>0  Q:'$L($G(LEXELP))
"RTN","LEXXFI",171,0)
 D BL^LEXXFI8,TL^LEXXFI8(("   Started:   "_$TR($$FMTE^XLFDT(LEXBEG),"@"," ")))
"RTN","LEXXFI",172,0)
 D TL^LEXXFI8(("   Finished:  "_$TR($$FMTE^XLFDT(LEXEND),"@"," ")))
"RTN","LEXXFI",173,0)
 D TL^LEXXFI8(("   Elapsed:   "_LEXELP)),BL^LEXXFI8
"RTN","LEXXFI",174,0)
 Q
"RTN","LEXXFI",175,0)
ENV(X) ;   Environment check
"RTN","LEXXFI",176,0)
 N LEXNM D HOME^%ZIS S U="^",DT=$$DT^XLFDT
"RTN","LEXXFI",177,0)
 I +($G(DUZ))'>0 W !!,"    User (DUZ) not defined",! Q 0
"RTN","LEXXFI",178,0)
 S LEXNM=$$GET1^DIQ(200,+($G(DUZ)),.01)
"RTN","LEXXFI",179,0)
 I '$L(LEXNM) W !!,"    Invalid User (DUZ) defined",! Q 0
"RTN","LEXXFI",180,0)
 S DTIME=$$DTIME^XUP(+($G(DUZ)))
"RTN","LEXXFI",181,0)
 Q 1
"RTN","LEXXFI",182,0)
CLR ;   Clear ^TMP("LEXCS",$J)
"RTN","LEXXFI",183,0)
 K ^TMP("LEXCS",$J) N LEXBUILD,LEXCOUNT,LEXCRE,LEXIGHF,LEXLREV
"RTN","LEXXFI",184,0)
 N LEXPROC,LEXREQP,LEXRES,LEXSHORT,LEXSTART,XPDA
"RTN","LEXXFI",185,0)
 Q
"RTN","LEXXFI",186,0)
KILL ;   Kill all ^TMP("LEX**"
"RTN","LEXXFI",187,0)
 K ^TMP("LEXCNT",$J),^TMP("LEXCS",$J),^TMP("LEXI",$J)
"RTN","LEXXFI",188,0)
 K ^TMP("LEXINS",$J),^TMP("LEXMSG",$J),^TMP("LEXKID",$J)
"RTN","LEXXFI",189,0)
 Q
"RTN","LEXXFI",190,0)
 ;;
"RTN","LEXXFI",191,0)
 ;;
"RTN","LEXXFI",192,0)
FILES ;;
"RTN","LEXXFI",193,0)
 ;;;;757
"RTN","LEXXFI",194,0)
 ;;1;;757.001
"RTN","LEXXFI",195,0)
 ;;1;;757.01
"RTN","LEXXFI",196,0)
 ;;;;757.011
"RTN","LEXXFI",197,0)
 ;;;;757.014
"RTN","LEXXFI",198,0)
 ;;;;757.02
"RTN","LEXXFI",199,0)
 ;;;;757.03
"RTN","LEXXFI",200,0)
 ;;1;;757.04
"RTN","LEXXFI",201,0)
 ;;1;;757.05
"RTN","LEXXFI",202,0)
 ;;1;;757.06
"RTN","LEXXFI",203,0)
 ;;;;757.1
"RTN","LEXXFI",204,0)
 ;;;;757.11
"RTN","LEXXFI",205,0)
 ;;;;757.12
"RTN","LEXXFI",206,0)
 ;;;;757.13
"RTN","LEXXFI",207,0)
 ;;;;757.14
"RTN","LEXXFI",208,0)
 ;;1;;757.2
"RTN","LEXXFI",209,0)
 ;;1;;757.21
"RTN","LEXXFI",210,0)
 ;;;;757.3
"RTN","LEXXFI",211,0)
 ;;;;757.31
"RTN","LEXXFI",212,0)
 ;;1;;757.4
"RTN","LEXXFI",213,0)
 ;;1;;757.41
"RTN","LEXXFI",214,0)
 ;;;;80
"RTN","LEXXFI",215,0)
 ;;;;80.1
"RTN","LEXXFI",216,0)
 ;;;;80.3
"RTN","LEXXFI",217,0)
 ;;;;81
"RTN","LEXXFI",218,0)
 ;;;;81.1
"RTN","LEXXFI",219,0)
 ;;1;;81.2
"RTN","LEXXFI",220,0)
 ;;;;81.3
"RTN","LEXXFI",221,0)
 ;;
"RTN","LEXXFI",222,0)
 ;;
"RTN","LEXXFI",223,0)
 ;;
"RTN","LEXXFI",224,0)
 Q
"RTN","LEXXFI3")
0^202^B36033514
"RTN","LEXXFI3",1,0)
LEXXFI3 ;ISL/KER - File Info - Record Count ;04/21/2014
"RTN","LEXXFI3",2,0)
 ;;2.0;LEXICON UTILITY;**32,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI3",3,0)
 ;               
"RTN","LEXXFI3",4,0)
 ; Global Variables
"RTN","LEXXFI3",5,0)
 ;    ^TMP("LEXCNT")      SACC 2.3.2.5.1
"RTN","LEXXFI3",6,0)
 ;               
"RTN","LEXXFI3",7,0)
 ; External References
"RTN","LEXXFI3",8,0)
 ;    None
"RTN","LEXXFI3",9,0)
 ;               
"RTN","LEXXFI3",10,0)
 Q
"RTN","LEXXFI3",11,0)
ONE(X) ; Record Count for a File
"RTN","LEXXFI3",12,0)
 N LEXFI K ^TMP("LEXCNT",$J) S LEXFI=+($G(X)) Q:+X'>0  K LEXMD D CNT(LEXFI),DSP^LEXXFI4
"RTN","LEXXFI3",13,0)
 Q
"RTN","LEXXFI3",14,0)
ALL ; Record Count for a File(s)
"RTN","LEXXFI3",15,0)
 N LEXCTR,LEXEX,LEXFI,LEXLINE,LEXRTN,LEXTAG K ^TMP("LEXCNT",$J)
"RTN","LEXXFI3",16,0)
 S LEXFI="",LEXTAG="FILES",LEXRTN="LEXXFI",LEXCTR=0
"RTN","LEXXFI3",17,0)
 F  D  Q:LEXFI=""
"RTN","LEXXFI3",18,0)
 . S LEXCTR=LEXCTR+1,LEXEX="S LEXLINE=$T("_LEXTAG_"+"_LEXCTR_"^"_LEXRTN_")" X LEXEX
"RTN","LEXXFI3",19,0)
 . S LEXFI=$P(LEXLINE,";;",3) I '$L(LEXFI) K LEXMD D DSP^LEXXFI4 Q
"RTN","LEXXFI3",20,0)
 . Q:'$L(LEXFI)  D CNT(LEXFI)
"RTN","LEXXFI3",21,0)
 Q
"RTN","LEXXFI3",22,0)
CNT(X) ; Count Entries for file X
"RTN","LEXXFI3",23,0)
 N DIC,LEX,LEXCFI,LEXCNT,LEXCRT,LEXEXIT,LEXFF,LEXFI,LEXI,LEXIEN
"RTN","LEXXFI3",24,0)
 N LEXIENS,LEXIND,LEXLS,LEXNCT,LEXOF,LEXOND,LEXPCD,LEXPCE,LEXPCI
"RTN","LEXXFI3",25,0)
 N LEXPCO,LEXPCT,LEXREC,LEXSL
"RTN","LEXXFI3",26,0)
 S LEXFF=$G(X) Q:'$L(LEXFF)  Q:+LEXFF'>0
"RTN","LEXXFI3",27,0)
 D DDI^LEXXFI6(LEXFF,.LEX) Q:'$D(LEX("DD",+LEXFF))
"RTN","LEXXFI3",28,0)
 S LEXFI=$$PAR(+LEXFF) Q:+LEXFI'>0  K LEX
"RTN","LEXXFI3",29,0)
 I '$D(LEX("DD",LEXFI)) D DDI^LEXXFI6(LEXFI,.LEX)
"RTN","LEXXFI3",30,0)
 Q:'$D(LEX("DD",+LEXFI))  Q:'$D(LEX("DIC",+LEXFI,0,"GL"))
"RTN","LEXXFI3",31,0)
 Q:$D(^TMP("LEXCNT",$J,"B",+LEXFI))  S ^TMP("LEXCNT",$J,"B",+LEXFI)=""
"RTN","LEXXFI3",32,0)
 S ^TMP("LEXCNT",$J,"CNT")=+($G(^TMP("LEXCNT",$J,"CNT")))+1
"RTN","LEXXFI3",33,0)
 S (LEXEXIT,LEXNCT,LEXIENS,LEXREC,LEXPCO)=0,DIC=$G(LEX("DIC",+LEXFI,0,"GL"))
"RTN","LEXXFI3",34,0)
 Q:'$L(DIC)  S LEXOND=DIC_"0)",LEXCRT=DIC,LEXOF=$P(@LEXOND,"^",4)
"RTN","LEXXFI3",35,0)
 S:$E(DIC,$L(DIC))="(" LEXCRT=$E(DIC,1,($L(DIC)-1))
"RTN","LEXXFI3",36,0)
 S:$E(DIC,$L(DIC))="," LEXCRT=$E(DIC,1,($L(DIC)-1))_")"
"RTN","LEXXFI3",37,0)
 F  S LEXOND=$Q(@LEXOND) Q:LEXOND=""!(LEXOND'[DIC)  D NODE Q:LEXEXIT
"RTN","LEXXFI3",38,0)
 D:+($O(LEXCNT(0)))>0 SAV
"RTN","LEXXFI3",39,0)
 S:+LEXIENS>0 ^TMP("LEXCNT",$J,"IENS",+LEXFI)=(LEXIENS+1)
"RTN","LEXXFI3",40,0)
 I $D(^TMP("LEXCNT","EXIT")) S LEXEXIT=1 K ^TMP("LEXCNT","EXIT")
"RTN","LEXXFI3",41,0)
 Q
"RTN","LEXXFI3",42,0)
NODE ; Count a Node as a Record?
"RTN","LEXXFI3",43,0)
 ;   Do not Count Non-Zero Nodes
"RTN","LEXXFI3",44,0)
 Q:$E(LEXOND,($L(LEXOND)-2),$L(LEXOND))'[",0)"
"RTN","LEXXFI3",45,0)
 ;   Do not Count Header Nodes
"RTN","LEXXFI3",46,0)
 I DIC'[",",LEXOND[",0)",$L(LEXOND,",")#2>0 Q
"RTN","LEXXFI3",47,0)
 I DIC[",",LEXOND[",0)",$L(LEXOND,",")#2'>0 Q
"RTN","LEXXFI3",48,0)
 S LEXIND=$P(LEXOND,DIC,2),LEXIEN=$P(LEXIND,",0)",1) S:+LEXIEN=LEXIEN LEXIENS=LEXIENS+1
"RTN","LEXXFI3",49,0)
 ;   Do not Count Cross-References (Exit Loop)
"RTN","LEXXFI3",50,0)
 I +($P(LEXIND,",",1))'=$P(LEXIND,",",1) S LEXEXIT=1 Q
"RTN","LEXXFI3",51,0)
 ;   Quit if no Sub-Script List
"RTN","LEXXFI3",52,0)
 S LEXSL=$P(LEXIND,")",1) I '$L(LEXSL) S LEXEXIT=1 Q
"RTN","LEXXFI3",53,0)
 ; Percent Complete
"RTN","LEXXFI3",54,0)
 S (LEXPCT,LEXPCE)="",LEXPCI=LEXPCO I LEXIENS>0,LEXOF>0 D
"RTN","LEXXFI3",55,0)
 . S LEXPCT=(LEXIENS/LEXOF)*100,LEXPCI=+($P(LEXPCT,".",1)),LEXPCD=+($E($P(LEXPCT,".",2),1,2))
"RTN","LEXXFI3",56,0)
 . S:$L(LEXPCD)=1 LEXPCD=LEXPCD_"0" S:$L(LEXPCD)=1 LEXPCD=LEXPCD_"0" S LEXPCE=LEXPCI_"%"
"RTN","LEXXFI3",57,0)
 S LEXPCO=LEXPCI
"RTN","LEXXFI3",58,0)
 ;   List Subscripts
"RTN","LEXXFI3",59,0)
 S LEXNCT=LEXNCT+1 K LEXLS D LS(LEXSL,LEXFI) Q:'$D(LEXLS)
"RTN","LEXXFI3",60,0)
 S LEXCFI=$G(LEXLS("FIL")) Q:+LEXCFI'>0  Q:'$D(LEX("DD",+LEXCFI,0))
"RTN","LEXXFI3",61,0)
 S LEXCNT(+LEXCFI)=+($G(LEXCNT(+LEXCFI)))+1,LEXREC=LEXREC+1
"RTN","LEXXFI3",62,0)
 I LEXREC#10000'>0 S:$D(^TMP("LEXCNT","EXIT")) LEXEXIT=1
"RTN","LEXXFI3",63,0)
 Q
"RTN","LEXXFI3",64,0)
LS(X,Y) ; List Subscripts    X = Subscripts Y = File
"RTN","LEXXFI3",65,0)
 N LEXFI,LEXFLD,LEXI,LEXND,LEXNDI,LEXSB,LEXSF,LEXSFI,LEXSFN,LEXSL
"RTN","LEXXFI3",66,0)
 S LEXSL=X Q:'$L(LEXSL)  S LEXFI=+($G(Y)) Q:+LEXFI'>0  Q:'$D(LEX("DIC",+LEXFI,0,"GL"))
"RTN","LEXXFI3",67,0)
 K LEXLS S LEXLS("CNT")=1 F LEXI=1:1 Q:'$L($P(LEXSL,",",LEXI))  D
"RTN","LEXXFI3",68,0)
 . S LEXSB=$P(LEXSL,",",LEXI) I LEXI#2 D
"RTN","LEXXFI3",69,0)
 . . S LEXLS("DA",0)=+($G(LEXLS("DA",0)))+1,LEXLS("DA",+($G(LEXLS("DA",0))))=LEXSB
"RTN","LEXXFI3",70,0)
 . . S:+LEXSB'=LEXSB LEXLS("CNT")=0 S:LEXSB="0" LEXLS("CNT")=0
"RTN","LEXXFI3",71,0)
 . I '(LEXI#2) D
"RTN","LEXXFI3",72,0)
 . . S LEXLS("ND",0)=+($G(LEXLS("ND",0)))+1,LEXLS("ND",+($G(LEXLS("ND",0))))=LEXSB
"RTN","LEXXFI3",73,0)
 S LEXSF=LEXFI,LEXSFN=0,LEXNDI=0 F  S LEXNDI=$O(LEXLS("ND",LEXNDI)) Q:+LEXNDI=0  D
"RTN","LEXXFI3",74,0)
 . S LEXND=$G(LEXLS("ND",LEXNDI)) Q:'$L(LEXND)
"RTN","LEXXFI3",75,0)
 . S LEXND=$TR(LEXND,"""","") I '$L(LEXND) S LEXSF="ERR" Q
"RTN","LEXXFI3",76,0)
 . I '$O(LEX("DD",+LEXSF,"GL",LEXND,0))>0 S LEXSFN=LEXND
"RTN","LEXXFI3",77,0)
 . Q:'$D(LEX("DD",+LEXSF,"GL",LEXND,0))
"RTN","LEXXFI3",78,0)
 . S LEXFLD=$O(LEX("DD",+LEXSF,"GL",LEXND,0,0)) I +LEXFLD'>0 S LEXSF="ERR" Q
"RTN","LEXXFI3",79,0)
 . S LEXSFI=$G(LEX("DD",+LEXSF,+LEXFLD,0))
"RTN","LEXXFI3",80,0)
 . S LEXSFI=+($P(LEXSFI,"^",2)) I +LEXSFI'>0 S LEXSF="ERR" Q
"RTN","LEXXFI3",81,0)
 . S:$D(LEX("DD",+LEXSFI,0)) LEXSF=+LEXSFI
"RTN","LEXXFI3",82,0)
 S LEXLS("FIL")=LEXSF
"RTN","LEXXFI3",83,0)
 S LEXLS("ND")=LEXSFN
"RTN","LEXXFI3",84,0)
 K:LEXSF="ERR" LEXLS("FIL")
"RTN","LEXXFI3",85,0)
 K:+($G(LEXLS("CNT")))'>0 LEXLS
"RTN","LEXXFI3",86,0)
 I $O(LEXLS("ND"," "),-1)>0,$G(LEXLS("ND",$O(LEXLS("ND"," "),-1)))'="0" K LEXLS
"RTN","LEXXFI3",87,0)
 Q
"RTN","LEXXFI3",88,0)
SAV ; Save Counts in ^TMP("LEXCNT",$J)
"RTN","LEXXFI3",89,0)
 N LEXGRND,LEXID,LEXFI,LEXLVL,LEXNAM,LEXPAR,LECTITL,LEXTOT,LEXTYP
"RTN","LEXXFI3",90,0)
 S LEXFI=0 F  S LEXFI=$O(LEXCNT(LEXFI)) Q:+LEXFI=0  D
"RTN","LEXXFI3",91,0)
 . N LEXNAM,LEXTITL,LEXTOT,LEXTYP
"RTN","LEXXFI3",92,0)
 . S LEXNAM=$O(LEX("DD",LEXFI,0,"NM","")) Q:'$L(LEXNAM)
"RTN","LEXXFI3",93,0)
 . S LEXPAR=$$PAR(+LEXFI) Q:+LEXPAR=0  Q:'$D(LEX("DIC",+LEXPAR,0,"GL"))
"RTN","LEXXFI3",94,0)
 . S LEXTOT=+($G(LEXCNT(LEXFI))),LEXGRND=+($G(LEXGRND))+LEXTOT
"RTN","LEXXFI3",95,0)
 . S LEXTYP=$S($D(LEX("DD",+LEXFI))&('$D(LEX("DIC",+LEXFI))):"Sub-File",1:"File")
"RTN","LEXXFI3",96,0)
 . S LEXTITL=LEXTYP_" #"_LEXFI,^TMP("LEXCNT",$J,LEXPAR,0)=LEXGRND
"RTN","LEXXFI3",97,0)
 . S ^TMP("LEXCNT",$J,LEXPAR,LEXFI)=LEXTOT_"^"_LEXNAM_"^"_LEXTITL
"RTN","LEXXFI3",98,0)
 . S LEXID=$$ID(LEXFI),LEXLVL=$$LVL(LEXFI)
"RTN","LEXXFI3",99,0)
 . S:$L(LEXID) ^TMP("LEXCNT",$J,"ORDER",+LEXPAR,(LEXID_";"))=LEXPAR_"^"_LEXFI_"^"_LEXLVL
"RTN","LEXXFI3",100,0)
 . S:'$D(^TMP("LEXCNT",$J,"LVL")) ^TMP("LEXCNT",$J,"LVL")=1
"RTN","LEXXFI3",101,0)
 . S:'$D(^TMP("LEXCNT",$J,"HSF")) ^TMP("LEXCNT",$J,"HSF")=0
"RTN","LEXXFI3",102,0)
 . S:'$D(^TMP("LEXCNT",$J,"SUB")) ^TMP("LEXCNT",$J,"SUB")=0
"RTN","LEXXFI3",103,0)
 . S:+LEXLVL>+($G(^TMP("LEXCNT",$J,"LVL"))) ^TMP("LEXCNT",$J,"LVL")=+LEXLVL
"RTN","LEXXFI3",104,0)
 . S:$L((LEXID_";"),";")>2 ^TMP("LEXCNT",$J,"HSF")=1
"RTN","LEXXFI3",105,0)
 . S:$L((LEXID_";"),";")>2 ^TMP("LEXCNT",$J,"SUB")=+($G(^TMP("LEXCNT",$J,"SUB")))+1
"RTN","LEXXFI3",106,0)
 . S LEXID=$P(LEXID,";",1) S:$L(LEXID) LEXID=LEXID_";~;"
"RTN","LEXXFI3",107,0)
 . S:$L(LEXID) ^TMP("LEXCNT",$J,"ORDER",+LEXPAR,(LEXID_";"))=LEXPAR_"^0^0"
"RTN","LEXXFI3",108,0)
 Q
"RTN","LEXXFI3",109,0)
PAR(X) ; Parent File        X = File/Sub-File Number
"RTN","LEXXFI3",110,0)
 N LEXPAR,LEXSUB S LEXSUB=$G(X)  Q:+LEXSUB'>0 ""
"RTN","LEXXFI3",111,0)
 I '$D(LEX("DD",+LEXSUB)) D DDI^LEXXFI6(+LEXSUB,.LEX)
"RTN","LEXXFI3",112,0)
 Q:'$D(LEX("DD",+LEXSUB,0)) ""  I '$D(LEX("DD",+LEXSUB,0,"UP")) S X=LEXSUB Q X
"RTN","LEXXFI3",113,0)
 S LEXPAR=LEXSUB F  Q:('$D(LEX("DD",+LEXSUB,0,"UP")))  D
"RTN","LEXXFI3",114,0)
 . S (LEXSUB,LEXPAR)=$G(LEX("DD",+LEXSUB,0,"UP"))
"RTN","LEXXFI3",115,0)
 S X=LEXPAR
"RTN","LEXXFI3",116,0)
 Q X
"RTN","LEXXFI3",117,0)
LVL(X) ; Level of File      X = File/Sub-File Number
"RTN","LEXXFI3",118,0)
 N LEXLVL,LEXPAR,LEXSUB S LEXSUB=$G(X)  Q:+LEXSUB'>0 0
"RTN","LEXXFI3",119,0)
 I '$D(LEX("DD",+LEXSUB)) D DDI^LEXXFI6(+LEXSUB,.LEX)
"RTN","LEXXFI3",120,0)
 Q:'$D(LEX("DD",+LEXSUB,0)) 0  Q:'$D(LEX("DD",+LEXSUB,0,"UP")) 1
"RTN","LEXXFI3",121,0)
 S LEXLVL=1,LEXPAR=LEXSUB F  Q:('$D(LEX("DD",+LEXSUB,0,"UP")))  D
"RTN","LEXXFI3",122,0)
 . S (LEXSUB,LEXPAR)=$G(LEX("DD",+LEXSUB,0,"UP")),LEXLVL=LEXLVL+1
"RTN","LEXXFI3",123,0)
 S X=LEXLVL Q X
"RTN","LEXXFI3",124,0)
ID(X) ; Unique Identifier  X = File/Sub-File Number
"RTN","LEXXFI3",125,0)
 N LEXID,LEXPAR,LEXSUB S LEXID="",LEXSUB=$G(X)  Q:+LEXSUB'>0 ""
"RTN","LEXXFI3",126,0)
 I '$D(LEX("DD",+LEXSUB)) D DDI^LEXXFI6(+LEXSUB,.LEX)
"RTN","LEXXFI3",127,0)
 Q:'$D(LEX("DD",+LEXSUB,0)) ""  Q:'$D(LEX("DD",+LEXSUB,0,"UP")) +LEXSUB
"RTN","LEXXFI3",128,0)
 S LEXID=+LEXSUB,LEXPAR=LEXSUB F  Q:('$D(LEX("DD",+LEXSUB,0,"UP")))  D
"RTN","LEXXFI3",129,0)
 . S (LEXSUB,LEXPAR)=$G(LEX("DD",+LEXSUB,0,"UP"))
"RTN","LEXXFI3",130,0)
 . S:$L(LEXSUB) LEXID=LEXSUB_";"_LEXID
"RTN","LEXXFI3",131,0)
 S X=LEXID
"RTN","LEXXFI3",132,0)
 Q X
"RTN","LEXXFI4")
0^203^B23615408
"RTN","LEXXFI4",1,0)
LEXXFI4 ;ISL/KER - File Info - Record Counts (2) ;04/21/2014
"RTN","LEXXFI4",2,0)
 ;;2.0;LEXICON UTILITY;**32,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI4",3,0)
 ;               
"RTN","LEXXFI4",4,0)
 ; Global Variables
"RTN","LEXXFI4",5,0)
 ;    ^TMP("LEXCNT")      SACC 2.3.2.5.1
"RTN","LEXXFI4",6,0)
 ;               
"RTN","LEXXFI4",7,0)
 ; External References
"RTN","LEXXFI4",8,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXFI4",9,0)
 ;               
"RTN","LEXXFI4",10,0)
 Q
"RTN","LEXXFI4",11,0)
DSP ; Display Results
"RTN","LEXXFI4",12,0)
 N LEXFP,LEXCT,LEXFI,LEXGTOT,LEXHSF,LEXJOB,LEXMD,LEXX,LEXLVL,LEXML
"RTN","LEXXFI4",13,0)
 N LEXNCFI,LEXNFI,LEXNPAR,LEXOPAR,LEXO,LEXPAR,LEXTAB,LEXTXT
"RTN","LEXXFI4",14,0)
 S (LEXCT,LEXGTOT,LEXML)=0,LEXOPAR=""
"RTN","LEXXFI4",15,0)
 S LEXJOB=$J S:+($G(LEXMD))>0 LEXJOB=+($G(LEXMD))
"RTN","LEXXFI4",16,0)
 K:$D(LEXMD) LEXMD S LEXFP="" S LEXFP=""
"RTN","LEXXFI4",17,0)
 F  S LEXFP=$O(^TMP("LEXCNT",LEXJOB,"ORDER",LEXFP)) Q:LEXFP=""  D
"RTN","LEXXFI4",18,0)
 . S LEXO=""
"RTN","LEXXFI4",19,0)
 . F  S LEXO=$O(^TMP("LEXCNT",LEXJOB,"ORDER",LEXFP,LEXO)) Q:LEXO=""  D
"RTN","LEXXFI4",20,0)
 . . N LEXFI,LEXPAR,LEXLVL,LEXTAB,LEXTXT,LEXHSF,LEXX
"RTN","LEXXFI4",21,0)
 . . S LEXTAB="",LEXHSF=0
"RTN","LEXXFI4",22,0)
 . . S LEXPAR=$G(^TMP("LEXCNT",LEXJOB,"ORDER",LEXFP,LEXO))
"RTN","LEXXFI4",23,0)
 . . S LEXFI=+($P(LEXPAR,"^",2)),LEXLVL=+($P(LEXPAR,"^",3))
"RTN","LEXXFI4",24,0)
 . . S LEXPAR=+($P(LEXPAR,"^",1)) Q:LEXPAR=0
"RTN","LEXXFI4",25,0)
 . . S LEXNFI=$O(^TMP("LEXCNT",LEXJOB,LEXPAR,LEXPAR))
"RTN","LEXXFI4",26,0)
 . . S:LEXNFI>0&(LEXNFI'=LEXPAR) LEXHSF=1
"RTN","LEXXFI4",27,0)
 . . S LEXX=$G(^TMP("LEXCNT",LEXJOB,LEXPAR,LEXFI)),LEXCT=LEXCT+1
"RTN","LEXXFI4",28,0)
 . . S LEXNPAR=$O(^TMP("LEXCNT",LEXJOB,"ORDER",LEXFP,LEXO))
"RTN","LEXXFI4",29,0)
 . . S LEXNPAR=$P(LEXNPAR,";",1)
"RTN","LEXXFI4",30,0)
 . . S LEXNCFI=$O(^TMP("LEXCNT",LEXJOB,"ORDER",LEXFP))
"RTN","LEXXFI4",31,0)
 . . I '$L(LEXNPAR),$L(LEXNCFI) S LEXML=1
"RTN","LEXXFI4",32,0)
 . . I LEXCT=1 D TTL,HDR
"RTN","LEXXFI4",33,0)
 . . I +LEXFI>0 D TSF
"RTN","LEXXFI4",34,0)
 . . I +LEXFI'>0,+($G(LEXHSF))>0 D GTSF
"RTN","LEXXFI4",35,0)
 D GT,CK
"RTN","LEXXFI4",36,0)
 Q
"RTN","LEXXFI4",37,0)
TSF ;   Total for a Single File/Sub-File
"RTN","LEXXFI4",38,0)
 N LEXNM,LEXTAB,LEXTOT,LEXTXT,LEXTYP
"RTN","LEXXFI4",39,0)
 S LEXX=$G(LEXX),LEXTOT=+LEXX,LEXNM=$P(LEXX,"^",2)
"RTN","LEXXFI4",40,0)
 S LEXTYP=$P(LEXX,"^",3),LEXTAB=""
"RTN","LEXXFI4",41,0)
 Q:+LEXTOT'>0  Q:'$L(LEXNM)  Q:'$L(LEXTYP)
"RTN","LEXXFI4",42,0)
 S $P(LEXTAB," ",(+($G(LEXLVL))*2))=""
"RTN","LEXXFI4",43,0)
 S LEXTXT="  "_LEXTAB_LEXNM_" ("_LEXTYP_")"
"RTN","LEXXFI4",44,0)
 S LEXTXT=LEXTXT_$J("",(60-$L(LEXTXT)))_$J(LEXTOT,9)
"RTN","LEXXFI4",45,0)
 S LEXGTOT=+($G(LEXGTOT))+LEXTOT D TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",46,0)
 Q
"RTN","LEXXFI4",47,0)
GTSF ;   Grand Total for a Single File
"RTN","LEXXFI4",48,0)
 N LEXLVL,LEXNM,LEXTAB,LEXTOT,LEXTXT,LEXTYP,LEXX
"RTN","LEXXFI4",49,0)
 S LEXX=$G(^TMP("LEXCNT",LEXJOB,LEXPAR,LEXPAR)),LEXLVL=+($$ML)+2
"RTN","LEXXFI4",50,0)
 S LEXNM=$P(LEXX,"^",2),LEXTYP=$P(LEXX,"^",3) Q:'$L(LEXNM)  Q:'$L(LEXTYP)
"RTN","LEXXFI4",51,0)
 S LEXTAB="",LEXX=$G(^TMP("LEXCNT",LEXJOB,LEXPAR,0))
"RTN","LEXXFI4",52,0)
 S LEXTOT=+LEXX,$P(LEXTAB," ",(LEXLVL*2))=""
"RTN","LEXXFI4",53,0)
 S LEXTXT="  "_LEXTAB_" - Total Records for "_LEXTYP
"RTN","LEXXFI4",54,0)
 S LEXTXT=LEXTXT_$J("",(60-$L(LEXTXT)))_$J(LEXTOT,9)
"RTN","LEXXFI4",55,0)
 D TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",56,0)
 Q
"RTN","LEXXFI4",57,0)
GT ;   Grand Totals for Multiple Files
"RTN","LEXXFI4",58,0)
 N LEXCT,LEXFI,LEXTXT S LEXCT=0,LEXFI="" I +($G(LEXGTOT))>0,+($G(LEXML))>0 D
"RTN","LEXXFI4",59,0)
 . D BL^LEXXFI8 S LEXTXT="   GRAND TOTAL (ALL FILES) "
"RTN","LEXXFI4",60,0)
 . S LEXTXT=LEXTXT_$J("",(50-$L(LEXTXT)))_$J(LEXGTOT,19) D TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",61,0)
 Q
"RTN","LEXXFI4",62,0)
TTL ; Record Count Title
"RTN","LEXXFI4",63,0)
 D:+($G(LEXMUL))>0 TT^LEXXFI8("","Record Counts")
"RTN","LEXXFI4",64,0)
 D:+($G(LEXMUL))'>0 TT^LEXXFI8($G(LEXFI),"Record Count")
"RTN","LEXXFI4",65,0)
 D BL^LEXXFI8
"RTN","LEXXFI4",66,0)
 Q
"RTN","LEXXFI4",67,0)
HDR ; Record Count Header
"RTN","LEXXFI4",68,0)
 N LEXTXT S LEXTXT="   Name (File Number)"
"RTN","LEXXFI4",69,0)
 S LEXTXT=LEXTXT_$J("",(60-$L(LEXTXT)))_$J("Entries",9) D TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",70,0)
 S LEXTXT="   -------------------------------------------------"
"RTN","LEXXFI4",71,0)
 S LEXTXT=LEXTXT_$J("",(60-$L(LEXTXT)))_$J("-------",9) D TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",72,0)
 Q
"RTN","LEXXFI4",73,0)
CK ; Records Checked
"RTN","LEXXFI4",74,0)
 N LEXF,LEXS,LEXFT,LEXST,LEXJ S LEXJ=$S(+($G(LEXJOB))>0:+($G(LEXJOB)),1:$J)
"RTN","LEXXFI4",75,0)
 S LEXF=+($G(^TMP("LEXCNT",LEXJ,"CNT")))
"RTN","LEXXFI4",76,0)
 S LEXFT=$S(LEXF=1:"1 File",LEXF>1:(LEXF_" Files"),1:"")
"RTN","LEXXFI4",77,0)
 S LEXS=+($G(^TMP("LEXCNT",LEXJ,"SUB")))
"RTN","LEXXFI4",78,0)
 S LEXST=$S(LEXS=1:"1 Sub-File",LEXS>1:(LEXS_" Sub-Files"),1:"")
"RTN","LEXXFI4",79,0)
 I (LEXF+LEXS)>1 D
"RTN","LEXXFI4",80,0)
 . S LEXTXT="   " S:$L(LEXFT) LEXTXT=LEXTXT_LEXFT
"RTN","LEXXFI4",81,0)
 . S:$L(LEXFT)&($L(LEXST)) LEXTXT=LEXTXT_" and "_LEXST
"RTN","LEXXFI4",82,0)
 . S:'$L(LEXFT)&($L(LEXST)) LEXTXT=LEXTXT_LEXST
"RTN","LEXXFI4",83,0)
 . I $L(LEXFT)!($L(LEXST)) S LEXTXT=LEXTXT_" Checked" D
"RTN","LEXXFI4",84,0)
 . . D BL^LEXXFI8,TL^LEXXFI8(LEXTXT)
"RTN","LEXXFI4",85,0)
 Q
"RTN","LEXXFI4",86,0)
ML(X) ; Maximum Level
"RTN","LEXXFI4",87,0)
 N LEXJ S LEXJ=$S(+($G(LEXJOB))>0:+($G(LEXJOB)),1:$J)
"RTN","LEXXFI4",88,0)
 S X=+($G(^TMP("LEXCNT",LEXJ,"LVL"))) S:+X'>0 X=1
"RTN","LEXXFI4",89,0)
 Q X
"RTN","LEXXFI4",90,0)
NF(X) ; Number of Files
"RTN","LEXXFI4",91,0)
 N LEXJ S LEXJ=$S(+($G(LEXJOB))>0:+($G(LEXJOB)),1:$J)
"RTN","LEXXFI4",92,0)
 S X=+($G(^TMP("LEXCNT",LEXJ,"CNT")))
"RTN","LEXXFI4",93,0)
 Q X
"RTN","LEXXFI4",94,0)
NS(X) ; Number of Sub-Files
"RTN","LEXXFI4",95,0)
 N LEXJ S LEXJ=$S(+($G(LEXJOB))>0:+($G(LEXJOB)),1:$J)
"RTN","LEXXFI4",96,0)
 S X=+($G(^TMP("LEXCNT",LEXJ,"SUB")))
"RTN","LEXXFI4",97,0)
 Q X
"RTN","LEXXFI4",98,0)
ST ; Show TMP Array
"RTN","LEXXFI4",99,0)
 N NN,NC S NN="^TMP(""LEXCNT"")",NC="^TMP(""LEXCNT"","
"RTN","LEXXFI4",100,0)
 F  S NN=$Q(@NN) Q:NN=""!(NN'[NC)  D
"RTN","LEXXFI4",101,0)
 . W !,NN,"=",@NN
"RTN","LEXXFI4",102,0)
 Q
"RTN","LEXXFI4",103,0)
EP(X,Y) ;   Elapsed Time (Begin, End)
"RTN","LEXXFI4",104,0)
 N LEXTIM,LEXBEG,LEXEND
"RTN","LEXXFI4",105,0)
 S LEXBEG=$G(X),LEXEND=$G(Y) Q:+LEXBEG'>0 ""  Q:+LEXEND'>0 ""
"RTN","LEXXFI4",106,0)
 S LEXTIM=$$FMDIFF^XLFDT(LEXEND,LEXBEG,2) Q:+LEXTIM'>0 "00:00:00"
"RTN","LEXXFI4",107,0)
 S LEXTIM=$$TIM(LEXTIM)
"RTN","LEXXFI4",108,0)
 Q LEXTIM
"RTN","LEXXFI4",109,0)
TIM(X) ;   Format Time Elapsed
"RTN","LEXXFI4",110,0)
 N LEXD,LEXH,LEXM,LEXS,LEXT,LEXV S X=+($G(X)) Q:X'>0 "00:00:00"
"RTN","LEXXFI4",111,0)
 S LEXD=X\86400 S LEXV=LEXD*86400 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXFI4",112,0)
 S LEXH=X\3600 S LEXV=LEXH*3600 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXFI4",113,0)
 S:$L(LEXH)<2 LEXH="0"_LEXH S:$L(LEXH)<2 LEXH="0"_LEXH
"RTN","LEXXFI4",114,0)
 S LEXM=X\60 S LEXV=LEXM*60 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXFI4",115,0)
 S:$L(LEXM)<2 LEXM="0"_LEXM S:$L(LEXM)<2 LEXM="0"_LEXM
"RTN","LEXXFI4",116,0)
 S LEXS=X S:$L(LEXS)<2 LEXS="0"_LEXS S:$L(LEXS)<2 LEXS="0"_LEXS
"RTN","LEXXFI4",117,0)
 S LEXT="" S:+LEXD>0 LEXT=+LEXD_" day"_$S(+LEXD>1:"s",1:"")_" "
"RTN","LEXXFI4",118,0)
 S LEXT=LEXT_LEXH_":"_LEXM_":"_LEXS,X=LEXT
"RTN","LEXXFI4",119,0)
 Q X
"RTN","LEXXFI6")
0^204^B7378156
"RTN","LEXXFI6",1,0)
LEXXFI6 ;ISL/KER - File Info - DD Information ;04/21/2014
"RTN","LEXXFI6",2,0)
 ;;2.0;LEXICON UTILITY;**32,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI6",3,0)
 ;               
"RTN","LEXXFI6",4,0)
 ; Global Variables
"RTN","LEXXFI6",5,0)
 ;    ^TMP("LEXI")        Suggest SACC 2.3.2.5.1
"RTN","LEXXFI6",6,0)
 ;               
"RTN","LEXXFI6",7,0)
 ; External References
"RTN","LEXXFI6",8,0)
 ;    %XY^%RCR            ICR  10022
"RTN","LEXXFI6",9,0)
 ;               
"RTN","LEXXFI6",10,0)
 Q
"RTN","LEXXFI6",11,0)
DDI(X,LEX) ; Data Dictionary Information
"RTN","LEXXFI6",12,0)
 N %X,%Y,LEXFI,LEXFLD,LEXLOC,LEXND,LEXNDD,LEXNM,LEXSF
"RTN","LEXXFI6",13,0)
 K ^TMP("LEXI",$J) S LEXFI=+($G(X)) Q:+LEXFI'>0
"RTN","LEXXFI6",14,0)
 S %X="^DD("_LEXFI_",",%Y="^TMP(""LEXI"",$J,"_LEXFI_"," D %XY^%RCR
"RTN","LEXXFI6",15,0)
 S LEX("DD",LEXFI,0)=$G(^TMP("LEXI",$J,LEXFI,0))
"RTN","LEXXFI6",16,0)
 S LEXNM=$O(^TMP("LEXI",$J,LEXFI,0,"NM",""))
"RTN","LEXXFI6",17,0)
 S:$L(LEXNM) LEX("DD",LEXFI,0,"NM",LEXNM)=""
"RTN","LEXXFI6",18,0)
 S LEXFLD=0 F  S LEXFLD=$O(^TMP("LEXI",$J,LEXFI,LEXFLD)) Q:+LEXFLD=0  D
"RTN","LEXXFI6",19,0)
 . S LEXLOC=$G(^TMP("LEXI",$J,LEXFI,LEXFLD,0))
"RTN","LEXXFI6",20,0)
 . Q:+($P($P(LEXLOC,"^",4),";",2))>0
"RTN","LEXXFI6",21,0)
 . S LEX("DD",LEXFI,LEXFLD,0)=$G(^TMP("LEXI",$J,LEXFI,LEXFLD,0))
"RTN","LEXXFI6",22,0)
 S LEXND="" F  S LEXND=$O(^TMP("LEXI",$J,LEXFI,"GL",LEXND)) Q:LEXND=""  D
"RTN","LEXXFI6",23,0)
 . S LEXLOC="" F  S LEXLOC=$O(^TMP("LEXI",$J,LEXFI,"GL",LEXND,LEXLOC)) Q:LEXLOC=""  D
"RTN","LEXXFI6",24,0)
 . . Q:+LEXLOC>0  S LEXFLD=0
"RTN","LEXXFI6",25,0)
 . . F  S LEXFLD=$O(^TMP("LEXI",$J,LEXFI,"GL",LEXND,LEXLOC,LEXFLD)) Q:+LEXFLD=0  D
"RTN","LEXXFI6",26,0)
 . . . S LEXNDD=$G(^TMP("LEXI",$J,LEXFI,LEXFLD,0))
"RTN","LEXXFI6",27,0)
 . . . S LEXSF=+($P(LEXNDD,"^",2)) Q:+LEXSF=0
"RTN","LEXXFI6",28,0)
 . . . S LEX("DD",LEXFI,"GL",LEXND,LEXLOC,LEXFLD)=""
"RTN","LEXXFI6",29,0)
 . . . S:+LEXSF>0 LEX("DD",LEXFI,"GL",LEXND,LEXLOC,LEXFLD)=+LEXSF
"RTN","LEXXFI6",30,0)
 S LEXSF=0 F  S LEXSF=$O(^TMP("LEXI",$J,LEXFI,"SB",LEXSF)) Q:+LEXSF=0  D
"RTN","LEXXFI6",31,0)
 . S LEXFLD=0 F  S LEXFLD=$O(^TMP("LEXI",$J,LEXFI,"SB",LEXSF,LEXFLD)) Q:+LEXFLD=0  D
"RTN","LEXXFI6",32,0)
 . . S LEX("DD",LEXFI,"SB",LEXSF,LEXFLD)=""
"RTN","LEXXFI6",33,0)
 I $L($G(^TMP("LEXI",$J,LEXFI,0,"UP"))) D
"RTN","LEXXFI6",34,0)
 . S LEX("DD",LEXFI,0,"UP")=$G(^TMP("LEXI",$J,LEXFI,0,"UP"))
"RTN","LEXXFI6",35,0)
 K ^TMP("LEXI",$J,LEXFI)
"RTN","LEXXFI6",36,0)
 S %X="^DIC("_LEXFI_",",%Y="^TMP(""LEXI"",$J,"_LEXFI_"," D %XY^%RCR
"RTN","LEXXFI6",37,0)
 I $D(^TMP("LEXI",$J,LEXFI,0)) D
"RTN","LEXXFI6",38,0)
 . S LEX("DIC",LEXFI,0)=$G(^TMP("LEXI",$J,LEXFI,0))
"RTN","LEXXFI6",39,0)
 I $D(^TMP("LEXI",$J,LEXFI,0,"GL")) D
"RTN","LEXXFI6",40,0)
 . S LEX("DIC",LEXFI,0,"GL")=$G(^TMP("LEXI",$J,LEXFI,0,"GL"))
"RTN","LEXXFI6",41,0)
 K ^TMP("LEXI",$J,LEXFI)
"RTN","LEXXFI6",42,0)
 S LEXSF=0 F  S LEXSF=$O(LEX("DD",LEXFI,"SB",LEXSF)) Q:+LEXSF'>0  D DDI2
"RTN","LEXXFI6",43,0)
 I $D(LEX("DD",LEXFI,0,"UP")) D DDI3
"RTN","LEXXFI6",44,0)
 Q
"RTN","LEXXFI6",45,0)
DDI2 ; Sub-Files
"RTN","LEXXFI6",46,0)
 Q:+($G(LEXSF))'>0  Q:$D(LEX("DD",LEXSF))
"RTN","LEXXFI6",47,0)
 N LEXTSF,LEXTFI S LEXTSF=LEXSF,LEXTFI=LEXFI
"RTN","LEXXFI6",48,0)
 N LEXFI S LEXFI=+LEXTSF K ^TMP("LEXI",$J,LEXTFI)
"RTN","LEXXFI6",49,0)
 D DDI(LEXFI,.LEX)
"RTN","LEXXFI6",50,0)
 Q
"RTN","LEXXFI6",51,0)
DDI3 ; Parent Files
"RTN","LEXXFI6",52,0)
 Q:'$D(LEX("DD",LEXFI,0,"UP"))
"RTN","LEXXFI6",53,0)
 N LEXUP,LEXTFI
"RTN","LEXXFI6",54,0)
 S LEXUP=+($G(LEX("DD",LEXFI,0,"UP"))) Q:$D(LEX("DD",LEXUP))
"RTN","LEXXFI6",55,0)
 S LEXTFI=LEXFI N LEXFI S LEXFI=+LEXUP
"RTN","LEXXFI6",56,0)
 D DDI(LEXFI,.LEX)
"RTN","LEXXFI6",57,0)
 Q
"RTN","LEXXFI7")
0^205^B40222921
"RTN","LEXXFI7",1,0)
LEXXFI7 ;ISL/KER - File Info - Prompts and Header ;04/21/2014
"RTN","LEXXFI7",2,0)
 ;;2.0;LEXICON UTILITY;**32,49,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI7",3,0)
 ;               
"RTN","LEXXFI7",4,0)
 ; Global Variables
"RTN","LEXXFI7",5,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","LEXXFI7",6,0)
 ;               
"RTN","LEXXFI7",7,0)
 ; External References
"RTN","LEXXFI7",8,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXFI7",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXFI7",10,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXFI7",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXXFI7",12,0)
 ;    $$PROD^XUPROD       ICR   4440
"RTN","LEXXFI7",13,0)
 ;               
"RTN","LEXXFI7",14,0)
 Q
"RTN","LEXXFI7",15,0)
MT(X) ; Method - One or All Files
"RTN","LEXXFI7",16,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,Y
"RTN","LEXXFI7",17,0)
 S DIR(0)="SAO^O:Checksum for ONE file;A:Checksum for ALL files (LEX/ICD/CPT)"
"RTN","LEXXFI7",18,0)
 S DIR("A",1)=" Compute Checksum for:",DIR("A",2)=" "
"RTN","LEXXFI7",19,0)
 S DIR("A",3)="   One Lexicon, ICD or CPT file"
"RTN","LEXXFI7",20,0)
 S DIR("A",4)="   All Lexicon, ICD or CPT files (757*/80*/81*)"
"RTN","LEXXFI7",21,0)
 S DIR("A",5)=" ",DIR("A")=" Select One or All:  (O/A)  "
"RTN","LEXXFI7",22,0)
 S DIR("B")="O",(DIR("?"),DIR("??"))="^D MTH^LEXXFI7"
"RTN","LEXXFI7",23,0)
 W ! D ^DIR S X=$S(Y="O":"ONE",Y="A":"ALL",1:"")
"RTN","LEXXFI7",24,0)
 Q X
"RTN","LEXXFI7",25,0)
MTH ;   Method Help
"RTN","LEXXFI7",26,0)
 W !,"     Do you wish to compute the checksum for a single Lexicon, ICD"
"RTN","LEXXFI7",27,0)
 W !,"     or CPT file or all Lexicon, ICD and CPT files (757*/80*/81*)"
"RTN","LEXXFI7",28,0)
 W:$G(X)["??" !,"     Answer either 'O'ne or 'A'll or '^' to exit"
"RTN","LEXXFI7",29,0)
 Q
"RTN","LEXXFI7",30,0)
 ;                             
"RTN","LEXXFI7",31,0)
CC(X) ; Checksum AND Count
"RTN","LEXXFI7",32,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,Y
"RTN","LEXXFI7",33,0)
 S DIR(0)="YAO",DIR("A")=" Include a Record Count with the Checksum?  (Y/N)  "
"RTN","LEXXFI7",34,0)
 S DIR("B")="N",(DIR("?"),DIR("??"))="^D CCH^LEXXFI7"
"RTN","LEXXFI7",35,0)
 W ! D ^DIR S X=$S(+Y>0:1,1:0)
"RTN","LEXXFI7",36,0)
 Q X
"RTN","LEXXFI7",37,0)
CCH ;   Checksum AND Count Help
"RTN","LEXXFI7",38,0)
 W !,"     Answer 'Yes' to include a count of the total the number of records"
"RTN","LEXXFI7",39,0)
 W !,"     in the file/sub-file along with the checksum"
"RTN","LEXXFI7",40,0)
 Q
"RTN","LEXXFI7",41,0)
 ;                        
"RTN","LEXXFI7",42,0)
FI(X) ; Select Lexicon/ICD File
"RTN","LEXXFI7",43,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,Y
"RTN","LEXXFI7",44,0)
 S DIR(0)="FAO^1:45"
"RTN","LEXXFI7",45,0)
 S DIR("A")=" Select File:  "
"RTN","LEXXFI7",46,0)
 S (DIR("?"),DIR("??"))="^D FIH^LEXXFI7" D ^DIR S X=$$FOT(Y)
"RTN","LEXXFI7",47,0)
 Q X
"RTN","LEXXFI7",48,0)
FIH ;   File Help
"RTN","LEXXFI7",49,0)
 W !,"     Select either a Lexicon, ICD or CPT file:"
"RTN","LEXXFI7",50,0)
 W !!,"                          Lexicon                  ICD       CPT"
"RTN","LEXXFI7",51,0)
 W !,"     ----------------------------------------       ----      ----"
"RTN","LEXXFI7",52,0)
 W !,"     757        757.03     757.12     757.31        80        81"
"RTN","LEXXFI7",53,0)
 W !,"     757.001    757.03     757.13     757.4         80.1      81.1"
"RTN","LEXXFI7",54,0)
 W !,"     757.01     757.05     757.14     757.41        80.3      81.2"
"RTN","LEXXFI7",55,0)
 W !,"     757.011    757.06     757.2                              81.3"
"RTN","LEXXFI7",56,0)
 W !,"     757.014    757.1      757.21"
"RTN","LEXXFI7",57,0)
 W !,"     757.02     757.11     757.3 "
"RTN","LEXXFI7",58,0)
 Q
"RTN","LEXXFI7",59,0)
FOT(X) ;   File Output Transform
"RTN","LEXXFI7",60,0)
 N LEX,LEXX
"RTN","LEXXFI7",61,0)
 S LEXX=$G(X) Q:'$L(X) "^"  D ARY(LEXX,.LEX)
"RTN","LEXXFI7",62,0)
 S:+($G(LEX(0)))=1 LEXX=$$ONE(X,.LEX)
"RTN","LEXXFI7",63,0)
 S:+($G(LEX(0)))>1 LEXX=$$MULT(X,.LEX)
"RTN","LEXXFI7",64,0)
 S X=$S(+LEXX>0:+LEXX,1:"^")
"RTN","LEXXFI7",65,0)
 Q X
"RTN","LEXXFI7",66,0)
ONE(X,LEX) ;   One Entry
"RTN","LEXXFI7",67,0)
 S X=+($G(LEX(1)))
"RTN","LEXXFI7",68,0)
 I $L($P($G(LEX(1)),"^",2)),+X>0 D
"RTN","LEXXFI7",69,0)
 . W "    ",$P($G(LEX(1)),"^",2)," (#",+X,")"
"RTN","LEXXFI7",70,0)
 Q:+X'>0 "^"  Q X
"RTN","LEXXFI7",71,0)
MULT(X,LEX) ;   Multiple Entries
"RTN","LEXXFI7",72,0)
 N LEXE,LEXEX,LEXFI,LEXI,LEXM,LEXMAX,LEXNAM,LEXS
"RTN","LEXXFI7",73,0)
 S LEXMAX=$G(LEX(0)) Q:+LEXMAX'>1  W ! W !," ",LEXMAX," matches found"
"RTN","LEXXFI7",74,0)
 S LEXS=0,LEXEX=0 F LEXI=1:1:LEXMAX Q:((LEXS>0)&(LEXS<LEXI+1))  Q:LEXEX  D  Q:LEXEX
"RTN","LEXXFI7",75,0)
 . S LEXE=$G(LEX(LEXI)),LEXNAM=$P(LEXE,"^",2),LEXFI=+LEXE Q:'$L(LEXNAM)  Q:+LEXFI'>0  S LEXM=LEXI
"RTN","LEXXFI7",76,0)
 . W:LEXI#5=1 ! W !," ",$J(LEXI,4),".  ",LEXNAM," (#",+LEXFI,")"
"RTN","LEXXFI7",77,0)
 . W:LEXI#5=0 ! S:LEXI#5=0 LEXS=$$SEL(LEXM,.LEX) S:LEXS["^" LEXEX=1
"RTN","LEXXFI7",78,0)
 I LEXI#5'=0,+LEXS=0 W ! S LEXS=$$SEL(LEXM,.LEX) S:LEXS["^" LEXEX=1
"RTN","LEXXFI7",79,0)
 S X="^" S:'LEXEX&(+LEXS>0) X=+LEXS S:+X'>0 X="^"
"RTN","LEXXFI7",80,0)
 Q X
"RTN","LEXXFI7",81,0)
SEL(X,LEX) ;     Select Multiple
"RTN","LEXXFI7",82,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXM,Y S LEXM=+($G(X)) Q:LEXM=0 -1
"RTN","LEXXFI7",83,0)
 S:+($O(LEX(+($G(LEXI)))))>0 DIR("A")=" Select 1-"_LEXM_" or '^' to exit:  "
"RTN","LEXXFI7",84,0)
 S:+($O(LEX(+($G(LEXI)))))'>0 DIR("A")=" Select 1-"_LEXM_":  "
"RTN","LEXXFI7",85,0)
 S (DIR("?"),DIR("??"))="Answer must be from 1 to "_LEXM_", or <Return> to continue  "
"RTN","LEXXFI7",86,0)
 S DIR(0)="NAO^1:"_LEXM_":0" D ^DIR S X="" S:$D(DTOUT)!(X[U) X=U
"RTN","LEXXFI7",87,0)
 I $L($P($G(LEX(+Y)),"^",2)),+($G(LEX(+Y)))>0 D
"RTN","LEXXFI7",88,0)
 . W "    ",$P($G(LEX(+Y)),"^",2)," (#",+($G(LEX(+Y))),")"
"RTN","LEXXFI7",89,0)
 . S X=+($G(LEX(+Y)))
"RTN","LEXXFI7",90,0)
 Q X
"RTN","LEXXFI7",91,0)
ARY(X,LEX) ;   Build Array  of Files
"RTN","LEXXFI7",92,0)
 N LEXF,LEXNM,LEXO,LEXX,Y
"RTN","LEXXFI7",93,0)
 S LEXX=$TR($G(X),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ") N X,Y
"RTN","LEXXFI7",94,0)
 Q:'$L(LEXX) ""  I +LEXX=LEXX D  Q
"RTN","LEXXFI7",95,0)
 . N LEXO,LEXN,LEXC S LEXO=LEXX-.00000001
"RTN","LEXXFI7",96,0)
 . F  S LEXO=$O(@("^DIC("_LEXO_")")) Q:+LEXO=0!($E(LEXO,1,$L(LEXX))'=LEXX)  D
"RTN","LEXXFI7",97,0)
 . . N LEXNM S LEXNM=$$FN^LEXXFI8(LEXO) Q:'$L(LEXNM)  S LEX(0)=($O(LEX(" "),-1)+1),LEX(+LEX(0))=+LEXO_"^"_LEXNM
"RTN","LEXXFI7",98,0)
 S LEXO=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~"
"RTN","LEXXFI7",99,0)
 F  S LEXO=$O(@("^DIC(""B"","_LEXO_")")) Q:LEXO=""  Q:$E(LEXO,1,$L(LEXX))'[LEXX  D
"RTN","LEXXFI7",100,0)
 . S LEXF=0 F  S LEXF=$O(@("^DIC(""B"","_LEXO_","_LEXF_")")) Q:+LEXF'>0  D
"RTN","LEXXFI7",101,0)
 . . Q:+($$LEX^LEXXFI8(LEXF))'>0&(+($$IC^LEXXFI8(LEXF))'>0)  N LEXNM S LEXNM=$$FN^LEXXFI8(LEXF)
"RTN","LEXXFI7",102,0)
 . . Q:'$L(LEXNM)  S LEX(0)=($O(LEX(" "),-1)+1),LEX(+LEX(0))=+LEXF_"^"_LEXNM
"RTN","LEXXFI7",103,0)
 Q
"RTN","LEXXFI7",104,0)
 ;                          
"RTN","LEXXFI7",105,0)
 ; Miscellaneous
"RTN","LEXXFI7",106,0)
U(X) ;   UCI where Lexicon is installed
"RTN","LEXXFI7",107,0)
 N LEXU,LEXP,LEXT,Y X ^%ZOSF("UCI") S LEXU=Y,LEXP=""
"RTN","LEXXFI7",108,0)
 S:LEXU[","&($L($P(LEXU,",",1))>3) LEXU=$P(LEXU,",",1)
"RTN","LEXXFI7",109,0)
 S LEXP=$S($$PROD^XUPROD(1):" (Production)",1:" (Test)")
"RTN","LEXXFI7",110,0)
 S X="",$P(X,"^",1)=LEXU,$P(X,"^",2)=LEXP
"RTN","LEXXFI7",111,0)
 Q X
"RTN","LEXXFI7",112,0)
A(X) ;   As of date/time
"RTN","LEXXFI7",113,0)
 N LEXX S LEXX=$$NOW^XLFDT,LEXX=$$FMTE^XLFDT(LEXX,"1")
"RTN","LEXXFI7",114,0)
 S:LEXX["@" LEXX=$P(LEXX,"@",1)_"  "_$P(LEXX,"@",2,299)
"RTN","LEXXFI7",115,0)
 S X=LEXX
"RTN","LEXXFI7",116,0)
 Q X
"RTN","LEXXFI7",117,0)
P(X) ;   Person
"RTN","LEXXFI7",118,0)
 N LEXDUZ,LEXPH,LEXNM
"RTN","LEXXFI7",119,0)
 S LEXDUZ=+($G(DUZ)),LEXNM=$$GET1^DIQ(200,+($G(LEXDUZ)),.01) Q:'$L(LEXNM) "UNKNOWN^"
"RTN","LEXXFI7",120,0)
 S LEXDUZ=+($G(DUZ)) S LEXPH=$$GET1^DIQ(200,+($G(LEXDUZ)),.132)
"RTN","LEXXFI7",121,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+($G(LEXDUZ)),.133)
"RTN","LEXXFI7",122,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+($G(LEXDUZ)),.134)
"RTN","LEXXFI7",123,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+($G(LEXDUZ)),.135)
"RTN","LEXXFI7",124,0)
 S LEXDUZ=$$PM(LEXNM)
"RTN","LEXXFI7",125,0)
 S X=LEXDUZ_"^"_LEXPH
"RTN","LEXXFI7",126,0)
 Q X
"RTN","LEXXFI7",127,0)
PM(X) ;     Person, Mixed Case
"RTN","LEXXFI7",128,0)
 N LEXF,LEXL,LEXP S LEXP=$G(X),LEXL=$$MX($P(LEXP,",",1)),LEXF=$P(LEXP,",",2)
"RTN","LEXXFI7",129,0)
 S LEXL(1)=$$MX($P(LEXL,"-",1)),LEXL(2)=$$MX($P(LEXL(1)," ",2,2)),LEXL(1)=$$MX($P(LEXL(1)," ",1))
"RTN","LEXXFI7",130,0)
 S:$L(LEXL(1))&($L(LEXL(2))) LEXL(1)=LEXL(1)_" "_LEXL(2)
"RTN","LEXXFI7",131,0)
 S LEXL(3)=$$MX($P(LEXL,"-",2)),LEXL(4)=$$MX($P(LEXL(3)," ",2,2)),LEXL(3)=$$MX($P(LEXL(3)," ",1))
"RTN","LEXXFI7",132,0)
 S:$L(LEXL(3))&($L(LEXL(4))) LEXL(3)=LEXL(3)_" "_LEXL(4)
"RTN","LEXXFI7",133,0)
 S LEXL=LEXL(1) S:$L(LEXL(1))&($L(LEXL(3))) LEXL=LEXL(1)_"-"_LEXL(3)
"RTN","LEXXFI7",134,0)
 S LEXF=$$MX($P(LEXP,",",1)),LEXF=$P(LEXP,",",2)
"RTN","LEXXFI7",135,0)
 S LEXF(1)=$$MX($P(LEXF,"-",1)),LEXF(2)=$$MX($P(LEXF(1)," ",2,2)),LEXF(1)=$$MX($P(LEXF(1)," ",1))
"RTN","LEXXFI7",136,0)
 S:$L(LEXF(1))&($L(LEXF(2))) LEXF(1)=LEXF(1)_" "_LEXF(2)
"RTN","LEXXFI7",137,0)
 S LEXF(3)=$$MX($P(LEXF,"-",2)),LEXF(4)=$$MX($P(LEXF(3)," ",2,2)),LEXF(3)=$$MX($P(LEXF(3)," ",1))
"RTN","LEXXFI7",138,0)
 S:$L(LEXF(3))&($L(LEXF(4))) LEXF(3)=LEXF(3)_" "_LEXF(4)
"RTN","LEXXFI7",139,0)
 S LEXF=LEXF(1) S:$L(LEXF(1))&($L(LEXF(3))) LEXF=LEXF(1)_"-"_LEXF(3)
"RTN","LEXXFI7",140,0)
 S LEXP=LEXL_", "_LEXF,X=LEXP
"RTN","LEXXFI7",141,0)
 Q X
"RTN","LEXXFI7",142,0)
MX(X) ;     Mix Case
"RTN","LEXXFI7",143,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXFI8")
0^206^B39455696
"RTN","LEXXFI8",1,0)
LEXXFI8 ;ISL/KER - File Info - Miscellaneous ;04/21/2014
"RTN","LEXXFI8",2,0)
 ;;2.0;LEXICON UTILITY;**32,80**;Sep 23, 1996;Build 1
"RTN","LEXXFI8",3,0)
 ;               
"RTN","LEXXFI8",4,0)
 ; Global Variables
"RTN","LEXXFI8",5,0)
 ;    ^TMP("LEXCS")       SACC 2.3.2.5.1
"RTN","LEXXFI8",6,0)
 ;    ^TMP("LEXCS",$J)    SACC 2.3.2.5.1
"RTN","LEXXFI8",7,0)
 ;    ^TMP("LEXINS")      SACC 2.3.2.5.1
"RTN","LEXXFI8",8,0)
 ;    ^TMP("LEXINS",$J)   SACC 2.3.2.5.1
"RTN","LEXXFI8",9,0)
 ;               
"RTN","LEXXFI8",10,0)
 ; External References
"RTN","LEXXFI8",11,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXFI8",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXFI8",13,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXFI8",14,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXFI8",15,0)
 ;    %XY^%RCR            ICR  10022
"RTN","LEXXFI8",16,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXXFI8",17,0)
 ;    IX^DIC              ICR  10006
"RTN","LEXXFI8",18,0)
 ;    ^%DT                ICR  10003
"RTN","LEXXFI8",19,0)
 ;    ^DIC                ICR  10006
"RTN","LEXXFI8",20,0)
 ;               
"RTN","LEXXFI8",21,0)
 Q
"RTN","LEXXFI8",22,0)
LEX(X) ; LEX* File
"RTN","LEXXFI8",23,0)
 N LEXN S X=$G(X) Q:+X=0 0  S LEXN=$$GL(X) Q:$E(LEXN,1,4)="^LEX" 1
"RTN","LEXXFI8",24,0)
 Q 0
"RTN","LEXXFI8",25,0)
IC(X) ; IC* File
"RTN","LEXXFI8",26,0)
 S X=$G(X) I "^80^80.1^80.2^80.3^81^81.1^81.3^"[("^"_+X_"^") Q 1
"RTN","LEXXFI8",27,0)
 Q 0
"RTN","LEXXFI8",28,0)
GL(X) ; Global Location
"RTN","LEXXFI8",29,0)
 N DIERR,LEXE,LEXN S X=$G(X) Q:+X=0 ""  D FILE^DID(+X,"N","GLOBAL NAME","LEXN","LEXE")
"RTN","LEXXFI8",30,0)
 S X="" S:'$D(DIERR) X=$G(LEXN("GLOBAL NAME"))
"RTN","LEXXFI8",31,0)
 Q X
"RTN","LEXXFI8",32,0)
FN(X) ; File Name
"RTN","LEXXFI8",33,0)
 N DIERR,LEXE,LEXN S X=$G(X) D FILE^DID(+X,"N","NAME","LEXN","LEXE")
"RTN","LEXXFI8",34,0)
 S X="" S:'$D(DIERR) X=$G(LEXN("NAME"))
"RTN","LEXXFI8",35,0)
 Q X
"RTN","LEXXFI8",36,0)
INS(X) ; Installed
"RTN","LEXXFI8",37,0)
 N %X,%Y,LEXFI,LEXIN,LEXPH,LEXPK,LEXPV,LEXRV,LEXSQ,LEXVR K ^TMP("LEXINS",$J)
"RTN","LEXXFI8",38,0)
 S LEXFI=+($G(X)) Q:+LEXFI'>0 ""
"RTN","LEXXFI8",39,0)
 S LEXVR=$P($$VR(LEXFI),"^",1) Q:'$L(LEXVR) ""  Q:+LEXVR'>0 ""
"RTN","LEXXFI8",40,0)
 S LEXRV=$P($$RV(LEXFI),"^",1) Q:'$L(LEXRV) ""  Q:+LEXRV'>0 ""
"RTN","LEXXFI8",41,0)
 S LEXPK=$$PKG(LEXFI) Q:'$L(LEXPK) ""  Q:+LEXPK'>0 ""
"RTN","LEXXFI8",42,0)
 S LEXPV=$$PH(LEXPK,LEXVR) Q:+LEXPV'>0 ""
"RTN","LEXXFI8",43,0)
 S %X="^DIC(9.4,"_LEXPK_",22,"_LEXPV_",""PAH"",",%Y="^TMP(""LEXINS"","_$J_",""PAH""," D %XY^%RCR
"RTN","LEXXFI8",44,0)
 S LEXPH=$O(^TMP("LEXINS",$J,"PAH","B",LEXRV,0)) I LEXPH'>0 D
"RTN","LEXXFI8",45,0)
 . S LEXPH="",LEXSQ=$O(^TMP("LEXINS",$J,"PAH","B",(LEXRV_" ")))
"RTN","LEXXFI8",46,0)
 . Q:'$L(LEXSQ)  Q:$E(LEXSQ,1,$L(LEXRV))'=LEXRV
"RTN","LEXXFI8",47,0)
 . S LEXPH=$O(^TMP("LEXINS",$J,"PAH","B",LEXSQ,0))
"RTN","LEXXFI8",48,0)
 S LEXIN=$P($P($G(^TMP("LEXINS",$J,"PAH",+LEXPH,0)),"^",2),".",1)
"RTN","LEXXFI8",49,0)
 S X=$S(+LEXIN>0:$$SD(+LEXIN),1:"") S:$L(X)'=10 X=""
"RTN","LEXXFI8",50,0)
 K ^TMP("LEXINS",$J)
"RTN","LEXXFI8",51,0)
 Q X
"RTN","LEXXFI8",52,0)
VR(X) ; File Version
"RTN","LEXXFI8",53,0)
 N DIERR,LEXCDT,LEXE,LEXEX,LEXFI,LEXL,LEXN,LEXRTN,LEXVR,LEXVRD
"RTN","LEXXFI8",54,0)
 S LEXFI=$G(X) N DIERR,LEXN,LEXNM,LEXE,LEXEX,LEXL,LEXRTN
"RTN","LEXXFI8",55,0)
 D FILE^DID(+LEXFI,"N","VERSION","LEXN","LEXE") S LEXVR="" I '$D(DIERR) D
"RTN","LEXXFI8",56,0)
 . S LEXVR=$G(LEXN("VERSION")) S LEXRTN=$S($P(+LEXFI,".",1)=757:"LEXA",$P(+LEXFI,".",1)=80:"ICDCODE",$P(+LEXFI,".",1)=81:"ICPTCOD",1:"")
"RTN","LEXXFI8",57,0)
 . Q:'$L(LEXRTN)  S LEXEX="S LEXL=$T(+2^"_LEXRTN_")" X LEXEX
"RTN","LEXXFI8",58,0)
 . Q:'$L(LEXL)  I $P(LEXL,";",3)=LEXVR,$L($P(LEXL,";",6)) S LEXVRD=$$LTS($P(LEXL,";",6))
"RTN","LEXXFI8",59,0)
 S LEXCDT="" S:LEXFI=81.2 LEXCDT=$$DDT
"RTN","LEXXFI8",60,0)
 S X=$G(LEXVR) S:$L($G(LEXVR))&($L($G(LEXVRD))) X=X_"^"_$G(LEXVRD)
"RTN","LEXXFI8",61,0)
 S:$L($G(LEXVR))&($L($G(LEXVRD)))&($L(LEXCDT)) X=X_"^"_$G(LEXCDT)
"RTN","LEXXFI8",62,0)
 Q X
"RTN","LEXXFI8",63,0)
RV(X) ; File Revision
"RTN","LEXXFI8",64,0)
 N DIERR,LEXE,LEXN S X=$G(X)
"RTN","LEXXFI8",65,0)
 D FILE^DID(+X,"N","PACKAGE REVISION DATA","LEXN","LEXE")
"RTN","LEXXFI8",66,0)
 S X="" S:'$D(DIERR) X=$G(LEXN("PACKAGE REVISION DATA"))
"RTN","LEXXFI8",67,0)
 S:+$P(X,"^",2) $P(X,"^",2)=$$SD($P(X,"^",2))
"RTN","LEXXFI8",68,0)
 Q X
"RTN","LEXXFI8",69,0)
DDT(X) ; CPT Distribution Date
"RTN","LEXXFI8",70,0)
 N LEXDDT S LEXDDT=$$GET1^DIQ(81.2,"1,",.02,"I") Q:'$L(LEXDDT) ""  Q:+LEXDDT'>0 ""  S X=$$SD(LEXDDT)
"RTN","LEXXFI8",71,0)
 Q X
"RTN","LEXXFI8",72,0)
ADR(LEX) ; Mailing Address
"RTN","LEXXFI8",73,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXFI8",74,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXFI8",75,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEXXFI8",76,0)
MX(X) ; Mix Case
"RTN","LEXXFI8",77,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXFI8",78,0)
LTS(X) ; Long to Short Date
"RTN","LEXXFI8",79,0)
 N %DT,Y S X=$G(X) Q:'$L(X) ""  S %DT="T" D ^%DT S X=$$SD(Y)
"RTN","LEXXFI8",80,0)
 Q X
"RTN","LEXXFI8",81,0)
SD(X) ; Short Date
"RTN","LEXXFI8",82,0)
 S X=$G(X),X=$TR($$FMTE^XLFDT($P(X,".",1),"5DZ"),"@"," ")
"RTN","LEXXFI8",83,0)
 Q X
"RTN","LEXXFI8",84,0)
PKG(X) ; Package
"RTN","LEXXFI8",85,0)
 N D,DIC,DTOUT,DUOUT,LEXFI,LEXN S LEXFI=+($G(X)) Q:+LEXFI'>0 ""
"RTN","LEXXFI8",86,0)
 S LEXN=$S($P(LEXFI,".",1)=757:"LEXICON UTILITY",$P(LEXFI,".",1)=80:"DRG GROUPER",$P(LEXFI,".",1)=81:"CPT/HCPCS CODES",1:"")
"RTN","LEXXFI8",87,0)
 Q:'$L(LEXN)  N X,Y S DIC="^DIC(9.4,",D="B",DIC(0)="X",X=LEXN D IX^DIC
"RTN","LEXXFI8",88,0)
 S X=+($G(Y))
"RTN","LEXXFI8",89,0)
 Q X
"RTN","LEXXFI8",90,0)
PH(X,Y) ; Patch History
"RTN","LEXXFI8",91,0)
 N DA,DIC,DTOUT,DUOUT,LEXPK,LEXVR
"RTN","LEXXFI8",92,0)
 S (DA(1),LEXPK)=+($G(X)) Q:+LEXPK'>0 ""  S LEXVR=$G(Y) Q:'$L(LEXVR) ""  Q:+LEXVR'>0 ""
"RTN","LEXXFI8",93,0)
 S DIC="^DIC(9.4,"_DA(1)_",22,",X=LEXVR,DIC(0)="X"
"RTN","LEXXFI8",94,0)
 D ^DIC S X=+($G(Y)) S:+Y'>0 X=""
"RTN","LEXXFI8",95,0)
 Q X
"RTN","LEXXFI8",96,0)
TIC(X) ; Time
"RTN","LEXXFI8",97,0)
 Q $$NOW^XLFDT
"RTN","LEXXFI8",98,0)
ELAP(X,Y) ; Elapsed Time (start,end)
"RTN","LEXXFI8",99,0)
 Q $TR($$FMDIFF^XLFDT(+($G(Y)),+($G(X)),3)," ","0")
"RTN","LEXXFI8",100,0)
LDR(X) ; Leader
"RTN","LEXXFI8",101,0)
 N LEXFI,LEXMOD S LEXFI=+($G(X)) Q:LEXFI'>0 0  S LEXMOD=$$MOD(LEXFI),X=$S(+LEXMOD>0:" * ",1:"   ")
"RTN","LEXXFI8",102,0)
 Q X
"RTN","LEXXFI8",103,0)
MOD(X) ; Modifier File
"RTN","LEXXFI8",104,0)
 N LEXFI,LEXSRC,LEXE,LEXTAG,LEXRTN,LEXCTR,LEXLDR,LEXMOD
"RTN","LEXXFI8",105,0)
 S LEXSRC=+($G(X)) Q:LEXSRC'>0 0
"RTN","LEXXFI8",106,0)
 S LEXFI="",LEXE=0,LEXTAG="FILES",LEXRTN="LEXXFI",LEXCTR=0,LEXMOD=0
"RTN","LEXXFI8",107,0)
 F  D  Q:LEXFI=""  Q:+LEXE>0
"RTN","LEXXFI8",108,0)
 . S LEXCTR=LEXCTR+1
"RTN","LEXXFI8",109,0)
 . S LEXEX="S LEXLINE=$T("_LEXTAG_"+"_LEXCTR_"^"_LEXRTN_")" X LEXEX
"RTN","LEXXFI8",110,0)
 . S LEXFI=$P(LEXLINE,";;",2,3)
"RTN","LEXXFI8",111,0)
 . S LEXLDR=$P(LEXFI,";;",1),LEXFI=$P(LEXFI,";;",2)
"RTN","LEXXFI8",112,0)
 . Q:'$L(LEXFI)  Q:+LEXFI'=LEXSRC
"RTN","LEXXFI8",113,0)
 . S LEXMOD=$S(+LEXLDR>0:1,1:0) S:LEXMOD>0 LEXE=1
"RTN","LEXXFI8",114,0)
 S X=LEXMOD
"RTN","LEXXFI8",115,0)
 Q X
"RTN","LEXXFI8",116,0)
MF(X) ; Modified Files
"RTN","LEXXFI8",117,0)
 N LEXMOD,LEXT S LEXMOD=+($G(X)) Q:LEXMOD'>0
"RTN","LEXXFI8",118,0)
 S LEXT=" * "_$S(LEXMOD>1:"These ",1:"This ")_"file"
"RTN","LEXXFI8",119,0)
 S LEXT=LEXT_$S(LEXMOD>1:"s ",1:" ")
"RTN","LEXXFI8",120,0)
 S LEXT=LEXT_"contain"_$S(LEXMOD>1:" ",1:"s ")
"RTN","LEXXFI8",121,0)
 S LEXT=LEXT_"fields that may be modified at the site."
"RTN","LEXXFI8",122,0)
 D BL^LEXXFI8,TL^LEXXFI8(LEXT)
"RTN","LEXXFI8",123,0)
 S LEXT="   The Checksum"_$S(LEXMOD>1:"s ",1:" ")
"RTN","LEXXFI8",124,0)
 S LEXT=LEXT_"for "_$S(LEXMOD>1:"these ",1:"this ")
"RTN","LEXXFI8",125,0)
 S LEXT=LEXT_"file"_$S(LEXMOD>1:"s ",1:" ")
"RTN","LEXXFI8",126,0)
 S LEXT=LEXT_"may vary from site to site."
"RTN","LEXXFI8",127,0)
 D TL^LEXXFI8(LEXT)
"RTN","LEXXFI8",128,0)
 Q
"RTN","LEXXFI8",129,0)
BL ; Blank Line
"RTN","LEXXFI8",130,0)
 N LEXI,LEXT S LEXI=+($O(^TMP("LEXCS",$J," "),-1)),LEXT=$G(^TMP("LEXCS",$J,+LEXI))
"RTN","LEXXFI8",131,0)
 Q:(LEXI+1)'>1  D:LEXT'="   " TL("   ")
"RTN","LEXXFI8",132,0)
 Q
"RTN","LEXXFI8",133,0)
TL(X) ; Text Line
"RTN","LEXXFI8",134,0)
 S X=$G(X) W:'$D(ZTQUEUED) !,X
"RTN","LEXXFI8",135,0)
 N LEXI S LEXI=+($O(^TMP("LEXCS",$J," "),-1))+1,^TMP("LEXCS",$J,LEXI)=X,^TMP("LEXCS",$J,0)=LEXI
"RTN","LEXXFI8",136,0)
 Q
"RTN","LEXXFI8",137,0)
TT(X,Y) ; Title Line
"RTN","LEXXFI8",138,0)
 N LEXFI,LEXTT,LEXT,LEXN,LEXNM S LEXFI=$G(X),LEXTT=$G(Y) S:+($$IF(LEXFI))'>0 LEXFI=""
"RTN","LEXXFI8",139,0)
 S:+LEXFI>0 LEXNM=$$FN(LEXFI)_" File (#"_+LEXFI_")" S:+LEXFI'>0 LEXNM="Lexicon/ICD/CPT File"
"RTN","LEXXFI8",140,0)
 S LEXT=" "_LEXNM_" "_$G(LEXTT) S:+($G(LEXMUL))>0&($E(LEXT,$L(LEXT))'="s") LEXT=LEXT_"s"
"RTN","LEXXFI8",141,0)
 D BL,TL(LEXT) S $P(LEXN,"=",$L(LEXT))="",LEXN=" "_LEXN D TL(LEXN)
"RTN","LEXXFI8",142,0)
 Q
"RTN","LEXXFI8",143,0)
IF(X) ; Is File on the List of Files
"RTN","LEXXFI8",144,0)
 N LEXTAG,LEXRTN,LEXCTR,LEXCTL,LEXFI,LEXLINE,LEXOK S LEXCTL=$G(X) Q:'$L(LEXCTL) 0  Q:+LEXCTL'>0 0
"RTN","LEXXFI8",145,0)
 S LEXFI="",LEXTAG="FILES",LEXRTN="LEXXFI",(LEXCTR,LEXOK)=0
"RTN","LEXXFI8",146,0)
 F  D  Q:LEXFI=""  Q:+LEXOK>0
"RTN","LEXXFI8",147,0)
 . S LEXCTR=LEXCTR+1
"RTN","LEXXFI8",148,0)
 . S LEXEX="S LEXLINE=$T("_LEXTAG_"+"_LEXCTR_"^"_LEXRTN_")" X LEXEX
"RTN","LEXXFI8",149,0)
 . S LEXFI=$P(LEXLINE,";;",2,3),LEXFI=$P(LEXFI,";;",2)
"RTN","LEXXFI8",150,0)
 . Q:'$L(LEXFI)  S:+LEXFI=+LEXCTL LEXOK=1
"RTN","LEXXFI8",151,0)
 S X=LEXOK
"RTN","LEXXFI8",152,0)
 Q X
"RTN","LEXXFQ")
0^207^B17747138
"RTN","LEXXFQ",1,0)
LEXXFQ ;ISL/KER - Set Frequencies in 757.001 ;04/21/2014
"RTN","LEXXFQ",2,0)
 ;;2.0;LEXICON UTILITY;**4,25,73,80**;Sep 23, 1996;Build 1
"RTN","LEXXFQ",3,0)
 ;               
"RTN","LEXXFQ",4,0)
 ; Global Variables
"RTN","LEXXFQ",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXXFQ",6,0)
 ;               
"RTN","LEXXFQ",7,0)
 ; External References
"RTN","LEXXFQ",8,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXFQ",9,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXFQ",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXFQ",11,0)
 ;    NOW^%DTC            ICR  10000
"RTN","LEXXFQ",12,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXFQ",13,0)
 ;               
"RTN","LEXXFQ",14,0)
 Q
"RTN","LEXXFQ",15,0)
EN ; Update term frequencies when not found  (at site)
"RTN","LEXXFQ",16,0)
 S ZTRTN="UP^LEXXFQ",ZTDESC="Update Term Frequency in file 757.001"
"RTN","LEXXFQ",17,0)
 S ZTIO="",ZTDTH=$H
"RTN","LEXXFQ",18,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXFQ",19,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXXFQ",20,0)
 Q
"RTN","LEXXFQ",21,0)
EN2 ; Reset term frequencies to export values (at CIOFO)
"RTN","LEXXFQ",22,0)
 S ZTRTN="RE^LEXXFQ",ZTDESC="Reset Term Frequencies in file 757.001"
"RTN","LEXXFQ",23,0)
 S ZTIO="",ZTDTH=$H
"RTN","LEXXFQ",24,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXFQ",25,0)
 K Y,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","LEXXFQ",26,0)
 Q
"RTN","LEXXFQ",27,0)
CHK ; Check frequencies                       (at site or IRMFO)
"RTN","LEXXFQ",28,0)
 N LEXI,LEXC S (LEXI,LEXC)=0
"RTN","LEXXFQ",29,0)
 F  S LEXI=$O(^LEX(757,LEXI)) Q:+LEXI=0  S:'$D(^LEX(757.001,LEXI)) LEXC=LEXC+1
"RTN","LEXXFQ",30,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",31,0)
 .W:LEXC>0 !!,LEXC," Concepts do not have frequencies set",!!
"RTN","LEXXFQ",32,0)
 .W:LEXC'>0 !!,"All concepts have frequencies set",!!
"RTN","LEXXFQ",33,0)
 Q
"RTN","LEXXFQ",34,0)
UP ; Update frequencies
"RTN","LEXXFQ",35,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",36,0)
 N LEX1,LEX2,LEXU,LEXUC,LEXDC,LEXMA,LEXT,LEXL,LEXH
"RTN","LEXXFQ",37,0)
 S (LEXDC,LEXU,LEXUC,LEXT,LEXL,LEXMA)=0,LEXH="."
"RTN","LEXXFQ",38,0)
 S LEX1=$$HACK
"RTN","LEXXFQ",39,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",40,0)
 .W !!,"Initializing Global",!,"  Start:     ",$P(LEX1,"^",2),!,"  "
"RTN","LEXXFQ",41,0)
 F  S LEXMA=$O(^LEX(757,LEXMA)) Q:+LEXMA=0  D
"RTN","LEXXFQ",42,0)
 . S:'$D(^LEX(757.001,LEXMA,0)) LEXH="+" S LEXT=LEXT+1,LEXL=LEXMA
"RTN","LEXXFQ",43,0)
 . W:'$D(ZTQUEUED)&(LEXT#1000=0) LEXH S:LEXT#1000=0 LEXH=".",LEXDC=LEXDC+1
"RTN","LEXXFQ",44,0)
 . W:'$D(ZTQUEUED)&(LEXDC#76=0)&(LEXDC>0)&(LEXT#1000=0) !,"  "
"RTN","LEXXFQ",45,0)
 . I '$D(^LEX(757.001,LEXMA,0)) D SET S LEXUC=LEXUC+1
"RTN","LEXXFQ",46,0)
 W:'$D(ZTQUEUED) LEXH
"RTN","LEXXFQ",47,0)
 S:LEXT>0 $P(^LEX(757.001,0),"^",4)=LEXT
"RTN","LEXXFQ",48,0)
 S:LEXL>0 $P(^LEX(757.001,0),"^",3)=LEXL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",49,0)
 S LEX2=$$HACK
"RTN","LEXXFQ",50,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFQ",51,0)
 .W !,"  Finished:  ",$P(LEX2,"^",2)
"RTN","LEXXFQ",52,0)
 .W !,"  Time:      ",$$TIME($P(LEX1,"^",1),$P(LEX2,"^",1)),!
"RTN","LEXXFQ",53,0)
 Q
"RTN","LEXXFQ",54,0)
RE ; Reset frequencies
"RTN","LEXXFQ",55,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFQ",56,0)
 N LEXMA,LEXT,LEXL S (LEXT,LEXL,LEXMA)=0
"RTN","LEXXFQ",57,0)
 F  S LEXMA=$O(^LEX(757,LEXMA)) Q:+LEXMA=0  S LEXT=LEXT+1,LEXL=LEXMA D SET
"RTN","LEXXFQ",58,0)
 S:LEXT>0 $P(^LEX(757.001,0),"^",4)=LEXT
"RTN","LEXXFQ",59,0)
 S:LEXL>0 $P(^LEX(757.001,0),"^",3)=LEXL S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LEXXFQ",60,0)
SET ; Set frequency
"RTN","LEXXFQ",61,0)
 N DIK,DIC,DA,LEXFQ
"RTN","LEXXFQ",62,0)
 S LEXMA=+($G(LEXMA))
"RTN","LEXXFQ",63,0)
 Q:'$D(^LEX(757,LEXMA,0))
"RTN","LEXXFQ",64,0)
 S DIC="^LEX(757.001,",DA=LEXMA,LEXFQ=+($$FQ(LEXMA))
"RTN","LEXXFQ",65,0)
 D:$D(^LEX(757.001,DA)) KILL^LEXNDX2
"RTN","LEXXFQ",66,0)
 S ^LEX(757.001,LEXMA,0)=LEXMA_"^"_LEXFQ_"^"_LEXFQ
"RTN","LEXXFQ",67,0)
 D SET^LEXNDX2
"RTN","LEXXFQ",68,0)
 Q
"RTN","LEXXFQ",69,0)
FQ(LEXX) ; Frequency
"RTN","LEXXFQ",70,0)
 ;
"RTN","LEXXFQ",71,0)
 ; LEXSAB  Source Abbreviation
"RTN","LEXXFQ",72,0)
 ; LEXSMC  Semantic Class
"RTN","LEXXFQ",73,0)
 ; LEXNUR  Nursing Class
"RTN","LEXXFQ",74,0)
 ; LEXBEH  Behavior/Mental Health Class
"RTN","LEXXFQ",75,0)
 ; LEXPRO  Procedural Class
"RTN","LEXXFQ",76,0)
 ; LEXDIA  Diagnostic Class
"RTN","LEXXFQ",77,0)
 ; LEXSA   IEN Source Code (ICD, CPT, DSM, etc)
"RTN","LEXXFQ",78,0)
 ; LEXMC   IEN Major Concept
"RTN","LEXXFQ",79,0)
 ; LEXSO   Code 
"RTN","LEXXFQ",80,0)
 ;
"RTN","LEXXFQ",81,0)
 N LEXMC S LEXMC=+($G(LEXX)) Q:'$D(^LEX(757,LEXMC,0)) 0 Q:LEXMC<3 0
"RTN","LEXXFQ",82,0)
 N LEXSA,LEXSAB,LEXSMC,LEXNUR,LEXBEH,LEXPRO,LEXDIA,LEXSN,LEXSO,LEXSR
"RTN","LEXXFQ",83,0)
 S (LEXSA,LEXNUR,LEXBEH,LEXPRO,LEXDIA)=0
"RTN","LEXXFQ",84,0)
 F  S LEXSA=$O(^LEX(757.02,"AMC",LEXMC,LEXSA)) Q:+LEXSA=0  D
"RTN","LEXXFQ",85,0)
 . S LEXSN=$G(^LEX(757.02,LEXSA,0))
"RTN","LEXXFQ",86,0)
 . S LEXSO=$P(LEXSN,"^",2),LEXSR=$P(LEXSN,"^",3)
"RTN","LEXXFQ",87,0)
 . Q:+$$STATCHK^LEXSRC2(LEXSO,,,LEXSR)=0
"RTN","LEXXFQ",88,0)
 . S LEXSAB=+($P($G(^LEX(757.02,LEXSA,0)),"^",3)) Q:LEXSAB=0
"RTN","LEXXFQ",89,0)
 . Q:LEXSAB>15  S:LEXSAB=1 LEXDIA=1
"RTN","LEXXFQ",90,0)
 . S:LEXSAB>1&(LEXSAB<5) LEXPRO=1
"RTN","LEXXFQ",91,0)
 . S:LEXSAB>4&(LEXSAB<7) LEXBEH=1
"RTN","LEXXFQ",92,0)
 . S:LEXSAB>10&(LEXSAB<16) LEXNUR=1
"RTN","LEXXFQ",93,0)
 S LEXSMC=$$SM(LEXMC),LEXX=0 I LEXDIA=1 S LEXX=4 Q LEXX
"RTN","LEXXFQ",94,0)
 I LEXBEH=1!(LEXSMC=1) S LEXX=3 Q LEXX
"RTN","LEXXFQ",95,0)
 I LEXPRO=1 S LEXX=2 Q LEXX
"RTN","LEXXFQ",96,0)
 I LEXNUR=1 S LEXX=1 Q LEXX
"RTN","LEXXFQ",97,0)
 Q LEXX
"RTN","LEXXFQ",98,0)
SM(LEXX) ; Semantic Map (757.1)
"RTN","LEXXFQ",99,0)
 N LEXMC,LEXCL,LEXSA
"RTN","LEXXFQ",100,0)
 S LEXSA=0,LEXMC=+($G(LEXX)),LEXX=0
"RTN","LEXXFQ",101,0)
 Q:'$D(^LEX(757,LEXMC,0)) 0
"RTN","LEXXFQ",102,0)
 F  S LEXSA=$O(^LEX(757.1,"B",LEXMC,LEXSA)) Q:+LEXSA=0  D
"RTN","LEXXFQ",103,0)
 .S LEXCL=+($P($G(^LEX(757.1,LEXSA,0)),"^",2))
"RTN","LEXXFQ",104,0)
 .I LEXCL=3!(LEXCL=6) S LEXX=1
"RTN","LEXXFQ",105,0)
 Q LEXX
"RTN","LEXXFQ",106,0)
HACK(LEXX) ; Time Hack
"RTN","LEXXFQ",107,0)
 N X,%,%H,%I
"RTN","LEXXFQ",108,0)
 N HACK D NOW^%DTC S HACK=$$FMTE^XLFDT(%,1),HACK=$TR(HACK,"@"," ")
"RTN","LEXXFQ",109,0)
 S LEXX=%_"^"_HACK Q LEXX
"RTN","LEXXFQ",110,0)
TIME(LEXBEG,LEXEND) ; Elapsed time from begining to end
"RTN","LEXXFQ",111,0)
 S LEXBEG=+($G(LEXBEG)) Q:LEXBEG=0 "" S LEXEND=+($G(LEXEND)) Q:LEXBEG=0 ""
"RTN","LEXXFQ",112,0)
 S LEXBEG=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3) S:$L($P(LEXBEG,":",1))=1 $P(LEXBEG,":",1)="0"_$P(LEXBEG,":",1) S LEXBEG=$TR(LEXBEG," ","0")
"RTN","LEXXFQ",113,0)
 Q LEXBEG
"RTN","LEXXGI")
0^146^B55219661
"RTN","LEXXGI",1,0)
LEXXGI ;ISL/KER - Global Import (^LEXM) ;04/21/2014
"RTN","LEXXGI",2,0)
 ;;2.0;LEXICON UTILITY;**4,25,26,27,28,29,46,49,50,41,59,73,80**;Sep 23, 1996;Build 1
"RTN","LEXXGI",3,0)
 ;              
"RTN","LEXXGI",4,0)
 ;              
"RTN","LEXXGI",5,0)
 ;               
"RTN","LEXXGI",6,0)
 ; Global Variables
"RTN","LEXXGI",7,0)
 ;    ^LEXM
"RTN","LEXXGI",8,0)
 ;               
"RTN","LEXXGI",9,0)
 ; External References
"RTN","LEXXGI",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXGI",11,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXGI",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXGI",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGI",14,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXGI",15,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEXXGI",16,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGI",17,0)
 ;               
"RTN","LEXXGI",18,0)
 ; NEWed or KILLed by Lexicon Environment Check routine LEX20nn
"RTN","LEXXGI",19,0)
 ;    LEXBUILD  Build
"RTN","LEXXGI",20,0)
 ;    LEXFY     Fiscal Year
"RTN","LEXXGI",21,0)
 ;    LEXIGHF   Global Host File
"RTN","LEXXGI",22,0)
 ;    LEXLREV   Revision
"RTN","LEXXGI",23,0)
 ;    LEXPTYPE  Patch Type
"RTN","LEXXGI",24,0)
 ;    LEXQTR    Quarter
"RTN","LEXXGI",25,0)
 ;    LEXREQP   Required Patches/Builds
"RTN","LEXXGI",26,0)
 ;              
"RTN","LEXXGI",27,0)
 ; NEWed or KILLed by KIDS during the Install of a patch/build
"RTN","LEXXGI",28,0)
 ;    XPDNM     Intall Flag
"RTN","LEXXGI",29,0)
 ;     
"RTN","LEXXGI",30,0)
EN ; Main Entry Point for Installing LEXM in Post-Installs
"RTN","LEXXGI",31,0)
 ;                
"RTN","LEXXGI",32,0)
 ; Requires 
"RTN","LEXXGI",33,0)
 ;                
"RTN","LEXXGI",34,0)
 ;   LEXBUILD - the name of the patch/build being installed
"RTN","LEXXGI",35,0)
 ;                
"RTN","LEXXGI",36,0)
 ; Uses
"RTN","LEXXGI",37,0)
 ;                
"RTN","LEXXGI",38,0)
 ;   LEXMSG   - If this variable exist, then an install message
"RTN","LEXXGI",39,0)
 ;              message will be set to G.LEXICON
"RTN","LEXXGI",40,0)
 ;              
"RTN","LEXXGI",41,0)
 ;   LEXSHORT - If this variable exist, the install message
"RTN","LEXXGI",42,0)
 ;              will be an abbreviated message, without the 
"RTN","LEXXGI",43,0)
 ;              file totals and checksums
"RTN","LEXXGI",44,0)
 ;               
"RTN","LEXXGI",45,0)
 ;              Abbreviated Install Message
"RTN","LEXXGI",46,0)
 ;               
"RTN","LEXXGI",47,0)
 ;                Date and Time Installed
"RTN","LEXXGI",48,0)
 ;                Account where the Data was Installed
"RTN","LEXXGI",49,0)
 ;                Who Installed the Data
"RTN","LEXXGI",50,0)
 ;                The Name of the Build Installed
"RTN","LEXXGI",51,0)
 ;                The Name of the Global Host File
"RTN","LEXXGI",52,0)
 ;                Protocol Invoked
"RTN","LEXXGI",53,0)
 ;                Date and time Protocol was Invoked
"RTN","LEXXGI",54,0)
 ;                Install Start Date/Time
"RTN","LEXXGI",55,0)
 ;                Install Complete Date/Time
"RTN","LEXXGI",56,0)
 ;                Install Elapsed Time
"RTN","LEXXGI",57,0)
 ;               
"RTN","LEXXGI",58,0)
 ;              Long Install Message
"RTN","LEXXGI",59,0)
 ;               
"RTN","LEXXGI",60,0)
 ;                All of the elements above plus:
"RTN","LEXXGI",61,0)
 ;               
"RTN","LEXXGI",62,0)
 ;                   File Versions/Revisions
"RTN","LEXXGI",63,0)
 ;                   File Checksums
"RTN","LEXXGI",64,0)
 ;                   File Record Counts
"RTN","LEXXGI",65,0)
 ;              
"RTN","LEXXGI",66,0)
 ;   LEXNOPRO - If this variable exist, the protocol LEXICAL
"RTN","LEXXGI",67,0)
 ;              SERVICES UPDATE will not be invoked.
"RTN","LEXXGI",68,0)
 ;              
"RTN","LEXXGI",69,0)
 ;   LEXPTYPE - Patch Type
"RTN","LEXXGI",70,0)
 ;   LEXLREV  - Revision
"RTN","LEXXGI",71,0)
 ;   LEXREQP  - Required Patches/Builds
"RTN","LEXXGI",72,0)
 ;   LEXIGHF  - The patch Export Global Host Filename
"RTN","LEXXGI",73,0)
 ;   LEXFY    - Fiscal Year
"RTN","LEXXGI",74,0)
 ;   LEXQTR   - Quarter
"RTN","LEXXGI",75,0)
 ;   LEXCRE   - Import Global Creation Date
"RTN","LEXXGI",76,0)
 ;                
"RTN","LEXXGI",77,0)
 D IMPORT D KALL^LEXXGI2
"RTN","LEXXGI",78,0)
 Q
"RTN","LEXXGI",79,0)
TASK ; Queue Lexicon Update with Taskman
"RTN","LEXXGI",80,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK,ZTSAVE,ZTQUEUED,ZTREQ S:$D(LEXBUILD) ZTSAVE("LEXBUILD")="" S:$D(LEXMSG) ZTSAVE("LEXMSG")=""
"RTN","LEXXGI",81,0)
 S:$D(LEXSHORT) ZTSAVE("LEXSHORT")="" S:$D(LEXPTYPE) ZTSAVE("LEXPTYPE")="" S:$D(LEXLREV) ZTSAVE("LEXLREV")="" S:$D(LEXREQP) ZTSAVE("LEXREQP")=""
"RTN","LEXXGI",82,0)
 S:$D(LEXIGHF) ZTSAVE("LEXIGHF")="" S:$D(LEXFY) ZTSAVE("LEXFY")="" S:$D(LEXQTR) ZTSAVE("LEXQTR")="" S:$D(LEXCRE) ZTSAVE("LEXCRE")=""
"RTN","LEXXGI",83,0)
 S ZTRTN="EN^LEXXGI",ZTDESC="Importing Updated Lexicon Data" S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXGI",84,0)
 Q
"RTN","LEXXGI",85,0)
LEXM ; Force Install of LEXM w/o a Post-Install
"RTN","LEXXGI",86,0)
 N LEXBUILD,LEXBLD,LEXB,LEXBO,LEXCHK,LEXSHORT,LEXTYPE,LEXMSG,LEXPOST,LEXNDS,LEXNOPRO,LEXVER
"RTN","LEXXGI",87,0)
 S LEXNOPRO="",LEXBO=$G(^LEXM(0,"BUILD")),(LEXBUILD,LEXBLD,LEXB,^LEXM(0,"BUILD"))="LEX*2.0*NN"
"RTN","LEXXGI",88,0)
 S:$L($G(LEXBO)) (LEXBUILD,LEXBLD,LEXB,^LEXM(0,"BUILD"))=LEXBO
"RTN","LEXXGI",89,0)
 S LEXSHORT="",LEXTYPE=LEXB S:$L(LEXB) LEXTYPE=LEXTYPE_" (Forced)" S LEXMSG="",LEXPOST=""
"RTN","LEXXGI",90,0)
 S LEXCHK=+($G(^LEXM(0,"CHECKSUM"))) W !,"   Running checksum routine on the ^LEXM import global, please wait"
"RTN","LEXXGI",91,0)
 S LEXNDS=+($G(^LEXM(0,"NODES"))),LEXVER=+($$VC^LEXXGI2(LEXCHK,LEXNDS)) W !
"RTN","LEXXGI",92,0)
 W:LEXVER>0 !,"     Checksum is ok",!
"RTN","LEXXGI",93,0)
 I LEXVER=0 W !!,"   Import global ^LEXM is missing.  Please obtain a copy of ^LEXM before",!,"   continuing." Q
"RTN","LEXXGI",94,0)
 I LEXVER<0 D  Q
"RTN","LEXXGI",95,0)
 . I LEXVER'=-3 W !,"   Unable to verify checksum for import global ^LEXM (possibly corrupt)"
"RTN","LEXXGI",96,0)
 . I LEXVER=-3 W !,"   Import global ^LEXM failed checksum"
"RTN","LEXXGI",97,0)
 . W !!,"     Please KILL the existing import global ^LEXM from your system and"
"RTN","LEXXGI",98,0)
 . W !,"     obtain a new copy of ^LEXM before continuing with the installation."
"RTN","LEXXGI",99,0)
 D EN
"RTN","LEXXGI",100,0)
 Q
"RTN","LEXXGI",101,0)
IMPORT ; Import Data during a Patch Installation
"RTN","LEXXGI",102,0)
 S:$D(ZTQUEUED) ZTREQ="@" S:$L($G(LEXPTYPE)) LEXPTYPE=$G(LEXPTYPE) S:$L($G(LEXLREV)) LEXLREV=$G(LEXLREV) S:$L($G(LEXREQP)) LEXREQP=$G(LEXREQP)
"RTN","LEXXGI",103,0)
 S:$L($G(LEXBUILD)) LEXBUILD=$G(LEXBUILD) S:$L($G(LEXIGHF)) LEXIGHF=$G(LEXIGHF) S:$L($G(LEXFY)) LEXFY=$G(LEXFY)
"RTN","LEXXGI",104,0)
 S:$L($G(LEXQTR)) LEXQTR=$G(LEXQTR) K LEXSCHG,LEXCHG
"RTN","LEXXGI",105,0)
 N LEXB,LEXCD,LEXSTR,LEXLAST,LEXRES,LEXSTART,DG,DIC,DICR,DILOCKTM,DIW,XMDUN,XMZ,ZTSK
"RTN","LEXXGI",106,0)
 S U="^",LEXSTR=$G(LEXPTYPE),LEXB=$G(^LEXM(0,"BUILD")),LEXSTART=$$NOW^XLFDT
"RTN","LEXXGI",107,0)
 S:$L($G(LEXFY))&($L($G(LEXQTR)))&($L(LEXSTR)) LEXSTR=LEXSTR_" for "_$G(LEXFY)_" "_$G(LEXQTR)_" Quarter"
"RTN","LEXXGI",108,0)
 S:$L(LEXB) LEXBLD=LEXB S:'$L(LEXBLD)&($L(LEXBUILD)) LEXBLD=LEXBUILD
"RTN","LEXXGI",109,0)
 I '$L(LEXB)!(LEXB'=LEXBUILD) D
"RTN","LEXXGI",110,0)
 . N X,LEXBLD I '$L(LEXB) D  Q
"RTN","LEXXGI",111,0)
 . . S X=" Invalid export global, aborting data install" W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",112,0)
 . I '$L(LEXBUILD) D  Q
"RTN","LEXXGI",113,0)
 . . S X=" Undefined KIDS Build, aborting data install" W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",114,0)
 I $L(LEXB)&(LEXB=LEXBUILD) D
"RTN","LEXXGI",115,0)
 . N LEXFI,LEXID,LEXPROC S X="Installing Data for patch "_LEXB W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",116,0)
 . K LEXSCHG S LEXCHG=0,LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI'>0  D
"RTN","LEXXGI",117,0)
 . . S LEXID=$S($P(LEXFI,".",1)=80:"ICD",$P(LEXFI,".",1)=81:"CPT",$P(LEXFI,".",1)=757:"LEX",1:"") S:$L(LEXID) LEXSCHG(LEXID)=0,LEXSCHG("LEX")=0
"RTN","LEXXGI",118,0)
 . S:$D(LEXSCHG("CPT"))!($D(LEXSCHG("ICD"))) LEXSCHG("PRO")="",LEXCHG=1,LEXSCHG(0)=1
"RTN","LEXXGI",119,0)
 . D LOAD K LEXPROC I '$D(LEXNOPRO) D NOTIFY^LEXXGI2
"RTN","LEXXGI",120,0)
 . I +($G(DUZ))>0,$L($$GET1^DIQ(200,(+($G(DUZ))_","),.01)) D
"RTN","LEXXGI",121,0)
 . . D HOME^%ZIS N DIFROM,LEXPRO,LEXPRON,LEXLAST S LEXPRON="LEXICAL SERVICES UPDATE",LEXPRO=$G(^LEXM(0,"PRO"))
"RTN","LEXXGI",122,0)
 . . D:$D(LEXMSG) POST^LEXXFI
"RTN","LEXXGI",123,0)
 Q
"RTN","LEXXGI",124,0)
LOAD ; Load Data from ^LEXM into IC*/LEX Files
"RTN","LEXXGI",125,0)
 Q:'$L($G(LEXB))  S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI",126,0)
 N LEXBEG,LEXELP,LEXEND,LEXMSG,LEXOK,LEXFL,LEXTXT
"RTN","LEXXGI",127,0)
 D:'$D(^LEXM) NF^LEXXGI2 Q:'$D(^LEXM)
"RTN","LEXXGI",128,0)
 S LEXOK=0 S:$O(^LEXM(0))>0 LEXOK=1 D:'LEXOK IG^LEXXGI2 Q:'LEXOK
"RTN","LEXXGI",129,0)
 S LEXBEG=$$HACK^LEXXGI2 D FILES^LEXXGI3 S LEXEND=$$HACK^LEXXGI2,LEXELP=$$ELAP^LEXXGI2(LEXBEG,LEXEND)
"RTN","LEXXGI",130,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXGI",131,0)
 S LEXRES=$$RESULTS^LEXXII2
"RTN","LEXXGI",132,0)
 S LEXTXT="  Data Update" S:$L(LEXRES) LEXTXT=LEXTXT_":   "_$G(LEXRES)
"RTN","LEXXGI",133,0)
 D PB^LEXXGI2(LEXTXT)
"RTN","LEXXGI",134,0)
 D PB^LEXXGI2(("     Started:    "_$TR($$FMTE^XLFDT(LEXBEG),"@"," ")))
"RTN","LEXXGI",135,0)
 D TL^LEXXGI2(("     Finished:   "_$TR($$FMTE^XLFDT(LEXEND),"@"," ")))
"RTN","LEXXGI",136,0)
 D TL^LEXXGI2(("     Elapsed:    "_LEXELP))
"RTN","LEXXGI",137,0)
 Q
"RTN","LEXXGI",138,0)
 ;                     
"RTN","LEXXGI",139,0)
NOTIFY ; Notify by Protocol - LEXICAL SERVICES UPDATE
"RTN","LEXXGI",140,0)
 I '$D(LEXNOPRO) D NOTIFY^LEXXGI2,KALL^LEXXGI2
"RTN","LEXXGI",141,0)
 Q
"RTN","LEXXGI",142,0)
AWRD ; Recalculate ASL Cross-Reference in 757.01
"RTN","LEXXGI",143,0)
 D:$L($T(AWRD^LEXXGI4)) AWRD^LEXXGI4
"RTN","LEXXGI",144,0)
 Q
"RTN","LEXXGI",145,0)
ASL ; Recalculate ASL Cross-Reference in 757.01
"RTN","LEXXGI",146,0)
 D:$L($T(ASL^LEXXGI4)) ASL^LEXXGI4
"RTN","LEXXGI",147,0)
 Q
"RTN","LEXXGI",148,0)
SUB ; Re-Index Subset file 757.21 (set logic only)
"RTN","LEXXGI",149,0)
 D:$L($T(SUB^LEXXGI4)) SUB^LEXXGI4
"RTN","LEXXGI",150,0)
 Q
"RTN","LEXXGI",151,0)
SCHG ;   Save Change File Changes (for NOTIFY)
"RTN","LEXXGI",152,0)
 N LEXFI,LEXID K LEXSCHG S LEXCHG=0
"RTN","LEXXGI",153,0)
 N LEXFI S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI'>0  D
"RTN","LEXXGI",154,0)
 . S LEXID=$S(LEXFI=80!(LEXFI=80.1):"ICD",LEXFI=81!(LEXFI=81.1)!(LEXFI=81.2)!(LEXFI=81.3):"CPT",$P(LEXFI,".",1)=757:"LEX",1:"UNK")
"RTN","LEXXGI",155,0)
 . S LEXSCHG(LEXFI,0)=+($G(^LEXM(LEXFI,0))),LEXSCHG("B",LEXFI)="" S LEXSCHG("C",LEXID,LEXFI)=""
"RTN","LEXXGI",156,0)
 S:$D(LEXSCHG("C","CPT"))!($D(LEXSCHG("C","ICD"))) LEXSCHG("D","PRO")=""
"RTN","LEXXGI",157,0)
 S:$D(^LEXM(80))!($D(^LEXM(80.1)))!($D(^LEXM(81)))!($D(^LEXM(81.2)))!($D(^LEXM(81.3)))!($D(LEXSCHG("D","PRO"))) LEXCHG=1,LEXSCHG(0)=1
"RTN","LEXXGI",158,0)
 Q
"RTN","LEXXGI",159,0)
INV(X,Y) ; Protocol Invoked
"RTN","LEXXGI",160,0)
 N LEXN,LEXP,LEXPD,LEXDT,LEXSAB S LEXSAB=$G(X) Q:"^LEX^ICD^CPT^"'[("^"_LEXSAB_"^")  S LEXP=$S(X="LEX":1,X="ICD":2,X="CPT":3,1:"") Q:+LEXP'>0
"RTN","LEXXGI",161,0)
 S LEXPD=LEXP+(.5),LEXDT=$G(Y) S:$P(LEXDT,",",1)'?7N LEXDT=$$NOW^XLFDT S:'$D(^LEXT(757.2,1,200,0)) ^LEXT(757.2,1,200,0)="^757.201PA^.5^1"
"RTN","LEXXGI",162,0)
 S ^LEXT(757.2,1,200,.5,0)=.5,^LEXT(757.2,1,200,.5,LEXP)=LEXSAB,^LEXT(757.2,1,200,.5,LEXPD)=LEXN
"RTN","LEXXGI",163,0)
 Q
"RTN","LEXXGI",164,0)
ZTQ ; Taskman Quit
"RTN","LEXXGI",165,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI",166,0)
 Q
"RTN","LEXXGI",167,0)
CHECKSUM ; Check ^LEXM Checksum
"RTN","LEXXGI",168,0)
 D CS^LEXXGI2
"RTN","LEXXGI",169,0)
 Q
"RTN","LEXXGI2")
0^147^B66453808
"RTN","LEXXGI2",1,0)
LEXXGI2 ;ISL/KER - Global Import (Protocol/Checksum/Misc) ;04/21/2014
"RTN","LEXXGI2",2,0)
 ;;2.0;LEXICON UTILITY;**25,26,28,29,46,49,50,73,80**;Sep 23, 1996;Build 1
"RTN","LEXXGI2",3,0)
 ;             
"RTN","LEXXGI2",4,0)
 ; Global Variables
"RTN","LEXXGI2",5,0)
 ;    ^LEXM               N/A
"RTN","LEXXGI2",6,0)
 ;    ^ORD(101,           ICR    872
"RTN","LEXXGI2",7,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXXGI2",8,0)
 ;               
"RTN","LEXXGI2",9,0)
 ; External References
"RTN","LEXXGI2",10,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXXGI2",11,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXGI2",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGI2",13,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXGI2",14,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEXXGI2",15,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGI2",16,0)
 ;    EN^XQOR             ICR  10101
"RTN","LEXXGI2",17,0)
 ;               
"RTN","LEXXGI2",18,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGI2",19,0)
 ;     LEXCHG    Post-Install
"RTN","LEXXGI2",20,0)
 ;     LEXNOPRO  Post-Install
"RTN","LEXXGI2",21,0)
 ;     XPDNM     KIDS install
"RTN","LEXXGI2",22,0)
 ;            
"RTN","LEXXGI2",23,0)
 Q
"RTN","LEXXGI2",24,0)
NOTIFY ; Notify by Protocol - LEXICAL SERVICES UPDATE
"RTN","LEXXGI2",25,0)
 ;     Uses LEXSCHG() from the Post-Install
"RTN","LEXXGI2",26,0)
 ;     Sets ^LEXM(0,"PRO")=$$NOW^XLFDT
"RTN","LEXXGI2",27,0)
 Q:$D(LEXNOPRO)  Q:'$D(LEXSCHG("ICD"))&('$D(LEXSCHG("CPT")))&('$D(LEXSCHG("LEX")))
"RTN","LEXXGI2",28,0)
 S:$D(LEXSCHG("ICD")) LEXSCHG("ICD")=0,LEXSCHG("LEX")=0 S:$D(LEXSCHG("CPT")) LEXSCHG("CPT")=0,LEXSCHG("LEX")=0
"RTN","LEXXGI2",29,0)
 S:'$D(LEXSCHG("ICD"))&('$D(LEXSCHG("CPT")))&($D(LEXSCHG("LEX"))) LEXSCHG("ICD")=0,LEXSCHG("CPT")=0
"RTN","LEXXGI2",30,0)
 N X,LEXU,LEXF,LEXI,LEXL,LEX1,LEX2,LEX3,LEXN,LEXP,LEXUP,LEXPC S LEXUP="",LEXPC=0
"RTN","LEXXGI2",31,0)
 S:$D(LEXSCHG("ICD")) LEXUP=$G(LEXUP)_"ICD" S:$D(LEXSCHG("CPT")) LEXUP=$G(LEXUP)_"/CPT"
"RTN","LEXXGI2",32,0)
 S:$E(LEXUP,1)="/" LEXUP=$E(LEXUP,2,$L(LEXUP)) S:$L(LEXUP) LEXUP=LEXUP_" "
"RTN","LEXXGI2",33,0)
 S:$D(LEXSCHG("LEX")) LEXF="Lexicon" S:$D(LEXSCHG("ICD")) LEXF=$G(LEXF)_", ICD" S:$D(LEXSCHG("CPT")) LEXF=$G(LEXF)_", CPT"
"RTN","LEXXGI2",34,0)
 S:$E($G(LEXF),1,2)=", " LEXF=$E($G(LEXF),3,$L($G(LEXF))),LEXF=$$TRIM(LEXF)
"RTN","LEXXGI2",35,0)
 I $L(LEXF) D
"RTN","LEXXGI2",36,0)
 . S:$L(LEXF,", ")>1 LEXF=$P($G(LEXF),", ",1,($L($G(LEXF),", ")-1))_" and "_$P($G(LEXF),", ",$L($G(LEXF),", "))
"RTN","LEXXGI2",37,0)
 . S:$L($P(LEXF,", ",1)) LEXF=$G(LEXF)_" File"_$S(LEXF[", ":"s",LEXF[" and ":"s",1:"")_" Updated"
"RTN","LEXXGI2",38,0)
 S LEXL=78-($L(LEXF)+4),LEXU="Lexical Files Updated"
"RTN","LEXXGI2",39,0)
 Q:'$D(LEXSCHG)  S LEXP=+($O(^ORD(101,"B","LEXICAL SERVICES UPDATE",0))) Q:LEXP=0  S X=LEXP_";ORD(101," D EN^XQOR
"RTN","LEXXGI2",40,0)
 S:$G(LEXSCHG("LEX"))>0!($G(LEXSCHG("ICD"))>0)!($G(LEXSCHG("CPT"))>0) ^LEXM(0,"PRO")=$$NOW^XLFDT
"RTN","LEXXGI2",41,0)
 S:$G(LEXSCHG("ICD"))>0!($G(LEXSCHG("CPT"))>0) LEXU="Lexicon/Code Sets Updated"
"RTN","LEXXGI2",42,0)
 Q:+($G(^LEXM(0,"PRO")))'>0  K LEXPROC D:$L($G(LEXU)) BL,TL($G(LEXU)),BL
"RTN","LEXXGI2",43,0)
 I +($G(LEXSCHG("LEX")))>0 D
"RTN","LEXXGI2",44,0)
 . N X,LEXED S X="  'LEXICAL SERVICES UPDATE' ",X=X_$J(" ",(30-$L(X)))
"RTN","LEXXGI2",45,0)
 . S LEXED=$$EDT($G(LEXSCHG("LEX"))) S:$L(LEXED) X=X_" "_LEXED S LEXPC=+($G(LEXPC))+1 S:$L(LEXED) LEXPROC((LEXPC+1))=X
"RTN","LEXXGI2",46,0)
 I +($G(LEXSCHG("ICD")))>0 D
"RTN","LEXXGI2",47,0)
 . N X,LEXED S X="  'ICD CODE UPDATE EVENT'   ",X=X_$J(" ",(30-$L(X)))
"RTN","LEXXGI2",48,0)
 . S LEXED=$$EDT($G(LEXSCHG("ICD"))) S:$L(LEXED) X=X_" "_LEXED S LEXPC=+($G(LEXPC))+1 S:$L(LEXED) LEXPROC((LEXPC+1))=X
"RTN","LEXXGI2",49,0)
 I +($G(LEXSCHG("CPT")))>0 D
"RTN","LEXXGI2",50,0)
 . N X,LEXED S X="  'CPT CODE UPDATE EVENT'   ",X=X_$J(" ",(30-$L(X)))
"RTN","LEXXGI2",51,0)
 . S LEXED=$$EDT($G(LEXSCHG("CPT"))) S:$L(LEXED) X=X_" "_LEXED S LEXPC=+($G(LEXPC))+1 S:$L(LEXED) LEXPROC((LEXPC+1))=X
"RTN","LEXXGI2",52,0)
 S:$O(LEXPROC(" "),-1)>1 LEXPROC(1)="Protocol invoked:" S:$O(LEXPROC(" "),-1)>2 LEXPROC(1)="Protocols invoked:"
"RTN","LEXXGI2",53,0)
 S LEXPC=0 F  S LEXPC=$O(LEXPROC(LEXPC)) Q:+LEXPC'>0  D
"RTN","LEXXGI2",54,0)
 . S X=$G(LEXPROC(LEXPC)) D TL(X) D:X["Protocol" BL
"RTN","LEXXGI2",55,0)
 S X="Subscribing applications were notified of the "_LEXUP_"update" D BL,TL(X),BL
"RTN","LEXXGI2",56,0)
 Q
"RTN","LEXXGI2",57,0)
UPCHG ;
"RTN","LEXXGI2",58,0)
 Q:+($G(LEXFI))'>0  N LEXID S LEXID=$S($P(LEXFI,".",1)="757":"LEX",$P(LEXFI,".",1)="80":"ICD",$P(LEXFI,".",1)="81":"CPT",1:"") Q:'$L(LEXID)
"RTN","LEXXGI2",59,0)
 S LEXSCHG(LEXID)=+($G(LEXSCHG(LEXID)))
"RTN","LEXXGI2",60,0)
 Q
"RTN","LEXXGI2",61,0)
SCHG ; Change Array LEXSCHG (Some or all, but never nothing)
"RTN","LEXXGI2",62,0)
 N LEXFI,LEXID K LEXSCHG S LEXCHG=0
"RTN","LEXXGI2",63,0)
 N LEXFI S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI'>0  D
"RTN","LEXXGI2",64,0)
 . S LEXID=$S(LEXFI=80!(LEXFI=80.1):"ICD",LEXFI=81!(LEXFI=81.1)!(LEXFI=81.2)!(LEXFI=81.3):"CPT",$P(LEXFI,".",1)=757:"LEX",1:"UNK")
"RTN","LEXXGI2",65,0)
 . S LEXSCHG(LEXFI,0)=+($G(^LEXM(LEXFI,0))),LEXSCHG("B",LEXFI)="" S LEXSCHG("C",LEXID,LEXFI)=""
"RTN","LEXXGI2",66,0)
 S:$D(LEXSCHG("C","CPT"))!($D(LEXSCHG("C","ICD"))) LEXSCHG("D","PRO")=""
"RTN","LEXXGI2",67,0)
 S:$D(^LEXM(80))!($D(^LEXM(80.1)))!($D(^LEXM(81)))!($D(^LEXM(81.2)))!($D(^LEXM(81.3)))!($D(LEXSCHG("D","PRO"))) LEXCHG=1,LEXSCHG(0)=1
"RTN","LEXXGI2",68,0)
 D:$O(LEXSCHG(0))'>0 SALL S:$D(LEXSCHG("C","CPT"))!($D(LEXSCHG("C","ICD"))) LEXSCHG("D","PRO")=""
"RTN","LEXXGI2",69,0)
 Q
"RTN","LEXXGI2",70,0)
SALL ;   Set All (ICD/CPT/Lexicon)
"RTN","LEXXGI2",71,0)
 D SICD,SCPT,SLEX
"RTN","LEXXGI2",72,0)
 Q
"RTN","LEXXGI2",73,0)
SICD ;   Set ICD
"RTN","LEXXGI2",74,0)
 S (LEXSCHG("80",0),LEXSCHG("B","80"),LEXSCHG("C","ICD","80"))="",(LEXSCHG("80.1",0),LEXSCHG("B","80.1"),LEXSCHG("C","ICD","80.1"))="" D SLEX
"RTN","LEXXGI2",75,0)
 Q
"RTN","LEXXGI2",76,0)
SCPT ;   Set CPT
"RTN","LEXXGI2",77,0)
 S (LEXSCHG("81",0),LEXSCHG("B","81"),LEXSCHG("C","CPT","81"))="",(LEXSCHG("81.1",0),LEXSCHG("B","81.1"),LEXSCHG("C","CPT","81.1"))=""
"RTN","LEXXGI2",78,0)
 S (LEXSCHG("81.2",0),LEXSCHG("B","81.2"),LEXSCHG("C","CPT","81.2"))="",(LEXSCHG("81.3",0),LEXSCHG("B","81.3"),LEXSCHG("C","CPT","81.3"))="" D SLEX
"RTN","LEXXGI2",79,0)
 Q
"RTN","LEXXGI2",80,0)
SLEX ;   Set Lexicon
"RTN","LEXXGI2",81,0)
 S (LEXSCHG("757",0),LEXSCHG("B","757"),LEXSCHG("C","LEX","757"))="",(LEXSCHG("757.001",0),LEXSCHG("B","757.001"),LEXSCHG("C","LEX","757.001"))=""
"RTN","LEXXGI2",82,0)
 S (LEXSCHG("757.01",0),LEXSCHG("B","757.01"),LEXSCHG("C","LEX","757.01"))="",(LEXSCHG("757.02",0),LEXSCHG("B","757.02"),LEXSCHG("C","LEX","757.02"))=""
"RTN","LEXXGI2",83,0)
 S (LEXSCHG("757.1",0),LEXSCHG("B","757.1"),LEXSCHG("C","LEX","757.1"))=""
"RTN","LEXXGI2",84,0)
 Q
"RTN","LEXXGI2",85,0)
CS ;   Checksum for import global
"RTN","LEXXGI2",86,0)
 N LEXCHK,LEXNDS,LEXVER S LEXCHK=+($G(^LEXM(0,"CHECKSUM")))
"RTN","LEXXGI2",87,0)
 W !,"   Running checksum routine on the ^LEXM import global, please wait"
"RTN","LEXXGI2",88,0)
 S LEXNDS=+($G(^LEXM(0,"NODES"))),LEXVER=+($$VC(LEXCHK,LEXNDS)) W !
"RTN","LEXXGI2",89,0)
 W:LEXVER>0 !,"     Checksum is ok",! Q:LEXVER>0
"RTN","LEXXGI2",90,0)
 I LEXVER=0 W !!,"   Import global ^LEXM is missing.  Please obtain a copy of ^LEXM before",!,"   continuing." Q
"RTN","LEXXGI2",91,0)
 I LEXVER<0 D  Q
"RTN","LEXXGI2",92,0)
 . I LEXVER'=-3 W !,"   Unable to verify checksum for import global ^LEXM (possibly corrupt)"
"RTN","LEXXGI2",93,0)
 . I LEXVER=-3 W !,"   Import global ^LEXM failed checksum"
"RTN","LEXXGI2",94,0)
 . W !!,"     Please KILL the existing import global ^LEXM from your system and"
"RTN","LEXXGI2",95,0)
 . W !,"     obtain a new copy of ^LEXM before continuing with the installation."
"RTN","LEXXGI2",96,0)
 Q
"RTN","LEXXGI2",97,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEXXGI2",98,0)
 Q:'$D(^LEXM)!('$D(^LEXM(0)))!($O(^LEXM(0))'>0) 0  N LEXCHK,LEXNDS,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEXXGI2",99,0)
 S LEXCHK=+($G(X)),LEXNDS=+($G(Y)) Q:LEXCHK'>0!(LEXNDS'>0) -2  S LEXL=64,(LEXCNT,LEXLC)=0,LEXS=(+(LEXNDS\LEXL))
"RTN","LEXXGI2",100,0)
 S:LEXS=0 LEXS=1 W:+($O(^LEXM(0)))>0 ! S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0 W "   "
"RTN","LEXXGI2",101,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEXXGI2",102,0)
 . Q:LEXN="^LEXM(0,""CHECKSUM"")"  Q:LEXN="^LEXM(0,""NODES"")"  S LEXCNT=LEXCNT+1
"RTN","LEXXGI2",103,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEXXGI2",104,0)
 . S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEXXGI2",105,0)
 Q:LEXNC'=LEXNDS -3  Q:LEXGCS'=LEXCHK -3
"RTN","LEXXGI2",106,0)
 Q 1
"RTN","LEXXGI2",107,0)
 ; Miscellaneous
"RTN","LEXXGI2",108,0)
NF ;   Import Global Not Found
"RTN","LEXXGI2",109,0)
 D PB(" Import Global ^LEXM not found, consult the installation instructions")
"RTN","LEXXGI2",110,0)
 D TL(" to install this global")
"RTN","LEXXGI2",111,0)
 Q
"RTN","LEXXGI2",112,0)
IG ;   Invalid Import Global
"RTN","LEXXGI2",113,0)
 D PB(" Invalid Import Global ^LEXM, please consult the installation")
"RTN","LEXXGI2",114,0)
 D TL(" instructions to reload this global")
"RTN","LEXXGI2",115,0)
 Q
"RTN","LEXXGI2",116,0)
BL ;   Blank Line
"RTN","LEXXGI2",117,0)
 N X S X="" W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(X) Q
"RTN","LEXXGI2",118,0)
PB(X) ;   Preceeding Blank Line
"RTN","LEXXGI2",119,0)
 S X=$G(X) Q:'$L(X)  W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) Q
"RTN","LEXXGI2",120,0)
TL(X) ;   Text Line
"RTN","LEXXGI2",121,0)
 S X=$G(X) Q:'$L(X)  W:'$D(XPDNM) !,X D:$D(XPDNM) MES^XPDUTL(X) Q
"RTN","LEXXGI2",122,0)
HACK(X) ;   Time
"RTN","LEXXGI2",123,0)
 S X=$$NOW^XLFDT Q X
"RTN","LEXXGI2",124,0)
ELAP(LEX1,LEX2) ;   Elapsed Time
"RTN","LEXXGI2",125,0)
 N X S X=$$FMDIFF^XLFDT(+($G(LEX2)),+($G(LEX1)),3)
"RTN","LEXXGI2",126,0)
 S:X="" X="00:00:00" S X=$TR(X," ","0") S LEX1=X Q LEX1
"RTN","LEXXGI2",127,0)
 Q
"RTN","LEXXGI2",128,0)
KLEXM ;   Subscripted Kill of ^LEXM - files only
"RTN","LEXXGI2",129,0)
 N LEX S LEX=0 F  S LEX=$O(^LEXM(LEX)) Q:+LEX'>0  K ^LEXM(LEX)
"RTN","LEXXGI2",130,0)
 Q
"RTN","LEXXGI2",131,0)
KALL ;   Subscripted Kill of ^LEXM - all
"RTN","LEXXGI2",132,0)
 K LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXB,LEXCD,LEXSTR,LEXLAST
"RTN","LEXXGI2",133,0)
 K DIC,DICR,DILOCKTM,DIW,XMDUN,XMZ,ZTSK
"RTN","LEXXGI2",134,0)
 N LEX S LEX=0 F  S LEX=$O(^LEXM(LEX)) Q:+LEX'>0  K ^LEXM(LEX)
"RTN","LEXXGI2",135,0)
 K ^LEXM(0)
"RTN","LEXXGI2",136,0)
 Q
"RTN","LEXXGI2",137,0)
 ;   Error Text
"RTN","LEXXGI2",138,0)
ET(X) ;     Save Text
"RTN","LEXXGI2",139,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)=$G(X),LEXE(0)=LEXI Q
"RTN","LEXXGI2",140,0)
ED ;     Display Text
"RTN","LEXXGI2",141,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  W !,LEXE(LEXI)
"RTN","LEXXGI2",142,0)
 W ! K LEXE
"RTN","LEXXGI2",143,0)
 Q
"RTN","LEXXGI2",144,0)
 ;   Case
"RTN","LEXXGI2",145,0)
MIX(X) ;     Mixed Case
"RTN","LEXXGI2",146,0)
 S X=$G(X) N LEXT,LEXI S LEXT=""
"RTN","LEXXGI2",147,0)
 F LEXI=1:1:$L(X," ") S LEXT=LEXT_" "_$$UP($E($P(X," ",LEXI),1))_$$LO($E($P(X," ",LEXI),2,$L($P(X," ",LEXI))))
"RTN","LEXXGI2",148,0)
 F  Q:$E(LEXT,1)'=" "  S LEXT=$E(LEXT,2,$L(LEXT))
"RTN","LEXXGI2",149,0)
 S:$E(LEXT,1,3)="Cpt" LEXT="CPT"_$E(LEXT,4,$L(LEXT)) S:$E(LEXT,1,3)="Icd" LEXT="ICD"_$E(LEXT,4,$L(LEXT)) S X=LEXT
"RTN","LEXXGI2",150,0)
 Q X
"RTN","LEXXGI2",151,0)
UP(X) ;     Uppercase
"RTN","LEXXGI2",152,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXGI2",153,0)
LO(X) ;     Lowercase
"RTN","LEXXGI2",154,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXGI2",155,0)
WP(LEX,X) ;   Wrap Text LEX with Length L
"RTN","LEXXGI2",156,0)
 K ^UTILITY($J,"W") N LEXCT,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXLEN,LEXTI,LEXI
"RTN","LEXXGI2",157,0)
 S LEXTI=0,LEXLEN=+($G(X)) F  S LEXTI=$O(LEX(LEXTI)) Q:+LEXTI'>0  D
"RTN","LEXXGI2",158,0)
 . N X,DIWX,DN,DTOUT,DUOUT S X=$G(LEX(LEXTI)),DIWL=1,DIWF="C78" S:+($G(LEXLEN))>0 DIWF="C"_+($G(LEXLEN)) D ^DIWP
"RTN","LEXXGI2",159,0)
 K LEX S (LEXCT,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXXGI2",160,0)
 . N X S X=$G(^UTILITY($J,"W",1,LEXI,0)),LEXCT=LEXCT+1,LEX(LEXCT)=$$TRIM(X)
"RTN","LEXXGI2",161,0)
 K ^UTILITY($J,"W")
"RTN","LEXXGI2",162,0)
 Q
"RTN","LEXXGI2",163,0)
CLR ;   Clear
"RTN","LEXXGI2",164,0)
 K DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,DTOUT,DUOUT,LEX
"RTN","LEXXGI2",165,0)
 K LEX1,LEX2,LEX3,LEXC,LEXCHK,LEXCNT,LEXCT,LEXD,LEXE,LEXED
"RTN","LEXXGI2",166,0)
 K LEXF,LEXFI,LEXGCS,LEXI,LEXID,LEXL,LEXLC,LEXLEN,LEXN,LEXNC
"RTN","LEXXGI2",167,0)
 K LEXNDS,LEXP,LEXPC,LEXPROC,LEXS,LEXSCHG,LEXT,LEXTI,LEXU
"RTN","LEXXGI2",168,0)
 K LEXUP,LEXVER,X,Y
"RTN","LEXXGI2",169,0)
 Q
"RTN","LEXXGI2",170,0)
EDT(LEX) ;   External Date
"RTN","LEXXGI2",171,0)
 S LEX=$$FMTE^XLFDT($G(LEX),"1Z") S:LEX["@" LEX=$P(LEX,"@",1)_"  "_$P(LEX,"@",2,299)
"RTN","LEXXGI2",172,0)
 Q LEX
"RTN","LEXXGI2",173,0)
TRIM(X) ;   Trim Spaces
"RTN","LEXXGI2",174,0)
 S X=$G(X) Q:X="" X F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXGI2",175,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXGI2",176,0)
 F  Q:X'["  "  S X=$P(X,"  ",1)_" "_$P(X,"  ",2,229)
"RTN","LEXXGI2",177,0)
 Q X
"RTN","LEXXGI3")
0^46^B20329956
"RTN","LEXXGI3",1,0)
LEXXGI3 ;ISL/KER - Global Import (Load Data in ^LEXM) ;04/21/2014
"RTN","LEXXGI3",2,0)
 ;;2.0;LEXICON UTILITY;**59,80**;Sep 23, 1996;Build 1
"RTN","LEXXGI3",3,0)
 ;              
"RTN","LEXXGI3",4,0)
 ; Global Variables
"RTN","LEXXGI3",5,0)
 ;    ^LEXM(              N/A
"RTN","LEXXGI3",6,0)
 ;               
"RTN","LEXXGI3",7,0)
 ; External References
"RTN","LEXXGI3",8,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGI3",9,0)
 ;    ^DIM                ICR  10016
"RTN","LEXXGI3",10,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXXGI3",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXXGI3",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGI3",13,0)
 ;               
"RTN","LEXXGI3",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGI3",15,0)
 ;               
"RTN","LEXXGI3",16,0)
 ;    LEXFL        Array of Files
"RTN","LEXXGI3",17,0)
 ;    LEXOK        LEXM exist
"RTN","LEXXGI3",18,0)
 ;    LEXSCHG      Changes
"RTN","LEXXGI3",19,0)
 ;    ZTQUEUED     Queued Task
"RTN","LEXXGI3",20,0)
 ;    ZTSK         Task Number
"RTN","LEXXGI3",21,0)
 ; 
"RTN","LEXXGI3",22,0)
FILES ;   Load Data for all files
"RTN","LEXXGI3",23,0)
 Q:'$L($G(LEXB))  N LEXHDR,LEXBLD,LEXDAT,LEXFI,LEXFIC,LEXHDRS,LEXLOG,LEXINS,LEXTOTI,LEXTOTN,LEXPER,LEXPRE
"RTN","LEXXGI3",24,0)
 S (LEXFI,LEXFIC,LEXHDR,LEXTOTI,LEXTOTN,LEXPER,LEXPRE)=0,LEXBLD=LEXB
"RTN","LEXXGI3",25,0)
 S LEXDAT=$P($G(^LEXM(0,"VRRVDT")),"^",1),LEXINS=1
"RTN","LEXXGI3",26,0)
 S:+LEXDAT'>0 LEXDAT=$$DT^XLFDT I LEXOK D
"RTN","LEXXGI3",27,0)
 . N LEXCRE,LEXL1 S LEXL1="" S LEXCRE=$G(^LEXM(0,"CREATED")) S LEXCRE=$S(+LEXCRE>0:($$MIX^LEXXGI2($$FMTE^XLFDT(LEXCRE))),1:"")
"RTN","LEXXGI3",28,0)
 . S:$L($P(LEXCRE,"@",2)) LEXCRE=$P(LEXCRE,"@",1)_" at "_$P(LEXCRE,"@",2) S LEXL1=" Updating files "
"RTN","LEXXGI3",29,0)
 . S:$L($G(LEXCRE))&($L($G(LEXL1))) LEXL1=$G(LEXL1)_"using export global created "_$G(LEXCRE)
"RTN","LEXXGI3",30,0)
 . D PB^LEXXGI2(LEXL1)
"RTN","LEXXGI3",31,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  S LEXTOTN=+($G(LEXTOTN))+($O(^LEXM(LEXFI," "),-1))
"RTN","LEXXGI3",32,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  D FILE
"RTN","LEXXGI3",33,0)
 Q
"RTN","LEXXGI3",34,0)
FILE ;     Load Data for one file
"RTN","LEXXGI3",35,0)
 N LEXCF,LEXCHG,LEXCHGS,LEXCNT,LEXFIL,LEXI,LEXID,LEXIEN,LEXL,LEXLC
"RTN","LEXXGI3",36,0)
 N LEXMUMPS,LEXNM,LEXRT,LEXS,LEXTOT,LEXTXT,LEXIGL,LEXIGI,LEXIGF,LEXIGT
"RTN","LEXXGI3",37,0)
 N LEXIGD,LEXIGO,LEXBEG,LEXEND,LEXELP,LEXFB
"RTN","LEXXGI3",38,0)
 S LEXFB=$G(^LEXM(+LEXFI,0,"BUILD")),LEXIGO=0,LEXBEG=$$HACK^LEXXGI2
"RTN","LEXXGI3",39,0)
 S (LEXCNT,LEXLC,LEXI)=0,LEXL=68,LEXFIC=LEXFIC+1 I LEXOK D
"RTN","LEXXGI3",40,0)
 . N LEXB,LEXFID,LEXNM,LEXVR,LEXRV,LEXDT,LEXL1,LEXL2 S (LEXL1,LEXL2)="",LEXFID=$P(LEXFI,".",1)
"RTN","LEXXGI3",41,0)
 . Q:+LEXFID'>0  Q:$D(LEXHDRS(+LEXFID))  S LEXHDRS(LEXFID)="" S:+LEXFI=81!(+LEXFI=81.3) LEXHDRS(81)="",LEXHDRS(81.3)=""
"RTN","LEXXGI3",42,0)
 . S:LEXFID=80 LEXNM="ICD-9-CM" S:LEXFID=81 LEXNM="CPT-4/HCPCS" S:LEXFID=757 LEXNM="Lexicon" S LEXB=$G(^LEXM(LEXFI,0,"BUILD"))
"RTN","LEXXGI3",43,0)
 . S LEXVR=$G(^LEXM(LEXFI,0,"VR")),LEXRV=$G(^LEXM(LEXFI,0,"VRRV")),LEXDT=$$MIX^LEXXGI2($$FMTE^XLFDT($P(LEXRV,"^",2))),LEXRV=$P(LEXRV,"^",1)
"RTN","LEXXGI3",44,0)
 . S LEXL1="Updating "_LEXNM S:$L(LEXB) LEXL1=LEXL1_" with patch/build "_LEXB S:$L(LEXVR) LEXL2=" To version "_LEXVR
"RTN","LEXXGI3",45,0)
 . S:$L(LEXVR)&($L(LEXRV)) LEXL2=LEXL2_" revision "_LEXRV S:$L(LEXVR)&($L(LEXRV))&($L(LEXDT)) LEXL2=LEXL2_" dated "_LEXDT
"RTN","LEXXGI3",46,0)
 . S:$L(LEXL1) LEXL1=" "_LEXL1 S:$L(LEXL2) LEXL2=" "_LEXL2 D BL^LEXXGI2 D:$L(LEXL1) TL^LEXXGI2(LEXL1) D:$L(LEXL2) TL^LEXXGI2(LEXL2),BL^LEXXGI2
"RTN","LEXXGI3",47,0)
 S LEXTOT=+($G(^LEXM(LEXFI,0))) G:LEXTOT=0 FILEQ
"RTN","LEXXGI3",48,0)
 S LEXNM=$G(^LEXM(LEXFI,0,"NM"))
"RTN","LEXXGI3",49,0)
 I $L(LEXNM),$$UP^LEXXGI2(LEXNM)'["FILE" S LEXNM=LEXNM_" FILE"
"RTN","LEXXGI3",50,0)
 S:$L(LEXNM) LEXNM=$$MIX^LEXXGI2(LEXNM) S LEXCHG=$G(^LEXM(LEXFI,0))
"RTN","LEXXGI3",51,0)
 S LEXTXT="   "_LEXNM,LEXTXT=LEXTXT_$J("",(40-$L(LEXTXT)))_LEXFI
"RTN","LEXXGI3",52,0)
 D:LEXFIC=1 PB^LEXXGI2(LEXTXT) D:LEXFIC'=1 TL^LEXXGI2(LEXTXT)
"RTN","LEXXGI3",53,0)
 S LEXS=+(LEXTOT\LEXL) S:LEXS=0 LEXS=1 W:+($O(^LEXM(LEXFI,0)))>0 !,"   "
"RTN","LEXXGI3",54,0)
 D UPCHG^LEXXGI2 F  S LEXI=$O(^LEXM(LEXFI,LEXI)) Q:+LEXI=0  D
"RTN","LEXXGI3",55,0)
 . S LEXCNT=LEXCNT+1,LEXMUMPS=$G(^LEXM(LEXFI,LEXI))
"RTN","LEXXGI3",56,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEXXGI3",57,0)
 . S LEXRT=$P(LEXMUMPS,"^",2),LEXFIL=""
"RTN","LEXXGI3",58,0)
 . S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(")!(LEXMUMPS["^LEXC(") LEXFIL=+($P(LEXRT,"(",2)),LEXFL(+($P(LEXRT,"(",2)))=""
"RTN","LEXXGI3",59,0)
 . S:LEXMUMPS[$$ROOT^ICDEX(80) LEXFIL=80,LEXFL(80)=""
"RTN","LEXXGI3",60,0)
 . S:LEXMUMPS[$$ROOT^ICDEX(80.1) LEXFIL=80.1,LEXFL(80.1)=""
"RTN","LEXXGI3",61,0)
 . S:LEXMUMPS["^ICPT(" LEXFIL=81,LEXFL(81)=""
"RTN","LEXXGI3",62,0)
 . S:LEXMUMPS["^DIC(81.3" LEXFIL=81.3,LEXFL(81.3)=""
"RTN","LEXXGI3",63,0)
 . S:LEXMUMPS["^DIC(81.2" LEXFIL=81.2,LEXFL(81.2)=""
"RTN","LEXXGI3",64,0)
 . S:+LEXFIL>0 LEXSCHG(+LEXFIL,0)=""
"RTN","LEXXGI3",65,0)
 . I $L(LEXMUMPS) D
"RTN","LEXXGI3",66,0)
 . . X LEXMUMPS S LEXIGO=1
"RTN","LEXXGI3",67,0)
 . . S LEXTOTI=+($G(LEXTOTI))+1 I +($G(LEXTOTN))>0,+($G(LEXTOTI))>0,$D(ZTQUEUED),+($G(ZTSK))>0 D
"RTN","LEXXGI3",68,0)
 . . . N LEXT,LEXTSK S (LEXT,LEXPER)=(+($G(LEXTOTI))/+($G(LEXTOTN)))*100 Q:+LEXPER-(+($G(LEXPRE)))'>2  S LEXPRE=+($G(LEXPER))
"RTN","LEXXGI3",69,0)
 . . . S LEXPER=$J(LEXPER,6,2) I +LEXT>0 S LEXPER=LEXPER_"% complete" S LEXTSK=$$S^%ZTLOAD(LEXPER)
"RTN","LEXXGI3",70,0)
 I +($G(LEXIGO))>0 D
"RTN","LEXXGI3",71,0)
 . S LEXEND=$$HACK^LEXXGI2 S LEXELP=$$ELAP^LEXXGI2(LEXBEG,LEXEND) S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXGI3",72,0)
FILEQ ;     Load Data for one file - QUIT
"RTN","LEXXGI3",73,0)
 Q
"RTN","LEXXGI4")
0^167^B168770794
"RTN","LEXXGI4",1,0)
LEXXGI4 ;ISL/KER - Global Import (Repair at Site) ;04/21/2014
"RTN","LEXXGI4",2,0)
 ;;2.0;LEXICON UTILITY;**51,80**;Sep 23, 1996;Build 1
"RTN","LEXXGI4",3,0)
 ;              
"RTN","LEXXGI4",4,0)
 ; Global Variables
"RTN","LEXXGI4",5,0)
 ;    ^TMP("LEXXGI4ASL")  SACC 2.3.2.5.1
"RTN","LEXXGI4",6,0)
 ;    ^TMP("LEXXGI4TIM")  SACC 2.3.2.5.1
"RTN","LEXXGI4",7,0)
 ;    ^TMP("LEXXGI4MSG")  SACC 2.3.2.5.1
"RTN","LEXXGI4",8,0)
 ;               
"RTN","LEXXGI4",9,0)
 ; External References
"RTN","LEXXGI4",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXGI4",11,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXGI4",12,0)
 ;    ^DIC                ICR  10006
"RTN","LEXXGI4",13,0)
 ;    ^DIK                ICR  10013
"RTN","LEXXGI4",14,0)
 ;    ENALL^DIK           ICR  10013
"RTN","LEXXGI4",15,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXXGI4",16,0)
 ;    IXALL^DIK           ICR  10013
"RTN","LEXXGI4",17,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXGI4",18,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXGI4",19,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGI4",20,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXGI4",21,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGI4",22,0)
 ;    ^XMD                ICR  10070
"RTN","LEXXGI4",23,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGI4",24,0)
 ;               
"RTN","LEXXGI4",25,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGI4",26,0)
 ; 
"RTN","LEXXGI4",27,0)
 ;    LEXLOUD   NEWed, SET and KILLed in the Post-Install
"RTN","LEXXGI4",28,0)
 ;              routine LEX20nnP.  If set, the entry 
"RTN","LEXXGI4",29,0)
 ;              points ASL, AWRD, SSWRD and SUB will write
"RTN","LEXXGI4",30,0)
 ;              to the screen using MES^XPDUTL.
"RTN","LEXXGI4",31,0)
 ;
"RTN","LEXXGI4",32,0)
 ;    LEXXM     Set and Killed by the developer, used to 
"RTN","LEXXGI4",33,0)
 ;              report the timing of the task in the
"RTN","LEXXGI4",34,0)
 ;              global array ^TMP("LEXXGI4TIM",$J) and
"RTN","LEXXGI4",35,0)
 ;              sent to the user by MailMan message
"RTN","LEXXGI4",36,0)
 ;     
"RTN","LEXXGI4",37,0)
 ;    LEXHOME   Set and Killed by the developer in the
"RTN","LEXXGI4",38,0)
 ;              post-install, used to send the timing
"RTN","LEXXGI4",39,0)
 ;              message to G.LEXINS@FO.DOMAIN.EXT
"RTN","LEXXGI4",40,0)
 ;              (see entry point POST2)
"RTN","LEXXGI4",41,0)
 ;              
"RTN","LEXXGI4",42,0)
 Q
"RTN","LEXXGI4",43,0)
POST ; Entry Point from Post-Install
"RTN","LEXXGI4",44,0)
 N LEXXM,LEXHOME K @("^TMP(""LEXXGI4TIM"","_$J_")")
"RTN","LEXXGI4",45,0)
 S LEXXM="" D AWRD^LEXXGI4
"RTN","LEXXGI4",46,0)
 Q
"RTN","LEXXGI4",47,0)
POST2 ; Entry Point from Post-Install (home)
"RTN","LEXXGI4",48,0)
 N LEXXM,LEXHOME K @("^TMP(""LEXXGI4TIM"","_$J_")")
"RTN","LEXXGI4",49,0)
 S LEXHOME="",LEXXM="" D AWRD^LEXXGI4
"RTN","LEXXGI4",50,0)
 Q
"RTN","LEXXGI4",51,0)
AWRD ; Repair Word Index AWRD in Expression file #757.01
"RTN","LEXXGI4",52,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="AWRDT^LEXXGI4"
"RTN","LEXXGI4",53,0)
 S ZTDESC="Repair the AWRD index in file #757.01"
"RTN","LEXXGI4",54,0)
 S LEXJ=+($G(LEXJ)) S:LEXJ'>0 LEXJ=$J S ZTSAVE("LEXJ")=""
"RTN","LEXXGI4",55,0)
 I $D(LEXXM) S LEXXM=1,ZTSAVE("LEXXM")=""
"RTN","LEXXGI4",56,0)
 S:$D(LEXHOME) ZTSAVE("LEXHOME")=""
"RTN","LEXXGI4",57,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",58,0)
 . S LEXT="  Repair the AWRD index in file #757.01 tasked"
"RTN","LEXXGI4",59,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",60,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",61,0)
 Q
"RTN","LEXXGI4",62,0)
AWRDT ;   Repair Word Index AWRD in Expression file #757.01 (task)
"RTN","LEXXGI4",63,0)
 ;     Subset Indexes Axxx
"RTN","LEXXGI4",64,0)
 N DA,DIK,LEXBT1,LEXSB,LEXJ1 S LEXSB="WRD" S:$D(LEXXM) LEXXM=1
"RTN","LEXXGI4",65,0)
 S (LEXJ1,LEXJ)=+($G(LEXJ)) S:LEXJ'>0 (LEXJ1,LEXJ)=$J
"RTN","LEXXGI4",66,0)
 D:$D(LEXXM) KIL(LEXJ1)
"RTN","LEXXGI4",67,0)
 S LEXBT1=$$BEG("WRD",LEXJ1)
"RTN","LEXXGI4",68,0)
 H 2 D SSWRD^LEXXGI4
"RTN","LEXXGI4",69,0)
 ;     Supplemental Words AWRD Index
"RTN","LEXXGI4",70,0)
 H 2 D SUPWRD^LEXXGI4
"RTN","LEXXGI4",71,0)
 ;     Main Word AWRD Index
"RTN","LEXXGI4",72,0)
 H 2 D AWRDI
"RTN","LEXXGI4",73,0)
 ;     Replacement Words
"RTN","LEXXGI4",74,0)
 H 2 D REP
"RTN","LEXXGI4",75,0)
 ;     Update String Lengths
"RTN","LEXXGI4",76,0)
 H 2 D:'$D(LEXXM) ASL^LEXXGI4 I $D(LEXXM) D
"RTN","LEXXGI4",77,0)
 . N LEXJ S LEXJ=LEXJ1 D ASLT^LEXXGI4
"RTN","LEXXGI4",78,0)
 H 1 D END(LEXBT1,"WRD",LEXJ1) D:$D(LEXXM) XM(LEXJ1),KIL(LEXJ1)
"RTN","LEXXGI4",79,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",80,0)
 Q
"RTN","LEXXGI4",81,0)
AWRDI ;   Repair Word Index AWRD
"RTN","LEXXGI4",82,0)
 N DIK S DIK="^LEX(757.01,",DIK(1)="2^AWRD" D ENALL^DIK
"RTN","LEXXGI4",83,0)
 Q
"RTN","LEXXGI4",84,0)
AWRDTIME ;   Repair Word Index AWRD (timing)
"RTN","LEXXGI4",85,0)
 N LEXB,LEXE,LEXT S LEXB=$$NOW^XLFDT D AWRDI^LEXXGI4 S LEXE=$$NOW^XLFDT
"RTN","LEXXGI4",86,0)
 S LEXT=$TR($$FMDIFF^XLFDT(LEXE,LEXB,3)," ","0")
"RTN","LEXXGI4",87,0)
 W !,"  Repair Word Index AWRD",!
"RTN","LEXXGI4",88,0)
 W !,"  Start:   ",$TR($$FMTE^XLFDT(LEXB,"5Z"),"@"," ")
"RTN","LEXXGI4",89,0)
 W !,"  Finish:  ",$TR($$FMTE^XLFDT(LEXE,"5Z"),"@"," ")
"RTN","LEXXGI4",90,0)
 W !,"  Time:    ",LEXT
"RTN","LEXXGI4",91,0)
 Q
"RTN","LEXXGI4",92,0)
 ;
"RTN","LEXXGI4",93,0)
REP ; Replacement Words
"RTN","LEXXGI4",94,0)
 N DA,DIK,LEXBT2,LEXJ2
"RTN","LEXXGI4",95,0)
 S LEXJ2=+($G(LEXJ)) S:LEXJ2'>0 LEXJ2=$G(LEXJ1) S:LEXJ2'>0 LEXJ2=$J
"RTN","LEXXGI4",96,0)
 S:$D(LEXXM) LEXXM=1 S LEXBT2=$$BEG("REP",LEXJ2)
"RTN","LEXXGI4",97,0)
 S DIK="^LEX(757.05," D IXALL^DIK H 1 D END(LEXBT2,"REP",LEXJ2)
"RTN","LEXXGI4",98,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",99,0)
 Q
"RTN","LEXXGI4",100,0)
 ;
"RTN","LEXXGI4",101,0)
SUPWRD ; Repair Supplemental Word Index AWRD in file #757.01
"RTN","LEXXGI4",102,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="SUPWRDT^LEXXGI4"
"RTN","LEXXGI4",103,0)
 S ZTDESC="Repair the Supplemental Word Index in file #757.01"
"RTN","LEXXGI4",104,0)
 S LEXJ=+($G(LEXJ)) S:LEXJ'>0 LEXJ=$G(LEXJ1) S:LEXJ'>0 LEXJ=$J S ZTSAVE("LEXJ")=""
"RTN","LEXXGI4",105,0)
 I $D(LEXXM) S LEXXM=1,ZTSAVE("LEXXM")=""
"RTN","LEXXGI4",106,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",107,0)
 . S LEXT="  Repair the Supplemental Word Index in file #757.01 tasked"
"RTN","LEXXGI4",108,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",109,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",110,0)
 Q
"RTN","LEXXGI4",111,0)
SUPWRDT ;   Repair Supplemental Word Index AWRD in file #757.01 (task)
"RTN","LEXXGI4",112,0)
 N DA,DIK,LEXBT3,LEXI,LEXJ3
"RTN","LEXXGI4",113,0)
 S LEXJ3=+($G(LEXJ)) S:LEXJ3'>0 LEXJ3=$J
"RTN","LEXXGI4",114,0)
 S:$D(LEXXM) LEXXM=1 S LEXBT3=$$BEG("SUP",LEXJ3)
"RTN","LEXXGI4",115,0)
 S LEXI=0 F  S LEXI=$O(^LEX(757.01,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXGI4",116,0)
 . Q:$O(^LEX(757.01,LEXI,5,0))'>0
"RTN","LEXXGI4",117,0)
 . N LEXII S LEXII=0 F  S LEXII=$O(^LEX(757.01,LEXI,5,LEXII)) Q:+LEXII'>0  D
"RTN","LEXXGI4",118,0)
 . . N X,DA S X=$G(^LEX(757.01,LEXI,5,LEXII,0)) Q:'$L(X)
"RTN","LEXXGI4",119,0)
 . . S DA(1)=LEXI,DA=LEXII D SSUP^LEXNDX6
"RTN","LEXXGI4",120,0)
 . Q  S DIK(1)=".01^AWORD" D ENALL^DIK
"RTN","LEXXGI4",121,0)
 H:+($G(LEXXM))>0 2 D END(LEXBT3,"SUP",LEXJ3)
"RTN","LEXXGI4",122,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",123,0)
 Q
"RTN","LEXXGI4",124,0)
SUPTIME ;   Repair Supplemental Word Index AWRD (timing)
"RTN","LEXXGI4",125,0)
 N LEXB,LEXE,LEXT S LEXB=$$NOW^XLFDT D SUPWRDT^LEXXGI4 S LEXE=$$NOW^XLFDT
"RTN","LEXXGI4",126,0)
 S LEXT=$TR($$FMDIFF^XLFDT(LEXE,LEXB,3)," ","0")
"RTN","LEXXGI4",127,0)
 W !,"  Repair Supplemental Word Index AWRD",!
"RTN","LEXXGI4",128,0)
 W !,"  Start:   ",$TR($$FMTE^XLFDT(LEXB,"5Z"),"@"," ")
"RTN","LEXXGI4",129,0)
 W !,"  Finish:  ",$TR($$FMTE^XLFDT(LEXE,"5Z"),"@"," ")
"RTN","LEXXGI4",130,0)
 W !,"  Time:    ",LEXT
"RTN","LEXXGI4",131,0)
 Q
"RTN","LEXXGI4",132,0)
 ;
"RTN","LEXXGI4",133,0)
SSWRD ; Repair Word Index Axxx in Sub-Set file #757.21
"RTN","LEXXGI4",134,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="SSWRDT^LEXXGI4"
"RTN","LEXXGI4",135,0)
 S ZTDESC="Repair the Asub in file #757.21"
"RTN","LEXXGI4",136,0)
 S LEXJ=+($G(LEXJ)) S:LEXJ'>0 LEXJ=$G(LEXJ1) S:LEXJ'>0 LEXJ=$J S ZTSAVE("LEXJ")=""
"RTN","LEXXGI4",137,0)
 I $D(LEXXM) S LEXXM=1,ZTSAVE("LEXXM")=""
"RTN","LEXXGI4",138,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",139,0)
 . S LEXT="  Repair the Asub index in file #757.21 tasked"
"RTN","LEXXGI4",140,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",141,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",142,0)
 Q
"RTN","LEXXGI4",143,0)
SSWRDT ;   Repair Word Index Axxx in Sub-Set file #757.21 (task)
"RTN","LEXXGI4",144,0)
 N DA,DIK,LEXBT4,LEXJ4
"RTN","LEXXGI4",145,0)
 S LEXJ4=+($G(LEXJ)) S:LEXJ4'>0 LEXJ4=$J
"RTN","LEXXGI4",146,0)
 S:$D(LEXXM) LEXXM=1 S LEXBT4=$$BEG("SUB",LEXJ4)
"RTN","LEXXGI4",147,0)
 N IEN S IEN=0 F  S IEN=$O(^LEX(757.21,IEN)) Q:+IEN'>0  D
"RTN","LEXXGI4",148,0)
 . N DA,X S DA=IEN,X=$P($G(^LEX(757.21,IEN,0)),"^",2) D:$L(X) SS^LEXNDX2
"RTN","LEXXGI4",149,0)
 . Q  S X=$P($G(^LEX(757.21,IEN,0)),"^",1) I $L(X),+X>0 D
"RTN","LEXXGI4",150,0)
 . . S ^LEX(757.21,"B",$E(X,1,30),DA)=""
"RTN","LEXXGI4",151,0)
 . . S ^LEX(757.21,"C",$E($$UP^XLFSTR(^LEX(757.01,X,0)),1,63),DA)=""
"RTN","LEXXGI4",152,0)
 H:+($G(LEXXM))>0 2 D END(LEXBT4,"SUB",LEXJ4)
"RTN","LEXXGI4",153,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",154,0)
 Q
"RTN","LEXXGI4",155,0)
SSTIME ;   Repair Word Index Axxx in Sub-Set file #757.21 (timing)
"RTN","LEXXGI4",156,0)
 N LEXB,LEXE,LEXT S LEXB=$$NOW^XLFDT D SSWRDT^LEXXGI4 S LEXE=$$NOW^XLFDT
"RTN","LEXXGI4",157,0)
 S LEXT=$TR($$FMDIFF^XLFDT(LEXE,LEXB,3)," ","0")
"RTN","LEXXGI4",158,0)
 W !,"  Repair Word Index Axxx in Sub-Set file",!
"RTN","LEXXGI4",159,0)
 W !,"  Start:   ",$TR($$FMTE^XLFDT(LEXB,"5Z"),"@"," ")
"RTN","LEXXGI4",160,0)
 W !,"  Finish:  ",$TR($$FMTE^XLFDT(LEXE,"5Z"),"@"," ")
"RTN","LEXXGI4",161,0)
 W !,"  Time:    ",LEXT
"RTN","LEXXGI4",162,0)
 Q
"RTN","LEXXGI4",163,0)
 ;
"RTN","LEXXGI4",164,0)
ASL ; Recalculate ASL cross-reference
"RTN","LEXXGI4",165,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ S ZTRTN="ASLT^LEXXGI4"
"RTN","LEXXGI4",166,0)
 S ZTDESC="Recalculate ASL index in Expression file #757.01"
"RTN","LEXXGI4",167,0)
 S LEXJ=+($G(LEXJ)) S:LEXJ'>0 LEXJ=$G(LEXJ1) S:LEXJ'>0 LEXJ=$J S ZTSAVE("LEXJ")=""
"RTN","LEXXGI4",168,0)
 I $D(LEXXM) S LEXXM=1,ZTSAVE("LEXXM")=""
"RTN","LEXXGI4",169,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGI4",170,0)
 . S LEXT="  Re-index the ASL index of file #757.01 tasked"
"RTN","LEXXGI4",171,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",172,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",173,0)
 Q
"RTN","LEXXGI4",174,0)
ASLT ;   Recalculate ASL cross-reference (task)
"RTN","LEXXGI4",175,0)
 K ^TMP("LEXXGI4ASL",$J,"ASL") N LEXTK,LEXFIR,LEXFC,LEXBT5,LEXJ5
"RTN","LEXXGI4",176,0)
 S LEXJ5=+($G(LEXJ)) S:LEXJ5'>0 LEXJ5=$J S (LEXFIR,LEXFC,LEXTK)=""
"RTN","LEXXGI4",177,0)
 S:$D(LEXXM) LEXXM=1 S LEXBT5=$$BEG("ASL",LEXJ5)
"RTN","LEXXGI4",178,0)
 F  S LEXTK=$O(^LEX(757.01,"AWRD",LEXTK)) Q:'$L(LEXTK)  D
"RTN","LEXXGI4",179,0)
 . N LEXP,LEXS,LEXC,LEXF,LEXTKN S LEXTKN=LEXTK
"RTN","LEXXGI4",180,0)
 . F  Q:$E(LEXTKN,1)'=" "  S LEXTKN=$E(LEXTKN,2,$L(LEXTKN))
"RTN","LEXXGI4",181,0)
 . F  Q:$E(LEXTKN,$L(LEXTKN))'=" "  S LEXTKN=$E(LEXTKN,1,($L(LEXTKN)-1))
"RTN","LEXXGI4",182,0)
 . S LEXF=$E(LEXTKN,1)
"RTN","LEXXGI4",183,0)
 . W:'$D(ZTQUEUED)&(LEXFIR'=LEXF)&(LEXFC'[LEXF) LEXF
"RTN","LEXXGI4",184,0)
 . S LEXFIR=LEXF S:LEXFC'[LEXF LEXFC=LEXFC_LEXF
"RTN","LEXXGI4",185,0)
 . F LEXP=1:1:$L(LEXTKN)  S LEXS=$E(LEXTKN,1,LEXP) D
"RTN","LEXXGI4",186,0)
 . . Q:'$L($G(LEXS))  Q:$D(^TMP("LEXXGI4ASL",$J,"ASL",LEXS))
"RTN","LEXXGI4",187,0)
 . . S LEXC=$$ASLC(LEXS)
"RTN","LEXXGI4",188,0)
 . . I LEXC>0 K ^LEX(757.01,"ASL",LEXS) D
"RTN","LEXXGI4",189,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXXGI4",190,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXC)=""
"RTN","LEXXGI4",191,0)
 . . S ^TMP("LEXXGI4ASL",$J,"ASL",LEXS)=""
"RTN","LEXXGI4",192,0)
 K ^TMP("LEXXGI4ASL",$J,"ASL")
"RTN","LEXXGI4",193,0)
 H:+($G(LEXXM))>0 2 D END(LEXBT5,"ASL",LEXJ5)
"RTN","LEXXGI4",194,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",195,0)
 Q
"RTN","LEXXGI4",196,0)
ASLC(X) ;   Recalculate ASL cross-reference (String Counter)
"RTN","LEXXGI4",197,0)
 N LEXC,LEXTK,LEXTKN,LEXO,LEXT,LEXS,LEXP
"RTN","LEXXGI4",198,0)
 S (LEXC,LEXTK)=$$UP^XLFSTR($G(X)),LEXT=0  Q:'$L(LEXTK) 0
"RTN","LEXXGI4",199,0)
 S:$L(LEXTK)>1 LEXO=$E(LEXTK,1,($L(LEXTK)-1))_$C(($A($E(LEXTK,$L(LEXTK)))-1))_"~"
"RTN","LEXXGI4",200,0)
 S:$L(LEXTK)=1 LEXO=$C(($A(LEXTK)-1))_"~"
"RTN","LEXXGI4",201,0)
 F  S LEXO=$O(^LEX(757.01,"AWRD",LEXO)) Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXC))'=LEXC  D
"RTN","LEXXGI4",202,0)
 . N LEXM S LEXM=0 F  S LEXM=$O(^LEX(757.01,"AWRD",LEXO,LEXM)) Q:+LEXM'>0  D
"RTN","LEXXGI4",203,0)
 . . N LEXE S LEXE=0 F  S LEXE=$O(^LEX(757.01,"AWRD",LEXO,LEXM,LEXE)) Q:+LEXE'>0  D
"RTN","LEXXGI4",204,0)
 . . . S LEXT=LEXT+1
"RTN","LEXXGI4",205,0)
 S X=LEXT
"RTN","LEXXGI4",206,0)
 Q X
"RTN","LEXXGI4",207,0)
ASLTIME ;   Recalculate ASL cross-reference (timing)
"RTN","LEXXGI4",208,0)
 N LEXB,LEXE,LEXT S LEXB=$$NOW^XLFDT D ASLT^LEXXGI4 S LEXE=$$NOW^XLFDT
"RTN","LEXXGI4",209,0)
 S LEXT=$TR($$FMDIFF^XLFDT(LEXE,LEXB,3)," ","0")
"RTN","LEXXGI4",210,0)
 W !,"  Recalculate ASL cross-reference",!
"RTN","LEXXGI4",211,0)
 W !,"  Start:   ",$TR($$FMTE^XLFDT(LEXB,"5Z"),"@"," ")
"RTN","LEXXGI4",212,0)
 W !,"  Finish:  ",$TR($$FMTE^XLFDT(LEXE,"5Z"),"@"," ")
"RTN","LEXXGI4",213,0)
 W !,"  Time:    ",LEXT
"RTN","LEXXGI4",214,0)
 Q
"RTN","LEXXGI4",215,0)
 ;
"RTN","LEXXGI4",216,0)
SUB ; Repair Subset Cross-References
"RTN","LEXXGI4",217,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,LEXT S ZTRTN="SUBT^LEXXGI4"
"RTN","LEXXGI4",218,0)
 S ZTDESC="Re-Index the Subsets file #757.21 (set logic only)"
"RTN","LEXXGI4",219,0)
 S LEXJ=+($G(LEXJ)) S:LEXJ'>0 LEXJ=$G(LEXJ1) S:LEXJ'>0 LEXJ=$J S ZTSAVE("LEXJ")=""
"RTN","LEXXGI4",220,0)
 I $D(LEXXM) S LEXXM=1,ZTSAVE("LEXXM")=""
"RTN","LEXXGI4",221,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD I $D(LEXLOUD) D
"RTN","LEXXGI4",222,0)
 . S LEXT="  Re-index file #757.21 tasked"
"RTN","LEXXGI4",223,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")" D MES^XPDUTL(LEXT)
"RTN","LEXXGI4",224,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI4",225,0)
 Q
"RTN","LEXXGI4",226,0)
SUBT ;   Repair Subset Cross-References (task)
"RTN","LEXXGI4",227,0)
 N LEXP3,LEXP4,LEXIEN,LEXBT6,LEXJ6 S:$D(LEXXM) LEXXM=1
"RTN","LEXXGI4",228,0)
 S LEXJ6=+($G(LEXJ)) S:LEXJ6'>0 LEXJ6=$J
"RTN","LEXXGI4",229,0)
 S (LEXP3,LEXP4,LEXIEN)=0,LEXBT6=$$BEG("SSS",LEXJ6)
"RTN","LEXXGI4",230,0)
 F  S LEXIEN=$O(^LEX(757.21,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXXGI4",231,0)
 . N DA,DIK S DA=+($G(LEXIEN))  D SUBFIX(DA) Q:'$D(^LEX(757.21,+LEXIEN,0))
"RTN","LEXXGI4",232,0)
 . S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXXGI4",233,0)
 . S DA=LEXIEN,DIK="^LEX(757.21," D IX1^DIK
"RTN","LEXXGI4",234,0)
 S:LEXP3>0 $P(^LEX(757.21,0),"^",3)=LEXP3
"RTN","LEXXGI4",235,0)
 S:LEXP4>0 $P(^LEX(757.21,0),"^",4)=LEXP4
"RTN","LEXXGI4",236,0)
 H:+($G(LEXXM))>0 2 D END(LEXBT6,"SSS",LEXJ6)
"RTN","LEXXGI4",237,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI4",238,0)
 Q
"RTN","LEXXGI4",239,0)
SUBFIX(X) ;   Repair Subset Cross-References (Fix 757.21)
"RTN","LEXXGI4",240,0)
 N DA,DIK,LEXEXP,LEXDFL S DA=+($G(X))
"RTN","LEXXGI4",241,0)
 Q:+DA'>0  Q:'$D(^LEX(757.21,+DA,0))
"RTN","LEXXGI4",242,0)
 S LEXEXP=+$G(^LEX(757.21,+DA,0))
"RTN","LEXXGI4",243,0)
 S LEXDFL=$P($G(^LEX(757.01,+LEXEXP,1)),"^",5)
"RTN","LEXXGI4",244,0)
 Q:+LEXDFL'>0  S DIK="^LEX(757.21," D ^DIK
"RTN","LEXXGI4",245,0)
 Q
"RTN","LEXXGI4",246,0)
 ;
"RTN","LEXXGI4",247,0)
XM(X) ; Mail Message
"RTN","LEXXGI4",248,0)
 N LEX1,LEX2,LEXB,LEXC,LEXD,LEXE,LEXJ,LEXMAIL,LEXN
"RTN","LEXXGI4",249,0)
 N LEXPRE,LEXNEW,LEXS,LEXT,LEXX,LEXI,LEXNM,XCNP
"RTN","LEXXGI4",250,0)
 N XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ S:$D(LEXXM) LEXMAIL=""
"RTN","LEXXGI4",251,0)
 Q:'$D(LEXMAIL)&$D(ZTQUEUED)  S LEX1=9999999,LEX2="",LEXJ=+($G(X))
"RTN","LEXXGI4",252,0)
 Q:LEXJ'>0  Q:'$D(^TMP("LEXXGI4TIM",LEXJ))
"RTN","LEXXGI4",253,0)
 D XMG I LEX1'=9999999,$P(LEX1,".",1)?7N,$P(LEX2,".",1)?7N D
"RTN","LEXXGI4",254,0)
 . Q:$O(^TMP("LEXXGI4TIM",LEXJ,""))=$O(^TMP("LEXXGI4TIM",LEXJ,""),-1)
"RTN","LEXXGI4",255,0)
 . N LEXN,LEXD,LEXB,LEXE,LEXT,LEXX
"RTN","LEXXGI4",256,0)
 . S LEXN="Total Time",LEXD=$TR($$FMTE^XLFDT(LEX1,"5Z"),"@"," ")
"RTN","LEXXGI4",257,0)
 . S LEXB=$P(LEXD," ",2),LEXE=$TR($$FMTE^XLFDT(LEX2,"5Z"),"@"," ")
"RTN","LEXXGI4",258,0)
 . S LEXE=$P(LEXE," ",2),LEXT=$$FMDIFF^XLFDT(LEX2,LEX1,3)
"RTN","LEXXGI4",259,0)
 . S LEXD=$P($TR($$FMTE^XLFDT(LEX1,"5Z"),"@"," ")," ",1)
"RTN","LEXXGI4",260,0)
 . S:$L(LEXT)'>8 LEXT=$TR(LEXT," ","0")
"RTN","LEXXGI4",261,0)
 . I $L($G(LEXPRE)),+($G(LEXPRE))>0,LEXD=$G(LEXPRE) S LEXD="  ""    ""  "
"RTN","LEXXGI4",262,0)
 . S LEXX=LEXN,LEXX=LEXX_$J(" ",(33-$L(LEXX)))_LEXD
"RTN","LEXXGI4",263,0)
 . S LEXX=LEXX_$J(" ",(45-$L(LEXX)))_LEXB
"RTN","LEXXGI4",264,0)
 . S LEXX=LEXX_$J(" ",(55-$L(LEXX)))_LEXE
"RTN","LEXXGI4",265,0)
 . S LEXX=LEXX_$J(" ",(65-$L(LEXX)))_LEXT
"RTN","LEXXGI4",266,0)
 . D XMB((" "_LEXX),LEXJ)
"RTN","LEXXGI4",267,0)
 D:$D(LEXMAIL) XMS(LEXJ)
"RTN","LEXXGI4",268,0)
 Q
"RTN","LEXXGI4",269,0)
XMG ;   Get Data for Message
"RTN","LEXXGI4",270,0)
 N LEXS,LEXC S LEXPRE="",LEXC=0 F LEXS="WRD","SUB","SUP","REP","ASL","SSS" D
"RTN","LEXXGI4",271,0)
 . N LEXD,LEXB,LEXE,LEXN,LEXNEW,LEXT,LEXX
"RTN","LEXXGI4",272,0)
 . S LEXD=$P($G(^TMP("LEXXGI4TIM",LEXJ,LEXS,"BEG")),"^",1)
"RTN","LEXXGI4",273,0)
 . S:+LEXD>0&(+LEXD<LEX1) LEX1=LEXD
"RTN","LEXXGI4",274,0)
 . S LEXD=$TR($$FMTE^XLFDT(LEXD,"5Z"),"@"," ")
"RTN","LEXXGI4",275,0)
 . S LEXB=$P(LEXD," ",2)
"RTN","LEXXGI4",276,0)
 . S (LEXNEW,LEXD)=$P(LEXD," ",1)
"RTN","LEXXGI4",277,0)
 . S LEXE=$P($G(^TMP("LEXXGI4TIM",LEXJ,LEXS,"END")),"^",1)
"RTN","LEXXGI4",278,0)
 . S:+LEXE>LEX2 LEX2=LEXE
"RTN","LEXXGI4",279,0)
 . S LEXE=$TR($$FMTE^XLFDT(LEXE,"5Z"),"@"," ")
"RTN","LEXXGI4",280,0)
 . S LEXE=$P(LEXE," ",2)
"RTN","LEXXGI4",281,0)
 . S LEXT=$G(^TMP("LEXXGI4TIM",LEXJ,LEXS,"TIM"))
"RTN","LEXXGI4",282,0)
 . Q:'$L(LEXB)
"RTN","LEXXGI4",283,0)
 . S:LEXS="SUB" LEXN="Sub-Sets       757.21    ""Axxx"""
"RTN","LEXXGI4",284,0)
 . S:LEXS="SSS" LEXN="Sub-Sets       757.21    ""Axxx"""
"RTN","LEXXGI4",285,0)
 . S:LEXS="SUP" LEXN="Supplemental   757.18    ""AWRD"""
"RTN","LEXXGI4",286,0)
 . S:LEXS="WRD" LEXN="Expression     757.01    ""AWRD"""
"RTN","LEXXGI4",287,0)
 . S:LEXS="REP" LEXN="Replacements   757.05    ""AWRD"""
"RTN","LEXXGI4",288,0)
 . S:LEXS="ASL" LEXN="String Length  757.01    ""ASL"""
"RTN","LEXXGI4",289,0)
 . S:'$L(LEXE) LEXE="        "
"RTN","LEXXGI4",290,0)
 . S:'$L(LEXT) LEXT="        "
"RTN","LEXXGI4",291,0)
 . S:LEXD=LEXPRE LEXD="  ""    ""  "
"RTN","LEXXGI4",292,0)
 . S LEXPRE=LEXNEW
"RTN","LEXXGI4",293,0)
 . S LEXX=LEXN,LEXX=LEXX_$J(" ",(33-$L(LEXX)))_LEXD
"RTN","LEXXGI4",294,0)
 . S LEXX=LEXX_$J(" ",(45-$L(LEXX)))_LEXB
"RTN","LEXXGI4",295,0)
 . S LEXX=LEXX_$J(" ",(55-$L(LEXX)))_LEXE
"RTN","LEXXGI4",296,0)
 . S LEXX=LEXX_$J(" ",(65-$L(LEXX)))_LEXT
"RTN","LEXXGI4",297,0)
 . S LEXC=LEXC+1 I LEXC=1 D
"RTN","LEXXGI4",298,0)
 . . D:$D(LEXMAIL) XMB(" ",LEXJ)
"RTN","LEXXGI4",299,0)
 . . D XMB(" Repair/Re-Index          Index   Date        Start      Finish   Elapsed",LEXJ)
"RTN","LEXXGI4",300,0)
 . . D XMB(" -----------------------  ------  ----------  --------  --------  --------",LEXJ)
"RTN","LEXXGI4",301,0)
 . D XMB((" "_LEXX),LEXJ)
"RTN","LEXXGI4",302,0)
 . Q
"RTN","LEXXGI4",303,0)
 Q
"RTN","LEXXGI4",304,0)
XMB(X,Y) ;   Build Message
"RTN","LEXXGI4",305,0)
 N LEXJ S X=$G(X),LEXJ=+($G(Y)) I '$D(LEXMAIL) W:'$D(ZTQUEUED) !,X Q
"RTN","LEXXGI4",306,0)
 Q:+LEXJ'>0  N LEXI S LEXI=$O(^TMP("LEXXGI4MSG",LEXJ," "),-1)+1
"RTN","LEXXGI4",307,0)
 S ^TMP("LEXXGI4MSG",LEXJ,+LEXI)=$G(X),^TMP("LEXXGI4MSG",LEXJ,0)=LEXI
"RTN","LEXXGI4",308,0)
 Q
"RTN","LEXXGI4",309,0)
XMS(X) ;   Send Message
"RTN","LEXXGI4",310,0)
 N XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXJ,LEXNM
"RTN","LEXXGI4",311,0)
 S LEXJ=+($G(X)) Q:+LEXJ'>0  Q:'$D(^TMP("LEXXGI4MSG",LEXJ))
"RTN","LEXXGI4",312,0)
 S XMTEXT="^TMP(""LEXXGI4MSG"","_LEXJ_",",XMSUB="Repair Major Word Indexes"
"RTN","LEXXGI4",313,0)
 S LEXNM=$$GET1^DIQ(200,+($G(DUZ)),.01) I '$L(LEXNM) K ^TMP("LEXXGI4MSG",LEXJ) Q
"RTN","LEXXGI4",314,0)
 S:$D(LEXHOME) XMY(("G.LEXINS@"_$$XMA))="" S XMY(LEXNM)="",XMDUZ=.5 D ^XMD
"RTN","LEXXGI4",315,0)
 K ^TMP("LEXXGI4MSG",LEXJ) K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXNM
"RTN","LEXXGI4",316,0)
 Q
"RTN","LEXXGI4",317,0)
XMA(LEX) ; Message Address
"RTN","LEXXGI4",318,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGI4",319,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGI4",320,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEXXGI4",321,0)
 ;
"RTN","LEXXGI4",322,0)
 ; Miscellaneous
"RTN","LEXXGI4",323,0)
BEG(X,Y) ;   Begin Process - Subscript, Job
"RTN","LEXXGI4",324,0)
 N SUB,JNM S SUB=$G(X),X=$$NOW^XLFDT,JNM=+($G(Y)) S:JNM'>0 JNM=$J I +($G(LEXXM))>0,$L(SUB) D
"RTN","LEXXGI4",325,0)
 . S @("^TMP(""LEXXGI4TIM"","_+($G(JNM))_","""_SUB_""",""BEG"")")=X_"^"_$TR($$FMTE^XLFDT(X,"5Z"),"@"," ")
"RTN","LEXXGI4",326,0)
 Q X
"RTN","LEXXGI4",327,0)
END(X,Y,Z) ;   End Process - Begin, Subscript, Job
"RTN","LEXXGI4",328,0)
 N BEG,ELP,END,ELP,SUB,JNM S BEG=$G(X),SUB=$G(Y),JNM=+($G(Z)) S:JNM'>0 JNM=$J H 2 S END=$$NOW^XLFDT
"RTN","LEXXGI4",329,0)
 S ELP="" S:+BEG>0&(+END>0) ELP=$TR($$FMDIFF^XLFDT(END,BEG,3)," ","0") I +($G(LEXXM))>0,$L(SUB),$L(ELP) D
"RTN","LEXXGI4",330,0)
 . S @("^TMP(""LEXXGI4TIM"","_+($G(JNM))_","""_SUB_""",""BEG"")")=BEG_"^"_$TR($$FMTE^XLFDT(BEG,"5Z"),"@"," ")
"RTN","LEXXGI4",331,0)
 . S @("^TMP(""LEXXGI4TIM"","_+($G(JNM))_","""_SUB_""",""END"")")=END_"^"_$TR($$FMTE^XLFDT(END,"5Z"),"@"," ")
"RTN","LEXXGI4",332,0)
 . S @("^TMP(""LEXXGI4TIM"","_+($G(JNM))_","""_SUB_""",""TIM"")")=ELP
"RTN","LEXXGI4",333,0)
 Q X
"RTN","LEXXGI4",334,0)
KIL(X) ;   Kill ^TMP("LEXXGI4TIM",$J)
"RTN","LEXXGI4",335,0)
 N JNM S JNM=$G(X) S:JNM'>0 JNM=$J I +($G(LEXXM))>0 D
"RTN","LEXXGI4",336,0)
 . K @("^TMP(""LEXXGI4TIM"","_+($G(JNM))_")")
"RTN","LEXXGI4",337,0)
 . K @("^TMP(""LEXXGI4TIM"","_$J_")")
"RTN","LEXXGI4",338,0)
 Q
"RTN","LEXXGI4",339,0)
CLR ;   Clear Variables
"RTN","LEXXGI4",340,0)
 K LEXLOUD,LEXTEST,LEXJ,LEXXM,LEXHOME
"RTN","LEXXGI4",341,0)
 Q
"RTN","LEXXGP1")
0^213^B211142742
"RTN","LEXXGP1",1,0)
LEXXGP1 ;ISL/KER - Global Post-Install (Repair Expressions) ;04/21/2014
"RTN","LEXXGP1",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXXGP1",3,0)
 ;               
"RTN","LEXXGP1",4,0)
 ;               
"RTN","LEXXGP1",5,0)
 ; Global Variables
"RTN","LEXXGP1",6,0)
 ;    ^TMP("LEXASL")      SACC 2.3.2.5.1
"RTN","LEXXGP1",7,0)
 ;    ^TMP("LEXASLU")     SACC 2.3.2.5.1
"RTN","LEXXGP1",8,0)
 ;    ^TMP("LEXAWRD")     SACC 2.3.2.5.1
"RTN","LEXXGP1",9,0)
 ;    ^TMP("LEXSUB")      SACC 2.3.2.5.1
"RTN","LEXXGP1",10,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXXGP1",11,0)
 ;    ^TMP("LEXXGPDAT")   SACC 2.3.2.5.1
"RTN","LEXXGP1",12,0)
 ;    ^TMP("LEXXGPMSG")   SACC 2.3.2.5.1
"RTN","LEXXGP1",13,0)
 ;    ^TMP("LEXXGPRPT")   SACC 2.3.2.5.1
"RTN","LEXXGP1",14,0)
 ;    ^TMP("LEXXGPTIM")   SACC 2.3.2.5.1
"RTN","LEXXGP1",15,0)
 ;               
"RTN","LEXXGP1",16,0)
 ; External References
"RTN","LEXXGP1",17,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXGP1",18,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXGP1",19,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGP1",20,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXGP1",21,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGP1",22,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXGP1",23,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGP1",24,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGP1",25,0)
 ;               
"RTN","LEXXGP1",26,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGP1",27,0)
 ; 
"RTN","LEXXGP1",28,0)
 ;    LEXMAIL   Set and Killed by the developer, used to 
"RTN","LEXXGP1",29,0)
 ;              report the timing of the task and
"RTN","LEXXGP1",30,0)
 ;              send to the user by MailMan message
"RTN","LEXXGP1",31,0)
 ;     
"RTN","LEXXGP1",32,0)
 ;    LEXHOME   Set and Killed by the developer in the
"RTN","LEXXGP1",33,0)
 ;              post-install, used to send the timing
"RTN","LEXXGP1",34,0)
 ;              message to G.LEXINS@FO.DOMAIN.EXT
"RTN","LEXXGP1",35,0)
 ;              (see entry point POST2)
"RTN","LEXXGP1",36,0)
 ;              
"RTN","LEXXGP1",37,0)
 ;                     FileMan           LEXXGP
"RTN","LEXXGP1",38,0)
 ;                 
"RTN","LEXXGP1",39,0)
 ;                        Lexicon           Lexicon
"RTN","LEXXGP1",40,0)
 ; Re-Index        Time  Available   Time  Available
"RTN","LEXXGP1",41,0)
 ; --------------  ----  ---------   ----  ---------
"RTN","LEXXGP1",42,0)
 ; Build 'AWRD'    33.5     No       8.5      Yes
"RTN","LEXXGP1",43,0)
 ; Replace 'AWRD'   --      --       2.5      No
"RTN","LEXXGP1",44,0)
 ; Build 'ASL'      8.5     No       6.5      Yes
"RTN","LEXXGP1",45,0)
 ; Replace 'ASL'    --      --       0.5      No
"RTN","LEXXGP1",46,0)
 ; Build 'ASUB'    15.5     No      11.5      Yes
"RTN","LEXXGP1",47,0)
 ; Replace 'ASUB'   --      --       1.5      No
"RTN","LEXXGP1",48,0)
 ; 
"RTN","LEXXGP1",49,0)
 ; Lexicon 
"RTN","LEXXGP1",50,0)
 ; Unavailable:    57.5              4.5 Minutes
"RTN","LEXXGP1",51,0)
 ; 
"RTN","LEXXGP1",52,0)
 Q
"RTN","LEXXGP1",53,0)
EN ; Interactive Entry Point
"RTN","LEXXGP1",54,0)
 D ALL
"RTN","LEXXGP1",55,0)
 Q
"RTN","LEXXGP1",56,0)
POST ; Entry Point from Post-Install
"RTN","LEXXGP1",57,0)
 N LEXMAIL,LEXHOME S LEXMAIL="" D POST3
"RTN","LEXXGP1",58,0)
 Q
"RTN","LEXXGP1",59,0)
POST2 ; Entry Point from Post-Install (home)
"RTN","LEXXGP1",60,0)
 N LEXMAIL,LEXHOME S LEXHOME="",LEXMAIL="" D POST3
"RTN","LEXXGP1",61,0)
 Q
"RTN","LEXXGP1",62,0)
POST3 ; Called by POST/POST2 starts task
"RTN","LEXXGP1",63,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ,LEXTN
"RTN","LEXXGP1",64,0)
 S ZTRTN="ALL^LEXXGP1"
"RTN","LEXXGP1",65,0)
 S (LEXTN,ZTDESC)="Repair indexes in files #757.01/757.21"
"RTN","LEXXGP1",66,0)
 I $D(LEXMAIL) S LEXMAIL=1,ZTSAVE("LEXMAIL")=""
"RTN","LEXXGP1",67,0)
 I $D(LEXHOME) S LEXHOME=1,ZTSAVE("LEXHOME")=""
"RTN","LEXXGP1",68,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGP1",69,0)
 . S LEXT="  "_$G(LEXTN)_" tasked"
"RTN","LEXXGP1",70,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")"
"RTN","LEXXGP1",71,0)
 . D MES^XPDUTL(LEXT)
"RTN","LEXXGP1",72,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGP1",73,0)
 Q
"RTN","LEXXGP1",74,0)
ALL ;
"RTN","LEXXGP1",75,0)
 K ^TMP("LEXAWRD",$J),^TMP("LEXASL",$J),^TMP("LEXASLU",$J)
"RTN","LEXXGP1",76,0)
 K ^TMP("LEXSUB",$J),^TMP("LEXXGPTIM",$J) N DIC,DTOUT,DUOUT,LEX,LEX1
"RTN","LEXXGP1",77,0)
 N LEX2,LEX3,LEX4,LEXB,LEXBD,LEXBEG,LEXBEGD,LEXBEGT,LEXBT,LEXC,LEXCHR
"RTN","LEXXGP1",78,0)
 N LEXCHRS,LEXCMD,LEXCOM,LEXCTL,LEXD,LEXDF,LEXE,LEXEL,LEXELP,LEXELPT
"RTN","LEXXGP1",79,0)
 N LEXEND,LEXENDD,LEXENDT,LEXET,LEXEX,LEXEXP,LEXF,LEXFC,LEXFIR,LEXFUL
"RTN","LEXXGP1",80,0)
 N LEXHDR,LEXI,LEXID,LEXIDS,LEXIDX,LEXINAM,LEXIT,LEXJ,LEXLAST,LEXLN
"RTN","LEXXGP1",81,0)
 N LEXLOOK,LEXLOUD,LEXLWRD,LEXM,LEXMC,LEXMCEI,LEXMCI,LEXN,LEXNAM
"RTN","LEXXGP1",82,0)
 N LEXNEW,LEXNM,LEXNOD,LEXO,LEXO1,LEXO2,LEXP,LEXPDT,LEXPRE,LEXRI,LEXRT
"RTN","LEXXGP1",83,0)
 N LEXRT1,LEXRT2,LEXS,LEXSI,LEXSUB,LEXT,LEXTDAT,LEXTEST,LEXTEXP,LEXTK
"RTN","LEXXGP1",84,0)
 N LEXTKC,LEXTKN,LEXTMP,LEXTWRD,LEXTX,LEXTXT,LEXV,LEXX,X,XCNP,XMDUZ
"RTN","LEXXGP1",85,0)
 N XMSCR,XMSUB,XMTEXT,XMY,XMZ,Y S:'$D(LEXQUIT) LEXQUIT="ALL"
"RTN","LEXXGP1",86,0)
 N LEXTXT,LEXFUL S LEXFUL="" D EXP,SUB^LEXXGP2
"RTN","LEXXGP1",87,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXGP1",88,0)
 . N LEXTXT S LEXTXT=$$FMTT Q:'$L(LEXTXT)  W !," ",LEXTXT
"RTN","LEXXGP1",89,0)
 I $G(LEXQUIT)="ALL" D
"RTN","LEXXGP1",90,0)
 . D:$D(LEXMAIL) XM^LEXXGP2
"RTN","LEXXGP1",91,0)
 . K ^TMP("LEXASL"),^TMP("LEXASLU"),^TMP("LEXAWRD")
"RTN","LEXXGP1",92,0)
 . K ^TMP("LEXSUB"),^TMP("LEXTKN"),^TMP("LEXXGPDAT")
"RTN","LEXXGP1",93,0)
 . K ^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP1",94,0)
 . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG")
"RTN","LEXXGP1",95,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP1",96,0)
 Q
"RTN","LEXXGP1",97,0)
 ;
"RTN","LEXXGP1",98,0)
EXP ; Expression file Main Indexes AWRD/ASL
"RTN","LEXXGP1",99,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP1",100,0)
 N LEXTMP,LEXTXT S LEXTXT="Expression Indexes"
"RTN","LEXXGP1",101,0)
 S:'$D(LEXQUIT) LEXQUIT="EXP" K ^TMP("LEXAWRD",$J)
"RTN","LEXXGP1",102,0)
 K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J) S LEXBEG=$$BEG
"RTN","LEXXGP1",103,0)
 D AWRDB,ASLB H 1 S LEXEND=$$END D SAV^LEXXGP2(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",104,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",105,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",106,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",107,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",108,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",109,0)
 N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",110,0)
 I $G(LEXQUIT)="EXP" D
"RTN","LEXXGP1",111,0)
 . D:$D(LEXMAIL) XM^LEXXGP2
"RTN","LEXXGP1",112,0)
 . K ^TMP("LEXASL"),^TMP("LEXASLU"),^TMP("LEXAWRD"),^TMP("LEXTKN")
"RTN","LEXXGP1",113,0)
 . K ^TMP("LEXXGPDAT"),^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP1",114,0)
 . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG")
"RTN","LEXXGP1",115,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP1",116,0)
 Q
"RTN","LEXXGP1",117,0)
AWRDB ;   AWRD Word Index Build                         8.5 minutes
"RTN","LEXXGP1",118,0)
 ;     Create the AWRD Index in the ^TMP global
"RTN","LEXXGP1",119,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP1",120,0)
 N LEXEX,LEXEXP,LEXIDX,LEXMC,LEXMCEI,LEXMCI,LEXRI,LEXSI,LEXTKC
"RTN","LEXXGP1",121,0)
 N LEXTKN,LEXTXT,X K ^TMP("LEXAWRD",$J) S:'$D(LEXQUIT) LEXQUIT="AWRDB"
"RTN","LEXXGP1",122,0)
 S LEXBEG=$$BEG,LEXEX=0,LEXTXT="Build 'AWRD' Word Index"
"RTN","LEXXGP1",123,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",124,0)
 F  S LEXEX=$O(^LEX(757.01,LEXEX)) Q:+LEXEX'>0  D
"RTN","LEXXGP1",125,0)
 . N X,LEXEXP,LEXIDX,LEXMCI,LEXMCEI,LEXSI,LEXTKN,LEXTKC
"RTN","LEXXGP1",126,0)
 . S LEXEXP=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,0))) Q:'$L(LEXEXP)
"RTN","LEXXGP1",127,0)
 . S LEXMCI=$P($G(^LEX(757.01,LEXEX,1)),"^",1) Q:+LEXMCI'>0
"RTN","LEXXGP1",128,0)
 . S LEXMCEI=$P($G(^LEX(757,LEXMCI,0)),"^",1) Q:+LEXMCEI'>0
"RTN","LEXXGP1",129,0)
 . ;       Words (main)
"RTN","LEXXGP1",130,0)
 . K ^TMP("LEXTKN",$J) S LEXIDX="",X=LEXEXP D PTX^LEXTOKN
"RTN","LEXXGP1",131,0)
 . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXXGP1",132,0)
 . . S LEXTKN="",LEXTKC=0
"RTN","LEXXGP1",133,0)
 . . F  S LEXTKC=$O(^TMP("LEXTKN",$J,LEXTKC)) Q:+LEXTKC'>0  D
"RTN","LEXXGP1",134,0)
 . . . S LEXTKN=$O(^TMP("LEXTKN",$J,LEXTKC,"")) Q:'$L(LEXTKN)
"RTN","LEXXGP1",135,0)
 . . . I '$D(^TMP("LEXAWRD",$J,LEXTKN,LEXMCEI)) D
"RTN","LEXXGP1",136,0)
 . . . . I '$D(^LEX(757.01,LEXEX,4,"B",LEXTKN)) D
"RTN","LEXXGP1",137,0)
 . . . . . S ^TMP("LEXAWRD",$J,LEXTKN,LEXMCEI,LEXEX)=""
"RTN","LEXXGP1",138,0)
 . K ^TMP("LEXTKN",$J)
"RTN","LEXXGP1",139,0)
 . ;       Supplemental Words
"RTN","LEXXGP1",140,0)
 . S LEXSI=0 F  S LEXSI=$O(^LEX(757.01,LEXEX,5,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEXXGP1",141,0)
 . . N LEXTKN S LEXTKN=$G(^LEX(757.01,LEXEX,5,LEXSI,0)) Q:'$L(LEXTKN)
"RTN","LEXXGP1",142,0)
 . . S ^TMP("LEXAWRD",$J,$$UP^XLFSTR(LEXTKN),+LEXEX,+LEXMCEI,LEXSI)=""
"RTN","LEXXGP1",143,0)
 . ;       Linked Words
"RTN","LEXXGP1",144,0)
 . I $D(^LEX(757.05,"AEXP",LEXEX)) D
"RTN","LEXXGP1",145,0)
 . . N LEXRI S LEXRI=0
"RTN","LEXXGP1",146,0)
 . . F  S LEXRI=$O(^LEX(757.05,"AEXP",LEXEX,LEXRI)) Q:+LEXRI=0  D
"RTN","LEXXGP1",147,0)
 . . . N LEXTKN,LEXMC S LEXTKN=$P(^LEX(757.05,LEXRI,0),U,1) Q:LEXTKN=""
"RTN","LEXXGP1",148,0)
 . . . S LEXMC=$P($G(^LEX(757.01,LEXEX,1)),U,1) Q:+LEXMC'>0
"RTN","LEXXGP1",149,0)
 . . . S ^TMP("LEXAWRD",$J,LEXTKN,LEXEX,"LINKED")=""
"RTN","LEXXGP1",150,0)
 K ^TMP("LEXTKN",$J) H 1 S LEXEND=$$END D SAV^LEXXGP2(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",151,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",152,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",153,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",154,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",155,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",156,0)
 D AWRDR N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",157,0)
 I $G(LEXQUIT)="AWRDB" D
"RTN","LEXXGP1",158,0)
 . D:$D(LEXMAIL) XM^LEXXGP2
"RTN","LEXXGP1",159,0)
 . K ^TMP("LEXAWRD"),^TMP("LEXTKN"),^TMP("LEXXGPDAT")
"RTN","LEXXGP1",160,0)
 . K ^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP1",161,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP1",162,0)
 Q
"RTN","LEXXGP1",163,0)
AWRDR ;   AWRD Word Index Replace                       2.5 minutes
"RTN","LEXXGP1",164,0)
 N LEX1,LEX2,LEX3,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXCHR,LEXCHRS,LEXCMD
"RTN","LEXXGP1",165,0)
 N LEXCOM,LEXCTL,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT,LEXLAST,LEXIT
"RTN","LEXXGP1",166,0)
 N LEXLWRD,LEXNOD,LEXRT,LEXRT1,LEXRT2,LEXTDAT,LEXTK,LEXTMP
"RTN","LEXXGP1",167,0)
 N LEXTWRD,LEXTXT S (LEX1,LEX2,LEX3)=0 Q:'$D(LEXQUIT)
"RTN","LEXXGP1",168,0)
 S LEXBEG=$$BEG,LEXTXT="Replace 'AWRD' Word Index"
"RTN","LEXXGP1",169,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",170,0)
 K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXXGP1",171,0)
 S LEXRT2="^TMP(""LEXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP1",172,0)
 . S LEXTK="" F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP1",173,0)
 . . S LEXCHR=$E($TR(LEXTK," ",""),1)
"RTN","LEXXGP1",174,0)
 . . S LEXTK=$E(LEXTK,1)_"~" S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP1",175,0)
 S LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP1",176,0)
 . ;     For words beginning with a character
"RTN","LEXXGP1",177,0)
 . W:'$D(ZTQUEUED)&($D(LEXTEST)) LEXCHR
"RTN","LEXXGP1",178,0)
 . S (LEXLWRD,LEXTWRD)=$C($A(LEXCHR)-1)_"~",LEXIT=0
"RTN","LEXXGP1",179,0)
 . F  S LEXLWRD=$O(^LEX(757.01,"AWRD",LEXLWRD)) D  Q:LEXIT>0
"RTN","LEXXGP1",180,0)
 . . S:'$L(LEXLWRD) LEXIT=1 S:$E(LEXLWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP1",181,0)
 . . Q:LEXIT>0  N LEXCMD
"RTN","LEXXGP1",182,0)
 . . ;       Delete words from the ^LEX global
"RTN","LEXXGP1",183,0)
 . . I $D(LEXFUL) D
"RTN","LEXXGP1",184,0)
 . . . N LEXNOD,LEXCTL,LEXIT S LEXIT=0
"RTN","LEXXGP1",185,0)
 . . . S LEXNOD="^LEX(757.01,""AWRD"","""_LEXLWRD_""")"
"RTN","LEXXGP1",186,0)
 . . . S LEXCTL="^LEX(757.01,""AWRD"","""_LEXLWRD_""","
"RTN","LEXXGP1",187,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) D  Q:LEXIT>0
"RTN","LEXXGP1",188,0)
 . . . . S:'$L(LEXNOD) LEXIT=1 S:LEXNOD'[LEXCTL LEXIT=1
"RTN","LEXXGP1",189,0)
 . . . . Q:LEXIT>0  S LEX2=LEX2+1
"RTN","LEXXGP1",190,0)
 . . S LEXCMD="K ^LEX(757.01,""AWRD"","""_LEXLWRD_""")"
"RTN","LEXXGP1",191,0)
 . . X LEXCMD S LEX1=LEX1+1
"RTN","LEXXGP1",192,0)
 . S LEXIT=0 F  S LEXTWRD=$O(^TMP("LEXAWRD",$J,LEXTWRD)) D  Q:LEXIT>0
"RTN","LEXXGP1",193,0)
 . . S:'$L(LEXTWRD) LEXIT=1 S:$E(LEXTWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP1",194,0)
 . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXXGP1",195,0)
 . . S LEXNOD="^TMP(""LEXAWRD"","_$J_","""_LEXTWRD_""")"
"RTN","LEXXGP1",196,0)
 . . S LEXCTL="^TMP(""LEXAWRD"","_$J_","""_LEXTWRD_""","
"RTN","LEXXGP1",197,0)
 . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP1",198,0)
 . . . ;       Copy Index from ^TMP to ^LEX
"RTN","LEXXGP1",199,0)
 . . . N LEXCMD
"RTN","LEXXGP1",200,0)
 . . . S LEXCMD="S ^LEX(757.01,""AWRD"""_$P(LEXNOD,$J,2,229)_"="""""
"RTN","LEXXGP1",201,0)
 . . . X LEXCMD S LEX3=LEX3+1
"RTN","LEXXGP1",202,0)
 . ;     Repeat for all characters
"RTN","LEXXGP1",203,0)
 H 1 S LEXEND=$$END D SAV^LEXXGP2(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",204,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",205,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",206,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",207,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",208,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",209,0)
 I LEX1>0,$D(LEXFUL) D
"RTN","LEXXGP1",210,0)
 . S LEXCOM=LEX1_" Word"_$S(LEX1>1:"s",1:"")
"RTN","LEXXGP1",211,0)
 . D SAV^LEXXGP2(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP1",212,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP1",213,0)
 I LEX3>0,$D(LEXFUL) D
"RTN","LEXXGP1",214,0)
 . S LEXCOM=LEX3_" 'AWRD' Index Node"_$S(LEX3>1:"s",1:"")
"RTN","LEXXGP1",215,0)
 . D SAV^LEXXGP2(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP1",216,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP1",217,0)
 N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",218,0)
 Q
"RTN","LEXXGP1",219,0)
 ; 
"RTN","LEXXGP1",220,0)
ASLB ;   ASL String Length Index Build                 6.5 minutes
"RTN","LEXXGP1",221,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXDF,LEXE,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP1",222,0)
 N LEXF,LEXFC,LEXFIR,LEXM,LEXO,LEXP,LEXRT,LEXRT2,LEXS,LEXT,LEXTK,LEXIT
"RTN","LEXXGP1",223,0)
 N LEXTKN,LEXTMP,LEXTXT S LEXBEG=$$BEG S:'$D(LEXQUIT) LEXQUIT="ASLB"
"RTN","LEXXGP1",224,0)
 S LEXTXT="Build 'ASL' String Length Index"
"RTN","LEXXGP1",225,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",226,0)
 S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXXGP1",227,0)
 S:$D(^TMP("LEXAWRD",$J)) LEXRT="^TMP(""LEXAWRD"","_$J_"," Q:'$L(LEXRT)
"RTN","LEXXGP1",228,0)
 ;     For each Word
"RTN","LEXXGP1",229,0)
 K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J) S (LEXFIR,LEXFC,LEXTK)=""
"RTN","LEXXGP1",230,0)
 F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP1",231,0)
 . N LEXP,LEXS,LEXC,LEXF,LEXTKN S LEXTKN=LEXTK
"RTN","LEXXGP1",232,0)
 . F  Q:$E(LEXTKN,1)'=" "  S LEXTKN=$E(LEXTKN,2,$L(LEXTKN))
"RTN","LEXXGP1",233,0)
 . F  Q:$E(LEXTKN,$L(LEXTKN))'=" "  S LEXTKN=$E(LEXTKN,1,($L(LEXTKN)-1))
"RTN","LEXXGP1",234,0)
 . S LEXF=$E(LEXTKN,1)
"RTN","LEXXGP1",235,0)
 . W:'$D(ZTQUEUED)&($D(LEXTEST))&(LEXFIR'=LEXF)&(LEXFC'[LEXF) LEXF
"RTN","LEXXGP1",236,0)
 . S LEXFIR=LEXF S:LEXFC'[LEXF LEXFC=LEXFC_LEXF
"RTN","LEXXGP1",237,0)
 . ;     Count the occurrences of each string
"RTN","LEXXGP1",238,0)
 . F LEXP=1:1:$L(LEXTKN)  S LEXS=$$UP^XLFSTR($E(LEXTKN,1,LEXP)) D
"RTN","LEXXGP1",239,0)
 . . Q:'$L($G(LEXS))  I '$D(^TMP("LEXASLU",$J,LEXS)) D
"RTN","LEXXGP1",240,0)
 . . . N LEXE,LEXM,LEXO,LEXT S LEXT=0
"RTN","LEXXGP1",241,0)
 . . . I $L(LEXS)>1 D
"RTN","LEXXGP1",242,0)
 . . . . S LEXO=$E(LEXS,1,($L(LEXS)-1))
"RTN","LEXXGP1",243,0)
 . . . . S LEXO=LEXO_$C(($A($E(LEXS,$L(LEXS)))-1))_"~"
"RTN","LEXXGP1",244,0)
 . . . S:$L(LEXS)=1 LEXO=$C(($A(LEXS)-1))_"~" S LEXIT=0
"RTN","LEXXGP1",245,0)
 . . . F  S LEXO=$O(@(LEXRT_""""_LEXO_""")")) D  Q:LEXIT>0
"RTN","LEXXGP1",246,0)
 . . . . S:'$L(LEXO) LEXIT=1 S:$E(LEXO,1,$L(LEXS))'=LEXS LEXIT=1
"RTN","LEXXGP1",247,0)
 . . . . Q:LEXIT>0  N LEXM S LEXM=0
"RTN","LEXXGP1",248,0)
 . . . . F  S LEXM=$O(@(LEXRT_""""_LEXO_""","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXXGP1",249,0)
 . . . . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_""""_LEXO_""","_LEXM_","
"RTN","LEXXGP1",250,0)
 . . . . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1
"RTN","LEXXGP1",251,0)
 . . . K:$L($G(LEXS)) ^TMP("LEXASL",$J,LEXS)
"RTN","LEXXGP1",252,0)
 . . . S:$L($G(LEXS))&(+($G(LEXT))>0) ^TMP("LEXASL",$J,LEXS,LEXT)=""
"RTN","LEXXGP1",253,0)
 . . S ^TMP("LEXASLU",$J,LEXS)=""
"RTN","LEXXGP1",254,0)
 H 1 S LEXEND=$$END D SAV^LEXXGP2(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",255,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",256,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",257,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",258,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",259,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",260,0)
 D ASLR N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",261,0)
 I $G(LEXQUIT)="ASLB" D
"RTN","LEXXGP1",262,0)
 . D:$D(LEXMAIL) XM^LEXXGP2
"RTN","LEXXGP1",263,0)
 . K ^TMP("LEXASL"),^TMP("LEXASLU"),^TMP("LEXAWRD"),^TMP("LEXTKN")
"RTN","LEXXGP1",264,0)
 . K ^TMP("LEXXGPDAT"),^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP1",265,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP1",266,0)
 Q
"RTN","LEXXGP1",267,0)
ASLR ;   ASL String Length Index Replace               0.5 minutes
"RTN","LEXXGP1",268,0)
 N LEX1,LEX2,LEX3,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXCHR,LEXCHRS,LEXCMD
"RTN","LEXXGP1",269,0)
 N LEXCOM,LEXCTL,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT,LEXLWRD
"RTN","LEXXGP1",270,0)
 N LEXNOD,LEXRT,LEXRT1,LEXRT2,LEXTK,LEXTMP,LEXTWRD,LEXTXT
"RTN","LEXXGP1",271,0)
 S (LEX1,LEX2,LEX3)=0 Q:'$D(LEXQUIT)
"RTN","LEXXGP1",272,0)
 S LEXBEG=$$BEG,LEXTXT="Replace 'ASL' String Length Index"
"RTN","LEXXGP1",273,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",274,0)
 K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXXGP1",275,0)
 S LEXRT2="^TMP(""LEXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP1",276,0)
 . N LEXTK S LEXTK=""
"RTN","LEXXGP1",277,0)
 . F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP1",278,0)
 . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1)
"RTN","LEXXGP1",279,0)
 . . S LEXTK=$E(LEXTK,1)_"~" S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP1",280,0)
 S LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP1",281,0)
 . ;     For strings beginning with character
"RTN","LEXXGP1",282,0)
 . N LEXLWRD,LEXTWRD,LEXIT
"RTN","LEXXGP1",283,0)
 . W:'$D(ZTQUEUED)&($D(LEXTEST)) LEXCHR
"RTN","LEXXGP1",284,0)
 . S (LEXLWRD,LEXTWRD)=$C($A(LEXCHR)-1)_"~" S LEXIT=0
"RTN","LEXXGP1",285,0)
 . F  S LEXLWRD=$O(^LEX(757.01,"ASL",LEXLWRD)) D  Q:LEXIT>0
"RTN","LEXXGP1",286,0)
 . . S:'$L(LEXLWRD) LEXIT=1 S:$E(LEXLWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP1",287,0)
 . . Q:LEXIT>0  N LEXNOD,LEXCTL,LEXCMD
"RTN","LEXXGP1",288,0)
 . . ;       Delete strings from the ^LEX global
"RTN","LEXXGP1",289,0)
 . . S LEXNOD="^LEX(757.01,""ASL"","""_LEXTWRD_""")"
"RTN","LEXXGP1",290,0)
 . . S LEXCTL="^LEX(757.01,""ASL"","""_LEXTWRD_""","
"RTN","LEXXGP1",291,0)
 . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP1",292,0)
 . . . S LEX2=LEX2+1
"RTN","LEXXGP1",293,0)
 . . S LEXCMD="K ^LEX(757.01,""ASL"","""_LEXLWRD_""")"
"RTN","LEXXGP1",294,0)
 . . X LEXCMD S LEX1=LEX1+1
"RTN","LEXXGP1",295,0)
 . S LEXTWRD=$C($A(LEXCHR)-1)_"~" S LEXIT=0
"RTN","LEXXGP1",296,0)
 . F  S LEXTWRD=$O(^TMP("LEXASL",$J,LEXTWRD)) D  Q:LEXIT>0
"RTN","LEXXGP1",297,0)
 . . S:'$L(LEXTWRD) LEXIT=1 S:$E(LEXTWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP1",298,0)
 . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXXGP1",299,0)
 . . S LEXNOD="^TMP(""LEXASL"","_$J_","""_LEXTWRD_""")"
"RTN","LEXXGP1",300,0)
 . . S LEXCTL="^TMP(""LEXASL"","_$J_","""_LEXTWRD_""","
"RTN","LEXXGP1",301,0)
 . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP1",302,0)
 . . . ;       Copy Index from ^TMP to ^LEX
"RTN","LEXXGP1",303,0)
 . . . N LEXCMD
"RTN","LEXXGP1",304,0)
 . . . S LEXCMD="S ^LEX(757.01,""ASL"""_$P(LEXNOD,$J,2,229)_"="""""
"RTN","LEXXGP1",305,0)
 . . . X LEXCMD S LEX3=LEX3+1
"RTN","LEXXGP1",306,0)
 . ;     Repeat for all characters
"RTN","LEXXGP1",307,0)
 H 1 S LEXEND=$$END D SAV^LEXXGP2(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",308,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",309,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",310,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",311,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",312,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",313,0)
 I LEX3>0,$D(LEXFUL) D
"RTN","LEXXGP1",314,0)
 . S LEXCOM=LEX3_" 'ASL' Index Node"_$S(LEX3>1:"s",1:"")
"RTN","LEXXGP1",315,0)
 . D SAV^LEXXGP2(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP1",316,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP1",317,0)
 N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",318,0)
 Q
"RTN","LEXXGP1",319,0)
 ;
"RTN","LEXXGP1",320,0)
SUB ; Subset file Indexes Aaaa
"RTN","LEXXGP1",321,0)
 D SUB^LEXXGP2
"RTN","LEXXGP1",322,0)
 Q
"RTN","LEXXGP1",323,0)
 ;
"RTN","LEXXGP1",324,0)
 ; Miscellaneous
"RTN","LEXXGP1",325,0)
FMTT(X) ;   Format Total
"RTN","LEXXGP1",326,0)
 N LEXI,LEXTXT,LEXTMP,LEXBEG,LEXBEGD,LEXBEGT,LEXEND,LEXENDD,LEXENDT,LEXELP
"RTN","LEXXGP1",327,0)
 S LEXBEG=$G(^TMP("LEXXGPTIM",$J,"BEG")) Q:$P(LEXBEG,".",1)'?7N ""
"RTN","LEXXGP1",328,0)
 S LEXEND=$G(^TMP("LEXXGPTIM",$J,"END")) Q:$P(LEXEND,".",1)'?7N ""
"RTN","LEXXGP1",329,0)
 Q:LEXEND'>LEXBEG ""  S LEXTXT="Total Time to Repair Indexes"
"RTN","LEXXGP1",330,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG),LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",331,0)
 Q:'$L(LEXBEGT) ""  Q:'$L(LEXENDT) ""  Q:'$L(LEXELP) ""
"RTN","LEXXGP1",332,0)
 S X=LEXTXT_$J(" ",(35-$L(LEXTXT)))_LEXBEGD_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",333,0)
 Q X
"RTN","LEXXGP1",334,0)
FMT(X,LEXBD,LEXBT,LEXET,LEXEL) ;   Format Line
"RTN","LEXXGP1",335,0)
 N LEXTX S LEXTX=$G(X),LEXBD=$G(LEXBD),LEXBT=$G(LEXBT),LEXET=$G(LEXET),LEXEL=$G(LEXEL)
"RTN","LEXXGP1",336,0)
 Q:'$L(LEXTX)!('$L(LEXBD))!('$L(LEXBT))!('$L(LEXET))!('$L(LEXEL)) ""
"RTN","LEXXGP1",337,0)
 S X=$G(LEXTX)_$J(" ",(35-$L($G(LEXTX))))_LEXBD_"   "_LEXBT_"   "_LEXET_"   "_LEXEL
"RTN","LEXXGP1",338,0)
 Q X
"RTN","LEXXGP1",339,0)
DF(X) ;   Date Display Format
"RTN","LEXXGP1",340,0)
 N LEXO,LEXD,LEXDF,LEXP,LEXC S (X,LEXD)=$P($G(X),".",1) Q:LEXD'?7N "--/--/----"
"RTN","LEXXGP1",341,0)
 S LEXP=$O(^TMP("LEXXGPDAT",$J,(LEXD_".001")),-1) S LEXC=1
"RTN","LEXXGP1",342,0)
 S:$L(LEXP) LEXC=$O(^TMP("LEXXGPDAT",$J,LEXP," "),-1)
"RTN","LEXXGP1",343,0)
 S LEXO=$$ED(LEXD) S:LEXP=LEXD&(LEXC>1) LEXO="  ""    ""  " S X=LEXO
"RTN","LEXXGP1",344,0)
 Q X
"RTN","LEXXGP1",345,0)
ED(X) ;   External Date from Fileman
"RTN","LEXXGP1",346,0)
 N LEX,LEXT,LEXBD S LEX=$G(X) Q:$P(LEX,".",1)'?7N ""
"RTN","LEXXGP1",347,0)
 S LEXT=$$FMTE^XLFDT($G(LEX),"5ZS"),X=$P(LEXT,"@",1)
"RTN","LEXXGP1",348,0)
 Q X
"RTN","LEXXGP1",349,0)
ET(X) ;   External Time from Fileman
"RTN","LEXXGP1",350,0)
 N LEX,LEXT,LEXBD S LEX=$G(X) Q:$P(LEX,".",1)'?7N ""
"RTN","LEXXGP1",351,0)
 S LEXT=$$FMTE^XLFDT($G(LEX),"5ZS"),X=$P(LEXT,"@",2)
"RTN","LEXXGP1",352,0)
 S:'$L(X) X="00:00:00" S:'$L($P(X,":",1)) $P(X,":",1)="00"
"RTN","LEXXGP1",353,0)
 S:'$L($P(X,":",2)) $P(X,":",2)="00" S:'$L($P(X,":",3)) $P(X,":",3)="00"
"RTN","LEXXGP1",354,0)
 Q X
"RTN","LEXXGP1",355,0)
BEG(X) ;   Begin Date/Time
"RTN","LEXXGP1",356,0)
 S X=$$NOW^XLFDT N Y S Y=$G(^TMP("LEXXGPTIM",$J,"BEG"))
"RTN","LEXXGP1",357,0)
 S:'$L(Y) Y=X S:+X<Y Y=X S:$P(Y,".",1)?7N ^TMP("LEXXGPTIM",$J,"BEG")=Y
"RTN","LEXXGP1",358,0)
 Q X
"RTN","LEXXGP1",359,0)
END(X) ;   End Date/Time
"RTN","LEXXGP1",360,0)
 S X=$$NOW^XLFDT N Y S Y=$G(^TMP("LEXXGPTIM",$J,"END"))
"RTN","LEXXGP1",361,0)
 S:'$L(Y) Y=X S:+X>Y Y=X S:$P(Y,".",1)?7N ^TMP("LEXXGPTIM",$J,"END")=Y
"RTN","LEXXGP1",362,0)
 Q X
"RTN","LEXXGP1",363,0)
ELP(X,Y) ;   Elapsed Time
"RTN","LEXXGP1",364,0)
 N LEXBEG,LEXEND,LEXELP S LEXBEG=$G(X),LEXEND=$G(Y)
"RTN","LEXXGP1",365,0)
 Q:$P(LEXBEG,".",1)'?7N "        "
"RTN","LEXXGP1",366,0)
 Q:$P(LEXEND,".",1)'?7N "        "
"RTN","LEXXGP1",367,0)
 S LEXELP=$TR($$FMDIFF^XLFDT(LEXEND,LEXBEG,3)," ","0")
"RTN","LEXXGP1",368,0)
 S X=LEXELP
"RTN","LEXXGP1",369,0)
 Q X
"RTN","LEXXGP1",370,0)
CLR ;   Clear Variables
"RTN","LEXXGP1",371,0)
 K LEXLOUD,LEXTEST,LEXJ,LEXMAIL,LEXHOME,LEXQUIT
"RTN","LEXXGP1",372,0)
 Q
"RTN","LEXXGP2")
0^214^B136699834
"RTN","LEXXGP2",1,0)
LEXXGP2 ;ISL/KER - Global Post-Install (Repair Subsets) ;04/21/2014
"RTN","LEXXGP2",2,0)
 ;;2.0;LEXICON UTILITY;**80**;Sep 23, 1996;Build 1
"RTN","LEXXGP2",3,0)
 ;               
"RTN","LEXXGP2",4,0)
 ; Global Variables
"RTN","LEXXGP2",5,0)
 ;    ^TMP("LEXSUB")      SACC 2.3.2.5.1
"RTN","LEXXGP2",6,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXXGP2",7,0)
 ;    ^TMP("LEXXGPDAT")   SACC 2.3.2.5.1
"RTN","LEXXGP2",8,0)
 ;    ^TMP("LEXXGPMSG")   SACC 2.3.2.5.1
"RTN","LEXXGP2",9,0)
 ;    ^TMP("LEXXGPRPT")   SACC 2.3.2.5.1
"RTN","LEXXGP2",10,0)
 ;               
"RTN","LEXXGP2",11,0)
 ; External References
"RTN","LEXXGP2",12,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGP2",13,0)
 ;    ^DIC                ICR  10006
"RTN","LEXXGP2",14,0)
 ;    IXALL^DIK           ICR  10013
"RTN","LEXXGP2",15,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXGP2",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGP2",17,0)
 ;    ^XMD                ICR  10070
"RTN","LEXXGP2",18,0)
 ;               
"RTN","LEXXGP2",19,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGP2",20,0)
 ; 
"RTN","LEXXGP2",21,0)
 ;    LEXMAIL   Set and Killed by the developer, used to 
"RTN","LEXXGP2",22,0)
 ;              report the timing of the task and
"RTN","LEXXGP2",23,0)
 ;              send to the user by MailMan message
"RTN","LEXXGP2",24,0)
 ;     
"RTN","LEXXGP2",25,0)
 ;    LEXHOME   Set and Killed by the developer in the
"RTN","LEXXGP2",26,0)
 ;              post-install, used to send the timing
"RTN","LEXXGP2",27,0)
 ;              message to G.LEXINS@FO.DOMAIN.EXT
"RTN","LEXXGP2",28,0)
 ;              (see entry point POST2)
"RTN","LEXXGP2",29,0)
 ;              
"RTN","LEXXGP2",30,0)
 Q
"RTN","LEXXGP2",31,0)
SUB ; Subset file Indexes Aaaa
"RTN","LEXXGP2",32,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP2",33,0)
 N LEXTMP,LEXTXT S LEXTXT="Subset Indexes"
"RTN","LEXXGP2",34,0)
 S:'$D(LEXQUIT) LEXQUIT="SUB" K ^TMP("LEXSUB",$J)
"RTN","LEXXGP2",35,0)
 S LEXBEG=$$BEG^LEXXGP1 D ASUBB H 1 S LEXEND=$$END^LEXXGP1
"RTN","LEXXGP2",36,0)
 D SAV(LEXBEG,LEXEND,LEXTXT) S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND)
"RTN","LEXXGP2",37,0)
 S LEXBEGD=$$ED^LEXXGP1(LEXBEG),LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND)
"RTN","LEXXGP2",38,0)
 S LEXDF=$$DF^LEXXGP1(LEXBEG),LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP2",39,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP2",40,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP2",41,0)
 N ZTQUEUED,LEXTEST
"RTN","LEXXGP2",42,0)
 I $G(LEXQUIT)="SUB" D
"RTN","LEXXGP2",43,0)
 . D:$D(LEXMAIL) XM
"RTN","LEXXGP2",44,0)
 . K ^TMP("LEXAWRD"),^TMP("LEXSUB"),^TMP("LEXTKN")
"RTN","LEXXGP2",45,0)
 . K ^TMP("LEXXGPDAT"),^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP2",46,0)
 . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG")
"RTN","LEXXGP2",47,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP2",48,0)
 Q
"RTN","LEXXGP2",49,0)
ASUBB ;   ASUB Word Index Build                        11.5 minutes
"RTN","LEXXGP2",50,0)
 ;     Create the AWRD Index in the ^TMP global
"RTN","LEXXGP2",51,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT,LEXEX
"RTN","LEXXGP2",52,0)
 N LEXEXP,LEXTEXP,LEXIDX,LEXMC,LEXMCEI,LEXMCI,LEXRI,LEXSI,LEXSUB
"RTN","LEXXGP2",53,0)
 N LEXTKC,LEXTKN,LEXTXT,X
"RTN","LEXXGP2",54,0)
 K ^TMP("LEXSUB",$J) S:'$D(LEXQUIT) LEXQUIT="ASUBB"
"RTN","LEXXGP2",55,0)
 S LEXBEG=$$BEG^LEXXGP1,LEXSUB=0,LEXTXT="Build 'ASUB' Word Index"
"RTN","LEXXGP2",56,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.21"))
"RTN","LEXXGP2",57,0)
 F  S LEXSUB=$O(^LEX(757.21,LEXSUB)) Q:+LEXSUB'>0  D
"RTN","LEXXGP2",58,0)
 . N X,LEXEX,LEXEXP,LEXIDX,LEXMCI,LEXMCEI,LEXSI,LEXTKN
"RTN","LEXXGP2",59,0)
 . N LEXTKC,LEXNAM,LEXINAM,LEXNOD,LEXRP,LEXTEXP S LEXTEXP=0
"RTN","LEXXGP2",60,0)
 . S LEXNOD=$G(^LEX(757.21,LEXSUB,0)),LEXEX=+LEXNOD
"RTN","LEXXGP2",61,0)
 . S LEXNAM=+($P(LEXNOD,"^",2))
"RTN","LEXXGP2",62,0)
 . S LEXNAM=$P($G(^LEXT(757.2,+LEXNAM,0)),"^",2)
"RTN","LEXXGP2",63,0)
 . Q:$L(LEXNAM)'=3  S LEXINAM="A"_LEXNAM
"RTN","LEXXGP2",64,0)
 . S LEXEXP=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,0))) Q:'$L(LEXEXP)
"RTN","LEXXGP2",65,0)
 . S LEXMCI=$P($G(^LEX(757.01,LEXEX,1)),"^",1) Q:+LEXMCI'>0
"RTN","LEXXGP2",66,0)
 . S LEXMCEI=$P($G(^LEX(757,LEXMCI,0)),"^",1) Q:+LEXMCEI'>0
"RTN","LEXXGP2",67,0)
 . F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMCI,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXXGP2",68,0)
 . . N LEXEXP,X,LEXIDX,LEXLOOK,LEXEXPT,LEXRP
"RTN","LEXXGP2",69,0)
 . . Q:$P($G(^LEX(757.01,+LEXTEXP,1)),"^",5)>0
"RTN","LEXXGP2",70,0)
 . . S (LEXEXP,X)=^LEX(757.01,LEXTEXP,0)
"RTN","LEXXGP2",71,0)
 . . K ^TMP("LEXTKN",$J) S LEXIDX="" D PTX^LEXTOKN
"RTN","LEXXGP2",72,0)
 . . ;     Supplemental Words
"RTN","LEXXGP2",73,0)
 . . I $D(^LEX(757.01,LEXTEXP,5)) D
"RTN","LEXXGP2",74,0)
 . . . N LEXV,LEXEXPT S LEXV=""
"RTN","LEXXGP2",75,0)
 . . . F  S LEXV=$O(^LEX(757.01,LEXTEXP,5,"B",LEXV)) Q:LEXV=""  D
"RTN","LEXXGP2",76,0)
 . . . . N LEXC S LEXC=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXXGP2",77,0)
 . . . . S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXXGP2",78,0)
 . . . . S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXXGP2",79,0)
 . . ;     Replacement Words
"RTN","LEXXGP2",80,0)
 . . I $D(^LEX(757.05,"AEXP",LEXTEXP)) N LEXRP S LEXRP=0 D
"RTN","LEXXGP2",81,0)
 . . . F  S LEXRP=$O(^LEX(757.05,"AEXP",LEXTEXP,LEXRP)) Q:+LEXRP'>0  D
"RTN","LEXXGP2",82,0)
 . . . . N LEXV,LEXC
"RTN","LEXXGP2",83,0)
 . . . . S LEXV=$P(^LEX(757.05,LEXRP,0),U) Q:'$L(LEXV)
"RTN","LEXXGP2",84,0)
 . . . . S LEXC=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXXGP2",85,0)
 . . . . S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXXGP2",86,0)
 . . . . S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXXGP2",87,0)
 . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXXGP2",88,0)
 . . . S LEXTKN="",LEXTKC=0
"RTN","LEXXGP2",89,0)
 . . . F  S LEXTKC=$O(^TMP("LEXTKN",$J,LEXTKC)) Q:+LEXTKC'>0  D
"RTN","LEXXGP2",90,0)
 . . . . S LEXTKN=$O(^TMP("LEXTKN",$J,LEXTKC,"")) Q:'$L(LEXTKN)
"RTN","LEXXGP2",91,0)
 . . . . S ^TMP("LEXSUB",$J,LEXINAM,LEXTKN,LEXSUB)=""
"RTN","LEXXGP2",92,0)
 . . K ^TMP("LEXTKN",$J)
"RTN","LEXXGP2",93,0)
 K ^TMP("LEXTKN",$J) H 1 S LEXEND=$$END^LEXXGP1 D SAV(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP2",94,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",95,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",96,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP2",97,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP2",98,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP2",99,0)
 D ASUBR N ZTQUEUED,LEXTEST
"RTN","LEXXGP2",100,0)
 I $G(LEXQUIT)="ASUBB" D
"RTN","LEXXGP2",101,0)
 . D:$D(LEXMAIL) XM
"RTN","LEXXGP2",102,0)
 . K ^TMP("LEXAWRD"),^TMP("LEXSUB"),^TMP("LEXTKN")
"RTN","LEXXGP2",103,0)
 . K ^TMP("LEXXGPDAT"),^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP2",104,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP2",105,0)
 Q
"RTN","LEXXGP2",106,0)
ASUBR ;   ASUB Word Index Replace                       1.5 minutes
"RTN","LEXXGP2",107,0)
 N LEX1,LEX2,LEX3,LEX4,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXCHR,LEXCHRS,LEXIDS
"RTN","LEXXGP2",108,0)
 N LEXCMD,LEXCOM,LEXCTL,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP2",109,0)
 N LEXLWRD,LEXNOD,LEXRT,LEXRT1,LEXRT2,LEXTK,LEXTMP,LEXTWRD
"RTN","LEXXGP2",110,0)
 N LEXTXT,LEXID S (LEX1,LEX2,LEX3,LEX4)=0 Q:'$D(LEXQUIT)
"RTN","LEXXGP2",111,0)
 S LEXBEG=$$BEG^LEXXGP1,LEXTXT="Replace 'ASUB' Word Index" K LEXIDS
"RTN","LEXXGP2",112,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.21"))
"RTN","LEXXGP2",113,0)
 S LEXTMP=" " F  S LEXTMP=$O(^LEX(757.21,LEXTMP)) Q:'$L(LEXTMP)  D
"RTN","LEXXGP2",114,0)
 . S:$E(LEXTMP,1)="A" LEXIDS(LEXTMP)=""
"RTN","LEXXGP2",115,0)
 S LEXTMP=" "
"RTN","LEXXGP2",116,0)
 F  S LEXTMP=$O(^TMP("LEXSUB",$J,LEXTMP)) Q:'$L(LEXTMP)  D
"RTN","LEXXGP2",117,0)
 . S:$E(LEXTMP,1)="A" LEXIDS(LEXTMP)=""
"RTN","LEXXGP2",118,0)
 S LEXID="" F  S LEXID=$O(LEXIDS(LEXID)) Q:'$L(LEXID)  D
"RTN","LEXXGP2",119,0)
 . ;     For Subset Index
"RTN","LEXXGP2",120,0)
 . W:'$D(ZTQUEUED)&($D(LEXTEST)) !,LEXID," " S LEX1=LEX1+1
"RTN","LEXXGP2",121,0)
 . K LEXCHRS S LEXRT1="^LEX(757.21,"""_LEXID_""","
"RTN","LEXXGP2",122,0)
 . S LEXRT2="^TMP(""LEXSUB"","_$J_","""_LEXID_""","
"RTN","LEXXGP2",123,0)
 . F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP2",124,0)
 . . N LEXTK S LEXTK=""
"RTN","LEXXGP2",125,0)
 . . F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP2",126,0)
 . . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1)
"RTN","LEXXGP2",127,0)
 . . . S LEXTK=$E(LEXTK,1)_"~" S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP2",128,0)
 . S LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP2",129,0)
 . . ;       For words beginning with character
"RTN","LEXXGP2",130,0)
 . . W:'$D(ZTQUEUED)&($D(LEXTEST)) LEXCHR
"RTN","LEXXGP2",131,0)
 . . N LEXLWRD,LEXTWRD,LEXIT
"RTN","LEXXGP2",132,0)
 . . S (LEXLWRD,LEXTWRD)=$C($A(LEXCHR)-1)_"~",LEXIT=0
"RTN","LEXXGP2",133,0)
 . . F  S LEXLWRD=$O(^LEX(757.21,LEXID,LEXLWRD)) D  Q:LEXIT>0
"RTN","LEXXGP2",134,0)
 . . . S:'$L(LEXLWRD) LEXIT=1 S:$E(LEXLWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP2",135,0)
 . . . Q:LEXIT>0  S LEX2=LEX2+1
"RTN","LEXXGP2",136,0)
 . . . ;         Delete words from the Subset
"RTN","LEXXGP2",137,0)
 . . . N LEXNOD,LEXCTL,LEXCMD
"RTN","LEXXGP2",138,0)
 . . . S LEXNOD="^LEX(757.21,"""_LEXID_""","""_LEXTWRD_""")"
"RTN","LEXXGP2",139,0)
 . . . S LEXCTL="^LEX(757.21,"""_LEXID_""","""_LEXTWRD_""","
"RTN","LEXXGP2",140,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP2",141,0)
 . . . . S LEX3=LEX3+1
"RTN","LEXXGP2",142,0)
 . . . S LEXCMD="K ^LEX(757.21,"""_LEXID_""","""_LEXLWRD_""")"
"RTN","LEXXGP2",143,0)
 . . . X LEXCMD
"RTN","LEXXGP2",144,0)
 . . S LEXTWRD=$C($A(LEXCHR)-1)_"~",LEXIT=0
"RTN","LEXXGP2",145,0)
 . . F  S LEXTWRD=$O(^TMP("LEXSUB",$J,LEXID,LEXTWRD)) D  Q:LEXIT>0
"RTN","LEXXGP2",146,0)
 . . . S:'$L(LEXTWRD) LEXIT=1 S:$E(LEXTWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP2",147,0)
 . . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXXGP2",148,0)
 . . . S LEXNOD="^TMP(""LEXSUB"","_$J_","""_LEXID_""","""_LEXTWRD_""")"
"RTN","LEXXGP2",149,0)
 . . . S LEXCTL="^TMP(""LEXSUB"","_$J_","""_LEXID_""","""_LEXTWRD_""","
"RTN","LEXXGP2",150,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP2",151,0)
 . . . . ;         Copy Index from ^TMP to ^LEX
"RTN","LEXXGP2",152,0)
 . . . . N LEXCMD S LEXCMD="S ^LEX(757.21,"""_LEXID_""","
"RTN","LEXXGP2",153,0)
 . . . . S LEXCMD=LEXCMD_$P(LEXNOD,",",4,229)_"="""""
"RTN","LEXXGP2",154,0)
 . . . . X LEXCMD S LEX4=LEX4+1
"RTN","LEXXGP2",155,0)
 . . ;       Repeat for all characters
"RTN","LEXXGP2",156,0)
 . ;     Repeat for all Subset Indexes
"RTN","LEXXGP2",157,0)
 H 1 S LEXEND=$$END^LEXXGP1 D SAV(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP2",158,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",159,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",160,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP2",161,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP2",162,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP2",163,0)
 I LEX1>0,$D(LEXFUL) D
"RTN","LEXXGP2",164,0)
 . S LEXCOM=LEX1_" Subset"_$S(LEX1>1:"s",1:"")
"RTN","LEXXGP2",165,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP2",166,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP2",167,0)
 I LEX2>0,$D(LEXFUL) D
"RTN","LEXXGP2",168,0)
 . S LEXCOM=LEX2_" Word"_$S(LEX2>1:"s",1:"")
"RTN","LEXXGP2",169,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP2",170,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP2",171,0)
 I LEX4>0,$D(LEXFUL) D
"RTN","LEXXGP2",172,0)
 . S LEXCOM=LEX4_" Subset Index Node"_$S(LEX4>1:"s",1:"")
"RTN","LEXXGP2",173,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP2",174,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP2",175,0)
 N ZTQUEUED,LEXTEST,LEXFUL
"RTN","LEXXGP2",176,0)
 Q
"RTN","LEXXGP2",177,0)
 ;
"RTN","LEXXGP2",178,0)
 ; MailMan
"RTN","LEXXGP2",179,0)
XM ;   Mail Message
"RTN","LEXXGP2",180,0)
 N LEX1,LEX2,LEXB,LEXC,LEXD,LEXE,LEXJ,LEXMAIL,LEXN
"RTN","LEXXGP2",181,0)
 N LEXPRE,LEXNEW,LEXS,LEXT,LEXX,LEXI,LEXNM,XCNP
"RTN","LEXXGP2",182,0)
 N XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ
"RTN","LEXXGP2",183,0)
 D XMG K ^TMP("LEXXGPMSG") N LEXI S LEXI=0
"RTN","LEXXGP2",184,0)
 F  S LEXI=$O(^TMP("LEXXGPRPT",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXGP2",185,0)
 . N LEXN,LEXT S LEXN=$O(^TMP("LEXXGPMSG",$J," "),-1)+1
"RTN","LEXXGP2",186,0)
 . S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXI))
"RTN","LEXXGP2",187,0)
 . S ^TMP("LEXXGPMSG",$J,+LEXN)=$G(LEXT),^TMP("LEXXGPMSG",$J,0)=LEXN
"RTN","LEXXGP2",188,0)
 D:$O(^TMP("LEXXGPMSG",$J,0))>0 XMS
"RTN","LEXXGP2",189,0)
 Q
"RTN","LEXXGP2",190,0)
XMG ;   Get Data for Message
"RTN","LEXXGP2",191,0)
 K ^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP2",192,0)
 N LEXO1,LEXTXT,LEXLN,LEXPDT S LEXPDT="",(LEXLN,LEXO1)=0
"RTN","LEXXGP2",193,0)
 F  S LEXO1=$O(^TMP("LEXXGPDAT",$J,LEXO1)) Q:+LEXO1'>0  D
"RTN","LEXXGP2",194,0)
 . N LEXO2 S LEXO2="" F  S LEXO2=$O(^TMP("LEXXGPDAT",$J,LEXO1,LEXO2)) Q:+LEXO2'>0  D
"RTN","LEXXGP2",195,0)
 . . N LEXN,LEXBEG,LEXBEGD,LEXDF,LEXBEGT,LEXEND,LEXENDD,LEXENDT,LEXTXT
"RTN","LEXXGP2",196,0)
 . . N LEXCOM,LEXHDR,LEXELPT
"RTN","LEXXGP2",197,0)
 . . S LEXNOD=$G(^TMP("LEXXGPDAT",$J,LEXO1,LEXO2)),LEXLN=LEXLN+1
"RTN","LEXXGP2",198,0)
 . . S LEXBEG=$P(LEXNOD,"^",1),LEXD=$P(LEXBEG,".",1),LEXCOM=$P(LEXNOD,"^",8)
"RTN","LEXXGP2",199,0)
 . . I $L(LEXBEG),LEXD?7N,$L(LEXCOM) D  Q
"RTN","LEXXGP2",200,0)
 . . . N LEXN S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP2",201,0)
 . . . S ^TMP("LEXXGPRPT",$J,+LEXN)="   "_LEXCOM
"RTN","LEXXGP2",202,0)
 . . S LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",203,0)
 . . S LEXEND=$P(LEXNOD,"^",2)
"RTN","LEXXGP2",204,0)
 . . S LEXBEGD=$P(LEXNOD,"^",3)
"RTN","LEXXGP2",205,0)
 . . S LEXBEGT=$P(LEXNOD,"^",4)
"RTN","LEXXGP2",206,0)
 . . S LEXENDT=$P(LEXNOD,"^",5)
"RTN","LEXXGP2",207,0)
 . . S LEXELPT=$P(LEXNOD,"^",6)
"RTN","LEXXGP2",208,0)
 . . S LEXTXT=$P(LEXNOD,"^",7)
"RTN","LEXXGP2",209,0)
 . . S:LEXBEGD=LEXPDT&($L(LEXDF))&(LEXD'["-") LEXBEGD=LEXDF
"RTN","LEXXGP2",210,0)
 . . S LEXPDT=$G(LEXBEGD)
"RTN","LEXXGP2",211,0)
 . . S LEXTXT=$$FMT^LEXXGP1($G(LEXTXT),LEXBEGD,LEXBEGT,LEXENDT,LEXELPT)
"RTN","LEXXGP2",212,0)
 . . I '$D(^TMP("LEXXGPRPT",$J)) D
"RTN","LEXXGP2",213,0)
 . . . S ^TMP("LEXXGPRPT",$J,0)=1,^TMP("LEXXGPRPT",$J,1)="  "
"RTN","LEXXGP2",214,0)
 . . . N LEXHDR S LEXHDR="Re-Index Repair"
"RTN","LEXXGP2",215,0)
 . . . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"Date      "_"   "_"Start   "_"   "_"Finish  "_"   "_"Elapsed "
"RTN","LEXXGP2",216,0)
 . . . S LEXHDR=" "_LEXHDR S ^TMP("LEXXGPRPT",$J,0)=2,^TMP("LEXXGPRPT",$J,2)=LEXHDR
"RTN","LEXXGP2",217,0)
 . . . S LEXHDR="---------------------------------"
"RTN","LEXXGP2",218,0)
 . . . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"----------"_"   "_"--------"_"   "_"--------"_"   "_"--------"
"RTN","LEXXGP2",219,0)
 . . . S LEXHDR=" "_LEXHDR S ^TMP("LEXXGPRPT",$J,0)=3,^TMP("LEXXGPRPT",$J,3)=LEXHDR
"RTN","LEXXGP2",220,0)
 . . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP2",221,0)
 . . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXTXT
"RTN","LEXXGP2",222,0)
 S LEXTXT=$$FMTT^LEXXGP1 I $L(LEXTXT) D
"RTN","LEXXGP2",223,0)
 . N LEXN,LEXHDR
"RTN","LEXXGP2",224,0)
 . S LEXHDR="---------------------------------"
"RTN","LEXXGP2",225,0)
 . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"----------"_"   "_"--------"_"   "_"--------"_"   "_"--------"
"RTN","LEXXGP2",226,0)
 . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP2",227,0)
 . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXHDR
"RTN","LEXXGP2",228,0)
 . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP2",229,0)
 . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXTXT
"RTN","LEXXGP2",230,0)
 Q
"RTN","LEXXGP2",231,0)
XMGS ;   Show Message
"RTN","LEXXGP2",232,0)
 W:$O(^TMP("LEXXGPRPT",$J,0))>0 !
"RTN","LEXXGP2",233,0)
 N LEXC S LEXC=0 F  S LEXC=$O(^TMP("LEXXGPRPT",$J,LEXC)) Q:+LEXC'>0  D
"RTN","LEXXGP2",234,0)
 . N LEXT S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXC)) W:$L(LEXT) !,LEXT
"RTN","LEXXGP2",235,0)
 W:$O(^TMP("LEXXGPRPT",$J,0))>0 !!
"RTN","LEXXGP2",236,0)
 Q
"RTN","LEXXGP2",237,0)
XMB ;   Build Message
"RTN","LEXXGP2",238,0)
 K ^TMP("LEXXGPMSG") N LEXI S LEXI=0
"RTN","LEXXGP2",239,0)
 F  S LEXI=$O(^TMP("LEXXGPRPT",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXGP2",240,0)
 . N LEXN,LEXT S LEXN=$O(^TMP("LEXXGPMSG",$J," "),-1)+1
"RTN","LEXXGP2",241,0)
 . S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXI))
"RTN","LEXXGP2",242,0)
 . S ^TMP("LEXXGPMSG",$J,+LEXN)=$G(LEXT),^TMP("LEXXGPMSG",$J,0)=LEXN
"RTN","LEXXGP2",243,0)
 Q
"RTN","LEXXGP2",244,0)
XMS ;   Send Message
"RTN","LEXXGP2",245,0)
 N XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXJ,LEXNM
"RTN","LEXXGP2",246,0)
 Q:'$D(^TMP("LEXXGPMSG",$J))
"RTN","LEXXGP2",247,0)
 S XMTEXT="^TMP(""LEXXGPMSG"","_$J_",",XMSUB="Repair Major Word Indexes"
"RTN","LEXXGP2",248,0)
 S LEXNM=$$GET1^DIQ(200,+($G(DUZ)),.01) S:$D(LEXHOME) XMY(("G.LEXINS@"_$$XMA))=""
"RTN","LEXXGP2",249,0)
 S XMY(LEXNM)="",XMDUZ=.5 D ^XMD
"RTN","LEXXGP2",250,0)
 I '$D(ZTQUEUED),+($G(XMZ))>0 D
"RTN","LEXXGP2",251,0)
 . W !!," Lexicon Index Repair Message #",($G(XMZ))," sent"
"RTN","LEXXGP2",252,0)
XMSQ ;   Send Message (Quit)
"RTN","LEXXGP2",253,0)
 K ^TMP("LEXXGPMSG",$J) K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXNM
"RTN","LEXXGP2",254,0)
 Q
"RTN","LEXXGP2",255,0)
XMA(LEX) ;   Message Address
"RTN","LEXXGP2",256,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGP2",257,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC.DOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGP2",258,0)
 Q "ISC.DOMAIN.EXT"
"RTN","LEXXGP2",259,0)
SSF ; Subsets (Fileman)
"RTN","LEXXGP2",260,0)
 N LEX F LEX="AADM","AASS","AATT","ABDS","ACLF","ACLL","ACLS","ACON","ADEN","ADIS","AENL","AENV","AETH","AEVE","AFND","AFOR" K ^LEX(757.21,LEX)
"RTN","LEXXGP2",261,0)
 F LEX="AGEO","AIMM","AINA","ALIF","AMAB","ANAM","ANAV","ANUR","AOBJ","AOBS","AOCC","AORG","APER","APLS","APRC","APRD" K ^LEX(757.21,LEX)
"RTN","LEXXGP2",262,0)
 F LEX="AQUV","AREC","AREG","AREL","ASCH","ASCT","ASIT","ASOC","ASPC","ASPL","ASTG","ASUB","ATMR","B","C" K ^LEX(757.21,LEX)
"RTN","LEXXGP2",263,0)
 N DIK,ZTQUEUED S ZTQUEUED="" S DIK="^LEX(757.21," D IXALL^DIK
"RTN","LEXXGP2",264,0)
 Q
"RTN","LEXXGP2",265,0)
 ; Miscellaneous
"RTN","LEXXGP2",266,0)
SAV(LEXBEG,LEXEND,LEXTXT,LEXCOM) ; Save Dates, Times and Text
"RTN","LEXXGP2",267,0)
 N LEXTMP,LEXBEGD,LEXBEGT,LEXENDD,LEXENDT,LEXP,LEXD,LEXC,LEXN,LEXELP
"RTN","LEXXGP2",268,0)
 S LEXBEG=$G(LEXBEG),LEXCOM=$G(LEXCOM)
"RTN","LEXXGP2",269,0)
 S LEXD=$P(LEXBEG,".",1) Q:LEXD'?7N
"RTN","LEXXGP2",270,0)
 I $L(LEXD),$L(LEXBEG),$L(LEXCOM) D  Q
"RTN","LEXXGP2",271,0)
 . N LEXN S LEXN=$O(^TMP("LEXXGPDAT",$J,LEXD," "),-1)+1
"RTN","LEXXGP2",272,0)
 . S ^TMP("LEXXGPDAT",$J,LEXD,+LEXN)=LEXBEG_"^^^^^^^"_LEXCOM
"RTN","LEXXGP2",273,0)
 S LEXEND=$G(LEXEND),LEXTXT=$G(LEXTXT)
"RTN","LEXXGP2",274,0)
 Q:$P(LEXEND,".",1)'?7N  Q:'$L(LEXTXT)
"RTN","LEXXGP2",275,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",276,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND)
"RTN","LEXXGP2",277,0)
 S LEXBEGD=$$DF^LEXXGP1(LEXBEG),LEXN=$O(^TMP("LEXXGPDAT",$J,LEXD," "),-1)+1
"RTN","LEXXGP2",278,0)
 S LEXTMP=LEXBEG_"^"_LEXEND_"^"_LEXBEGD_"^"_LEXBEGT_"^"_LEXENDT
"RTN","LEXXGP2",279,0)
 S LEXTMP=LEXTMP_"^"_LEXELP_"^"_LEXTXT
"RTN","LEXXGP2",280,0)
 S ^TMP("LEXXGPDAT",$J,LEXD,+LEXN)=LEXTMP
"RTN","LEXXGP2",281,0)
 Q
"RTN","LEXXII")
0^208^B41394926
"RTN","LEXXII",1,0)
LEXXII ;ISL/KER - Lexicon Status (Install Info) ;04/21/2014
"RTN","LEXXII",2,0)
 ;;2.0;LEXICON UTILITY;**32,46,49,50,41,59,73,80**;Sep 23, 1996;Build 1
"RTN","LEXXII",3,0)
 ;               
"RTN","LEXXII",4,0)
 ; Global Variables
"RTN","LEXXII",5,0)
 ;    ^%ZOSF("UCI")       ICR  10096
"RTN","LEXXII",6,0)
 ;    ^LEXM(0)            N/A
"RTN","LEXXII",7,0)
 ;    ^TMP("LEX*",$J)     SACC 2.3.2.5.1
"RTN","LEXXII",8,0)
 ;    ^TMP("LEX*",$J)     SACC 2.3.2.5.1
"RTN","LEXXII",9,0)
 ;    ^VA(200)            ICR  10060
"RTN","LEXXII",10,0)
 ;               
"RTN","LEXXII",11,0)
 ; External References
"RTN","LEXXII",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXII",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXII",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXII",15,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXII",16,0)
 ;    FIND^DIC            ICR   2051
"RTN","LEXXII",17,0)
 ;    GETS^DIQ            ICR   2056
"RTN","LEXXII",18,0)
 ;    $$PROD^XUPROD       ICR   4440
"RTN","LEXXII",19,0)
 ;              
"RTN","LEXXII",20,0)
 ; Variables NEWed or KILLed Elsewhere
"RTN","LEXXII",21,0)
 ;   LEXACCT  NEWed by LEXXFI sending message
"RTN","LEXXII",22,0)
 ;   LEXID    NEWed by LEXXFI sending message
"RTN","LEXXII",23,0)
 ;   LEXCRE   NEWed by LEXXGI loading data
"RTN","LEXXII",24,0)
 ;   LEXIGHF  NEWed by Post Install routine LEX20nnP
"RTN","LEXXII",25,0)
 ;   XPDA     NEWed by KIDS during Install
"RTN","LEXXII",26,0)
 ;              
"RTN","LEXXII",27,0)
EN ; Main Entry
"RTN","LEXXII",28,0)
 N LEXSUB S LEXSUB=$G(LEXID) S:LEXSUB="" LEXSUB="LEXXII" K ^TMP(LEXSUB,$J) D II
"RTN","LEXXII",29,0)
 Q
"RTN","LEXXII",30,0)
 ;                               
"RTN","LEXXII",31,0)
II ; Install Information
"RTN","LEXXII",32,0)
 N LEXT,LEXA,LEXACT,LEXB,LEXD,LEXE,LEXL,LEXU,LEXN,LEXP,LEXPROF,LEXDA H 2
"RTN","LEXXII",33,0)
 S LEXA="",LEXACT=$G(LEXACCT),LEXPRO=$G(LEXPRO),LEXPRON=$G(LEXPRON)
"RTN","LEXXII",34,0)
 S:'$L(LEXPRON) LEXPRON="LEXICAL SERVICES UPDATE" S:'$L(LEXPRO) LEXPRO=$G(^LEXM(0,"PRO")) S:+LEXPRO>0 LEXPRO=$$ED(LEXPRO)
"RTN","LEXXII",35,0)
 I $L($G(LEXSUBH)) D
"RTN","LEXXII",36,0)
 . N LEXL S LEXT=$G(LEXSUBH),$P(LEXL,"=",$L(LEXT))="=" D TL(LEXT),TL(LEXL),BL
"RTN","LEXXII",37,0)
 I '$L($G(LEXSUBH)) D
"RTN","LEXXII",38,0)
 . S LEXT="Lexicon/ICD/CPT Installation" D TL(LEXT)
"RTN","LEXXII",39,0)
 . S LEXT="============================" D TL(LEXT),BL
"RTN","LEXXII",40,0)
 S LEXD=$$ASOF,LEXA=$$UCI,LEXU=$$USR,LEXN=$P(LEXU,"^",1)
"RTN","LEXXII",41,0)
 S:$L($P(LEXACT,"^",1))&($L($P(LEXACT,"^",1))) LEXA=LEXACT
"RTN","LEXXII",42,0)
 S LEXP=$P(LEXU,"^",2),LEXN=$$PM^LEXXFI7(LEXN)
"RTN","LEXXII",43,0)
 S:$L(LEXD) LEXT="  As of:       "_LEXD
"RTN","LEXXII",44,0)
 D:$L(LEXD) TL(LEXT)
"RTN","LEXXII",45,0)
 S LEXT="" S:$L(LEXA) LEXT="  In Account:  "_$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXII",46,0)
 S:$L(LEXT)&($L($P(LEXA,"^",2))) LEXT=LEXT_"  "_$P(LEXA,"^",2)
"RTN","LEXXII",47,0)
 D:$L(LEXA) TL(LEXT)
"RTN","LEXXII",48,0)
 S LEXT="" S:$L(LEXU) LEXT="  Maint By:    "
"RTN","LEXXII",49,0)
 S:$L(LEXN) LEXT=LEXT_LEXN
"RTN","LEXXII",50,0)
 S:$L(LEXP)&($L(LEXN)) LEXT=LEXT_"   "_LEXP
"RTN","LEXXII",51,0)
 D:$L(LEXT)&(LEXT'["UNKNOWN") TL(LEXT)
"RTN","LEXXII",52,0)
 S LEXT="" S:$L($G(LEXBUILD)) LEXT="  Build:       "_$G(LEXBUILD)
"RTN","LEXXII",53,0)
 D:$L(LEXT) TL(LEXT)
"RTN","LEXXII",54,0)
 S LEXT="" S:$L($G(LEXIGHF)) LEXT="  Host File:   "_$G(LEXIGHF)
"RTN","LEXXII",55,0)
 S:$L(LEXT)&($L($G(LEXCRE)))&($P($G(LEXCRE),".",1)?7N) LEXT=LEXT_" (Created "_$$ED($G(LEXCRE))_")"
"RTN","LEXXII",56,0)
 S:'$L(LEXT)&($L($G(LEXCRE)))&($P($G(LEXCRE),".",1)?7N) LEXT="  Created:     "_$$ED($G(LEXCRE))
"RTN","LEXXII",57,0)
 D:$L(LEXT) TL(LEXT)
"RTN","LEXXII",58,0)
 S LEXT="" I $O(LEXPROC(" "),-1)'>1,$L($G(LEXPRO))&($L($G(LEXPRON))),$O(LEXPROC(" "),-1)'>1 D
"RTN","LEXXII",59,0)
 . S LEXT="  Protocol:    "_LEXPRON D BL,TL(LEXT)
"RTN","LEXXII",60,0)
 . S LEXT="  Invoked:     "_LEXPRO D TL(LEXT)
"RTN","LEXXII",61,0)
 . K LEXPRO,LEXPRON,^LEXM(0,"PRO")
"RTN","LEXXII",62,0)
 I $O(LEXPROC(" "),-1)>1 D
"RTN","LEXXII",63,0)
 . N LEXT,LEXI,LEXC,LEXT S LEXT=$$TRIM($G(LEXPROC(1))) Q:'$L(LEXT)  D BL,TL(("  "_LEXT))
"RTN","LEXXII",64,0)
 . S LEXC=0,LEXI=1 F  S LEXI=$O(LEXPROC(LEXI)) Q:+LEXI'>0  D
"RTN","LEXXII",65,0)
 . . N LEXT S LEXT=$$TRIM($TR($G(LEXPROC(LEXI)),"'","")) Q:'$L(LEXT)  S LEXC=LEXC+1 D TL(("     "_LEXT))
"RTN","LEXXII",66,0)
 S LEXB=$$SS($G(LEXBUILD)),LEXE=$P(LEXB,"^",2),LEXL=$P(LEXB,"^",3),LEXB=$P(LEXB,"^",1)
"RTN","LEXXII",67,0)
 I $P(LEXB,".",1)?7N!($P(LEXB,".",2)?7N)!($P(LEXB,".",3)[":") D
"RTN","LEXXII",68,0)
 . D BL
"RTN","LEXXII",69,0)
 . I $P(LEXB,".",1)?7N D
"RTN","LEXXII",70,0)
 . . S LEXT="" S LEXT="  Started:     "_$$ED($G(LEXB)) D TL(LEXT)
"RTN","LEXXII",71,0)
 . I $P(LEXE,".",1)?7N D
"RTN","LEXXII",72,0)
 . . S LEXT="" S LEXT="  Finished:    "_$$ED($G(LEXE)) D TL(LEXT)
"RTN","LEXXII",73,0)
 . I $L(LEXL) D
"RTN","LEXXII",74,0)
 . . S LEXT="" S LEXT="  Elapsed:     "_$$ED($G(LEXL)) D TL(LEXT)
"RTN","LEXXII",75,0)
 I $L($G(LEXRES)) D
"RTN","LEXXII",76,0)
 . S LEXT="" S LEXT="  Data:        "_$G(LEXRES) D BL,TL(LEXT)
"RTN","LEXXII",77,0)
 D BL
"RTN","LEXXII",78,0)
 Q
"RTN","LEXXII",79,0)
 ;                             
"RTN","LEXXII",80,0)
 ; Miscellaneous
"RTN","LEXXII",81,0)
UCI(X) ;   UCI where Lexicon is installed
"RTN","LEXXII",82,0)
 N LEXU,LEXP,LEXT,Y X ^%ZOSF("UCI") S LEXU=Y,LEXP=""
"RTN","LEXXII",83,0)
 S LEXP=$S($$PROD^XUPROD(1):" (Production)",1:" (Test)")
"RTN","LEXXII",84,0)
 S:LEXU[","&($L($P(LEXU,",",1))>3) LEXU=$P(LEXU,",",1)
"RTN","LEXXII",85,0)
 S X="",$P(X,"^",1)=LEXU,$P(X,"^",2)=LEXP
"RTN","LEXXII",86,0)
 Q X
"RTN","LEXXII",87,0)
USR(LEX) ;   User/Person
"RTN","LEXXII",88,0)
 N LEXDUZ,LEXPH,LEXNM
"RTN","LEXXII",89,0)
 S LEX=+($G(DUZ)),LEXNM=$$GET1^DIQ(200,+LEX,.01) Q:'$L(LEXNM) "UNKNOWN^"
"RTN","LEXXII",90,0)
 S LEXDUZ=LEX S LEXPH=$$GET1^DIQ(200,+LEXDUZ,.132) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.131)
"RTN","LEXXII",91,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.133) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.134)
"RTN","LEXXII",92,0)
 S LEXDUZ=$$GET1^DIQ(200,+LEX,.01),LEX=LEXDUZ_"^"_LEXPH Q LEX
"RTN","LEXXII",93,0)
SS(LEX) ;   Start/Stop Times
"RTN","LEXXII",94,0)
 N LEXDA,LEXOUT,LEXIENS,LEXB,LEXBUILD,LEXB,LEXE,LEXL
"RTN","LEXXII",95,0)
 S LEXBUILD=$G(LEX),LEXD=0 S:$L(LEXBUILD) LEXD=$$DDA(LEXBUILD)
"RTN","LEXXII",96,0)
 S LEXDA=+($G(XPDA))
"RTN","LEXXII",97,0)
 I +LEXDA>0 D
"RTN","LEXXII",98,0)
 . S LEXIENS=LEXDA_"," D GETS^DIQ(9.7,LEXIENS,"11;17","I","LEXOUT")
"RTN","LEXXII",99,0)
 . S LEXL=0,LEXB=$G(LEXOUT(9.7,LEXIENS,11,"I"))
"RTN","LEXXII",100,0)
 . S:$L($G(LEXSTART))&($P($G(LEXSTART),".",1)?7N) LEXB=$G(LEXSTART)
"RTN","LEXXII",101,0)
 . S LEXE=$$NOW^XLFDT S:+LEXB>0&(+LEXE>0) LEXL=$$EP(LEXB,LEXE)
"RTN","LEXXII",102,0)
 . S LEX=LEXB_"^"_LEXE S:$L(LEXL) $P(LEX,"^",3)=LEXL
"RTN","LEXXII",103,0)
 I +LEXDA=0 D
"RTN","LEXXII",104,0)
 . S LEX="" S LEXDA=+($G(LEXD)) S LEXL="",LEXB=$P($G(LEXD),"^",2)
"RTN","LEXXII",105,0)
 . S:$L($G(LEXSTART))&($P($G(LEXSTART),".",1)?7N) LEXB=$G(LEXSTART)
"RTN","LEXXII",106,0)
 . S LEXE=$$NOW^XLFDT S:+LEXB>0&(+LEXE>0) LEXL=$$EP(LEXB,LEXE)
"RTN","LEXXII",107,0)
 . S LEX=LEXB_"^"_LEXE S:$L(LEXL) $P(LEX,"^",3)=LEXL
"RTN","LEXXII",108,0)
 Q LEX
"RTN","LEXXII",109,0)
DDA(LEX) ;   Get Default DA of Build LEX
"RTN","LEXXII",110,0)
 N LEXB,LEXE,LEXOUT,LEXMSG,LEXI S LEXB=$G(LEX) Q:'$L(LEXB) ""
"RTN","LEXXII",111,0)
 D FIND^DIC(9.7,,"11I;17I","BP",LEXB,,"B",,,"LEXOUT","LEXMSG")
"RTN","LEXXII",112,0)
 S LEXI=+($O(LEXOUT("DILIST"," "),-1))
"RTN","LEXXII",113,0)
 S LEXB=$G(LEXOUT("DILIST",+LEXI,0))
"RTN","LEXXII",114,0)
 S LEXI=$P(LEXB,"^",1),LEXE=$P(LEXB,"^",4),LEXB=$P(LEXB,"^",3)
"RTN","LEXXII",115,0)
 Q:+($G(LEXI))'>0 ""  Q:+($G(LEXB))'>0 ""  S:+LEXE'>0 LEXE=$$NOW^XLFDT
"RTN","LEXXII",116,0)
 S LEX=LEXI_"^"_LEXB_"^"_LEXE
"RTN","LEXXII",117,0)
 Q LEX
"RTN","LEXXII",118,0)
ASOF(LEX) ;   As of date/time
"RTN","LEXXII",119,0)
 S X=$$ED($$NOW^XLFDT) Q X
"RTN","LEXXII",120,0)
ED(LEX) ;   External Date MM/DD/YYYY TT:TT
"RTN","LEXXII",121,0)
 S LEX=$$FMTE^XLFDT($G(LEX),"1Z")
"RTN","LEXXII",122,0)
 S:LEX["@" LEX=$P(LEX,"@",1)_"  "_$P(LEX,"@",2,299) Q LEX
"RTN","LEXXII",123,0)
 Q LEX
"RTN","LEXXII",124,0)
EP(X,Y) ;   Elapsed Time (Begin, End)
"RTN","LEXXII",125,0)
 N LEXTIM,LEXBEG,LEXEND
"RTN","LEXXII",126,0)
 S LEXBEG=$G(X),LEXEND=$G(Y) Q:+LEXBEG'>0 ""  Q:+LEXEND'>0 ""
"RTN","LEXXII",127,0)
 S LEXTIM=$$FMDIFF^XLFDT(LEXEND,LEXBEG,2) Q:+LEXTIM'>0 "00:00:00"
"RTN","LEXXII",128,0)
 S LEXTIM=$$TIM(LEXTIM)
"RTN","LEXXII",129,0)
 Q LEXTIM
"RTN","LEXXII",130,0)
TIM(X) ;   Format Time Elapsed
"RTN","LEXXII",131,0)
 N LEXD,LEXH,LEXM,LEXS,LEXT,LEXV S X=+($G(X)) Q:X'>0 "00:00:00"
"RTN","LEXXII",132,0)
 S LEXD=X\86400 S LEXV=LEXD*86400 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",133,0)
 S LEXH=X\3600 S LEXV=LEXH*3600 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",134,0)
 S:$L(LEXH)<2 LEXH="0"_LEXH S:$L(LEXH)<2 LEXH="0"_LEXH
"RTN","LEXXII",135,0)
 S LEXM=X\60 S LEXV=LEXM*60 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",136,0)
 S:$L(LEXM)<2 LEXM="0"_LEXM S:$L(LEXM)<2 LEXM="0"_LEXM
"RTN","LEXXII",137,0)
 S LEXS=X S:$L(LEXS)<2 LEXS="0"_LEXS S:$L(LEXS)<2 LEXS="0"_LEXS
"RTN","LEXXII",138,0)
 S LEXT="" S:+LEXD>0 LEXT=+LEXD_" day"_$S(+LEXD>1:"s",1:"")_" "
"RTN","LEXXII",139,0)
 S LEXT=LEXT_LEXH_":"_LEXM_":"_LEXS,X=LEXT
"RTN","LEXXII",140,0)
 Q X
"RTN","LEXXII",141,0)
BL ;   Blank Line
"RTN","LEXXII",142,0)
 D TL("") Q
"RTN","LEXXII",143,0)
TL(LEXX) ;   Text Line
"RTN","LEXXII",144,0)
 S LEXSUB=$G(LEXSUB) S:'$L(LEXSUB) LEXSUB="LEXXII"
"RTN","LEXXII",145,0)
 I '$D(^TMP(LEXSUB,$J,1)) S ^TMP(LEXSUB,$J,1)=" ",^TMP(LEXSUB,$J,0)=1
"RTN","LEXXII",146,0)
 N LEXNX S LEXNX=$O(^TMP(LEXSUB,$J," "),-1),LEXNX=LEXNX+1
"RTN","LEXXII",147,0)
 S ^TMP(LEXSUB,$J,LEXNX)=" "_$G(LEXX),^TMP(LEXSUB,$J,0)=LEXNX
"RTN","LEXXII",148,0)
 Q
"RTN","LEXXII",149,0)
ST ;   Show Temp Array
"RTN","LEXXII",150,0)
 S LEXSUB=$G(LEXSUB) S:'$L(LEXSUB) LEXSUB="LEXXII"
"RTN","LEXXII",151,0)
 N LEXN,LEXC S LEXN="^TMP("""_LEXSUB_""","_$J_")",LEXC="^TMP("""_LEXSUB_""","_$J_","
"RTN","LEXXII",152,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEXXII",153,0)
 . Q:LEXN[",0)"  W !,@LEXN
"RTN","LEXXII",154,0)
 Q
"RTN","LEXXII",155,0)
TRIM(X) ;   Trim Spaces
"RTN","LEXXII",156,0)
 S X=$G(X) Q:X="" X F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXII",157,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXII",158,0)
 Q X
"RTN","LEXXII2")
0^209^B32320657
"RTN","LEXXII2",1,0)
LEXXII2 ;ISL/KER - Lexicon Status (Data Status) ;04/21/2014
"RTN","LEXXII2",2,0)
 ;;2.0;LEXICON UTILITY;**59,80**;Sep 23, 1996;Build 1
"RTN","LEXXII2",3,0)
 ;               
"RTN","LEXXII2",4,0)
 ; Global Variables
"RTN","LEXXII2",5,0)
 ;    ^LEXM(              N/A
"RTN","LEXXII2",6,0)
 ;    ^LEXM(0)            N/A
"RTN","LEXXII2",7,0)
 ;    ^TMP("LEXVER")      SACC 2.3.2.5.1
"RTN","LEXXII2",8,0)
 ;               
"RTN","LEXXII2",9,0)
 ; External References
"RTN","LEXXII2",10,0)
 ;    ^DIM                ICR  10016
"RTN","LEXXII2",11,0)
 ;               
"RTN","LEXXII2",12,0)
 ; Variables NEWed or KILLed Elsewhere
"RTN","LEXXII2",13,0)
 ;   LEXSUB  NEWed by LEXXII and LEXXFI sending message
"RTN","LEXXII2",14,0)
 ;               
"RTN","LEXXII2",15,0)
 Q
"RTN","LEXXII2",16,0)
RESULTS(X) ; Get Results of Install
"RTN","LEXXII2",17,0)
 D SETUP^LEXXII2 N LEXR S LEXR=$$CHK S X="" S:$L($P(LEXR,"^",2)) X=$P(LEXR,"^",2) K ^TMP("LEXVER",$J)
"RTN","LEXXII2",18,0)
 Q X
"RTN","LEXXII2",19,0)
SETUP ; Last Set/Kills (Negation)
"RTN","LEXXII2",20,0)
 Q:'$D(^LEXM)  Q:+($O(^LEXM(0)))'>0  K ^TMP("LEXVER",$J) N LEXC1,LEXC2,LEXCK,LEXCS,LEXCT,LEXEC,LEXFI,LEXIEN,LEXKK,LEXLK,LEXLS,LEXOK,LEXSAB,LEXSK,LEXSS,LEXT,LEXTT,X
"RTN","LEXXII2",21,0)
 S LEXFI=9999.999 F  S LEXFI=$O(^LEXM(LEXFI),-1) Q:+LEXFI=0  D LLF(LEXFI)
"RTN","LEXXII2",22,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI'>0  D FIR(LEXFI) Q:$L($G(LEXSK("FIR","SK")))
"RTN","LEXXII2",23,0)
 D VERC
"RTN","LEXXII2",24,0)
 Q
"RTN","LEXXII2",25,0)
LLF(X) ;   Last Set/Last Kill for File X
"RTN","LEXXII2",26,0)
 N LEXFI,LEXIEN,LEXLK,LEXLS,LEXSAB S LEXFI=$G(X),(LEXLS,LEXLK)="" Q:$O(^LEXM(LEXFI,0))'>0
"RTN","LEXXII2",27,0)
 S LEXSAB=$S(+($G(LEXFI))=80:"ICD",+($G(LEXFI))=80.1:"ICP",+($G(LEXFI))=81:"CPT",+($G(LEXFI))=81.3:"CPM",$E(+($G(LEXFI)),1,3)="757"&($E(+($G(LEXFI)),1,5)'="757.9"):"LEX",1:"")
"RTN","LEXXII2",28,0)
 Q:'$L(LEXSAB)  Q:$L($G(LEXSK(LEXSAB,"LS")))&($L($G(LEXSK(LEXSAB,"LK"))))  S LEXIEN=+($O(^LEXM(LEXFI," "),-1))+1
"RTN","LEXXII2",29,0)
 F  S LEXIEN=$O(^LEXM(LEXFI,LEXIEN),-1) Q:+LEXIEN=0  D  Q:$L(LEXLS)&($L(LEXLK))
"RTN","LEXXII2",30,0)
 . Q:$G(^LEXM(LEXFI,LEXIEN))["^DD("  Q:+LEXIEN=0
"RTN","LEXXII2",31,0)
 . I $E($G(^LEXM(LEXFI,LEXIEN)),1,3)="S ^",'$L(LEXLS),'$L($G(LEXSK(LEXSAB,"LS"))) D
"RTN","LEXXII2",32,0)
 . . S LEXLS=$G(^LEXM(LEXFI,LEXIEN)) S:'$D(LEXSK(LEXSAB,"LS")) LEXSK(LEXSAB,"LS")=$G(^LEXM(LEXFI,LEXIEN))
"RTN","LEXXII2",33,0)
 . I $E($G(^LEXM(LEXFI,LEXIEN)),1,3)="K ^",'$L(LEXLK),'$L($G(LEXSK(LEXSAB,"LK"))) D
"RTN","LEXXII2",34,0)
 . . S LEXLK=$G(^LEXM(LEXFI,LEXIEN)) S:'$D(LEXSK(LEXSAB,"LK")) LEXSK(LEXSAB,"LK")=$G(^LEXM(LEXFI,LEXIEN))
"RTN","LEXXII2",35,0)
 Q
"RTN","LEXXII2",36,0)
FIR(X) ;   First Set/Kill
"RTN","LEXXII2",37,0)
 N LEXFI,LEXIEN,LEXLK,LEXLS,LEXSAB S LEXFI=$G(X),(LEXLS,LEXLK)="" Q:$O(^LEXM(LEXFI,0))'>0  S LEXSAB="FIR"
"RTN","LEXXII2",38,0)
 Q:$L($G(LEXSK(LEXSAB,"SK")))  S LEXIEN=0 F  S LEXIEN=$O(^LEXM(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D  Q:$L($G(LEXSK(LEXSAB,"SK")))
"RTN","LEXXII2",39,0)
 . Q:$L($G(LEXSK(LEXSAB,"SK")))  Q:$G(^LEXM(LEXFI,LEXIEN))["^DD("
"RTN","LEXXII2",40,0)
 . I $E($G(^LEXM(LEXFI,LEXIEN)),1,3)="S ^" S:'$D(LEXSK(LEXSAB,"SK")) LEXSK(LEXSAB,"SK")=$G(^LEXM(LEXFI,LEXIEN)) Q
"RTN","LEXXII2",41,0)
 . I $E($G(^LEXM(LEXFI,LEXIEN)),1,3)="K ^" S:'$D(LEXSK(LEXSAB,"SK")) LEXSK(LEXSAB,"SK")=$G(^LEXM(LEXFI,LEXIEN)) Q
"RTN","LEXXII2",42,0)
 Q
"RTN","LEXXII2",43,0)
VERC ;   Verification Check for file
"RTN","LEXXII2",44,0)
 N LEXCK,LEXCS,LEXCT,LEXKK,LEXSS,LEXTT,LEXSAB
"RTN","LEXXII2",45,0)
 N LEXSAB F LEXSAB="LEX","ICD","CPT","CPM","FIR" D
"RTN","LEXXII2",46,0)
 . S (LEXCS,LEXCK,LEXCT)="" S LEXSS=$G(LEXSK(LEXSAB,"LS")),LEXCS=$P(LEXSS,"=",1),LEXCS=$P(LEXCS," ",2,299)
"RTN","LEXXII2",47,0)
 . S LEXKK=$G(LEXSK(LEXSAB,"LK")),LEXCK=$P(LEXKK,"=",1),LEXCK=$P(LEXCK," ",2,299)
"RTN","LEXXII2",48,0)
 . S LEXTT=$G(LEXSK(LEXSAB,"SK")),LEXCT=$P(LEXTT,"=",1),LEXCT=$P(LEXCT," ",2,299)
"RTN","LEXXII2",49,0)
 . D:$L(LEXCS)!($L(LEXCK))!($L(LEXCT)) VERS
"RTN","LEXXII2",50,0)
 Q
"RTN","LEXXII2",51,0)
VERS ;   Verification Strings
"RTN","LEXXII2",52,0)
 Q:'$L(LEXSAB)  I $G(LEXSAB)="FIR" D  Q
"RTN","LEXXII2",53,0)
 . Q:'$L($G(LEXTT))  Q:'$L($G(LEXCT))  S (LEXC1,LEXC2)=""  I $E(LEXTT,1,3)="S ^",LEXTT[LEXCT D
"RTN","LEXXII2",54,0)
 . . S LEXC1="S:"_"$D("_LEXCT_")"_" LEXOK(""FIR"",1)=1" S X=LEXC1 D ^DIM S:'$D(X) LEXC1=""
"RTN","LEXXII2",55,0)
 . . S LEXC2="S:"_"'$D("_LEXCT_")"_" LEXOK(""FIR"",1)=0" S X=LEXC2 D ^DIM S:'$D(X) LEXC2=""
"RTN","LEXXII2",56,0)
 . I $E(LEXTT,1,3)="K ^",LEXTT[LEXCT D
"RTN","LEXXII2",57,0)
 . . S LEXC1="S:"_"'$D("_LEXCT_")"_" LEXOK(""FIR"",1)=1" S X=LEXC1 D ^DIM S:'$D(X) LEXC1=""
"RTN","LEXXII2",58,0)
 . . S LEXC2="S:"_"$D("_LEXCT_")"_" LEXOK(""FIR"")1)=0" S X=LEXC2 D ^DIM S:'$D(X) LEXC2=""
"RTN","LEXXII2",59,0)
 . S:$L(LEXSAB)&($L(LEXC1)) ^TMP("LEXVER",$J,LEXSAB,1)=LEXC1 S:$L(LEXSAB)&($L(LEXC2)) ^TMP("LEXVER",$J,LEXSAB,2)=LEXC2
"RTN","LEXXII2",60,0)
 N LEXC1,LEXC2 S (LEXC1,LEXC2)=""  S:$L(LEXCS) LEXC1="$D("_LEXCS_")" S:$L(LEXCK) LEXC2="'$D("_LEXCK_")" Q:'$L(LEXC1)&('$L(LEXC2))
"RTN","LEXXII2",61,0)
 I $L(LEXCS)&($L(LEXCK)) D
"RTN","LEXXII2",62,0)
 . S LEXC1="S:"_"$D("_LEXCS_")"_"&("_"'$D("_LEXCK_")"_") LEXOK("""_LEXSAB_""",2)=1" S X=LEXC1 D ^DIM S:'$D(X) LEXC1=""
"RTN","LEXXII2",63,0)
 . S LEXC2="S:"_"'$D("_LEXCS_")"_"!("_"$D("_LEXCK_")"_") LEXOK("""_LEXSAB_""",3)=0" S X=LEXC2 D ^DIM S:'$D(X) LEXC2=""
"RTN","LEXXII2",64,0)
 I $L(LEXCS)&('$L(LEXCK)) D
"RTN","LEXXII2",65,0)
 . S LEXC1="S:"_"$D("_LEXCS_")"_" LEXOK("""_LEXSAB_""",2)=1" S X=LEXC1 D ^DIM S:'$D(X) LEXC1=""
"RTN","LEXXII2",66,0)
 . S LEXC2="S:"_"'$D("_LEXCS_")"_" LEXOK("""_LEXSAB_""",3)=0" S X=LEXC2 D ^DIM S:'$D(X) LEXC2=""
"RTN","LEXXII2",67,0)
 I '$L(LEXCS)&($L(LEXCK)) D
"RTN","LEXXII2",68,0)
 . S LEXC1="S:"_"'$D("_LEXCK_")"_" LEXOK("""_LEXSAB_""",2)=1" S X=LEXC1 D ^DIM S:'$D(X) LEXC1=""
"RTN","LEXXII2",69,0)
 . S LEXC2="S:"_"$D("_LEXCK_")"_" LEXOK("""_LEXSAB_""",3)=0" S X=LEXC2 D ^DIM S:'$D(X) LEXC2=""
"RTN","LEXXII2",70,0)
 S:$L(LEXSAB)&($L(LEXC1)) ^TMP("LEXVER",$J,LEXSAB,1)=LEXC1 S:$L(LEXSAB)&($L(LEXC2)) ^TMP("LEXVER",$J,LEXSAB,2)=LEXC2
"RTN","LEXXII2",71,0)
 Q
"RTN","LEXXII2",72,0)
 ;                 
"RTN","LEXXII2",73,0)
CHECK ; Check if Data is installed
"RTN","LEXXII2",74,0)
 N LEXC,LEXEC,LEXFN,LEXOK,LEXSAB,LEXST,LEXT,X S LEXC=$$CHK K ^TMP("LEXVER",$J) Q:'$L($P(LEXC,"^",2))
"RTN","LEXXII2",75,0)
 S LEXT="  Data:        "_$P(LEXC,"^",2) D TL(LEXT)
"RTN","LEXXII2",76,0)
 Q
"RTN","LEXXII2",77,0)
CHK(X) ;   Check if Data is Fully Installed
"RTN","LEXXII2",78,0)
 Q:'$D(^TMP("LEXVER",$J)) ""  N LEXEC,LEXFN,LEXOK,LEXSAB,LEXST,LEXT S LEXST=0,LEXFN=1,LEXOK("FIR",1)=0 F LEXSAB="LEX","ICD","CPT","CPM" D
"RTN","LEXXII2",79,0)
 . Q:'$D(^TMP("LEXVER",$J,LEXSAB))  S LEXOK(LEXSAB,2)=0,LEXOK(LEXSAB,3)=1
"RTN","LEXXII2",80,0)
 F LEXSAB="FIR","LEX","ICD","CPT","CPM" D
"RTN","LEXXII2",81,0)
 . Q:'$D(^TMP("LEXVER",$J,LEXSAB))  S (LEXEC,X)=$G(^TMP("LEXVER",$J,LEXSAB,1)) D ^DIM X:$D(X) LEXEC
"RTN","LEXXII2",82,0)
 . S (LEXEC,X)=$G(^TMP("LEXVER",$J,LEXSAB,2)) D ^DIM X:$D(X) LEXEC
"RTN","LEXXII2",83,0)
 . Q:LEXSAB="FIR"  S:+($G(LEXOK(LEXSAB,2)))'>0 LEXFN=0
"RTN","LEXXII2",84,0)
 S:+($G(LEXOK("FIR",1)))>0 LEXST=1
"RTN","LEXXII2",85,0)
 S:+($G(LEXST))>0&(+($G(LEXFN))>0) X="1^Installation of data completed successfully"
"RTN","LEXXII2",86,0)
 S:+($G(LEXST))>0&(+($G(LEXFN))'>0) X="0^Installation of data started but did not finish (incomplete)"
"RTN","LEXXII2",87,0)
 S:+($G(LEXST))'>0 X="0^Installation of data not started (incomplete)"
"RTN","LEXXII2",88,0)
 S:'$D(^TMP("LEXVER",$J)) X=0
"RTN","LEXXII2",89,0)
 Q X
"RTN","LEXXII2",90,0)
 ;                 
"RTN","LEXXII2",91,0)
 ; Miscellaneous
"RTN","LEXXII2",92,0)
BL ;   Blank Line
"RTN","LEXXII2",93,0)
 D TL("") Q
"RTN","LEXXII2",94,0)
TL(X) ;   Text Line
"RTN","LEXXII2",95,0)
 W !,$G(X) Q
"RTN","LEXXII2",96,0)
 S LEXSUB=$G(LEXSUB) S:'$L(LEXSUB) LEXSUB="LEXXII"
"RTN","LEXXII2",97,0)
 I '$D(^TMP(LEXSUB,$J,1)) S ^TMP(LEXSUB,$J,1)=" ",^TMP(LEXSUB,$J,0)=1
"RTN","LEXXII2",98,0)
 N LEXNX S LEXNX=$O(^TMP(LEXSUB,$J," "),-1),LEXNX=LEXNX+1
"RTN","LEXXII2",99,0)
 S ^TMP(LEXSUB,$J,LEXNX)=" "_$G(X),^TMP(LEXSUB,$J,0)=LEXNX
"RTN","LEXXII2",100,0)
 Q
"RTN","LEXXM")
0^93^B70674913
"RTN","LEXXM",1,0)
LEXXM ;ISL/KER - Convert Text to Mix Case ;04/21/2014
"RTN","LEXXM",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM",3,0)
 ;               
"RTN","LEXXM",4,0)
 ; Global Variables
"RTN","LEXXM",5,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXXM",6,0)
 ;               
"RTN","LEXXM",7,0)
 ; External References
"RTN","LEXXM",8,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXXM",9,0)
 ;    $$CODEN^ICDCODE     ICR   3990
"RTN","LEXXM",10,0)
 ;    $$ICDDX^ICDCODE     ICR   3990
"RTN","LEXXM",11,0)
 ;    $$ICDOP^ICDCODE     ICR   3990
"RTN","LEXXM",12,0)
 ;    ICDD^ICDCODE        ICR   3990
"RTN","LEXXM",13,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXXM",14,0)
 ;    CPTD^ICPTCOD        ICR   1995
"RTN","LEXXM",15,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXXM",16,0)
 ;    MODD^ICPTMOD        ICR   1996
"RTN","LEXXM",17,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXXM",18,0)
 ;               
"RTN","LEXXM",19,0)
 Q
"RTN","LEXXM",20,0)
 ;                
"RTN","LEXXM",21,0)
 ; TXT                  General Text
"RTN","LEXXM",22,0)
 ;       Input    X     Text
"RTN","LEXXM",23,0)
 ;                L     Text Length (>19 & <80) (default $L(X))
"RTN","LEXXM",24,0)
 ;       Output   Y()   Mix case diagnosis
"RTN","LEXXM",25,0)
 ;               
"RTN","LEXXM",26,0)
 ; LEX                  Lexicon Text
"RTN","LEXXM",27,0)
 ;       Input    X     Lexicon IEN
"RTN","LEXXM",28,0)
 ;                L     Text Length (>19 & <80) (default $L(X))
"RTN","LEXXM",29,0)
 ;       Output   Y()   Mix case diagnosis
"RTN","LEXXM",30,0)
 ;               
"RTN","LEXXM",31,0)
 ; For the Entry Points ICDDX1, ICDDX2, ICDOP1, ICDOP2, ICPT1,
"RTN","LEXXM",32,0)
 ; ICPT2, MOD1, and MOD2 use:
"RTN","LEXXM",33,0)
 ;                   
"RTN","LEXXM",34,0)
 ;       Input    X     File IEN
"RTN","LEXXM",35,0)
 ;                V     Version date (default = TODAY)
"RTN","LEXXM",36,0)
 ;                L     Text Length (>19 & <80) (default $L(X))
"RTN","LEXXM",37,0)
 ;       Output   Y()   Mix case text
"RTN","LEXXM",38,0)
 ;                          
"RTN","LEXXM",39,0)
MIX(X) ; Mix Case any length
"RTN","LEXXM",40,0)
 N Y S X=$G(X) D FULL(X) S X=Y
"RTN","LEXXM",41,0)
 Q X
"RTN","LEXXM",42,0)
TXT(X,L) ; Convert Text to Mixed Case
"RTN","LEXXM",43,0)
 N LOW,LEN K LOW,Y S Y(1)=$$CASE($G(X)),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN D FMT
"RTN","LEXXM",44,0)
 Q
"RTN","LEXXM",45,0)
FULL(X) ; Convert Text to Mixed Case
"RTN","LEXXM",46,0)
 N LOW,LEN K LOW,Y S Y=$E($$CASE($G(X)),1,240)
"RTN","LEXXM",47,0)
 Q
"RTN","LEXXM",48,0)
LEX(X,L) ; Convert Expression to Mixed Case
"RTN","LEXXM",49,0)
 K Y N I,IEN,VDT,LEN,LOW K LOW,Y S IEN=+($G(X)),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN Q:+IEN'>0  Q:'$D(^LEX(757.01,+IEN,0))
"RTN","LEXXM",50,0)
 S Y(1)=$$EXP(X) D FMT
"RTN","LEXXM",51,0)
 Q
"RTN","LEXXM",52,0)
ICDDX1(X,V,L) ; Convert ICD Diagnosis to Mixed Case
"RTN","LEXXM",53,0)
 N CODE,IEN,VDT,LEN,ICDDX,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",54,0)
 S IEN=$P($$CODEN^ICDCODE(IEN,80),"~",1),X="",ICDDX=$P($$ICDDX^ICDCODE(+IEN,VDT,,0),"^",4) Q:'$L(ICDDX)  S Y(1)=$$CASE(ICDDX) D FMT
"RTN","LEXXM",55,0)
 Q
"RTN","LEXXM",56,0)
ICDDX2(X,V,L) ; Convert ICD Diagnosis Description to Mixed Case
"RTN","LEXXM",57,0)
 N CODE,I,IEN,VDT,LEN,ND,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",58,0)
 S IEN=$P($$CODEN^ICDCODE(IEN,80),"~",1),CODE=$P($$ICDDX^ICDCODE(+IEN,,0),"^",2) D ICDD^ICDCODE(CODE,"ND",VDT)
"RTN","LEXXM",59,0)
 K Y S I=0 F  S I=$O(ND(I)) Q:+I'>0  Q:$$TRIM($G(ND(I)))=""  S:I>1 LOW=1 S Y(I)=$$CASE($G(ND(I))) K LOW
"RTN","LEXXM",60,0)
 D FMT
"RTN","LEXXM",61,0)
 Q
"RTN","LEXXM",62,0)
ICDOP1(X,V,L) ; Convert ICD Procedure to Mixed Case
"RTN","LEXXM",63,0)
 N CODE,IEN,VDT,LEN,ICDOP,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",64,0)
 S IEN=$P($$CODEN^ICDCODE(IEN,80.1),"~",1),X="",ICDOP=$P($$ICDOP^ICDCODE(+IEN,VDT,,0),"^",5) Q:'$L(ICDOP)  S Y(1)=$$CASE(ICDOP) D FMT
"RTN","LEXXM",65,0)
 Q
"RTN","LEXXM",66,0)
ICDOP2(X,V,L) ; Convert ICD Procedure Description to Mixed Case
"RTN","LEXXM",67,0)
 N CODE,I,IEN,VDT,LEN,ND,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",68,0)
 S IEN=$P($$CODEN^ICDCODE(IEN,80.1),"~",1),CODE=$P($$ICDOP^ICDCODE(+IEN,VDT,,0),"^",2) D ICDD^ICDCODE(CODE,"ND",VDT)
"RTN","LEXXM",69,0)
 K Y S I=0 F  S I=$O(ND(I)) Q:+I'>0  Q:$$TRIM($G(ND(I)))=""  S:I>1 LOW=1 S Y(I)=$$CASE($G(ND(I))) K LOW
"RTN","LEXXM",70,0)
 D FMT
"RTN","LEXXM",71,0)
 Q
"RTN","LEXXM",72,0)
ICPT1(X,V,L) ; Convert CPT Procedure to Mixed Case
"RTN","LEXXM",73,0)
 N CODE,IEN,VDT,LEN,ICPT,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",74,0)
 S X="",ICPT=$$CPT^ICPTCOD(+IEN,VDT),IEN=+ICPT,CODE=$P(ICPT,"^",2),ICPT=$P(ICPT,"^",3) Q:'$L(ICPT)  S Y(1)=$$CASE(ICPT) D FMT
"RTN","LEXXM",75,0)
 Q
"RTN","LEXXM",76,0)
ICPT2(X,V,L) ; Convert CPT Procedure Description to Mixed Case
"RTN","LEXXM",77,0)
 N CODE,I,IEN,VDT,LEN,ND,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",78,0)
 S CODE=$P($$CPT^ICPTCOD(+IEN,VDT),"^",2) D CPTD^ICPTCOD(CODE,"ND",,VDT)
"RTN","LEXXM",79,0)
 K Y S I=0 F  S I=$O(ND(I)) Q:+I'>0  Q:$$TRIM($G(ND(I)))=""  S:I>1 LOW=1 S Y(I)=$$CASE($G(ND(I))) K LOW
"RTN","LEXXM",80,0)
 D FMT
"RTN","LEXXM",81,0)
 Q
"RTN","LEXXM",82,0)
MOD1(X,V,L) ; Convert CPT Modifier to Mixed Case
"RTN","LEXXM",83,0)
 N CODE,IEN,VDT,LEN,MOD,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L))
"RTN","LEXXM",84,0)
 K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",85,0)
 S X="",MOD=$$MOD^ICPTMOD(IEN,"I",VDT,1) S MOD=$P(MOD,"^",3) Q:'$L(MOD)  S Y(1)=$$CASE(MOD) D FMT
"RTN","LEXXM",86,0)
 Q
"RTN","LEXXM",87,0)
MOD2(X,V,L) ; Convert CPT Modifier Description to Mixed Case
"RTN","LEXXM",88,0)
 N CODE,I,IEN,VDT,LEN,ND,LOW K LOW,Y S (CODE,IEN)=$G(X),VDT=$G(V),LEN=+($G(L)) K:$G(LEN)'>19 LEN K:$G(LEN)'<80 LEN S:VDT'?7N VDT=$$DT^XLFDT
"RTN","LEXXM",89,0)
 S CODE=$P($$MOD^ICPTMOD(+IEN,"I",VDT,1),"^",2) D MODD^ICPTMOD(CODE,"ND",,VDT)
"RTN","LEXXM",90,0)
 K Y S I=0 F  S I=$O(ND(I)) Q:+I'>0  Q:$$TRIM($G(ND(I)))=""  S:I>1 LOW=1 S Y(I)=$$CASE($G(ND(I))) K LOW
"RTN","LEXXM",91,0)
 D FMT
"RTN","LEXXM",92,0)
 Q
"RTN","LEXXM",93,0)
 ;             
"RTN","LEXXM",94,0)
EXP(X) ; Get Case for Expression            X = IEN in 757.01
"RTN","LEXXM",95,0)
 N IEN,IEN,TXT,IN S IEN=$G(X),(TXT,IN)=$G(^LEX(757.01,+IEN,0)) Q:'$L(TXT)  K PAR S (TXT,X)=$$CASE(TXT) S:'$L(X) X=IN
"RTN","LEXXM",96,0)
 Q X
"RTN","LEXXM",97,0)
CASE(X) ; Get Case for String                X = String of Text
"RTN","LEXXM",98,0)
 K PAR N C,CHR,CT,LEXIN,LEXCTL,LEXCHR,I,L,PH,REM,STO,STR,TRL,TXT,W,WD,UIN,OIN,LEXPRE,LEXORG,LEXNXT,LEXUSE
"RTN","LEXXM",99,0)
 S OIN=$$TRIM($G(X)) S (UIN,STR)=$$UP(OIN) Q:'$L(STR) X  S STR=$$SW1(STR),L=$L(STR),PAR(0)=0,(LEXIN,PAR("T",1))=STR
"RTN","LEXXM",100,0)
 S TRL="" F  Q:$E(STR,$L(STR))'?1P  S TRL=$E(STR,$L(STR))_TRL,STR=$E(STR,1,($L(STR)-1))
"RTN","LEXXM",101,0)
 S PAR("TRL")=$G(TRL) S I=0 F  Q:I>L  Q:'$L(STR)  D  Q:'$L(STR)
"RTN","LEXXM",102,0)
 . S I=I+1 I I=$L(STR) D  Q
"RTN","LEXXM",103,0)
 . . S CT=$O(PAR(" "),-1)+1 S (STO,PAR(CT))=STR,PAR(0)=CT,STR=""
"RTN","LEXXM",104,0)
 . . S PH=$G(PAR((CT-1),"C"))_$G(PAR(CT))_$G(PAR(CT,"C")),PAR(CT,"A")=PH
"RTN","LEXXM",105,0)
 . . S LEXIN=$G(PAR("T",1)),LEXCTL=$G(PAR(CT,"A")),LEXCHR=$G(PAR(CT,"C"))
"RTN","LEXXM",106,0)
 . . F W=1:1:$L(STO," ") D
"RTN","LEXXM",107,0)
 . . . N NWD S WD=$P(STO," ",W),LEXORG=$G(PAR(CT,"W",(+($G(W))-1))),LEXPRE=$$UP(LEXORG)
"RTN","LEXXM",108,0)
 . . . S LEXNXT="",NWD=$$GETC(WD),PAR(CT,"W",W)=NWD
"RTN","LEXXM",109,0)
 . S C=$E(STR,I)
"RTN","LEXXM",110,0)
 . I C?1P&(C'=" ") D
"RTN","LEXXM",111,0)
 . . S:C="(" C=" (" S:C="[" C=" [" S:C="&" C=" &"
"RTN","LEXXM",112,0)
 . . N REM,STO S CT=$O(PAR(" "),-1)+1,(STO,PAR(CT))=$E(STR,1,(I-1)),PAR(0)=CT
"RTN","LEXXM",113,0)
 . . S PH=$G(PAR(CT-1,"C"))_$G(PAR(CT))_$G(PAR(CT,"C")),PAR(CT,"A")=PH
"RTN","LEXXM",114,0)
 . . S LEXIN=$G(PAR("T",1)),LEXCTL=$G(PAR(CT,"A")),LEXCHR=C
"RTN","LEXXM",115,0)
 . . F W=1:1:$L(STO," ") D
"RTN","LEXXM",116,0)
 . . . N NWD S WD=$P(STO," ",W),LEXPRE=$$UP($G(PAR(CT,"W",(+($G(W))-1))))
"RTN","LEXXM",117,0)
 . . . S NWD=$$GETC(WD),PAR(CT,"W",W)=NWD
"RTN","LEXXM",118,0)
 . . S (REM,STR)=$E(STR,I+1,$L(STR)),I=0
"RTN","LEXXM",119,0)
 . . F  Q:$E(STR,1)'=" "  S C=C_" " S (REM,STR)=$E(STR,2,$L(STR))
"RTN","LEXXM",120,0)
 . . S PAR(CT,"C")=C
"RTN","LEXXM",121,0)
 S TXT="",CT=0 F  S CT=$O(PAR(CT)) Q:+CT'>0  D
"RTN","LEXXM",122,0)
 . N STR,TR S STR="",TR=$G(PAR(CT,"C")),W=0 F  S W=$O(PAR(CT,"W",W)) Q:+W'>0  S STR=STR_" "_$G(PAR(CT,"W",W))
"RTN","LEXXM",123,0)
 . S STR=$$TRIM(STR)_TR,PAR(CT,"B")=STR
"RTN","LEXXM",124,0)
 . S TXT=TXT_STR K PAR(CT)
"RTN","LEXXM",125,0)
 S TXT=TXT_$G(PAR("TRL")),X=$$SW3(TXT) K PAR F CHR="-","+" D
"RTN","LEXXM",126,0)
 . I UIN[(" "_CHR),X[CHR,X'[(" "_CHR) D
"RTN","LEXXM",127,0)
 . . N TXT S TXT=$P(X,CHR,1) F I=2:1 Q:'$L($P(X,CHR,I))  S TXT=TXT_(" "_CHR)_$P(X,CHR,I)
"RTN","LEXXM",128,0)
 . . S X=TXT
"RTN","LEXXM",129,0)
 S X=$$FN(X),X=$$DBL(X) F CHR="~","!","@","#","$","^","&","*","_","-","+","=","|","\",";",":",",","." S X=$$TM(X,CHR)
"RTN","LEXXM",130,0)
 Q X
"RTN","LEXXM",131,0)
GETC(X) ; Set to Mixed/lower/UPPER case
"RTN","LEXXM",132,0)
 N LEXTAG,LEXRTN,LEXLEN,Y Q:$L($G(X))'>0 X  S X=$$UP($G(X)),Y="",LEXLEN=$L(X) S:LEXLEN>12 LEXLEN=12
"RTN","LEXXM",133,0)
 S LEXUSE=$$UP($$USE),LEXNXT=$$TP($$TM($P($G(UIN),LEXUSE,2,299)))
"RTN","LEXXM",134,0)
 S LEXTAG="T"_$L(X),LEXRTN="LEXXM"_$L(X)
"RTN","LEXXM",135,0)
 S:$L($G(X))>9 LEXTAG="TM" S:$L($G(X))>5 LEXRTN="LEXXM6" S LEXRTN=LEXTAG_"^"_LEXRTN D @LEXRTN I $L(Y) S X=$$SW2(Y) Q X
"RTN","LEXXM",136,0)
 S X=$$MX(X)
"RTN","LEXXM",137,0)
 Q X
"RTN","LEXXM",138,0)
 ;             
"RTN","LEXXM",139,0)
SW1(X) ; Switch Text (before setting case)
"RTN","LEXXM",140,0)
 S X=$$SW1^LEXXMM($G(X)) Q X
"RTN","LEXXM",141,0)
SW2(X) ; Switch Text (after setting case)
"RTN","LEXXM",142,0)
 S X=$$SW2^LEXXMM($G(X)) Q X
"RTN","LEXXM",143,0)
SW3(X) ; Switch Text (after assembling string)
"RTN","LEXXM",144,0)
 S X=$$SW3^LEXXMM($G(X)) Q X
"RTN","LEXXM",145,0)
EW(X) ; Display Word Usage
"RTN","LEXXM",146,0)
 D EW^LEXXMM($G(X)) Q
"RTN","LEXXM",147,0)
 ;             
"RTN","LEXXM",148,0)
USE(X) ; Used
"RTN","LEXXM",149,0)
 N STR,SEG,CUR S STR="",SEG=0 F  S SEG=$O(PAR(SEG)) Q:+SEG'>0  D
"RTN","LEXXM",150,0)
 . N WC S WC=0  F  S WC=$O(PAR(SEG,"W",WC)) Q:+WC'>0  D
"RTN","LEXXM",151,0)
 . . N WD S WD=$$UP($G(PAR(SEG,"W",WC)))
"RTN","LEXXM",152,0)
 . . S:$E(STR,$L(STR))?1A!($E(STR,$L(STR))?1N) STR=$G(STR)_" "_WD
"RTN","LEXXM",153,0)
 . . S:$E(STR,$L(STR))'?1A&($E(STR,$L(STR))'?1N) STR=$G(STR)_WD
"RTN","LEXXM",154,0)
 . S:$L($G(PAR(SEG,"C"))) STR=STR_$G(PAR(SEG,"C"))
"RTN","LEXXM",155,0)
 S CUR=$G(WD) I $L(CUR) D
"RTN","LEXXM",156,0)
 . S:$E(STR,$L(STR))?1A!($E(STR,$L(STR))?1N) STR=$G(STR)_" "_CUR
"RTN","LEXXM",157,0)
 . S:$E(STR,$L(STR))'?1A&($E(STR,$L(STR))'?1N) STR=$G(STR)_CUR
"RTN","LEXXM",158,0)
 S X=$$TM(STR)
"RTN","LEXXM",159,0)
 Q X
"RTN","LEXXM",160,0)
 ;WD="COMPLICATED"
"RTN","LEXXM",161,0)
 Q X
"RTN","LEXXM",162,0)
FMT ; Format Line Length - needs Y() and LEN
"RTN","LEXXM",163,0)
 Q:$O(Y(0))'>0  Q:+($G(LEN))'>0  Q:+($G(LEN))'>19  Q:+($G(LEN))>79  N I,J,X,D,DIW,DIWF,DIWL,DIWI,DIWR,DIWT,DIWTC,DIWX,DN,Z,L
"RTN","LEXXM",164,0)
 K ^UTILITY($J,"W") S DIWL=0,DIWF="C"_+($G(LEN)) F J=0:0 S J=$O(Y(J)) Q:'J  S X=Y(J) D ^DIWP
"RTN","LEXXM",165,0)
 K Y F J=0:0 S J=$O(^UTILITY($J,"W",0,J)) Q:'J  S Y(J)=$$TRIM($G(^UTILITY($J,"W",0,J,0)))
"RTN","LEXXM",166,0)
 K ^UTILITY($J,"W")
"RTN","LEXXM",167,0)
 Q
"RTN","LEXXM",168,0)
FN(X) ; Footnote Removed
"RTN","LEXXM",169,0)
 S X=$G(X) Q:X'[")" X  N ORG,FIR,LAS,TRM,L,NUM,OUT,REP,WTH S (OUT,ORG)=X,L=$L(X,")"),FIR=$P(X,")",1,(L-1))_")",LAS=$P(X,")",L),TRM=$$TRIM(LAS),X=ORG I TRM=LAS,$E(LAS,1)?1N,+LAS=LAS S OUT=FIR
"RTN","LEXXM",170,0)
 F NUM=1:1:9 S REP=")"_NUM_" ",WTH=") " I OUT[REP S OUT=$$SWAP^LEXXMM(OUT,REP,WTH)
"RTN","LEXXM",171,0)
 S X=OUT
"RTN","LEXXM",172,0)
 Q X
"RTN","LEXXM",173,0)
LO(X) ; Lower Case
"RTN","LEXXM",174,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM",175,0)
UP(X) ; Upper Case
"RTN","LEXXM",176,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM",177,0)
MX(X) ; Mixed Case
"RTN","LEXXM",178,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM",179,0)
LD(X) ; Leading Character
"RTN","LEXXM",180,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM",181,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM",182,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM",183,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM",184,0)
 Q X
"RTN","LEXXM",185,0)
TP(X) ; Trim Punctuation
"RTN","LEXXM",186,0)
 S X=$G(X) Q:'$L(X) X  F  Q:$E(X,1)'?1P  S X=$E(X,2,$L(X))
"RTN","LEXXM",187,0)
 F  Q:$E(X,$L(X))'?1P  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM",188,0)
 Q X
"RTN","LEXXM",189,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","LEXXM",190,0)
 S X=$G(X),Y=$G(Y) Q:$L(Y)&(X'[Y) X  S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXXM",191,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM",192,0)
 Q X
"RTN","LEXXM",193,0)
DBL(X) ; Double Spaces
"RTN","LEXXM",194,0)
 S X=$G(X) F  Q:X'["  "  S X=$P(X,"  ",1)_" "_$P(X,"  ",2,299)
"RTN","LEXXM",195,0)
 S X=$$TRIM(X)
"RTN","LEXXM",196,0)
 Q X
"RTN","LEXXM1")
0^94^B23924703
"RTN","LEXXM1",1,0)
LEXXM1 ;ISL/KER - Convert Text to Mix Case (1) ;04/21/2014
"RTN","LEXXM1",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM1",3,0)
 ;               
"RTN","LEXXM1",4,0)
 ; Global Variables
"RTN","LEXXM1",5,0)
 ;    None
"RTN","LEXXM1",6,0)
 ;               
"RTN","LEXXM1",7,0)
 ; External References
"RTN","LEXXM1",8,0)
 ;    None
"RTN","LEXXM1",9,0)
 ;               
"RTN","LEXXM1",10,0)
T1 ; 1 Character
"RTN","LEXXM1",11,0)
 N XU,CHR,PRE,LEXPRE,UIN,NXT S PRE=$G(LEXPRE),UIN=$G(UIN),NXT=$G(LEXNXT) S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM1",12,0)
 S:XU="W"&(($G(UIN)["W/WO")!($G(UIN)["W/")) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM1",13,0)
 ;   Special Case "A"
"RTN","LEXXM1",14,0)
 S Y="" I XU="A",$E(NXT,1,7)["SINGLE" S Y=$$LO(XU) Q
"RTN","LEXXM1",15,0)
 I $D(UIN),"^A^"[("^"_XU_"^"),(" "_UIN_" ")[(" "_XU_" ") D  Q:$L($G(Y))
"RTN","LEXXM1",16,0)
 . N UP S Y=XU Q:UIN[" A OR V "  Q:UIN[" T AND A "  Q:UIN[" A & E"  Q:UIN[" A OR B"  Q:UIN["O>HM< A"  S UP=$$UPA(XU,PRE,UIN) S:+UP'>0 Y=$$LO(XU)
"RTN","LEXXM1",17,0)
 ;   Special Case W/O
"RTN","LEXXM1",18,0)
 I "^O^W^"[("^"_XU_"^")&(UIN["W/O") S Y=$$LO(XU) Q
"RTN","LEXXM1",19,0)
 I "^G^"[("^"_XU_"^")&(+($G(PRE))>0) S Y=$$LO(XU) Q
"RTN","LEXXM1",20,0)
 ;   Uppercase
"RTN","LEXXM1",21,0)
 I "^B^C^D^E^F^G^H^I^J^K^L^M^N^O^P^Q^R^S^T^U^V^X^Y^Z^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM1",22,0)
 Q
"RTN","LEXXM1",23,0)
 ;            
"RTN","LEXXM1",24,0)
UPA(X,Y,Z) ; Check if "A" is Uppercase A
"RTN","LEXXM1",25,0)
 N CHR,FIR,OK,PRE,UP,W,XU
"RTN","LEXXM1",26,0)
 S XU=$G(X),PRE=$G(Y),UIN=$G(Z),FIR=$A($E(PRE,1))
"RTN","LEXXM1",27,0)
 S OK=1 Q:UIN[" A OR V " 1  Q:UIN[" T and A " 1  Q:UIN[" A & E" 1  Q:UIN[" A OR B" 1  Q:UIN["O>HM< A" 1  Q:PRE="&" 1
"RTN","LEXXM1",28,0)
 S OK=0 I FIR<66 F W="ACETYLGLUCOSAMINIDASE","ACETYLHEXOSAMINIDASE","ACTIONS","ACTIVIN","ACYLCOENZYME","AKIYAMI","ALDOLASE","AMINOPEPTIDASE" S:PRE=W OK=1
"RTN","LEXXM1",29,0)
 Q:OK=1 1  I FIR<66 F W="AMPHOTERICIN","AMYLOID","ANOPHELES","ANTI","ANTIBODY","ANTIGEN","APHTHOVIRUS","APOLIPOPROTEIN","APOLIPOPROTEINS","ARYLSULFATASE" S:PRE=W OK=1
"RTN","LEXXM1",30,0)
 Q:OK=1 1  I FIR<68 F W="ATTRIBUTE","ATTRIBUTES","AUXIN","AZURE","BACITRACIN","BIOVAR","BISPHENOL","BOTULINIUM","BOTULINUM","CARBOMYCIN","CARBOXYPEPTIDASE" S:PRE=W OK=1
"RTN","LEXXM1",31,0)
 Q:OK=1 1  I FIR>66,FIR<68 F W="CARMOISINE","CAROTID","CATEGORY","CHROMOGRANIN","CHYMOTRYPSIN","CICLOSPORIN","CLASS","CLINIC","CLUSTER","COBALAMIN","COENZYME" S:PRE=W OK=1
"RTN","LEXXM1",32,0)
 Q:OK=1 1  I FIR>66,FIR<70 F W="COMPOUND","CON","CONCANAVALIN","CORONARY","COXSACKIE","COXSACKIEVIRUS","CYCLOSPORIN","DIPEPTIDASE","DNASE","DOUBLE","ENTEROTOXIN" S:PRE=W OK=1
"RTN","LEXXM1",33,0)
 Q:OK=1 1  I FIR>68,FIR<72 F W="ENZYMES","EQUIZOLE","FEEDS","FIBRINOPEPTIDE","FIBRINOPEPTIDES","FORMULA","GALACTOSIDASE","GELATINASE","GENUS","GLYCOPHORIN","GP" S:PRE=W OK=1
"RTN","LEXXM1",34,0)
 Q:OK=1 1  I FIR>70,FIR<73 F W="GRADE","GRANZYME","GROUP","HAEMOGLOBIN","HAEMOPHILIA","HB","HEMOGLOBIN","HEMOPHILIA","HEP","HEPATITIS","HEXOSAMINIDASE","HLA","HPFH" S:PRE=W OK=1
"RTN","LEXXM1",35,0)
 Q:OK=1 1  I FIR>71,FIR<74 F W="HYPERVITAMINOSIS","HYPOGLYCIN","HYPOVITAMINOSIS","I","II","III","IMMUNOGLOBULIN","INDEX","INFLUENZA","INFLUENZAE","INFLUENZAVIRUS" S:PRE=W OK=1
"RTN","LEXXM1",36,0)
 Q:OK=1 1  I FIR>72,FIR<78 F W="INHIBIN","IV","JEC","LANTADENE","LASALOCID","LEFT","LEPROMIN","LEUKOTRIENE","LEVEL","LIPOPROTEIN","LOCUS","MED","MENINGITIDIS" S:PRE=W OK=1
"RTN","LEXXM1",37,0)
 Q:OK=1 1  I FIR>76,FIR<80 F W="MENINGITIS","MEPRIN","MOENOMYCIN","MORQUIO","NEOVITAMIN","NEUROKININ","NUTRITION","OLEOVITAMIN","OLIGOPEPTIDASE","ORBITAL","OXIDASE" S:PRE=W OK=1
"RTN","LEXXM1",38,0)
 Q:OK=1 1  I FIR>79,FIR<81 F W="PADIMATE","PARATYPHI","PARATYPHOID","PEPSIN","PHOSPHOLIPASE","POLYSACCHARIDE","PRECURSORS","PROTEIN","PROTEINASE","PROTEINS" S:PRE=W OK=1
"RTN","LEXXM1",39,0)
 Q:OK=1 1  I FIR>79,FIR<84 F W="PROTOVERATRINE","PUMILIOTOXIN","RASTELLI","RH","RHINITIS","RIGHT","RUTTER","SCILLAREN","SCYTALIDOPEPSIN","SEROTYPE","SOLVENT" S:PRE=W OK=1
"RTN","LEXXM1",40,0)
 Q:OK=1 1  I FIR>82,FIR<85 F W="SOMATOMEDIN","SPECIES","STAGE","STREPTOGRISIN","SUBGROUP","SUBSCALE","SUBUNIT","SULFATASE","SULFATE","SULPHATASE","T","TARIFF" S:PRE=W OK=1
"RTN","LEXXM1",41,0)
 Q:OK=1 1  I FIR>83,FIR<91 F W="TOXIN","TRIPLE","TYPE","TYPING","ULTRAVIOLET","VALUES","VENOMBIN","VIRUS","VITAMIN","WEAK" S:PRE=W OK=1
"RTN","LEXXM1",42,0)
 S X=OK
"RTN","LEXXM1",43,0)
 Q X
"RTN","LEXXM1",44,0)
 ;                    
"RTN","LEXXM1",45,0)
LO(X) ; Lower Case
"RTN","LEXXM1",46,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM1",47,0)
UP(X) ; Uppercase
"RTN","LEXXM1",48,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM1",49,0)
MX(X) ; Mix Case
"RTN","LEXXM1",50,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM2")
0^95^B28282174
"RTN","LEXXM2",1,0)
LEXXM2 ;ISL/KER - Convert Text to Mix Case (2) ;04/21/2014
"RTN","LEXXM2",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM2",3,0)
 ;               
"RTN","LEXXM2",4,0)
 ; Global Variables
"RTN","LEXXM2",5,0)
 ;    None
"RTN","LEXXM2",6,0)
 ;               
"RTN","LEXXM2",7,0)
 ; External References
"RTN","LEXXM2",8,0)
 ;    None
"RTN","LEXXM2",9,0)
 ;               
"RTN","LEXXM2",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM2",11,0)
 ;     LEXCTL,LEXNXT,LEXORG,LEXPRE,UIN Newed in LEXXM
"RTN","LEXXM2",12,0)
 ;     Y Set and returned to LEXXM
"RTN","LEXXM2",13,0)
 ;               
"RTN","LEXXM2",14,0)
T2 ; 2 Characters
"RTN","LEXXM2",15,0)
 N XU,CHR,PRE,ORG,NXT S ORG=$G(LEXORG),PRE=$G(LEXPRE),NXT=$G(LEXNXT),UIN=$G(UIN) S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM2",16,0)
 ;   Exceptions
"RTN","LEXXM2",17,0)
 S:$E(XU,1)?1U&($E(XU,2)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,2)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",18,0)
 I $E(XU,($L(XU)-1),$L(XU))="CC",$E(XU,($L(XU)-2))?1N S Y=$$LO(XU) Q
"RTN","LEXXM2",19,0)
 I XU="SO",$E(NXT,1,7)="STATED " S Y=$$LO(X) Q
"RTN","LEXXM2",20,0)
 S:$G(LEXCTL)["OR ROOM"!($G(LEXCTL)["OR-ROOM") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",21,0)
 S:XU="ST"&($G(PRE)=1) Y="st" S:XU="ND"&($G(PRE)=2) Y="nd" S:XU="RD"&($G(PRE)=3) Y="rd" S:XU="TH"&(+($G(PRE))>3) Y="th" Q:$L($G(Y))
"RTN","LEXXM2",22,0)
 S:XU="CO"&($G(UIN)["CO-") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",23,0)
 S:XU="SO"&(($G(UIN)["SO STATED")!($G(UIN)["SO DESCRIBED")) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",24,0)
 S:XU="SO"&(($G(UIN)["SHOULDER ORTHOSIS")!($G(UIN)["SUPERIOR OBLIQUE")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",25,0)
 S:XU="HB"&(($G(UIN)["HB-C")!($G(UIN)["HB-S")!($G(UIN)["HB-D")!($G(UIN)["HB-E")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",26,0)
 S:XU="DU"&($G(UIN)["Deoxyuridine") Y="dU" Q:$L($G(Y))
"RTN","LEXXM2",27,0)
 S:XU="DU"&($G(UIN)["CHAT") Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",28,0)
 S:XU="DU"&(($G(UIN)["POSITIVE")!($G(UIN)["NEGATIVE")!($G(UIN)["ANTIGEN")!($G(UIN)["12")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",29,0)
 S:XU="DU"&(($G(UIN)["DUODENAL")!($G(UIN)["PERFORATED")!($G(UIN)["ANTIGEN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",30,0)
 S:XU="RB"&(($G(UIN)["RUBIDIUM")!($G(UIN)["RETINOBLAST")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",31,0)
 S:XU="OZ"&(+($G(PRE))>0) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",32,0)
 S:XU="CM"&($G(UIN)["CM-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",33,0)
 S:XU="IN"&(($G(UIN)["IN/S")!($G(UIN)["INDIUM")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",34,0)
 S:XU="MN"&($G(UIN)["BLOOD") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",35,0)
 S:XU="RH"&(($G(UIN)'["LH")) Y="Rh" Q:$L($G(Y))
"RTN","LEXXM2",36,0)
 S:XU="GM"&(($G(UIN)["GM/")!($G(UIN)["GM)")!($G(UIN)["/GM")!($E($G(UIN),($L($G(UIN))-2),$L($G(UIN)))[" GM"))&(UIN'["METHYLASE") Y="gm" Q:$L($G(Y))
"RTN","LEXXM2",37,0)
 S:XU="FT"&($G(UIN)["FT-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",38,0)
 ;   Special Case
"RTN","LEXXM2",39,0)
 S:X="DA" Y="dA" S:X="DG" Y="dG" S:X="DU" Y="dU" Q:$L($G(Y))
"RTN","LEXXM2",40,0)
 S:X="GB" Y="gB" S:X="GH" Y="gH" S:X="KB" Y="kB" S:X="KD" Y="kD" Q:$L($G(Y))
"RTN","LEXXM2",41,0)
 S:X="PH" Y="pH" S:X="PX" Y="pX" Q:$L($G(Y))
"RTN","LEXXM2",42,0)
 S:$G(UIN)'["GC/"&(X="GC") Y="gC" Q:$L($G(Y))
"RTN","LEXXM2",43,0)
 S:($G(UIN)["OLIGO"!($G(UIN)["POLY"))&(X="DT") Y="dT" Q:$L($G(Y))
"RTN","LEXXM2",44,0)
 ;   Lower Case
"RTN","LEXXM2",45,0)
 S:$G(UIN)'["IF-"&(+$P($G(UIN),"IF ",2)'>0)&($G(UIN)'["BLOOD GROUP")&($G(UIN)'["IF(")&(X="IF") Y="if" Q:$L($G(Y))
"RTN","LEXXM2",46,0)
 I "^AM^AN^AS^AT^AT^BE^BY^CC^CM^DE^DO^EG^FT^IE^IN^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM2",47,0)
 I "^IS^IT^IN^MG^MM^NO^OF^ON^OR^PM^SQ^TO^UP^W/^WO^YL^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM2",48,0)
 I $G(UIN)["PER IU"!($E($P($G(UIN)," IU",1),$L($P($G(UIN)," IU",1)))?1N) S:X="IU" Y="iu" Q:$L($G(Y))
"RTN","LEXXM2",49,0)
 I ($G(UIN)["ML/")!($G(UIN)["/ML")!($G(UIN)["PER ML")!($E($P($G(UIN)," ML",1),$L($P($G(UIN)," ML",1)))?1N) S:X="ML" Y="ml" Q:$L($G(Y))
"RTN","LEXXM2",50,0)
 I $G(UIN)["(ML)" S:XU="ML" Y=XU Q:$L($G(Y))
"RTN","LEXXM2",51,0)
 S:($G(UIN)["; EA "!($G(UIN)[", EA ")!($G(UIN)["(EA ")!($G(UIN)[" EA)")!($G(UIN)[" EA ADD")!($G(UIN)[" EA SUB")!($G(UIN)[" EA 1"))&(X="EA") Y="ea" Q:$L($G(Y))
"RTN","LEXXM2",52,0)
 ;   Mixed Case
"RTN","LEXXM2",53,0)
 I "^ST^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM2",54,0)
 ;   Upper Case
"RTN","LEXXM2",55,0)
 I CHR?1N!("^A^B^C^D^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM2",56,0)
 . I "^AA^AB^AC^AD^AF^AG^AH^AI^AK^AM^AP^AR^AV^BA^BB^BC^BE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",57,0)
 . I "^BG^BH^BK^BL^BM^BN^BP^BR^BS^BT^BW^BX^CA^CB^CD^CE^CF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",58,0)
 . I "^CG^CH^CI^CK^CL^CN^CO^CP^CR^CS^CT^CV^CW^CY^DB^DC^DD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",59,0)
 . I "^DG^DI^DL^DM^DN^DP^DQ^DR^DS^DT^DX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",60,0)
 I "^E^F^G^H^I^J^K^L^M^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",61,0)
 . I "^EA^EB^EC^EF^EM^EN^EO^EP^ER^ES^ET^EZ^FA^FB^FD^FH^FK^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",62,0)
 . I "^FO^FR^FU^GA^GC^GI^GL^GM^GP^GR^GS^GT^HA^HB^HC^HE^HF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",63,0)
 . I "^HG^HH^HI^HL^HM^HO^HP^HR^HS^HT^HU^HX^IA^IB^IC^ID^IE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",64,0)
 . I "^IF^IG^IH^II^IL^IM^IP^IQ^IR^IU^IV^IX^JK^KA^KO^KS^KT^LA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",65,0)
 . I "^LC^LD^LE^LF^LH^LL^LO^LP^LR^LS^LT^LU^LV^LY^MA^MB^MC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",66,0)
 . I "^MD^ME^MF^MI^MJ^MK^ML^MP^MR^MS^MT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",67,0)
 I "^N^O^P^Q^R^S^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",68,0)
 . I "^NA^NB^NC^NF^NG^NH^NK^NL^NO^NP^NR^NS^NT^OC^OD^OE^OH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",69,0)
 . I "^OL^OP^OT^OX^PA^PC^PD^PE^PF^PG^PI^PK^PL^PM^PN^PO^PP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",70,0)
 . I "^PR^PS^PT^PV^PX^PZ^QA^QT^RA^RB^RC^RF^RG^RH^RI^RN^RO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",71,0)
 . I "^RP^RR^RS^RT^RV^RX^SA^SB^SC^SD^SE^SF^SG^SH^SI^SK^SL^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",72,0)
 . I "^SM^SO^SP^SR^SS^ST^SV^SW^SX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",73,0)
 I "^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",74,0)
 . I "^TA^TB^TC^TD^TF^TH^TI^TK^TL^TP^TR^TS^TT^TX^UD^UK^US^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",75,0)
 . I "^UV^UV^VA^VC^VC^VH^VI^VI^VO^VP^VR^VS^VV^VW^VX^VZ^WB^WC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",76,0)
 . I "^WS^WV^XE^XH^XI^XI^XL^XM^XP^XS^XT^XU^XV^XX^XY^YM^YS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",77,0)
 . I "^YY^ZP^ZY^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",78,0)
 Q
"RTN","LEXXM2",79,0)
 ; 
"RTN","LEXXM2",80,0)
LO(X) ; Lower Case
"RTN","LEXXM2",81,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM2",82,0)
UP(X) ; Uppercase
"RTN","LEXXM2",83,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM2",84,0)
MX(X) ; Mix Case
"RTN","LEXXM2",85,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM3")
0^96^B82567477
"RTN","LEXXM3",1,0)
LEXXM3 ;ISL/KER - Convert Text to Mix Case (3) ;04/21/2014
"RTN","LEXXM3",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM3",3,0)
 ;               
"RTN","LEXXM3",4,0)
 ; Global Variables
"RTN","LEXXM3",5,0)
 ;    None
"RTN","LEXXM3",6,0)
 ;               
"RTN","LEXXM3",7,0)
 ; External References
"RTN","LEXXM3",8,0)
 ;    None
"RTN","LEXXM3",9,0)
 ;               
"RTN","LEXXM3",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM3",11,0)
 ;     LEXCTL,LEXIN,LEXPRE,UIN Newed in LEXXM
"RTN","LEXXM3",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM3",13,0)
 ;               
"RTN","LEXXM3",14,0)
T3 ; 3 Characters
"RTN","LEXXM3",15,0)
 N XU,CHR,REM,PRE,NUM,TRL,P1,P2 S PRE=$G(LEXPRE),UIN=$G(UIN) S XU=$$UP(X),CHR=$E(XU,1),REM=$E(XU,2,3),NUM=$E(XU,1),TRL=$E(XU,2,3)
"RTN","LEXXM3",16,0)
 ;   Exceptions
"RTN","LEXXM3",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM3",18,0)
 S:REM="ST"&($G(CHR)=1) Y="1st" S:REM="ND"&($G(CHR)=2) Y="2nd" S:REM="RD"&($G(CHR)=3) Y="3rd" S:REM="TH"&(+($G(CHR))>3) Y=CHR_"th" Q:$L($G(Y))
"RTN","LEXXM3",19,0)
 S:$E(XU,1)?1U&($E(XU,3)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1U&($E(XU,2)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,3)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",20,0)
 S NUM=$E(XU,1),TRL=$E(XU,2,3) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM3",21,0)
 S:XU="ADD"&(UIN["ADD-ON") Y=$$LO(XU) S:XU="ADD"&(UIN["ADD ON") Y=$$LO(XU) S:XU="ADD"&(UIN["DEFICIT") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",22,0)
 S:XU="ALT"&((UIN["AMINOTRANSFERASE")!(UIN["FACTOR")!(UIN["PLATELET")!(UIN["PF4")!(UIN["SGPT")!(UIN["SERUM")!(UIN["ARGON LASER T")!(UIN["MEASUREMENT")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",23,0)
 S:XU="TAB"&((UIN["TYPHOID")!(UIN["TEMPORAL ARTERY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",24,0)
 S:XU="RIG"&((UIN["FLEX")!(UIN["TEMPORAL ARTERY")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",25,0)
 S:XU="HER"&(UIN["HER-") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",26,0)
 S:XU="YAG"&(UIN["LASER") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",27,0)
 S:XU="BUN"&(UIN["UREA NITRO") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",28,0)
 S:XU="PAD"&((UIN["PERIPHERAL")!(UIN["ARTERIAL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",29,0)
 S:XU="MEG"&((UIN["MAGNETOENCEPHALOGRAPHY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",30,0)
 S:XU="ALT"&((PRE["NORMAL")!(PRE["ELEVATED")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",31,0)
 S:XU="TAG"&((UIN["GLYCOPROTIEN")!(UIN["72")!(UIN["TAG-")!(UIN["-TAG")!(UIN["(TAG")!(UIN["TAG 12")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",32,0)
 S:XU="HAI"&((UIN["INHIBITION")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",33,0)
 S:XU="AMP"&((UIN["ADENOSINE")!(UIN["MONOPHOSPHATE")!(UIN["CYCL")!(UIN["ACUTE")!(UIN["MASSIVE")!(UIN["PULMONARY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",34,0)
 S:XU="AMP"&((UIN["PYROPHORYLASE")!(UIN["NUCLEOSIDASE")!(UIN["DEAMINASE")!(UIN["ACETYL")!(UIN["HEPTAMINOL")!(UIN["PROTEIN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",35,0)
 S:XU="AMP"&((UIN["POLYPHOSPHATE")!(UIN["PHOSPHOTRANSFERASE")!(UIN["DIALDEHYDE")!(UIN["ETHYL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",36,0)
 S:XU="AMP"&((UIN["-AMP")!(UIN["AMP-")!(PRE["PLASTIC")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",37,0)
 S:XU="BAL"&((UIN["BAL DIL")!(UIN["BAL TIS")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",38,0)
 S:XU="TIS"&((PRE["BAL")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",39,0)
 S:XU="TEM"&((UIN["TEM W")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",40,0)
 S:XU="ABL"&((PRE="")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",41,0)
 S:XU="REP"&((UIN["REP DEV")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",42,0)
 S:XU="DET"&((UIN["DET RET")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",43,0)
 S:XU="ANA"&((PRE["SANTA")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",44,0)
 S:XU="RET"&((PRE="C")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",45,0)
 S:XU="CAT"&((UIN["CRY")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",46,0)
 S:XU="ASP"&((UIN["ANTI")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",47,0)
 S:XU="DES"&((UIN["ANTI")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",48,0)
 S:XU="EST"&((UIN["-EST")!(UIN["ELECTRO")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",49,0)
 S:XU="DES"&((UIN["SPHINCTER")!(UIN["DYSEQUIL")!(UIN["DIETHYLS")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",50,0)
 S:XU="DES"&((UIN["GAMMA")!(UIN["-DES")!(UIN["DES-")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",51,0)
 S:XU="TAP"&((UIN["TAP-WATER")) Y="Tap" Q:$L($G(Y))
"RTN","LEXXM3",52,0)
 S:XU="TAP"&((UIN["TRYPSINOGEN")!(UIN["ACTIVATION")!(UIN["PEPTIDE")!(UIN[" COLI")!(UIN["CHEMO")!(UIN["TAP-")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",53,0)
 S:XU="TAP"&((UIN["TAP 0")!(UIN["TAP 2")!(UIN["PROTEIN")!(UIN["GENE")!(UIN["ANTIGEN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",54,0)
 S:XU="PAD"&($G(LEXCTL)["(PAD)") Y=XU S:XU="CAT"&($G(LEXIN)["ANIMAL") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",55,0)
 S:XU="TWO"&($G(UIN)["DIMENSION") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",56,0)
 S:XU="CAP"&($G(LEXIN)["KNEE") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",57,0)
 S:XU="END"&(($G(LEXIN)["END-")!($G(LEXIN)["END BULBS")!($G(LEXIN)["END POINT")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",58,0)
 S:XU="FAM"&((UIN["PROTOCOL")!(UIN="FAM")!(UIN["FUNCTIONAL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",59,0)
 I XU="WHO" D  Q:$L($G(Y))
"RTN","LEXXM3",60,0)
 . I $G(UIN)="WHO" S Y=XU Q
"RTN","LEXXM3",61,0)
 . S:$G(UIN)["WRIST"&($G(UIN)["ORTHO") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",62,0)
 . I $G(UIN)["WHO CLASS"!($G(UIN)["WHO)")!($G(UIN)["GRADE")!($G(UIN)["WHO SYSTEM")!($G(UIN)["SCALE") S Y=XU Q
"RTN","LEXXM3",63,0)
 . I $G(UIN)["WHO ORAL"!($G(UIN)["FINDING)")!($G(UIN)["STATUS")!($G(UIN)["WHO TUMOR")!($G(UIN)["WHO TUMOUR")!($G(UIN)["WHO CNS") S Y=XU Q
"RTN","LEXXM3",64,0)
 . I $G(UIN)["WORLD HEALTH"!($G(UIN)["WHO-ART") S Y=XU Q
"RTN","LEXXM3",65,0)
 . S Y="who"
"RTN","LEXXM3",66,0)
 ;   Special Case
"RTN","LEXXM3",67,0)
 S:XU="PO2" Y="pO2" S:XU="DDI" Y="ddI" S:XU="BRZ" Y="BrZ" Q:$L($G(Y))
"RTN","LEXXM3",68,0)
 S:XU="COA" Y="CoA" S:XU="COM" Y="CoM" S:XU="EIF" Y="eIF" Q:$L($G(Y))
"RTN","LEXXM3",69,0)
 S:XU="HPR" Y="HPr" S:XU="IGA" Y="IgA" S:XU="IGD" Y="IgD" Q:$L($G(Y))
"RTN","LEXXM3",70,0)
 S:XU="IGE" Y="IgE" S:XU="IGG" Y="IgG" S:XU="IGM" Y="IgM" Q:$L($G(Y))
"RTN","LEXXM3",71,0)
 S:XU="KDA" Y="kDa" S:XU="MEC" Y="MeC" S:XU="MEO" Y="MeO" Q:$L($G(Y))
"RTN","LEXXM3",72,0)
 S:XU="NAC" Y="NAc" S:XU="NIA" Y="NIa" S:XU="OET" Y="OEt" Q:$L($G(Y))
"RTN","LEXXM3",73,0)
 S:XU="PNA" Y="pNA" S:XU="SMB" Y="SmB" S:XU="VPG" Y="VPg" Q:$L($G(Y))
"RTN","LEXXM3",74,0)
 S:XU="MCI" Y="mCi" S:XU="LPH" Y="LpH" Q:$L($G(Y))
"RTN","LEXXM3",75,0)
 S:XU="1ST" Y="1st" S:XU="2ND" Y="2nd" S:XU="3RD" Y="3rd" Q:$L($G(Y))
"RTN","LEXXM3",76,0)
 S:XU="4TH" Y="4th" S:XU="5TH" Y="6th" S:XU="7TH" Y="8th" Q:$L($G(Y))
"RTN","LEXXM3",77,0)
 S:XU="9TH" Y="9th" Q:$L($G(Y))
"RTN","LEXXM3",78,0)
 ;   Lower Case
"RTN","LEXXM3",79,0)
 I "^ALL^AMP^AND^ANY^ARE^BIS^BUT^CAN^CIS^DES^DID^DUE^END^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",80,0)
 I "^ETC^FAR^FOR^GMS^HAD^HAS^HER^HIM^HIS^HOW^ITS^LOW^LPM^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",81,0)
 I "^MAY^MCG^MED^MIN^NEW^NON^NOT^NOW^ONE^OUR^OUT^OWN^OXO^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",82,0)
 I "^P53^PER^PRE^PRO^PSI^PUT^SET^SIX^TEN^THE^TOO^TWO^USE^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",83,0)
 I "^VIA^W/O^WAS^WHO^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",84,0)
 ;   Mixed Case
"RTN","LEXXM3",85,0)
 I "^APR^AUG^BAY^DIR^FAC^FEB^HOT^JAN^JCT^JUL^JUN^LAS^LOS^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM3",86,0)
 I "^MAR^MAY^MED^MTN^NEW^NOV^OCT^OUT^SAN^SEP^SKY^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM3",87,0)
 ;   Upper Case
"RTN","LEXXM3",88,0)
 I CHR?1N!("^A^B^C^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM3",89,0)
 . I "^AAA^AAC^AAF^AAT^ABA^ABC^ABI^ABL^ABO^ABP^ACE^ACP^ACS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",90,0)
 . I "^ADA^ADC^ADH^ADL^ADP^ADR^ADT^ADV^ADX^AFB^AFM^AFO^AFP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",91,0)
 . I "^AFX^AHG^AII^AKD^ALA^ALS^AMC^AMD^AMP^ANA^ANF^ANP^ANS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",92,0)
 . I "^AOE^APC^APP^APV^ARB^ARF^ASA^ASC^AST^ATF^ATP^ATX^AVP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",93,0)
 . I "^AVT^AZT^BAL^BAM^BCG^BCG^BCP^BCR^BDA^BDB^BDC^BDS^BIM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",94,0)
 . I "^BLO^BLS^BMI^BMP^BNP^BOC^BPH^BPN^BPV^BRL^BSA^BSP^BSR^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",95,0)
 . I "^BTE^CAD^CAF^CAM^CAP^CAT^CAZ^CBC^CBD^CBF^CBZ^CCK^CCP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",96,0)
 . I "^CDC^CDP^CDR^CEA^CEF^CFA^CFS^CGP^CGS^CHF^CHO^CIC^CIN^CKD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",97,0)
 . I "^CMC^CMF^CMP^CMT^CMV^CNP^CNS^COS^CPD^CPE^CPK^CPR^CPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",98,0)
 . I "^CRF^CRH^CRS^CRT^CSF^CSM^CTI^CTP^CVF^CVP^CWC^CWT^CYT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",99,0)
 I "^D^E^F^G^H^I^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",100,0)
 . I "^DAB^DAP^DAT^DBP^DCP^DCS^DDD^DDE^DDT^DEM^DET^DFA^DHP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",101,0)
 . I "^DHT^DIC^DIK^DIP^DIR^DJD^DM3^DM4^DME^DNA^DNP^DPT^DRG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",102,0)
 . I "^DRT^DSM^DTP^DVB^DVC^DVT^DXA^EAP^EBP^EBV^ECE^ECG^ECT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",103,0)
 . I "^ECX^EDL^EDR^EEE^EEG^EEO^EES^EGF^EGO^EHR^EHV^EIA^EKG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",104,0)
 . I "^ELA^EMD^EMG^EMS^ENA^ENK^ENT^EOG^EPI^EPO^EPS^ERG^ESA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",105,0)
 . I "^ESW^ETO^ETS^FAD^FAP^FDA^FDG^FDP^FGF^FMN^FPD^FSH^FSP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",106,0)
 . I "^FTC^FUS^FVC^GAP^GDH^GDP^GEC^GGT^GII^GLC^GLP^GMP^GPC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",107,0)
 . I "^GPD^GRF^GRP^GSH^GTH^GTP^GTT^GVP^HBC^HBP^HCG^HCL^HCO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",108,0)
 . I "^HCS^HCT^HCV^HDL^HDR^HF1^HFO^HGB^HGH^HHA^HHV^HIB^HIV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",109,0)
 . I "^HLA^HLH^HMG^HNF^HNP^HOE^HPA^HPC^HPL^HPV^HRP^HSA^HSV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",110,0)
 . I "^HTN^HTP^HVA^IAA^IBD^IBJ^ICD^ICF^ICI^ICP^ICU^IDA^IDH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",111,0)
 . I "^IDL^IFN^IGF^IGK^IIA^IIB^IIC^IID^IIE^III^IIL^IIV^IIX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",112,0)
 . I "^IMD^IMP^IMR^IMT^INH^INR^IOL^IOP^IPD^IPV^IRF^IRM^ISC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",113,0)
 . I "^ISD^ITC^ITE^IUD^IVC^IVF^IVM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",114,0)
 I "^J^K^L^M^N^O^P^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",115,0)
 . I "^JMV^KAP^KIA^KLH^KOH^KUB^LA7^LAI^LAP^LAT^LAV^LCR^LDH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",116,0)
 . I "^LDL^LEX^LHR^LIA^LPH^LRH^LRS^LRX^LSD^LSO^M1A^MAA^MAC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",117,0)
 . I "^MAG^MAM^MAP^MBC^MBP^MC2^MCA^MCI^MCP^MDA^MDD^MDD^MDL^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",118,0)
 . I "^MDP^MDV^MEA^MEN^MEP^MHC^MIC^MIF^MIP^MLC^MLL^MM2^MMR^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",119,0)
 . I "^MNP^MPA^MPO^MPP^MPR^MPS^MRA^MRC^MRI^MRP^MRT^MRV^MSA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",120,0)
 . I "^MSG^MSH^MTP^MVV^MYC^NAD^NAG^NAP^NBD^NCA^NCS^NDC^NEC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",121,0)
 . I "^NGF^NGU^NHE^NKA^NLM^NMA^NMN^NMP^NOS^NPH^NPY^NSC^NSD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",122,0)
 . I "^NSR^NTD^NTM^NUR^NYU^OER^OEX^OLA^OME^OMP^OMT^OPC^OPV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",123,0)
 . I "^ORA^ORB^ORC^ORF^OTC^OTF^OTW^OVA^PAF^PAG^PAL^PAP^PAS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",124,0)
 . I "^PBP^PCA^PCE^PCP^PCR^PCR^PEG^PEP^PET^PF4^PHA^PIP^PIV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",125,0)
 . I "^PKI^PKU^PLA^PLC^PLI^PLL^PLP^PML^POC^POW^PPD^PPI^PPP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",126,0)
 . I "^PRA^PRC^PRP^PRS^PRV^PSA^PSD^PSG^PSJ^PSN^PSO^PSP^PSS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",127,0)
 . I "^PSU^PSX^PT1^PT2^PT3^PT4^PTA^PTB^PTB^PTC^PTH^PTT^PTX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",128,0)
 . I "^PV1^PV2^PVC^PZA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",129,0)
 I "^Q^R^S^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",130,0)
 . I "^QAC^QAM^QAN^QAO^QAP^QAQ^QAR^QHP^QIE^QIP^QST^R/O^RAB^RAG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",131,0)
 . I "^RAP^RAR^RAS^RBC^RBP^REM^REP^RGD^RIA^RIG^RII^RLS^RMI^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",132,0)
 . I "^RNA^RNP^ROM^RSV^RTY^SAA^SAM^SAP^SCD^SCE^SCP^SCT^SDD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",133,0)
 . I "^SDS^SDX^SDZ^SEO^SER^SFN^SFV^SHF^SHV^SIV^SKF^SKN^SLC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",134,0)
 . I "^SLE^SLT^SMP^SNF^SOD^SOL^SOS^SPL^SPM^SPN^SPS^SRI^SRO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",135,0)
 . I "^SRS^SRV^SSI^STM^STP^STR^SUD^SVS^SYT^T1A^T1B^T1C^TBG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",136,0)
 . I "^TCF^TCP^TDD^TDF^TDP^TEE^TEF^TEL^TEM^TFA^TGF^TIG^TIS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",137,0)
 . I "^TIU^TLC^TMV^TNF^TNP^TPA^TPN^TRB^TRG^TRH^TRP^TRS^TSA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",138,0)
 . I "^TSH^TSI^TTP^TTR^TVL^UCB^UDP^UMP^UNB^URO^URR^USA^USF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",139,0)
 . I "^USP^USR^UTP^VAQ^VCA^VDD^VDR^VEE^VEP^VFW^VII^VIP^VLA^VMA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",140,0)
 . I "^VON^VRA^VRE^VSG^VSO^VTE^VWF^VZV^WBC^WBC^WGA^WHO^WT1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",141,0)
 . I "^WT2^XII^XIV^XIX^XLI^XLV^XMB^XPD^XUC^XVI^XWB^XXI^XXX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",142,0)
 . I "^YSA^ZDG^ZTA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",143,0)
 Q
"RTN","LEXXM3",144,0)
 ; 
"RTN","LEXXM3",145,0)
LO(X) ; Lower Case
"RTN","LEXXM3",146,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM3",147,0)
UP(X) ; Uppercase
"RTN","LEXXM3",148,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM3",149,0)
MX(X) ; Mix Case
"RTN","LEXXM3",150,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM4")
0^97^B52053731
"RTN","LEXXM4",1,0)
LEXXM4 ;ISL/KER - Convert Text to Mix Case (4) ;04/21/2014
"RTN","LEXXM4",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM4",3,0)
 ;               
"RTN","LEXXM4",4,0)
 ; Global Variables
"RTN","LEXXM4",5,0)
 ;    None
"RTN","LEXXM4",6,0)
 ;               
"RTN","LEXXM4",7,0)
 ; External References
"RTN","LEXXM4",8,0)
 ;    None
"RTN","LEXXM4",9,0)
 ;               
"RTN","LEXXM4",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM4",11,0)
 ;     LEXCTL,LEXIN,LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM4",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM4",13,0)
 ;               
"RTN","LEXXM4",14,0)
T4 ; 4 Characters
"RTN","LEXXM4",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM4",16,0)
 ;   Exceptions
"RTN","LEXXM4",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM4",18,0)
 S NUM=$E(XU,1,2),TRL=$E(XU,3,4) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM4",19,0)
 S:$E(XU,1)?1U&($E(XU,4)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,4)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",20,0)
 I "SIZE"=XU&(PRE="ANY") S Y=$$LO(X) Q
"RTN","LEXXM4",21,0)
 I XU="MESA",$G(LEXCTL)["(MESA)" S Y=XU Q
"RTN","LEXXM4",22,0)
 S:XU="TRAM"&((UIN["TRANSVERSE")!(UIN["BREAST")) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",23,0)
 S:XU="OPEN"&((UIN["OPEN HEART")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM4",24,0)
 S:XU="DRIL"&(UIN["DISTAL REVASCULARIZATION")&(UIN["INTERVAL LIGATION") Y=$$UP(XU) Q:$L($G(Y))
"RTN","LEXXM4",25,0)
 S:XU="TRAM"&((UIN["PROTEIN")!(UIN["GENE")!(UIN["ENDOPLASMIC RETICULUM"))&(UIN'["ACCIDENT")&(UIN'["VEHICLE") Y="TraM" Q:$L($G(Y))
"RTN","LEXXM4",26,0)
 S:XU="TIPS"&($G(LEXIN)["(TIPS)") Y=XU S:XU="TIPS"&($G(LEXCTL)["(TIPS") Y=XU S:XU="TIPS"&($G(LEXCTL)["TIPS)") Y=XU Q:$L($G(Y))
"RTN","LEXXM4",27,0)
 ;   Special Case
"RTN","LEXXM4",28,0)
 S:XU="APOA" Y="ApoA" S:XU="BBVI" Y="BbvI" S:XU="BPTH" Y="bPTH" Q:$L($G(Y))
"RTN","LEXXM4",29,0)
 S:XU="BSUE" Y="BsuE" S:XU="PCO2" Y="pCO2" S:XU="CGMP" Y="cGMP" Q:$L($G(Y))
"RTN","LEXXM4",30,0)
 S:XU="COTE" Y="CotE" S:XU="DATP" Y="dATP" S:XU="DCMP" Y="dCMP" Q:$L($G(Y))
"RTN","LEXXM4",31,0)
 S:XU="DCTP" Y="dCTP" S:XU="DGMP" Y="dGMP" S:XU="DGTP" Y="dGTP" Q:$L($G(Y))
"RTN","LEXXM4",32,0)
 S:XU="DSBA" Y="dsbA" S:XU="DTDP" Y="dTDP" S:XU="DTTP" Y="dTTP" Q:$L($G(Y))
"RTN","LEXXM4",33,0)
 S:XU="DUMP" Y="dUMP" S:XU="DURD" Y="dUrd" S:XU="DUTP" Y="dUTP" Q:$L($G(Y))
"RTN","LEXXM4",34,0)
 S:XU="ECAI" Y="EcaI" S:XU="ECOK" Y="EcoK" S:XU="ERBB" Y="erbB" Q:$L($G(Y))
"RTN","LEXXM4",35,0)
 S:XU="FELV" Y="FeLV" S:XU="FMET" Y="fMet" S:XU="GNRH" Y="GnRH" Q:$L($G(Y))
"RTN","LEXXM4",36,0)
 S:XU="GPII" Y="gpII" S:XU="HARG" Y="hArg" S:XU="HELA" Y="HeLa" Q:$L($G(Y))
"RTN","LEXXM4",37,0)
 S:XU="HGRF" Y="hGRF" S:XU="HHAI" Y="HhaI" S:XU="HPAI" Y="HpaI" Q:$L($G(Y))
"RTN","LEXXM4",38,0)
 S:XU="HPTH" Y="hPTH" S:XU="KPNI" Y="KpnI" S:XU="MCRB" Y="McrB" Q:$L($G(Y))
"RTN","LEXXM4",39,0)
 S:XU="MESH" Y="MeSH" S:XU="MRNA" Y="mRNA" S:XU="NHET" Y="NHEt" Q:$L($G(Y))
"RTN","LEXXM4",40,0)
 S:XU="NHME" Y="NHMe" S:XU="OBZL" Y="OBzl" S:XU="OTBU" Y="OtBu" Q:$L($G(Y))
"RTN","LEXXM4",41,0)
 S:XU="PGLU" Y="pGlu" S:XU="PSTI" Y="PstI" S:XU="REGA" Y="regA" Q:$L($G(Y))
"RTN","LEXXM4",42,0)
 S:XU="RRNA" Y="rRNA" S:XU="SCEI" Y="SceI" S:XU="TAQI" Y="TaqI" Q:$L($G(Y))
"RTN","LEXXM4",43,0)
 S:XU="TRFA" Y="TrfA" S:XU="TRKA" Y="trkA" S:XU="TRKB" Y="trkB" Q:$L($G(Y))
"RTN","LEXXM4",44,0)
 S:XU="TRNA" Y="tRNA" Q:$L($G(Y))
"RTN","LEXXM4",45,0)
 ;   Lower Case
"RTN","LEXXM4",46,0)
 I "LESS"=XU&($E(NXT,1,4)="THAN") S Y=$$LO(X) Q
"RTN","LEXXM4",47,0)
 I "^ALSO^AREA^BEEN^BEST^DONE^DTMN^EACH^EVEN^FIVE^FOUR^FROM^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",48,0)
 I "^HAVE^HERE^HOUR^INTO^IT'S^KIND^LATE^LEFT^LESS^LIKE^LOST^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",49,0)
 I "^MANY^MERE^MORE^MOST^MUST^NINE^NOTE^ONLY^OPEN^OURS^OVER^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",50,0)
 I "^PART^PLUS^SAME^SEEN^SITE^SOME^SUCH^SURE^TAKE^THAN^THAN^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",51,0)
 I "^THAT^THEN^THEY^THIS^THUS^UPON^USED^WERE^WHAT^WHEN^WHOM^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",52,0)
 I "^WITH^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",53,0)
 ;   Mixed Case
"RTN","LEXXM4",54,0)
 I "^BATH^CITH^CITY^EAST^ERIE^FORT^HOME^IOWA^IRON^JUAN^JULY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",55,0)
 I "^JUNE^KELL^LAKE^LOMA^LONG^LYON^PALM^PALO^PARK^RENO^ROCK^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",56,0)
 I "^SALT^SIDE^TYPE^WACO^WEST^YORK^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",57,0)
 ;   Uppercase
"RTN","LEXXM4",58,0)
 I CHR?1N!("^A^B^C^D^E^F^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM4",59,0)
 . I "^A1B5^A1BG^A4A7^A4A8^A6K7^ABL1^AICD^ABSV^ACKQ^ACTH^AIDS^AJCC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",60,0)
 . I "^ALLA^AML1^ANCA^ANIT^ARPP^ASHD^ASPE^ATLV^BADR^BCL2^BDEM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",61,0)
 . I "^BMIC^BMWD^BPDE^BPDE^BUSI^CABG^CAP1^CAP2^CAPD^CBFB^CCPD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",62,0)
 . I "^CD34^CENP^CGRP^CHCT^COOH^COPD^CORF^CPAP^CPAP^CPEP^CPRS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",63,0)
 . I "^CPT1^CPT2^CRNA^CROS^DENT^DEXA^DGGE^DGHI^DGPW^DGY1^DGY3^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",64,0)
 . I "^DGYA^DGYB^DGYC^DGYD^DGYF^DGYG^DGYJ^DGYK^DGYL^DGYN^DGYO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",65,0)
 . I "^DGYP^DGYQ^DGYR^DGYS^DGYU^DGYV^DGYW^DGYX^DGYZ^DHEA^DIPK^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",66,0)
 . I "^DMAC^DMBA^DMBA^DMSO^DOPS^DSAP^DSIP^DTAP^DTPA^DVBA^DVBC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",67,0)
 . I "^DVBQ^DVBT^DVBU^DVBW^DVBX^DVBY^EADT^EBNA^EBUS^ECMO^EDTA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",68,0)
 . I "^EEOA^EEOP^ENXE^ENXF^ENXG^ENXI^ENXJ^ENXK^ERCC^ERCP^ERCP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",69,0)
 . I "^ESRD^ESRD^ESWL^ETV1^ETV6^FANA^FBAA^FEV1^FITC^FKBP^FLI1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",70,0)
 . I "^FP22^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",71,0)
 I "^G^H^I^J^K^L^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",72,0)
 . I "^GABA^GATA^GECD^GECP^GECS^GERD^GHRH^GJB2^GLUT^GMAA^GMD1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",73,0)
 . I "^GMN1^GMN2^GMN3^GMN4^GMN5^GMPL^GMPT^GMRA^GMRC^GMRD^GMRE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",74,0)
 . I "^GMRG^GMRP^GMRQ^GMRR^GMRS^GMRV^GMRY^GP22^GRSA^GYKI^HBHC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",75,0)
 . I "^HBIG^HCFA^HCMV^HCO2^HETE^HIAA^HIDA^HISA^HLPC^HMSN^HPLC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",76,0)
 . I "^HPSA^HSAN^HTLV^IADL^IBDE^IBDP^IBQL^IBQY^IBY3^IBY4^IBY5^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",77,0)
 . I "^IBY6^IBY7^IBY8^IBY9^IBYA^IBYB^IBYC^IBYD^IBYE^IBYF^IBYG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",78,0)
 . I "^IBYH^IBYK^IBYL^IBYN^ICPT^IDDM^IGIV^IIIA^IIIA^IIIB^IIIC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",79,0)
 . I "^IIID^IIIE^IMRT^INTP^IPPB^IPPB^ISUP^KAFO^LATS^LBRN^LBRT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",80,0)
 . I "^LBRY^LEXX^LHRH^LR00^LR01^LR03^LRAR^LRLS^LTCH^LVEF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",81,0)
 I "^M^N^O^P^Q^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",82,0)
 . I "^MAGE^MAGI^MCAD^MCXX^MEDA^MEDB^MEDC^MEDF^MESA^MESH^MHPE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",83,0)
 . I "^MIBB^MLH1^MLH1^MLH2^MLH3^MLH4^MLH5^MLVP^MMPI^MMRV^MPTP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",84,0)
 . I "^MPTP^MPTP^MQSA^MRCP^MRSA^MSH1^MSH2^MSH3^MSH4^MSH5^MSH6^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",85,0)
 . I "^MSLT^MTLU^MYCN^NADH^NADP^NAPS^NARP^NBDC^NETT^NETT^NGFI^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",86,0)
 . I "^NIST^NMES^NRDC^NSCL^NURA^NURC^NURE^NURQ^NURX^OERR^OHCS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",87,0)
 . I "^ONCO^PABA^PAPP^PAPS^PAX3^PAX7^PDAC^PICC^PLA1^PLA2^PLA3^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",88,0)
 . I "^PMMA^POMC^PORP^PRCA^PRCP^PRMQ^PRPF^PRSX^PRX0^PRX1^PRX8^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",89,0)
 . I "^PRXB^PRXC^PRXE^PRXF^PRXG^PRXI^PRXJ^PRXK^PRXP^PRYA^PRYB^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",90,0)
 . I "^PRYC^PRYD^PRYF^PRYH^PRYJ^PRYL^PRYN^PRYP^PSA1^PSAP^PSD1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",91,0)
 . I "^PSGW^PSIV^PSJ1^PSJ4^PSOA^PSOB^PSOC^PSOD^PSOE^PSOG^PSOH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",92,0)
 . I "^PSOJ^PSOL^PSOY^PSW1^PSXC^PTCA^PTEN^PTSD^PUVA^PUVB^QAN1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",93,0)
 . I "^QAR1^QAR2^QARF^QARY^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",94,0)
 I "^R^S^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",95,0)
 . I "^RAAA^RAAB^RAAC^RAAE^RAAF^RARA^RAST^RMPC^RMPF^RMPJ^RMPR^RMPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",96,0)
 . I "^RTEM^RTYB^RTYC^RTYD^RVEF^RXIV^RXOP^RXUD^SARS^SACH^SBCE^SCAD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",97,0)
 . I "^SCL1^SCL2^SDHB^SDHD^SDYA^SDYM^SDYN^SDYP^SEXA^SGOT^SGPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",98,0)
 . I "^SHBG^SIRS^SISI^SMAR^SNAP^SOWA^SOWC^SOWK^SRIF^SRIH^SROA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",99,0)
 . I "^SRRS^SRRT^SSCP^SSX1^SSX2^TAPA^TATA^TCDD^TCDD^TCF3^TDAP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",100,0)
 . I "^TENS^TFE3^THBR^TIMP^TIUJ^TIUW^TIUX^TLSO^TLSO^TORP^TP53^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",101,0)
 . I "^UDPG^UMLS^VALM^VAPR^VDDR^VEEM^VIIA^VIII^VLDL^VRSA^VSIT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",102,0)
 . I "^WHFO^WMMT^XIII^XQOR^XUFI^XVII^XXII^YS01^ZIFT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",103,0)
 Q
"RTN","LEXXM4",104,0)
 ;          
"RTN","LEXXM4",105,0)
LO(X) ; Lower Case
"RTN","LEXXM4",106,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM4",107,0)
UP(X) ; Uppercase
"RTN","LEXXM4",108,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM4",109,0)
MX(X) ; Mix Case
"RTN","LEXXM4",110,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM4",111,0)
LD(X) ; Leading Character
"RTN","LEXXM4",112,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM4",113,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM4",114,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM4",115,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM4",116,0)
 Q X
"RTN","LEXXM5")
0^98^B16058487
"RTN","LEXXM5",1,0)
LEXXM5 ;ISL/KER - Convert Text to Mix Case (5) ;04/21/2014
"RTN","LEXXM5",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM5",3,0)
 ;               
"RTN","LEXXM5",4,0)
 ; Global Variables
"RTN","LEXXM5",5,0)
 ;    None
"RTN","LEXXM5",6,0)
 ;               
"RTN","LEXXM5",7,0)
 ; External References
"RTN","LEXXM5",8,0)
 ;    None
"RTN","LEXXM5",9,0)
 ;               
"RTN","LEXXM5",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM5",11,0)
 ;     LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM5",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM5",13,0)
 ;               
"RTN","LEXXM5",14,0)
T5 ; 5 Characters
"RTN","LEXXM5",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM5",16,0)
 ;   Exceptions
"RTN","LEXXM5",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM5",18,0)
 S NUM=$E(XU,1,3),TRL=$E(XU,4,5) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM5",19,0)
 S:$E(XU,1)?1U&($E(XU,5)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,5)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM5",20,0)
 S:XU="THREE"&($G(UIN)["DIMENSION") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM5",21,0)
 S:XU="AREAS"&($G(PRE)["MORE") Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM5",22,0)
 ;   Special Case
"RTN","LEXXM5",23,0)
 S:X="CVIBI" Y="CviBI" S:X="DNASE" Y="DNase" S:X="ECORI" Y="EcoRI" Q:$L($G(Y))
"RTN","LEXXM5",24,0)
 S:X="GROEL" Y="GroEL" S:X="HAEII" Y="HaeII" S:X="HBSAG" Y="HBsAg" Q:$L($G(Y))
"RTN","LEXXM5",25,0)
 S:X="HINFI" Y="HinfI" S:X="HNRNP" Y="hnRNP" S:X="HPAII" Y="HpaII" Q:$L($G(Y))
"RTN","LEXXM5",26,0)
 S:X="HPGRF" Y="hpGRF" S:X="MBOII" Y="MboII" S:X="MELEU" Y="MeLeu" Q:$L($G(Y))
"RTN","LEXXM5",27,0)
 S:X="MEPHE" Y="MePhe" S:X="MEPRO" Y="MePro" S:X="NEUAC" Y="NeuAc" Q:$L($G(Y))
"RTN","LEXXM5",28,0)
 S:X="PTHRP" Y="PTHrP" S:X="RNASE" Y="RNase" S:X="SALGI" Y="SalGI" Q:$L($G(Y))
"RTN","LEXXM5",29,0)
 S:X="SNRNP" Y="snRNP" Q:$L($G(Y))
"RTN","LEXXM5",30,0)
 ;   Lower Case
"RTN","LEXXM5",31,0)
 I "EQUAL"=XU&($E(USE,($L(USE)-12),$L(USE))["THAN OR") S Y=$$LO(X) Q
"RTN","LEXXM5",32,0)
 I "^ABOVE^AFTER^BELOW^COULD^FIFTH^FIRST^FORTH^FOUND^GIVEN^HOURS"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",33,0)
 I "^LOWER^MAJOR^OFTEN^OTHER^OUTER^RIGHT^SITES^SIXTH^THERE^THESE"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",34,0)
 I "^THIRD^THREE^UPPER^USING^WHERE^WHICH^WOULD"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",35,0)
 ;   Mixed Case
"RTN","LEXXM5",36,0)
 I "^APRIL^ARBOR^BARRE^BEACH^BLACK^BLUFF^BRONX^CLOUD^CREEK^DIEGO"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",37,0)
 I "^DRIVE^FALLS^FARGO^GOISE^GRAND^HAVEN^HILLS^HINES^JUNCT^LINDA"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",38,0)
 I "^LOUIS^LYONS^MARCH^MEADE^MIAMI^MILES^NORTH^OMAHA^PASSO^PERRY"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",39,0)
 I "^PINES^PITTS^POINT^PUGET^RIVER^RIVER^SAINT^SALEM^SIOUX^SOUND"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",40,0)
 I "^SOUTH^TAMPA^TEXAS^TOGUS^TOMAH^VEGAS^WALLA^WAYNE^WHITE"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",41,0)
 ;   Uppercase
"RTN","LEXXM5",42,0)
 I "^1003F^1004F^1006F^1007F^1031C^2000F^2001F^2002F^2003F^2004F"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",43,0)
 I "^ALLA1^AREDS^BRCA1^BRCA2^BRDCL^C1251^CCAAT^CCHIT^CCND1^CD117"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",44,0)
 I "^COPD1^CTLSO^CTLSO^DDIT3^DOPAC^DPDPE^EPSDT^EPSDT^EPTFE^ERRB2"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",45,0)
 I "^EWSR1^HBSAG^HCPCS^HGSIL^HKAFO^HKAFO^HNPCC^IGFBP^JAZF1^JJAZ1"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",46,0)
 I "^KAPPA^LGSIL^MELAS^MERRF^MERRF^MYH11^NSAID^NADPH^NIDDM^NR4A3^PACAP"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",47,0)
 I "^PDGFB^PPROM^QSART^RBF56^RUNX1^SAECG^SAIDS^SEWHO^SPECT^SPECT"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",48,0)
 I "^STAAR^T1MIC^TCF12^THKAO^TKHAO^XVIII^XXIII^ZPACK"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",49,0)
 Q
"RTN","LEXXM5",50,0)
 ;          
"RTN","LEXXM5",51,0)
LO(X) ; Lower Case
"RTN","LEXXM5",52,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM5",53,0)
UP(X) ; Uppercase
"RTN","LEXXM5",54,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM5",55,0)
MX(X) ; Mix Case
"RTN","LEXXM5",56,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM5",57,0)
LD(X) ; Leading Character
"RTN","LEXXM5",58,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM5",59,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM5",60,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM5",61,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM5",62,0)
 Q X
"RTN","LEXXM6")
0^99^B53334113
"RTN","LEXXM6",1,0)
LEXXM6 ;ISL/KER - Convert Text to Mix Case (6+) ;04/21/2014
"RTN","LEXXM6",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXM6",3,0)
 ;               
"RTN","LEXXM6",4,0)
 ; Global Variables
"RTN","LEXXM6",5,0)
 ;    None
"RTN","LEXXM6",6,0)
 ;               
"RTN","LEXXM6",7,0)
 ; External References
"RTN","LEXXM6",8,0)
 ;    None
"RTN","LEXXM6",9,0)
 ;               
"RTN","LEXXM6",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM6",11,0)
 ;     LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM6",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM6",13,0)
 ;               
"RTN","LEXXM6",14,0)
T6 ; 6 Characters
"RTN","LEXXM6",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",16,0)
 ;   Exceptions
"RTN","LEXXM6",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",18,0)
 S NUM=$E(XU,1,4),TRL=$E(XU,5,6) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",19,0)
 I "STATED"=XU&(PRE="SO") S Y=$$LO(X) Q
"RTN","LEXXM6",20,0)
 I "^DEVICE^"[("^"_XU_"^")&($L(PRE)>5) S Y=$$MX(X) Q
"RTN","LEXXM6",21,0)
 S:$E(XU,1)?1U&($E(XU,6)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",22,0)
 ;   Special Case
"RTN","LEXXM6",23,0)
 S:X="DESGLY" Y="desGly" S:X="ECORII" Y="EcoRII" S:X="GALNAC" Y="GalNAc" Q:$L($G(Y))
"RTN","LEXXM6",24,0)
 S:X="GLCNAC" Y="GlcNAc" S:X="GTPASE" Y="GTPase" S:X="LEFORT" Y="LeFort" Q:$L($G(Y))
"RTN","LEXXM6",25,0)
 S:X="MURNAC" Y="MurNAc" S:X="PTDINS" Y="PtdIns" S:X="STYLTI" Y="StyLTI" Q:$L($G(Y))
"RTN","LEXXM6",26,0)
 S:X="UVRABC" Y="uvrABC" S:X="PDGOLD" Y="PdGold" S:X="IOGOLD" Y="IoGold" Q:$L($G(Y))
"RTN","LEXXM6",27,0)
 S:X="ATPASE" Y="ATPase"  Q:$L($G(Y))
"RTN","LEXXM6",28,0)
 ;   Lower Case
"RTN","LEXXM6",29,0)
 I "^BEFORE^CLOSED^CYCLIC^DEGREE^DEVICE^DURING^EFFECT^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",30,0)
 I "^EXCEPT^FACTOR^FILING^FOURTH^HEMPAS^HAVING^INSIDE^ITSELF^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",31,0)
 I "^LENGTH^MOLDED^RETURN^SECOND^SINGLE^WITHIN^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",32,0)
 ;   Mixed Case
"RTN","LEXXM6",33,0)
 I "^ANGLES^AUGUST^BATTLE^BILOXI^BONHAM^BOSTON^BUTLER^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",34,0)
 I "^CASTLE^CLINIC^DALLAS^DAYTON^DENVER^DUBLIN^DURHAM^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",35,0)
 I "^FRESNO^HEALTH^HGHLND^HOWARD^HUDSON^ISLAND^JERSEY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",36,0)
 I "^KANSAS^LESSER^LITTLE^MANILA^MARION^MARLIN^MOINES^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",37,0)
 I "^ORANGE^POPLAR^POPLAR^RETURN^SPRING^TACOMA^TEMPLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",38,0)
 I "^TOPEKA^TUCSON^VALLEY^WILKES^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",39,0)
 ;   Uppercase
"RTN","LEXXM6",40,0)
 I "^ADAMTS^BICROS^C1251C^COL1A1^DMEPOS^FOX01A^FOXO1A^PEPPTS"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",41,0)
 Q
"RTN","LEXXM6",42,0)
 ;          
"RTN","LEXXM6",43,0)
T7 ; 7 Characters
"RTN","LEXXM6",44,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",45,0)
 ;   Exceptions
"RTN","LEXXM6",46,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",47,0)
 S NUM=$E(XU,1,5),TRL=$E(XU,6,7) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",48,0)
 S:$E(XU,1)?1U&($E(XU,7)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",49,0)
 ;   Lower Case
"RTN","LEXXM6",50,0)
 I "GREATER"=XU&($E(NXT,1,4)="THAN") S Y=$$LO(X) Q
"RTN","LEXXM6",51,0)
 I "GREATER"=XU&(PRE="OR") S Y=$$LO(X) Q
"RTN","LEXXM6",52,0)
 I "^EFFECTS^BETWEEN^ONESELF^HERSELF^HIMSELF^OUTSIDE^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",53,0)
 I "^THEREOF^ANOTHER^THEREBY^WITHOUT^MENTION^THROUGH^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",54,0)
 ;   Mixed Case
"RTN","LEXXM6",55,0)
 I "^ALTOONA^ANTONIO^ATLANTA^AUGUSTA^BATAVIA^BECKLEY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",56,0)
 I "^BEDFORD^BUFFALO^CENTRAL^CHICAGO^EASTERN^FLORIDA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",57,0)
 I "^GEORGIA^GREATER^HAMPTON^HOUSTON^JACKSON^JANUARY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",58,0)
 I "^LEBANON^LINCOLN^MADISON^MEMPHIS^OCTOBER^ORLEANS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",59,0)
 I "^PATIENT^PHOENIX^SAGINAW^SEATTLE^SPOKANE^SPRINGS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",60,0)
 I "^WESTERN^WICHITA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",61,0)
 ;   Uppercase
"RTN","LEXXM6",62,0)
 I "^APHAKIC^ASPSCR1^CBFA2T1^CMVIGIV^S30R060^S30R080^S30R100^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",63,0)
 Q
"RTN","LEXXM6",64,0)
 ;          
"RTN","LEXXM6",65,0)
T8 ; 8 Characters
"RTN","LEXXM6",66,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",67,0)
 ;   Exceptions
"RTN","LEXXM6",68,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",69,0)
 S NUM=$E(XU,1,6),TRL=$E(XU,7,8) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",70,0)
 S:$E(XU,1)?1U&($E(XU,8)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",71,0)
 ;   Lower Case
"RTN","LEXXM6",72,0)
 I XU="MULTIPLE",$E(NXT,1,5)="SITES" S Y=$$LO(X) Q
"RTN","LEXXM6",73,0)
 I XU="MULTIPLE",$E(NXT,1,18)["AND UNSPECIFIED" S Y=$$LO(X) Q
"RTN","LEXXM6",74,0)
 I "^ALTHOUGH^INJURING^INCLUDES^ADDITION^EXCLUDES^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",75,0)
 ;   Mixed Case
"RTN","LEXXM6",76,0)
 I "^BROCKTON^BROOKLYN^CHEYENNE^COLUMBIA^COLUMBUS^DANVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",77,0)
 I "^DECEMBER^FAYETTVL^FEBRUARY^HARRISON^HIGHLAND^HONOLULU^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",78,0)
 I "^JUNCTION^MARTINEZ^MARYLAND^MONTROSE^MOUNTAIN^MOUNTIAN^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",79,0)
 I "^MUSKOGEE^NEBRASKA^NORTHERN^OKLAHOMA^PORTLAND^PRESCOTT^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",80,0)
 I "^RICHMOND^ROSEBURG^SHERIDAN^SOUTHERN^SYRACUSE^TUSKEGEE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",81,0)
 I "^VETERANS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",82,0)
 ;   Uppercase
"RTN","LEXXM6",83,0)
 I "^PD3S111L^PD3S111P^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",84,0)
 Q
"RTN","LEXXM6",85,0)
 ;          
"RTN","LEXXM6",86,0)
T9 ; 9 Characters
"RTN","LEXXM6",87,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",88,0)
 ;   Exceptions
"RTN","LEXXM6",89,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",90,0)
 S NUM=$E(XU,1,7),TRL=$E(XU,8,9) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",91,0)
 S:$E(XU,1)?1U&($E(XU,9)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",92,0)
 S:XU="MILLIGRAM"&(($G(UIN)[" PER ")&($G(UIN)[" MILLI")) Y="mg" Q:$L($G(Y))
"RTN","LEXXM6",93,0)
 ;   Lower Case
"RTN","LEXXM6",94,0)
 I "^OTHERWISE^SPECIFIED^INCLUDING^ELSEWHERE^INVOLVING^EXCLUDING^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",95,0)
 ;   Mixed Case
"RTN","LEXXM6",96,0)
 I "^ASHEVILLE^BALTIMORE^CLEVELAND^FRANCISCO^KERRVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",97,0)
 I "^KNOXVILLE^LEXINGTON^LIVERMORE^MILWAUKEE^NASHVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",98,0)
 I "^NEWINGTON^NORTHPORT^SALISBURY^SEPTEMBER^SEPULVEDA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",99,0)
 Q
"RTN","LEXXM6",100,0)
 ;          
"RTN","LEXXM6",101,0)
TM ; Long Words
"RTN","LEXXM6",102,0)
T10 ;   10 Characters
"RTN","LEXXM6",103,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",104,0)
 ;      Exceptions
"RTN","LEXXM6",105,0)
 S NUM=$E(XU,1,($L(XU)-2)),TRL=$E(XU,($L(XU)-1),$L(XU))
"RTN","LEXXM6",106,0)
 I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",107,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",108,0)
 ;      Special Case
"RTN","LEXXM6",109,0)
 S:X="GDPMANNOSE" Y="GDPmannose" S:X="UDPGLUCOSE" Y="UDPglucose" Q:$L($G(Y))
"RTN","LEXXM6",110,0)
 ;      Lower Case
"RTN","LEXXM6",111,0)
 I XU="COMPLICATED",$E(NXT,1,2)="BY" S Y=$$LO(X) Q
"RTN","LEXXM6",112,0)
 I "^CONDITIONS^ADDITIONAL^CLASSIFIED^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",113,0)
 ;      Mixed Case
"RTN","LEXXM6",114,0)
 I "^BIRMINGHAM^CALIFORNIA^CHARLESTON^CINCINNATI^CLARKSBURG^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",115,0)
 I "^HEALTHCARE^HUNTINGTON^LOUISVILLE^MANCHESTER^MONTGOMERY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",116,0)
 I "^PITTSBURGH^PROVIDENCE^SHREVEPORT^TUSCALOOSA^UNIVERSITY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",117,0)
 I "^WASHINGTON^WILMINGTON^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",118,0)
T11 ;   11 Characters
"RTN","LEXXM6",119,0)
 N XU,CHR S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",120,0)
 ;      Exceptions
"RTN","LEXXM6",121,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,$L(XU))?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM6",122,0)
 ;      Lower Case
"RTN","LEXXM6",123,0)
 I "^UNSPECIFIED^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",124,0)
 ;      Mixed Case
"RTN","LEXXM6",125,0)
 I "^CANANDAIGUA^CHILLICOTHE^COATESVILLE^CONNECTICUT^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",126,0)
 I "^GAINESVILLE^LEAVENWORTH^MARTINSBURG^MINNEAPOLIS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",127,0)
 I "^NORTHAMPTON^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",128,0)
T12 ;   12 Characters or Greater
"RTN","LEXXM6",129,0)
 N XU,CHR S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",130,0)
 ;      Exceptions
"RTN","LEXXM6",131,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,$L(XU))?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM6",132,0)
 ;      Mixed Case
"RTN","LEXXM6",133,0)
 I "^INDIANAPOLIS^MURFREESBORO^PHILADELPHIA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",134,0)
 Q
"RTN","LEXXM6",135,0)
 ;          
"RTN","LEXXM6",136,0)
LO(X) ; Lower Case
"RTN","LEXXM6",137,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM6",138,0)
UP(X) ; Uppercase
"RTN","LEXXM6",139,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM6",140,0)
MX(X) ; Mix Case
"RTN","LEXXM6",141,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM6",142,0)
LD(X) ; Leading Character
"RTN","LEXXM6",143,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM6",144,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM6",145,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM6",146,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM6",147,0)
 Q X
"RTN","LEXXMM")
0^92^B37694855
"RTN","LEXXMM",1,0)
LEXXMM ;ISL/KER - Convert Text to Mix Case (Misc) ;04/21/2014
"RTN","LEXXMM",2,0)
 ;;2.0;General Lexicon Utilities;**80**;Sep 23, 1996;Build 1
"RTN","LEXXMM",3,0)
 ;               
"RTN","LEXXMM",4,0)
 ; Global Variables
"RTN","LEXXMM",5,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","LEXXMM",6,0)
 ;               
"RTN","LEXXMM",7,0)
 ; External References
"RTN","LEXXMM",8,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXXMM",9,0)
 ;               
"RTN","LEXXMM",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXMM",11,0)
 ;     ALL,LOW checked but not used
"RTN","LEXXMM",12,0)
 ;                 
"RTN","LEXXMM",13,0)
EW(X) ; Exported Word
"RTN","LEXXMM",14,0)
 N WRD,CNT,IMC,EXP,IEN,WU,WM,ORG,SCR,TTL,WL S ORG=$G(X) Q:'$L(ORG)  S (WRD,WU)=$$UP(ORG),WM=$$MX(ORG),WL=$$LO(ORG)
"RTN","LEXXMM",15,0)
 S TTL="Supplemental Word",SCR="SUP" D EW2 S TTL="Lowercase",SCR="LOW" D EW2 S TTL="Mixed Case",SCR="MIX" D EW2
"RTN","LEXXMM",16,0)
 S TTL="Uppercase",SCR="UPP" D EW2 S TTL="Special Case",SCR="SPC" D EW2
"RTN","LEXXMM",17,0)
 Q
"RTN","LEXXMM",18,0)
EW2 ;   Exported Word Indexed
"RTN","LEXXMM",19,0)
 Q:'$L($G(WRD))  N CNT,CT,EXP,I,IEN,IMC,MA,MIX,UPP
"RTN","LEXXMM",20,0)
 I $D(^LEX(757.01,"AWRD",WRD)) D  Q
"RTN","LEXXMM",21,0)
 . N CNT,IMC S (CNT,IMC)=0 F  S IMC=$O(^LEX(757.01,"AWRD",WRD,IMC)) Q:+IMC'>0  D
"RTN","LEXXMM",22,0)
 . . N IEN,EXP S EXP=$P($G(^LEX(757.01,+IMC,0)),"^",1) Q:'$L(EXP)
"RTN","LEXXMM",23,0)
 . . S IEN=0 F  S IEN=$O(^LEX(757.01,"AWRD",WRD,IMC,IEN)) Q:+IEN'>0  D
"RTN","LEXXMM",24,0)
 . . . N CT,EXP,I,MA,MIX,UPP S EXP=$P($G(^LEX(757.01,+IEN,0)),"^",1) Q:'$L(EXP)  S MIX=$$MIX^LEXXM(EXP),UPP=$$UP(EXP) D EW3
"RTN","LEXXMM",25,0)
 I $D(^LEX(757.01,"AEXC",WRD)) D
"RTN","LEXXMM",26,0)
 . Q:SCR="SUP"  Q:SCR="LOW"&('$D(ALL))
"RTN","LEXXMM",27,0)
 . N CNT,IMC S (CNT,IMC)=0 F  S IMC=$O(^LEX(757.01,"AEXC",WRD,IMC)) Q:+IMC'>0  D
"RTN","LEXXMM",28,0)
 . . N IEN,EXP,CT,EXP,I,MA,MIX,UPP S EXP=$P($G(^LEX(757.01,+IMC,0)),"^",1) Q:'$L(EXP)
"RTN","LEXXMM",29,0)
 . . Q:'$L(EXP)  S IEN=IMC,MIX=$$MIX^LEXXM(EXP),UPP=$$UP(EXP) D EW3
"RTN","LEXXMM",30,0)
 N ALL
"RTN","LEXXMM",31,0)
 Q
"RTN","LEXXMM",32,0)
EW3 ;   Exported word is Special/Lower/Upper/Mixed case
"RTN","LEXXMM",33,0)
 Q:+IEN'>0  Q:'$L($G(TTL))  Q:'$L($G(WRD))  Q:'$L($G(SCR))  N OUT
"RTN","LEXXMM",34,0)
 I SCR="SUP",UPP'[$$UP(WRD),$D(^LEX(757.01,+IEN,5,"B",WRD)) S OUT=MIX D EW4
"RTN","LEXXMM",35,0)
 I SCR="LOW",UPP[$$UP(WRD),MIX[WL,MIX'[WU,MIX'[WM S OUT=MIX D EW4
"RTN","LEXXMM",36,0)
 I SCR="MIX",UPP[$$UP(WRD),MIX[WM,MIX'[WU,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",37,0)
 I SCR="UPP",UPP[$$UP(WRD),MIX[WU,MIX'[WM,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",38,0)
 I SCR="SPC",UPP[$$UP(WRD),MIX'[WU,MIX'[WM,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",39,0)
 Q
"RTN","LEXXMM",40,0)
EW4 ;   Exported Word Display
"RTN","LEXXMM",41,0)
 Q:+IEN'>0  Q:'$L($G(TTL))  Q:'$L($G(OUT))
"RTN","LEXXMM",42,0)
 N I,CT,OA S CT=0 S CNT=CNT+1 W:CNT=1 !!,TTL,! W !,IEN S OA(1)=OUT D PR(.OA,70)
"RTN","LEXXMM",43,0)
 S I=0 F  S I=$O(OA(I)) Q:+I'>0  I $L($G(OA(I))) S CT=CT+1 W:CT>1 ! W ?9,$G(OA(I))
"RTN","LEXXMM",44,0)
 Q
"RTN","LEXXMM",45,0)
 ;                 
"RTN","LEXXMM",46,0)
QWIC ; Create AEXC Index
"RTN","LEXXMM",47,0)
 N IEN S IEN=0 F  S IEN=$O(^LEX(757.01,IEN)) Q:+IEN'>0  D
"RTN","LEXXMM",48,0)
 . N %,%1,X,DA S X=$P($G(^LEX(757.01,+IEN,0)),"^",1),DA=+($G(IEN)) Q:+DA'>0  Q:'$L(X)
"RTN","LEXXMM",49,0)
 . S %1=1 F %=1:1:$L(X)+1 D
"RTN","LEXXMM",50,0)
 . . S I=$E(X,%) I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[I D
"RTN","LEXXMM",51,0)
 . . . S I=$E(X,%1,%-1),%1=%+1 I $L(I)>0,$L(I)<31 D
"RTN","LEXXMM",52,0)
 . . . . N WD S WD=$$UP(I) S:$L(WD) ^LEX(757.01,"AEXC",WD,DA)=""
"RTN","LEXXMM",53,0)
 Q
"RTN","LEXXMM",54,0)
PR(LEX,X) ; Parse Array LEX in X Length Strings (default 79)
"RTN","LEXXMM",55,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC,Z K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXXMM",56,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXXMM",57,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXXMM",58,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXXMM",59,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXXMM",60,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXXMM",61,0)
 Q
"RTN","LEXXMM",62,0)
 ;                 
"RTN","LEXXMM",63,0)
 ; Swap
"RTN","LEXXMM",64,0)
SW1(X) ;   Switch Text (before setting case)
"RTN","LEXXMM",65,0)
 N TXT,SWAP,WITH S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",66,0)
 S SWAP="I.E.",WITH="IE",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",67,0)
 S SWAP="E.G.",WITH="EG",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",68,0)
 S X=TXT
"RTN","LEXXMM",69,0)
 Q X
"RTN","LEXXMM",70,0)
SW2(X) ;   Switch Text (after setting case)
"RTN","LEXXMM",71,0)
 N TXT,SWAP,WITH S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",72,0)
 S SWAP="(S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",73,0)
 S SWAP=" A ",WITH=" a ",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",74,0)
 S SWAP="Class a",WITH="Clas A",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",75,0)
 S SWAP="Type a",WITH="Type A",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",76,0)
 S SWAP="'S",WITH="'s",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",77,0)
 S SWAP="mg Diet",WITH="MG Diet",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",78,0)
 S SWAP="LO-Fat",WITH="Lo-Fat",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",79,0)
 S X=$G(TXT)
"RTN","LEXXMM",80,0)
 Q X
"RTN","LEXXMM",81,0)
SW3(X) ;   Switch Text (after assembling string)
"RTN","LEXXMM",82,0)
 N TXT,C1,C2,SWAP,WITH,PIE S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",83,0)
 S SWAP=" (S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH) S SWAP="(S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",84,0)
 S SWAP="'S",WITH="'s",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",85,0)
 S SWAP=" (Only)",WITH=" (only)",TXT=$$SWAP(TXT,SWAP,WITH) S SWAP="(Only)",WITH="(only)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",86,0)
 S SWAP=" (Each)",WITH=" (each)",TXT=$$SWAP(TXT,SWAP,WITH) S SWAP="(Each)",WITH="(each)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",87,0)
 F PIE=1:1 Q:'$L($P(TXT,"&",PIE))  D
"RTN","LEXXMM",88,0)
 . S P1=$P(TXT,"&",1,PIE) Q:'$L(P1)  S P2=$P(TXT,"&",(PIE+1),$L(TXT,"&")) Q:'$L(P2)  S:P1[" "&($E(P2,1)'=" ") TXT=$$TM(P1)_"&"_$$TM(P2)
"RTN","LEXXMM",89,0)
 S X=TXT Q:$D(LOW) X  S C1=$E(X,1),C2=$E(X,2),C1=C1?1U,C2=C2?1U
"RTN","LEXXMM",90,0)
 S:(C1+C2)'=1 X=$TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXMM",91,0)
 N LOW
"RTN","LEXXMM",92,0)
 Q X
"RTN","LEXXMM",93,0)
SWAP(X,A,B) ;   Swap text "A" for text "B" in text "X"
"RTN","LEXXMM",94,0)
 N TXT,SWAP,WITH S TXT=$G(X),SWAP=$G(A),WITH=$G(B) Q:'$L(TXT) TXT  Q:'$L(SWAP) TXT  Q:TXT'[SWAP TXT  Q:SWAP=WITH TXT  Q:WITH[SWAP TXT
"RTN","LEXXMM",95,0)
 F  Q:TXT'[SWAP  S (X,TXT)=$P(TXT,SWAP,1)_WITH_$P(TXT,SWAP,2,299)
"RTN","LEXXMM",96,0)
 Q X
"RTN","LEXXMM",97,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","LEXXMM",98,0)
 S X=$G(X),Y=$G(Y) Q:$L(Y)&(X'[Y) X  S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXXMM",99,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXXMM",100,0)
 Q X
"RTN","LEXXMM",101,0)
 ;                 
"RTN","LEXXMM",102,0)
 ; Case
"RTN","LEXXMM",103,0)
IG(X) ;   Ignore Case
"RTN","LEXXMM",104,0)
 N IN,XU,CHR,TMP S IN=$G(X),XU=$$UP(IN),CHR=$E(XU,1),TMP="TYPE "_XU,TMP=$$MIX^LEXXM(TMP),TMP=$E(TMP,6,$L(TMP)) Q:TMP=IN 1
"RTN","LEXXMM",105,0)
 Q 0
"RTN","LEXXMM",106,0)
IL(X) ;   Is Lowercase
"RTN","LEXXMM",107,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:CH?1U X=0 Q:'X
"RTN","LEXXMM",108,0)
 Q X
"RTN","LEXXMM",109,0)
IU(X) ;   Is Uppercase
"RTN","LEXXMM",110,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:CH?1L X=0 Q:'X
"RTN","LEXXMM",111,0)
 Q X
"RTN","LEXXMM",112,0)
IM(X) ;   Is Mixed Case
"RTN","LEXXMM",113,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:I=1&(CH'?1U) X=0 S:I>1&(CH?1U) X=0 Q:'X
"RTN","LEXXMM",114,0)
 Q X
"RTN","LEXXMM",115,0)
IS(X) ;   Is Special Case
"RTN","LEXXMM",116,0)
 Q:$L($G(X))'>1 0  Q:$E($G(X),1)'?1A 0  N CH,PC,WD,I S WD=$G(X),X=0 F I=2:1 S CH=$E(WD,I),PC=$E(WD,(I-1)) Q:'$L(CH)  S:CH?1U&(PC?1L) X=1 Q:X>0
"RTN","LEXXMM",117,0)
 Q X
"RTN","LEXXMM",118,0)
LO(X) ;   Lower Case
"RTN","LEXXMM",119,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXMM",120,0)
UP(X) ;   Uppercase
"RTN","LEXXMM",121,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXMM",122,0)
MX(X) ;   Mix Case Term
"RTN","LEXXMM",123,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXMM",124,0)
MIX(X) ;   Mixed Case Word
"RTN","LEXXMM",125,0)
 N IN,XU,CHR,TMP S IN=$G(X),XU=$$UP(IN),CHR=$E(XU,1),TMP="TYPE "_XU,TMP=$$MIX^LEXXM(TMP),TMP=$E(TMP,6,$L(TMP)) S X=TMP
"RTN","LEXXMM",126,0)
 Q X
"RTN","LEXXST")
1^81
"RTN","LEXXST2")
1^82
"RTN","LEXXST3")
1^83
"RTN","LEXXST4")
1^84
"SEC","^DIC",757.02,757.02,0,"AUDIT")
@
"SEC","^DIC",757.02,757.02,0,"DD")
@
"SEC","^DIC",757.02,757.02,0,"DEL")
@
"SEC","^DIC",757.02,757.02,0,"LAYGO")
@
"SEC","^DIC",757.02,757.02,0,"RD")
@
"SEC","^DIC",757.02,757.02,0,"WR")
@
"SEC","^DIC",757.03,757.03,0,"AUDIT")
@
"SEC","^DIC",757.03,757.03,0,"DD")
@
"SEC","^DIC",757.03,757.03,0,"DEL")
@
"SEC","^DIC",757.03,757.03,0,"LAYGO")
@
"SEC","^DIC",757.03,757.03,0,"RD")
@
"SEC","^DIC",757.03,757.03,0,"WR")
@
"SEC","^DIC",757.033,757.033,0,"AUDIT")
@
"SEC","^DIC",757.033,757.033,0,"DD")
@
"SEC","^DIC",757.033,757.033,0,"DEL")
@
"SEC","^DIC",757.033,757.033,0,"LAYGO")
@
"SEC","^DIC",757.033,757.033,0,"RD")
@
"SEC","^DIC",757.033,757.033,0,"WR")
@
"SEC","^DIC",757.31,757.31,0,"AUDIT")
@
"SEC","^DIC",757.31,757.31,0,"DD")
@
"SEC","^DIC",757.31,757.31,0,"DEL")
@
"SEC","^DIC",757.31,757.31,0,"LAYGO")
@
"SEC","^DIC",757.31,757.31,0,"RD")
@
"SEC","^DIC",757.31,757.31,0,"WR")
@
"VER")
8.0^22.0
"^DD",757.02,757.02,0)
FIELD^^8^9
"^DD",757.02,757.02,0,"DDA")
N
"^DD",757.02,757.02,0,"DT")
3050505
"^DD",757.02,757.02,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",757.02,757.02,0,"ID",2)
S %I=Y,Y=$S('$D(^(0)):"",$D(^LEX(757.03,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(757.03,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",757.02,757.02,0,"ID",4)
W:$P($G(^LEX(757.02,+Y,0)),"^",5)>0 " Preferred"
"^DD",757.02,757.02,0,"ID",5)
W " ",$S($P($G(^LEX(757.02,+($G(Y)),4,$O(^LEX(757.02,+($G(Y)),4,"B",$O(^LEX(757.02,+($G(Y)),4,"B"," "),-1),0)),0)),"^",2)>0:"Active",1:"Inactive")
"^DD",757.02,757.02,0,"ID",6)
W:$P($G(^LEX(757.02,+Y,0)),"^",7)>0 " Primary"
"^DD",757.02,757.02,0,"IX","A10",757.28,1)

"^DD",757.02,757.02,0,"IX","ACODE",757.02,1)

"^DD",757.02,757.02,0,"IX","ACT1",757.02,1)

"^DD",757.02,757.02,0,"IX","ACT2",757.28,.01)

"^DD",757.02,757.02,0,"IX","ACT3",757.28,1)

"^DD",757.02,757.02,0,"IX","ADC",757.02,5)

"^DD",757.02,757.02,0,"IX","ADCODE",757.02,5)

"^DD",757.02,757.02,0,"IX","AMC",757.02,3)

"^DD",757.02,757.02,0,"IX","APCODE1",757.02,1)

"^DD",757.02,757.02,0,"IX","APCODE2",757.02,4)

"^DD",757.02,757.02,0,"IX","ASRC",757.02,2)

"^DD",757.02,757.02,0,"IX","AUPD",757.28,.01)

"^DD",757.02,757.02,0,"IX","AVA",757.02,2)

"^DD",757.02,757.02,0,"IX","B",757.02,.01)

"^DD",757.02,757.02,0,"IX","CODE",757.02,1)

"^DD",757.02,757.02,0,"NM","CODES")
 
"^DD",757.02,757.02,0,"PK")
LEX
"^DD",757.02,757.02,0,"VRPK")
LEX
"^DD",757.02,757.02,0,"VRRV")
87^3141001
"^DD",757.02,757.02,.01,0)
EXPRESSION^RP757.01'I^LEX(757.01,^0;1^Q
"^DD",757.02,757.02,.01,1,0)
^.1
"^DD",757.02,757.02,.01,1,1,0)
757.02^B
"^DD",757.02,757.02,.01,1,1,1)
S ^LEX(757.02,"B",$E(X,1,30),DA)=""
"^DD",757.02,757.02,.01,1,1,2)
K ^LEX(757.02,"B",$E(X,1,30),DA)
"^DD",757.02,757.02,.01,1,1,"%D",0)
^^5^5^2940902^^
"^DD",757.02,757.02,.01,1,1,"%D",1,0)
^LEX(757.02,"B",EXP,IEN) - where EXP is a pointer to the expression in the
"^DD",757.02,757.02,.01,1,1,"%D",2,0)
Expression file (#757.01) which has been assigned a classification code and 
"^DD",757.02,757.02,.01,1,1,"%D",3,0)
IEN is the Internal Entry Number in the Codes file (#757.02) where this
"^DD",757.02,757.02,.01,1,1,"%D",4,0)
expression is located.  This index is used to retrieve all codes associated
"^DD",757.02,757.02,.01,1,1,"%D",5,0)
with an expression.
"^DD",757.02,757.02,.01,3)
 
"^DD",757.02,757.02,.01,21,0)
^^5^5^2981006^^^^
"^DD",757.02,757.02,.01,21,1,0)
Pointer to the expression in the Expression file #757.01 to which a
"^DD",757.02,757.02,.01,21,2,0)
classification code (i.e., ICD, CPT, DSM code) has been assigned.  This 
"^DD",757.02,757.02,.01,21,3,0)
pointer links the code to an expression.  This expression can be a Major 
"^DD",757.02,757.02,.01,21,4,0)
Concept, a Synonym or a Lexical Variant of either the Major Concept or the
"^DD",757.02,757.02,.01,21,5,0)
Synonym.
"^DD",757.02,757.02,.01,"DT")
2931124
"^DD",757.02,757.02,1,0)
CODE^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<1) X
"^DD",757.02,757.02,1,1,0)
^.1
"^DD",757.02,757.02,1,1,1,0)
757.02^ACODE^MUMPS
"^DD",757.02,757.02,1,1,1,1)
Q:+$P($G(^LEX(757.02,DA,0)),U,6)  S ^LEX(757.02,"ACODE",X_" ",DA)=""
"^DD",757.02,757.02,1,1,1,2)
K ^LEX(757.02,"ACODE",X_" ",DA)
"^DD",757.02,757.02,1,1,1,"%D",0)
^.101^4^4^3030321^^^^
"^DD",757.02,757.02,1,1,1,"%D",1,0)
^LEX(757.02,"ACODE",CODE,IEN) - where CODE is a Classification Code (i.e., ICD
"^DD",757.02,757.02,1,1,1,"%D",2,0)
code, CPT code, DSM code, etc) and IEN is the Internal Entry Number in the
"^DD",757.02,757.02,1,1,1,"%D",3,0)
Codes file (#757.02) where this code is located.  This is an index of all 
"^DD",757.02,757.02,1,1,1,"%D",4,0)
active codes contained in this file.
"^DD",757.02,757.02,1,1,1,"DT")
3030321
"^DD",757.02,757.02,1,1,2,0)
757.02^ACT1^MUMPS
"^DD",757.02,757.02,1,1,2,1)
D SAHC^LEXNDX8
"^DD",757.02,757.02,1,1,2,2)
D KAHC^LEXNDX8
"^DD",757.02,757.02,1,1,2,"%D",0)
^^13^13^3130610^
"^DD",757.02,757.02,1,1,2,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the
"^DD",757.02,757.02,1,1,2,"%D",2,0)
classification code, STA is the status (see below), DATE is 
"^DD",757.02,757.02,1,1,2,"%D",3,0)
the date the code was activated or inactivated, IEN is the 
"^DD",757.02,757.02,1,1,2,"%D",4,0)
internal entry number in the CODES file, and HIS is the 
"^DD",757.02,757.02,1,1,2,"%D",5,0)
entry number of the Activation Status multiple where this 
"^DD",757.02,757.02,1,1,2,"%D",6,0)
historical entry may be found.
"^DD",757.02,757.02,1,1,2,"%D",7,0)
 
"^DD",757.02,757.02,1,1,2,"%D",8,0)
Values for Status:
"^DD",757.02,757.02,1,1,2,"%D",9,0)
 
"^DD",757.02,757.02,1,1,2,"%D",10,0)
  0 = Code is Inactive
"^DD",757.02,757.02,1,1,2,"%D",11,0)
  1 = Code is Active
"^DD",757.02,757.02,1,1,2,"%D",12,0)
  2 = Code for the preferred term is Inactive
"^DD",757.02,757.02,1,1,2,"%D",13,0)
  3 = Code for the preferred term is Active
"^DD",757.02,757.02,1,1,2,"DT")
3030310
"^DD",757.02,757.02,1,1,3,0)
757.02^CODE^MUMPS
"^DD",757.02,757.02,1,1,3,1)
S ^LEX(757.02,"CODE",X_" ",DA)=""
"^DD",757.02,757.02,1,1,3,2)
K ^LEX(757.02,"CODE",X_" ",DA)
"^DD",757.02,757.02,1,1,3,"%D",0)
^^4^4^3030320^
"^DD",757.02,757.02,1,1,3,"%D",1,0)
^LEX(757.02,"CODE",CODE,IEN) - Where CODE is a classification code (i.e.
"^DD",757.02,757.02,1,1,3,"%D",2,0)
ICD code, CPT code, DSM code, etc) and IEN is the Internal Entry Number
"^DD",757.02,757.02,1,1,3,"%D",3,0)
in the codes file (#757.02) where this code is located. This is an index 
"^DD",757.02,757.02,1,1,3,"%D",4,0)
of all codes contained in this file.
"^DD",757.02,757.02,1,1,3,"DT")
3030320
"^DD",757.02,757.02,1,1,4,0)
757.02^APCODE1^MUMPS
"^DD",757.02,757.02,1,1,4,1)
S:$L(X)&(+$P(^LEX(757.02,+DA,0),"^",5)>0) ^LEX(757.02,"APCODE",(X_" "),+DA)=""
"^DD",757.02,757.02,1,1,4,2)
K:$L(X)&(+$P(^LEX(757.02,+DA,0),"^",5)>0) ^LEX(757.02,"APCODE",(X_" "),+DA)
"^DD",757.02,757.02,1,1,4,"%D",0)
^^3^3^3030321^
"^DD",757.02,757.02,1,1,4,"%D",1,0)
^LEX(757.02,"APCODE",(CODE_" "),IEN) - Where CODE is a classification 
"^DD",757.02,757.02,1,1,4,"%D",2,0)
code and IEN is the internal entry number where the record pointing to 
"^DD",757.02,757.02,1,1,4,"%D",3,0)
the preferred term for the code is stored in file 757.02.
"^DD",757.02,757.02,1,1,4,"DT")
3030321
"^DD",757.02,757.02,1,3)
Answer must be 1-40 characters in length.
"^DD",757.02,757.02,1,21,0)
^^2^2^2960812^^^
"^DD",757.02,757.02,1,21,1,0)
Classification Code as described by a controlled vocabulary (i.e., ICD, 
"^DD",757.02,757.02,1,21,2,0)
CPT, etc).
"^DD",757.02,757.02,1,"DT")
3030321
"^DD",757.02,757.02,2,0)
CLASSIFICATION SOURCE^RP757.03'^LEX(757.03,^0;3^Q
"^DD",757.02,757.02,2,1,0)
^.1
"^DD",757.02,757.02,2,1,1,0)
757.02^ASRC^MUMPS
"^DD",757.02,757.02,2,1,1,1)
S ^LEX(757.02,"ASRC",$E(^LEX(757.03,X,0),1,3),DA)=""
"^DD",757.02,757.02,2,1,1,2)
K ^LEX(757.02,"ASRC",$E(^LEX(757.03,X,0),1,3),DA)
"^DD",757.02,757.02,2,1,1,"%D",0)
2^^5^5^2940902^
"^DD",757.02,757.02,2,1,1,"%D",1,0)
^LEX(757.02,"ASRC",SAB,IEN) - where SAB is the three chracter mnemonic of the 
"^DD",757.02,757.02,2,1,1,"%D",2,0)
Source Abbreviation (i.e., ICD, CPT, etc) from the Coding Systems file #757.03
"^DD",757.02,757.02,2,1,1,"%D",3,0)
and IEN is the Internal Entry Number where this type of code can be located.
"^DD",757.02,757.02,2,1,1,"%D",4,0)
This index is used extensively in filtering searches by type of code and used
"^DD",757.02,757.02,2,1,1,"%D",5,0)
to determin the type of code selected.
"^DD",757.02,757.02,2,1,1,"DT")
2930325
"^DD",757.02,757.02,2,1,2,0)
757.02^AVA^MUMPS
"^DD",757.02,757.02,2,1,2,1)
N SAB S SAB=$E(^LEX(757.03,X,0),1,3) S:"^ICD^10D^ICP^10P^CPT^CPC^BIR^DS4^NAN^HHC^NIC^SNM^OMA^SCC^SCT^"[SAB ^LEX(757.02,"AVA",($P(^LEX(757.02,DA,0),U,2)_" "),$P(^LEX(757.02,DA,0),U),SAB,DA)=""
"^DD",757.02,757.02,2,1,2,2)
S SAB=$E(^LEX(757.03,X,0),1,3) K ^LEX(757.02,"AVA",($P(^LEX(757.02,DA,0),U,2)_" "),$P(^LEX(757.02,DA,0),U),SAB,DA),SAB
"^DD",757.02,757.02,2,1,2,"%D",0)
^.101^6^6^3031015^^^^
"^DD",757.02,757.02,2,1,2,"%D",1,0)
^LEX(757.02,"AVA",CODE,SAB,IEN) - where CODE is the Classification Code from
"^DD",757.02,757.02,2,1,2,"%D",2,0)
field 1, SAB is the three character mnemonic for the source abbreviation in the
"^DD",757.02,757.02,2,1,2,"%D",3,0)
Coding Systems file #757.03 (i.e., ICD, CPT, etc) and IEN is the Internal Entry
"^DD",757.02,757.02,2,1,2,"%D",4,0)
Number in the Codes file #757.02 where the code is located.  This is an index
"^DD",757.02,757.02,2,1,2,"%D",5,0)
of only those codes frequently used by the VA (Source Abbreviation SAB is ICD, 
"^DD",757.02,757.02,2,1,2,"%D",6,0)
CPT, DSM, NAN, NIC, OMA, or SNM).
"^DD",757.02,757.02,2,1,2,"DT")
3031015
"^DD",757.02,757.02,2,21,0)
^^2^2^2940902^^
"^DD",757.02,757.02,2,21,1,0)
Pointer to the classification system (ICD/CPT/DSM etc) described in the
"^DD",757.02,757.02,2,21,2,0)
Coding Systems file (#757.03) from which the code (field 1) is derived.
"^DD",757.02,757.02,2,"DT")
3031015
"^DD",757.02,757.02,3,0)
MAJOR CONCEPT^RP757'I^LEX(757,^0;4^Q
"^DD",757.02,757.02,3,1,0)
^.1
"^DD",757.02,757.02,3,1,1,0)
757.02^AMC
"^DD",757.02,757.02,3,1,1,1)
S ^LEX(757.02,"AMC",$E(X,1,30),DA)=""
"^DD",757.02,757.02,3,1,1,2)
K ^LEX(757.02,"AMC",$E(X,1,30),DA)
"^DD",757.02,757.02,3,1,1,"%D",0)
^^4^4^2940902^^
"^DD",757.02,757.02,3,1,1,"%D",1,0)
^LEX(757.02,"AMC",MC,IEN) - where MC is a pointer to the Major Concept Map file
"^DD",757.02,757.02,3,1,1,"%D",2,0)
#757 and IEN is the Internal Entry Number of the Codes file #757.03 where this
"^DD",757.02,757.02,3,1,1,"%D",3,0)
Major Concept pointer is located.  Used to retrieve all codes associated with
"^DD",757.02,757.02,3,1,1,"%D",4,0)
a Major Concept.
"^DD",757.02,757.02,3,1,1,"DT")
2930325
"^DD",757.02,757.02,3,21,0)
^^4^4^2940902^^^
"^DD",757.02,757.02,3,21,1,0)
Pointer the the Major Concept in the Major Concept Map file #757 to which a
"^DD",757.02,757.02,3,21,2,0)
classification code (i.e., ICD, CPT, DSM code) has been assigned.  This pointer
"^DD",757.02,757.02,3,21,3,0)
links the code to the Major Concept of the expression defined in the .01 field
"^DD",757.02,757.02,3,21,4,0)
(Expression).
"^DD",757.02,757.02,3,"DT")
2931124
"^DD",757.02,757.02,4,0)
PREFERENCE FLAG^S^1:PREFERRED TERM;0:OTHER THAN PREFERRED TERM;^0;5^Q
"^DD",757.02,757.02,4,1,0)
^.1
"^DD",757.02,757.02,4,1,1,0)
757.02^APCODE2^MUMPS
"^DD",757.02,757.02,4,1,1,1)
S:+X>0&($L($P($G(^LEX(757.02,+DA,0)),U,2))) ^LEX(757.02,"APCODE",($P($G(^LEX(757.02,+DA,0)),U,2)_" "),+DA)=""
"^DD",757.02,757.02,4,1,1,2)
K:$L($P($G(^LEX(757.02,+DA,0)),U,2)) ^LEX(757.02,"APCODE",($P($G(^LEX(757.02,+DA,0)),U,2)_" "),+DA)
"^DD",757.02,757.02,4,1,1,"%D",0)
^.101^3^3^3030321^^^^
"^DD",757.02,757.02,4,1,1,"%D",1,0)
^LEX(757.02,"APCODE",(CODE_" "),IEN) - Where CODE is a classification 
"^DD",757.02,757.02,4,1,1,"%D",2,0)
code and IEN is the internal entry number where the record pointing to 
"^DD",757.02,757.02,4,1,1,"%D",3,0)
the preferred term for the code is stored in file 757.02.
"^DD",757.02,757.02,4,1,1,"DT")
3030321
"^DD",757.02,757.02,4,21,0)
^^4^4^2940902^^
"^DD",757.02,757.02,4,21,1,0)
Some codes within a coding system are linked to multiple terms.  This flag
"^DD",757.02,757.02,4,21,2,0)
indicates the preferred term of a code (within a classification system),
"^DD",757.02,757.02,4,21,3,0)
providing a one-to-one relationship between codes and terms.  This field is 
"^DD",757.02,757.02,4,21,4,0)
only populated when a code is linked to multiple terms.
"^DD",757.02,757.02,4,"DT")
3030321
"^DD",757.02,757.02,5,0)
DEACTIVATION FLAG^S^1:DEACTIVATED CODE;^0;6^Q
"^DD",757.02,757.02,5,1,0)
^.1
"^DD",757.02,757.02,5,1,1,0)
757.02^ADC^MUMPS
"^DD",757.02,757.02,5,1,1,1)
S:X=1 ^LEX(757.02,"ADC",X,DA)=""
"^DD",757.02,757.02,5,1,1,2)
K ^LEX(757.02,"ADC",X,DA)
"^DD",757.02,757.02,5,1,1,"%D",0)
^^3^3^2950405^
"^DD",757.02,757.02,5,1,1,"%D",1,0)
^LEX(757.02,"ADC",1,IEN) - This is an index of all deactivated codes in the
"^DD",757.02,757.02,5,1,1,"%D",2,0)
code file where IEN is the Internal Entry Number in the CODES file (757.02)
"^DD",757.02,757.02,5,1,1,"%D",3,0)
where the deactivated code is located.
"^DD",757.02,757.02,5,1,1,"DT")
2950405
"^DD",757.02,757.02,5,1,2,0)
757.02^ADCODE^MUMPS
"^DD",757.02,757.02,5,1,2,1)
S:X=1 ^LEX(757.02,"ADCODE",($P($G(^LEX(757.02,DA,0)),U,2)_" "),DA)=""
"^DD",757.02,757.02,5,1,2,2)
K ^LEX(757.02,"ADCODE",($P($G(^LEX(757.02,DA,0)),U,2)_" "),DA)
"^DD",757.02,757.02,5,1,2,"%D",0)
^^3^3^2970702^
"^DD",757.02,757.02,5,1,2,"%D",1,0)
^LEX(757.02,"ADCODE",DC,IEN) - Where DC is a deactivated code and IEN is the
"^DD",757.02,757.02,5,1,2,"%D",2,0)
internal entry number in the Codes file #757.02 where the deactivated code 
"^DD",757.02,757.02,5,1,2,"%D",3,0)
is located.
"^DD",757.02,757.02,5,1,2,"DT")
2970702
"^DD",757.02,757.02,5,21,0)
^^2^2^2950410^^
"^DD",757.02,757.02,5,21,1,0)
This field indicates that a code formerly in use by the Lexicon has
"^DD",757.02,757.02,5,21,2,0)
been deactivated and should not be used in lookups or displays.
"^DD",757.02,757.02,5,"DT")
2970702
"^DD",757.02,757.02,6,0)
PRIMARY FLAG^RS^0:SUPPLEMENTAL CODE;1:PRIMARY CODE;^0;7^Q
"^DD",757.02,757.02,6,21,0)
^^4^4^2950823^
"^DD",757.02,757.02,6,21,1,0)
If an expression has multiple codes from the same classification system
"^DD",757.02,757.02,6,21,2,0)
(i.e., ICD, CPT, etc) then one will be flagged as the primary code and the
"^DD",757.02,757.02,6,21,3,0)
others will be flagged as supplemental.  If there is only one code of a
"^DD",757.02,757.02,6,21,4,0)
specific classification system then it will be flagged as the primary code.
"^DD",757.02,757.02,6,"DT")
2950823
"^DD",757.02,757.02,8,0)
ACTIVATION STATUS^757.28DA^^4;0
"^DD",757.02,757.02,8,21,0)
^^2^2^3120709^
"^DD",757.02,757.02,8,21,1,0)
This is a listing of the activation history
"^DD",757.02,757.02,8,21,2,0)
for a code.
"^DD",757.02,757.02,13,0)
LEGACY CODE^F^^6;2^K:$L(X)>20!($L(X)<1) X
"^DD",757.02,757.02,13,3)
Answer must be 1-20 characters in length
"^DD",757.02,757.02,13,21,0)
^^4^4^3060127^
"^DD",757.02,757.02,13,21,1,0)
This field stores a code that under a different version of the coding 
"^DD",757.02,757.02,13,21,2,0)
system represents the same concept as the code in the current coding 
"^DD",757.02,757.02,13,21,3,0)
system. E.g. SNOMED CT (the current SNOMED code system) code 123456789 
"^DD",757.02,757.02,13,21,4,0)
might have a SNOMED 2 (legacy code system) legacy code of F-12345.
"^DD",757.02,757.02,13,"DT")
3060127
"^DD",757.02,757.28,0)
ACTIVATION STATUS SUB-FIELD^^1^2
"^DD",757.02,757.28,0,"DT")
3030305
"^DD",757.02,757.28,0,"IX","B",757.28,.01)

"^DD",757.02,757.28,0,"NM","ACTIVATION STATUS")

"^DD",757.02,757.28,0,"UP")
757.02
"^DD",757.02,757.28,.01,0)
ACTIVATION EFFECTIVE DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",757.02,757.28,.01,1,0)
^.1
"^DD",757.02,757.28,.01,1,1,0)
757.28^B
"^DD",757.02,757.28,.01,1,1,1)
S ^LEX(757.02,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",757.02,757.28,.01,1,1,2)
K ^LEX(757.02,DA(1),4,"B",$E(X,1,30),DA)
"^DD",757.02,757.28,.01,1,2,0)
757.02^ACT2^MUMPS
"^DD",757.02,757.28,.01,1,2,1)
D SAHD^LEXNDX8
"^DD",757.02,757.28,.01,1,2,2)
D KAHD^LEXNDX8
"^DD",757.02,757.28,.01,1,2,"%D",0)
^^13^13^3130610^
"^DD",757.02,757.28,.01,1,2,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the 
"^DD",757.02,757.28,.01,1,2,"%D",2,0)
classification code, STA is the status (see below), DATE is 
"^DD",757.02,757.28,.01,1,2,"%D",3,0)
the date the code was activated or inactivated, IEN is the 
"^DD",757.02,757.28,.01,1,2,"%D",4,0)
internal entry number in the CODES file, and HIS is the 
"^DD",757.02,757.28,.01,1,2,"%D",5,0)
entry number of the Activation Status multiple where this 
"^DD",757.02,757.28,.01,1,2,"%D",6,0)
historical entry may be found.
"^DD",757.02,757.28,.01,1,2,"%D",7,0)
 
"^DD",757.02,757.28,.01,1,2,"%D",8,0)
Values for Status:
"^DD",757.02,757.28,.01,1,2,"%D",9,0)
 
"^DD",757.02,757.28,.01,1,2,"%D",10,0)
  0 = Code is Inactive
"^DD",757.02,757.28,.01,1,2,"%D",11,0)
  1 = Code is Active
"^DD",757.02,757.28,.01,1,2,"%D",12,0)
  2 = Code for the preferred term is Inactive
"^DD",757.02,757.28,.01,1,2,"%D",13,0)
  3 = Code for the preferred term is Active
"^DD",757.02,757.28,.01,1,2,"DT")
3030310
"^DD",757.02,757.28,.01,1,3,0)
757.02^AUPD^MUMPS
"^DD",757.02,757.28,.01,1,3,1)
D SAUPD^LEXNDX8
"^DD",757.02,757.28,.01,1,3,2)
D KAUPD^LEXNDX8
"^DD",757.02,757.28,.01,1,3,"%D",0)
^^7^7^3121129^
"^DD",757.02,757.28,.01,1,3,"%D",1,0)
^LEX(757.02,"AUPD",SAB,DATE,IEN) - Where SAB
"^DD",757.02,757.28,.01,1,3,"%D",2,0)
is a three character source abbreviation, 
"^DD",757.02,757.28,.01,1,3,"%D",3,0)
date is the date the code became either active
"^DD",757.02,757.28,.01,1,3,"%D",4,0)
or inactive, and IEN is the internal entry 
"^DD",757.02,757.28,.01,1,3,"%D",5,0)
number where this update occurred.  This is 
"^DD",757.02,757.28,.01,1,3,"%D",6,0)
used to track updates to the file by coding
"^DD",757.02,757.28,.01,1,3,"%D",7,0)
system.
"^DD",757.02,757.28,.01,1,3,"DT")
3121129
"^DD",757.02,757.28,.01,3)
(No range limit on date)
"^DD",757.02,757.28,.01,"DT")
3121129
"^DD",757.02,757.28,1,0)
ACTIVATION STATUS^S^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",757.02,757.28,1,1,0)
^.1
"^DD",757.02,757.28,1,1,1,0)
757.02^ACT3^MUMPS
"^DD",757.02,757.28,1,1,1,1)
D SAHS^LEXNDX8
"^DD",757.02,757.28,1,1,1,2)
D KAHS^LEXNDX8
"^DD",757.02,757.28,1,1,1,"%D",0)
^^13^13^3130610^
"^DD",757.02,757.28,1,1,1,"%D",1,0)
^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS) - Where CODE is the 
"^DD",757.02,757.28,1,1,1,"%D",2,0)
classification code, STA is the status (see below), DATE is 
"^DD",757.02,757.28,1,1,1,"%D",3,0)
the date the code was activated or inactivated, IEN is the 
"^DD",757.02,757.28,1,1,1,"%D",4,0)
internal entry number in the CODES file, and HIS is the entry
"^DD",757.02,757.28,1,1,1,"%D",5,0)
number of the Activation Status multiple where this historical
"^DD",757.02,757.28,1,1,1,"%D",6,0)
entry may be found.
"^DD",757.02,757.28,1,1,1,"%D",7,0)
 
"^DD",757.02,757.28,1,1,1,"%D",8,0)
Values for Status:
"^DD",757.02,757.28,1,1,1,"%D",9,0)
 
"^DD",757.02,757.28,1,1,1,"%D",10,0)
  0 = Code is Inactive
"^DD",757.02,757.28,1,1,1,"%D",11,0)
  1 = Code is Active
"^DD",757.02,757.28,1,1,1,"%D",12,0)
  2 = Code for the preferred term is Inactive
"^DD",757.02,757.28,1,1,1,"%D",13,0)
  3 = Code for the preferred term is Active
"^DD",757.02,757.28,1,1,1,"DT")
3030310
"^DD",757.02,757.28,1,1,2,0)
757.02^A10^MUMPS
"^DD",757.02,757.28,1,1,2,1)
D S10^LEXNDX8
"^DD",757.02,757.28,1,1,2,2)
D K10^LEXNDX8
"^DD",757.02,757.28,1,1,2,"%D",0)
^^8^8^3120222^
"^DD",757.02,757.28,1,1,2,"%D",1,0)
^LEX(757.02,IDX,CODE,DATE,STA,IEN,HIS) - Where IDX is the 
"^DD",757.02,757.28,1,1,2,"%D",2,0)
cross-reference ("ADX" for ICD-10 Diagnosis and "APR" for 
"^DD",757.02,757.28,1,1,2,"%D",3,0)
ICD-10 Procedures), CODE is the classification code, STA is 
"^DD",757.02,757.28,1,1,2,"%D",4,0)
the status (either 1 for active or 0 for inactive), DATE is 
"^DD",757.02,757.28,1,1,2,"%D",5,0)
the date the code was activated or inactivated, IEN is the
"^DD",757.02,757.28,1,1,2,"%D",6,0)
internal entry number in the CODES file, and HIS is the 
"^DD",757.02,757.28,1,1,2,"%D",7,0)
entry number of the Activation Status multiple where this 
"^DD",757.02,757.28,1,1,2,"%D",8,0)
historical entry may be found.
"^DD",757.02,757.28,1,1,2,"DT")
3110508
"^DD",757.02,757.28,1,21,0)
^^3^3^3120531^
"^DD",757.02,757.28,1,21,1,0)
This is the activation status, 1 indicates the
"^DD",757.02,757.28,1,21,2,0)
code is active and 0 indicates the code is
"^DD",757.02,757.28,1,21,3,0)
inactive.
"^DD",757.02,757.28,1,"DT")
3120531
"^DD",757.03,757.03,0)
FIELD^^12^11
"^DD",757.03,757.03,0,"DDA")
N
"^DD",757.03,757.03,0,"DT")
3120731
"^DD",757.03,757.03,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",757.03,757.03,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",757.03,757.03,0,"IX","ASAB",757.03,.01)

"^DD",757.03,757.03,0,"IX","B",757.03,.01)

"^DD",757.03,757.03,0,"IX","C",757.03,1)

"^DD",757.03,757.03,0,"IX","D",757.03,7)

"^DD",757.03,757.03,0,"NM","CODING SYSTEMS")

"^DD",757.03,757.03,0,"PK")
LEX
"^DD",757.03,757.03,0,"PT",757.02,2)

"^DD",757.03,757.03,0,"PT",757.033,.04)

"^DD",757.03,757.03,0,"PT",757.118,1)

"^DD",757.03,757.03,0,"PT",757.32,3)

"^DD",757.03,757.03,0,"PT",757.32,4)

"^DD",757.03,757.03,0,"VRPK")
LEX
"^DD",757.03,757.03,0,"VRRV")
87^3141001
"^DD",757.03,757.03,.01,0)
SOURCE ABBREVIATION^RF^^0;1^K:$L(X)>7!($L(X)<3) X
"^DD",757.03,757.03,.01,.1)
SAB
"^DD",757.03,757.03,.01,1,0)
^.1
"^DD",757.03,757.03,.01,1,1,0)
757.03^B
"^DD",757.03,757.03,.01,1,1,1)
S ^LEX(757.03,"B",$E(X,1,30),DA)=""
"^DD",757.03,757.03,.01,1,1,2)
K ^LEX(757.03,"B",$E(X,1,30),DA)
"^DD",757.03,757.03,.01,1,1,"%D",0)
^^3^3^2950922^^
"^DD",757.03,757.03,.01,1,1,"%D",1,0)
^LEX(757.03,"B",SAB,IEN) - where SAB is the Source Abbreviation and IEN is the
"^DD",757.03,757.03,.01,1,1,"%D",2,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,1,"%D",3,0)
located.
"^DD",757.03,757.03,.01,1,2,0)
757.03^ASAB^MUMPS
"^DD",757.03,757.03,.01,1,2,1)
S ^LEX(757.03,"ASAB",$E(X,1,3),DA)=""
"^DD",757.03,757.03,.01,1,2,2)
K ^LEX(757.03,"ASAB",$E(X,1,3),DA)
"^DD",757.03,757.03,.01,1,2,"%D",0)
^^4^4^2960215^
"^DD",757.03,757.03,.01,1,2,"%D",1,0)
^LEX(757.03,"ASAB",SAB,IEN) - where SAB is a three representation of the 
"^DD",757.03,757.03,.01,1,2,"%D",2,0)
Source Abbreviation as used in the search filter DIC("S"), and IEN is the
"^DD",757.03,757.03,.01,1,2,"%D",3,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,2,"%D",4,0)
located.
"^DD",757.03,757.03,.01,1,2,"DT")
2960215
"^DD",757.03,757.03,.01,3)
Answer must be 3-7 characters in length.
"^DD",757.03,757.03,.01,21,0)
^^4^4^2950110^^^^
"^DD",757.03,757.03,.01,21,1,0)
Three to six character identifier for the source of the classification
"^DD",757.03,757.03,.01,21,2,0)
code located in the Codes file (#757.02).  The normal format is a three
"^DD",757.03,757.03,.01,21,3,0)
character mnemonic for the classification source, appended with the year
"^DD",757.03,757.03,.01,21,4,0)
of publication of the source (i.e., ICD89).
"^DD",757.03,757.03,.01,"DT")
3080128
"^DD",757.03,757.03,1,0)
NOMENCLATURE^RF^^0;2^K:$L(X)>11!($L(X)<2) X
"^DD",757.03,757.03,1,1,0)
^.1
"^DD",757.03,757.03,1,1,1,0)
757.03^C
"^DD",757.03,757.03,1,1,1,1)
S ^LEX(757.03,"C",$E(X,1,30),DA)=""
"^DD",757.03,757.03,1,1,1,2)
K ^LEX(757.03,"C",$E(X,1,30),DA)
"^DD",757.03,757.03,1,1,1,"%D",1,0)
^LEX(757.03,"C",NOM,IEN) - Where NOM is the abbreviated nomenclature for a
"^DD",757.03,757.03,1,1,1,"%D",2,0)
specified coding or classification system and IEN is the Internal Entry Number
"^DD",757.03,757.03,1,1,1,"%D",3,0)
where the nomenclature is located.
"^DD",757.03,757.03,1,1,1,"DT")
2950922
"^DD",757.03,757.03,1,3)
Answer must be 2-11 characters in length.
"^DD",757.03,757.03,1,21,0)
^^2^2^2950919^^^^
"^DD",757.03,757.03,1,21,1,0)
Short title for the classification source.  This is the name normally used
"^DD",757.03,757.03,1,21,2,0)
to refer to the source (i.e., ICD-9, CPT-4, DSM-IIIR, SNOMED etc.)
"^DD",757.03,757.03,1,"DT")
2970430
"^DD",757.03,757.03,2,0)
SOURCE TITLE^RF^^0;3^K:$L(X)>70!($L(X)<2) X
"^DD",757.03,757.03,2,3)
Answer must be 2-70 characters in length.
"^DD",757.03,757.03,2,21,0)
^^2^2^2950920^^^
"^DD",757.03,757.03,2,21,1,0)
Full title of source.  Also includes edition/revision and year of
"^DD",757.03,757.03,2,21,2,0)
publication when available.
"^DD",757.03,757.03,2,"DT")
3120731
"^DD",757.03,757.03,3,0)
SOURCE^F^^0;4^K:$L(X)>50!($L(X)<2) X
"^DD",757.03,757.03,3,3)
Answer must be 2-50 characters in length.
"^DD",757.03,757.03,3,21,0)
^^1^1^2950919^
"^DD",757.03,757.03,3,21,1,0)
This is source of the named coding system.
"^DD",757.03,757.03,3,"DT")
2950919
"^DD",757.03,757.03,4,0)
ENTRIES^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,4,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,4,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,4,21,1,0)
This is the number of coded entries found in the Lexicon (by classification
"^DD",757.03,757.03,4,21,2,0)
system) at the time of export.  NOTE:  This does not include deactivated
"^DD",757.03,757.03,4,21,3,0)
entries.
"^DD",757.03,757.03,4,"DT")
2950919
"^DD",757.03,757.03,5,0)
UNIQUE ENTRIES^NJ10,0^^0;6^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,5,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,5,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,5,21,1,0)
This is the number of unique coded entries found in the Lexicon (by
"^DD",757.03,757.03,5,21,2,0)
classification system) at the time of export.  NOTE:  This does not include
"^DD",757.03,757.03,5,21,3,0)
deactivated entries.
"^DD",757.03,757.03,5,"DT")
2950919
"^DD",757.03,757.03,6,0)
INACTIVE VERSION^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",757.03,757.03,6,3)
Answer must be 1-20 characters in length.
"^DD",757.03,757.03,6,21,0)
^^2^2^2960415^
"^DD",757.03,757.03,6,21,1,0)
This represents the version number of the source file for which inactivated
"^DD",757.03,757.03,6,21,2,0)
codes are derived.
"^DD",757.03,757.03,6,"DT")
2960415
"^DD",757.03,757.03,7,0)
HL7 CODING SYSTEM^F^^0;8^K:$L(X)>40!($L(X)<2) X
"^DD",757.03,757.03,7,.1)
HL7 CODE SYSTEM
"^DD",757.03,757.03,7,1,0)
^.1
"^DD",757.03,757.03,7,1,1,0)
757.03^D
"^DD",757.03,757.03,7,1,1,1)
S ^LEX(757.03,"D",$E(X,1,30),DA)=""
"^DD",757.03,757.03,7,1,1,2)
K ^LEX(757.03,"D",$E(X,1,30),DA)
"^DD",757.03,757.03,7,1,1,"%D",0)
^^1^1^3020118^
"^DD",757.03,757.03,7,1,1,"%D",1,0)
HL7 Coding System cross reference
"^DD",757.03,757.03,7,1,1,"DT")
3020118
"^DD",757.03,757.03,7,3)
Answer must be 2-40 characters in length
"^DD",757.03,757.03,7,21,0)
^^1^1^3020118^
"^DD",757.03,757.03,7,21,1,0)
This is the HL7 coding system mnemonic for the Lexicon coding system
"^DD",757.03,757.03,7,"DT")
3020118
"^DD",757.03,757.03,10,0)
SDO VERSION^757.08D^^1;0
"^DD",757.03,757.03,10,21,0)
^^4^4^3120531^
"^DD",757.03,757.03,10,21,1,0)
This multiple stores the Standards Development Organization's (SDO) 
"^DD",757.03,757.03,10,21,2,0)
nomenclature that identifies the versions of their code systems and their
"^DD",757.03,757.03,10,21,3,0)
associated dates. This information will be essential to applications that
"^DD",757.03,757.03,10,21,4,0)
share code systems data with external agencies.
"^DD",757.03,757.03,10,"DT")
3061018
"^DD",757.03,757.03,11,0)
IMPLEMENTATION DATE^D^^2;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",757.03,757.03,11,3)
Enter the Coding System Implementation Date.
"^DD",757.03,757.03,11,21,0)
^^14^14^3120105^
"^DD",757.03,757.03,11,21,1,0)
This is either the VistA implementation date or the
"^DD",757.03,757.03,11,21,2,0)
initial publication date.  If the VistA implementation
"^DD",757.03,757.03,11,21,3,0)
date is different from the initial publication date 
"^DD",757.03,757.03,11,21,4,0)
then the VistA date will be used, i.e.
"^DD",757.03,757.03,11,21,5,0)
 
"^DD",757.03,757.03,11,21,6,0)
   ICD-10 Published (world wide)  Jan 1, 1992
"^DD",757.03,757.03,11,21,7,0)
   ICD-10 VistA Implementation    Oct 1, 2013
"^DD",757.03,757.03,11,21,8,0)
 
"^DD",757.03,757.03,11,21,9,0)
      Oct 1, 2013 is used for ICD-10
"^DD",757.03,757.03,11,21,10,0)
 
"^DD",757.03,757.03,11,21,11,0)
   UMDNS Published (world-wide)   Jan 1, 1993
"^DD",757.03,757.03,11,21,12,0)
   UMDNS VistA Implementation         N/A
"^DD",757.03,757.03,11,21,13,0)
 
"^DD",757.03,757.03,11,21,14,0)
      Jan 1, 1993 is used for UMDNS
"^DD",757.03,757.03,11,"DT")
3120105
"^DD",757.03,757.03,12,0)
SEARCH THRESHOLD^NJ8,0^^2;2^K:+X'=X!(X>10000000)!(X<3000)!(X?.E1"."1.N) X
"^DD",757.03,757.03,12,3)
Enter a number between 3000 and 10000000, 0 decimal digits.
"^DD",757.03,757.03,12,21,0)
^^7^7^3120306^
"^DD",757.03,757.03,12,21,1,0)
This number is the maximum number of terms that
"^DD",757.03,757.03,12,21,2,0)
should be looked at before a warning is issued
"^DD",757.03,757.03,12,21,3,0)
to the user.  The application would ask the
"^DD",757.03,757.03,12,21,4,0)
user if they wanted to continue with the search
"^DD",757.03,757.03,12,21,5,0)
(knowing in advance that it will take quite some
"^DD",757.03,757.03,12,21,6,0)
time) or if they wanted to further specify the input
"^DD",757.03,757.03,12,21,7,0)
search parameter.  This is a site editable field.
"^DD",757.03,757.03,12,"DT")
3120306
"^DD",757.03,757.08,0)
SDO VERSION SUB-FIELD^^1^2
"^DD",757.03,757.08,0,"DT")
3061018
"^DD",757.03,757.08,0,"IX","B",757.08,.01)

"^DD",757.03,757.08,0,"NM","SDO VERSION")

"^DD",757.03,757.08,0,"UP")
757.03
"^DD",757.03,757.08,.01,0)
SDO VERSION EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",757.03,757.08,.01,1,0)
^.1
"^DD",757.03,757.08,.01,1,1,0)
757.08^B
"^DD",757.03,757.08,.01,1,1,1)
S ^LEX(757.03,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.03,757.08,.01,1,1,2)
K ^LEX(757.03,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.03,757.08,.01,3)
Enter the SDO Version Effective Date.
"^DD",757.03,757.08,.01,21,0)
^^2^2^3120531^
"^DD",757.03,757.08,.01,21,1,0)
This is the effective date for the nomenclature's 
"^DD",757.03,757.08,.01,21,2,0)
version.
"^DD",757.03,757.08,.01,"DT")
3120531
"^DD",757.03,757.08,1,0)
SDO VERSION IDENTIFIER^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",757.03,757.08,1,3)
Answer must be 1-40 characters in length.
"^DD",757.03,757.08,1,21,0)
^^3^3^3120531^
"^DD",757.03,757.08,1,21,1,0)
This is the Standards Development Organization's
"^DD",757.03,757.08,1,21,2,0)
(SDO) nomenclature for referencing a specific 
"^DD",757.03,757.08,1,21,3,0)
version of a code system.
"^DD",757.03,757.08,1,"DT")
3120531
"^DD",757.033,757.033,0)
FIELD^^.05^10
"^DD",757.033,757.033,0,"DDA")
N
"^DD",757.033,757.033,0,"DT")
3120318
"^DD",757.033,757.033,0,"IX","B",757.033,.01)

"^DD",757.033,757.033,0,"NM","CHARACTER POSITIONS")

"^DD",757.033,757.033,0,"VRPK")
LEX
"^DD",757.033,757.033,0,"VRRV")
87^3141001
"^DD",757.033,757.033,.01,0)
IDENTIFIER^RF^^0;1^K:$L(X)>30!($L(X)<4)!'(X'?1P.E) X
"^DD",757.033,757.033,.01,1,0)
^.1
"^DD",757.033,757.033,.01,1,1,0)
757.033^B
"^DD",757.033,757.033,.01,1,1,1)
S ^LEX(757.033,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.033,.01,1,1,2)
K ^LEX(757.033,"B",$E(X,1,30),DA)
"^DD",757.033,757.033,.01,1,1,"%D",0)
^^4^4^3120320^
"^DD",757.033,757.033,.01,1,1,"%D",1,0)
^LEX(757.033,"B",UID,IEN) - Where UID is a
"^DD",757.033,757.033,.01,1,1,"%D",2,0)
unique identifier for a character position and
"^DD",757.033,757.033,.01,1,1,"%D",3,0)
IEN is the internal entry number where the 
"^DD",757.033,757.033,.01,1,1,"%D",4,0)
unique identifier is stored.
"^DD",757.033,757.033,.01,3)
Enter a unique identifier, 4-30 characters in length.
"^DD",757.033,757.033,.01,21,0)
^^2^2^3120318^
"^DD",757.033,757.033,.01,21,1,0)
This is a unique identifier consisting of the 
"^DD",757.033,757.033,.01,21,2,0)
source abbreviation and a code fragment.
"^DD",757.033,757.033,.01,"DT")
3120318
"^DD",757.033,757.033,.02,0)
FRAGMENT^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",757.033,757.033,.02,3)
Enter a code fragment, 1-30 characters in length.
"^DD",757.033,757.033,.02,21,0)
^^3^3^3120318^
"^DD",757.033,757.033,.02,21,1,0)
This is a portion of a code (fragment) that specifies
"^DD",757.033,757.033,.02,21,2,0)
a character (last character of the fragment) and a
"^DD",757.033,757.033,.02,21,3,0)
character position (length of fragment). 
"^DD",757.033,757.033,.02,"DT")
3120318
"^DD",757.033,757.033,.03,0)
DATE ENTERED^D^^0;3^S %DT="E" D ^%DT S X=Y K:3110913>X X
"^DD",757.033,757.033,.03,3)
Enter a date, not earlier than SEP 13, 2011.
"^DD",757.033,757.033,.03,21,0)
^^1^1^3120317^
"^DD",757.033,757.033,.03,21,1,0)
This is the date the code fragment was initially entered.
"^DD",757.033,757.033,.03,"DT")
3120317
"^DD",757.033,757.033,.04,0)
SOURCE^P757.03'^LEX(757.03,^0;4^Q
"^DD",757.033,757.033,.04,3)
Enter the coding system (source) for the code fragment.
"^DD",757.033,757.033,.04,21,0)
^^2^2^3120318^
"^DD",757.033,757.033,.04,21,1,0)
This is the coding system (source) that the code
"^DD",757.033,757.033,.04,21,2,0)
fragment belongs to.
"^DD",757.033,757.033,.04,"DT")
3120323
"^DD",757.033,757.033,.05,0)
DETAILS^S^1:YES;^0;5^Q
"^DD",757.033,757.033,.05,3)
Enter 'Yes' if this code fragment has additional details.
"^DD",757.033,757.033,.05,21,0)
^^3^3^3120318^
"^DD",757.033,757.033,.05,21,1,0)
This is a flag to indicate if the fragment should
"^DD",757.033,757.033,.05,21,2,0)
have additonal details, i.e., description, explanation
"^DD",757.033,757.033,.05,21,3,0)
or inclusions.
"^DD",757.033,757.033,.05,"DT")
3120318
"^DD",757.033,757.033,1,0)
STATUS^757.331D^^1;0
"^DD",757.033,757.033,1,21,0)
^^1^1^3120317^
"^DD",757.033,757.033,1,21,1,0)
This multiple tracks the activation status of a code fragment.
"^DD",757.033,757.033,2,0)
NAME/TITLE^757.332D^^2;0
"^DD",757.033,757.033,2,21,0)
^^3^3^3120318^
"^DD",757.033,757.033,2,21,1,0)
This is a history of names/titles for a
"^DD",757.033,757.033,2,21,2,0)
character position identified by a code
"^DD",757.033,757.033,2,21,3,0)
fragment.
"^DD",757.033,757.033,3,0)
DESCRIPTION^757.043D^^3;0
"^DD",757.033,757.033,3,21,0)
^^2^2^3120318^
"^DD",757.033,757.033,3,21,1,0)
This is a history of descriptions for a character
"^DD",757.033,757.033,3,21,2,0)
position identified by a code fragment.
"^DD",757.033,757.033,3,"DT")
3120318
"^DD",757.033,757.033,4,0)
EXPLANATION^757.334D^^4;0
"^DD",757.033,757.033,4,21,0)
^^2^2^3120318^
"^DD",757.033,757.033,4,21,1,0)
This is a history of Explanations for a character
"^DD",757.033,757.033,4,21,2,0)
position identified by a code fragment.
"^DD",757.033,757.033,4,"DT")
3120318
"^DD",757.033,757.033,5,0)
INCLUDES^757.335D^^5;0
"^DD",757.033,757.033,5,21,0)
^^3^3^3120320^
"^DD",757.033,757.033,5,21,1,0)
This is a history of terminology synonyms for the
"^DD",757.033,757.033,5,21,2,0)
character identified by the code fragment.  There
"^DD",757.033,757.033,5,21,3,0)
can be multiple synonyms.
"^DD",757.033,757.033,5,"DT")
3120318
"^DD",757.033,757.043,0)
DESCRIPTION SUB-FIELD^^.02^2
"^DD",757.033,757.043,0,"DT")
3120317
"^DD",757.033,757.043,0,"IX","B",757.043,.01)

"^DD",757.033,757.043,0,"NM","DESCRIPTION")

"^DD",757.033,757.043,0,"UP")
757.033
"^DD",757.033,757.043,.01,0)
DESCRIPTION EFFECTIVE DATE^MD^^0;1^S %DT="E" D ^%DT S X=Y K:3101001>X X
"^DD",757.033,757.043,.01,1,0)
^.1
"^DD",757.033,757.043,.01,1,1,0)
757.043^B
"^DD",757.033,757.043,.01,1,1,1)
S ^LEX(757.033,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.043,.01,1,1,2)
K ^LEX(757.033,DA(1),3,"B",$E(X,1,30),DA)
"^DD",757.033,757.043,.01,1,1,"%D",0)
^.101^5^5^3120320^^
"^DD",757.033,757.043,.01,1,1,"%D",1,0)
^LEX(757.033,IEN1,3,"B",DATE,IEN2) - Where IEN1
"^DD",757.033,757.043,.01,1,1,"%D",2,0)
is the file level internal entry number, DATE 
"^DD",757.033,757.043,.01,1,1,"%D",3,0)
is the effective date of the Description, and 
"^DD",757.033,757.043,.01,1,1,"%D",4,0)
IEN2 is the DESCRIPTION sub-file internal entry
"^DD",757.033,757.043,.01,1,1,"%D",5,0)
number where the Description is stored.
"^DD",757.033,757.043,.01,3)
Enter a date, not earlier than Oct 1, 2010.
"^DD",757.033,757.043,.01,21,0)
^^1^1^3120318^
"^DD",757.033,757.043,.01,21,1,0)
This is the date the description became effective.
"^DD",757.033,757.043,.01,"DT")
3120508
"^DD",757.033,757.043,.02,0)
DESCRIPTION^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",757.033,757.043,.02,3)
Enter a description, 1-245 characters in length.
"^DD",757.033,757.043,.02,21,0)
^^9^9^3120328^
"^DD",757.033,757.043,.02,21,1,0)
This is the description or definition of the 
"^DD",757.033,757.043,.02,21,2,0)
character position identified by the code
"^DD",757.033,757.043,.02,21,3,0)
fragment.
"^DD",757.033,757.043,.02,21,4,0)
 
"^DD",757.033,757.043,.02,21,5,0)
Note:  ICD diagnosis (disease, syndrome, 
"^DD",757.033,757.043,.02,21,6,0)
finding, injury or symptom) characters come
"^DD",757.033,757.043,.02,21,7,0)
with descriptions.  ICD procedure (laboratory,
"^DD",757.033,757.043,.02,21,8,0)
diagnostic or therapeutic activities) 
"^DD",757.033,757.043,.02,21,9,0)
characters come with definitions.
"^DD",757.033,757.043,.02,"DT")
3120328
"^DD",757.033,757.331,0)
STATUS SUB-FIELD^^.02^2
"^DD",757.033,757.331,0,"DT")
3120317
"^DD",757.033,757.331,0,"IX","B",757.331,.01)

"^DD",757.033,757.331,0,"NM","STATUS")

"^DD",757.033,757.331,0,"UP")
757.033
"^DD",757.033,757.331,.01,0)
STATUS EFFECTIVE DATE^MD^^0;1^S %DT="E" D ^%DT S X=Y K:3101001>X X
"^DD",757.033,757.331,.01,1,0)
^.1
"^DD",757.033,757.331,.01,1,1,0)
757.331^B
"^DD",757.033,757.331,.01,1,1,1)
S ^LEX(757.033,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.331,.01,1,1,2)
K ^LEX(757.033,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.033,757.331,.01,1,1,"%D",0)
^^5^5^3120320^
"^DD",757.033,757.331,.01,1,1,"%D",1,0)
^LEX(757.033,IEN1,1,"B",DATE,IEN2) - Where IEN1
"^DD",757.033,757.331,.01,1,1,"%D",2,0)
is the file level internal entry number, DATE 
"^DD",757.033,757.331,.01,1,1,"%D",3,0)
is the effective date of the status, and IEN2
"^DD",757.033,757.331,.01,1,1,"%D",4,0)
is the STATUS sub-file internal entry number 
"^DD",757.033,757.331,.01,1,1,"%D",5,0)
where the status is stored.
"^DD",757.033,757.331,.01,3)
Enter a date, not earlier than Oct 1, 2010.
"^DD",757.033,757.331,.01,21,0)
^^1^1^3120317^
"^DD",757.033,757.331,.01,21,1,0)
This the date that the status became effective.
"^DD",757.033,757.331,.01,"DT")
3120328
"^DD",757.033,757.331,.02,0)
STATUS^S^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",757.033,757.331,.02,3)
Enter the status of the code fragment.
"^DD",757.033,757.331,.02,21,0)
^^2^2^3120306^
"^DD",757.033,757.331,.02,21,1,0)
This field indicates the status (active or inactive)
"^DD",757.033,757.331,.02,21,2,0)
of the code fragment (.02).
"^DD",757.033,757.331,.02,"DT")
3120317
"^DD",757.033,757.332,0)
NAME/TITLE SUB-FIELD^^.02^2
"^DD",757.033,757.332,0,"DT")
3120317
"^DD",757.033,757.332,0,"IX","B",757.332,.01)

"^DD",757.033,757.332,0,"NM","NAME/TITLE")

"^DD",757.033,757.332,0,"UP")
757.033
"^DD",757.033,757.332,.01,0)
NAME/TITLE EFFECTIVE DATE^MD^^0;1^S %DT="E" D ^%DT S X=Y K:3101001>X X
"^DD",757.033,757.332,.01,1,0)
^.1
"^DD",757.033,757.332,.01,1,1,0)
757.332^B
"^DD",757.033,757.332,.01,1,1,1)
S ^LEX(757.033,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.332,.01,1,1,2)
K ^LEX(757.033,DA(1),2,"B",$E(X,1,30),DA)
"^DD",757.033,757.332,.01,1,1,"%D",0)
^^5^5^3120320^
"^DD",757.033,757.332,.01,1,1,"%D",1,0)
^LEX(757.033,IEN1,2,"B",DATE,IEN2) - Where IEN1
"^DD",757.033,757.332,.01,1,1,"%D",2,0)
is the file level internal entry number, DATE 
"^DD",757.033,757.332,.01,1,1,"%D",3,0)
is the effective date of the Name/Title, and IEN2 
"^DD",757.033,757.332,.01,1,1,"%D",4,0)
is the NAME/TITLE sub-file internal entry number 
"^DD",757.033,757.332,.01,1,1,"%D",5,0)
where the Name or Title is stored.
"^DD",757.033,757.332,.01,3)
Enter a date, not earlier than Oct 1, 2010.
"^DD",757.033,757.332,.01,21,0)
^^1^1^3120328^
"^DD",757.033,757.332,.01,21,1,0)
This is the date that the name or title became effective.
"^DD",757.033,757.332,.01,"DT")
3120328
"^DD",757.033,757.332,.02,0)
NAME/TITLE^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",757.033,757.332,.02,3)
Enter a name or title, 1-245 characters in length.
"^DD",757.033,757.332,.02,"DT")
3120320
"^DD",757.033,757.334,0)
EXPLANATION SUB-FIELD^^.02^2
"^DD",757.033,757.334,0,"DT")
3120317
"^DD",757.033,757.334,0,"IX","B",757.334,.01)

"^DD",757.033,757.334,0,"NM","EXPLANATION")

"^DD",757.033,757.334,0,"UP")
757.033
"^DD",757.033,757.334,.01,0)
EXPLANATION EFFECTIVE DATE^MD^^0;1^S %DT="E" D ^%DT S X=Y K:3101001>X X
"^DD",757.033,757.334,.01,1,0)
^.1
"^DD",757.033,757.334,.01,1,1,0)
757.334^B
"^DD",757.033,757.334,.01,1,1,1)
S ^LEX(757.033,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.334,.01,1,1,2)
K ^LEX(757.033,DA(1),4,"B",$E(X,1,30),DA)
"^DD",757.033,757.334,.01,1,1,"%D",0)
^^5^5^3120320^
"^DD",757.033,757.334,.01,1,1,"%D",1,0)
^LEX(757.033,IEN1,4,"B",DATE,IEN2) - Where IEN1
"^DD",757.033,757.334,.01,1,1,"%D",2,0)
is the file level internal entry number, DATE 
"^DD",757.033,757.334,.01,1,1,"%D",3,0)
is the effective date of the explanation, and 
"^DD",757.033,757.334,.01,1,1,"%D",4,0)
IEN2 is the EXPLANATION sub-file internal entry 
"^DD",757.033,757.334,.01,1,1,"%D",5,0)
number where the explanation is stored.
"^DD",757.033,757.334,.01,3)
Enter a date, not earlier than Oct 1, 2010.
"^DD",757.033,757.334,.01,21,0)
^^1^1^3120318^
"^DD",757.033,757.334,.01,21,1,0)
This is the effective date of the explanation.
"^DD",757.033,757.334,.01,"DT")
3120318
"^DD",757.033,757.334,.02,0)
EXPLANATION^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",757.033,757.334,.02,3)
Enter an explanation, 1-245 characters in length.
"^DD",757.033,757.334,.02,21,0)
^^4^4^3120318^
"^DD",757.033,757.334,.02,21,1,0)
This is the explanation of the character identified
"^DD",757.033,757.334,.02,21,2,0)
by the code fragment.  The explanation, if present, 
"^DD",757.033,757.334,.02,21,3,0)
provides further elaboration to the description 
"^DD",757.033,757.334,.02,21,4,0)
or definition.
"^DD",757.033,757.334,.02,"DT")
3120320
"^DD",757.033,757.335,0)
INCLUDES SUB-FIELD^^.02^2
"^DD",757.033,757.335,0,"DT")
3120318
"^DD",757.033,757.335,0,"IX","B",757.335,.01)

"^DD",757.033,757.335,0,"NM","INCLUDES")

"^DD",757.033,757.335,0,"UP")
757.033
"^DD",757.033,757.335,.01,0)
INCLUDES EFFECTIVE DATE^MD^^0;1^S %DT="E" D ^%DT S X=Y K:3101001>X X
"^DD",757.033,757.335,.01,1,0)
^.1
"^DD",757.033,757.335,.01,1,1,0)
757.335^B
"^DD",757.033,757.335,.01,1,1,1)
S ^LEX(757.033,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",757.033,757.335,.01,1,1,2)
K ^LEX(757.033,DA(1),5,"B",$E(X,1,30),DA)
"^DD",757.033,757.335,.01,1,1,"%D",0)
^^5^5^3120320^
"^DD",757.033,757.335,.01,1,1,"%D",1,0)
^LEX(757.033,IEN1,5,"B",DATE,IEN2) - Where IEN1
"^DD",757.033,757.335,.01,1,1,"%D",2,0)
is the file level internal entry number, DATE 
"^DD",757.033,757.335,.01,1,1,"%D",3,0)
is the effective date of the included synonyms, 
"^DD",757.033,757.335,.01,1,1,"%D",4,0)
and IEN2 is the INCLUDES sub-file internal entry 
"^DD",757.033,757.335,.01,1,1,"%D",5,0)
number where the included synonym is stored.
"^DD",757.033,757.335,.01,3)
Enter a date, not earlier than Oct 1, 2010.
"^DD",757.033,757.335,.01,21,0)
^^2^2^3120328^
"^DD",757.033,757.335,.01,21,1,0)
This is the date the synonym(s) to be included
"^DD",757.033,757.335,.01,21,2,0)
became effective.
"^DD",757.033,757.335,.01,"DT")
3120328
"^DD",757.033,757.335,.02,0)
INCLUDE^757.345^^1;0
"^DD",757.033,757.335,.02,21,0)
^^1^1^3120320^
"^DD",757.033,757.335,.02,21,1,0)
This is a list of synonyms to include.
"^DD",757.033,757.335,.02,"DT")
3120320
"^DD",757.033,757.345,0)
INCLUDE SUB-FIELD^^.01^1
"^DD",757.033,757.345,0,"DT")
3120318
"^DD",757.033,757.345,0,"NM","INCLUDE")

"^DD",757.033,757.345,0,"UP")
757.335
"^DD",757.033,757.345,.01,0)
SYNONYM^MMF^^0;1^K:$L(X)>245!($L(X)<1) X
"^DD",757.033,757.345,.01,1,0)
^.1^^0
"^DD",757.033,757.345,.01,3)
Enter a synonym, 1-245 characters in length.
"^DD",757.033,757.345,.01,21,0)
^^3^3^3120328^
"^DD",757.033,757.345,.01,21,1,0)
This is a word or phrase that is synonymous with
"^DD",757.033,757.345,.01,21,2,0)
the NAME/TITLE field that should be included when
"^DD",757.033,757.345,.01,21,3,0)
referencing the character position.
"^DD",757.033,757.345,.01,"DT")
3120328
"^DD",757.31,757.31,0)
FIELD^^3^4
"^DD",757.31,757.31,0,"DDA")
N
"^DD",757.31,757.31,0,"DT")
2950110
"^DD",757.31,757.31,0,"IX","ADSP",757.31,2)

"^DD",757.31,757.31,0,"IX","B",757.31,.01)

"^DD",757.31,757.31,0,"IX","C",757.31,.01)

"^DD",757.31,757.31,0,"NM","DISPLAYS")

"^DD",757.31,757.31,0,"VRPK")
LEX
"^DD",757.31,757.31,0,"VRRV")
80^3141001
"^DD",757.31,757.31,.01,0)
TITLE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",757.31,757.31,.01,1,0)
^.1
"^DD",757.31,757.31,.01,1,1,0)
757.31^B
"^DD",757.31,757.31,.01,1,1,1)
S ^LEX(757.31,"B",$E(X,1,30),DA)=""
"^DD",757.31,757.31,.01,1,1,2)
K ^LEX(757.31,"B",$E(X,1,30),DA)
"^DD",757.31,757.31,.01,1,1,"%D",0)
^^3^3^2950117^
"^DD",757.31,757.31,.01,1,1,"%D",1,0)
^LEX(757.31,"B",DES,IEN) - Where DES is a 30 character representation of the
"^DD",757.31,757.31,.01,1,1,"%D",2,0)
Description, and IEN is the Internal Entry Number in file 757.31 where the
"^DD",757.31,757.31,.01,1,1,"%D",3,0)
display is stored.
"^DD",757.31,757.31,.01,1,2,0)
757.31^C^MUMPS
"^DD",757.31,757.31,.01,1,2,1)
S ^LEX(757.31,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",757.31,757.31,.01,1,2,2)
K ^LEX(757.31,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",757.31,757.31,.01,1,2,"%D",0)
^^3^3^2950117^^
"^DD",757.31,757.31,.01,1,2,"%D",1,0)
^LEX(757.31,"C",UPPER,IEN) - Where UPPER is an uppercase 30 character
"^DD",757.31,757.31,.01,1,2,"%D",2,0)
representation of the Description, and IEN is the Internal Entry Number in file
"^DD",757.31,757.31,.01,1,2,"%D",3,0)
757.31 where the display is stored.
"^DD",757.31,757.31,.01,1,2,"DT")
2950110
"^DD",757.31,757.31,.01,3)
Description must be 3-30 characters in length.
"^DD",757.31,757.31,.01,21,0)
^^2^2^2950110^^
"^DD",757.31,757.31,.01,21,1,0)
This is a short descriptive title indicating the function or purpose of 
"^DD",757.31,757.31,.01,21,2,0)
the display.
"^DD",757.31,757.31,.01,"DT")
2950110
"^DD",757.31,757.31,1,0)
DISPLAY TYPE^RS^C:CLASSIFICATION CODES;S:SEMANTICS;F:FULL DISPLAY;^0;2^Q
"^DD",757.31,757.31,1,21,0)
^^1^1^2950110^
"^DD",757.31,757.31,1,21,1,0)
Display type indicates the print display method.
"^DD",757.31,757.31,1,"DT")
2950110
"^DD",757.31,757.31,2,0)
DISPLAY^RF^^1;1^K:$L(X)>240!($L(X)<2) X
"^DD",757.31,757.31,2,1,0)
^.1
"^DD",757.31,757.31,2,1,1,0)
757.31^ADSP^MUMPS
"^DD",757.31,757.31,2,1,1,1)
S ^LEX(757.31,"ADSP",$E(X,1,63),DA)=""
"^DD",757.31,757.31,2,1,1,2)
K ^LEX(757.31,"ADSP",$E(X,1,63),DA)
"^DD",757.31,757.31,2,1,1,"%D",0)
^^3^3^2950123^
"^DD",757.31,757.31,2,1,1,"%D",1,0)
^LEX(757.31,"ADSP",DSP,IEN) - Where DSP is a 63 character representation of the
"^DD",757.31,757.31,2,1,1,"%D",2,0)
display string and IEN is the Internal Entry Number in file 757.31 where the
"^DD",757.31,757.31,2,1,1,"%D",3,0)
display is stored.
"^DD",757.31,757.31,2,1,1,"DT")
2950123
"^DD",757.31,757.31,2,3)
Display must be 2-240 characters in length.
"^DD",757.31,757.31,2,21,0)
^^1^1^2950117^^
"^DD",757.31,757.31,2,21,1,0)
This string contains the instructions (parameters) for the display routines.
"^DD",757.31,757.31,2,"DT")
2950123
"^DD",757.31,757.31,3,0)
DESCRIPTION^757.313^^2;0
"^DD",757.31,757.31,3,21,0)
^^1^1^2950118^^^
"^DD",757.31,757.31,3,21,1,0)
Contains a detailed description of exactly what is to be displayed.
"^DD",757.31,757.313,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",757.31,757.313,0,"DT")
2950110
"^DD",757.31,757.313,0,"NM","DESCRIPTION")

"^DD",757.31,757.313,0,"UP")
757.31
"^DD",757.31,757.313,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",757.31,757.313,.01,21,0)
^^2^2^2950118^^^^
"^DD",757.31,757.313,.01,21,1,0)
This contains a detailed description of the display and may be used as
"^DD",757.31,757.313,.01,21,2,0)
help when using the look-up routine for this file.
"^DD",757.31,757.313,.01,"DT")
2950110
"^DIC",757.02,757.02,0)
CODES^757.02IP
"^DIC",757.02,757.02,0,"GL")
^LEX(757.02,
"^DIC",757.02,757.02,"%D",0)
^^3^3^3090805^^^^
"^DIC",757.02,757.02,"%D",1,0)
This file contains classification codes from multiple classification
"^DIC",757.02,757.02,"%D",2,0)
systems (i.e., ICD, CPT, DSM, SNOMED, Title 38, NANDA, NIC, COSTAR, COSTART,
"^DIC",757.02,757.02,"%D",3,0)
CRISP, etc.).
"^DIC",757.02,"B","CODES",757.02)

"^DIC",757.03,757.03,0)
CODING SYSTEMS^757.03I
"^DIC",757.03,757.03,0,"GL")
^LEX(757.03,
"^DIC",757.03,757.03,"%D",0)
^^2^2^2970704^^^^
"^DIC",757.03,757.03,"%D",1,0)
This file contains the descriptive titles for medical terminology and
"^DIC",757.03,757.03,"%D",2,0)
diagnosis and classification systems.
"^DIC",757.03,"B","CODING SYSTEMS",757.03)

"^DIC",757.033,757.033,0)
CHARACTER POSITIONS^757.033
"^DIC",757.033,757.033,0,"GL")
^LEX(757.033,
"^DIC",757.033,757.033,"%",0)
^1.005^^0
"^DIC",757.033,757.033,"%D",0)
^^3^3^3120306^
"^DIC",757.033,757.033,"%D",1,0)
This file contains the definition of a character
"^DIC",757.033,757.033,"%D",2,0)
position in a code of a coding system where the
"^DIC",757.033,757.033,"%D",3,0)
character positions have meaning.
"^DIC",757.033,"B","CHARACTER POSITIONS",757.033)

"^DIC",757.31,757.31,0)
DISPLAYS^757.31
"^DIC",757.31,757.31,0,"GL")
^LEX(757.31,
"^DIC",757.31,757.31,"%D",0)
^^2^2^2990819^^^
"^DIC",757.31,757.31,"%D",1,0)
This file contains some generic default display format to be used while
"^DIC",757.31,757.31,"%D",2,0)
looking up terms in the Expression File.
"^DIC",757.31,"B","DISPLAYS",757.31)

**END**
**END**
