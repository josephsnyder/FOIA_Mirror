KIDS Distribution saved on Mar 12, 2015@13:13:46
BPS IB PRCA EPAYMENTS BUNDLE T23 (PRCA*4.5*298, IB*2.0*511, BPS*1.0*17)
**KIDS**:BPS IB PRCA EPAYMENTS BUNDLE 1.0^PRCA*4.5*298^IB*2.0*511^BPS*1.0*17^

**INSTALL NAME**
BPS IB PRCA EPAYMENTS BUNDLE 1.0
"BLD",8783,0)
BPS IB PRCA EPAYMENTS BUNDLE 1.0^^1^3150312^y
"BLD",8783,1,0)
^^1^1^3141001^
"BLD",8783,1,1,0)
ePayments Compliance Distribution
"BLD",8783,6.3)
46
"BLD",8783,10,0)
^9.63^3^3
"BLD",8783,10,1,0)
PRCA*4.5*298^1
"BLD",8783,10,2,0)
IB*2.0*511^1
"BLD",8783,10,3,0)
BPS*1.0*17^1
"BLD",8783,10,"B","BPS*1.0*17",3)

"BLD",8783,10,"B","IB*2.0*511",2)

"BLD",8783,10,"B","PRCA*4.5*298",1)

"BLD",8783,"KRN",0)
^9.67PA^779.2^20
"BLD",8783,"KRN",.4,0)
.4
"BLD",8783,"KRN",.401,0)
.401
"BLD",8783,"KRN",.402,0)
.402
"BLD",8783,"KRN",.403,0)
.403
"BLD",8783,"KRN",.5,0)
.5
"BLD",8783,"KRN",.84,0)
.84
"BLD",8783,"KRN",3.6,0)
3.6
"BLD",8783,"KRN",3.8,0)
3.8
"BLD",8783,"KRN",9.2,0)
9.2
"BLD",8783,"KRN",9.8,0)
9.8
"BLD",8783,"KRN",19,0)
19
"BLD",8783,"KRN",19.1,0)
19.1
"BLD",8783,"KRN",101,0)
101
"BLD",8783,"KRN",409.61,0)
409.61
"BLD",8783,"KRN",771,0)
771
"BLD",8783,"KRN",779.2,0)
779.2
"BLD",8783,"KRN",870,0)
870
"BLD",8783,"KRN",8989.51,0)
8989.51
"BLD",8783,"KRN",8989.52,0)
8989.52
"BLD",8783,"KRN",8994,0)
8994
"BLD",8783,"KRN","B",.4,.4)

"BLD",8783,"KRN","B",.401,.401)

"BLD",8783,"KRN","B",.402,.402)

"BLD",8783,"KRN","B",.403,.403)

"BLD",8783,"KRN","B",.5,.5)

"BLD",8783,"KRN","B",.84,.84)

"BLD",8783,"KRN","B",3.6,3.6)

"BLD",8783,"KRN","B",3.8,3.8)

"BLD",8783,"KRN","B",9.2,9.2)

"BLD",8783,"KRN","B",9.8,9.8)

"BLD",8783,"KRN","B",19,19)

"BLD",8783,"KRN","B",19.1,19.1)

"BLD",8783,"KRN","B",101,101)

"BLD",8783,"KRN","B",409.61,409.61)

"BLD",8783,"KRN","B",771,771)

"BLD",8783,"KRN","B",779.2,779.2)

"BLD",8783,"KRN","B",870,870)

"BLD",8783,"KRN","B",8989.51,8989.51)

"BLD",8783,"KRN","B",8989.52,8989.52)

"BLD",8783,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
PRCA*4.5*298
"BLD",8675,0)
PRCA*4.5*298^ACCOUNTS RECEIVABLE^0^3150312^y
"BLD",8675,4,0)
^9.64PA^344^9
"BLD",8675,4,344,0)
344
"BLD",8675,4,344,2,0)
^9.641^344^1
"BLD",8675,4,344,2,344,0)
AR BATCH PAYMENT  (File-top level)
"BLD",8675,4,344,2,344,1,0)
^9.6411^.17^2
"BLD",8675,4,344,2,344,1,.17,0)
EFT RECORD
"BLD",8675,4,344,2,344,1,.18,0)
ERA REFERENCE
"BLD",8675,4,344,222)
y^n^p^^^^n^^n
"BLD",8675,4,344,224)

"BLD",8675,4,344.31,0)
344.31
"BLD",8675,4,344.31,2,0)
^9.641^344.31^1
"BLD",8675,4,344.31,2,344.31,0)
EDI THIRD PARTY EFT DETAIL  (File-top level)
"BLD",8675,4,344.31,2,344.31,1,0)
^9.6411^.04^2
"BLD",8675,4,344.31,2,344.31,1,.04,0)
TRACE #
"BLD",8675,4,344.31,2,344.31,1,.13,0)
DATE RECEIVED
"BLD",8675,4,344.31,222)
y^n^p^^^^n^^n
"BLD",8675,4,344.31,224)

"BLD",8675,4,344.4,0)
344.4
"BLD",8675,4,344.4,2,0)
^9.641^344.48^3
"BLD",8675,4,344.4,2,344.4,0)
ELECTRONIC REMITTANCE ADVICE  (File-top level)
"BLD",8675,4,344.4,2,344.4,1,0)
^9.6411^.06^6
"BLD",8675,4,344.4,2,344.4,1,.02,0)
TRACE NUMBER
"BLD",8675,4,344.4,2,344.4,1,.06,0)
PAYMENT FROM
"BLD",8675,4,344.4,2,344.4,1,.14,0)
DETAIL POST STATUS
"BLD",8675,4,344.4,2,344.4,1,4.01,0)
AUTOPOST DATE
"BLD",8675,4,344.4,2,344.4,1,4.02,0)
AUTOPOST STATUS
"BLD",8675,4,344.4,2,344.4,1,4.03,0)
AUTO DECREASE DATE
"BLD",8675,4,344.4,2,344.41,0)
ERA DETAIL  (sub-file)
"BLD",8675,4,344.4,2,344.41,1,0)
^9.6411^10^9
"BLD",8675,4,344.4,2,344.41,1,.24,0)
ECME #
"BLD",8675,4,344.4,2,344.41,1,.25,0)
RECEIPT
"BLD",8675,4,344.4,2,344.41,1,5,0)
AUTOPOST REJECTION REASON
"BLD",8675,4,344.4,2,344.41,1,6,0)
MARK FOR AUTOPOST
"BLD",8675,4,344.4,2,344.41,1,7,0)
AUTO DECREASE INDICATOR
"BLD",8675,4,344.4,2,344.41,1,8,0)
AUTO DECREASE AMOUNT
"BLD",8675,4,344.4,2,344.41,1,9,0)
AUTO-POST DATE
"BLD",8675,4,344.4,2,344.41,1,9.01,0)
PHARMACY CLAIM COMMENT
"BLD",8675,4,344.4,2,344.41,1,10,0)
AUTO DECREASE DATE
"BLD",8675,4,344.4,2,344.48,0)
OTHER RECEIPT NUMBERS  (sub-file)
"BLD",8675,4,344.4,2,344.48,1,0)
^9.6411^^
"BLD",8675,4,344.4,222)
y^n^p^^^^n^^n
"BLD",8675,4,344.4,224)

"BLD",8675,4,344.49,0)
344.49
"BLD",8675,4,344.49,2,0)
^9.641^344.494^1
"BLD",8675,4,344.49,2,344.494,0)
OTHER RECEIPT NUMBERS  (sub-file)
"BLD",8675,4,344.49,2,344.494,1,0)
^9.6411^^
"BLD",8675,4,344.49,222)
y^n^p^^^^n^^n
"BLD",8675,4,344.49,224)

"BLD",8675,4,344.6,0)
344.6
"BLD",8675,4,344.6,222)
y^n^f^^^^n
"BLD",8675,4,344.61,0)
344.61
"BLD",8675,4,344.61,222)
y^n^f^^^^n
"BLD",8675,4,344.7,0)
344.7
"BLD",8675,4,344.7,222)
y^n^f^^^^n
"BLD",8675,4,344.81,0)
344.81
"BLD",8675,4,344.81,222)
y^y^f^^^^n
"BLD",8675,4,344.82,0)
344.82
"BLD",8675,4,344.82,222)
y^y^f^^^^n
"BLD",8675,4,"APDD",344,344)

"BLD",8675,4,"APDD",344,344,.17)

"BLD",8675,4,"APDD",344,344,.18)

"BLD",8675,4,"APDD",344.31,344.31)

"BLD",8675,4,"APDD",344.31,344.31,.04)

"BLD",8675,4,"APDD",344.31,344.31,.13)

"BLD",8675,4,"APDD",344.4,344.4)

"BLD",8675,4,"APDD",344.4,344.4,.02)

"BLD",8675,4,"APDD",344.4,344.4,.06)

"BLD",8675,4,"APDD",344.4,344.4,.14)

"BLD",8675,4,"APDD",344.4,344.4,4.01)

"BLD",8675,4,"APDD",344.4,344.4,4.02)

"BLD",8675,4,"APDD",344.4,344.4,4.03)

"BLD",8675,4,"APDD",344.4,344.41)

"BLD",8675,4,"APDD",344.4,344.41,.24)

"BLD",8675,4,"APDD",344.4,344.41,.25)

"BLD",8675,4,"APDD",344.4,344.41,5)

"BLD",8675,4,"APDD",344.4,344.41,6)

"BLD",8675,4,"APDD",344.4,344.41,7)

"BLD",8675,4,"APDD",344.4,344.41,8)

"BLD",8675,4,"APDD",344.4,344.41,9)

"BLD",8675,4,"APDD",344.4,344.41,9.01)

"BLD",8675,4,"APDD",344.4,344.41,10)

"BLD",8675,4,"APDD",344.4,344.48)

"BLD",8675,4,"APDD",344.49,344.494)

"BLD",8675,4,"B",344,344)

"BLD",8675,4,"B",344.31,344.31)

"BLD",8675,4,"B",344.4,344.4)

"BLD",8675,4,"B",344.49,344.49)

"BLD",8675,4,"B",344.6,344.6)

"BLD",8675,4,"B",344.61,344.61)

"BLD",8675,4,"B",344.7,344.7)

"BLD",8675,4,"B",344.81,344.81)

"BLD",8675,4,"B",344.82,344.82)

"BLD",8675,6.3)
121
"BLD",8675,"ABPKG")
n
"BLD",8675,"INI")
PRE^PRCAP298
"BLD",8675,"INID")
^n
"BLD",8675,"INIT")
POST^PRCAP298
"BLD",8675,"KRN",0)
^9.67PA^779.2^20
"BLD",8675,"KRN",.4,0)
.4
"BLD",8675,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",8675,"KRN",.401,0)
.401
"BLD",8675,"KRN",.402,0)
.402
"BLD",8675,"KRN",.403,0)
.403
"BLD",8675,"KRN",.5,0)
.5
"BLD",8675,"KRN",.84,0)
.84
"BLD",8675,"KRN",3.6,0)
3.6
"BLD",8675,"KRN",3.8,0)
3.8
"BLD",8675,"KRN",9.2,0)
9.2
"BLD",8675,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8675,"KRN",9.8,0)
9.8
"BLD",8675,"KRN",9.8,"NM",0)
^9.68A^98^69
"BLD",8675,"KRN",9.8,"NM",3,0)
RCDPEV^^0^B38492428
"BLD",8675,"KRN",9.8,"NM",4,0)
RCDPEV0^^0^B24203052
"BLD",8675,"KRN",9.8,"NM",7,0)
RCDPEAR2^^0^B99664049
"BLD",8675,"KRN",9.8,"NM",8,0)
RCDPEDAR^^0^B196389465
"BLD",8675,"KRN",9.8,"NM",9,0)
RCDPEDA1^^0^B3534
"BLD",8675,"KRN",9.8,"NM",10,0)
RCDPE8NZ^^0^B102784792
"BLD",8675,"KRN",9.8,"NM",14,0)
RCDPESP^^0^B100040879
"BLD",8675,"KRN",9.8,"NM",15,0)
PRCAP298^^0^B109719472
"BLD",8675,"KRN",9.8,"NM",16,0)
RCDPAYER^^0^B26142929
"BLD",8675,"KRN",9.8,"NM",18,0)
RCDPEWL^^0^B68499983
"BLD",8675,"KRN",9.8,"NM",19,0)
RCDPEWL7^^0^B96884750
"BLD",8675,"KRN",9.8,"NM",20,0)
RCDPEWL0^^0^B153865640
"BLD",8675,"KRN",9.8,"NM",21,0)
RCDPEWLP^^0^B164916639
"BLD",8675,"KRN",9.8,"NM",24,0)
RCDPESP1^^0^B30021822
"BLD",8675,"KRN",9.8,"NM",25,0)
RCDPESP2^^0^B90155274
"BLD",8675,"KRN",9.8,"NM",26,0)
RCDPESP3^^0^B6781847
"BLD",8675,"KRN",9.8,"NM",27,0)
RCDPESR4^^0^B80329387
"BLD",8675,"KRN",9.8,"NM",28,0)
RCDPESR3^^0^B51416516
"BLD",8675,"KRN",9.8,"NM",29,0)
RCDPESR2^^0^B84502503
"BLD",8675,"KRN",9.8,"NM",31,0)
RCDPEAC^^0^B163795465
"BLD",8675,"KRN",9.8,"NM",32,0)
RCDPEAP^^0^B192874498
"BLD",8675,"KRN",9.8,"NM",33,0)
RCDPEAR1^^0^B225062601
"BLD",8675,"KRN",9.8,"NM",40,0)
RCBEADJ^^0^B66159160
"BLD",8675,"KRN",9.8,"NM",42,0)
RCDPUREC^^0^B104492015
"BLD",8675,"KRN",9.8,"NM",43,0)
RCDPEM^^0^B61345619
"BLD",8675,"KRN",9.8,"NM",44,0)
RCDPEM2^^0^B206109836
"BLD",8675,"KRN",9.8,"NM",45,0)
RCDPEM4^^0^B226302840
"BLD",8675,"KRN",9.8,"NM",46,0)
RCDPEM5^^0^B85031915
"BLD",8675,"KRN",9.8,"NM",47,0)
RCDPEM7^^0^B44920512
"BLD",8675,"KRN",9.8,"NM",48,0)
RCDPEM8^^0^B32922579
"BLD",8675,"KRN",9.8,"NM",50,0)
RCDPEM0^^0^B72082268
"BLD",8675,"KRN",9.8,"NM",51,0)
RCDPEAPP^^0^B144741985
"BLD",8675,"KRN",9.8,"NM",55,0)
RCDPEMA^^0^B22679834
"BLD",8675,"KRN",9.8,"NM",56,0)
RCDPEAD^^0^B15979535
"BLD",8675,"KRN",9.8,"NM",57,0)
RCDPEADP^^0^B82856652
"BLD",8675,"KRN",9.8,"NM",58,0)
RCDPEWL6^^0^B80720367
"BLD",8675,"KRN",9.8,"NM",59,0)
RCDPEWL8^^0^B82558343
"BLD",8675,"KRN",9.8,"NM",60,0)
RCDPEWLB^^0^B49175831
"BLD",8675,"KRN",9.8,"NM",61,0)
RCDPEWLA^^0^B59960871
"BLD",8675,"KRN",9.8,"NM",63,0)
RCDPEUPO^^0^B40462165
"BLD",8675,"KRN",9.8,"NM",64,0)
RCDPEWL4^^0^B46490209
"BLD",8675,"KRN",9.8,"NM",65,0)
RCDPETT^^0^B81520347
"BLD",8675,"KRN",9.8,"NM",66,0)
RCDPETTE^^0^B258211138
"BLD",8675,"KRN",9.8,"NM",67,0)
RCDPETTF^^0^B80402649
"BLD",8675,"KRN",9.8,"NM",68,0)
RCDPETTM^^0^B189296632
"BLD",8675,"KRN",9.8,"NM",69,0)
RCDPETTP^^0^B4906426
"BLD",8675,"KRN",9.8,"NM",70,0)
RCDPETTU^^0^B117602125
"BLD",8675,"KRN",9.8,"NM",71,0)
RCDPURE1^^0^B60661584
"BLD",8675,"KRN",9.8,"NM",72,0)
RCDPEARL^^0^B31596491
"BLD",8675,"KRN",9.8,"NM",73,0)
RCDPEM3^^0^B177381909
"BLD",8675,"KRN",9.8,"NM",74,0)
RCDPEM6^^0^B78693035
"BLD",8675,"KRN",9.8,"NM",76,0)
RCDPEWL1^^0^B68166367
"BLD",8675,"KRN",9.8,"NM",79,0)
RCDPEAA1^^0^B60672744
"BLD",8675,"KRN",9.8,"NM",80,0)
RCDPEAA2^^0^B95635325
"BLD",8675,"KRN",9.8,"NM",81,0)
RCDPEAA3^^0^B72680990
"BLD",8675,"KRN",9.8,"NM",82,0)
RCDPEX^^0^B80310750
"BLD",8675,"KRN",9.8,"NM",83,0)
RCDPEX1^^0^B18257259
"BLD",8675,"KRN",9.8,"NM",84,0)
RCDPEX2^^0^B22431438
"BLD",8675,"KRN",9.8,"NM",85,0)
RCDPEX31^^0^B40819762
"BLD",8675,"KRN",9.8,"NM",86,0)
RCDPEX32^^0^B48567496
"BLD",8675,"KRN",9.8,"NM",87,0)
RCDPEX4^^0^B11626090
"BLD",8675,"KRN",9.8,"NM",89,0)
RCDPESR6^^0^B45550757
"BLD",8675,"KRN",9.8,"NM",90,0)
RCDPESR1^^0^B49930663
"BLD",8675,"KRN",9.8,"NM",91,0)
RCDPEM41^^0^B8625925
"BLD",8675,"KRN",9.8,"NM",92,0)
RCMSITE^^0^B8419776
"BLD",8675,"KRN",9.8,"NM",93,0)
RCDPETTQ^^0^B30669370
"BLD",8675,"KRN",9.8,"NM",94,0)
RCDPESP4^^0^B23109774
"BLD",8675,"KRN",9.8,"NM",96,0)
RCDPEAP1^^0^B28791355
"BLD",8675,"KRN",9.8,"NM",98,0)
RCDPEWL2^^0^B85809764
"BLD",8675,"KRN",9.8,"NM","B","PRCAP298",15)

"BLD",8675,"KRN",9.8,"NM","B","RCBEADJ",40)

"BLD",8675,"KRN",9.8,"NM","B","RCDPAYER",16)

"BLD",8675,"KRN",9.8,"NM","B","RCDPE8NZ",10)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAA1",79)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAA2",80)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAA3",81)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAC",31)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAD",56)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEADP",57)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAP",32)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAP1",96)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAPP",51)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAR1",33)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEAR2",7)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEARL",72)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEDA1",9)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEDAR",8)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM",43)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM0",50)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM2",44)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM3",73)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM4",45)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM41",91)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM5",46)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM6",74)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM7",47)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEM8",48)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEMA",55)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESP",14)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESP1",24)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESP2",25)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESP3",26)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESP4",94)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESR1",90)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESR2",29)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESR3",28)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESR4",27)

"BLD",8675,"KRN",9.8,"NM","B","RCDPESR6",89)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETT",65)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTE",66)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTF",67)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTM",68)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTP",69)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTQ",93)

"BLD",8675,"KRN",9.8,"NM","B","RCDPETTU",70)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEUPO",63)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEV",3)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEV0",4)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL",18)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL0",20)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL1",76)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL2",98)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL4",64)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL6",58)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL7",19)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWL8",59)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWLA",61)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWLB",60)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEWLP",21)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX",82)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX1",83)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX2",84)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX31",85)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX32",86)

"BLD",8675,"KRN",9.8,"NM","B","RCDPEX4",87)

"BLD",8675,"KRN",9.8,"NM","B","RCDPURE1",71)

"BLD",8675,"KRN",9.8,"NM","B","RCDPUREC",42)

"BLD",8675,"KRN",9.8,"NM","B","RCMSITE",92)

"BLD",8675,"KRN",19,0)
19
"BLD",8675,"KRN",19,"NM",0)
^9.68A^46^43
"BLD",8675,"KRN",19,"NM",1,0)
RCDPE EEOB MOVE/COPY/RMOVE RPT^^0
"BLD",8675,"KRN",19,"NM",2,0)
RCDPE EEOB MOVE/COPY/REMOVE^^0
"BLD",8675,"KRN",19,"NM",3,0)
RCDPE EDI LOCKBOX PARAMETERS^^0
"BLD",8675,"KRN",19,"NM",4,0)
RCDPE EDI LOCKBOX WORKLIST^^0
"BLD",8675,"KRN",19,"NM",5,0)
RCDPE EDI LOCKBOX REPORTS MENU^^0
"BLD",8675,"KRN",19,"NM",8,0)
PRCA SITE PARAMETER^^0
"BLD",8675,"KRN",19,"NM",9,0)
RCDPE SITE PARAMETER REPORT^^0
"BLD",8675,"KRN",19,"NM",10,0)
RCDPE PARAMETER AUDIT REPORT^^0
"BLD",8675,"KRN",19,"NM",11,0)
RCDPE EXCLUSION AUDIT REPORT^^0
"BLD",8675,"KRN",19,"NM",12,0)
RCDPE EDI LOCKBOX MENU^^0
"BLD",8675,"KRN",19,"NM",13,0)
RCDPE UNPOSTED EFT OVERRIDE^^0
"BLD",8675,"KRN",19,"NM",14,0)
RCDPETT TOOL^^0
"BLD",8675,"KRN",19,"NM",15,0)
RCDPE EDI LOCKBOX ACT REPORT^^0
"BLD",8675,"KRN",19,"NM",16,0)
RCDPE APAR^^0
"BLD",8675,"KRN",19,"NM",17,0)
RCDPE ERA POSTED BY PAPER EOB^^0
"BLD",8675,"KRN",19,"NM",18,0)
RCDPE EXCEPTION PROCESSING^^0
"BLD",8675,"KRN",19,"NM",19,0)
RCDPE MANUAL MATCH EFT-ERA^^0
"BLD",8675,"KRN",19,"NM",20,0)
RCDPE MARK 0-BAL EFT MATCHED^^0
"BLD",8675,"KRN",19,"NM",21,0)
RCDPE MATCH EFT TO ERA^^0
"BLD",8675,"KRN",19,"NM",22,0)
RCDPE MOVE ERA TO SUSPENSE^^0
"BLD",8675,"KRN",19,"NM",23,0)
RCDPE REMOVE DUP DEPOSITS^^0
"BLD",8675,"KRN",19,"NM",24,0)
RCDPE REMOVE ERA FROM WORKLIST^^0
"BLD",8675,"KRN",19,"NM",25,0)
RCDPE UNMATCH ERA^^0
"BLD",8675,"KRN",19,"NM",26,0)
PRCA BIL AGENCY^^0
"BLD",8675,"KRN",19,"NM",27,0)
PRCA CBO PARAMETERS^^0
"BLD",8675,"KRN",19,"NM",28,0)
PRCA DEACTIVATE GROUP^^0
"BLD",8675,"KRN",19,"NM",29,0)
PRCA NOTIFICATION PARAMETERS^^0
"BLD",8675,"KRN",19,"NM",30,0)
PRCA RC PARAMETERS^^0
"BLD",8675,"KRN",19,"NM",31,0)
PRCAF U ADMIN.RATE^^0
"BLD",8675,"KRN",19,"NM",32,0)
RCDPE ACTIVE WITH EEOB REPORT^^0
"BLD",8675,"KRN",19,"NM",33,0)
RCDPE EFT AGING REPORT^^0
"BLD",8675,"KRN",19,"NM",34,0)
RCDPE EFT AUDIT REPORT^^0
"BLD",8675,"KRN",19,"NM",35,0)
RCDPE EOB TRANSFER REPORTS^^0
"BLD",8675,"KRN",19,"NM",36,0)
RCDPE ERA AGING REPORT^^0
"BLD",8675,"KRN",19,"NM",37,0)
RCDPE ERA W/PAPER EOB REPORT^^0
"BLD",8675,"KRN",19,"NM",39,0)
RCDPE REMOVED ERA AUDIT^^0
"BLD",8675,"KRN",19,"NM",40,0)
RCDPE UNAPPLIED EFT DEP REPORT^^0
"BLD",8675,"KRN",19,"NM",41,0)
RCDPE VIEW/PRINT ERA^^0
"BLD",8675,"KRN",19,"NM",42,0)
RCDPE EEOB MOVE/COPY REPORT^^1^
"BLD",8675,"KRN",19,"NM",43,0)
RCDPE AUTO-POST REPORT^^0
"BLD",8675,"KRN",19,"NM",44,0)
RCDPE AUTO-DECREASE REPORT^^0
"BLD",8675,"KRN",19,"NM",45,0)
RCDPE EEOB MOVE/COPY^^1^
"BLD",8675,"KRN",19,"NM",46,0)
RCDPE PAYER EXCLUSION NAME TIN^^0
"BLD",8675,"KRN",19,"NM","B","PRCA BIL AGENCY",26)

"BLD",8675,"KRN",19,"NM","B","PRCA CBO PARAMETERS",27)

"BLD",8675,"KRN",19,"NM","B","PRCA DEACTIVATE GROUP",28)

"BLD",8675,"KRN",19,"NM","B","PRCA NOTIFICATION PARAMETERS",29)

"BLD",8675,"KRN",19,"NM","B","PRCA RC PARAMETERS",30)

"BLD",8675,"KRN",19,"NM","B","PRCA SITE PARAMETER",8)

"BLD",8675,"KRN",19,"NM","B","PRCAF U ADMIN.RATE",31)

"BLD",8675,"KRN",19,"NM","B","RCDPE ACTIVE WITH EEOB REPORT",32)

"BLD",8675,"KRN",19,"NM","B","RCDPE APAR",16)

"BLD",8675,"KRN",19,"NM","B","RCDPE AUTO-DECREASE REPORT",44)

"BLD",8675,"KRN",19,"NM","B","RCDPE AUTO-POST REPORT",43)

"BLD",8675,"KRN",19,"NM","B","RCDPE EDI LOCKBOX ACT REPORT",15)

"BLD",8675,"KRN",19,"NM","B","RCDPE EDI LOCKBOX MENU",12)

"BLD",8675,"KRN",19,"NM","B","RCDPE EDI LOCKBOX PARAMETERS",3)

"BLD",8675,"KRN",19,"NM","B","RCDPE EDI LOCKBOX REPORTS MENU",5)

"BLD",8675,"KRN",19,"NM","B","RCDPE EDI LOCKBOX WORKLIST",4)

"BLD",8675,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY",45)

"BLD",8675,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY REPORT",42)

"BLD",8675,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY/REMOVE",2)

"BLD",8675,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY/RMOVE RPT",1)

"BLD",8675,"KRN",19,"NM","B","RCDPE EFT AGING REPORT",33)

"BLD",8675,"KRN",19,"NM","B","RCDPE EFT AUDIT REPORT",34)

"BLD",8675,"KRN",19,"NM","B","RCDPE EOB TRANSFER REPORTS",35)

"BLD",8675,"KRN",19,"NM","B","RCDPE ERA AGING REPORT",36)

"BLD",8675,"KRN",19,"NM","B","RCDPE ERA POSTED BY PAPER EOB",17)

"BLD",8675,"KRN",19,"NM","B","RCDPE ERA W/PAPER EOB REPORT",37)

"BLD",8675,"KRN",19,"NM","B","RCDPE EXCEPTION PROCESSING",18)

"BLD",8675,"KRN",19,"NM","B","RCDPE EXCLUSION AUDIT REPORT",11)

"BLD",8675,"KRN",19,"NM","B","RCDPE MANUAL MATCH EFT-ERA",19)

"BLD",8675,"KRN",19,"NM","B","RCDPE MARK 0-BAL EFT MATCHED",20)

"BLD",8675,"KRN",19,"NM","B","RCDPE MATCH EFT TO ERA",21)

"BLD",8675,"KRN",19,"NM","B","RCDPE MOVE ERA TO SUSPENSE",22)

"BLD",8675,"KRN",19,"NM","B","RCDPE PARAMETER AUDIT REPORT",10)

"BLD",8675,"KRN",19,"NM","B","RCDPE PAYER EXCLUSION NAME TIN",46)

"BLD",8675,"KRN",19,"NM","B","RCDPE REMOVE DUP DEPOSITS",23)

"BLD",8675,"KRN",19,"NM","B","RCDPE REMOVE ERA FROM WORKLIST",24)

"BLD",8675,"KRN",19,"NM","B","RCDPE REMOVED ERA AUDIT",39)

"BLD",8675,"KRN",19,"NM","B","RCDPE SITE PARAMETER REPORT",9)

"BLD",8675,"KRN",19,"NM","B","RCDPE UNAPPLIED EFT DEP REPORT",40)

"BLD",8675,"KRN",19,"NM","B","RCDPE UNMATCH ERA",25)

"BLD",8675,"KRN",19,"NM","B","RCDPE UNPOSTED EFT OVERRIDE",13)

"BLD",8675,"KRN",19,"NM","B","RCDPE VIEW/PRINT ERA",41)

"BLD",8675,"KRN",19,"NM","B","RCDPETT TOOL",14)

"BLD",8675,"KRN",19.1,0)
19.1
"BLD",8675,"KRN",19.1,"NM",0)
^9.68A^4^4
"BLD",8675,"KRN",19.1,"NM",1,0)
RCDPE AUTO DEC^^0
"BLD",8675,"KRN",19.1,"NM",2,0)
RCDPE ERA EXCEPT^^0
"BLD",8675,"KRN",19.1,"NM",3,0)
RCDPE REMOVE EEOB^^0
"BLD",8675,"KRN",19.1,"NM",4,0)
RCDPE AGED PMT^^0
"BLD",8675,"KRN",19.1,"NM","B","RCDPE AGED PMT",4)

"BLD",8675,"KRN",19.1,"NM","B","RCDPE AUTO DEC",1)

"BLD",8675,"KRN",19.1,"NM","B","RCDPE ERA EXCEPT",2)

"BLD",8675,"KRN",19.1,"NM","B","RCDPE REMOVE EEOB",3)

"BLD",8675,"KRN",101,0)
101
"BLD",8675,"KRN",101,"NM",0)
^9.68A^51^44
"BLD",8675,"KRN",101,"NM",1,0)
RCDPE WORKLIST ERA LIST MENU^^0
"BLD",8675,"KRN",101,"NM",2,0)
RCDPE WORKLIST ERA SELECT^^0
"BLD",8675,"KRN",101,"NM",3,0)
RCDPE WORKLIST ERA SORT^^0
"BLD",8675,"KRN",101,"NM",4,0)
RCDPE ERA LIST VIEW ERA^^0
"BLD",8675,"KRN",101,"NM",5,0)
RCDPE ERA WORKLIST CHANGE VIEW^^0
"BLD",8675,"KRN",101,"NM",6,0)
VALM QUIT^^0
"BLD",8675,"KRN",101,"NM",7,0)
RCDPE EOB WORKLIST MENU^^0
"BLD",8675,"KRN",101,"NM",8,0)
RCDPE EOB WORKLIST SPLIT LINE^^0
"BLD",8675,"KRN",101,"NM",9,0)
RCDPE EOB WORKLIST DIST ADJ^^0
"BLD",8675,"KRN",101,"NM",10,0)
RCDPE EOB WORKLIST REFRESH^^0
"BLD",8675,"KRN",101,"NM",11,0)
RCDPE VIEW/PRINT WORKLIST EOB^^0
"BLD",8675,"KRN",101,"NM",12,0)
RCDPE VIEW/PRINT WORKLIST ERA^^0
"BLD",8675,"KRN",101,"NM",13,0)
RCDPE EOB WORKLIST RESEARCH^^0
"BLD",8675,"KRN",101,"NM",14,0)
RCDPE EOB WL RECEIPT VIEW^^0
"BLD",8675,"KRN",101,"NM",15,0)
RCDPE EOB WL REVIEW^^0
"BLD",8675,"KRN",101,"NM",16,0)
RCDPE EOB WORKLIST VERIFY^^0
"BLD",8675,"KRN",101,"NM",17,0)
RCDPE EOB WORKLIST CHANGE VIEW^^0
"BLD",8675,"KRN",101,"NM",20,0)
RCDPEX EOB_SUM EXCEPTION MENU^^0
"BLD",8675,"KRN",101,"NM",21,0)
RCDPEX SUM_VIEW/PRINT MESSAGE^^0
"BLD",8675,"KRN",101,"NM",23,0)
RCDPEX SUM_FILE EXCEPTION^^0
"BLD",8675,"KRN",101,"NM",24,0)
RCDPE EOB WORKLIST TPJI^^0
"BLD",8675,"KRN",101,"NM",25,0)
RCDPEX RX_COMMENT^^0
"BLD",8675,"KRN",101,"NM",26,0)
RCDPEX SUM_EDIT CLAIM^^0
"BLD",8675,"KRN",101,"NM",27,0)
RCDPE EOB WORKLIST BILL COMMENT^^0
"BLD",8675,"KRN",101,"NM",28,0)
RCDPE EOB WORKLIST REESTABLISH^^0
"BLD",8675,"KRN",101,"NM",29,0)
RCDPE EOB WORKLIST FULL ACCT PROF^^0
"BLD",8675,"KRN",101,"NM",30,0)
RCDPE EOB WL RESEARCH EXIT^^0
"BLD",8675,"KRN",101,"NM",31,0)
RCDPE EOB WORKLIST ADMIN COST ADJ^^0
"BLD",8675,"KRN",101,"NM",32,0)
RCDPE APAR EEOB LIST MENU^^0
"BLD",8675,"KRN",101,"NM",34,0)
RCDPE APAR SELECT EEOB^^0
"BLD",8675,"KRN",101,"NM",35,0)
RCDPE APAR CHANGE VIEW^^0
"BLD",8675,"KRN",101,"NM",36,0)
RCDPE EOB WORKLIST RESEARCH MENU^^0
"BLD",8675,"KRN",101,"NM",37,0)
RCDPE MARK FOR AUTOPOST^^0
"BLD",8675,"KRN",101,"NM",38,0)
RCDPE APAR SPLIT LINE^^0
"BLD",8675,"KRN",101,"NM",41,0)
RCDPE APAR RESEARCH^^0
"BLD",8675,"KRN",101,"NM",42,0)
RCDPE APAR SELECTED EEOB MENU^^0
"BLD",8675,"KRN",101,"NM",43,0)
RCDPE APAR VIEW/PRINT ERA^^0
"BLD",8675,"KRN",101,"NM",44,0)
RCDPE APAR EEOB REFRESH^^0
"BLD",8675,"KRN",101,"NM",45,0)
RCDPE APAR EEOB REVIEW^^0
"BLD",8675,"KRN",101,"NM",46,0)
RCDPE APAR VIEW/PRINT EOB^^0
"BLD",8675,"KRN",101,"NM",48,0)
RCDPEX DELETE MESSAGE^^0
"BLD",8675,"KRN",101,"NM",49,0)
RCDPEX EOB_SUM REMOVE EXCEPT^^0
"BLD",8675,"KRN",101,"NM",50,0)
RCDPE APAR EEOB RESEARCH MENU^^0
"BLD",8675,"KRN",101,"NM",51,0)
RCDPE APAR VERIFY^^0
"BLD",8675,"KRN",101,"NM","B","RCDPE APAR CHANGE VIEW",35)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR EEOB LIST MENU",32)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR EEOB REFRESH",44)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR EEOB RESEARCH MENU",50)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR EEOB REVIEW",45)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR RESEARCH",41)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR SELECT EEOB",34)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR SELECTED EEOB MENU",42)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR SPLIT LINE",38)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR VERIFY",51)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT EOB",46)

"BLD",8675,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT ERA",43)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WL RECEIPT VIEW",14)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WL RESEARCH EXIT",30)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WL REVIEW",15)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST ADMIN COST ADJ",31)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST BILL COMMENT",27)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST CHANGE VIEW",17)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST DIST ADJ",9)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST FULL ACCT PROF",29)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST MENU",7)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST REESTABLISH",28)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST REFRESH",10)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH",13)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH MENU",36)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST SPLIT LINE",8)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST TPJI",24)

"BLD",8675,"KRN",101,"NM","B","RCDPE EOB WORKLIST VERIFY",16)

"BLD",8675,"KRN",101,"NM","B","RCDPE ERA LIST VIEW ERA",4)

"BLD",8675,"KRN",101,"NM","B","RCDPE ERA WORKLIST CHANGE VIEW",5)

"BLD",8675,"KRN",101,"NM","B","RCDPE MARK FOR AUTOPOST",37)

"BLD",8675,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST EOB",11)

"BLD",8675,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST ERA",12)

"BLD",8675,"KRN",101,"NM","B","RCDPE WORKLIST ERA LIST MENU",1)

"BLD",8675,"KRN",101,"NM","B","RCDPE WORKLIST ERA SELECT",2)

"BLD",8675,"KRN",101,"NM","B","RCDPE WORKLIST ERA SORT",3)

"BLD",8675,"KRN",101,"NM","B","RCDPEX DELETE MESSAGE",48)

"BLD",8675,"KRN",101,"NM","B","RCDPEX EOB_SUM EXCEPTION MENU",20)

"BLD",8675,"KRN",101,"NM","B","RCDPEX EOB_SUM REMOVE EXCEPT",49)

"BLD",8675,"KRN",101,"NM","B","RCDPEX RX_COMMENT",25)

"BLD",8675,"KRN",101,"NM","B","RCDPEX SUM_EDIT CLAIM",26)

"BLD",8675,"KRN",101,"NM","B","RCDPEX SUM_FILE EXCEPTION",23)

"BLD",8675,"KRN",101,"NM","B","RCDPEX SUM_VIEW/PRINT MESSAGE",21)

"BLD",8675,"KRN",101,"NM","B","VALM QUIT",6)

"BLD",8675,"KRN",409.61,0)
409.61
"BLD",8675,"KRN",409.61,"NM",0)
^9.68A^9^7
"BLD",8675,"KRN",409.61,"NM",2,0)
RCDPE EOB WORKLIST^^0
"BLD",8675,"KRN",409.61,"NM",3,0)
RCDPE EOB RESEARCH^^0
"BLD",8675,"KRN",409.61,"NM",4,0)
RCDPE AUTO EOB RECEIPT PREVIEW^^0
"BLD",8675,"KRN",409.61,"NM",5,0)
RCDPE MISC REPORTS^^0
"BLD",8675,"KRN",409.61,"NM",6,0)
RCDPE APAR EEOB LIST^^0
"BLD",8675,"KRN",409.61,"NM",8,0)
RCDPE APAR SELECTED EEOB^^0
"BLD",8675,"KRN",409.61,"NM",9,0)
RCDPE APAR EEOB RESEARCH^^0
"BLD",8675,"KRN",409.61,"NM","B","RCDPE APAR EEOB LIST",6)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE APAR EEOB RESEARCH",9)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE APAR SELECTED EEOB",8)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE AUTO EOB RECEIPT PREVIEW",4)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE EOB RESEARCH",3)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE EOB WORKLIST",2)

"BLD",8675,"KRN",409.61,"NM","B","RCDPE MISC REPORTS",5)

"BLD",8675,"KRN",771,0)
771
"BLD",8675,"KRN",771,"NM",0)
^9.68A^^
"BLD",8675,"KRN",779.2,0)
779.2
"BLD",8675,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",8675,"KRN",870,0)
870
"BLD",8675,"KRN",870,"NM",0)
^9.68A^^
"BLD",8675,"KRN",8989.51,0)
8989.51
"BLD",8675,"KRN",8989.51,"NM",0)
^9.68A^3^3
"BLD",8675,"KRN",8989.51,"NM",1,0)
RCDPE EDI LOCKBOX WORKLIST^^0
"BLD",8675,"KRN",8989.51,"NM",2,0)
RCDPE APAR^^0
"BLD",8675,"KRN",8989.51,"NM",3,0)
RCDPE SCRATCHPAD^^0
"BLD",8675,"KRN",8989.51,"NM","B","RCDPE APAR",2)

"BLD",8675,"KRN",8989.51,"NM","B","RCDPE EDI LOCKBOX WORKLIST",1)

"BLD",8675,"KRN",8989.51,"NM","B","RCDPE SCRATCHPAD",3)

"BLD",8675,"KRN",8989.52,0)
8989.52
"BLD",8675,"KRN",8994,0)
8994
"BLD",8675,"KRN","B",.4,.4)

"BLD",8675,"KRN","B",.401,.401)

"BLD",8675,"KRN","B",.402,.402)

"BLD",8675,"KRN","B",.403,.403)

"BLD",8675,"KRN","B",.5,.5)

"BLD",8675,"KRN","B",.84,.84)

"BLD",8675,"KRN","B",3.6,3.6)

"BLD",8675,"KRN","B",3.8,3.8)

"BLD",8675,"KRN","B",9.2,9.2)

"BLD",8675,"KRN","B",9.8,9.8)

"BLD",8675,"KRN","B",19,19)

"BLD",8675,"KRN","B",19.1,19.1)

"BLD",8675,"KRN","B",101,101)

"BLD",8675,"KRN","B",409.61,409.61)

"BLD",8675,"KRN","B",771,771)

"BLD",8675,"KRN","B",779.2,779.2)

"BLD",8675,"KRN","B",870,870)

"BLD",8675,"KRN","B",8989.51,8989.51)

"BLD",8675,"KRN","B",8989.52,8989.52)

"BLD",8675,"KRN","B",8994,8994)

"BLD",8675,"PRE")
PRCA298E
"BLD",8675,"QUES",0)
^9.62^^
"BLD",8675,"REQB",0)
^9.611^16^15
"BLD",8675,"REQB",1,0)
PRCA*4.5*138^1
"BLD",8675,"REQB",2,0)
PRCA*4.5*208^1
"BLD",8675,"REQB",3,0)
PRCA*4.5*220^1
"BLD",8675,"REQB",4,0)
PRCA*4.5*222^1
"BLD",8675,"REQB",6,0)
PRCA*4.5*241^1
"BLD",8675,"REQB",7,0)
PRCA*4.5*249^1
"BLD",8675,"REQB",8,0)
PRCA*4.5*261^1
"BLD",8675,"REQB",9,0)
PRCA*4.5*262^1
"BLD",8675,"REQB",10,0)
PRCA*4.5*269^1
"BLD",8675,"REQB",11,0)
PRCA*4.5*271^1
"BLD",8675,"REQB",12,0)
PRCA*4.5*276^1
"BLD",8675,"REQB",13,0)
PRCA*4.5*283^1
"BLD",8675,"REQB",14,0)
PRCA*4.5*284^1
"BLD",8675,"REQB",15,0)
PRCA*4.5*293^1
"BLD",8675,"REQB",16,0)
PRCA*4.5*296^1
"BLD",8675,"REQB","B","PRCA*4.5*138",1)

"BLD",8675,"REQB","B","PRCA*4.5*208",2)

"BLD",8675,"REQB","B","PRCA*4.5*220",3)

"BLD",8675,"REQB","B","PRCA*4.5*222",4)

"BLD",8675,"REQB","B","PRCA*4.5*241",6)

"BLD",8675,"REQB","B","PRCA*4.5*249",7)

"BLD",8675,"REQB","B","PRCA*4.5*261",8)

"BLD",8675,"REQB","B","PRCA*4.5*262",9)

"BLD",8675,"REQB","B","PRCA*4.5*269",10)

"BLD",8675,"REQB","B","PRCA*4.5*271",11)

"BLD",8675,"REQB","B","PRCA*4.5*276",12)

"BLD",8675,"REQB","B","PRCA*4.5*283",13)

"BLD",8675,"REQB","B","PRCA*4.5*284",14)

"BLD",8675,"REQB","B","PRCA*4.5*293",15)

"BLD",8675,"REQB","B","PRCA*4.5*296",16)

"FIA",344)
AR BATCH PAYMENT
"FIA",344,0)
^RCY(344,
"FIA",344,0,0)
344I
"FIA",344,0,1)
y^n^p^^^^n^^n
"FIA",344,0,10)

"FIA",344,0,11)

"FIA",344,0,"RLRO")

"FIA",344,0,"VR")
4.5^PRCA
"FIA",344,344)
1
"FIA",344,344,.17)

"FIA",344,344,.18)

"FIA",344.31)
EDI THIRD PARTY EFT DETAIL
"FIA",344.31,0)
^RCY(344.31,
"FIA",344.31,0,0)
344.31PI
"FIA",344.31,0,1)
y^n^p^^^^n^^n
"FIA",344.31,0,10)

"FIA",344.31,0,11)

"FIA",344.31,0,"RLRO")

"FIA",344.31,0,"VR")
4.5^PRCA
"FIA",344.31,344.31)
1
"FIA",344.31,344.31,.04)

"FIA",344.31,344.31,.13)

"FIA",344.4)
ELECTRONIC REMITTANCE ADVICE
"FIA",344.4,0)
^RCY(344.4,
"FIA",344.4,0,0)
344.4I
"FIA",344.4,0,1)
y^n^p^^^^n^^n
"FIA",344.4,0,10)

"FIA",344.4,0,11)

"FIA",344.4,0,"RLRO")

"FIA",344.4,0,"VR")
4.5^PRCA
"FIA",344.4,344.4)
1
"FIA",344.4,344.4,.02)

"FIA",344.4,344.4,.06)

"FIA",344.4,344.4,.14)

"FIA",344.4,344.4,4.01)

"FIA",344.4,344.4,4.02)

"FIA",344.4,344.4,4.03)

"FIA",344.4,344.4,8)

"FIA",344.4,344.41)
1
"FIA",344.4,344.41,.24)

"FIA",344.4,344.41,.25)

"FIA",344.4,344.41,5)

"FIA",344.4,344.41,6)

"FIA",344.4,344.41,7)

"FIA",344.4,344.41,8)

"FIA",344.4,344.41,9)

"FIA",344.4,344.41,9.01)

"FIA",344.4,344.41,10)

"FIA",344.4,344.48)
0
"FIA",344.49)
EDI LOCKBOX EOB WORKLIST
"FIA",344.49,0)
^RCY(344.49,
"FIA",344.49,0,0)
344.49P
"FIA",344.49,0,1)
y^n^p^^^^n^^n
"FIA",344.49,0,10)

"FIA",344.49,0,11)

"FIA",344.49,0,"RLRO")

"FIA",344.49,0,"VR")
4.5^PRCA
"FIA",344.49,344.49)
1
"FIA",344.49,344.49,4)

"FIA",344.49,344.494)
0
"FIA",344.6)
RCDPE AUTO-PAY EXCLUSION
"FIA",344.6,0)
^RCY(344.6,
"FIA",344.6,0,0)
344.6I
"FIA",344.6,0,1)
y^n^f^^^^n
"FIA",344.6,0,10)

"FIA",344.6,0,11)

"FIA",344.6,0,"RLRO")

"FIA",344.6,0,"VR")
4.5^PRCA
"FIA",344.6,344.6)
0
"FIA",344.61)
RCDPE PARAMETER
"FIA",344.61,0)
^RCY(344.61,
"FIA",344.61,0,0)
344.61P
"FIA",344.61,0,1)
y^n^f^^^^n
"FIA",344.61,0,10)

"FIA",344.61,0,11)

"FIA",344.61,0,"RLRO")

"FIA",344.61,0,"VR")
4.5^PRCA
"FIA",344.61,344.61)
0
"FIA",344.7)
RCDPE PARAMETER AUDIT
"FIA",344.7,0)
^RCY(344.7,
"FIA",344.7,0,0)
344.7D
"FIA",344.7,0,1)
y^n^f^^^^n
"FIA",344.7,0,10)

"FIA",344.7,0,11)

"FIA",344.7,0,"RLRO")

"FIA",344.7,0,"VR")
4.5^PRCA
"FIA",344.7,344.7)
0
"FIA",344.81)
RC MESSAGE TEXT OBJECT
"FIA",344.81,0)
^RCY(344.81,
"FIA",344.81,0,0)
344.81I
"FIA",344.81,0,1)
y^y^f^^^^n
"FIA",344.81,0,10)

"FIA",344.81,0,11)

"FIA",344.81,0,"RLRO")

"FIA",344.81,0,"VR")
4.5^PRCA
"FIA",344.81,344.81)
0
"FIA",344.81,344.812)
0
"FIA",344.82)
RC TESTING USER PREFERENCES
"FIA",344.82,0)
^RCY(344.82,
"FIA",344.82,0,0)
344.82P
"FIA",344.82,0,1)
y^y^f^^^^n
"FIA",344.82,0,10)

"FIA",344.82,0,11)

"FIA",344.82,0,"RLRO")

"FIA",344.82,0,"VR")
4.5^PRCA
"FIA",344.82,344.82)
0
"INI")
PRE^PRCAP298
"INIT")
POST^PRCAP298
"IX",344.31,344.31,"F",0)
344.31^F^Cross-ref. full trace number^R^^F^IR^I^344.31^^^^^LS
"IX",344.31,344.31,"F",.1,0)
^^1^1^3140630^
"IX",344.31,344.31,"F",.1,1,0)
This cross-reference is used to find an EFT by its full trace number.
"IX",344.31,344.31,"F",1)
S ^RCY(344.31,"F",$E(X,1,50),DA)=""
"IX",344.31,344.31,"F",2)
K ^RCY(344.31,"F",$E(X,1,50),DA)
"IX",344.31,344.31,"F",2.5)
K ^RCY(344.31,"F")
"IX",344.31,344.31,"F",11.1,0)
^.114IA^1^1
"IX",344.31,344.31,"F",11.1,1,0)
1^F^344.31^.04^50^1^F
"IX",344.31,344.31,"F",11.1,1,3)

"IX",344.31,344.31,"FNLZ",0)
344.31^FNLZ^Cross-ref. TRACE # without leading zeroes.^MU^^F^IR^I^344.31^^^^^LS
"IX",344.31,344.31,"FNLZ",.1,0)
^^17^17^3140626^
"IX",344.31,344.31,"FNLZ",.1,1,0)
This cross-reference is used to lookup an ERA by its trace number without
"IX",344.31,344.31,"FNLZ",.1,2,0)
leading zeroes and to allow partial matches for numeric trace numbers. The
"IX",344.31,344.31,"FNLZ",.1,3,0)
"F" cross-reference is used for the full trace number.  "NLZ" means "No
"IX",344.31,344.31,"FNLZ",.1,4,0)
Leading Zeroes", hence "FNLZ" for this cross-reference.  
"IX",344.31,344.31,"FNLZ",.1,5,0)
  
"IX",344.31,344.31,"FNLZ",.1,6,0)
After the leading zeroes are removed a space (" ") is appended to the 
"IX",344.31,344.31,"FNLZ",.1,7,0)
cross-referenced value for collation purposes.  This cross-reference is 
"IX",344.31,344.31,"FNLZ",.1,8,0)
only SET or KILLed for TRACE # entries that are numeric or those with
"IX",344.31,344.31,"FNLZ",.1,9,0)
leading zeroes and numerics.
"IX",344.31,344.31,"FNLZ",.1,10,0)
  
"IX",344.31,344.31,"FNLZ",.1,11,0)
A trace number such as "000345678" is stored as "345678 ", "001 " as "1 
"IX",344.31,344.31,"FNLZ",.1,12,0)
",and "1234" as "1234 ".
"IX",344.31,344.31,"FNLZ",.1,13,0)
  
"IX",344.31,344.31,"FNLZ",.1,14,0)
Trace numbers such as "000","0000","00000", etc. are stored as "0 ".  
"IX",344.31,344.31,"FNLZ",.1,15,0)
  
"IX",344.31,344.31,"FNLZ",.1,16,0)
Although the TRACE # field is supposed to be a minimum of 3 characters, 
"IX",344.31,344.31,"FNLZ",.1,17,0)
this logic is designed to handle invalid values in this field.
"IX",344.31,344.31,"FNLZ",1)
Q:'(X?.N!($E(X)=0))!($L(X)<2)  N RC S RC=X X:$E(X)=0&($L(X)>2) "F  S RC=$E(RC,2,$L(RC)) Q:$L(RC)<2!'($E(RC)=0)" S:$L($TR(RC," ")) ^RCY(344.31,"FNLZ",RC_" ",DA)=""
"IX",344.31,344.31,"FNLZ",2)
Q:'(X?.N!($E(X)=0))!($L(X)<2)  N RC S RC=X X:$E(X)=0&($L(X)>2) "F  S RC=$E(RC,2,$L(RC)) Q:$L(RC)<2!'($E(RC)=0)" K:$L($TR(RC," ")) ^RCY(344.31,"FNLZ",RC_" ",DA)
"IX",344.31,344.31,"FNLZ",2.5)
K ^RCY(344.31,"FNLZ")
"IX",344.31,344.31,"FNLZ",11.1,0)
^.114IA^1^1
"IX",344.31,344.31,"FNLZ",11.1,1,0)
1^F^344.31^.04^50^1^F
"IX",344.31,344.31,"FNLZ",11.1,1,3)

"IX",344.4,344.4,"ATRID",0)
344.4^ATRID^Xref by bank trace # and ins co id #^MU^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATRID",1)
S ^RCY(344.4,"ATRID",$E(X(1),1,50),$E(X(2),1,30),DA)=""
"IX",344.4,344.4,"ATRID",2)
K ^RCY(344.4,"ATRID",$E(X(1),1,50),$E(X(2),1,30),DA)
"IX",344.4,344.4,"ATRID",2.5)
K ^RCY(344.4,"ATRID")
"IX",344.4,344.4,"ATRID",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATRID",11.1,1,0)
1^F^344.4^.02^30^1^F
"IX",344.4,344.4,"ATRID",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"ATRIDUP",0)
344.4^ATRIDUP^Case-insensitive lookup for Trace # and Insurance Co.^MU^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATRIDUP",.1,0)
^^5^5^3141001^
"IX",344.4,344.4,"ATRIDUP",.1,1,0)
This cross-reference is used for claim matching without regard to case.  
"IX",344.4,344.4,"ATRIDUP",.1,2,0)
The trace number and insurance company are converted to uppercase and the 
"IX",344.4,344.4,"ATRIDUP",.1,3,0)
software uses this for matching claims by the trace number.  The values 
"IX",344.4,344.4,"ATRIDUP",.1,4,0)
in the TRACE NUMBER (#.02) and INSURANCE CO ID (#.03) fields remain 
"IX",344.4,344.4,"ATRIDUP",.1,5,0)
unchanged.
"IX",344.4,344.4,"ATRIDUP",1)
S ^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($E(X(1),1,50)),$$UP^XLFSTR($E(X(2),1,30)),DA)=""
"IX",344.4,344.4,"ATRIDUP",2)
K ^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($E(X(1),1,50)),$$UP^XLFSTR($E(X(2),1,30)),DA)
"IX",344.4,344.4,"ATRIDUP",2.5)
K ^RCY(344.4,"ATRIDUP")
"IX",344.4,344.4,"ATRIDUP",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATRIDUP",11.1,1,0)
1^F^344.4^.02^50^1^F
"IX",344.4,344.4,"ATRIDUP",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"C",0)
344.4^C^Used to look up entries by the full payer name.^MU^^F^IR^I^344.4^^^^^LS
"IX",344.4,344.4,"C",.1,0)
^^6^6^3141217^
"IX",344.4,344.4,"C",.1,1,0)
This cross-reference is used for payer names of up to 60 characters.  The 
"IX",344.4,344.4,"C",.1,2,0)
HIPAA 5010 mandate allows for payer names to be 60 characters, which is 
"IX",344.4,344.4,"C",.1,3,0)
greater than the length of this field.  The field length cannot be 
"IX",344.4,344.4,"C",.1,4,0)
increased due to FileMan restrictions.
"IX",344.4,344.4,"C",.1,5,0)
 
"IX",344.4,344.4,"C",.1,6,0)
Do not delete this cross-reference.
"IX",344.4,344.4,"C",1)
S ^RCY(344.4,"C",$$UP^XLFSTR($E(X,1,60)),DA)=""
"IX",344.4,344.4,"C",2)
K ^RCY(344.4,"C",$$UP^XLFSTR($E(X,1,60)),DA)
"IX",344.4,344.4,"C",2.5)
K ^RCY(344.4,"C")
"IX",344.4,344.4,"C",11.1,0)
^.114IA^1^1
"IX",344.4,344.4,"C",11.1,1,0)
1^F^344.4^.06^60^1^F
"IX",344.4,344.4,"C",11.1,1,3)

"IX",344.4,344.4,"D",0)
344.4^D^REGULAR INDEX^R^^F^IR^I^344.4^^^^^LS
"IX",344.4,344.4,"D",.1,0)
^^1^1^3140616^
"IX",344.4,344.4,"D",.1,1,0)
This cross-reference is used to look up an ERA by its full trace number.
"IX",344.4,344.4,"D",1)
S ^RCY(344.4,"D",$E(X,1,50),DA)=""
"IX",344.4,344.4,"D",2)
K ^RCY(344.4,"D",$E(X,1,50),DA)
"IX",344.4,344.4,"D",2.5)
K ^RCY(344.4,"D")
"IX",344.4,344.4,"D",11.1,0)
^.114IA^1^1
"IX",344.4,344.4,"D",11.1,1,0)
1^F^344.4^.02^50^1^F
"IX",344.4,344.4,"D",11.1,1,3)

"IX",344.4,344.4,"DNLZ",0)
344.4^DNLZ^Cross-ref. TRACE # without leading zeroes.^MU^^F^IR^I^344.4^^^^^LS
"IX",344.4,344.4,"DNLZ",.1,0)
^^17^17^3140618^
"IX",344.4,344.4,"DNLZ",.1,1,0)
This cross-reference is used to lookup an ERA by its trace number 
"IX",344.4,344.4,"DNLZ",.1,2,0)
without leading zeroes and to allow partial matches for numeric trace 
"IX",344.4,344.4,"DNLZ",.1,3,0)
numbers. The "D" cross-reference is used for the full trace number.  "NLZ"
"IX",344.4,344.4,"DNLZ",.1,4,0)
means "No Leading Zeroes", hence "DNLZ" for this cross-reference.
"IX",344.4,344.4,"DNLZ",.1,5,0)
 
"IX",344.4,344.4,"DNLZ",.1,6,0)
After the leading zeroes are removed a space (" ") is appended to the
"IX",344.4,344.4,"DNLZ",.1,7,0)
cross-referenced value for collation purposes.  This cross-reference is 
"IX",344.4,344.4,"DNLZ",.1,8,0)
only SET or KILLed for TRACE # entries that are numeric or those with 
"IX",344.4,344.4,"DNLZ",.1,9,0)
leading zeroes and numerics.
"IX",344.4,344.4,"DNLZ",.1,10,0)
 
"IX",344.4,344.4,"DNLZ",.1,11,0)
A trace number such as "000345678" is stored as "345678 ", "001 " as 
"IX",344.4,344.4,"DNLZ",.1,12,0)
"1 ",and "1234" as "1234 ".
"IX",344.4,344.4,"DNLZ",.1,13,0)
 
"IX",344.4,344.4,"DNLZ",.1,14,0)
Trace numbers such as "000","0000","00000", etc. are stored as "0 ".
"IX",344.4,344.4,"DNLZ",.1,15,0)
 
"IX",344.4,344.4,"DNLZ",.1,16,0)
Although the TRACE # field is supposed to be a minimum of 3 characters, 
"IX",344.4,344.4,"DNLZ",.1,17,0)
this logic is designed to handle invalid values in this field.
"IX",344.4,344.4,"DNLZ",1)
Q:'(X?.N!($E(X)=0))  N RC S RC=X X:$E(X)=0&($L(X)>2) "F  S RC=$E(RC,2,$L(RC)) Q:$L(RC)<2!'($E(RC)=0)" S ^RCY(344.4,"DNLZ",RC_" ",DA)=""
"IX",344.4,344.4,"DNLZ",2)
Q:'(X?.N!($E(X)=0))  N RC S RC=X X:$E(X)=0&($L(X)>2) "F  S RC=$E(RC,2,$L(RC)) Q:$L(RC)<2!'($E(RC)=0)" K ^RCY(344.4,"DNLZ",RC_" ",DA)
"IX",344.4,344.4,"DNLZ",2.5)
K ^RCY(344.4,"DNLZ")
"IX",344.4,344.4,"DNLZ",11.1,0)
^.114IA^1^1
"IX",344.4,344.4,"DNLZ",11.1,1,0)
1^F^344.4^.02^50^1^F
"IX",344.6,344.6,"C",0)
344.6^C^Used to find entry by PAYER ID.^MU^^F^IR^I^344.6^^^^^LS
"IX",344.6,344.6,"C",.1,0)
^^5^5^3140827^
"IX",344.6,344.6,"C",.1,1,0)
This cross-reference is used for looking up an entry by the PAYER ID.  
"IX",344.6,344.6,"C",.1,2,0)
This field is free text and a PAYER ID may be just numbers.  This 
"IX",344.6,344.6,"C",.1,3,0)
cross-reference appends a space as a suffix to the PAYER ID and this 
"IX",344.6,344.6,"C",.1,4,0)
allows for a lookup by a partial PAYER ID in all cases, that is, whether 
"IX",344.6,344.6,"C",.1,5,0)
or not the PAYER ID is just numbers or numbers and letters.
"IX",344.6,344.6,"C",1)
Q:X=""  S ^RCY(344.6,"C",$E(X,1,30)_" ",DA)=""
"IX",344.6,344.6,"C",2)
Q:X=""  K ^RCY(344.6,"C",$E(X,1,30)_" ",DA)
"IX",344.6,344.6,"C",2.5)
K ^RCY(344.6,"C")
"IX",344.6,344.6,"C",11.1,0)
^.114IA^1^1
"IX",344.6,344.6,"C",11.1,1,0)
1^F^344.6^.02^31^1^F
"IX",344.6,344.6,"CPID",0)
344.6^CPID^Combination of the PAYER NAME and PAYER ID^R^^R^IR^I^344.6^^^^^LS
"IX",344.6,344.6,"CPID",.1,0)
^^2^2^3140506^
"IX",344.6,344.6,"CPID",.1,1,0)
This index is used to ensure that the PAYER NAME /PAYER ID combination is 
"IX",344.6,344.6,"CPID",.1,2,0)
unique.
"IX",344.6,344.6,"CPID",1)
S ^RCY(344.6,"CPID",$E(X(1),1,60),$E(X(2),1,30),DA)=""
"IX",344.6,344.6,"CPID",2)
K ^RCY(344.6,"CPID",$E(X(1),1,60),$E(X(2),1,30),DA)
"IX",344.6,344.6,"CPID",2.5)
K ^RCY(344.6,"CPID")
"IX",344.6,344.6,"CPID",11.1,0)
^.114IA^2^2
"IX",344.6,344.6,"CPID",11.1,1,0)
1^F^344.6^.01^60^1^F
"IX",344.6,344.6,"CPID",11.1,2,0)
2^F^344.6^.02^30^2^F
"KRN",19,1422,-1)
0^31
"KRN",19,1422,0)
PRCAF U ADMIN.RATE^Interest/Admin/Penalty Rates^^A^^^^^^^^^^1^
"KRN",19,1422,1,0)
^^2^2^2920504^^^^
"KRN",19,1422,1,1,0)
This adds/edits the administrative costs and interest rates charged
"KRN",19,1422,1,2,0)
on delinquent accounts.
"KRN",19,1422,15)

"KRN",19,1422,20)
D UPINT^RCMSITE K DTOUT
"KRN",19,1422,25)

"KRN",19,1422,99)
55568,67951
"KRN",19,1422,"U")
INTEREST/ADMIN/PENALTY RATES
"KRN",19,1502,-1)
0^26
"KRN",19,1502,0)
PRCA BIL AGENCY^Group Parameters^^A^^PRCASVC^^^^^^^^1
"KRN",19,1502,1,0)
^^1^1^2920428^^^
"KRN",19,1502,1,1,0)
User can add/edit the billing agency address with this option.
"KRN",19,1502,20)
D GRP^RCMSITE K DTOUT
"KRN",19,1502,25)

"KRN",19,1502,99)
55565,56272
"KRN",19,1502,"U")
GROUP PARAMETERS
"KRN",19,2923401,-1)
0^8
"KRN",19,2923401,0)
PRCA SITE PARAMETER^Site Parameter Edit^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2923401,1,0)
^19.06^4^4^3140529^^^^
"KRN",19,2923401,1,1,0)
This option will allow the AR Supervisor to edit the site parameters
"KRN",19,2923401,1,2,0)
for the AR Package.  The site parameters allows the system to tailor
"KRN",19,2923401,1,3,0)
itself for specific site needs, such as: Number of days to purge
"KRN",19,2923401,1,4,0)
Agent Cashier Receipts, When to generate IRS Offset Letters, etc.
"KRN",19,2923401,10,0)
^19.01IP^12^12
"KRN",19,2923401,10,3,0)
2923406^
"KRN",19,2923401,10,3,"^")
PRCA NOTIFICATION PARAMETERS
"KRN",19,2923401,10,4,0)
1502^
"KRN",19,2923401,10,4,"^")
PRCA BIL AGENCY
"KRN",19,2923401,10,5,0)
1422^
"KRN",19,2923401,10,5,"^")
PRCAF U ADMIN.RATE
"KRN",19,2923401,10,6,0)
2923470^
"KRN",19,2923401,10,6,"^")
PRCA DEACTIVATE GROUP
"KRN",19,2923401,10,7,0)
2924104
"KRN",19,2923401,10,7,"^")
PRCA RC PARAMETERS
"KRN",19,2923401,10,8,0)
2927813
"KRN",19,2923401,10,8,"^")
RCDPE EDI LOCKBOX PARAMETERS
"KRN",19,2923401,10,9,0)
2928161^^99
"KRN",19,2923401,10,9,"^")
PRCA CBO PARAMETERS
"KRN",19,2923401,10,10,0)
2929715
"KRN",19,2923401,10,10,"^")
RCDPE SITE PARAMETER REPORT
"KRN",19,2923401,10,11,0)
2929716
"KRN",19,2923401,10,11,"^")
RCDPE PARAMETER AUDIT REPORT
"KRN",19,2923401,10,12,0)
2929717
"KRN",19,2923401,10,12,"^")
RCDPE EXCLUSION AUDIT REPORT
"KRN",19,2923401,99)
63459,54580
"KRN",19,2923401,"U")
SITE PARAMETER EDIT
"KRN",19,2923406,-1)
0^29
"KRN",19,2923406,0)
PRCA NOTIFICATION PARAMETERS^Statement Parameters^^A^^^^^^^^ACCOUNTS RECEIVABLE^^1
"KRN",19,2923406,1,0)
^^3^3^2930616^^^
"KRN",19,2923406,1,1,0)
This option will allow the AR Supervisor to edit parameters specific
"KRN",19,2923406,1,2,0)
to the Patient Statements.  This will allow the user to control
"KRN",19,2923406,1,3,0)
functionality related to statements.
"KRN",19,2923406,20)
D STAT^RCMSITE K DTOUT
"KRN",19,2923406,99)
55686,33311
"KRN",19,2923406,"U")
STATEMENT PARAMETERS
"KRN",19,2923470,-1)
0^28
"KRN",19,2923470,0)
PRCA DEACTIVATE GROUP^Deactivate Group^^A^^^^^^^^ACCOUNTS RECEIVABLE^^1
"KRN",19,2923470,1,0)
^^1^1^2950207^
"KRN",19,2923470,1,1,0)
This option is used to mark an AR group as being inactive.
"KRN",19,2923470,20)
D DEA^RCMSITE K DTOUT
"KRN",19,2923470,"U")
DEACTIVATE GROUP
"KRN",19,2924104,-1)
0^30
"KRN",19,2924104,0)
PRCA RC PARAMETERS^RC Parameters Edit^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2924104,1,0)
^^2^2^2971210^^
"KRN",19,2924104,1,1,0)
This option allows users to edit the Regional Counsel
"KRN",19,2924104,1,2,0)
Interface Site Parameters.
"KRN",19,2924104,25)
SITE^RCRCXMS
"KRN",19,2924104,"U")
RC PARAMETERS EDIT
"KRN",19,2927813,-1)
0^3
"KRN",19,2927813,0)
RCDPE EDI LOCKBOX PARAMETERS^EDI Lockbox Parameters^^R^^RCDPE AUTO DEC^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927813,1,0)
^19.06^3^3^3140218^^^^
"KRN",19,2927813,1,1,0)
This option allows users to edit the EDI Lockbox site parameters.  These
"KRN",19,2927813,1,2,0)
parameters include: Number of Days EFT Unmatched, and Number of Days ERA
"KRN",19,2927813,1,3,0)
Unmatched. 
"KRN",19,2927813,25)
EN^RCDPESP
"KRN",19,2927813,"U")
EDI LOCKBOX PARAMETERS
"KRN",19,2927815,-1)
0^18
"KRN",19,2927815,0)
RCDPE EXCEPTION PROCESSING^EDI Lockbox 3rd Party Exceptions^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927815,1,0)
^19.06^5^5^3021105^^^^
"KRN",19,2927815,1,1,0)
This option provides a list of ERA/EOB records that are currently marked with
"KRN",19,2927815,1,2,0)
an exception condition.  The option allows you to list either the ERA
"KRN",19,2927815,1,3,0)
messages that are unfiled in VistA (transmission exceptions) or those
"KRN",19,2927815,1,4,0)
that were filed, but have data exceptions.  The records can then be
"KRN",19,2927815,1,5,0)
viewed and various options are provided to reconcile the exceptions.
"KRN",19,2927815,25)
EN^RCDPEX1
"KRN",19,2927815,"U")
EDI LOCKBOX 3RD PARTY EXCEPTIO
"KRN",19,2927816,-1)
0^33
"KRN",19,2927816,0)
RCDPE EFT AGING REPORT^EFT Unmatched Aging Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927816,1,0)
^19.06^4^4^3021105^^^^
"KRN",19,2927816,1,1,0)
This option produces the EFT aging report.  This report contains a list
"KRN",19,2927816,1,2,0)
of all Electronic Funds Transfer (EFT) records that have not been
"KRN",19,2927816,1,3,0)
successfully matched to ERAs within the user specified number
"KRN",19,2927816,1,4,0)
of days.  The report can be run with or without details for each record.
"KRN",19,2927816,25)
EN1^RCDPEAR2
"KRN",19,2927816,"U")
EFT UNMATCHED AGING REPORT
"KRN",19,2927817,-1)
0^36
"KRN",19,2927817,0)
RCDPE ERA AGING REPORT^ERA Unmatched Aging Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927817,1,0)
^19.06^4^4^3021216^^^^
"KRN",19,2927817,1,1,0)
This option produces the ERA aging report.  This report contains a list
"KRN",19,2927817,1,2,0)
of all Electronic Remittance Advice (ERA) records that have not been
"KRN",19,2927817,1,3,0)
successfully matched to electronic EFTs within the user specified number
"KRN",19,2927817,1,4,0)
of days.  The report can be run with or without details for each record.
"KRN",19,2927817,25)
EN1^RCDPEAR1
"KRN",19,2927817,"U")
ERA UNMATCHED AGING REPORT
"KRN",19,2927818,-1)
0^21
"KRN",19,2927818,0)
RCDPE MATCH EFT TO ERA^Automatic Match EFTs to ERAs^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927818,1,0)
^19.06^5^5^3021216^^^^
"KRN",19,2927818,1,1,0)
This option will start the job to match the 3rd Party Lockbox EFT records
"KRN",19,2927818,1,2,0)
that have not yet been matched to the electronic ERAs currently on file.
"KRN",19,2927818,1,3,0)
This option runs a part of the normal nightly processing, but can be run
"KRN",19,2927818,1,4,0)
on demand here.  The job must be queued and only one of these jobs can
"KRN",19,2927818,1,5,0)
be running at any given time.
"KRN",19,2927818,25)
EN1^RCDPEM1
"KRN",19,2927818,"U")
AUTOMATIC MATCH EFTS TO ERAS
"KRN",19,2927819,-1)
0^4
"KRN",19,2927819,0)
RCDPE EDI LOCKBOX WORKLIST^ERA Worklist^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927819,1,0)
^19.06^6^6^3030610^^^^
"KRN",19,2927819,1,1,0)
This option provides a list of electronic EOB detail records that were
"KRN",19,2927819,1,2,0)
included on a selected electronic remittance advice (ERA).  It allows for
"KRN",19,2927819,1,3,0)
the creation of a receipt that will post the detail contained in each EOB
"KRN",19,2927819,1,4,0)
against the site's A/R and to FMS.  To accomplish this, some manipulation
"KRN",19,2927819,1,5,0)
of the payment data may be necessary and some of the tools for performing
"KRN",19,2927819,1,6,0)
this manipulation are included in this function.
"KRN",19,2927819,25)
EN^RCDPEWL
"KRN",19,2927819,"U")
ERA WORKLIST
"KRN",19,2927821,-1)
0^12
"KRN",19,2927821,0)
RCDPE EDI LOCKBOX MENU^EDI Lockbox^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927821,1,0)
^19.06^1^1^3140429^^^^
"KRN",19,2927821,1,1,0)
This is the menu that contains the EDI Lockbox functionality.
"KRN",19,2927821,10,0)
^19.01IP^17^17
"KRN",19,2927821,10,2,0)
2927819^WL^10
"KRN",19,2927821,10,2,"^")
RCDPE EDI LOCKBOX WORKLIST
"KRN",19,2927821,10,5,0)
2927815^EXC^5
"KRN",19,2927821,10,5,"^")
RCDPE EXCEPTION PROCESSING
"KRN",19,2927821,10,6,0)
2927818^MA^20
"KRN",19,2927821,10,6,"^")
RCDPE MATCH EFT TO ERA
"KRN",19,2927821,10,7,0)
2927824^REP^55
"KRN",19,2927821,10,7,"^")
RCDPE EDI LOCKBOX REPORTS MENU
"KRN",19,2927821,10,8,0)
2927825^MM^30
"KRN",19,2927821,10,8,"^")
RCDPE MANUAL MATCH EFT-ERA
"KRN",19,2927821,10,9,0)
2927826^ZB^70
"KRN",19,2927821,10,9,"^")
RCDPE MARK 0-BAL EFT MATCHED
"KRN",19,2927821,10,10,0)
2927827^MO^35
"KRN",19,2927821,10,10,"^")
RCDPE MOVE ERA TO SUSPENSE
"KRN",19,2927821,10,11,0)
2927830^UP^65
"KRN",19,2927821,10,11,"^")
RCDPE ERA POSTED BY PAPER EOB
"KRN",19,2927821,10,12,0)
2927832^UN^60
"KRN",19,2927821,10,12,"^")
RCDPE UNMATCH ERA
"KRN",19,2927821,10,13,0)
2928165^REM^50
"KRN",19,2927821,10,13,"^")
RCDPE REMOVE ERA FROM WORKLIST
"KRN",19,2927821,10,14,0)
2929253^MCR^25
"KRN",19,2927821,10,14,"^")
RCDPE EEOB MOVE/COPY/REMOVE
"KRN",19,2927821,10,15,0)
2929255^REFT^45
"KRN",19,2927821,10,15,"^")
RCDPE REMOVE DUP DEPOSITS
"KRN",19,2927821,10,16,0)
2929730^OEFT^40
"KRN",19,2927821,10,16,"^")
RCDPE UNPOSTED EFT OVERRIDE
"KRN",19,2927821,10,17,0)
2929744^APAR^15
"KRN",19,2927821,10,17,"^")
RCDPE APAR
"KRN",19,2927821,10.1)

"KRN",19,2927821,99)
63459,54580
"KRN",19,2927821,"U")
EDI LOCKBOX
"KRN",19,2927822,-1)
0^15
"KRN",19,2927822,0)
RCDPE EDI LOCKBOX ACT REPORT^EFT Daily Activity Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927822,1,0)
^^6^6^3140428^
"KRN",19,2927822,1,1,0)
This option produces the EDI Lockbox EFT Daily Activity Report.  This
"KRN",19,2927822,1,2,0)
report can be run in detail or summary format.  Detail format provides a
"KRN",19,2927822,1,3,0)
detailed list of all EFT deposits received within the selected date range
"KRN",19,2927822,1,4,0)
and the corresponding EFT payments from the payers comprising the deposit.
"KRN",19,2927822,1,5,0)
Totals are provided by date and date range selected.  Summary format 
"KRN",19,2927822,1,6,0)
prints only the totals data.
"KRN",19,2927822,25)
RPT^RCDPEDAR
"KRN",19,2927822,"U")
EFT DAILY ACTIVITY REPORT
"KRN",19,2927823,-1)
0^40
"KRN",19,2927823,0)
RCDPE UNAPPLIED EFT DEP REPORT^Unapplied EFT Deposits Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927823,1,0)
^19.06^3^3^3030320^^^^
"KRN",19,2927823,1,1,0)
This option produces a list of EFT deposits that have EFT detail records
"KRN",19,2927823,1,2,0)
whose funds have not been applied to bills in A/R.  These funds remain
"KRN",19,2927823,1,3,0)
in FUND 5287, REVENUE SOURCE CODE 8NZZ.
"KRN",19,2927823,25)
EN^RCDPE8NZ
"KRN",19,2927823,"U")
UNAPPLIED EFT DEPOSITS REPORT
"KRN",19,2927824,-1)
0^5
"KRN",19,2927824,0)
RCDPE EDI LOCKBOX REPORTS MENU^EDI Lockbox Reports Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927824,1,0)
2^19.06^2^2^3140224^^^^
"KRN",19,2927824,1,1,0)
This menu allows access to all the reports that can be produced for EDI
"KRN",19,2927824,1,2,0)
Lockbox.
"KRN",19,2927824,10,0)
^19.01IP^15^15
"KRN",19,2927824,10,1,0)
2927822^DA^10
"KRN",19,2927824,10,1,"^")
RCDPE EDI LOCKBOX ACT REPORT
"KRN",19,2927824,10,3,0)
2927816^EFT^30
"KRN",19,2927824,10,3,"^")
RCDPE EFT AGING REPORT
"KRN",19,2927824,10,4,0)
2927817^ERA^40
"KRN",19,2927824,10,4,"^")
RCDPE ERA AGING REPORT
"KRN",19,2927824,10,5,0)
2927823^UN^50
"KRN",19,2927824,10,5,"^")
RCDPE UNAPPLIED EFT DEP REPORT
"KRN",19,2927824,10,6,0)
2927831^VP
"KRN",19,2927824,10,6,"^")
RCDPE VIEW/PRINT ERA
"KRN",19,2927824,10,7,0)
2928163^AB
"KRN",19,2927824,10,7,"^")
RCDPE ACTIVE WITH EEOB REPORT
"KRN",19,2927824,10,9,0)
2929254^REMR^
"KRN",19,2927824,10,9,"^")
RCDPE REMOVED ERA AUDIT
"KRN",19,2927824,10,10,0)
2929256^POSR^
"KRN",19,2927824,10,10,"^")
RCDPE ERA W/PAPER EOB REPORT
"KRN",19,2927824,10,11,0)
2929257^DUPR
"KRN",19,2927824,10,11,"^")
RCDPE EFT AUDIT REPORT
"KRN",19,2927824,10,12,0)
2929258^MCR
"KRN",19,2927824,10,12,"^")
RCDPE EEOB MOVE/COPY/RMOVE RPT
"KRN",19,2927824,10,13,0)
2929713^AP
"KRN",19,2927824,10,13,"^")
RCDPE AUTO-POST REPORT
"KRN",19,2927824,10,14,0)
2929714^AD
"KRN",19,2927824,10,14,"^")
RCDPE AUTO-DECREASE REPORT
"KRN",19,2927824,10,15,0)
2929728^PX
"KRN",19,2927824,10,15,"^")
RCDPE PAYER EXCLUSION NAME TIN
"KRN",19,2927824,99)
63502,37934
"KRN",19,2927824,99.1)
59232,49629
"KRN",19,2927824,"U")
EDI LOCKBOX REPORTS MENU
"KRN",19,2927825,-1)
0^19
"KRN",19,2927825,0)
RCDPE MANUAL MATCH EFT-ERA^Manual Match EFT-ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927825,1,0)
^19.06^5^5^3030512^^^^
"KRN",19,2927825,1,1,0)
This option will allow the user to choose an EFT detail record and an ERA
"KRN",19,2927825,1,2,0)
record and will mark the 2 records as matched.  This should be used only
"KRN",19,2927825,1,3,0)
if the automatic matching function is not able to make the match. The
"KRN",19,2927825,1,4,0)
EFT and ERA selected must both be unmatched and the ERA must not be
"KRN",19,2927825,1,5,0)
associated with a receipt.
"KRN",19,2927825,25)
MATCH1^RCDPEM2
"KRN",19,2927825,"U")
MANUAL MATCH EFT-ERA
"KRN",19,2927826,-1)
0^20
"KRN",19,2927826,0)
RCDPE MARK 0-BAL EFT MATCHED^Mark 0-Balance EFT Matched^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927826,1,0)
^19.06^3^3^3030603^^^^
"KRN",19,2927826,1,1,0)
This option allows the user to select an EFT detail record that has a
"KRN",19,2927826,1,2,0)
0-balance payment and mark it as matched to a paper EOB.  This will
"KRN",19,2927826,1,3,0)
remove it from the EFT UNMATCHED AGING REPORT.
"KRN",19,2927826,25)
MATCH2^RCDPEM2
"KRN",19,2927826,"U")
MARK 0-BALANCE EFT MATCHED
"KRN",19,2927827,-1)
0^22
"KRN",19,2927827,0)
RCDPE MOVE ERA TO SUSPENSE^Move ERA Total To Suspense^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927827,1,0)
^19.06^10^10^3030520^^^^
"KRN",19,2927827,1,1,0)
This option will allow the user to choose an ERA record that is matched
"KRN",19,2927827,1,2,0)
to an EFT deposit and will create a receipt to post the total amount
"KRN",19,2927827,1,3,0)
reported as being paid on the EFT to SUSPENSE.  The ERA record must
"KRN",19,2927827,1,4,0)
not already have a receipt attached to it.  This option is used to force a
"KRN",19,2927827,1,5,0)
'TR' document to be generated from the EDI Lockbox deposit account to the
"KRN",19,2927827,1,6,0)
suspense account when creating/posting a receipt can not be done due to
"KRN",19,2927827,1,7,0)
take backs or other situations where the EFT and ERA amounts do not match.
"KRN",19,2927827,1,8,0)
NO posting to individual claims in AR is accomplished by this option.
"KRN",19,2927827,1,9,0)
These must be done manually.  FMS is updated if there is any payment
"KRN",19,2927827,1,10,0)
indicated on the EFT.
"KRN",19,2927827,25)
SUSPERA^RCDPEWL5
"KRN",19,2927827,"U")
MOVE ERA TOTAL TO SUSPENSE
"KRN",19,2927830,-1)
0^17
"KRN",19,2927830,0)
RCDPE ERA POSTED BY PAPER EOB^Update ERA Posted Using Paper EOB^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927830,1,0)
^19.06^4^4^3030828^^^^
"KRN",19,2927830,1,1,0)
This option is used to mark an ERA as posted when the paper EOB containing
"KRN",19,2927830,1,2,0)
this ERA data was posted to your A/R and FMS and no reference to the ERA
"KRN",19,2927830,1,3,0)
was included.  This will mark the ERA as posted.  It will require you to
"KRN",19,2927830,1,4,0)
enter the receipt # that was used to post the ERA information.
"KRN",19,2927830,25)
POSTED^RCDPEM2
"KRN",19,2927830,"U")
UPDATE ERA POSTED USING PAPER 
"KRN",19,2927831,-1)
0^41
"KRN",19,2927831,0)
RCDPE VIEW/PRINT ERA^View/Print ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927831,1,0)
^19.06^1^1^3030911^^^^
"KRN",19,2927831,1,1,0)
This option allows you to select an ERA and print or view its contents.
"KRN",19,2927831,25)
PRTERA^RCDPEWL0
"KRN",19,2927831,"U")
VIEW/PRINT ERA
"KRN",19,2927832,-1)
0^25
"KRN",19,2927832,0)
RCDPE UNMATCH ERA^Unmatch An ERA^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2927832,1,0)
^19.06^6^6^3030912^^^^
"KRN",19,2927832,1,1,0)
This option allows you to remove the match status from an ERA if it was
"KRN",19,2927832,1,2,0)
added in error.  You may only select an ERA that was previously marked as
"KRN",19,2927832,1,3,0)
matched and that has had no receipt created for it yet.  If the worklist
"KRN",19,2927832,1,4,0)
entry has been created, it will be deleted before it allows the unmatch
"KRN",19,2927832,1,5,0)
to occur.  If the ERA was matched to an EFT, the EFT will be remarked as
"KRN",19,2927832,1,6,0)
unmatched too.
"KRN",19,2927832,25)
UNMATCH^RCDPEM2
"KRN",19,2927832,"U")
UNMATCH AN ERA
"KRN",19,2928161,-1)
0^27
"KRN",19,2928161,0)
PRCA CBO PARAMETERS^CBO Data Extract Parameters Edit^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2928161,1,0)
^19.06^2^2^3110404^^^^
"KRN",19,2928161,1,1,0)
This option allows the AR supervisor to define certain parameters
"KRN",19,2928161,1,2,0)
for the CBO Data Extract.
"KRN",19,2928161,25)
EN^RCXVPARM
"KRN",19,2928161,"U")
CBO DATA EXTRACT PARAMETERS ED
"KRN",19,2928163,-1)
0^32
"KRN",19,2928163,0)
RCDPE ACTIVE WITH EEOB REPORT^Active Bills With EEOB Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2928163,1,0)
^19.06^3^3^3040127^^^^
"KRN",19,2928163,1,1,0)
This option produces the ACTIVE BILLS WITH EEOBs report.  This report
"KRN",19,2928163,1,2,0)
contains a list of bills by insurance company that have EEOBs on file
"KRN",19,2928163,1,3,0)
and also have a balance greater than 0.
"KRN",19,2928163,25)
EN^RCDPEAC
"KRN",19,2928163,"U")
ACTIVE BILLS WITH EEOB REPORT
"KRN",19,2928165,-1)
0^24
"KRN",19,2928165,0)
RCDPE REMOVE ERA FROM WORKLIST^Remove ERA from Active Worklist^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2928165,1,0)
^^7^7^3120125^
"KRN",19,2928165,1,1,0)
This option allows you to remove an ERA from the active worklist.
"KRN",19,2928165,1,2,0)
You may only select an ERA that is unmatched to paper check and that is 
"KRN",19,2928165,1,3,0)
UNPOSTED. Use this option only if a receipt number is not available; 
"KRN",19,2928165,1,4,0)
otherwise, use the 'Update an ERA posted using paper EOB' option.
"KRN",19,2928165,1,5,0)
This marks the POSTED status of the ERA as NOT POSTED-REMOVED
"KRN",19,2928165,1,6,0)
and the EFT MATCH STATUS to MATCHED. Option is locked with RCDPE MARK ERA 
"KRN",19,2928165,1,7,0)
key.
"KRN",19,2928165,25)
RETN^RCDPEM2
"KRN",19,2928165,"U")
REMOVE ERA FROM ACTIVE WORKLIS
"KRN",19,2929253,-1)
0^2
"KRN",19,2929253,0)
RCDPE EEOB MOVE/COPY/REMOVE^EEOB Move/Copy/Remove^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929253,1,0)
^^6^6^3140228^
"KRN",19,2929253,1,1,0)
This option allows an EEOB incorrectly matched to a claim to be moved to
"KRN",19,2929253,1,2,0)
the correct claim or claims.  In addition, this option allows those with
"KRN",19,2929253,1,3,0)
the appropriate security key to remove an EEOB from a claim.  This is to
"KRN",19,2929253,1,4,0)
be used when the EEOB was matched to an incorrect claim and the EEOB does
"KRN",19,2929253,1,5,0)
not belong to this facility.  That is, the matching claim does not exist
"KRN",19,2929253,1,6,0)
in this system of records.
"KRN",19,2929253,25)
EN^RCDPEM5
"KRN",19,2929253,"U")
EEOB MOVE/COPY/REMOVE
"KRN",19,2929254,-1)
0^39
"KRN",19,2929254,0)
RCDPE REMOVED ERA AUDIT^Remove ERA from Active Worklist Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE^^
"KRN",19,2929254,1,0)
^19.06^2^2^3120117^^
"KRN",19,2929254,1,1,0)
This report lists ERAs that have been removed from the active worklist.
"KRN",19,2929254,1,2,0)
It can be filtered by Station/Division and by date range.
"KRN",19,2929254,10.1)

"KRN",19,2929254,20)

"KRN",19,2929254,25)
EN^RCDPEM3
"KRN",19,2929254,"U")
REMOVE ERA FROM ACTIVE WORKLIS
"KRN",19,2929255,-1)
0^23
"KRN",19,2929255,0)
RCDPE REMOVE DUP DEPOSITS^Remove Duplicate EFT Deposits^^R^^^^^^^^^^
"KRN",19,2929255,1,0)
^^2^2^3110408^
"KRN",19,2929255,1,1,0)
Allows authorized users to mark and EFT as a duplicate.  Requires that 
"KRN",19,2929255,1,2,0)
the user have the RCDPE REMOVE DUPLICATES security key.
"KRN",19,2929255,10.1)

"KRN",19,2929255,20)

"KRN",19,2929255,25)
RETN^RCDPEM3
"KRN",19,2929255,"U")
REMOVE DUPLICATE EFT DEPOSITS
"KRN",19,2929256,-1)
0^37
"KRN",19,2929256,0)
RCDPE ERA W/PAPER EOB REPORT^ERAs Posted with Paper EOB Audit Report^^R^^^^^^^y^ACCOUNTS RECEIVABLE
"KRN",19,2929256,1,0)
^19.06^2^2^3110825^^
"KRN",19,2929256,1,1,0)
This report lists ERAs that have been marked as posted with paper EOB.
"KRN",19,2929256,1,2,0)
The report can be filtered by Station/Division and by date range.  
"KRN",19,2929256,25)
POST^RCDPEM4
"KRN",19,2929256,"U")
ERAS POSTED WITH PAPER EOB AUD
"KRN",19,2929257,-1)
0^34
"KRN",19,2929257,0)
RCDPE EFT AUDIT REPORT^Duplicate EFT Deposits Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE^^
"KRN",19,2929257,1,0)
^19.06^1^1^3110824^^^^
"KRN",19,2929257,1,1,0)
This report lists EFTs which have been marked as duplicates.
"KRN",19,2929257,10.1)

"KRN",19,2929257,20)

"KRN",19,2929257,25)
EN1^RCDPEM6
"KRN",19,2929257,"U")
DUPLICATE EFT DEPOSITS AUDIT R
"KRN",19,2929258,-1)
0^1
"KRN",19,2929258,0)
RCDPE EEOB MOVE/COPY/RMOVE RPT^EEOB Move/Copy/Remove Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929258,1,0)
^19.06^3^3^3140529^^^^
"KRN",19,2929258,1,1,0)
This report lists EEOBs that have either been moved or copied to new claim
"KRN",19,2929258,1,2,0)
numbers or have been removed from a claim. The report can be filtered by
"KRN",19,2929258,1,3,0)
Station/Division and by date range.  
"KRN",19,2929258,25)
EOB^RCDPEM4
"KRN",19,2929258,"U")
EEOB MOVE/COPY/REMOVE AUDIT RE
"KRN",19,2929712,-1)
0^14
"KRN",19,2929712,0)
RCDPETT TOOL^ePayments Testing Tool^^R^^^^^^^^
"KRN",19,2929712,1,0)
^^4^4^3140203^
"KRN",19,2929712,1,1,0)
This option is reserved exclusively for the use of the Accounts 
"KRN",19,2929712,1,2,0)
Receivable, Inpatient Billing, ePayments, and eBilling developers.
"KRN",19,2929712,1,3,0)
 
"KRN",19,2929712,1,4,0)
No site staff should use or assign this option.
"KRN",19,2929712,25)
RCDPETT
"KRN",19,2929712,99.1)
63222,49022
"KRN",19,2929712,"U")
EPAYMENTS TESTING TOOL
"KRN",19,2929713,-1)
0^43
"KRN",19,2929713,0)
RCDPE AUTO-POST REPORT^Auto-Post Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929713,1,0)
^^2^2^3140703^
"KRN",19,2929713,1,1,0)
This report lists ERAs that have been auto-posted by the nightly process.
"KRN",19,2929713,1,2,0)
The report can be filtered by Station/Division and by date range.
"KRN",19,2929713,25)
RPT^RCDPEAPP
"KRN",19,2929713,"U")
AUTO-POST REPORT
"KRN",19,2929714,-1)
0^44
"KRN",19,2929714,0)
RCDPE AUTO-DECREASE REPORT^Auto-Decrease Adjustment report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929714,1,0)
^19.06^3^3^3140703^^^
"KRN",19,2929714,1,1,0)
This report lists ERA claims with residual balances for which decrease 
"KRN",19,2929714,1,2,0)
adjustments have been automatically applied by the nightly process. The
"KRN",19,2929714,1,3,0)
report can be filtered by Station/Division and by date range.
"KRN",19,2929714,25)
RPT^RCDPEADP
"KRN",19,2929714,"U")
AUTO-DECREASE ADJUSTMENT REPOR
"KRN",19,2929715,-1)
0^9
"KRN",19,2929715,0)
RCDPE SITE PARAMETER REPORT^EDI Lockbox Parameters Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929715,1,0)
^^9^9^3140708^
"KRN",19,2929715,1,1,0)
This report lists EDI Lockbox parameters.  The report includes ERA /EFT 
"KRN",19,2929715,1,2,0)
number of days unmatched, auto-post /auto-decrease of medical claims 
"KRN",19,2929715,1,3,0)
data, and the number of days for medical /pharmacy EFTs to prevent 
"KRN",19,2929715,1,4,0)
posting.
"KRN",19,2929715,1,5,0)
 
"KRN",19,2929715,1,6,0)
Information is displayed from these files:
"KRN",19,2929715,1,7,0)
   AR SITE PARAMETER file (#342)
"KRN",19,2929715,1,8,0)
   RCDPE PARAMETER file (#344.61)
"KRN",19,2929715,1,9,0)
   RCDPE AUTO-PAY EXCLUSION file (#344.6)
"KRN",19,2929715,25)
RPT^RCDPESP1
"KRN",19,2929715,"U")
EDI LOCKBOX PARAMETERS REPORT
"KRN",19,2929716,-1)
0^10
"KRN",19,2929716,0)
RCDPE PARAMETER AUDIT REPORT^EDI Lockbox Parameters Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929716,1,0)
^19.06^2^2^3140220^^
"KRN",19,2929716,1,1,0)
This option launches the EDI Lockbox Parameter Audit Report 
"KRN",19,2929716,1,2,0)
(RPT^RCDPESP2).
"KRN",19,2929716,25)
RPT1^RCDPESP2
"KRN",19,2929716,"U")
EDI LOCKBOX PARAMETERS AUDIT R
"KRN",19,2929717,-1)
0^11
"KRN",19,2929717,0)
RCDPE EXCLUSION AUDIT REPORT^EDI Lockbox Exclusion Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929717,1,0)
^^3^3^3140725^
"KRN",19,2929717,1,1,0)
This report is a listing of the RCDPE PARAMETER AUDIT file (#344.7)
"KRN",19,2929717,1,2,0)
including data concerning changes to the RCDPE AUTO-PAY EXCLUSION file 
"KRN",19,2929717,1,3,0)
(#344.6).
"KRN",19,2929717,25)
RPT2^RCDPESP2
"KRN",19,2929717,"U")
EDI LOCKBOX EXCLUSION AUDIT RE
"KRN",19,2929728,-1)
0^46
"KRN",19,2929728,0)
RCDPE PAYER EXCLUSION NAME TIN^Payer Exclusion Name / TIN Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929728,1,0)
^^2^2^3141023^
"KRN",19,2929728,1,1,0)
Launches a report to show the payers, with columns for payer name, payer 
"KRN",19,2929728,1,2,0)
TIN, and the date on which the payer was added to the database.
"KRN",19,2929728,25)
RPT^RCDPESP3
"KRN",19,2929728,"U")
PAYER EXCLUSION NAME / TIN REP
"KRN",19,2929730,-1)
0^13
"KRN",19,2929730,0)
RCDPE UNPOSTED EFT OVERRIDE^Unposted EFT Override^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929730,1,0)
^^2^2^3140404^
"KRN",19,2929730,1,1,0)
Provides the capability for users assigned to the RCDPE AGED PMT security 
"KRN",19,2929730,1,2,0)
key unrestricted ERA Worklist scratchpad creation for one day. 
"KRN",19,2929730,25)
EN^RCDPEUPO
"KRN",19,2929730,"U")
UNPOSTED EFT OVERRIDE
"KRN",19,2929744,-1)
0^16
"KRN",19,2929744,0)
RCDPE APAR^Auto-Post Awaiting Resolution^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929744,1,0)
^^7^7^3140610^
"KRN",19,2929744,1,1,0)
The Auto-Post Awaiting Resolution (APAR) option displays and allows 
"KRN",19,2929744,1,2,0)
selection and editing of ERA-EEOB line items that did not pass the 
"KRN",19,2929744,1,3,0)
auto-posting validation.  This means that these line items do not have a 
"KRN",19,2929744,1,4,0)
receipt and will have to be manually worked by the Accounts Receivable 
"KRN",19,2929744,1,5,0)
clerk. Once the clerk has made the necessary adjustments to each of the 
"KRN",19,2929744,1,6,0)
EEOB line items, the line items must be 'Marked for Auto-Post' in order 
"KRN",19,2929744,1,7,0)
for the EEOBs to be processed by the Nightly Auto-Posting job.
"KRN",19,2929744,25)
EN^RCDPEAA1
"KRN",19,2929744,"U")
AUTO-POST AWAITING RESOLUTION
"KRN",19,2929762,-1)
0^35
"KRN",19,2929762,0)
RCDPE EOB TRANSFER REPORTS^EEOB Transfer Reports^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2929762,1,0)
^^5^5^3150120^
"KRN",19,2929762,1,1,0)
This option provides the ability to produce one or both of the EOB
"KRN",19,2929762,1,2,0)
Transfer reports.  The TRANSFER IN report lists all those EOBs that were
"KRN",19,2929762,1,3,0)
transferred into the site from another site who had received it in 
"KRN",19,2929762,1,4,0)
error.  The TRANSFER OUT report lists all those EOBs that were sent to
"KRN",19,2929762,1,5,0)
another site because they were received in error by the current site.
"KRN",19,2929762,25)
RPT^RCDPETR
"KRN",19,2929762,"U")
EEOB TRANSFER REPORTS
"KRN",19,2929772,-1)
1^42
"KRN",19,2929772,0)
RCDPE EEOB MOVE/COPY REPORT
"KRN",19,2929773,-1)
1^45
"KRN",19,2929773,0)
RCDPE EEOB MOVE/COPY
"KRN",19.1,631,-1)
0^1
"KRN",19.1,631,0)
RCDPE AUTO DEC^LOCK BOX PARAMETER MAINTENANCE
"KRN",19.1,631,1,0)
^^2^2^3140815^
"KRN",19.1,631,1,1,0)
This key controls the access to the option EDI Lockbox Parameters [RCDPE 
"KRN",19.1,631,1,2,0)
EDI LOCKBOX PARAMETERS].
"KRN",19.1,632,-1)
0^3
"KRN",19.1,632,0)
RCDPE REMOVE EEOB^Remove EEOB
"KRN",19.1,632,1,0)
^^2^2^3140815^
"KRN",19.1,632,1,1,0)
Controls access to the REMOVE action within the EEOB Move/Copy/Remove 
"KRN",19.1,632,1,2,0)
[RCDPE EEOB MOVE/COPY/REMOVE] option.
"KRN",19.1,633,-1)
0^2
"KRN",19.1,633,0)
RCDPE ERA EXCEPT^EDI LOCK BOX ENABLE ERA DELETE
"KRN",19.1,633,1,0)
^19.11^3^3^3140408^^^
"KRN",19.1,633,1,1,0)
This key enables the deletion of ERAs via the RCDPEX EOB_SUM REMOVE EXCEPT
"KRN",19.1,633,1,2,0)
action protocol found in the RCDPEX EOB_SUM EXCEPTION MENU menu protocol 
"KRN",19.1,633,1,3,0)
referenced in the RCDPEX EOB_SUM EXCEPTION LIST List Manager template.
"KRN",19.1,642,-1)
0^4
"KRN",19.1,642,0)
RCDPE AGED PMT^AGED PAYMENT OVERRIDE
"KRN",19.1,642,1,0)
^^2^2^3140404^
"KRN",19.1,642,1,1,0)
Persons holding the RCDPE AGED PMT security key are allowed to use the 
"KRN",19.1,642,1,2,0)
Unposted EFT Override option [RCDPE UNPOSTED EFT OVERRIDE].
"KRN",101,642,-1)
0^6
"KRN",101,642,0)
VALM QUIT^Quit^^A^^^^^^^^
"KRN",101,642,.1)
 
"KRN",101,642,1,0)
^^1^1^2911105^
"KRN",101,642,1,1,0)
This protocol can be used as a generic 'quit' action.
"KRN",101,642,2,0)
^101.02A^2^2
"KRN",101,642,2,1,0)
EXIT
"KRN",101,642,2,2,0)
QUIT
"KRN",101,642,2,"B","EXIT",1)

"KRN",101,642,2,"B","QUIT",2)

"KRN",101,642,15)

"KRN",101,642,20)
Q
"KRN",101,642,99)
63459,54580
"KRN",101,3768,-1)
0^48
"KRN",101,3768,0)
RCDPEX DELETE MESSAGE^Delete Message^^A^^RCDPE ERA EXCEPT^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3768,1,0)
^101.06^3^3^3021017^^^^
"KRN",101,3768,1,1,0)
This action allows a user to manually delete a message that you either can't
"KRN",101,3768,1,2,0)
or don't want to continue through the EDI Lockbox message process.
"KRN",101,3768,1,3,0)
A bulletin is sent to alert that this action has been taken.
"KRN",101,3768,20)
D DEL^RCDPEX
"KRN",101,3768,99)
63459,54580
"KRN",101,3770,-1)
0^20
"KRN",101,3770,0)
RCDPEX EOB_SUM EXCEPTION MENU^^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3770,1,0)
^101.06^2^2^3140320^^^^
"KRN",101,3770,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3770,1,2,0)
manually on 837 return messages.
"KRN",101,3770,4)
26^4
"KRN",101,3770,10,0)
^101.01PA^15^15
"KRN",101,3770,10,4,0)
642^^100^^^Exit
"KRN",101,3770,10,4,"^")
VALM QUIT
"KRN",101,3770,10,8,0)
3773^^10^
"KRN",101,3770,10,8,"^")
RCDPEX SUM_VIEW/PRINT MESSAGE
"KRN",101,3770,10,10,0)
3771^^30^
"KRN",101,3770,10,10,"^")
RCDPEX EOB_SUM REMOVE EXCEPT
"KRN",101,3770,10,11,0)
3772^^20^
"KRN",101,3770,10,11,"^")
RCDPEX SUM_FILE EXCEPTION
"KRN",101,3770,10,13,0)
3778^^60^
"KRN",101,3770,10,13,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,3770,10,14,0)
4832^^70^
"KRN",101,3770,10,14,"^")
RCDPEX RX_COMMENT
"KRN",101,3770,10,15,0)
3802^^50^
"KRN",101,3770,10,15,"^")
RCDPEX SUM_EDIT CLAIM
"KRN",101,3770,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3770,26)
D SHOW^VALM
"KRN",101,3770,28)
Select Action: 
"KRN",101,3770,99)
63459,54580
"KRN",101,3771,-1)
0^49
"KRN",101,3771,0)
RCDPEX EOB_SUM REMOVE EXCEPT^Remove Exception^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3771,1,0)
^101.06^3^3^3021017^^^^
"KRN",101,3771,1,1,0)
This action allows a user to manually delete a message that you either can't
"KRN",101,3771,1,2,0)
or don't want to continue through the EDI Lockbox message process.
"KRN",101,3771,1,3,0)
A bulletin is sent to alert that this action has been taken.
"KRN",101,3771,20)
D DEL^RCDPEX31
"KRN",101,3771,99)
63459,54580
"KRN",101,3772,-1)
0^23
"KRN",101,3772,0)
RCDPEX SUM_FILE EXCEPTION^File EEOB in IB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3772,1,0)
^101.06^2^2^3021029^^^^
"KRN",101,3772,1,1,0)
This action allows a user to manually force a message to process through the
"KRN",101,3772,1,2,0)
EDI Lockbox EOB file process to store the detail data in IB.
"KRN",101,3772,20)
D UPD^RCDPEX3
"KRN",101,3772,99)
63459,54580
"KRN",101,3773,-1)
0^21
"KRN",101,3773,0)
RCDPEX SUM_VIEW/PRINT MESSAGE^View/Print Message^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3773,1,0)
^101.06^1^1^3140320^^^
"KRN",101,3773,1,1,0)
This option allows the user to view an EDI Lockbox message.
"KRN",101,3773,4)
^^^VP
"KRN",101,3773,20)
D VP^RCDPEX3
"KRN",101,3773,99)
63459,54580
"KRN",101,3775,-1)
0^7
"KRN",101,3775,0)
RCDPE EOB WORKLIST MENU^EOB WORKLIST MENU^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3775,1,0)
^101.06^2^2^3140210^^^^
"KRN",101,3775,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3775,1,2,0)
manually on ERAs received.
"KRN",101,3775,4)
26^4
"KRN",101,3775,10,0)
^101.01PA^19^18
"KRN",101,3775,10,4,0)
642^^999^^^EXIT
"KRN",101,3775,10,4,"^")
VALM QUIT
"KRN",101,3775,10,6,0)
3784^^50^
"KRN",101,3775,10,6,"^")
RCDPE EOB WORKLIST SPLIT LINE
"KRN",101,3775,10,7,0)
3785^^100^
"KRN",101,3775,10,7,"^")
RCDPE EOB WORKLIST DIST ADJ
"KRN",101,3775,10,8,0)
3786^^150^
"KRN",101,3775,10,8,"^")
RCDPE EOB WORKLIST REFRESH
"KRN",101,3775,10,9,0)
3777^EOB^450^
"KRN",101,3775,10,9,"^")
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,3775,10,10,0)
3787^ERA^500^
"KRN",101,3775,10,10,"^")
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,3775,10,12,0)
3790^^200^
"KRN",101,3775,10,12,"^")
RCDPE EOB WORKLIST RESEARCH
"KRN",101,3775,10,14,0)
3794^^250^
"KRN",101,3775,10,14,"^")
RCDPE EOB WL RECEIPT VIEW
"KRN",101,3775,10,15,0)
3803^^300^
"KRN",101,3775,10,15,"^")
RCDPE EOB WL REVIEW
"KRN",101,3775,10,17,0)
3943^^350^
"KRN",101,3775,10,17,"^")
RCDPE EOB WORKLIST VERIFY
"KRN",101,3775,10,19,0)
4849^^400^
"KRN",101,3775,10,19,"^")
RCDPE EOB WORKLIST CHANGE VIEW
"KRN",101,3775,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3775,26)
D SHOW^VALM
"KRN",101,3775,28)
Select Action: 
"KRN",101,3775,99)
63459,54580
"KRN",101,3776,-1)
0^36
"KRN",101,3776,0)
RCDPE EOB WORKLIST RESEARCH MENU^Research Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3776,1,0)
^101.06^2^2^3140331^^
"KRN",101,3776,1,1,0)
This is the main menu that contains the actions that can be performed to 
"KRN",101,3776,1,2,0)
research a payment/denial for a claim when reviewing an EOB.
"KRN",101,3776,4)
26^4
"KRN",101,3776,10,0)
^101.01PA^9^9
"KRN",101,3776,10,1,0)
3778^^30^
"KRN",101,3776,10,1,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,3776,10,3,0)
3777^^60^
"KRN",101,3776,10,3,"^")
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,3776,10,4,0)
3803^^70^
"KRN",101,3776,10,4,"^")
RCDPE EOB WL REVIEW
"KRN",101,3776,10,5,0)
3800^^40^
"KRN",101,3776,10,5,"^")
RCDPE EOB WORKLIST BILL COMMENT
"KRN",101,3776,10,6,0)
3799^^50^
"KRN",101,3776,10,6,"^")
RCDPE EOB WORKLIST REESTABLISH
"KRN",101,3776,10,7,0)
3781^^10^
"KRN",101,3776,10,7,"^")
RCDPE EOB WORKLIST FULL ACCT PROF
"KRN",101,3776,10,8,0)
3789^^100^
"KRN",101,3776,10,8,"^")
RCDPE EOB WL RESEARCH EXIT
"KRN",101,3776,10,9,0)
4627^^20^
"KRN",101,3776,10,9,"^")
RCDPE EOB WORKLIST ADMIN COST ADJ
"KRN",101,3776,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3776,26)
D SHOW^VALM
"KRN",101,3776,28)
Select Action: 
"KRN",101,3776,99)
63459,54580
"KRN",101,3777,-1)
0^11
"KRN",101,3777,0)
RCDPE VIEW/PRINT WORKLIST EOB^View/Print EEOB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3777,1,0)
^101.06^2^2^3030220^^^^
"KRN",101,3777,1,1,0)
This option allows the user to view the detail of a selected EOB from the
"KRN",101,3777,1,2,0)
list of EOB's presented in the Worklist Scratch pad function for an ERA.
"KRN",101,3777,4)
^^^
"KRN",101,3777,20)
D PREOB^RCDPEWL2
"KRN",101,3777,99)
63459,54580
"KRN",101,3778,-1)
0^24
"KRN",101,3778,0)
RCDPE EOB WORKLIST TPJI^TPJI^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3778,1,0)
^101.06^2^2^3021127^^^^
"KRN",101,3778,1,1,0)
This option allows the user access the third party joint inquiry (TPJI)
"KRN",101,3778,1,2,0)
functions for an electronic EOB's claim.
"KRN",101,3778,4)
^^^VP
"KRN",101,3778,20)
D TPJI^RCDPEWL2
"KRN",101,3778,99)
63459,54580
"KRN",101,3781,-1)
0^29
"KRN",101,3781,0)
RCDPE EOB WORKLIST FULL ACCT PROF^Full Acct Prof^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3781,1,0)
^101.06^1^1^3030701^^^^
"KRN",101,3781,1,1,0)
This option allows the user access to the AR function FULL ACCOUNT PROFILE.
"KRN",101,3781,4)
^^^DA
"KRN",101,3781,20)
D FAP^RCDPEWL2
"KRN",101,3781,99)
63459,54580
"KRN",101,3784,-1)
0^8
"KRN",101,3784,0)
RCDPE EOB WORKLIST SPLIT LINE^Split/Edit A Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3784,1,0)
^101.06^3^3^3030218^^^^
"KRN",101,3784,1,1,0)
This option allows the user to split the payment and adjustment amounts of
"KRN",101,3784,1,2,0)
a selected line in the ERA to redistribute the funds to more accurately
"KRN",101,3784,1,3,0)
reflect the disposition of the payment/adjustment.
"KRN",101,3784,4)
^^^TB
"KRN",101,3784,20)
D SPLIT^RCDPEWL0
"KRN",101,3784,99)
63459,54580
"KRN",101,3785,-1)
0^9
"KRN",101,3785,0)
RCDPE EOB WORKLIST DIST ADJ^Distribute Adj Amts^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3785,1,0)
^101.06^4^4^3030218^^^^
"KRN",101,3785,1,1,0)
This option allows the user to select an adjustment line that has a
"KRN",101,3785,1,2,0)
negative net payment to allow this amount to be distributed to other
"KRN",101,3785,1,3,0)
lines so the total amount of payments received to post equals the total
"KRN",101,3785,1,4,0)
amount of the deposit.
"KRN",101,3785,4)
^^^TB
"KRN",101,3785,20)
D DISTADJ^RCDPEWL6
"KRN",101,3785,99)
63459,54580
"KRN",101,3786,-1)
0^10
"KRN",101,3786,0)
RCDPE EOB WORKLIST REFRESH^Refresh Scratch Pad^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3786,1,0)
^101.06^3^3^3030218^^^^
"KRN",101,3786,1,1,0)
This option allows the user to 'refresh' the worklist scratch pad entry
"KRN",101,3786,1,2,0)
to remove all previously entered edits/splits/adjustments and restore it
"KRN",101,3786,1,3,0)
to the state it was in before any manual changes were made.
"KRN",101,3786,4)
^^^TB
"KRN",101,3786,20)
D REFRESH^RCDPEWL6
"KRN",101,3786,99)
63459,54580
"KRN",101,3787,-1)
0^12
"KRN",101,3787,0)
RCDPE VIEW/PRINT WORKLIST ERA^View/Print ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3787,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3787,1,1,0)
This option allows the user to view the summary or summary and detail
"KRN",101,3787,1,2,0)
information for an electronic remittance advice (ERA).
"KRN",101,3787,20)
D PRERA^RCDPEWL0
"KRN",101,3787,99)
63459,54580
"KRN",101,3789,-1)
0^30
"KRN",101,3789,0)
RCDPE EOB WL RESEARCH EXIT^Scratch Pad Menu/Exit^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3789,1,0)
^^1^1^3030219^
"KRN",101,3789,1,1,0)
This option allows the user access to exit back to the ERA display menu
"KRN",101,3789,4)
^^^
"KRN",101,3789,20)
D EXIT^RCDPEWL2
"KRN",101,3789,99)
63459,54580
"KRN",101,3790,-1)
0^13
"KRN",101,3790,0)
RCDPE EOB WORKLIST RESEARCH^Research Menu^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3790,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3790,1,1,0)
This option allows the user access to the IB options for cancel, edit, add
"KRN",101,3790,1,2,0)
patient charges from within the EDI Lockbox worklist function.
"KRN",101,3790,4)
^^^
"KRN",101,3790,20)
D RESEARCH^RCDPEWL2
"KRN",101,3790,99)
63459,54580
"KRN",101,3794,-1)
0^14
"KRN",101,3794,0)
RCDPE EOB WL RECEIPT VIEW^Look At Receipt^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3794,20)
D VRECPT^RCDPEWL4
"KRN",101,3794,99)
63459,54580
"KRN",101,3799,-1)
0^28
"KRN",101,3799,0)
RCDPE EOB WORKLIST REESTABLISH^Re-establish Bill^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3799,20)
D REEST^RCDPEWL2
"KRN",101,3799,99)
63459,54580
"KRN",101,3800,-1)
0^27
"KRN",101,3800,0)
RCDPE EOB WORKLIST BILL COMMENT^Bill Comment Log^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3800,20)
D BILLCOM^RCDPEWL2
"KRN",101,3800,99)
63459,54580
"KRN",101,3802,-1)
0^26
"KRN",101,3802,0)
RCDPEX SUM_EDIT CLAIM^Edit Claim #^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3802,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,3802,20)
D EDITNUM^RCDPEX32
"KRN",101,3802,99)
63459,54580
"KRN",101,3803,-1)
0^15
"KRN",101,3803,0)
RCDPE EOB WL REVIEW^Review Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3803,20)
D REVIEW^RCDPEWL5
"KRN",101,3803,99)
63459,54580
"KRN",101,3937,-1)
0^1
"KRN",101,3937,0)
RCDPE WORKLIST ERA LIST MENU^ERA WORKLIST PICK LIST^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3937,1,0)
^101.06^2^2^3140429^^^^
"KRN",101,3937,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3937,1,2,0)
manually on ERAs received.
"KRN",101,3937,4)
26^4
"KRN",101,3937,10,0)
^101.01PA^5^5
"KRN",101,3937,10,1,0)
3938^^50^
"KRN",101,3937,10,1,"^")
RCDPE WORKLIST ERA SELECT
"KRN",101,3937,10,2,0)
3939^^100^
"KRN",101,3937,10,2,"^")
RCDPE WORKLIST ERA SORT
"KRN",101,3937,10,3,0)
3940^^150^
"KRN",101,3937,10,3,"^")
RCDPE ERA LIST VIEW ERA
"KRN",101,3937,10,4,0)
4826^^200^
"KRN",101,3937,10,4,"^")
RCDPE ERA WORKLIST CHANGE VIEW
"KRN",101,3937,10,5,0)
642^^999^^^EXIT
"KRN",101,3937,10,5,"^")
VALM QUIT
"KRN",101,3937,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3937,26)
D SHOW^VALM
"KRN",101,3937,28)
Select Action: 
"KRN",101,3937,99)
63459,54580
"KRN",101,3938,-1)
0^2
"KRN",101,3938,0)
RCDPE WORKLIST ERA SELECT^Select ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3938,20)
D ENTERWL^RCDPEWL7
"KRN",101,3938,99)
63459,54580
"KRN",101,3939,-1)
0^3
"KRN",101,3939,0)
RCDPE WORKLIST ERA SORT^Sort List^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3939,20)
D SORT^RCDPEWL8
"KRN",101,3939,99)
63459,54580
"KRN",101,3940,-1)
0^4
"KRN",101,3940,0)
RCDPE ERA LIST VIEW ERA^View/Print ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3940,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,3940,1,1,0)
This option allows the user to view the summary or summary and detail
"KRN",101,3940,1,2,0)
information for an electronic remittance advice (ERA).
"KRN",101,3940,20)
D PRERA^RCDPEWL7
"KRN",101,3940,99)
63459,54580
"KRN",101,3943,-1)
0^16
"KRN",101,3943,0)
RCDPE EOB WORKLIST VERIFY^Verify^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3943,1,0)
^101.06^3^3^3040212^^^^
"KRN",101,3943,1,1,0)
This option allows the user to access the options for verifying the
"KRN",101,3943,1,2,0)
EEOBs against the data on the VistA system to insure the payments are
"KRN",101,3943,1,3,0)
being made for the correct claim.
"KRN",101,3943,20)
D VERIF^RCDPEWL8
"KRN",101,3943,99)
63459,54580
"KRN",101,4627,-1)
0^31
"KRN",101,4627,0)
RCDPE EOB WORKLIST ADMIN COST ADJ^Admin Cost Adj^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4627,1,0)
^^1^1^3100707^
"KRN",101,4627,1,1,0)
Used to adjust the administrative costs, IRS cost, DMV cost, etc
"KRN",101,4627,15)
S VALMBCK="R" K PRCASUP
"KRN",101,4627,20)
S PRCASUP=1 D FULL^VALM1 D ^PRCAEXM K DTOUT
"KRN",101,4627,99)
63459,54580
"KRN",101,4826,-1)
0^5
"KRN",101,4826,0)
RCDPE ERA WORKLIST CHANGE VIEW^Change View^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4826,2,0)
^101.02A^^0
"KRN",101,4826,4)
^^^
"KRN",101,4826,20)
D CV^RCDPEWLP
"KRN",101,4826,99)
63459,54580
"KRN",101,4832,-1)
0^25
"KRN",101,4832,0)
RCDPEX RX_COMMENT^Pharmacy Claim Comment^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4832,1,0)
^101.06^2^2^3140320^^
"KRN",101,4832,1,1,0)
This option allows the user to enter a comment for an unreleased 
"KRN",101,4832,1,2,0)
prescription.
"KRN",101,4832,4)
^^^PCC
"KRN",101,4832,20)
D EDITRXC^RCDPEX32
"KRN",101,4832,99)
63459,54580
"KRN",101,4849,-1)
0^17
"KRN",101,4849,0)
RCDPE EOB WORKLIST CHANGE VIEW^Change View^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4849,20)
D CV^RCDPEWL
"KRN",101,4849,99)
63459,54580
"KRN",101,4850,-1)
0^32
"KRN",101,4850,0)
RCDPE APAR EEOB LIST MENU^EEOB APAR Pick List^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4850,1,0)
^101.06^2^2^3140505^^^
"KRN",101,4850,1,1,0)
This is the menu that contains the actions that can performed manually on 
"KRN",101,4850,1,2,0)
the EEOBs for APAR.
"KRN",101,4850,4)
26^4
"KRN",101,4850,10,0)
^101.01PA^5^5
"KRN",101,4850,10,1,0)
642^^20^^^Exit
"KRN",101,4850,10,1,"^")
VALM QUIT
"KRN",101,4850,10,3,0)
4851^^5^
"KRN",101,4850,10,3,"^")
RCDPE APAR SELECT EEOB
"KRN",101,4850,10,4,0)
4852^^15^
"KRN",101,4850,10,4,"^")
RCDPE APAR VIEW/PRINT ERA
"KRN",101,4850,10,5,0)
4853^^10^
"KRN",101,4850,10,5,"^")
RCDPE APAR CHANGE VIEW
"KRN",101,4850,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,4850,26)
D SHOW^VALM
"KRN",101,4850,28)
Select Action: 
"KRN",101,4850,99)
63459,54580
"KRN",101,4851,-1)
0^34
"KRN",101,4851,0)
RCDPE APAR SELECT EEOB^Select EEOB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4851,1,0)
^^2^2^3140527^
"KRN",101,4851,1,1,0)
Protocol allows the selection of an EEOB line item off the AUTO-POST - 
"KRN",101,4851,1,2,0)
AWAITING RESOLUTION screen. 
"KRN",101,4851,10,0)
^101.01PA
"KRN",101,4851,20)
D ENTEREOB^RCDPEAA1
"KRN",101,4851,99)
63459,54580
"KRN",101,4852,-1)
0^43
"KRN",101,4852,0)
RCDPE APAR VIEW/PRINT ERA^View/Print ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4852,1,0)
^^2^2^3140430^
"KRN",101,4852,1,1,0)
This option allows the user to view the summary or summary and detail
"KRN",101,4852,1,2,0)
information for an electronic remittance advice (ERA).  
"KRN",101,4852,10,0)
^101.01PA
"KRN",101,4852,15)

"KRN",101,4852,20)
D VIEWERA^RCDPEAA2($G(RCIENS))
"KRN",101,4852,99)
63459,54580
"KRN",101,4853,-1)
0^35
"KRN",101,4853,0)
RCDPE APAR CHANGE VIEW^Change View^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4853,1,0)
^^2^2^3140527^
"KRN",101,4853,1,1,0)
Provides capability to change and save preferred view for the next time 
"KRN",101,4853,1,2,0)
the option is executed.  
"KRN",101,4853,20)
D CV^RCDPEAA1
"KRN",101,4853,99)
63459,54580
"KRN",101,4854,-1)
0^42
"KRN",101,4854,0)
RCDPE APAR SELECTED EEOB MENU^APAR Selected EEOB^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4854,1,0)
^101.06^3^3^3140515^^^^
"KRN",101,4854,1,1,0)
The APAR selected EEOB menu contains the actions that can be performed 
"KRN",101,4854,1,2,0)
manually on the EEOB item that did not get a receipt when the associated 
"KRN",101,4854,1,3,0)
ERA record was processed during the auto-post nightly process.
"KRN",101,4854,4)
26
"KRN",101,4854,10,0)
^101.01PA^16^16
"KRN",101,4854,10,1,0)
642^^999^^^EXIT
"KRN",101,4854,10,1,"^")
VALM QUIT
"KRN",101,4854,10,3,0)
4855^^100^
"KRN",101,4854,10,3,"^")
RCDPE MARK FOR AUTOPOST
"KRN",101,4854,10,10,0)
4852^ERA^250^
"KRN",101,4854,10,10,"^")
RCDPE APAR VIEW/PRINT ERA
"KRN",101,4854,10,11,0)
4856^^50^
"KRN",101,4854,10,11,"^")
RCDPE APAR SPLIT LINE
"KRN",101,4854,10,12,0)
4857^^150^
"KRN",101,4854,10,12,"^")
RCDPE APAR EEOB REFRESH
"KRN",101,4854,10,13,0)
4858^^300^
"KRN",101,4854,10,13,"^")
RCDPE APAR RESEARCH
"KRN",101,4854,10,14,0)
4859^^350^
"KRN",101,4854,10,14,"^")
RCDPE APAR EEOB REVIEW
"KRN",101,4854,10,15,0)
4860^EOB^200^
"KRN",101,4854,10,15,"^")
RCDPE APAR VIEW/PRINT EOB
"KRN",101,4854,10,16,0)
4915^^400^^^
"KRN",101,4854,10,16,"^")
RCDPE APAR VERIFY
"KRN",101,4854,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,4854,26)
D SHOW^VALM
"KRN",101,4854,28)
Select Action: 
"KRN",101,4854,99)
63515,39717
"KRN",101,4855,-1)
0^37
"KRN",101,4855,0)
RCDPE MARK FOR AUTOPOST^Mark for Auto-Post^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4855,1,0)
^101.06^2^2^3140527^^^
"KRN",101,4855,1,1,0)
Protocol will check the EEOB for auto-posting criteria and mark the EEOB
"KRN",101,4855,1,2,0)
for auto-posting if all criteria are met.
"KRN",101,4855,20)
D MARK^RCDPEAA2(RCIENS)
"KRN",101,4855,99)
63459,54580
"KRN",101,4856,-1)
0^38
"KRN",101,4856,0)
RCDPE APAR SPLIT LINE^Split/Edit a Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4856,1,0)
^^3^3^3140509^
"KRN",101,4856,1,1,0)
This option allows the user to split the payment and adjustment amount of
"KRN",101,4856,1,2,0)
an EEOB line item to redistribute the funds to more accurately reflect the
"KRN",101,4856,1,3,0)
disposition of the payment/adjustment. 
"KRN",101,4856,20)
D SPLIT^RCDPEAA3(RCIENS)
"KRN",101,4856,99)
63459,54580
"KRN",101,4857,-1)
0^44
"KRN",101,4857,0)
RCDPE APAR EEOB REFRESH^Refresh Scratch Pad^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4857,1,0)
^^3^3^3140514^
"KRN",101,4857,1,1,0)
This option allows the user to 'refresh' the APAR  scratch pad entry to
"KRN",101,4857,1,2,0)
remove all previously entered edits/splits/adjustments and restore it to
"KRN",101,4857,1,3,0)
the state it was in before any manual changes were made.  
"KRN",101,4857,4)
^^^
"KRN",101,4857,20)
D REFRESH^RCDPEAA3(RCIENS)
"KRN",101,4857,99)
63459,54580
"KRN",101,4858,-1)
0^41
"KRN",101,4858,0)
RCDPE APAR RESEARCH^Research^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4858,1,0)
^101.06^2^2^3140514^^
"KRN",101,4858,1,1,0)
This option allows the user access to the IB options for cancel, edit, add
"KRN",101,4858,1,2,0)
patient charges from within the APAR screen of EDI Lockbox.
"KRN",101,4858,20)
D RESEARCH^RCDPEAA3
"KRN",101,4858,99)
63459,54580
"KRN",101,4859,-1)
0^45
"KRN",101,4859,0)
RCDPE APAR EEOB REVIEW^Review Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4859,1,0)
^^4^4^3140515^
"KRN",101,4859,1,1,0)
Allows addition of comments or used as a bookmark on a specific EEOB line 
"KRN",101,4859,1,2,0)
in case processing was interrupted, thereby allowing the user to more
"KRN",101,4859,1,3,0)
easily resume where they left off. This option must be turned 'on' each
"KRN",101,4859,1,4,0)
time the user enters the EEOB to enter or view comments.
"KRN",101,4859,20)
D REVIEW^RCDPEAA3(RCIENS)
"KRN",101,4859,99)
63459,54580
"KRN",101,4860,-1)
0^46
"KRN",101,4860,0)
RCDPE APAR VIEW/PRINT EOB^View/Print EEOB^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4860,1,0)
^^2^2^3140516^
"KRN",101,4860,1,1,0)
This option allows the user to view the detail of a selected
"KRN",101,4860,1,2,0)
EOB presented in the APAR Scratch pad screen.
"KRN",101,4860,20)
D PREOB^RCDPEAA3($G(RCIENS))
"KRN",101,4860,99)
63459,54580
"KRN",101,4861,-1)
0^50
"KRN",101,4861,0)
RCDPE APAR EEOB RESEARCH MENU^APAR Research Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4861,1,0)
^^2^2^3140516^
"KRN",101,4861,1,1,0)
This is the main menu that contains the actions that can be performed to
"KRN",101,4861,1,2,0)
research a payment/denial for a claim when reviewing an EOB.
"KRN",101,4861,4)
26^4
"KRN",101,4861,10,0)
^101.01PA^8^8
"KRN",101,4861,10,1,0)
3778^^30^
"KRN",101,4861,10,1,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,4861,10,2,0)
4860^^60^
"KRN",101,4861,10,2,"^")
RCDPE APAR VIEW/PRINT EOB
"KRN",101,4861,10,3,0)
4859^^70^
"KRN",101,4861,10,3,"^")
RCDPE APAR EEOB REVIEW
"KRN",101,4861,10,4,0)
3800^^40^
"KRN",101,4861,10,4,"^")
RCDPE EOB WORKLIST BILL COMMENT
"KRN",101,4861,10,5,0)
3799^^50^
"KRN",101,4861,10,5,"^")
RCDPE EOB WORKLIST REESTABLISH
"KRN",101,4861,10,6,0)
3781^^10^
"KRN",101,4861,10,6,"^")
RCDPE EOB WORKLIST FULL ACCT PROF
"KRN",101,4861,10,7,0)
3789^^100^
"KRN",101,4861,10,7,"^")
RCDPE EOB WL RESEARCH EXIT
"KRN",101,4861,10,8,0)
4627^^20^
"KRN",101,4861,10,8,"^")
RCDPE EOB WORKLIST ADMIN COST ADJ
"KRN",101,4861,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,4861,26)
D SHOW^VALM
"KRN",101,4861,28)
Select Action: 
"KRN",101,4861,99)
63459,54580
"KRN",101,4915,-1)
0^51
"KRN",101,4915,0)
RCDPE APAR VERIFY^Verify^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4915,1,0)
^^3^3^3141124^
"KRN",101,4915,1,1,0)
This option allows the user to access the options for verifying the EEOBs
"KRN",101,4915,1,2,0)
against the data on the VistA system to ensure the payments are being made
"KRN",101,4915,1,3,0)
for the correct claim.
"KRN",101,4915,20)
D VERIF^RCDPEAA3(RCIENS)
"KRN",101,4915,99)
63515,39404
"KRN",409.61,2113,-1)
0^2
"KRN",409.61,2113,0)
RCDPE EOB WORKLIST^1^^80^8^18^1^1^EEOB Line^RCDPE EOB WORKLIST MENU^ERA Worklist/Scratch Pad^1^^1
"KRN",409.61,2113,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2113,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,2113,"COL",0)
^409.621^^0
"KRN",409.61,2113,"FNL")
D FNL^RCDPEWL
"KRN",409.61,2113,"HDR")
D HDR^RCDPEWL
"KRN",409.61,2113,"INIT")
D INIT^RCDPEWL
"KRN",409.61,2114,-1)
0^3
"KRN",409.61,2114,0)
RCDPE EOB RESEARCH^1^^80^7^19^1^1^EEOB Line^RCDPE EOB WORKLIST RESEARCH MENU^ERA Worklist Research^1^^1
"KRN",409.61,2114,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2114,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,2114,"FNL")
D FNL^RCDPEWL1
"KRN",409.61,2114,"HDR")
D HDR^RCDPEWL1
"KRN",409.61,2114,"INIT")
D INIT^RCDPEWL1
"KRN",409.61,2284,-1)
0^5
"KRN",409.61,2284,0)
RCDPE MISC REPORTS^2^^80^10^21^1^1^^^ePayments Reports^1^^1
"KRN",409.61,2284,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2284,"FNL")
D LMEXIT^RCDPEARL
"KRN",409.61,2284,"HDR")
D LMHDR^RCDPEARL
"KRN",409.61,2284,"HLP")
D LMHLP^RCDPEARL
"KRN",409.61,2284,"INIT")
D LMINIT^RCDPEARL
"KRN",409.61,2287,-1)
0^4
"KRN",409.61,2287,0)
RCDPE AUTO EOB RECEIPT PREVIEW^1^1^80^7^20^1^1^Preview^RCDPE EOB WORKLIST PREVIEW MENU^AUTO-POST PREVIEW RECEIPT^1^^1
"KRN",409.61,2287,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2287,"ARRAY")
 ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"KRN",409.61,2287,"COL",0)
^409.621^3^3
"KRN",409.61,2287,"COL",1,0)
ACCOUNT^13^25^ACCOUNT
"KRN",409.61,2287,"COL",2,0)
AMOUNT^43^20^AMOUNT
"KRN",409.61,2287,"COL",3,0)
LINE #^2^6^LINE #
"KRN",409.61,2287,"COL","B","ACCOUNT",1)

"KRN",409.61,2287,"COL","B","AMOUNT",2)

"KRN",409.61,2287,"COL","B","LINE #",3)

"KRN",409.61,2287,"FNL")
D FNL^RCDPEWLP
"KRN",409.61,2287,"HDR")
D HDR^RCDPEWLP
"KRN",409.61,2287,"INIT")
D INIT^RCDPEWLP(ERADA,EEOBREC)
"KRN",409.61,2288,-1)
0^6
"KRN",409.61,2288,0)
RCDPE APAR EEOB LIST^1^^80^6^19^1^1^EEOB Line^RCDPE APAR EEOB LIST MENU^AUTOPOST - AWAIT RESOLUTION^1^^1
"KRN",409.61,2288,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2288,"ARRAY")
 ^TMP("RCDPE-APAR_EEOB_WL",$J)
"KRN",409.61,2288,"COL",0)
^409.621^2^1
"KRN",409.61,2288,"COL",2,0)
PAYER_LN^9^50^Payer Name/ID
"KRN",409.61,2288,"COL","B","PAYER_LN",2)

"KRN",409.61,2288,"FNL")
D EXIT^RCDPEAA1
"KRN",409.61,2288,"HDR")
D HDR^RCDPEAA1
"KRN",409.61,2288,"INIT")
D INIT^RCDPEAA1
"KRN",409.61,2289,-1)
0^8
"KRN",409.61,2289,0)
RCDPE APAR SELECTED EEOB^1^^80^8^18^1^1^^RCDPE APAR SELECTED EEOB MENU^APAR - EEOB ITEM - SCRATCHPAD^1^^1
"KRN",409.61,2289,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2289,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,2289,"FNL")
D EXIT^RCDPEAA2
"KRN",409.61,2289,"HDR")
D HDR^RCDPEAA2
"KRN",409.61,2289,"INIT")
D INIT^RCDPEAA2(RCIENS)
"KRN",409.61,2290,-1)
0^9
"KRN",409.61,2290,0)
RCDPE APAR EEOB RESEARCH^1^7^80^7^18^1^1^EEOB Line^RCDPE APAR EEOB RESEARCH MENU^APAR - EEOB Research^1^^1
"KRN",409.61,2290,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,2290,"ARRAY")
 ^TMP("RCDPE-EOB_WL",$J)
"KRN",409.61,2290,"FNL")
D EXIT^RCDPEAA2
"KRN",409.61,2290,"HDR")
D HDR^RCDPEAA2
"KRN",409.61,2290,"INIT")
S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"KRN",8989.51,762,-1)
0^3
"KRN",8989.51,762,0)
RCDPE SCRATCHPAD^Preferred View filters by User
"KRN",8989.51,762,6)
F
"KRN",8989.51,762,20,0)
^^3^3^3140205^
"KRN",8989.51,762,20,1,0)
The EEOB Worklist/Scratch Pad screen within the ERA Worklist option 
"KRN",8989.51,762,20,2,0)
provides the capability to filter the data displayed via the Change View
"KRN",8989.51,762,20,3,0)
action. The Change View action saves the filter preferences by user.
"KRN",8989.51,762,30,0)
^8989.513I^1^1
"KRN",8989.51,762,30,1,0)
1^200
"KRN",8989.51,763,-1)
0^2
"KRN",8989.51,763,0)
RCDPE APAR^Display unposted EEOBs by user pref^1
"KRN",8989.51,763,1)
F
"KRN",8989.51,763,6)
F
"KRN",8989.51,763,20,0)
^^12^12^3140501^
"KRN",8989.51,763,20,1,0)
The AUTO-POST - AWAITING RESOLUTION screen that is generated when
"KRN",8989.51,763,20,2,0)
executing the RCDPE AUTO-POST AWAITING RESOLUTION option provides the
"KRN",8989.51,763,20,3,0)
capability to filter the data displayed via the Change View action. The
"KRN",8989.51,763,20,4,0)
Change View action saves the filter preferences by user.
"KRN",8989.51,763,20,5,0)
 
"KRN",8989.51,763,20,6,0)
Parameter Instance              Possible Value
"KRN",8989.51,763,20,7,0)
  
"KRN",8989.51,763,20,8,0)
--------------------------------------------------------------------------
"KRN",8989.51,763,20,9,0)
ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo 
"KRN",8989.51,763,20,10,0)
                                     (e.g.,'R;AE;AEZ') 
"KRN",8989.51,763,20,11,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,763,20,12,0)
       present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,763,30,0)
^8989.513I^1^1
"KRN",8989.51,763,30,1,0)
1^200
"KRN",8989.51,776,-1)
0^1
"KRN",8989.51,776,0)
RCDPE EDI LOCKBOX WORKLIST^ERA Worklist Change View Parameters^1
"KRN",8989.51,776,1)
F
"KRN",8989.51,776,6)
F
"KRN",8989.51,776,20,0)
^8989.512^18^18^3140501^^^^
"KRN",8989.51,776,20,1,0)
The ERA List - Worklist screen within the ERA Worklist option [RCDPE EDI LOCKBOX
"KRN",8989.51,776,20,2,0)
WORKLIST]  provides the capability to filter the data displayed via the Change
"KRN",8989.51,776,20,3,0)
View action. The Change View action allows users to change and save their
"KRN",8989.51,776,20,4,0)
individual filter preferences.
"KRN",8989.51,776,20,5,0)
  
"KRN",8989.51,776,20,6,0)
Below is a list of the parameter/value pairs (instances) for the Change View 
"KRN",8989.51,776,20,7,0)
action, which are stored using this Parameter Definition.
"KRN",8989.51,776,20,8,0)
 
"KRN",8989.51,776,20,9,0)
 Parameter Instance              Possible Value
"KRN",8989.51,776,20,10,0)
 ------------------------------------------------------------------------------
"KRN",8989.51,776,20,11,0)
 ERA_POSTING_STATUS              'U':Unposted;'P':Posted;'B':Both
"KRN",8989.51,776,20,12,0)
 ERA-EFT_MATCH_STATUS            'N':Not Matched;'M':Matched;'B':Both
"KRN",8989.51,776,20,13,0)
 ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo (e.g.,'R;AE;AEZ')
"KRN",8989.51,776,20,14,0)
 ERA_AUTO_POSTING                'A':Auto-Posting;'N':Non Auto-Posting;'B':Both
"KRN",8989.51,776,20,15,0)
 ERA_CLAIM_TYPE                  'M':Medical;'P':Pharmacy;'B':Both
"KRN",8989.51,776,20,16,0)
 
"KRN",8989.51,776,20,17,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,776,20,18,0)
      present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,776,30,0)
^8989.513I^1^1
"KRN",8989.51,776,30,1,0)
1^200
"MBREQ")
1
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",158,-1)
1^1
"PKG",158,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",158,20,0)
^9.402P^1^1
"PKG",158,20,1,0)
2^^PRCAMRG
"PKG",158,20,1,1)

"PKG",158,20,"B",2,1)

"PKG",158,22,0)
^9.49I^1^1
"PKG",158,22,1,0)
4.5^2950320^2960423
"PKG",158,22,1,"PAH",1,0)
298^3150312^10
"PKG",158,22,1,"PAH",1,1,0)
^^1^1^3141023
"PKG",158,22,1,"PAH",1,1,1,0)
TEST
"PRE")
PRCA298E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
70
"RTN","PRCA298E")
0^^B2741517
"RTN","PRCA298E",1,0)
PRCA298E ; ALB/hrubovcak - ePayments Lockbox environment check ;Sep 29, 2014@17:10:44
"RTN","PRCA298E",2,0)
 ;;4.5;Accounts Receivable;**298**;Jan 21, 2014;Build 121
"RTN","PRCA298E",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCA298E",4,0)
 ;
"RTN","PRCA298E",5,0)
 ; prerequisite patch check for PRCA*4.5*298
"RTN","PRCA298E",6,0)
 ;
"RTN","PRCA298E",7,0)
 D MES^XPDUTL("Checking for prerequisite patches "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","PRCA298E",8,0)
 N PRLN,PRMISS,PRPTCH,X,Y
"RTN","PRCA298E",9,0)
 ; PRLN - counter
"RTN","PRCA298E",10,0)
 ; PRMISS - missing patches
"RTN","PRCA298E",11,0)
 ; PRPTCH - patch name
"RTN","PRCA298E",12,0)
 ;
"RTN","PRCA298E",13,0)
 F PRLN=1:1 S X=$P($T(PTCHLST+PRLN),";;",2) Q:X=""  D
"RTN","PRCA298E",14,0)
 .S PRPTCH=X,Y=$$PATCH^XPDUTL(PRPTCH)
"RTN","PRCA298E",15,0)
 .D MES^XPDUTL(PRPTCH_" "_$S(Y:"",1:"NOT")_" installed") Q:Y
"RTN","PRCA298E",16,0)
 .S PRMISS(PRPTCH)=""
"RTN","PRCA298E",17,0)
 ;
"RTN","PRCA298E",18,0)
 ; exit if nothing missing
"RTN","PRCA298E",19,0)
 I '$D(PRMISS) D MES^XPDUTL("All prerequisite patches found.") Q
"RTN","PRCA298E",20,0)
 ;
"RTN","PRCA298E",21,0)
 S XPDQUIT=1  ; flag to stop installation
"RTN","PRCA298E",22,0)
 ;
"RTN","PRCA298E",23,0)
 D MES^XPDUTL("The following must be installed before PRCA*4.5*298:")
"RTN","PRCA298E",24,0)
 S X="" F  S X=$O(PRMISS(X)) Q:X=""  D MES^XPDUTL(X)
"RTN","PRCA298E",25,0)
 D MES^XPDUTL(" "),MES^XPDUTL("Install aborted "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","PRCA298E",26,0)
 ;
"RTN","PRCA298E",27,0)
 Q
"RTN","PRCA298E",28,0)
 ;
"RTN","PRCA298E",29,0)
PTCHLST ; required patch list
"RTN","PRCA298E",30,0)
 ;;BPS*1.0*11
"RTN","PRCA298E",31,0)
 ;;IB*2.0*451
"RTN","PRCA298E",32,0)
 ;;IB*2.0*452
"RTN","PRCA298E",33,0)
 ;;IB*2.0*488
"RTN","PRCA298E",34,0)
 ;;PRCA*4.5*208
"RTN","PRCA298E",35,0)
 ;;PRCA*4.5*220
"RTN","PRCA298E",36,0)
 ;;PRCA*4.5*222
"RTN","PRCA298E",37,0)
 ;;PRCA*4.5*241
"RTN","PRCA298E",38,0)
 ;;PRCA*4.5*249
"RTN","PRCA298E",39,0)
 ;;PRCA*4.5*253
"RTN","PRCA298E",40,0)
 ;;PRCA*4.5*261
"RTN","PRCA298E",41,0)
 ;;PRCA*4.5*262
"RTN","PRCA298E",42,0)
 ;;PRCA*4.5*269
"RTN","PRCA298E",43,0)
 ;;PRCA*4.5*271
"RTN","PRCA298E",44,0)
 ;;PRCA*4.5*276
"RTN","PRCA298E",45,0)
 ;;PRCA*4.5*283
"RTN","PRCA298E",46,0)
 ;;PRCA*4.5*284
"RTN","PRCA298E",47,0)
 ;;PRCA*4.5*293
"RTN","PRCA298E",48,0)
 ;;PRCA*4.5*296
"RTN","PRCA298E",49,0)
 ;
"RTN","PRCAP298")
0^15^B109719472
"RTN","PRCAP298",1,0)
PRCAP298 ;BIRM/EWL ALB/hrubovcak - ePayment Lockbox Post-Installation Processing ;Dec 20, 2014@14:08:45
"RTN","PRCAP298",2,0)
 ;;4.5;Accounts Receivable;**298**;Jan 21, 2014;Build 121
"RTN","PRCAP298",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCAP298",4,0)
 ;
"RTN","PRCAP298",5,0)
 ; References to ^XPDMENU supported by DBIA 1157
"RTN","PRCAP298",6,0)
 Q
"RTN","PRCAP298",7,0)
 ;
"RTN","PRCAP298",8,0)
PRE ; pre-installation processing
"RTN","PRCAP298",9,0)
 ; delete old "C" cross-reference in ERA file (#344.4)
"RTN","PRCAP298",10,0)
 D DELIX^DDMOD(344.4,.06,1,"K")
"RTN","PRCAP298",11,0)
 D BMES^XPDUTL("Removed old cross-reference in file #344.4")
"RTN","PRCAP298",12,0)
 Q
"RTN","PRCAP298",13,0)
 ;
"RTN","PRCAP298",14,0)
POST ; PRCA*4.5*298 post-installation processing
"RTN","PRCAP298",15,0)
 D DELOPT ; remove RCDPE EOB TRANSFER REPORTS option
"RTN","PRCAP298",16,0)
 D SETPARMS ; set parameters in RCDPE PARAMETER file (#344.61)
"RTN","PRCAP298",17,0)
 D INITPRMS ; initialize file #344.6, cross-ref. files #344.31 & #344.4
"RTN","PRCAP298",18,0)
 Q
"RTN","PRCAP298",19,0)
 ;
"RTN","PRCAP298",20,0)
DELOPT ; remove RCDPE EOB TRANSFER REPORTS option
"RTN","PRCAP298",21,0)
 N DA,DIK,MEN,OPT,RET
"RTN","PRCAP298",22,0)
 ; RET - value returned from
"RTN","PRCAP298",23,0)
 S MEN="RCDPE EDI LOCKBOX REPORTS MENU"
"RTN","PRCAP298",24,0)
 S OPT="RCDPE EOB TRANSFER REPORTS"
"RTN","PRCAP298",25,0)
 D BMES^XPDUTL("Updating ["_MEN_"]")
"RTN","PRCAP298",26,0)
 S RET=$$DELETE^XPDMENU(MEN,OPT)  ; delete option from menu
"RTN","PRCAP298",27,0)
 S DA=+$$LKOPT^XPDMENU(OPT)  ; get option IEN
"RTN","PRCAP298",28,0)
 I DA>0 S DIK="^DIC(19," D ^DIK  ; code can be re-run if already deleted
"RTN","PRCAP298",29,0)
 D MES^XPDUTL("Menu update "_$S(RET:"completed.",1:"not needed."))
"RTN","PRCAP298",30,0)
 ;
"RTN","PRCAP298",31,0)
 Q
"RTN","PRCAP298",32,0)
 ;
"RTN","PRCAP298",33,0)
SETPARMS ; update RCDPE PARAMETER file (#344.61)
"RTN","PRCAP298",34,0)
 N PRFDA,PRIENS,SITE,X
"RTN","PRCAP298",35,0)
 ; PRFDA - Array for the ^DIE call
"RTN","PRCAP298",36,0)
 ; PRIENS - IENS value for ^DIE
"RTN","PRCAP298",37,0)
 ; SITE - site number from file #342,.01 SITE (POINTER TO INSTITUTION FILE (#4))
"RTN","PRCAP298",38,0)
 ;
"RTN","PRCAP298",39,0)
 D MES^XPDUTL("Updating RCDPE PARAMETER file (#344.61)")
"RTN","PRCAP298",40,0)
 S SITE=$$GET1^DIQ(342,1,.01,"I")
"RTN","PRCAP298",41,0)
 I 'SITE D  Q
"RTN","PRCAP298",42,0)
 .; This should never happen.  If it does, there are bigger problems. 
"RTN","PRCAP298",43,0)
 .D MES^XPDUTL("*******************************************************************************")
"RTN","PRCAP298",44,0)
 .D MES^XPDUTL("**                                                                           **")
"RTN","PRCAP298",45,0)
 .D MES^XPDUTL("** There is a problem with the AR SITE PARAMETER file.  This will need to be **")
"RTN","PRCAP298",46,0)
 .D MES^XPDUTL("** fixed.  The RCDPE PARAMETER file cannot be initialized.                   **")
"RTN","PRCAP298",47,0)
 .D MES^XPDUTL("**                                                                           **")
"RTN","PRCAP298",48,0)
 .D MES^XPDUTL("** Once the AR SITE PARAMETER file is fixed, re-run SETPARMS^PRCAP298        **")
"RTN","PRCAP298",49,0)
 .D MES^XPDUTL("**                                                                           **")
"RTN","PRCAP298",50,0)
 .D MES^XPDUTL("*******************************************************************************")
"RTN","PRCAP298",51,0)
 ;
"RTN","PRCAP298",52,0)
 S X=$G(^RCY(344.61,1,0))
"RTN","PRCAP298",53,0)
 ; if parameters already initialized set cutoff date and exit
"RTN","PRCAP298",54,0)
 I $P(X,U) S $P(X,U,9)=DT,^RCY(344.61,1,0)=X D MES^XPDUTL("Updated PHARMACY EFT CUTOFF DATE") Q
"RTN","PRCAP298",55,0)
 D MES^XPDUTL("Initializing parameters.")
"RTN","PRCAP298",56,0)
 S PRIENS=$S($D(^RCY(344.61,1)):"1,",1:"+1,")
"RTN","PRCAP298",57,0)
 S PRFDA(344.61,PRIENS,.01)=SITE  ; pointer to INSTITUTION file (#4)
"RTN","PRCAP298",58,0)
 S PRFDA(344.61,PRIENS,.03)=0  ; AUTO-DECREASE MED ENABLED
"RTN","PRCAP298",59,0)
 S PRFDA(344.61,PRIENS,.06)=21  ; MEDICAL EFT POST PREVENT DAYS
"RTN","PRCAP298",60,0)
 S PRFDA(344.61,PRIENS,.07)=999 ; PHARMACY EFT POST PREVENT DAYS
"RTN","PRCAP298",61,0)
 S PRFDA(344.61,PRIENS,.09)=DT  ; PHARMACY EFT CUTOFF DATE
"RTN","PRCAP298",62,0)
 ;
"RTN","PRCAP298",63,0)
 I PRIENS="+1," D UPDATE^DIE(,"PRFDA")  ; create new entry
"RTN","PRCAP298",64,0)
 I PRIENS="1," D FILE^DIE(,"PRFDA")  ; update existing entry
"RTN","PRCAP298",65,0)
 ;
"RTN","PRCAP298",66,0)
 D MES^XPDUTL("Finished updates to RCDPE PARAMETER file (#344.61)")
"RTN","PRCAP298",67,0)
 Q
"RTN","PRCAP298",68,0)
 ;
"RTN","PRCAP298",69,0)
INITPRMS ; Task jobs to initialize file #344.6, cross-ref. files #344.31 & #344.4
"RTN","PRCAP298",70,0)
 ;
"RTN","PRCAP298",71,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","PRCAP298",72,0)
 ; set ^XTMP zero node for 180 day retention
"RTN","PRCAP298",73,0)
 S ^XTMP($T(+0),0)=$$HTFM^XLFDT($H+180)_U_DT_"^PRCA*4.5*298 post-installation"
"RTN","PRCAP298",74,0)
 D BMES^XPDUTL("Post-installation tasks "_$$FMTE^XLFDT($$NOW^XLFDT))  ; add date/time to log
"RTN","PRCAP298",75,0)
 D BMES^XPDUTL("Queueing tasks for files #344.6 and #344.4")
"RTN","PRCAP298",76,0)
 S ZTRTN="ERAPSTIN^"_$T(+0),ZTDESC="ERA (#344.4) post-init work",ZTIO="",ZTDTH=$H
"RTN","PRCAP298",77,0)
 D ^%ZTLOAD
"RTN","PRCAP298",78,0)
 D MES^XPDUTL($S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task."))
"RTN","PRCAP298",79,0)
 I $G(ZTSK)  D MES^XPDUTL("A MailMan message will be sent on completion.")
"RTN","PRCAP298",80,0)
 ;
"RTN","PRCAP298",81,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK  ; delete residual values
"RTN","PRCAP298",82,0)
 D BMES^XPDUTL(" "_$$FMTE^XLFDT($$NOW^XLFDT))  ; add date/time to log
"RTN","PRCAP298",83,0)
 D MES^XPDUTL("Queueing EDI THIRD PARTY EFT DETAIL file cross-ref. task.")
"RTN","PRCAP298",84,0)
 S ZTRTN="E3PDXREF^"_$T(+0),ZTDESC="EDI THIRD PARTY EFT DETAIL file cross-ref.",ZTIO="",ZTDTH=$H
"RTN","PRCAP298",85,0)
 D ^%ZTLOAD
"RTN","PRCAP298",86,0)
 D MES^XPDUTL($S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task."))
"RTN","PRCAP298",87,0)
 I $G(ZTSK) D MES^XPDUTL("A MailMan message will be sent on completion.")
"RTN","PRCAP298",88,0)
 ;
"RTN","PRCAP298",89,0)
 D BMES^XPDUTL("Done queuing tasks "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","PRCAP298",90,0)
 Q
"RTN","PRCAP298",91,0)
 ;
"RTN","PRCAP298",92,0)
ERAPSTIN ; entry point from TaskMan to initialize file #344.6 and cross-ref. file #344.4
"RTN","PRCAP298",93,0)
 ; sends MailMan message on completion, this subroutine can be called manually
"RTN","PRCAP298",94,0)
 ;
"RTN","PRCAP298",95,0)
 N ERA0,ERAIEN,PRADD,PRATRI,PRCXREF,PRDNLZ,PRHXREF,PRERATTL,PRID,PRNODE,PRPAYER,PRXMBODY,PRXMSUBJ,PRXMTO,PRXMZR,X,X2,X3,XMINSTR,XR,XRS
"RTN","PRCAP298",96,0)
 ; ERA0 - zero node of ERA
"RTN","PRCAP298",97,0)
 ; ERAIEN - IEN in file #344.4
"RTN","PRCAP298",98,0)
 ; PRADD - total updated in file #344.6 counter
"RTN","PRCAP298",99,0)
 ; PRATRI - 'ATRIDUP' cross-ref. counter
"RTN","PRCAP298",100,0)
 ; PRDNLZ - 'DNLZ' cross-ref. counter
"RTN","PRCAP298",101,0)
 ; PRHXREF - 'H' cross-ref. counter
"RTN","PRCAP298",102,0)
 ; PRID - Payer ID
"RTN","PRCAP298",103,0)
 ; PRNODE - ^XTMP storage node
"RTN","PRCAP298",104,0)
 ; PRPAYER - payer name
"RTN","PRCAP298",105,0)
 ; PRXMBODY - root of message body
"RTN","PRCAP298",106,0)
 ; PRXMSUBJ - message subject
"RTN","PRCAP298",107,0)
 ; PRXMTO - array of MailMan message recipients
"RTN","PRCAP298",108,0)
 ;
"RTN","PRCAP298",109,0)
 S PRNODE="ERAPOST4"
"RTN","PRCAP298",110,0)
 ; loop through ELECTRONIC REMITTANCE ADVICE file #344.4
"RTN","PRCAP298",111,0)
 S PRADD=0  ; payers added to file #344.6
"RTN","PRCAP298",112,0)
 S PRDNLZ=0  ; 'DNLZ' cross-refs. added this run
"RTN","PRCAP298",113,0)
 S PRATRI=0  ; 'ATRIDUP' cross-refs. added this run
"RTN","PRCAP298",114,0)
 S PRCXREF=0  ; 'C' cross-refs. added this run
"RTN","PRCAP298",115,0)
 S PRHXREF=0  ; 'H' cross=refs. added this run
"RTN","PRCAP298",116,0)
 S PRERATTL=0  ; ERA entries examined
"RTN","PRCAP298",117,0)
 S PRNODE("BEG")=$$NOW^XLFDT
"RTN","PRCAP298",118,0)
 S ERAIEN=$G(^XTMP($T(+0),PRNODE,"LAST"))
"RTN","PRCAP298",119,0)
 I ERAIEN="" S ERAIEN=$C(1)  ; iterating backwards, set to value past numbers
"RTN","PRCAP298",120,0)
 ; if not already run, clean up old 'C' and 'H' cross-refs., they will be re-created
"RTN","PRCAP298",121,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) K ^RCY(344.4,"C"),^RCY(344.4,"H")
"RTN","PRCAP298",122,0)
 ; run only once
"RTN","PRCAP298",123,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) F  S ERAIEN=$O(^RCY(344.4,ERAIEN),-1) Q:'ERAIEN  S ERA0=$G(^RCY(344.4,ERAIEN,0)) D:ERA0]""
"RTN","PRCAP298",124,0)
 .S PRERATTL=PRERATTL+1
"RTN","PRCAP298",125,0)
 .;add Payer Name and Payer ID to #344.6
"RTN","PRCAP298",126,0)
 .S PRPAYER=$P(ERA0,U,6),PRID=$P(ERA0,U,3) D
"RTN","PRCAP298",127,0)
 ..Q:(PRPAYER="")!(PRID="")  ; must have name and ID
"RTN","PRCAP298",128,0)
 ..I '$D(^RCY(344.6,"CPID",$E(PRPAYER,1,60),$E(PRID,1,30))) D PAYRINIT^RCDPESP(ERAIEN) S PRADD=PRADD+1  ; only if entry doesn't exist
"RTN","PRCAP298",129,0)
 .;
"RTN","PRCAP298",130,0)
 .;set 'ATRIDUP' cross-ref. for TRACE # field (#.02) and INSURANCE CO ID (#.03)
"RTN","PRCAP298",131,0)
 .S X2=$P(ERA0,U,2),X3=$P(ERA0,U,3) D:(X2]"")&(X3]"")  ; both fields must have values
"RTN","PRCAP298",132,0)
 ..S X2=$$UP($E(X2,1,50)),X3=$$UP($E(X3,1,30))  ; set case and length
"RTN","PRCAP298",133,0)
 ..S ^RCY(344.4,"ATRIDUP",X2,X3,ERAIEN)="",PRATRI=PRATRI+1
"RTN","PRCAP298",134,0)
 .; set 'DNLZ' cross-reference
"RTN","PRCAP298",135,0)
 .S X=$P(ERA0,U,2) I X]"" D:X?.N!($E(X)=0)  ; TRACE # field (#.02), numerics or leading zero
"RTN","PRCAP298",136,0)
 ..I $E(X)=0&($L(X)>2) F  S X=$E(X,2,$L(X)) Q:$L(X)<2!'($E(X)=0)  ; strip extra leading zeroes
"RTN","PRCAP298",137,0)
 ..S:X]"" ^RCY(344.4,"DNLZ",X_" ",ERAIEN)="",PRDNLZ=PRDNLZ+1
"RTN","PRCAP298",138,0)
 .; set 'C' cross-reference for PAYMENT FROM field (#.06)
"RTN","PRCAP298",139,0)
 .S X=$P(ERA0,U,6) S:$TR(X," ")]"" ^RCY(344.4,"C",$$UP($E(X,1,60)),ERAIEN)="",PRCXREF=PRCXREF+1
"RTN","PRCAP298",140,0)
 .; set 'H' cross-reference for ERA Detail
"RTN","PRCAP298",141,0)
 .D:$D(^RCY(344.4,ERAIEN,1,"RECEIPT"))
"RTN","PRCAP298",142,0)
 ..S XR=0 F  S XR=$O(^RCY(344.4,ERAIEN,1,"RECEIPT",XR)) Q:XR=""  S XRS="" D
"RTN","PRCAP298",143,0)
 ...F  S XRS=$O(^RCY(344.4,ERAIEN,1,"RECEIPT",XR,XRS)) Q:XRS=""  S ^RCY(344.4,"H",XR,ERAIEN,XRS)="",PRHXREF=PRHXREF+1
"RTN","PRCAP298",144,0)
 .;
"RTN","PRCAP298",145,0)
 .S ^XTMP($T(+0),PRNODE,"LAST")=ERAIEN  ; last IEN processed
"RTN","PRCAP298",146,0)
 ;
"RTN","PRCAP298",147,0)
 S PRNODE("END")=$$NOW^XLFDT
"RTN","PRCAP298",148,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) S ^("FINISHED")=PRNODE("END")
"RTN","PRCAP298",149,0)
 ; create MailMan message text
"RTN","PRCAP298",150,0)
 S PRXMBODY(0)=0
"RTN","PRCAP298",151,0)
 D ADD2TXT(.PRXMBODY,"Finished file #344.4 post-initialization tasks.")
"RTN","PRCAP298",152,0)
 D ADD2TXT(.PRXMBODY,"  Process begun: "_$$FMTE^XLFDT(PRNODE("BEG")))
"RTN","PRCAP298",153,0)
 D ADD2TXT(.PRXMBODY,"  Process ended: "_$$FMTE^XLFDT(PRNODE("END")))
"RTN","PRCAP298",154,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",155,0)
 D ADD2TXT(.PRXMBODY,"         Total ERA entries checked: "_$FN(PRERATTL,",")) ;PRERATTL
"RTN","PRCAP298",156,0)
 D ADD2TXT(.PRXMBODY," 'ATRIDUP' cross-refs. file #344.4: "_$FN(PRATRI,","))
"RTN","PRCAP298",157,0)
 D ADD2TXT(.PRXMBODY,"       'C' cross-refs. file #344.4: "_$FN(PRCXREF,","))
"RTN","PRCAP298",158,0)
 D ADD2TXT(.PRXMBODY,"    'DNLZ' cross-refs. file #344.4: "_$FN(PRDNLZ,","))
"RTN","PRCAP298",159,0)
 D ADD2TXT(.PRXMBODY,"       'H' cross-refs. file #344.4: "_$FN(PRHXREF,","))
"RTN","PRCAP298",160,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",161,0)
 D ADD2TXT(.PRXMBODY,"      Entries added to file #344.6: "_$FN(PRADD,","))
"RTN","PRCAP298",162,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",163,0)
 I $G(ZTSK) D ADD2TXT(.PRXMBODY," * Queued as Task #"_ZTSK_" *")
"RTN","PRCAP298",164,0)
 D ADD2TXT(.PRXMBODY,"Report generated by the "_$T(+0)_" post-initialization routine.")
"RTN","PRCAP298",165,0)
 ;
"RTN","PRCAP298",166,0)
 ; save MailMan message text
"RTN","PRCAP298",167,0)
 M ^XTMP($T(+0),PRNODE,"MAIL MSG",$$NOW^XLFDT)=PRXMBODY
"RTN","PRCAP298",168,0)
 ; send via MailMan
"RTN","PRCAP298",169,0)
 S PRXMSUBJ="PRCA*4.5*298 files #344.4 & #344.6 post-init completed"
"RTN","PRCAP298",170,0)
 S PRXMTO(.5)="",PRXMTO(DUZ)=""  ; POSTMASTER and user who queued it
"RTN","PRCAP298",171,0)
 S PRXMTO("G.RCDPE PAYMENTS MGMT")=""
"RTN","PRCAP298",172,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","PRCAP298",173,0)
 ;
"RTN","PRCAP298",174,0)
 D SENDMSG^XMXAPI(DUZ,PRXMSUBJ,"PRXMBODY",.PRXMTO,.XMINSTR,.PRXMZR)  ; send message
"RTN","PRCAP298",175,0)
 I $G(PRXMZR),'$G(ZTSK),$E(IOST,1,2)="C-" W !,"MailMan message number: "_PRXMZR
"RTN","PRCAP298",176,0)
 Q
"RTN","PRCAP298",177,0)
 ;
"RTN","PRCAP298",178,0)
 ;
"RTN","PRCAP298",179,0)
E3PDXREF ; set 'ADR', 'F', and 'FNLZ' cross-refs. in EDI THIRD PARTY EFT DETAIL file (#344.31)
"RTN","PRCAP298",180,0)
 ; sends MailMan message on completion, this subroutine can be called manually
"RTN","PRCAP298",181,0)
 ;
"RTN","PRCAP298",182,0)
 N PR310,PR31IEN,PRADR,PRF,PRFNLZ,PRNODE,PRTOTL,PRXMBODY,PRXMSUBJ,PRXMTO,PRXMZR,X,XMINSTR
"RTN","PRCAP298",183,0)
 ; PR310 - zero node for entry
"RTN","PRCAP298",184,0)
 ; PR31IEN - IEN in ELECTRONIC REMITTANCE ADVICE
"RTN","PRCAP298",185,0)
 ; PRADR -  count of "ADR" cross-refs. set
"RTN","PRCAP298",186,0)
 ; PRF - count of "F" cross-refs. set
"RTN","PRCAP298",187,0)
 ; PRFNLZ - count of "F" cross-refs. set
"RTN","PRCAP298",188,0)
 ; PRNODE - ^XTMP storage node
"RTN","PRCAP298",189,0)
 ; PRTOTL - count of entries checked
"RTN","PRCAP298",190,0)
 ; PRXMSUBJ - message subject
"RTN","PRCAP298",191,0)
 ; PRXMTO - array of MailMan message recipients
"RTN","PRCAP298",192,0)
 ; PRXMZR - message number returned
"RTN","PRCAP298",193,0)
 ;
"RTN","PRCAP298",194,0)
 S PRNODE="E3PDXREF"
"RTN","PRCAP298",195,0)
 S (PRF,PRFNLZ,PRADR,PRTOTL)=0,PRNODE("BEG")=$$NOW^XLFDT
"RTN","PRCAP298",196,0)
 ;
"RTN","PRCAP298",197,0)
 S PR31IEN=$G(^XTMP($T(+0),PRNODE,"LAST"))
"RTN","PRCAP298",198,0)
 I PR31IEN="" S PR31IEN=$C(1)  ; iterating backwards, set to value past numbers
"RTN","PRCAP298",199,0)
 ; run only once
"RTN","PRCAP298",200,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) F  S PR31IEN=$O(^RCY(344.31,PR31IEN),-1) Q:'(PR31IEN>0)  D
"RTN","PRCAP298",201,0)
 .S PR310=$G(^RCY(344.31,PR31IEN,0)) Q:PR310=""  ; zero node of entry
"RTN","PRCAP298",202,0)
 .S PRTOTL=PRTOTL+1,X=$P(PR310,U,4) S:X]"" ^RCY(344.31,"F",$E(X,1,50),PR31IEN)="",PRF=PRF+1
"RTN","PRCAP298",203,0)
 .I X]"" D:X?.N!($E(X)=0)  ; TRACE # field (#.02), only numerics or leading zero
"RTN","PRCAP298",204,0)
 ..I $E(X)=0&($L(X)>2) F  S X=$E(X,2,$L(X)) Q:$L(X)<2!'($E(X)=0)  ; strip extra leading zeroes
"RTN","PRCAP298",205,0)
 ..S:X]"" ^RCY(344.31,"FNLZ",X_" ",PR31IEN)="",PRFNLZ=PRFNLZ+1
"RTN","PRCAP298",206,0)
 .;
"RTN","PRCAP298",207,0)
 .S X=$P(PR310,U,13) S:X]"" ^RCY(344.31,"ADR",X,PR31IEN)="",PRADR=PRADR+1
"RTN","PRCAP298",208,0)
 .S ^XTMP($T(+0),PRNODE,"LAST")=PR31IEN
"RTN","PRCAP298",209,0)
 ;
"RTN","PRCAP298",210,0)
 ; disable 'D' new-style cross-ref., replaced by traditional 'F' cross-ref.
"RTN","PRCAP298",211,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) D:$D(^RCY(344.31,"D"))
"RTN","PRCAP298",212,0)
 .N PRDIERR,PRDIMSG  ; error root, message root
"RTN","PRCAP298",213,0)
 .D DELIXN^DDMOD(344.31,"D","KW","PRDIMSG","PRDIERR")  ; supported FileMan database server API
"RTN","PRCAP298",214,0)
 ;
"RTN","PRCAP298",215,0)
 S PRNODE("END")=$$NOW^XLFDT
"RTN","PRCAP298",216,0)
 I '$G(^XTMP($T(+0),PRNODE,"FINISHED")) S ^("FINISHED")=PRNODE("END")
"RTN","PRCAP298",217,0)
 ; create MailMan message text
"RTN","PRCAP298",218,0)
 S PRXMBODY(0)=0
"RTN","PRCAP298",219,0)
 D ADD2TXT(.PRXMBODY,"Updated cross-references for file #344.31")
"RTN","PRCAP298",220,0)
 D ADD2TXT(.PRXMBODY," Work begun: "_$$FMTE^XLFDT(PRNODE("BEG")))
"RTN","PRCAP298",221,0)
 D ADD2TXT(.PRXMBODY," Work ended: "_$$FMTE^XLFDT(PRNODE("END")))
"RTN","PRCAP298",222,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",223,0)
 D ADD2TXT(.PRXMBODY,"  Total Entries examined: "_$FN(PRTOTL,","))
"RTN","PRCAP298",224,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",225,0)
 D ADD2TXT(.PRXMBODY,"    'F' cross-ref. total: "_$FN(PRF,","))
"RTN","PRCAP298",226,0)
 D ADD2TXT(.PRXMBODY," 'FNLZ' cross-ref. total: "_$FN(PRFNLZ,","))
"RTN","PRCAP298",227,0)
 D ADD2TXT(.PRXMBODY,"  'ADR' cross-ref. total: "_$FN(PRADR,","))
"RTN","PRCAP298",228,0)
 D ADD2TXT(.PRXMBODY," ")  ; blank line
"RTN","PRCAP298",229,0)
 I $G(ZTSK) D ADD2TXT(.PRXMBODY," * Queued as Task #"_ZTSK_" *")
"RTN","PRCAP298",230,0)
 D ADD2TXT(.PRXMBODY,"Report generated by the "_$T(+0)_" post-initialization routine.")
"RTN","PRCAP298",231,0)
 ;
"RTN","PRCAP298",232,0)
 ; save MailMan message text
"RTN","PRCAP298",233,0)
 M ^XTMP($T(+0),PRNODE,"MAIL MSG",$$NOW^XLFDT)=PRXMBODY
"RTN","PRCAP298",234,0)
 ; send report via MailMan
"RTN","PRCAP298",235,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","PRCAP298",236,0)
 S PRXMSUBJ="PRCA*4.5*298 file #344.31 post-init completed"
"RTN","PRCAP298",237,0)
 S PRXMTO(.5)="",PRXMTO(DUZ)=""  ; POSTMASTER and user who queued it
"RTN","PRCAP298",238,0)
 S PRXMTO("G.RCDPE PAYMENTS MGMT")=""
"RTN","PRCAP298",239,0)
 ;
"RTN","PRCAP298",240,0)
 D SENDMSG^XMXAPI(DUZ,PRXMSUBJ,"PRXMBODY",.PRXMTO,.XMINSTR,.PRXMZR)  ; send message
"RTN","PRCAP298",241,0)
 I $G(PRXMZR),'$G(ZTSK),$E(IOST,1,2)="C-" D MES^XPDUTL("MailMan message number: "_PRXMZR)
"RTN","PRCAP298",242,0)
 ;
"RTN","PRCAP298",243,0)
 Q
"RTN","PRCAP298",244,0)
 ;
"RTN","PRCAP298",245,0)
ADD2TXT(TXARY,LN) ; add LN to TXARY for MailMan Message
"RTN","PRCAP298",246,0)
 ; TXARY passed by ref.
"RTN","PRCAP298",247,0)
 Q:$G(LN)=""
"RTN","PRCAP298",248,0)
 S TXARY(0)=$G(TXARY(0))+1,TXARY(TXARY(0),0)=LN Q
"RTN","PRCAP298",249,0)
 ;
"RTN","PRCAP298",250,0)
 ; function, returns uppercase
"RTN","PRCAP298",251,0)
UP(T) Q $TR(T,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","PRCAP298",252,0)
 ;
"RTN","RCBEADJ")
0^40^B66159160
"RTN","RCBEADJ",1,0)
RCBEADJ ;WISC/RFJ-adjustment ;Jun 06, 2014@19:11:19
"RTN","RCBEADJ",2,0)
 ;;4.5;Accounts Receivable;**169,172,204,173,208,233,298**;Mar 20, 1995;Build 121
"RTN","RCBEADJ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCBEADJ",4,0)
 Q
"RTN","RCBEADJ",5,0)
 ;
"RTN","RCBEADJ",6,0)
 ;
"RTN","RCBEADJ",7,0)
DECREASE ;  menu option: create a decrease adjustment
"RTN","RCBEADJ",8,0)
 D ADJUST("DECREASE")
"RTN","RCBEADJ",9,0)
 Q
"RTN","RCBEADJ",10,0)
 ;
"RTN","RCBEADJ",11,0)
 ;
"RTN","RCBEADJ",12,0)
INCREASE ;  menu option: create an increase adjustment
"RTN","RCBEADJ",13,0)
 D ADJUST("INCREASE")
"RTN","RCBEADJ",14,0)
 Q
"RTN","RCBEADJ",15,0)
 ;
"RTN","RCBEADJ",16,0)
ADJUST(RCBETYPE,RCEDI) ;  create an adjustment
"RTN","RCBEADJ",17,0)
 ;  rcbetype = INCREASE for increase or DECREASE for decrease
"RTN","RCBEADJ",18,0)
 ;  rcedi = the ien of the bill selected via the EDI Worklist;ien of 
"RTN","RCBEADJ",19,0)
 ;          the ERA entry or null/undefined if bill should be selected
"RTN","RCBEADJ",20,0)
 N RCBILLDA
"RTN","RCBEADJ",21,0)
 F  D  Q:RCBILLDA<0!$G(RCEDI)
"RTN","RCBEADJ",22,0)
 .   K RCTRANDA,RCLIST
"RTN","RCBEADJ",23,0)
 .   ;
"RTN","RCBEADJ",24,0)
 .   ;  select a bill
"RTN","RCBEADJ",25,0)
 .   S RCBILLDA=$S('$G(RCEDI):$$GETABILL^RCBEUBIL,1:+RCEDI)
"RTN","RCBEADJ",26,0)
 .   I RCBILLDA<1 Q
"RTN","RCBEADJ",27,0)
 .   ;
"RTN","RCBEADJ",28,0)
 .   ;  adjust the bill
"RTN","RCBEADJ",29,0)
 .   D ADJBILL(RCBETYPE,RCBILLDA,$P($G(RCEDI),";",2))
"RTN","RCBEADJ",30,0)
 Q
"RTN","RCBEADJ",31,0)
 ;
"RTN","RCBEADJ",32,0)
ADJBILL(RCBETYPE,RCBILLDA,RCEDIWL) ;  adjust a bill
"RTN","RCBEADJ",33,0)
 ; RCEDIWL = ien of ERA entry if called from worklist
"RTN","RCBEADJ",34,0)
 N RCAMOUNT,RCBALANC,RCDATA7,RCLIST,RCONTADJ,RCTRANDA,TOTALCAL,TOTALSTO,I,X,Y
"RTN","RCBEADJ",35,0)
 ;  lock the bill
"RTN","RCBEADJ",36,0)
 L +^PRCA(430,RCBILLDA):5 E  W !,"ANOTHER USER IS CURRENTLY WORKING WITH THIS BILL." Q
"RTN","RCBEADJ",37,0)
 ;
"RTN","RCBEADJ",38,0)
 ;  show data for the bill
"RTN","RCBEADJ",39,0)
 D SHOWBILL^RCWROFF1(RCBILLDA)
"RTN","RCBEADJ",40,0)
 ;
"RTN","RCBEADJ",41,0)
 ;  check the balance of the bill
"RTN","RCBEADJ",42,0)
 W !!,"Checking the bill's balance ..."
"RTN","RCBEADJ",43,0)
 S RCBALANC=$$OUTOFBAL^RCBDBBAL(RCBILLDA)
"RTN","RCBEADJ",44,0)
 I RCBALANC="" W " IN Balance!"
"RTN","RCBEADJ",45,0)
 ;
"RTN","RCBEADJ",46,0)
 ;  out of balance, ask to fix it
"RTN","RCBEADJ",47,0)
 I RCBALANC'="" D  I RCBILLDA<1 D UNLOCK Q
"RTN","RCBEADJ",48,0)
 .   S TOTALCAL=$P(RCBALANC,"^")+$P(RCBALANC,"^",2)+$P(RCBALANC,"^",3)+$P(RCBALANC,"^",4)+$P(RCBALANC,"^",5)
"RTN","RCBEADJ",49,0)
 .   S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",50,0)
 .   S TOTALSTO=$P(RCDATA7,"^")+$P(RCDATA7,"^",2)+$P(RCDATA7,"^",3)+$P(RCDATA7,"^",4)+$P(RCDATA7,"^",5)
"RTN","RCBEADJ",51,0)
 .   W " OUT of Balance!"
"RTN","RCBEADJ",52,0)
 .   W !!,"                  BALANCE:",$J("Calculated",12),$J("Stored",12)
"RTN","RCBEADJ",53,0)
 .   W !,"                  ------- ",$J("------------",12),$J("------------",12)
"RTN","RCBEADJ",54,0)
 .   W !,"        Principal Balance:",$J($P(RCBALANC,"^",1),12,2),$J($P(RCDATA7,"^",1),12,2)
"RTN","RCBEADJ",55,0)
 .   I +$P(RCBALANC,"^",1)'=+$P(RCDATA7,"^",1) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",56,0)
 .   W !,"         Interest Balance:",$J($P(RCBALANC,"^",2),12,2),$J($P(RCDATA7,"^",2),12,2)
"RTN","RCBEADJ",57,0)
 .   I +$P(RCBALANC,"^",2)'=+$P(RCDATA7,"^",2) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",58,0)
 .   W !,"            Admin Balance:",$J($P(RCBALANC,"^",3),12,2),$J($P(RCDATA7,"^",3),12,2)
"RTN","RCBEADJ",59,0)
 .   I +$P(RCBALANC,"^",3)'=+$P(RCDATA7,"^",3) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",60,0)
 .   W !,"               MF Balance:",$J($P(RCBALANC,"^",4),12,2),$J($P(RCDATA7,"^",4),12,2)
"RTN","RCBEADJ",61,0)
 .   I +$P(RCBALANC,"^",4)'=+$P(RCDATA7,"^",4) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",62,0)
 .   W !,"               CC Balance:",$J($P(RCBALANC,"^",5),12,2),$J($P(RCDATA7,"^",5),12,2)
"RTN","RCBEADJ",63,0)
 .   I +$P(RCBALANC,"^",5)'=+$P(RCDATA7,"^",5) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",64,0)
 .   W !,"                  ------- ",$J("-------------",12),$J("-------------",12)
"RTN","RCBEADJ",65,0)
 .   W !,"                    TOTAL:",$J(TOTALCAL,12,2),$J(TOTALSTO,12,2)
"RTN","RCBEADJ",66,0)
 .   I +TOTALCAL'=+TOTALSTO W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",67,0)
 .   ;
"RTN","RCBEADJ",68,0)
 .   ;  ask to fix the balances
"RTN","RCBEADJ",69,0)
 .   S Y=$$ASKFIX I Y'=1 W !,"  NOTE: You must fix the Balance Discrepancy before processing an adjustment!" S RCBILLDA=0 Q
"RTN","RCBEADJ",70,0)
 .   ;
"RTN","RCBEADJ",71,0)
 .   ;  fix it
"RTN","RCBEADJ",72,0)
 .   S $P(RCDATA7,"^",1)=+$P(RCBALANC,"^",1) ; principal
"RTN","RCBEADJ",73,0)
 .   S $P(RCDATA7,"^",2)=+$P(RCBALANC,"^",2) ; interest
"RTN","RCBEADJ",74,0)
 .   S $P(RCDATA7,"^",3)=+$P(RCBALANC,"^",3) ; admin
"RTN","RCBEADJ",75,0)
 .   S $P(RCDATA7,"^",4)=+$P(RCBALANC,"^",4) ; marshal fee
"RTN","RCBEADJ",76,0)
 .   S $P(RCDATA7,"^",5)=+$P(RCBALANC,"^",5) ; court cost
"RTN","RCBEADJ",77,0)
 .   S $P(^PRCA(430,RCBILLDA,7),"^",1,5)=$P(RCDATA7,"^",1,5)
"RTN","RCBEADJ",78,0)
 .   ;
"RTN","RCBEADJ",79,0)
 .   W !,"  Balance Discrepancy FIXED!"
"RTN","RCBEADJ",80,0)
 ;
"RTN","RCBEADJ",81,0)
 ;  if the principal balance is zero, do not allow it to be adjusted
"RTN","RCBEADJ",82,0)
 ;  ask to close/cancel it
"RTN","RCBEADJ",83,0)
 I RCBETYPE="DECREASE",'$G(^PRCA(430,RCBILLDA,7)) W !!,"Note: This bill has NO PRINCIPAL BALANCE to decrease !" D INTADMIN(RCBILLDA),UNLOCK Q
"RTN","RCBEADJ",84,0)
 ;
"RTN","RCBEADJ",85,0)
 ; If entry is from EDI Lockbox worklist, display total adjustments in ERA
"RTN","RCBEADJ",86,0)
 N AP D
"RTN","RCBEADJ",87,0)
 .N BILL,EOB,ERA,SEQ S ERA="",AP=0
"RTN","RCBEADJ",88,0)
 .F  S ERA=$O(^RCY(344.4,"AP",1,ERA)) Q:'ERA  D  Q:AP
"RTN","RCBEADJ",89,0)
 ..S SEQ=0
"RTN","RCBEADJ",90,0)
 ..F  S SEQ=$O(^RCY(344.4,"AP",1,ERA,SEQ)) Q:'SEQ  D  Q:AP
"RTN","RCBEADJ",91,0)
 ...S EOB=$P($G(^RCY(344.4,ERA,1,SEQ,0)),U,2) Q:'EOB
"RTN","RCBEADJ",92,0)
 ...S:$P($G(^IBM(361.1,EOB,0)),U)=RCBILLDA AP=1 ;IA #4051
"RTN","RCBEADJ",93,0)
 ;
"RTN","RCBEADJ",94,0)
 ;  Ask to enter transaction even though it is marked for autopost PRCA*4.5*298
"RTN","RCBEADJ",95,0)
 I RCBETYPE="DECREASE",AP S Y=$$ASKAUPO() I Y'=1 W !,"Exiting bill adjustment." D UNLOCK Q
"RTN","RCBEADJ",96,0)
 ;
"RTN","RCBEADJ",97,0)
 ;  ask to enter adjustment amount
"RTN","RCBEADJ",98,0)
 S RCAMOUNT=$$AMOUNT(RCBILLDA,RCBETYPE)
"RTN","RCBEADJ",99,0)
 I RCAMOUNT<0 D UNLOCK Q
"RTN","RCBEADJ",100,0)
 ;
"RTN","RCBEADJ",101,0)
 ;  if decrease, make negative
"RTN","RCBEADJ",102,0)
 I RCBETYPE="DECREASE" S RCAMOUNT=-RCAMOUNT
"RTN","RCBEADJ",103,0)
 ;
"RTN","RCBEADJ",104,0)
 ;  ask if it is a contract adjustment
"RTN","RCBEADJ",105,0)
 I RCBETYPE="DECREASE","^9^28^29^30^32^"[("^"_$P($G(^PRCA(430,RCBILLDA,0)),"^",2)_"^") S RCONTADJ=$$ASKCONT I RCONTADJ<0 D UNLOCK Q
"RTN","RCBEADJ",106,0)
 ;
"RTN","RCBEADJ",107,0)
 ;  show what the new transaction will look like
"RTN","RCBEADJ",108,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",109,0)
 W !!,"If you process the transaction, the bill will look like:"
"RTN","RCBEADJ",110,0)
 W !,"Current Principal Balance: ",$J($P(RCDATA7,"^"),11,2)
"RTN","RCBEADJ",111,0)
 W !,"  NEW ",RCBETYPE," Adjustment: ",$J(RCAMOUNT,11,2)
"RTN","RCBEADJ",112,0)
 W !,"                           -----------"
"RTN","RCBEADJ",113,0)
 W !,"    NEW Principal Balance: ",$J($P(RCDATA7,"^")+RCAMOUNT,11,2)
"RTN","RCBEADJ",114,0)
 ;
"RTN","RCBEADJ",115,0)
 ;  ask to enter transaction
"RTN","RCBEADJ",116,0)
 S Y=$$ASKOK(RCBETYPE) I Y'=1 D UNLOCK Q
"RTN","RCBEADJ",117,0)
 ;
"RTN","RCBEADJ",118,0)
 ;  add adjustment
"RTN","RCBEADJ",119,0)
 S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILLDA,RCAMOUNT,"","","",$G(RCONTADJ))
"RTN","RCBEADJ",120,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: Adjustment NOT Processed! ***" D UNLOCK Q
"RTN","RCBEADJ",121,0)
 I RCTRANDA W !,"  Adjustment Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",122,0)
 I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !!,"   * * * * Transmission will be held until "_Y_" * * * *"
"RTN","RCBEADJ",123,0)
 ;
"RTN","RCBEADJ",124,0)
 ;  ask to enter a comment
"RTN","RCBEADJ",125,0)
 W !!,"Enter a comment for the ",RCBETYPE," Adjustment:"
"RTN","RCBEADJ",126,0)
 S Y=$$EDIT433^RCBEUTRA(RCTRANDA,"41;")
"RTN","RCBEADJ",127,0)
 ;
"RTN","RCBEADJ",128,0)
 ;  ask to exempt interest and admin charges
"RTN","RCBEADJ",129,0)
 I RCBETYPE="DECREASE" D INTADMIN(RCBILLDA)
"RTN","RCBEADJ",130,0)
 ;
"RTN","RCBEADJ",131,0)
 ;  notification of subsequent payer bulletin
"RTN","RCBEADJ",132,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7)),X=0
"RTN","RCBEADJ",133,0)
 F I=1:1:5 S X=X+$P(RCDATA7,"^",I)
"RTN","RCBEADJ",134,0)
 I RCDATA7'="",'X D
"RTN","RCBEADJ",135,0)
 .   N PRCABN,PRCAEN,PRCAMT
"RTN","RCBEADJ",136,0)
 .   S PRCABN=RCBILLDA,PRCAEN=RCTRANDA,PRCAMT=+$P($G(^PRCA(433,RCTRANDA,1)),"^",5)
"RTN","RCBEADJ",137,0)
 .   D EOB^PRCADJ
"RTN","RCBEADJ",138,0)
 ;
"RTN","RCBEADJ",139,0)
 ;  unlock and ask the next bill to adjust
"RTN","RCBEADJ",140,0)
 D UNLOCK
"RTN","RCBEADJ",141,0)
 Q
"RTN","RCBEADJ",142,0)
 ;
"RTN","RCBEADJ",143,0)
 ;
"RTN","RCBEADJ",144,0)
UNLOCK ;  unlock bill and transaction
"RTN","RCBEADJ",145,0)
 L -^PRCA(430,RCBILLDA)
"RTN","RCBEADJ",146,0)
 I $G(RCTRANDA) L -^PRCA(433,RCTRANDA)
"RTN","RCBEADJ",147,0)
 Q
"RTN","RCBEADJ",148,0)
 ;
"RTN","RCBEADJ",149,0)
 ;
"RTN","RCBEADJ",150,0)
INTADMIN(RCBILLDA) ;  ask and adjust the interest and admin
"RTN","RCBEADJ",151,0)
 N RCAMOUNT,RCTRANDA,Y
"RTN","RCBEADJ",152,0)
 ;
"RTN","RCBEADJ",153,0)
 ;  check to see if there is interest and admin charges
"RTN","RCBEADJ",154,0)
 S RCAMOUNT=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",155,0)
 I '$P(RCAMOUNT,"^",2),'$P(RCAMOUNT,"^",3),'$P(RCAMOUNT,"^",4),'$P(RCAMOUNT,"^",5) Q
"RTN","RCBEADJ",156,0)
 ;
"RTN","RCBEADJ",157,0)
 ;  only ask if there is no principal
"RTN","RCBEADJ",158,0)
 I RCAMOUNT Q
"RTN","RCBEADJ",159,0)
 ;
"RTN","RCBEADJ",160,0)
 W !!,"You have the option to automatically EXEMPT the interest"
"RTN","RCBEADJ",161,0)
 W !,"and administrative charges.  This will close the bill."
"RTN","RCBEADJ",162,0)
 S Y=$$ASKEXEMP I Y'=1 Q
"RTN","RCBEADJ",163,0)
 ;
"RTN","RCBEADJ",164,0)
 W !!,"Creating an EXEMPT transaction ..."
"RTN","RCBEADJ",165,0)
 S RCTRANDA=$$EXEMPT^RCBEUTR2(RCBILLDA,$P(RCAMOUNT,"^",2)_"^"_$P(RCAMOUNT,"^",3)_"^^"_$P(RCAMOUNT,"^",4)_"^"_$P(RCAMOUNT,"^",5))
"RTN","RCBEADJ",166,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: EXEMPTION NOT Processed! ***" Q
"RTN","RCBEADJ",167,0)
 I RCTRANDA W !,"   Exempt Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",168,0)
 ;
"RTN","RCBEADJ",169,0)
 W !,"  Current Bill Status: ",$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILLDA,0)),"^",8),0)),"^")
"RTN","RCBEADJ",170,0)
 Q
"RTN","RCBEADJ",171,0)
 ;
"RTN","RCBEADJ",172,0)
ASKOK(RCBETYPE) ;  ask record decrease or increase transaction
"RTN","RCBEADJ",173,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",174,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",175,0)
 S DIR("A")="Are you sure you want to enter this "_RCBETYPE_" adjustment "
"RTN","RCBEADJ",176,0)
 W ! D ^DIR
"RTN","RCBEADJ",177,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",178,0)
 Q Y
"RTN","RCBEADJ",179,0)
 ;
"RTN","RCBEADJ",180,0)
ASKAUPO() ;  ask record even though marked for auto post PRCA*4.5*298
"RTN","RCBEADJ",181,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",182,0)
 S DIR(0)="YOA",DIR("B")="NO"
"RTN","RCBEADJ",183,0)
 S DIR("A")="Marked for Auto-Post. Are you sure? (Y/N) "
"RTN","RCBEADJ",184,0)
 W ! D ^DIR
"RTN","RCBEADJ",185,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",186,0)
 Q Y
"RTN","RCBEADJ",187,0)
 ;
"RTN","RCBEADJ",188,0)
ASKFIX() ;  ask to fix bill's balance
"RTN","RCBEADJ",189,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",190,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",191,0)
 S DIR("A")="  Do you want to FIX the balance discrepancy "
"RTN","RCBEADJ",192,0)
 W ! D ^DIR
"RTN","RCBEADJ",193,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",194,0)
 Q Y
"RTN","RCBEADJ",195,0)
 ;
"RTN","RCBEADJ",196,0)
 ;
"RTN","RCBEADJ",197,0)
ASKEXEMP() ;  ask to record an exempt transaction
"RTN","RCBEADJ",198,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",199,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCBEADJ",200,0)
 S DIR("A")="  Would you like to EXEMPT the interest and admin charges "
"RTN","RCBEADJ",201,0)
 D ^DIR
"RTN","RCBEADJ",202,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",203,0)
 Q Y
"RTN","RCBEADJ",204,0)
 ;
"RTN","RCBEADJ",205,0)
 ;
"RTN","RCBEADJ",206,0)
ASKCONT() ;  ask if contract adjustment
"RTN","RCBEADJ",207,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",208,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",209,0)
 S DIR("A")="  Is this a CONTRACT adjustment "
"RTN","RCBEADJ",210,0)
 W ! D ^DIR
"RTN","RCBEADJ",211,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",212,0)
 Q Y
"RTN","RCBEADJ",213,0)
 ;
"RTN","RCBEADJ",214,0)
ADJNUM(RCBILLDA) ;  get next adjustment number for a bill
"RTN","RCBEADJ",215,0)
 N %,ADJUST,DATA1,RCTRANDA
"RTN","RCBEADJ",216,0)
 S RCTRANDA=0
"RTN","RCBEADJ",217,0)
 F  S RCTRANDA=$O(^PRCA(433,"C",RCBILLDA,RCTRANDA)) Q:'RCTRANDA  S DATA1=$G(^PRCA(433,RCTRANDA,1)) I $P(DATA1,"^",4),$P(DATA1,"^",2)=1!($P(DATA1,"^",2)=35) S ADJUST=$P(DATA1,"^",4)+1
"RTN","RCBEADJ",218,0)
 Q ADJUST
"RTN","RCBEADJ",219,0)
 ;
"RTN","RCBEADJ",220,0)
 ;
"RTN","RCBEADJ",221,0)
AMOUNT(RCBILLDA,RCBETYPE) ;  enter the adjustment amount for a bill
"RTN","RCBEADJ",222,0)
 N DIR,DIRUT,DTOUT,DUOUT,PRINBAL,X,Y
"RTN","RCBEADJ",223,0)
 S PRINBAL=+$P($G(^PRCA(430,RCBILLDA,7)),"^")
"RTN","RCBEADJ",224,0)
 I RCBETYPE="INCREASE" S PRINBAL=9999999.99
"RTN","RCBEADJ",225,0)
 W !!,"Enter the ",RCBETYPE," Adjustment AMOUNT, from .01 to ",$J(PRINBAL,0,2),"."
"RTN","RCBEADJ",226,0)
 S DIR(0)="NAO^.01:"_PRINBAL_":2"
"RTN","RCBEADJ",227,0)
 S DIR("A")="  "_RCBETYPE_" PRINCIPAL BALANCE BY: "
"RTN","RCBEADJ",228,0)
 D ^DIR
"RTN","RCBEADJ",229,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCBEADJ",230,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCBEADJ",231,0)
 ;
"RTN","RCDPAYER")
0^16^B26142929
"RTN","RCDPAYER",1,0)
RCDPAYER ;ALB/PJH - TPJI Utility ;Jun 06, 2014@19:11:19
"RTN","RCDPAYER",2,0)
 ;;4.5;Accounts Receivable;**269,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPAYER",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPAYER",4,0)
 ;
"RTN","RCDPAYER",5,0)
 ;Integration Agreement 5549
"RTN","RCDPAYER",6,0)
 ;
"RTN","RCDPAYER",7,0)
 Q
"RTN","RCDPAYER",8,0)
 ;
"RTN","RCDPAYER",9,0)
EN(IB3611) ;Called from IBJTTC
"RTN","RCDPAYER",10,0)
 ; IB3611 = ien of EXPLANATION OF BENEFITS file (361.1)
"RTN","RCDPAYER",11,0)
 ; gathers payer contact data from file 361.1 and 344.4
"RTN","RCDPAYER",12,0)
 ; returns the data to IBJTTC for display on COMMENT HISTORY screen of TPJI
"RTN","RCDPAYER",13,0)
 N AR3444,CONTACTS,ERA3,FOUND,I,IBTEXT,IB25,STR,WEB,NAME
"RTN","RCDPAYER",14,0)
 ;
"RTN","RCDPAYER",15,0)
 S CONTACTS="",STR="",FOUND=0,WEB="",NAME=""
"RTN","RCDPAYER",16,0)
 ;
"RTN","RCDPAYER",17,0)
 ;Retrieve contacts from EOB file
"RTN","RCDPAYER",18,0)
 S IB25=$P($G(^IBM(361.1,IB3611,25)),U,1,7) ;IA 4051
"RTN","RCDPAYER",19,0)
 S:$TR(IB25,U,"")]"" FOUND=1,STR=IB25
"RTN","RCDPAYER",20,0)
 ;
"RTN","RCDPAYER",21,0)
 ;Get ERA reference
"RTN","RCDPAYER",22,0)
 S AR3444=$O(^RCY(344.4,"ADET",IB3611,""))
"RTN","RCDPAYER",23,0)
 ;
"RTN","RCDPAYER",24,0)
 ;If no contact in EOB retrieve contacts from ERA file
"RTN","RCDPAYER",25,0)
 I AR3444,'FOUND D
"RTN","RCDPAYER",26,0)
 .S ERA3=$P($G(^RCY(344.4,AR3444,3)),U,1,7)
"RTN","RCDPAYER",27,0)
 .S:$TR(ERA3,U,"")]"" FOUND=1,STR=ERA3
"RTN","RCDPAYER",28,0)
 ;
"RTN","RCDPAYER",29,0)
 ;Retrieve Payer Web Address from ERA file
"RTN","RCDPAYER",30,0)
 I AR3444 S WEB=$P($G(^RCY(344.4,AR3444,5)),U) S:WEB]"" FOUND=1
"RTN","RCDPAYER",31,0)
 ;
"RTN","RCDPAYER",32,0)
 ;Get Payer Contact Name
"RTN","RCDPAYER",33,0)
 S NAME=$P(STR,U) S:NAME]"" FOUND=1
"RTN","RCDPAYER",34,0)
 ;
"RTN","RCDPAYER",35,0)
 ;Format contacts
"RTN","RCDPAYER",36,0)
 I STR]"" D
"RTN","RCDPAYER",37,0)
 .N I,CTYP,CPOS
"RTN","RCDPAYER",38,0)
 .F I=2,4,6 D:$P(STR,U,I)]""
"RTN","RCDPAYER",39,0)
 ..;Validate contact type
"RTN","RCDPAYER",40,0)
 ..S CTYP=$P(STR,U,I+1)
"RTN","RCDPAYER",41,0)
 ..S CPOS=$S(CTYP="TE":1,CTYP="FX":2,CTYP="EM":3,CTYP="EX":4,1:0)
"RTN","RCDPAYER",42,0)
 ..Q:'CPOS
"RTN","RCDPAYER",43,0)
 ..;Save only first occurance of each type of contact
"RTN","RCDPAYER",44,0)
 ..S:$P(CONTACTS,U,CPOS)="" $P(CONTACTS,U,CPOS)=$P(STR,U,I)
"RTN","RCDPAYER",45,0)
 ;
"RTN","RCDPAYER",46,0)
 ;Allow for misfiled legacy contact data
"RTN","RCDPAYER",47,0)
 I FOUND,NAME="",WEB="",CONTACTS="" S FOUND=0
"RTN","RCDPAYER",48,0)
 ;Return found_web_phone_fax_email
"RTN","RCDPAYER",49,0)
 Q FOUND_U_NAME_U_WEB_U_CONTACTS
"RTN","RCDPAYER",50,0)
 ;
"RTN","RCDPAYER",51,0)
ADD(PRCABN) ;Update AR Transaction file #433 with comment type transaction
"RTN","RCDPAYER",52,0)
 ;PRCABN = Bill/Claim IEN for file #399.
"RTN","RCDPAYER",53,0)
 ;called only if 'ERA Contact Information' type comment is not found
"RTN","RCDPAYER",54,0)
 ;serves as a notice to the user that the contact data came from the 835 ERA. Called from IBJTTC
"RTN","RCDPAYER",55,0)
 ;
"RTN","RCDPAYER",56,0)
 ;Note; PJH 8/11/2010 - see ADJUST^RCJIBFN3 (called by ARCA^IBJTA1)
"RTN","RCDPAYER",57,0)
 ;
"RTN","RCDPAYER",58,0)
 N AUTHDT,IBIFN,MRADT,STATUS
"RTN","RCDPAYER",59,0)
 S IBIFN=PRCABN
"RTN","RCDPAYER",60,0)
 S STATUS=$P($G(^DGCR(399,IBIFN,0)),U,13)
"RTN","RCDPAYER",61,0)
 S AUTHDT=$P($G(^DGCR(399,IBIFN,"S")),U,10)
"RTN","RCDPAYER",62,0)
 S MRADT=$P($G(^DGCR(399,IBIFN,"S")),U,7)
"RTN","RCDPAYER",63,0)
 ;
"RTN","RCDPAYER",64,0)
 ;If claim status is "NOT REVIEWED" or claim status is "CANCELLED"
"RTN","RCDPAYER",65,0)
 ;with neither MRA request date nor Authorization date present
"RTN","RCDPAYER",66,0)
 ;comment may not be added
"RTN","RCDPAYER",67,0)
 I STATUS=1!(STATUS=7&(MRADT="")&(AUTHDT="")) Q
"RTN","RCDPAYER",68,0)
 ;
"RTN","RCDPAYER",69,0)
 ;If claim status is "REQUEST MRA" or claim status is "CANCELLED"
"RTN","RCDPAYER",70,0)
 ;with MRA request date present, but no Authorization date comment
"RTN","RCDPAYER",71,0)
 ;cannot be added
"RTN","RCDPAYER",72,0)
 I STATUS=2!(STATUS=7&(MRADT'="")&(AUTHDT="")) Q
"RTN","RCDPAYER",73,0)
 ;
"RTN","RCDPAYER",74,0)
 ;Ignore bill cancelled in IB
"RTN","RCDPAYER",75,0)
 I '$D(^PRCA(430,PRCABN,2,0)) Q
"RTN","RCDPAYER",76,0)
 ;
"RTN","RCDPAYER",77,0)
 ;Ignore Archived bill
"RTN","RCDPAYER",78,0)
 I $P($G(^PRCA(430,PRCABN,0)),"^",8)=49 Q
"RTN","RCDPAYER",79,0)
 ;
"RTN","RCDPAYER",80,0)
 ;Build AR Transaction
"RTN","RCDPAYER",81,0)
 ;
"RTN","RCDPAYER",82,0)
 N PRCAEN,PRCAA1,DR,DIE,DA,D0,PRCAD,RCASK,PRCAA2,PRCA,PRCATY
"RTN","RCDPAYER",83,0)
 ;
"RTN","RCDPAYER",84,0)
 ;Create stub record in 433
"RTN","RCDPAYER",85,0)
 D SETTR^PRCAUTL,PATTR^PRCAUTL Q:'$D(PRCAEN)
"RTN","RCDPAYER",86,0)
 ;
"RTN","RCDPAYER",87,0)
 S PRCAA1=$S($D(^PRCA(433,PRCAEN,4,0)):+$P(^(0),U,4),1:0)
"RTN","RCDPAYER",88,0)
 Q:PRCAA1'>0  S PRCAA2=$P(^(0),U,3)
"RTN","RCDPAYER",89,0)
 ;
"RTN","RCDPAYER",90,0)
 ;Direct update of [PRCA COMMENT] edit template fields 
"RTN","RCDPAYER",91,0)
 ;(excluding Date of Contact, Extended Comments and Follow-up Date)
"RTN","RCDPAYER",92,0)
 S DIE="^PRCA(433,",DA=PRCAEN
"RTN","RCDPAYER",93,0)
 S DR=".03////"_PRCABN ;Bill Number
"RTN","RCDPAYER",94,0)
 S DR=DR_";3////0" ;Calm Code Done
"RTN","RCDPAYER",95,0)
 S DR=DR_";12////"_$O(^PRCA(430.3,"AC",17,0)) ;Transaction Type
"RTN","RCDPAYER",96,0)
 S DR=DR_";15////0" ;Transaction Amount
"RTN","RCDPAYER",97,0)
 S DR=DR_";42////.5" ;Processed by POSTMASTER
"RTN","RCDPAYER",98,0)
 S DR=DR_";11////"_DT ;Transaction date
"RTN","RCDPAYER",99,0)
 S DR=DR_";4////2" ;Transaction status (complete)
"RTN","RCDPAYER",100,0)
 S DR=DR_";5.02////ERA Payer Contact Information" D ^DIE
"RTN","RCDPAYER",101,0)
 ;
"RTN","RCDPAYER",102,0)
 ;Leave validation checks in place
"RTN","RCDPAYER",103,0)
 I $P($G(^PRCA(433,PRCAEN,5)),"^",2)=""!'$P(^PRCA(433,PRCAEN,1),"^") S PRCACOMM="TRANSACTION INCOMPLETE" D DELETE^PRCAWO1 K PRCACOMM Q
"RTN","RCDPAYER",104,0)
 ;
"RTN","RCDPAYER",105,0)
 I '$D(PRCAD("DELETE")) S RCASK=1 D TRANUP^PRCAUTL,UPPRIN^PRCADJ
"RTN","RCDPAYER",106,0)
 ;
"RTN","RCDPAYER",107,0)
 I $P($G(^RCD(340,+$P(^PRCA(430,PRCABN,0),"^",9),0)),"^")[";DPT(" D
"RTN","RCDPAYER",108,0)
 .;Ensure comment does not appear on patient statement
"RTN","RCDPAYER",109,0)
 .S $P(^PRCA(433,PRCAEN,0),"^",10)=1
"RTN","RCDPAYER",110,0)
 Q
"RTN","RCDPAYER",111,0)
 ;
"RTN","RCDPAYER",112,0)
 ;Audit Comment from EOB Move/Copy
"RTN","RCDPAYER",113,0)
AUDIT(ORIG,TEXT,MODE) ;
"RTN","RCDPAYER",114,0)
 ; ORIG = ien of entry in 361.1
"RTN","RCDPAYER",115,0)
 ; TEXT = move/copy reason
"RTN","RCDPAYER",116,0)
 ; MODE = is this a move or a copy event
"RTN","RCDPAYER",117,0)
 ;
"RTN","RCDPAYER",118,0)
 ;Translate EOB ien  to claim number IA 4051
"RTN","RCDPAYER",119,0)
 N PRCABN
"RTN","RCDPAYER",120,0)
 S PRCABN=$P($G(^IBM(361.1,ORIG,0)),U) Q:'PRCABN
"RTN","RCDPAYER",121,0)
 ;Build AR Transaction
"RTN","RCDPAYER",122,0)
 ;
"RTN","RCDPAYER",123,0)
 N PRCAEN,PRCAA1,DR,DIE,DA,D0,PRCAD,RCASK,PRCAA2,PRCA,PRCATY
"RTN","RCDPAYER",124,0)
 ;
"RTN","RCDPAYER",125,0)
 ;Create stub record in 433
"RTN","RCDPAYER",126,0)
 D SETTR^PRCAUTL,PATTR^PRCAUTL Q:'$D(PRCAEN)
"RTN","RCDPAYER",127,0)
 ;
"RTN","RCDPAYER",128,0)
 S PRCAA1=$S($D(^PRCA(433,PRCAEN,4,0)):+$P(^(0),U,4),1:0)
"RTN","RCDPAYER",129,0)
 Q:PRCAA1'>0  S PRCAA2=$P(^(0),U,3)
"RTN","RCDPAYER",130,0)
 ;
"RTN","RCDPAYER",131,0)
 N MTEXT,INIT
"RTN","RCDPAYER",132,0)
 S INIT=$$GET1^DIQ(200,DUZ,1)
"RTN","RCDPAYER",133,0)
 S:INIT="" INIT="USER UNK."
"RTN","RCDPAYER",134,0)
 S MTEXT="EEOB MOVED BY "_INIT
"RTN","RCDPAYER",135,0)
 I MODE="C" S MTEXT="EEOB COPIED BY "_INIT
"RTN","RCDPAYER",136,0)
 I MODE="R" S MTEXT="EEOB REMOVED BY "_INIT
"RTN","RCDPAYER",137,0)
 I MODE="W" S MTEXT="EEOB MOVE/COPY IN SPLIT/EDIT"
"RTN","RCDPAYER",138,0)
 ;Direct update of [PRCA COMMENT] edit template fields 
"RTN","RCDPAYER",139,0)
 ;(excluding Date of Contact, Extended Comments and Follow-up Date)
"RTN","RCDPAYER",140,0)
 S DIE="^PRCA(433,",DA=PRCAEN
"RTN","RCDPAYER",141,0)
 S DR=".03////"_PRCABN ;Bill Number
"RTN","RCDPAYER",142,0)
 S DR=DR_";3////0" ;Calm Code Done
"RTN","RCDPAYER",143,0)
 S DR=DR_";12////"_$O(^PRCA(430.3,"AC",17,0)) ;Transaction Type
"RTN","RCDPAYER",144,0)
 S DR=DR_";15////0" ;Transaction Amount
"RTN","RCDPAYER",145,0)
 S DR=DR_";42////"_DUZ ;Processed by  ; kl - 8/23/11 move/copy needs to have the actual user not postmaster
"RTN","RCDPAYER",146,0)
 S DR=DR_";11////"_DT ;Transaction date
"RTN","RCDPAYER",147,0)
 S DR=DR_";4////2" ;Transaction status (complete)
"RTN","RCDPAYER",148,0)
 S DR=DR_";5.02////"_MTEXT ;Brief comment
"RTN","RCDPAYER",149,0)
 D ^DIE
"RTN","RCDPAYER",150,0)
 ;Store justification text in comment field
"RTN","RCDPAYER",151,0)
 N DA,DIC,DLAYGO,DR,X
"RTN","RCDPAYER",152,0)
 S DA(1)=PRCAEN
"RTN","RCDPAYER",153,0)
 S DIC="^PRCA(433,"_DA(1)_",7,",DIC(0)="L",X=$P(TEXT,U)
"RTN","RCDPAYER",154,0)
 D FILE^DICN
"RTN","RCDPAYER",155,0)
 ;Store auto generated text from stand alone option in comment field
"RTN","RCDPAYER",156,0)
 I $P(TEXT,U,2)]"" D
"RTN","RCDPAYER",157,0)
 .N DA,DIC,DLAYGO,DR,X
"RTN","RCDPAYER",158,0)
 .S DA(1)=PRCAEN
"RTN","RCDPAYER",159,0)
 .S DIC="^PRCA(433,"_DA(1)_",7,",DIC(0)="L",X="- "_$P(TEXT,U,2)
"RTN","RCDPAYER",160,0)
 .D FILE^DICN
"RTN","RCDPAYER",161,0)
 Q
"RTN","RCDPE8NZ")
0^10^B102784792
"RTN","RCDPE8NZ",1,0)
RCDPE8NZ ;ALB/TMK/KML/hrubovcak - Unapplied EFT Deposits report ;Jun 06, 2014@19:11:19
"RTN","RCDPE8NZ",2,0)
 ;;4.5;Accounts Receivable;**173,212,208,269,276,283,293,298**;Mar 20, 1995;Build 121
"RTN","RCDPE8NZ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPE8NZ",4,0)
 ;
"RTN","RCDPE8NZ",5,0)
EN ; entry point for Unapplied EFT Deposits Report [RCDPE UNAPPLIED EFT DEP REPORT]
"RTN","RCDPE8NZ",6,0)
 ; ^RCY(344.3,0) = EDI LOCKBOX DEPOSIT^344.3I^
"RTN","RCDPE8NZ",7,0)
 ;
"RTN","RCDPE8NZ",8,0)
 N %ZIS,DIR,RCDISPTY,RCDTRNG,RCENDT,RCHDR,RCLNCNT,RCLSTMGR,RCPGNUM,RCRPLST,RCSTDT,RCTMPND,X,Y
"RTN","RCDPE8NZ",9,0)
 ; RCDISPTY - display taype for Excel
"RTN","RCDPE8NZ",10,0)
 ; RCDTRNG - range of dates
"RTN","RCDPE8NZ",11,0)
 ; RCHDR - report header
"RTN","RCDPE8NZ",12,0)
 ; RCLNCNT - line counter for ^TMP storage
"RTN","RCDPE8NZ",13,0)
 ; RCLSTMGR - ListMan flag
"RTN","RCDPE8NZ",14,0)
 ; RCPGNUM - page number
"RTN","RCDPE8NZ",15,0)
 ; RCRPLST - node for report list in ^TMP
"RTN","RCDPE8NZ",16,0)
 ; RCTMPND - storage node (or null) for SL^RCPEARL
"RTN","RCDPE8NZ",17,0)
 ;
"RTN","RCDPE8NZ",18,0)
 S RCRPLST=$T(+0)_"_EFT"  ; storage for list of entries
"RTN","RCDPE8NZ",19,0)
 S RCLNCNT=0,RCLSTMGR="",RCTMPND=""  ; initial values for ListMan
"RTN","RCDPE8NZ",20,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) RPTQ
"RTN","RCDPE8NZ",21,0)
 S RCSTDT=$P(RCDTRNG,U,2),RCENDT=$P(RCDTRNG,U,3)
"RTN","RCDPE8NZ",22,0)
 ; ask if export to excel
"RTN","RCDPE8NZ",23,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 RPTQ
"RTN","RCDPE8NZ",24,0)
 ; for Excel, set ListMan flag to prevent question
"RTN","RCDPE8NZ",25,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPE8NZ",26,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 RPTQ
"RTN","RCDPE8NZ",27,0)
 I RCLSTMGR D  G RPTQ  ; send output to ListMan
"RTN","RCDPE8NZ",28,0)
 .S RCTMPND=$T(+0)_"^UNAPPLIED EFT" K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPE8NZ",29,0)
 .D MKRPRT
"RTN","RCDPE8NZ",30,0)
 .N H,L,HDR S L=0
"RTN","RCDPE8NZ",31,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPE8NZ",32,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPE8NZ",33,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPE8NZ",34,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPE8NZ",35,0)
 .; invoke ListMan
"RTN","RCDPE8NZ",36,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPE8NZ",37,0)
 ;
"RTN","RCDPE8NZ",38,0)
 ; Ask device
"RTN","RCDPE8NZ",39,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPE8NZ",40,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPE8NZ",41,0)
 .N ZTRTN,ZTSAVE,ZTDESC,POP,ZTSK
"RTN","RCDPE8NZ",42,0)
 .S ZTRTN="MKRPRT^RCDPE8NZ",ZTDESC="AR - List of unlinked EFT deposit payments"
"RTN","RCDPE8NZ",43,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPE8NZ",44,0)
 .D ^%ZTLOAD
"RTN","RCDPE8NZ",45,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPE8NZ",46,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPE8NZ",47,0)
 ;
"RTN","RCDPE8NZ",48,0)
 U IO
"RTN","RCDPE8NZ",49,0)
 D MKRPRT
"RTN","RCDPE8NZ",50,0)
 Q
"RTN","RCDPE8NZ",51,0)
 ;
"RTN","RCDPE8NZ",52,0)
MKRPRT ; Entry point for queued job
"RTN","RCDPE8NZ",53,0)
 N RCTSKCNT,RCARDEP,RCCR,RCDA,RCDATA,RCDT,RCEFT,RCEFTIEN,RCREC,RCSTAT,RCSTOP,RCSUM,RCTOT,RCTR,RCUNAP,RECEXT,Y,Z,ZTSTOP
"RTN","RCDPE8NZ",54,0)
 ;
"RTN","RCDPE8NZ",55,0)
 ;  get list of unlinked EFT deposit data
"RTN","RCDPE8NZ",56,0)
 K ^TMP(RCRPLST,$J) ; subscripts: dep date,EFT ien,EFT det ien
"RTN","RCDPE8NZ",57,0)
 ;  Data is FMS doc indicator^FMS doc #^FMS Doc Status
"RTN","RCDPE8NZ",58,0)
 ;    FMS doc indicator = -1:no receipt  -2:no FMS doc  1:FMS doc exists
"RTN","RCDPE8NZ",59,0)
 ;
"RTN","RCDPE8NZ",60,0)
 S (RCTSKCNT,RCSTOP,RCSUM,RCUNAP)=0
"RTN","RCDPE8NZ",61,0)
 S RCARDEP="" F  S RCARDEP=$O(^RCY(344.3,"ARDEP",RCARDEP)) Q:RCARDEP=""!RCSTOP  S RCDA=0 F  S RCDA=$O(^RCY(344.3,"ARDEP",RCARDEP,RCDA)) Q:'RCDA  D  Q:RCSTOP
"RTN","RCDPE8NZ",62,0)
 . S RCDATA=$G(^RCY(344.3,RCDA,0)),RCDT=$P(RCDATA,U,7),RCTOT=0
"RTN","RCDPE8NZ",63,0)
 . Q:RCDT<RCSTDT  ; Before start date
"RTN","RCDPE8NZ",64,0)
 . Q:RCDT>(RCENDT+.999999)  ; After the end date
"RTN","RCDPE8NZ",65,0)
 . Q:'$P(RCDATA,"^",8)  ; no payment amt
"RTN","RCDPE8NZ",66,0)
 . S RCEFT=0 F  S RCEFT=$O(^RCY(344.31,"B",RCDA,RCEFT)) Q:'RCEFT!RCSTOP  S RCDATA(0)=$G(^RCY(344.31,RCEFT,0)) D  Q:RCSTOP
"RTN","RCDPE8NZ",67,0)
 . . S RCTSKCNT=RCTSKCNT+1
"RTN","RCDPE8NZ",68,0)
 . . I '(RCTSKCNT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q
"RTN","RCDPE8NZ",69,0)
 . . Q:$P($G(^RCY(344.31,RCEFT,3)),U)        ; EFT has been removed   PRCA*4.5*293
"RTN","RCDPE8NZ",70,0)
 . . S RCREC=$$GETREC(RCEFT,RCDATA(0),.RECEXT)
"RTN","RCDPE8NZ",71,0)
 . . Q:RCREC="PURGED"  ; need to prevent processed EFTs that had receipts purged from being generated on the report
"RTN","RCDPE8NZ",72,0)
 . . ;; PRCA276 - need to add EFT entries without a receipt to the total number of unapplied deposits
"RTN","RCDPE8NZ",73,0)
 . . I 'RCREC S RCUNAP=RCUNAP+1,^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)=-1,RCTOT=RCTOT+$P(RCDATA(0),U,7) Q  ; No receipt therefore no FMS document
"RTN","RCDPE8NZ",74,0)
 . . S RCSTAT=$$FMSSTAT^RCDPUREC(RCREC)
"RTN","RCDPE8NZ",75,0)
 . . I $E($P(RCSTAT,U),1,2)="TR",$P(RCSTAT,U,2)["ACCEPTED" Q
"RTN","RCDPE8NZ",76,0)
 . . S RCUNAP=RCUNAP+1,RCTOT=RCTOT+$P(RCDATA(0),U,7)  ; total unapplied deposits and total dollar amount of unapplied deposits
"RTN","RCDPE8NZ",77,0)
 . . I $P(RCSTAT,U,2)="NOT ENTERED" S ^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)="-2^^"_$P(RCSTAT,U) Q  ; No FMS doc
"RTN","RCDPE8NZ",78,0)
 . . S ^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)="1^"_$P(RCSTAT,U,1,2)_"^"_RECEXT
"RTN","RCDPE8NZ",79,0)
 . S:RCTOT ^TMP(RCRPLST,$J,RCDT,RCDA)=RCTOT,RCSUM=RCSUM+RCTOT
"RTN","RCDPE8NZ",80,0)
 ;
"RTN","RCDPE8NZ",81,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPE8NZ",82,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPE8NZ",83,0)
 ;
"RTN","RCDPE8NZ",84,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPE8NZ",85,0)
 ;
"RTN","RCDPE8NZ",86,0)
 D RPT
"RTN","RCDPE8NZ",87,0)
 Q
"RTN","RCDPE8NZ",88,0)
 ;
"RTN","RCDPE8NZ",89,0)
RPT ;  display/print the report using data populated in temporary global array
"RTN","RCDPE8NZ",90,0)
 ;
"RTN","RCDPE8NZ",91,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPE8NZ",92,0)
 ;
"RTN","RCDPE8NZ",93,0)
 S RCDT=0
"RTN","RCDPE8NZ",94,0)
 F  S RCDT=$O(^TMP(RCRPLST,$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",95,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",96,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPE8NZ",97,0)
 .S Y="DEPOSIT DATE: "_$$FMTE^XLFDT(RCDT,1),Y=$J("",80-$L(Y)\2)_Y D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",98,0)
 .S RCARDEP=0 F  S RCARDEP=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP)) Q:'RCARDEP  D
"RTN","RCDPE8NZ",99,0)
 ..D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPE8NZ",100,0)
 ..S RCTSKCNT=RCTSKCNT+1 I 'RCLSTMGR,(RCTSKCNT#100),$D(ZTQUEUED),$$S^%ZTLOAD D  Q  ; stop task
"RTN","RCDPE8NZ",101,0)
 ...S (RCSTOP,ZTSTOP)=1 D SL^RCDPEARL("TASK STOPPED BY USER!!",.RCLNCNT,RCTMPND) K ZTREQ
"RTN","RCDPE8NZ",102,0)
 ..;
"RTN","RCDPE8NZ",103,0)
 ..S RCDATA(0)=$G(^RCY(344.3,RCARDEP,0))
"RTN","RCDPE8NZ",104,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",105,0)
 ..; PRCA*4.5*283 - Change the spaces for DEP # from 10 to 13 to allow 9 digit DEP #
"RTN","RCDPE8NZ",106,0)
 ..S Y="    "_$E($P(RCDATA(0),U,6)_$S('$$HACEFT^RCDPEU(RCARDEP):"",1:"-HAC")_$J("",13),1,13)_"  "_$E($$FMTE^XLFDT($P(RCDATA(0),U,7),2)_$J("",16),1,16)
"RTN","RCDPE8NZ",107,0)
 ..S Y=Y_"  "_$E($J(+$P(RCDATA(0),U,8),"",2)_$J("",20),1,20)_"  "_$J(+$G(^TMP(RCRPLST,$J,RCDT,RCARDEP)),"",2)
"RTN","RCDPE8NZ",108,0)
 ..D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",109,0)
 ..S RCEFTIEN=0 F  S RCEFTIEN=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP,RCEFTIEN)) Q:'RCEFTIEN  S RCDATA=$G(^(RCEFTIEN)),RCEFT("DEP")=$G(^RCY(344.31,RCEFTIEN,0)) D
"RTN","RCDPE8NZ",110,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",111,0)
 ...N RCPAY S RCPAY=$P(RCEFT("DEP"),U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPE8NZ",112,0)
 ...S Y="     "_RCPAY_"/"_$P(RCEFT("DEP"),U,3)  D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",113,0)
 ...S Y="      "_$E($P(RCEFT("DEP"),U,4)_$J("",50),1,50)_" "_$E($J(+$P(RCEFT("DEP"),U,7),"",2)_$J("",12),1,12)_" "_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")
"RTN","RCDPE8NZ",114,0)
 ... D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",115,0)
 ...S Z=$P(RCEFT("DEP"),U,8)
"RTN","RCDPE8NZ",116,0)
 ...S Y="        "_$E($S('Z:"UNMATCHED",Z=2:"PAPER EOB",1:"MATCHED TO ERA #: "_$P(RCEFT("DEP"),U,10)_$S(Z=-1:" (TOTALS MISMATCH)",1:""))_$J("",40),1,40)_"  "
"RTN","RCDPE8NZ",117,0)
 ...S Y=Y_$S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$E($P(RCDATA,U,2)_" - "_$P(RCDATA,U,3),1,30))
"RTN","RCDPE8NZ",118,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",119,0)
 ;
"RTN","RCDPE8NZ",120,0)
 I '$D(^TMP(RCRPLST,$J)) D SL^RCDPEARL("*** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",121,0)
 ;
"RTN","RCDPE8NZ",122,0)
 I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",123,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPE8NZ",124,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","RCDPE8NZ",125,0)
 G:RCSTOP RPTQ
"RTN","RCDPE8NZ",126,0)
 ;
"RTN","RCDPE8NZ",127,0)
 I 'RCLSTMGR,'RCSTOP,$E(IOST,1,2)="C-" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPE8NZ",128,0)
 ;
"RTN","RCDPE8NZ",129,0)
RPTQ ;
"RTN","RCDPE8NZ",130,0)
 K ^TMP(RCRPLST,$J)
"RTN","RCDPE8NZ",131,0)
 Q
"RTN","RCDPE8NZ",132,0)
 ;
"RTN","RCDPE8NZ",133,0)
GETREC(EFTDA,EFTDET,RECEXT) ; function,  prca276
"RTN","RCDPE8NZ",134,0)
 ; input - EFTDA - IEN OF 344.31
"RTN","RCDPE8NZ",135,0)
 ; input - EFTDET - data stored at the 0 subscript of the THIRD PARTY EFT DETAIL file (344.31)
"RTN","RCDPE8NZ",136,0)
 ; input - RECEXT passed by reference
"RTN","RCDPE8NZ",137,0)
 ; output - RECEXT populated with the external receipt value that gets generated on the report
"RTN","RCDPE8NZ",138,0)
 ; output - RECEIPT - returns internal value of the receipt that either comes from the EFT file (344.31) or the ERA file (344.4) 
"RTN","RCDPE8NZ",139,0)
 N RECEIPT
"RTN","RCDPE8NZ",140,0)
 S RECEXT=0
"RTN","RCDPE8NZ",141,0)
 S RECEIPT=+$P($G(^RCY(344.4,+$P(EFTDET,U,10),0)),U,8)  ; get receipt off the ERA record
"RTN","RCDPE8NZ",142,0)
 I 'RECEIPT,$P(EFTDET,U,8)=2 S RECEIPT=+$O(^RCY(344,"AEFT",EFTDA,0))  ; EFT processed against paper EOB
"RTN","RCDPE8NZ",143,0)
 I 'RECEIPT S RECEIPT=$P(EFTDET,U,9) ; receipt not posted in payment file so get from EFT detail (unprocessed EFT)
"RTN","RCDPE8NZ",144,0)
 I +RECEIPT,'$D(^RCY(344,RECEIPT)) Q "PURGED"  ; handle purged receipts but broken pointer exists in 344.31; need to handle as a processed EFT 
"RTN","RCDPE8NZ",145,0)
 I +RECEIPT S RECEXT=$P(^RCY(344,RECEIPT,0),U)
"RTN","RCDPE8NZ",146,0)
 Q +RECEIPT
"RTN","RCDPE8NZ",147,0)
 ;
"RTN","RCDPE8NZ",148,0)
 ;
"RTN","RCDPE8NZ",149,0)
HDRBLD ; create the report header
"RTN","RCDPE8NZ",150,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPE8NZ",151,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPE8NZ",152,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPE8NZ",153,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPE8NZ",154,0)
 ;   RCPGNUM - page counter
"RTN","RCDPE8NZ",155,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPE8NZ",156,0)
 ; INPUT: 
"RTN","RCDPE8NZ",157,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPE8NZ",158,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPE8NZ",159,0)
 ;   VAUTD
"RTN","RCDPE8NZ",160,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPE8NZ",161,0)
 ;
"RTN","RCDPE8NZ",162,0)
 ;
"RTN","RCDPE8NZ",163,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPE8NZ",164,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPE8NZ",165,0)
 .S RCHDR(1)="DEPOSIT #^DEPOSIT DATE^TOT AMT DEPOSIT^TOT AMT UNPOSTED^PAYER ID^TRACE #^PAYMENT AMT^RECEIPT #^ERA MATCHED^FMS DOC #/STATUS"
"RTN","RCDPE8NZ",166,0)
 ;
"RTN","RCDPE8NZ",167,0)
 N DIV,HCNT,Y
"RTN","RCDPE8NZ",168,0)
 S HCNT=0  ; header counter
"RTN","RCDPE8NZ",169,0)
 ;
"RTN","RCDPE8NZ",170,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPE8NZ",171,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPE8NZ",172,0)
 S Y="Run Date: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPE8NZ",173,0)
 ;
"RTN","RCDPE8NZ",174,0)
 S Y="Date Range: "_$$FMTE^XLFDT(RCSTDT,2)_" - "_$$FMTE^XLFDT(RCENDT,2)_" (Deposit Date)",Y=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",175,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",176,0)
 S Y="TOTAL NUMBER OF UNAPPLIED DEPOSITS: "_RCUNAP,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",177,0)
 S Y="TOTAL AMOUNT OF UNAPPLIED DEPOSITS: $"_$FN(RCSUM,",",2),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",178,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPE8NZ",179,0)
 ;
"RTN","RCDPE8NZ",180,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="    DEPOSIT #      DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",181,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     PAYER/ID"
"RTN","RCDPE8NZ",182,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",6)_"TRACE #"_$J("",44)_"PAYMENT AMT  RECEIPT #"
"RTN","RCDPE8NZ",183,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",8)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",184,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPE8NZ",185,0)
 ;
"RTN","RCDPE8NZ",186,0)
 S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPE8NZ",187,0)
 Q
"RTN","RCDPE8NZ",188,0)
 ;
"RTN","RCDPE8NZ",189,0)
HDRLM ; create the report header
"RTN","RCDPE8NZ",190,0)
 ; returns RCHDR
"RTN","RCDPE8NZ",191,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPE8NZ",192,0)
 ; INPUT: 
"RTN","RCDPE8NZ",193,0)
 ;   RCSTDT - Date Range
"RTN","RCDPE8NZ",194,0)
 K RCHDR
"RTN","RCDPE8NZ",195,0)
 ;
"RTN","RCDPE8NZ",196,0)
 N DIV,HCNT,Y
"RTN","RCDPE8NZ",197,0)
 S HCNT=0  ; header counter
"RTN","RCDPE8NZ",198,0)
 S Y="Date Range: "_$$FMTE^XLFDT(RCSTDT,2)_" - "_$$FMTE^XLFDT(RCENDT,2)_" (Deposit Date)",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",199,0)
 S Y="TOTAL NUMBER OF UNAPPLIED DEPOSITS: "_RCUNAP,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",200,0)
 S Y="TOTAL AMOUNT OF UNAPPLIED DEPOSITS: $"_$FN(RCSUM,",",2),HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",201,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="    DEPOSIT #      DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",202,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     PAYER/ID"
"RTN","RCDPE8NZ",203,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",6)_"TRACE #"_$J("",44)_"PAYMENT AMT  RECEIPT #"
"RTN","RCDPE8NZ",204,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",8)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",205,0)
 ;
"RTN","RCDPE8NZ",206,0)
 S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPE8NZ",207,0)
 Q
"RTN","RCDPE8NZ",208,0)
 ;
"RTN","RCDPE8NZ",209,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPE8NZ",210,0)
HDRNM() Q "Unapplied EFT Deposits Report"
"RTN","RCDPE8NZ",211,0)
 ;
"RTN","RCDPE8NZ",212,0)
EXCEL ; Print report formatted for export to Excel
"RTN","RCDPE8NZ",213,0)
 N STR1
"RTN","RCDPE8NZ",214,0)
 W !,$G(RCHDR(1)),!
"RTN","RCDPE8NZ",215,0)
 S RCDT=0 F  S RCDT=$O(^TMP(RCRPLST,$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",216,0)
 .S RCARDEP=0 F  S RCARDEP=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP)) Q:'RCARDEP  D
"RTN","RCDPE8NZ",217,0)
 ..S RCDATA(0)=$G(^RCY(344.3,RCARDEP,0))
"RTN","RCDPE8NZ",218,0)
 ..S STR1=$P(RCDATA(0),U,6)_$S('$$HACEFT^RCDPEU(RCARDEP):"",1:"-HAC")_U_$$FMTE^XLFDT($P(RCDATA(0),U,7))_U_$P(RCDATA(0),U,8)_U
"RTN","RCDPE8NZ",219,0)
 ..S STR1=STR1_+$G(^TMP(RCRPLST,$J,RCDT,RCARDEP))_U
"RTN","RCDPE8NZ",220,0)
 ..S RCEFTIEN=0 F  S RCEFTIEN=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP,RCEFTIEN)) Q:'RCEFTIEN  S RCDATA=$G(^(RCEFTIEN)),RCEFT("DEP")=$G(^RCY(344.31,RCEFTIEN,0)) D
"RTN","RCDPE8NZ",221,0)
 ...W STR1 S:$P(RCEFT("DEP"),U,2)="" $P(RCEFT("DEP"),U,2)="NO PAYER NAME RECEIVED" ;PRCA*4.5*298
"RTN","RCDPE8NZ",222,0)
 ...W $P(RCEFT("DEP"),U,2)_"/"_$P(RCEFT("DEP"),U,3)_U_$P(RCEFT("DEP"),U,4)_U
"RTN","RCDPE8NZ",223,0)
 ...W +$P(RCEFT("DEP"),U,7)_U_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")_U
"RTN","RCDPE8NZ",224,0)
 ...W $P(RCEFT("DEP"),U,10)_U
"RTN","RCDPE8NZ",225,0)
 ...W $S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$P(RCDATA,U,2)_" - "_$P(RCDATA,U,3))
"RTN","RCDPE8NZ",226,0)
 ...W !
"RTN","RCDPE8NZ",227,0)
 Q
"RTN","RCDPE8NZ",228,0)
 ;
"RTN","RCDPEAA1")
0^79^B60672744
"RTN","RCDPEAA1",1,0)
RCDPEAA1 ;ALB/KML - AUTO POST AWAITING RESOLUTION (APAR) - LIST OF UNPOSTED EEOBS ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA1",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA1",4,0)
 Q
"RTN","RCDPEAA1",5,0)
 ;
"RTN","RCDPEAA1",6,0)
EN ; Main entry point
"RTN","RCDPEAA1",7,0)
 N RCQUIT,RCPROG
"RTN","RCDPEAA1",8,0)
 S RCQUIT=0
"RTN","RCDPEAA1",9,0)
 ; Calling Change View API in Menu Option Mode
"RTN","RCDPEAA1",10,0)
 D PARAMS("MO") I RCQUIT G ENQ
"RTN","RCDPEAA1",11,0)
 D EN^VALM("RCDPE APAR EEOB LIST")
"RTN","RCDPEAA1",12,0)
 ;
"RTN","RCDPEAA1",13,0)
ENQ Q
"RTN","RCDPEAA1",14,0)
 ;
"RTN","RCDPEAA1",15,0)
INIT ; Entry point for List template to build the display of EEOBs on APAR
"RTN","RCDPEAA1",16,0)
 ;
"RTN","RCDPEAA1",17,0)
 ; Parameters for selecting EEOBs to be included in the list are
"RTN","RCDPEAA1",18,0)
 ; contained in the global ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,parameter name)
"RTN","RCDPEAA1",19,0)
 ;
"RTN","RCDPEAA1",20,0)
 N FDTTM,RCDA
"RTN","RCDPEAA1",21,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","RCDPEAA1",22,0)
 K ^TMP($J,"RCDPE_APAR_EEOB_LIST")
"RTN","RCDPEAA1",23,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",24,0)
 ; get ERAs that are in a 'partial' auto-post status
"RTN","RCDPEAA1",25,0)
 S RCDA=0 F  S RCDA=$O(^RCY(344.4,"E",1,RCDA)) Q:'RCDA  D
"RTN","RCDPEAA1",26,0)
 . I $$FILTER(RCDA)  S RC0=$G(^RCY(344.4,RCDA,0)) S ^TMP($J,"RCDPE_APAR_EEOB_LIST",$$UP^RCDPEARL(+$P(RC0,U,6)),RCDA)=""
"RTN","RCDPEAA1",27,0)
 ; Output the list
"RTN","RCDPEAA1",28,0)
 I $D(^TMP($J,"RCDPE_APAR_EEOB_LIST")) D BLD
"RTN","RCDPEAA1",29,0)
 ; If no EEOBs found display the message below in the list area
"RTN","RCDPEAA1",30,0)
 I '$O(^TMP("RCDPE-APAR_EEOB_WL",$J,0)) D
"RTN","RCDPEAA1",31,0)
 . S ^TMP("RCDPE-APAR_EEOB_WL",$J,1,0)="THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=1
"RTN","RCDPEAA1",32,0)
 Q
"RTN","RCDPEAA1",33,0)
 ;
"RTN","RCDPEAA1",34,0)
 ;
"RTN","RCDPEAA1",35,0)
BLD ; Build EEOB list to be displayed on APAR screen
"RTN","RCDPEAA1",36,0)
 N PN,RCDA,RCDA1,RCSEQ,RCT,WL490,WL4910,ERA40,ERA44,ERA410,ERA414,ERA415,RCARRY,TOTPOSTD,BALANCE
"RTN","RCDPEAA1",37,0)
 S (RCT,TOTPOSTD,BALANCE,VALMCNT,RCSEQ)=0,PN="",RCPROG="RCDPEAA1"
"RTN","RCDPEAA1",38,0)
 F  S PN=$O(^TMP($J,"RCDPE_APAR_EEOB_LIST",PN),-1) Q:PN=""  S RCDA=0 F  S RCDA=$O(^TMP($J,"RCDPE_APAR_EEOB_LIST",PN,RCDA)) Q:'RCDA  D 
"RTN","RCDPEAA1",39,0)
 . ;retrieve unposted EEOB data
"RTN","RCDPEAA1",40,0)
 . F  S RCSEQ=$O(^RCY(344.49,RCDA,1,"B",RCSEQ)) Q:'RCSEQ  I RCSEQ#1=0 S RCDA1=+$O(^RCY(344.49,RCDA,1,"B",RCSEQ,0)) I RCDA1 D
"RTN","RCDPEAA1",41,0)
 . . S WL490=$G(^RCY(344.49,RCDA,0))  ; data from node 0 of 344.49
"RTN","RCDPEAA1",42,0)
 . . S WL4910=$G(^RCY(344.49,RCDA,1,RCDA1,0))  ;data from 0 node of 344.491
"RTN","RCDPEAA1",43,0)
 . . I +$P(WL4910,U,3)=0 Q  ; ignore zero value lines
"RTN","RCDPEAA1",44,0)
 . . S ERA40=$G(^RCY(344.4,RCDA,0))  ; summary data of ERA
"RTN","RCDPEAA1",45,0)
 . . S ERA44=$G(^RCY(344.4,RCDA,4))  ; ERA auto-post date and status
"RTN","RCDPEAA1",46,0)
 . . S ERA410=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),0)) ; EEOB level data
"RTN","RCDPEAA1",47,0)
 . . S ERA414=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),4))  ; EEOB level data (e.g., receipt# and ECME)
"RTN","RCDPEAA1",48,0)
 . . S ERA415=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),5))  ; EEOB level  - auto-post related data
"RTN","RCDPEAA1",49,0)
 . . S TOTPOSTD=$S($P(ERA414,U,3)]"":+$P(WL4910,U,3)+TOTPOSTD,1:TOTPOSTD) ; if EEOB line item has a receipt,then add 
"RTN","RCDPEAA1",50,0)
 . . ;                                                                     AMOUNT TO POST ON RECEIPT (344.491,.03) to total amount posted (TOTPOSTD)
"RTN","RCDPEAA1",51,0)
 . . S BALANCE=$S($P(ERA414,U,3)']"":$P(WL490,U,3)-TOTPOSTD,1:BALANCE)  ; if EEOB line item does not have a receipt, then calculate the unposted balance
"RTN","RCDPEAA1",52,0)
 . . ;                                                              using the following calculation: TOTAL PAYMENT RECEIVED (344.49, .03) - total amount posted (TOTPOSTD)
"RTN","RCDPEAA1",53,0)
 . . I $P(ERA414,U,3)']"",'$P(ERA415,U,2) D  ; display only EEOB items that do not have a receipt and are not marked for autopost
"RTN","RCDPEAA1",54,0)
 . . . S RCT=RCT+1
"RTN","RCDPEAA1",55,0)
 . . . S RCARRY(RCT)=$P(ERA40,U)_U_+$P(WL4910,U,9)_U_$P(WL4910,U,2)_U_RCDA1 ;RCARRY=ERA#^SEQ^CLAIM#^ien of 344.491                                                                          
"RTN","RCDPEAA1",56,0)
 . I $D(RCARRY) D ERALINES(RCDA,.RCARRY,BALANCE,TOTPOSTD,$P(ERA44,U),$P(ERA40,U,3),$P(ERA40,U,6)) K RCARRY
"RTN","RCDPEAA1",57,0)
 . S (BALANCE,TOTPOSTD)=0
"RTN","RCDPEAA1",58,0)
 Q
"RTN","RCDPEAA1",59,0)
 ;
"RTN","RCDPEAA1",60,0)
ERALINES(RCDA,RCARRY,BALANCE,TOTPOSTD,POSTDT,PAYID,PAYNM) ;  set EEOB line into List Manager arrays
"RTN","RCDPEAA1",61,0)
 ;
"RTN","RCDPEAA1",62,0)
 ;     input - RCDA     = top file ien for files 344.4 and 344.49
"RTN","RCDPEAA1",63,0)
 ;             RCARRY   = array that holds the EEOB data to be displayed
"RTN","RCDPEAA1",64,0)
 ;             BALANCE  = Amount that is left to be posted                                                  
"RTN","RCDPEAA1",65,0)
 ;             TOTPOSTD = Total amount posted thus far against the ERA
"RTN","RCDPEAA1",66,0)
 ;             POSTDT   = latest auto-posted date
"RTN","RCDPEAA1",67,0)
 ;             PAYID    = payer id
"RTN","RCDPEAA1",68,0)
 ;             PAYNM    = payer name
"RTN","RCDPEAA1",69,0)
 N RCT,X
"RTN","RCDPEAA1",70,0)
 S RCT=0
"RTN","RCDPEAA1",71,0)
 F  S RCT=$O(RCARRY(RCT)) Q:'RCT  D 
"RTN","RCDPEAA1",72,0)
 . ; line 1 of displayed EEOB item: selectable line #, ERA reference.EEOB seq#, Claim #
"RTN","RCDPEAA1",73,0)
 . S X=$J(RCT,3)_"   "_$J($P(RCARRY(RCT),U)_"."_$P(RCARRY(RCT),U,2),14)_"   "_$J($P(RCARRY(RCT),U,3),10)
"RTN","RCDPEAA1",74,0)
 . ; cont. line 1 of displayed EEOB item: X_Total posted amt, posted date, Unposted balance
"RTN","RCDPEAA1",75,0)
 . S X=X_"   "_$J(TOTPOSTD,12,2)_"   "_$J($$FMTE^XLFDT(POSTDT,"2D"),8)_"   "_$J(BALANCE,12,2)
"RTN","RCDPEAA1",76,0)
 . D SET(X,RCT,RCDA,$P(RCARRY(RCT),U,4),BALANCE,TOTPOSTD)
"RTN","RCDPEAA1",77,0)
 . ; line 2 of displayed EEOB item: payer name/payer id
"RTN","RCDPEAA1",78,0)
 . S X="      "_PAYNM_"/"_PAYID
"RTN","RCDPEAA1",79,0)
 . D SET(X,RCT,RCDA,$P(RCARRY(RCT),U,4),BALANCE,TOTPOSTD)
"RTN","RCDPEAA1",80,0)
 Q
"RTN","RCDPEAA1",81,0)
 ;
"RTN","RCDPEAA1",82,0)
SET(X,RCSEQ,RCDA,RCDA1,BALANCE,TOTPOSTD) ; -- set ListManager arrays
"RTN","RCDPEAA1",83,0)
 ; X = the data to set into the global
"RTN","RCDPEAA1",84,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA1",85,0)
 ; RCDA = the ien of the entry in file 344.49
"RTN","RCDPEAA1",86,0)
 ; RCDA1 = ien of the entry in file 344.491
"RTN","RCDPEAA1",87,0)
 ; BALANCE = Amount that is left to be posted
"RTN","RCDPEAA1",88,0)
 ; TOTPOSTD = Total amount posted thus far against the ERA
"RTN","RCDPEAA1",89,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-APAR_EEOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA1",90,0)
 S ^TMP("RCDPE-APAR_EEOB_WL",$J,"IDX",VALMCNT,RCSEQ)=RCDA
"RTN","RCDPEAA1",91,0)
 S ^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)=VALMCNT_U_RCDA_U_RCDA1_U_$G(BALANCE)_U_$G(TOTPOSTD)
"RTN","RCDPEAA1",92,0)
 Q
"RTN","RCDPEAA1",93,0)
 ;
"RTN","RCDPEAA1",94,0)
HDR ;
"RTN","RCDPEAA1",95,0)
 N X,LINE
"RTN","RCDPEAA1",96,0)
 S X=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",97,0)
 S VALMHDR(1)="Current View:"_$J("",4)_$S($P(X,U)="A"!(X=""):"ALL PAYERS",1:"PAYERS: "_$P(X,U,2)_"-"_$P(X,U,3))
"RTN","RCDPEAA1",98,0)
 S VALMHDR(2)=""
"RTN","RCDPEAA1",99,0)
 S LINE="      "_$$CJ^XLFSTR("ERA#.Seq",14)_"   "_$$CJ^XLFSTR("Claim#",10)_"    "_$$CJ^XLFSTR("Posted Amt",12)
"RTN","RCDPEAA1",100,0)
 S LINE=LINE_"   "_$$CJ^XLFSTR("Post Date",8)_"   "_$$CJ^XLFSTR("Un-posted Bal",12)
"RTN","RCDPEAA1",101,0)
 S VALMHDR(3)=LINE
"RTN","RCDPEAA1",102,0)
 Q
"RTN","RCDPEAA1",103,0)
 ;
"RTN","RCDPEAA1",104,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA1",105,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J),^TMP("RCDPE_APAR_EEOB_PARAMS",$J),^TMP($J,"RCDPE_APAR_EEOB_LIST")
"RTN","RCDPEAA1",106,0)
 Q
"RTN","RCDPEAA1",107,0)
 ;
"RTN","RCDPEAA1",108,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for APAR EEOB Worklist
"RTN","RCDPEAA1",109,0)
 ; Input: SOURCE: "MO" - Menu Option / "CV" - Change View
"RTN","RCDPEAA1",110,0)
 ;Output: 
"RTN","RCDPEAA1",111,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p1: All Payers/Range of Payers ("A": All/"R":Range of Payers)
"RTN","RCDPEAA1",112,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p2: START WITH PAYER (e.g.,'AET') (Range Limited Only)
"RTN","RCDPEAA1",113,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p3: GO TO PAYER (e.g.,'AETZ') (Range Limited Only)
"RTN","RCDPEAA1",114,0)
 ;        Or RCQUIT=1
"RTN","RCDPEAA1",115,0)
 N DIR,X,Y,DUOUT,DTOUT,RCPAYR,RCPAYRDF,RCXPAR,RCDRLIM,RCERROR,RCAUTOPDF
"RTN","RCDPEAA1",116,0)
 N RCTYPEDF
"RTN","RCDPEAA1",117,0)
 ;
"RTN","RCDPEAA1",118,0)
 ; Retrieving user's saved parameters (If found, Quit)
"RTN","RCDPEAA1",119,0)
 I SOURCE="MO" D  I $G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))'="" G PARAMSQ
"RTN","RCDPEAA1",120,0)
 . K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",121,0)
 . D GETLST^XPAR(.RCXPAR,"USR","RCDPE APAR","I")
"RTN","RCDPEAA1",122,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=$S($G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))'="":$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^"),1:"A")
"RTN","RCDPEAA1",123,0)
 ;
"RTN","RCDPEAA1",124,0)
 ;
"RTN","RCDPEAA1",125,0)
PAYR ; Payer Selection
"RTN","RCDPEAA1",126,0)
 S RCPAYRDF=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")
"RTN","RCDPEAA1",127,0)
 K DIR S DIR(0)="SA^A:ALL;R:RANGE",DIR("A")="(A)LL PAYERS, (R)ANGE OF PAYER NAMES: "
"RTN","RCDPEAA1",128,0)
 S DIR("B")="ALL" S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^")
"RTN","RCDPEAA1",129,0)
 W ! D ^DIR
"RTN","RCDPEAA1",130,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEAA1",131,0)
 S RCPAYR=Y I RCPAYR="A" S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=Y
"RTN","RCDPEAA1",132,0)
 I RCPAYR="R" D  I RCQUIT K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") G PAYR
"RTN","RCDPEAA1",133,0)
 . W !,"NAMES YOU SELECT HERE WILL BE THE PAYER NAMES FROM THE ERA, NOT THE INS FILE"
"RTN","RCDPEAA1",134,0)
 . K DIR S DIR("?")="ENTER A NAME BETWEEN 1 AND 30 CHARACTERS IN UPPERCASE"
"RTN","RCDPEAA1",135,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="START WITH PAYER NAME: "
"RTN","RCDPEAA1",136,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)
"RTN","RCDPEAA1",137,0)
 . W ! D ^DIR
"RTN","RCDPEAA1",138,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",139,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEAA1",140,0)
 . K DIR S DIR("?")="ENTER A NAME BETWEEN 1 AND 30 CHARACTERS IN UPPERCASE"
"RTN","RCDPEAA1",141,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="GO TO PAYER NAME: ",DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEAA1",142,0)
 . S:$P(RCPAYRDF,"^",3)'="" DIR("B")=$P(RCPAYRDF,"^",3)
"RTN","RCDPEAA1",143,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEAA1",144,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",145,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEAA1",146,0)
 ;
"RTN","RCDPEAA1",147,0)
 ; Option to save as User Preferred View
"RTN","RCDPEAA1",148,0)
 K DIR W ! S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO SAVE THIS AS YOUR PREFERRED VIEW (Y/N)? "
"RTN","RCDPEAA1",149,0)
 D ^DIR
"RTN","RCDPEAA1",150,0)
 I Y=1 D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","ALL_PAYERS/RANGE_OF_PAYERS",$TR(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"),"^",";"),.RCERROR)
"RTN","RCDPEAA1",151,0)
 ;
"RTN","RCDPEAA1",152,0)
PARAMSQ ; Quit
"RTN","RCDPEAA1",153,0)
 Q
"RTN","RCDPEAA1",154,0)
 ;
"RTN","RCDPEAA1",155,0)
FILTER(RCDA) ; Returns 1 if record in entry 344.4 passes
"RTN","RCDPEAA1",156,0)
 ; the edits for the APAR worklist selection of EEOBs
"RTN","RCDPEAA1",157,0)
 ; Parameters found in ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",158,0)
 ; 
"RTN","RCDPEAA1",159,0)
 ; input - RCDA = IEN OF 344.4
"RTN","RCDPEAA1",160,0)
 ; output - returns 1 or 0
"RTN","RCDPEAA1",161,0)
 N OK,RC0,RCPAYR,RCPAYFR,RCPAYTO
"RTN","RCDPEAA1",162,0)
 S OK=1,RC0=$G(^RCY(344.4,RCDA,0))
"RTN","RCDPEAA1",163,0)
 ;
"RTN","RCDPEAA1",164,0)
 S RCPAYR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U),RCPAYFR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,2),RCPAYTO=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEAA1",165,0)
 ; Payer name
"RTN","RCDPEAA1",166,0)
 I RCPAYR'="A" D  G:'OK FQ
"RTN","RCDPEAA1",167,0)
 . N Q
"RTN","RCDPEAA1",168,0)
 . S Q=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEAA1",169,0)
 . I $S(Q=RCPAYFR:1,Q=RCPAYTO:1,Q]RCPAYFR:RCPAYTO]Q,1:0) Q
"RTN","RCDPEAA1",170,0)
 . S OK=0
"RTN","RCDPEAA1",171,0)
FQ Q OK
"RTN","RCDPEAA1",172,0)
 ;
"RTN","RCDPEAA1",173,0)
ENTEREOB ; Enter the APAR EEOB SCRATCHPAD
"RTN","RCDPEAA1",174,0)
 N X,RCDA,RCDA1,XQORM,RCIENS
"RTN","RCDPEAA1",175,0)
 S RCIENS=$$SEL()
"RTN","RCDPEAA1",176,0)
 I 'RCIENS G EOBQ
"RTN","RCDPEAA1",177,0)
 D EN^VALM("RCDPE APAR SELECTED EEOB")
"RTN","RCDPEAA1",178,0)
EOBQ ;
"RTN","RCDPEAA1",179,0)
 D INIT
"RTN","RCDPEAA1",180,0)
 S VALMBCK="R"
"RTN","RCDPEAA1",181,0)
 Q
"RTN","RCDPEAA1",182,0)
 ;
"RTN","RCDPEAA1",183,0)
SEL() ; Select an item from the APAR list of EEOBs
"RTN","RCDPEAA1",184,0)
 N RCDA,VALMY,RCITEMS
"RTN","RCDPEAA1",185,0)
 D FULL^VALM1
"RTN","RCDPEAA1",186,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEAA1",187,0)
 S (RCSEQ,RCDA,RCITEMS)=0
"RTN","RCDPEAA1",188,0)
 F  S RCSEQ=$O(VALMY(RCSEQ)) Q:'RCSEQ  S RCITEMS=$P($G(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)),U,2,3)_U_RCSEQ
"RTN","RCDPEAA1",189,0)
 Q RCITEMS
"RTN","RCDPEAA1",190,0)
 ;
"RTN","RCDPEAA1",191,0)
CV ;
"RTN","RCDPEAA1",192,0)
 ; Change View action for APAR pick list
"RTN","RCDPEAA1",193,0)
 D FULL^VALM1 D PARAMS("CV")
"RTN","RCDPEAA1",194,0)
 D HDR,INIT S VALMBCK="R",VALMBG=1
"RTN","RCDPEAA1",195,0)
 Q
"RTN","RCDPEAA2")
0^80^B95635325
"RTN","RCDPEAA2",1,0)
RCDPEAA2 ;ALB/KML - APAR Screen - SELECTED EOB ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA2",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA2",4,0)
 Q
"RTN","RCDPEAA2",5,0)
 ;
"RTN","RCDPEAA2",6,0)
INIT(RCIENS) ; Entry point for List template to build the display of the EEOB on APAR
"RTN","RCDPEAA2",7,0)
 ;  
"RTN","RCDPEAA2",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",9,0)
 ;
"RTN","RCDPEAA2",10,0)
 N FDTTM
"RTN","RCDPEAA2",11,0)
 D CLEAN^VALM10
"RTN","RCDPEAA2",12,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCS",$J)
"RTN","RCDPEAA2",13,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEAA2",14,0)
 D BLD(RCIENS)
"RTN","RCDPEAA2",15,0)
 Q
"RTN","RCDPEAA2",16,0)
 ;
"RTN","RCDPEAA2",17,0)
 ;
"RTN","RCDPEAA2",18,0)
BLD(RCIENS) ; Display selected EEOB  on APAR screen
"RTN","RCDPEAA2",19,0)
 N RCZ0,RCECME,REASON,V1,RCLI1,TLINE,RCSCR,Z,ZZ,Z0,ZZ1,RC0,RCTL,RCTS
"RTN","RCDPEAA2",20,0)
 S RCSCR=$P(RCIENS,U),Z=$P(^RCY(344.49,RCSCR,1,$P(RCIENS,U,2),0),U),RCPROG="RCDPEAA2"
"RTN","RCDPEAA2",21,0)
 I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEAA2",22,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEAA2",23,0)
 .. S ^TMP("RCS",$J,ZZ,ZZ1)=""
"RTN","RCDPEAA2",24,0)
 . S ^TMP("RCS",$J,ZZ)=""
"RTN","RCDPEAA2",25,0)
 S (RCTS,ZZ)=0
"RTN","RCDPEAA2",26,0)
 F  S ZZ=$O(^TMP("RCS",$J,ZZ)) Q:'ZZ  D
"RTN","RCDPEAA2",27,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0))
"RTN","RCDPEAA2",28,0)
 . S RCECME=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2)  ; ECME # (344.41,.24)
"RTN","RCDPEAA2",29,0)
 . S REASON=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",5)  ; AUTOPOST REJECTION REASON (344.41,5)
"RTN","RCDPEAA2",30,0)
 . S TLINE=$$TOPLINE(RCZ0)
"RTN","RCDPEAA2",31,0)
 . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",32,0)
 . ; sub-line info (e.g., "n.001")
"RTN","RCDPEAA2",33,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP("RCS",$J,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEAA2",34,0)
 . . S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEAA2",35,0)
 . . S RCT=$P(RCZZ0,U),RCTL=$L(RCT)
"RTN","RCDPEAA2",36,0)
 . . S V1=$S($P(RCZZ0,U,2)'["**ADJ":"",$P($P(RCZZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEAA2",37,0)
 . . S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),ZZ1),1:"??"),1:V1)
"RTN","RCDPEAA2",38,0)
 . . D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",39,0)
 . . I $P(RCZZ0,U,7) D CLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",40,0)
 . . ;
"RTN","RCDPEAA2",41,0)
 . . D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCT,RCT,ZZ1)
"RTN","RCDPEAA2",42,0)
 . . ; displaY pharmacy EEOB data  
"RTN","RCDPEAA2",43,0)
 . . I RCECME]"" D RXLINES(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEAA2",44,0)
 . . I $P(RCZZ0,U,10)'="" D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",45,0)
 . . I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D ADJLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",46,0)
 . . I $G(^TMP($J,"RC_REVIEW")) D REVLINES(RCSCR,RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",47,0)
 . . D SET($J("",7)_"APAR Reason: "_REASON,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",48,0)
 . . S A="",$P(A,".",79)="" D SET(A,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",49,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEAA2",50,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEAA2",51,0)
 Q
"RTN","RCDPEAA2",52,0)
 ;
"RTN","RCDPEAA2",53,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set ListManager arrays
"RTN","RCDPEAA2",54,0)
 ; X = the data to set into the global
"RTN","RCDPEAA2",55,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA2",56,0)
 ; RCSEQ1 = = the sub line #
"RTN","RCDPEAA2",57,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEAA2",58,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",59,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA2",60,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEAA2",61,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEAA2",62,0)
 Q
"RTN","RCDPEAA2",63,0)
 ;
"RTN","RCDPEAA2",64,0)
TOPLINE(RCZ0) ; Function returns the top line of the EEOB display
"RTN","RCDPEAA2",65,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEAA2",66,0)
 N A
"RTN","RCDPEAA2",67,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB: ERA Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEAA2",68,0)
 I $G(^TMP($J,"RC_REVIEW")) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEAA2",69,0)
 Q A
"RTN","RCDPEAA2",70,0)
 ;
"RTN","RCDPEAA2",71,0)
CLINES(RCZZ0,RCT,ZZ1) ;  called from BLD ; set up the claim information lines
"RTN","RCDPEAA2",72,0)
 ; 
"RTN","RCDPEAA2",73,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",74,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",75,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",76,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",77,0)
 N A,RCX,Q,QQ
"RTN","RCDPEAA2",78,0)
 S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEAA2",79,0)
 ; Find Rx copay status
"RTN","RCDPEAA2",80,0)
 S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEAA2",81,0)
 ; Find M/T status
"RTN","RCDPEAA2",82,0)
 S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEAA2",83,0)
 S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEAA2",84,0)
 S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEAA2",85,0)
 D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",86,0)
 S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEAA2",87,0)
 S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEAA2",88,0)
 S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEAA2",89,0)
 D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",90,0)
 Q
"RTN","RCDPEAA2",91,0)
 ;
"RTN","RCDPEAA2",92,0)
REVLINES(RCSCR,RCZZ0,RCT,ZZ1) ;called from BLD; set up the reviewed lines
"RTN","RCDPEAA2",93,0)
 ; 
"RTN","RCDPEAA2",94,0)
 ;    Input - RCSCR = ien of 344.49 (and 344.4)
"RTN","RCDPEAA2",95,0)
 ;            RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",96,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",97,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",98,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",99,0)
 N A,A0,B,B0
"RTN","RCDPEAA2",100,0)
 S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEAA2",101,0)
 I $P(RCZZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZZ0,U,12),0)),U),1,20)
"RTN","RCDPEAA2",102,0)
 D SET(A_")",+$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",103,0)
 S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEAA2",104,0)
 . D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",105,0)
 . S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEAA2",106,0)
 . . I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),$P(RCZZ0,U),RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEAA2",107,0)
 . . D SET($J("",15)_B0,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",108,0)
 Q
"RTN","RCDPEAA2",109,0)
 ;
"RTN","RCDPEAA2",110,0)
ADJLINES(RCZZ0,RCT,ZZ1) ; called from BLD;  set up the adjustment lines
"RTN","RCDPEAA2",111,0)
 ; 
"RTN","RCDPEAA2",112,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",113,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",114,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",115,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",116,0)
 N RCAZ,RCAZ0,Z3
"RTN","RCDPEAA2",117,0)
 S Z3=""
"RTN","RCDPEAA2",118,0)
 D SET($J("",4+RCTL)_"ADJUSTMENTS:",$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",119,0)
 S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEAA2",120,0)
 . S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEAA2",121,0)
 . I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",122,0)
 . I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",123,0)
 . I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEAA2",124,0)
 . . S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEAA2",125,0)
 . I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",126,0)
 . I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",127,0)
 . D SET(Z3,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",128,0)
 . I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",129,0)
 Q
"RTN","RCDPEAA2",130,0)
 ;
"RTN","RCDPEAA2",131,0)
 ;
"RTN","RCDPEAA2",132,0)
RXLINES(RCZZ0,RCECME,RCT,ZZ1) ; called from BLD ; set up the Pharmacy lines
"RTN","RCDPEAA2",133,0)
 ;
"RTN","RCDPEAA2",134,0)
 ;  Input -   RCZZ0   = zero node data at 344.491
"RTN","RCDPEAA2",135,0)
 ;            RCECME  = ECME # for Pharmacy claims
"RTN","RCDPEAA2",136,0)
 ;            RCT     = sub line #
"RTN","RCDPEAA2",137,0)
 ;            ZZ1     = reference to the to the subline in
"RTN","RCDPEAA2",138,0)
 ;                      file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",139,0)
 N RXARRAY
"RTN","RCDPEAA2",140,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEAA2",141,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",142,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEAA2",143,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",144,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",145,0)
 Q
"RTN","RCDPEAA2",146,0)
 ;
"RTN","RCDPEAA2",147,0)
HDR ; Creates header lines for the selected EEOB display
"RTN","RCDPEAA2",148,0)
 N RC0,RC4,RC5,Z,RCDA,RCSEQ
"RTN","RCDPEAA2",149,0)
 I '$G(RCIENS) S VALMQUIT=1 Q
"RTN","RCDPEAA2",150,0)
 S RCDA=$P(RCIENS,U),RCSEQ=$P(RCIENS,U,3)
"RTN","RCDPEAA2",151,0)
 S RC0=$G(^RCY(344.4,RCDA,0)),RC4=$G(^RCY(344.4,RCDA,4)),RC5=$G(^RCY(344.4,RCDA,5))
"RTN","RCDPEAA2",152,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC0,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC0,U,5),"",2)
"RTN","RCDPEAA2",153,0)
 I +RCSEQ S VALMHDR(2)=$E("Posted Amt: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,5),"",2)_$J("",31),1,31)
"RTN","RCDPEAA2",154,0)
 S VALMHDR(2)=$G(VALMHDR(2))_"Un-posted balance: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,4),"",2)
"RTN","RCDPEAA2",155,0)
 S VALMHDR(3)="Payer Name/ID: "_$P(RC0,U,6)_"/"_$P(RC0,U,3)
"RTN","RCDPEAA2",156,0)
 S Z=+$O(^RCY(344.31,"AERA",RCDA,0))
"RTN","RCDPEAA2",157,0)
 I Z S VALMHDR(4)="EFT #/TRACE #: "_$P($G(^RCY(344.3,+$G(^RCY(344.31,Z,0)),0)),U)_"/"_$P(RC0,U,2)
"RTN","RCDPEAA2",158,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(4)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEAA2",159,0)
 S VALMHDR(5)="Posted Receipt #(s): "_$$RCPTS(RCDA,RC0)
"RTN","RCDPEAA2",160,0)
 Q
"RTN","RCDPEAA2",161,0)
 ;
"RTN","RCDPEAA2",162,0)
RCPTS(RCDA,RC0) ; pull list of 'other receipt #s
"RTN","RCDPEAA2",163,0)
 ;  input  - RCDA  = ien of entry in 344.4
"RTN","RCDPEAA2",164,0)
 ;           RC0   = data string at zero node of entry in 344.4
"RTN","RCDPEAA2",165,0)
 ;  output - RCPTS = returns list of receipts stored at 344.4,.08 and 344.48 multiple
"RTN","RCDPEAA2",166,0)
 N X,RIEN,RCPTS
"RTN","RCDPEAA2",167,0)
 S X=0
"RTN","RCDPEAA2",168,0)
 S RCPTS=$P($G(^RCY(344,+$P(RC0,U,8),0)),U)
"RTN","RCDPEAA2",169,0)
 I RCPTS="" G RCPTSQ  ; receipt not posted to any of EEOB items
"RTN","RCDPEAA2",170,0)
 S RCPTS=RCPTS_","
"RTN","RCDPEAA2",171,0)
 F  S X=$O(^RCY(344.4,RCDA,8,X)) Q:'X  S RIEN=+^(X,0) S RCPTS=RCPTS_$P($G(^RCY(344,RIEN,0)),U)_","
"RTN","RCDPEAA2",172,0)
 S RCPTS=$$TRIM^XLFSTR(RCPTS,"R",",")  ; remove orphan comma from last receipt number
"RTN","RCDPEAA2",173,0)
RCPTSQ ;
"RTN","RCDPEAA2",174,0)
 Q RCPTS
"RTN","RCDPEAA2",175,0)
 ;
"RTN","RCDPEAA2",176,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA2",177,0)
 K RCFASTXT
"RTN","RCDPEAA2",178,0)
 Q
"RTN","RCDPEAA2",179,0)
 ;
"RTN","RCDPEAA2",180,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEAA2",181,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEAA2",182,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEAA2",183,0)
 ; RC = the ien of file 430
"RTN","RCDPEAA2",184,0)
 N Z,Z0,Q
"RTN","RCDPEAA2",185,0)
 S Z=""
"RTN","RCDPEAA2",186,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEAA2",187,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEAA2",188,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEAA2",189,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEAA2",190,0)
 I $G(RC)'="" D
"RTN","RCDPEAA2",191,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEAA2",192,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEAA2",193,0)
 Q Z
"RTN","RCDPEAA2",194,0)
 ;
"RTN","RCDPEAA2",195,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEAA2",196,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEAA2",197,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEAA2",198,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEAA2",199,0)
 Q A
"RTN","RCDPEAA2",200,0)
 ;
"RTN","RCDPEAA2",201,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEAA2",202,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEAA2",203,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEAA2",204,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEAA2",205,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",206,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEAA2",207,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEAA2",208,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEAA2",209,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEAA2",210,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEAA2",211,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",212,0)
 Q FIRST
"RTN","RCDPEAA2",213,0)
 ;
"RTN","RCDPEAA2",214,0)
MARK(RCIENS) ;  Mark for Auto-Post - EEOB on APAR gets marked for auto-post if it passes autoposting validation
"RTN","RCDPEAA2",215,0)
 ;  
"RTN","RCDPEAA2",216,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",217,0)
 ;
"RTN","RCDPEAA2",218,0)
 N RESULT,REASON,LINE,DIR,X,Y,RCERROR,XX,ERADA1,RCDFDA
"RTN","RCDPEAA2",219,0)
 S:$G(RCIENS)="" RCIENS=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",220,0)
 Q:'RCIENS
"RTN","RCDPEAA2",221,0)
 I '$$VALID^RCDPEAP($P(RCIENS,U),$P(RCIENS,U,2),.RESULT) D  G MARKQ
"RTN","RCDPEAA2",222,0)
 . S LINE=$O(RESULT(""))
"RTN","RCDPEAA2",223,0)
 . S REASON=$TR(RESULT(LINE),U,"-")
"RTN","RCDPEAA2",224,0)
 . S DIR(0)="EA",DIR("A",1)="EEOB cannot be marked for Auto-Post for the following reason:"
"RTN","RCDPEAA2",225,0)
 . S DIR("A",2)=REASON
"RTN","RCDPEAA2",226,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",227,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",228,0)
 ; EEOB passed validation; ready for Autopost
"RTN","RCDPEAA2",229,0)
 L +^RCY(344.4,$P(RCIENS,U),0):5 I '$T D NOLOCK G MARKQ
"RTN","RCDPEAA2",230,0)
 S ERADA1=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)  ; get 344.41 ien (344.491,.09)
"RTN","RCDPEAA2",231,0)
 S RCDFDA(344.41,ERADA1_","_$P(RCIENS,U)_",",6)=1
"RTN","RCDPEAA2",232,0)
 D FILE^DIE("","RCDFDA")
"RTN","RCDPEAA2",233,0)
 S DIR(0)="EA",DIR("A",1)=$P(RCIENS,U)_"."_ERADA1_" has been marked for auto-post and has been removed from the APAR List."
"RTN","RCDPEAA2",234,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",235,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",236,0)
 L -^RCY(344.4,$P(RCIENS,U),0)
"RTN","RCDPEAA2",237,0)
MARKQ ;
"RTN","RCDPEAA2",238,0)
 Q
"RTN","RCDPEAA2",239,0)
 ;
"RTN","RCDPEAA2",240,0)
NOLOCK ; entry cannot be locked
"RTN","RCDPEAA2",241,0)
 N DIR
"RTN","RCDPEAA2",242,0)
 S DIR(0)="EA"
"RTN","RCDPEAA2",243,0)
 S DIR("A",1)="Sorry, another user is editing this ERA entry."
"RTN","RCDPEAA2",244,0)
 S DIR("A",2)="Try again later."
"RTN","RCDPEAA2",245,0)
 S DIR("A",3)=""
"RTN","RCDPEAA2",246,0)
 S DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","RCDPEAA2",247,0)
 D ^DIR
"RTN","RCDPEAA2",248,0)
 Q
"RTN","RCDPEAA2",249,0)
 ;
"RTN","RCDPEAA2",250,0)
VIEWERA(RCIENS) ; View/Print ERA - protocol entry from APAR EEOB List screen and APAR - EEOB ITEM - SCRATCHPAD screen
"RTN","RCDPEAA2",251,0)
 N RCSCR
"RTN","RCDPEAA2",252,0)
 I RCPROG="RCDPEAA2" S RCSCR=$P(RCIENS,U)
"RTN","RCDPEAA2",253,0)
 I RCPROG="RCDPEAA1" S RCSCR=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",254,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEAA2",255,0)
 Q
"RTN","RCDPEAA3")
0^81^B72680990
"RTN","RCDPEAA3",1,0)
RCDPEAA3 ;ALB/KML - APAR Screen - callable entry points ;Nov 24, 2014@23:32:24
"RTN","RCDPEAA3",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAA3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA3",4,0)
 Q
"RTN","RCDPEAA3",5,0)
 ;
"RTN","RCDPEAA3",6,0)
SPLIT(RCIENS) ; Split EEOB in APAR
"RTN","RCDPEAA3",7,0)
 ;  
"RTN","RCDPEAA3",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",9,0)
 N DIR,L,X,RCQUIT
"RTN","RCDPEAA3",10,0)
 S RCQUIT=0
"RTN","RCDPEAA3",11,0)
 D FULL^VALM1
"RTN","RCDPEAA3",12,0)
 S L=0 F  S L=$O(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),1,L)) Q:'L  D
"RTN","RCDPEAA3",13,0)
 . I "01"[$P($G(^(L,0)),U,2) S DIR(0)="EA",DIR("A",1)="THIS EEOB IS NOT AVAILABLE TO EDIT/SPLIT",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR G SPLITQ
"RTN","RCDPEAA3",14,0)
 I $P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,13) D  G:RCQUIT SPLITQ
"RTN","RCDPEAA3",15,0)
 . S DIR("A",1)="WARNING!  THIS LINE HAS ALREADY BEEN VERIFIED",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEAA3",16,0)
 . I Y'=1 S RCQUIT=1
"RTN","RCDPEAA3",17,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEAA3",18,0)
 S X=+$O(^TMP("RCDPE-EOB_WLDX",$J,""),-1)
"RTN","RCDPEAA3",19,0)
 D SPLIT^RCDPEWL3($P(RCIENS,U),X)
"RTN","RCDPEAA3",20,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",21,0)
 ;
"RTN","RCDPEAA3",22,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEAA3",23,0)
 Q
"RTN","RCDPEAA3",24,0)
 ;
"RTN","RCDPEAA3",25,0)
REFRESH(RCIENS) ; Refresh the entry in file 344.49 to remove all user adjustments
"RTN","RCDPEAA3",26,0)
 ;  
"RTN","RCDPEAA3",27,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",28,0)
 N DIR,X,Y,Z,Z0,DA,DIK
"RTN","RCDPEAA3",29,0)
 D FULL^VALM1
"RTN","RCDPEAA3",30,0)
 S DIR(0)="YA"
"RTN","RCDPEAA3",31,0)
 S DIR("A",1)="THIS ACTION WILL DELETE AND REBUILD THIS EEOB WORKLIST SCRATCH PAD ENTRY",DIR("A",2)="ALL EDITS/SPLITS/DISTRIBUTE ADJUSTMENTS ENTERED FOR THIS ERA WILL BE ERASED"
"RTN","RCDPEAA3",32,0)
 S DIR("A",3)="AND ALL ENTRIES MARKED AS MANUALLY VERIFIED WILL BE UNMARKED",DIR("A",4)=" "
"RTN","RCDPEAA3",33,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: "
"RTN","RCDPEAA3",34,0)
 W ! D ^DIR K DIR
"RTN","RCDPEAA3",35,0)
 I Y'=1 G REFQ
"RTN","RCDPEAA3",36,0)
 D ADDLINES^RCDPEWLA($P(RCIENS,U))
"RTN","RCDPEAA3",37,0)
 D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",38,0)
REFQ S VALMBG=1,VALMBCK="R"
"RTN","RCDPEAA3",39,0)
 Q
"RTN","RCDPEAA3",40,0)
 ;
"RTN","RCDPEAA3",41,0)
RESEARCH ; Invoke the research menu off APAR
"RTN","RCDPEAA3",42,0)
 ;
"RTN","RCDPEAA3",43,0)
 K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEAA3",44,0)
 S ^TMP($J,"RC_VALMBG")=$G(VALMBG)
"RTN","RCDPEAA3",45,0)
 D FULL^VALM1
"RTN","RCDPEAA3",46,0)
 D EN^VALM("RCDPE APAR EEOB RESEARCH")
"RTN","RCDPEAA3",47,0)
RQ K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEAA3",48,0)
 Q
"RTN","RCDPEAA3",49,0)
 ;
"RTN","RCDPEAA3",50,0)
VRECPT(RCIENS) ;
"RTN","RCDPEAA3",51,0)
 ;  
"RTN","RCDPEAA3",52,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",53,0)
 ;
"RTN","RCDPEAA3",54,0)
 D VR^RCDPEWLP($P(RCIENS,U))
"RTN","RCDPEAA3",55,0)
 Q
"RTN","RCDPEAA3",56,0)
REVIEW(RCIENS) ; Enter review information on worklist and turn review display on/off
"RTN","RCDPEAA3",57,0)
 ;  
"RTN","RCDPEAA3",58,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",59,0)
 ;
"RTN","RCDPEAA3",60,0)
 ;
"RTN","RCDPEAA3",61,0)
 N Z,RC,RCDA,RCZ,DIC,DA,DIE,DR,X,Y,DIR,REVCHG,RCUSPREF,RCLSTREV,RCREV
"RTN","RCDPEAA3",62,0)
 D FULL^VALM1
"RTN","RCDPEAA3",63,0)
 ;
"RTN","RCDPEAA3",64,0)
 S REVCHG=""
"RTN","RCDPEAA3",65,0)
 S DIR(0)="YA",RC=+$G(^TMP($J,"RC_REVIEW"))
"RTN","RCDPEAA3",66,0)
 S DIR("A",1)="REVIEW DATA DISPLAY IS CURRENTLY TURNED "_$P("OFF^ON",U,RC+1),DIR("A")="DO YOU WANT TO TURN IT "_$P("ON^OFF",U,RC+1)_"?: ",DIR("B")=$S('RC:"YES",1:"NO") W ! D ^DIR K DIR
"RTN","RCDPEAA3",67,0)
 I Y=1 S ^TMP($J,"RC_REVIEW")=((RC+1)#2),REVCHG=1
"RTN","RCDPEAA3",68,0)
 S RCUSPREF=+$O(^RCY(344.49,$P(RCIENS,U),2,"B",DUZ,0))
"RTN","RCDPEAA3",69,0)
 ;
"RTN","RCDPEAA3",70,0)
 I 'RCUSPREF D  ; Add the user pref record
"RTN","RCDPEAA3",71,0)
 . S RCUSPREF=+$$ADDUSER($P(RCIENS,U),DUZ)
"RTN","RCDPEAA3",72,0)
 S RCLSTREV=+$P($G(^RCY(344.49,$P(RCIENS,U),2,RCUSPREF,0)),U,2)
"RTN","RCDPEAA3",73,0)
 S DA(1)=$P(RCIENS,U),DA=RCUSPREF
"RTN","RCDPEAA3",74,0)
 I DA,RCLSTREV'=$G(^TMP($J,"RC_REVIEW")) D  ; Update user pref
"RTN","RCDPEAA3",75,0)
 . S DIE="^RCY(344.49,"_DA(1)_",2,",DR=".02////"_+$G(^TMP($J,"RC_REVIEW")) D ^DIE
"RTN","RCDPEAA3",76,0)
 W !
"RTN","RCDPEAA3",77,0)
 I '$G(^TMP($J,"RC_REVIEW")) G REVIEWQ
"RTN","RCDPEAA3",78,0)
 ;
"RTN","RCDPEAA3",79,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEAA3",80,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) G:'RCZ REVIEWQ
"RTN","RCDPEAA3",81,0)
 ;
"RTN","RCDPEAA3",82,0)
 S RCREV=0
"RTN","RCDPEAA3",83,0)
 I '$O(^RCY(344.49,$P(RCIENS,U),1,"AC",DUZ,RCZ,0)) D
"RTN","RCDPEAA3",84,0)
 . S RCREV=$$NEWREV($P(RCIENS,U),RCZ,DUZ)
"RTN","RCDPEAA3",85,0)
 E  D
"RTN","RCDPEAA3",86,0)
 . N DIR,X,Y
"RTN","RCDPEAA3",87,0)
 . S DIR("A")="(A)DD or (E)DIT A REVIEW COMMENT?: ",DIR("B")="ADD",DIR(0)="SA^A:ADD;E:EDIT" W ! D ^DIR K DIR
"RTN","RCDPEAA3",88,0)
 . I $D(DUOUT)!$D(DTOUT) Q
"RTN","RCDPEAA3",89,0)
 . ;
"RTN","RCDPEAA3",90,0)
 . I Y="E" D  Q  ; Edit a review entry entered by same user
"RTN","RCDPEAA3",91,0)
 .. N DA,DR,DIE,X,Y
"RTN","RCDPEAA3",92,0)
 .. S DA(1)=$P(RCIENS,U),DA=RCZ,DIC="^RCY(344.49,"_DA(1)_",1,"_DA_",4,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,2)=DUZ" D ^DIC
"RTN","RCDPEAA3",93,0)
 .. S RCREV=$S(Y>0:+Y,1:0)
"RTN","RCDPEAA3",94,0)
 .. I RCREV S DA(2)=$P(RCIENS,U),DA(1)=RCZ,DA=RCREV,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,",DR=".03;.04////^S X=$$NOW^XLFDT()" D ^DIE
"RTN","RCDPEAA3",95,0)
 . ;
"RTN","RCDPEAA3",96,0)
 . S RCREV=$$NEWREV($P(RCIENS,U),RCZ,DUZ)
"RTN","RCDPEAA3",97,0)
 ;
"RTN","RCDPEAA3",98,0)
 I RCREV S DIE("NO^")="",DA(1)=$P(RCIENS,U),DA=RCZ,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".11R;I X=0 S Y=""@10"";.12////^S X=DUZ;S Y=""@20"";@10;.12///@;@20" D ^DIE K DIE
"RTN","RCDPEAA3",99,0)
 D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",100,0)
 S REVCHG=""
"RTN","RCDPEAA3",101,0)
 ;
"RTN","RCDPEAA3",102,0)
REVIEWQ I $G(REVCHG) D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",103,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",104,0)
 Q
"RTN","RCDPEAA3",105,0)
 ;
"RTN","RCDPEAA3",106,0)
NEWREV(RCSCR,RCZ,RCDUZ) ; Enter a new review comment
"RTN","RCDPEAA3",107,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEAA3",108,0)
 ; RCZ = ien of the EEOB (seq #)
"RTN","RCDPEAA3",109,0)
 ; RCDUZ =DUZ of user entering the comment
"RTN","RCDPEAA3",110,0)
 ; Function returns 0 if no new comment, ien of comment if added
"RTN","RCDPEAA3",111,0)
 N DA,X,Y,DIC,DIK,DLAYGO,DO,DD,RCREV,RCNOW
"RTN","RCDPEAA3",112,0)
 S RCNOW=$$NOW^XLFDT() W !!,"REVIEW DATE/TIME: "_$$FMTE^XLFDT(RCNOW,"2")
"RTN","RCDPEAA3",113,0)
 S DA(2)=RCSCR,DA(1)=RCZ,X=RCNOW,DIC("DR")=".02////"_RCDUZ_";.03",DLAYGO=344.492,DIC(0)="L"
"RTN","RCDPEAA3",114,0)
 S DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,"
"RTN","RCDPEAA3",115,0)
 K DO,DD
"RTN","RCDPEAA3",116,0)
 D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","RCDPEAA3",117,0)
 S RCREV=+Y
"RTN","RCDPEAA3",118,0)
 I RCREV'>0 S RCREV=0 G NEWREVQ
"RTN","RCDPEAA3",119,0)
 I '$O(^RCY(344.49,DA(2),1,DA(1),4,RCREV,0)) S DIK="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,",DA=RCREV D ^DIK S RCREV=0 ; No comment - delete entry
"RTN","RCDPEAA3",120,0)
 ;
"RTN","RCDPEAA3",121,0)
NEWREVQ Q RCREV
"RTN","RCDPEAA3",122,0)
 ;
"RTN","RCDPEAA3",123,0)
ADDUSER(RCSCR,RCDUZ) ; Add user record to user preferences multiple in file 344.49 and initialize all preferences
"RTN","RCDPEAA3",124,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEAA3",125,0)
 ; RCDUZ  = the ien of the user
"RTN","RCDPEAA3",126,0)
 N DIC,DA,X,Y,DLAYGO,DO,DD
"RTN","RCDPEAA3",127,0)
 S Y=+$O(^RCY(344.49,RCSCR,2,"B",RCDUZ,0))
"RTN","RCDPEAA3",128,0)
 I Y G ADDUQ
"RTN","RCDPEAA3",129,0)
 S DLAYGO=344.492,DA(1)=RCSCR,DIC(0)="L",X=RCDUZ,DIC="^RCY(344.49,"_DA(1)_",2,",DIC("DR")=".02////0;.03////N"
"RTN","RCDPEAA3",130,0)
 D FILE^DICN K DIC,DLAYGO
"RTN","RCDPEAA3",131,0)
ADDUQ Q $S(Y>0:Y,1:0)
"RTN","RCDPEAA3",132,0)
 ;
"RTN","RCDPEAA3",133,0)
PREOB(RCIENS) ; Print/View EOB detail
"RTN","RCDPEAA3",134,0)
 N RCDA,RCDAZ,Z,Z0
"RTN","RCDPEAA3",135,0)
 D FULL^VALM1
"RTN","RCDPEAA3",136,0)
 S RCDA=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)
"RTN","RCDPEAA3",137,0)
 F RCDAZ=1:1:$L(RCDA,",") S RCDAZ(RCDAZ)=$P(RCDA,",",RCDAZ)
"RTN","RCDPEAA3",138,0)
 S Z=0 F  S Z=$O(RCDAZ(Z)) Q:'Z  D
"RTN","RCDPEAA3",139,0)
 . ;
"RTN","RCDPEAA3",140,0)
 . S Z0=RCDAZ(Z)
"RTN","RCDPEAA3",141,0)
 . I $E(Z0,1,3)="ADJ" D  Q
"RTN","RCDPEAA3",142,0)
 .. I $G(^RCY(344.4,RCSCR,2,+$P(Z0,"ADJ",2),0))'="" S RCDAZ(Z)="ADJ^"_+$P(Z0,"ADJ",2)
"RTN","RCDPEAA3",143,0)
 . ;
"RTN","RCDPEAA3",144,0)
 . S Z0=$G(^RCY(344.4,$P(RCIENS,U),1,+Z0,0))
"RTN","RCDPEAA3",145,0)
 . S RCDAZ(Z)=+Z0_U_$S($P(Z0,U,2):$P(Z0,U,2),1:-1) Q
"RTN","RCDPEAA3",146,0)
 ;
"RTN","RCDPEAA3",147,0)
 D VP^RCDPEWL2($P(RCIENS,U),.RCDAZ)
"RTN","RCDPEAA3",148,0)
 ;
"RTN","RCDPEAA3",149,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",150,0)
 Q
"RTN","RCDPEAA3",151,0)
 ;
"RTN","RCDPEAA3",152,0)
VERIF(RCIENS) ; Entry point to verification options on APAR worklist
"RTN","RCDPEAA3",153,0)
 ; RCDPE APAR VERIFY protocol
"RTN","RCDPEAA3",154,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",155,0)
 N DIR,X,Y,RCQUIT,DTOUT,DUOUT
"RTN","RCDPEAA3",156,0)
 D FULL^VALM1
"RTN","RCDPEAA3",157,0)
 ;
"RTN","RCDPEAA3",158,0)
 W !!!!
"RTN","RCDPEAA3",159,0)
 S RCQUIT=0
"RTN","RCDPEAA3",160,0)
 F  D  Q:RCQUIT
"RTN","RCDPEAA3",161,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEAA3",162,0)
 . S DIR("A",1)="VERIFY EEOBs:"
"RTN","RCDPEAA3",163,0)
 . S DIR("A",2)="   1 MANUALLY MARK AS VERIFIED"
"RTN","RCDPEAA3",164,0)
 . S DIR("A",3)="   2 REPORT OF UNVERIFIED WITH DISCREPANCIES"
"RTN","RCDPEAA3",165,0)
 . S DIR("A",4)="   3 QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEAA3",166,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEAA3",167,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEAA3",168,0)
 . ;
"RTN","RCDPEAA3",169,0)
 . I Y=1 D MVER($P(RCIENS,U)) W !! Q
"RTN","RCDPEAA3",170,0)
 . ;
"RTN","RCDPEAA3",171,0)
 . I Y=2 D RPT^RCDPEV0($P(RCIENS,U)) W !! Q
"RTN","RCDPEAA3",172,0)
 ;
"RTN","RCDPEAA3",173,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",174,0)
 Q
"RTN","RCDPEAA3",175,0)
 ;
"RTN","RCDPEAA3",176,0)
MVER(RCERA) ; Manually mark an EEOB as verified within APAR
"RTN","RCDPEAA3",177,0)
 ; subroutine cloned from the process that VERIFIES EEOBs off the standard worklist (MVER^RCDPEV)
"RTN","RCDPEAA3",178,0)
 ; but with specific changes to support APAR
"RTN","RCDPEAA3",179,0)
 ; this subroutine only needs to VERIFY one EEOB rather than a list of EEOBs
"RTN","RCDPEAA3",180,0)
 N A,CT,DA,DIE,DR,DTOUT,DUOUT,Z,Z0,Z1,RCT,RCY,RCY0,RCZ0,RCLINE,RCYNUM,DIR,X,Y,RESULT,SPLIT,Q,Q0,DT1,DT2
"RTN","RCDPEAA3",181,0)
 N VERIFIED
"RTN","RCDPEAA3",182,0)
 S (VERIFIED,RCT)=0,CT=1,Z0=""
"RTN","RCDPEAA3",183,0)
 ; get the EEOB entry ien to determine if already it's already been verified 
"RTN","RCDPEAA3",184,0)
 S Z1=$O(^TMP("RCDPE-EOB_WLDX",$J,"")) I Z1 S Z=^TMP("RCDPE-EOB_WLDX",$J,Z1)
"RTN","RCDPEAA3",185,0)
 ; grab the data belonging to the EEOB
"RTN","RCDPEAA3",186,0)
 I Z]"" S Z0=$G(^RCY(344.49,RCERA,1,+$P(Z,U,2),0))
"RTN","RCDPEAA3",187,0)
 ; get VERIFY data
"RTN","RCDPEAA3",188,0)
 I Z0'="",$P(Z0,U,13) S VERIFIED=1
"RTN","RCDPEAA3",189,0)
 I VERIFIED D  Q
"RTN","RCDPEAA3",190,0)
 . S DIR(0)="EA",DIR("A",1)="THIS EEOB IS ALREADY VERIFIED",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEAA3",191,0)
 S RCY=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,Z1)),U,2),RCLINE=+^(Z1),RCYNUM=Z1
"RTN","RCDPEAA3",192,0)
 S RCY0=$G(^RCY(344.49,RCERA,1,RCY,0))
"RTN","RCDPEAA3",193,0)
 S RCZ0=$G(^RCY(344.4,RCERA,1,+$P(RCY0,U,9),0))
"RTN","RCDPEAA3",194,0)
 I '$P(RCZ0,U,2) D
"RTN","RCDPEAA3",195,0)
 . W !!,"THIS LINE DOES NOT REFERENCE A VALID BILL"
"RTN","RCDPEAA3",196,0)
 E  D
"RTN","RCDPEAA3",197,0)
 . S RESULT=$$VER^RCDPEV(RCERA,+$G(^IBM(361.1,+$P(RCZ0,U,2),0)),+$P(RCY0,U,9),1)
"RTN","RCDPEAA3",198,0)
 . F Z=2:1:9 I $E($P(RESULT,U,Z))="*" S Q=$P(RESULT,U,Z),$E(Q,1)="",$P(RESULT,U,Z)=Q
"RTN","RCDPEAA3",199,0)
 . S SPLIT=$O(^RCY(344.49,RCERA,1,"B",+RCY0_".9999"),-1)'=(+RCY0_".0001")
"RTN","RCDPEAA3",200,0)
 . S Z=$S(SPLIT:"CLAIM #'s: ",1:"  CLAIM #: ")
"RTN","RCDPEAA3",201,0)
 . S Z=Z_$P(RCY0,U,2)_$S('SPLIT:"",1:" (ORIGINAL ERA DATA)")
"RTN","RCDPEAA3",202,0)
 . I SPLIT D
"RTN","RCDPEAA3",203,0)
 .. S Q=+RCY0 F  S Q=$O(^RCY(344.49,RCERA,1,"B",Q)) Q:(Q\1)'=+RCY0  S Q0=+$O(^RCY(344.49,RCERA,1,"B",Q,0)),Q0=$G(^RCY(344.49,RCERA,1,Q0,0)) I $P(Q0,U,2)'="" S Z=Z_" "_$P(Q0,U,2)
"RTN","RCDPEAA3",204,0)
 . W !!!,Z
"RTN","RCDPEAA3",205,0)
 . W !,?13,"PATIENT NAME"_$J("",18)_"  SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEAA3",206,0)
 . W !,?13,"------------------------------  ---------------  -----------------"
"RTN","RCDPEAA3",207,0)
 . S DT1=$E($S($P(RESULT,U,7):$$FMTE^XLFDT($P(RESULT,U,7),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEAA3",208,0)
 . S DT2=$E($S($P(RESULT,U,9):"-"_$$FMTE^XLFDT($P(RESULT,U,9),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEAA3",209,0)
 . W !,"   ERA DATA: ",$E($P(RESULT,U,3)_$J("",30),1,30),"  ",$E($J($P(RESULT,U,5),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEAA3",210,0)
 . W !,?15,$P($G(^RCY(344,RCERA,0)),U,6)
"RTN","RCDPEAA3",211,0)
 . S DT1=$E($S($P(RESULT,U,6):$$FMTE^XLFDT($P(RESULT,U,6),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEAA3",212,0)
 . S DT2=$E($S($P(RESULT,U,8):"-"_$$FMTE^XLFDT($P(RESULT,U,8),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEAA3",213,0)
 . W !,"  BILL DATA: "_$E($P(RESULT,U,2)_$J("",30),1,30)_"  "_$E($J($P(RESULT,U,4),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEAA3",214,0)
 . W !,?15,$P($G(^DIC(36,+$P(RCZ0,U,4),0)),U),!
"RTN","RCDPEAA3",215,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO MARK THIS LINE VERIFIED? ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEAA3",216,0)
 ;
"RTN","RCDPEAA3",217,0)
 I Y'=1 Q
"RTN","RCDPEAA3",218,0)
 S DA(1)=RCERA,DA=+RCY,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEAA3",219,0)
 S A=$$TOPLINE^RCDPEWL1($G(^RCY(344.49,RCERA,1,+RCY,0)),RCYNUM)
"RTN","RCDPEAA3",220,0)
 S ^TMP("RCDPE-EOB_WL",$J,RCLINE,0)=A
"RTN","RCDPEAA3",221,0)
 Q
"RTN","RCDPEAA3",222,0)
 ;
"RTN","RCDPEAC")
0^31^B163795465
"RTN","RCDPEAC",1,0)
RCDPEAC ;ALB/TMK/PJH - ACTIVE BILLS WITH EEOB ON FILE ;Jun 06, 2014@19:11:19
"RTN","RCDPEAC",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEAC",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAC",4,0)
 ;
"RTN","RCDPEAC",5,0)
EN ; Entry point for Active Bills With EEOB Report [RCDPE ACTIVE WITH EEOB REPORT]
"RTN","RCDPEAC",6,0)
 N %ZIS,CHAM,HDR,POP,RCCT,RCDISPTY,RCHDR,RCINS,RCLSTMGR,RCPGNUM,RCSORT,RCSTOP,RCTMPND,TRIC,VAUTD,X,Y
"RTN","RCDPEAC",7,0)
 N START,END
"RTN","RCDPEAC",8,0)
 ; PRCA*4.5*276 - Query Division
"RTN","RCDPEAC",9,0)
 D DIVISION^VAUTOMA
"RTN","RCDPEAC",10,0)
 I 'VAUTD&($D(VAUTD)'=11) Q
"RTN","RCDPEAC",11,0)
 ; PRCA*4.5*276 - select report format
"RTN","RCDPEAC",12,0)
 Q:'$$SELECT(.RCINS,.RCSORT)
"RTN","RCDPEAC",13,0)
 ;
"RTN","RCDPEAC",14,0)
 S RCTMPND="",RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",15,0)
 I RCLSTMGR D  G ENOUT
"RTN","RCDPEAC",16,0)
 . S RCTMPND=$T(+0)_"^AR - ACTIVE BILLS WITH EEOB REPORT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAC",17,0)
 . D ENQ
"RTN","RCDPEAC",18,0)
 . M HDR=RCHDR
"RTN","RCDPEAC",19,0)
 . D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAC",20,0)
 . I $D(RCTMPND) K ^TMP($J,RCTMPND)
"RTN","RCDPEAC",21,0)
 ;
"RTN","RCDPEAC",22,0)
 W !
"RTN","RCDPEAC",23,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEAC",24,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEAC",25,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEAC",26,0)
 .S ZTRTN="ENQ^RCDPEAC",ZTDESC="AR - ACTIVE BILLS WITH EEOB REPORT",ZTSAVE("*")=""
"RTN","RCDPEAC",27,0)
 .D ^%ZTLOAD
"RTN","RCDPEAC",28,0)
 .W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEAC",29,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEAC",30,0)
 U IO
"RTN","RCDPEAC",31,0)
 ;
"RTN","RCDPEAC",32,0)
ENQ ; Queued entry point for the report
"RTN","RCDPEAC",33,0)
 ; RCSORT and array RCINS must exist
"RTN","RCDPEAC",34,0)
 ; RCINS = "A" for all ins co, "R" for range, "S" for selected individual
"RTN","RCDPEAC",35,0)
 ;         for RCINS="R"  ("FR")=from payer name and ("TR")=to payer name
"RTN","RCDPEAC",36,0)
 ;         for RCINS="S"  ("S",INS CO IEN IN FILE 36)=""
"RTN","RCDPEAC",37,0)
 ; RCSORT = "PN" for sort by patient name followed by ;- if reverse order
"RTN","RCDPEAC",38,0)
 ;          "L4" for sort by patient SSN followed by ;- if reverse order
"RTN","RCDPEAC",39,0)
 ;
"RTN","RCDPEAC",40,0)
 N RC0,RC399,RC430,RCACT,RCBILL,RCEOB,RCEX,RCEXT,RCNEW,RCPT,RCSSN,RCSTOP,RCTOT,RCZ,RCZ0,RCZ1,X,Y,Z,Z0
"RTN","RCDPEAC",41,0)
 N POSTDT,SN
"RTN","RCDPEAC",42,0)
 K ^TMP($J,"RCSORT")
"RTN","RCDPEAC",43,0)
 S RCCT=0 ;Page count for List Manager
"RTN","RCDPEAC",44,0)
 S RCEXT=0 ; Set Excel page 1 count
"RTN","RCDPEAC",45,0)
 I 'RCLSTMGR D HDRBLD
"RTN","RCDPEAC",46,0)
 I RCLSTMGR D HDRLM
"RTN","RCDPEAC",47,0)
 S RCACT=+$O(^PRCA(430.3,"AC",102,0)) ; Get active status ien
"RTN","RCDPEAC",48,0)
 G:'RCACT ENOUT
"RTN","RCDPEAC",49,0)
 ;
"RTN","RCDPEAC",50,0)
 I 'RCLSTMGR D HDRLST^RCDPEARL(0,.RCHDR)  ; initial report header
"RTN","RCDPEAC",51,0)
 S RCBILL=0
"RTN","RCDPEAC",52,0)
 F  S RCBILL=$O(^PRCA(430,"AC",RCACT,RCBILL)) Q:RCBILL=""  I +$G(^PRCA(430,RCBILL,7))>0,$$INCLUDE(.RCINS,RCBILL,TRIC,CHAM),$$EEOB(RCBILL,.RCEOB) D
"RTN","RCDPEAC",53,0)
 . S (RCTOT,RCEOB,SN)=0 F  S RCEOB=$O(RCEOB(RCEOB)) Q:'RCEOB  F  S SN=$O(RCEOB(RCEOB,SN))  Q:'SN  D
"RTN","RCDPEAC",54,0)
 . . I $$DATE(RCEOB,START,END) S RCTOT=RCTOT+$G(^IBM(361.1,RCEOB,1)),^TMP($J,"RCSORT",$$INSNM(RCBILL),$$SL1(RCSORT,RCBILL),RCBILL,+RCEOB(RCEOB,SN)_"_"_RCEOB_"_"_SN,RCEOB)=""
"RTN","RCDPEAC",55,0)
 . . I $O(RCEOB(0)) S ^TMP($J,"RCSORT",$$INSNM(RCBILL),$$SL1(RCSORT,RCBILL),RCBILL)=RCTOT   ;This is from the eob and will be the same for each line
"RTN","RCDPEAC",56,0)
 ;
"RTN","RCDPEAC",57,0)
 S RCZ="",(RCSTOP,RCNEW)=0
"RTN","RCDPEAC",58,0)
 F  S RCZ=$O(^TMP($J,"RCSORT",RCZ)) Q:RCZ=""!RCSTOP  D  S:($G(RCINS)="R")!($G(RCINS)="S")&(RCPGNUM>1) RCNEW=1
"RTN","RCDPEAC",59,0)
 . I RCSORT'["-" D
"RTN","RCDPEAC",60,0)
 .. S RCZ0="" F  S RCZ0=$O(^TMP($J,"RCSORT",RCZ,RCZ0)) Q:RCZ0=""!RCSTOP  D OUTPUT(RCZ,RCZ0,RCSORT,.RCSTOP,.RCINS,RCNEW) S RCNEW=0
"RTN","RCDPEAC",61,0)
 . I RCSORT["-" D
"RTN","RCDPEAC",62,0)
 .. S RCZ0="" F  S RCZ0=$O(^TMP($J,"RCSORT",RCZ,RCZ0),-1) Q:RCZ0=""!RCSTOP  D OUTPUT(RCZ,RCZ0,RCSORT,.RCSTOP,.RCINS,.RCNEW) S RCNEW=0
"RTN","RCDPEAC",63,0)
 ;
"RTN","RCDPEAC",64,0)
 I '$D(^TMP($J,"RCSORT")) S $P(Z," ",25)="",Z=Z_"*** NO RECORDS TO PRINT ***" D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",65,0)
 I $D(^TMP($J,"RCSORT")),'RCSTOP D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCCT,RCTMPND)
"RTN","RCDPEAC",66,0)
 ;
"RTN","RCDPEAC",67,0)
ENOUT I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAC",68,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAC",69,0)
 K ^TMP($J,"RCSORT")
"RTN","RCDPEAC",70,0)
 Q
"RTN","RCDPEAC",71,0)
 ;
"RTN","RCDPEAC",72,0)
OUTPUT(RCZ,RCZ0,RCSORT,RCSTOP,RCINS,RCNEW) ; Output the data
"RTN","RCDPEAC",73,0)
 ; RCZ, RCZ0 are the first 2 sort levels for the array
"RTN","RCDPEAC",74,0)
 ; RCINS = insurance co info array
"RTN","RCDPEAC",75,0)
 ; RCSTOP passed by ref - returned if user chooses to stop
"RTN","RCDPEAC",76,0)
 ; RCNEW = 1 if the header should be forced to print
"RTN","RCDPEAC",77,0)
 S RCBILL=0 F  S RCBILL=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL)) Q:'RCBILL!RCSTOP  S RCZ1="" F  S RCZ1=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL,RCZ1)) Q:RCZ1=""!RCSTOP  D
"RTN","RCDPEAC",78,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCSTOP) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAC",79,0)
 . S RC399=$G(^DGCR(399,RCBILL,0)),RCPT=+$P(RC399,U,2),RC430=$G(^PRCA(430,RCBILL,0))   ;RC430 is from the top level
"RTN","RCDPEAC",80,0)
 . ; PRCA*4.5*276 - Check for Division
"RTN","RCDPEAC",81,0)
 . I VAUTD=0 Q:$P(RC399,U,22)=""  Q:$G(VAUTD($P(RC399,U,22)))=""
"RTN","RCDPEAC",82,0)
 . S RCSTOP=$$NEWPG(.RCINS,RCNEW) S RCNEW=0 Q:RCSTOP
"RTN","RCDPEAC",83,0)
 . S RCSTOP=$$NEWPG(.RCINS,RCNEW) Q:RCSTOP
"RTN","RCDPEAC",84,0)
 . S X=$$GET1^DIQ(430,RCBILL_",",11)
"RTN","RCDPEAC",85,0)
 . ; PRCA*4.5*276 - Row #1: Print last 4 SSN only - Move Bill Number to end
"RTN","RCDPEAC",86,0)
 . S RCSSN=$P($G(^DPT(RCPT,0)),U,9),RCSSN=$E(RCSSN,$L(RCSSN)-3,$L(RCSSN))
"RTN","RCDPEAC",87,0)
 . I $G(RCDISPTY) S RCEX=$P($G(^DPT(RCPT,0)),U)_"^"_RCSSN_"^"_$TR($P(RC430,U),"-","")
"RTN","RCDPEAC",88,0)
 . E  D
"RTN","RCDPEAC",89,0)
 .. S Z=$E($P($G(^DPT(RCPT,0)),U)_$J("",25),1,25)_"  "_$E(RCSSN_$J("",5),1,5)_"  "_$TR($P(RC430,U),"-","")
"RTN","RCDPEAC",90,0)
 .. D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",91,0)
 . ; PRCA*4.5*276 - Row #2: Move Ins Name, Balance, Amt Bill, Amt Paid
"RTN","RCDPEAC",92,0)
 . S Y=+$G(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL))
"RTN","RCDPEAC",93,0)
 . I $G(RCDISPTY) S RCEX=RCEX_"^"_$$INSNM(RCBILL)_"^"_+X_"^"_+$P(RC430,U,3)_"^"_Y
"RTN","RCDPEAC",94,0)
 . E  D
"RTN","RCDPEAC",95,0)
 .. S Z=$E($$INSNM(RCBILL)_$J("",30),1,30)_$E($J("",12)_$J(+X,"",2),1+$L($J(+X,"",2)),12+$L($J(+X,"",2)))_$E($J("",13)_$J(+$P(RC430,U,3),"",2),1+$L($J(+$P(RC430,U,3),"",2)),13+$L($J(+$P(RC430,U,3),"",2)))_$E($J("",13),1,13-$L(Y))_$J(Y,"",2)
"RTN","RCDPEAC",96,0)
 .. D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",97,0)
 . ; PRCA*4.5*276 Do not display Date Referred
"RTN","RCDPEAC",98,0)
 . S RCEOB=0 F  S RCEOB=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL,RCZ1,RCEOB)) Q:'RCEOB!RCSTOP  D
"RTN","RCDPEAC",99,0)
 .. S RCSTOP=$$NEWPG(.RCINS,RCNEW)
"RTN","RCDPEAC",100,0)
 .. Q:RCSTOP
"RTN","RCDPEAC",101,0)
 .. S RC0=$G(^IBM(361.1,RCEOB,0))
"RTN","RCDPEAC",102,0)
 .. S RCSTOP=$$NEWPG(.RCINS,RCNEW) Q:RCSTOP
"RTN","RCDPEAC",103,0)
 .. ; PRCA*4.5*276 - Row #3: Trace#, Date Rec'd, Date Posted
"RTN","RCDPEAC",104,0)
 .. I $G(RCDISPTY) W !,RCEX_"^"_$P(RC0,U,7)_"^"_$$FMTE^XLFDT($P(RC0,U,5),"2D")_"^"_$S(RCZ1:$$FMTE^XLFDT(+RCZ1,"2D"),1:"")
"RTN","RCDPEAC",105,0)
 .. E  D
"RTN","RCDPEAC",106,0)
 ... S Z="  "_$P(RC0,U,7)_$J("",51-$L($P(RC0,U,7)))_$E($$FMTE^XLFDT($P(RC0,U,5),"2D")_$J("",8),1,8)_" "_" "_$E($S(RCZ1:$$FMTE^XLFDT(+RCZ1,"2D"),1:"")_$J("",8),1,8)
"RTN","RCDPEAC",107,0)
 ... D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",108,0)
 . I '$G(RCDISPTY) S Z="" D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",109,0)
 ;
"RTN","RCDPEAC",110,0)
 Q
"RTN","RCDPEAC",111,0)
 ;
"RTN","RCDPEAC",112,0)
INCLUDE(RCINS,RCZ,TRI,CVA) ; Function returns 1 if record should be included based
"RTN","RCDPEAC",113,0)
 ; on ins co
"RTN","RCDPEAC",114,0)
 ; RCINS = array containing insurance co information
"RTN","RCDPEAC",115,0)
 ; RCZ = ien of the entry in file 430
"RTN","RCDPEAC",116,0)
 N OK,RCI,RCINM,RCAINP
"RTN","RCDPEAC",117,0)
 S OK=0
"RTN","RCDPEAC",118,0)
 S RCI=+$$INS(RCZ)
"RTN","RCDPEAC",119,0)
 ;
"RTN","RCDPEAC",120,0)
 I 'RCI G INCQ ; Not a third party bill
"RTN","RCDPEAC",121,0)
 ;
"RTN","RCDPEAC",122,0)
 I RCINS="A" S OK=1
"RTN","RCDPEAC",123,0)
 ;
"RTN","RCDPEAC",124,0)
 I RCINS="S"!(RCINS="R") D
"RTN","RCDPEAC",125,0)
 . I RCINS="S" S:$D(RCINS("S",RCI)) OK=1 Q
"RTN","RCDPEAC",126,0)
 . S RCINM=$$INSNM(RCZ) ; INS CO NAME
"RTN","RCDPEAC",127,0)
 . I $S(RCINM=RCINS("FR")!(RCINM]RCINS("FR")):RCINM']RCINS("TO"),1:0) S OK=1
"RTN","RCDPEAC",128,0)
 ; 
"RTN","RCDPEAC",129,0)
 I OK=0 G INCQ  ;CHAMPVA and TRICARE do not matter - do not include
"RTN","RCDPEAC",130,0)
 I OK=1,TRI,CVA G INCQ  ;Add check for CHAMPVA and TRICARE
"RTN","RCDPEAC",131,0)
 S RCAINP=$P($G(^PRCA(430,RCZ,0)),U,2)
"RTN","RCDPEAC",132,0)
 I 'TRI,",30,31,32,"[(","_RCAINP_",") S OK=0   ;Only exclude TRICARE
"RTN","RCDPEAC",133,0)
 I 'CVA,",27,28,29,"[(","_RCAINP_",") S OK=0   ;Only exclude CHAMPVA
"RTN","RCDPEAC",134,0)
 ;
"RTN","RCDPEAC",135,0)
INCQ Q OK
"RTN","RCDPEAC",136,0)
 ;
"RTN","RCDPEAC",137,0)
INSNM(RCZ) ; Returns the name of the insurance co for bill ien RCZ file 430
"RTN","RCDPEAC",138,0)
 N NM
"RTN","RCDPEAC",139,0)
 S NM=$P($G(^DIC(36,+$$INS(RCZ),0)),U)
"RTN","RCDPEAC",140,0)
 Q NM
"RTN","RCDPEAC",141,0)
 ;
"RTN","RCDPEAC",142,0)
INS(RCZ) ; Returns ien of insurance co for bill ien RCZ from file 430
"RTN","RCDPEAC",143,0)
 N RC
"RTN","RCDPEAC",144,0)
 S RC=$P($G(^PRCA(430,RCZ,0)),U,9) ;DEBTOR
"RTN","RCDPEAC",145,0)
 Q $S($P($G(^RCD(340,+RC,0)),U)'["DIC(36":"",1:+^(0))
"RTN","RCDPEAC",146,0)
 ;
"RTN","RCDPEAC",147,0)
NEWPG(RCINS,RCNEW) ; Check for new page needed, output header
"RTN","RCDPEAC",148,0)
 ; RCINS = ins co selection criteria
"RTN","RCDPEAC",149,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPEAC",150,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPEAC",151,0)
 I RCNEW!(($Y+5)>IOSL) D
"RTN","RCDPEAC",152,0)
 . D:'$G(RCDISPTY) HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEAC",153,0)
 Q RCSTOP
"RTN","RCDPEAC",154,0)
 ;
"RTN","RCDPEAC",155,0)
EEOB(RCZ,RCEOB) ; Find all non-MRA  EEOBs for bill ien RCZ
"RTN","RCDPEAC",156,0)
 ; Function returns 1 if any valid EEOBs found, 0 if none
"RTN","RCDPEAC",157,0)
 ; RCEOB(eob ien)=date posted returned for valid EEOBs found -
"RTN","RCDPEAC",158,0)
 ;                pass by reference
"RTN","RCDPEAC",159,0)
 N OK,Z,Z0,Z1,Z00,DET,SN
"RTN","RCDPEAC",160,0)
 K RCEOB
"RTN","RCDPEAC",161,0)
 ;
"RTN","RCDPEAC",162,0)
 S (Z,OK,SN)=0
"RTN","RCDPEAC",163,0)
 F  S Z=$O(^IBM(361.1,"B",RCZ,Z)) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,4)'=1 D
"RTN","RCDPEAC",164,0)
 . ; retrieve the EEOB data from ERA Detail sub-entry
"RTN","RCDPEAC",165,0)
 . S (Z0,DET)=0
"RTN","RCDPEAC",166,0)
 . F  S Z0=$O(^RCY(344.4,"ADET",Z,Z0)) Q:'Z0  F  S DET=$O(^RCY(344.4,"ADET",Z,Z0,DET)) Q:'DET  D  ; ERA Detail
"RTN","RCDPEAC",167,0)
 . . S Z1=0 I DET S Z1=+$P($G(^RCY(344.4,Z0,1,DET,4)),U,3)  ; Receipt at ERA Detail (EEOB)
"RTN","RCDPEAC",168,0)
 . . I 'Z1 S Z1=+$P($G(^RCY(344.4,Z0,0)),U,8)  ; Receipt from ERA Level (receipts will not exist for each EEOB at ERA DETAIL for ERAs that are not auto-posted)
"RTN","RCDPEAC",169,0)
 . . S Z00=$P($G(^RCY(344.4,Z0,0)),U,14)  ; ERA DETAIL POST STATUS (344.4, .14)
"RTN","RCDPEAC",170,0)
 . . ; if ERA DETAIL POST STATUS is POSTED, POSTED MANUALLY, OR PARTIAL and has a receipt then include on report
"RTN","RCDPEAC",171,0)
 . . I Z1,(Z00=1)!(Z00=2)!(Z00=5) S SN=SN+1,RCEOB(Z,SN)=+$P($G(^RCY(344,Z1,0)),U,8),OK=1
"RTN","RCDPEAC",172,0)
 ;
"RTN","RCDPEAC",173,0)
 Q OK
"RTN","RCDPEAC",174,0)
 ;
"RTN","RCDPEAC",175,0)
SL1(RCSORT,RCZ) ; Function returns 1st sort level data from ien RCZ in file 430
"RTN","RCDPEAC",176,0)
 ; RCSORT = "PN" for patient name sort = "L4" for SSN last 4 sort
"RTN","RCDPEAC",177,0)
 N DAT
"RTN","RCDPEAC",178,0)
 I RCSORT="PN" S DAT=$P($G(^DPT(+$P($G(^PRCA(430,RCZ,0)),U,7),0)),U)
"RTN","RCDPEAC",179,0)
 I RCSORT="L4" S DAT=$P($G(^DPT(+$P($G(^PRCA(430,RCZ,0)),U,7),0)),U,9),DAT=$E(DAT,$L(DAT)-3,$L(DAT))
"RTN","RCDPEAC",180,0)
 Q $S($G(DAT)'="":DAT,1:" ")
"RTN","RCDPEAC",181,0)
 ;
"RTN","RCDPEAC",182,0)
DATE(RCEOB,START,END) ;Check for date range PRCA*4.5*298
"RTN","RCDPEAC",183,0)
 N RECDT,OK
"RTN","RCDPEAC",184,0)
 S RC0=$G(^IBM(361.1,RCEOB,0))
"RTN","RCDPEAC",185,0)
 S RECDT=$P(RC0,U,5)\1
"RTN","RCDPEAC",186,0)
 S OK=0
"RTN","RCDPEAC",187,0)
 I RECDT'<START,RECDT'>END S OK=1
"RTN","RCDPEAC",188,0)
 Q OK
"RTN","RCDPEAC",189,0)
 ;
"RTN","RCDPEAC",190,0)
SELECT(RCINS,RCSORT) ; Select insurance co and sort criteria and if output for EXCEL format is selected
"RTN","RCDPEAC",191,0)
 ; Function returns values selected for RCSORT and RCINS - passed by ref
"RTN","RCDPEAC",192,0)
 N RCQUIT,DONE,DIR,X,Y,%DT
"RTN","RCDPEAC",193,0)
 S (RCQUIT,DONE,RCLSTMGR)=0
"RTN","RCDPEAC",194,0)
 S DIR(0)="SA^A:ALL;S:SPECIFIC;R:RANGE",DIR("A")="RUN REPORT FOR (A)LL, (S)PECIFIC, OR (R)ANGE OF INSURANCE COMPANIES?: ",DIR("B")="ALL" W ! D ^DIR K DIR
"RTN","RCDPEAC",195,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",196,0)
 ;
"RTN","RCDPEAC",197,0)
 S RCINS=Y
"RTN","RCDPEAC",198,0)
 I RCINS="S" D  G:RCQUIT SELQ
"RTN","RCDPEAC",199,0)
 . W !
"RTN","RCDPEAC",200,0)
 . F  D LIST(.DIR,.RCINS) S DIR("A")="SELECT "_$S($O(RCINS("S",0)):"ANOTHER ",1:"")_"INSURANCE COMPANY"_$S($O(RCINS("S",0)):" (PRESS RETURN WHEN DONE)",1:"")_": ",DIR(0)="PAO^DIC(36,:AEMQ" D ^DIR K DIR D  Q:Y'>0
"RTN","RCDPEAC",201,0)
 .. I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAC",202,0)
 .. I Y>0 S RCINS("S",+Y)=""
"RTN","RCDPEAC",203,0)
 . I '$O(RCINS("S",0)) S RCQUIT=1 W !!,"NO INSURANCE COMPANIES SELECTED - NO REPORT GENERATED" S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEAC",204,0)
 ;
"RTN","RCDPEAC",205,0)
 I RCINS="R" D  I RCQUIT W !!,"NO INSURANCE COMPANY NAME RANGE SELECTED - NO REPORT GENERATED" S DIR(0)="E" D ^DIR K DIR G SELQ
"RTN","RCDPEAC",206,0)
 . W !
"RTN","RCDPEAC",207,0)
 . S DIR("?")="ENTER 1-30 UPPERCASE CHARACTERS OF THE FIRST NAME TO INCLUDE"
"RTN","RCDPEAC",208,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="START WITH INSURANCE COMPANY NAME: " D ^DIR K DIR
"RTN","RCDPEAC",209,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAC",210,0)
 . S RCINS("FR")=Y
"RTN","RCDPEAC",211,0)
 . S DIR("?")="ENTER 1-30 UPPERCASE CHARACTERS OF THE LAST NAME TO INCLUDE"
"RTN","RCDPEAC",212,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="GO TO INSURANCE COMPANY NAME: ",DIR("B")=$E(RCINS("FR"),1,27)_"ZZZ"
"RTN","RCDPEAC",213,0)
 . F  W ! D ^DIR Q:$S($D(DTOUT)!$D(DUOUT):1,1:RCINS("FR")']Y)  W !,"'GO TO' NAME MUST COME AFTER 'START WITH' NAME"
"RTN","RCDPEAC",214,0)
 . K DIR
"RTN","RCDPEAC",215,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAC",216,0)
 . S RCINS("TO")=Y
"RTN","RCDPEAC",217,0)
 S DIR(0)="SA^P:PATIENT NAME;L:LAST 4 OF PATIENT SSN",DIR("A")="WITHIN INS CO, SORT BY (P)ATIENT NAME OR (L)AST 4 OF SSN?: ",DIR("B")="PATIENT NAME" W ! D ^DIR K DIR
"RTN","RCDPEAC",218,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",219,0)
 S RCSORT=$S(Y="P":"PN",1:"L4")
"RTN","RCDPEAC",220,0)
 S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST",DIR("A")="SORT "_$S(RCSORT="PN":"PATIENT NAME",1:"LAST 4")_" (F)IRST TO LAST OR (L)AST TO FIRST?: ",DIR("B")="FIRST TO LAST" D ^DIR K DIR
"RTN","RCDPEAC",221,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",222,0)
 I Y="L" S RCSORT=RCSORT_";-"
"RTN","RCDPEAC",223,0)
 ;
"RTN","RCDPEAC",224,0)
 ; PRCA*4.5*298 - Add Date Range Prompts
"RTN","RCDPEAC",225,0)
 K DIR
"RTN","RCDPEAC",226,0)
 S DIR("?")="ENTER THE EARLIEST RECEIVED DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAC",227,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE (RECEIVED): " D ^DIR K DIR
"RTN","RCDPEAC",228,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G SELQ
"RTN","RCDPEAC",229,0)
 S START=Y
"RTN","RCDPEAC",230,0)
 K DIR
"RTN","RCDPEAC",231,0)
 S DIR("?")="ENTER THE LATEST RECEIVED DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAC",232,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAC",233,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="END DATE (RECEIVED): " D ^DIR K DIR
"RTN","RCDPEAC",234,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G SELQ
"RTN","RCDPEAC",235,0)
 S END=Y
"RTN","RCDPEAC",236,0)
 ;
"RTN","RCDPEAC",237,0)
 ; PRCA*4.5*298 - Add TRICARE Prompt
"RTN","RCDPEAC",238,0)
 S TRIC=$$INTRICAR^RCDPEARL G:TRIC<0 SELQ
"RTN","RCDPEAC",239,0)
 ;
"RTN","RCDPEAC",240,0)
 ; PRCA*4.5*298 - Add CHAMPVA Prompt
"RTN","RCDPEAC",241,0)
 S CHAM=$$INCHMPVA^RCDPEARL G:CHAM<0 SELQ
"RTN","RCDPEAC",242,0)
 ;
"RTN","RCDPEAC",243,0)
 ; PRCA*4.5*276 - Determine whether to gather data for Excel report.
"RTN","RCDPEAC",244,0)
 S RCDISPTY=$$DISPTY^RCDPEM3 G SELQ:RCDISPTY<0
"RTN","RCDPEAC",245,0)
 I RCDISPTY D INFO^RCDPEM6 S DONE=1 G SELQ
"RTN","RCDPEAC",246,0)
 ;
"RTN","RCDPEAC",247,0)
 ; PRCA*4.5*298 - Add ListManager Prompts
"RTN","RCDPEAC",248,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 SELQ
"RTN","RCDPEAC",249,0)
 ;
"RTN","RCDPEAC",250,0)
 S DONE=1
"RTN","RCDPEAC",251,0)
 ;
"RTN","RCDPEAC",252,0)
SELQ ;
"RTN","RCDPEAC",253,0)
 Q DONE
"RTN","RCDPEAC",254,0)
 ;
"RTN","RCDPEAC",255,0)
LIST(DIR,RCINS) ; Sets up help array for ins co selected in DIR("?")
"RTN","RCDPEAC",256,0)
 N CT,Z
"RTN","RCDPEAC",257,0)
 S CT=1
"RTN","RCDPEAC",258,0)
 I '$O(RCINS("S",0)) S DIR("?")="NO INSURANCE COMPANIES SELECTED" Q
"RTN","RCDPEAC",259,0)
 S DIR("?",1)="INSURANCE COMPANIES ALREADY SELECTED:"
"RTN","RCDPEAC",260,0)
 S Z=0 F  S Z=$O(RCINS("S",Z)) Q:'Z  S CT=CT+1,DIR("?",CT)="   "_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",261,0)
 S DIR("?")=" "
"RTN","RCDPEAC",262,0)
 Q
"RTN","RCDPEAC",263,0)
 ;
"RTN","RCDPEAC",264,0)
HDRBLD ; create the report header
"RTN","RCDPEAC",265,0)
 ; returns RCHDR,RCPGNUM,RCSTOP
"RTN","RCDPEAC",266,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAC",267,0)
 ;   RCHDR("PGNUM") = page number
"RTN","RCDPEAC",268,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAC",269,0)
 ;   RCHDR("RUNDATE") = date/time report generated
"RTN","RCDPEAC",270,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAC",271,0)
 ;   RCSTOP - flag to stop listing
"RTN","RCDPEAC",272,0)
 ;INPUT:
"RTN","RCDPEAC",273,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAC",274,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAC",275,0)
 ; RCLSTMGR
"RTN","RCDPEAC",276,0)
 ;
"RTN","RCDPEAC",277,0)
 N Z0
"RTN","RCDPEAC",278,0)
 S Z0=""
"RTN","RCDPEAC",279,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",280,0)
 ;
"RTN","RCDPEAC",281,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAC",282,0)
 . S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAC",283,0)
 . S RCHDR(1)="PATIENT NAME^SSN^BILL#^INS CO NAME^BALANCE^AMT BILLE^AMT PAID^TRACE#^DT REC'D^DT POST"
"RTN","RCDPEAC",284,0)
 ;
"RTN","RCDPEAC",285,0)
 N MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAC",286,0)
 S RCHDR(1)=$$HDRNM,HCNT=1  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAC",287,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEAC",288,0)
 ;
"RTN","RCDPEAC",289,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAC",290,0)
 I VAUTD=1 S Y="DIVISIONS: ALL"
"RTN","RCDPEAC",291,0)
 I VAUTD=0 D
"RTN","RCDPEAC",292,0)
 . S Z0=0,Y="DIVISIONS: " F X=1:1 S Z0=$O(VAUTD(Z0)) Q:Z0=""  S:X>1 Y=Y_", " S Y=Y_VAUTD(Z0)
"RTN","RCDPEAC",293,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAC",294,0)
 I RCINS="S" S Z=0,Z0="" F  S Z=$O(RCINS("S",Z)) Q:'Z  S Z0=Z0_$S(Z0'="":",",1:"")_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",295,0)
 S Z0="PAYERS: "_$S(RCINS="A":"ALL   ",RCINS="R":"RANGE FROM "_RCINS("FR")_"-"_RCINS("TO"),1:"")_Z0
"RTN","RCDPEAC",296,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Z0)\2)_Z0,Z0=""
"RTN","RCDPEAC",297,0)
 S Z0=Z0_"DATE RANGE: "_$$FMTE^XLFDT(START,"2Z")_" - "_$$FMTE^XLFDT(END,"2Z")_"   TRICARE: "_$S(TRIC=1:"YES",1:"NO")_"   "_"CHAMPVA: "_$S(CHAM=1:"YES",1:"NO")
"RTN","RCDPEAC",298,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAC",299,0)
 ;
"RTN","RCDPEAC",300,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAC",301,0)
 S Y="PATIENT NAME               SSN    BILL#",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",302,0)
 S Y="INS CO NAME                        BALANCE   AMT BILLED        AMT PAID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",303,0)
 S Y="   TRACE#                                             DT REC'D  DT POST",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",304,0)
 S Y=$TR($J("",IOM)," ","="),HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",305,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAC",306,0)
 Q
"RTN","RCDPEAC",307,0)
 ;
"RTN","RCDPEAC",308,0)
HDRLM ; create the list manager version of the report header
"RTN","RCDPEAC",309,0)
 ; returns RCHDR,RCPGNUM,RCSTOP
"RTN","RCDPEAC",310,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAC",311,0)
 ;   RCHDR("PGNUM") = page number
"RTN","RCDPEAC",312,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAC",313,0)
 ;   RCHDR("RUNDATE") = date/time report generated
"RTN","RCDPEAC",314,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAC",315,0)
 ;   RCSTOP - flag to stop listing
"RTN","RCDPEAC",316,0)
 ;INPUT:
"RTN","RCDPEAC",317,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAC",318,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAC",319,0)
 ; RCLSTMGR
"RTN","RCDPEAC",320,0)
 ;
"RTN","RCDPEAC",321,0)
 N Z0 S Z0=""
"RTN","RCDPEAC",322,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",323,0)
 N MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAC",324,0)
 S RCHDR("TITLE")=$$HDRNM,RCHDR("XECUTE")="Q"
"RTN","RCDPEAC",325,0)
 S RCHDR(1)="DATE RANGE: "_$$FMTE^XLFDT(START,"2Z")_" - "_$$FMTE^XLFDT(END,"2Z")_"     TRICARE: "_$S(TRIC=1:"YES",1:"NO")_"     CHAMPVA: "_$S(CHAM=1:"YES",1:"NO"),HCNT=1
"RTN","RCDPEAC",326,0)
 I VAUTD=1 S Y="DIVISIONS: ALL"
"RTN","RCDPEAC",327,0)
 I VAUTD=0 D
"RTN","RCDPEAC",328,0)
 . S Z0=0,Y="DIVISIONS: " F X=1:1 S Z0=$O(VAUTD(Z0)) Q:Z0=""  S:X>1 Y=Y_", " S Y=Y_VAUTD(Z0)
"RTN","RCDPEAC",329,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",330,0)
 I RCINS="S" S Z=0,Z0="" F  S Z=$O(RCINS("S",Z)) Q:'Z  S Z0=Z0_$S(Z0'="":",",1:"")_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",331,0)
 S Z0="PAYERS: "_$S(RCINS="A":"ALL     ",RCINS="R":"RANGE FROM "_RCINS("FR")_" - "_RCINS("TO"),1:"")_Z0
"RTN","RCDPEAC",332,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Z0
"RTN","RCDPEAC",333,0)
 I RCINS="A" S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAC",334,0)
 ;
"RTN","RCDPEAC",335,0)
 S Y="PATIENT NAME               SSN    BILL#",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",336,0)
 S Y="INS CO NAME                        BALANCE   AMT BILLED        AMT PAID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",337,0)
 S Y="   TRACE#                                             DT REC'D  DT POST",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",338,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAC",339,0)
 Q
"RTN","RCDPEAC",340,0)
 ;
"RTN","RCDPEAC",341,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPEAC",342,0)
HDRNM() Q "EDI LOCKBOX ACTIVE BILLS W/EEOB REPORT"
"RTN","RCDPEAC",343,0)
 ;
"RTN","RCDPEAD")
0^56^B15979535
"RTN","RCDPEAD",1,0)
RCDPEAD ;ALB/PJH - AUTO DECREASE ;Jun 06, 2014@19:11:19
"RTN","RCDPEAD",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAD",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAD",5,0)
 ;
"RTN","RCDPEAD",6,0)
EN ;Auto Decrease - applies to auto-posted claims only
"RTN","RCDPEAD",7,0)
 N PAYID,PAYNAM,RCAMT,RCDATE,RCDAY,RCDREC,RCERA,RCLINE,RCSTART
"RTN","RCDPEAD",8,0)
 ;Quit if medical auto posting is OFF or medical auto decrease is OFF
"RTN","RCDPEAD",9,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2)  Q:'$P($G(^RCY(344.61,1,0)),U,3)
"RTN","RCDPEAD",10,0)
 ;Get the RCDPE PARAMETER file #344.61 field.04 AUTO DECREASE MED DAYS DEFAULT value and
"RTN","RCDPEAD",11,0)
 ;calculate process date by subtracting this value from today's date
"RTN","RCDPEAD",12,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$P($G(^RCY(344.61,1,0)),U,4))
"RTN","RCDPEAD",13,0)
 ;Get the RCDPE PARAMETER file #344.61 field.05 AUTO DECREASE MED AMOUNT DEFAULT value
"RTN","RCDPEAD",14,0)
 S RCAMT=$P($G(^RCY(344.61,1,0)),U,5)
"RTN","RCDPEAD",15,0)
 ;Allow for a range of dates in future - currently only checks for RCDAY
"RTN","RCDPEAD",16,0)
 S RCDATE=$$FMADD^XLFDT(RCDAY,-1)
"RTN","RCDPEAD",17,0)
 ;Scan F index for ERA within date range
"RTN","RCDPEAD",18,0)
 F  S RCDATE=$O(^RCY(344.4,"F",RCDATE)) Q:'RCDATE  Q:(RCDATE\1)>RCDAY  D
"RTN","RCDPEAD",19,0)
 .;Scan "F" index of ERA file for ERA entries with AUTOPOST DATE field #4.03 matching RCDAY
"RTN","RCDPEAD",20,0)
 .S RCERA=0
"RTN","RCDPEAD",21,0)
 .F  S RCERA=$O(^RCY(344.4,"F",RCDATE,RCERA)) Q:'RCERA  D
"RTN","RCDPEAD",22,0)
 ..N RC3446,RCPARM
"RTN","RCDPEAD",23,0)
 ..;Check payer exclusion file for this ERA's payer
"RTN","RCDPEAD",24,0)
 ..S PAYID=$P($G(^RCY(344.4,RCERA,0)),U,3),PAYNAM=$P($G(^RCY(344.4,RCERA,0)),U,6)
"RTN","RCDPEAD",25,0)
 ..I PAYID'="",PAYNAM'="" S RCPARM=$O(^RCY(344.6,"CPID",PAYNAM,PAYID,"")) S:RCPARM'="" RC3446=$G(^RCY(344.6,RCPARM,0))
"RTN","RCDPEAD",26,0)
 ..;Ignore ERA if EXCLUDE MED CLAIMS POSTING  (#.06) or EXCLUDE MED CLAIMS DECREASE (#.07) fields set to 'yes'
"RTN","RCDPEAD",27,0)
 ..I $G(RC3446)]"" Q:$P(RC3446,U,6)=1  Q:$P(RC3446,U,7)=1
"RTN","RCDPEAD",28,0)
 ..;Build index to scratchpad for this ERA
"RTN","RCDPEAD",29,0)
 ..N RCARRAY D BUILD^RCDPEAP(RCERA,.RCARRAY)
"RTN","RCDPEAD",30,0)
 ..;Scan ERA DETAIL entries in #344.41 for auto-posted medical claims
"RTN","RCDPEAD",31,0)
 ..S RCLINE=0
"RTN","RCDPEAD",32,0)
 ..F  S RCLINE=$O(^RCY(344.4,"F",RCDATE,RCERA,RCLINE)) Q:'RCLINE  D
"RTN","RCDPEAD",33,0)
 ...;Ignore claim line if already auto decreased
"RTN","RCDPEAD",34,0)
 ...Q:$P($G(^RCY(344.4,RCERA,1,RCLINE,5)),U,3)
"RTN","RCDPEAD",35,0)
 ...;Get record detail
"RTN","RCDPEAD",36,0)
 ...S RCDREC=$G(^RCY(344.4,RCERA,1,RCLINE,0))
"RTN","RCDPEAD",37,0)
 ...;Get claim number RCBILL for the ERA line using EOB #361.1 pointer
"RTN","RCDPEAD",38,0)
 ...N COMMENT,EOBIEN,RCBAL,RCBILL,RCTRANDA
"RTN","RCDPEAD",39,0)
 ...;Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEAD",40,0)
 ...S EOBIEN=$P($G(^RCY(344.4,RCERA,1,RCLINE,0)),U,2),RCBILL=0
"RTN","RCDPEAD",41,0)
 ...;Get ^DGCR(399 pointer (DINUM for #430 file)
"RTN","RCDPEAD",42,0)
 ...S:EOBIEN RCBILL=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCBILL
"RTN","RCDPEAD",43,0)
 ...;If claim has been split/edit and claim changed in APAR do not auto decrease
"RTN","RCDPEAD",44,0)
 ...Q:$$SPLIT(RCERA,RCLINE,RCBILL,.RCARRAY)
"RTN","RCDPEAD",45,0)
 ...;Do not auto decrease if claim is referred to General Council
"RTN","RCDPEAD",46,0)
 ...Q:$P($G(^PRCA(430,RCBILL,6)),U,4)]""
"RTN","RCDPEAD",47,0)
 ...;Claim must be OPEN or ACTIVE
"RTN","RCDPEAD",48,0)
 ...N STATUS S STATUS=$P($G(^PRCA(430,RCBILL,0)),"^",8) I STATUS'=42,STATUS'=16 Q 
"RTN","RCDPEAD",49,0)
 ...;Do not auto decrease if claim principal balance is greater than auto decrease default amount
"RTN","RCDPEAD",50,0)
 ...S RCBAL=$P($G(^PRCA(430,RCBILL,7)),U) Q:RCBAL>RCAMT 
"RTN","RCDPEAD",51,0)
 ...;Check pending payments
"RTN","RCDPEAD",52,0)
 ...N PENDING S PENDING=$$PENDPAY^RCDPURET(RCBILL) K ^TMP($J,"RCDPUREC","PP") Q:PENDING>RCAMT
"RTN","RCDPEAD",53,0)
 ...;Apply contract adjustment for remaining balance on claim
"RTN","RCDPEAD",54,0)
 ...S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILL,-RCBAL,"","","",1) Q:'RCTRANDA
"RTN","RCDPEAD",55,0)
 ...;Add comment
"RTN","RCDPEAD",56,0)
 ...S COMMENT(1)="Auto-Decrease Adjustment Medical" D ADDCOMM^RCBEUTRA(RCTRANDA,.COMMENT)
"RTN","RCDPEAD",57,0)
 ...;Update auto-decrease indicator, auto decrease amount and auto decrease date
"RTN","RCDPEAD",58,0)
 ...N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR="7///1;8///"_RCBAL_";10///"_DT D ^DIE
"RTN","RCDPEAD",59,0)
 ..;Update last auto decrease date on ERA
"RTN","RCDPEAD",60,0)
 ..N DA,DIE,DR S DA=RCERA,DIE="^RCY(344.4,",DR="4.03///"_DT D ^DIE
"RTN","RCDPEAD",61,0)
 Q
"RTN","RCDPEAD",62,0)
 ;
"RTN","RCDPEAD",63,0)
SPLIT(RCSCR,RCLINE,RCBILL,RCARRAY) ;Check for SPLIT/EDIT in scratchpad
"RTN","RCDPEAD",64,0)
 ;Input RCSCR - IEN of #344.49
"RTN","RCDPEAD",65,0)
 ;      RCLINE - ERA detail line sequence number
"RTN","RCDPEAD",66,0)
 ;      RCBILL - IEN of #430
"RTN","RCDPEAD",67,0)
 ;      ARRAY - reference to passed array (from BUILD^RCDPEAP)
"RTN","RCDPEAD",68,0)
 ;Output return value 1/0 = Split/Not Split 
"RTN","RCDPEAD",69,0)
 N SUB,SUB1
"RTN","RCDPEAD",70,0)
 ;Find ERA line in scratchpad
"RTN","RCDPEAD",71,0)
 S SUB=$G(RCARRAY(RCLINE)) Q:'SUB 0
"RTN","RCDPEAD",72,0)
 ;Get n.001 line
"RTN","RCDPEAD",73,0)
 S SUB1=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB1 0
"RTN","RCDPEAD",74,0)
 ;Check sequence number is the same
"RTN","RCDPEAD",75,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),".")'=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U) 0
"RTN","RCDPEAD",76,0)
 ;Check that claim number is unchanged from original ERA
"RTN","RCDPEAD",77,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,7)=RCBILL 0
"RTN","RCDPEAD",78,0)
 ;Otherwise claim was edited (and should not be decreased)
"RTN","RCDPEAD",79,0)
 Q 1
"RTN","RCDPEADP")
0^57^B82856652
"RTN","RCDPEADP",1,0)
RCDPEADP ;OIFO-BAYPINES/PJH - AUTO-DECREASE REPORT ;Nov 23, 2014@12:48:50
"RTN","RCDPEADP",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEADP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEADP",4,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPEADP",5,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPEADP",6,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEADP",7,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPEADP",8,0)
 ;
"RTN","RCDPEADP",9,0)
RPT ; entry point for Auto-Decrease Adjustment report [RCDPE AUTO-DECREASE REPORT]
"RTN","RCDPEADP",10,0)
 N %ZIS,RCDISP,RCDIV,RCDTRNG,RCPAGE,RCPAY,RCPROG,RCRANGE,RCSORT,RCVAUTD,STANAM,STANUM,VAUTD,X,Y
"RTN","RCDPEADP",11,0)
 ;Initialize page and start point
"RTN","RCDPEADP",12,0)
 S (RCDTRNG,RCPAGE)=0,RCPROG="RCDPEADP"
"RTN","RCDPEADP",13,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEADP",14,0)
 D STADIV Q:'RCDIV
"RTN","RCDPEADP",15,0)
 ;Select sort criteria 
"RTN","RCDPEADP",16,0)
 S DIR(0)="SA^C:CLAIM;P:PAYER;N:PATIENT NAME;",DIR("A")="SORT BY (C)LAIM #, (P)AYER or PATIENT (N)AME?: ",DIR("B")="CLAIM" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEADP",17,0)
 S RCSORT=Y
"RTN","RCDPEADP",18,0)
 ;Select display order within sort
"RTN","RCDPEADP",19,0)
 S DIR("A")="SORT "_$S(RCSORT="C":"CLAIM",RCSORT="P":"PAYER",1:"PATIENT NAME")_" (F)IRST TO LAST OR (L)AST TO FIRST?: "
"RTN","RCDPEADP",20,0)
 S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST",DIR("B")="FIRST TO LAST" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEADP",21,0)
 I Y="L" S RCSORT=RCSORT_";-"
"RTN","RCDPEADP",22,0)
 ;Select Date Range for Report
"RTN","RCDPEADP",23,0)
 S RCRANGE=$$DTRNG() Q:RCRANGE=0
"RTN","RCDPEADP",24,0)
 ;Select Display Type
"RTN","RCDPEADP",25,0)
 S RCDISP=$$DISPTY() Q:RCDISP=-1
"RTN","RCDPEADP",26,0)
 ;Display capture information for Excel
"RTN","RCDPEADP",27,0)
 I RCDISP D INFO^RCDPEM6
"RTN","RCDPEADP",28,0)
 ;Select output device
"RTN","RCDPEADP",29,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEADP",30,0)
 ;Option to queue
"RTN","RCDPEADP",31,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPEADP",32,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEADP",33,0)
 .S ZTRTN="REPORT^RCDPEADP"
"RTN","RCDPEADP",34,0)
 .S ZTDESC="EDI LOCKBOX AUTO-DECREASE REPORT"
"RTN","RCDPEADP",35,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEADP",36,0)
 .D ^%ZTLOAD
"RTN","RCDPEADP",37,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPEADP",38,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPEADP",39,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEADP",40,0)
 ;
"RTN","RCDPEADP",41,0)
 ;Compile and Print Report
"RTN","RCDPEADP",42,0)
 D REPORT
"RTN","RCDPEADP",43,0)
 Q
"RTN","RCDPEADP",44,0)
 ;
"RTN","RCDPEADP",45,0)
REPORT ;Compile and print report
"RTN","RCDPEADP",46,0)
 U IO
"RTN","RCDPEADP",47,0)
 N DTOTAL,GLOB,GTOTAL,RCHDR,ZTREQ
"RTN","RCDPEADP",48,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEADP",49,0)
 S GLOB=$NA(^TMP(RCPROG,$J))
"RTN","RCDPEADP",50,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEADP",51,0)
 D COMPILE
"RTN","RCDPEADP",52,0)
 ;
"RTN","RCDPEADP",53,0)
 ; header information
"RTN","RCDPEADP",54,0)
 S RCHDR("START")=$$FMTE^XLFDT($P(RCRANGE,U,2),2)
"RTN","RCDPEADP",55,0)
 S RCHDR("END")=$$FMTE^XLFDT($P(RCRANGE,U,3),2)
"RTN","RCDPEADP",56,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"2S")
"RTN","RCDPEADP",57,0)
 ; Format Division filter
"RTN","RCDPEADP",58,0)
 S RCHDR("DIVISIONS")=$S(RCDIV=2:$$LINE(.RCVAUTD),1:"ALL")
"RTN","RCDPEADP",59,0)
 ;
"RTN","RCDPEADP",60,0)
 ;Display Report
"RTN","RCDPEADP",61,0)
 D DISP
"RTN","RCDPEADP",62,0)
 ;Clear ^TMP global
"RTN","RCDPEADP",63,0)
 K ^TMP(RCPROG,$J),^TMP("RCSELPAY",$J)
"RTN","RCDPEADP",64,0)
 D ^%ZISC  ; close device
"RTN","RCDPEADP",65,0)
 Q
"RTN","RCDPEADP",66,0)
 ;
"RTN","RCDPEADP",67,0)
COMPILE ;Generate the Auto-Decrease report ^TMP array
"RTN","RCDPEADP",68,0)
 N ADDATE,END,ERAIEN,RCNTR,RCRZ,STA,STNAM,STNUM
"RTN","RCDPEADP",69,0)
 ;
"RTN","RCDPEADP",70,0)
 ;Date Range
"RTN","RCDPEADP",71,0)
 S ADDATE=$$FMADD^XLFDT($P(RCRANGE,U,2),-1),END=$P(RCRANGE,U,3)
"RTN","RCDPEADP",72,0)
 S RCNTR=0  ; record counter
"RTN","RCDPEADP",73,0)
 ; ^RCY(344.4,0) = "ELECTRONIC REMITTANCE ADVICE^344.4I^"
"RTN","RCDPEADP",74,0)
 ;  G cross-ref.   REGULAR    WHOLE FILE (#344.4)
"RTN","RCDPEADP",75,0)
 ;  Field:  AUTO-POST DATE  (344.41,9)
"RTN","RCDPEADP",76,0)
 ;Scan G index for ERA within date range
"RTN","RCDPEADP",77,0)
 F  S ADDATE=$O(^RCY(344.4,"G",ADDATE)) Q:'ADDATE  Q:(ADDATE\1)>END  D
"RTN","RCDPEADP",78,0)
 .S ERAIEN=""
"RTN","RCDPEADP",79,0)
 .F  S ERAIEN=$O(^RCY(344.4,"G",ADDATE,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEADP",80,0)
 ..;Check division
"RTN","RCDPEADP",81,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEADP",82,0)
 ..I RCDIV=2,'$D(RCVAUTD(STA)) Q
"RTN","RCDPEADP",83,0)
 ..;Scan index for auto-decreased claim lines within the ERA
"RTN","RCDPEADP",84,0)
 ..S RCRZ=""
"RTN","RCDPEADP",85,0)
 ..;Save claim line detail to ^TMP global
"RTN","RCDPEADP",86,0)
 ..F  S RCRZ=$O(^RCY(344.4,"G",ADDATE,ERAIEN,RCRZ)) Q:'RCRZ  D SAVE
"RTN","RCDPEADP",87,0)
 Q
"RTN","RCDPEADP",88,0)
 ;
"RTN","RCDPEADP",89,0)
SAVE ;Put the data into the ^TMP global
"RTN","RCDPEADP",90,0)
 N AMOUNT,CARC,CLAIM,DATE,EOBIEN,PAYNAM,PTNAM,SUB,Y
"RTN","RCDPEADP",91,0)
 ;Payer name from ERA record
"RTN","RCDPEADP",92,0)
 S PAYNAM=$P($G(^RCY(344.4,ERAIEN,0)),U,6)
"RTN","RCDPEADP",93,0)
 ;Format Auto-Decrease date
"RTN","RCDPEADP",94,0)
 S DATE=$$FMTE^XLFDT(ADDATE,"2S")
"RTN","RCDPEADP",95,0)
 ;Auto-Decrease Amount
"RTN","RCDPEADP",96,0)
 S AMOUNT=$P($G(^RCY(344.4,ERAIEN,1,RCRZ,5)),U,4)
"RTN","RCDPEADP",97,0)
 Q:+AMOUNT=0
"RTN","RCDPEADP",98,0)
 ;Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEADP",99,0)
 S EOBIEN=+$P($G(^RCY(344.4,ERAIEN,1,RCRZ,0)),U,2)
"RTN","RCDPEADP",100,0)
 ;Claim
"RTN","RCDPEADP",101,0)
 S CLAIM=$$CLAIM(EOBIEN)
"RTN","RCDPEADP",102,0)
 ;Patient name from claim file #399
"RTN","RCDPEADP",103,0)
 S PTNAM=$$PNM4^RCDPEWL1(ERAIEN,RCRZ) S:PTNAM="" PTNAM="(unknown)"
"RTN","RCDPEADP",104,0)
 ;CARC code
"RTN","RCDPEADP",105,0)
 S CARC=$$CARC(EOBIEN)
"RTN","RCDPEADP",106,0)
 S RCNTR=RCNTR+1
"RTN","RCDPEADP",107,0)
 ;If EXCEL sorting is done in EXCEL
"RTN","RCDPEADP",108,0)
 I RCDISP S SUB="EXCEL",SUB("SORT")=$G(@GLOB@(SUB))+1,@GLOB@(SUB)=SUB("SORT")
"RTN","RCDPEADP",109,0)
 ;Otherwise sort by DATE and selected criteria
"RTN","RCDPEADP",110,0)
 E  S SUB=ADDATE,SUB("SORT")=$S($E(RCSORT)="C":CLAIM,$E(RCSORT)="P":PAYNAM,1:PTNAM)
"RTN","RCDPEADP",111,0)
 ;Update ^TMP global
"RTN","RCDPEADP",112,0)
 S @GLOB@(SUB,SUB("SORT"),RCNTR)=STNAM_U_STNUM_U_CLAIM_U_PTNAM_U_PAYNAM_U_AMOUNT_U_DATE_U_CARC
"RTN","RCDPEADP",113,0)
 ;Update totals for individual date
"RTN","RCDPEADP",114,0)
 S $P(DTOTAL(ADDATE),U)=$P($G(DTOTAL(ADDATE)),U)+1,$P(DTOTAL(ADDATE),U,2)=$P($G(DTOTAL(ADDATE)),U,2)+AMOUNT
"RTN","RCDPEADP",115,0)
 ;Update totals for date range
"RTN","RCDPEADP",116,0)
 S $P(GTOTAL,U)=$P($G(GTOTAL),U)+1,$P(GTOTAL,U,2)=$P($G(GTOTAL),U,2)+AMOUNT
"RTN","RCDPEADP",117,0)
 Q
"RTN","RCDPEADP",118,0)
 ;
"RTN","RCDPEADP",119,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEADP",120,0)
 N MODE,SUB,RCDATA,RCRDNUM,RCSTOP,SUB,Y
"RTN","RCDPEADP",121,0)
 ;
"RTN","RCDPEADP",122,0)
 ;use the selected device
"RTN","RCDPEADP",123,0)
 U IO
"RTN","RCDPEADP",124,0)
 ;
"RTN","RCDPEADP",125,0)
 S SUB="",RCSTOP=0,MODE=$S(RCSORT["-":-1,1:1)  ; mode for $ORDER
"RTN","RCDPEADP",126,0)
 F  S SUB=$O(@GLOB@(SUB)) Q:SUB=""  D  Q:RCSTOP
"RTN","RCDPEADP",127,0)
 .;Display Header
"RTN","RCDPEADP",128,0)
 .I RCPAGE D ASK(.RCSTOP,0) Q:RCSTOP
"RTN","RCDPEADP",129,0)
 .D HDR
"RTN","RCDPEADP",130,0)
 .;
"RTN","RCDPEADP",131,0)
 .S SUB("SORT")=""
"RTN","RCDPEADP",132,0)
 .F  S SUB("SORT")=$O(@GLOB@(SUB,SUB("SORT")),MODE) D:SUB("SORT")=""&('RCDISP) TOTALD(SUB) Q:SUB("SORT")=""  D  Q:RCSTOP
"RTN","RCDPEADP",133,0)
 ..S RCRDNUM=0 F  S RCRDNUM=$O(@GLOB@(SUB,SUB("SORT"),RCRDNUM)) Q:'RCRDNUM!RCSTOP  D
"RTN","RCDPEADP",134,0)
 ...S RCDATA=@GLOB@(SUB,SUB("SORT"),RCRDNUM)  ;Auto-Decreased Claim
"RTN","RCDPEADP",135,0)
 ...I RCDISP W !,RCDATA Q  ; Excel spreadsheet
"RTN","RCDPEADP",136,0)
 ...I $Y>(IOSL-6) D ASK(.RCSTOP,0) Q:RCSTOP  D HDR
"RTN","RCDPEADP",137,0)
 ...S Y=$E($P(RCDATA,U,3),1,12) ;CLAIM
"RTN","RCDPEADP",138,0)
 ...S $E(Y,15)=$E($P(RCDATA,U,4),1,20)  ;PATIENT
"RTN","RCDPEADP",139,0)
 ...S $E(Y,35)=$E($P(RCDATA,U,5),1,19) ;PAYER
"RTN","RCDPEADP",140,0)
 ...S $E(Y,55)=$J($P(RCDATA,U,6),7,2) ;AMOUNT
"RTN","RCDPEADP",141,0)
 ...S $E(Y,67)=$J($P(RCDATA,U,7),8) ;DATE
"RTN","RCDPEADP",142,0)
 ...S $E(Y,76)=$P(RCDATA,U,8) ;CARC
"RTN","RCDPEADP",143,0)
 ...W !,Y
"RTN","RCDPEADP",144,0)
 ;
"RTN","RCDPEADP",145,0)
 ;Grand totals
"RTN","RCDPEADP",146,0)
 I $D(GTOTAL) D
"RTN","RCDPEADP",147,0)
 .;Print grand total if not EXCEL
"RTN","RCDPEADP",148,0)
 .I 'RCSTOP,'RCDISP D TOTALG
"RTN","RCDPEADP",149,0)
 .;Report finished
"RTN","RCDPEADP",150,0)
 .I 'RCSTOP W !,$$ENDORPRT^RCDPEARL,! D ASK(.RCSTOP,1)
"RTN","RCDPEADP",151,0)
 ;
"RTN","RCDPEADP",152,0)
 ;Null Report
"RTN","RCDPEADP",153,0)
 I '$D(GTOTAL) D
"RTN","RCDPEADP",154,0)
 .D HDR
"RTN","RCDPEADP",155,0)
 .W !!,?26,"*** NO RECORDS TO PRINT ***",!
"RTN","RCDPEADP",156,0)
 ;
"RTN","RCDPEADP",157,0)
 ;Close device
"RTN","RCDPEADP",158,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEADP",159,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEADP",160,0)
 Q
"RTN","RCDPEADP",161,0)
 ;
"RTN","RCDPEADP",162,0)
ASK(STOP,TYP) ; Ask to continue, if TYP=1 then prompt to finish
"RTN","RCDPEADP",163,0)
 ; If passed by reference, RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEADP",164,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEADP",165,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEADP",166,0)
 S:$G(TYP)=1 DIR("A")="Enter RETURN to finish"
"RTN","RCDPEADP",167,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEADP",168,0)
 I ($D(DIRUT))!($D(DUOUT)) S STOP=1
"RTN","RCDPEADP",169,0)
 Q
"RTN","RCDPEADP",170,0)
 ;
"RTN","RCDPEADP",171,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEADP",172,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEADP",173,0)
 S DIR("?")="ENTER THE EARLIEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEADP",174,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEADP",175,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEADP",176,0)
 S BDATE=Y
"RTN","RCDPEADP",177,0)
 S DIR("?")="ENTER THE LATEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEADP",178,0)
 S DIR("B")=Y(0)
"RTN","RCDPEADP",179,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEADP",180,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEADP",181,0)
 S EDATE=Y
"RTN","RCDPEADP",182,0)
 Q
"RTN","RCDPEADP",183,0)
 ;
"RTN","RCDPEADP",184,0)
CARC(EOBIEN) ;Get first adjustment reason code from EOB
"RTN","RCDPEADP",185,0)
 N ADJSUB,ADJSUB1
"RTN","RCDPEADP",186,0)
 S ADJSUB=$O(^IBM(361.1,EOBIEN,10,0)) Q:'ADJSUB ""
"RTN","RCDPEADP",187,0)
 S ADJSUB1=$O(^IBM(361.1,EOBIEN,10,1,0)) Q:'ADJSUB1 ""
"RTN","RCDPEADP",188,0)
 Q $P($G(^IBM(361.1,EOBIEN,10,ADJSUB,1,ADJSUB1,0)),U)
"RTN","RCDPEADP",189,0)
 ;
"RTN","RCDPEADP",190,0)
CLAIM(EOBIEN) ;function, Get claim number from AR
"RTN","RCDPEADP",191,0)
 Q:'$G(EOBIEN)>0 "(no EOB IEN)"
"RTN","RCDPEADP",192,0)
 N CLAIM,CLAIMIEN,REC430
"RTN","RCDPEADP",193,0)
 ;Default to EOB claim
"RTN","RCDPEADP",194,0)
 S CLAIM=$$EXTERNAL^DILFD(344.41,.02,,EOBIEN)
"RTN","RCDPEADP",195,0)
 ;Get ^DGCR(399 pointer
"RTN","RCDPEADP",196,0)
 S CLAIMIEN=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'CLAIMIEN "(no Claim IEN)"  ;CLAIM
"RTN","RCDPEADP",197,0)
 ;Use DINUM to get AR Claim #430
"RTN","RCDPEADP",198,0)
 S REC430=$G(^PRCA(430,CLAIMIEN,0)) Q:$P(REC430,U)="" "(CLAIM not found)"  ;CLAIM
"RTN","RCDPEADP",199,0)
 ;Return claim (nnn-Knnnnnn)
"RTN","RCDPEADP",200,0)
 Q $P(REC430,U)
"RTN","RCDPEADP",201,0)
 ;
"RTN","RCDPEADP",202,0)
DISPTY() ; Get display/output type
"RTN","RCDPEADP",203,0)
 N DIR,DUOUT,Y
"RTN","RCDPEADP",204,0)
 S DIR(0)="Y"
"RTN","RCDPEADP",205,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPEADP",206,0)
 S DIR("B")="NO"
"RTN","RCDPEADP",207,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEADP",208,0)
 Q Y
"RTN","RCDPEADP",209,0)
 ;
"RTN","RCDPEADP",210,0)
DTRNG() ; Get the date range for the report
"RTN","RCDPEADP",211,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPEADP",212,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEADP",213,0)
 Q:RCSTART=-1 0
"RTN","RCDPEADP",214,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEADP",215,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEADP",216,0)
 Q 0
"RTN","RCDPEADP",217,0)
 ;
"RTN","RCDPEADP",218,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEADP",219,0)
 N ERAEOB,ERABILL,FOUND,STAIEN
"RTN","RCDPEADP",220,0)
 S (ERAEOB,ERABILL,FOUND)=""
"RTN","RCDPEADP",221,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEADP",222,0)
 D
"RTN","RCDPEADP",223,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB
"RTN","RCDPEADP",224,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL
"RTN","RCDPEADP",225,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEADP",226,0)
 .S STA=STAIEN
"RTN","RCDPEADP",227,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEADP",228,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2)
"RTN","RCDPEADP",229,0)
 Q
"RTN","RCDPEADP",230,0)
 ;
"RTN","RCDPEADP",231,0)
HDR ; Print the report header
"RTN","RCDPEADP",232,0)
 N MSG,Y,DIV,SUB,Z0,Z1
"RTN","RCDPEADP",233,0)
 ;
"RTN","RCDPEADP",234,0)
 I 'RCDISP D  Q:RCSTOP
"RTN","RCDPEADP",235,0)
 .S RCPAGE=RCPAGE+1
"RTN","RCDPEADP",236,0)
 .W @IOF
"RTN","RCDPEADP",237,0)
 .S MSG(1)="                     EDI LOCKBOX AUTO-DECREASE ADJUSTMENT REPORT "
"RTN","RCDPEADP",238,0)
 .S MSG(1)=MSG(1)_"       Page: "_RCPAGE
"RTN","RCDPEADP",239,0)
 .S MSG(2)="                        RUN DATE: "_RCHDR("RUNDATE")
"RTN","RCDPEADP",240,0)
 .S Z0="DIVISIONS: "_RCHDR("DIVISIONS")
"RTN","RCDPEADP",241,0)
 .S MSG(3)=$S($L(Z0)<75:$J("",75-$L(Z0)\2),1:"")_Z0
"RTN","RCDPEADP",242,0)
 .S MSG(4)="               DATE RANGE: "_RCHDR("START")_" - "_RCHDR("END")_" (Date Decrease Applied)"
"RTN","RCDPEADP",243,0)
 .S MSG(5)=""
"RTN","RCDPEADP",244,0)
 .S MSG(6)="CLAIM #       PATIENT NAME        PAYER              DECREASE AMT   DATE   CARC"
"RTN","RCDPEADP",245,0)
 .S MSG(7)="==============================================================================="
"RTN","RCDPEADP",246,0)
 .D EN^DDIOL(.MSG)
"RTN","RCDPEADP",247,0)
 I RCDISP D
"RTN","RCDPEADP",248,0)
 .W !,"STATION^STATION NUMBER^CLAIM #^PATIENT NAME^PAYER^DECREASE AMOUNT^DATE^CARC"
"RTN","RCDPEADP",249,0)
 Q
"RTN","RCDPEADP",250,0)
 ;
"RTN","RCDPEADP",251,0)
LINE(DIV) ;List selected stations
"RTN","RCDPEADP",252,0)
 N LINE,P,SUB
"RTN","RCDPEADP",253,0)
 S LINE="",SUB="",P=0
"RTN","RCDPEADP",254,0)
 F  S SUB=$O(DIV(SUB)) Q:'SUB  S P=P+1,$P(LINE,", ",P)=$G(DIV(SUB))
"RTN","RCDPEADP",255,0)
 Q LINE
"RTN","RCDPEADP",256,0)
 ;
"RTN","RCDPEADP",257,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEADP",258,0)
 ;Sort selection
"RTN","RCDPEADP",259,0)
 N DIR,DUOUT,Y
"RTN","RCDPEADP",260,0)
 S RCDIV=0
"RTN","RCDPEADP",261,0)
 ;Division selection - IA 664
"RTN","RCDPEADP",262,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEADP",263,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEADP",264,0)
 ;If ALL selected
"RTN","RCDPEADP",265,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEADP",266,0)
 ;If some DIVISIONS selected
"RTN","RCDPEADP",267,0)
 S RCDIV=2
"RTN","RCDPEADP",268,0)
 M RCVAUTD=VAUTD  ; save selected divisions
"RTN","RCDPEADP",269,0)
 Q
"RTN","RCDPEADP",270,0)
 ;
"RTN","RCDPEADP",271,0)
TOTALS ;Print totals for EXCEL
"RTN","RCDPEADP",272,0)
 N DAY,DAMT,DCNT
"RTN","RCDPEADP",273,0)
 S DAY=""
"RTN","RCDPEADP",274,0)
 F  S DAY=$O(DTOTAL(DAY)) Q:'DAY  D  Q:RCSTOP
"RTN","RCDPEADP",275,0)
 .;Day totals
"RTN","RCDPEADP",276,0)
 .D TOTALD(DAY)
"RTN","RCDPEADP",277,0)
 ;Grand totals
"RTN","RCDPEADP",278,0)
 D TOTALG
"RTN","RCDPEADP",279,0)
 Q
"RTN","RCDPEADP",280,0)
 ;
"RTN","RCDPEADP",281,0)
TOTALD(DAY) ;Total for a day
"RTN","RCDPEADP",282,0)
 N DCNT,DAMT,Y
"RTN","RCDPEADP",283,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEADP",284,0)
 S DCNT=$P(DTOTAL(DAY),U),DAMT=$P(DTOTAL(DAY),U,2)
"RTN","RCDPEADP",285,0)
 S Y="**TOTALS FOR DATE: "_$$FMTE^XLFDT(DAY,2),$E(Y,35)="    # OF DECREASE ADJUSTMENTS: "_DCNT
"RTN","RCDPEADP",286,0)
 W !!,Y
"RTN","RCDPEADP",287,0)
 S Y="",$E(Y,28)="TOTAL AMOUNT OF DECREASE ADJUSTMENTS: $"_$J(DAMT,3,2) W !,Y
"RTN","RCDPEADP",288,0)
 Q
"RTN","RCDPEADP",289,0)
 ;
"RTN","RCDPEADP",290,0)
TOTALG ;Overall report total
"RTN","RCDPEADP",291,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEADP",292,0)
 N Y
"RTN","RCDPEADP",293,0)
 W !!,"**** TOTALS FOR DATE RANGE:           # OF DECREASE ADJUSTMENTS: "_+$P(GTOTAL,U)
"RTN","RCDPEADP",294,0)
 S Y="",$E(Y,28)="TOTAL AMOUNT OF DECREASE ADJUSTMENTS: $"_$J((+$P(GTOTAL,U,2)),3,2)
"RTN","RCDPEADP",295,0)
 W !,Y,!
"RTN","RCDPEADP",296,0)
 Q
"RTN","RCDPEADP",297,0)
 ;
"RTN","RCDPEAP")
0^32^B192874498
"RTN","RCDPEAP",1,0)
RCDPEAP ;ALB/PJH - AUTO POST MATCHING EFT ERA PAIR ;Oct 15, 2014@12:36:51
"RTN","RCDPEAP",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP",5,0)
 ;
"RTN","RCDPEAP",6,0)
EN ;Auto-post ERA Receipts
"RTN","RCDPEAP",7,0)
 ;Process newly matched and matched but unprocessed ERAs
"RTN","RCDPEAP",8,0)
 D EN1
"RTN","RCDPEAP",9,0)
 ;Process previously processed ERA's 
"RTN","RCDPEAP",10,0)
 D EN2
"RTN","RCDPEAP",11,0)
 Q
"RTN","RCDPEAP",12,0)
 ;
"RTN","RCDPEAP",13,0)
EN1 ;Auto-post newly matched and matched but unprocessed ERA
"RTN","RCDPEAP",14,0)
 N RCRZ,RCEFTDA
"RTN","RCDPEAP",15,0)
 S RCRZ=0
"RTN","RCDPEAP",16,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = UNPOSTED
"RTN","RCDPEAP",17,0)
 F  S RCRZ=$O(^RCY(344.4,"E",0,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAP",18,0)
 .;Get EFT reference
"RTN","RCDPEAP",19,0)
 .S RCEFTDA=$O(^RCY(344.31,"AERA",RCRZ,"")) Q:'RCEFTDA
"RTN","RCDPEAP",20,0)
 .;Check that EFT funds were posted to FMS and Accepted by FMS 
"RTN","RCDPEAP",21,0)
 .N RCOK,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",22,0)
 .S RCOK=1
"RTN","RCDPEAP",23,0)
 .I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFTDA,0)),U,7) D  Q:'RCOK
"RTN","RCDPEAP",24,0)
 ..S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0)) ; Get deposit ticket and EFT receipt (CR - 8NZZ)
"RTN","RCDPEAP",25,0)
 ..I RCRECTDA N Z S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) I $E(Z)="A" Q  ; EFT Accepted by FMS
"RTN","RCDPEAP",26,0)
 ..S RCOK=0
"RTN","RCDPEAP",27,0)
 .;
"RTN","RCDPEAP",28,0)
 .;Auto-Post
"RTN","RCDPEAP",29,0)
 .D AUTOPOST(RCEFTDA,RCRZ)
"RTN","RCDPEAP",30,0)
 Q
"RTN","RCDPEAP",31,0)
 ;
"RTN","RCDPEAP",32,0)
 ; Process ERA
"RTN","RCDPEAP",33,0)
AUTOPOST(RCEFTDA,RCERA) ; 
"RTN","RCDPEAP",34,0)
 ; RCEFTDA = ien of file #344.31
"RTN","RCDPEAP",35,0)
 ; RCERA = ien of file #344.4
"RTN","RCDPEAP",36,0)
 ;
"RTN","RCDPEAP",37,0)
 ;Lock ERA
"RTN","RCDPEAP",38,0)
 L +^RCY(344.4,RCERA):5 Q:'$T 
"RTN","RCDPEAP",39,0)
 ;
"RTN","RCDPEAP",40,0)
 ;Build Scratchpad and Verify Lines
"RTN","RCDPEAP",41,0)
 N ALLOK,RCRCPTDA,RCSCR,RCTRDA,RCERR,RCLINES,ZEROBAL
"RTN","RCDPEAP",42,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP",43,0)
 S RCSCR=$$SCRPAD(RCERA)
"RTN","RCDPEAP",44,0)
 ; Re-set AUTO-POST STATUS  if unable to create scratchpad
"RTN","RCDPEAP",45,0)
 I 'RCSCR D SETSTA(RCERA,"@") Q
"RTN","RCDPEAP",46,0)
 ;
"RTN","RCDPEAP",47,0)
 ; ERA cannot be autoposted; remove any pre-existing value to the AUTO-POST STATUS (344.4, 4.02) so ERA can be processed manually in the Worklist
"RTN","RCDPEAP",48,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D SETSTA(RCERA,"@") Q
"RTN","RCDPEAP",49,0)
 ;
"RTN","RCDPEAP",50,0)
 ;Check if all lines can be posted
"RTN","RCDPEAP",51,0)
 S ALLOK=$$ALLOK(RCERA,RCSCR,.ZEROBAL,.RCLINES)
"RTN","RCDPEAP",52,0)
 ;
"RTN","RCDPEAP",53,0)
 ;If $$ALLOK post entire ERA and reset AUTO-POST STATUS = COMPLETE
"RTN","RCDPEAP",54,0)
 I ALLOK D POSTALL(RCERA)
"RTN","RCDPEAP",55,0)
 ;
"RTN","RCDPEAP",56,0)
 ; If 'ALLOK and 'ZEROBAL(matching postive/negative pairs to not balance out to zero), then ERA needs to go to the standard worklist for manual receipt processing
"RTN","RCDPEAP",57,0)
 I 'ALLOK,'ZEROBAL D SETSTA(RCERA,"@") G AUTOQ
"RTN","RCDPEAP",58,0)
 ;
"RTN","RCDPEAP",59,0)
 ;If 'ALLOK and some of the lines passed validation then post receipt to summary ERA and set AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",60,0)
 ;Un-posted lines fall to APAR list for processing.
"RTN","RCDPEAP",61,0)
 I 'ALLOK D POSTERA(RCERA,.RCLINES)
"RTN","RCDPEAP",62,0)
 ;Unlock ERA
"RTN","RCDPEAP",63,0)
AUTOQ D UNLOCKE
"RTN","RCDPEAP",64,0)
 Q
"RTN","RCDPEAP",65,0)
 ;
"RTN","RCDPEAP",66,0)
EN2 ;Auto-Post Previously Processed ERA
"RTN","RCDPEAP",67,0)
 N AUTORCPT,CLAIM,COMPLETE,EOBIEN,RCERA,RCIFN,RCDSUB
"RTN","RCDPEAP",68,0)
 S RCERA=0,AUTORCPT=1 ;Variable AUTORCPT suppresses #344 trigger update to ERA receipt field 
"RTN","RCDPEAP",69,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",70,0)
 F  S RCERA=$O(^RCY(344.4,"E",1,RCERA)) Q:'RCERA  D
"RTN","RCDPEAP",71,0)
 . ;Ignore if just posted in EN1^RCDPEAP
"RTN","RCDPEAP",72,0)
 . Q:$D(^TMP("RCDPEAP",$J,RCERA))
"RTN","RCDPEAP",73,0)
 . ;Build cross reference of ERA line to scratchpad line
"RTN","RCDPEAP",74,0)
 . N RCARRAY D BUILD(RCERA,.RCARRAY) Q:'RCARRAY 
"RTN","RCDPEAP",75,0)
 . ;Scan ERA for lines marked for auto-post
"RTN","RCDPEAP",76,0)
 . N LINE,RCLINES,RESULT,SUB,WLINE,ALLOK S RCDSUB=0,RCLINES=0,ALLOK=1
"RTN","RCDPEAP",77,0)
 . F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D
"RTN","RCDPEAP",78,0)
 . . ;Check if line is marked for auto post
"RTN","RCDPEAP",79,0)
 . . I '$P($G(^RCY(344.4,RCERA,1,RCDSUB,5)),U,2) S ALLOK=0 Q
"RTN","RCDPEAP",80,0)
 . . ;Get scratchpad node for this ERA line
"RTN","RCDPEAP",81,0)
 . . S RCLINES(RCDSUB)="0^UNABLE TO AUTO-POST CLAIM LINE",SUB=$G(RCARRAY(RCDSUB)) I 'SUB S ALLOK=0 Q
"RTN","RCDPEAP",82,0)
 . . ;Validate scratchpad line 
"RTN","RCDPEAP",83,0)
 . . I '$$VALID(RCERA,SUB,.RESULT) S LINE=$O(RESULT("")),$P(RCLINES(RCDSUB),U,3)=$S(RESULT(LINE)["GENERAL":7,RESULT(LINE)["BALANCE":6,1:5),ALLOK=0 Q
"RTN","RCDPEAP",84,0)
 . . ;Line is still OK to post
"RTN","RCDPEAP",85,0)
 . . S RCLINES(RCDSUB)="1^AUTO-POST",RCLINES=$G(RCLINES)+1
"RTN","RCDPEAP",86,0)
 . ;
"RTN","RCDPEAP",87,0)
 . ;If valid lines found create receipt for those lines
"RTN","RCDPEAP",88,0)
 . I RCLINES D 
"RTN","RCDPEAP",89,0)
 . . N RCEFTDA,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",90,0)
 . . ;Get EFT reference
"RTN","RCDPEAP",91,0)
 . . S RCEFTDA=$O(^RCY(344.31,"AERA",RCERA,"")) Q:'RCEFTDA
"RTN","RCDPEAP",92,0)
 . . ;Get deposit ticket and EFT receipt 
"RTN","RCDPEAP",93,0)
 . . S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0))
"RTN","RCDPEAP",94,0)
 . . ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",95,0)
 . . S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means an alpha suffix on receipt number
"RTN","RCDPEAP",96,0)
 . . D RCPTDET^RCDPEMA(RCERA,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",97,0)
 . . ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",98,0)
 . . I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@") Q 
"RTN","RCDPEAP",99,0)
 . . ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",100,0)
 . . I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",101,0)
 . . I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",102,0)
 . . ;Process Receipt to FMS
"RTN","RCDPEAP",103,0)
 . . D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D UNLOCKR Q
"RTN","RCDPEAP",104,0)
 . . ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",105,0)
 . . D ERAREF(RCERA,RCRCPTDA)
"RTN","RCDPEAP",106,0)
 . . ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",107,0)
 . . D UNLOCKR
"RTN","RCDPEAP",108,0)
 . ; update EEOB lines with receipt # or auto-post rejection reason
"RTN","RCDPEAP",109,0)
 . I $D(RCRCPTDA) D
"RTN","RCDPEAP",110,0)
 . . D RECDET^RCDPEAP1(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",111,0)
 . ; if no receipt created, then update rejection reason and reset MARK FOR AUTOPOST
"RTN","RCDPEAP",112,0)
 . E  D
"RTN","RCDPEAP",113,0)
 . . D REJDET^RCDPEAP1(RCERA,.RCLINES)
"RTN","RCDPEAP",114,0)
 . ;Determine if posting complete for this ERA
"RTN","RCDPEAP",115,0)
 . S COMPLETE=$$COMPLETE(RCERA)
"RTN","RCDPEAP",116,0)
 . ;If complete update ERA detail post status to POSTED
"RTN","RCDPEAP",117,0)
 . I COMPLETE S DIE="^RCY(344.4,",DR=".14////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",118,0)
 . ;Set ERA auto-post status and update latest auto-post date
"RTN","RCDPEAP",119,0)
 . S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////"_$S(COMPLETE:2,1:1),DA=RCERA D ^DIE
"RTN","RCDPEAP",120,0)
 ;Unlock ERA
"RTN","RCDPEAP",121,0)
 D UNLOCKE
"RTN","RCDPEAP",122,0)
 Q
"RTN","RCDPEAP",123,0)
 ;=====================================
"RTN","RCDPEAP",124,0)
 ;Functions/Sub-routines in alpha order
"RTN","RCDPEAP",125,0)
 ;=====================================
"RTN","RCDPEAP",126,0)
 ;
"RTN","RCDPEAP",127,0)
ACTIVE(EOBIEN) ;Verify claim is active
"RTN","RCDPEAP",128,0)
 ; EOBIEN - IEN of file 361.1
"RTN","RCDPEAP",129,0)
 N RCIFN,RCBILL,RCSTATUS
"RTN","RCDPEAP",130,0)
 ;Get EOB number (implies this is 3rd Party claim)
"RTN","RCDPEAP",131,0)
 I 'EOBIEN Q 0
"RTN","RCDPEAP",132,0)
 ;Get #399 claim number from EOB
"RTN","RCDPEAP",133,0)
 S RCIFN=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCIFN 0
"RTN","RCDPEAP",134,0)
 S RCBILL=$P($G(^DGCR(399,RCIFN,0)),U) Q:RCBILL="" 0  ; IA 4051
"RTN","RCDPEAP",135,0)
 ;Check if bill is cancelled or closed 
"RTN","RCDPEAP",136,0)
 S RCSTATUS=$P($G(^DGCR(399,RCIFN,0)),U,13)
"RTN","RCDPEAP",137,0)
 Q $S(RCSTATUS=0:0,RCSTATUS=7:0,1:1)
"RTN","RCDPEAP",138,0)
 ; 
"RTN","RCDPEAP",139,0)
ALLOK(RCERA,RCSCR,ZEROBAL,RCLINES) ;Verify which scratchpad lines are able to auto-post
"RTN","RCDPEAP",140,0)
 ; RCERA - 344.4 ien
"RTN","RCDPEAP",141,0)
 ; RCSCR - 344.49 ien
"RTN","RCDPEAP",142,0)
 ; ZEROBAL - flag that represents if ERA has zero payment balance after processing matched positive/negative pairs, passed by reference
"RTN","RCDPEAP",143,0)
 ; RCLINES - array of ERA line references (passed in by reference)
"RTN","RCDPEAP",144,0)
 ;           NOTE:  ORIGINAL ERA SEQUENCES (344.491, .09) can have multiple ERA line references separated by commas (e.g., 3,4)
"RTN","RCDPEAP",145,0)
 ; returns 0 or 1 (ALLOK)
"RTN","RCDPEAP",146,0)
 N ALLOK,AMT,ERALINE,STATUS,SUB,SUB1,CLAIM,WLINE,VERIFY
"RTN","RCDPEAP",147,0)
 K CLARRAY
"RTN","RCDPEAP",148,0)
 S (ZEROBAL,ALLOK)=1
"RTN","RCDPEAP",149,0)
 S (SUB,RCLINES)=0
"RTN","RCDPEAP",150,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP",151,0)
 . ;Get scratchpad line and data 
"RTN","RCDPEAP",152,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0)),AMT=$P(WLINE,U,3)
"RTN","RCDPEAP",153,0)
 . ;If integer sequence, get ERA line reference and verify flag and then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP",154,0)
 . I $P(WLINE,U)?1N.N S VERIFY=1 S ERALINE=$P(WLINE,U,9) S:'$P(WLINE,U,13) ALLOK=0,RCLINES(ERALINE)="0^^1",VERIFY=0 Q
"RTN","RCDPEAP",155,0)
 . ; ignore zero valued lines
"RTN","RCDPEAP",156,0)
 . Q:AMT=0  Q:AMT="0.00"
"RTN","RCDPEAP",157,0)
 . ;Get claim number from N.001 line - if not found treat as inactive
"RTN","RCDPEAP",158,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",159,0)
 . ;Save claim number
"RTN","RCDPEAP",160,0)
 . S $P(RCLINES(ERALINE),U,2)=$P($G(^PRCA(430,CLAIM,0)),U) Q:'VERIFY
"RTN","RCDPEAP",161,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",162,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",163,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",164,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S ALLOK=0,$P(RCLINES(ERALINE),U,3)=3 Q
"RTN","RCDPEAP",165,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",166,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S ALLOK=0,$P(RCLINES(ERALINE),U,3)=4 Q
"RTN","RCDPEAP",167,0)
 . ;Line is potentially postable
"RTN","RCDPEAP",168,0)
 . S $P(RCLINES(ERALINE),U)=1,$P(RCLINES(ERALINE),U,3)=$P(WLINE,U,6),RCLINES=$G(RCLINES)+1
"RTN","RCDPEAP",169,0)
 Q ALLOK
"RTN","RCDPEAP",170,0)
 ;
"RTN","RCDPEAP",171,0)
 ;
"RTN","RCDPEAP",172,0)
BUILD(RCSCR,ARRAY) ;Build list of ERA lines
"RTN","RCDPEAP",173,0)
 ;
"RTN","RCDPEAP",174,0)
 ;           RCSCR = ien of file 344.49
"RTN","RCDPEAP",175,0)
 ;           ARRAY = the array that will hold the list of ERA lines, passed by reference
"RTN","RCDPEAP",176,0)
 ;           
"RTN","RCDPEAP",177,0)
 N FOUND,SCRLINE,SUB,SUB1
"RTN","RCDPEAP",178,0)
 K ARRAY
"RTN","RCDPEAP",179,0)
 S SUB=0,ARRAY=0
"RTN","RCDPEAP",180,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D:SUB'["."
"RTN","RCDPEAP",181,0)
 . ;Get actual scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAP",182,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1
"RTN","RCDPEAP",183,0)
 . ;Ignore zero lines
"RTN","RCDPEAP",184,0)
 . Q:'$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,3)
"RTN","RCDPEAP",185,0)
 . ;Index scratchpad line by ERA sequence 
"RTN","RCDPEAP",186,0)
 . S ARRAY($P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,9))=SUB1,ARRAY=$G(ARRAY)+1
"RTN","RCDPEAP",187,0)
 Q
"RTN","RCDPEAP",188,0)
 ;
"RTN","RCDPEAP",189,0)
CHECKPAY(ARRAY,CLAIM) ;Check balance versus payments
"RTN","RCDPEAP",190,0)
 ;     ARRAY = array of claim numbers and respective payment amounts
"RTN","RCDPEAP",191,0)
 ;             e.g. ARRAY(430 ien) = 123.04
"RTN","RCDPEAP",192,0)
 ;     CLAIM = AR BILL (344.491, .07) - IEN of file 430
"RTN","RCDPEAP",193,0)
 Q:'CLAIM 0
"RTN","RCDPEAP",194,0)
 ; get the payment amount to be posted to the claim
"RTN","RCDPEAP",195,0)
 S AMT=ARRAY(CLAIM)
"RTN","RCDPEAP",196,0)
 ;Payment exceeds principle balance
"RTN","RCDPEAP",197,0)
 Q:AMT>$P($G(^PRCA(430,CLAIM,7)),U) 0
"RTN","RCDPEAP",198,0)
 ;Check pending payments for claim
"RTN","RCDPEAP",199,0)
 N PENDING S PENDING=$$PENDPAY^RCDPURET(CLAIM) K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPEAP",200,0)
 ;Pending payments is > billed
"RTN","RCDPEAP",201,0)
 I PENDING>AMT Q 0
"RTN","RCDPEAP",202,0)
 ;otherwise OK to post payment
"RTN","RCDPEAP",203,0)
 Q 1
"RTN","RCDPEAP",204,0)
 ; 
"RTN","RCDPEAP",205,0)
CLEAR(DA) ;Clear scratchpad
"RTN","RCDPEAP",206,0)
 N DIK S DIK="^RCY(344.49," D ^DIK
"RTN","RCDPEAP",207,0)
 Q
"RTN","RCDPEAP",208,0)
 ;
"RTN","RCDPEAP",209,0)
COMPLETE(RCSCR) ;Check for non-zero lines without a receipt
"RTN","RCDPEAP",210,0)
 ;
"RTN","RCDPEAP",211,0)
 ;           RCSCR = ien of file 344.49
"RTN","RCDPEAP",212,0)
 ;           returns status of check (1 or 0)
"RTN","RCDPEAP",213,0)
 N RCSUB,SCRSUB,COMPLETE,SCRLINE,RCERA
"RTN","RCDPEAP",214,0)
 ;Default to complete
"RTN","RCDPEAP",215,0)
 S SCRSUB=0,COMPLETE=1,RCERA=RCSCR
"RTN","RCDPEAP",216,0)
 ;Scan scratchpad
"RTN","RCDPEAP",217,0)
 F  S SCRSUB=$O(^RCY(344.49,RCSCR,1,SCRSUB)) Q:'SCRSUB  D  Q:'COMPLETE
"RTN","RCDPEAP",218,0)
 . ;Ignore zero and split lines (splitting line should not change balance)
"RTN","RCDPEAP",219,0)
 . S SCRLINE=$G(^RCY(344.49,RCSCR,1,SCRSUB,0)) Q:$P(SCRLINE,U)'?1N.N  Q:$P(SCRLINE,U,3)=0  Q:$P(SCRLINE,U,3)="0.00"
"RTN","RCDPEAP",220,0)
 . ;Check if non-zero line has receipt on ERA, DETAIL line
"RTN","RCDPEAP",221,0)
 . S RCSUB=$P(SCRLINE,U,9) I RCSUB,$P($G(^RCY(344.4,RCERA,1,RCSUB,4)),U,3)]"" Q
"RTN","RCDPEAP",222,0)
 . ;Otherwise more AUTO-posting to do
"RTN","RCDPEAP",223,0)
 . S COMPLETE=0
"RTN","RCDPEAP",224,0)
 Q COMPLETE
"RTN","RCDPEAP",225,0)
 ;
"RTN","RCDPEAP",226,0)
ERAREF(RCSCR,RCRCPTDA) ; update ERA reference and EFT record IEN in file 344
"RTN","RCDPEAP",227,0)
 ; RCSCR - IEN of record in file 344.49
"RTN","RCDPEAP",228,0)
 ; RCRCPTDA - ien of record in file 344 (receipt ien)
"RTN","RCDPEAP",229,0)
 N Z,DR,DIE,DA
"RTN","RCDPEAP",230,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEAP",231,0)
 S DIE="^RCY(344,",DA=RCRCPTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"") D ^DIE
"RTN","RCDPEAP",232,0)
 Q
"RTN","RCDPEAP",233,0)
 ;
"RTN","RCDPEAP",234,0)
 ;
"RTN","RCDPEAP",235,0)
NOTOK(RCSCR) ;Verify all scratchpad lines passed auto verify (V)
"RTN","RCDPEAP",236,0)
 ;
"RTN","RCDPEAP",237,0)
 ;           RCSCR = ien of file 344.49
"RTN","RCDPEAP",238,0)
 ;           returns status of check (1 or 0)
"RTN","RCDPEAP",239,0)
 N NOTOK,SUB
"RTN","RCDPEAP",240,0)
 S SUB=0,NOTOK=0
"RTN","RCDPEAP",241,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB  D  Q:NOTOK
"RTN","RCDPEAP",242,0)
 . ;Set NOTOK if any single line is unverified
"RTN","RCDPEAP",243,0)
 . S:$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U,13)'=1 NOTOK=1
"RTN","RCDPEAP",244,0)
 Q NOTOK
"RTN","RCDPEAP",245,0)
 ;
"RTN","RCDPEAP",246,0)
POSTALL(RCERA) ; all lines in ERA get posted on first attempt of auto-post
"RTN","RCDPEAP",247,0)
 ; 
"RTN","RCDPEAP",248,0)
 ;         RCERA = ien of 344.4
"RTN","RCDPEAP",249,0)
 ;
"RTN","RCDPEAP",250,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",251,0)
 S RCRCPTDA=$$BLDRCPT^RCDPUREC(DT,"",+$O(^RC(341.1,"AC",14,0)))  ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means no alpha suffix on receipt number
"RTN","RCDPEAP",252,0)
 D RCPTDET^RCDPEM(RCSCR,RCRCPTDA,.RCERR) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEAP",253,0)
 ;
"RTN","RCDPEAP",254,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",255,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@") Q
"RTN","RCDPEAP",256,0)
 ;
"RTN","RCDPEAP",257,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",258,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",259,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",260,0)
 ;
"RTN","RCDPEAP",261,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",262,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@"),UNLOCKR Q
"RTN","RCDPEAP",263,0)
 ;
"RTN","RCDPEAP",264,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",265,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",266,0)
 ;
"RTN","RCDPEAP",267,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",268,0)
 D UNLOCKR
"RTN","RCDPEAP",269,0)
 ;
"RTN","RCDPEAP",270,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",271,0)
 S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",272,0)
 ;Set ERA auto-post status to 'complete' and update latest auto-post date
"RTN","RCDPEAP",273,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////2",DA=RCERA D ^DIE
"RTN","RCDPEAP",274,0)
 ;Update auto-post date for each claim line
"RTN","RCDPEAP",275,0)
 N RCLINE,RCSCSUB,RCSCD0
"RTN","RCDPEAP",276,0)
 S RCSCSUB=0
"RTN","RCDPEAP",277,0)
 F  S RCSCSUB=$O(^RCY(344.49,RCERA,1,RCSCSUB)) Q:'RCSCSUB  D
"RTN","RCDPEAP",278,0)
 . S RCSCD0=$G(^RCY(344.49,RCERA,1,RCSCSUB,0))
"RTN","RCDPEAP",279,0)
 . ;Ignore if zero value (line not on receipt) otherwise get original ERA line sequence
"RTN","RCDPEAP",280,0)
 . Q:'+$P(RCSCD0,U,3)  S RCLINE=$P(RCSCD0,U,9) Q:'RCLINE
"RTN","RCDPEAP",281,0)
 . ;Update ERA line with receipt number and auto-post date
"RTN","RCDPEAP",282,0)
 . N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".25////"_RCRCPTDA_";9////"_DT D ^DIE
"RTN","RCDPEAP",283,0)
 Q
"RTN","RCDPEAP",284,0)
 ;
"RTN","RCDPEAP",285,0)
POSTERA(RCERA,RCLINES) ; only some of the EEOB lines passed validation on first attempt (DAY 1) of auto-post
"RTN","RCDPEAP",286,0)
 ; therefore assign the receipt number and 'partial' post status to ERA summary
"RTN","RCDPEAP",287,0)
 ;         RCERA = ien of 344.4
"RTN","RCDPEAP",288,0)
 ;         RCLINES = array of ERA line references
"RTN","RCDPEAP",289,0)
 ;
"RTN","RCDPEAP",290,0)
 ; no lines passed validation;  at lease 1 EEOB line needs to pass validation before assigning a receipt to the ERA
"RTN","RCDPEAP",291,0)
 I RCLINES=0 S RCRCPTDA="" G POSTERAQ
"RTN","RCDPEAP",292,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",293,0)
 S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOXA
"RTN","RCDPEAP",294,0)
 D RCPTDET^RCDPEMA(RCSCR,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",295,0)
 ;
"RTN","RCDPEAP",296,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",297,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@") Q 
"RTN","RCDPEAP",298,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",299,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",300,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",301,0)
 ;
"RTN","RCDPEAP",302,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",303,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@"),UNLOCKR Q
"RTN","RCDPEAP",304,0)
 ;
"RTN","RCDPEAP",305,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",306,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",307,0)
 ;
"RTN","RCDPEAP",308,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",309,0)
 D UNLOCKR
"RTN","RCDPEAP",310,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",311,0)
 S DIE="^RCY(344.4,",DR=".14////5;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",312,0)
POSTERAQ ; 
"RTN","RCDPEAP",313,0)
 D POSTLNS(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",314,0)
 Q
"RTN","RCDPEAP",315,0)
 ;
"RTN","RCDPEAP",316,0)
POSTLNS(RCERA,RCRCPTDA,RCLINES) ; this subroutine should only be called when some of the EEOB lines
"RTN","RCDPEAP",317,0)
 ;                                passed validation on FIRST attempt (DAY 1) of auto-post
"RTN","RCDPEAP",318,0)
 ;         RCERA = ien of ERA entry in 344.4
"RTN","RCDPEAP",319,0)
 ;         RCRCPTDA = ien of receipt entry in 344 or undefined if receipt not created since none of the lines passed validation
"RTN","RCDPEAP",320,0)
 ;         RCLINES = array of ERA line references
"RTN","RCDPEAP",321,0)
 ;
"RTN","RCDPEAP",322,0)
 ;Mark ERA as processed to prevent reprocessing in EN2^RCDPEAP which runs next
"RTN","RCDPEAP",323,0)
 S ^TMP("RCDPEAP",$J,RCERA)=""
"RTN","RCDPEAP",324,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP",325,0)
 ;Update individual claim lines on ERA
"RTN","RCDPEAP",326,0)
 N RCLIN,DA,DIE,DR,LNUM,RCI,REJECT
"RTN","RCDPEAP",327,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP",328,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP",329,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP",330,0)
 . ;get all ERA line references (e.g. RCLINES(RCLIN) could have multiple line # referencese) 
"RTN","RCDPEAP",331,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line.
"RTN","RCDPEAP",332,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP",333,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP",334,0)
 . . ;If not posted then the AUTO-POST REJECTION REASON (344.41,5) needs to be updated ;otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP",335,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP",336,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT
"RTN","RCDPEAP",337,0)
 . . D ^DIE
"RTN","RCDPEAP",338,0)
 .;Set ERA AUTO-POST STATUS = PARTIAL and update auto-post date
"RTN","RCDPEAP",339,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",340,0)
 Q
"RTN","RCDPEAP",341,0)
 ;
"RTN","RCDPEAP",342,0)
SCRPAD(RCERA) ;Build Scratchpad entry in #344.49 for the ERA
"RTN","RCDPEAP",343,0)
 ;
"RTN","RCDPEAP",344,0)
 N RC0,RC5,RCSCR,RCDAT,X
"RTN","RCDPEAP",345,0)
 S RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEAP",346,0)
 ;Ignore is this ERA already has a receipt
"RTN","RCDPEAP",347,0)
 I +$P(RC0,U,8) Q 0
"RTN","RCDPEAP",348,0)
 ;Ignore if this is zero ERA
"RTN","RCDPEAP",349,0)
 I +$P(RC0,U,5)=0 Q 0
"RTN","RCDPEAP",350,0)
 ;Ignore if this is not an ERA for an EFT
"RTN","RCDPEAP",351,0)
 I "^ACH^"'[(U_$P(RC0,U,15)_U) Q 0
"RTN","RCDPEAP",352,0)
 ; Scratchpad already exists
"RTN","RCDPEAP",353,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0)) I RCSCR G SCRPADX
"RTN","RCDPEAP",354,0)
 ;Create new Scratchpad
"RTN","RCDPEAP",355,0)
 S RCSCR=+$$ADDREC^RCDPEWL(RCERA,.RCDAT) I 'RCSCR Q 0
"RTN","RCDPEAP",356,0)
 ;Add all the ERA lines to the Scratchpad entry
"RTN","RCDPEAP",357,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEAP",358,0)
SCRPADX ;Return Scratchpad IEN
"RTN","RCDPEAP",359,0)
 Q RCSCR
"RTN","RCDPEAP",360,0)
 ;
"RTN","RCDPEAP",361,0)
SETSTA(DA,STATUS) ;Set ERA auto-post status
"RTN","RCDPEAP",362,0)
 N DIE,DR
"RTN","RCDPEAP",363,0)
 S DIE="^RCY(344.4,",DR="4.02////"_STATUS D ^DIE
"RTN","RCDPEAP",364,0)
 Q
"RTN","RCDPEAP",365,0)
 ;
"RTN","RCDPEAP",366,0)
UNLOCKR ;Unlock ERA receipt and deposit ticket
"RTN","RCDPEAP",367,0)
 L -^RCY(344,RCRCPTDA)
"RTN","RCDPEAP",368,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPEAP",369,0)
 Q
"RTN","RCDPEAP",370,0)
 ;
"RTN","RCDPEAP",371,0)
UNLOCKE ;Unlock ERA
"RTN","RCDPEAP",372,0)
 L -^RCY(344.4,RCERA)
"RTN","RCDPEAP",373,0)
 Q
"RTN","RCDPEAP",374,0)
 ;
"RTN","RCDPEAP",375,0)
VALID(RCSCR,SCRLINE,RCARRAY) ;Validates Scratchpad line - Used by EN2^RCDPEAP and APAR/Mark for Auto-post
"RTN","RCDPEAP",376,0)
 ;Input
"RTN","RCDPEAP",377,0)
 ;  RCSCR   - #344.4/#344.49 file IEN
"RTN","RCDPEAP",378,0)
 ;  SCRLINE - Subscript of first scratchpad entry for the ERA line
"RTN","RCDPEAP",379,0)
 ;  RCARRAY - Passed reference to result array
"RTN","RCDPEAP",380,0)
 ;Output
"RTN","RCDPEAP",381,0)
 ;  OK      - Boolean 1 or 0
"RTN","RCDPEAP",382,0)
 ;  RCARRAY - Array of claim(s) which fail validation
"RTN","RCDPEAP",383,0)
 ;
"RTN","RCDPEAP",384,0)
 ;            e.g  line number 2
"RTN","RCDPEAP",385,0)
 ;                 RCARRAY(2.001)="K800001^NOT AN ACTIVE CLAIM"
"RTN","RCDPEAP",386,0)
 ;
"RTN","RCDPEAP",387,0)
 ;            e.g. split line number 2
"RTN","RCDPEAP",388,0)
 ;                 RCARRAY(2.001)="K800002^CLAIM REFERRED TO GENERAL COUNCIL"
"RTN","RCDPEAP",389,0)
 ;                 RCARRAY(2.006)="K800003^PAYMENT EXCEEDS CLAIM BALANCE"
"RTN","RCDPEAP",390,0)
 ; 
"RTN","RCDPEAP",391,0)
 N CLAIM,DONE,SEQ,SEQ1,SUB,STATUS,WLINE
"RTN","RCDPEAP",392,0)
 K RCARRAY,CLARRAY
"RTN","RCDPEAP",393,0)
 S SUB=SCRLINE,SEQ=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U),DONE=0
"RTN","RCDPEAP",394,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:SUB=""  D  Q:DONE
"RTN","RCDPEAP",395,0)
 . ;Get scratchpad N.001 line and data
"RTN","RCDPEAP",396,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB,0)),SEQ1=$P(WLINE,".") I SEQ1'=SEQ S DONE=1 Q
"RTN","RCDPEAP",397,0)
 . ;Get claim number from N.00N line - ignore suspense lines 
"RTN","RCDPEAP",398,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM Q
"RTN","RCDPEAP",399,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",400,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^NOT AN ACTIVE CLAIM" Q 
"RTN","RCDPEAP",401,0)
 . ;check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",402,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT EXCEEDS CLAIM BALANCE" Q
"RTN","RCDPEAP",403,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",404,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^CLAIM REFERRED TO GENERAL COUNCIL" Q
"RTN","RCDPEAP",405,0)
 . ;check that payment is not negative
"RTN","RCDPEAP",406,0)
 . I $P(WLINE,U,6)<0 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT AMOUNT IS NEGATIVE" Q
"RTN","RCDPEAP",407,0)
 ;Returns 1 if line is OK
"RTN","RCDPEAP",408,0)
 Q $S($O(RCARRAY(""))]"":0,1:1)
"RTN","RCDPEAP",409,0)
 ;
"RTN","RCDPEAP1")
0^96^B28791355
"RTN","RCDPEAP1",1,0)
RCDPEAP1 ;ALB/KML - AUTO POST MATCHING EFT ERA PAIR - CONT. ;Jun 06, 2014@19:11:19
"RTN","RCDPEAP1",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP1",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP1",5,0)
 ;
"RTN","RCDPEAP1",6,0)
 ;-------------------
"RTN","RCDPEAP1",7,0)
 ;RCDPEM0 SUBROUTINES
"RTN","RCDPEAP1",8,0)
 ;-------------------
"RTN","RCDPEAP1",9,0)
AUTOCHK(RCERA) ;Verify if ERA can be auto-posted - PRE-CHECK USED IN RCDPEM0
"RTN","RCDPEAP1",10,0)
 N NOTOK,RCDSUB,RCD0,RCSCR
"RTN","RCDPEAP1",11,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",12,0)
 ;Check for exceptions
"RTN","RCDPEAP1",13,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",14,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",15,0)
 . ;Exception exists if INVALID BILL NUMBER field is populated in #344.41
"RTN","RCDPEAP1",16,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0)) S:($P(RCD0,U,5)]"") NOTOK=1
"RTN","RCDPEAP1",17,0)
 ;Cannot auto-post if exceptions exist
"RTN","RCDPEAP1",18,0)
 Q:NOTOK 0
"RTN","RCDPEAP1",19,0)
 ; Ignore ERA if ERA level Adjustments exist
"RTN","RCDPEAP1",20,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q 0
"RTN","RCDPEAP1",21,0)
 ;Create scratchpad
"RTN","RCDPEAP1",22,0)
 S RCSCR=$$SCRPAD^RCDPEAP(RCERA) Q:'RCSCR 0
"RTN","RCDPEAP1",23,0)
 ;Ignore ERA if claim level adjustments without payment exist
"RTN","RCDPEAP1",24,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",25,0)
 ; ERA needs to drop to standard worklist if adjustment between matching 
"RTN","RCDPEAP1",26,0)
 ;positive/negative does not create a zero balance
"RTN","RCDPEAP1",27,0)
 I '$$ZEROBAL(RCSCR) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",28,0)
 ;Clear scratchpad
"RTN","RCDPEAP1",29,0)
 D CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",30,0)
 ;This is valid auto-post - return to MATCH^RCPDEM0
"RTN","RCDPEAP1",31,0)
 Q 1
"RTN","RCDPEAP1",32,0)
 ;
"RTN","RCDPEAP1",33,0)
EXCLUDE(RCERA) ;Verify if auto-posting is allowed for this Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",34,0)
 ;Not allowed if medical auto-posting is switched off
"RTN","RCDPEAP1",35,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2) 1
"RTN","RCDPEAP1",36,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",37,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",38,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",39,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",40,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",41,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",42,0)
 ;If payer table entry found check if payer is excluded from medical auto-post
"RTN","RCDPEAP1",43,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,6)=1 1
"RTN","RCDPEAP1",44,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",45,0)
 Q 0
"RTN","RCDPEAP1",46,0)
 ;
"RTN","RCDPEAP1",47,0)
PHARM(RCERA) ;Check if ERA is for Pharmacy only (ECME number on first line) - CALLED FROM RCDPEM0
"RTN","RCDPEAP1",48,0)
 N SUB S SUB=$O(^RCY(344.4,RCERA,1,0)) Q:'SUB 0
"RTN","RCDPEAP1",49,0)
 Q:$P($G(^RCY(344.4,RCERA,1,SUB,4)),U,2)]"" 1
"RTN","RCDPEAP1",50,0)
 Q 0
"RTN","RCDPEAP1",51,0)
 ;
"RTN","RCDPEAP1",52,0)
RECDET(RCERA,RCRCPTDA,RCLINES) ; called on subsequent attempts of auto-post for a given ERA (DAY 2, DAY 3, ex.)
"RTN","RCDPEAP1",53,0)
 ;  update ERA with receipt or if not posted then update the AUTO-POST REJECTION REASON (344.41,5)
"RTN","RCDPEAP1",54,0)
 ;
"RTN","RCDPEAP1",55,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEAP1",56,0)
 ; RCRCPTDA = ien of receipt number (344, .01)
"RTN","RCDPEAP1",57,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP1",58,0)
 ;
"RTN","RCDPEAP1",59,0)
 N DA,DIC,DIE,DLAYGO,DR,X,DO,RCO,RCLIN
"RTN","RCDPEAP1",60,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEAP1",61,0)
 ; If a receipt reference is already at 344.4, .08, then add subsequent receipt at 344.48, .01 (OTHER RECEIPTS multiple)
"RTN","RCDPEAP1",62,0)
 I $P(RC0,U,8)]"" D
"RTN","RCDPEAP1",63,0)
 . S DA(1)=RCERA
"RTN","RCDPEAP1",64,0)
 . S DIC="^RCY(344.4,"_DA(1)_",8,",DIC(0)="L",X=RCRCPTDA
"RTN","RCDPEAP1",65,0)
 . D FILE^DICN
"RTN","RCDPEAP1",66,0)
 E  S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP1",67,0)
 N LNUM,RCI,REJECT
"RTN","RCDPEAP1",68,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",69,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP1",70,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP1",71,0)
 . ;get all ERA line references; RCLINES(RCLIN) could have multiple line # references (e.g., RCLINES(3,4) or RCLINES(3))
"RTN","RCDPEAP1",72,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line.
"RTN","RCDPEAP1",73,0)
 . ;If not posted then update the AUTO-POST REJECTION REASON (344.41,5)  ;otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP1",74,0)
 . ; MARK FOR AUTO-POST (344.41, 6) needs to be reset for all lines
"RTN","RCDPEAP1",75,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP1",76,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",77,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)_";6////0"
"RTN","RCDPEAP1",78,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT_";6////0"
"RTN","RCDPEAP1",79,0)
 . . D ^DIE
"RTN","RCDPEAP1",80,0)
 Q
"RTN","RCDPEAP1",81,0)
 ;
"RTN","RCDPEAP1",82,0)
REJDET(RCERA,RCLINES) ; called on subsequent attempts of auto-post for a given ERA (DAY 2, DAY 3, ex.)
"RTN","RCDPEAP1",83,0)
 ; called when a receipt has not been created due to an error condition
"RTN","RCDPEAP1",84,0)
 ;  reset MARK FOR AUTOPOST and update REJECTION REASON for lines receiving validation errors
"RTN","RCDPEAP1",85,0)
 ;
"RTN","RCDPEAP1",86,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEAP1",87,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP1",88,0)
 ;
"RTN","RCDPEAP1",89,0)
 N LNUM,RCI,REJECT
"RTN","RCDPEAP1",90,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",91,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP1",92,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP1",93,0)
 . ;get all ERA line references; RCLINES(RCLIN) could have multiple line # references (e.g., RCLINES(3,4) or RCLINES(3))
"RTN","RCDPEAP1",94,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line.
"RTN","RCDPEAP1",95,0)
 . ;If not posted then update the AUTO-POST REJECTION REASON (344.41,5)
"RTN","RCDPEAP1",96,0)
 . ; MARK FOR AUTO-POST (344.41, 6) needs to be reset for all lines
"RTN","RCDPEAP1",97,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP1",98,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",99,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)_";6////0"
"RTN","RCDPEAP1",100,0)
 . . D ^DIE
"RTN","RCDPEAP1",101,0)
 Q
"RTN","RCDPEAP1",102,0)
 ;
"RTN","RCDPEAP1",103,0)
ZEROBAL(RCSCR) ;
"RTN","RCDPEAP1",104,0)
 ; per requirements, only positive/negative payment pairs where payment 
"RTN","RCDPEAP1",105,0)
 ; calculates to zero are allowed for auto-post
"RTN","RCDPEAP1",106,0)
 ; if payment ends up less than zero or greater than zero then ERA cannot
"RTN","RCDPEAP1",107,0)
 ;be autoposted.  
"RTN","RCDPEAP1",108,0)
 ; ERA gets sent to the standard worklist for manual receipt processing
"RTN","RCDPEAP1",109,0)
 ; note:  a payment pair represents 2 EEOB sequences with the same claim
"RTN","RCDPEAP1",110,0)
 ;         RCSCR - 344.49 ien
"RTN","RCDPEAP1",111,0)
 ;         X - returns 1 or 0
"RTN","RCDPEAP1",112,0)
 ; 
"RTN","RCDPEAP1",113,0)
 N SUB,SUB1,WLINE,X,ERALINE
"RTN","RCDPEAP1",114,0)
 S SUB=0,X=1,ERALINE=""
"RTN","RCDPEAP1",115,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",116,0)
 . ;Get scratchpad line and data 
"RTN","RCDPEAP1",117,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",118,0)
 . ;If integer sequence, get ERA line reference then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP1",119,0)
 . I $P(WLINE,U)?1N.N S ERALINE=$P(WLINE,U,9) Q 
"RTN","RCDPEAP1",120,0)
 . ; there are multiple EEOB sequences for the specific bill number so an adjustment took place; 
"RTN","RCDPEAP1",121,0)
 . ; if payment adjustment doesn't generate a zero payment balance at 344.491,.06 then this ERA needs to drop to standard worklist
"RTN","RCDPEAP1",122,0)
 . I ERALINE[",",+$P(WLINE,U,6)'=0 S X=0 Q
"RTN","RCDPEAP1",123,0)
 . ;do not autopost ERA if one of payments is negative amount
"RTN","RCDPEAP1",124,0)
 . I $P(WLINE,U,6)<0 S X=0
"RTN","RCDPEAP1",125,0)
 Q X
"RTN","RCDPEAP1",126,0)
 ;
"RTN","RCDPEAPP")
0^51^B144741985
"RTN","RCDPEAPP",1,0)
RCDPEAPP ;OIFO-BAYPINES/PJH - AUTO POST REPORT ;Dec 20, 2014@18:42
"RTN","RCDPEAPP",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEAPP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPP",4,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPEAPP",5,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPEAPP",6,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAPP",7,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPEAPP",8,0)
 ;
"RTN","RCDPEAPP",9,0)
RPT ; entry point for Auto-Post Report [RCDPE AUTO-POST REPORT]
"RTN","RCDPEAPP",10,0)
 N POP,RCDISP,RCDIV,RCDTRNG,RCJOB,RCPAGE,RCPARRAY,RCPAY,RCPROG,RCRANGE,RCTYPE,STANAM,STANUM,VAUTD,X,Y
"RTN","RCDPEAPP",11,0)
 ;Initialize page and start point
"RTN","RCDPEAPP",12,0)
 S (RCDTRNG,RCPAGE)=0,RCPROG="RCDPEAPP",RCJOB=$J
"RTN","RCDPEAPP",13,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEAPP",14,0)
 D STADIV Q:'RCDIV
"RTN","RCDPEAPP",15,0)
 ;Select report type
"RTN","RCDPEAPP",16,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAIL;",DIR("A")="DISPLAY (S)UMMARY OR (D)ETAIL FORMAT?: ",DIR("B")="DETAIL" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEAPP",17,0)
 S RCTYPE=Y
"RTN","RCDPEAPP",18,0)
 ;Select Filter for Payer - returns array ^TMP("RCSELPAY",$J
"RTN","RCDPEAPP",19,0)
 S RCPAY=$$GETPAY^RCDPEM9(344.4) Q:RCPAY<0
"RTN","RCDPEAPP",20,0)
 ;Move ^TMP("RCSELPAY",RCJOB) into RCPARRAY for lookup, note that payer names for 344.4 are UPPER CASE
"RTN","RCDPEAPP",21,0)
 I $P(RCPAY,U)'=2 D
"RTN","RCDPEAPP",22,0)
 .N PSUB,PAYER S PSUB=0
"RTN","RCDPEAPP",23,0)
 .F  S PSUB=$O(^TMP("RCSELPAY",RCJOB,PSUB)) Q:'PSUB  D
"RTN","RCDPEAPP",24,0)
 ..S PAYER=$G(^TMP("RCSELPAY",RCJOB,PSUB))
"RTN","RCDPEAPP",25,0)
 ..S:PAYER'="" RCPARRAY(PAYER)=""
"RTN","RCDPEAPP",26,0)
 ;
"RTN","RCDPEAPP",27,0)
 ;Select Date Range for Report
"RTN","RCDPEAPP",28,0)
 S RCRANGE=$$DTRNG() Q:RCRANGE=0
"RTN","RCDPEAPP",29,0)
 ;Select Display Type
"RTN","RCDPEAPP",30,0)
 S RCDISP=$$DISPTY() Q:RCDISP=-1
"RTN","RCDPEAPP",31,0)
 ;Display capture information for Excel
"RTN","RCDPEAPP",32,0)
 I RCDISP D INFO^RCDPEM6
"RTN","RCDPEAPP",33,0)
 ;Select output device
"RTN","RCDPEAPP",34,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEAPP",35,0)
 ;Option to queue
"RTN","RCDPEAPP",36,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPEAPP",37,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEAPP",38,0)
 .S ZTRTN="REPORT^RCDPEAPP"
"RTN","RCDPEAPP",39,0)
 .S ZTDESC="EDI LOCKBOX AUTO POST REPORT"
"RTN","RCDPEAPP",40,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAPP",41,0)
 .D ^%ZTLOAD
"RTN","RCDPEAPP",42,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" was queued."
"RTN","RCDPEAPP",43,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPEAPP",44,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEAPP",45,0)
 ;
"RTN","RCDPEAPP",46,0)
 ;Compile and Print Report
"RTN","RCDPEAPP",47,0)
 D REPORT
"RTN","RCDPEAPP",48,0)
 Q
"RTN","RCDPEAPP",49,0)
 ;
"RTN","RCDPEAPP",50,0)
REPORT ;Compile and print report
"RTN","RCDPEAPP",51,0)
 N GLOB,GTOTAL,ZTREQ
"RTN","RCDPEAPP",52,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEAPP",53,0)
 S GLOB=$NA(^TMP(RCPROG,$J))
"RTN","RCDPEAPP",54,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEAPP",55,0)
 D COMPILE
"RTN","RCDPEAPP",56,0)
 ;Display Report
"RTN","RCDPEAPP",57,0)
 D DISP
"RTN","RCDPEAPP",58,0)
 ;Clear ^TMP global
"RTN","RCDPEAPP",59,0)
 K ^TMP(RCPROG,$J),^TMP("RCSELPAY",RCJOB)
"RTN","RCDPEAPP",60,0)
 Q
"RTN","RCDPEAPP",61,0)
 ;
"RTN","RCDPEAPP",62,0)
COMPILE ;Generate the Auto Posting report ^TMP array
"RTN","RCDPEAPP",63,0)
 N APDATE,END,IEN,RCRZ,STA,STNAM,STNUM
"RTN","RCDPEAPP",64,0)
 ;
"RTN","RCDPEAPP",65,0)
 ;Date Range
"RTN","RCDPEAPP",66,0)
 S APDATE=$$FMADD^XLFDT($P(RCRANGE,U,2),-1),END=$P(RCRANGE,U,3)
"RTN","RCDPEAPP",67,0)
 ;Scan F index for ERA within date range
"RTN","RCDPEAPP",68,0)
 F  S APDATE=$O(^RCY(344.4,"F",APDATE)) Q:'APDATE  Q:(APDATE\1)>END  D
"RTN","RCDPEAPP",69,0)
 .S ERAIEN=""
"RTN","RCDPEAPP",70,0)
 .F  S ERAIEN=$O(^RCY(344.4,"F",APDATE,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEAPP",71,0)
 ..;Check division
"RTN","RCDPEAPP",72,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEAPP",73,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEAPP",74,0)
 ..;Check Payer, payer names come from 344.4,06 "C" cross-reference which is UPPER CASE
"RTN","RCDPEAPP",75,0)
 ..I $P(RCPAY,U)'=2 N ERAPAY,MATCH D  Q:'MATCH
"RTN","RCDPEAPP",76,0)
 ...S ERAPAY=$P($G(^RCY(344.4,ERAIEN,0)),U,6),MATCH=0 Q:ERAPAY=""
"RTN","RCDPEAPP",77,0)
 ...S:$D(RCPARRAY($$UP^XLFSTR(ERAPAY))) MATCH=1  ; payer names for 344.4 are UPPER CASE
"RTN","RCDPEAPP",78,0)
 ..;Scan index for auto posted claim lines within the ERA
"RTN","RCDPEAPP",79,0)
 ..S RCRZ=""
"RTN","RCDPEAPP",80,0)
 ..F  S RCRZ=$O(^RCY(344.4,"F",APDATE,ERAIEN,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAPP",81,0)
 ...;Save claim line detail to ^TMP global
"RTN","RCDPEAPP",82,0)
 ...D SAVE
"RTN","RCDPEAPP",83,0)
 ;
"RTN","RCDPEAPP",84,0)
 Q
"RTN","RCDPEAPP",85,0)
 ;
"RTN","RCDPEAPP",86,0)
SAVE ;Save to ^TMP global
"RTN","RCDPEAPP",87,0)
 N REC0,REC41,BILL,BAMT,BALANCE,CLAIMIEN,COLLECT,ERANUM,ERADATE,EFTNUM,EOBIEN,PAMT,PAYNAM,PTNAM,RECEIPT,SUB,SUB1,SUB2,TRACE
"RTN","RCDPEAPP",88,0)
 ;Get ERA header and detail data
"RTN","RCDPEAPP",89,0)
 S REC0=$G(^RCY(344.4,ERAIEN,0)),REC41=$G(^RCY(344.4,ERAIEN,1,RCRZ,0))
"RTN","RCDPEAPP",90,0)
 ;
"RTN","RCDPEAPP",91,0)
 ;Payer name from ERA record
"RTN","RCDPEAPP",92,0)
 S PAYNAM=$P(REC0,U,6)
"RTN","RCDPEAPP",93,0)
 ;Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEAPP",94,0)
 S EOBIEN=$P($G(^RCY(344.4,ERAIEN,1,RCRZ,0)),U,2),(BAMT,BALANCE,CLAIMIEN,COLLECT)=0
"RTN","RCDPEAPP",95,0)
 ;Get ^DGCR(399 pointer (DINUM for #430 file)
"RTN","RCDPEAPP",96,0)
 S:EOBIEN CLAIMIEN=$P($G(^IBM(361.1,EOBIEN,0)),U)
"RTN","RCDPEAPP",97,0)
 ;Bill number
"RTN","RCDPEAPP",98,0)
 S BILL=$$EXTERNAL^DILFD(344.41,.02,,EOBIEN)
"RTN","RCDPEAPP",99,0)
 ;Billed Amount from AR (Original Balance)
"RTN","RCDPEAPP",100,0)
 S:CLAIMIEN BAMT=$J(+$P($G(^PRCA(430,CLAIMIEN,0)),U,3),0,2)
"RTN","RCDPEAPP",101,0)
 ;Amount Paid on Claim
"RTN","RCDPEAPP",102,0)
 S PAMT=$P(REC41,U,3)
"RTN","RCDPEAPP",103,0)
 ;Balance from AR (Principal Balance)
"RTN","RCDPEAPP",104,0)
 S:CLAIMIEN BALANCE=$J(+$P($G(^PRCA(430,CLAIMIEN,7)),U),0,2)
"RTN","RCDPEAPP",105,0)
 ;
"RTN","RCDPEAPP",106,0)
 ;Following fields are required for detail report only
"RTN","RCDPEAPP",107,0)
 ;
"RTN","RCDPEAPP",108,0)
 D:RCTYPE="D"
"RTN","RCDPEAPP",109,0)
 .;Collected %
"RTN","RCDPEAPP",110,0)
 .S:BAMT COLLECT=$J(PAMT/BAMT*100,0,2)
"RTN","RCDPEAPP",111,0)
 .;Trace #
"RTN","RCDPEAPP",112,0)
 .S TRACE=$P(REC0,U,2)
"RTN","RCDPEAPP",113,0)
 .;Patient name from claim file #399
"RTN","RCDPEAPP",114,0)
 .S PTNAM=$$PNM4^RCDPEWL1(ERAIEN,RCRZ)
"RTN","RCDPEAPP",115,0)
 .;ERA# from header
"RTN","RCDPEAPP",116,0)
 .S ERANUM=$P(REC0,U)
"RTN","RCDPEAPP",117,0)
 .;Date received (file date/time)
"RTN","RCDPEAPP",118,0)
 .S ERADATE=$$FMTE^XLFDT($P(REC0,U,7),"2D")
"RTN","RCDPEAPP",119,0)
 .;Format Auto Post Date
"RTN","RCDPEAPP",120,0)
 .S DATE=$$FMTE^XLFDT(APDATE,"2D")
"RTN","RCDPEAPP",121,0)
 .;EFT#
"RTN","RCDPEAPP",122,0)
 .S EFTNUM=$O(^RCY(344.31,"AERA",ERANUM,"")) S:EFTNUM EFTNUM=$P($G(^RCY(344.31,EFTNUM,0)),U)
"RTN","RCDPEAPP",123,0)
 .;Receipt
"RTN","RCDPEAPP",124,0)
 .S RECEIPT=$$EXTERNAL^DILFD(344.4,.08,,$P(REC0,U,8))
"RTN","RCDPEAPP",125,0)
 ;
"RTN","RCDPEAPP",126,0)
 ;Update ^TMP global by Division Number and Payer Name
"RTN","RCDPEAPP",127,0)
 S SUB=STNAM,SUB1=PAYNAM,SUB2=$G(@GLOB@(SUB,SUB1))+1,$P(@GLOB@(SUB,SUB1),U)=SUB2
"RTN","RCDPEAPP",128,0)
 ;Update ^TMP global for detail report
"RTN","RCDPEAPP",129,0)
 S:RCTYPE="D" @GLOB@(SUB,SUB1,SUB2)=STNAM_U_STNUM_U_PAYNAM_U_PTNAM_U_ERANUM_U_ERADATE_U_DATE_U_EFTNUM_U_RECEIPT_U_BILL_U_BAMT_U_PAMT_U_BALANCE_U_COLLECT_"%"_U_TRACE
"RTN","RCDPEAPP",130,0)
 ;Update totals for individual division/payer
"RTN","RCDPEAPP",131,0)
 S $P(@GLOB@(SUB,SUB1),U,2)=$P($G(@GLOB@(SUB,SUB1)),U,2)+BAMT
"RTN","RCDPEAPP",132,0)
 S $P(@GLOB@(SUB,SUB1),U,3)=$P($G(@GLOB@(SUB,SUB1)),U,3)+PAMT,$P(@GLOB@(SUB,SUB1),U,4)=$P($G(@GLOB@(SUB,SUB1)),U,4)+BALANCE
"RTN","RCDPEAPP",133,0)
 ;Update totals for individual division
"RTN","RCDPEAPP",134,0)
 S $P(@GLOB@(SUB),U)=$P($G(@GLOB@(SUB)),U)+1,$P(@GLOB@(SUB),U,2)=$P($G(@GLOB@(SUB)),U,2)+BAMT
"RTN","RCDPEAPP",135,0)
 S $P(@GLOB@(SUB),U,3)=$P($G(@GLOB@(SUB)),U,3)+PAMT,$P(@GLOB@(SUB),U,4)=$P($G(@GLOB@(SUB)),U,4)+BALANCE
"RTN","RCDPEAPP",136,0)
 ;Update grand totals
"RTN","RCDPEAPP",137,0)
 S $P(GTOTAL,U)=$P($G(GTOTAL),U)+1,$P(GTOTAL,U,2)=$P($G(GTOTAL),U,2)+BAMT,$P(GTOTAL,U,3)=$P($G(GTOTAL),U,3)+PAMT,$P(GTOTAL,U,4)=$P($G(GTOTAL),U,4)+BALANCE
"RTN","RCDPEAPP",138,0)
 Q
"RTN","RCDPEAPP",139,0)
 ;
"RTN","RCDPEAPP",140,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEAPP",141,0)
 N FILTERD,FILTERP,LINE1,LINE2,RCDATA,RCHDRDT,RCSTOP,SUB,SUB1,SUB2
"RTN","RCDPEAPP",142,0)
 S RCHDRDT=$$FMTE^XLFDT($$NOW^XLFDT,"2S")  ; date/time for header
"RTN","RCDPEAPP",143,0)
 S LINE1=$TR($J("",131)," ","-"),LINE2=$TR(LINE1,"-","=")
"RTN","RCDPEAPP",144,0)
 ;
"RTN","RCDPEAPP",145,0)
 U IO
"RTN","RCDPEAPP",146,0)
 ;
"RTN","RCDPEAPP",147,0)
 ;Report by division or 'ALL'
"RTN","RCDPEAPP",148,0)
 ;Format Division filter
"RTN","RCDPEAPP",149,0)
 S FILTERD=$S(RCDIV=2:$$LINE(.VAUTD),1:"ALL")
"RTN","RCDPEAPP",150,0)
 ;Format Payer filter
"RTN","RCDPEAPP",151,0)
 S FILTERP=$S($P(RCPAY,U)'=2:$$LINE1(),1:"ALL")
"RTN","RCDPEAPP",152,0)
 S SUB="",RCSTOP=0
"RTN","RCDPEAPP",153,0)
 F  S SUB=$O(@GLOB@(SUB)) Q:SUB=""  D  Q:RCSTOP
"RTN","RCDPEAPP",154,0)
 .;Display Header
"RTN","RCDPEAPP",155,0)
 .D HDR
"RTN","RCDPEAPP",156,0)
 .I 'RCDISP W !,"DIVISION: ",SUB W:RCTYPE="S" !,LINE1
"RTN","RCDPEAPP",157,0)
 .S SUB1=""
"RTN","RCDPEAPP",158,0)
 .F  S SUB1=$O(@GLOB@(SUB,SUB1)) Q:SUB1=""  D  Q:RCSTOP
"RTN","RCDPEAPP",159,0)
 ..;Display payer sub-header for detail report only
"RTN","RCDPEAPP",160,0)
 ..I 'RCDISP,RCTYPE="D" D HDRP(SUB1)
"RTN","RCDPEAPP",161,0)
 ..S SUB2=""
"RTN","RCDPEAPP",162,0)
 ..F  S SUB2=$O(@GLOB@(SUB,SUB1,SUB2)) Q:SUB2=""  D  Q:RCSTOP
"RTN","RCDPEAPP",163,0)
 ...S RCDATA=@GLOB@(SUB,SUB1,SUB2)
"RTN","RCDPEAPP",164,0)
 ...I 'RCDISP D  Q:RCSTOP
"RTN","RCDPEAPP",165,0)
 ....;Auto Posted ERA
"RTN","RCDPEAPP",166,0)
 ....I $Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",167,0)
 ....W !,$P(RCDATA,U,4) ;Patient Name
"RTN","RCDPEAPP",168,0)
 ....W ?31,$P(RCDATA,U,5) ;ERA#
"RTN","RCDPEAPP",169,0)
 ....W ?38,$P(RCDATA,U,6) ;DATE RECEIVED
"RTN","RCDPEAPP",170,0)
 ....W ?49,$P(RCDATA,U,7) ;DATE AUTOPOSTED
"RTN","RCDPEAPP",171,0)
 ....W ?60,$P(RCDATA,U,8) ;EFT#
"RTN","RCDPEAPP",172,0)
 ....W ?67,$P(RCDATA,U,9) ;"TR" RECEIPT
"RTN","RCDPEAPP",173,0)
 ....W ?79,$P(RCDATA,U,10) ;BILL#
"RTN","RCDPEAPP",174,0)
 ....W ?91,$J($P(RCDATA,U,11),8) ;ORIGINAL BILLED AMOUNT
"RTN","RCDPEAPP",175,0)
 ....W ?103,$J($P(RCDATA,U,12),8) ;PAYED AMOUNT
"RTN","RCDPEAPP",176,0)
 ....W ?113,$J($P(RCDATA,U,13),8) ;BALANCE
"RTN","RCDPEAPP",177,0)
 ....W ?123,$P(RCDATA,U,14) ;% COLLECTED
"RTN","RCDPEAPP",178,0)
 ....W !,?8,"TRACE#:",$P(RCDATA,U,15)
"RTN","RCDPEAPP",179,0)
 ....;Subtotals for Payer on detail report
"RTN","RCDPEAPP",180,0)
 ....I 'RCDISP,$O(@GLOB@(SUB,SUB1,SUB2))="" D TOTALDP(SUB,SUB1)
"RTN","RCDPEAPP",181,0)
 ...I RCDISP D
"RTN","RCDPEAPP",182,0)
 ....W !,RCDATA
"RTN","RCDPEAPP",183,0)
 ..;Subtotals for Division on detail report
"RTN","RCDPEAPP",184,0)
 ..I 'RCDISP,RCTYPE="D",$O(@GLOB@(SUB,SUB1))="" D TOTALD(SUB)
"RTN","RCDPEAPP",185,0)
 .;
"RTN","RCDPEAPP",186,0)
 ;Grand totals
"RTN","RCDPEAPP",187,0)
 I $D(GTOTAL),'RCSTOP D
"RTN","RCDPEAPP",188,0)
 .;Print grand only total if detail report
"RTN","RCDPEAPP",189,0)
 .I 'RCDISP,RCTYPE="D" D TOTALG
"RTN","RCDPEAPP",190,0)
 .;Print all totals if summary report
"RTN","RCDPEAPP",191,0)
 .I 'RCDISP,RCTYPE="S" D TOTALS
"RTN","RCDPEAPP",192,0)
 .;Report finished
"RTN","RCDPEAPP",193,0)
 .W !,$$ENDORPRT^RCDPEARL D:'$G(ZTSK) ASK(.RCSTOP)
"RTN","RCDPEAPP",194,0)
 ;
"RTN","RCDPEAPP",195,0)
 ;Null Report
"RTN","RCDPEAPP",196,0)
 I '$D(GTOTAL) D
"RTN","RCDPEAPP",197,0)
 .D HDR
"RTN","RCDPEAPP",198,0)
 .W !!,?26,"*** NO RECORDS TO PRINT ***",!
"RTN","RCDPEAPP",199,0)
 ;
"RTN","RCDPEAPP",200,0)
 ;Close device
"RTN","RCDPEAPP",201,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAPP",202,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAPP",203,0)
 Q
"RTN","RCDPEAPP",204,0)
 ;
"RTN","RCDPEAPP",205,0)
ASK(STOP) ; Ask to continue
"RTN","RCDPEAPP",206,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAPP",207,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAPP",208,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAPP",209,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEAPP",210,0)
 S DIR(0)="EA" D ^DIR
"RTN","RCDPEAPP",211,0)
 I ($D(DIRUT))!($D(DUOUT)) S STOP=1
"RTN","RCDPEAPP",212,0)
 Q
"RTN","RCDPEAPP",213,0)
 ;
"RTN","RCDPEAPP",214,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEAPP",215,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEAPP",216,0)
 S DIR("?")="ENTER THE EARLIEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPP",217,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEAPP",218,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",219,0)
 S BDATE=Y
"RTN","RCDPEAPP",220,0)
 S DIR("?")="ENTER THE LATEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPP",221,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAPP",222,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEAPP",223,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",224,0)
 S EDATE=Y
"RTN","RCDPEAPP",225,0)
 Q
"RTN","RCDPEAPP",226,0)
 ;
"RTN","RCDPEAPP",227,0)
DISPTY() ; Get display/output type
"RTN","RCDPEAPP",228,0)
 N DIR,DUOUT,Y
"RTN","RCDPEAPP",229,0)
 S DIR(0)="Y"
"RTN","RCDPEAPP",230,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPEAPP",231,0)
 S DIR("B")="NO"
"RTN","RCDPEAPP",232,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEAPP",233,0)
 Q Y
"RTN","RCDPEAPP",234,0)
 ;
"RTN","RCDPEAPP",235,0)
DTRNG() ; Get the date range for the report
"RTN","RCDPEAPP",236,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPEAPP",237,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEAPP",238,0)
 Q:RCSTART=-1 0
"RTN","RCDPEAPP",239,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEAPP",240,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEAPP",241,0)
 Q 0
"RTN","RCDPEAPP",242,0)
 ;
"RTN","RCDPEAPP",243,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEAPP",244,0)
 N ERAEOB,ERABILL,FOUND,STAIEN
"RTN","RCDPEAPP",245,0)
 S (ERAEOB,ERABILL,FOUND)=""
"RTN","RCDPEAPP",246,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEAPP",247,0)
 D
"RTN","RCDPEAPP",248,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB
"RTN","RCDPEAPP",249,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL
"RTN","RCDPEAPP",250,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEAPP",251,0)
 .S STA=STAIEN
"RTN","RCDPEAPP",252,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEAPP",253,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2)
"RTN","RCDPEAPP",254,0)
 Q
"RTN","RCDPEAPP",255,0)
 ;
"RTN","RCDPEAPP",256,0)
HDR ; Print the report header
"RTN","RCDPEAPP",257,0)
 N START,END,MSG,Y
"RTN","RCDPEAPP",258,0)
 S START=$$FMTE^XLFDT($P(RCRANGE,U,2),2)
"RTN","RCDPEAPP",259,0)
 S END=$$FMTE^XLFDT($P(RCRANGE,U,3),2)
"RTN","RCDPEAPP",260,0)
 ;
"RTN","RCDPEAPP",261,0)
 I 'RCDISP,'RCSTOP D
"RTN","RCDPEAPP",262,0)
 .I RCPAGE D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAPP",263,0)
 .S RCPAGE=RCPAGE+1
"RTN","RCDPEAPP",264,0)
 .W @IOF
"RTN","RCDPEAPP",265,0)
 .S MSG(1)="EDI LOCKBOX AUTO-POST REPORT - "_$S(RCTYPE="D":"DETAIL ",1:"SUMMARY")_$J("",47)_"Print Date: "_RCHDRDT_"    Page: "_RCPAGE
"RTN","RCDPEAPP",266,0)
 .S MSG(2)="DIVISIONS: "_FILTERD
"RTN","RCDPEAPP",267,0)
 .S MSG(3)="PAYERS: "_FILTERP
"RTN","RCDPEAPP",268,0)
 .S MSG(4)="AUTOPOST POSTING RESULTS FOR DATE RANGE: "_START_" - "_END
"RTN","RCDPEAPP",269,0)
 .S MSG(5)=LINE2
"RTN","RCDPEAPP",270,0)
 .S MSG(6)="PATIENT NAME/SSN               ERA#   DT REC'D   DT POST    EFT#   RECEIPT#    BILL#       AMT BILLED  AMT PAID   BALANCE  %COLL"
"RTN","RCDPEAPP",271,0)
 .S MSG(7)=LINE2
"RTN","RCDPEAPP",272,0)
 .D EN^DDIOL(.MSG)
"RTN","RCDPEAPP",273,0)
 I RCDISP D
"RTN","RCDPEAPP",274,0)
 .W !,"STATION^STATION NUMBER^PAYER^PATIENT NAME/SSN^ERA#^DT REC'D^DT POST^EFT#^RECEIPT#^BILL#^AMT BILLED^AMT PAID^BALANCE^%COLL^TRACE#"
"RTN","RCDPEAPP",275,0)
 Q
"RTN","RCDPEAPP",276,0)
 ;
"RTN","RCDPEAPP",277,0)
HDRP(PAYNAM) ; Print Payer Sub-header
"RTN","RCDPEAPP",278,0)
 W !,LINE1,!,"PAYER: ",PAYNAM,!,LINE1
"RTN","RCDPEAPP",279,0)
 Q
"RTN","RCDPEAPP",280,0)
 ;
"RTN","RCDPEAPP",281,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEAPP",282,0)
 N LINE,SUB
"RTN","RCDPEAPP",283,0)
 S LINE="",SUB=""
"RTN","RCDPEAPP",284,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEAPP",285,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEAPP",286,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEAPP",287,0)
 ;
"RTN","RCDPEAPP",288,0)
LINE1() ;List selected payers
"RTN","RCDPEAPP",289,0)
 N PAYR,LINE
"RTN","RCDPEAPP",290,0)
 S PAYR="",LINE=""
"RTN","RCDPEAPP",291,0)
 F  S PAYR=$O(RCPARRAY(PAYR)) Q:PAYR=""  D
"RTN","RCDPEAPP",292,0)
 .S LINE=LINE_PAYR_", "
"RTN","RCDPEAPP",293,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEAPP",294,0)
 ;
"RTN","RCDPEAPP",295,0)
SELDIV(VAUTD,Z) ;Divisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEAPP",296,0)
 ; Input:
"RTN","RCDPEAPP",297,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEAPP",298,0)
 ; Output:
"RTN","RCDPEAPP",299,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEAPP",300,0)
 ;
"RTN","RCDPEAPP",301,0)
 N SUB,CNT
"RTN","RCDPEAPP",302,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEAPP",303,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEAPP",304,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEAPP",305,0)
 . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",306,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEAPP",307,0)
 . S SUB=VAUTD
"RTN","RCDPEAPP",308,0)
 . F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEAPP",309,0)
 . . I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEAPP",310,0)
 . . S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEAPP",311,0)
 . . I $L(Z(CNT))>50 D
"RTN","RCDPEAPP",312,0)
 . . . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",313,0)
 . . . S CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEAPP",314,0)
 I Z(CNT)]"" D
"RTN","RCDPEAPP",315,0)
 . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",316,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEAPP",317,0)
 Q
"RTN","RCDPEAPP",318,0)
 ;
"RTN","RCDPEAPP",319,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEAPP",320,0)
 ;
"RTN","RCDPEAPP",321,0)
 ;Sort selection
"RTN","RCDPEAPP",322,0)
 N DIR,DUOUT,Y
"RTN","RCDPEAPP",323,0)
 S RCDIV=0
"RTN","RCDPEAPP",324,0)
 ;
"RTN","RCDPEAPP",325,0)
 ;Division selection - IA 664
"RTN","RCDPEAPP",326,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEAPP",327,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEAPP",328,0)
 ;
"RTN","RCDPEAPP",329,0)
 ;If ALL selected
"RTN","RCDPEAPP",330,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEAPP",331,0)
 ;If some DIVISIONS selected
"RTN","RCDPEAPP",332,0)
 S RCDIV=2
"RTN","RCDPEAPP",333,0)
 Q
"RTN","RCDPEAPP",334,0)
 ;
"RTN","RCDPEAPP",335,0)
TOTALS ;Print totals for summary report
"RTN","RCDPEAPP",336,0)
 N DIV,DBAL,DBAMT,DCNT,DPAMT,PAYNAM
"RTN","RCDPEAPP",337,0)
 S DIV=""
"RTN","RCDPEAPP",338,0)
 F  S DIV=$O(@GLOB@(DIV)) Q:DIV=""  D  Q:RCSTOP
"RTN","RCDPEAPP",339,0)
 .;Get payer totals within division first
"RTN","RCDPEAPP",340,0)
 .S PAYNAM=""
"RTN","RCDPEAPP",341,0)
 .F  S PAYNAM=$O(@GLOB@(DIV,PAYNAM)) Q:PAYNAM=""  D TOTALDP(DIV,PAYNAM)
"RTN","RCDPEAPP",342,0)
 .;Division totals
"RTN","RCDPEAPP",343,0)
 .D TOTALD(DIV)
"RTN","RCDPEAPP",344,0)
 ;Grand Totals
"RTN","RCDPEAPP",345,0)
 D TOTALG
"RTN","RCDPEAPP",346,0)
 Q
"RTN","RCDPEAPP",347,0)
 ;
"RTN","RCDPEAPP",348,0)
TOTALD(DIV) ;Total for a division
"RTN","RCDPEAPP",349,0)
 N DCNT,DBAMT,DPAMT,DBAL
"RTN","RCDPEAPP",350,0)
 S DCNT=$P(@GLOB@(DIV),U),DBAMT=$P(@GLOB@(DIV),U,2),DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",351,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",352,0)
 W !,"DIVISION TOTALS FOR ",DIV,?90,$J(DBAMT,10,2),$J(DPAMT,10,2),$J(DBAL,10,2),$J(DPAMT/DBAMT*100,7,2),"%"
"RTN","RCDPEAPP",353,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",354,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",355,0)
 W !,LINE1
"RTN","RCDPEAPP",356,0)
 Q
"RTN","RCDPEAPP",357,0)
 ;
"RTN","RCDPEAPP",358,0)
TOTALDP(DIV,PAYNAM) ;Total for a payer within a division
"RTN","RCDPEAPP",359,0)
 N DCNT,DBAL,DBAMT,DCNT,DPAMT
"RTN","RCDPEAPP",360,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",361,0)
 S DCNT=$P(@GLOB@(DIV,PAYNAM),U),DBAMT=$P(@GLOB@(DIV),U,2),DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",362,0)
 W:RCTYPE="D" !,?92,"------------------------------------"
"RTN","RCDPEAPP",363,0)
 W !,"SUBTOTALS FOR PAYER: ",PAYNAM,?90,$J(DBAMT,10,2),$J(DPAMT,10,2),$J(DBAL,10,2),$J(DPAMT/DBAMT*100,7,2),"%"
"RTN","RCDPEAPP",364,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",365,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",366,0)
 W !,LINE1
"RTN","RCDPEAPP",367,0)
 Q
"RTN","RCDPEAPP",368,0)
 ;
"RTN","RCDPEAPP",369,0)
TOTALG ;Overall report total
"RTN","RCDPEAPP",370,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",371,0)
 W !,"GRAND TOTALS FOR ALL DIVISIONS",?90,$J(+$P(GTOTAL,U,2),10,2),$J(+$P(GTOTAL,U,3),10,2),$J(+$P(GTOTAL,U,4),10,2),$J($P(GTOTAL,U,3)/$P(GTOTAL,U,2)*100,7,2),"%"
"RTN","RCDPEAPP",372,0)
 W !,?8,"COUNT",?90,$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0)
"RTN","RCDPEAPP",373,0)
 W !,?8,"MEAN",?90,$J($P(GTOTAL,U,2)/$P(GTOTAL,U),10,2),$J($P(GTOTAL,U,3)/$P(GTOTAL,U),10,2),$J($P(GTOTAL,U,4)/$P(GTOTAL,U),10,2)
"RTN","RCDPEAPP",374,0)
 W !,LINE1
"RTN","RCDPEAPP",375,0)
 Q
"RTN","RCDPEAPP",376,0)
 ;
"RTN","RCDPEAR1")
0^33^B225062601
"RTN","RCDPEAR1",1,0)
RCDPEAR1 ;ALB/TMK/PJH - ERA Unmatched Aging Report (file #344.4) ;Dec 20, 2014@18:41:35
"RTN","RCDPEAR1",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,293,298**;Mar 20, 1995;Build 121
"RTN","RCDPEAR1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR1",4,0)
 Q
"RTN","RCDPEAR1",5,0)
 ;
"RTN","RCDPEAR1",6,0)
 ; PRCA*4.5*298 routine completely refactored
"RTN","RCDPEAR1",7,0)
EN1 ; entry point - ERA Unmatched Aging Report [RCDPE ERA AGING REPORT]
"RTN","RCDPEAR1",8,0)
 ; data from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEAR1",9,0)
 N RCDISPTY,RCDT,RCDTRNG,RCHDR,RCJOB,RCLNCNT,RCLSTMGR,RCOUT,RCPGNUM,RCPYRLST,RCRESPYR
"RTN","RCDPEAR1",10,0)
 N RCSTOP,RCTMPND,RCXCLUDE,RCZROBAL,VAUTD,Y
"RTN","RCDPEAR1",11,0)
 ; RCDISPTY - display type (Excel)
"RTN","RCDPEAR1",12,0)
 ; RCDTRNG - selected date range
"RTN","RCDPEAR1",13,0)
 ; RCDT("BEG") - start date, RCDT("END") - end date
"RTN","RCDPEAR1",14,0)
 ; RCHDR - header array
"RTN","RCDPEAR1",15,0)
 ; RCLSTMGR - list manager flag
"RTN","RCDPEAR1",16,0)
 ; RCRESPYR - payer info response: "1^first payer^last payer" or "2^^" (for all) or "3^^" (for specific)
"RTN","RCDPEAR1",17,0)
 ; RCDTRNG - "1^start date^end date"
"RTN","RCDPEAR1",18,0)
 ; RCPYRLST - payer list for selected payers
"RTN","RCDPEAR1",19,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEAR1",20,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEAR1",21,0)
 ; RCZROBAL - zero balance flag
"RTN","RCDPEAR1",22,0)
 ; VAUTD - division information
"RTN","RCDPEAR1",23,0)
 ;
"RTN","RCDPEAR1",24,0)
 K ^TMP($J,"RC TOTAL")  ; clear old totals
"RTN","RCDPEAR1",25,0)
 W !,$$HDRNM D DIVISION^VAUTOMA  ; returns VAUTD
"RTN","RCDPEAR1",26,0)
 I 'VAUTD&($D(VAUTD)'=11) G EN1Q
"RTN","RCDPEAR1",27,0)
 S RCLSTMGR=""  ; initial value, won't be asked if non-null
"RTN","RCDPEAR1",28,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEAR1",29,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() I 'RCDTRNG G EN1Q
"RTN","RCDPEAR1",30,0)
 S RCDT("BEG")=$P(RCDTRNG,U,2),RCDT("END")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",31,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR1",32,0)
 ; PRCA*4.5*284 - RCRESPYR (Type of Response(1=Range,2=All,3=Specific)^From name^To name)
"RTN","RCDPEAR1",33,0)
 S RCRESPYR=$$GETPAY^RCDPEM9(344.4) G:RCRESPYR<0 EN1Q
"RTN","RCDPEAR1",34,0)
 ; Get Zero Balance Filter
"RTN","RCDPEAR1",35,0)
 S RCZROBAL=$$ZROBAL() G:RCZROBAL<0 EN1Q
"RTN","RCDPEAR1",36,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEAR1",37,0)
 S RCXCLUDE("CHAMPVA")=$$INCHMPVA^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEAR1",38,0)
 G:RCXCLUDE("CHAMPVA")<0 EN1Q
"RTN","RCDPEAR1",39,0)
 ; TRICARE exclusion filter
"RTN","RCDPEAR1",40,0)
 S RCXCLUDE("TRICARE")=$$INTRICAR^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEAR1",41,0)
 G:RCXCLUDE("TRICARE")<0 EN1Q
"RTN","RCDPEAR1",42,0)
 ; display type, ask for Excel format
"RTN","RCDPEAR1",43,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() I RCDISPTY=-1 G EN1Q
"RTN","RCDPEAR1",44,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR1",45,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR1",46,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",47,0)
 S RCJOB=$J  ; needed in RPTOUT
"RTN","RCDPEAR1",48,0)
 ;
"RTN","RCDPEAR1",49,0)
 I '(+RCRESPYR=2) D  ; get payer list if not all payers
"RTN","RCDPEAR1",50,0)
 .N J,P S J=0
"RTN","RCDPEAR1",51,0)
 .F  S J=$O(^TMP("RCSELPAY",$J,J)) Q:'J  S P=$G(^(J)) S:P]"" RCPYRLST(P)=""
"RTN","RCDPEAR1",52,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR1",53,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EN1Q
"RTN","RCDPEAR1",54,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR1",55,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR1",56,0)
 .S RCTMPND=$T(+0)_"^ERA UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR1",57,0)
 .D RPTOUT
"RTN","RCDPEAR1",58,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR1",59,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR1",60,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEAR1",61,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR1",62,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR1",63,0)
 .; invoke ListMan
"RTN","RCDPEAR1",64,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR1",65,0)
 ;
"RTN","RCDPEAR1",66,0)
 ; Ask device
"RTN","RCDPEAR1",67,0)
 N %ZIS S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR1",68,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR1",69,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK,ZTSTOP
"RTN","RCDPEAR1",70,0)
 .S ZTRTN="RPTOUT^RCDPEAR1",ZTDESC="AR - EDI LOCKBOX ERA AGING REPORT"
"RTN","RCDPEAR1",71,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR1",72,0)
 .; PRCA*4.5*284 - ^TMP may be on another server, save off specific payers in local
"RTN","RCDPEAR1",73,0)
 .;I +RCRESPYR=3 M RCPYRLST=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR1",74,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR1",75,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR1",76,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR1",77,0)
 ;
"RTN","RCDPEAR1",78,0)
 U IO S RCTMPND="" D RPTOUT
"RTN","RCDPEAR1",79,0)
 ;
"RTN","RCDPEAR1",80,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR1",81,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J)
"RTN","RCDPEAR1",82,0)
 I '$G(RCLSTMGR) D ^%ZISC
"RTN","RCDPEAR1",83,0)
 Q
"RTN","RCDPEAR1",84,0)
 ;
"RTN","RCDPEAR1",85,0)
RPTOUT ; Entry point for listing report
"RTN","RCDPEAR1",86,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",87,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",88,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR1",89,0)
 N ERADT,PYMNTFRM,RC0,RCEDT,RCEXCEP,RCFLIEN,RCITM,RCNT,RCPAY,RCSF0,RCZ,STA,STNAM,STNUM,X,Y,Z,Z0
"RTN","RCDPEAR1",90,0)
 ; ERADT - date of entry
"RTN","RCDPEAR1",91,0)
 ; RCFLIEN - entry number in file #344.4
"RTN","RCDPEAR1",92,0)
 ; RCITM - entry in ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I
"RTN","RCDPEAR1",93,0)
 ; RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",94,0)
 ;
"RTN","RCDPEAR1",95,0)
 S RCTMPND=$G(RCTMPND)  I RCTMPND'="" K ^TMP($J,RCTMPND)  ; clear residual data
"RTN","RCDPEAR1",96,0)
 ; RCNT - count of items
"RTN","RCDPEAR1",97,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR1",98,0)
 S RCRESPYR=+RCRESPYR
"RTN","RCDPEAR1",99,0)
 S RCFLIEN=0,RCNT=0
"RTN","RCDPEAR1",100,0)
 F  S RCFLIEN=$O(^RCY(344.4,"AMATCH",0,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",101,0)
 .K RCITM M RCITM=^RCY(344.4,RCFLIEN)  ; grab entire entry
"RTN","RCDPEAR1",102,0)
 .Q:$P($G(RCITM(6)),U)  ; who removed the ERA - PRCA*4.5*293
"RTN","RCDPEAR1",103,0)
 .S ERADT=+$P($G(RCITM(0)),U,7)  ; (#.07) FILE DATE/TIME [7D]
"RTN","RCDPEAR1",104,0)
 .Q:'ERADT  ; no date, don't include
"RTN","RCDPEAR1",105,0)
 .; Check date range
"RTN","RCDPEAR1",106,0)
 .Q:(RCDT("BEG")>ERADT\1)!(ERADT\1>RCDT("END"))
"RTN","RCDPEAR1",107,0)
 .; Check Station/Division
"RTN","RCDPEAR1",108,0)
 .;I '$$CHKDIV^RCDPEDAR(RCFLIEN,1,.VAUTD) Q
"RTN","RCDPEAR1",109,0)
 .I 'VAUTD D ERASTA^RCDPEM4(RCFLIEN,.STA,.STNUM,.STNAM) I '$D(VAUTD(STA)) Q
"RTN","RCDPEAR1",110,0)
 .; Check for payer match
"RTN","RCDPEAR1",111,0)
 .S PYMNTFRM=$P($G(RCITM(0)),U,6)  ; PAYMENT FROM field
"RTN","RCDPEAR1",112,0)
 .I '(RCRESPYR=2),PYMNTFRM]"" Q:'$D(RCPYRLST($$UP^XLFSTR(PYMNTFRM)))  ; will include null payers when ALL payers selected
"RTN","RCDPEAR1",113,0)
 .Q:(PYMNTFRM="")&'(RCRESPYR=2)  ; null payers excluded when not ALL selected
"RTN","RCDPEAR1",114,0)
 .; Check for Zero Bal
"RTN","RCDPEAR1",115,0)
 .I 'RCZROBAL,'$P($G(RCITM(0)),U,5) Q  ; (#.05) TOTAL AMOUNT PAID [5N]
"RTN","RCDPEAR1",116,0)
 .; CHAMPVA check
"RTN","RCDPEAR1",117,0)
 .I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_RCFLIEN) D  Q  ; count and quit if true
"RTN","RCDPEAR1",118,0)
 ..N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEAR1",119,0)
 .;
"RTN","RCDPEAR1",120,0)
 .; TRICARE check
"RTN","RCDPEAR1",121,0)
 .I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_RCFLIEN) D  Q  ; count and quit if true
"RTN","RCDPEAR1",122,0)
 ..N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEAR1",123,0)
 .;
"RTN","RCDPEAR1",124,0)
 .; include on report
"RTN","RCDPEAR1",125,0)
 .S ^TMP($J,"RCERA_AGED",$$FMDIFF^XLFDT(ERADT,DT),RCFLIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR1",126,0)
 ;
"RTN","RCDPEAR1",127,0)
 S ^TMP($J,"RC TOTAL","COUNT")=RCNT  ; save counter
"RTN","RCDPEAR1",128,0)
 ; build local payer array
"RTN","RCDPEAR1",129,0)
 D SELPAY(RCRESPYR,RCJOB,.RCPAY)
"RTN","RCDPEAR1",130,0)
 ; build header, initialize stop flag
"RTN","RCDPEAR1",131,0)
 D:'RCLSTMGR HDRBLD S RCSTOP=0
"RTN","RCDPEAR1",132,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEAR1",133,0)
 ;
"RTN","RCDPEAR1",134,0)
 ; Excel format, print and exit
"RTN","RCDPEAR1",135,0)
 I RCDISPTY D EXCEL,^%ZISC G EXIT
"RTN","RCDPEAR1",136,0)
 ;
"RTN","RCDPEAR1",137,0)
 D  ;  Calculate total amount for ERA
"RTN","RCDPEAR1",138,0)
 .N T S T=0  ; total
"RTN","RCDPEAR1",139,0)
 .S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",140,0)
 ..S RC0=$G(^RCY(344.4,RCFLIEN,0)),T=T+$P(RC0,U,5)
"RTN","RCDPEAR1",141,0)
 .;
"RTN","RCDPEAR1",142,0)
 .S ^TMP($J,"RC TOTAL","AMOUNT")=T
"RTN","RCDPEAR1",143,0)
 ;
"RTN","RCDPEAR1",144,0)
 S RCLNCNT=0  ; line counter
"RTN","RCDPEAR1",145,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; first header in report
"RTN","RCDPEAR1",146,0)
 ; list totals
"RTN","RCDPEAR1",147,0)
 S Y=" Total NUMBER Aged Electronic ERA messages found: "_$FN(^TMP($J,"RC TOTAL","COUNT"),",")
"RTN","RCDPEAR1",148,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",149,0)
 S Y=" Total AMOUNT Aged Electronic ERA messages found: $"_$FN(^TMP($J,"RC TOTAL","AMOUNT"),",",2)
"RTN","RCDPEAR1",150,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",151,0)
 ; if filters selected show total excluded
"RTN","RCDPEAR1",152,0)
 F J="CHAMPVA","TRICARE" I $G(RCXCLUDE(J)) S Y=" "_J_" exclusion count: "_(+$G(^TMP($J,"RC TOTAL",J))) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",153,0)
 D SL^RCDPEARL(" "_$TR($J("",78)," ","="),.RCLNCNT,RCTMPND)  ; row of equal signs
"RTN","RCDPEAR1",154,0)
 ;
"RTN","RCDPEAR1",155,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP EXIT
"RTN","RCDPEAR1",156,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",157,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCLNCNT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR1",158,0)
 .I 'RCLSTMGR,'RCPGNUM!(($Y+5)>IOSL) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",159,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",160,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",161,0)
 .S Z=$$SETSTR^VALM1($J(RCEXCEP_-RCZ,4),"",1,5)  ; PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",162,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,2),Z,5,50)
"RTN","RCDPEAR1",163,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",164,0)
 .S Z=$$SETSTR^VALM1($P(RC0,U,6)_"/"_$P(RC0,U,3),"",11,69)
"RTN","RCDPEAR1",165,0)
 .S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,4),2),Z,70,10)
"RTN","RCDPEAR1",166,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",167,0)
 .S Z=$$SETSTR^VALM1($J("",16)_$S($P(RC0,U,7):$$FMTE^XLFDT($P(RC0,U,7)\1,2),1:""),"",1,25)
"RTN","RCDPEAR1",168,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,5),15,2),Z,26,17)
"RTN","RCDPEAR1",169,0)
 .S Z=$$SETSTR^VALM1("  "_+$P(RC0,U,11),Z,43,11)
"RTN","RCDPEAR1",170,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U),Z_$S('$$HACERA^RCDPEU(RCFLIEN):"",1:" (HAC ERA)"),54,26)
"RTN","RCDPEAR1",171,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",172,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D SL^RCDPEARL($J("",9)_"** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",173,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",174,0)
 ..N Q
"RTN","RCDPEAR1",175,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",176,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D SL^RCDPEARL($J("",9)_"** GENERAL ADJUSTMENT DATA EXIST FOR THIS ERA **",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",177,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D SL^RCDPEARL($J("",9)_$G(^TMP($J,"RCERA_ADJ",Q)),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",178,0)
 .;
"RTN","RCDPEAR1",179,0)
 .N D,RCSFIEN S RCSFIEN=0  ; RCSFIEN - sub-file ien, RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",180,0)
 .F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",181,0)
 ..N RCDATA,RCOUT  ; set by RCDPESR0, RCDATA - message data, RCOUT - formatted message display
"RTN","RCDPEAR1",182,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",183,0)
 ..S D=$J("",7)_" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",184,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",185,0)
 ..D SL^RCDPEARL(D,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",186,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",187,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",188,0)
 ..I '$O(RCOUT(0)) D SL^RCDPEARL($J("",9)_" NO DETAIL FOUND",.RCLNCNT,RCTMPND) Q
"RTN","RCDPEAR1",189,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",190,0)
 ...I 'RCDISPTY,'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",191,0)
 ...D SL^RCDPEARL($J("",9)_"*"_RCOUT(Z),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",192,0)
 ;
"RTN","RCDPEAR1",193,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR1",194,0)
 I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",195,0)
 ;
"RTN","RCDPEAR1",196,0)
EXIT ;
"RTN","RCDPEAR1",197,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR1",198,0)
 I '$D(ZTQUEUED),'RCLSTMGR D
"RTN","RCDPEAR1",199,0)
 .I 'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",200,0)
 .D ^%ZISC
"RTN","RCDPEAR1",201,0)
 ;
"RTN","RCDPEAR1",202,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEAR1",203,0)
 K ^TMP($J,"RCERA_AGED"),^TMP("RCSELPAY",$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEAR1",204,0)
 Q
"RTN","RCDPEAR1",205,0)
 ;
"RTN","RCDPEAR1",206,0)
HDRBLD ; create the report header
"RTN","RCDPEAR1",207,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEAR1",208,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR1",209,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAR1",210,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEAR1",211,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAR1",212,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEAR1",213,0)
 ; INPUT: 
"RTN","RCDPEAR1",214,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEAR1",215,0)
 ;   RCDTRNG - date range selected
"RTN","RCDPEAR1",216,0)
 ;   RCXCLUDE - TRICARE /CHAMPVA flags
"RTN","RCDPEAR1",217,0)
 ;   VAUTD
"RTN","RCDPEAR1",218,0)
 ;
"RTN","RCDPEAR1",219,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",220,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR1",221,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR1",222,0)
 .S RCHDR(1)="Aged Days^Trace #^Payment From/ID^ERA Date^File Date^Amount Paid^EEOB Cnt^ERA #^EEOB Detail"
"RTN","RCDPEAR1",223,0)
 ;
"RTN","RCDPEAR1",224,0)
 N DIV,HCNT,Y,CHATRI
"RTN","RCDPEAR1",225,0)
 ;
"RTN","RCDPEAR1",226,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEAR1",227,0)
 S HCNT=1
"RTN","RCDPEAR1",228,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",229,0)
 ;
"RTN","RCDPEAR1",230,0)
 ; divisions
"RTN","RCDPEAR1",231,0)
 S Y="DIVISIONS: " I $D(VAUTD)=1 S Y=Y_"ALL",Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",232,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",233,0)
 .N S,X S S=0 F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",234,0)
 ..S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",235,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y,Y=$J(" ",12)
"RTN","RCDPEAR1",236,0)
 ..S Y=Y_X
"RTN","RCDPEAR1",237,0)
 .;
"RTN","RCDPEAR1",238,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",239,0)
 ;
"RTN","RCDPEAR1",240,0)
 ; Payers
"RTN","RCDPEAR1",241,0)
 S Y="PAYERS: " I $D(RCPAY)=1 S Y=Y_RCPAY,Y=Y,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",242,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR1",243,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR1",244,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR1",245,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y,Y=$J(" ",8)
"RTN","RCDPEAR1",246,0)
 ..S Y=Y_X
"RTN","RCDPEAR1",247,0)
 .;
"RTN","RCDPEAR1",248,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",249,0)
 ;
"RTN","RCDPEAR1",250,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",251,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEAR1",252,0)
 S Y="DATE RANGE: "_Y("1ST")_" - "_Y("LST")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",253,0)
 S CHATRI="" F J="CHAMPVA","TRICARE" S Y=Y_"    "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")
"RTN","RCDPEAR1",254,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",255,0)
 ;
"RTN","RCDPEAR1",256,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR1",257,0)
 S Y="AGED"
"RTN","RCDPEAR1",258,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",259,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",260,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",261,0)
 S Y="          PAYMENT FROM/ID"
"RTN","RCDPEAR1",262,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",263,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",264,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",265,0)
 S Y="",$P(Y,"=",80)="",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",266,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",267,0)
 Q
"RTN","RCDPEAR1",268,0)
 ;
"RTN","RCDPEAR1",269,0)
HDRLM ; create the list manager version of the report header
"RTN","RCDPEAR1",270,0)
 ; returns RCHDR
"RTN","RCDPEAR1",271,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR1",272,0)
 ;INPUT:
"RTN","RCDPEAR1",273,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR1",274,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR1",275,0)
 ; RCLSTMGR
"RTN","RCDPEAR1",276,0)
 ;
"RTN","RCDPEAR1",277,0)
 N Z0 S Z0=""
"RTN","RCDPEAR1",278,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",279,0)
 N MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR1",280,0)
 S RCHDR(1)="DATE RANGE: "_$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z")_" - "_$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",281,0)
 S RCHDR(1)=RCHDR(1)_"    TRICARE: "_$S($G(RCXCLUDE("TRICARE")):"NO",1:"YES")
"RTN","RCDPEAR1",282,0)
 S RCHDR(1)=RCHDR(1)_"    CHAMPVA: "_$S($G(RCXCLUDE("CHAMPVA")):"NO",1:"YES")
"RTN","RCDPEAR1",283,0)
 S HCNT=1
"RTN","RCDPEAR1",284,0)
 ;
"RTN","RCDPEAR1",285,0)
 S Y="DIVISIONS: " I $D(VAUTD)=1 S Y=Y_"ALL",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",286,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",287,0)
 .N S,X S S=0 F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",288,0)
 ..S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",289,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",12)
"RTN","RCDPEAR1",290,0)
 ..S Y=Y_X
"RTN","RCDPEAR1",291,0)
 .;
"RTN","RCDPEAR1",292,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",293,0)
 ;
"RTN","RCDPEAR1",294,0)
 ; Payers
"RTN","RCDPEAR1",295,0)
 S Y="PAYERS: "
"RTN","RCDPEAR1",296,0)
 I $D(RCPAY)=1 D 
"RTN","RCDPEAR1",297,0)
 . S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",298,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR1",299,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR1",300,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR1",301,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR1",302,0)
 ..S Y=Y_X
"RTN","RCDPEAR1",303,0)
 .;
"RTN","RCDPEAR1",304,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",305,0)
 ;
"RTN","RCDPEAR1",306,0)
 S Y="AGED"
"RTN","RCDPEAR1",307,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",308,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",309,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",310,0)
 S Y="          PAYMENT FROM/ID"
"RTN","RCDPEAR1",311,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",312,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",313,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",314,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",315,0)
 Q
"RTN","RCDPEAR1",316,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPEAR1",317,0)
HDRNM() Q "ERA UNMATCHED AGING REPORT"
"RTN","RCDPEAR1",318,0)
 ;
"RTN","RCDPEAR1",319,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR1",320,0)
 N D,RCSF0,RC1ST,RCEXCEP,RCFLIEN,RCLN,RCSFIEN,RCZ,Z
"RTN","RCDPEAR1",321,0)
 ; RCSFIEN - sub-file ien
"RTN","RCDPEAR1",322,0)
 D HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEAR1",323,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR1",324,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",325,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",326,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",327,0)
 .S Z=$J(RCEXCEP_-RCZ,4)_U_$P(RC0,U,2)_U_$P(RC0,U,6)_"/"_$P(RC0,U,3)_U_$$FMTE^XLFDT($P(RC0,U,4),2)_U_$$FMTE^XLFDT($P(RC0,U,7),2)_U   ;PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",328,0)
 .S Z=Z_$P(RC0,U,5)_U_$P(RC0,U,11)_U_$P(RC0,U)
"RTN","RCDPEAR1",329,0)
 .W !,Z
"RTN","RCDPEAR1",330,0)
 .S RCLN=Z,RC1ST=0
"RTN","RCDPEAR1",331,0)
 .K Z
"RTN","RCDPEAR1",332,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D LSTXCEL W "^** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***"
"RTN","RCDPEAR1",333,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",334,0)
 ..N Q
"RTN","RCDPEAR1",335,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",336,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D LSTXCEL W "^** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **"
"RTN","RCDPEAR1",337,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D LSTXCEL W "^"_$G(^TMP($J,"RCERA_ADJ",Q))
"RTN","RCDPEAR1",338,0)
 .;
"RTN","RCDPEAR1",339,0)
 .S RCSFIEN=0 F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",340,0)
 ..N D
"RTN","RCDPEAR1",341,0)
 ..K RCOUT
"RTN","RCDPEAR1",342,0)
 ..S D=" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",343,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",344,0)
 ..D LSTXCEL W "^",D
"RTN","RCDPEAR1",345,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",346,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",347,0)
 ..I '$O(RCOUT(0)) D LSTXCEL W "^NO DETAIL FOUND" Q
"RTN","RCDPEAR1",348,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",349,0)
 ...D LSTXCEL W "^*"_RCOUT(Z)
"RTN","RCDPEAR1",350,0)
 ;
"RTN","RCDPEAR1",351,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPEAR1",352,0)
 Q
"RTN","RCDPEAR1",353,0)
 ;
"RTN","RCDPEAR1",354,0)
LSTXCEL ; Display repeat info line before each EEOB detail section.
"RTN","RCDPEAR1",355,0)
 ; First detail line does not need it
"RTN","RCDPEAR1",356,0)
 I RC1ST W !,RCLN Q
"RTN","RCDPEAR1",357,0)
 S RC1ST=1 Q
"RTN","RCDPEAR1",358,0)
 ;
"RTN","RCDPEAR1",359,0)
PRTQ2 I '$D(ZTQUEUED),'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",360,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",361,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",362,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR1",363,0)
 Q
"RTN","RCDPEAR1",364,0)
 ;
"RTN","RCDPEAR1",365,0)
SELPAY(RCRESPYR,RCJOB,RCPAY) ;localize the payer filters for header display
"RTN","RCDPEAR1",366,0)
 ; Input:
"RTN","RCDPEAR1",367,0)
 ;   RCRESPYR (pass-by-val/required) - payer filter response indicator (2=ALL, 3=SPECIFIC)
"RTN","RCDPEAR1",368,0)
 ;   RCJOB - job number to access the populated temporary global array in case report was tasked to run
"RTN","RCDPEAR1",369,0)
 ; Output:
"RTN","RCDPEAR1",370,0)
 ;   RCPAY (pass-by-ref/required) - local array of payers e.g. RCPAY="ALL", RCPAY(1)="Aetna",
"RTN","RCDPEAR1",371,0)
 ;                                  or RCPAY="start payer = end payer"
"RTN","RCDPEAR1",372,0)
 N CNT,I
"RTN","RCDPEAR1",373,0)
 I RCRESPYR=2 S RCPAY="ALL" Q
"RTN","RCDPEAR1",374,0)
 S:RCJOB="" RCJOB=$J   ; RCJOB should not be null
"RTN","RCDPEAR1",375,0)
 I RCRESPYR=3 D  Q
"RTN","RCDPEAR1",376,0)
 .S CNT=0
"RTN","RCDPEAR1",377,0)
 .F  S CNT=$O(^TMP("RCSELPAY",RCJOB,CNT)) Q:'CNT  D
"RTN","RCDPEAR1",378,0)
 ..S RCPAY(CNT)=^TMP("RCSELPAY",RCJOB,CNT)
"RTN","RCDPEAR1",379,0)
 ; RCRESPYR indicates a range of payers
"RTN","RCDPEAR1",380,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,"")),RCPAY=^(I)_" - "
"RTN","RCDPEAR1",381,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,""),-1),RCPAY=RCPAY_^(I)
"RTN","RCDPEAR1",382,0)
 Q
"RTN","RCDPEAR1",383,0)
 ;
"RTN","RCDPEAR1",384,0)
ZROBAL() ; function, Get Zero Payment Filter
"RTN","RCDPEAR1",385,0)
 ; returns 1 for yes, zero for no, -1 on '^' or timeout
"RTN","RCDPEAR1",386,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAR1",387,0)
 S DIR(0)="YA",DIR("A")="Include Zero payment amounts? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEAR1",388,0)
 D ^DIR
"RTN","RCDPEAR1",389,0)
 I $D(DUOUT)!$D(DIRUT)!$D(DTOUT) S Y=-1
"RTN","RCDPEAR1",390,0)
 Q Y
"RTN","RCDPEAR1",391,0)
 ;
"RTN","RCDPEAR1",392,0)
RLOAD(FILE) ; PRCA*4.5*284 - Load Payer temp global AFTER queued job starts
"RTN","RCDPEAR1",393,0)
 ; Load Selected payers from local array end exit
"RTN","RCDPEAR1",394,0)
 I +RCRESPYR=3 M ^TMP("RCSELPAY",$J)=RCPYRLST Q
"RTN","RCDPEAR1",395,0)
 N CNT,INDX,NUM,RCINSF,RCINST,RCPAY
"RTN","RCDPEAR1",396,0)
 ;
"RTN","RCDPEAR1",397,0)
 ; Load ALL payers and exit
"RTN","RCDPEAR1",398,0)
 I +RCRESPYR=2 D  Q
"RTN","RCDPEAR1",399,0)
 .S CNT=0,RCPAY="" F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCSELPAY",$J,CNT)=RCPAY
"RTN","RCDPEAR1",400,0)
 ;
"RTN","RCDPEAR1",401,0)
 ; Range of Payers
"RTN","RCDPEAR1",402,0)
 ; Build list of available stations
"RTN","RCDPEAR1",403,0)
 K ^TMP("RCPAYER",$J)  ; Clear residual list data
"RTN","RCDPEAR1",404,0)
 S CNT=0,RCPAY=""
"RTN","RCDPEAR1",405,0)
 F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCPAYER",$J,CNT)=RCPAY,^TMP("RCPAYER",$J,"B",RCPAY,CNT)=""
"RTN","RCDPEAR1",406,0)
 ;
"RTN","RCDPEAR1",407,0)
 S RCINSF=$P(RCRESPYR,"^",2),RCINST=$P(RCRESPYR,"^",3),INDX=1
"RTN","RCDPEAR1",408,0)
 F  S RCINSF=$O(^TMP("RCPAYER",$J,"B",RCINSF)) Q:RCINSF=""  Q:RCINSF]RCINST  D
"RTN","RCDPEAR1",409,0)
 .S NUM=$O(^TMP("RCPAYER",$J,"B",RCINSF,""))
"RTN","RCDPEAR1",410,0)
 .S ^TMP("RCSELPAY",$J,INDX)=$G(^TMP("RCPAYER",$J,NUM)),INDX=INDX+1
"RTN","RCDPEAR1",411,0)
 Q
"RTN","RCDPEAR1",412,0)
 ;
"RTN","RCDPEAR2")
0^7^B99664049
"RTN","RCDPEAR2",1,0)
RCDPEAR2 ;ALB/TMK/PJH - EFT Unmatched Aging Report - FILE 344.3 ;Nov 24, 2014@18:31:57
"RTN","RCDPEAR2",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,283,293,298**;Mar 20, 1995;Build 121
"RTN","RCDPEAR2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR2",4,0)
 Q
"RTN","RCDPEAR2",5,0)
 ;
"RTN","RCDPEAR2",6,0)
 ; PRCA*4.5*298 notes at bottom
"RTN","RCDPEAR2",7,0)
EN1 ; option: EFT Unmatched Aging Report [RCDPE EFT AGING REPORT]
"RTN","RCDPEAR2",8,0)
 N %ZIS,DIC,DIR,POP,RCDISPTY,RCDTRNG,RCEND,RCHDR,RCJOB,RCJOB1,RCLSTMGR,RCNP,RCPYRLST,RCPGNUM,RCSTART,X,Y
"RTN","RCDPEAR2",9,0)
 ; RCDISPTY = display type
"RTN","RCDPEAR2",10,0)
 ; RCEND = end date
"RTN","RCDPEAR2",11,0)
 ; RCLSTMGR = list manager flag
"RTN","RCDPEAR2",12,0)
 ; RCNP = payer info: "1^first payer^last payer" or "2^^" (for all)
"RTN","RCDPEAR2",13,0)
 ; RCPYRLST - payer list for selected payers
"RTN","RCDPEAR2",14,0)
 ; RCDTRNG= "1^start date^end date"
"RTN","RCDPEAR2",15,0)
 ; RCSTART = start date
"RTN","RCDPEAR2",16,0)
 ;
"RTN","RCDPEAR2",17,0)
 S RCLSTMGR=""  ; initial value
"RTN","RCDPEAR2",18,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) EN1Q
"RTN","RCDPEAR2",19,0)
 S RCSTART=$P(RCDTRNG,U,2)-1,RCEND=$P(RCDTRNG,U,3)
"RTN","RCDPEAR2",20,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR2",21,0)
 ; PRCA*4.5*284 - RCNP (Type of Response(1=Range,2=All,3=Specific)^From name^To name)
"RTN","RCDPEAR2",22,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31) G:RCNP<0 EN1Q
"RTN","RCDPEAR2",23,0)
 ;Get display type
"RTN","RCDPEAR2",24,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 EN1Q
"RTN","RCDPEAR2",25,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR2",26,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR2",27,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",28,0)
 S RCJOB=$J  ; needed in RPTOUT
"RTN","RCDPEAR2",29,0)
 ;
"RTN","RCDPEAR2",30,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR2",31,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL I RCLSTMGR<0 G EN1Q
"RTN","RCDPEAR2",32,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR2",33,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR2",34,0)
 .S RCTMPND=$T(+0)_"^EFT UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR2",35,0)
 .D RPTOUT
"RTN","RCDPEAR2",36,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR2",37,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR2",38,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPEAR2",39,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR2",40,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR2",41,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR2",42,0)
 ;
"RTN","RCDPEAR2",43,0)
 S RCJOB=$J,RCTMPND=""
"RTN","RCDPEAR2",44,0)
 ; Ask device
"RTN","RCDPEAR2",45,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR2",46,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR2",47,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSTOP
"RTN","RCDPEAR2",48,0)
 .S ZTRTN="RPTOUT^RCDPEAR2",ZTDESC="EFT AGING REPORT"
"RTN","RCDPEAR2",49,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR2",50,0)
 .; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEAR2",51,0)
 .I +RCNP=3 M RCPYRLST=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",52,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR2",53,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR2",54,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR2",55,0)
 ;
"RTN","RCDPEAR2",56,0)
 U IO D RPTOUT
"RTN","RCDPEAR2",57,0)
 ;
"RTN","RCDPEAR2",58,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR2",59,0)
 I 'RCLSTMGR D ^%ZISC
"RTN","RCDPEAR2",60,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J)
"RTN","RCDPEAR2",61,0)
 Q
"RTN","RCDPEAR2",62,0)
 ;
"RTN","RCDPEAR2",63,0)
RPTOUT ; Entry point for queued job, nightly job
"RTN","RCDPEAR2",64,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",65,0)
 ;         If undefined or null, output is printed
"RTN","RCDPEAR2",66,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR2",67,0)
 N DIC,DUOUT,RC0,RC13,RC3443,RCCT,RCIEN,RCNT,RCOUT,RCPAY,RCSTOP,RCTOT,RCZ,X,Z,Z0
"RTN","RCDPEAR2",68,0)
 S RCTMPND=$G(RCTMPND)
"RTN","RCDPEAR2",69,0)
 S (RCCT,RCSTOP,RCNT,RCTOT)=0
"RTN","RCDPEAR2",70,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",71,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEAR2",72,0)
 I $G(RCJOB)'="",RCJOB'=$J D
"RTN","RCDPEAR2",73,0)
 .K ^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",74,0)
 .D RLOAD^RCDPEAR1(344.31)
"RTN","RCDPEAR2",75,0)
 .S RCJOB=$J
"RTN","RCDPEAR2",76,0)
 ; build local payer array here
"RTN","RCDPEAR2",77,0)
 S RCNP=+RCNP
"RTN","RCDPEAR2",78,0)
 D SELPAY^RCDPEAR1(RCNP,RCJOB,.RCPAY)
"RTN","RCDPEAR2",79,0)
 I RCTMPND'="" K ^TMP($J,RCTMPND)
"RTN","RCDPEAR2",80,0)
 ; cross-ref on file #344.31 field #.08 - MATCH STATUS
"RTN","RCDPEAR2",81,0)
 S RCIEN=0 F  S RCIEN=$O(^RCY(344.31,"AMATCH",0,RCIEN)) Q:'RCIEN  D   ;unmatched entries only
"RTN","RCDPEAR2",82,0)
 .Q:$P($G(^RCY(344.31,RCIEN,3)),U)  ; EFT has been removed
"RTN","RCDPEAR2",83,0)
 .Q:$P($G(^RCY(344.31,RCIEN,0)),U,7)=0  ; payment of zero
"RTN","RCDPEAR2",84,0)
 .;
"RTN","RCDPEAR2",85,0)
 .S RC13=$P($G(^RCY(344.31,RCIEN,0)),U,13)  ; date received
"RTN","RCDPEAR2",86,0)
 .; Check for payer match
"RTN","RCDPEAR2",87,0)
 .I '$$CHKPYR^RCDPEDAR(RCIEN,0,RCJOB) Q
"RTN","RCDPEAR2",88,0)
 .; Check date range
"RTN","RCDPEAR2",89,0)
 .Q:(RCSTART>RC13)!(RC13>RCEND)
"RTN","RCDPEAR2",90,0)
 .; Passed all the filters - include on report
"RTN","RCDPEAR2",91,0)
 .S ^TMP($J,"RCEFT_AGED",$$FMDIFF^XLFDT(RC13,DT),RCIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR2",92,0)
 ;
"RTN","RCDPEAR2",93,0)
 D:'RCLSTMGR HDRBLD  ; create header
"RTN","RCDPEAR2",94,0)
 D:RCLSTMGR HDRLM  ; create Listman header
"RTN","RCDPEAR2",95,0)
 ;
"RTN","RCDPEAR2",96,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPEAR2",97,0)
 ;
"RTN","RCDPEAR2",98,0)
 ; Find total amount of EFTs
"RTN","RCDPEAR2",99,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",100,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",101,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",102,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",103,0)
 ;
"RTN","RCDPEAR2",104,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPEAR2",105,0)
 ;
"RTN","RCDPEAR2",106,0)
 S Z=$$SETSTR^VALM1("Totals:","",1,79)
"RTN","RCDPEAR2",107,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",108,0)
 S Z=$$SETSTR^VALM1(" Number Aged Electronic EFT Messages Found: "_RCNT,"",1,79)
"RTN","RCDPEAR2",109,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",110,0)
 S Z=$$SETSTR^VALM1(" Amount Aged Electronic EFT Messages Found: $"_$FN(+RCTOT,",",2),"",1,79)
"RTN","RCDPEAR2",111,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",112,0)
 D SL^RCDPEARL($TR($J("",IOM)," ","="),.RCCT,RCTMPND)
"RTN","RCDPEAR2",113,0)
 ;
"RTN","RCDPEAR2",114,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",115,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",116,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCCT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR2",117,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",118,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",119,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",120,0)
 .S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR2",121,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,4),Z,5,75)
"RTN","RCDPEAR2",122,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",123,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",124,0)
 .S Z=$$SETSTR^VALM1(RCPAY_"/"_$P(RC0,U,3),"",11,69) ; PRCA*4.5*298
"RTN","RCDPEAR2",125,0)
 .S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,12),2),Z,70,10)
"RTN","RCDPEAR2",126,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",127,0)
 .S Z=$$SETSTR^VALM1($J("",6)_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:""),"",1,17)
"RTN","RCDPEAR2",128,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,7),15,2),Z,18,17)
"RTN","RCDPEAR2",129,0)
 .; PRCA*4.5*283 - change length from 8 to 11 to allow for 9 digit DEP #'s
"RTN","RCDPEAR2",130,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC3443,U,6),Z,35,11)
"RTN","RCDPEAR2",131,0)
 .S Z=$$SETSTR^VALM1("  "_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):" "_$$FMTE^XLFDT($P(RC3443,U,11),2),1:""),Z,47,36)
"RTN","RCDPEAR2",132,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",133,0)
 .K RCOUT
"RTN","RCDPEAR2",134,0)
 .D GETS^DIQ(344.31,RCIEN_",",2,"E","RCOUT")
"RTN","RCDPEAR2",135,0)
 .Q:'$O(RCOUT(344.31,RCIEN_",",2,0))
"RTN","RCDPEAR2",136,0)
 .D SL^RCDPEARL($J("",8)_"--EXCEPTION NOTES--",.RCCT,RCTMPND)
"RTN","RCDPEAR2",137,0)
 .S Z=0 F  S Z=$O(RCOUT(344.31,RCIEN_",",2,Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR2",138,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",139,0)
 ..D SL^RCDPEARL($J("",8)_" "_RCOUT(344.31,RCIEN_",",2,Z),.RCCT,RCTMPND)
"RTN","RCDPEAR2",140,0)
 ;
"RTN","RCDPEAR2",141,0)
 ;
"RTN","RCDPEAR2",142,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR2",143,0)
 D SL^RCDPEARL(" ",.RCCT,RCTMPND)  ; skip a line
"RTN","RCDPEAR2",144,0)
 D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCCT,RCTMPND)
"RTN","RCDPEAR2",145,0)
 ;
"RTN","RCDPEAR2",146,0)
PRTQ ;
"RTN","RCDPEAR2",147,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR2",148,0)
 I '$D(ZTQUEUED),'RCLSTMGR,'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR2",149,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",150,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",151,0)
 K ^TMP($J,"RCEFT_AGED"),ZTQUEUED
"RTN","RCDPEAR2",152,0)
 Q
"RTN","RCDPEAR2",153,0)
 ;
"RTN","RCDPEAR2",154,0)
 ; extrinsic variable, text for header PRCA*4.5*298
"RTN","RCDPEAR2",155,0)
HDRNM() Q "EFT UNMATCHED AGING REPORT"
"RTN","RCDPEAR2",156,0)
 ;
"RTN","RCDPEAR2",157,0)
HDRBLD ; create the report header
"RTN","RCDPEAR2",158,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEAR2",159,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",160,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAR2",161,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEAR2",162,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAR2",163,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEAR2",164,0)
 ;INPUT:
"RTN","RCDPEAR2",165,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",166,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",167,0)
 ; RCLSTMGR
"RTN","RCDPEAR2",168,0)
 ;
"RTN","RCDPEAR2",169,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",170,0)
 ;
"RTN","RCDPEAR2",171,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR2",172,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR2",173,0)
 .S RCHDR(1)="Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Deposit #^Deposit Post Status^Deposit Date"
"RTN","RCDPEAR2",174,0)
 ;
"RTN","RCDPEAR2",175,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",176,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",177,0)
 ;
"RTN","RCDPEAR2",178,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",179,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEAR2",180,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",181,0)
 ;
"RTN","RCDPEAR2",182,0)
 ; Payer(s)
"RTN","RCDPEAR2",183,0)
 S Y="PAYERS: " D
"RTN","RCDPEAR2",184,0)
 .I $D(RCPAY)=1 S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y Q
"RTN","RCDPEAR2",185,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR2",186,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR2",187,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR2",188,0)
 ..S Y=Y_X
"RTN","RCDPEAR2",189,0)
 .;
"RTN","RCDPEAR2",190,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR2",191,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",192,0)
 S Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",193,0)
 ;
"RTN","RCDPEAR2",194,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",195,0)
 S Y="DAYS  TRACE #",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",196,0)
 S Y="          DEPOSIT FROM/ID                                               DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",197,0)
 S Y="      FILE DATE     DEPOSIT AMOUNT  DEP #       DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",198,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPEAR2",199,0)
 ;
"RTN","RCDPEAR2",200,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",201,0)
 ;
"RTN","RCDPEAR2",202,0)
 Q
"RTN","RCDPEAR2",203,0)
 ;
"RTN","RCDPEAR2",204,0)
HDRLM ; create the Listman header section
"RTN","RCDPEAR2",205,0)
 ; returns RCHDR
"RTN","RCDPEAR2",206,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",207,0)
 ;INPUT:
"RTN","RCDPEAR2",208,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",209,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",210,0)
 ;
"RTN","RCDPEAR2",211,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",212,0)
 ;
"RTN","RCDPEAR2",213,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",214,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",215,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",216,0)
 S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",217,0)
 ; Payer(s)
"RTN","RCDPEAR2",218,0)
 S Y="PAYERS: " D
"RTN","RCDPEAR2",219,0)
 .I $D(RCPAY)=1 S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=Y Q
"RTN","RCDPEAR2",220,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR2",221,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR2",222,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR2",223,0)
 ..S Y=Y_X
"RTN","RCDPEAR2",224,0)
 .;
"RTN","RCDPEAR2",225,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR2",226,0)
 ;
"RTN","RCDPEAR2",227,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR2",228,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",229,0)
 S Y="DAYS TRACE #",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",230,0)
 S Y="         DEPOSIT FROM/ID                                               DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",231,0)
 S Y="     FILE DATE     DEPOSIT AMOUNT  DEP #       DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",232,0)
 ;
"RTN","RCDPEAR2",233,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",234,0)
 ;
"RTN","RCDPEAR2",235,0)
 Q
"RTN","RCDPEAR2",236,0)
 ;
"RTN","RCDPEAR2",237,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR2",238,0)
 W !!,"Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Deposit #^Deposit Post Status^Deposit Date"
"RTN","RCDPEAR2",239,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR2",240,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",241,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",242,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",243,0)
 .S Z=$J(-RCZ,4)_"^"_$P(RC0,U,4)_"^"_RCPAY_"/"_$P(RC0,U,3)_"^"_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:"")_"^" ; PRCA*4.5*298
"RTN","RCDPEAR2",244,0)
 .S Z=Z_$P(RC0,U,7)_"^"_$P(RC3443,U,6)_"^"_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):"^"_$$FMTE^XLFDT($P(RC0,U,12),2),1:"")
"RTN","RCDPEAR2",245,0)
 .W !,Z
"RTN","RCDPEAR2",246,0)
 W !!,"*** END OF REPORT ***",!
"RTN","RCDPEAR2",247,0)
 ;
"RTN","RCDPEAR2",248,0)
PRTQ2 ;
"RTN","RCDPEAR2",249,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",250,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",251,0)
 K ^TMP($J,"RCEFT_AGED"),^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",252,0)
 Q
"RTN","RCDPEAR2",253,0)
 ;
"RTN","RCDPEAR2",254,0)
 ;PRCA*4.5*298
"RTN","RCDPEAR2",255,0)
 ; removed RCIND local variable
"RTN","RCDPEAR2",256,0)
 ; changed RC00 to RC3443
"RTN","RCDPEAR2",257,0)
 ; replaced SETLINE with SL^RCDPEARL
"RTN","RCDPEAR2",258,0)
 ; added $$HDRNM
"RTN","RCDPEAR2",259,0)
 ; added RCLSTMGR in checks for header
"RTN","RCDPEAR2",260,0)
 ; changed upper case text to mixed case throughout
"RTN","RCDPEAR2",261,0)
 ;
"RTN","RCDPEARL")
0^72^B31596491
"RTN","RCDPEARL",1,0)
RCDPEARL ;ALB/hrubovcak - Misc. Report utilities for ListMan, etc. ;Jun 06, 2014@19:11:19
"RTN","RCDPEARL",2,0)
 ;;4.5;Accounts Receivable;**298**;15 April 2014;Build 121
"RTN","RCDPEARL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEARL",4,0)
 ;
"RTN","RCDPEARL",5,0)
 ; IA 594 - ACCOUNTS RECEIVABLE CATEGORY file (#430.2)
"RTN","RCDPEARL",6,0)
 ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPEARL",7,0)
 ; IA 3822 - RATE TYPE file (#399.3)
"RTN","RCDPEARL",8,0)
 ; IA 4051 - EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEARL",9,0)
 ;
"RTN","RCDPEARL",10,0)
 Q
"RTN","RCDPEARL",11,0)
 ;
"RTN","RCDPEARL",12,0)
ASK(STOP) ; Ask to continue
"RTN","RCDPEARL",13,0)
 ; STOP passed by ref., returned as 1 if timeout or user enters '^'
"RTN","RCDPEARL",14,0)
 Q:'($E(IOST,1,2)="C-")  ; must have user
"RTN","RCDPEARL",15,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEARL",16,0)
 S DIR("A")="Press enter to continue, '^' to exit: "
"RTN","RCDPEARL",17,0)
 S DIR(0)="EA" D ^DIR
"RTN","RCDPEARL",18,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y="^") S STOP=1
"RTN","RCDPEARL",19,0)
 Q
"RTN","RCDPEARL",20,0)
 ;
"RTN","RCDPEARL",21,0)
ASKLM() ; extrinsic function, ask for ListMan display using ^DIR
"RTN","RCDPEARL",22,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",23,0)
 N DIR,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",24,0)
 S DIR(0)="YA",DIR("A")="Display in List Manager format? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEARL",25,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",26,0)
 Q RSLT
"RTN","RCDPEARL",27,0)
 ;
"RTN","RCDPEARL",28,0)
CLMCHMPV(RCLMIEN) ; boolean function, returns true if CHAMPVA claim, else false
"RTN","RCDPEARL",29,0)
 ; RCLMIEN - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",30,0)
 Q $$EVALCLM(RCLMIEN,"CHAMPVA")
"RTN","RCDPEARL",31,0)
 ;
"RTN","RCDPEARL",32,0)
CLMTRICR(RCLMIEN) ; boolean function, returns true if TRICARE claim, else false
"RTN","RCDPEARL",33,0)
 ; RCLMIEN - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",34,0)
 Q $$EVALCLM(RCLMIEN,"TRICARE")
"RTN","RCDPEARL",35,0)
 ;
"RTN","RCDPEARL",36,0)
ENDORPRT() ; extrinsic variable, formatted for 80 column display
"RTN","RCDPEARL",37,0)
 N A S A="***** END OF REPORT *****" Q $J(" ",80-$L(A)\2)_A
"RTN","RCDPEARL",38,0)
 ;
"RTN","RCDPEARL",39,0)
EVALCLM(RCLMIEN,TRGTXT) ; boolean function, case insensitive
"RTN","RCDPEARL",40,0)
 ; returns 1 if claim has target text, else false (error messages evaluate as false)
"RTN","RCDPEARL",41,0)
 ; RCLMIEN (required) - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",42,0)
 ; TRGTXT (required) - target text
"RTN","RCDPEARL",43,0)
 Q:($G(RCLMIEN)="")!($G(TRGTXT)="") "^invalid"  ; both required
"RTN","RCDPEARL",44,0)
 N RSLT,F,R,T
"RTN","RCDPEARL",45,0)
 S T=$$UP(TRGTXT),RSLT=0  ; text to uppercase, default to false
"RTN","RCDPEARL",46,0)
 S F=$G(RCLMIEN) Q:'($P(F,";")>1)!'($P(F,";",2)>0) RSLT  ; file must be > 1 and entry > zero
"RTN","RCDPEARL",47,0)
 S R=$$PTR4302(RCLMIEN) Q:'R RSLT  ; no text to check
"RTN","RCDPEARL",48,0)
 ;
"RTN","RCDPEARL",49,0)
 S F=$$UP($P(R,";",2,99))  ; text of entry from ACCOUNTS RECEIVABLE CATEGORY (#430.2)
"RTN","RCDPEARL",50,0)
 S RSLT=F[T  ; boolean result
"RTN","RCDPEARL",51,0)
 Q RSLT
"RTN","RCDPEARL",52,0)
 ;
"RTN","RCDPEARL",53,0)
INCHMPVA() ; function, include CHAMPVA question
"RTN","RCDPEARL",54,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",55,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",56,0)
 S DIR(0)="YA",DIR("A")="Include CHAMPVA? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEARL",57,0)
 S DIR("?")="Enter 'NO' to exclude entries related to CHAMPVA from the report."
"RTN","RCDPEARL",58,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",59,0)
 Q RSLT
"RTN","RCDPEARL",60,0)
 ;
"RTN","RCDPEARL",61,0)
INTRICAR() ; function, include TRICARE question
"RTN","RCDPEARL",62,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",63,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",64,0)
 S DIR(0)="YA",DIR("A")="Include TRICARE? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEARL",65,0)
 S DIR("?")="Enter 'NO' to exclude entries related to TRICARE from the report."
"RTN","RCDPEARL",66,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",67,0)
 Q RSLT
"RTN","RCDPEARL",68,0)
 ;
"RTN","RCDPEARL",69,0)
HDRLST(RCSTOP,RCHDR) ; write the header in RCHDR
"RTN","RCDPEARL",70,0)
 ; RCSTOP, RCHDR passed by ref.
"RTN","RCDPEARL",71,0)
 Q:RCSTOP  ; nothing to do
"RTN","RCDPEARL",72,0)
 ;
"RTN","RCDPEARL",73,0)
 I $E(IOST,1,2)="C-",'RCDISPTY,RCPGNUM D ASK(.RCSTOP)
"RTN","RCDPEARL",74,0)
 Q:RCSTOP  ; no header needed
"RTN","RCDPEARL",75,0)
 I 'RCDISPTY W @IOF
"RTN","RCDPEARL",76,0)
 X RCHDR("XECUTE")  ; increment page count, insert into header
"RTN","RCDPEARL",77,0)
 N J F J=1:1:RCHDR(0) W !,RCHDR(J)
"RTN","RCDPEARL",78,0)
 Q
"RTN","RCDPEARL",79,0)
 ;
"RTN","RCDPEARL",80,0)
LMEN ; invoke ListMan for RCDPE MISC REPORTS list template
"RTN","RCDPEARL",81,0)
 ; external routines should call LMRPT
"RTN","RCDPEARL",82,0)
 D EN^VALM("RCDPE MISC REPORTS")
"RTN","RCDPEARL",83,0)
 Q
"RTN","RCDPEARL",84,0)
 ;
"RTN","RCDPEARL",85,0)
LMHDR ; ListMan header
"RTN","RCDPEARL",86,0)
 N J S J=0
"RTN","RCDPEARL",87,0)
 F J=1:1 Q:'$D(RCLMHDR(J))  S VALMHDR(J)=RCLMHDR(J)
"RTN","RCDPEARL",88,0)
 S:$G(RCLMHDR("TITLE"))'="" VALM("TITLE")=RCLMHDR("TITLE")
"RTN","RCDPEARL",89,0)
 Q
"RTN","RCDPEARL",90,0)
 ;
"RTN","RCDPEARL",91,0)
LMINIT ; set up ListMan array, invoked from inside List Template
"RTN","RCDPEARL",92,0)
 ;
"RTN","RCDPEARL",93,0)
 N C,J,Y S (J,C)=0
"RTN","RCDPEARL",94,0)
 F  S J=$O(@RCLMND@(J)) Q:'J  S Y=$G(@RCLMND@(J)),C=C+1 D SET^VALM10(C,Y)
"RTN","RCDPEARL",95,0)
 S VALMCNT=C
"RTN","RCDPEARL",96,0)
 Q
"RTN","RCDPEARL",97,0)
 ;
"RTN","RCDPEARL",98,0)
LMHLP ; ListMan help
"RTN","RCDPEARL",99,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPEARL",100,0)
 Q
"RTN","RCDPEARL",101,0)
 ;
"RTN","RCDPEARL",102,0)
LMEXIT ; performed on exiting ListMan screen
"RTN","RCDPEARL",103,0)
 K @RCLMND  ; delete ListMan data
"RTN","RCDPEARL",104,0)
 D FULL^VALM1  ; reset terminal display
"RTN","RCDPEARL",105,0)
 Q
"RTN","RCDPEARL",106,0)
 ;
"RTN","RCDPEARL",107,0)
LMEXPND ; expand code for ListMan
"RTN","RCDPEARL",108,0)
 Q
"RTN","RCDPEARL",109,0)
 ;
"RTN","RCDPEARL",110,0)
LMRPT(RCLMHDR,RCLMND) ; generate ListMan display
"RTN","RCDPEARL",111,0)
 ; RCLMHDR = header text, passed by ref. (required)
"RTN","RCDPEARL",112,0)
 ; RCLMND = storage node for ListMan data (required)
"RTN","RCDPEARL",113,0)
 Q:'$D(RCLMHDR)  Q:($G(RCLMND)="")  ; both required
"RTN","RCDPEARL",114,0)
 D LMEN
"RTN","RCDPEARL",115,0)
 Q
"RTN","RCDPEARL",116,0)
 ;
"RTN","RCDPEARL",117,0)
NOW() Q $$FMTE^XLFDT($$NOW^XLFDT,2)  ; extrinsic variable, now as MM/DD/YY@HH:MM:SS
"RTN","RCDPEARL",118,0)
 ;
"RTN","RCDPEARL",119,0)
PAD(TXT,LNGTH) ; function, pad TXT with spaces to LNGTH
"RTN","RCDPEARL",120,0)
 Q $$LJ^XLFSTR(TXT,LNGTH)
"RTN","RCDPEARL",121,0)
 ;
"RTN","RCDPEARL",122,0)
PTR4302(FLNTRY) ; function, returns entry from 430.2 or error message
"RTN","RCDPEARL",123,0)
 ; FLNTRY - file entry (required), format: 'file #;ien'
"RTN","RCDPEARL",124,0)
 ; on success returns 'ien^name' else '^error message'
"RTN","RCDPEARL",125,0)
 ; file number and ien can be from:
"RTN","RCDPEARL",126,0)
 ;  ^PRCA(430.2,0) = ACCOUNTS RECEIVABLE CATEGORY^430.2I
"RTN","RCDPEARL",127,0)
 ;  ^DGCR(399.3,0) = RATE TYPE^399.3I^
"RTN","RCDPEARL",128,0)
 ;  ^DGCR(399,0) = BILL/CLAIMS^399I
"RTN","RCDPEARL",129,0)
 ;  ^IBM(361.1,0) = EXPLANATION OF BENEFITS^361.1PI^
"RTN","RCDPEARL",130,0)
 ;  ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I
"RTN","RCDPEARL",131,0)
 ;  ^RCY(344,0) = AR BATCH PAYMENT^344I
"RTN","RCDPEARL",132,0)
 ;
"RTN","RCDPEARL",133,0)
 N F,PF,RCFLNUM,RCIEN,RSLT,X,Y
"RTN","RCDPEARL",134,0)
 ; PF - parent file
"RTN","RCDPEARL",135,0)
 ; RCFLNUM - file number
"RTN","RCDPEARL",136,0)
 ; RCIEN - internal entry number
"RTN","RCDPEARL",137,0)
 ; RSLT - result
"RTN","RCDPEARL",138,0)
 ;
"RTN","RCDPEARL",139,0)
 S RSLT=U,F=$G(FLNTRY),RCFLNUM=+$P(F,";"),RCIEN=+$P(F,";",2)
"RTN","RCDPEARL",140,0)
 Q:'(RCFLNUM>1) U_"invalid file #"
"RTN","RCDPEARL",141,0)
 Q:'(RCIEN>0) U_"invalid IEN"
"RTN","RCDPEARL",142,0)
 ;
"RTN","RCDPEARL",143,0)
 ; default result
"RTN","RCDPEARL",144,0)
 S RSLT="^file "_RCFLNUM_" no entry #"_RCIEN
"RTN","RCDPEARL",145,0)
 ;
"RTN","RCDPEARL",146,0)
 ; ACCOUNTS RECEIVABLE CATEGORY file #430.2
"RTN","RCDPEARL",147,0)
 I RCFLNUM=430.2 D  Q RSLT
"RTN","RCDPEARL",148,0)
 .S X=$G(^PRCA(430.2,RCIEN,0)),Y=$P(X,U) S:Y]"" RSLT=RCIEN_";"_Y
"RTN","RCDPEARL",149,0)
 ;
"RTN","RCDPEARL",150,0)
 ; RATE TYPE file #399.3, (#.06) ACCOUNTS RECEIVABLE CATEGORY [6P:430.2]
"RTN","RCDPEARL",151,0)
 I RCFLNUM=399.3 D  Q RSLT
"RTN","RCDPEARL",152,0)
 .S X=$G(^DGCR(399.3,RCIEN,0)),Y=+$P(X,U,6) Q:'(Y>0)
"RTN","RCDPEARL",153,0)
 .S RSLT=$$PTR4302("430.2;"_Y)
"RTN","RCDPEARL",154,0)
 ;
"RTN","RCDPEARL",155,0)
 ; BILL/CLAIMS file #399, (#.07) RATE TYPE [7P:399.3]
"RTN","RCDPEARL",156,0)
 I RCFLNUM=399 D  Q RSLT
"RTN","RCDPEARL",157,0)
 .S X=$G(^DGCR(399,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",158,0)
 .S PF=399.3,RSLT="^no pointer to "_PF,Y=+$P(X,U,7) Q:'(Y>0)
"RTN","RCDPEARL",159,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",160,0)
 ;
"RTN","RCDPEARL",161,0)
 ; EXPLANATION OF BENEFITS file #361.1, (#.01) BILL [1P:399]
"RTN","RCDPEARL",162,0)
 I RCFLNUM=361.1 D  Q RSLT
"RTN","RCDPEARL",163,0)
 .S X=$G(^IBM(361.1,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",164,0)
 .S PF=399,RSLT="^no pointer to "_PF,Y=+$P(X,U) Q:'(Y>0)
"RTN","RCDPEARL",165,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",166,0)
 ;
"RTN","RCDPEARL",167,0)
 ; ELECTRONIC REMITTANCE ADVICE file #344.4
"RTN","RCDPEARL",168,0)
 ;  ERA DETAIL sub-file #344.41, (#.02) EOB DETAIL [2P:361.1]
"RTN","RCDPEARL",169,0)
 I RCFLNUM=344.4 D  Q RSLT
"RTN","RCDPEARL",170,0)
 .S X=$G(^RCY(344.4,RCIEN,0)) Q:X=""  ; top level entry not found
"RTN","RCDPEARL",171,0)
 .S RSLT="^sub-file 344.41 no entries"
"RTN","RCDPEARL",172,0)
 .; take first entry that gives result from file #430.2
"RTN","RCDPEARL",173,0)
 .N J,C S (J,C)=0 F  S J=$O(^RCY(344.4,RCIEN,1,J)) Q:'J!RSLT  S X=$G(^(J,0)) D
"RTN","RCDPEARL",174,0)
 ..S PF=361.1,RSLT="^no pointer to "_PF
"RTN","RCDPEARL",175,0)
 ..S Y=+$P(X,U,2) Q:'(Y>0)  S C=C+1
"RTN","RCDPEARL",176,0)
 ..S RSLT="^sub-file 344.41 total checked "_C,F=$$PTR4302(PF_";"_Y) S:F RSLT=F
"RTN","RCDPEARL",177,0)
 ;
"RTN","RCDPEARL",178,0)
 ; AR BATCH PAYMENT file #344, (#.18) ERA REFERENCE [18P:344.4]
"RTN","RCDPEARL",179,0)
 I RCFLNUM=344 D  Q RSLT
"RTN","RCDPEARL",180,0)
 .S X=$G(^RCY(344,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",181,0)
 .S PF=344.4,Y=+$P(X,U,18),RSLT="^no pointer to "_PF Q:'(Y>0)
"RTN","RCDPEARL",182,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",183,0)
 ;
"RTN","RCDPEARL",184,0)
 ; finished all checks, valid file number not found
"RTN","RCDPEARL",185,0)
 S RSLT=U_"invalid file #"_RCFLNUM
"RTN","RCDPEARL",186,0)
 ;
"RTN","RCDPEARL",187,0)
 Q RSLT
"RTN","RCDPEARL",188,0)
 ;
"RTN","RCDPEARL",189,0)
SL(T,RCLNCNT,RC2GLBL) ; Set text into global or write line
"RTN","RCDPEARL",190,0)
 ; T = text to output
"RTN","RCDPEARL",191,0)
 ; RCLNCNT = line counter, passed by ref. (optional)
"RTN","RCDPEARL",192,0)
 ; RC2GLBL = if non-null indicates output to global, no writes
"RTN","RCDPEARL",193,0)
 I $G(RC2GLBL)="" W !,T Q
"RTN","RCDPEARL",194,0)
 S RCLNCNT=RCLNCNT+1,^TMP($J,RC2GLBL,RCLNCNT)=T
"RTN","RCDPEARL",195,0)
 Q
"RTN","RCDPEARL",196,0)
 ;
"RTN","RCDPEARL",197,0)
UP(A) ; Returns UPPERCASE
"RTN","RCDPEARL",198,0)
 Q $$UP^XLFSTR(A)
"RTN","RCDPEDA1")
0^9^B3534
"RTN","RCDPEDA1",1,0)
RCDPEDA1 ;ALB/TMK/PJH - ACTIVITY REPORT HEADER ;Jun 06, 2014@19:11:19
"RTN","RCDPEDA1",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,283,298**;Mar 20, 1995;Build 121
"RTN","RCDPEDA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA1",4,0)
 Q
"RTN","RCDPEDA1",5,0)
 ; code moved to RCDPEDAR routine
"RTN","RCDPEDA1",6,0)
 ;
"RTN","RCDPEDAR")
0^8^B196389465
"RTN","RCDPEDAR",1,0)
RCDPEDAR ;ALB/TMK - ACTIVITY REPORT ;Jun 06, 2014@19:11:19
"RTN","RCDPEDAR",2,0)
 ;;4.5;Accounts Receivable;**173,276,284,283,298**;Mar 20, 1995;Build 121
"RTN","RCDPEDAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDAR",4,0)
 Q
"RTN","RCDPEDAR",5,0)
 ;
"RTN","RCDPEDAR",6,0)
RPT ; Daily Activity Rpt On Demand
"RTN","RCDPEDAR",7,0)
 N RCDET,RCDIV,RCDT1,RCDT2,RCHDR,RCINC,RCLSTMGR,RCNJ,RCNP,RCPG,RCPYRSEL,RCRANGE,RCTMPND,VAUTD,X,Y
"RTN","RCDPEDAR",8,0)
 ; RCDT1 - date range start
"RTN","RCDPEDAR",9,0)
 ; RCDT2 - date range end
"RTN","RCDPEDAR",10,0)
 ; RCNP - payer selection
"RTN","RCDPEDAR",11,0)
 ; RCPYRSEL - payer selection, used for tasked job to store ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",12,0)
 ; RCTMPND - storage node
"RTN","RCDPEDAR",13,0)
 ;
"RTN","RCDPEDAR",14,0)
 S RCNJ=0  ; not the nightly job, user interactions
"RTN","RCDPEDAR",15,0)
 ; Get division/station
"RTN","RCDPEDAR",16,0)
 D DIVISION^VAUTOMA  ; sets VAUTD
"RTN","RCDPEDAR",17,0)
 I 'VAUTD&($D(VAUTD)'=11) G RPTQ
"RTN","RCDPEDAR",18,0)
 N DIR,DTOUT,DUOUT
"RTN","RCDPEDAR",19,0)
 S DIR("A")="(S)UMMARY OR (D)ETAIL?: ",DIR(0)="SA^S:SUMMARY TOTALS ONLY;D:DETAIL AND TOTALS"
"RTN","RCDPEDAR",20,0)
 S DIR("B")="D" D ^DIR K DIR
"RTN","RCDPEDAR",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",22,0)
 S RCDET=(Y="D")
"RTN","RCDPEDAR",23,0)
 K DIR
"RTN","RCDPEDAR",24,0)
 S DIR("?")="ENTER THE EARLIEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",25,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",26,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",27,0)
 S RCDT1=Y
"RTN","RCDPEDAR",28,0)
 K DIR
"RTN","RCDPEDAR",29,0)
 S DIR("?")="ENTER THE LATEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",30,0)
 S DIR("B")=Y(0)
"RTN","RCDPEDAR",31,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",32,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",33,0)
 S RCDT2=Y
"RTN","RCDPEDAR",34,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEDAR",35,0)
 ; PRCA*4.5*284 - RCNP is Type of Response (1=Range,2=All,3=Specific) ^ From Range^ Thru Range
"RTN","RCDPEDAR",36,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31) I +RCNP=-1 G RPTQ
"RTN","RCDPEDAR",37,0)
 ;
"RTN","RCDPEDAR",38,0)
 ; PRCA*4.5*298 - Add List Manager Prompts
"RTN","RCDPEDAR",39,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL I RCLSTMGR<0 G RPTQ  ; '^' or timeout
"RTN","RCDPEDAR",40,0)
 ;
"RTN","RCDPEDAR",41,0)
 I RCLSTMGR=1 D  G RPTQ  ; ListMan format, put in array
"RTN","RCDPEDAR",42,0)
 .S RCTMPND="RCDPE_DAR"
"RTN","RCDPEDAR",43,0)
 .K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",44,0)
 .N RCCT,RCNJ,RCPG
"RTN","RCDPEDAR",45,0)
 .S RCNJ=1,RCPG=1,RCCT=0
"RTN","RCDPEDAR",46,0)
 .D EN(RCDET,RCDT1,RCDT2)
"RTN","RCDPEDAR",47,0)
 .D LMHDR(.RCSTOP,RCDET,1)
"RTN","RCDPEDAR",48,0)
 .D LMRPT^RCDPEARL(.RCHDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEDAR",49,0)
 .I $D(RCTMPND) K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",50,0)
 ;
"RTN","RCDPEDAR",51,0)
 ; Ask device
"RTN","RCDPEDAR",52,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEDAR",53,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEDAR",54,0)
 .N ZTDSC,ZTRTN,ZTSK
"RTN","RCDPEDAR",55,0)
 .S ZTRTN="EN^RCDPEDAR("_RCDET_","_RCDT1_","_RCDT2_")",ZTDESC="AR - EDI LOCKBOX EFT DAILY ACTIVITY REPORT"
"RTN","RCDPEDAR",56,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEDAR",57,0)
 .; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEDAR",58,0)
 .M RCPYRSEL=^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",59,0)
 .D ^%ZTLOAD
"RTN","RCDPEDAR",60,0)
 .W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPEDAR",61,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEDAR",62,0)
 ;
"RTN","RCDPEDAR",63,0)
 U IO D EN(RCDET,RCDT1,RCDT2)
"RTN","RCDPEDAR",64,0)
 ;
"RTN","RCDPEDAR",65,0)
RPTQ ;
"RTN","RCDPEDAR",66,0)
 Q
"RTN","RCDPEDAR",67,0)
 ;
"RTN","RCDPEDAR",68,0)
EN(RCDET,RCDT1,RCDT2) ; Entry point for report, might be queued
"RTN","RCDPEDAR",69,0)
 ; RCDET = 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",70,0)
 ; RCDT1, RCDT2 = date from, to
"RTN","RCDPEDAR",71,0)
 N DATA,RC,RCFLG,RCIEN,RCJOB,RCPG,RCSTOP,RCT,STATION,Z,Z0
"RTN","RCDPEDAR",72,0)
 ;
"RTN","RCDPEDAR",73,0)
 I $G(ZTSK) N ZTSTOP  ; job was tasked, ZTSTOP = flag to stop
"RTN","RCDPEDAR",74,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEDAR",75,0)
 I $D(RCPYRSEL) D
"RTN","RCDPEDAR",76,0)
 .K ^TMP("RCSELPAY",$J) M ^TMP("RCSELPAY",$J)=RCPYRSEL
"RTN","RCDPEDAR",77,0)
 ;
"RTN","RCDPEDAR",78,0)
 S RCNP=+RCNP,RCJOB=$J
"RTN","RCDPEDAR",79,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",80,0)
 S Z=RCDT1-.0001,(RCSTOP,RCT)=0
"RTN","RCDPEDAR",81,0)
 F  S Z=$O(^RCY(344.3,"ARECDT",Z)) Q:'Z!(Z>(RCDT2_".9999"))!RCSTOP  D
"RTN","RCDPEDAR",82,0)
 .S Z0=0 F  S Z0=$O(^RCY(344.3,"ARECDT",Z,Z0)) Q:'Z0!RCSTOP  D
"RTN","RCDPEDAR",83,0)
 ..S DATA=$G(^RCY(344.3,Z0,0)),RCFLG=0
"RTN","RCDPEDAR",84,0)
 ..S RCIEN="" F  S RCIEN=$O(^RCY(344.31,"B",Z0,RCIEN)) Q:RCIEN=""  D
"RTN","RCDPEDAR",85,0)
 ...I '$$CHKPYR(RCIEN,0,RCJOB) Q  ; check payer
"RTN","RCDPEDAR",86,0)
 ...I '$$CHKDIV(RCIEN,0,.VAUTD) Q  ; check station/division
"RTN","RCDPEDAR",87,0)
 ...S RCFLG=1,^TMP("RCDAILYACT",$J,Z\1,Z0,"EFT",RCIEN)=""
"RTN","RCDPEDAR",88,0)
 ..;
"RTN","RCDPEDAR",89,0)
 ..I RCFLG S ^TMP("RCDAILYACT",$J,Z\1,Z0)=DATA
"RTN","RCDPEDAR",90,0)
 ..S RCT=RCT+1 I '(RCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q  ; Check for user stopped every 100 records
"RTN","RCDPEDAR",91,0)
 ;
"RTN","RCDPEDAR",92,0)
 D:'RCSTOP RPT1(RCNJ,RCDET,RCDT1,RCDT2,.RCSTOP,.RCPG)
"RTN","RCDPEDAR",93,0)
 D ENQ(RCSTOP,$G(RCPG))
"RTN","RCDPEDAR",94,0)
 Q
"RTN","RCDPEDAR",95,0)
 ;
"RTN","RCDPEDAR",96,0)
RPT1(RCNJ,RCDET,RCDT1,RCDT2,RCSTOP,RCPG) ; Entry point for report
"RTN","RCDPEDAR",97,0)
 ; RCNJ - 1 if called by nightly job, 0 if called on demand
"RTN","RCDPEDAR",98,0)
 ; RCDET - 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",99,0)
 ; RCDT1, RCDT2 - date from, to
"RTN","RCDPEDAR",100,0)
 ; RCSTOP - stop flag, 1 if user elected to quit job
"RTN","RCDPEDAR",101,0)
 ; RCPG - page #, returned if passed by reference
"RTN","RCDPEDAR",102,0)
 ;
"RTN","RCDPEDAR",103,0)
 N X,Q,Q0,Z,Z0,Z1,Z2,Z3,ZCT,RCCT,RCDEP,RCDEPA,RCDEPAP,RCFMS,RCFMS1,RCD1,RCFMSTOT,RCEFT,RCMATCH,RCDEPREC,RCDT
"RTN","RCDPEDAR",104,0)
 N D,DIC,I,RCIEN,RCPAY
"RTN","RCDPEDAR",105,0)
 ;
"RTN","RCDPEDAR",106,0)
 ; RCCT - line counter
"RTN","RCDPEDAR",107,0)
 S (RCCT,RCDEP,RCDEPA,RCDEPAP,RCDEPREC,RCPG,RCSTOP,Z,ZCT)=0,RCD1=1
"RTN","RCDPEDAR",108,0)
 S RCNJ=+$G(RCNJ)
"RTN","RCDPEDAR",109,0)
 F  S Z=$O(^TMP("RCDAILYACT",$J,Z)) Q:'Z  D  G:RCSTOP RPT1Q ; Z = date
"RTN","RCDPEDAR",110,0)
 .I '$G(RCLSTMGR),'RCPG!$S('$G(RCNJ):($Y+5)>IOSL,1:0) D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ) S RCDT=1 Q:RCSTOP
"RTN","RCDPEDAR",111,0)
 .S Q="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(Z,2),Q=$J("",80-$L(Q)\2)_Q ; Center it
"RTN","RCDPEDAR",112,0)
 .I 'RCD1,$G(RCDET) D SL(" ") ; Skip line if >1 dt on pg
"RTN","RCDPEDAR",113,0)
 .S RCDT=0
"RTN","RCDPEDAR",114,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",115,0)
 .I $G(RCDET) D
"RTN","RCDPEDAR",116,0)
 ..D SL(Q)
"RTN","RCDPEDAR",117,0)
 ..D SL(" ")
"RTN","RCDPEDAR",118,0)
 .; Z0 = ien of entry in file 344.3
"RTN","RCDPEDAR",119,0)
 .K RCEFT("D"),RCMATCH("D"),RCFMS("D")
"RTN","RCDPEDAR",120,0)
 .S Z0=0 F  S Z0=$O(^TMP("RCDAILYACT",$J,Z,Z0)) Q:'Z0  D  Q:RCSTOP
"RTN","RCDPEDAR",121,0)
 ..S Z1=$G(^TMP("RCDAILYACT",$J,Z,Z0))
"RTN","RCDPEDAR",122,0)
 ..S RCDEPREC=+$O(^RCY(344,"AD",+$P(Z1,U,3),0)),RCDEP(Z)=$G(RCDEP(Z))+1,RCDEPA(Z)=$G(RCDEPA(Z))+$P(Z1,U,8)
"RTN","RCDPEDAR",123,0)
 ..I $P($G(^RCY(344,RCDEPREC,2)),U)="" S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8),RCFMS="NO FMS DOC"
"RTN","RCDPEDAR",124,0)
 ..I $P($G(^RCY(344,RCDEPREC,2)),U)'="" D
"RTN","RCDPEDAR",125,0)
 ...S X=$$STATUS^GECSSGET($P(^RCY(344,RCDEPREC,2),U))
"RTN","RCDPEDAR",126,0)
 ...I X=-1 S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8) Q
"RTN","RCDPEDAR",127,0)
 ...S RCFMS=$E($P(X," "),1,10),Q=$E(X),Q=$S(Q="E"!(Q="R"):0,Q="Q":2,1:1),RCFMS("D",Q)=$G(RCFMS("D",Q))+$P(Z1,U,8)
"RTN","RCDPEDAR",128,0)
 ...;
"RTN","RCDPEDAR",129,0)
 ..I $G(RCDET) D  Q:RCSTOP
"RTN","RCDPEDAR",130,0)
 ...; PRCA*4.5*283 - change length of DEP # from 6 to 9 to allow for 9 digit DEP #'s
"RTN","RCDPEDAR",131,0)
 ...S X=$$SETSTR^VALM1($P(Z1,U,6),"",1,9)
"RTN","RCDPEDAR",132,0)
 ...; Change DEPOSIT DT's starting position from 9 to 12
"RTN","RCDPEDAR",133,0)
 ...S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z1,U,7)\1,2),X,12,10)
"RTN","RCDPEDAR",134,0)
 ...; Change starting position from 21 to 23 & reduce length of spaces from 10 to 8.
"RTN","RCDPEDAR",135,0)
 ...S X=$$SETSTR^VALM1("",X,23,8)
"RTN","RCDPEDAR",136,0)
 ...S X=$$SETSTR^VALM1("",X,32,10)
"RTN","RCDPEDAR",137,0)
 ...S X=$$SETSTR^VALM1($E($J($P(Z1,U,8),"",2)_$J("",20),1,20)_RCFMS,X,43,37)
"RTN","RCDPEDAR",138,0)
 ...D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",139,0)
 ...D SL(X)
"RTN","RCDPEDAR",140,0)
 ..S RCFMSTOT=0,RCFMS1="NO FMS DOC"
"RTN","RCDPEDAR",141,0)
 ..I $O(^RCY(344.3,Z0,2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",142,0)
 ...N V
"RTN","RCDPEDAR",143,0)
 ...D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",144,0)
 ...D SL($J("",10)_"ERROR MESSAGES FOR EFT:")
"RTN","RCDPEDAR",145,0)
 ...S V=0 F  S V=$O(^RCY(344.3,Z0,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDAR",146,0)
 ....D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",147,0)
 ....D SL($J("",12)_$G(^RCY(344.3,Z0,2,V,0)))
"RTN","RCDPEDAR",148,0)
 ..S Z2=0 F  S Z2=$O(^TMP("RCDAILYACT",$J,Z,Z0,"EFT",Z2)) Q:'Z2  S Z3=$G(^RCY(344.31,Z2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",149,0)
 ...S RCEFT("D")=$G(RCEFT("D"))+1
"RTN","RCDPEDAR",150,0)
 ...S X=$S($P($G(^RCY(344,+$P(Z3,U,9),2)),U)'="":$$STATUS^GECSSGET($P(^RCY(344,+$P(Z3,U,9),2),U)),1:"")
"RTN","RCDPEDAR",151,0)
 ...I X'="",X'=-1,$E(X)'="R",$E(X)'="E" S RCFMSTOT=RCFMSTOT+$P(Z3,U,7),RCFMS1=$S($E(X)="Q":"QUEUED TO POST",1:"POSTED")
"RTN","RCDPEDAR",152,0)
 ...S RCFMS1(Z2)=$S(X="":"",X=-1:"NO FMS DOC",1:$E($P(X," "),1,10))
"RTN","RCDPEDAR",153,0)
 ...I $P(Z3,U,8) S RCMATCH("D")=$G(RCMATCH("D"))+1
"RTN","RCDPEDAR",154,0)
 ...I $G(RCDET) D EFTDTL(Z2,Z3,.RCSTOP,RCDET,.RCFMS1,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",155,0)
 ..;
"RTN","RCDPEDAR",156,0)
 ..Q:RCSTOP
"RTN","RCDPEDAR",157,0)
 ..I RCDET D SL(" ")
"RTN","RCDPEDAR",158,0)
 .;
"RTN","RCDPEDAR",159,0)
 .Q:RCSTOP
"RTN","RCDPEDAR",160,0)
 .S RCDEPA=RCDEPA+$G(RCDEPA(Z)),RCDEP=RCDEP+$G(RCDEP(Z)),RCDEPAP=RCDEPAP+$G(RCDEPAP(Z)),RCFMSTOT("D")=$G(RCFMSTOT("D"))+$G(RCFMSTOT),RCEFT("T")=$G(RCEFT("T"))+$G(RCEFT("D")),RCMATCH("T")=$G(RCMATCH("T"))+$G(RCMATCH("D"))
"RTN","RCDPEDAR",161,0)
 .F Q=-1,0,1,2 S RCFMS("T",Q)=$G(RCFMS("T",Q))+$G(RCFMS("D",Q))
"RTN","RCDPEDAR",162,0)
 .D SL(" ")
"RTN","RCDPEDAR",163,0)
 .I $S('$G(RCNJ):($Y+5)>IOSL,1:0)!'RCPG D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",164,0)
 .D SL($E("**TOTALS FOR DATE: "_$$FMTE^XLFDT(Z\1,2)_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP(Z))_$J("",5))
"RTN","RCDPEDAR",165,0)
 .D SL($J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA(Z)),"",2))
"RTN","RCDPEDAR",166,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",167,0)
 .D SL(" ")
"RTN","RCDPEDAR",168,0)
 .D SL($J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDAR",169,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",170,0)
 .D SL($J("",39)_"ACCEPTED: $"_$J(+$G(RCFMS("D",1)),"",2))
"RTN","RCDPEDAR",171,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",172,0)
 .D SL($J("",41)_"QUEUED: $"_$J(+$G(RCFMS("D",2)),"",2))
"RTN","RCDPEDAR",173,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",174,0)
 .D SL($J("",35)_"ERROR/REJECT: $"_$J(+$G(RCFMS("D",0)),"",2))
"RTN","RCDPEDAR",175,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",176,0)
 .D SL($J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("D",-1)),"",2))
"RTN","RCDPEDAR",177,0)
 .D SL(" ")
"RTN","RCDPEDAR",178,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",179,0)
 .D SL($J("",26)_"# EFT PAYMENT RECORDS: "_(+$G(RCEFT("D"))))
"RTN","RCDPEDAR",180,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",181,0)
 .D SL($J("",25)_"# EFT PAYMENTS MATCHED: "_+($G(RCMATCH("D"))))
"RTN","RCDPEDAR",182,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",183,0)
 .D SL($J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP(Z)),"",2))
"RTN","RCDPEDAR",184,0)
 .D SL(" ")
"RTN","RCDPEDAR",185,0)
 ;
"RTN","RCDPEDAR",186,0)
 I '$O(^TMP("RCDAILYACT",$J,0)) D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ)
"RTN","RCDPEDAR",187,0)
 G:RCSTOP!(RCNJ&(+$G(RCLSTMGR)=0)) RPT1Q
"RTN","RCDPEDAR",188,0)
 D SL(" ")
"RTN","RCDPEDAR",189,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",190,0)
 D SL($E("**** TOTALS FOR DATE RANGE:"_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP)_$J("",5))
"RTN","RCDPEDAR",191,0)
 D SL($J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA),"",2))
"RTN","RCDPEDAR",192,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",193,0)
 D SL(" ")
"RTN","RCDPEDAR",194,0)
 D SL($J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDAR",195,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",196,0)
 D SL($J("",39)_"ACCEPTED: $"_$J(+$G(RCFMS("T",1)),"",2))
"RTN","RCDPEDAR",197,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",198,0)
 D SL($J("",41)_"QUEUED: $"_$J(+$G(RCFMS("T",2)),"",2))
"RTN","RCDPEDAR",199,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",200,0)
 D SL($J("",35)_"ERROR/REJECT: $"_$J(+$G(RCFMS("T",0)),"",2))
"RTN","RCDPEDAR",201,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",202,0)
 D SL($J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("T",-1)),"",2))
"RTN","RCDPEDAR",203,0)
 D SL(" ")
"RTN","RCDPEDAR",204,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",205,0)
 D SL($J("",26)_"# EFT PAYMENT RECORDS: "_+$G(RCEFT("T")))
"RTN","RCDPEDAR",206,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",207,0)
 D SL($J("",25)_"# EFT PAYMENTS MATCHED: "_+$G(RCMATCH("T")))
"RTN","RCDPEDAR",208,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",209,0)
 D SL($J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP),"",2))
"RTN","RCDPEDAR",210,0)
 D SL(" ")
"RTN","RCDPEDAR",211,0)
 ;
"RTN","RCDPEDAR",212,0)
 D SL(" ")
"RTN","RCDPEDAR",213,0)
 D SL($$ENDORPRT^RCDPEARL)
"RTN","RCDPEDAR",214,0)
 ;
"RTN","RCDPEDAR",215,0)
PC() ; boolean function, page check
"RTN","RCDPEDAR",216,0)
 I '$G(RCLSTMGR),$G(RCNJ),$Y+5>IOSL Q 1
"RTN","RCDPEDAR",217,0)
 Q 0
"RTN","RCDPEDAR",218,0)
 ;
"RTN","RCDPEDAR",219,0)
RPT1Q ; exit point
"RTN","RCDPEDAR",220,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",221,0)
 Q
"RTN","RCDPEDAR",222,0)
 ;
"RTN","RCDPEDAR",223,0)
ENQ(RCSTOP,RCPG) ; Clean up
"RTN","RCDPEDAR",224,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'RCNJ,'RCSTOP,RCPG S X="" D ASK^RCDPEARL(.X)
"RTN","RCDPEDAR",225,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEDAR",226,0)
 Q
"RTN","RCDPEDAR",227,0)
 ;
"RTN","RCDPEDAR",228,0)
SL(Z) ; Writes or stores line
"RTN","RCDPEDAR",229,0)
 ; RCNJ and RCCT set before calling
"RTN","RCDPEDAR",230,0)
 ; RCNJ = 1 to set array,  0 to write line
"RTN","RCDPEDAR",231,0)
 ; Z = text to handle
"RTN","RCDPEDAR",232,0)
 ; RCCT = line counter
"RTN","RCDPEDAR",233,0)
 S RCCT=RCCT+1
"RTN","RCDPEDAR",234,0)
 I $G(RCNJ) S ^TMP($J,"RCDPE_DAR",RCCT)=Z Q
"RTN","RCDPEDAR",235,0)
 W !,Z
"RTN","RCDPEDAR",236,0)
 Q
"RTN","RCDPEDAR",237,0)
 ;
"RTN","RCDPEDAR",238,0)
CHKPYR(IEN,FLG,RCJOB) ; function
"RTN","RCDPEDAR",239,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",240,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",241,0)
 ; RCJOB - $J
"RTN","RCDPEDAR",242,0)
 ; returns 1 if payer in 344.31/.02 or 344.4/.06 is in the list of selected payers ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",243,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",244,0)
 ;
"RTN","RCDPEDAR",245,0)
 N RCPAY,RES,Z
"RTN","RCDPEDAR",246,0)
 S RES=0  ; result
"RTN","RCDPEDAR",247,0)
 S RCPAY="" I IEN S RCPAY=$S(FLG:$P($G(^RCY(344.4,IEN,0)),U,6),1:$P($G(^RCY(344.31,IEN,0)),U,2))
"RTN","RCDPEDAR",248,0)
 I RCPAY'="" S (RCFLG,Z)=0 D
"RTN","RCDPEDAR",249,0)
 .F  S Z=$O(^TMP("RCSELPAY",RCJOB,Z)) Q:Z=""  I $E(RCPAY,1,30)=$G(^TMP("RCSELPAY",RCJOB,Z)) S RES=1 Q
"RTN","RCDPEDAR",250,0)
 ;Include EFT with null Payer Names in reports for ALL payers - PRCA*4.5*298 
"RTN","RCDPEDAR",251,0)
 I FLG=0,$G(RCNP)=2,RCPAY="" S RES=1 ; PRCA*4.5*298
"RTN","RCDPEDAR",252,0)
 Q RES
"RTN","RCDPEDAR",253,0)
 ;
"RTN","RCDPEDAR",254,0)
CHKDIV(IEN,FLG,VAUTD) ;
"RTN","RCDPEDAR",255,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",256,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",257,0)
 ; VAUTD - array of selected divisions from DIVISION^VAUTOMA API call
"RTN","RCDPEDAR",258,0)
 ; returns 1 if division associated with an entry in 344.31 is on the list in VAUTD
"RTN","RCDPEDAR",259,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",260,0)
 N ERA,I,NAME,RCSTA,RES
"RTN","RCDPEDAR",261,0)
 S RES=0
"RTN","RCDPEDAR",262,0)
 I VAUTD=1 S RES=1 G CHKDIVX
"RTN","RCDPEDAR",263,0)
 I 'IEN G CHKDIVX
"RTN","RCDPEDAR",264,0)
 S ERA=$S(FLG:IEN,1:$P($G(^RCY(344.31,IEN,0)),U,10))
"RTN","RCDPEDAR",265,0)
 S RCSTA=$$ERASTA^RCDPEM3(ERA),NAME=$P(RCSTA,U)
"RTN","RCDPEDAR",266,0)
 I NAME="UNKNOWN" G CHKDIVX
"RTN","RCDPEDAR",267,0)
 S I=0 I 'VAUTD F  S I=$O(VAUTD(I)) Q:'I!RES  I NAME=VAUTD(I) S RES=1
"RTN","RCDPEDAR",268,0)
CHKDIVX ;
"RTN","RCDPEDAR",269,0)
 Q RES
"RTN","RCDPEDAR",270,0)
 ;
"RTN","RCDPEDAR",271,0)
HDR(RCSTOP,RCDET,RCNJ) ;Prints report heading
"RTN","RCDPEDAR",272,0)
 ; RCSTOP - flag to stop
"RTN","RCDPEDAR",273,0)
 ; variables RCCT,RCPG,RCDT1,RCDT2 set before calling this subroutine
"RTN","RCDPEDAR",274,0)
 ; RCCT - line count
"RTN","RCDPEDAR",275,0)
 ; RCPG - page number
"RTN","RCDPEDAR",276,0)
 ; RCDT1, RCDT2 - from, to date
"RTN","RCDPEDAR",277,0)
 ; RCDET - flag is 1 if detail is desired
"RTN","RCDPEDAR",278,0)
 N Z,Z0,Z1,X,Y
"RTN","RCDPEDAR",279,0)
 Q:RCNJ&(RCPG)
"RTN","RCDPEDAR",280,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEDAR",281,0)
 .Q:$G(RCNJ)
"RTN","RCDPEDAR",282,0)
 .I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEDAR",283,0)
 .W @IOF ; Write form feed
"RTN","RCDPEDAR",284,0)
 Q:RCSTOP
"RTN","RCDPEDAR",285,0)
 S RCPG=RCPG+1
"RTN","RCDPEDAR",286,0)
 I '$D(RCNP) N RCNP S RCNP=2  ; PRCA276 if coming from nightly job need to define payer selection variable
"RTN","RCDPEDAR",287,0)
 I '$D(VAUTD) N VAUTD S VAUTD=1  ; PRCA276 if coming from nightly job need to define division selection variable
"RTN","RCDPEDAR",288,0)
 S Z0="EDI LOCKBOX EFT DAILY ACTIVITY "_$S($G(RCDET):"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDAR",289,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEDAR",290,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPEDAR",291,0)
 D SL(Z)
"RTN","RCDPEDAR",292,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT($$NOW^XLFDT(),2),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",293,0)
 D SL(Z)
"RTN","RCDPEDAR",294,0)
 ;prca276 add divisions to header
"RTN","RCDPEDAR",295,0)
 S Z1="" I 'VAUTD S Z0=0 F  S Z0=$O(VAUTD(Z0)) Q:'Z0  S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDAR",296,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",297,0)
 D SL(Z)
"RTN","RCDPEDAR",298,0)
 ; prca 276 add payer selection list to header
"RTN","RCDPEDAR",299,0)
 S Z1="" I RCNP'=2 S Z0=0 F  S Z0=$O(^TMP("RCSELPAY",$J,Z0)) Q:'Z0  S Z1=Z1_^TMP("RCSELPAY",$J,Z0)_", "
"RTN","RCDPEDAR",300,0)
 S Z="PAYERS: "_$S(RCNP=2:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",301,0)
 D SL(Z)
"RTN","RCDPEDAR",302,0)
 ;prca 276  add date filter to header
"RTN","RCDPEDAR",303,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,2)_" - "_$$FMTE^XLFDT(RCDT2,2)_" (Date Deposit Added)",Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",304,0)
 D SL(Z)
"RTN","RCDPEDAR",305,0)
 I $G(RCDET) D
"RTN","RCDPEDAR",306,0)
 .; PRCA*4.5*283 - Add 3 more spaces between DEP # and DEPOSIT DT 
"RTN","RCDPEDAR",307,0)
 .; and remove 3 spaces between DEPOSIT DT and DEP AMOUNT to allow for 9 digit DEP #'s
"RTN","RCDPEDAR",308,0)
 .D SL("")
"RTN","RCDPEDAR",309,0)
 .S Z=$$SETSTR^VALM1("DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT","",1,80)
"RTN","RCDPEDAR",310,0)
 .D SL(Z)
"RTN","RCDPEDAR",311,0)
 .; PRCA*4.5*284, Move Match Status to left 3 space to allow for 10 digit ERA #'s
"RTN","RCDPEDAR",312,0)
 .S Z=$$SETSTR^VALM1($J("",3)_"EFT #"_$J("",23)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS","",1,80)
"RTN","RCDPEDAR",313,0)
 .D SL(Z)
"RTN","RCDPEDAR",314,0)
 .S Z=$$SETSTR^VALM1($J("",10)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDAR",315,0)
 .D SL(Z)
"RTN","RCDPEDAR",316,0)
 .S Z=$$SETSTR^VALM1($J("",14)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDAR",317,0)
 .D SL(Z)
"RTN","RCDPEDAR",318,0)
 .S Z=$$SETSTR^VALM1($J("",45)_"DEP RECEIPT #","",1,60)
"RTN","RCDPEDAR",319,0)
 .S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDAR",320,0)
 .D SL(Z)
"RTN","RCDPEDAR",321,0)
 ;
"RTN","RCDPEDAR",322,0)
 D SL($TR($J("",IOM-1)," ","="))
"RTN","RCDPEDAR",323,0)
 Q
"RTN","RCDPEDAR",324,0)
 ;
"RTN","RCDPEDAR",325,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEDAR",326,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEDAR",327,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEDAR",328,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",329,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEDAR",330,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEDAR",331,0)
 Q
"RTN","RCDPEDAR",332,0)
 ;
"RTN","RCDPEDAR",333,0)
LMHDR(RCSTOP,RCDET,RCNJ) ; ListMan report heading
"RTN","RCDPEDAR",334,0)
 ; RCSTOP - stop flag, passed by reference
"RTN","RCDPEDAR",335,0)
 ;  > RCSTOP must be passed by reference
"RTN","RCDPEDAR",336,0)
 ; RCDET = flag is 1 if detail is desired
"RTN","RCDPEDAR",337,0)
 ;
"RTN","RCDPEDAR",338,0)
 ; RCCT = line counter
"RTN","RCDPEDAR",339,0)
 ; RCPG = page #
"RTN","RCDPEDAR",340,0)
 ; RCDT1, RCDT2 = from, to date
"RTN","RCDPEDAR",341,0)
 N Z,Z0,Z1,X,Y
"RTN","RCDPEDAR",342,0)
 S RCPG=RCPG+1
"RTN","RCDPEDAR",343,0)
 S RCHDR("TITLE")="EDI LOCKBOX EFT DAILY ACTIVITY "_$S($G(RCDET):"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDAR",344,0)
 S Z1="" I 'VAUTD S Z0=0 F  S Z0=$O(VAUTD(Z0)) Q:'Z0  S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDAR",345,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDAR",346,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",347,0)
 D ADLM(Z)
"RTN","RCDPEDAR",348,0)
 ; prca 276 add payer selection list to header
"RTN","RCDPEDAR",349,0)
 S Z1="" I RCNP'=2 S Z0=0 F  S Z0=$O(^TMP("RCSELPAY",$J,Z0)) Q:'Z0  S Z1=Z1_^TMP("RCSELPAY",$J,Z0)_", "
"RTN","RCDPEDAR",350,0)
 S Z="PAYERS: "_$S(RCNP=2:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDAR",351,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",352,0)
 D ADLM(Z)
"RTN","RCDPEDAR",353,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,2)_" - "_$$FMTE^XLFDT(RCDT2,2)_" (Date Deposit Added)"
"RTN","RCDPEDAR",354,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",355,0)
 D ADLM(Z)
"RTN","RCDPEDAR",356,0)
 I $G(RCDET) D
"RTN","RCDPEDAR",357,0)
 .S Z=$$SETSTR^VALM1("DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT","",1,80)
"RTN","RCDPEDAR",358,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",359,0)
 .S Z=$$SETSTR^VALM1($J("",3)_"EFT #"_$J("",23)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS","",1,80)
"RTN","RCDPEDAR",360,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",361,0)
 .S Z=$$SETSTR^VALM1($J("",10)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDAR",362,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",363,0)
 .S Z=$$SETSTR^VALM1($J("",14)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDAR",364,0)
 .S Z=$$SETSTR^VALM1($J("",15)_"DEP RECEIPT #",Z,31,30)
"RTN","RCDPEDAR",365,0)
 .S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDAR",366,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",367,0)
 ;
"RTN","RCDPEDAR",368,0)
 Q
"RTN","RCDPEDAR",369,0)
 ;
"RTN","RCDPEDAR",370,0)
ADLM(Z) ; add to ListMan header
"RTN","RCDPEDAR",371,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z Q
"RTN","RCDPEDAR",372,0)
 ;
"RTN","RCDPEDAR",373,0)
EFTDTL(Z2,Z3,RCSTOP,RCDET,RCFMS1,RCNJ) ; Display EFT Detail
"RTN","RCDPEDAR",374,0)
 N DATA,X
"RTN","RCDPEDAR",375,0)
 S X=$$SETSTR^VALM1($P(Z3,U),"",4,6)
"RTN","RCDPEDAR",376,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z3,U,12)\1,2),X,32,8)
"RTN","RCDPEDAR",377,0)
 S X=$$SETSTR^VALM1($J($P(Z3,U,7),"",2),X,42,18)
"RTN","RCDPEDAR",378,0)
 ; PRCA*4.5*284, Move to left 3 space (61 to 58) to allow for 10 digit ERA #'s
"RTN","RCDPEDAR",379,0)
 S X=$$SETSTR^VALM1($$EXTERNAL^DILFD(344.31,.08,"",+$P(Z3,U,8))_$S($P(Z3,U,8)=1:"/ERA #"_$P(Z3,U,10),1:""),X,58,20)
"RTN","RCDPEDAR",380,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",381,0)
 D SL(X)
"RTN","RCDPEDAR",382,0)
 S X=$$SETSTR^VALM1($P(Z3,U,4),"",11,61)
"RTN","RCDPEDAR",383,0)
 D SL(X)
"RTN","RCDPEDAR",384,0)
 N RCPAY S RCPAY=$P(Z3,U,2),RCPAY=$S(RCPAY="":"NO PAYER NAME RECEIVED",1:RCPAY) ; PRCA*4.5*298
"RTN","RCDPEDAR",385,0)
 S X=$$SETSTR^VALM1(RCPAY_"/"_$P(Z3,U,3),"",15,65) ; PRCA*4.5*298
"RTN","RCDPEDAR",386,0)
 D SL(X)
"RTN","RCDPEDAR",387,0)
 S X=""
"RTN","RCDPEDAR",388,0)
 I $P(Z3,U,9) S X=$$SETSTR^VALM1($P($G(^RCY(344,+$P(Z3,U,9),0)),U),X,46,10)
"RTN","RCDPEDAR",389,0)
 S X=$$SETSTR^VALM1($G(RCFMS1(Z2)),X,61,19)
"RTN","RCDPEDAR",390,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",391,0)
 D SL(X)
"RTN","RCDPEDAR",392,0)
 I $O(^RCY(344.31,Z2,2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",393,0)
 . N V
"RTN","RCDPEDAR",394,0)
 . D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",395,0)
 . D SL($J("",10)_"ERROR MESSAGES FOR EFT DETAIL:")
"RTN","RCDPEDAR",396,0)
 . S V=0 F  S V=$O(^RCY(344.31,Z2,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDAR",397,0)
 .. D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",398,0)
 .. D SL($J("",12)_$G(^RCY(344.31,Z2,2,V,0)))
"RTN","RCDPEDAR",399,0)
 I $D(^RCY(344.31,Z2,3)) D
"RTN","RCDPEDAR",400,0)
 .S DATA=$G(^RCY(344.31,Z2,3))
"RTN","RCDPEDAR",401,0)
 .S X="   MARKED AS DUPLICATE: "_$$FMTE^XLFDT($P(DATA,U,2),5)_" "_$$EXTERNAL^DILFD(344.31,.17,,$P(DATA,U))
"RTN","RCDPEDAR",402,0)
 .D SL(X)
"RTN","RCDPEDAR",403,0)
 .D SL(" ")
"RTN","RCDPEDAR",404,0)
 ;
"RTN","RCDPEDAR",405,0)
 Q
"RTN","RCDPEDAR",406,0)
 ;
"RTN","RCDPEM")
0^43^B61345619
"RTN","RCDPEM",1,0)
RCDPEM ;ALB/TMK/PJH - POST EFT, ERA MATCHING TO EFT ;Jun 06, 2014@19:11:19
"RTN","RCDPEM",2,0)
 ;;4.5;Accounts Receivable;**173,255,269,276,283,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM",4,0)
 ; IA 4050 covers call to SPL1^IBCEOBAR
"RTN","RCDPEM",5,0)
 ; Note - keep processing in line with RCDPXPAP 
"RTN","RCDPEM",6,0)
EN ; Post EFT deposits, auto-match EFT's and ERA's 
"RTN","RCDPEM",7,0)
 ;
"RTN","RCDPEM",8,0)
 K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",9,0)
 ; ^TMP($J,"RCDPETOT",344.3 or 344.31,file ien)=
"RTN","RCDPEM",10,0)
 ;  (1) match (0/1/-1)   (2) total $   (3) posted (0/1)  (4) error ref
"RTN","RCDPEM",11,0)
 ;  (5) EFT deposit ien 344.1 if added for EFT
"RTN","RCDPEM",12,0)
 ;
"RTN","RCDPEM",13,0)
 N RCZ,RCSUM,RCDEP,RECTDA,RC0,RCER,RCDUZ,Z,Z0,Z1,DA,X,Y,DIE,DR
"RTN","RCDPEM",14,0)
 M RCDUZ=DUZ
"RTN","RCDPEM",15,0)
 N DUZ S DUZ=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)),DUZ(0)="" S:'DUZ DUZ=.5
"RTN","RCDPEM",16,0)
 K ^TMP($J,"RCXM"),^TMP($J,"RCTOT")
"RTN","RCDPEM",17,0)
 S ZTREQ="@"
"RTN","RCDPEM",18,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G ENQ ; Lock record
"RTN","RCDPEM",19,0)
 . ; Send bulletin that job could not be run
"RTN","RCDPEM",20,0)
 . S ^TMP($J,"RCXM",1)="The nightly job to post EFT deposits and match EFTs to ERAs could not be run",^TMP($J,"RCXM",2)="Another match process was already running (lock on ^RCY(344.3,""ALOCK"") )"
"RTN","RCDPEM",21,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",22,0)
 ;
"RTN","RCDPEM",23,0)
 ; Post deposits for any unposted EFTs in file 344.3
"RTN","RCDPEM",24,0)
 ; 'Unposted' EFTs have a 0 in AMOUNT POSTED field
"RTN","RCDPEM",25,0)
 S ^TMP($J,"RCTOT","EFT_DEP")=0
"RTN","RCDPEM",26,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.3,"APOST",0,RCZ)) Q:'RCZ  S RC0=$G(^RCY(344.3,RCZ,0))  I RC0'="",$P(RC0,U,8) D
"RTN","RCDPEM",27,0)
 . S ^TMP($J,"RCTOT","EFT_DEP")=^TMP($J,"RCTOT","EFT_DEP")+1
"RTN","RCDPEM",28,0)
 . ; Verify check sums
"RTN","RCDPEM",29,0)
 . S RCSUM=$$CHKSUM^RCDPESR3(RCZ)
"RTN","RCDPEM",30,0)
 . I RCSUM'=$P(RC0,U,9) D  Q
"RTN","RCDPEM",31,0)
 .. ; Bulletin that check sums do not match
"RTN","RCDPEM",32,0)
 .. ; Update record error list and checksum error field
"RTN","RCDPEM",33,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2)
"RTN","RCDPEM",34,0)
 .. S RCER(2)="  Checksum is invalid and the EFT deposit record is corrupted.",RCER(3)="  Stored Checksum = "_$P(RC0,U,9)_" Calculated Checksum: "_RCSUM,RCER(4)="  This EFT deposit cannot be sent to FMS.  You must ask for it to be"
"RTN","RCDPEM",35,0)
 .. S RCER(5)="   retransmitted to your site."
"RTN","RCDPEM",36,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",37,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",38,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",39,0)
 .. S DIE="^RCY(344.3,",DA=RCZ,DR=".1////1" D ^DIE
"RTN","RCDPEM",40,0)
 .. S ^TMP($J,"RCTOT","CSUM")=$G(^TMP($J,"RCTOT","CSUM"))+1
"RTN","RCDPEM",41,0)
 . ;
"RTN","RCDPEM",42,0)
 . S RCDEP=+$P(RC0,U,3),RECTDA=+$O(^RCY(344,"AD",RCDEP,0))
"RTN","RCDPEM",43,0)
 . I RCDEP D LOCKDEP(RCDEP,1)
"RTN","RCDPEM",44,0)
 . I 'RCDEP!'RECTDA D  ;  Add deposit and/or receipt to files 344.1, 344
"RTN","RCDPEM",45,0)
 .. I 'RCDEP D  ; Add dep record RCDEP, update field .03 with the pointer
"RTN","RCDPEM",46,0)
 ... S RCDEP=+$$ADDDEP^RCDPEM0($P(RC0,U,6),$P(RC0,U,7),RCZ)
"RTN","RCDPEM",47,0)
 ... S ^TMP($J,"RCTOT","DEPOSIT")=$G(^TMP($J,"RCTOT","DEPOSIT"))+1
"RTN","RCDPEM",48,0)
 .. ;
"RTN","RCDPEM",49,0)
 .. I 'RECTDA,RCDEP D  ; Add receipt record, post to rev source cd 8NZZ
"RTN","RCDPEM",50,0)
 ... S RECTDA=+$$ADDREC^RCDPEM0(RCDEP,RCZ)
"RTN","RCDPEM",51,0)
 .. ;
"RTN","RCDPEM",52,0)
 . I RCDEP D LOCKDEP(RCDEP,0)
"RTN","RCDPEM",53,0)
 . ;
"RTN","RCDPEM",54,0)
 . I 'RCDEP!'RECTDA D  Q  ; Could not add entry to file 344.1 or 344 
"RTN","RCDPEM",55,0)
 .. ; Send a bulletin, update error text
"RTN","RCDPEM",56,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2),RCER(2)="  "_$S('RCDEP:"Neither a deposit nor a receipt were able",1:"A receipt was not able")_" to be added - no match attempted"
"RTN","RCDPEM",57,0)
 .. I RCDEP,'RECTDA S RCER(3)="  Deposit Ticket # created: "_$P($G(^RCY(344.1,+$P(RC0,U,3),0)),U)
"RTN","RCDPEM",58,0)
 .. S RCER($O(RCER(""),-1)+1)="This EFT deposit can't be sent to FMS.  You must ask Austin to retransmit"
"RTN","RCDPEM",59,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",60,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",61,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",62,0)
 .. S ^TMP($J,"RCTOT","ERR")=$G(^TMP($J,"RCTOT","ERR"))+1
"RTN","RCDPEM",63,0)
 . ;
"RTN","RCDPEM",64,0)
 . S DIE="^RCY(344.31," S Z=0 F  S Z=$O(^RCY(344.31,"B",RCZ,Z)) Q:'Z  S DA=Z,DR=".11////1" D ^DIE
"RTN","RCDPEM",65,0)
 ;
"RTN","RCDPEM",66,0)
 ;Update payer table for new payers - PRCA*4.5*298
"RTN","RCDPEM",67,0)
 D NEWPYR^RCDPESP
"RTN","RCDPEM",68,0)
 ;Scan Non-Released Rx Exceptions for released Rx - PRCA*4.5*298
"RTN","RCDPEM",69,0)
 D EN^RCDPEX4
"RTN","RCDPEM",70,0)
 ;
"RTN","RCDPEM",71,0)
 D MATCH(0,1)
"RTN","RCDPEM",72,0)
 ;
"RTN","RCDPEM",73,0)
 ;Auto Post - PRCA*4.5*298
"RTN","RCDPEM",74,0)
 D EN^RCDPEAP
"RTN","RCDPEM",75,0)
 ;Auto Decrease - PRCA*4.5*298
"RTN","RCDPEM",76,0)
 D EN^RCDPEAD
"RTN","RCDPEM",77,0)
 ;
"RTN","RCDPEM",78,0)
 L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM",79,0)
ENQ K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",80,0)
 ;
"RTN","RCDPEM",81,0)
 ;ePayments 5010 part II enhancements
"RTN","RCDPEM",82,0)
 ;Create Bulletins of EEOB Moved or Copied today
"RTN","RCDPEM",83,0)
 D EN^RCDPEM8
"RTN","RCDPEM",84,0)
 Q
"RTN","RCDPEM",85,0)
 ;
"RTN","RCDPEM",86,0)
MATCH(RCMAN,RCPROC) ; match unmatched EFTs with ERAs
"RTN","RCDPEM",87,0)
 ; RCMAN = 1 if job run manually, outside of nightly processing
"RTN","RCDPEM",88,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM",89,0)
 ;
"RTN","RCDPEM",90,0)
 N RC0,RCER,RCZ,RCHAC
"RTN","RCDPEM",91,0)
 I '$O(^RCY(344.31,"AMATCH",0,0)) D  G MATCHQ
"RTN","RCDPEM",92,0)
 . ; Send bulletin - no unmatched EFTs found
"RTN","RCDPEM",93,0)
 . N RCT
"RTN","RCDPEM",94,0)
 . S RCT=+$O(^TMP($J,"RCXM"," "),-1)+1
"RTN","RCDPEM",95,0)
 . S ^TMP($J,"RCXM",RCT)=$S('$G(RCMAN):"The nightly job",1:"The manual option")_" to match EFTs has found no EFTs are currently unmatched on your system"
"RTN","RCDPEM",96,0)
 . I $G(RCMAN) S ^TMP($J,"RCXM",RCT+1)="The action was initiated by "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPEM",97,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",98,0)
 ;
"RTN","RCDPEM",99,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.31,"AMATCH",0,RCZ)) Q:'RCZ  D
"RTN","RCDPEM",100,0)
 . K RCER
"RTN","RCDPEM",101,0)
 . S RC0=$G(^RCY(344.31,RCZ,0)),RCHAC=($E($P($G(^RCY(344.3,+RC0,0)),U,6),1,3)="HAC")
"RTN","RCDPEM",102,0)
 . Q:RC0=""  ; Bad xref
"RTN","RCDPEM",103,0)
 . Q:$S('RCHAC:'$P(RC0,U,11),1:0)  ; EFT deposit must have been recorded
"RTN","RCDPEM",104,0)
 . S ^TMP($J,"RCTOT","EFT")=$G(^TMP($J,"RCTOT","EFT"))+1
"RTN","RCDPEM",105,0)
 . I RCHAC S ^TMP($J,"RCTOT","EFT_HAC")=$G(^TMP($J,"RCTOT","EFT_HAC"))+1
"RTN","RCDPEM",106,0)
 . S ^TMP($J,"RCDPETOT",344.31,RCZ)=""
"RTN","RCDPEM",107,0)
 . ;
"RTN","RCDPEM",108,0)
 . D MATCH^RCDPEM0(RCZ,RCPROC)
"RTN","RCDPEM",109,0)
 ;
"RTN","RCDPEM",110,0)
 I '$O(^TMP($J,"RCXM",0)) K RCER S RCER(1)="",RCER(2)="NO EXCEPTIONS WHILE MATCHING EFTs-ERAs OR IN RECORDING THE DEPOSITS TO FMS" D BULL^RCDPEM1("","",.RCER) K RCER
"RTN","RCDPEM",111,0)
 D EN2^RCDPEM1,BULL^RCDPEM1("","",.RCER)
"RTN","RCDPEM",112,0)
 D SENDBULL^RCDPEM1
"RTN","RCDPEM",113,0)
 ;
"RTN","RCDPEM",114,0)
MATCHQ K ^TMP($J,"RCDPETOT"),^TMP($J,"RCTOT")
"RTN","RCDPEM",115,0)
 Q
"RTN","RCDPEM",116,0)
 ;
"RTN","RCDPEM",117,0)
LOCKDEP(RCDEP,LOCK) ; Lock/confirm deposit ien RCDEP file 341.1
"RTN","RCDPEM",118,0)
 ; If LOCK = 1 lock deposit
"RTN","RCDPEM",119,0)
 ; If LOCK = 0 unlock deposit
"RTN","RCDPEM",120,0)
 I $G(LOCK) D
"RTN","RCDPEM",121,0)
 . L +^RCY(344.1,RCDEP,0):DILOCKTM
"RTN","RCDPEM",122,0)
 . D CONFIRM^RCDPUDEP(RCDEP) ; confirm to prevent changes
"RTN","RCDPEM",123,0)
 I '$G(LOCK) L -^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",124,0)
 Q
"RTN","RCDPEM",125,0)
 ;
"RTN","RCDPEM",126,0)
RCPTDET(RCRZ,RECTDA1,RCER) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEM",127,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEM",128,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEM",129,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEM",130,0)
 ;
"RTN","RCDPEM",131,0)
 N RCR,RCSPL,RCZ0,RCTRANDA,RCQ,DR,DA,DIE,X,Y,Q,Z0,Z1,Z
"RTN","RCDPEM",132,0)
 ;
"RTN","RCDPEM",133,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEM",134,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0))
"RTN","RCDPEM",135,0)
 . I $P(RCZ0,U)'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEM",136,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEM",137,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEM",138,0)
 . ;
"RTN","RCDPEM",139,0)
 . I 'RCTRANDA D  Q  ; Error adding receipt detail
"RTN","RCDPEM",140,0)
 .. S RCER(1)=$$SETERR^RCDPEM0() S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEM",141,0)
 . ;
"RTN","RCDPEM",142,0)
 . ;Store receipt line detail
"RTN","RCDPEM",143,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEM",144,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEM",145,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEM",146,0)
 .;;Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEM",147,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEM",148,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEM",149,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEM",150,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEM",151,0)
 .. Q:'Q
"RTN","RCDPEM",152,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspensed
"RTN","RCDPEM",153,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEM",154,0)
 .. E  D
"RTN","RCDPEM",155,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEM",156,0)
 ;
"RTN","RCDPEM",157,0)
 Q
"RTN","RCDPEM",158,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split but to to single claim
"RTN","RCDPEM",159,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEM",160,0)
 ;Find split line in scratchpad
"RTN","RCDPEM",161,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEM",162,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEM",163,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEM",164,0)
 ;New claim number
"RTN","RCDPEM",165,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEM",166,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEM",167,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEM",168,0)
 ;Otherwise this is not a split
"RTN","RCDPEM",169,0)
 Q 0
"RTN","RCDPEM",170,0)
 ;
"RTN","RCDPEM",171,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEM",172,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEM",173,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEM",174,0)
 ; RCPROC = Function calling this subroutine
"RTN","RCDPEM",175,0)
 ;        = 1 EFT match to ERA   = 0 manual add receipt
"RTN","RCDPEM",176,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEM",177,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEM",178,0)
 ;
"RTN","RCDPEM",179,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEM",180,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEM",181,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEM",182,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEM",183,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEM",184,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEM",185,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEM",186,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEM",187,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEM",188,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEM",189,0)
 I $P(RCUP,U,2)["**ADJ" S DR=DR_"1.02////"_$E($S(RCCOM'="":RCCOM_"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA"),1,60)_";"
"RTN","RCDPEM",190,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEM",191,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM",192,0)
 D ^DIE
"RTN","RCDPEM",193,0)
 Q
"RTN","RCDPEM",194,0)
 ;
"RTN","RCDPEM0")
0^50^B72082268
"RTN","RCDPEM0",1,0)
RCDPEM0 ;ALB/TMK - ERA MATCHING TO EFT (cont) ;Jun 11, 2014@13:04:03
"RTN","RCDPEM0",2,0)
 ;;4.5;Accounts Receivable;**173,208,220,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM0",4,0)
 Q
"RTN","RCDPEM0",5,0)
 ;
"RTN","RCDPEM0",6,0)
MATCH(RCZ,RCPROC) ; Match EFT to ERA
"RTN","RCDPEM0",7,0)
 ; RCZ = ien of file 344.31
"RTN","RCDPEM0",8,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",9,0)
 N RCER,RCRZ,RCMATCH,RCER,RC0,RC3444,RC34431,DIE,DA,DR,X,Y,Z,Z0
"RTN","RCDPEM0",10,0)
 ; Find ERA to match to EFT by trace, date, amt
"RTN","RCDPEM0",11,0)
 S RC34431=$G(^RCY(344.31,RCZ,0)) Q:$P(RC34431,U,8)!$O(^RCY(344,"AEFT",RCZ,0))  ; Already matched
"RTN","RCDPEM0",12,0)
 I $P(RC34431,U,3)]"",$P(RC34431,U,4)]"" D   ;Must have Payor ID and Trace #
"RTN","RCDPEM0",13,0)
 . S RCRZ=0
"RTN","RCDPEM0",14,0)
 . F  S RCRZ=$O(^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($P(RC34431,U,4)),$$UP^XLFSTR($P(RC34431,U,3)),RCRZ)) Q:'RCRZ  S RC3444=$G(^RCY(344.4,RCRZ,0)) I '$O(^RCY(344.31,"AERA",RCRZ,0)),'$P(RC3444,U,9) D  Q:$D(Z(1))
"RTN","RCDPEM0",15,0)
 .. S Z($S(+$P(RC34431,U,7)=+$P(RC3444,U,5):1,1:-1),RCRZ)="" ;Total match?
"RTN","RCDPEM0",16,0)
 ;
"RTN","RCDPEM0",17,0)
 S RCMATCH=+$O(Z(""),-1),RCRZ=+$O(Z(RCMATCH,0))
"RTN","RCDPEM0",18,0)
 S $P(^TMP($J,"RCDPETOT",344.31,RCZ),U)=RCMATCH
"RTN","RCDPEM0",19,0)
 ;
"RTN","RCDPEM0",20,0)
 I 'RCMATCH D  Q  ; Match failure
"RTN","RCDPEM0",21,0)
 . S ^TMP($J,"RCTOT","NO_MATCH")=$G(^TMP($J,"RCTOT","NO_MATCH"))+1
"RTN","RCDPEM0",22,0)
 ;
"RTN","RCDPEM0",23,0)
 I RCMATCH<0 D
"RTN","RCDPEM0",24,0)
 . ; Bulletin for totals don't match warning
"RTN","RCDPEM0",25,0)
 . S ^TMP($J,"RCTOT","TOTMIS")=$G(^TMP($J,"RCTOT","TOTMIS"))+1
"RTN","RCDPEM0",26,0)
 . N XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,RCER,RCT,RCM,RCLESS
"RTN","RCDPEM0",27,0)
 . S RCT=0
"RTN","RCDPEM0",28,0)
 . D BLD^RCDPEM1("RCER",.RCT,344.31,RC34431)
"RTN","RCDPEM0",29,0)
 . S RCT=RCT+1,RCER(RCT)=""
"RTN","RCDPEM0",30,0)
 . K RCM S RCM=RCT
"RTN","RCDPEM0",31,0)
 . S RCLESS=($P(RC34431,U,7)<$P($G(^RCY(344.4,RCRZ,0)),U,5))
"RTN","RCDPEM0",32,0)
 . S RCT=RCT+1,RCER(RCT)="  TOTALS ON ERA AND EFT DON'T MATCH.",RCT=RCT+1,RCER(RCT)="  EFT TOTAL IS "_$S(RCLESS:"LESS",1:"GREATER")_" THAN ERA AMOUNT TOTAL"
"RTN","RCDPEM0",33,0)
 . I RCLESS D
"RTN","RCDPEM0",34,0)
 .. S RCT=RCT+1,RCER(RCT)="  DECREASE ADJUSTMENT IS NEEDED BEFORE THE ERA RECEIPT CAN BE PROCESSED."
"RTN","RCDPEM0",35,0)
 . I 'RCLESS D
"RTN","RCDPEM0",36,0)
 .. S RCT=RCT+1,RCER(RCT)="  A SUSPENSE LINE IS NEEDED ON THE RECEIPT TO ACCOUNT FOR THE DIFFERENCE."
"RTN","RCDPEM0",37,0)
 . S RCT=RCT+1,RCER(RCT)="  IF YOU USE THE ERA WORKLIST SCRATCH PAD, THIS WILL BE GENERATED FOR YOU."
"RTN","RCDPEM0",38,0)
 . ;
"RTN","RCDPEM0",39,0)
 . S RCT=RCT+1,RCER(RCT)="  EFT WAS MATCHED TO ERA ENTRY #: "_RCRZ_" ($"_$J(+$P($G(^RCY(344.4,RCRZ,0)),U,5),"",2)_")."
"RTN","RCDPEM0",40,0)
 . S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM0",41,0)
 . S XMBODY="RCER"
"RTN","RCDPEM0",42,0)
 . S XMSUBJ="EDI LBOX TOTALS MISMATCH ON EFT-ERA MATCH"
"RTN","RCDPEM0",43,0)
 . D
"RTN","RCDPEM0",44,0)
 .. N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM0",45,0)
 .. D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM0",46,0)
 . ; Update log
"RTN","RCDPEM0",47,0)
 . F  S RCM=$O(RCER(RCM)) Q:'RCM  S RCT=RCT+1,RCM(RCT)=RCER(RCM)
"RTN","RCDPEM0",48,0)
 . D STORERR(344.31,RCZ,.RCM)
"RTN","RCDPEM0",49,0)
 ;
"RTN","RCDPEM0",50,0)
 I RCMATCH D
"RTN","RCDPEM0",51,0)
 . S DIE="^RCY(344.31,",DA=RCZ,DR=".08////"_RCMATCH_";.1////"_RCRZ D ^DIE
"RTN","RCDPEM0",52,0)
 . S DIE="^RCY(344.4,",DA=RCRZ,DR=".09////"_RCMATCH D ^DIE
"RTN","RCDPEM0",53,0)
 . S ^TMP($J,"RCTOT","MATCH")=$G(^TMP($J,"RCTOT","MATCH"))+1
"RTN","RCDPEM0",54,0)
 . ;Lines below are added for Auto-posting - PRCA*4.5*298
"RTN","RCDPEM0",55,0)
 . ;Quit if this is not nightly job or medical auto posting is OFF
"RTN","RCDPEM0",56,0)
 . Q:'RCPROC  Q:'$P($G(^RCY(344.61,1,0)),U,2)
"RTN","RCDPEM0",57,0)
 . ;Quit if this is a zero value ERA
"RTN","RCDPEM0",58,0)
 . Q:+$P($G(^RCY(344.4,RCRZ,0)),U,5)=0
"RTN","RCDPEM0",59,0)
 . ;Quit if ERA payer is excluded from autopost
"RTN","RCDPEM0",60,0)
 . Q:$$EXCLUDE^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",61,0)
 . ;Quit if pharmacy ERA
"RTN","RCDPEM0",62,0)
 . Q:$$PHARM^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",63,0)
 . ;Ignore ERA with ERA level adjustments and exceptions
"RTN","RCDPEM0",64,0)
 . Q:'$$AUTOCHK^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",65,0)
 . ;Set AUTO-POST STATUS = UNPOSTED this is trigger for auto-post (EN^RCDPEAP)
"RTN","RCDPEM0",66,0)
 . D SETSTA^RCDPEAP(RCRZ,0)
"RTN","RCDPEM0",67,0)
 ;
"RTN","RCDPEM0",68,0)
 Q
"RTN","RCDPEM0",69,0)
 ;
"RTN","RCDPEM0",70,0)
ADDDEP(RCD,RCDDT,RCZ) ; Add deposit
"RTN","RCDPEM0",71,0)
 ; RCD = deposit #
"RTN","RCDPEM0",72,0)
 ; RCDDT = deposit date FM format
"RTN","RCDPEM0",73,0)
 ; RCZ = ien of entry in file 344.3
"RTN","RCDPEM0",74,0)
 ; Function returns IEN of new deposit entry
"RTN","RCDPEM0",75,0)
 ;
"RTN","RCDPEM0",76,0)
 N RCDEP,RC0,DIE,DR,DA,X,Y
"RTN","RCDPEM0",77,0)
 S RCDEP=+$$ADDDEPT^RCDPUDEP(RCD,RCDDT)
"RTN","RCDPEM0",78,0)
 I RCDEP D
"RTN","RCDPEM0",79,0)
 . D LOCKDEP^RCDPEM(RCDEP,1)
"RTN","RCDPEM0",80,0)
 . S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",81,0)
 . S DIE="^RCY(344.1,",DA=RCDEP,DR=".04////"_+$P(RC0,U,8)_$S($P(RC0,U,4)'="":";.05////"_$P(RC0,U,4),1:"")  D ^DIE
"RTN","RCDPEM0",82,0)
 . S DIE="^RCY(344.3,",DR=".03////"_RCDEP,DA=RCZ D ^DIE
"RTN","RCDPEM0",83,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,5)=RCDEP
"RTN","RCDPEM0",84,0)
 Q RCDEP
"RTN","RCDPEM0",85,0)
 ;
"RTN","RCDPEM0",86,0)
ADDREC(RCDEP,RCZ) ; Add receipt, send CR to FUND 528704, Rev src cd 8NZZ
"RTN","RCDPEM0",87,0)
 ;   for total EFT amt
"RTN","RCDPEM0",88,0)
 ; RCDEP = IEN in AR DEPOSIT file (#344.1)
"RTN","RCDPEM0",89,0)
 ;   RCZ = IEN in EDI LOCKBOX DEPOSIT file (#344.3)
"RTN","RCDPEM0",90,0)
 ;    Function returns IEN of new receipt entry
"RTN","RCDPEM0",91,0)
 ;
"RTN","RCDPEM0",92,0)
 ; RCLOCK - flag indicating lock success
"RTN","RCDPEM0",93,0)
 ; RCTRANDA - transaction number
"RTN","RCDPEM0",94,0)
 ; RECTDA - IEN in file #344
"RTN","RCDPEM0",95,0)
 N RCER,RCLOCK,RCTRANDA,RECTDA,RCQUIT,RCDPDATA,RCTOTCT,RC0,DIE,DA,DR,X,Y
"RTN","RCDPEM0",96,0)
 S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",97,0)
 S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)=0
"RTN","RCDPEM0",98,0)
 ; Single receipt - multiple transactions for EFT payments
"RTN","RCDPEM0",99,0)
 S RECTDA=+$$ADDRECT^RCDPUREC($P(RC0,U,7),RCDEP,+$O(^RC(341.1,"AC",14,0)))
"RTN","RCDPEM0",100,0)
 ; Create detail lines for deposit amount, process whole receipt to send
"RTN","RCDPEM0",101,0)
 ;   CR document for deposit amount
"RTN","RCDPEM0",102,0)
 I RECTDA D
"RTN","RCDPEM0",103,0)
 . L +^RCY(344,RECTDA):DILOCKTM S RCLOCK=$T Q:'RCLOCK  ; exit if unable to lock
"RTN","RCDPEM0",104,0)
 . N STATUS,RC00,RCT
"RTN","RCDPEM0",105,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U)=RECTDA,^TMP($J,"RCTOT","EFT_RECPT")=$G(^TMP($J,"RCTOT","EFT_RECPT"))+1
"RTN","RCDPEM0",106,0)
 . ;  check to see if receipt has been processed (fms document)
"RTN","RCDPEM0",107,0)
 . D DIQ344^RCDPRPLM(RECTDA,"200;")
"RTN","RCDPEM0",108,0)
 . ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPEM0",109,0)
 . I RCDPDATA(344,RECTDA,200,"E")'="" S RCQUIT=0 D  Q:RCQUIT
"RTN","RCDPEM0",110,0)
 .. S STATUS=$$STATUS^GECSSGET(RCDPDATA(344,RECTDA,200,"E"))
"RTN","RCDPEM0",111,0)
 .. ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPEM0",112,0)
 .. I $E(STATUS)="E"!($E(STATUS)="R")!(STATUS=-1) Q
"RTN","RCDPEM0",113,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  Receipt already sent to FMS - No change"
"RTN","RCDPEM0",114,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",115,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",116,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",117,0)
 .. L -^RCY(344,RECTDA)
"RTN","RCDPEM0",118,0)
 .. L -^RCY(344.1,RCDEP)
"RTN","RCDPEM0",119,0)
 .. S RCQUIT=1 K RCER
"RTN","RCDPEM0",120,0)
 . ;  mark receipt as processed (closed) to prevent editing
"RTN","RCDPEM0",121,0)
 . D MARKPROC^RCDPUREC(RECTDA,"")
"RTN","RCDPEM0",122,0)
 . S DIE="^RCY(344,",DR=".04////"_+$O(^RC(341.1,"AC",14,0)),DA=RECTDA D ^DIE ; Add EDI Lockbox payment type
"RTN","RCDPEM0",123,0)
 . ;
"RTN","RCDPEM0",124,0)
 . ; Add receipt line for each payer's EFT
"RTN","RCDPEM0",125,0)
 . S RCT=0 F  S RCT=$O(^RCY(344.31,"B",RCZ,RCT)) Q:'RCT  D  Q:$O(RCER(0))
"RTN","RCDPEM0",126,0)
 .. S RC00=$G(^RCY(344.31,RCT,0)),DR=""
"RTN","RCDPEM0",127,0)
 .. S RCTRANDA=$S('$P(RC00,U,14):$$ADDTRAN^RCDPURET(RECTDA),1:$P(RC00,U,14)) ; detail line
"RTN","RCDPEM0",128,0)
 .. I 'RCTRANDA D  Q
"RTN","RCDPEM0",129,0)
 ... S RCER(1)=$$SETERR(2),RCER(2)="  The receipt for the EFT deposit was not created correctly",RCER(3)="  You may have to add the detail manually to send the FMS CR doc to revenue"
"RTN","RCDPEM0",130,0)
 ... S RCER(4)="  source code 8NZZ in fund "_$S(DT<$$ADDPTEDT^PRCAACC():"5287.4",1:"528704")_".  Receipt # is "_$P($G(^RCY(344,RECTDA,0)),U),RCER(5)="  Trace # being processed at time of error was: "_$P(RC00,U,4)_"."
"RTN","RCDPEM0",131,0)
 ... D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",132,0)
 ... S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",133,0)
 ... D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",134,0)
 .. ;
"RTN","RCDPEM0",135,0)
 .. S DR=DR_";1.02////Auto added EDI Lockbox deposit;.06////"_$P(RC00,U,12)_";.04////"_$J(+$P(RC00,U,7),"",2)_";.14////"_RCTRANDA
"RTN","RCDPEM0",136,0)
 .. N N S N=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)) S:N=0 N=.5
"RTN","RCDPEM0",137,0)
 .. S DR=DR_";.12////"_N
"RTN","RCDPEM0",138,0)
 .. S DA(1)=RECTDA,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM0",139,0)
 .. S:$E(DR)=";" DR=$P(DR,";",2,999) D ^DIE
"RTN","RCDPEM0",140,0)
 .. S DR=".14////"_RCTRANDA_";.09////"_RECTDA,DIE="^RCY(344.31,",DA=RCT D ^DIE
"RTN","RCDPEM0",141,0)
 .. ;
"RTN","RCDPEM0",142,0)
 . ;Post to FUND 528704/RSC 8NZZ
"RTN","RCDPEM0",143,0)
 . D PROCESS^RCDPURE1(RECTDA,2)
"RTN","RCDPEM0",144,0)
 . ;Save details for status report
"RTN","RCDPEM0",145,0)
 . N Z,TOT
"RTN","RCDPEM0",146,0)
 . S (TOT,Z)=0 F  S Z=$O(^RCY(344,RECTDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^RCY(344,RECTDA,1,Z,0)),U,4)
"RTN","RCDPEM0",147,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,2)=TOT
"RTN","RCDPEM0",148,0)
 . ;
"RTN","RCDPEM0",149,0)
 . I $P($G(^RCY(344,RECTDA,2)),U)="" D  ; Receipt not processed fully
"RTN","RCDPEM0",150,0)
 .. N CT,Z
"RTN","RCDPEM0",151,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  The receipt "_$P($G(^RCY(344,RECTDA,0)),U)_" for the EFT deposit was not processed fully" S:TOT RCER(3)="  You must manually process it to create the FMS CR doc to rev src code 8NZZ"
"RTN","RCDPEM0",152,0)
 .. S Z=0,CT=+$O(RCER(" "),-1) F  S Z=$O(^TMP($J,"RCDPEMSG",Z)) Q:'Z  S CT=CT+1,RCER(CT)=$G(^TMP($J,"RCDPEMSG",Z))
"RTN","RCDPEM0",153,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",154,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",155,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",156,0)
 . ;
"RTN","RCDPEM0",157,0)
 . S DIE="^RCY(344.3,",DR=".11////^S X=DT;.12////"_$J(+TOT,"",2),DA=RCZ D ^DIE
"RTN","RCDPEM0",158,0)
 . S ^TMP($J,"RCTOT","SUSPAMT")=$G(^TMP($J,"RCTOT","SUSPAMT"))+TOT
"RTN","RCDPEM0",159,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)="1"
"RTN","RCDPEM0",160,0)
 ;
"RTN","RCDPEM0",161,0)
 I 'RCLOCK,$G(RECTDA) D  ; couldn't get LOCK send MailMan message and store error
"RTN","RCDPEM0",162,0)
 .N RCBODY,XMINSTR,XMSUBJ,XMTO,XMZ
"RTN","RCDPEM0",163,0)
 .S RCBODY(1)=" > "_$$FMTE^XLFDT($$NOW^XLFDT,10)
"RTN","RCDPEM0",164,0)
 .S RCBODY(2)="An exception occurred during Lockbox processing."
"RTN","RCDPEM0",165,0)
 .S RCBODY(3)="Receipt "_$P($G(^RCY(344,RECTDA,0)),U)_" was not processed."
"RTN","RCDPEM0",166,0)
 .S RCBODY(4)="The ePayments software could not get exclusive access to the entry."
"RTN","RCDPEM0",167,0)
 .S XMSUBJ="EDI LBOX "_$$FMTE^XLFDT(DT,10)_" Receipt Not Processed"
"RTN","RCDPEM0",168,0)
 .S XMTO("I:G.RCDPE PAYMENTS")="",XMTO(DUZ)=""
"RTN","RCDPEM0",169,0)
 .S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM0",170,0)
 .D SENDMSG^XMXAPI(DUZ,XMSUBJ,"RCBODY",.XMTO,.XMINSTR,.XMZ)
"RTN","RCDPEM0",171,0)
 .I $G(RCZ) D STORERR(344.3,RCZ,.RCBODY)
"RTN","RCDPEM0",172,0)
 ;
"RTN","RCDPEM0",173,0)
 I RCLOCK L -^RCY(344,RECTDA)
"RTN","RCDPEM0",174,0)
 Q $S(RCLOCK:RECTDA,1:0)  ; return new IEN or zero if not processed
"RTN","RCDPEM0",175,0)
 ;
"RTN","RCDPEM0",176,0)
SETERR(RCPROC) ; Set up first line of error message to be stored
"RTN","RCDPEM0",177,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",178,0)
 ;        =2 if called from EFT deposit creation
"RTN","RCDPEM0",179,0)
 N LINE1
"RTN","RCDPEM0",180,0)
 I RCPROC S LINE1=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" - PROCESS TO "_$S(RCPROC=1:"CREATE RECEIPT FROM ERA",1:"SEND EFT DEPOSIT TO FMS")
"RTN","RCDPEM0",181,0)
 Q LINE1
"RTN","RCDPEM0",182,0)
 ;
"RTN","RCDPEM0",183,0)
STORERR(RCFILE,RCZ,RCER) ; Store error text in word processing field
"RTN","RCDPEM0",184,0)
 ; RCFILE = 344.3 or 344.31
"RTN","RCDPEM0",185,0)
 ; RCZ = ien of the entry in file RCFILE
"RTN","RCDPEM0",186,0)
 ; RCER = array containing the error text (passed by ref)
"RTN","RCDPEM0",187,0)
 D WP^DIE(RCFILE,RCZ_",",2,"A","RCER")
"RTN","RCDPEM0",188,0)
 Q
"RTN","RCDPEM0",189,0)
 ;
"RTN","RCDPEM2")
0^44^B206109836
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK/PJH - MANUAL ERA AND EFT MATCHING ;Jun 11, 2014@13:24:36
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
 ;
"RTN","RCDPEM2",6,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",7,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,END,RCEFT,RCERA,RCMATCH,RCNAME,RCQUIT,START,X,Y
"RTN","RCDPEM2",8,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD",!,"WITH AN ERA RECORD."
"RTN","RCDPEM2",9,0)
 ; PRCA*4.5*298 - Add ability to specify a date range
"RTN","RCDPEM2",10,0)
 S DIR("A")="Select by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","RCDPEM2",11,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",12,0)
 I Y<1 G M1
"RTN","RCDPEM2",13,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPEM2",14,0)
 K DIR S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPEM2",15,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPEM2",16,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: " D ^DIR K DIR
"RTN","RCDPEM2",17,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",18,0)
 S START=Y K DIR,X,Y
"RTN","RCDPEM2",19,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPEM2",20,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPEM2",21,0)
 D ^DIR K DIR
"RTN","RCDPEM2",22,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",23,0)
 S END=Y
"RTN","RCDPEM2",24,0)
 ;
"RTN","RCDPEM2",25,0)
M1 ; come here if no date range slection 
"RTN","RCDPEM2",26,0)
 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",27,0)
 ;
"RTN","RCDPEM2",28,0)
 ; ** start PRCA*4.5*293 Add extra checks to filter out EFTs that have 
"RTN","RCDPEM2",29,0)
 ;      a payment amount of zero or EFTs that have been removed.
"RTN","RCDPEM2",30,0)
 ;      Only UNMATCHED EFTs with payment amt >0 and not removed should
"RTN","RCDPEM2",31,0)
 ;      be selectable by the user.
"RTN","RCDPEM2",32,0)
 ;
"RTN","RCDPEM2",33,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",34,0)
 I $G(DTRNG) S DIR("S")=DIR("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",35,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",36,0)
 ;
"RTN","RCDPEM2",37,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",38,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",39,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",40,0)
 W !
"RTN","RCDPEM2",41,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",42,0)
 W !
"RTN","RCDPEM2",43,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",44,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",45,0)
 I Y'=1 G M1
"RTN","RCDPEM2",46,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #"_RCEFT_": "
"RTN","RCDPEM2",47,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",48,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",49,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",50,0)
 S RCERA=+Y,RCERA(0)=$G(^RCY(344.4,+Y,0))
"RTN","RCDPEM2",51,0)
 W !
"RTN","RCDPEM2",52,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",53,0)
 W !
"RTN","RCDPEM2",54,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",55,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",56,0)
 I Y'=1 G M12
"RTN","RCDPEM2",57,0)
 S RCMATCH=(+$P(RCERA(0),U,5)=+$P(RCEFT(0),U,7))
"RTN","RCDPEM2",58,0)
 S RCNAME=($P(RCERA(0),U,6)=$P(RCEFT(0),U,2))
"RTN","RCDPEM2",59,0)
 I 'RCMATCH!'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",60,0)
 . N Z
"RTN","RCDPEM2",61,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",62,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",63,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",64,0)
 . I 'RCMATCH S Z=Z+1,DIR("A",Z)=$J("",3)_"> The amount of payment on these two records do not agree"
"RTN","RCDPEM2",65,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",66,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",67,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",68,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",69,0)
 S DIR(0)="EA",DIR("A",1)="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA,DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM2",70,0)
M1Q Q
"RTN","RCDPEM2",71,0)
 ;
"RTN","RCDPEM2",72,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",73,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",74,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",75,0)
M2 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",76,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",77,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",78,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M2Q
"RTN","RCDPEM2",79,0)
 S RCEFT=+Y
"RTN","RCDPEM2",80,0)
 W !
"RTN","RCDPEM2",81,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",82,0)
 W !
"RTN","RCDPEM2",83,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",84,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",85,0)
 I Y'=1 G M2
"RTN","RCDPEM2",86,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",87,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",88,0)
M2Q Q
"RTN","RCDPEM2",89,0)
 ;
"RTN","RCDPEM2",90,0)
MANTR ; Mark an EFT detail record as 'TR' posted manually
"RTN","RCDPEM2",91,0)
 N DA,DR,DIC,DIE,DIR,X,Y,RCEFT,DUOUT,DTOUT,RCZ0,RCTR,RCHOW
"RTN","RCDPEM2",92,0)
 ; EFT detail cannot be associated with a receipt or TR document
"RTN","RCDPEM2",93,0)
 ;
"RTN","RCDPEM2",94,0)
 W !,"*****",!," YOU SHOULD ONLY USE THIS OPTION IF YOU HAVE AN EFT DETAIL RECORD ON YOUR",!," UNAPPLIED DEPOSIT REPORT WHOSE DETAIL WAS ENTERED ON LINE VIA A TR DOCUMENT",!,"*****",!
"RTN","RCDPEM2",95,0)
 S DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,16)="""",$P(^(0),U,11)",DIC("A")="SELECT THE EFT DETAIL WHOSE 'TR' DOC WAS MANUALLY ENTERED ON LINE: ",DIC="^RCY(344.31,"
"RTN","RCDPEM2",96,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM2",97,0)
 I Y'>0 G MANTRQ
"RTN","RCDPEM2",98,0)
 S RCEFT=+Y,RCZ0=$G(^RCY(344.31,RCEFT,0))
"RTN","RCDPEM2",99,0)
 S DIR(0)="FA^2:30^K:X'?1""TR"".E X",DIR("A")="ENTER THE TR DOC # THAT WAS ENTERED ON-LINE FOR THE EFT DETAIL: "
"RTN","RCDPEM2",100,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",101,0)
 I $D(DTOUT)!$D(DUOUT) G MANTRQ
"RTN","RCDPEM2",102,0)
 S RCTR=Y,DR=""
"RTN","RCDPEM2",103,0)
 ;
"RTN","RCDPEM2",104,0)
 I '$P(RCZ0,U,8) D  G:RCQUIT MANTRQ  ;Unmatched
"RTN","RCDPEM2",105,0)
 . S DIR(0)="SA^E:ELECTRONIC ERA;P:PAPER EOB",DIR("A")="WAS THE EFT DETAIL RECEIVED BY (E)RA or (P)APER EOB?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",106,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEM2",107,0)
 . S RCHOW=Y,DR=""
"RTN","RCDPEM2",108,0)
 . I RCHOW="E" D
"RTN","RCDPEM2",109,0)
 .. S DR=";.09R;.08////1"
"RTN","RCDPEM2",110,0)
 . I RCHOW="P" D
"RTN","RCDPEM2",111,0)
 .. S DR=";.08////2"
"RTN","RCDPEM2",112,0)
 ;
"RTN","RCDPEM2",113,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK EFT DETAIL #: "_RCEFT_" AS MANUALLY POSTED",DIR("A",2)="  USING TR DOC: "_RCTR
"RTN","RCDPEM2",114,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",115,0)
 I Y'=1 D  G MANTRQ
"RTN","RCDPEM2",116,0)
 . S DIR(0)="EA",DIR("A")="EFT NOT UPDATED - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEM2",117,0)
 S DIE="^RCY(344.31,",DA=RCEFT,DR=".16R"_DR D ^DIE
"RTN","RCDPEM2",118,0)
 I $D(Y) D
"RTN","RCDPEM2",119,0)
 . S DIE="^RCY(344.31,",DA=RCEFT,DR=".16///@;.08///"_$S($P(RCZ0,U,8)'="":$P(RCZ0,U,8),1:"@") D ^DIE
"RTN","RCDPEM2",120,0)
 . S DIR("A")="EFT NOT UPDATED - Press ENTER to continue: "
"RTN","RCDPEM2",121,0)
 E  D
"RTN","RCDPEM2",122,0)
 . S DIR("A")="STATUS UPDATED FOR EFT DETAIL #: "_RCEFT_" - Press ENTER to continue: "
"RTN","RCDPEM2",123,0)
 S DIR(0)="EA"
"RTN","RCDPEM2",124,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",125,0)
 ;
"RTN","RCDPEM2",126,0)
MANTRQ Q
"RTN","RCDPEM2",127,0)
 ;
"RTN","RCDPEM2",128,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",129,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",130,0)
 ;
"RTN","RCDPEM2",131,0)
 ;; Begin PRCA*4.5*276 - PJH
"RTN","RCDPEM2",132,0)
POSTED ;
"RTN","RCDPEM2",133,0)
 N DIR,X,Y
"RTN","RCDPEM2",134,0)
 S DIR("A")="Select type of receipt to ERA link"
"RTN","RCDPEM2",135,0)
 S DIR("B")="M"
"RTN","RCDPEM2",136,0)
 S DIR(0)="S^M:Manually select receipt to post;"
"RTN","RCDPEM2",137,0)
 S DIR(0)=DIR(0)_"A:Automatic search for receipt to post"
"RTN","RCDPEM2",138,0)
 D ^DIR K DIR
"RTN","RCDPEM2",139,0)
 I Y="M" D MANUAL Q
"RTN","RCDPEM2",140,0)
 I Y="A" D AUTO
"RTN","RCDPEM2",141,0)
 Q
"RTN","RCDPEM2",142,0)
 ;
"RTN","RCDPEM2",143,0)
MANUAL ; Mark an ERA as posted when the data was previously posted using
"RTN","RCDPEM2",144,0)
 ; paper EOB information
"RTN","RCDPEM2",145,0)
 N DIC,DIE,DIR,DA,DR,ERA,RCPT,X,Y,%
"RTN","RCDPEM2",146,0)
 ; Must be unmatched or matched to paper check, must be accepted by FMS, must not be posted yet
"RTN","RCDPEM2",147,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM2",148,0)
MAN1 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM2",149,0)
 D ^DIC K DIC
"RTN","RCDPEM2",150,0)
 ;
"RTN","RCDPEM2",151,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",152,0)
 ;
"RTN","RCDPEM2",153,0)
 ;Check if ERA is already linked to a receipt
"RTN","RCDPEM2",154,0)
 I $$RCHECK(+Y) G MAN1
"RTN","RCDPEM2",155,0)
 S ERA=+Y
"RTN","RCDPEM2",156,0)
 ;
"RTN","RCDPEM2",157,0)
 S DIC="^RCY(344,",DIC(0)="AEMQ",DIC("A")="RECEIPT: ",DIC("S")="I $$FMS^RCDPEM2(Y,0)"
"RTN","RCDPEM2",158,0)
 D ^DIC K DIC
"RTN","RCDPEM2",159,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",160,0)
 S RCPT=+Y
"RTN","RCDPEM2",161,0)
 ;
"RTN","RCDPEM2",162,0)
 D NOW^%DTC
"RTN","RCDPEM2",163,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",164,0)
 S DIE="^RCY(344.4,",DR=".08////"_RCPT_";.09////2;.14////2;20.03////1",DA=ERA
"RTN","RCDPEM2",165,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",166,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",167,0)
 D ^DIE
"RTN","RCDPEM2",168,0)
 I '$D(Y) D
"RTN","RCDPEM2",169,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM2",170,0)
 ;
"RTN","RCDPEM2",171,0)
MANUALQ Q
"RTN","RCDPEM2",172,0)
 ;
"RTN","RCDPEM2",173,0)
 ;VISN 15 software - created by Karen Flores
"RTN","RCDPEM2",174,0)
 ;
"RTN","RCDPEM2",175,0)
AUTO ;Select ERA's for linking to receipt
"RTN","RCDPEM2",176,0)
 N EXIT
"RTN","RCDPEM2",177,0)
 S EXIT=0 F  D LNKERA Q:EXIT
"RTN","RCDPEM2",178,0)
 Q
"RTN","RCDPEM2",179,0)
 ;
"RTN","RCDPEM2",180,0)
RCHECK(RCSCR) ;Check if already linked to a receipt
"RTN","RCDPEM2",181,0)
 N REC,RNUM,RNAM,AMT
"RTN","RCDPEM2",182,0)
 S REC=$G(^RCY(344.4,RCSCR,0)),RNUM=$P(REC,U,8)
"RTN","RCDPEM2",183,0)
 ;Ignore check if zero amount ERA
"RTN","RCDPEM2",184,0)
 Q:'$P(REC,U,5) 0
"RTN","RCDPEM2",185,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",186,0)
 Q:'RNUM 0
"RTN","RCDPEM2",187,0)
 S RNAM=$P($G(^RCY(344,RNUM,0)),U)
"RTN","RCDPEM2",188,0)
 W !!,"ERA ",RCSCR," is already linked to receipt ",RNAM,!
"RTN","RCDPEM2",189,0)
 Q 1
"RTN","RCDPEM2",190,0)
 ;
"RTN","RCDPEM2",191,0)
LNKERA ;Select ERA
"RTN","RCDPEM2",192,0)
 N ABORT,DIC,DUOUT,DTOUT,REC,RCSCR,X,Y
"RTN","RCDPEM2",193,0)
 ;Must be unposted and either unmatched or matched to paper check
"RTN","RCDPEM2",194,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0"
"RTN","RCDPEM2",195,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" W ! D ^DIC K DIC
"RTN","RCDPEM2",196,0)
 S RCSCR=+Y I RCSCR'>0 S EXIT=1 Q
"RTN","RCDPEM2",197,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",198,0)
 Q:$$RCHECK(RCSCR)
"RTN","RCDPEM2",199,0)
 ;
"RTN","RCDPEM2",200,0)
 ;Finds receipt automatically from AR TRANSACTION file #433 
"RTN","RCDPEM2",201,0)
 N AMT,ART,ARTND1,ATTY,BILL,EOB,EOBND,FOUND,RCND,RCSCR1,RECEPT,TAMT
"RTN","RCDPEM2",202,0)
 N TRACE
"RTN","RCDPEM2",203,0)
 ;Trace# from ERA
"RTN","RCDPEM2",204,0)
 S TRACE=$P($G(^RCY(344.4,RCSCR,0)),U,2)
"RTN","RCDPEM2",205,0)
 ;Clear workfile
"RTN","RCDPEM2",206,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",207,0)
 ;
"RTN","RCDPEM2",208,0)
 S (FOUND,ABORT,RCSCR1)=0
"RTN","RCDPEM2",209,0)
 ;Scan claim lines in ERA for non zero bills
"RTN","RCDPEM2",210,0)
 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:+RCSCR1=0!(FOUND)  D
"RTN","RCDPEM2",211,0)
 .S RCND=$G(^RCY(344.4,RCSCR,1,RCSCR1,0))
"RTN","RCDPEM2",212,0)
 .;Ignore bill if AMOUNT PAID is zero
"RTN","RCDPEM2",213,0)
 .S AMT=$P(RCND,"^",3) Q:+AMT=0
"RTN","RCDPEM2",214,0)
 .;Ignore if EOB has no EOB detail record
"RTN","RCDPEM2",215,0)
 .S EOB=+$P(RCND,"^",2) Q:'EOB
"RTN","RCDPEM2",216,0)
 .;Get EOB detail record
"RTN","RCDPEM2",217,0)
 .S EOBND=$G(^IBM(361.1,EOB,0))
"RTN","RCDPEM2",218,0)
 .;Extract Bill number from EOB detail
"RTN","RCDPEM2",219,0)
 .S BILL=$P(EOBND,"^",1) Q:BILL=""
"RTN","RCDPEM2",220,0)
 .;Ignore duplicate bills on ERA
"RTN","RCDPEM2",221,0)
 .Q:$D(^TMP("RCDPEM2",$J,BILL))
"RTN","RCDPEM2",222,0)
 .S ^TMP("RCDPEM2",$J,BILL)=""
"RTN","RCDPEM2",223,0)
 .;Search AR TRANSACTION file #433 for the bill - newest first
"RTN","RCDPEM2",224,0)
 .S ART=""
"RTN","RCDPEM2",225,0)
 .F  S ART=$O(^PRCA(433,"C",BILL,ART),-1) Q:+ART=0!(FOUND)  D
"RTN","RCDPEM2",226,0)
 ..S ARTND1=$G(^PRCA(433,ART,1))
"RTN","RCDPEM2",227,0)
 ..;Get transaction type
"RTN","RCDPEM2",228,0)
 ..S ATTY=$P(ARTND1,"^",2) Q:'ATTY
"RTN","RCDPEM2",229,0)
 ..;Ignore if not a payment
"RTN","RCDPEM2",230,0)
 ..S ATTY=$P($G(^PRCA(430.3,ATTY,0)),"^",1) Q:ATTY'["PAYMENT"
"RTN","RCDPEM2",231,0)
 ..;Get receipt number
"RTN","RCDPEM2",232,0)
 ..S RECEPT=$P(ARTND1,"^",3) Q:RECEPT=""
"RTN","RCDPEM2",233,0)
 ..;Ignore receipt if status is not 'ACCEPTED BY FMS'
"RTN","RCDPEM2",234,0)
 ..Q:'$$FMS(RECEPT,1)
"RTN","RCDPEM2",235,0)
 ..W !!,"PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEM2",236,0)
 ..W !,"Bill number: ",$P($G(^DGCR(399,BILL,0)),U)
"RTN","RCDPEM2",237,0)
 ..W !,"Check #: ",$$CHQ(RECEPT,BILL)
"RTN","RCDPEM2",238,0)
 ..W !,"Trace #: ",TRACE
"RTN","RCDPEM2",239,0)
 ..W !,"DOS: ",$$FMTE^XLFDT($P($G(^DGCR(399,BILL,0)),U,3))
"RTN","RCDPEM2",240,0)
 ..S TAMT=+$P(ARTND1,"^",5)
"RTN","RCDPEM2",241,0)
 ..W !,"AR Transaction amount: ",TAMT
"RTN","RCDPEM2",242,0)
 ..W !,"RECEIPT#: ",RECEPT
"RTN","RCDPEM2",243,0)
 ..W !,"Date of Receipt: ",$$FMTE^XLFDT($$DATE(RECEPT))
"RTN","RCDPEM2",244,0)
 ..W !,"Total Receipt AMOUNT: ",$J($$AMT(RECEPT),2,2),!
"RTN","RCDPEM2",245,0)
 .. ; PRCA*4.5*284 Change default response from YES to NO
"RTN","RCDPEM2",246,0)
 ..S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPEM2",247,0)
 ..S DIR("A")="Link to update Remittance entry # "_RCSCR
"RTN","RCDPEM2",248,0)
 ..S DIR("A")=DIR("A")_" with receipt "_RECEPT
"RTN","RCDPEM2",249,0)
 ..D ^DIR K DIR
"RTN","RCDPEM2",250,0)
 ..;Aborted
"RTN","RCDPEM2",251,0)
 ..I $D(DUOUT)!$D(DTOUT) S ABORT=1,FOUND=1 Q
"RTN","RCDPEM2",252,0)
 ..;Attempt to update ERA - finish if successful
"RTN","RCDPEM2",253,0)
 ..I +Y>0 D UPDERA(RCSCR,RECEPT,.FOUND)
"RTN","RCDPEM2",254,0)
 ;Update failed
"RTN","RCDPEM2",255,0)
 I FOUND=0 W !!,"No matching payment transactions found for this ERA"
"RTN","RCDPEM2",256,0)
 ;Clear workfile
"RTN","RCDPEM2",257,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",258,0)
 Q
"RTN","RCDPEM2",259,0)
 ;
"RTN","RCDPEM2",260,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPEM2",261,0)
 N Y,X,DR,DIE,%
"RTN","RCDPEM2",262,0)
 D NOW^%DTC
"RTN","RCDPEM2",263,0)
 S DIE="^RCY(344.4,",FOUND=0
"RTN","RCDPEM2",264,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",265,0)
 S DR=".08///"_RECEPT_";.09///2;.14///2;20.03///1"
"RTN","RCDPEM2",266,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",267,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",268,0)
 D ^DIE
"RTN","RCDPEM2",269,0)
 I '$D(Y) D
"RTN","RCDPEM2",270,0)
 .K DIR
"RTN","RCDPEM2",271,0)
 .S DIR(0)="EA"
"RTN","RCDPEM2",272,0)
 .S DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB"
"RTN","RCDPEM2",273,0)
 .S DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEM2",274,0)
 .S FOUND=1
"RTN","RCDPEM2",275,0)
 E  W !,"Unable to update ERA for receipt "_RECEPT,!
"RTN","RCDPEM2",276,0)
 Q FOUND
"RTN","RCDPEM2",277,0)
 ;
"RTN","RCDPEM2",278,0)
 ;Check FMS status
"RTN","RCDPEM2",279,0)
FMS(RECEPT,FLG) ;
"RTN","RCDPEM2",280,0)
 ; FLG = 1 if RECEPT contains receipt number
"RTN","RCDPEM2",281,0)
 ; FLG = 0 if RECEPT contains ien of the receipt
"RTN","RCDPEM2",282,0)
 N FMSDOCNO,RCRECTDA,RES
"RTN","RCDPEM2",283,0)
 S RES=0 I $G(RECEPT)="" G FMSX
"RTN","RCDPEM2",284,0)
 ;Get receipt IEN
"RTN","RCDPEM2",285,0)
 I 'FLG S RCRECTDA=RECEPT
"RTN","RCDPEM2",286,0)
 I FLG S RCRECTDA=$O(^RCY(344,"B",RECEPT,0))
"RTN","RCDPEM2",287,0)
 I 'RCRECTDA G FMSX
"RTN","RCDPEM2",288,0)
 ;Get FMS document number
"RTN","RCDPEM2",289,0)
 S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPEM2",290,0)
 ;Ignore if not accepted
"RTN","RCDPEM2",291,0)
 I $P(FMSDOCNO,U,2)'="ACCEPTED BY FMS" G FMSX
"RTN","RCDPEM2",292,0)
 ;Otherwise can be linked
"RTN","RCDPEM2",293,0)
 S RES=1
"RTN","RCDPEM2",294,0)
FMSX ;
"RTN","RCDPEM2",295,0)
 Q RES
"RTN","RCDPEM2",296,0)
 ;
"RTN","RCDPEM2",297,0)
DATE(RECEPT) ;
"RTN","RCDPEM2",298,0)
 N RCRECTDA
"RTN","RCDPEM2",299,0)
 ;Get receipt IEN
"RTN","RCDPEM2",300,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPEM2",301,0)
 ;Return Receipt date
"RTN","RCDPEM2",302,0)
 Q $P($G(^RCY(344,RCRECTDA,0)),U,3)
"RTN","RCDPEM2",303,0)
 ;
"RTN","RCDPEM2",304,0)
AMT(RECEPT) ;Total Receipt amount
"RTN","RCDPEM2",305,0)
 N RCRECTDA,RCTRAN,RCTOT
"RTN","RCDPEM2",306,0)
 ;Get receipt IEN
"RTN","RCDPEM2",307,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPEM2",308,0)
 ;Total the Receipt transactions
"RTN","RCDPEM2",309,0)
 S RCTRAN=0,RCTOT=0
"RTN","RCDPEM2",310,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D
"RTN","RCDPEM2",311,0)
 .S RCTOT=RCTOT+$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,4)
"RTN","RCDPEM2",312,0)
 Q RCTOT
"RTN","RCDPEM2",313,0)
 ;
"RTN","RCDPEM2",314,0)
CHQ(RECEPT,BILL) ;Get check number for this bill
"RTN","RCDPEM2",315,0)
 N RCRECTDA,RCTRAN,RCCHK,PATBILL
"RTN","RCDPEM2",316,0)
 ;Get receipt IEN
"RTN","RCDPEM2",317,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA ""
"RTN","RCDPEM2",318,0)
 ;Scan Receipt looking for this bill IEN
"RTN","RCDPEM2",319,0)
 S RCTRAN=0,RCCHK=""
"RTN","RCDPEM2",320,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D  Q:RCCHK]""
"RTN","RCDPEM2",321,0)
 .;Check for match on bill IEN
"RTN","RCDPEM2",322,0)
 .S PATBILL=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,3)
"RTN","RCDPEM2",323,0)
 .;Ignore Patient pointers or null field
"RTN","RCDPEM2",324,0)
 .Q:$P(PATBILL,";",2)'="PRCA(430,"
"RTN","RCDPEM2",325,0)
 .;Compare bill IEN399 to IEN430
"RTN","RCDPEM2",326,0)
 .Q:$P(PATBILL,";")'=BILL
"RTN","RCDPEM2",327,0)
 .;Get check number for this line
"RTN","RCDPEM2",328,0)
 .S RCCHK=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,7)
"RTN","RCDPEM2",329,0)
 Q RCCHK
"RTN","RCDPEM2",330,0)
 ;
"RTN","RCDPEM2",331,0)
 ;; End PRCA*4.5*276 - PJH
"RTN","RCDPEM2",332,0)
 ;
"RTN","RCDPEM2",333,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",334,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",335,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",336,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",337,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",338,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",339,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",340,0)
 S RCERA=+Y
"RTN","RCDPEM2",341,0)
 W !
"RTN","RCDPEM2",342,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",343,0)
 W !
"RTN","RCDPEM2",344,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT? (Y/N) ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",345,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",346,0)
 I Y'=1 G M3
"RTN","RCDPEM2",347,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",348,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",349,0)
M3Q Q
"RTN","RCDPEM2",350,0)
 ;
"RTN","RCDPEM2",351,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",352,0)
 N X,Y,DIR,DIC,DIE,DIK,DA,DR,RCWL,RCEFT,RCQUIT
"RTN","RCDPEM2",353,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)" D ^DIC K DIC
"RTN","RCDPEM2",354,0)
 Q:Y'>0
"RTN","RCDPEM2",355,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",356,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",357,0)
 . S DIR(0)="YA",DIR("A",1)="THIS ERA ALREADY HAS A WORKLIST ENTRY AND MUST BE DELETED BEFORE IT CAN BE UNMATCHED",DIR("A")="DO YOU WANT TO DELETE THE WORKLIST ENTRY FOR THIS ERA NOW? "
"RTN","RCDPEM2",358,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",359,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",360,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",361,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",362,0)
 . S DIR("A",1)="THIS ERA IS MATCHED TO EFT #"_RCEFT,DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM? ",DIR(0)="YA"
"RTN","RCDPEM2",363,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",364,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",365,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",366,0)
 . W !,"EFT #"_RCEFT_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",367,0)
 S DIE="^RCY(344.4,",DR=".09////0;.13///@;.14////0",DA=RCWL D ^DIE
"RTN","RCDPEM2",368,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - Press ENTER to continue: "
"RTN","RCDPEM2",369,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",370,0)
 Q
"RTN","RCDPEM2",371,0)
 ;
"RTN","RCDPEM2",372,0)
 ;
"RTN","RCDPEM2",373,0)
 ; PRCA*4.5*284 - Changed option name from 'Mark ERA Return to Payer' to 'Remove ERA from Active Worklist'
"RTN","RCDPEM2",374,0)
RETN ; Entrypoint for Remove ERA from Active Worklist
"RTN","RCDPEM2",375,0)
 N DIR,X,Y,DTOUT,DUOUT,DIC,RCY,DIE,DA,DR,MSG,%
"RTN","RCDPEM2",376,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE MARK ERA",DUZ)
"RTN","RCDPEM2",377,0)
 I 'MSG(0) W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS OPTION",!,"This option is locked with RCDPE MARK ERA key.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM2",378,0)
 ; PRCA*4.5*284 - Changed description
"RTN","RCDPEM2",379,0)
 W !!,"Use this option to remove an ERA from the EEOB Worklist that should not have"
"RTN","RCDPEM2",380,0)
 W !,"been sent to your site by the payer; or the ERA cannot be removed off the"
"RTN","RCDPEM2",381,0)
 W !,"Worklist using the 'Update ERA Posted Using Paper EOB' option."
"RTN","RCDPEM2",382,0)
 W !!,"This option is only to be used if the paper check has been sent back to the"
"RTN","RCDPEM2",383,0)
 W !,"payer without being deposited.  Once removed, the ERA can no longer be"
"RTN","RCDPEM2",384,0)
 W !,"accessed for processing, but can be viewed under the posted Worklist. For"
"RTN","RCDPEM2",385,0)
 W !,"auditing purposes, this option requires the user to enter a reason for"
"RTN","RCDPEM2",386,0)
 W !,"removing the ERA.",!
"RTN","RCDPEM2",387,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,9),'$P(^(0),U,14)" D ^DIC K DIC
"RTN","RCDPEM2",388,0)
 Q:Y'>0
"RTN","RCDPEM2",389,0)
 S RCY=+Y
"RTN","RCDPEM2",390,0)
 S DIR(0)="YA",DIR("A",1)="THIS WILL REMOVE THE ERA # "_+Y_" FROM THE ACTIVE WORKLIST",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? " W ! D ^DIR K DIR
"RTN","RCDPEM2",391,0)
 W !
"RTN","RCDPEM2",392,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM2",393,0)
 S DIE="^RCY(344.4,",DA=RCY,DR=".18" D ^DIE
"RTN","RCDPEM2",394,0)
 I $D(Y) D NOCHNG Q
"RTN","RCDPEM2",395,0)
 ; PRCA*4.5*284 Set EFT MATCH STATUS (#344.4,.09) as '4' FOR REMOVED rather than '2' FOR MATCHED TO PAPER CHECK
"RTN","RCDPEM2",396,0)
 D NOW^%DTC S DR=".14////4;.09////4;.16////"_DUZ_";.17////"_% D ^DIE
"RTN","RCDPEM2",397,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",398,0)
 W ! D ^DIR
"RTN","RCDPEM2",399,0)
 Q
"RTN","RCDPEM2",400,0)
 ;
"RTN","RCDPEM2",401,0)
NOCHNG ;
"RTN","RCDPEM2",402,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEM2",403,0)
 D EN^DDIOL("NO CHANGES HAVE BEEN MADE.","","!")
"RTN","RCDPEM2",404,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",405,0)
 W !! D ^DIR
"RTN","RCDPEM2",406,0)
 Q
"RTN","RCDPEM3")
0^73^B177381909
"RTN","RCDPEM3",1,0)
RCDPEM3 ;OIFO-BAYPINES/RBN - ERA AUDIT REPORT and return EFT function ;Jun 06, 2014@19:11:19
"RTN","RCDPEM3",2,0)
 ;;4.5;Accounts Receivable;**276,284,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM3",4,0)
 ;
"RTN","RCDPEM3",5,0)
 ; General read access of IB EOB file #361.1 is allowed from AR (IA 4051)
"RTN","RCDPEM3",6,0)
 ; completely refactored for PRCA*4.5*298
"RTN","RCDPEM3",7,0)
 Q
"RTN","RCDPEM3",8,0)
 ;
"RTN","RCDPEM3",9,0)
 ; PRCA*4.5*284 - Changed report name from 'Mark ERA returned to Payer' to 'Remove ERA from active worklist'
"RTN","RCDPEM3",10,0)
 ;
"RTN","RCDPEM3",11,0)
 ; generates an audit report that displays all ERAs that have been removed from the worklist.  
"RTN","RCDPEM3",12,0)
 ; The user can select filters with which to limit the number of ERAs displayed:
"RTN","RCDPEM3",13,0)
 ;   Station/Division - default is all
"RTN","RCDPEM3",14,0)
 ;   Date Range - default is all
"RTN","RCDPEM3",15,0)
 ;   Start Date type - no default, P:Date removed from worklist, R:Date ERA Received, B:Both Dates
"RTN","RCDPEM3",16,0)
 ;                 
"RTN","RCDPEM3",17,0)
 ; INPUT:
"RTN","RCDPEM3",18,0)
 ;    user is prompted for the Station/Division, Date/Time range, and start/end dates
"RTN","RCDPEM3",19,0)
 ;
"RTN","RCDPEM3",20,0)
 ; OUTPUT:
"RTN","RCDPEM3",21,0)
 ;  report which displays returned ERAs, it contains:
"RTN","RCDPEM3",22,0)
 ;    User's name -  who performed the transaction
"RTN","RCDPEM3",23,0)
 ;    Date/Time ERA received from the payer
"RTN","RCDPEM3",24,0)
 ;    Date/Time ERA removed from worklist
"RTN","RCDPEM3",25,0)
 ;    Free text reasons for returning the ERA to the payer
"RTN","RCDPEM3",26,0)
 ;    ERA number
"RTN","RCDPEM3",27,0)
 ;    Trace number
"RTN","RCDPEM3",28,0)
 ;    Dollar amount of ERA
"RTN","RCDPEM3",29,0)
 ;    Payer name
"RTN","RCDPEM3",30,0)
 ;
"RTN","RCDPEM3",31,0)
 ; data taken from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEM3",32,0)
 ;                
"RTN","RCDPEM3",33,0)
 ; ^TMP($J,"RC REMV ERA", line #) structure:
"RTN","RCDPEM3",34,0)
 ;    STATION NAME^PAYER^ERA #^DEPOSIT #^DATE REMOVED^USER^REMOVE REASON^ERA #^ERA DATE^T0TAL AMOUNT
"RTN","RCDPEM3",35,0)
 ;
"RTN","RCDPEM3",36,0)
EN ; entry point for Remove ERA from Active Worklist Audit Report [RCDPE REMOVED ERA AUDIT]
"RTN","RCDPEM3",37,0)
 N %ZIS,I,RCDISPTY,RCDIV,RCDTRNG,RCEND,RCHDR,RCLNCNT,RCLSTMGR,RCPAGE,RCPG,RCSSD,RCSTA,RCSTART,RCSTNO,RCSTOP,RCTMPND
"RTN","RCDPEM3",38,0)
 N RCXCLUDE,VAUTD,X,Y
"RTN","RCDPEM3",39,0)
 ; RCDTRNG  - Date/Time range of report (range flag^start date^end date)
"RTN","RCDPEM3",40,0)
 ; RCDISPTY   - Display/print/Excel flag
"RTN","RCDPEM3",41,0)
 ; RCPAGE - page number of the report
"RTN","RCDPEM3",42,0)
 ; RCSSD - Selected Start Date (W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates
"RTN","RCDPEM3",43,0)
 ; RCLNCNT - counter for SL^RCDPEARL
"RTN","RCDPEM3",44,0)
 ; RCSTOP - flag to exit listing
"RTN","RCDPEM3",45,0)
 ; RCTMPND - storage node for SL^RCDPEARL
"RTN","RCDPEM3",46,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEM3",47,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEM3",48,0)
 ;
"RTN","RCDPEM3",49,0)
 S RCLSTMGR=""  ; ListMan flag, set to '^' if sent to Excel
"RTN","RCDPEM3",50,0)
 S RCTMPND=""  ; if null, report lines not stored in ^TMP, written directly
"RTN","RCDPEM3",51,0)
 S (RCSTOP,RCPG,RCLNCNT)=0  ; initial values of zero
"RTN","RCDPEM3",52,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM3",53,0)
 S RCPAGE=0  ; report page number
"RTN","RCDPEM3",54,0)
 ; PRCA*4.5*276 - Modify Header display
"RTN","RCDPEM3",55,0)
 S RCDIV="ALL"  ; default to All divisions
"RTN","RCDPEM3",56,0)
 S RCSSD=$$DTPRB^RCDPEM4() G:RCSSD=0 EXIT
"RTN","RCDPEM3",57,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'RCDTRNG EXIT
"RTN","RCDPEM3",58,0)
 S RCSTART=$P(RCDTRNG,U,2),RCEND=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",59,0)
 ; VAUTD=1 for 'ALL'
"RTN","RCDPEM3",60,0)
 D DIVISION^VAUTOMA Q:Y=-1
"RTN","RCDPEM3",61,0)
 I 'VAUTD&($D(VAUTD)'=11) G EXIT
"RTN","RCDPEM3",62,0)
 I VAUTD=0 D
"RTN","RCDPEM3",63,0)
 .N J,C S (J,C)=0,RCDIV="" F  S J=$O(VAUTD(J)) Q:'J  S C=C+1,$P(RCDIV,", ",C)=VAUTD(J)
"RTN","RCDPEM3",64,0)
 ;
"RTN","RCDPEM3",65,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEM3",66,0)
 S RCXCLUDE("CHAMPVA")=$$INCHMPVA^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM3",67,0)
 G:RCXCLUDE("CHAMPVA")<0 EXIT
"RTN","RCDPEM3",68,0)
 ; TRICARE exclusion filter
"RTN","RCDPEM3",69,0)
 S RCXCLUDE("TRICARE")=$$INTRICAR^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM3",70,0)
 G:RCXCLUDE("TRICARE")<0 EXIT
"RTN","RCDPEM3",71,0)
 ; ask display type for Excel
"RTN","RCDPEM3",72,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM3",73,0)
 ; display Excel info, set ListMan flag to prevent question
"RTN","RCDPEM3",74,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM3",75,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEM3",76,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM3",77,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEM3",78,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM3",79,0)
 .S RCTMPND=$T(+0)_"^REMOVE ERA AUDIT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEM3",80,0)
 .D REPRT,DISP(RCDISPTY)
"RTN","RCDPEM3",81,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM3",82,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEM3",83,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM3",84,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM3",85,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM3",86,0)
 .; invoke ListMan
"RTN","RCDPEM3",87,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM3",88,0)
 ;
"RTN","RCDPEM3",89,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM3",90,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEM3",91,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEM3",92,0)
 .S ZTRTN="ENFRMQ^RCDPEM3"
"RTN","RCDPEM3",93,0)
 .S ZTDESC=$$HDRNM
"RTN","RCDPEM3",94,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM3",95,0)
 .D ^%ZTLOAD
"RTN","RCDPEM3",96,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"Unable to queue this task.")
"RTN","RCDPEM3",97,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEM3",98,0)
 ;
"RTN","RCDPEM3",99,0)
 U IO
"RTN","RCDPEM3",100,0)
 ;
"RTN","RCDPEM3",101,0)
ENFRMQ ; entry point from queue
"RTN","RCDPEM3",102,0)
 D REPRT
"RTN","RCDPEM3",103,0)
 D DISP(RCDISPTY)
"RTN","RCDPEM3",104,0)
 D EXIT
"RTN","RCDPEM3",105,0)
 Q
"RTN","RCDPEM3",106,0)
 ;
"RTN","RCDPEM3",107,0)
DISPTY() ; function, ask display/output type
"RTN","RCDPEM3",108,0)
 ; input from user
"RTN","RCDPEM3",109,0)
 ; returns: Output destination (0=Display, 1=MS Excel, -1=timeout or '^')
"RTN","RCDPEM3",110,0)
 N DIR,DUOUT,X,Y
"RTN","RCDPEM3",111,0)
 S DIR(0)="YA",DIR("A")="Export the report to Microsoft Excel? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEM3",112,0)
 D ^DIR
"RTN","RCDPEM3",113,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","RCDPEM3",114,0)
 Q Y
"RTN","RCDPEM3",115,0)
 ;
"RTN","RCDPEM3",116,0)
ERASTA(ERAIEN) ; function, returns "station name ^ station #" for an ERA
"RTN","RCDPEM3",117,0)
 ; ERAIEN - ien of the ERA
"RTN","RCDPEM3",118,0)
 Q:'($G(ERAIEN)>0) "-1^"  ; must have valid IEN  
"RTN","RCDPEM3",119,0)
 N ERAEOB,BILLPTR,J,M,P,STAPTR,STNAM,STANMBR,Y
"RTN","RCDPEM3",120,0)
 ; ERAEOB  - EOB corresponding to the ERA
"RTN","RCDPEM3",121,0)
 ; BILLPTR - pointer to Bill corresponding to the ERA
"RTN","RCDPEM3",122,0)
 ; STAPTR - IEN of the Station of the ERA
"RTN","RCDPEM3",123,0)
 S STNAM=""  ; initial value
"RTN","RCDPEM3",124,0)
 D
"RTN","RCDPEM3",125,0)
 .;^RCY(344.4,D0,1,D1,0)= (#.01) SEQUENCE # [1N] ^ (#.02) EOB DETAIL [2P:361.1]
"RTN","RCDPEM3",126,0)
 .S J=0 F  S J=$O(^RCY(344.4,ERAIEN,1,J)) Q:'J!(STNAM]"")  S M=^(J,0) D
"RTN","RCDPEM3",127,0)
 ..N J,Y  ; protect loop counter, Y used below 
"RTN","RCDPEM3",128,0)
 ..S ERAEOB=0,P=+$P(M,U,2) I P>0,$D(^IBM(361.1,P,0)) S Y=$G(^(0)),ERAEOB=P
"RTN","RCDPEM3",129,0)
 ..Q:'ERAEOB  ; pointer to ^IBM(361.1,0) = EXPLANATION OF BENEFITS^361.1
"RTN","RCDPEM3",130,0)
 ..S BILLPTR=$P(Y,U) Q:'(BILLPTR>0)
"RTN","RCDPEM3",131,0)
 ..; ^DGCR(399,0) = BILL/CLAIMS^399
"RTN","RCDPEM3",132,0)
 ..S STAPTR=$P($G(^DGCR(399,BILLPTR,0)),U,22) Q:'(STAPTR>0)
"RTN","RCDPEM3",133,0)
 ..; ^DG(40.8,0) = MEDICAL CENTER DIVISION^40.8
"RTN","RCDPEM3",134,0)
 ..S STNAM=$$GET1^DIQ(40.8,STAPTR_",",.01,"","","RCDIERR")  ; 40.8,.01 = NAME
"RTN","RCDPEM3",135,0)
 ..Q:STNAM=""
"RTN","RCDPEM3",136,0)
 ..S STANMBR=$P(^DG(40.8,STAPTR,0),U,2)  ; IA 417
"RTN","RCDPEM3",137,0)
 ;
"RTN","RCDPEM3",138,0)
 S:STNAM="" STNAM="STATION UNKNOWN",STANMBR="000"
"RTN","RCDPEM3",139,0)
 Q STNAM_"^"_STANMBR
"RTN","RCDPEM3",140,0)
 ;
"RTN","RCDPEM3",141,0)
REPRT ; Generate the report ^TMP array
"RTN","RCDPEM3",142,0)
 ; INPUT:
"RTN","RCDPEM3",143,0)
 ;   RCSSD
"RTN","RCDPEM3",144,0)
 ;   RCDTRNG
"RTN","RCDPEM3",145,0)
 N DTXREF,START,END,ERAIEN,X,DTERA,ZROND
"RTN","RCDPEM3",146,0)
 ; DTXREF - date from cross-reference, "AC" is ERA DATE (#.04), "AD" is REMOVED DATE (#.17)
"RTN","RCDPEM3",147,0)
 ; DTERA - Date ERA received
"RTN","RCDPEM3",148,0)
 ; START - Start date of report date range
"RTN","RCDPEM3",149,0)
 ; END - End date of report date range
"RTN","RCDPEM3",150,0)
 ; ERAIEN - IEN of ERA
"RTN","RCDPEM3",151,0)
 ; RCSSD  - Start date (W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates)
"RTN","RCDPEM3",152,0)
 ; ZROND - node zero of entry in file #344.4
"RTN","RCDPEM3",153,0)
 ;
"RTN","RCDPEM3",154,0)
 ; ^RCY(344.4,D0,6)= (#.16) REMOVED BY [1P:200] ^ (#.17) REMOVED DATE [2D] ^ (#.18) REMOVE REASON [3F] ^
"RTN","RCDPEM3",155,0)
 ;
"RTN","RCDPEM3",156,0)
 K ^TMP($J,"RC REMV ERA"),^TMP($J,"RC TOTAL")
"RTN","RCDPEM3",157,0)
 ; If user picked W:Date Removed from Worklist or B:Both Dates, use x-ref "AD" (REMOVED DATE)
"RTN","RCDPEM3",158,0)
 I (RCSSD="W")!(RCSSD="B") D
"RTN","RCDPEM3",159,0)
 .S END=$P(RCDTRNG,U,3),START=$P(RCDTRNG,U,2),DTXREF=START-.0000001
"RTN","RCDPEM3",160,0)
 .F  S DTXREF=$O(^RCY(344.4,"AD",DTXREF)) Q:'DTXREF!(DTXREF\1>END)  D
"RTN","RCDPEM3",161,0)
 ..S ERAIEN=0
"RTN","RCDPEM3",162,0)
 ..F  S ERAIEN=$O(^RCY(344.4,"AD",DTXREF,ERAIEN)) Q:'ERAIEN  I $D(^RCY(344.4,ERAIEN,6)) S ZROND=$G(^(0)) D:ZROND]""
"RTN","RCDPEM3",163,0)
 ...; CHAMPVA check
"RTN","RCDPEM3",164,0)
 ...I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM3",165,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM3",166,0)
 ...;
"RTN","RCDPEM3",167,0)
 ...; TRICARE check
"RTN","RCDPEM3",168,0)
 ...I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM3",169,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM3",170,0)
 ...;
"RTN","RCDPEM3",171,0)
 ...D PROC(ERAIEN)
"RTN","RCDPEM3",172,0)
 ;
"RTN","RCDPEM3",173,0)
 ; If user picked R:Date ERA Received or B:Both Dates, use x-ref "AC" (ERA DATE)
"RTN","RCDPEM3",174,0)
 I (RCSSD="R")!(RCSSD="B") D
"RTN","RCDPEM3",175,0)
 .S END=$P(RCDTRNG,U,3),START=$P(RCDTRNG,U,2),DTXREF=START-.0000001
"RTN","RCDPEM3",176,0)
 .F  S DTXREF=$O(^RCY(344.4,"AC",DTXREF)) Q:'DTXREF!(DTXREF\1>END)  D
"RTN","RCDPEM3",177,0)
 ..S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AC",DTXREF,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM3",178,0)
 ...Q:'$D(^RCY(344.4,ERAIEN,6))  S ZROND=$G(^(0)) Q:ZROND=""
"RTN","RCDPEM3",179,0)
 ...Q:$D(^TMP($J,"RC REMV ERA",$P(ZROND,U)))  ; data is in ^TMP
"RTN","RCDPEM3",180,0)
 ...; CHAMPVA check
"RTN","RCDPEM3",181,0)
 ...I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM3",182,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM3",183,0)
 ...;
"RTN","RCDPEM3",184,0)
 ...; TRICARE check
"RTN","RCDPEM3",185,0)
 ...I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM3",186,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM3",187,0)
 ...;
"RTN","RCDPEM3",188,0)
 ...S DTERA=$P(ZROND,U,4) Q:'DTERA  D PROC(ERAIEN)
"RTN","RCDPEM3",189,0)
 ;
"RTN","RCDPEM3",190,0)
 Q
"RTN","RCDPEM3",191,0)
 ;
"RTN","RCDPEM3",192,0)
DISP(RCDISPTY) ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM3",193,0)
 ; RCDISPTY -  Display/print/Excel flag
"RTN","RCDPEM3",194,0)
 ; LOCAL VARIABLES: IEN - line number of the data in ^TMP (see above)
"RTN","RCDPEM3",195,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPEM3",196,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEM3",197,0)
 N A,IEN,LEN,RCNAM,Y
"RTN","RCDPEM3",198,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM3",199,0)
 S IEN=0
"RTN","RCDPEM3",200,0)
 ; PRCA*4.5*276 - Modify Display
"RTN","RCDPEM3",201,0)
 F  S IEN=$O(^TMP($J,"RC REMV ERA",IEN)) Q:'IEN!RCSTOP  S Y=^(IEN) D
"RTN","RCDPEM3",202,0)
 .I RCDISPTY W !,Y Q  ; Excel format
"RTN","RCDPEM3",203,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM3",204,0)
 .S A=$$PAD^RCDPEARL($P(Y,U,3),15)_$P(Y,U,2) D SL^RCDPEARL(A,.RCLNCNT,RCTMPND) ; ERA & Payer
"RTN","RCDPEM3",205,0)
 .S A=$$PAD^RCDPEARL($J("",5)_$P(Y,U,4),29)  ;  date ERA received
"RTN","RCDPEM3",206,0)
 .S A=$$PAD^RCDPEARL(A_$P(Y,U,5),46)  ; Date/Time Removed
"RTN","RCDPEM3",207,0)
 .S RCNAM=$P(Y,U,7) ; User who removed
"RTN","RCDPEM3",208,0)
 .; add ERA amount and user who removed
"RTN","RCDPEM3",209,0)
 .S A=$$PAD^RCDPEARL(A_"$"_$P(Y,U,6),58)_$E(RCNAM,1,19)  ; limit name to 19 chars.
"RTN","RCDPEM3",210,0)
 .D SL^RCDPEARL(A,.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",211,0)
 .D WP($P(Y,U,8))  ; reason removed
"RTN","RCDPEM3",212,0)
 ;
"RTN","RCDPEM3",213,0)
 Q:RCSTOP
"RTN","RCDPEM3",214,0)
 ; end of report
"RTN","RCDPEM3",215,0)
 D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM3",216,0)
 D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",217,0)
 ;
"RTN","RCDPEM3",218,0)
 Q
"RTN","RCDPEM3",219,0)
 ;
"RTN","RCDPEM3",220,0)
PROC(ERAIEN) ;  Put data into ^TMP based on filters
"RTN","RCDPEM3",221,0)
 ; ERAIEN  - ien of the ERA
"RTN","RCDPEM3",222,0)
 N ERAEOB,DTERA,DTRTN,RMVRSN,TRACE,AMT,PAYER,USER,Y,DEPTCKT,ERA,RCLOCDV,RCNTRY,P
"RTN","RCDPEM3",223,0)
 ; ERAEOB - EOB corresponding to this ERA
"RTN","RCDPEM3",224,0)
 ; RCDIV  - Name of station
"RTN","RCDPEM3",225,0)
 ; STANMBR  - Station number
"RTN","RCDPEM3",226,0)
 ; DTERA  - Date of ERA
"RTN","RCDPEM3",227,0)
 ; DTRTN  - Date ERA removed from worklist
"RTN","RCDPEM3",228,0)
 ; RMVRSN   - Justification for removal of ERA
"RTN","RCDPEM3",229,0)
 ; TRACE  - Trace number of the ERA
"RTN","RCDPEM3",230,0)
 ; AMT    - Total amount of the ERA
"RTN","RCDPEM3",231,0)
 ; PAYER  - ERA payer
"RTN","RCDPEM3",232,0)
 ; USER   - User who completed the removal of the ERA from the worklist
"RTN","RCDPEM3",233,0)
 ; DEPTCKT   - deposit ticket
"RTN","RCDPEM3",234,0)
 ; RCNTRY - entry from ^RCY(344.4,ien)
"RTN","RCDPEM3",235,0)
 ;
"RTN","RCDPEM3",236,0)
 S Y=$$ERASTA(ERAIEN)  ; station name and number
"RTN","RCDPEM3",237,0)
 S RCSTA=$P(Y,U),RCSTNO=$P(Y,U,2)
"RTN","RCDPEM3",238,0)
 ; PRCA*4.5*276 - Modify Display
"RTN","RCDPEM3",239,0)
 I 'VAUTD Q:RCDIV'[RCSTA
"RTN","RCDPEM3",240,0)
 M RCNTRY=^RCY(344.4,ERAIEN)
"RTN","RCDPEM3",241,0)
 S ERAEOB=$P($G(RCNTRY(1,1,0)),U,2)
"RTN","RCDPEM3",242,0)
 S Y=$P(RCNTRY(0),U,4),DTERA=$$FMTE^XLFDT(Y,"2D")
"RTN","RCDPEM3",243,0)
 S ERA=$P(RCNTRY(0),U)  ; (#.01) ENTRY [1N] 
"RTN","RCDPEM3",244,0)
 S TRACE=$P(RCNTRY(0),U,2)
"RTN","RCDPEM3",245,0)
 S AMT=$P(RCNTRY(0),U,5)
"RTN","RCDPEM3",246,0)
 S Y=$P(RCNTRY(6),U,2),DTRTN=$$FMTE^XLFDT(Y,2)  ; (#.17) REMOVED DATE [2D]
"RTN","RCDPEM3",247,0)
 S RMVRSN=$P(RCNTRY(6),U,3)  ; (#.18) REMOVE REASON [3F] 
"RTN","RCDPEM3",248,0)
 ; user's name for report
"RTN","RCDPEM3",249,0)
 S USER="",Y=+$P(RCNTRY(6),U) S:Y>0 USER=$$NAME^XUSER(Y,"F")
"RTN","RCDPEM3",250,0)
 S PAYER=""
"RTN","RCDPEM3",251,0)
 ; get PAYER if available
"RTN","RCDPEM3",252,0)
 I ERAEOB S P=+$P($G(^IBM(361.1,ERAEOB,0)),U,2) S:P>0 PAYER=$$GET1^DIQ(36,P_",",.01,"","","RCDIERR")
"RTN","RCDPEM3",253,0)
 S:PAYER="" PAYER="PAYER UNKNOWN"
"RTN","RCDPEM3",254,0)
 ; get Deposit Ticket
"RTN","RCDPEM3",255,0)
 ;S DEPTCKT="UNKNOWN" D
"RTN","RCDPEM3",256,0)
 ;.S Y=+$P(RCNTRY(0),U,8) Q:'Y  ; (#.08) RECEIPT [8P:344]
"RTN","RCDPEM3",257,0)
 ;.S Y=$P($G(^RCY(344,Y,0)),U,6) Q:'Y  ; file #344,(#.06) DEPOSIT TICKET [6P:344.1]
"RTN","RCDPEM3",258,0)
 ;.S DEPTCKT=$P($G(^RCY(344.1,DEPTCKT,0)),U)  ; file #344.1, (#.01) TICKET # [1F] 
"RTN","RCDPEM3",259,0)
 ;
"RTN","RCDPEM3",260,0)
 ; PRCA*4.5*276 - Remove Trace# from Excel
"RTN","RCDPEM3",261,0)
 S ^TMP($J,"RC REMV ERA",ERA)=RCSTA_U_PAYER_U_ERA_U_DTRTN_U_DTERA_U_AMT_U_USER_U_RMVRSN
"RTN","RCDPEM3",262,0)
 Q
"RTN","RCDPEM3",263,0)
 ;
"RTN","RCDPEM3",264,0)
 ;
"RTN","RCDPEM3",265,0)
HDRBLD ; create the report header
"RTN","RCDPEM3",266,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM3",267,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM3",268,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM3",269,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM3",270,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM3",271,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM3",272,0)
 ; INPUT:
"RTN","RCDPEM3",273,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM3",274,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM3",275,0)
 ;   RCXCLUDE - TRICARE /CHAMPVA flags
"RTN","RCDPEM3",276,0)
 ;
"RTN","RCDPEM3",277,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM3",278,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM3",279,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM3",280,0)
 .S RCHDR(1)="STATION NAME^PAYER^ERA NUMBER^DATE REMOVED^DATE RECEIVED^AMOUNT^USER^REMOVED REASON"
"RTN","RCDPEM3",281,0)
 ;
"RTN","RCDPEM3",282,0)
 N DIV,HCNT,Y
"RTN","RCDPEM3",283,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM3",284,0)
 ;
"RTN","RCDPEM3",285,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM3",286,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEM3",287,0)
 S Y="Run Date/Time: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM3",288,0)
 ;
"RTN","RCDPEM3",289,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",290,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM3",291,0)
 S Y="Date Range: "_Y("1ST")_" - "_Y("LST")
"RTN","RCDPEM3",292,0)
 S Y=Y_" ("_$S(RCSSD="B":"Received & Removed",RCSSD="W":"Date Removed from Worklist",1:"Date ERA Received")_")"
"RTN","RCDPEM3",293,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM3",294,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM3",295,0)
 S Y="DIVISIONS: "_RCDIV,Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",296,0)
 S Y=" " F J="CHAMPVA","TRICARE" S Y=Y_" "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_" "
"RTN","RCDPEM3",297,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM3",298,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM3",299,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="ERA#           Payer Name"
"RTN","RCDPEM3",300,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Date/Time               Date ERA         Total Amt   User Who"
"RTN","RCDPEM3",301,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Removed                 Received         Paid        Removed"
"RTN","RCDPEM3",302,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPEM3",303,0)
 ;
"RTN","RCDPEM3",304,0)
 S RCHDR(0)=HCNT  ; line count for header
"RTN","RCDPEM3",305,0)
 ;
"RTN","RCDPEM3",306,0)
 Q
"RTN","RCDPEM3",307,0)
 ;
"RTN","RCDPEM3",308,0)
HDRLM ; create the Listman header
"RTN","RCDPEM3",309,0)
 ; returns RCHDR
"RTN","RCDPEM3",310,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM3",311,0)
 ; INPUT:
"RTN","RCDPEM3",312,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM3",313,0)
 ;   RCXCLUDE - TRICARE /CHAMPVA flags
"RTN","RCDPEM3",314,0)
 ;
"RTN","RCDPEM3",315,0)
 N DIV,HCNT,Y
"RTN","RCDPEM3",316,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM3",317,0)
 ;
"RTN","RCDPEM3",318,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",319,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM3",320,0)
 S Y="Date Range: "_Y("1ST")_" - "_Y("LST")
"RTN","RCDPEM3",321,0)
 S Y=Y_" ("_$S(RCSSD="B":"Received & Removed",RCSSD="W":"Date Removed from Worklist",1:"Date ERA Received")_")"
"RTN","RCDPEM3",322,0)
 S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",323,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM3",324,0)
 S Y="DIVISIONS: "_RCDIV,Y=Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",325,0)
 S Y="" F J="CHAMPVA","TRICARE" S Y=Y_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"       "
"RTN","RCDPEM3",326,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",327,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM3",328,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="ERA#           Payer Name"
"RTN","RCDPEM3",329,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Date/Time               Date ERA         Total Amt   User Who"
"RTN","RCDPEM3",330,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Removed                 Received         Paid        Removed"
"RTN","RCDPEM3",331,0)
 ;
"RTN","RCDPEM3",332,0)
 S RCHDR(0)=HCNT  ; line count for header
"RTN","RCDPEM3",333,0)
 ;
"RTN","RCDPEM3",334,0)
 Q
"RTN","RCDPEM3",335,0)
 ; extrinsic var, name for header PRCA*4.5*298
"RTN","RCDPEM3",336,0)
HDRNM() Q "ERAs Removed from Active Worklist - Audit Report"
"RTN","RCDPEM3",337,0)
 ;
"RTN","RCDPEM3",338,0)
EXIT ;
"RTN","RCDPEM3",339,0)
 D ^%ZISC
"RTN","RCDPEM3",340,0)
 K ^TMP($J,"RC REMV ERA"),^TMP($J,"RC TOTAL")
"RTN","RCDPEM3",341,0)
 Q
"RTN","RCDPEM3",342,0)
 ;
"RTN","RCDPEM3",343,0)
WP(RR) ; format Removed Reason comments
"RTN","RCDPEM3",344,0)
 ; RR - Removed Reason
"RTN","RCDPEM3",345,0)
 I RR="" Q
"RTN","RCDPEM3",346,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM3",347,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM3",348,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM3",349,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM3",350,0)
 S PCS=$L(RR," "),CNTR=1,CMNT(CNTR)=" Removed Reason: "
"RTN","RCDPEM3",351,0)
 F I=1:1:PCS D
"RTN","RCDPEM3",352,0)
 .S Y=$P(RR," ",I)
"RTN","RCDPEM3",353,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",17)
"RTN","RCDPEM3",354,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM3",355,0)
 ;
"RTN","RCDPEM3",356,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",357,0)
 Q
"RTN","RCDPEM3",358,0)
 ;
"RTN","RCDPEM3",359,0)
RETN ; Entry point for Remove Duplicate EFT Deposits [RCDPE REMOVE DUP DEPOSITS]
"RTN","RCDPEM3",360,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,MSG,RCERANUM,RCY,X,Y
"RTN","RCDPEM3",361,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE REMOVE DUPLICATES",DUZ)
"RTN","RCDPEM3",362,0)
 I 'MSG(0) W !,"You are not authorized to use this option.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM3",363,0)
 W !!,"          WARNING: Removing an EFT is **NOT** reversible."
"RTN","RCDPEM3",364,0)
 W !,"  Use this option only if you are sure you want to remove this EFT."
"RTN","RCDPEM3",365,0)
 W !," Please be aware that once an EFT is removed - it cannot be restored.",!!
"RTN","RCDPEM3",366,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEM3",367,0)
 S DIR("A")="Are you sure you want to continue? "
"RTN","RCDPEM3",368,0)
 D ^DIR K DIR
"RTN","RCDPEM3",369,0)
 I $D(DUOUT)!$D(DTOUT)!'Y Q
"RTN","RCDPEM3",370,0)
 ; EDI THIRD PARTY EFT DETAIL (#344.31)
"RTN","RCDPEM3",371,0)
 S DIC="^RCY(344.31,"
"RTN","RCDPEM3",372,0)
 ; screening logic for field #.08 MATCH STATUS [8S], must be UNMATCHED
"RTN","RCDPEM3",373,0)
 S DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,8)"
"RTN","RCDPEM3",374,0)
 D ^DIC S RCY=+Y
"RTN","RCDPEM3",375,0)
 Q:RCY<0
"RTN","RCDPEM3",376,0)
 S RCERANUM=$P(Y(0),U) ; Get EFT number from returned zero node
"RTN","RCDPEM3",377,0)
 K DIR S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEM3",378,0)
 S DIR("A",1)="This will mark EFT # "_RCERANUM_" as removed."
"RTN","RCDPEM3",379,0)
 S DIR("A")="Are you sure you want to continue? "
"RTN","RCDPEM3",380,0)
 W !
"RTN","RCDPEM3",381,0)
 D ^DIR K DIR
"RTN","RCDPEM3",382,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM3",383,0)
 S DIE="^RCY(344.31,",DA=RCY,DR=".19" D ^DIE
"RTN","RCDPEM3",384,0)
 I $D(Y) D NOCHNG Q  ; user aborted edit
"RTN","RCDPEM3",385,0)
 ;
"RTN","RCDPEM3",386,0)
 ; 344.31,.08 - MATCH STATUS
"RTN","RCDPEM3",387,0)
 ; 344.31,.17 - USER WHO REMOVED EFT 
"RTN","RCDPEM3",388,0)
 ; 344.31,.18 - DATE/TIME DUPLICATE REMOVED
"RTN","RCDPEM3",389,0)
 S DR=".08////1;.17////"_DUZ_";.18////"_$$NOW^XLFDT D ^DIE
"RTN","RCDPEM3",390,0)
 W !!
"RTN","RCDPEM3",391,0)
 K DIR S DIR(0)="EA"
"RTN","RCDPEM3",392,0)
 S DIR("A")="Press return to continue: "
"RTN","RCDPEM3",393,0)
 S DIR("A",1)="EFT # "_RCERANUM_" has been marked as removed."
"RTN","RCDPEM3",394,0)
 D ^DIR
"RTN","RCDPEM3",395,0)
 Q
"RTN","RCDPEM3",396,0)
 ;
"RTN","RCDPEM3",397,0)
NOCHNG ;
"RTN","RCDPEM3",398,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM3",399,0)
 S DIR(0)="EA"
"RTN","RCDPEM3",400,0)
 S DIR("A")="Press return to continue: "
"RTN","RCDPEM3",401,0)
 S DIR("A",1)="*** This EFT was NOT removed. ***"
"RTN","RCDPEM3",402,0)
 W !! D ^DIR
"RTN","RCDPEM3",403,0)
 Q
"RTN","RCDPEM3",404,0)
 ;
"RTN","RCDPEM4")
0^45^B226302840
"RTN","RCDPEM4",1,0)
RCDPEM4 ;OIFO-BAYPINES/PJH - EPAYMENTS AUDIT REPORTS ;Nov 17, 2014@17:00:41
"RTN","RCDPEM4",2,0)
 ;;4.5;Accounts Receivable;**276,284,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM4",4,0)
 ;
"RTN","RCDPEM4",5,0)
EOB ; EEOB Move/Copy/Rmove Audit Report [RCDPE EEOB MOVE/COPY/RMOVE RPT]
"RTN","RCDPEM4",6,0)
 N RCRTYP S RCRTYP="EOB"  ; record type
"RTN","RCDPEM4",7,0)
 D ASKUSR
"RTN","RCDPEM4",8,0)
 Q
"RTN","RCDPEM4",9,0)
 ;
"RTN","RCDPEM4",10,0)
POST ; ERAs Posted with Paper EOB Audit Report [RCDPE ERA W/PAPER EOB REPORT]
"RTN","RCDPEM4",11,0)
 N RCRTYP S RCRTYP="ERA"  ; record type
"RTN","RCDPEM4",12,0)
 D ASKUSR
"RTN","RCDPEM4",13,0)
 Q
"RTN","RCDPEM4",14,0)
 ;
"RTN","RCDPEM4",15,0)
ASKUSR ;collect filter and device options
"RTN","RCDPEM4",16,0)
 Q:$G(RCRTYP)=""  ; must have record type
"RTN","RCDPEM4",17,0)
 N %ZIS,POP,RCACT,RCDISPTY,RCDIV,RCDTRNG,RCHDR,RCLSTMGR,RCLNCNT,RCPGNUM,RCPROG,RCSTA,RCSTOP,RCTMPND,RCXCLUDE,VAUTD,X,Y
"RTN","RCDPEM4",18,0)
 ; RCACT - selected actions for EOB
"RTN","RCDPEM4",19,0)
 ; RCDISPTY - display type
"RTN","RCDPEM4",20,0)
 ; RCDIV - selected divs.
"RTN","RCDPEM4",21,0)
 ; RCDTRNG - date range for report
"RTN","RCDPEM4",22,0)
 ; RCHDR - header array
"RTN","RCDPEM4",23,0)
 ; RCLSTMGR - ListMan output flag
"RTN","RCDPEM4",24,0)
 ; RCPGNUM - report page count
"RTN","RCDPEM4",25,0)
 ; RCPROG - ^TMP storage node for entries
"RTN","RCDPEM4",26,0)
 ; RCSTA - station
"RTN","RCDPEM4",27,0)
 ; RCSTOP - flag to stop report
"RTN","RCDPEM4",28,0)
 ; RCTMPND - ListMan storage node
"RTN","RCDPEM4",29,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEM4",30,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEM4",31,0)
 ;
"RTN","RCDPEM4",32,0)
 S RCPROG=$T(+0),RCLSTMGR="",RCACT="",(RCLNCNT,RCSTOP)=0,RCTMPND=""
"RTN","RCDPEM4",33,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM4",34,0)
 ;Select Date Range for Report
"RTN","RCDPEM4",35,0)
 S RCDTRNG=$$DTRNG() G:'RCDTRNG EXIT
"RTN","RCDPEM4",36,0)
 ;Select Filter for Action Type (Move,Copy,Remove or All)
"RTN","RCDPEM4",37,0)
 I RCRTYP="EOB" S RCACT=$$ACTION G:RCACT<0 EXIT
"RTN","RCDPEM4",38,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEM4",39,0)
 D STADIV G:'RCDIV EXIT
"RTN","RCDPEM4",40,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEM4",41,0)
 S RCXCLUDE("CHAMPVA")=$$INCHMPVA^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM4",42,0)
 G:RCXCLUDE("CHAMPVA")<0 EXIT
"RTN","RCDPEM4",43,0)
 ; TRICARE exclusion filter
"RTN","RCDPEM4",44,0)
 S RCXCLUDE("TRICARE")=$$INTRICAR^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM4",45,0)
 G:RCXCLUDE("TRICARE")<0 EXIT
"RTN","RCDPEM4",46,0)
 ; Select Display Type , exit if indicated
"RTN","RCDPEM4",47,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM4",48,0)
 ;Display capture information for Excel, set RCLSTMGR to prevent question
"RTN","RCDPEM4",49,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM4",50,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM4",51,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM4",52,0)
 .X "S RCTMPND=$T(+0)_U_$$HDR"_RCRTYP K ^TMP($J,RCTMPND)  ; ^TMP storage node, clean any residue
"RTN","RCDPEM4",53,0)
 .D RPRTCMPL
"RTN","RCDPEM4",54,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM4",55,0)
 .X "S HDR(""TITLE"")=$$HDR"_RCRTYP
"RTN","RCDPEM4",56,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM4",57,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM4",58,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM4",59,0)
 .; invoke ListMan
"RTN","RCDPEM4",60,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM4",61,0)
 ;
"RTN","RCDPEM4",62,0)
 ;Select output device
"RTN","RCDPEM4",63,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM4",64,0)
 ;Option to queue
"RTN","RCDPEM4",65,0)
 I 'RCDISPTY,$D(IO("Q")) D  Q
"RTN","RCDPEM4",66,0)
 .N ZTSK,ZTDESC,ZTSAVE,ZTQUEUED,ZTRTN
"RTN","RCDPEM4",67,0)
 .S ZTRTN="RPRTCMPL^RCDPEM4"
"RTN","RCDPEM4",68,0)
 .S ZTDESC="EDI LOCKBOX PAPER EOB AUDIT REPORT"
"RTN","RCDPEM4",69,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM4",70,0)
 .D ^%ZTLOAD
"RTN","RCDPEM4",71,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task."),!
"RTN","RCDPEM4",72,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEM4",73,0)
 ;
"RTN","RCDPEM4",74,0)
 ;Compile and Print Report
"RTN","RCDPEM4",75,0)
 D RPRTCMPL
"RTN","RCDPEM4",76,0)
 Q
"RTN","RCDPEM4",77,0)
 ;
"RTN","RCDPEM4",78,0)
RPRTCMPL ;Compile and print report
"RTN","RCDPEM4",79,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",80,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEM4",81,0)
 I RCRTYP="ERA" D CMPLERA
"RTN","RCDPEM4",82,0)
 ;Scan EOB file for entries in date range
"RTN","RCDPEM4",83,0)
 I RCRTYP="EOB" D CMPLEOB
"RTN","RCDPEM4",84,0)
 ;Display Report
"RTN","RCDPEM4",85,0)
 D DISP
"RTN","RCDPEM4",86,0)
 ;
"RTN","RCDPEM4",87,0)
EXIT ;
"RTN","RCDPEM4",88,0)
 ;Clear old data
"RTN","RCDPEM4",89,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",90,0)
 Q
"RTN","RCDPEM4",91,0)
 ;
"RTN","RCDPEM4",92,0)
CMPLERA ;Generate the ERA posted with paper EOB report ^TMP array
"RTN","RCDPEM4",93,0)
 ; ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I^
"RTN","RCDPEM4",94,0)
 N START,END,ERAIEN,STA,STNAM,STNUM
"RTN","RCDPEM4",95,0)
 ;Date Range
"RTN","RCDPEM4",96,0)
 S START=0,END="9999999",SUB=0
"RTN","RCDPEM4",97,0)
 S:$P(RCDTRNG,U) START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",98,0)
 ;Selected division or All
"RTN","RCDPEM4",99,0)
 ;Scan AFL index for ERA within date range
"RTN","RCDPEM4",100,0)
 F  S START=$O(^RCY(344.4,"AFL",START)) Q:'START  Q:START>END  D
"RTN","RCDPEM4",101,0)
 .S ERAIEN=""
"RTN","RCDPEM4",102,0)
 .F  S ERAIEN=$O(^RCY(344.4,"AFL",START,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM4",103,0)
 ..;Ignore if not posted with paper EOB
"RTN","RCDPEM4",104,0)
 ..Q:'$D(^RCY(344.4,ERAIEN,7))
"RTN","RCDPEM4",105,0)
 ..;Check division
"RTN","RCDPEM4",106,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",107,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",108,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",109,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",110,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",111,0)
 ..;
"RTN","RCDPEM4",112,0)
 ..; TRICARE check
"RTN","RCDPEM4",113,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",114,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",115,0)
 ..;
"RTN","RCDPEM4",116,0)
 ..D SVERA^RCDPEM41(ERAIEN,STA,STNUM,STNAM)
"RTN","RCDPEM4",117,0)
 ;
"RTN","RCDPEM4",118,0)
 Q
"RTN","RCDPEM4",119,0)
 ;
"RTN","RCDPEM4",120,0)
CMPLEOB ;Generate the EOB Moved/Copy/Remove report ^TMP array
"RTN","RCDPEM4",121,0)
 N DTSUB,START,END,EOBIEN,IEN101,STA,STNAM,STNUM
"RTN","RCDPEM4",122,0)
 ;Date Range
"RTN","RCDPEM4",123,0)
 S START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",124,0)
 ;Selected division or All
"RTN","RCDPEM4",125,0)
 ;Scan AEOB index for EOB within date range
"RTN","RCDPEM4",126,0)
 F  S START=$O(^IBM(361.1,"AEOB",START)) Q:'START  Q:(START\1)>END  D
"RTN","RCDPEM4",127,0)
 .S EOBIEN=""
"RTN","RCDPEM4",128,0)
 .F  S EOBIEN=$O(^IBM(361.1,"AEOB",START,EOBIEN)) Q:'EOBIEN  D
"RTN","RCDPEM4",129,0)
 ..; Ignore if not MOVED/COPIED
"RTN","RCDPEM4",130,0)
 ..S IEN101=$O(^IBM(361.1,"AEOB",START,EOBIEN,"")) Q:'IEN101
"RTN","RCDPEM4",131,0)
 ..; Check division
"RTN","RCDPEM4",132,0)
 ..D EOBSTA(EOBIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",133,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",134,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",135,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",136,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",137,0)
 ..; TRICARE check
"RTN","RCDPEM4",138,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",139,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",140,0)
 ..;
"RTN","RCDPEM4",141,0)
 ..;
"RTN","RCDPEM4",142,0)
 ..D SVEOB^RCDPEM41(EOBIEN,IEN101,STA,STNUM,STNAM)
"RTN","RCDPEM4",143,0)
 ;
"RTN","RCDPEM4",144,0)
 Q
"RTN","RCDPEM4",145,0)
 ;
"RTN","RCDPEM4",146,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM4",147,0)
 N DVFLTR,IEN,RCNTRY,SUB,Y
"RTN","RCDPEM4",148,0)
 ;Format Division Filter
"RTN","RCDPEM4",149,0)
 S DVFLTR=$S(RCRTYP="EOB":"ALL STATIONS/DIVISIONS",1:"ALL") I RCDIV=2 S DVFLTR=$$LINE(.VAUTD)
"RTN","RCDPEM4",150,0)
 D:'RCLSTMGR HDRBLD  ; Report header
"RTN","RCDPEM4",151,0)
 D:RCLSTMGR HDRLM  ; Listman header
"RTN","RCDPEM4",152,0)
 ; RCNTRY - entry from ^TMP(RCPROG,$J)
"RTN","RCDPEM4",153,0)
 ;
"RTN","RCDPEM4",154,0)
 U IO
"RTN","RCDPEM4",155,0)
 ;
"RTN","RCDPEM4",156,0)
 ; Display Header for first time
"RTN","RCDPEM4",157,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM4",158,0)
 ;Report by division or 'ALL'
"RTN","RCDPEM4",159,0)
 S SUB=0,RCSTOP=0
"RTN","RCDPEM4",160,0)
 F  S SUB=$O(^TMP(RCPROG,$J,SUB)) Q:SUB=""!RCSTOP  D
"RTN","RCDPEM4",161,0)
 .S IEN=0 F  S IEN=$O(^TMP(RCPROG,$J,SUB,IEN)) Q:'IEN!RCSTOP  S RCNTRY=^(IEN) D
"RTN","RCDPEM4",162,0)
 ..I RCDISPTY W !,RCNTRY Q  ; spreadsheet format
"RTN","RCDPEM4",163,0)
 ..I RCRTYP="ERA" D  ; ERA posted with paper EOB
"RTN","RCDPEM4",164,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",165,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),11)  ; ERA#
"RTN","RCDPEM4",166,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,6),12) ;RECEIPT#
"RTN","RCDPEM4",167,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),18) ;DATE/TIME
"RTN","RCDPEM4",168,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,4),16) ;USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",169,0)
 ...S Y=Y_$P(RCNTRY,U,7) ;MATCH STATUS
"RTN","RCDPEM4",170,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",171,0)
 ...D SL^RCDPEARL($J("",61)_$P(RCNTRY,U,8),.RCLNCNT,RCTMPND) ;POST STATUS
"RTN","RCDPEM4",172,0)
 ..;
"RTN","RCDPEM4",173,0)
 ..I RCRTYP="EOB" D  ; EOB Moved/Copied
"RTN","RCDPEM4",174,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",175,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),20) ; ORIGINAL BILL
"RTN","RCDPEM4",176,0)
 ...S Y=Y_$P(RCNTRY,U,8) ; TRACE #
"RTN","RCDPEM4",177,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",178,0)
 ...S Y=$$PAD^RCDPEARL($J("",6)_$P(RCNTRY,U,7),15) ;ERA
"RTN","RCDPEM4",179,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),20) ;DATE/TIME
"RTN","RCDPEM4",180,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,12),15) ;MOVED/COPIED/REMOVED
"RTN","RCDPEM4",181,0)
 ...S Y=Y_$$PAD^RCDPEARL("$"_$P(RCNTRY,U,9),11) ;PAYMENT AMOUNT
"RTN","RCDPEM4",182,0)
 ...S Y=Y_$P(RCNTRY,U,4) ; USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",183,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",184,0)
 ...D:$P(RCNTRY,U,12)'="REMOVED"
"RTN","RCDPEM4",185,0)
 ....S Y=$$PAD^RCDPEARL("New Bill: "_$P(RCNTRY,U,6),25) ;NEW BILL
"RTN","RCDPEM4",186,0)
 ....S Y=Y_"Other Bill Number(s): "_$P(RCNTRY,U,11) ;OTHER BILLS
"RTN","RCDPEM4",187,0)
 ....D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",188,0)
 ...;
"RTN","RCDPEM4",189,0)
 ...D WP($P(RCNTRY,U,10))  ; Justification comments
"RTN","RCDPEM4",190,0)
 ...D SL^RCDPEARL("",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM4",191,0)
 .;
"RTN","RCDPEM4",192,0)
 .; end of report
"RTN","RCDPEM4",193,0)
 .I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",194,0)
 ;
"RTN","RCDPEM4",195,0)
 D:'$D(^TMP(RCPROG,$J))
"RTN","RCDPEM4",196,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip line
"RTN","RCDPEM4",197,0)
 .D SL^RCDPEARL("     *** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",198,0)
 ;
"RTN","RCDPEM4",199,0)
 ;Close device
"RTN","RCDPEM4",200,0)
 I '$D(ZTQUEUED),'RCLSTMGR D ^%ZISC
"RTN","RCDPEM4",201,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEM4",202,0)
 Q
"RTN","RCDPEM4",203,0)
 ;
"RTN","RCDPEM4",204,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEM4",205,0)
 N LINE,SUB
"RTN","RCDPEM4",206,0)
 S LINE="",SUB=""
"RTN","RCDPEM4",207,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",208,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEM4",209,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEM4",210,0)
 ;
"RTN","RCDPEM4",211,0)
SELDIV(VAUTD,Z) ;Devisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEM4",212,0)
 ; Input:
"RTN","RCDPEM4",213,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEM4",214,0)
 ; Output:
"RTN","RCDPEM4",215,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEM4",216,0)
 ;
"RTN","RCDPEM4",217,0)
 N SUB,CNT
"RTN","RCDPEM4",218,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEM4",219,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEM4",220,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEM4",221,0)
 .S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",222,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEM4",223,0)
 .S SUB=VAUTD
"RTN","RCDPEM4",224,0)
 .F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",225,0)
 ..I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEM4",226,0)
 ..S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEM4",227,0)
 ..I $L(Z(CNT))>50 S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT),CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEM4",228,0)
 ;
"RTN","RCDPEM4",229,0)
 I Z(CNT)]"" S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",230,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEM4",231,0)
 Q
"RTN","RCDPEM4",232,0)
 ;
"RTN","RCDPEM4",233,0)
HDRBLD ; create the report header
"RTN","RCDPEM4",234,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM4",235,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",236,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM4",237,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM4",238,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM4",239,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM4",240,0)
 ; INPUT: 
"RTN","RCDPEM4",241,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM4",242,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",243,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM4",244,0)
 ;   VAUTD
"RTN","RCDPEM4",245,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM4",246,0)
 ;
"RTN","RCDPEM4",247,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM4",248,0)
 .S RCHDR(0)=1,RCHDR(1)="^^^",RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM4",249,0)
 .S:RCRTYP="ERA" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ERA^RECEIPT^MATCH STATUS^POSTED STATUS"
"RTN","RCDPEM4",250,0)
 .S:RCRTYP="EOB" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ORIGINAL BILL^NEW BILL^ERA#^TRACE#^PAYMENT AMOUNT^JUSTIFICATION^OTHER BILLS^MOVED/COPIED"
"RTN","RCDPEM4",251,0)
 ;
"RTN","RCDPEM4",252,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",253,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",254,0)
 ;
"RTN","RCDPEM4",255,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",256,0)
 X "S Y=$$HDR"_RCRTYP S HCNT=1
"RTN","RCDPEM4",257,0)
 ;
"RTN","RCDPEM4",258,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",259,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",260,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",261,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",262,0)
 .S Y="DIVISIONS: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",263,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",264,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",265,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",266,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_" "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",267,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",268,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",269,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                       Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",270,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #   ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",271,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",272,0)
 ;
"RTN","RCDPEM4",273,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",274,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",275,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",276,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",277,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",278,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",279,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",280,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",281,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_"    "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",282,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",283,0)
 .S Y=" Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",284,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",285,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",286,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",287,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",288,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",289,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",290,0)
 ;
"RTN","RCDPEM4",291,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",292,0)
 S Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=$TR($J("",80)," ","=")
"RTN","RCDPEM4",293,0)
 Q
"RTN","RCDPEM4",294,0)
 ;
"RTN","RCDPEM4",295,0)
HDRLM ; create the Listman header
"RTN","RCDPEM4",296,0)
 ; returns RCHDR
"RTN","RCDPEM4",297,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",298,0)
 ; INPUT: 
"RTN","RCDPEM4",299,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",300,0)
 ;   VAUTD - Division  filter value(s)
"RTN","RCDPEM4",301,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",302,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",303,0)
 ;
"RTN","RCDPEM4",304,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",305,0)
 X "S Y=$$HDR"_RCRTYP
"RTN","RCDPEM4",306,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",307,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",308,0)
 .S HCNT=1,RCHDR(HCNT)=""
"RTN","RCDPEM4",309,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",310,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",311,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",312,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",313,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",314,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",315,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",316,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                       Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",317,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #   ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",318,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",319,0)
 ;
"RTN","RCDPEM4",320,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",321,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",322,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)_"     "
"RTN","RCDPEM4",323,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",324,0)
 .S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",325,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",326,0)
 .S HCNT=2,RCHDR(HCNT)=Y
"RTN","RCDPEM4",327,0)
 .S Y="Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",328,0)
 .S HCNT=3,RCHDR(HCNT)=Y
"RTN","RCDPEM4",329,0)
 .S HCNT=4,RCHDR(HCNT)=""
"RTN","RCDPEM4",330,0)
 .S HCNT=5,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",331,0)
 .S HCNT=6,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",332,0)
 .S HCNT=7,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",333,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",334,0)
 ;
"RTN","RCDPEM4",335,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",336,0)
 S:'RCLSTMGR Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=" "_$TR($J("",78)," ","=")
"RTN","RCDPEM4",337,0)
 Q
"RTN","RCDPEM4",338,0)
 ;
"RTN","RCDPEM4",339,0)
HDREOB() ; extrinsic variable, header for EOB report
"RTN","RCDPEM4",340,0)
 Q "EEOB Move/Copy/Remove - Audit Report"
"RTN","RCDPEM4",341,0)
 ;
"RTN","RCDPEM4",342,0)
HDRERA() ; extrinsic variable, header for ERA report
"RTN","RCDPEM4",343,0)
 Q "ERAs Posted with Paper EOB - Audit Report"
"RTN","RCDPEM4",344,0)
 ;
"RTN","RCDPEM4",345,0)
HDRXEC(TYP) ; create xecute code for header
"RTN","RCDPEM4",346,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDR"_TYP_"^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEM4",347,0)
 Q
"RTN","RCDPEM4",348,0)
 ;
"RTN","RCDPEM4",349,0)
DTRNG() ; function, return date range for a report
"RTN","RCDPEM4",350,0)
 N DIR,DUOUT,X,Y,RCSTART,RCEND
"RTN","RCDPEM4",351,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEM4",352,0)
 Q:RCSTART=-1 0
"RTN","RCDPEM4",353,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEM4",354,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEM4",355,0)
 Q 0
"RTN","RCDPEM4",356,0)
 ;
"RTN","RCDPEM4",357,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEM4",358,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEM4",359,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",360,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start date: " D ^DIR K DIR
"RTN","RCDPEM4",361,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",362,0)
 S BDATE=Y
"RTN","RCDPEM4",363,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",364,0)
 S DIR("B")=Y(0)
"RTN","RCDPEM4",365,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="  End date: " D ^DIR K DIR
"RTN","RCDPEM4",366,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",367,0)
 S EDATE=Y
"RTN","RCDPEM4",368,0)
 Q
"RTN","RCDPEM4",369,0)
 ;
"RTN","RCDPEM4",370,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEM4",371,0)
 ;
"RTN","RCDPEM4",372,0)
 ;Sort selection
"RTN","RCDPEM4",373,0)
 N DIR,DUOUT,Y
"RTN","RCDPEM4",374,0)
 S RCDIV=0
"RTN","RCDPEM4",375,0)
 ;
"RTN","RCDPEM4",376,0)
 ;Division selection - IA 664
"RTN","RCDPEM4",377,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEM4",378,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEM4",379,0)
 ;
"RTN","RCDPEM4",380,0)
 ;If ALL selected
"RTN","RCDPEM4",381,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEM4",382,0)
 ;If some DIVISIONS selected
"RTN","RCDPEM4",383,0)
 S RCDIV=2
"RTN","RCDPEM4",384,0)
 Q
"RTN","RCDPEM4",385,0)
 ;
"RTN","RCDPEM4",386,0)
ACTION() ; Get action type
"RTN","RCDPEM4",387,0)
 N DIR,X,Y,DIROUT,DUOUT
"RTN","RCDPEM4",388,0)
 S DIR("A")="Move/Copy/Remove or All (M/C/R/A): "
"RTN","RCDPEM4",389,0)
 S DIR("B")="All"  ; default to ALL
"RTN","RCDPEM4",390,0)
 S DIR(0)="SAB^M:Move;C:Copy;R:Remove;A:All"
"RTN","RCDPEM4",391,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT) -1
"RTN","RCDPEM4",392,0)
 ;
"RTN","RCDPEM4",393,0)
 Q Y
"RTN","RCDPEM4",394,0)
 ;
"RTN","RCDPEM4",395,0)
DISPTY() ; Get display/output type
"RTN","RCDPEM4",396,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM4",397,0)
 S DIR(0)="YA"
"RTN","RCDPEM4",398,0)
 S DIR("A")="Export the report to Microsoft Excel? "
"RTN","RCDPEM4",399,0)
 S DIR("B")="NO"
"RTN","RCDPEM4",400,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEM4",401,0)
 Q Y
"RTN","RCDPEM4",402,0)
 ;
"RTN","RCDPEM4",403,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEM4",404,0)
 ; read allowed on BILL/CLAIMS file (#399) via IA 3820
"RTN","RCDPEM4",405,0)
 ; returns STA: station IEN, STNAM: station name, STNUM: station number
"RTN","RCDPEM4",406,0)
 N ERAEOB,ERABILL,STAIEN
"RTN","RCDPEM4",407,0)
 S (ERAEOB,ERABILL)=""
"RTN","RCDPEM4",408,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",409,0)
 D
"RTN","RCDPEM4",410,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB  ; if EOB pointer not on first sub-file entry then stop
"RTN","RCDPEM4",411,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL  ; EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEM4",412,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN  ;(#.22) DEFAULT DIVISION [22P:40.8]
"RTN","RCDPEM4",413,0)
 .S STA=STAIEN
"RTN","RCDPEM4",414,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",415,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",416,0)
 ;
"RTN","RCDPEM4",417,0)
 Q
"RTN","RCDPEM4",418,0)
 ;
"RTN","RCDPEM4",419,0)
EOBSTA(EOBIEN,STA,STNUM,STNAM) ; Get the station for this EOB
"RTN","RCDPEM4",420,0)
 ;Allowed read on 399 via IA 3820
"RTN","RCDPEM4",421,0)
 N BILL,STAIEN
"RTN","RCDPEM4",422,0)
 S (BILL)=""
"RTN","RCDPEM4",423,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",424,0)
 D
"RTN","RCDPEM4",425,0)
 .S BILL=$P(^IBM(361.1,EOBIEN,0),U,1) Q:'BILL
"RTN","RCDPEM4",426,0)
 .S STAIEN=$P($G(^DGCR(399,BILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEM4",427,0)
 .S STA=STAIEN
"RTN","RCDPEM4",428,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",429,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",430,0)
 Q
"RTN","RCDPEM4",431,0)
 ;
"RTN","RCDPEM4",432,0)
DTPRB() ; Get the Start Date type
"RTN","RCDPEM4",433,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","RCDPEM4",434,0)
 S DIR(0)="SABO^W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates"
"RTN","RCDPEM4",435,0)
 S DIR("A")="Select Start Date Type: "
"RTN","RCDPEM4",436,0)
 D ^DIR K DIR
"RTN","RCDPEM4",437,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S Y=0
"RTN","RCDPEM4",438,0)
 Q Y
"RTN","RCDPEM4",439,0)
 ;
"RTN","RCDPEM4",440,0)
WP(JC) ; format justification comments
"RTN","RCDPEM4",441,0)
 ; JC - Justification Comment
"RTN","RCDPEM4",442,0)
 I JC="" Q
"RTN","RCDPEM4",443,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM4",444,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM4",445,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM4",446,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM4",447,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM4",448,0)
 F I=1:1:PCS D
"RTN","RCDPEM4",449,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM4",450,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM4",451,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM4",452,0)
 ;
"RTN","RCDPEM4",453,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",454,0)
 Q
"RTN","RCDPEM4",455,0)
 ;
"RTN","RCDPEM41")
0^91^B8625925
"RTN","RCDPEM41",1,0)
RCDPEM41 ;OIFO-BAYPINES/MR - EPAYMENTS AUDIT REPORTS - Cont. ;Jul 01, 2014@02:11:19
"RTN","RCDPEM41",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEM41",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM41",4,0)
 ;
"RTN","RCDPEM41",5,0)
SVERA(ERAIEN,STA,STNUM,STNAM) ;Put the data into the ^TMP global
"RTN","RCDPEM41",6,0)
 ; INPUTS: ERAIEN = ien of the ERA
"RTN","RCDPEM41",7,0)
 ;         STNUM = station IEN
"RTN","RCDPEM41",8,0)
 ; RETURNS  : Builds each entry in the ^TMP global
"RTN","RCDPEM41",9,0)
 ;
"RTN","RCDPEM41",10,0)
 N SUB,CNT,USER,DATE,Y,DEPO,ERA,REC,MATCH,POST
"RTN","RCDPEM41",11,0)
 S REC(0)=$G(^RCY(344.4,ERAIEN,0)),REC(7)=$G(^(7))
"RTN","RCDPEM41",12,0)
 ;User marked ERA as posted to paper EOB
"RTN","RCDPEM41",13,0)
 S USER=$$NAME^XUSER($P(REC(7),U,2),"F")
"RTN","RCDPEM41",14,0)
 ;Date/Time ERA was marked posted 
"RTN","RCDPEM41",15,0)
 S DATE=$$FMTE^XLFDT($P(REC(7),U),"2S")
"RTN","RCDPEM41",16,0)
 ;ERA number
"RTN","RCDPEM41",17,0)
 S ERA=$P(REC(0),U)
"RTN","RCDPEM41",18,0)
 ;Deposit
"RTN","RCDPEM41",19,0)
 S DEPO=$$EXTERNAL^DILFD(344.4,.08,,$P(REC(0),U,8))
"RTN","RCDPEM41",20,0)
 ;EFT Match Status
"RTN","RCDPEM41",21,0)
 S MATCH=$$EXTERNAL^DILFD(344.4,.09,,$P(REC(0),U,9))
"RTN","RCDPEM41",22,0)
 ;Detail Post Status
"RTN","RCDPEM41",23,0)
 S POST=$$EXTERNAL^DILFD(344.4,.14,,$P(REC(0),U,14))
"RTN","RCDPEM41",24,0)
 ;
"RTN","RCDPEM41",25,0)
 S SUB=$S(RCDIV=2:"DIV",1:"ALL"),CNT=$G(^TMP(RCPROG,$J,SUB,0))+1,^(0)=CNT
"RTN","RCDPEM41",26,0)
 S ^TMP(RCPROG,$J,SUB,CNT)=STNAM_U_STNUM_U_DATE_U_USER_U_ERA_U_DEPO_U_MATCH_U_POST
"RTN","RCDPEM41",27,0)
 Q
"RTN","RCDPEM41",28,0)
 ;
"RTN","RCDPEM41",29,0)
SVEOB(EOBIEN,IEN101,STA,STNUM,STNAM) ;Put the data into ^TMP global
"RTN","RCDPEM41",30,0)
 ; INPUTS: EOBIEN = ien of the EOB
"RTN","RCDPEM41",31,0)
 ;         STNUM= station ien
"RTN","RCDPEM41",32,0)
 ; RETURNS  : Builds each entry in the ^TMP global
"RTN","RCDPEM41",33,0)
 ;
"RTN","RCDPEM41",34,0)
 N CNT,SUB,USER,DATE,Y,DEPO,REC101,JUST,ORIG,TRACE,ERA,PAYAMT,OTHER,NBILL,X,ACTION
"RTN","RCDPEM41",35,0)
 ; ^IBM(361.1,0) = EXPLANATION OF BENEFITS^361.1PI
"RTN","RCDPEM41",36,0)
 S REC101=$G(^IBM(361.1,EOBIEN,101,IEN101,0))
"RTN","RCDPEM41",37,0)
 ; User who did MOVE/COPY/REMOVE
"RTN","RCDPEM41",38,0)
 S USER=$$NAME^XUSER($P(REC101,U,2),"F")
"RTN","RCDPEM41",39,0)
 ;Date/Time ERA was marked posted 
"RTN","RCDPEM41",40,0)
 S DATE=$$FMTE^XLFDT($P(REC101,U),"2S")
"RTN","RCDPEM41",41,0)
 ;Justification comment
"RTN","RCDPEM41",42,0)
 S JUST=$P(REC101,U,3)
"RTN","RCDPEM41",43,0)
 ;Moved, Copied or Removed
"RTN","RCDPEM41",44,0)
 S ACTION=$P(REC101,U,5) I RCACT'="A" Q:ACTION'=RCACT
"RTN","RCDPEM41",45,0)
 S ACTION=$S(ACTION="C":"COPIED",ACTION="M":"MOVED",ACTION="R":"REMOVED",1:"")
"RTN","RCDPEM41",46,0)
 ;Original bill pointer
"RTN","RCDPEM41",47,0)
 S ORIG=$P(REC101,U,4)
"RTN","RCDPEM41",48,0)
 ;Ignore if original bill is null (this is EOB copied from)
"RTN","RCDPEM41",49,0)
 I ACTION'="REMOVED" Q:'ORIG
"RTN","RCDPEM41",50,0)
 ;Get claim number from pointer
"RTN","RCDPEM41",51,0)
 S ORIG=$$EXTERNAL^DILFD(361.1,.01,,ORIG)
"RTN","RCDPEM41",52,0)
 S X=$O(^PRCA(430,"D",ORIG,""))
"RTN","RCDPEM41",53,0)
 I $G(X) S X=$P($G(^PRCA(430,X,0)),U) I X'="" S ORIG=$TR(X,"-","")
"RTN","RCDPEM41",54,0)
 ;New Bill (only displayed for a move)
"RTN","RCDPEM41",55,0)
 S NBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","RCDPEM41",56,0)
 ;Paid Amount
"RTN","RCDPEM41",57,0)
 S PAYAMT=$P($G(^IBM(361.1,EOBIEN,1)),U)
"RTN","RCDPEM41",58,0)
 ;Trace Number
"RTN","RCDPEM41",59,0)
 S TRACE=$P($G(^IBM(361.1,EOBIEN,0)),U,7),ERA=""
"RTN","RCDPEM41",60,0)
 ;ERA number
"RTN","RCDPEM41",61,0)
 S:TRACE]"" ERA=$O(^RCY(344.4,"D",TRACE,""))
"RTN","RCDPEM41",62,0)
 ;Other bill numbers
"RTN","RCDPEM41",63,0)
 S OTHER=$$OTHER(EOBIEN,IEN101)
"RTN","RCDPEM41",64,0)
 ;
"RTN","RCDPEM41",65,0)
 S SUB=$S(RCDIV=2:"DIV",1:"ALL"),CNT=$G(^TMP(RCPROG,$J,SUB))+1,^(SUB)=CNT
"RTN","RCDPEM41",66,0)
 S ^TMP(RCPROG,$J,SUB,CNT)=STNAM_U_STNUM_U_DATE_U_USER_U_ORIG_U_NBILL_U_ERA_U_TRACE_U_PAYAMT_U_JUST_U_OTHER_U_ACTION
"RTN","RCDPEM41",67,0)
 Q
"RTN","RCDPEM41",68,0)
 ;
"RTN","RCDPEM41",69,0)
OTHER(EOBIEN,IEN101) ;Build list of bill numbers
"RTN","RCDPEM41",70,0)
 N SUB,NBILL,STR,FOUND
"RTN","RCDPEM41",71,0)
 S SUB=0,FOUND=0,STR=""
"RTN","RCDPEM41",72,0)
 F  S SUB=$O(^IBM(361.1,EOBIEN,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","RCDPEM41",73,0)
 .S NBILL=$G(^IBM(361.1,EOBIEN,101,IEN101,1,SUB,0)) Q:'NBILL
"RTN","RCDPEM41",74,0)
 .S NBILL=$$EXTERNAL^DILFD(361.1,.01,,NBILL)
"RTN","RCDPEM41",75,0)
 .I FOUND S STR=STR_", "
"RTN","RCDPEM41",76,0)
 .S STR=STR_NBILL,FOUND=1
"RTN","RCDPEM41",77,0)
 S:'FOUND STR=STR_"NONE"
"RTN","RCDPEM41",78,0)
 Q STR
"RTN","RCDPEM5")
0^46^B85031915
"RTN","RCDPEM5",1,0)
RCDPEM5 ;ALB/PJH - EPAYMENTS MOVE EEOB TO NEW CLAIM ;Oct 29, 2014@16:43:51
"RTN","RCDPEM5",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM5",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM5",4,0)
 Q
"RTN","RCDPEM5",5,0)
 ;
"RTN","RCDPEM5",6,0)
EN ;Entry point for EEOB Move/Copy/Remove [RCDPE EEOB MOVE/COPY/REMOVE] option
"RTN","RCDPEM5",7,0)
 ;
"RTN","RCDPEM5",8,0)
 N DIR,X,Y,DIROUT,DUOUT,MODE
"RTN","RCDPEM5",9,0)
 S DIR("A")="Select action"
"RTN","RCDPEM5",10,0)
 S DIR("B")="M"
"RTN","RCDPEM5",11,0)
 S DIR(0)="S^M:Move EEOB to different claim;"
"RTN","RCDPEM5",12,0)
 S DIR(0)=DIR(0)_"C:Copy EEOB to multiple claims;"
"RTN","RCDPEM5",13,0)
 S DIR(0)=DIR(0)_"R:Remove EEOB from claim"
"RTN","RCDPEM5",14,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT)
"RTN","RCDPEM5",15,0)
 S MODE=Y
"RTN","RCDPEM5",16,0)
 ;
"RTN","RCDPEM5",17,0)
 ; - PRCA*4.5*298 - OWNSKEY^XUSRB - Supported IA 3277  
"RTN","RCDPEM5",18,0)
 I MODE="R" N MSG D OWNSKEY^XUSRB(.MSG,"RCDPE REMOVE EEOB",DUZ) I 'MSG(0) D  Q
"RTN","RCDPEM5",19,0)
 .W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS ACTION"
"RTN","RCDPEM5",20,0)
 .W !,"This action is locked with RCDPE REMOVE EEOB key.",!
"RTN","RCDPEM5",21,0)
 .N DIR S DIR(0)="E" D ^DIR
"RTN","RCDPEM5",22,0)
 ;
"RTN","RCDPEM5",23,0)
 ;Read access to file #361.1 under IA 4051
"RTN","RCDPEM5",24,0)
 ;
"RTN","RCDPEM5",25,0)
 N DA,DIC,DIE,DIR,DR,NCLAIM,ORIG,ORIGNAM,X,Y
"RTN","RCDPEM5",26,0)
 ;
"RTN","RCDPEM5",27,0)
 ;Allow selection of a original third party EOB
"RTN","RCDPEM5",28,0)
 S DIC("A")="Select EXPLANATION OF BENEFIT (EEOB) to "_$S(MODE="M":"MOVE",MODE="R":"REMOVE",1:"COPY")_": "
"RTN","RCDPEM5",29,0)
 ; screen to only allow selection of an active EEOB (not marked as deleted) and non-MRA type EOB
"RTN","RCDPEM5",30,0)
 S DIC("S")="I ($P(^(0),U,4)=0)&('$P($G(^(102)),U))",DIC="^IBM(361.1,",DIC(0)="AEMQ"
"RTN","RCDPEM5",31,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM5",32,0)
 ;
"RTN","RCDPEM5",33,0)
 I Y'>0 Q
"RTN","RCDPEM5",34,0)
 ; controlled subscription IA 1992
"RTN","RCDPEM5",35,0)
 S ORIG=+Y,ORIGNAM=$$GET1^DIQ(399,$P(Y,U,2),.01)
"RTN","RCDPEM5",36,0)
 ;
"RTN","RCDPEM5",37,0)
 ;Get current bill payer sequence from claim - IA 3820
"RTN","RCDPEM5",38,0)
 D
"RTN","RCDPEM5",39,0)
 .N CURR,IEN399
"RTN","RCDPEM5",40,0)
 .S IEN399=$P($G(^IBM(361.1,ORIG,0)),U) Q:'IEN399
"RTN","RCDPEM5",41,0)
 .S CURR=$P($G(^DGCR(399,IEN399,0)),U,21) I (CURR'="T")&(CURR'="S") Q
"RTN","RCDPEM5",42,0)
 .W !!,"Warning - selected EEOB has secondary claims and may have tertiary claims"
"RTN","RCDPEM5",43,0)
 ;
"RTN","RCDPEM5",44,0)
 ;Lock Original EOB
"RTN","RCDPEM5",45,0)
 Q:'$$LOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",46,0)
 ;
"RTN","RCDPEM5",47,0)
 ;Remove Option
"RTN","RCDPEM5",48,0)
 I MODE="R" D REMOVE(ORIG,MODE),EXIT Q
"RTN","RCDPEM5",49,0)
 ;
"RTN","RCDPEM5",50,0)
 ;Select Claim(s) to Move/Copy to
"RTN","RCDPEM5",51,0)
 N RCBILL,RCBILLNM,NCLAIM,NCLAIMX,QUIT,SUB,LIT
"RTN","RCDPEM5",52,0)
 S SUB=0,QUIT=0,LIT=""
"RTN","RCDPEM5",53,0)
 W !
"RTN","RCDPEM5",54,0)
 F  D  Q:QUIT  Q:SUB&(MODE="M")
"RTN","RCDPEM5",55,0)
 .;Allow selection of a third party claim
"RTN","RCDPEM5",56,0)
 .I MODE="M" S DIC("A")="Select A/R Bill to MOVE to: "
"RTN","RCDPEM5",57,0)
 .I MODE="C" S DIC("A")="Select "_LIT_"A/R Bill to COPY to: "
"RTN","RCDPEM5",58,0)
 .S DIC="^PRCA(430,",DIC(0)="AEMQ",DIC("S")="I $D(^DGCR(399,+Y,0))&($$VALSTAT^RCDPEM5(+Y))"
"RTN","RCDPEM5",59,0)
 .D ^DIC K DIC
"RTN","RCDPEM5",60,0)
 .I Y'>0 S QUIT=1 Q
"RTN","RCDPEM5",61,0)
 .S RCBILL=+Y,RCBILLNM=$P($P(Y,U,2),"-",2)
"RTN","RCDPEM5",62,0)
 .I ORIGNAM=RCBILLNM,MODE="M" W !,"Cannot move EEOB to same claim" Q
"RTN","RCDPEM5",63,0)
 .I $D(NCLAIMX(RCBILL)) W !,"Claim already entered" Q
"RTN","RCDPEM5",64,0)
 .S SUB=SUB+1,NCLAIM(SUB)=RCBILL,NCLAIMX(RCBILL)=""
"RTN","RCDPEM5",65,0)
 .S:MODE="C" LIT="another "
"RTN","RCDPEM5",66,0)
 ;
"RTN","RCDPEM5",67,0)
 I $G(DUOUT)!$G(DIROUT) D EXIT Q
"RTN","RCDPEM5",68,0)
 ;
"RTN","RCDPEM5",69,0)
 ;User Exit or no claims selected
"RTN","RCDPEM5",70,0)
 I '$O(NCLAIM("")) D EXIT Q
"RTN","RCDPEM5",71,0)
 ;
"RTN","RCDPEM5",72,0)
 ;Prompt user to continue
"RTN","RCDPEM5",73,0)
 N DIR,X,Y,DIROUT
"RTN","RCDPEM5",74,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","RCDPEM5",75,0)
 S DIR("A")=$$PROMPT(ORIG,.NCLAIM,MODE)
"RTN","RCDPEM5",76,0)
 W ! D ^DIR
"RTN","RCDPEM5",77,0)
 ;
"RTN","RCDPEM5",78,0)
 I $G(DIROUT)!$G(DUOUT)!(Y=0) D EXIT Q
"RTN","RCDPEM5",79,0)
 ;
"RTN","RCDPEM5",80,0)
 ;Enter Justification Comment
"RTN","RCDPEM5",81,0)
 N DIR,DIROUT,DUOUT,JCOM,X,Y
"RTN","RCDPEM5",82,0)
 S DIR(0)="FA^1:100^K:$TR(X,"" "","""")="""" X",DIR("A")="Enter JUSTIFICATION COMMENT: "
"RTN","RCDPEM5",83,0)
 W ! D ^DIR I $G(DIROUT)!$G(DUOUT) W !!,"Update not performed" D EXIT Q
"RTN","RCDPEM5",84,0)
 S JCOM=Y
"RTN","RCDPEM5",85,0)
 ;
"RTN","RCDPEM5",86,0)
 ;Update EOB
"RTN","RCDPEM5",87,0)
 D UPDATE(ORIG,.NCLAIM,MODE,JCOM),EXIT
"RTN","RCDPEM5",88,0)
 ;
"RTN","RCDPEM5",89,0)
 Q
"RTN","RCDPEM5",90,0)
 ;
"RTN","RCDPEM5",91,0)
 ;Unlock original EOB
"RTN","RCDPEM5",92,0)
EXIT D UNLOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",93,0)
 Q
"RTN","RCDPEM5",94,0)
 ;
"RTN","RCDPEM5",95,0)
 ;File EOB #361.1 changes - Integration Agreement 5671 for IBCEOB4
"RTN","RCDPEM5",96,0)
UPDATE(ORIG,NCLAIM,MODE,JUST) ;
"RTN","RCDPEM5",97,0)
 N JUST1
"RTN","RCDPEM5",98,0)
 ;Move EOB
"RTN","RCDPEM5",99,0)
 I MODE="M" D
"RTN","RCDPEM5",100,0)
 .;Auto generate text for AR comments on original claim
"RTN","RCDPEM5",101,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"M",0)
"RTN","RCDPEM5",102,0)
 .;Update AR Comments on the 'from bill'
"RTN","RCDPEM5",103,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",104,0)
 .;Change claim number on EEOB
"RTN","RCDPEM5",105,0)
 .D MOVE^IBCEOB4(ORIG,NCLAIM(1),DUZ,$$NOW^XLFDT,JUST,MODE)
"RTN","RCDPEM5",106,0)
 .;Update AR Comments on 'to bill'
"RTN","RCDPEM5",107,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",108,0)
 ;Copy EOB
"RTN","RCDPEM5",109,0)
 I MODE="C" D
"RTN","RCDPEM5",110,0)
 .D COPY^IBCEOB4(ORIG,.NCLAIM,DUZ,$$NOW^XLFDT,JUST,MODE)
"RTN","RCDPEM5",111,0)
 .;Auto generate text for AR comments on original claim
"RTN","RCDPEM5",112,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"C",0)
"RTN","RCDPEM5",113,0)
 .;Update AR Comments on original claim
"RTN","RCDPEM5",114,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",115,0)
 .;Auto generate text for AR comments on new claim
"RTN","RCDPEM5",116,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"C",1)
"RTN","RCDPEM5",117,0)
 .;Update AR Comments on new claims
"RTN","RCDPEM5",118,0)
 .N SUB,NEWEOB
"RTN","RCDPEM5",119,0)
 .S SUB=0
"RTN","RCDPEM5",120,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",121,0)
 ..;Convert Claim pointer to EOB pointer
"RTN","RCDPEM5",122,0)
 ..S NEWEOB=$O(^IBM(361.1,"B",NCLAIM(SUB),0)) Q:'NEWEOB
"RTN","RCDPEM5",123,0)
 ..D AUDIT^RCDPAYER(NEWEOB,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",124,0)
 W !!,"EEOB Update Complete" H 1
"RTN","RCDPEM5",125,0)
 Q
"RTN","RCDPEM5",126,0)
 ;
"RTN","RCDPEM5",127,0)
 ;Called from Worklist/Scratchpad option Split/Edit FILESP^RCDPEWL8
"RTN","RCDPEM5",128,0)
UPDWL(OBILL,RCSPLIT,RCERA) ;
"RTN","RCDPEM5",129,0)
 N NCLAIM,SUB,SUB1,NBILL,ORIG,MOVE,JUST,JUST1,VALID
"RTN","RCDPEM5",130,0)
 ;Find EOB for the claim
"RTN","RCDPEM5",131,0)
 S ORIG=$$FINDEOB(RCERA,OBILL) I 'ORIG Q 1
"RTN","RCDPEM5",132,0)
 ;Default operation is move
"RTN","RCDPEM5",133,0)
 S (SUB,SUB1)=0,MOVE=1,VALID=1
"RTN","RCDPEM5",134,0)
 ;Loop through split lines 
"RTN","RCDPEM5",135,0)
 F  S SUB=$O(RCSPLIT(SUB)) Q:'SUB  D
"RTN","RCDPEM5",136,0)
 .;Bill Number
"RTN","RCDPEM5",137,0)
 .S NBILL=$P(RCSPLIT(SUB),U)
"RTN","RCDPEM5",138,0)
 .;Ignore suspense claims, piece 5 is pointer to AR claim file 430
"RTN","RCDPEM5",139,0)
 .Q:$P(RCSPLIT(SUB),U,5)=""
"RTN","RCDPEM5",140,0)
 .;If original bill is in the array then default operation is copy
"RTN","RCDPEM5",141,0)
 .I OBILL=NBILL S MOVE=0 Q
"RTN","RCDPEM5",142,0)
 .;Save POINTER to AR Claim file 430 (DINUM to 399)
"RTN","RCDPEM5",143,0)
 .S SUB1=SUB1+1,NCLAIM(SUB1)=$P(RCSPLIT(SUB),U,5)
"RTN","RCDPEM5",144,0)
 ;If all copied to claims are suspense no further action needed on EOB
"RTN","RCDPEM5",145,0)
 I SUB1=0 Q 1
"RTN","RCDPEM5",146,0)
 ;Prompt user to continue
"RTN","RCDPEM5",147,0)
 N DIR,X,Y,DIROUT,MODE
"RTN","RCDPEM5",148,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","RCDPEM5",149,0)
 S MODE=$S(MOVE:"M",1:"C")
"RTN","RCDPEM5",150,0)
 S DIR("A")=$$PROMPT(ORIG,.NCLAIM,MODE)
"RTN","RCDPEM5",151,0)
 W ! D ^DIR
"RTN","RCDPEM5",152,0)
 ;
"RTN","RCDPEM5",153,0)
 I $G(DIROUT)!$G(DUOUT)!(Y=0) D EXIT Q 0
"RTN","RCDPEM5",154,0)
 ;
"RTN","RCDPEM5",155,0)
 ;Lock Original EOB
"RTN","RCDPEM5",156,0)
 I '$$LOCK^IBCEOB4(ORIG) Q 0
"RTN","RCDPEM5",157,0)
 ;
"RTN","RCDPEM5",158,0)
 ;If original EOB is moved - move original EOB to first new claim
"RTN","RCDPEM5",159,0)
 I MOVE D
"RTN","RCDPEM5",160,0)
 .;Automatic creation of justification text
"RTN","RCDPEM5",161,0)
 .S JUST=$$JUST(ORIG,.NCLAIM,"M",0)
"RTN","RCDPEM5",162,0)
 .;Update AR comments on 'from claim'
"RTN","RCDPEM5",163,0)
 .D AUDIT^RCDPAYER(ORIG,JUST,"W")
"RTN","RCDPEM5",164,0)
 .;Change claim number on EOB
"RTN","RCDPEM5",165,0)
 .D MOVE^IBCEOB4(ORIG,NCLAIM(1),DUZ,$$NOW^XLFDT,JUST,MODE) Q:SUB1=1
"RTN","RCDPEM5",166,0)
 .;Copy any additional claims to new EOBs
"RTN","RCDPEM5",167,0)
 .N CCLAIM M CCLAIM=NCLAIM K CCLAIM(1)
"RTN","RCDPEM5",168,0)
 .S JUST1=$$JUST(ORIG,.NCLAIM,"M",1)
"RTN","RCDPEM5",169,0)
 .D COPY^IBCEOB4(ORIG,.CCLAIM,DUZ,$$NOW^XLFDT,JUST1,MODE)
"RTN","RCDPEM5",170,0)
 ;
"RTN","RCDPEM5",171,0)
 ;If original EOB is not moved - copy all new claims to new EOBs
"RTN","RCDPEM5",172,0)
 I 'MOVE D
"RTN","RCDPEM5",173,0)
 .S JUST=$$JUST(ORIG,.NCLAIM,"C",0) ;Just. Text for original EEOB
"RTN","RCDPEM5",174,0)
 .S JUST1=$$JUST(ORIG,.NCLAIM,"C",1) ;Just. Text for copied to EEOB
"RTN","RCDPEM5",175,0)
 .D COPY^IBCEOB4(ORIG,.NCLAIM,DUZ,$$NOW^XLFDT,JUST,MODE)
"RTN","RCDPEM5",176,0)
 ;
"RTN","RCDPEM5",177,0)
 ;Update AR Comments on 'to claim'
"RTN","RCDPEM5",178,0)
 D AUDIT^RCDPAYER(ORIG,JUST,"W")
"RTN","RCDPEM5",179,0)
 ;
"RTN","RCDPEM5",180,0)
 ;Get list of other copied claims
"RTN","RCDPEM5",181,0)
 N OCLAIM,SUB M OCLAIM=NCLAIM
"RTN","RCDPEM5",182,0)
 ;Ignore first of these claim if this was a move
"RTN","RCDPEM5",183,0)
 I MOVE K OCLAIM(1)
"RTN","RCDPEM5",184,0)
 ;Update AR comments for other claims
"RTN","RCDPEM5",185,0)
 N SUB,NEWEOB
"RTN","RCDPEM5",186,0)
 S SUB=0
"RTN","RCDPEM5",187,0)
 F  S SUB=$O(OCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",188,0)
 .;Convert Claim pointer to EOB pointer
"RTN","RCDPEM5",189,0)
 .S NEWEOB=$O(^IBM(361.1,"B",OCLAIM(SUB),0)) Q:'NEWEOB
"RTN","RCDPEM5",190,0)
 .D AUDIT^RCDPAYER(NEWEOB,JUST1,"W")
"RTN","RCDPEM5",191,0)
 ;
"RTN","RCDPEM5",192,0)
 W !!,"EEOB Update Complete" H 1
"RTN","RCDPEM5",193,0)
 Q 1
"RTN","RCDPEM5",194,0)
 ;
"RTN","RCDPEM5",195,0)
PROMPT(ORIG,NCLAIM,MODE) ;Construct prompt text
"RTN","RCDPEM5",196,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",197,0)
 ;Move or copy text
"RTN","RCDPEM5",198,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",199,0)
 I MODE="M" S STR="Move EEOB from claim "_TEXT_" to claim "
"RTN","RCDPEM5",200,0)
 E  S STR="Copy EEOB from claim "_TEXT_" to claim(s) "
"RTN","RCDPEM5",201,0)
 ;Build list of claims
"RTN","RCDPEM5",202,0)
 S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",203,0)
 F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",204,0)
 .S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",205,0)
 .I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",206,0)
 .S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",207,0)
 ;Return full prompt text
"RTN","RCDPEM5",208,0)
 Q STR_STR1_" "
"RTN","RCDPEM5",209,0)
 ;
"RTN","RCDPEM5",210,0)
JUST(ORIG,NCLAIM,MODE,TYPE) ;Construct justification text for worklist option
"RTN","RCDPEM5",211,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",212,0)
 ;Original bill numbe
"RTN","RCDPEM5",213,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",214,0)
 ;Justification comment for original EOB
"RTN","RCDPEM5",215,0)
 I TYPE=0 D
"RTN","RCDPEM5",216,0)
 .I MODE="M" S STR="EEOB from claim "_TEXT_" moved to claim "
"RTN","RCDPEM5",217,0)
 .I MODE="C" S STR="EEOB from claim "_TEXT_" copied to claim(s) "
"RTN","RCDPEM5",218,0)
 .;Build list of claims
"RTN","RCDPEM5",219,0)
 .S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",220,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",221,0)
 ..S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",222,0)
 ..I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",223,0)
 ..S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",224,0)
 ;Justification comment for new EOB's
"RTN","RCDPEM5",225,0)
 I TYPE=1 D
"RTN","RCDPEM5",226,0)
 .I MODE="M" S STR="EEOB moved from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",227,0)
 .I MODE="C" S STR="EEOB copied from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",228,0)
 ;Return full justification text
"RTN","RCDPEM5",229,0)
 Q STR_STR1_" by Split/Edit Line"
"RTN","RCDPEM5",230,0)
 ;
"RTN","RCDPEM5",231,0)
JUST1(ORIG,NCLAIM,MODE,TYPE) ;Construct AR comment for stand alone option
"RTN","RCDPEM5",232,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",233,0)
 ;Original bill numbe
"RTN","RCDPEM5",234,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",235,0)
 ;Justification comment for original EOB
"RTN","RCDPEM5",236,0)
 I TYPE=0 D
"RTN","RCDPEM5",237,0)
 .I MODE="M" S STR="EEOB from claim "_TEXT_" moved to claim "
"RTN","RCDPEM5",238,0)
 .I MODE="C" S STR="EEOB from claim "_TEXT_" copied to claim(s) "
"RTN","RCDPEM5",239,0)
 .;Build list of claims
"RTN","RCDPEM5",240,0)
 .S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",241,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",242,0)
 ..S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",243,0)
 ..I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",244,0)
 ..S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",245,0)
 ;Justification comment for new EOB's
"RTN","RCDPEM5",246,0)
 I TYPE=1 D
"RTN","RCDPEM5",247,0)
 .I MODE="M" S STR="EEOB moved from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",248,0)
 .I MODE="C" S STR="EEOB copied from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",249,0)
 ;Return comment text
"RTN","RCDPEM5",250,0)
 Q STR_STR1
"RTN","RCDPEM5",251,0)
 ;
"RTN","RCDPEM5",252,0)
FINDEOB(IEN3444,BILL) ;Find EOB for a claim within an ERA
"RTN","RCDPEM5",253,0)
 N IEN3611,SUB
"RTN","RCDPEM5",254,0)
 S (SUB,IEN3611)=0
"RTN","RCDPEM5",255,0)
 F  S SUB=$O(^RCY(344.4,IEN3444,1,"AC",SUB)) Q:'SUB  D  Q:IEN3611
"RTN","RCDPEM5",256,0)
 .I $$EXTERNAL^DILFD(344.41,.02,,SUB)=BILL S IEN3611=SUB
"RTN","RCDPEM5",257,0)
 Q IEN3611
"RTN","RCDPEM5",258,0)
 ;
"RTN","RCDPEM5",259,0)
REMOVE(ORIG,MODE) ;Option to Remove EEOB - PRCA*4.5*298
"RTN","RCDPEM5",260,0)
 ;
"RTN","RCDPEM5",261,0)
 ;Prompt user to continue
"RTN","RCDPEM5",262,0)
 N DIR,X,Y,DIROUT
"RTN","RCDPEM5",263,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","RCDPEM5",264,0)
 S DIR("A")="Are you sure you want to remove EEOB from claim "_ORIGNAM_" (Y/N)?"
"RTN","RCDPEM5",265,0)
 W ! D ^DIR
"RTN","RCDPEM5",266,0)
 ;
"RTN","RCDPEM5",267,0)
 I $G(DIROUT)!$G(DUOUT)!(Y=0) Q
"RTN","RCDPEM5",268,0)
 ;
"RTN","RCDPEM5",269,0)
 ;Enter Justification Comment
"RTN","RCDPEM5",270,0)
 N DIR,DIROUT,DUOUT,JUST,X,Y
"RTN","RCDPEM5",271,0)
 S DIR(0)="FA^1:100^K:$TR(X,"" "","""")="""" X",DIR("A")="Enter JUSTIFICATION COMMENT: "
"RTN","RCDPEM5",272,0)
 W ! D ^DIR I $G(DIROUT)!$G(DUOUT) W !!,"Update not performed" D EXIT Q
"RTN","RCDPEM5",273,0)
 S JUST=Y
"RTN","RCDPEM5",274,0)
 ;
"RTN","RCDPEM5",275,0)
 ;Update EEOB
"RTN","RCDPEM5",276,0)
 D REMOVE^IBCEOB4(ORIG,DUZ,JUST)
"RTN","RCDPEM5",277,0)
 ;Update AR Comments for removed claim
"RTN","RCDPEM5",278,0)
 D AUDIT^RCDPAYER(ORIG,JUST,MODE)
"RTN","RCDPEM5",279,0)
 ;
"RTN","RCDPEM5",280,0)
 W !!,"EEOB Update Complete" H 1
"RTN","RCDPEM5",281,0)
 Q
"RTN","RCDPEM5",282,0)
 ; 
"RTN","RCDPEM5",283,0)
VALSTAT(CLIEN) ; validation on current status of the AR claim selected for the move/copy event  
"RTN","RCDPEM5",284,0)
 ; Claims that are in a incomplete state cannot be selected
"RTN","RCDPEM5",285,0)
 ; incomplete states are determined at CURRENT STATUS (8,430) of the AR claim
"RTN","RCDPEM5",286,0)
 ; AR claims with 'BILL INCOMPLETE', 'INCOMPLETE', 'NEW BILL' statuses cannot be selected 
"RTN","RCDPEM5",287,0)
 ; CLIEN=430 ien
"RTN","RCDPEM5",288,0)
 ; returns 0 or 1
"RTN","RCDPEM5",289,0)
 N CSTAT,FLAG
"RTN","RCDPEM5",290,0)
 S CSTAT=$$GET1^DIQ(430,CLIEN,8)
"RTN","RCDPEM5",291,0)
 S FLAG=$S(CSTAT="BILL INCOMPLETE":0,CSTAT="INCOMPLETE":0,CSTAT="NEW BILL":0,1:1)
"RTN","RCDPEM5",292,0)
 Q FLAG
"RTN","RCDPEM5",293,0)
 ;
"RTN","RCDPEM6")
0^74^B78693035
"RTN","RCDPEM6",1,0)
RCDPEM6 ;OIFO-BAYPINES/RBN - DUPLICATE EFT DEPOSITS AUDIT REPORT ;Jun 11, 2014@18:03:49
"RTN","RCDPEM6",2,0)
 ;;4.5;Accounts Receivable;**276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM6",4,0)
 ;
"RTN","RCDPEM6",5,0)
 ; completely refactored for PRCA*4.5*298
"RTN","RCDPEM6",6,0)
 Q
"RTN","RCDPEM6",7,0)
 ;
"RTN","RCDPEM6",8,0)
 ; generate an audit report that displays EFTs that have been removed by the user
"RTN","RCDPEM6",9,0)
 ; user selects a date range to limit the number of EFTs displayed.
"RTN","RCDPEM6",10,0)
 ; EDI THIRD PARTY EFT DETAIL file (#344.31)
"RTN","RCDPEM6",11,0)
 ;
"RTN","RCDPEM6",12,0)
 ; INPUT: user prompted for Date/Time range
"RTN","RCDPEM6",13,0)
 ;
"RTN","RCDPEM6",14,0)
 ; OUTPUT:
"RTN","RCDPEM6",15,0)
 ; report OF EFTs that have been removed.  
"RTN","RCDPEM6",16,0)
 ; The report has the following:
"RTN","RCDPEM6",17,0)
 ;   Trace number, Payer name, Deposit number, Date removed, User, Justification for removal
"RTN","RCDPEM6",18,0)
 ; data taken from EDI THIRD PARTY EFT DETAIL file (#344.31)
"RTN","RCDPEM6",19,0)
 ; report formatted for 80 columns
"RTN","RCDPEM6",20,0)
 ;
"RTN","RCDPEM6",21,0)
 ; put into ^TMP($J,"RCDPEM6",counter) for ListMan
"RTN","RCDPEM6",22,0)
 ; $pieces: DEPOSIT NUMBER^PAYER^TRACE NUMBER^AMOUNT^DATE REMOVED^USER^JUSTIFICATION
"RTN","RCDPEM6",23,0)
 ;
"RTN","RCDPEM6",24,0)
EN1 ; entry point for EFT Audit Report
"RTN","RCDPEM6",25,0)
 N I,RCDISPTY,RCDTRNG,RCHDR,RCLSTMGR,RCPGNUM,RCSTOP,RCTMPND,X,Y
"RTN","RCDPEM6",26,0)
 ; RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM6",27,0)
 ; RCDTRNG - date range selected
"RTN","RCDPEM6",28,0)
 ; RCHDR - header array
"RTN","RCDPEM6",29,0)
 ; RCLSTMGR - ListMan flag
"RTN","RCDPEM6",30,0)
 ; RCPGNUM - report page number
"RTN","RCDPEM6",31,0)
 ; RCSTOP - boolean, User indicated to stop
"RTN","RCDPEM6",32,0)
 ; RCTMPND - storage node in ^TMP
"RTN","RCDPEM6",33,0)
 ;
"RTN","RCDPEM6",34,0)
 W !,"    "_$$HDRNM,!
"RTN","RCDPEM6",35,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) EXIT
"RTN","RCDPEM6",36,0)
 S RCLSTMGR=""  ; ListMan flag, set to '^' if sent to Excel
"RTN","RCDPEM6",37,0)
 S RCTMPND=""  ; if null, report lines not stored in ^TMP, written directly
"RTN","RCDPEM6",38,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 EXIT
"RTN","RCDPEM6",39,0)
 ; display information for Excel, indicate not to ask for ListMan
"RTN","RCDPEM6",40,0)
 I RCDISPTY D INFO S RCLSTMGR=U
"RTN","RCDPEM6",41,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEM6",42,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM6",43,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM6",44,0)
 .S RCTMPND=$T(+0)_"^DUP EFT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEM6",45,0)
 .D GENRPRT,DSPRPRT  ; generate report and store it in ^TMP
"RTN","RCDPEM6",46,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM6",47,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEM6",48,0)
 .F H=1:1 Q:'$D(RCHDR(H))  S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPEM6",49,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM6",50,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM6",51,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM6",52,0)
 ;
"RTN","RCDPEM6",53,0)
 ; Select output device
"RTN","RCDPEM6",54,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM6",55,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEM6",56,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEM6",57,0)
 .S ZTRTN="ENFRMQ^RCDPEM6",ZTDESC=$$HDRNM,ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM6",58,0)
 .D ^%ZTLOAD
"RTN","RCDPEM6",59,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"Unable to queue this task.")
"RTN","RCDPEM6",60,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEM6",61,0)
 ;
"RTN","RCDPEM6",62,0)
 U IO
"RTN","RCDPEM6",63,0)
 ; fall through to generate report
"RTN","RCDPEM6",64,0)
 ;
"RTN","RCDPEM6",65,0)
ENFRMQ ; entry point from TaskMan Queue
"RTN","RCDPEM6",66,0)
 D GENRPRT,DSPRPRT
"RTN","RCDPEM6",67,0)
 D EXIT
"RTN","RCDPEM6",68,0)
 Q
"RTN","RCDPEM6",69,0)
 ;
"RTN","RCDPEM6",70,0)
GENRPRT ; Generate the report ^TMP array
"RTN","RCDPEM6",71,0)
 ; INPUT: RCDTRNG - date range for report
"RTN","RCDPEM6",72,0)
 ;
"RTN","RCDPEM6",73,0)
 N EFTIEN,FRSTDT,INDXDT,LSTDT,X,Y
"RTN","RCDPEM6",74,0)
 ; INDXDT - date of EFT from "E" x-ref
"RTN","RCDPEM6",75,0)
 ; FRSTDT  - Start date of report date range
"RTN","RCDPEM6",76,0)
 ; LSTDT - End date of report date range
"RTN","RCDPEM6",77,0)
 ; EFTIEN - IEN of EFT
"RTN","RCDPEM6",78,0)
 ;
"RTN","RCDPEM6",79,0)
 K ^TMP($J,"RC DUP EFT")  ; used for report
"RTN","RCDPEM6",80,0)
 S FRSTDT=$P(RCDTRNG,U,2) S:FRSTDT<1 FRSTDT=2010101  ; 1 Jan 1901
"RTN","RCDPEM6",81,0)
 S LSTDT=$P(RCDTRNG,U,3) S:LSTDT<1 LSTDT=4010101  ; 1 Jan 2101
"RTN","RCDPEM6",82,0)
 S INDXDT=FRSTDT-.00000001  ; initial value for x-ref
"RTN","RCDPEM6",83,0)
 ;
"RTN","RCDPEM6",84,0)
 ; ^RCY(344.31,D0,3) = (#.17) USER WHO REMOVED EFT [1P:200] ^ (#.18) DATE/TIME DUPLICATE REMOVED [2D] ^ (#.19) EFT REMOVAL REASON [3F]
"RTN","RCDPEM6",85,0)
 F  S INDXDT=$O(^RCY(344.31,"E",INDXDT)) Q:'INDXDT!(INDXDT>LSTDT)  D
"RTN","RCDPEM6",86,0)
 .S EFTIEN=0 F  S EFTIEN=$O(^RCY(344.31,"E",INDXDT,EFTIEN)) Q:'EFTIEN  D:$D(^RCY(344.31,EFTIEN,3)) PROC(EFTIEN)
"RTN","RCDPEM6",87,0)
 ;
"RTN","RCDPEM6",88,0)
 Q
"RTN","RCDPEM6",89,0)
 ;
"RTN","RCDPEM6",90,0)
DSPRPRT ; Format display for screen/printer, Excel, or ListMan
"RTN","RCDPEM6",91,0)
 ; RCDISPTY - display for Excel flag
"RTN","RCDPEM6",92,0)
 ; RCLSTMGR - display for ListMan flag
"RTN","RCDPEM6",93,0)
 ;
"RTN","RCDPEM6",94,0)
 N CNT,DUPEFT,IEN,LINE,RCLNCNT,Y
"RTN","RCDPEM6",95,0)
 ; CNT - Count of EFT Deposits removed
"RTN","RCDPEM6",96,0)
 ; IEN - line number of the data in ^TMP
"RTN","RCDPEM6",97,0)
 ; DUPEFT - Data from ^TMP($J,"RC DUP EFT",IEN)
"RTN","RCDPEM6",98,0)
 ; RCLNCNT - line counter for SL^RCDPEARL
"RTN","RCDPEM6",99,0)
 ;
"RTN","RCDPEM6",100,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPEM6",101,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEM6",102,0)
 ;
"RTN","RCDPEM6",103,0)
 I $G(RCTMPND)'="" K ^TMP($J,RCTMPND) S RCLNCNT=0
"RTN","RCDPEM6",104,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPEM6",105,0)
 S IEN="",CNT=0
"RTN","RCDPEM6",106,0)
 F  S IEN=$O(^TMP($J,"RC DUP EFT",IEN)) Q:'IEN!RCSTOP  D
"RTN","RCDPEM6",107,0)
 .S CNT=CNT+1,DUPEFT=^TMP($J,"RC DUP EFT",IEN)
"RTN","RCDPEM6",108,0)
 .I RCDISPTY D SL^RCDPEARL(DUPEFT,.RCLNCNT,RCTMPND) Q  ; Excel format, write line and quit
"RTN","RCDPEM6",109,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM6",110,0)
 .S Y=$$PAD^RCDPEARL(" "_$P(DUPEFT,U),16)_$P(DUPEFT,U,3) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",111,0)
 .S Y=$J(" ",6)_$P(DUPEFT,U,2) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",112,0)
 .S Y=$$PAD^RCDPEARL($J(" ",16)_$J($P(DUPEFT,U,4),0,2),28)_$P(DUPEFT,U,5)
"RTN","RCDPEM6",113,0)
 .S Y=$$PAD^RCDPEARL(Y,50)_$E($P(DUPEFT,U,6),1,25) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",114,0)
 .D WP($P(DUPEFT,U,7)) D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",115,0)
 ;
"RTN","RCDPEM6",116,0)
 I 'RCDISPTY,'RCSTOP D  ; not for Excel
"RTN","RCDPEM6",117,0)
 .S Y=" Total number of duplicates removed: "_CNT D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND),SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",118,0)
 ;
"RTN","RCDPEM6",119,0)
 I 'RCSTOP D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",120,0)
 ;
"RTN","RCDPEM6",121,0)
 Q
"RTN","RCDPEM6",122,0)
 ;
"RTN","RCDPEM6",123,0)
PROC(EFTIEN) ;  gather data into ^TMP
"RTN","RCDPEM6",124,0)
 ; EFTIEN = ien of the EFT
"RTN","RCDPEM6",125,0)
 ;
"RTN","RCDPEM6",126,0)
 N AMT,DEPNO,JUST,PAYER,PTR,RCRD,RTRNDT,TRACE,USER
"RTN","RCDPEM6",127,0)
 ; JUST - Justification for returning EFT
"RTN","RCDPEM6",128,0)
 ; TRACE - EFT Trace number
"RTN","RCDPEM6",129,0)
 ; AMT - amount of the EFT
"RTN","RCDPEM6",130,0)
 ; PAYER - EFT payer
"RTN","RCDPEM6",131,0)
 ; PTR - pointer to #344.3
"RTN","RCDPEM6",132,0)
 ; RTRNDT - Date EFT returned
"RTN","RCDPEM6",133,0)
 ; USER - User who completed the transaction
"RTN","RCDPEM6",134,0)
 ; DEPNO - Deposit # of EFT
"RTN","RCDPEM6",135,0)
 ;
"RTN","RCDPEM6",136,0)
 S RCRD(0)=$G(^RCY(344.31,EFTIEN,0)),RCRD(3)=$G(^(3))
"RTN","RCDPEM6",137,0)
 S USER=$$NAME^XUSER($P(RCRD(3),U),"F")
"RTN","RCDPEM6",138,0)
 S RTRNDT=$$FMTE^XLFDT($P(^RCY(344.31,EFTIEN,3),U,2),2)
"RTN","RCDPEM6",139,0)
 S JUST=$P(RCRD(3),U,3)
"RTN","RCDPEM6",140,0)
 S PAYER=$P(RCRD(0),U,2) S:PAYER="" PAYER="Unknown Payer"
"RTN","RCDPEM6",141,0)
 S TRACE=$P(RCRD(0),U,4),AMT=$P(RCRD(0),U,7)
"RTN","RCDPEM6",142,0)
 S PTR=+$P(RCRD(0),U)
"RTN","RCDPEM6",143,0)
 ; EDI LOCKBOX DEPOSIT (#344.3), (#.06) DEPOSIT NUMBER [6F]
"RTN","RCDPEM6",144,0)
 S:PTR>0 DEPNO=$P($G(^RCY(344.3,PTR,0)),U,6)
"RTN","RCDPEM6",145,0)
 S:DEPNO="" DEPNO="Unknown"
"RTN","RCDPEM6",146,0)
 S ^TMP($J,"RC DUP EFT",EFTIEN)=DEPNO_"^"_PAYER_"^"_TRACE_"^"_AMT_"^"_RTRNDT_"^"_USER_"^"_JUST
"RTN","RCDPEM6",147,0)
 Q
"RTN","RCDPEM6",148,0)
 ;
"RTN","RCDPEM6",149,0)
HDRBLD ; create the report header
"RTN","RCDPEM6",150,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM6",151,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM6",152,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM6",153,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM6",154,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM6",155,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM6",156,0)
 ; INPUT: 
"RTN","RCDPEM6",157,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM6",158,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM6",159,0)
 ;   RCDTRNG - selected dates
"RTN","RCDPEM6",160,0)
 ;
"RTN","RCDPEM6",161,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM6",162,0)
 ;
"RTN","RCDPEM6",163,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM6",164,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM6",165,0)
 .S RCHDR(1)="DEPOSIT NUMBER^PAYER^TRACE NUMBER^AMOUNT^DATE REMOVED^USER^JUSTIFICATION"
"RTN","RCDPEM6",166,0)
 ;
"RTN","RCDPEM6",167,0)
 N DIV,HCNT,Y
"RTN","RCDPEM6",168,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM6",169,0)
 ;
"RTN","RCDPEM6",170,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM6",171,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y_""            Page: ""_RCPGNUM"
"RTN","RCDPEM6",172,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM6",173,0)
 ;
"RTN","RCDPEM6",174,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM6",175,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM6",176,0)
 S Y="Date Range: "_Y("1ST")_" - "_$$FMTE^XLFDT(Y("LST"),"2Z")_" (DATE EFT REMOVAL)"
"RTN","RCDPEM6",177,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM6",178,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",179,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM6",180,0)
 I $G(RCLSTMGR) S HCNT=HCNT+1,RCHDR(HCNT)="",HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",181,0)
 S Y=$$PAD^RCDPEARL(" Deposit#",16)_"Trace #",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",182,0)
 S Y=$$PAD^RCDPEARL($J(" ",6)_"Payer Name",28),Y=Y_"Date/Time",Y=$$PAD^RCDPEARL(Y,50)_"User Who"
"RTN","RCDPEM6",183,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",184,0)
 S Y=$J(" ",16)_"Amount",Y=$$PAD^RCDPEARL(Y,28)_"Removed",Y=$$PAD^RCDPEARL(Y,50)_"Removed"
"RTN","RCDPEM6",185,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",186,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",187,0)
 ;
"RTN","RCDPEM6",188,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEM6",189,0)
 Q
"RTN","RCDPEM6",190,0)
 ;
"RTN","RCDPEM6",191,0)
HDRLM ; create the Listman Screen header section
"RTN","RCDPEM6",192,0)
 ; returns RCHDR
"RTN","RCDPEM6",193,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM6",194,0)
 ; INPUT: 
"RTN","RCDPEM6",195,0)
 ;   RCDTRNG - selected dates
"RTN","RCDPEM6",196,0)
 ;
"RTN","RCDPEM6",197,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM6",198,0)
 ;
"RTN","RCDPEM6",199,0)
 N DIV,HCNT,Y
"RTN","RCDPEM6",200,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM6",201,0)
 ;
"RTN","RCDPEM6",202,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM6",203,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM6",204,0)
 S Y="Date Range: "_Y("1ST")_" - "_$$FMTE^XLFDT(Y("LST"),"2Z")_" (DATE EFT REMOVAL)"
"RTN","RCDPEM6",205,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",206,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",207,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM6",208,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",209,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",210,0)
 S Y=$$PAD^RCDPEARL(" Deposit#",16)_"Trace #",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",211,0)
 S Y=$$PAD^RCDPEARL($J(" ",6)_"Payer Name",28),Y=Y_"Date/Time",Y=$$PAD^RCDPEARL(Y,50)_"User Who"
"RTN","RCDPEM6",212,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",213,0)
 S Y=$J(" ",16)_"Amount",Y=$$PAD^RCDPEARL(Y,28)_"Removed",Y=$$PAD^RCDPEARL(Y,50)_"Removed"
"RTN","RCDPEM6",214,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",215,0)
 ;
"RTN","RCDPEM6",216,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEM6",217,0)
 Q
"RTN","RCDPEM6",218,0)
 ;
"RTN","RCDPEM6",219,0)
 ; extrinsic variable, header text
"RTN","RCDPEM6",220,0)
HDRNM() Q "Duplicate EFT Deposits - Audit Report"
"RTN","RCDPEM6",221,0)
 ;
"RTN","RCDPEM6",222,0)
EXIT ;
"RTN","RCDPEM6",223,0)
 D ^%ZISC
"RTN","RCDPEM6",224,0)
 K ^TMP($J,"RC DUP EFT")  ; clean up
"RTN","RCDPEM6",225,0)
 Q
"RTN","RCDPEM6",226,0)
 ;
"RTN","RCDPEM6",227,0)
INFO ; Useful Info for Excel capture
"RTN","RCDPEM6",228,0)
 N SP S SP=$J(" ",10)  ; spaces
"RTN","RCDPEM6",229,0)
 W !!!,SP_"Before continuing, please set up your terminal to capture the"
"RTN","RCDPEM6",230,0)
 W !,SP_"report data as this report may take a while to run."
"RTN","RCDPEM6",231,0)
 W !!,SP_"To avoid undesired wrapping of the data saved to the"
"RTN","RCDPEM6",232,0)
 W !,SP_"file, please enter '0;256;999' at the 'DEVICE:' prompt."
"RTN","RCDPEM6",233,0)
 W !!,SP_"It may be necessary to set the terminal's display width"
"RTN","RCDPEM6",234,0)
 W !,SP_"to 256 characters, which can be performed by selecting the"
"RTN","RCDPEM6",235,0)
 W !,SP_"Display option located within the 'Setup' menu on the"
"RTN","RCDPEM6",236,0)
 W !,SP_"tool bar of the terminal emulation software (e.g. KEA,"
"RTN","RCDPEM6",237,0)
 W !,SP_"Reflection, or Smarterm).",!!
"RTN","RCDPEM6",238,0)
 Q
"RTN","RCDPEM6",239,0)
 ;
"RTN","RCDPEM6",240,0)
WP(JC) ; format justification comments
"RTN","RCDPEM6",241,0)
 ; JC - Justification Comment
"RTN","RCDPEM6",242,0)
 I JC="" Q
"RTN","RCDPEM6",243,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM6",244,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM6",245,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM6",246,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM6",247,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM6",248,0)
 F I=1:1:PCS D
"RTN","RCDPEM6",249,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM6",250,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM6",251,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM6",252,0)
 ;
"RTN","RCDPEM6",253,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",254,0)
 Q
"RTN","RCDPEM6",255,0)
 ;
"RTN","RCDPEM6",256,0)
NOW() ;function, Returns current date/time in format mm/dd/yy@hh:mm:ss
"RTN","RCDPEM6",257,0)
 Q $$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEM6",258,0)
 ;
"RTN","RCDPEM7")
0^47^B44920512
"RTN","RCDPEM7",1,0)
RCDPEM7 ;OIFO-BAYPINES/PJH - OVERDUE EFT AND ERA BULLETINS ;Jun 06, 2014@19:11:19
"RTN","RCDPEM7",2,0)
 ;;4.5;Accounts Receivable;**276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM7",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM7",4,0)
 ;
"RTN","RCDPEM7",5,0)
EN ; Main entry point for overdue EFT/ERA bulletins
"RTN","RCDPEM7",6,0)
 ;
"RTN","RCDPEM7",7,0)
 N TODAY,ERACNT,ERATOT,ERA1CNT,ERA1TOT,EFTCNT,EFTTOT,RCPROG
"RTN","RCDPEM7",8,0)
 ;Clear workfiles
"RTN","RCDPEM7",9,0)
 S RCPROG="RCDPEM7" K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",10,0)
 ;Set counters and totals
"RTN","RCDPEM7",11,0)
 S (EFTCNT,ERACNT,ERA1CNT,EFTTOT,ERATOT,ERA1TOT)=0
"RTN","RCDPEM7",12,0)
 ;Cuttoff of 12:00 am today
"RTN","RCDPEM7",13,0)
 S TODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPEM7",14,0)
 ;
"RTN","RCDPEM7",15,0)
 ;Scan for overdue ERA and unposted ERA
"RTN","RCDPEM7",16,0)
 D ERASCAN
"RTN","RCDPEM7",17,0)
 ;Scan for overdue EFT
"RTN","RCDPEM7",18,0)
 D EFTSCAN
"RTN","RCDPEM7",19,0)
 ;Bulletins
"RTN","RCDPEM7",20,0)
 D BULLETIN
"RTN","RCDPEM7",21,0)
 ;Clear workfiles
"RTN","RCDPEM7",22,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",23,0)
 Q
"RTN","RCDPEM7",24,0)
 ;
"RTN","RCDPEM7",25,0)
ERASCAN ;Scan ERA
"RTN","RCDPEM7",26,0)
 N AMT,ERAIEN,REC0,SUB,STATUS,FDATE,PNAME
"RTN","RCDPEM7",27,0)
 ;Scan for unmatched ERA
"RTN","RCDPEM7",28,0)
 S ERAIEN=0,STATUS=0,SUB="ERA"
"RTN","RCDPEM7",29,0)
 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",30,0)
 .S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",31,0)
 .;Get ERA file date/time
"RTN","RCDPEM7",32,0)
 .S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",33,0)
 .;Ignore if <31 days overdue
"RTN","RCDPEM7",34,0)
 .Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",35,0)
 .;Trace, Payer Name and Amount
"RTN","RCDPEM7",36,0)
 .S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",37,0)
 .I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",38,0)
 .;Update count and totals
"RTN","RCDPEM7",39,0)
 .S ERACNT=ERACNT+1,ERATOT=ERATOT+AMT
"RTN","RCDPEM7",40,0)
 .;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",41,0)
 .S ^TMP(RCPROG,$J,"ERA",ERACNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",42,0)
 ;
"RTN","RCDPEM7",43,0)
 ;Scan for Matched/Unposted ERA
"RTN","RCDPEM7",44,0)
 S SUB="ERA1"
"RTN","RCDPEM7",45,0)
 F STATUS=-1,1,2,3 D
"RTN","RCDPEM7",46,0)
 .S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",47,0)
 ..S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",48,0)
 ..;Get ERA file date/time
"RTN","RCDPEM7",49,0)
 ..S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",50,0)
 ..;Ignore if <31 days overdue
"RTN","RCDPEM7",51,0)
 ..Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",52,0)
 ..;Ignore if not unposted posted
"RTN","RCDPEM7",53,0)
 ..Q:$P($G(^RCY(344.4,ERAIEN,0)),U,14)>0
"RTN","RCDPEM7",54,0)
 ..;Payer Name and Amount
"RTN","RCDPEM7",55,0)
 ..S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",56,0)
 ..I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",57,0)
 ..;Update count and totals
"RTN","RCDPEM7",58,0)
 ..S ERA1CNT=ERA1CNT+1,ERA1TOT=ERA1TOT+AMT
"RTN","RCDPEM7",59,0)
 ..;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",60,0)
 ..S ^TMP(RCPROG,$J,"ERA1",ERA1CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",61,0)
 ..Q
"RTN","RCDPEM7",62,0)
 .Q
"RTN","RCDPEM7",63,0)
 Q
"RTN","RCDPEM7",64,0)
 ;
"RTN","RCDPEM7",65,0)
EFTSCAN ;Scan EFT
"RTN","RCDPEM7",66,0)
 N DEPN,EFTIEN,IEN3443,EFTDATE,TRACE,REC0,REC31,STATUS,PAYER,DEPAMT
"RTN","RCDPEM7",67,0)
 ;Scan for unmatched EFT
"RTN","RCDPEM7",68,0)
 S EFTIEN=0,STATUS=0
"RTN","RCDPEM7",69,0)
 F  S EFTIEN=$O(^RCY(344.31,"AMATCH",STATUS,EFTIEN)) Q:'EFTIEN  D
"RTN","RCDPEM7",70,0)
 .S REC31=$G(^RCY(344.31,EFTIEN,0))
"RTN","RCDPEM7",71,0)
 .;Get pointer to EFT file
"RTN","RCDPEM7",72,0)
 .S IEN3443=$P(REC31,U) Q:'IEN3443
"RTN","RCDPEM7",73,0)
 .S REC0=$G(^RCY(344.3,IEN3443,0))
"RTN","RCDPEM7",74,0)
 .;Get EFT file date
"RTN","RCDPEM7",75,0)
 .S EFTDATE=$P(REC0,U,2) Q:'EFTDATE
"RTN","RCDPEM7",76,0)
 .;Ignore if <15 days overdue
"RTN","RCDPEM7",77,0)
 .Q:$$FMDIFF^XLFDT(TODAY,EFTDATE,1)<15
"RTN","RCDPEM7",78,0)
 .;Deposit number and payment amount
"RTN","RCDPEM7",79,0)
 .S DEPN=$P(REC0,U,6),DEPAMT=$P(REC31,U,7)
"RTN","RCDPEM7",80,0)
 .;Payer ID and Trace from EFT detail file
"RTN","RCDPEM7",81,0)
 .S PAYER=$P(REC31,U,2),TRACE=$P(REC31,U,4) S:PAYER="" PAYER="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEM7",82,0)
 .;If payer and trace combined are >40 truncate payer name first
"RTN","RCDPEM7",83,0)
 .I $L(PAYER_TRACE)>40 D
"RTN","RCDPEM7",84,0)
 ..I $L(PAYER)>20 S PAYER=$E(PAYER,1,20) ; limit size of the name
"RTN","RCDPEM7",85,0)
 ..Q:$L(PAYER_TRACE)<41
"RTN","RCDPEM7",86,0)
 ..S TRACE=$E(TRACE,1,20) ; limit size of the trace
"RTN","RCDPEM7",87,0)
 .;Update count and totals
"RTN","RCDPEM7",88,0)
 .S EFTCNT=EFTCNT+1,EFTTOT=EFTTOT+DEPAMT
"RTN","RCDPEM7",89,0)
 .;Save Deposit No, Receipt, Payer ID, EFT Date and Deposit Amount
"RTN","RCDPEM7",90,0)
 .S ^TMP(RCPROG,$J,"EFT",EFTCNT)=$$EFTL(DEPN,TRACE,PAYER,EFTDATE,DEPAMT)
"RTN","RCDPEM7",91,0)
 Q
"RTN","RCDPEM7",92,0)
 ;
"RTN","RCDPEM7",93,0)
BULLETIN ;Create bulletins only if overdue EFT/ERA found
"RTN","RCDPEM7",94,0)
 ;
"RTN","RCDPEM7",95,0)
 N ARRAY,SBJ,SUB,CNT,CNT1,RCPROG1,GLB
"RTN","RCDPEM7",96,0)
 S RCPROG1="RCDPEM7A",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEM7",97,0)
 ;
"RTN","RCDPEM7",98,0)
 ;Unmatched ERA bulletins
"RTN","RCDPEM7",99,0)
 I ERACNT D
"RTN","RCDPEM7",100,0)
 .;Build header
"RTN","RCDPEM7",101,0)
 .S SUB="ERA" K @GLB
"RTN","RCDPEM7",102,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-Unmatched ERAs > 30 days"
"RTN","RCDPEM7",103,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have not yet been"
"RTN","RCDPEM7",104,0)
 .S @GLB@(2)="matched."
"RTN","RCDPEM7",105,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",106,0)
 .S @GLB@(4)="Total # of ERAs - "_ERACNT
"RTN","RCDPEM7",107,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERATOT,",",2)
"RTN","RCDPEM7",108,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",109,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",110,0)
 .;
"RTN","RCDPEM7",111,0)
 .;Move unmatched ERA search findings into message
"RTN","RCDPEM7",112,0)
 .S CNT=0,CNT1=8,SUB="ERA"
"RTN","RCDPEM7",113,0)
 .F  S CNT=$O(^TMP(RCPROG,$J,SUB,CNT)) Q:'CNT  D
"RTN","RCDPEM7",114,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,CNT)
"RTN","RCDPEM7",115,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",116,0)
 .D SEND
"RTN","RCDPEM7",117,0)
 .K @GLB
"RTN","RCDPEM7",118,0)
 ;
"RTN","RCDPEM7",119,0)
 ;Unposted ERA bulletins
"RTN","RCDPEM7",120,0)
 I ERA1CNT D
"RTN","RCDPEM7",121,0)
 .;Build header
"RTN","RCDPEM7",122,0)
 .S SUB="ERA1" K @GLB
"RTN","RCDPEM7",123,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-Matched/Not Posted ERAs > 30 days"
"RTN","RCDPEM7",124,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",125,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",126,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",127,0)
 .S @GLB@(4)="Total # of ERAs - "_ERA1CNT
"RTN","RCDPEM7",128,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA1TOT,",",2)
"RTN","RCDPEM7",129,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",130,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",131,0)
 .;
"RTN","RCDPEM7",132,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",133,0)
 .S CNT=0,CNT1=8
"RTN","RCDPEM7",134,0)
 .F  S CNT=$O(^TMP(RCPROG,$J,SUB,CNT)) Q:'CNT  D
"RTN","RCDPEM7",135,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,CNT)
"RTN","RCDPEM7",136,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",137,0)
 .D SEND
"RTN","RCDPEM7",138,0)
 .K @GLB
"RTN","RCDPEM7",139,0)
 ;
"RTN","RCDPEM7",140,0)
 ;Unmatched EFT bulletins
"RTN","RCDPEM7",141,0)
 I EFTCNT D
"RTN","RCDPEM7",142,0)
 .;Build header
"RTN","RCDPEM7",143,0)
 .S SUB="EFT" K @GLB
"RTN","RCDPEM7",144,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFTs > 14 days"
"RTN","RCDPEM7",145,0)
 .S @GLB@(1)="The following EFTs were received more than 14 days ago and have not yet"
"RTN","RCDPEM7",146,0)
 .S @GLB@(2)="been matched."
"RTN","RCDPEM7",147,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",148,0)
 .S @GLB@(4)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",149,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(EFTTOT,",",2)
"RTN","RCDPEM7",150,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",151,0)
 .S @GLB@(7)="DEPOSIT#   PAYER NAME/TRACE#                         EFT DATE    DEPOSIT AMT"
"RTN","RCDPEM7",152,0)
 .;
"RTN","RCDPEM7",153,0)
 .;Move EFT search findings into message
"RTN","RCDPEM7",154,0)
 .S CNT=0,CNT1=8,SUB="EFT"
"RTN","RCDPEM7",155,0)
 .F  S CNT=$O(^TMP(RCPROG,$J,SUB,CNT)) Q:'CNT  D
"RTN","RCDPEM7",156,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,CNT)
"RTN","RCDPEM7",157,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",158,0)
 .D SEND
"RTN","RCDPEM7",159,0)
 .K @GLB
"RTN","RCDPEM7",160,0)
 Q
"RTN","RCDPEM7",161,0)
 ;
"RTN","RCDPEM7",162,0)
SEND ;Transmit mail message
"RTN","RCDPEM7",163,0)
 N XMDUZ,XMTEXT,XMSUB,XMY,XMINSTR
"RTN","RCDPEM7",164,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE AUDIT")=""
"RTN","RCDPEM7",165,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM7",166,0)
 S XMINSTR("FLAGS")="P"
"RTN","RCDPEM7",167,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEM7",168,0)
 Q
"RTN","RCDPEM7",169,0)
 ;
"RTN","RCDPEM7",170,0)
ERAL(X1,X2,X3,X4) ;Format ERA Message line
"RTN","RCDPEM7",171,0)
 N SPACE
"RTN","RCDPEM7",172,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",173,0)
 S X1=X1_$E(SPACE,1,12-$L(X1))
"RTN","RCDPEM7",174,0)
 S X2=X1_$E(X2,1,43)_$E(SPACE,1,43-$L(X2))
"RTN","RCDPEM7",175,0)
 S X3=$$FMTE^XLFDT(X3,"2D")
"RTN","RCDPEM7",176,0)
 S X4="$"_$FN(X4,",",2)
"RTN","RCDPEM7",177,0)
 Q X2_$J(X3,8)_$J(X4,15)
"RTN","RCDPEM7",178,0)
 ;
"RTN","RCDPEM7",179,0)
EFTL(X1,X2,X3,X4,X5) ;Format EFT Message line
"RTN","RCDPEM7",180,0)
 N SPACE
"RTN","RCDPEM7",181,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",182,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))_" "
"RTN","RCDPEM7",183,0)
 S X2=X3_"/"_X2 ;Payer and Trace
"RTN","RCDPEM7",184,0)
 S X2=X1_$E(X2,1,41)_$E(SPACE,1,42-$L(X2))
"RTN","RCDPEM7",185,0)
 S X4=$$FMTE^XLFDT(X4,"2D")
"RTN","RCDPEM7",186,0)
 S X5="$"_$FN(X5,",",2)
"RTN","RCDPEM7",187,0)
 Q X2_$J(X4,8)_$J(X5,15)
"RTN","RCDPEM8")
0^48^B32922579
"RTN","RCDPEM8",1,0)
RCDPEM8 ;OIFO-BAYPINES/PJH - EOB MOVE/COPY BULLETINS ;Jun 06, 2014@19:11:19
"RTN","RCDPEM8",2,0)
 ;;4.5;Accounts Receivable;**276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEM8",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM8",4,0)
 ;
"RTN","RCDPEM8",5,0)
EN ; Main entry point for Moved/Copied EOB bulletins
"RTN","RCDPEM8",6,0)
 ;
"RTN","RCDPEM8",7,0)
 ; Integration Agreement IA 451 allows read of file #361.1 from AR
"RTN","RCDPEM8",8,0)
 ;
"RTN","RCDPEM8",9,0)
 N EOBCNT,RCPROG
"RTN","RCDPEM8",10,0)
 ;Clear workfiles
"RTN","RCDPEM8",11,0)
 S RCPROG="RCDPEM8" K ^TMP(RCPROG,$J)
"RTN","RCDPEM8",12,0)
 ;Set count of EOB found
"RTN","RCDPEM8",13,0)
 S EOBCNT=0
"RTN","RCDPEM8",14,0)
 ;
"RTN","RCDPEM8",15,0)
 ;Scan for today's moved/copied EOB's
"RTN","RCDPEM8",16,0)
 D EOBSCAN
"RTN","RCDPEM8",17,0)
 ;-----
"RTN","RCDPEM8",18,0)
 ; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPEM8",19,0)
 ;Bulletin
"RTN","RCDPEM8",20,0)
 ;I EOBCNT D BULLETIN
"RTN","RCDPEM8",21,0)
 ;-----
"RTN","RCDPEM8",22,0)
 ;Clear workfiles
"RTN","RCDPEM8",23,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEM8",24,0)
 Q
"RTN","RCDPEM8",25,0)
 ;
"RTN","RCDPEM8",26,0)
EOBSCAN ;Scan EOB
"RTN","RCDPEM8",27,0)
 N CDATE,CNT,DONE,EOBIEN,IEN101,NOW
"RTN","RCDPEM8",28,0)
 ;Start day for scan is yesterday
"RTN","RCDPEM8",29,0)
 S NOW=$$NOW^XLFDT,CDATE=$$FMADD^XLFDT($P(NOW,"."),-1)
"RTN","RCDPEM8",30,0)
 ;Scan AEOB index for changed EOBs
"RTN","RCDPEM8",31,0)
 F  S CDATE=$O(^IBM(361.1,"AEOB",CDATE)) Q:'CDATE  D
"RTN","RCDPEM8",32,0)
 .;Check if change was over 24 hours ago
"RTN","RCDPEM8",33,0)
 .I $$FMDIFF^XLFDT(NOW,CDATE,2)>86400 Q
"RTN","RCDPEM8",34,0)
 .;Skip this transaction if all referenced claims are active
"RTN","RCDPEM8",35,0)
 .Q:'$$INACTIVE(CDATE)
"RTN","RCDPEM8",36,0)
 .;Otherwise save bulletin details for EOB's in the transaction
"RTN","RCDPEM8",37,0)
 .S EOBIEN="",CNT=0,EOBCNT=EOBCNT+1
"RTN","RCDPEM8",38,0)
 .F  S EOBIEN=$O(^IBM(361.1,"AEOB",CDATE,EOBIEN)) Q:'EOBIEN  D
"RTN","RCDPEM8",39,0)
 ..;Update counter
"RTN","RCDPEM8",40,0)
 ..S CNT=CNT+1
"RTN","RCDPEM8",41,0)
 ..S IEN101=$O(^IBM(361.1,"AEOB",CDATE,EOBIEN,"")) Q:'IEN101
"RTN","RCDPEM8",42,0)
 ..;Save to workfile
"RTN","RCDPEM8",43,0)
 ..D SAVE(CDATE,EOBIEN,IEN101,EOBCNT,CNT)
"RTN","RCDPEM8",44,0)
 Q
"RTN","RCDPEM8",45,0)
 ;
"RTN","RCDPEM8",46,0)
INACTIVE(CDATE) ;Search for any bill that is not ACTIVE
"RTN","RCDPEM8",47,0)
 N CBILL,FBILL,FOUND,REC101,SUB,SUB101
"RTN","RCDPEM8",48,0)
 S SUB=0,FOUND=0
"RTN","RCDPEM8",49,0)
 F  S SUB=$O(^IBM(361.1,"AEOB",CDATE,SUB)) Q:'SUB  D  Q:FOUND
"RTN","RCDPEM8",50,0)
 .S SUB101=0
"RTN","RCDPEM8",51,0)
 .F  S SUB101=$O(^IBM(361.1,"AEOB",CDATE,SUB,SUB101)) Q:'SUB101  D  Q:FOUND
"RTN","RCDPEM8",52,0)
 ..S REC101=$G(^IBM(361.1,SUB,101,SUB101,0))
"RTN","RCDPEM8",53,0)
 ..;From bill
"RTN","RCDPEM8",54,0)
 ..S FBILL=$P(REC101,U,4)
"RTN","RCDPEM8",55,0)
 ..I FBILL S FOUND=$$CHECK(FBILL) Q:FOUND
"RTN","RCDPEM8",56,0)
 ..;Current bill on EOB
"RTN","RCDPEM8",57,0)
 ..S CBILL=$P($G(^IBM(361.1,SUB,0)),U)
"RTN","RCDPEM8",58,0)
 ..;AR claim status
"RTN","RCDPEM8",59,0)
 ..I CBILL S FOUND=$$CHECK(CBILL)
"RTN","RCDPEM8",60,0)
 Q FOUND
"RTN","RCDPEM8",61,0)
 ;
"RTN","RCDPEM8",62,0)
CHECK(IEN430) ;Check claim status in AR
"RTN","RCDPEM8",63,0)
 I $$GET1^DIQ(430,IEN430,8)="ACTIVE" Q 0
"RTN","RCDPEM8",64,0)
 Q 1
"RTN","RCDPEM8",65,0)
 ;
"RTN","RCDPEM8",66,0)
SAVE(CDATE,EOBIEN,IEN101,EOBCNT,CNT) ;Put the data into the ^TMP global
"RTN","RCDPEM8",67,0)
 ; INPUTS: EOBIEN = ien of the EOB
"RTN","RCDPEM8",68,0)
 ;         IEN101 = ien of individual copy
"RTN","RCDPEM8",69,0)
 ;         EOBCNT = count of EOB found
"RTN","RCDPEM8",70,0)
 ;         CNT = count of claims within transaction
"RTN","RCDPEM8",71,0)
 ; RETURNS  : Builds each entry in the ^TMP global
"RTN","RCDPEM8",72,0)
 ;
"RTN","RCDPEM8",73,0)
 N BIEN,BEXT,DATE,DOS,PATIEN,PATNAM,PIEN,PEXT,PSQ,PSQEXT,REC0,STAT
"RTN","RCDPEM8",74,0)
 N REC101,ORIG,MODE
"RTN","RCDPEM8",75,0)
 ;Get EOB detail
"RTN","RCDPEM8",76,0)
 S REC0=$G(^IBM(361.1,EOBIEN,0))
"RTN","RCDPEM8",77,0)
 ;Bill pointer
"RTN","RCDPEM8",78,0)
 S BIEN=$P(REC0,U) Q:'BIEN
"RTN","RCDPEM8",79,0)
 ;Get audit detail
"RTN","RCDPEM8",80,0)
 S REC101=$G(^IBM(361.1,EOBIEN,101,IEN101,0))
"RTN","RCDPEM8",81,0)
 ;Mode and Original claim
"RTN","RCDPEM8",82,0)
 S ORIG=$P(REC101,U,4),MODE=$P(REC101,U,5)
"RTN","RCDPEM8",83,0)
 ;
"RTN","RCDPEM8",84,0)
 ;If transaction is a move the only EOB is on the new claim
"RTN","RCDPEM8",85,0)
 ;
"RTN","RCDPEM8",86,0)
 ;Create report line for original claim
"RTN","RCDPEM8",87,0)
 I MODE="M",ORIG D
"RTN","RCDPEM8",88,0)
 .N BIEN
"RTN","RCDPEM8",89,0)
 .S BIEN=ORIG D SAVE1 S CNT=CNT+1
"RTN","RCDPEM8",90,0)
 ;
"RTN","RCDPEM8",91,0)
 ;Save transaction for to bill
"RTN","RCDPEM8",92,0)
 D SAVE1
"RTN","RCDPEM8",93,0)
 Q
"RTN","RCDPEM8",94,0)
 ;
"RTN","RCDPEM8",95,0)
SAVE1 ;Save unformatted bill details into ^TMP
"RTN","RCDPEM8",96,0)
 ;
"RTN","RCDPEM8",97,0)
 ;Get Bill number from bill IEN
"RTN","RCDPEM8",98,0)
 S BEXT=$P($G(^PRCA(430,BIEN,0)),U)
"RTN","RCDPEM8",99,0)
 ;Patient IEN
"RTN","RCDPEM8",100,0)
 S PATIEN=$P($G(^DGCR(399,BIEN,0)),U,2)
"RTN","RCDPEM8",101,0)
 ;Patient Name
"RTN","RCDPEM8",102,0)
 S PATNAM=$$EXTERNAL^DILFD(399,.02,,PATIEN)
"RTN","RCDPEM8",103,0)
 ;DOS
"RTN","RCDPEM8",104,0)
 S DOS=$$FMTE^XLFDT($P($G(^DGCR(399,BIEN,0)),U,3),"2D")
"RTN","RCDPEM8",105,0)
 ;Payer
"RTN","RCDPEM8",106,0)
 S PIEN=$P(REC0,U,2)
"RTN","RCDPEM8",107,0)
 ;Payer external form
"RTN","RCDPEM8",108,0)
 S PEXT=$$EXTERNAL^DILFD(361.1,.02,,PIEN)
"RTN","RCDPEM8",109,0)
 ;If no payer name on EOB check AR claim
"RTN","RCDPEM8",110,0)
 I PEXT="" S PEXT=$$GET1^DIQ(430,BIEN,9)
"RTN","RCDPEM8",111,0)
 ;Truncate payer name to 18 characters
"RTN","RCDPEM8",112,0)
 S PEXT=$E(PEXT,1,18)
"RTN","RCDPEM8",113,0)
 ;Payer Sequence
"RTN","RCDPEM8",114,0)
 S PSQ=$P(REC0,U,15)
"RTN","RCDPEM8",115,0)
 ;Payer sequence - external
"RTN","RCDPEM8",116,0)
 S PSQEXT=$$EXTERNAL^DILFD(361.1,.15,,PSQ)
"RTN","RCDPEM8",117,0)
 ;Display sequence if not null
"RTN","RCDPEM8",118,0)
 S:PSQEXT]"" PEXT=PEXT_"/"_PSQEXT
"RTN","RCDPEM8",119,0)
 ;AR claim status
"RTN","RCDPEM8",120,0)
 S STAT=$$GET1^DIQ(430,BIEN,8)
"RTN","RCDPEM8",121,0)
 ;Date/Time EOB was moved/copied
"RTN","RCDPEM8",122,0)
 S DATE=$$FMTE^XLFDT(CDATE,"2S")
"RTN","RCDPEM8",123,0)
 ;
"RTN","RCDPEM8",124,0)
 S ^TMP(RCPROG,$J,EOBCNT,CNT)=DATE_U_BEXT_U_PATNAM_U_DOS_U_PEXT_U_STAT
"RTN","RCDPEM8",125,0)
 Q
"RTN","RCDPEM8",126,0)
 ;
"RTN","RCDPEM8",127,0)
BULLETIN ;Create bulletins only if moved/copied EOB found
"RTN","RCDPEM8",128,0)
 ;
"RTN","RCDPEM8",129,0)
 N ARRAY,BLANK,SBJ,SUB,SUBHDR,SUBHDR1,SUBHDR2,CNT,CNT1,RCPROG1,GLB
"RTN","RCDPEM8",130,0)
 N LINE,DET
"RTN","RCDPEM8",131,0)
 S RCPROG1="RCDPEM8A",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEM8",132,0)
 ;
"RTN","RCDPEM8",133,0)
 ;Compile Move/Copy Transactions Bulletin
"RTN","RCDPEM8",134,0)
 ;Build header
"RTN","RCDPEM8",135,0)
 K @GLB
"RTN","RCDPEM8",136,0)
 S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-Move/Copy Transactions"
"RTN","RCDPEM8",137,0)
 S @GLB@(1)="The listed Move/Copy transaction(s) were performed within the last 24 hours"
"RTN","RCDPEM8",138,0)
 S @GLB@(2)="and at least one of the claims in each of the transactions was NOT ACTIVE."
"RTN","RCDPEM8",139,0)
 S @GLB@(3)=" "
"RTN","RCDPEM8",140,0)
 S @GLB@(4)="Total # of transactions - "_EOBCNT
"RTN","RCDPEM8",141,0)
 S @GLB@(6)=" "
"RTN","RCDPEM8",142,0)
 S @GLB@(7)="BILL #       PATIENT             DOS         PAYER/SEQUENCE"
"RTN","RCDPEM8",143,0)
 S @GLB@(8)="   STATUS"
"RTN","RCDPEM8",144,0)
 S @GLB@(9)="----------------------------------------------------------------------------"
"RTN","RCDPEM8",145,0)
 ;
"RTN","RCDPEM8",146,0)
 ;Sub headers
"RTN","RCDPEM8",147,0)
 S SUBHDR="Transaction "
"RTN","RCDPEM8",148,0)
 S SUBHDR1=" - 'MOVE/COPY FROM' bill "
"RTN","RCDPEM8",149,0)
 S SUBHDR2=" 'MOVE/COPY TO' bill(s)"
"RTN","RCDPEM8",150,0)
 S BLANK=$J("",75)
"RTN","RCDPEM8",151,0)
 ;
"RTN","RCDPEM8",152,0)
 ;Move EOB search findings into message
"RTN","RCDPEM8",153,0)
 S EOBCNT="",CNT1=9
"RTN","RCDPEM8",154,0)
 F  S EOBCNT=$O(^TMP(RCPROG,$J,EOBCNT)) Q:'EOBCNT  D
"RTN","RCDPEM8",155,0)
 .S CNT=0
"RTN","RCDPEM8",156,0)
 .F  S CNT=$O(^TMP(RCPROG,$J,EOBCNT,CNT)) Q:'CNT  D
"RTN","RCDPEM8",157,0)
 ..;EOB data from scan
"RTN","RCDPEM8",158,0)
 ..S DET=$G(^TMP(RCPROG,$J,EOBCNT,CNT))
"RTN","RCDPEM8",159,0)
 ..;Check if 'From' or 'To'
"RTN","RCDPEM8",160,0)
 ..I CNT=1 S LINE=SUBHDR_EOBCNT_SUBHDR1_$P(DET,U)
"RTN","RCDPEM8",161,0)
 ..E  S LINE=SUBHDR2
"RTN","RCDPEM8",162,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=LINE
"RTN","RCDPEM8",163,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=$$EOBL(DET)
"RTN","RCDPEM8",164,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)="   "_$P(DET,U,6)
"RTN","RCDPEM8",165,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=BLANK
"RTN","RCDPEM8",166,0)
 S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM8",167,0)
 ;
"RTN","RCDPEM8",168,0)
 ;Transmit mail message
"RTN","RCDPEM8",169,0)
 N XMDUZ,XMTEXT,XMSUB,XMY,XMINSTR
"RTN","RCDPEM8",170,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE MOVE COPY")=""
"RTN","RCDPEM8",171,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM8",172,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEM8",173,0)
 K @GLB
"RTN","RCDPEM8",174,0)
 Q
"RTN","RCDPEM8",175,0)
 ;
"RTN","RCDPEM8",176,0)
 ;
"RTN","RCDPEM8",177,0)
EOBL(DET) ;Format EOB line
"RTN","RCDPEM8",178,0)
 N BILL,DOS,PATIENT,PAYER,OUTPUT,SP
"RTN","RCDPEM8",179,0)
 S BILL=$P(DET,U,2),PATIENT=$P(DET,U,3),DOS=$P(DET,U,4),SP=$J("",80)
"RTN","RCDPEM8",180,0)
 S PAYER=$P(DET,U,5)
"RTN","RCDPEM8",181,0)
 ;Truncate patient name
"RTN","RCDPEM8",182,0)
 S PATIENT=$E(PATIENT,1,19)
"RTN","RCDPEM8",183,0)
 ;Bill number
"RTN","RCDPEM8",184,0)
 S OUTPUT=BILL_$E(SP,1,12-$L(BILL))
"RTN","RCDPEM8",185,0)
 ;Patient
"RTN","RCDPEM8",186,0)
 S OUTPUT=OUTPUT_PATIENT_$E(SP,1,20-$L(PATIENT))
"RTN","RCDPEM8",187,0)
 ;DOS
"RTN","RCDPEM8",188,0)
 S OUTPUT=OUTPUT_DOS_$E(SP,1,13-$L(DOS))
"RTN","RCDPEM8",189,0)
 ;Payer
"RTN","RCDPEM8",190,0)
 S OUTPUT=OUTPUT_PAYER
"RTN","RCDPEM8",191,0)
 ;
"RTN","RCDPEM8",192,0)
 Q OUTPUT
"RTN","RCDPEMA")
0^55^B22679834
"RTN","RCDPEMA",1,0)
RCDPEMA ;ALB/PJH - AUTO-POSTING RECEIPT CREATION ;Oct 15, 2014@12:37:52
"RTN","RCDPEMA",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEMA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMA",4,0)
 ;
"RTN","RCDPEMA",5,0)
RCPTDET(RCRZ,RECTDA1,RCLINES,RCER) ; Adds detail to a receipt based on file 344.49 and exceptions in array RCLINES
"RTN","RCDPEMA",6,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEMA",7,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEMA",8,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEMA",9,0)
 ; RCLINES = array to indicate which scratchpad lines can be posted (assigned a receipt)
"RTN","RCDPEMA",10,0)
 ;
"RTN","RCDPEMA",11,0)
 N DA,DIE,DR,Q,RCLINE,RCQ,RCR,RCSPL,RCTRANDA,RCZ0,SEQLINES,RCSEQ,X,Y,Z,Z0,Z1
"RTN","RCDPEMA",12,0)
 ;
"RTN","RCDPEMA",13,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEMA",14,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0)),RCSEQ=$P(RCZ0,U)
"RTN","RCDPEMA",15,0)
 . ;Check first line for prefix to see if ERA line is valid for auto-post
"RTN","RCDPEMA",16,0)
 . I RCSEQ?1N.N,$P(RCZ0,U,9),$P($G(RCLINES($P(RCZ0,U,9))),U) S SEQLINES(RCSEQ)=""
"RTN","RCDPEMA",17,0)
 . ;Skip WORKLIST lines that do not need associated receipt detail
"RTN","RCDPEMA",18,0)
 . Q:'$D(SEQLINES(RCSEQ\1))
"RTN","RCDPEMA",19,0)
 . I RCSEQ'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEMA",20,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEMA",21,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEMA",22,0)
 . ;
"RTN","RCDPEMA",23,0)
 . I 'RCTRANDA D  Q  ; Error adding receipt detail
"RTN","RCDPEMA",24,0)
 .. S RCER(1)=$$SETERR^RCDPEM0() S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEMA",25,0)
 . ;
"RTN","RCDPEMA",26,0)
 . ;Store receipt line detail
"RTN","RCDPEMA",27,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEMA",28,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEMA",29,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEMA",30,0)
 .; Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEMA",31,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEMA",32,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEMA",33,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEMA",34,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEMA",35,0)
 .. Q:'Q
"RTN","RCDPEMA",36,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspense
"RTN","RCDPEMA",37,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEMA",38,0)
 .. E  D
"RTN","RCDPEMA",39,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEMA",40,0)
 ;
"RTN","RCDPEMA",41,0)
 Q
"RTN","RCDPEMA",42,0)
 ;
"RTN","RCDPEMA",43,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split to single claim
"RTN","RCDPEMA",44,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEMA",45,0)
 ;Find split line in scratchpad
"RTN","RCDPEMA",46,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEMA",47,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEMA",48,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEMA",49,0)
 ;New claim number
"RTN","RCDPEMA",50,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEMA",51,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEMA",52,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEMA",53,0)
 ;Otherwise this is not a split
"RTN","RCDPEMA",54,0)
 Q 0
"RTN","RCDPEMA",55,0)
 ;
"RTN","RCDPEMA",56,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEMA",57,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEMA",58,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEMA",59,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEMA",60,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEMA",61,0)
 ;
"RTN","RCDPEMA",62,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEMA",63,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEMA",64,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEMA",65,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEMA",66,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEMA",67,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEMA",68,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEMA",69,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEMA",70,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEMA",71,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEMA",72,0)
 I $P(RCUP,U,2)["**ADJ" S DR=DR_"1.02////"_$E($S(RCCOM'="":RCCOM_"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA"),1,60)_";"
"RTN","RCDPEMA",73,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEMA",74,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEMA",75,0)
 D ^DIE
"RTN","RCDPEMA",76,0)
 Q
"RTN","RCDPEMA",77,0)
 ;
"RTN","RCDPEMA",78,0)
BLDRCPT(RCERA) ; Create a receipt for Auto Posting ERA with multiple Receipts - alpha char at the 10th character
"RTN","RCDPEMA",79,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",80,0)
 ; input - RCERA = Pointer to 344.4
"RTN","RCDPEMA",81,0)
 ; returns new IEN on success, else zero
"RTN","RCDPEMA",82,0)
 ; called by auto-post process (RCDPEAP)
"RTN","RCDPEMA",83,0)
 ;
"RTN","RCDPEMA",84,0)
 N RECEIPT,TYPE,LASTREC
"RTN","RCDPEMA",85,0)
 S TYPE=$E($G(^RC(341.1,+$O(^RC(341.1,"AC",14,0)),0)))  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPEMA",86,0)
 ; retrieve the last receipt recorded on the ERA (if it exists)
"RTN","RCDPEMA",87,0)
 S LASTREC=$$GETREC(RCERA)
"RTN","RCDPEMA",88,0)
 ; Make sure last receit for the ERA is 10-chars long and the last char is between A - Y (can't be Z),
"RTN","RCDPEMA",89,0)
 ; Otherwise grab a new number and append "A"
"RTN","RCDPEMA",90,0)
 I LASTREC'="",$L(LASTREC)=10,$A($E(LASTREC,10))>64,$A($E(LASTREC,10))<90 D
"RTN","RCDPEMA",91,0)
 . S RECEIPT=$E(LASTREC,1,9)_$C($A($E(LASTREC,10))+1)
"RTN","RCDPEMA",92,0)
 E  D
"RTN","RCDPEMA",93,0)
 . S RECEIPT=$$NEXT^RCDPUREC(TYPE_$E(DT,2,7))_"A"
"RTN","RCDPEMA",94,0)
 ;
"RTN","RCDPEMA",95,0)
 ; Prevents duplicate Receipt # entries from being filed
"RTN","RCDPEMA",96,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT))  D
"RTN","RCDPEMA",97,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)_$E(RECEIPT,8,9)_"A"
"RTN","RCDPEMA",98,0)
 ;
"RTN","RCDPEMA",99,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0  ; if LOCK timeout return zero
"RTN","RCDPEMA",100,0)
 ;
"RTN","RCDPEMA",101,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",102,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPEMA",103,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPEMA",104,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPEMA",105,0)
 ;  .04 = type of payment           
"RTN","RCDPEMA",106,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPEMA",107,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_DT_";.04////14;.14////1;"
"RTN","RCDPEMA",108,0)
 S X=RECEIPT
"RTN","RCDPEMA",109,0)
 D FILE^DICN
"RTN","RCDPEMA",110,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPEMA",111,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPEMA",112,0)
 Q 0  ; entry not created
"RTN","RCDPEMA",113,0)
 ;
"RTN","RCDPEMA",114,0)
GETREC(RCERA) ; returns the receipt number
"RTN","RCDPEMA",115,0)
 ; input - RCERA = ien of entry in 344.4
"RTN","RCDPEMA",116,0)
 ; output - returns the receipt number in external form
"RTN","RCDPEMA",117,0)
 N X,RECEIPT
"RTN","RCDPEMA",118,0)
 S RECEIPT=""
"RTN","RCDPEMA",119,0)
 S X=$O(^RCY(344.4,RCERA,1,"RECEIPT",""),-1)  ; get last RECEIPT ien from 344.41 subfile
"RTN","RCDPEMA",120,0)
 S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt  
"RTN","RCDPEMA",121,0)
 Q RECEIPT
"RTN","RCDPESP")
0^14^B100040879
"RTN","RCDPESP",1,0)
RCDPESP ;BIRM/EWL - ePayment Lockbox Site Parameters Definition - Files 344.61 & 344.6 ;Nov 19, 2014@15:26:16
"RTN","RCDPESP",2,0)
 ;;4.5;Accounts Receivable;**298**;Nov 11, 2013;Build 121
"RTN","RCDPESP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP",4,0)
 ;
"RTN","RCDPESP",5,0)
EN ; entry point for EDI Lockbox Parameters [RCDPE EDI LOCKBOX PARAMETERS]
"RTN","RCDPESP",6,0)
 N DA,DIC,DIE,DIR,DIRUT,DLAYGO,DR,DUOUT,X,Y  ; FileMan variables
"RTN","RCDPESP",7,0)
 ;
"RTN","RCDPESP",8,0)
 W !," Update AR Site Parameters",!
"RTN","RCDPESP",9,0)
 ;
"RTN","RCDPESP",10,0)
 S X="RCDPE AUTO DEC" I '$D(^XUSEC(X,DUZ)) W !!,"You do not hold the "_X_" security key." Q
"RTN","RCDPESP",11,0)
 ; Lock the parameter file
"RTN","RCDPESP",12,0)
 L +^RCY(344.61,1):DILOCKTM E  D  Q
"RTN","RCDPESP",13,0)
 .W !!," Another user is currently using the AR Site Parameters option."
"RTN","RCDPESP",14,0)
 .W !," Please try again later."
"RTN","RCDPESP",15,0)
 ;
"RTN","RCDPESP",16,0)
 ; Check parameter file
"RTN","RCDPESP",17,0)
 N FDAEDI,FDAPAYER,IEN,IENS,RCQUIT
"RTN","RCDPESP",18,0)
 ; FDAPAYER - FDA array for RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP",19,0)
 ; FDAEDI - FDA array for RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP",20,0)
 ; RCAUDVAL - audit data for RCDPE PARAMETER AUDIT file (#344.7)
"RTN","RCDPESP",21,0)
 ; IEN - entry #
"RTN","RCDPESP",22,0)
 ; IENS - IEN_comma
"RTN","RCDPESP",23,0)
 ; RCQUIT - exit flag
"RTN","RCDPESP",24,0)
 ;
"RTN","RCDPESP",25,0)
 ; function returns 1 on success
"RTN","RCDPESP",26,0)
 S Y=$$EDILOCK^RCMSITE  ; Update EDI Lockbox site parameters
"RTN","RCDPESP",27,0)
 I 'Y G ABORT  ; user entered '^'
"RTN","RCDPESP",28,0)
 S RCQUIT=0 W !
"RTN","RCDPESP",29,0)
 I '$D(^RCY(344.61,1,0)) W !,"There is a problem with the RCDPE PARAMETER file (#344.61)." G EXIT
"RTN","RCDPESP",30,0)
 ;
"RTN","RCDPESP",31,0)
 ;----------------------------------------------
"RTN","RCDPESP",32,0)
 ; Enable/disable auto-posting of medical claims
"RTN","RCDPESP",33,0)
 ;----------------------------------------------
"RTN","RCDPESP",34,0)
 N APMC,APMCT
"RTN","RCDPESP",35,0)
 ; APMC=AUTO POSTING OF MEDICAL CLAIMS ENABLED
"RTN","RCDPESP",36,0)
 ; APMCT=TEMP APMC
"RTN","RCDPESP",37,0)
 S APMCT=$$GET1^DIQ(344.61,"1,",.02,"I"),APMC=$S(APMCT=1:"Yes",APMCT=0:"No",1:"")
"RTN","RCDPESP",38,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APMC="":"Y",1:APMC)
"RTN","RCDPESP",39,0)
 S DIR("A")=$$GET1^DID(344.61,.02,,"TITLE")
"RTN","RCDPESP",40,0)
 S DIR("?")=$$GET1^DID(344.61,.02,,"HELP-PROMPT")
"RTN","RCDPESP",41,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",42,0)
 I APMCT'=Y D  ; user updated value
"RTN","RCDPESP",43,0)
 .S FDAEDI(344.61,"1,",.02)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",44,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"))
"RTN","RCDPESP",45,0)
 .S RCAUDVAL(1)="344.61^.02^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",46,0)
 ;
"RTN","RCDPESP",47,0)
 I Y=0 G RXPARMS
"RTN","RCDPESP",48,0)
 ;
"RTN","RCDPESP",49,0)
 ; Set/Reset payer exclusions for medical claim posting
"RTN","RCDPESP",50,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",51,0)
 D SETEXCL(1) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",52,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",53,0)
 W !
"RTN","RCDPESP",54,0)
 ;
"RTN","RCDPESP",55,0)
 ; Enable/disable auto-decrease of medical claims
"RTN","RCDPESP",56,0)
 N ADMC  ; ^DD(344.61,.03,0)="AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q"
"RTN","RCDPESP",57,0)
 K FDAEDI  ; used for FILE^DIE call
"RTN","RCDPESP",58,0)
 S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I")  ; get current value
"RTN","RCDPESP",59,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(ADMC=""!(ADMC=1):"Yes",1:"No")
"RTN","RCDPESP",60,0)
 S DIR("A")=$$GET1^DID(344.61,.03,,"TITLE")
"RTN","RCDPESP",61,0)
 S DIR("?")=$$GET1^DID(344.61,.03,,"HELP-PROMPT")
"RTN","RCDPESP",62,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",63,0)
 ; if user changed value, update and audit
"RTN","RCDPESP",64,0)
 S:ADMC'=Y FDAEDI(344.61,"1,",.03)=Y,RCAUDVAL(1)="344.61^.03^1^"_Y_U_ADMC
"RTN","RCDPESP",65,0)
 I Y=0 D  G RXPARMS  ; value set to No, update (if needed), go to Pharmacy params.
"RTN","RCDPESP",66,0)
 . D:$D(FDAEDI) FILE^DIE(,"FDAEDI"),AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",67,0)
 ;
"RTN","RCDPESP",68,0)
 ; Set number of days to wait before auto-decrease amount
"RTN","RCDPESP",69,0)
 N ADMT ; ^DD(344.61,.04,0) = AUTO-DECREASE MED DAYS DEFAULT
"RTN","RCDPESP",70,0)
 S ADMT=$$GET1^DIQ(344.61,"1,",.04)
"RTN","RCDPESP",71,0)
 K DIR S:ADMT]"" DIR("B")=ADMT
"RTN","RCDPESP",72,0)
 S (DIR("?"),DIR("??"))=$$GET1^DID(344.61,.04,,"HELP-PROMPT")
"RTN","RCDPESP",73,0)
 S DIR(0)="NA^0:7:0",DIR("A")=$$GET1^DID(344.61,.04,,"TITLE")
"RTN","RCDPESP",74,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",75,0)
 S:ADMT'=Y FDAEDI(344.61,"1,",.04)=Y,RCAUDVAL(2)="344.61^.04^1^"_Y_U_ADMT
"RTN","RCDPESP",76,0)
 ;
"RTN","RCDPESP",77,0)
 ; Set maximum amount for auto-decrease amount
"RTN","RCDPESP",78,0)
 N ADMA ; ^DD(344.61,.05,0)= AUTO-DECREASE MED AMT DEFAULT
"RTN","RCDPESP",79,0)
 S ADMA=$$GET1^DIQ(344.61,"1,",.05)
"RTN","RCDPESP",80,0)
 K DIR S:ADMA]"" DIR("B")=ADMA
"RTN","RCDPESP",81,0)
 S DIR("?")=$$GET1^DID(344.61,.05,,"HELP-PROMPT")
"RTN","RCDPESP",82,0)
 S DIR(0)="NA^1:1500:0",DIR("A")=$$GET1^DID(344.61,.05,,"TITLE")
"RTN","RCDPESP",83,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",84,0)
 S:ADMA'=Y FDAEDI(344.61,"1,",.05)=Y,RCAUDVAL(3)="344.61^.05^1^"_Y_U_ADMA
"RTN","RCDPESP",85,0)
 D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",86,0)
 D:$D(RCAUDVAL) AUDIT(.RCAUDVAL)
"RTN","RCDPESP",87,0)
 K RCAUDVAL
"RTN","RCDPESP",88,0)
 ;
"RTN","RCDPESP",89,0)
 ; Set/Reset payer exclusions for medical claim decrease
"RTN","RCDPESP",90,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",91,0)
 D SETEXCL(2) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",92,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",93,0)
 ; code falls through
"RTN","RCDPESP",94,0)
 ;
"RTN","RCDPESP",95,0)
RXPARMS ; branch here from above
"RTN","RCDPESP",96,0)
 ;------------------------
"RTN","RCDPESP",97,0)
 ; Dummy code for Pharmacy
"RTN","RCDPESP",98,0)
 ;------------------------
"RTN","RCDPESP",99,0)
 W !!,"* ENABLE AUTO-POSTING OF PHARMACY CLAIMS(Y/N): N *",!
"RTN","RCDPESP",100,0)
 ;
"RTN","RCDPESP",101,0)
 ; set MEDICAL EFT OVERRIDE ^DD(344.61,.06,0) = MEDICAL EFT POST PREVENT DAYS
"RTN","RCDPESP",102,0)
 N MEO S MEO=$$GET1^DIQ(344.61,"1,",.06)
"RTN","RCDPESP",103,0)
 K DIR S:MEO]"" DIR("B")=MEO
"RTN","RCDPESP",104,0)
 S DIR("?")=$$GET1^DID(344.61,.06,,"HELP-PROMPT")
"RTN","RCDPESP",105,0)
 S DIR(0)="NA^14:99:0",DIR("A")=$$GET1^DID(344.61,.06,,"TITLE")
"RTN","RCDPESP",106,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",107,0)
 I MEO'=Y D  ; update and audit
"RTN","RCDPESP",108,0)
 .S RCAUDVAL(1)="344.61^.06^1^"_Y_U_MEO
"RTN","RCDPESP",109,0)
 .S FDAEDI(344.61,"1,",.06)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",110,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",111,0)
 ;
"RTN","RCDPESP",112,0)
 ;----------------------------------------------
"RTN","RCDPESP",113,0)
 ; Set PHARMACY EFT OVERRIDE
"RTN","RCDPESP",114,0)
 ;----------------------------------------------
"RTN","RCDPESP",115,0)
 N PEO S PEO=$$GET1^DIQ(344.61,"1,",.07)
"RTN","RCDPESP",116,0)
 K DIR S:PEO]"" DIR("B")=PEO
"RTN","RCDPESP",117,0)
 S DIR("?")=$$GET1^DID(344.61,.07,,"HELP-PROMPT")
"RTN","RCDPESP",118,0)
 S DIR(0)="NA^21:999:0",DIR("A")=$$GET1^DID(344.61,.07,,"TITLE")
"RTN","RCDPESP",119,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",120,0)
 I PEO'=Y D  ; update and audit
"RTN","RCDPESP",121,0)
 .S RCAUDVAL(1)="344.61^.07^1^"_Y_U_PEO
"RTN","RCDPESP",122,0)
 .S FDAEDI(344.61,"1,",.07)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",123,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",124,0)
 ;
"RTN","RCDPESP",125,0)
 G EXIT
"RTN","RCDPESP",126,0)
 ;
"RTN","RCDPESP",127,0)
ABORT ; Called when user enters a '^' or times out
"RTN","RCDPESP",128,0)
 ; fall through to EXIT
"RTN","RCDPESP",129,0)
 ;
"RTN","RCDPESP",130,0)
EXIT ; unLOCK, ask user to press return, exit
"RTN","RCDPESP",131,0)
 L -^RCY(344.61,1)
"RTN","RCDPESP",132,0)
 D PAUSE
"RTN","RCDPESP",133,0)
 Q
"RTN","RCDPESP",134,0)
 ;
"RTN","RCDPESP",135,0)
PAUSE ; prompt user to press return
"RTN","RCDPESP",136,0)
 W ! N DIR
"RTN","RCDPESP",137,0)
 S DIR("T")=3,DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","RCDPESP",138,0)
 Q
"RTN","RCDPESP",139,0)
 ;
"RTN","RCDPESP",140,0)
EXCLLIST(TYP) ; CHOICE determines which exclusions to list
"RTN","RCDPESP",141,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",142,0)
 ; IX - which index to use
"RTN","RCDPESP",143,0)
 ; IEN - points to an excluded payer for the selected choice
"RTN","RCDPESP",144,0)
 Q:'("^1^2^"[(U_$G(TYP)_U))  ; one or two only
"RTN","RCDPESP",145,0)
 N IX,IEN,CT,LIST S (IEN,CT)=0 W !
"RTN","RCDPESP",146,0)
 S IX=$S(TYP=1:"EXMDPOST",TYP=2:"EXMDDECR",1:"") ;,TYP=3:"EXRXPOST",TYP=4:"EXRXDECR",1:"")
"RTN","RCDPESP",147,0)
 S LIST="Payers excluded from "_$S(TYP=1:"Auto-Posting:",1:"Auto-Decrease:")
"RTN","RCDPESP",148,0)
 F  S IEN=$O(^RCY(344.6,IX,1,IEN)) Q:'IEN  D
"RTN","RCDPESP",149,0)
 . S CT=CT+1
"RTN","RCDPESP",150,0)
 . W:CT=1 !,LIST
"RTN","RCDPESP",151,0)
 . W !,"  "_$P(^RCY(344.6,IEN,0),U,1)_" "_$P(^RCY(344.6,IEN,0),U,2)
"RTN","RCDPESP",152,0)
 ;
"RTN","RCDPESP",153,0)
 W:CT=0 !,"No excluded payers for "_$S(TYP=1:"Auto-Posting.",1:"Auto-Decrease.")
"RTN","RCDPESP",154,0)
 ; if list is for auto-decrease and there are exclusions write a message
"RTN","RCDPESP",155,0)
 I TYP=2,CT W !,"All payers excluded from auto-posting are excluded from auto-decrease."
"RTN","RCDPESP",156,0)
 Q
"RTN","RCDPESP",157,0)
 ;
"RTN","RCDPESP",158,0)
SETEXCL(TYP) ; LOOP FOR SETTING PAYER EXCLUSIONS
"RTN","RCDPESP",159,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",160,0)
 N FDAPAYER,IEN,DONE,CT,X,Y,FLD,RTYP,DIC,DIR,RCAUDVAL,PREC,CMT
"RTN","RCDPESP",161,0)
 ; FDAPAYER - FDA FOR FILE 344.6
"RTN","RCDPESP",162,0)
 ; FLD - FIELD BEING MODIFIED
"RTN","RCDPESP",163,0)
 ; RTYP - STRING REPRESENTING FIELD
"RTN","RCDPESP",164,0)
 ; DONE - INDICATOR TO LEAVE LOOP
"RTN","RCDPESP",165,0)
 ; RCAUDVAL - ARRAY FOR AUDITING
"RTN","RCDPESP",166,0)
 ; PREC - HOLDER FOR Y(0) AFTER ^DIC CALL
"RTN","RCDPESP",167,0)
 ;         FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE,COMMENT
"RTN","RCDPESP",168,0)
 I $G(TYP)=1 S FLD=.06,CMT=1,RTYP="MEDICAL CLAIMS POSTING"
"RTN","RCDPESP",169,0)
 I $G(TYP)=2 S FLD=.07,CMT=2,RTYP="MEDICAL CLAIMS DECREASE"
"RTN","RCDPESP",170,0)
 I '$D(FLD) Q 
"RTN","RCDPESP",171,0)
 ;
"RTN","RCDPESP",172,0)
 W !!,"Select a Payer to add or remove from the exclusion list.",!
"RTN","RCDPESP",173,0)
 S (RCQUIT,CT,DONE)=0 F  Q:DONE!RCQUIT  D
"RTN","RCDPESP",174,0)
 . S DIC="^RCY(344.6,",DIC(0)="AEMQZ",DIC("A")="Payer: " D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPESP",175,0)
 . I +$G(Y)<1 S DONE=1 Q
"RTN","RCDPESP",176,0)
 . S CT=CT+1,IEN=+Y,IENS=IEN_",",PREC=Y(0)
"RTN","RCDPESP",177,0)
 . K FDAPAYER
"RTN","RCDPESP",178,0)
 . N COMMENT,STAT
"RTN","RCDPESP",179,0)
 . S COMMENT=""
"RTN","RCDPESP",180,0)
 . S STAT='$$GET1^DIQ(344.6,IENS,FLD,"I")
"RTN","RCDPESP",181,0)
 . S FDAPAYER(344.6,IENS,FLD)=STAT
"RTN","RCDPESP",182,0)
 . ; GET COMMENT HERE
"RTN","RCDPESP",183,0)
 . K Y S DIR("A")="Comment: ",DIR(0)="FA^3:72"
"RTN","RCDPESP",184,0)
 . S DIR("?")="Enter an explanation for "_$S(STAT:"adding the payer to",1:"removing the payer from")_" the list of Excluded Payers."
"RTN","RCDPESP",185,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPESP",186,0)
 . S COMMENT=Y
"RTN","RCDPESP",187,0)
 . I COMMENT]"" D
"RTN","RCDPESP",188,0)
 . . I STAT S FDAPAYER(344.6,IENS,CMT)=COMMENT
"RTN","RCDPESP",189,0)
 . . E  S FDAPAYER(344.6,IENS,CMT)=""
"RTN","RCDPESP",190,0)
 . . W !,$P(PREC,U,1)_" "_$P(PREC,U,2)_" has been "
"RTN","RCDPESP",191,0)
 . . W $S(STAT:"added to",1:"removed from")_" the list of Excluded Payers"
"RTN","RCDPESP",192,0)
 . . I TYP=1 D
"RTN","RCDPESP",193,0)
 . . . W !,"If auto-decrease is turned on, "
"RTN","RCDPESP",194,0)
 . . . I STAT W "this payer will be excluded from auto-decrease too."
"RTN","RCDPESP",195,0)
 . . . I 'STAT,'$$GET1^DIQ(344.6,IEN_",",.07,"I") W "this payer will no longer be excluded from auto-decrease."
"RTN","RCDPESP",196,0)
 . . . I 'STAT,$$GET1^DIQ(344.6,IEN_",",.07,"I") W "auto-decrease is set to be excluded for this payer."
"RTN","RCDPESP",197,0)
 . . K RCAUDVAL
"RTN","RCDPESP",198,0)
 . . D FILE^DIE(,"FDAPAYER")
"RTN","RCDPESP",199,0)
 . . S RCAUDVAL(1)="344.6"_U_FLD_U_IEN_U_STAT_U_('STAT)_U_COMMENT
"RTN","RCDPESP",200,0)
 . . D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",201,0)
 Q
"RTN","RCDPESP",202,0)
 ;
"RTN","RCDPESP",203,0)
NOTIFY(VAL) ; Notify CBO team of change to Site Parameters
"RTN","RCDPESP",204,0)
 N GLB,GLO,MSG,SITE,SUBJ,XMINSTR,XMTO
"RTN","RCDPESP",205,0)
 S SITE=$$SITE^VASITE
"RTN","RCDPESP",206,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP",207,0)
 S SUBJ=$E("Site Parameter edit, Station #"_$P(SITE,U,3)_" - "_$P(SITE,U,2),1,65)
"RTN","RCDPESP",208,0)
 S MSG(1)=" "
"RTN","RCDPESP",209,0)
 S MSG(2)="        Site: "_$P(SITE,U,2)
"RTN","RCDPESP",210,0)
 S MSG(3)="   Station #: "_$P(SITE,U,3)
"RTN","RCDPESP",211,0)
 S MSG(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP",212,0)
 S MSG(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","RCDPESP",213,0)
 S MSG(6)="  Changed by: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP",214,0)
 S MSG(7)=" "
"RTN","RCDPESP",215,0)
 S MSG(8)="  ENABLE AUTO-POSTING OF MEDICAL CLAIMS = "_VAL
"RTN","RCDPESP",216,0)
 S MSG(9)=" "
"RTN","RCDPESP",217,0)
 ;Copy message to ePayments CBO team
"RTN","RCDPESP",218,0)
 S XMTO(DUZ)=""
"RTN","RCDPESP",219,0)
 S:$$PROD^XUPROD XMTO("PAYMENTS@domain")=""
"RTN","RCDPESP",220,0)
 ;
"RTN","RCDPESP",221,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP",222,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","RCDPESP",223,0)
 ;
"RTN","RCDPESP",224,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP",225,0)
 .D MES^XPDUTL("MailMan reported a problem trying to send the notification message.")
"RTN","RCDPESP",226,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",227,0)
 .S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","RCDPESP",228,0)
 .S GLO=GLO_")"
"RTN","RCDPESP",229,0)
 .F  S GLO=$Q(@GLO) Q:GLO'[GLB  D MES^XPDUTL("   "_GLO_" = "_$G(@GLO))
"RTN","RCDPESP",230,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",231,0)
 Q
"RTN","RCDPESP",232,0)
 ;
"RTN","RCDPESP",233,0)
AUDIT(INP) ; WRITE AUDIT RECORD(S)
"RTN","RCDPESP",234,0)
 ; INP = audit value in this format:
"RTN","RCDPESP",235,0)
 ;       FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP",236,0)
 Q:'$O(INP(0))   ; nothing to audit
"RTN","RCDPESP",237,0)
 N FDAUDT  ; FileMan FDA array for audits
"RTN","RCDPESP",238,0)
 N IDX S IDX=0
"RTN","RCDPESP",239,0)
 F  S IDX=$O(INP(IDX)) Q:'IDX  D
"RTN","RCDPESP",240,0)
 . K FDAUDT
"RTN","RCDPESP",241,0)
 . S FDAUDT(344.7,"+1,",.01)=$$NOW^XLFDT
"RTN","RCDPESP",242,0)
 . S FDAUDT(344.7,"+1,",.02)=$P(INP(IDX),U,3) ; IEN
"RTN","RCDPESP",243,0)
 . S FDAUDT(344.7,"+1,",.03)=DUZ  ; user
"RTN","RCDPESP",244,0)
 . S FDAUDT(344.7,"+1,",.04)=$P(INP(IDX),U,2) ; FIELD NUMBER
"RTN","RCDPESP",245,0)
 . S FDAUDT(344.7,"+1,",.05)=$P(INP(IDX),U,1) ; FILE NUMBER
"RTN","RCDPESP",246,0)
 . S FDAUDT(344.7,"+1,",.06)=$P(INP(IDX),U,4) ; NEW VALUE
"RTN","RCDPESP",247,0)
 . S FDAUDT(344.7,"+1,",.07)=$P(INP(IDX),U,5) ; OLD VALUE
"RTN","RCDPESP",248,0)
 . S FDAUDT(344.7,"+1,",.08)=$P(INP(IDX),U,6) ; COMMENT
"RTN","RCDPESP",249,0)
 . D UPDATE^DIE(,"FDAUDT")
"RTN","RCDPESP",250,0)
 Q
"RTN","RCDPESP",251,0)
 ;
"RTN","RCDPESP",252,0)
 ; *************************************************************
"RTN","RCDPESP",253,0)
 ; CALLS RELATED TO CREATING EPAYMENT PAYER EXCLUSION PARAMETERS
"RTN","RCDPESP",254,0)
 ; *************************************************************
"RTN","RCDPESP",255,0)
 ;
"RTN","RCDPESP",256,0)
NEWPYR ;Add new payers to payer table - called from AR Nightly Job (EN^RCDPEM)
"RTN","RCDPESP",257,0)
 N RCDATE,RCERA,RCUPD
"RTN","RCDPESP",258,0)
 ;Get date/time of last run otherwise start at previous day
"RTN","RCDPESP",259,0)
 S RCDATE=$P($G(^RCY(344.61,1,0)),U,8) S:RCDATE="" RCDATE=$$FMADD^XLFDT($$NOW^XLFDT\1,-1)
"RTN","RCDPESP",260,0)
 F  S RCDATE=$O(^RCY(344.4,"AFD",RCDATE)) Q:'RCDATE  D
"RTN","RCDPESP",261,0)
 .S RCERA="" F  S RCERA=$O(^RCY(344.4,"AFD",RCDATE,RCERA)) Q:'RCERA  S RCUPD=$$PAYRINIT(RCERA)
"RTN","RCDPESP",262,0)
 ;Update last run date
"RTN","RCDPESP",263,0)
 S $P(^RCY(344.61,1,0),U,8)=$$NOW^XLFDT
"RTN","RCDPESP",264,0)
 Q
"RTN","RCDPESP",265,0)
 ;
"RTN","RCDPESP",266,0)
PAYERPRM(IEN,EXMDPOST,EXMDDECR) ; USED TO UPDATE A NEW PAYER
"RTN","RCDPESP",267,0)
 ; CHECK IEN FOR VALID INPUT
"RTN","RCDPESP",268,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN),0))) 0
"RTN","RCDPESP",269,0)
 N PFDA,PAYER,ID,CPAYERID,PIENS
"RTN","RCDPESP",270,0)
 S PAYER=$E($$GET1^DIQ(344.4,IEN_",",.06),1,35)
"RTN","RCDPESP",271,0)
 Q:PAYER="" 0
"RTN","RCDPESP",272,0)
 S ID=$E($$GET1^DIQ(344.4,IEN_",",.03),1,30)
"RTN","RCDPESP",273,0)
 I '$D(^RCY(344.6,"CPID",PAYER,ID)) Q 0
"RTN","RCDPESP",274,0)
 ; FILE CURRENT SETTINGS
"RTN","RCDPESP",275,0)
 S PIENS=$O(^RCY(344.6,"CPID",PAYER,ID,0))_","
"RTN","RCDPESP",276,0)
 S PFDA(344.6,PIENS,.04)=DUZ
"RTN","RCDPESP",277,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",278,0)
 S PFDA(344.6,PIENS,.06)=+$G(EXMDPOST)
"RTN","RCDPESP",279,0)
 S PFDA(344.6,PIENS,.07)=+$G(EXMDDECR)
"RTN","RCDPESP",280,0)
 D FILE^DIE(,"PFDA")
"RTN","RCDPESP",281,0)
 Q 1
"RTN","RCDPESP",282,0)
 ;
"RTN","RCDPESP",283,0)
PAYRINIT(IEN) ; Add Payer Name and Payer ID to Payer table #344.6 
"RTN","RCDPESP",284,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN)))) 0
"RTN","RCDPESP",285,0)
 N PFDA,PAYER,ID,PIENS,ERADATE
"RTN","RCDPESP",286,0)
 S PAYER=$P($G(^RCY(344.4,IEN,0)),U,6) Q:PAYER="" 0
"RTN","RCDPESP",287,0)
 S ID=$P($G(^RCY(344.4,IEN,0)),U,3) Q:ID="" 0
"RTN","RCDPESP",288,0)
 I $D(^RCY(344.6,"CPID",PAYER,ID)) Q 1
"RTN","RCDPESP",289,0)
 S ERADATE=$P($G(^RCY(344.4,IEN,0)),U,7)
"RTN","RCDPESP",290,0)
 ; UPDATE PAYER PARAMETERS
"RTN","RCDPESP",291,0)
 S PIENS="+1,"
"RTN","RCDPESP",292,0)
 S PFDA(344.6,PIENS,.01)=PAYER
"RTN","RCDPESP",293,0)
 S PFDA(344.6,PIENS,.02)=ID
"RTN","RCDPESP",294,0)
 S PFDA(344.6,PIENS,.03)=ERADATE
"RTN","RCDPESP",295,0)
 S PFDA(344.6,PIENS,.04)=.5
"RTN","RCDPESP",296,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",297,0)
 S PFDA(344.6,PIENS,.06)=0
"RTN","RCDPESP",298,0)
 S PFDA(344.6,PIENS,.07)=0
"RTN","RCDPESP",299,0)
 D UPDATE^DIE(,"PFDA")
"RTN","RCDPESP",300,0)
 Q 1
"RTN","RCDPESP",301,0)
 ;
"RTN","RCDPESP1")
0^24^B30021822
"RTN","RCDPESP1",1,0)
RCDPESP1 ;BIRM/EWL,hrubovcak - ePayment Lockbox Site Parameter Reports ;Aug 14, 2014@14:25:30
"RTN","RCDPESP1",2,0)
 ;;4.5;Accounts Receivable;**298**;Nov 11, 2013;Build 121
"RTN","RCDPESP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP1",4,0)
 ;
"RTN","RCDPESP1",5,0)
 Q
"RTN","RCDPESP1",6,0)
 ;
"RTN","RCDPESP1",7,0)
RPT ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP1",8,0)
 ; report data from:
"RTN","RCDPESP1",9,0)
 ;    AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",10,0)
 ;    RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",11,0)
 ;    RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",12,0)
 ;
"RTN","RCDPESP1",13,0)
 W !,$$HDRLN,!
"RTN","RCDPESP1",14,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPESP1",15,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPESP1",16,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPESP1",17,0)
 .S ZTRTN="SPRPT^RCDPESP1",ZTDESC=$$HDRLN
"RTN","RCDPESP1",18,0)
 .D ^%ZTLOAD
"RTN","RCDPESP1",19,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPESP1",20,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPESP1",21,0)
 ;
"RTN","RCDPESP1",22,0)
 D SPRPT
"RTN","RCDPESP1",23,0)
 Q
"RTN","RCDPESP1",24,0)
 ;
"RTN","RCDPESP1",25,0)
SPRPT ; site parameter report entry point
"RTN","RCDPESP1",26,0)
 ; RCNTR - counter
"RTN","RCDPESP1",27,0)
 ; RCFLD - DD field number
"RTN","RCDPESP1",28,0)
 ; RCHDR - header information
"RTN","RCDPESP1",29,0)
 ; RCPARM - parameters
"RTN","RCDPESP1",30,0)
 ; RCSTOP - exit flag
"RTN","RCDPESP1",31,0)
 N J,RCNTR,RCFLD,RCGLB,RCHDR,RCPARM,RCSTOP,V,X,Y
"RTN","RCDPESP1",32,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clear out old data
"RTN","RCDPESP1",33,0)
 ;
"RTN","RCDPESP1",34,0)
 ; RCGLB - ^TMP global storage locations
"RTN","RCDPESP1",35,0)
 ;     ^TMP($J,"RC342") - AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",36,0)
 ;   ^TMP($J,"RC344.6") - RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",37,0)
 ;  ^TMP($J,"RC344.61") - RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",38,0)
 F J=342,344.6,344.61 S RCGLB(J)=$NA(^TMP($J,"RC"_J)) K @RCGLB(J)
"RTN","RCDPESP1",39,0)
 ;
"RTN","RCDPESP1",40,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"10S")
"RTN","RCDPESP1",41,0)
 S RCHDR("PGNMBR")=0  ; page number
"RTN","RCDPESP1",42,0)
 ;
"RTN","RCDPESP1",43,0)
 ; AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",44,0)
 D GETS^DIQ(342,"1,",".01;7.02;7.03","E",RCGLB(342))
"RTN","RCDPESP1",45,0)
 ; add site to header data
"RTN","RCDPESP1",46,0)
 S RCHDR("SITE")="Site: "_@RCGLB(342)@(342,"1,",.01,"E")
"RTN","RCDPESP1",47,0)
 ;
"RTN","RCDPESP1",48,0)
 F RCFLD=7.02,7.03 D  ; EFT and ERA days unmatched
"RTN","RCDPESP1",49,0)
 .S Y=$$GET1^DID(342,RCFLD,,"LABEL")_": "_@RCGLB(342)@(342,"1,",RCFLD,"E")
"RTN","RCDPESP1",50,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",51,0)
 ;
"RTN","RCDPESP1",52,0)
 D AD2RPT(" ")
"RTN","RCDPESP1",53,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",54,0)
 D GETS^DIQ(344.61,"1,",".02;.03;.04;.05;.06;.07","E",RCGLB(344.61))
"RTN","RCDPESP1",55,0)
 ; get auto-post and auto-decrease settings, save zero node
"RTN","RCDPESP1",56,0)
 S X=^RCY(344.61,1,0),RCPARM("AUTO-POST")=$P(X,U,2),RCPARM("AUTO-DECREASE")=$P(X,U,3),RCPARM(344.61,0)=X
"RTN","RCDPESP1",57,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",58,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",59,0)
 D LIST^DIC(344.6,,"@;.01;.02;.06;1","P",,,,,"I $P(^(0),U,6)=1",,RCGLB(344.6))
"RTN","RCDPESP1",60,0)
 ;
"RTN","RCDPESP1",61,0)
 ; RCDPE PARAMETER file (#344.61), auto-posting of medical claims
"RTN","RCDPESP1",62,0)
 S X=$$GET1^DID(344.61,.02,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",63,0)
 S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",.02,"E")
"RTN","RCDPESP1",64,0)
 D AD2RPT(Y)
"RTN","RCDPESP1",65,0)
 ;
"RTN","RCDPESP1",66,0)
 I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list auto-post excluded payers
"RTN","RCDPESP1",67,0)
 .I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",68,0)
 ..S X="     No payers excluded from auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",69,0)
 .;
"RTN","RCDPESP1",70,0)
 .D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",71,0)
 .S RCNTR=0
"RTN","RCDPESP1",72,0)
 .F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",73,0)
 ..S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",74,0)
 ..S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",75,0)
 ..D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",76,0)
 ;
"RTN","RCDPESP1",77,0)
 I RCPARM("AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",78,0)
 ;
"RTN","RCDPESP1",79,0)
 K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",80,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",81,0)
 ;   screening logic: ^DD(344.6,.07,0)="EXCLUDE MED CLAIMS DECREASE^S^0:No;1:Yes;^0;7^Q"
"RTN","RCDPESP1",82,0)
 D LIST^DIC(344.6,,"@;.01;.02;.07;2","P",,,,,"I $P(^(0),U,7)=1",,RCGLB(344.6))
"RTN","RCDPESP1",83,0)
 ;
"RTN","RCDPESP1",84,0)
 ; RCDPE PARAMETER file (#344.61), auto-decrease of medical claims
"RTN","RCDPESP1",85,0)
 S X=$$GET1^DID(344.61,.03,,"TITLE"),V=" (Y/N): ",V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",86,0)
 S Y=$J(X,45)_@RCGLB(344.61)@(344.61,"1,",.03,"E")
"RTN","RCDPESP1",87,0)
 D AD2RPT(Y)
"RTN","RCDPESP1",88,0)
 I RCPARM("AUTO-DECREASE") D  ; list these 2 fields only if auto-decrease enabled
"RTN","RCDPESP1",89,0)
 .D AD2RPT("NUMBER OF DAYS TO WAIT BEFORE AUTO-DECREASE: "_(+$P(RCPARM(344.61,0),U,4)))
"RTN","RCDPESP1",90,0)
 .D AD2RPT("     MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE: "_"$"_(+$P(RCPARM(344.61,0),U,5)))
"RTN","RCDPESP1",91,0)
 ;
"RTN","RCDPESP1",92,0)
 I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list excluded auto-decrease payers
"RTN","RCDPESP1",93,0)
 .D AD2RPT("   All payers excluded from auto-posting are excluded from auto-decrease.")
"RTN","RCDPESP1",94,0)
 .Q:'RCPARM("AUTO-DECREASE")
"RTN","RCDPESP1",95,0)
 .I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",96,0)
 ..S X="     No additional payers excluded from auto-decrease." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",97,0)
 .;
"RTN","RCDPESP1",98,0)
 .D AD2RPT("   Additional Excluded Payer           Comment")
"RTN","RCDPESP1",99,0)
 .S RCNTR=0
"RTN","RCDPESP1",100,0)
 .F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",101,0)
 ..S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",102,0)
 ..S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",103,0)
 ..D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",104,0)
 ;
"RTN","RCDPESP1",105,0)
 D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",106,0)
 ;
"RTN","RCDPESP1",107,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",108,0)
 F RCFLD=.06,.07 D
"RTN","RCDPESP1",109,0)
 .S Y=$$GET1^DID(344.61,RCFLD,,"TITLE")_" "_@RCGLB(344.61)@(344.61,"1,",RCFLD,"E")
"RTN","RCDPESP1",110,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",111,0)
 ;
"RTN","RCDPESP1",112,0)
 D AD2RPT(" "),AD2RPT($$ENDORPRT^RCDPEARL)
"RTN","RCDPESP1",113,0)
 ;
"RTN","RCDPESP1",114,0)
 S RCSTOP=0 U IO D SPHDR(.RCHDR)
"RTN","RCDPESP1",115,0)
 S J=0 F  S J=$O(^TMP($J,"RC SP REPORT",J)) Q:'J!RCSTOP  S Y=^TMP($J,"RC SP REPORT",J,0) D
"RTN","RCDPESP1",116,0)
 .W !,Y Q:'$O(^TMP($J,"RC SP REPORT",J))  ; quit if last line
"RTN","RCDPESP1",117,0)
 .I '$G(ZTSK),$E(IOST,1,2)="C-",$Y+3>IOSL D ASK^RCDPEARL(.RCSTOP) I 'RCSTOP D SPHDR(.RCHDR) Q
"RTN","RCDPESP1",118,0)
 .Q:RCSTOP  Q:$Y+2<IOSL
"RTN","RCDPESP1",119,0)
 .D SPHDR(.RCHDR)
"RTN","RCDPESP1",120,0)
 ;
"RTN","RCDPESP1",121,0)
 ; close device
"RTN","RCDPESP1",122,0)
 U IO(0) D ^%ZISC
"RTN","RCDPESP1",123,0)
 ;
"RTN","RCDPESP1",124,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clean up
"RTN","RCDPESP1",125,0)
 ;
"RTN","RCDPESP1",126,0)
 Q
"RTN","RCDPESP1",127,0)
 ;
"RTN","RCDPESP1",128,0)
SPHDR(HDR) ; HDR passed by ref.
"RTN","RCDPESP1",129,0)
 ; HDR("RUNDATE") - run date, external format
"RTN","RCDPESP1",130,0)
 ;  HDR("PGNMBR") - page number
"RTN","RCDPESP1",131,0)
 ;    HDR("SITE") - site name
"RTN","RCDPESP1",132,0)
 N P,X,Y
"RTN","RCDPESP1",133,0)
 S P=$G(HDR("PGNMBR"))+1,HDR("PGNMBR")=P  ; increment page count
"RTN","RCDPESP1",134,0)
 ; 
"RTN","RCDPESP1",135,0)
 S X=$$HDRLN
"RTN","RCDPESP1",136,0)
 S P=IOM-($L(X)+10)\2,Y=$J(" ",P)_X_$J(" ",P)_" Page: "_HDR("PGNMBR")
"RTN","RCDPESP1",137,0)
 W @IOF,Y
"RTN","RCDPESP1",138,0)
 S X="   Run Date: "_HDR("RUNDATE"),Y=X_$J(HDR("SITE"),IOM-($L(X)+1))
"RTN","RCDPESP1",139,0)
 W !,Y
"RTN","RCDPESP1",140,0)
 S Y=" "_$TR($J("",IOM-2)," ","-")  ; space_row of hyphens
"RTN","RCDPESP1",141,0)
 W !,Y
"RTN","RCDPESP1",142,0)
 Q
"RTN","RCDPESP1",143,0)
 ;
"RTN","RCDPESP1",144,0)
AD2RPT(A) ; add line to report
"RTN","RCDPESP1",145,0)
 Q:$G(A)=""
"RTN","RCDPESP1",146,0)
 N C S C=$G(^TMP($J,"RC SP REPORT",0))+1,^TMP($J,"RC SP REPORT",0)=C
"RTN","RCDPESP1",147,0)
 S ^TMP($J,"RC SP REPORT",C,0)=A Q
"RTN","RCDPESP1",148,0)
 ;
"RTN","RCDPESP1",149,0)
HDRLN() Q "EDI Lockbox Parameters Report"  ; extrinsic variable
"RTN","RCDPESP1",150,0)
 ;
"RTN","RCDPESP2")
0^25^B90155274
"RTN","RCDPESP2",1,0)
RCDPESP2 ;BIRM/EWL - ePayment Lockbox Parameter Audit and Exclusion Reports ;Jul 28, 2014@18:14:57
"RTN","RCDPESP2",2,0)
 ;;4.5;Accounts Receivable;**298**;Nov 11, 2013;Build 121
"RTN","RCDPESP2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP2",4,0)
 ;
"RTN","RCDPESP2",5,0)
 Q
"RTN","RCDPESP2",6,0)
 ;
"RTN","RCDPESP2",7,0)
RPT1 ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP2",8,0)
 ;
"RTN","RCDPESP2",9,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",10,0)
 ;              including data concerning changes to the RCDPE PPARAMETER file.
"RTN","RCDPESP2",11,0)
 ;
"RTN","RCDPESP2",12,0)
 ; Input:       None
"RTN","RCDPESP2",13,0)
 ;
"RTN","RCDPESP2",14,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",15,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST^DIC OUTPUT
"RTN","RCDPESP2",16,0)
 ;
"RTN","RCDPESP2",17,0)
 ; GLOBALS:     ^RCY(344.7, - RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",18,0)
 ;
"RTN","RCDPESP2",19,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",20,0)
 ;
"RTN","RCDPESP2",21,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",22,0)
 ;    RCRANGE - RETURN VALUE FOR DATE RANGE FOR THE REPORT
"RTN","RCDPESP2",23,0)
 ;    RCSTDT  - STARTING DATE FOR THE REPORT
"RTN","RCDPESP2",24,0)
 ;    RCENDT  - END DATE FOR THE REPORT
"RTN","RCDPESP2",25,0)
 ;    RCEXCEL - INDIATES IF OUTPUT IS GOING TO EXCEL
"RTN","RCDPESP2",26,0)
 ;    RCSCR   - SCREEN FOR LIST^DIC CALL
"RTN","RCDPESP2",27,0)
 ;    RCFLDS  - FIELDS TO BE CAPTURED IN LIST^DIC CALL
"RTN","RCDPESP2",28,0)
 ;    RCDIGET   - ^TMP GLOBAL RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP2",29,0)
 ;    RCDIERR   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP2",30,0)
 ;    RCHDR("RUNDATE")   - DATE THE REPORT RAN
"RTN","RCDPESP2",31,0)
 ;    RCHDR("PAGE")  - PAGE COUNTER
"RTN","RCDPESP2",32,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP2",33,0)
 ;    RCPARAM - PARAMETER THAT WAS CHANGED
"RTN","RCDPESP2",34,0)
 ;    RCPARAM("OLDVAL")   - OLD PARAMETER VALUE
"RTN","RCDPESP2",35,0)
 ;    RCPARAM("TIME")  - TIME PARAMETER WAS CHANGED
"RTN","RCDPESP2",36,0)
 ;    RCPARAM("NEWVAL")   - NEW PARAMETER VALUE
"RTN","RCDPESP2",37,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",38,0)
 ;    RCTMP   - HOLDS ONE LINE OF DATA FROM LIST^DIC OUTPUT
"RTN","RCDPESP2",39,0)
 ;
"RTN","RCDPESP2",40,0)
 N RCDIERR,RCDIGET,RCENDT,RCEXCEL,RCFLDS,RCHDR,RCIEN,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP
"RTN","RCDPESP2",41,0)
 ; Kernel variables
"RTN","RCDPESP2",42,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",43,0)
 W !!,"EDI Lockbox Parameters Report",!
"RTN","RCDPESP2",44,0)
 ;
"RTN","RCDPESP2",45,0)
 S (RCHDR("PAGE"),RCSTOP,RCHDR,RCEXCEL)=0
"RTN","RCDPESP2",46,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",47,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",48,0)
 S RCSTDT=$P(RCRANGE,U,2),RCENDT=$P(RCRANGE,U,3)
"RTN","RCDPESP2",49,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",50,0)
 ; Display capture information for Excel
"RTN","RCDPESP2",51,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",52,0)
 ;Select output device
"RTN","RCDPESP2",53,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",54,0)
 ; INPUT PARAMETER:
"RTN","RCDPESP2",55,0)
 ;   RCEXCEL - IF 1 THEN OUTPUT FOR EXCEL
"RTN","RCDPESP2",56,0)
 ;
"RTN","RCDPESP2",57,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",58,0)
 S RCHDR("DATERANGE")=$$FMTE^XLFDT(RCSTDT,"5D")_" - "_$$FMTE^XLFDT(RCENDT,"5D")
"RTN","RCDPESP2",59,0)
 ;
"RTN","RCDPESP2",60,0)
 S RCENDT=RCENDT+.999999
"RTN","RCDPESP2",61,0)
 S RCSCR="I ($P(^(0),U,5)=344.61)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",62,0)
 S RCFLDS="@;.04;.01I;.07;.06;.03"
"RTN","RCDPESP2",63,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",64,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR,,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",65,0)
 I $D(RCDIERR) W !!,"ERROR COLLECTING THE REPORT DATA" D ASK^RCDPEARL() Q
"RTN","RCDPESP2",66,0)
 I '$D(@RCDIGET@("DILIST",1)) D  Q
"RTN","RCDPESP2",67,0)
 . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP)
"RTN","RCDPESP2",68,0)
 . W !,"NO PARAMETER AUDIT ENTRIES TO REPORT",!
"RTN","RCDPESP2",69,0)
 S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",70,0)
 . I 'RCHDR("PAGE") D
"RTN","RCDPESP2",71,0)
 . . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP)
"RTN","RCDPESP2",72,0)
 . Q:RCSTOP
"RTN","RCDPESP2",73,0)
 . K RCPARAM
"RTN","RCDPESP2",74,0)
 . S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,6)
"RTN","RCDPESP2",75,0)
 . S RCPARAM=$$GET1^DID(344.61,$P(RCTMP,U,1),,"LABEL")
"RTN","RCDPESP2",76,0)
 . S RCPARAM("TIME")=$$FMTE^XLFDT($P(RCTMP,U,2),"2")
"RTN","RCDPESP2",77,0)
 . S RCPARAM("USER")=$P(RCTMP,U,5)
"RTN","RCDPESP2",78,0)
 . I ($P(RCTMP,U,1)=.02)!($P(RCTMP,U,1)=.03) D
"RTN","RCDPESP2",79,0)
 . . S RCPARAM("OLDVAL")=$S($P(RCTMP,U,3):"Yes",1:"No")
"RTN","RCDPESP2",80,0)
 . . S RCPARAM("NEWVAL")=$S($P(RCTMP,U,4):"Yes",1:"No")
"RTN","RCDPESP2",81,0)
 . E  D
"RTN","RCDPESP2",82,0)
 . . S RCPARAM("OLDVAL")=$P(RCTMP,U,3)
"RTN","RCDPESP2",83,0)
 . . S RCPARAM("NEWVAL")=$P(RCTMP,U,4)
"RTN","RCDPESP2",84,0)
 . I 'RCEXCEL D
"RTN","RCDPESP2",85,0)
 . . W !,RCPARAM,?32,RCPARAM("TIME"),?51,RCPARAM("OLDVAL"),?56,RCPARAM("NEWVAL"),?61,$E(RCPARAM("USER"),1,IOM-61)
"RTN","RCDPESP2",86,0)
 . I RCEXCEL W !,RCPARAM_U_RCPARAM("TIME")_U_RCPARAM("OLDVAL")_U_RCPARAM("NEWVAL")_U_RCPARAM("USER")
"RTN","RCDPESP2",87,0)
 ;
"RTN","RCDPESP2",88,0)
 ; end of report
"RTN","RCDPESP2",89,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPESP2",90,0)
 K @RCDIGET
"RTN","RCDPESP2",91,0)
 Q
"RTN","RCDPESP2",92,0)
 ;
"RTN","RCDPESP2",93,0)
HDRLPR(RCEXCEL,RCHDR,RCSTOP) ; Report header Lockbox Parameter Report
"RTN","RCDPESP2",94,0)
 ;   RCEXCEL - if true output for Excel
"RTN","RCDPESP2",95,0)
 ;   RCHDR("PAGE") - page count, passed by ref.
"RTN","RCDPESP2",96,0)
 ;   RCSTOP  - report exit flag
"RTN","RCDPESP2",97,0)
 ;
"RTN","RCDPESP2",98,0)
 I RCEXCEL D  Q  ; Excel header for PARAMETER AUDITS
"RTN","RCDPESP2",99,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",100,0)
 .W !,"PARAMETER^DATE/TIME EDITED^OLD VALUE^NEW VALUE^USER"
"RTN","RCDPESP2",101,0)
 .S RCHDR("PAGE")=1  ; only print once
"RTN","RCDPESP2",102,0)
 ;
"RTN","RCDPESP2",103,0)
 I 'RCEXCEL D
"RTN","RCDPESP2",104,0)
 .I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",105,0)
 .W @IOF
"RTN","RCDPESP2",106,0)
 .S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",107,0)
 . W $$CNTR("EDI Lockbox Parameter Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",108,0)
 . W !,$$CNTR("RUN DATE: "_RCHDR("RUNDATE"))
"RTN","RCDPESP2",109,0)
 . W !,$$CNTR("DATE RANGE: "_RCHDR("DATERANGE"))
"RTN","RCDPESP2",110,0)
 . W !!,"LOCKBOX PARAMETER UPDATES"
"RTN","RCDPESP2",111,0)
 . W !,"-------------------------                           Values"
"RTN","RCDPESP2",112,0)
 . W !,"Parameter                       Date/Time Edited   Old  New  User"
"RTN","RCDPESP2",113,0)
 . N I S $P(I,"=",IOM+1)="" W !,I
"RTN","RCDPESP2",114,0)
 Q
"RTN","RCDPESP2",115,0)
 ;
"RTN","RCDPESP2",116,0)
RPT2 ; EDI Lockbox Exclusion Audit Report [RCDPE EXCLUSION AUDIT REPORT]
"RTN","RCDPESP2",117,0)
 ;
"RTN","RCDPESP2",118,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",119,0)
 ;              including data concerning changes to the RCDPE AUTO-PAY EXCLUSION file.
"RTN","RCDPESP2",120,0)
 ;
"RTN","RCDPESP2",121,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",122,0)
 ;              ^RCY(344.6,              RCDPE AUTO-PAY EXCLUSION
"RTN","RCDPESP2",123,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP2",124,0)
 ;
"RTN","RCDPESP2",125,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",126,0)
 ;
"RTN","RCDPESP2",127,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",128,0)
 ;    RCRANGE - date range for report
"RTN","RCDPESP2",129,0)
 ;    RCSTDT  - report start date
"RTN","RCDPESP2",130,0)
 ;    RCENDT  - report end date
"RTN","RCDPESP2",131,0)
 ;    RCEXCEL - true if report in Excel format
"RTN","RCDPESP2",132,0)
 ;    RCSCR - screening logic for LIST^DIC
"RTN","RCDPESP2",133,0)
 ;    RCFLDS  - fields for LIST^DIC
"RTN","RCDPESP2",134,0)
 ;    RCDIGET - storage for results from LIST^DIC
"RTN","RCDPESP2",135,0)
 ;    RCDIERR - errors from LIST^DIC
"RTN","RCDPESP2",136,0)
 ;    RCHDR("PAGE")  - page counter
"RTN","RCDPESP2",137,0)
 ;    RCHDR("RUNDATE") - date/time report was run 
"RTN","RCDPESP2",138,0)
 ;    RCSTOP  - report exit flag
"RTN","RCDPESP2",139,0)
 ;    RCPARAM - parameter that was changed
"RTN","RCDPESP2",140,0)
 ;    RCPARAM("TIME")   - time parameter changed
"RTN","RCDPESP2",141,0)
 ;    RCPARAM("OLDVAL") - old parameter value
"RTN","RCDPESP2",142,0)
 ;    RCPARAM("NEWVAL") - new parameter value
"RTN","RCDPESP2",143,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",144,0)
 ;    RCTMP - one record from LIST^DIC
"RTN","RCDPESP2",145,0)
 ;    RCFND - flag indicating records returned
"RTN","RCDPESP2",146,0)
 ;
"RTN","RCDPESP2",147,0)
 W !!,"   EDI Lockbox Exclusion Audit Report",!
"RTN","RCDPESP2",148,0)
 ;
"RTN","RCDPESP2",149,0)
 N RCENDT,RCEXCEL,RCFLDS,RCFND,RCDIGET,RCHDR,RCIEN,RCDIERR,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP
"RTN","RCDPESP2",150,0)
 ; Kernel variables
"RTN","RCDPESP2",151,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",152,0)
 ; initialize values
"RTN","RCDPESP2",153,0)
 S (RCHDR("PAGE"),RCSTOP,RCIEN,RCEXCEL,RCFND)=0
"RTN","RCDPESP2",154,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",155,0)
 ;
"RTN","RCDPESP2",156,0)
 ; GET DATE RANGES
"RTN","RCDPESP2",157,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",158,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",159,0)
 S RCSTDT=$P(RCRANGE,U,2)-.0000001,RCENDT=$P(RCRANGE,U,3)+.9999999
"RTN","RCDPESP2",160,0)
 ;
"RTN","RCDPESP2",161,0)
 ; output fields for LIST^DIC
"RTN","RCDPESP2",162,0)
 S RCFLDS="@;.04;.01I;.06;.03;.08;.02"
"RTN","RCDPESP2",163,0)
 ; .04 - CHANGED FIELD  .01 - TIMESTAMP      .06 - NEW VALUE
"RTN","RCDPESP2",164,0)
 ; .03 - CHANGED BY     .08 - COMMENT        .02 - MODIFIED IEN
"RTN","RCDPESP2",165,0)
 ;
"RTN","RCDPESP2",166,0)
 ; first part of LIST^DIC screening logic
"RTN","RCDPESP2",167,0)
 S RCSCR="I ($P(^(0),U,5)=344.6)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",168,0)
 ;
"RTN","RCDPESP2",169,0)
 ; OUTPUT TO EXCEL?
"RTN","RCDPESP2",170,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",171,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",172,0)
 ;
"RTN","RCDPESP2",173,0)
 ;Select output device
"RTN","RCDPESP2",174,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",175,0)
 ;
"RTN","RCDPESP2",176,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",177,0)
 ;
"RTN","RCDPESP2",178,0)
 ; PROCESS AUTO-POST EXCLUSIONS
"RTN","RCDPESP2",179,0)
 S RCSCR(.06)=RCSCR_"&($P(^(0),U,4)=.06)"  ; screening logic for auto-post changes
"RTN","RCDPESP2",180,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.06),,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",181,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",182,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",183,0)
 D HDRXAR(.06)  ; complete header
"RTN","RCDPESP2",184,0)
 ;
"RTN","RCDPESP2",185,0)
 S RCFND=$D(@RCDIGET@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",186,0)
 I 'RCFND W !,"No Auto-post Exclusions to Display",!
"RTN","RCDPESP2",187,0)
 ;
"RTN","RCDPESP2",188,0)
 I RCFND S RCIEN=0 D
"RTN","RCDPESP2",189,0)
 .F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",190,0)
 ..S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",191,0)
 ..I 'RCEXCEL,$Y+4>IOSL D HDRXAR(.06) Q:RCSTOP
"RTN","RCDPESP2",192,0)
 ..D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",193,0)
 ;
"RTN","RCDPESP2",194,0)
 K @RCDIGET,RCDIERR  ; delete old list and any errors
"RTN","RCDPESP2",195,0)
 Q:RCSTOP
"RTN","RCDPESP2",196,0)
 ;
"RTN","RCDPESP2",197,0)
 ; PROCESS AUTO-DECREASE EXCLUSIONS
"RTN","RCDPESP2",198,0)
 S RCSCR(.07)=RCSCR_"&($P(^(0),U,4)=.07)"  ; screening logic for auto-decrease
"RTN","RCDPESP2",199,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.07),,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",200,0)
 ;
"RTN","RCDPESP2",201,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",202,0)
 I $D(RCDIERR) W !!,"Error collecting auto-decrease report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",203,0)
 ;
"RTN","RCDPESP2",204,0)
 D  ; complete header or just the section
"RTN","RCDPESP2",205,0)
 .I $Y+11<IOSL D SECTHDR(.07)  Q  ; just section header
"RTN","RCDPESP2",206,0)
 .D HDRXAR(.07)  ; complete header
"RTN","RCDPESP2",207,0)
 ;
"RTN","RCDPESP2",208,0)
 S RCFND=$D(@RCDIGET@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",209,0)
 I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",210,0)
 ; RECORDS RETURNED
"RTN","RCDPESP2",211,0)
 I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",212,0)
 .S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",213,0)
 .I $Y+4>IOSL D HDRXAR(.07) Q:RCSTOP
"RTN","RCDPESP2",214,0)
 .D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",215,0)
 ;
"RTN","RCDPESP2",216,0)
 ; end of report
"RTN","RCDPESP2",217,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPESP2",218,0)
 ;
"RTN","RCDPESP2",219,0)
 K @RCDIGET  ; clean up
"RTN","RCDPESP2",220,0)
 Q
"RTN","RCDPESP2",221,0)
 ;
"RTN","RCDPESP2",222,0)
GETPAYER() ; GET THE PAYER NAME + PAYER ID
"RTN","RCDPESP2",223,0)
 N RCIEN,RCPAYR
"RTN","RCDPESP2",224,0)
 S RCIEN=$P(RCTMP,U,6)
"RTN","RCDPESP2",225,0)
 I '$D(^RCY(344.6,RCIEN)) Q ""
"RTN","RCDPESP2",226,0)
 S RCPAYR=$$GET1^DIQ(344.6,RCIEN_",",.01)_" "_$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP2",227,0)
 Q RCPAYR
"RTN","RCDPESP2",228,0)
 ;
"RTN","RCDPESP2",229,0)
HDRXAR(RCTYP) ; Report header for exclusin auto report
"RTN","RCDPESP2",230,0)
 ;   RCTYP -   .06 = AUTO-POSTING EXCLUSION
"RTN","RCDPESP2",231,0)
 ;             .07 = AUTO-DECREASE EXCLUSION
"RTN","RCDPESP2",232,0)
 ;
"RTN","RCDPESP2",233,0)
 I RCEXCEL D  Q
"RTN","RCDPESP2",234,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",235,0)
 .; Excel header for parameter audits
"RTN","RCDPESP2",236,0)
 .W !!,"TYPE^CHANGE^PAYER^TIMESTAMP^USER^COMMENT"
"RTN","RCDPESP2",237,0)
 .S RCHDR("PAGE")=1  ; only print it once
"RTN","RCDPESP2",238,0)
 ;
"RTN","RCDPESP2",239,0)
 I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",240,0)
 W @IOF
"RTN","RCDPESP2",241,0)
 S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",242,0)
 ; report header for parameter audits
"RTN","RCDPESP2",243,0)
 W $$CNTR("EDI Lockbox Exclusion Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",244,0)
 W !,$$CNTR("DIVISIONS: ALL")
"RTN","RCDPESP2",245,0)
 W !,$$CNTR("RUN DATE: "_$G(RCHDR("RUNDATE")))
"RTN","RCDPESP2",246,0)
 W !,$$CNTR("DATE RANGE: "_$$FMTE^XLFDT(RCSTDT,"5D")_" - "_$$FMTE^XLFDT(RCENDT,"5D"))
"RTN","RCDPESP2",247,0)
 D SECTHDR(RCTYP)
"RTN","RCDPESP2",248,0)
 Q
"RTN","RCDPESP2",249,0)
 ;
"RTN","RCDPESP2",250,0)
SECTHDR(RCTYPE) ; SECTION HEADER
"RTN","RCDPESP2",251,0)
 ;   RCTYP - .06 = AUTO-POSTING EXCLUSION
"RTN","RCDPESP2",252,0)
 ;           .07 = AUTO-DECREASE EXCLUSION
"RTN","RCDPESP2",253,0)
 Q:$G(RCEXCEL)
"RTN","RCDPESP2",254,0)
 ;
"RTN","RCDPESP2",255,0)
 I RCTYPE=.06 D
"RTN","RCDPESP2",256,0)
 .W !!,"AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",257,0)
 .W !,"---------------------------------"
"RTN","RCDPESP2",258,0)
 ;
"RTN","RCDPESP2",259,0)
 I RCTYPE=.07 D
"RTN","RCDPESP2",260,0)
 .W !!,"AUTO-DECREASE PAYER EXCLUSION LIST"
"RTN","RCDPESP2",261,0)
 .W !,"----------------------------------"
"RTN","RCDPESP2",262,0)
 ;
"RTN","RCDPESP2",263,0)
 W !,"Change Payer                            Date/Time Edited   User"
"RTN","RCDPESP2",264,0)
 W !,$TR($J("",IOM-1)," ","=")  ; row of equal signs
"RTN","RCDPESP2",265,0)
 Q
"RTN","RCDPESP2",266,0)
 ;
"RTN","RCDPESP2",267,0)
CNTR(TXT) ; center TXT
"RTN","RCDPESP2",268,0)
 Q $J("",IOM-$L(TXT)\2)_TXT
"RTN","RCDPESP2",269,0)
 ;
"RTN","RCDPESP2",270,0)
DTRNG() ; function, returns date range for the report
"RTN","RCDPESP2",271,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPESP2",272,0)
 S (RCSTART,RCEND)=0 D DATES(.RCSTART,.RCEND)
"RTN","RCDPESP2",273,0)
 Q:RCSTART=-1 0
"RTN","RCDPESP2",274,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPESP2",275,0)
 Q:'RCSTART "0^^"
"RTN","RCDPESP2",276,0)
 Q 0
"RTN","RCDPESP2",277,0)
 ;
"RTN","RCDPESP2",278,0)
DATES(BDATE,EDATE) ; Get a date range, both values passed by ref.
"RTN","RCDPESP2",279,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP2",280,0)
 S (BDATE,EDATE)=0
"RTN","RCDPESP2",281,0)
 S DIR("?")="Enter the earliest AUDIT DATE to include on the report"
"RTN","RCDPESP2",282,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Report start date: " D ^DIR K DIR
"RTN","RCDPESP2",283,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",284,0)
 S BDATE=Y K DIR,X,Y
"RTN","RCDPESP2",285,0)
 S DIR("?")="Enter the latest AUDIT DATE to include on the report"
"RTN","RCDPESP2",286,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="Report end date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPESP2",287,0)
 D ^DIR K DIR
"RTN","RCDPESP2",288,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",289,0)
 S EDATE=Y
"RTN","RCDPESP2",290,0)
 Q
"RTN","RCDPESP2",291,0)
 ;
"RTN","RCDPESP2",292,0)
DSPXCLSN(RCX) ; display exclusion
"RTN","RCDPESP2",293,0)
 ; RCX - exclusion value from ^DIC call
"RTN","RCDPESP2",294,0)
 N RCXCLSN
"RTN","RCDPESP2",295,0)
 S RCXCLSN("CHANGE")=$S($P(RCX,U,3):"Added",1:"Removed")
"RTN","RCDPESP2",296,0)
 S RCXCLSN("TIME")=$$FMTE^XLFDT($P(RCX,U,2),"2")
"RTN","RCDPESP2",297,0)
 S RCXCLSN("USER")=$P(RCX,U,4)
"RTN","RCDPESP2",298,0)
 S RCXCLSN("PAYER")=$$GETPAYER
"RTN","RCDPESP2",299,0)
 S RCXCLSN("COMMENT")=$P(RCX,U,5)
"RTN","RCDPESP2",300,0)
 ;
"RTN","RCDPESP2",301,0)
 I 'RCEXCEL D  Q
"RTN","RCDPESP2",302,0)
 .N Y S Y=RCXCLSN("CHANGE"),$E(Y,9)=$E(RCXCLSN("PAYER"),1,30),$E(Y,41)=" "_RCXCLSN("TIME"),Y=Y_" "_RCXCLSN("USER")
"RTN","RCDPESP2",303,0)
 .W !,Y,!,"  Comment: "_RCXCLSN("COMMENT")
"RTN","RCDPESP2",304,0)
 ; Excel format
"RTN","RCDPESP2",305,0)
 S RCXCLSN("LABEL")=$$GET1^DID(344.6,$P(RCX,U,1),,"LABEL")
"RTN","RCDPESP2",306,0)
 W !,RCXCLSN("LABEL")_U_RCXCLSN("CHANGE")_U_RCXCLSN("PAYER")_U_RCXCLSN("TIME")_U_RCXCLSN("USER")_U_RCXCLSN("COMMENT")
"RTN","RCDPESP2",307,0)
 ;
"RTN","RCDPESP2",308,0)
 Q
"RTN","RCDPESP2",309,0)
 ;
"RTN","RCDPESP3")
0^26^B6781847
"RTN","RCDPESP3",1,0)
RCDPESP3 ;BIRM/EWL - ePayment Lockbox Exclusion Audit Report ;Jun 11, 2014@13:00:05
"RTN","RCDPESP3",2,0)
 ;;4.5;Accounts Receivable;**298**;Nov 11, 2013;Build 121
"RTN","RCDPESP3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP3",4,0)
RPT ; RUN THE RCDPE EXCLUSION AUDIT REPORT
"RTN","RCDPESP3",5,0)
 ;
"RTN","RCDPESP3",6,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP3",7,0)
 ;              including data concerning changes to the RCDPE AUTO PAY EXCLUSION file.
"RTN","RCDPESP3",8,0)
 ;
"RTN","RCDPESP3",9,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP3",10,0)
 ;              ^RCY(344.6,              RCDPE AUTO PAY EXCLUSION
"RTN","RCDPESP3",11,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP3",12,0)
 ;
"RTN","RCDPESP3",13,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP3",14,0)
 ;
"RTN","RCDPESP3",15,0)
 ; LOCAL VARIABLES: 
"RTN","RCDPESP3",16,0)
 ;    RCGET   - HOLDS POINTER TO TMP FILE RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP3",17,0)
 ;    RCMSG   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP3",18,0)
 ;    RCRUN   - DATE THE REPORT RAN
"RTN","RCDPESP3",19,0)
 ;    RCLINECT- LINE COUNTER
"RTN","RCDPESP3",20,0)
 ;    RCPAGE  - PAGE COUNTER
"RTN","RCDPESP3",21,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP3",22,0)
 ;    RCIEN   - IEN OF CURRENT PAYER
"RTN","RCDPESP3",23,0)
 ;    RCPAYER - PAYER NAME
"RTN","RCDPESP3",24,0)
 ;    RCID    - PAYER ID
"RTN","RCDPESP3",25,0)
 ;    RCTIME  - TIMESTAMP PAYER WAS ADDED
"RTN","RCDPESP3",26,0)
 ;
"RTN","RCDPESP3",27,0)
 ; FOR REPORT FORMATTING
"RTN","RCDPESP3",28,0)
 ;    SPT     - TOTAL LINE SPACE - DATE & 2 SPACES 
"RTN","RCDPESP3",29,0)
 ;    SPI     - LINE SPACE AVAILABLE FOR PAYER ID
"RTN","RCDPESP3",30,0)
 ;    SPN     - LINE SPACE AVAILABLE FOR PAYER NAME
"RTN","RCDPESP3",31,0)
 ;    T1      - 1ST TAB STOP
"RTN","RCDPESP3",32,0)
 ;    T2      - 2ND TAB STOP
"RTN","RCDPESP3",33,0)
 N %ZIS,CT,RCGET,RCID,RCIEN,RCLINECT,RCPAGE,RCPAYER,RCRUNDT,RCSTOP,RCTIME,SPI,SPN,SPT,T1,T2
"RTN","RCDPESP3",34,0)
 ; FILEMAN VARIABLES
"RTN","RCDPESP3",35,0)
 N POP,X,X1,X2,Y,ZIS
"RTN","RCDPESP3",36,0)
 S (RCPAGE,RCSTOP,RCIEN,RCLINECT)=0
"RTN","RCDPESP3",37,0)
 ;
"RTN","RCDPESP3",38,0)
 ;Select output device
"RTN","RCDPESP3",39,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP3",40,0)
 ; SET UP PAGE FORMATTING
"RTN","RCDPESP3",41,0)
 I IOM<100 D
"RTN","RCDPESP3",42,0)
 . S SPT=IOM-10 ; SPACE AVAILABLE FOR PAYER ID AND PAYER NAME
"RTN","RCDPESP3",43,0)
 . S SPI=(SPT\3)-1 ; SPACE FOR PAYER ID
"RTN","RCDPESP3",44,0)
 . S SPN=SPT-SPI ; SPACE FOR PAYER NAME
"RTN","RCDPESP3",45,0)
 I IOM'<100 D
"RTN","RCDPESP3",46,0)
 . S SPT=90 ; SPACE AVAILABLE FOR PAYER ID AND PAYER NAME
"RTN","RCDPESP3",47,0)
 . S SPI=30 ; SPACE FOR PAYER ID
"RTN","RCDPESP3",48,0)
 . S SPN=60 ; SPACE FOR PAYER NAME
"RTN","RCDPESP3",49,0)
 S T1=SPI+1,T2=SPT+2
"RTN","RCDPESP3",50,0)
 ; 
"RTN","RCDPESP3",51,0)
 ; ********************************
"RTN","RCDPESP3",52,0)
 ; PROCESS THE PAYERS
"RTN","RCDPESP3",53,0)
 ; ********************************
"RTN","RCDPESP3",54,0)
 D HDR S RCLINECT=6
"RTN","RCDPESP3",55,0)
 F  S RCIEN=$O(^RCY(344.6,RCIEN)) Q:('RCIEN)!RCSTOP  D
"RTN","RCDPESP3",56,0)
 . S RCPAYER=$$GET1^DIQ(344.6,RCIEN_",",.01)
"RTN","RCDPESP3",57,0)
 . S RCID=$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP3",58,0)
 . S RCTIME=$$FMTE^XLFDT($$GET1^DIQ(344.6,RCIEN_",",.03,"I"),"2D")
"RTN","RCDPESP3",59,0)
 . I $L($P(RCTIME,"/",1))=1 S $P(RCTIME,"/",1)="0"_$P(RCTIME,"/",1)
"RTN","RCDPESP3",60,0)
 . I $L($P(RCTIME,"/",2))=1 S $P(RCTIME,"/",2)="0"_$P(RCTIME,"/",2)
"RTN","RCDPESP3",61,0)
 . I RCLINECT+1>IOSL D HDR S RCLINECT=6
"RTN","RCDPESP3",62,0)
 . S RCLINECT=RCLINECT+1
"RTN","RCDPESP3",63,0)
 . W !,$E(RCID,1,SPI),?T1,$E(RCPAYER,1,SPN),?T2,RCTIME
"RTN","RCDPESP3",64,0)
 I 'RCSTOP D ASK^RCDPEARL()
"RTN","RCDPESP3",65,0)
 Q
"RTN","RCDPESP3",66,0)
 ;
"RTN","RCDPESP3",67,0)
HDR ; Report header
"RTN","RCDPESP3",68,0)
 ; LOCAL VARIABLES
"RTN","RCDPESP3",69,0)
 ; LN - SEPARATION LINE
"RTN","RCDPESP3",70,0)
 N LN
"RTN","RCDPESP3",71,0)
 I RCPAGE D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP3",72,0)
 W @IOF
"RTN","RCDPESP3",73,0)
 S RCPAGE=RCPAGE+1 I RCPAGE=1 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPESP3",74,0)
 W $$CNTR^RCDPESP2("PAYER EXCLUSION NAME / TIN REPORT"),?IOM-8,"Page: "_RCPAGE
"RTN","RCDPESP3",75,0)
 W !,$$CNTR^RCDPESP2("RUN DATE: "_RCRUNDT)
"RTN","RCDPESP3",76,0)
 W !!,"PAYER TIN",?T1,"PAYER NAME",?T2-2,"DATE ADDED"
"RTN","RCDPESP3",77,0)
 S $P(LN,"=",SPT+11)="" W !,LN
"RTN","RCDPESP3",78,0)
 Q
"RTN","RCDPESP4")
0^94^B23109774
"RTN","RCDPESP4",1,0)
RCDPESP4 ; Albany/hrubovcak - ePayment Auto-post/Decrease for IOC testing, file #344.6 ;Jul 29, 2014@15:19:17
"RTN","RCDPESP4",2,0)
 ;;4.5;Accounts Receivable;**298**;Nov 11, 2013;Build 121
"RTN","RCDPESP4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP4",4,0)
 ;
"RTN","RCDPESP4",5,0)
 Q
"RTN","RCDPESP4",6,0)
 ;
"RTN","RCDPESP4",7,0)
 ; * this routine is to be used for IOC purposes only *
"RTN","RCDPESP4",8,0)
 ; * the VHA CBO prohibits this routine from being used in any option *
"RTN","RCDPESP4",9,0)
 ; * or in any way that is accessible to a VistA user *
"RTN","RCDPESP4",10,0)
 ;
"RTN","RCDPESP4",11,0)
IOCSTRT ; disable auto-post and auto-decrease for all payers (for IOC start)
"RTN","RCDPESP4",12,0)
 ;
"RTN","RCDPESP4",13,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP4",14,0)
 W !,"This routine excludes all payers from auto-posting."
"RTN","RCDPESP4",15,0)
 W !,"The routine should only be used at the start of IOC testing."
"RTN","RCDPESP4",16,0)
 S DIR(0)="YA",DIR("A")="Do you wish to proceed? (Y/N): ",DIR("B")="NO"
"RTN","RCDPESP4",17,0)
 D ^DIR
"RTN","RCDPESP4",18,0)
 I 'Y!$D(DTOUT)!$D(DUOUT) W !!,"File not updated.",! Q
"RTN","RCDPESP4",19,0)
 ;
"RTN","RCDPESP4",20,0)
 W !,"Exclusions for start of IOC started "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP4",21,0)
 N J,P,RCDUZ,RCFLD,RCIEN,RCNTRY,RCOMMNT
"RTN","RCDPESP4",22,0)
 S RCDUZ=DUZ X "S DUZ=.5"  ; DUZ is used in triggers for file #344.6
"RTN","RCDPESP4",23,0)
 S RCOMMNT="Auto Addition - Beginning of Field Test/IOC"
"RTN","RCDPESP4",24,0)
 ; iterate through file #344.6
"RTN","RCDPESP4",25,0)
 S RCIEN=0 F  S RCIEN=$O(^RCY(344.6,RCIEN)) Q:'RCIEN  S RCNTRY=$G(^RCY(344.6,RCIEN,0)) D:RCNTRY]""
"RTN","RCDPESP4",26,0)
 .F RCFLD=.06,.07 S P=100*RCFLD,X=$P(RCNTRY,U,P) D:'X  ; if NO, update entry
"RTN","RCDPESP4",27,0)
 ..N I,RCXCLFDA  ; FileMan FDA array
"RTN","RCDPESP4",28,0)
 ..S I=RCIEN_",",I("CMNTFLD")=$S(RCFLD=.06:1,1:2)  ; IENS and comment field #
"RTN","RCDPESP4",29,0)
 ..S RCXCLFDA(344.6,I,RCFLD)=1  ; change to YES
"RTN","RCDPESP4",30,0)
 ..S RCXCLFDA(344.6,I,I("CMNTFLD"))=RCOMMNT
"RTN","RCDPESP4",31,0)
 ..D UPDATE^DIE(,"RCXCLFDA")  ; update entry
"RTN","RCDPESP4",32,0)
 ..D AUDXCLSN(RCIEN_U_RCFLD_U_1_U_0_U_RCOMMNT)
"RTN","RCDPESP4",33,0)
 ;
"RTN","RCDPESP4",34,0)
 W !,"Exclusions for start of IOC finished "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP4",35,0)
 X "S DUZ=RCDUZ"
"RTN","RCDPESP4",36,0)
 ; send MailMan message
"RTN","RCDPESP4",37,0)
 D IOCMLMSG(RCOMMNT) W !!,"A MailMan message has been sent."
"RTN","RCDPESP4",38,0)
 ;
"RTN","RCDPESP4",39,0)
 Q
"RTN","RCDPESP4",40,0)
 ;
"RTN","RCDPESP4",41,0)
IOCEND ; enable auto-post and auto-decrease for all payers (for IOC end)
"RTN","RCDPESP4",42,0)
 ;
"RTN","RCDPESP4",43,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP4",44,0)
 W !,"This routine resets all payers as ready for auto-posting."
"RTN","RCDPESP4",45,0)
 W !,"The routine should only be used at the end of IOC."
"RTN","RCDPESP4",46,0)
 S DIR(0)="YA",DIR("A")="Do you wish to proceed? (Y/N): ",DIR("B")="NO"
"RTN","RCDPESP4",47,0)
 D ^DIR
"RTN","RCDPESP4",48,0)
 I 'Y!$D(DTOUT)!$D(DUOUT) W !!,"File not updated.",! Q
"RTN","RCDPESP4",49,0)
 ;
"RTN","RCDPESP4",50,0)
 W !,"Exclusions for end of IOC started "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP4",51,0)
 N J,P,RCDUZ,RCFLD,RCIEN,RCNTRY,RCOMMNT
"RTN","RCDPESP4",52,0)
 S RCDUZ=DUZ X "S DUZ=.5"  ; DUZ is used in triggers for file #344.6
"RTN","RCDPESP4",53,0)
 S RCOMMNT="Auto Deletion - End of Field Test/IOC"
"RTN","RCDPESP4",54,0)
 ; iterate through file #344.6
"RTN","RCDPESP4",55,0)
 S RCIEN=0 F  S RCIEN=$O(^RCY(344.6,RCIEN)) Q:'RCIEN  S RCNTRY=$G(^RCY(344.6,RCIEN,0)) D:RCNTRY]""
"RTN","RCDPESP4",56,0)
 .F RCFLD=.06,.07 S P=100*RCFLD,X=$P(RCNTRY,U,P) D:X  ; if YES, update entry
"RTN","RCDPESP4",57,0)
 ..N I,RCXCLFDA  ; FileMan FDA array
"RTN","RCDPESP4",58,0)
 ..S I=RCIEN_",",I("CMNTFLD")=$S(RCFLD=.06:1,1:2)  ; IENS and comment field #
"RTN","RCDPESP4",59,0)
 ..S RCXCLFDA(344.6,I,RCFLD)=0  ; change to NO
"RTN","RCDPESP4",60,0)
 ..S RCXCLFDA(344.6,I,I("CMNTFLD"))=RCOMMNT
"RTN","RCDPESP4",61,0)
 ..D UPDATE^DIE(,"RCXCLFDA")  ; update entry
"RTN","RCDPESP4",62,0)
 ..D AUDXCLSN(RCIEN_U_RCFLD_U_0_U_1_U_RCOMMNT)
"RTN","RCDPESP4",63,0)
 ;
"RTN","RCDPESP4",64,0)
 W !,"Exclusions for end of IOC finished "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP4",65,0)
 X "S DUZ=RCDUZ"
"RTN","RCDPESP4",66,0)
 ; send MailMan message
"RTN","RCDPESP4",67,0)
 D IOCMLMSG(RCOMMNT) W !!,"A MailMan message has been sent."
"RTN","RCDPESP4",68,0)
 ;
"RTN","RCDPESP4",69,0)
 Q
"RTN","RCDPESP4",70,0)
 ;
"RTN","RCDPESP4",71,0)
AUDXCLSN(NTRY) ; add entry to RCDPE PARAMETER AUDIT file (#344.7)
"RTN","RCDPESP4",72,0)
 ;     for IOC changes to RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP4",73,0)
 ;     the POSTMASTER is the user for each update
"RTN","RCDPESP4",74,0)
 ; NTRY = audit value in this format:
"RTN","RCDPESP4",75,0)
 ;        IEN^FIELD #^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP4",76,0)
 ;         1 ^   2   ^   3     ^   4     ^  5
"RTN","RCDPESP4",77,0)
 ;
"RTN","RCDPESP4",78,0)
 Q:$G(NTRY)=""  ; NTRY is required
"RTN","RCDPESP4",79,0)
 N RCFDA  ; FileMan FDA array for audits
"RTN","RCDPESP4",80,0)
 S RCFDA(344.7,"+1,",.01)=$$NOW^XLFDT
"RTN","RCDPESP4",81,0)
 S RCFDA(344.7,"+1,",.02)=$P(NTRY,U) ; IEN
"RTN","RCDPESP4",82,0)
 S RCFDA(344.7,"+1,",.03)=.5  ; USER (POSTMASTER)
"RTN","RCDPESP4",83,0)
 S RCFDA(344.7,"+1,",.04)=$P(NTRY,U,2) ; FIELD NUMBER
"RTN","RCDPESP4",84,0)
 S RCFDA(344.7,"+1,",.05)=344.6 ; FILE NUMBER
"RTN","RCDPESP4",85,0)
 S RCFDA(344.7,"+1,",.06)=$P(NTRY,U,3) ; NEW VALUE
"RTN","RCDPESP4",86,0)
 S RCFDA(344.7,"+1,",.07)=$P(NTRY,U,4) ; OLD VALUE
"RTN","RCDPESP4",87,0)
 S RCFDA(344.7,"+1,",.08)=$P(NTRY,U,5) ; COMMENT
"RTN","RCDPESP4",88,0)
 D UPDATE^DIE(,"RCFDA")
"RTN","RCDPESP4",89,0)
 Q
"RTN","RCDPESP4",90,0)
 ;
"RTN","RCDPESP4",91,0)
IOCMLMSG(RCACT) ; RCACT - activity to include MailMan message text
"RTN","RCDPESP4",92,0)
 N RCMSGTXT,RCSITE,RCSUBJ,XMINSTR,XMTO
"RTN","RCDPESP4",93,0)
 S RCSITE=$$SITE^VASITE
"RTN","RCDPESP4",94,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP4",95,0)
 S RCSUBJ=$E("ePayments IOC activity "_$P(RCSITE,U,2),1,65)
"RTN","RCDPESP4",96,0)
 S RCMSGTXT(1)=" "
"RTN","RCDPESP4",97,0)
 S RCMSGTXT(2)="        Site: "_$P(RCSITE,U,2)
"RTN","RCDPESP4",98,0)
 S RCMSGTXT(3)="    Station # "_$P(RCSITE,U,3)
"RTN","RCDPESP4",99,0)
 S RCMSGTXT(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP4",100,0)
 S RCMSGTXT(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP4",101,0)
 S RCMSGTXT(6)="        User: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP4",102,0)
 S RCMSGTXT(7)=" "
"RTN","RCDPESP4",103,0)
 S RCMSGTXT(8)=" The following IOC activity was performed: "
"RTN","RCDPESP4",104,0)
 S RCMSGTXT(9)="  "_$C(34)_$G(RCACT)_$C(34)
"RTN","RCDPESP4",105,0)
 ;
"RTN","RCDPESP4",106,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPESP4",107,0)
 ;
"RTN","RCDPESP4",108,0)
 S XMTO(DUZ)="",XMTO("G.RCDPE PAYMENTS MGMT")=""
"RTN","RCDPESP4",109,0)
 ;
"RTN","RCDPESP4",110,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP4",111,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,"RCMSGTXT",.XMTO,.XMINSTR)
"RTN","RCDPESP4",112,0)
 ;
"RTN","RCDPESP4",113,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP4",114,0)
 .D MES^XPDUTL("MailMan returned an error.")
"RTN","RCDPESP4",115,0)
 .D MES^XPDUTL("The error text is:")
"RTN","RCDPESP4",116,0)
 .N G S G=$NA(^TMP("XMERR",$J))
"RTN","RCDPESP4",117,0)
 .F  S G=$Q(@G) Q:G=""  Q:$QS(G,2)'=$J  D MES^XPDUTL("  "_$C(34)_@G_$C(34))
"RTN","RCDPESP4",118,0)
 .D MES^XPDUTL(" * End of Error Text *")
"RTN","RCDPESP4",119,0)
 .K ^TMP("XMERR",$J)
"RTN","RCDPESP4",120,0)
 ;
"RTN","RCDPESP4",121,0)
 Q
"RTN","RCDPESP4",122,0)
 ;
"RTN","RCDPESR1")
0^90^B49930663
"RTN","RCDPESR1",1,0)
RCDPESR1 ;ALB/TMP - Server interface to AR from Austin ;Jun 06, 2014@19:11:19
"RTN","RCDPESR1",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,202,271,298**;Mar 20, 1995;Build 121
"RTN","RCDPESR1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR1",4,0)
 ;
"RTN","RCDPESR1",5,0)
 ;Reference to $$RXBIL^IBNCPDPU supported by DBIA 4435
"RTN","RCDPESR1",6,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR1",7,0)
 ;
"RTN","RCDPESR1",8,0)
 Q
"RTN","RCDPESR1",9,0)
 ;
"RTN","RCDPESR1",10,0)
PERROR(RCERR,RCEMG,RCXMZ) ; Process Errors - Send bulletin to mail group
"RTN","RCDPESR1",11,0)
 ; RCERR = Error text array
"RTN","RCDPESR1",12,0)
 ; RCEMG = name of the mail group to which these errors should be sent
"RTN","RCDPESR1",13,0)
 ; RCXMZ = internal entry # of the mailman msg
"RTN","RCDPESR1",14,0)
 ; RCTYPE = msg type, if known
"RTN","RCDPESR1",15,0)
 N CT,XMDUZ,XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,XMZ,XMERR,Z
"RTN","RCDPESR1",16,0)
 ;
"RTN","RCDPESR1",17,0)
 S CT=0
"RTN","RCDPESR1",18,0)
 ;
"RTN","RCDPESR1",19,0)
 I $G(RCEMG)="" S CT=CT+1,RCXM(CT)=$P($T(ERROR+2),";;",2),XMTO(.5)=""
"RTN","RCDPESR1",20,0)
 ;
"RTN","RCDPESR1",21,0)
 I $D(RCEMG) D
"RTN","RCDPESR1",22,0)
 . S:RCEMG="" RCEMG="RCDPE PAYMENTS EXCEPTIONS"
"RTN","RCDPESR1",23,0)
 . S:$E(RCEMG,1,2)'="G." RCEMG="G."_RCEMG
"RTN","RCDPESR1",24,0)
 . S XMTO("I:"_RCEMG)=""
"RTN","RCDPESR1",25,0)
 ;
"RTN","RCDPESR1",26,0)
 S Z=$O(XMTO("")) I Z=.5,'$O(XMTO(.5)) S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")=""
"RTN","RCDPESR1",27,0)
 D EMFORM(CT,.RCERR,.RCXM,RCXMZ)
"RTN","RCDPESR1",28,0)
 ;
"RTN","RCDPESR1",29,0)
 S XMDUZ=""
"RTN","RCDPESR1",30,0)
 S XMSUBJ="EDI LBOX SERVER OPTION ERROR",XMBODY="RCXM"
"RTN","RCDPESR1",31,0)
 D
"RTN","RCDPESR1",32,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",33,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",34,0)
 K ^TMP("RCRAW",$J)
"RTN","RCDPESR1",35,0)
 Q
"RTN","RCDPESR1",36,0)
 ;
"RTN","RCDPESR1",37,0)
EMFORM(CT,RCERR,RCXM,RCXMZ) ; Format error msgs
"RTN","RCDPESR1",38,0)
 ; INPUT:
"RTN","RCDPESR1",39,0)
 ;   CT = # of lines previously populated in error msg
"RTN","RCDPESR1",40,0)
 ;   RCERR = array of errors
"RTN","RCDPESR1",41,0)
 ;   RCXMZ = internal entry # of mailman msg
"RTN","RCDPESR1",42,0)
 ;
"RTN","RCDPESR1",43,0)
 ; OUTPUT:
"RTN","RCDPESR1",44,0)
 ;   RCXM = array containing the complete error msg text
"RTN","RCDPESR1",45,0)
 ;
"RTN","RCDPESR1",46,0)
 N TTYPE,TDATE,TTIME,Z
"RTN","RCDPESR1",47,0)
 ;
"RTN","RCDPESR1",48,0)
 S TDATE=$G(^TMP("RCERR",$J,"DATE")),TTIME=$P(TDATE,".",2)_"000000",TDATE=$$FMTE^XLFDT($P(TDATE,"."),"2D")
"RTN","RCDPESR1",49,0)
 S TTYPE=$G(^TMP("RCMSG",$J))
"RTN","RCDPESR1",50,0)
 ;
"RTN","RCDPESR1",51,0)
 S CT=CT+1
"RTN","RCDPESR1",52,0)
 S RCXM(CT)="** AN EXCEPTION HAS BEEN DETECTED FOR AN EDI LOCKBOX RETURN MESSAGE **",CT=CT+1,RCXM(CT)=" "
"RTN","RCDPESR1",53,0)
 S CT=CT+1
"RTN","RCDPESR1",54,0)
 S RCXM(CT)="             Return Message Code: "_$S(TTYPE="":$S($G(^TMP("RCERR",$J,"TYPE"))'="":^("TYPE"),1:"Cannot be determined"),1:TTYPE)
"RTN","RCDPESR1",55,0)
 ;
"RTN","RCDPESR1",56,0)
 S CT=CT+2
"RTN","RCDPESR1",57,0)
 S RCXM(CT-1)=" ",RCXM(CT)=$J("",13)_"Return Message Date: "_TDATE_"    Message Time: "_$E(TTIME,1,2)_":"_$E(TTIME,3,4)_":"_$E(TTIME,5,6),CT=CT+1
"RTN","RCDPESR1",58,0)
 ;
"RTN","RCDPESR1",59,0)
 S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=$J("",15)_"Mailman Message #: "_$G(RCXMZ)
"RTN","RCDPESR1",60,0)
 ;
"RTN","RCDPESR1",61,0)
 I $G(RCERR)'="",RCERR?1A.E S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=RCERR
"RTN","RCDPESR1",62,0)
 I $G(^TMP("RCERR",$J,"TEXT"))'="" S CT=CT+2,RCXM(CT)=^("TEXT"),RCXM(CT-1)=" "
"RTN","RCDPESR1",63,0)
 ;
"RTN","RCDPESR1",64,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S:$G(^TMP("RCERR",$J,"TEXT"))="" CT=CT+1,RCXM(CT)=" " I $G(RCERR(Z))'="",RCERR(Z)'=" " S CT=CT+1,RCXM(CT)=RCERR(Z)
"RTN","RCDPESR1",65,0)
 S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S CT=CT+1,RCXM(CT)=^(Z)
"RTN","RCDPESR1",66,0)
 ;
"RTN","RCDPESR1",67,0)
 Q
"RTN","RCDPESR1",68,0)
 ;
"RTN","RCDPESR1",69,0)
EXTERR(RCERR,RCE) ; Put error into error array
"RTN","RCDPESR1",70,0)
 ; Returns: (must be passed by reference)
"RTN","RCDPESR1",71,0)
 ;   RCERR = specific error encountered, returned as 4
"RTN","RCDPESR1",72,0)
 ;   RCE = error text from the word processing field update error global
"RTN","RCDPESR1",73,0)
 N RCZ,Q
"RTN","RCDPESR1",74,0)
 S RCE="",RCERR=4 ; error reported as 'record was partially stored'
"RTN","RCDPESR1",75,0)
 S RCZ=0 F  S RCZ=$O(RCE("DIERR",RCZ)) Q:'RCZ  S Q=$G(RCE("DIERR",RCZ,"TEXT",1)) I $L(Q),$L(Q)+$L(RCE)<99 S RCE=RCE_Q_";;"
"RTN","RCDPESR1",76,0)
 Q
"RTN","RCDPESR1",77,0)
 ;
"RTN","RCDPESR1",78,0)
ERRUPD(RCGBL,RCD,RCTYPE,RCERR) ; Set up global array to hold msg data
"RTN","RCDPESR1",79,0)
 ; RCGBL = name of the global or array where msg data is found
"RTN","RCDPESR1",80,0)
 ; RCD = array containing mail header data for the msg
"RTN","RCDPESR1",81,0)
 ; RCTYPE = type of msg (835ERA/835XFR/etc)
"RTN","RCDPESR1",82,0)
 ; RCERR = error array - text or reference to error tables below
"RTN","RCDPESR1",83,0)
 ;
"RTN","RCDPESR1",84,0)
 ; Returns ^TMP("RCERR",$J,"MSG" array with formatted error text
"RTN","RCDPESR1",85,0)
 ;
"RTN","RCDPESR1",86,0)
 N Z,Z0,Z1,Z2,CT,RCE
"RTN","RCDPESR1",87,0)
 ;
"RTN","RCDPESR1",88,0)
 Q:$G(RCERR)<0
"RTN","RCDPESR1",89,0)
 K ^TMP("RCERR",$J)
"RTN","RCDPESR1",90,0)
 S CT=0
"RTN","RCDPESR1",91,0)
 ;
"RTN","RCDPESR1",92,0)
 S ^TMP("RCERR",$J,"DATE")=$G(RCD("DATE"))
"RTN","RCDPESR1",93,0)
 S ^TMP("RCERR",$J,"TYPE")=$G(RCTYPE)
"RTN","RCDPESR1",94,0)
 S ^TMP("RCERR",$J,"SUBJ")=$G(RCD("SUBJ"))
"RTN","RCDPESR1",95,0)
 ;
"RTN","RCDPESR1",96,0)
 I $G(RCERR)>0,RCERR<20 D
"RTN","RCDPESR1",97,0)
 . S Z="ERROR2+"_RCERR
"RTN","RCDPESR1",98,0)
 . S RCE=$P($T(@Z),";;",2)
"RTN","RCDPESR1",99,0)
 . I RCE'="" S ^TMP("RCERR",$J,"TEXT")=RCE
"RTN","RCDPESR1",100,0)
 ;
"RTN","RCDPESR1",101,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S Z0="" F  S Z0=$O(RCERR(Z,Z0)) Q:Z0=""  S RCE=$G(RCERR(Z,Z0)) D
"RTN","RCDPESR1",102,0)
 . I $L(RCE) S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$S(RCE:$P($T(ERROR+RCE),";;",2),1:RCE)
"RTN","RCDPESR1",103,0)
 . S RCTYPE=$P($G(@RCGBL@(0)),U)
"RTN","RCDPESR1",104,0)
 . S:$G(^TMP("RCERR",$J,"TYPE"))="" ^("TYPE")=RCTYPE
"RTN","RCDPESR1",105,0)
 . S Z1=""
"RTN","RCDPESR1",106,0)
 . F  S Z1=$O(@RCGBL@(1,"D",Z1)) Q:Z1=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(1,"D",Z1))
"RTN","RCDPESR1",107,0)
 ;
"RTN","RCDPESR1",108,0)
 I $D(@RCGBL@(2,"D")) D
"RTN","RCDPESR1",109,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",110,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",111,0)
 . S Z2="" F  S Z2=$O(@RCGBL@(2,"D",Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(2,"D",Z2))
"RTN","RCDPESR1",112,0)
 E  D
"RTN","RCDPESR1",113,0)
 . Q:'$D(^TMP("RCRAW",$J))
"RTN","RCDPESR1",114,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",115,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",116,0)
 . S Z2="" F  S Z2=$O(^TMP("RCRAW",$J,Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(^TMP("RCRAW",$J,Z2))
"RTN","RCDPESR1",117,0)
 ;
"RTN","RCDPESR1",118,0)
 Q
"RTN","RCDPESR1",119,0)
 ;
"RTN","RCDPESR1",120,0)
DKILL(RCXMZ) ; Delete server mail msg from postmaster mailbox
"RTN","RCDPESR1",121,0)
 ; RCXMZ = ien of mailman msg
"RTN","RCDPESR1",122,0)
 ;
"RTN","RCDPESR1",123,0)
 D ZAPSERV^XMXAPI("S.RCDPE EDI LOCKBOX SERVER",RCXMZ)
"RTN","RCDPESR1",124,0)
 Q
"RTN","RCDPESR1",125,0)
 ;
"RTN","RCDPESR1",126,0)
TEMPDEL(DA) ; Delete msg from temporary msg file
"RTN","RCDPESR1",127,0)
 ; DA = ien of the entry in file 344.5
"RTN","RCDPESR1",128,0)
 ;
"RTN","RCDPESR1",129,0)
 N DIK,Y,X
"RTN","RCDPESR1",130,0)
 S DIK="^RCY(344.5," D ^DIK
"RTN","RCDPESR1",131,0)
 L -^RCY(344.5,DA,0)
"RTN","RCDPESR1",132,0)
 Q
"RTN","RCDPESR1",133,0)
 ;
"RTN","RCDPESR1",134,0)
RESTMSG(RCD,RCARRAY,XMZ) ; Read rest of msg, store in array
"RTN","RCDPESR1",135,0)
 ; RCD = last line # already in the msg
"RTN","RCDPESR1",136,0)
 ; RCARRAY = name of the array to store the data in
"RTN","RCDPESR1",137,0)
 ; XMZ = ien of the mailman msg
"RTN","RCDPESR1",138,0)
 ;
"RTN","RCDPESR1",139,0)
 F  X XMREC Q:XMER<0  S RCD=RCD+1,@RCARRAY@(RCD)=XMRG
"RTN","RCDPESR1",140,0)
 Q
"RTN","RCDPESR1",141,0)
 ;
"RTN","RCDPESR1",142,0)
TAXERR(RCTYPE,RCINS,RCTID,RCCHG) ; Send a bulletin for a bad tax id
"RTN","RCDPESR1",143,0)
 ; RCTYPE = "ERA" for an ERA record,  "EFT" for an EFT record
"RTN","RCDPESR1",144,0)
 ; RCINS = name and id to identify the ins co
"RTN","RCDPESR1",145,0)
 ; RCTID = tax id sent in error
"RTN","RCDPESR1",146,0)
 ; RCCHG = code describing how correction was made
"RTN","RCDPESR1",147,0)
 ;         'E'=EPHRA, 'C'=Changed by looking at claim #'s
"RTN","RCDPESR1",148,0)
 ;
"RTN","RCDPESR1",149,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCDXM,XMZ,XMERR,RCCT,RCDXM,RCCT
"RTN","RCDPESR1",150,0)
 S RCCT=0
"RTN","RCDPESR1",151,0)
 S RCCT=RCCT+1,RCDXM(RCCT)="An "_RCTYPE_" was received at your site "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" with an invalid tax id.",RCCT=RCCT+1,RCDXM(RCCT)=" From: "_RCINS
"RTN","RCDPESR1",152,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" The tax id sent was: "_RCTID_" and it was corrected by: "
"RTN","RCDPESR1",153,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" "_$S(RCCHG="E":"EPHRA",1:"Extracting it based on bill numbers in the ERA")
"RTN","RCDPESR1",154,0)
 S RCCT=RCCT+2,RCDXM(RCCT-1)=" ",RCDXM(RCCT)="If your site continues to receive these bulletins for this payer,",RCCT=RCCT+1,RCDXM(RCCT)="contact the payer and request they correct their tax id for your site"
"RTN","RCDPESR1",155,0)
 ;
"RTN","RCDPESR1",156,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",XMBODY="RCDXM"
"RTN","RCDPESR1",157,0)
 D
"RTN","RCDPESR1",158,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",159,0)
 . D SENDMSG^XMXAPI(.5,"EDI LBOX ERRONEOUS TAX ID ON "_RCTYPE,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",160,0)
 Q
"RTN","RCDPESR1",161,0)
 ;
"RTN","RCDPESR1",162,0)
BILL(X,RCDT,RCIB) ; Returns ien of bill in X or -1 if not valid
"RTN","RCDPESR1",163,0)
 ; RCDT = the Statement from date (used for Rx bills)
"RTN","RCDPESR1",164,0)
 ; and, if passed by reference, RCIB = 1 if an insurance bill
"RTN","RCDPESR1",165,0)
 N DIC,Y
"RTN","RCDPESR1",166,0)
 S RCIB=0
"RTN","RCDPESR1",167,0)
 S X=$TR(X," "),X=$TR(X,"O","0") ; Remove spaces, change ohs to zeroes
"RTN","RCDPESR1",168,0)
 I X'["-",$E(X,1,3)?3N,+$E(X,1,3),$L(X)>7,$L(X)<12 S X=$E(X,1,3)_"-"_$E(X,4,$L(X))
"RTN","RCDPESR1",169,0)
 S DIC="^PRCA(430,",DIC(0)="MZ" D ^DIC
"RTN","RCDPESR1",170,0)
 ; Checks if the ECME# is valid
"RTN","RCDPESR1",171,0)
 I Y<0,$$VALECME^BPSUTIL2(X) D
"RTN","RCDPESR1",172,0)
 . S ARRAY("ECME")=X,ARRAY("FILLDT")=$G(RCDT)
"RTN","RCDPESR1",173,0)
 . S Y=$$RXBIL^IBNCPDPU(.ARRAY)     ; DBIA 4435
"RTN","RCDPESR1",174,0)
 . I Y>0 S Y(0)=$G(^PRCA(430,+Y,0))
"RTN","RCDPESR1",175,0)
 I Y>0 S RCIB=($P($G(^RCD(340,+$P(Y(0),U,9),0)),U)["DIC(36,")
"RTN","RCDPESR1",176,0)
 Q +Y
"RTN","RCDPESR1",177,0)
 ;
"RTN","RCDPESR1",178,0)
FMDT(X) ; Format date (X) in YYYYMMDD to Fileman format
"RTN","RCDPESR1",179,0)
 I $L(X)=8 D
"RTN","RCDPESR1",180,0)
 . S X=$E(X,1,4)-1700_$E(X,5,8)
"RTN","RCDPESR1",181,0)
 Q X
"RTN","RCDPESR1",182,0)
 ;
"RTN","RCDPESR1",183,0)
ERROR ; Top level error msgs for msgs
"RTN","RCDPESR1",184,0)
 ;;Invalid mailgroup designated for EDI Lockbox errors
"RTN","RCDPESR1",185,0)
 ;;Message header error
"RTN","RCDPESR1",186,0)
 ;
"RTN","RCDPESR1",187,0)
ERROR2 ; Error condition msgs for msgs
"RTN","RCDPESR1",188,0)
 ;;Message code is invalid for EDI Lockbox.
"RTN","RCDPESR1",189,0)
 ;;This message has no ending $ or 99 record.
"RTN","RCDPESR1",190,0)
 ;;Message file problem - no message stored.
"RTN","RCDPESR1",191,0)
 ;;Message file problem - message partially stored.
"RTN","RCDPESR1",192,0)
 ;;No valid claims for the site found on the ERA.
"RTN","RCDPESR1",193,0)
 ;
"RTN","RCDPESR2")
0^29^B84502503
"RTN","RCDPESR2",1,0)
RCDPESR2 ;ALB/TMK/DWA - Server auto-upd - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR2",2,0)
 ;;4.5;Accounts Receivable;**173,216,208,230,252,264,269,271,298**;Mar 20, 1995;Build 121
"RTN","RCDPESR2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR2",4,0)
 ; IA 4042 (IBCEOB)
"RTN","RCDPESR2",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR2",6,0)
 ;
"RTN","RCDPESR2",7,0)
TASKERA(RCTDA) ; Task to upd ERA
"RTN","RCDPESR2",8,0)
 ; RCTDA = ien 344.5
"RTN","RCDPESR2",9,0)
 N ZTDTH,ZTUCI,ZTSAVE,ZTIO,ZTDESC,ZTRTN,ZTSK,DIE,DR,DA
"RTN","RCDPESR2",10,0)
 S (ZTSAVE("DT"),ZTSAVE("U"),ZTSAVE("DUZ"))="",ZTSAVE("ZTREQ")="@",ZTRTN="NEWERA^RCDPESR2("_RCTDA_",0)",ZTDTH=$H,ZTIO=""
"RTN","RCDPESR2",11,0)
 D ^%ZTLOAD
"RTN","RCDPESR2",12,0)
 Q
"RTN","RCDPESR2",13,0)
 ;
"RTN","RCDPESR2",14,0)
NEWERA(RCTDA,RCREFILE) ;Tasked
"RTN","RCDPESR2",15,0)
 ; Add new EOB's to IB & ERA tot rec to AR
"RTN","RCDPESR2",16,0)
 ; RCTDA = ien 344.5
"RTN","RCDPESR2",17,0)
 ; RCREFILE = 1: re-filing rec via exc proc
"RTN","RCDPESR2",18,0)
 N RCDUPERR,RCPAYER,RCRTOT,RCE,RCEC,RCERR,RCR1,RCADJ,DIE,DR,DA,Z,Q
"RTN","RCDPESR2",19,0)
 S ZTREQ="@"
"RTN","RCDPESR2",20,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",21,0)
 L +^RCY(344.5,RCTDA):5
"RTN","RCDPESR2",22,0)
 I $D(ZTQUEUED) S DIE="^RCY(344.5,",DA=RCTDA,DR=".05////"_ZTSK_";.04////1" D ^DIE
"RTN","RCDPESR2",23,0)
 I $P($G(^RCY(344.5,RCTDA,0)),U,5),'$G(RCREFILE) S DIE="^RCY(344.5,",DA=RCTDA,DR=".1////4;.08///1" D ^DIE
"RTN","RCDPESR2",24,0)
 S RCR1=$P($G(^RCY(344.5,RCTDA,0)),U,7),RCPAYER=$P($G(^RCY(344.5,RCTDA,3)),U)
"RTN","RCDPESR2",25,0)
 S RCRTOT=$S(RCR1:RCR1,1:$$ERATOT^RCDPESR6(RCTDA,.RCERR)) ; ERA rec
"RTN","RCDPESR2",26,0)
 S RCDUPERR=$S($G(RCERR)="DUP"!($G(RCERR(1))=-2):$G(RCERR(1)),1:0) K RCERR(1)
"RTN","RCDPESR2",27,0)
 I RCRTOT,'RCR1 S DIE="^RCY(344.5,",DR=".07////"_RCRTOT,DA=RCTDA D ^DIE
"RTN","RCDPESR2",28,0)
 D:RCDUPERR'=-2 UPDEOB(RCTDA,5,$S('$G(RCREFILE):RCDUPERR,1:-1)) ; Add EOB det to IB
"RTN","RCDPESR2",29,0)
 I RCRTOT D UPDCON^RCDPESR6(RCRTOT),UPDADJ^RCDPESR6(RCRTOT),UPD3444^RCDPESR6(.RCRTOT) ; Bills added 344.41
"RTN","RCDPESR2",30,0)
 I RCRTOT,RCTDA S DIE="^RCY(344.5,",DR=".08////0;.1///@",DA=RCTDA D ^DIE
"RTN","RCDPESR2",31,0)
 I 'RCRTOT D  G QNEW
"RTN","RCDPESR2",32,0)
 .I RCDUPERR Q:'RCTDA  D  S RCTDA="" Q
"RTN","RCDPESR2",33,0)
 ..I RCDUPERR=-2 D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - DUPLICATE ERA NOT FILED "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",34,0)
 ..D TEMPDEL^RCDPESR1(RCTDA)
"RTN","RCDPESR2",35,0)
 .S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" An error occurred while storing ERA data.",RCE(2)="No totals data was stored for this ERA record"_$S('$G(RCREFILE):" and an",1:" on this re-file attempt.")
"RTN","RCDPESR2",36,0)
 .S RCE(3)=$S('$G(RCREFILE):"ERA transmission exception was created.",1:"")
"RTN","RCDPESR2",37,0)
 .D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",38,0)
 .S DIE="^RCY(344.5,",DA=RCTDA,DR=".07///@;.08////1;.1////1" D ^DIE
"RTN","RCDPESR2",39,0)
 .K RCERR
"RTN","RCDPESR2",40,0)
 .S RCERR(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" The ERA data could not be stored. The AR receipt",RCERR(2)=" for this data must be created/processed manually for the bills included"
"RTN","RCDPESR2",41,0)
 .S RCERR(3)=" in this ERA."_$S('$G(RCREFILE):"",1:"  This error occurred during a refile attempt."),RCERR(4)=" "
"RTN","RCDPESR2",42,0)
 .D BULLERA^RCDPESR0("DF",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - TOTALS FILE EXCEPTION "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",43,0)
 .K RCERR
"RTN","RCDPESR2",44,0)
 ;-----
"RTN","RCDPESR2",45,0)
 ; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR2",46,0)
 ;I $$ADJ^RCDPEU(RCRTOT,.RCADJ) D  ;Bulletin adjs
"RTN","RCDPESR2",47,0)
 ;.S RCEC=$$ADJERR^RCDPESR3(.RCERR)
"RTN","RCDPESR2",48,0)
 ;.I RCADJ'=2 S RCEC=RCEC+1,RCERR(RCEC)=" THERE ARE ERA LEVEL ADJUSTMENT(S)",RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",49,0)
 ;.I RCADJ'=1 S RCEC=RCEC+1,RCERR(RCEC)=" THE FOLLOWING BILL(S) HAVE RETRACTIONS:" D
"RTN","RCDPESR2",50,0)
 ;..S (Q,Z)=0 S Z=0 F  S Z=$O(RCADJ(RCRTOT,Z)) Q:'Z  S:'Q RCEC=RCEC+1,RCERR(RCEC)="  " S Q=Q+1,RCERR(RCEC)=RCERR(RCEC)_"  "_RCADJ(RCRTOT,Z) S:Q=4 Q=0
"RTN","RCDPESR2",51,0)
 ;..S RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",52,0)
 ;.D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - ERA HAS ADJ/TAKEBACKS "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",53,0)
 ;-----
"RTN","RCDPESR2",54,0)
 ;
"RTN","RCDPESR2",55,0)
QNEW I RCTDA,'$P($G(^RCY(344.5,RCTDA,0)),U,8) D TEMPDEL^RCDPESR1(RCTDA) S RCTDA=""
"RTN","RCDPESR2",56,0)
 I RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U)'="" S DIE="^RCY(344.5,",DR=".04////0;.05///@"_$S('$G(RCR1)&$G(RCRTOT):";.07////"_RCRTOT,1:""),DA=RCTDA D ^DIE
"RTN","RCDPESR2",57,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",58,0)
 I RCTDA L -^RCY(344.5,RCTDA)
"RTN","RCDPESR2",59,0)
 Q
"RTN","RCDPESR2",60,0)
 ;
"RTN","RCDPESR2",61,0)
UPDEOB(RCTDA,RCFILE,DUP) ;Upd 361.1 from ERA msg in 344.5 or .4
"RTN","RCDPESR2",62,0)
 ;RCTDA = ien ERA msg in 344.5 or ;subfile in 344.4
"RTN","RCDPESR2",63,0)
 ;RCFILE = 4 file 344.4, 5 if 344.5
"RTN","RCDPESR2",64,0)
 ;DUP = msg # if dup msg, but not same # or -1 if same msg #
"RTN","RCDPESR2",65,0)
 ;Returned for each bill in ERA:
"RTN","RCDPESR2",66,0)
 ;^TMP($J,"RCDPEOB",n)=Bill ien^AR bill#^SrvDt^ECME#
"RTN","RCDPESR2",67,0)
 ;^TMP($J,"RCDPEOB",n,"EOB")=EOB ien^amt pd^ins co ptr^rev flg^EEOB pn^amtbld^^^^BPNPI^RNPI^ETQual^LN^FN
"RTN","RCDPESR2",68,0)
 ;^TMP($J,"RCDPEOB","ADJ",x)=adj rec ('02')
"RTN","RCDPESR2",69,0)
 ;Also:
"RTN","RCDPESR2",70,0)
 ;^TMP($J,"RCDPEOB","HDR")=hdr rec from txmn
"RTN","RCDPESR2",71,0)
 ;^TMP($J,"RCDPEOB","CONTACT")=ERA contact rec ('01')
"RTN","RCDPESR2",72,0)
 ;
"RTN","RCDPESR2",73,0)
 N RCGBL,RC,RC0,RCCT,RCCT1,RCEOB,RCBILL,RCDPBNPI,RCMNUM,RCIFN,RCIB,RCERR,RCSTAR,RCET,RCX,RCXMG,Z,Q,DA,DR,DIE
"RTN","RCDPESR2",74,0)
 N RCPAYER,RCFILED,RCEOBD,RCNOUPD,REFORM,RCSD,RCERR1,C5,ECMENUM
"RTN","RCDPESR2",75,0)
 K ^TMP($J,"RCDP-EOB"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",76,0)
 ;
"RTN","RCDPESR2",77,0)
 S RCPAYER="",RCFILED=1,RCNOUPD=0
"RTN","RCDPESR2",78,0)
 I RCFILE=5 D
"RTN","RCDPESR2",79,0)
 .S RCGBL=$NA(^RCY(344.5,RCTDA,2))
"RTN","RCDPESR2",80,0)
 .S RCMNUM=+$G(^RCY(344.5,RCTDA,0)),RCXMG=$P($G(^(0)),U,11)
"RTN","RCDPESR2",81,0)
 .I $G(DUP) S RCNOUPD=$S(DUP>0:+DUP,1:RCXMG)
"RTN","RCDPESR2",82,0)
 .S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR2",83,0)
 .I $P(^TMP($J,"RCDPEOB","HDR"),U)["XFR",'$P($G(^RCY(344.5,RCTDA,0)),U,14) D
"RTN","RCDPESR2",84,0)
 ..D SENDACK^RCDPESR5(RCTDA,1)
"RTN","RCDPESR2",85,0)
 ..S DR=".14////1",DIE="^RCY(344.5,",DA=RCTDA D ^DIE
"RTN","RCDPESR2",86,0)
 ;
"RTN","RCDPESR2",87,0)
 I RCFILE=4 D
"RTN","RCDPESR2",88,0)
 .S RCGBL=$NA(^RCY(344.4,+RCTDA,1,+$P(RCTDA,";",2),1))
"RTN","RCDPESR2",89,0)
 .S RCMNUM=$P($G(^RCY(344.4,+RCTDA,0)),U,12),RCXMG=$P($G(^(0)),U,12)
"RTN","RCDPESR2",90,0)
 .S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.4,+RCTDA,1,+$P(RCTDA,";",2),1,1,0))
"RTN","RCDPESR2",91,0)
 ;
"RTN","RCDPESR2",92,0)
 S RCPAYER=$P($G(^TMP($J,"RCDPEOB","HDR")),U,6)
"RTN","RCDPESR2",93,0)
 S RCDPBNPI=$P($G(^TMP($J,"RCDPEOB","HDR")),U,18)
"RTN","RCDPESR2",94,0)
 ;
"RTN","RCDPESR2",95,0)
 ;srv dates
"RTN","RCDPESR2",96,0)
 S RCSD=$NA(^TMP($J,"RCSRVDT")) K @RCSD
"RTN","RCDPESR2",97,0)
 N CP5 S CP5="",RC=1,C5=0 ;retrofit 264 into 269
"RTN","RCDPESR2",98,0)
 F  S RC=$O(@RCGBL@(RC)) Q:'RC  S RC0=$G(^(RC,0)) D
"RTN","RCDPESR2",99,0)
 .I RC0<5 Q
"RTN","RCDPESR2",100,0)
 .I +RC0=5 S C5=RC,CP5=$P(RC0,U,2) Q  ;retrofit 264 into 269
"RTN","RCDPESR2",101,0)
 . ; service date for possible ECME# matching
"RTN","RCDPESR2",102,0)
 .I +RC0=40,$$VALECME^BPSUTIL2(CP5),C5,'$D(@RCSD@(C5)) S @RCSD@(C5)=$P(RC0,U,19)
"RTN","RCDPESR2",103,0)
 ;
"RTN","RCDPESR2",104,0)
 S RC=1,(RCCT,RCCT1,RCX,REFORM)=0,RCBILL=""
"RTN","RCDPESR2",105,0)
 S RCERR1=$NA(^TMP("RCERR1",$J)) K @RCERR1
"RTN","RCDPESR2",106,0)
 F  S RC=$O(@RCGBL@(RC)) Q:'RC  S RC0=$G(^(RC,0)) D
"RTN","RCDPESR2",107,0)
 .I RCFILE=5,+RC0=1 D  Q
"RTN","RCDPESR2",108,0)
 ..S ^TMP($J,"RCDPEOB","CONTACT")=RC0
"RTN","RCDPESR2",109,0)
 .;
"RTN","RCDPESR2",110,0)
 .I RCFILE=5,+RC0=2 D  Q
"RTN","RCDPESR2",111,0)
 ..S RCX=RCX+1,^TMP($J,"RCDPEOB","ADJ",RCX)=RC0
"RTN","RCDPESR2",112,0)
 .I RCFILE=5,+RC0=3 D  Q  ; Adding logic for line type 03,Patch 269,DWA
"RTN","RCDPESR2",113,0)
 ..S $P(^TMP($J,"RCDPEOB","ADJ",RCX),U,5)=$P(RC0,U,2)
"RTN","RCDPESR2",114,0)
 .;
"RTN","RCDPESR2",115,0)
 .I +RC0=5 S RCCT=RCCT+1,RCCT1=0 D
"RTN","RCDPESR2",116,0)
 ..S REFORM=0,ECMENUM="" I $$VALECME^BPSUTIL2($P(RC0,U,2)) S ECMENUM=$P(RC0,U,2)
"RTN","RCDPESR2",117,0)
 ..S Z=$$BILL^RCDPESR1($P(RC0,U,2),$G(@RCSD@(RC)),.RCIB)   ; look up claim ien by claim# or by ECME#
"RTN","RCDPESR2",118,0)
 ..I Z S RCBILL=$P($G(^PRCA(430,Z,0)),U) I RCBILL'="",RCBILL'=$P(RC0,U,2) S REFORM=1,$P(RC0,U,2)=RCBILL
"RTN","RCDPESR2",119,0)
 ..S RCBILL=$P(RC0,U,2)
"RTN","RCDPESR2",120,0)
 ..S Z=$S(Z>0:$S($G(RCIB):Z,1:-1),1:-1)
"RTN","RCDPESR2",121,0)
 ..S ^TMP($J,"RCDP-EOB",RCCT,0)=Z_U_RCBILL_U_$G(@RCSD@(RC))_U_ECMENUM
"RTN","RCDPESR2",122,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,5)=$P(RC0,U,3)_","_$P(RC0,U,4)_" "_$P(RC0,U,5) ;Save pt nm
"RTN","RCDPESR2",123,0)
 ..I Z>0 S Q=+$P($G(^PRCA(430,Z,0)),U,9) I $P($G(^RCD(340,Q,0)),U)["DIC(36," S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,3)=+^RCD(340,Q,0) ;Save ins co
"RTN","RCDPESR2",124,0)
 .;
"RTN","RCDPESR2",125,0)
 .I +RC0>5,REFORM S $P(RC0,U,2)=RCBILL ;
"RTN","RCDPESR2",126,0)
 .I +RC0=10 D  ;Save amt pd/billed, rev flg
"RTN","RCDPESR2",127,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)=$S(+$P(RC0,U,11):$J($P(RC0,U,11)/100,"",2),1:0),$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,6)=$J($P(RC0,U,11),"",2)
"RTN","RCDPESR2",128,0)
 ..I $P(RC0,U,6)="Y"!($P(RC0,U,7)=22) S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,4)=1
"RTN","RCDPESR2",129,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,10,14)=RCDPBNPI_U_$P(RC0,U,16,19)
"RTN","RCDPESR2",130,0)
 .I +RC0=11 D  ; Save Rendering Provider information from new style message
"RTN","RCDPESR2",131,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,10,14)=RCDPBNPI_U_$P(RC0,U,3,6)
"RTN","RCDPESR2",132,0)
 ..; End save of Rendering Provider
"RTN","RCDPESR2",133,0)
 .I RCBILL=$P(RC0,U,2) S RCCT1=RCCT1+1,^TMP($J,"RCDP-EOB",RCCT,RCCT1,0)=RC0
"RTN","RCDPESR2",134,0)
 ;
"RTN","RCDPESR2",135,0)
 S RCSTAR=$TR($J("",15)," ","*"),RCET=RCSTAR_"ERROR/WARNING EEOB DETAIL SEQ #"
"RTN","RCDPESR2",136,0)
 S RCCT=0 F  S RCCT=$O(^TMP($J,"RCDP-EOB",RCCT)) Q:'RCCT  S RCIFN=+$G(^(RCCT,0)),RCBILL=$P($G(^(0)),U,2),^TMP($J,"RCDPEOB",RCCT)=$G(^TMP($J,"RCDP-EOB",RCCT,0)) D
"RTN","RCDPESR2",137,0)
 .S RCEOB=-1,RCEOBD=""
"RTN","RCDPESR2",138,0)
 .I $S(RCIFN>0:$P(^PRCA(430.3,+$P($G(^PRCA(430,+RCIFN,0)),U,8),0),U,3)'=102,RCIFN'>0&($G(DUP)'>0):1,1:0) D
"RTN","RCDPESR2",139,0)
 ..S @RCERR1@(RCCT)=" ",@RCERR1@(RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR2",140,0)
 ..S @RCERR1@(RCCT,2)="Bill "_RCBILL_" is"_$S(RCIFN>0:" not in an ACTIVE status in your A/R",1:"n't valid/wasn't found so its detail wasn't stored in IB")
"RTN","RCDPESR2",141,0)
 ..S:RCFILE=5 @RCERR1@(RCCT,"*")=@RCERR1@(RCCT,2)
"RTN","RCDPESR2",142,0)
 ..S @RCERR1@(RCCT,3)="  The reported amount paid on this bill was: "_$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)
"RTN","RCDPESR2",143,0)
 ..I RCIFN'>0 D
"RTN","RCDPESR2",144,0)
 ...S @RCERR1@(RCCT,4)="  If the bill is not for your site, it must be transferred to the"
"RTN","RCDPESR2",145,0)
 ...S @RCERR1@(RCCT,5)="   correct site and manually adjusted in your AR."
"RTN","RCDPESR2",146,0)
 ...S @RCERR1@(RCCT,6)="  You can perform this transfer using EDI Lockbox ERA/EEOB exception process."
"RTN","RCDPESR2",147,0)
 ...S @RCERR1@(RCCT,7)=" "
"RTN","RCDPESR2",148,0)
 ..D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",149,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",150,0)
 ..S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=@RCERR1@(RCCT)
"RTN","RCDPESR2",151,0)
 ..I RCFILE=5 D  ;Store err if trans-in failed
"RTN","RCDPESR2",152,0)
 ...N RCE,RC,DIE,X,Y,DA,DR
"RTN","RCDPESR2",153,0)
 ...S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$G(@RCERR1@(RCCT,"*"))
"RTN","RCDPESR2",154,0)
 ...S RCE(2)=" ",RCFILED=0
"RTN","RCDPESR2",155,0)
 ...D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",156,0)
 .I RCIFN>0 D
"RTN","RCDPESR2",157,0)
 ..N RCDUPEOB,RCALLDUP
"RTN","RCDPESR2",158,0)
 ..;Chk rec exists
"RTN","RCDPESR2",159,0)
 ..S RCDUPEOB=0
"RTN","RCDPESR2",160,0)
 ..S RCEOB=$$DUP^RCDPESR3(RCMNUM,RCIFN,$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,2),$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,6)) ;Same msg for update?
"RTN","RCDPESR2",161,0)
 ..I RCEOB,$P(RCEOB,U,2) S RCEOB=0  ;If chksum exists, let below check it
"RTN","RCDPESR2",162,0)
 ..S ^TMP($J,"RCDP-EOB",RCCT,.5,0)="835ERA" ;Needed - checksum
"RTN","RCDPESR2",163,0)
 ..S RCALLDUP=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"","_RCCT_")",RCIFN)
"RTN","RCDPESR2",164,0)
 ..I $S(RCALLDUP:1,RCEOB:$G(DUP)'>0,1:0) D
"RTN","RCDPESR2",165,0)
 ...S RCDUPEOB=1
"RTN","RCDPESR2",166,0)
 ...D DUPREC^RCDPESR6(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,.RCDUPEOB)
"RTN","RCDPESR2",167,0)
 ...S:RCALLDUP RCEOBD=RCALLDUP
"RTN","RCDPESR2",168,0)
 ..;Add stub to 361.1
"RTN","RCDPESR2",169,0)
 ..I 'RCDUPEOB S RCEOB=+$$ADD3611^IBCEOB(RCMNUM,"","",RCIFN,1,"^TMP("_$J_",""RCDP-EOB"","_RCCT_")") ;IA 4042
"RTN","RCDPESR2",170,0)
 ..K ^TMP($J,"RCDP-EOB",RCCT,.5,0)
"RTN","RCDPESR2",171,0)
 ..I RCEOB<0 D:$G(DUP)'>0  Q
"RTN","RCDPESR2",172,0)
 ...S @RCERR1@(RCCT)=" ",^(RCCT,1)=RCET_RCCT_RCSTAR,RCFILED=0
"RTN","RCDPESR2",173,0)
 ...S @RCERR1@(RCCT,2)="Error - EEOB detail not added to IB for bill "_RCBILL,$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=""
"RTN","RCDPESR2",174,0)
 ...S:RCFILE=5 @RCERR1@(RCCT,"*")=@RCERR1@(RCCT,2)
"RTN","RCDPESR2",175,0)
 ...D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",176,0)
 ...S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",177,0)
 ...S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=@RCERR1@(RCCT)
"RTN","RCDPESR2",178,0)
 ..;Upd 361.1, needs ^TMP($J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPESR2",179,0)
 ..I RCDUPEOB'<0 S RCNOUPD=0 D UPD3611^IBCEOB(RCEOB,RCCT,1)
"RTN","RCDPESR2",180,0)
 ..;errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPESR2",181,0)
 ..I $O(^TMP("RCDPERR-EOB",$J,0)) D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB")
"RTN","RCDPESR2",182,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=$S('$G(RCEOBD):RCEOB,1:RCEOBD)
"RTN","RCDPESR2",183,0)
 .K ^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",184,0)
 ;
"RTN","RCDPESR2",185,0)
 I RCNOUPD D DUPERA^RCDPESR3($G(DUP),RCNOUPD)
"RTN","RCDPESR2",186,0)
 I $O(@RCERR1@("")) D BULLS^RCDPESR3(RCFILE,RCTDA,$S(RCNOUPD:RCNOUPD,1:$G(DUP)),$G(RCXMG))
"RTN","RCDPESR2",187,0)
 K ^TMP("RCDPERR-EOB",$J),^TMP($J,"RCDP-EOB"),@RCERR1,@RCSD
"RTN","RCDPESR2",188,0)
 D CLEAN^DILF
"RTN","RCDPESR2",189,0)
 Q
"RTN","RCDPESR3")
0^28^B51416516
"RTN","RCDPESR3",1,0)
RCDPESR3 ;ALB/TMK/PJH - Server auto-update utilities - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR3",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,255,269,283,298**;Mar 20, 1995;Build 121
"RTN","RCDPESR3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR3",4,0)
 Q
"RTN","RCDPESR3",5,0)
 ;
"RTN","RCDPESR3",6,0)
EFTIN(RCTXN,RCD,XMZ,RCGBL,RCEFLG) ; Adds a new EFT record to AR file 344.3
"RTN","RCDPESR3",7,0)
 ;  from Lockbox EFT msg
"RTN","RCDPESR3",8,0)
 ; RCTXN = the data on the header record of the message text
"RTN","RCDPESR3",9,0)
 ; RCD = array containing formatted mail message header data
"RTN","RCDPESR3",10,0)
 ; XMZ = the mail message number
"RTN","RCDPESR3",11,0)
 ; RCGBL = the name of the array or global where the message is stored
"RTN","RCDPESR3",12,0)
 ; RCEFLG = error flag returned if passed by reference
"RTN","RCDPESR3",13,0)
 ;
"RTN","RCDPESR3",14,0)
 N CT,RC,RC1,RCLAST,RCEFT,RCTDA,RCERR,RCTYP1,DA,DIK,RCZ,Z,Z0,DLAYGO
"RTN","RCDPESR3",15,0)
 ;
"RTN","RCDPESR3",16,0)
 ; Take data out of mail message
"RTN","RCDPESR3",17,0)
 S (RCEFLG,RCLAST)=0,CT=0,RCTYP1="835EFT"
"RTN","RCDPESR3",18,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR3",19,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR3",20,0)
 . S:XMRG'="" CT=CT+1,@RCGBL@(2,"D",CT)=XMRG
"RTN","RCDPESR3",21,0)
 ;
"RTN","RCDPESR3",22,0)
 I 'RCLAST,'$G(RCERR) K @RCGBL S RCERR=2 ;No $ as last character of msg
"RTN","RCDPESR3",23,0)
 ;
"RTN","RCDPESR3",24,0)
 I $G(RCERR)>0 D  G EFTQ
"RTN","RCDPESR3",25,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",26,0)
 . S RCEFLG=1
"RTN","RCDPESR3",27,0)
 ;
"RTN","RCDPESR3",28,0)
 ; Add top-level entry to file 344.3
"RTN","RCDPESR3",29,0)
 S RCEFT=$$ADDEFT(RCTXN,XMZ,RCGBL,.RCERR)
"RTN","RCDPESR3",30,0)
 ;
"RTN","RCDPESR3",31,0)
 I $G(RCERR) D  G EFTQ ; 'BAD' EFT's
"RTN","RCDPESR3",32,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",33,0)
 . S RCEFLG=1
"RTN","RCDPESR3",34,0)
 ;
"RTN","RCDPESR3",35,0)
 G:'RCEFT EFTQ
"RTN","RCDPESR3",36,0)
 ;
"RTN","RCDPESR3",37,0)
 ; Add the detail data to file 344.31 for this EFT record
"RTN","RCDPESR3",38,0)
 S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S DA=Z,DIK="^RCY(344.31," D ^DIK ; Delete any detail data already there
"RTN","RCDPESR3",39,0)
 ;
"RTN","RCDPESR3",40,0)
 S (RC,RC1,RCZ)=0
"RTN","RCDPESR3",41,0)
 F  S RCZ=$O(@RCGBL@(2,"D",RCZ)) Q:'RCZ  S Z0=$G(^(RCZ)) I Z0'="" D  Q:$G(RCERR)
"RTN","RCDPESR3",42,0)
 . I $P(Z0,U)="01" D  ; Each payer's data
"RTN","RCDPESR3",43,0)
 .. N DA,DIE,DR,X,Y,DO,DD,DIC
"RTN","RCDPESR3",44,0)
 .. S X=RCEFT
"RTN","RCDPESR3",45,0)
 .. S DIC("DR")=".11////0;.04////"_$P(Z0,U,2)_";.08////0"_$S($P(Z0,U,5)'="":";.02////"_$P(Z0,U,5),1:"")_$S($P(Z0,U,6)'="":";.03////"_$P(Z0,U,6),1:"")_";.07////"_$J(+$P(Z0,U,4)/100,"",2)_";.06////"_$S($P(Z0,U,8)'="":1,1:0)
"RTN","RCDPESR3",46,0)
 .. S DIC("DR")=DIC("DR")_";.12///"_$$FDT^RCDPESR9($P(Z0,U,3))_";.13////"_DT_$S($P(Z0,U,7)'="":";.05////"_$P(Z0,U,7),1:"")_$S($P(Z0,U,9)'="":";.15////"_$P(Z0,U,9),1:"")
"RTN","RCDPESR3",47,0)
 .. ;
"RTN","RCDPESR3",48,0)
 .. I $P(Z0,U,8)'="" D  ; tax id error
"RTN","RCDPESR3",49,0)
 ... D TAXERR^RCDPESR1("EFT",$P(Z0,U,5)_"  Payer ID: "_$P(RCTXN,U,6),$P(RCTXN,U,7),$P(RCTXN,U,8)) ; Send bad tax id bulletin
"RTN","RCDPESR3",50,0)
 .. ;
"RTN","RCDPESR3",51,0)
 .. S DIC(0)="L",DIC="^RCY(344.31,",DLAYGO=344.31 D FILE^DICN K DIC,DLAYGO,DO,DD
"RTN","RCDPESR3",52,0)
 .. I Y'>0 D  ; Error filing data
"RTN","RCDPESR3",53,0)
 ... S DIK="^RCY(344.3,",DA=RCEFT D ^DIK
"RTN","RCDPESR3",54,0)
 ... S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S DIK="^RCY(344.31,",DA=Z D ^DIK
"RTN","RCDPESR3",55,0)
 ... S RCEFLG=1,RCERR=3
"RTN","RCDPESR3",56,0)
 ... D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,RCERR)
"RTN","RCDPESR3",57,0)
 ;
"RTN","RCDPESR3",58,0)
 I '$G(RCEFLG) D
"RTN","RCDPESR3",59,0)
 . S DIE="^RCY(344.3,",DA=RCEFT,DR=".09////"_$$CHKSUM(RCEFT) D ^DIE
"RTN","RCDPESR3",60,0)
 ;
"RTN","RCDPESR3",61,0)
EFTQ ;
"RTN","RCDPESR3",62,0)
 D CLEAN^DILF
"RTN","RCDPESR3",63,0)
 Q
"RTN","RCDPESR3",64,0)
 ;
"RTN","RCDPESR3",65,0)
ADDEFT(RCTXN,RCXMZ,RCGBL,RCERR) ; File EFT TOTAL record in file 344.3
"RTN","RCDPESR3",66,0)
 ; RCTXN = the data on the header record of the message text
"RTN","RCDPESR3",67,0)
 ; RCXMZ = the mail message number
"RTN","RCDPESR3",68,0)
 ; RCGBL = the name of the array or global where the message is stored
"RTN","RCDPESR3",69,0)
 ; Function returns the ien of the total record found/added
"RTN","RCDPESR3",70,0)
 ;    and also returns RCERR if passed by reference
"RTN","RCDPESR3",71,0)
 ;
"RTN","RCDPESR3",72,0)
 N RCTDA,RCRCPT,RCDUP,RCHAC,Z,Z0
"RTN","RCDPESR3",73,0)
 S (RCERR,RCTDA)=""
"RTN","RCDPESR3",74,0)
 ;
"RTN","RCDPESR3",75,0)
 ;----- changed for PRCA*4.5*283
"RTN","RCDPESR3",76,0)
 ;I $E($P(RCTXN,U,6),1,3)'="469",$E($P(RCTXN,U,6),1,3)'="569",$E($P(RCTXN,U,6),1,3)'="HAC" D  G ADDQ ; Invalid EFT deposit number
"RTN","RCDPESR3",77,0)
 ;. N RCDXM,RCCT
"RTN","RCDPESR3",78,0)
 ;. S RCCT=0
"RTN","RCDPESR3",79,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)="This EFT has an invalid deposit number for EDI Lockbox and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",80,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",81,0)
 ;. D DISP("EDI LBOX INVALID EFT DEPOSIT #",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",82,0)
 ;-----
"RTN","RCDPESR3",83,0)
 ;
"RTN","RCDPESR3",84,0)
 ; Make sure it's not already there or if so, it has no ptr to a deposit
"RTN","RCDPESR3",85,0)
 ; or if a deposit exists, that the deposit does not yet have a receipt
"RTN","RCDPESR3",86,0)
 S RCDUP=0,RCHAC=$E($P(RCTXN,U,6),1,3)="HAC" ; This is a HAC deposit
"RTN","RCDPESR3",87,0)
 I $P(RCTXN,U,6)'="" D
"RTN","RCDPESR3",88,0)
 . ;Format Deposit Date as FM date
"RTN","RCDPESR3",89,0)
 . N RCDDAT
"RTN","RCDPESR3",90,0)
 . S X=$$FDT^RCDPESR9($P(RCTXN,U,7))
"RTN","RCDPESR3",91,0)
 . S RCDDAT=0,%DT="X" D ^%DT S:Y>0 RCDDAT=Y
"RTN","RCDPESR3",92,0)
 . S Z=0 ; Lookup deposit by deposit #
"RTN","RCDPESR3",93,0)
 . F  S Z=$O(^RCY(344.3,"ADEP",RCDDAT,$P(RCTXN,U,6),Z)) Q:'Z  S Z0=$G(^RCY(344.3,Z,0)) S:'$P(Z0,U,3) RCTDA=Z Q:RCTDA  D  Q
"RTN","RCDPESR3",94,0)
 .. ; Deposit found - find receipt
"RTN","RCDPESR3",95,0)
 .. I $O(^RCY(344,"AD",$P(Z0,U,3),0)) S RCDUP=Z Q
"RTN","RCDPESR3",96,0)
 .. S RCTDA=Z
"RTN","RCDPESR3",97,0)
 ;
"RTN","RCDPESR3",98,0)
 ;-----
"RTN","RCDPESR3",99,0)
 ; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR3",100,0)
 ;I RCDUP D  ; Send bulletin that duplicate EFT received
"RTN","RCDPESR3",101,0)
 ;. N RCDXM,RCCT
"RTN","RCDPESR3",102,0)
 ;. S RCCT=0
"RTN","RCDPESR3",103,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)="This EFT appears to be a duplicate transaction and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",104,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",105,0)
 ;. D DISP("EDI LBOX DUP EFT DEPOSIT RECEIVED",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",106,0)
 ;-----
"RTN","RCDPESR3",107,0)
 ;
"RTN","RCDPESR3",108,0)
 I 'RCDUP D  ; Add or update the record
"RTN","RCDPESR3",109,0)
 . N RCX,RCDTTM,DIE,DIC,DLAYGO,DD,DA,DO,DR,X,Y,%DT,DINUM
"RTN","RCDPESR3",110,0)
 . ;
"RTN","RCDPESR3",111,0)
 . S X=$$FDT^RCDPESR9($P(RCTXN,U,3))_"@"_$P(RCTXN,U,4)
"RTN","RCDPESR3",112,0)
 . S %DT="XTS" D ^%DT S:Y>0 RCDTTM=Y
"RTN","RCDPESR3",113,0)
 . ;
"RTN","RCDPESR3",114,0)
 . S DIC("DR")=""
"RTN","RCDPESR3",115,0)
 . S DIC("DR")=$S(RCDTTM'="":".02////"_RCDTTM,1:"")
"RTN","RCDPESR3",116,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_".06////"_$P(RCTXN,U,6)_";.07///"_$$FDT^RCDPESR9($P(RCTXN,U,7))
"RTN","RCDPESR3",117,0)
 . S DIC("DR")=DIC("DR")_";.08////"_$$ZERO^RCDPESR9($P(RCTXN,U,8),1)_";.13////"_$$NOW^XLFDT()_";.05////"_RCXMZ_";.14////0;.12////0"
"RTN","RCDPESR3",118,0)
 . ;
"RTN","RCDPESR3",119,0)
 . I RCTDA D  ; Overwrite the data already there
"RTN","RCDPESR3",120,0)
 .. L +^RCY(344.3,RCTDA):1 I '$T S RCTDA=-1 Q
"RTN","RCDPESR3",121,0)
 .. S DIE="^RCY(344.3,",DA=RCTDA,DR=DIC("DR") K DIC D ^DIE
"RTN","RCDPESR3",122,0)
 .. L -^RCY(344.3,RCTDA)
"RTN","RCDPESR3",123,0)
 . ;
"RTN","RCDPESR3",124,0)
 . I 'RCTDA D
"RTN","RCDPESR3",125,0)
 .. S RCX=+$O(^RCY(344.3," "),-1)
"RTN","RCDPESR3",126,0)
 .. F RCX=RCX+1:1 I '$D(^RCY(344.3,RCX,0)) L +^RCY(344.3,RCX,0):1 I $T S X=RCX Q
"RTN","RCDPESR3",127,0)
 .. S DIC(0)="L",DIC="^RCY(344.3,",DLAYGO=344.3,DINUM=RCX
"RTN","RCDPESR3",128,0)
 .. D FILE^DICN K DO,DD,DLAYGO,DIC,DINUM
"RTN","RCDPESR3",129,0)
 .. L -^RCY(344.3,RCX,0)
"RTN","RCDPESR3",130,0)
 .. S RCTDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR3",131,0)
 . ;
"RTN","RCDPESR3",132,0)
 . I 'RCTDA S RCERR=3 ; Error in add of EFT record to file 344.3 
"RTN","RCDPESR3",133,0)
 ;
"RTN","RCDPESR3",134,0)
ADDQ Q $S(RCTDA>0:RCTDA,1:"")
"RTN","RCDPESR3",135,0)
 ;
"RTN","RCDPESR3",136,0)
CHKSUM(RCTDA) ; Calc the checksum for EFT record stored in RCTDA in 344.3
"RTN","RCDPESR3",137,0)
 ;
"RTN","RCDPESR3",138,0)
 N RCDPCSUM,RCDPDATA,X,Y,Z,Z0
"RTN","RCDPESR3",139,0)
 ;
"RTN","RCDPESR3",140,0)
 S (RCDPCSUM,X)=0,Z0=$G(^RCY(344.3,RCTDA,0))
"RTN","RCDPESR3",141,0)
 ; Use pcs 1-8, leaving out piece 3
"RTN","RCDPESR3",142,0)
 S RCDPDATA=$P(Z0,U,1,8),$P(RCDPDATA,U,3)=""
"RTN","RCDPESR3",143,0)
 S X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",144,0)
 ; Use detail iens and pieces 3,4,7 to complete the checksum
"RTN","RCDPESR3",145,0)
 S Z=0 F  S Z=$O(^RCY(344.31,"B",RCTDA,Z)) Q:'Z  S Z0=$G(^RCY(344.31,Z,0)),RCDPDATA=Z_U_$P(Z0,U,3,4)_U_$P(Z0,U,7),X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",146,0)
 Q RCDPCSUM
"RTN","RCDPESR3",147,0)
 ;
"RTN","RCDPESR3",148,0)
DISP(RCTIT,RCCT,RCDXM,RCXMZ) ; Sends bulletin with formatted data from message
"RTN","RCDPESR3",149,0)
 ; RCTIT = title of bulletin
"RTN","RCDPESR3",150,0)
 ; RCCT = # of lines previously populated
"RTN","RCDPESR3",151,0)
 ; RCXDM = array containing the text of the bulletin
"RTN","RCDPESR3",152,0)
 N RC,Z
"RTN","RCDPESR3",153,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",154,0)
 S RC=1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR3",155,0)
 S Z=0 F  S Z=$O(^TMP("RCMSG",$J,2,"D",Z)) Q:'Z  S RC=RC+1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSG",$J,2,"D",Z))
"RTN","RCDPESR3",156,0)
 D DISP^RCDPESR8("^TMP(""RCTEMP"",$J)","^TMP(""RC1"",$J)",1,"^TMP(""RC"",$J)",75)
"RTN","RCDPESR3",157,0)
 S Z=0 F  S Z=$O(^TMP("RC",$J,Z)) Q:'Z  S RCCT=RCCT+1,RCDXM(RCCT)=$G(^TMP("RC",$J,Z))
"RTN","RCDPESR3",158,0)
 D BULLEFT^RCDPESR0("",RCXMZ,RCTIT,.RCDXM)
"RTN","RCDPESR3",159,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",160,0)
 Q
"RTN","RCDPESR3",161,0)
 ;
"RTN","RCDPESR3",162,0)
DUP(RCM,RCIFN,RCAMT,RCAMT1) ; EOB in mail message already stored in 361.1?
"RTN","RCDPESR3",163,0)
 ; RCM = msg # EOB was received in
"RTN","RCDPESR3",164,0)
 ; RCIFN = bill ien
"RTN","RCDPESR3",165,0)
 ; RCAMT = amt pd
"RTN","RCDPESR3",166,0)
 ; RCAMT1 = amt reported billed
"RTN","RCDPESR3",167,0)
 ; Returns 0 if none found, entry #^message checksum on file if found
"RTN","RCDPESR3",168,0)
 N Z,DUP,DUP1
"RTN","RCDPESR3",169,0)
 S (DUP,DUP1,Z)=0
"RTN","RCDPESR3",170,0)
 F  S Z=$O(^IBM(361.1,"AC",RCM,Z)) Q:'Z  I +$G(^IBM(361.1,Z,0))=RCIFN D  Q:DUP
"RTN","RCDPESR3",171,0)
 . I '$P($G(^IBM(361.1,Z,100)),U,5) S DUP1=Z Q  ; Partially filed before
"RTN","RCDPESR3",172,0)
 . I +$G(^IBM(361.1,Z,1))=+RCAMT,+$P($G(^IBM(361.1,1,Z,2)),U,4)=+RCAMT1 S DUP=Z_U_+$P($G(^IBM(361.1,Z,100)),U,5) Q
"RTN","RCDPESR3",173,0)
 I 'DUP,DUP1 S DUP=DUP1_"^0"
"RTN","RCDPESR3",174,0)
 Q DUP
"RTN","RCDPESR3",175,0)
 ;
"RTN","RCDPESR3",176,0)
DUPERA(DUP,RCNOUPD) ; Msg for duplicate ERA
"RTN","RCDPESR3",177,0)
 ; RCNOUPD = # of message with duplicate data
"RTN","RCDPESR3",178,0)
 ; DUP = flag = -1 if duplicate message received in same mail msg #
"RTN","RCDPESR3",179,0)
 K ^TMP("RCERR1",$J)
"RTN","RCDPESR3",180,0)
 S ^TMP("RCERR1",$J,1)=$S(DUP>0:"This an exact duplicate of an ERA received previously in mail msg "_RCNOUPD,1:"This ERA message was already fully processed - message was ignored")
"RTN","RCDPESR3",181,0)
 Q
"RTN","RCDPESR3",182,0)
 ;
"RTN","RCDPESR3",183,0)
BULLS(RCFILE,RCTDA,DUP,RCXMSG) ; Error bulletins for ERA
"RTN","RCDPESR3",184,0)
 ; PRCA*4.5*298 - DUPLICATE TRANSMISSION MSG AND EEOB - EXCEPTIONS message disabled - 14 Feb 2014
"RTN","RCDPESR3",185,0)
 ;I RCFILE=5 D BULL1^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",$S($G(DUP)>0:$G(DUP),1:""))
"RTN","RCDPESR3",186,0)
 I RCFILE=4 D BULL2^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",RCXMSG)
"RTN","RCDPESR3",187,0)
 Q
"RTN","RCDPESR3",188,0)
 ;
"RTN","RCDPESR3",189,0)
ADJERR(RCERR) ; Set up adj error text in RCERR(n) - pass by ref
"RTN","RCDPESR3",190,0)
 ; Function returns # of lines for error text
"RTN","RCDPESR3",191,0)
 S RCERR(1)="At least 1 adjustment transaction has been found on this ERA.  Before the",RCERR(2)="   receipt for this ERA can be processed, the appropriate adjustments",RCERR(3)="   must be made using the EEOB Worklist",RCERR(4)=" "
"RTN","RCDPESR3",192,0)
 Q 4
"RTN","RCDPESR3",193,0)
 ;
"RTN","RCDPESR4")
0^27^B80329387
"RTN","RCDPESR4",1,0)
RCDPESR4 ;ALB/TMK/PJH - Server interface 835ERA processing ;Jun 06, 2014@19:11:19
"RTN","RCDPESR4",2,0)
 ;;4.5;Accounts Receivable;**173,216,208,230,269,271,298**;Mar 20, 1995;Build 121
"RTN","RCDPESR4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR4",4,0)
 ;
"RTN","RCDPESR4",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR4",6,0)
 ;
"RTN","RCDPESR4",7,0)
ERAEOBIN(RCTXN,RCD,RCGBL,RCEFLG) ; Store/process 835ERA or 835XFR
"RTN","RCDPESR4",8,0)
 ;  transaction coming into the site
"RTN","RCDPESR4",9,0)
 ; RCTXN = data on the hdr record of the msg text
"RTN","RCDPESR4",10,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",11,0)
 ; RCGBL = name of the array or global where the msg is stored
"RTN","RCDPESR4",12,0)
 ; RCEFLG = error flag returned if passed by REF
"RTN","RCDPESR4",13,0)
 ;
"RTN","RCDPESR4",14,0)
 N RCLAST,RCBILL,RCTDA,RCMSG,RCERR
"RTN","RCDPESR4",15,0)
 S (RCTDA,RCEFLG)=0
"RTN","RCDPESR4",16,0)
 ;
"RTN","RCDPESR4",17,0)
 ;
"RTN","RCDPESR4",18,0)
 F  L +^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13)):30 Q:$T
"RTN","RCDPESR4",19,0)
 S RCMSG=$$EXTERA(RCTXN,.RCLAST,.RCBILL) ; Extract from mail msg
"RTN","RCDPESR4",20,0)
 ;
"RTN","RCDPESR4",21,0)
 ; If full msg received (99^$ record exists), file it
"RTN","RCDPESR4",22,0)
 I 'RCLAST,'$G(RCERR) D  ;No $ as last character of msg
"RTN","RCDPESR4",23,0)
 . S RCERR=2
"RTN","RCDPESR4",24,0)
 ;
"RTN","RCDPESR4",25,0)
 I RCLAST S RCTDA=+$$ADD(RCGBL,RCD("MSG#"),RCMSG,.RCBILL,.RCERR,.RCD)
"RTN","RCDPESR4",26,0)
 ;
"RTN","RCDPESR4",27,0)
 I $G(RCERR)>0 D
"RTN","RCDPESR4",28,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,$P(RCTXN,U),.RCERR)
"RTN","RCDPESR4",29,0)
 . I RCTDA D  ; Store exception msgs in file 344.5
"RTN","RCDPESR4",30,0)
 .. N A,C,Z
"RTN","RCDPESR4",31,0)
 .. S C=1,A(1)="Date: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","RCDPESR4",32,0)
 .. I $G(^TMP("RCERR",$J,"TEXT"))'="" S C=C+1,A(C)=^TMP("RCERR",$J,"TEXT"),C=C+1,A(C)=" "
"RTN","RCDPESR4",33,0)
 .. S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S C=C+1,A(C)=^(Z)
"RTN","RCDPESR4",34,0)
 .. I $O(A(0)) D WP^DIE(344.5,RCTDA_",",5,"A","A")
"RTN","RCDPESR4",35,0)
 . S RCEFLG=1
"RTN","RCDPESR4",36,0)
 ;
"RTN","RCDPESR4",37,0)
 L -^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13))
"RTN","RCDPESR4",38,0)
 I $P(RCTXN,U)'["XFR",$P(RCTXN,U,12)'="" D TAXERR^RCDPESR1("ERA",$P(RCTXN,U,6)_"  Payer ID: "_$P(RCTXN,U,7),$P(RCTXN,U,11),$P(RCTXN,U,12)) ; Send bad tax id bulletin
"RTN","RCDPESR4",39,0)
 ;
"RTN","RCDPESR4",40,0)
 Q
"RTN","RCDPESR4",41,0)
 ;
"RTN","RCDPESR4",42,0)
EXTERA(RCTXN,RCLAST,RCBILL) ;Extract 835ERA or 835XFR transaction
"RTN","RCDPESR4",43,0)
 ;INPUT:
"RTN","RCDPESR4",44,0)
 ; RCTXN = data on 835ERA/835XFR hdr record
"RTN","RCDPESR4",45,0)
 ; RCLAST = passed by REF and returned=1 if entire record exists
"RTN","RCDPESR4",46,0)
 ;
"RTN","RCDPESR4",47,0)
 ;OUTPUT:
"RTN","RCDPESR4",48,0)
 ; ^TMP("RCMSG",$J,1,"D",line #)=formatted hdr data
"RTN","RCDPESR4",49,0)
 ; ^TMP("RCMSG",$J,2,"D",line #)=raw msg data
"RTN","RCDPESR4",50,0)
 ;  if passed by ref, RCLAST = 1 if '99' record found
"RTN","RCDPESR4",51,0)
 ;  if passed by ref, RCBILL(AR bill number) is returned
"RTN","RCDPESR4",52,0)
 ;    with a 'list' of bills included in the ERA.  If an
"RTN","RCDPESR4",53,0)
 ;    entry = 1, 3rd party bill was found in file 430.
"RTN","RCDPESR4",54,0)
 ;    If the entry = 2, the 3rd party bill found was not active
"RTN","RCDPESR4",55,0)
 ; Function returns existing ien in file 344.5 for multi part ERAs
"RTN","RCDPESR4",56,0)
 ;
"RTN","RCDPESR4",57,0)
 N CT,CT1,LINE,HCT,RCH,RCMSG,RCREFORM,RCINS,RCSTAT,B,RCSD,C5
"RTN","RCDPESR4",58,0)
 S (HCT,RCH)=0
"RTN","RCDPESR4",59,0)
 ;
"RTN","RCDPESR4",60,0)
 ;
"RTN","RCDPESR4",61,0)
 ; Check if sequence control # already exists or if a new record needed
"RTN","RCDPESR4",62,0)
 S RCMSG=+$O(^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13),0))
"RTN","RCDPESR4",63,0)
 S CT=0
"RTN","RCDPESR4",64,0)
 I 'RCMSG D  ; Build display data for the first sequence only
"RTN","RCDPESR4",65,0)
 . S HCT=HCT+1 S LINE(HCT)="Payer Name: "_$P(RCTXN,U,6)
"RTN","RCDPESR4",66,0)
 . S HCT=HCT+1 S LINE(HCT)="Payer ID: "_$P(RCTXN,U,7)
"RTN","RCDPESR4",67,0)
 . S HCT=HCT+1,LINE(HCT)="Trace #: "_$P(RCTXN,U,8)
"RTN","RCDPESR4",68,0)
 . S HCT=HCT+1,LINE(HCT)="Date Paid: "_$$FDT^RCDPESR9($P(RCTXN,U,9))_"    Total Amt Paid: "_$J($P(RCTXN,U,10)/100,0,2)
"RTN","RCDPESR4",69,0)
 . I $P(RCTXN,U)["XFR",$P(RCTXN,U,19)'="" S HCT=HCT+1,LINE(HCT)="Contact Info: "_$P(RCTXN,U,19)
"RTN","RCDPESR4",70,0)
 . M ^TMP("RCMSG",$J,1,"D")=LINE
"RTN","RCDPESR4",71,0)
 . S CT=CT+1,^TMP("RCMSG",$J,2,"D",CT)=RCTXN
"RTN","RCDPESR4",72,0)
 ;
"RTN","RCDPESR4",73,0)
 S CT1=CT
"RTN","RCDPESR4",74,0)
 S ^TMP("RCMSG",$J,0)=RCTXN
"RTN","RCDPESR4",75,0)
 ;
"RTN","RCDPESR4",76,0)
 S RCSD=$NA(^TMP($J,"RCSRVDT")) K @RCSD ;service dates
"RTN","RCDPESR4",77,0)
 S C5=0
"RTN","RCDPESR4",78,0)
 S RCLAST=0
"RTN","RCDPESR4",79,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR4",80,0)
 . Q:XMRG=""
"RTN","RCDPESR4",81,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR4",82,0)
 . S CT=CT+1
"RTN","RCDPESR4",83,0)
 . I +XMRG=5,$P(XMRG,U,2)'="" S C5=CT
"RTN","RCDPESR4",84,0)
 . ; save the service date for possible ECME# look up
"RTN","RCDPESR4",85,0)
 . I +XMRG=40,$$VALECME^BPSUTIL2($P(XMRG,U,2)),C5,$P(XMRG,U,19),'$D(@RCSD@(C5)) S ^(C5)=+$P(XMRG,U,19)
"RTN","RCDPESR4",86,0)
 . S ^TMP("RCMSG",$J,2,"D",CT)=XMRG
"RTN","RCDPESR4",87,0)
 ;
"RTN","RCDPESR4",88,0)
 ; reformat bill# if needed
"RTN","RCDPESR4",89,0)
 S RCREFORM=""
"RTN","RCDPESR4",90,0)
 S CT=CT1
"RTN","RCDPESR4",91,0)
 F  S CT=$O(^TMP("RCMSG",$J,2,"D",CT)) Q:'CT  S XMRG=$G(^(CT)) D
"RTN","RCDPESR4",92,0)
 . Q:XMRG=""
"RTN","RCDPESR4",93,0)
 . I +XMRG=5,$P(XMRG,U,2)'="" D
"RTN","RCDPESR4",94,0)
 .. S RCREFORM="",RCSTAT=1
"RTN","RCDPESR4",95,0)
 .. ; Check if bill is in AR & is a 3rd party bill
"RTN","RCDPESR4",96,0)
 .. S RCBILL=$$BILL^RCDPESR1($P(XMRG,U,2),$G(@RCSD@(CT)),.RCINS)    ; look up claim ien by claim# or ECME#
"RTN","RCDPESR4",97,0)
 .. I '$G(RCINS)!(RCBILL<0) S (RCBILL,RCSTAT)=0
"RTN","RCDPESR4",98,0)
 .. I RCBILL S B=$P($G(^PRCA(430,RCBILL,0)),U) I B'=$P(XMRG,U,2) S $P(XMRG,U,2)=B,RCREFORM=B
"RTN","RCDPESR4",99,0)
 .. I RCBILL,$P(^PRCA(430.3,+$P($G(^PRCA(430,+RCBILL,0)),U,8),0),U,3)'=102 S RCSTAT=2
"RTN","RCDPESR4",100,0)
 .. S RCBILL($P(XMRG,U,2))=RCSTAT
"RTN","RCDPESR4",101,0)
 . I RCREFORM'="",+XMRG>5 S $P(XMRG,U,2)=RCREFORM,^TMP("RCMSG",$J,2,"D",CT)=XMRG
"RTN","RCDPESR4",102,0)
 ;
"RTN","RCDPESR4",103,0)
 K @RCSD
"RTN","RCDPESR4",104,0)
 Q RCMSG
"RTN","RCDPESR4",105,0)
 ;
"RTN","RCDPESR4",106,0)
ADD(RCGBL,RCDMSG,RCMSG,RCBILL,RCERR,RCD) ; Add msg(s) in @RCGBL to
"RTN","RCDPESR4",107,0)
 ;  file 344.5
"RTN","RCDPESR4",108,0)
 ; RCGBL = name of the global used to store the msg data
"RTN","RCDPESR4",109,0)
 ; RCDMSG = Mailman msg number the ERA arrived in.
"RTN","RCDPESR4",110,0)
 ; RCMSG = ien of the existing entry in file 344.5 for multipart ERAs
"RTN","RCDPESR4",111,0)
 ; RCBILL(AR bill number) = list of bills included, pass by REF
"RTN","RCDPESR4",112,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",113,0)
 ;
"RTN","RCDPESR4",114,0)
 ; Errors returned in RCERR and RCERR(n)
"RTN","RCDPESR4",115,0)
 ; Function returns entry # of msg added or "" if none added
"RTN","RCDPESR4",116,0)
 ;
"RTN","RCDPESR4",117,0)
 ;
"RTN","RCDPESR4",118,0)
 N RCHDR,RCTYP,RCIEN
"RTN","RCDPESR4",119,0)
 S RCHDR=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR4",120,0)
 S RCTYP=$P(RCHDR,U)
"RTN","RCDPESR4",121,0)
 S RCIEN=$S($G(RCMSG):RCMSG,1:$$ADDTXN(RCHDR,RCDMSG)) ;File msg hdr
"RTN","RCDPESR4",122,0)
 I RCIEN'>0 S RCERR=3 ;msg hdr can't be filed
"RTN","RCDPESR4",123,0)
 I '$G(RCERR) D LOADDET(RCIEN,RCGBL,RCHDR,.RCBILL,.RCD,.RCERR)
"RTN","RCDPESR4",124,0)
 I '$G(RCERR),'$O(RCERR(0)),RCTYP["835ERA",'$P($G(^RCY(344.5,RCIEN,0)),U,8) D TASKERA^RCDPESR2(RCIEN) ;Task to upd VistA for complete 835ERA only
"RTN","RCDPESR4",125,0)
 ;
"RTN","RCDPESR4",126,0)
 Q $S($G(RCIEN)>0&'$G(RCERR):RCIEN,1:"")
"RTN","RCDPESR4",127,0)
 ;
"RTN","RCDPESR4",128,0)
ADDTXN(RCDATA,RCDMSG) ; Add a trxn for msg in RCDATA to file 344.5
"RTN","RCDPESR4",129,0)
 ; RCDATA = data on the msg hdr record
"RTN","RCDPESR4",130,0)
 ; RCDMSG = Mailman msg number the ERA arrived in
"RTN","RCDPESR4",131,0)
 ;Function returns ien of the new entry in file 344.5 or "" if an error
"RTN","RCDPESR4",132,0)
 ;
"RTN","RCDPESR4",133,0)
 N A,RCY,DLAYGO,DIC,DD,DO,DA,X,Y,Z
"RTN","RCDPESR4",134,0)
 ;
"RTN","RCDPESR4",135,0)
 ;
"RTN","RCDPESR4",136,0)
 S (X,A)=RCDMSG ;Use msg ID as basis for the .01 field
"RTN","RCDPESR4",137,0)
 F Z=1:1 Q:'$D(^RCY(344.5,"B",A))  S A=X_"."_Z
"RTN","RCDPESR4",138,0)
 S X=A
"RTN","RCDPESR4",139,0)
 S DIC(0)="L",DIC="^RCY(344.5,",DLAYGO=344.5
"RTN","RCDPESR4",140,0)
 S DIC("DR")=".02////"_$E($P(RCDATA,U),1,6)_";.03///^S X=""NOW"";.04////0;.06////"_$S($P(RCDATA,U)'["XFR":1,1:0)_$S($P(RCDATA,U,13)'="":";.09////"_+$P(RCDATA,U,13)_";.08////1",1:"")_";.1////2;.11////"_RCDMSG
"RTN","RCDPESR4",141,0)
 I $P(RCDATA,U,6)'="" S DIC("DR")=DIC("DR")_";3.01////"_$P(RCDATA,U,6)
"RTN","RCDPESR4",142,0)
 D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","RCDPESR4",143,0)
 S RCY=+Y
"RTN","RCDPESR4",144,0)
 ;
"RTN","RCDPESR4",145,0)
 ;
"RTN","RCDPESR4",146,0)
 Q $S(RCY>0:+RCY,1:"")
"RTN","RCDPESR4",147,0)
 ;
"RTN","RCDPESR4",148,0)
LOADDET(RCTDA,RCGBL,RCHDR,RCBILL,RCD,RCERR) ; Load the rest of the text
"RTN","RCDPESR4",149,0)
 ; into the msg
"RTN","RCDPESR4",150,0)
 ; RCTDA = ien in file 344.5
"RTN","RCDPESR4",151,0)
 ; RCGBL = name of the array holding the detail msg text to be loaded
"RTN","RCDPESR4",152,0)
 ; RCHDR = data on ERA hdr record
"RTN","RCDPESR4",153,0)
 ; RCBILL(AR bill number) = list of bills included, pass by REF
"RTN","RCDPESR4",154,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",155,0)
 ;
"RTN","RCDPESR4",156,0)
 ; OUTPUT: RCERR if any errors found, pass by REF
"RTN","RCDPESR4",157,0)
 ;
"RTN","RCDPESR4",158,0)
 ;
"RTN","RCDPESR4",159,0)
 N RCE,RCDATA,RCMSG,RCFROM,Z,Z0
"RTN","RCDPESR4",160,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",161,0)
 M ^TMP("RCTEXT",$J)=@RCGBL@(1,"D")
"RTN","RCDPESR4",162,0)
 M ^TMP("RCRAW",$J)=@RCGBL@(2,"D")
"RTN","RCDPESR4",163,0)
 ;
"RTN","RCDPESR4",164,0)
 S RCDATA=$G(^RCY(344.5,RCTDA,0)),RCMSG=$G(RCD("MSG#")),RCFROM=$G(RCD("FROM"))
"RTN","RCDPESR4",165,0)
 ;
"RTN","RCDPESR4",166,0)
 ; For multi-part ERA, don't update if sequence already filed
"RTN","RCDPESR4",167,0)
 ; Add seq # if not already there
"RTN","RCDPESR4",168,0)
 I $P(RCHDR,U)'["XFR",$P(RCHDR,U,13) Q:$D(^RCY(344.5,RCTDA,"S","B",+$P(RCHDR,U,14)))
"RTN","RCDPESR4",169,0)
 ;
"RTN","RCDPESR4",170,0)
 D STOREM(+$G(RCTDA),"^TMP(""RCTEXT"",$J)","^TMP(""RCRAW"",$J)",.RCE)
"RTN","RCDPESR4",171,0)
 ;
"RTN","RCDPESR4",172,0)
 I $D(RCE("DIERR")) D  ; Extract error
"RTN","RCDPESR4",173,0)
 . N DIE,DA,DR,X,Y
"RTN","RCDPESR4",174,0)
 . D EXTERR^RCDPESR1(.RCERR,.RCE)
"RTN","RCDPESR4",175,0)
 . S:$L($G(RCE)) RCERR(+$O(RCERR(""),-1)+1)=RCE
"RTN","RCDPESR4",176,0)
 . I $D(^RCY(344.5,RCTDA,0)) S DIE="^RCY(344.5,",DR=".1////4",DA=RCTDA D ^DIE
"RTN","RCDPESR4",177,0)
 E  D  ; No error - store rest of data
"RTN","RCDPESR4",178,0)
 . N Z,RCT,RCCT,RCX,RCB ; Add bills included in ERA
"RTN","RCDPESR4",179,0)
 . S RCT=0,RCCT=0,RCX=$J("",4)
"RTN","RCDPESR4",180,0)
 . S Z="" F  S Z=$O(RCBILL(Z)) Q:Z=""  D
"RTN","RCDPESR4",181,0)
 .. N DO,DD,DIC,DLAYGO,X,Y
"RTN","RCDPESR4",182,0)
 .. S:RCT=4 RCCT=RCCT+1,RCB(RCCT)=RCX,RCT=0,RCX=$J("",4) S RCX=RCX_$E($S(+RCBILL(Z):"",1:"*")_Z_$J("",15),1,15),RCT=RCT+1
"RTN","RCDPESR4",183,0)
 .. S DIC(0)="L",DIC("DR")=".02////"_$S($G(RCBILL(Z)):1,1:0),X=Z,DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""B"",",DLAYGO=344.54 D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",184,0)
 .. ;
"RTN","RCDPESR4",185,0)
 . I $L(RCX)>4 S RCCT=RCCT+1,RCB(RCCT)=RCX
"RTN","RCDPESR4",186,0)
 . ; Add list of bills to display data
"RTN","RCDPESR4",187,0)
 . I $O(RCB(0)) D WP^DIE(344.5,RCTDA_",",1,"A","RCB")
"RTN","RCDPESR4",188,0)
 . ; Add seq #
"RTN","RCDPESR4",189,0)
 . S DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""S"",",DIC(0)="L",X=$P(RCHDR,U,14),DIC("DR")=".02////"_$S($P(RCHDR,U,15)="Y":1,1:0)_";.03///^S X=""NOW"";.04////"_RCMSG,X=+$P(RCHDR,U,14),DLAYGO=344.53
"RTN","RCDPESR4",190,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",191,0)
 . ;
"RTN","RCDPESR4",192,0)
 . I $P(RCHDR,U)["835XFR" D XFR^RCDPESR5(RCTDA,RCFROM,RCMSG,.RCD) Q
"RTN","RCDPESR4",193,0)
 . ;
"RTN","RCDPESR4",194,0)
 . ; Proceed only if not a transfer record
"RTN","RCDPESR4",195,0)
 . I $P(RCDATA,U,9)'="" D  ; Determine if all sequences received yet
"RTN","RCDPESR4",196,0)
 .. N RCOK,RCLAST
"RTN","RCDPESR4",197,0)
 .. S RCOK=1,RCLAST=0
"RTN","RCDPESR4",198,0)
 .. F Z=1:1 Q:'RCOK!RCLAST  D
"RTN","RCDPESR4",199,0)
 ... I 'RCLAST,'$D(^RCY(344.5,RCTDA,"S","B",Z)) S RCOK=0 Q
"RTN","RCDPESR4",200,0)
 ... S Z0=+$O(^RCY(344.5,RCTDA,"S","B",Z,0)),Z0=$G(^RCY(344.5,RCTDA,"S",Z0,0))
"RTN","RCDPESR4",201,0)
 ... I Z0="" S RCOK=0 Q
"RTN","RCDPESR4",202,0)
 ... I $P(Z0,U,2) S RCLAST=1 ; Last sequence received and all before it
"RTN","RCDPESR4",203,0)
 .. ;
"RTN","RCDPESR4",204,0)
 .. I RCOK D
"RTN","RCDPESR4",205,0)
 ... N DA,DIE,DR,X,Y
"RTN","RCDPESR4",206,0)
 ... S DA=RCTDA,DR=".08////0;.1///@",DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR4",207,0)
 ... I '$O(^RCY(344.5,RCTDA,"B","AV",1,0)) D  ; No valid bills found
"RTN","RCDPESR4",208,0)
 ....;-----
"RTN","RCDPESR4",209,0)
 ....; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR4",210,0)
 ....;N RCE
"RTN","RCDPESR4",211,0)
 ....;S RCE(1)="No valid bills for this site were found in this ERA"
"RTN","RCDPESR4",212,0)
 ....;S RCE(2)="Review/correct the bill #'s on this ERA in your transmission exceptions"
"RTN","RCDPESR4",213,0)
 ....;S RCE(3)="Please contact the Implementation Manager group to report this situation",RCE(4)=" "
"RTN","RCDPESR4",214,0)
 ....;D BULLERA^RCDPESR0("D"_$S($O(^RCY(344.5,RCTDA,2,0)):"F",1:""),RCTDA,$G(RCD("MSG#")),"EDI LBOX - NO VALID BILLS ON ERA "_$E($G(RCD("PAYFROM")),1,20),.RCE,0)
"RTN","RCDPESR4",215,0)
 ....;-----
"RTN","RCDPESR4",216,0)
 .... S DA=RCTDA,DR=".08////1;.1////6",DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR4",217,0)
 ;
"RTN","RCDPESR4",218,0)
 ;
"RTN","RCDPESR4",219,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",220,0)
 Q
"RTN","RCDPESR4",221,0)
 ;
"RTN","RCDPESR4",222,0)
STOREM(RCTDA,RCDISP,RCTEXT,RCE) ;Store msg text in file 344.5
"RTN","RCDPESR4",223,0)
 ;INPUT:
"RTN","RCDPESR4",224,0)
 ; RCTDA = ien of the entry in file 344.5
"RTN","RCDPESR4",225,0)
 ; RCDISP = name of the array where display msg text is retrieved from
"RTN","RCDPESR4",226,0)
 ;   or "@" to delete the text from the display text field
"RTN","RCDPESR4",227,0)
 ; RCTEXT = name of the array where raw msg text is retrieved from
"RTN","RCDPESR4",228,0)
 ;   or "@" to delete the text from the raw msg field
"RTN","RCDPESR4",229,0)
 ;OUTPUT:
"RTN","RCDPESR4",230,0)
 ; RCE = array of errors (RCE("DIERR")) returned, pass by REF
"RTN","RCDPESR4",231,0)
 ;
"RTN","RCDPESR4",232,0)
 N RCZ,X,Y,DIE
"RTN","RCDPESR4",233,0)
 K RCE("DIERR")
"RTN","RCDPESR4",234,0)
 ;
"RTN","RCDPESR4",235,0)
 I $S($G(RCDISP)="@":1,1:$D(@RCDISP)'<10) D
"RTN","RCDPESR4",236,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",1,"AK",""_RCDISP_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",237,0)
 ;
"RTN","RCDPESR4",238,0)
 I '$O(RCE("DIERR",0)),$S($G(RCTEXT)="@":1,1:$D(@RCTEXT)'<10) D
"RTN","RCDPESR4",239,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",2,"AK",""_RCTEXT_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",240,0)
 Q
"RTN","RCDPESR6")
0^89^B45550757
"RTN","RCDPESR6",1,0)
RCDPESR6 ;ALB/TMK/DWA - Server auto-update file 344.4 - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR6",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,230,252,269,271,298**;Mar 20, 1995;Build 121
"RTN","RCDPESR6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR6",4,0)
 ;
"RTN","RCDPESR6",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR6",6,0)
 ;
"RTN","RCDPESR6",7,0)
UPD3444(RCRTOT) ; Add EOB detail to list in 344.41 for file 344.4 entry RCRTOT
"RTN","RCDPESR6",8,0)
 ; If passed by reference, RCRTOT is returned = "" if errors
"RTN","RCDPESR6",9,0)
 ;
"RTN","RCDPESR6",10,0)
 N RC,RCCOM1,RCCOM2,RCCT,RC1,RC2,RCDPNM,RCEOB,RCNPI1,RCNPI2,DA,DR,DO,DD,DLAYGO,DIC,DIK,X,Y,Z
"RTN","RCDPESR6",11,0)
 S RC=0 F  S RC=$O(^TMP($J,"RCDPEOB",RC)) Q:'RC  S RC1=$G(^(RC)),RC2=$G(^(RC,"EOB")),RCEOB=+RC2 D  Q:'RCRTOT
"RTN","RCDPESR6",12,0)
 . ; Upd 344.41 with reference to this record if it doesn't already exist
"RTN","RCDPESR6",13,0)
 . I RCEOB>0 Q:$D(^RCY(344.4,RCRTOT,1,"AC",RCEOB,RC))
"RTN","RCDPESR6",14,0)
 . I RCEOB'>0,$S($P(RC1,U,2)'="":$D(^RCY(344.4,RCRTOT,1,"AD",$P(RC1,U,2),RC)),1:0) Q
"RTN","RCDPESR6",15,0)
 . ; Disregard ECME reject related EEOBs; ECME# can be 7 digits or 12 digits
"RTN","RCDPESR6",16,0)
 . I RCEOB'>0,'$P(RC2,U,2),$$VALECME^BPSUTIL2($P(RC1,U,2)),$$REJECT^IBNCPDPU($P(RC1,U,2),$P(RC1,U,3)) Q
"RTN","RCDPESR6",17,0)
 . S DA(1)=RCRTOT,X=RC,DIC="^RCY(344.4,"_DA(1)_",1,",DIC(0)="L",DLAYGO=344.41
"RTN","RCDPESR6",18,0)
 . S DIC("DR")=$S($G(RCEOB)>0:".02////"_RCEOB,1:".05////"_$P(RC1,U,2)_";.07////1")
"RTN","RCDPESR6",19,0)
 . I $P(RC2,U,2)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".03///"_$P(RC2,U,2) ; amt
"RTN","RCDPESR6",20,0)
 . I $P(RC2,U,3)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".04////"_$P(RC2,U,3) ; ins co
"RTN","RCDPESR6",21,0)
 . I $P(RC2,U,4) S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".14////1" ; reversal
"RTN","RCDPESR6",22,0)
 . I $P(RC2,U,5)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".15////^S X=$E($P(RC2,U,5),1,30)" ; Patient name
"RTN","RCDPESR6",23,0)
 . ; Process Billing Prov NPI, Rendering/Servicing NPI & name
"RTN","RCDPESR6",24,0)
 . S (RCCOM1,RCCOM2)=""
"RTN","RCDPESR6",25,0)
 . S RCNPI1=$P(RC2,U,10),RCNPI2=$P(RC2,U,11)
"RTN","RCDPESR6",26,0)
 . I RCNPI1'="",'$$CHKDGT^XUSNPI(RCNPI1) S RCCOM1="The Billing Provider NPI received on the 835 ("_$E(RCNPI1,1,10)_") is not a valid format."
"RTN","RCDPESR6",27,0)
 . I RCNPI2'="",'$$CHKDGT^XUSNPI(RCNPI2) S RCCOM2="The "_$S($P(RC2,U,12)=1:"Rendering",1:"Servicing")_" NPI received on the 835 ("_$E(RCNPI2,1,10)_") is not a valid format."
"RTN","RCDPESR6",28,0)
 . I RCCOM1="" S DIC("DR")=DIC("DR")_";.18////^S X=$P(RC2,U,10)"  ;Billing Provider NPI
"RTN","RCDPESR6",29,0)
 . I RCCOM2="" S DIC("DR")=DIC("DR")_";.19////^S X=$P(RC2,U,11)"  ;Rendering Provider NPI
"RTN","RCDPESR6",30,0)
 . S RCDPNM=$P(RC2,U,13) I $P(RC2,U,14)]"" S RCDPNM=RCDPNM_$S(RCDPNM]"":",",1:"")_$P(RC2,U,14)
"RTN","RCDPESR6",31,0)
 . S DIC("DR")=DIC("DR")_";.2////^S X=$P(RC2,U,12);.21////^S X=RCDPNM"  ; Entity Type Qualifier ^ Last name,First Name
"RTN","RCDPESR6",32,0)
 . S DIC("DR")=DIC("DR")_";.22////^S X=RCCOM1;.23////^S X=RCCOM2"  ;Comment on Billing provider^comment on rendering/servicing provider NPI
"RTN","RCDPESR6",33,0)
 . I $$VALECME^BPSUTIL2($P(RC1,U,4)) D
"RTN","RCDPESR6",34,0)
 .. S DIC("DR")=DIC("DR")_";.24////^S X=$P(RC1,U,4)"  ;Add ECME number (if valid) PRCA*4.5*298
"RTN","RCDPESR6",35,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC,DIK
"RTN","RCDPESR6",36,0)
 . S RCCT=+Y
"RTN","RCDPESR6",37,0)
 . I RCCT<0 D  Q
"RTN","RCDPESR6",38,0)
 .. S DA=RCRTOT,DIK="^RCY(344.4," D ^DIK
"RTN","RCDPESR6",39,0)
 .. S RCRTOT=0
"RTN","RCDPESR6",40,0)
 . ; If there is no IB EOB record, store the raw data in 344.411
"RTN","RCDPESR6",41,0)
 . I RC1'>0!(RCEOB'>0) D
"RTN","RCDPESR6",42,0)
 .. N RCDATA,RCC,RCDA
"RTN","RCDPESR6",43,0)
 .. S RCC=2,RCDATA(1)=$G(^TMP($J,"RCDPEOB","HDR"))
"RTN","RCDPESR6",44,0)
 .. S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB",RCCT,Z)) Q:'Z  S RCC=RCC+1,RCDATA(RCC)=$G(^TMP($J,"RCDPEOB",RCCT,Z))
"RTN","RCDPESR6",45,0)
 .. S RCDA(1)=RCRTOT,RCDA=RCCT
"RTN","RCDPESR6",46,0)
 .. D WP^DIE(344.41,$$IENS^DILF(.RCDA),1,"A","RCDATA")
"RTN","RCDPESR6",47,0)
 Q
"RTN","RCDPESR6",48,0)
 ;
"RTN","RCDPESR6",49,0)
 ;
"RTN","RCDPESR6",50,0)
ERATOT(RCTDA,RCERR) ; File ERA TOTAL rec in 344.4 from entry RCTDA in 344.5
"RTN","RCDPESR6",51,0)
 ; RCTDA = ien file 344.5
"RTN","RCDPESR6",52,0)
 ; Returns: the ien file 344.4
"RTN","RCDPESR6",53,0)
 ;          RCERR if passed by reference, with error text
"RTN","RCDPESR6",54,0)
 ;          RCERR(1)=duplicated message
"RTN","RCDPESR6",55,0)
 N RCTYPE,RCDA,RCMETH,RCTRACE,RCID,RCDT,RCAMT,RCDUP,RCZ,RCX,RCPAYER,DIE,DIK,DIC,DLAYGO,DD,DO,DR,DA,X,Y,Z0,Z1
"RTN","RCDPESR6",56,0)
 S (RCERR,RCDA)=""
"RTN","RCDPESR6",57,0)
 S RCZ=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR6",58,0)
 S RCTYPE=$P(RCZ,U),RCTRACE=$P(RCZ,U,8),RCID=$P(RCZ,U,7),RCPAYER=$P(RCZ,U,6),RCMETH=$P(RCZ,U,17)
"RTN","RCDPESR6",59,0)
 ; Need header record as first entry in field
"RTN","RCDPESR6",60,0)
 I RCTYPE'["835ERA" S RCERR="No header record found in message.  An EEOB exception record was created" G ERATOTQ
"RTN","RCDPESR6",61,0)
 ;
"RTN","RCDPESR6",62,0)
 S RCDT=$$FMDT^RCDPESR1($P(RCZ,U,9)),RCAMT=$J(($P(RCZ,U,10)/100),0,2)
"RTN","RCDPESR6",63,0)
 ;Elec ERA's must have a trace # and an ins co id
"RTN","RCDPESR6",64,0)
 I RCTRACE=""!(RCID="") S RCERR="Trace # or ins ID missing on ERA transaction.  An EEOB exception record was created." G ERATOTQ
"RTN","RCDPESR6",65,0)
 ; Make sure it's not already there
"RTN","RCDPESR6",66,0)
 S (RCDUP,Z1)=0
"RTN","RCDPESR6",67,0)
 F  S Z1=$O(^RCY(344.4,"ATRIDUP",$$UP^XLFSTR(RCTRACE),$$UP^XLFSTR(RCID),Z1)) Q:'Z1  S Z0=$G(^RCY(344.4,Z1,0)) I $P(Z0,U,4)=RCDT,+$P(Z0,U,5)=+RCAMT S RCDUP=1 Q
"RTN","RCDPESR6",68,0)
 ;
"RTN","RCDPESR6",69,0)
 I RCDUP,$P(Z0,U,8) D  G ERATOTQ ; Receipt already exists - no update
"RTN","RCDPESR6",70,0)
 . S RCERR="This is a duplicate ERA and has already been posted",RCERR(1)=-2
"RTN","RCDPESR6",71,0)
 I RCDUP S RCERR="DUP",RCERR(1)=$S($P(Z0,U,12)'=$P($G(^RCY(344.5,RCTDA,0)),U,11):$P(Z0,U,12),1:-1) G ERATOTQ
"RTN","RCDPESR6",72,0)
 ;
"RTN","RCDPESR6",73,0)
 S RCX=+$O(^RCY(344.4," "),-1)
"RTN","RCDPESR6",74,0)
 S DIC(0)="L",DIC="^RCY(344.4,",DLAYGO=344.4
"RTN","RCDPESR6",75,0)
 S DIC("DR")=".02////"_RCTRACE_";.03////"_RCID_";.04////"_RCDT_";.05////"_RCAMT_";.06////"_$P(RCZ,U,6)_";.09////0;.12////"_$P($G(^RCY(344.5,RCTDA,0)),U,11)_";.07////"_$$NOW^XLFDT()_";.1////1"
"RTN","RCDPESR6",76,0)
 I RCMETH'="" S DIC("DR")=DIC("DR")_";.15////"_RCMETH
"RTN","RCDPESR6",77,0)
 F RCX=RCX+1:1 L +^RCY(344.4,RCX,0):1 I $T,'$D(^RCY(344.4,RCX,0)) S X=RCX Q
"RTN","RCDPESR6",78,0)
 D FILE^DICN K DO,DLAYGO,DD,DIC
"RTN","RCDPESR6",79,0)
 L -^RCY(344.4,RCX,0)
"RTN","RCDPESR6",80,0)
 S RCDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR6",81,0)
 I 'RCDA D
"RTN","RCDPESR6",82,0)
 . S RCERR="An error was encountered that prevented the adding of an ERA totals record.  An EEOB exception record was created."
"RTN","RCDPESR6",83,0)
 ;
"RTN","RCDPESR6",84,0)
ERATOTQ Q RCDA
"RTN","RCDPESR6",85,0)
 ;
"RTN","RCDPESR6",86,0)
UPDCON(RCRTOT) ; Add contact information to file 344.4 for an ERA
"RTN","RCDPESR6",87,0)
 N DIE,DA,DR,Z,Q,X,Y,A,TYPE
"RTN","RCDPESR6",88,0)
 S Z=$G(^TMP($J,"RCDPEOB","CONTACT"))
"RTN","RCDPESR6",89,0)
 Q:$TR($P(Z,U,3,9),U)=""
"RTN","RCDPESR6",90,0)
 S DA=RCRTOT,DIE="^RCY(344.4,",DR=""
"RTN","RCDPESR6",91,0)
 ;
"RTN","RCDPESR6",92,0)
 ; If old format do
"RTN","RCDPESR6",93,0)
 I +$P($G(^TMP($J,"RCDPEOB","HDR")),U,16)'>0 D
"RTN","RCDPESR6",94,0)
 . F Q=2:1:8 S DR=DR_$S(DR'="":";3.0",1:"3.0")_(Q-1)_"///"_$S($P(Z,U,Q)="":"@",1:"/"_$P(Z,U,Q))
"RTN","RCDPESR6",95,0)
 ;
"RTN","RCDPESR6",96,0)
 ; If new format (5010) do
"RTN","RCDPESR6",97,0)
 I +$P($G(^TMP($J,"RCDPEOB","HDR")),U,16)>0 D
"RTN","RCDPESR6",98,0)
 . N CNT S CNT=0
"RTN","RCDPESR6",99,0)
 . I $P(Z,U,2)'="" S DR="3.01////"_$P(Z,U,2)
"RTN","RCDPESR6",100,0)
 .I $P(Z,U,3)'="" S DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,3)_";3.03////TE",CNT=CNT+1
"RTN","RCDPESR6",101,0)
 .I $P(Z,U,4)'="" D
"RTN","RCDPESR6",102,0)
 ..S:CNT=1 DR=DR_$S(DR'="":";3.04",1:"3.04")_"////"_$P(Z,U,4)_";3.05////FX"
"RTN","RCDPESR6",103,0)
 ..S:CNT=0 DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,4)_";3.03////FX"
"RTN","RCDPESR6",104,0)
 ..S CNT=CNT+1
"RTN","RCDPESR6",105,0)
 .I $P(Z,U,5)'="" D
"RTN","RCDPESR6",106,0)
 ..S:CNT=2 DR=DR_$S(DR'="":";3.06",1:"3.06")_"////"_$P(Z,U,5)_";3.07////EM"
"RTN","RCDPESR6",107,0)
 ..S:CNT=1 DR=DR_$S(DR'="":";3.04",1:"3.04")_"////"_$P(Z,U,5)_";3.05////EM"
"RTN","RCDPESR6",108,0)
 ..S:CNT=0 DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,5)_";3.03////EM"
"RTN","RCDPESR6",109,0)
 . I $P(Z,U,6)'="" S DR=DR_$S(DR'="":";5.01",1:"5.01")_"////"_$P(Z,U,6)
"RTN","RCDPESR6",110,0)
 D ^DIE
"RTN","RCDPESR6",111,0)
 Q
"RTN","RCDPESR6",112,0)
 ;
"RTN","RCDPESR6",113,0)
UPDADJ(RCRTOT) ; Add ERA level adj data to file 344.4
"RTN","RCDPESR6",114,0)
 N Z,Z0,DA,DIC,DLAYGO,DR,X,Y,DO,DD
"RTN","RCDPESR6",115,0)
 ; Remove any already there
"RTN","RCDPESR6",116,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RCRTOT,2,Z)) Q:'Z  S DA(1)=RCRTOT,DA=Z D ^DIK
"RTN","RCDPESR6",117,0)
 ;
"RTN","RCDPESR6",118,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB","ADJ",Z)) Q:'Z  S Z0=$G(^(Z)) D
"RTN","RCDPESR6",119,0)
 . S DIC(0)="L",X=$P(Z0,U,3)_" ",DA(1)=RCRTOT,DIC="^RCY(344.4,"_DA(1)_",2,",DIC("DR")=$S($P(Z0,U,2)'="":".02////"_$P(Z0,U,2),1:"")
"RTN","RCDPESR6",120,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,4)'="":".03////"_$J(-$P(Z0,U,4)/100,"",2),1:"")
"RTN","RCDPESR6",121,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,5)'="":".04////"_$P(Z0,U,5),1:""),DLAYGO=344.42
"RTN","RCDPESR6",122,0)
 . S:$O(^RCY(344.4,RCRTOT,2,"B",X,0)) X=""""_X_""""
"RTN","RCDPESR6",123,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","RCDPESR6",124,0)
 Q
"RTN","RCDPESR6",125,0)
 ;
"RTN","RCDPESR6",126,0)
DUPREC(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,RCDUPEOB) ; Overflow from RCDPESR2
"RTN","RCDPESR6",127,0)
 S ^TMP("RCERR1",$J,RCCT)=" ",^TMP("RCERR1",$J,RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR6",128,0)
 S ^TMP("RCERR1",$J,RCCT,2)="(Warning): EEOB detail already filed for "_RCBILL_" - "_$S(RCALLDUP:"Duplicate not stored",1:"EEOB updated"),^TMP("RCERR1",$J,RCCT,3)=" " S:RCFILE=5 ^TMP("RCERR1",$J,RCCT,"*")=^TMP("RCERR1",$J,RCCT,2)
"RTN","RCDPESR6",129,0)
 I RCALLDUP S RCEOB="",RCDUPEOB=-1 Q
"RTN","RCDPESR6",130,0)
 S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=RCEOB
"RTN","RCDPESR6",131,0)
 Q
"RTN","RCDPESR6",132,0)
 ;
"RTN","RCDPETT")
0^65^B81520347
"RTN","RCDPETT",1,0)
RCDPETT ; ePayments/CNF, hrubovcak - epayments Testing Tool;Jul 10, 2014@17:25:29
"RTN","RCDPETT",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETT",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETT",4,0)
 ;
"RTN","RCDPETT",5,0)
 ; entered from the top
"RTN","RCDPETT",6,0)
 D DT^DICRW,HOME^%ZIS  ; kernel variables
"RTN","RCDPETT",7,0)
 ;
"RTN","RCDPETT",8,0)
 ; delete any residual data
"RTN","RCDPETT",9,0)
 K D0,DA,DIC,DIE,DIK,DIR,DR,X,Y,^TMP($J),^TMP("DIERR",$J),^TMP("XMERR",$J)
"RTN","RCDPETT",10,0)
 N RCMNU,RCOPT  ; menu and option selection
"RTN","RCDPETT",11,0)
 ;
"RTN","RCDPETT",12,0)
 ; user's DUZ must be valid
"RTN","RCDPETT",13,0)
 I '($G(DUZ)>0) W !,$C(7)_"DUZ not defined.",!,"Exiting.",! Q
"RTN","RCDPETT",14,0)
 I '$L($P(^VA(200,DUZ,0),U,3)) W !,$C(7)_"No Access Code for this User.",!,"Exiting.",! Q
"RTN","RCDPETT",15,0)
 I $$PROD^XUPROD D NTRY^RCDPETTU("Production Account") G H^XUS
"RTN","RCDPETT",16,0)
 ;
"RTN","RCDPETT",17,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETT",18,0)
 ;
"RTN","RCDPETT",19,0)
 F  S RCMNU=U D  Q:'RCMNU  ; menu option in RCMNU
"RTN","RCDPETT",20,0)
 .W !!,$J($$NOW^RCDPETTU,30),!   ; displayed every time menu painted
"RTN","RCDPETT",21,0)
 .N DIR,X,Y S DIR(0)="SAO^1:RET;2:ERA;3:MRA;4:EFT;5:USR;6:FMS;7:REB;8:EXI"
"RTN","RCDPETT",22,0)
 .S DIR("A")=" Select Option: "
"RTN","RCDPETT",23,0)
 .S DIR("A",1)="    ePayments Testing Tool Options"
"RTN","RCDPETT",24,0)
 .S DIR("A",2)=" "  ; blank format line
"RTN","RCDPETT",25,0)
 .S DIR("A",3)="  1. RET - Retrieve Mail Message"
"RTN","RCDPETT",26,0)
 .S DIR("A",4)="  2. ERA - EEOB/ERA Options"
"RTN","RCDPETT",27,0)
 .S DIR("A",5)="  3. MRA - EEOB/MRA Options"
"RTN","RCDPETT",28,0)
 .S DIR("A",6)="  4. EFT - EFT Options"
"RTN","RCDPETT",29,0)
 .S DIR("A",8)="  5. USR - User Preferences"
"RTN","RCDPETT",30,0)
 .S DIR("A",9)="  6. FMS - FMS Acceptance of EFTs"
"RTN","RCDPETT",31,0)
 .S DIR("A",10)="  7. REB - Re-Establish Bill"
"RTN","RCDPETT",32,0)
 .S DIR("A",11)="  8. EXI - Exit Menu"
"RTN","RCDPETT",33,0)
 .S DIR("A",12)=" "  ; blank format line
"RTN","RCDPETT",34,0)
 .D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETT",35,0)
 .Q:'$L(Y)  ; user pressed return, will exit
"RTN","RCDPETT",36,0)
 .S RCMNU=Y
"RTN","RCDPETT",37,0)
 .I RCMNU=1 D RTRVMSG Q
"RTN","RCDPETT",38,0)
 .I RCMNU=2 F  S RCOPT=0 D ERAOPT Q:'RCOPT
"RTN","RCDPETT",39,0)
 .I RCMNU=3 F  S RCOPT=0 D MRAOPT Q:'RCOPT
"RTN","RCDPETT",40,0)
 .I RCMNU=4 F  S RCOPT=0 D EFTOPT Q:'RCOPT
"RTN","RCDPETT",41,0)
 .I RCMNU=5 D USRPREF^RCDPETTP Q
"RTN","RCDPETT",42,0)
 .I RCMNU=6 D ACPT^RCDPETTF Q
"RTN","RCDPETT",43,0)
 .I RCMNU=7 N PRC D ^PRCAWREA K DTOUT Q
"RTN","RCDPETT",44,0)
 .I RCMNU=8 W !!,"Exiting Testing Tool.",! S RCMNU=0 Q
"RTN","RCDPETT",45,0)
 ;
"RTN","RCDPETT",46,0)
 ; exit
"RTN","RCDPETT",47,0)
 K ^TMP($J)
"RTN","RCDPETT",48,0)
 Q
"RTN","RCDPETT",49,0)
 ;
"RTN","RCDPETT",50,0)
ERAOPT ; ERA Options
"RTN","RCDPETT",51,0)
 ;
"RTN","RCDPETT",52,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETT",53,0)
 D NTRY^RCDPETTU("ERA processing")
"RTN","RCDPETT",54,0)
 ; RCOPT = desired option
"RTN","RCDPETT",55,0)
 S RCOPT=U W !!
"RTN","RCDPETT",56,0)
 ; DIR call - S:set of codes, A:prompt array supplied, O:optional response
"RTN","RCDPETT",57,0)
 N DIR,X,Y S DIR(0)="SAO^1:D;2:E;3:V;4:C;5:S;6:Q;7:X"
"RTN","RCDPETT",58,0)
 S DIR("A")=" Select ERA option: "
"RTN","RCDPETT",59,0)
 S DIR("A",1)="    Electronic Remittance Advice (ERA) Options"
"RTN","RCDPETT",60,0)
 S DIR("A",2)=" "  ; blank format line
"RTN","RCDPETT",61,0)
 S DIR("A",3)="  1. D - Delete EEOB Object"
"RTN","RCDPETT",62,0)
 S DIR("A",4)="  2. E - Edit EEOB Object"
"RTN","RCDPETT",63,0)
 S DIR("A",5)="  3. V - View EEOB Object"
"RTN","RCDPETT",64,0)
 S DIR("A",6)="  4. C - Copy EEOB Object"
"RTN","RCDPETT",65,0)
 S DIR("A",7)="  5. S - Send ERA to VistA"
"RTN","RCDPETT",66,0)
 S DIR("A",8)="  6. Q - Quick Copy/Edit/Send"
"RTN","RCDPETT",67,0)
 S DIR("A",9)="  7. X - EXIT ERA Options"
"RTN","RCDPETT",68,0)
 S DIR("A",10)=" "  ; blank format line
"RTN","RCDPETT",69,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETT",70,0)
 S RCOPT=Y ; might be null
"RTN","RCDPETT",71,0)
 ; ERA action
"RTN","RCDPETT",72,0)
 D:RCOPT
"RTN","RCDPETT",73,0)
 .I RCOPT=1 D DEL^RCDPETTE Q
"RTN","RCDPETT",74,0)
 .I RCOPT=2 D EDMSG^RCDPETTE Q
"RTN","RCDPETT",75,0)
 .I RCOPT=3 D VWMSG^RCDPETTE Q
"RTN","RCDPETT",76,0)
 .I RCOPT=4 D COPY^RCDPETTE Q
"RTN","RCDPETT",77,0)
 .I RCOPT=5 D SNDERA^RCDPETTE Q
"RTN","RCDPETT",78,0)
 .I RCOPT=6 D QUICK^RCDPETTQ Q
"RTN","RCDPETT",79,0)
 .I RCOPT=7 S RCOPT="^EXIT" Q  ; evaluate as false
"RTN","RCDPETT",80,0)
 ;
"RTN","RCDPETT",81,0)
 Q
"RTN","RCDPETT",82,0)
 ;
"RTN","RCDPETT",83,0)
MRAOPT  ; MRA options
"RTN","RCDPETT",84,0)
 ;
"RTN","RCDPETT",85,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETT",86,0)
 D NTRY^RCDPETTU("MRA processing")
"RTN","RCDPETT",87,0)
 ; RCOPT = desired option
"RTN","RCDPETT",88,0)
 S RCOPT=U W !!
"RTN","RCDPETT",89,0)
 ; DIR call - S:set of codes, A:prompt array supplied, O:optional response
"RTN","RCDPETT",90,0)
 N DIR,X,Y S DIR(0)="SAO^1:D;2:E;3:V;4:C;5:S;6:X"
"RTN","RCDPETT",91,0)
 S DIR("A")=" Select MRA option: "
"RTN","RCDPETT",92,0)
 S DIR("A",1)="    Medicare Remittance Advice (MRA) Options"
"RTN","RCDPETT",93,0)
 S DIR("A",2)=" "  ; blank format line
"RTN","RCDPETT",94,0)
 S DIR("A",3)="  1. D - Delete EEOB Object"
"RTN","RCDPETT",95,0)
 S DIR("A",4)="  2. E - Edit EEOB Object"
"RTN","RCDPETT",96,0)
 S DIR("A",5)="  3. V - View EEOB Object"
"RTN","RCDPETT",97,0)
 S DIR("A",6)="  4. C - Copy EEOB Object"
"RTN","RCDPETT",98,0)
 S DIR("A",7)="  5. S - Send MRA to VistA"
"RTN","RCDPETT",99,0)
 S DIR("A",8)="  6. X - EXIT MRA Options"
"RTN","RCDPETT",100,0)
 S DIR("A",9)=" "  ; blank format line
"RTN","RCDPETT",101,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETT",102,0)
 S RCOPT=Y ; might be null
"RTN","RCDPETT",103,0)
 ; MRA action
"RTN","RCDPETT",104,0)
 D:RCOPT
"RTN","RCDPETT",105,0)
 .I RCOPT=1 D DEL^RCDPETTM Q
"RTN","RCDPETT",106,0)
 .I RCOPT=2 D EDMSG^RCDPETTM Q
"RTN","RCDPETT",107,0)
 .I RCOPT=3 D VWMSG^RCDPETTM Q
"RTN","RCDPETT",108,0)
 .I RCOPT=4 D COPY^RCDPETTM Q
"RTN","RCDPETT",109,0)
 .I RCOPT=5 D SNDMRA^RCDPETTM Q
"RTN","RCDPETT",110,0)
 .I RCOPT=6 S RCOPT="^EXIT" Q  ; evaluate as false
"RTN","RCDPETT",111,0)
 ;
"RTN","RCDPETT",112,0)
 Q
"RTN","RCDPETT",113,0)
 ;
"RTN","RCDPETT",114,0)
EFTOPT ; EFT options
"RTN","RCDPETT",115,0)
 ;
"RTN","RCDPETT",116,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETT",117,0)
 D NTRY^RCDPETTU("EFT processing")
"RTN","RCDPETT",118,0)
 ; RCOPT = desired option
"RTN","RCDPETT",119,0)
 S RCOPT=U W !!
"RTN","RCDPETT",120,0)
 ; DIR call - S:set of codes, A:prompt array supplied, O:optional response
"RTN","RCDPETT",121,0)
 N DIR,X,Y S DIR(0)="SAO^1:D;2:E;3:V;4:C;5:S;6:X"
"RTN","RCDPETT",122,0)
 S DIR("A")=" Select EFT option: "
"RTN","RCDPETT",123,0)
 S DIR("A",1)="    Electronic Fund Transfer (EFT) Options"
"RTN","RCDPETT",124,0)
 S DIR("A",2)=" "  ; blank format line
"RTN","RCDPETT",125,0)
 S DIR("A",3)="  1. D - Delete EFT Detail Line"
"RTN","RCDPETT",126,0)
 S DIR("A",4)="  2. E - Edit EFT Detail Line"
"RTN","RCDPETT",127,0)
 S DIR("A",5)="  3. V - View EFT Detail Line"
"RTN","RCDPETT",128,0)
 S DIR("A",6)="  4. C - Copy EFT Detail Line"
"RTN","RCDPETT",129,0)
 S DIR("A",7)="  5. S - Send EFT to VistA"
"RTN","RCDPETT",130,0)
 S DIR("A",8)="  6. X - EXIT EFT Options"
"RTN","RCDPETT",131,0)
 S DIR("A",9)=" "  ; blank format line
"RTN","RCDPETT",132,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETT",133,0)
 S RCOPT=Y ; might be null
"RTN","RCDPETT",134,0)
 ; EFT action
"RTN","RCDPETT",135,0)
 D:RCOPT
"RTN","RCDPETT",136,0)
 .I RCOPT=1 D DEL^RCDPETTF Q
"RTN","RCDPETT",137,0)
 .I RCOPT=2 D EDMSG^RCDPETTF Q
"RTN","RCDPETT",138,0)
 .I RCOPT=3 D VWMSG^RCDPETTF Q
"RTN","RCDPETT",139,0)
 .I RCOPT=4 D COPY^RCDPETTF Q
"RTN","RCDPETT",140,0)
 .I RCOPT=5 D SNDEFT^RCDPETTF Q
"RTN","RCDPETT",141,0)
 .I RCOPT=6 S RCOPT="^EXIT" Q  ; evaluate as false
"RTN","RCDPETT",142,0)
 ;
"RTN","RCDPETT",143,0)
 Q
"RTN","RCDPETT",144,0)
 ;
"RTN","RCDPETT",145,0)
RTRVMSG ; Retrieve MailMan message
"RTN","RCDPETT",146,0)
 ; RCDA - array of new entry data
"RTN","RCDPETT",147,0)
 ; RCERR - FileMan error text
"RTN","RCDPETT",148,0)
 ; RCEOB - array of parsed EEOB messages
"RTN","RCDPETT",149,0)
 ; RCEXIT - exit flag
"RTN","RCDPETT",150,0)
 ; RCIMPORT - array for importation options
"RTN","RCDPETT",151,0)
 ; RCXMZ - MailMan message #
"RTN","RCDPETT",152,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETT",153,0)
 ;
"RTN","RCDPETT",154,0)
 N DIR,RCDA,RCERR,RCEOB,RCEOBOPT,RCEXIT,RCXMZ,X,Y
"RTN","RCDPETT",155,0)
 K ^TMP($J,"RCORIG")  ; clear any residue
"RTN","RCDPETT",156,0)
 S X="Retrieve MailMan Message" W !!,X,!
"RTN","RCDPETT",157,0)
 D NTRY^RCDPETTU(X)
"RTN","RCDPETT",158,0)
 S DIC=3.9,DIC(0)="AEMQZ",DIC("A")="Select MailMan Message: "
"RTN","RCDPETT",159,0)
 ; must be sent to specific Mail Group
"RTN","RCDPETT",160,0)
 S DIC("S")="I +$O(^(6,""B"",""G.MCTMSGTEST"",0))"
"RTN","RCDPETT",161,0)
 D ^DIC I '(Y>0) W !!,"No message selected. Exiting.",! Q
"RTN","RCDPETT",162,0)
 S RCXMZ=+Y,RCXMZ(0)=Y(0),RCEXIT=0
"RTN","RCDPETT",163,0)
 ; must have exclusive access
"RTN","RCDPETT",164,0)
 L +^XMB(3.9,RCXMZ):DILOCKTM E  D
"RTN","RCDPETT",165,0)
 .W !,"Unable to lock MailMan message #"_RCXMZ S RCEXIT=1
"RTN","RCDPETT",166,0)
 ;
"RTN","RCDPETT",167,0)
 Q:RCEXIT
"RTN","RCDPETT",168,0)
 ; Z parameter: include W-P zero node
"RTN","RCDPETT",169,0)
 S X=$$GET1^DIQ(3.9,RCXMZ_",",3,"Z",$NA(^TMP($J,"RCORIG")),"RCERR")
"RTN","RCDPETT",170,0)
 I $D(RCERR) D  ; log error
"RTN","RCDPETT",171,0)
 .L -^XMB(3.9,RCXMZ)  ; release LOCK, we're exiting
"RTN","RCDPETT",172,0)
 .W !,"FileMan has returned an error message.",!
"RTN","RCDPETT",173,0)
 .D LOGARY^RCDPETTU("RCERR") S RCEXIT=1
"RTN","RCDPETT",174,0)
 ;
"RTN","RCDPETT",175,0)
 Q:RCEXIT
"RTN","RCDPETT",176,0)
 ;
"RTN","RCDPETT",177,0)
 D  ; user questions and parsing
"RTN","RCDPETT",178,0)
 .K DIR S DIR(0)="YA",DIR("A")="Automatically import? "
"RTN","RCDPETT",179,0)
 .S DIR("?")="Indicate whether the EEOB text should be imported automatically."
"RTN","RCDPETT",180,0)
 .; save result in RCDA for new object creation
"RTN","RCDPETT",181,0)
 .D ^DIR S RCDA("AUTOIMP")=+Y,RCEXIT=$D(DTOUT)+$D(DUOUT)  ; handle timeout or '^'
"RTN","RCDPETT",182,0)
 .Q:RCEXIT
"RTN","RCDPETT",183,0)
 .;
"RTN","RCDPETT",184,0)
 .K DIR S DIR(0)="YA",DIR("A")="Display EEOBs? "
"RTN","RCDPETT",185,0)
 .S DIR("?")="Indicate whether an EEOB entry should be displayed as it is filed."
"RTN","RCDPETT",186,0)
 .; use RCEOBOPT("DSPLY") on return
"RTN","RCDPETT",187,0)
 .D ^DIR S RCEOBOPT("DSPLY")=+Y,RCEXIT=$D(DTOUT)+$D(DUOUT)  ; handle timeout or '^'
"RTN","RCDPETT",188,0)
 .Q:RCEXIT
"RTN","RCDPETT",189,0)
 .;
"RTN","RCDPETT",190,0)
 .D PRSEOB^RCDPETTU(.RCEOB,$NA(^TMP($J,"RCORIG")))
"RTN","RCDPETT",191,0)
 .S:RCEOB<0 RCEXIT=1  ; parsing error
"RTN","RCDPETT",192,0)
 .Q:'RCEXIT  ; success
"RTN","RCDPETT",193,0)
 .; display parsing error
"RTN","RCDPETT",194,0)
 .W !,"Error processing message."
"RTN","RCDPETT",195,0)
 .W:$D(RCEOB(-1)) !,"   "_$G(RCEOB(-1))  ; error text
"RTN","RCDPETT",196,0)
 ;
"RTN","RCDPETT",197,0)
 ; release exclusive access
"RTN","RCDPETT",198,0)
 L -^XMB(3.9,RCXMZ)
"RTN","RCDPETT",199,0)
 Q:RCEXIT  ; problems, exit
"RTN","RCDPETT",200,0)
 ;
"RTN","RCDPETT",201,0)
 W !," The MailMan message contained data for "_RCEOB_" bill"_$E("s",RCEOB'=1)_"."
"RTN","RCDPETT",202,0)
 Q:'RCEOB
"RTN","RCDPETT",203,0)
 ;
"RTN","RCDPETT",204,0)
 ; verify we know this object's type, if not then exit
"RTN","RCDPETT",205,0)
 I '("^ERA^EOB^EFT^"[(U_RCEOB("TYPE")_U)) W !," Message type unknown.  Nothing filed.",! Q
"RTN","RCDPETT",206,0)
 I RCEOB("TYPE")="EOB" S RCEOB("TYPE")="MRA"   ;MRA header starts with "835EOB", change type to MRA
"RTN","RCDPETT",207,0)
 ;
"RTN","RCDPETT",208,0)
 S RCDA("AUTOTXT")=""  ; default text for auto-import
"RTN","RCDPETT",209,0)
 D:RCDA("AUTOIMP")  ; get text from user
"RTN","RCDPETT",210,0)
 .K DIR S DIR(0)="FA^3:20",DIR("A")="Enter default EEOB name: "
"RTN","RCDPETT",211,0)
 .D ^DIR S RCEXIT=$D(DTOUT)+$D(DUOUT) Q:RCEXIT
"RTN","RCDPETT",212,0)
 .S:Y]"" RCDA("AUTOTXT")=Y  ; response not required
"RTN","RCDPETT",213,0)
 ;
"RTN","RCDPETT",214,0)
 Q:RCEXIT  ; timed out or '^' entered
"RTN","RCDPETT",215,0)
 ;
"RTN","RCDPETT",216,0)
 ; save message data for new entry
"RTN","RCDPETT",217,0)
 S RCDA("XMZ")=RCXMZ,RCDA("XMZ",0)=RCXMZ(0)
"RTN","RCDPETT",218,0)
 D NWOBJ^RCDPETTU(.RCDA,.RCEOB)  ; create new entry or entries
"RTN","RCDPETT",219,0)
 D:'RCDA("IEN")>0 
"RTN","RCDPETT",220,0)
 .W !,"Unable to create new entry."  ; new entry IEN
"RTN","RCDPETT",221,0)
 .N DIR S DIR(0)="EA",DIR("A")="Press Return: " D ^DIR
"RTN","RCDPETT",222,0)
 ;
"RTN","RCDPETT",223,0)
 D:RCDA("IEN")>0  ; if new entries created
"RTN","RCDPETT",224,0)
 .N RCI  ; scratch namespaced variable
"RTN","RCDPETT",225,0)
 .; display entries if indicated
"RTN","RCDPETT",226,0)
 .I $G(RCEOBOPT("DSPLY")) S RCI=0 F  S RCI=$O(RCDA("IEN",RCI)) Q:'RCI  D
"RTN","RCDPETT",227,0)
 ..W !!,"Created entry #"_RCI,!," Name: "_$$GET1^DIQ(344.81,RCI,.01)
"RTN","RCDPETT",228,0)
 ..N J,DIR,RCWP S X=$$GET1^DIQ(344.81,RCI,2,"Z","RCWP")
"RTN","RCDPETT",229,0)
 ..W !," Text:"
"RTN","RCDPETT",230,0)
 ..S J=0 F  S J=$O(RCWP(J)) Q:'J  W !,RCWP(J,0)
"RTN","RCDPETT",231,0)
 ..W ! S DIR(0)="E" D ^DIR
"RTN","RCDPETT",232,0)
 .;
"RTN","RCDPETT",233,0)
 .Q:$G(RCDA("AUTOIMP"))  ; user indicated to auto-import
"RTN","RCDPETT",234,0)
 .W !!,"You can edit the new entries via FileMan."
"RTN","RCDPETT",235,0)
 .S RCI=0 F  S RCI=$O(RCDA("IEN",RCI)) Q:'RCI  D   ; edit each entry
"RTN","RCDPETT",236,0)
 ..W ! N D0,DA,DIC,DIE,DR,X,Y
"RTN","RCDPETT",237,0)
 ..S DA=RCI,DIE=344.81,DR=".01;.05" D ^DIE
"RTN","RCDPETT",238,0)
 ..I $D(Y) S RCI=U,RCEXIT=1 Q  ; user exited ^DIE with '^', exit loop
"RTN","RCDPETT",239,0)
 ..; if user hasn't deleted the new entry set OBJECT STATUS to reviewed
"RTN","RCDPETT",240,0)
 ..I $D(^RCY(344.81,RCI,0)) S $P(^(1),U,2)=2
"RTN","RCDPETT",241,0)
 ;
"RTN","RCDPETT",242,0)
 I 'RCEXIT D:RCDA("IEN")>0  ; delete G.MCTMSGTEST from recipients
"RTN","RCDPETT",243,0)
 .N DA,DIK
"RTN","RCDPETT",244,0)
 .; message IEN and RECIPIENT IEN
"RTN","RCDPETT",245,0)
 .S DA(1)=RCXMZ,DA=+$O(^XMB(3.9,RCXMZ,6,"B","G.MCTMSGTEST",0))
"RTN","RCDPETT",246,0)
 .Q:'DA  S DIK="^XMB(3.9,"_DA(1)_",6," D ^DIK
"RTN","RCDPETT",247,0)
 ;
"RTN","RCDPETT",248,0)
 Q
"RTN","RCDPETT",249,0)
 ;
"RTN","RCDPETTE")
0^66^B258211138
"RTN","RCDPETTE",1,0)
RCDPETTE ; ePayments/CNF, hrubovcak - EDI Testing Tool ERA actions ;Jun 06, 2014@19:11:19
"RTN","RCDPETTE",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTE",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTE",4,0)
 ;
"RTN","RCDPETTE",5,0)
 ; called by RCDPETT
"RTN","RCDPETTE",6,0)
 Q
"RTN","RCDPETTE",7,0)
 ;
"RTN","RCDPETTE",8,0)
COPY ; Copy ERA message
"RTN","RCDPETTE",9,0)
 ;
"RTN","RCDPETTE",10,0)
 D NTRY^RCDPETTU("Copy ERA Object")
"RTN","RCDPETTE",11,0)
 D COPY^RCDPETTU("ERA")
"RTN","RCDPETTE",12,0)
 ;
"RTN","RCDPETTE",13,0)
 Q
"RTN","RCDPETTE",14,0)
 ;
"RTN","RCDPETTE",15,0)
DEL ; delete ERA type object
"RTN","RCDPETTE",16,0)
 ;
"RTN","RCDPETTE",17,0)
 D NTRY^RCDPETTU("Delete ERA Object")
"RTN","RCDPETTE",18,0)
 D DEL^RCDPETTU("ERA")
"RTN","RCDPETTE",19,0)
 ;
"RTN","RCDPETTE",20,0)
 Q
"RTN","RCDPETTE",21,0)
 ;
"RTN","RCDPETTE",22,0)
EDMSG ; edit ERA message
"RTN","RCDPETTE",23,0)
 ;
"RTN","RCDPETTE",24,0)
 N RCMSGSEL,X
"RTN","RCDPETTE",25,0)
 S X="Edit ERA Message"
"RTN","RCDPETTE",26,0)
 D NTRY^RCDPETTU(X) W !!,X_" "_$$NOW^RCDPETTU
"RTN","RCDPETTE",27,0)
 ;
"RTN","RCDPETTE",28,0)
 ; Select ERA message to edit
"RTN","RCDPETTE",29,0)
 S RCMSGSEL=0 F  D  Q:'(RCMSGSEL>0)
"RTN","RCDPETTE",30,0)
 .W ! S RCMSGSEL=$$SELECT^RCDPETTU("ERA")  ; only ERA entries
"RTN","RCDPETTE",31,0)
 .I '(RCMSGSEL>0) W !!,"No message selected. Exiting.",! Q
"RTN","RCDPETTE",32,0)
 .D EDWRK(RCMSGSEL,0)
"RTN","RCDPETTE",33,0)
 ;
"RTN","RCDPETTE",34,0)
 Q
"RTN","RCDPETTE",35,0)
 ;
"RTN","RCDPETTE",36,0)
EDWRK(RCMSG,RCQUICK) ; 
"RTN","RCDPETTE",37,0)
 ;RCMSG = "ien #344.81 ^ .01 field"
"RTN","RCDPETTE",38,0)
 ;RCQUICK = 0 if coming from edit ERA option, 1 if coming from Quick option
"RTN","RCDPETTE",39,0)
 ;
"RTN","RCDPETTE",40,0)
 Q:'($G(RCMSG)>0)  ; required
"RTN","RCDPETTE",41,0)
 D LOG^RCDPETTU("edit ERA "_RCMSG)
"RTN","RCDPETTE",42,0)
 N AMTPD,DIC,DIR,DOSF,DOST,IEN,IEN2,J,K,L,RCEDIT,RCEEOB,RCBILL,RCFLDNO,RCLT,RCLASTNM,RCOA,RCPATID,RCPCE,RCREC,RCRECB,RCTEXT,RCV,RCVAR,TAG,X,Y
"RTN","RCDPETTE",43,0)
 ;Get message content
"RTN","RCDPETTE",44,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTE",45,0)
 I '$D(RCEEOB) W !,"No lines to edit. Exiting.",! Q
"RTN","RCDPETTE",46,0)
 ;
"RTN","RCDPETTE",47,0)
 ;Build a list of records that contain editable data
"RTN","RCDPETTE",48,0)
 ; example: RCREC="/05/10/15/20/40/45/"
"RTN","RCDPETTE",49,0)
 S RCREC="/" F J=1:1 S RCTEXT=$T(ERA+J) Q:$E(RCTEXT,1,3)'=" ;;"  S RCREC=RCREC_$P(RCTEXT,";",3)_"/"
"RTN","RCDPETTE",50,0)
 ;
"RTN","RCDPETTE",51,0)
 ;Build an array of records and fields that contain the bill number
"RTN","RCDPETTE",52,0)
 ; RCRECB(Record,Field)=""
"RTN","RCDPETTE",53,0)
 K RCRECB
"RTN","RCDPETTE",54,0)
 F J=1:1 S RCTEXT=$T(ERABILL+J) Q:$E(RCTEXT,1,3)'=" ;;"  S RCRECB($P(RCTEXT,";",3),$P(RCTEXT,";",4))=""
"RTN","RCDPETTE",55,0)
 ;
"RTN","RCDPETTE",56,0)
 ;
"RTN","RCDPETTE",57,0)
 I 'RCQUICK D EDITOBJ^RCDPETTU(+RCMSG)
"RTN","RCDPETTE",58,0)
 ;Get bill number, stored in RCBILL
"RTN","RCDPETTE",59,0)
 K DIR S DIR(0)="FAU",DIR("A")="Bill #? "
"RTN","RCDPETTE",60,0)
 F J=1:1:20 I +$G(RCEEOB(J))=5 S DIR("B")=$P(RCEEOB(J),"^",2) Q
"RTN","RCDPETTE",61,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",62,0)
 I Y="^" Q
"RTN","RCDPETTE",63,0)
 S RCBILL=Y
"RTN","RCDPETTE",64,0)
 ;
"RTN","RCDPETTE",65,0)
 ;Look up the bill #.  If it's valid, set defaults for last name, patient id, date of service, original amount
"RTN","RCDPETTE",66,0)
 S RCPATID="",RCLASTNM="",DOSF="",DOST="",RCOA=""
"RTN","RCDPETTE",67,0)
 ; RCPATID - Patient ID
"RTN","RCDPETTE",68,0)
 ; RCLASTNM - Patient's last name
"RTN","RCDPETTE",69,0)
 ; DOSF - Date of Service (From)
"RTN","RCDPETTE",70,0)
 ; DOST - Date of Service (To)
"RTN","RCDPETTE",71,0)
 ; RCOA - Original Amount of bill
"RTN","RCDPETTE",72,0)
 ;
"RTN","RCDPETTE",73,0)
 S X=Y I RCBILL["-" S X=$P(RCBILL,"-",2)  ;bill number example:  442-K12121G; X will be K12121G
"RTN","RCDPETTE",74,0)
 ; IEN - pointer file #2, IEN2 - pointer file #399
"RTN","RCDPETTE",75,0)
 S DIC="^DGCR(399,",DIC(0)="EQ" D ^DIC S IEN2=+Y
"RTN","RCDPETTE",76,0)
 I Y>0 S:RCBILL["-" $P(RCBILL,"-",2)=$P($G(Y),"^",2) I RCBILL'["-" S RCBILL=$P($G(Y),"^",2)  ;Keep site if entered
"RTN","RCDPETTE",77,0)
 I $G(IEN2) D
"RTN","RCDPETTE",78,0)
 .S IEN=$$GET1^DIQ(399,IEN2,.02,"I")
"RTN","RCDPETTE",79,0)
 .S DOSF=$$GET1^DIQ(399,IEN2,151,"I")
"RTN","RCDPETTE",80,0)
 .S DOST=$$GET1^DIQ(399,IEN2,152,"I")
"RTN","RCDPETTE",81,0)
 .S DOSF=17000000+DOSF  ;convert format to YYYYMMDD, date of service from
"RTN","RCDPETTE",82,0)
 .S DOST=17000000+DOST  ;convert format to YYYYMMDD, date of service to
"RTN","RCDPETTE",83,0)
 I $G(IEN) D
"RTN","RCDPETTE",84,0)
 .S RCLASTNM=$$GET1^DIQ(2,IEN,.01),RCLASTNM=$P(RCLASTNM,",",1)  ;patient's last name
"RTN","RCDPETTE",85,0)
 .S RCPATID=$$GET1^DIQ(2,IEN,.09)   ;patient id
"RTN","RCDPETTE",86,0)
 S X=RCBILL,DIC="^PRCA(430,",DIC(0)="Z" D ^DIC I +Y D    ;bill number example:  442-K12121G; X = bill number
"RTN","RCDPETTE",87,0)
 .S RCOA=$$GET1^DIQ(430,+Y,3),RCOA=RCOA*100   ;original amount
"RTN","RCDPETTE",88,0)
 ;
"RTN","RCDPETTE",89,0)
 ;Loop through the EEOB to modify data
"RTN","RCDPETTE",90,0)
 S RCEDIT=1  ;RCEDIT = 0 if user aborts
"RTN","RCDPETTE",91,0)
 S AMTPD=0   ;AMTPD is set from value in record 10/piece 11/Amount Paid to use as a default for record 40/piece 17/Amount Paid
"RTN","RCDPETTE",92,0)
 F J=1:1 Q:'$D(RCEEOB(J))  S RCEEOB=RCEEOB(J) D
"RTN","RCDPETTE",93,0)
 .S RCLT=$P(RCEEOB,"^",1)  ;RCLT = Line type field, contains record number
"RTN","RCDPETTE",94,0)
 .;
"RTN","RCDPETTE",95,0)
 .;If line contains bill #, replace with the bill # provided by user
"RTN","RCDPETTE",96,0)
 .I $D(RCRECB(+RCLT)) S K="",L="" F K=1:1 S L=$O(RCRECB(+RCLT,L)) Q:L=""  S $P(RCEEOB,"^",L)=RCBILL
"RTN","RCDPETTE",97,0)
 .;
"RTN","RCDPETTE",98,0)
 .;Quit if no user editable data
"RTN","RCDPETTE",99,0)
 .I RCREC'[("/"_RCLT_"/") S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTE",100,0)
 .;
"RTN","RCDPETTE",101,0)
 .;Quit if user has stopped editing by entering "^"
"RTN","RCDPETTE",102,0)
 .I 'RCEDIT S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTE",103,0)
 .
"RTN","RCDPETTE",104,0)
 .;Loop through editable fields
"RTN","RCDPETTE",105,0)
 .S TAG="ERA"_RCLT  ;Example:  TAG=ERA05 (for record 05), RCTEXT=";;Patient ID;6;20;AN;RCPATID" (text under tag)
"RTN","RCDPETTE",106,0)
 .F K=1:1 S RCTEXT=$T(@TAG+K) Q:$E(RCTEXT,1,3)'=" ;;"  D  I 'RCEDIT Q
"RTN","RCDPETTE",107,0)
 ..;
"RTN","RCDPETTE",108,0)
 ..;Data in RCTEXT, Corresponding variables are in brackets
"RTN","RCDPETTE",109,0)
 ..;[RC1]Field Name; [RC2]piece; [RC3]max length
"RTN","RCDPETTE",110,0)
 ..; [RC4](A)lpha(N)umeric(P)unctuation; [RC5]Variable name; [RC6]Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTE",111,0)
 ..;
"RTN","RCDPETTE",112,0)
 ..N RC1,RC2,RC3,RC4,RC5,RC6,RC7
"RTN","RCDPETTE",113,0)
 ..F L=1:1:7 S @("RC"_L)=$P(RCTEXT,";",(L+2))
"RTN","RCDPETTE",114,0)
 ..
"RTN","RCDPETTE",115,0)
 ..N DIR S DIR(0)="FOA",DIR("A")=RC1_": "
"RTN","RCDPETTE",116,0)
 ..S RCVAR="RCV",RCV="" I RC5'="" S RCVAR=RC5 ;Variable name
"RTN","RCDPETTE",117,0)
 ..I @RCVAR="" S @RCVAR=$P(RCEEOB,"^",RC2) ;Default data either comes from the bill or the EEOB
"RTN","RCDPETTE",118,0)
 ..;If RCQUICK is zero (not the Quick option), let the user edit the field
"RTN","RCDPETTE",119,0)
 ..;RC7 is a quick edit override.  If set, allow the user to edit the field in the Quick option
"RTN","RCDPETTE",120,0)
 ..I ('RCQUICK)!(RC7) D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",121,0)
 ...S DIR("B")=@RCVAR
"RTN","RCDPETTE",122,0)
 ...D ^DIR
"RTN","RCDPETTE",123,0)
 ...I Y="^" S RCEDIT=0,RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTE",124,0)
 ..;If RCQUICK is one, bypass the user edit and take the default value
"RTN","RCDPETTE",125,0)
 ..;RC7 is a quick edit override.  If set, don't overwrite the user edit with the default value
"RTN","RCDPETTE",126,0)
 ..I RCQUICK&('RC7) S Y=@RCVAR
"RTN","RCDPETTE",127,0)
 ..;
"RTN","RCDPETTE",128,0)
 ..;Pad with leading zeros, if necessary
"RTN","RCDPETTE",129,0)
 ..I RC6="L" S Y=$$LZ^RCDPETTU(Y,RC3)
"RTN","RCDPETTE",130,0)
 ..S $P(RCEEOB,"^",RC2)=Y
"RTN","RCDPETTE",131,0)
 ..S RCEEOB(J)=RCEEOB
"RTN","RCDPETTE",132,0)
 ..I +RCEEOB=10 S AMTPD=$P(RCEEOB,"^",11)   ;used as a default for record 40/piece 17/Amount Paid
"RTN","RCDPETTE",133,0)
 ;
"RTN","RCDPETTE",134,0)
 D WP^DIE(344.81,+RCMSG_",",2,"","RCEEOB")
"RTN","RCDPETTE",135,0)
 ;
"RTN","RCDPETTE",136,0)
 Q
"RTN","RCDPETTE",137,0)
 ;
"RTN","RCDPETTE",138,0)
SNDERA ; send ERA message to VistA
"RTN","RCDPETTE",139,0)
 W !,"Send ERA message to VistA.",!
"RTN","RCDPETTE",140,0)
 N RCTRACE,RCEFT,RCSTOP
"RTN","RCDPETTE",141,0)
 K RCDATA("ERA")
"RTN","RCDPETTE",142,0)
 S RCEFT="",RCSTOP=0
"RTN","RCDPETTE",143,0)
 D GETDATA(.RCDATA,.RCTRACE,.RCEFT,.RCSTOP)
"RTN","RCDPETTE",144,0)
 I RCSTOP Q   ;user stopped editing before ERA construction completed
"RTN","RCDPETTE",145,0)
 D SNDMM(.RCDATA)
"RTN","RCDPETTE",146,0)
 ;
"RTN","RCDPETTE",147,0)
 ;send corresponding EFT message to VistA?
"RTN","RCDPETTE",148,0)
 K DIR S DIR(0)="YA",DIR("A")="Send matching EFT message to VistA? "
"RTN","RCDPETTE",149,0)
 S DIR("B")="NO"
"RTN","RCDPETTE",150,0)
 D ^DIR Q:'Y
"RTN","RCDPETTE",151,0)
 ;
"RTN","RCDPETTE",152,0)
 K RCDATA
"RTN","RCDPETTE",153,0)
 D GETDATAE(.RCDATA,RCEFT)
"RTN","RCDPETTE",154,0)
 D SNDMM(.RCDATA)
"RTN","RCDPETTE",155,0)
 ;
"RTN","RCDPETTE",156,0)
 Q
"RTN","RCDPETTE",157,0)
 ;
"RTN","RCDPETTE",158,0)
SNDMM(RCDATA) ; Entry point for MailMan message
"RTN","RCDPETTE",159,0)
 ; RCTO = recipients
"RTN","RCDPETTE",160,0)
 ; RCSUBJ = subject
"RTN","RCDPETTE",161,0)
 ; RCXMZR = message number returned (XMZ value)
"RTN","RCDPETTE",162,0)
 N C,J,RCTO,RCSUBJ,RCXMZR,X
"RTN","RCDPETTE",163,0)
 K ^TMP($J,"XMSGTXT")
"RTN","RCDPETTE",164,0)
 ;
"RTN","RCDPETTE",165,0)
 ; put file text into FileMan W-P format
"RTN","RCDPETTE",166,0)
 S J=0,C=0 F  S J=$O(RCDATA("ERA",J)) Q:'J  S X=$G(RCDATA("ERA",J)) D:X]""
"RTN","RCDPETTE",167,0)
 .S C=C+1,^TMP($J,"XMSGTXT",C,0)=X
"RTN","RCDPETTE",168,0)
 .I $L(X)>245 W !,"line longer than 245"
"RTN","RCDPETTE",169,0)
 .;W !,"line "_C_" > "_X
"RTN","RCDPETTE",170,0)
 ;
"RTN","RCDPETTE",171,0)
 ;W !!," "_C_" lines found",!
"RTN","RCDPETTE",172,0)
 ;
"RTN","RCDPETTE",173,0)
 N DIR S DIR(0)="YOA",DIR("A")="Send MailMan message? ",DIR("B")="YES"
"RTN","RCDPETTE",174,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",175,0)
 I 'Y W !,"No message sent.",! Q
"RTN","RCDPETTE",176,0)
 ;
"RTN","RCDPETTE",177,0)
 ; send via MailMan
"RTN","RCDPETTE",178,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPETTE",179,0)
 S RCSUBJ="EDI Test "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCDPETTE",180,0)
 S RCTO(.5)="",RCTO(DUZ)=""
"RTN","RCDPETTE",181,0)
 S RCTO("G.MLB")=""  ; 3rd party Lockbox Mail Group
"RTN","RCDPETTE",182,0)
 ;
"RTN","RCDPETTE",183,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,$NA(^TMP($J,"XMSGTXT")),.RCTO,,.RCXMZR)
"RTN","RCDPETTE",184,0)
 ;
"RTN","RCDPETTE",185,0)
 I $D(^TMP("XMERR",$J)) D  ; error from MailMan
"RTN","RCDPETTE",186,0)
 .W !!," MailMan error text "_$$NOW^RCDPETTU,!
"RTN","RCDPETTE",187,0)
 .N G S G=$NA(^TMP("XMERR",$J))
"RTN","RCDPETTE",188,0)
 .F  S G=$Q(@G) Q:G=""  Q:'($QS(G,2)=$J)  ;W !," >> "_$S($QL(G)>3:$P(G,",",4,99)_" = ",1:"")_@G
"RTN","RCDPETTE",189,0)
 .W !!
"RTN","RCDPETTE",190,0)
 ;
"RTN","RCDPETTE",191,0)
 ;check for success
"RTN","RCDPETTE",192,0)
 I $G(RCXMZR) S X="MailMan Message #"_RCXMZR_" sent." W !,X,! D LOG^RCDPETTU(X)
"RTN","RCDPETTE",193,0)
 ;
"RTN","RCDPETTE",194,0)
 Q
"RTN","RCDPETTE",195,0)
 ;
"RTN","RCDPETTE",196,0)
GETDATA(RCDATA,RCTRACE,RCEFT,RCSTOP) ;Get data to send into VistA for ERA
"RTN","RCDPETTE",197,0)
 ; RCDATA = Array of EEOB text for the body of the ERA
"RTN","RCDPETTE",198,0)
 ; RCTRACE = ERA trace number, also used for matching EFT
"RTN","RCDPETTE",199,0)
 ; RCEFT = Array of EFT detail line that matches the ERA
"RTN","RCDPETTE",200,0)
 ; RCSTOP = Flag to indicate stoppage before ERA construction completed
"RTN","RCDPETTE",201,0)
 ;
"RTN","RCDPETTE",202,0)
 N DIR,J,K,RCAMT,RCCNT,RCEEOB,RCIE,RCIEN,RCMSG,RCPAYIEN,RCPAYID,RCPAYNM,RCSEL,RCTEMP,RCTYPE,Y
"RTN","RCDPETTE",203,0)
 ;
"RTN","RCDPETTE",204,0)
 S RCTYPE="ERA"
"RTN","RCDPETTE",205,0)
 ;
"RTN","RCDPETTE",206,0)
 ;Get template for header
"RTN","RCDPETTE",207,0)
 S RCTEMP(1,1)=$P($T(ERAHDR+1),";;",2)
"RTN","RCDPETTE",208,0)
 S RCTEMP(1,2)=$P($T(ERAHDR+2),";;",2)
"RTN","RCDPETTE",209,0)
 ;
"RTN","RCDPETTE",210,0)
 K DIR S DIR(0)="SB^I:INDIVIDUAL;E:EEOB GROUPING"
"RTN","RCDPETTE",211,0)
 S DIR("A")="Select (I)ndividual EEOBs or (E)EOB Grouping: "
"RTN","RCDPETTE",212,0)
 D ^DIR
"RTN","RCDPETTE",213,0)
 I Y="^" W !,"Exiting.",! S RCSTOP=1 Q
"RTN","RCDPETTE",214,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",215,0)
 S RCIE=Y  ;RCIE will be I for Individual selection or E for selection by EEOB Grouping
"RTN","RCDPETTE",216,0)
 ;
"RTN","RCDPETTE",217,0)
 I RCIE="I" D
"RTN","RCDPETTE",218,0)
 .F  D  Q:'(RCMSG>0)
"RTN","RCDPETTE",219,0)
 ..;Select EEOB to send
"RTN","RCDPETTE",220,0)
 ..S RCMSG=+$$SELECT^RCDPETTU(RCTYPE) Q:'(RCMSG>0)
"RTN","RCDPETTE",221,0)
 ..S RCSEL(RCMSG)=""
"RTN","RCDPETTE",222,0)
 ..K DIR S DIR(0)="YA",DIR("A")="Include reversal? "
"RTN","RCDPETTE",223,0)
 ..S DIR("B")="NO"
"RTN","RCDPETTE",224,0)
 ..D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",225,0)
 ..I Y S RCSEL("R"_RCMSG)=""  ;reversal of EEOB
"RTN","RCDPETTE",226,0)
 ;
"RTN","RCDPETTE",227,0)
 I RCIE="E" D
"RTN","RCDPETTE",228,0)
 .N D0,DA,DIC,GRP,X,Y
"RTN","RCDPETTE",229,0)
 .;Select EEOB Grouping
"RTN","RCDPETTE",230,0)
 .S DIC="^RCY(344.81,",DIC(0)="AEQ",DIC("A")="Select EEOB Grouping: ",D="C"
"RTN","RCDPETTE",231,0)
 .S DIC("S")="N RC S RC=$G(^RCY(344.81,+Y,1)) I $P(RC,U,2),$P(RC,U)=RCTYPE,+$O(^RCY(344.81,+Y,2,0))"
"RTN","RCDPETTE",232,0)
 .D IX^DIC
"RTN","RCDPETTE",233,0)
 .Q:(Y<1)
"RTN","RCDPETTE",234,0)
 .S GRP="",GRP=$$GET1^DIQ(344.81,+Y,.05)
"RTN","RCDPETTE",235,0)
 .Q:(GRP="")
"RTN","RCDPETTE",236,0)
 .;X = EEOB Grouping
"RTN","RCDPETTE",237,0)
 .M RCSEL=^RCY(344.81,"C",GRP)
"RTN","RCDPETTE",238,0)
 ;
"RTN","RCDPETTE",239,0)
 W !
"RTN","RCDPETTE",240,0)
 I '$D(RCSEL) W !,"No message selected. Exiting.",! S RCSTOP=1 Q
"RTN","RCDPETTE",241,0)
 ;
"RTN","RCDPETTE",242,0)
 N RCREV ;Reversal indicator
"RTN","RCDPETTE",243,0)
 S K="" F J=2:1 S K=$O(RCSEL(K)) Q:K=""  D
"RTN","RCDPETTE",244,0)
 .S RCREV=$S($E(K)="R":1,1:0)
"RTN","RCDPETTE",245,0)
 .;
"RTN","RCDPETTE",246,0)
 .;Get EEOB content
"RTN","RCDPETTE",247,0)
 .K RCEEOB
"RTN","RCDPETTE",248,0)
 .D:'RCREV ARRAY^RCDPETTU(K,.RCEEOB)
"RTN","RCDPETTE",249,0)
 .D:RCREV ARRAY^RCDPETTU($E(K,2,99),.RCEEOB)
"RTN","RCDPETTE",250,0)
 .I '$D(RCEEOB) Q
"RTN","RCDPETTE",251,0)
 .;
"RTN","RCDPETTE",252,0)
 .;If reversal, find record 10, reverse amount, set reversal indicator
"RTN","RCDPETTE",253,0)
 .I RCREV D
"RTN","RCDPETTE",254,0)
 ..N L,M S L=""
"RTN","RCDPETTE",255,0)
 ..F  S L=$O(RCEEOB(L)) Q:'L  D
"RTN","RCDPETTE",256,0)
 ...S M=RCEEOB(L) I +M'=10 Q
"RTN","RCDPETTE",257,0)
 ...S $P(M,"^",6)="Y"
"RTN","RCDPETTE",258,0)
 ...N NEWAMT
"RTN","RCDPETTE",259,0)
 ...S NEWAMT=$P(M,"^",11),NEWAMT="-"_$E(NEWAMT,2,99)
"RTN","RCDPETTE",260,0)
 ...S $P(M,"^",11)=NEWAMT,RCEEOB(L)=M
"RTN","RCDPETTE",261,0)
 .;
"RTN","RCDPETTE",262,0)
 .;Build body of MailMan message
"RTN","RCDPETTE",263,0)
 .M RCTEMP(J)=RCEEOB
"RTN","RCDPETTE",264,0)
 ;
"RTN","RCDPETTE",265,0)
 I '$D(RCTEMP) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTE",266,0)
 ;
"RTN","RCDPETTE",267,0)
 ;Get Payer IEN for defaults
"RTN","RCDPETTE",268,0)
 S RCPAYIEN="",RCPAYIEN=$$GET1^DIQ(344.82,DUZ,1.01,"I")
"RTN","RCDPETTE",269,0)
 ;
"RTN","RCDPETTE",270,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payer ID: "
"RTN","RCDPETTE",271,0)
 I RCPAYIEN S DIR("B")=$$GET1^DIQ(344.6,RCPAYIEN,.02)
"RTN","RCDPETTE",272,0)
 D ^DIR
"RTN","RCDPETTE",273,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",274,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",275,0)
 S RCPAYID=Y
"RTN","RCDPETTE",276,0)
 S $P(RCTEMP(1,2),"^",7)=RCPAYID
"RTN","RCDPETTE",277,0)
 ;
"RTN","RCDPETTE",278,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payer Name: "
"RTN","RCDPETTE",279,0)
 I RCPAYIEN S DIR("B")=$$GET1^DIQ(344.6,RCPAYIEN,.01)
"RTN","RCDPETTE",280,0)
 D ^DIR
"RTN","RCDPETTE",281,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",282,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",283,0)
 S RCPAYNM=Y
"RTN","RCDPETTE",284,0)
 S $P(RCTEMP(1,2),"^",6)=RCPAYNM
"RTN","RCDPETTE",285,0)
 ;
"RTN","RCDPETTE",286,0)
 ;Payment Method Code, user can override with an invalid value
"RTN","RCDPETTE",287,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payment Method Code: "
"RTN","RCDPETTE",288,0)
 S DIR("B")=$$GET1^DIQ(344.82,DUZ,1.02)  ;default comes from user preferences
"RTN","RCDPETTE",289,0)
 D ^DIR
"RTN","RCDPETTE",290,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",291,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",292,0)
 S $P(RCTEMP(1,2),"^",17)=Y
"RTN","RCDPETTE",293,0)
 ;
"RTN","RCDPETTE",294,0)
 ;Trace Number
"RTN","RCDPETTE",295,0)
 S RCTRACE=+$H_$P($H,",",2)
"RTN","RCDPETTE",296,0)
 S $P(RCTEMP(1,2),"^",8)=RCTRACE
"RTN","RCDPETTE",297,0)
 ;
"RTN","RCDPETTE",298,0)
 ;MRA flag = No
"RTN","RCDPETTE",299,0)
 S $P(RCTEMP(1,2),"^",5)="N"
"RTN","RCDPETTE",300,0)
 ;
"RTN","RCDPETTE",301,0)
 ;Control Number
"RTN","RCDPETTE",302,0)
 S $P(RCTEMP(1,2),"^",13)=+$H_$P($H,",",2)
"RTN","RCDPETTE",303,0)
 ;
"RTN","RCDPETTE",304,0)
 ;Sequence Number
"RTN","RCDPETTE",305,0)
 S $P(RCTEMP(1,2),"^",14)="01"
"RTN","RCDPETTE",306,0)
 ;
"RTN","RCDPETTE",307,0)
 ;Last Sequence Number = "Y"
"RTN","RCDPETTE",308,0)
 S $P(RCTEMP(1,2),"^",15)="Y"
"RTN","RCDPETTE",309,0)
 ;
"RTN","RCDPETTE",310,0)
 ;HIPAA Version
"RTN","RCDPETTE",311,0)
 S $P(RCTEMP(1,2),"^",16)="005010"
"RTN","RCDPETTE",312,0)
 ;
"RTN","RCDPETTE",313,0)
 ;File Date, set to today's date
"RTN","RCDPETTE",314,0)
 S $P(RCTEMP(1,2),"^",3)=$$Y4MD^RCDPETTU
"RTN","RCDPETTE",315,0)
 ;
"RTN","RCDPETTE",316,0)
 ;Date Claim Paid, set to today's date
"RTN","RCDPETTE",317,0)
 S $P(RCTEMP(1,2),"^",9)=$$Y4MD^RCDPETTU
"RTN","RCDPETTE",318,0)
 ;
"RTN","RCDPETTE",319,0)
 S RCAMT=0  ;Initialize total amount of ERA
"RTN","RCDPETTE",320,0)
 ;
"RTN","RCDPETTE",321,0)
 ;ERA level adjustments (02, 03 records)
"RTN","RCDPETTE",322,0)
 K DIR S DIR(0)="YA",DIR("A")="Include ERA level adjustments? "
"RTN","RCDPETTE",323,0)
 S DIR("B")="NO"
"RTN","RCDPETTE",324,0)
 D ^DIR
"RTN","RCDPETTE",325,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",326,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",327,0)
 I Y D
"RTN","RCDPETTE",328,0)
 .N RCNUM,RC02,RC03,RCADJ,NEG S NEG=0
"RTN","RCDPETTE",329,0)
 .F J=1:1 D  Q:Y=""
"RTN","RCDPETTE",330,0)
 ..N DIR S DIR(0)="FOA",DIR("A")="  Amount for adjustment #"_J_": "
"RTN","RCDPETTE",331,0)
 ..D ^DIR I $D(DTOUT)!$D(DUOUT) S Y=""
"RTN","RCDPETTE",332,0)
 ..I Y="" Q
"RTN","RCDPETTE",333,0)
 ..S RCADJ=$$LZ^RCDPETTU(Y,14)
"RTN","RCDPETTE",334,0)
 ..;Randomly pick an adjustment line to modify
"RTN","RCDPETTE",335,0)
 ..S RCNUM=$R(5)+1,RC02=$T(ERAADJ02+RCNUM),RC03=$T(ERAADJ03+RCNUM),RC02=$P(RC02,";;",2),RC03=$P(RC03,";;",2)
"RTN","RCDPETTE",336,0)
 ..S $P(RC02,"^",4)=RCADJ,RCTEMP(1,(J*2+1))=RC02,RCTEMP(1,(J*2+2))=RC03
"RTN","RCDPETTE",337,0)
 ..S RCAMT=RCAMT-RCADJ  ;add adjustment to total amount of ERA
"RTN","RCDPETTE",338,0)
 ;
"RTN","RCDPETTE",339,0)
 ;Put array into RCDATA and calculate total
"RTN","RCDPETTE",340,0)
 S RCCNT=0  ;counter
"RTN","RCDPETTE",341,0)
 F J=1:1 Q:'$D(RCTEMP(J))  D
"RTN","RCDPETTE",342,0)
 .F K=1:1 Q:'$D(RCTEMP(J,K))  D
"RTN","RCDPETTE",343,0)
 ..S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)=RCTEMP(J,K)
"RTN","RCDPETTE",344,0)
 ..I +RCTEMP(J,K)=10 S RCAMT=RCAMT+$P(RCTEMP(J,K),"^",11)  ;add amount paid to total amount of ERA
"RTN","RCDPETTE",345,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="99^$"
"RTN","RCDPETTE",346,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="NNNN"
"RTN","RCDPETTE",347,0)
 ;
"RTN","RCDPETTE",348,0)
 ;Total ERA Amount
"RTN","RCDPETTE",349,0)
 K DIR S DIR(0)="FOA",DIR("A")="Total ERA Amount: "
"RTN","RCDPETTE",350,0)
 S DIR("B")=RCAMT
"RTN","RCDPETTE",351,0)
 D ^DIR
"RTN","RCDPETTE",352,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",353,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",354,0)
 S RCAMT=$$LZ^RCDPETTU(Y,13)
"RTN","RCDPETTE",355,0)
 S $P(RCDATA("ERA",2),"^",10)=RCAMT
"RTN","RCDPETTE",356,0)
 ;
"RTN","RCDPETTE",357,0)
 ;Trace number
"RTN","RCDPETTE",358,0)
 K DIR S DIR(0)="FOA",DIR("A")="Trace Number: "
"RTN","RCDPETTE",359,0)
 S DIR("B")=RCTRACE
"RTN","RCDPETTE",360,0)
 D ^DIR
"RTN","RCDPETTE",361,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTE",362,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",363,0)
 S RCTRACE=Y
"RTN","RCDPETTE",364,0)
 S $P(RCDATA("ERA",2),"^",8)=RCTRACE
"RTN","RCDPETTE",365,0)
 ;
"RTN","RCDPETTE",366,0)
 ;Display content of ERA?
"RTN","RCDPETTE",367,0)
 K DIR S DIR(0)="YA",DIR("A")="Display content of ERA? "
"RTN","RCDPETTE",368,0)
 S DIR("B")="NO" D
"RTN","RCDPETTE",369,0)
 .D ^DIR Q:'Y
"RTN","RCDPETTE",370,0)
 .S K="RCDATA" F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTE",371,0)
 .W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTE",372,0)
 ;
"RTN","RCDPETTE",373,0)
 ;Build matching EFT
"RTN","RCDPETTE",374,0)
 N RCDATE,RCSUB,X,X1,X2
"RTN","RCDPETTE",375,0)
 S RCSUB="RCDPETT "_RCTRACE
"RTN","RCDPETTE",376,0)
 ;purge date is 30 days from today
"RTN","RCDPETTE",377,0)
 S ^XTMP(RCSUB,0)=$$HTE^XLFDT($H+30)_"^"_DT_"^RCDPETT DATA"
"RTN","RCDPETTE",378,0)
 S RCDATE=$$Y4MD^RCDPETTU
"RTN","RCDPETTE",379,0)
 S RCEFT="01^"_RCTRACE_"^"_RCDATE_"^"_RCAMT_"^"_RCPAYNM_"^"_RCPAYID_"^^"
"RTN","RCDPETTE",380,0)
 S ^XTMP(RCSUB,"EFT",1)=RCEFT
"RTN","RCDPETTE",381,0)
 ;
"RTN","RCDPETTE",382,0)
 Q
"RTN","RCDPETTE",383,0)
 ;
"RTN","RCDPETTE",384,0)
GETDATAE(RCDATA,RCEFT)  ;Get data to send into VistA for EFT
"RTN","RCDPETTE",385,0)
 ;
"RTN","RCDPETTE",386,0)
 N K,RCAMT,RCDEPN
"RTN","RCDPETTE",387,0)
 S RCDATA("ERA",1)=$P($T(EFTHDR+1^RCDPETTF),";;",2)
"RTN","RCDPETTE",388,0)
 S RCDATA("ERA",2)=$P($T(EFTHDR+2^RCDPETTF),";;",2)
"RTN","RCDPETTE",389,0)
 S RCDATA("ERA",3)=RCEFT
"RTN","RCDPETTE",390,0)
 S RCDATA("ERA",4)="99^$"
"RTN","RCDPETTE",391,0)
 S RCDATA("ERA",5)="NNNN"
"RTN","RCDPETTE",392,0)
 S RCAMT=$P(RCEFT,"^",4)
"RTN","RCDPETTE",393,0)
 ;
"RTN","RCDPETTE",394,0)
 ;Total EFT Amount
"RTN","RCDPETTE",395,0)
 K DIR S DIR(0)="FOA",DIR("A")="Total EFT Amount: "
"RTN","RCDPETTE",396,0)
 S DIR("B")=RCAMT
"RTN","RCDPETTE",397,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",398,0)
 S Y=$$LZ^RCDPETTU(Y,14)
"RTN","RCDPETTE",399,0)
 S $P(RCDATA("ERA",2),"^",8)=Y
"RTN","RCDPETTE",400,0)
 ;
"RTN","RCDPETTE",401,0)
 ;Deposit Number
"RTN","RCDPETTE",402,0)
 ;if $H = 63229,53304 then RCDEPN = TT2295330
"RTN","RCDPETTE",403,0)
 S RCDEPN="TT"_$E(+$H,3,5)_$E($P($H,",",2),1,4)
"RTN","RCDPETTE",404,0)
 K DIR S DIR(0)="FOA",DIR("A")="Deposit Number: "
"RTN","RCDPETTE",405,0)
 S DIR("B")=RCDEPN
"RTN","RCDPETTE",406,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",407,0)
 I Y'?1"TT".E S Y="TT"_Y W !,?5,Y
"RTN","RCDPETTE",408,0)
 S $P(RCDATA("ERA",2),"^",6)=Y
"RTN","RCDPETTE",409,0)
 ;
"RTN","RCDPETTE",410,0)
 ;Deposit Date
"RTN","RCDPETTE",411,0)
 S $P(RCDATA("ERA",2),"^",7)=$P(RCDATA("ERA",3),"^",3)
"RTN","RCDPETTE",412,0)
 ;
"RTN","RCDPETTE",413,0)
 ;Trace number
"RTN","RCDPETTE",414,0)
 K DIR S DIR(0)="FOA",DIR("A")="Trace Number: "
"RTN","RCDPETTE",415,0)
 S DIR("B")=$P(RCDATA("ERA",3),"^",2)
"RTN","RCDPETTE",416,0)
 D ^DIR
"RTN","RCDPETTE",417,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTE",418,0)
 S $P(RCDATA("ERA",3),"^",2)=Y
"RTN","RCDPETTE",419,0)
 ;
"RTN","RCDPETTE",420,0)
 ;Display content of EFT?
"RTN","RCDPETTE",421,0)
 K DIR S DIR(0)="YA",DIR("A")="Display content of EFT? "
"RTN","RCDPETTE",422,0)
 S DIR("B")="NO"
"RTN","RCDPETTE",423,0)
 D ^DIR Q:'Y
"RTN","RCDPETTE",424,0)
 S K="RCDATA" F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTE",425,0)
 W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTE",426,0)
 Q
"RTN","RCDPETTE",427,0)
 ;
"RTN","RCDPETTE",428,0)
VWMSG ; view ERA message
"RTN","RCDPETTE",429,0)
 ;
"RTN","RCDPETTE",430,0)
 W !,"View ERA Message."
"RTN","RCDPETTE",431,0)
 D DT^DICRW
"RTN","RCDPETTE",432,0)
 ;
"RTN","RCDPETTE",433,0)
 N DIR,RCMSG,RCEEOB,RCEXIT,RCPG,RCSTOP,Z
"RTN","RCDPETTE",434,0)
 ;Select EEOB to view
"RTN","RCDPETTE",435,0)
 S RCMSG=$$SELECT^RCDPETTU("ERA")
"RTN","RCDPETTE",436,0)
 I '(+RCMSG>0) W !,"No EDI message selected.  Exiting View.",! Q
"RTN","RCDPETTE",437,0)
 ;
"RTN","RCDPETTE",438,0)
 ;Get EEOB content
"RTN","RCDPETTE",439,0)
 K RCEEOB
"RTN","RCDPETTE",440,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTE",441,0)
 I '$D(RCEEOB) W !,"No lines to display.  Exiting View.",! Q
"RTN","RCDPETTE",442,0)
 ;
"RTN","RCDPETTE",443,0)
 ;Display Raw Data
"RTN","RCDPETTE",444,0)
 W !!
"RTN","RCDPETTE",445,0)
 S K="RCEEOB",RCEXIT=0
"RTN","RCDPETTE",446,0)
 F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTE",447,0)
 W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTE",448,0)
 S RCEXIT=$D(DTOUT)+$D(DUOUT)
"RTN","RCDPETTE",449,0)
 Q:RCEXIT  ; timeout or '^'
"RTN","RCDPETTE",450,0)
 ;
"RTN","RCDPETTE",451,0)
 ;Display Formatted Output with Labels (reused code from PRT^RCDPEX3)
"RTN","RCDPETTE",452,0)
 K ^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMRAW")
"RTN","RCDPETTE",453,0)
 D DISP^RCDPESR0("^RCY(344.81,"_(+RCMSG)_",2)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75)
"RTN","RCDPETTE",454,0)
 S RCPG=0,Z=0,RCEXIT=0
"RTN","RCDPETTE",455,0)
 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z!RCEXIT  D
"RTN","RCDPETTE",456,0)
 . W !,$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPETTE",457,0)
 . S RCPG=RCPG+1
"RTN","RCDPETTE",458,0)
 . I RCPG>20 W ! K DIR S DIR(0)="E" D ^DIR S RCPG=0,RCEXIT=$D(DTOUT)+$D(DUOUT)
"RTN","RCDPETTE",459,0)
 ;
"RTN","RCDPETTE",460,0)
 Q
"RTN","RCDPETTE",461,0)
 ;
"RTN","RCDPETTE",462,0)
ERA ;list of ERA records that contain user editable fields
"RTN","RCDPETTE",463,0)
 ;;05
"RTN","RCDPETTE",464,0)
 ;;10
"RTN","RCDPETTE",465,0)
 ;;15
"RTN","RCDPETTE",466,0)
 ;;20
"RTN","RCDPETTE",467,0)
 ;;40
"RTN","RCDPETTE",468,0)
 ;;45
"RTN","RCDPETTE",469,0)
 ;
"RTN","RCDPETTE",470,0)
ERA05 ;Data map for ERA 05 record
"RTN","RCDPETTE",471,0)
 ;;Patient's Last Name;3;60;ANP;RCLASTNM;
"RTN","RCDPETTE",472,0)
 ;;Patient ID;6;20;AN;RCPATID;
"RTN","RCDPETTE",473,0)
 ;;Statement Start Date (YYYYMMDD);9;8;N;DOSF;
"RTN","RCDPETTE",474,0)
 ;
"RTN","RCDPETTE",475,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",476,0)
 ;
"RTN","RCDPETTE",477,0)
ERA10 ;Data map for ERA 10 record
"RTN","RCDPETTE",478,0)
 ;;Claim Denied (Y/N);4;1;A
"RTN","RCDPETTE",479,0)
 ;;Claim Reversal (Y/N);6;1;A
"RTN","RCDPETTE",480,0)
 ;;Original Amount/Submitted Charge ($1.00 = 100);10;15;N;RCOA;L
"RTN","RCDPETTE",481,0)
 ;;Amount Paid ($1.00 = 100);11;15;N;;L;1
"RTN","RCDPETTE",482,0)
 ;
"RTN","RCDPETTE",483,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",484,0)
 ;
"RTN","RCDPETTE",485,0)
ERA15 ;Data map for ERA 15 record
"RTN","RCDPETTE",486,0)
 ;;Covered Amount ($1.00 = 100);3;15;N;;L
"RTN","RCDPETTE",487,0)
 ;;Interest Amount ($1.00 = 100);6;15;N;;L
"RTN","RCDPETTE",488,0)
 ;
"RTN","RCDPETTE",489,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",490,0)
 ;
"RTN","RCDPETTE",491,0)
ERA20 ;Data map for ERA 20 record
"RTN","RCDPETTE",492,0)
 ;;Adjustment Amount (Claim Level Adjustment $1.00 = 100);5;15;N;;L
"RTN","RCDPETTE",493,0)
 ;
"RTN","RCDPETTE",494,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",495,0)
 ;
"RTN","RCDPETTE",496,0)
ERA40 ;Data map for ERA 40 record
"RTN","RCDPETTE",497,0)
 ;;Original Charge (Submitted Amt $1.00 = 100);15;10;N;RCOA;L
"RTN","RCDPETTE",498,0)
 ;;Amount Paid ($1.00 = 100);17;10;N;AMTPD;L
"RTN","RCDPETTE",499,0)
 ;;Service Date From (YYYYMMDD);19;8;N;DOSF;
"RTN","RCDPETTE",500,0)
 ;;Service Date To (YYYYMMDD);20;8;N;DOST;
"RTN","RCDPETTE",501,0)
 ;
"RTN","RCDPETTE",502,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",503,0)
 ;
"RTN","RCDPETTE",504,0)
ERA45 ;Data map for ERA 45 record
"RTN","RCDPETTE",505,0)
 ;;Adjustment Amount (Service Line Adjustment $1.00 = 100);5;15;N;;L
"RTN","RCDPETTE",506,0)
 ;
"RTN","RCDPETTE",507,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero; Quick edit override
"RTN","RCDPETTE",508,0)
 ;
"RTN","RCDPETTE",509,0)
ERABILL ;Data map to determine where the bill number is stored
"RTN","RCDPETTE",510,0)
 ;;5;2
"RTN","RCDPETTE",511,0)
 ;;6;2
"RTN","RCDPETTE",512,0)
 ;;10;2
"RTN","RCDPETTE",513,0)
 ;;11;2
"RTN","RCDPETTE",514,0)
 ;;12;2
"RTN","RCDPETTE",515,0)
 ;;13;2
"RTN","RCDPETTE",516,0)
 ;;15;2
"RTN","RCDPETTE",517,0)
 ;;17;2
"RTN","RCDPETTE",518,0)
 ;;20;2
"RTN","RCDPETTE",519,0)
 ;;40;2
"RTN","RCDPETTE",520,0)
 ;;41;2
"RTN","RCDPETTE",521,0)
 ;;42;2
"RTN","RCDPETTE",522,0)
 ;;45;2
"RTN","RCDPETTE",523,0)
 ;;46;2
"RTN","RCDPETTE",524,0)
 ;
"RTN","RCDPETTE",525,0)
 ;Record;position
"RTN","RCDPETTE",526,0)
 ;
"RTN","RCDPETTE",527,0)
ERAHDR ;Template Header for ERA
"RTN","RCDPETTE",528,0)
 ;;RACUBOTH RUCHMLB0012 2851531-UUUU--RUCHAAR..
"RTN","RCDPETTE",529,0)
 ;;835ERA^X^20100922^1632^Y^FEDERAL EMPLOYEES HEALTH BENEFIT A COVENTRY HEALTH CARE PLAN^1382242132^20101012031^20100920^0000000040368^830168494^^0007344735^01^Y^004010^CHK^1164471991
"RTN","RCDPETTE",530,0)
 ;
"RTN","RCDPETTE",531,0)
ERAADJ02 ;Template 02 Adjustment Record for ERA
"RTN","RCDPETTE",532,0)
 ;;02^50^LATE CHARGE 00112233445566779900ABCDEFGHIJKLMNOPQR^00000000000110
"RTN","RCDPETTE",533,0)
 ;;02^51^INTEREST PENALTY CHARGE 0011223344556677889900ABCD^00000000000120
"RTN","RCDPETTE",534,0)
 ;;02^72^AUTHORIZED RETURN 0011223344556677889900ABCDEFGHIJ^-0000000000130
"RTN","RCDPETTE",535,0)
 ;;02^90^EARLY PAYMENT ALLOWANCE 0011223344556677889900AABB^00000000000140
"RTN","RCDPETTE",536,0)
 ;;02^AH^ORIGINATION FEE 0011223344556677889900AABBCCDDEEFF^00000000000150
"RTN","RCDPETTE",537,0)
 ;
"RTN","RCDPETTE",538,0)
ERAADJ03 ;Template 03 Adjustment Record for ERA
"RTN","RCDPETTE",539,0)
 ;;03^These are non-covered services because this is not deemed a `medical necessity' by the payer.
"RTN","RCDPETTE",540,0)
 ;;03^These are non-covered services because this is a pre-existing condition
"RTN","RCDPETTE",541,0)
 ;;03^MESSAGE TEXT FOR AUTHORIZED RETURN
"RTN","RCDPETTE",542,0)
 ;;03^Ingredient cost adjustment.
"RTN","RCDPETTE",543,0)
 ;;03^MESSAGE TEXT UNAVAILABLE
"RTN","RCDPETTE",544,0)
 ;
"RTN","RCDPETTF")
0^67^B80402649
"RTN","RCDPETTF",1,0)
RCDPETTF ; ePayments/CNF, hrubovcak - EDI Testing Tool EFT actions ;Aug 26, 2014@17:00:17
"RTN","RCDPETTF",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTF",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTF",4,0)
 ;
"RTN","RCDPETTF",5,0)
 ; called by RCDPETT
"RTN","RCDPETTF",6,0)
 Q
"RTN","RCDPETTF",7,0)
 ;
"RTN","RCDPETTF",8,0)
COPY ; Copy EFT message
"RTN","RCDPETTF",9,0)
 ;
"RTN","RCDPETTF",10,0)
 D NTRY^RCDPETTU("Copy EFT Object")
"RTN","RCDPETTF",11,0)
 D COPY^RCDPETTU("EFT")
"RTN","RCDPETTF",12,0)
 ;
"RTN","RCDPETTF",13,0)
 Q
"RTN","RCDPETTF",14,0)
 ;
"RTN","RCDPETTF",15,0)
DEL ; delete EFT type object
"RTN","RCDPETTF",16,0)
 ;
"RTN","RCDPETTF",17,0)
 D NTRY^RCDPETTU("Delete EFT Object")
"RTN","RCDPETTF",18,0)
 D DEL^RCDPETTU("EFT")
"RTN","RCDPETTF",19,0)
 ;
"RTN","RCDPETTF",20,0)
 Q
"RTN","RCDPETTF",21,0)
 ;
"RTN","RCDPETTF",22,0)
EDMSG ; edit EFT message
"RTN","RCDPETTF",23,0)
 ;
"RTN","RCDPETTF",24,0)
 N RCMSGSEL,X
"RTN","RCDPETTF",25,0)
 S X="Edit EFT Message"
"RTN","RCDPETTF",26,0)
 D NTRY^RCDPETTU(X) W !,X_" "_$$NOW^RCDPETTU
"RTN","RCDPETTF",27,0)
 ;
"RTN","RCDPETTF",28,0)
 ; Select EFT message to edit
"RTN","RCDPETTF",29,0)
 S RCMSGSEL=0 F  D  Q:'(RCMSGSEL>0)
"RTN","RCDPETTF",30,0)
 .W ! S RCMSGSEL=$$SELECT^RCDPETTU("EFT")  ; only EFT entries
"RTN","RCDPETTF",31,0)
 .I '(RCMSGSEL>0) W !!,"No message selected. Exiting.",! Q
"RTN","RCDPETTF",32,0)
 .D EDWRK(RCMSGSEL)
"RTN","RCDPETTF",33,0)
 ;
"RTN","RCDPETTF",34,0)
 Q
"RTN","RCDPETTF",35,0)
 ;
"RTN","RCDPETTF",36,0)
EDWRK(RCMSG) ; RCMSG = "ien #344.81 ^ .01 field"
"RTN","RCDPETTF",37,0)
 ;
"RTN","RCDPETTF",38,0)
 Q:'($G(RCMSG)>0)  ; required
"RTN","RCDPETTF",39,0)
 D LOG^RCDPETTU("edit EFT "_RCMSG)
"RTN","RCDPETTF",40,0)
 ;
"RTN","RCDPETTF",41,0)
 N DIC,DIR,DR,IEN,J,K,L,RCEDIT,RCEEOB,RCBILL,RCLT,RCLASTNM,RCNAME,RCPATID,RCPAYIEN,RCPAYNAME,RCPAYID,RCPCE,RCREC,RCRECB,RCTEXT,RCV,RCVAR,TAG,X,Y
"RTN","RCDPETTF",42,0)
 ;
"RTN","RCDPETTF",43,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTF",44,0)
 I '$D(RCEEOB) W !,"No lines to edit. Exiting.",! Q
"RTN","RCDPETTF",45,0)
 ;
"RTN","RCDPETTF",46,0)
 ;Build a list of records that contain editable data
"RTN","RCDPETTF",47,0)
 ; example: RCREC="/05/10/15/20/40/45/"
"RTN","RCDPETTF",48,0)
 S RCREC="/" F J=1:1 S RCTEXT=$T(EFT+J) Q:$E(RCTEXT,1,3)'=" ;;"  S RCREC=RCREC_$P(RCTEXT,";",3)_"/"
"RTN","RCDPETTF",49,0)
 ;
"RTN","RCDPETTF",50,0)
 D EDITOBJ^RCDPETTU(+RCMSG)
"RTN","RCDPETTF",51,0)
 ;
"RTN","RCDPETTF",52,0)
 ;Default for Payer Name and ID
"RTN","RCDPETTF",53,0)
 S RCPAYIEN="",RCPAYNAME="",RCPAYID=""
"RTN","RCDPETTF",54,0)
 S RCPAYIEN=$$GET1^DIQ(344.82,DUZ,1.01,"I")
"RTN","RCDPETTF",55,0)
 S RCPAYID=$$GET1^DIQ(344.6,RCPAYIEN,.02)
"RTN","RCDPETTF",56,0)
 S RCNAME=$$GET1^DIQ(344.6,RCPAYIEN,.01)
"RTN","RCDPETTF",57,0)
 ;
"RTN","RCDPETTF",58,0)
 ;Loop through the EFT to modify data
"RTN","RCDPETTF",59,0)
 S RCEDIT=1
"RTN","RCDPETTF",60,0)
 F J=1:1 Q:'$D(RCEEOB(J))  S RCEEOB=RCEEOB(J) D
"RTN","RCDPETTF",61,0)
 .S RCLT=$P(RCEEOB,"^",1)  ;Line type field contains record number
"RTN","RCDPETTF",62,0)
 .;
"RTN","RCDPETTF",63,0)
 .;Quit if no user editable data
"RTN","RCDPETTF",64,0)
 .I RCREC'[("/"_RCLT_"/") S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTF",65,0)
 .;
"RTN","RCDPETTF",66,0)
 .;Quit if user has stopped editing by entering "^"
"RTN","RCDPETTF",67,0)
 .I 'RCEDIT S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTF",68,0)
 .
"RTN","RCDPETTF",69,0)
 .W !!,RCEEOB,!
"RTN","RCDPETTF",70,0)
 .
"RTN","RCDPETTF",71,0)
 .;Loop through editable fields
"RTN","RCDPETTF",72,0)
 .S TAG="EFT"_RCLT  ;Example:  TAG=EFT01 (for record 01)
"RTN","RCDPETTF",73,0)
 .F K=1:1 S RCTEXT=$T(@TAG+K) Q:$E(RCTEXT,1,3)'=" ;;"  D  I 'RCEDIT Q
"RTN","RCDPETTF",74,0)
 ..;
"RTN","RCDPETTF",75,0)
 ..;Data in RCTEXT, Corresponding variables are in brackets
"RTN","RCDPETTF",76,0)
 ..;[RC1]Field Name; [RC2]piece; [RC3]max length
"RTN","RCDPETTF",77,0)
 ..; [RC4](A)lpha(N)umeric(P)unctuation; [RC5]Variable name; [RC6]Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTF",78,0)
 ..;
"RTN","RCDPETTF",79,0)
 ..N RC1,RC2,RC3,RC4,RC5,RC6
"RTN","RCDPETTF",80,0)
 ..F L=1:1:6 S @("RC"_L)=$P(RCTEXT,";",(L+2))
"RTN","RCDPETTF",81,0)
 ..
"RTN","RCDPETTF",82,0)
 ..N DIR S DIR(0)="FOA",DIR("A")=RC1_": "
"RTN","RCDPETTF",83,0)
 ..S RCVAR="RCV",RCV="" I RC5'="" S RCVAR=RC5 ;Variable name
"RTN","RCDPETTF",84,0)
 ..I @RCVAR="" S @RCVAR=$P(RCEEOB,"^",RC2) ;Default data either comes from the bill or the EEOB
"RTN","RCDPETTF",85,0)
 ..S DIR("B")=@RCVAR
"RTN","RCDPETTF",86,0)
 ..D ^DIR
"RTN","RCDPETTF",87,0)
 ..I Y="^" S RCEDIT=0,RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTF",88,0)
 ..Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTF",89,0)
 ..;
"RTN","RCDPETTF",90,0)
 ..;Pad with leading or trailing zeros, if necessary
"RTN","RCDPETTF",91,0)
 ..I RC6="L" S Y=$$LZ^RCDPETTU(Y,RC3)
"RTN","RCDPETTF",92,0)
 ..S $P(RCEEOB,"^",RC2)=Y
"RTN","RCDPETTF",93,0)
 ..S RCEEOB(J)=RCEEOB
"RTN","RCDPETTF",94,0)
 ;
"RTN","RCDPETTF",95,0)
 D WP^DIE(344.81,+RCMSG_",",2,"","RCEEOB")
"RTN","RCDPETTF",96,0)
 ;
"RTN","RCDPETTF",97,0)
 Q
"RTN","RCDPETTF",98,0)
 ;
"RTN","RCDPETTF",99,0)
SNDEFT ; send EFT message to VistA
"RTN","RCDPETTF",100,0)
 W !,"Send EFT message to VistA.",!
"RTN","RCDPETTF",101,0)
 ; RCTO = recipients
"RTN","RCDPETTF",102,0)
 ; RCSUBJ = subject
"RTN","RCDPETTF",103,0)
 ; RCXMZR = message number returned (XMZ value)
"RTN","RCDPETTF",104,0)
 N C,J,RCTO,RCSUBJ,RCXMZR,X
"RTN","RCDPETTF",105,0)
 K RCDATA("ERA")
"RTN","RCDPETTF",106,0)
 D GETDATA(.RCDATA)
"RTN","RCDPETTF",107,0)
 ;
"RTN","RCDPETTF",108,0)
 ; nothing selected, exit
"RTN","RCDPETTF",109,0)
 Q:'$O(RCDATA("ERA",0))
"RTN","RCDPETTF",110,0)
 ;
"RTN","RCDPETTF",111,0)
 K ^TMP($J,"XMSGTXT")
"RTN","RCDPETTF",112,0)
 ;
"RTN","RCDPETTF",113,0)
 ; put file text into FileMan W-P format
"RTN","RCDPETTF",114,0)
 S J=0,C=0 F  S J=$O(RCDATA("ERA",J)) Q:'J  S X=$G(RCDATA("ERA",J)) D:X]""
"RTN","RCDPETTF",115,0)
 .S C=C+1,^TMP($J,"XMSGTXT",C,0)=X
"RTN","RCDPETTF",116,0)
 .I $L(X)>245 W !,"A line longer than 245 characters was found."
"RTN","RCDPETTF",117,0)
 ;
"RTN","RCDPETTF",118,0)
 N DIR S DIR(0)="YOA",DIR("A")="Send MailMan message? ",DIR("B")="YES"
"RTN","RCDPETTF",119,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTF",120,0)
 I 'Y W !,"No message sent.",! Q
"RTN","RCDPETTF",121,0)
 ;
"RTN","RCDPETTF",122,0)
 ; send via MailMan 
"RTN","RCDPETTF",123,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPETTF",124,0)
 S RCSUBJ="EDI Test "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCDPETTF",125,0)
 S RCTO(.5)="",RCTO(DUZ)=""
"RTN","RCDPETTF",126,0)
 S RCTO("G.MLB")=""  ; 3rd party Lockbox Mail Group
"RTN","RCDPETTF",127,0)
 ;
"RTN","RCDPETTF",128,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,$NA(^TMP($J,"XMSGTXT")),.RCTO,,.RCXMZR)
"RTN","RCDPETTF",129,0)
 ; log MailMan error text
"RTN","RCDPETTF",130,0)
 D:$D(^TMP("XMERR",$J)) LOGARY^RCDPETTU($NA(^TMP("XMERR",$J)))
"RTN","RCDPETTF",131,0)
 ;check for success
"RTN","RCDPETTF",132,0)
 I $G(RCXMZR) S X="MailMan Message #"_RCXMZR_" sent." W !,X,! D LOG^RCDPETTU(X)
"RTN","RCDPETTF",133,0)
 ;
"RTN","RCDPETTF",134,0)
 Q
"RTN","RCDPETTF",135,0)
 ;
"RTN","RCDPETTF",136,0)
GETDATA(RCDATA) ;Get data to send into VistA
"RTN","RCDPETTF",137,0)
 ; RCDATA = Array of object text for the body of the EFT
"RTN","RCDPETTF",138,0)
 ;
"RTN","RCDPETTF",139,0)
 N DIR,J,K,RCAMT,RCCNT,RCDEPN,RCEEOB,RCIE,RCIEN,RCMSG,RCPAYIEN,RCSEL,RCTEMP,RCTRACE,RCTYPE,Y
"RTN","RCDPETTF",140,0)
 ;
"RTN","RCDPETTF",141,0)
 K RCTEMP
"RTN","RCDPETTF",142,0)
 S RCTYPE="EFT"
"RTN","RCDPETTF",143,0)
 ;
"RTN","RCDPETTF",144,0)
 ;Get template for header
"RTN","RCDPETTF",145,0)
 S RCTEMP(1,1)=$P($T(EFTHDR+1),";;",2)
"RTN","RCDPETTF",146,0)
 S RCTEMP(1,2)=$P($T(EFTHDR+2),";;",2)
"RTN","RCDPETTF",147,0)
 ;
"RTN","RCDPETTF",148,0)
 S DIR(0)="SB^I:Individual Objects;T:Trace Numbers;E:EFT Grouping"
"RTN","RCDPETTF",149,0)
 S DIR("A")="Select (I)ndividual Objects, (T)race Numbers or (E)FT Grouping"
"RTN","RCDPETTF",150,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTF",151,0)
 S RCIE=Y
"RTN","RCDPETTF",152,0)
 ;
"RTN","RCDPETTF",153,0)
 I RCIE="I" D  I '$D(RCSEL) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTF",154,0)
 .F  D  Q:'(RCMSG>0)
"RTN","RCDPETTF",155,0)
 ..;Select Object to send
"RTN","RCDPETTF",156,0)
 ..S RCMSG=+$$SELECT^RCDPETTU(RCTYPE)
"RTN","RCDPETTF",157,0)
 ..Q:'(RCMSG>0)
"RTN","RCDPETTF",158,0)
 ..S RCSEL(+RCMSG)=""
"RTN","RCDPETTF",159,0)
 ;
"RTN","RCDPETTF",160,0)
 I RCIE="E" D  I '$D(RCSEL) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTF",161,0)
 .N D0,DA,DIC,X,Y
"RTN","RCDPETTF",162,0)
 .;Select EFT Grouping
"RTN","RCDPETTF",163,0)
 .S DIC="^RCY(344.81,",DIC(0)="AEQ",DIC("A")="Select EFT Grouping: ",D="C"
"RTN","RCDPETTF",164,0)
 .S DIC("S")="N RC S RC=$G(^RCY(344.81,+Y,1)) I $P(RC,U,2),$P(RC,U)=RCTYPE,+$O(^RCY(344.81,+Y,2,0))"
"RTN","RCDPETTF",165,0)
 .D IX^DIC
"RTN","RCDPETTF",166,0)
 .Q:(Y<1)
"RTN","RCDPETTF",167,0)
 .;X = EEOB Grouping
"RTN","RCDPETTF",168,0)
 .M RCSEL=^RCY(344.81,"C",X)
"RTN","RCDPETTF",169,0)
 ;
"RTN","RCDPETTF",170,0)
 I RCIE="T" S K=1 D  I '$D(RCTEMP) W !,"No trace number selected. Exiting.",! Q
"RTN","RCDPETTF",171,0)
 .F  D  I (RCTRACE="")!(RCTRACE=-1) Q
"RTN","RCDPETTF",172,0)
 ..;Select Trace Numbers
"RTN","RCDPETTF",173,0)
 ..S DIR(0)="FOA",DIR("A")="Trace #: "
"RTN","RCDPETTF",174,0)
 ..D ^DIR S RCTRACE=Y
"RTN","RCDPETTF",175,0)
 ..I (RCTRACE="")!(RCTRACE=-1) Q
"RTN","RCDPETTF",176,0)
 ..;Find the EFT detail line created when the ERA was constructed and sent into VistA
"RTN","RCDPETTF",177,0)
 ..I '$D(^XTMP("RCDPETT "_RCTRACE)) W "  Invalid Trace Number" Q
"RTN","RCDPETTF",178,0)
 ..I $G(^XTMP("RCDPETT "_RCTRACE,"EFT",1))="" W "  Unable to use this Trace Number to generate EFT" Q
"RTN","RCDPETTF",179,0)
 ..S K=K+1,RCTEMP(K,1)=^XTMP("RCDPETT "_RCTRACE,"EFT",1)
"RTN","RCDPETTF",180,0)
 ;
"RTN","RCDPETTF",181,0)
 ;If objects have been selected instead of trace numbers, get the body of the object
"RTN","RCDPETTF",182,0)
 I "/I/E/"[("/"_RCIE_"/") D  I '$D(RCTEMP) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTF",183,0)
 .S K="" F J=2:1 S K=$O(RCSEL(K)) Q:K=""  D
"RTN","RCDPETTF",184,0)
 ..;Get EFT content
"RTN","RCDPETTF",185,0)
 ..K RCEEOB
"RTN","RCDPETTF",186,0)
 ..D ARRAY^RCDPETTU(K,.RCEEOB)
"RTN","RCDPETTF",187,0)
 ..I '$D(RCEEOB) Q
"RTN","RCDPETTF",188,0)
 ..;
"RTN","RCDPETTF",189,0)
 ..;Build body of MailMan message
"RTN","RCDPETTF",190,0)
 ..M RCTEMP(J)=RCEEOB
"RTN","RCDPETTF",191,0)
 ;
"RTN","RCDPETTF",192,0)
 I '$D(RCTEMP) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTF",193,0)
 ;
"RTN","RCDPETTF",194,0)
 ;ACH Trace Number in header
"RTN","RCDPETTF",195,0)
 S $P(RCTEMP(1,2),"^",5)=+$H_$P($H,",",2)
"RTN","RCDPETTF",196,0)
 ;
"RTN","RCDPETTF",197,0)
 S RCAMT=0  ;Initialize total amount of EFT
"RTN","RCDPETTF",198,0)
 ;
"RTN","RCDPETTF",199,0)
 ;Put array into RCDATA and calculate total
"RTN","RCDPETTF",200,0)
 S RCCNT=0  ;counter
"RTN","RCDPETTF",201,0)
 F J=1:1 Q:'$D(RCTEMP(J))  D
"RTN","RCDPETTF",202,0)
 .F K=1:1 Q:'$D(RCTEMP(J,K))  D
"RTN","RCDPETTF",203,0)
 ..S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)=RCTEMP(J,K)
"RTN","RCDPETTF",204,0)
 ..I +RCTEMP(J,K)=1 S RCAMT=RCAMT+$P(RCTEMP(J,K),"^",4)  ;add amount paid to total amount of ERA
"RTN","RCDPETTF",205,0)
 ;DIR("A")="Include ERA level adjustments? (Y/N): "
"RTN","RCDPETTF",206,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="99^$"
"RTN","RCDPETTF",207,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="NNNN"
"RTN","RCDPETTF",208,0)
 ;
"RTN","RCDPETTF",209,0)
 ;Deposit Number
"RTN","RCDPETTF",210,0)
 ;if $H = 63229,53304 then RCDEPN = TT2295330
"RTN","RCDPETTF",211,0)
 S RCDEPN="TT"_$E(+$H,3,5)_$E($P($H,",",2),1,4)
"RTN","RCDPETTF",212,0)
 K DIR S DIR(0)="FOA",DIR("A")="Deposit Number: "
"RTN","RCDPETTF",213,0)
 S DIR("B")=RCDEPN
"RTN","RCDPETTF",214,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTF",215,0)
 S $P(RCDATA("ERA",2),"^",6)=Y
"RTN","RCDPETTF",216,0)
 ;
"RTN","RCDPETTF",217,0)
 ;Deposit Date
"RTN","RCDPETTF",218,0)
 S $P(RCDATA("ERA",2),"^",7)=$P(RCDATA("ERA",3),"^",3)
"RTN","RCDPETTF",219,0)
 ;
"RTN","RCDPETTF",220,0)
 ;Total EFT Amount
"RTN","RCDPETTF",221,0)
 K DIR S DIR(0)="FOA",DIR("A")="Total EFT Amount: "
"RTN","RCDPETTF",222,0)
 S DIR("B")=RCAMT
"RTN","RCDPETTF",223,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTF",224,0)
 S Y=$$LZ^RCDPETTU(Y,14)
"RTN","RCDPETTF",225,0)
 S $P(RCDATA("ERA",2),"^",8)=Y
"RTN","RCDPETTF",226,0)
 ;
"RTN","RCDPETTF",227,0)
 ;Display content of EFT?
"RTN","RCDPETTF",228,0)
 K DIR S DIR(0)="YA",DIR("A")="Display content of EFT? "
"RTN","RCDPETTF",229,0)
 S DIR("B")="NO"
"RTN","RCDPETTF",230,0)
 D ^DIR Q:'Y
"RTN","RCDPETTF",231,0)
 S K="RCDATA" F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTF",232,0)
 W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTF",233,0)
 ;
"RTN","RCDPETTF",234,0)
 Q
"RTN","RCDPETTF",235,0)
 ;
"RTN","RCDPETTF",236,0)
VWMSG ; view EFT message
"RTN","RCDPETTF",237,0)
 ;
"RTN","RCDPETTF",238,0)
 W !,"View EFT Message."
"RTN","RCDPETTF",239,0)
 D DT^DICRW
"RTN","RCDPETTF",240,0)
 ;
"RTN","RCDPETTF",241,0)
 N DIR,K,RCMSG,RCEEOB,RCPG,RCSTOP
"RTN","RCDPETTF",242,0)
 ;Select EFT to view
"RTN","RCDPETTF",243,0)
 S RCMSG=$$SELECT^RCDPETTU("EFT")
"RTN","RCDPETTF",244,0)
 I '(+RCMSG>0) W !,"No EFT message selected.  Exiting View.",! Q
"RTN","RCDPETTF",245,0)
 ;
"RTN","RCDPETTF",246,0)
 ;Get content
"RTN","RCDPETTF",247,0)
 K RCEEOB
"RTN","RCDPETTF",248,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTF",249,0)
 I '$D(RCEEOB) W !,"No lines to display.  Exiting View.",! Q
"RTN","RCDPETTF",250,0)
 ;
"RTN","RCDPETTF",251,0)
 ;Display Raw Data
"RTN","RCDPETTF",252,0)
 W !!
"RTN","RCDPETTF",253,0)
 S K="RCEEOB" F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTF",254,0)
 W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTF",255,0)
 ;
"RTN","RCDPETTF",256,0)
 Q
"RTN","RCDPETTF",257,0)
 ;
"RTN","RCDPETTF",258,0)
ACPT ; change EFT status to Accepted
"RTN","RCDPETTF",259,0)
 ; In a production environment, the EFT is accepted by FMS
"RTN","RCDPETTF",260,0)
 ;
"RTN","RCDPETTF",261,0)
 N R S R="ZZRCDPET" I $T(^@R)="" W !,"Option is not available",! Q
"RTN","RCDPETTF",262,0)
 ;
"RTN","RCDPETTF",263,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETTF",264,0)
 W !!,"Change FMS status to Accepted"
"RTN","RCDPETTF",265,0)
 ;
"RTN","RCDPETTF",266,0)
 K DIR S DIR(0)="YA",DIR("A")="Do you want to continue? ",DIR("B")="NO"
"RTN","RCDPETTF",267,0)
 D ^DIR I 'Y W !,"Nothing changed." Q
"RTN","RCDPETTF",268,0)
 ;
"RTN","RCDPETTF",269,0)
 D NTRY^RCDPETTU("Change EFT status")
"RTN","RCDPETTF",270,0)
 D LOG^RCDPETTU("Change EFT status, DUZ= "_DUZ)
"RTN","RCDPETTF",271,0)
 ;
"RTN","RCDPETTF",272,0)
 W !
"RTN","RCDPETTF",273,0)
 ;
"RTN","RCDPETTF",274,0)
 ;Do SETEFT^ZZRCDPET using indirection to execute
"RTN","RCDPETTF",275,0)
 S R="D SETEFT^ZZRCDPET" X R
"RTN","RCDPETTF",276,0)
 ;
"RTN","RCDPETTF",277,0)
 Q
"RTN","RCDPETTF",278,0)
 ;
"RTN","RCDPETTF",279,0)
EFT     ;list of EFT records that contain user editable fields
"RTN","RCDPETTF",280,0)
 ;;01
"RTN","RCDPETTF",281,0)
 ;
"RTN","RCDPETTF",282,0)
EFT01 ;Data map for EFT 01 record
"RTN","RCDPETTF",283,0)
 ;;Trace #;2;30;AN;;
"RTN","RCDPETTF",284,0)
 ;;Date Claims Paid;3;8;N;;
"RTN","RCDPETTF",285,0)
 ;;Total Amount Paid;4;14;N;;L
"RTN","RCDPETTF",286,0)
 ;;Payer Name;5;35;AN;RCPAYNAME
"RTN","RCDPETTF",287,0)
 ;;Payer ID;6;20;AN;RCPAYID
"RTN","RCDPETTF",288,0)
 ;
"RTN","RCDPETTF",289,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTF",290,0)
 ;
"RTN","RCDPETTF",291,0)
EFTHDR ;Template Header for EFT
"RTN","RCDPETTF",292,0)
 ;;RACUBOTH RUCHMLB0001 0241910-UUUU--RUEVDRN.
"RTN","RCDPETTF",293,0)
 ;;835EFT^X^20140124^1033^^569469563^20140124^00000003293751
"RTN","RCDPETTF",294,0)
 ;
"RTN","RCDPETTM")
0^68^B189296632
"RTN","RCDPETTM",1,0)
RCDPETTM ; ePayments/CNF, hrubovcak - EDI Testing Tool MRA actions ;Jun 06, 2014@19:11:19
"RTN","RCDPETTM",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTM",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTM",4,0)
 ;
"RTN","RCDPETTM",5,0)
 ; called by RCDPETT
"RTN","RCDPETTM",6,0)
 Q
"RTN","RCDPETTM",7,0)
 ;
"RTN","RCDPETTM",8,0)
COPY ; Copy MRA message
"RTN","RCDPETTM",9,0)
 ;
"RTN","RCDPETTM",10,0)
 D NTRY^RCDPETTU("Copy MRA Object")
"RTN","RCDPETTM",11,0)
 D COPY^RCDPETTU("MRA")
"RTN","RCDPETTM",12,0)
 ;
"RTN","RCDPETTM",13,0)
 Q
"RTN","RCDPETTM",14,0)
 ;
"RTN","RCDPETTM",15,0)
DEL ; delete MRA type object
"RTN","RCDPETTM",16,0)
 ;
"RTN","RCDPETTM",17,0)
 D NTRY^RCDPETTU("Delete MRA Object")
"RTN","RCDPETTM",18,0)
 D DEL^RCDPETTU("MRA")
"RTN","RCDPETTM",19,0)
 ;
"RTN","RCDPETTM",20,0)
 Q
"RTN","RCDPETTM",21,0)
 ;
"RTN","RCDPETTM",22,0)
EDMSG ; edit MRA message
"RTN","RCDPETTM",23,0)
 ;
"RTN","RCDPETTM",24,0)
 N RCMSGSEL,X
"RTN","RCDPETTM",25,0)
 S X="Edit MRA Message"
"RTN","RCDPETTM",26,0)
 D NTRY^RCDPETTU(X) W !!,X_" "_$$NOW^RCDPETTU
"RTN","RCDPETTM",27,0)
 ;
"RTN","RCDPETTM",28,0)
 ; Select MRA message to edit
"RTN","RCDPETTM",29,0)
 S RCMSGSEL=0 F  D  Q:'(RCMSGSEL>0)
"RTN","RCDPETTM",30,0)
 .W ! S RCMSGSEL=$$SELECT^RCDPETTU("MRA")  ; only MRA entries
"RTN","RCDPETTM",31,0)
 .I '(RCMSGSEL>0) W !!,"No message selected. Exiting.",! Q
"RTN","RCDPETTM",32,0)
 .D EDWRK(RCMSGSEL)
"RTN","RCDPETTM",33,0)
 ;
"RTN","RCDPETTM",34,0)
 Q
"RTN","RCDPETTM",35,0)
 ;
"RTN","RCDPETTM",36,0)
EDWRK(RCMSG) ; RCMSG = "ien #344.81 ^ .01 field"
"RTN","RCDPETTM",37,0)
 ;
"RTN","RCDPETTM",38,0)
 Q:'($G(RCMSG)>0)  ; required
"RTN","RCDPETTM",39,0)
 D LOG^RCDPETTU("edit MRA "_RCMSG)
"RTN","RCDPETTM",40,0)
 N DIC,DIR,DOSF,DOST,DR,IEN,IEN2,J,K,L,RCBILL,RCEDIT,RCLT,RCLASTNM,RCOA,RCPATID,RCPCE,RCREC,RCRECB,RCTEXT,RCV,RCVAR,TAG,X,Y
"RTN","RCDPETTM",41,0)
 ;Get message content
"RTN","RCDPETTM",42,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTM",43,0)
 I '$D(RCEEOB) W !,"No lines to edit. Exiting.",! Q
"RTN","RCDPETTM",44,0)
 ;
"RTN","RCDPETTM",45,0)
 ;Build a list of records that contain editable data
"RTN","RCDPETTM",46,0)
 ; example: RCREC="/05/10/15/20/40/45/"
"RTN","RCDPETTM",47,0)
 S RCREC="/" F J=1:1 S RCTEXT=$T(MRA+J) Q:$E(RCTEXT,1,3)'=" ;;"  S RCREC=RCREC_$P(RCTEXT,";",3)_"/"
"RTN","RCDPETTM",48,0)
 ;
"RTN","RCDPETTM",49,0)
 ;Build an array of records and fields that contain the bill number
"RTN","RCDPETTM",50,0)
 ; RCRECB(Record,Field)=""
"RTN","RCDPETTM",51,0)
 K RCRECB
"RTN","RCDPETTM",52,0)
 F J=1:1 S RCTEXT=$T(MRABILL+J) Q:$E(RCTEXT,1,3)'=" ;;"  S RCRECB($P(RCTEXT,";",3),$P(RCTEXT,";",4))=""
"RTN","RCDPETTM",53,0)
 ;
"RTN","RCDPETTM",54,0)
 ;
"RTN","RCDPETTM",55,0)
 D EDITOBJ^RCDPETTU(+RCMSG)
"RTN","RCDPETTM",56,0)
 ;Get bill number, stored in RCBILL
"RTN","RCDPETTM",57,0)
 N DIR S DIR(0)="FOAU",DIR("A")="Bill #? "
"RTN","RCDPETTM",58,0)
 F J=1:1:20 I +$G(RCEEOB(J))=5 S DIR("B")=$P(RCEEOB(J),"^",2) Q
"RTN","RCDPETTM",59,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",60,0)
 I Y="^" Q
"RTN","RCDPETTM",61,0)
 S RCBILL=Y
"RTN","RCDPETTM",62,0)
 ;
"RTN","RCDPETTM",63,0)
 ;Look up the bill #.  If it's valid, set defaults for last name, patient id, date of service, original amount
"RTN","RCDPETTM",64,0)
 S RCPATID="",RCLASTNM="",DOSF="",DOST="",RCOA=""
"RTN","RCDPETTM",65,0)
 ; RCPATID - Patient ID
"RTN","RCDPETTM",66,0)
 ; RCLASTNM - Patient's last name
"RTN","RCDPETTM",67,0)
 ; DOSF - Date of Service (From)
"RTN","RCDPETTM",68,0)
 ; DOST - Date of Service (To)
"RTN","RCDPETTM",69,0)
 ; RCOA - Original Amount of bill
"RTN","RCDPETTM",70,0)
 ;
"RTN","RCDPETTM",71,0)
 S X=Y I RCBILL["-" S X=$P(RCBILL,"-",2)  ;bill number example:  442-K12121G; X will be K12121G
"RTN","RCDPETTM",72,0)
 ; IEN - pointer file #2, IEN2 - pointer file #399
"RTN","RCDPETTM",73,0)
 S DIC="^DGCR(399,",DIC(0)="EQ" D ^DIC S IEN2=+Y
"RTN","RCDPETTM",74,0)
 I Y>0 S:RCBILL["-" $P(RCBILL,"-",2)=$P($G(Y),"^",2) I RCBILL'["-" S RCBILL=$P($G(Y),"^",2)  ;Keep site if entered
"RTN","RCDPETTM",75,0)
 I $G(IEN2) D
"RTN","RCDPETTM",76,0)
 .S IEN=$$GET1^DIQ(399,IEN2,.02,"I")
"RTN","RCDPETTM",77,0)
 .S DOSF=$$GET1^DIQ(399,IEN2,151,"I")
"RTN","RCDPETTM",78,0)
 .S DOST=$$GET1^DIQ(399,IEN2,152,"I")
"RTN","RCDPETTM",79,0)
 .S DOSF=17000000+DOSF  ;convert format to YYYYMMDD, date of service from
"RTN","RCDPETTM",80,0)
 .S DOST=17000000+DOST  ;convert format to YYYYMMDD, date of service to
"RTN","RCDPETTM",81,0)
 I $G(IEN) D
"RTN","RCDPETTM",82,0)
 .S RCLASTNM=$$GET1^DIQ(2,IEN,.01),RCLASTNM=$P(RCLASTNM,",",1)  ;patient's last name
"RTN","RCDPETTM",83,0)
 .S RCPATID=$$GET1^DIQ(2,IEN,.09)  ;patient id
"RTN","RCDPETTM",84,0)
 S X=RCBILL,DIC="^PRCA(430,",DIC(0)="Z" D ^DIC I +Y D    ;bill number example:  442-K12121G; X = bill number
"RTN","RCDPETTM",85,0)
 .S RCOA=$$GET1^DIQ(430,+Y,3),RCOA=RCOA*100   ;original amount
"RTN","RCDPETTM",86,0)
 ;
"RTN","RCDPETTM",87,0)
 ;Loop through the EEOB to modify data
"RTN","RCDPETTM",88,0)
 S RCEDIT=1  ;RCEDIT = 0 if user aborts
"RTN","RCDPETTM",89,0)
 F J=1:1 Q:'$D(RCEEOB(J))  S RCEEOB=RCEEOB(J) D
"RTN","RCDPETTM",90,0)
 .S RCLT=$P(RCEEOB,"^",1)  ;RCLT = Line type field, contains record number
"RTN","RCDPETTM",91,0)
 .;
"RTN","RCDPETTM",92,0)
 .;If line contains bill #, replace with the bill # provided by user
"RTN","RCDPETTM",93,0)
 .I $D(RCRECB(+RCLT)) S K="",L="" F K=1:1 S L=$O(RCRECB(+RCLT,L)) Q:L=""  S $P(RCEEOB,"^",L)=RCBILL
"RTN","RCDPETTM",94,0)
 .;
"RTN","RCDPETTM",95,0)
 .;Quit if no user editable data
"RTN","RCDPETTM",96,0)
 .I RCREC'[("/"_RCLT_"/") S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTM",97,0)
 .;
"RTN","RCDPETTM",98,0)
 .;Quit if user has stopped editing by entering "^"
"RTN","RCDPETTM",99,0)
 .I 'RCEDIT S RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTM",100,0)
 .
"RTN","RCDPETTM",101,0)
 .;Loop through editable fields
"RTN","RCDPETTM",102,0)
 .S TAG="MRA"_RCLT  ;Example:  TAG="MRA05" (for record 05), RCTEXT=";;Patient ID;6;20;AN;RCPATID" (text under tag)
"RTN","RCDPETTM",103,0)
 .F K=1:1 S RCTEXT=$T(@TAG+K) Q:$E(RCTEXT,1,3)'=" ;;"  D  I 'RCEDIT Q
"RTN","RCDPETTM",104,0)
 ..;
"RTN","RCDPETTM",105,0)
 ..;Data in RCTEXT, Corresponding variables are in brackets
"RTN","RCDPETTM",106,0)
 ..;[RC1]Field Name; [RC2]piece; [RC3]max length
"RTN","RCDPETTM",107,0)
 ..; [RC4](A)lpha(N)umeric(P)unctuation; [RC5]Variable name; [RC6]Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",108,0)
 ..;
"RTN","RCDPETTM",109,0)
 ..N RC1,RC2,RC3,RC4,RC5,RC6
"RTN","RCDPETTM",110,0)
 ..F L=1:1:6 S @("RC"_L)=$P(RCTEXT,";",(L+2))
"RTN","RCDPETTM",111,0)
 ..
"RTN","RCDPETTM",112,0)
 ..N DIR S DIR(0)="FOA",DIR("A")=RC1_": "
"RTN","RCDPETTM",113,0)
 ..S RCVAR="RCV",RCV="" I RC5'="" S RCVAR=RC5 ;Variable name
"RTN","RCDPETTM",114,0)
 ..I @RCVAR="" S @RCVAR=$P(RCEEOB,"^",RC2) ;Default data either comes from the bill or the EEOB
"RTN","RCDPETTM",115,0)
 ..S DIR("B")=@RCVAR
"RTN","RCDPETTM",116,0)
 ..D ^DIR
"RTN","RCDPETTM",117,0)
 ..I Y="^" S RCEDIT=0,RCEEOB(J)=RCEEOB Q
"RTN","RCDPETTM",118,0)
 ..Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",119,0)
 ..;
"RTN","RCDPETTM",120,0)
 ..;Pad with leading zeros, if necessary
"RTN","RCDPETTM",121,0)
 ..I RC6="L" S Y=$$LZ^RCDPETTU(Y,RC3)
"RTN","RCDPETTM",122,0)
 ..S $P(RCEEOB,"^",RC2)=Y
"RTN","RCDPETTM",123,0)
 ..S RCEEOB(J)=RCEEOB
"RTN","RCDPETTM",124,0)
 ;
"RTN","RCDPETTM",125,0)
 D WP^DIE(344.81,+RCMSG_",",2,"","RCEEOB")
"RTN","RCDPETTM",126,0)
 ;
"RTN","RCDPETTM",127,0)
 Q
"RTN","RCDPETTM",128,0)
 ;
"RTN","RCDPETTM",129,0)
SNDMRA ; send MRA message to VistA
"RTN","RCDPETTM",130,0)
 W !,"Send MRA message to VistA.",!
"RTN","RCDPETTM",131,0)
 N RCTRACE,RCEFT,RCSTOP
"RTN","RCDPETTM",132,0)
 K RCDATA("MRA")
"RTN","RCDPETTM",133,0)
 S RCEFT="",RCSTOP=0
"RTN","RCDPETTM",134,0)
 D GETDATA(.RCDATA,.RCSTOP)
"RTN","RCDPETTM",135,0)
 I RCSTOP Q   ;user stopped editing before MRA construction completed
"RTN","RCDPETTM",136,0)
 D SNDMM(.RCDATA)
"RTN","RCDPETTM",137,0)
 ;
"RTN","RCDPETTM",138,0)
 ;Note:  MRA is different from ERA.  No EFT is sent into VistA for MRA.
"RTN","RCDPETTM",139,0)
 ;       This routine will not match RCDPETTE exactly.
"RTN","RCDPETTM",140,0)
 Q
"RTN","RCDPETTM",141,0)
 ;
"RTN","RCDPETTM",142,0)
SNDMM(RCDATA) ; Entry point for MailMan message
"RTN","RCDPETTM",143,0)
 ; RCTO = recipients
"RTN","RCDPETTM",144,0)
 ; RCSUBJ = subject
"RTN","RCDPETTM",145,0)
 ; RCXMZR = message number returned (XMZ value)
"RTN","RCDPETTM",146,0)
 N C,J,RCTO,RCSUBJ,RCXMZR,X
"RTN","RCDPETTM",147,0)
 K ^TMP($J,"XMSGTXT")
"RTN","RCDPETTM",148,0)
 ;
"RTN","RCDPETTM",149,0)
 ; put file text into FileMan W-P format
"RTN","RCDPETTM",150,0)
 S J=0,C=0 F  S J=$O(RCDATA("MRA",J)) Q:'J  S X=$G(RCDATA("MRA",J)) D:X]""
"RTN","RCDPETTM",151,0)
 .S C=C+1,^TMP($J,"XMSGTXT",C,0)=X
"RTN","RCDPETTM",152,0)
 .I $L(X)>245 W !,"line longer than 245"
"RTN","RCDPETTM",153,0)
 .;W !,"line "_C_" > "_X
"RTN","RCDPETTM",154,0)
 ;
"RTN","RCDPETTM",155,0)
 ;W !!," "_C_" lines found",!
"RTN","RCDPETTM",156,0)
 ;
"RTN","RCDPETTM",157,0)
 N DIR S DIR(0)="YOA",DIR("A")="Send MailMan message? ",DIR("B")="YES"
"RTN","RCDPETTM",158,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",159,0)
 I 'Y W !,"No message sent.",! Q
"RTN","RCDPETTM",160,0)
 ;
"RTN","RCDPETTM",161,0)
 ; send via MailMan
"RTN","RCDPETTM",162,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPETTM",163,0)
 S RCSUBJ="EDI Test "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCDPETTM",164,0)
 S RCTO(.5)="",RCTO(DUZ)=""
"RTN","RCDPETTM",165,0)
 S RCTO("G.MCH")=""  ; MRA Mail Group
"RTN","RCDPETTM",166,0)
 ;
"RTN","RCDPETTM",167,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,$NA(^TMP($J,"XMSGTXT")),.RCTO,,.RCXMZR)
"RTN","RCDPETTM",168,0)
 ;
"RTN","RCDPETTM",169,0)
 I $D(^TMP("XMERR",$J)) D  ; error from MailMan
"RTN","RCDPETTM",170,0)
 .W !!," MailMan error text "_$$NOW^RCDPETTU,!
"RTN","RCDPETTM",171,0)
 .N G S G=$NA(^TMP("XMERR",$J))
"RTN","RCDPETTM",172,0)
 .F  S G=$Q(@G) Q:G=""  Q:'($QS(G,2)=$J)  ;W !," >> "_$S($QL(G)>3:$P(G,",",4,99)_" = ",1:"")_@G
"RTN","RCDPETTM",173,0)
 .W !!
"RTN","RCDPETTM",174,0)
 ;
"RTN","RCDPETTM",175,0)
 ;check for success
"RTN","RCDPETTM",176,0)
 I $G(RCXMZR) S X="MailMan Message #"_RCXMZR_" sent." W !,X,! D LOG^RCDPETTU(X)
"RTN","RCDPETTM",177,0)
 ;
"RTN","RCDPETTM",178,0)
 Q
"RTN","RCDPETTM",179,0)
 ;
"RTN","RCDPETTM",180,0)
GETDATA(RCDATA,RCSTOP) ;Get data to send into VistA for MRA
"RTN","RCDPETTM",181,0)
 ; RCDATA = Array of EEOB text for the body of the MRA
"RTN","RCDPETTM",182,0)
 ; RCSTOP = Flag to indicate stoppage before MRA construction completed
"RTN","RCDPETTM",183,0)
 ;
"RTN","RCDPETTM",184,0)
 N DIR,J,K,RCAMT,RCCNT,RCEEOB,RCIE,RCIEN,RCMSG,RCPAYIEN,RCPAYID,RCPAYNM,RCSEL,RCTEMP,RCTYPE,Y
"RTN","RCDPETTM",185,0)
 ;
"RTN","RCDPETTM",186,0)
 S RCTYPE="MRA"
"RTN","RCDPETTM",187,0)
 ;
"RTN","RCDPETTM",188,0)
 ;Get template for header
"RTN","RCDPETTM",189,0)
 S RCTEMP(1,1)=$P($T(MRAHDR+1),";;",2)
"RTN","RCDPETTM",190,0)
 S RCTEMP(1,2)=$P($T(MRAHDR+2),";;",2)
"RTN","RCDPETTM",191,0)
 ;
"RTN","RCDPETTM",192,0)
 K DIR S DIR(0)="SA^I:INDIVIDUAL;E:EEOB GROUPING"
"RTN","RCDPETTM",193,0)
 S DIR("A")="Select (I)ndividual EEOBs or (E)EOB Grouping: "
"RTN","RCDPETTM",194,0)
 D ^DIR
"RTN","RCDPETTM",195,0)
 I Y="^" W !,"Exiting.",! S RCSTOP=1 Q
"RTN","RCDPETTM",196,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",197,0)
 S RCIE=Y  ;RCIE will be I for Individual selection or E for selection by EEOB Grouping
"RTN","RCDPETTM",198,0)
 ;
"RTN","RCDPETTM",199,0)
 I RCIE="I" D
"RTN","RCDPETTM",200,0)
 .F  D  Q:'(RCMSG>0)
"RTN","RCDPETTM",201,0)
 ..;Select EEOB to send
"RTN","RCDPETTM",202,0)
 ..S RCMSG=+$$SELECT^RCDPETTU(RCTYPE) Q:'(RCMSG>0)
"RTN","RCDPETTM",203,0)
 ..S RCSEL(RCMSG)=""
"RTN","RCDPETTM",204,0)
 ..K DIR S DIR(0)="YA",DIR("A")="Include reversal? "
"RTN","RCDPETTM",205,0)
 ..S DIR("B")="NO"
"RTN","RCDPETTM",206,0)
 ..D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",207,0)
 ..I Y S RCSEL("R"_RCMSG)=""  ;reversal of EEOB
"RTN","RCDPETTM",208,0)
 ;
"RTN","RCDPETTM",209,0)
 I RCIE="E" D
"RTN","RCDPETTM",210,0)
 .N D,D0,DA,DIC,GRP,X,Y
"RTN","RCDPETTM",211,0)
 .;Select EEOB Grouping
"RTN","RCDPETTM",212,0)
 .S DIC="^RCY(344.81,",DIC(0)="AEQ",DIC("A")="Select EEOB Grouping: ",D="C"
"RTN","RCDPETTM",213,0)
 .S DIC("S")="N RC S RC=$G(^RCY(344.81,+Y,1)) I $P(RC,U,2),$P(RC,U)=RCTYPE,+$O(^RCY(344.81,+Y,2,0))"
"RTN","RCDPETTM",214,0)
 .D IX^DIC
"RTN","RCDPETTM",215,0)
 .Q:(Y<1)
"RTN","RCDPETTM",216,0)
 .S GRP="",GRP=$$GET1^DIQ(344.81,+Y,.05)
"RTN","RCDPETTM",217,0)
 .Q:(GRP="")
"RTN","RCDPETTM",218,0)
 .;X = EEOB Grouping
"RTN","RCDPETTM",219,0)
 .M RCSEL=^RCY(344.81,"C",GRP)
"RTN","RCDPETTM",220,0)
 ;
"RTN","RCDPETTM",221,0)
 W !
"RTN","RCDPETTM",222,0)
 I '$D(RCSEL) W !,"No message selected. Exiting.",! S RCSTOP=1 Q
"RTN","RCDPETTM",223,0)
 ;
"RTN","RCDPETTM",224,0)
 N RCREV ;Reversal indicator
"RTN","RCDPETTM",225,0)
 S K="" F J=2:1 S K=$O(RCSEL(K)) Q:K=""  D
"RTN","RCDPETTM",226,0)
 .S RCREV=$S($E(K)="R":1,1:0)
"RTN","RCDPETTM",227,0)
 .;
"RTN","RCDPETTM",228,0)
 .;Get EEOB content
"RTN","RCDPETTM",229,0)
 .K RCEEOB
"RTN","RCDPETTM",230,0)
 .D:'RCREV ARRAY^RCDPETTU(K,.RCEEOB)
"RTN","RCDPETTM",231,0)
 .D:RCREV ARRAY^RCDPETTU($E(K,2,99),.RCEEOB)
"RTN","RCDPETTM",232,0)
 .I '$D(RCEEOB) Q
"RTN","RCDPETTM",233,0)
 .;
"RTN","RCDPETTM",234,0)
 .;If reversal, find record 10, reverse amount, set reversal indicator
"RTN","RCDPETTM",235,0)
 .I RCREV D
"RTN","RCDPETTM",236,0)
 ..N L,M S L=""
"RTN","RCDPETTM",237,0)
 ..F  S L=$O(RCEEOB(L)) Q:'L  D
"RTN","RCDPETTM",238,0)
 ...S M=RCEEOB(L) I +M'=10 Q
"RTN","RCDPETTM",239,0)
 ...S $P(M,"^",6)="Y"
"RTN","RCDPETTM",240,0)
 ...N NEWAMT
"RTN","RCDPETTM",241,0)
 ...S NEWAMT=$P(M,"^",11),NEWAMT="-"_$E(NEWAMT,2,99)
"RTN","RCDPETTM",242,0)
 ...S $P(M,"^",11)=NEWAMT,RCEEOB(L)=M
"RTN","RCDPETTM",243,0)
 .;
"RTN","RCDPETTM",244,0)
 .;Build body of MailMan message
"RTN","RCDPETTM",245,0)
 .M RCTEMP(J)=RCEEOB
"RTN","RCDPETTM",246,0)
 ;
"RTN","RCDPETTM",247,0)
 I '$D(RCTEMP) W !,"No message selected. Exiting.",! Q
"RTN","RCDPETTM",248,0)
 ;
"RTN","RCDPETTM",249,0)
 ;Get Payer IEN for defaults
"RTN","RCDPETTM",250,0)
 S RCPAYIEN="",RCPAYIEN=$$GET1^DIQ(344.82,DUZ,1.01,"I")
"RTN","RCDPETTM",251,0)
 ;
"RTN","RCDPETTM",252,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payer ID: "
"RTN","RCDPETTM",253,0)
 I RCPAYIEN S DIR("B")=$$GET1^DIQ(344.6,RCPAYIEN,.02)
"RTN","RCDPETTM",254,0)
 D ^DIR
"RTN","RCDPETTM",255,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTM",256,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",257,0)
 S RCPAYID=Y
"RTN","RCDPETTM",258,0)
 S $P(RCTEMP(1,2),"^",7)=RCPAYID
"RTN","RCDPETTM",259,0)
 ;
"RTN","RCDPETTM",260,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payer Name: "
"RTN","RCDPETTM",261,0)
 I RCPAYIEN S DIR("B")=$$GET1^DIQ(344.6,RCPAYIEN,.01)
"RTN","RCDPETTM",262,0)
 D ^DIR
"RTN","RCDPETTM",263,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTM",264,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",265,0)
 S RCPAYNM=Y
"RTN","RCDPETTM",266,0)
 S $P(RCTEMP(1,2),"^",6)=RCPAYNM
"RTN","RCDPETTM",267,0)
 ;
"RTN","RCDPETTM",268,0)
 ;Payment Method Code, user can override with an invalid value
"RTN","RCDPETTM",269,0)
 K DIR S DIR(0)="FOA",DIR("A")="Payment Method Code: "
"RTN","RCDPETTM",270,0)
 S DIR("B")=$$GET1^DIQ(344.82,DUZ,1.02)  ;default comes from user preferences
"RTN","RCDPETTM",271,0)
 D ^DIR
"RTN","RCDPETTM",272,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTM",273,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",274,0)
 S $P(RCTEMP(1,2),"^",17)=Y
"RTN","RCDPETTM",275,0)
 ;
"RTN","RCDPETTM",276,0)
 ;Trace Number
"RTN","RCDPETTM",277,0)
 S RCTRACE=+$H_$P($H,",",2)
"RTN","RCDPETTM",278,0)
 S $P(RCTEMP(1,2),"^",8)=RCTRACE
"RTN","RCDPETTM",279,0)
 ;
"RTN","RCDPETTM",280,0)
 ;MRA flag = Yes
"RTN","RCDPETTM",281,0)
 S $P(RCTEMP(1,2),"^",5)="Y"
"RTN","RCDPETTM",282,0)
 ;
"RTN","RCDPETTM",283,0)
 ;Control Number
"RTN","RCDPETTM",284,0)
 S $P(RCTEMP(1,2),"^",13)=+$H_$P($H,",",2)
"RTN","RCDPETTM",285,0)
 ;
"RTN","RCDPETTM",286,0)
 ;Sequence Number
"RTN","RCDPETTM",287,0)
 S $P(RCTEMP(1,2),"^",14)="01"
"RTN","RCDPETTM",288,0)
 ;
"RTN","RCDPETTM",289,0)
 ;Last Sequence Number = "Y"
"RTN","RCDPETTM",290,0)
 S $P(RCTEMP(1,2),"^",15)="Y"
"RTN","RCDPETTM",291,0)
 ;
"RTN","RCDPETTM",292,0)
 ;HIPAA Version
"RTN","RCDPETTM",293,0)
 S $P(RCTEMP(1,2),"^",16)="005010"
"RTN","RCDPETTM",294,0)
 ;
"RTN","RCDPETTM",295,0)
 ;File Date, set to today's date
"RTN","RCDPETTM",296,0)
 S $P(RCTEMP(1,2),"^",3)=$$Y4MD^RCDPETTU
"RTN","RCDPETTM",297,0)
 ;
"RTN","RCDPETTM",298,0)
 ;Date Claim Paid, set to today's date
"RTN","RCDPETTM",299,0)
 S $P(RCTEMP(1,2),"^",9)=$$Y4MD^RCDPETTU
"RTN","RCDPETTM",300,0)
 ;
"RTN","RCDPETTM",301,0)
 S RCAMT=0  ;Initialize total amount of MRA
"RTN","RCDPETTM",302,0)
 ;
"RTN","RCDPETTM",303,0)
 ;MRA level adjustments (02, 03 records)
"RTN","RCDPETTM",304,0)
 K DIR S DIR(0)="YA",DIR("A")="Include MRA level adjustments? "
"RTN","RCDPETTM",305,0)
 S DIR("B")="NO"
"RTN","RCDPETTM",306,0)
 D ^DIR
"RTN","RCDPETTM",307,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTM",308,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",309,0)
 I Y D
"RTN","RCDPETTM",310,0)
 .N RCNUM,RC02,RC03,RCADJ,NEG S NEG=0
"RTN","RCDPETTM",311,0)
 .F J=1:1 D  Q:Y=""
"RTN","RCDPETTM",312,0)
 ..N DIR S DIR(0)="FOA",DIR("A")="  Amount for adjustment #"_J_": "
"RTN","RCDPETTM",313,0)
 ..D ^DIR I $D(DTOUT)!$D(DUOUT) S Y=""
"RTN","RCDPETTM",314,0)
 ..I Y="" Q
"RTN","RCDPETTM",315,0)
 ..S RCADJ=$$LZ^RCDPETTU(Y,14)
"RTN","RCDPETTM",316,0)
 ..;Randomly pick an adjustment line to modify
"RTN","RCDPETTM",317,0)
 ..S RCNUM=$R(5)+1,RC02=$T(MRAADJ02+RCNUM),RC03=$T(MRAADJ03+RCNUM),RC02=$P(RC02,";;",2),RC03=$P(RC03,";;",2)
"RTN","RCDPETTM",318,0)
 ..S $P(RC02,"^",4)=RCADJ,RCTEMP(1,(J*2+1))=RC02,RCTEMP(1,(J*2+2))=RC03
"RTN","RCDPETTM",319,0)
 ..S RCAMT=RCAMT-RCADJ  ;add adjustment to total amount of MRA
"RTN","RCDPETTM",320,0)
 ;
"RTN","RCDPETTM",321,0)
 ;Put array into RCDATA and calculate total
"RTN","RCDPETTM",322,0)
 S RCCNT=0  ;counter
"RTN","RCDPETTM",323,0)
 F J=1:1 Q:'$D(RCTEMP(J))  D
"RTN","RCDPETTM",324,0)
 .F K=1:1 Q:'$D(RCTEMP(J,K))  D
"RTN","RCDPETTM",325,0)
 ..S RCCNT=RCCNT+1,RCDATA("MRA",RCCNT)=RCTEMP(J,K)
"RTN","RCDPETTM",326,0)
 ..I +RCTEMP(J,K)=10 S RCAMT=RCAMT+$P(RCTEMP(J,K),"^",11)  ;add amount paid to total amount of MRA
"RTN","RCDPETTM",327,0)
 S RCCNT=RCCNT+1,RCDATA("MRA",RCCNT)="99^$"
"RTN","RCDPETTM",328,0)
 S RCCNT=RCCNT+1,RCDATA("MRA",RCCNT)="NNNN"
"RTN","RCDPETTM",329,0)
 ;
"RTN","RCDPETTM",330,0)
 ;Total MRA Amount
"RTN","RCDPETTM",331,0)
 K DIR S DIR(0)="FOA",DIR("A")="Total MRA Amount: "
"RTN","RCDPETTM",332,0)
 S DIR("B")=RCAMT
"RTN","RCDPETTM",333,0)
 D ^DIR
"RTN","RCDPETTM",334,0)
 I Y="^" S RCSTOP=1 Q
"RTN","RCDPETTM",335,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTM",336,0)
 S RCAMT=$$LZ^RCDPETTU(Y,13)
"RTN","RCDPETTM",337,0)
 S $P(RCDATA("MRA",2),"^",10)=RCAMT
"RTN","RCDPETTM",338,0)
 ;
"RTN","RCDPETTM",339,0)
 ;Display trace number for user reference
"RTN","RCDPETTM",340,0)
 W !!,"MRA has been constructed.",!,"Trace Number:  ",RCTRACE,!!
"RTN","RCDPETTM",341,0)
 ;
"RTN","RCDPETTM",342,0)
 ;Display content of MRA?
"RTN","RCDPETTM",343,0)
 K DIR S DIR(0)="YA",DIR("A")="Display content of MRA? "
"RTN","RCDPETTM",344,0)
 S DIR("B")="NO" D
"RTN","RCDPETTM",345,0)
 .D ^DIR Q:'Y
"RTN","RCDPETTM",346,0)
 .S K="RCDATA" F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTM",347,0)
 .W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTM",348,0)
 ;
"RTN","RCDPETTM",349,0)
 Q
"RTN","RCDPETTM",350,0)
 ;
"RTN","RCDPETTM",351,0)
VWMSG ; view MRA message
"RTN","RCDPETTM",352,0)
 ;
"RTN","RCDPETTM",353,0)
 W !,"View MRA Message."
"RTN","RCDPETTM",354,0)
 D DT^DICRW
"RTN","RCDPETTM",355,0)
 ;
"RTN","RCDPETTM",356,0)
 N DIR,RCMSG,RCEEOB,RCEXIT,RCPG,RCSTOP,Z
"RTN","RCDPETTM",357,0)
 ;Select EEOB to view
"RTN","RCDPETTM",358,0)
 S RCMSG=$$SELECT^RCDPETTU("MRA")
"RTN","RCDPETTM",359,0)
 I '(+RCMSG>0) W !,"No EDI message selected.  Exiting View.",! Q
"RTN","RCDPETTM",360,0)
 ;
"RTN","RCDPETTM",361,0)
 ;Get EEOB content
"RTN","RCDPETTM",362,0)
 K RCEEOB
"RTN","RCDPETTM",363,0)
 D ARRAY^RCDPETTU(+RCMSG,.RCEEOB)
"RTN","RCDPETTM",364,0)
 I '$D(RCEEOB) W !,"No lines to display.  Exiting View.",! Q
"RTN","RCDPETTM",365,0)
 ;
"RTN","RCDPETTM",366,0)
 ;Display Raw Data
"RTN","RCDPETTM",367,0)
 W !!
"RTN","RCDPETTM",368,0)
 S K="RCEEOB",RCEXIT=0
"RTN","RCDPETTM",369,0)
 F  S K=$Q(@K) Q:K=""  W !,@K
"RTN","RCDPETTM",370,0)
 W ! K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPETTM",371,0)
 S RCEXIT=$D(DTOUT)+$D(DUOUT)
"RTN","RCDPETTM",372,0)
 Q:RCEXIT  ; timeout or '^'
"RTN","RCDPETTM",373,0)
 ;
"RTN","RCDPETTM",374,0)
 ;Display Formatted Output with Labels (reused code from PRT^RCDPEX3)
"RTN","RCDPETTM",375,0)
 K ^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMRAW")
"RTN","RCDPETTM",376,0)
 D DISP^RCDPESR0("^RCY(344.81,"_(+RCMSG)_",2)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75)
"RTN","RCDPETTM",377,0)
 S RCPG=0,Z=0,RCEXIT=0
"RTN","RCDPETTM",378,0)
 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z!RCEXIT  D
"RTN","RCDPETTM",379,0)
 . W !,$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPETTM",380,0)
 . S RCPG=RCPG+1
"RTN","RCDPETTM",381,0)
 . I RCPG>20 W ! K DIR S DIR(0)="E" D ^DIR S RCPG=0,RCEXIT=$D(DTOUT)+$D(DUOUT)
"RTN","RCDPETTM",382,0)
 ;
"RTN","RCDPETTM",383,0)
 Q
"RTN","RCDPETTM",384,0)
 ;
"RTN","RCDPETTM",385,0)
MRA     ;list of MRA records that contain user editable fields
"RTN","RCDPETTM",386,0)
 ;;05
"RTN","RCDPETTM",387,0)
 ;;10
"RTN","RCDPETTM",388,0)
 ;;15
"RTN","RCDPETTM",389,0)
 ;;20
"RTN","RCDPETTM",390,0)
 ;;40
"RTN","RCDPETTM",391,0)
 ;;41
"RTN","RCDPETTM",392,0)
 ;;45
"RTN","RCDPETTM",393,0)
 ;
"RTN","RCDPETTM",394,0)
MRA05 ;Data map for MRA 05 record 
"RTN","RCDPETTM",395,0)
 ;;Patient's Last Name;3;60;ANP;RCLASTNM;
"RTN","RCDPETTM",396,0)
 ;;Patient ID;6;20;AN;RCPATID;
"RTN","RCDPETTM",397,0)
 ;
"RTN","RCDPETTM",398,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric(P)unctuation; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",399,0)
 ;
"RTN","RCDPETTM",400,0)
MRA10 ;Data map for MRA 10 record
"RTN","RCDPETTM",401,0)
 ;;Amount Paid;11;15;N;;L
"RTN","RCDPETTM",402,0)
 ;
"RTN","RCDPETTM",403,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",404,0)
 ;
"RTN","RCDPETTM",405,0)
MRA15 ;Data map for MRA 15 record
"RTN","RCDPETTM",406,0)
 ;;Covered Amount;3;15;N;;L
"RTN","RCDPETTM",407,0)
 ;;Patient Responsibility Amount;9;15;N;;L
"RTN","RCDPETTM",408,0)
 ;
"RTN","RCDPETTM",409,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",410,0)
 ;
"RTN","RCDPETTM",411,0)
MRA20 ;Data map for MRA 20 record
"RTN","RCDPETTM",412,0)
 ;;Adjustment Amount (Claim Level Adjustment);5;15;N;;L
"RTN","RCDPETTM",413,0)
 ;
"RTN","RCDPETTM",414,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",415,0)
 ;
"RTN","RCDPETTM",416,0)
MRA40 ;Data map for MRA 40 record
"RTN","RCDPETTM",417,0)
 ;;Original Charge (Submitted Amt);15;10;N;;L
"RTN","RCDPETTM",418,0)
 ;;Amount Paid;17;10;N;;L
"RTN","RCDPETTM",419,0)
 ;;Service Date From (YYYYMMDD);19;8;N;DOSF;
"RTN","RCDPETTM",420,0)
 ;;Service Date To (YYYYMMDD);20;8;N;DOST;
"RTN","RCDPETTM",421,0)
 ;
"RTN","RCDPETTM",422,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",423,0)
 ;
"RTN","RCDPETTM",424,0)
MRA41 ;Data map for MRA 41 record
"RTN","RCDPETTM",425,0)
 ;;Allowed Amount (Service Line Data);5;15;N;;L
"RTN","RCDPETTM",426,0)
 ;
"RTN","RCDPETTM",427,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",428,0)
 ;
"RTN","RCDPETTM",429,0)
MRA45 ;Data map for MRA 45 record
"RTN","RCDPETTM",430,0)
 ;;Adjustment Amount (Service Line Adjustment);5;15;N;;L
"RTN","RCDPETTM",431,0)
 ;
"RTN","RCDPETTM",432,0)
 ;Field Name; piece; max length; (A)lpha(N)umeric; Variable name; Pad field with (L)eading zero (T)railing zero
"RTN","RCDPETTM",433,0)
 ;
"RTN","RCDPETTM",434,0)
MRABILL ;Data map to determine where the bill number is stored
"RTN","RCDPETTM",435,0)
 ;;5;2
"RTN","RCDPETTM",436,0)
 ;;6;2
"RTN","RCDPETTM",437,0)
 ;;10;2
"RTN","RCDPETTM",438,0)
 ;;11;2
"RTN","RCDPETTM",439,0)
 ;;12;2
"RTN","RCDPETTM",440,0)
 ;;13;2
"RTN","RCDPETTM",441,0)
 ;;15;2
"RTN","RCDPETTM",442,0)
 ;;17;2
"RTN","RCDPETTM",443,0)
 ;;20;2
"RTN","RCDPETTM",444,0)
 ;;30;2
"RTN","RCDPETTM",445,0)
 ;;35;2
"RTN","RCDPETTM",446,0)
 ;;37;2
"RTN","RCDPETTM",447,0)
 ;;40;2
"RTN","RCDPETTM",448,0)
 ;;41;2
"RTN","RCDPETTM",449,0)
 ;;42;2
"RTN","RCDPETTM",450,0)
 ;;45;2
"RTN","RCDPETTM",451,0)
 ;;46;2
"RTN","RCDPETTM",452,0)
 ;
"RTN","RCDPETTM",453,0)
 ;Record;position
"RTN","RCDPETTM",454,0)
 ;
"RTN","RCDPETTM",455,0)
MRAHDR ;Template Header for MRA
"RTN","RCDPETTM",456,0)
 ;;RACUBOTH RUCHMLB0012 2851531-UUUU--RUCHAAR..
"RTN","RCDPETTM",457,0)
 ;;835EOB^X^20100922^1632^Y^MEDICARE PART B^1382242132^20101012031^20100920^0000000040368^830168494^^0007344735^01^Y^004010^NON^
"RTN","RCDPETTM",458,0)
 ;
"RTN","RCDPETTM",459,0)
MRAADJ02 ;Template 02 Adjustment Record for MRA
"RTN","RCDPETTM",460,0)
 ;;02^50^LATE CHARGE 00112233445566779900ABCDEFGHIJKLMNOPQR^00000000000110
"RTN","RCDPETTM",461,0)
 ;;02^51^INTEREST PENALTY CHARGE 0011223344556677889900ABCD^00000000000120
"RTN","RCDPETTM",462,0)
 ;;02^72^AUTHORIZED RETURN 0011223344556677889900ABCDEFGHIJ^-0000000000130
"RTN","RCDPETTM",463,0)
 ;;02^90^EARLY PAYMENT ALLOWANCE 0011223344556677889900AABB^00000000000140
"RTN","RCDPETTM",464,0)
 ;;02^AH^ORIGINATION FEE 0011223344556677889900AABBCCDDEEFF^00000000000150
"RTN","RCDPETTM",465,0)
 ;
"RTN","RCDPETTM",466,0)
MRAADJ03 ;Template 03 Adjustment Record for MRA
"RTN","RCDPETTM",467,0)
 ;;03^These are non-covered services because this is not deemed a `medical necessity' by the payer.
"RTN","RCDPETTM",468,0)
 ;;03^These are non-covered services because this is a pre-existing condition
"RTN","RCDPETTM",469,0)
 ;;03^MESSAGE TEXT FOR AUTHORIZED RETURN
"RTN","RCDPETTM",470,0)
 ;;03^Ingredient cost adjustment.
"RTN","RCDPETTM",471,0)
 ;;03^MESSAGE TEXT UNAVAILABLE
"RTN","RCDPETTM",472,0)
 ;
"RTN","RCDPETTP")
0^69^B4906426
"RTN","RCDPETTP",1,0)
RCDPETTP ; ePayments/CNF, hrubovcak - EDI Testing Tool ;Jun 06, 2014@19:11:19
"RTN","RCDPETTP",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTP",4,0)
 ;
"RTN","RCDPETTP",5,0)
 Q
"RTN","RCDPETTP",6,0)
 ;
"RTN","RCDPETTP",7,0)
USRPREF ; edit user preferences in file #344.82
"RTN","RCDPETTP",8,0)
 ;
"RTN","RCDPETTP",9,0)
 D DONOTUSE^RCDPETTU
"RTN","RCDPETTP",10,0)
 ;
"RTN","RCDPETTP",11,0)
 N D,D0,DA,DDH,DI,DIC,DIE,DQ,DR,DZ,RCFLNO,X,Y
"RTN","RCDPETTP",12,0)
 S RCFLNO=344.82
"RTN","RCDPETTP",13,0)
 I '$D(^RCY(RCFLNO,0)) W !,"File "_RCFLNO_" not found."_$C(7),! Q
"RTN","RCDPETTP",14,0)
 I '$D(^RCY(RCFLNO,DUZ)) D  ; create new entry
"RTN","RCDPETTP",15,0)
 .N RCDIERR,RCIENRT,RCIENS
"RTN","RCDPETTP",16,0)
 .S RCIENS(RCFLNO,"+1,",.01)=DUZ
"RTN","RCDPETTP",17,0)
 .S RCIENS(RCFLNO,"+1,",.02)=$$NOW^XLFDT
"RTN","RCDPETTP",18,0)
 .S RCIENRT(1)=DUZ  ; DINUM to NEW PERSON file
"RTN","RCDPETTP",19,0)
 .D UPDATE^DIE("","RCIENS","RCIENRT","RCDIERR")
"RTN","RCDPETTP",20,0)
 ;
"RTN","RCDPETTP",21,0)
 ; user interaction to edit allowed fields
"RTN","RCDPETTP",22,0)
 W ! S DIE=RCFLNO,DA=DUZ,DR="1.01;1.02" D ^DIE,UPDT
"RTN","RCDPETTP",23,0)
 ;
"RTN","RCDPETTP",24,0)
 Q
"RTN","RCDPETTP",25,0)
 ;
"RTN","RCDPETTP",26,0)
LKUP102 ; called from inside FileMan for file #344.82 field #1.02
"RTN","RCDPETTP",27,0)
 Q:X=""  S X=$$UP^RCDPETTU(X)
"RTN","RCDPETTP",28,0)
 N J,S,T,V
"RTN","RCDPETTP",29,0)
 ; build array in V
"RTN","RCDPETTP",30,0)
 F J=1:1 S T=$P($T(VAL102+J),";;",2) Q:T=""  S S=$P(T,U),V(S)=$P(T,U,2)
"RTN","RCDPETTP",31,0)
 ; check to see if text matches
"RTN","RCDPETTP",32,0)
 I '$D(V(X)) S S="" F  S S=$O(V(S)) Q:$D(V(X))!(S="")  I $E($$UP^RCDPETTU(V(S)),1,$L(X))=X S X=S
"RTN","RCDPETTP",33,0)
 I '$D(V(X)) K X Q  ; invalid selection
"RTN","RCDPETTP",34,0)
 W "   "_V(X)  ; echo back to user
"RTN","RCDPETTP",35,0)
 ;
"RTN","RCDPETTP",36,0)
 Q
"RTN","RCDPETTP",37,0)
 ;
"RTN","RCDPETTP",38,0)
FLD101 ; XECUTEable help for field 1.01 PAYER ID DEFAULT
"RTN","RCDPETTP",39,0)
 ; called by FileMan, so NEW all variables
"RTN","RCDPETTP",40,0)
 W !,"Enter a value for PAYER ID DEFAULT to be used for testing."
"RTN","RCDPETTP",41,0)
 W !,"It cannot start with a space.",!
"RTN","RCDPETTP",42,0)
 ;
"RTN","RCDPETTP",43,0)
 Q
"RTN","RCDPETTP",44,0)
 ;
"RTN","RCDPETTP",45,0)
FLD102 ; XECUTEable help for field 1.02 PAYMENT METHOD CODE
"RTN","RCDPETTP",46,0)
 ; called by FileMan, so NEW all variables
"RTN","RCDPETTP",47,0)
 W !,"Enter a PAYMENT METHOD CODE for editing an EEOB list."
"RTN","RCDPETTP",48,0)
 W !," Choose from:"
"RTN","RCDPETTP",49,0)
 N J,T
"RTN","RCDPETTP",50,0)
 F J=1:1 S T=$P($T(VAL102+J),";;",2) Q:T=""  W !,"   "_$P(T,U)_"    "_$P(T,U,2)
"RTN","RCDPETTP",51,0)
 W ! Q
"RTN","RCDPETTP",52,0)
 ;
"RTN","RCDPETTP",53,0)
UPDT ; UPDATED field (#.02)
"RTN","RCDPETTP",54,0)
 S $P(^RCY(344.82,DUZ,0),U,2)=$$NOW^XLFDT Q
"RTN","RCDPETTP",55,0)
 ;
"RTN","RCDPETTP",56,0)
VAL102 ; values for field 1.02
"RTN","RCDPETTP",57,0)
 ;;ACH^Automated Clearing House
"RTN","RCDPETTP",58,0)
 ;;BOP^Financial Institution Option
"RTN","RCDPETTP",59,0)
 ;;CHK^Check
"RTN","RCDPETTP",60,0)
 ;;FWT^Federal Reserve Funds /Wire Transfer
"RTN","RCDPETTP",61,0)
 ;;NON^Non-Payment Data
"RTN","RCDPETTP",62,0)
 ;
"RTN","RCDPETTQ")
0^93^B30669370
"RTN","RCDPETTQ",1,0)
RCDPETTQ ; ePayments/CNF, hrubovcak - EDI Testing Tool QUICK actions ;Jun 06, 2014@19:11:19
"RTN","RCDPETTQ",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTQ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTQ",4,0)
 ;
"RTN","RCDPETTQ",5,0)
 ; called by RCDPETT
"RTN","RCDPETTQ",6,0)
 Q
"RTN","RCDPETTQ",7,0)
 ;
"RTN","RCDPETTQ",8,0)
QUICK ; Quick option to copy/edit/send
"RTN","RCDPETTQ",9,0)
 ;
"RTN","RCDPETTQ",10,0)
 D NTRY^RCDPETTU("Quick ERA Object")
"RTN","RCDPETTQ",11,0)
 ;
"RTN","RCDPETTQ",12,0)
 N RCMSGSEL,RCCOPY
"RTN","RCDPETTQ",13,0)
 S RCMSGSEL=0  ;initialize selected message id to 0
"RTN","RCDPETTQ",14,0)
 ;
"RTN","RCDPETTQ",15,0)
 N DIR S DIR(0)="YOA",DIR("A")="Copy message? ",DIR("B")="YES"
"RTN","RCDPETTQ",16,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPETTQ",17,0)
 S RCCOPY=0 I Y S RCCOPY=1
"RTN","RCDPETTQ",18,0)
 I RCCOPY D COPY(.RCMSGSEL) Q:'RCMSGSEL
"RTN","RCDPETTQ",19,0)
 I 'RCCOPY D
"RTN","RCDPETTQ",20,0)
 .W ! S RCMSGSEL=$$SELECT^RCDPETTU("ERA")  ; only ERA entries
"RTN","RCDPETTQ",21,0)
 I '(RCMSGSEL>0) W !!,"No message selected. Exiting.",! Q
"RTN","RCDPETTQ",22,0)
 D EDWRK^RCDPETTE(RCMSGSEL,1)  ;Edit message content
"RTN","RCDPETTQ",23,0)
 ;
"RTN","RCDPETTQ",24,0)
 N RCTRACE,RCEFT,RCSTOP
"RTN","RCDPETTQ",25,0)
 K RCDATA("ERA")
"RTN","RCDPETTQ",26,0)
 S RCEFT="",RCSTOP=0
"RTN","RCDPETTQ",27,0)
 D GETDATA(.RCDATA,.RCTRACE,.RCEFT,.RCSTOP,RCMSGSEL)
"RTN","RCDPETTQ",28,0)
 D SNDMM^RCDPETTE(.RCDATA)
"RTN","RCDPETTQ",29,0)
 ;
"RTN","RCDPETTQ",30,0)
 ;send corresponding EFT message to VistA?
"RTN","RCDPETTQ",31,0)
 W !,"EFT has been constructed."
"RTN","RCDPETTQ",32,0)
 ;
"RTN","RCDPETTQ",33,0)
 K RCDATA
"RTN","RCDPETTQ",34,0)
 D GETDATAE(.RCDATA,RCEFT)
"RTN","RCDPETTQ",35,0)
 D SNDMM^RCDPETTE(.RCDATA)
"RTN","RCDPETTQ",36,0)
 ;
"RTN","RCDPETTQ",37,0)
 Q
"RTN","RCDPETTQ",38,0)
 ;
"RTN","RCDPETTQ",39,0)
COPY(RCMSGSEL) ; Copy ERA message
"RTN","RCDPETTQ",40,0)
 ;Output - New internal message id
"RTN","RCDPETTQ",41,0)
 ;
"RTN","RCDPETTQ",42,0)
 N DIR,J,RCEEOB,RCEXP,RCMSG,RCOB,RCIEN,RCTYPE,X,Y
"RTN","RCDPETTQ",43,0)
 S RCTYPE="ERA",RCIEN=$$SELECT^RCDPETTU(RCTYPE) I '(RCIEN>0) Q
"RTN","RCDPETTQ",44,0)
 D ARRAY^RCDPETTU(+RCIEN,.RCEEOB)
"RTN","RCDPETTQ",45,0)
 I '$D(RCEEOB) W !,"No lines to copy. Exiting.",! Q
"RTN","RCDPETTQ",46,0)
 ;
"RTN","RCDPETTQ",47,0)
 ; set to auto-import
"RTN","RCDPETTQ",48,0)
 S RCOB("AUTOIMP")=1,RCOB("IEN")=0
"RTN","RCDPETTQ",49,0)
 ; user response cannot contain '^'
"RTN","RCDPETTQ",50,0)
 S DIR(0)="FOA",DIR("A")="EEOB Description: "
"RTN","RCDPETTQ",51,0)
 D ^DIR I Y="" W !,"Description is required. Exiting.",! Q
"RTN","RCDPETTQ",52,0)
 S RCOB("XMZ")=0  ; no MM message number
"RTN","RCDPETTQ",53,0)
 ;
"RTN","RCDPETTQ",54,0)
 S RCOB("XMZ",0)=Y  ; instead of the MM message zero node
"RTN","RCDPETTQ",55,0)
 ; create text for a single object
"RTN","RCDPETTQ",56,0)
 F J=1:1 Q:'$D(RCEEOB(J))  S RCEXP(1,J)=RCEEOB(J)
"RTN","RCDPETTQ",57,0)
 S RCEXP("TYPE")=RCTYPE,RCEXP=1
"RTN","RCDPETTQ",58,0)
 D NWOBJ^RCDPETTU(.RCOB,.RCEXP)
"RTN","RCDPETTQ",59,0)
 ;
"RTN","RCDPETTQ",60,0)
 I '$G(RCOB("IEN")) W !,"* Entry not created! *" Q
"RTN","RCDPETTQ",61,0)
 S J=$O(RCOB("IEN",0)) W:J !!,?5,"Created #"_J_" "_$P(^RCY(344.81,J,0),U),!
"RTN","RCDPETTQ",62,0)
 S RCMSGSEL=J
"RTN","RCDPETTQ",63,0)
 ;
"RTN","RCDPETTQ",64,0)
 Q
"RTN","RCDPETTQ",65,0)
 ;
"RTN","RCDPETTQ",66,0)
GETDATA(RCDATA,RCTRACE,RCEFT,RCSTOP,RCMSGSEL) ;Get data to send into VistA for ERA
"RTN","RCDPETTQ",67,0)
 ; RCDATA = Array of EEOB text for the body of the ERA
"RTN","RCDPETTQ",68,0)
 ; RCTRACE = ERA trace number, also used for matching EFT
"RTN","RCDPETTQ",69,0)
 ; RCEFT = Array of EFT detail line that matches the ERA
"RTN","RCDPETTQ",70,0)
 ; RCSTOP = Flag to indicate stoppage before ERA construction completed
"RTN","RCDPETTQ",71,0)
 ; RCMSGSEL = Message to send into VistA
"RTN","RCDPETTQ",72,0)
 ;
"RTN","RCDPETTQ",73,0)
 N DIR,J,K,RCAMT,RCCNT,RCEEOB,RCIE,RCIEN,RCMSG,RCPAYIEN,RCPAYID,RCPAYNM,RCSEL,RCTEMP,RCTYPE,Y
"RTN","RCDPETTQ",74,0)
 ;
"RTN","RCDPETTQ",75,0)
 S RCTYPE="ERA"
"RTN","RCDPETTQ",76,0)
 ;
"RTN","RCDPETTQ",77,0)
 ;Get template for header
"RTN","RCDPETTQ",78,0)
 S RCTEMP(1,1)=$P($T(ERAHDR+1),";;",2)
"RTN","RCDPETTQ",79,0)
 S RCTEMP(1,2)=$P($T(ERAHDR+2),";;",2)
"RTN","RCDPETTQ",80,0)
 ;
"RTN","RCDPETTQ",81,0)
 ;Get EEOB content
"RTN","RCDPETTQ",82,0)
 K RCEEOB
"RTN","RCDPETTQ",83,0)
 D ARRAY^RCDPETTU(+RCMSGSEL,.RCEEOB)
"RTN","RCDPETTQ",84,0)
 I '$D(RCEEOB) S RCSTOP=1 Q
"RTN","RCDPETTQ",85,0)
 ;
"RTN","RCDPETTQ",86,0)
 ;Build body of MailMan message
"RTN","RCDPETTQ",87,0)
 M RCTEMP(2)=RCEEOB
"RTN","RCDPETTQ",88,0)
 ;
"RTN","RCDPETTQ",89,0)
 I '$D(RCTEMP) W !,"No message selected. Exiting.",! S RCSTOP=1 Q
"RTN","RCDPETTQ",90,0)
 ;
"RTN","RCDPETTQ",91,0)
 ;Get Payer IEN for defaults, set payer id and payer name, comes from user preferences
"RTN","RCDPETTQ",92,0)
 S RCPAYIEN="",RCPAYIEN=$$GET1^DIQ(344.82,DUZ,1.01,"I")
"RTN","RCDPETTQ",93,0)
 S RCPAYID="",RCPAYNM=""
"RTN","RCDPETTQ",94,0)
 I RCPAYIEN S RCPAYID=$$GET1^DIQ(344.6,RCPAYIEN,.02),RCPAYNM=$$GET1^DIQ(344.6,RCPAYIEN,.01)
"RTN","RCDPETTQ",95,0)
 S $P(RCTEMP(1,2),"^",7)=RCPAYID
"RTN","RCDPETTQ",96,0)
 S $P(RCTEMP(1,2),"^",6)=RCPAYNM
"RTN","RCDPETTQ",97,0)
 ;
"RTN","RCDPETTQ",98,0)
 ;Payment Method Code, comes from user preferences
"RTN","RCDPETTQ",99,0)
 S $P(RCTEMP(1,2),"^",17)=$$GET1^DIQ(344.82,DUZ,1.02)
"RTN","RCDPETTQ",100,0)
 ;
"RTN","RCDPETTQ",101,0)
 ;Trace Number
"RTN","RCDPETTQ",102,0)
 S RCTRACE=+$H_$P($H,",",2)
"RTN","RCDPETTQ",103,0)
 S $P(RCTEMP(1,2),"^",8)=RCTRACE
"RTN","RCDPETTQ",104,0)
 ;
"RTN","RCDPETTQ",105,0)
 ;MRA flag = No
"RTN","RCDPETTQ",106,0)
 S $P(RCTEMP(1,2),"^",5)="N"
"RTN","RCDPETTQ",107,0)
 ;
"RTN","RCDPETTQ",108,0)
 ;Control Number
"RTN","RCDPETTQ",109,0)
 S $P(RCTEMP(1,2),"^",13)=+$H_$P($H,",",2)
"RTN","RCDPETTQ",110,0)
 ;
"RTN","RCDPETTQ",111,0)
 ;Sequence Number
"RTN","RCDPETTQ",112,0)
 S $P(RCTEMP(1,2),"^",14)="01"
"RTN","RCDPETTQ",113,0)
 ;
"RTN","RCDPETTQ",114,0)
 ;Last Sequence Number = "Y"
"RTN","RCDPETTQ",115,0)
 S $P(RCTEMP(1,2),"^",15)="Y"
"RTN","RCDPETTQ",116,0)
 ;
"RTN","RCDPETTQ",117,0)
 ;HIPAA Version
"RTN","RCDPETTQ",118,0)
 S $P(RCTEMP(1,2),"^",16)="005010"
"RTN","RCDPETTQ",119,0)
 ;
"RTN","RCDPETTQ",120,0)
 ;File Date, set to today's date
"RTN","RCDPETTQ",121,0)
 S $P(RCTEMP(1,2),"^",3)=$$Y4MD^RCDPETTU
"RTN","RCDPETTQ",122,0)
 ;
"RTN","RCDPETTQ",123,0)
 ;Date Claim Paid, set to today's date
"RTN","RCDPETTQ",124,0)
 S $P(RCTEMP(1,2),"^",9)=$$Y4MD^RCDPETTU
"RTN","RCDPETTQ",125,0)
 ;
"RTN","RCDPETTQ",126,0)
 S RCAMT=0  ;Initialize total amount of ERA
"RTN","RCDPETTQ",127,0)
 ;
"RTN","RCDPETTQ",128,0)
 ;Put array into RCDATA and calculate total
"RTN","RCDPETTQ",129,0)
 S RCCNT=0  ;counter
"RTN","RCDPETTQ",130,0)
 F J=1:1 Q:'$D(RCTEMP(J))  D
"RTN","RCDPETTQ",131,0)
 .F K=1:1 Q:'$D(RCTEMP(J,K))  D
"RTN","RCDPETTQ",132,0)
 ..S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)=RCTEMP(J,K)
"RTN","RCDPETTQ",133,0)
 ..I +RCTEMP(J,K)=10 S RCAMT=RCAMT+$P(RCTEMP(J,K),"^",11)  ;add amount paid to total amount of ERA
"RTN","RCDPETTQ",134,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="99^$"
"RTN","RCDPETTQ",135,0)
 S RCCNT=RCCNT+1,RCDATA("ERA",RCCNT)="NNNN"
"RTN","RCDPETTQ",136,0)
 ;
"RTN","RCDPETTQ",137,0)
 ;Total ERA Amount
"RTN","RCDPETTQ",138,0)
 S RCAMT=$$LZ^RCDPETTU(RCAMT,13)
"RTN","RCDPETTQ",139,0)
 S $P(RCDATA("ERA",2),"^",10)=RCAMT
"RTN","RCDPETTQ",140,0)
 ;
"RTN","RCDPETTQ",141,0)
 ;Display trace number for user reference
"RTN","RCDPETTQ",142,0)
 W !!,"ERA has been constructed.",!,"Trace Number:  ",RCTRACE,!!
"RTN","RCDPETTQ",143,0)
 ;
"RTN","RCDPETTQ",144,0)
 ;Build matching EFT
"RTN","RCDPETTQ",145,0)
 N RCDATE,RCSUB,X,X1,X2
"RTN","RCDPETTQ",146,0)
 S RCSUB="RCDPETT "_RCTRACE
"RTN","RCDPETTQ",147,0)
 ;purge date is 30 days from today
"RTN","RCDPETTQ",148,0)
 S ^XTMP(RCSUB,0)=$$HTE^XLFDT($H+30)_"^"_DT_"^RCDPETT DATA"
"RTN","RCDPETTQ",149,0)
 S RCDATE=$$Y4MD^RCDPETTU
"RTN","RCDPETTQ",150,0)
 S RCEFT="01^"_RCTRACE_"^"_RCDATE_"^"_RCAMT_"^"_RCPAYNM_"^"_RCPAYID_"^^"
"RTN","RCDPETTQ",151,0)
 S ^XTMP(RCSUB,"EFT",1)=RCEFT
"RTN","RCDPETTQ",152,0)
 ;
"RTN","RCDPETTQ",153,0)
 Q
"RTN","RCDPETTQ",154,0)
 ;
"RTN","RCDPETTQ",155,0)
GETDATAE(RCDATA,RCEFT)  ;Get data to send into VistA for EFT
"RTN","RCDPETTQ",156,0)
 ;
"RTN","RCDPETTQ",157,0)
 N K,RCAMT,RCDEPN
"RTN","RCDPETTQ",158,0)
 S RCDATA("ERA",1)=$P($T(EFTHDR+1^RCDPETTF),";;",2)
"RTN","RCDPETTQ",159,0)
 S RCDATA("ERA",2)=$P($T(EFTHDR+2^RCDPETTF),";;",2)
"RTN","RCDPETTQ",160,0)
 S RCDATA("ERA",3)=RCEFT
"RTN","RCDPETTQ",161,0)
 S RCDATA("ERA",4)="99^$"
"RTN","RCDPETTQ",162,0)
 S RCDATA("ERA",5)="NNNN"
"RTN","RCDPETTQ",163,0)
 S RCAMT=$P(RCEFT,"^",4)
"RTN","RCDPETTQ",164,0)
 ;
"RTN","RCDPETTQ",165,0)
 ;Total EFT Amount
"RTN","RCDPETTQ",166,0)
 S RCAMT=$$LZ^RCDPETTU(RCAMT,14)
"RTN","RCDPETTQ",167,0)
 S $P(RCDATA("ERA",2),"^",8)=RCAMT
"RTN","RCDPETTQ",168,0)
 ;
"RTN","RCDPETTQ",169,0)
 ;Deposit Number
"RTN","RCDPETTQ",170,0)
 ;if $H = 63229,53304 then RCDEPN = TT2295330
"RTN","RCDPETTQ",171,0)
 S RCDEPN="TT"_$E(+$H,3,5)_$E($P($H,",",2),1,4)
"RTN","RCDPETTQ",172,0)
 W !,"Deposit Number ",RCDEPN,!
"RTN","RCDPETTQ",173,0)
 S $P(RCDATA("ERA",2),"^",6)=RCDEPN
"RTN","RCDPETTQ",174,0)
 ;
"RTN","RCDPETTQ",175,0)
 ;Deposit Date
"RTN","RCDPETTQ",176,0)
 S $P(RCDATA("ERA",2),"^",7)=$P(RCDATA("ERA",3),"^",3)
"RTN","RCDPETTQ",177,0)
 ;
"RTN","RCDPETTQ",178,0)
 Q
"RTN","RCDPETTQ",179,0)
 ;
"RTN","RCDPETTQ",180,0)
ERAHDR ;Template Header for ERA
"RTN","RCDPETTQ",181,0)
 ;;RACUBOTH RUCHMLB0012 2851531-UUUU--RUCHAAR..
"RTN","RCDPETTQ",182,0)
 ;;835ERA^X^20100922^1632^Y^FEDERAL EMPLOYEES HEALTH BENEFIT A COVENTRY HEALTH CARE PLAN^1382242132^20101012031^20100920^0000000040368^830168494^^0007344735^01^Y^004010^CHK^1164471991
"RTN","RCDPETTQ",183,0)
 ;
"RTN","RCDPETTU")
0^70^B117602125
"RTN","RCDPETTU",1,0)
RCDPETTU ; ePayments/CNF, hrubovcak - EDI Testing Tool Utilities ;Jun 06, 2014@19:11:19
"RTN","RCDPETTU",2,0)
 ;;4.5;Accounts Receivable;**298**; 20 Dec 2013;Build 121
"RTN","RCDPETTU",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPETTU",4,0)
 ;
"RTN","RCDPETTU",5,0)
 Q
"RTN","RCDPETTU",6,0)
 ;
"RTN","RCDPETTU",7,0)
ARRAY(RCMSG,RCARRAY) ; Retrieve message object text, put in array
"RTN","RCDPETTU",8,0)
 ;
"RTN","RCDPETTU",9,0)
 ;Input:
"RTN","RCDPETTU",10,0)
 ;  RCMSG - IEN
"RTN","RCDPETTU",11,0)
 ;Output:
"RTN","RCDPETTU",12,0)
 ;  RCARRAY - Array of data
"RTN","RCDPETTU",13,0)
 ;
"RTN","RCDPETTU",14,0)
 N RCDATA,RCX
"RTN","RCDPETTU",15,0)
 D GETS^DIQ(344.81,RCMSG,"**","","RCDATA")
"RTN","RCDPETTU",16,0)
 S RCX=$O(RCDATA(344.81,""))
"RTN","RCDPETTU",17,0)
 M RCARRAY=RCDATA(344.81,RCX,2)
"RTN","RCDPETTU",18,0)
 Q
"RTN","RCDPETTU",19,0)
 ;
"RTN","RCDPETTU",20,0)
COPY(RCTYPE) ; Copy message
"RTN","RCDPETTU",21,0)
 ;Input RCTYPE - ERA, EFT, MRA
"RTN","RCDPETTU",22,0)
 ;
"RTN","RCDPETTU",23,0)
 N DIR,J,RCEEOB,RCEXP,RCMSG,RCOB,RCIEN,X,Y
"RTN","RCDPETTU",24,0)
 S RCIEN=$$SELECT^RCDPETTU(RCTYPE) Q:'(RCIEN>0)
"RTN","RCDPETTU",25,0)
 D ARRAY^RCDPETTU(+RCIEN,.RCEEOB)
"RTN","RCDPETTU",26,0)
 I '$D(RCEEOB) W !,"No lines to copy. Exiting.",! Q
"RTN","RCDPETTU",27,0)
 ;
"RTN","RCDPETTU",28,0)
 ; set to auto-import
"RTN","RCDPETTU",29,0)
 S RCOB("AUTOIMP")=1,RCOB("IEN")=0
"RTN","RCDPETTU",30,0)
 ; user response cannot contain '^'
"RTN","RCDPETTU",31,0)
 S DIR(0)="FOA",DIR("A")=$S(RCTYPE="EFT":"EFT Detail Line",1:"EEOB")_" Description: "
"RTN","RCDPETTU",32,0)
 D ^DIR I Y="" W !,"Description is required. Exiting.",! Q
"RTN","RCDPETTU",33,0)
 S RCOB("XMZ")=0  ; no MM message number
"RTN","RCDPETTU",34,0)
 ;
"RTN","RCDPETTU",35,0)
 S RCOB("XMZ",0)=Y  ; instead of the MM message zero node
"RTN","RCDPETTU",36,0)
 ; create text for a single object
"RTN","RCDPETTU",37,0)
 F J=1:1 Q:'$D(RCEEOB(J))  S RCEXP(1,J)=RCEEOB(J)
"RTN","RCDPETTU",38,0)
 S RCEXP("TYPE")=RCTYPE,RCEXP=1
"RTN","RCDPETTU",39,0)
 D NWOBJ^RCDPETTU(.RCOB,.RCEXP)
"RTN","RCDPETTU",40,0)
 ;
"RTN","RCDPETTU",41,0)
 I '$G(RCOB("IEN")) W !,"* Entry not created! *" Q
"RTN","RCDPETTU",42,0)
 S J=$O(RCOB("IEN",0)) W:J !!,"Created #"_J_" "_$P(^RCY(344.81,J,0),U),!
"RTN","RCDPETTU",43,0)
 ;
"RTN","RCDPETTU",44,0)
 Q
"RTN","RCDPETTU",45,0)
 ;
"RTN","RCDPETTU",46,0)
DEL(RCTYPE) ; delete object
"RTN","RCDPETTU",47,0)
 ;Input RCTYPE - ERA, EFT, MRA
"RTN","RCDPETTU",48,0)
 ;
"RTN","RCDPETTU",49,0)
 N DA,DIR,DIK,RCFLNO,RCIEN,X,Y
"RTN","RCDPETTU",50,0)
 S RCIEN("Y")=$$SELECT^RCDPETTU(RCTYPE),RCIEN=+RCIEN("Y")
"RTN","RCDPETTU",51,0)
 I '(RCIEN>0) W !,"Nothing selected, exiting",! Q
"RTN","RCDPETTU",52,0)
 S RCFLNO=344.81,RCIEN("USER")=$$GET1^DIQ(RCFLNO,RCIEN,.02),RCIEN("WHEN")=$$GET1^DIQ(RCFLNO,RCIEN,.02)
"RTN","RCDPETTU",53,0)
 W !!,"Entry #"_RCIEN_" Name: "_$P(RCIEN("Y"),U,2)
"RTN","RCDPETTU",54,0)
 W !,"Created by: "_RCIEN("USER")_" at "_RCIEN("WHEN"),!
"RTN","RCDPETTU",55,0)
 S DIR(0)="YA",DIR("A")="Delete this entry? ",DIR("B")="NO"
"RTN","RCDPETTU",56,0)
 D ^DIR I 'Y W !,"Nothing deleted." Q
"RTN","RCDPETTU",57,0)
 S DA=RCIEN,DIK="^RCY(344.81," D ^DIK
"RTN","RCDPETTU",58,0)
 W !,"Deleted entry #"_RCIEN
"RTN","RCDPETTU",59,0)
 ;
"RTN","RCDPETTU",60,0)
 Q
"RTN","RCDPETTU",61,0)
 ;
"RTN","RCDPETTU",62,0)
DONOTUSE ;Do Not Use Banner
"RTN","RCDPETTU",63,0)
 ;
"RTN","RCDPETTU",64,0)
 W !!
"RTN","RCDPETTU",65,0)
 W !,"****************************************************************"
"RTN","RCDPETTU",66,0)
 W !,"** Do not use this functionality in a production environment. **"
"RTN","RCDPETTU",67,0)
 W !,"****************************************************************"
"RTN","RCDPETTU",68,0)
 Q
"RTN","RCDPETTU",69,0)
 ;
"RTN","RCDPETTU",70,0)
EDITOBJ(RCNTRY) ; edit entry, RCNTRY - ien in file 344.81
"RTN","RCDPETTU",71,0)
 Q:'($G(RCNTRY)>0)  ; required
"RTN","RCDPETTU",72,0)
 Q:'$D(^RCY(344.81,RCNTRY,0))  ; entry must exist
"RTN","RCDPETTU",73,0)
 ; RCFLDNO - field number
"RTN","RCDPETTU",74,0)
 ; RCIENS - for FileMan calls
"RTN","RCDPETTU",75,0)
 ; RCFLNUM - file number (344.81)
"RTN","RCDPETTU",76,0)
 ; RCTYP - object type
"RTN","RCDPETTU",77,0)
 N RCFLDNO,RCFLNUM,RCIENS,RCTYP
"RTN","RCDPETTU",78,0)
 S RCIENS=RCNTRY_",",RCFLNUM=344.81
"RTN","RCDPETTU",79,0)
 ; exclusive access
"RTN","RCDPETTU",80,0)
 L +^RCY(RCFLNUM,RCNTRY):DILOCKTM E  W !,$C(7)_"Another user is editing this entry." Q
"RTN","RCDPETTU",81,0)
 S RCTYP=$P(^RCY(RCFLNUM,RCNTRY,1),U)  ; no $GET, the 1 node should always exist
"RTN","RCDPETTU",82,0)
 ; use DIR for DD type call
"RTN","RCDPETTU",83,0)
 F RCFLDNO=.01,.05 D
"RTN","RCDPETTU",84,0)
 .N D0,DA,DR,DIC,DIE,DIR,RCDDTXT,RCOLD,RCDIERR,RCRSLT,RCVAL,X,Y
"RTN","RCDPETTU",85,0)
 .; get original value in the field
"RTN","RCDPETTU",86,0)
 .S RCOLD=$$GET1^DIQ(RCFLNUM,RCIENS,RCFLDNO,"","","RCDIERR")
"RTN","RCDPETTU",87,0)
 .D FIELD^DID(RCFLNUM,RCFLDNO,"","LABEL;","RCDDTXT","RCDIERR")  ; field label from DD
"RTN","RCDPETTU",88,0)
 .; user prompt in ^DIR based on object type
"RTN","RCDPETTU",89,0)
 .S DIR(0)=RCFLNUM_","_RCFLDNO_"A",DA=RCNTRY,DIR("A")=$S(RCTYP="EFT":"EFT Detail Line",1:"EEOB")_" "_RCDDTXT("LABEL")_": "
"RTN","RCDPETTU",90,0)
 .I RCFLDNO=.05 S DIR("A")="Name of "_$S(RCTYP="EFT":"EFT Detail Line Grouping: ",1:"EEOB Grouping: ")
"RTN","RCDPETTU",91,0)
 .D ^DIR
"RTN","RCDPETTU",92,0)
 .; prevent embedded '^' in name, deletion not allowed
"RTN","RCDPETTU",93,0)
 .I Y[U!(Y="@") W !,$C(34)_Y_$C(34,7)_" not allowed." S Y=""
"RTN","RCDPETTU",94,0)
 .Q:Y=""  S RCVAL=$$UP(Y)
"RTN","RCDPETTU",95,0)
 .Q:RCVAL=RCOLD  ; don't update if unchanged
"RTN","RCDPETTU",96,0)
 .; validate user response in case ^DIR doesn't catch something
"RTN","RCDPETTU",97,0)
 .D VAL^DIE(RCFLNUM,RCIENS,RCFLDNO,"",RCVAL,.RCRSLT,"","RCDIERR")
"RTN","RCDPETTU",98,0)
 .I RCRSLT=U W !,$C(7)_"Invalid response." Q
"RTN","RCDPETTU",99,0)
 .S DR=RCFLDNO_"///"_RCRSLT,DIE=RCFLNUM,DA=RCNTRY D ^DIE
"RTN","RCDPETTU",100,0)
 ;
"RTN","RCDPETTU",101,0)
 D LOG("File "_RCFLNUM_" entry "_RCNTRY_" updated")
"RTN","RCDPETTU",102,0)
 ; unlock before exit
"RTN","RCDPETTU",103,0)
 L -^RCY(RCFLNUM,RCNTRY)
"RTN","RCDPETTU",104,0)
 Q
"RTN","RCDPETTU",105,0)
 ;
"RTN","RCDPETTU",106,0)
HFSFL ; read HFS file into global, send as MailMan message
"RTN","RCDPETTU",107,0)
 ;
"RTN","RCDPETTU",108,0)
 D DT^DICRW,HOME^%ZIS  ; kernel variables
"RTN","RCDPETTU",109,0)
 N C,DELIM,DIR,FLPATH,FLNM,FLSPEC,J,L,RCBODY,RCSUBJ,RCTO,RCXMZR,X,Y
"RTN","RCDPETTU",110,0)
 ; FLNM - HFS file name
"RTN","RCDPETTU",111,0)
 ; FLSPEC - complete file specification w. path
"RTN","RCDPETTU",112,0)
 ; RCBODY - root of message body
"RTN","RCDPETTU",113,0)
 ; RCSUBJ - message subject
"RTN","RCDPETTU",114,0)
 ; RCTO - recipients
"RTN","RCDPETTU",115,0)
 ; RCXMZR - message number returned
"RTN","RCDPETTU",116,0)
 K ^TMP($J),^TMP("XMERR",$J)
"RTN","RCDPETTU",117,0)
 W !,$J($$NOW,30),!,"Send Host File System file as MailMan message.",!
"RTN","RCDPETTU",118,0)
 ; ask for file specifications.
"RTN","RCDPETTU",119,0)
 S DIR(0)="F^3:245",DIR("A")="File Name",DIR("?")="Enter an HFS file name."
"RTN","RCDPETTU",120,0)
 W ! D ^DIR
"RTN","RCDPETTU",121,0)
 ; no answer, etc.
"RTN","RCDPETTU",122,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPETTU",123,0)
 ;if no file, then quit
"RTN","RCDPETTU",124,0)
 Q:Y=""  S FLSPEC=Y
"RTN","RCDPETTU",125,0)
 ; "\" for Windows, "]" for OpenVMS
"RTN","RCDPETTU",126,0)
 S DELIM=$S(FLSPEC["\":"\",FLSPEC["]":"]",1:"")  ; file name delimiter
"RTN","RCDPETTU",127,0)
 D:DELIM]""  ; parse file spec
"RTN","RCDPETTU",128,0)
 .S L=$L(FLSPEC,DELIM),FLNM=$P(FLSPEC,DELIM,L),FLPATH=$P(FLSPEC,DELIM,1,L-1)
"RTN","RCDPETTU",129,0)
 .S:FLPATH]"" FLPATH=FLPATH_DELIM
"RTN","RCDPETTU",130,0)
 ;
"RTN","RCDPETTU",131,0)
 ; get default directory if no path specified
"RTN","RCDPETTU",132,0)
 S:FLPATH="" FLPATH=$$DEFDIR^%ZISH
"RTN","RCDPETTU",133,0)
 ;
"RTN","RCDPETTU",134,0)
 ; start with line 1 in global specification
"RTN","RCDPETTU",135,0)
 S FLSPEC("POP")=$$FTG^%ZISH(FLPATH,FLNM,$NA(^TMP($J,"RCMSG",1,0)),3)
"RTN","RCDPETTU",136,0)
 I 'FLSPEC("POP") W !!,"Problem opening "_FLSPEC,!,"No action taken."_$C(7),!
"RTN","RCDPETTU",137,0)
 ;
"RTN","RCDPETTU",138,0)
 ;
"RTN","RCDPETTU",139,0)
 ; put file text into FileMan W-P format
"RTN","RCDPETTU",140,0)
 S (J,C)=0 F  S J=$O(^TMP($J,"RCMSG",J)) Q:'J  S X=$G(^(J,0)) D:X]""
"RTN","RCDPETTU",141,0)
 .S C=C+1,^TMP($J,"TXT",C,0)=X
"RTN","RCDPETTU",142,0)
 .I $L(X)>245 W !,"longer than 245"
"RTN","RCDPETTU",143,0)
 ;
"RTN","RCDPETTU",144,0)
 W !!," "_C_" line"_$E("s",'(C=1))_" found",!
"RTN","RCDPETTU",145,0)
 I 'C W !,"No text to send, exiting." Q
"RTN","RCDPETTU",146,0)
 ; send via MailMan
"RTN","RCDPETTU",147,0)
 S RCSUBJ="HFS Message "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCDPETTU",148,0)
 S RCTO(DUZ)=""
"RTN","RCDPETTU",149,0)
 ;
"RTN","RCDPETTU",150,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,$NA(^TMP($J,"TXT")),.RCTO,,.RCXMZR)
"RTN","RCDPETTU",151,0)
 ;
"RTN","RCDPETTU",152,0)
 ;
"RTN","RCDPETTU",153,0)
 I $D(^TMP("XMERR",$J)) D  ; error from MailMan
"RTN","RCDPETTU",154,0)
 .W !,$$NOW,!," MailMan returned an error; check the ^XTMP('RCDPTOOL') log."
"RTN","RCDPETTU",155,0)
 .D LOGARY($NA(^TMP("XMERR",$J)))
"RTN","RCDPETTU",156,0)
 ;
"RTN","RCDPETTU",157,0)
 ;check for success
"RTN","RCDPETTU",158,0)
 I $G(RCXMZR) S X="MailMan Message #"_RCXMZR_" sent" W !,X_" to you.",!,"Subj: "_RCSUBJ,! D LOG(X)
"RTN","RCDPETTU",159,0)
 ;
"RTN","RCDPETTU",160,0)
 Q
"RTN","RCDPETTU",161,0)
 ;
"RTN","RCDPETTU",162,0)
LGZROND ; update zero node for XTMP(log), 3 months (91 days)
"RTN","RCDPETTU",163,0)
 N EXP S EXP=$$HTFM^XLFDT($H+91,1)
"RTN","RCDPETTU",164,0)
 S ^XTMP("RCDPTOOL",0)=EXP_"^"_$$NOW^XLFDT_"^ePayments Testing Tool"
"RTN","RCDPETTU",165,0)
 Q
"RTN","RCDPETTU",166,0)
 ;
"RTN","RCDPETTU",167,0)
LOG(TXT) ; log, save TXT in ^XTMP
"RTN","RCDPETTU",168,0)
 ;
"RTN","RCDPETTU",169,0)
 Q:'$L($G(TXT))
"RTN","RCDPETTU",170,0)
 N H,T S H=$H,T=$$HTFM^XLFDT(H)
"RTN","RCDPETTU",171,0)
 ; ^XTMP("RCDPTOOL","LOG", inverse $horolog, job# , now in FM format) = log text
"RTN","RCDPETTU",172,0)
 S ^XTMP("RCDPTOOL","LOG",-H,$J,T)=TXT
"RTN","RCDPETTU",173,0)
 D LGZROND
"RTN","RCDPETTU",174,0)
 Q
"RTN","RCDPETTU",175,0)
 ;
"RTN","RCDPETTU",176,0)
LOGARY(TXTARY) ; log array in ^XTMP, TXTARY is name of storage location
"RTN","RCDPETTU",177,0)
 Q:'$D(@TXTARY)
"RTN","RCDPETTU",178,0)
 N C,H,LOG,T,V S H=$H,T=$$HTFM^XLFDT(H)
"RTN","RCDPETTU",179,0)
 S C=0,V=TXTARY,LOG=$NA(^XTMP("RCDPTOOL","LOG",-H,$J,T))
"RTN","RCDPETTU",180,0)
 ; ^XTMP("RCDPTOOL","LOG", inverse $horolog, job# , now in FM format, line count) = log text
"RTN","RCDPETTU",181,0)
 F  S V=$Q(@V) Q:V=""  S C=C+1,@LOG@(C,"NM")=V,@LOG@(C,"VAL")=@V
"RTN","RCDPETTU",182,0)
 D LGZROND
"RTN","RCDPETTU",183,0)
 ;
"RTN","RCDPETTU",184,0)
 Q
"RTN","RCDPETTU",185,0)
 ;
"RTN","RCDPETTU",186,0)
LZ(A,L) ;function, pad with leading zeros
"RTN","RCDPETTU",187,0)
 ;A - value to pad
"RTN","RCDPETTU",188,0)
 ;L - total field length
"RTN","RCDPETTU",189,0)
 ;Y - return value
"RTN","RCDPETTU",190,0)
 ;
"RTN","RCDPETTU",191,0)
 N NEG,ZERO,Y
"RTN","RCDPETTU",192,0)
 S NEG=0 S:A<0 NEG=1,A=-A  ;Negative indicator
"RTN","RCDPETTU",193,0)
 I A["." S A=$P(A,".",1)_$P(A,".",2)  ;Remove decimal 
"RTN","RCDPETTU",194,0)
 S $P(ZERO,"0",21)=""  ;Create string of 20 zeros
"RTN","RCDPETTU",195,0)
 S Y=$E(ZERO,1,(L-$L(A)))_A
"RTN","RCDPETTU",196,0)
 I NEG S Y="-"_$E(Y,2,99)  ;remove a zero and add negative sign
"RTN","RCDPETTU",197,0)
 Q Y
"RTN","RCDPETTU",198,0)
 ;
"RTN","RCDPETTU",199,0)
NOW() Q $$HTE^XLFDT($H,"S")  ; extrinsic variable, NOW in external format
"RTN","RCDPETTU",200,0)
 ;
"RTN","RCDPETTU",201,0)
NTRY(T) ; log user entry into an Option
"RTN","RCDPETTU",202,0)
 Q:'$L($G(T))
"RTN","RCDPETTU",203,0)
 D LOG(T_" "_$$GET1^DIQ(200,DUZ_",",.01)_" "_$$NOW) Q
"RTN","RCDPETTU",204,0)
 ;
"RTN","RCDPETTU",205,0)
NWOBJ(RCOB,RCEXP) ; create new object for each EEOB
"RTN","RCDPETTU",206,0)
 ; RCOB - array for new object, required, passed by ref.
"RTN","RCDPETTU",207,0)
 ; RCEXP - parsed EOB text, required, passed by ref.
"RTN","RCDPETTU",208,0)
 ; RCUSRIN - the user's initials from the NEW PERSON file
"RTN","RCDPETTU",209,0)
 S RCOB("IEN")=0  ; count of new entries, new entry IENs stored on RCOB("IEN",new IEN 1), etc.
"RTN","RCDPETTU",210,0)
 N C,J,RCDIERR,RCIENRT,RCIENS,RCINTXT,RCNEW,RCNTR,RCUSRIN,RCWP
"RTN","RCDPETTU",211,0)
 S RCUSRIN=$$STRLSP($$GET1^DIQ(200,DUZ,1))  ; ^DD(200,1,0) = INITIAL
"RTN","RCDPETTU",212,0)
 S C=$$STRLSP($G(RCOB("AUTOTXT")))  ; user may have entered default text
"RTN","RCDPETTU",213,0)
 S RCINTXT=$S($L(C):C,1:$$STRLSP($P(RCOB("XMZ",0),U)))  ; name suffix from MailMan subject for new entry
"RTN","RCDPETTU",214,0)
 ; add user's initials if they're not already there
"RTN","RCDPETTU",215,0)
 I $L(RCUSRIN) I RCUSRIN'=$E(RCINTXT,1,$L(RCUSRIN)) S RCINTXT=RCUSRIN_" "_RCINTXT
"RTN","RCDPETTU",216,0)
 ;
"RTN","RCDPETTU",217,0)
 S RCNTR=0 F  S RCNTR=$O(RCEXP(RCNTR)) Q:'RCNTR  D  ; put EEOB items into file
"RTN","RCDPETTU",218,0)
 .K RCDIERR,RCIENS,RCIENRT,RCWP  ; delete residue
"RTN","RCDPETTU",219,0)
 .; create new entry
"RTN","RCDPETTU",220,0)
 .S RCIENS(344.81,"+1,",.01)=$$UP($E(RCINTXT_" "_RCNTR,1,30))  ; 30 uppercase chars.
"RTN","RCDPETTU",221,0)
 .S RCIENS(344.81,"+1,",.02)=DUZ
"RTN","RCDPETTU",222,0)
 .S RCIENS(344.81,"+1,",.03)=$$NOW^XLFDT
"RTN","RCDPETTU",223,0)
 .S RCIENS(344.81,"+1,",1.01)=RCEXP("TYPE")  ; 3 upper case characters only
"RTN","RCDPETTU",224,0)
 .S RCIENS(344.81,"+1,",1.02)=+$G(RCOB("AUTOIMP"))  ; zero or one for each new object
"RTN","RCDPETTU",225,0)
 .D UPDATE^DIE("","RCIENS","RCIENRT","RCDIERR")
"RTN","RCDPETTU",226,0)
 .D:$D(RCDIERR) LOGARY("RCDIERR")
"RTN","RCDPETTU",227,0)
 .S RCNEW=+$G(RCIENRT(1))  ; new IEN
"RTN","RCDPETTU",228,0)
 .Q:'RCNEW  ; entry not created
"RTN","RCDPETTU",229,0)
 .S RCOB("IEN")=RCOB("IEN")+1,RCOB("IEN",RCNEW)=""
"RTN","RCDPETTU",230,0)
 .S (J,C)=0 F  S J=$O(RCEXP(RCNTR,J)) Q:'J  S C=C+1,RCWP(C,0)=RCEXP(RCNTR,J)  ; w-p format
"RTN","RCDPETTU",231,0)
 .I '$O(RCWP(0)) S RCWP(1,0)="* error: no EEOB found *" ; no w-p text available
"RTN","RCDPETTU",232,0)
 .; add w-p text to new entry
"RTN","RCDPETTU",233,0)
 .K RCDIERR D WP^DIE(344.81,RCNEW_",",2,"","RCWP","RCDIERR")
"RTN","RCDPETTU",234,0)
 .I $D(RCDIERR) D LOGARY("RCDIERR") K RCDIERR
"RTN","RCDPETTU",235,0)
 ;
"RTN","RCDPETTU",236,0)
 Q
"RTN","RCDPETTU",237,0)
 ;
"RTN","RCDPETTU",238,0)
PRSEOB(RSLT,RCTXT) ; parse EEOB text
"RTN","RCDPETTU",239,0)
 ; RSLT - results of parsing, passed by ref.
"RTN","RCDPETTU",240,0)
 ; RCTXT - message text location, FileMan w-p format
"RTN","RCDPETTU",241,0)
 ; on error, RSLT=-1
"RTN","RCDPETTU",242,0)
 K RSLT S RSLT=0
"RTN","RCDPETTU",243,0)
 N BLNUM,BLTXT,ERR,LN,MTYP,Q,R,X,Y
"RTN","RCDPETTU",244,0)
 S Q=$C(34)  ; quote for result text
"RTN","RCDPETTU",245,0)
 ; verify header
"RTN","RCDPETTU",246,0)
 S Y=$G(@RCTXT@(1,0)) S:'($E(Y,1,9)="RACUBOTH ") RSLT=-1,RSLT(-1)="Invalid Message Header"
"RTN","RCDPETTU",247,0)
 Q:RSLT<0
"RTN","RCDPETTU",248,0)
 S Y=$G(@RCTXT@(2,0)),X=$P(Y,U) S:'($E(X,1,3)="835") RSLT=-1,RSLT(-1)="Not 835 Message"
"RTN","RCDPETTU",249,0)
 Q:RSLT<0
"RTN","RCDPETTU",250,0)
 S MTYP=$E(X,4,$L(X)) S:'("^ERA^EOB^EFT^"[(U_MTYP_U)) RSLT=-1,RSLT(-1)="Message Type "_Q_X_Q_" Unknown"
"RTN","RCDPETTU",251,0)
 Q:RSLT<0
"RTN","RCDPETTU",252,0)
 ;
"RTN","RCDPETTU",253,0)
 S ERR=0  ; error flag
"RTN","RCDPETTU",254,0)
 F LN=3:1 Q:ERR!'$D(@RCTXT@(LN,0))  S Y=$G(@RCTXT@(LN,0)) D
"RTN","RCDPETTU",255,0)
 .Q:Y="NNNN"!(Y="99^$")  ; ignore terminators
"RTN","RCDPETTU",256,0)
 .I Y="" S ERR=1,ERR("M")="Null record, line "_LN Q
"RTN","RCDPETTU",257,0)
 .S R=$P(Y,U) I '(R?2N) S ERR=1,ERR("M")="Invalid Record Type "_Q_R_Q_" line "_LN Q
"RTN","RCDPETTU",258,0)
 .I MTYP="ERA" Q:R<5  ; ignore records 01 to 04 in an ERA
"RTN","RCDPETTU",259,0)
 .S BLNUM=$P(Y,U,2)  ; bill number
"RTN","RCDPETTU",260,0)
 .I BLNUM="" S ERR=1,ERR("M")="Bill Number missing in line "_LN Q
"RTN","RCDPETTU",261,0)
 .S BLTXT(BLNUM,LN)=Y  ; save text by bill number
"RTN","RCDPETTU",262,0)
 ;
"RTN","RCDPETTU",263,0)
 I ERR S RSLT=-1,RSLT(-1)=ERR("M") Q  ; parsing error
"RTN","RCDPETTU",264,0)
 ;
"RTN","RCDPETTU",265,0)
 I $O(BLTXT(""))="" S RSLT=-1,RSLT(-1)="No bills found" Q
"RTN","RCDPETTU",266,0)
 ; no errors, assemble results array
"RTN","RCDPETTU",267,0)
 S BLNUM="" F  S BLNUM=$O(BLTXT(BLNUM)) Q:BLNUM=""  D
"RTN","RCDPETTU",268,0)
 .S RSLT=RSLT+1 N J,C S (J,C)=0
"RTN","RCDPETTU",269,0)
 .F  S J=$O(BLTXT(BLNUM,J)) Q:'J  S C=C+1,RSLT(RSLT,C)=BLTXT(BLNUM,J)
"RTN","RCDPETTU",270,0)
 ;
"RTN","RCDPETTU",271,0)
 ; done, add message type to result
"RTN","RCDPETTU",272,0)
 S RSLT("TYPE")=MTYP
"RTN","RCDPETTU",273,0)
 ;
"RTN","RCDPETTU",274,0)
 Q
"RTN","RCDPETTU",275,0)
 ;
"RTN","RCDPETTU",276,0)
SELECT(RCEOBTYP) ; function, select EEOB of type RCEOBTYP
"RTN","RCDPETTU",277,0)
 ; returns Y from FileMan, Y = "ien ^ .01 field"
"RTN","RCDPETTU",278,0)
 ;
"RTN","RCDPETTU",279,0)
 Q:$G(RCEOBTYP)="" ""  ; type is required
"RTN","RCDPETTU",280,0)
 Q:'("^ERA^EFT^MRA^"[(U_RCEOBTYP_U)) ""  ; only these allowed
"RTN","RCDPETTU",281,0)
 N D0,DA,DIC,X,Y
"RTN","RCDPETTU",282,0)
 D NTRY("Selection of "_RCEOBTYP_" type object")
"RTN","RCDPETTU",283,0)
 S DIC=344.81,DIC(0)="AEQ",DIC("A")="Select "_$S(RCEOBTYP="EFT":"EFT Detail Line: ",1:"EEOB Object: ")
"RTN","RCDPETTU",284,0)
 ; EOB TYPE must match, OBJECT STATUS must be non-zero, and there has to be W-P text
"RTN","RCDPETTU",285,0)
 S DIC("S")="N RC S RC=$G(^RCY(344.81,+Y,1)) I $P(RC,U,2),$P(RC,U)=RCEOBTYP,+$O(^RCY(344.81,+Y,2,0))"
"RTN","RCDPETTU",286,0)
 D ^DIC
"RTN","RCDPETTU",287,0)
 Q Y  ; could be -1 on lookup failure
"RTN","RCDPETTU",288,0)
 ;
"RTN","RCDPETTU",289,0)
SELECT1(RCEOBTYP) ; function, select EEOB description of type RCEOBTYP
"RTN","RCDPETTU",290,0)
 ; returns Y from FileMan, Y = "ien ^ .01 field"
"RTN","RCDPETTU",291,0)
 ;
"RTN","RCDPETTU",292,0)
 Q:$G(RCEOBTYP)="" ""  ; type is required
"RTN","RCDPETTU",293,0)
 Q:'("^ERA^EFT^MRA^"[(U_RCEOBTYP_U)) ""  ; only these allowed
"RTN","RCDPETTU",294,0)
 N D,D0,DA,DIC,X,Y
"RTN","RCDPETTU",295,0)
 D NTRY("Selection of "_RCEOBTYP_" type object")
"RTN","RCDPETTU",296,0)
 S DIC="^RCY(344.81,",DIC(0)="AEQ",DIC("B")="",D="C"
"RTN","RCDPETTU",297,0)
 S DIC("A")="Select Name of "_$S(RCEOBTYP="EFT":"EFT Detail Line Grouping: ",1:"EEOB Grouping: ")
"RTN","RCDPETTU",298,0)
 D IX^DIC
"RTN","RCDPETTU",299,0)
 Q Y  ; could be -1 on lookup failure
"RTN","RCDPETTU",300,0)
 ;
"RTN","RCDPETTU",301,0)
STRLSP(A) ; function, strip leading spaces
"RTN","RCDPETTU",302,0)
 Q:$E($G(A))'=" " A  ; nothing to strip
"RTN","RCDPETTU",303,0)
 F  Q:'($E(A)=" ")  S A=$E(A,2,$L(A))
"RTN","RCDPETTU",304,0)
 Q A
"RTN","RCDPETTU",305,0)
 ;
"RTN","RCDPETTU",306,0)
UP(A) Q $TR(A,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCDPETTU",307,0)
 ;
"RTN","RCDPETTU",308,0)
Y4MD() Q 17000000+$$DT^XLFDT  ; today as YYYYMMDD
"RTN","RCDPETTU",309,0)
 ;
"RTN","RCDPEUPO")
0^63^B40462165
"RTN","RCDPEUPO",1,0)
RCDPEUPO ;ALBANY/KML - Unposted EFT Override ;Jun 06, 2014@19:11:19
"RTN","RCDPEUPO",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEUPO",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEUPO",4,0)
 Q
"RTN","RCDPEUPO",5,0)
 ;
"RTN","RCDPEUPO",6,0)
 ; prca*4.5*298 - procedures built to implement the Unposted EFT Override option
"RTN","RCDPEUPO",7,0)
 ;
"RTN","RCDPEUPO",8,0)
EN ;  Display warning message when aged, unposted EFTs exist
"RTN","RCDPEUPO",9,0)
 N MSG
"RTN","RCDPEUPO",10,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE AGED PMT",DUZ)
"RTN","RCDPEUPO",11,0)
 I 'MSG(0) D NOENTRY Q
"RTN","RCDPEUPO",12,0)
 N AGEDEFTS
"RTN","RCDPEUPO",13,0)
 S AGEDEFTS=$$GETEFTS^RCDPEWLP("B",1)  ; need to examine both medical and pharmacy EFTs
"RTN","RCDPEUPO",14,0)
 D DMSGS(AGEDEFTS)
"RTN","RCDPEUPO",15,0)
 Q
"RTN","RCDPEUPO",16,0)
 ;
"RTN","RCDPEUPO",17,0)
DMSGS(CODES) ; display warning/error messages (if any)
"RTN","RCDPEUPO",18,0)
 ;
"RTN","RCDPEUPO",19,0)
 ;          Input - CODES = 1P - error condition for aged, unposted pharmacy EFTs
"RTN","RCDPEUPO",20,0)
 ;                        = 2P - warning condition for aged,unposted medical EFTs
"RTN","RCDPEUPO",21,0)
 ;                        = 3P  - Override exists for aged, unposted pharmacy EFTs
"RTN","RCDPEUPO",22,0)
 ;                        = 1M - error condition for aged, unposted medical EFTs
"RTN","RCDPEUPO",23,0)
 ;                        = 2M - warning condition for aged, unposted medical EFTs
"RTN","RCDPEUPO",24,0)
 ;                        = 3M  - Override exists for aged, unposted medical EFTs
"RTN","RCDPEUPO",25,0)
 ;                        = 0  - there exist no error or warning conditions
"RTN","RCDPEUPO",26,0)
 ;  possible values for CODES = "1P" or "2P" or "3P" or "1M" or "2M" or "3M" or "1P^1M" or "1P^2M" or"
"RTN","RCDPEUPO",27,0)
 ;                               "1P^3M" or "2P^1M" or "2P^2M" or "2P^3M" or "3P^1M" or "3P^2M" or "3P^3M"
"RTN","RCDPEUPO",28,0)
 I 'CODES D NONE Q
"RTN","RCDPEUPO",29,0)
 N DAYSLIMT,DIR,ERROR,I,LN,MSGTXT,OVERRIDE,STATE,TYPE,X,Y
"RTN","RCDPEUPO",30,0)
 S LN=3
"RTN","RCDPEUPO",31,0)
 S (OVERRIDE,ERROR)=0
"RTN","RCDPEUPO",32,0)
 S DIR("A",1)="Current Warning and/or Error messages for Unposted EFTs:"
"RTN","RCDPEUPO",33,0)
 S DIR("A",2)=" "
"RTN","RCDPEUPO",34,0)
 F I=1:1 S STATE=$P(CODES,U,I) Q:STATE=""  D
"RTN","RCDPEUPO",35,0)
 . I $E(STATE,1)=1 D  ; 1 = ERROR condition
"RTN","RCDPEUPO",36,0)
 . . S ERROR=1,TYPE=$G(TYPE)_$E(STATE,2)
"RTN","RCDPEUPO",37,0)
 . . S DAYSLIMT=$$GET1^DIQ(344.61,1,$S($E(STATE,2)="M":.06,1:.07))   ; number of days an EFT can age before post prevention rules apply
"RTN","RCDPEUPO",38,0)
 . . S DIR("A",LN)="ERROR: Unposted "_$S($E(STATE,2)="P":"pharmacy ",1:"medical ")_"EFTs exist that are more than "_DAYSLIMT_" days old." S LN=LN+1
"RTN","RCDPEUPO",39,0)
 . . S DIR("A",LN)="Scratchpad creation is not allowed for newer payments." S LN=LN+1
"RTN","RCDPEUPO",40,0)
 . . S DIR("A",LN)=" " S LN=LN+1
"RTN","RCDPEUPO",41,0)
 . I $E(STATE,1)=2 D  ; 2 = warning condition
"RTN","RCDPEUPO",42,0)
 . . S DIR("A",LN)="WARNING: Unposted "_$S($E(STATE,2)="P":"pharmacy ",1:"medical ")_"EFTs exist that are more than "_$S($E(STATE,2)="P":21,1:14)_" days old." S LN=LN+1
"RTN","RCDPEUPO",43,0)
 . . S DIR("A",LN)=" " S LN=LN+1
"RTN","RCDPEUPO",44,0)
 . I $E(STATE,1)=3 D  ;OVERRIDE condition
"RTN","RCDPEUPO",45,0)
 . . S OVERRIDE=OVERRIDE+1
"RTN","RCDPEUPO",46,0)
 . . S DIR("A",LN)="An Override for "_$S($E(STATE,2)="P":"pharmacy ",1:"medical ")_"is already in place." S LN=LN+1
"RTN","RCDPEUPO",47,0)
 . . S DIR("A",LN)=" "
"RTN","RCDPEUPO",48,0)
 I OVERRIDE=2 S DIR(0)="EA",DIR("A")="Press ENTER to continue: " D ^DIR Q
"RTN","RCDPEUPO",49,0)
 I ERROR D
"RTN","RCDPEUPO",50,0)
 . M MSGTXT=DIR("A")
"RTN","RCDPEUPO",51,0)
 . S DIR(0)="YA",DIR("A",LN)="An override will allow unrestricted scratchpad creation for one day."
"RTN","RCDPEUPO",52,0)
 . S DIR("A")="Do you want to continue (Y/N)? " D ^DIR
"RTN","RCDPEUPO",53,0)
 . Q:'Y
"RTN","RCDPEUPO",54,0)
 . S OVERRIDE=$$OVERRIDE(TYPE,.MSGTXT)
"RTN","RCDPEUPO",55,0)
 . I OVERRIDE D MAIL(.MSGTXT)
"RTN","RCDPEUPO",56,0)
 I 'ERROR D
"RTN","RCDPEUPO",57,0)
 . S DIR(0)="EA",DIR("A",LN)="There are no error conditions to override.",LN=LN+1
"RTN","RCDPEUPO",58,0)
 . S DIR("A",LN)=" ",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",59,0)
 . D ^DIR
"RTN","RCDPEUPO",60,0)
 Q
"RTN","RCDPEUPO",61,0)
 ;
"RTN","RCDPEUPO",62,0)
OVERRIDE(TYPE,TEXT) ; when ERROR state exists, perform the Override
"RTN","RCDPEUPO",63,0)
 ;
"RTN","RCDPEUPO",64,0)
 ;   Input - TYPE = "M" (medical); "P" (phamacy); "PM" or "MP"(aged, unposted EFTs exist for both medical and pharmacy claims)
"RTN","RCDPEUPO",65,0)
 ;           TEXT = warning and/or error statements; passed by reference
"RTN","RCDPEUPO",66,0)
 ;   Output - DONE = 1 - OVERRIDE was performed;  0 - Override was not performed
"RTN","RCDPEUPO",67,0)
 ;            TEXT = additional text to be displayed with warning and/or error statements; contents of TEXT array will be in the body of the mail message ( refer to MAIL tag)
"RTN","RCDPEUPO",68,0)
 ;
"RTN","RCDPEUPO",69,0)
 N DIR,DONE,DTTM,RCDFDA,REASON,X1,Y,DUOUT,DIRUT
"RTN","RCDPEUPO",70,0)
 L +^RCY(344.61,1,0):DILOCKTM E  D NOLOCK S DONE=0 G OVERQ
"RTN","RCDPEUPO",71,0)
 S DONE=1
"RTN","RCDPEUPO",72,0)
 I TYPE="P"!(TYPE="M") D
"RTN","RCDPEUPO",73,0)
 . S DIR(0)="EA",DIR("A",1)="An Override now exists for posting "_$S(TYPE="P":"pharmacy ",1:"medical ")_"payments."
"RTN","RCDPEUPO",74,0)
 . S DIR("A",2)=" "
"RTN","RCDPEUPO",75,0)
 . S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",76,0)
 . D ^DIR
"RTN","RCDPEUPO",77,0)
 I TYPE="PM"!(TYPE="MP") D  I 'DONE G OVERQ
"RTN","RCDPEUPO",78,0)
 . S DIR(0)="SA^M:Medical;P:Pharmacy",DIR("A")="Override for (M)edical or (P)harmacy? "
"RTN","RCDPEUPO",79,0)
 . D ^DIR
"RTN","RCDPEUPO",80,0)
 . I $D(DUOUT)!($D(DIRUT)) S DONE=0 Q
"RTN","RCDPEUPO",81,0)
 . S TYPE=Y
"RTN","RCDPEUPO",82,0)
 W ! K DIR
"RTN","RCDPEUPO",83,0)
 S DIR("A")="Reason for Override: ",DIR(0)="FA^1:50"
"RTN","RCDPEUPO",84,0)
 D ^DIR
"RTN","RCDPEUPO",85,0)
 I $D(DUOUT)!($D(DIRUT)) S DONE=0 W !!,"   Need to enter a reason for Override.",!,"   Override not performed.",! G OVERQ
"RTN","RCDPEUPO",86,0)
 S REASON=Y,DTTM=$$NOW^XLFDT
"RTN","RCDPEUPO",87,0)
 S RCDFDA(344.61,"1,",$S(TYPE="M":20,1:21))=DTTM
"RTN","RCDPEUPO",88,0)
 S RCDFDA(344.61,"1,",$S(TYPE="M":22,1:23))=DUZ
"RTN","RCDPEUPO",89,0)
 S RCDFDA(344.61,"1,",$S(TYPE="M":24,1:25))=REASON
"RTN","RCDPEUPO",90,0)
 D FILE^DIE("","RCDFDA")
"RTN","RCDPEUPO",91,0)
 S X1="" S X1=$O(TEXT(X1),-1)
"RTN","RCDPEUPO",92,0)
 S X1=X1+1
"RTN","RCDPEUPO",93,0)
 S TEXT(X1)=$S(TYPE="M":"Medical ",1:"Pharmacy ")_"Override Details",X1=X1+1
"RTN","RCDPEUPO",94,0)
 S TEXT(X1)="User: "_$P($G(^VA(200,DUZ,0)),"^") S X1=X1+1
"RTN","RCDPEUPO",95,0)
 S TEXT(X1)="Date/Time: "_DTTM
"RTN","RCDPEUPO",96,0)
 S TEXT(X1)="Reason for Override: "_REASON
"RTN","RCDPEUPO",97,0)
OVERQ ;
"RTN","RCDPEUPO",98,0)
 L -^RCY(344.61,1,0)
"RTN","RCDPEUPO",99,0)
 Q DONE
"RTN","RCDPEUPO",100,0)
 ;
"RTN","RCDPEUPO",101,0)
MAIL(TEXT) ;generate mail message when OVERRIDE is implemented
"RTN","RCDPEUPO",102,0)
 ;  
"RTN","RCDPEUPO",103,0)
 ;  input - TEXT = lines of text that represent the body of the mail message
"RTN","RCDPEUPO",104,0)
 ;
"RTN","RCDPEUPO",105,0)
 N ARRAY,CNT,CNT1,GLB,RCPROG1,SBJ,SUB
"RTN","RCDPEUPO",106,0)
 S RCPROG1="RCDUPEO",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEUPO",107,0)
 ;
"RTN","RCDPEUPO",108,0)
 ;Build header
"RTN","RCDPEUPO",109,0)
 S SUB="EFT" K @GLB
"RTN","RCDPEUPO",110,0)
 S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-Unposted EFTs Override "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCDPEUPO",111,0)
 M @GLB=TEXT
"RTN","RCDPEUPO",112,0)
 N XMDUZ,XMINSTR,XMSUB,XMTEXT,XMY
"RTN","RCDPEUPO",113,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE AUDIT")=""
"RTN","RCDPEUPO",114,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEUPO",115,0)
 S XMINSTR("FLAGS")="P"
"RTN","RCDPEUPO",116,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEUPO",117,0)
 Q
"RTN","RCDPEUPO",118,0)
 ;
"RTN","RCDPEUPO",119,0)
CHECK(TYPE,OVERRIDE) ; determine if override exists for today's date
"RTN","RCDPEUPO",120,0)
 ; 
"RTN","RCDPEUPO",121,0)
 ;    input - TYPE = "M" for medical; "P" for Pharmacy
"RTN","RCDPEUPO",122,0)
 ;             OVERRIDE = passed by reference; array to hold the OVERRIDE data
"RTN","RCDPEUPO",123,0)
 ;    output - OVERRIDE = returned array holding existing OVERRIDE data
"RTN","RCDPEUPO",124,0)
 K OVERRIDE
"RTN","RCDPEUPO",125,0)
 S OVERRIDE(TYPE)=+$$GET1^DIQ(344.61,1,$S(TYPE="M":20,1:21),"I")  ; get MEDICAL EFT OVERRIDE (344.61, 20) or PHARMACY EFT OVERRIDE (344.61, 21) dependent on type of EFTs
"RTN","RCDPEUPO",126,0)
 I 'OVERRIDE(TYPE) K OVERRIDE(TYPE) S OVERRIDE=0 Q
"RTN","RCDPEUPO",127,0)
 I $P(OVERRIDE(TYPE),".")'=DT K OVERRIDE(TYPE)  S OVERRIDE=0 Q  ; override does not exist for 'TODAYS' date,  post prevention rules will apply
"RTN","RCDPEUPO",128,0)
 S OVERRIDE=1 Q
"RTN","RCDPEUPO",129,0)
 ;
"RTN","RCDPEUPO",130,0)
NONE ; the system does not have any aged, unposted EFTs
"RTN","RCDPEUPO",131,0)
 N DIR
"RTN","RCDPEUPO",132,0)
 S DIR(0)="EA"
"RTN","RCDPEUPO",133,0)
 S DIR("A",1)="The sytem does not have any aged, unposted EFTs."
"RTN","RCDPEUPO",134,0)
 S DIR("A",2)="Therefore, no error conditions to override."
"RTN","RCDPEUPO",135,0)
 S DIR("A",3)=" "
"RTN","RCDPEUPO",136,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",137,0)
 D ^DIR
"RTN","RCDPEUPO",138,0)
 Q
"RTN","RCDPEUPO",139,0)
 ;
"RTN","RCDPEUPO",140,0)
NOACTION ; OVERRIDE already exists
"RTN","RCDPEUPO",141,0)
 N DIR
"RTN","RCDPEUPO",142,0)
 S DIR(0)="EA"
"RTN","RCDPEUPO",143,0)
 S DIR("A",1)="An Override for "_$S(TYPE="P":"pharmacy ",1:"medical ")_"is already in place."
"RTN","RCDPEUPO",144,0)
 S DIR("A",2)="No action needed"
"RTN","RCDPEUPO",145,0)
 S DIR("A",3)=" "
"RTN","RCDPEUPO",146,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",147,0)
 D ^DIR
"RTN","RCDPEUPO",148,0)
 Q
"RTN","RCDPEUPO",149,0)
 ;
"RTN","RCDPEUPO",150,0)
NOENTRY ;  user is not authorized to use the option
"RTN","RCDPEUPO",151,0)
 N DIR
"RTN","RCDPEUPO",152,0)
 S DIR(0)="EA"
"RTN","RCDPEUPO",153,0)
 S DIR("A",1)="You are not authorized to use this option."
"RTN","RCDPEUPO",154,0)
 S DIR("A",2)="This option is locked with RCDPE AGED PMT key."
"RTN","RCDPEUPO",155,0)
 S DIR("A",3)=" "
"RTN","RCDPEUPO",156,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",157,0)
 D ^DIR
"RTN","RCDPEUPO",158,0)
 Q
"RTN","RCDPEUPO",159,0)
 ;
"RTN","RCDPEUPO",160,0)
NOLOCK ; entry at 344.61 cannot be locked
"RTN","RCDPEUPO",161,0)
 N DIR
"RTN","RCDPEUPO",162,0)
 S DIR(0)="EA"
"RTN","RCDPEUPO",163,0)
 S DIR("A",1)="Another user is editing the Override Parameters."
"RTN","RCDPEUPO",164,0)
 S DIR("A",2)="Try again later."
"RTN","RCDPEUPO",165,0)
 S DIR("A",3)=" "
"RTN","RCDPEUPO",166,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEUPO",167,0)
 D ^DIR
"RTN","RCDPEUPO",168,0)
 Q
"RTN","RCDPEUPO",169,0)
 ;
"RTN","RCDPEV")
0^3^B38492428
"RTN","RCDPEV",1,0)
RCDPEV ;ALB/TMK - EDI LOCKBOX WORKLIST VERIFY PAYMENTS ;Sep 15, 2014@14:36:22
"RTN","RCDPEV",2,0)
 ;;4.5;Accounts Receivable;**208,138,298**;Mar 20, 1995;Build 121
"RTN","RCDPEV",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEV",4,0)
 Q
"RTN","RCDPEV",5,0)
 ;
"RTN","RCDPEV",6,0)
AUTOVER(RCSCR) ; Entrypoint to auto-verify an ERA worklist
"RTN","RCDPEV",7,0)
 ; RCSCR = ien of the ERA worklist entry in file 344.49
"RTN","RCDPEV",8,0)
 N Z,Z0,Z00,RC399,RC430,RC3444,RC36112,X,X1,X2,X12,DA,DR,DIE
"RTN","RCDPEV",9,0)
 S Z=0 F  S Z=$O(^RCY(344.49,Z)) Q:'Z  S Z0=0 F  S Z0=$O(^RCY(344.49,Z,1,Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,7) S Z00=$G(^(0)) D
"RTN","RCDPEV",10,0)
 . I $$VER(RCSCR,+$P(Z00,U,7),+$P(Z00,U,9)) S DA(1)=RCSCR,DA=Z0,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEV",11,0)
 ;
"RTN","RCDPEV",12,0)
 Q
"RTN","RCDPEV",13,0)
 ;
"RTN","RCDPEV",14,0)
VER(RCSCR,RCBILL,RCREF,F1) ; Run verif for WL entry RCSCR in file 344.49
"RTN","RCDPEV",15,0)
 ;  RCBILL = ien of claim in file 430
"RTN","RCDPEV",16,0)
 ;  RCREF = the entry referenced in subfile file 344.41
"RTN","RCDPEV",17,0)
 ;  F1 = flag if set = 1 will return all data, regardless of if it
"RTN","RCDPEV",18,0)
 ;        matches or not.  If flag is set to 1 and data doesn't match,
"RTN","RCDPEV",19,0)
 ;        an asterisk (*) will preceed the actual data value in the
"RTN","RCDPEV",20,0)
 ;        corresponding piece
"RTN","RCDPEV",21,0)
 ; Function returns the following data:
"RTN","RCDPEV",22,0)
 ;   '^' piece 1: 1 if verfied OK   0 if not
"RTN","RCDPEV",23,0)
 ;   '^' piece 2: patient name from VistA if mismatch
"RTN","RCDPEV",24,0)
 ;   '^' piece 3: patient name from EEOB if mismatch
"RTN","RCDPEV",25,0)
 ;   '^' piece 4: amt billed from VistA if mismatch
"RTN","RCDPEV",26,0)
 ;   '^' piece 5: amt billed from EEOB if mismatch
"RTN","RCDPEV",27,0)
 ;   '^' piece 6: date of service 'from' from VistA if mismatch
"RTN","RCDPEV",28,0)
 ;   '^' piece 7: date of service 'from' from EEOB if mismatch
"RTN","RCDPEV",29,0)
 ;   '^' piece 8: date of service 'to' from VistA if mismatch
"RTN","RCDPEV",30,0)
 ;   '^' piece 9: date of service 'to' from EEOB if mismatch
"RTN","RCDPEV",31,0)
 ;   '^' piece 10: patient SSN from VistA
"RTN","RCDPEV",32,0)
 ;
"RTN","RCDPEV",33,0)
 N RESULT,SETF1,RC430,RC399,RC3444,RC36112,X,X1,X2,X12,NM,NM1,DTOK,SSN,RC43013
"RTN","RCDPEV",34,0)
 S RESULT=1,SETF1=$S($G(F1):"*",1:"")
"RTN","RCDPEV",35,0)
 S RC430=$G(^PRCA(430,RCBILL,0)),RC43013=$G(^(13))
"RTN","RCDPEV",36,0)
 S RC399=$G(^DGCR(399,RCBILL,0))
"RTN","RCDPEV",37,0)
 S RC3444=$G(^RCY(344.4,RCSCR,1,RCREF,0))
"RTN","RCDPEV",38,0)
 S RC36112=$G(^IBM(361.1,+$P(RC3444,U,2),2))
"RTN","RCDPEV",39,0)
 ;
"RTN","RCDPEV",40,0)
 S NM=$P($G(^DPT(+$P(RC399,U,2),0)),U),X=$E($P(NM,","),1,5) ; Name from VistA
"RTN","RCDPEV",41,0)
 S SSN=$P($G(^DPT(+$P(RC399,U,2),0)),U,9)
"RTN","RCDPEV",42,0)
 S NM1=$P(RC3444,U,15),X1=$E($P(NM1,","),1,5) ; from EEOB
"RTN","RCDPEV",43,0)
 S X=$$UP^XLFSTR(X),X1=$$UP^XLFSTR(X1)  ; prca*4.5*298   verification cannot be case sensitive
"RTN","RCDPEV",44,0)
 I $G(F1),X1=X S $P(RESULT,U,2)=NM,$P(RESULT,U,3)=NM1
"RTN","RCDPEV",45,0)
 I X1'=X S $P(RESULT,U)=0,$P(RESULT,U,2)=SETF1_NM,$P(RESULT,U,3)=SETF1_NM1
"RTN","RCDPEV",46,0)
 ;
"RTN","RCDPEV",47,0)
 S X=$P(RC430,U,3)+$P(RC43013,U)+$P(RC43013,U,2) ; Amount billed from VistA (including MRA totals)
"RTN","RCDPEV",48,0)
 S X1=$P(RC36112,U,4) ; from EEOB
"RTN","RCDPEV",49,0)
 I $G(F1),+X=+X1 S $P(RESULT,U,4)=X,$P(RESULT,U,5)=X1
"RTN","RCDPEV",50,0)
 I +X'=+X1 S $P(RESULT,U)=0,$P(RESULT,U,4)=SETF1_X,$P(RESULT,U,5)=SETF1_X1
"RTN","RCDPEV",51,0)
 ;
"RTN","RCDPEV",52,0)
 S X=$P($G(^DGCR(399,+RCBILL,"U")),U) ; Date of service from VistA
"RTN","RCDPEV",53,0)
 S X2=$P($G(^DGCR(399,+RCBILL,"U")),U,2)
"RTN","RCDPEV",54,0)
 S X1=$P($G(^IBM(361.1,+$P(RC3444,U,2),1)),U,10) ; from EEOB
"RTN","RCDPEV",55,0)
 S X12=$P($G(^IBM(361.1,+$P(RC3444,U,2),1)),U,11)
"RTN","RCDPEV",56,0)
 ; if no date of service on EEOB, skip the check
"RTN","RCDPEV",57,0)
 ; Date of svc on EEOB must fall into date range for svc dates in VistA
"RTN","RCDPEV",58,0)
 S DTOK=0
"RTN","RCDPEV",59,0)
 I X1 D
"RTN","RCDPEV",60,0)
 . I X1=X S DTOK=1
"RTN","RCDPEV",61,0)
 . I 'DTOK,X1>X S:X1'>X2 DTOK=1
"RTN","RCDPEV",62,0)
 . I 'DTOK,X1<X S:X12'<X DTOK=1
"RTN","RCDPEV",63,0)
 . I 'DTOK S $P(RESULT,U)=0,$P(RESULT,U,6)=SETF1_X,$P(RESULT,U,7)=SETF1_X1,$P(RESULT,U,8)=SETF1_X2,$P(RESULT,U,9)=SETF1_X12 Q
"RTN","RCDPEV",64,0)
 I DTOK,$G(F1) S $P(RESULT,U,6)=X,$P(RESULT,U,7)=X1,$P(RESULT,U,8)=X2,$P(RESULT,U,9)=X12
"RTN","RCDPEV",65,0)
 S $P(RESULT,U,10)=SSN
"RTN","RCDPEV",66,0)
 ;
"RTN","RCDPEV",67,0)
VERQ Q RESULT
"RTN","RCDPEV",68,0)
 ;
"RTN","RCDPEV",69,0)
MVER(RCERA) ; Manually mark an EEOB as verified
"RTN","RCDPEV",70,0)
 N A,CT,DA,DIE,DR,DTOUT,DUOUT,Z,Z0,Z1,RCT,RCY,RCY0,RCZ0,RCLINE,RCYNUM,DIR,X,Y,RESULT,SPLIT,Q,Q0,DT1,DT2
"RTN","RCDPEV",71,0)
 S RCT=0,CT=1
"RTN","RCDPEV",72,0)
 F Z1=1:1 S Z=$G(^TMP("RCDPE-EOB_WLDX",$J,Z1)) Q:Z=""  Q:CT'<100  S Z0=$G(^RCY(344.49,RCERA,1,+$P(Z,U,2),0)) I Z0'="",'$P(Z0,U,13) S RCT=RCT+1 D  Q:CT'<100
"RTN","RCDPEV",73,0)
 . S CT=CT+1 I CT<100 D  Q
"RTN","RCDPEV",74,0)
 .. S:RCT=1 RCT(1)=Z1
"RTN","RCDPEV",75,0)
 .. S DIR("?",CT)="  "_$G(^TMP("RCDPE-EOB_WL",$J,+Z,0)),CT=CT+1,DIR("?",CT)=$J("",10)_$P(Z0,U,2)
"RTN","RCDPEV",76,0)
 .. S Q=+Z0
"RTN","RCDPEV",77,0)
 .. I $O(^RCY(344.49,RCERA,1,"B",Q_".9999"),-1)'=(Q_".001")
"RTN","RCDPEV",78,0)
 .. I $O(^RCY(344.49,RCERA,1,"B",Q_".9999"),-1)'=(Q_".001") S DIR("?",CT)=DIR("?",CT)_" (LINE HAS BEEN SPLIT)"
"RTN","RCDPEV",79,0)
 . K DIR("?")
"RTN","RCDPEV",80,0)
 ;
"RTN","RCDPEV",81,0)
 I 'RCT D  Q
"RTN","RCDPEV",82,0)
 . S DIR(0)="EA",DIR("A",1)="ALL EEOBS HAVE ALREADY BEEN VERIFIED IN THIS "_$S($G(^TMP("RCBATCH_SELECTED",$J)):"BATCH",1:"ERA"),DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEV",83,0)
 ;
"RTN","RCDPEV",84,0)
 I RCT<100 S DIR("?",1)="THE FOLLOWING EEOB LINE(S) "_$S($G(^TMP("RCBATCH_SELECTED",$J)):"IN THIS BATCH ",1:"")_"ARE NOT VERIFIED"
"RTN","RCDPEV",85,0)
 I RCT'<100 S DIR("?",1)="THERE ARE TOO MANY EEOB ENTRIES NOT VERIFIED TO LIST",DIR("?",2)="PRINT THE UNVERIFIED DISCREPANCY REPORT TO GET A LIST OF POSSIBLE CHOICES"
"RTN","RCDPEV",86,0)
 S DIR("?")=" "
"RTN","RCDPEV",87,0)
 S DIR(0)="NA^1:"_($O(^TMP("RCDPE-EOB_WLDX",$J,""),-1)\1),DIR("A")="SELECT AN EEOB LINE TO MARK AS VERIFIED: "
"RTN","RCDPEV",88,0)
 I RCT=1 S DIR("B")=RCT(1)
"RTN","RCDPEV",89,0)
 W ! D ^DIR K DIR
"RTN","RCDPEV",90,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="") Q
"RTN","RCDPEV",91,0)
 I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEV",92,0)
 S RCY=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,Y)),U,2),RCLINE=+^(Y),RCYNUM=+Y
"RTN","RCDPEV",93,0)
 S RCY0=$G(^RCY(344.49,RCERA,1,RCY,0))
"RTN","RCDPEV",94,0)
 I $P(RCY0,U,13) D  Q
"RTN","RCDPEV",95,0)
 . S DIR(0)="EA",DIR("A",1)="THIS LINE IS ALREADY VERIFIED",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEV",96,0)
 S RCZ0=$G(^RCY(344.4,RCERA,1,+$P(RCY0,U,9),0))
"RTN","RCDPEV",97,0)
 I '$P(RCZ0,U,2) D
"RTN","RCDPEV",98,0)
 . W !!,"THIS LINE DOES NOT REFERENCE A VALID BILL"
"RTN","RCDPEV",99,0)
 E  D
"RTN","RCDPEV",100,0)
 . S RESULT=$$VER(RCERA,+$G(^IBM(361.1,+$P(RCZ0,U,2),0)),+$P(RCY0,U,9),1)
"RTN","RCDPEV",101,0)
 . F Z=2:1:9 I $E($P(RESULT,U,Z))="*" S Q=$P(RESULT,U,Z),$E(Q,1)="",$P(RESULT,U,Z)=Q
"RTN","RCDPEV",102,0)
 . S SPLIT=$O(^RCY(344.49,RCERA,1,"B",+RCY0_".9999"),-1)'=(+RCY0_".0001")
"RTN","RCDPEV",103,0)
 . S Z=$S(SPLIT:"CLAIM #'s: ",1:"  CLAIM #: ")
"RTN","RCDPEV",104,0)
 . S Z=Z_$P(RCY0,U,2)_$S('SPLIT:"",1:" (ORIGINAL ERA DATA)")
"RTN","RCDPEV",105,0)
 . I SPLIT D
"RTN","RCDPEV",106,0)
 .. S Q=+RCY0 F  S Q=$O(^RCY(344.49,RCERA,1,"B",Q)) Q:(Q\1)'=+RCY0  S Q0=+$O(^RCY(344.49,RCERA,1,"B",Q,0)),Q0=$G(^RCY(344.49,RCERA,1,Q0,0)) I $P(Q0,U,2)'="" S Z=Z_" "_$P(Q0,U,2)
"RTN","RCDPEV",107,0)
 . W !!!,Z
"RTN","RCDPEV",108,0)
 . W !,?13,"PATIENT NAME"_$J("",18)_"  SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEV",109,0)
 . W !,?13,"------------------------------  ---------------  -----------------"
"RTN","RCDPEV",110,0)
 . S DT1=$E($S($P(RESULT,U,7):$$FMTE^XLFDT($P(RESULT,U,7),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEV",111,0)
 . S DT2=$E($S($P(RESULT,U,9):"-"_$$FMTE^XLFDT($P(RESULT,U,9),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEV",112,0)
 . W !,"   ERA DATA: ",$E($P(RESULT,U,3)_$J("",30),1,30),"  ",$E($J($P(RESULT,U,5),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEV",113,0)
 . W !,?15,$P($G(^RCY(344,RCERA,0)),U,6)
"RTN","RCDPEV",114,0)
 . S DT1=$E($S($P(RESULT,U,6):$$FMTE^XLFDT($P(RESULT,U,6),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEV",115,0)
 . S DT2=$E($S($P(RESULT,U,8):"-"_$$FMTE^XLFDT($P(RESULT,U,8),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEV",116,0)
 . W !,"  BILL DATA: "_$E($P(RESULT,U,2)_$J("",30),1,30)_"  "_$E($J($P(RESULT,U,4),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEV",117,0)
 . W !,?15,$P($G(^DIC(36,+$P(RCZ0,U,4),0)),U),!
"RTN","RCDPEV",118,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO MARK THIS LINE VERIFIED? ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEV",119,0)
 I Y'=1 Q
"RTN","RCDPEV",120,0)
 S DA(1)=RCERA,DA=+RCY,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEV",121,0)
 S A=$$TOPLINE^RCDPEWL1($G(^RCY(344.49,RCERA,1,+RCY,0)),RCYNUM)
"RTN","RCDPEV",122,0)
 S ^TMP("RCDPE-EOB_WL",$J,RCLINE,0)=A
"RTN","RCDPEV",123,0)
 Q
"RTN","RCDPEV",124,0)
 ;
"RTN","RCDPEV0")
0^4^B24203052
"RTN","RCDPEV0",1,0)
RCDPEV0 ;ALB/TMK - EDI LOCKBOX WORKLIST VERIFY PAYMENTS ;Jun 06, 2014@19:11:19
"RTN","RCDPEV0",2,0)
 ;;4.5;Accounts Receivable;**208,261,298**;Mar 20, 1995;Build 121
"RTN","RCDPEV0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEV0",4,0)
 Q
"RTN","RCDPEV0",5,0)
 ;
"RTN","RCDPEV0",6,0)
RPT(RCSCR) ; Print/display discrepancy report
"RTN","RCDPEV0",7,0)
 D FULL^VALM1
"RTN","RCDPEV0",8,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEV0",9,0)
 S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEV0",10,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEV0",11,0)
 . S ZTRTN="DISRPT^RCDPEV0("_RCSCR_","_+$G(^TMP("RCBATCH_SELECTED",$J))_")",ZTDESC="AR - Print ERA Discrepancy Report From Worklist"
"RTN","RCDPEV0",12,0)
 . D ^%ZTLOAD
"RTN","RCDPEV0",13,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEV0",14,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEV0",15,0)
 U IO
"RTN","RCDPEV0",16,0)
 D DISRPT(RCSCR,+$G(^TMP("RCBATCH_SELECTED",$J)))
"RTN","RCDPEV0",17,0)
RPTQ Q
"RTN","RCDPEV0",18,0)
 ;
"RTN","RCDPEV0",19,0)
DISRPT(RCSCR,RCBATCH) ; Queued job entrypoint
"RTN","RCDPEV0",20,0)
 ; RCSCR = the ien of the entry in file 344.49
"RTN","RCDPEV0",21,0)
 ; RCBATCH = the # of the batch within the ERA.  If all batches, this is null
"RTN","RCDPEV0",22,0)
 N X,Z,Z0,RC3444,RCSTOP,RCPG,RCANY,RCZ,RCZ0,RCZ1,SPLIT,SSN,AMT1,AMT2,RCBILL,RESULT,DTFR1,DTFR2,DTTO1,DTTO2
"RTN","RCDPEV0",23,0)
 S (RCSTOP,RCPG,RCANY)=0
"RTN","RCDPEV0",24,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.49,RCSCR,1,"ANV",0,RCZ)) Q:'RCZ  D  Q:RCSTOP
"RTN","RCDPEV0",25,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ W:+$G(RCPG) !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEV0",26,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,RCZ,0))
"RTN","RCDPEV0",27,0)
 . Q:'$D(^RCY(344.49,RCSCR,1,"ASEQ",+RCZ0,RCZ))  ; Not top level
"RTN","RCDPEV0",28,0)
 . Q:RCZ0=""
"RTN","RCDPEV0",29,0)
 . I $G(RCBATCH),$P(RCZ0,U,14)'=RCBATCH Q  ; Not in the batch
"RTN","RCDPEV0",30,0)
 . S RCANY=1
"RTN","RCDPEV0",31,0)
 . S SPLIT=(+$O(^RCY(344.49,RCSCR,1,"B",+RCZ0_".9999"),-1)'=(+RCZ0_".001"))
"RTN","RCDPEV0",32,0)
 . S RC3444=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEV0",33,0)
 . S RCBILL=+$G(^IBM(361.1,+$P(RC3444,U,2),0))
"RTN","RCDPEV0",34,0)
 . S RESULT=$$VER^RCDPEV(RCSCR,RCBILL,+$P(RCZ0,U,9),1)
"RTN","RCDPEV0",35,0)
 . S AMT1=$S($E($P(RESULT,U,5))="*":"*",1:"")_$S($TR($P(RESULT,U,5),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,5),"*"),"",2))
"RTN","RCDPEV0",36,0)
 . S AMT2=$S($E($P(RESULT,U,4))="*":"*",1:"")_$S($TR($P(RESULT,U,4),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,4),"*"),"",2))
"RTN","RCDPEV0",37,0)
 . S DTFR1=$S($TR($P(RESULT,U,7),"*")="":"",1:$S($E($P(RESULT,U,7))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,7),"*"),"2D"))
"RTN","RCDPEV0",38,0)
 . S DTFR2=$S($TR($P(RESULT,U,6),"*")="":"",1:$S($E($P(RESULT,U,6))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,6),"*"),"2D"))
"RTN","RCDPEV0",39,0)
 . S DTTO1=$S($TR($P(RESULT,U,9),"*")="":"",1:$S($E($P(RESULT,U,9))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,9),"*"),"2D"))
"RTN","RCDPEV0",40,0)
 . S DTTO2=$S($TR($P(RESULT,U,8),"*")="":"",1:$S($E($P(RESULT,U,8))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,8),"*"),"2D"))
"RTN","RCDPEV0",41,0)
 . S X="EEOB Sequence #(s) on the ERA: "_$P(RCZ0,U,9)_"  "_$S($P(RC3444,U,5)'="":$P(RC3444,U,5),$P(RC3444,U,17)'="":$P(RC3444,U,17),$G(RCBILL):$P($G(^DGCR(399,+RCBILL,0)),U),1:"")
"RTN","RCDPEV0",42,0)
 . I ($Y+7)>IOSL!'RCPG D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP) Q:RCSTOP
"RTN","RCDPEV0",43,0)
 . W !!,X
"RTN","RCDPEV0",44,0)
 . I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP) Q:RCSTOP
"RTN","RCDPEV0",45,0)
 . S X="VistA: ",SSN=$P(RESULT,U,10),SSN=$E($E(SSN,$L(SSN)-3,$L(SSN))_$J("",4),1,4)
"RTN","RCDPEV0",46,0)
 . S X=X_$S('RCBILL:"NOT RELATED TO A VistA BILL",1:$E($P(RESULT,U,2)_$J("",30),1,30)_" "_SSN_"  "_$E(AMT2_$J("",15),1,15)_"  "_$E($S(DTFR2="":"NO DATA",1:DTFR2)_$J("",9),1,9)_"- "_$S(DTTO2'="":DTTO2,1:"NO DATA"))
"RTN","RCDPEV0",47,0)
 . W !,X
"RTN","RCDPEV0",48,0)
 . S X="  ERA: "_$E($P(RESULT,U,3)_$J("",30),1,30)_$J("",7)_$E(AMT1_$J("",15),1,15)_"  "_$E($S(DTFR1="":"NO DATA",1:DTFR1)_$J("",9),1,9)_"- "_$S(DTTO1'="":DTTO1,1:"NO DATA")
"RTN","RCDPEV0",49,0)
 . W !,X
"RTN","RCDPEV0",50,0)
 . Q:'SPLIT
"RTN","RCDPEV0",51,0)
 . W !,?9,"<<< THIS EEOB HAS BEEN SPLIT >>>"
"RTN","RCDPEV0",52,0)
 . S RCZ1=+RCZ0 F  S RCZ1=$O(^RCY(344.49,RCSCR,1,"B",RCZ1)) Q:(RCZ1\1)'=+RCZ0!RCSTOP  D
"RTN","RCDPEV0",53,0)
 .. S Z=+$O(^RCY(344.49,RCSCR,1,"B",RCZ1,0))
"RTN","RCDPEV0",54,0)
 .. S Z0=$G(^RCY(344.49,RCSCR,1,Z,0))
"RTN","RCDPEV0",55,0)
 .. I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP) Q:RCSTOP
"RTN","RCDPEV0",56,0)
 .. W !,?15,$S($P(Z0,U,7):"",1:"BILL NOT IN VISTA: "),$P(Z0,U,2)_"  "_$J($P(Z0,U,5),"",2)
"RTN","RCDPEV0",57,0)
 . W !
"RTN","RCDPEV0",58,0)
 ;
"RTN","RCDPEV0",59,0)
 I 'RCANY D:'RCPG HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP) W !,"THERE ARE NO UNVERIFIED LINES WITH DISCREPANCIES IN THIS ERA"_$S($G(RCBATCH):" BATCH",1:"")
"RTN","RCDPEV0",60,0)
 I '$D(ZTQUEUED),'RCSTOP,RCPG D ASK()
"RTN","RCDPEV0",61,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEV0",62,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEV0",63,0)
 Q
"RTN","RCDPEV0",64,0)
 ;
"RTN","RCDPEV0",65,0)
HDR(RCPG,RCSCR,RCBATCH,RCSTOP) ;Print report hdr
"RTN","RCDPEV0",66,0)
 ; RCPG = last page #
"RTN","RCDPEV0",67,0)
 ; RCSCR = the entry # in file 344.49
"RTN","RCDPEV0",68,0)
 ; RCSTOP = returned as 1 if abort is detected
"RTN","RCDPEV0",69,0)
 N RCZ0
"RTN","RCDPEV0",70,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ W:+$G(RCPG) !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEV0",71,0)
 S RCZ0=$G(^RCY(344.4,RCSCR,0))
"RTN","RCDPEV0",72,0)
 I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEV0",73,0)
 W !,@IOF,*13
"RTN","RCDPEV0",74,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEV0",75,0)
 W !,"EDI LBOX WORKLIST - UNVERIFIED LINES DISCREPANCIES REPORT",?59,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!
"RTN","RCDPEV0",76,0)
 W !,"ERA #: ",RCSCR,?20,$S($O(^RCY(344.49,RCSCR,3,0)):"BATCH: "_$E($S($G(RCBATCH):+RCBATCH,1:"ALL")_$J("",11),1,11),1:$J("",18))_"TRACE #: "_$P(RCZ0,U,2)
"RTN","RCDPEV0",77,0)
 W !,"PAYER: "_$E($P(RCZ0,U,6)_$J("",30),1,30)_"  ERA DT: "_$$FMTE^XLFDT($P(RCZ0,U,4),"2D")
"RTN","RCDPEV0",78,0)
 W !!,?7,"PATIENT NAME"_$J("",25)_"SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEV0",79,0)
 W !,"* preceding data = data has discrepancy"
"RTN","RCDPEV0",80,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEV0",81,0)
 Q
"RTN","RCDPEV0",82,0)
 ;
"RTN","RCDPEV0",83,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEV0",84,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEV0",85,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEV0",86,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEV0",87,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEV0",88,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEV0",89,0)
 Q
"RTN","RCDPEV0",90,0)
 ;
"RTN","RCDPEWL")
0^18^B68499983
"RTN","RCDPEWL",1,0)
RCDPEWL ;ALB/TMK/KML - ELECTRONIC EOB MESSAGE WORKLIST ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL",5,0)
 ;
"RTN","RCDPEWL",6,0)
EN ; Main entry point
"RTN","RCDPEWL",7,0)
 N RCFASTXT,DA,DIC,X,Y,RCERA,RCNOED
"RTN","RCDPEWL",8,0)
 D FULL^VALM1
"RTN","RCDPEWL",9,0)
 ;
"RTN","RCDPEWL",10,0)
 S DIR(0)="SA^L:LIST;S:SPECIFIC",DIR("A")="DO YOU WANT A (L)IST OF ERAs OR A (S)PECIFIC ONE?: "
"RTN","RCDPEWL",11,0)
 S DIR("B")="LIST" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","RCDPEWL",12,0)
 I Y="S" D  G ENQ
"RTN","RCDPEWL",13,0)
 . S DIC="^RCY(344.4,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL",14,0)
 . I Y>0 D WL^RCDPEWL7(+Y)
"RTN","RCDPEWL",15,0)
 ; Calling Change View API in Menu Option Mode
"RTN","RCDPEWL",16,0)
 D PARAMS^RCDPEWL0("MO") I $G(RCQUIT) G ENQ
"RTN","RCDPEWL",17,0)
 D EN^VALM("RCDPE WORKLIST ERA LIST")
"RTN","RCDPEWL",18,0)
 ;
"RTN","RCDPEWL",19,0)
ENQ Q
"RTN","RCDPEWL",20,0)
 ;
"RTN","RCDPEWL",21,0)
DISP(RCERA,RCNOED) ; Entry to worklist from receipt processing
"RTN","RCDPEWL",22,0)
 ;  RCERA = ien of entry in file 344.49
"RTN","RCDPEWL",23,0)
 ; RCNOED = 1 if receipt exists/no editing allowed
"RTN","RCDPEWL",24,0)
 ;        = 2 if no edit and called from receipt processing
"RTN","RCDPEWL",25,0)
 ;  ; prca*4.5*298 - added AUTOPOST input argument
"RTN","RCDPEWL",26,0)
 ; AUTOPOST = "" if ERA is non-autopost
"RTN","RCDPEWL",27,0)
 ;          = 0  if auto-posted ERA is in UNPOSTED status
"RTN","RCDPEWL",28,0)
 ;          = 1 if auto-posted ERA is in PARTIAL posted status
"RTN","RCDPEWL",29,0)
 ;          = 2 if auto-posted ERA is in COMPLETE status
"RTN","RCDPEWL",30,0)
 ;
"RTN","RCDPEWL",31,0)
 N DUOUT,DTOUT,DIC,DIK,X,Y,DIR,RCQUIT,DA,DIE,DR,RCSCR,RC0,RC5,RCDAT,RCUNM
"RTN","RCDPEWL",32,0)
 ;
"RTN","RCDPEWL",33,0)
 S RCSCR("NOEDIT")=+$G(RCNOED)
"RTN","RCDPEWL",34,0)
 S RCQUIT=0,RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEWL",35,0)
 I 'RCSCR("NOEDIT"),'$O(^RCY(344.49,"B",RCERA,0)) D  G:RCQUIT DISPQ
"RTN","RCDPEWL",36,0)
 . ;allow additional selections
"RTN","RCDPEWL",37,0)
 . S DIR("A",1)="No worklist scratchpad entry exists for this ERA."
"RTN","RCDPEWL",38,0)
 . S DIR("A")="(C)reate scratchpad, (V)iew ERA details or (E)xit:"
"RTN","RCDPEWL",39,0)
 . S DIR(0)="SAO^C:CREATE SCRATCHPAD;V:VIEW ERA DETAILS;E:EXIT"
"RTN","RCDPEWL",40,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL",41,0)
 . I (Y'="V")&(Y'="C")&(Y'="E") S RCERA=-1,RCQUIT=1 Q
"RTN","RCDPEWL",42,0)
 . I Y="V" S RCSCR=RCERA D PRERA1^RCDPEWL0 S RCERA=-1,RCQUIT=1  Q
"RTN","RCDPEWL",43,0)
 . I Y="E" S RCERA=-1,RCQUIT=1 Q
"RTN","RCDPEWL",44,0)
 . ; prca*4.5*298  Y is = "C" therefore perform the pre-existing scratchpad creation/editing algorithm
"RTN","RCDPEWL",45,0)
 . I $P(RC0,U,15)'="" W !!,"PAYMENT METHOD CODE REPORTED: "_$P(RC0,U,15),!
"RTN","RCDPEWL",46,0)
 . I $P(RC0,U,15)="" W !!,"NO PAYMENT METHOD CODE REPORTED",!
"RTN","RCDPEWL",47,0)
 . I $P(RC0,U,9)=0,$P(RC5,U,2)="" D  Q:RCQUIT
"RTN","RCDPEWL",48,0)
 .. S RCQUIT=0,RCUNM=0
"RTN","RCDPEWL",49,0)
 .. I +$P(RC0,U,5)=0,"ACH"'[(U_$P(RC0,U,15)_U) D  Q:RCQUIT!RCUNM
"RTN","RCDPEWL",50,0)
 ... S DIR("A",1)="THIS ERA HAS NO PAYMENT ASSOCIATED WITH IT AND CAN BE MARKED AS",DIR("A",2)="'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT IF NO PAPER CHECK OR",DIR("A",3)="EFT IS EXPECTED TO BE RECEIVED FOR THIS ERA"
"RTN","RCDPEWL",51,0)
 ... S DIR("?")="DO NOT RESPOND YES HERE UNLESS YOU ARE SURE THERE WILL BE NO EFT OR PAPER",DIR("?",1)=" CHECK TO BE RECEIVED FOR THIS 0-PAYMENT ERA"
"RTN","RCDPEWL",52,0)
 ... S DIR("A")="DO YOU WANT TO DO THIS?: "
"RTN","RCDPEWL",53,0)
 ... S DIR(0)="YA"
"RTN","RCDPEWL",54,0)
 ... D ^DIR K DIR
"RTN","RCDPEWL",55,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",56,0)
 ... I Y'=1 Q
"RTN","RCDPEWL",57,0)
 ... S DIE="^RCY(344.4,",DR=".09////3;.14////3",DA=RCERA D ^DIE S RCUNM=1
"RTN","RCDPEWL",58,0)
 .. I 'RCUNM D
"RTN","RCDPEWL",59,0)
 ... S DIR("A",1)="THIS ERA DOES NOT HAVE A MATCHING EFT",DIR("A")="ENTER THE NUMBER OF THE PAPER CHECK YOU RECEIVED FOR THIS ERA: ",DIR(0)="344.01,.07A"
"RTN","RCDPEWL",60,0)
 ... I $P(RC5,U,2)'="" S DIR("B")=$P(RC5,U,2)
"RTN","RCDPEWL",61,0)
 ... I $G(DIR("B"))="",$P(RC0,U,2)'="" S DIR("B")=$P(RC0,U,2)
"RTN","RCDPEWL",62,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",63,0)
 ... I $D(DTOUT)!$D(DUOUT)!(Y="") D  S RCQUIT=1 Q
"RTN","RCDPEWL",64,0)
 .... S DIR(0)="EA",DIR("A",1)="THERE MUST EITHER BE A PAPER CHECK OR AN EFT FOR THIS ERA",DIR("A")="PRESS RETURN TO CONTINUE " W !!  D ^DIR K DIR
"RTN","RCDPEWL",65,0)
 ... S RCDAT("CHECK#")=Y
"RTN","RCDPEWL",66,0)
 ... S DIR(0)="344.01,.1O",DIR("B")=$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEWL",67,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",68,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",69,0)
 ... S RCDAT("CHECKDT")=Y
"RTN","RCDPEWL",70,0)
 ... S DIR(0)="344.01,.08O"
"RTN","RCDPEWL",71,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",72,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",73,0)
 ... S RCDAT("BANK")=Y
"RTN","RCDPEWL",74,0)
 ... S DIR("A",1)="ERA #"_RCERA_" (TRACE #:"_$P(RC0,U,2)_") MATCHED TO PAPER CHECK "_RCDAT("CHECK#"),DIR("A")="IS THIS CORRECT?: ",DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL",75,0)
 ... I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEWL",76,0)
 ... S DIE="^RCY(344.4,",DA=RCERA,DR=".13////"_RCDAT("CHECK#")_";.09////2" D ^DIE
"RTN","RCDPEWL",77,0)
 ;
"RTN","RCDPEWL",78,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEWL",79,0)
 I 'RCSCR D  ; Build the entry in file 344.49
"RTN","RCDPEWL",80,0)
 . I RCSCR("NOEDIT") D  Q
"RTN","RCDPEWL",81,0)
 .. S DIR("A")="NO WORKLIST ENTRY EXISTS FOR THIS ERA - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL",82,0)
 . ;
"RTN","RCDPEWL",83,0)
 . S RCSCR=+$$ADDREC(RCERA,.RCDAT)
"RTN","RCDPEWL",84,0)
 . I RCSCR D  Q:'RCSCR
"RTN","RCDPEWL",85,0)
 .. F X=1:1:6 L +^RCY(344.4,RCSCR):5 Q:$T  I X=6 D  Q
"RTN","RCDPEWL",86,0)
 ... S DA=RCSCR,DIK="^RCY(344.49," D ^DIK S RCSCR=0
"RTN","RCDPEWL",87,0)
 ... S DIR(0)="EA",DIR("A",1)="ANOTHER USER HAS LOCKED THIS ENTRY - NEW RECORD NOT CREATED",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL",88,0)
 .. Q:'RCSCR
"RTN","RCDPEWL",89,0)
 .. ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL",90,0)
 .. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL",91,0)
 .. ;D SETBATCH^RCDPEWLB(RCSCR) ; prca*4.5*298
"RTN","RCDPEWL",92,0)
 .. D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL",93,0)
 .. K ^TMP($J,"BATCHES")
"RTN","RCDPEWL",94,0)
 ;
"RTN","RCDPEWL",95,0)
 I RCSCR D  G:'RCSCR DISPQ
"RTN","RCDPEWL",96,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL",97,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL",98,0)
 . ;Q:'$$BAT^RCDPEWL7(RCSCR)
"RTN","RCDPEWL",99,0)
 . ;I 'RCSCR("NOEDIT"),'$G(^TMP("RCBATCH_SELECTED",$J)) L +^RCY(344.4,RCSCR):5 I '$T W !!,"Another user is currently editing this entry",! S DIR(0)="E" D ^DIR K DIR S RCSCR=0 Q
"RTN","RCDPEWL",100,0)
 . I 'RCSCR("NOEDIT") L +^RCY(344.4,RCSCR):5 I '$T W !!,"Another user is currently editing this entry",! S DIR(0)="E" D ^DIR K DIR S RCSCR=0 Q
"RTN","RCDPEWL",101,0)
 . D EN^VALM("RCDPE EOB WORKLIST")
"RTN","RCDPEWL",102,0)
 ;
"RTN","RCDPEWL",103,0)
DISPQ L -^RCY(344.4,+$G(RCERA))
"RTN","RCDPEWL",104,0)
 Q
"RTN","RCDPEWL",105,0)
 ;
"RTN","RCDPEWL",106,0)
INIT ; -- set up initial variables
"RTN","RCDPEWL",107,0)
 N RCQUIT,RCREV
"RTN","RCDPEWL",108,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL",109,0)
 S RCQUIT=0
"RTN","RCDPEWL",110,0)
 ; PRCA*4.5*298: Removed functionality for retrieving/storing user preferences in file #344.49
"RTN","RCDPEWL",111,0)
 ; and replaced with the use of parameters handled by PARAMS^RCDPEWLA.
"RTN","RCDPEWL",112,0)
 D PARAMS^RCDPEWLA("MO") I $G(RCQUIT) S VALMQUIT=1 Q
"RTN","RCDPEWL",113,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL",114,0)
 Q
"RTN","RCDPEWL",115,0)
 ;
"RTN","RCDPEWL",116,0)
CV ; Change View Action for EEOB Worklist
"RTN","RCDPEWL",117,0)
 D FULL^VALM1
"RTN","RCDPEWL",118,0)
 D PARAMS^RCDPEWLA("CV")
"RTN","RCDPEWL",119,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM"))),HDR
"RTN","RCDPEWL",120,0)
 S VALMBCK="R",VALMBG=1
"RTN","RCDPEWL",121,0)
 Q
"RTN","RCDPEWL",122,0)
 ;
"RTN","RCDPEWL",123,0)
ADDREC(RCERA,RCDAT) ; Add a record to file 344.49
"RTN","RCDPEWL",124,0)
 ; RCERA = ien of file 344.4
"RTN","RCDPEWL",125,0)
 ; RCDAT = array containing additional data to add to new entry
"RTN","RCDPEWL",126,0)
 ;
"RTN","RCDPEWL",127,0)
 N DIC,DLAYGO,X,Y,DO,DD,RCY,DINUM
"RTN","RCDPEWL",128,0)
 S RCY=0,DIC("DR")=""
"RTN","RCDPEWL",129,0)
 S DIC(0)="L",DLAYGO=344.49,(DINUM,X)=RCERA,DIC="^RCY(344.49,"
"RTN","RCDPEWL",130,0)
 I $G(RCDAT("CHECK#"))'="" S DIC("DR")=".04////"_RCDAT("CHECK#")_";"
"RTN","RCDPEWL",131,0)
 I $G(RCDAT("CHECKDT"))'="" S DIC("DR")=DIC("DR")_".05////"_RCDAT("CHECKDT")_";"
"RTN","RCDPEWL",132,0)
 I $G(RCDAT("BANK"))'="" S DIC("DR")=DIC("DR")_".06////"_RCDAT("BANK")_";"
"RTN","RCDPEWL",133,0)
 K DD,DO D FILE^DICN K DIC
"RTN","RCDPEWL",134,0)
 I Y>0 S RCY=+Y
"RTN","RCDPEWL",135,0)
 Q RCY
"RTN","RCDPEWL",136,0)
 ;
"RTN","RCDPEWL",137,0)
HDR ; Creates header lines for the selected ERA display
"RTN","RCDPEWL",138,0)
 N X,Z,I,RC,RC5,RC4,RCSORTBY,RCEEOBPU
"RTN","RCDPEWL",139,0)
 F I=1:1:5 S VALMHDR(I)=""
"RTN","RCDPEWL",140,0)
 I '$G(RCSCR) S VALMQUIT=1 Q
"RTN","RCDPEWL",141,0)
 S RC=$G(^RCY(344.4,+RCSCR,0)),RC5=$G(^RCY(344.4,+RCSCR,5))
"RTN","RCDPEWL",142,0)
 S RC4=$G(^RCY(344.4,+RCSCR,4))  ;prca*4.5*298 
"RTN","RCDPEWL",143,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC,U,5),"",2)
"RTN","RCDPEWL",144,0)
 S VALMHDR(2)="Payer Name/ID: "_$P(RC,U,6)_"/"_$P(RC,U,3)
"RTN","RCDPEWL",145,0)
 S Z=+$O(^RCY(344.31,"AERA",+RCSCR,0))
"RTN","RCDPEWL",146,0)
 I Z S VALMHDR(3)="EFT #/TRACE #: "_$P($G(^RCY(344.3,+$G(^RCY(344.31,Z,0)),0)),U)_"/"_$P(RC,U,2)
"RTN","RCDPEWL",147,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(3)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEWL",148,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL",149,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL",150,0)
 ;I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL",151,0)
 ;. N Z,Z0
"RTN","RCDPEWL",152,0)
 ;. S Z=+$G(^TMP("RCBATCH_SELECTED",$J)),Z0=$G(^RCY(344.49,RCSCR,3,Z,0))
"RTN","RCDPEWL",153,0)
 ;. S RCT=RCT+1,VALMHDR(RCT)="BATCH: "_Z_"  "_$P(Z0,U,2)_"  "_$$EXTERNAL^DILFD(344.493,.03,"",$P(Z0,U,3))
"RTN","RCDPEWL",154,0)
 I $G(RCSCR("NOEDIT")) D
"RTN","RCDPEWL",155,0)
 . S VALMHDR(4)="*** RECEIPT(S) ALREADY CREATED *** ("_$$RECEIPTS(RCSCR)_")"
"RTN","RCDPEWL",156,0)
 I $P(RC4,U,2)]"" D  ;AUTO-POST STATUS (344.4, 4.02);  if not null, then the selected ERA is designated for auto-post
"RTN","RCDPEWL",157,0)
 . ; Setting the Auto-Post info in the header
"RTN","RCDPEWL",158,0)
 . N AUTOPSTS
"RTN","RCDPEWL",159,0)
 . S AUTOPSTS="Auto-Post Status: "_$S($P(RC4,U,2)=0:"Unposted",$P(RC4,U,2)=1:"Partial",1:"Complete")
"RTN","RCDPEWL",160,0)
 . S AUTOPSTS=AUTOPSTS_"    Auto-Post Date: "_$S($P(RC4,U,2)=2:$$FMTE^XLFDT($P(RC4,U)),1:"")
"RTN","RCDPEWL",161,0)
 . S VALMHDR(5)=AUTOPSTS
"RTN","RCDPEWL",162,0)
 ; Displaying Current View (PRCA*4.5*298)
"RTN","RCDPEWL",163,0)
 S $E(VALMHDR(1),60)="Current View:"
"RTN","RCDPEWL",164,0)
 S RCSORTBY=$G(^TMP($J,"RC_SORTPARM"))
"RTN","RCDPEWL",165,0)
 S $E(VALMHDR(2),60)=$S(RCSORTBY="F":"ZERO-PAYMENTS FIRST",RCSORTBY="L":"ZERO-PAYMENTS LAST",1:"NO SORT ORDER")
"RTN","RCDPEWL",166,0)
 S RCEEOBPU=$G(^TMP($J,"RC_EEOBPOST"))
"RTN","RCDPEWL",167,0)
 S $E(VALMHDR(3),60)=$S(RCEEOBPU="P":"POSTED EEOBs ONLY",RCEEOBPU="U":"UNPOSTED EEOBs ONLY",1:"ALL EEOBS")
"RTN","RCDPEWL",168,0)
 Q
"RTN","RCDPEWL",169,0)
 ;
"RTN","RCDPEWL",170,0)
FNL ; -- Clean up list
"RTN","RCDPEWL",171,0)
 K ^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCDPE-EOB_WL",$J),^TMP($J,"RC_SORTPARM"),^TMP($J,"RC_BILL")
"RTN","RCDPEWL",172,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","RCDPEWL",173,0)
 K RCFASTXT
"RTN","RCDPEWL",174,0)
 Q
"RTN","RCDPEWL",175,0)
 ;
"RTN","RCDPEWL",176,0)
SEL(RCDA) ; Select entry from worklist scratch pad screen
"RTN","RCDPEWL",177,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEWL",178,0)
 ;    RCDA(n)=ien of entry(s) in file 344.41 
"RTN","RCDPEWL",179,0)
 ;            where n = the line # selected  
"RTN","RCDPEWL",180,0)
 K RCDA
"RTN","RCDPEWL",181,0)
 N VALMY
"RTN","RCDPEWL",182,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL",183,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCDA(RCDA)=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA)),U,2,5)
"RTN","RCDPEWL",184,0)
 Q
"RTN","RCDPEWL",185,0)
 ;
"RTN","RCDPEWL",186,0)
NOEDIT ; Display no edit allowed if receipt exists
"RTN","RCDPEWL",187,0)
 N DIR,X,Y
"RTN","RCDPEWL",188,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT AVAILABLE SINCE THE ERA ALREADY HAS A RECEIPT."
"RTN","RCDPEWL",189,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",190,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL",191,0)
 Q
"RTN","RCDPEWL",192,0)
 ;
"RTN","RCDPEWL",193,0)
NOBATCH ; Display action not allowed if working at batch level not the ERA level
"RTN","RCDPEWL",194,0)
 N DIR,X,Y
"RTN","RCDPEWL",195,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT VALID WHEN IN A BATCH WITHIN THE ERA."
"RTN","RCDPEWL",196,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",197,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL",198,0)
 Q
"RTN","RCDPEWL",199,0)
 ;
"RTN","RCDPEWL",200,0)
RECEIPTS(RCSCR) ; get list of receipts for the ERA 
"RTN","RCDPEWL",201,0)
 ; Input: RCSCR: ERA File (#344.4) IEN
"RTN","RCDPEWL",202,0)
 ; Output: "" - No Receipt / REC# - One Receipt / REC#A-REC#Z - Range of Receipts
"RTN","RCDPEWL",203,0)
 N X,RECEIPT,CTR,RC0
"RTN","RCDPEWL",204,0)
 K ARRAY,STR
"RTN","RCDPEWL",205,0)
 S X=0,CTR=1,(STR,RECEIPT)=""
"RTN","RCDPEWL",206,0)
 F  S X=$O(^RCY(344.4,RCSCR,1,"RECEIPT",X)) Q:'X  D
"RTN","RCDPEWL",207,0)
 . S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt 
"RTN","RCDPEWL",208,0)
 . I RECEIPT]"" S ARRAY(RECEIPT)=""
"RTN","RCDPEWL",209,0)
 ; array of receipts does not exist so this could be a non auto-posted ERA; so only 1 receipt will be assigned; retrieve at 344.4, .08
"RTN","RCDPEWL",210,0)
 I '$D(ARRAY),$$GET1^DIQ(344.4,RCSCR,.08)'="" S ARRAY($$GET1^DIQ(344.4,RCSCR,.08))=""
"RTN","RCDPEWL",211,0)
 ;
"RTN","RCDPEWL",212,0)
 I $O(ARRAY($O(ARRAY(""))))'="" D
"RTN","RCDPEWL",213,0)
 . S STR=$O(ARRAY(""))_"-"_$O(ARRAY(""),-1)
"RTN","RCDPEWL",214,0)
 E  D
"RTN","RCDPEWL",215,0)
 . S STR=$O(ARRAY(""))
"RTN","RCDPEWL",216,0)
 Q STR
"RTN","RCDPEWL0")
0^20^B153865640
"RTN","RCDPEWL0",1,0)
RCDPEWL0 ;ALB/TMK/PJH - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL0",2,0)
 ;;4.5;Accounts Receivable;**173,208,252,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL0",4,0)
 Q
"RTN","RCDPEWL0",5,0)
 ;
"RTN","RCDPEWL0",6,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for ERA Worklist
"RTN","RCDPEWL0",7,0)
 ; Input: SOURCE: "MO" - Menu Option / "CV" - Change View
"RTN","RCDPEWL0",8,0)
 ;Output: ^TMP("RCERA_PARAMS",$J,"RCPOST"): ERA Posting Status ("P":Posted/"U":Unposted)
"RTN","RCDPEWL0",9,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCAUTOP"): Auto-Posting Status ("A":Auto-Posting/"N":Non Auto-Posting/"B":Both)
"RTN","RCDPEWL0",10,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCMATCH"): ERA Matching Status ("M":Matched/"U":Unmatched)
"RTN","RCDPEWL0",11,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCTYPE"): ERA Claim Type ("M":Medical/"P":Pharmacy/"B":Both)
"RTN","RCDPEWL0",12,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCDT")p1: ERA Received EARILIST DATE (Range Limited Only)
"RTN","RCDPEWL0",13,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCDT")p2: ERA Received LATEST DATE (Range Limited Only)
"RTN","RCDPEWL0",14,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCPAYR")p1: All Payers/Range of Payers ("A": All/"R":Range of Payers)
"RTN","RCDPEWL0",15,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCPAYR")p2: START WITH PAYER (e.g.,'AET') (Range Limited Only)
"RTN","RCDPEWL0",16,0)
 ;        ^TMP("RCERA_PARAMS",$J,"RCPAYR")p3: GO TO PAYER (e.g.,'AETZ') (Range Limited Only)
"RTN","RCDPEWL0",17,0)
 ;        Or RCQUIT=1
"RTN","RCDPEWL0",18,0)
 N DIR,DTOUT,DUOUT,RCAUTOPDF,RCDFR,RCDTO,RCERROR,RCMATCHD,RCPAYR,RCPAYRDF,RCPOSTDF,RCTYPEDF,RCXPAR,X,Y
"RTN","RCDPEWL0",19,0)
 ;
"RTN","RCDPEWL0",20,0)
 S RCQUIT=0
"RTN","RCDPEWL0",21,0)
 ;
"RTN","RCDPEWL0",22,0)
 ; Date Range Selection
"RTN","RCDPEWL0",23,0)
 I SOURCE="MO" D  I $G(RCQUIT) G PARAMSQ
"RTN","RCDPEWL0",24,0)
 . K ^TMP("RCERA_PARAMS",$J) D DTR
"RTN","RCDPEWL0",25,0)
 ;
"RTN","RCDPEWL0",26,0)
 ; Retrieving user's saved parameters (If found, Quit)
"RTN","RCDPEWL0",27,0)
 I SOURCE="MO" D  I $G(RCXPAR("ERA_POSTING_STATUS"))'="" G PARAMSQ
"RTN","RCDPEWL0",28,0)
 . D GETLST^XPAR(.RCXPAR,"USR","RCDPE EDI LOCKBOX WORKLIST","I")
"RTN","RCDPEWL0",29,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCPOST")=$S($G(RCXPAR("ERA_POSTING_STATUS"))'="":RCXPAR("ERA_POSTING_STATUS"),1:"U")
"RTN","RCDPEWL0",30,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=$S($G(RCXPAR("ERA_AUTO_POSTING"))'="":RCXPAR("ERA_AUTO_POSTING"),1:"B")
"RTN","RCDPEWL0",31,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=$S($G(RCXPAR("ERA-EFT_MATCH_STATUS"))'="":RCXPAR("ERA-EFT_MATCH_STATUS"),1:"B")
"RTN","RCDPEWL0",32,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=$S($G(RCXPAR("ERA_CLAIM_TYPE"))'="":RCXPAR("ERA_CLAIM_TYPE"),1:"B")
"RTN","RCDPEWL0",33,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=$S($G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))'="":$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^"),1:"A")
"RTN","RCDPEWL0",34,0)
 ;
"RTN","RCDPEWL0",35,0)
 W !!,"Select parameters for displaying the list of ERAs"
"RTN","RCDPEWL0",36,0)
 ;
"RTN","RCDPEWL0",37,0)
 ; ERA Posting Status (Posted/Unposted/Both) Selection
"RTN","RCDPEWL0",38,0)
 S RCPOSTDF=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL0",39,0)
 K DIR S DIR(0)="SA^U:UNPOSTED;P:POSTED;B:BOTH",DIR("A")="ERA POSTING STATUS: (U)NPOSTED, (P)OSTED, OR (B)OTH: "
"RTN","RCDPEWL0",40,0)
 S DIR("B")="U" S:RCPOSTDF'="" DIR("B")=RCPOSTDF
"RTN","RCDPEWL0",41,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",42,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPOST")=Y
"RTN","RCDPEWL0",43,0)
 ;
"RTN","RCDPEWL0",44,0)
 ; ERA Posting Method (Auto-Posting/Non Auto-Posting/Both) Selection
"RTN","RCDPEWL0",45,0)
 S RCAUTOPDF=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWL0",46,0)
 K DIR S DIR(0)="SA^A:AUTO-POSTING;N:NON AUTO-POSTING;B:BOTH"
"RTN","RCDPEWL0",47,0)
 S DIR("A")="DISPLAY (A)UTO-POSTING, (N)ON AUTO-POSTING, OR (B)OTH: "
"RTN","RCDPEWL0",48,0)
 S DIR("B")="B" S:RCAUTOPDF'="" DIR("B")=RCAUTOPDF
"RTN","RCDPEWL0",49,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",50,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=Y
"RTN","RCDPEWL0",51,0)
 ;
"RTN","RCDPEWL0",52,0)
 ; ERA-EFT Matching Status(Matched/Unmatched/Both) Selection
"RTN","RCDPEWL0",53,0)
 S RCMATCHD=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWL0",54,0)
 K DIR S DIR(0)="SA^N:NOT MATCHED;M:MATCHED;B:BOTH"
"RTN","RCDPEWL0",55,0)
 S DIR("A")="ERA-EFT MATCH STATUS: (N)OT MATCHED, (M)ATCHED, OR (B)OTH: "
"RTN","RCDPEWL0",56,0)
 S DIR("B")="B" S:RCMATCHD'="" DIR("B")=RCMATCHD
"RTN","RCDPEWL0",57,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",58,0)
 S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=Y
"RTN","RCDPEWL0",59,0)
 ;
"RTN","RCDPEWL0",60,0)
 ; Claim Type (Medical/Pharmacy/Both) Selection
"RTN","RCDPEWL0",61,0)
 S RCTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL0",62,0)
 K DIR S DIR(0)="SA^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPEWL0",63,0)
 s DIR("A")="(M)EDICAL, (P)HARMACY, OR (B)OTH: "
"RTN","RCDPEWL0",64,0)
 S DIR("B")="B" S:RCTYPEDF'="" DIR("B")=RCTYPEDF
"RTN","RCDPEWL0",65,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",66,0)
 S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=Y
"RTN","RCDPEWL0",67,0)
 ;
"RTN","RCDPEWL0",68,0)
PAYR ; Payer Selection
"RTN","RCDPEWL0",69,0)
 S RCPAYRDF=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWL0",70,0)
 K DIR S RCQUIT=0,DIR(0)="SA^A:ALL;R:RANGE",DIR("A")="(A)LL PAYERS, (R)ANGE OF PAYER NAMES: "
"RTN","RCDPEWL0",71,0)
 S DIR("B")="ALL" S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^")
"RTN","RCDPEWL0",72,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWL0",73,0)
 S RCPAYR=Y I RCPAYR="A" S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=Y
"RTN","RCDPEWL0",74,0)
 I RCPAYR="R" D  I RCQUIT K ^TMP("RCERA_PARAMS",$J,"RCPAYR") G PAYR
"RTN","RCDPEWL0",75,0)
 . W !,"Names you select here will be the payer names from the ERA, not the ins. file"
"RTN","RCDPEWL0",76,0)
 . K DIR S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWL0",77,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="START WITH PAYER NAME: "
"RTN","RCDPEWL0",78,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)
"RTN","RCDPEWL0",79,0)
 . W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL0",80,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEWL0",81,0)
 . K DIR S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWL0",82,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="GO TO PAYER NAME: ",DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEWL0",83,0)
 . S:$P(RCPAYRDF,"^",3)'="" DIR("B")=$P(RCPAYRDF,"^",3)
"RTN","RCDPEWL0",84,0)
 . W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL0",85,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEWL0",86,0)
 ;
"RTN","RCDPEWL0",87,0)
 ; Option to save as User Preferred View
"RTN","RCDPEWL0",88,0)
 K DIR W ! S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO SAVE THIS AS YOUR PREFERRED VIEW (Y/N)? "
"RTN","RCDPEWL0",89,0)
 D ^DIR
"RTN","RCDPEWL0",90,0)
 I Y=1 D
"RTN","RCDPEWL0",91,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_POSTING_STATUS",^TMP("RCERA_PARAMS",$J,"RCPOST"),.RCERROR)
"RTN","RCDPEWL0",92,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_AUTO_POSTING",^TMP("RCERA_PARAMS",$J,"RCAUTOP"),.RCERROR)
"RTN","RCDPEWL0",93,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA-EFT_MATCH_STATUS",^TMP("RCERA_PARAMS",$J,"RCMATCH"),.RCERROR)
"RTN","RCDPEWL0",94,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_CLAIM_TYPE",^TMP("RCERA_PARAMS",$J,"RCTYPE"),.RCERROR)
"RTN","RCDPEWL0",95,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ALL_PAYERS/RANGE_OF_PAYERS",$TR(^TMP("RCERA_PARAMS",$J,"RCPAYR"),"^",";"),.RCERROR)
"RTN","RCDPEWL0",96,0)
 ;
"RTN","RCDPEWL0",97,0)
PARAMSQ ; Quit
"RTN","RCDPEWL0",98,0)
 Q
"RTN","RCDPEWL0",99,0)
 ;
"RTN","RCDPEWL0",100,0)
DTR ; Date Range Selection
"RTN","RCDPEWL0",101,0)
 N DIR,DTOUT,DUOUT,Y,FROM,TO,RCDTRNG
"RTN","RCDPEWL0",102,0)
 S ^TMP("RCERA_PARAMS",$J,"RCDT")="0^"_DT
"RTN","RCDPEWL0",103,0)
 K DIR S DIR(0)="YA",DIR("A")="LIMIT THE SELECTION TO A DATE RANGE WHEN THE ERA WAS RECEIVED?: "
"RTN","RCDPEWL0",104,0)
 S RCQUIT=0,DIR("B")="NO"
"RTN","RCDPEWL0",105,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL0",106,0)
 I Y D  I $G(RCQUIT) G DTR
"RTN","RCDPEWL0",107,0)
 . S FROM=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",1),TO=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",2)
"RTN","RCDPEWL0",108,0)
 . W ! S RCDTRNG=$$DTRANGE(FROM,TO) I RCDTRNG="^" S RCQUIT=1 Q
"RTN","RCDPEWL0",109,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCDT")=RCDTRNG
"RTN","RCDPEWL0",110,0)
 Q
"RTN","RCDPEWL0",111,0)
 ;
"RTN","RCDPEWL0",112,0)
DTRANGE(DEFFROM,DEFTO) ; Asks for and returns a Date Range
"RTN","RCDPEWL0",113,0)
 ; Input: DEFFROM - Default FROM date
"RTN","RCDPEWL0",114,0)
 ;        DEFTO   - Default TO date
"RTN","RCDPEWL0",115,0)
 ;Output: From_Date^To_Date (YYYMMDD^YYYDDMM) or "^" (timeout or ^ entered)
"RTN","RCDPEWL0",116,0)
 ;
"RTN","RCDPEWL0",117,0)
 N DIR,Y,DTOUT,DUOUT,RCDFR
"RTN","RCDPEWL0",118,0)
 S RCQUIT=0 S DIR(0)="DAE^:"_DT_":E",DIR("A")="EARLIEST DATE: " S:($G(DEFFROM)) DIR("B")=$$FMTE^XLFDT(DEFFROM,2) D ^DIR
"RTN","RCDPEWL0",119,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",120,0)
 S RCDFR=Y
"RTN","RCDPEWL0",121,0)
 K DIR S DIR(0)="DAE^"_RCDFR_":"_DT_":E",DIR("A")="LATEST DATE: " S:($G(DEFTO)) DIR("B")=$$FMTE^XLFDT(DEFTO,2) D ^DIR
"RTN","RCDPEWL0",122,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",123,0)
 Q (RCDFR_"^"_Y)
"RTN","RCDPEWL0",124,0)
 ;
"RTN","RCDPEWL0",125,0)
FILTER(IEN344P4) ; Returns 1 if record in entry IEN344P4 in 344.4 passes
"RTN","RCDPEWL0",126,0)
 ; the edits for the worklist selection of ERAs
"RTN","RCDPEWL0",127,0)
 ; Parameters found in ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL0",128,0)
 N OK,RCPOST,RCAUTOP,RCMATCH,RCTYPE,RCDFR,RCDTO,RCPAYFR,RCPAYTO,RCPAYR,RC0,RC4
"RTN","RCDPEWL0",129,0)
 S OK=1,RC0=$G(^RCY(344.4,IEN344P4,0)),RC4=$G(^RCY(344.4,IEN344P4,4))
"RTN","RCDPEWL0",130,0)
 ;
"RTN","RCDPEWL0",131,0)
 S RCMATCH=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH")),RCPOST=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL0",132,0)
 S RCAUTOP=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP")),RCTYPE=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL0",133,0)
 S RCDFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTO=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2)
"RTN","RCDPEWL0",134,0)
 S RCPAYR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U),RCPAYFR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,2),RCPAYTO=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEWL0",135,0)
 ;
"RTN","RCDPEWL0",136,0)
 ; If receipt exists, scratchpad must exist
"RTN","RCDPEWL0",137,0)
 ;I $P(RC0,U,8),'$D(^RCY(344.49,+IEN344P4,0)) S OK=0 G FQ
"RTN","RCDPEWL0",138,0)
 ; Post status
"RTN","RCDPEWL0",139,0)
 I $S(RCPOST="B":0,RCPOST="U":$P(RC0,U,14),1:'$P(RC0,U,14)) S OK=0 G FQ
"RTN","RCDPEWL0",140,0)
 ; Auto-Posting status
"RTN","RCDPEWL0",141,0)
 I $S(RCAUTOP="B":0,RCAUTOP="A":($P(RC4,U,2)=""),1:($P(RC4,U,2)'="")) S OK=0 G FQ
"RTN","RCDPEWL0",142,0)
 ; Match status
"RTN","RCDPEWL0",143,0)
 I $S(RCMATCH="B":0,RCMATCH="N":$P(RC0,U,9),1:'$P(RC0,U,9)) S OK=0 G FQ
"RTN","RCDPEWL0",144,0)
 ; Medical/Pharmacy Claim
"RTN","RCDPEWL0",145,0)
 I $S(RCTYPE="B":0,RCTYPE="M":$$PHARM^RCDPEWLP(IEN344P4),1:'$$PHARM^RCDPEWLP(IEN344P4)) S OK=0 G FQ
"RTN","RCDPEWL0",146,0)
 ; dt rec'd range
"RTN","RCDPEWL0",147,0)
 I $S(RCDFR=0:0,1:$P(RC0,U,7)\1<RCDFR) S OK=0 G FQ
"RTN","RCDPEWL0",148,0)
 I $S(RCDTO=DT:0,1:$P(RC0,U,7)\1>RCDTO) S OK=0 G FQ
"RTN","RCDPEWL0",149,0)
 ; Payer name
"RTN","RCDPEWL0",150,0)
 I RCPAYR'="A" D  G:'OK FQ
"RTN","RCDPEWL0",151,0)
 . N Q
"RTN","RCDPEWL0",152,0)
 . S Q=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL0",153,0)
 . I $S(Q=RCPAYFR:1,Q=RCPAYTO:1,Q]RCPAYFR:RCPAYTO]Q,1:0) Q
"RTN","RCDPEWL0",154,0)
 . S OK=0
"RTN","RCDPEWL0",155,0)
 ;
"RTN","RCDPEWL0",156,0)
FQ Q OK
"RTN","RCDPEWL0",157,0)
 ;
"RTN","RCDPEWL0",158,0)
SPLIT ; Split line in ERA list
"RTN","RCDPEWL0",159,0)
 ; input - RCSCR = ien of 344.49 and 344.4
"RTN","RCDPEWL0",160,0)
 N RCLINE,RCZ,RCDA,Q,Q0,Z,Z0,DIR,X,Y,CT,L,L1,RCONE,RCQUIT
"RTN","RCDPEWL0",161,0)
 D FULL^VALM1
"RTN","RCDPEWL0",162,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G SPLITQ   ;prca*4.5*298  auto-posted ERAs cannot enter Split/Edit action
"RTN","RCDPEWL0",163,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G SPLITQ
"RTN","RCDPEWL0",164,0)
 W !!,"SELECT THE ENTRY THAT HAS A LINE YOU NEED TO SPLIT/EDIT",!
"RTN","RCDPEWL0",165,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL0",166,0)
 S Z=+$O(RCDA(0)) G:'$G(RCDA(Z)) SPLITQ
"RTN","RCDPEWL0",167,0)
 S RCLINE=+RCDA(Z),Z0=+$O(^TMP("RCDPE-EOB_WLDX",$J,Z_".999"),-1)
"RTN","RCDPEWL0",168,0)
 S RCZ=Z F  S RCZ=$O(^TMP("RCDPE-EOB_WLDX",$J,RCZ)) Q:'RCZ!(RCZ\1'=Z)  D
"RTN","RCDPEWL0",169,0)
 . S Q=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCZ)),U,2)
"RTN","RCDPEWL0",170,0)
 . Q:'Q
"RTN","RCDPEWL0",171,0)
 . S RCZ(RCZ)=Q
"RTN","RCDPEWL0",172,0)
 . S Q0=0 F  S Q0=$O(^RCY(344.49,RCSCR,1,Q,1,Q0)) Q:'Q0  I "01"[$P($G(^(Q0,0)),U,2) K RCZ(RCZ) Q
"RTN","RCDPEWL0",173,0)
 I '$O(RCZ(0)) D  G SPLITQ
"RTN","RCDPEWL0",174,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ENTRY HAS NO LINES AVAILABLE TO EDIT/SPLIT",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL0",175,0)
 S RCQUIT=0
"RTN","RCDPEWL0",176,0)
 I $P($G(^RCY(344.49,RCSCR,1,RCLINE,0)),U,13) D  G:RCQUIT SPLITQ
"RTN","RCDPEWL0",177,0)
 . S DIR("A",1)="WARNING!  THIS LINE HAS ALREADY BEEN VERIFIED",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",178,0)
 . I Y'=1 S RCQUIT=1
"RTN","RCDPEWL0",179,0)
 S CT=0,CT=CT+1,DIR("?",CT)="Enter the line # that you want to split or edit:",RCONE=1
"RTN","RCDPEWL0",180,0)
 S L=Z F  S L=$O(RCZ(L)) Q:'L  D
"RTN","RCDPEWL0",181,0)
 . S L1=+$G(^TMP("RCDPE-EOB_WLDX",$J,L))
"RTN","RCDPEWL0",182,0)
 . S CT=CT+1
"RTN","RCDPEWL0",183,0)
 . S DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1,0)),CT=CT+1,DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1+1,0)) S RCONE(1)=$S(RCONE:L,1:"") S RCONE=0
"RTN","RCDPEWL0",184,0)
 S DIR("?")=" ",Y=-1
"RTN","RCDPEWL0",185,0)
 I $G(RCONE(1)) S Y=+RCONE(1) K DIR G:'Y SPLITQ
"RTN","RCDPEWL0",186,0)
 I '$G(RCONE(1)) D  K DIR I $D(DTOUT)!$D(DUOUT)!(Y\1'=Z) G SPLITQ
"RTN","RCDPEWL0",187,0)
 . F  S DIR(0)="NAO^"_(Z+.001)_":"_Z0_":3",DIR("A")="WHICH LINE OF ENTRY "_Z_" DO YOU WANT TO SPLIT/EDIT?: " S:$G(RCONE(1))'="" DIR("B")=RCONE(1) D ^DIR Q:'Y!$D(DUOUT)!$D(DTOUT)  D  Q:Y>0
"RTN","RCDPEWL0",188,0)
 .. I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !!,"LINE "_Y_" DOES NOT EXIST - TRY AGAIN",! S Y=-1 Q
"RTN","RCDPEWL0",189,0)
 .. I '$D(RCZ(Y)) W !!,"LINE "_Y_" HAS BEEN USED IN A DISTRIBUTE ADJ ACTION AND CAN'T BE EDITED",! S Y=-1 Q
"RTN","RCDPEWL0",190,0)
 .. S Q=+$O(^RCY(344.49,RCSCR,1,"B",Y,0))
"RTN","RCDPEWL0",191,0)
 ;
"RTN","RCDPEWL0",192,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEWL0",193,0)
 D SPLIT^RCDPEWL3(RCSCR,+Y)
"RTN","RCDPEWL0",194,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL0",195,0)
 ;
"RTN","RCDPEWL0",196,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEWL0",197,0)
 Q
"RTN","RCDPEWL0",198,0)
 ;
"RTN","RCDPEWL0",199,0)
PRTERA ; View/prt
"RTN","RCDPEWL0",200,0)
 N DIC,X,Y,RCSCR
"RTN","RCDPEWL0",201,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL0",202,0)
 Q:Y'>0
"RTN","RCDPEWL0",203,0)
 S RCSCR=+Y
"RTN","RCDPEWL0",204,0)
 D PRERA1
"RTN","RCDPEWL0",205,0)
 Q
"RTN","RCDPEWL0",206,0)
 ;
"RTN","RCDPEWL0",207,0)
PRERA ; RCSCR is assumed to be defined
"RTN","RCDPEWL0",208,0)
 D FULL^VALM1 ; Protocol entry
"RTN","RCDPEWL0",209,0)
PRERA1 ; Option entry
"RTN","RCDPEWL0",210,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,DIR,X,Y,RCERADET
"RTN","RCDPEWL0",211,0)
 D EXCWARN^RCDPEWLP(RCSCR)
"RTN","RCDPEWL0",212,0)
 S DIR("?",1)="INCLUDING EXPANDED DETAIL WILL SIGNIFICANTLY INCREASE THE SIZE OF THIS REPORT",DIR("?",2)="IF YOU CHOOSE TO INCLUDE IT, ALL PAYMENT DETAILS FOR EACH EEOB WILL BE"
"RTN","RCDPEWL0",213,0)
 S DIR("?")="LISTED.  IF YOU WANT JUST SUMMARY DATA FOR EACH EEOB, DO NOT INCLUDE IT."
"RTN","RCDPEWL0",214,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO INCLUDE EXPANDED EEOB DETAIL?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",215,0)
 I $D(DUOUT)!$D(DTOUT) G PRERAQ
"RTN","RCDPEWL0",216,0)
 S RCERADET=+Y
"RTN","RCDPEWL0",217,0)
 S %ZIS="QM" D ^%ZIS G:POP PRERAQ
"RTN","RCDPEWL0",218,0)
 I $D(IO("Q")) D  G PRERAQ
"RTN","RCDPEWL0",219,0)
 . S ZTRTN="VPERA^RCDPEWL0("_RCSCR_","_RCERADET_")",ZTDESC="AR - Print ERA From Worklist"
"RTN","RCDPEWL0",220,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL0",221,0)
 . W !!,$S($D(ZTSK):"Your task # "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL0",222,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL0",223,0)
 U IO
"RTN","RCDPEWL0",224,0)
 D VPERA(RCSCR,RCERADET)
"RTN","RCDPEWL0",225,0)
 Q
"RTN","RCDPEWL0",226,0)
 ;
"RTN","RCDPEWL0",227,0)
VPERA(RCSCR,RCERADET) ; Queued entry
"RTN","RCDPEWL0",228,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL0",229,0)
 ; RCERADET = 1 if inclusion of all EOB details from file 361.1 is
"RTN","RCDPEWL0",230,0)
 ;  desired, 0 if not
"RTN","RCDPEWL0",231,0)
 N Z,Z0,RCSTOP,RCZ,RCPG,RCDOT,RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,RCSCR1,RC3611
"RTN","RCDPEWL0",232,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMALL")
"RTN","RCDPEWL0",233,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEWL0",234,0)
 D GETS^DIQ(344.4,RCSCR_",","*","IEN","RCDIQ")
"RTN","RCDPEWL0",235,0)
 D TXT0^RCDPEX31(RCSCR,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned flds
"RTN","RCDPEWL0",236,0)
 I $O(^RCY(344.4,RCSCR,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEWL0",237,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,2,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",238,0)
 . K RCDIQ2
"RTN","RCDPEWL0",239,0)
 . D GETS^DIQ(344.42,RCSCR1_","_RCSCR_",","*","IEN","RCDIQ2")
"RTN","RCDPEWL0",240,0)
 . D TXT2^RCDPEX31(RCSCR,RCSCR1,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEWL0",241,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",242,0)
 . K RCDIQ1
"RTN","RCDPEWL0",243,0)
 . D GETS^DIQ(344.41,RCSCR1_","_RCSCR_",","*","IE","RCDIQ1")  ;PRCA*4.5*298  need to retrieve all fields even if null  (changed "IEN" to "IE")
"RTN","RCDPEWL0",244,0)
 . D TXT00^RCDPEX31(RCSCR,RCSCR1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEWL0",245,0)
 . ;HIPAA 5010
"RTN","RCDPEWL0",246,0)
 . N PNAME4
"RTN","RCDPEWL0",247,0)
 . S PNAME4=$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEWL0",248,0)
 . I $L(PNAME4)<32 D
"RTN","RCDPEWL0",249,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4_$J("",41),1,41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1),RCXM1(RC)=" "
"RTN","RCDPEWL0",250,0)
 . I $L(PNAME4)>31 D
"RTN","RCDPEWL0",251,0)
 . .S RC=RC+1,RCXM1(RC-1)=$J("",41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1)
"RTN","RCDPEWL0",252,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4,1,78),RCXM1(RC)=" "
"RTN","RCDPEWL0",253,0)
 . D PROV^RCDPEWLD(RCSCR,RCSCR1,.RCXM1,.RC)
"RTN","RCDPEWL0",254,0)
 . S RC3611=$P($G(^RCY(344.4,RCSCR,1,RCSCR1,0)),U,2)
"RTN","RCDPEWL0",255,0)
 . I RCERADET D
"RTN","RCDPEWL0",256,0)
 .. I 'RC3611 D  Q
"RTN","RCDPEWL0",257,0)
 ... D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_RCSCR1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75,1)
"RTN","RCDPEWL0",258,0)
 ..;
"RTN","RCDPEWL0",259,0)
 .. E  D  ; Detail record is in 361.1
"RTN","RCDPEWL0",260,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",261,0)
 ... D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL0",262,0)
 ... I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL0",263,0)
 ... S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,RC3611,Z)) Q:'Z  S RC=RC+1,^TMP($J,"RC_SUMOUT",RC)=$G(^TMP("PRCA_EOB",$J,RC3611,Z))
"RTN","RCDPEWL0",264,0)
 ... S RC=RC+2,^TMP($J,"RC_SUMOUT",RC-1)=" ",^TMP($J,"RC_SUMOUT",RC)=" "
"RTN","RCDPEWL0",265,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",266,0)
 . I $D(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2)) D
"RTN","RCDPEWL0",267,0)
 .. S RC=RC+1,RCXM1(RC)="  **EXCEPTION RESOLUTION LOG DATA**"
"RTN","RCDPEWL0",268,0)
 .. S Z=0 F  S Z=$O(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)
"RTN","RCDPEWL0",269,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEWL0",270,0)
 . S Z0=+$O(^TMP($J,"RC_SUMALL"," "),-1)
"RTN","RCDPEWL0",271,0)
 . S Z=0 F  S Z=$O(RCXM1(Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=RCXM1(Z)
"RTN","RCDPEWL0",272,0)
 . K RCXM1 S RC=0
"RTN","RCDPEWL0",273,0)
 . S Z=0 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEWL0",274,0)
 S RCSTOP=0,Z=""
"RTN","RCDPEWL0",275,0)
 F  S Z=$O(^TMP($J,"RC_SUMALL",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEWL0",276,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL0",277,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL0",278,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL0",279,0)
 .. D HDR(.RCPG)
"RTN","RCDPEWL0",280,0)
 . W !,$G(^TMP($J,"RC_SUMALL",Z))
"RTN","RCDPEWL0",281,0)
 ;
"RTN","RCDPEWL0",282,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL0",283,0)
 ;
"RTN","RCDPEWL0",284,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL0",285,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL0",286,0)
 ;
"RTN","RCDPEWL0",287,0)
PRERAQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"SUMALL")
"RTN","RCDPEWL0",288,0)
 S VALMBCK="R"
"RTN","RCDPEWL0",289,0)
 Q
"RTN","RCDPEWL0",290,0)
 ;
"RTN","RCDPEWL0",291,0)
HDR(RCPG) ;Report hdr
"RTN","RCDPEWL0",292,0)
 ; RCPG = last page #
"RTN","RCDPEWL0",293,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL0",294,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEWL0",295,0)
 W !,?5,"EDI LOCKBOX WORKLIST - ERA DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL0",296,0)
 Q
"RTN","RCDPEWL0",297,0)
 ;
"RTN","RCDPEWL0",298,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL0",299,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL0",300,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL0",301,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL0",302,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL0",303,0)
 Q
"RTN","RCDPEWL0",304,0)
 ;
"RTN","RCDPEWL1")
0^76^B68166367
"RTN","RCDPEWL1",1,0)
RCDPEWL1 ;ALB/TMK - ELECTRONIC EOB WORKLIST SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL1",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL1",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL1",5,0)
 ; IA for call to ^DGENA = 3812
"RTN","RCDPEWL1",6,0)
 Q
"RTN","RCDPEWL1",7,0)
 ;
"RTN","RCDPEWL1",8,0)
BLD(RCSORT) ; Build the detail display record for the WL scratch pad record
"RTN","RCDPEWL1",9,0)
 ; Assume RCSCR = ien from file 344.49
"RTN","RCDPEWL1",10,0)
 ; RCSORT = "" or 'N' for no sort  'F' for 0-pays first, 'L' for last
"RTN","RCDPEWL1",11,0)
 ;
"RTN","RCDPEWL1",12,0)
 N A,A0,B,B0,Q,Q0,Q1,QQ,V1,X,Y,Z,Z0,Z3,ZZ,ZZ1,RCT,RCZ,RCZ0,RCZZ0,RCSA,RCAZ,RCAZ0,RCSCT,RCS1,RCLI1,RCY34441,RCZERO,RCTS,RCTL
"RTN","RCDPEWL1",13,0)
 N RCECME,RXARRAY,RC4,RECEIPT,AUTOERA  ;prca*4.5*298
"RTN","RCDPEWL1",14,0)
 S RCSORT=$P($G(RCSORT),U),RCSORT=$S(RCSORT="":"N",1:RCSORT)
"RTN","RCDPEWL1",15,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP($J,"RCS"),^TMP("RC_BILL",$J)
"RTN","RCDPEWL1",16,0)
 ;
"RTN","RCDPEWL1",17,0)
 S VALMCNT=0
"RTN","RCDPEWL1",18,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,"B",Z)) Q:'Z  I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEWL1",19,0)
 . S RCZ=ZZ,RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6)
"RTN","RCDPEWL1",20,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL1",21,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL1",22,0)
 . ;Q:$S('$G(^TMP("RCBATCH_SELECTED",$J)):0,1:$P(RCZ0,U,14)'=+^TMP("RCBATCH_SELECTED",$J))  ; Must be entire ERA or match the selected batch to continue
"RTN","RCDPEWL1",23,0)
 . S RCZERO=$S($P(RCZ0,U,2)["**ADJ":"-1",RCSORT="N":1,RCSORT="F":+RCS1'=0,1:+RCS1=0)
"RTN","RCDPEWL1",24,0)
 . ;
"RTN","RCDPEWL1",25,0)
 . ; This is a top-level entry - find the sublines
"RTN","RCDPEWL1",26,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEWL1",27,0)
 .. S ^TMP($J,"RCS",RCZERO,ZZ,ZZ1)=""
"RTN","RCDPEWL1",28,0)
 . S ^TMP($J,"RCS",RCZERO,ZZ)=""
"RTN","RCDPEWL1",29,0)
 ;
"RTN","RCDPEWL1",30,0)
 S RCZERO="",RCTS=0 F  S RCZERO=$O(^TMP($J,"RCS",RCZERO)) Q:RCZERO=""  S ZZ=0 F  S ZZ=$O(^TMP($J,"RCS",RCZERO,ZZ)) Q:'ZZ  D
"RTN","RCDPEWL1",31,0)
 . N A
"RTN","RCDPEWL1",32,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCY34441=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEWL1",33,0)
 .;  get ECME# and Receipt from EEOB
"RTN","RCDPEWL1",34,0)
 . S RC4=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2,3)
"RTN","RCDPEWL1",35,0)
 . S RCECME=$P(RC4,U)
"RTN","RCDPEWL1",36,0)
 . S RECEIPT=$S(+$P(RC4,U,2):$P($G(^RCY(344,$P(RC4,U,2),0)),U),1:"")
"RTN","RCDPEWL1",37,0)
 . ; get auto-post status
"RTN","RCDPEWL1",38,0)
 . S AUTOERA=$S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0)
"RTN","RCDPEWL1",39,0)
 . ;Filtering Posted/Unposted EEOBs (Auto-Posting ERAs only)
"RTN","RCDPEWL1",40,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="P",RECEIPT="" Q
"RTN","RCDPEWL1",41,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="U",RECEIPT'="" Q
"RTN","RCDPEWL1",42,0)
 . S RCTS=RCTS+1,A=$$TOPLINE(RCZ0,RCTS)
"RTN","RCDPEWL1",43,0)
 . D SET(A,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",44,0)
 . I $P(RCY34441,U,11) D
"RTN","RCDPEWL1",45,0)
 .. D SET("EEOB TRANSFERRED TO "_$E($P($G(^DIC(4,+$P(RCY34441,U,11),0)),U),1,20)_" "_$$FMTE^XLFDT($P(RCY34441,U,12),"2D")_" STATUS: "_$$EXTERNAL^DILFD(344.41,.1,"",+$P(RCY34441,U,10)),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",46,0)
 . ;
"RTN","RCDPEWL1",47,0)
 . S RCT=RCTS
"RTN","RCDPEWL1",48,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP($J,"RCS",RCZERO,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEWL1",49,0)
 .. S RCT=RCT+.001
"RTN","RCDPEWL1",50,0)
 .. S RCTL=$L(RCT)
"RTN","RCDPEWL1",51,0)
 .. S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEWL1",52,0)
 .. S V1=$S($P(RCZ0,U,2)'["**ADJ":"",$P($P(RCZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEWL1",53,0)
 .. S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),RCZ),1:"??"),1:V1)
"RTN","RCDPEWL1",54,0)
 .. D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",55,0)
 .. I '$P(RCZZ0,U,7),$P(RCZ0,U,2)'["**ADJ" D SET($J("",4+RCTL)_"***CLAIM NOT FOUND IN YOUR AR ***",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",56,0)
 .. I $P(RCZZ0,U,7) D
"RTN","RCDPEWL1",57,0)
 ... N A,RCX,Q
"RTN","RCDPEWL1",58,0)
 ... S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEWL1",59,0)
 ... ; Find Rx copay status
"RTN","RCDPEWL1",60,0)
 ... S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEWL1",61,0)
 ... ; Find M/T status
"RTN","RCDPEWL1",62,0)
 ... S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEWL1",63,0)
 ... S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEWL1",64,0)
 ... ;
"RTN","RCDPEWL1",65,0)
 ... S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEWL1",66,0)
 ... D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",67,0)
 ... S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEWL1",68,0)
 ... S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEWL1",69,0)
 ... S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEWL1",70,0)
 ... D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",71,0)
 .. ;
"RTN","RCDPEWL1",72,0)
 .. D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",73,0)
 .. I AUTOERA,$P(RCZZ0,U,3)>0 D SET($J("",9)_"Receipt: "_RECEIPT,RCTS,RCT,ZZ1)   ; if auto-posted ERA display EEOB level receipt number
"RTN","RCDPEWL1",74,0)
 .. ; displaY pharmacy EEOB data  
"RTN","RCDPEWL1",75,0)
 .. I RCECME]"" D PHARM(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEWL1",76,0)
 .. I $P(RCZZ0,U,10)'="" D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",77,0)
 .. I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D
"RTN","RCDPEWL1",78,0)
 ... S Z3=""
"RTN","RCDPEWL1",79,0)
 ... D SET($J("",4+RCTL)_"ADJUSTMENTS:",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",80,0)
 ... S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEWL1",81,0)
 .... S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEWL1",82,0)
 .... ;
"RTN","RCDPEWL1",83,0)
 .... I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",84,0)
 .... I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",85,0)
 .... ;
"RTN","RCDPEWL1",86,0)
 .... I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEWL1",87,0)
 ..... S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEWL1",88,0)
 .... I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",89,0)
 .... I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",90,0)
 .... D SET(Z3,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",91,0)
 .... I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",92,0)
 .. ;
"RTN","RCDPEWL1",93,0)
 .. I $P($G(^TMP($J,"RC_SORTPARM")),U,2) D
"RTN","RCDPEWL1",94,0)
 ... S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEWL1",95,0)
 ... I $P(RCZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZ0,U,12),0)),U),1,20)
"RTN","RCDPEWL1",96,0)
 ... D SET(A_")",+RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",97,0)
 ... S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEWL1",98,0)
 .... D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",99,0)
 .... S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEWL1",100,0)
 ..... I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),RCTS,RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEWL1",101,0)
 ..... D SET($J("",15)_B0,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",102,0)
 .. S A="",$P(A,".",79)="" D SET(A,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",103,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL1",104,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL1",105,0)
 ; I VALMCNT=0 D
"RTN","RCDPEWL1",106,0)
 ;. I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL1",107,0)
 ;. . D SET("THERE ARE NO EEOBs ASSIGNED TO THIS BATCH")
"RTN","RCDPEWL1",108,0)
 ;. E  D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",109,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",110,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEWL1",111,0)
 Q
"RTN","RCDPEWL1",112,0)
 ;
"RTN","RCDPEWL1",113,0)
TOPLINE(RCZ0,RCTS) ; Function returns the top line of the EEOB display
"RTN","RCDPEWL1",114,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEWL1",115,0)
 ; RCTS = the selectable line #
"RTN","RCDPEWL1",116,0)
 N A
"RTN","RCDPEWL1",117,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" On ERA: "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEWL1",118,0)
 I $P($G(^TMP($J,"RC_SORTPARM")),U,2) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEWL1",119,0)
 S A=$E(RCTS_$J("",4),1,4)_A
"RTN","RCDPEWL1",120,0)
 Q A
"RTN","RCDPEWL1",121,0)
 ;
"RTN","RCDPEWL1",122,0)
PHARM(RCZZ0,RCECME,RCT,ZZ1) ;
"RTN","RCDPEWL1",123,0)
 N RXARRAY
"RTN","RCDPEWL1",124,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEWL1",125,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",126,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEWL1",127,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",128,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",129,0)
 Q
"RTN","RCDPEWL1",130,0)
 ;
"RTN","RCDPEWL1",131,0)
INIT ;
"RTN","RCDPEWL1",132,0)
 S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"RTN","RCDPEWL1",133,0)
 Q
"RTN","RCDPEWL1",134,0)
 ;
"RTN","RCDPEWL1",135,0)
HDR ;
"RTN","RCDPEWL1",136,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL1",137,0)
 Q
"RTN","RCDPEWL1",138,0)
 ;
"RTN","RCDPEWL1",139,0)
FNL ; -- Clean up list
"RTN","RCDPEWL1",140,0)
 K RCFASTXT
"RTN","RCDPEWL1",141,0)
 Q
"RTN","RCDPEWL1",142,0)
 ;
"RTN","RCDPEWL1",143,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set arrays
"RTN","RCDPEWL1",144,0)
 ; X = the data to set into the global
"RTN","RCDPEWL1",145,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL1",146,0)
 ; RCSEQ1 = the sub line #
"RTN","RCDPEWL1",147,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEWL1",148,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEWL1",149,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL1",150,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL1",151,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEWL1",152,0)
 Q
"RTN","RCDPEWL1",153,0)
 ;
"RTN","RCDPEWL1",154,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEWL1",155,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEWL1",156,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEWL1",157,0)
 ; RC = the ien of file 430
"RTN","RCDPEWL1",158,0)
 N Z,Z0,Q
"RTN","RCDPEWL1",159,0)
 S Z=""
"RTN","RCDPEWL1",160,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEWL1",161,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEWL1",162,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEWL1",163,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEWL1",164,0)
 I $G(RC)'="" D
"RTN","RCDPEWL1",165,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEWL1",166,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEWL1",167,0)
 Q Z
"RTN","RCDPEWL1",168,0)
 ;
"RTN","RCDPEWL1",169,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEWL1",170,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEWL1",171,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEWL1",172,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEWL1",173,0)
 Q A
"RTN","RCDPEWL1",174,0)
 ;
"RTN","RCDPEWL1",175,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEWL1",176,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEWL1",177,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEWL1",178,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEWL1",179,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",180,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEWL1",181,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEWL1",182,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEWL1",183,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEWL1",184,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEWL1",185,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",186,0)
 Q FIRST
"RTN","RCDPEWL1",187,0)
 ;
"RTN","RCDPEWL2")
0^98^B85809764
"RTN","RCDPEWL2",1,0)
RCDPEWL2 ;ALB/TMK/KML - ELECTRONIC EOB WORKLIST ACTIONS ; 7/7/10 6:43pm
"RTN","RCDPEWL2",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL2",4,0)
 ; IA for call to OPTION^IBJTLA = 4121
"RTN","RCDPEWL2",5,0)
 ; IA for call to ASK^IBRREL = 306
"RTN","RCDPEWL2",6,0)
 ; IA call for EN1AR^IBECEA = 4047
"RTN","RCDPEWL2",7,0)
 ; IA call for MAIN^IBOHPT1 = 4048
"RTN","RCDPEWL2",8,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL2",9,0)
 Q
"RTN","RCDPEWL2",10,0)
 ;
"RTN","RCDPEWL2",11,0)
VP(RCSCR,RCDAZ) ; View/Print EOB Detail data from file 361.1
"RTN","RCDPEWL2",12,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL2",13,0)
 ; RCDAZ = array subscripted by a sequential # and
"RTN","RCDPEWL2",14,0)
 ;   RCDAZ(n) = one of 3 formats
"RTN","RCDPEWL2",15,0)
 ;     ERA level adjustments
"RTN","RCDPEWL2",16,0)
 ;          ADJ^the ien of the adj in 344.42
"RTN","RCDPEWL2",17,0)
 ;     EOB exists in file 361.1:
"RTN","RCDPEWL2",18,0)
 ;          ien of line in 344.41^ien of 361.1
"RTN","RCDPEWL2",19,0)
 ;     EOB doesn't exist in 361.1:
"RTN","RCDPEWL2",20,0)
 ;          ien of line in 344.41^-1
"RTN","RCDPEWL2",21,0)
 ;
"RTN","RCDPEWL2",22,0)
 N RCDA,%ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEWL2",23,0)
 ; Ask device
"RTN","RCDPEWL2",24,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEWL2",25,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEWL2",26,0)
 . S ZTRTN="VPOUT^RCDPEWL2",ZTDESC="AR - Print EEOB Detail from Worklist"
"RTN","RCDPEWL2",27,0)
 . S ZTSAVE("RC*")=""
"RTN","RCDPEWL2",28,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL2",29,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL2",30,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL2",31,0)
 U IO
"RTN","RCDPEWL2",32,0)
 ;
"RTN","RCDPEWL2",33,0)
VPOUT ; Entrypoint for queued job
"RTN","RCDPEWL2",34,0)
 N Z,Z0,RCSTOP,RCPG,RCREF,RC3611,RCDASH,RCDT,RC1,RC3444,RCZ,RCZ0
"RTN","RCDPEWL2",35,0)
 ;
"RTN","RCDPEWL2",36,0)
 K ^TMP("PRCA_EOB",$J),^TMP("PRCA_EOB1",$J)
"RTN","RCDPEWL2",37,0)
 S RCDT=DT,(RCSTOP,RCPG)=0,RC3444=RCSCR,RCDASH="",$P(RCDASH,"-",71)=""
"RTN","RCDPEWL2",38,0)
 I '$O(RCDAZ(0)) G VPQ
"RTN","RCDPEWL2",39,0)
 S RCZ=0 F  S RCZ=$O(RCDAZ(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL2",40,0)
 . S RCREF=$P(RCDAZ(RCZ),U),RC3611=+$P(RCDAZ(RCZ),U,2)
"RTN","RCDPEWL2",41,0)
 . K ^TMP("PRCA_EOB1",$J,RC3611)
"RTN","RCDPEWL2",42,0)
 . ;
"RTN","RCDPEWL2",43,0)
 . I $E(RCREF,1,3)["ADJ" D  Q
"RTN","RCDPEWL2",44,0)
 .. ;Display ERA level adj
"RTN","RCDPEWL2",45,0)
 .. S RCZ0=$G(^RCY(344.4,RCSCR,2,RC3611,0))
"RTN","RCDPEWL2",46,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",1)="ERA LEVEL ADJUSTMENT #"_RC3611
"RTN","RCDPEWL2",47,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",2)="   ADJUSTMENT REFERENCE #: "_$P(RCZ0,U)
"RTN","RCDPEWL2",48,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",3)="   ADJUSTMENT REASON CODE: "_$P(RCZ0,U,2)
"RTN","RCDPEWL2",49,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",4)="        ADJUSTMENT AMOUNT: "_$J(+$P(RCZ0,U,3),"",2)
"RTN","RCDPEWL2",50,0)
 .. S ^TMP("PRCA_EOB",$J,"ADJ",5)=RCDASH
"RTN","RCDPEWL2",51,0)
 . ;
"RTN","RCDPEWL2",52,0)
 . I $P(RCDAZ(RCZ),U,2)'>0 D  Q
"RTN","RCDPEWL2",53,0)
 .. ;Display formatted raw data - no EOB data in 361.1
"RTN","RCDPEWL2",54,0)
 .. K ^TMP($J,"RC_SUMRAW")
"RTN","RCDPEWL2",55,0)
 .. D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_+RCDAZ(RCZ)_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP(""PRCA_EOB"",$J,0)")
"RTN","RCDPEWL2",56,0)
 .. S ^TMP("PRCA_EOB1",$J,RC3611,1)="CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,+RCDAZ(RCZ))_"*** NOT IDENTIFIED IN A/R ****"_$S($P($G(^RCY(344.4,RCSCR,1,+RCDAZ(RCZ),0)),U,14):" (REVERSAL)",1:"")
"RTN","RCDPEWL2",57,0)
 .. K ^TMP($J,"RC_SUMRAW")
"RTN","RCDPEWL2",58,0)
 .. S ^TMP("PRCA_EOB",$J,+$O(^TMP("PRCA_EOB",$J,""),-1)+1)=RCDASH
"RTN","RCDPEWL2",59,0)
 . ;
"RTN","RCDPEWL2",60,0)
 . K ^TMP("PRCA_EOB1",$J,RC3611)
"RTN","RCDPEWL2",61,0)
 . S ^TMP("PRCA_EOB1",$J,RC3611,1)="CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,+RCDAZ(RCZ))_$S($P($G(^RCY(344.4,RCSCR,1,+RCDAZ(RCZ),0)),U,14):" (REVERSAL)",1:"")
"RTN","RCDPEWL2",62,0)
 . D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL2",63,0)
 . I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL2",64,0)
 . S ^TMP("PRCA_EOB",$J,+$O(^TMP("PRCA_EOB",$J,""),-1)+1)=RCDASH
"RTN","RCDPEWL2",65,0)
 . ;
"RTN","RCDPEWL2",66,0)
 S RC3611="" F  S RC3611=$O(^TMP("PRCA_EOB",$J,RC3611)) Q:RC3611=""!RCSTOP  D
"RTN","RCDPEWL2",67,0)
 . S RC1=1
"RTN","RCDPEWL2",68,0)
 . S Z0=0 F  S Z0=$O(^TMP("PRCA_EOB",$J,RC3611,Z0)) Q:'Z0  D  Q:RCSTOP
"RTN","RCDPEWL2",69,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL2",70,0)
 .. I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL2",71,0)
 ... D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL2",72,0)
 ... D RHDR(RCSCR,RCDT,.RCPG)
"RTN","RCDPEWL2",73,0)
 .. I RC1 W !!,$G(^TMP("PRCA_EOB1",$J,RC3611,1)) S RC1=0
"RTN","RCDPEWL2",74,0)
 .. W !,$G(^TMP("PRCA_EOB",$J,RC3611,Z0))
"RTN","RCDPEWL2",75,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL2",76,0)
 ;
"RTN","RCDPEWL2",77,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL2",78,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL2",79,0)
 ;
"RTN","RCDPEWL2",80,0)
VPQ K ^TMP("PRCA_EOB",$J),^TMP("PRCA_EOB1",$J)
"RTN","RCDPEWL2",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",82,0)
 Q
"RTN","RCDPEWL2",83,0)
 ;
"RTN","RCDPEWL2",84,0)
TPJI ; Jump to Third Party Joint Inquiry for the claim
"RTN","RCDPEWL2",85,0)
 D FULL^VALM1
"RTN","RCDPEWL2",86,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G TPJIQ
"RTN","RCDPEWL2",87,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",88,0)
 D OPTION^IBJTLA ; IA 4121
"RTN","RCDPEWL2",89,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",90,0)
 ;
"RTN","RCDPEWL2",91,0)
TPJIQ S VALMBCK="R"
"RTN","RCDPEWL2",92,0)
 Q
"RTN","RCDPEWL2",93,0)
 ;
"RTN","RCDPEWL2",94,0)
FAP ; Jump to Full Account Profile
"RTN","RCDPEWL2",95,0)
 D FULL^VALM1
"RTN","RCDPEWL2",96,0)
 ;
"RTN","RCDPEWL2",97,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G FAPQ
"RTN","RCDPEWL2",98,0)
 ;
"RTN","RCDPEWL2",99,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",100,0)
 D EN^PRCAAPR("ALL"),RET K DTOUT
"RTN","RCDPEWL2",101,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",102,0)
 ;
"RTN","RCDPEWL2",103,0)
FAPQ S VALMBCK="R"
"RTN","RCDPEWL2",104,0)
 Q
"RTN","RCDPEWL2",105,0)
 ;
"RTN","RCDPEWL2",106,0)
RELHOLD ; Jump to Release Hold function
"RTN","RCDPEWL2",107,0)
 N DIR,X,Y,RCDA,RCSCR
"RTN","RCDPEWL2",108,0)
 D FULL^VALM1
"RTN","RCDPEWL2",109,0)
 ;
"RTN","RCDPEWL2",110,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G RELHQ
"RTN","RCDPEWL2",111,0)
 ;
"RTN","RCDPEWL2",112,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",113,0)
 D ^IBRREL,RET ; IA = 306
"RTN","RCDPEWL2",114,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",115,0)
 ;
"RTN","RCDPEWL2",116,0)
RELHQ S VALMBCK="R"
"RTN","RCDPEWL2",117,0)
 Q
"RTN","RCDPEWL2",118,0)
 ;
"RTN","RCDPEWL2",119,0)
CMRPT ; Jump to claims matching report
"RTN","RCDPEWL2",120,0)
 N DIR,X,Y,RCIBY
"RTN","RCDPEWL2",121,0)
 D FULL^VALM1
"RTN","RCDPEWL2",122,0)
 ;
"RTN","RCDPEWL2",123,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G CMQ
"RTN","RCDPEWL2",124,0)
 ;
"RTN","RCDPEWL2",125,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",126,0)
 D ^RCDPRTP,RET
"RTN","RCDPEWL2",127,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",128,0)
 ;
"RTN","RCDPEWL2",129,0)
CMQ S VALMBCK="R"
"RTN","RCDPEWL2",130,0)
 Q
"RTN","RCDPEWL2",131,0)
 ;
"RTN","RCDPEWL2",132,0)
CHGMNT ; Jump to charge maintenance
"RTN","RCDPEWL2",133,0)
 N DIR,X,Y,RCSCR
"RTN","RCDPEWL2",134,0)
 D FULL^VALM1
"RTN","RCDPEWL2",135,0)
 ;
"RTN","RCDPEWL2",136,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G CHMQ
"RTN","RCDPEWL2",137,0)
 ;
"RTN","RCDPEWL2",138,0)
 I $D(^XUSEC("PRCA EDI LOCKBOX CHARGES",DUZ)) D
"RTN","RCDPEWL2",139,0)
 . M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",140,0)
 . D EN1AR^IBECEA ; IA 4047
"RTN","RCDPEWL2",141,0)
 . D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",142,0)
 E  D
"RTN","RCDPEWL2",143,0)
 . S DIR(0)="EA",DIR("A",1)="YOU DO NOT HAVE THE KEY NEEDED TO ACCESS THIS OPTION.",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",144,0)
 ;
"RTN","RCDPEWL2",145,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",146,0)
CHMQ Q
"RTN","RCDPEWL2",147,0)
 ;
"RTN","RCDPEWL2",148,0)
LSTHLD ; Jump to list current/on hold charges
"RTN","RCDPEWL2",149,0)
 N DIR,X,Y,RCIBY
"RTN","RCDPEWL2",150,0)
 D FULL^VALM1
"RTN","RCDPEWL2",151,0)
 ;
"RTN","RCDPEWL2",152,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G LHQ
"RTN","RCDPEWL2",153,0)
 ;
"RTN","RCDPEWL2",154,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",155,0)
 D MAIN^IBOHPT1,RET ; IA 4048
"RTN","RCDPEWL2",156,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",157,0)
 ;
"RTN","RCDPEWL2",158,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",159,0)
LHQ Q
"RTN","RCDPEWL2",160,0)
 ;
"RTN","RCDPEWL2",161,0)
REEST ; Jump to re-establish bill
"RTN","RCDPEWL2",162,0)
 N PRC
"RTN","RCDPEWL2",163,0)
 D FULL^VALM1
"RTN","RCDPEWL2",164,0)
 ;
"RTN","RCDPEWL2",165,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G REESTQ
"RTN","RCDPEWL2",166,0)
 ;
"RTN","RCDPEWL2",167,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",168,0)
 D ^PRCAWREA K DTOUT
"RTN","RCDPEWL2",169,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",170,0)
 D RET
"RTN","RCDPEWL2",171,0)
 ;
"RTN","RCDPEWL2",172,0)
REESTQ S VALMBCK="R"
"RTN","RCDPEWL2",173,0)
 Q
"RTN","RCDPEWL2",174,0)
 ;
"RTN","RCDPEWL2",175,0)
BILLCOM ; Jump to bill comment log
"RTN","RCDPEWL2",176,0)
 D FULL^VALM1
"RTN","RCDPEWL2",177,0)
 ;
"RTN","RCDPEWL2",178,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G BILLCOMQ
"RTN","RCDPEWL2",179,0)
 ;
"RTN","RCDPEWL2",180,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL2",181,0)
 D ^PRCACM K DTOUT
"RTN","RCDPEWL2",182,0)
 D RET
"RTN","RCDPEWL2",183,0)
 D RESTMP^RCDPEWL6
"RTN","RCDPEWL2",184,0)
 ;
"RTN","RCDPEWL2",185,0)
BILLCOMQ S VALMBCK="R"
"RTN","RCDPEWL2",186,0)
 Q
"RTN","RCDPEWL2",187,0)
 ;
"RTN","RCDPEWL2",188,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL2",189,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL2",190,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL2",191,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL2",192,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL2",193,0)
 Q
"RTN","RCDPEWL2",194,0)
 ;
"RTN","RCDPEWL2",195,0)
RHDR(RCSCR,RCDT,RCPG) ;Prints EOB detail report heading
"RTN","RCDPEWL2",196,0)
 N Z
"RTN","RCDPEWL2",197,0)
 S Z=$G(^RCY(344.4,RCSCR,0))
"RTN","RCDPEWL2",198,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL2",199,0)
 S RCPG=RCPG+1
"RTN","RCDPEWL2",200,0)
 W !,?15,"EDI LOCKBOX EEOB DETAIL FROM WORKLIST",?55,$$FMTE^XLFDT(RCDT,2),?70,"Page: ",RCPG
"RTN","RCDPEWL2",201,0)
 ; HIPAA 5010 - TRACE # increased in length from 30 to 50 characters therefore it needs to be displayed on its own line
"RTN","RCDPEWL2",202,0)
 W !!,$E(" ERA NUMBER: "_RCSCR_$J("",25),1,25)_"ERA DATE: "_$$FMTE^XLFDT($P(Z,U,4)),!,"INS COMPANY: "_$P(Z,U,6)_"/"_$P(Z,U,3)
"RTN","RCDPEWL2",203,0)
 W !,"ERA TRACE #: "_$P(Z,U,2)
"RTN","RCDPEWL2",204,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL2",205,0)
 Q
"RTN","RCDPEWL2",206,0)
 ;
"RTN","RCDPEWL2",207,0)
RET ; Pause before returning to list
"RTN","RCDPEWL2",208,0)
 N DIR,X,Y
"RTN","RCDPEWL2",209,0)
 S DIR(0)="EA",DIR("A")="RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL2",210,0)
 Q
"RTN","RCDPEWL2",211,0)
 ;
"RTN","RCDPEWL2",212,0)
NOWAY ; Msg for unidentified bill
"RTN","RCDPEWL2",213,0)
 N DIR,X,Y
"RTN","RCDPEWL2",214,0)
 S DIR(0)="EA",DIR("A",1)="THIS BILL IS NOT IDENTIFIED IN YOUR A/R",DIR("A")="THIS FUNCTION IS NOT AVAILABLE ... RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",215,0)
 Q
"RTN","RCDPEWL2",216,0)
 ;
"RTN","RCDPEWL2",217,0)
NOWAY1 ; Msg for ERA level Adjustment 
"RTN","RCDPEWL2",218,0)
 N DIR,X,Y
"RTN","RCDPEWL2",219,0)
 S DIR(0)="EA",DIR("A",1)="THIS IS AN ERA LEVEL ADJUSTMENT - NO DATA EXISTS FOR IT IN YOUR AR",DIR("A")="PRESS ENTER TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL2",220,0)
 Q
"RTN","RCDPEWL2",221,0)
 ;
"RTN","RCDPEWL2",222,0)
SET1(RCIBY,RCDA,RCDA1,RC3444,RCREF) ; Set up variables for receipt/ERA
"RTN","RCDPEWL2",223,0)
 S RCDA1=+RCIBY("IBEOB"),RCDA=+$P(RCIBY("IBEOB"),U,2),RC3444=+$P(RCIBY("IBEOB"),U,3),RCREF=+$P(RCIBY("IBEOB"),U,4)
"RTN","RCDPEWL2",224,0)
 Q
"RTN","RCDPEWL2",225,0)
 ;
"RTN","RCDPEWL2",226,0)
CHKFILE ; If the user leaves the split line screen without filing - double check
"RTN","RCDPEWL2",227,0)
 ; that they didn't want to file it.
"RTN","RCDPEWL2",228,0)
 N DIR,X,Y
"RTN","RCDPEWL2",229,0)
 D FULL^VALM1 W !!
"RTN","RCDPEWL2",230,0)
 I $G(^TMP("RCDPE_EOB_SPLIT_OK",$J)),$O(RCSPLIT(0)) D
"RTN","RCDPEWL2",231,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="YOU HAVE NOT FILED THESE CHANGES",DIR("A")="DO YOU WANT TO FILE THEM BEFORE YOU EXIT?: " D ^DIR K DIR
"RTN","RCDPEWL2",232,0)
 . I Y=1 D FILESP^RCDPEWL8
"RTN","RCDPEWL2",233,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL2",234,0)
 Q
"RTN","RCDPEWL2",235,0)
 ;
"RTN","RCDPEWL2",236,0)
EDITSP ; Action that edits the split lines
"RTN","RCDPEWL2",237,0)
 ; RCLINE,RCSCR must already exist
"RTN","RCDPEWL2",238,0)
 N DA,RCEDIT,RCDONE,RCDEF,RCSAVE,RCSAVE1
"RTN","RCDPEWL2",239,0)
 D FULL^VALM1
"RTN","RCDPEWL2",240,0)
 ;
"RTN","RCDPEWL2",241,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G EDITQ
"RTN","RCDPEWL2",242,0)
 ;
"RTN","RCDPEWL2",243,0)
 D SEL(.RCEDIT)
"RTN","RCDPEWL2",244,0)
 G:'RCEDIT EDITQ
"RTN","RCDPEWL2",245,0)
 S RCDONE=0
"RTN","RCDPEWL2",246,0)
 M RCSAVE=RCSPLIT,RCSAVE1=RCDIR S RCDEF=$G(RCSPLIT(RCEDIT)),RCSPLIT=RCEDIT
"RTN","RCDPEWL2",247,0)
 D EDIT^RCDPEWL3(RCSCR,RCLINE,.RCDIR,.RCSPLIT,RCDEF,.RCDONE)
"RTN","RCDPEWL2",248,0)
 I '$D(RCSPLIT(RCSAVE)) K RCSPLIT M RCSPLIT=RCSAVE K RCDIR M RCDIR=RCSAVE1
"RTN","RCDPEWL2",249,0)
 D INIT^RCDPEWL3
"RTN","RCDPEWL2",250,0)
EDITQ S VALMBCK="R"
"RTN","RCDPEWL2",251,0)
 Q
"RTN","RCDPEWL2",252,0)
 ;
"RTN","RCDPEWL2",253,0)
PREOB ; Print/View EOB detail
"RTN","RCDPEWL2",254,0)
 N RCDA,RCDAZ,Z,Z0
"RTN","RCDPEWL2",255,0)
 D FULL^VALM1
"RTN","RCDPEWL2",256,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL2",257,0)
 S RCDA=+$O(RCDA(0)),RCDA=$G(RCDA(RCDA))
"RTN","RCDPEWL2",258,0)
 I RCDA="" G PREOBQ
"RTN","RCDPEWL2",259,0)
 S RCDA=$P($G(^RCY(344.49,RCSCR,1,+RCDA,0)),U,9)
"RTN","RCDPEWL2",260,0)
 F RCDAZ=1:1:$L(RCDA,",") S RCDAZ(RCDAZ)=$P(RCDA,",",RCDAZ)
"RTN","RCDPEWL2",261,0)
 S Z=0 F  S Z=$O(RCDAZ(Z)) Q:'Z  D
"RTN","RCDPEWL2",262,0)
 . ;
"RTN","RCDPEWL2",263,0)
 . S Z0=RCDAZ(Z)
"RTN","RCDPEWL2",264,0)
 . I $E(Z0,1,3)="ADJ" D  Q
"RTN","RCDPEWL2",265,0)
 .. I $G(^RCY(344.4,RCSCR,2,+$P(Z0,"ADJ",2),0))'="" S RCDAZ(Z)="ADJ^"_+$P(Z0,"ADJ",2)
"RTN","RCDPEWL2",266,0)
 . ;
"RTN","RCDPEWL2",267,0)
 . S Z0=$G(^RCY(344.4,RCSCR,1,+Z0,0))
"RTN","RCDPEWL2",268,0)
 . S RCDAZ(Z)=+Z0_U_$S($P(Z0,U,2):$P(Z0,U,2),1:-1) Q
"RTN","RCDPEWL2",269,0)
 ;
"RTN","RCDPEWL2",270,0)
 D VP(RCSCR,.RCDAZ)
"RTN","RCDPEWL2",271,0)
 ;
"RTN","RCDPEWL2",272,0)
PREOBQ S VALMBCK="R"
"RTN","RCDPEWL2",273,0)
 Q
"RTN","RCDPEWL2",274,0)
 ;
"RTN","RCDPEWL2",275,0)
RESEARCH ; Invoke the research menu
"RTN","RCDPEWL2",276,0)
 ;
"RTN","RCDPEWL2",277,0)
 K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEWL2",278,0)
 S ^TMP($J,"RC_VALMBG")=$G(VALMBG)
"RTN","RCDPEWL2",279,0)
 D FULL^VALM1
"RTN","RCDPEWL2",280,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV G RQ
"RTN","RCDPEWL2",281,0)
 ;
"RTN","RCDPEWL2",282,0)
 D EN^VALM("RCDPE EOB RESEARCH")
"RTN","RCDPEWL2",283,0)
 ;
"RTN","RCDPEWL2",284,0)
RQ K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEWL2",285,0)
 Q
"RTN","RCDPEWL2",286,0)
 ;
"RTN","RCDPEWL2",287,0)
SEL(RCEDIT) ;
"RTN","RCDPEWL2",288,0)
 N VALMY
"RTN","RCDPEWL2",289,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL2",290,0)
 S RCEDIT=+$O(VALMY(0))
"RTN","RCDPEWL2",291,0)
 Q
"RTN","RCDPEWL2",292,0)
 ;
"RTN","RCDPEWL2",293,0)
EXIT ; Exits back to ERA menu actions from research
"RTN","RCDPEWL2",294,0)
 S VALMBCK="Q"
"RTN","RCDPEWL2",295,0)
 Q
"RTN","RCDPEWL2",296,0)
 ;
"RTN","RCDPEWL2",297,0)
WL(RCRCPT) ; Entrypoint to the ERA Worklist from Receipt Processing
"RTN","RCDPEWL2",298,0)
 ;RCRCPT = ien of entry in file 344
"RTN","RCDPEWL2",299,0)
 N DIR,X,Y,Z
"RTN","RCDPEWL2",300,0)
 D FULL^VALM1
"RTN","RCDPEWL2",301,0)
 ; if not at ERA summary level (344.4,.08), get a receipt match using the cross-reference at the ERA detail (RECEIPT (344.41, .25) 
"RTN","RCDPEWL2",302,0)
 S Z=$S($O(^RCY(344.4,"AREC",RCRCPT,0)):+$O(^RCY(344.4,"AREC",RCRCPT,0)),1:+$O(^RCY(344.4,"H",RCRCPT,0)))
"RTN","RCDPEWL2",303,0)
 I 'Z D  G WLQ
"RTN","RCDPEWL2",304,0)
 . S DIR("A")="THIS RECEIPT IS NOT ASSOCIATED WITH AN ERA RECORD - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL2",305,0)
 ;
"RTN","RCDPEWL2",306,0)
 I '$D(^RCY(344.49,Z,0)) D  G WLQ
"RTN","RCDPEWL2",307,0)
 . S DIR("A")="NO ERA WORKLIST SCRATCHPAD EXISTS FOR THIS ERA - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL2",308,0)
 ;
"RTN","RCDPEWL2",309,0)
 D DISP^RCDPEWL(Z,2)
"RTN","RCDPEWL2",310,0)
 ;
"RTN","RCDPEWL2",311,0)
WLQ S VALMBCK="R"
"RTN","RCDPEWL2",312,0)
 Q
"RTN","RCDPEWL2",313,0)
 ;
"RTN","RCDPEWL2",314,0)
NOTAV ; Display not available msg
"RTN","RCDPEWL2",315,0)
 N DIR,X,Y
"RTN","RCDPEWL2",316,0)
 ;
"RTN","RCDPEWL2",317,0)
 S DIR(0)="EA",DIR("A")="THIS ACTION NOT CURRENTLY AVAILABLE - PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL2",318,0)
 S VALMBCK="R"
"RTN","RCDPEWL2",319,0)
 Q
"RTN","RCDPEWL2",320,0)
 ;
"RTN","RCDPEWL4")
0^64^B46490209
"RTN","RCDPEWL4",1,0)
RCDPEWL4 ;ALB/TMK/PJH - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL4",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL4",4,0)
 ; RCSCR variable must be defined for this routine
"RTN","RCDPEWL4",5,0)
 Q
"RTN","RCDPEWL4",6,0)
 ;
"RTN","RCDPEWL4",7,0)
DISTADJ(RCFR,RCTO,RCAMT,RCCOM) ; Action that distributes an adjustment amount
"RTN","RCDPEWL4",8,0)
 ; against another line item's payment
"RTN","RCDPEWL4",9,0)
 ; Assumes RCSCR = ien of the entry in file 344.49
"RTN","RCDPEWL4",10,0)
 ; RCFR = ien of entry in 344.491 that has a negative net
"RTN","RCDPEWL4",11,0)
 ; RCTO = ien of entry in 344.491 that will be decremented
"RTN","RCDPEWL4",12,0)
 ; RCAMT = the amount being adjusted (positive #)
"RTN","RCDPEWL4",13,0)
 ; RCCOM = the comment to place on the decrease adjustment
"RTN","RCDPEWL4",14,0)
 ;
"RTN","RCDPEWL4",15,0)
 N RCFRX,RCREF,RCFR0,RCFR1,RCFR10,RCTO0,RCTO1,RCTO10,RCY,DIK,DA,DR,DIC,X,Y,DLAYGO,DD,DO,DIE,DIR
"RTN","RCDPEWL4",16,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL Q
"RTN","RCDPEWL4",17,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0)),RCFRX=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCFRX=$G(^RCY(344.49,RCSCR,1,RCFRX,0))
"RTN","RCDPEWL4",18,0)
 S RCREF=$P($P(RCFRX,U,2),"**ADJ",2),RCREF=$S(RCREF="":"",RCREF=0:$P(RCFRX,U,9),1:$P($G(^RCY(344.4,RCSCR,2,+RCREF,0)),U))
"RTN","RCDPEWL4",19,0)
 S RCFR1=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCTO1=+$O(^RCY(344.49,RCSCR,1,"B",RCTO0\1,0))
"RTN","RCDPEWL4",20,0)
 S RCFR10=$G(^RCY(344.49,RCSCR,1,RCFR1,0)),RCTO10=$G(^RCY(344.49,RCSCR,1,RCTO1,0))
"RTN","RCDPEWL4",21,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0))
"RTN","RCDPEWL4",22,0)
 S DA(2)=RCSCR,DA(1)=RCFR
"RTN","RCDPEWL4",23,0)
 S DIC("DR")=".02////1;.03////"_RCAMT_";.04////"_$S($P(RCTO0,U,2)'="":$P(RCTO0,U,2),RCREF'="":RCREF,1:"UNKNOWN")
"RTN","RCDPEWL4",24,0)
 S DIC("DR")=DIC("DR")_";.05////0;.06////0;.09////RETRACTED FUNDS DEDUCTED FROM OTHER PAYMENT ON THIS ERA",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",25,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCFR,1,"B",""),-1)+1
"RTN","RCDPEWL4",26,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",27,0)
 S RCY=+Y
"RTN","RCDPEWL4",28,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",29,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",30,0)
 ;
"RTN","RCDPEWL4",31,0)
 S DA(2)=RCSCR,DA(1)=RCTO
"RTN","RCDPEWL4",32,0)
 S DIC("DR")=".02////0;.03////"_$J(-RCAMT,"",2)
"RTN","RCDPEWL4",33,0)
 S DIC("DR")=DIC("DR")_";.04////"_$S($P(RCFR0,U,2)'="":$P(RCFR0,U,2),RCREF'="":RCREF,1:"UNKNOWN")_";.05////"_$S($P($G(^RCY(344.49,RCSCR,1,RCTO1,0)),U,2)'["**ADJ":"1;.08////0",1:0)_";.06////0"_$S(RCCOM'="":";.09////"_RCCOM,1:"")
"RTN","RCDPEWL4",34,0)
 S DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",35,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCTO,1,"B",""),-1)+1
"RTN","RCDPEWL4",36,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",37,0)
 S RCY=+Y
"RTN","RCDPEWL4",38,0)
 ;
"RTN","RCDPEWL4",39,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",40,0)
 . N DA
"RTN","RCDPEWL4",41,0)
 . S DA(2)=RCSCR,DA(1)=RCFR,DA=RCY,DIK="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1," D ^DIK
"RTN","RCDPEWL4",42,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",43,0)
 ;
"RTN","RCDPEWL4",44,0)
 S DA(1)=RCSCR,DA=RCFR,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR0,U,6)+RCAMT,"",2)_";.08////"_$J($P(RCFR0,U,8)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",45,0)
 S DA=RCFR1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR10,U,6)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",46,0)
 S DA(1)=RCSCR,DA=RCTO,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO0,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO0,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO0,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",47,0)
 S DA(1)=RCSCR,DA=RCTO1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO10,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO10,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO10,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",48,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL4",49,0)
 Q
"RTN","RCDPEWL4",50,0)
 ;
"RTN","RCDPEWL4",51,0)
NEWREC ; Create a new receipt from scratch pad entry
"RTN","RCDPEWL4",52,0)
 N Z,Z0,RCOK,RCRECTDA,RCSTOP,DIR,X,Y,RECTDA,CT,DIE,DA,DR,RCER,RCPAYTY,RCHAC,RCDEP,DIC
"RTN","RCDPEWL4",53,0)
 D FULL^VALM1
"RTN","RCDPEWL4",54,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G NEWRECQ
"RTN","RCDPEWL4",55,0)
 S (RCSTOP,RCOK)=0,VALMBCK="R"
"RTN","RCDPEWL4",56,0)
 S RECTDA=$P($G(^RCY(344.49,RCSCR,0)),U,2)
"RTN","RCDPEWL4",57,0)
 I 'RECTDA S RECTDA=$P($G(^RCY(344.4,RCSCR,0)),U,8)
"RTN","RCDPEWL4",58,0)
 I RECTDA D  G NEWRECQ
"RTN","RCDPEWL4",59,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - "_$P($G(^RCY(344,+$P($G(^RCY(344.49,RCSCR,0)),U,2),0)),U)_" - NO RECEIPT CREATED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL4",60,0)
 S DIR("A",1)="THIS ACTION WILL CREATE THE RECEIPT FOR THIS ERA.  ONCE THE RECEIPT IS",DIR("A",2)=" CREATED HERE, NO MORE AUTOMATIC ADJUSTMENTS MAY BE MADE FOR THIS ERA.",DIR("A",3)=" "
"RTN","RCDPEWL4",61,0)
 S DIR("A")="ARE YOU SURE YOU ARE READY TO CREATE THIS RECEIPT?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","RCDPEWL4",62,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL4",63,0)
 I Y'=1 S DIR(0)="EA",DIR("A")="NO RECEIPT CREATED - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",64,0)
 I $$HASADJ^RCDPEWL8(RCSCR,.RCOK) D  G NEWRECQ
"RTN","RCDPEWL4",65,0)
 . S DIR(0)="EA",DIR("A",1)="AT LEAST ONE LINE ITEM WAS FOUND WITH A NEGATIVE PAYMENT AMOUNT",DIR("A")="NO RECEIPT CAN BE CREATED - PRESS RETURN TO CONTINUE " D ^DIR K DIR S RCSTOP=1
"RTN","RCDPEWL4",66,0)
 I 'RCOK S DIR(0)="EA",DIR("A")="NO RECEIPT CAN BE CREATED - NO POSTABLE LINE ITEMS WERE FOUND" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",67,0)
 ;
"RTN","RCDPEWL4",68,0)
 S RCHAC=$$HACERA^RCDPEU(RCSCR)
"RTN","RCDPEWL4",69,0)
 S RCPAYTY=$S(RCHAC:8,$P($G(^RCY(344.4,+RCSCR,5)),U,2)="":14,1:4)
"RTN","RCDPEWL4",70,0)
 S RCDEP=""
"RTN","RCDPEWL4",71,0)
 I RCPAYTY=4 D
"RTN","RCDPEWL4",72,0)
 . N RCOK1
"RTN","RCDPEWL4",73,0)
 . F  D  Q:RCOK1
"RTN","RCDPEWL4",74,0)
 .. S RCOK1=1
"RTN","RCDPEWL4",75,0)
 .. S DIC="^RCY(344.1,",DIC("S")="I $P(^(0),U,12)=1",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL4",76,0)
 .. Q:Y'>0
"RTN","RCDPEWL4",77,0)
 .. S RCDEP=+Y
"RTN","RCDPEWL4",78,0)
 .. I RCDEP,$$TOOOLD^RCDPEWLA(RCDEP) S RCOK1=0,RCDEP=""
"RTN","RCDPEWL4",79,0)
 S RECTDA=$$BLDRCPT^RCDPUREC(DT,+RCDEP_$S(RCPAYTY=4:"ERACHK",1:""),+$O(^RC(341.1,"AC",+RCPAYTY,0))) ; Note:ERA with paper check is type 4, but receipt needs to start with an 'E'
"RTN","RCDPEWL4",80,0)
 I 'RECTDA W ! S DIR(0)="EA",DIR("A",1)="A PROBLEM WAS ENCOUNTERED ADDING THE RECEIPT - NO RECEIPT ADDED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",81,0)
 ;
"RTN","RCDPEWL4",82,0)
 D RCPTDET^RCDPEM(RCSCR,RECTDA,.RCER)
"RTN","RCDPEWL4",83,0)
 ;
"RTN","RCDPEWL4",84,0)
 S DIE="^RCY(344.49,",DA=RCSCR,DR=".02////"_RECTDA D ^DIE
"RTN","RCDPEWL4",85,0)
 S DIE="^RCY(344.4,",DA=RCSCR,DR=".08////"_RECTDA D ^DIE
"RTN","RCDPEWL4",86,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEWL4",87,0)
 S DIE="^RCY(344,",DA=RECTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"")_$S(RCPAYTY=4:";.06////"_RCDEP,1:"")_$S($P($G(^RCY(344.31,Z,0)),U,15)'="":";.16////"_$P(^RCY(344.31,Z,0),U,15),1:"") D ^DIE
"RTN","RCDPEWL4",88,0)
 ;
"RTN","RCDPEWL4",89,0)
 I $O(RCER(0)) D
"RTN","RCDPEWL4",90,0)
 . S CT=1,DIR(0)="EA",DIR("A",1)="THE FOLLOWING PROBLEMS OCCURRED WHILE ADDING THE RECEIPT: "
"RTN","RCDPEWL4",91,0)
 . S Z=0 F  S Z=$O(RCER(Z)) Q:'Z  S CT=CT+1,DIR("A",CT)=RCER(Z)
"RTN","RCDPEWL4",92,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL4",93,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL4",94,0)
 ;
"RTN","RCDPEWL4",95,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO GO TO RECEIPT PROCESSING NOW? ",DIR("A",1)=" ",DIR("A",2)="RECEIPT "_$P($G(^RCY(344,+RECTDA,0)),U)_" HAS BEEN CREATED FOR THIS ERA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL4",96,0)
 I Y=1 S RCRECTDA=RECTDA D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPEWL4",97,0)
 S RCSCR=0
"RTN","RCDPEWL4",98,0)
 S VALMBCK="Q"
"RTN","RCDPEWL4",99,0)
 ;
"RTN","RCDPEWL4",100,0)
NEWRECQ Q
"RTN","RCDPEWL4",101,0)
 ;
"RTN","RCDPEWL4",102,0)
VRECPT ; Preview receipt lines
"RTN","RCDPEWL4",103,0)
 ; Assume RCSCR = ien from file 344.49 (and 344.4)
"RTN","RCDPEWL4",104,0)
 N DIR,RCOK,RCZ,X,Y,Z,Z0
"RTN","RCDPEWL4",105,0)
 D FULL^VALM1
"RTN","RCDPEWL4",106,0)
 S VALMBCK="R"
"RTN","RCDPEWL4",107,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D VR^RCDPEWLP(RCSCR) G VRECPTQ   ; prca*4.5*298  auto-posted ERAs are handled differently
"RTN","RCDPEWL4",108,0)
 ;
"RTN","RCDPEWL4",109,0)
 ;
"RTN","RCDPEWL4",110,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL4",111,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL4",112,0)
 ; I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL Q
"RTN","RCDPEWL4",113,0)
 ;I $O(^RCY(344.49,RCSCR,3,0)) D  Q:'RCOK
"RTN","RCDPEWL4",114,0)
 ;. S RCOK=1
"RTN","RCDPEWL4",115,0)
 ;. S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,3,Z)) Q:'Z  I '$P($G(^(Z,0)),U,3) S RCOK=0 Q
"RTN","RCDPEWL4",116,0)
 ;. I 'RCOK S DIR(0)="EA",DIR("A",1)="A RECEIPT CANNOT BE PREVIEWED UNTIL ALL BATCHES FOR THIS ERA ARE MARKED AS",DIR("A",2)="'READY TO POST'",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL4",117,0)
 ; end of prca*4.5*298
"RTN","RCDPEWL4",118,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  I $P(Z,".",2) S Z0=$G(^(Z,0)) I $P(Z0,U,6)<0 S RCZ($P(Z0,U))=$P(Z0,U,2)_U_$P(Z0,U,6)
"RTN","RCDPEWL4",119,0)
 I $O(RCZ(""))'="" D
"RTN","RCDPEWL4",120,0)
 . W !,"THE FOLLOWING LINES HAVE A NET PAYMENT LESS THAN 0.  THESE LINES MUST HAVE",!,"THIS NEGATIVE AMOUNT DISTRIBUTED TO OTHER LINE(S) IN THE ERA BEFORE A",!,"RECEIPT CAN BE CREATED."
"RTN","RCDPEWL4",121,0)
 . S Z="" F  S Z=$O(RCZ(Z)) Q:Z=""  W !,$J("",5)_$J(Z,10)_"  "_$E($P(RCZ(Z),U)_$J("",15),1,15)_"  "_$J(+$P(RCZ(Z),U,2),"",2)
"RTN","RCDPEWL4",122,0)
 . W !
"RTN","RCDPEWL4",123,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEWL4",124,0)
 ;
"RTN","RCDPEWL4",125,0)
 D EN^VALM("RCDPE EOB RECEIPT PREVIEW")
"RTN","RCDPEWL4",126,0)
VRECPTQ ;
"RTN","RCDPEWL4",127,0)
 S VALMBCK=$S('$G(RCSCR):"Q",1:"R")
"RTN","RCDPEWL4",128,0)
 Q
"RTN","RCDPEWL4",129,0)
 ;
"RTN","RCDPEWL6")
0^58^B80720367
"RTN","RCDPEWL6",1,0)
RCDPEWL6 ;ALB/TMK/KML - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL6",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL6",4,0)
 Q
"RTN","RCDPEWL6",5,0)
 ;
"RTN","RCDPEWL6",6,0)
DISTADJ ; Distribute an adjustment that retracts a payment to other bill(s)
"RTN","RCDPEWL6",7,0)
 ; NOTE: RCSCR is assumed to be the IEN of the ERA entry in file 344.49
"RTN","RCDPEWL6",8,0)
 N RCDA,RCDA1,RCAMT,RCADJ,RCQUIT,Z,Z0,Z1,DIR,X,Y,CT,RCZ,RCZ1,RCZ2,RCADJOK,TOT,DTOUT,DUOUT
"RTN","RCDPEWL6",9,0)
 N RCNONSP,RCACTIVE,RCZZ1,RCZZ2,RCADJSTR  ; prca276 - variables used to establish non-specific payment adjustments and AR BILL claim status (fix to negative claim balance issue)
"RTN","RCDPEWL6",10,0)
 D FULL^VALM1
"RTN","RCDPEWL6",11,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G DISTQ   ;prca*4.5*298  auto-posted ERAs cannot enter dISTRIBUTE ADJ AMTS action      
"RTN","RCDPEWL6",12,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G DISTQ
"RTN","RCDPEWL6",13,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL G DISTQ
"RTN","RCDPEWL6",14,0)
 ;
"RTN","RCDPEWL6",15,0)
 S Z=0,RCADJOK="" F  S Z=$O(^TMP("RCDPE-EOB_WLDX",$J,Z)) Q:'Z  S Z1=+$P($G(^(Z)),U,2),Z0=$G(^RCY(344.49,RCSCR,1,Z1,0)) D
"RTN","RCDPEWL6",16,0)
 . I $P(Z0,U)'["." S RCADJOK=($P(Z0,U,2)["**ADJ") Q
"RTN","RCDPEWL6",17,0)
 . I '$P(Z0,U,7),'RCADJOK Q  ; Suspense item cannot be used to adjust
"RTN","RCDPEWL6",18,0)
 . I $P(Z0,U,6)<0 S RCZ(Z)=$P(Z0,U,6)_U_Z1 Q
"RTN","RCDPEWL6",19,0)
 . I $P(Z0,U,6)>0 D  Q
"RTN","RCDPEWL6",20,0)
 .. N Q,ONHLD,IBA
"RTN","RCDPEWL6",21,0)
 .. S ONHLD=0
"RTN","RCDPEWL6",22,0)
 .. I $P(Z0,U,7) I $$IB^IBRUTL(+$P(Z0,U,7),1) S Q=0 F  S Q=$O(IBA(Q)) Q:'Q  I $P($G(^IB(+IBA(Q),0)),U,5)=8 S ONHLD=1 Q
"RTN","RCDPEWL6",23,0)
 .. S RCZ1(+$P(Z0,U,6),Z)=Z1_U_ONHLD,RCZ2(Z)=Z1_U_$P(Z0,U,6)_U_ONHLD Q
"RTN","RCDPEWL6",24,0)
 ;
"RTN","RCDPEWL6",25,0)
 I $O(RCZ(0))="" D  G DISTQ
"RTN","RCDPEWL6",26,0)
 . S DIR(0)="EA",DIR("A",1)="NO LINES EXIST NEEDING ADJUSTMENT DISTRIBUTION",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",27,0)
 ;
"RTN","RCDPEWL6",28,0)
 I $O(RCZ1(0))="" D  G DISTQ
"RTN","RCDPEWL6",29,0)
 . S DIR(0)="EA",DIR("A",1)="NO VALID LINES EXIST ON THIS ERA WHERE A DISTRIBUTION CAN BE MADE",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",30,0)
 ;
"RTN","RCDPEWL6",31,0)
 S RCQUIT=0
"RTN","RCDPEWL6",32,0)
 F  S DIR(0)="NA^1:9999:3",DIR("A")="SELECT A LINE THAT NEEDS AN ADJUSTMENT AMOUNT DISTRIBUTED: " D  Q:RCQUIT
"RTN","RCDPEWL6",33,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE AN ADJUSTMENT THAT CAUSED A NEGATIVE NET PAYMENT.",DIR("?",2)="IN ORDER TO BALANCE THE RECEIPT AND THE DEPOSIT, THESE AMOUNTS WILL NEED TO",DIR("?",3)="  BE DISTRIBUTED TO OTHER LINE(S)",CT=3
"RTN","RCDPEWL6",34,0)
 . S Z=0
"RTN","RCDPEWL6",35,0)
 . F  S Z=$O(RCZ(Z)) Q:'Z  S CT=CT+1,DIR("?",CT)="  "_$J(Z,8)_"  "_$J($P(RCZ(Z),U),15,2)
"RTN","RCDPEWL6",36,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",37,0)
 . I $O(RCZ(0))=$O(RCZ(""),-1) S DIR("B")=$O(RCZ(0))
"RTN","RCDPEWL6",38,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",39,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA="" Q
"RTN","RCDPEWL6",40,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",41,0)
 . I '$D(RCZ(Y)) D  Q:Y=""
"RTN","RCDPEWL6",42,0)
 .. I Y'[".",$D(RCZ(Y_".001")),$O(RCZ(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",43,0)
 .. W !,$S(Y["."!($O(RCZ(Y))\1'=(Y\1)):"THIS LINE DOESN'T NEED AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",44,0)
 .. S Y=""
"RTN","RCDPEWL6",45,0)
 . W !,"  LINE #: "_+Y_"  AMOUNT NEEDED TO DISTRIBUTE: "_$J(+RCZ(Y),"",2),!
"RTN","RCDPEWL6",46,0)
 . ; RCDA = the ien of the line in file 344.491
"RTN","RCDPEWL6",47,0)
 . ; RCDA(1) = the line #        RCDA(2) = the amount to be adjusted (+)
"RTN","RCDPEWL6",48,0)
 . S RCDA=$P(RCZ(Y),U,2),RCDA(1)=Y,RCQUIT=1,RCDA(2)=-$P(RCZ(Y),U)
"RTN","RCDPEWL6",49,0)
 ;
"RTN","RCDPEWL6",50,0)
 G:$G(RCDA)="" DISTQ
"RTN","RCDPEWL6",51,0)
 ;
"RTN","RCDPEWL6",52,0)
 S RCQUIT=0
"RTN","RCDPEWL6",53,0)
 ;
"RTN","RCDPEWL6",54,0)
 S (TOT,Z)=0 F  S Z=$O(RCZ1(Z)) Q:'Z  S TOT=TOT+Z
"RTN","RCDPEWL6",55,0)
 I TOT<RCDA(2) D  G DISTQ
"RTN","RCDPEWL6",56,0)
 . S DIR(0)="EA",DIR("A",1)="THE ERA DOES NOT HAVE ENOUGH VALID PAYMENTS TO OFFSET THIS DISTRIBUTION",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",57,0)
 F  S DIR(0)="NA^1:9999:3",DIR("A")="SELECT A LINE TO DISTRIBUTE THE ADJUSTMENT AMOUNT TO: " D  Q:RCQUIT
"RTN","RCDPEWL6",58,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE A NET PAYMENT THAT CAN BE USED TO OFFSET THE",DIR("?",2)="  NEGATIVE NET PAYMENT FOR LINE "_RCDA(1)_" ("_$J(+$P(RCZ(RCDA(1)),U),"",2)_"):",CT=2
"RTN","RCDPEWL6",59,0)
 . S Z="" F  S Z=$O(RCZ1(Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(RCZ1(Z,Z0)) Q:'Z0  S CT=CT+1,DIR("?",CT)="  "_$J(Z0,8)_"  "_$J(+Z,15,2)_$S($P(RCZ1(Z,Z0),U,2):" On hold exists",1:"")
"RTN","RCDPEWL6",60,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",61,0)
 . I $O(RCZ2(0))=$O(RCZ2(""),-1) S DIR("B")=$O(RCZ2(0))
"RTN","RCDPEWL6",62,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",63,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA1="" Q
"RTN","RCDPEWL6",64,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",65,0)
 . I '$D(RCZ2(Y)) D  Q:Y=""
"RTN","RCDPEWL6",66,0)
 .. I Y'[".",$D(RCZ2(Y_".001")),$O(RCZ2(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",67,0)
 .. I Y'[".",$O(RCZ2(Y))\1'=Y S Y=Y_"."
"RTN","RCDPEWL6",68,0)
 .. W !,$S(Y[".":"THIS LINE CANNOT BE USED FOR AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",69,0)
 .. S Y=""
"RTN","RCDPEWL6",70,0)
 . ; prca276 - next few lines represent the a fix to prevent distributions agains collected/closed claims (claim balance = zero dollars)
"RTN","RCDPEWL6",71,0)
 . ;distributions should only occur on line items that have specific payments against active claims 
"RTN","RCDPEWL6",72,0)
 . S RCZZ1=$P(^TMP("RCDPE-EOB_WLDX",$J,Y),U,2) ; get line item sequence # off the VIEW order before accessing the scratchpad
"RTN","RCDPEWL6",73,0)
 . S (RCZZ2,RCNONSP)=0 F  S RCZZ2=$O(^RCY(344.49,RCSCR,1,RCZZ1,1,RCZZ2)) Q:'RCZZ2  Q:RCNONSP  S RCADJSTR=$G(^(RCZZ2,0)) S RCNONSP=$S($P(RCADJSTR,U,2)=3:1,$P(RCADJSTR,U,2)=5:1,1:0)    ;identify if non-specific payment adjustments exist
"RTN","RCDPEWL6",74,0)
 . ; do not evaluate claim status for non-specific payment adjustments
"RTN","RCDPEWL6",75,0)
 . I 'RCNONSP D  Q:'RCACTIVE
"RTN","RCDPEWL6",76,0)
 . . S RCACTIVE=$$GET1^DIQ(430,$P(^RCY(344.49,RCSCR,1,RCZZ1,0),U,7),8)
"RTN","RCDPEWL6",77,0)
 . . I (RCACTIVE'="ACTIVE")&(RCACTIVE'="OPEN") S RCACTIVE=0 W !,"THIS IS NOT AN ACTIVE BILL !",!,"CANNOT PERFORM DISTRIBUTION TO THIS CLAIM",! Q
"RTN","RCDPEWL6",78,0)
 . . S RCACTIVE=1
"RTN","RCDPEWL6",79,0)
 . I $P(RCZ2(Y),U,3) W !,"Warning - on-hold exists for this claim",!
"RTN","RCDPEWL6",80,0)
 . W !,"  LINE #: "_+Y_"  LINE BALANCE: "_$J(+$P(RCZ2(Y),U,2),"",2),!
"RTN","RCDPEWL6",81,0)
 . ; RCDA1 = the ien of the line in file 344.491
"RTN","RCDPEWL6",82,0)
 . ; RCDA1(1) = the line # in the display
"RTN","RCDPEWL6",83,0)
 . S RCDA1(1)=Y,RCDA1=+$G(RCZ2(Y)),RCQUIT=1
"RTN","RCDPEWL6",84,0)
 . S Z=$O(^RCY(344.49,RCSCR,1,"B",RCDA1(1)\1,0))
"RTN","RCDPEWL6",85,0)
 . S RCADJ=0
"RTN","RCDPEWL6",86,0)
 . I $P($G(^RCY(344.49,RCSCR,1,Z,0)),U,2)["**ADJ" S RCADJ=1 W !,"THE LINE SELECTED IS AN ADDITIONAL PAYMENT LINE, NOT SPECIFIC TO A CLAIM",!,"THE AMT WILL BE DISTRIBUTED, BUT A DECREASE ADJUSTMENT WILL NOT BE PERFORMED",!
"RTN","RCDPEWL6",87,0)
 ;
"RTN","RCDPEWL6",88,0)
 G:'$G(RCDA1) DISTQ
"RTN","RCDPEWL6",89,0)
 ;
"RTN","RCDPEWL6",90,0)
 S DIR("B")=$S(RCDA(2)<$P(RCZ2(RCDA1(1)),U,2):$J(RCDA(2),"",2),1:$J($P(RCZ2(+RCDA1(1)),U,2),"",2))
"RTN","RCDPEWL6",91,0)
 S DIR(0)="NA^.01:"_DIR("B")_":2",DIR("A")="ADJUSTMENT AMOUNT TO DISTRIBUTE: "
"RTN","RCDPEWL6",92,0)
 S DIR("?",1)="THIS IS THE AMOUNT OF THE ADJUSTMENT THAT SHOULD BE APPLIED TO THIS",DIR("?")="PAYMENT LINE.  THE AMT ENTERED MUST BE BETWEEN .01 AND "_$J(DIR("B"),"",2)
"RTN","RCDPEWL6",93,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",94,0)
 ;
"RTN","RCDPEWL6",95,0)
 I $D(DUOUT)!$D(DTOUT)!'Y D  G DISTQ
"RTN","RCDPEWL6",96,0)
 . S DIR(0)="EA",DIR("A",1)="NO AMOUNT WAS ENTERED - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",97,0)
 S RCAMT=$J(Y,"",2)
"RTN","RCDPEWL6",98,0)
 ;
"RTN","RCDPEWL6",99,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",100,0)
 I $D(DUOUT)!$D(DTOUT) D  G DISTQ
"RTN","RCDPEWL6",101,0)
 . S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",102,0)
 ;
"RTN","RCDPEWL6",103,0)
 S Y=""
"RTN","RCDPEWL6",104,0)
 I 'RCADJ D  G:'$D(RCDA) DISTQ
"RTN","RCDPEWL6",105,0)
 . N Z,RCA
"RTN","RCDPEWL6",106,0)
 . S RCA=0,Z1=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA(1)\1)),U,2),Z=$G(^RCY(344.49,RCSCR,1,Z1,0)),RCA("#")=+$P($P(Z,U,2),"**ADJ",2)
"RTN","RCDPEWL6",107,0)
 . I $P(Z,U,2)["**ADJ" D
"RTN","RCDPEWL6",108,0)
 .. S RCA=1
"RTN","RCDPEWL6",109,0)
 .. S RCA("REF")=$S(RCA("#"):$P($G(^RCY(344.4,RCSCR,2,RCA("#"),0)),U),1:$P(Z,U,9))
"RTN","RCDPEWL6",110,0)
 . S Z=$S(RCA:RCA("#"),1:$G(^RCY(344.49,RCSCR,1,RCDA,0)))
"RTN","RCDPEWL6",111,0)
 . S DIR(0)="FAO^1:60",DIR("A")="  > ",DIR("A",1)="DECREASE ADJ COMMENT (1-60 CHARACTERS): "
"RTN","RCDPEWL6",112,0)
 . S DIR("B")="RETRACTED FOR "
"RTN","RCDPEWL6",113,0)
 . S DIR("B")=DIR("B")_$S(RCA:"ERA ADJ #"_Z_" Ref: "_RCA("REF"),1:"CLAIM "_$S($P(Z,U,2)'="":$P(Z,U,2),1:"UNKNOWN"))
"RTN","RCDPEWL6",114,0)
 . I $L(DIR("B"))>60 S DIR("B")=$E(DIR("B"),1,60)
"RTN","RCDPEWL6",115,0)
 . D ^DIR K DIR
"RTN","RCDPEWL6",116,0)
 . ;
"RTN","RCDPEWL6",117,0)
 . I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","RCDPEWL6",118,0)
 .. K RCDA
"RTN","RCDPEWL6",119,0)
 .. S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",120,0)
 ;
"RTN","RCDPEWL6",121,0)
 D DISTADJ^RCDPEWL4(RCDA,RCDA1,RCAMT,Y)
"RTN","RCDPEWL6",122,0)
 ;
"RTN","RCDPEWL6",123,0)
DISTQ S VALMBCK="R"
"RTN","RCDPEWL6",124,0)
 Q
"RTN","RCDPEWL6",125,0)
 ;
"RTN","RCDPEWL6",126,0)
REFRESH ; Refresh the entry in file 344.49 to remove all user adjustments
"RTN","RCDPEWL6",127,0)
 N DA,DIK,DIR,RCQUIT,RCREDEF,X,Y,Z,Z0
"RTN","RCDPEWL6",128,0)
 D FULL^VALM1
"RTN","RCDPEWL6",129,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G REFQ   ;prca*4.5*298  auto-posted ERAs cannot enter REFRESH SCRATCHPAD action      
"RTN","RCDPEWL6",130,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G REFQ
"RTN","RCDPEWL6",131,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL6",132,0)
 ; batches but just remove from execution
"RTN","RCDPEWL6",133,0)
 ;I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL G REFQ  ;prca*4.5*298
"RTN","RCDPEWL6",134,0)
 S DIR(0)="YA"
"RTN","RCDPEWL6",135,0)
 S DIR("A",1)="THIS ACTION WILL DELETE AND REBUILD THIS EEOB WORKLIST SCRATCH PAD ENTRY",DIR("A",2)="ALL EDITS/SPLITS/DISTRIBUTE ADJUSTMENTS ENTERED FOR THIS ERA WILL BE ERASED"
"RTN","RCDPEWL6",136,0)
 S DIR("A",3)="AND ALL ENTRIES MARKED AS MANUALLY VERIFIED WILL BE UNMARKED",DIR("A",4)=" "
"RTN","RCDPEWL6",137,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: "
"RTN","RCDPEWL6",138,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",139,0)
 I Y'=1 G REFQ
"RTN","RCDPEWL6",140,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL6",141,0)
 ; batches but just remove from execution
"RTN","RCDPEWL6",142,0)
 ;I $O(^RCY(344.49,RCSCR,3,0)) S RCQUIT=0 D  I RCQUIT G REFQ
"RTN","RCDPEWL6",143,0)
 ;. S DIR(0)="YA",DIR("A")="DO YOU WANT TO REDEFINE YOUR BATCHES TOO?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL6",144,0)
 ;. I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL6",145,0)
 ;. S RCREDEF=+Y
"RTN","RCDPEWL6",146,0)
 ;. K ^TMP($J,"BATCHES")
"RTN","RCDPEWL6",147,0)
 ;. S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWL6",148,0)
 ;.. I RCREDEF S DA=Z,DA(1)=RCSCR,DIK="^RCY(344.49,"_DA(1)_",3," D ^DIK Q
"RTN","RCDPEWL6",149,0)
 ;.. S ^TMP($J,"BATCHES",+$P(Z0,U,6),$P(Z0,U,7))=+Z0_U_$P(Z0,U,8)
"RTN","RCDPEWL6",150,0)
 ;. I 'RCREDEF S ^TMP($J,"BATCHES")=+$O(^TMP($J,"BATCHES",0))
"RTN","RCDPEWL6",151,0)
 ;. I RCREDEF D SETBATCH^RCDPEWLB(RCSCR)
"RTN","RCDPEWL6",152,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL6",153,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL6",154,0)
 K ^TMP($J,"BATCHES")
"RTN","RCDPEWL6",155,0)
REFQ S VALMBG=1,VALMBCK="R"
"RTN","RCDPEWL6",156,0)
 Q
"RTN","RCDPEWL6",157,0)
 ;
"RTN","RCDPEWL6",158,0)
WHAT(RCSCR) ; Text for what to do if not enough funds found for dist adj
"RTN","RCDPEWL6",159,0)
 Q $S($O(^RCY(344.31,"AERA",+RCSCR,0)):"THIS ERA MUST BE MOVED TO SUSPENSE",1:"THIS ERA'S RECEIPT MUST BE ENTERED MANUALLY")
"RTN","RCDPEWL6",160,0)
 ;
"RTN","RCDPEWL6",161,0)
ADJUST ; Allow entry into increase/decrease adjustment functions
"RTN","RCDPEWL6",162,0)
 N DIR,X,Y,RCTYP,RCY,DIC
"RTN","RCDPEWL6",163,0)
 D FULL^VALM1
"RTN","RCDPEWL6",164,0)
 ;
"RTN","RCDPEWL6",165,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G ADJUSTQ
"RTN","RCDPEWL6",166,0)
 ; PRCA*4.5*276 - check for authorized user
"RTN","RCDPEWL6",167,0)
 I '$D(^XUSEC("PRCADJ",DUZ)) D  Q
"RTN","RCDPEWL6",168,0)
 .S DIR(0)="EA",DIR("A",1)="The Adjust (Inc/Dec) Action is locked."
"RTN","RCDPEWL6",169,0)
 .S DIR("A",2)="Please speak to your Supervisor to request the key."
"RTN","RCDPEWL6",170,0)
 .S DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",171,0)
 ; PRCA*4.5*276 - end of changes
"RTN","RCDPEWL6",172,0)
 ;
"RTN","RCDPEWL6",173,0)
 S DIR(0)="SA^D:DECREASE ADJUSTMENT;I:INCREASE ADJUSTMENT",DIR("B")="DECREASE ADJUSTMENT",DIR("A")="TYPE OF ADJUSTMENT: "
"RTN","RCDPEWL6",174,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",175,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL6",176,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="") G ADJUSTQ
"RTN","RCDPEWL6",177,0)
 ;
"RTN","RCDPEWL6",178,0)
 S RCTYP=$S(Y="D":"DECREASE",1:"INCREASE")
"RTN","RCDPEWL6",179,0)
 F  S RCY=$$GETABILL^RCBEUBIL Q:RCY<0!(RCY'<1)
"RTN","RCDPEWL6",180,0)
 G:RCY<1 ADJUSTQ
"RTN","RCDPEWL6",181,0)
 D ADJUST^RCBEADJ(RCTYP,RCY_";"_RCSCR)
"RTN","RCDPEWL6",182,0)
 I $D(^TMP("RC_BILL",$J,RCY)) D
"RTN","RCDPEWL6",183,0)
 . D UPDBAL(RCY)
"RTN","RCDPEWL6",184,0)
 . W !,"Claim balance is now: ",$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2)
"RTN","RCDPEWL6",185,0)
 ;
"RTN","RCDPEWL6",186,0)
ADJUSTQ D RESTMP
"RTN","RCDPEWL6",187,0)
 D RET^RCDPEWL2
"RTN","RCDPEWL6",188,0)
 S VALMBCK="R"
"RTN","RCDPEWL6",189,0)
 Q
"RTN","RCDPEWL6",190,0)
 ;
"RTN","RCDPEWL6",191,0)
RESTMP ;
"RTN","RCDPEWL6",192,0)
 I $D(^TMP("RC_SAVE_TMP",$J)) M ^TMP($J)=^TMP("RC_SAVE_TMP",$J) K ^TMP("RC_SAVE_TMP")
"RTN","RCDPEWL6",193,0)
 Q
"RTN","RCDPEWL6",194,0)
 ;
"RTN","RCDPEWL6",195,0)
UPDBAL(RCY) ; Updates the claim balance if bill exists in list
"RTN","RCDPEWL6",196,0)
 ; RCY = ien of bill in file 430
"RTN","RCDPEWL6",197,0)
 ;
"RTN","RCDPEWL6",198,0)
 N X,Y,Z,Z0,Z1
"RTN","RCDPEWL6",199,0)
 S Z0=$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2)
"RTN","RCDPEWL6",200,0)
 S Z=0 F  S Z=$O(^TMP("RC_BILL",$J,RCY,Z)) Q:'Z  D
"RTN","RCDPEWL6",201,0)
 . S X=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z))
"RTN","RCDPEWL6",202,0)
 . Q:'X
"RTN","RCDPEWL6",203,0)
 . S Y=$G(^TMP("RCDPE-EOB_WL",$J,X+1,0))
"RTN","RCDPEWL6",204,0)
 . I Y["Claim Bal: " S Z1=$P(Y,"Claim Bal: ")_"Claim Bal: "_Z0_$G(^TMP("RC_BILL",$J,RCY,Z)),^TMP("RCDPE-EOB_WL",$J,X+1,0)=Z1
"RTN","RCDPEWL6",205,0)
 Q
"RTN","RCDPEWL6",206,0)
 ;
"RTN","RCDPEWL7")
0^19^B96884750
"RTN","RCDPEWL7",1,0)
RCDPEWL7 ;ALB/TMK/KML - EDI LOCKBOX WORKLIST ERA DISPLAY SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL7",2,0)
 ;;4.5;Accounts Receivable;**208,222,269,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL7",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL7",4,0)
 Q
"RTN","RCDPEWL7",5,0)
 ;
"RTN","RCDPEWL7",6,0)
BLD(RCSORT) ; Build list with sort criteria
"RTN","RCDPEWL7",7,0)
 ; RCSORT = the sort levels to use to display the data in ^ pieces
"RTN","RCDPEWL7",8,0)
 ;  piece 1 = the codes for the first level sort (sort code;null or -)
"RTN","RCDPEWL7",9,0)
 ;  piece 2 = the codes for the second level sort
"RTN","RCDPEWL7",10,0)
 ;     sort code is the type of data to sort by;- indicates reverse order
"RTN","RCDPEWL7",11,0)
 N Z,Z1,RCT,RCZ
"RTN","RCDPEWL7",12,0)
 S (RCT,VALMCNT)=0
"RTN","RCDPEWL7",13,0)
 I '$D(^TMP($J,"RCERA_LIST")) D
"RTN","RCDPEWL7",14,0)
 . S Z=0 F  S Z=$O(^TMP("RCDPE-ERA_WLDX",$J,Z)) Q:'Z  S RCZ=$P($G(^(Z)),U,2) D
"RTN","RCDPEWL7",15,0)
 .. I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,$P(RCSORT,U)),$$SL(RCZ,$P(RCSORT,U,2)),RCZ)=""
"RTN","RCDPEWL7",16,0)
 . K ^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCDPE-ERA_WL",$J)
"RTN","RCDPEWL7",17,0)
 ;
"RTN","RCDPEWL7",18,0)
 S Z=""
"RTN","RCDPEWL7",19,0)
 I RCSORT'["PN;-" D
"RTN","RCDPEWL7",20,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",21,0)
 ;
"RTN","RCDPEWL7",22,0)
 I $P(RCSORT,U)["PN;-" D
"RTN","RCDPEWL7",23,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z),-1) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",24,0)
 ;
"RTN","RCDPEWL7",25,0)
 I $P(RCSORT,U,2)["PN;-" D
"RTN","RCDPEWL7",26,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1),-1) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",27,0)
 ;
"RTN","RCDPEWL7",28,0)
 I '$O(^TMP($J,"RCERA_LIST",0)) D SET("No ERAs left for your selection criteria")
"RTN","RCDPEWL7",29,0)
 K ^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",30,0)
 S ^TMP("RCERA_PARAMS",$J,"SORT")=RCSORT
"RTN","RCDPEWL7",31,0)
 Q
"RTN","RCDPEWL7",32,0)
 ;
"RTN","RCDPEWL7",33,0)
EXTRACT(RCSRT1,RCSRT2,RCT) ; Extract the data
"RTN","RCDPEWL7",34,0)
 ; RCSRT1 = data value at 1st sort level
"RTN","RCDPEWL7",35,0)
 ; RCSRT2 = data value at 2nd sort level
"RTN","RCDPEWL7",36,0)
 ; RCT = running entry counter - returned if passed by ref
"RTN","RCDPEWL7",37,0)
 N AUTOCOMP,FIRST,RC0,RCEFT,RCEXCEP,RCPOST,RCSTAT,RCZ,X,Z,Z0
"RTN","RCDPEWL7",38,0)
 S RCZ=0 F  S RCZ=$O(^TMP($J,"RCERA_LIST",RCSRT1,RCSRT2,RCZ)) Q:'RCZ  D
"RTN","RCDPEWL7",39,0)
 . S RCT=RCT+1,RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",40,0)
 . S RCEFT=+$O(^RCY(344.31,"AERA",RCZ,0))
"RTN","RCDPEWL7",41,0)
 . S RCEXCEP=$$XCEPT^RCDPEWLP(RCZ)  ; prca*4.5*298  assignment of ERA exception flag
"RTN","RCDPEWL7",42,0)
 . S AUTOCOMP=$S($P($G(^RCY(344.4,RCZ,4)),U,2)=2:"A",1:"")   ;prca*4.5*298  AUTO-POSTED COMPLETE indicator ("A")
"RTN","RCDPEWL7",43,0)
 . S RCSTAT=$S('RCEFT:U_$S($P(RC0,U,15)="CHK":"(CHECK PAYMENT EXPECTED)",$P(RC0,U,15)="NON":"(NO PAYMENT EXPECTED)",$P(RC0,U,9)=2:"(CHECK PAYMENT CHOSEN)",1:"N/A"),1:$$FMSSTAT^RCDPUREC(+$P($G(^RCY(344.31,RCEFT,0)),U,9)))
"RTN","RCDPEWL7",44,0)
 . S RCPOST=$S(RCEFT:"EFT RECEIPT STATUS: ",1:"")_$P(RCSTAT,U,2)
"RTN","RCDPEWL7",45,0)
 . ;prca*4.5*298 include Auto-Post Complete indicator and ERA exception flag in $SELECT statement
"RTN","RCDPEWL7",46,0)
 . S X=$E(RCT_$J("",5),1,5)_"  "_$S(RCEXCEP]"":RCEXCEP,AUTOCOMP]"":AUTOCOMP,$D(^RCY(344.49,RCZ)):" ",1:"-")_$E($P(RC0,U)_$J("",10),1,10)_"  "_$E($P(RC0,U,2)_$J("",50),1,50)
"RTN","RCDPEWL7",47,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",48,0)
 . S X=$J("",40)_$J($$FMTE^XLFDT($P(RC0,U,7),"2D"),8)_$J("",5)_$J(+$P(RC0,U,5),12,2)
"RTN","RCDPEWL7",49,0)
 . S $E(X,73,80)=$$FMTE^XLFDT($P(RC0,U,7),"2D")
"RTN","RCDPEWL7",50,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",51,0)
 . S X=$J("",12)_$E($P(RC0,U,6)_$J("",30),1,30)_"  APPROX # EEOBs: "_+$$CTEEOB^RCDPEWLB(RCZ)
"RTN","RCDPEWL7",52,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",53,0)
 . S X=$J("",12)_$E($$EXTERNAL^DILFD(344.4,.09,"",$P(RC0,U,9))_$J("",30),1,30)_"  "_RCPOST
"RTN","RCDPEWL7",54,0)
 . D SET(X,RCT)
"RTN","RCDPEWL7",55,0)
 . D SET(" ",RCT)
"RTN","RCDPEWL7",56,0)
 ;.; prca*4.5*298  per patch requirements, keep code related to
"RTN","RCDPEWL7",57,0)
 ;. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",58,0)
 ;. ;I $G(^TMP("RCERA_PARAMS",$J,"BATCHON")) D
"RTN","RCDPEWL7",59,0)
 ;.. ;S Z=0 F  S Z=$O(^RCY(344.49,RCZ,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="" D
"RTN","RCDPEWL7",60,0)
 ;...; S X=$J("",12)_$E("- BATCH #"_$P(Z0,U)_$J("",4),1,13)_" "_$E($P(Z0,U,2)_$J("",30),1,30)_"  "_$S('$P(Z0,U,3):"NOT ",1:"")_"READY TO POST"
"RTN","RCDPEWL7",61,0)
 ;... ;D SET(X,RCT)
"RTN","RCDPEWL7",62,0)
 ;
"RTN","RCDPEWL7",63,0)
 S VALMSG="|'-' No scratchpad|'x' EXC |'A' autopost complete"
"RTN","RCDPEWL7",64,0)
 ;
"RTN","RCDPEWL7",65,0)
 Q
"RTN","RCDPEWL7",66,0)
 ;
"RTN","RCDPEWL7",67,0)
SL(Y,SORT) ; Returns data for sort level from entry Y in file 344.4
"RTN","RCDPEWL7",68,0)
 ; SORT = the sort data in ';' delimited pieces
"RTN","RCDPEWL7",69,0)
 ;    pc 1 = code for sort data
"RTN","RCDPEWL7",70,0)
 ;    pc 2 = the order requested (- or null)
"RTN","RCDPEWL7",71,0)
 ;
"RTN","RCDPEWL7",72,0)
 N RC0,DAT,SORT1,SORT2
"RTN","RCDPEWL7",73,0)
 S SORT1=$P(SORT,";"),SORT2=$P(SORT,";",2)
"RTN","RCDPEWL7",74,0)
 S RC0=$G(^RCY(344.4,Y,0)),DAT=" "
"RTN","RCDPEWL7",75,0)
 ; No sort
"RTN","RCDPEWL7",76,0)
 I SORT="" G SLQ
"RTN","RCDPEWL7",77,0)
 ; Amt paid
"RTN","RCDPEWL7",78,0)
 I SORT1="AP" D  G SLQ
"RTN","RCDPEWL7",79,0)
 . S DAT=SORT2_+$P(RC0,U,5)
"RTN","RCDPEWL7",80,0)
 ; ERA date pd
"RTN","RCDPEWL7",81,0)
 I SORT1="DP" D  G SLQ
"RTN","RCDPEWL7",82,0)
 . S DAT=SORT2_($P(RC0,U,4)\1)
"RTN","RCDPEWL7",83,0)
 ; Payer name
"RTN","RCDPEWL7",84,0)
 I SORT1="PN" D  G SLQ
"RTN","RCDPEWL7",85,0)
 . S DAT=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL7",86,0)
 ; ERA date received
"RTN","RCDPEWL7",87,0)
 I SORT1="DR" D  G SLQ
"RTN","RCDPEWL7",88,0)
 . S DAT=SORT2_($P(RC0,U,7)\1)
"RTN","RCDPEWL7",89,0)
 ;
"RTN","RCDPEWL7",90,0)
SLQ Q $S(DAT'="":DAT,1:" ")
"RTN","RCDPEWL7",91,0)
 ;
"RTN","RCDPEWL7",92,0)
INIT ; Entry point for List template to build the display of ERAs
"RTN","RCDPEWL7",93,0)
 ;
"RTN","RCDPEWL7",94,0)
 ; Parameters for selecting ERAs to be included in the list are
"RTN","RCDPEWL7",95,0)
 ; contained in the global ^TMP("RCERA_PARAMS",$J,parameter name)
"RTN","RCDPEWL7",96,0)
 ;
"RTN","RCDPEWL7",97,0)
 N RCZ,RC0,RCT,RCTT,RCQUIT,RCDTFR,RCDTTO,DTOUT,DUOUT,DIR,X,Y,Z,Z1,RCPOST,RCEFT,RCINDX,QFLG
"RTN","RCDPEWL7",98,0)
 D CLEAN^VALM10
"RTN","RCDPEWL7",99,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",100,0)
 ;
"RTN","RCDPEWL7",101,0)
 S (RCT,RCTT,RCQUIT)=0
"RTN","RCDPEWL7",102,0)
 ;
"RTN","RCDPEWL7",103,0)
 S RCDTFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTTO=$S($P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2):$P(^("RCDT"),U,2),1:DT)
"RTN","RCDPEWL7",104,0)
 ;
"RTN","RCDPEWL7",105,0)
 S RCINDX=$S(RCDTFR:RCDTFR-.00000001,1:0)
"RTN","RCDPEWL7",106,0)
 W !!,"SEARCHING, PLEASE STANDBY (PRESS '^' TO QUIT SEARCH)",!!
"RTN","RCDPEWL7",107,0)
 F  S RCINDX=$O(^RCY(344.4,"AFD",RCINDX)) Q:'RCINDX!(RCINDX\1>RCDTTO)!RCQUIT  S RCZ=0 F  S RCZ=$O(^RCY(344.4,"AFD",RCINDX,RCZ)) Q:'RCZ  D  Q:RCQUIT
"RTN","RCDPEWL7",108,0)
 . S RCTT=RCTT+1
"RTN","RCDPEWL7",109,0)
 . I (RCTT#10000=0) D  Q:RCQUIT=1
"RTN","RCDPEWL7",110,0)
 . . S RCTT=0
"RTN","RCDPEWL7",111,0)
 . . D WAIT^DICD
"RTN","RCDPEWL7",112,0)
 . . D INITKB^XGF ; supported by DBIA 3173
"RTN","RCDPEWL7",113,0)
 . . S QFLG=$$READ^XGF(1,1)
"RTN","RCDPEWL7",114,0)
 . . Q:$G(DTOUT)
"RTN","RCDPEWL7",115,0)
 . . S:QFLG="^" RCQUIT=1 Q
"RTN","RCDPEWL7",116,0)
 . . I $D(DUOUT)!(Y=0) S RCQUIT=1 Q
"RTN","RCDPEWL7",117,0)
 . . D RESETKB^XGF
"RTN","RCDPEWL7",118,0)
 . ;
"RTN","RCDPEWL7",119,0)
 . S RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",120,0)
 . I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,"DR"),$$SL(RCZ,""),RCZ)=""
"RTN","RCDPEWL7",121,0)
 ;
"RTN","RCDPEWL7",122,0)
 ; Output the list
"RTN","RCDPEWL7",123,0)
 I 'RCQUIT D
"RTN","RCDPEWL7",124,0)
 . D:$D(^TMP($J,"RCERA_LIST")) BLD("DR^N")
"RTN","RCDPEWL7",125,0)
 . ; If no ERAs found display the message below in the list area
"RTN","RCDPEWL7",126,0)
 . I '$O(^TMP("RCDPE-ERA_WL",$J,0)) D
"RTN","RCDPEWL7",127,0)
 . . S ^TMP("RCDPE-ERA_WL",$J,1,0)="THERE ARE NO ERAs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=2
"RTN","RCDPEWL7",128,0)
 I RCQUIT K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST") S VALMQUIT=""
"RTN","RCDPEWL7",129,0)
 Q
"RTN","RCDPEWL7",130,0)
 ;
"RTN","RCDPEWL7",131,0)
HDR ; Header for ERA Worklist (List user Current Screen View selections)
"RTN","RCDPEWL7",132,0)
 N X
"RTN","RCDPEWL7",133,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWL7",134,0)
 S VALMHDR(1)="SELECTED MATCH STATUS: "_$S(X="N":"NOT MATCHED",X="M":"MATCHED",1:"BOTH")
"RTN","RCDPEWL7",135,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL7",136,0)
 S $E(VALMHDR(1),42)="POST STATUS     : "_$S(X="U":"UNPOSTED",X="P":"POSTED",1:"BOTH")
"RTN","RCDPEWL7",137,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCDT"))
"RTN","RCDPEWL7",138,0)
 S VALMHDR(2)=$J("",11)_"DATE RANGE: "_$S($P(X,U):$$FMTE^XLFDT($P(X,U),2)_$S($P(X,U,2):"-"_$$FMTE^XLFDT($P(X,U,2),2),1:""),1:"NONE SELECTED")
"RTN","RCDPEWL7",139,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWL7",140,0)
 S $E(VALMHDR(2),42)="AUTO-POSTING    : "_$S(X="A":"AUTO-POSTING ONLY",X="N":"NON AUTO-POSTING ONLY",1:"BOTH")
"RTN","RCDPEWL7",141,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWL7",142,0)
 S VALMHDR(3)=$J("",10)_$S($P(X,U)="A"!(X=""):"ALL PAYERS",1:"PAYERS: "_$P(X,U,2)_"-"_$P(X,U,3))
"RTN","RCDPEWL7",143,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL7",144,0)
 S $E(VALMHDR(3),42)="PHARMACY/MEDICAL: "_$S(X="M":"MEDICAL ONLY",X="P":"PHARMACY ONLY",1:"BOTH")
"RTN","RCDPEWL7",145,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCERA_TRACE#"))
"RTN","RCDPEWL7",146,0)
 S VALMHDR(4)="#       ERA #            Trace#"
"RTN","RCDPEWL7",147,0)
 Q
"RTN","RCDPEWL7",148,0)
 ;
"RTN","RCDPEWL7",149,0)
FNL ; -- Clean up list
"RTN","RCDPEWL7",150,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCERA_PARAMS",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",151,0)
 Q
"RTN","RCDPEWL7",152,0)
 ;
"RTN","RCDPEWL7",153,0)
SET(X,RCSEQ,RCSEQ1) ; -- set arrays
"RTN","RCDPEWL7",154,0)
 ; X = the data to set into the global
"RTN","RCDPEWL7",155,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL7",156,0)
 ; RCSEQ1 = the ien of the entry in file 344.4
"RTN","RCDPEWL7",157,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-ERA_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL7",158,0)
 I $G(RCSEQ) S ^TMP("RCDPE-ERA_WL",$J,"IDX",VALMCNT,RCSEQ)=$G(RCSEQ1)
"RTN","RCDPEWL7",159,0)
 I $G(RCSEQ1) S ^TMP("RCDPE-ERA_WLDX",$J,RCSEQ)=VALMCNT_U_RCSEQ1
"RTN","RCDPEWL7",160,0)
 Q
"RTN","RCDPEWL7",161,0)
 ;
"RTN","RCDPEWL7",162,0)
ENTERWL ; Enter the worklist with an ERA
"RTN","RCDPEWL7",163,0)
 D WL($$SEL())
"RTN","RCDPEWL7",164,0)
 D BLD($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL7",165,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",166,0)
 Q
"RTN","RCDPEWL7",167,0)
 ;
"RTN","RCDPEWL7",168,0)
SEL() ; Select an ERA from the ERA list
"RTN","RCDPEWL7",169,0)
 N RCDA,VALMY
"RTN","RCDPEWL7",170,0)
 D FULL^VALM1
"RTN","RCDPEWL7",171,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL7",172,0)
 S RCERA=0
"RTN","RCDPEWL7",173,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCERA=+$P($G(^TMP("RCDPE-ERA_WLDX",$J,RCDA)),U,2)
"RTN","RCDPEWL7",174,0)
 ;
"RTN","RCDPEWL7",175,0)
 Q RCERA
"RTN","RCDPEWL7",176,0)
 ;
"RTN","RCDPEWL7",177,0)
WL(RCERA) ; Enter worklist
"RTN","RCDPEWL7",178,0)
 ;
"RTN","RCDPEWL7",179,0)
 ;             input - RCERA = ien of the ERA entry in file 344.4
"RTN","RCDPEWL7",180,0)
 ;
"RTN","RCDPEWL7",181,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,I,PREVENT,RC0,RCNOED,RCQUIT,RCSORT,RETCODES,STATE,TYPE,X,Y
"RTN","RCDPEWL7",182,0)
 Q:RCERA'>0
"RTN","RCDPEWL7",183,0)
 S TYPE=$S($$PHARM^RCDPEWLP(RCERA):"P",1:"M")
"RTN","RCDPEWL7",184,0)
 I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP Q  ;cannot process MEDICAL ERA if exception exists
"RTN","RCDPEWL7",185,0)
 S (RCQUIT,RCNOED,PREVENT)=0,RC0=$G(^RCY(344.4,RCERA,0)),RCSORT=""
"RTN","RCDPEWL7",186,0)
 I $P(RC0,U,8) D
"RTN","RCDPEWL7",187,0)
 . I '$D(^RCY(344.49,RCERA,0)) D  Q
"RTN","RCDPEWL7",188,0)
 .. S RCQUIT=1
"RTN","RCDPEWL7",189,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="A SCRATCH PAD WAS NOT CREATED FOR THIS ERA BEFORE POSTING",DIR("A",2)="USE THE VIEW/PRINT ERA OPTION TO SEE ITS DETAIL",DIR("A")="Press ENTER to continue: " D ^DIR K DIR Q
"RTN","RCDPEWL7",190,0)
 . ;
"RTN","RCDPEWL7",191,0)
 . S RCNOED=+$P(RC0,U,8)
"RTN","RCDPEWL7",192,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - YOU MAY ONLY VIEW ITS SCRATCH PAD",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWL7",193,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEWL7",194,0)
 G:RCQUIT WLQ
"RTN","RCDPEWL7",195,0)
 G:RCNOED WLD   ; already has a receipt so no need to check for older unposted EFTs
"RTN","RCDPEWL7",196,0)
 ; function $$AGEDEFTS - search for any UNPOSTED EFTs older than 14 days (medical) or 30 days (pharmacy)
"RTN","RCDPEWL7",197,0)
 ; return value of 0, 2, or 3 represent that entry into scratchpad can occur
"RTN","RCDPEWL7",198,0)
 S RETCODES=$$AGEDEFTS^RCDPEWLP(RCERA,TYPE)
"RTN","RCDPEWL7",199,0)
 F I=1:1 S STATE=$P(RETCODES,U,I) Q:STATE=""  S PREVENT=$S($E(STATE,1)=1:1,1:0)
"RTN","RCDPEWL7",200,0)
 Q:PREVENT   ; prevent user from entering scratchpad; there are older EFTs on the system that need to be worked.
"RTN","RCDPEWL7",201,0)
WLD ;
"RTN","RCDPEWL7",202,0)
 D DISP^RCDPEWL(RCERA,RCNOED)
"RTN","RCDPEWL7",203,0)
 ;
"RTN","RCDPEWL7",204,0)
 ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL7",205,0)
 ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",206,0)
 ;I 'RCQUIT,$G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL7",207,0)
 ;. S DA(1)=RCERA,DA=+$G(^TMP("RCBATCH_SELECTED",$J)),DR=".05////0",DIE="^RCY(344.49,"_DA(1)_",3," D ^DIE
"RTN","RCDPEWL7",208,0)
 ;. L -^RCY(344.49,DA(1),3,DA,0)
"RTN","RCDPEWL7",209,0)
 ;. K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",210,0)
 ;E  D
"RTN","RCDPEWL7",211,0)
 ;L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",212,0)
WLQ ;
"RTN","RCDPEWL7",213,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",214,0)
 Q
"RTN","RCDPEWL7",215,0)
 ;
"RTN","RCDPEWL7",216,0)
PRERA ; View/Print ERA from ERA list menu
"RTN","RCDPEWL7",217,0)
 N RCSCR
"RTN","RCDPEWL7",218,0)
 S RCSCR=$$SEL()
"RTN","RCDPEWL7",219,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEWL7",220,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",221,0)
 Q
"RTN","RCDPEWL7",222,0)
 ;
"RTN","RCDPEWL7",223,0)
BAT(RCERA) ; Select batch, if needed
"RTN","RCDPEWL7",224,0)
 ; Returns 1 if batch selected OK or no batch needed
"RTN","RCDPEWL7",225,0)
 ; RCERA = ien of entry in file 344.49
"RTN","RCDPEWL7",226,0)
 N RCINUSE,RCQUIT,RCADJ,RC0,RCOK,DIR,DTOUT,DUOUT,X,Y,Z
"RTN","RCDPEWL7",227,0)
 K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",228,0)
 S RCOK=1
"RTN","RCDPEWL7",229,0)
 I '$O(^RCY(344.49,RCERA,3,0)) G BATQ
"RTN","RCDPEWL7",230,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL7",231,0)
 S (RCQUIT,RCADJ)=0
"RTN","RCDPEWL7",232,0)
 I $$HASADJ^RCDPEWL8(RCERA) D
"RTN","RCDPEWL7",233,0)
 . S RCADJ=1
"RTN","RCDPEWL7",234,0)
 . S DIR("A",1)="THIS ERA HAS NEGATIVE ADJUSTMENTS THAT NEED TO BE DISTRIBUTED TO OTHER",DIR("A",2)="PAYMENTS ON THE ERA.  YOU CANNOT SELECT ANY INDIVIDUAL BATCHES UNTIL",DIR("A",3)="THE DISTRIBUTIONS ARE COMPLETE."
"RTN","RCDPEWL7",235,0)
 . S DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL7",236,0)
 S RCINUSE=+$O(^RCY(344.49,"AINUSE",1,RCERA,0))
"RTN","RCDPEWL7",237,0)
 I RCINUSE D
"RTN","RCDPEWL7",238,0)
 . N OK,Z
"RTN","RCDPEWL7",239,0)
 . Q:RCADJ!$P(RC0,U,8)
"RTN","RCDPEWL7",240,0)
 . S OK=0 S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  I '$P($G(^RCY(344.49,RCERA,3,Z,0)),U,5) S OK=1 Q
"RTN","RCDPEWL7",241,0)
 . I 'OK D  Q
"RTN","RCDPEWL7",242,0)
 .. S DIR("A",1)="ALL BATCHES WITHIN THIS ERA ARE CURRENTLY IN USE - TRY AGAIN LATER",DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",243,0)
 . W !!,"AT LEAST 1 BATCH WITHIN THIS ERA IS CURRENTLY IN USE",!,"AT THIS TIME, YOU CAN ONLY ACCESS INDIVIDUAL BATCHES",!
"RTN","RCDPEWL7",244,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",245,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",246,0)
 E  D
"RTN","RCDPEWL7",247,0)
 . Q:$P(RC0,U,8)!RCADJ  ; Always require the entire ERA be used
"RTN","RCDPEWL7",248,0)
 . S DIR(0)="SA^E:(E)NTIRE ERA;B:(B)ATCH",DIR("A")="DO YOU WANT THE (E)NTIRE ERA OR JUST A (B)ATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL7",249,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",250,0)
 . I Y="E" D  Q
"RTN","RCDPEWL7",251,0)
 .. S RCQUIT=1 F Z=1:1:2 L +^RCY(344.4,RCERA,0):5 I $T S RCQUIT=0 Q
"RTN","RCDPEWL7",252,0)
 .. I RCQUIT S RCOK=0,DIR(0)="EA",DIR("A",1)="ANOTHER USER IS CURRENTLY USING THIS ERA, TRY AGAIN LATER",DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR Q
"RTN","RCDPEWL7",253,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",254,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",255,0)
 ;
"RTN","RCDPEWL7",256,0)
BATQ Q RCOK
"RTN","RCDPEWL7",257,0)
 ;
"RTN","RCDPEWL7",258,0)
HELP ; -- help code
"RTN","RCDPEWL7",259,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPEWL7",260,0)
 Q
"RTN","RCDPEWL7",261,0)
 ;
"RTN","RCDPEWL8")
0^59^B82558343
"RTN","RCDPEWL8",1,0)
RCDPEWL8 ;ALB/TMK/PJH - EDI LOCKBOX WORKLIST ERA LEVEL ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL8",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWL8",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL8",4,0)
 Q
"RTN","RCDPEWL8",5,0)
 ;
"RTN","RCDPEWL8",6,0)
FILESP ; Action that files the split lines
"RTN","RCDPEWL8",7,0)
 ; Assumes RCDIR,RCLINE,RCSCR,RCSPLIT array defined
"RTN","RCDPEWL8",8,0)
 N RCTOT,Z,RCZ0,RCZ1,DTOUT,DUOUT,DIR,X,Y,DIE,DA,DR,DIC,DD,DO,DLAYGO,RCZ,RCZZ,RCZT,VALBCK
"RTN","RCDPEWL8",9,0)
 D FULL^VALM1
"RTN","RCDPEWL8",10,0)
 I '$G(^TMP("RCDPE_EOB_SPLIT_OK",$J)) D  Q
"RTN","RCDPEWL8",11,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",12,0)
 . F Z=2,3 S RCTOT(Z)=$$TOT^RCDPEWL3(Z,.RCSPLIT)
"RTN","RCDPEWL8",13,0)
 . S DIR(0)="EA"
"RTN","RCDPEWL8",14,0)
 . S DIR("A",1)="TOTAL "_$S(+RCTOT(2)'=+$P(RCDIR,U,2):"PAYMENTS",1:"ADJUSTMENTS")_$S(+RCTOT(3)=+$P(RCDIR,U,3):"",+RCTOT(2)'=+$P(RCDIR,U,2):" AND ADJUSTMENTS",1:"")_" DO NOT MATCH THE ORIGINAL AMOUNT(s):"
"RTN","RCDPEWL8",15,0)
 . S DIR("A",2)=$E("  ORIG PAY AMT: "_$J(+$P(RCDIR,U,2),"",2)_$J("",35),1,35)_" ORIG ADJ AMT: "_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL8",16,0)
 . S DIR("A",3)=$E("   AMT ENTERED: "_$J(+RCTOT(2),"",2)_$J("",35),1,35)_"  AMT ENTERED: "_$J(+RCTOT(3),"",2)
"RTN","RCDPEWL8",17,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",18,0)
 S DA(1)=RCSCR
"RTN","RCDPEWL8",19,0)
 S RCZ0=+$P(RCLINE,U,2),RCZZ=+$G(^RCY(344.49,DA(1),1,RCZ0,0)),RCZZ(1)=""
"RTN","RCDPEWL8",20,0)
 S RCZ=+$O(RCSPLIT(0))
"RTN","RCDPEWL8",21,0)
 ;
"RTN","RCDPEWL8",22,0)
 ;Option to move/copy EOB
"RTN","RCDPEWL8",23,0)
 I RCZ D  Q:$G(VALMBCK)="Q"
"RTN","RCDPEWL8",24,0)
 .;;Move/Copy removed 10/19/11-now in receipt creation +136^RCDPEM
"RTN","RCDPEWL8",25,0)
 .;;Q:$$UPDWL^RCDPEM5($P(RCDIR,U),.RCSPLIT,RCERA)
"RTN","RCDPEWL8",26,0)
 .;;User abort
"RTN","RCDPEWL8",27,0)
 .;;K ^TMP($J,"RCDPE_SPLIT_FILE") S VALMBCK="Q"
"RTN","RCDPEWL8",28,0)
 ;
"RTN","RCDPEWL8",29,0)
 I RCZ D
"RTN","RCDPEWL8",30,0)
 . S DIE="^RCY(344.49,"_DA(1)_",1,",DA=RCZ0,RCZT=$P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3)
"RTN","RCDPEWL8",31,0)
 . S DR=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.06////"_$J(+RCZT,"",2)_";.08////"_$J($P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",32,0)
 . S DR=DR_";.07///"_$S($P(RCSPLIT(RCZ),U,5):"/"_$P(RCSPLIT(RCZ),U,5),1:"@")_";.03////"_$S(RCZT'<0:$J(+RCZT,"",2),1:"0.00")_$S($P(RCSPLIT(RCZ),U,6)'="":";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@"),1:"")
"RTN","RCDPEWL8",33,0)
 . D ^DIE,UPD^RCDPEWL3(DA(1),DA)
"RTN","RCDPEWL8",34,0)
 . I $P(RCDIR,U,3) D
"RTN","RCDPEWL8",35,0)
 .. N DA
"RTN","RCDPEWL8",36,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ0,DA=1,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",37,0)
 .. S RCZZ(1)=$G(^RCY(344.49,DA(2),1,DA(1),1,1,0))
"RTN","RCDPEWL8",38,0)
 .. S DR=".03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":".09////"_$P(RCSPLIT(RCZ),U,4),1:"")
"RTN","RCDPEWL8",39,0)
 .. D ^DIE
"RTN","RCDPEWL8",40,0)
 F  S RCZ=$O(RCSPLIT(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL8",41,0)
 . S DIC(0)="L",DLAYGO=344.491,DIC="^RCY(344.49,"_DA(1)_",1,",X=+$O(^RCY(344.49,RCSCR,1,"B",RCZZ\1+.999),-1)+.001
"RTN","RCDPEWL8",42,0)
 . S DIC("DR")=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.08////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_";.06////"_$J($P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",43,0)
 . I $P(RCSPLIT(RCZ),U,6)'="" S DIC("DR")=DIC("DR")_";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@")
"RTN","RCDPEWL8",44,0)
 . I $P(RCSPLIT(RCZ),U,5) S DIC("DR")=DIC("DR")_";.07////"_$P(RCSPLIT(RCZ),U,5)
"RTN","RCDPEWL8",45,0)
 . K DD,DO D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",46,0)
 . S RCZ1=+Y
"RTN","RCDPEWL8",47,0)
 . I Y D UPD^RCDPEWL3(RCSCR,RCZ1)
"RTN","RCDPEWL8",48,0)
 . I Y,$P(RCDIR,U,3) D
"RTN","RCDPEWL8",49,0)
 .. N DA
"RTN","RCDPEWL8",50,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ1,X=1,DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",51,0)
 .. S DIC("DR")=".02////"_$P(RCZZ(1),U,2)_";.03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":";.09////"_$P(RCSPLIT(RCZ),U,4),$P(RCZZ(1),U,9)'="":";.09////"_$P(RCZZ(1),U,9),1:"")
"RTN","RCDPEWL8",52,0)
 .. F Z=4:1:8 I $P(RCZZ(1),U,Z)'="" S DIC("DR")=DIC("DR")_";"_(Z/100)_"////"_$P(RCZZ(1),U,Z)
"RTN","RCDPEWL8",53,0)
 .. D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",54,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL8",55,0)
 S VALMBCK="Q"
"RTN","RCDPEWL8",56,0)
 Q
"RTN","RCDPEWL8",57,0)
 ;
"RTN","RCDPEWL8",58,0)
SELBAT(RCERA,RCQUIT) ; Select a batch
"RTN","RCDPEWL8",59,0)
 ; If batch is selected, global ^TMP("RCBATCH_SELECTED",$J) is set = 
"RTN","RCDPEWL8",60,0)
 ;   batch ien selected
"RTN","RCDPEWL8",61,0)
 ; RCQUIT = 1 if selection not made
"RTN","RCDPEWL8",62,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",63,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",64,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,DUOUT,RCBAT,X,Y
"RTN","RCDPEWL8",65,0)
 S RCQUIT=0
"RTN","RCDPEWL8",66,0)
 S DA(1)=RCERA,DIC(0)="AEMQ",DIC="^RCY(344.49,"_DA(1)_",3,",DIC("S")="I '$P(^(0),U,5)" D ^DIC
"RTN","RCDPEWL8",67,0)
 I Y'>0 S RCQUIT=1 Q
"RTN","RCDPEWL8",68,0)
 S RCBAT=+Y
"RTN","RCDPEWL8",69,0)
 L +^RCY(344.4,RCERA,0):5 I '$T S DIR("A",1)="ANOTHER USER HAS JUST ACCESSED THE ENTIRE ERA - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",70,0)
 L +^RCY(344.49,RCERA,3,RCBAT,0):5 I '$T!$P($G(^(0)),U,5) S DIR("A",1)="ANOTHER USER HAS JUST OPENED THIS BATCH - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)=-"EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",71,0)
 S DA=RCBAT,DA(1)=RCERA,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".05////1" D ^DIE L -^RCY(344.49,RCERA,3,RCBAT,0)
"RTN","RCDPEWL8",72,0)
 I $P($G(^RCY(344.49,RCERA,3,RCBAT,0)),U,3) D
"RTN","RCDPEWL8",73,0)
 . S DIR(0)="EA",DIR("A",1)="** WARNING - THIS BATCH HAS BEEN FLAGGED AS READY TO POST",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",74,0)
 S ^TMP("RCBATCH_SELECTED",$J)=RCBAT
"RTN","RCDPEWL8",75,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL8",76,0)
 Q
"RTN","RCDPEWL8",77,0)
 ;
"RTN","RCDPEWL8",78,0)
SORT ; Select a new sort for the list of ERAs
"RTN","RCDPEWL8",79,0)
 D FULL^VALM1
"RTN","RCDPEWL8",80,0)
 N RCSORT,DUOUT,DTOUT,DIR,X,Y,RCS1,RCS2,RCORD
"RTN","RCDPEWL8",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",82,0)
 S DIR("L",1)="  SELECT A FIRST LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",83,0)
 S DIR("L",3)="    A  AMOUNT PAID      E  ERA PAID DATE"
"RTN","RCDPEWL8",84,0)
 S DIR("L")="    P  PAYER NAME       D  DATE ERA RECEIVED"
"RTN","RCDPEWL8",85,0)
 S DIR(0)="S^A:AMOUNT PAID;E:ERA PAID DATE;P:PAYER NAME;D:DATE ERA RECEIVED",DIR("B")=$P($P(DIR(0),"D:",2),";")
"RTN","RCDPEWL8",86,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL8",87,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",88,0)
 S RCS1=$S(Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",89,0)
 S RCORD=$$ORD(.RCS1)
"RTN","RCDPEWL8",90,0)
 Q:'$D(RCS1)
"RTN","RCDPEWL8",91,0)
 S $P(RCSORT,U)=(RCS1_";"_RCORD)
"RTN","RCDPEWL8",92,0)
 K X
"RTN","RCDPEWL8",93,0)
 S X(1)=$S(RCS1'="AP":"A:AMOUNT PAID",1:"E:ERA PAID DATE")
"RTN","RCDPEWL8",94,0)
 S X(2)=$S(RCS1'="AP"&(RCS1'="DP"):"E:ERA PAID DATE",1:"P:PAYER NAME")
"RTN","RCDPEWL8",95,0)
 S X(3)=$S(RCS1="DR":"P:PAYER NAME",1:"D:DATE ERA RECEIVED")
"RTN","RCDPEWL8",96,0)
 S DIR(0)="S^N:NONE;"_X(1)_";"_X(2)_";"_X(3)
"RTN","RCDPEWL8",97,0)
 S DIR("B")="NONE"
"RTN","RCDPEWL8",98,0)
 S DIR("L",1)="  SELECT A SECOND LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",99,0)
 S DIR("L",3)="    N  NONE"_$J("",13)_$P(X(1),":")_"  "_$P(X(1),":",2)
"RTN","RCDPEWL8",100,0)
 S DIR("L")="    "_$E($P(X(2),":")_"  "_$P(X(2),":",2)_$J("",20),1,20)_$P(X(3),":")_"  "_$P(X(3),":",2)
"RTN","RCDPEWL8",101,0)
 K X W ! D ^DIR K DIR
"RTN","RCDPEWL8",102,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",103,0)
 S RCS2=$S(Y="N":"N",Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",104,0)
 S RCORD=$$ORD(.RCS2)
"RTN","RCDPEWL8",105,0)
 Q:'$D(RCS2)
"RTN","RCDPEWL8",106,0)
 S $P(RCSORT,U,2)=(RCS2_";"_RCORD)
"RTN","RCDPEWL8",107,0)
 K ^TMP($J,"RCERA_LIST") D BLD^RCDPEWL7(RCSORT)
"RTN","RCDPEWL8",108,0)
 Q
"RTN","RCDPEWL8",109,0)
 ;
"RTN","RCDPEWL8",110,0)
ORD(RCS) ; Select an order for the sorted field code in RCS
"RTN","RCDPEWL8",111,0)
 ; Kill RCS if nothing selected, passed by reference
"RTN","RCDPEWL8",112,0)
 ; Returns '-' if reverse order selected
"RTN","RCDPEWL8",113,0)
 N DIR,X,Y,ORD,RCQUIT
"RTN","RCDPEWL8",114,0)
 S RCQUIT=0,ORD=""
"RTN","RCDPEWL8",115,0)
 I RCS="N" G ORDQ
"RTN","RCDPEWL8",116,0)
 I RCS="PN" D  G ORDQ
"RTN","RCDPEWL8",117,0)
 . S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST"
"RTN","RCDPEWL8",118,0)
 . S DIR("B")=$P($P(DIR(0),"F:",2),";")
"RTN","RCDPEWL8",119,0)
 . S DIR("A")="  SORT (F)IRST TO LAST OR (L)AST TO FIRST?: "
"RTN","RCDPEWL8",120,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",121,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",122,0)
 . S ORD=$S(Y="F":"",1:"-")
"RTN","RCDPEWL8",123,0)
 ;
"RTN","RCDPEWL8",124,0)
 I RCS="AP" D  G ORDQ
"RTN","RCDPEWL8",125,0)
 . S DIR("A")="  SORT (L)OWEST TO HIGHEST OR (H)IGHEST TO LOWEST?: "
"RTN","RCDPEWL8",126,0)
 . S DIR(0)="SA^L:LOWEST TO HIGHEST;H:HIGHEST TO LOWEST"
"RTN","RCDPEWL8",127,0)
 . S DIR("B")=$P($P(DIR(0),"L:",2),";")
"RTN","RCDPEWL8",128,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",129,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",130,0)
 . S ORD=$S(Y="L":"",1:"-")
"RTN","RCDPEWL8",131,0)
 ;
"RTN","RCDPEWL8",132,0)
 I RCS="DP"!(RCS="DR") D  G ORDQ
"RTN","RCDPEWL8",133,0)
 . S DIR("A")="  SORT (E)ARLIEST TO LATEST OR (L)ATEST TO EARLIEST?: "
"RTN","RCDPEWL8",134,0)
 . S DIR(0)="SA^E:EARLIEST TO LATEST;L:LATEST TO EARLIEST"
"RTN","RCDPEWL8",135,0)
 . S DIR("B")=$P($P(DIR(0),"E:",2),";")
"RTN","RCDPEWL8",136,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",137,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",138,0)
 . S ORD=$S(Y="E":"",1:"-")
"RTN","RCDPEWL8",139,0)
 ;
"RTN","RCDPEWL8",140,0)
 ; Invalid sort code
"RTN","RCDPEWL8",141,0)
 S RCQUIT=1
"RTN","RCDPEWL8",142,0)
 ;
"RTN","RCDPEWL8",143,0)
ORDQ I RCQUIT K RCS
"RTN","RCDPEWL8",144,0)
 Q ORD
"RTN","RCDPEWL8",145,0)
 ;
"RTN","RCDPEWL8",146,0)
BATDSP ; Ask Display/Hide batch info on ERA list screen
"RTN","RCDPEWL8",147,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",148,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",149,0)
 N DIR,DTOUT,DUOUT,RCZ,X,Y
"RTN","RCDPEWL8",150,0)
 D FULL^VALM1
"RTN","RCDPEWL8",151,0)
 S RCZ=+$G(^TMP("RCERA_PARAMS",$J,"BATCHON"))
"RTN","RCDPEWL8",152,0)
 S DIR("A",1)="BATCH INFO DISPLAY IS CURRENTLY TURNED "_$S('RCZ:"OFF",1:"ON"),DIR("A")="DO YOU WANT TO TURN IT "_$S('RCZ:"ON",1:"OFF")_" NOW?: "
"RTN","RCDPEWL8",153,0)
 S DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL8",154,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",155,0)
 Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","RCDPEWL8",156,0)
 S ^TMP("RCERA_PARAMS",$J,"BATCHON")=$S(RCZ:0,1:1)
"RTN","RCDPEWL8",157,0)
 D BLD^RCDPEWL7($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL8",158,0)
 Q
"RTN","RCDPEWL8",159,0)
 ;
"RTN","RCDPEWL8",160,0)
HASADJ(RCSCR,RCOK) ; Function=1 if WL entry has any adj not yet distributed
"RTN","RCDPEWL8",161,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWL8",162,0)
 ; RCOK = if passed by reference, returns 1 if ANY postable lines exist
"RTN","RCDPEWL8",163,0)
 N Z,Z0,RCSTOP
"RTN","RCDPEWL8",164,0)
 S RCSTOP=0,RCOK=0
"RTN","RCDPEWL8",165,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:RCSTOP
"RTN","RCDPEWL8",166,0)
 . ;HIPAA 5010 - negative value now takes precedence over adjustment
"RTN","RCDPEWL8",167,0)
 . I $P(Z0,U,6)>0!$O(^RCY(344.49,RCSCR,1,Z,1,0)) S RCOK=1
"RTN","RCDPEWL8",168,0)
 . I $P(Z0,U,6)<0 S RCSTOP=1
"RTN","RCDPEWL8",169,0)
 Q RCSTOP
"RTN","RCDPEWL8",170,0)
 ;
"RTN","RCDPEWL8",171,0)
VERIF ; Entrypoint to verification options
"RTN","RCDPEWL8",172,0)
 N DIR,X,Y,RCQUIT,DTOUT,DUOUT
"RTN","RCDPEWL8",173,0)
 D FULL^VALM1
"RTN","RCDPEWL8",174,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G VERIFQ   ;prca*4.5*298  auto-posted ERAs cannot enter VERIFY action        
"RTN","RCDPEWL8",175,0)
 ;
"RTN","RCDPEWL8",176,0)
 W !!!!
"RTN","RCDPEWL8",177,0)
 S RCQUIT=0
"RTN","RCDPEWL8",178,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",179,0)
 . W !,"VERIFY EEOBs:",!,?10,"1",$J("",5),"MANUALLY MARK AS VERIFIED",!,?10,"2",$J("",5),"REPORT OF UNVERIFIED WITH DISCREPANCIES",!,?10,"3",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",180,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEWL8",181,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEWL8",182,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",183,0)
 . ;
"RTN","RCDPEWL8",184,0)
 . I Y=1 D MVER^RCDPEV(RCERA) W !! Q
"RTN","RCDPEWL8",185,0)
 . ;
"RTN","RCDPEWL8",186,0)
 . I Y=2 D RPT^RCDPEV0(RCERA) W !! Q
"RTN","RCDPEWL8",187,0)
 ;
"RTN","RCDPEWL8",188,0)
VERIFQ S VALMBCK="R"
"RTN","RCDPEWL8",189,0)
 Q
"RTN","RCDPEWL8",190,0)
 ;
"RTN","RCDPEWL8",191,0)
BATED ; Entry point to batch edit options
"RTN","RCDPEWL8",192,0)
 ; prca*4.5*298  per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",193,0)
 Q  ; prca*4.5*298
"RTN","RCDPEWL8",194,0)
 N DA,DIC,DIR,DTOUT,DUOUT,RCQUIT,X,Y
"RTN","RCDPEWL8",195,0)
 D FULL^VALM1
"RTN","RCDPEWL8",196,0)
 ;
"RTN","RCDPEWL8",197,0)
 W !!!!
"RTN","RCDPEWL8",198,0)
 S RCQUIT=0
"RTN","RCDPEWL8",199,0)
 I '$O(^RCY(344.49,RCERA,3,0)) W !,"***** THERE ARE CURRENTLY NO BATCHES DEFINED FOR THIS ERA *****",!
"RTN","RCDPEWL8",200,0)
 ; No menu if entering from a batch level
"RTN","RCDPEWL8",201,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) W !,"EDITING BATCH #"_+^TMP("RCBATCH_SELECTED",$J) D EDIT^RCDPEWLB(RCERA,+^TMP("RCBATCH_SELECTED",$J)) G BATEDQ
"RTN","RCDPEWL8",202,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",203,0)
 . I '$D(^XUSEC("PRCA ERA BATCH MAINT",DUZ)) D  Q
"RTN","RCDPEWL8",204,0)
 .. S RCQUIT=1
"RTN","RCDPEWL8",205,0)
 .. S DIR(0)="EA",DIR("A")="YOU DO NOT HAVE SECURITY ACCESS TO THIS ACTION - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",206,0)
 .;
"RTN","RCDPEWL8",207,0)
 . W !,"BATCH MAINTENANCE:",!,?10,"1",$J("",5),"EDIT BATCH",!,?10,"2",$J("",5),"NEW BATCH ASSIGNMENT",!,?10,"3",$J("",5),"MARK ALL READY TO POST",!,?10,"4",$J("",5),"BATCH SUMMARY REPORT",!,?10,"5",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",208,0)
 . S DIR(0)="SAO^1:EDIT BATCH;2:NEW BATCHES;3:MARK ALL;4:BATCH SUMMARY;5:QUIT"
"RTN","RCDPEWL8",209,0)
 . S DIR("A")="Select Action: ",DIR("B")="Quit" W ! D ^DIR K DIR
"RTN","RCDPEWL8",210,0)
 . I Y="5"!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",211,0)
 . ;
"RTN","RCDPEWL8",212,0)
 . I Y=1 D  W !! Q
"RTN","RCDPEWL8",213,0)
 .. I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWL8",214,0)
 .. S DIR("B")="ONE",DIR(0)="SA^A:ALL;O:ONE",DIR("A")="EDIT(A)LL or (O)NE BATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",215,0)
 .. I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",216,0)
 .. I Y="A" D EDITALL^RCDPEWLB(RCERA) Q
"RTN","RCDPEWL8",217,0)
 .. S DA(1)=RCERA,DIC="^RCY(344.49,"_DA(1)_",3,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL8",218,0)
 .. Q:Y'>0
"RTN","RCDPEWL8",219,0)
 .. D EDIT^RCDPEWLB(RCERA,+Y)
"RTN","RCDPEWL8",220,0)
 . ;
"RTN","RCDPEWL8",221,0)
 . I Y=2 D REBATCH^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",222,0)
 . ;
"RTN","RCDPEWL8",223,0)
 . I Y=3 D MARKALL^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",224,0)
 . ;
"RTN","RCDPEWL8",225,0)
 . I Y=4 D SUMRPT^RCDPEWLC(RCERA) W !! Q
"RTN","RCDPEWL8",226,0)
 ;
"RTN","RCDPEWL8",227,0)
BATEDQ S VALMBCK="R"
"RTN","RCDPEWL8",228,0)
 Q
"RTN","RCDPEWL8",229,0)
 ;
"RTN","RCDPEWLA")
0^61^B59960871
"RTN","RCDPEWLA",1,0)
RCDPEWLA ;ALB/TMK - ELECTRONIC EOB MESSAGE WORKLIST ;Jun 06, 2014@19:11:19
"RTN","RCDPEWLA",2,0)
 ;;4.5;Accounts Receivable;**173,208,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWLA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLA",4,0)
ADDLINES(RCSCR) ; Add lines to file 344.49, delete any existing lines
"RTN","RCDPEWLA",5,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWLA",6,0)
 ;
"RTN","RCDPEWLA",7,0)
 N DA,DD,DIC,DIE,DIK,DLAYGO,DO,DR,Q,Q0,Q1,RC0,RCA,RCA0,RCADJ,RCDEC,RCIFN,RCLINE,RCX,X,Y,Z,Z0
"RTN","RCDPEWLA",8,0)
 K ^TMP($J,"RCA")
"RTN","RCDPEWLA",9,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S DA(1)=RCSCR,DA=Z,DIK="^RCY(344.49,"_DA(1)_",1," D ^DIK
"RTN","RCDPEWLA",10,0)
 ;
"RTN","RCDPEWLA",11,0)
 S RC0=$G(^RCY(344.4,RCSCR,0)) ; Entries are DINUMED
"RTN","RCDPEWLA",12,0)
 I $P(RC0,U,5)'="" S DR=".03////"_$P(RC0,U,5),DIE="^RCY(344.49,",DA=RCSCR D ^DIE
"RTN","RCDPEWLA",13,0)
 ;
"RTN","RCDPEWLA",14,0)
 S Z=0 F  S Z=$O(^RCY(344.4,+RC0,1,Z)) Q:'Z  S RCA0=$G(^(Z,0)) I RCA0'="" D  ; Sort the lines to put adjustments with the payments, check sort order
"RTN","RCDPEWLA",15,0)
 . ; for 0-pays
"RTN","RCDPEWLA",16,0)
 . I $P(RCA0,U,2) S RCIFN=+$G(^IBM(361.1,+$P(RCA0,U,2),0)),RCA=$P($G(^DGCR(399,RCIFN,0)),U) ; IA 4051
"RTN","RCDPEWLA",17,0)
 . I '$P(RCA0,U,2) S RCIFN="0;"_Z,RCA=$P(RCA0,U,5)
"RTN","RCDPEWLA",18,0)
 . I RCA="" S RCA=RCIFN
"RTN","RCDPEWLA",19,0)
 . I $D(^TMP($J,"RCA",RCA,+$P(RCA0,U,14))) D
"RTN","RCDPEWLA",20,0)
 .. F Q0=1:1:999 S Q=RCA_";"_$E(1000+Q0,2,4) I '$D(^TMP($J,"RCA",Q,+$P(RCA0,U,14))) S RCA=Q Q
"RTN","RCDPEWLA",21,0)
 . S ^TMP($J,"RCA",RCA,+$P(RCA0,U,14))=RCIFN_U_Z
"RTN","RCDPEWLA",22,0)
 ;
"RTN","RCDPEWLA",23,0)
 S Z=0 F  S Z=$O(^RCY(344.4,+RC0,2,Z)) Q:'Z  S RCA0=$G(^(Z,0)) I RCA0'="" D  ; Extract ERA level adjs
"RTN","RCDPEWLA",24,0)
 . S RCIFN=$P(RCA0,U),RCA="**ADJ"_Z
"RTN","RCDPEWLA",25,0)
 . S ^TMP($J,"RCA",RCA,1)=RCIFN_U_Z
"RTN","RCDPEWLA",26,0)
 ;
"RTN","RCDPEWLA",27,0)
 I $P(RC0,U,9)=-1 D  ; Check dec adj or additional receipt line needed
"RTN","RCDPEWLA",28,0)
 . S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEWLA",29,0)
 . Q:'Z
"RTN","RCDPEWLA",30,0)
 . I $P($G(^RCY(344.31,Z,0)),U,7)-$P(RC0,U,5) D  Q
"RTN","RCDPEWLA",31,0)
 .. S ^TMP($J,"RCA","**ADJ0",1)="TOTALS MISMATCH^^"_($P($G(^RCY(344.31,Z,0)),U,7)-$P(RC0,U,5))
"RTN","RCDPEWLA",32,0)
 ;
"RTN","RCDPEWLA",33,0)
 S Z="" F  S Z=$O(^TMP($J,"RCA",Z)) Q:Z=""  S Z0="" F  S Z0=$O(^TMP($J,"RCA",Z,Z0)) Q:Z0=""  D
"RTN","RCDPEWLA",34,0)
 . S Q=$P(Z,";") ; claim #
"RTN","RCDPEWLA",35,0)
 . S Q0=$S($E(Q,1,2)'="**":$G(^RCY(344.4,+RC0,1,+$P(^TMP($J,"RCA",Z,Z0),U,2),0)),Q["ADJ"&($P(Q,"ADJ",2)):$G(^RCY(344.4,+RC0,2,+$P(^TMP($J,"RCA",Z,Z0),U,2),0)),1:$G(^TMP($J,"RCA",Z,Z0)))
"RTN","RCDPEWLA",36,0)
 . ;
"RTN","RCDPEWLA",37,0)
 . S RCDEC=($P(Q0,U,3)<0) ; is this a decrease
"RTN","RCDPEWLA",38,0)
 . I Z0=0 D  Q  ; Add a payment line from the ERA
"RTN","RCDPEWLA",39,0)
 .. K DO,DD
"RTN","RCDPEWLA",40,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",41,0)
 .. S DIC("DR")=".02////"_Q_";.05////"_$P(Q0,U,3)_";.06////"_$P(Q0,U,3)_";.09////"_$P(^TMP($J,"RCA",Z,Z0),U,2)_";.13////0"
"RTN","RCDPEWLA",42,0)
 .. ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWLA",43,0)
 .. ;I $G(^TMP($J,"BATCHES")) D  ;prca*4.5*298
"RTN","RCDPEWLA",44,0)
 .. ;.  Assign a batch # here
"RTN","RCDPEWLA",45,0)
 .. ;. S DIC("DR")=DIC("DR")_";.14////"_$$GETBATCH^RCDPEWLB(Q0) ;prca*4.5*298
"RTN","RCDPEWLA",46,0)
 .. F X=$O(^RCY(344.49,RCSCR,1,"ASEQ"," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,"B",X)) Q
"RTN","RCDPEWLA",47,0)
 .. S RCLINE=X
"RTN","RCDPEWLA",48,0)
 .. D FILE^DICN K DIC,DO,DD
"RTN","RCDPEWLA",49,0)
 .. S ^TMP($J,"RCA",Z)=+Y
"RTN","RCDPEWLA",50,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",51,0)
 .. S DIC("DR")=".02////"_Q_";.05////"_$P(Q0,U,3)_";.06////"_$P(Q0,U,3)_$S($P(^TMP($J,"RCA",Z,Z0),U):";.07////"_$P(^TMP($J,"RCA",Z,Z0),U),1:"")
"RTN","RCDPEWLA",52,0)
 .. S X=RCLINE+.001
"RTN","RCDPEWLA",53,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",54,0)
 .. S $P(^TMP($J,"RCA",Z,0),U,3)=+Y S DA(1)=RCSCR,DA=+^TMP($J,"RCA",Z),DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////"_+$$VER^RCDPEV(RCSCR,$P(^TMP($J,"RCA",Z,Z0),U),+$P(^TMP($J,"RCA",Z,Z0),U,2)) D ^DIE
"RTN","RCDPEWLA",55,0)
 . ;
"RTN","RCDPEWLA",56,0)
 . I Z0=1,$P($G(^TMP($J,"RCA",Z,0)),U,3) D  Q  ; rev of claim within this ERA
"RTN","RCDPEWLA",57,0)
 .. ; Add adj to line previously added for payment
"RTN","RCDPEWLA",58,0)
 .. K DO,DD
"RTN","RCDPEWLA",59,0)
 .. S DA(2)=RCSCR,DA(1)=+$P($G(^TMP($J,"RCA",Z,0)),U,3),DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DLAYGO=344.4911,X=+$O(^RCY(344.49,DA(2),1,DA(1),1," "),-1)+1
"RTN","RCDPEWLA",60,0)
 .. S DIC("DR")=".02////"_$S(RCDEC:2,1:4)_";.03////"_$P(Q0,U,3)_";.05////"_$S(RCDEC:"0;.08////1;.06////1",1:"3;.08////0;.06////0")_";.07////"_+Q0_";.13////0"
"RTN","RCDPEWLA",61,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",62,0)
 .. S Q1=$G(^RCY(344.49,RCSCR,1,+$P($G(^TMP($J,"RCA",Z,0)),U,3),0))
"RTN","RCDPEWLA",63,0)
 .. ; Upd net amt
"RTN","RCDPEWLA",64,0)
 .. S DA(1)=RCSCR,DA=+$P($G(^TMP($J,"RCA",Z,0)),U,3),DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(Q1,U,6)+$P(Q0,U,3),"",2)_";.08////"_$J($P(Q1,U,8)+$P(Q0,U,3),"",2) D ^DIE
"RTN","RCDPEWLA",65,0)
 .. ;Upd seq ref,net in 'parent'
"RTN","RCDPEWLA",66,0)
 .. I $G(^TMP($J,"RCA",Z)) D
"RTN","RCDPEWLA",67,0)
 ... S DA(1)=RCSCR,DA=+$G(^TMP($J,"RCA",Z)),DIE="^RCY(344.49,"_DA(1)_",1,",DR=".09////"_($P($G(^RCY(344.49,RCSCR,1,DA,0)),U,9)_","_$P(^TMP($J,"RCA",Z,Z0),U,2))_";.06////"_$J($P($G(^RCY(344.49,DA(1),1,DA,0)),U,6)+$P(Q0,U,3),"",2)
"RTN","RCDPEWLA",68,0)
 ... D ^DIE
"RTN","RCDPEWLA",69,0)
 . ;
"RTN","RCDPEWLA",70,0)
 . I Z0=1 D  Q  ; ERA level adj, no payment for claim lev adj or mismatch
"RTN","RCDPEWLA",71,0)
 .. ;prca*4.5*298 - flag when an ERA level adj exists - cannot auto post ERAs with ERA level adjustments
"RTN","RCDPEWLA",72,0)
 .. S ^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")=""
"RTN","RCDPEWLA",73,0)
 .. ; Add a line
"RTN","RCDPEWLA",74,0)
 .. K DO,DD
"RTN","RCDPEWLA",75,0)
 .. S RCADJ=$S(Z["**ADJ":1,1:0)
"RTN","RCDPEWLA",76,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",77,0)
 .. S DIC("DR")=$S(Q'=0:".02////"_Q_";",1:"")_".03////0.00;.05////0.00;.13////0"
"RTN","RCDPEWLA",78,0)
 .. F X=$O(^RCY(344.49,RCSCR,1,"ASEQ"," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,"B",X)) L +^RCY(344.49,RCSCR,1,X,0):1 Q:$T
"RTN","RCDPEWLA",79,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",80,0)
 .. S RCLINE=+$P(Y,U,2),^TMP($J,"RCA",Z)=+Y
"RTN","RCDPEWLA",81,0)
 .. ;
"RTN","RCDPEWLA",82,0)
 .. S DIC(0)="L",DLAYGO=344.491,DA(1)=RCSCR,DIC="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",83,0)
 .. S DIC("DR")=$S('RCADJ:".02///"_$P(Z,";")_";",1:"")_".03////0.00;.05////0.00;.06////0.00"_$S($P(^TMP($J,"RCA",Z,Z0),U)&'RCADJ:";.07////"_$P(^TMP($J,"RCA",Z,Z0),U),1:"")
"RTN","RCDPEWLA",84,0)
 .. S X=RCLINE+.001
"RTN","RCDPEWLA",85,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",86,0)
 .. L -^RCY(344.49,RCSCR,1,RCLINE,0)
"RTN","RCDPEWLA",87,0)
 .. S RCLINE=+Y
"RTN","RCDPEWLA",88,0)
 .. ; Add adj record
"RTN","RCDPEWLA",89,0)
 .. S DIC(0)="L",DLAYGO=344.4911,DA(2)=RCSCR,DA(1)=RCLINE,DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWLA",90,0)
 .. S DIC("DR")=".02////"_$S(RCDEC:2+RCADJ,1:4+RCADJ)_";.03////"_$P(Q0,U,3)_";.05////"_$S('RCDEC:"3;.06////0;.08////0",1:"0;.06////1;.08////1")_";.07////"_$S(RCADJ:Z_";.04////"_$P(^TMP($J,"RCA",Z,Z0),U),1:+$P(^TMP($J,"RCA",Z,Z0),U,2))
"RTN","RCDPEWLA",91,0)
 .. F RCX=$O(^RCY(344.49,RCSCR,1,RCLINE,1," "),-1)+1:1 I '$D(^RCY(344.49,RCSCR,1,RCLINE,1,X,0)) L +^RCY(344.49,RCSCR,1,RCLINE,1,RCX,0):1 Q:$T
"RTN","RCDPEWLA",92,0)
 .. S X=RCX
"RTN","RCDPEWLA",93,0)
 .. D FILE^DICN K DIC,DO,DD,DA
"RTN","RCDPEWLA",94,0)
 .. L -^RCY(344.49,RCSCR,1,RCLINE,1,RCX,0)
"RTN","RCDPEWLA",95,0)
 .. S DA(1)=RCSCR,DA=RCLINE,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$P(Q0,U,3)_";.08////"_$P(Q0,U,3) D ^DIE
"RTN","RCDPEWLA",96,0)
 .. S Q1=$G(^RCY(344.49,RCSCR,1,RCLINE,0))
"RTN","RCDPEWLA",97,0)
 .. ; Upd seq ref,adj,payment in 'parent'
"RTN","RCDPEWLA",98,0)
 .. I $G(^TMP($J,"RCA",Z)) D
"RTN","RCDPEWLA",99,0)
 ... S DA(1)=RCSCR,DA=+^TMP($J,"RCA",Z),DIE="^RCY(344.49,"_DA(1)_",1,"
"RTN","RCDPEWLA",100,0)
 ... S DR=".09////"_$S(RCADJ:$S($P(Z,"**ADJ",2):$P(Z,"**",2),1:"TOTALS MISMATCH"),1:$P(^TMP($J,"RCA",Z,Z0),U,2))_";.06////"_$J($P($G(^RCY(344.49,DA(1),1,DA,0)),U,6)+$P(Q0,U,3),"",2)_";.08////"_$P(Q0,U,3)
"RTN","RCDPEWLA",101,0)
 ... D ^DIE
"RTN","RCDPEWLA",102,0)
 ;
"RTN","RCDPEWLA",103,0)
 K ^TMP($J,"RCA")
"RTN","RCDPEWLA",104,0)
 Q
"RTN","RCDPEWLA",105,0)
 ;
"RTN","RCDPEWLA",106,0)
TOOOLD(RCDEP) ; Check if deposit in ien RCDPE (file 344.1) is too old to use
"RTN","RCDPEWLA",107,0)
 N RCOLD,Q,DIR,X,Y
"RTN","RCDPEWLA",108,0)
 S Q=$$FMADD^XLFDT(DT,-7),RCOLD=0
"RTN","RCDPEWLA",109,0)
 I $P($G(^RCY(344.1,RCDEP,0)),U,3)<Q D
"RTN","RCDPEWLA",110,0)
 . S DIR("A",1)="THIS DEPOSIT WAS OPENED MORE THAN ONE WEEK AGO ("_$$FMTE^XLFDT($P($G(^RCY(344.1,RCDEP,0)),U,3),2)_")",DIR("A")="ARE YOU SURE YOU WANT TO USE THIS DEPOSIT?: ",DIR("B")="NO",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","RCDPEWLA",111,0)
 . I Y'=1 S RCOLD=1
"RTN","RCDPEWLA",112,0)
 Q RCOLD
"RTN","RCDPEWLA",113,0)
 ;
"RTN","RCDPEWLA",114,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for EEOB Scratchpad Worklist
"RTN","RCDPEWLA",115,0)
 ; Input: SOURCE: "MO" - Menu Option / "CV" - Change View
"RTN","RCDPEWLA",116,0)
 ;Output: ^TMP("RC_SORTPARM",$J): Order of Payment ("N":No Order/"F":Zero-Payments First/"L":Zero-Payments Last)
"RTN","RCDPEWLA",117,0)
 ;        ^TMP("RC_EEOBPOST",$J): EEOB Posting Status ("P":Posted/"U":Unposted/"B":Both)
"RTN","RCDPEWLA",118,0)
 ;        Or RCQUIT=1
"RTN","RCDPEWLA",119,0)
 N DIR,X,Y,DUOUT,DTOUT,RCPOSTDF,F,RCXPAR,RCERROR
"RTN","RCDPEWLA",120,0)
 ;
"RTN","RCDPEWLA",121,0)
 D GETLST^XPAR(.RCXPAR,"USR","RCDPE EDI LOCKBOX WORKLIST","I")
"RTN","RCDPEWLA",122,0)
 S RCQUIT=0
"RTN","RCDPEWLA",123,0)
 ;
"RTN","RCDPEWLA",124,0)
 ; Setting ^TMP with user's saved parameters or System defaults
"RTN","RCDPEWLA",125,0)
 I '$D(^TMP($J,"RC_SORTPARM")) D
"RTN","RCDPEWLA",126,0)
 . S ^TMP($J,"RC_SORTPARM")=$S($G(RCXPAR("ORDER_OF_PAYMENTS"))'="":RCXPAR("ORDER_OF_PAYMENTS"),1:"N")
"RTN","RCDPEWLA",127,0)
 . S ^TMP($J,"RC_EEOBPOST")=$S($G(RCXPAR("EEOB_POSTING_STATUS"))'="":RCXPAR("EEOB_POSTING_STATUS"),1:"U")
"RTN","RCDPEWLA",128,0)
 ;
"RTN","RCDPEWLA",129,0)
 ; Not coming from Change View action, User Preferences Found, Quit
"RTN","RCDPEWLA",130,0)
 I SOURCE="MO",$G(RCXPAR("EEOB_POSTING_STATUS"))'="" Q
"RTN","RCDPEWLA",131,0)
 ;
"RTN","RCDPEWLA",132,0)
 ; ORDER OF PAYMENT (No Order/Zero Payment First/Zero Payment Last) Selection
"RTN","RCDPEWLA",133,0)
 S RCSORTBY=$G(^TMP($J,"RC_SORTPARM"))
"RTN","RCDPEWLA",134,0)
 K DIR S DIR(0)="SA^N:NO ORDER;F:ZERO-PAYMENTS FIRST;L:ZERO-PAYMENTS LAST"
"RTN","RCDPEWLA",135,0)
 S DIR("A")="ORDER OF PAYMENT: (N)O ORDER, ZERO-PAYMENTS (F)IRST, ZERO-PAYMENTS (L)AST: "
"RTN","RCDPEWLA",136,0)
 S DIR("B")="B" S:RCSORTBY'="" DIR("B")=RCSORTBY
"RTN","RCDPEWLA",137,0)
 W ! D ^DIR
"RTN","RCDPEWLA",138,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWLA",139,0)
 S ^TMP($J,"RC_SORTPARM")=Y
"RTN","RCDPEWLA",140,0)
 ;
"RTN","RCDPEWLA",141,0)
 ; EEOB Posting Status (Posted/Unposted/Both) Selection
"RTN","RCDPEWLA",142,0)
 S RCPOSTDF=$G(^TMP($J,"RC_EEOBPOST"))
"RTN","RCDPEWLA",143,0)
 K DIR S DIR(0)="SA^U:UNPOSTED;P:POSTED;A:ALL"
"RTN","RCDPEWLA",144,0)
 S DIR("A")="DISPLAY FOR AUTO-POSTED ERAS: (U)NPOSTED EEOBs, (P)OSTED EEOBs, OR (A)LL: "
"RTN","RCDPEWLA",145,0)
 S DIR("B")="U" S:RCPOSTDF'="" DIR("B")=RCPOSTDF
"RTN","RCDPEWLA",146,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEWLA",147,0)
 S ^TMP($J,"RC_EEOBPOST")=Y
"RTN","RCDPEWLA",148,0)
 ;
"RTN","RCDPEWLA",149,0)
 ; - Save as Preferred View?
"RTN","RCDPEWLA",150,0)
 K DIR W ! S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO SAVE THIS AS YOUR PREFERRED VIEW (Y/N)? "
"RTN","RCDPEWLA",151,0)
 D ^DIR
"RTN","RCDPEWLA",152,0)
 I Y=1 D
"RTN","RCDPEWLA",153,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ORDER_OF_PAYMENTS",^TMP($J,"RC_SORTPARM"),.RCERROR)
"RTN","RCDPEWLA",154,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","EEOB_POSTING_STATUS",^TMP($J,"RC_EEOBPOST"),.RCERROR)
"RTN","RCDPEWLA",155,0)
 ;
"RTN","RCDPEWLA",156,0)
PARAMSQ ; Quit
"RTN","RCDPEWLA",157,0)
 Q
"RTN","RCDPEWLB")
0^60^B49175831
"RTN","RCDPEWLB",1,0)
RCDPEWLB ;ALB/TMK - EEOB WORKLIST BATCH PROCESSING ;Jun 06, 2014@19:11:19
"RTN","RCDPEWLB",2,0)
 ;;4.5;Accounts Receivable;**208,298**;Mar 20, 1995;Build 121
"RTN","RCDPEWLB",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLB",4,0)
 ;
"RTN","RCDPEWLB",5,0)
SETBATCH(RCERA) ; Set up batches for a worklist entry RCERA
"RTN","RCDPEWLB",6,0)
 ; Returns ^TMP($J,"BATCHES",batch criteria code,start param data)=
"RTN","RCDPEWLB",7,0)
 ;              batch #^end param data
"RTN","RCDPEWLB",8,0)
 ; Ask to split the ERA
"RTN","RCDPEWLB",9,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",10,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",11,0)
 N DIR,DTOUT,DUOUT,RCBAT,RCNAMES,RCNUM,RCS,RCSEL,RCY,RCZ,X,Y,Z,Z0
"RTN","RCDPEWLB",12,0)
 K ^TMP($J,"BATCHES")
"RTN","RCDPEWLB",13,0)
 S RCNUM=+$$CTEEOB(RCERA)
"RTN","RCDPEWLB",14,0)
 Q:RCNUM'>1
"RTN","RCDPEWLB",15,0)
 S DIR("A",1)="THERE ARE APPROXIMATELY "_RCNUM_" EEOBS IN THIS ERA",DIR("A")="DO YOU WANT TO SPLIT THIS ERA INTO BATCHES?: ",DIR(0)="YA",DIR("B")=$S(RCNUM>30:"YES",1:"NO") W ! D ^DIR K DIR
"RTN","RCDPEWLB",16,0)
 I Y'=1 Q
"RTN","RCDPEWLB",17,0)
 ;
"RTN","RCDPEWLB",18,0)
 S DIR("A",1)="YOU MAY USE ANY ONE OF THE FOLLOWING CRITERIA TO SPLIT THE ERA INTO BATCHES: ",DIR("A",2)=" ",DIR("A",3)=$J("",10)_"1 - BY MAX # OF EEOBs TO INCLUDE IN A BATCH"
"RTN","RCDPEWLB",19,0)
 S DIR("A",4)=$J("",10)_"2 - BY RANGES OF PATIENT LAST NAME",DIR("A",5)=$J("",10)_"3 - BY EEOB PAYMENT STATUS (FULL/PARTIAL/NO PAY)"
"RTN","RCDPEWLB",20,0)
 S DIR("A",6)=$J("",10)_"4 - BY CO-PAY AND NON-COPAY FOR THE DATE OF SERVICE",DIR("A",7)=" "
"RTN","RCDPEWLB",21,0)
 S DIR(0)="SAO^1:MAX #;2:LAST NAME;3:PAY STATUS;4:CO-PAY STATUS",DIR("A")="CRITERIA SELECTION: "
"RTN","RCDPEWLB",22,0)
 W !! D ^DIR K DIR
"RTN","RCDPEWLB",23,0)
 Q:$D(DUOUT)!$D(DTOUT)!(Y="")
"RTN","RCDPEWLB",24,0)
 S RCBAT=0,RCSEL=Y,^TMP($J,"BATCHES")=RCSEL
"RTN","RCDPEWLB",25,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO NAME YOUR OWN BATCHES?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWLB",26,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPEWLB",27,0)
 S RCNAMES=+Y
"RTN","RCDPEWLB",28,0)
 I RCSEL=1 D
"RTN","RCDPEWLB",29,0)
 . W ! S DIR(0)="NA^1:"_RCNUM,DIR("A")="MAX # OF EEOBS TO INCLUDE IN A BATCH: ",DIR("?")="ENTER A NUMBER FROM 1 TO "_RCNUM D ^DIR K DIR
"RTN","RCDPEWLB",30,0)
 . I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWLB",31,0)
 . S RCY=Y
"RTN","RCDPEWLB",32,0)
 . F RCZ=1:1:RCNUM\RCY+$S(RCNUM#RCY:1,1:0) S RCS=((RCZ-1)*RCY)+1 D NEWBAT(RCERA,1,"",RCS_U_(RCS+RCY-1),.RCBAT,RCNAMES) S ^TMP($J,"BATCHES",1,RCS)=RCBAT_U_(RCS+RCY-1)
"RTN","RCDPEWLB",33,0)
 ;
"RTN","RCDPEWLB",34,0)
 I RCSEL=2 D
"RTN","RCDPEWLB",35,0)
 . N RCNMF,RCQUIT,RCDONE
"RTN","RCDPEWLB",36,0)
 . S RCNMF="A",(RCQUIT,RCDONE)=0
"RTN","RCDPEWLB",37,0)
 . F  D  Q:RCQUIT!RCDONE
"RTN","RCDPEWLB",38,0)
 .. W !!,"START FROM LAST NAME BEGINNING WITH: ",RCNMF
"RTN","RCDPEWLB",39,0)
 .. S DIR("?")="ENTER A LETTER IN UPPERCASE"
"RTN","RCDPEWLB",40,0)
 .. S DIR(0)="FA^1:1^K:X'?.U X",DIR("A")="INCLUDE THROUGH LAST NAME BEGINNING WITH: " D ^DIR K DIR
"RTN","RCDPEWLB",41,0)
 .. I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWLB",42,0)
 .. S RCY=Y,RCSEL("NAME",RCNMF)=Y_"ZZZ"
"RTN","RCDPEWLB",43,0)
 .. I $A(RCY)=90 S RCDONE=1 Q
"RTN","RCDPEWLB",44,0)
 .. S RCNMF=$A(RCY)+1,RCNMF=$C(RCNMF)
"RTN","RCDPEWLB",45,0)
 . Q:RCQUIT
"RTN","RCDPEWLB",46,0)
 . S Z="" F  S Z=$O(RCSEL("NAME",Z)) Q:Z=""  D NEWBAT(RCERA,2,"",Z_U_RCSEL("NAME",Z),.RCBAT,RCNAMES) S ^TMP($J,"BATCHES",2,Z)=RCBAT_U_RCSEL("NAME",Z)
"RTN","RCDPEWLB",47,0)
 ;
"RTN","RCDPEWLB",48,0)
 I RCSEL=3 D
"RTN","RCDPEWLB",49,0)
 . F Y=1:1:3 D NEWBAT(RCERA,3,$P("FULL PAYMENT^PARTIAL PAYMENT^NO PAYMENT",U,Y),Y,.RCBAT,RCNAMES) S ^TMP($J,"BATCHES",3,Y)=RCBAT
"RTN","RCDPEWLB",50,0)
 ;
"RTN","RCDPEWLB",51,0)
 I RCSEL=4 D
"RTN","RCDPEWLB",52,0)
 . F Y=1,2 D NEWBAT(RCERA,RCSEL,$P("CO-PAY EXISTS^NO CO-PAY EXISTS",U,Y),Y,.RCBAT,RCNAMES) S ^TMP($J,"BATCHES",4,Y)=RCBAT
"RTN","RCDPEWLB",53,0)
 ;
"RTN","RCDPEWLB",54,0)
 S DIR(0)="EA",DIR("A")=RCBAT_" BATCHES CREATED.  PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWLB",55,0)
 Q
"RTN","RCDPEWLB",56,0)
 ;
"RTN","RCDPEWLB",57,0)
NEWBAT(RCERA,RCSEL,RCDAT,RCVAL,RCBAT,RCNAMES) ; Add a new batch at the top level entry
"RTN","RCDPEWLB",58,0)
 ; RCERA = the ien of the entry in file 344.49
"RTN","RCDPEWLB",59,0)
 ; RCSEL = the # of the selection criteria selected
"RTN","RCDPEWLB",60,0)
 ; RCDAT = the default 'name' of the batch based on the criteria used
"RTN","RCDPEWLB",61,0)
 ; RCVAL = the start value^the end value
"RTN","RCDPEWLB",62,0)
 ; RCBAT = if passed by reference, returned as the next batch #
"RTN","RCDPEWLB",63,0)
 ; RCNAMES = 1 if user wants to name each batch, 0 to accept default
"RTN","RCDPEWLB",64,0)
 ;
"RTN","RCDPEWLB",65,0)
 ; prca*4.5*298 per requirements, keep code related to creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",66,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",67,0)
 N DA,DD,DIC,DLAYGO,DO,DR,X,Y
"RTN","RCDPEWLB",68,0)
 S RCBAT=RCBAT+1
"RTN","RCDPEWLB",69,0)
 S DA(1)=RCERA,DIC="^RCY(344.49,"_DA(1)_",3,",DLAYGO=344.493,DIC(0)="L",X=RCBAT
"RTN","RCDPEWLB",70,0)
 I $G(RCNAMES) W !!,"**BATCH #: "_RCBAT
"RTN","RCDPEWLB",71,0)
 S DIC("DR")=".03////0;.04////"_DUZ_";.05////0;.06////"_RCSEL_";.07////"_$P(RCVAL,U)_$S($P(RCVAL,U,2)'="":";.08////"_$P(RCVAL,U,2),1:"")
"RTN","RCDPEWLB",72,0)
 S DIC("DR")=DIC("DR")_";.02R//"_$S(RCNAMES:"",1:"//")_$S(RCSEL=1:"BATCH #: "_RCBAT,RCSEL=2:"LAST NAME FROM "_$P(RCVAL,U)_" - "_$P(RCVAL,U,2),1:RCDAT)
"RTN","RCDPEWLB",73,0)
 D FILE^DICN K DLAYGO,DIC,DD,DO W !
"RTN","RCDPEWLB",74,0)
 Q
"RTN","RCDPEWLB",75,0)
 ;
"RTN","RCDPEWLB",76,0)
GETBATCH(RCZ0) ; Returns the batch # to be assigned to the data in RCZ0
"RTN","RCDPEWLB",77,0)
 ; RCZ0 = 0-node of the entry in file 344.41 to be assigned to a batch
"RTN","RCDPEWLB",78,0)
 N BNUM,Z,Z0
"RTN","RCDPEWLB",79,0)
 S BNUM=""
"RTN","RCDPEWLB",80,0)
 I $G(^TMP($J,"BATCHES"))=1 D  ; Max #
"RTN","RCDPEWLB",81,0)
 . N CT
"RTN","RCDPEWLB",82,0)
 . S CT=+$G(^TMP($J,"BATCHES","CT"))+1
"RTN","RCDPEWLB",83,0)
 . S ^TMP($J,"BATCHES","CT")=CT
"RTN","RCDPEWLB",84,0)
 . S Z=+$O(^TMP($J,"BATCHES",1,CT+1),-1),BNUM=+$G(^TMP($J,"BATCHES",1,Z)) S:'BNUM BNUM=1
"RTN","RCDPEWLB",85,0)
 ;
"RTN","RCDPEWLB",86,0)
 I $G(^TMP($J,"BATCHES"))=2 D  ; last name
"RTN","RCDPEWLB",87,0)
 . S Z=$P(RCZ0,U,15)
"RTN","RCDPEWLB",88,0)
 . I $P(RCZ0,U,2) S Z0=$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCZ0,U,2),0)),0)),U,2),Z0=$P($G(^DPT(Z0,0)),U) I Z0'="" S Z=Z0
"RTN","RCDPEWLB",89,0)
 . S Z0=$A($E(Z))-1,Z0=$C(Z0),Z0=$O(^TMP($J,"BATCHES",2,Z0),-1)
"RTN","RCDPEWLB",90,0)
 . S BNUM=$S(Z0="":1,1:+$G(^TMP($J,"BATCHES",2,Z0))) S:'BNUM BNUM=1
"RTN","RCDPEWLB",91,0)
 ;
"RTN","RCDPEWLB",92,0)
 I $G(^TMP($J,"BATCHES"))=3 D  ; payment amount
"RTN","RCDPEWLB",93,0)
 . S Z=+$P(RCZ0,U,3)
"RTN","RCDPEWLB",94,0)
 . I Z'>0!'$P(RCZ0,U,2) S BNUM=3 Q  ; 0-PAY/ADJUSTMENT/UNKNOWN CLAIM
"RTN","RCDPEWLB",95,0)
 . I +$P($G(^IBM(361.1,+$P(RCZ0,U,2))),U,4)'>+Z S BNUM=1 Q  ; FULL PAY
"RTN","RCDPEWLB",96,0)
 . S BNUM=2 ; PARTIAL PAY
"RTN","RCDPEWLB",97,0)
 ;
"RTN","RCDPEWLB",98,0)
 I $G(^TMP($J,"BATCHES"))=4 D  ; Co-pay/not
"RTN","RCDPEWLB",99,0)
 . S BNUM=2
"RTN","RCDPEWLB",100,0)
 . Q:'$P(RCZ0,U,2)
"RTN","RCDPEWLB",101,0)
 . I $$COPAY^RCDPEWL1(+$G(^IBM(361.1,+$P(RCZ0,U,2),0))) S BNUM=1
"RTN","RCDPEWLB",102,0)
 ;
"RTN","RCDPEWLB",103,0)
 Q BNUM
"RTN","RCDPEWLB",104,0)
 ;
"RTN","RCDPEWLB",105,0)
EDIT(RCERA,RCB,ABORT) ; Edit name and posting status of an existing batch
"RTN","RCDPEWLB",106,0)
 ; RCERA = the ien of the worklist entry
"RTN","RCDPEWLB",107,0)
 ; RCB = the ien of the current batch
"RTN","RCDPEWLB",108,0)
 ; RCABORT = if passed by reference, returned as 1 if user aborts
"RTN","RCDPEWLB",109,0)
 ;
"RTN","RCDPEWLB",110,0)
 ; prca*4.5*298 per requirements, keep code related to creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",111,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",112,0)
 N DA,DIE,DR,X,Y
"RTN","RCDPEWLB",113,0)
 D FULL^VALM1
"RTN","RCDPEWLB",114,0)
 S ABORT=0
"RTN","RCDPEWLB",115,0)
 S DA(1)=RCERA,DA=RCB,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".02;.03" D ^DIE I $D(Y) S ABORT=1
"RTN","RCDPEWLB",116,0)
 K VALMHDR ; Used to rebuild the header
"RTN","RCDPEWLB",117,0)
 S VALMBCK="R"
"RTN","RCDPEWLB",118,0)
 Q
"RTN","RCDPEWLB",119,0)
 ;
"RTN","RCDPEWLB",120,0)
MARKALL(RCERA) ; Mark all batches as ready to post
"RTN","RCDPEWLB",121,0)
 ;  prca*4.5*298 per requirements, keep code related to creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",122,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",123,0)
 N DIR,X,Y,Z,RCT,DA,DIE,DR
"RTN","RCDPEWLB",124,0)
 D FULL^VALM1
"RTN","RCDPEWLB",125,0)
 S VALMBCK="R"
"RTN","RCDPEWLB",126,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL S VALMBCK="R" Q
"RTN","RCDPEWLB",127,0)
 I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWLB",128,0)
 S DIR(0)="YA",DIR("A",1)="THIS ACTION WILL MARK ALL BATCHES FOR THIS ERA AS READY TO POST",DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWLB",129,0)
 S RCT=0
"RTN","RCDPEWLB",130,0)
 I Y D
"RTN","RCDPEWLB",131,0)
 . S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  I '$P($G(^(Z,0)),U,3) S RCT=RCT+1,DA(1)=RCERA,DA=Z,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".03////1" D ^DIE
"RTN","RCDPEWLB",132,0)
 . W !!,RCT," BATCHES CHANGED TO READY TO POST",!,"ALL BATCHES ARE NOW READY TO POST"
"RTN","RCDPEWLB",133,0)
 . S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWLB",134,0)
 . K VALMHDR
"RTN","RCDPEWLB",135,0)
 Q
"RTN","RCDPEWLB",136,0)
 ;
"RTN","RCDPEWLB",137,0)
EDITALL(RCERA) ; Edit all batches
"RTN","RCDPEWLB",138,0)
 ; prca*4.5*298 per requirements, keep code related to creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",139,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",140,0)
 N Z,RCQUIT
"RTN","RCDPEWLB",141,0)
 D FULL^VALM1
"RTN","RCDPEWLB",142,0)
 S VALMBCK="R"
"RTN","RCDPEWLB",143,0)
 W !
"RTN","RCDPEWLB",144,0)
 I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWLB",145,0)
 S (RCQUIT,Z)=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  W !!,"BATCH #: "_+$G(^(Z,0)) D EDIT(RCERA,Z,.RCQUIT) Q:RCQUIT
"RTN","RCDPEWLB",146,0)
 Q
"RTN","RCDPEWLB",147,0)
 ;
"RTN","RCDPEWLB",148,0)
REBATCH(RCERA) ; Allow to recreate batches
"RTN","RCDPEWLB",149,0)
 ;  prca*4.5*298 per requirements, keep code related to creating/maintaining batches but remove from execution
"RTN","RCDPEWLB",150,0)
 Q  ;prca*4.5*298 
"RTN","RCDPEWLB",151,0)
 N DA,DIE,DIK,DIR,DR,RCLINE,RCQUIT,X,Y,Z,Z0
"RTN","RCDPEWLB",152,0)
 D FULL^VALM1
"RTN","RCDPEWLB",153,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL G REBQ
"RTN","RCDPEWLB",154,0)
 ;
"RTN","RCDPEWLB",155,0)
 I '$O(^RCY(344.49,RCERA,3,0)) W !!," ***** THIS ERA CURRENTLY HAS NO BATCHES DEFINED *****"
"RTN","RCDPEWLB",156,0)
 ;
"RTN","RCDPEWLB",157,0)
 S RCQUIT=0
"RTN","RCDPEWLB",158,0)
 I $O(^RCY(344.49,RCERA,3,0)) D  G:RCQUIT REBQ
"RTN","RCDPEWLB",159,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS ACTION REMOVES ALL BATCH REFERENCES.  THE BATCHES CAN THEN BE REBUILT.",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEWLB",160,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEWLB",161,0)
 . S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  S DA(1)=RCERA,DIK="^RCY(344.49,"_DA(1)_",3,",DA=Z D ^DIK
"RTN","RCDPEWLB",162,0)
 ;
"RTN","RCDPEWLB",163,0)
 K ^TMP($J,"BATCHES")
"RTN","RCDPEWLB",164,0)
 D SETBATCH(RCERA)
"RTN","RCDPEWLB",165,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCERA,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) I +Z0'["." D
"RTN","RCDPEWLB",166,0)
 . S RCLINE=$G(^RCY(344.4,RCERA,1,+$P(Z0,U,9),0)),DA(1)=RCERA,DIE="^RCY(344.49,"_DA(1)_",1,",DA=Z,DR=".14///"_$S(RCLINE="":"@",1:"/"_$$GETBATCH^RCDPEWLB(RCLINE)) D ^DIE
"RTN","RCDPEWLB",167,0)
 K ^TMP($J,"BATCHES")
"RTN","RCDPEWLB",168,0)
REBQ S VALMBCK="R"
"RTN","RCDPEWLB",169,0)
 Q
"RTN","RCDPEWLB",170,0)
 ;
"RTN","RCDPEWLB",171,0)
CTEEOB(RCERA) ; Returns the approx # of EEOBs in ERA ien RCERA (file 344.4)
"RTN","RCDPEWLB",172,0)
 N RCNUM,Z
"RTN","RCDPEWLB",173,0)
 S (RCNUM,Z)=0 F  S Z=$O(^RCY(344.4,RCERA,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)'<0 S RCNUM=RCNUM+1
"RTN","RCDPEWLB",174,0)
 Q RCNUM
"RTN","RCDPEWLB",175,0)
 ;
"RTN","RCDPEWLP")
0^21^B164916639
"RTN","RCDPEWLP",1,0)
RCDPEWLP ;ALBANY/KML - EDI LOCKBOX ERA and EEOB WORKLIST procedures ;Oct 15, 2014@12:37:32
"RTN","RCDPEWLP",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEWLP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLP",4,0)
 Q
"RTN","RCDPEWLP",5,0)
 ;
"RTN","RCDPEWLP",6,0)
 ; prca*4.5*298 - procedures built to handle outstanding EFTs; and ERAs with exceptions;
"RTN","RCDPEWLP",7,0)
 ;
"RTN","RCDPEWLP",8,0)
AGEDEFTS(ERADA,TYPE) ; search medical or pharmacy aged EFTs that have not been posted 
"RTN","RCDPEWLP",9,0)
 ;   ENTRY point for the Select ERA action on the ERA Worklist screen
"RTN","RCDPEWLP",10,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",11,0)
 ;              TYPE = represents if pharmacy or medical ERA
"RTN","RCDPEWLP",12,0)
 ;                      "M" (medical ERA-EFT); "P" (phamacy ERA-EFT);
"RTN","RCDPEWLP",13,0)
 ;       OUTPUT - UNPOST
"RTN","RCDPEWLP",14,0)
 ;                        = 1P - error condition for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",15,0)
 ;                        = 2P - warning condition for aged,unposted medical EFTs
"RTN","RCDPEWLP",16,0)
 ;                        = 3P  - Override exists for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",17,0)
 ;                        = 1M - error condition for aged, unposted medical EFTs
"RTN","RCDPEWLP",18,0)
 ;                        = 2M - warning condition for aged, unposted medical EFTs
"RTN","RCDPEWLP",19,0)
 ;                        = 3M  - Override exists for aged, unposted medical EFTs
"RTN","RCDPEWLP",20,0)
 ;                        = 0  - there exist no error or warning conditions
"RTN","RCDPEWLP",21,0)
 ;  possible values for UNPOST = "1P" or "2P" or "3P" or "1M" or "2M" or "3M" or "1P^1M" or "1P^2M" or"
"RTN","RCDPEWLP",22,0)
 ;                               "1P^3M" or "2P^1M" or "2P^2M" or "2P^3M" or "3P^1M" or "3P^2M" or "3P^3M"
"RTN","RCDPEWLP",23,0)
 ;
"RTN","RCDPEWLP",24,0)
 ; 1. If there are unposted payments (EFTs) associated with third party medical claims more than 14 calendar days old, 
"RTN","RCDPEWLP",25,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",26,0)
 ; 2. If there are unposted payments (EFTs) associated with pharmacy claims more than 21 calendar days old, 
"RTN","RCDPEWLP",27,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",28,0)
 ; 3. If there are unposted payments (EFTs) associated with third party medical or pharmacy claims, 
"RTN","RCDPEWLP",29,0)
 ;        aged more than the number of days specified in site parameters,
"RTN","RCDPEWLP",30,0)
 ;             the system shall display an error message for action Select ERA on the EEOB WORKLIST [RCDPE EDI LOCKBOX WORKLIST]
"RTN","RCDPEWLP",31,0)
 ;  additional conditions for item 3 below:   
"RTN","RCDPEWLP",32,0)
 ; 3a.  If the user has selected a medical ERA that is 14 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",33,0)
 ; 3b.  If the user has selected a pharmacy ERA that is 21 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",34,0)
 ; 3c.  If an override exists, allow the user to create the scratchpad.
"RTN","RCDPEWLP",35,0)
 ; 3d.  If the user has selected a medical ERA that has been received within 14 days, and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",36,0)
 ; 3e.  If the user has selected a pharmacy ERA that has been received within 21 days,and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",37,0)
 ;Do not consider EFTs that are older than two months prior to national release.
"RTN","RCDPEWLP",38,0)
 ;  note: EFTs that designated to be auto-posted to a receipt are included in the search for aged, unposted EFTs
"RTN","RCDPEWLP",39,0)
 N X,EFTDA,UNPOST,EFT0,SELERADT,STARTDT,DATE,RC3444,RC34431
"RTN","RCDPEWLP",40,0)
 S UNPOST=0
"RTN","RCDPEWLP",41,0)
 S RC3444=^RCY(344.4,ERADA,0)
"RTN","RCDPEWLP",42,0)
 I '$P(RC3444,U,5) G AEFTSQ   ; ignore selected ERAs that have ZERO payment 
"RTN","RCDPEWLP",43,0)
 S EFTDA=+$O(^RCY(344.31,"AERA",ERADA,0))
"RTN","RCDPEWLP",44,0)
 S:EFTDA RC34431=^RCY(344.31,EFTDA,0)
"RTN","RCDPEWLP",45,0)
 I 'EFTDA,$P(RC3444,U,9)=2 G AEFTSQ   ; ignore selected ERAs that are MATCHED TO PAPER CHECK
"RTN","RCDPEWLP",46,0)
 I 'EFTDA,$P(RC3444,U,15)="CHK" G AEFTSQ  ;ignore selected ERAs that are UNMATCHED and have an EXPECTED PAYMENT CODE of "CHK"
"RTN","RCDPEWLP",47,0)
 I 'EFTDA S SELERADT=$P($P(RC3444,U,7),".")  ; FILE DATE/TIME (344.4, .07) of the selected ERA when there isn't an associated EFT (unmatched ERA)
"RTN","RCDPEWLP",48,0)
 E  S SELERADT=$P(RC34431,U,13)  ; DATE RECEIVED (344.31,.13) of the EFT associated with the selected ERA 
"RTN","RCDPEWLP",49,0)
 I TYPE="P" D  G AEFTSQ
"RTN","RCDPEWLP",50,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>21 S UNPOST=0 Q   ;the selected ERA is older than 21 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",51,0)
 . S UNPOST=$$GETEFTS(TYPE)   ; selected ERA was received less than 21 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",52,0)
 I TYPE="M" D
"RTN","RCDPEWLP",53,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>14 S UNPOST=0 Q   ;the selected ERA is older than 14 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",54,0)
 . S UNPOST=$$GETEFTS(TYPE)  ; selected ERA was received less than 14 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",55,0)
AEFTSQ ; 
"RTN","RCDPEWLP",56,0)
 Q UNPOST
"RTN","RCDPEWLP",57,0)
 ;
"RTN","RCDPEWLP",58,0)
GETEFTS(TYPE,OPTION) ; ENTRY point for Unposted EFT Override option; 
"RTN","RCDPEWLP",59,0)
 ;  set up search criteria for unposted EFTs; if aged, unposted EFTs exist then generate warning/prevention messages
"RTN","RCDPEWLP",60,0)
 ;           input - 
"RTN","RCDPEWLP",61,0)
 ;                   TYPE = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",62,0)
 ;                   OPTION = if = null or undefined then Select ERA action on the ERA Worklist called this function
"RTN","RCDPEWLP",63,0)
 ;                            if = 1 then Override option called this function
"RTN","RCDPEWLP",64,0)
 ;       OUTPUT - OUTCOME
"RTN","RCDPEWLP",65,0)
 ;                        = 1P - error condition for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",66,0)
 ;                        = 2P - warning condition for aged,unposted medical EFTs
"RTN","RCDPEWLP",67,0)
 ;                        = 3P  - Override exists for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",68,0)
 ;                        = 1M - error condition for aged, unposted medical EFTs
"RTN","RCDPEWLP",69,0)
 ;                        = 2M - warning condition for aged, unposted medical EFTs
"RTN","RCDPEWLP",70,0)
 ;                        = 3M  - Override exists for aged, unposted medical EFTs
"RTN","RCDPEWLP",71,0)
 ;                        = 0  - there exist no error or warning conditions
"RTN","RCDPEWLP",72,0)
 ;  possible values for OUTCOME = "1P" or "2P" or "3P" or "1M" or "2M" or "3M" or "1P^1M" or "1P^2M" or"
"RTN","RCDPEWLP",73,0)
 ;                               "1P^3M" or "2P^1M" or "2P^2M" or "2P^3M" or "3P^1M" or "3P^2M" or "3P^3M"
"RTN","RCDPEWLP",74,0)
 ;
"RTN","RCDPEWLP",75,0)
 N OVERRIDE,DAYSLIMIT,OUTCOME,TRARRY,ARRAY,STR,X,DTARRY
"RTN","RCDPEWLP",76,0)
 S OPTION=$G(OPTION)
"RTN","RCDPEWLP",77,0)
 I TYPE="B" S DAYSLIMT("M")=$$GET1^DIQ(344.61,1,.06),DAYSLIMT("P")=$$GET1^DIQ(344.61,1,.07)  ; both medical and pharmacy EFTs need to be evaluated
"RTN","RCDPEWLP",78,0)
 E  S DAYSLIMT(TYPE)=$$GET1^DIQ(344.61,1,$S(TYPE="M":.06,1:.07))   ; number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",79,0)
 S STARTDT=$$CUTOFF
"RTN","RCDPEWLP",80,0)
 D EFTDET(STARTDT,TYPE,.DAYSLIMT,.TRARRY)
"RTN","RCDPEWLP",81,0)
 ;  aged unposted EFTs exist;    generate prevention message and if this was called within Worklist (and not Override option) then generate msg with list of TRACE #s
"RTN","RCDPEWLP",82,0)
 F X="P","M" I $D(TRARRY("ERROR",X)) D
"RTN","RCDPEWLP",83,0)
 . D CHECK^RCDPEUPO(X,.OVERRIDE)  ; determine if Override exists
"RTN","RCDPEWLP",84,0)
 . I OVERRIDE S OUTCOME=$G(OUTCOME)_3_X_U
"RTN","RCDPEWLP",85,0)
 . E  S OUTCOME=$G(OUTCOME)_1_X_U
"RTN","RCDPEWLP",86,0)
 . K TRARRY("WARNING",X)  ; Error message supersede warning message.  No need to display warning msg if error condition exists
"RTN","RCDPEWLP",87,0)
 . Q:OPTION  Q:OVERRIDE
"RTN","RCDPEWLP",88,0)
 . M ARRAY=TRARRY("ERROR",X)
"RTN","RCDPEWLP",89,0)
 . D FTRACE(.ARRAY,.STR),PREVMSG(X,.DAYSLIMT,.STR)
"RTN","RCDPEWLP",90,0)
 . K ARRAY
"RTN","RCDPEWLP",91,0)
 F X="P","M" I $D(TRARRY("WARNING",X)) D
"RTN","RCDPEWLP",92,0)
 . S OUTCOME=$G(OUTCOME)_2_X_U
"RTN","RCDPEWLP",93,0)
 . Q:OPTION  ; function was called by the OVERRIDE option; don't need to display list of trace numbers
"RTN","RCDPEWLP",94,0)
 . M ARRAY=TRARRY("WARNING",X)
"RTN","RCDPEWLP",95,0)
 . D FTRACE(.ARRAY,.STR),WARNMSG(X,.STR)
"RTN","RCDPEWLP",96,0)
 . K ARRAY ; aged unposted EFTs > 21 days exist; generate warning message
"RTN","RCDPEWLP",97,0)
 S:'$D(OUTCOME) OUTCOME=0  ; error or warning conditions do not exist
"RTN","RCDPEWLP",98,0)
GETSQ ;
"RTN","RCDPEWLP",99,0)
 Q OUTCOME
"RTN","RCDPEWLP",100,0)
 ;
"RTN","RCDPEWLP",101,0)
CUTOFF() ;  RETURN EFT cut-off date
"RTN","RCDPEWLP",102,0)
 ; EFT cut-off date represents 2 months prior to install date of patch 298 (ignore EFTS that are aged older than the 2 month prior date)
"RTN","RCDPEWLP",103,0)
 N RCX,DATE
"RTN","RCDPEWLP",104,0)
 S RCX=+$P($G(^RCY(344.61,1,0)),U,9)
"RTN","RCDPEWLP",105,0)
 S:RCX=0 RCX=DT
"RTN","RCDPEWLP",106,0)
 S DATE=$$FMADD^XLFDT(RCX,-61,0,0)
"RTN","RCDPEWLP",107,0)
 Q DATE
"RTN","RCDPEWLP",108,0)
 ;
"RTN","RCDPEWLP",109,0)
EFTDET(RECVDT,TYPE,DAYSLIMT,TRARRY) ;  gather EFT data
"RTN","RCDPEWLP",110,0)
 ;         only collect EFTs that meet the requirements of aged and unposted
"RTN","RCDPEWLP",111,0)
 ;
"RTN","RCDPEWLP",112,0)
 ;        input - RECVDT   = date to start $ORDER through the DATE RECEIVED cross-reference of 344.3
"RTN","RCDPEWLP",113,0)
 ;                TYPE     = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",114,0)
 ;                DAYSLIMT =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",115,0)
 ;                TRARRY   = passed by reference, array to hold trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",116,0)
 ; 
"RTN","RCDPEWLP",117,0)
 ;        output - TRARRY  = array of trace numbers that need to be reported as aged and unposted  
"RTN","RCDPEWLP",118,0)
 ;  
"RTN","RCDPEWLP",119,0)
 N AGED,EFT0,EFTDA,ERAREC,MSTATUS,TRACE
"RTN","RCDPEWLP",120,0)
 S EFTDA=""
"RTN","RCDPEWLP",121,0)
 F  S RECVDT=$O(^RCY(344.31,"ADR",RECVDT)) Q:'RECVDT  F  S EFTDA=$O(^RCY(344.31,"ADR",RECVDT,EFTDA)) Q:'EFTDA  D
"RTN","RCDPEWLP",122,0)
 . S EFT0=$G(^RCY(344.31,EFTDA,0)) Q:EFT0=""
"RTN","RCDPEWLP",123,0)
 . Q:+$P(EFT0,U,7)=0  ;ignore zero payment amts
"RTN","RCDPEWLP",124,0)
 . I $P($G(^RCY(344.31,EFTDA,3)),U,2)]"" Q  ; Ignore duplicate EFTs which have been removed 
"RTN","RCDPEWLP",125,0)
 . S ERAREC=+$P(EFT0,U,10)  ; ERA RECORD (344.31, .1)  pointer to ERA record
"RTN","RCDPEWLP",126,0)
 . I ERAREC,$P($G(^RCY(344.4,ERAREC,0)),U,14)=1 Q  ; DETAIL POST STATUS (344.4, .14);  ignore posted ERA-EFTs 
"RTN","RCDPEWLP",127,0)
 . I 'ERAREC,$P($G(^RCY(344.31,EFTDA,0)),U,8) Q:$$PROC(EFTDA)  ;Exclude EFT matched to Paper EOB if receipt is processed
"RTN","RCDPEWLP",128,0)
 . S MSTATUS=+$P(EFT0,U,8)  ;  MATCH STATUS (344.31,, .08)
"RTN","RCDPEWLP",129,0)
 . S AGED=$$FMDIFF^XLFDT(DT,RECVDT)  ; get aged number of days of the EFT
"RTN","RCDPEWLP",130,0)
 . S TRACE=$P(EFT0,U,4)  ; TRACE # (344.31, .04)
"RTN","RCDPEWLP",131,0)
 . I (TYPE="B")!(TYPE="P"),$$PHARM(ERAREC) D
"RTN","RCDPEWLP",132,0)
 . . I AGED>DAYSLIMT("P") S TRARRY("ERROR","P",TRACE)="ERA = "_ERAREC_U_MSTATUS Q   ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",133,0)
 . . I '$D(TRARRY("ERROR")),AGED>21 S TRARRY("WARNING","P",TRACE)="ERA = "_ERAREC_U_MSTATUS   ;aged unposted PHARMACY EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",134,0)
 . I (TYPE="B")!(TYPE="M"),'$$PHARM(ERAREC) D
"RTN","RCDPEWLP",135,0)
 . . I AGED>DAYSLIMT("M") S TRARRY("ERROR","M",TRACE)="ERA = "_ERAREC_U_MSTATUS Q  ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",136,0)
 . . I '$D(TRARRY("ERROR")),AGED>14 S TRARRY("WARNING","M",TRACE)="ERA = "_ERAREC_U_MSTATUS  ;aged unposted MEDICAL EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",137,0)
 Q
"RTN","RCDPEWLP",138,0)
 ;
"RTN","RCDPEWLP",139,0)
PROC(EFTDA) ; Check if TR Receipt for an EFT linked to Paper EOB is processed 
"RTN","RCDPEWLP",140,0)
 ; Input - EFT IEN
"RTN","RCDPEWLP",141,0)
 ; Output - Boolean (Returns 1 if TR receipt exists and is OPEN, otherwise returns 0)
"RTN","RCDPEWLP",142,0)
 ;
"RTN","RCDPEWLP",143,0)
 ;Find TR receipt and check if it does not have a status of CLOSED
"RTN","RCDPEWLP",144,0)
 N IEN344,RET S IEN344=$O(^RCY(344,"AEFT",EFTDA,0)) I IEN344 S:$P($G(^RCY(344,IEN344,0)),U,14)'=1 RET=1
"RTN","RCDPEWLP",145,0)
 Q +$G(RET)
"RTN","RCDPEWLP",146,0)
 ;
"RTN","RCDPEWLP",147,0)
FTRACE(TRARRY,STR) ; input array needs to be formatted as a string of trace#s each separated by commas to be displayed in the warning or error message
"RTN","RCDPEWLP",148,0)
 ;          input -  TRARRY = passed by reference, array of trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",149,0)
 ;                   STR = passed by reference, empty array that will be populated with trace numbers
"RTN","RCDPEWLP",150,0)
 ;                  
"RTN","RCDPEWLP",151,0)
 ;          output - STR   = reconstructed array of trace numbers    
"RTN","RCDPEWLP",152,0)
 ;
"RTN","RCDPEWLP",153,0)
 ; fixed code follows
"RTN","RCDPEWLP",154,0)
 N CTR,LEN,TRACE,X
"RTN","RCDPEWLP",155,0)
 K STR  ; array returned
"RTN","RCDPEWLP",156,0)
 S CTR=1,TRACE=""
"RTN","RCDPEWLP",157,0)
 F  S TRACE=$O(TRARRY(TRACE)) Q:TRACE=""  D
"RTN","RCDPEWLP",158,0)
 . S STR(CTR)=$G(STR(CTR))  ; initialize
"RTN","RCDPEWLP",159,0)
 . I $L(STR(CTR))+$L(TRACE)>77 S CTR=CTR+1,STR(CTR)=TRACE Q
"RTN","RCDPEWLP",160,0)
 . S STR(CTR)=STR(CTR)_$S(STR(CTR)]"":",",1:"")_TRACE  ; add comma if needed
"RTN","RCDPEWLP",161,0)
 Q 
"RTN","RCDPEWLP",162,0)
 ;
"RTN","RCDPEWLP",163,0)
WARNMSG(TYPE,STR) ;  Display warning message when aged, unposted EFTs exist
"RTN","RCDPEWLP",164,0)
 ;
"RTN","RCDPEWLP",165,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",166,0)
 ;                  STR    = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format
"RTN","RCDPEWLP",167,0)
 ;                           passed by reference   
"RTN","RCDPEWLP",168,0)
 ;               
"RTN","RCDPEWLP",169,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",170,0)
 S LN=5,X=0
"RTN","RCDPEWLP",171,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",172,0)
 S DIR("A",1)="WARNING: Unposted "_$S(TYPE="P":"pharmacy ",1:"medical ")_"EFTs exist that are more than "_$S(TYPE="P":21,1:14)_" days old."
"RTN","RCDPEWLP",173,0)
 S DIR("A",2)=" "  ; blank line
"RTN","RCDPEWLP",174,0)
 S DIR("A",3)="Post the older payments first. The EFTs may be unmatched or matched."
"RTN","RCDPEWLP",175,0)
 S DIR("A",4)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",176,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=STR(X),LN=LN+1
"RTN","RCDPEWLP",177,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",178,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",179,0)
 Q
"RTN","RCDPEWLP",180,0)
 ;
"RTN","RCDPEWLP",181,0)
PREVMSG(TYPE,DAYS,STR) ;  Display Error message when aged, unposted EFTs exist
"RTN","RCDPEWLP",182,0)
 ;
"RTN","RCDPEWLP",183,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",184,0)
 ;                  DAYS   =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",185,0)
 ;                  STR    =  passed by reference, name of array that will return reformatted array of trace numbers
"RTN","RCDPEWLP",186,0)
 ;                  
"RTN","RCDPEWLP",187,0)
 ;          output - STR   = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format     
"RTN","RCDPEWLP",188,0)
 ;
"RTN","RCDPEWLP",189,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",190,0)
 S LN=6,X=0
"RTN","RCDPEWLP",191,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",192,0)
 S DIR("A",1)="ERROR: Unposted "_$S(TYPE="P":"Pharmacy ",1:"Medical ")_"EFTs exist that are more than "_$S(TYPE="P":DAYS("P"),1:DAYS("M"))_" days old. Scratchpad"
"RTN","RCDPEWLP",193,0)
 S DIR("A",2)="creation is not allowed for newer payments. Post older payments first."
"RTN","RCDPEWLP",194,0)
 S DIR("A",3)="The EFTs may be matched or unmatched."
"RTN","RCDPEWLP",195,0)
 S DIR("A",4)=" "  ; blank line
"RTN","RCDPEWLP",196,0)
 S DIR("A",5)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",197,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=" "_STR(X),LN=LN+1
"RTN","RCDPEWLP",198,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",199,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",200,0)
 Q
"RTN","RCDPEWLP",201,0)
 ;
"RTN","RCDPEWLP",202,0)
EXCDENY ; praca*4.5*298 display access denied message for those ERAs that are selected off the ERA Worklist and have exceptions  
"RTN","RCDPEWLP",203,0)
 N DIR
"RTN","RCDPEWLP",204,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",205,0)
 S DIR("A",1)="ACCESS DENIED:  Scratchpad creation is not allowed when third party"
"RTN","RCDPEWLP",206,0)
 S DIR("A",2)="medical exceptions exist.  Fix Transmission Exceptions first and then Data"
"RTN","RCDPEWLP",207,0)
 S DIR("A",3)="Exceptions with the EXE EDI Lockbox 3rd Party Exceptions option which is"
"RTN","RCDPEWLP",208,0)
 S DIR("A",4)="located on the EDI Lockbox Main Menu."
"RTN","RCDPEWLP",209,0)
 S DIR("A",5)=""
"RTN","RCDPEWLP",210,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",211,0)
 Q
"RTN","RCDPEWLP",212,0)
 ;
"RTN","RCDPEWLP",213,0)
EXCWARN(ERADA) ; prca*4.5*298  generate warning when exception exists
"RTN","RCDPEWLP",214,0)
 ; 
"RTN","RCDPEWLP",215,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",216,0)
 ;      output - WARNING MESSAGE if exception exists on the ERA
"RTN","RCDPEWLP",217,0)
 ;              
"RTN","RCDPEWLP",218,0)
 ;
"RTN","RCDPEWLP",219,0)
 Q:$$PHARM(ERADA)  ; ignore pharmacy ERAs
"RTN","RCDPEWLP",220,0)
 Q:$$XCEPT(ERADA)=""  ; exception does not exist
"RTN","RCDPEWLP",221,0)
 N DIR
"RTN","RCDPEWLP",222,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",223,0)
 S DIR("A",1)="WARNING: Fix Transmission Exceptions first and then Data Exceptions via"
"RTN","RCDPEWLP",224,0)
 S DIR("A",2)="the EXE EDI Lockbox 3rd Party Exceptions option which is located on the"
"RTN","RCDPEWLP",225,0)
 S DIR("A",3)="EDI Lockbox Main Menu."
"RTN","RCDPEWLP",226,0)
 S DIR("A",4)=" "
"RTN","RCDPEWLP",227,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",228,0)
 Q
"RTN","RCDPEWLP",229,0)
 ;
"RTN","RCDPEWLP",230,0)
XCEPT(ERADA) ; prca*4.5*298  return ERA exception state
"RTN","RCDPEWLP",231,0)
 ; 
"RTN","RCDPEWLP",232,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",233,0)
 ;      output - "x" or ""
"RTN","RCDPEWLP",234,0)
 ;                "x" = exception exists for at least one of the claims in the ERA
"RTN","RCDPEWLP",235,0)
 ;
"RTN","RCDPEWLP",236,0)
 N RES
"RTN","RCDPEWLP",237,0)
 S RES=$S($D(^RCY(344.4,"AEXC",1,ERADA)):"x",$D(^RCY(344.4,"AEXC",2,ERADA)):"x",$D(^RCY(344.4,"AEXC",99,ERADA)):"ERADA",1:"")
"RTN","RCDPEWLP",238,0)
 Q RES
"RTN","RCDPEWLP",239,0)
 ;
"RTN","RCDPEWLP",240,0)
PHARM(X1) ; prca*4.5*298  determine if pharmacy ERA
"RTN","RCDPEWLP",241,0)
 ;
"RTN","RCDPEWLP",242,0)
 ;      input - X1 = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",243,0)
 ;      output - 1 or 0
"RTN","RCDPEWLP",244,0)
 ;      1 = pharmacy ERA
"RTN","RCDPEWLP",245,0)
 ;      0 = non-pharmacy ERA
"RTN","RCDPEWLP",246,0)
 ;     
"RTN","RCDPEWLP",247,0)
 Q $S($D(^RCY(344.4,X1,1,"ECME")):1,1:0)
"RTN","RCDPEWLP",248,0)
 ;
"RTN","RCDPEWLP",249,0)
GETPHARM(PRCAIEN,RCARRY) ;prca*4.5*298  return pharmacy data to show on EEOB items in scratchpad
"RTN","RCDPEWLP",250,0)
 ; 
"RTN","RCDPEWLP",251,0)
 ;   input -    PRCAIEN = ien to record in 430
"RTN","RCDPEWLP",252,0)
 ;              RCARRY = Array name that will be used to store and return pharmacy data elements
"RTN","RCDPEWLP",253,0)
 ;   output -   RCARRY = holds pharmacy data 
"RTN","RCDPEWLP",254,0)
 ; IA 6033 (controlled subscription) - read access of file 362.4.  status is pending
"RTN","RCDPEWLP",255,0)
 ; ICR 1878 (supported) - usage of EN^PSOORDER
"RTN","RCDPEWLP",256,0)
 ;
"RTN","RCDPEWLP",257,0)
 N RC0,RXDATA,RXIEN,RCDFN,RXFILL
"RTN","RCDPEWLP",258,0)
 K RCARRY
"RTN","RCDPEWLP",259,0)
 Q:PRCAIEN=""
"RTN","RCDPEWLP",260,0)
 S RCDFN=$P(^PRCA(430,PRCAIEN,0),U,7)
"RTN","RCDPEWLP",261,0)
 S RC0=+$O(^IBA(362.4,"C",PRCAIEN,0))
"RTN","RCDPEWLP",262,0)
 Q:RC0=0
"RTN","RCDPEWLP",263,0)
 S RXDATA=$G(^IBA(362.4,RC0,0))
"RTN","RCDPEWLP",264,0)
 S RCARRY("DOS")=$$FMTE^XLFDT($P(RXDATA,U,3),"2Z")
"RTN","RCDPEWLP",265,0)
 S RCARRY("FILL")=+$P(RXDATA,U,10)          ; rx fill#
"RTN","RCDPEWLP",266,0)
 S RXIEN=+$P(RXDATA,U,5)            ; RX ien ptr file 52
"RTN","RCDPEWLP",267,0)
 D EN^PSOORDER(RCDFN,RXIEN)
"RTN","RCDPEWLP",268,0)
 S RCARRY("RX")=$P(^TMP("PSOR",$J,RXIEN,0),U,5)
"RTN","RCDPEWLP",269,0)
 I RCARRY("FILL")=0 S RCARRY("RELEASED STATUS")=$S($P(^TMP("PSOR",$J,RXIEN,0),U,13)]"":"Released",1:"Not Released")   ; determine release status from Rx on the first fill (no refills)
"RTN","RCDPEWLP",270,0)
 I RCARRY("FILL")>0 S RCARRY("RELEASED STATUS")=$S($P(^TMP("PSOR",$J,RXIEN,"REF",RCARRY("FILL"),0),U,8)]"":"Released",1:"Not Released")  ; ; determine release status from Rx refill #
"RTN","RCDPEWLP",271,0)
 Q
"RTN","RCDPEWLP",272,0)
 ;
"RTN","RCDPEWLP",273,0)
CV ; Change View action for ERA Worklist
"RTN","RCDPEWLP",274,0)
 D FULL^VALM1 D PARAMS^RCDPEWL0("CV")
"RTN","RCDPEWLP",275,0)
 D HDR^RCDPEWL7,INIT^RCDPEWL7 S VALMBCK="R",VALMBG=1
"RTN","RCDPEWLP",276,0)
 Q
"RTN","RCDPEWLP",277,0)
 ;
"RTN","RCDPEWLP",278,0)
NOEDIT ; Display no edit allowed selected ERA is designated for auto-posting
"RTN","RCDPEWLP",279,0)
 N DIR
"RTN","RCDPEWLP",280,0)
 S DIR(0)="EA",DIR("A",1)="This action is not available for Auto-Posted ERAs."
"RTN","RCDPEWLP",281,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",282,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",283,0)
 Q
"RTN","RCDPEWLP",284,0)
 ;
"RTN","RCDPEWLP",285,0)
VR(ERADA) ;   handling of auto-posted ERAs ; entry point for the Look at Receipt protocol for standard Worklist;
"RTN","RCDPEWLP",286,0)
 ;  
"RTN","RCDPEWLP",287,0)
 ;    input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",288,0)
 ;
"RTN","RCDPEWLP",289,0)
 N RCDA,RCZ,RCZ0,EEOBREC
"RTN","RCDPEWLP",290,0)
 D SEL^RCDPEWL(.RCDA)  ; select an EEOB off the scratchpad
"RTN","RCDPEWLP",291,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) Q:'RCZ
"RTN","RCDPEWLP",292,0)
 S RCZ0=$G(^RCY(344.49,ERADA,1,RCZ,0))
"RTN","RCDPEWLP",293,0)
 S EEOBREC=$P($G(^RCY(344.4,ERADA,1,+$P(RCZ0,U,9),4)),U,3)
"RTN","RCDPEWLP",294,0)
 I EEOBREC']"" D NOVIEW Q 
"RTN","RCDPEWLP",295,0)
 D EN^VALM("RCDPE AUTO EOB RECEIPT PREVIEW")
"RTN","RCDPEWLP",296,0)
 Q
"RTN","RCDPEWLP",297,0)
 ;
"RTN","RCDPEWLP",298,0)
NOVIEW ; selected EEOB cannot be viewed if no receipt number
"RTN","RCDPEWLP",299,0)
 N DIR
"RTN","RCDPEWLP",300,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT AVAILABLE SINCE THE EEOB HAS NOT BEEN AUTO-POSTED."
"RTN","RCDPEWLP",301,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",302,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",303,0)
 Q
"RTN","RCDPEWLP",304,0)
 ;
"RTN","RCDPEWLP",305,0)
INIT(ERADA,EEOBREC) ;  List Template - RCDPE AUTO EOB RECEIPT PREVIEW entry point
"RTN","RCDPEWLP",306,0)
 ;  display EEOBs that have been posted (receipt exists)
"RTN","RCDPEWLP",307,0)
 ;
"RTN","RCDPEWLP",308,0)
 ;            input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",309,0)
 ;                    EEOBREC = selected EEOBs receipt
"RTN","RCDPEWLP",310,0)
 ;            output - ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",311,0)
 N X,Z,Z1,Z10,Z0,Z2,RCZ
"RTN","RCDPEWLP",312,0)
 N RCPT
"RTN","RCDPEWLP",313,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",314,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWLP",315,0)
 S Z=0 F  S Z=$O(^RCY(344.49,ERADA,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWLP",316,0)
 . I $P(Z0,U)\1=+Z0 S Z2=$P(Z0,U,2)
"RTN","RCDPEWLP",317,0)
 . S RCPT=+$P($G(^RCY(344.4,ERADA,1,+$P(Z0,U,9),4)),U,3),RCPT(RCPT)=""  ; receipt array
"RTN","RCDPEWLP",318,0)
 . I $P($P(Z0,U),".",2),$D(RCPT(EEOBREC)) D   ; if the EEOB has same receipt# has the selected EEOB then it can be listed on the preview screen
"RTN","RCDPEWLP",319,0)
 .. S:$P(Z0,U,2)="" $P(Z0,U,2)=Z2
"RTN","RCDPEWLP",320,0)
 .. S RCZ=$S(+$P(Z0,U,6)=0:0,+$P(Z0,U,6)<0:-1,$P(Z0,U,7):1,1:2)
"RTN","RCDPEWLP",321,0)
 .. S RCZ(RCZ,Z)=Z0
"RTN","RCDPEWLP",322,0)
 .. K RCPT
"RTN","RCDPEWLP",323,0)
 .. S Z1=0 F  S Z1=$O(^RCY(344.49,ERADA,1,Z,1,Z1)) Q:'Z1  S Z10=$G(^(Z1,0)) D
"RTN","RCDPEWLP",324,0)
 ... I $P(Z10,U,5)=1 S RCZ(RCZ,Z,"ADJ",Z1)="Dec adj $"_$J(0-$P(Z10,U,3),"",2)_" pending - ",RCZ(RCZ,Z,"ADJ",Z1,1)=$J("",4)_$P(Z10,U,9)
"RTN","RCDPEWLP",325,0)
 F RCZ=1,2,0,-1 D
"RTN","RCDPEWLP",326,0)
 . Q:'$D(RCZ(RCZ))
"RTN","RCDPEWLP",327,0)
 . I RCZ=1 D SET("PAYMENTS (LINES FOR RECEIPT):")
"RTN","RCDPEWLP",328,0)
 . I RCZ=0,VALMCNT>0 D SET(" ") D SET("ZERO DOLLAR PAYMENTS:")
"RTN","RCDPEWLP",329,0)
 . I RCZ=-1,VALMCNT>0 D SET(" ") D SET("LINES WITH NEGATIVE BALANCES STILL NEEDING TO BE DISTRIBUTED:")
"RTN","RCDPEWLP",330,0)
 . S Z=0 F  S Z=$O(RCZ(RCZ,Z)) Q:'Z  S Z0=RCZ(RCZ,Z) D
"RTN","RCDPEWLP",331,0)
 .. S X=""
"RTN","RCDPEWLP",332,0)
 .. S X=$$SETFLD^VALM1($P(Z0,U),X,"LINE #")
"RTN","RCDPEWLP",333,0)
 .. S X=$$SETFLD^VALM1($S($P(Z0,U,7):$$BN1^PRCAFN($P(Z0,U,7)),1:$S(RCZ=0:"",1:"[SUSPENSE]")_$S($P(Z0,U,2)["**ADJ"&'$P($P(Z0,U,2),"ADJ",2):"TOTALS MISMATCH ADJ",1:$P(Z0,U,2))),X,"ACCOUNT")
"RTN","RCDPEWLP",334,0)
 .. S X=$$SETFLD^VALM1($J(+$P(Z0,U,6),"",2),X,"AMOUNT")
"RTN","RCDPEWLP",335,0)
 .. D SET(X)
"RTN","RCDPEWLP",336,0)
 .. S Z1=0 F  S Z1=$O(RCZ(RCZ,Z,"ADJ",Z1)) Q:'Z1  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1))) S Z2=0 F  S Z2=$O(RCZ(RCZ,Z,"ADJ",Z1,Z2)) Q:'Z2  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1,Z2)))
"RTN","RCDPEWLP",337,0)
 Q
"RTN","RCDPEWLP",338,0)
 ;
"RTN","RCDPEWLP",339,0)
SET(X) ;
"RTN","RCDPEWLP",340,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWLP",341,0)
 S ^TMP("RCDPE_AP_EOB_PREVIEW",$J,VALMCNT,0)=X
"RTN","RCDPEWLP",342,0)
 Q
"RTN","RCDPEWLP",343,0)
 ;
"RTN","RCDPEWLP",344,0)
HDR ;
"RTN","RCDPEWLP",345,0)
 D HDR^RCDPEWL
"RTN","RCDPEWLP",346,0)
 Q
"RTN","RCDPEWLP",347,0)
 ;
"RTN","RCDPEWLP",348,0)
FNL ;
"RTN","RCDPEWLP",349,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",350,0)
 Q
"RTN","RCDPEWLP",351,0)
 ;RCDPEWLP
"RTN","RCDPEX")
0^82^B80310750
"RTN","RCDPEX",1,0)
RCDPEX ;ALB/TMK,DWA - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.5 ;Jun 06, 2014@19:11:19
"RTN","RCDPEX",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEX",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX",4,0)
 Q
"RTN","RCDPEX",5,0)
 ;
"RTN","RCDPEX",6,0)
UPD ; Update (File) ERA msgs manually from EOB exception list for file 344.5
"RTN","RCDPEX",7,0)
 N RCDA,RCOK,RCTDA,ZTSK,RCTSK,RCTYP,RCU,RC0
"RTN","RCDPEX",8,0)
 D FULL^VALM1
"RTN","RCDPEX",9,0)
 D SEL(.RCDA,1)
"RTN","RCDPEX",10,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",11,0)
 I RCDA="" G UPDQ
"RTN","RCDPEX",12,0)
 S RCTDA=+RCDA(RCDA)
"RTN","RCDPEX",13,0)
 I '$$LOCK(RCTDA) G UPDQ
"RTN","RCDPEX",14,0)
 S RC0=$G(^RCY(344.5,RCTDA,0))
"RTN","RCDPEX",15,0)
 ;
"RTN","RCDPEX",16,0)
 I RC0="" D  G UPDQ
"RTN","RCDPEX",17,0)
 . W !,*7,"ERA #",RCDA," is no longer in exception file" S RCOK=""
"RTN","RCDPEX",18,0)
 . D PAUSE^VALM1
"RTN","RCDPEX",19,0)
 I $P(RC0,U,5) S RCOK=1 D  G:'RCOK UPDQ
"RTN","RCDPEX",20,0)
 . N ZTSK
"RTN","RCDPEX",21,0)
 . S ZTSK=$P(RC0,U,5) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","RCDPEX",22,0)
 . I "12"[ZTSK(1) W *7,!,"This record has already been scheduled for update.  Task # is: ",$P(RC0,U,5) S RCOK="" D PAUSE^VALM1
"RTN","RCDPEX",23,0)
 ;
"RTN","RCDPEX",24,0)
 S RCTYP=$P(RC0,U,2)
"RTN","RCDPEX",25,0)
 S RCU=$S(RCTYP="835ERA":"NEWERA^RCDPESR2("_RCTDA_",1)",RCTYP="835XFR":"FILEEOB^RCDPESR5("_RCTDA_")",1:"")
"RTN","RCDPEX",26,0)
 I RCU="" W !,*7,"This message has an invalid 'type' - can't update" D PAUSE^VALM1 G UPDQ
"RTN","RCDPEX",27,0)
 S RCTSK=$$TASK(RCU,RCTDA)
"RTN","RCDPEX",28,0)
 I RCTSK W !,"File update has been tasked (#",RCTSK,")"
"RTN","RCDPEX",29,0)
 I 'RCTSK W !,*7,"File update could not be tasked.  Please try again later!!!"
"RTN","RCDPEX",30,0)
 D PAUSE^VALM1
"RTN","RCDPEX",31,0)
 ;
"RTN","RCDPEX",32,0)
 D BLD^RCDPEX1
"RTN","RCDPEX",33,0)
UPDQ I $G(RCTDA) L -^RCY(344.5,RCTDA,0)
"RTN","RCDPEX",34,0)
 S VALMBCK="R"
"RTN","RCDPEX",35,0)
 Q
"RTN","RCDPEX",36,0)
 ;
"RTN","RCDPEX",37,0)
VP ; View/Print ERA Messages - File 344.5
"RTN","RCDPEX",38,0)
 N DHD,DIC,FLDS,BY,FR,TO,DIR,Y,L,RCDA,RCTDA,RCRAW,POP
"RTN","RCDPEX",39,0)
 D FULL^VALM1,SEL(.RCDA,1)
"RTN","RCDPEX",40,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",41,0)
 G:'RCDA VPQ
"RTN","RCDPEX",42,0)
 S RCTDA=$G(RCDA(RCDA))
"RTN","RCDPEX",43,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO INCLUDE DATA THE WAY IT WAS RECEIVED (RAW DATA)?: ",DIR("B")="N" D ^DIR K DIR
"RTN","RCDPEX",44,0)
 I $D(DUOUT)!$D(DTOUT) G VPQ
"RTN","RCDPEX",45,0)
 S RCRAW=+Y
"RTN","RCDPEX",46,0)
 ; Ask device
"RTN","RCDPEX",47,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX",48,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEX",49,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEX",50,0)
 . S ZTRTN="VPOUT^RCDPEX",ZTDESC="AR - Print EEOB Exception Message"
"RTN","RCDPEX",51,0)
 . S ZTSAVE("RCTDA")="",ZTSAVE("RCRAW")=""
"RTN","RCDPEX",52,0)
 . D ^%ZTLOAD
"RTN","RCDPEX",53,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEX",54,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX",55,0)
 U IO
"RTN","RCDPEX",56,0)
 ;
"RTN","RCDPEX",57,0)
VPOUT ; Entrypoint for queued job
"RTN","RCDPEX",58,0)
 N Z,Z0,RCSTOP,RCPG,RCXM,RCXM1,RC,RCZ,RCTDAC,RCV5
"RTN","RCDPEX",59,0)
 K ^TMP($J,"RCRAW"),^TMP($J,"RCOUT")
"RTN","RCDPEX",60,0)
 S RCTDAC=RCTDA_",",RCV5=0
"RTN","RCDPEX",61,0)
 ;
"RTN","RCDPEX",62,0)
 D GETS^DIQ(344.5,RCTDAC,"*","IEN","RCZ")
"RTN","RCDPEX",63,0)
 D TXTDE(RCTDA,.RCZ,1,.RCXM,.RC)
"RTN","RCDPEX",64,0)
 ;
"RTN","RCDPEX",65,0)
 I $O(^RCY(344.5,RCTDA,"EX",0)) D
"RTN","RCDPEX",66,0)
 . S RC=RC+1,RCXM(RC)="**EXCEPTION MESSAGES**"
"RTN","RCDPEX",67,0)
 . D TXTDE(RCTDA,.RCZ,5,.RCXM,.RC)
"RTN","RCDPEX",68,0)
 ;
"RTN","RCDPEX",69,0)
 K ^TMP("RCSAVE",$J)
"RTN","RCDPEX",70,0)
 M ^TMP("RCSAVE",$J)=^RCY(344.5,RCTDA,2)
"RTN","RCDPEX",71,0)
 I +$P($G(^TMP("RCSAVE",$J,1,0)),U,16)>0 S RCV5=1
"RTN","RCDPEX",72,0)
 S Z=0 F  S Z=$O(^TMP("RCSAVE",$J,Z)) Q:'Z  I $P($G(^(Z,0)),U)["835" K ^(0) Q  ; Get rid of header node
"RTN","RCDPEX",73,0)
 D DISP^RCDPESR0("^TMP(""RCSAVE"",$J)","^TMP($J,""RCRAW"")",1,"^TMP($J,""RCOUT"")",75) ; Get formatted 'raw' data
"RTN","RCDPEX",74,0)
 K ^TMP("RCSAVE",$J)
"RTN","RCDPEX",75,0)
 I $G(RCRAW) D
"RTN","RCDPEX",76,0)
 . S RC=$O(^TMP($J,"RCOUT",""),-1)+1,^TMP($J,"RCOUT",RC)=" "
"RTN","RCDPEX",77,0)
 . S RC=RC+1,^TMP($J,"RCOUT",RC)="**RAW DATA**"
"RTN","RCDPEX",78,0)
 . S Z=0 F  S Z=$O(^RCY(344.5,RCTDA,2,Z)) Q:'Z  D
"RTN","RCDPEX",79,0)
 .. F Z0=1:80:$L($G(^RCY(344.5,RCTDA,2,Z,0))) S RC=RC+1,^TMP($J,"RCOUT",RC)=$E($G(^RCY(344.5,RCTDA,2,Z,0)),Z0,Z0+79)
"RTN","RCDPEX",80,0)
 ;
"RTN","RCDPEX",81,0)
 S (RCPG,RCSTOP,Z)=0
"RTN","RCDPEX",82,0)
 F  S Z=$O(RCXM(Z)) Q:'Z  S ^TMP($J,"RCOUT",Z-999)=RCXM(Z)
"RTN","RCDPEX",83,0)
 S Z=""
"RTN","RCDPEX",84,0)
 F  S Z=$O(^TMP($J,"RCOUT",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEX",85,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEX",86,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEX",87,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEX",88,0)
 .. D HDR(RCTDA,.RCPG)
"RTN","RCDPEX",89,0)
 . W !,$G(^TMP($J,"RCOUT",Z))
"RTN","RCDPEX",90,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEX",91,0)
 ;
"RTN","RCDPEX",92,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEX",93,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEX",94,0)
 ;
"RTN","RCDPEX",95,0)
VPQ K ^TMP($J,"RCRAW"),^TMP($J,"RCOUT")
"RTN","RCDPEX",96,0)
 S VALMBCK="R"
"RTN","RCDPEX",97,0)
 Q
"RTN","RCDPEX",98,0)
 ;
"RTN","RCDPEX",99,0)
SEL(RCDA,ONE) ; Select entry(s) from list
"RTN","RCDPEX",100,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEX",101,0)
 ;    RCDA(n)=ien of bill selected in file 344.5
"RTN","RCDPEX",102,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","RCDPEX",103,0)
 N RC
"RTN","RCDPEX",104,0)
 K RCDA
"RTN","RCDPEX",105,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","RCDPEX",106,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RC=$G(^TMP("RCDPEX-EOBDX",$J,RCDA)),RCDA(RCDA)=+$P(RC,U,2)
"RTN","RCDPEX",107,0)
 Q
"RTN","RCDPEX",108,0)
 ;
"RTN","RCDPEX",109,0)
 ;
"RTN","RCDPEX",110,0)
DEL ; Delete messages from messages list - file 344.5
"RTN","RCDPEX",111,0)
 N RCDA,RCOK,RCTDA,RCTDAC,RCTYP,RCU,RC0,DIR,RCT,RCE,RCDIQ,RCX,Z,X,Y,XMSUBJ,XMTO,XMBODY,XMDUZ,XMZ
"RTN","RCDPEX",112,0)
 D FULL^VALM1
"RTN","RCDPEX",113,0)
 S RCTDA=0
"RTN","RCDPEX",114,0)
 D SEL(.RCDA,1)
"RTN","RCDPEX",115,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX",116,0)
 I RCDA="" G DELQ
"RTN","RCDPEX",117,0)
 S RCTDA=+RCDA(RCDA),RCTDAC=RCTDA_","
"RTN","RCDPEX",118,0)
 S RCPAYTP=$$PAYTYP(RCTDA)
"RTN","RCDPEX",119,0)
 I RCPAYTP="ACH" W !!,"Deletion is not allowed.  The ERA has a payment method of ACH." D PAUSE^VALM1 Q
"RTN","RCDPEX",120,0)
 W !
"RTN","RCDPEX",121,0)
 S DIR(0)="YA",DIR("A",1)="This action will PERMANENTLY delete an EDI Lockbox message from your system",DIR("A",2)="A bulletin will be sent to report the deletion",DIR("A",3)=" "
"RTN","RCDPEX",122,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX",123,0)
 D ^DIR K DIR
"RTN","RCDPEX",124,0)
 G:Y'=1 DELQ
"RTN","RCDPEX",125,0)
 I '$$LOCK(RCTDA) G DELQ
"RTN","RCDPEX",126,0)
 S RC0=$G(^RCY(344.5,RCTDA,0))
"RTN","RCDPEX",127,0)
 ;
"RTN","RCDPEX",128,0)
 I $P(RC0,U,5) S RCOK=1 D  G:'RCOK DELQ
"RTN","RCDPEX",129,0)
 . N ZTSK
"RTN","RCDPEX",130,0)
 . S ZTSK=$P(RC0,U,5) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","RCDPEX",131,0)
 . I "12"[ZTSK(1) W *7,!,"This message is currently scheduled for update.  Task # is: ",$P(RC0,U,11) S RCOK="" D PAUSE^VALM1
"RTN","RCDPEX",132,0)
 ;
"RTN","RCDPEX",133,0)
 S DIR(0)="YA",DIR("A",1)=" ",DIR("A",2)="",$P(DIR("A",2),"*",54)="",DIR("A",3)="* This EDI Lockbox message is about to be PERMANENTLY deleted!! *",DIR("A",4)=DIR("A",2),DIR("A",5)=" "
"RTN","RCDPEX",134,0)
 S DIR("A")="ARE YOU STILL SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX",135,0)
 W ! D ^DIR W ! K DIR
"RTN","RCDPEX",136,0)
 I Y'=1 W !!,"Nothing deleted" D PAUSE^VALM1 G DELQ
"RTN","RCDPEX",137,0)
 ;
"RTN","RCDPEX",138,0)
 D GETS^DIQ(344.5,RCTDAC,"*","IEN","RCDIQ")
"RTN","RCDPEX",139,0)
 S RCE=0
"RTN","RCDPEX",140,0)
 D TXTDE(RCTDA,.RCDIQ,1,.RCX,.RCE)
"RTN","RCDPEX",141,0)
 S RCE=RCE+1,RCX(RCE)="RAW MESSAGE DATA:"
"RTN","RCDPEX",142,0)
 D TXTDE(RCTDA,.RCDIQ,2,.RCX,.RCE)
"RTN","RCDPEX",143,0)
 D DELMSG(RCTDA)
"RTN","RCDPEX",144,0)
 I $D(^RCY(344.5,RCTDA)) D  G DELQ
"RTN","RCDPEX",145,0)
 . W !,"Message not deleted - problem with delete" D PAUSE^VALM1
"RTN","RCDPEX",146,0)
 ;
"RTN","RCDPEX",147,0)
 I $P(RC0,U,2)["XFR",'$P(RC0,U,14) D
"RTN","RCDPEX",148,0)
 . S DIR(0)="YA"
"RTN","RCDPEX",149,0)
 . S DIR("A")="ARE YOU DELETING THIS BECAUSE THE EEOB DOES NOT BELONG TO YOUR SITE?: ",DIR("B")="YES",DIR("?")="IF YOU RESPOND YES TO THIS QUESTION, A REJECT MESSAGE WILL BE SENT BACK TO",DIR("?",1)=" THE SENDING SITE FOR THIS EEOB"
"RTN","RCDPEX",150,0)
 .  W ! D ^DIR K DIR
"RTN","RCDPEX",151,0)
 . Q:Y'=1
"RTN","RCDPEX",152,0)
 . D SENDACK^RCDPESR5(RCTDA,0) ; Send reject notice
"RTN","RCDPEX",153,0)
 S RCT(1)="Electronic EDI Lockbox message "_$P(RC0,U)_" has been deleted"
"RTN","RCDPEX",154,0)
 S RCT(2)=" "
"RTN","RCDPEX",155,0)
 S RCT(3)="DELETED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEX",156,0)
 S RCT(4)=" ",RCE=+$O(RCT(""),-1)
"RTN","RCDPEX",157,0)
 S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S RCE=RCE+1,RCT(RCE)=RCX(Z)
"RTN","RCDPEX",158,0)
 S RCE=RCE+1,RCT(RCE)=" "
"RTN","RCDPEX",159,0)
 S XMSUBJ="EDI LBOX MESSAGE DELETED",XMBODY="RCT",XMDUZ="",XMTO("G.RCDPE PAYMENTS")=""
"RTN","RCDPEX",160,0)
 N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEX",161,0)
 D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEX",162,0)
 ;
"RTN","RCDPEX",163,0)
 W !,"A bulletin has been sent to report this deletion",!
"RTN","RCDPEX",164,0)
 D PAUSE^VALM1
"RTN","RCDPEX",165,0)
 ;
"RTN","RCDPEX",166,0)
 D BLD^RCDPEX1
"RTN","RCDPEX",167,0)
DELQ L -^RCY(344.5,RCTDA,0)
"RTN","RCDPEX",168,0)
 S VALMBCK="R"
"RTN","RCDPEX",169,0)
 Q
"RTN","RCDPEX",170,0)
 ;
"RTN","RCDPEX",171,0)
DELMSG(RCTDA) ; Delete message from temporary message holding file 344.5
"RTN","RCDPEX",172,0)
 ;
"RTN","RCDPEX",173,0)
 N DIK,DA,Y S DIK="^RCY(344.5,",DA=RCTDA D ^DIK
"RTN","RCDPEX",174,0)
 Q
"RTN","RCDPEX",175,0)
 ;
"RTN","RCDPEX",176,0)
TASK(RCRTN,RCTDA) ; Schedule the task to update data base from message
"RTN","RCDPEX",177,0)
 ; RCRTN = routine to task
"RTN","RCDPEX",178,0)
 ; RCTDA = internal entry of message in file 344.5
"RTN","RCDPEX",179,0)
 ;
"RTN","RCDPEX",180,0)
 N ZTSK,ZTDESC,ZTIO,ZTDTH,ZTSAVE,DA,DR,DIE
"RTN","RCDPEX",181,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="UPDATE DATA BASE FROM EEOB EXCEPTION PROCESSING",ZTSAVE("RC*")="",ZTRTN=RCRTN
"RTN","RCDPEX",182,0)
 D ^%ZTLOAD
"RTN","RCDPEX",183,0)
 I $G(ZTSK),$G(^RCY(344.5,RCTDA,0)) D
"RTN","RCDPEX",184,0)
 . S DIE="^RCY(344.5,",DR=".05////"_ZTSK_";.04////1;.08////0",DA=RCTDA D ^DIE
"RTN","RCDPEX",185,0)
 Q $G(ZTSK)
"RTN","RCDPEX",186,0)
 ;
"RTN","RCDPEX",187,0)
LOCK(RCTDA) ; Attempt to lock message file entry RCTDA in file 344.5
"RTN","RCDPEX",188,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","RCDPEX",189,0)
 ;
"RTN","RCDPEX",190,0)
 N OK
"RTN","RCDPEX",191,0)
 S OK=1
"RTN","RCDPEX",192,0)
 L +^RCY(344.5,RCTDA,0):5
"RTN","RCDPEX",193,0)
 I '$T D
"RTN","RCDPEX",194,0)
 . I '$D(DIQUIET) W !,*7,"Another user is editing this entry ... please try again later" D PAUSE^VALM1
"RTN","RCDPEX",195,0)
 . S OK=0
"RTN","RCDPEX",196,0)
 Q OK
"RTN","RCDPEX",197,0)
 ;
"RTN","RCDPEX",198,0)
HDR(RCTDA,RCPG) ;Prints report heading
"RTN","RCDPEX",199,0)
 ; RCTDA = ien of file 344.5
"RTN","RCDPEX",200,0)
 ; RCPG = page # last printed
"RTN","RCDPEX",201,0)
 N Z
"RTN","RCDPEX",202,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEX",203,0)
 I 'RCPG D
"RTN","RCDPEX",204,0)
 . N RCX,RCZ
"RTN","RCDPEX",205,0)
 . D TXT0(RCTDA,.RCZ,.RCX,0) ; Get 0-node captioned fields
"RTN","RCDPEX",206,0)
 . S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S ^TMP($J,"RCHDR_EX",Z)=RCX(Z)
"RTN","RCDPEX",207,0)
 S RCPG=RCPG+1
"RTN","RCDPEX",208,0)
 W !,?15,"EDI LBOX - EEOB EXCEPTIONS - EEOB DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!
"RTN","RCDPEX",209,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCHDR_EX",Z)) Q:'Z  W !,$G(^(Z))
"RTN","RCDPEX",210,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEX",211,0)
 Q
"RTN","RCDPEX",212,0)
 ;
"RTN","RCDPEX",213,0)
ASK(RCSTOP) ; Ask to stop
"RTN","RCDPEX",214,0)
 ; RCSTOP: passed by ref, flag to stop processing
"RTN","RCDPEX",215,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEX",216,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEX",217,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEX",218,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEX",219,0)
 Q
"RTN","RCDPEX",220,0)
 ; ***
"RTN","RCDPEX",221,0)
 ; *** Entrypoints TXT* assume these parameter definitions ***
"RTN","RCDPEX",222,0)
 ; ***
"RTN","RCDPEX",223,0)
 ; FUNCTIONs returns RCXM1 and RCCT if passed by reference
"RTN","RCDPEX",224,0)
 ; RCTDA = ien, file 344.5
"RTN","RCDPEX",225,0)
 ; RCXM1 = the array returned with text, captioned
"RTN","RCDPEX",226,0)
 ; RCCT = # of lines already in array (optional)
"RTN","RCDPEX",227,0)
 ; RCDIQ = the array returned from GETS^DIQ
"RTN","RCDPEX",228,0)
 ; ***
"RTN","RCDPEX",229,0)
 ;
"RTN","RCDPEX",230,0)
TXT0(RCTDA,RCDIQ,RCXM1,RCCT) ; Append 0-node captioned data to array RCXM1
"RTN","RCDPEX",231,0)
 ; See above for parameter definitions
"RTN","RCDPEX",232,0)
 ;
"RTN","RCDPEX",233,0)
 N RCZ,RCTDAC,LINE,DAT,Z,Z0
"RTN","RCDPEX",234,0)
 S LINE="",RCCT=+$G(RCCT),RCTDAC=RCTDA_","
"RTN","RCDPEX",235,0)
 S Z=0 F  S Z=$O(RCDIQ(344.5,RCTDAC,Z)) Q:'Z!(Z'<1)  D
"RTN","RCDPEX",236,0)
 . S Z0=$$GET1^DID(344.5,Z,,"LABEL")
"RTN","RCDPEX",237,0)
 . S DAT=Z0_": "_$G(RCDIQ(344.5,RCTDAC,Z,"E"))
"RTN","RCDPEX",238,0)
 . I $L(DAT)>39 S:$L(LINE) RCCT=RCCT+1,RCXM1(RCCT)=LINE S RCCT=RCCT+1,RCXM1(RCCT)=DAT,LINE="" Q
"RTN","RCDPEX",239,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX",240,0)
 .. I $L(LINE)+$L(DAT)>75 S RCCT=RCCT+1,RCXM1(RCCT)=LINE,LINE=DAT Q
"RTN","RCDPEX",241,0)
 .. S LINE=LINE_"  "_DAT,RCCT=RCCT+1,RCXM1(RCCT)=LINE,LINE=""
"RTN","RCDPEX",242,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX",243,0)
 I $L(LINE) S RCCT=RCCT+1,RCXM1(RCCT)=LINE
"RTN","RCDPEX",244,0)
 S:RCCT RCCT=RCCT+1,RCXM1(RCCT)=" "
"RTN","RCDPEX",245,0)
 Q
"RTN","RCDPEX",246,0)
 ;
"RTN","RCDPEX",247,0)
TXTDE(RCTDA,RCDIQ,RCNODE,RCXM1,RCCT) ; Append display data to array RCXM1
"RTN","RCDPEX",248,0)
 ; See above for parameter definitions
"RTN","RCDPEX",249,0)
 ; RCNODE = the WP field # to return
"RTN","RCDPEX",250,0)
 ;
"RTN","RCDPEX",251,0)
 N RCCT1,LINE,Z,RCTDAC
"RTN","RCDPEX",252,0)
 S LINE="",RCCT=+$G(RCCT),RCCT1=RCCT
"RTN","RCDPEX",253,0)
 S RCTDAC=RCTDA_","
"RTN","RCDPEX",254,0)
 S Z=0 F  S Z=$O(RCDIQ(344.5,RCTDAC,RCNODE,Z)) Q:'Z  D
"RTN","RCDPEX",255,0)
 . S RCCT=RCCT+1,RCXM1(RCCT)=$G(RCDIQ(344.5,RCTDAC,RCNODE,Z))
"RTN","RCDPEX",256,0)
 S:RCCT'=RCCT1 RCCT=RCCT+1,RCXM1(RCCT)=" "
"RTN","RCDPEX",257,0)
 Q
"RTN","RCDPEX",258,0)
 ;
"RTN","RCDPEX",259,0)
PAYTYP(RCTDA) ;Find pay source - PRCA*4.5*298
"RTN","RCDPEX",260,0)
 N RCPT,X
"RTN","RCDPEX",261,0)
 S RCPT=""
"RTN","RCDPEX",262,0)
 S X=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPEX",263,0)
 I $P(X,U)="835ERA" S RCPT=$P(X,U,17)
"RTN","RCDPEX",264,0)
 Q RCPT
"RTN","RCDPEX1")
0^83^B18257259
"RTN","RCDPEX1",1,0)
RCDPEX1 ;ALB/TMK - ELECTRONIC EOB MESSAGE EXCEPTIONS PROCESS ;Aug 14, 2014@15:07:12
"RTN","RCDPEX1",2,0)
 ;;4.5;Accounts Receivable;**173,262,298**;Mar 20, 1995;Build 121
"RTN","RCDPEX1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX1",4,0)
 ;
"RTN","RCDPEX1",5,0)
EN ; Main entry point
"RTN","RCDPEX1",6,0)
 D DT^DICRW
"RTN","RCDPEX1",7,0)
 N XQORS,VALMEVL,RCFASTXT,RCDA,RCEXCTYP,RCINCEX,DIR,Y,X
"RTN","RCDPEX1",8,0)
 ; Ask for TRANSMISSION exceptions or DATA exceptions
"RTN","RCDPEX1",9,0)
 S DIR("A")="DO YOU WANT TO SEE (T)RANSMISSION OR (D)ATA EXCEPTIONS?: ",DIR("B")="T",DIR(0)="SAO^T:TRANSMISSION;D:DATA"
"RTN","RCDPEX1",10,0)
 S DIR("?",1)="TRANSMISSION EXCEPTIONS INCLUDE ANY PROBLEM ENCOUNTERED WHEN AN ERA/EEOB",DIR("?",2)="  IS RECEIVED AT THE SITE AND BEFORE IT IS STORED PERMANENTLY IN VISTA."
"RTN","RCDPEX1",11,0)
 S DIR("?",3)="  THIS INCLUDES PARTIAL MESSAGE RECEIPTS, EXTRACT PROBLEMS AND EEOBs THAT ",DIR("?",4)="  WERE TRANSFERRED IN FROM ANOTHER SITE."
"RTN","RCDPEX1",12,0)
 S DIR("?",5)="DATA EXCEPTIONS INCLUDE EEOB DETAIL RECORDS FOR SPECIFIC BILLS THAT CAN'T BE"
"RTN","RCDPEX1",13,0)
 S DIR("?",6)="  FULLY PROCESSED INTO THE VISTA SYSTEM.  THIS INCLUDES EEOB DETAIL FOR",DIR("?",7)="  CLAIMS THAT NEED TO BE TRANSFERRED TO ANOTHER SITE OR WHOSE DETAIL COULD",DIR("?")="  NOT BE STORED IN IB"
"RTN","RCDPEX1",14,0)
 D ^DIR K DIR
"RTN","RCDPEX1",15,0)
 I Y=""!(Y="^") Q
"RTN","RCDPEX1",16,0)
 S RCEXCTYP=Y
"RTN","RCDPEX1",17,0)
 I RCEXCTYP="D" D  ; Include exceptions for MEDICAL, PHARMACY or BOTH - PRCA*4.5*298 Filter question for medical, pharmacy or both
"RTN","RCDPEX1",18,0)
 . S DIR("A")="INCLUDE EXCEPTIONS FOR (M)EDICAL, (P)HARMACY, OR (B)OTH?: ",DIR("B")="B",DIR(0)="SAO^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPEX1",19,0)
 . S DIR("?",1)="INCLUDE EXCEPTIONS RISING FROM MEDICAL CLAIMS, PHARMACY CLAIMS OR BOTH",DIR("?",2)="  MEDICAL AND PHARMACY CLAIMS."
"RTN","RCDPEX1",20,0)
 . D ^DIR K DIR
"RTN","RCDPEX1",21,0)
 . S RCINCEX=Y
"RTN","RCDPEX1",22,0)
 I RCEXCTYP="D",(RCINCEX=""!(RCINCEX="^")) Q
"RTN","RCDPEX1",23,0)
 ; Transmission exceptions
"RTN","RCDPEX1",24,0)
 I RCEXCTYP="T" D EN^VALM("RCDPEX EOB EXCEPTION LIST")
"RTN","RCDPEX1",25,0)
 I RCEXCTYP="D" D EN^VALM("RCDPEX EOB_SUM EXCEPTION LIST")
"RTN","RCDPEX1",26,0)
 K RCFASTXT,RCDA
"RTN","RCDPEX1",27,0)
 Q
"RTN","RCDPEX1",28,0)
 ;
"RTN","RCDPEX1",29,0)
INIT ; -- set up initial variables
"RTN","RCDPEX1",30,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX1",31,0)
 D BLD
"RTN","RCDPEX1",32,0)
 Q
"RTN","RCDPEX1",33,0)
 ;
"RTN","RCDPEX1",34,0)
REBLD ; Set up formatted global
"RTN","RCDPEX1",35,0)
 ;
"RTN","RCDPEX1",36,0)
BLD ; -- build list of messages
"RTN","RCDPEX1",37,0)
 N DA,DR,RCSEQ,RCMSG,RCS,RCER,RCDPDATA,RC0,TOOSOON,X,Z
"RTN","RCDPEX1",38,0)
 K ^TMP("RCDPEX-EOB",$J),^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",39,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX1",40,0)
 ;
"RTN","RCDPEX1",41,0)
 ; Extract from 344.5
"RTN","RCDPEX1",42,0)
 F  S RCMSG=$O(^RCY(344.5,"AEXC",1,RCMSG)) Q:'RCMSG  S RC0=$G(^(RCMSG,0)) D
"RTN","RCDPEX1",43,0)
 . I ($P(RC0,U,3)\1)=DT S TOOSOON=0 D  Q:TOOSOON
"RTN","RCDPEX1",44,0)
 .. ; If partial msg, allow a day before it's an exception
"RTN","RCDPEX1",45,0)
 .. I $P(RC0,U,10)=2 Q
"RTN","RCDPEX1",46,0)
 . ;
"RTN","RCDPEX1",47,0)
 . ; -- add to list
"RTN","RCDPEX1",48,0)
 . ;Display message id, type, date recorded, exception, mail msg #
"RTN","RCDPEX1",49,0)
 . S RCSEQ=RCSEQ+1
"RTN","RCDPEX1",50,0)
 . S DR=".01:.03;.1;.11",DA=RCMSG D DIQ3445(DA,DR)
"RTN","RCDPEX1",51,0)
 . S X=""
"RTN","RCDPEX1",52,0)
 . S X=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCDPDATA(344.5,RCMSG,.01,"E")),"",1,26)
"RTN","RCDPEX1",53,0)
 . S X=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.5,RCMSG,.02,"I")),4,6),X,27,9)
"RTN","RCDPEX1",54,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.03,"E")),X,36,22)
"RTN","RCDPEX1",55,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.11,"E")),X,58,17)
"RTN","RCDPEX1",56,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",57,0)
 . S X=$J("",4)_"EXCEPTION: "_$G(RCDPDATA(344.5,RCMSG,.1,"E"))
"RTN","RCDPEX1",58,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",59,0)
 . S DR=1,DA=RCMSG D DIQ3445(DA,DR) ; Get display data
"RTN","RCDPEX1",60,0)
 . S Z=0 F  S Z=$O(RCDPDATA(344.5,RCMSG,1,Z)) Q:'Z  S X=$J("",6)_RCDPDATA(344.5,RCMSG,1,Z) D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",61,0)
 ;
"RTN","RCDPEX1",62,0)
 I '$D(^TMP("RCDPEX-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX-EOB",$J,1,0)=" ",^TMP("RCDPEX-EOB",$J,2,0)="   There Are No EEOB Exception Records On File"
"RTN","RCDPEX1",63,0)
 Q
"RTN","RCDPEX1",64,0)
 ;
"RTN","RCDPEX1",65,0)
FNL ; -- Clean up list
"RTN","RCDPEX1",66,0)
 K ^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",67,0)
 D CLEAN^VALM10
"RTN","RCDPEX1",68,0)
 K RCFASTXT
"RTN","RCDPEX1",69,0)
 Q
"RTN","RCDPEX1",70,0)
 ;
"RTN","RCDPEX1",71,0)
SET(X,FILE,RCMSG,RCSEQ) ; -- set arrays for EOB exception records
"RTN","RCDPEX1",72,0)
 ; X = the data to set into the global
"RTN","RCDPEX1",73,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX1",74,0)
 S ^TMP("RCDPEX-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX1",75,0)
 S ^TMP("RCDPEX-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_FILE
"RTN","RCDPEX1",76,0)
 Q
"RTN","RCDPEX1",77,0)
 ;
"RTN","RCDPEX1",78,0)
HDR ;
"RTN","RCDPEX1",79,0)
 S VALMHDR(1)=$J("",21)_"ERA/EEOB MESSAGES WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX1",80,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX1",81,0)
 Q
"RTN","RCDPEX1",82,0)
 ;
"RTN","RCDPEX1",83,0)
DIQ3445(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",84,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",85,0)
 K RCDPDATA(344.5)
"RTN","RCDPEX1",86,0)
 S DIQ(0)="EI",DIC="^RCY(344.5,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",87,0)
 Q
"RTN","RCDPEX1",88,0)
 ;
"RTN","RCDPEX1",89,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4
"RTN","RCDPEX1",90,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",91,0)
 K RCDPDATA(344.4)
"RTN","RCDPEX1",92,0)
 S DIQ(0)="EI",DIC="^RCY(344.4,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",93,0)
 Q
"RTN","RCDPEX1",94,0)
 ;
"RTN","RCDPEX2")
0^84^B22431438
"RTN","RCDPEX2",1,0)
RCDPEX2 ;ALB/TMK/KML/PJH - ELECTRONIC EOB DETAIL EXCEPTION MAIN LIST TEMPLATE ;Aug 14, 2014@15:07:21
"RTN","RCDPEX2",2,0)
 ;;4.5;Accounts Receivable;**173,269,298**;Mar 20, 1995;Build 121
"RTN","RCDPEX2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX2",4,0)
 ;
"RTN","RCDPEX2",5,0)
INIT ; -- set up initial variables
"RTN","RCDPEX2",6,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX2",7,0)
 D BLD
"RTN","RCDPEX2",8,0)
 Q
"RTN","RCDPEX2",9,0)
 ;
"RTN","RCDPEX2",10,0)
REBLD ; Set up formatted global
"RTN","RCDPEX2",11,0)
 ;
"RTN","RCDPEX2",12,0)
BLD ; -- build list of messages from file 344.4
"RTN","RCDPEX2",13,0)
 N RCBILL,RCSUB,RCSEQ,RCMSG1,RCEXC,RCS,RCER,RCDPDATA,RCX,RCX1,RC0,RCDECME,DA,X,DR,Y
"RTN","RCDPEX2",14,0)
 K ^TMP("RCDPEX_SUM-EOB",$J),^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",15,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX2",16,0)
 ;
"RTN","RCDPEX2",17,0)
 ; Extract from 344.4
"RTN","RCDPEX2",18,0)
 S RCER=0
"RTN","RCDPEX2",19,0)
 F  S RCER=$O(^RCY(344.4,"AEXC",RCER)) Q:'RCER  F  S RCMSG=$O(^RCY(344.4,"AEXC",RCER,RCMSG)) Q:'RCMSG  D
"RTN","RCDPEX2",20,0)
 . ;Extract trace #, ins co name/id, ERA Date
"RTN","RCDPEX2",21,0)
 . S RCSUB=RCMSG_",",DR=".02:.06",DA=RCMSG K DA(1) D DIQ3444(DA,DR)
"RTN","RCDPEX2",22,0)
 . ; HIPPA 5010 - display of the Trace # on a separate line due to the increased length from 30 to 50 characters   
"RTN","RCDPEX2",23,0)
 . S RCX("TRACE")=$G(RCDPDATA(344.4,RCSUB,.02,"E"))
"RTN","RCDPEX2",24,0)
 . S RCX("INCOID")=$G(RCDPDATA(344.4,RCSUB,.03,"E"))
"RTN","RCDPEX2",25,0)
 . S RCX("PAYFROM")=$G(RCDPDATA(344.4,RCSUB,.06,"E"))
"RTN","RCDPEX2",26,0)
 . S RCS=0 F  S RCS=$O(^RCY(344.4,"AEXC",RCER,RCMSG,RCS)) Q:'RCS  S RC0=$G(^RCY(344.4,RCMSG,1,RCS,0)) D
"RTN","RCDPEX2",27,0)
 .. S DA(1)=RCMSG,DA=RCS,RCSUB=DA_","_DA(1)_","
"RTN","RCDPEX2",28,0)
 .. S DR=".01;.02;.03;.05;.07;.08;.1;.11;.12;.15;.24;9.01",DA=RCS D DIQ3444(.DA,DR)
"RTN","RCDPEX2",29,0)
 .. S RCDECME=$G(RCDPDATA(344.41,RCSUB,.24,"E")) ;PRCA*4.5*298 Filter question for medical, pharmacy or both
"RTN","RCDPEX2",30,0)
 .. I +RCDECME,RCINCEX="M" Q
"RTN","RCDPEX2",31,0)
 .. I 'RCDECME,RCINCEX="P" Q
"RTN","RCDPEX2",32,0)
 .. S RCX1=$$SETSTR^VALM1($E(RCX("PAYFROM"),1,25)_"/"_$E(RCX("INCOID"),1,20),"",9,78)
"RTN","RCDPEX2",33,0)
 .. S RCSEQ=RCSEQ+1
"RTN","RCDPEX2",34,0)
 .. S RCX=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCX("TRACE")),"",1,80)
"RTN","RCDPEX2",35,0)
 .. S RCX=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($G(RCDPDATA(344.4,RCMSG_",",.04,"I")),2),RCX,70,10)
"RTN","RCDPEX2",36,0)
 .. D SET(RCX,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",37,0)
 .. D SET(RCX1,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",38,0)
 .. S X=$$SETSTR^VALM1($J("",6)_"Seq #: "_$G(RCDPDATA(344.41,RCSUB,.01,"E")),"",1,17)
"RTN","RCDPEX2",39,0)
 .. S RCBILL=$S($G(RCDPDATA(344.41,RCSUB,.02,"E"))'="":RCDPDATA(344.41,RCSUB,.02,"E"),1:"*"_$G(RCDPDATA(344.41,RCSUB,.05,"E")))
"RTN","RCDPEX2",40,0)
 .. S X=$$SETSTR^VALM1(" Bill: "_RCBILL,X,18,20)
"RTN","RCDPEX2",41,0)
 .. S X=$$SETSTR^VALM1(" Pt: "_$G(RCDPDATA(344.41,RCSUB,.15,"E")),X,38,25)
"RTN","RCDPEX2",42,0)
 .. S X=$$SETSTR^VALM1(" Pd: "_$J(+$G(RCDPDATA(344.41,RCSUB,.03,"E")),"",2),X,63,17)
"RTN","RCDPEX2",43,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",44,0)
 .. ;
"RTN","RCDPEX2",45,0)
 .. I +RCDECME D  ;PRCA*4.5*298 Display pharmacy data when ECME number is present
"RTN","RCDPEX2",46,0)
 ... S X=$$SETSTR^VALM1($J("",6)_"ECME #: "_$G(RCDPDATA(344.41,RCSUB,.24,"E")),X,1,28)
"RTN","RCDPEX2",47,0)
 ... N RCOMMNT,RCRLSDT  ; comment & release date
"RTN","RCDPEX2",48,0)
 ... ; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX2",49,0)
 ... S RCRLSDT=$$RXRLDT^PSOBPSUT($G(RCDPDATA(344.41,RCSUB,.24,"E")))   ; get release date
"RTN","RCDPEX2",50,0)
 ... S X=$$SETSTR^VALM1(" Release Date: "_$$FMTE^XLFDT(RCRLSDT),X,29,51)
"RTN","RCDPEX2",51,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",52,0)
 ... S RCOMMNT=$G(RCDPDATA(344.41,RCSUB,9.01,"E"))  ; Rx comment
"RTN","RCDPEX2",53,0)
 ... S X=$$SETSTR^VALM1("      Comment: "_RCOMMNT,X,1,80)
"RTN","RCDPEX2",54,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",55,0)
 .. ;
"RTN","RCDPEX2",56,0)
 .. I $P(RC0,U,11) D
"RTN","RCDPEX2",57,0)
 ... S X=$J("",10)_"Transferred To: "_$G(RCDPDATA(344.41,RCSUB,.11,"E"))
"RTN","RCDPEX2",58,0)
 ... S X=$$SETSTR^VALM1("  On: "_$$FMTE^XLFDT($G(RCDPDATA(344.41,RCSUB,.12,"I")),2),X,$L(X)+1,25)
"RTN","RCDPEX2",59,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",60,0)
 .. S RCEXC=$S($G(RCDPDATA(344.41,RCSUB,.07,"I"))=99:$S($G(RCDPDATA(344.41,RCSUB,.08,"E"))'="":RCDPDATA(344.41,RCSUB,.08,"E"),1:"UNKNOWN"),1:$G(RCDPDATA(344.41,RCSUB,.07,"E")))
"RTN","RCDPEX2",61,0)
 .. ; PRCA*4.5*298 Remove comment " (TRANSFER NEEDED IF NOT YOURS)"
"RTN","RCDPEX2",62,0)
 .. S X=$J("",10)_"**Exception: "_RCEXC_$S('$P(RC0,U,11):"",$P(RC0,U,7)=1:$S($P(RC0,U,10)=0:" (TRANSFER REJECTED)",$P(RC0,U,16):" (TRANSFER ACKNOWLEDGED)",1:" (TRANSFER NOT ACKNOWLEDGED)"),1:"")
"RTN","RCDPEX2",63,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",64,0)
 ;
"RTN","RCDPEX2",65,0)
 I '$D(^TMP("RCDPEX_SUM-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX_SUM-EOB",$J,1,0)=" ",^TMP("RCDPEX_SUM-EOB",$J,2,0)="   There Are No EEOB Detail Exceptions On File"
"RTN","RCDPEX2",66,0)
 Q
"RTN","RCDPEX2",67,0)
 ;
"RTN","RCDPEX2",68,0)
FNL ; -- Clean up list
"RTN","RCDPEX2",69,0)
 K ^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",70,0)
 D CLEAN^VALM10
"RTN","RCDPEX2",71,0)
 K RCFASTXT
"RTN","RCDPEX2",72,0)
 Q
"RTN","RCDPEX2",73,0)
 ;
"RTN","RCDPEX2",74,0)
SET(X,RCSEQ,RCMSG,RCS) ; -- set arrays for EOB exception records
"RTN","RCDPEX2",75,0)
 ; X = the data to set into the global
"RTN","RCDPEX2",76,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX_SUM-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX2",77,0)
 S ^TMP("RCDPEX_SUM-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX2",78,0)
 S ^TMP("RCDPEX_SUM-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_RCS
"RTN","RCDPEX2",79,0)
 Q
"RTN","RCDPEX2",80,0)
 ;
"RTN","RCDPEX2",81,0)
HDR ;
"RTN","RCDPEX2",82,0)
 S VALMHDR(1)=$J("",19)_"EEOB DETAIL DATA WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX2",83,0)
 ;HIPPA 5010 - display of the following headers on a separate line due to the increased length of Trace # from 30 to 50 characters
"RTN","RCDPEX2",84,0)
 S VALMHDR(2)="  #   Trace #"_$J("",58)_"EOB Date"
"RTN","RCDPEX2",85,0)
 Q
"RTN","RCDPEX2",86,0)
 ;
"RTN","RCDPEX2",87,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4/344.41
"RTN","RCDPEX2",88,0)
 N %I,D0,DIC,DIQ,DIQ2,YY,FILE
"RTN","RCDPEX2",89,0)
 S FILE=$S($D(DA(1)):344.41,1:344.4)
"RTN","RCDPEX2",90,0)
 K RCDPDATA(FILE)
"RTN","RCDPEX2",91,0)
 D GETS^DIQ(FILE,DA_","_$S($G(DA(1)):DA(1)_",",1:""),DR,"EI","RCDPDATA")
"RTN","RCDPEX2",92,0)
 Q
"RTN","RCDPEX2",93,0)
 ;
"RTN","RCDPEX2",94,0)
GETECME(RCSUB) ;DIQ call to get ECME number
"RTN","RCDPEX2",95,0)
 N IENS
"RTN","RCDPEX2",96,0)
 S IENS="1,1,"_RCSUB
"RTN","RCDPEX2",97,0)
 Q $$GET1^DIQ(344.41,IENS,.24)
"RTN","RCDPEX31")
0^85^B40819762
"RTN","RCDPEX31",1,0)
RCDPEX31 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Jun 11, 2014@15:50:59
"RTN","RCDPEX31",2,0)
 ;;4.5;Accounts Receivable;**173,208,298**;Mar 20, 1995;Build 121
"RTN","RCDPEX31",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX31",4,0)
 ;
"RTN","RCDPEX31",5,0)
UPD ; Try to update the IB EOB file from exception in 344.41
"RTN","RCDPEX31",6,0)
 N RCDA,RCTDA,RCTDA1,RCWHY,Z,DA,DIE,DR
"RTN","RCDPEX31",7,0)
 D FULL^VALM1
"RTN","RCDPEX31",8,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",9,0)
 S RCDA=$O(RCDA(0)) G:'RCDA UPDQ
"RTN","RCDPEX31",10,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=+$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",11,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G UPDQ
"RTN","RCDPEX31",12,0)
 I $P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)'=2 D  G UPDQ
"RTN","RCDPEX31",13,0)
 . W !,"EEOB cannot be filed in IB"_$S($P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)=1:" - the bill # is invalid",1:"")
"RTN","RCDPEX31",14,0)
 . D PAUSE^VALM1
"RTN","RCDPEX31",15,0)
 I RCTDA,RCTDA1 D UPDEOB^RCDPESR2(RCTDA_";"_RCTDA1,4)
"RTN","RCDPEX31",16,0)
 S Z=$P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,2)
"RTN","RCDPEX31",17,0)
 I Z D  ; Update file 344.41 record
"RTN","RCDPEX31",18,0)
 . S DA(1)=RCTDA,DA=RCTDA1,DR=".07///@;.13////1;.02////"_Z,DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",19,0)
 W !,"EEOB DETAIL UPDATE ",$S(Z:"WAS SUCCESSFUL",1:"ENCOUNTERED ERRORS")
"RTN","RCDPEX31",20,0)
 S RCWHY(1)="Update IB with EEOB detail",RCWHY(2)="Update EEOB detail was "_$S('Z:"NOT",1:"")_" successful"
"RTN","RCDPEX31",21,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",22,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",23,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",24,0)
 ;
"RTN","RCDPEX31",25,0)
UPDQ S VALMBCK="R"
"RTN","RCDPEX31",26,0)
 Q
"RTN","RCDPEX31",27,0)
 ;
"RTN","RCDPEX31",28,0)
DEL ; Delete exception conditions from EOB detail list - file 344.4
"RTN","RCDPEX31",29,0)
 N DIR,DA,DIE,DR,DTOUT,DUOUT,RC0,RC00,RCDA,RCDIQ,RCDIQ1,RCE,RCOK,RCT,RCTDA,RCTDA1,RCWHY,RCWHYTXT,RCX,X,Y,Z
"RTN","RCDPEX31",30,0)
 D FULL^VALM1
"RTN","RCDPEX31",31,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",32,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX31",33,0)
 I RCDA="" G DELQ
"RTN","RCDPEX31",34,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",35,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G DELQ
"RTN","RCDPEX31",36,0)
 W !
"RTN","RCDPEX31",37,0)
 S DIR(0)="YA",DIR("A",1)="This action will mark this EEOB detail record so it no longer appears as an",DIR("A",2)="exception.  A MailMan message will be sent to report this action.",DIR("A",3)=" "
"RTN","RCDPEX31",38,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX31",39,0)
 D ^DIR K DIR
"RTN","RCDPEX31",40,0)
 G:Y'=1 DELQ
"RTN","RCDPEX31",41,0)
 S DIR(0)="FA;3:60",DIR("A")="ENTER A REASON FOR THIS ACTION: ",DIR("?",1)="Enter the reason why this EEOB exception is being removed from the",DIR("?")=" exception list (3-60 characters are REQUIRED)"
"RTN","RCDPEX31",42,0)
 D ^DIR K DIR
"RTN","RCDPEX31",43,0)
 I $D(DUOUT)!$D(DTOUT) G DELQ
"RTN","RCDPEX31",44,0)
 S RCWHY(1)="Removal of EEOB detail entry from the exception list",RCWHY(2)="  Reason Entered: "_Y,RCWHYTXT=Y
"RTN","RCDPEX31",45,0)
 S RC0=$G(^RCY(344.4,RCTDA,0)),RC00=$G(^(1,RCTDA1,0))
"RTN","RCDPEX31",46,0)
 ;
"RTN","RCDPEX31",47,0)
 D GETS^DIQ(344.4,RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPEX31",48,0)
 D GETS^DIQ(344.41,RCTDA1_","_RCTDA_",","*","IEN","RCDIQ1")
"RTN","RCDPEX31",49,0)
 S RCE=0
"RTN","RCDPEX31",50,0)
 D TXT0(RCTDA,.RCDIQ,.RCX,.RCE)
"RTN","RCDPEX31",51,0)
 S RCE=RCE+1,RCX(RCE)="RAW MESSAGE DATA:"
"RTN","RCDPEX31",52,0)
 D TXT00(RCTDA,RCTDA1,.RCDIQ1,.RCX,.RCE)
"RTN","RCDPEX31",53,0)
 S DA=RCTDA1,DA(1)=RCTDA,DR=".07///@;.13////0",DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",54,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",55,0)
 ;
"RTN","RCDPEX31",56,0)
 S RCT(1)="The electronic EEOB detail for Trace #: "_$P(RC0,U,2)_" and Seq #"_$P(RC00,U),RCT(2)=" is no longer flagged for an exception condition"
"RTN","RCDPEX31",57,0)
 S RCT(3)="PAYMENT FROM: "_$P(RC0,U,6)_" on "_$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEX31",58,0)
 S RCT(4)=" "
"RTN","RCDPEX31",59,0)
 S RCT(5)="REASON: "_RCWHYTXT
"RTN","RCDPEX31",60,0)
 S RCT(6)="ACTION PERFORMED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEX31",61,0)
 S RCT(7)=" ",RCE=+$O(RCT(""),-1)
"RTN","RCDPEX31",62,0)
 S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S RCE=RCE+1,RCT(RCE)=RCX(Z)
"RTN","RCDPEX31",63,0)
 S RCE=RCE+1,RCT(RCE)=" "
"RTN","RCDPEX31",64,0)
 D  ; send MailMan message
"RTN","RCDPEX31",65,0)
 .N XMBODY,XMINSTR,XMSUBJ,XMZ
"RTN","RCDPEX31",66,0)
 .S XMSUBJ="EDI LBOX EEOB DETAIL EXCEPTION REMOVED",XMBODY="RCT",XMTO("G.RCDPE PAYMENTS")="",XMTO(DUZ)="",XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEX31",67,0)
 .D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","RCDPEX31",68,0)
 ;
"RTN","RCDPEX31",69,0)
 W !,"A MailMan message has been sent to report this action.",!
"RTN","RCDPEX31",70,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",71,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",72,0)
 ;
"RTN","RCDPEX31",73,0)
DELQ I $G(RCTDA),$G(RCTDA1) L -^RCY(344.4,RCTDA,1,RCTDA1,0)
"RTN","RCDPEX31",74,0)
 S VALMBCK="R"
"RTN","RCDPEX31",75,0)
 Q
"RTN","RCDPEX31",76,0)
 ;
"RTN","RCDPEX31",77,0)
TXT0(RCTDA,RCDIQ,RCXM1,RC) ; Append 0-node captioned data to array RCXM1
"RTN","RCDPEX31",78,0)
 ;
"RTN","RCDPEX31",79,0)
 N LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",80,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",81,0)
 S RC=RC+1,RCXM1(RC)="  **ERA SUMMARY DATA**"
"RTN","RCDPEX31",82,0)
 S Z=0 F  S Z=$O(RCDIQ(344.4,RCTDA_",",Z)) Q:'Z  D   ;prca*4.5*298  need to get additional fields for display
"RTN","RCDPEX31",83,0)
 . I $G(RCDIQ(344.4,RCTDA_",",Z,"E"))="" Q
"RTN","RCDPEX31",84,0)
 . S Z0=$$GET1^DID(344.4,Z,,"LABEL")
"RTN","RCDPEX31",85,0)
 . S DAT=Z0_": "_$G(RCDIQ(344.4,RCTDA_",",Z,"E"))
"RTN","RCDPEX31",86,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",87,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",88,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",89,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",90,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",91,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",92,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",93,0)
 Q
"RTN","RCDPEX31",94,0)
 ;
"RTN","RCDPEX31",95,0)
TXT00(RCTDA,RCTDA1,RCDIQ1,RCXM1,RC) ; Extract 0-node data for file 344.41
"RTN","RCDPEX31",96,0)
 ;
"RTN","RCDPEX31",97,0)
 N RCT,LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",98,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",99,0)
 S RC=RC+1,RCXM1(RC)="  **EEOB DETAIL DATA**",RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",100,0)
 S Z=0 F  S Z=$O(RCDIQ1(344.41,RCT,Z)) Q:'Z  D   ;prca*4.5*298  need to get additional fields for display
"RTN","RCDPEX31",101,0)
 . I (Z'=.25),$G(RCDIQ1(344.41,RCT,Z,"E"))="" Q   ;prca*4.5*298  even if RECEIPT # (.25) is null, display the label
"RTN","RCDPEX31",102,0)
 . S Z0=$$GET1^DID(344.41,Z,,"LABEL")
"RTN","RCDPEX31",103,0)
 . S DAT=Z0_": "_$G(RCDIQ1(344.41,RCT,Z,"E"))
"RTN","RCDPEX31",104,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",105,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",106,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",107,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",108,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",109,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",110,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",111,0)
 Q
"RTN","RCDPEX31",112,0)
 ;
"RTN","RCDPEX31",113,0)
TXT2(RCTDA,RCTDA1,RCDIQ2,RCXM1,RC) ; Extract all data for file 344.42
"RTN","RCDPEX31",114,0)
 ;
"RTN","RCDPEX31",115,0)
 N RCT,LINE,DAT,Z,Z0
"RTN","RCDPEX31",116,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",117,0)
 S RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",118,0)
 S Z=0 F  S Z=$O(RCDIQ2(344.42,RCT,Z)) Q:'Z  D
"RTN","RCDPEX31",119,0)
 . I $G(RCDIQ2(344.42,RCT,Z,"E"))="" Q
"RTN","RCDPEX31",120,0)
 . S Z0=$$GET1^DID(344.42,Z,,"LABEL")
"RTN","RCDPEX31",121,0)
 . S DAT=Z0_": "_$G(RCDIQ2(344.42,RCT,Z,"E"))
"RTN","RCDPEX31",122,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",123,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",124,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",125,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",126,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",127,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",128,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",129,0)
 Q
"RTN","RCDPEX31",130,0)
 ;
"RTN","RCDPEX31",131,0)
LOCK(RCTDA,RCTDA1,RCSHH) ; Attempt to lock file entry in file 344.41
"RTN","RCDPEX31",132,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","RCDPEX31",133,0)
 ; RCSHH = 1 if there should be no direct writes
"RTN","RCDPEX31",134,0)
 ;
"RTN","RCDPEX31",135,0)
 N OK
"RTN","RCDPEX31",136,0)
 S OK=1
"RTN","RCDPEX31",137,0)
 L +^RCY(344.4,RCTDA,1,RCTDA1,0):5
"RTN","RCDPEX31",138,0)
 I '$T D
"RTN","RCDPEX31",139,0)
 . I '$D(DIQUIET),'$G(RCSHH) W !,*7,"Another user is editing this entry ... please try again later" D PAUSE^VALM1
"RTN","RCDPEX31",140,0)
 . S OK=0
"RTN","RCDPEX31",141,0)
 Q OK
"RTN","RCDPEX31",142,0)
 ;
"RTN","RCDPEX31",143,0)
STORACT(RCTDA,RCTDA1,RCWHY) ; Store the detail for the action taken for
"RTN","RCDPEX31",144,0)
 ; the exception record at ^RCY(344.4,RCTDA,1,RCTDA,0)
"RTN","RCDPEX31",145,0)
 ; RCWHY(#) = lines containing the reason/explanation for the action
"RTN","RCDPEX31",146,0)
 ;   RCWHY(1) should contain the description of the action taken
"RTN","RCDPEX31",147,0)
 ;            It will be appended to the first line of the message after
"RTN","RCDPEX31",148,0)
 ;            the date and user who made the change.
"RTN","RCDPEX31",149,0)
 ;
"RTN","RCDPEX31",150,0)
 N RCDA,RCTXT,RC,Z
"RTN","RCDPEX31",151,0)
 S RCDA(1)=RCTDA,RCDA=RCTDA1
"RTN","RCDPEX31",152,0)
 S RCTXT(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$P($G(^VA(200,+DUZ,0)),U)_" "_$G(RCWHY(1))
"RTN","RCDPEX31",153,0)
 S (RC,Z)=1
"RTN","RCDPEX31",154,0)
 F  S Z=$O(RCWHY(Z)) Q:'Z  S RC=RC+1,RCTXT(RC)=" "_RCWHY(Z)
"RTN","RCDPEX31",155,0)
 D WP^DIE(344.41,$$IENS^DILF(.RCDA),2,"A","RCTXT")
"RTN","RCDPEX31",156,0)
 Q
"RTN","RCDPEX31",157,0)
 ;
"RTN","RCDPEX32")
0^86^B48567496
"RTN","RCDPEX32",1,0)
RCDPEX32 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Aug 14, 2014@16:27:32
"RTN","RCDPEX32",2,0)
 ;;4.5;Accounts Receivable;**173,249,298**;Mar 20, 1995;Build 121
"RTN","RCDPEX32",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX32",4,0)
 ;
"RTN","RCDPEX32",5,0)
EDITNUM ; Edit invalid claim # to valid, refile EOB
"RTN","RCDPEX32",6,0)
 N RC,RC0,RCDA,RCXDA,RCXDA1,RCSAVE,RCEOB,RCWARN,Q,Q0,DA,DR,DIE,DIC,DIR,DTOUT,DIRUT,X,Y,RCBILL,RCCHG,RCSUSP,RCQUIT,RCDONE
"RTN","RCDPEX32",7,0)
 D FULL^VALM1
"RTN","RCDPEX32",8,0)
 D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",9,0)
 G:'$O(RCDA(0)) EDITNQ
"RTN","RCDPEX32",10,0)
 ;
"RTN","RCDPEX32",11,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA1,1,RCXDA,0)
"RTN","RCDPEX32",12,0)
 . S RCXDA1=+RCDA(RC),RCXDA=+$P(RCDA(RC),U,2),RCSAVE=""
"RTN","RCDPEX32",13,0)
 . I '$$LOCK^RCDPEX31(RCXDA1,RCXDA,1) D  Q
"RTN","RCDPEX32",14,0)
 .. S DIR(0)="EA",DIR("A",1)="**Selection #"_RC_" is being edited by another user - ... please try again later",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",15,0)
 . S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX32",16,0)
 . I $P(RC0,U,5)="" D  Q
"RTN","RCDPEX32",17,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the bill # is not invalid",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",18,0)
 . I $P(RC0,U,9) D  Q
"RTN","RCDPEX32",19,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the claim has already",DIR("A")="been transferred to another site - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEX32",20,0)
 . ;
"RTN","RCDPEX32",21,0)
 . I $D(^RCY(344.49,RCXDA1)) D
"RTN","RCDPEX32",22,0)
 .. N X
"RTN","RCDPEX32",23,0)
 .. S X=$G(^RCY(344,+$P($G(^RCY(344.49,RCXDA1,0)),U,2),0))
"RTN","RCDPEX32",24,0)
 .. W !!,*7,"Warning: EEOB Worklist entry #"_RCXDA1_$S($P(X,U)'="":" and receipt "_$P(X,U),1:"")_" exist for this EEOB"
"RTN","RCDPEX32",25,0)
 .. I X="" W !,"You should refresh the worklist entry to include the new claim #",!," before creating the receipt",!
"RTN","RCDPEX32",26,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,8) D
"RTN","RCDPEX32",27,0)
 .. W !,"Since the receipt for this EEOB ("_$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U)_") already exists"
"RTN","RCDPEX32",28,0)
 .. I '$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U,14) W !," and is closed, you will need to use link payment to apply the payment",!," to the correct account",! Q
"RTN","RCDPEX32",29,0)
 .. W !," you should edit the receipt and change the claim # so it posts to the",!," correct account",!
"RTN","RCDPEX32",30,0)
 . ;
"RTN","RCDPEX32",31,0)
 . I $P(RC0,U,17)="" S RCSAVE=$P(RC0,U,5)
"RTN","RCDPEX32",32,0)
 . W !,"Selection #: "_RC_$J("",5)_$P(RC0,U,5)
"RTN","RCDPEX32",33,0)
 . S (RCQUIT,RCDONE)=0
"RTN","RCDPEX32",34,0)
 . F  D  Q:RCQUIT!RCDONE
"RTN","RCDPEX32",35,0)
 .. K DIR
"RTN","RCDPEX32",36,0)
 .. S DIR("?",1)="Answer with ACCOUNTS RECEIVABLE BILL NO., or PATIENT, or DEBTOR, or"
"RTN","RCDPEX32",37,0)
 .. S DIR("?")="    TOP REFUND STATUS, or FMS TRANSMISSION DATE"
"RTN","RCDPEX32",38,0)
 .. S DIR(0)="FAO^1:15",DIR("A")="Select A/R Bill this EEOB is actually paying on: "
"RTN","RCDPEX32",39,0)
 .. D ^DIR I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",40,0)
 .. S DIC="^PRCA(430,",DIC(0)="EM",DIC("S")="I $D(^DGCR(399,+Y,0))" W ! D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPEX32",41,0)
 .. S RCSUSP=X
"RTN","RCDPEX32",42,0)
 .. I '(Y>0) D  Q:RCQUIT
"RTN","RCDPEX32",43,0)
 ... S DIR("A")="   THIS CLAIM WAS NOT FOUND IN YOUR AR.  DO YOU WANT TO CONTINUE?: "
"RTN","RCDPEX32",44,0)
 ... S DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR W ! I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",45,0)
 ... I Y=1 S RCBILL=0,RCBILL(1)=RCSUSP,RCWARN=0,RCDONE=1
"RTN","RCDPEX32",46,0)
 .. E  D
"RTN","RCDPEX32",47,0)
 ... S RCBILL=+Y,RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U),RCWARN=0,RCDONE=1
"RTN","RCDPEX32",48,0)
 . Q:RCQUIT
"RTN","RCDPEX32",49,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,14) S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THE RECEIPT FOR THIS EEOB HAS ALREADY BEEN POSTED."
"RTN","RCDPEX32",50,0)
 . I RCBILL>0,$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILL,0)),U,8),0)),U,3)'=102 S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THIS IS NOT AN ACTIVE ACCOUNTS RECEIVABLE."
"RTN","RCDPEX32",51,0)
 . I RCWARN>0 D  I Y'=1 Q
"RTN","RCDPEX32",52,0)
 .. S DIR("A",1)="** WARNING"_$S(RCWARN>1:"S",1:"")_":"
"RTN","RCDPEX32",53,0)
 .. S DIR("A",RCWARN+2)=" "
"RTN","RCDPEX32",54,0)
 .. S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO FILE THIS EEOB FOR CLAIM #: "_RCBILL(1)_"?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX32",55,0)
 .. ;
"RTN","RCDPEX32",56,0)
 . ; File EOB for new claim #
"RTN","RCDPEX32",57,0)
 . K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX32",58,0)
 . S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX32",59,0)
 .. I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX32",60,0)
 .. I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX32",61,0)
 .. S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX32",62,0)
 . S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX32",63,0)
 . S RCEOB=0 I RCBILL>0 S RCEOB=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"",1)",RCBILL) ; IA 4042
"RTN","RCDPEX32",64,0)
 . K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX32",65,0)
 . I RCEOB D  Q
"RTN","RCDPEX32",66,0)
 .. N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX32",67,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",68,0)
 .. S RCCHG=1,DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",69,0)
 .. S DIR(0)="E"
"RTN","RCDPEX32",70,0)
 .. S DIR("A",1)="EEOB detail is already on file for "_RCBILL(1)_" - Exception removed",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",71,0)
 . ;
"RTN","RCDPEX32",72,0)
 . ; Add stub rec to 361.1 if not there
"RTN","RCDPEX32",73,0)
 . I RCBILL>0 S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX32",74,0)
 . ;
"RTN","RCDPEX32",75,0)
 . I RCEOB<0 D  Q
"RTN","RCDPEX32",76,0)
 .. N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX32",77,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",78,0)
 .. S DIR("A")="EA",DIR("A",1)="Error - EEOB detail not added to IB for bill "_RCBILL(1),DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",79,0)
 . ;
"RTN","RCDPEX32",80,0)
 . ; Update EOB in file 361.1
"RTN","RCDPEX32",81,0)
 . ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX32",82,0)
 . I RCEOB>0 D
"RTN","RCDPEX32",83,0)
 .. D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX32",84,0)
 .. ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX32",85,0)
 .. I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX32",86,0)
 ... D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX32",87,0)
 . ;
"RTN","RCDPEX32",88,0)
 . S RCCHG=1
"RTN","RCDPEX32",89,0)
 . N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX32",90,0)
 . D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",91,0)
 . S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX32",92,0)
 . D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",93,0)
 . S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX32",94,0)
 . S DIR("A",1)="EEOB Filed. "_$S(RCBILL>0:"Its detail may be viewed using Third Party Joint Inquiry.",1:"")
"RTN","RCDPEX32",95,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA"
"RTN","RCDPEX32",96,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEX32",97,0)
 . S VALMBG=1
"RTN","RCDPEX32",98,0)
 ;
"RTN","RCDPEX32",99,0)
EDITNQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX32",100,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",101,0)
 S VALMBCK="R"
"RTN","RCDPEX32",102,0)
 Q
"RTN","RCDPEX32",103,0)
 ;
"RTN","RCDPEX32",104,0)
CHGED(DA,RCEOB,RCSAVE,RCBILL) ;  Update Invalid Bill # for EOB
"RTN","RCDPEX32",105,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX32",106,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX32",107,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX32",108,0)
 ; RCBILL = Array containing Bill Information
"RTN","RCDPEX32",109,0)
 N DIE,DR,X,Y,INVBILL
"RTN","RCDPEX32",110,0)
 S INVBILL="@" I +$G(RCBILL)=0 S INVBILL=$G(RCBILL(1))
"RTN","RCDPEX32",111,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///"_INVBILL_";.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX32",112,0)
 Q
"RTN","RCDPEX32",113,0)
 ;
"RTN","RCDPEX32",114,0)
EDITRXC ; Edit pharmacy comment - PRCA*4.5*298
"RTN","RCDPEX32",115,0)
 N DA,DIC,DIE,DIR,DR,Q,Q0,RC,RC0,RCBILL,RCDA,RCDSEL,RCEOB,RCSAVE,RCWARN,RCXDA,RCXDA1,X,Y
"RTN","RCDPEX32",116,0)
 D FULL^VALM1
"RTN","RCDPEX32",117,0)
 D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",118,0)
 ;Only allow action if the selected exception has an ECME number
"RTN","RCDPEX32",119,0)
 S RCDSEL=$O(RCDA(0)) D:RCDSEL
"RTN","RCDPEX32",120,0)
 .N IENS,RCRXNO,RCRLSDT   ; IENS for FileMan, Rx number, Rx release date
"RTN","RCDPEX32",121,0)
 .S IENS=$P(RCDA(RCDSEL),U,2)_","_$P(RCDA(RCDSEL),U,1)_","
"RTN","RCDPEX32",122,0)
 .S RCRXNO=$$GET1^DIQ(344.41,IENS,.24) I RCRXNO=""  D  Q
"RTN","RCDPEX32",123,0)
 ..W !,"Comment not allowed. This is not a pharmacy exception." D WAIT^VALM1
"RTN","RCDPEX32",124,0)
 .;
"RTN","RCDPEX32",125,0)
 .; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX32",126,0)
 .S RCRLSDT=$$RXRLDT^PSOBPSUT(RCRXNO)   ; get release date
"RTN","RCDPEX32",127,0)
 .I RCRLSDT]"" D  Q
"RTN","RCDPEX32",128,0)
 ..W !!,"Release Date: "_$$FMTE^XLFDT(RCRLSDT)
"RTN","RCDPEX32",129,0)
 ..W !,"Comment not allowed for Rx with Release Date." D WAIT^VALM1
"RTN","RCDPEX32",130,0)
 .;
"RTN","RCDPEX32",131,0)
 .;Display sequence and INVALID BILL NUMBER
"RTN","RCDPEX32",132,0)
 .W !,"Selection #: ",RCDSEL,"     ",$$GET1^DIQ(344.41,IENS,.05)
"RTN","RCDPEX32",133,0)
 .;Allow edit of pharmacy comment
"RTN","RCDPEX32",134,0)
 .S DIE="^RCY(344.4,"_$P(RCDA(RCDSEL),U,1)_",1,",DA=$P(RCDA(RCDSEL),U,2),DA(1)=$P(RCDA(RCDSEL),U,1),DR="9.01Comment" D ^DIE Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPEX32",135,0)
 .D WAIT^VALM1,BLD^RCDPEX2
"RTN","RCDPEX32",136,0)
 ;
"RTN","RCDPEX32",137,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",138,0)
 S VALMBCK="R"
"RTN","RCDPEX32",139,0)
 Q
"RTN","RCDPEX32",140,0)
 ;
"RTN","RCDPEX4")
0^87^B11626090
"RTN","RCDPEX4",1,0)
RCDPEX4 ;ALB/DRF - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Jun 06, 2014@19:11:19
"RTN","RCDPEX4",2,0)
 ;;4.5;Accounts Receivable;**298**;Mar 20, 1995;Build 121
"RTN","RCDPEX4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX4",4,0)
 ;Call to $$RXBIL^IBNCPDPU via private IA #4435
"RTN","RCDPEX4",5,0)
 ;
"RTN","RCDPEX4",6,0)
 ;Cycle through the exception list looking for entries with an ECME number:
"RTN","RCDPEX4",7,0)
EN N ARRAY,ECME,EOB,ERA,RCBILL,RCER
"RTN","RCDPEX4",8,0)
 S RCER=0 F  S RCER=$O(^RCY(344.4,"AEXC",RCER)) Q:'RCER  D
"RTN","RCDPEX4",9,0)
 .S ERA="" F  S ERA=$O(^RCY(344.4,"AEXC",RCER,ERA)) Q:'ERA  D
"RTN","RCDPEX4",10,0)
 ..S EOB="" F  S EOB=$O(^RCY(344.4,"AEXC",RCER,ERA,EOB)) Q:'EOB  D
"RTN","RCDPEX4",11,0)
 ...;Ignore the exception if no ECME number is present
"RTN","RCDPEX4",12,0)
 ...S ECME=$P($G(^RCY(344.4,ERA,1,EOB,4)),U,2) Q:ECME=""
"RTN","RCDPEX4",13,0)
 ...;Lock zero node of ERA DETAIL
"RTN","RCDPEX4",14,0)
 ...L +^RCY(344.4,ERA,1,EOB,0):5 Q:'$T
"RTN","RCDPEX4",15,0)
 ...;Check for a matching bill in #399 (Rx Released) and if found remove error from exception list
"RTN","RCDPEX4",16,0)
 ...K ARRAY S ARRAY("ECME")=ECME,ARRAY("FILLDT")=$$SDATE(ERA)
"RTN","RCDPEX4",17,0)
 ...S RCBILL=$$RXBIL^IBNCPDPU(.ARRAY)     ; DBIA 4435
"RTN","RCDPEX4",18,0)
 ...I RCBILL>0 S RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U) D REMOVE(ERA,EOB,.RCBILL,ECME)
"RTN","RCDPEX4",19,0)
 ...;Unlock zero node of ERA DETAIL
"RTN","RCDPEX4",20,0)
 ...L -^RCY(344.4,ERA,1,EOB,0)
"RTN","RCDPEX4",21,0)
 Q
"RTN","RCDPEX4",22,0)
 ;
"RTN","RCDPEX4",23,0)
REMOVE(RCXDA1,RCXDA,RCBILL,RCSAVE) ;Remove from exception list and file EEOB against matched claim
"RTN","RCDPEX4",24,0)
 ;RCXDA1 - ERA IEN
"RTN","RCDPEX4",25,0)
 ;RCXDA - ERA DETAIL IEN
"RTN","RCDPEX4",26,0)
 ;RCBILL - CLAIM array for released Rx
"RTN","RCDPEX4",27,0)
 ;RCSAVE - ORIGINAL CLAIM from ERA (ECME #)
"RTN","RCDPEX4",28,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX4",29,0)
 N DA,Q,Q0,RC0,RCEOB,DIE,DR
"RTN","RCDPEX4",30,0)
 S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX4",31,0)
 S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX4",32,0)
 .I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX4",33,0)
 .I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX4",34,0)
 .S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX4",35,0)
 S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX4",36,0)
 S RCEOB=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"",1)",RCBILL) ; IA 4042
"RTN","RCDPEX4",37,0)
 K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX4",38,0)
 I RCEOB D  Q
"RTN","RCDPEX4",39,0)
 .N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX4",40,0)
 .D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",41,0)
 .S DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX4",42,0)
 ;
"RTN","RCDPEX4",43,0)
 ; Add stub rec to 361.1 if not there
"RTN","RCDPEX4",44,0)
 S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX4",45,0)
 ;
"RTN","RCDPEX4",46,0)
 I RCEOB<0 D  Q
"RTN","RCDPEX4",47,0)
 .N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX4",48,0)
 .D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",49,0)
 ;
"RTN","RCDPEX4",50,0)
 ; Update EOB in file 361.1
"RTN","RCDPEX4",51,0)
 ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX4",52,0)
 D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX4",53,0)
 ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX4",54,0)
 I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX4",55,0)
 .D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX4",56,0)
 ;
"RTN","RCDPEX4",57,0)
 N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX4",58,0)
 D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",59,0)
 S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX4",60,0)
 D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX4",61,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX4",62,0)
 ;
"RTN","RCDPEX4",63,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX4",64,0)
 Q
"RTN","RCDPEX4",65,0)
 ;
"RTN","RCDPEX4",66,0)
CHGED(DA,RCEOB,RCSAVE) ;  Change bad bill # to good one for EOB
"RTN","RCDPEX4",67,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX4",68,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX4",69,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX4",70,0)
 N DIE,DR,X,Y
"RTN","RCDPEX4",71,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///@;.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX4",72,0)
 Q
"RTN","RCDPEX4",73,0)
 ;
"RTN","RCDPEX4",74,0)
SDATE(ERA) ;Return Service Date for the ERA
"RTN","RCDPEX4",75,0)
 ;Scan RAW DATA multiple ignoring all records types except 40 - SERVICE DATE is piece 19 of record type 40
"RTN","RCDPEX4",76,0)
 N SUB,REC,SDATE S SUB=0,SDATE="" F  S SUB=$O(^RCY(344.4,ERA,1,1,1,SUB)) Q:'SUB  D  Q:SDATE]""
"RTN","RCDPEX4",77,0)
 .S REC=$G(^RCY(344.4,ERA,1,1,1,SUB,0)) S:(+REC=40) SDATE=$P(REC,U,19)
"RTN","RCDPEX4",78,0)
 Q SDATE
"RTN","RCDPURE1")
0^71^B60661584
"RTN","RCDPURE1",1,0)
RCDPURE1 ;WISC/RFJ - process a receipt ;Jun 06, 2014@19:11:19
"RTN","RCDPURE1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,169,204,173,214,217,296,298**;Mar 20, 1995;Build 121
"RTN","RCDPURE1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURE1",4,0)
 Q
"RTN","RCDPURE1",5,0)
 ;
"RTN","RCDPURE1",6,0)
 ;
"RTN","RCDPURE1",7,0)
PROCESS(RCRECTDA,RCSCREEN) ;  process a receipt, update ar, generate cr/tr documents to fms
"RTN","RCDPURE1",8,0)
 ;  the receipt and deposit must be locked before calling this label
"RTN","RCDPURE1",9,0)
 ;  if $g(rcscreen) = 1 show messages during processing
"RTN","RCDPURE1",10,0)
 ;  if $g(rcscreen) = 2 store messages during processing
"RTN","RCDPURE1",11,0)
 ; 
"RTN","RCDPURE1",12,0)
 N RCPAYDA,RCDPFPAY,RCERROR,RCMSG,RCEFT,RCERA
"RTN","RCDPURE1",13,0)
 K ^TMP($J,"RCDPEMSG"),^TMP("RCDPE-RECEIPT-ERROR",$J)
"RTN","RCDPURE1",14,0)
 ;
"RTN","RCDPURE1",15,0)
 ;  first mark the receipt as processed/closed to prevent changing the
"RTN","RCDPURE1",16,0)
 ;  data if the receipt does not fully process.  this will lock the
"RTN","RCDPURE1",17,0)
 ;  cancel payment, edit payment, etc. options.  once a receipt is
"RTN","RCDPURE1",18,0)
 ;  processed, even partially, it should not be changed.
"RTN","RCDPURE1",19,0)
 D MARKPROC^RCDPUREC(RCRECTDA,"")
"RTN","RCDPURE1",20,0)
 ;
"RTN","RCDPURE1",21,0)
 ; Special processing needed for EFT-related receipts
"RTN","RCDPURE1",22,0)
 ; RCEFT = 1 if EFT deposit, = 2 if receipt detail transfer, 0 if no EFT
"RTN","RCDPURE1",23,0)
 S RCEFT=+$$EDILB^RCDPEU(RCRECTDA)
"RTN","RCDPURE1",24,0)
 S RCERA=$P($G(^RCY(344,RCRECTDA,0)),U,18)
"RTN","RCDPURE1",25,0)
 ;
"RTN","RCDPURE1",26,0)
 ;  === no payments ===
"RTN","RCDPURE1",27,0)
 ;  if there are no payments for the receipt, quit
"RTN","RCDPURE1",28,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D  Q
"RTN","RCDPURE1",29,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",30,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",31,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",32,0)
 ;
"RTN","RCDPURE1",33,0)
 ;  check to see if the payments have dollar amounts
"RTN","RCDPURE1",34,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  I $P($G(^(RCPAYDA,0)),"^",4) S RCDPFPAY=1 Q
"RTN","RCDPURE1",35,0)
 I '$G(RCDPFPAY) D  Q
"RTN","RCDPURE1",36,0)
 . I $G(RCSCREEN)  S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",37,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",38,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",39,0)
 ;
"RTN","RCDPURE1",40,0)
 ;  === update AR accounts ===
"RTN","RCDPURE1",41,0)
 I $G(RCSCREEN) S RCMSG="Updating AR accounts..." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",42,0)
 ;
"RTN","RCDPURE1",43,0)
 ;  loop payments and apply to account in AR
"RTN","RCDPURE1",44,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D  I RCERROR Q
"RTN","RCDPURE1",45,0)
 . S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCPAYDA)
"RTN","RCDPURE1",46,0)
 . S:RCERROR ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCERROR  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",47,0)
 ;
"RTN","RCDPURE1",48,0)
 ;  an error occurred during processing a payment
"RTN","RCDPURE1",49,0)
 I $G(RCERROR) D  Q
"RTN","RCDPURE1",50,0)
 .   I '$G(RCSCREEN) Q
"RTN","RCDPURE1",51,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",52,0)
 .   S RCMSG="|  An ERROR has occurred when processing payment "_RCPAYDA_" on receipt "_$P(^RCY(344,RCRECTDA,0),"^")_".",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",53,0)
 .   S RCMSG="|  The error message returned during processing is:",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",54,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",55,0)
 .   S RCMSG=$E("|  "_$P(RCERROR,"^",2)_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",56,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",57,0)
 .   S RCMSG=$E("|  You will need to correct the error before you can completely process the"_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",58,0)
 .   S RCMSG=$E("|  receipt.  Once the receipt is completely processed, the FMS "_$S(RCEFT'=2:"Cash Receipt",1:"'TR'")_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",59,0)
 .   S RCMSG=$E("|  document will be generated."_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",60,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",61,0)
 ;
"RTN","RCDPURE1",62,0)
 ;  all payments processed correctly
"RTN","RCDPURE1",63,0)
 I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",64,0)
 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",65,0)
 ;
"RTN","RCDPURE1",66,0)
 ;  *296 - no cr document for event type 'a' or 'p' or 't'
"RTN","RCDPURE1",67,0)
 N RCDPETY S RCDPETY=$P($G(^RCY(344,RCRECTDA,0)),"^",4)
"RTN","RCDPURE1",68,0)
 I (RCDPETY=15)!(RCDPETY=16)!(RCDPETY=13) D 215 Q
"RTN","RCDPURE1",69,0)
 ;
"RTN","RCDPURE1",70,0)
 ;  if no deposit ticket and not related to EFT or is a HAC payment, do not send to fms
"RTN","RCDPURE1",71,0)
 I '$P(^RCY(344,RCRECTDA,0),"^",6),$S('RCEFT:1,1:$$HACEFT^RCDPEU(+$P(^RCY(344,RCRECTDA,0),U,17))) D  Q
"RTN","RCDPURE1",72,0)
 . D 215
"RTN","RCDPURE1",73,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have a deposit ticket and will NOT be sent to FMS." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",74,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",75,0)
 ;
"RTN","RCDPURE1",76,0)
 ;  === send fms cash receipt document ===
"RTN","RCDPURE1",77,0)
 N GECSDATA,FMSDOCNO,RESULT,REFMS
"RTN","RCDPURE1",78,0)
 ;  lookup fms document number to see if the receipt has been
"RTN","RCDPURE1",79,0)
 ;  sent to fms (field 200 in file 344)
"RTN","RCDPURE1",80,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPURE1",81,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCDPURE1",82,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCDPURE1",83,0)
 I FMSDOCNO'="" S REFMS=1 N DIQ2 D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCDPURE1",84,0)
 ;
"RTN","RCDPURE1",85,0)
 I $G(RCSCREEN)&$G(GECSDATA) S RCMSG="Re-Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",86,0)
 I $G(RCSCREEN)&'$G(GECSDATA) S RCMSG="Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",87,0)
 ;
"RTN","RCDPURE1",88,0)
 ;  build and send the tr/cr document to fms
"RTN","RCDPURE1",89,0)
 I RCEFT'=2 D  ; Send CR doc
"RTN","RCDPURE1",90,0)
 . S RESULT=$$BUILDCR^RCXFMSCR(RCRECTDA,+$G(GECSDATA),RCEFT)
"RTN","RCDPURE1",91,0)
 E  D  ; Send TR doc
"RTN","RCDPURE1",92,0)
 . S RESULT=$$GETTR^RCXFMST1(RCRECTDA,+$G(GECSDATA))
"RTN","RCDPURE1",93,0)
 ;  error in building code sheet
"RTN","RCDPURE1",94,0)
 I 'RESULT D:$G(RCSCREEN) MSG("ERROR - "_$P(RESULT,"^",2),RCSCREEN,"!!") Q
"RTN","RCDPURE1",95,0)
 ;
"RTN","RCDPURE1",96,0)
 ;  no document to send
"RTN","RCDPURE1",97,0)
 I $P(RESULT,"^")=-1,$G(RCSCREEN) S RCMSG="NOTE - "_$P(RESULT,"^",2) S $P(RESULT,"^",2)="" D MSG(RCMSG,RCSCREEN,"!!") S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""
"RTN","RCDPURE1",98,0)
 ;  document built and sent
"RTN","RCDPURE1",99,0)
 I $P(RESULT,"^")=1,$G(RCSCREEN) D
"RTN","RCDPURE1",100,0)
 . N Z,DIE,DR,DA
"RTN","RCDPURE1",101,0)
 . D MSG("Done. FMS document number "_$P(RESULT,"^",2),RCSCREEN,"!!")
"RTN","RCDPURE1",102,0)
 . I +$O(^RCY(344.4,"ARCT",RCRECTDA,0)) S DIE="^RCY(344.4,",DR=".14////1",DA=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)) D ^DIE
"RTN","RCDPURE1",103,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,17) S Z=$P($G(^RCY(344.31,+$P(^RCY(344,RCRECTDA,0),U,17),0)),U,15) I Z'="" S DA=RCRECTDA,DIE="^RCY(344,",DR=".16////"_Z D ^DIE
"RTN","RCDPURE1",104,0)
 I $G(RCSCREEN) D
"RTN","RCDPURE1",105,0)
 . I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !! S RCMSG="   * * * * Transmission will be held until "_Y_" * * * *" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",106,0)
 ;
"RTN","RCDPURE1",107,0)
 ;
"RTN","RCDPURE1",108,0)
 ;  store the fms document number (receipt already marked processed/
"RTN","RCDPURE1",109,0)
 ;  closed at the top of the routine just before posting the dollars.
"RTN","RCDPURE1",110,0)
 D MARKPROC^RCDPUREC(RCRECTDA,$P(RESULT,"^",2))
"RTN","RCDPURE1",111,0)
 I RCEFT=2 D MSG("No 215 report generated for this receipt",RCSCREEN,"!!") G Q215
"RTN","RCDPURE1",112,0)
 ;
"RTN","RCDPURE1",113,0)
 ;
"RTN","RCDPURE1",114,0)
215 ;  === print 215 report ===
"RTN","RCDPURE1",115,0)
 I $G(RCSCREEN) D MSG("Queuing 215 report...",RCSCREEN,"!!")
"RTN","RCDPURE1",116,0)
 N DEVICE
"RTN","RCDPURE1",117,0)
 S DEVICE=$$OPTCK^RCDPRPL2("215REPORT",3)
"RTN","RCDPURE1",118,0)
 I DEVICE="" D:$G(RCSCREEN) MSG(" Use Customize Option to set up the default printer.",RCSCREEN) Q
"RTN","RCDPURE1",119,0)
 ;
"RTN","RCDPURE1",120,0)
 S ZTIO=DEVICE,ZTDTH=$H,ZTRTN="DQ^RCDPR215",ZTSAVE("RECEIPDA")=RCRECTDA,ZTSAVE("RCTYPE")="A"
"RTN","RCDPURE1",121,0)
 D ^%ZTLOAD,^%ZISC
"RTN","RCDPURE1",122,0)
Q215 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",123,0)
 Q
"RTN","RCDPURE1",124,0)
 ;
"RTN","RCDPURE1",125,0)
UPDERA(RCERA) ; Update detail posted status for ERA entry RCERA
"RTN","RCDPURE1",126,0)
 ;
"RTN","RCDPURE1",127,0)
 N DA,DIE,DR
"RTN","RCDPURE1",128,0)
 S DA=+$G(RCERA),DR=".14////1",DIE="^RCY(344.4," D:DA ^DIE
"RTN","RCDPURE1",129,0)
 Q
"RTN","RCDPURE1",130,0)
 ;
"RTN","RCDPURE1",131,0)
MSG(RCMSG,RCSCREEN,PRELINE,POSTLINE) ; Write message or set into msg array
"RTN","RCDPURE1",132,0)
 ; RCMSG = text to write  RCSCREEN = screen flag
"RTN","RCDPURE1",133,0)
 ; PRELINE = the line feeds to print before the text
"RTN","RCDPURE1",134,0)
 ; POSTLINE = the line feeds to print after the text
"RTN","RCDPURE1",135,0)
 Q:'RCSCREEN
"RTN","RCDPURE1",136,0)
 N RCPRE,RCPOST,Z
"RTN","RCDPURE1",137,0)
 S RCPRE=$L($G(PRELINE),"!")-1,RCPOST=$L($G(POSTLINE),"!")-1
"RTN","RCDPURE1",138,0)
 I RCSCREEN=1 D  G MSGQ
"RTN","RCDPURE1",139,0)
 . F Z=1:1:RCPRE W !
"RTN","RCDPURE1",140,0)
 . W RCMSG
"RTN","RCDPURE1",141,0)
 . F Z=1:1:RCPOST W !
"RTN","RCDPURE1",142,0)
 F Z=1:1:RCPRE S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",143,0)
 S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=RCMSG
"RTN","RCDPURE1",144,0)
 F Z=1:1:RCPOST S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",145,0)
MSGQ Q
"RTN","RCDPURE1",146,0)
 ;
"RTN","RCDPURE1",147,0)
 ; PRCA*4.5*298 updated EDIT4 removing DIPA
"RTN","RCDPURE1",148,0)
EDIT4(DA,DR,RCDR1,RCDR2,RCDR3) ; Modify DR string for type of payment edit
"RTN","RCDPURE1",149,0)
 ;   for EDI Lockbox
"RTN","RCDPURE1",150,0)
 ; Input: DA,DR   Output: RCDR1,RCDR2,RCDR3
"RTN","RCDPURE1",151,0)
 ; If type unchanged, or neither old/new are EDI Lockbox, no chk needed
"RTN","RCDPURE1",152,0)
 ; If old type is EDI Lockbox and scratch pad exists, no change allowed
"RTN","RCDPURE1",153,0)
 ; If changed to EDI Lockbox and detail already exists, no chg allowed
"RTN","RCDPURE1",154,0)
 ; If changed to EDI Lockbox, ask for related EFT
"RTN","RCDPURE1",155,0)
 N RCDR,RCLST,RCM,RCM1,RCM2,RCM3,RCN4,RCNE,RCNO,RCO4,RCOE,RCP,RCSTRT,Z,Z0
"RTN","RCDPURE1",156,0)
 S (RCDR1,RCDR2,RCDR3)=""
"RTN","RCDPURE1",157,0)
 ;
"RTN","RCDPURE1",158,0)
 S RCP=10 F Z=2:1 Q:DR'[("@"_RCP)&(DR'[("@"_(RCP+1)))&(DR'[("@"_(RCP+2)))&(DR'[("@"_(RCP+3)))&(DR'[("@"_(RCP+4)))  S RCP=RCP*Z
"RTN","RCDPURE1",159,0)
 ;
"RTN","RCDPURE1",160,0)
 S Z=$L(DR,".04;"),RCSTRT=1,RCLST=Z
"RTN","RCDPURE1",161,0)
 I Z>2 D  ; Find .04, not n.04
"RTN","RCDPURE1",162,0)
 . F  S Z0=$P(DR,".04;",RCSTRT) Q:Z0=""!'$E(Z0,$L(Z0))  S RCSTRT=RCSTRT+1
"RTN","RCDPURE1",163,0)
 ;
"RTN","RCDPURE1",164,0)
 ; If unchanged/changed from/to other than EDI Lockbox, jump over edits
"RTN","RCDPURE1",165,0)
 S RCDR1="S RCP="_RCP_" D SETV^RCDPURE1;"_$P(DR,".04;",1,RCSTRT)
"RTN","RCDPURE1",166,0)
 S RCDR2="@"_RCP_";.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@"_(RCP+2)_""""
"RTN","RCDPURE1",167,0)
 ; Reset field .04 and .17 if not a valid type change
"RTN","RCDPURE1",168,0)
 S RCDR2=RCDR2_";@"_(RCP+1)_";.04////^S X=RCO4;I RCOE="""" S Y=""@"_(RCP+3)_""";.17////^S X=RCOE;@"_(RCP+3)_";W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM),! S Y=""@"_RCP_""";@"_(RCP+2)
"RTN","RCDPURE1",169,0)
 S RCDR3=$P(DR,".04;",RCSTRT+1,RCLST)
"RTN","RCDPURE1",170,0)
 Q
"RTN","RCDPURE1",171,0)
 ;
"RTN","RCDPURE1",172,0)
 ; PRCA*4.5*298 updated SETV removing DIPA, added comments
"RTN","RCDPURE1",173,0)
SETV ; Set up variables needed to edit change of receipt type, used in DR strings to edit AR BATCH PAYMENT (#344)
"RTN","RCDPURE1",174,0)
 ; RCO4 = existing (#.04) TYPE OF PAYMENT value, RCOE = existing (#.17) EFT RECORD value
"RTN","RCDPURE1",175,0)
 N X S X=$G(^RCY(344,DA,0)),RCO4=$P(X,U,4),RCOE=$P(X,U,17)
"RTN","RCDPURE1",176,0)
 S RCM="EDI Lockbox payment type is invalid for this receipt",RCM1="Payment type can't be changed once detail has been loaded from the ERA",RCM2="Must have an EFT for an EFT Lockbox payment type"
"RTN","RCDPURE1",177,0)
 S RCM3=">>If receipt is for an ERA and a paper check, select the ERA now"
"RTN","RCDPURE1",178,0)
 Q
"RTN","RCDPURE1",179,0)
 ;
"RTN","RCDPURE1",180,0)
WL(DA) ; Function returns 0 if the worklist did not create the receipt
"RTN","RCDPURE1",181,0)
 ;  or the ien of the worklist entry if it did (344.4 and 344.49 are DINUMED)
"RTN","RCDPURE1",182,0)
 N Z
"RTN","RCDPURE1",183,0)
 S Z=+$O(^RCY(344.4,"AREC",DA,0))
"RTN","RCDPURE1",184,0)
 Q Z
"RTN","RCDPURE1",185,0)
 ;
"RTN","RCDPURE1",186,0)
HAC(RC) ; Returns 1 if the receipt in RC is related to a HAC EFT
"RTN","RCDPURE1",187,0)
 N Z,HAC
"RTN","RCDPURE1",188,0)
 S HAC=0
"RTN","RCDPURE1",189,0)
 ; ERA related to an EFT detail record
"RTN","RCDPURE1",190,0)
 S Z=+$G(^RCY(344.31,+$P($G(^RCY(344,RC,0)),U,17),0))
"RTN","RCDPURE1",191,0)
 ; Deposit # in EFT transmission starts with HAC
"RTN","RCDPURE1",192,0)
 I Z S Z=$P($G(^RCY(344.3,+Z,0)),U,6) I $E(Z,1,3)="HAC" S HAC=1
"RTN","RCDPURE1",193,0)
 Q HAC
"RTN","RCDPURE1",194,0)
 ;
"RTN","RCDPUREC")
0^42^B104492015
"RTN","RCDPUREC",1,0)
RCDPUREC ;WISC/RFJ - receipt utilities ;Jun 06, 2014@19:11:19
"RTN","RCDPUREC",2,0)
 ;;4.5;Accounts Receivable;**114,148,169,173,208,222,293,298**;Mar 20, 1995;Build 121
"RTN","RCDPUREC",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPUREC",4,0)
 Q
"RTN","RCDPUREC",5,0)
 ;
"RTN","RCDPUREC",6,0)
ADDRECT(TRANDATE,RCDEPTDA,PAYTYPDA) ;  add a receipt
"RTN","RCDPUREC",7,0)
 ;
"RTN","RCDPUREC",8,0)
 ;  if deposit or payment type is missing, do not add the receipt
"RTN","RCDPUREC",9,0)
 I 'RCDEPTDA!('PAYTYPDA) Q 0
"RTN","RCDPUREC",10,0)
 ;
"RTN","RCDPUREC",11,0)
 N DA,DATA,RCDPFLAG,RECEIPT,TYPE
"RTN","RCDPUREC",12,0)
 ;  if a receipt has already been added for this transmission date
"RTN","RCDPUREC",13,0)
 ;  and deposit number, do not add a new one
"RTN","RCDPUREC",14,0)
 S DA=0 F  S DA=$O(^RCY(344,"AD",+RCDEPTDA,DA)) Q:'DA  S DATA=$G(^RCY(344,DA,0)) I $P($P(DATA,"^",3),".")=TRANDATE,$P(DATA,"^",4)=PAYTYPDA S RCDPFLAG=1 Q
"RTN","RCDPUREC",15,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUREC",16,0)
 ;
"RTN","RCDPUREC",17,0)
 Q $$BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA)
"RTN","RCDPUREC",18,0)
 ;
"RTN","RCDPUREC",19,0)
BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA) ; function, Build a receipt with/without deposit
"RTN","RCDPUREC",20,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",21,0)
 ; returns new IEN on success, else zero
"RTN","RCDPUREC",22,0)
 ;
"RTN","RCDPUREC",23,0)
 N GOTONE,RECEIPT,TYPE
"RTN","RCDPUREC",24,0)
 ; ATTMPT - count of attempts
"RTN","RCDPUREC",25,0)
 ; GOTONE - new receipt # flag
"RTN","RCDPUREC",26,0)
 S GOTONE=0
"RTN","RCDPUREC",27,0)
 ;  build unique receipt number for date
"RTN","RCDPUREC",28,0)
 S TYPE=$E($G(^RC(341.1,PAYTYPDA,0))) I TYPE="" S TYPE="Z"  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPUREC",29,0)
 I TYPE="C",$G(RCDEPTDA)["ERACHK" S RCDEPTDA=+RCDEPTDA,TYPE="E" ; ERA plus paper check EDI Lockbox receipt
"RTN","RCDPUREC",30,0)
 ;
"RTN","RCDPUREC",31,0)
 ; -----
"RTN","RCDPUREC",32,0)
 ; PRCA*4.5*298 - removed testing code that allowed for duplicate receipt numbers in testing environments
"RTN","RCDPUREC",33,0)
 ;   code for checking environment: S PROD=$S($$PROD^XUPROD(1):"PROD",1:"TEST")
"RTN","RCDPUREC",34,0)
 ;   The user would be prompted for a duplicate receipt number of from 1 to 12 chars:
"RTN","RCDPUREC",35,0)
 ;            S DIR(0)="FAO^1:12",DIR("A")="ENTER A DUPLICATE RECEIPT #: "
"RTN","RCDPUREC",36,0)
 ;   if user didn't enter duplicate receipt #, they would be asked if they wanted a
"RTN","RCDPUREC",37,0)
 ;   duplicate receipt # for testing. If yes, the code would iterate:
"RTN","RCDPUREC",38,0)
 ;        ;.. F  S RECEIPT=$O(^PRCA(433,"AF",RECEIPT)) D  Q:DONE
"RTN","RCDPUREC",39,0)
 ;        ;... I RECEIPT="" W !!,"NO MORE DUPLICATE RECEIPT NUMBER SCENARIOS FOUND!",! S DONE=1 H 2 Q
"RTN","RCDPUREC",40,0)
 ;        ;... I '$D(^RCY(344,"B",RECEIPT)) D
"RTN","RCDPUREC",41,0)
 ;        ;.... W !!,"RECEIPT #: "_RECEIPT_" WAS FOUND & WE WILL ATTEMPT TO USE IT.",! S DONE=1 H 2
"RTN","RCDPUREC",42,0)
 ; the code was creating problems during the queued nightly job in development environments
"RTN","RCDPUREC",43,0)
 ;      Accounts Receivable Nightly Process Background Job [PRCA NIGHTLY PROCESS]
"RTN","RCDPUREC",44,0)
 ; -----
"RTN","RCDPUREC",45,0)
 ;
"RTN","RCDPUREC",46,0)
 ;lockbox receipt in the form of L980901A0, do not include century
"RTN","RCDPUREC",47,0)
 F  D  Q:+GOTONE&$L(RECEIPT)  ; must be new and non-null
"RTN","RCDPUREC",48,0)
 .;find a unique receipt #
"RTN","RCDPUREC",49,0)
 .S RECEIPT=$$NEXT(TYPE_$E(TRANDATE,2,7))  ;get last two digits from 00 to ZZ 
"RTN","RCDPUREC",50,0)
 .I RECEIPT="" Q
"RTN","RCDPUREC",51,0)
 .I $D(^RCY(344,"B",RECEIPT)) Q  ; AR BATCH PAYMENT file (#344), RECEIPT # field (#.01)
"RTN","RCDPUREC",52,0)
 .I $D(^PRCA(433,"AF",RECEIPT)) Q  ; AR TRANSACTION file (#433), RECEIPT # field (#13)
"RTN","RCDPUREC",53,0)
 .S GOTONE=1
"RTN","RCDPUREC",54,0)
 ;
"RTN","RCDPUREC",55,0)
 ;
"RTN","RCDPUREC",56,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0 ; PRCA*4.5*298, if LOCK timeout return zero
"RTN","RCDPUREC",57,0)
 ;
"RTN","RCDPUREC",58,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",59,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUREC",60,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPUREC",61,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPUREC",62,0)
 ;  .04 = type of payment            .06 = deposit ticket
"RTN","RCDPUREC",63,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPUREC",64,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_TRANDATE_";.04////"_PAYTYPDA_$S(RCDEPTDA:";.06////"_RCDEPTDA,1:"")_";.14////1;"
"RTN","RCDPUREC",65,0)
 S X=RECEIPT
"RTN","RCDPUREC",66,0)
 D FILE^DICN
"RTN","RCDPUREC",67,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPUREC",68,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPUREC",69,0)
 Q 0  ; entry not created
"RTN","RCDPUREC",70,0)
 ;
"RTN","RCDPUREC",71,0)
 ;
"RTN","RCDPUREC",72,0)
NEXT(RECEIPT) ; function, get next 2 chars. in sequence 00 to ZZ for receipt
"RTN","RCDPUREC",73,0)
 ;
"RTN","RCDPUREC",74,0)
 ;  start with 00
"RTN","RCDPUREC",75,0)
 I '$D(^RCY(344,"B",RECEIPT_"00")),'$D(^RCY(344,"B",RECEIPT_"00A")) Q RECEIPT_"00"
"RTN","RCDPUREC",76,0)
 ;
"RTN","RCDPUREC",77,0)
 N DIGIT1,DIGIT2,LAST
"RTN","RCDPUREC",78,0)
 ;  get the last one used and increment by 1
"RTN","RCDPUREC",79,0)
 S LAST=$O(^RCY(344,"B",RECEIPT_"ZZ"),-1)  ;example L2980901ZZ
"RTN","RCDPUREC",80,0)
 S DIGIT1=$A($E(LAST,8)),DIGIT2=$A($E(LAST,9))
"RTN","RCDPUREC",81,0)
 ;  increment the ascii value of last digit
"RTN","RCDPUREC",82,0)
 S DIGIT2=DIGIT2+1
"RTN","RCDPUREC",83,0)
 ;  ascii 48=0, 57=9, 65=A, 90=Z
"RTN","RCDPUREC",84,0)
 I DIGIT2>57,DIGIT2<65 S DIGIT2=65 ;an A
"RTN","RCDPUREC",85,0)
 ;  digit2 above a Z, set digit2 to a 0 and increment digit 1
"RTN","RCDPUREC",86,0)
 I DIGIT2>90 S DIGIT2=48,DIGIT1=DIGIT1+1
"RTN","RCDPUREC",87,0)
 I DIGIT1>57,DIGIT1<65 S DIGIT1=65 ;an A
"RTN","RCDPUREC",88,0)
 ;  digit 1 is above a Z, reset and reuse the Z
"RTN","RCDPUREC",89,0)
 I DIGIT1>90 S DIGIT1=90,DIGIT2=90
"RTN","RCDPUREC",90,0)
 ;
"RTN","RCDPUREC",91,0)
 ; If Receipt # already on file get another one
"RTN","RCDPUREC",92,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT_$C(DIGIT1)_$C(DIGIT2)))  D
"RTN","RCDPUREC",93,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)
"RTN","RCDPUREC",94,0)
 ;
"RTN","RCDPUREC",95,0)
 Q RECEIPT_$C(DIGIT1)_$C(DIGIT2)
"RTN","RCDPUREC",96,0)
 ;
"RTN","RCDPUREC",97,0)
 ;
"RTN","RCDPUREC",98,0)
SELRECT(ADDNEW,RCDEPTDA) ;  select a receipt
"RTN","RCDPUREC",99,0)
 ;  if $g(addnew) allow adding a new receipt
"RTN","RCDPUREC",100,0)
 ;  if $g(rcdeptda) allow selection of receipts for the deposit only
"RTN","RCDPUREC",101,0)
 ;  if $g(addnew) and $g(rcdeptda) deposit number auto set for new receipt
"RTN","RCDPUREC",102,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of receipt
"RTN","RCDPUREC",103,0)
 N %,%Y,C,D0,DA,DI,DIC,DIE,DIK,DG,DLAYGO,DQ,DR,DTOUT,DUOUT,RCREFLUP,X,Y,RCDE,RCLB,RC1,RC2,RCREQ,RCY
"RTN","RCDPUREC",104,0)
 S DIC="^RCY(344,",DIC(0)="QEAM",DIC("A")="Select RECEIPT: "
"RTN","RCDPUREC",105,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPUREC",106,0)
 ;  set screen to select receipts linked to deposit and to screen out
"RTN","RCDPUREC",107,0)
 ;  selection of EDI Lockbox-type receipts unless an EFT is associated
"RTN","RCDPUREC",108,0)
 ;  with the deposit and the receipt is not associated with an ERA
"RTN","RCDPUREC",109,0)
 S RCDE=+$O(^RCY(344.3,"ARDEP",+$G(RCDEPTDA),0))
"RTN","RCDPUREC",110,0)
 I $G(RCDEPTDA) D
"RTN","RCDPUREC",111,0)
 .   S DIC("S")="N Z S Z=$G(^(0)) I $S('$$EDILBEV^RCDPEU($P(Z,U,4)):'RCDE,1:RCDE&'$P(Z,U,18)),($P(Z,U,6)=""""!($P(Z,U,6)=RCDEPTDA))"
"RTN","RCDPUREC",112,0)
 .   S DIC("A")="Select RECEIPT (for deposit "_$P(^RCY(344.1,RCDEPTDA,0),"^")_"): "
"RTN","RCDPUREC",113,0)
 ;  use special lookup on input
"RTN","RCDPUREC",114,0)
 I '$G(RCDEPTDA) S RCREFLUP=1
"RTN","RCDPUREC",115,0)
 ;  add new entries
"RTN","RCDPUREC",116,0)
 S RC1="TYPE NOT VALID FOR THIS RECEIPT",RC2=">>AN EFT REFERENCE IS REQUIRED"
"RTN","RCDPUREC",117,0)
 I $G(ADDNEW) D
"RTN","RCDPUREC",118,0)
 .   S DIC("A")="Select RECEIPT (or add a new one): "
"RTN","RCDPUREC",119,0)
 .   S DIC(0)="QEALM",DLAYGO=344
"RTN","RCDPUREC",120,0)
 .   S DIC("DR")="S RCREQ=0;.02////"_DUZ_";.03///NOW;.14////1;@4;.04"_$S(RCDE:"////"_$$LBEVENT^RCDPEU(),1:"")
"RTN","RCDPUREC",121,0)
 .   S DIC("DR")=DIC("DR")_";S RCLB=$$EDILBEV^RCDPEU(+X) S:'RCLB Y=""@6"";I $G(RCDEPTDA) S Y=$S('RCDE:""@8"",1:""@6"");W !,RC2 S RCREQ=1;.17;S Y=""@99"""
"RTN","RCDPUREC",122,0)
 .   S DIC("DR")=DIC("DR")_";@6;.06"_$S($G(RCDEPTDA):"////"_RCDEPTDA,1:"")_";S:'RCDE Y=""@99"";.17////"_+RCDE_";S Y=""@99"";@8;W *7,!,RC1 S Y=""@4"";@99"
"RTN","RCDPUREC",123,0)
 .   S DIC("DR")=DIC("DR")_";"
"RTN","RCDPUREC",124,0)
 D ^DIC
"RTN","RCDPUREC",125,0)
 S RCY=Y
"RTN","RCDPUREC",126,0)
 I RCY<0,'$G(DUOUT),'$G(DTOUT) S RCY=0
"RTN","RCDPUREC",127,0)
 I $P(RCY,U,3),$G(RCREQ) D
"RTN","RCDPUREC",128,0)
 . I '$P($G(^RCY(344,+RCY,0)),U,17) D  Q
"RTN","RCDPUREC",129,0)
 .. W !,*7,"NO EFT REFERENCED - RECEIPT NOT ADDED"
"RTN","RCDPUREC",130,0)
 .. S DA=+RCY,DIK="^RCY(344," D ^DIK
"RTN","RCDPUREC",131,0)
 .. S RCY=0
"RTN","RCDPUREC",132,0)
 . S DIE="^RCY(344.31,",DA=$P(^RCY(344,+RCY,0),U,17),DR=".08////2" D ^DIE
"RTN","RCDPUREC",133,0)
 Q +RCY
"RTN","RCDPUREC",134,0)
 ;
"RTN","RCDPUREC",135,0)
 ;
"RTN","RCDPUREC",136,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUREC",137,0)
 N DATA
"RTN","RCDPUREC",138,0)
 S DATA=$G(^RCY(344,Y,0)) I DATA="" Q
"RTN","RCDPUREC",139,0)
 ;  opened by
"RTN","RCDPUREC",140,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",2),0)),"^"),1,15)
"RTN","RCDPUREC",141,0)
 ;  date opened
"RTN","RCDPUREC",142,0)
 I '$P(DATA,"^",3) S $P(DATA,"^",3)="???????"
"RTN","RCDPUREC",143,0)
 W ?35," on: ",$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPUREC",144,0)
 ;  type of payment
"RTN","RCDPUREC",145,0)
 W ?50," ",$E($P($G(^RC(341.1,+$P(DATA,"^",4),0)),"^"),1,18)
"RTN","RCDPUREC",146,0)
 ;  status
"RTN","RCDPUREC",147,0)
 W ?70," ",$S($P(DATA,"^",14):"OPEN",1:"CLOSED")
"RTN","RCDPUREC",148,0)
 Q
"RTN","RCDPUREC",149,0)
 ;
"RTN","RCDPUREC",150,0)
 ;
"RTN","RCDPUREC",151,0)
LOOKUP ;  special lookup on receipts, called from ^dd(344,.01,7.5)
"RTN","RCDPUREC",152,0)
 ;  if rcreflup flag not set, do not use special lookup
"RTN","RCDPUREC",153,0)
 I '$D(RCREFLUP) Q
"RTN","RCDPUREC",154,0)
 ;  user entered O.? for lookup on open receipts
"RTN","RCDPUREC",155,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",156,0)
 ;  user entered C.? for lookup on closed receipts
"RTN","RCDPUREC",157,0)
 I X["C."!(X["c.") S DIC("S")="I '$P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",158,0)
 K DIC("S")
"RTN","RCDPUREC",159,0)
 Q
"RTN","RCDPUREC",160,0)
 ;
"RTN","RCDPUREC",161,0)
 ; PRCA*4.5*298 - updated logic and comments in EDITREC
"RTN","RCDPUREC",162,0)
EDITREC(DA,DR) ;  edit the receipt (DR = string of fields to ask) in AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",163,0)
 ; RCBPYMNT - AR BATCH PAYMENT entry before edit
"RTN","RCDPUREC",164,0)
 N D,D0,DI,DIC,DIE,DQ,RCBPYMNT,RCDA,RCDR1,RCDR2,RCDR3,X,Y
"RTN","RCDPUREC",165,0)
 S (DIC,DIE)="^RCY(344,",RCDA=DA
"RTN","RCDPUREC",166,0)
 I $G(DR)="" N DR D
"RTN","RCDPUREC",167,0)
 . S DR=".01;.04;"_$S($P($G(^RCY(344,RCDA,0)),U,17):"",1:"I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;")_"D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",168,0)
 ;
"RTN","RCDPUREC",169,0)
 I $G(DR)[".04;" D  ; Add a check to DR string for type of payment edit
"RTN","RCDPUREC",170,0)
 .D EDIT4^RCDPURE1(RCDA,DR,.RCDR1,.RCDR2,.RCDR3)  ; get new DR strings in RCDR1,RCDR2,RCDR3
"RTN","RCDPUREC",171,0)
 .S DR=$S($E(RCDR1,$L(RCDR1))'=";":RCDR1,1:$E(RCDR1,1,$L(RCDR1)-1)),DR(1,344,1)=RCDR2,DR(1,344,2)=RCDR3
"RTN","RCDPUREC",172,0)
 ;
"RTN","RCDPUREC",173,0)
 M RCBPYMNT=^RCY(344,DA)  ; save initial values
"RTN","RCDPUREC",174,0)
 ;
"RTN","RCDPUREC",175,0)
 D ^DIE
"RTN","RCDPUREC",176,0)
 ;
"RTN","RCDPUREC",177,0)
 ; (#.04) TYPE OF PAYMENT [4P:341.1], (#.06) DEPOSIT TICKET [6P:344.1], (#.17) EFT RECORD [17P:344.31]
"RTN","RCDPUREC",178,0)
 ; Delete deposit if EDI Lockbox event and EFT referenced
"RTN","RCDPUREC",179,0)
 I $P($G(^RCY(344,RCDA,0)),U,6),$P(^(0),U,17),$$EDILBEV^RCDPEU(+$P(^(0),U,4)) S DIE="^RCY(344,",DR=".06///@" D ^DIE
"RTN","RCDPUREC",180,0)
 Q:'$D(^RCY(344,RCDA,0))  ; entry should still exist
"RTN","RCDPUREC",181,0)
 ;
"RTN","RCDPUREC",182,0)
 ; check if TYPE OF PAYMENT (#.04) changed from CHECK/MO PAYMENT to EDI LOCKBOX, update EFT on RECEIPT
"RTN","RCDPUREC",183,0)
 I $P(RCBPYMNT(0),U,4)=4,$P(^RCY(344,RCDA,0),U,4)=14,$G(RCNE) D
"RTN","RCDPUREC",184,0)
 .K DA,DR S DA=RCDA,DIE="^RCY(344,",DR=".17////"_RCNE D ^DIE
"RTN","RCDPUREC",185,0)
 ;
"RTN","RCDPUREC",186,0)
 ; check if TYPE OF PAYMENT (#.04) changed from EDI LOCKBOX to CHECK/MO PAYMENT, remove EFT from RECEIPT and
"RTN","RCDPUREC",187,0)
 ; update EDI THIRD PARTY EFT DETAIL status to UNMATCHED
"RTN","RCDPUREC",188,0)
 I $P(RCBPYMNT(0),U,4)=14,$P(^RCY(344,RCDA,0),U,4)=4 D
"RTN","RCDPUREC",189,0)
 .K DA,DR S DA=RCDA,DIE="^RCY(344,",DR=".17////@" D ^DIE
"RTN","RCDPUREC",190,0)
 .N DIR,RCMSG,X,Y
"RTN","RCDPUREC",191,0)
 .S RCMSG=""  ; message displayed to user
"RTN","RCDPUREC",192,0)
 .K DA,DR S DIE="^RCY(344.31,",DA=+$P(RCBPYMNT(0),U,17)
"RTN","RCDPUREC",193,0)
 .S Y=$G(^RCY(344.31,DA,0))
"RTN","RCDPUREC",194,0)
 .S RCMSG=$S(Y]"":"EFT TRANSACTION "_$P(Y,U)_" updated to UNMATCHED.",1:"* EFT RECORD not found! *")
"RTN","RCDPUREC",195,0)
 .I DA>0 S DR=".08////0" D ^DIE
"RTN","RCDPUREC",196,0)
 .W !!,"   "_RCMSG S DIR(0)="EA",DIR("A")="Press return: " D ^DIR
"RTN","RCDPUREC",197,0)
 ;
"RTN","RCDPUREC",198,0)
 D LASTEDIT(RCDA)  ; update (#.11) LAST EDITED BY , (#.12) DATE/TIME LAST EDIT
"RTN","RCDPUREC",199,0)
 ;
"RTN","RCDPUREC",200,0)
 Q
"RTN","RCDPUREC",201,0)
 ;
"RTN","RCDPUREC",202,0)
 ; PRCA*4.5*298 - updated comments in LBT
"RTN","RCDPUREC",203,0)
LBT(Y) ; Determine if Y should be set to @99 in DR string to skip field #.18 ERA REFERENCE
"RTN","RCDPUREC",204,0)
 ; DR(1,344,2)="I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",205,0)
 ;  code below assumes DA,RCM3 are set
"RTN","RCDPUREC",206,0)
 N Z,Z0
"RTN","RCDPUREC",207,0)
 ; Z will be true if TYPE OF PAYMENT [4P:341.1] is EDI LOCKBOX
"RTN","RCDPUREC",208,0)
 S Z0=$G(^RCY(344,DA,0)),Z=($P(Z0,U,4)=$$LBEVENT^RCDPEU())
"RTN","RCDPUREC",209,0)
 ; (#.18) ERA REFERENCE [18P:344.4]
"RTN","RCDPUREC",210,0)
 ; Don't allow to edit ERA reference if worklist created it
"RTN","RCDPUREC",211,0)
 ;  ^DD(344.49,.02,0) = "RECEIPT #^P344'^RCY(344,^0;2^Q"
"RTN","RCDPUREC",212,0)
 I $P($G(^RCY(344.49,+$P(Z0,U,18),0)),U,2)=DA S Y="@99" Q
"RTN","RCDPUREC",213,0)
 ; only ask for ERA if not EDI lockbox and deposit # exists
"RTN","RCDPUREC",214,0)
 I $S(Z:1,1:'$P($G(^RCY(344,DA,0)),U,6)) S Y="@99" Q
"RTN","RCDPUREC",215,0)
 W !,RCM3  ; RCM,RCM1,RCM2,RCM3 set in SETV^RCDPURE1
"RTN","RCDPUREC",216,0)
 Q
"RTN","RCDPUREC",217,0)
 ;
"RTN","RCDPUREC",218,0)
 ; PRCA*4.5*298 - updated logic and comments in TYP
"RTN","RCDPUREC",219,0)
TYP(Y) ; Determine where to jump to in the 'type' edit of
"RTN","RCDPUREC",220,0)
 ; Y - passed by ref. from DR string logic
"RTN","RCDPUREC",221,0)
 ; DR(1,344,1)="@20;.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@22"";@21;.04////^S X=RCO4;I RCOE="""" S Y=""@23"";.17////^S X=RCOE;@23;W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM) S Y=""@20"";@22"
"RTN","RCDPUREC",222,0)
 ;  Assumes RCP,RCNO,RCN4,RCO4,DA defined
"RTN","RCDPUREC",223,0)
 N RCCHANGE,DIR
"RTN","RCDPUREC",224,0)
 I $S(RCN4=RCO4:1,(RCO4'=4)&(RCN4'=4)&(RCO4'=14)&(RCN4'=14):1,1:0) S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",225,0)
 ; To get here, the type was changed and it either was 4 or 14 OR is now 4 or 14
"RTN","RCDPUREC",226,0)
 S RCCHANGE=(RCN4'=RCO4)
"RTN","RCDPUREC",227,0)
 I RCCHANGE D  G:Y TYPQ
"RTN","RCDPUREC",228,0)
 .;If receipt Status is OPEN, EDI LOCKBOX can only be changed to CHECK/MO PAYMENT and vice-versa
"RTN","RCDPUREC",229,0)
 .I $P(^RCY(344,DA,0),"^",14),(RCO4=4&(RCN4'=14))!(RCO4=14&(RCN4'=4)) D  S Y=RCP Q
"RTN","RCDPUREC",230,0)
 ..S $P(^RCY(344,DA,0),"^",4)=RCO4
"RTN","RCDPUREC",231,0)
 ..W !!,"The Payment Type can only be changed to "_$S(RCO4=4:$$GET1^DIQ(341.1,14,.01),1:$$GET1^DIQ(341.1,4,.01)),$C(7),!
"RTN","RCDPUREC",232,0)
 .; Type can't be changed if the old type was EDI Lockbox and there is an ERA detail record associated with it
"RTN","RCDPUREC",233,0)
 .I RCO4=14,$P($G(^RCY(344,DA,0)),U,18) S Y=RCP+1 Q
"RTN","RCDPUREC",234,0)
 .; Type can't be changed to EDI Lockbox if receipt detail already exists
"RTN","RCDPUREC",235,0)
 .I RCN4=14,$O(^RCY(344,DA,1,0)) S Y=RCP+1 Q
"RTN","RCDPUREC",236,0)
 .; If payment type was EDI LOCKBOX and is to be changed to CHECK/MO PAYMENT (or vice-versa) confirm with user
"RTN","RCDPUREC",237,0)
 .I (RCO4=14&(RCN4=4))!(RCO4=4&(RCN4=14)) D  Q
"RTN","RCDPUREC",238,0)
 ..K DIR S DIR(0)="Y",DIR("A")="Are you sure you want to change Payment Type to "_$$GET1^DIQ(341.1,RCN4,.01),DIR("B")="NO"
"RTN","RCDPUREC",239,0)
 ..W ! D ^DIR W !
"RTN","RCDPUREC",240,0)
 ..I 'Y S $P(^RCY(344,DA,0),"^",4)=RCO4,Y=RCP Q
"RTN","RCDPUREC",241,0)
 ..S:Y Y=RCP+2 S:RCN4=14 Y=0
"RTN","RCDPUREC",242,0)
 ;
"RTN","RCDPUREC",243,0)
 I RCN4'=14 S Y=RCP+2
"RTN","RCDPUREC",244,0)
 ; fall through to TYPQ
"RTN","RCDPUREC",245,0)
TYPQ ;
"RTN","RCDPUREC",246,0)
 ; If type changed to EDI LOCKBOX, must have an EFT reference
"RTN","RCDPUREC",247,0)
 I '$G(Y) D
"RTN","RCDPUREC",248,0)
 .; If ERA is matched to EFT, don't allow to edit EFT
"RTN","RCDPUREC",249,0)
 .I $P($G(^RCY(344,DA,0)),U,17),$P($G(^(0)),U,18),$D(^RCY(344.31,"AERA",+$P($G(^RCY(344,DA,0)),U,18),+$P($G(^RCY(344,DA,0)),U,17))) S Y=RCP+2 Q
"RTN","RCDPUREC",250,0)
 .S RCNE=$$ASK17(DA) I 'RCNE S RCNO=1,Y=RCP+1 Q
"RTN","RCDPUREC",251,0)
 ;
"RTN","RCDPUREC",252,0)
 I $G(Y) S Y="@"_Y
"RTN","RCDPUREC",253,0)
 Q
"RTN","RCDPUREC",254,0)
 ;
"RTN","RCDPUREC",255,0)
LASTEDIT(DA) ;  set when receipt last edit
"RTN","RCDPUREC",256,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",257,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",258,0)
 S DR=".11////"_DUZ_";.12///NOW;"
"RTN","RCDPUREC",259,0)
 D ^DIE
"RTN","RCDPUREC",260,0)
 Q
"RTN","RCDPUREC",261,0)
 ;
"RTN","RCDPUREC",262,0)
 ;
"RTN","RCDPUREC",263,0)
MARKPROC(DA,FMSDOCNO) ;  mark receipt as processed, set receipt as closed,
"RTN","RCDPUREC",264,0)
 ;  store fms document number if passed
"RTN","RCDPUREC",265,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",266,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",267,0)
 S DR=".07////"_DUZ_";.08///NOW;.14////0;"
"RTN","RCDPUREC",268,0)
 I $G(FMSDOCNO)'="" S DR=DR_"200////"_FMSDOCNO_";"
"RTN","RCDPUREC",269,0)
 D ^DIE
"RTN","RCDPUREC",270,0)
 Q
"RTN","RCDPUREC",271,0)
 ;
"RTN","RCDPUREC",272,0)
FMSSTAT(RCRECTDA) ;  return the fms cr document ^ status ^ if sent before lockbox
"RTN","RCDPUREC",273,0)
 N FMSDOCNO,PRELOCK,STATUS
"RTN","RCDPUREC",274,0)
 ;  get the fms document from the receipt
"RTN","RCDPUREC",275,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPUREC",276,0)
 ;  if not on receipt, it may be earlier than lockbox and on deposit
"RTN","RCDPUREC",277,0)
 I FMSDOCNO="" S FMSDOCNO=$P($G(^RCY(344.1,+$P($G(^RCY(344,RCRECTDA,0)),"^",6),2)),"^") I FMSDOCNO'="" S PRELOCK=1
"RTN","RCDPUREC",278,0)
 S STATUS=$$STATUS^GECSSGET(FMSDOCNO)
"RTN","RCDPUREC",279,0)
 I STATUS=-1 S STATUS="NOT ENTERED"
"RTN","RCDPUREC",280,0)
 ;
"RTN","RCDPUREC",281,0)
 ;  if the cr document is entered, check to see if entered on line
"RTN","RCDPUREC",282,0)
 I FMSDOCNO'="",$P($G(^RCY(344,RCRECTDA,2)),"^",2) S STATUS="ON LINE ENTRY"
"RTN","RCDPUREC",283,0)
 ;
"RTN","RCDPUREC",284,0)
 ;  if the cr document is missing, set status to not sent
"RTN","RCDPUREC",285,0)
 I FMSDOCNO="" S FMSDOCNO="NOT SENT"
"RTN","RCDPUREC",286,0)
 ;
"RTN","RCDPUREC",287,0)
 Q FMSDOCNO_"^"_STATUS_"^"_$G(PRELOCK)
"RTN","RCDPUREC",288,0)
 ;
"RTN","RCDPUREC",289,0)
 ; PRCA*4.5*298 - updated comments in ASK17
"RTN","RCDPUREC",290,0)
ASK17(DA) ; function, Ask, return the EFT detail record IEN for a receipt
"RTN","RCDPUREC",291,0)
 ; DA = the ien of the RECEIPT (file 344)
"RTN","RCDPUREC",292,0)
 ; returns IEN in EDI THIRD PARTY EFT DETAIL (#344.3) or zero
"RTN","RCDPUREC",293,0)
 N DIR,X,Y
"RTN","RCDPUREC",294,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("?",1)="Select the EFT that contained the deposited money that this receipt details",DIR("?",2)="An EFT detail record can only be associated with one receipt"
"RTN","RCDPUREC",295,0)
 S DIR("?")="This is required if the type of payment is EDI LOCKBOX."
"RTN","RCDPUREC",296,0)
 S DIR("A")="  EFT DETAIL RECORD: ",DIR("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA)"
"RTN","RCDPUREC",297,0)
 S:$P($G(^RCY(344,DA,0)),U,17) DIR("B")=$P(^(0),U,17)
"RTN","RCDPUREC",298,0)
 D ^DIR K DIR
"RTN","RCDPUREC",299,0)
 I $D(DUOUT)!$D(DTOUT)!Y=""!(Y<0) Q 0
"RTN","RCDPUREC",300,0)
 Q +Y
"RTN","RCDPUREC",301,0)
 ;
"RTN","RCMSITE")
0^92^B8419776
"RTN","RCMSITE",1,0)
RCMSITE ;ALB/RRG - EDIT SITE PARAMETERS ;Jul 02, 2014@15:46:14
"RTN","RCMSITE",2,0)
V ;;4.5;Accounts Receivable;**173,236,253,298**;Mar 20, 1995;Build 121
"RTN","RCMSITE",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCMSITE",4,0)
 ;
"RTN","RCMSITE",5,0)
BEG ;Start editing site paramters
"RTN","RCMSITE",6,0)
 N DA,DIC,DIE,DLAYGO,DR,X,Y
"RTN","RCMSITE",7,0)
 ; edit SITE field (#.01) in AR SITE PARAMETER file (#342)
"RTN","RCMSITE",8,0)
 S DIC="^RC(342,",DIC(0)="QEAML",DLAYGO=342 D ^DIC I Y>0 S DA=+Y,DR=.01,DIE="^RC(342," D ^DIE
"RTN","RCMSITE",9,0)
 Q
"RTN","RCMSITE",10,0)
 ;
"RTN","RCMSITE",11,0)
ALC ;Edit ALC parameter
"RTN","RCMSITE",12,0)
 NEW DIC,DR,DA,Y
"RTN","RCMSITE",13,0)
 S DIE="^RC(342,",DA=1,DR=".07;31" D ^DIE
"RTN","RCMSITE",14,0)
 Q
"RTN","RCMSITE",15,0)
IRS ;Edit IRS OFFSET site parameters
"RTN","RCMSITE",16,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",17,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q
"RTN","RCMSITE",18,0)
 S DA=1,DR="[RCMS IRS]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",19,0)
Q Q
"RTN","RCMSITE",20,0)
STAT ;Edit NOTIFICATION site parameters
"RTN","RCMSITE",21,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",22,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q1
"RTN","RCMSITE",23,0)
 S DA=1,DR="[RCMS NOTIFICATION]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",24,0)
Q1 Q
"RTN","RCMSITE",25,0)
GRP ;Edit AR Group Parameters
"RTN","RCMSITE",26,0)
 NEW DIE,DR,DA,Y
"RTN","RCMSITE",27,0)
 F  W ! S DIC(0)="QEAML",DIC="^RC(342.1,",DLAYGO=342.1 D ^DIC K DIC G:Y<0 Q3 S DA=+Y,DIE="^RC(342.1,",DR=$P($G(^RC(342.2,+$P(^RC(342.1,+Y,0),"^",2),1)),"^") I DR]"" D ^DIE
"RTN","RCMSITE",28,0)
Q3 Q
"RTN","RCMSITE",29,0)
DEA ;Deactive an AR group
"RTN","RCMSITE",30,0)
 NEW DIE,DIC,DA,DR,Y,GRP
"RTN","RCMSITE",31,0)
 S DIC="^RC(342.1,",DIC(0)="QEAM",DIC("S")="I $P(^(0),""^"",2)'=7" D ^DIC Q:Y<0  S GRP=+Y
"RTN","RCMSITE",32,0)
 W ! S DIR("A")="Are you sure you want to Deactive Group '"_$P(^RC(342.1,GRP,0),"^")_"'",DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR
"RTN","RCMSITE",33,0)
 I 'Y W !!,"*** NO ACTION TAKEN ***" Q
"RTN","RCMSITE",34,0)
 I Y S DIE="^RC(342.1,",DA=GRP,DR=".02////^S X=7" D ^DIE W !!,"*** Group Deactivated ***"
"RTN","RCMSITE",35,0)
 Q
"RTN","RCMSITE",36,0)
SITE() ;Return site number
"RTN","RCMSITE",37,0)
 Q +$G(^DIC(4,+$P($G(^RC(342,1,0)),"^"),99))
"RTN","RCMSITE",38,0)
INT ;Print Inter/Admin/Pen effective report
"RTN","RCMSITE",39,0)
 NEW DIC,BY,FR,TO,FLDS,L
"RTN","RCMSITE",40,0)
 S DIC="^RC(342,",BY=.01,(FR,TO)="",FLDS="[RCMS INT/ADM/PEN]",L=0 D EN1^DIP
"RTN","RCMSITE",41,0)
 Q
"RTN","RCMSITE",42,0)
UPINT ;Update Rate site parameters
"RTN","RCMSITE",43,0)
 NEW DIE,DR,DA,Y,IOP
"RTN","RCMSITE",44,0)
 S IOP=ION D INT
"RTN","RCMSITE",45,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q4
"RTN","RCMSITE",46,0)
 F  W ! S DA=1,DR="[RCMS RATES]",DIE="^RC(342," D ^DIE Q:$D(Y)
"RTN","RCMSITE",47,0)
Q4 Q
"RTN","RCMSITE",48,0)
 ;
"RTN","RCMSITE",49,0)
EDILOCK() ; function, Update EDI Lockbox site parameters
"RTN","RCMSITE",50,0)
 ; returns 1 on success, else "^error message"
"RTN","RCMSITE",51,0)
 N RSLT S RSLT=""
"RTN","RCMSITE",52,0)
 I '$D(^RC(342,1,0)) D BEG
"RTN","RCMSITE",53,0)
 S:'$D(^RC(342,1,0)) RSLT="^no site defined"  ; can't continue
"RTN","RCMSITE",54,0)
 ;
"RTN","RCMSITE",55,0)
 Q:RSLT]"" RSLT
"RTN","RCMSITE",56,0)
 ;
"RTN","RCMSITE",57,0)
 N DA,DIE,DR,Y
"RTN","RCMSITE",58,0)
 S DA=1,DR="[RCMS EDI LOCKBOX]",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",59,0)
 S RSLT=$S($D(Y):"^user aborted",1:1)  ; if Y remains from ^DIE call
"RTN","RCMSITE",60,0)
 ;
"RTN","RCMSITE",61,0)
 Q RSLT  ; success
"RTN","RCMSITE",62,0)
 ;
"RTN","RCMSITE",63,0)
EDITRDDT ;Update # OF DAYS FOR RD ELIG CHG RPT site parameter
"RTN","RCMSITE",64,0)
 ;This is the number of days for the Rated Disability Eligibility
"RTN","RCMSITE",65,0)
 ;Change Report to be used when the report is scheduled to be run
"RTN","RCMSITE",66,0)
 ;on a recurring basis. (Added for Hold Debt to DMC Project)
"RTN","RCMSITE",67,0)
 N DIE,DR,DA,Y
"RTN","RCMSITE",68,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q6
"RTN","RCMSITE",69,0)
 S DA=1,DR="8.01",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",70,0)
Q6 Q
"RTN","RCMSITE",71,0)
 ;
"RTN","RCMSITE",72,0)
GETRDDAY() ;Return # OF DAYS FOR RD ELIG CHG RPT site parameter
"RTN","RCMSITE",73,0)
 Q $$GET1^DIQ(342,1_",",8.01)
"RTN","RCMSITE",74,0)
 ;
"RTN","RCMSITE",75,0)
EDITRDAY ;Update NUMBER OF DAYS FOR DMC REPORTS site parameter.
"RTN","RCMSITE",76,0)
 ;This is the number of days in the past bills for episodes
"RTN","RCMSITE",77,0)
 ;of care will be included for the following reports when scheduled by
"RTN","RCMSITE",78,0)
 ;IRM to be run on a recurring basis:
"RTN","RCMSITE",79,0)
 ;   DMC Debt Validity Report
"RTN","RCMSITE",80,0)
 ;   DMC Debt Validity Management Report
"RTN","RCMSITE",81,0)
 ;   Rated Disability Eligibility Change Report
"RTN","RCMSITE",82,0)
 ;The minimum value for this field is 365 days (1 year) and the maximum
"RTN","RCMSITE",83,0)
 ;value is 3650 days (10 years). If no value is added in this field the
"RTN","RCMSITE",84,0)
 ;report will default to 365 days. (Added for Hold Debt to DMC Project)
"RTN","RCMSITE",85,0)
 N DIE,DR,DA,Y
"RTN","RCMSITE",86,0)
 I '$D(^RC(342,1,0)) D BEG G:'$D(^RC(342,1,0)) Q7
"RTN","RCMSITE",87,0)
 S DA=1,DR="8.02",DIE="^RC(342," D ^DIE
"RTN","RCMSITE",88,0)
Q7 Q
"RTN","RCMSITE",89,0)
 ;
"RTN","RCMSITE",90,0)
GETRDAY() ;Return NUMBER OF DAYS FOR DMC REPORTS site parameter
"RTN","RCMSITE",91,0)
 Q $$GET1^DIQ(342,1_",",8.02)
"RTN","RCMSITE",92,0)
 ;
"SEC","^DIC",344.81,344.81,0,"AUDIT")
@
"SEC","^DIC",344.81,344.81,0,"DD")
@
"SEC","^DIC",344.81,344.81,0,"DEL")
@
"SEC","^DIC",344.81,344.81,0,"LAYGO")
@
"SEC","^DIC",344.81,344.81,0,"RD")
@
"SEC","^DIC",344.81,344.81,0,"WR")
@
"SEC","^DIC",344.82,344.82,0,"AUDIT")
@
"SEC","^DIC",344.82,344.82,0,"DD")
@
"SEC","^DIC",344.82,344.82,0,"DEL")
@
"SEC","^DIC",344.82,344.82,0,"LAYGO")
@
"SEC","^DIC",344.82,344.82,0,"RD")
@
"SEC","^DIC",344.82,344.82,0,"WR")
@
"UP",344.4,344.41,-1)
344.4^1
"UP",344.4,344.41,0)
344.41
"UP",344.4,344.48,-1)
344.4^8
"UP",344.4,344.48,0)
344.48
"UP",344.49,344.494,-1)
344.49^4
"UP",344.49,344.494,0)
344.494
"VER")
8.0^22.0
"^DD",344,344,.17,0)
EFT RECORD^*P344.31'^RCY(344.31,^0;17^S DIC("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA),$P($G(^RCY(344.31,+Y,0)),U,8)=0" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",344,344,.17,1,0)
^.1
"^DD",344,344,.17,1,1,0)
344^AEFT
"^DD",344,344,.17,1,1,1)
S ^RCY(344,"AEFT",$E(X,1,30),DA)=""
"^DD",344,344,.17,1,1,2)
K ^RCY(344,"AEFT",$E(X,1,30),DA)
"^DD",344,344,.17,1,1,3)
Do not delete
"^DD",344,344,.17,1,1,"DT")
3030228
"^DD",344,344,.17,3)
Enter the EFT from which this receipt detail record was generated
"^DD",344,344,.17,5,1,0)
344^.04^2
"^DD",344,344,.17,12)
1. An EFT record can only be associated with 1 EDI Lockbox type receipt.  2. Selection of a matched EFT cannot occur.  
"^DD",344,344,.17,12.1)
S DIC("S")="I $S('$O(^RCY(344,""AEFT"",+Y,0)):1,1:$O(^(0))=DA),$P($G(^RCY(344.31,+Y,0)),U,8)=0"
"^DD",344,344,.17,21,0)
^.001^2^2^3141202^^^
"^DD",344,344,.17,21,1,0)
If this is the detail receipt for a payment made via an EFT, this is the
"^DD",344,344,.17,21,2,0)
pointer to the individual EFT that was received.
"^DD",344,344,.17,"DT")
3141203
"^DD",344,344,.18,0)
ERA REFERENCE^P344.4'^RCY(344.4,^0;18^Q
"^DD",344,344,.18,3)
Enter the ERA record that will be used to populate this receipt detail.
"^DD",344,344,.18,21,0)
^.001^2^2^3141013^^^
"^DD",344,344,.18,21,1,0)
This is the pointer to the ERA record that will be associated with this
"^DD",344,344,.18,21,2,0)
receipt.
"^DD",344,344,.18,"DT")
3141013
"^DD",344.31,344.31,.04,0)
TRACE #^F^^0;4^K:$L(X)>50!($L(X)<3) X
"^DD",344.31,344.31,.04,1,0)
^.1^^0
"^DD",344.31,344.31,.04,3)
Answer must be 3-50 characters in length.
"^DD",344.31,344.31,.04,21,0)
^.001^2^2^3100621^^^
"^DD",344.31,344.31,.04,21,1,0)
This is the bank trace number assigned to the electronic funds transfer
"^DD",344.31,344.31,.04,21,2,0)
(EFT) by the payer's bank.
"^DD",344.31,344.31,.04,"DT")
3140630
"^DD",344.31,344.31,.13,0)
DATE RECEIVED^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.31,344.31,.13,1,0)
^.1
"^DD",344.31,344.31,.13,1,1,0)
344.31^ADR
"^DD",344.31,344.31,.13,1,1,1)
S ^RCY(344.31,"ADR",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.13,1,1,2)
K ^RCY(344.31,"ADR",$E(X,1,30),DA)
"^DD",344.31,344.31,.13,1,1,"%D",0)
^^2^2^3140618^
"^DD",344.31,344.31,.13,1,1,"%D",1,0)
This cross-reference is used by the ePayments software to find 
"^DD",344.31,344.31,.13,1,1,"%D",2,0)
transactions by the date they were received.
"^DD",344.31,344.31,.13,1,1,"DT")
3140304
"^DD",344.31,344.31,.13,3)
Enter the date this record was added to the system.
"^DD",344.31,344.31,.13,21,0)
^.001^1^1^3030128^^
"^DD",344.31,344.31,.13,21,1,0)
This is the date this record was added to the system.
"^DD",344.31,344.31,.13,"DT")
3140304
"^DD",344.4,344.4,.02,0)
TRACE NUMBER^F^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",344.4,344.4,.02,1,0)
^.1^^0
"^DD",344.4,344.4,.02,3)
Answer must be 3-50 characters in length.
"^DD",344.4,344.4,.02,21,0)
^.001^2^2^3100621^^^^
"^DD",344.4,344.4,.02,21,1,0)
This is the bank trace number assigned to the ERA received.  If the ERA
"^DD",344.4,344.4,.02,21,2,0)
was paid by paper check, this should be the check #.
"^DD",344.4,344.4,.02,"DT")
3141001
"^DD",344.4,344.4,.06,0)
PAYMENT FROM^F^^0;6^K:$L(X)>35!($L(X)<1) X
"^DD",344.4,344.4,.06,1,0)
^.1^^0
"^DD",344.4,344.4,.06,3)
Answer must be 1-35 characters in length.
"^DD",344.4,344.4,.06,21,0)
^.001^1^1^3141217^^
"^DD",344.4,344.4,.06,21,1,0)
This is the name of the insurance co as returned on the ERA.
"^DD",344.4,344.4,.06,"DT")
3141217
"^DD",344.4,344.4,.14,0)
ERA DETAIL POST STATUS^S^0:NOT POSTED;1:POSTED;2:MANUALLY POSTED;3:POSTING NOT NEEDED;4:NOT POSTED-REMOVED;5:PARTIAL;^0;14^Q
"^DD",344.4,344.4,.14,3)
Enter the code that corresponds to whether or not the ERA detail was posted and if so, if it was manually posted.
"^DD",344.4,344.4,.14,5,1,0)
344.4^.01^2
"^DD",344.4,344.4,.14,21,0)
^^3^3^3140225^
"^DD",344.4,344.4,.14,21,1,0)
This is a flag that indicates whether or not the receipt for the ERA has 
"^DD",344.4,344.4,.14,21,2,0)
been posted.  It is used to limit the choices when selecting ERAs for the 
"^DD",344.4,344.4,.14,21,3,0)
ERA Worklist option.
"^DD",344.4,344.4,.14,"DT")
3140307
"^DD",344.4,344.4,4.01,0)
AUTO-POST DATE^D^^4;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,4.01,1,0)
^.1^^0
"^DD",344.4,344.4,4.01,3)
Enter the date that this ERA was auto-posted.
"^DD",344.4,344.4,4.01,21,0)
^.001^5^5^3140606^^^
"^DD",344.4,344.4,4.01,21,1,0)
This date is set by the auto-posting process in the PRCA nightly job 
"^DD",344.4,344.4,4.01,21,2,0)
when a matching ERA is found for an EFT which is accepted by FMS.
"^DD",344.4,344.4,4.01,21,3,0)
 
"^DD",344.4,344.4,4.01,21,4,0)
This only applies if the ERA has no adjustments or interest charges and 
"^DD",344.4,344.4,4.01,21,5,0)
no pharmacy claims.
"^DD",344.4,344.4,4.01,"DT")
3140606
"^DD",344.4,344.4,4.02,0)
AUTO-POST STATUS^S^0:UNPOSTED;1:PARTIAL;2:COMPLETE;^4;2^Q
"^DD",344.4,344.4,4.02,1,0)
^.1
"^DD",344.4,344.4,4.02,1,1,0)
344.4^E
"^DD",344.4,344.4,4.02,1,1,1)
S ^RCY(344.4,"E",$E(X,1,30),DA)=""
"^DD",344.4,344.4,4.02,1,1,2)
K ^RCY(344.4,"E",$E(X,1,30),DA)
"^DD",344.4,344.4,4.02,1,1,"%D",0)
^^2^2^3140505^
"^DD",344.4,344.4,4.02,1,1,"%D",1,0)
This cross-reference is used to find ERA entries by the AUTO-POST STATUS 
"^DD",344.4,344.4,4.02,1,1,"%D",2,0)
for lookup and reporting purposes.
"^DD",344.4,344.4,4.02,1,1,"DT")
3131223
"^DD",344.4,344.4,4.02,3)
Enter the status for the ERA.
"^DD",344.4,344.4,4.02,21,0)
^.001^2^2^3140505^^
"^DD",344.4,344.4,4.02,21,1,0)
This field indicates if all the claim lines on an ERA have been posted as 
"^DD",344.4,344.4,4.02,21,2,0)
'TR' receipts to Accounts Receivable.
"^DD",344.4,344.4,4.02,"DT")
3140326
"^DD",344.4,344.4,4.03,0)
LATEST AUTO-DECREASE DATE^D^^4;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,4.03,1,0)
^.1^^0
"^DD",344.4,344.4,4.03,3)
Enter date that this ERA was last auto-decreased.
"^DD",344.4,344.4,4.03,21,0)
^.001^2^2^3140506^^
"^DD",344.4,344.4,4.03,21,1,0)
This is the date that the ERA was last processed for automatic decrease 
"^DD",344.4,344.4,4.03,21,2,0)
adjustments by the nightly process.
"^DD",344.4,344.4,4.03,"DT")
3140506
"^DD",344.4,344.4,8,0)
OTHER RECEIPT NUMBERS^344.48P^^8;0
"^DD",344.4,344.4,8,21,0)
^^3^3^3140506^
"^DD",344.4,344.4,8,21,1,0)
An auto-posted ERA can have multiple receipt numbers.  If there is more
"^DD",344.4,344.4,8,21,2,0)
than one receipt number for an ERA the subsequent receipt numbers are
"^DD",344.4,344.4,8,21,3,0)
stored in this sub-file.
"^DD",344.4,344.41,.24,0)
ECME #^F^^4;2^K:$L(X)>12!($L(X)<1) X
"^DD",344.4,344.41,.24,.1)
ELECTRONIC CLAIMS MANAGEMENT ENGINE NUMBER
"^DD",344.4,344.41,.24,1,0)
^.1^^-1
"^DD",344.4,344.41,.24,1,1,0)
344.41^ECME
"^DD",344.4,344.41,.24,1,1,1)
S ^RCY(344.4,DA(1),1,"ECME",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.24,1,1,2)
K ^RCY(344.4,DA(1),1,"ECME",$E(X,1,30),DA)
"^DD",344.4,344.41,.24,1,1,"%D",0)
^^1^1^3140505^
"^DD",344.4,344.41,.24,1,1,"%D",1,0)
This cross-reference is for locating the ECME number(s) for an ERA.
"^DD",344.4,344.41,.24,1,1,"DT")
3140113
"^DD",344.4,344.41,.24,3)
Answer must be 1-12 characters in length.
"^DD",344.4,344.41,.24,21,0)
^^2^2^3140505^
"^DD",344.4,344.41,.24,21,1,0)
The ELECTRONIC CLAIMS MANAGEMENT ENGINE NUMBER is used to track an ERA 
"^DD",344.4,344.41,.24,21,2,0)
for matching, posting, and reporting claims.
"^DD",344.4,344.41,.24,"DT")
3140505
"^DD",344.4,344.41,.25,0)
RECEIPT^P344'^RCY(344,^4;3^Q
"^DD",344.4,344.41,.25,1,0)
^.1
"^DD",344.4,344.41,.25,1,1,0)
344.41^RECEIPT
"^DD",344.4,344.41,.25,1,1,1)
S ^RCY(344.4,DA(1),1,"RECEIPT",$E(X,1,30),DA)=""
"^DD",344.4,344.41,.25,1,1,2)
K ^RCY(344.4,DA(1),1,"RECEIPT",$E(X,1,30),DA)
"^DD",344.4,344.41,.25,1,1,"DT")
3140804
"^DD",344.4,344.41,.25,1,2,0)
344.4^H
"^DD",344.4,344.41,.25,1,2,1)
S ^RCY(344.4,"H",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,.25,1,2,2)
K ^RCY(344.4,"H",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,.25,1,2,"%D",0)
^^2^2^3150110^
"^DD",344.4,344.41,.25,1,2,"%D",1,0)
This cross reference is for the RECEIPT that is stored at each 
"^DD",344.4,344.41,.25,1,2,"%D",2,0)
of the individual claim lines within an ERA.
"^DD",344.4,344.41,.25,1,2,"DT")
3150110
"^DD",344.4,344.41,.25,3)
Select the AR BATCH PAYMENT entry associated with this ERA DETAIL sub-file entry.
"^DD",344.4,344.41,.25,21,0)
^^1^1^3140505^
"^DD",344.4,344.41,.25,21,1,0)
This is the AR BATCH PAYMENT entry that has the associated Receipt Number.
"^DD",344.4,344.41,.25,"DT")
3150110
"^DD",344.4,344.41,5,0)
AUTO-POST REJECTION REASON^S^1:FIELD VERIFICATION FAILED;2:CLAIM ALREADY COMPLETED/CLOSED;3:PAYMENT EXCEEDS CLAIM BALANCE;4:REFERRED TO GENERAL COUNCIL;5:REJECTED (COMPLETED/CLOSED);6:PAYMENT AMOUNT IS NEGATIVE;7:REJECTED (GENERAL COUNCIL);^5;1^Q
"^DD",344.4,344.41,5,3)
Enter the reason that auto-post rejected this line.
"^DD",344.4,344.41,5,21,0)
^.001^2^2^3140506^^
"^DD",344.4,344.41,5,21,1,0)
This field describes the reason that caused the ERA detail line to be
"^DD",344.4,344.41,5,21,2,0)
rejected by the ERA auto-posting process in the AR nightly job.
"^DD",344.4,344.41,5,"DT")
3140728
"^DD",344.4,344.41,6,0)
MARK FOR AUTO-POST^S^0:NO;1:YES;^5;2^Q
"^DD",344.4,344.41,6,1,0)
^.1
"^DD",344.4,344.41,6,1,1,0)
344.4^AP
"^DD",344.4,344.41,6,1,1,1)
S ^RCY(344.4,"AP",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,6,1,1,2)
K ^RCY(344.4,"AP",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,6,1,1,"%D",0)
^^3^3^3140522^
"^DD",344.4,344.41,6,1,1,"%D",1,0)
This cross reference is used to identify ERA claim lines which have been
"^DD",344.4,344.41,6,1,1,"%D",2,0)
marked for auto-post in the EDI Lockbox option 'Auto-Post Awaiting
"^DD",344.4,344.41,6,1,1,"%D",3,0)
Resolution'.
"^DD",344.4,344.41,6,1,1,"DT")
3140521
"^DD",344.4,344.41,6,3)
Enter YES if the EEOB line item in the ERA is marked for auto-posting.
"^DD",344.4,344.41,6,21,0)
^.001^2^2^3140506^^^
"^DD",344.4,344.41,6,21,1,0)
This flag identifies if the EEOB line item in the ERA is marked for
"^DD",344.4,344.41,6,21,2,0)
automatic posting to a receipt during the nightly job process.
"^DD",344.4,344.41,6,"DT")
3140521
"^DD",344.4,344.41,7,0)
AUTO-DECREASE INDICATOR^S^1:YES;^5;3^Q
"^DD",344.4,344.41,7,3)
Enter Yes to indicate that the claim is auto-decreased.
"^DD",344.4,344.41,7,21,0)
^.001^2^2^3140506^^
"^DD",344.4,344.41,7,21,1,0)
This field indicates that the claim on this ERA DETAIL line has been
"^DD",344.4,344.41,7,21,2,0)
reviewed by the nightly decrease adjustment process.
"^DD",344.4,344.41,7,"DT")
3140506
"^DD",344.4,344.41,8,0)
AUTO-DECREASE AMOUNT^NJ7,2^^5;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999)!(X<0) X
"^DD",344.4,344.41,8,3)
Type a dollar amount between 0 and 9999, 2 decimal digits.
"^DD",344.4,344.41,8,21,0)
^.001^3^3^3140506^^
"^DD",344.4,344.41,8,21,1,0)
This is the dollar amount of the decrease adjustment applied to the claim 
"^DD",344.4,344.41,8,21,2,0)
on this ERA DETAIL line by the nightly automatic decrease adjustment 
"^DD",344.4,344.41,8,21,3,0)
process.
"^DD",344.4,344.41,8,"DT")
3140506
"^DD",344.4,344.41,9,0)
AUTO-POST DATE^D^^5;5^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",344.4,344.41,9,1,0)
^.1
"^DD",344.4,344.41,9,1,1,0)
344.4^F
"^DD",344.4,344.41,9,1,1,1)
S ^RCY(344.4,"F",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,9,1,1,2)
K ^RCY(344.4,"F",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,9,1,1,"%D",0)
^^2^2^3140326^
"^DD",344.4,344.41,9,1,1,"%D",1,0)
This cross reference is for the auto-posting date of individual claim
"^DD",344.4,344.41,9,1,1,"%D",2,0)
lines within an ERA. 
"^DD",344.4,344.41,9,1,1,"DT")
3140326
"^DD",344.4,344.41,9,3)
Enter the date on which this claim was auto-posted. 
"^DD",344.4,344.41,9,21,0)
^^2^2^3140326^^
"^DD",344.4,344.41,9,21,1,0)
This is the date on which the claim line was auto-posted by the AR Nightly
"^DD",344.4,344.41,9,21,2,0)
process.
"^DD",344.4,344.41,9,"DT")
3140326
"^DD",344.4,344.41,9.01,0)
PHARMACY CLAIM COMMENT^F^^9;1^K:$L(X)>80!($L(X)<3) X
"^DD",344.4,344.41,9.01,3)
Answer must be 3-80 characters.
"^DD",344.4,344.41,9.01,21,0)
^^2^2^3140227^
"^DD",344.4,344.41,9.01,21,1,0)
This field is informational and is to aid users in the processing 
"^DD",344.4,344.41,9.01,21,2,0)
of pharmacy claims.
"^DD",344.4,344.41,9.01,"DT")
3140226
"^DD",344.4,344.41,10,0)
AUTO-DECREASE DATE^D^^5;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.41,10,1,0)
^.1
"^DD",344.4,344.41,10,1,1,0)
344.4^G
"^DD",344.4,344.41,10,1,1,1)
S ^RCY(344.4,"G",$E(X,1,30),DA(1),DA)=""
"^DD",344.4,344.41,10,1,1,2)
K ^RCY(344.4,"G",$E(X,1,30),DA(1),DA)
"^DD",344.4,344.41,10,1,1,"%D",0)
^^2^2^3140811^
"^DD",344.4,344.41,10,1,1,"%D",1,0)
This cross reference is for the auto-decrease date of individual claim
"^DD",344.4,344.41,10,1,1,"%D",2,0)
lines within an ERA. 
"^DD",344.4,344.41,10,1,1,"DT")
3140326
"^DD",344.4,344.41,10,3)
Enter the date on which this claim was auto-decreased.
"^DD",344.4,344.41,10,21,0)
^.001^2^2^3140506^^^
"^DD",344.4,344.41,10,21,1,0)
This is the date on which the claim line was auto-decreased by the AR
"^DD",344.4,344.41,10,21,2,0)
Nightly process.
"^DD",344.4,344.41,10,"DT")
3140506
"^DD",344.4,344.48,0)
OTHER RECEIPT NUMBERS SUB-FIELD^^.01^1
"^DD",344.4,344.48,0,"DT")
3140212
"^DD",344.4,344.48,0,"IX","B",344.48,.01)

"^DD",344.4,344.48,0,"NM","OTHER RECEIPT NUMBERS")

"^DD",344.4,344.48,0,"UP")
344.4
"^DD",344.4,344.48,.01,0)
OTHER RECEIPT NUMBER^MP344'^RCY(344,^0;1^Q
"^DD",344.4,344.48,.01,1,0)
^.1
"^DD",344.4,344.48,.01,1,1,0)
344.48^B
"^DD",344.4,344.48,.01,1,1,1)
S ^RCY(344.4,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",344.4,344.48,.01,1,1,2)
K ^RCY(344.4,DA(1),8,"B",$E(X,1,30),DA)
"^DD",344.4,344.48,.01,3)
Enter the subsequent receipt number assigned to EEOB line(s) after initial auto-post .
"^DD",344.4,344.48,.01,21,0)
^.001^2^2^3140506^^^
"^DD",344.4,344.48,.01,21,1,0)
This is the receipt created to record the detail of the ERA for AR
"^DD",344.4,344.48,.01,21,2,0)
posting.  
"^DD",344.4,344.48,.01,"DT")
3140225
"^DD",344.49,344.49,4,0)
OTHER RECEIPT NUMBERS^344.494P^^4;0
"^DD",344.49,344.49,4,21,0)
^^2^2^3140505^
"^DD",344.49,344.49,4,21,1,0)
This sub-file is used to store additional receipt information for this 
"^DD",344.49,344.49,4,21,2,0)
entry.
"^DD",344.49,344.494,0)
OTHER RECEIPT NUMBERS SUB-FIELD^^.01^1
"^DD",344.49,344.494,0,"DT")
3140212
"^DD",344.49,344.494,0,"IX","B",344.494,.01)

"^DD",344.49,344.494,0,"NM","OTHER RECEIPT NUMBERS")

"^DD",344.49,344.494,0,"UP")
344.49
"^DD",344.49,344.494,.01,0)
OTHER RECEIPT NUMBER^MP344'^RCY(344,^0;1^Q
"^DD",344.49,344.494,.01,1,0)
^.1
"^DD",344.49,344.494,.01,1,1,0)
344.494^B
"^DD",344.49,344.494,.01,1,1,1)
S ^RCY(344.49,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",344.49,344.494,.01,1,1,2)
K ^RCY(344.49,DA(1),4,"B",$E(X,1,30),DA)
"^DD",344.49,344.494,.01,3)
Enter a Receipt Number from the AR BATCH PAYMENT file (#344).
"^DD",344.49,344.494,.01,21,0)
^^1^1^3140505^
"^DD",344.49,344.494,.01,21,1,0)
This is an additional Receipt Number related to this entry.
"^DD",344.49,344.494,.01,"DT")
3140212
"^DD",344.6,344.6,0)
FIELD^^2^9
"^DD",344.6,344.6,0,"DDA")
N
"^DD",344.6,344.6,0,"DT")
3140505
"^DD",344.6,344.6,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",344.6,344.6,0,"IX","B",344.6,.01)

"^DD",344.6,344.6,0,"IX","EXMDDECR",344.6,.07)

"^DD",344.6,344.6,0,"IX","EXMDPOST",344.6,.06)

"^DD",344.6,344.6,0,"NM","RCDPE AUTO-PAY EXCLUSION")

"^DD",344.6,344.6,0,"PT",344.82,1.01)

"^DD",344.6,344.6,0,"VRPK")
PRCA
"^DD",344.6,344.6,.01,0)
PAYER NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",344.6,344.6,.01,1,0)
^.1
"^DD",344.6,344.6,.01,1,1,0)
344.6^B
"^DD",344.6,344.6,.01,1,1,1)
S ^RCY(344.6,"B",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.01,1,1,2)
K ^RCY(344.6,"B",$E(X,1,30),DA)
"^DD",344.6,344.6,.01,3)
Answer must be 3 to 60 characters. This field should only be populated programmatically.
"^DD",344.6,344.6,.01,21,0)
^.001^2^2^3140506^^^^
"^DD",344.6,344.6,.01,21,1,0)
This is the payer name whose settings are defined by this entry. This 
"^DD",344.6,344.6,.01,21,2,0)
field is programmatically generated and should never be updated by a user.
"^DD",344.6,344.6,.01,"DT")
3140108
"^DD",344.6,344.6,.02,0)
PAYER ID^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",344.6,344.6,.02,1,0)
^.1^^0
"^DD",344.6,344.6,.02,3)
Answer must be 1 to 30 characters.  This field should only be updated programmatically.
"^DD",344.6,344.6,.02,21,0)
^.001^3^3^3140505^^^
"^DD",344.6,344.6,.02,21,1,0)
The PAYER ID contained here along with the PAYER NAME provide a unique 
"^DD",344.6,344.6,.02,21,2,0)
identifier for this entry. This field is programmatically updated. It 
"^DD",344.6,344.6,.02,21,3,0)
should never be edited by a user.
"^DD",344.6,344.6,.02,"DT")
3140827
"^DD",344.6,344.6,.03,0)
DATE ADDED^D^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",344.6,344.6,.03,3)
Answer must be a date with optional time, imprecise dates allowed.  This field should only be updated programmatically.
"^DD",344.6,344.6,.03,21,0)
^.001^3^3^3140505^^^^
"^DD",344.6,344.6,.03,21,1,0)
This is the date the payer first sent an ERA into the system. This field 
"^DD",344.6,344.6,.03,21,2,0)
date will be programmatically updated. It should never be modified by a 
"^DD",344.6,344.6,.03,21,3,0)
user.
"^DD",344.6,344.6,.03,"DT")
3140505
"^DD",344.6,344.6,.04,0)
UPDATED BY^P200'^VA(200,^0;4^Q
"^DD",344.6,344.6,.04,3)
Enter the user who last modified the parameters.
"^DD",344.6,344.6,.04,5,1,0)
344.6^.07^3
"^DD",344.6,344.6,.04,5,2,0)
344.6^.06^3
"^DD",344.6,344.6,.04,9)
^
"^DD",344.6,344.6,.04,21,0)
^^4^4^3140505^
"^DD",344.6,344.6,.04,21,1,0)
This is the last user to modify this record. 
"^DD",344.6,344.6,.04,21,2,0)
If the value is POSTMASTER, then the last modification was performed by
"^DD",344.6,344.6,.04,21,3,0)
the nightly batch job, or by post-installation processing when the file
"^DD",344.6,344.6,.04,21,4,0)
was initially populated.
"^DD",344.6,344.6,.04,23,0)
^^1^1^3140505^
"^DD",344.6,344.6,.04,23,1,0)
This field has a trigger from two fields.
"^DD",344.6,344.6,.04,"DT")
3140108
"^DD",344.6,344.6,.05,0)
DATE LAST UPDATED^D^^0;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",344.6,344.6,.05,3)
Enter the date and optional time of the last update.  This field is populated automatically and should not be edited.
"^DD",344.6,344.6,.05,5,1,0)
344.6^.06^2
"^DD",344.6,344.6,.05,5,2,0)
344.6^.07^2
"^DD",344.6,344.6,.05,9)
^
"^DD",344.6,344.6,.05,21,0)
^.001^1^1^3140505^^^^
"^DD",344.6,344.6,.05,21,1,0)
The date this record was last updated or created.
"^DD",344.6,344.6,.05,23,0)
^.001^1^1^3140505^^^
"^DD",344.6,344.6,.05,23,1,0)
This field is populated by a trigger.
"^DD",344.6,344.6,.05,"DT")
3140505
"^DD",344.6,344.6,.06,0)
EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q
"^DD",344.6,344.6,.06,1,0)
^.1
"^DD",344.6,344.6,.06,1,1,0)
344.6^EXMDPOST
"^DD",344.6,344.6,.06,1,1,1)
S ^RCY(344.6,"EXMDPOST",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.06,1,1,2)
K ^RCY(344.6,"EXMDPOST",$E(X,1,30),DA)
"^DD",344.6,344.6,.06,1,1,"%D",0)
^^1^1^3140505^
"^DD",344.6,344.6,.06,1,1,"%D",1,0)
Used to locate entries by the auto-posting status.
"^DD",344.6,344.6,.06,1,1,"DT")
3140108
"^DD",344.6,344.6,.06,1,2,0)
^^TRIGGER^344.6^.05
"^DD",344.6,344.6,.06,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RCY(344.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% S DIH=$G(^RCY(344.6,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=344.6,DIG=.05 D ^DICR
"^DD",344.6,344.6,.06,1,2,2)
Q
"^DD",344.6,344.6,.06,1,2,"%D",0)
^.101^1^1^3140505^^^
"^DD",344.6,344.6,.06,1,2,"%D",1,0)
Sets the DATE LAST UPDATED to NOW.
"^DD",344.6,344.6,.06,1,2,"CREATE VALUE")
NOW
"^DD",344.6,344.6,.06,1,2,"DELETE VALUE")
NO EFFECT
"^DD",344.6,344.6,.06,1,2,"DT")
3140108
"^DD",344.6,344.6,.06,1,2,"FIELD")
DATE LAST UPDATED
"^DD",344.6,344.6,.06,1,3,0)
^^TRIGGER^344.6^.04
"^DD",344.6,344.6,.06,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RCY(344.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DUZ S DIH=$G(^RCY(344.6,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=344.6,DIG=.04 D ^DICR
"^DD",344.6,344.6,.06,1,3,2)
Q
"^DD",344.6,344.6,.06,1,3,"%D",0)
^^1^1^3140505^
"^DD",344.6,344.6,.06,1,3,"%D",1,0)
Used to set UPDATED BY to the User who changed the status.
"^DD",344.6,344.6,.06,1,3,"CREATE VALUE")
S X=DUZ
"^DD",344.6,344.6,.06,1,3,"DELETE VALUE")
NO EFFECT
"^DD",344.6,344.6,.06,1,3,"DT")
3140109
"^DD",344.6,344.6,.06,1,3,"FIELD")
UPDATED BY
"^DD",344.6,344.6,.06,3)
Enter Yes to disable auto-posting of medical claims for this payer. Otherwise enter No.
"^DD",344.6,344.6,.06,21,0)
^.001^3^3^3140506^^
"^DD",344.6,344.6,.06,21,1,0)
This field is used to enable or disable auto-posting of medical claims 
"^DD",344.6,344.6,.06,21,2,0)
for a specified payer. When set to Yes (1) auto-posting is disabled. When 
"^DD",344.6,344.6,.06,21,3,0)
No (0) auto-posting is enabled.
"^DD",344.6,344.6,.06,"DT")
3140224
"^DD",344.6,344.6,.07,0)
EXCLUDE MED CLAIMS DECREASE^S^0:No;1:Yes;^0;7^Q
"^DD",344.6,344.6,.07,1,0)
^.1
"^DD",344.6,344.6,.07,1,1,0)
344.6^EXMDDECR
"^DD",344.6,344.6,.07,1,1,1)
S ^RCY(344.6,"EXMDDECR",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.07,1,1,2)
K ^RCY(344.6,"EXMDDECR",$E(X,1,30),DA)
"^DD",344.6,344.6,.07,1,1,"%D",0)
^^1^1^3140505^
"^DD",344.6,344.6,.07,1,1,"%D",1,0)
Used to locate entries by the EXCLUDE MED CLAIMS DECREASE status.
"^DD",344.6,344.6,.07,1,1,"DT")
3140108
"^DD",344.6,344.6,.07,1,2,0)
^^TRIGGER^344.6^.05
"^DD",344.6,344.6,.07,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RCY(344.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% S DIH=$G(^RCY(344.6,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=344.6,DIG=.05 D ^DICR
"^DD",344.6,344.6,.07,1,2,2)
Q
"^DD",344.6,344.6,.07,1,2,"%D",0)
^^1^1^3140505^
"^DD",344.6,344.6,.07,1,2,"%D",1,0)
Sets DATE LAST UPDATED to NOW.
"^DD",344.6,344.6,.07,1,2,"CREATE VALUE")
NOW
"^DD",344.6,344.6,.07,1,2,"DELETE VALUE")
NO EFFECT
"^DD",344.6,344.6,.07,1,2,"DT")
3140108
"^DD",344.6,344.6,.07,1,2,"FIELD")
DATE LAST 
"^DD",344.6,344.6,.07,1,3,0)
^^TRIGGER^344.6^.04
"^DD",344.6,344.6,.07,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RCY(344.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DUZ S DIH=$G(^RCY(344.6,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=344.6,DIG=.04 D ^DICR
"^DD",344.6,344.6,.07,1,3,2)
Q
"^DD",344.6,344.6,.07,1,3,"%D",0)
^^1^1^3140505^
"^DD",344.6,344.6,.07,1,3,"%D",1,0)
Sets UPDATED BY to the User who edited the status.
"^DD",344.6,344.6,.07,1,3,"CREATE VALUE")
S X=DUZ
"^DD",344.6,344.6,.07,1,3,"DELETE VALUE")
NO EFFECT
"^DD",344.6,344.6,.07,1,3,"DT")
3140109
"^DD",344.6,344.6,.07,1,3,"FIELD")
UPDATED BY
"^DD",344.6,344.6,.07,3)
Enter Yes to disable auto-decreasing of medical claims for this payer. Otherwise enter No.
"^DD",344.6,344.6,.07,21,0)
^^3^3^3140108^
"^DD",344.6,344.6,.07,21,1,0)
This field is used to enable or disable auto-decreasing of medical claims 
"^DD",344.6,344.6,.07,21,2,0)
for a specified payer. When set to Yes (1) auto-decreasing is disabled.  
"^DD",344.6,344.6,.07,21,3,0)
When No (0) auto-decreasing is enabled.
"^DD",344.6,344.6,.07,"DT")
3140109
"^DD",344.6,344.6,1,0)
AUTO-POST COMMENT^F^^1;1^K:$L(X)>72!($L(X)<3) X
"^DD",344.6,344.6,1,3)
Comment must be 3-72 characters in length.
"^DD",344.6,344.6,1,21,0)
^^2^2^3140206^
"^DD",344.6,344.6,1,21,1,0)
Required comment when payer is excluded from auto-posting. This is 
"^DD",344.6,344.6,1,21,2,0)
cleared when the auto-post exclusion is reset.
"^DD",344.6,344.6,1,"DT")
3140505
"^DD",344.6,344.6,2,0)
AUTO-DECREASE COMMENT^F^^2;1^K:$L(X)>72!($L(X)<3) X
"^DD",344.6,344.6,2,3)
Comment must be 3-72 characters in length.
"^DD",344.6,344.6,2,21,0)
^^2^2^3140206^
"^DD",344.6,344.6,2,21,1,0)
Required comment when payer is excluded from auto-decreasing. This is 
"^DD",344.6,344.6,2,21,2,0)
cleared when the auto-decreasing exclusion is reset.
"^DD",344.6,344.6,2,"DT")
3140505
"^DD",344.61,344.61,0)
FIELD^^.09^15
"^DD",344.61,344.61,0,"DDA")
N
"^DD",344.61,344.61,0,"DT")
3141119
"^DD",344.61,344.61,0,"IX","B",344.61,.01)

"^DD",344.61,344.61,0,"NM","RCDPE PARAMETER")

"^DD",344.61,344.61,0,"VRPK")
PRCA
"^DD",344.61,344.61,.01,0)
SITE^RP4'X^DIC(4,^0;1^S DINUM=1
"^DD",344.61,344.61,.01,.1)
SITE FOR ACCOUNTS RECEIVABLE ACTIVITY TRACKING
"^DD",344.61,344.61,.01,1,0)
^.1
"^DD",344.61,344.61,.01,1,1,0)
344.61^B
"^DD",344.61,344.61,.01,1,1,1)
S ^RCY(344.61,"B",$E(X,1,30),DA)=""
"^DD",344.61,344.61,.01,1,1,2)
K ^RCY(344.61,"B",$E(X,1,30),DA)
"^DD",344.61,344.61,.01,3)
Enter the site from the INSTITUTION file (#4).  Cannot be edited by the user.
"^DD",344.61,344.61,.01,21,0)
^^6^6^3140506^
"^DD",344.61,344.61,.01,21,1,0)
This is the site for which the Accounts Receivable activity will be
"^DD",344.61,344.61,.01,21,2,0)
tracked.  A station can only have one site defined and multiple divisional
"^DD",344.61,344.61,.01,21,3,0)
sites are not supported.
"^DD",344.61,344.61,.01,21,4,0)
                                 
"^DD",344.61,344.61,.01,21,5,0)
This identifies charges or events to a site in the event that information
"^DD",344.61,344.61,.01,21,6,0)
is shared or sent to a centralized system.
"^DD",344.61,344.61,.01,23,0)
^.001^2^2^3140506^^^
"^DD",344.61,344.61,.01,23,1,0)
There can only be one entry.  The value of DINUM is set to 1 to enforce 
"^DD",344.61,344.61,.01,23,2,0)
this.
"^DD",344.61,344.61,.01,"DT")
3140506
"^DD",344.61,344.61,.02,0)
AUTO-POST MED CLAIMS ENABLED^S^0:No;1:Yes;^0;2^Q
"^DD",344.61,344.61,.02,.1)
ENABLE AUTO-POSTING OF MEDICAL CLAIMS (Y/N): 
"^DD",344.61,344.61,.02,3)
Select Yes to enable auto-posting of medical claims or No to disable. 
"^DD",344.61,344.61,.02,21,0)
^.001^1^1^3140506^^
"^DD",344.61,344.61,.02,21,1,0)
Determines if auto-posting of medical claims is enabled for this site.
"^DD",344.61,344.61,.02,"DT")
3140506
"^DD",344.61,344.61,.03,0)
AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q
"^DD",344.61,344.61,.03,.1)
ENABLE AUTO-DECREASE OF MEDICAL CLAIMS (Y/N): 
"^DD",344.61,344.61,.03,3)
Select Yes to enable auto-decreasing of medical claim amount or No to disable.
"^DD",344.61,344.61,.03,21,0)
^.001^2^2^3140506^^
"^DD",344.61,344.61,.03,21,1,0)
Determines if a medical claim amount can be auto-decreased during the 
"^DD",344.61,344.61,.03,21,2,0)
auto-post processing.
"^DD",344.61,344.61,.03,"DT")
3140516
"^DD",344.61,344.61,.04,0)
AUTO-DECREASE MED DAYS DEFAULT^NJ1,0^^0;4^K:+X'=X!(X>7)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.61,344.61,.04,.1)
NUMBER OF DAYS TO WAIT BEFORE AUTO-DECREASE (0-7): 
"^DD",344.61,344.61,.04,3)
Type a number between 0 and 7, 0 decimal digits.
"^DD",344.61,344.61,.04,21,0)
^.001^3^3^3140506^^
"^DD",344.61,344.61,.04,21,1,0)
This parameter determines the default number of days to wait before 
"^DD",344.61,344.61,.04,21,2,0)
applying the auto-decrease adjustment to medical claims being processed by
"^DD",344.61,344.61,.04,21,3,0)
the auto-post processing.
"^DD",344.61,344.61,.04,"DT")
3140506
"^DD",344.61,344.61,.05,0)
AUTO-DECREASE MED AMT DEFAULT^NJ4,0^^0;5^K:+X'=X!(X>1500)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.61,344.61,.05,.1)
MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE (1-1500): 
"^DD",344.61,344.61,.05,3)
Type a number between 1 and 1500, 0 decimal digits.
"^DD",344.61,344.61,.05,21,0)
^.001^7^7^3140506^^
"^DD",344.61,344.61,.05,21,1,0)
This parameter allows sites to specify the claim dollar amount maximum of 
"^DD",344.61,344.61,.05,21,2,0)
an automatic decrease adjustment that is made for a third party medical
"^DD",344.61,344.61,.05,21,3,0)
claims, if auto-posting and auto-decrease of third party medical claims is
"^DD",344.61,344.61,.05,21,4,0)
turned on for the site. This parameter will default to null and require a
"^DD",344.61,344.61,.05,21,5,0)
response from 1 to 1500 dollars for the parameter question to allow sites
"^DD",344.61,344.61,.05,21,6,0)
to specify the claim dollar amount maximum of an automatic decrease
"^DD",344.61,344.61,.05,21,7,0)
adjustment that is made for third party medical claims.
"^DD",344.61,344.61,.05,"DT")
3140516
"^DD",344.61,344.61,.06,0)
MEDICAL EFT POST PREVENT DAYS^NJ2,0^^0;6^K:+X'=X!(X>99)!(X<14)!(X?.E1"."1N.N) X
"^DD",344.61,344.61,.06,.1)
NUMBER OF DAYS (AGE) OF UNPOSTED MEDICAL EFTS TO PREVENT POSTING: 
"^DD",344.61,344.61,.06,3)
Enter the number of days an EFT can age before preventing newer EFTs (14-99).
"^DD",344.61,344.61,.06,21,0)
^^6^6^3140516^
"^DD",344.61,344.61,.06,21,1,0)
The number of calendar days beyond which un-posted medical payments 
"^DD",344.61,344.61,.06,21,2,0)
(EFTs) will prevent the user from posting newer medical EFTs without 
"^DD",344.61,344.61,.06,21,3,0)
posting the older payments first.
"^DD",344.61,344.61,.06,21,4,0)
 
"^DD",344.61,344.61,.06,21,5,0)
A value of 21 is the initial default.  The user can reset the value to a 
"^DD",344.61,344.61,.06,21,6,0)
number from 14 to 99, inclusive, but cannot delete the value.
"^DD",344.61,344.61,.06,"DT")
3140506
"^DD",344.61,344.61,.07,0)
PHARMACY EFT POST PREVENT DAYS^NJ3,0^^0;7^K:+X'=X!(X>999)!(X<21)!(X?.E1"."1N.N) X
"^DD",344.61,344.61,.07,.1)
NUMBER OF DAYS (AGE) OF UNPOSTED PHARMACY EFTS TO PREVENT POSTING: 
"^DD",344.61,344.61,.07,3)
Type a number between 21 and 999, 0 decimal digits.
"^DD",344.61,344.61,.07,21,0)
^^6^6^3141119^
"^DD",344.61,344.61,.07,21,1,0)
The number of calendar days beyond which unposted pharmacy payments 
"^DD",344.61,344.61,.07,21,2,0)
(EFTs) will prevent the user from posting newer pharmacy EFTs without 
"^DD",344.61,344.61,.07,21,3,0)
posting the older payments first.
"^DD",344.61,344.61,.07,21,4,0)
 
"^DD",344.61,344.61,.07,21,5,0)
The user can reset the value to a number between 21 and 999, inclusive,
"^DD",344.61,344.61,.07,21,6,0)
but the user cannot delete the value.
"^DD",344.61,344.61,.07,"DT")
3141119
"^DD",344.61,344.61,.08,0)
LAST UPDATE PAYER EXCLUSIONS^D^^0;8^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.61,344.61,.08,.1)
LAST UPDATE TO RCDPE AUTO-PAY EXCLUSION FILE (#344.6)
"^DD",344.61,344.61,.08,3)
Enter the date and time that the RCDPE AUTO-PAY EXCLUSION file (#344.6) was updated.
"^DD",344.61,344.61,.08,21,0)
^.001^2^2^3140506^^
"^DD",344.61,344.61,.08,21,1,0)
This field is the date/time the RCDPE AUTO-PAY EXCLUSION file (#344.6) was
"^DD",344.61,344.61,.08,21,2,0)
updated for new payers by the Accounts Receivable Nightly Process.
"^DD",344.61,344.61,.08,23,0)
^.001^3^3^3140506^^
"^DD",344.61,344.61,.08,23,1,0)
This field is used by routine NEWPYR^RCDPESP called from the AR Nightly
"^DD",344.61,344.61,.08,23,2,0)
Background Job to create entries in the RCDPE-AUTO PAY EXCLUSION file
"^DD",344.61,344.61,.08,23,3,0)
(#344.6) for new payers.
"^DD",344.61,344.61,.08,"DT")
3140506
"^DD",344.61,344.61,.09,0)
EFT CUTOFF DATE^DI^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.61,344.61,.09,3)
Do not edit this date.  It is set by package installation.
"^DD",344.61,344.61,.09,21,0)
^^6^6^3140626^
"^DD",344.61,344.61,.09,21,1,0)
Used in posting prevention when working on the ERA Worklist.  Unposted 
"^DD",344.61,344.61,.09,21,2,0)
EFTs that are at least two months older than this date are not considered 
"^DD",344.61,344.61,.09,21,3,0)
when determining if there are aged, unposted EFTs on the system.
"^DD",344.61,344.61,.09,21,4,0)
 
"^DD",344.61,344.61,.09,21,5,0)
Do not edit this date.  It is set at package installation and must not be 
"^DD",344.61,344.61,.09,21,6,0)
changed.
"^DD",344.61,344.61,.09,23,0)
^^1^1^3140626^
"^DD",344.61,344.61,.09,23,1,0)
This value is used by routine RCDPEWLP.
"^DD",344.61,344.61,.09,"DT")
3140626
"^DD",344.61,344.61,20,0)
MEDICAL EFT OVERRIDE^D^^OVERRIDE;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.61,344.61,20,.1)
MEDICAL ELECTRONIC FUND TRANSFER OVERRIDE
"^DD",344.61,344.61,20,3)
Enter the precise date (optional time) recorded for the medical EFT override.
"^DD",344.61,344.61,20,21,0)
^.001^2^2^3140506^^^^
"^DD",344.61,344.61,20,21,1,0)
An override will allow unrestricted scratchpad creation within the ERA 
"^DD",344.61,344.61,20,21,2,0)
Worklist option for one day.
"^DD",344.61,344.61,20,"DT")
3140506
"^DD",344.61,344.61,21,0)
PHARMACY EFT OVERRIDE^D^^OVERRIDE;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.61,344.61,21,.1)
PHARMACY ELECTRONIC FUND TRANSFER OVERRIDE
"^DD",344.61,344.61,21,3)
Enter the precise date (optional time) recorded for the pharmacy EFT override.
"^DD",344.61,344.61,21,21,0)
^.001^2^2^3140506^^^
"^DD",344.61,344.61,21,21,1,0)
An override will allow unrestricted scratchpad creation within the ERA 
"^DD",344.61,344.61,21,21,2,0)
Worklist option for one day.
"^DD",344.61,344.61,21,"DT")
3140506
"^DD",344.61,344.61,22,0)
USER - MEDICAL OVERRIDE^P200'^VA(200,^OVERRIDE;3^Q
"^DD",344.61,344.61,22,.1)
USER WHO ENTERED THE MEDICAL OVERRIDE
"^DD",344.61,344.61,22,3)
Enter the user who entered the medical override.
"^DD",344.61,344.61,22,21,0)
^.001^2^2^3140506^^
"^DD",344.61,344.61,22,21,1,0)
A record of the person who entered the medical override is needed for
"^DD",344.61,344.61,22,21,2,0)
auditing purposes.
"^DD",344.61,344.61,22,"DT")
3140506
"^DD",344.61,344.61,23,0)
USER - PHARMACY OVERRIDE^P200'^VA(200,^OVERRIDE;4^Q
"^DD",344.61,344.61,23,.1)
USER WHO ENTERED THE PHRAMACY OVERRIDE
"^DD",344.61,344.61,23,3)
Enter the user who entered the pharmacy override.
"^DD",344.61,344.61,23,21,0)
^.001^2^2^3140506^^
"^DD",344.61,344.61,23,21,1,0)
A record of the person who entered the pharmacy override is needed for
"^DD",344.61,344.61,23,21,2,0)
auditing purposes.
"^DD",344.61,344.61,23,"DT")
3140506
"^DD",344.61,344.61,24,0)
COMMENT - MEDICAL OVERRIDE^F^^OVERRIDE;5^K:$L(X)>50!($L(X)<1) X
"^DD",344.61,344.61,24,.1)
COMMENT EXPLAINING THE MEDICAL OVERRIDE
"^DD",344.61,344.61,24,3)
Enter the reason for the Medical Override, 1-50 characters.
"^DD",344.61,344.61,24,21,0)
^.001^2^2^3140506^^
"^DD",344.61,344.61,24,21,1,0)
The reason for entering the Medical Override must be recorded for auditing
"^DD",344.61,344.61,24,21,2,0)
purposes.
"^DD",344.61,344.61,24,"DT")
3140506
"^DD",344.61,344.61,25,0)
COMMENT - PHARMACY OVERRIDE^F^^OVERRIDE;6^K:$L(X)>50!($L(X)<1) X
"^DD",344.61,344.61,25,.1)
COMMENT EXPLAINING THE PHARMACY OVERRIDE
"^DD",344.61,344.61,25,3)
Enter the reason for the Pharmacy Override, 1-50 characters.
"^DD",344.61,344.61,25,21,0)
^^2^2^3140506^
"^DD",344.61,344.61,25,21,1,0)
The reason for entering the Pharmacy Override must be recorded for
"^DD",344.61,344.61,25,21,2,0)
auditing purposes.
"^DD",344.61,344.61,25,"DT")
3140506
"^DD",344.7,344.7,0)
FIELD^^.08^8
"^DD",344.7,344.7,0,"DT")
3140505
"^DD",344.7,344.7,0,"IX","B",344.7,.01)

"^DD",344.7,344.7,0,"NM","RCDPE PARAMETER AUDIT")

"^DD",344.7,344.7,0,"VRPK")
PRCA
"^DD",344.7,344.7,.01,0)
TIMESTAMP^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.7,344.7,.01,1,0)
^.1
"^DD",344.7,344.7,.01,1,1,0)
344.7^B
"^DD",344.7,344.7,.01,1,1,1)
S ^RCY(344.7,"B",$E(X,1,30),DA)=""
"^DD",344.7,344.7,.01,1,1,2)
K ^RCY(344.7,"B",$E(X,1,30),DA)
"^DD",344.7,344.7,.01,3)
Enter the date and time, with seconds, when this entry was created.  This field should not be edited by the user; it is updated programmatically.
"^DD",344.7,344.7,.01,21,0)
^.001^2^2^3140506^^^
"^DD",344.7,344.7,.01,21,1,0)
Contains the date and time the selected record was last updated.
"^DD",344.7,344.7,.01,21,2,0)
This field should only be updated programmatically.
"^DD",344.7,344.7,.01,"DT")
3140505
"^DD",344.7,344.7,.02,0)
MODIFIED IEN^NJ15,0^^0;2^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.7,344.7,.02,.1)
ENTRY NUMBER THAT WAS MODIFIED
"^DD",344.7,344.7,.02,3)
Type a number between 1 and 999999999999999, 0 decimal digits.  This field should not be edited by the user; it is updated programmatically.
"^DD",344.7,344.7,.02,21,0)
^.001^3^3^3140506^^^^
"^DD",344.7,344.7,.02,21,1,0)
This field contains an Internal Entry Number for either the AR SITE
"^DD",344.7,344.7,.02,21,2,0)
PARAMETER file (#342) or the RCDPE AUTO-PAY EXCLUSION file (#344.6),
"^DD",344.7,344.7,.02,21,3,0)
depending on what value was changed.
"^DD",344.7,344.7,.02,23,0)
^.001^2^2^3140506^^^^
"^DD",344.7,344.7,.02,23,1,0)
Since this is an audit file, entries to this field should not be created
"^DD",344.7,344.7,.02,23,2,0)
nor edited by users.
"^DD",344.7,344.7,.02,"DT")
3140505
"^DD",344.7,344.7,.03,0)
CHANGED BY^P200'^VA(200,^0;3^Q
"^DD",344.7,344.7,.03,3)
Enter the user who updated the parameter.  This field should only be updated programmatically.
"^DD",344.7,344.7,.03,21,0)
^^2^2^3140505^
"^DD",344.7,344.7,.03,21,1,0)
The last person to update the selected entry.  This field should only be
"^DD",344.7,344.7,.03,21,2,0)
updated programmatically.
"^DD",344.7,344.7,.03,"DT")
3140108
"^DD",344.7,344.7,.04,0)
CHANGED FIELD^NJ7,4^^0;4^K:+X'=X!(X>25)!(X<.01)!(X?.E1"."5N.N) X
"^DD",344.7,344.7,.04,.1)
FIELD NUMBER OF CHANGED PARAMETER
"^DD",344.7,344.7,.04,3)
Type a number between .01 and 25, 4 decimal digits.  This field should not be edited by the user.
"^DD",344.7,344.7,.04,21,0)
^^3^3^3140505^
"^DD",344.7,344.7,.04,21,1,0)
The field number of the parameter from the appropriate file
"^DD",344.7,344.7,.04,21,2,0)
that was changed. This field should only be
"^DD",344.7,344.7,.04,21,3,0)
updated programmatically.
"^DD",344.7,344.7,.04,"DT")
3140505
"^DD",344.7,344.7,.05,0)
MODIFIED FILE^S^344.6:RCDPE AUTO-PAY EXCLUSION;344.61:RCDPE PARAMETER;^0;5^Q
"^DD",344.7,344.7,.05,3)
Enter the file number from this set that was updated.  This field should only be updated programmatically.
"^DD",344.7,344.7,.05,21,0)
^.001^2^2^3140505^^^
"^DD",344.7,344.7,.05,21,1,0)
This is the file number of the value which was modified. This field should
"^DD",344.7,344.7,.05,21,2,0)
only be updated programmatically.
"^DD",344.7,344.7,.05,"DT")
3140505
"^DD",344.7,344.7,.06,0)
NEW VALUE^F^^0;6^K:$L(X)>20!($L(X)<1) X
"^DD",344.7,344.7,.06,3)
Enter the updated value of the parameter, 1-20 characters.  This field should only be updated programmatically.
"^DD",344.7,344.7,.06,21,0)
^.001^2^2^3140505^^^
"^DD",344.7,344.7,.06,21,1,0)
This is the value of the selected field after the change. This field 
"^DD",344.7,344.7,.06,21,2,0)
should only be updated programmatically.
"^DD",344.7,344.7,.06,"DT")
3140108
"^DD",344.7,344.7,.07,0)
OLD VALUE^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",344.7,344.7,.07,3)
Enter the original value of the parameter, 1-20 characters.  This field should only be updated programmatically.
"^DD",344.7,344.7,.07,21,0)
^.001^2^2^3140505^^
"^DD",344.7,344.7,.07,21,1,0)
This is the value of the selected field before the change. This field
"^DD",344.7,344.7,.07,21,2,0)
should only be updated programmatically.
"^DD",344.7,344.7,.07,"DT")
3140130
"^DD",344.7,344.7,.08,0)
COMMENT^F^^0;8^K:$L(X)>72!($L(X)<1) X
"^DD",344.7,344.7,.08,3)
Enter a comment, 1-72 characters.  This field should only be updated programmatically.
"^DD",344.7,344.7,.08,21,0)
^.001^3^3^3140505^^
"^DD",344.7,344.7,.08,21,1,0)
This is a required field under certain circumstances. It holds a brief 
"^DD",344.7,344.7,.08,21,2,0)
explanation as to why a field was changed. This field should only be
"^DD",344.7,344.7,.08,21,3,0)
updated programmatically.
"^DD",344.7,344.7,.08,"DT")
3140130
"^DD",344.81,344.81,0)
FIELD^^.001^9
"^DD",344.81,344.81,0,"DDA")
N
"^DD",344.81,344.81,0,"DT")
3140505
"^DD",344.81,344.81,0,"ID",.03)
W "   ",$$FMTE^DILIBF($P(^(0),U,3),5)
"^DD",344.81,344.81,0,"ID",1.01)
W:$D(^(1)) "   ",$P(^(1),U,1)
"^DD",344.81,344.81,0,"IX","B",344.81,.01)

"^DD",344.81,344.81,0,"IX","C",344.81,.05)

"^DD",344.81,344.81,0,"NM","RC MESSAGE TEXT OBJECT")

"^DD",344.81,344.81,0,"VRPK")
PRCA
"^DD",344.81,344.81,.001,0)
NUMBER^NJ9,0^^ ^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.81,344.81,.001,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",344.81,344.81,.001,21,0)
^^2^2^3140505^
"^DD",344.81,344.81,.001,21,1,0)
This is the Internal Entry Number of this entry.  It has been explicitly 
"^DD",344.81,344.81,.001,21,2,0)
defined to aid in identification and lookup of entries.
"^DD",344.81,344.81,.001,"DT")
3140128
"^DD",344.81,344.81,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",344.81,344.81,.01,.1)
OBJECT NAME
"^DD",344.81,344.81,.01,1,0)
^.1
"^DD",344.81,344.81,.01,1,1,0)
344.81^B
"^DD",344.81,344.81,.01,1,1,1)
S ^RCY(344.81,"B",$E(X,1,30),DA)=""
"^DD",344.81,344.81,.01,1,1,2)
K ^RCY(344.81,"B",$E(X,1,30),DA)
"^DD",344.81,344.81,.01,3)
Enter a NAME, 3-30 characters, not starting with punctuation.
"^DD",344.81,344.81,.01,21,0)
^^1^1^3140505^
"^DD",344.81,344.81,.01,21,1,0)
This is the Name given to this testing object.
"^DD",344.81,344.81,.01,"DT")
3140505
"^DD",344.81,344.81,.02,0)
CREATOR^RP200'^VA(200,^0;2^Q
"^DD",344.81,344.81,.02,.1)
USER WHO CREATED THIS OBJECT
"^DD",344.81,344.81,.02,3)
Enter the User who created this entry.
"^DD",344.81,344.81,.02,21,0)
^^2^2^3140115^
"^DD",344.81,344.81,.02,21,1,0)
 This is a pointer to the NEW PERSON file (#200).
"^DD",344.81,344.81,.02,21,2,0)
 LAYGO is prohibited (the user must already exist).
"^DD",344.81,344.81,.02,"DT")
3140115
"^DD",344.81,344.81,.03,0)
CREATED^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.81,344.81,.03,.1)
CREATION DATE AND TIME
"^DD",344.81,344.81,.03,3)
Enter the date and time this object was created, time is required.
"^DD",344.81,344.81,.03,21,0)
^^1^1^3140505^
"^DD",344.81,344.81,.03,21,1,0)
This is the date and time, with seconds, that this object was created.
"^DD",344.81,344.81,.03,"DT")
3140122
"^DD",344.81,344.81,.04,0)
LAST UPDATED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.81,344.81,.04,3)
Enter the date and time this record was updated, time is required.
"^DD",344.81,344.81,.04,21,0)
^^1^1^3140505^
"^DD",344.81,344.81,.04,21,1,0)
This is the last date and time this object was edited.  Time is required.
"^DD",344.81,344.81,.04,"DT")
3140115
"^DD",344.81,344.81,.05,0)
DESCRIPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",344.81,344.81,.05,.1)
OBJECT DESCRIPTION
"^DD",344.81,344.81,.05,1,0)
^.1
"^DD",344.81,344.81,.05,1,1,0)
344.81^C
"^DD",344.81,344.81,.05,1,1,1)
S ^RCY(344.81,"C",$E(X,1,30),DA)=""
"^DD",344.81,344.81,.05,1,1,2)
K ^RCY(344.81,"C",$E(X,1,30),DA)
"^DD",344.81,344.81,.05,1,1,"%D",0)
^^2^2^3140507^
"^DD",344.81,344.81,.05,1,1,"%D",1,0)
This cross-reference allows the tester to lookup entries by the 
"^DD",344.81,344.81,.05,1,1,"%D",2,0)
description.
"^DD",344.81,344.81,.05,1,1,"DT")
3140122
"^DD",344.81,344.81,.05,3)
Enter descriptive text, 3-30 characters.
"^DD",344.81,344.81,.05,21,0)
^^1^1^3140505^
"^DD",344.81,344.81,.05,21,1,0)
This is a free-text description of this object to aid the tester.
"^DD",344.81,344.81,.05,"DT")
3140205
"^DD",344.81,344.81,1.01,0)
TYPE^FI^^1;1^K:$L(X)>3!($L(X)<3)!'(X?3U) X
"^DD",344.81,344.81,1.01,.1)
OBJECT TYPE
"^DD",344.81,344.81,1.01,3)
Do not edit.  Answer must be 3 upper case characters.
"^DD",344.81,344.81,1.01,21,0)
^.001^1^1^3140505^^
"^DD",344.81,344.81,1.01,21,1,0)
This field will contain ERA, EFT, or MRA and cannot be edited.
"^DD",344.81,344.81,1.01,"DT")
3140205
"^DD",344.81,344.81,1.02,0)
OBJECT STATUS^S^0:INCOMPLETE;1:AUTO;2:REVIEWED;^1;2^Q
"^DD",344.81,344.81,1.02,3)
Indicate the object's status.
"^DD",344.81,344.81,1.02,21,0)
^^4^4^3140505^
"^DD",344.81,344.81,1.02,21,1,0)
This value indicates the status of this object:
"^DD",344.81,344.81,1.02,21,2,0)
 0 (zero) for INCOMPLETE indicates that the tester hasn't reviewed it.
"^DD",344.81,344.81,1.02,21,3,0)
 1 for AUTO indicates that an object was auto-created and not reviewed.
"^DD",344.81,344.81,1.02,21,4,0)
 2 for REVIEWED indicates that the tester has evaluated the object.
"^DD",344.81,344.81,1.02,23,0)
^.001^6^6^3140505^^
"^DD",344.81,344.81,1.02,23,1,0)
This value will be set to either zero or one on creation.
"^DD",344.81,344.81,1.02,23,2,0)
A 0 indicates that the entry was created but the user wanted to review it.
"^DD",344.81,344.81,1.02,23,3,0)
A 1 indicates that the user wanted to have the entry automatically 
"^DD",344.81,344.81,1.02,23,4,0)
created without reviewing.
"^DD",344.81,344.81,1.02,23,5,0)
  
"^DD",344.81,344.81,1.02,23,6,0)
If a user reviews the EEOB and approves it, this field will be set to 2.
"^DD",344.81,344.81,1.02,"DT")
3140127
"^DD",344.81,344.81,2,0)
OBJECT TEXT^344.812^^2;0
"^DD",344.81,344.81,2,21,0)
^^2^2^3140505^
"^DD",344.81,344.81,2,21,1,0)
This is the message text for this object.  No user should edit this field 
"^DD",344.81,344.81,2,21,2,0)
manually.  It is only updated by the Testing Tool software.
"^DD",344.81,344.812,0)
OBJECT TEXT SUB-FIELD^^.01^1
"^DD",344.81,344.812,0,"DT")
3140127
"^DD",344.81,344.812,0,"NM","OBJECT TEXT")

"^DD",344.81,344.812,0,"UP")
344.81
"^DD",344.81,344.812,.01,0)
OBJECT TEXT^WLx^^0;1^Q
"^DD",344.81,344.812,.01,21,0)
^^2^2^3140127^
"^DD",344.81,344.812,.01,21,1,0)
This is the EEOB text and will only be manipulated by the Testing Tool 
"^DD",344.81,344.812,.01,21,2,0)
software.
"^DD",344.81,344.812,.01,"DT")
3140127
"^DD",344.82,344.82,0)
FIELD^^1.01^4
"^DD",344.82,344.82,0,"DDA")
N
"^DD",344.82,344.82,0,"DT")
3140127
"^DD",344.82,344.82,0,"IX","B",344.82,.01)

"^DD",344.82,344.82,0,"NM","RC TESTING USER PREFERENCES")

"^DD",344.82,344.82,0,"VRPK")
PRCA
"^DD",344.82,344.82,.01,0)
USER^RP200'^VA(200,^0;1^Q
"^DD",344.82,344.82,.01,1,0)
^.1
"^DD",344.82,344.82,.01,1,1,0)
344.82^B
"^DD",344.82,344.82,.01,1,1,1)
S ^RCY(344.82,"B",$E(X,1,30),DA)=""
"^DD",344.82,344.82,.01,1,1,2)
K ^RCY(344.82,"B",$E(X,1,30),DA)
"^DD",344.82,344.82,.01,3)
Enter the User's name.
"^DD",344.82,344.82,.01,21,0)
^^4^4^3140505^
"^DD",344.82,344.82,.01,21,1,0)
This is the user who stored the Testing Tool preferences.  Each user can 
"^DD",344.82,344.82,.01,21,2,0)
only edit the entry that they created.
"^DD",344.82,344.82,.01,21,3,0)
 
"^DD",344.82,344.82,.01,21,4,0)
Entries to this file are only created by the Testing Tool.
"^DD",344.82,344.82,.01,23,0)
^.001^1^1^3140505^^
"^DD",344.82,344.82,.01,23,1,0)
DINUM pointer to NEW PERSON file (#200).  No LAYGO allowed.
"^DD",344.82,344.82,.01,"DT")
3140115
"^DD",344.82,344.82,.02,0)
UPDATED^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.82,344.82,.02,3)
Enter the date and time this entry was last updated.
"^DD",344.82,344.82,.02,21,0)
^^2^2^3140505^
"^DD",344.82,344.82,.02,21,1,0)
This is the date and time that this entry was last updated.  This value 
"^DD",344.82,344.82,.02,21,2,0)
should not be set manually.
"^DD",344.82,344.82,.02,"DT")
3140115
"^DD",344.82,344.82,1.01,0)
PAYER ID DEFAULT^P344.6'^RCY(344.6,^1;1^Q
"^DD",344.82,344.82,1.01,3)
Select the PAYER ID to be used as a default value.
"^DD",344.82,344.82,1.01,4)
D FLD101^RCDPETTP
"^DD",344.82,344.82,1.01,21,0)
^^2^2^3140505^
"^DD",344.82,344.82,1.01,21,1,0)
This is the PAYER ID that will be used as a default prompt when editing 
"^DD",344.82,344.82,1.01,21,2,0)
an object.
"^DD",344.82,344.82,1.01,"DT")
3140130
"^DD",344.82,344.82,1.02,0)
PAYMENT METHOD CODE^FX^^1;2^D LKUP102^RCDPETTP I $D(X) K:$L(X)>30!($L(X)<3)!($E(X,1)=" ") X
"^DD",344.82,344.82,1.02,3)
Enter the code, it must be 3-30 characters and cannot start with a space.
"^DD",344.82,344.82,1.02,4)
D FLD102^RCDPETTP
"^DD",344.82,344.82,1.02,21,0)
^.001^1^1^3140505^^
"^DD",344.82,344.82,1.02,21,1,0)
This is the PAYMENT METHOD CODE that will be used as a default prompt.
"^DD",344.82,344.82,1.02,"DT")
3140130
"^DIC",344.6,344.6,0)
RCDPE AUTO-PAY EXCLUSION^344.6
"^DIC",344.6,344.6,0,"GL")
^RCY(344.6,
"^DIC",344.6,344.6,"%",0)
^1.005^^0
"^DIC",344.6,344.6,"%D",0)
^^8^8^3140506^
"^DIC",344.6,344.6,"%D",1,0)
This file is populated based on the data in the ELECTRONIC REMITTANCE 
"^DIC",344.6,344.6,"%D",2,0)
ADVICE file (#344.4). Initially, a post-installation process created a
"^DIC",344.6,344.6,"%D",3,0)
record for each unique PAYER NAME/PAYER ID combination.  Afterwards, this
"^DIC",344.6,344.6,"%D",4,0)
file is populated by the EDI Lockbox (ePayments) nightly batch job.  
"^DIC",344.6,344.6,"%D",5,0)
Whenever the nightly batch job encounters a new PAYER NAME/PAYER ID
"^DIC",344.6,344.6,"%D",6,0)
combination, a new record will be added to this file. The file will be
"^DIC",344.6,344.6,"%D",7,0)
maintained via the EDI Lockbox Parameters [RCDPE EDI LOCKBOX PARAMETERS]
"^DIC",344.6,344.6,"%D",8,0)
option.  
"^DIC",344.6,"B","RCDPE AUTO-PAY EXCLUSION",344.6)

"^DIC",344.61,344.61,0)
RCDPE PARAMETER^344.61
"^DIC",344.61,344.61,0,"GL")
^RCY(344.61,
"^DIC",344.61,344.61,"%",0)
^1.005^^0
"^DIC",344.61,344.61,"%D",0)
^1.001^2^2^3140813^^^
"^DIC",344.61,344.61,"%D",1,0)
This file holds the parameters specific to the EDI Lockbox processes 
"^DIC",344.61,344.61,"%D",2,0)
(ePayments).
"^DIC",344.61,"B","RCDPE PARAMETER",344.61)

"^DIC",344.7,344.7,0)
RCDPE PARAMETER AUDIT^344.7
"^DIC",344.7,344.7,0,"GL")
^RCY(344.7,
"^DIC",344.7,344.7,"%D",0)
^1.001^1^1^3140505^^
"^DIC",344.7,344.7,"%D",1,0)
This file is for auditing changes to the RCDPE PARAMETER file (#344.61).
"^DIC",344.7,"B","RCDPE PARAMETER AUDIT",344.7)

"^DIC",344.81,344.81,0)
RC MESSAGE TEXT OBJECT^344.81
"^DIC",344.81,344.81,0,"GL")
^RCY(344.81,
"^DIC",344.81,344.81,"%D",0)
^1.001^4^4^3140122^^^
"^DIC",344.81,344.81,"%D",1,0)
This file is reserved exclusively for the use of the Accounts Receivable,
"^DIC",344.81,344.81,"%D",2,0)
Inpatient Billing, ePayments, and eBilling developers.
"^DIC",344.81,344.81,"%D",3,0)
  
"^DIC",344.81,344.81,"%D",4,0)
No site shall enter or manipulate data in this file.
"^DIC",344.81,"B","RC MESSAGE TEXT OBJECT",344.81)

"^DIC",344.82,344.82,0)
RC TESTING USER PREFERENCES^344.82P
"^DIC",344.82,344.82,0,"GL")
^RCY(344.82,
"^DIC",344.82,344.82,"%",0)
^1.005^^0
"^DIC",344.82,344.82,"%D",0)
^^4^4^3140225^
"^DIC",344.82,344.82,"%D",1,0)
This file is reserved exclusively for the use of the Accounts Receivable,
"^DIC",344.82,344.82,"%D",2,0)
Inpatient Billing, ePayments and eBilling developers.
"^DIC",344.82,344.82,"%D",3,0)
  
"^DIC",344.82,344.82,"%D",4,0)
No site shall enter or manipulate data in this file.
"^DIC",344.82,"B","RC TESTING USER PREFERENCES",344.82)

**INSTALL NAME**
IB*2.0*511
"BLD",8678,0)
IB*2.0*511^INTEGRATED BILLING^0^3150312^y
"BLD",8678,4,0)
^9.64PA^361.1^1
"BLD",8678,4,361.1,0)
361.1
"BLD",8678,4,361.1,2,0)
^9.641^361.1101^2
"BLD",8678,4,361.1,2,361.1,0)
EXPLANATION OF BENEFITS  (File-top level)
"BLD",8678,4,361.1,2,361.1,1,0)
^9.6411^102^1
"BLD",8678,4,361.1,2,361.1,1,102,0)
EOB REMOVED
"BLD",8678,4,361.1,2,361.1101,0)
MOVE/COPY/REMOVE HISTORY  (sub-file)
"BLD",8678,4,361.1,2,361.1101,1,0)
^9.6411^.05^4
"BLD",8678,4,361.1,2,361.1101,1,.01,0)
DATE/TIME EOB MOVED
"BLD",8678,4,361.1,2,361.1101,1,.02,0)
EOB MOVE/COPY/REMOVE BY
"BLD",8678,4,361.1,2,361.1101,1,.03,0)
MOVE/COPY/REMOVE REASON
"BLD",8678,4,361.1,2,361.1101,1,.05,0)
MOVE/COPY/REMOVE EVENT
"BLD",8678,4,361.1,222)
y^n^p^^^^n^^n
"BLD",8678,4,361.1,224)

"BLD",8678,4,"APDD",361.1,361.1)

"BLD",8678,4,"APDD",361.1,361.1,102)

"BLD",8678,4,"APDD",361.1,361.1101)

"BLD",8678,4,"APDD",361.1,361.1101,.01)

"BLD",8678,4,"APDD",361.1,361.1101,.02)

"BLD",8678,4,"APDD",361.1,361.1101,.03)

"BLD",8678,4,"APDD",361.1,361.1101,.05)

"BLD",8678,4,"B",361.1,361.1)

"BLD",8678,6.3)
106
"BLD",8678,"ABPKG")
n
"BLD",8678,"KRN",0)
^9.67PA^779.2^20
"BLD",8678,"KRN",.4,0)
.4
"BLD",8678,"KRN",.401,0)
.401
"BLD",8678,"KRN",.402,0)
.402
"BLD",8678,"KRN",.403,0)
.403
"BLD",8678,"KRN",.5,0)
.5
"BLD",8678,"KRN",.84,0)
.84
"BLD",8678,"KRN",3.6,0)
3.6
"BLD",8678,"KRN",3.8,0)
3.8
"BLD",8678,"KRN",9.2,0)
9.2
"BLD",8678,"KRN",9.8,0)
9.8
"BLD",8678,"KRN",9.8,"NM",0)
^9.68A^8^3
"BLD",8678,"KRN",9.8,"NM",1,0)
IBNCPDPU^^0^B122718985
"BLD",8678,"KRN",9.8,"NM",7,0)
IBJTBA1^^0^B75349267
"BLD",8678,"KRN",9.8,"NM",8,0)
IBCEOB4^^0^B24468385
"BLD",8678,"KRN",9.8,"NM","B","IBCEOB4",8)

"BLD",8678,"KRN",9.8,"NM","B","IBJTBA1",7)

"BLD",8678,"KRN",9.8,"NM","B","IBNCPDPU",1)

"BLD",8678,"KRN",19,0)
19
"BLD",8678,"KRN",19.1,0)
19.1
"BLD",8678,"KRN",101,0)
101
"BLD",8678,"KRN",101,"NM",0)
^9.68A^^
"BLD",8678,"KRN",409.61,0)
409.61
"BLD",8678,"KRN",771,0)
771
"BLD",8678,"KRN",779.2,0)
779.2
"BLD",8678,"KRN",870,0)
870
"BLD",8678,"KRN",8989.51,0)
8989.51
"BLD",8678,"KRN",8989.52,0)
8989.52
"BLD",8678,"KRN",8994,0)
8994
"BLD",8678,"KRN","B",.4,.4)

"BLD",8678,"KRN","B",.401,.401)

"BLD",8678,"KRN","B",.402,.402)

"BLD",8678,"KRN","B",.403,.403)

"BLD",8678,"KRN","B",.5,.5)

"BLD",8678,"KRN","B",.84,.84)

"BLD",8678,"KRN","B",3.6,3.6)

"BLD",8678,"KRN","B",3.8,3.8)

"BLD",8678,"KRN","B",9.2,9.2)

"BLD",8678,"KRN","B",9.8,9.8)

"BLD",8678,"KRN","B",19,19)

"BLD",8678,"KRN","B",19.1,19.1)

"BLD",8678,"KRN","B",101,101)

"BLD",8678,"KRN","B",409.61,409.61)

"BLD",8678,"KRN","B",771,771)

"BLD",8678,"KRN","B",779.2,779.2)

"BLD",8678,"KRN","B",870,870)

"BLD",8678,"KRN","B",8989.51,8989.51)

"BLD",8678,"KRN","B",8989.52,8989.52)

"BLD",8678,"KRN","B",8994,8994)

"BLD",8678,"QUES",0)
^9.62^^
"BLD",8678,"REQB",0)
^9.611^3^2
"BLD",8678,"REQB",2,0)
IB*2.0*451^1
"BLD",8678,"REQB",3,0)
IB*2.0*452^1
"BLD",8678,"REQB","B","IB*2.0*451",2)

"BLD",8678,"REQB","B","IB*2.0*452",3)

"FIA",361.1)
EXPLANATION OF BENEFITS
"FIA",361.1,0)
^IBM(361.1,
"FIA",361.1,0,0)
361.1PI
"FIA",361.1,0,1)
y^n^p^^^^n^^n
"FIA",361.1,0,10)

"FIA",361.1,0,11)

"FIA",361.1,0,"RLRO")

"FIA",361.1,0,"VR")
2.0^IB
"FIA",361.1,361.1)
1
"FIA",361.1,361.1,101)

"FIA",361.1,361.1,102)

"FIA",361.1,361.1101)
1
"FIA",361.1,361.1101,.01)

"FIA",361.1,361.1101,.02)

"FIA",361.1,361.1101,.03)

"FIA",361.1,361.1101,.05)

"MBREQ")
1
"PKG",202,-1)
1^1
"PKG",202,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",202,20,0)
^9.402P^1^1
"PKG",202,20,1,0)
2^^IBAXDR
"PKG",202,20,1,1)

"PKG",202,20,"B",2,1)

"PKG",202,22,0)
^9.49I^1^1
"PKG",202,22,1,0)
2.0^2940321^2940321
"PKG",202,22,1,"PAH",1,0)
511^3150312^10
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IBCEOB4")
0^8^B24468385
"RTN","IBCEOB4",1,0)
IBCEOB4 ;ALB/PJH - EPAYMENTS MOVE/COPY EEOB TO NEW CLAIM ;Jun 11, 2014@17:45:06
"RTN","IBCEOB4",2,0)
 ;;2.0;INTEGRATED BILLING;**451,511**;21-MAR-1994;Build 106
"RTN","IBCEOB4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEOB4",4,0)
 ;
"RTN","IBCEOB4",5,0)
 ;Entry point for EEOB Move
"RTN","IBCEOB4",6,0)
MOVE(EOBIEN,IBIFN,DUZ,MDATE,JCOM,EVENT) ;
"RTN","IBCEOB4",7,0)
 ;
"RTN","IBCEOB4",8,0)
 N DA,DIC,DIE,DIK,DR,IEN101,OBILL,X,Y
"RTN","IBCEOB4",9,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",10,0)
 ;
"RTN","IBCEOB4",11,0)
 ;Create new MOVE/COPY HISTORY stub
"RTN","IBCEOB4",12,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",13,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",14,0)
 D FILE^DICN
"RTN","IBCEOB4",15,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",16,0)
 ;
"RTN","IBCEOB4",17,0)
 ;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",18,0)
 K DA,DIE,DR,X,Y
"RTN","IBCEOB4",19,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",20,0)
 ;Update User, Date/Time, Comments,Move/Copy event
"RTN","IBCEOB4",21,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",22,0)
 ;Update original bill number
"RTN","IBCEOB4",23,0)
 S DR=DR_";.04///"_OBILL
"RTN","IBCEOB4",24,0)
 D ^DIE
"RTN","IBCEOB4",25,0)
 ;
"RTN","IBCEOB4",26,0)
 ;Update bill number on EOB
"RTN","IBCEOB4",27,0)
 K DA,DIE,DR,X,Y
"RTN","IBCEOB4",28,0)
 S DIE="^IBM(361.1,",DA=EOBIEN,DR=".01///"_IBIFN
"RTN","IBCEOB4",29,0)
 D ^DIE
"RTN","IBCEOB4",30,0)
 ;
"RTN","IBCEOB4",31,0)
 ;Re-index updated EOB to correct PAYER NAME - IB*2*511
"RTN","IBCEOB4",32,0)
 K DA S DIK="^IBM(361.1,",DA=EOBIEN D IX^DIK
"RTN","IBCEOB4",33,0)
 ;
"RTN","IBCEOB4",34,0)
 ;Update any AR AMOUNTS DISTRIBUTION (split/edit detail)
"RTN","IBCEOB4",35,0)
 D FUNCTION(EOBIEN,OBILL,IBIFN)
"RTN","IBCEOB4",36,0)
 ;
"RTN","IBCEOB4",37,0)
 Q
"RTN","IBCEOB4",38,0)
 ;
"RTN","IBCEOB4",39,0)
 ;Entry point for EEOB Copy
"RTN","IBCEOB4",40,0)
COPY(EOBIEN,IBIFN,DUZ,MDATE,JCOM,EVENT) ;
"RTN","IBCEOB4",41,0)
 ;
"RTN","IBCEOB4",42,0)
 N IEN,IEN1,OBILL,NEWEOB
"RTN","IBCEOB4",43,0)
 ;
"RTN","IBCEOB4",44,0)
 ;Original Claim number
"RTN","IBCEOB4",45,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",46,0)
 ;
"RTN","IBCEOB4",47,0)
 ;Lock zero node before making inserts
"RTN","IBCEOB4",48,0)
 Q:'$$LOCK(0)
"RTN","IBCEOB4",49,0)
 ;
"RTN","IBCEOB4",50,0)
 ;Scan through list of new claims
"RTN","IBCEOB4",51,0)
 S IEN=0
"RTN","IBCEOB4",52,0)
 F  S IEN=$O(IBIFN(IEN)) Q:'IEN  D
"RTN","IBCEOB4",53,0)
 .;Create stub
"RTN","IBCEOB4",54,0)
 .N DA,DIC,DIE,DIK,DLAYGO,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",55,0)
 .S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB4",56,0)
 .;Use 399 ien as .01 field
"RTN","IBCEOB4",57,0)
 .S X=IEN
"RTN","IBCEOB4",58,0)
 .D FILE^DICN
"RTN","IBCEOB4",59,0)
 .S NEWEOB=+Y Q:'NEWEOB
"RTN","IBCEOB4",60,0)
 .;Lock the new entry
"RTN","IBCEOB4",61,0)
 .Q:'$$LOCK(NEWEOB)
"RTN","IBCEOB4",62,0)
 .;Copy details to new EOB (except for audit information)
"RTN","IBCEOB4",63,0)
 .N ARRAY
"RTN","IBCEOB4",64,0)
 .M ARRAY=^IBM(361.1,EOBIEN) K ARRAY(101)
"RTN","IBCEOB4",65,0)
 .M ^IBM(361.1,NEWEOB)=ARRAY
"RTN","IBCEOB4",66,0)
 .;Re-index new EOB
"RTN","IBCEOB4",67,0)
 .K DA,DIE,DIK,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",68,0)
 .S DIK="^IBM(361.1,",DA=NEWEOB D IX^DIK
"RTN","IBCEOB4",69,0)
 .;Update .01 field in new EOB
"RTN","IBCEOB4",70,0)
 .K DA,X,Y
"RTN","IBCEOB4",71,0)
 .S DIE="^IBM(361.1,",DA=NEWEOB
"RTN","IBCEOB4",72,0)
 .S DR=".01////"_IBIFN(IEN)
"RTN","IBCEOB4",73,0)
 .D ^DIE
"RTN","IBCEOB4",74,0)
 .;Re-index updated EOB to correct PAYER NAME - IB*2*511
"RTN","IBCEOB4",75,0)
 .K DA,DIK,X,Y S DIK="^IBM(361.1,",DA=NEWEOB D IX^DIK
"RTN","IBCEOB4",76,0)
 .;
"RTN","IBCEOB4",77,0)
 .;Update any AR AMOUNTS DISTRIBUTION (split/edit detail)
"RTN","IBCEOB4",78,0)
 .D FUNCTION(NEWEOB,OBILL,IBIFN(IEN))
"RTN","IBCEOB4",79,0)
 .;
"RTN","IBCEOB4",80,0)
 .;Create stub for audit information
"RTN","IBCEOB4",81,0)
 .K DA,DIC,X,Y
"RTN","IBCEOB4",82,0)
 .S DA(1)=NEWEOB
"RTN","IBCEOB4",83,0)
 .S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",84,0)
 .D FILE^DICN
"RTN","IBCEOB4",85,0)
 .S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",86,0)
 .;
"RTN","IBCEOB4",87,0)
 .;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",88,0)
 .K DA,DIE,DR,X,Y
"RTN","IBCEOB4",89,0)
 .S DIE="^IBM(361.1,"_NEWEOB_",101,",DA=IEN101
"RTN","IBCEOB4",90,0)
 .;Update User, Date/Time, Comments,Event
"RTN","IBCEOB4",91,0)
 .S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",92,0)
 .S DR=DR_";.04///"_OBILL
"RTN","IBCEOB4",93,0)
 .D ^DIE
"RTN","IBCEOB4",94,0)
 .;
"RTN","IBCEOB4",95,0)
 .;Insert Other claim numbers
"RTN","IBCEOB4",96,0)
 .K DIC,DLAYGO,IEN1,X,Y
"RTN","IBCEOB4",97,0)
 .S IEN1=""
"RTN","IBCEOB4",98,0)
 .F  S IEN1=$O(IBIFN(IEN1)) Q:'IEN1  D
"RTN","IBCEOB4",99,0)
 ..;current claim excluded
"RTN","IBCEOB4",100,0)
 ..Q:IEN1=IEN
"RTN","IBCEOB4",101,0)
 ..N DA,DIC,DLAYGO,DR,X
"RTN","IBCEOB4",102,0)
 ..S DA(1)=IEN101,DA(2)=NEWEOB
"RTN","IBCEOB4",103,0)
 ..S DIC="^IBM(361.1,"_DA(2)_",101,"_DA(1)_",1,"
"RTN","IBCEOB4",104,0)
 ..S DIC(0)="L",X=IBIFN(IEN1)
"RTN","IBCEOB4",105,0)
 ..D FILE^DICN
"RTN","IBCEOB4",106,0)
 .;Unlock new entry
"RTN","IBCEOB4",107,0)
 .D UNLOCK(NEWEOB)
"RTN","IBCEOB4",108,0)
 ;
"RTN","IBCEOB4",109,0)
 ;Update original EOB audit information
"RTN","IBCEOB4",110,0)
 N DA,DIC,DIE,DLAYGO,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",111,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",112,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",113,0)
 D FILE^DICN
"RTN","IBCEOB4",114,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",115,0)
 ;
"RTN","IBCEOB4",116,0)
 ;Update User, Date/Time, Comments,Event
"RTN","IBCEOB4",117,0)
 K DA,DIC,X,Y
"RTN","IBCEOB4",118,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",119,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",120,0)
 D ^DIE
"RTN","IBCEOB4",121,0)
 ;
"RTN","IBCEOB4",122,0)
 ;Insert Other claim numbers
"RTN","IBCEOB4",123,0)
 K DA,DIC,X,Y
"RTN","IBCEOB4",124,0)
 S IEN1=""
"RTN","IBCEOB4",125,0)
 F  S IEN1=$O(IBIFN(IEN1)) Q:'IEN1  D
"RTN","IBCEOB4",126,0)
 .K DA,DIC,DR,X
"RTN","IBCEOB4",127,0)
 .S DA(1)=IEN101,DA(2)=EOBIEN
"RTN","IBCEOB4",128,0)
 .S DIC="^IBM(361.1,"_DA(2)_",101,"_DA(1)_",1,"
"RTN","IBCEOB4",129,0)
 .S DIC(0)="L",X=IBIFN(IEN1)
"RTN","IBCEOB4",130,0)
 .D FILE^DICN
"RTN","IBCEOB4",131,0)
 ;
"RTN","IBCEOB4",132,0)
 ;Release zero node after inserts
"RTN","IBCEOB4",133,0)
 D UNLOCK(0)
"RTN","IBCEOB4",134,0)
 Q
"RTN","IBCEOB4",135,0)
 ;
"RTN","IBCEOB4",136,0)
REMOVE(EOBIEN,DUZ,JCOM) ;Mark EEOB as Removed - IB*2*511
"RTN","IBCEOB4",137,0)
 ; Timestamp
"RTN","IBCEOB4",138,0)
 N DA,DIC,DIE,DR,IEN101,OBILL,X,Y
"RTN","IBCEOB4",139,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",140,0)
 ;
"RTN","IBCEOB4",141,0)
 ;Create new MOVE/COPY HISTORY stub for remove action
"RTN","IBCEOB4",142,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",143,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=$$NOW^XLFDT
"RTN","IBCEOB4",144,0)
 D FILE^DICN
"RTN","IBCEOB4",145,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",146,0)
 ;
"RTN","IBCEOB4",147,0)
 ;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",148,0)
 N DIE,DA,DR,X,Y
"RTN","IBCEOB4",149,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",150,0)
 ;Update User, Date/Time, Comments, Original Bill and Remove event
"RTN","IBCEOB4",151,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.04///"_OBILL_";.05///R"
"RTN","IBCEOB4",152,0)
 D ^DIE
"RTN","IBCEOB4",153,0)
 ;
"RTN","IBCEOB4",154,0)
 ;Mark EEOB as removed to prevent further use
"RTN","IBCEOB4",155,0)
 N DIE,DA,DR,X,Y
"RTN","IBCEOB4",156,0)
 S DIE="^IBM(361.1,",DA=EOBIEN
"RTN","IBCEOB4",157,0)
 ;Update EEOB REMOVED
"RTN","IBCEOB4",158,0)
 S DR="102///1"
"RTN","IBCEOB4",159,0)
 D ^DIE
"RTN","IBCEOB4",160,0)
 Q
"RTN","IBCEOB4",161,0)
 ; 
"RTN","IBCEOB4",162,0)
 ;Update Split/Edit history for EOB
"RTN","IBCEOB4",163,0)
FUNCTION(EOBIEN,ONAME,NEWIEN) ;
"RTN","IBCEOB4",164,0)
 N DA,DIE,DR,NEWNAME,SUB,X,Y
"RTN","IBCEOB4",165,0)
 ;Check for split/edit history for original claim
"RTN","IBCEOB4",166,0)
 S SUB=$O(^IBM(361.1,EOBIEN,8,"B",ONAME,"")) Q:'SUB
"RTN","IBCEOB4",167,0)
 ;New bill name
"RTN","IBCEOB4",168,0)
 S NEWNAME=$P($G(^DGCR(399,NEWIEN,0)),U)
"RTN","IBCEOB4",169,0)
 ;Update bill number in Split/Edit history
"RTN","IBCEOB4",170,0)
 S DA(1)=EOBIEN,DIE="^IBM(361.1,"_DA(1)_",8,",DA=SUB
"RTN","IBCEOB4",171,0)
 S DR=".01///"_NEWNAME_";.03///"_NEWNAME
"RTN","IBCEOB4",172,0)
 D ^DIE
"RTN","IBCEOB4",173,0)
 Q
"RTN","IBCEOB4",174,0)
 ;
"RTN","IBCEOB4",175,0)
LOCK(EOBIEN) ;Lock Original EOB
"RTN","IBCEOB4",176,0)
 L +^IBM(361.1,EOBIEN):5 I  Q 1
"RTN","IBCEOB4",177,0)
 W !,"EOB in use by another user, try later"
"RTN","IBCEOB4",178,0)
 Q 0
"RTN","IBCEOB4",179,0)
 ;
"RTN","IBCEOB4",180,0)
UNLOCK(EOBIEN) ;Release EOB
"RTN","IBCEOB4",181,0)
 L -^IBM(361.1,EOBIEN)
"RTN","IBCEOB4",182,0)
 Q
"RTN","IBCEOB4",183,0)
 ;
"RTN","IBJTBA1")
0^7^B75349267
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK/PJH - TPJI BILL CHARGE INFO SCREEN ;Sep 30, 2014@12:07:36
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,265,155,349,417,451,488,511**;21-MAR-94;Build 106
"RTN","IBJTBA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 ;
"RTN","IBJTBA1",22,0)
 S IBPT=$P(IBM1,U,2)   ; patient responsibility 1.02 file
"RTN","IBJTBA1",23,0)
 I $P(IBM,U,4),$D(^IBM(361.1,IBI,"ERR")) S IBPT=0  ; filing error
"RTN","IBJTBA1",24,0)
 ; If MRA & UB, then calculate patient responsiblity value
"RTN","IBJTBA1",25,0)
 I $P(IBM,U,4),$$FT^IBCEF(+$P(IBM,U,1))=3 S IBPT=$$PTRESPI^IBCECOB1(IBI)
"RTN","IBJTBA1",26,0)
 ;
"RTN","IBJTBA1",27,0)
 S IBCA=$P(IBM1,U)
"RTN","IBJTBA1",28,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",29,0)
 ; if no Total Allowed Amount, sum up amounts on Line Level Adjustment
"RTN","IBJTBA1",30,0)
 I IBTA="" S IBTA=$$ALLOWED^IBCEMU2(IBI)
"RTN","IBJTBA1",31,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",32,0)
 D MRA2
"RTN","IBJTBA1",33,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",34,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",35,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",36,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",37,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",38,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",39,0)
 ;
"RTN","IBJTBA1",40,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",41,0)
 . I $P($G(^IBM(361.1,IBI,0)),U,4) D  Q     ; Medicare MRA processing
"RTN","IBJTBA1",42,0)
 .. N VALMCNT
"RTN","IBJTBA1",43,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",44,0)
 .. D GETEOB^IBCECSA6(IBI,0,,+$G(IBLN)-1)
"RTN","IBJTBA1",45,0)
 .. S Z=0 F  S Z=$O(^TMP("IBCECSD",$J,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("IBCECSD",$J,Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",46,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",47,0)
 .. D EOBERR
"RTN","IBJTBA1",48,0)
 .. Q
"RTN","IBJTBA1",49,0)
 . ;
"RTN","IBJTBA1",50,0)
 . ; Normal EOB processing
"RTN","IBJTBA1",51,0)
 . N VALMCNT
"RTN","IBJTBA1",52,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",53,0)
 . ; IB*2*511 - do not display EEOB detail if EEOB has been "removed"
"RTN","IBJTBA1",54,0)
 . Q:$P($G(^IBM(361.1,IBI,102)),U)
"RTN","IBJTBA1",55,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",56,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",57,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",58,0)
 . D EOBERR
"RTN","IBJTBA1",59,0)
 . Q
"RTN","IBJTBA1",60,0)
 ;
"RTN","IBJTBA1",61,0)
 Q
"RTN","IBJTBA1",62,0)
 ;
"RTN","IBJTBA1",63,0)
MRA2 ;
"RTN","IBJTBA1",64,0)
 N IBD
"RTN","IBJTBA1",65,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",66,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",67,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",68,0)
 ; IB*2*511 - do not display EEOB detail if EEOB has been removed
"RTN","IBJTBA1",69,0)
 I IBTY'["MRA",$P($G(^IBM(361.1,IBI,102)),U) D REMOVE Q
"RTN","IBJTBA1",70,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",5,59)
"RTN","IBJTBA1",71,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",72,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",10,30)
"RTN","IBJTBA1",73,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",74,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",75,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",76,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",3,40)
"RTN","IBJTBA1",77,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",78,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",79,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",80,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",5,35)
"RTN","IBJTBA1",81,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",82,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",83,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",84,0)
 S IBD="Svc From Dt: "_$$DAT1^IBOUTL($P(IBM1,U,10))
"RTN","IBJTBA1",85,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",86,0)
 S IBD="Svc To Dt: "_$$DAT1^IBOUTL($P(IBM1,U,11))
"RTN","IBJTBA1",87,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,54,25)
"RTN","IBJTBA1",88,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",89,0)
 S IBSTR=""
"RTN","IBJTBA1",90,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",91,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",92,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",93,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",94,0)
 ;
"RTN","IBJTBA1",95,0)
 ; begin IB*2.0*451
"RTN","IBJTBA1",96,0)
 ; display Trace # and ERA # for every EOB record found. MRAs will not have an ERA #, only a Trace #
"RTN","IBJTBA1",97,0)
 I IBTY]"" D
"RTN","IBJTBA1",98,0)
 . N IBAPS,IBERAE,IBTRACE
"RTN","IBJTBA1",99,0)
 . S IBTRACE=$P($G(^IBM(361.1,IBI,0)),U,7)
"RTN","IBJTBA1",100,0)
 . I IBTRACE]"" S IBERAE=$O(^RCY(344.4,"D",IBTRACE,""))
"RTN","IBJTBA1",101,0)
 . S IBD="       ERA #: "_$G(IBERAE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,25)
"RTN","IBJTBA1",102,0)
 . ; include AUTO-POST STATUS for auto-posted ERAs
"RTN","IBJTBA1",103,0)
 . I IBERAE]"" S IBAPS=$P($G(^RCY(344.4,IBERAE,4)),"^",2) I IBAPS]"" D
"RTN","IBJTBA1",104,0)
 . . S IBD=IBD_"   Auto-Post Status: "_$S(IBAPS=2:"Complete",1:"Not Complete") S IBSTR=$$SETLN^IBJTBA(IBD,"",1,80)
"RTN","IBJTBA1",105,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",106,0)
 . S IBD="     Trace #: "_$G(IBTRACE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,80) ; Trace # can be up to 50 characters long
"RTN","IBJTBA1",107,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",108,0)
 . S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",109,0)
 ; end IB*2.0*451
"RTN","IBJTBA1",110,0)
 ; 
"RTN","IBJTBA1",111,0)
 I IBTY["MRA",$D(^IBM(361.1,IBI,21)) D
"RTN","IBJTBA1",112,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",113,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",114,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",115,0)
 .. S IBST=0
"RTN","IBJTBA1",116,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",117,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",118,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",119,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",120,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",121,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",122,0)
 . I 'IBST D
"RTN","IBJTBA1",123,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",124,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",125,0)
 ;
"RTN","IBJTBA1",126,0)
MOVE    ;
"RTN","IBJTBA1",127,0)
 ;Display details of any EEOB MOVE/COPY
"RTN","IBJTBA1",128,0)
 I IBTY'["MRA",$D(^IBM(361.1,IBI,101)) D
"RTN","IBJTBA1",129,0)
 .N IEN101,FIRST101 S IEN101=0,FIRST101=1
"RTN","IBJTBA1",130,0)
 .F  S IEN101=$O(^IBM(361.1,IBI,101,IEN101)) Q:'IEN101  D
"RTN","IBJTBA1",131,0)
 ..N IB101,IB102,IBDATE,IBUSER,IBJS,IBJS1,IBJS2,IBORIG,IBDIR
"RTN","IBJTBA1",132,0)
 ..S IB101=$G(^IBM(361.1,IBI,101,IEN101,0)) Q:IB101=""
"RTN","IBJTBA1",133,0)
 ..D GETAUDIT(IB101)
"RTN","IBJTBA1",134,0)
 ..I FIRST101 D
"RTN","IBJTBA1",135,0)
 ...S IBSTR=$$SETLN^IBJTBA("MOVE/COPY/REMOVE HISTORY","",1,78),FIRST101=0
"RTN","IBJTBA1",136,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",137,0)
 ..S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",138,0)
 ..S:IBDIR']"" IBDIR="Move"
"RTN","IBJTBA1",139,0)
 ..S IBSTR=$$SETLN^IBJTBA("Date/Time of EEOB "_IBDIR_": "_IBDATE,"",1,78)
"RTN","IBJTBA1",140,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",141,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" of EEOB performed by: "_IBUSER,"",1,78)
"RTN","IBJTBA1",142,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",143,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" Justification Comments: ","",1,78)
"RTN","IBJTBA1",144,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",145,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBJS,"",1,78)
"RTN","IBJTBA1",146,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",147,0)
 ..I IBJS1]"" D
"RTN","IBJTBA1",148,0)
 ...S IBSTR=$$SETLN^IBJTBA(IBJS1,"",1,78)
"RTN","IBJTBA1",149,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",150,0)
 ..I IBORIG]"" D
"RTN","IBJTBA1",151,0)
 ...S IBSTR=$$SETLN^IBJTBA("Original Claim Number: "_IBORIG,"",1,78)
"RTN","IBJTBA1",152,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",153,0)
 ..;Other claim numbers
"RTN","IBJTBA1",154,0)
 ..D OTHERS(IBI,IEN101)
"RTN","IBJTBA1",155,0)
 Q
"RTN","IBJTBA1",156,0)
 ;
"RTN","IBJTBA1",157,0)
REMOVE ; Display Removal Reason and User
"RTN","IBJTBA1",158,0)
 N SUB,IB101,IBDATE,IBUSER,IBJS,IBJS1,IBJS2,IBORIG,IBDIR
"RTN","IBJTBA1",159,0)
 S SUB=$O(^IBM(361.1,IBI,101,"A"),-1) Q:'SUB
"RTN","IBJTBA1",160,0)
 S IB101=$G(^IBM(361.1,IBI,101,SUB,0)) Q:IB101=""
"RTN","IBJTBA1",161,0)
 D GETAUDIT(IB101)
"RTN","IBJTBA1",162,0)
 S IBSTR=$$SETLN^IBJTBA("                 *** EEOB REMOVED ***","",1,78)
"RTN","IBJTBA1",163,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",164,0)
 S IBSTR=$$SETLN^IBJTBA("MOVE/COPY/REMOVE HISTORY","",1,78)
"RTN","IBJTBA1",165,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",166,0)
 S IBSTR=$$SETLN^IBJTBA("Date/Time EEOB Removed: "_IBDATE,"",1,78)
"RTN","IBJTBA1",167,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",168,0)
 S IBSTR=$$SETLN^IBJTBA("Remove of EEOB performed by: "_IBUSER,"",1,78)
"RTN","IBJTBA1",169,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",170,0)
 S IBSTR=$$SETLN^IBJTBA("Remove Justification Comments: ","",1,78)
"RTN","IBJTBA1",171,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",172,0)
 S IBSTR=$$SETLN^IBJTBA(IBJS,"",1,78)
"RTN","IBJTBA1",173,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",174,0)
 I IBJS1]"" S IBSTR=$$SETLN^IBJTBA(IBJS1,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",175,0)
 ; display original claim
"RTN","IBJTBA1",176,0)
 I IBORIG]"" S IBSTR=$$SETLN^IBJTBA("Original Claim Number: "_IBORIG,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",177,0)
 ;display OTHER claim numbers
"RTN","IBJTBA1",178,0)
 D OTHERS(IBI,SUB)
"RTN","IBJTBA1",179,0)
 Q
"RTN","IBJTBA1",180,0)
 ;
"RTN","IBJTBA1",181,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBJTBA1",182,0)
 N ERRTXT,DASHES,Z
"RTN","IBJTBA1",183,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBJTBA1",184,0)
 I '$O(^IBM(361.1,IBI,"ERR",0)) Q
"RTN","IBJTBA1",185,0)
 S IBSTR=$$SETLN^IBJTBA("VistA could not match all of the Line Level data received in the EEOB","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",186,0)
 S IBSTR=$$SETLN^IBJTBA("(835 Record 40) to the claim in VistA.","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",187,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",188,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  D
"RTN","IBJTBA1",189,0)
 .S ERRTXT=$G(^IBM(361.1,IBI,"ERR",Z,0))
"RTN","IBJTBA1",190,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBJTBA1",191,0)
 .S IBSTR=$$SETLN^IBJTBA(ERRTXT,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",192,0)
 Q
"RTN","IBJTBA1",193,0)
 ;
"RTN","IBJTBA1",194,0)
GETAUDIT(IB101) ; retrieve audit data
"RTN","IBJTBA1",195,0)
 ;   IB101 - string of data at the MOVE/COPY/REMOVE HISTORY multiple (361.1,101)
"RTN","IBJTBA1",196,0)
 S IBDATE=$$EXTERNAL^DILFD(361.1101,.01,,$P(IB101,U,1))
"RTN","IBJTBA1",197,0)
 S IBUSER=$$EXTERNAL^DILFD(361.1101,.02,,$P(IB101,U,2))
"RTN","IBJTBA1",198,0)
 S IBJS=$E($P(IB101,U,3),1,78),IBJS1=$E($P(IB101,U,3),79,100)
"RTN","IBJTBA1",199,0)
 S IBDIR=$$EXTERNAL^DILFD(361.1101,.05,,$P(IB101,U,5))
"RTN","IBJTBA1",200,0)
 S IBORIG=$$EXTERNAL^DILFD(361.1101,.04,,$P(IB101,U,4))
"RTN","IBJTBA1",201,0)
 Q
"RTN","IBJTBA1",202,0)
 ;
"RTN","IBJTBA1",203,0)
OTHERS(IBI,IEN101) ; get other claim(s)
"RTN","IBJTBA1",204,0)
 ; IBI - ien for entry in 361.1
"RTN","IBJTBA1",205,0)
 ; IEN101 - sub-ien for entry in 361.1,101 multiple
"RTN","IBJTBA1",206,0)
 N SUB,IBOTH,OTEXT
"RTN","IBJTBA1",207,0)
 S SUB=0,OTEXT=""
"RTN","IBJTBA1",208,0)
 F  S SUB=$O(^IBM(361.1,IBI,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","IBJTBA1",209,0)
 . S IBOTH=$P($G(^IBM(361.1,IBI,101,IEN101,1,SUB,0)),U) Q:'IBOTH
"RTN","IBJTBA1",210,0)
 . S IBOTH=$$EXTERNAL^DILFD(361.11016,.01,,IBOTH) Q:IBOTH=""
"RTN","IBJTBA1",211,0)
 . S OTEXT=OTEXT_","_IBOTH
"RTN","IBJTBA1",212,0)
 S OTEXT=$P(OTEXT,",",2,99)
"RTN","IBJTBA1",213,0)
 I OTEXT]"" S IBSTR=$$SETLN^IBJTBA("Other Claims: "_OTEXT,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",214,0)
 Q
"RTN","IBJTBA1",215,0)
 ;
"RTN","IBNCPDPU")
0^1^B122718985
"RTN","IBNCPDPU",1,0)
IBNCPDPU ;OAK/ELZ - UTILITIES FOR NCPDP ;Jun 06, 2014@19:13:12
"RTN","IBNCPDPU",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,347,383,405,384,437,435,452,511**;21-MAR-94;Build 106
"RTN","IBNCPDPU",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPDPU",4,0)
 ;
"RTN","IBNCPDPU",5,0)
 ;Reference to ECMEACT^PSOBPSU1 supported by IA# 4702
"RTN","IBNCPDPU",6,0)
 ;Reference to $$EN^BPSNCPDP supported by IA# 4415
"RTN","IBNCPDPU",7,0)
 ;Reference to $$NABP^BPSBUTL supported by IA# 4719
"RTN","IBNCPDPU",8,0)
 ;Reference to $$CLMECME^BPSUTIL2 supported by IA# 6028
"RTN","IBNCPDPU",9,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","IBNCPDPU",10,0)
 ;
"RTN","IBNCPDPU",11,0)
 ;
"RTN","IBNCPDPU",12,0)
CT(DFN,IBRXN,IBFIL,IBADT,IBRMARK) ; files in claims tracking
"RTN","IBNCPDPU",13,0)
 ; Input:
"RTN","IBNCPDPU",14,0)
 ;  DFN - Patient IEN
"RTN","IBNCPDPU",15,0)
 ;  IBRXN - Rx IEN
"RTN","IBNCPDPU",16,0)
 ;  IBFIL - Fill#
"RTN","IBNCPDPU",17,0)
 ;  IBADT - Date of Service
"RTN","IBNCPDPU",18,0)
 ;  IBRMARK - Non-billable Reason (.01 from 356.8)
"RTN","IBNCPDPU",19,0)
 ;
"RTN","IBNCPDPU",20,0)
 N DIE,DR,DA,IBRXTYP,IBEABD
"RTN","IBNCPDPU",21,0)
 ; Check that the Date of Service is current
"RTN","IBNCPDPU",22,0)
 I IBTRKRN,$G(IBADT),($G(IBADT)'=$P(^IBT(356,IBTRKRN,0),U,6)) D
"RTN","IBNCPDPU",23,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".06////"_IBADT D ^DIE
"RTN","IBNCPDPU",24,0)
 I IBTRKRN D:$D(IBRMARK)  Q
"RTN","IBNCPDPU",25,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".19///"_IBRMARK
"RTN","IBNCPDPU",26,0)
 . D ^DIE
"RTN","IBNCPDPU",27,0)
 ; event type pointer for rx billing
"RTN","IBNCPDPU",28,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0))
"RTN","IBNCPDPU",29,0)
 ; earliest auto-billing date
"RTN","IBNCPDPU",30,0)
 S IBEABD=$$EABD^IBTUTL(IBRXTYP,$$FMADD^XLFDT(IBADT,60))
"RTN","IBNCPDPU",31,0)
 ; space out earliest auto bill date
"RTN","IBNCPDPU",32,0)
 ;
"RTN","IBNCPDPU",33,0)
 ; ROI check
"RTN","IBNCPDPU",34,0)
 N IBSCROI,IBDRUG,IBDEA,IBRXDATA
"RTN","IBNCPDPU",35,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(DFN,IBRXN)
"RTN","IBNCPDPU",36,0)
 S IBDRUG=$P(IBRXDATA,U,6)
"RTN","IBNCPDPU",37,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBNCPDPU",38,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBNCPDPU",39,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPDPU",40,0)
 I $G(IBDEA)["U" D
"RTN","IBNCPDPU",41,0)
 . N IBINS,IBFLG,IBINSP
"RTN","IBNCPDPU",42,0)
 . D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",43,0)
 . S IBINSP=$O(IBINS("S",1,99),-1) Q:IBINSP=""
"RTN","IBNCPDPU",44,0)
 . S IBFLG=$$ROI^IBNCPDR4(DFN,$G(IBDRUG),+$G(IBINS(IBINSP,"0")),$G(IBADT))
"RTN","IBNCPDPU",45,0)
 . I 'IBFLG,$G(IBRMARK)="" S IBRMARK="REFUSES TO SIGN RELEASE (ROI)"
"RTN","IBNCPDPU",46,0)
 . I 'IBFLG S IBSCROI=3
"RTN","IBNCPDPU",47,0)
 . I IBFLG S IBSCROI=2
"RTN","IBNCPDPU",48,0)
 ;
"RTN","IBNCPDPU",49,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBADT,IBRXN,IBFIL,$G(IBRMARK),IBEABD,$G(IBSCROI))
"RTN","IBNCPDPU",50,0)
 Q
"RTN","IBNCPDPU",51,0)
 ;
"RTN","IBNCPDPU",52,0)
 ;NDC relocated to IBNCPNB
"RTN","IBNCPDPU",53,0)
 ;
"RTN","IBNCPDPU",54,0)
FILL(X,LEN) ; Zero-fill, right justified.
"RTN","IBNCPDPU",55,0)
 N Y
"RTN","IBNCPDPU",56,0)
 S:'$G(LEN) LEN=1
"RTN","IBNCPDPU",57,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBNCPDPU",58,0)
 F  Q:$L(Y)>(LEN-1)  S Y="0"_Y
"RTN","IBNCPDPU",59,0)
 Q Y
"RTN","IBNCPDPU",60,0)
 ;
"RTN","IBNCPDPU",61,0)
PLANN(DFN,IBX,IBADT) ; returns the ien in the insurance multiple for the given plan/patient provided
"RTN","IBNCPDPU",62,0)
 ;   Output:  insurance co ien^2.312 subfile ien
"RTN","IBNCPDPU",63,0)
 N IBPOL,IBY,IBR
"RTN","IBNCPDPU",64,0)
 S IBR=""
"RTN","IBNCPDPU",65,0)
 D ALL^IBCNS1(DFN,"IBPOL",1,IBADT)
"RTN","IBNCPDPU",66,0)
 S IBY=0 F  S IBY=$O(IBPOL(IBY)) Q:'IBY!IBR  I $P($G(IBPOL(IBY,0)),U,18)=IBX S IBR=$P(IBPOL(IBY,0),U,1)_U_IBY Q
"RTN","IBNCPDPU",67,0)
 Q IBR
"RTN","IBNCPDPU",68,0)
 ;
"RTN","IBNCPDPU",69,0)
PLANEPS(IBPL) ; returns the ePharmacy payer sheets for a group plan 
"RTN","IBNCPDPU",70,0)
 ; IBPL = IEN to GROUP INSURANCE PLAN file #355.3
"RTN","IBNCPDPU",71,0)
 ; Returns: Payer Sheets. (B1,B2,B3,E1) (comma separated string)
"RTN","IBNCPDPU",72,0)
 ;   Successful:   1^B1,B2,B3,E1
"RTN","IBNCPDPU",73,0)
 ;   Unsuccessful: 0
"RTN","IBNCPDPU",74,0)
 N PIEN,IBR,PLN10,B1,B2,B3,E1
"RTN","IBNCPDPU",75,0)
 S IBR=0
"RTN","IBNCPDPU",76,0)
 I '$G(IBPL) Q IBR
"RTN","IBNCPDPU",77,0)
 ; Get ePharmacy plan IEN
"RTN","IBNCPDPU",78,0)
 S PIEN=+$P($G(^IBA(355.3,IBPL,6)),U,1)
"RTN","IBNCPDPU",79,0)
 I 'PIEN Q IBR
"RTN","IBNCPDPU",80,0)
 S PLN10=$G(^IBCNR(366.03,PIEN,10))
"RTN","IBNCPDPU",81,0)
 ; check for test/production sheets
"RTN","IBNCPDPU",82,0)
 ; get the test payer sheet first.  If nil, then get the regular payer sheet
"RTN","IBNCPDPU",83,0)
 S (B1,B2,B3,E1)=""
"RTN","IBNCPDPU",84,0)
 S B1=$P(PLN10,U,11),B2=$P(PLN10,U,12),B3=$P(PLN10,U,13),E1=$P(PLN10,U,14)
"RTN","IBNCPDPU",85,0)
 I 'B1 S B1=$P(PLN10,U,7)         ; billing
"RTN","IBNCPDPU",86,0)
 I 'B2 S B2=$P(PLN10,U,8)         ; reversal
"RTN","IBNCPDPU",87,0)
 I 'B3 S B3=$P(PLN10,U,9)         ; rebill (not currently validated)
"RTN","IBNCPDPU",88,0)
 I 'E1 S E1=$P(PLN10,U,15)        ; eligibility
"RTN","IBNCPDPU",89,0)
 S IBR="1^"_B1_","_B2_","_B3_","_E1
"RTN","IBNCPDPU",90,0)
 Q IBR
"RTN","IBNCPDPU",91,0)
 ;
"RTN","IBNCPDPU",92,0)
RT(DFN,IBDT,IBINS,IBPTYP) ; returns rate type to use for bill
"RTN","IBNCPDPU",93,0)
 ; Input:
"RTN","IBNCPDPU",94,0)
 ;    DFN - patient ien
"RTN","IBNCPDPU",95,0)
 ;   IBDT - date of service
"RTN","IBNCPDPU",96,0)
 ;  IBINS - insurance array (pass by reference)
"RTN","IBNCPDPU",97,0)
 ;
"RTN","IBNCPDPU",98,0)
 ; Output:
"RTN","IBNCPDPU",99,0)
 ;  3 piece string in the following format
"RTN","IBNCPDPU",100,0)
 ;     [1] rate type ien
"RTN","IBNCPDPU",101,0)
 ;     [2] Rate Type (Tort or Awp or Cost)
"RTN","IBNCPDPU",102,0)
 ;     [3] Eligibility Basis (V=VETERAN, T=TRICARE, C=CHAMPVA)
"RTN","IBNCPDPU",103,0)
 ;
"RTN","IBNCPDPU",104,0)
 ; IBPTYP - patient type - optional output parameter (pass by reference)
"RTN","IBNCPDPU",105,0)
 ;        - this is only used by the PRO option (see IBNCPDP1)
"RTN","IBNCPDPU",106,0)
 ;        - (V=VETERAN, T=TRICARE, C=CHAMPVA)
"RTN","IBNCPDPU",107,0)
 ;        - NOT the same thing as [3] of this function
"RTN","IBNCPDPU",108,0)
 ;
"RTN","IBNCPDPU",109,0)
 N VAEL,VAERR,IBPT,IBRT,IBX,IBE,IBI,IBRET,IBRS
"RTN","IBNCPDPU",110,0)
 S IBPTYP=""
"RTN","IBNCPDPU",111,0)
 D ELIG^VADPT
"RTN","IBNCPDPU",112,0)
 ;
"RTN","IBNCPDPU",113,0)
 ; if primary elig is vet type, use reimbursable
"RTN","IBNCPDPU",114,0)
 S IBPT=$P($G(^DIC(8,+VAEL(1),0)),U,5) ; = N:NON-VETERAN;Y:VETERAN
"RTN","IBNCPDPU",115,0)
 I IBPT="Y" D  Q IBRT_U_$S($G(IBRET)="VA COST":"C^V",1:"T^V")    ; IB*2*437 modifications
"RTN","IBNCPDPU",116,0)
 . S IBRT=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0))
"RTN","IBNCPDPU",117,0)
 . S IBRT=$S(IBRT:IBRT,1:8)
"RTN","IBNCPDPU",118,0)
 . I $G(IBDT) S IBRET=$P($$EVNTITM^IBCRU3(IBRT,3,"PRESCRIPTION FILL",IBDT,.IBRS),";",1)
"RTN","IBNCPDPU",119,0)
 . Q
"RTN","IBNCPDPU",120,0)
 ;
"RTN","IBNCPDPU",121,0)
 ; ia #'s 427 & 2516 for references to ^DIC(8 and ^DIC(8.1
"RTN","IBNCPDPU",122,0)
 ;
"RTN","IBNCPDPU",123,0)
 ;  -  determine eligibilities - build the IBE array
"RTN","IBNCPDPU",124,0)
 S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1),0)),U,9),0)),U,1),IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",IBE="CHAMPVA":"C",1:"O"))=""     ; primary pt eligibility
"RTN","IBNCPDPU",125,0)
 ; IB*2*452 - for CHAMPVA, CHAMPVA must be primary eligibility only - not among secondary eligibilities
"RTN","IBNCPDPU",126,0)
 S IBX=0 F  S IBX=$O(VAEL(1,IBX)) Q:'IBX  S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1,IBX),0)),U,9),0)),U,1) S IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",1:"O"))=""    ; secondary pt eligibilities
"RTN","IBNCPDPU",127,0)
 ;
"RTN","IBNCPDPU",128,0)
 ; set patient type parameter
"RTN","IBNCPDPU",129,0)
 I $G(VAEL(4)) S IBPTYP="V"   ; veteran without any pt. eligibilities defined
"RTN","IBNCPDPU",130,0)
 I $D(IBE("T")) S IBPTYP="T"  ; TRICARE
"RTN","IBNCPDPU",131,0)
 I $D(IBE("C")) S IBPTYP="C"  ; CHAMPVA
"RTN","IBNCPDPU",132,0)
 ;
"RTN","IBNCPDPU",133,0)
 ;  -  determine insurance policies - build the IBI array
"RTN","IBNCPDPU",134,0)
 S IBX=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  S IBI=$P($G(^IBE(355.1,+$P($G(IBINS(IBX,355.3)),U,9),0)),U,1) S IBI($S(IBI="TRICARE":"T",IBI="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",135,0)
 ;
"RTN","IBNCPDPU",136,0)
 ;  -  if patient is only TRICARE elig and only TRICARE ins bill for TRICARE
"RTN","IBNCPDPU",137,0)
 I $D(IBE("T")),'$D(IBE("O")),'$D(IBE("C")),$D(IBI("T")),'$D(IBI("O")),'$D(IBI("C")) S IBRT=$O(^DGCR(399.3,"B","TRICARE",0)) Q:IBRT IBRT_"^C^T"
"RTN","IBNCPDPU",138,0)
 ;
"RTN","IBNCPDPU",139,0)
 ; IB*2*452 - check for CHAMPVA
"RTN","IBNCPDPU",140,0)
 I $D(IBE("C")),$D(IBI("C")) S IBRT=$O(^DGCR(399.3,"B","CHAMPVA",0)) Q:IBRT IBRT_"^C^C"
"RTN","IBNCPDPU",141,0)
 ;
"RTN","IBNCPDPU",142,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",143,0)
 ;
"RTN","IBNCPDPU",144,0)
 ;
"RTN","IBNCPDPU",145,0)
BS() ; returns the mccr utility to use
"RTN","IBNCPDPU",146,0)
 N IBX
"RTN","IBNCPDPU",147,0)
 S IBX=0 F  S IBX=$O(^DGCR(399.1,"B","PRESCRIPTION",IBX)) Q:IBX<1  I $P($G(^DGCR(399.1,+$G(IBX),0)),U,5) Q
"RTN","IBNCPDPU",148,0)
 Q IBX
"RTN","IBNCPDPU",149,0)
 ;
"RTN","IBNCPDPU",150,0)
RXBIL(IBINP,IBERR) ; Matching NCPDP payments
"RTN","IBNCPDPU",151,0)
 ; Find IB Bill by the 7 or 12 digit ECME number and the Rx fill date
"RTN","IBNCPDPU",152,0)
 ; This function is called by AR routine $$BILL^RCDPESR1 (DBIA 4435).
"RTN","IBNCPDPU",153,0)
 ;Input:
"RTN","IBNCPDPU",154,0)
 ;   IBINP("ECME") - the 7 or 12 digit ECME number (Reference Number)
"RTN","IBNCPDPU",155,0)
 ;   IBINP("FILLDT")  - the Rx fill date, YYYYMMDD or FileMan format
"RTN","IBNCPDPU",156,0)
 ;   IBINP("PNM") (optional) - the patient's last name
"RTN","IBNCPDPU",157,0)
 ;Returns:
"RTN","IBNCPDPU",158,0)
 ;   IBERR (by ref) - the error code, or null string if found
"RTN","IBNCPDPU",159,0)
 ;   RXBIL - IB Bill IEN, or 0 if not matched
"RTN","IBNCPDPU",160,0)
 N IBECME,BILLDA,IBDAT,IBPNAME,BPSDAT
"RTN","IBNCPDPU",161,0)
 S IBERR=""
"RTN","IBNCPDPU",162,0)
 S IBECME=$G(IBINP("ECME"))
"RTN","IBNCPDPU",163,0)
 I '$$VALECME^BPSUTIL2(IBECME) S IBERR="Invalid ECME number" Q 0
"RTN","IBNCPDPU",164,0)
 S IBDAT=$G(IBINP("FILLDT")) ; Rx fill date
"RTN","IBNCPDPU",165,0)
 I IBDAT?8N S IBDAT=($E(IBDAT,1,4)-1700)_$E(IBDAT,5,8) ; conv date to FM format
"RTN","IBNCPDPU",166,0)
 I IBDAT'?7N Q $$RXBILND(IBECME)  ; date is not correct or null
"RTN","IBNCPDPU",167,0)
 S IBPNAME=$G(IBINP("PNM")) ; patient's name (optional)
"RTN","IBNCPDPU",168,0)
 S BILLDA=$$ECMEMTCH(IBECME,IBDAT,IBPNAME,.IBERR)
"RTN","IBNCPDPU",169,0)
 I 'BILLDA S BPSDAT=$$CLMECME^BPSUTIL2(+IBECME,IBDAT) I $G(BPSDAT)>0,BPSDAT'=IBDAT S BILLDA=$$ECMEMTCH(IBECME,BPSDAT,IBPNAME,.IBERR)
"RTN","IBNCPDPU",170,0)
 Q +BILLDA
"RTN","IBNCPDPU",171,0)
 ;
"RTN","IBNCPDPU",172,0)
RXBILND(IBECME) ;Match the bill with no date
"RTN","IBNCPDPU",173,0)
 N IBKEY,IBBC,BILLDA,IBY,IBCUT,ECMELEN,ECMENUM
"RTN","IBNCPDPU",174,0)
 S IBCUT=$$FMADD^XLFDT(DT,-180) ; only 180 days in the past for cut-off date
"RTN","IBNCPDPU",175,0)
 ;
"RTN","IBNCPDPU",176,0)
 ; Search ECME# 7/12 digits forward looking for PRNT/TX claims   (IB*2*435)
"RTN","IBNCPDPU",177,0)
 S BILLDA=0
"RTN","IBNCPDPU",178,0)
 F ECMELEN=12,7 D  Q:BILLDA
"RTN","IBNCPDPU",179,0)
 . I $L(+IBECME)>ECMELEN Q   ; Quit if too large
"RTN","IBNCPDPU",180,0)
 . S ECMENUM=$$RJ^XLFSTR(+IBECME,ECMELEN,0)   ; build ECME#
"RTN","IBNCPDPU",181,0)
 . S IBKEY=ECMENUM_";"
"RTN","IBNCPDPU",182,0)
 . S IBBC=IBKEY_IBCUT
"RTN","IBNCPDPU",183,0)
 . F  S IBBC=$O(^DGCR(399,"AG",IBBC)) Q:IBBC'[IBKEY  D  Q:BILLDA
"RTN","IBNCPDPU",184,0)
 .. S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY)) Q:'IBY  D  Q:BILLDA
"RTN","IBNCPDPU",185,0)
 ... I $P($G(^DGCR(399,+IBY,0)),U,13)'=4 Q  ; not PRNT/TX
"RTN","IBNCPDPU",186,0)
 ... S BILLDA=+IBY
"RTN","IBNCPDPU",187,0)
 ... Q
"RTN","IBNCPDPU",188,0)
 .. Q
"RTN","IBNCPDPU",189,0)
 . Q
"RTN","IBNCPDPU",190,0)
 ;
"RTN","IBNCPDPU",191,0)
 I BILLDA Q BILLDA
"RTN","IBNCPDPU",192,0)
 ;
"RTN","IBNCPDPU",193,0)
 ; Search ECME# 7/12 digits backwards looking for ANY claims within cut-off date  (IB*2*435)
"RTN","IBNCPDPU",194,0)
 S BILLDA=0
"RTN","IBNCPDPU",195,0)
 F ECMELEN=12,7 D  Q:BILLDA
"RTN","IBNCPDPU",196,0)
 . I $L(+IBECME)>ECMELEN Q   ; Quit if too large
"RTN","IBNCPDPU",197,0)
 . S ECMENUM=$$RJ^XLFSTR(+IBECME,ECMELEN,0)   ; build ECME#
"RTN","IBNCPDPU",198,0)
 . S IBKEY=ECMENUM_";"
"RTN","IBNCPDPU",199,0)
 . S IBBC=IBKEY_"8000000"
"RTN","IBNCPDPU",200,0)
 . F  S IBBC=$O(^DGCR(399,"AG",IBBC),-1) Q:IBBC'[IBKEY  Q:$P(IBBC,";",2)<IBCUT  D  Q:BILLDA
"RTN","IBNCPDPU",201,0)
 .. S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY),-1) Q:IBY=""  D  Q:BILLDA
"RTN","IBNCPDPU",202,0)
 ... S BILLDA=+IBY
"RTN","IBNCPDPU",203,0)
 ... Q
"RTN","IBNCPDPU",204,0)
 .. Q
"RTN","IBNCPDPU",205,0)
 . Q
"RTN","IBNCPDPU",206,0)
 ;
"RTN","IBNCPDPU",207,0)
 Q BILLDA
"RTN","IBNCPDPU",208,0)
 ;
"RTN","IBNCPDPU",209,0)
 ;Check matching of two strings - case insensitive, no spaces etc.
"RTN","IBNCPDPU",210,0)
TXMATCH(IBTXT1,IBTXT2,IBMAX) ;
"RTN","IBNCPDPU",211,0)
 N IBTR1,IBTR2,IBT1,IBT2
"RTN","IBNCPDPU",212,0)
 ;Checking only first IBMAX characters (long names may be truncated)
"RTN","IBNCPDPU",213,0)
 S IBTR1="ABCDEFGHIJKLMNOPQRSTUVWXYZ:;"",'._()<>/\|@#$%&*-=!`~ "
"RTN","IBNCPDPU",214,0)
 S IBTR2="abcdefghijklmnopqrstuvwxyz"
"RTN","IBNCPDPU",215,0)
 S IBT1=$E($TR(IBTXT1,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",216,0)
 S IBT2=$E($TR(IBTXT2,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",217,0)
 Q IBT1=IBT2
"RTN","IBNCPDPU",218,0)
 ;
"RTN","IBNCPDPU",219,0)
ECMEBIL(DFN,IBADT) ; Is the pat ECME Billable (pharmacy coverage only)
"RTN","IBNCPDPU",220,0)
 ; DFN - ptr to the patient
"RTN","IBNCPDPU",221,0)
 ; IBADT  - the date
"RTN","IBNCPDPU",222,0)
 ; IBINS - insurance array returned by ALL^IBCNS1
"RTN","IBNCPDPU",223,0)
 N IBANY,IBERMSG,IBX,IBINS,IBT,IBZ,IBRES,IBCAT,IBCOV,IBPCOV
"RTN","IBNCPDPU",224,0)
 S IBRES=0 ; Not ECME Billable by default
"RTN","IBNCPDPU",225,0)
 S (IBCOV,IBPCOV)=0
"RTN","IBNCPDPU",226,0)
 ; -- look up ins with Rx
"RTN","IBNCPDPU",227,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",228,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDPU",229,0)
 S IBCAT=$O(^IBE(355.31,"B","PHARMACY",0))
"RTN","IBNCPDPU",230,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D  Q:IBRES
"RTN","IBNCPDPU",231,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D  Q:IBRES
"RTN","IBNCPDPU",232,0)
 . . N IBZ,IBPIEN,IBY,IBPL
"RTN","IBNCPDPU",233,0)
 . . S IBZ=$G(IBINS(IBT,0))
"RTN","IBNCPDPU",234,0)
 . . S IBPL=+$P(IBZ,U,18) Q:'IBPL
"RTN","IBNCPDPU",235,0)
 . . S IBCOV=1 ; covered
"RTN","IBNCPDPU",236,0)
 . . I '$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q
"RTN","IBNCPDPU",237,0)
 . . S IBPCOV=1
"RTN","IBNCPDPU",238,0)
 . . S IBPIEN=+$G(^IBA(355.3,IBPL,6))
"RTN","IBNCPDPU",239,0)
 . . I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDPU",240,0)
 . . D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDPU",241,0)
 . . I $E($G(IBY(1)))'="A" S:IBERMSG="" IBERMSG=$$ERMSG^IBNCPNB($P($G(IBY(6)),",")) Q
"RTN","IBNCPDPU",242,0)
 . . S IBRES=1
"RTN","IBNCPDPU",243,0)
 I 'IBCOV Q "0^Not Insured"
"RTN","IBNCPDPU",244,0)
 I 'IBPCOV Q "0^No Pharmacy Coverage"
"RTN","IBNCPDPU",245,0)
 I 'IBRES,IBERMSG'="" Q "0^"_IBERMSG
"RTN","IBNCPDPU",246,0)
 I 'IBRES Q "0^No Insurance ECME billable"
"RTN","IBNCPDPU",247,0)
 ;
"RTN","IBNCPDPU",248,0)
 Q IBRES
"RTN","IBNCPDPU",249,0)
 ;
"RTN","IBNCPDPU",250,0)
SUBMIT(IBRX,IBFIL,IBDELAY) ; Submit the Rx claim through ECME
"RTN","IBNCPDPU",251,0)
 ; IBDELAY - Delay Reason Code, passed as the 18th parameter - IB*2.0*435
"RTN","IBNCPDPU",252,0)
 ; IBRX - RX ien in file #52
"RTN","IBNCPDPU",253,0)
 ; IBFIL - Fill No (0 for orig fill)
"RTN","IBNCPDPU",254,0)
 N IBDT,IBNDC,IBX
"RTN","IBNCPDPU",255,0)
 I '$G(IBRX)!('$D(IBFIL)) Q "0^Invalid parameters."
"RTN","IBNCPDPU",256,0)
 S IBDT=$S('IBFIL:$$FILE^IBRXUTL(IBRX,22),1:$$SUBFILE^IBRXUTL(IBRX,IBFIL,52,.01))
"RTN","IBNCPDPU",257,0)
 S IBX=$$EN^BPSNCPDP(+IBRX,+IBFIL,IBDT,"BB",,,,,,,,,,,,,,+$G(IBDELAY))
"RTN","IBNCPDPU",258,0)
 I +IBX=0 D ECMEACT^PSOBPSU1(+IBRX,+IBFIL,"Claim submitted to 3rd party payer: IB BACK BILLING")
"RTN","IBNCPDPU",259,0)
 Q IBX
"RTN","IBNCPDPU",260,0)
 ;
"RTN","IBNCPDPU",261,0)
REASON(IBX,EXACT) ; Close Claim Reasons
"RTN","IBNCPDPU",262,0)
 Q $P($G(^IBE(356.8,+IBX,0)),U) ; non-billable reason
"RTN","IBNCPDPU",263,0)
 ;
"RTN","IBNCPDPU",264,0)
NABP(IBIFN) ;NABP Number
"RTN","IBNCPDPU",265,0)
 N IBY,IBTRKN,IBRX,IBFIL,IBZ,IBNABP
"RTN","IBNCPDPU",266,0)
 S IBY=+$O(^IBT(356.399,"C",IBIFN,0)) I 'IBY Q ""
"RTN","IBNCPDPU",267,0)
 S IBTRKN=$P($G(^IBT(356.399,IBY,0)),U) I 'IBTRKN Q ""
"RTN","IBNCPDPU",268,0)
 S IBZ=$G(^IBT(356,IBTRKN,0)) I IBZ="" Q ""
"RTN","IBNCPDPU",269,0)
 S IBRX=$P(IBZ,U,8)
"RTN","IBNCPDPU",270,0)
 S IBFIL=$P(IBZ,U,10)
"RTN","IBNCPDPU",271,0)
 S IBNABP=$$NABP^BPSBUTL(IBRX,IBFIL)
"RTN","IBNCPDPU",272,0)
 Q $S(IBNABP=0:"",1:IBNABP)
"RTN","IBNCPDPU",273,0)
 ;
"RTN","IBNCPDPU",274,0)
 ; Get the K-bill# from CT
"RTN","IBNCPDPU",275,0)
BILL(IBRX,IBFIL) ;
"RTN","IBNCPDPU",276,0)
 N IBTRKN,IBIFN
"RTN","IBNCPDPU",277,0)
 S IBTRKN=+$O(^IBT(356,"ARXFL",+$G(IBRX),+$G(IBFIL),""))
"RTN","IBNCPDPU",278,0)
 S IBIFN=+$P($G(^IBT(356,IBTRKN,0)),U,11)
"RTN","IBNCPDPU",279,0)
 Q $P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBNCPDPU",280,0)
 ;
"RTN","IBNCPDPU",281,0)
REJECT(IBECME,IBDATE) ; Is the e-claim rejected?
"RTN","IBNCPDPU",282,0)
 N IBTRKRN,IBY,ECMELEN
"RTN","IBNCPDPU",283,0)
 I IBECME'?1.12N Q 0
"RTN","IBNCPDPU",284,0)
 S IBTRKRN=0
"RTN","IBNCPDPU",285,0)
 F ECMELEN=12,7 D  Q:IBTRKRN
"RTN","IBNCPDPU",286,0)
 . I $L(+IBECME)>ECMELEN Q
"RTN","IBNCPDPU",287,0)
 . S IBECME=$$RJ^XLFSTR(+IBECME,ECMELEN,0)    ; build ECME# with leading zeros
"RTN","IBNCPDPU",288,0)
 . S IBTRKRN=+$O(^IBT(356,"AE",IBECME,0))
"RTN","IBNCPDPU",289,0)
 . Q
"RTN","IBNCPDPU",290,0)
 ;
"RTN","IBNCPDPU",291,0)
 I 'IBTRKRN Q 0
"RTN","IBNCPDPU",292,0)
 S IBY=$G(^IBT(356,IBTRKRN,1))
"RTN","IBNCPDPU",293,0)
 I $P(IBY,U,11)>0 Q 1  ; Rejected or closed
"RTN","IBNCPDPU",294,0)
 Q 0
"RTN","IBNCPDPU",295,0)
 ;
"RTN","IBNCPDPU",296,0)
RXINS(DFN,IBADT,IBINS) ; Return an array of pharmacy insurance policies by COB order
"RTN","IBNCPDPU",297,0)
 ;  Input:
"RTN","IBNCPDPU",298,0)
 ;      DFN - Patient ien (required)
"RTN","IBNCPDPU",299,0)
 ;    IBADT - Date of Service (fileman format, optional defaults to today)
"RTN","IBNCPDPU",300,0)
 ; Output:
"RTN","IBNCPDPU",301,0)
 ;    IBINS - Name of destination array (pass by reference)
"RTN","IBNCPDPU",302,0)
 ;
"RTN","IBNCPDPU",303,0)
 N CT,COB,IEN,IBPL
"RTN","IBNCPDPU",304,0)
 K IBINS
"RTN","IBNCPDPU",305,0)
 S DFN=+$G(DFN)
"RTN","IBNCPDPU",306,0)
 S IBADT=+$G(IBADT,DT)
"RTN","IBNCPDPU",307,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)   ; gather all insurance policies in COB order
"RTN","IBNCPDPU",308,0)
 ;
"RTN","IBNCPDPU",309,0)
 S CT=0   ; count up Rx policies found
"RTN","IBNCPDPU",310,0)
 S COB="" F  S COB=$O(IBINS("S",COB)) Q:COB=""  S IEN=0 F  S IEN=$O(IBINS("S",COB,IEN)) Q:'IEN  D
"RTN","IBNCPDPU",311,0)
 . S IBPL=+$P($G(IBINS(IEN,0)),U,18)  ; plan ien
"RTN","IBNCPDPU",312,0)
 . I 'IBPL K IBINS(IEN),IBINS("S",COB,IEN) Q   ; no plan
"RTN","IBNCPDPU",313,0)
 . I '$$PLCOV^IBCNSU3(IBPL,IBADT,3) K IBINS(IEN),IBINS("S",COB,IEN) Q    ; not a pharmacy plan
"RTN","IBNCPDPU",314,0)
 . S CT=CT+1
"RTN","IBNCPDPU",315,0)
 . Q
"RTN","IBNCPDPU",316,0)
 ;
"RTN","IBNCPDPU",317,0)
 S IBINS=CT    ; store total number found at the top level
"RTN","IBNCPDPU",318,0)
 ;
"RTN","IBNCPDPU",319,0)
RXINSX ;
"RTN","IBNCPDPU",320,0)
 Q
"RTN","IBNCPDPU",321,0)
 ;
"RTN","IBNCPDPU",322,0)
ECMEMTCH(IBECME,IBDAT,IBPNAME,IBERR) ; Attempt ECME# look up with either 7 digit or 12 digit number  (IB*2*435)
"RTN","IBNCPDPU",323,0)
 N IBFOUND,IBMATCH,ECMELEN,IBKEY,BILLDA
"RTN","IBNCPDPU",324,0)
 S IBFOUND=0,IBMATCH=0
"RTN","IBNCPDPU",325,0)
 F ECMELEN=12,7 D  Q:IBFOUND
"RTN","IBNCPDPU",326,0)
 . I $L(+IBECME)>ECMELEN Q  ; Quit if too large
"RTN","IBNCPDPU",327,0)
 . S ECMENUM=$$RJ^XLFSTR(+IBECME,ECMELEN,0)  ; build ECME#
"RTN","IBNCPDPU",328,0)
 . S IBKEY=ECMENUM_";"_IBDAT ; The ECME Number (BC ID) for the "AG" xref
"RTN","IBNCPDPU",329,0)
 . S BILLDA=""
"RTN","IBNCPDPU",330,0)
 . ; Search Backward
"RTN","IBNCPDPU",331,0)
 . F  S BILLDA=$O(^DGCR(399,"AG",IBKEY,BILLDA),-1) Q:BILLDA=""  D  Q:IBFOUND
"RTN","IBNCPDPU",332,0)
 .. I 'BILLDA Q  ; IEN must be numeric
"RTN","IBNCPDPU",333,0)
 .. I '$D(^DGCR(399,BILLDA,0)) Q  ; Corrupted index
"RTN","IBNCPDPU",334,0)
 .. S IBMATCH=1
"RTN","IBNCPDPU",335,0)
 .. I IBPNAME'="" I '$$TXMATCH($P(IBPNAME,","),$P($G(^DPT(+$P(^DGCR(399,BILLDA,0),U,2),0)),","),8) Q  ; Patient name doesn't match
"RTN","IBNCPDPU",336,0)
 .. S IBFOUND=1
"RTN","IBNCPDPU",337,0)
 I 'BILLDA S IBERR=$S(IBMATCH:"Patient's name does not match",1:"Matching bill not found") ; not matched
"RTN","IBNCPDPU",338,0)
 Q +BILLDA
"RTN","IBNCPDPU",339,0)
 ;
"RTN","IBNCPDPU",340,0)
 ;IBNCPDPU
"UP",361.1,361.1101,-1)
361.1^101
"UP",361.1,361.1101,0)
361.1101
"VER")
8.0^22.0
"^DD",361.1,361.1,101,0)
MOVE/COPY/REMOVE HISTORY^361.1101DA^^101;0
"^DD",361.1,361.1,101,21,0)
^^2^2^3140123^
"^DD",361.1,361.1,101,21,1,0)
This multiple contains a record for each time an EEOB is moved or copied. 
"^DD",361.1,361.1,101,21,2,0)
Removing an EEOB also creates a record in this multiple.
"^DD",361.1,361.1,101,23,0)
^^2^2^3140123^
"^DD",361.1,361.1,101,23,1,0)
Updated from EEOB Move/Copy/Remove option and Worklist Split/Edit Line
"^DD",361.1,361.1,101,23,2,0)
protocol.
"^DD",361.1,361.1,101,"DT")
3140123
"^DD",361.1,361.1,102,0)
EEOB REMOVED^S^1:REMOVED;^102;1^Q
"^DD",361.1,361.1,102,.1)
ELECTRONIC EXPLANATION OF BENEFITS REMOVED
"^DD",361.1,361.1,102,3)
Enter 1 to indicate that the EEOB has been removed.
"^DD",361.1,361.1,102,21,0)
^^3^3^3140506^
"^DD",361.1,361.1,102,21,1,0)
This field indicates that the ELECTRONIC EXPLANATION OF BENEFITS
"^DD",361.1,361.1,102,21,2,0)
(EEOB) detail on the record has been filed against the wrong claim and
"^DD",361.1,361.1,102,21,3,0)
should be ignored by all reporting options.
"^DD",361.1,361.1,102,"DT")
3140506
"^DD",361.1,361.1101,0)
MOVE/COPY/REMOVE HISTORY SUB-FIELD^^.06^6
"^DD",361.1,361.1101,0,"NM","MOVE/COPY/REMOVE HISTORY")

"^DD",361.1,361.1101,.01,0)
DATE/TIME EEOB MOVED^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",361.1,361.1101,.01,1,0)
^.1
"^DD",361.1,361.1101,.01,1,1,0)
361.1101^B
"^DD",361.1,361.1101,.01,1,1,1)
S ^IBM(361.1,DA(1),101,"B",$E(X,1,30),DA)=""
"^DD",361.1,361.1101,.01,1,1,2)
K ^IBM(361.1,DA(1),101,"B",$E(X,1,30),DA)
"^DD",361.1,361.1101,.01,1,2,0)
361.1^AEOB
"^DD",361.1,361.1101,.01,1,2,1)
S ^IBM(361.1,"AEOB",$E(X,1,30),DA(1),DA)=""
"^DD",361.1,361.1101,.01,1,2,2)
K ^IBM(361.1,"AEOB",$E(X,1,30),DA(1),DA)
"^DD",361.1,361.1101,.01,1,2,"%D",0)
^^2^2^3140123^
"^DD",361.1,361.1101,.01,1,2,"%D",1,0)
This cross reference is used by the RCDPE EEOB MOVE/COPY/RMOVE AUDIT RPT
"^DD",361.1,361.1101,.01,1,2,"%D",2,0)
option.
"^DD",361.1,361.1101,.01,1,2,"DT")
3110905
"^DD",361.1,361.1101,.01,3)
Enter date/time EEOB was moved or copied or removed.
"^DD",361.1,361.1101,.01,21,0)
^^1^1^3140123^
"^DD",361.1,361.1101,.01,21,1,0)
This is the Date/Time the move, copy or remove action was performed.
"^DD",361.1,361.1101,.01,"DT")
3140123
"^DD",361.1,361.1101,.02,0)
EEOB MOVE/COPY/REMOVE BY^P200'^VA(200,^0;2^Q
"^DD",361.1,361.1101,.02,3)
Select the person who moved, copied or removed the EEOB.
"^DD",361.1,361.1101,.02,21,0)
^^2^2^3140123^
"^DD",361.1,361.1101,.02,21,1,0)
This is person who moved or copied the EEOB to a new claim or removed EEOB
"^DD",361.1,361.1101,.02,21,2,0)
from the current claim.
"^DD",361.1,361.1101,.02,"DT")
3140123
"^DD",361.1,361.1101,.03,0)
MOVE/COPY/REMOVE REASON^FX^^0;3^K:$L(X)>100!($L(X)<1)!($TR(X," ","")="") X
"^DD",361.1,361.1101,.03,3)
Answer must be 1-100 characters in length.
"^DD",361.1,361.1101,.03,21,0)
^^2^2^3140123^
"^DD",361.1,361.1101,.03,21,1,0)
Justification for moving EEOB to new claim or claims or removing EEOB from
"^DD",361.1,361.1101,.03,21,2,0)
current claim.
"^DD",361.1,361.1101,.03,"DT")
3140123
"^DD",361.1,361.1101,.05,0)
MOVE/COPY/REMOVE EVENT^S^M:Move;C:Copy;R:Remove;^0;5^Q
"^DD",361.1,361.1101,.05,3)
Indicate whether the EEOB was moved, copied or removed.
"^DD",361.1,361.1101,.05,21,0)
^^3^3^3140123^
"^DD",361.1,361.1101,.05,21,1,0)
This field indicates whether a move, copy or delete action was performed.
"^DD",361.1,361.1101,.05,21,2,0)
It is automatically updated by the EEOB Move/Copy/Remove option and the
"^DD",361.1,361.1101,.05,21,3,0)
Split/Edit a Line option.
"^DD",361.1,361.1101,.05,"DT")
3140123
**INSTALL NAME**
BPS*1.0*17
"BLD",8784,0)
BPS*1.0*17^E CLAIMS MGMT ENGINE^0^3150312^y
"BLD",8784,1,0)
^^2^2^3140529^
"BLD",8784,1,1,0)
ePayments ePharmacy Compliance
"BLD",8784,1,2,0)
BPS IB PRCA EPAYMENTS BUNDLE 1.0
"BLD",8784,4,0)
^9.64PA^9002313.57^1
"BLD",8784,4,9002313.57,0)
9002313.57
"BLD",8784,4,9002313.57,2,0)
^9.641^9002313.57^1
"BLD",8784,4,9002313.57,2,9002313.57,0)
BPS LOG OF TRANSACTIONS  (File-top level)
"BLD",8784,4,9002313.57,2,9002313.57,1,0)
^9.6411^1.11^1
"BLD",8784,4,9002313.57,2,9002313.57,1,1.11,0)
PRESCRIPTION NUMBER
"BLD",8784,4,9002313.57,222)
y^y^p^^^^n^^n
"BLD",8784,4,9002313.57,224)

"BLD",8784,4,"APDD",9002313.57,9002313.57)

"BLD",8784,4,"APDD",9002313.57,9002313.57,1.11)

"BLD",8784,4,"B",9002313.57,9002313.57)

"BLD",8784,6.3)
99
"BLD",8784,"ABPKG")
n
"BLD",8784,"INI")

"BLD",8784,"INIT")
POST^BPS10P17
"BLD",8784,"KRN",0)
^9.67PA^779.2^20
"BLD",8784,"KRN",.4,0)
.4
"BLD",8784,"KRN",.401,0)
.401
"BLD",8784,"KRN",.402,0)
.402
"BLD",8784,"KRN",.403,0)
.403
"BLD",8784,"KRN",.5,0)
.5
"BLD",8784,"KRN",.84,0)
.84
"BLD",8784,"KRN",3.6,0)
3.6
"BLD",8784,"KRN",3.8,0)
3.8
"BLD",8784,"KRN",9.2,0)
9.2
"BLD",8784,"KRN",9.8,0)
9.8
"BLD",8784,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8784,"KRN",9.8,"NM",1,0)
BPS10P17^^0^B10122809
"BLD",8784,"KRN",9.8,"NM",2,0)
BPSUTIL2^^0^B52546743
"BLD",8784,"KRN",9.8,"NM","B","BPS10P17",1)

"BLD",8784,"KRN",9.8,"NM","B","BPSUTIL2",2)

"BLD",8784,"KRN",19,0)
19
"BLD",8784,"KRN",19.1,0)
19.1
"BLD",8784,"KRN",101,0)
101
"BLD",8784,"KRN",409.61,0)
409.61
"BLD",8784,"KRN",771,0)
771
"BLD",8784,"KRN",779.2,0)
779.2
"BLD",8784,"KRN",870,0)
870
"BLD",8784,"KRN",8989.51,0)
8989.51
"BLD",8784,"KRN",8989.52,0)
8989.52
"BLD",8784,"KRN",8994,0)
8994
"BLD",8784,"KRN","B",.4,.4)

"BLD",8784,"KRN","B",.401,.401)

"BLD",8784,"KRN","B",.402,.402)

"BLD",8784,"KRN","B",.403,.403)

"BLD",8784,"KRN","B",.5,.5)

"BLD",8784,"KRN","B",.84,.84)

"BLD",8784,"KRN","B",3.6,3.6)

"BLD",8784,"KRN","B",3.8,3.8)

"BLD",8784,"KRN","B",9.2,9.2)

"BLD",8784,"KRN","B",9.8,9.8)

"BLD",8784,"KRN","B",19,19)

"BLD",8784,"KRN","B",19.1,19.1)

"BLD",8784,"KRN","B",101,101)

"BLD",8784,"KRN","B",409.61,409.61)

"BLD",8784,"KRN","B",771,771)

"BLD",8784,"KRN","B",779.2,779.2)

"BLD",8784,"KRN","B",870,870)

"BLD",8784,"KRN","B",8989.51,8989.51)

"BLD",8784,"KRN","B",8989.52,8989.52)

"BLD",8784,"KRN","B",8994,8994)

"BLD",8784,"PRE")

"BLD",8784,"QUES",0)
^9.62^^
"BLD",8784,"REQB",0)
^9.611^1^1
"BLD",8784,"REQB",1,0)
BPS*1.0*11^1
"BLD",8784,"REQB","B","BPS*1.0*11",1)

"FIA",9002313.57)
BPS LOG OF TRANSACTIONS
"FIA",9002313.57,0)
^BPSTL(
"FIA",9002313.57,0,0)
9002313.57
"FIA",9002313.57,0,1)
y^y^p^^^^n^^n
"FIA",9002313.57,0,10)

"FIA",9002313.57,0,11)

"FIA",9002313.57,0,"RLRO")

"FIA",9002313.57,0,"VR")
1.0^BPS
"FIA",9002313.57,9002313.57)
1
"FIA",9002313.57,9002313.57,1.11)

"INIT")
POST^BPS10P17
"MBREQ")
1
"PKG",498,-1)
1^1
"PKG",498,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",498,20,0)
^9.402P^^
"PKG",498,22,0)
^9.49I^1^1
"PKG",498,22,1,0)
1.0^3041008^3041119^66481
"PKG",498,22,1,"PAH",1,0)
17^3150312^10
"PKG",498,22,1,"PAH",1,1,0)
^^2^2^3150312
"PKG",498,22,1,"PAH",1,1,1,0)
ePayments ePharmacy Compliance
"PKG",498,22,1,"PAH",1,1,2,0)
BPS IB PRCA EPAYMENTS BUNDLE 1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","BPS10P17")
0^1^B10122809
"RTN","BPS10P17",1,0)
BPS10P17 ; ALB/hrubovcak - BPS*1.0*17 Post-Installation Processing ;Jun 06, 2014@19:13:53
"RTN","BPS10P17",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**17**; 15 May 2014;Build 99
"RTN","BPS10P17",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","BPS10P17",4,0)
 ;
"RTN","BPS10P17",5,0)
 ; References to ^XPDMENU supported by DBIA 1157
"RTN","BPS10P17",6,0)
 Q
"RTN","BPS10P17",7,0)
 ;
"RTN","BPS10P17",8,0)
PRE ; pre-installation processing
"RTN","BPS10P17",9,0)
 ;
"RTN","BPS10P17",10,0)
 Q
"RTN","BPS10P17",11,0)
 ;
"RTN","BPS10P17",12,0)
POST ; post-installation processing
"RTN","BPS10P17",13,0)
 D XREF ; cross-ref. file #9002313.57
"RTN","BPS10P17",14,0)
 Q
"RTN","BPS10P17",15,0)
 ;
"RTN","BPS10P17",16,0)
XREF ; Task job to cross-ref. #9002313.57
"RTN","BPS10P17",17,0)
 ;
"RTN","BPS10P17",18,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","BPS10P17",19,0)
 D MES^XPDUTL(" "),MES^XPDUTL(" "_$$FMTE^XLFDT($$NOW^XLFDT))  ; add blank line and date/time to log
"RTN","BPS10P17",20,0)
 D MES^XPDUTL("Queueing the BPS LOG OF TRANSACTIONS file (#9002313.57) cross-reference task.")
"RTN","BPS10P17",21,0)
 S ZTRTN="AECXREF^BPS10P17",ZTDESC="BPS LOG OF TRANSACTIONS file cross-ref.",ZTIO="",ZTDTH=$H
"RTN","BPS10P17",22,0)
 D ^%ZTLOAD
"RTN","BPS10P17",23,0)
 D MES^XPDUTL($S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task."))
"RTN","BPS10P17",24,0)
 I $G(ZTSK) D MES^XPDUTL("A MailMan message will be sent on completion.")
"RTN","BPS10P17",25,0)
 ;
"RTN","BPS10P17",26,0)
 Q
"RTN","BPS10P17",27,0)
 ;
"RTN","BPS10P17",28,0)
AECXREF ; set "AEC" cross-ref. for PRESCRIPTION NUMBER field (#1.11) in BPS LOG OF TRANSACTIONS file (#9002313.57)
"RTN","BPS10P17",29,0)
 ; sends MailMan message on completion, this subroutine can be called manually
"RTN","BPS10P17",30,0)
 ;
"RTN","BPS10P17",31,0)
 N BPSCNTR,BPSDA,BPTOTL,BPXMBODY,BPXMSUBJ,BPXMTO,BPXMZR,DA,DIK,X
"RTN","BPS10P17",32,0)
 ; DA, DIK used for ^DIK call
"RTN","BPS10P17",33,0)
 ; BPSDA - IEN in BPS LOG OF TRANSACTIONS
"RTN","BPS10P17",34,0)
 ; BPSCNTR - count of cross-refs. set
"RTN","BPS10P17",35,0)
 ; BPTOTL - count of entries checked
"RTN","BPS10P17",36,0)
 ; BPXMSUBJ - message subject
"RTN","BPS10P17",37,0)
 ; BPXMTO - array of MailMan message recipients
"RTN","BPS10P17",38,0)
 ; BPXMZR - message number returned
"RTN","BPS10P17",39,0)
 ;
"RTN","BPS10P17",40,0)
 ; loop through BPS LOG OF TRANSACTIONS file (#9002313.57), find PRESCRIPTION NUMBER
"RTN","BPS10P17",41,0)
 S (BPSCNTR,BPTOTL)=0,BPSCNTR("BEG")=$$NOW^XLFDT
"RTN","BPS10P17",42,0)
 ;
"RTN","BPS10P17",43,0)
 S BPSDA=$C(1)  ; iterating backwards, set to value past numbers
"RTN","BPS10P17",44,0)
 F  S BPSDA=$O(^BPSTL(BPSDA),-1) Q:'(BPSDA>0)  D
"RTN","BPS10P17",45,0)
 .S BPTOTL=BPTOTL+1,X=$P($G(^BPSTL(BPSDA,1)),U,11) Q:X=""
"RTN","BPS10P17",46,0)
 .Q:$D(^BPSTL("AEC",X,BPSDA))  ; cross-ref. exists
"RTN","BPS10P17",47,0)
 .S DA=BPSDA,DIK="^BPSTL(",DIK(1)="1.11^AEC",BPSCNTR=BPSCNTR+1 D IX1^DIK
"RTN","BPS10P17",48,0)
 ;
"RTN","BPS10P17",49,0)
 S BPSCNTR("END")=$$NOW^XLFDT
"RTN","BPS10P17",50,0)
 ; create MailMan message text
"RTN","BPS10P17",51,0)
 S BPXMBODY(1,0)="Finished cross-reference of BPS LOG OF TRANSACTIONS file (#9002313.57)"
"RTN","BPS10P17",52,0)
 S BPXMBODY(2,0)="for the PRESCRIPTION NUMBER field (#1.11)"
"RTN","BPS10P17",53,0)
 S BPXMBODY(3,0)="          Total Entries examined: "_$FN(BPTOTL,",")
"RTN","BPS10P17",54,0)
 S BPXMBODY(4,0)="  Prescriptions cross-referenced: "_$FN(BPSCNTR,",")
"RTN","BPS10P17",55,0)
 S BPXMBODY(5,0)=" Work begun: "_$$FMTE^XLFDT(BPSCNTR("BEG"))
"RTN","BPS10P17",56,0)
 S BPXMBODY(6,0)=" Work ended: "_$$FMTE^XLFDT(BPSCNTR("END"))
"RTN","BPS10P17",57,0)
 S:$G(ZTSK) BPXMBODY(7,0)=" * Queued as Task #"_ZTSK_" *"
"RTN","BPS10P17",58,0)
 ;
"RTN","BPS10P17",59,0)
 ; send via MailMan
"RTN","BPS10P17",60,0)
 S BPXMSUBJ="Updated cross-reference of BPS LOG OF TRANSACTIONS"
"RTN","BPS10P17",61,0)
 S BPXMTO(.5)="",BPXMTO(DUZ)=""  ; POSTMASTER and user who queued it
"RTN","BPS10P17",62,0)
 S BPXMTO("G.RCDPE PAYMENTS MGMT")=""
"RTN","BPS10P17",63,0)
 ;
"RTN","BPS10P17",64,0)
 D SENDMSG^XMXAPI(DUZ,BPXMSUBJ,"BPXMBODY",.BPXMTO,,.BPXMZR)  ; send message
"RTN","BPS10P17",65,0)
 I $G(BPXMZR),'$G(ZTSK),$E(IOST,1,2)="C-" D MES^XPDUTL("MailMan message number: "_BPXMZR)
"RTN","BPS10P17",66,0)
 ;
"RTN","BPS10P17",67,0)
 Q
"RTN","BPS10P17",68,0)
 ;
"RTN","BPSUTIL2")
0^2^B52546743
"RTN","BPSUTIL2",1,0)
BPSUTIL2 ;BHAM ISC/SS - General Utility functions ;Jun 06, 2014@19:13:53
"RTN","BPSUTIL2",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**7,8,10,11,17**;JUN 2004;Build 99
"RTN","BPSUTIL2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSUTIL2",4,0)
 ;
"RTN","BPSUTIL2",5,0)
 Q
"RTN","BPSUTIL2",6,0)
 ;
"RTN","BPSUTIL2",7,0)
 ;/**
"RTN","BPSUTIL2",8,0)
 ;Creates a new entry (or node for multiple with .01 field)
"RTN","BPSUTIL2",9,0)
 ;
"RTN","BPSUTIL2",10,0)
 ;BPFILE - file/subfile number
"RTN","BPSUTIL2",11,0)
 ;BPIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","BPSUTIL2",12,0)
 ;BPVAL01 - .01 value for the new entry
"RTN","BPSUTIL2",13,0)
 ;NEWRECNO -(optional) specify IEN if you want specific value
"RTN","BPSUTIL2",14,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","BPSUTIL2",15,0)
 ;BPFLGS - FLAGS parameter for UPDATE^DIE
"RTN","BPSUTIL2",16,0)
 ;LCKGL - fully specified global reference to lock
"RTN","BPSUTIL2",17,0)
 ;LCKTIME - time out for LOCK, if LOCKTIME=0 then the function will not lock the file 
"RTN","BPSUTIL2",18,0)
 ;BPNEWREC - optional, flag = if 1 then allow to create a new top level record 
"RTN","BPSUTIL2",19,0)
 ;Examples
"RTN","BPSUTIL2",20,0)
 ;top level:
"RTN","BPSUTIL2",21,0)
 ; D INSITEM(366.14,"",IBDATE,"")
"RTN","BPSUTIL2",22,0)
 ;to create with the specific ien
"RTN","BPSUTIL2",23,0)
 ; W $$INSITEM^BPSUTIL2(9002313.77,"",55555555,45555,,,,1)
"RTN","BPSUTIL2",24,0)
 ; 
"RTN","BPSUTIL2",25,0)
 ;1st level multiple:
"RTN","BPSUTIL2",26,0)
 ; subfile number = #366.141
"RTN","BPSUTIL2",27,0)
 ; parent file #366.14 entry number = 345
"RTN","BPSUTIL2",28,0)
 ; D INSITEM(366.141,345,"SUBMIT","")
"RTN","BPSUTIL2",29,0)
 ; to create multiple entry with particular entry number = 23
"RTN","BPSUTIL2",30,0)
 ; D INSITEM(366.141,345,"SUBMIT",23)
"RTN","BPSUTIL2",31,0)
 ;
"RTN","BPSUTIL2",32,0)
 ;2nd level multiple
"RTN","BPSUTIL2",33,0)
 ;parent file #366.14 entry number = 234
"RTN","BPSUTIL2",34,0)
 ;parent multiple entry number = 55
"RTN","BPSUTIL2",35,0)
 ;create multiple entry INSURANCE
"RTN","BPSUTIL2",36,0)
 ; D INSITEM(366.1412,"55,234","INS","")
"RTN","BPSUTIL2",37,0)
 ; results in :
"RTN","BPSUTIL2",38,0)
 ; ^IBCNR(366.14,234,1,55,5,0)=^366.1412PA^1^1
"RTN","BPSUTIL2",39,0)
 ; ^IBCNR(366.14,234,1,55,5,1,0)=INS
"RTN","BPSUTIL2",40,0)
 ; ^IBCNR(366.14,234,1,55,5,"B","INS",1)=
"RTN","BPSUTIL2",41,0)
 ;  (DD node for this multiple =5 ) 
"RTN","BPSUTIL2",42,0)
 ;  
"RTN","BPSUTIL2",43,0)
 ;output :
"RTN","BPSUTIL2",44,0)
 ; positive number - record # created
"RTN","BPSUTIL2",45,0)
 ; <=0 - failure
"RTN","BPSUTIL2",46,0)
 ;  See description above
"RTN","BPSUTIL2",47,0)
INSITEM(BPFILE,BPIEN,BPVAL01,NEWRECNO,BPFLGS,LCKGL,LCKTIME,BPNEWREC) ;*/
"RTN","BPSUTIL2",48,0)
 I ('$G(BPFILE)) Q "0^Invalid parameter"
"RTN","BPSUTIL2",49,0)
 I +$G(BPNEWREC)=0 I $G(NEWRECNO)>0,'$G(BPIEN) Q "0^Invalid parameter"
"RTN","BPSUTIL2",50,0)
 I $G(BPVAL01)="" Q "0^Null"
"RTN","BPSUTIL2",51,0)
 N BPLOCK S BPLOCK=0
"RTN","BPSUTIL2",52,0)
 ;I '$G(BPFILE) Q -1
"RTN","BPSUTIL2",53,0)
 ;I '$G(BPVAL01) Q -1
"RTN","BPSUTIL2",54,0)
 N BPSSI,BPIENS,BPFDA,BPERR
"RTN","BPSUTIL2",55,0)
 I '$G(NEWRECNO) N NEWRECNO S NEWRECNO=$G(NEWRECNO)
"RTN","BPSUTIL2",56,0)
 I BPIEN'="" S BPIENS="+1,"_BPIEN_"," I $L(NEWRECNO)>0 S BPSSI(1)=+NEWRECNO
"RTN","BPSUTIL2",57,0)
 I BPIEN="" S BPIENS="+1," I $L(NEWRECNO)>0 S BPSSI(1)=+NEWRECNO
"RTN","BPSUTIL2",58,0)
 S BPFDA(BPFILE,BPIENS,.01)=BPVAL01
"RTN","BPSUTIL2",59,0)
 I $L($G(LCKGL)) L +@LCKGL:(+$G(LCKTIME)) S BPLOCK=$T I 'BPLOCK Q -2  ;lock failure
"RTN","BPSUTIL2",60,0)
 D UPDATE^DIE($G(BPFLGS),"BPFDA","BPSSI","BPERR")
"RTN","BPSUTIL2",61,0)
 I BPLOCK L -@LCKGL
"RTN","BPSUTIL2",62,0)
 I $D(BPERR) D BMES^XPDUTL($G(BPERR("DIERR",1,"TEXT",1),"Update Error")) Q -1  ;D BMES^XPDUTL(BPERR("DIERR",1,"TEXT",1))
"RTN","BPSUTIL2",63,0)
 Q +$G(BPSSI(1))
"RTN","BPSUTIL2",64,0)
 ;
"RTN","BPSUTIL2",65,0)
 ;fill fields
"RTN","BPSUTIL2",66,0)
 ;Input:
"RTN","BPSUTIL2",67,0)
 ;FILENO file number
"RTN","BPSUTIL2",68,0)
 ;FLDNO field number
"RTN","BPSUTIL2",69,0)
 ;RECIEN ien string 
"RTN","BPSUTIL2",70,0)
 ;NEWVAL new value to file (internal format)
"RTN","BPSUTIL2",71,0)
 ;Output:
"RTN","BPSUTIL2",72,0)
 ;0^ NEWVAL^error if failure
"RTN","BPSUTIL2",73,0)
 ;1^ NEWVAL if success
"RTN","BPSUTIL2",74,0)
FILLFLDS(FILENO,FLDNO,RECIEN,NEWVAL) ;
"RTN","BPSUTIL2",75,0)
 I '$G(FILENO) Q "0^Invalid parameter"
"RTN","BPSUTIL2",76,0)
 I '$G(FLDNO) Q "0^Invalid parameter"
"RTN","BPSUTIL2",77,0)
 I '$G(RECIEN) Q "0^Invalid parameter"
"RTN","BPSUTIL2",78,0)
 I $G(NEWVAL)="" Q "0^Null"
"RTN","BPSUTIL2",79,0)
 N RECIENS,FDA,ERRARR
"RTN","BPSUTIL2",80,0)
 S RECIENS=RECIEN_","
"RTN","BPSUTIL2",81,0)
 S FDA(FILENO,RECIENS,FLDNO)=NEWVAL
"RTN","BPSUTIL2",82,0)
 D FILE^DIE("","FDA","ERRARR")
"RTN","BPSUTIL2",83,0)
 I $D(ERRARR) Q "0^"_NEWVAL_"^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","BPSUTIL2",84,0)
 Q "1^"_NEWVAL
"RTN","BPSUTIL2",85,0)
 ;
"RTN","BPSUTIL2",86,0)
 ;API to return the GROUP INSURANCE PLAN associated with the
"RTN","BPSUTIL2",87,0)
 ;PRIMARY INSURANCE in the BPS TRANSACTION File
"RTN","BPSUTIL2",88,0)
 ;Input:
"RTN","BPSUTIL2",89,0)
 ;BPIEN59 = IEN of entry in BPS TRANSACTION File
"RTN","BPSUTIL2",90,0)
 ;Output:
"RTN","BPSUTIL2",91,0)
 ;IEN of GROUP INSURANCE PLAN file^INSURANCE COMPANY Name
"RTN","BPSUTIL2",92,0)
GETPLN59(BPIEN59) ;
"RTN","BPSUTIL2",93,0)
 N IENS,GRPNM
"RTN","BPSUTIL2",94,0)
 S IENS=+$G(^BPST(BPIEN59,9))_","_BPIEN59_","
"RTN","BPSUTIL2",95,0)
 S GRPNM=$$GET1^DIQ(9002313.59902,IENS,"PLAN ID:INSURANCE COMPANY")
"RTN","BPSUTIL2",96,0)
 Q +$G(^BPST(BPIEN59,10,+$G(^BPST(BPIEN59,9)),0))_"^"_GRPNM
"RTN","BPSUTIL2",97,0)
 ;
"RTN","BPSUTIL2",98,0)
GETPLN77(BPIEN77) ;
"RTN","BPSUTIL2",99,0)
 N BPINSIEN,BPSINSUR,BPINSDAT
"RTN","BPSUTIL2",100,0)
 I '$G(BPIEN77) Q 0
"RTN","BPSUTIL2",101,0)
 S BPINSIEN=0
"RTN","BPSUTIL2",102,0)
 ;get the USED FOR THE REQUEST=1 (active) entry in the multiple
"RTN","BPSUTIL2",103,0)
 S BPINSIEN=$O(^BPS(9002313.77,BPIEN77,5,"C",1,BPINSIEN))
"RTN","BPSUTIL2",104,0)
 I +BPINSIEN=0 Q 0
"RTN","BPSUTIL2",105,0)
 ;get BPS IBNSURER DATA pointer
"RTN","BPSUTIL2",106,0)
 S BPSINSUR=+$P($G(^BPS(9002313.77,BPIEN77,5,BPINSIEN,0)),U,3)
"RTN","BPSUTIL2",107,0)
 I BPSINSUR=0 Q 0
"RTN","BPSUTIL2",108,0)
 ;get 0th node of the BPS INSURER DATA
"RTN","BPSUTIL2",109,0)
 S BPINSDAT=$G(^BPS(9002313.78,BPSINSUR,0))
"RTN","BPSUTIL2",110,0)
 I BPINSDAT="" Q 0
"RTN","BPSUTIL2",111,0)
 Q $P(BPINSDAT,U,8)_"^"_$P(BPINSDAT,U,7)
"RTN","BPSUTIL2",112,0)
 ;
"RTN","BPSUTIL2",113,0)
GETRQST(IEN59) ; Return the BPS Request IEN for a BPS Transaction record
"RTN","BPSUTIL2",114,0)
 N BPTYPE,IEN77
"RTN","BPSUTIL2",115,0)
 I '$G(IEN59) Q ""
"RTN","BPSUTIL2",116,0)
 S BPTYPE=$$GET1^DIQ(9002313.59,IEN59,19,"I")
"RTN","BPSUTIL2",117,0)
 ; If reversal, return the Reversal Request field
"RTN","BPSUTIL2",118,0)
 I BPTYPE="U" Q $$GET1^DIQ(9002313.59,IEN59,405,"I")
"RTN","BPSUTIL2",119,0)
 ; Otherwise, return the Submission Request field
"RTN","BPSUTIL2",120,0)
 Q $$GET1^DIQ(9002313.59,IEN59,16,"I")
"RTN","BPSUTIL2",121,0)
 ;
"RTN","BPSUTIL2",122,0)
 ;Return the COB (payer sequence) by IEN of the BPS TRANSACTION file
"RTN","BPSUTIL2",123,0)
COB59(BPSIEN59) ;
"RTN","BPSUTIL2",124,0)
 ;try to get it from 9002313.59, if it was not created yet then get it from IEN itself
"RTN","BPSUTIL2",125,0)
 Q $S($P($G(^BPST(BPSIEN59,0)),U,14):$P(^BPST(BPSIEN59,0),U,14),1:$E($P(BPSIEN59,".",2),5,5))
"RTN","BPSUTIL2",126,0)
 ;
"RTN","BPSUTIL2",127,0)
 ;Return the plan's COB (from PATIENT file) by IEN of the BPS TRANSACTION file and entry # 
"RTN","BPSUTIL2",128,0)
PLANCOB(BPSIEN59,BPSENTRY) ;
"RTN","BPSUTIL2",129,0)
 I +$G(BPSENTRY)=0 S BPSENTRY=1 ;the first entry by default
"RTN","BPSUTIL2",130,0)
 Q $P($G(^BPST(BPSIEN59,10,BPSENTRY,3)),U,6)
"RTN","BPSUTIL2",131,0)
 ;
"RTN","BPSUTIL2",132,0)
 ;Return the IEN of BPS TRANSACTION file by IEN of BPS CLAIMS file
"RTN","BPSUTIL2",133,0)
CLAIM59(BPS02) ;
"RTN","BPSUTIL2",134,0)
 Q +$P($G(^BPSC(BPS02,0)),U,8)
"RTN","BPSUTIL2",135,0)
 ;
"RTN","BPSUTIL2",136,0)
 ;Return BPS TRANSACTIONS for associated primary and secondary claims
"RTN","BPSUTIL2",137,0)
ALLCOB59(BP59) ;
"RTN","BPSUTIL2",138,0)
 N BPSP,BPSS,BPRX,BPRXI,BPRXR
"RTN","BPSUTIL2",139,0)
 S BPRX=$$RXREF^BPSSCRU2(BP59),BPRXI=$P(BPRX,U),BPRXR=$P(BPRX,U,2)
"RTN","BPSUTIL2",140,0)
 S BPSP=$$IEN59^BPSOSRX(BPRXI,BPRXR,1),BPSS=$$IEN59^BPSOSRX(BPRXI,BPRXR,2)
"RTN","BPSUTIL2",141,0)
 I '$D(^BPST(BPSP)) S BPSP=""
"RTN","BPSUTIL2",142,0)
 I '$D(^BPST(BPSS)) S BPSS=""
"RTN","BPSUTIL2",143,0)
 Q BPSP_"^"_BPSS
"RTN","BPSUTIL2",144,0)
 ;
"RTN","BPSUTIL2",145,0)
 ;input: BPS59 - ien of the BPS TRANSACTION file
"RTN","BPSUTIL2",146,0)
 ;returns three pieces:
"RTN","BPSUTIL2",147,0)
 ;COB  = Coordination Of Benefit indicator of the insurance as it is stored in (#.2) COB field of the (#.3121) insurance Type multiple of the Patient file (#2) 
"RTN","BPSUTIL2",148,0)
 ; 1- primary, 2 -secondary, 3 -tertiary
"RTN","BPSUTIL2",149,0)
 ;RXCOB =  the payer sequence indicator of the claim which was sent to the payer as a result of this call: 1- primary, 2 -secondary, 3 -tertiary
"RTN","BPSUTIL2",150,0)
 ;INSURANCE = Name of the insurance company that was billed as a result of this call
"RTN","BPSUTIL2",151,0)
CLMINFO(BPS59) ;
"RTN","BPSUTIL2",152,0)
 N RETV
"RTN","BPSUTIL2",153,0)
 S $P(RETV,U,1)=$$PLANCOB(BPS59,1)
"RTN","BPSUTIL2",154,0)
 S $P(RETV,U,2)=$$COB59(BPS59)
"RTN","BPSUTIL2",155,0)
 S $P(RETV,U,3)=$$INSNAME^BPSSCRU6(BPS59)
"RTN","BPSUTIL2",156,0)
 Q RETV
"RTN","BPSUTIL2",157,0)
 ;
"RTN","BPSUTIL2",158,0)
 ;to determine whether the secondary claim is payable 
"RTN","BPSUTIL2",159,0)
 ; BPSRIM59 - ien of PRIMARY claim in the BPS TRANSACTION
"RTN","BPSUTIL2",160,0)
 ;returns
"RTN","BPSUTIL2",161,0)
 ; 0 - the secondary claim doesn't exist
"RTN","BPSUTIL2",162,0)
 ; 0 - the secondary claim exists and it's not payable
"RTN","BPSUTIL2",163,0)
 ; 1 - the secondary claim exists and it's payable
"RTN","BPSUTIL2",164,0)
PAYBLSEC(BPSRIM59) ;
"RTN","BPSUTIL2",165,0)
 N BRXIEN,BFILL,BPSSTAT2,BPZ
"RTN","BPSUTIL2",166,0)
 S BPZ=$$RXREF^BPSSCRU2(BPSRIM59)
"RTN","BPSUTIL2",167,0)
 S BRXIEN=+BPZ
"RTN","BPSUTIL2",168,0)
 S BFILL=+$P(BPZ,U,2)
"RTN","BPSUTIL2",169,0)
 S BPSSTAT2=$P($$STATUS^BPSOSRX(BRXIEN,BFILL,0,,2),U,1)
"RTN","BPSUTIL2",170,0)
 ; check if the payer IS going to PAY according to the last response
"RTN","BPSUTIL2",171,0)
 Q $$PAYABLE^BPSOSRX5(BPSSTAT2)
"RTN","BPSUTIL2",172,0)
 ;
"RTN","BPSUTIL2",173,0)
 ;to determine whether the primary claim is payable 
"RTN","BPSUTIL2",174,0)
 ; BPSSEC59 - ien of SECONDARY claim in the BPS TRANSACTION
"RTN","BPSUTIL2",175,0)
 ;returns
"RTN","BPSUTIL2",176,0)
 ; 0 - the primary claim doesn't exist
"RTN","BPSUTIL2",177,0)
 ; 0 - the primary claim exists and it's not payable
"RTN","BPSUTIL2",178,0)
 ; ien of 399 - the primary claim exists
"RTN","BPSUTIL2",179,0)
PAYBLPRI(BPSSEC59) ;
"RTN","BPSUTIL2",180,0)
 N BRXIEN,BFILL,BPSSTAT1,BPZ,BPZ1,BPSARR
"RTN","BPSUTIL2",181,0)
 S BPZ=$$RXREF^BPSSCRU2(BPSSEC59)
"RTN","BPSUTIL2",182,0)
 S BRXIEN=+BPZ
"RTN","BPSUTIL2",183,0)
 S BFILL=+$P(BPZ,U,2)
"RTN","BPSUTIL2",184,0)
 S BPSSTAT1=$P($$STATUS^BPSOSRX(BRXIEN,BFILL,0,,1),U,1)
"RTN","BPSUTIL2",185,0)
 ; check if the payer IS going to PAY according to the last response
"RTN","BPSUTIL2",186,0)
 I +$$PAYABLE^BPSOSRX5(BPSSTAT1)=0 Q 0
"RTN","BPSUTIL2",187,0)
 S BPZ=$$RXBILL^IBNCPUT3(BRXIEN,BFILL,"P","",.BPSARR)
"RTN","BPSUTIL2",188,0)
 I +$P(BPZ,U,2)>0 Q +$P(BPZ,U,2)       ; latest bill in AR active status
"RTN","BPSUTIL2",189,0)
 S BPZ1=+$O(BPSARR(999999999),-1)      ; latest bill in any status
"RTN","BPSUTIL2",190,0)
 I BPZ1>0 Q BPZ1
"RTN","BPSUTIL2",191,0)
 Q 0
"RTN","BPSUTIL2",192,0)
 ;
"RTN","BPSUTIL2",193,0)
 ;SLT - BPS*1.0*11
"RTN","BPSUTIL2",194,0)
LASTDOS(BP59,FMT) ;last date of service from most recent claim
"RTN","BPSUTIL2",195,0)
 ; input:
"RTN","BPSUTIL2",196,0)
 ;   BP59 -> claim/transaction
"RTN","BPSUTIL2",197,0)
 ;   FMT  -> Date format indicator (0:MM/DD; 1:Mmm dd,yyyy)
"RTN","BPSUTIL2",198,0)
 ; output:
"RTN","BPSUTIL2",199,0)
 ;   Date of Service e.g. 06/01
"RTN","BPSUTIL2",200,0)
 ;
"RTN","BPSUTIL2",201,0)
 N BPCLAIM,DOSDT,X,Y
"RTN","BPSUTIL2",202,0)
 ;
"RTN","BPSUTIL2",203,0)
 I $G(FMT)="" S FMT=0
"RTN","BPSUTIL2",204,0)
 S BPCLAIM=0,DOSDT=""
"RTN","BPSUTIL2",205,0)
 I $D(^BPST(BP59,4)) S BPCLAIM=$P(^BPST(BP59,4),U)
"RTN","BPSUTIL2",206,0)
 S:'BPCLAIM BPCLAIM=$P(^BPST(BP59,0),U,4)
"RTN","BPSUTIL2",207,0)
 I BPCLAIM]"" D
"RTN","BPSUTIL2",208,0)
 . S DOSDT=$$DOSCLM^BPSSCRLG(BPCLAIM)
"RTN","BPSUTIL2",209,0)
 . S:FMT=0 DOSDT=$P(DOSDT,"/",1,2)
"RTN","BPSUTIL2",210,0)
 . D:FMT=1
"RTN","BPSUTIL2",211,0)
 . . S X=DOSDT D ^%DT
"RTN","BPSUTIL2",212,0)
 . . I Y=-1 S DOSDT="" Q
"RTN","BPSUTIL2",213,0)
 . . D DD^%DT S DOSDT=Y
"RTN","BPSUTIL2",214,0)
 Q DOSDT
"RTN","BPSUTIL2",215,0)
 ;
"RTN","BPSUTIL2",216,0)
 ;Returns the latest Date Of Service for the FILL that matches the DOS the payer returns using 9002313.57
"RTN","BPSUTIL2",217,0)
 ;Both DOS and SUBMIT DATE from the payer are considered when matching
"RTN","BPSUTIL2",218,0)
 ;OUTPUT Variables
"RTN","BPSUTIL2",219,0)
 ; DOS - The latest DOS for the FILL that matches the date returned by the payer
"RTN","BPSUTIL2",220,0)
 ;INPUT Variables
"RTN","BPSUTIL2",221,0)
 ; ECME - ECME number (pointer to #52)
"RTN","BPSUTIL2",222,0)
 ; RCDATE - The DOS returned with the payment by the payer
"RTN","BPSUTIL2",223,0)
 ;
"RTN","BPSUTIL2",224,0)
CLMECME(ECME,RCDATE) ;
"RTN","BPSUTIL2",225,0)
 N ARY,BEFORE,BPSTL,DATE,DOS,FILL,SUBMIT
"RTN","BPSUTIL2",226,0)
 I $G(ECME)=""!($G(RCDATE)="") Q ""
"RTN","BPSUTIL2",227,0)
 S ECME=+$G(ECME),BEFORE=0,FILL=""
"RTN","BPSUTIL2",228,0)
 S BPSTL="" F  S BPSTL=$O(^BPSTL("AEC",ECME,BPSTL)) Q:BPSTL=""  D  Q:BEFORE
"RTN","BPSUTIL2",229,0)
 . I '$D(^BPSTL(BPSTL,0)) Q  ;Bad AEC entry
"RTN","BPSUTIL2",230,0)
 . S SUBMIT=$P($P($G(^BPSTL(BPSTL,0)),U,7),"."),FILL=$P($G(^BPSTL(BPSTL,1)),U,1),DOS=$P($G(^BPSTL(BPSTL,12)),U,2)
"RTN","BPSUTIL2",231,0)
 . I FILL=""!(DOS="") Q
"RTN","BPSUTIL2",232,0)
 . I RCDATE<DOS S BEFORE=1 Q  ;Quit when you get to a date that is earlier than the payment date
"RTN","BPSUTIL2",233,0)
 . S ARY("D",DOS,FILL)="",ARY("F",FILL,DOS)=""  ;Fill arrays
"RTN","BPSUTIL2",234,0)
 . I SUBMIT,SUBMIT'=DOS S ARY("D",SUBMIT,FILL)="",ARY("F",FILL,SUBMIT)=""  ;If the submit date is different than the DOS, include array entries for it
"RTN","BPSUTIL2",235,0)
 I '$D(ARY) Q ""  ;There were no entries in the array
"RTN","BPSUTIL2",236,0)
 I $D(ARY("D",RCDATE)) S FILL=$O(ARY("D",RCDATE,""),-1) ;Get the fill for the matching date
"RTN","BPSUTIL2",237,0)
 I FILL="" Q ""  ;No matching date
"RTN","BPSUTIL2",238,0)
 Q $O(ARY("F",FILL,""),-1)  ;Return the last date for the correct fill
"RTN","BPSUTIL2",239,0)
 ;
"RTN","BPSUTIL2",240,0)
VALECME(ECMENUM) ; Validates the ECME Number 
"RTN","BPSUTIL2",241,0)
 ; Input: ECMENUM - ECME Number to be validated
"RTN","BPSUTIL2",242,0)
 ;Output: 1: Valid ECME Number / 0: Invalid ECME Number
"RTN","BPSUTIL2",243,0)
 ;
"RTN","BPSUTIL2",244,0)
 N NUMVAL
"RTN","BPSUTIL2",245,0)
 S NUMVAL=+$G(ECMENUM) I 'NUMVAL!$L(NUMVAL)>12 Q 0
"RTN","BPSUTIL2",246,0)
 Q ($D(^BPSTL("AEC",NUMVAL))>0)
"VER")
8.0^22.0
"^DD",9002313.57,9002313.57,1.11,0)
PRESCRIPTION NUMBER^P52'^PSRX(^1;11^Q
"^DD",9002313.57,9002313.57,1.11,1,0)
^.1
"^DD",9002313.57,9002313.57,1.11,1,1,0)
9002313.57^AEC
"^DD",9002313.57,9002313.57,1.11,1,1,1)
S ^BPSTL("AEC",$E(X,1,30),DA)=""
"^DD",9002313.57,9002313.57,1.11,1,1,2)
K ^BPSTL("AEC",$E(X,1,30),DA)
"^DD",9002313.57,9002313.57,1.11,1,1,"%D",0)
^^2^2^3140506^
"^DD",9002313.57,9002313.57,1.11,1,1,"%D",1,0)
This cross-reference is used to locate PRESCRIPTION file (#52) entries 
"^DD",9002313.57,9002313.57,1.11,1,1,"%D",2,0)
related to a transaction.
"^DD",9002313.57,9002313.57,1.11,1,1,"DT")
3131210
"^DD",9002313.57,9002313.57,1.11,3)
Answer with PRESCRIPTION RX #
"^DD",9002313.57,9002313.57,1.11,21,0)
^^1^1^3080212^
"^DD",9002313.57,9002313.57,1.11,21,1,0)
Prescription number for this BPS Transactions.
"^DD",9002313.57,9002313.57,1.11,"DT")
3131210
**END**
**END**
